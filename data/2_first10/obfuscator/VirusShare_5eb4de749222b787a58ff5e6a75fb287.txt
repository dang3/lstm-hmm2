xor
ret
xor
mov
jno
sbb
sbb
scas
jbe
push
cld
popf
lock
mov
add
ficompl
xchg
aas
lds
das
fldenv
outsl
lock
mov
ret
pop
iret
and
adc
mov
mov
jb
jnp
pop
ljmp
add
jnp
ss
rcl
ljmp
xchg
in
or
and
lcall
sbb
cwtl
adc
mov
cmp
loope
mov
mov
jb
fildll
jg
pop
cli
and
push
in
xor
in
imul
pop
data16
xor
mov
daa
insb
in
jo
inc
push
mov
adc
push
bnd
movb
xor
daa
fisttps
outsb
sub
ljmp
dec
pop
fmuls
sti
icebp
jnp
call
lea
push
shrd
mov
setne
shld
neg
xor
sub
cwtl
dec
cwtl
push
add
aaa
call
movzbw
jmp
add
pusha
push
lea
jmp
lea
pusha
mov
movb
pushf
pushf
xchg
not
mov
cwtl
mov
not
movzbw
lea
pusha
push
call
call
ror
call
push
lock
std
std
xor
insb
jecxz
stos
ret
jge
inc
sti
enter
bound
pushf
mov
pop
push
ss
cli
jg
in
jge
sub
sarl
jmp
push
aam
push
into
add
in
fsubrs
adc
test
xchg
xor
jle
add
addr16
data16
test
adc
mov
sbb
xchg
sti
ror
jmp
sbb
mov
or
add
test
bsr
shl
lea
add
sub
daa
push
shld
mov
setp
and
ror
shl
add
not
test
stc
mov
call
pushf
lea
je
bt
cmp
pusha
pusha
pushl
lea
je
stc
cmp
pushf
pusha
lea
je
pusha
mov
pushl
lea
jmp
lea
ja
shl
cmp
and
sub
cmc
add
add
pushf
mov
cmp
shl
mov
push
call
repz
jmp
pusha
pushf
mov
mov
pusha
jmp
jmp
movl
lea
call
push
cmp
notl
ret
inc
imul
mov
jmp
sub
and
xchg
sahf
ljmp
call
fcoml
roll
xchg
or
aam
xchg
jo
subl
mov
dec
leave
hlt
addr16
ljmp
sub
outsb
or
insl
pushf
adc
in
mov
jbe
inc
sub
lds
cmc
xor
jl
xlat
lret
int3
push
pushf
insl
adc
bound
jmp
test
push
inc
and
xchg
out
add
dec
js
int3
pushf
push
gs
xor
ret
insl
mov
ds
mov
push
insb
add
xchg
mov
or
xor
inc
jmp
ds
sub
add
pop
popa
roll
mov
out
clc
sub
loopne
dec
jecxz
cld
roll
ljmp
jb
subb
sub
addr16
loope
mull
repz
and
mov
std
xchg
add
dec
rolb
repz
int3
bound
jp
push
movw
pushf
xchg
push
dec
stc
clc
mov
push
shl
not
pusha
lods
cmc
stc
xor
jmp
push
xor
movb
mov
inc
cmc
pushf
xor
bt
pushl
mov
cmc
ror
lea
jge
stc
popfw
pusha
call
not
clc
movb
mov
cmp
lahf
lea
push
jmp
ja
and
out
mov
mov
ds
ficoml
test
adcl
shrl
push
aas
inc
rcll
cmp
jle
hlt
jnp
out
arpl
lods
in
out
xlat
push
ret
cmp
pusha
aad
out
lahf
popa
jmp
hlt
adc
repz
add
sbb
lock
fisubl
fisubl
xchg
jmp
lods
aam
test
xchg
mov
add
sbb
and
cltd
push
subb
sbb
jmp
out
je
push
mov
mov
in
mov
cmp
stos
xchg
sub
lcall
add
mov
das
jmp
popf
js
lret
add
xor
call
cmp
push
insl
xchg
mov
in
jge
jns
cmc
fldenv
add
imul
mov
sbb
cmp
sarb
adc
jl
xchg
sub
jae
inc
sbb
xor
clc
pop
ljmp
mov
or
ja
mov
push
lret
aaa
ja
loop
jg
arpl
cmpsl
mov
jbe
imul
mov
movsl
inc
mov
pop
es
push
adc
mov
lock
sub
lret
xor
subb
lea
jne
push
stos
pushl
lea
jmp
cmp
push
pushl
ret
jne
jmp
lea
jne
bsr
rcl
sbb
mov
not
sub
stc
pusha
rcl
btc
lea
pushf
jmp
bswap
push
mov
pushf
mov
pusha
pushl
ret
adc
adc
ret
xchg
stos
lea
mov
shr
pop
inc
mov
sub
je
jae
ljmp
xor
aam
adc
jmp
pop
roll
aas
pusha
insb
cmp
sub
or
sbb
bound
std
lea
pop
pop
jg
in
sti
jp
int
mov
mov
mov
fidivs
lds
fisubrl
lods
cmp
lods
jns
stc
xchg
add
in
addb
and
mov
adc
jb
fcomps
jle
xchg
jne
lret
dec
sub
lods
or
sub
sub
imul
lea
jp
lds
push
fs
dec
repnz
cmp
pop
pop
xor
mov
outsl
mov
or
stc
push
repnz
test
push
repnz
push
dec
js
enter
cmp
pushl
lea
ja
mov
inc
jmp
ja
mov
jmp
dec
ret
jne
fstpt
fldcw
mov
push
lock
jecxz
xlat
sbb
loopne
cmp
loopne
pop
cmp
cmpsb
xchg
sbb
out
out
jg
jne
mov
arpl
movl
call
jmp
ds
jecxz
aaa
jae
dec
or
inc
bound
sbb
imul
arpl
jbe
out
mov
push
mov
or
mov
sbb
add
pushl
popl
lea
ja
mov
movzbw
push
push
mov
movl
jmp
fistpll
mov
pusha
movsb
and
ds
jp
mov
or
pop
pop
out
aas
adc
loop
jno
pandn
pushl
jmp
xchg
add
jns
mov
fst
iret
jo
fcoms
jb
xor
lcall
inc
xlat
into
mov
dec
loop
iret
xor
and
jge
xor
insl
ffree
sbb
dec
push
les
push
xchg
ss
jns
mov
mov
fcmovb
sarb
js
or
sbb
sub
or
dec
xor
sar
nop
mov
xchg
js
out
mov
xor
pop
mov
pop
arpl
in
xor
pop
outsl
ja
sbb
and
adc
jmp
movsl
scas
sbb
roll
push
js
xchg
mov
add
fmul
mov
push
negb
lret
test
mov
js
in
mov
mov
pop
mov
pop
adc
inc
xchg
into
pusha
sahf
and
insb
jp
inc
lahf
notl
dec
mov
or
pop
sbb
jns
popf
adc
movsb
aas
gs
mov
mov
xchg
movsl
cs
ds
icebp
pop
xorb
lahf
jns
cmp
dec
xor
sysenter
xchg
add
add
mov
push
add
mov
push
add
add
add
push
add
add
pop
stos
lds
push
fiadds
loop
and
ret
insl
dec
sbb
ror
jbe
xchg
push
cmc
mov
pop
cmp
adc
mov
sub
mov
cmp
nop
out
adc
adc
fldcw
cmpsl
push
xor
jmp
cwtl
je
loopne
mov
mov
sub
subb
lret
inc
push
inc
pop
dec
sbb
cltd
sub
inc
mov
or
mov
outsl
loop
push
std
add
mov
pop
sbb
fs
test
js
dec
mov
inc
popa
fistpll
ss
or
aas
dec
push
cmp
or
cmp
aad
mov
mov
cmpb
jmp
sub
std
lahf
mov
inc
stos
mov
sbb
shlb
lods
jns
clc
rcll
xor
and
idivb
or
js
lds
fmuls
fs
call
jmp
std
stc
popfw
jmp
mov
pop
jno
lret
jbe
or
repnz
add
nop
pop
lret
jo
mov
sbb
dec
push
mov
xchg
mov
and
sbbb
cmp
xchg
inc
popa
sub
enter
cmp
iret
imul
inc
outsl
pop
inc
fldcw
and
inc
pop
inc
xchg
mov
mov
mov
andb
mov
adc
insb
insb
inc
sar
cs
cwtl
inc
dec
loopne
int3
dec
jns,pn
xchg
std
outsb
jmp
aaa
jg
loope
sbb
xchg
dec
mov
cltd
and
xchg
insb
addb
pushf
lret
xor
dec
mov
cmc
call
lea
jle
push
pusha
pusha
lea
jmp
add
in
imul
push
inc
imul
aas
pop
sarl
lcall
inc
jg
insl
and
aad
dec
rcll
outsl
push
stos
iret
cmp
popa
mov
mov
mov
jnp
scas
mov
addb
xchg
inc
sub
int
pop
pop
loope
aas
movsl
xchg
movsl
or
sub
cmpsl
bound
inc
and
sbbl
call
pusha
cmp
cmp
pusha
pushl
call
jmp
lea
je
clc
jmp
mov
dec
jg
cmp
or
ret
es
loop
mov
insb
pop
sub
lcall
fisttps
in
inc
mov
mov
sbb
and
xchg
mov
cs
cmp
sbb
xlat
dec
test
push
sbb
loop
jns
push
push
add
loope
es
jnp
jae
push
ja
xchg
out
mov
adc
sbb
or
sbb
add
int
dec
xchg
call
jg
out
icebp
popa
jne
call
and
js
ret
jne
pop
mov
call
cmp
call
shr
cmp
cmc
cmp
pushf
push
jmp
movsbw
jmp
mov
jmp
and
int
sub
xlat
fsubrs
xchg
int
mov
leave
sbb
pop
jo
imul
fsubrs
lret
push
xor
mov
pop
ror
jbe
or
insl
cwtl
js
out
jo
bound
dec
movsb
mov
jb
pop
sub
add
bound
pop
addl
sub
cld
or
xchg
lcall
push
mov
mov
pop
imull
popf
mov
lret
aaa
jbe
fnsave
and
rol
xchg
stos
mov
jno
jns
in
fs
lret
pop
in
ss
inc
pop
xorb
js
ret
or
jb
add
movl
push
jmp
lea
ja
jmp
call
pushf
call
push
xor
lea
pushf
mov
pusha
movw
inc
lea
pusha
pusha
push
lea
call
push
lea
jne
adc
jno
call
call
movl
push
movl
push
pusha
lea
jmp
call
pushf
call
cmp
jmp
jmp
sub
clc
pushf
cmp
call
call
pushf
pushl
pushl
movl
pusha
movl
push
pushf
pushf
pushl
lea
jmp
es
cmc
sti
outsl
psubsw
subl
and
arpl
lea
fimuls
xor
cmpsb
xlat
dec
mov
gs
jg
in
mov
pop
pop
out
mov
pop
add
mov
jecxz
add
call
mov
jecxz
xor
mov
pop
andl
movsb
retw
sbb
mov
leave
cwtl
xor
lahf
inc
or
data16
sti
test
cmp
data16
or
decb
fimuls
pop
aaa
adc
cmp
push
in
aad
push
inc
xchg
and
rclb
arpl
and
cmc
push
movw
add
pusha
push
lea
jmp
xor
movw
inc
pushl
clc
jmp
lea
jne
jmp
cmpb
push
pushf
mov
jmp
mov
shl
jmp
call
pusha
call
lods
lock
outsb
pop
add
add
add
pushw
and
xchg
mov
inc
lock
add
pop
in
leave
int
mov
dec
jb
inc
insb
push
shl
xchg
add
xor
mov
or
out
int3
jecxz
iret
sub
xchg
xchg
call
fstl
mov
int
push
lret
pop
sbb
cmpsl
mov
movsb
mov
mov
imul
sbb
xchg
out
orl
sbb
pop
or
in
mov
addr16
pusha
mov
dec
jo
cmp
faddl
inc
popa
sbbb
es
mov
push
pop
ss
std
mov
cmp
std
or
lea
nop
addr16
js
es
int
out
mov
lods
jge
and
pop
int
adc
add
or
jnp
push
adc
and
subl
ret
ficoms
clc
in
add
and
and
repz
add
pop
sahf
clc
mov
clc
jae
xor
dec
in
rcll
mov
jecxz
xchg
addr16
jmp
fistpl
xchg
pop
jae
jp
mov
ljmp
mov
inc
imul
sbb
pop
sbb
jno
xor
sbbb
jp
repnz
mov
dec
call
rcrb
loop
cld
add
push
jle
shlb
shrb
lods
sub
js
mov
mov
mov
mov
test
cmp
pusha
cmc
test
pushl
jmp
call
push
movl
pusha
pushf
lea
jmp
ret
adc
xor
add
pop
or
xchg
add
cs
xor
insb
mov
mov
shrl
addb
les
cmp
and
test
adc
in
stos
jbe
lahf
inc
ret
loop
push
fstl
cmp
cmp
or
mov
fcomps
out
cmp
or
mov
dec
arpl
jl
mov
out
ss
jbe
push
adc
repnz
insb
inc
shll
push
sbbl
movsl
sbb
call
jb
loop
js
mov
pop
cmpsl
fistpll
xchg
pop
cmp
daa
pop
iret
cmp
cmp
aas
sbb
repz
mov
lahf
mov
xchg
movsb
sbb
lcall
out
adc
js
pop
jecxz
adc
xor
and
sahf
movsb
addb
mov
test
push
scas
lea
sub
sbb
adcb
add
test
cmpb
pushf
push
pushf
lea
jne
rcr
shld
call
stos
cld
test
out
push
call
jle
repz
dec
dec
sbb
aaa
ljmp
cmp
cmp
mov
jne
out
adc
or
js
mov
add
push
pushf
movl
pusha
push
call
sahf
pusha
nop
bound
rcl
cmp
sahf
fcompl
mov
sub
test
aaa
push
mov
cmp
push
sahf
dec
hlt
mov
loop
iret
out
add
or
scas
lods
addl
xor
dec
and
cmovbe
xchg
mov
jb
js
xchg
and
js
mov
xor
xlat
pushl
xchg
push
pushl
ret
push
lea
call
pushf
jmp
pushl
popl
push
pushf
pushl
ret
sar
and
rol
mov
cmp
cmpb
pushf
call
call
pushf
lea
jae
pushf
mov
pusha
lea
jmp
or
pusha
call
pusha
dec
pusha
inc
not
pushl
dec
inc
inc
sbb
sub
xchg
aaa
mov
neg
mov
movb
mov
shld
sar
btc
mov
stc
sub
pushl
pushf
call
pushf
movw
push
pushf
lea
jb
cmp
cmp
push
lea
jae
shl
cmp
mov
add
shrd
cmc
mov
mov
neg
bt
adc
neg
mov
call
pusha
lea
call
pusha
test
cmp
call
add
add
pushf
or
movb
pushf
pushf
movb
lea
je
stc
jmp
mov
push
pushf
movb
pusha
lea
jmp
push
call
mov
movzbw
pop
pushl
pushf
mov
call
movsb
ret
cmp
leave
cld
or
cld
rorl
movhps
sbb
mov
xor
push
adc
popl
sbb
pop
adc
outsl
xchg
xor
out
cs
repz
jecxz
test
std
fistps
mov
xor
push
shl
call
mov
push
mov
add
test
scas
xchg
insb
jge
loope
adc
cmpsb
jmp
or
dec
xchg
sub
sub
pop
gs
mov
fmuls
in
dec
shlb
mov
loope
mov
mov
mov
lret
mov
push
push
addr16
inc
mov
sbb
cmp
mov
push
mov
pop
js
mov
jle
lods
fistpll
push
lea
and
outsb
test
sub
xor
jbe
sub
dec
pop
sub
inc
lahf
mov
jbe
jl
es
mov
mov
das
outsl
mov
std
pop
shlb
movsl
xchg
aaa
fistpll
xchg
or
js
mov
add
popf
stos
push
lea
jmp
call
bt
jmp
pushf
lea
jae
jmp
jmp
pushf
movl
pushf
movl
pushf
mov
pusha
lea
jmp
movzwl
pushf
not
pop
lea
movsbl
jmp
lea
jne
movzbw
movzbw
movb
pushf
mov
pusha
lea
jmp
pushl
lea
jb
test
test
pusha
movw
cmp
pushf
lea
ja
rcl
add
mov
mov
pushf
cmp
pusha
cmp
mov
call
add
dec
outsl
arpl
inc
jb
add
mov
add
pop
gs
nop
cld
or
xchg
mov
lods
mov
mov
std
jns
push
insb
loopne
pop
lea
sub
lock
jbe
popf
sub
adc
push
movsb
stc
addl
xchg
inc
jmp
popa
cmc
mov
inc
sub
pushf
mov
push
mov
jae
loope
lock
sbb
loopne
mov
dec
cs
mov
xchg
or
adc
das
add
jns
std
insl
clc
loop
testl
and
sbb
mov
adcb
mov
mov
lret
setl
inc
pushf
movb
dec
dec
inc
lea
neg
rcl
xchg
shl
neg
btr
bsf
mov
dec
rcl
mov
cmp
push
sbb
shl
mov
push
sub
pushf
mov
pushf
rep
jmp
pusha
xor
adc
and
gs
push
loop
or
loop
cld
adc
in
das
mov
xor
push
sbb
std
pushf
int3
fbld
popf
and
ret
leave
test
test
insb
push
es
dec
xor
call
clc
adc
push
mov
push
popf
repz
cmpsb
loop
fbstp
popf
pop
test
jg
das
dec
cwtl
mov
inc
fisubrl
adc
icebp
sub
add
push
jmp
mov
shll
leave
js
mov
lea
add
push
aaa
popf
not
inc
pop
sbb
jnp
xchg
jne
out
mov
imul
sbb
mov
mov
rcrb
mov
push
pop
push
scas
push
cli
aas
push
xchg
sub
cwtl
mov
xor
jg
pop
lock
repnz
inc
ds
mov
movsb
xor
lea
clc
inc
ret
mov
push
jle
cld
dec
and
nop
add
jno
jl
mov
pop
movb
adc
fldl
mov
mov
add
sets
lea
mov
call
lea
js
pushf
mov
lea
ja
jmp
pusha
cmpsb
jb
int3
stos
cwtl
xor
fs
adc
inc
repz
int
adc
sbb
pushf
fwait
icebp
shll
jg
rcll
pop
jne
push
mov
or
fsubrl
push
jno
sbb
pushf
mov
mov
pushf
pushf
call
mov
lcall
push
jno
adc
gs
jge
jno
out
ja
rclb
xchg
or
es
andl
or
xchg
mov
mov
es
rolb
test
popf
xor
ss
pop
xchg
xchg
lods
mov
mov
or
add
dec
outsl
fwait
hlt
add
incb
rorb
jb
pop
xchg
test
into
jg
nop
pop
ss
repnz
mov
cmc
lret
dec
jne
shl
imul
pushf
mov
jle
neg
bt
stc
call
push
lea
je
mov
xchg
xchg
lea
mov
movsbw
jmp
lea
ss
push
lret
int
adc
lahf
xchg
lret
outsl
jle
negl
push
outsl
aad
je
mov
sub
lahf
inc
jg
mov
lahf
fwait
insl
leave
mov
test
dec
pushf
xchg
in
or
clc
cmp
out
inc
cmp
js
mov
push
mov
imul
adc
int3
lods
mov
push
pop
test
add
call
xor
dec
mov
lahf
pop
mov
jecxz
lret
sbb
aaa
jo
pop
adc
dec
push
jae
fsub
xor
dec
js
ret
lds
stos
cmp
les
mov
mov
rolb
mov
call
add
push
xchg
and
pop
xorb
lock
and
dec
loop
push
jmp
ljmp
jle
fld
xchg
inc
jno
mov
inc
test
pop
fiadds
addb
sub
imul
jmp
or
rclb
aas
dec
mov
sbb
sub
xor
fwait
mov
cmp
sti
bnd
shrb
xor
sbb
and
jae
add
out
or
xchg
xchg
sbb
rorb
call
clc
js
mov
icebp
jecxz
fs
jne
lea
mov
push
pushf
pusha
lea
jmp
call
pusha
pusha
pushf
lea
call
bt
pushf
cmc
sub
jmp
add
ja
mov
or
out
lea
add
xor
inc
push
pop
out
mov
pop
push
jb
push
add
or
inc
xchg
mov
mov
cmp
inc
cmp
fwait
in
out
inc
clc
mov
test
movsl
loope
mov
shlb
cmp
push
mov
pop
stos
cmp
sbb
imul
push
pop
dec
xor
xchg
xlat
fwait
mov
adc
or
jae
cmpl
es
xor
rcrb
mov
fs
rorb
pushf
mov
out
outsl
dec
fildll
loope
mov
mov
dec
rorb
sarb
rcll
dec
push
inc
cmpsb
mov
lock
roll
mov
xchg
and
dec
push
icebp
jno
ret
arpl
mov
and
cmpsl
cmp
xchg
xchg
addr16
xchg
cmpsb
sbbb
stos
incb
pop
jnp
gs
mov
bound
pushl
pusha
not
pushfw
popw
adc
shl
shl
mov
clc
test
test
mov
xor
mov
push
pushf
dec
stc
call
pop
pushf
pushf
movl
call
insb
in
nop
sbbb
mov
in
xchg
jne
mov
mov
adc
adc
or
idivl
jecxz
int
scas
mov
sub
sub
cwtl
push
mov
inc
loopne
int3
cmp
and
mov
std
call
inc
stc
cmc
sub
shrb
js
mov
out
lret
jmp
mov
movzbw
pusha
movsbl
mov
pushf
mov
pushf
pushl
ret
push
pushf
cmc
jmp
movzbw
lea
mov
pushf
cwtl
push
setnp
mov
not
lea
call
setae
shr
sbb
call
lea
mov
xchg
addr16
pushf
loop
fildl
into
mov
lea
inc
lock
pop
push
fstpt
inc
orl
les
imul
adc
push
lods
add
sbb
and
lret
in
addr16
mov
stos
movsb
adc
insl
mov
rcrl
js
mov
mov
and
clc
rcrb
and
in
aaa
adc
pop
mov
shll
fwait
int3
or
fcomp
pop
stc
addb
pop
xor
hlt
and
in
sbb
call
push
fcompl
loop
ret
adc
cmp
mov
shll
stos
das
dec
inc
inc
sti
insl
popa
inc
adc
pop
je
enter
std
jmp
ret
jle
push
test
xchg
js
mov
cmp
fs
ja
jmp
jmp
sti
cld
or
inc
push
outsb
ds
loop
out
imul
pop
mov
xor
enter
in
bound
pushf
inc
add
sub
xor
movsb
xorl
cli
test
lcall
js
scas
lds
popl
push
lea
movzbw
cwtl
mov
movsbw
movl
setns
lea
push
pusha
jmp
mov
lea
jne
pusha
call
dec
stc
clc
jmp
mov
ja
loope
or
pop
mov
add
inc
nop
mov
mov
push
pop
mov
sub
pop
fimuls
aaa
jo
or
lret
pop
add
adc
add
adc
push
insl
xchg
jmp
rcrl
jg
mov
inc
js
scas
js
pop
call
mov
pushf
lea
bswap
mov
mov
mov
pusha
lea
mov
movb
pushl
ret
jmp
mov
pushf
pushf
pusha
lea
jmp
pusha
imul
call
pushf
stos
mov
pushf
push
pushl
lea
jmp
lea
ja
call
lea
jb
call
push
mov
pusha
lea
jmp
lea
mov
not
movzwl
movsbw
bswap
pop
lea
lea
bswap
mov
jmp
pusha
lea
jae
call
push
pusha
mov
push
bswap
call
movl
call
add
dec
outsl
popa
fs
imul
add
into
mov
movb
mov
mov
movw
lea
jmp
dec
add
or
push
mov
fs
mov
sub
aad
and
outsb
push
stc
mov
pop
lea
in
js
aaa
jbe
sub
add
stc
push
insb
out
rclb
jle
out
pop
dec
les
aam
enter
enter
lods
fucomi
repz
movl
pushf
movb
mov
call
test
jmp
movl
pushl
pushf
lea
jmp
jmp
push
lea
jne
setno
pushf
cwtl
movsbw
movb
not
jmp
lea
call
jmp
pushf
lea
ja
setnp
mov
push
mov
lea
pop
jmp
pushf
movb
lea
jb
pushf
pusha
pusha
pushl
ret
jmp
lea
je
movzbl
xadd
mov
btc
add
shrd
push
mov
cmp
cmp
push
test
call
in
call
enter
cli
cld
or
xlat
fwait
jae
cmp
sbbl
mov
test
add
lods
and
xor
push
and
iret
clc
fwait
xchg
mov
jmp
jecxz
xchg
lahf
jno
imul
lods
inc
cltd
push
sub
iret
loop
movsl
jp
call
cmp
xchg
inc
mov
in
xchg
mov
sub
nop
inc
fcomp
mov
pop
cmovno
sbb
pop
out
sub
cltd
add
mov
xchg
xor
inc
insb
roll
sub
jle
sbb
inc
push
jb
insb
jb
inc
adc
xchg
inc
mov
outsl
subl
insl
jge
dec
adcl
pushf
stos
mov
sbb
addl
mov
lea
push
pusha
rol
mov
stc
push
mov
mov
jmp
mov
lea
call
push
sub
shr
add
sub
neg
mov
shrd
mov
call
mov
not
jmp
call
repnz
pushf
call
movb
movl
pushf
pushl
popl
mov
pushf
pushl
ret
xor
pusha
call
pop
dec
jg
dec
cs
xor
sbb
adc
ss
mov
jae
add
lods
pop
push
sub
data16
adc
loop
clc
decb
xor
das
xor
xchg
mov
push
xchg
mov
xor
xchg
push
lea
lea
not
not
movzwl
push
lea
lea
pusha
movsbl
mov
push
jmp
sub
push
movzbw
setl
push
rcl
mov
neg
mov
test
mov
cmp
test
pushf
clc
or
push
pushl
mov
lea
je
bt
or
call
movsl
out
pop
pop
push
and
cli
fs
sub
ret
fs
test
dec
xchg
push
rorb
mov
jns
loope
jnp
test
fsubrs
cmc
push
scas
cmp
inc
sub
jg
xchg
pop
adc
sbb
and
add
sbb
xor
and
jno
in
cmpsb
add
dec
xchg
push
stos
dec
jno
aad
imul
ret
loop
scas
fcmovbe
cmp
lahf
pop
push
mov
shrl
jge
pop
lret
pop
iret
mov
aad
lahf
sub
pushf
test
mov
cld
or
pop
daa
adc
jns
xchg
push
aaa
cltd
das
cmpsl
mov
cmp
loop
pop
lea
mov
out
aaa
jbe
mov
xor
std
xlat
sbb
push
push
adc
gs
lea
xchg
daa
sbb
js
test
fs
jne
aaa
sbb
sub
shld
mov
bt
add
pushf
mov
movb
pushf
test
bt
test
pusha
pushl
lea
je
call
call
call
add
adc
add
xchg
mov
add
add
add
mov
add
sbb
jne
adc
or
mov
add
add
or
lcall
and
mov
je
cmp
rorl
div
das
jns
mov
xor
fs
push
xchg
xor
scas
and
loopne
call
and
or
ret
sub
test
iret
sahf
lahf
push
sbb
adc
jb
mov
call
push
jmp
xchg
mov
xchg
cmc
or
or
repnz
push
add
cs
inc
inc
mov
dec
mov
mov
mov
pushf
test
leave
inc
inc
rcl
xchg
aaa
aaa
mov
dec
mov
cmp
pusha
clc
clc
mov
rol
neg
mov
cmc
pushf
bt
test
sub
pushf
call
pushl
popl
pushf
push
mov
pushl
ret
call
movl
setne
bswap
not
setb
lea
jmp
movw
jmp
lea
jb
push
pushl
ret
pushf
adc
push
push
pushf
lea
jmp
pushf
pushl
popl
movb
pushf
movl
pusha
pushl
ret
jmp
mov
call
clc
cmp
xor
cmc
stc
jmp
jmp
das
sbb
stos
inc
data16
dec
fnstcw
jnp
mov
xchg
mov
test
fs
ja
lret
jo
jb
mov
or
mov
sbb
add
pop
mov
lock
push
mov
mov
adc
add
cwtl
sbb
mov
or
xchg
sbb
seto
lea
pusha
mov
pushf
jmp
movl
jmp
repnz
cmc
mov
xchg
or
fidivrl
mov
fs
inc
ss
fdiv
pusha
jecxz
xor
jns
adc
fsubl
les
stos
aas
dec
das
jnp
push
cmovg
cmpsl
jl
adcl
movb
jns
xor
rcl
sbb
inc
cmpsl
repz
scas
movsl
mov
sti
imul
lock
mov
pop
push
xchg
push
push
call
lcall
mov
js
cmpsb
repz
and
call
pusha
pusha
lea
jne
push
bswap
mov
pusha
lea
jmp
movw
push
movl
movl
jmp
cmp
mov
stc
cmc
cmc
add
bt
test
pusha
jmp
dec
addb
xor
in
icebp
shl
and
sub
xor
movl
and
add
lea
and
push
ja
leave
dec
adc
andnps
mov
fwait
aas
adc
cmpsb
jg
mov
and
call
aad
or
dec
push
xor
or
push
repnz
xchg
adc
test
add
xchg
inc
lea
orb
addr16
lock
push
push
pop
xchg
jge
pop
and
lock
mov
pop
xchg
stos
adc
or
aaa
push
pop
xchg
pop
pop
ror
fmuls
add
fdiv
fs
or
rorl
pop
xchg
jp
cmp
repz
xchg
idivb
add
ljmp
or
stos
sbb
or
cmp
lahf
jge
mov
pop
xchg
stc
mov
or
xor
or
out
sbb
pop
push
pop
xchg
or
jns
mov
pop
xchg
movsl
mov
inc
lods
add
add
hlt
pop
xchg
mov
scas
or
pop
jb
in
or
sbb
pop
add
sbb
add
or
outsl
clc
lret
mov
inc
push
pop
xchg
jp
push
jbe
add
add
jne
fisttpl
subb
pop
xchg
lcall
leave
ret
or
and
xchg
push
mov
pop
xchg
push
fbld
lock
movhps
mov
add
pop
xchg
mul
xchg
movsb
push
or
daa
or
or
sbb
fcmovu
or
dec
push
pop
xchg
adc
or
test
pop
xchg
daa
xorl
or
or
pop
xchg
outsl
add
add
inc
push
frstor
jmp
pop
xchg
jge
and
cmp
pop
xchg
cld
js
mov
jmp
add
repnz
xchg
leave
testb
fdivrl
adc
aas
dec
repnz
push
push
pop
xchg
cmp
add
testl
or
push
and
xchg
xor
lock
push
push
pop
xchg
jle
jns
test
xor
movsl
add
fiaddl
data16
inc
mov
sbb
sub
push
sbb
int
mov
push
pop
gs
push
ret
xor
insb
loopne
push
adc
loop
hlt
pop
lahf
jns
movsb
loopne
dec
sub
daa
out
sub
jg
mov
add
roll
bound
pusha
out
push
jnp
jb
int3
mov
imul
pop
mov
test
jbe
repnz
ficoml
shll
mov
imul
out
adcb
out
pop
clc
xchg
js
mov
jno
fistpll
or
std
pop
icebp
inc
repz
outsb
fucom
loop
fwait
sub
pop
addr16
mov
pop
sbb
pop
sub
ret
rol
jns
negl
call
xchg
jge
push
or
or
mov
inc
rorb
add
mov
sub
sub
movsb
aad
arpl
pop
cmc
sub
add
jge
js
in
add
cmp
xchg
mov
negb
mov
push
push
fistpll
gs
inc
mov
sbb
fldt
add
mov
jge
xchg
sub
loope
maxps
sub
fsubs
or
mov
fsub
mov
scas
jge
push
ret
pop
push
push
cmpsb
xchg
jp
sbb
testl
sbb
test
subl
shr
dec
inc
sub
adc
inc
jge
scas
lock
xchg
sub
fcos
lea
movsl
jnp
sub
mov
shr
fistpll
jnp
stos
mov
or
mov
mov
xor
sub
cli
jns
fnsave
inc
hlt
jo
add
pushf
rol
sub
jnp
fwait
lods
mulb
lods
cltd
pop
push
lods
data16
mov
mov
shll
nop
orl
dec
sbb
mov
lods
mov
inc
or
insb
subb
in
ret
repnz
test
sbb
sti
mov
mov
or
and
imul
xlat
or
inc
repnz
inc
aad
stos
shrb
pushf
call
call
jmp
pushf
pushf
push
mov
lea
pushf
movzbw
lahf
movl
lea
setno
lea
jmp
xchg
push
mov
cli
cld
or
mov
pop
inc
jg
sub
cmp
test
pop
mov
pop
or
lahf
lret
inc
clc
aaa
jo
subb
inc
or
nop
std
cmc
inc
dec
inc
mov
sbb
or
jae
ffree
popf
or
dec
outsl
js
mov
mov
or
in
sbb
shlb
sub
testb
lret
jns
insb
fists
mov
out
adc
popf
pop
xor
aaa
jbe
lcall
or
push
sbb
or
add
xlat
gs
adc
test
mov
push
push
in
inc
shrl
fs
pop
cmp
push
push
xchg
arpl
and
leave
mov
sarl
in
sub
xchg
repz
lock
insb
mulb
insl
clc
cmc
push
xchg
jae
repz
push
insl
mov
push
xchg
or
xor
or
inc
js
mov
call
push
addr16
fidivrl
icebp
xchg
bound
mov
insb
sahf
add
mov
addr16
jns
push
mov
mov
inc
loop
inc
or
aaa
jbe
mov
push
data16
hlt
xor
incb
cmpsb
fwait
inc
or
aaa
mov
mov
js
mov
movzbl
mov
mov
push
lea
jmp
mov
mov
lods
test
clc
movb
xor
movw
call
sub
mov
fildll
daa
in
inc
ret
mov
sbb
lret
adc
je
std
or
arpl
jg
pop
lods
fbstp
or
pop
imul
dec
into
dec
fistps
ss
mov
cmpb
test
int3
mov
pop
rcll
pop
xchg
aaa
mov
shl
stos
adcl
push
fwait
daa
shlb
out
adc
dec
inc
jecxz
add
pop
add
inc
in
jo
xchg
xchg
jmp
mov
les
push
xchg
xchg
mov
shrb
js
lahf
adc
adc
stc
mov
mov
test
jmp
jne
gs
xor
fs
insb
add
lahf
loop
add
adc
test
adc
cmpsl
loop
add
loopne
add
loop
add
adc
add
cmc
test
test
or
jmp
clc
test
pusha
call
cmp
jmp
bts
or
shl
mov
bt
shl
push
lea
je
pushf
mov
push
xchg
jmp
outsl
push
into
xchg
stos
and
adc
pushf
push
inc
mov
pop
cli
pushf
pop
mov
enter
repz
xchg
arpl
mov
stc
push
or
cmp
xorl
sub
aam
aas
push
fwait
xchg
xlat
xchg
add
aam
xor
icebp
dec
into
xorl
push
push
enter
mov
pop
xchg
fcomps
in
add
lcall
loope
fisttpl
call
pop
mov
adcl
out
gs
addl
cmpb
cmp
mov
inc
ss
lock
xchg
jbe
jecxz
nop
out
cmp
fisttpl
decl
cmpsl
adc
sub
aad
add
shll
mov
in
sbb
push
push
dec
sub
and
ret
xor
mov
out
sbb
mov
popf
push
mov
jmp
adc
add
xchg
mov
add
add
add
mov
add
sbb
jne
adc
or
mov
add
xor
pushl
pusha
movb
repnz
call
lock
repz
inc
sti
outsl
pop
dec
sub
mov
addl
push
adc
push
stc
sbb
jnp
loopne
or
in
adc
jle
in
cmpsb
pop
xor
adc
pop
or
inc
outsl
cmp
and
icebp
negb
ds
push
dec
stc
sahf
les
push
push
inc
push
sub
movsb
icebp
loop
in
clc
lods
stc
ljmp
jmp
cmp
push
xor
push
xchg
jns
lods
loope
mov
ffreep
add
xlat
imul
sbb
cmpl
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
fidivrs
add
and
je
movsbw
movzbl
movsbw
not
lea
pushf
call
not
jmp
bt
add
cmc
stc
cmc
jmp
sub
and
nop
or
add
test
inc
xchg
gs
fcmovnb
stos
test
pop
out
jno
pop
or
inc
push
call
dec
mov
clc
hlt
inc
adc
aam
push
inc
fisttps
jl
icebp
imul
xor
imul
mov
cmp
jne
cwtl
enter
outsl
push
pushf
fdivl
jo
pop
test
add
testl
data16
ss
and
ja
sbb
int
cld
pusha
dec
adc
push
pushl
call
movsbw
pop
pusha
push
pushf
pushf
pushl
ret
test
call
lea
jne
movzbl
pushf
movb
lea
pusha
bswap
mov
mov
not
lea
pushf
movl
movb
pushf
pushf
pushf
mov
pushf
push
pushf
pushl
ret
sub
mov
sub
std
and
pop
add
cmp
sub
mov
xor
jns
sahf
fnstenv
cmc
inc
pop
lea
mov
xchg
sarl
xorl
icebp
int
cwtl
lock
iret
sub
add
cmp
and
rep
xchg
push
xor
sub
mov
bt
sub
pushf
pushl
popl
stc
stc
cmp
movw
jmp
pusha
movl
pushf
lea
jmp
sbb
or
dec
and
sub
add
vpmacssww
inc
popa
lock
movsl
das
mov
jecxz
pop
push
shld
or
sbb
test
cmc
cltd
ret
inc
iret
mov
adc
lock
add
scas
pop
push
xor
sbb
push
add
add
adc
sub
ficomps
loopne
outsl
leave
and
mov
jbe
sbb
addr16
lahf
lret
cmp
dec
sub
mov
ret
and
cmp
inc
xor
aad
outsl
popa
aaa
push
add
pop
mov
loop
in
nop
push
lea
inc
xchg
jb
push
adc
sahf
stc
push
push
lahf
ror
pop
pop
fwait
aas
enter
dec
aaa
sub
sbb
mov
loop
xor
pop
xchg
adc
mov
test
adc
fisttpl
pusha
int
cmp
jbe
scas
cmp
lcall
repnz
cwtl
mov
je
mov
pop
sbb
xchg
outsl
or
xor
or
pop
push
shrb
sbb
cwtl
and
nop
int3
cwtl
outsl
mov
in
out
lods
push
and
bound
fsubl
mov
mov
cmp
xchg
adc
clc
jg
shll
mov
and
and
shlb
lcall
xchg
add
mov
sub
lods
xchg
cmp
inc
leave
es
inc
xlat
insl
das
insb
mov
loope
mov
jecxz
mov
push
and
loope
pop
inc
fbld
das
movl
xchg
lcall
gs
inc
shll
ds
out
in
sub
pop
pop
cmpsl
dec
js
cwtl
fldlg2
stos
lea
jb
test
pusha
pushl
movb
cmp
mov
lea
jae
mov
test
btr
push
mov
bts
shrd
mov
bts
xor
rol
mov
bt
cmp
test
jmp
movl
push
push
call
cmp
mov
adc
lret
bsr
push
imul
cmp
mov
jp
mov
mov
xor
ja
push
xor
ret
inc
int
xor
rol
shrl
sbb
cmp
test
push
ret
jmp
pushf
xchg
int
fiadds
add
je
outsl
fs
gs
imul
add
cmc
push
add
pushf
lea
jne
movzbw
jmp
test
or
call
lea
jne
pusha
mov
call
call
movl
pusha
pushf
mov
lea
jmp
jmp
jmp
shll
cmp
fmull
lods
push
jb
shrb
xchg
sub
std
or
sub
in
xchg
jae
loopne
add
rclb
lret
sahf
lahf
iret
pop
scas
imul
js
xchg
adc
test
xor
jmp
movsb
add
loopne
pop
mov
mov
xchg
test
jge
jno
pop
add
lcall
popf
fisubrs
outsb
shlb
gs
mov
xor
movsb
xor
std
and
movsl
fldenv
mov
xchg
add
data16
jg
jmp
call
xor
and
popf
js
xchg
scas
lcall
movl
mov
pusha
push
lea
jmp
movw
jmp
push
not
mov
mov
pusha
push
lea
call
call
in
xchg
cld
or
mov
xlat
pop
pop
lds
mul
loopne
mov
dec
lock
lea
lret
fsubrs
aaa
jbe
inc
out
adc
mov
adc
and
adc
ds
cmp
add
dec
cmp
add
pushf
xchg
jnp
hlt
into
nopl
xorl
sbb
cmp
mov
inc
shlb
out
popf
mov
xchg
adc
pop
push
sbb
xlat
jg
test
xchg
lock
cmpsl
testl
addl
outsb
fsubrl
xchg
add
divb
jbe
lods
pop
out
ja
dec
sub
mov
jecxz
jle
inc
adc
insl
out
sbb
push
xchg
mov
pop
repnz
jg
mov
pop
dec
test
loopne
sbb
mov
lock
nop
js
xchg
lods
jne
xor
jmp
aam
adc
or
mov
clc
stc
shl
pusha
lea
je
pusha
pusha
pushf
pushf
mov
jmp
inc
rol
xor
dec
pusha
dec
shr
stc
shl
shl
neg
not
and
not
dec
xor
pushf
setne
setp
not
inc
sar
setge
cmp
xor
clc
rol
ror
ror
push
mov
stos
pushf
setno
call
movb
call
bswap
push
shl
mov
movsbw
push
inc
bt
mov
inc
push
seta
sar
sbb
add
push
jmp
fisubrl
aam
xchg
mov
mov
sub
test
push
enter
cld
jnp
xor
push
push
mov
mov
mov
lcall
jmp
bound
mov
cmp
fisttpl
mov
inc
inc
fnstcw
lcall
mov
sbb
mov
ja
cs
push
jl
fistpll
add
push
jmp
sub
xor
cld
popf
mov
pop
xor
inc
adc
xchg
fidivrs
sub
adc
fisubs
sahf
arpl
jb
lds
movsbl
pushf
add
or
cmpsl
sbb
pop
movsl
rcr
fld
outsb
fcomi
push
cmpl
xchg
sar
and
imul
flds
sub
add
mov
fcomip
js
xchg
mov
push
sahf
cs
stos
outsl
and
dec
pop
mov
jnp
test
mov
mov
push
sub
mov
jns
cli
mov
insl
clc
movb
pop
push
lods
push
in
fsubl
faddp
test
pop
inc
mulb
int
lea
jb
pusha
movl
pushl
lea
jmp
out
repnz
ljmp
in
mov
push
sub
ret
dec
ss
jle
adc
sub
push
add
push
cmpsb
sub
adc
or
jmp
and
iret
xchg
pusha
pushf
lea
call
pushf
pusha
mov
push
pushf
lea
jmp
adc
ds
adc
xor
xor
cmp
push
sbb
bound
inc
lcall
mov
aad
test
mul
xor
push
ficompl
xchg
pop
or
lea
ja
push
cmc
test
jmp
lea
pusha
mov
pushf
lea
jmp
lea
je
bt
cmc
pushf
call
cld
lahf
jae
push
out
repz
mov
push
ja
iret
sahf
xchg
stos
mov
les
test
inc
mov
daa
test
push
xchg
inc
cmp
arpl
jae
fstpt
dec
cmp
ror
lret
xor
popf
adc
jl
xchg
ret
ret
stc
js
xchg
push
and
call
push
push
pushf
mov
pusha
movb
lea
jmp
pop
movzbw
pop
movsbw
call
mov
dec
and
lret
inc
pop
mov
sub
sti
pop
dec
mov
dec
cmp
clc
add
scas
dec
addl
pop
mov
stos
lds
mov
push
sahf
pop
lods
out
xor
mov
outsl
mov
mov
jnp
aas
cmpsb
or
adc
mov
iret
aaa
push
adc
cmpsb
pop
push
sbb
loope
or
jb
mov
rclb
mov
xor
test
and
std
adc
xchg
xchg
adcb
pushf
pop
lret
and
xchg
adc
fistpll
das
in
mov
jmp
test
pop
std
adc
cmp
je
and
call
hlt
xor
sub
and
jecxz
add
cli
dec
inc
push
push
inc
push
negl
adc
fistps
dec
js
xchg
xor
call
xchg
push
ror
cld
je
push
pop
insb
jbe
xchg
shlb
les
push
jns
int
fdivl
mov
pop
stos
cmp
jo
lret
push
dec
or
cmp
push
jne
sbb
test
das
mov
in
mov
push
addb
mov
cltd
jecxz
icebp
push
daa
rcrl
xchg
popa
jmp
popf
out
lods
jmp
out
outsl
addr16
mov
inc
ss
pop
mov
js
nop
cmp
adc
inc
and
in
dec
call
hlt
pop
popf
filds
xor
cli
cli
cmp
pop
lods
fmull
cld
popa
jo
jns
sahf
push
sbb
pop
lea
shr
sbb
aaa
jbe
push
inc
cmp
mov
cld
aas
xor
adc
and
dec
xlat
jnp
stos
movsb
js
nop
xor
addr16
or
dec
mov
adc
fwait
daa
adc
pop
and
ret
arpl
jp
lods
sbb
int3
mov
or
jb
sahf
add
imulb
fs
sbb
lea
in
adc
repnz
mov
jle
sbb
or
dec
xor
cmp
lock
and
xchg
addr16
mov
ret
arpl
repnz
int
jge
int
push
cmp
stc
js
push
cmp
cs
gs
mov
jb
insl
jbe
mov
insb
sub
xor
and
inc
dec
mov
inc
xchg
and
xchg
xor
icebp
sbb
int
pop
xor
daa
and
mov
iret
cmp
adc
cmp
xacquire
clc
adc
xorb
dec
rclb
sbb
gs
lock
xor
adc
imul
in
jle
daa
out
xor
fstpl
in
dec
jbe
daa
push
sbb
cld
rorb
outsb
dec
cmc
cmpl
insl
idivb
adc
add
sub
jne
and
roll
or
pop
xor
jmp
movsl
jmp
sub
add
popa
pop
dec
add
dec
imul
add
insb
gs
dec
lock
pop
das
sbb
mov
mov
push
inc
loope
outsb
adc
mov
sub
addb
sarl
lds
jp
sub
daa
adc
or
inc
lock
dec
daa
or
ja
fwait
insl
loope
ret
int
stc
or
mov
ds
pop
pop
in
dec
inc
stos
push
mov
stos
push
add
xchg
or
dec
and
push
inc
pop
test
int3
bound
lds
notb
in
mov
cmp
mov
out
movsl
les
dec
jbe
movsl
mov
inc
gs
shr
push
push
mov
mov
add
and
push
dec
sub
jo
div
pop
xor
or
pop
std
orl
fcompl
movsb
lods
or
cltd
mov
addr16
roll
dec
rcl
test
mov
sbb
or
aad
sbb
add
and
xchg
fdiv
xchg
add
inc
push
sbb
addl
push
fiadds
mov
aas
and
xchg
sbb
enter
insb
aas
adc
mov
pop
rorb
out
or
mov
shll
mov
pop
inc
mov
xchg
jno
inc
mov
pop
push
out
jne
jp
add
xchg
pop
adc
push
dec
and
mov
add
mov
add
loop
pop
jb
and
enter
test
or
outsl
cltd
lea
dec
mov
push
mov
pop
dec
fcompl
dec
clc
inc
mov
push
dec
cwtl
lods
jecxz
dec
test
xlat
jl
addr16
movsl
and
insl
mov
lret
daa
or
lahf
add
aad
lods
push
mov
dec
cmpsb
dec
pop
or
out
test
xchg
addr16
iret
dec
mov
or
jo
mov
mov
flds
out
cmp
or
and
sbb
pusha
jns
sub
mov
std
addl
out
nop
xchg
mov
les
out
dec
jbe
ja
xchg
adc
mov
int
dec
jp
lds
jne
fisubrs
sbb
lret
jbe
sbb
jb
add
jmp
adc
pop
out
test
push
mov
ror
cmpps
lahf
subb
pop
sahf
aas
add
jp
pop
push
xorl
adc
add
dec
daa
ds
lcall
dec
test
sub
jp
mov
addr16
rcrl
mov
dec
xor
fwait
lret
jge
adc
sbb
inc
inc
gs
in
scas
pop
mov
add
push
dec
add
in
ljmp
int
mov
addr16
cmpsb
lods
pop
test
cmpsl
and
or
jmp
pop
and
pop
mov
xchg
leave
fs
xchg
mov
lcall
or
xchg
popf
jns
sbb
jne
dec
and
xchg
inc
xchg
inc
or
pusha
mov
scas
sahf
stos
push
mov
sbb
inc
test
mov
stc
push
bound
clc
mov
sbb
test
popa
enter
push
sbb
pop
xor
in
sub
jp
orl
sub
sub
xchg
mov
in
jg
jbe
insb
fcompl
repnz
xor
insb
push
sub
in
outsb
cmp
dec
stos
dec
pop
sbb
mov
add
loopne
fmuls
lahf
mov
packssdw
or
pop
xor
lret
cmpsl
orb
mov
xchg
mov
mov
sub
daa
mov
add
xor
subb
inc
out
cmp
cltd
cmp
pop
out
cmp
and
out
out
das
xchg
out
daa
push
cmp
dec
pop
cltd
bndldx
cmp
push
into
inc
mov
dec
scas
adc
pop
mov
xchg
lret
mov
jb
roll
imul
insb
inc
lds
add
and
add
jle
int
xchg
or
sbb
ss
mov
scas
hlt
pushaw
mov
mov
dec
lds
add
popa
fadds
enter
sub
mov
bound
push
sbb
mov
mov
mov
fs
mov
mov
and
cwtl
pop
leave
push
adc
mov
cmpsl
push
lahf
jb
and
inc
jecxz
xor
push
outsb
imul
sahf
stc
mov
xchg
dec
dec
xchg
dec
cmp
sarl
test
addr16
stc
lds
lfs
push
sbb
xor
in
mov
lock
ret
cmpsl
addr16
adc
rolb
xlat
pop
pop
dec
adc
mov
out
rorl
mov
push
fiaddl
mov
addr16
addr16
dec
cld
xchg
fbld
mov
xlat
gs
mov
loopne
and
testb
in
imul
sub
cltd
mov
push
adc
adc
lods
jge
clc
dec
push
adc
pop
lret
jp
repnz
cmp
pop
sub
and
jl
lcall
in
push
mov
or
add
fbstp
lea
cmp
sbb
add
pop
jb
pop
jae
inc
lods
jae
ret
mov
lea
and
lock
js
call
aaa
dec
cmp
jnp
inc
mov
int3
inc
insl
in
mov
mov
dec
sbb
aaa
out
xor
pop
and
add
sub
mov
repnz
mov
add
pop
adc
outsl
sub
sar
sbb
cs
cmc
popf
pop
inc
xorl
xchg
sarb
mov
ret
loopne
pushf
pop
dec
scas
push
subb
xchg
daa
adc
mov
addr16
pop
or
add
popf
dec
fwait
jbe
inc
mov
div
cltd
sub
pusha
inc
flds
add
dec
insb
add
pop
call
pusha
jle
int3
mov
lret
leave
insb
xor
mov
mov
pop
lea
fnstcw
popf
clc
and
jge
int3
pop
mov
bnd
in
dec
sbb
insl
sub
adc
sbb
enter
xchg
xchg
mov
ja
stc
gs
sub
enter
mov
and
ret
sub
out
push
bound
mov
js
jne
adc
mov
sbb
push
xor
mov
mov
add
adc
leave
dec
in
mov
and
push
inc
fisubrl
sub
jo
mov
cmp
pushf
add
sti
insb
jno
insl
sbb
cmp
mov
into
dec
push
xor
adc
cmpsl
add
sbb
pushf
ror
jae
int3
lods
jns
test
jbe
mov
repnz
cmp
sbb
inc
cmp
ja
add
xchg
pusha
push
pushf
out
cmp
cld
push
maxps
cmpsl
ss
lret
sub
sub
pop
inc
int3
loop
fisubs
dec
dec
inc
push
jns
sub
out
dec
shrb
aaa
lods
or
scas
pop
insl
mov
hlt
or
inc
rcr
inc
lock
clc
sbb
pop
fimull
fcompl
add
cmpsb
mov
mov
adc
add
jns
mov
sbb
mov
add
out
add
pusha
jne
leave
in
pop
lahf
sbb
ret
inc
cld
push
gs
cmp
cmpsb
pop
pop
xor
ficoms
inc
int
daa
push
mov
push
bound
sbb
adc
dec
pop
jne
add
pop
add
push
jae
jo
aad
xchg
sbb
cmp
push
inc
fsubrl
push
inc
repnz
fdiv
mov
cli
pop
pop
stos
xchg
adc
stc
addr16
out
jmp
push
sub
hlt
xchg
mov
pop
push
orl
gs
add
pop
std
cmp
sbb
sbb
mov
jbe
sub
addr16
leave
pop
test
mov
mov
add
int3
mov
aas
mov
les
jle
and
sbb
orb
rcr
xchg
fldenv
addr16
ror
test
sub
mov
lret
lcall
or
adc
inc
mov
add
jle
cmp
or
dec
dec
jecxz
adc
out
sub
test
test
pop
sub
gs
sbb
fstpt
mov
and
notb
pop
lock
insb
mov
add
adc
jo
push
sbb
xlat
ja
fiadds
xor
fnsave
push
mov
sahf
mov
adc
adc
xchg
push
push
sbb
or
adcl
cmp
mov
mov
add
sub
jno
xor
out
lcall
sbb
push
cwtl
push
pop
pop
xor
leave
xchg
sahf
sahf
cmp
das
cmp
and
jnp
sub
divl
jl
pop
cmpsb
test
fwait
push
push
dec
mov
pop
arpl
xor
daa
ss
adc
enter
getsec
into
popa
adc
pop
jo
xchg
mov
add
test
lock
inc
nop
sub
dec
mov
hlt
jnp
dec
int3
xchg
and
dec
enter
ret
imul
pop
mov
xchg
in
dec
sub
das
popa
mov
mov
adc
or
vpsrld
lock
andb
adc
daa
sahf
or
xchg
inc
and
or
pop
mov
add
add
lock
out
xor
orl
lock
test
loopne
mov
sbb
xor
xchg
cmpsl
sub
sub
or
cltd
jb
sbb
inc
adc
pop
test
sub
fstps
or
idivl
scas
mov
cld
adc
imul
fstenv
arpl
adc
into
out
cmp
mov
pop
pop
add
lods
clc
sbb
cld
dec
jnp
cmc
pushf
xchg
inc
std
lret
mov
decl
mov
or
mov
mov
fdivs
lea
push
lea
mov
cs
add
dec
mov
sub
dec
inc
icebp
addl
dec
pop
pop
imul
inc
add
cld
and
cltd
dec
dec
mov
jl
pop
push
fs
xlat
enter
cltd
jle
int
test
mov
andl
xchg
sub
push
dec
out
hlt
mov
stos
xchg
mov
and
movsb
lret
mov
add
push
inc
testl
stos
hlt
jge
test
add
loopne
pop
scas
fidivl
pop
xchg
sub
mov
adc
xchg
xchg
xor
outsl
xchg
out
adc
lea
popf
aam
lods
adc
in
push
pop
cwtl
test
mov
mov
mov
and
aaa
mov
sbb
lea
sahf
sbb
or
or
mov
cmpl
fstps
sti
fiaddl
lea
hlt
cmp
and
in
std
push
test
cmovno
xor
jbe
pop
ret
add
loop
mov
aas
fmuls
mov
inc
fwait
xchg
lods
jo
loopne
fcomip
dec
cmp
jb
mov
ja
cmp
jne
cmp
pop
or
mov
sahf
fisttps
add
icebp
outsb
jmp
pop
add
and
mov
push
aad
cwtl
mov
ljmp
stc
add
daa
sub
mov
push
test
in
mov
sbb
into
push
inc
fcomps
and
add
xchg
add
mov
add
add
scas
or
out
cmp
dec
mov
push
adc
jbe
sbb
mov
or
lmsw
fldl
in
pushf
sub
mov
cmp
add
pminub
adc
jb
push
or
insl
add
inc
dec
push
mov
int3
xlat
andl
in
imul
dec
mov
dec
pop
and
xchg
sbb
fwait
push
stos
les
push
jge
pop
pusha
ret
in
outsb
leave
les
mov
adc
lods
mov
mov
add
add
sub
inc
or
jo
and
jg
scas
popf
lea
stos
xchg
adc
dec
mov
pop
in
sahf
push
sbb
inc
sahf
insl
rdmsr
loop
sti
repz
sbb
popf
cmp
pop
push
icebp
inc
inc
add
add
fs
insb
cmpsb
add
cmc
test
ja
cltd
pop
mov
shlb
lret
adc
add
das
sbb
mov
adc
cli
xor
sahf
fimuls
xor
aad
ljmp
sbb
test
roll
inc
test
stc
add
hlt
push
scas
sbb
cmpsl
jmp
pop
cmp
push
or
or
sbb
aas
das
pop
ja
inc
pop
sub
jge
cmpb
lret
or
mov
cmp
dec
add
insl
dec
fwait
inc
add
mov
dec
shr
filds
pop
std
aam
lcall
jb
adc
dec
popa
je
cs
rcl
xor
pop
psubusw
xchg
inc
and
add
lcall
sbbl
xor
pop
xchg
inc
out
and
daa
push
out
sbbb
add
pop
icebp
xchg
mov
gs
inc
gs
sbb
push
xor
sub
mov
cmp
mov
loope
and
xchg
add
lods
lods
adc
pop
fildll
cld
pop
js
dec
pop
jns
sbb
inc
dec
aam
push
fmul
cmp
enter
and
pop
out
cmp
bnd
outsb
test
and
or
cmp
mov
adc
inc
popf
xor
mov
sub
xorb
arpl
lds
out
mov
cld
mov
fsubs
xor
into
popf
insb
or
test
pop
shlb
lcall
imull
aad
lahf
sbb
xor
lahf
dec
xor
ret
adc
lss
cltd
int3
out
mov
rcrb
jg
insl
in
pop
insl
dec
sub
sub
cmpsl
incb
and
arpl
lcall
add
push
or
clc
bound
jnp
mov
adc
test
sub
out
add
push
dec
inc
lea
mov
sbb
jbe
dec
xchg
mov
lahf
xor
sub
sahf
pop
jnp
into
push
lods
sbb
inc
loop
sub
cmp
lret
push
xor
mov
sub
jns
loope
addr16
aam
jns
jge
sbb
pushf
lret
sub
adc
add
or
addr16
faddl
daa
cmp
mov
lea
jae
comiss
roll
push
lcall
and
xchg
cs
sub
adc
mov
mov
mov
sbb
arpl
icebp
mov
jge
or
inc
sbb
psllq
push
add
jns
lret
adc
insl
cmp
popf
lds
movsb
in
jmp
lea
dec
mov
sub
add
jbe
ss
mov
jge
xor
sbb
movsb
xchg
jnp
push
jo
xchg
scas
test
test
mov
inc
mov
xor
and
in
mov
mov
test
addr16
dec
cltd
dec
mov
jnp
or
repnz
data16
lock
inc
sbb
pop
popf
pop
movb
stc
xor
jne
cmpsl
mov
pop
sarb
xor
iret
lods
push
cmp
mov
andb
push
int
sub
pop
cli
dec
fs
cmp
add
sub
jl
push
add
inc
mov
add
es
mov
fstl
push
dec
ja
fst
cmc
sub
js
and
jb
add
sbb
adc
das
inc
cmp
sub
pop
add
lods
leave
daa
pop
nop
mov
inc
cmpsb
imul
xchg
mov
cltd
out
fisubrl
mov
push
add
cld
add
aam
loopne
jp
mov
sub
leave
int3
out
jae
dec
loopne
or
and
ret
test
xchg
xlat
xor
cmpsb
inc
test
and
int
adc
pop
pop
addr16
mov
pushf
or
mov
addr16
push
add
add
cmp
adc
pop
fcmove
dec
in
cs
test
shrl
sbbl
add
pop
mov
lret
cmc
and
mov
cmp
push
pop
cmpps
add
dec
mov
out
jbe
mov
lret
pop
mov
or
call
dec
out
fdivr
gs
push
daa
mov
cltd
int3
adc
xchg
inc
int3
dec
mov
rcrb
test
nop
punpcklwd
xchg
mov
sub
fisubrl
fildll
repz
jnp
cmp
dec
or
inc
sbb
xchg
insl
xchg
jmp
incb
fidivrs
test
aas
sub
xchg
outsb
out
push
mov
cmp
add
out
int
lcall
xorl
orb
adc
or
inc
sub
mov
xchg
inc
dec
popf
pushf
dec
out
dec
or
mov
xor
mov
jge
pop
cmp
je
pop
fcmovne
mov
push
mov
sbb
adc
loop
rclb
stc
clc
loop
inc
and
mov
add
dec
and
and
dec
mov
cmp
cltd
sbb
or
mov
sub
and
sbb
cmp
mov
mov
or
and
add
aam
dec
and
add
aaa
int3
mov
inc
ja
imul
popa
out
test
or
push
pop
enter
jo
je
adc
mov
daa
sub
pushf
mov
or
xchg
inc
adc
leave
xor
add
in
or
push
push
add
add
adc
dec
lahf
mov
mov
mov
pop
mov
dec
mov
cmp
sub
out
jmp
push
scas
into
dec
jmp
xlat
hlt
out
insb
mov
push
loope
loope
or
cmp
mov
sbb
loop
repz
adc
xlat
add
scas
ret
lods
in
pop
sahf
pop
fsubrl
dec
and
leave
lods
pop
fsubs
mov
mov
fimull
or
or
lahf
inc
setno
cld
mov
sahf
pop
int3
jns
and
les
pop
xor
sub
or
or
cmp
pop
lcall
std
imul
push
loope
add
inc
orl
into
imul
or
rolb
adc
pop
mov
ss
jbe
pop
jle
stos
stc
lret
in
or
int3
jge
decb
or
je
shlb
xor
push
or
dec
cmpsl
or
pop
bound
pop
arpl
ret
sahf
cli
inc
or
pop
ja
popf
imul
outsl
loop
icebp
dec
pusha
leave
mov
sub
sub
and
cmp
sahf
xor
sub
adc
pushf
push
lcall
dec
mov
adc
xor
movsl
aas
sub
add
sub
ret
pop
mov
mov
pop
je
test
lods
or
adc
popf
mov
int3
or
pop
int3
out
xchg
aaa
scas
pop
push
sbb
mov
jns
dec
test
xor
stc
cmpb
mov
inc
pop
shll
and
xor
mov
and
lock
iret
mov
jecxz
movb
sub
inc
or
bound
mov
dec
mov
sbb
pusha
cmpsb
notb
jmp
pop
mov
ljmp
pop
xor
int3
lret
or
cmovbe
std
adc
stos
in
and
add
lret
cmp
cmp
pop
xor
jno
out
inc
les
jl
dec
mov
lods
ficoml
sub
xlat
dec
pop
loope
cltd
pusha
movsl
fnstcw
push
sbb
dec
scas
or
arpl
mov
sbb
xorl
sub
mov
mov
aas
push
in
adc
sub
test
hlt
loopew
pop
mov
ja
lods
jnp
cmp
test
mov
mov
mov
ror
daa
aad
push
fimuls
ret
xor
push
mov
jg
sbb
icebp
mov
fsubrl
dec
out
jg
lea
sub
add
cmpb
fcmovu
stos
mov
jecxz
out
imul
mov
dec
aas
cld
pop
add
inc
lea
je
sub
fcoms
mov
push
lock
add
sbb
xor
push
test
mov
aam
ja
inc
dec
int
sbb
pushf
dec
mov
adc
clc
sub
test
adc
lcall
push
lods
out
or
outsb
cmp
call
lods
mov
push
pop
xchg
pushf
xor
stos
lcall
aaa
outsb
stos
mov
add
aas
stos
enter
xchg
and
iret
popa
cmc
fsub
or
mov
add
dec
aas
pop
cmpsb
repz
pop
dec
jge
dec
sbb
roll
popf
bound
out
pop
sub
cmp
inc
ja
add
pop
in
jg
xchg
fldenv
inc
gs
or
js
dec
lods
dec
ficompl
jo
pop
sub
lock
dec
mov
cltd
push
ret
add
inc
sbbb
sub
test
adc
jno
test
pop
pop
notl
js
push
push
dec
popa
adc
add
and
test
jle
bound
call
add
or
xchg
adc
rcr
and
push
lahf
cmp
sbb
inc
pop
cmp
ror
or
jae
and
jp
sahf
and
popf
pxor
pop
fistl
push
mov
int3
loope
lock
movsl
shll
xchg
idivb
lcall
xchg
insl
jecxz
test
das
mov
leave
loop
mov
pop
sub
rorl
xor
jb
inc
mov
testb
or
mov
pusha
or
insl
xor
decl
in
or
insl
sbb
repnz
mov
adc
les
mov
int
pop
aaa
push
leave
lret
jnp
shlb
xchg
fwait
shl
mov
sbb
pushf
inc
ret
outsb
rcrl
bound
into
push
jno
cmpsb
lret
dec
lods
mov
popa
outsl
dec
cmpsl
add
int
and
mov
push
adc
mov
pop
mov
out
cmp
fldl
repz
inc
mov
xchg
jl
jmp
add
pop
cmp
dec
mov
or
mov
mov
mov
xchg
ljmp
pop
mov
cmp
sbb
sub
idivl
lea
lahf
pop
pop
cli
xbegin
pop
mov
arpl
jno
jp
dec
sbb
insl
jp
lods
dec
mov
and
dec
cmp
pop
std
xlat
or
loop
lock
stc
and
jmp
sub
stos
cmp
andl
adc
aas
test
sub
daa
adc
cld
pop
lock
and
or
pop
cmpsl
push
lea
dec
lret
xchg
jae
dec
negl
repz
xchg
std
inc
jecxz
cmp
jmp
inc
loop
pop
xchg
out
dec
cmpsb
and
cmp
fs
inc
outsl
add
adc
mov
inc
arpl
test
lret
insl
cmp
add
mov
pop
dec
pop
cltd
mov
sub
loopne
adc
cltd
js
imul
add
xcrypt-ofb
cmpsl
stos
jnp
add
jne
jb
sub
test
in
roll
lret
and
adc
push
and
std
and
int3
mov
cmp
repz
pop
and
or
scas
or
clc
imul
xchg
jg
mov
cmp
jns
or
sti
sbb
xor
inc
xchg
sbb
xor
fcompl
mov
testl
xchg
dec
popf
fmuls
aaa
out
add
punpckhdq
movsl
decb
repnz
mov
inc
adc
and
add
jns
add
leave
xchg
ss
call
idivl
test
or
mov
out
and
dec
rcrl
cli
test
ss
cltd
daa
imul
jecxz
and
fs
bound
fiaddl
out
movq
xchg
or
test
dec
sbb
shlb
rcr
lret
sbb
xor
ret
das
cltd
adc
cmpsb
mov
pop
add
addr16
dec
jbe
fisttps
fwait
shl
sub
cmpsb
jmp
xchg
popf
jb
xchg
ret
mov
push
fistl
push
sub
sbb
scas
adc
cmp
or
dec
adc
psubusb
cwtl
push
mov
dec
and
pop
pop
adc
aaa
sbb
popa
pushf
cltd
in
imul
push
dec
out
xchg
adc
cmp
cmp
enter
mov
xchg
and
ja
inc
std
and
pop
in
sbb
stos
lock
sti
push
inc
xor
pop
bound
aam
or
cmp
or
fldenv
push
jnp
pop
add
adc
movsb
sbb
sti
mov
enter
inc
clc
movsb
sahf
jp
outsl
fimull
sub
lea
pslld
sub
inc
mov
add
sbb
in
dec
dec
cmpxchg
cmpsb
scas
mull
sub
cmp
xor
insl
sub
inc
dec
cmp
iret
inc
mov
push
or
pop
lret
push
sub
stos
dec
call
sbb
mov
add
mov
leave
pusha
cmp
out
arpl
mov
and
ret
cmp
sub
adc
pusha
sub
inc
popl
outsl
jge
ret
imul
sub
decl
popa
inc
shll
lods
hlt
or
in
lea
inc
and
mov
outsb
mov
mov
fisubrs
sub
es
pop
mov
fsubrs
pop
xor
xchg
test
jp
jmp
cmp
addr16
mov
mov
popf
xchg
clc
or
mov
dec
into
dec
mov
mov
pop
fisubrl
mov
xor
xor
lods
movups
lahf
aaa
fdivrl
jo
out
fwait
cmp
jno
js
scas
sub
icebp
cmp
mov
lock
orb
test
bswap
sbb
mov
adc
pop
pushf
testl
sbb
mov
sti
cltd
and
jecxz
add
dec
pop
out
mov
and
adc
mov
cmp
arpl
std
xchg
sbb
out
jle
push
jp
outsb
pop
aaa
add
inc
xor
fstps
jns
add
pop
push
and
pop
cmp
add
pop
lret
add
fisttpl
inc
fmull
sbb
adc
je
pop
mov
sub
push
sbb
sbb
lock
ljmp
movl
and
movsl
movb
cwtl
sub
cmp
cmpsl
ret
push
lods
loopne
movsl
sahf
or
jl
dec
pop
and
cmp
test
repnz
daa
xchg
xor
push
ret
mov
sbb
mov
divl
and
fcmovnbe
icebp
jecxz
ja
outsb
movsl
popa
dec
jns
daa
adc
daa
xchg
scas
xchg
ret
dec
in
sbb
sahf
clc
mov
fldt
int3
jge
ret
xor
push
das
dec
mov
into
sub
addr16
sbb
cmp
scas
or
sar
cwtl
xor
mov
pop
inc
inc
xor
and
pusha
mov
pop
sbb
sbb
cli
shll
aad
push
sbb
mov
xor
xor
mov
inc
add
cli
xlat
sbb
stc
jge
adc
mov
cmp
shl
jbe
lret
and
cmp
inc
mov
sbb
adc
outsl
mov
xor
outsb
add
popf
out
cmc
lods
daa
or
cmpsb
push
out
loop
inc
sub
inc
bound
sarl
out
or
jp
pop
lea
enter
xchg
scas
decb
xlat
sbb
insl
dec
and
rolb
hlt
out
dec
addr16
xor
dec
adc
cmc
addr16
sbb
mov
popa
pusha
sbb
shrb
inc
insb
movsl
xchg
sub
jmp
sub
movsl
leave
mov
adc
mov
mov
sbb
das
scas
xor
adc
inc
pop
pop
or
lds
jg
mov
pop
push
mov
lret
fsubs
int
popa
daa
jne
sub
bound
into
mov
mov
icebp
pop
aam
insb
xchg
jmp
lret
cmp
fistpl
and
add
fwait
cltd
into
int
add
movl
cltd
lret
andb
push
and
jg
out
mov
xor
sbb
add
push
insb
cli
popf
push
pop
pop
and
xchg
call
jb
sub
out
mov
sbb
dec
cmp
push
dec
out
lret
into
repnz
jbe
mov
in
enter
inc
sbbb
lods
cmpsb
movlps
pop
icebp
xchg
test
out
and
mov
xchg
loopne
add
or
insb
test
add
shll
ljmp
sbb
insl
dec
ss
cmpsl
add
stos
punpcklwd
push
fisttpl
and
xchg
xlat
xor
cmpsb
ds
jp
pop
fiadds
mov
or
subb
jmp
pop
dec
aaa
xor
mov
les
or
push
fmull
mov
in
andb
mov
jbe
mov
enter
cmpsb
jns
insl
fisttpl
sbb
adc
adc
cltd
ficoms
aam
mov
jp
popf
andnps
int
std
out
push
rcrl
into
lds
xor
sbb
cmp
pop
adc
jno
int
jge
ja
pop
dec
cmp
dec
ficompl
xor
rclb
mov
dec
adc
pop
orl
mov
out
jmp
pop
pop
rcrl
adc
mov
repz
dec
test
xchg
sbb
adc
mov
cmp
adc
in
cmp
int3
add
lea
in
dec
leave
in
mov
pop
out
sub
xchg
push
insl
pop
pavgb
leave
fidivl
aaa
les
outsb
sub
fsubp
xchg
rorb
push
xor
arpl
lods
xor
aad
push
cs
movsl
lea
js
popf
add
cmp
dec
sbb
out
sub
inc
repnz
repz
repnz
ds
insl
pop
jge
inc
and
mov
cmpb
dec
or
sub
cwtl
test
in
notb
pop
or
call
jg
inc
ja
setne
inc
cmp
adc
js
daa
inc
or
and
sbb
jo,pt
pop
mov
out
imul
mov
fstp
cmp
push
out
das
addb
bnd
cmp
dec
fcomps
sub
push
pop
xlat
dec
fldt
xor
loope
aad
mov
pop
mov
pop
pop
or
mov
lret
out
out
xchg
add
xchg
sbb
add
ljmp
push
dec
pushf
inc
push
fcmovbe
xchg
ret
jbe
aam
jmp
lcall
sub
sbb
pop
add
jb
popa
iret
fnstenv
adc
int3
jle
popa
mov
in
out
push
add
in
push
or
lcall
pop
jns
call
out
nop
movsb
add
adc
cwtl
pop
dec
cmp
xlat
jge
xchg
lahf
ds
sbb
dec
sbb
std
dec
push
jge
add
adc
or
mov
sub
mov
mov
jle
xchg
push
push
ja
add
dec
pusha
call
jns
xlat
pop
mov
mov
inc
popf
aaa
sub
push
and
insl
sbb
out
cmp
pop
inc
add
sbb
cwtl
cmpsl
pop
outsl
insl
shr
xchg
push
sbb
sub
cltd
idiv
stc
bound
sub
fwait
out
out
inc
daa
aas
add
and
sbb
and
iret
sbbl
fldt
mov
pop
jno
xchg
icebp
stos
inc
dec
cld
lock
fmul
icebp
cmp
scas
mov
mov
mov
sbb
lods
add
xor
movsl
lods
push
push
sub
in
bound
xchg
daa
dec
sub
push
fmuls
cs
mov
outsb
das
loopne
xchg
inc
aaa
sbb
push
fidivl
xchg
push
inc
add
pop
push
outsb
dec
out
inc
fwait
outsl
push
decl
aam
arpl
outsl
sub
inc
sub
call
cmp
mov
pop
insb
stc
incb
sbb
leave
or
and
sbbb
cld
sub
jns
or
jmp
adc
jo
xor
fisttps
sbb
pop
jnp
add
aas
mov
leave
xor
adc
scas
mov
into
lret
sbb
pop
loopne
aaa
imul
xchg
add
ss
lret
sahf
cmpsl
sbb
out
aas
xchg
fadd
ds
push
add
dec
flds
xchg
sbb
in
mov
fisubrl
mov
movsl
sbb
pop
sbb
jmp
mov
cmp
lret
dec
xor
inc
mov
std
cwtl
dec
inc
mov
dec
push
leave
add
xor
jp
mov
imul
dec
jl
pop
insb
lea
inc
add
in
mov
lahf
test
dec
jge
lea
pop
mov
subb
loope
mov
add
in
fs
and
xchg
loope
dec
jge
dec
fsubr
leave
test
pop
cltd
adc
mov
inc
ficoms
cltd
in
out
bound
data16
cmc
fs
xchg
ljmp
cld
call
int3
fisubl
and
in
mov
in
dec
xchg
out
or
mov
add
dec
out
xor
idivl
xchg
fwait
movsb
jbe
cmp
mov
add
pop
mov
sbb
pop
push
jbe
dec
push
popf
and
and
aas
mov
mov
mov
xchg
into
mov
or
mov
fwait
loop
mov
jb
jbe
sub
sbb
push
les
push
inc
fisttpl
lods
test
out
mov
xor
dec
mov
popf
outsb
jmp
pop
test
sbb
adc
lahf
stos
and
lock
cmp
mov
xchg
jae
jg
in
addr16
mov
pop
imul
dec
mov
popw
mov
add
sub
addr16
or
int3
scas
cmp
adc
fs
js
inc
pcmpgtd
lods
adc
pushf
jbe
fwait
push
cmp
sarl
daa
jp
sbb
inc
inc
jl
sbb
mov
mov
xchg
xchg
int
mov
aaa
gs
pop
fistps
push
stc
ss
int3
push
push
dec
or
mov
xlat
mov
lods
loopne
outsl
out
jl
fcompl
adcb
fs
cmpsl
add
and
adc
outsl
popf
sub
jmp
ret
xlat
add
mov
lret
int3
leave
or
and
sub
adc
mov
mov
aas
and
xor
mov
fdivl
in
mov
mov
out
pop
jb
sub
outsb
fistpl
mov
dec
int3
xor
xor
mov
lret
movups
roll
cmp
lea
in
int
add
cmp
enter
aam
adc
es
mov
leave
cs
loopne
pop
dec
scas
adc
out
daa
pop
inc
cwtl
jbe
das
sbb
and
adc
into
dec
les
outsb
adc
xchg
popf
xor
incl
shrb
sub
shll
xchg
mov
sbb
inc
test
xlat
cmp
inc
test
fnsave
sub
cmp
and
pop
daa
sub
dec
add
test
xchg
popf
aaa
call
pop
addl
mov
inc
in
lds
leave
lods
jge
addr16
xchg
sub
pop
dec
loopne
push
mov
pop
sbb
mov
inc
setl
cmp
push
lret
jb
xor
sbb
pop
and
push
sbb
dec
dec
std
icebp
fisttpll
dec
test
mov
adc
push
cmpsl
popa
sarb
rcll
imul
out
out
xor
popa
mov
jae
dec
and
orb
mov
insl
out
adc
lahf
adc
cmpsb
push
pop
pop
adc
movl
negl
cltd
mov
ret
jo
addb
inc
insb
pushf
pop
jmp
sbb
sub
leave
mov
int
push
add
pushf
cmpxchg
or
xchg
ret
add
addl
aam
xchg
or
jmp
lret
pop
lcall
stc
mov
sbb
jl
mov
jb
insl
jnp
xsha256
cmpsb
aam
stc
jge
mov
inc
mov
dec
dec
idivb
cltd
outsl
jns
incb
pop
push
test
jo
add
aad
fwait
enter
and
sub
loope
test
imul
leave
cltd
sbb
push
in
lret
cli
inc
mov
imul
out
xor
pop
pop
push
sub
test
cltd
out
sub
inc
fcomip
or
mov
out
das
popf
push
jae
inc
mov
scas
cmp
dec
popf
mov
push
or
xchg
sti
out
cs
jge
in
inc
fcoms
out
mov
xchg
mov
sub
push
sbb
aaa
lret
inc
fdivrl
mov
loopne
out
mov
cwtl
mov
rorb
cmp
add
fiadds
aaa
inc
push
pop
int3
and
ret
dec
push
inc
cmp
lods
jo
test
cltd
mov
dec
push
inc
pop
bound
pop
dec
icebp
jge
mov
xchg
pop
out
and
pop
mov
jle
push
shrb
jo
test
sub
mov
lcall
aam
pop
mov
and
xor
push
adc
cmp
inc
mov
nop
ret
sub
test
push
rorl
out
sti
xlat
sbb
sbb
popf
sbb
ret
jne
sbb
sub
stos
pop
jle
mov
cmp
mov
frstor
inc
push
adc
add
or
xchg
pop
pushl
cmp
mov
dec
cwtl
push
xchg
cmp
sbb
or
cltd
fiadds
add
xchg
cltd
jb
out
sbb
in
dec
jae
pop
mov
stos
out
clc
mov
lcall
out
inc
jmp
les
mov
push
ss
int3
sub
sub
ljmp
mov
mov
pop
xchg
sub
pop
into
dec
int3
insb
mov
pop
xlat
mov
adc
pop
dec
dec
mov
xchg
addr16
gs
mov
inc
inc
clc
daa
jae
scas
pop
scas
mov
lods
insb
cmpsl
inc
lds
mov
hlt
movsl
out
lret
add
jae
and
push
sbb
inc
mov
movsl
jo,pt
daa
xchg
mov
adc
rclb
cmpsl
pop
xchg
fnstenv
mov
pop
cwtl
mov
loope
xchg
jnp
in
or
mov
loope
cmp
mov
mov
jne
iret
pop
bound
and
mov
sti
insl
push
adc
int3
inc
test
xchg
lret
and
jl
inc
shlb
jp
jl
repz
je
inc
push
sbb
imull
adc
jecxz
inc
push
mov
xchg
mov
sub
pushf
cmp
sbb
inc
and
xchg
out
jmp
stos
cmpl
ret
jb
loope
sbb
sbb
cmp
sub
inc
les
ja
aas
pop
adc
ja
inc
stc
xchg
add
xor
xchg
sahf
rolb
dec
out
inc
dec
jp
lods
xor
notb
fwait
push
xchg
repnz
pop
inc
sub
jge
mov
dec
dec
maskmovq
imull
cmp
lret
pop
cld
jle
jge
sbb
repnz
inc
jbe
cld
pop
sahf
sbb
pop
push
mov
test
add
pushf
daa
int3
dec
pushf
leave
cmpsb
pop
inc
int3
scas
dec
pop
cs
movsb
add
mov
inc
ds
fs
std
js
enter
js
push
repz
imul
ss
call
jg
mov
lret
mov
mov
lret
sub
and
mov
xor
push
repnz
jns
in
int3
movsl
ss
mov
pop
dec
pop
test
scas
mov
push
js
cmpsl
xchg
add
jo
fisttps
dec
out
xchg
push
sbb
pop
xor
dec
sbb
daa
mov
repnz
pop
mov
mov
loope
clc
mov
cmp
lcall
insb
push
push
ds
fdiv
pop
jge
dec
jo
into
lods
mov
ret
mov
or
sbb
gs
pop
pop
stc
lock
and
lret
jae
mov
cmp
xchg
dec
adc
pop
icebp
mov
sub
adc
jp
loopne
mov
sbb
jne
pop
inc
sbb
sbbl
cmp
add
mov
sbb
pop
mov
xchg
fdivs
jl
add
sbb
mov
pushf
adc
dec
lret
jle
and
in
inc
aaa
sub
mov
mov
xchg
mov
mov
sahf
stc
aaa
xchg
incl
pop
sub
les
lods
sub
or
out
add
pusha
or
mov
or
jo
out
inc
mov
sti
or
bound
adc
mov
inc
push
jle
stc
mov
cwtl
sub
sbb
pop
or
out
and
pop
push
jmp
jno
sbb
jne
add
jae
dec
inc
pop
stc
sub
push
mov
mov
or
fsubrs
jnp
ret
cwtl
cs
fldenv
push
dec
xor
in
mov
aaa
push
cmp
icebp
in
xor
incl
add
out
or
push
pop
and
xchg
mov
and
ret
jno
pushl
shrb
dec
mov
test
mov
add
imul
xchg
scas
rcr
add
test
lods
nop
ljmp
sub
repz
pop
inc
xchg
jbe
jnp
jae
jns
mov
movsl
test
test
mov
xor
or
addr16
or
ja
jae
jno
lcall
xor
mov
jecxz
push
adc
movsb
sahf
leave
or
mov
xchg
inc
pop
iret
movsb
jecxz
and
sbb
sbb
dec
and
mov
pusha
mov
std
fwait
icebp
mov
inc
or
ja
push
in
sbb
push
insl
sti
cmp
jg
aas
xchg
inc
pop
xor
mov
xchg
add
jp
mov
cmp
jns
cmp
push
add
and
mov
or
jge
sbb
cmp
mov
cmp
jno
inc
mov
ret
bound
insl
cltd
dec
lahf
xor
jl
inc
jbe
and
nop
cwtl
or
ds
and
mov
in
jg
cwtl
jp
aad
or
dec
add
fimull
mov
ds
adc
out
xorl
mov
dec
getsec
ja
mov
mov
or
stos
imul
aam
inc
mov
pop
inc
push
int3
inc
data16
push
fs
ret
adc
stos
enter
sahf
mov
pop
add
and
mov
jns
imul
sub
fcos
jb
jnp
mov
cmp
scas
mov
setns
cmp
ss
rcr
and
sbb
sar
inc
sub
outsb
push
sbb
add
sub
js
pop
pop
xor
call
xlat
stos
xlat
divps
pop
lods
cmc
arpl
mov
push
dec
or
subb
dec
ds
cmp
pop
adc
leave
mov
std
bts
push
insl
movsl
lret
ret
xor
out
std
and
inc
or
pop
ds
pop
add
xlat
in
in
insl
xor
insl
imul
std
add
pop
mov
cmp
xor
pop
cmp
add
xor
cmp
scas
inc
mov
ficomps
je
push
pop
lods
inc
fmull
addr16
stos
ds
test
cmp
mov
imul
movzbl
mov
imul
push
dec
scas
les
in
pop
jb
popa
loope
sub
jg
sbb
jae
dec
movsl
jmp
pop
dec
xchg
mov
cmp
adc
inc
std
sub
sahf
and
lock
or
mov
jg
adc
xchg
lahf
pushf
jns
dec
mov
sbb
test
xor
mov
adc
lret
pop
faddl
loope
jmp
sbb
lock
mov
in
jae,pn
divps
pop
mov
mov
adc
cltd
iret
std
bound
and
pushf
push
loope
sbb
shrl
jbe
inc
xlat
mov
push
jns
jo
les
dec
and
shlb
int3
stc
negl
outsl
xchg
or
aad
lret
std
fidivl
lret
mov
dec
xchg
pop
mov
dec
loope
push
mov
movsl
sub
or
cmp
das
ds
mov
aam
icebp
sbb
push
mov
xchg
mov
pop
mov
subl
cmp
sti
add
mov
add
push
sbb
adc
push
xor
lods
or
rclb
cmp
pop
std
inc
movsb
mov
insl
or
dec
pop
call
xor
fildl
mov
inc
pop
jp
mov
flds
int
fisttpll
jecxz
adc
xchg
pop
mov
jle
out
push
ret
pop
mov
aas
sbb
lcall
inc
and
add
stos
pop
mov
xchg
or
fadds
cmpsb
mov
cs
or
add
sub
mov
rcll
add
pop
push
out
or
push
sbb
or
and
add
sub
mov
or
aad
xchg
push
and
aad
pop
add
inc
sub
sbb
adc
adc
add
push
add
mov
cmp
mov
inc
sub
pop
adc
leave
pop
pop
pop
pop
popf
pop
or
cltd
xor
sbb
jecxz
inc
and
inc
ret
xchg
or
or
mov
dec
sub
fstpt
pop
xor
cmpsl
mov
add
lds
pop
cmp
jl
inc
or
and
sub
or
dec
or
pop
or
adc
mov
and
mov
mov
fstpl
sbbl
adc
dec
adc
and
push
arpl
sbbb
and
mov
inc
sbb
stos
adc
add
movsl
sbb
sbb
fld
add
sahf
adc
pop
adc
inc
or
pop
xor
and
out
jmp
bndldx
cmp
fcmovnbe
and
in
or
adc
arpl
in
aas
pop
add
sub
and
sub
jmp
sub
sbb
sub
cmp
or
pop
add
mov
adc
sbb
cmp
stos
bt
cmpl
add
add
pop
cmp
adc
add
mov
sub
bound
sub
pop
and
pop
add
ds
and
cmp
sub
mov
cwtl
xchg
inc
sub
adc
es
sub
inc
cmp
sub
or
jne
mov
insb
cltd
cmpsl
inc
and
dec
mov
cltd
mov
pop
pop
sub
divb
incl
xor
xchg
mov
and
iret
int3
lock
lods
aas
mov
dec
aas
mov
xchg
int
testb
ljmp
cmp
add
cmc
call
and
add
jnp
frstor
gs
sub
jl
xor
lcall
stc
mov
cmp
or
cmp
push
push
push
inc
stos
mov
sub
scas
mov
idivb
dec
test
sahf
lret
fsubl
inc
jno
inc
mov
mov
pop
fisubrl
lock
inc
push
sbb
push
in
mov
mov
and
mov
cmp
mov
dec
mov
and
jbe
cmp
pop
inc
add
sbb
xchg
lods
nop
fcmovnu
out
mov
sub
mov
xor
into
mov
pop
js
adc
orl
popf
dec
push
mov
dec
cmp
addr16
mov
adc
mov
add
push
mov
xor
mov
lret
dec
mov
and
xchg
enter
pop
adc
pop
jecxz
hlt
jno
and
ja
in
loopne
add
call
jbe
dec
mov
add
pop
rcrl
xlat
jne
subb
mov
mov
adc
dec
pop
std
jbe
lahf
ss
and
mov
dec
js
adc
pop
ja
add
test
sbb
xor
adc
leave
clc
imul
test
sbb
xor
sub
push
ud0
bound
dec
pop
sbb
popf
jp
mov
sub
sbb
jp
mov
das
in
out
and
movsb
push
aaa
in
cmp
mov
xor
xor
push
xor
icebp
dec
mov
mov
aaa
sbb
cmpsb
jns
mov
ret
xor
mov
shlb
fildl
cmp
push
dec
xor
xchg
add
sbb
mov
xor
lret
out
pop
dec
icebp
or
out
pop
mov
jecxz
inc
adc
shrl
mov
inc
jnp
daa
sub
jae
addr16
fmuls
out
stc
mov
ficompl
dec
popf
pop
jle
sub
mov
leave
sti
gs
dec
insw
jns
cltd
insb
add
mov
and
enter
ds
or
jge
loopne
fistl
mov
dec
xor
dec
cmpsb
sbb
das
orb
cli
out
fabs
mov
lea
mov
int
jbe
pushf
out
add
insl
outsl
mov
inc
iret
fistpl
and
add
loop
cmp
insb
loop
std
mov
fwait
xlat
addr16
jg
inc
je
xchg
rclb
arpl
sub
scas
ret
mov
gs
mov
push
mov
sbb
jbe
repnz
pusha
fisubrl
repz
adc
es
popf
es
or
adc
fsubrs
push
mov
idivb
mov
add
jge
pop
and
push
std
pusha
xor
sbb
xchg
mov
mov
incb
cmp
pop
mov
sbb
jo
jbe
adc
sub
push
psubw
jge
or
das
stc
movl
in
mov
cmp
jge
mov
imul
dec
and
repnz
test
or
push
pop
xor
dec
adcl
or
add
sbb
add
movsl
js
sub
stos
icebp
adc
or
sbb
jge
faddl
jo
aaa
imul
xor
mov
xchg
inc
je
push
fdivrs
rcrb
mov
cmpb
xor
pop
popf
jp
or
push
roll
bound
icebp
jp
rcrl
xchg
ds
sbb
scas
jae
sub
pop
lcall
das
addb
sbb
mov
outsb
mov
jge
fwait
jp
sahf
or
cld
bound
in
jge
test
fcomps
into
add
or
test
add
mov
mov
jne
push
jl
xchg
lret
cmp
mov
leave
inc
movsb
inc
dec
jbe
cmp
getsec
out
cmp
pop
cmp
xor
in
mov
push
mov
mov
loope
daa
dec
outsl
mov
inc
cmp
mov
aad
fbld
xchg
jno
les
fisubs
popf
adc
add
jle
pop
testb
sbb
or
imul
stc
jle
out
pop
icebp
or
mov
scas
pushl
aaa
bound
cmp
sbb
add
adc
sub
mov
xor
les
jns
xor
out
aaa
rcrl
outsb
das
in
fwait
ret
insb
sbb
push
hlt
cmpsb
addr16
inc
adc
fwait
mov
xchg
jo
sub
lods
or
sub
cmp
jo
repz
fstps
inc
xor
xor
adc
add
movsl
inc
mov
lds
mov
cld
shlb
shll
cmp
sub
call
push
xchg
sub
loopne,pn
sub
push
pushf
mov
cmpsb
xchg
shr
and
pop
sbb
jbe
or
sub
xor
lods
adc
or
scas
daa
add
inc
imul
jo
lret
into
notb
cmp
in
outsl
add
cmc
dec
loop
cmp
push
pop
faddl
pop
jno
jp
xchg
jne
push
daa
xchg
dec
xchg
out
jno,pt
mov
jge
ret
inc
loope
pop
sub
mov
sahf
jge
insl
dec
and
jne
stc
sub
adc
add
or
push
dec
mov
aam
pop
dec
icebp
pop
lods
inc
jge
xadd
push
jle
pop
add
mov
push
jns
mov
and
adc
mulps
and
or
xor
test
mov
aam
mov
cmp
lods
mov
gs
mov
cmp
aaa
push
das
dec
sub
xchg
mov
loope
dec
dec
xchg
push
ja
jne
xchg
mov
dec
adc
addl
push
fmull
stc
test
add
dec
test
and
pop
xlat
cmp
sub
jp
pop
dec
push
aad
insl
loope
cli
xchg
cmc
aad
and
hlt
pusha
jmp
aaa
sbb
roll
pusha
xchg
aaa
and
ljmp
pushf
icebp
mov
mov
sarb
test
mov
mov
jne
test
stc
adc
pop
fbstp
cmp
loopne
jmp
mov
mov
js
mov
stc
mov
mov
scas
jb
pop
jge
das
and
add
xchg
jnp
or
push
or
push
push
popa
negb
inc
out
sub
mov
ud1
scas
add
sub
sub
lds
jno
pop
leave
les
sbb
sarb
ss
fidivl
sti
mov
orl
mov
fldcw
cmp
std
clc
pushf
dec
jecxz
mov
push
xor
jns
jge
loop
xchg
cld
test
jno
lods
adc
push
jl
testb
xor
andl
xchg
lret
pop
flds
test
lcall
xor
lds
hlt
lea
xor
dec
into
add
es
dec
push
mov
mov
xor
setb
adc
arpl
arpl
mov
es
icebp
add
addr16
dec
pop
mov
out
addr16
icebp
ja
mov
lcall
cmova
test
xchg
lods
push
and
xor
jge
jle
in
mov
jle
std
negl
xrstors
mov
cmp
fnsave
jno
pop
pop
cmp
leave
ljmp
inc
push
inc
clc
mov
cmp
ds
add
or
out
inc
add
mov
popa
and
add
bound
lahf
lret
js
jns
bswap
and
int3
test
add
pop
daa
or
pop
jmp
jbe
xchg
pop
sbb
adc
mov
test
leave
jno
mov
mov
jge
out
out
add
inc
sahf
adc
icebp
or
dec
aaa
xchg
fadds
cmp
add
ror
push
test
push
sbb
cwtl
mov
minps
stos
xor
movaps
push
xchg
scas
sub
push
jne
cmp
or
into
ficomps
or
mov
in
fsubl
mov
je
stos
mov
cmp
cmp
ss
int3
sub
sbb
add
aas
inc
in
inc
push
wbinvd
mov
scas
mov
inc
mov
hlt
xchg
lret
pop
inc
stos
rclb
popf
and
test
lods
xrelease
cmp
mov
out
insb
mov
pop
mov
xor
imul
pusha
dec
xchg
sbb
ret
pextrw
scas
out
push
xchg
jle
insl
sub
or
xchg
in
or
adc
push
add
add
cltd
aam
mov
sahf
fldl
inc
insl
inc
push
or
js
jmp
jl
add
imul
and
mov
jbe
data16
mov
xchg
mov
pop
cmc
dec
jg
adc
mov
sbbl
push
mov
adc
out
inc
pusha
push
sbbb
push
iret
adc
dec
adc
flds
les
aaa
shll
lods
in
add
sub
inc
or
lock
arpl
xlat
or
and
ret
xchg
sbb
lea
rcr
mov
dec
jns
sbb
pop
cmp
push
add
mov
or
rclb
sbb
cmp
or
pop
jge
push
dec
sub
mov
stc
stos
jg
imull
pop
aaa
popa
add
sub
inc
popl
lods
mov
cmp
out
mov
mov
leave
sub
sub
jne
xchg
fmul
cmp
sub
loop
test
sahf
cmp
or
shrd
push
dec
pop
in
es
cltd
ret
xorl
xor
cmp
test
icebp
ret
or
pop
std
cmp
jge
repnz
ja
sub
fiaddl
adc
daa
inc
sahf
outsl
inc
sbb
retw
repnz
add
sub
mov
push
mov
adc
adc
fsubs
cltd
jno
sub
fimuls
sbb
push
repnz
xlat
lret
sub
cmpsl
out
outsl
cmpb
push
ficomps
stos
inc
pop
xchg
jb
or
xchg
inc
sub
ret
dec
into
add
ficomps
jne
ret
xor
adc
jbe
inc
or
call
hlt
in
xor
int3
push
fsubs
aaa
cld
jo
lods
dec
jb
dec
movsb
test
insl
mov
fwait
ds
leave
jbe
loopne
lea
mov
xor
jge
pop
or
sbb
inc
adc
syscall
or
lret
into
cwtl
mov
mov
push
pop
in
jb
ja
xchg
outsl
pop
adc
push
lea
inc
adc
jecxz
es
cmp
out
inc
jmp
add
leave
pop
inc
dec
xor
out
push
push
scas
pop
xor
pop
imul
ds
sbb
out
lds
lea
lock
sbb
in
roll
mov
jo
mov
xor
in
sbb
push
mov
or
daa
rcrl
les
push
sbb
in
cmpxchg8b
dec
out
mov
popa
ljmp
addr16
xchg
into
movsb
sbb
stos
icebp
or
fildll
int3
stos
and
ja
xor
adc
or
stos
cmp
or
xchg
push
out
adc
dec
das
mov
dec
aas
pop
inc
mov
out
adc
sahf
pop
sub
test
cmpb
jno
sub
shll
outsb
mov
xchg
ds
dec
mov
xor
jle
test
dec
inc
pop
dec
inc
mov
mov
test
insb
mov
pop
sub
mov
push
xor
mov
or
arpl
dec
push
fists
pop
mov
xchg
sbb
add
adc
cmp
xchg
push
push
jne
adc
in
cmp
sbbl
ficoms
fsubl
and
aaa
add
faddl
push
cmc
ja
aas
mov
les
or
adc
outsb
push
mov
fidivs
inc
adc
mov
pop
mov
sbb
dec
push
sarb
sbb
cld
pop
loop
jl
pop
icebp
xchg
test
andnps
add
pop
sahf
call
test
sbb
jb
mov
les
sub
aam
mov
dec
inc
std
dec
test
push
std
cmp
sub
xchg
aas
iret
pop
aaa
push
aas
add
inc
orb
pop
and
cmp
adc
dec
sbb
pop
xchg
push
jns
adcb
mov
pop
mov
popl
lcall
psllw
test
xor
xor
or
adc
dec
sub
cmc
sbb
inc
sbb
ret
divl
add
xchg
cmp
out
inc
jb
fldenv
sahf
cmp
imul
int3
in
rcll
lea
jmp
inc
dec
maxps
push
mov
inc
adc
dec
dec
add
push
psllq
out
sbb
pop
orb
repnz
cmpb
xor
and
sub
xchg
or
fsubrs
mov
push
and
je
aas
sub
sub
adc
insl
jns
sbb
xchg
int
push
pop
xor
call
mov
lock
adc
jge
int3
xor
jb
out
pusha
dec
mov
pop
js
add
cs
push
sub
pop
sbb
movsl
ja
inc
mov
and
push
rorl
and
aad
fsts
add
fildll
push
lock
fcoml
push
std
pop
add
cltd
xchg
inc
adc
repz
movsl
push
xor
mov
sub
sub
sbb
pop
or
mov
push
sbb
jp
push
adc
subl
stos
pop
and
das
dec
push
sbb
add
mov
sub
icebp
add
cmp
lahf
and
lea
mov
in
les
push
popa
lret
sub
lea
dec
and
mov
mov
and
push
adc
adc
jle
cmp
pop
or
or
pmaxsw
dec
mov
arpl
or
mov
fidivl
pop
xchg
and
outsb
xor
jns
mov
jmp
cmp
int3
and
dec
movsb
movsb
add
xchg
jb
sti
cltd
clc
popa
dec
jo
inc
into
xor
jno
mov
js
adc
and
mov
popa
iret
add
leave
or
aad
sbb
andl
cmp
sub
rcrb
xor
in
icebp
pop
call
icebp
push
add
insl
mov
add
inc
pushf
mov
imul
sbb
pop
sbb
pusha
cmp
fmull
sbb
mov
negb
test
inc
push
roll
loop
jno
and
idivb
xor
fs
push
mov
fcmovne
cli
jle
orb
setb
sbb
and
loop
lcall
xchg
aas
or
loop
mov
inc
cwtl
jnp
xchg
mov
or
iret
pop
push
jg
lock
or
idivl
mov
or
idivb
xchg
adc
clc
loopne
imul
out
cmp
movsb
push
bswap
mov
adc
adc
mov
xchg
fisubrs
les
mov
adc
repz
cwtl
leave
or
inc
fnstcw
cmpsl
adcb
mov
shrb
leave
mov
push
jmp
and
inc
cmp
pop
dec
lret
and
adc
and
fsubr
bound
pop
mov
push
xor
cltd
mov
pushf
lock
and
adc
inc
imul
loopne
pop
lods
ds
push
nop
enter
divb
mov
dec
mov
pop
leave
push
push
dec
lret
cs
fsub
pop
jne
loope
sbb
inc
nop
addr16
movsb
sub
inc
testb
xor
addr16
lret
and
dec
call
sbb
cld
jo
mov
push
or
pop
dec
psubsb
jle
xor
notb
aaa
sub
jb
mov
add
into
rcrb
jae
scas
ja
xorl
mov
insb
cmp
test
adc
add
push
cmp
scas
mov
test
leave
je
ud1
jo
mov
out
ret
dec
push
pop
out
adc
jae
jmp
stos
push
pop
or
add
mov
mov
inc
std
imul
mov
jle
fldt
loope
add
testl
out
mov
inc
cmc
push
outsl
or
cltd
cmp
cmp
xchg
add
add
out
aaa
popa
out
pop
dec
pop
jecxz
fstpl
jbe
rcll
mov
sbb
dec
sbb
clc
les
sbb
bndldx
and
mov
enter
cmp
aaa
insb
insb
insl
outsb
test
sbbb
ja
cmp
jo
js
inc
and
jne
cmp
por
push
out
mov
popa
ret
loop
imul
add
xchg
pop
cmp
icebp
push
out
and
loope
pop
push
pop
jge
insl
call
fwait
shll
xchg
mov
into
movaps
ds
push
arpl
movsb
enter
dec
out
mov
out
pop
or
aaa
shlb
cmp
pop
mov
push
addl
adc
aaa
xchg
movl
dec
dec
mov
add
in
sbb
mov
mov
adc
add
scas
ljmp
sti
adc
outsb
mov
mov
es
adc
mov
in
sbb
dec
imul
inc
mov
nop
outsb
bound
call
push
xchg
mov
cltd
jns
sub
pusha
jno
inc
mov
idivb
pminub
nop
adc
mov
out
mov
sbb
jmp
test
adc
xorb
lret
mov
jb
xor
fstpt
xchg
mov
jmp
cmp
pop
inc
lcall
or
mov
inc
sahf
int3
out
cmpsb
repnz
cmp
leave
arpl
daa
mov
adc
and
jp
push
test
lods
push
test
icebp
push
ret
test
add
dec
pop
pop
sbb
stos
filds
jl
adc
xlat
pusha
push
sub
xchg
push
jmp
pop
and
push
mov
jmp
outsb
pop
dec
pop
xchg
pop
mov
leave
and
loopne
jae
js
je
int3
sub
inc
adc
adc
dec
xlat
ja
adc
sbb
cmc
dec
xchg
mov
jg
nop
je,pn
stos
sub
inc
test
mov
pop
mov
mov
fidivrs
mov
lcall
test
mov
jge
mov
loope
mov
mov
xlat
add
js
xchg
or
ja
ret
cmp
idivb
loop
jnp
jo,pn
sar
cmpsl
or
cmp
insb
lea
pop
mov
xchg
jle
stc
mov
jle
pop
out
and
or
dec
sub
test
push
xchg
test
pop
jg
push
pop
and
sub
jnp
fwait
arpl
jns
and
sub
mov
xchg
int
data16
idivb
push
or
dec
adc
cmp
jl
sub
and
sub
and
mov
pop
add
add
sub
adc
out
inc
test
mov
inc
flds
and
call
cwtl
ss
cltd
insb
or
andb
sub
xor
inc
and
pop
lret
insb
pop
sub
or
scas
dec
les
ss
sub
dec
dec
inc
popw
add
cmp
ss
mov
movsb
inc
cmc
cmp
pop
pop
adc
aam
cld
dec
push
out
shll
and
int3
jmp
lahf
test
or
push
outsl
test
jb
ret
insl
xor
ret
lods
xchg
or
push
jns
outsb
jp
lret
aas
sahf
ja
dec
and
out
mov
xor
lea
in
inc
clc
or
mov
pop
subb
out
mov
pop
imul
add
add
pushf
insl
adc
push
or
pushf
xchg
shlb
fmull
arpl
int
fistpll
fdivp
repz
pop
ds
jno
lea
mov
movsb
fxch
mov
push
mov
cld
sbb
shrd
rcl
or
and
xlat
loopne
int
out
movl
lods
sbb
das
leave
cltd
ja
aam
xchg
imul
pop
inc
daa
aas
pxor
mov
jns
cmp
test
xor
fcompl
les
pusha
mov
outsl
sub
fmul
and
mov
int
in
gs
leave
add
sub
mov
cmp
sub
xchg
cmp
mov
je
or
dec
xchg
push
adc
ds
xor
cmp
jne
dec
mov
mov
out
out
leave
dec
adc
or
push
pop
dec
inc
pop
int
inc
and
int
ret
mov
jo
fisubrl
jns
into
mov
cmp
repnz
add
scas
sub
adc
sbb
call
daa
dec
into
inc
dec
mov
mov
in
mov
inc
xchg
add
daa
sahf
sbb
fisttpll
popa
aad
mov
flds
xor
mov
adc
jmp
ds
inc
xor
je
or
fs
mov
mov
adc
addb
sti
lods
das
lods
popf
jb
or
lret
in
mov
ds
out
cmp
nopl
jmp
push
lock
ds
cs
les
push
push
into
mov
out
sub
jg
push
aam
pop
into
lock
pop
xor
mov
clc
cmp
inc
cmpsl
add
loop
testb
mov
sbb
pop
int
jg
push
cmpsb
adc
stc
push
or
and
ja
decb
pop
xadd
jecxz
fmuls
adc
out
loope
sbb
or
push
mov
mov
dec
out
add
add
fisubl
xlat
lret
pop
mov
enter
test
fbld
arpl
adcl
iret
ffreep
adc
xor
xchg
sub
rcr
mov
stc
outsb
and
or
in
pushf
inc
inc
cwtl
dec
and
mov
out
mov
dec
aad
cltd
scas
jns
movsb
jno
mov
movsb
subl
mov
add
mov
push
jge
lahf
and
pop
mov
mov
cmp
mov
or
sahf
into
punpckldq
or
mov
pop
pop
push
in
fidivs
sub
or
stos
ss
xchg
lret
test
xor
sbb
dec
into
decl
sbb
xor
es
out
adc
push
dec
push
sbb
iret
rcl
xchg
sarl
pop
test
cmp
adc
scas
sbb
mov
pop
cmc
adc
add
imul
orb
test
mov
mov
inc
ds
push
push
mov
imul
insl
adc
ss
xchg
into
sbb
mov
filds
mov
popa
dec
or
mov
popl
ss
roll
mov
fadds
insb
lods
call
hlt
sub
sbb
divb
add
data16
loopne
mov
and
cmp
repz
dec
jb
adc
ljmp
sahf
insl
inc
xor
sub
lea
cwtl
pop
pop
mov
dec
sub
sbb
out
pop
test
scas
lea
adc
imul
sbb
inc
out
lahf
lods
and
out
icebp
or
and
popa
test
scas
test
fisubrl
dec
lods
jecxz
movl
dec
jge
mov
in
xor
int3
sub
sbb
dec
and
dec
add
inc
fcoms
into
xor
xor
addb
les
sub
pop
cwtl
lahf
push
pop
mov
in
adc
jecxz
jge
dec
push
adc
jnp
jno
cs
or
scas
push
les
adc
out
and
add
bound
dec
push
pop
lret
das
xor
push
fnstenv
pop
scas
dec
push
dec
xor
lret
xchg
out
xor
rcrl
push
mov
push
dec
scas
out
imul
sub
movsb
sub
pop
mov
push
inc
inc
inc
adc
or
or
mov
sbb
lcall
icebp
mov
movsb
push
mov
lcall
mov
push
mov
sbb
cmp
stos
data16
ds
cmpb
lea
jbe
sbb
sbb
ret
sub
iret
stos
xor
inc
mov
cmpsb
jge
jae
push
jb
popf
fildll
aaa
lock
dec
in
movl
lret
xlat
sub
int3
jmp
sbb
lods
mov
mov
sbb
ficomps
ret
in
add
xchg
fisubl
xor
xor
cmp
mul
xchg
cmp
ds
lods
loopne
cwtl
cmp
js
cltd
sub
xlat
add
or
stc
mov
sub
mov
fildl
add
sub
in
add
jns
inc
inc
xor
xor
lock
les
xor
enter
loope
bound
mov
inc
cltd
or
int3
jp
sbb
mov
xor
jbe
sub
adc
pop
out
inc
arpl
jle
jg
jmp
push
xchg
xchg
sbb
mov
negb
sub
xor
scas
push
mov
out
rcrb
xlat
sbb
test
dec
and
scas
arpl
bound
shlb
fs
mov
mov
int
sbb
fcmovbe
scas
cmp
popa
xchg
add
sahf
mov
sbb
mov
adc
mov
call
mov
adc
mov
in
mov
addr16
inc
pop
cli
xchg
negb
mov
icebp
or
icebp
xchg
bound
mov
mov
pop
dec
loope
add
sub
mov
lods
push
pop
xlat
dec
add
bound
mov
fdivp
mov
add
inc
jnp
je
orb
push
scas
scas
je
andl
jo
mov
pusha
dec
imul
cmp
jl
clc
mov
push
sub
pop
push
shl
mov
mov
subb
scas
xor
sub
pushf
add
fnstcw
jp
lods
out
adc
and
fldz
mov
test
push
xor
cwtl
mov
loopne
clc
add
fadds
sbb
jge
out
nop
jns
mov
sub
pop
mov
push
int3
mov
or
xor
leave
pop
loopne
sbb
out
mov
pop
jne
mov
imul
stos
mov
in
xchg
dec
lds
pop
popf
lods
push
clc
push
cmp
lods
popf
mov
lcall
orl
xor
mov
les
lcall
or
out
xchg
sub
call
arpl
cld
xchg
fbld
add
leave
mov
xor
stos
jb
xor
xchg
adcl
jge
sahf
xchg
outsl
mov
pop
inc
xor
cmpsl
push
sbb
imul
js
dec
scas
mov
leave
adc
and
mov
les
andb
je
add
jnp
inc
sub
repz
xor
or
clc
xchg
sahf
ss
rorl
lldt
sub
cld
adc
pop
pop
and
out
ss
pop
not
aaa
movl
dec
leave
sbb
dec
sub
mov
cs
loope
mov
rclb
xor
push
mov
jno
fbstp
imul
lods
pop
jbe
jmp
push
fsubs
sub
sub
mov
adc
or
cmc
xor
add
iret
and
jb
ret
pxor
mov
pop
xchg
gs
mov
add
add
jno
xchg
cwtl
pop
lds
insl
jb
loope
test
xchg
mov
testb
test
or
adc
inc
data16
movsl
and
mov
aaa
fsubrs
ret
cwtl
test
lock
jo
imull
repz
mov
or
cwtl
and
lea
pop
xchg
cmp
adc
hlt
and
push
fcompl
pushl
andps
dec
nop
arpl
test
stos
out
mov
jae
dec
orl
cmp
mov
in
jl
jb
div
mov
sbb
add
addr16
shlb
setge
das
pop
or
pop
fst
lods
jnp
pop
ret
int3
jae
mov
aas
mov
inc
rorb
in
test
int3
les
pushf
mov
jge
in
xchg
cmp
cwtd
cli
hlt
popf
xchg
arpl
std
xchg
adc
mov
leave
lret
cmp
nop
xchg
sub
les
test
add
leave
jmp
jbe
push
std
pop
inc
adc
sbb
push
mov
test
pop
xor
xchg
mov
jne
add
adc
sub
xchg
pop
mov
inc
pop
out
fsubl
jge
dec
mov
test
inc
pushf
jp
cs
lret
add
cmp
inc
mov
sbb
dec
inc
sbb
lret
mov
adc
lcall
ret
sbb
xchg
jp
fstpl
scas
or
fsubrp
or
stos
xchg
sbbl
je
jg
adc
xchg
popf
cmpsb
cmp
or
and
sbbl
sbbl
pusha
mov
mov
mov
push
or
and
fs
pop
jge
out
add
imul
pop
les
jmp
mov
cwtl
or
lods
test
or
mov
pop
lock
scas
push
js
mov
test
push
add
xchg
cmp
mov
adc
jecxz
sub
cmp
mov
inc
inc
sbb
xor
out
xor
xor
push
add
in
ret
out
enter
and
mov
mov
inc
pop
cmp
insl
cpuid
rol
cmp
ss
je
fmull
dec
push
xor
lret
fldenv
sbb
mov
xor
scas
mov
out
xchg
mov
dec
mov
cmp
sub
addr16
aaa
mov
shrl
inc
pop
dec
mov
mov
loope
add
mov
inc
fisubl
jge
in
dec
idiv
imul
ds
xchg
mov
xlat
xlat
popf
sub
adc
or
push
pushf
mov
mov
add
jp
sahf
jg
sbbl
push
dec
scas
ret
xchg
insl
jnp
sbb
xlat
push
mov
inc
dec
ret
mov
lcall
jnp
dec
push
mulb
test
lcall
icebp
test
add
mov
inc
xor
xchg
icebp
mov
sub
lcall
add
test
lret
imul
jl
jmp
lods
dec
and
lods
fsubrl
and
fistps
jo
sbb
icebp
cmp
divb
push
push
add
mov
dec
jp
jmp
or
sbb
or
sbb
mov
sbb
pop
add
xor
sbb
jne
or
test
sub
popf
push
add
sub
out
shrb
jbe
es
sub
mov
jae
insb
jp
sbb
popl
orl
xchg
pmullw
jno
jp
xlat
adc
pop
in
pop
pop
sbb
das
mov
bound
adcb
mov
push
cs
mov
mov
mov
sub
push
movaps
daa
mov
sub
jmp
ljmp
jl
nop
add
push
add
push
aaa
add
in
jno
imul
iret
mov
lret
jae
popa
add
push
test
popa
bound
addl
add
sub
insb
imul
jg
cmp
icebp
scas
push
fisttpl
jno
repz
sbb
sti
dec
push
dec
push
xlat
ret
xor
or
adc
sbb
push
push
enter
ret
sarb
test
pop
and
pop
cs
mov
sub
pop
or
push
sbb
aam
add
imul
or
sub
and
sbb
subb
hlt
rclb
sub
cmp
pop
xlat
pop
int
sub
jno
push
sbb
aas
push
push
les
sbb
adc
push
lahf
jp
add
lods
and
dec
sbb
cmp
pop
mov
inc
xor
adc
sub
cmp
lds
and
or
jbe
or
sub
and
orl
fisttps
lret
xchg
add
jb
add
sbb
xchg
sbb
xchg
shrb
outsl
sbb
aaa
aam
xor
add
cmp
push
mov
inc
add
and
sbb
add
inc
adc
and
push
out
inc
and
ds
sub
mov
xor
adc
aaa
and
push
pop
xor
out
cmpsl
xor
add
inc
or
add
pop
add
sub
movsl
aaa
or
and
sbb
push
lahf
cmp
cmp
xchg
pop
sub
mov
sti
pop
sbb
adc
and
mov
test
pop
push
xlat
or
dec
sub
add
sbb
or
sbb
xlat
or
imul
xor
pop
daa
pop
add
or
sbb
inc
or
sbb
push
inc
daa
sbb
stos
mov
and
cmp
mov
adc
jns
or
sub
inc
and
lods
adc
or
adc
and
sti
jmp
loopne
sbb
rorb
aam
roll
mov
push
lods
idivb
out
inc
pushf
mov
cli
dec
iret
out
add
mov
sbb
xlat
ds
ret
loopne
nop
enter
hlt
sbb
outsb
dec
and
add
mov
xor
mov
jmp
cmpsl
inc
lods
jle
movsb
adc
mov
or
std
rcrl
in
adc
sbb
cmpps
jg
xchg
xchg
xor
add
mov
movsl
push
shll
inc
mov
test
push
dec
pop
push
pop
mov
and
or
jbe
cwtl
jp
lds
xor
jne
and
sub
into
lret
jo
fidivl
cmp
jl
paddb
pop
sbb
fsts
call
xchg
out
lds
shll
jnp
mov
pop
outsl
lds
sub
lret
mov
loope
sub
inc
push
pusha
mov
pop
std
sti
dec
jo
into
shl
ret
pop
pop
and
ficoml
and
lea
sub
fnsave
mov
ret
xlat
outsb
jbe
pushf
std
sbb
bnd
std
int3
bound
or
xchg
loopne
mov
push
adc
ret
pop
fdivrl
inc
addr16
fadds
jbe
and
mov
out
out
jmp
cli
movsb
and
daa
or
and
or
mov
inc
jnp
leave
paddusw
cmp
push
dec
int3
xor
cmp
les
adc
lea
inc
cmp
sbb
les
cmp
cmp
ret
dec
adc
jg
push
test
imul
lods
jo
idiv
fsubrl
inc
ret
pop
push
cmpsb
cmp
addr16
mov
xor
sub
xor
out
inc
mov
ret
push
jbe
jle
sbb
adc
stc
aad
cmc
xor
jmp
lldt
pop
loopew
outsb
add
xor
lret
pushf
xor
sub
iret
sub
pop
mov
gs
filds
cs
push
push
add
movsl
add
test
push
dec
loop
aad
add
adc
ficoml
lret
movsb
insb
pop
jno
push
addr16
pop
mov
or
mov
adc
jmp
stos
fsubrp
cmp
test
adc
sub
xchg
inc
ret
jae
mov
lret
add
cmp
out
movl
inc
jge
dec
fiadds
mov
push
lahf
and
inc
pop
dec
mov
xchg
mov
cltd
pushf
pop
cmp
popf
pop
in
mov
int3
icebp
dec
jl
imul
mov
sbb
xor
lds
repz
movl
out
lret
hlt
divb
scas
add
ja
insb
mov
movl
lret
fimull
lods
shrb
jl
push
das
pop
pop
cs
sub
lods
sub
cltd
mov
mov
mov
xchg
add
daa
repz
das
iret
cmpsl
pushf
adc
mov
and
test
cmp
jmp
aam
outsl
jp
inc
js
syscall
push
jno
inc
sahf
adc
jbe
lret
stos
dec
push
iret
cltd
inc
ret
mov
lods
in
insl
mov
or
jbe
push
cwtl
pusha
aas
in
inc
clc
lds
out
mov
aaa
int
cmp
cmp
mov
jbe
clc
cli
cwtl
lds
add
add
mov
cmp
mov
aaa
add
mov
gs
imul
push
jecxz
or
test
dec
aam
push
loop
shl
or
loopne
sub
jo
sbb
push
repnz
and
and
inc
xchg
pop
or
stos
mov
mov
stc
sub
dec
out
js
dec
sub
cmp
bound
jb
shrb
into
std
push
jmp
cmpsl
in
sti
lahf
dec
scas
pop
call
xchg
mov
dec
sahf
mov
pop
repnz
sbb
cmp
ss
and
add
cmp
outsb
jno
jmp
pop
movl
fimull
jne
ficomps
shufps
add
dec
add
mov
xor
insl
out
sahf
stos
inc
and
sub
sarl
call
push
sub
dec
clc
out
dec
psadbw
insl
push
and
adc
push
subl
sub
loop
mov
lea
cmp
mov
mov
xor
ret
sbb
inc
mov
int
sub
cmovnp
out
add
inc
sbb
mov
mov
sbb
fsubr
sbb
leave
jb
jnp
ja
roll
test
outsl
mov
or
aas
out
in
pop
mov
adc
popa
mov
xchg
xor
jbe
lds
imul
daa
xlat
cmp
mov
add
mov
push
mov
fdivrl
sub
outsl
fdivl
push
ficomps
ja
inc
mov
adc
daa
add
fdivrs
push
arpl
lret
and
ret
sub
jl
addr16
insl
cli
dec
daa
pop
aad
fdivrl
dec
push
mov
movl
dec
mov
and
jnp
adcb
jge
idivb
pushf
sub
addr16
xchg
testl
mov
dec
jo
movsb
cwtl
push
cmp
ljmp
aam
mov
lret
mov
out
iret
icebp
mov
cmc
fsubrs
and
dec
sbb
mov
dec
scas
repnz
outsb
in
mov
je
out
les
cli
jns
mov
fcomp
dec
call
fistl
jge
pop
and
fwait
push
pop
out
or
addr16
jns
or
pop
icebp
cltd
jbe
cmpsb
jp
scas
pop
std
lret
aaa
xchg
pop
mov
sub
mov
and
add
scas
lret
sub
fdiv
and
sbb
mov
scas
and
push
pop
in
orl
push
mov
xor
fs
seto
mov
idivb
mov
adc
push
sbb
test
jne
aas
outsl
popa
adc
jbe
push
cmp
hlt
leave
sbb
mov
dec
insb
outsl
sbb
sbb
xchg
sbb
ljmp
adc
xor
cmc
jno
pop
jge
rcrb
and
pop
bound
aaa
in
leave
pop
mov
int
inc
sahf
pop
mov
repz
push
add
jbe
dec
int
cmp
cmp
mov
pop
inc
leave
cmpsb
add
ret
ret
pop
sub
xchg
cmp
leave
addb
das
aas
leave
and
dec
adc
lds
pop
rep
and
stos
lahf
ds
xchg
addl
cli
jge
lods
inc
pop
ds
pop
and
add
mov
xor
jno
aaa
test
repnz
bound
fnstcw
xor
mov
mov
inc
pop
and
inc
das
fmull
pinsrw
pop
inc
fldt
daa
adc
cwtl
outsl
cmp
or
push
push
stc
xor
mov
aaa
add
adc
int
cmp
mov
adc
pop
ds
movzwl
jmp
out
dec
mov
sbb
sbb
or
les
sbb
lods
sbb
inc
cltd
sbb
jbe
xorb
push
jp
mov
or
xor
adc
sub
imul
jns
sbb
iret
sahf
pop
lods
dec
test
jmp
mov
imul
add
mov
xor
inc
leave
filds
pusha
roll
lods
test
jmp
xchg
cmp
inc
pushl
jns
leave
mov
push
mov
lds
inc
jno
xchg
pop
or
pop
sub
xor
inc
pop
daa
jae
fs
cwtl
leave
insl
mov
inc
test
pop
loop
sub
out
mov
call
inc
outsl
add
inc
test
xor
jb
popa
aad
std
adc
out
mov
mov
test
pop
mov
in
jl
and
lods
jmp
mov
cmp
stc
pop
jle
and
pusha
add
jno
pop
aas
jnp
dec
cmc
mov
add
scas
scas
jge
cmp
lea
fidivs
mov
jbe
lods
insl
movsb
idivl
scas
in
jns
das
addr16
incb
vmread
and
xchg
push
pop
mov
and
filds
nop
xlat
fadds
imul
dec
outsl
imul
add
mov
cmp
lock
mov
ret
mov
jmp
out
test
lret
loop
je
ds
adc
popf
loope
test
mov
and
mov
mov
and
aaa
sbb
jbe
and
fsub
popa
pop
sub
and
sbb
orl
fsubs
test
pusha
inc
jb
or
or
outsb
mov
shll
add
pop
pcmpgtb
lock
insl
dec
mov
bound
inc
and
rorl
dec
mov
cmp
sub
pushf
sarb
loop
insl
jmp
bound
jp
add
insb
inc
data16
ja
jbe
js
cmp
pop
pop
mov
sahf
cmp
inc
aad
xchg
xor
lea
adc
xor
popa
mov
or
pop
hlt
jmp
js
mov
clts
rcll
mov
movsb
push
daa
fucomi
xchg
cmp
int3
out
mov
xor
push
push
pushf
cli
lds
sti
or
fisubs
and
xor
div
pop
out
fdivrs
cmp
pop
cmp
sub
inc
js
rolb
or
in
push
int
push
push
dec
sbb
push
and
int3
cmp
pop
std
bound
xchg
cmpb
or
mov
je
call
pop
andl
movsb
ficompl
imul
mov
mov
setnp
xchg
or
inc
mov
std
jp
xchg
cltd
jo
insl
pop
mov
pop
outsl
push
sbb
pop
jmp
sub
rcll
pop
pop
jle
adc
cmp
clc
cmp
sbb
loopne
push
and
pop
xor
cmove
out
mov
mov
mov
push
popf
jg
adc
das
es
movsl
mov
shrl
dec
nop
mov
dec
icebp
sub
jmp
lahf
dec
push
sub
icebp
pop
mov
inc
inc
leave
dec
adc
subb
xchg
cli
dec
adc
add
cltd
fxam
ja
cvtps2pd
cwtl
stos
xchg
gs
mov
push
clc
jg
and
sub
jmp
inc
mov
sbb
test
test
cmp
fwait
loop
bnd
adc
mov
jnp
scas
gs
xor
sti
inc
lock
out
sbb
in
pop
jge
push
jmp
test
mov
outsl
fmuls
jnp
mov
sbb
xlat
es
mov
push
adc
sbb
cmp
push
sub
push
push
fs
or
mov
mov
xor
ret
cmp
cmp
mov
mov
iret
iret
aaa
mov
or
mull
sub
setne
jge
pop
into
test
stc
cmpl
jb
dec
and
scas
mov
mov
in
add
dec
adc
xor
pop
pusha
add
std
loop
pop
bound
jbe
loop
push
in
loop
clc
and
and
inc
fwait
jb
sub
sub
jnp
sub
xchg
mov
mov
cmc
sbb
in
movsb
or
dec
adc
loopne
fwait
out
add
addr16
or
mov
sub
adcb
mov
inc
aad
faddl
xor
jmp
stos
dec
mov
sahf
pusha
mov
scas
out
jne
pop
hlt
js
addr16
add
sbb
lods
lret
out
jp
xor
cmpsl
inc
sbb
add
xchg
je
jo
aad
aam
outsl
and
or
test
push
loope
ljmp
inc
adc
leave
add
cmp
daa
pop
aad
lret
push
sub
mov
mov
lods
xor
sahf
add
xlat
add
mov
pop
dec
dec
push
xlat
sub
fsub
fmull
and
jg
mov
pop
add
mov
loope
mov
cltd
sbb
iret
pop
aam
loopne
mov
sti
pop
add
shrl
fldt
dec
sub
xchg
xchg
jae
mov
inc
sub
push
add
and
mov
jbe
test
lods
nopl
outsl
inc
push
lods
gs
sub
jns
loope
sbb
fs
inc
popa
shlb
dec
into
repnz
aaa
xor
and
fbstp
mov
inc
jbe
cld
sbb
cltd
cmp
outsb
mov
jns
pop
int
push
iret
sub
dec
sub
push
add
int
dec
ret
movsb
xchg
inc
push
mov
mov
sub
cmp
int
stos
out
orb
mov
or
push
dec
and
fdivrs
pop
push
ss
cmp
movsl
mov
mov
adc
adc
adc
mov
out
fnstsw
cmp
or
jmp
add
inc
sub
stos
push
test
insl
or
cmpsb
paddusb
and
dec
mov
jno
ja
lea
std
jecxz
cvtpi2ps
xor
sub
jl
movzbl
bnd
jg
mov
int
push
aam
jnp
inc
pmaddwd
lods
ficoml
cltd
or
out
xchg
aad
or
fidivrs
insl
setb
sbb
rcr
test
push
in
cli
insl
leave
mov
jg
jge
jbe
sbb
or
mov
xchg
cmp
in
mov
das
mov
ficompl
xor
lret
dec
jmp
cmp
cwtl
dec
insb
pop
std
and
imul
dec
sbb
outsb
fisubs
es
pop
negl
lret
cmpb
pop
movswl
xor
mov
inc
sub
pop
mov
dec
or
fdivs
sub
fnstsw
and
sarb
pop
adc
in
repz
insl
popf
pop
xchg
bound
sti
dec
dec
or
cld
or
daa
cmpsl
movsb
inc
adc
movsb
or
push
arpl
fs
outsl
test
dec
rcrl
jae
popf
cli
cmp
jecxz
add
and
push
lret
cmpsl
pop
inc
loopne
cmp
dec
in
lods
lock
pop
out
xor
xor
sub
dec
adcl
or
pop
inc
jmp
nopl
add
mov
in
inc
adc
pop
cwtl
and
loopne
pushf
sbb
popf
add
dec
xor
dec
jmp
out
nop
call
xchg
cmp
ret
sub
bound
pshufw
mov
rolb
add
rcll
xchg
sahf
into
sub
push
les
sahf
push
xor
pop
inc
int3
int3
mov
add
jecxz
mov
cld
jg
sbb
xchg
test
add
inc
push
pop
cmc
shll
pop
scas
and
dec
aad
push
push
jp
into
adc
movsl
test
and
in
imul
inc
mov
leave
scas
gs
adc
mov
push
dec
inc
js
or
push
insb
mov
movsb
in
sbb
lea
adc
cltd
imul
pop
orl
mov
or
xor
lret
or
adc
popa
ret
cmp
insb
shll
inc
jmp
daa
sbb
mov
adc
add
loopne
mov
jmp
and
or
stc
shll
jle
jbe
in
stos
and
pop
dec
pop
scas
insl
popa
lret
jb
dec
mov
std
sbb
dec
mov
out
mov
into
or
mov
lcall
aaa
jl
adc
pop
movsl
mov
and
test
scas
add
xor
mov
lret
sbb
mov
inc
xlat
xor
and
sbb
inc
stc
sub
aam
push
jno
lea
adc
jae
pusha
rcr
aaa
sub
divb
jae
outsb
unpcklps
test
push
lock
xor
sbb
movsl
data16
xchg
arpl
scas
lods
xor
inc
lret
mov
pop
dec
add
int
rcll
test
adc
faddl
push
das
sub
jl
or
insl
adc
jo
dec
and
leave
femms
or
inc
insl
mov
jge
inc
pop
mov
mov
cmpsl
pop
movsl
xchg
dec
pop
icebp
mov
pop
jbe
jp
lahf
cld
mov
sub
and
dec
pop
aas
arpl
sbb
pop
pop
shlb
xchg
dec
cmp
pusha
adc
mov
imul
mov
in
pushf
int3
in
mov
or
lret
adc
push
mov
add
pop
decb
xor
mov
popa
inc
adc
adc
rcl
mov
xlat
push
inc
je
mov
mov
pop
adc
jnp
cmp
test
out
fldl
aaa
sahf
js
xor
xor
in
pop
xchg
test
jae
xor
add
orl
aaa
push
xchg
mov
daa
iret
test
pop
jo
int3
adc
repz
lea
into
lret
push
testb
xchg
lret
push
xlat
mov
cmp
dec
inc
cmpsb
cmp
lret
int3
jmp
sub
stos
sub
orl
je
inc
jge
push
xchg
fisttpl
mov
dec
push
push
imul
xor
xor
cs
push
bound
sub
decb
push
add
addr16
insb
daa
jb
inc
imul
rolb
cmc
mov
jne
fstl
lret
mov
mov
xlat
mov
add
cwtl
int
pop
loope
cltd
enter
mov
push
push
mov
shrb
sub
mov
dec
mov
add
lret
xchg
or
cld
add
xor
mov
push
mov
dec
sub
xchg
cmp
fisttpll
or
dec
fisubl
ss
adc
pop
push
cli
adc
jp
daa
mov
xchg
mov
dec
pop
stos
nop
leave
sub
or
shrb
dec
je
sub
in
lea
mov
hlt
lret
mov
out
test
lahf
inc
std
mov
jl
adc
dec
icebp
fsubl
mov
nop
popa
repz
jae
or
mov
outsb
jns
test
stos
imull
and
add
xor
cmove
mull
ficompl
push
xchg
sbb
sub
dec
stos
mov
pop
push
outsl
ss
ja
cmp
mov
pop
lret
addr16
jge
insl
pop
adc
out
ror
dec
inc
and
stos
in
inc
lret
mov
and
and
jmp
leave
lea
addr16
ret
push
psrad
jge
ficoml
push
movsb
rorb
pusha
hlt
push
aas
adc
call
adc
aas
dec
daa
mov
sti
lods
xchg
dec
repz
cld
mov
sub
js
dec
sbb
rorb
push
pushf
movsl
mov
ljmp
in
fisubrl
pop
ljmp
xchg
ss
out
cmp
mov
xchg
push
jge
rolb
and
clc
adc
daa
sets
jmp
dec
out
fiadds
test
mov
aam
xchg
add
in
push
idivb
pushf
xchg
int3
clc
out
add
movsb
xor
xchg
divl
in
mov
outsb
and
adc
std
loopne
outsl
jmp
fwait
push
gs
xor
bound
jl
pop
mov
pop
cmp
mov
mov
jg
pop
add
sub
movsl
pop
rcrb
ds
das
out
and
push
jno
jg
ficoms
cmpsl
xchg
adc
inc
cwtl
dec
sbb
xchg
pop
cmp
lods
or
lods
sbb
push
pop
loope
aaa
dec
insl
dec
shrb
mov
cmp
int
insb
out
ds
lcall
in
xchg
aam
sub
cmc
xchg
and
xchg
mov
popf
ret
ficomps
sahf
shll
pop
add
pushf
jb
cmp
xor
insl
fisttpl
scas
rclb
cmp
into
movsb
icebp
repnz
push
dec
sub
mov
loope
xor
jle
sahf
sub
sbb
js
aam
leave
cwtl
cmp
xchg
or
sub
or
lds
push
pop
movl
inc
icebp
push
dec
push
inc
cmpsb
addr16
or
xchg
adc
rcll
or
icebp
shll
lea
jge
and
pushf
loop
xor
addr16
shll
jo
fimull
cmc
xor
adc
icebp
test
repnz
inc
cld
mov
and
push
adc
sbb
mov
ret
sbb
les
jmp
dec
lret
pop
clc
sbb
mov
addl
or
push
in
sub
mov
orl
aas
mov
mov
push
mov
setno
pop
es
inc
mov
add
or
sbb
dec
out
mov
imul
or
pop
xchg
lret
pop
out
sbb
and
mov
mov
mov
rorl
adc
pop
mov
xchg
mov
fcomps
sub
aas
movsl
lea
sub
loope
ret
jae
mov
mov
and
inc
push
and
xor
pusha
mov
cmp
pop
sub
pop
sub
int
arpl
mov
and
mov
leave
mov
jno
loopne
aaa
xor
les
mov
imul
jge
adc
out
cli
std
js
inc
repz
fiaddl
clc
mov
out
xchg
rolw
outsl
mov
or
push
jg
repz
dec
xor
out
mov
daa
cltd
cmp
and
mov
xchg
insb
sub
cld
jle
mov
jge
jno
push
jo
stos
sbb
jno
lock
insb
adc
sub
xchg
xor
xor
ficompl
lret
enter
aam
lock
js
and
xchg
std
fidivl
fiadds
add
mov
push
leave
add
xchg
or
inc
add
outsb
mov
outsl
movsl
mov
adc
fisubl
in
and
adc
jge
and
dec
cmp
mov
mov
ja
jle
mov
jecxz
xchg
cmp
or
lods
negb
sbb
je
adc
mov
jl
sub
arpl
lcall
cmp
inc
dec
sti
dec
sbb
cmpsb
jmp
ret
ss
sbb
push
ds
les
fadds
dec
aad
aam
lcall
cmp
sub
ljmp
xor
mov
jo
pop
or
jno
inc
add
fisubs
jge
dec
inc
clc
push
mov
jbe,pt
test
lods
pop
ja
push
addr16
mov
subb
sbb
dec
xchg
xchg
lret
cmp
out
add
xor
mov
dec
push
sarb
adc
mov
cmp
insl
xor
dec
add
xchg
jge
cld
pop
sbb
test
ret
cmp
fdivrp
or
nop
add
or
mov
mov
adc
cvtps2pd
xor
sbb
out
xorps
xor
pop
jne
mov
sbb
inc
cwtl
sbb
pop
xor
sbb
les
daa
pop
sub
les
pop
adc
or
in
rorl
out
sub
sbb
mov
mov
out
mov
bound
pop
outsb
test
adc
add
pop
je
dec
xor
sahf
mov
and
enter
jg
ficompl
fistps
inc
inc
addr16
xor
xor
fbstp
mov
push
cmpsb
jns
fimuls
sahf
and
dec
xor
movsb
outsb
mov
push
adc
leave
pop
mov
cmp
xchg
ds
out
lret
dec
insb
add
sti
jl
adc
inc
ljmp
dec
mov
mov
push
loop
jl
scas
jge
mov
aas
add
xchg
jp
mov
test
out
pushf
pop
adc
and
insl
rol
push
or
cs
fcom
psadbw
fsubl
fidivrs
dec
mov
adc
mov
mov
movsb
pushf
pop
inc
sub
addb
sbbb
not
mov
push
mov
fnsave
mov
rol
enter
jnp
sub
dec
lea
je
push
mov
fnsave
cmp
std
pop
lret
xlat
lea
shll
jecxz
rolb
call
cmpsb
pusha
ret
mov
jno
mov
mov
std
dec
xchg
push
testl
lock
call
stos
mov
dec
ja
decl
mov
sub
mov
into
mov
mov
pop
mov
lcall
add
cmp
aam
mov
sbb
jle
arpl
or
mov
jle
push
in
clc
leave
and
push
mov
dec
aad
jmp
int3
test
push
rcrl
es
add
stos
adcb
inc
dec
mov
xchg
xor
mov
push
leave
or
pushf
daa
cmp
test
mov
push
lock
and
pop
ja
fsubp
push
xor
dec
xor
adc
pop
sub
scas
lea
pop
jmp
pop
sub
test
aad
jge
popa
neg
mov
inc
fs
fisubrl
lock
cmp
les
xchg
mov
in
icebp
mov
jmp
mov
lret
adc
les
dec
dec
jo
xchg
les
nop
scas
repz
push
movsl
add
sbb
aaa
stos
dec
fisttps
mov
jo
jg
sub
rolb
mov
aad
icebp
test
jne
fistpl
xor
sbb
push
fbstp
scas
cmpb
shll
jp
or
into
pop
mov
cmp
xor
pop
cmc
gs
cmp
adc
cmp
mov
or
dec
ja
mov
mov
stos
gs
jno
pop
js
fidivs
mov
repnz
cmc
jbe
jns
pop
sub
mov
ja
mov
movsb
adc
push
xchg
leave
sbb
sti
popf
adc
xchg
cmp
out
and
gs
test
inc
push
sub
int
jle
or
push
rclb
pop
mov
adc
cmp
jge
insl
add
sub
lret
sub
ss
sbb
xchg
mov
popf
xor
pop
pop
pop
mov
and
pop
adc
cmpsl
pop
hlt
scas
test
cmp
fdivl
lcall
aas
sbb
dec
out
adcl
inc
jbe
jnp
add
xor
jmp
xchg
sbb
in
pop
and
or
xchg
push
std
addr16
rcrb
dec
cltd
loopne
push
cmp
adc
mov
push
fstps
sbb
mov
out
scas
mov
sbb
push
xor
or
add
popa
fldcw
movb
pop
test
imul
lahf
int
pop
and
jb
fistpl
lea
mov
daa
and
or
or
out
xchg
dec
sbb
fwait
jae
sbb
orb
fbstp
sub
repnz
mov
xor
jmp
mov
add
cmpsl
leave
jae
mov
sbb
les
test
daa
sbb
cltd
das
stc
clc
add
pop
pavgb
or
jbe
push
dec
outsb
les
inc
jno
iret
add
xchg
adc
inc
cld
and
cmpsl
gs
sti
insl
pop
ret
lods
nop
test
sub
dec
xlat
mov
repz
cli
enter
mov
and
mov
xchg
jne
cmp
mov
std
mov
es
dec
std
or
mov
inc
lock
movsb
stc
filds
inc
out
jge
jns
ss
pop
fdivl
jge
jge
add
or
push
ret
pop
stc
xor
cmovno
pop
scas
lods
imul
or
out
mov
dec
gs
pop
pop
lahf
es
add
outsl
inc
push
lock
rcrl
jmp
cltd
bsf
cmpsb
pop
xchg
out
mov
fistps
leave
fnstenv
imul
xchg
jg
insb
int
mov
sub
ja
out
sbb
ljmp
jae
or
mov
maskmovq
idivl
jnp
or
push
push
and
dec
push
mov
lods
test
out
movsl
add
lcall
adc
sbb
aad
mov
lret
xchg
inc
pop
xorl
test
sub
loop
hlt
test
dec
add
pop
ficomps
mov
imul
das
ljmp
inc
inc
fadds
sub
mov
xchg
mov
movsb
insb
xchg
subb
popa
out
scas
xor
dec
inc
enter
xor
insl
pop
jns
jge
ja
push
les
cmp
pop
adc
into
dec
mov
pop
pop
push
cwtl
bound
push
add
out
gs
rcrb
cmp
inc
pusha
cmp
sahf
movswl
inc
ret
aaa
hlt
jbe
add
cli
xor
push
xor
imul
cmpsl
fucomip
dec
daa
dec
stos
mov
mov
add
xchg
pop
daa
add
xor
test
xchg
dec
mov
sub
xlat
jbe
jle
sub
mov
jno
sub
jge
in
cwtl
push
or
adc
mov
stos
inc
sub
sub
leave
pop
mov
push
mov
dec
xor
xlat
aas
movsb
popa
pop
sahf
adc
mov
and
rorb
mov
add
js,pt
lods
dec
jg
clc
or
or
inc
sub
sub
jle
stc
xchg
lds
aas
mov
clc
sub
arpl
fiadds
scas
cmp
popa
xchg
aas
cmp
push
cmp
adc
insl
xor
lret
xchg
nop
lea
out
enter
jg
pop
outsl
lahf
sbb
jb
movsb
aaa
andb
sub
les
lret
nop
pop
add
xor
out
addr16
inc
adc
push
lahf
jb
pop
jbe
psubusw
push
aas
xchg
notl
mov
push
dec
xor
ja
cltd
rolb
lock
push
pop
fsts
or
cmc
xor
mov
add
int
popl
mov
in
xor
test
lods
xor
psubq
sbb
add
inc
mov
pop
jmp
mov
loope
inc
pop
mov
inc
pusha
divb
add
jno
jae
in
cmp
pop
dec
rorb
pop
imul
call
mov
movzwl
and
jb
jp
xchg
test
cmp
movsl
inc
dec
xsaves
ss
mov
pusha
adc
out
outsl
pop
pop
cmp
and
sti
sub
xor
js
xor
xchg
xchg
push
add
mov
mov
lcall
popf
xchg
shrl
and
pop
lret
call
aas
outsb
jecxz
cmp
jno
inc
repnz
cwtl
fcoml
jo
outsl
jg
inc
mov
out
notl
mov
repnz
push
xchg
gs
insb
mov
test
fs
add
ds
pop
test
dec
jne
rcrl
sub
sub
jbe
dec
jnp
jbe,pn
pop
scas
mov
and
jo
movsb
adc
bound
icebp
or
popa
jg
pop
add
push
loopne
ret
jnp
int
xchg
idivl
mov
loopne
movb
inc
into
cmpsb
mov
cmpsb
test
sub
notl
xor
hlt
fcomps
pop
and
xor
out
jae
jp
ret
roll
xchg
pushf
jo
push
mov
out
aad
dec
aas
lcall
xchg
mov
scas
sar
sub
imul
jge
divl
lods
mov
and
inc
pop
mov
pop
xor
adc
cmpsb
aad
ficomps
bound
ljmp
pop
ds
pusha
pop
adc
sub
lods
daa
notb
dec
and
lret
lret
jecxz
dec
test
cmp
and
loope
dec
in
test
test
loope
rorl
icebp
ljmp
and
hlt
notb
mov
cmp
sub
in
std
cli
shl
ss
ss
dec
mov
add
pop
fbstp
lods
sarl
lcall
stos
fs
aaa
sub
push
or
inc
aas
ljmp
nop
cltd
subl
cmpsl
cmpsl
mov
pop
js
jmp
fucomip
jnp
xchg
pcmpgtb
pop
fisubl
in
sub
jg
push
ret
mov
inc
sbb
lock
popf
cmp
sub
out
jne
xchg
pop
rcrb
jge
or
jno
jg
pushf
xchg
std
andb
sbb
cld
xchg
mov
xor
and
cmc
aas
push
lods
adc
jl
mov
test
imul
fwait
addr16
fwait
divl
mov
inc
ja
repz
pop
dec
adc
out
outsb
nop
xchg
mov
sub
push
xchg
mov
sbb
or
pop
fsub
xchg
adc
mov
gs
les
cmp
xchg
lcall
dec
sub
sbb
ljmp
fists
int3
cmpsl
xchg
cmc
dec
inc
mov
jp
jg
mov
sahf
inc
popa
addb
or
mov
insl
out
out
lahf
and
and
pop
lods
lret
mov
or
gs
repz
or
push
sbb
ljmp
test
pop
pop
xor
syscall
mov
dec
les
inc
mov
xorb
mov
incl
lods
fwait
cmpsb
cmp
or
xchg
pushl
push
insl
add
cmp
add
adc
jl
mov
jns
pushl
out
sbb
out
xchg
pushf
push
cmpsl
pop
loope
fstl
fs
xchg
loop
mov
jb
mov
jbe
je
sbb
cmp
lahf
int
and
pop
shrl
dec
addr16
fidivl
and
pop
jp
aas
sub
iret
mov
push
cs
xor
insl
ss
cmp
add
xor
sub
addr16
movzwl
imul
mov
cmp
lcall
mov
mov
ja
in
lea
sahf
push
dec
dec
cld
lods
insb
cmpsl
rorb
nop
xor
xor
jbe
ret
jb
dec
lret
rcrl
sti
jmp
jge
cmpsl
mov
xchg
lock
mov
mov
fdivl
inc
stc
xchg
push
xchg
mov
jl
xlat
pushf
adc
gs
lods
pop
adc
and
bound
mov
mov
jmp
test
and
iret
aaa
insl
sub
fisubrs
mov
lret
push
add
out
and
dec
orb
xlat
mov
xchg
int
call
sub
loop
jg
ja
cli
add
aad
xchg
leave
fnstenv
les
inc
jno
stos
mov
adc
shlb
mov
push
push
hlt
lds
mov
pop
cwtl
push
addr16
adc
outsb
dec
add
fwait
sbb
mov
xchg
mov
jge
dec
mov
outsb
xchg
jbe
mov
and
sub
adc
xor
paddusb
testb
add
mov
adc
mov
inc
jae
out
adc
cvtps2pd
cld
fmul
mov
jp
add
fcos
pop
imul
test
clc
pop
sahf
inc
sub
aaa
mov
inc
or
cmpsb
jno
fwait
andl
mov
insb
cmpsb
sub
jbe
aaa
pop
scas
mov
and
aaa
push
aas
dec
cwtl
hlt
sub
or
orl
dec
rorb
add
jnp
outsl
sub
xchg
xchg
xor
adc
imulb
pop
es
cmp
loope
insb
bound
jb
and
fisubl
cltd
fcmovu
mov
mov
imul
adc
push
test
mov
test
and
loop
test
inc
clc
mov
test
sub
arpl
repz
daa
mov
daa
fcmovbe
sbb
cmp
out
addr16
ja
or
loopnew
and
dec
sub
shlb
mov
cmp
mov
or
inc
cmc
lret
shll
mov
lea
pop
inc
data16
inc
push
mov
push
adc
mov
stos
test
inc
mov
pop
mov
mov
mov
mov
adc
jae
out
lea
mov
imul
sbb
sub
sbb
test
cltd
lahf
sub
xchg
pop
ja
and
pop
sbb
inc
cld
sti
adc
cmp
lods
xor
ficoms
mov
in
push
jecxz
xchg
flds
or
push
ds
sbbb
mov
inc
adc
in
in
scas
jae
inc
jle
and
and
add
jb
jns
xchg
fucomi
jg
pop
cmp
sub
add
jg
paddd
mov
mov
leave
insl
mov
lods
inc
hlt
fistpll
sbb
in
sbb
out
sahf
lcall
or
es
inc
jb
dec
enter
sbb
sbb
mov
movsl
cmp
pop
adc
xchg
sbb
movsl
mov
stc
xor
lock
push
xchg
push
iret
test
decb
push
pop
ret
xchg
sti
xchg
mov
mov
rcrl
hlt
idivb
cmpb
sbb
popa
jns
insb
in
in
jae
add
ficompl
fsubrp
ss
cvtpi2ps
pop
scas
push
and
xlat
ret
or
sahf
add
out
or
lret
bound
repnz
inc
movsb
mov
sbb
adc
gs
jnp
xchg
sbb
negl
dec
adc
shrb
dec
ljmp
into
push
xor
pop
jae
inc
or
push
cmc
sub
jbe
or
xlat
mov
jnp
leave
mov
push
xchg
add
inc
mov
pshufw
jnp
push
xchg
loopne
lock
repnz
idiv
xor
mov
ret
fs
mov
or
rorb
dec
aaa
sbb
int
add
negl
cmp
pop
lea
add
xchg
xor
inc
mov
ret
pushf
sub
sub
call
out
test
sub
shlb
xor
ds
mov
sbb
loope
sub
les
add
cld
sbb
fdivrl
loop
stos
add
pop
enter
fwait
out
xlat
in
xchg
ror
dec
jge
jge
push
push
sbb
add
fwait
push
es
mov
paddusb
dec
ret
stos
mov
popf
mov
jge
jnp
dec
jbe
inc
pop
inc
insl
test
pop
adc
in
out
add
das
call
imul
add
jno
add
dec
dec
out
or
cmp
cmp
push
popa
add
cmp
or
in
icebp
cmpsb
int
sbb
lock
iret
adc
dec
stc
imul
aad
sbb
in
hlt
addr16
xchg
decl
xchg
sub
out
cmp
paddsb
mov
inc
lods
pop
ror
inc
jno
out
insl
aaa
cmp
out
inc
push
test
inc
and
cmpsl
sub
maskmovq
idivl
xor
stc
js
aaa
shlb
out
adc
cltd
loop
add
icebp
xor
negl
pop
in
std
fidivl
xchg
pminub
cltd
mov
or
pop
sub
add
cli
jmp
ja
cmp
jae
clc
cmc
add
sbbb
mov
cwtl
ja
mov
bound
pop
and
sub
mov
popa
sub
out
jno
shl
sbbb
mov
pop
or
cltd
test
sub
sbb
or
lea
and
pmuludq
pop
scas
push
xchg
push
mov
sbb
daa
mov
dec
into
loop
aas
shrl
testl
loop
push
jo
stos
mov
nopl
add
mov
mov
notb
lret
fwait
xor
or
inc
sbb
inc
cmp
jg
lods
test
pop
mov
enter
adc
dec
lock
xor
out
push
testl
mov
and
xchg
or
mov
shrl
aas
xorb
lods
jge
mov
scas
or
fdivr
push
cltd
add
adc
insl
inc
xor
daa
add
dec
std
adc
popf
test
xchg
mov
pusha
outsb
test
in
inc
fdivrl
or
pop
lock
mov
lods
popf
sub
pop
rorl
and
and
pop
xchg
test
popf
scas
cs
and
add
faddl
add
push
inc
lds
or
in
and
test
ret
and
and
fldt
xor
out
arpl
aam
cmp
fdivs
xor
cmp
bound
jno
lret
inc
cmp
imul
push
in
pushf
call
lods
icebp
int
fadd
or
addr16
daa
arpl
ret
ljmp
mov
inc
xlat
push
dec
xlat
ret
addr16
mov
sbb
xlat
inc
ss
sbb
jecxz
xor
ljmp
fisubl
xor
or
push
inc
std
mov
fsubl
mov
pop
aam
add
inc
fdivrp
cmp
mov
mov
mov
shlb
out
cmp
into
sub
mov
mov
fadds
jns
fsubr
pusha
xlat
jmp
std
sbb
mov
mov
adc
mov
xchg
and
push
xor
sbb
repnz
mov
xchg
imul
sbb
mov
pop
and
cmp
lret
cs
aam
xor
pop
mov
leave
sbb
mov
mov
icebp
and
int3
leave
insl
loopne
lcall
insl
cmc
cmp
jle
test
xor
xlat
inc
sub
or
jecxz
leave
fisttps
jmp
and
out
icebp
dec
sbb
leave
mov
movsl
push
sub
call
mov
xor
dec
dec
jg
jecxz
xor
lods
pop
repz
addr16
stc
ss
loopne
add
sahf
ja
pop
and
or
ds
int3
jecxz
cmp
movsl
or
mov
lfs
fisubl
sub
mov
sub
shlb
and
and
fstps
xor
test
pop
pop
rcrl
pop
andb
mov
mov
mov
repz
cmp
mov
and
sbb
push
in
mov
or
fnsave
adc
cmp
ja
test
pushf
xor
outsb
add
cmp
bound
pop
icebp
addr16
jecxz
sbb
insb
test
ja
test
mov
dec
mov
in
cwtl
cs
jge
push
sub
inc
pop
imul
push
push
je
push
in
iret
mov
or
ljmp
les
jge
popa
mov
lds
lret
pop
jne
adc
jno
sub
in
jne
movsl
push
call
jno
push
jle
mov
push
rcrb
or
sbb
add
sbb
and
push
test
fistl
pop
fildl
out
daa
dec
sbb
cmp
or
inc
sbb
fidivrs
ljmp
loope
movups
mov
jbe
xorb
cmp
mov
nop
popa
jge
adc
or
push
inc
jge
mov
dec
sbb
add
lea
jl
or
lea
xlat
push
mov
jne
lret
xchg
mov
push
dec
mov
jge
jl
les
notb
mov
add
ja
mov
pop
sti
mov
cmp
pusha
or
pop
and
sahf
and
mov
cmp
mov
in
mov
mov
test
xchg
add
ret
mov
dec
mov
push
jge
cwtl
mov
cmc
dec
jbe
mov
pop
add
vcvttps2dq
cmpsl
ja
xchg
ss
and
imulb
rcrb
pop
bswap
mov
popa
push
ficoms
cld
decb
stos
fs
mov
and
gs
cmp
in
xchg
add
fsubr
and
cmp
das
inc
xchg
fsubp
xchg
xor
shrl
fwait
loope
jo
dec
daa
hlt
xor
cwtl
arpl
popa
in
aam
mov
mov
mov
and
dec
pusha
in
dec
pop
scas
test
mov
imul
stos
xlat
sub
jmp
xlat
pop
mov
popf
push
dec
push
add
sub
or
repnz
xchg
sub
popf
or
push
out
pusha
inc
xchg
mov
push
arpl
js
inc
add
rcrl
xlat
std
aaa
int3
incl
lret
and
dec
adc
pop
mov
stos
push
inc
stc
testl
dec
mov
or
mov
sub
gs
mov
lds
stc
jae
fwait
add
dec
dec
cwtl
shrb
int3
inc
xchg
adc
dec
xor
popf
jo
lods
bound
mov
sub
pop
fldenv
in
xor
xlat
jge
xchg
daa
adcb
pop
pushf
leave
add
aas
jbe
mov
sub
insl
std
rcll
add
push
adc
and
out
movd
or
cmp
inc
mov
dec
jns
outsb
push
cwtl
push
lods
and
out
inc
mov
out
pop
mov
dec
add
out
and
xlat
mov
pop
mov
cmp
ret
jbe
je
fisttpl
popf
aaa
movq
cmpsb
mov
ficoms
ja
cmpb
and
inc
jbe
xor
xlat
out
dec
cmp
cmp
jmp
xchg
js
negl
or
shll
cmpb
fmull
arpl
inc
dec
xor
std
in
and
adc
pop
hlt
adc
sub
lahf
ja
aad
jge
orb
out
repnz
mov
mov
xor
hlt
mov
fwait
daa
mov
repnz
mov
nop
sbb
xor
sahf
mov
xchg
mov
mov
sbb
add
sub
rcrl
stos
gs
test
sbb
sets
push
les
sbb
lret
xlat
addr16
sbb
aas
jne
scas
inc
int3
idiv
jne
mov
sub
xlat
add
mov
add
out
into
stos
pop
xchg
jge
push
fstpt
out
inc
das
insb
sbb
mov
ffreep
leave
xor
xor
loope
popa
pop
in
cltd
push
outsb
sbb
or
or
or
jbe
sti
sbb
fmulp
mov
sti
pop
in
paddb
lret
fs
out
xor
popf
xlat
mov
sbb
xor
cmp
jbe
into
popf
inc
pop
adc
xor
xchg
mov
test
ja
divb
fidivrs
lea
xchg
arpl
add
aaa
es
jle
mov
bound
leave
adc
mov
dec
sbb
dec
lods
dec
lea
xor
sbb
mov
pop
hlt
add
mov
cmpsl
mov
add
jecxz
mov
mov
mov
data16
xchg
fisubl
stos
sub
mov
popf
imulb
ret
xchg
and
pop
shll
inc
test
out
test
addr16
dec
out
mov
lock
cmp
dec
in
sub
out
add
je
push
pushl
sub
sahf
jbe
xor
or
cld
push
repnz
sbb
inc
mov
das
mov
xlat
mov
mov
jns
bound
cltd
and
gs
sbb
psubusw
xchg
sbb
ja
mov
xchg
ret
sub
in
add
aad
or
out
dec
xchg
in
jmp
and
xlat
icebp
dec
mov
outsl
pop
in
xlat
shrb
mov
in
cs
test
sub
jecxz
mov
jnp
mov
jg
fildl
fidivl
pop
iret
mov
xlat
xchg
lea
adc
xor
aaa
xchg
test
repz
adc
cli
sbb
por
pop
movsl
aad
mov
movsl
movsb
jb
cmpb
mov
xchg
cwtl
add
or
lock
lcall
fdivl
mov
lods
xor
sti
sub
cmpsb
mov
pop
es
insl
pop
fisubl
int3
xchg
imul
jb
jmp
xlat
cltd
cmp
pop
xchg
jle
xchg
addr16
push
les
pcmpgtw
in
mov
rcrl
pop
insl
nop
lods
lahf
mov
mov
inc
push
lea
dec
push
fisttps
or
cli
add
lahf
sub
jmp
les
stos
xor
sub
mov
sub
shlb
add
jmp
jne
ds
sub
jb
xor
mov
xor
cmp
cmp
push
movsl
cmpsb
mov
mov
push
jecxz
fcmovnb
jge
lahf
pop
jno
mov
sbb
iret
mov
ss
es
les
jle
sub
inc
rol
xchg
fidivrs
xor
adc
loope
sarb
flds
mov
in
sbb
leave
add
cmpsl
sbb
sub
adc
or
xchg
jecxz
jne
fidivrs
aaa
sub
aam
out
xor
lret
push
mov
outsb
sahf
cmp
xor
jne
sub
mov
sub
stos
aas
push
cmpl
pop
mov
xor
adc
dec
aam
sub
addb
or
cli
ror
mov
sub
sbb
outsl
cmp
adc
test
ja
sub
rol
loop
ja
xor
and
adc
mov
mov
pop
push
addb
fnstsw
dec
enter
mov
dec
shrl
shll
xchg
cld
add
pop
mov
ljmp
pop
out
rcr
add
pop
and
dec
jmp
pop
push
or
lcall
push
sub
sub
cmp
movmskps
cli
xor
lret
inc
mov
clc
add
jbe
or
lods
out
inc
mov
xlat
sub
and
fistps
xor
jg
xlat
lret
lds
dec
mov
jne
loopne
inc
and
cs
jle
cmpsb
loopne
into
dec
int3
loope
push
mov
out
add
js
fstpt
sti
push
xchg
cmpsl
ss
bound
ja
and
xlat
fcompl
incb
mov
xchg
lods
divb
mov
push
jae
addr16
mov
mov
sbb
bound
and
push
sub
sbb
pop
lds
clc
test
lds
dec
call
jbe
lock
xchg
out
jp
mov
out
push
dec
adc
inc
js
pusha
dec
mov
mov
out
mov
decl
xor
lea
or
or
cmp
ja
xor
mov
push
mov
sub
fsub
in
addr16
inc
mov
dec
mov
cmp
sbb
cltd
cmp
dec
push
test
stos
out
pop
or
iret
adc
data16
cs
mov
mov
addb
sub
test
je
inc
push
add
aaa
jl
pop
int
adc
push
test
gs
inc
cmpsl
mov
popf
pop
cmp
or
push
mov
fnstsw
lea
int3
loop
ss
cmp
pop
sbb
insl
arpl
jo
adc
jge
int3
cmpsl
inc
pusha
pop
sti
sahf
insl
mov
sbb
dec
push
add
or
mov
inc
ja
pusha
ret
decl
pop
dec
decb
cltd
rorb
bound
jl
xor
and
iret
push
in
sub
movsl
dec
adc
dec
pop
popf
sub
ficoml
mov
add
or
jle
movsl
mov
lods
sbb
ss
or
or
daa
test
out
dec
jb
xchg
mov
inc
adc
jns
dec
sub
cmc
jo
sub
jbe
jmp
xchg
popa
inc
or
jmp
dec
or
sub
sub
insb
push
bound
lods
add
cwtl
out
jmp
cmpsb
mov
incb
pop
subl
mov
mov
sub
aam
push
adc
mov
dec
cli
test
push
sub
ds
aas
xor
mov
or
dec
dec
and
jg
or
mov
inc
sbb
clc
xchg
adc
xchg
in
loopne
clc
or
mov
stc
xbegin
in
mov
mov
xor
das
sbb
test
testb
adc
stos
xchg
sbbb
xchg
sub
ret
pop
in
push
movsl
movsb
or
jg
or
pop
inc
pop
outsl
add
xchg
add
jmp
add
adc
in
add
dec
mov
push
sbb
inc
bound
add
ret
pushf
add
out
lcall
or
push
add
lahf
add
sbb
add
or
xchg
inc
xchg
mov
out
inc
pop
add
pop
scas
jae
add
push
daa
lret
fs
rolb
das
sub
and
pop
mov
pop
into
cmp
pop
daa
es
stos
cs
and
jns
add
cmp
push
pop
or
das
or
fidivl
fcmovnb
mov
xor
or
out
pop
mov
adc
lahf
jmp
add
adc
hlt
sub
pop
adc
pop
inc
mov
or
adc
sub
xor
and
popf
sub
pop
es
test
push
filds
shrl
imul
and
pop
sahf
aaa
out
xor
lret
sub
cmpsl
and
subl
inc
lcall
pop
std
push
add
jo
cmp
inc
sub
mov
or
pop
sub
push
cmp
mov
xor
pop
lret
jg
add
or
xchg
pop
add
sbb
aas
xor
and
adc
ds
jmp
sbb
adc
or
push
add
or
pop
mov
sub
adc
out
sub
daa
push
and
xor
stos
cmp
arpl
cmp
adc
ss
cmp
outsl
jnp
jl
inc
cs
add
dec
lret
sub
add
sub
mov
pop
sbb
push
pop
and
popa
or
sbb
jle
dec
sbb
mov
push
inc
xor
cmp
arpl
cmc
fsubl
in
insl
xor
inc
and
dec
sbb
and
mov
mov
mov
imul
fistl
lret
int3
bound
aaa
js
cs
ss
jge
dec
sbb
es
xlat
inc
xor
aas
pop
out
mov
out
mov
inc
cld
push
mov
lock
add
sbb
in
dec
rclb
sahf
cs
push
in
in
stos
cmc
std
add
clc
pop
sub
pop
fnstenv
inc
xchg
mov
mov
lock
in
cli
dec
or
out
xchg
add
cmc
stos
mov
mov
repnz
pop
mov
add
shrb
pop
loop
and
mov
and
enter
xor
mov
insb
dec
lahf
sub
mov
ja
xchg
xchg
outsb
inc
push
jge
jb
pop
ljmp
bndstx
jbe
mov
push
popa
rcrb
dec
xor
xor
inc
mov
pop
mov
add
pusha
xor
add
mov
pop
fstps
dec
int
lahf
jmp
sub
adc
cli
pop
into
arpl
cmp
jae
shll
jns
std
es
movsb
scas
sbb
int
jnp
pop
pop
cltd
addr16
push
mov
lds
or
mov
bound
dec
out
xlat
push
sbb
aaa
nop
rcl
dec
popa
dec
add
pop
into
ss
push
es
xchg
mov
jle
sub
adc
xchg
inc
jmp
movsb
in
jbe
mov
dec
outsl
or
mov
icebp
call
push
hlt
push
add
adc
mov
mov
rep
out
jo
roll
pop
js
hlt
ss
mov
popf
and
jae
ljmp
jmp
aas
xor
cmpsb
jno
mov
cmc
int
jns
addr16
je
push
sahf
mov
cmc
std
mov
pop
out
add
mov
jb
enter
mov
sbb
mov
js
push
sbb
inc
fists
fisubl
cmova
filds
loop
out
rorb
lret
repnz
or
mov
mov
push
mov
sbb
pop
subl
cltd
aam
mov
inc
js
mov
xchg
dec
les
add
sub
push
call
xchg
ret
mov
xchg
addl
mov
push
xchg
outsl
pop
and
shll
cmp
push
fdiv
insb
data16
mov
out
gs
jbe
repz
jns
mov
mov
cmpsb
loope
mov
inc
dec
jb
mov
cmpsl
xor
sti
lods
jbe
into
daa
or
lods
adc
daa
push
popa
dec
int3
call
mov
dec
mov
cmp
sub
adc
sub
sbb
xor
xor
lret
pop
sbb
rol
fdivs
or
ja
jne
ja
in
mov
cmp
xor
cmp
dec
mov
cmpb
mov
or
data16
loopne
jle
loope
mov
jb
pop
imul
mov
mov
jge
dec
sbb
cmp
lods
inc
push
psubd
sbb
dec
in
leave
pushf
lret
mov
bound
adc
int
or
push
or
shll
imul
clc
lea
mov
or
push
and
jp
les
out
movsl
rcrl
xor
dec
pop
mov
popa
lea
ficomps
cmp
test
jl
add
insb
jg
lea
push
inc
adc
add
jge
stos
jl
inc
je
stos
inc
daa
ds
mov
or
movsl
cli
or
cmp
push
fsubs
pop
push
pop
cld
and
es
loopne
xlat
lea
sbb
and
and
mov
loope
fneni(8087
mov
call
or
or
mov
aaa
adc
sub
rolb
les
sarb
sub
sar
ss
mov
and
mov
add
add
leave
jbe
sbb
fcomi
iret
mov
stc
cmc
mov
fnstcw
sbbl
mov
push
fistpll
adc
dec
mov
les
lcall
pop
movsb
cs
into
push
and
sub
pop
jb
push
mov
lock
pop
std
imul
or
jb
jo
mov
ja
sbb
pop
imul
jmp
push
fsubs
push
mov
xor
jle
lock
shrb
xor
push
cmp
mov
add
mov
mov
in
cmp
int3
sti
hlt
or
and
aam
fmuls
nop
and
pop
xor
out
fsts
sub
sbb
cmp
lret
mov
rorb
mov
push
push
popa
add
push
pushf
fs
sbb
jmp
dec
add
lahf
mov
adc
mov
sbb
pushl
xor
xchg
addr16
push
mov
pop
lods
mov
lds
add
jmp
xor
inc
lods
push
jnp
or
clc
xlat
fs
lret
and
adc
push
scas
jge
maxps
jg
xchg
addr16
lret
xchg
mov
scas
mov
bound
loopne
or
test
or
pop
repnz
pop
aad
mov
mov
mov
fsubr
loop
mov
add
sub
cli
int3
test
popf
lock
jbe
nopl
sub
add
shrl
scas
cltd
jno
pop
cmp
and
jmp
ja
add
mov
and
mov
sub
dec
and
jb
pop
les
inc
clc
fists
lods
cmp
mov
imul
test
sub
or
add
dec
and
cwtl
je
mov
sub
sbb
xor
and
insb
popa
pop
in
fsubrs
dec
and
in
mov
pusha
lock
dec
leave
loop
inc
loope
mov
out
jge
stos
jmp
pop
xor
pop
xor
int
cltd
add
mov
test
push
pop
add
jb
or
adc
out
pop
gs
cmp
xlat
xor
out
dec
in
xor
into
movsb
adc
loopne
pusha
insb
cmp
adc
dec
lock
lahf
test
mov
movsb
xlat
cmp
xchg
mov
call
scas
es
mov
lahf
loop
lock
repz
fiaddl
iret
mov
aas
aas
test
jo
adc
movsl
stos
sbb
xchg
mov
jge
sub
mov
cld
stos
mov
add
jmp
pushf
inc
or
add
subl
in
repnz
jne
add
xchg
lods
in
dec
or
nop
sahf
xchg
add
xor
in
lcall
cmpsl
jmp
stc
dec
xor
cmp
data16
inc
popf
cmp
lock
cmp
fdivrs
push
movsl
mov
and
dec
adc
clc
pop
cld
jmp
lock
sub
shr
sub
mov
mov
or
pusha
test
push
push
mov
in
sub
and
cmp
sub
inc
xchg
addr16
dec
pop
int3
push
arpl
fsubrs
lcall
bswap
mov
mov
xchg
jg
inc
ficoml
mov
cmp
pop
mov
pop
cmc
mov
stc
xchg
mov
mov
insl
out
hlt
xor
push
mov
xchg
lea
jl
xor
push
lahf
cld
sub
jo
orb
dec
sbb
mov
cmc
sub
ret
arpl
jl
out
inc
lea
cltd
dec
cmovp
or
push
dec
mov
mov
test
out
cmp
push
add
jo
push
mov
sub
push
aam
add
push
sbb
pusha
inc
mov
shlb
ljmp
xchg
inc
cmp
sub
mov
lcall
inc
push
jmp
or
pop
or
pusha
mov
xchg
lods
and
pop
inc
sbb
jp
mov
cli
inc
sbb
inc
sbb
imul
dec
inc
inc
dec
rcll
cs
bound
pusha
dec
addl
mov
fnstsw
pop
xchg
and
mov
sub
mov
sbb
mov
mov
les
mov
cmp
pop
cmp
rol
inc
sarb
mov
lea
std
sar
ret
xchg
mov
mov
sti
repnz
push
sbb
cmp
xchg
pushf
push
mov
mov
push
mov
inc
mov
rclb
jmp
fisubrl
push
mov
popa
mov
jge
setle
inc
ds
shll
and
call
rolb
mov
pop
inc
sahf
adc
dec
sbb
ret
pop
imul
xchg
add
pop
rcrl
pop
xor
sub
dec
test
sahf
test
loop
pop
xchg
mov
or
lea
imul
sub
ret
xchg
repz
pop
jns
sub
mov
xchg
push
inc
cmp
push
pop
shrl
scas
mov
sub
xchg
fadd
or
cmp
add
cld
pop
imul
add
inc
jp
rclb
out
stos
jge
dec
jbe
inc
adc
mov
xlat
psubb
lcall
mov
aam
dec
mov
push
incl
or
mov
scas
int
dec
rcr
push
rclb
or
xor
rcrb
sbb
and
xor
pop
dec
jmp
lods
dec
xchg
mov
aas
or
loope
fwait
push
out
mov
add
mov
pop
imul
xor
out
sahf
push
xchg
nop
jp
mov
int3
out
fwait
lret
stos
mov
cli
cmpl
inc
stc
divb
adc
out
jecxz
ja
daa
test
aam
add
add
test
insb
mov
cmp
mov
imul
or
push
dec
or
dec
clc
cmp
xor
vmovss
dec
loop
push
aaa
xorl
add
scas
popa
ret
out
sbb
std
stos
outsb
pop
or
xchg
dec
loopne
cwtl
test
mov
xchg
aad
push
nop
popf
or
and
lret
adc
iret
push
dec
notb
lret
inc
mov
sbbb
xor
filds
scas
jg
cltd
test
sub
pop
icebp
sbb
cli
out
stos
cld
pop
mov
and
outsb
xchg
cmp
jbe
mov
mov
cmpb
lea
cld
jb
push
mov
mov
pop
dec
int3
cmp
test
mov
sbb
mov
dec
dec
in
mov
mov
icebp
call
xchg
int3
imul
daa
dec
ret
pop
nop
sub
lahf
lahf
or
or
imul
jle
cmp
mov
adc
insl
sbb
push
and
push
gs
or
xor
repz
mov
cmpsl
xchg
lds
pop
insl
out
or
cmp
sbb
add
por
pushf
test
jmp
mov
sbb
movsb
cs
add
pop
or
jno
adc
repnz
cmc
lret
punpckhdq
xor
mov
inc
arpl
inc
repnz
mov
jge
xchg
inc
pop
out
mov
xor
dec
dec
les
cwtl
cmp
dec
mov
xor
mov
clc
jb
imulb
lods
inc
cmp
xor
out
xchg
shlb
or
out
inc
jno
pop
fcomp
pop
jne
shll
daa
in
cmp
aas
jae
dec
lods
xorb
or
ds
in
stc
pminub
add
int3
out
and
bound
and
sub
repnz
ficomps
xchg
repnz
adc
sahf
shlb
xor
popf
dec
inc
sub
cmp
and
ljmp
daa
stos
cmp
out
loope
cs
jb
add
ss
pop
push
lahf
clc
dec
sub
js
sti
sahf
push
or
scas
inc
dec
and
and
sub
pop
pusha
sahf
ror
jg
xchg
pop
ret
ficoms
or
mov
pusha
loop
aaa
mov
jne
rol
iret
jns
dec
dec
mov
sub
in
das
xchg
in
sub
mov
lea
dec
pop
sbb
aam
ljmp
lret
fs
iret
ret
sub
out
and
push
xchg
icebp
inc
out
jle
xchg
add
cwtl
xor
sbb
mov
inc
dec
enter
inc
call
fcmove
pop
add
mov
lea
xor
insl
imul
sbb
sbbl
fsubrl
stos
sub
aas
and
mov
jle
call
sahf
pop
ljmp
inc
daa
leave
in
std
sub
mov
enter
pop
jg
jns
cmp
inc
mov
or
test
or
xor
ficompl
ficoml
aaa
ret
jne
adc
jmp
sarb
cmp
adc
ljmp
sub
icebp
push
or
sub
xor
mov
or
pop
sub
and
push
xchg
js
lea
test
or
ficoml
lret
out
adc
daa
pop
xor
stos
add
lock
dec
int
jmp
inc
jge
mov
test
leave
and
sbb
jl
xor
shrl
mov
int3
push
mov
cmp
inc
in
mov
pop
pop
int3
sub
fldcw
inc
mov
bswap
outsl
and
cmp
out
cmp
nop
push
mov
cwtl
xor
or
in
add
decb
stos
aas
lea
pushf
sub
hlt
pop
mov
mov
lds
roll
dec
out
mov
cld
mov
mov
leave
pushf
cmp
pop
xor
mov
inc
inc
ja
adc
lcall
cmp
dec
mov
lock
scas
mov
adc
dec
ficompl
sub
and
cltd
add
lods
add
ja
mov
mov
int
mov
cld
sahf
movsb
xchg
mov
outsl
push
adc
mov
sub
push
shlb
cmp
cmp
loope
orl
dec
jl
inc
pusha
addr16
jno
addr16
adc
push
mov
push
les
in
push
mov
mov
inc
cmpsb
lahf
push
mov
xlat
cmp
jae
aas
jp
insl
dec
rclb
sbb
push
mov
sbb
cltd
pop
dec
lret
fs
mov
xchg
mov
pop
lods
mov
add
sub
loop
mov
push
or
mov
push
inc
sbb
jmp
xchg
jbe
stos
test
add
es
scas
xchg
fsubrl
jg
scas
orb
fs
movsl
xchg
sub
pop
rcr
xchg
mov
insb
mov
push
or
jae
inc
js
adc
test
pop
dec
adc
xor
out
pop
jecxz
sbb
mov
push
push
sub
adcl
jg
add
cld
push
testb
push
lret
and
xchg
fstpl
test
inc
sub
mov
mov
push
mov
int
inc
js
push
mov
inc
and
jae
mov
sbb
pminub
jo
and
hlt
fcmove
lods
lds
xchg
sub
mov
repnz
test
cmp
cmp
or
jbe
sbb
ja
sub
pusha
xor
push
adc
out
mov
inc
xor
dec
and
idiv
dec
mov
push
movsl
jle
sbb
in
pop
pop
dec
pop
stos
dec
ss
mov
pusha
leave
fs
adc
mov
cmp
xchg
lret
bound
movsl
shrb
mov
jle
repnz
mov
stos
jl
push
mov
inc
gs
mov
lahf
insb
loopne
lgdtl
andl
inc
mulb
rorl
sub
sub
in
mov
daa
int3
int
repnz
rcrl
sahf
push
stc
in
pushf
addr16
pop
and
cmovl
xorl
into
mov
pop
xchg
or
xor
iret
out
cwtl
and
push
mov
or
ficompl
repnz
ja
sub
pop
sti
xchg
add
inc
sub
adc
ja
daa
or
mov
movsl
out
mov
push
lcall
aas
es
outsb
out
xchg
int3
mov
inc
lods
movsl
jl
ds
xor
insl
cld
inc
sarl
bound
jbe
lret
outsl
movl
imulb
cltd
sarl
sbb
cmp
jg
nop
jp
inc
ss
shl
leave
dec
daa
mov
ret
jne
pop
push
mov
sahf
xlat
mov
add
sahf
in
lock
sub
lods
push
sub
das
xchg
mov
out
jb
pop
loope
adc
or
insb
pop
pop
push
aad
fsub
test
les
mov
mov
adc
xor
imul
push
sub
mov
cmp
mov
pop
mov
pop
push
fcomp
or
xchg
push
fwait
jae
and
add
xchg
xor
mov
cs
sbb
push
lret
cmpsb
or
insl
jecxz
pop
xlat
ja
jne
and
jns
hlt
jo
add
push
pop
int3
out
je
adc
into
sahf
out
inc
mov
scas
and
add
lods
cmpsl
loopne
icebp
stos
insb
out
inc
lock
pop
xor
sbb
rcll
mulps
cmp
enter
lcall
mov
and
xor
dec
add
mov
dec
pusha
dec
sub
xchg
fsubrs
shlb
mov
jg
mov
in
mov
cmc
movsl
xor
add
js
and
fneni(8087
xchg
or
scas
pop
ja
jbe
cmp
sbb
xlat
sub
xor
mov
test
xor
idivl
mov
or
sahf
dec
fdivp
cmp
dec
jmp
pop
jecxz
or
or
mov
out
cld
xchg
add
fwait
sbb
pop
jg
pop
sub
mov
inc
leave
xor
mov
test
push
jne
inc
sbb
inc
jbe
call
jle
iret
mov
test
int3
and
add
cmp
xor
inc
ds
inc
lret
adc
mov
xlat
std
or
aaa
aas
hlt
sbb
mov
std
jge
mov
fildl
mov
pop
sub
jne
jecxz
mov
cmpsb
cltd
cwtl
pop
es
ficoms
pop
int3
addr16
inc
dec
xor
stos
dec
mov
and
jl
adc
ret
fimull
cmc
push
ljmp
dec
mov
insl
loopne
push
cmp
add
push
pop
aaa
mov
test
add
int
xchg
add
mov
jo
int3
mov
pop
aas
fstl
pmullw
dec
adc
ret
ss
mov
rol
aas
dec
and
lret
cmc
fwait
sub
and
and
sti
out
sub
inc
fdivs
sbb
or
bound
cmp
push
sub
fs
sub
ljmp
mov
mov
lret
jo
push
mov
test
mov
cli
movzbl
je
mov
or
iret
xor
jne
cli
dec
movl
insb
movsl
push
jae
jg
lahf
inc
push
rorl
mov
out
sub
inc
mov
pop
lahf
lcall
arpl
mov
enter
subl
adc
stc
jmp
lahf
adc
arpl
fsubrs
xor
notl
or
pop
add
daa
or
xchg
mov
stos
mov
cmpsl
jbe
cmpsb
fcompl
mov
push
xlat
push
sub
jbe
dec
lock
mov
jge
and
iret
fsubs
jo
cmpsb
adc
dec
xchg
adc
out
cs
aaa
xor
push
dec
or
cs
xchg
xor
mov
in
out
aas
js
pop
adc
leave
dec
xchg
aad
push
std
mov
jmp
cmp
push
mov
data16
inc
add
add
jno
lds
and
lret
or
inc
rorl
jno
in
sbb
adc
jns
sbb
or
mov
xchg
movmskps
fisttpll
cmp
mov
push
mov
jbe
push
test
scas
xchg
xchg
into
adc
cmpl
cmp
jmp
ja
arpl
jb
jae
pop
and
addr16
mov
bound
xor
or
xor
or
jmp
mov
add
sbb
cld
mov
mov
insb
pop
fimull
out
call
add
incb
xchg
negl
sub
mov
shlb
int
jge
push
or
rcl
push
sbb
adc
cld
pop
std
pop
dec
sub
orb
outsl
outsb
jle
mov
push
add
mov
loopne
hlt
add
out
popa
test
push
test
cmp
cs
jbe
imul
mov
insl
mov
fwait
mov
xor
in
mov
addr16
cltd
adc
mov
iret
dec
in
aad
repnz
sbb
and
mov
xor
stos
or
pop
cmp
push
lea
inc
add
cwtl
jns
scas
mov
testl
out
mov
or
cltd
cmp
jno
cmp
adc
cmpl
insl
mov
pop
lea
mov
pushf
rorl
fistpl
cltd
rcrb
je
aaa
adc
inc
into
daa
sbb
cld
leave
or
inc
push
jge
lea
aas
sub
inc
xor
mov
cmc
push
repnz
adc
rcrb
dec
sbb
outsl
cmp
mov
mov
cvttps2pi
xor
mov
sbb
outsb
das
mov
xlat
push
xorl
add
int3
movsb
cmc
xchg
inc
pop
repz
and
adc
xchg
fwait
add
int3
pop
scas
nop
fldenv
nop
inc
ds
add
xchg
xchg
rcrb
out
loope
shll
cltd
fsubr
addb
jns
push
jbe
mov
fiaddl
sub
test
lfence
dec
jae
loop
dec
ret
mov
aaa
mov
lock
hlt
xor
or
mov
dec
bound
or
mov
sarb
mov
dec
adc
inc
cwtl
mov
mov
dec
scas
iret
push
sbb
xlat
stos
dec
pop
rolb
xchg
mov
into
pusha
fmuls
sbb
and
hlt
inc
scas
arpl
cs
mov
xorb
mov
pop
xchg
loope
int
pop
mov
loop
mov
sub
out
dec
ficoml
outsb
lret
pop
jnp
sysenter
sar
cmp
int
jbe
arpl
push
push
mov
add
lods
xchg
jg
sbb
daa
stos
xchg
in
shrl
aam
push
loopne
inc
lock
cmpsl
dec
call
ficomps
and
pavgb
filds
pop
sub
ds
pushf
daa
lahf
out
int3
xchg
mov
test
scas
decb
mov
pop
lret
push
adc
adc
sub
outsb
xchg
aaa
pusha
sbb
in
es
lret
mov
pop
lea
xor
bswap
hlt
mov
daa
leave
mov
out
inc
addr16
xor
ja
outsb
leave
or
mov
inc
sbb
popl
pop
jns
rorb
sbb
pushf
out
rorl
push
cmpsb
pushf
icebp
hlt
fisubs
mov
inc
xchg
pop
shl
es
scas
pusha
pop
xchg
cmpsb
xor
cltd
pusha
push
push
xlat
icebp
das
cmp
inc
mov
push
dec
aaa
push
or
mov
sti
out
xchg
cmp
popf
fistl
and
and
int3
in
out
pop
jg
pop
test
mov
cmp
jl
sarb
lock
jns
loop
mov
fucompp
adc
mov
fldt
push
xlat
pop
loopne
les
in
mov
pop
in
xor
cmpsl
lea
sbb
out
mov
jne
pop
xor
mov
inc
mov
and
xchg
or
mov
sub
jae
add
leave
ss
and
mov
lods
xchg
in
xchg
cld
mov
mov
or
add
xor
and
ficoms
cmp
mov
shrb
mov
rorb
pop
sti
mov
or
pop
jge
insb
movsb
dec
xchg
cmpsb
adc
lret
pop
outsl
outsb
lods
daa
fwait
push
shll
sbb
sbb
add
add
mov
inc
pushl
dec
pop
inc
popa
fldcw
add
add
cmp
in
pop
dec
and
outsl
sub
cmc
xor
fidivl
dec
xlat
dec
jne
push
mov
in
mov
push
dec
push
in
xchg
lahf
xchg
pushf
in
insb
cli
cltd
fs
sahf
jo
mov
jecxz
pop
sbb
mov
adc
fildll
aaa
add
add
xchg
pop
sub
cld
or
loop
insb
add
data16
lock
adc
add
arpl
or
xor
faddl
sub
xor
js
cmpsl
popf
pop
dec
jp
fsts
push
mov
inc
pop
add
cmp
fidivs
jp
jnp
scas
cmp
inc
cltd
sbb
jl
out
add
lahf
inc
std
sub
cmc
mov
mov
push
out
xor
mov
jo
dec
jns
lea
insl
xchg
push
adc
mov
adc
fdivr
sti
push
lods
adc
leave
push
movsl
ja
daa
xchg
clc
lds
cmp
push
out
fs
sbb
or
fisubl
mov
out
xchg
sub
xor
jle
sbb
clc
mov
adc
or
repnz
popf
xor
sub
fwait
pop
jo
pop
sub
pop
mov
xor
loope
out
xchg
dec
fnstenv
mov
pop
rolb
icebp
inc
mov
sub
fistps
gs
dec
imul
js
push
and
imul
inc
sub
sbb
out
cmc
add
xchg
inc
out
inc
xor
rorb
adc
cmp
cmp
sbb
mov
ficomps
xor
pop
xor
sub
or
iret
rorl
icebp
out
jno
or
fnstcw
add
cmp
pop
fcompl
xchg
mov
popf
add
xor
data16
sbb
arpl
lcall
popf
jg
push
adc
fldenv
pop
bswap
test
lds
xor
fstl
sub
adc
cmpsb
testl
sbb
mov
pushf
xchg
lret
xor
mov
cmp
lcall
roll
xchg
pop
add
in
imul
push
mov
adc
sbb
pop
repz
shlb
ret
test
in
mov
sbb
nop
dec
scas
dec
or
out
mov
popl
cmp
shll
add
lret
in
sahf
out
outsb
sbbb
fildl
jp
test
cwtl
jo
cmp
and
add
and
mov
leave
push
xchg
out
cmpsb
add
loopne
pop
cmpsb
sahf
orb
cmpb
mov
jg
hlt
fldt
orb
mov
les
and
cmp
lcall
js
or
add
mov
xchg
or
or
inc
lea
bound
xor
ljmp
aaa
sub
push
insl
loop
add
or
mov
lahf
xlat
sub
lock
out
sub
sub
add
fsubl
out
pop
inc
pop
sbb
jmp
dec
xchg
push
xchg
cwtl
push
shl
popl
mov
ud0
jp
jg
xor
adc
sub
lret
out
or
push
lahf
mov
or
fcoms
sub
lods
out
cmp
fisubrl
and
addr16
rorl
sahf
mov
mov
lock
mov
pop
aaa
sahf
sub
pop
fs
cmp
cmp
stos
xchg
or
xchg
out
fdivrp
sub
das
sbb
stos
cltd
cmp
sbb
cmp
fdivrp
xchg
outsb
push
inc
lods
sbb
inc
mov
insb
push
jl
mov
fiadds
cmp
fimull
out
pop
add
ljmp
and
cltd
xchg
out
stos
mov
std
fisttpll
das
cmp
add
adc
je
jae
fidivs
lea
inc
fs
mov
and
mov
inc
add
jge
or
shrb
jmp
ficompl
mov
mov
xor
pop
clc
sbb
test
sbb
cmp
cmc
daa
in
sbb
into
sub
xor
jle
mov
fisubrs
cmp
xor
push
mov
adc
jne
scas
mov
loope
and
aas
mov
stc
xor
jno
mov
outsl
lcall
lret
andb
stos
imul
stos
or
aam
mov
pop
add
les
sub
andnps
fwait
aas
je
fsubr
mov
cltd
jmp
sbb
lock
xor
ljmp
xchg
mov
lods
cmp
jne
pop
add
lds
and
int3
mov
pop
rcrb
into
xor
mov
cli
mov
jbe
and
or
mov
movd
test
or
syscall
stc
xor
mov
adc
mov
sub
mov
jbe
cmpl
jb
nop
push
mov
cmpsb
jns
pop
daa
int
std
pop
in
inc
aam
adc
or
mov
loopne
xchg
push
xor
negl
js
ret
add
jns
sbb
and
xlat
ja
dec
ud0
insl
jne
lods
mov
dec
mov
pop
inc
icebp
cmp
adc
xlat
int
fisttpll
add
sub
adc
lcall
jmp
orb
bound
lret
pop
and
scas
pop
xor
std
or
movsb
call
std
loopne
and
sub
xor
or
push
mov
ja
add
dec
cmp
xor
xor
pop
jno
lret
dec
cld
fmuls
fnstenv
shl
bound
xor
xor
adc
jmp
cmp
or
psubw
mov
mov
mov
and
lcall
mov
jns
ret
adc
xor
icebp
and
push
sbb
fs
jmp
movaps
es
dec
fistl
dec
mov
push
daa
lods
mov
in
in
mov
jb
sbb
jae
aas
jo
mov
push
mov
fisubrl
stos
scas
pop
test
ss
call
pop
xchg
in
in
sub
pop
xchg
and
jns
dec
inc
inc
xadd
xchg
lret
jg
inc
mov
and
jmp
xchg
fs
push
rcrb
add
and
cld
das
mov
cwtl
imul
inc
cmp
fidivrl
mov
roll
inc
and
mov
inc
dec
fcmove
cltd
and
lahf
sti
pop
xchg
sbb
mov
inc
lret
jbe
test
sub
mov
shlb
in
call
dec
dec
aad
push
mov
stc
pop
loopne
loopne
and
jo
ss
imul
dec
and
sub
mov
or
scas
mov
and
sub
cmc
inc
stos
or
and
jge
jge
outsl
in
sbb
cmc
test
jmp
leave
lods
sbb
sbb
in
push
movzwl
cmp
push
loopne
push
add
jo
repz
mov
lods
push
jge
add
int3
fisubrl
xor
sub
in
pop
jb
jo
pop
and
mov
fisubl
adc
pop
stc
nop
adc
lret
int
pop
cmp
pop
test
movsl
jbe
xor
pop
icebp
mov
insl
int
sub
mov
data16
pop
ucomiss
adc
inc
fisttpll
fisubs
jne
sbb
push
inc
push
xchg
sahf
fcoml
jae
stos
int
imul
sahf
inc
inc
dec
pop
addr16
cmp
sbb
adc
inc
lods
adc
out
imul
cmp
aaa
testb
dec
ficompl
fstps
sub
into
jbe
gs
adc
mov
dec
adc
jne
loope
addr16
push
pushf
lret
call
push
lock
cmc
mov
jge
mov
add
insl
dec
inc
mov
add
mov
in
pop
int3
inc
xchg
mov
add
insb
sub
loope
inc
push
dec
mov
adc
orb
scas
add
xor
xor
setp
out
xchg
aad
pop
gs
shlb
js
xor
and
lock
push
pop
or
mov
adc
xchg
sub
movsb
int3
pop
lods
xchg
dec
lahf
sub
sbb
cmp
or
outsl
mov
xchg
ljmp
mov
mov
lods
push
gs
adc
outsb
dec
dec
aaa
and
xchg
les
dec
fwait
push
lods
mov
icebp
add
jns
sbb
push
shr
adc
gs
stc
inc
mov
aam
jp
cmp
jle
mov
int3
sub
inc
outsl
call
unpcklps
fadd
inc
inc
sbb
mov
subb
push
inc
inc
pop
iret
dec
rcll
dec
cmc
nop
inc
ret
mov
fwait
mov
into
cmpsb
cs
jo
push
and
inc
dec
mov
and
inc
pop
cwtl
add
and
xor
cli
sbb
add
inc
mov
hlt
imul
ljmp
pop
leave
push
cli
push
es
cs
rcrl
sub
mov
jns
dec
cmc
jbe
jp
dec
push
rcl
mov
out
dec
sub
ss
mov
imul
hlt
xchg
push
pushf
call
fists
xchg
in
xchg
mov
xor
cmp
movsl
dec
out
jbe
sub
mov
out
pop
or
cwtl
hlt
jg
or
sbb
sub
or
aaa
and
mov
adc
imul
add
iret
jae
scas
out
orb
pusha
dec
cli
mov
orb
sti
in
pop
daa
and
orb
dec
jle
and
inc
xchg
push
push
testb
mov
ja
shlb
nop
mov
push
push
clc
cwtl
outsl
outsb
pop
and
scas
mov
xchg
adc
mov
dec
pop
jp
jnp
adc
daa
pop
xor
insb
loope
xchg
call
dec
xchg
jecxz
rclb
or
mov
dec
into
dec
xorb
add
mov
call
sub
test
jbe
std
lahf
mov
in
inc
mov
loop
movsl
out
sub
xchg
pop
sahf
orb
out
movsl
pop
jl
cmp
lock
add
stc
pop
push
lea
xchg
je
mov
adc
jbe
test
dec
add
mov
fcom
or
adc
inc
mov
test
mov
mov
stos
and
cmp
pop
jmpw
sbb
cmp
repz
pop
inc
adc
cmp
mov
fcoml
in
xor
mov
test
jp
pop
data16
outsl
sub
outsb
cmp
inc
pop
sbb
fwait
dec
xlat
xchg
ss
mov
fisttpll
inc
cmp
xchg
adc
in
and
and
add
or
mov
cmp
int
insl
fnstenv
adc
test
insb
sbb
lea
mov
push
ja
pop
imul
jmp
mov
fstpt
adc
sbb
aas
es
andl
mov
rcrl
into
push
xor
sub
or
mov
cmp
in
cmp
pop
and
bound
pop
inc
fadds
xchg
sbb
fs
lods
xchg
mov
xor
or
out
js
xlat
pop
jbe
xorb
pop
rcr
mov
mov
lods
mov
dec
stos
push
and
jge
mov
fcmove
test
cld
sub
pushf
push
fistps
sub
mov
xchg
gs
ret
cmp
cmp
inc
mov
or
pop
testb
es
mov
or
enter
fldcw
loope
sahf
scas
cmp
lret
negb
xor
loopne
mov
add
pop
in
mov
dec
leave
push
sbb
push
mov
jb
adc
push
xchg
pop
ud1
subb
jge
jne
in
shrb
inc
dec
sti
jns
inc
add
mov
rcl
std
sub
adc
pop
mov
pand
lcall
xchg
vdivsd
mov
adc
stos
add
sti
push
xchg
sub
sbbb
popf
pop
jbe
fidivrs
hlt
add
dec
pop
les
mov
fwait
xor
xlat
and
add
insb
getsec
mov
divb
dec
jo
jp
lret
bts
lea
xlat
mov
lret
xlat
sbb
ficoms
mov
test
test
xchg
stos
mov
test
and
pop
stos
scas
push
sti
mov
cmp
push
pushf
mov
std
les
roll
stos
lea
add
mov
stos
cwtl
cwtl
inc
fs
cmp
pop
sub
or
xchg
sub
and
xor
inc
stc
dec
cmp
fucomp
testl
sti
cmc
sbb
inc
mov
mov
fmull
rcl
fidivrl
or
jl
mov
gs
mov
xchg
movl
ja
ficompl
xchg
popf
xor
dec
mov
out
jbe
xchg
dec
outsl
xchg
loopne
outsb
sti
add
cmp
lea
mov
pop
popa
out
push
and
mov
cmpsl
daa
push
pop
jcxz
pushf
push
cmp
mov
and
enter
fwait
dec
call
mov
daa
pusha
add
or
or
hlt
inc
jle
jge
cmp
sub
sbb
daa
cmp
add
fdiv
mov
cmp
shrl
aas
jo
jno
xor
and
repz
dec
inc
aam
or
inc
icebp
cmp
cmp
int
lret
mov
add
xchg
arpl
cmpsl
dec
movsb
pop
xor
sbbl
rcr
faddl
sbb
mov
adc
sub
pmuludq
add
out
push
dec
inc
lret
push
popf
andb
mov
push
and
pop
mov
test
out
scas
in
scas
jnp
bound
dec
pop
test
stos
aad
test
jle
shr
dec
mov
add
lods
push
sub
arpl
push
adc
inc
hlt
add
leave
orb
dec
mov
in
jbe
xchg
inc
and
pop
loopne
ret
rcrl
pusha
dec
pop
mov
add
out
mov
jecxz
push
dec
pop
and
cmp
cmp
std
imul
push
fcomps
or
outsl
cmp
sbb
inc
pop
cmp
addr16
pop
mov
out
jecxz
lret
int3
movsl
and
jge
pop
pop
push
sub
push
insb
lods
lret
insl
pop
nop
or
inc
pop
call
mov
repnz
imull
loopne
rcl
push
lock
movsb
inc
sbb
pop
imul
xchg
adc
dec
sbb
aaa
mov
pop
mov
scas
mov
push
pusha
invd
ds
enter
add
jae
xor
and
dec
insb
fucomp
sbb
pusha
mov
pushf
xchg
xor
int3
xcrypt-cfb
cmpsl
out
aad
dec
add
out
mov
movb
ss
pushf
inc
add
ja
mov
mov
and
test
stos
sbb
ud2
sub
jecxz
int3
fs
push
add
mov
addb
pushf
mov
pushf
or
jnp
loope
mov
les
xchg
cmpsb
in
fsubl
push
mov
ss
std
add
sub
jge
mov
fimuls
sahf
xchg
cmp
test
lock
pop
add
xchg
cmp
es
and
testl
mov
bound
mov
test
inc
push
push
lods
in
repnz
xor
or
jns
and
jo
cwtl
mov
push
xchg
dec
push
movsl
out
lret
and
add
lea
cmp
adc
mov
mov
mov
out
aam
test
dec
setbe
inc
mov
or
dec
xchg
loop
stos
sub
dec
lahf
xchg
mov
adc
add
dec
cmp
adc
cmp
dec
cmc
fsts
inc
test
xchg
lcall
inc
mov
data16
sub
decl
pop
cmp
ss
loopne
xchg
cltd
and
pop
lds
sbb
dec
aas
or
mov
insl
jmp
jns
jle
add
out
test
fbstp
lds
mov
xchg
jne
lahf
in
pop
fstl
mov
inc
jp
lods
add
test
cmp
or
out
sbb
push
lods
xor
mov
mov
pusha
dec
ret
rorb
insl
sub
test
pop
cmpsl
sbb
pushf
movsl
loope
mov
daa
jae
imul
dec
aad
xor
es
add
mov
xlat
pop
cmp
popf
mov
es
test
mov
add
dec
shlb
push
jns
mov
xor
dec
sub
cmp
lea
lcall
dec
or
stos
loope
sub
pop
and
inc
cmp
xchg
call
jmp
and
mov
jge
push
lret
pusha
adc
pop
mov
sbb
mov
adc
jmp
andb
mov
imul
pop
or
enter
mov
in
inc
inc
insl
sub
pop
or
ret
mov
mov
iret
and
scas
cli
add
jb
mov
dec
add
ficompl
mov
jmp
lahf
sarl
aaa
jge
mov
dec
push
outsl
repz
addb
push
add
adc
xor
mov
stos
ja
or
adc
adc
add
adc
sbb
lahf
roll
inc
mov
add
lea
les
clc
ficoms
lods
add
and
lcall
hlt
fcmovnu
sub
ja
lock
pop
dec
out
and
add
pop
xchg
mov
and
pop
loopne
out
leave
mov
cmp
mov
inc
mov
add
call
loop
lods
jo
mulb
pop
rcll
add
or
bound
mov
sub
roll
push
mov
mov
xor
and
dec
mov
fidivrl
leave
pop
adc
or
lea
mov
add
setns
fwait
nop
les
push
xchg
add
mov
xchg
jb
mov
int
fwait
insb
and
push
addr16
mov
cs
leave
mov
mov
xchg
sbb
cmpsb
cmp
mov
xchg
pop
out
jp
mov
dec
cs
or
enter
sbb
cld
shll
lods
sbb
pavgb
int
mov
stos
shlb
popf
pop
clc
xor
sbb
and
jge
dec
repnz
or
adcb
and
lea
int3
orb
fimull
lret
adc
pop
cmp
out
xlat
sub
sbb
xor
popf
push
ret
int3
push
pop
add
push
ret
add
sbb
fildll
je
or
inc
xor
dec
add
add
sbb
push
push
sub
daa
je
mov
addr16
and
add
test
xor
out
push
in
sbb
ja
sub
pop
sub
add
or
sbbl
sbb
dec
sub
bound
sbb
push
adc
add
add
aad
adc
inc
lcall
pop
add
pop
and
pop
jg
pop
adc
add
pop
daa
add
add
xchg
cmp
sub
lods
add
sysret
and
inc
or
sbb
lret
jb
adc
xor
or
and
sbb
mov
sbb
add
add
cltd
adc
push
push
or
push
inc
adc
ja
adc
sbb
adc
movsb
sbb
cltd
and
sbb
add
adc
pop
or
sub
lods
add
xchg
sub
ss
sbb
xor
adc
lods
add
lret
adc
sbb
adc
test
add
cmp
fidivs
xor
add
or
gs
sbb
or
xor
pop
pop
push
push
add
add
inc
xor
adc
inc
sub
sub
pop
sub
xor
and
jecxz
sbb
add
add
pop
adc
daa
sub
sbb
or
add
sbb
pop
sbb
dec
sbb
jp
ret
hlt
mov
sbb
jo
mov
cltd
js
adcb
pop
add
sbb
imulb
inc
jo
and
push
lock
xor
and
fidivl
mov
std
loopne
cltd
pop
adc
in
dec
jge
xor
sub
dec
call
pusha
sbb
outsl
sbb
sbb
cs
xor
sub
cmp
add
cmp
or
outsl
sub
add
es
inc
push
inc
and
dec
dec
imulb
daa
pop
outsb
js
jge
add
stos
aaa
sbb
dec
and
dec
nop
inc
ret
jne
push
jmp
arpl
pop
sbb
es
add
inc
sbb
ficomps
bound
enter
fwait
and
inc
add
pop
fstps
pop
sbb
mov
cmpl
cmp
or
lret
pop
pop
mov
fisubrs
mov
cmp
and
test
negb
dec
lcall
add
push
push
fnsave
or
push
push
adc
mov
movsl
pop
insl
xor
pop
pop
sbb
mov
jbe
faddl
jne
sub
cmp
pop
out
add
or
push
pop
sbb
xor
adc
pop
xor
sub
push
sbb
cmp
fisttps
sub
sub
cmp
sbb
or
pop
add
movsl
and
and
and
sub
add
add
push
lods
aas
mov
jmp
pop
add
movsl
aas
and
movsl
sub
sbb
push
pop
cmp
or
and
inc
add
or
push
sbb
adc
pop
and
push
dec
cmp
push
push
inc
daa
lcall
push
adc
xchg
sbb
pop
pop
adc
int
xor
dec
inc
sbb
sub
or
mov
or
das
or
adc
or
sub
sbb
push
sbb
add
xor
push
daa
mov
mov
and
in
dec
test
and
pushf
inc
cmp
push
mov
into
or
xor
sbbl
or
inc
cmp
push
mov
test
pushf
movsb
or
inc
orb
idivb
add
cwtl
xchg
cmc
cmpsl
adc
outsb
mov
jno
or
cmp
test
rorl
in
sub
jle
mov
add
rorl
and
inc
dec
jae
pusha
sbb
shld
lods
mov
adc
and
stos
es
fwait
out
jne
mov
and
sbb
out
stc
lea
mov
pop
dec
test
insl
lahf
adc
dec
es
pop
fbstp
aam
sbb
ds
aaa
dec
out
aas
sbb
movaps
out
pushf
inc
xchg
inc
xchg
xor
movsl
adc
gs
stos
test
xor
and
enter
mov
xor
insb
fadds
sahf
mov
in
sub
js
les
sub
aam
sub
popa
inc
int
and
and
hlt
fdivl
ficoms
cltd
icebp
pusha
adc
mov
pop
dec
cmc
and
pop
mov
pop
or
stos
inc
jmp
adc
lods
or
sbbb
test
mov
ficompl
mov
imul
lea
lret
stos
pop
aam
xchg
sbb
inc
js
fwait
cli
add
out
sbb
popa
sbb
jo
adc
subl
push
dec
sub
inc
mov
cs
and
enter
or
pop
out
push
pushf
jnp,pn
xlat
mov
js
dec
ficoms
sysret
sbb
mov
fsubrl
add
mov
xchg
ret
fiadds
xorl
imul
aam
std
sub
pop
into
mov
dec
fiadds
or
int3
rorl
cmp
iret
sbb
mov
imul
jg
mov
leave
add
dec
pop
xlat
pop
mov
mov
and
bnd
xchg
int
lahf
fcomi
loopne
daa
mov
xchg
setae
pusha
aaa
pop
add
inc
xor
mov
mov
imul
adc
mov
loopw
jmp
ss
sbb
shrd
int
enter
inc
les
push
in
in
xor
out
loopne
imulb
sub
lea
popf
jb
arpl
aaa
ret
inc
ret
notb
and
mov
dec
inc
sbb
push
les
ret
mov
xor
inc
cmp
and
sbb
dec
out
inc
repnz
mov
pop
cli
dec
push
cmp
add
fcompl
dec
dec
rcrb
ja
jge
pop
iret
mov
lcall
rclb
adc
mov
aaa
xchg
mov
pop
arpl
addr16
push
lret
mov
and
enter
jb
cs
lods
push
hlt
mov
ss
gs
int3
mov
scas
insb
push
push
loope
shrl
out
fmull
jmp
jge
push
sets
stos
inc
adc
shl
jp
stos
addr16
fbstp
pop
imul
sbb
pop
xchg
out
nop
std
scas
mov
xor
jbe
lret
loop
dec
test
adc
dec
adc
and
add
mov
aaa
or
lea
and
jb
mov
xor
pusha
dec
jb
popf
xorl
rcll
xchg
jbe
push
stos
add
mov
jo
imul
dec
outsb
aaa
add
mov
pusha
repz
cmp
push
or
mov
fdivp
insb
fdivl
pop
std
add
cmp
fisubrs
mul
cmp
sahf
and
roll
stos
mov
mov
cmp
shrb
lcall
inc
mov
mov
mov
jae
out
pusha
les
push
inc
mov
xchg
lock
pop
adc
sub
outsl
and
jb
cmp
inc
mov
cmp
pop
mov
lods
xchg
inc
fbld
enter
cmp
jl
xchg
xor
cltd
push
xchg
dec
dec
mov
inc
lods
dec
ljmp
push
adc
mov
xlat
push
cmpsl
mov
or
out
xchg
pop
xchg
pop
movsb
xchg
pop
jg
add
cmp
cmp
cmovno
shl
dec
pop
push
jmp
in
xchg
sarl
mov
jp
bswap
ljmp
xchg
dec
xchg
mov
das
or
sbb
leave
jbe
or
push
cs
or
mov
xor
jecxz
lret
lock
inc
mov
daa
adc
xor
mov
cs
mov
out
lock
xchg
ss
or
in
les
adc
hlt
pop
jbe
outsl
mov
cmp
inc
sbb
or
mov
jmp
loopne
sbb
mov
jbe
dec
loopne
or
setbe
lods
std
imul
xchg
pop
push
shrl
and
xchg
inc
sbb
fwait
pop
orl
lods
xchg
dec
push
xlat
loopne
out
or
out
mov
jns
dec
in
scas
pushf
cltd
sbb
out
xor
out
outsb
xchg
cmp
add
stos
popa
adc
mov
sbb
fwait
or
mov
mov
pop
mov
imul
in
adc
pop
shlb
mov
mov
mov
jg,pt
xor
mov
fsts
call
jg
mov
divl
lds
inc
and
pop
aas
xchg
ret
ror
int3
into
and
jge
idivl
int
cmpsb
push
push
cmp
fcmovu
out
shr
xor
shlb
mov
pop
ja
jb
das
add
or
decb
add
scas
push
jl
aam
int
sbb
inc
mov
pcmpgtd
js
mov
adc
xchg
or
imul
push
jae
push
add
int
push
ror
sub
insb
mov
sub
pop
daa
stc
xchg
movsl
inc
mov
test
cmp
outsl
icebp
mov
jae
xor
mov
or
pusha
add
or
or
pop
cmp
add
fnstenv
mov
sub
jne
aaa
fsubl
loopne
mov
mov
sbb
imul
sti
cmp
add
adc
ss
adc
test
sbb
mov
pinsrw
jae
or
sti
inc
outsl
mov
jbe
or
jo
les
leave
loop
inc
loop
xchg
shrl
in
jle
mov
jbe
cmp
arpl
jbe
shrl
inc
adc
pop
add
jge
xchg
xchg
pusha
dec
jle
rclb
jne
fnstsw
add
mov
imul
mov
mov
xor
subb
jnp
ret
or
outsl
push
sarl
or
and
out
add
movlps
xor
jne
sub
sub
add
mov
dec
or
dec
jl
mov
jo
mov
cmp
stos
or
out
and
aaa
cmp
repnz
outsb
inc
adc
sbb
sub
lods
add
pop
cwtl
mov
xchg
add
push
xchg
movsbl
cwtl
dec
push
out
fwait
loop
cmp
mov
fsubs
in
rolb
mov
inc
sbb
ds
mov
adc
inc
push
gs
nop
loop
in
sarl
add
aam
add
test
orb
packssdw
mov
les
call
pushf
fwait
jno
out
fsubrl
inc
xchg
out
ja
xchg
icebp
xchg
pop
dec
push
dec
movsb
lock
xor
fcoml
ds
mov
mov
adc
loopne
push
mov
into
xchg
mov
fs
cmovge
mov
mov
ret
std
mov
nop
and
xchg
in
sub
push
popa
lret
mov
add
bound
gs
test
movsb
iret
lret
push
aaa
je
dec
sbb
adc
fxam
int
xor
mov
aam
cmc
loopne
cmp
sti
jns
sbb
mov
adc
mov
into
les
lods
and
mov
pop
push
or
inc
add
leave
dec
pop
pop
or
cmp
lret
mov
imul
out
push
or
dec
xor
rorl
xchg
sbb
pop
pop
sbb
mov
mov
mov
pop
pop
aas
pop
add
das
push
icebp
jge
out
xor
insl
add
ds
add
sti
pop
inc
push
sub
xchg
push
jmp
fisubrl
add
sub
or
fsubl
fiaddl
or
loopne
mov
pop
sbb
ss
out
lea
adc
lret
call
out
pop
jb
sub
inc
pop
sbb
mov
push
or
add
pop
mov
add
add
mov
addr16
or
gs
cs
lods
pop
xorb
push
push
outsl
or
add
out
repnz
daa
cmp
or
add
and
ja
pop
clc
and
aas
add
or
pop
sbb
aaa
xor
xor
ret
incl
pop
dec
mov
add
mov
cmp
daa
aaa
pop
pop
jg
adc
into
pop
imul
shl
inc
orl
out
push
sub
adc
and
shl
adc
sbb
imul
bound
stos
cmp
insb
and
sbb
or
add
lods
jge
dec
sbb
fnsave
push
xor
inc
pop
sub
dec
and
cmp
push
dec
and
sub
pop
sub
cs
push
mov
sub
push
xor
fs
aaa
push
add
adc
cs
push
sub
addr16
inc
and
lds
pop
push
sub
lods
es
sahf
add
pop
sub
push
pop
out
add
lcall
sub
push
sbb
and
inc
sbb
ljmp
out
or
sub
jg
or
pop
fisttpll
sbb
dec
adc
cltd
sbb
test
pop
adc
sbb
xor
aas
lcall
push
cmp
das
pop
mov
and
xchg
pop
and
das
mov
xchg
sbb
add
mov
push
pop
pmaddwd
mov
leave
dec
sbb
iret
jmp
sahf
movsl
lret
les
jmp
pop
or
and
fmull
or
add
dec
mov
add
fidivrs
out
add
add
sbb
lods
fidivs
fmuls
jne
mov
dec
add
xchg
sahf
add
sti
je
adc
aaa
adc
dec
mov
cmpsl
adcb
add
lret
std
pop
dec
push
add
and
out
xlat
jbe
pop
jl
outsl
insl
pushf
sub
jns
cmp
mov
or
push
les
jae
orb
add
pushf
outsb
ds
fstl
mov
orl
add
cmpb
push
sub
mov
lods
out
mov
add
imul
adc
cmovbe
mov
mov
aaa
cmpsl
aad
cmc
or
mov
adc
xor
push
adc
add
imul
mov
outsb
adc
xor
jg
lock
mov
aad
mov
add
mov
xor
shll
movsl
popl
xchg
mov
dec
out
loopne
inc
test
add
dec
arpl
push
ror
xor
out
das
push
sbb
data16
pop
fsubrp
es
dec
sbb
mov
out
inc
xor
push
sbb
inc
test
popf
add
add
jg
cmc
mov
dec
or
mov
push
xor
cmc
push
lea
lea
push
sub
shl
add
lods
lea
lds
lea
rcrb
cmp
sub
xor
jl
mov
dec
or
cmp
pop
aas
inc
or
sub
pop
jbe
int3
sbb
mov
daa
pop
xchg
xchg
call
repz
sub
aad
pop
add
push
pop
sub
gs
insl
sub
gs
sbb
gs
std
fistpl
or
jbe
and
sub
pop
cmpsl
inc
push
cmp
aaa
sbbb
cltd
ja
aas
cmp
adc
xchg
or
sbb
dec
mov
imul
insb
mov
jbe
aaa
and
int3
cli
les
jb
pusha
inc
or
mov
add
add
mov
push
sarl
cmp
sbb
add
out
adc
iret
push
sbb
es
sub
sub
repnz
sub
pop
cmp
pop
loop,pt
mov
outsl
xor
sbb
dec
and
test
sub
adc
sub
cs
jp
sbb
sub
fldcw
and
cmp
push
aas
add
jmp
pop
cmp
adc
add
or
test
mov
addr16
add
push
inc
sbb
pop
in
and
xchg
xchg
jl
inc
and
pop
sbb
lds
push
and
inc
sub
adc
std
mov
and
sub
lds
mov
cli
push
aaa
xor
inc
or
and
add
lds
pusha
pop
push
and
movsl
sbb
movsl
sub
xor
add
cmp
inc
xor
and
add
xor
arpl
adc
arpl
push
sub
cmp
ss
dec
lret
xor
add
adc
or
shl
mov
lock
rcll
sub
jg
pop
mov
jge
hlt
push
test
sbb
mov
add
mov
jle
xor
les
inc
sub
jae
pop
mov
sub
or
inc
jmp
ret
sub
jge
add
mov
int
lea
and
pop
xor
jge
cmp
push
sarb
into
add
jmp
int3
aad
and
fwait
cmp
adc
fists
mov
xorb
push
inc
and
call
cwtl
adcb
pop
and
pushf
sub
mov
jl
pop
shll
addr16
daa
push
fiadds
fistl
in
jg
xor
test
and
cld
and
movsl
cmp
dec
add
sub
pusha
mov
xchg
pop
hlt
les
shlb
iret
and
adc
jbe
dec
mov
mov
sub
mov
cmp
jae
scas
add
xorl
sub
mov
fdivr
xchg
lret
lret
and
sbb
icebp
js
ret
mov
lods
clc
imul
ja
int
jl
je
mov
daa
adc
adc
test
fidivrs
pop
adc
dec
add
pop
call
cli
mov
pop
add
pop
dec
clc
inc
por
mov
xchg
bound
mov
mov
out
out
xchg
in
test
dec
inc
adc
fbstp
pop
jg
ds
or
adc
pop
loopne
dec
setb
sbb
jecxz
movsl
movsl
jbe
push
inc
xchg
xchg
outsb
mov
mov
inc
mov
fsubr
mov
lods
aad
mov
inc
adc
mov
data16
jnp
fwait
and
jge
bt
and
sbb
fwait
mov
xorl
insl
out
xor
xchg
mov
sbb
das
add
insl
inc
dec
push
inc
sbb
xchg
xor
or
sarl
or
bound
jge
push
mov
pop
push
aam
sbb
negb
or
add
dec
inc
xchg
jo
or
jbe
push
inc
add
push
push
mov
jg
das
inc
cmp
nop
jg
add
fcmovu
sub
loop
xchg
fidivl
sub
js
mov
cwtl
out
fistpl
push
scas
push
push
or
inc
lahf
mov
mov
jo
lods
mov
test
mulb
icebp
fildl
inc
lret
pop
mov
jmp
ljmp
lret
inc
out
pop
sbb
out
arpl
sbb
call
div
inc
sbb
scas
pop
sahf
setnp
mov
adc
out
test
jns
icebp
movsb
sub
push
fisubl
push
and
loope
ror
int3
sysexit
test
cmp
inc
mov
jg
into
cltd
sahf
cmp
push
cmpsl
sub
adc
mov
sbb
add
or
sbb
outsb
jecxz
mov
fidivrl
inc
mov
filds
dec
out
or
inc
mov
stc
and
or
jmp
inc
push
sbb
jp
adc
fsubrp
lea
adc
stos
out
das
fs
call
xchg
push
pop
lret
fstpt
aas
int3
mov
dec
into
mov
aaa
pusha
push
adc
jl
ja
clts
sbb
adc
loop
mov
stos
xlat
pop
push
sbb
iret
daa
jns
pusha
imul
mov
mov
pop
lea
cwtl
push
mov
scas
lea
cmpsl
adc
into
loop
and
xchg
add
cmp
cmpsl
roll
lret
or
nop
xchg
add
xchg
add
or
pop
aad
dec
mov
daa
pop
test
popf
ds
cmp
or
xor
add
outsl
add
pop
push
imul
push
lea
cmpsl
push
int3
pop
sbb
popa
out
push
jns
adc
lds
sbb
lods
insl
adc
out
pop
pop
sbb
or
aas
add
int3
sbb
pop
fs
fstpl
dec
ds
or
dec
push
mov
sub
in
int
push
popf
outsb
cld
orl
adc
or
adc
or
add
mov
and
and
push
push
cmp
sub
sbb
or
pop
addl
xchg
dec
pop
sub
and
sbb
sub
cmpsl
daa
pop
add
movsl
push
dec
sub
sub
push
push
pop
daa
mov
mov
gs
cmp
jle
sbb
add
and
pop
sub
mov
aaa
loope
sahf
sub
or
or
xchg
or
adc
add
sbb
cmp
sbb
dec
adc
lret
pop
sbb
inc
sbb
mov
sub
or
pop
sbb
cmp
push
aaa
add
add
pop
add
sub
pop
inc
sbb
pop
and
xchg
pop
adc
lret
arpl
push
cmp
add
xor
pop
xchg
sub
aas
outsb
aas
pop
sub
cld
ss
sbb
adc
cvtps2pi
cmp
sbb
push
cld
push
aaa
and
sbb
adc
pop
addr16
cld
mov
cmp
xor
push
out
aaa
push
addr16
sub
and
push
stos
aaa
sub
cmp
push
mov
out
adc
lods
sub
add
sub
push
cltd
mov
test
sbb
xchg
sbb
std
mov
mov
lods
shl
lahf
mov
pusha
push
jge
test
test
mov
cmc
in
stc
out
cmc
js
cmpsl
xlat
pop
pop
mov
cltd
out
sgdtl
int3
xor
nop
mov
shlb
std
test
popa
shrl
or
sbb
pushf
pusha
dec
fimull
pop
ret
mov
in
pop
std
xor
jge
pop
aam
or
pushf
xchg
mov
xor
jb
xchg
out
add
adc
jno
mov
cmc
dec
jmp
fisubrl
jmp
mov
sbb
scas
pop
and
push
pop
jecxz
jne
lret
dec
push
inc
clc
mov
or
or
hlt
xor
dec
pop
dec
pop
inc
push
and
mov
cltd
and
jb
push
sti
pop
or
sbb
push
fs
lahf
int3
movsl
sti
add
cmove
xor
popf
add
mov
es
inc
daa
lret
clc
gs
inc
pop
mov
dec
mov
pop
lock
jg
or
dec
js
sub
and
popf
bound
lods
dec
sub
inc
scas
mov
inc
lds
or
lahf
aaa
cltd
jg
bound
add
adc
out
int
movsl
add
cmp
icebp
mov
lret
testl
or
push
mov
pop
and
movsl
xorb
pop
jg
cld
adc
mov
push
sub
rcrb
sub
pop
xor
xor
pop
out
out
fwait
test
fiaddl
arpl
inc
loope
cmpsl
lea
out
sub
add
repz
xor
cwtl
adc
enter
mov
mov
sub
cmpsl
sub
xchg
inc
les
jo
scas
mov
ror
or
sbb
ficoms
cmp
lods
add
bndldx
xor
out
pop
popl
add
mov
out
rcll
imul
xor
lret
and
adc
or
jbe
popf
sub
jnp
pop
hlt
aaa
adc
mov
mov
in
xor
inc
mov
ficoml
loopne
adc
pusha
aaa
js
and
aad
push
sub
lcall
lahf
push
sahf
cmp
or
sub
lods
fsubrs
mov
int3
lds
adc
adc
movsb
ret
dec
out
mov
inc
mov
test
mov
lock
aas
xchg
lea
int3
loop
mov
out
mov
mov
ja
inc
je
fisubrl
cmp
lcall
mov
lret
add
push
rcll
xor
lcall
and
pop
xchg
sbb
sbb
push
lods
rolb
mov
push
fwait
xor
sbb
jbe
fbstp
add
psubusb
movsb
ljmp
sub
jge
pop
add
fs
and
cmp
test
cmpsl
mov
pop
leave
data16
jns
loopne
out
roll
es
jge
inc
mov
out
stos
out
gs
cmpsl
fcomps
pop
mov
fnstsw
jmp
jne
out
jg
pop
mov
jg
push
add
cli
movb
pop
scas
pop
notb
add
pop
ret
mov
and
push
mov
mov
xlat
into
and
clc
inc
xor
xor
scas
xor
mov
push
jae
sbb
lea
dec
rclb
fsubrl
out
out
bound
mov
mov
sbb
sub
into
dec
jl
je
into
inc
mov
sub
cmp
jle
jne
outsl
dec
add
add
inc
stos
in
mov
fdivl
test
mov
mov
mov
push
dec
mov
rcpps
fwait
inc
adc
mov
and
imul
xchg
push
add
mov
or
mov
mov
outsl
stc
or
cmp
and
daa
cwtl
lahf
leave
jg
aaa
mov
jmp
iret
sahf
stc
and
ss
jp
repnz
int3
lods
xor
out
fyl2x
add
adc
or
push
divb
pop
call
jbe
test
mov
idivl
dec
jae
loop
mov
rcrl
stc
lea
mov
into
flds
and
xor
sub
arpl
pop
aam
push
mov
mov
loop
adc
pop
sub
movsb
out
inc
mov
dec
xorb
cs
push
clc
xor
mov
mov
jl
xlat
mov
jl
aad
push
dec
push
lods
push
jp
inc
jge
cmp
in
add
jp
out
in
mov
sub
mov
imul
sbb
cmp
mov
loop
jl
ret
mov
lods
out
pop
cmp
ds
inc
cmp
clc
daa
aaa
jmp
dec
xchg
insl
mov
dec
xchg
push
stos
fxch
adc
adc
cmp
push
lods
cmp
pop
cmp
popf
rclb
lods
jle
mov
mov
mov
mov
data16
pop
inc
lods
inc
dec
jmp
mov
pop
pop
sub
push
in
daa
stc
cmp
xchg
xchg
sub
in
sbb
xor
lock
jg
fdiv
adc
lahf
rcll
inc
ficompl
mov
scas
popf
test
mov
lahf
movsl
ss
orb
jmp
mov
jae
in
sub
xorb
mov
mov
add
add
aaa
push
push
xchg
or
aas
jl
push
cmpsl
mov
adc
xor
mov
jle
sub
dec
jg
shl
xor
sub
and
scas
es
or
mov
jbe
mov
cmp
sbb
mov
cld
into
mov
jl
and
push
stc
cmpb
das
pop
lret
inc
or
inc
mov
imul
out
cld
int
pushf
pop
movsl
xchg
mov
lds
aaa
mov
sti
jns
outsb
cmp
outsb
mov
cmp
cmc
inc
addr16
jne
icebp
les
pop
jge
sub
push
out
outsl
pushf
paddusb
add
mov
aad
andb
out
mov
push
outsb
jno
push
mov
leave
pinsrw
sbb
and
dec
push
dec
adc
xchg
push
jb
das
lods
pop
lahf
mov
dec
pop
add
dec
mov
out
adc
or
movl
push
and
cmp
cmp
mov
pushf
jbe
data16
in
andb
and
cltd
ja
ss
dec
outsb
mov
mov
out
pop
add
movl
out
call
test
xchg
sbb
sbb
jl
and
xor
stos
xor
enter
andl
mov
sub
stc
in
test
rclb
sub
mov
and
and
jb
jnp
inc
dec
cmp
arpl
add
call
inc
push
push
test
add
pop
mov
mov
shrb
out
testb
pop
mov
inc
ficoms
hlt
popl
leave
pop
setae
or
bound
es
mov
sbb
xchg
sub
lock
out
stc
xor
inc
push
xchg
decl
mov
mov
dec
fcmovne
or
push
femms
subb
fisubl
adc
repz
sti
jns
enter
clc
out
cmp
xchg
sbb
loop
adc
cltd
jbe
ficomps
xchg
clc
push
nop
lods
orb
test
cs
jo
scas
andb
or
bound
inc
ja
pop
push
push
int3
and
int
imul
les
fxch
movsl
push
push
add
outsb
jo
stos
jne
dec
mov
sub
shr
rolb
dec
int3
bound
add
push
cmp
push
xchg
out
sub
or
xor
out
jnp
xchg
cwtl
sub
popf
out
outsb
in
mov
and
shrb
add
or
mov
jnp
fdivl
sysexit
mov
push
rcll
mov
pop
mov
and
out
and
sahf
aam
testl
xor
or
push
mov
leave
xchg
add
mov
out
outsb
lea
xchg
ds
aaa
jnp
xchg
mov
imul
xchg
rclb
jp
arpl
cli
xor
lret
xchg
pop
iret
hlt
out
push
push
fndisi(8087
les
call
fidivrl
mov
inc
inc
xor
jnp
leave
add
inc
and
or
stos
je
adc
jne
jo
fcomps
sbb
int3
xchg
out
mov
jle
inc
outsl
pop
inc
mov
shlb
pop
jo
mov
adc
sbb
out
cmpsl
pop
push
push
movsl
jmp
and
iret
sub
cmc
in
pcmpeqd
push
sub
gs
cmp
or
add
push
lods
movsb
bound
dec
out
xchg
fisttpl
je
cli
push
pop
sbb
aaa
ljmp
repz
leave
mov
iret
xor
ja
andl
adc
push
jge
daa
loop
add
mov
ret
insl
add
cmpsb
ss
in
mov
dec
fstl
pop
sahf
shrb
cmpl
mov
pop
ds
fdivr
jbe
or
sub
sub
cwtl
push
and
jmp
seto
imul
mov
addr16
adc
push
aad
repnz
xor
repnz
cwtl
or
jg
out
pop
pop
in
mov
in
mov
adc
je
cmpsb
fdivrl
cmp
mov
dec
fldt
out
stc
pop
sahf
les
xchg
movsl
cld
adc
mov
push
adc
inc
mov
dec
or
add
ljmp
mov
fimuls
dec
inc
sub
shlb
jae
stos
icebp
fisttpl
lcall
or
addr16
imul
mov
inc
scas
cltd
out
and
sbb
in
enter
pop
and
mov
xchg
push
into
xchg
xor
jge
lret
add
mov
mov
ret
sub
xchg
loope
pop
ljmp
xchg
xchg
inc
out
rclb
jo
sub
mov
sbb
test
out
cli
sbb
sahf
jae
sub
hlt
jge
push
orb
xlat
stos
push
pop
lock
sbb
pop
push
sub
jecxz
daa
adc
test
push
mov
popa
and
xchg
lea
test
inc
mov
xor
hlt
mov
mov
cmp
jae
and
jo
jns
inc
jno
lock
sub
scas
sbb
pusha
xchg
add
insb
vcvtss2sd
inc
sbb
sbb
in
inc
cld
xchg
pop
add
out
sti
dec
sub
sub
lahf
repnz
negb
add
loop
stos
jns
or
jb
je
imul
jo
adcb
mov
sub
int
testb
daa
inc
in
fsin
adc
ja
jo
xchg
push
push
add
fs
and
sub
mov
pop
push
xor
scas
inc
cmp
notb
mov
push
fisttpll
movzwl
xor
sbb
mov
pop
rcll
mov
lock
dec
pop
add
inc
inc
mov
pop
and
mov
cmp
xor
or
inc
pop
jns
jge
test
jae
stos
int3
pop
icebp
or
jge
xchg
fcmovnu
gs
mov
pop
or
push
sub
addb
shlb
or
cmp
fadds
data16
aaa
mov
out
scas
xchg
xor
inc
mov
xchg
mov
rorb
add
clc
jno
and
dec
jns
pushf
pusha
or
mov
push
adc
lea
xchg
movsl
xchg
push
inc
jle
lret
scas
cs
cmp
insl
jne
scas
mov
sbb
mov
mov
lock
in
test
loope
call
or
pop
inc
bound
movsb
ret
mov
lods
and
add
test
cmp
mov
outsl
mov
scas
and
adc
adcb
fidivrl
xchg
out
pop
popa
jns
imul
or
notl
sub
push
xor
mov
rcrb
xchg
outsb
lea
out
pop
shrb
adc
js
addr16
lcall
push
outsl
jnp
and
inc
mov
ss
sbb
ret
sbb
mov
ret
pop
jg
mov
insl
add
pop
cmp
loope
inc
out
lds
xchg
iret
outsb
sahf
lods
xchg
pop
mov
pop
push
jb
pop
cmp
sub
icebp
jge
mov
in
jmp
mov
pop
mov
cmp
and
xor
imulb
pop
das
sbb
mov
scas
cmp
mov
lods
arpl
js
xor
insb
or
mov
jae
out
mov
jne
adc
cltd
mov
fs
mov
cmp
dec
xchg
push
iret
subb
sub
mov
or
rolb
inc
mov
mov
sbb
jge
mov
mov
mov
or
xchg
inc
and
mov
xchg
xor
out
or
mov
shll
add
cltd
and
dec
or
fwait
xor
mov
xor
mov
jecxz
popa
adc
cs
adc
jecxz
call
jb
mov
push
jne
inc
or
adc
mov
sysenter
push
xchg
jb
sub
out
sbb
movsl
mov
cld
daa
jge
outsb
mov
push
cmovno
and
and
pop
add
mov
inc
dec
sbb
jle
push
test
stos
adc
or
out
push
xchg
iret
outsb
xchg
dec
cmp
sarl
popf
fiaddl
test
add
pop
addr16
pop
or
test
iret
arpl
mov
and
jg
mov
mov
test
dec
xchg
push
xor
or
std
enter
popl
or
cwtl
pop
pop
xor
xor
lods
das
cwtl
aas
loop
out
pushf
popf
cmp
jbe
lret
pop
cmpsb
stos
or
pop
mul
stos
js
repnz
sub
xor
push
jg
push
pusha
fsubl
fmuls
mov
push
rorb
lods
out
or
mov
jnp
out
pop
pop
sbb
or
cmpsb
xchg
xchg
or
shlb
jns
and
dec
mov
pop
sti
mov
pop
icebp
fs
or
jae
dec
push
mov
decb
xor
jge
or
xchg
pop
pop
mov
out
add
sbb
or
add
add
or
cmp
sbb
orb
cmp
ljmp
mov
and
dec
pop
dec
loope
or
cli
sub
popa
lahf
sbb
clc
or
or
jle
sbb
inc
cltd
jecxz
pop
or
push
daa
dec
adc
test
mov
jg,pt
lods
mov
pop
and
pop
int
xor
daa
mov
sub
sbb
aad
adc
sahf
adc
out
jae
daa
dec
sbb
xor
add
fwait
push
mov
sbb
push
inc
sub
sub
dec
ds
frstor
sbb
inc
add
add
adc
push
or
adc
inc
push
movsl
inc
push
lods
cmp
aaa
sub
sub
daa
bound
ja
adc
adc
xchg
xor
fstpt
dec
aas
in
push
jnp
inc
or
aaa
pop
lds
xchg
jnp
pop
or
or
fcompl
cltd
daa
sub
pop
or
add
pop
jnp
add
insl
icebp
mov
add
cmp
dec
lret
and
arpl
inc
or
sub
or
or
jp
adc
and
cld
arpl
cmp
adc
mov
and
lret
add
add
cmp
xchg
add
daa
push
pop
arpl
inc
xor
and
sbb
cmp
popf
mov
dec
xor
cmp
pop
jge
mov
dec
movsl
push
pop
imul
jns
adc
add
pop
aas
lcall
add
mov
sbb
cmp
testl
adc
push
xchg
cmp
cmp
xchg
cmp
std
xor
shrb
out
imul
fimull
enter
jo
jp
nop
out
pop
aad
sbb
or
jmp
add
out
xor
dec
nop
cmp
orb
cmp
lcall
pop
mov
shll
out
add
xor
add
test
mov
sbb
jno
dec
out
mov
lret
cwtl
xor
imul
mov
inc
mov
popf
xor
sub
jecxz
jge
lods
ficoms
add
push
push
icebp
xchg
inc
or
cmp
push
shlb
mul
inc
mov
xchg
les
xchg
jge
dec
push
arpl
fiaddl
sbb
cltd
out
mov
in
sub
je
push
xor
push
movsb
xchg
adc
out
lock
jmp
mov
ljmp
and
repz
cmpsb
xor
pop
cmp
mov
mov
stos
loop
xor
cmp
push
and
test
jecxz
test
push
ss
pop
mov
cmpsb
setno
mov
icebp
loope
sub
mov
push
push
adc
or
dec
push
inc
add
sub
mov
mov
jg
fsubrs
rorl
aaa
icebp
cmp
stos
pop
jns
inc
and
or
pop
insb
dec
outsl
ja
ja
or
in
repz
cs
out
mov
add
dec
fs
mov
fcmovb
lock
ret
sub
sub
push
aas
dec
mov
push
adc
mov
mov
mov
jns
sbb
addr16
xchg
or
insl
fiaddl
jle
js
pop
data16
add
sbb
cs
sub
cmp
inc
mov
inc
incl
xchg
lret
int
xchg
mov
scas
cltd
cmp
insb
lods
setle
mov
add
leave
cld
xor
mov
cmp
and
call
pop
fcoms
cmc
adc
lods
dec
shr
jbe
lret
aaa
ret
or
mov
jo
mov
pop
hlt
add
xchg
mov
out
or
js
test
add
jbe
inc
lret
jmp
ljmp
rclb
popf
dec
jle
push
cmc
out
sbb
pusha
mov
repnz
mov
adc
repz
out
mov
pushf
pushf
add
jecxz
dec
adc
test
vfmsub213sd
das
loopne,pn
adc
cltd
mov
and
addr16
call
inc
inc
or
cli
jns
and
inc
testb
jb
repnz
cmp
push
fnstenv
or
sub
mov
out
inc
dec
out
hlt
jg
fisubrs
rclb
push
cwtl
sbb
push
cltd
mov
add
cmp
nop
es
mov
es
pop
fdivrs
cltd
enter
xchg
add
sahf
xchg
test
jo
pop
cwtl
insb
lret
mov
in
xor
cld
push
push
cmp
out
pushl
mov
insb
xor
cmc
out
sub
outsl
das
fiadds
aad
aaa
push
jecxz
nopl
jo
push
jb
iret
outsb
xchg
in
mov
mov
inc
aas
in
jnp
test
jne
les
decl
rcl
or
or
inc
shrb
data16
out
mov
sub
add
pop
cvttps2pi
adc
jp
xchg
out
push
xor
outsl
test
daa
rorb
push
test
adc
data16
arpl
repz
lods
inc
int
add
outsb
jb
pop
lea
jle
lock
mov
addr16
insl
js
pop
sarl
and
and
sub
aaa
mov
rorb
pop
inc
jbe
mov
test
push
xchg
sub
call
lock
dec
gs
dec
adc
mov
lods
xchg
popa
dec
int
dec
jmp
add
jno
adc
imul
xchg
sbb
mov
ret
lea
push
ficomps
shlb
addr16
jbe
pop
sti
sub
int3
or
xor
xor
mov
ds
dec
xor
loopne
sub
mov
or
insl
mov
cltd
std
mov
mov
loope
push
inc
dec
mov
add
jle
call
jge
sub
jp
add
fwait
or
push
adc
inc
int
mov
push
dec
sbb
les
and
lea
jmp
jle
push
enter
leave
inc
and
cltd
out
xor
iret
ja
xchg
cmpsb
mov
cmp
dec
jge
add
addr16
fisubs
iret
xlat
mov
xor
loopne
push
push
push
cmp
mov
test
jecxz
and
mov
inc
int
cmp
mov
dec
or
mov
out
mov
pop
xor
add
jne
push
cmpsl
aas
xchg
rcrl
sbb
inc
cmovle
fdivl
cld
clc
xchg
xchg
fimuls
cmpsl
xor
inc
js
or
divb
fwait
bswap
jl
mov
xchg
xchg
jmp
inc
ja
movl
pop
dec
call
mov
cmp
insl
int
mov
dec
push
mov
fbstp
mov
pop
sub
maskmovq
call
sbb
xorl
add
or
or
xor
lock
cmp
push
push
fadds
mov
sbb
addl
imul
popf
cmpsb
shll
pop
inc
das
fwait
repz
lock
aam
lahf
mov
lret
clts
test
sbbb
sub
je
cmp
pop
gs
int3
mov
or
jae
into
add
mov
scas
xor
ja
or
test
cmpsl
mov
in
jmp
inc
sahf
push
pusha
imul
sub
mov
dec
push
mov
insb
ret
ja
dec
jp
movsl
adc
cmpsl
cltd
xchg
mov
inc
cmc
dec
pop
add
cmp
xchg
sub
mov
in
insb
in
pop
adc
mov
dec
sbb
outsb
cwtl
mov
dec
mov
jb
mov
lock
inc
adc
cmp
cmc
fwait
sahf
mov
push
cmp
jecxz
into
inc
pushf
mov
pop
rcll
decl
push
out
ljmp
sub
insl
out
xchg
out
mov
stos
mov
pop
mov
lods
jmp
jno
adcl
xor
pop
push
add
cltd
ljmp
xor
shll
cmpsl
xchg
add
sti
pop
jmp
int
mov
es
xchg
js
push
imull
sub
or
int3
sub
int
xor
enter
mov
dec
iret
mov
out
mov
or
std
fwait
pop
jle
add
cmc
mov
shrb
sbb
lea
out
outsl
inc
jo
mov
daa
sub
js
je
sub
xchg
xor
test
dec
test
pop
or
into
les
inc
les
jp
test
pop
outsl
xchg
dec
or
jmp
in
outsb
out
sti
adc
jb
xchg
mov
add
pop
mov
ficomps
cmpsb
push
fcomip
out
lret
out
mov
rorl
ret
or
rclb
add
xor
inc
movsb
cmc
sahf
in
test
dec
adc
gs
cli
push
mov
mov
cld
ud0
in
repz
add
out
ljmp
mov
dec
fs
ljmp
fistl
add
std
inc
ds
mov
scas
fisubs
inc
pop
push
sbb
push
xor
adc
inc
cltd
xlat
mov
mov
mov
sub
negb
xor
lahf
push
adc
icebp
dec
nop
sub
aaa
insl
leave
jb
mov
jl
mov
cs
fdivrl
mov
inc
sbb
push
adc
data16
pop
cs
movsl
pushf
jbe
jle
add
lea
sub
pop
xchg
in
es
shr
mov
adc
mul
pop
mov
jae,pt
mov
repnz
mov
push
dec
or
loop
lods
fwait
and
int3
pop
imul
add
pusha
out
ja
popf
lea
mov
pop
in
jns
and
rol
mov
jmp
dec
flds
movsb
push
xor
pop
test
or
add
mov
push
ljmp
test
dec
sub
rcl
stos
and
lods
fwait
pop
out
lret
push
dec
popf
mov
fiadds
or
xchg
and
and
dec
leave
mov
scas
hlt
and
push
ja
jbe
xchg
xor
div
or
scas
mov
and
dec
pop
cs
stc
inc
and
pop
addl
cmp
or
dec
out
add
cs
xor
mov
icebp
jecxz
mov
pop
push
sarb
filds
xchg
push
lcall
adc
push
mov
rcrb
fisubrs
outsb
fldt
dec
loope
pushf
sub
sbb
lock
je
cltd
aas
adc
mov
or
mov
aaa
bnd
cwtl
sub
mov
inc
sahf
xor
sbb
add
sahf
xchg
mov
ret
add
fs
fsubrs
ja
ja
outsb
inc
and
cmp
addr16
push
mov
outsb
inc
sbb
xor
pop
outsb
adc
or
sbbb
and
cwtl
lahf
insb
jnp
pop
sub
mov
and
xor
xor
ficoms
iret
test
sti
sti
fnop
xor
stc
in
or
sbb
xor
into
loop
loopne
sbb
add
xchg
loopne
imul
lahf
es
popa
cwtl
or
jl
fcomps
or
cmp
mov
andb
mov
rcrl
out
sub
ljmp
ljmp
or
adc
and
mov
add
stos
mov
and
dec
sbb
xchg
test
mov
inc
mov
mov
test
mov
lret
and
roll
clc
or
jp
nop
lret
jmp
mov
dec
add
cmpsb
sub
pop
sahf
pop
mov
xlat
dec
sbb
testb
jae
js
lods
cwtl
ret
mov
cmp
loop
mov
jge
push
in
loope
out
push
hlt
fbstp
inc
sub
xor
dec
sub
pop
xchg
je
adc
mov
push
and
lret
out
adc
data16
push
imul
dec
mov
stos
scas
mov
xchg
divb
cmp
jecxz
add
stc
into
repnz
in
or
jns
mov
add
js
incl
adc
add
jb
icebp
mov
shrl
jge
pop
fs
enter
scas
sbb
or
pop
xor
or
jno
ja
gs
stc
or
inc
cmp
adc
ss
jb
adc
push
lds
mov
add
aaa
xchg
mov
cmp
in
jle
scas
arpl
sti
push
and
sbb
clc
cs
fstl
enter
mov
rolb
push
lds
add
push
inc
push
ljmp
sub
xchg
push
movsb
mov
fbstp
repnz
imul
out
ds
cmp
mov
jle
clc
dec
adc
push
pop
pop
xcrypt-ofb
cmpsl
test
iret
jbe
daa
orb
dec
xor
popa
xchg
cmpsb
mov
addr16
fidivs
orb
xchg
mov
jecxz
sti
outsl
xchg
push
jmp
rcrl
cltd
mov
imul
std
cli
idivl
ficomps
sbb
push
les
flds
fimuls
add
icebp
adc
ret
lds
xor
inc
or
mov
jle
inc
lret
and
inc
out
and
pop
movsb
jbe
xor
jge
inc
or
xorb
or
or
mov
xor
pop
sarl
cmp
mov
jbe
dec
and
mov
cmp
pop
cmp
add
adc
sub
mov
pop
cltd
andb
lods
sbb
loope
cmpsl
push
dec
adc
lds
popf
and
adc
mov
es
lahf
sti
dec
cli
jmp
addl
lods
stc
hlt
mov
push
sbb
add
nopl
jp
shlb
lret
mov
das
add
xor
cmp
cmp
aad
out
cmpsb
ja
push
mov
and
xchg
cmpsb
ja
mov
int
cmpb
aad
add
sbb
lcall
mov
es
mull
ja
stc
add
push
push
push
arpl
insl
cmp
inc
filds
bsf
arpl
dec
push
pusha
ja
push
lret
hlt
fwait
shl
aad
jge
int3
gs
scas
pop
pop
leave
jno
pop
dec
xor
inc
mov
aaa
enter
lret
add
cmpsl
xchg
xchg
dec
shl
in
add
dec
test
jb
sahf
addr16
push
fabs
cmp
data16
mov
insl
into
mov
popa
pop
adc
cmp
je
xchg
lret
mov
adc
mov
push
addr16
adc
pop
inc
incl
addr16
or
or
sub
mov
rolb
xchg
bswap
cli
dec
jle
stos
imul
sbb
sbb
xchg
jne
mov
lock
fsubl
jp
xchg
dec
inc
or
pop
add
add
outsl
dec
xchg
add
std
sub
sbb
mov
lret
in
sbb
into
xlat
movsb
add
sbbb
fmul
push
in
push
pop
mov
xchg
js
or
neg
dec
mov
push
das
xor
ss
pop
adc
push
outsl
inc
paddusw
movsl
es
ljmp
lahf
add
push
cmp
add
sbb
inc
cld
cmpl
lret
dec
lods
mov
lock
and
das
xchg
pop
push
inc
pop
jae
das
push
cld
arpl
sub
shll
or
push
mov
leave
dec
pop
movsl
mov
mov
scas
mov
lahf
or
push
lret
or
cmp
clc
xchg
mov
fistps
xor
sbb
dec
xchg
xchg
xor
aas
jns
cmpsb
jno
jno
jmp
mov
cwtl
inc
repz
jmp
outsb
stc
xor
enter
pop
dec
icebp
insb
and
jns
adc
pop
push
inc
add
inc
daa
dec
inc
mov
mov
psllq
sbb
mov
outsb
nop
ss
sub
call
mov
add
js
inc
sbb
xchg
lea
cmp
shll
outsb
lret
das
push
into
dec
jbe
push
hlt
xor
into
scas
aas
int3
ds
leave
ret
movsl
xor
mov
out
call
cmpl
cmp
push
sbb
les
insb
cli
ficomps
popf
je,pn
mov
push
mov
or
iret
jns
loop
mov
jb
dec
xorb
mov
push
dec
add
jl
adc
and
scas
push
cmp
add
sub
mov
mov
lods
mov
mov
ficoml
mov
call
xor
out
adc
icebp
inc
mov
out
jmp
pop
lret
mov
xor
test
jnp
mov
jmp
jae
arpl
xchg
pop
jge
sbb
movsl
in
mov
sub
iret
adc
push
cmpb
mov
mov
mov
inc
add
add
nop
sbb
pop
paddb
out
mov
pop
clc
loop
jno
nop
rclb
sahf
dec
jge
dec
test
mov
lds
jno
cmp
mov
out
inc
add
or
dec
push
scas
jge
mov
jecxz
pop
pop
jne
js
add
pop
jno
jl
adc
add
pop
insl
sub
jbe
out
push
lahf
jns
loopne
ja
and
and
xlat
popf
cmp
iret
mov
mov
xchg
jbe
xchg
or
mov
cmpsb
fdivs
jb
sbb
xlat
dec
add
stc
test
pop
xchg
jbe
adc
pop
or
mov
push
jge
xor
rcll
xchg
fidivs
sbb
leave
repz
jecxz
pop
xor
iret
adc
scas
fists
sbb
cmc
ret
mov
jnp
ret
push
mov
and
sti
lods
xor
in
inc
sbb
and
out
jb
xchg
decb
fnstenv
dec
sahf
jne
loope
pop
cmpsb
push
pop
dec
lock
test
lds
out
into
sub
inc
pop
fisubrl
fs
jp
scas
mov
fdivrs
sub
bound
dec
dec
fnsave
add
cmpsl
test
xchg
movsb
pop
or
pushl
jle
out
je
jb
sbb
pop
clc
add
push
pop
ja
push
inc
outsb
leave
dec
push
out
pop
pop
and
jp
les
xor
mulb
sbb
sub
xlat
pop
and
inc
mov
addr16
sbbb
push
xchg
adc
mov
xchg
incb
jle
mov
popa
ja
sub
mov
xor
add
stos
xchg
sbb
cwtl
mov
and
mov
mov
push
xlat
jns
or
mov
call
loop
xor
xchg
xchg
sub
adc
pushf
sbb
leave
fldenv
inc
fcompl
dec
jecxz
mov
test
pop
repz
leave
ds
jbe
mov
test
dec
and
lret
xchg
sahf
inc
fidivrs
jmp
sti
inc
adc
mov
add
dec
jae
add
into
wbinvd
lods
mov
decb
sysenter
fisubrs
add
jae
or
dec
fidivl
test
cvtps2pd
adc
jle
mov
es
push
xchg
or
mov
inc
xchg
mov
jae
shlb
insl
mov
cmp
fchs
push
mov
mov
and
insl
into
jmp
lock
mov
cmp
dec
shll
movsb
dec
cltd
aad
xchg
popa
push
xor
push
leave
xor
or
jg
or
sbb
sar
hlt
cmp
out
sahf
mov
push
mov
nop
sbb
lret
jns
sub
cmp
xchg
ljmp
bound
aas
cmp
push
pusha
fisubrl
jnp
loopew
sub
xchg
insb
mov
stos
stos
add
pop
dec
out
lret
mov
sbb
cli
lea
xchg
add
int
and
sahf
xorps
adc
mov
aad
dec
fwait
jbe
out
lods
mov
rclb
cli
fidivs
fmul
dec
inc
push
push
mov
notb
sbb
jb
mov
aam
add
cmp
mov
dec
mov
ds
fcompl
push
add
sub
test
out
lret
aad
icebp
sbb
and
mov
out
cwtl
popa
ds
jge
and
and
adc
xor
push
sub
mov
cmp
xchg
add
andl
or
mov
mov
insl
cld
sbb
cmp
inc
and
lret
dec
addr16
and
inc
sti
and
cwtl
fsubrs
dec
jle
out
or
xchg
pop
xchg
mov
pop
add
jle
pop
inc
loopne
and
test
bound
icebp
jge
xchg
test
jmp
cmpsl
jb
cltd
mov
pop
out
xchg
iret
lcall
push
pop
mov
cwtl
xor
mov
inc
js
xor
mov
mov
jne
in
arpl
out
and
js
jge
push
xchg
mov
adc
and
lret
into
sarl
cmp
movsb
and
xchg
jb
ret
jae
cltd
ret
xlat
fiadds
sar
sbb
test
xchg
in
ja
stos
pushl
mov
cltd
mov
add
mov
jb
dec
addr16
mov
xchg
std
mov
mov
test
inc
inc
jno
mov
psllq
bound
sub
cmp
sub
push
sub
fcompl
add
outsb
push
push
dec
scas
insl
dec
mov
jne
jae
inc
fwait
movsl
mov
dec
cmp
jp
data16
adc
xchg
sbb
daa
in
jns
sub
xor
sarl
test
adc
xchg
or
cmp
pop
add
cmp
int3
or
add
mov
mov
pop
sbb
add
aad
mov
adc
mov
pop
hlt
cli
cs
add
mov
and
sub
sbb
enter
loop
mov
adc
pushf
daa
add
dec
and
sub
cmp
dec
adc
jge
dec
ljmp
add
lcall
adc
xchg
loope
push
icebp
mov
and
dec
adc
jl
lods
lahf
push
add
test
nop
pop
psubsw
xor
sbb
sub
jl
addb
xchg
and
lods
lfs
add
out
imul
jmp
pushf
pushf
or
or
adc
ja
movntq
out
mov
cmpl
and
ja
jo
fcom
test
mov
xchg
pop
sub
jp
cmp
jp
sahf
add
out
mov
in
push
push
lret
loop
in
in
xor
jno
and
out
test
cmc
inc
sbb
push
rorl
and
ret
mov
out
iret
pop
mov
stos
jmp
mov
mov
fs
aad
dec
push
cwtl
add
data16
mov
push
arpl
jecxz
out
test
lea
xchg
xchg
add
aaa
nop
int
aas
pop
gs
stos
cli
dec
aam
cltd
jle
mov
jmp
inc
pop
jae
push
push
xchg
pushf
fcmove
sub
hlt
iret
or
ljmp
inc
pop
xor
imul
stos
pop
ja
das
add
inc
mov
or
xor
outsb
insb
lcall
sub
mov
or
aad
mov
xlat
xchg
out
pop
cmp
rcll
mov
inc
inc
push
sbb
cwtl
pop
outsb
cmp
out
aam
dec
push
or
sbb
jle
sti
ror
xchg
loope
loopne
bnd
sub
fmuls
jb
mov
in
push
dec
sarl
movd
scas
out
nop
popl
mov
sub
push
popa
add
xchg
shrb
inc
stos
inc
filds
and
jne
xchg
lret
inc
mull
mov
add
sbb
mov
imul
inc
leave
adc
lea
in
js
mull
mov
push
into
hlt
inc
inc
inc
imul
jns
and
ret
jbe
xor
xor
sub
mov
ret
dec
out
pop
or
pcmpgtb
pop
cmp
sbb
popf
fsubl
movl
mov
aas
dec
and
xchg
paddusw
in
loop
dec
inc
sahf
sub
mov
out
xor
frstor
mov
cli
or
pop
inc
mov
add
fisttps
outsb
cld
add
add
jnp
xor
sbb
cmpb
jle
test
addb
jo
mov
xchg
adc
imul
or
add
mov
loop
sub
and
or
xchg
cmp
cmp
push
ret
das
iret
imul
push
push
jae
into
sub
shll
sbb
into
insl
adc
mov
in
or
mov
mov
out
test
lds
std
push
fcmovb
pop
xor
scas
arpl
rsqrtps
ds
cmp
xor
sbb
loop
xchg
ret
pop
cltd
cmp
xor
pop
xor
js
int3
sub
xchg
test
in
mov
add
stc
push
and
pop
dec
xchg
popa
out
imul
dec
lods
pop
std
adc
sbb
mov
cmp
addr16
lahf
iret
push
pop
push
cmpsl
sbb
int
sub
or
testb
inc
mov
and
mov
xchg
dec
aas
dec
sbb
aaa
fwait
out
cvtps2pi
mov
pop
mov
pop
xor
repz
pand
dec
cmc
mov
jmp
or
test
mov
pop
mov
roll
adc
andl
data16
inc
insl
decb
add
out
stos
mov
test
addr16
into
imul
mov
in
mov
movsl
cwtl
inc
adc
pop
stc
cmp
das
xor
mov
outsb
inc
fdivl
dec
or
jl
pop
flds
jbe
push
pop
mov
cmpb
popa
into
mov
imul
or
aaa
das
sub
aas
pop
mov
jmp
sub
lock
cmpb
out
sbb
shrb
mov
psrlw
lods
sbb
fadd
jmp
aad
lret
push
nop
leave
popf
loopne
push
lea
add
mov
loopne
jp
addr16
push
jbe
jl
fnstcw
shll
popa
insl
xor
hlt
les
hlt
loop
push
or
sub
cld
push
push
ljmp
jae
push
cltd
adc
pop
rcll
repnz
int
xor
out
inc
pop
xchg
lods
pop
imul
shl
imul
lock
pop
pop
das
and
aam
idivb
sbb
pop
adcl
mov
rorb
cmp
pop
pushf
lcall
xlat
aaa
stos
mov
jle
pushf
dec
add
es
bound
into
sub
fisubs
lret
lock
in
sbb
paddusb
iret
cmp
xlat
popf
add
mov
mov
jns
jo
push
jmp
cmp
pop
fwait
sbb
je
fcomps
lods
in
xor
mov
jmp
test
lcall
or
movsl
lea
mov
ja
dec
stc
cmpsb
mov
xchg
andl
imulb
push
roll
mov
mov
pop
out
jge
rsm
dec
sbb
ja
rcrb
loopne
sbb
cltd
fdivr
add
out
inc
pop
out
push
inc
mov
insl
mov
jge
je
sbb
xor
out
lret
outsb
ja
hlt
mov
adc
cwtl
repz
psubq
call
jge
mov
xorl
xchg
xorl
pusha
inc
test
insb
or
pop
cltd
add
jne
ret
jge
mov
fiadds
adc
out
leave
pop
ss
mov
pop
pop
jb
fnstenv
sub
jg
rorl
jecxz
cmp
xor
incl
gs
call
inc
frstpm(287
imul
mov
sub
push
testl
in
dec
in
lahf
sbb
xchg
cmp
cmp
shr
xchg
sti
mov
divl
les
sub
scas
or
int3
cld
inc
sub
lahf
shrb
fs
js
mov
mov
jmp
fisubrl
sahf
cld
xor
sti
push
xor
push
shll
lcall
add
adc
pop
adc
fdivrs
movsb
ja
mov
and
fwait
movsb
ja
lods
out
jno
insl
sbb
leave
mov
sbb
or
popa
cld
add
xor
loopne
cmc
dec
cmp
add
movsb
jge
int
mov
fsubrl
fldl
ss
cmp
ret
fisubl
xchg
pop
scas
mov
and
mov
push
into
and
sbb
test
push
jns
fcomps
sub
sarb
dec
sbb
cli
pop
add
pcmpeqd
fistl
imul
imul
mov
jge
in
jo
into
lret
or
scas
push
push
or
sub
push
addr16
xor
stos
bound
addb
sub
bsf
sub
ss
icebp
mov
inc
jge
je
ljmp
enter
shrb
mov
mov
or
movsl
out
cmp
push
shl
test
xor
int3
add
inc
sub
adc
test
hlt
or
cmp
adc
subl
mov
pop
mov
adc
lret
cmp
jmp
jbe
sbb
push
test
lret
adc
loope
inc
filds
and
movsl
or
sbb
mov
adc
lret
cmp
aam
xorb
jo
sbb
bound
rclb
pcmpgtw
cmp
sti
pop
jnp
lret
sub
orl
in
xchg
sub
and
jno
ucomiss
sarl
mov
push
loopne
fstpl
leave
xchg
inc
adc
and
or
popa
int3
test
fimuls
cmpsl
cmp
add
push
mov
inc
lods
mov
xchg
push
push
mov
push
xor
int3
mov
jmp
cltd
jmp
and
jbe
clc
add
or
push
push
or
or
mov
sbb
lahf
xchg
xor
jns
pop
adc
add
stos
mov
adc
lcall
negb
sub
lret
cltd
sub
shrl
repz
pop
jae
mov
mov
lods
sbb
lret
xorps
insb
lock
int3
mov
inc
aaa
mov
sarb
icebp
pop
xor
push
sahf
pop
push
cmpsb
iret
adc
adc
cmp
rcrb
and
ss
cmp
jle
sahf
adc
std
dec
dec
xchg
ret
daa
or
cli
sbb
sub
fnstenv
inc
stos
insl
sti
das
mov
mov
lcall
pop
dec
std
mov
mov
fisubrs
jne
sub
sbb
push
add
or
xor
dec
or
jmp
sahf
sub
push
cmp
out
sub
pop
mov
aaa
fcomp
scas
daa
mov
fldt
jmp
inc
psubw
add
call
stos
rcrl
mov
dec
jno
cwtl
out
add
adc
ret
sbb
sub
mov
jge
addr16
cwtl
daa
sub
les
loop
stc
flds
int
je
mov
fistpll
and
les
orb
repnz
int
out
pushf
loopne
stc
lret
pop
hlt
push
movsl
addr16
push
sbb
repz
imulb
out
inc
jge
fwait
mov
xchg
daa
cld
pop
mov
mov
fstpl
mov
dec
scas
aam
adc
jmp
cmp
dec
je
leave
fimull
outsb
lea
mov
decl
iret
int3
mov
jo
cs
fnstsw
in
mov
cmpsb
mov
mov
ss
rcrl
fsubr
dec
cmpl
cmp
outsb
xchg
push
xlat
mov
add
adcl
pop
ret
popf
das
jns
in
pushf
xchg
dec
dec
ficoms
nop
shll
movsl
jge
cmp
mulb
int3
jmp
xchg
in
int3
adc
xchg
or
xor
cmp
mov
mov
xchg
adc
add
bound
push
push
mov
dec
ret
addr16
out
push
mov
xor
arpl
cli
xlat
adc
cmc
addr16
outsl
push
adc
adc
shll
inc
sbb
cmc
xorl
and
addr16
lcall
pushf
xchg
cltd
pop
adc
imulb
imul
pop
add
lods
cli
decb
orl
mov
popa
sbbl
add
mov
adc
pushf
mov
add
insl
dec
sub
gs
loopne
sub
add
popa
lock
pop
inc
xlat
imul
int3
scas
mov
pusha
adc
rclb
cmp
fsubr
xor
pushf
adc
xlat
mov
test
in
jns
inc
out
pop
ret
fucom
shlb
or
mov
mov
xor
and
pop
test
xor
dec
pop
pop
dec
in
mov
arpl
test
mov
sub
lea
fdivrl
shrb
jno
dec
gs
cmp
push
leave
xchg
xor
or
adc
cld
add
cld
xchg
push
pushf
pop
cmpsb
cld
push
sbb
xor
sub
mov
fidivrs
cmc
aas
push
icebp
das
mov
jl
or
shrd
sub
sahf
movsl
stos
sarb
sub
lods
jb
cpuid
clc
aaa
outsl
xchg
aad
push
leave
pop
xor
jge
and
add
pushf
dec
jge
or
std
imul
aad
mov
ja
xor
jl
xor
ljmp
cmp
clc
pusha
sub
sbb
cld
pxor
xchg
mov
test
sahf
inc
pop
lret
adc
repnz
inc
shlb
jb
insb
dec
fs
mov
cmovne
dec
lock
mov
mov
sbb
sbb
test
daa
aam
mov
insl
pop
push
std
rolb
jbe
outsl
divb
sbb
inc
pop
es
dec
icebp
jae
xchg
dec
rcll
sub
dec
out
and
lds
cmp
jbe
popf
xchg
push
jns
pushf
cmp
adc
std
enter
mov
je
popf
adc
mov
clc
and
mov
flds
shr
aad
mov
daa
xchg
nop
cmp
or
out
stos
popf
mov
ja
mov
out
and
jp
mov
mov
sub
pop
in
loope
addr16
mov
cltd
icebp
fdivrp
lds
pop
repz
push
jg
ret
das
aas
int3
bound
xlat
les
add
jb
das
out
shl
add
nop
rclb
push
push
ljmp
fisubrl
pop
dec
outsb
adc
add
pusha
aas
push
sbb
js
stc
mov
jo
ds
jg
mov
push
popf
and
mov
lods
mov
insl
mov
add
jnp
pop
jl
push
test
xchg
loop
adc
icebp
xchg
dec
mov
xor
stos
clc
cmc
stos
jp
mov
call
cli
rolb
jae
and
addr16
xor
into
sbb
cmp
push
and
cmpsl
xchg
inc
xchg
bndstx
popa
pop
sbb
icebp
push
popa
push
int3
sub
pop
adc
mov
adc
push
pop
mov
lret
adc
adc
fbld
outsl
dec
sbb
insb
dec
adc
mov
sarb
dec
jl
lret
outsb
mov
fcomps
cld
pop
cmpsl
sbb
repz
and
mov
xchg
fisubrl
add
add
das
pslld
mov
mov
les
jp
adc
pop
jbe
jg
shlb
mov
xor
and
scas
pop
adc
xlat
push
aaa
jmp
test
fildll
sbb
cmc
das
inc
jne
mov
xchg
mov
xor
pop
pop
jbe
sbb
das
fldl
xchg
mov
xor
sbb
adc
push
fisubrs
cmp
fdivrs
ss
gs
push
lds
cltd
and
jae
jo
mov
subb
les
dec
aas
sub
cwtl
stos
lods
mov
push
mov
mov
dec
imul
jmp
bound
mov
sub
mov
add
enter
jmp
adc
adc
cs
imul
das
adc
add
test
jae
or
mov
hlt
mov
and
adc
add
mov
xchg
jbe
cmp
roll
mov
movsl
mov
push
dec
or
loop
imul
cli
pop
sbb
jno
dec
scas
out
push
fwait
or
out
xchg
pop
shll
inc
addr16
push
popf
xchg
inc
mov
roll
ja
xchg
aad
and
cli
cltd
adcl
lret
cmp
jb
mov
cmp
push
bound
lret
cltd
xor
adc
mov
cmp
cltd
mov
add
out
imul
jg
push
ficomps
pop
clc
push
or
dec
fstps
aas
testb
and
rclb
stc
jbe
jl
fs
into
push
cmp
sub
ljmp
nop
lods
ss
sub
add
mov
cmp
loop
add
and
int
jb
loopne
push
aad
fs
xchg
jo
test
mov
pop
or
call
xchg
and
movsb
push
test
notl
sub
adc
cltd
imul
mov
jbe
cli
fdivs
inc
insl
imul
sbb
sub
jmp
mov
or
inc
hlt
pop
mov
cwtl
or
repz
hlt
lcall
xchg
nop
xor
repnz
or
jae
add
push
xor
out
pop
sub
mov
rorl
xchg
sti
into
je
sbb
pushf
push
cmp
setge
testb
xchg
dec
int3
call
fisubrs
test
pop
jo
xchg
or
pop
sbb
mov
cmp
push
fs
lea
add
push
scas
shrb
loop
fwait
test
pop
inc
lods
jecxz
popf
bound
push
bound
pop
vmwrite
or
pusha
sbb
popf
fists
and
imul
inc
mov
push
jge
decb
jmp
lea
dec
jnp
cmp
test
lods
mov
adc
add
pcmpeqw
je
jmp
scas
xor
lret
push
mov
aaa
clc
ljmp
pop
cwtl
fmuls
cld
jbe
jae
rclb
popf
data16
or
repnz
rcrb
pop
outsb
mov
das
inc
ja
das
sbbl
fidivl
xchg
aad
pushl
sbb
mov
loopne
add
and
jb
mov
andb
std
rorb
push
lret
movhlps
sbb
fstl
mov
and
cltd
out
fmull
fwait
xchg
fsubl
and
dec
push
push
pop
push
push
or
fcmovu
jp
mov
mov
jg
inc
stos
mov
data16
push
xor
sub
out
hlt
pusha
mov
movsb
ljmp
cmpsb
fcompl
inc
mov
xor
outsb
imul
sub
dec
movq
test
xchg
push
cwtl
std
push
inc
stc
loop
test
mov
lret
inc
mov
or
adc
mov
in
clc
xlat
pcmpeqw
jne
enter
sub
sbb
or
test
test
subb
in
call
nop
or
daa
pop
insb
dec
dec
aas
cmpsb
add
dec
sub
daa
pop
push
lods
pop
aam
xor
mov
aas
cmp
mov
dec
xchg
xchg
sbbb
mov
inc
add
pop
pop
cmp
popf
loope
int
popf
add
inc
pop
add
add
sbb
test
push
pop
in
add
sub
push
xor
je
sbb
cld
or
nop
shr
or
imul
sbb
scas
sahf
bound
shlb
inc
pusha
or
mov
sahf
in
and
sub
and
adc
push
outsl
xchg
pop
or
xchg
push
addl
adc
sbb
adc
imul
cmp
cmp
and
inc
cmp
or
sub
inc
push
inc
in
add
aas
subl
and
adc
cmp
or
sub
outsb
cmp
jge
movsl
pop
div
test
push
add
jecxz
or
cmp
sbb
sti
cmp
out
add
sub
cmp
sub
add
sahf
adc
add
sub
orb
add
sbb
push
subl
sbb
add
pop
movsl
cmp
lret
lea
mov
cmp
pop
sub
xor
mov
xor
sub
pop
sbb
lret
inc
or
adc
daa
sbb
cmp
sahf
add
and
add
sub
add
aaa
movsl
pop
push
adc
add
pop
push
pop
add
xor
and
test
sarl
adc
popf
cmp
push
push
push
test
dec
lret
sub
cmp
cs
sub
jbe
fiadds
xor
push
and
xor
mov
mov
and
in
iret
mov
lods
cltd
scas
movsl
aam
in
sbb
pop
xor
push
adc
dec
decb
sbb
addr16
pop
nop
push
dec
dec
mov
insl
mov
idivl
mov
stc
in
xchg
sub
mov
shll
aam
cmp
pop
cltd
pop
and
lods
jle
pminub
sub
push
pusha
add
jb
mov
xor
movsb
mov
mov
xor
cltd
jbe
cmpb
data16
mov
aas
in
sub
mov
or
sbb
in
std
cltd
push
xchg
mov
and
shlb
fsub
xchg
imulb
cld
lds
out
xchg
movsl
xchg
ret
ss
sbb
cltd
pushf
or
mov
push
daa
add
push
in
adc
mov
bswap
out
int3
xchg
dec
bound
mov
fsts
lret
mov
inc
sbb
adc
outsb
pusha
mov
jle
or
pushf
dec
cmp
dec
lfs
mov
mov
sub
ljmp
scas
xchg
jmp
pop
stos
dec
pusha
dec
cmpsl
jg
and
cltd
mov
in
ljmp
adc
outsl
jmp
and
pusha
in
inc
stos
cld
testb
sahf
out
mov
sbb
inc
dec
mov
ja
xchg
fs
shrl
mov
mov
sub
add
rorb
lret
es
dec
outsb
sbb
out
xor
mov
pop
in
repnz
das
les
das
aam
imul
xchg
mov
rorb
jno
les
ror
int3
sub
dec
or
cmpsl
subb
fidivl
mov
adc
jns
adc
test
les
mov
pushf
sub
cmp
mov
cltd
mov
mov
loope
sub
inc
iret
pop
or
roll
dec
daa
popf
stc
mov
lcall
sbb
cmpsb
pop
imul
cltd
push
ret
xchg
sarl
loopne
shrb
or
or
inc
cltd
xlat
mov
lock
and
lret
inc
aaa
adc
dec
sub
mov
dec
scas
aam
xor
fiaddl
and
sbb
dec
lahf
sub
lret
mov
pushf
mov
adc
mov
sub
pop
mov
push
push
insb
cli
les
jns
test
jp
sub
gs
push
mov
inc
xchg
pop
incb
and
inc
push
mov
fwait
loope
or
add
adc
shlb
stos
hlt
popf
mov
xor
mov
mov
mov
imul
popf
loope
jmp
pop
in
fisubl
adc
divps
roll
outsb
stos
add
mov
pop
dec
jg
lea
xchg
rol
sbb
sbb
fmull
in
pop
daa
push
add
ljmp
xchg
jl
shr
push
push
addr16
dec
lahf
jp
hlt
jle
sub
jmp
test
cli
lods
push
pop
in
repnz
gs
jle
add
sbb
sub
incb
pusha
fwait
mov
xor
jge
les
test
pcmpeqb
mov
jbe
cli
mov
sub
mov
cld
rcrb
jge
sti
ret
stos
pop
sbb
adc
cmp
mov
xchg
mov
fldcw
aaa
popf
repz
add
push
cmp
leave
scas
mov
push
push
sub
add
mov
push
sbb
pop
mov
js
cld
and
cmp
inc
arpl
mov
sbb
scas
pop
arpl
nop
fs
jmp
jp
maxps
jmp
inc
cmp
movaps
mov
stc
mov
daa
xor
xor
pop
mov
or
xchg
mov
cwtl
mov
out
test
pushf
out
and
cwtl
in
mov
pop
push
cwtl
lock
fimuls
pop
sbb
xchg
insl
xchg
adc
xor
jb
mov
test
add
sub
jne
nop
je
jb
sti
push
nop
jo
mov
lret
lock
ss
imull
sbb
mov
push
jbe
stc
dec
scas
xchg
add
mov
push
sub
test
inc
into
aaa
and
shrl
cmp
lret
loopne
mov
sbb
ds
inc
bound
enter
dec
stc
data16
mov
aaa
pop
sarl
xor
add
shr
dec
loop
out
sahf
fnstsw
lahf
mov
adc
gs
sub
mov
lea
mov
adc
inc
adc
and
jg
jl
sahf
sub
push
cmc
stos
inc
dec
mov
lahf
fwait
jns
dec
rol
lods
inc
daa
repz
inc
sub
pop
mov
add
mov
xchg
push
sahf
sarl
ret
mov
mov
pop
jae
jp
inc
sbb
xchg
sbb
fsts
sub
push
push
loope
inc
fcompl
cmp
cmpsl
mov
dec
out
jnp
test
mov
shll
and
lret
inc
mov
test
xor
xor
mov
pop
mov
and
and
lock
cmp
push
loopne
movsb
shrb
lret
out
imul
dec
inc
lret
int
mov
bswap
xchg
push
fisttps
or
aas
cmc
daa
sti
out
ret
mov
les
clc
testl
mov
lret
int
daa
fcoml
std
stos
inc
push
in
jl
fimull
mov
jae
les
adc
inc
push
test
leave
repz
or
jle
lret
or
cld
lea
jns
sbb
stc
daa
inc
add
push
jo
dec
push
mov
push
ror
lock
fimuls
mov
inc
and
pop
add
inc
sub
and
adc
scas
lods
pop
cmpsl
sub
pushf
xlat
mov
lahf
and
mov
sti
pop
fisttpll
call
mov
leave
dec
mov
in
adcl
push
push
outsl
or
and
fidivs
add
cmpsl
add
or
dec
pop
xchg
imul
adc
jbe
mov
add
xor
movsb
fs
shll
inc
sbb
add
test
dec
pcmpgtd
mov
pop
mov
jno
outsb
xor
leave
mov
jns
jae
and
and
fisubl
dec
das
inc
repnz
xor
mov
insb
lods
loop
mov
lock
pop
cmp
jmp
pop
push
outsl
xor
nop
movb
pop
xchg
inc
outsb
sbb
imul
lahf
and
or
cltd
cmpsb
push
cmp
lret
push
mov
adc
lock
fidivl
jg
push
mov
or
out
dec
inc
nop
push
xchg
in
sahf
fldl2t
sbb
mov
mov
mov
mov
sbb
jbe
push
iret
dec
inc
push
in
dec
xchg
iret
les
xor
and
daa
aaa
mov
xchg
pop
repnz
mov
jo
inc
int3
and
mov
mov
loopne
cmp
sbb
pop
hlt
pop
daa
divl
jmp
shr
test
movsl
ja
pushf
pop
xor
mov
push
aad
lahf
adc
mov
test
mov
push
or
adc
sbb
push
ss
sub
gs
push
lcall
sbb
and
dec
sbb
xchg
maxps
xor
pusha
mov
or
arpl
cs
mov
inc
sub
mov
dec
pop
jno
shrb
add
xchg
in
dec
sarl
movsl
inc
shrl
dec
out
sub
or
paddw
out
or
cli
repz
pop
jo
outsl
lret
push
jge
aaa
in
pushf
int3
jns
add
daa
rorl
push
jle
negl
std
out
fiaddl
aaa
test
icebp
xor
stc
loopnew
add
dec
cmp
ds
sti
cmpsb
sbb
clc
inc
mov
loop
inc
adc
imul
sub
dec
std
sub
xchg
cmpps
nop
adc
pop
sub
mov
ficompl
inc
enter
mov
jl
mov
adc
adc
mov
ret
loop
ret
xor
rcrb
mov
das
imul
leave
popa
add
or
mov
or
dec
fisttps
pop
add
fs
insl
out
add
mov
sbb
cmp
dec
mov
or
push
or
xchg
dec
lods
mov
test
inc
sbb
out
sbb
jb
paddusw
fidivl
inc
cmp
adc
mov
ret
mov
adc
dec
scas
adc
jo
clc
fisubs
sbb
mov
ja
scas
jmp
fabs
xchg
xchg
lsl
pop
add
jo
and
add
dec
subl
jo
xchg
rolb
idivb
dec
mov
cli
mov
cmp
sbb
push
push
mov
xchg
aad
mov
int
push
inc
rcrl
clc
lret
xchg
xor
jmp
xchg
xchg
test
sbb
ficomps
cmp
xchg
xlat
test
ror
lret
push
mov
cmpsb
sarl
sbb
adc
jg
xor
mov
add
mov
mov
sub
pop
sub
andl
outsb
xchg
mov
imul
shlb
mov
sub
cmp
push
mov
insb
dec
out
inc
mov
add
and
pop
fcomp
dec
jbe
mov
mov
std
or
inc
pop
out
mov
pop
sbb
jb
dec
into
popa
xor
pusha
leave
xchg
xchg
mov
je
in
add
xor
arpl
sbb
mov
push
flds
outsb
xor
stc
dec
jl
adc
inc
cld
lret
cs
lods
dec
js
aad
out
sub
fnstsw
sub
adc
leave
loop
icebp
cli
mov
add
test
cmp
test
cmc
out
orb
push
wbinvd
adc
inc
push
addb
sub
mov
fldl
jne
jo
in
dec
dec
sub
ficoms
sbb
aas
jmp
popf
xchg
cmpsb
daa
out
adc
xor
leave
lods
cmc
sub
push
pushf
dec
xor
add
mov
inc
cltd
mov
and
jno
mov
push
inc
repz
jne
pop
leave
rolb
cvtpi2ps
mul
push
mov
pop
adc
jle
movl
sub
lcall
jge
push
push
mov
sbb
loop
out
mov
mov
add
mov
xor
or
jge
mov
mov
sub
cmp
imul
or
sub
inc
in
cmp
pop
loop
je
pop
dec
cmp
cmp
dec
xchg
sbb
adc
aaa
cmc
jbe
push
loopne
mov
imul
pop
add
rcr
int
sarb
popa
inc
mov
fnop
cmp
sbb
dec
inc
mov
aas
pop
cltd
inc
data16
das
mov
jo
adc
into
pop
ljmp
loop
insb
dec
inc
out
and
sbbl
xchg
fidivrs
or
lods
shl
mov
addr16
cs
pop
and
pop
push
movl
je
mov
cmp
pop
sub
push
pop
out
sbb
adc
imul
mov
loopne
cmc
add
aaa
add
cmp
inc
repnz
ret
lret
push
and
sub
aaa
or
ret
inc
and
sbb
dec
and
add
mov
pop
xlat
mov
pop
mov
dec
aaa
call
mov
leave
and
addr16
idivb
push
push
pop
sub
nopl
pop
stos
sar
mov
pop
inc
pusha
test
xor
push
sahf
pusha
inc
inc
mov
cli
jne
xchg
pop
pop
sub
aad
push
or
pop
jae
and
gs
jbe
lcall
pop
or
sarb
or
outsb
popf
pop
stos
fcoms
pop
pushl
jb
mov
push
loop
xor
int
negl
cwtl
in
lret
adc
mov
dec
loopne
mov
out
lahf
dec
adc
push
sbbb
jno
pop
xchg
push
call
sbb
ret
cmp
mov
outsl
into
dec
push
add
sbb
jecxz
insb
punpckhwd
xlat
sbb
and
add
pop
ds
lret
int
cmp
xor
add
jle
dec
idiv
clc
jge
ljmp
pop
pop
stos
and
pop
adc
popa
jb
inc
nop
adc
jp
mov
fmuls
pushf
mov
xorps
sub
mov
sub
sub
or
xor
add
mov
orl
mov
sub
addl
lods
jle
adc
mov
gs
lret
je
imul
mov
das
imul
fisubl
lods
sbb
lock
xchg
and
xchg
gs
cmp
jne
push
pop
add
aaa
push
jnp
aas
and
lret
sbb
and
push
sbb
xor
pop
lock
psraw
out
shll
push
add
jne
test
sub
ror
mull
das
scas
or
lods
out
lock
insl
js
ss
gs
pop
add
xor
dec
mov
cmc
sub
cmp
mov
pushf
add
aad
or
call
movsl
loopne
out
jb
sti
sahf
mov
cmp
pusha
xor
jo
into
sub
loopne
xchg
jg
loop
sbb
call
cmp
enter
lods
lret
push
xchg
sub
or
sti
sbb
data16
mov
loopne
gs
test
inc
fnstenv
and
loope
aaa
inc
daa
hlt
pop
sti
call
dec
mov
in
jb
inc
add
sti
subps
mov
lds
nop
pmaxsw
popa
rdmsr
cmp
out
xchg
and
insl
pop
subb
mov
push
test
jmp
jge
cs
repnz
mov
sbb
out
fwait
sub
adc
test
or
addb
pushf
inc
mov
lcall
or
adc
sbb
sbb
sub
sbbb
mov
mov
pop
fdivrs
cld
sbb
mov
sahf
int
push
lahf
adc
ds
nop
cmp
add
inc
add
push
push
cmp
pop
clc
push
sub
adc
icebp
dec
lcall
fstpl
mov
scas
aaa
jg
sbb
mov
cmp
push
mov
pop
xchg
sub
add
and
std
pop
repz
cmp
or
mov
iret
lret
lret
pop
xchg
bound
mov
jge
jg
add
or
and
sbb
mov
dec
or
jecxz
or
mov
sub
and
cltd
mov
fcomps
aad
adc
mov
inc
shlb
wrmsr
lret
jnp
outsl
mov
jb
mov
or
fnstcw
add
loopne
dec
daa
cld
dec
fldt
sub
mov
fimuls
scas
push
lret
insl
mov
in
imul
out
inc
scas
adc
or
test
mov
fistpll
daa
pop
sub
dec
test
inc
les
ljmp
and
xchg
or
pop
cmp
jae
mov
std
add
push
or
or
sbb
adc
pusha
test
sub
push
cltd
jo
lods
cltd
dec
cmp
es
unpckhps
loopne
fnsave
in
iret
push
sub
push
inc
in
or
repz
sub
push
dec
and
mov
ret
sbb
lock
push
or
push
fisubs
xlat
lahf
dec
lock
test
out
and
dec
in
pop
add
inc
hlt
dec
cmpsb
pop
mov
dec
out
pop
or
sub
daa
shr
mov
push
cs
and
xchg
jle
dec
rcrl
gs
adc
outsb
or
sub
ror
sbb
es
mov
sbb
push
dec
mov
ret
sub
fwait
pop
lods
inc
insl
push
ret
dec
mov
mov
lahf
out
int3
dec
cwtl
sbb
pop
out
fsts
lret
in
jns
loope
daa
adc
or
push
cmovnp
mov
sbb
js,pn
addr16
sub
out
insl
add
test
xchg
push
adc
or
andl
xor
aas
dec
sub
lret
daa
or
or
dec
cmp
cli
sahf
pop
mov
sub
sbb
in
bound
jle
mov
popf
stc
adc
int3
pop
fisttpl
fbld
or
xchg
xchg
stos
mov
test
mov
add
lcall
adc
xchg
xor
ss
or
pop
sbb
mov
push
stos
insb
lock
add
dec
insl
jmp
jl
pop
int
dec
imul
arpl
in
mov
mov
rolb
loopne
lahf
mov
std
xchg
imul
fstpt
fcomps
or
inc
cltd
jnp
or
push
imul
roll
pop
lea
out
pop
rol
aaa
insl
shll
repz
cld
xorb
or
fsts
cmp
imul
sub
inc
enter
and
sbb
jg
sub
pop
outsb
sub
adc
or
dec
add
or
stos
sti
jno
cmpsl
loop
inc
orl
lock
or
push
out
ds
or
addb
or
jae
orb
dec
jno
icebp
hlt
mov
sub
loope
jmp
sbb
es
push
jns
cmp
ljmp
cmpsl
jecxz
add
sub
jbe
push
ja
sub
lock
pop
add
daa
aas
add
mov
adc
or
adc
inc
insl
enter
dec
icebp
gs
cmp
lea
or
xor
adc
jg
sub
mov
xchg
inc
and
pop
cmp
clc
mov
jmp
test
xor
pop
data16
dec
rorb
mov
add
adc
ret
pop
cs
xchg
xchg
adc
shl
andb
add
add
or
add
dec
push
jg
ja
jge
test
fsubs
sub
pusha
lahf
push
mov
xor
pop
and
jae
pop
jle
add
push
sarb
in
cmp
and
int
inc
push
shll
hlt
pusha
xor
and
mov
mov
stos
fxch
icebp
push
outsl
int
ret
ljmp
push
sub
xor
out
out
inc
fbstp
cli
xchg
cmp
xchg
fisttpll
xchg
xchg
sti
dec
push
add
sbb
pushf
push
inc
and
jno
push
popf
test
push
fnsave
testb
inc
xor
shrl
and
sub
daa
loop
int3
cmc
xor
mov
out
nop
ficoml
dec
adc
and
jge
dec
pop
or
push
je
sub
xor
add
xlat
dec
lds
imul
or
notb
sbb
sub
sbb
ss
das
pop
sbb
mov
clc
or
dec
popa
jbe
inc
int3
jno
mov
dec
add
out
xchg
inc
pop
mov
cmp
or
push
clc
mov
add
test
and
mov
dec
sbb
adc
mov
test
add
lock
pusha
or
push
pusha
dec
dec
push
daa
jnp
aas
cli
test
lea
imul
inc
pop
mov
lea
outsb
push
shlb
mov
cwtl
in
mov
idiv
sub
mov
cs
add
inc
ja
sub
xor
hlt
sbb
jmp
and
bt
dec
jl
movsl
pop
jns
mov
testb
fistps
mov
xor
xchg
inc
sbb
addr16
pushf
mov
cwtl
sub
bound
cmp
repnz
mov
add
lret
je
out
movsb
leave
sti
aam
in
bound
cld
push
xlat
mov
cwtl
inc
inc
sbb
orl
stc
dec
hlt
lcall
movsl
aaa
dec
xor
or
scas
stos
loopne
fwait
push
adc
inc
daa
inc
aas
mov
mov
insb
lods
loope
add
cmp
movswl
aad
mov
in
adc
mov
jnp
sub
sbb
std
mov
jo
jp
sbb
sub
push
scas
cs
sbb
flds
push
cld
sbb
jns
inc
mov
fstp
out
push
pop
cmpsl
in
cli
loopne
out
lss
cmc
or
and
push
clc
adc
fsts
cmp
rcpps
or
push
aas
jp
sub
add
jo
mov
lret
push
adc
dec
xor
dec
xor
pand
out
lods
mov
cmp
sbb
ficompl
mov
loopne
jbe
addr16
iret
scas
mov
lock
mov
jne
cltd
faddp
setg
shll
xchg
aaa
adc
nop
or
fldcw
out
dec
fwait
enter
scas
iret
call
cmp
mov
lea
push
jno
movsl
jns
es
jp
popf
xchg
fcompl
mov
imul
scas
lea
mov
loop
adc
mov
xlat
aaa
ljmp
ljmp
jae
push
mov
fiadds
xchg
sub
mov
mov
movsl
ret
or
stos
dec
fldt
adc
sub
arpl
jp
fwait
loopne
adc
add
or
push
dec
in
pop
xchg
add
mov
jnp
adc
xor
gs
imul
fimull
fists
adc
sahf
clc
divb
lcall
sbb
fsub
pop
test
push
shl
mov
and
sarb
ljmp
xor
cmp
repnz
add
scas
sub
dec
call
out
add
push
push
jo
jne
push
in
repnz
mov
sbb
daa
lock
stc
adc
scas
orb
lods
cmp
popa
into
daa
push
pop
mov
movsl
movsb
test
cmp
ds
sub
stos
mov
dec
add
push
loopne
outsl
insb
adc
das
gs
int3
xor
es
jmp
mov
or
push
gs
mov
mov
loopne
stos
test
push
adc
ss
mov
adc
add
fnstenv
aaa
dec
and
ret
push
outsl
dec
mov
and
jo
loop
or
in
test
loop
mov
cltd
inc
fidivl
pop
int
out
lds
or
dec
sbb
xor
inc
inc
cld
movsl
jo
adcb
dec
popf
adc
xchg
jb
dec
dec
pusha
test
jbe
or
jl
fwait
sub
cmpsb
sub
sub
es
or
fwait
pop
sub
xchg
ljmp
out
or
and
cmp
insb
sbb
sub
sub
out
cvtps2pd
dec
adc
push
loope
addr16
cmc
or
fmull
arpl
xchg
pushf
add
and
adc
mov
jmp
les
pop
pop
jnp
sub
sub
jmp
in
pop
cmp
int
out
jnp
bound
adc
test
mov
test
sbb
rcll
int3
mov
rcrb
clc
push
filds
jo
js
xor
fsts
call
cmp
jne
inc
js
aaa
scas
mov
lods
faddp
push
mov
movsl
lods
push
std
add
sub
jmp
es
add
adc
xchg
xor
add
test
inc
dec
cmc
loope
lock
sbb
dec
pop
out
lret
test
cmpps
pop
jnp
mov
fs
or
cmpl
cmovs
sbb
cs
jns
test
je
pop
dec
aam
adc
pop
add
js
repnz
into
punpckhwd
sbb
lret
xor
je
fistps
pop
fldl
sbb
repnz
pop
nop
test
sub
or
jmp
adc
out
add
cmpsb
sbb
popf
and
test
pushf
aas
cmpb
ds
mov
out
push
loop
cs
mov
cli
mov
lahf
sub
aad
dec
and
sub
rcll
mov
cmp
aam
mov
or
pop
loope
inc
cmp
rcll
rep
btc
pop
sbb
out
daa
cmp
out
cltd
adc
mov
adc
mov
jle
cmp
add
insb
inc
aas
sub
punpcklbw
and
sub
and
cmp
nop
cmp
pop
leave
fimull
decb
js
xor
in
cmp
xor
int
add
fwait
sbb
hlt
leave
inc
dec
jo
movsl
mov
xor
cs
outsb
jp
mov
push
push
insl
mov
paddb
rolb
xchg
sbb
mov
jne
hlt
je
jl
add
aad
roll
ds
sbb
and
push
das
or
test
cld
mov
adc
pop
int3
mov
aas
mov
push
fcmovb
outsb
testl
aaa
push
out
out
mov
mov
cmp
add
test
sbb
cltd
insb
xor
jbe
dec
pushf
inc
pop
pop
pop
or
sub
inc
ret
outsb
or
cmove
xchg
mov
push
stos
test
xor
mov
jecxz
cmp
adc
jmp
adc
sub
ljmp
and
mov
sbb
mov
fisubl
dec
pop
jne
scas
bound
adc
outsb
test
jno
add
faddl
int3
arpl
sbb
pop
pusha
ds
dec
out
fstps
mov
loope
jp
and
cli
and
xchg
outsl
xlat
sbb
cwtl
ss
push
jmp
xlat
shll
xor
mov
sub
cmp
sbb
adc
sbb
mov
cltd
jecxz
test
jno
cwtl
data16
pop
dec
adc
int3
lock
adc
cli
sbb
pop
mov
call
pop
out
sub
cltd
mov
cld
push
das
loopne
sbb
pop
pop
ficoml
out
js
cwtl
sahf
in
scas
mov
adc
jae
pusha
sub
dec
in
mov
or
push
dec
pop
popa
xchg
fucomip
pop
ja
negb
insb
mov
adc
push
and
sbb
int
xor
jo
xor
push
and
inc
repnz
push
or
loopne
arpl
xchg
cmpsl
or
js
adc
or
pushf
pop
jmp
rorl
jnp
clc
or
cmpsb
and
or
pop
test
int
shrb
xchg
xchg
ljmp
in
or
loop
xchg
daa
mov
add
sbb
es
xchg
xor
sub
test
sbb
into
popf
insb
out
push
rorb
sbb
pushf
sub
xchg
adc
sub
dec
cmp
scas
and
mov
pusha
test
add
movb
xchg
lcall
jbe
out
or
mov
ret
mov
mov
es
je
nop
pushf
or
pop
jl
enter
imul
cmp
push
daa
ja
gs
setl
or
xor
cwtl
sbb
or
fisubl
push
pop
insb
or
int
jg
mov
test
aad
mov
jle
push
stc
aaa
dec
daa
mov
adc
fst
or
out
lret
sarb
lcall
stos
push
or
sbb
pop
or
cmp
das
cmp
or
ds
test
or
and
cld
or
pushf
mov
lds
or
add
or
in
ja
lret
dec
xor
xchg
add
ljmp
mov
push
mov
lds
dec
out
into
adc
rorb
or
lods
sbb
fcom
repnz
cmp
out
pop
adc
int
adc
stc
sub
lret
lock
fldenv
fildl
cmp
into
es
mov
pop
movsl
test
std
mov
cmp
pop
ret
clc
push
adc
push
push
or
adc
cwtl
cmp
xor
dec
or
insb
out
pop
insl
inc
pushf
data16
push
or
pop
add
sub
add
or
lret
inc
mov
sbb
mov
cmp
push
es
cmp
or
in
push
inc
cmp
popf
ret
or
add
push
sbb
xchg
or
sbb
rcll
cs
cmp
call
dec
popa
mov
int
scas
add
xchg
mov
aas
sub
loop
inc
jge
daa
ljmp
xchg
add
imulb
cmp
shlb
push
add
rcll
je
inc
push
push
xchg
cmp
lods
sub
lcall
or
ds
add
mov
mov
cmp
jne
or
ds
xchg
adc
scas
or
jns
mov
xchg
jge
jno
loop
or
and
or
cwtl
jns
test
pop
jmp
xor
or
xchg
inc
mov
dec
ret
dec
jle
adcb
xchg
mov
xor
or
xor
xchg
push
jp
xchg
mov
and
loopne
cmc
scas
add
push
sar
sub
mov
sbb
adc
addr16
push
or
loop
cs
outsl
or
mov
sub
movsb
xor
or
adc
or
and
mov
stc
or
mov
or
fcoml
adc
sbb
or
lods
jb
ss
jge
rorb
or
fs
pop
jecxz
sbb
repnz
or
clc
sub
pop
ret
lds
and
stos
into
or
test
mov
xor
sbbb
and
jmp
mov
fistl
outsl
dec
enter
aad
mov
xor
mov
inc
inc
js
sti
mov
fimull
or
xor
fucomp
ja
scas
or
or
outsb
stos
push
mov
or
orl
icebp
pop
jl
push
cli
loop
push
adc
inc
iret
jp
inc
adc
loope
add
dec
mov
daa
hlt
sub
add
sahf
sbb
or
repz
jae
sub
enter
dec
cltd
testb
int3
or
push
mov
xor
pop
loopne
xchg
pop
adc
or
decb
movlps
sub
add
enter
out
and
xor
mov
mov
ljmp
and
shrb
adcl
in
fmull
sbb
popa
or
stos
mov
ret
aaa
cs
or
lea
insl
sub
or
xchg
pop
ljmp
dec
sahf
aad
mov
sbb
or
xchg
adc
push
dec
or
orl
repnz
inc
add
inc
push
mov
xor
mov
fs
or
mov
jmp
icebp
mov
imul
pop
es
lea
sbb
mov
jl
arpl
int3
pop
repz
stc
xor
fdivr
pop
fimuls
mov
movsb
stos
cwtl
xor
add
sub
sahf
ret
adc
insl
cli
insb
in
xor
lret
pop
mov
xor
rol
push
test
sub
and
lods
or
mov
sub
adc
dec
mov
fstps
adc
dec
mov
dec
int
ss
mov
xlat
or
scas
lds
in
out
out
jmp
pop
mov
add
sti
ret
call
lea
sbb
lea
imul
inc
lret
or
shll
push
inc
lea
lds
mov
inc
int3
lcall
or
xorl
xor
cmp
jge
rorb
or
and
xor
adc
add
or
cmp
mov
or
jb
ss
or
scas
test
les
decl
pop
testl
sub
or
rcll
or
xor
pop
add
push
mov
jno
and
push
sbb
adc
inc
daa
repz
add
fnstcw
mov
xchg
in
xchg
js
cs
inc
flds
lods
sub
sub
iret
xlat
cmp
sbb
mov
xchg
inc
insb
or
mov
in
lret
mov
dec
or
imull
dec
or
pop
sub
arpl
or
xchg
dec
fcmovbe
mov
mov
pop
adc
popf
or
rorl
lret
movsl
popf
pop
sub
jl
roll
sbb
pop
mov
fmuls
adc
and
ret
movsl
sbb
pop
dec
data16
pop
idiv
push
lea
push
mov
cmp
nop
cmc
mov
pop
inc
jo
and
pop
mov
add
sub
repnz
or
sbb
outsl
test
sbb
cmpb
or
repz
lds
lods
dec
ja
sbb
ret
or
rorl
dec
gs
mov
cmp
lea
or
jne
and
cmc
outsl
pop
shll
mov
or
xchg
xchg
shl
ss
andb
mov
test
inc
aam
cmp
cmp
pop
dec
pop
adc
dec
and
imul
mov
push
in
mov
adc
sbb
xchg
lret
syscall
pop
push
xor
stos
in
imul
pop
jne
push
lea
add
std
dec
inc
in
xchg
pop
xor
push
cmp
dec
ficoml
mov
sbb
add
dec
adc
imul
jmp
mov
or
cmp
add
test
faddl
cmp
dec
dec
addr16
je
jmp
push
pop
daa
js
sub
sub
xor
pop
aam
repnz
dec
loop
adc
test
pop
adc
sbb
sbb
data16
pop
or
mov
mov
stos
sub
xchg
fdecstp
imul
sub
or
xchg
cmp
sub
lock
sub
outsl
pop
hlt
enter
loop
in
sbb
or
xor
sbb
arpl
test
icebp
xchg
lea
mov
scas
pop
pop
sub
dec
sbb
dec
xchg
je
pop
ljmp
aad
jb
adc
lret
push
aaa
or
loope
rcl
inc
pop
or
xchg
stos
int
btr
pop
mov
int
cmpb
xchg
lods
aaa
mov
popa
mov
das
pop
ljmp
int
lds
push
jmp
rcrl
cs
or
pop
negb
sbb
mov
out
pop
push
inc
xor
inc
jp
sub
cmp
adc
pop
in
testb
dec
stos
xor
mov
adcb
xchg
jle
or
sbb
mov
mov
mov
lds
mov
fidivrs
leave
cmc
jp
xor
jge
jl
add
fnstenv
mov
lock
pop
call
sbb
add
xchg
jmp
mov
call
push
pop
call
cli
sbb
add
dec
fnstenv
scas
int
iret
int3
sbb
fimuls
adc
out
mov
std
pop
mov
icebp
pop
xor
mov
ret
ds
aaa
xchg
loope
jl
cs
arpl
xchg
or
pop
popa
xchg
jne
push
ja
xchg
jge
scas
mov
stos
dec
leave
pop
adc
scas
mov
adc
and
enter
daa
xor
and
in
jl
push
push
sbb
iret
pop
fs
pop
xor
sbb
or
pop
std
jmp
ret
dec
ljmp
bound
jl
xlat
mov
pop
jg
push
pop
or
mov
mov
adc
in
jne
movsb
jb
test
pop
pop
sub
scas
lea
fnstcw
test
xor
es
insb
shlb
or
pop
or
test
repnz
nop
cmpsl
mov
adc
sbb
mov
sub
out
pop
or
lea
out
fisttpl
xor
push
scas
inc
or
sbb
push
sbb
xchg
xor
jne
dec
jge
loop
stos
add
inc
inc
inc
xor
adc
xchg
scas
ret
testl
ja
cmp
xchg
mov
cmp
orl
ja
cmp
rclb
or
pop
adcl
xor
ret
pushf
inc
stos
add
ret
mov
iret
test
roll
inc
xchg
pop
push
mov
inc
movl
or
cmp
int
add
xchg
lea
enter
js
icebp
xor
inc
xchg
mov
add
hlt
sbb
xchg
loop
add
xorb
add
xchg
fwait
push
lret
fldt
and
inc
lods
add
add
sbb
out
push
mov
inc
xor
test
xchg
aaa
adc
xchg
imul
xchg
add
mov
nop
shrb
sub
sbb
pop
xchg
ret
push
in
cmp
cs
sbb
push
inc
push
inc
fadds
push
aaa
leave
inc
xchg
addr16
shufps
lret
mov
push
adc
lret
and
jbe
adc
mov
movsb
shlb
sbbb
mov
pop
pop
add
push
xchg
push
lret
inc
xor
adcb
adc
lret
roll
sbb
or
add
lret
shl
and
or
inc
int
pop
bound
faddl
sbb
fwait
fisttpl
outsb
xor
xchg
push
incl
xchg
sahf
push
stos
or
lds
dec
adc
sbb
adc
les
adc
push
xor
scas
test
inc
ds
adc
pop
xorl
int
stos
sbb
sbb
popa
fwait
mov
cmp
pop
add
mov
inc
out
lods
xor
aad
mov
bswap
push
cmp
mov
lret
jmp
loope
mov
sbb
pop
sbbl
fisttpl
lret
add
rcll
fwait
loopne
scas
fistl
aaa
std
subb
push
inc
out
sbb
mov
and
fcmovnu
add
fstpl
cmp
add
daa
out
xchg
aaa
dec
outsb
sbb
ja
jns
xor
or
add
push
mov
sub
xorb
vshufps
xchg
cmc
sub
adc
add
cltd
mov
roll
jmp
nop
lods
and
mov
mov
pushf
mov
rolb
arpl
lret
xor
pop
add
mov
xchg
pushf
cmp
sub
jle
cmp
and
adc
xchg
adc
push
bts
push
call
lea
jge
pushl
pushf
push
pushf
pushl
pushl
ret
pushf
pusha
mov
lea
call
pushf
pushf
mov
lea
jne
pushf
push
mov
pushl
push
movl
pusha
lea
jmp
mov
xor
and
cmpb
pop
insb
notb
les
cld
jle
cmpsb
jle
jmp
popf
add
stos
repnz
push
adc
jmp
or
or
movsl
add
pop
lods
jmp
jae
jg
push
xchg
adc
out
arpl
lods
jmp
adc
fwait
cmp
sub
rcl
fidivs
insb
sbb
jge
loopne
nop
test
pushf
sub
and
adc
xor
in
sub
pop
sub
stc
push
mov
xlat
xchg
ljmp
dec
loope
xor
jnp
mov
imulb
or
inc
or
inc
adc
dec
repz
fcmovne
sarb
push
fistpll
outsl
mov
jns
sbb
popf
ret
mov
shl
decl
xchg
jae
cmp
add
les
mov
ja
push
inc
std
aaa
movsl
aas
mov
mov
data16
scas
sub
xchg
mulb
adc
movsb
pop
clc
push
call
out
inc
fdivs
fistpll
xchg
mov
add
xchg
mov
xchg
jecxz
mov
push
cmp
rcrb
lds
cmp
jmp
out
push
adc
ljmp
leave
jmp
push
imul
int
dec
dec
push
mov
ds
js
xor
mov
jmp
mov
call
jmp
dec
mov
lcall
dec
pop
fwait
subl
mov
cs
jl
aad
ljmp
lcall
lods
in
inc
pusha
in
mov
add
inc
outsb
stos
and
out
popf
cmp
test
sub
insl
divb
jae
mov
mov
into
push
dec
xorb
or
arpl
outsb
cmpsb
xor
mov
and
cwtl
sbb
fs
jne
jp
mov
loop
pop
aaa
and
fimuls
js
jb
mov
js
xor
push
add
aaa
jne
lcall
mov
sbb
add
test
scas
add
add
xchg
inc
add
pushf
push
dec
pushf
test
bt
neg
test
clc
jmp
lea
je
mov
pusha
pusha
mov
not
lea
je
lahf
bswap
push
pushf
pushf
pop
bswap
lea
movw
push
movl
pusha
pushl
jmp
bsr
sub
inc
movsbw
push
pushf
xor
rcl
rcl
mov
shrd
push
not
aad
bts
adc
sub
pushf
jmp
jmp
pusha
movl
movb
pushl
popl
mov
push
movb
pushl
ret
lea
jae
stc
pusha
stc
pushf
cmp
jmp
call
bt
stc
or
pusha
pushf
lea
je
mov
mov
lea
lea
lea
movzwl
pusha
not
lea
pop
lea
pop
call
dec
stos
lea
outsl
dec
repz
fnstsw
fstpt
lds
loope
insb
adc
pop
xor
jp
or
daa
pop
stos
out
std
fists
js
xor
aas
mov
sub
mov
fistpll
push
dec
fidivl
sub
in
xchg
push
stos
lret
lea
and
push
int3
int3
cmp
sub
sbb
jno
into
pop
cmp
adc
jns
imulb
fidivrl
in
or
xor
ret
lret
lea
xchg
aaa
adc
xchg
in
pop
lcall
push
ror
pop
jecxz
pop
mov
cmp
jns
neg
jmp
push
call
jmp
pusha
push
sub
pusha
cmp
pushf
lea
jmp
mov
pusha
lea
ja
movzbl
mov
pop
pusha
not
not
pushf
mov
movsbw
pushf
mov
pushf
call
lea
jne
dec
shrd
pushf
ror
mov
call
rolb
lcall
and
sub
ret
inc
insb
xor
mov
cltd
jecxz
mov
inc
adc
push
adc
adc
inc
subl
pusha
xor
push
push
mov
lahf
adc
out
push
enter
mov
push
xchg
dec
sbb
out
push
repz
ficompl
fstpt
push
lret
fnstsw
ja
cli
subb
mov
xor
addb
push
mov
and
mov
push
movl
call
push
push
dec
sbb
je
push
jo
rcll
mov
mov
pop
hlt
xor
push
popf
adc
add
call
mov
dec
and
xlat
fmuls
pusha
aam
outsl
cmpsl
adc
mov
cltd
cmc
and
cmpsl
incb
jle
pop
mov
jg
xchg
insl
xlat
movaps
pop
fnsave
sti
mov
call
cmp
orl
dec
jle
stos
mov
sub
int
inc
push
xchg
mov
mov
add
cmpsl
repz
and
sub
imul
loope
fs
in
jg
cmp
mov
in
insl
fisttps
into
sahf
mov
or
mov
int
negl
mov
js
das
fucomi
cmp
clc
bt
pushf
or
jmp
mov
pushf
not
call
cmp
call
cmc
test
sub
cmp
call
pushf
mov
pusha
movl
pushf
lea
movl
pusha
call
popa
sbb
ret
mov
in
jl
les
mov
and
mov
popf
jmp
flds
data16
lcall
sbbl
mov
sahf
sub
hlt
lret
dec
cmp
mov
outsl
dec
add
cmp
call
sbb
mov
push
push
dec
dec
mov
sub
mov
adc
or
in
jmp
lret
sub
bound
repz
mull
lds
movsl
xchg
sub
cmp
jo
jno
cmpsl
push
lock
pop
add
pop
das
orb
out
into
jae
scas
insl
aas
fiaddl
jge
mov
cmc
lea
jb
and
and
xor
or
cmpsl
jne
aas
imul
icebp
mov
mov
lea
adc
outsb
and
lock
ss
inc
or
pop
arpl
fnstsw
pop
jle
clc
lds
cmc
movsb
clc
and
shlb
cs
js
cs
pop
and
add
call
lea
jne
add
mov
test
bt
jmp
call
pusha
pop
seta
bswap
mov
lea
lea
jmp
pushl
pushl
popl
push
pushf
mov
pushl
ret
fdivrl
push
insb
add
lods
inc
jb
adc
fcompl
pop
mov
pop
or
data16
or
jno
mov
adc
xchg
insb
cmp
xlat
mov
adc
inc
mov
or
sub
testb
loop
adc
stc
es
mov
add
jle
sub
fdiv
cmp
inc
push
fcompl
push
sbb
cwtl
in
es
fldcw
add
push
in
fisttps
mov
sub
adc
xor
pop
add
or
xchg
mov
pop
add
ds
lcall
cld
pushl
movb
lea
jle
push
call
call
pushf
add
call
call
lea
je
cmp
bt
push
cmp
add
test
test
pusha
bt
cmp
pushl
lea
js
push
pusha
lea
jb
test
stc
bt
cmp
pushf
pusha
lea
jae
pusha
jmp
mov
movsbw
mov
movsbl
push
setns
pusha
mov
pushf
call
jmp
sub
pop
test
rorl
lret
adc
cmp
frstor
dec
ds
ljmp
bound
inc
push
dec
push
push
pop
adc
mov
push
imul
xchg
faddl
icebp
pusha
icebp
pop
cwtl
js
push
pop
xchg
jg
inc
cmc
pop
cmp
pop
mov
pushf
sub
add
loope
imul
or
push
or
not
cmp
mov
mov
in
repnz
shl
xchg
lcall
mov
dec
addl
mov
cmc
and
xchg
push
jmp
mov
pusha
lods
pusha
jmp
lea
jne
pushf
inc
pushf
mov
inc
pusha
pushf
lea
jmp
lods
lock
enter
cli
jl
and
mov
outsb
inc
add
and
dec
comiss
out
sarb
mov
into
scas
sbb
int
jecxz
or
push
push
push
jnp
inc
insb
packssdw
xchg
add
dec
dec
and
mov
in
cmp
xlat
lds
aam
push
cld
cmp
mov
repnz
adc
lock
cmpsb
mov
push
int3
inc
inc
aad
pop
lds
add
pop
cmp
mov
dec
fdivr
in
hlt
repnz
xchg
js
cmp
out
scas
loopne
cmpsl
xorl
mov
cmp
xlat
and
inc
imul
test
lret
stos
dec
loop
pop
xor
and
sti
mov
dec
dec
mov
addr16
mov
mov
adc
ret
pop
add
out
sub
into
repz
push
orb
and
das
daa
jmp
ficoms
sbb
bt
stc
pusha
test
pusha
push
lea
je
cmp
shr
add
rol
mov
pushf
pusha
jmp
int3
jae
subl
je
xor
mov
test
inc
stc
mov
xchg
mov
in
sub
adc
push
mov
popf
fwait
xor
orb
fs
adc
in
out
pop
pop
rolb
inc
and
jne
stos
mov
sahf
cli
xchg
scas
xchg
mov
jno
lock
adc
push
inc
xchg
loopne
test
call
inc
push
pop
fsubrs
push
lret
gs
jno
sbb
std
cmp
ror
push
mov
iret
adc
mov
sub
jns
std
inc
arpl
sub
mov
js
sub
enter
inc
jne
cmp
fdivs
gs
lcall
dec
push
sub
mov
les
xchg
xor
scas
outsb
jp,pn
loop
adc
stos
cli
std
jns
push
push
xchg
loope
lods
cld
sahf
les
cs
test
enter
mov
js
sub
rcrb
loope
cmp
mull
daa
xchg
jno
ljmp
mov
xchg
sbb
rcl
dec
lods
jne
int
cwtl
sub
sti
dec
inc
sti
ret
push
add
xor
scas
sbb
imull
outsb
ds
cltd
jne
out
and
stos
js
sub
push
xchg
inc
pusha
mov
movl
pushf
call
clc
cmp
pushf
mov
push
movb
lea
jbe
shr
btr
shld
shl
sub
inc
neg
rcl
mov
stc
mov
xadd
ror
rcl
add
sbb
shr
xor
mov
mov
stc
stc
bt
lea
add
bswap
movzbw
jmp
movsbw
bswap
mov
movw
pushf
mov
mov
jmp
xchg
mov
fisubl
inc
loopne
testb
data16
sub
pop
or
mov
in
pusha
ret
shl
and
insb
ss
cmp
xor
mov
lods
adc
adc
jg
aad
and
jbe
popf
iret
cmp
movsb
mov
leave
pop
adc
mov
mov
mov
jns
adc
push
mov
sbb
or
fistpll
mov
xor
sub
push
xchg
mov
and
scas
xchg
dec
sub
adc
ds
add
sub
xlat
adc
ss
lahf
inc
cmp
mov
add
pop
das
sbb
jge
and
mov
pop
mov
call
movsl
popa
inc
sub
mov
xchg
mov
add
daa
in
out
mov
pop
mull
jge
push
arpl
adc
pop
scas
cli
shll
out
enter
inc
mov
scas
insb
aad
push
std
mov
jo
pusha
cmpsl
xor
mov
xchg
in
stos
mov
imul
stos
push
sbb
jae
xchg
xchg
xchg
lods
rcl
adc
push
and
mov
repz
jae
xor
addr16
xlat
lahf
mov
sbb
cmp
dec
sub
ret
dec
dec
flds
fisttps
mov
pop
sub
pusha
jecxz
sub
cmp
adc
dec
sub
push
push
lods
insl
or
test
or
inc
mov
cli
lret
arpl
stos
lock
cld
test
das
mov
or
inc
in
mov
or
add
xor
addr16
xlat
outsb
call
add
push
arpl
jmp
insb
shll
aam
jp
cmpsb
test
push
adcb
ret
inc
lds
imul
bswap
out
mov
jle
push
cmp
repz
out
adc
xor
cmp
jmp
inc
mov
out
movsl
sub
mov
das
xor
js
and
lods
fdiv
fmuls
mov
popf
in
cmp
dec
add
into
jle
pop
mov
sbb
cmp
shlb
js
outsb
shll
cld
les
fimull
xchg
addr16
dec
jge
js
shll
pushf
mov
hlt
adc
push
out
out
scas
lcall
int3
cmc
das
dec
test
xor
aam
sbb
xlat
inc
mov
imul
cmpsb
xor
popw
loope
lock
adc
decl
cltd
dec
adc
push
inc
pop
adc
inc
xor
mov
sub
insl
pop
mov
pop
jl
inc
int3
pop
cmp
lcall
pusha
pusha
jmp
insl
or
inc
and
jb
push
cmp
repnz
xchg
cmp
add
pop
jl
push
inc
add
gs
mov
xor
jnp
decl
sub
in
mov
xor
out
divl
fstl
pusha
mov
mov
lock
pop
sub
cs
mov
std
sub
lahf
idivl
sbb
std
sub
lods
addr16
xchg
sub
and
popa
loop
movl
pusha
pusha
push
movl
pushf
lea
jmp
call
and
cmp
add
repz
mov
aad
fs
jo
in
mov
mov
jae
scas
out
xor
push
dec
stc
adc
cmpsb
jecxz
mov
dec
movsl
in
xor
sub
in
notb
shlb
push
in
sub
fwait
pop
out
jge
stc
out
aad
jno
sbb
and
in
pushf
pusha
pusha
movb
movl
movw
pushl
pushf
push
lea
jmp
push
push
movsbw
pusha
bswap
lea
pusha
mov
call
push
push
lea
jb
cmc
cmpb
call
jmp
xor
gs
or
fistpl
sub
inc
gs
jg
sti
je
jns
cmpsb
or
rclb
jp
xor
lds
xchg
fsubl
mov
ljmp
cli
cwtl
push
loope
inc
cmpb
jb
or
in
sahf
adc
lods
mov
lcall
xchg
int3
mov
movl
call
mov
call
inc
pop
push
pop
sub
test
mov
add
push
das
clc
push
stc
inc
test
stc
mov
cmp
inc
jmp
outsb
mov
or
xchg
test
shrl
test
mov
mov
add
popf
pop
push
js
and
jecxz
sldt
jmp
inc
jbe
pusha
mov
mov
adc
push
pushl
ret
dec
aas
sub
and
jb
add
insl
dec
lahf
xor
inc
cmp
aaa
jns
das
mov
inc
hlt
sarl
add
movsl
xchg
sbb
jbe
ss
das
adc
popa
jne
dec
dec
cld
movsb
aam
aaa
lods
xor
xor
cwtl
pop
subb
jp
mov
flds
out
es
jne
jge
lods
push
out
push
add
adc
scas
fidivs
dec
icebp
hlt
dec
ljmp
loop
out
bound
js
and
mov
jp
and
and
addr16
cmp
sub
mov
aam
and
sub
jg
mov
jo
mov
mov
pop
sub
cmp
xlat
sbbl
icebp
sub
and
iret
sti
pop
mov
inc
mov
sub
lea
stc
pop
ja
cmpsb
mov
js
or
jl
sbb
sub
notl
mov
movsl
or
aas
sti
mov
dec
pusha
fistl
xchg
jns
imul
inc
movntq
out
imul
and
cs
clc
jmp
nop
adc
bound
iret
or
das
stc
rol
insl
add
push
jecxz
mov
mov
scas
mov
outsb
inc
xor
cmp
test
mov
stos
xchg
push
outsb
mov
inc
sub
iret
mov
mov
sub
lods
mov
insl
pop
rorb
dec
sub
push
les
clc
mov
adc
loop
and
jl
jno
mov
inc
jb
inc
dec
dec
imul
cmp
push
push
orb
mov
add
push
mov
or
cli
sub
je
jbe
and
or
mov
xor
dec
test
inc
dec
inc
jno
xchg
js
and
add
cmp
pop
aad
shl
icebp
js
sub
mov
push
aaa
fwait
rorb
test
and
popf
dec
out
xchg
aas
mov
xchg
inc
lds
inc
and
cld
adc
fcmove
je
insl
pop
jb
dec
mov
in
mov
stos
arpl
imul
dec
jmp
sbb
or
jae
cltd
jg
jns
test
nop
xchg
scas
mov
aam
filds
adc
cld
fxch
in
sbb
mov
pop
dec
cltd
imul
adc
cmc
pusha
or
push
pusha
lea
je
not
jmp
push
push
jb
push
mov
or
fdivr
push
rclb
push
jbe
dec
es
sbb
sub
call
and
jne
lret
scas
mov
xor
lods
pop
adc
mov
xor
hlt
mov
stos
push
test
or
pushf
fidivl
adc
test
push
stos
loopne
lahf
mov
nop
dec
sbb
xor
push
sahf
test
cmpsb
push
js
pop
insl
mov
adc
movl
pushl
ret
movw
lea
je
rcr
add
ror
setbe
mov
cmc
pusha
add
clc
mov
xor
mov
test
pushl
call
mov
add
pusha
lea
jmp
mov
pushl
push
pushl
ret
pushl
cmpb
pushl
pushf
lea
jne
push
pusha
shrd
and
xor
shrd
pusha
aam
mov
mov
add
sar
add
shr
stc
xor
shl
mov
push
test
pusha
lea
je
stc
jmp
pushf
lea
jne
test
pushf
movsbw
or
mov
pushf
call
pusha
lea
jae
not
setg
mov
not
pusha
inc
call
add
pusha
movl
pusha
mov
movb
pushf
lea
jmp
lea
jae
cmp
call
cmc
pusha
ror
stc
shr
pushf
pushf
lea
je
jmp
pop
pusha
pushl
ret
cwtl
mov
pushf
setbe
mov
jmp
xchg
mov
call
lea
jmp
pushl
popl
movb
movb
movb
pushl
ret
inc
xchg
loope
mov
xchg
pop
addr16
jle
je
add
sbbb
mov
push
data16
int3
hlt
sub
ljmp
mov
dec
fxch
int
sbb
sbb
sbb
js
sbb
jno
fistpll
mov
in
mov
dec
adc
add
nop
jg
cs
loope
mov
aam
or
decb
push
mov
dec
sbb
and
je
mov
jb
shl
ret
xchg
mov
add
dec
and
cs
test
mov
mov
js
sbb
add
outsl
xchg
es
in
je
or
pop
jl
push
mov
lods
fdivp
jge
jl
cmp
cwtl
dec
inc
ret
ss
jle
pop
pop
lock
add
insl
or
xchg
sbb
cli
jmp
push
jb
cmp
inc
adc
push
out
testl
test
add
and
cli
pop
aaa
in
loopne
loope
ljmp
dec
pusha
aam
and
insl
jmp
adc
inc
mov
push
xchg
xchg
mov
ja
stos
mov
mov
xchg
data16
or
add
jns
fs
pop
scas
lea
mov
mov
mov
shrb
add
cltd
xor
cmpsl
dec
gs
sbb
ret
js
adc
js
insl
cmpsl
ret
and
out
dec
pusha
cs
mov
lds
cltd
mov
xor
fisubs
roll
call
cmp
pop
xchg
repnz
xchg
cmp
xchg
lock
leave
scas
push
mov
jne
les
mov
cmpsl
gs
das
jmp
je
and
and
pop
loope
test
sub
bound
add
inc
js
lret
lods
or
int
cmp
mov
pop
or
loop
mov
fwait
mov
dec
loopne
sbb
lods
mov
je
pop
fidivl
mov
adc
bound
arpl
add
js
sbb
push
adc
xchg
mov
jmp
and
mov
enter
ja
call
sub
in
mov
call
push
in
pop
jecxz
pushf
cmp
push
push
insl
push
jle
loop
inc
roll
mov
pop
fimull
or
xchg
sub
test
push
mov
pop
js
sbb
pushl
popl
pushf
pushf
push
pushl
pushl
ret
mov
xlat
jae
and
arpl
int
std
decl
test
dec
sub
imul
ds
xchg
xlat
addb
idivb
ljmp
insb
jo
notl
cmpsw
pop
inc
add
jp
stc
sti
xchg
aaa
xchg
in
xor
xchg
fmuls
sub
repnz
stos
jmp
jne
push
mov
or
sub
mov
sbb
push
pusha
out
dec
sbb
sub
push
push
rol
pop
xchg
pop
sbb
jg
aas
dec
and
xor
cmc
jge
dec
stc
jecxz
in
js
sbb
xchg
jb
jmp
sarb
mov
clc
fnstsw
pop
lcall
pushl
fbstp
mov
inc
add
into
dec
idivb
repz
push
mov
int3
test
pop
fnstcw
and
or
incl
mov
jecxz,pn
popf
adcl
arpl
xor
mov
jno
jmp
xor
ret
pop
mov
scas
dec
cmp
js
sbb
sub
cmp
mov
cmc
rcl
mov
push
sub
fldl
je
cmpsb
push
out
arpl
pop
xlat
cmpsb
cmp
mov
mov
rcrb
fnstenv
add
push
mov
cmp
cmc
arpl
aaa
mov
aas
dec
in
jno
mov
cmpsl
pop
mov
push
js
sbb
inc
push
sti
test
push
jae
push
dec
movsb
lret
lcall
mov
int3
js
sbb
pop
iret
mov
sbb
lods
adc
cwtl
cld
addb
fadd
jae
repz
push
out
mov
sub
cmp
dec
pushf
add
pop
daa
cmc
or
mov
stc
push
mov
mov
repnz
cmpsb
sbb
cmpsl
loope
pop
fidivrl
scas
inc
sbb
push
sub
mov
ljmp
out
fisttpll
xchg
lahf
out
mov
sbb
out
mov
sbb
xchg
inc
inc
jp
fisubs
cmpb
sbb
scas
iret
outsl
popa
fs
cmc
out
sbb
ss
fsubp
testb
cltd
lea
jne
lahf
mov
push
pusha
pushf
lea
jmp
pushf
call
push
pusha
lea
ja
jmp
call
dec
pushl
lea
jne
btc
test
mov
bt
bt
pusha
cmp
call
jno
xor
add
or
pop
push
mov
cs
ljmp
jns
rcl
jne
iret
pop
mov
in
je
flds
lahf
bound
jo
mov
std
sbb
and
lods
lds
pop
outsl
test
adc
pop
out
ja
subb
xor
jbe
inc
fs
lods
sbb
push
adc
div
call
xchg
out
outsl
ja
push
cmp
rcrl
cmp
adc
pop
aas
mov
loopw
fs
inc
aad
pop
xchg
jp
lods
jns
or
addr16
cmc
cltd
popf
add
or
mov
cmpb
adc
pop
rep
mov
jmp
mov
lea
jne
rcl
movzbw
mov
shrd
mov
stc
cmp
call
mov
mov
call
and
mov
movw
add
pushf
movb
movzwl
bt
shrd
shr
mov
stc
call
fcomip
in
cmpsb
mov
gs
push
xlat
jmp
addr16
jmp
dec
mov
xchg
fnstsw
pop
mov
mov
fmull
jo
mov
pop
icebp
mov
les
mov
lods
xor
push
sbb
shlb
js
push
mov
push
jmp
cmp
scas
adc
or
mov
sub
and
xchg
cmpsl
jae
or
mov
pop
sub
and
outsb
outsb
rolb
aaa
jbe
xchg
cmp
and
stos
and
mov
sbb
pop
sbb
push
leave
mov
mov
push
adc
or
jbe
and
mov
mov
arpl
ljmp
mov
mov
and
loop
dec
xchg
xchg
jmp
out
jae
int
dec
sbb
pop
or
mov
test
fsubrl
js
and
fistpl
pop
push
cmp
inc
cmpsl
hlt
xchg
rcrl
insb
xlat
mov
cmc
pop
ss
push
lret
pop
push
pop
fnstsw
orb
pop
sti
nop
sub
int3
cmp
dec
out
mov
out
js
adc
fs
jb
push
pushl
ret
lea
jae
jmp
pushf
cwtl
mov
mov
pushf
lea
jmp
sub
dec
fxch
out
mov
repz
xchg
cmp
wbinvd
insl
stos
push
sbb
jb
sarl
cmpsb
dec
dec
sbb
cwtl
in
or
pop
in
ret
loopne
daa
push
clc
xchg
out
pop
stos
fs
andl
push
push
icebp
and
fwait
jmp
leave
push
cmp
mov
xchg
lds
imul
mov
lea
addr16
mov
or
mov
and
les
mov
inc
pop
xchg
jge
in
dec
sbb
js
out
push
add
push
xor
test
cmc
icebp
and
out
sti
fwait
pop
lea
adc
test
add
add
add
add
add
add
add
add
adc
add
add
add
add
adc
xor
popa
xor
inc
hlt
mov
lods
lods
or
bound
loopne
sarl
int
xchg
cs
call
arpl
dec
addl
mov
inc
fs
addl
sub
cli
mov
xchg
mov
add
add
mov
dec
bnd
loopne
pop
cli
lcall
mov
mov
pop
push
xor
sub
push
mul
jg
jnp
sbb
cmp
icebp
sbb
stc
add
push
mov
imul
sub
mov
pop
test
dec
leave
je
xor
in
repz
mov
cld
loop
daa
sbb
aam
mov
xlat
adc
fs
imul
in
mov
jae
decb
sub
gs
sub
outsl
mov
lods
sarb
js
or
sub
pushf
ret
mov
fcoml
pop
daa
pop
and
ss
sbb
mov
das
sub
data16
adc
pop
hlt
xor
cmp
movsl
xor
mov
add
aam
cmpsb
and
cld
aad
sbb
pop
add
ja
test
ljmp
cltd
call
repnz
movsl
lock
adc
jb
push
test
sbb
clc
fisttpl
stos
pop
sahf
mov
in
sti
mov
gs
aad
loop
sar
sub
jmp
add
jne
push
pushw
inc
scas
mov
fs
jmp
repz
inc
stos
movsl
cld
cmc
jo
push
pslld
stos
xchg
mov
cmpsb
jne
xor
xchg
sub
decb
dec
xor
sbb
movsl
mov
inc
ja
adc
adc
sub
ja
inc
or
inc
jo
lcall
dec
push
sahf
lock
pushl
imul
jb
or
cmp
cli
lods
js
das
cmp
mov
xchg
rolb
mov
mov
mov
aaa
or
inc
mov
icebp
fisttpl
pop
ret
push
stos
mov
sbb
and
mov
sub
mov
or
pop
out
imul
fs
call
mov
mov
push
xchg
fcomi
push
mov
cli
out
stos
loop
mov
pop
test
inc
pop
fstl
out
shl
imul
mov
mov
pop
ret
dec
sbb
mov
clc
jb
jg
shll
add
or
popa
fbstp
push
fstps
outsb
mov
lock
cmp
shll
jmp
jno
call
mov
sbb
push
xchg
xchg
imul
test
push
mov
movlhps
in
loope
das
xor
dec
rorl
shrl
addr16
xchg
into
dec
sub
sbb
sub
sbb
dec
sub
jns
sysexit
xchg
jbe
adc
lcall
sti
lret
xchg
or
cmp
out
les
push
imul
xchg
insl
sbb
sub
pop
xlat
adc
and
shl
pop
adcb
pop
addl
push
shr
jecxz
loope
xchg
imul
pushf
jecxz
mov
lahf
push
into
jb
add
in
or
scas
fs
js
mulb
pop
xchg
push
cmpsl
mov
out
pop
lock
push
repnz
ljmp
insb
in
inc
jne
xor
call
mov
lcall
xchg
aaa
daa
dec
jno
push
out
mov
sbb
ljmp
rcll
cs
push
mov
int
mov
cwtl
xchg
mov
and
inc
ret
loopne
int3
bound
ret
pop
cmp
sub
pop
mov
and
and
pushf
xor
loope
adcl
test
push
push
mov
andb
sbb
outsl
stc
xor
ret
pusha
fmul
cli
mov
pushf
cmp
mov
inc
inc
enter
repz
inc
call
mov
out
aas
lods
sti
bound
sub
inc
sbb
mov
sub
dec
pop
xlat
ficoml
fnstenv
fidivrs
aaa
ficompl
mov
and
mov
sub
cmp
cli
les
repnz
cltd
inc
mov
pop
cmpsl
xchg
sbb
jnp
pop
xor
in
xor
test
int3
lret
inc
cmp
xor
push
test
out
ret
pop
cmp
dec
nop
dec
sub
xchg
insl
sbb
cwtl
out
inc
xor
scas
les
dec
push
mov
inc
xor
cmp
mov
jecxz
aad
and
pop
bound
add
outsl
rol
hlt
lahf
pop
mov
ffree
scas
mov
mulb
adc
and
std
jns
scas
push
push
aam
jecxz
xor
inc
insl
dec
push
sub
mov
aaa
movsb
aad
xor
or
int3
inc
fucom
dec
xor
xchg
and
fiadds
jae
arpl
and
sbb
pop
stc
fstps
pusha
xor
lods
jns
cmpsb
cs
sbb
dec
sbb
pop
pop
push
jbe
sbb
cmp
mov
je
mov
pop
lret
rcll
push
fldl
mov
gs
movsb
lahf
xchg
aaa
ds
push
sbb
pushf
into
jns
aas
jle
into
aam
mov
repnz
push
inc
jae
inc
fisubs
inc
cld
cmc
xchg
jle
mov
movsl
int
dec
jns
sub
movsb
leave
add
mov
sti
pushf
push
bound
rcll
sub
rorb
jne
cwtl
stc
mov
ja
and
mov
out
or
pop
mov
push
xchg
xchg
popf
mov
rcrl
fisubrs
adc
loopne
jno
repz
xchg
inc
fwait
jnp
xchg
push
jecxz
pop
or
testb
dec
aas
cs
js
push
push
daa
pusha
icebp
pop
sbb
stos
leave
rcll
sbb
mov
jb,pn
cli
mov
adc
mov
push
fwait
dec
mov
adc
icebp
repz
aad
inc
hlt
jno
cmp
arpl
adc
imul
jecxz
rcl
jmp
sub
or
jl
jmp
loope
je
mov
dec
mov
add
sbb
jle
fldcw
sub
adc
push
std
out
sub
cltd
fs
int3
int
sub
sahf
leave
lods
jle
jns
xchg
jno
test
test
xchg
imulb
sbb
cmp
cmp
into
push
lea
popf
sbb
cmpsl
cmc
xor
in
xor
mov
inc
dec
cmpsb
data16
mov
in
xchg
cmp
stos
mov
shlb
jbe
sub
mov
mov
adc
sbb
cmp
cmpsb
jae,pn
testl
stos
jge
sub
cli
mov
outsl
inc
mov
insb
adc
lea
loop
jg
xor
dec
std
push
sub
leave
xor
andb
test
rclb
insb
decl
fistl
xchg
sub
movsb
das
jns
adcl
jmp
mov
int3
repz
push
pop
adc
dec
sbb
insl
sub
jge
mov
sti
xchg
outsl
dec
xor
mov
push
or
xchg
inc
fiadds
or
call
sahf
insb
aaa
ds
mov
cmc
les
pop
arpl
mov
jnp
imul
sub
mov
sbb
mov
jecxz
je
or
rcll
ret
imul
adcb
into
testl
mov
pop
mov
xor
dec
jb
inc
mov
sub
das
loop
cmp
es
in
mov
push
loopne
add
adc
push
loop
stos
jg
test
jp
xor
push
add
jbe
dec
and
adc
dec
fdivr
dec
fsincos
dec
stc
add
adc
push
mov
add
leave
and
call
int3
inc
and
xchg
not
movsb
popf
jno
add
imul
xchg
sub
mov
out
fst
mov
les
hlt
stos
dec
jnp
lock
pop
sbb
push
push
loop
add
loopne
push
sahf
pmovmskb
fisubl
jecxz
add
mov
mov
push
cwtl
imul
cmp
adc
inc
dec
in
and
neg
mov
lret
andb
or
jle
adc
cs
sti
xor
stc
fistpl
push
jl
mov
mov
fnsave
and
sahf
addr16
jmp
xchg
arpl
fsubrs
dec
jae
push
out
mov
aas
cltd
or
in
xor
insb
sti
aas
leave
or
out
dec
cld
mov
aam
sti
call
sahf
mov
fsqrt
jnp
test
push
sbb
test
rcr
adc
xor
push
cmp
adc
cmpsl
xor
ret
sbbb
inc
mov
jle
call
jae
cmpsb
ret
and
mov
lods
aam
mov
sub
dec
stc
rolb
sub
xor
mov
sbb
adc
xchg
mov
rcrl
mov
pop
dec
insl
icebp
inc
fidivs
mov
cli
push
arpl
icebp
stc
out
xchg
dec
pop
adc
movsb
pop
and
sub
aas
mov
nop
adc
dec
jo
bnd
shrb
mov
call
jg
lds
out
mov
sbb
inc
push
je
outsb
repnz
pop
hlt
test
outsl
jl
inc
cmpsb
pop
clc
dec
fs
es
inc
jnp
scas
and
lds
insl
insb
cmp
sbb
pop
ss
or
mov
xorl
sub
mov
sub
js
mov
adc
jl
leave
sbb
aas
sahf
lret
jmp
daa
and
adc
push
insl
sub
push
sub
lock
test
adc
les
sti
jo
cmp
lret
jbe
adc
popf
mov
inc
jns
add
imul
ret
mov
sub
imulb
pop
insl
movb
inc
push
jne
mov
add
cmp
mov
cmpsb
cs
std
mov
add
pop
push
lods
es
lret
mov
lods
cmp
or
sbb
ja
popa
or
cmpsb
stos
push
les
sti
push
int3
jp
shrb
add
enter
adc
sahf
mov
jae
sub
jmp
push
mov
and
mov
lods
out
push
xor
jecxz
dec
sbb
xchg
push
add
or
repnz
inc
daa
pop
int3
xchg
push
sbb
pushf
movsb
jo
mov
andl
adc
push
andb
mov
test
sbb
daa
adc
mov
or
push
mov
add
add
cmpb
jmp
jmp
mov
iret
jnp
in
clc
fists
out
les
hlt
sahf
bound
in
mov
lret
ljmp
cld
add
mov
or
daa
cmp
jge
cmp
sbb
cmc
mov
add
lods
cmp
and
ja
repz
lds
and
or
dec
lods
cli
jns
filds
mov
inc
decb
insb
arpl
dec
in
inc
lock
aam
sbb
fisttpl
shlb
xchg
inc
or
stc
push
shlb
movsl
pop
lret
inc
sub
mov
add
cmp
pop
loope
repz
jmp
insl
inc
mov
mov
lcall
iret
pop
les
sbb
or
leave
push
out
sbb
sbb
dec
and
mov
fidivs
jno
ret
mov
push
push
mov
sub
pop
adc
xor
imul
jl
call
inc
pop
cmp
xor
das
cmp
xchg
sub
push
pop
fildll
fwait
inc
adc
lcall
aas
lods
in
pop
mov
leave
add
xor
loopne
outsl
mov
lea
xorl
popa
xchg
jb
rcrl
lods
cmp
jl
or
int3
jle
add
dec
js
push
fiadds
dec
mov
movsl
lods
mov
adc
data16
mov
push
sub
clc
jecxz
push
shll
push
loop
jnp
decb
cwtl
and
mov
lock
mov
lcall
xor
movl
mov
pusha
pushf
pushf
lea
jmp
ror
pushf
pusha
jmp
out
mov
andl
inc
adc
ljmp
testb
push
inc
adc
iret
push
nop
ret
mov
je
push
and
pop
mov
data16
pushf
cmp
fistpll
cltd
push
lcall
mov
sub
add
nop
sbb
scas
pop
adc
jg
jg
out
sahf
cwtl
arpl
jp
outsb
into
xchg
xlat
mov
ja
icebp
and
sub
ljmp
cmpsl
adc
inc
push
std
out
inc
sti
mov
push
setnp
cmpsl
mov
dec
or
mov
fimull
mov
xor
mov
setb
pop
push
mov
pop
xor
inc
stc
jle
and
fwait
jbe
jnp
int3
je
sub
arpl
or
add
mov
loope
xchg
lds
add
and
aam
add
or
js
add
dec
out
sbb
cmp
jnp
std
push
inc
outsl
fcomi
jae
sub
push
out
je
test
in
xor
add
mov
in
and
clc
jae
popf
ret
and
jns
dec
and
repnz
fmul
ret
rol
mov
into
outsb
pop
mov
push
data16
push
push
mov
mov
pop
mov
pop
testl
js
enter
js
add
mov
inc
mov
or
cmp
jo
cmp
nop
dec
mov
into
sbb
push
xor
add
jbe
push
or
ret
dec
pop
adc
jb
mov
popa
xor
sub
outsl
dec
xchg
push
xchg
rcll
arpl
adcb
in
add
out
call
icebp
mov
and
inc
dec
rol
adc
jne
xchg
fldt
scas
inc
inc
arpl
mov
mov
repz
ror
lods
incl
ja
add
mov
xlat
mov
cmp
pop
inc
std
or
sti
insb
jecxz
call
dec
push
test
out
push
mov
ss
test
jle
fmuls
fwait
enter
lret
sbb
pop
cmpl
mov
lret
cmp
iret
sarl
arpl
sbb
cmpsl
sbb
cmp
test
xchg
scas
test
jbe
inc
inc
rolb
push
xchg
out
xchg
out
sub
scas
loope
enter
shlb
js
loopne
jmp
ds
mov
adc
sub
repz
loope
test
add
mov
xchg
and
sahf
icebp
imul
stos
xchg
out
sahf
ljmp
pusha
mov
or
inc
addb
jg
jecxz
ljmp
jb
rclb
js
add
mov
mov
and
push
sti
fcompl
pop
jg
gs
stc
or
and
pop
repnz
add
movsl
in
dec
out
lret
out
fcmovbe
add
xchg
test
pop
inc
cwtl
push
or
xchg
mov
add
pop
rcr
ss
repz
imul
mov
cmpsb
inc
pop
add
pop
jg
sbb
xor
jo
lock
cmp
fwait
inc
xor
jmp
mov
lret
xlat
fadds
or
orl
lock
jg
test
jl
cs
pop
mov
pusha
cld
mov
js
add
in
ret
add
sub
xchg
push
dec
mov
call
push
shlb
imul
les
es
jecxz
mov
cmp
cwtl
shl
push
cmp
and
jae
pusha
mov
movl
jmp
jmp
mov
movsbw
lahf
lea
pusha
pusha
movl
mov
mov
pushf
pushl
ret
jne
bsf
mov
push
add
clc
movzwl
lea
inc
stc
shl
rcl
mov
pusha
clc
pusha
pushl
add
mov
jmp
sub
jmp
push
mov
jmp
lea
jae
test
stc
jmp
pushl
popl
pusha
pushl
ret
movb
lea
call
stc
push
cmp
mov
lea
jae
cmc
clc
pusha
cmp
pushf
mov
pusha
lea
jae
stc
pushf
mov
cmp
pushf
lea
ja
call
sbb
sbb
and
sub
xchg
sub
scas
pushf
ljmp
sub
pusha
xlat
sahf
jb
movsb
fstpt
test
rolb
inc
xchg
fists
jne
adcl
mov
imul
fsubs
dec
aas
pop
lret
add
push
aaa
insl
jns
mov
adc
int3
lods
je
mov
sti
dec
pushf
shl
popa
add
mov
hlt
xchg
loopne
mov
insb
clc
repnz
stos
sbb
cmp
repz
add
je
mov
sbb
inc
pop
in
scas
aaa
sbb
arpl
mov
inc
mov
movsl
jecxz
mov
stos
nop
adc
insl
jae
lret
pop
push
icebp
sub
cmp
hlt
sub
dec
repnz
mov
daa
js
add
imul
mov
pop
testl
fsub
inc
fldcw
addr16
push
shlb
mov
lea
gs
pop
lret
xchg
push
js
mov
inc
jmp
jle
in
dec
dec
jge
stc
loop
push
xchg
in
pop
ret
sbb
mov
inc
and
lret
fwait
test
add
stos
or
xor
je
jns
xor
and
repnz
repz
xor
andl
xchg
das
ret
and
xlat
imul
mov
add
add
sub
lock
mov
subl
aas
push
jmp
push
icebp
dec
jge
js
incl
bt
bt
or
push
call
les
or
jae
fistl
xor
inc
pop
fstpt
jns
jnp
mov
cmpsl
xor
stc
sbb
xchg
aaa
jbe
int3
push
dec
push
mov
lea
lock
mov
es
fisubs
mov
pusha
les
data16
lcall
insb
lea
je
bt
pushf
push
add
push
movb
pusha
cmp
push
call
call
loope
shr
rclb
sub
popa
shl
ljmp
dec
pop
shlb
pop
xor
xchg
mov
in
sbb
pop
push
adc
sub
add
pop
cmp
ds
lcall
movsl
sarb
cwtl
xchg
sub
addr16
test
mov
lret
push
cmpsl
lods
lret
cmpsb
jp
nop
js
xlat
xchg
outsb
scas
xor
inc
test
cld
ss
mov
push
lods
adc
incb
push
xorb
push
dec
mov
jb
push
test
inc
hlt
dec
cmp
bound
enter
mov
or
mov
jb
enter
pop
pop
cmc
xor
or
sbb
pop
add
cmp
pop
xcrypt-ecb
cmpsl
mov
sbb
lea
sbb
mov
xchg
insb
jae
push
and
jg
mov
add
push
push
or
sbbl
push
push
mov
pop
sub
nop
je
cmp
rcrb
test
loopne
pushl
call
mov
pop
pop
movl
movsbw
mov
movsbw
lea
call
arpl
fstl
xlat
scas
lods
mov
and
dec
lcall
jmp
add
hlt
adc
aas
cmp
jmp
adc
movsb
gs
mov
cmp
shll
imul
push
sti
lea
mov
add
pmuludq
daa
jae
mov
aam
mov
dec
cmc
and
fwait
mov
push
jl
call
rcll
in
inc
inc
sbb
inc
je
cltd
and
mov
inc
jae
push
adc
fistpll
pop
and
das
imul
dec
sub
sbb
xchg
ss
add
fbstp
dec
dec
or
leave
cmp
push
test
lcall
mov
push
nop
push
xor
dec
les
xchg
mov
call
stos
bound
lcall
jns
add
movsbl
push
mov
sete
mov
lea
movw
jmp
shld
mov
call
push
pushf
pushf
movb
mov
lea
jmp
call
pusha
pusha
mov
mov
jmp
iret
imul
and
mov
xor
test
imul
outsb
fbld
sbb
and
jl
mov
nop
in
call
and
pop
clc
adc
pop
sar
data16
int
cmpsl
cmp
fimuls
lods
outsl
sub
iret
mov
fsubrp
inc
loopne
and
push
ljmp
outsl
pop
sub
mov
pop
mull
or
mov
lret
addr16
les
push
std
xchg
dec
pop
pop
rol
or
test
dec
sub
jp
mov
aaa
bound
aam
mov
stc
iret
mov
dec
xlat
push
xor
xor
jne
sbb
xor
mov
or
lock
pop
dec
pop
adc
hlt
sub
adc
mov
clc
or
inc
xor
ret
adc
imul
and
aaa
out
or
xchg
dec
and
scas
cmpsl
mul
test
andb
or
cmp
scas
adc
bound
ret
mov
das
daa
jbe
xor
aaa
mov
jo
lret
adc
jg
xlat
jns
and
int3
adc
mov
jecxz
sbb
fimull
sub
xor
xchg
jb
imul
mov
in
pop
rcll
in
mov
lcall
inc
decl
xchg
cmp
jmp
lea
jbe
bt
cmc
mov
and
shld
add
shl
bts
movsbw
mov
push
bts
sbb
sar
add
bsr
or
movl
jmp
cmp
cmc
cmp
pusha
jmp
movb
mov
jmp
mov
clc
test
not
mov
sbb
shld
mov
stc
bt
xor
clc
jmp
xlat
or
and
out
xor
pop
out
dec
sbb
jmp
lret
aad
push
dec
sub
dec
enter
adc
mov
pushf
retw
cli
in
mov
mov
cs
pop
mov
cli
adc
orb
std
cmp
mov
fiadds
jecxz
xor
setnp
out
lods
add
mov
dec
outsl
jle
cmc
mov
lahf
sbb
jg
fdivrl
mov
xor
in
jbe
add
and
ljmp
lock
movb
movl
mov
pushl
pushf
pusha
lea
jmp
leave
std
xchg
leave
icebp
out
mov
orb
lahf
out
cmp
shll
loop
lock
bound
repz
gs
loope
daa
outsb
lahf
push
fiadds
aam
ja
or
cltd
push
mov
jp
shrl
inc
pop
xlat
bound
dec
outsl
mov
pop
in
mov
lcall
push
outsb
or
mov
mov
or
mov
pop
rorb
fdivrs
pop
rcrb
jns
decl
imul
jecxz
aam
xor
loopne
mov
xchg
xchg
and
pop
inc
xchg
jge
pushf
mov
jae
mov
clc
lods
xchg
mov
xchg
mov
inc
out
cmpsl
lods
mov
out
testb
stos
jae
jo
sbb
andl
push
mov
or
dec
push
test
mov
mov
rorb
andl
add
push
leave
in
repz
fstpt
mov
xchg
jno
mov
and
sbb
in
leave
jecxz
dec
jbe
lret
cmp
loope
dec
pop
jge
aas
mov
dec
js
lods
xchg
mov
lods
mov
mov
dec
push
dec
inc
mov
into
lret
fcmovb
sbb
mulb
dec
stos
loop
loopne
mov
pop
sbb
pop
ret
inc
xor
push
enter
or
imul
push
jb
cli
push
and
adc
data16
subb
jge
in
xchg
jp
cmc
pop
or
movsl
push
lret
hlt
fisttpl
push
xor
js
idivl
sbb
loop
xchg
mov
ja
or
in
pushf
adc
shr
mov
sbb
js
xchg
xchg
arpl
mov
pop
pop
inc
cld
stos
inc
lret
pop
xchg
out
shrb
std
pop
push
and
sbb
rolb
subb
arpl
xor
jecxz
or
fucom
inc
jge
mov
push
lds
mov
xor
outsl
scas
push
ret
pop
jg
icebp
jge
iret
jmp
push
js
imull
stc
pusha
pushl
popl
test
clc
pusha
bt
cmp
movb
mov
lea
ja
ror
sub
bsf
add
adc
mov
cmc
push
ror
rcl
mov
test
cmp
bt
pushl
repnz
pusha
pushf
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sub
js
cmp
sub
xchg
mov
push
and
subb
imul
data16
repnz
push
stos
stc
mov
cli
cmpsb
cmp
add
mov
cwtl
out
fstl
jne
ret
popa
adc
mov
push
mov
adc
fs
jb
loopne
cld
mov
mov
fs
adc
ss
nop
push
mov
js
negb
add
cwtl
shr
push
inc
inc
and
mov
push
add
inc
clc
decl
test
movsbw
mov
mov
push
lea
jmp
repz
stc
rcr
push
hlt
xor
fimull
push
sub
mov
xchg
enter
jg
rcr
mov
push
pop
mov
sub
add
cmc
aad
inc
mov
pushf
jmp
mov
mov
lds
push
add
adc
cmp
test
sub
addb
jp
nop
sarb
lods
pop
popa
popf
push
push
mov
or
mov
pop
imul
xchg
push
mov
jno
les
sub
ljmp
sbb
pushf
loopne
sbb
xor
add
pavgw
lret
iret
scas
pop
incb
dec
mov
push
cmp
fcoml
jo
xor
nop
or
into
sbb
fdivrs
lcall
or
add
js
pushf
mov
sete
pushl
setle
lods
pusha
xor
bt
add
bt
pushf
cmc
rol
cmc
cmc
mov
not
push
movb
push
cmp
mov
bswap
cwtl
pop
lea
lea
lea
mov
jmp
call
lea
call
pusha
lea
jne
call
cmp
icebp
int3
sarl
imul
xor
dec
mov
mov
pop
or
push
mov
ja
xlat
sub
scas
or
fs
and
insl
test
mov
je
xor
int
fnstenv
add
jne
fimull
mov
push
jb
xchg
cs
pusha
sbb
push
pop
outsl
and
std
mov
lods
out
out
outsl
aas
sub
sub
clc
fidivl
add
and
lret
fadds
sub
repnz
mov
jge
mov
inc
js
scas
xor
ja
mul
lds
ret
lock
lods
dec
sbb
inc
cmc
fs
push
cltd
shrl
mov
xchg
sbb
mov
adc
les
aam
test
int3
int
dec
outsb
shlb
inc
popf
add
or
add
xlat
js
lcall
sub
imul
dec
call
nop
mov
dec
hlt
ds
and
sbb
bound
imul
mov
in
pop
jo
test
pop
sbb
add
cld
shll
out
sahf
xlat
and
test
lea
sarb
push
pop
js
push
shll
ljmp
aam
cmp
inc
xorl
sbb
mov
jl
popl
pop
test
push
sbb
lods
sti
or
js
repz
insb
repz
cmc
bt
xor
stc
clc
pushf
jmp
add
ss
lds
popa
push
mov
lret
mov
xor
aas
fwait
or
jnp
mov
pop
or
adc
jg
add
mov
mov
movl
xor
outsl
ljmp
mov
gs
mov
flds
mov
je
insb
xchg
pop
cld
dec
cwtl
cli
jo
out
cmpb
or
pusha
adc
pop
jae
mov
mov
jae
mov
cmpl
sub
js
repnz
jle
pushl
pushl
xor
pushf
jmp
pushf
stc
cmp
mov
lea
je
call
jecxz
repnz
sub
scas
push
lea
mov
dec
insl
xor
jle
jno
cli
fldt
dec
jle
jne
or
pusha
jne
jb
movd
scas
ljmp
das
push
add
cmpsb
adc
mov
mov
inc
mov
lea
mov
dec
repz
repz
xchg
je
insl
mov
cld
std
push
xchg
sub
clc
jl
into
js
icebp
mov
or
cmpb
cmp
insl
filds
mov
pop
lea
repz
mov
pushf
ret
xor
cltd
add
lcall
cltd
repnz
and
bt
fwait
std
inc
sbb
or
push
mov
scas
mov
imul
les
lcall
add
das
push
pusha
test
lea
sbb
add
ja
aam
sub
sbb
bt
bts
xor
push
movzbw
push
dec
movsbw
cmp
push
cmp
xor
lea
push
lahf
not
lea
pusha
mov
mov
call
cmp
call
xor
or
es
jl
ds
dec
rolb
into
jns
pusha
mov
dec
adc
sub
cmp
repnz
jbe
movsb
out
sbbl
mov
xchg
gs
dec
sbb
in
inc
mov
test
adc
cmp
mov
push
lret
lock
and
push
lock
std
std
mov
inc
ret
jo
fldcw
and
pushf
mov
pop
and
xor
sti
iret
sbb
jge
mov
dec
sahf
and
aam
push
les
loope
and
xchg
test
sbb
fisubs
add
test
test
push
test
jg
mov
or
xchg
enter
xlat
dec
imul
gs
xor
cs
insb
add
dec
sbb
pop
push
je
iret
jne
ret
cmp
iret
out
xchg
in
mov
repnz
pop
inc
dec
push
int3
inc
push
mov
cmc
inc
adc
repz
ja
sbb
pop
cmpsl
dec
pop
fisttpll
add
outsb
scas
dec
or
cli
dec
sbb
cmp
sub
mov
cmp
fildll
test
fwait
jmp
js
in
test
xchg
pop
loop
push
inc
mov
outsl
fisttpl
inc
adc
push
sbb
lock
cltd
mov
cmp
lods
pop
sbb
cmp
inc
lock
cld
mov
clc
dec
movsl
dec
cmp
test
add
out
lcall
jle
xor
push
mov
rorb
pop
lods
call
pop
popf
sbb
sbb
mov
push
dec
xchg
sti
call
sub
or
out
sub
orl
pop
push
mov
cli
scas
mov
ret
cld
in
xchg
push
mov
cltd
jp
mov
sub
mov
hlt
pusha
cld
cld
loop
mov
imul
mov
inc
add
jg
or
pop
push
jnp
add
or
shll
mov
jns
jecxz
sbb
push
jbe
mov
and
dec
mov
mov
idiv
decl
test
add
seto
call
mov
pop
xor
pop
mov
pop
jle
fdivs
mov
popf
push
pop
mov
mov
mov
pop
mov
mov
fdivrs
pop
ficomps
sahf
xor
fdivs
fs
cli
sbbb
jbe
test
or
xchg
pop
out
inc
cmc
jno
int
fstps
imul
jo
xor
jmp
or
push
jmp
negl
xchg
lock
dec
lcall
xor
fisubrs
mov
jmp
cmp
push
sbb
icebp
loopne
jne
jecxz
inc
push
mov
add
xor
sub
aam
xchg
aad
cmp
sbb
mov
inc
lods
sbb
cmp
lock
xor
int
jno
icebp
dec
pop
sbb
add
movsl
xchg
xchg
outsb
je
push
cmp
cmc
mov
jecxz
fdiv
inc
cmp
mov
idivb
add
cwtl
inc
push
je
push
mov
sub
push
arpl
test
mov
add
mov
nop
cli
xchg
fisubl
lcall
or
add
add
push
dec
jl
jae
scas
xor
xchg
aad
xchg
mov
xor
adc
pop
fistpll
or
jbe
adc
mov
add
sti
push
push
cmp
out
loopne
adc
fcomp
pushf
sbb
jbe
stos
or
bound
in
push
pop
xlat
cmpb
adc
push
data16
lahf
cmp
push
push
push
fs
or
inc
or
in
cwtl
lods
clc
inc
in
int3
jae
ret
and
and
cmp
imul
out
mov
sbb
jle
das
stos
shlb
inc
movsl
stos
mov
inc
cmp
cltd
cmc
arpl
cmc
mov
popa
popf
push
jmp
cmp
mov
inc
fcomip
or
mov
mov
mov
push
test
aaa
cmc
push
mov
adc
mov
mov
mov
loope
xchg
sti
dec
sbb
test
lcall
xor
add
fs
ja
push
pushf
lea
je
pusha
mov
movb
lea
jmp
movl
mov
pushl
mov
pusha
lea
jmp
mov
test
jmp
xor
push
cld
or
xchg
sti
sub
jnp
and
mov
ds
mov
and
pop
mov
jo
dec
add
fdivrs
or
ja
ja
xor
xchg
mov
popa
popf
mov
jmp
push
in
adc
lea
call
jmp
pushf
pushl
popl
push
pushl
ret
call
movl
pushl
lea
jmp
fnstcw
adc
outsl
cld
or
in
movsb
mov
and
dec
inc
jns
jbe
lds
xchg
stos
decb
inc
dec
sbb
aaa
jbe
pop
clc
mov
inc
dec
and
push
sub
dec
add
mov
lock
mov
or
mov
inc
es
stos
js
jmp
loop
pushl
popl
pushl
push
pushf
pushl
pushl
ret
pushf
push
pusha
lea
je
setae
rol
sar
mov
btc
add
shr
add
neg
neg
mov
call
jno
pushf
mov
stos
pusha
lea
jmp
lea
je
jmp
gs
push
xchg
cmp
into
or
ljmp
mov
loopne
out
cld
imul
imul
into
test
pushf
xor
jb
jp
fwait
mov
inc
xchg
ret
push
pop
jp
or
pop
xchg
lods
cmp
jne
pop
push
ds
dec
int
inc
mov
jae
test
ds
mov
cmpsl
shll
int3
sbb
push
push
jge
inc
xchg
shl
out
fcomip
cmpsl
jno
jne
jno
ficomps
fxch
loope
popf
aad
xchg
aas
mov
loopne
inc
mov
imul
sub
fisubrs
mov
inc
test
js
jmp
cmp
fistpll
dec
xor
les
mov
jge
pop
mov
jnp
mov
daa
scas
sbb
adc
sahf
in
into
iret
popa
mov
mov
and
inc
ficompl
xlat
jg
xlat
dec
sbb
mov
pop
pop
lods
cmp
sub
test
ss
mov
xor
out
das
test
std
xor
jmp
cmpsl
fistl
cmp
iret
jge
mov
repz
jns,pt
sti
sahf
or
dec
and
jns
and
inc
pop
mov
cltd
mov
push
call
lret
nop
add
les
pop
mov
sub
dec
xchg
pop
pop
test
inc
xchg
cmp
popa
and
int
repz
js
jecxz
cltd
test
cmp
mov
sub
js
jmp
lock
fisubs
push
or
mov
test
jno
aaa
mov
or
push
sbb
xchg
sti
fcoms
xchg
adc
imul
inc
jmp
insl
test
adc
hlt
and
or
es
dec
xor
cwtl
pop
pop
divl
lods
push
mull
mov
push
xacquire
adc
sbb
fdivs
and
sub
add
mov
insl
mov
inc
push
subb
push
push
pushf
xor
lcall
xor
movl
pusha
jmp
movl
mov
pusha
pushl
lea
jmp
pusha
jmp
jb
ds
aaa
loope
stos
rol
sbb
pop
push
lds
xchg
test
int3
repz
sbb
add
loopne
insb
lock
xor
int3
pushf
pop
mov
and
or
movsb
mov
out
mov
std
push
outsl
pushf
push
lea
jmp
mov
shrd
add
mov
push
movb
cmp
pushf
lea
jbe
xor
or
mov
setp
rcl
bt
add
add
movzbw
btc
sub
mov
bswap
add
rol
shrd
movl
shr
rcl
bsr
bsf
mov
test
test
cmp
pushf
jmp
lea
je
call
cmc
cmc
call
addr16
repnz
pusha
call
enter
ja
loop
out
pop
pop
mov
mov
leave
mov
mov
addr16
jns
or
sub
sbb
out
mov
push
out
pop
jo
xchg
jo
nop
scas
js
out
out
fisttpl
fistpll
inc
inc
addr16
out
jo
mov
imul
mov
shll
cwtl
push
dec
testb
mov
dec
xor
mov
xor
jge
orl
mov
xchg
cld
adc
fistpll
inc
stos
outsb
mov
pop
ljmp
in
outsl
outsb
in
subb
movsl
inc
adc
js
xlat
xchg
push
jnp
aaa
aas
push
pop
xchg
js
out
jge
lea
jne
pushf
mov
call
jmp
pushf
or
jmp
push
push
lea
jmp
xor
mov
mov
xlat
scas
add
mov
adc
mov
fbstp
aam
inc
xor
mov
stos
inc
sub
mov
and
popa
jne
sub
les
mov
in
or
push
stos
cld
dec
testb
mov
sub
mov
pop
xor
add
jle
loope
test
js
in
pushf
daa
ja
aam
cs
push
clc
mov
stos
inc
cld
or
lret
and
xchg
adcl
inc
cwtl
daa
sbb
out
adc
int3
inc
sbb
sbb
jcxz
mov
mov
push
sbb
mov
jmp
and
sbb
and
jg
loopne
out
jp
push
repz
and
jbe
push
dec
nop
cmp
mov
mov
cmp
test
sbb
cli
jg
rcrb
xor
sbb
xchg
clc
mov
adc
faddp
js
in
gs
fs
jne
pushf
pushf
lea
call
pushf
movw
mov
movb
lea
jmp
adc
call
sub
bt
shrd
lea
add
stc
stc
sub
jmp
rcl
rcl
mov
push
cmp
call
lock
adc
cld
or
sti
subb
sahf
inc
jo
adc
movsb
mov
add
aad
pop
mov
dec
sbb
dec
dec
push
stos
aaa
jo
rcrl
inc
or
nop
pop
push
cmp
mov
fisttps
push
and
mov
inc
js
in
sub
jmp
cli
stos
mov
dec
test
negl
rcl
pop
cmpsl
jns
imul
out
dec
insb
sbb
dec
fsubrs
js
stos
push
sbb
jmp
mov
lds
std
or
add
mov
test
movsl
inc
cmp
dec
mov
xor
scas
dec
dec
test
inc
adc
in
imull
loope
lret
sub
push
push
sbb
inc
jle
inc
scas
enter
cmpsl
add
ds
inc
aad
and
sbb
pop
mov
or
fstl
cli
mov
lods
mov
add
jae
loopne
inc
lahf
or
rolb
loopne
js
notb
push
stos
or
imulb
mov
dec
inc
cmc
movb
sub
jno
stc
xor
clc
cmc
bt
ror
pusha
jmp
rcr
lea
mov
pushf
call
cmp
jmp
jg
jae
jno
push
adc
sti
mov
sub
pop
xchg
adc
mov
cmp
ds
xor
push
add
push
jmp
add
sbb
push
xchg
call
fdivrp
or
in
imul
cmp
xor
sahf
leave
fsubrs
pop
jnp
sbb
pop
pop
push
loope
nop
enter
aaa
mov
sub
daa
sti
add
fisubrs
or
sub
jecxz
xor
sbbl
aas
xchg
popa
loopne
push
sub
fwait
pushw
subb
rcl
aam
scas
je
test
mov
lds
mov
push
arpl
push
addb
mov
gs
loop
sbb
add
lds
fdivl
cmpsb
or
cmp
and
notb
push
xor
dec
lahf
in
ret
or
cli
sbb
cmp
cmpsb
or
or
arpl
adc
aaa
popa
pop
mov
inc
das
in
inc
xor
mov
addr16
outsl
popf
rcr
inc
push
jp
mov
aas
xchg
mov
adc
lea
icebp
and
sbb
jns
cli
mov
push
mov
mov
aad
add
adc
inc
or
inc
dec
push
push
sub
jns
lcall
add
insb
sub
rorb
pushl
ret
call
jmp
stc
or
pushf
lea
jne
clc
neg
rol
push
mov
stc
pusha
pusha
or
call
pushf
pushl
movl
pushl
push
pushl
movl
pusha
mov
mov
mov
lea
jmp
sar
bt
pusha
mov
bt
cmp
clc
bt
shl
pushl
movb
pusha
lea
je
call
push
int
cmp
or
inc
and
into
jle
sbb
inc
xchg
and
pop
pop
div
scas
into
pop
lea
scas
mov
aaa
jbe
daa
insb
xorl
in
fsubs
pop
pop
das
jle
sub
setg
adc
lahf
xlat
js
lcall
or
rep
call
cmp
call
cmp
test
sub
cmc
jmp
and
xchg
fwait
mov
xchg
add
pop
mov
daa
arpl
aaa
pop
cmp
mov
add
lea
aaa
jo
enter
dec
outsl
in
mov
idiv
or
pop
pop
fists
mov
jno
js
loopne
sbb
mov
rep
pushl
movzbl
mov
mov
movb
mov
lea
jmp
pusha
movsbw
mov
movzbw
bswap
not
not
mov
pushf
movb
pushf
movb
mov
bswap
pop
pusha
pusha
pushl
ret
push
cmp
movb
push
mov
jmp
call
pusha
inc
not
inc
cmc
and
cmc
xchg
adc
and
btr
add
mov
pusha
neg
mov
cmc
cmc
test
mov
bts
cmp
btc
mov
jmp
adc
js
repnz
scas
jno
mov
cltd
dec
popl
in
pop
lds
outsl
jns
test
stos
mov
shl
mov
sub
xchg
or
jmp
dec
repnz
push
cli
out
loop
js
fildll
call
pusha
mov
add
mov
shl
sbb
inc
pushl
mov
rol
sub
lea
call
mov
sbb
loop
lea
adcb
push
add
jo
cli
iret
xchg
shlb
mov
insb
mov
or
pusha
mov
adc
enter
mov
mov
movsl
in
cmpb
sbb
mov
push
push
bound
fisubs
pusha
call
pusha
stc
add
push
pusha
jmp
mov
pushl
pop
jmp
lahf
pusha
lea
lea
pushl
pushf
pushf
mov
movl
mov
pushf
jmp
movl
mov
pushf
call
movb
push
lea
jae
pushf
cmc
pushf
cmp
cmp
mov
lea
jae
cmc
pushf
cmp
jmp
pop
lcall
insb
dec
clc
in
loopne
pop
fidivs
movsb
les
fsubrl
loope
add
nop
lret
mov
shrb
out
mov
int
and
mov
cmp
dec
pop
aam
fildl
push
sbb
sub
nop
fimull
pop
ss
in
cld
jecxz
cmpsl
popa
jge
cmp
pop
je
add
into
lock
mov
cmp
xchg
imul
sbb
ljmp
andb
fs
in
add
out
loopne
sbb
in
and
cmp
push
movsl
cmp
test
xchg
cltd
clc
aad
aaa
jnp
fldt
push
cmc
pop
adc
leave
rclb
push
into
or
xor
mov
inc
pushf
int3
testb
cmp
cmp
addl
loope
inc
and
outsl
popa
mov
xchg
push
push
add
in
and
fstpl
or
mov
jmp
fs
shl
gs
xchg
mov
jg
or
jns
out
cli
imul
adc
insl
mov
sbb
inc
stos
fwait
inc
not
pop
cmp
inc
add
int
testb
inc
rol
mov
jle
xor
xchg
push
cltd
jo
outsb
push
imulb
fsubrs
sbb
les
out
call
add
orl
fs
xchg
and
cltd
shl
mov
pop
ret
sub
mov
js
fsubl
xor
pushf
movb
jmp
pushf
pushf
movl
pushf
mov
lea
jmp
lea
call
push
jmp
imul
dec
cmp
je
add
gs
aas
cltd
int
pop
mov
mov
jb
mov
cmpsb
mov
add
add
mov
fucomi
jae
je
call
mov
and
ss
int3
cs
inc
adc
nop
bound
pushf
popa
dec
push
fidivl
or
mov
pop
fmuls
add
lcall
pop
and
mov
movl
push
lea
call
push
jmp
xor
mov
adc
clc
and
pop
rcll
pop
filds
jmp
cmp
cld
inc
adc
or
pop
and
lret
dec
in
in
fs
les
in
pop
mov
xor
out
cmp
inc
xchg
jae
cmc
mov
mov
mov
cmp
cmpsb
pop
ja
out
lods
and
inc
cmp
jle
cmovg
imul
out
sub
inc
xor
aad
jg
push
out
js
fldt
icebp
cmp
addr16
pusha
mov
jmp
adc
adc
dec
jmp
mov
mov
insl
lods
cmp
in
mov
lcall
dec
mov
insb
jp
or
sub
inc
out
add
jb
mov
loope
mov
outsl
popa
cmpsb
sub
fmuls
mov
mov
lcall
mov
shlb
in
test
pushf
repnz
push
lea
jne
stc
adc
shld
mov
rcr
ror
sub
movzbw
mov
test
cmc
sub
test
stc
pushl
test
clc
cmp
pushf
lea
ja
xor
dec
sub
rcl
xor
add
stc
add
shld
add
bsf
mov
rcr
mov
cmp
clc
call
push
lods
sub
jmp
sub
push
in
push
insl
outsl
mov
pop
imul
xchg
inc
aad
mov
icebp
fdivp
test
xor
jle
pop
pushf
dec
dec
push
les
or
nop
push
xchg
loopne
sbb
cld
mov
insb
dec
sbb
push
dec
xchg
push
js
inc
or
pop
daa
mov
rorl
inc
add
sbbb
mov
aad
xor
sub
mov
pusha
loopne
mov
mov
push
or
ret
nop
scas
mov
movsl
or
push
jp
outsl
aaa
addr16
insb
cwtl
popf
sti
pop
mov
pop
in
dec
jns
lods
xor
dec
inc
call
cmp
mov
adc
mov
mov
ret
aaa
dec
and
aam
je
lahf
fbld
ds
push
repz
out
das
imul
inc
mov
inc
inc
xchg
cld
cmp
jmp
mov
pop
cmpsl
add
and
xchg
inc
mov
jno
daa
pop
dec
fwait
mov
loop
stos
fwait
daa
or
fistpll
jnp
repz
setnp
jge
push
mov
data16
cmpsl
push
mov
into
pop
hlt
cmp
mov
ds
add
sub
pop
jae
insl
mov
add
or
js
dec
sub
das
push
add
pusha
xor
mov
dec
out
push
push
out
adc
push
js
fcoms
data16
lods
mov
popa
stos
xchg
clc
addb
inc
sub
test
movsb
push
lcall
es
popa
pop
mov
sbb
mov
hlt
jns
dec
sub
sbb
dec
dec
je
arpl
adc
pop
sar
inc
or
roll
leave
loope
js
fmuls
push
push
jnp
scas
push
jecxz
fwait
mov
add
cmp
sub
lods
loop
push
mov
mov
es
add
jecxz
add
lret
xchg
sub
test
js
xlat
loope
xacquire
call
movl
jnp
pushf
pusha
mov
movl
pusha
mov
lea
jmp
xor
call
pushf
jmp
repnz
pusha
jmp
clc
jmp
pusha
movl
mov
pushf
pushf
movw
movl
pusha
pushf
movw
lea
jmp
pushf
pusha
bswap
mov
call
clc
mov
clc
jmp
push
mov
dec
cmp
pushl
cmp
jmp
push
movl
pusha
mov
jmp
movl
pushf
push
pushl
popl
movl
mov
pushf
pushl
ret
ljmp
sahf
sbb
add
mov
sahf
data16
pop
push
xchg
lcall
jno
mov
or
scas
lock
decb
xchg
lcall
insb
add
lods
outsl
cmp
leave
jo
mov
and
mov
pop
xor
lahf
in
call
hlt
mov
mov
fimull
or
stos
popl
mov
out
fs
cwtl
rcrb
pop
clc
loopne
lret
mov
cwtl
add
into
pop
push
and
jg
xchg
mov
sbb
mov
rorl
les
negb
inc
ds
inc
fdivr
mov
add
clc
mov
mov
insb
mov
cmpsl
sbb
mov
es
mov
or
or
mov
sub
mov
adc
jb
repnz
rcrb
push
cs
repnz
jp
pop
mov
mov
sub
out
push
xchg
loopne
cwtl
bound
adc
leave
xor
pop
xchg
mov
jbe
pop
push
pop
sub
test
aam
jne
jae
xorl
out
cmp
scas
pop
jecxz
jno
or
jmp
dec
test
push
mov
rol
pop
nop
sbb
push
popa
xchg
cltd
mov
sub
mov
insb
cmp
sub
shrl
jecxz
dec
lea
incl
add
xchg
sub
daa
test
lods
mov
jmp
lock
and
sbb
sbb
adc
fs
jbe
into
and
outsb
pop
arpl
fnstcw
sbb
xchg
into
dec
jmp
xchg
jnp
cmpl
push
jmp
inc
jge
call
lret
jns
jns
jbe
fildl
add
adcl
jmp
int
lods
xchg
sub
push
popf
addl
sbb
ja
outsl
jnp
imul
es
sub
mov
jo
cmpsb
data16
xchg
shl
cmpsb
ficoms
dec
push
in
sub
mov
sub
jae
int
sub
out
popa
mov
and
pop
rorl
or
mov
rolb
sbb
mov
mov
pop
xor
sub
lds
jne
add
sub
lods
add
xchg
pop
sahf
dec
cmp
jbe
jb
daa
popf
lock
and
imul
sbb
xor
enter
lds
mov
push
cmpsb
shll
dec
leave
mov
mov
jb
loope
out
jge
xchg
push
sbb
mov
push
jae
jge
orb
fiaddl
and
jg
aas
push
push
shrb
xchg
sub
mov
nop
iret
mov
sbb
fiadds
mov
in
adc
aam
dec
pop
arpl
repz
nop
bswap
jg
in
xchg
mov
xchg
xorb
xchg
jl
fld1
aaa
jg
out
and
and
fisubl
xlat
sti
jo
clc
or
popa
pop
jp
xor
or
je
gs
mov
mov
adc
jl
jo
sub
js
xchg
xor
aaa
pop
cmpsb
cs
push
push
movsb
pop
sub
mov
mov
sub
aas
pusha
aad
push
mov
scas
ret
mov
cwtl
cmp
mov
dec
lcall
fwait
in
and
bound
inc
push
iret
pop
imul
test
and
mov
lods
jecxz
mov
mov
dec
and
mov
ret
pop
dec
lret
sbb
push
xor
lods
fisttps
insl
xor
sbb
xbegin
mov
ja
loop
fimull
test
mov
int3
mov
shlb
mov
cwtl
xchg
jl
int
orl
stos
fs
ret
jb
mov
dec
xchg
fs
cmc
add
out
das
insb
add
add
xchg
jg
sub
sub
pop
mov
jge
dec
jnp
test
dec
popf
jne
cli
or
push
xchg
loope
in
xor
jmp
pop
ja
adc
std
fcoms
mov
or
jae
mov
fs
addb
repnz
sti
add
pop
sub
cltd
jno
jg
ljmp
add
jno
jns
adc
cs
or
inc
cmpsl
iret
add
mov
fcoml
push
sbb
mov
fcmovne
fidivrl
xchg
adc
jae
lahf
jae
pop
jecxz
pop
clc
mov
xor
adc
ss
fcmovnu
pop
int
add
ret
loope
shll
bound
out
sub
mov
into
cmp
jnp
clc
rcrl
lahf
mov
and
jge
push
xor
jg
movsb
pop
mov
push
cs
mov
movsb
shll
adc
cmp
es
adc
dec
cmp
mov
push
pop
mov
and
loopne
fisttpll
int
mov
sub
cwtl
sti
jbe
push
dec
mov
mov
movsb
fucomi
repnz
hlt
dec
and
push
jge
loopne
mov
push
scas
aam
jb
push
out
in
sub
inc
call
jns
pop
mov
add
popf
cmc
mov
pop
cmp
arpl
sbb
loope
out
aam
dec
pushl
test
fsubs
fistpl
enter
sbb
fwait
rorb
pop
fucom
movb
pop
push
add
out
test
jecxz
shrb
repnz
push
push
loope
pop
jg
jnp
xchg
push
jmp
pushf
xorl
fcomps
in
xchg
xorl
lahf
or
fistl
and
dec
add
vmovsd
inc
cmp
xor
loop
mov
dec
fsubp
dec
repnz
into
ret
stos
cs
jo
inc
nop
pushf
mulb
xlat
jae
mov
es
test
inc
pushf
sub
xor
movsb
je
cmp
mov
jle
ja
mov
pop
jge
sti
movsb
jle
pop
popa
outsb
mov
adc
jne,pn
cmp
pusha
xchg
inc
xor
std
inc
and
sub
dec
in
xchg
inc
xor
pop
mov
mov
test
mov
ds
fnstenv
std
nop
fcomps
loopne
shrb
mov
lea
xor
cmpsb
and
mov
bound
lock
dec
xchg
xor
fcmove
adc
iret
cmpb
mov
ret
in
add
xor
sbb
cwtl
jbe
xchg
inc
clc
jp
das
ljmp
dec
jmp
mov
movsb
fistpl
inc
mov
lods
iret
ret
popa
dec
movsl
jmp
sub
or
mov
add
mov
xor
mov
insl
pop
fldl
clc
mov
lret
insb
jae
or
je
movsb
xchg
test
dec
aas
ret
ret
cli
pushf
inc
test
mov
xchg
inc
xchg
ret
push
add
shll
ja
data16
cli
shrb
pop
push
mov
add
pop
mov
pop
xor
jle
mov
popf
push
pop
mov
mov
mov
pop
mov
mov
fdivrs
pop
ficomps
sahf
xor
fdivs
add
add
add
not
lahf
lea
pushf
movb
mov
movl
pushf
mov
pushl
popl
pusha
push
pushl
ret
movl
pushf
mov
jmp
movl
call
pop
dec
jno
adc
jne
adc
lahf
mov
sarl
aas
dec
dec
ret
fisubl
in
addb
subl
jecxz
adc
and
add
or
les
sbb
xchg
push
fstpt
cmp
nop
sub
dec
dec
pop
xor
mov
cmp
jmp
xor
xor
xchg
add
mov
xchg
in
lea
gs
add
into
jg
aad
rcrb
push
pushf
movl
pushf
lea
jmp
les
xchg
faddp
and
mov
jle
test
faddl
aam
in
in
jbe
or
sub
push
jns
out
mull
movb
adc
les
or
in
pop
in
ret
repnz
lret
scas
add
and
fcompl
mov
mov
sbb
sbbl
or
inc
lcall
call
cmc
push
orl
loopne
jbe
mov
mov
pop
push
test
js
int
sub
jae
popa
addr16
outsl
js
add
pushf
sub
sub
jne
pusha
cmp
or
jmp
ror
bt
clc
pushf
cmc
sub
pushf
bt
xor
clc
clc
cmp
add
jbe
mov
clc
cmp
add
push
pushf
stc
test
pusha
mov
lea
jne
pushf
mov
jmp
pushf
pushf
lea
call
pushf
call
pop
inc
dec
mov
je
outsb
sub
inc
icebp
add
mov
roll
insl
dec
cmp
mov
pusha
or
and
mov
test
xor
fcomps
lahf
in
shll
adc
outsl
mov
cmp
in
pop
clc
lods
xchg
mov
or
add
sub
add
xorl
pusha
test
ljmp
mov
cmp
adc
mov
dec
mov
adc
sbb
sbb
cli
dec
imul
popa
outsl
test
mov
push
mov
cmpsb
push
xor
xor
sub
shlb
int3
sti
popf
and
pop
lret
xor
adc
orl
in
dec
stos
scas
ficompl
ret
loope
mov
xorl
jecxz
push
or
in
lds
idivb
jbe
fcomps
push
push
push
pop
sub
loop
outsl
and
pop
ffreep
cmp
aam
repz
shlb
adc
add
ja
or
insl
stos
add
add
or
les
sub
stos
jp
xchg
sbb
mov
in
pop
mov
sbb
jg
lcall
daa
mov
fistpll
push
dec
cmpsb
fisubrl
push
shl
mov
or
shr
out
fs
jg
out
stos
aad
add
jg
pop
jg
mov
or
lret
adc
fsubr
ficompl
rclb
push
and
pushl
movw
setge
movzbl
mov
not
not
mov
lea
mov
jmp
movb
lea
ja
cmc
pushf
imul
cmc
pusha
add
pushf
mov
pushf
pushf
lea
jmp
xchg
push
jecxz
jb
or
or
inc
int
cmc
dec
add
dec
jns
and
adc
leave
pop
mov
mov
ja
mov
or
jo
lcall
push
lahf
dec
insb
arpl
jo
adc
or
pop
mov
mov
aas
cmp
push
mov
xor
xchg
dec
xchg
fistpll
shlb
gs
cmp
pop
pop
sbb
inc
and
pop
in
loope
pop
cmp
cltd
in
pusha
mov
int3
push
fadds
mov
and
lret
jmp
cmp
mov
aas
mov
xor
or
xorl
loop
cmp
pop
mov
or
mov
loope
sub
lcall
jo
push
fbld
sub
and
pop
sub
or
adc
jmp
out
add
rep
rcrl
into
rclb
mov
mov
xor
fimull
std
loope
popa
add
iret
adc
dec
loopne
adc
adc
pop
dec
clc
or
jmp
add
and
xchg
ljmp
aas
or
dec
xchg
add
and
mov
mov
sti
sbb
push
mov
cld
push
cwtl
ds
push
scas
imul
sub
daa
cmpsb
bound
xchg
or
add
lea
data16
ret
cmp
stos
pop
cli
scas
repnz
or
inc
std
lods
cld
inc
jmp
stc
mov
jo
sbb
lea
imull
adc
test
mov
xlat
outsl
scas
pushf
adc
jo
and
push
xchg
andl
dec
add
sub
mov
inc
repnz
mulb
cmc
push
mov
cli
and
bound
sub
adc
pop
push
xor
lcall
inc
push
xor
mov
jl
sub
or
ds
or
adc
mov
test
shll
dec
dec
sbb
or
dec
test
xor
cmp
mov
mov
xor
sub
aad
mov
shr
inc
std
sbb
jmp
repnz
lret
pop
mov
mov
addb
rcll
inc
movsb
mov
les
mov
fwait
data16
push
loop
ss
test
test
cld
dec
or
shll
in
fcompl
xchg
imul
pop
rcll
jmp
push
js
enter
push
push
mov
lea
jmp
pushl
mov
movzwl
pop
movsbw
lea
jmp
movw
cmc
repnz
push
pushf
jmp
mov
xor
push
cs
add
loopne
fwait
imul
sti
popa
ret
pop
imul
xlat
mov
push
aas
push
sub
lds
fs
xor
xchg
in
cltd
arpl
repnz
push
jae
pop
js
notb
inc
outsb
sbb
lcall
lcall
jp
inc
or
fadds
xchg
push
sbb
mov
cmp
je
xchg
loopne
jp
je
xor
jecxz
loope
mov
arpl
in
and
sbb
push
les
imul
push
fdivl
test
inc
xchg
push
cmova
jo
imul
sub
aaa
sub
outsl
mov
gs
sbb
xor
ja
cmpsb
cmp
xor
stos
mov
js
out
xchg
rcrb
lock
into
es
dec
pop
sub
vmread
pushl
mov
jmp
lea
jbe
sar
sub
mov
sar
shl
bts
mov
movzbw
shld
xchg
ror
mov
lea
inc
cmp
test
add
shl
cmc
shr
neg
mov
bswap
add
movsbw
call
lea
je
bswap
setle
jmp
test
sub
jp
shr
clc
jmp
call
fldcw
inc
rolb
and
jo
xchg
push
or
pop
dec
fldcw
pop
push
cwtl
ret
jb
and
cmp
push
mov
scas
and
lret
add
ljmp
push
sub
sahf
mov
ficoms
roll
loopne
incb
xchg
out
sub
dec
mov
xchg
adc
test
sbb
shll
xchg
addr16
sti
int3
inc
js
mov
xchg
pop
and
mov
mov
cmp
jns
pop
jo
and
jp
ja
in
jns
outsb
repz
ljmp
call
out
sbb
mov
icebp
stc
push
lret
pop
lods
or
pop
outsb
mov
stos
xchg
inc
jg
and
clc
mov
lds
or
test
enter
mov
pop
fs
pushf
ret
mov
pop
loop
scas
fildll
gs
movsb
fidivrs
add
push
push
dec
das
fwait
lcall
push
jge
jns
sbb
pop
dec
hlt
faddl
into
pop
sbb
adc
add
cli
fidivrl
adc
addr16
add
mov
lcall
add
xor
add
cmp
add
jns
push
and
xor
sub
push
pop
dec
loop
and
mov
push
pop
sub
pop
lods
sub
ds
pop
mov
sub
icebp
jnp
and
pop
mov
daa
lcall
inc
aad
pop
andl
jno
data16
xor
cmp
cltd
cmp
out
inc
pop
daa
sbb
mov
push
test
mov
aas
shlb
push
add
mov
jne
scas
cltd
daa
push
enter
jl
lea
test
fwait
jmp
std
imul
push
shlb
shll
ficoml
mov
enter
leave
and
pop
dec
jle
xchg
add
repz
pop
ret
sub
and
test
xchg
rorb
decl
rorl
stc
hlt
std
call
sub
add
sar
mov
bsr
add
shl
xor
sub
xor
rol
push
shl
cwtl
and
cwtl
push
das
cmp
bswap
push
clc
xor
push
cwtl
btc
rcr
jmp
pusha
lea
jne
cmc
mov
pusha
or
pusha
jmp
cmp
xlat
jno
test
rcr
xchg
je
cld
sbb
or
call
iret
rcll
adc
sbb
pusha
imul
push
dec
ficomps
jnp
call
out
jecxz
adc
mov
sahf
jg
out
loope
cmpsb
sarb
shlb
das
int
inc
lcall
movl
pusha
jmp
test
or
jo
push
movl
lea
je
mov
mov
call
jmp
mov
inc
cld
or
cwtl
cmp
int3
pop
stos
mov
sbb
lcall
pop
movsl
out
xor
lea
pop
pop
xchg
inc
aaa
jbe
in
adc
push
stos
mov
jns
adc
lea
adc
xchg
dec
js
ret
aam
cmc
pushf
movb
or
pushf
jmp
push
mov
pusha
mov
pushf
push
push
pushl
ret
movl
push
push
call
xor
sub
pop
xchg
push
pop
mov
xchg
pop
mov
jns
jno
or
lea
aam
cltd
hlt
aaa
jbe
xor
jnp
imul
lds
scas
add
aaa
mov
test
xchg
out
js
ret
stos
call
add
inc
js
je
jb
arpl
jae
rorb
cld
or
push
movsb
ds
jbe
lock
sub
pop
mov
xorl
sub
outsb
sti
push
aaa
jo
dec
push
int
insb
jo
fwait
xchg
repz
lods
push
sbb
mov
mov
lcall
pop
xchg
repnz
mov
mov
movsb
inc
pop
insb
std
cmc
fs
adc
pop
xchg
or
cmpl
aaa
sub
adc
imul
out
jb
pop
and
pop
cmp
mov
xchg
imul
dec
js
mov
std
mov
mov
cmpsl
movsb
mov
or
lods
rcrl
pusha
push
cmpsl
outsl
frstor
xchg
ret
arpl
aas
push
xchg
rolb
lcall
ljmp
inc
jg
aas
movsb
push
adc
cli
dec
mov
mov
ss
push
into
fsubrs
lret
inc
jns
dec
xchg
fidivs
xor
xchg
dec
push
push
mov
bound
aaa
jbe
cwtl
rcrl
sub
push
jp
icebp
call
loopne
dec
lcall
js
rclb
and
call
jmp
jmp
mov
mov
nop
cld
or
sbb
std
inc
repz
sbb
mov
jns
and
mov
jp
pop
mov
adc
outsb
aaa
jo
test
in
insl
ljmp
and
das
arpl
inc
mov
mov
sub
lcall
adc
fisttpll
pop
and
mov
jmp
fldcw
push
ret
sub
inc
push
or
push
adc
jbe
cli
mov
and
mov
pop
xchg
ja
mov
jnp
cmc
sub
inc
mov
outsb
dec
pop
inc
int
ficoml
pushf
mov
dec
js
mov
mov
fisubs
ret
jno
outsb
frstor
gs
and
addb
push
mov
rorl
inc
outsb
cmp
cwtl
outsb
sbb
xchg
dec
add
les
stos
adc
outsl
inc
and
inc
push
push
sbb
fcoml
and
or
cmp
sbb
xor
xchg
add
mov
pop
bound
sbb
imul
int
push
add
sbb
xor
mov
sbb
mov
es
outsl
repz
mov
jl
fs
into
pop
xor
lcall
add
xchg
lea
jb
clc
cmp
push
mov
jmp
cmpsl
dec
test
add
inc
loope
vmovsd
adc
jecxz
fwait
cltd
cltd
dec
cmc
push
adc
adcl
dec
hlt
lds
and
mov
addl
cmp
xchg
pop
pop
hlt
pushf
xor
mov
cmp
clc
cmp
call
aam
mov
das
or
push
shrd
push
sub
rcl
mov
test
cmp
clc
cmc
test
jmp
pusha
pushf
mov
adc
push
pushf
lea
jae
push
lea
jae
pusha
pushf
pushf
jmp
divl
inc
fdivrp
or
or
dec
inc
xchg
test
call
mov
mov
lods
pop
in
addb
aaa
jbe
add
xchg
fucomi
rorl
push
and
mov
je
ret
ret
xor
inc
js
mov
xchg
jo
inc
lods
rcr
sub
pop
lsl
push
leave
dec
std
pop
in
jae
cwtl
test
cmp
jg
addb
shr
ficomps
inc
mov
jle
test
les
fiadds
and
fcompl
mov
sahf
pusha
pusha
in
mov
sbb
push
divl
add
or
aam
push
outsb
pop
or
ljmp
rorl
mov
add
fadds
movsb
xchg
inc
pop
and
add
push
scas
cmp
dec
mov
lahf
scas
xchg
xchg
aam
ret
bound
lret
out
push
aad
pop
add
push
lahf
ss
cmp
inc
pusha
jmp
rcr
xchg
adc
sub
pop
lea
push
mov
xor
lea
stos
add
sbb
cmp
push
or
mov
rolb
sbb
adc
push
loope
inc
or
sahf
popf
inc
inc
xor
aad
roll
lahf
jmp
add
sub
add
jle
pop
pop
sahf
cmp
dec
inc
add
pop
daa
pop
xor
sub
imul
in
insb
pop
loop
ret
dec
mov
jle
or
dec
cmp
sub
pop
xor
xor
xchg
ror
lret
sbb
cmp
inc
pop
mov
cmp
add
daa
inc
and
dec
add
push
jae
sbb
or
pop
add
dec
and
cmovae
jge
das
js
dec
pop
sbb
xchg
mov
or
fisttpl
cmp
sub
or
mov
insl
ljmp
xor
inc
add
dec
sub
test
lahf
adc
cmp
mov
cmp
inc
daa
arpl
and
push
nopl
call
ds
int
popf
lds
cmp
or
cmp
mov
xor
add
daa
and
jne
sbb
dec
movsb
int
inc
or
fnstcw
mov
adc
or
out
inc
sub
and
testl
aaa
inc
sub
imul
or
adc
cmp
add
jbe
and
lahf
pop
mov
jl
add
inc
pop
aaa
inc
pop
mov
xor
xor
or
add
inc
mov
pop
add
ljmp
xor
push
or
inc
adc
cmc
sub
in
fldl
pop
inc
xor
add
jnp
cmp
mov
mov
push
fwait
pop
cmp
adc
dec
and
and
push
addr16
mov
test
sub
imul
lret
addr16
iret
lea
add
sbb
sbb
addr16
pop
imul
pop
sub
and
sub
test
adc
add
or
adc
jge
or
add
sbb
push
sarl
sbb
adc
leave
sbb
fidivrs
into
xor
pusha
sub
dec
adc
sbb
js
fmul
sub
mov
sbb
aaa
mov
inc
aam
dec
das
into
inc
pop
cmp
xchg
inc
sbb
lock
mov
xchg
sbb
sbb
pop
add
leave
dec
aas
inc
sub
xchg
and
adc
and
dec
adc
xchg
or
sbb
push
lahf
pop
out
daa
push
inc
pop
sbb
sub
stos
mov
add
dec
sbb
inc
inc
xor
int
push
jnp
adc
insb
push
lcall
das
test
add
dec
add
ret
add
inc
adc
dec
ja
into
inc
add
pop
shr
cmp
xchg
add
addb
jno
add
cmp
dec
inc
pop
push
mov
pop
lahf
insl
and
mov
shrb
inc
push
xor
insl
aad
pop
or
dec
orl
jno
sbb
rcll
addr16
decb
pop
pop
inc
adc
mov
sbb
and
cmp
and
inc
out
push
lock
dec
xor
and
or
sub
pop
adc
sub
icebp
dec
mov
call
xor
lahf
sub
sbb
dec
sbb
add
mov
inc
add
pop
lret
pop
or
or
cmp
stos
mov
lret
xor
xchg
pop
sbb
dec
adc
mov
test
aad
or
cmp
pop
cmp
cs
insl
push
pop
lock
add
xor
add
adc
xor
shll
shrl
test
or
loope
je
or
fisttpll
push
mov
and
mov
push
addr16
or
imul
add
int
stos
xor
xor
xor
lea
jp
adc
ds
cmp
dec
pop
test
adc
and
push
jg
and
adc
sbb
jle
popf
push
add
inc
mov
sbbb
add
add
jne
and
movb
xchg
sub
push
sub
dec
sub
add
sbb
push
imul
cmp
mov
lea
ror
add
ja
js
mov
sub
sbb
into
pop
std
or
inc
inc
mov
fiadds
int
pop
int
popf
or
adc
xorb
or
and
or
enter
sub
add
and
pop
sub
insl
mov
popf
mov
cmp
jp
push
outsl
cmc
push
daa
dec
xchg
add
daa
pop
cmp
sbbl
int
xchg
ret
inc
cmp
add
nopl
call
inc
sub
bound
dec
xor
sbb
pop
and
lahf
xchg
pop
adc
xor
mov
fldcw
xchg
pop
or
sub
out
cmp
sub
mov
add
lea
adc
imul
lret
sysexit
into
dec
add
pop
xchg
adc
xchg
push
adc
dec
rcrb
mov
inc
in
push
ljmp
roll
es
in
xor
xor
sub
pop
es
dec
add
push
xlat
dec
inc
or
adc
mov
aaa
inc
add
test
adc
pop
cmpsl
dec
and
arpl
push
add
stc
add
addl
pop
sub
mov
push
inc
push
xchg
in
adc
pop
adc
or
rorl
ss
push
repnz
mov
aas
hlt
add
mov
sbb
or
in
pop
xor
mov
xchg
sbb
mov
das
test
mov
ss
push
and
mov
and
hlt
sbb
fnsave
gs
or
mov
dec
or
jnp
add
daa
or
pop
pop
sbb
or
es
or
add
xchg
cmc
lds
imul
mov
push
xchg
sbb
xor
shrb
xor
xor
bound
pop
or
xor
sbb
lret
sub
or
xchg
lds
imul
inc
sub
add
aaa
sbb
or
lods
rolb
dec
xor
daa
sub
add
paddb
lods
jo
setb
test
sbb
push
or
mov
xchg
adc
in
inc
int
jns
cltd
xor
sub
sbb
or
inc
add
test
or
add
inc
pop
mov
push
or
sbb
or
and
cmp
insl
sub
sub
dec
xchg
xchg
cmp
adc
cmp
xor
push
adcb
cmp
rorb
mov
and
push
addl
aaa
add
sbb
aaa
pop
pushf
pop
int
add
inc
out
inc
testl
xor
push
mov
or
mov
std
jp
test
in
push
daa
ss
inc
cmp
popf
ss
xchg
lods
ror
adc
sub
xchg
test
dec
rol
aam
push
repnz
ret
push
ljmp
cmp
scas
inc
xchg
clc
dec
rcll
pop
add
pop
or
stos
inc
or
adc
dec
jle
es
fiaddl
adc
pushf
sbbl
sub
lcall
ror
push
sbb
jp
and
sbb
pop
cmpsl
and
push
div
sub
and
adc
sbb
lret
xor
inc
adc
jno
daa
es
inc
out
dec
mov
sbb
and
adc
and
add
push
or
adc
pop
insl
stos
and
inc
pop
ds
lret
and
inc
and
sbb
xor
and
movsb
jmp
inc
aaa
pop
sub
ds
add
ss
jb
aaa
lcall
adc
imul
adc
pop
mov
add
push
sbb
stos
xor
stos
xor
adc
out
cld
dec
push
test
das
xor
ss
add
add
sbb
inc
adc
arpl
pop
cmp
stc
int
pop
arpl
lea
scas
dec
imul
sbb
test
push
lret
inc
int
inc
adc
pop
xchg
mov
and
jno
les
or
mov
sub
mov
pop
sbb
lea
inc
int3
push
int
push
xchg
sub
std
push
sub
stos
pop
aas
inc
add
jmp
lret
cmp
fsubs
adc
ja
add
pop
xor
mov
xor
xor
mov
jmp
bound
cmp
or
mov
jne
mov
push
arpl
inc
gs
daa
xchg
test
sti
sbb
pop
insl
scas
xor
xor
jp
adc
xlat
sbb
adc
push
mov
sbb
and
push
aas
dec
fs
test
sub
sbb
mov
xchg
xor
lock
lret
sbb
in
push
adc
stc
sbb
push
imul
pop
sub
dec
xor
and
pop
push
insl
push
fs
movsl
add
adc
cmp
notl
dec
push
sbb
roll
out
or
mov
in
push
mov
push
xlat
call
sub
xchg
lcall
imul
adc
sub
pop
or
pop
lret
lret
jnp
repnz
mov
stos
and
inc
adc
aas
addr16
in
sbb
and
add
movsl
or
sbb
pop
jg
push
jo
dec
xor
sub
in
gs
in
shrb
xchg
sbb
xor
or
int
jmp
inc
punpckhwd
push
mov
add
dec
sub
sub
add
add
xchg
inc
cmp
or
jmp
rcrl
sub
stc
add
adc
add
dec
add
addr16
or
imul
jns
rorb
and
fisttpll
inc
or
and
shr
add
xor
mov
add
sub
lahf
arpl
adc
lods
ds
adc
sub
push
ja
sbb
sub
inc
xchg
ja,pn
xchg
ljmp
sbbl
adc
orl
xor
inc
adc
arpl
inc
sub
inc
cmp
xchg
jbe
jg
push
arpl
imul
add
imul
push
push
sub
addr16
sbb
push
sbb
sub
inc
sbb
aaa
arpl
insl
cmp
dec
pop
mov
pop
inc
add
adc
aaa
pop
push
arpl
inc
and
aaa
pop
push
and
lret
js
inc
push
add
inc
sub
and
cmp
cmp
and
cmpsl
xor
adc
inc
or
imul
andl
test
arpl
inc
das
push
cmp
add
inc
inc
and
sbb
xor
movsl
inc
aas
xor
push
mov
cmp
dec
inc
inc
xlat
jge
outsb
daa
pop
lret
cmp
xchg
cmp
sub
pop
cwtl
sbb
sub
movb
or
fisubs
push
xor
or
or
or
dec
mov
fst
mov
lret
cmc
or
fnstsw
and
inc
pop
push
addr16
or
imul
xchg
vmwrite
cmpsl
jnp
add
jge
emms
in
and
sbb
or
in
js
mov
cmp
out
movsl
add
inc
out
pop
xor
fsubs
sub
add
fists
es
dec
or
pop
xor
mov
lods
inc
mov
adc
and
pop
aas
pop
sbb
and
imul
inc
loopne
pop
cli
xor
mov
dec
inc
int3
and
or
sbb
stos
or
out
add
aas
mov
mov
jge
add
add
sub
jbe
mov
lods
insb
ds
pop
or
bound
or
or
lret
sahf
xchg
lcall
sbb
and
xchg
imul
insb
fldl
orb
and
lods
pop
cmp
or
out
scas
rorb
mov
sub
mov
lea
rorb
jmp
jae
push
dec
scas
lea
add
and
test
adc
popf
pop
or
or
orb
add
pop
inc
dec
lahf
inc
ljmp
fisttpll
sub
add
sbb
popf
or
xor
cld
mov
sbb
jb
adc
sub
push
xor
sub
or
add
and
or
test
sbbl
int
pop
add
pop
repnz
push
xchg
xor
or
lock
pop
cmp
fmull
std
pop
add
and
pop
mov
xor
adc
out
adcl
adc
jae
inc
es
das
aaa
xor
rorl
sub
out
shrl
or
roll
out
test
push
inc
sbb
and
inc
loope
or
orl
pop
roll
rcll
cmp
inc
sub
test
adc
xor
xor
lret
xlat
xchg
repz
je
and
cmp
je
or
add
cmp
adc
sub
mov
pop
test
adc
mov
sbb
pop
lret
rcrb
mov
sbb
pop
push
imul
cmp
cmp
test
push
ss
adc
or
add
sbb
add
push
pop
adc
adc
aas
and
xor
or
aas
xlat
sbb
cmp
aaa
inc
adc
or
pop
jnp
cmp
push
inc
sub
pop
aas
push
pop
cmp
sub
insl
sbb
fstl
xchg
cmc
add
xor
xor
andb
sbb
mov
pop
mov
jmp
sbb
add
jmp
and
jp
mov
or
out
dec
or
pop
bound
insb
in
and
ret
leave
push
cmp
sbb
sbb
add
add
addb
mov
sub
rorl
xor
punpckhwd
xor
std
nop
lret
add
cmc
sbb
sbb
jne
adc
mov
xchg
mov
mov
stc
pop
out
cmp
inc
adc
cmp
jp
or
xor
pusha
add
jns
push
pushf
pop
int
add
adc
jb
xchg
pop
add
xor
sbb
and
pop
out
pop
sub
pusha
addr16
adc
pop
dec
int3
or
xchg
add
inc
in
inc
std
adc
or
lret
push
gs
fimuls
adc
mov
push
les
pop
and
test
cmp
rcrb
stc
in
sub
jne
add
lods
dec
push
popf
xor
push
jns
dec
sbb
lea
test
mov
xchg
sbb
xchg
pop
inc
xor
int
inc
add
inc
push
pop
sub
adc
and
xor
add
jae
inc
and
and
cmp
cmp
or
mov
rcll
and
xor
or
mov
sbb
adc
test
out
sub
cmp
and
push
je
dec
xor
jo
add
sub
daa
sarl
cmp
sub
dec
or
mov
push
pop
and
xor
add
js
lret
aaa
dec
add
dec
pop
xor
sbb
and
and
cmp
syscall
cmp
adc
xor
xchg
push
push
sub
int
cmp
lea
cmp
pop
mov
inc
jne
xchg
jns
cmp
es
addr16
leave
mov
inc
push
mov
pop
arpl
jne
and
js
or
aaa
jne
sti
mov
pop
xor
sbb
jne
mov
or
sti
jne
jns
or
aaa
cmc
cmp
sbb
fnsave
in
jne
jno
or
ja
xor
mov
push
cld
jne
clc
mov
cmp
mov
sub
jne
cmp
decb
repnz
fnsave
es
sbb
mov
rorb
adc
dec
add
and
daa
sub
insl
jmp
xchg
movsb
int
xchg
fwait
inc
cmp
lahf
lods
sub
adc
ja
por
push
push
adc
insl
sub
dec
cmp
pop
dec
or
stos
xor
sbb
push
xchg
mov
inc
mov
shr
addr16
lahf
jl
fwait
push
add
jl
inc
pop
xor
addb
clc
fildl
add
cmp
enter
pop
cmp
cmp
sub
jno
arpl
imul
mov
xor
cmpsb
adc
js
and
push
jg
addr16
bsr
pop
jae
out
push
stos
sub
arpl
jg
imul
push
cmpsb
pop
mov
inc
sub
inc
cmp
cmp
cmp
cmp
inc
lret
xor
xchg
xor
pop
loope
or
pop
mov
mov
sub
sbb
stos
pop
inc
add
sub
and
push
lret
push
lret
jecxz
adc
and
es
cmp
or
addr16
sub
sub
inc
jb
aas
pop
cmc
push
fwait
sbb
cmp
adc
inc
pop
jge
sbb
push
dec
add
cmp
pushf
mov
ds
or
movsb
add
cmp
or
stc
ss
jge
dec
xor
adc
leave
xchg
and
or
inc
cmp
adc
cmp
sbb
add
and
mov
cmp
fisubl
cmp
daa
stc
sarl
clc
push
lods
mov
xor
or
xchg
jbe
sbb
lcall
mov
add
or
addr16
or
imul
gs
sbb
xchg
xchg
sbb
lea
bound
inc
push
adc
or
pop
into
int
inc
in
test
fsubl
xor
call
push
pop
dec
cmp
repnz
or
out
xchg
andl
push
loope
ficompl
es
add
push
adc
loope
lcall
sbb
out
cmp
mov
cmp
out
cmp
xor
pop
stc
ds
in
and
sub
sub
add
jo
inc
mulb
add
mov
mov
das
add
adc
cmp
inc
push
push
lock
fisubrl
adc
ds
jne
mov
arpl
mov
cmpsb
or
sbb
xor
xchg
cmp
and
scas
sarl
or
and
xor
stc
inc
lret
xchg
push
in
pop
xor
dec
sub
dec
pop
jle
adc
dec
sub
or
xchg
inc
ret
int3
pop
aas
movsl
sub
mov
addb
jl
fmuls
aam
pop
insb
push
pop
inc
inc
sub
out
adc
fildl
add
push
pop
cmp
sbb
or
xor
add
lahf
out
cmp
sti
add
push
addr16
pop
mov
cmp
enter
sub
popf
xor
jle
sub
pop
pusha
pop
xor
fstps
out
fldl
cmp
int3
and
movsl
pop
push
je
pop
pop
jbe
jns
rclb
pop
inc
dec
pop
adc
push
dec
or
aaa
pop
push
pop
push
or
jle
pop
inc
or
fstl
push
rorb
pop
or
rorb
push
or
ffree
outsb
push
rorb
frstor
cs
fdiv
sbb
inc
xchg
add
insl
adc
sub
cmp
add
dec
imul
mov
and
je
push
adc
cmpl
mov
push
cmp
test
add
das
mov
push
addr16
inc
sbb
insb
pop
dec
mov
pusha
scas
and
and
shrb
xchg
and
sbb
rolb
aaa
gs
inc
out
mov
push
xchg
xor
stos
sub
and
pop
sub
push
stos
inc
imul
daa
dec
or
outsl
nopl
sbb
xor
cmp
lret
or
hlt
test
adc
pop
addr16
into
punpckhwd
sub
adc
pop
daa
imul
xor
mov
sbb
pop
xor
or
dec
sbb
addr16
pop
sub
test
adc
aaa
addr16
sbb
adc
jno
push
imul
sbb
adc
out
imul
and
sbb
cmp
test
add
pop
addr16
push
and
pushf
mov
test
sbb
scas
sub
sub
ss
daa
arpl
cs
and
test
adc
packuswb
dec
pop
icebp
mov
add
sbb
test
adc
sub
and
test
mov
sub
mov
lods
jae
or
pop
insl
int3
and
in
lods
xchg
mov
inc
addl
add
mov
inc
out
mov
sbb
pop
ss
sub
fidivs
pop
cmp
sub
xor
inc
and
add
jne
xor
sti
inc
popa
jb
push
das
dec
daa
dec
dec
adc
or
or
out
mov
addr16
aaa
dec
shrl
repnz
pop
add
sbb
pop
mov
push
and
or
and
sbb
ffree
and
mov
or
or
dec
popf
add
cmc
sub
or
fnsave
jp
inc
or
add
mov
push
repnz
or
daa
and
adc
mov
imul
ds
jne
and
sub
ret
sbb
fcmove
xchg
stos
lret
ja
and
ret
ss
cmp
pop
xor
mov
and
xchg
xor
add
mov
cmp
or
jo
es
add
pop
add
mov
les
popa
aas
or
jb
xor
notl
pop
xor
add
addr16
leave
add
push
add
fdiv
inc
sub
dec
fildll
sub
jnp
addb
add
pop
add
cmp
mov
sbb
lret
fcmovbe
lret
cmp
sbb
adc
add
add
daa
xor
andl
push
or
lds
std
fisubrl
adc
pop
adc
sbbb
dec
movsl
xor
jp
daa
sbb
and
orb
daa
sbb
movsl
xchg
xor
sbb
lea
push
xlat
pop
int
jmp
inc
in
inc
in
mov
leave
adc
sub
les
sub
dec
adc
pop
jp
std
push
xlat
lret
sbb
in
out
pop
call
cmpsl
sub
push
mov
adc
adc
fsubl
mov
aaa
add
pop
add
pusha
lea
rolb
sbb
sbb
dec
or
add
push
mov
xor
adc
ret
xchg
sbb
mov
push
add
pop
scas
aaa
add
cmp
sbb
cmpsl
mov
arpl
jae
sub
cmp
xchg
and
sub
mov
add
inc
sub
inc
pop
dec
add
test
and
pop
fiaddl
adc
pop
or
pop
pop
jb
xchg
dec
pop
add
inc
add
es
sub
mov
pushf
xor
pop
adc
fildl
test
pop
dec
pop
push
cmc
adc
pop
xor
pop
aaa
sbb
mov
sub
cmp
xor
cmp
sub
sub
mov
loopne
jno
faddl
adc
dec
sub
fsubrl
sbb
aaa
and
add
xor
mov
out
inc
notl
clc
icebp
daa
ret
ret
mov
sbb
pop
fidivrs
pop
add
sub
lret
cmp
adc
in
ss
fadds
or
sbb
push
adc
push
adc
cmp
dec
jle
loopne
push
sbb
sub
mov
add
cwtl
pop
cmp
fwait
or
or
and
scas
ficomps
rorb
inc
push
xlat
pop
xchg
push
dec
mov
xchg
stos
shrb
inc
sbb
adc
dec
inc
mov
jns
push
lret
adc
aaa
sbb
cmc
in
dec
cs
popf
int
pop
test
cmp
push
sbb
aas
inc
es
enter
lret
stc
xor
test
mov
lock
fiadds
inc
lret
jmp
inc
or
add
imul
xor
outsb
mov
xchg
sub
and
cwtl
push
pop
sub
xor
fwait
xor
sub
sub
dec
stos
and
inc
cltd
xor
inc
wbinvd
add
arpl
dec
add
int
roll
sub
inc
add
test
pop
add
jns
stos
sbb
out
call
mov
push
cmp
stos
sub
or
jp
adc
mov
add
xor
sub
arpl
dec
and
jg
sub
addb
aaa
arpl
inc
xor
imul
sbb
mov
sbb
pop
and
cmp
xor
mov
das
inc
sbb
sbb
adc
addr16
adc
pop
add
test
push
mov
imul
push
sbb
sbb
dec
out
imul
cmp
mov
lds
push
push
push
out
inc
sbb
sbb
mov
lcall
lret
dec
add
sbb
adc
mov
sbb
adc
sbb
aas
or
inc
xor
inc
pop
mov
or
fdivr
cmp
fmull
cmp
lahf
dec
adc
stos
out
inc
sub
and
sub
and
aaa
imul
into
adc
sbb
mov
sbb
pop
adc
sub
and
xor
add
pop
add
adc
test
adc
xor
xor
xor
or
or
addr16
mov
imul
and
mov
sbb
xchg
add
adc
add
mov
sbb
pop
push
imul
and
mov
sbb
pop
lret
daa
or
dec
add
add
xchg
dec
and
mov
aaa
in
shr
mov
ficoml
inc
pop
pop
fimull
add
pop
cmp
or
add
testb
sub
jg
or
inc
inc
cmp
sub
add
aad
sbb
xchg
add
sbb
mov
pop
or
repz
cmp
mov
or
fstp
and
add
outsb
push
or
push
pop
push
fs
or
negb
pusha
push
or
jb
jns
rorb
pop
inc
lret
or
or
or
cmp
lret
or
jo
or
inc
dec
or
pinsrw
loop
cmp
cmp
pop
cwtl
insl
inc
daa
xor
and
les
fiadds
sub
mov
pop
pop
push
or
cmp
aaa
xchg
sub
xor
and
sub
or
jae
push
xor
scas
je
scas
xor
jno
leave
push
xor
lret
jae
pop
adc
arpl
inc
and
cmp
cmovns
mov
inc
mov
aad
dec
xor
out
mov
xchg
scas
inc
push
push
mov
sbb
jno
movsl
lret
mov
daa
clc
jno
cmp
outsl
sub
adc
sbb
testl
mov
sbb
and
andb
icebp
xor
seto
das
icebp
aaa
sbb
jb
call
inc
dec
insl
in
add
fdivr
in
xor
leave
or
mov
xor
cmp
cmp
jl
cmp
mov
cmp
xchg
adc
push
sub
cmp
xchg
dec
pop
pop
lea
mov
sbb
or
pop
pop
cs
mov
cmp
out
push
mov
sbb
and
lds
adc
pop
mov
pop
aas
pop
add
add
lods
pop
add
sbb
fldl
cmp
sbb
xchg
cmp
push
or
push
sbb
add
imul
sbb
adc
lret
pop
pop
sbb
addb
lods
fnstenv
shl
out
inc
notl
clc
icebp
daa
ret
ret
mov
sbb
pop
fidivrs
push
adc
aas
mov
or
dec
xor
xor
push
cs
and
movsb
setge
mov
arpl
xor
cmp
cmp
push
sub
and
jp
push
sbbl
or
sub
and
scas
xor
adc
mov
pop
dec
push
ss
mov
mov
bound
lcall
dec
xchg
fdivrs
fistpll
push
daa
xor
add
cmp
lret
add
cs
dec
push
pop
cmp
cmp
mov
adc
fwait
out
dec
dec
popa
outsl
xchg
xchg
xchg
or
xor
jle
or
pushf
test
adcb
cmp
adc
inc
lods
mov
push
lcall
lock
sub
cwtl
test
cmp
ret
hlt
add
or
je
mov
pop
jae
stos
fistps
fisubs
jae
subb
ret
aaa
dec
mov
into
sbb
mov
lds
add
add
mov
test
adc
movsl
mov
sbb
xchg
mov
or
dec
imul
pop
adc
push
xchg
and
lods
inc
push
or
sub
push
rcrl
lea
pop
test
pop
ret
fcompl
bound
or
push
adc
das
rcll
jge
mov
hlt
sbb
xor
dec
mov
push
xor
cmp
xor
mov
sbb
adc
test
and
dec
out
and
mov
mov
or
imul
mov
or
inc
dec
xchg
lahf
sarl
jo
sub
sbb
lock
dec
loope
and
or
jmp
sub
arpl
pusha
testb
popf
ret
lret
pop
insl
cli
xor
or
jmp
push
lret
pop
add
jge
push
add
cmp
jg
push
sbb
popf
xor
adc
pop
inc
push
int3
cltd
xchg
adc
xchg
xchg
sub
pop
jne
jp
fstl
sbbb
dec
xlat
push
pushf
push
push
lds
push
lret
ror
xchg
outsl
orl
dec
jge
add
add
add
cmpsl
push
xor
inc
inc
push
or
mov
dec
outsb
adc
cmp
enter
fcompl
lods
cmp
lcall
aam
sbb
aam
adc
xchg
fs
sbb
pop
aaa
inc
mov
dec
lods
test
sbb
nop
sbb
xchg
jae
sti
push
dec
lahf
jecxz
mov
ret
cmp
sbb
jle,pt
sbb
xlat
or
fwait
inc
push
add
jg
adc
aaa
or
loope
scas
cmp
add
pop
aas
fdivl
inc
adc
cmp
jo
movsl
add
int3
test
add
popf
push
add
scas
dec
enter
inc
inc
pop
push
xchg
push
adc
push
das
sbb
inc
xchg
push
addr16
pop
adc
adc
shll
mov
aad
push
pop
popf
test
dec
push
int3
xchg
adc
xchg
leave
bound
cmp
mov
pop
add
pop
inc
fcmovnb
stc
or
mov
orl
in
mov
mov
cmpsb
or
ss
jns
out
mov
gs
fstpt
fstl
aam
push
dec
or
or
pop
dec
rorb
pop
ss
aas
push
inc
hlt
sub
or
push
gs
or
incl
or
addl
lret
cmpl
jp
add
inc
jge
aad
stos
popa
xchg
out
dec
inc
add
adc
sbb
sub
pop
pop
dec
out
add
inc
sub
pop
sub
cs
jecxz
xor
imul
and
pavgb
daa
adc
sub
daa
inc
push
push
xchg
or
adc
mov
add
push
or
sub
lods
fadds
cmp
ljmp
sbb
xor
xor
xor
or
or
out
into
or
xor
dec
add
sub
and
sbb
push
and
add
sbb
inc
sbb
clc
lahf
out
fdivrs
les
xor
cmp
pop
xorl
cwtl
pop
mov
or
cmp
pop
xor
inc
and
or
sub
rcrb
ds
push
xor
cmpsb
add
rclb
sub
pop
sbb
pop
add
xchg
add
sbb
and
add
movsl
xor
jl
mov
xor
or
out
or
addr16
and
pop
mov
out
pop
mov
int3
pop
into
repz
pop
and
aas
mov
adc
daa
add
push
xchg
or
lahf
lea
aaa
and
bound
or
pop
add
adc
pop
outsl
pop
cmp
into
jmp
cmp
and
add
fildll
jb
push
scas
inc
xor
adc
dec
pop
sarl
mov
pop
adc
lret
cmp
sbb
popf
popa
and
adc
jno
adc
pop
xchg
movntq
pop
sub
pusha
fnsave
adc
es
aad
in
addl
pop
clc
imul
ret
push
les
loopne
add
aas
xlat
adc
push
cmp
xor
adc
adc
add
dec
dec
pop
sub
or
les
jb
push
les
cwtl
in
dec
push
cmp
sbb
sbb
sub
jb
ljmp
sub
pop
jb
les
pop
xor
adc
push
filds
adcb
adc
pop
mov
inc
adc
sub
xor
rcrb
sub
test
add
sub
bound
sub
adc
mov
mov
or
and
xchg
dec
out
dec
xor
out
pop
xor
push
and
pop
or
jno
and
dec
inc
sbb
lret
sub
dec
imul
push
sbb
add
mov
jmp
adc
push
xor
testb
push
into
out
fsubrs
and
xor
js
push
push
sub
sub
dec
jle,pt
add
dec
push
jbe
sub
aaa
or
push
xor
inc
rorb
jmp
adc
pushf
push
add
lea
xor
xchg
add
add
push
out
fcompl
sub
ret
sub
jno
push
mov
inc
push
daa
jns
int3
mov
xchg
out
fcoml
int3
or
xchg
mov
inc
into
jge
das
or
or
pop
shl
mov
daa
cmp
xchg
rorl
sub
movsl
add
rorl
enter
or
or
lahf
sbb
inc
sbb
dec
int3
dec
cmp
bound
cmp
add
add
bound
mov
push
pop
add
test
loop
and
inc
sbb
out
cmpsb
xor
xchg
lret
sub
inc
ficoms
rolb
addr16
mov
sbb
sbb
dec
add
fnstenv
or
imul
enter
aam
sbb
dec
sti
cmpsl
add
pop
outsb
aaa
cmp
pop
push
xor
adc
outsl
sub
sub
jp
sub
sub
ss
lret
cmp
or
pop
clc
dec
sub
fwait
sub
push
hlt
and
adc
and
adc
jecxz
push
cs
mov
sbb
pop
sub
loopne
negl
into
sub
movsl
es
jle,pt
rorb
or
loopne
sub
push
jbe
xor
sub
push
cmpsb
into
or
or
and
es
sarl
pop
sub
shlb
push
push
int3
or
test
adc
sub
cmp
cmp
dec
adc
add
dec
sub
aaa
sub
dec
int3
sbb
es
mov
out
inc
aas
scas
xor
imulb
xchg
jl
sbb
jg
stc
cmp
cmp
sbb
add
push
pop
or
push
cmp
xchg
ds
hlt
ret
pop
mov
adc
sub
pop
xchg
dec
cmpsb
add
cmp
enter
inc
mov
pop
test
shrl
aad
pop
inc
pop
imul
shl
pushf
cli
add
sub
dec
pop
pop
push
arpl
jne
out
ss
push
bound
jmp
add
pop
sbb
mov
sbb
pop
add
pop
push
out
jle
cmp
inc
or
shrl
push
jmp
sub
push
jmp
inc
adc
or
jne
js
adc
cmp
mov
add
or
movl
pop
mov
pop
push
mov
add
add
cmp
cmp
and
adc
push
adc
subb
adc
cmp
fstpt
inc
sbb
adc
int3
or
mov
ret
push
mov
test
and
nop
lahf
stos
mov
loop
in
sbb
cmpsl
sub
dec
cmp
add
mov
and
push
inc
push
pop
and
pop
rcll
dec
cmp
lea
or
into
sub
inc
lret
adc
adc
pop
sub
push
lds
aaa
xchg
xor
and
or
test
jo
into
sbb
pop
shrb
ljmp
lret
inc
push
pop
pop
movsb
mov
adc
fisubrs
daa
or
adc
mov
into
mov
sub
imul
cvtpi2ps
insl
pushf
adc
or
cwtl
insl
rcrb
stos
stos
adc
pop
push
shlb
sbb
and
jp
lret
cmp
js
jmp
aas
push
aas
cmp
daa
cmpsb
or
pop
mov
push
sub
movsl
xor
sub
pop
xor
sbb
in
daa
sbb
push
and
pushf
mov
inc
jle
push
sub
push
cs
pop
pushf
dec
dec
push
icebp
xor
cmp
ds
sbb
sub
paddsw
stos
je
cmp
lods
sub
out
mov
sbb
mov
dec
or
ds
sub
ds
in
and
cmp
nop
sbb
aam
and
sbb
xlat
cs
call
add
enter
jae
fbstp
lret
paddsb
cld
add
sub
and
jnp
or
aaa
or
fcoml
inc
iret
xor
jmp
stc
dec
es
inc
adc
ret
pop
push
jns
es
push
inc
adc
or
dec
sbb
orl
cs
sbb
imul
add
cs
and
aas
mov
sub
lock
fnstcw
inc
and
imul
mov
sbb
mov
lcall
push
inc
and
sbb
dec
sbb
xor
jp
adc
ds
push
xchg
fcoms
lea
lds
or
push
pop
pop
subb
and
and
pop
xor
test
jge
sbb
sbb
sti
int
int
add
test
or
aas
sarl
or
imul
leave
xorl
pop
sbb
dec
add
add
jp
add
add
daa
cmp
idivl
sarl
add
xchg
addr16
dec
outsb
fsubrl
lea
sub
inc
xchg
lds
sub
sub
pop
adc
add
popa
or
or
addr16
inc
into
jge
mov
xchg
cmpsl
out
pop
leave
sbb
push
notl
and
cmpsl
push
and
mov
sub
lret
cmp
dec
xor
fcoms
xchg
adc
xor
adc
fldl
xor
adc
cwtl
and
xor
jb
mov
inc
daa
sub
sub
pop
mov
ret
pop
insb
push
ret
sub
xchg
sbb
mov
cmp
lods
fisttpll
cmp
ljmp
and
mov
or
adc
insl
xor
sbb
int3
loop
and
pop
inc
adc
out
jecxz
hlt
pop
mov
fists
shrb
ljmp
imull
adc
pop
testl
sbb
iret
lds
gs
push
sub
sub
sub
sub
xor
hlt
push
or
aam
cmpsl
sbb
sub
aam
dec
mov
cmp
shrd
mov
rorb
cmp
adc
mov
sub
or
adc
call
ljmp
mov
sbb
add
sbb
lock
mov
in
push
fstpt
cmp
xor
adc
pop
and
cmp
lahf
xchg
sbb
mov
push
adc
xchg
push
inc
sub
push
daa
xchg
dec
fwait
push
idivb
and
cmpsl
add
cmpsl
xor
pop
lret
popf
test
jge
fbstp
mov
xlat
sti
mov
mov
xchg
cs
add
mov
imul
or
cli
int
sub
sbb
sub
xor
cmp
inc
aaa
dec
mov
mov
push
adc
xor
sarl
out
fdivs
adc
mov
and
cmp
adc
or
test
add
adc
pop
adc
arpl
inc
xor
cmp
xor
aaa
inc
cmp
cmc
cmp
inc
nopl
xor
sub
out
add
pusha
sub
or
mov
nop
out
sarl
and
ja
and
popa
xor
addr16
es
jbe
sbb
mov
lret
cmp
cmp
xor
mov
ss
xor
sub
xchg
mov
adc
pop
inc
lret
sbb
sub
adc
jp
sbb
les
pop
push
pop
add
sub
scas
aaa
xor
and
xor
inc
jo
test
xor
inc
push
push
push
jo
or
out
mov
sbb
leave
int3
or
out
or
inc
xor
out
sbb
mov
into
adc
and
cmpsl
and
out
dec
and
dec
sbb
pop
aaa
addr16
mov
and
cmp
int3
mov
cmp
xor
xor
pop
out
mov
inc
ret
mov
and
fld
pop
lds
sub
jno
arpl
aaa
test
dec
les
popa
xor
arpl
cmp
push
fs
xor
dec
xor
pop
aam
or
mov
idivl
pop
out
pop
sub
sbb
outsl
cmpsl
sub
dec
sub
xor
xchg
pop
adc
ss
pop
imul
sub
or
cmp
daa
lds
sub
mov
imul
add
adc
into
xor
add
sub
sbb
add
and
pop
aaa
subl
jnp
ja
sarl
jl
test
sub
test
int3
leave
movaps
jge
test
pop
push
and
movsl
into
sahf
cmp
dec
xor
test
or
sbb
fldl
adc
inc
aaa
scas
cmp
aaa
test
or
or
movsb
xor
lea
pop
call
add
inc
in
inc
out
testl
les
scas
imul
sti
addr16
mov
test
in
lahf
sbb
adc
cmp
or
dec
mov
call
mov
cmp
les
or
and
xor
pop
and
or
in
add
sub
fistps
xor
hlt
pop
and
add
sub
or
pop
call
sbb
xor
test
es
out
pop
sub
lds
sub
sti
mov
sbb
lcall
outsb
out
mov
push
xchg
add
sbb
mov
cltd
sub
popa
sub
xchg
imul
and
xchg
outsb
outsl
add
sub
cltd
scas
push
push
add
cmp
sahf
pop
daa
xor
cmp
gs
les
mov
xchg
and
inc
push
mov
jb
popf
xor
fisubrs
aam
icebp
adc
sahf
inc
out
xchg
push
push
push
adc
movl
or
aam
xchg
jns
sbb
xchg
adc
pop
and
mov
and
dec
fbstp
xorb
push
inc
push
popf
push
pop
clc
dec
cmp
push
ljmp
mov
pop
cmp
push
mov
add
and
xor
xchg
mov
adc
add
xchg
xorl
into
fwait
push
add
adc
int
pop
mov
sub
js
cmp
add
cmp
cmp
xor
sub
adc
rolb
and
adc
inc
sbb
or
fcoml
add
mov
mov
dec
xor
add
add
mov
sub
icebp
add
mov
stos
xor
xor
xchg
and
insb
lret
add
sbb
in
sub
inc
fsubrs
sub
aaa
ja
xor
pop
xchg
cwtl
sub
and
jp
nopl
inc
mov
sub
mov
push
jo
cmp
inc
outsb
mov
stos
cmp
pop
push
stos
xor
pop
imul
inc
push
ss
cvtps2pd
xor
jnp
pop
push
xor
lret
arpl
das
xor
inc
sub
sbb
outsb
mov
xchg
and
push
clc
scas
and
xlat
stc
cmp
mov
mov
shll
imul
inc
sbb
push
lcall
shl
sbb
push
int
mov
pop
and
sub
ja
sbb
jge
lea
out
mov
fdivl
add
mov
aaa
adc
add
push
sub
in
in
ret
pop
xor
cmc
movsl
add
cmp
push
mull
test
fldl
xor
mov
add
push
jno
int3
pop
adc
and
adc
sbb
int3
dec
cmp
pop
aaa
pop
lret
or
fsubl
ret
incl
and
push
adc
int3
dec
and
insb
and
mov
adc
cwtl
and
add
push
sub
outsb
aam
sbb
idivl
jge
fwait
test
leave
push
and
ds
int3
mov
and
lret
arpl
sub
testl
pop
sub
or
loop
daa
fs
mov
add
pop
and
outsb
dec
adc
sub
fisubrs
adc
lret
add
fsubl
sub
xchg
dec
mov
and
and
mov
pop
in
dec
mov
push
shl
inc
cmp
cmp
inc
pop
or
icebp
sub
xor
fstpt
add
cwtl
or
les
xor
inc
sbb
ds
sbb
loop
sbb
mov
push
sub
inc
loop
and
push
cs
adc
and
fistpll
adc
and
or
leave
push
popa
mov
or
sub
inc
lcall
or
and
mov
popa
add
cmp
pop
xchg
push
in
or
sub
mov
inc
cmp
aas
daa
call
mov
add
out
aaa
or
mov
or
aaa
and
test
push
xchg
loope
scas
adc
test
inc
sub
loope
sbb
cmp
es
or
adc
add
cs
add
leave
jmp
add
adc
add
test
mov
out
inc
sbb
push
aaa
loopne
inc
jl
xor
pop
cmp
sbb
int3
mov
cmpsb
nop
add
sbb
cmp
daa
sub
jno
cmpsb
addb
mov
mov
xor
adc
add
out
ljmp
in
mov
sbb
pop
icebp
daa
ret
ret
test
adc
fisubs
mov
sbb
pop
cli
imul
mulb
das
adc
imul
sbb
sub
xor
es
bound
cmp
mov
sbb
mov
out
mov
and
sub
imul
pop
adc
fisubs
daa
inc
xor
pop
cltd
jp
lret
xor
out
mov
js
adc
mov
aas
lcall
push
jle
lret
sti
jb
mov
into
test
jp
xchg
add
inc
and
and
cmp
out
and
cltd
unpckhps
or
jmp
jecxz
fimuls
adc
cli
test
jnp
dec
cmpsl
and
rorb
xor
fnstcw
sbb
add
pop
pop
aas
or
cmpsl
sbb
or
push
add
cmp
aaa
sti
cmpsl
aaa
adc
push
outsl
cmp
pop
add
adc
cmp
push
adc
out
sbb
adc
sti
addr16
add
sub
sub
or
pop
cmp
or
or
aaa
push
push
orb
daa
sub
adc
cmp
test
push
xor
dec
test
and
mov
cltd
push
xor
pop
and
or
sbb
sbb
and
fsubl
movsl
hlt
lahf
add
and
aaa
cmp
pop
mov
jmp
inc
sub
mov
xor
xor
sub
add
movsb
push
cwtl
and
fbld
pop
push
mov
inc
cmp
push
cmp
cmp
push
cmp
inc
lods
mov
scas
icebp
fdivrl
in
inc
xacquire
jnp
pop
mov
xor
push
inc
call
daa
and
push
cmp
gs
and
or
xlat
cmp
in
sub
pop
add
sbb
daa
ss
dec
sbb
lret
mov
sub
aaa
push
xchg
sbb
std
and
add
inc
insl
xchg
outsb
add
pop
fiaddl
and
pop
dec
call
inc
daa
or
dec
and
xchg
pop
or
pop
and
jge
loop
push
aaa
push
add
or
pop
or
pop
sub
or
or
cmp
add
xchg
sub
sbb
bound
xor
add
adc
add
push
loop
push
inc
sbb
adc
xor
sub
pop
add
cmp
push
inc
jp
mov
fiaddl
sub
or
pop
sub
cmp
cli
cmp
sbb
add
ret
and
ds
sbb
dec
or
xor
adc
xchg
xor
push
push
mov
sbb
sub
mov
add
pop
inc
or
add
addr16
jns
bound
out
adc
or
mov
push
mov
sub
sub
xor
sbb
add
push
cmp
sub
hlt
cmpsl
push
adc
mov
sub
adc
inc
addr16
leave
sub
sbb
sub
or
cmp
cs
and
add
or
add
adc
and
adc
xor
cmp
addl
pop
xlat
adc
add
adc
sub
dec
add
aaa
daa
jne
sub
sbb
sbb
popf
sbb
and
sub
or
mov
xor
ds
sub
add
cs
cmc
cmp
cmp
cmp
add
jecxz
test
xor
cs
push
dec
jmp
sbb
dec
push
cmp
das
xchg
push
stos
xchg
push
push
inc
pop
push
mov
aas
pop
pop
adc
pop
fsubrs
pushf
push
mov
pop
fldenv
xchg
mov
push
fstl
sbb
cltd
push
ds
fcmovnu
pusha
stos
popf
xchg
fcoml
imul
push
xlat
push
imul
call
popf
add
out
add
xchg
fldl
frstor
insb
xor
pop
push
jb
xchg
cltd
jbe
sbb
fstl
aam
add
das
add
push
xchg
jg
fisubrs
push
aam
int
xchg
rcl
push
sbb
dec
loope
sub
and
cmpsl
orl
dec
addr16
pushf
icebp
adc
test
cli
mov
sub
test
or
jbe
sub
dec
in
adc
mov
or
cmp
xor
notl
mov
jl
pusha
addr16
sbb
dec
outsl
fisttpl
ss
daa
or
fsubl
stos
mov
dec
out
mov
fcomps
xchg
cmp
lea
out
or
sbb
push
data16
or
push
push
add
push
sbb
add
add
dec
mov
sub
aam
mov
int3
xchg
xchg
and
sub
inc
inc
addr16
add
xchg
out
jmp
ret
adc
cs
cmp
fdivl
sahf
or
adc
lahf
in
and
das
push
mov
addl
fisttpll
or
in
hlt
or
sti
js
insl
imul
cmp
dec
pushf
adc
push
popf
shrl
out
push
shrl
icebp
pop
ret
push
fadds
std
lret
in
addl
fimuls
nop
pop
scas
scas
movsl
lret
add
aam
or
repz
lret
or
mov
mov
addr16
or
xor
pop
inc
adc
fimuls
aaa
repz
dec
push
adc
and
fcompl
sbb
xchg
jno
icebp
pushf
xchg
adc
sub
cmc
in
and
push
sub
fwait
fs
fwait
cmp
iret
add
data16
add
call
adc
or
fists
sbb
bound
popa
and
mov
mov
mov
xor
jne
arpl
xchg
stc
add
jge
in
dec
cmpsl
mov
scas
dec
enter
lods
adc
or
test
dec
xchg
push
inc
sub
fwait
inc
les
or
mov
sbb
push
stos
adcb
aad
dec
repz
xlat
add
int3
adc
movsl
sbb
fidivs
mov
or
xchg
jb
dec
dec
pop
push
lahf
inc
cmp
dec
sarb
nop
inc
push
pop
insb
adc
dec
sbb
jl
imul
fadd
stos
in
cwtl
inc
jne
lea
push
mov
and
push
adc
pop
fiadds
gs
adcb
scas
pop
or
mov
insb
fsubrl
data16
pop
insl
sub
mov
mov
push
jle
or
out
pop
add
fldl
adc
or
dec
cmp
add
outsb
pop
add
add
or
imul
adc
add
mov
movsb
add
mov
js
mov
xchg
add
dec
mov
push
adc
or
push
pop
das
aaa
mov
rorl
int3
pop
cltd
mov
insl
pushf
inc
scas
dec
stc
loop
out
jne
test
or
in
mov
lea
inc
push
pop
lea
sbb
cwtl
neg
outsb
add
mov
sarl
jne
aam
shll
orl
loope
xchg
sub
or
ljmp
cmp
fldpi
or
xchg
call
aas
adc
outsb
pop
or
ret
subb
xchg
cmp
or
jmp
or
push
xor
js
or
shll
xor
shrl
out
sbb
aaa
push
push
sbb
mov
inc
or
add
fidivs
xorl
sbbl
and
add
arpl
test
das
movsl
sbb
mov
push
xchg
dec
or
fistps
int
dec
inc
add
test
test
insl
mov
flds
dec
and
push
sub
roll
and
test
or
fwait
cmp
adc
mov
and
jecxz
pop
adcl
daa
outsb
jno
out
cmp
adc
cmp
lcall
mov
xchg
fmull
test
or
cmp
fwait
imul
bound
icebp
cmp
dec
lock
les
xor
cmp
push
ret
sbb
sub
test
out
lret
xchg
push
xchg
xchg
fisubl
sbb
stc
into
js
push
mov
push
sub
or
sbb
or
sbb
or
cltd
xchg
xchg
push
sbb
inc
push
mov
cmpsb
or
sub
add
shrb
or
iret
out
mov
loope
push
leave
leave
push
push
and
test
dec
mul
pusha
aad
add
pop
xchg
mov
adc
sub
call
movsl
mov
adc
push
fwait
lret
pop
les
daa
adc
flds
xchg
pop
fcomps
sub
xchg
add
pop
xchg
adc
call
movsl
xor
jmp
sub
ds
sub
shll
dec
loope
sbb
cmp
jbe
sbb
lcall
fnstcw
pop
or
jl
or
clc
scas
push
ja
add
or
sbb
add
jmp
mov
sbb
scas
or
leave
fsubr
and
push
mov
arpl
into
shrl
cld
mov
test
lret
pop
push
cmp
xchg
mov
adc
xorl
mov
test
fsubrs
xchg
jb
loopne
int
mov
push
add
xchg
or
mov
add
sub
push
and
sbb
in
cmp
and
xchg
xchg
lea
shrl
inc
fcoms
add
mov
out
mov
fcmove
jne
xor
sbb
or
lock
cmp
cmp
bound
sbb
inc
pop
mov
dec
sbb
lds
lret
shr
outsb
in
lds
stc
or
cs
and
aad
test
das
sub
aaa
add
push
mov
and
ficoms
jg
and
movsl
sbb
xchg
lock
and
jae
xor
aam
mov
add
dec
adc
cld
xor
rcrb
push
out
push
xchg
xlat
cwtl
inc
xor
ficompl
sbb
sbb
mov
adcb
scas
sub
jne
sbb
inc
cmp
cmp
sbb
mov
subb
lcall
adc
daa
adc
add
imul
xor
sub
rorb
push
imul
adc
push
sub
test
leave
ficoms
test
pop
sub
xor
andb
bswap
adc
inc
sub
inc
cs
cmp
jmp
aaa
sbb
and
adc
jb
insl
and
pop
pop
cs
and
aas
enter
jns
addr16
pop
popa
sbb
or
mov
into
sub
and
xchg
mov
sbb
pop
mov
sub
fistpll
jmp
add
xlat
pushf
mov
cmc
and
notb
mov
cmp
enter
fs
or
out
cmp
dec
cmpxchg
stos
aas
sub
push
lea
iret
inc
pop
add
or
jne
stc
mov
in
out
int3
outsb
dec
xchg
mov
xor
inc
xor
adc
xor
and
scas
sti
shlb
inc
add
arpl
pop
fcompl
repnz
xchg
and
ror
xchg
ds
sub
jns
dec
pushf
mov
test
sub
inc
outsb
arpl
aas
add
sbb
xchg
or
fldl
daa
adc
pop
xor
pop
pushf
adc
cmp
lds
adc
sbb
in
imul
push
mov
lret
pop
xchg
pop
daa
add
enter
popf
lds
test
adc
pop
je
pop
xor
movsb
das
test
xor
sbb
adc
shrb
sub
sahf
cmp
lds
imul
push
lret
in
pop
xchg
push
and
rclb
xor
xchg
mov
sbb
sarb
cmpsl
bnd
aaa
jb
adcl
daa
adc
int3
or
adc
fwait
xchg
push
or
stos
data16
push
xor
adc
mov
xor
dec
cltd
inc
fcoml
push
inc
xor
xor
and
out
jmp
xor
push
sub
xor
xchg
daa
push
daa
adc
int3
mov
sbb
aad
test
cs
sub
dec
and
int
xchg
pop
or
push
jl
xchg
out
add
push
xchg
push
cmp
ficoml
les
or
pop
dec
push
push
inc
dec
outsl
adc
dec
scas
lea
and
jecxz
dec
stos
add
pop
jecxz
dec
es
jae
mov
cmpsb
push
mov
push
sbb
push
int3
xchg
sub
and
and
mov
add
add
push
dec
aas
adc
push
sub
xchg
subb
sbb
call
imul
mov
fldenv
jo
dec
pop
pop
gs
test
mov
mov
cmp
xchg
jo
hlt
adc
jne
jo
ficompl
popl
jns
in
ret
xchg
lods
dec
mov
push
subb
into
shll
dec
stos
inc
sbb
popf
fsubrl
pop
inc
outsb
mov
repz
pop
mov
pop
outsl
es
mov
lods
push
xor
cs
pop
pop
fimuls
adc
xor
subb
and
out
insl
or
lret
repz
pop
sbb
push
out
arpl
sbb
add
push
cmp
and
add
pushf
xchg
sub
lfs
xlat
pop
cs
pop
call
and
sub
test
adc
out
fdivrs
and
out
ss
pop
add
pop
cmpsb
inc
add
or
fs
cmp
mov
popf
sbb
pop
and
sahf
imul
cwtl
sbb
fwait
addr16
sub
nop
aas
jp
adc
sbb
addl
add
pop
push
sahf
xchg
test
clc
adc
fwait
or
pop
adc
pop
xchg
cmp
add
pop
pop
fcoms
push
orb
push
lods
push
lcall
sbb
xchg
int3
pop
xchg
xchg
rcrl
push
lds
out
sbb
xchg
and
sbbb
add
xchg
sbb
xor
and
lods
mov
nop
pop
xchg
add
sbb
rcr
xchg
lcall
fstps
adc
push
pop
fistl
push
out
dec
lahf
inc
cwtl
scas
xchg
sbb
dec
test
or
gs
ljmp
sahf
sbb
pop
jle
mov
scas
sbb
xchg
mov
ds
mov
ljmp
pop
adc
test
shll
sub
or
sbb
sub
adc
aaa
or
pop
sub
inc
pushf
scas
dec
push
mov
int3
fdivr
sub
cmp
xchg
push
xor
mov
add
in
pop
jl
add
add
push
sbb
les
mov
fimuls
sbb
pop
add
add
pop
lcall
adcb
and
cmp
sbb
push
shlb
pop
and
sub
setg
sbb
sti
and
pop
add
adc
fldenv
shrl
lret
pop
ret
cmpsb
jb
pop
outsb
cmp
mov
or
daa
dec
xor
sub
xchg
fcmovnbe
mov
jbe
xor
sbb
lcall
mov
pop
cmpsl
pop
cmp
or
xchg
scas
daa
pop
sub
or
outsl
adc
out
push
out
imul
push
lahf
sbb
add
push
cmp
lods
jb
bound
xor
outsb
push
xor
adc
add
mov
add
dec
xor
or
sub
adcb
fwait
xchg
or
lock
sbb
pop
cmpxchg
cmp
rcl
imul
xchg
sbb
xchg
sahf
pushf
or
sub
into
cltd
and
push
mov
inc
mov
mov
push
cmpl
adc
mov
xor
test
add
cmp
stos
push
xor
pop
sub
cmp
outsb
add
scas
aam
xchg
sbbl
push
adc
adc
adc
push
out
adc
shlb
pop
shll
data16
insl
xchg
mov
push
out
fcoml
repz
or
add
cmp
rcl
push
xor
and
mov
cmp
push
push
pop
insb
xchg
cmpsl
inc
mov
andl
addl
pop
jne
cmpsb
add
push
rclb
xor
lods
xchg
and
xor
enter
push
daa
shrl
ja
cmp
aaa
adc
sbb
in
imul
dec
dec
and
push
imulb
xchg
dec
jb
push
sub
xor
or
roll
dec
scas
cmp
adc
dec
mov
cmc
pop
in
das
call
xchg
jb
push
sbb
aaa
xor
in
test
pop
adc
sub
lds
xor
ss
and
icebp
add
xchg
add
lret
pushf
pop
out
shrl
cmp
cmpsl
rorb
sub
sbb
pop
inc
out
or
pop
pop
in
imul
imul
pop
mov
xchg
or
fldl
daa
or
pop
adc
sbb
xor
jmp
popf
xchg
dec
or
daa
pop
jns
mov
or
jg
cs
jp
sub
sbb
cmp
push
sub
adc
xchg
stos
sub
add
nop
fdivrl
jg
and
fs
gs
jge
sbb
jge
xchg
inc
enter
sbb
insl
fwait
cltd
movsl
roll
les
push
ss
xchg
xchg
mov
adc
ret
sarl
cltd
pop
inc
imul
test
or
or
push
out
aam
adc
dec
in
in
and
push
imul
sbb
and
or
out
int3
sbbb
or
gs
jle
jle
daa
cmp
adc
sbb
dec
idivb
cmpsl
fstl
inc
adc
lods
fdivl
lds
adc
sbb
in
imul
and
aaa
dec
jb
sbb
sub
pop
sbb
mov
push
sahf
add
movsl
add
sbb
divb
or
inc
lods
adc
les
lea
pop
fsubl
ret
scas
test
adc
adc
mov
lcall
fsubrs
or
aam
divb
into
push
add
aam
dec
rorl
inc
fwait
cltd
mov
jp
mov
shll
cltd
sbb
pop
xor
loope
jmp
out
out
and
mov
scas
xor
push
mov
xlat
pop
sub
pop
nop
sub
sarb
lret
orl
sbb
dec
dec
lock
xlat
leave
mov
xor
int3
call
xor
neg
and
sub
sbb
popf
lahf
adc
adc
and
or
jb
inc
popf
dec
dec
ret
mov
xchg
or
mov
jns
into
adc
rclb
lea
lods
and
fcompl
push
clc
ret
mov
jg
jns
mov
cltd
cmp
xchg
or
add
mov
sbb
pop
loope
stos
adc
push
sub
mov
lods
enter
pusha
cmpl
sbb
sub
loopne
push
loope
mov
repz
and
ds
adc
in
shll
sub
in
xor
pop
lret
jg
cmp
mov
and
cltd
cwtl
cmpsb
sbb
inc
out
mov
fcomip
aam
int
aaa
cmpb
insl
fmull
add
mov
add
sbb
movsb
pop
cs
or
rol
or
pop
shrl
call
fnop
stc
pop
cld
push
pop
push
daa
insl
xor
fmull
xchg
cli
data16
rclb
jbe
fwait
mov
outsb
fnsave
or
or
push
sub
push
add
adc
cmp
push
aas
push
mov
rcrb
adc
test
mov
test
jbe
scas
xor
xor
out
jb
push
dec
sub
mul
mov
push
out
sahf
les
aas
cltd
mov
fadds
sub
pop
push
sbb
sbb
int
repz
pop
push
pushf
jae
pop
add
dec
push
xor
cmp
shlb
adc
js
sti
mov
mov
push
aas
xor
mov
stos
mov
or
adc
xchg
xchg
sbb
cltd
or
mov
mov
mov
sub
or
jge
sub
jns
flds
or
pop
push
sbb
push
adc
pop
mov
xor
mov
xchg
cwtl
sbb
pop
pop
push
cmpsl
mov
pop
aas
or
aas
adc
pushf
push
enter
add
aas
sub
or
out
fists
adc
inc
flds
push
mov
add
xchg
jns
push
sub
nop
push
or
pop
mov
pop
adcl
sahf
xor
add
adcl
adc
adc
fidivs
xchg
cmp
adc
stos
mov
inc
outsb
pop
fcoml
xlat
pop
or
ficomps
or
int
ss
inc
sbb
pop
pop
or
adc
mov
lock
xor
add
adc
add
mov
mov
sbb
std
cs
out
fadds
cltd
xchg
nop
sub
or
jns
inc
popa
cs
or
cld
scas
int3
sbb
sub
loop
lds
scas
gs
inc
mov
push
sbb
mov
sbb
sbb
out
lret
push
out
jns
imul
push
sbb
ja
push
inc
xchg
push
test
jp
mov
or
add
pop
ss
mov
sbb
mov
and
out
dec
iret
pop
or
pop
add
push
adc
push
outsl
jecxz
aaa
pop
add
popf
inc
or
popf
inc
or
stos
inc
or
mov
push
sbb
pop
xlat
xchg
cltd
and
xor
mov
ss
pop
jmp
xchg
or
stc
mov
cs
rclb
aas
or
out
int
lret
and
pop
cmp
cmp
icebp
xchg
insl
aaa
adc
push
xchg
jo
lret
test
sub
xchg
or
mov
dec
push
repnz
xlat
add
xchg
mov
inc
adc
sbb
outsb
inc
cld
sbb
ret
push
in
and
jo
filds
lea
sub
fnstcw
ljmp
push
sub
and
adc
ror
call
mov
pop
lea
xor
or
or
mov
push
dec
cmp
xchg
mov
push
cmp
adc
or
sbb
sub
pop
paddw
mov
stos
and
push
and
in
sbb
sub
xchg
adc
and
or
pusha
xchg
addb
jmp
push
inc
rclb
outsb
push
cmp
cltd
mov
pop
pop
lods
add
sbb
dec
enter
adc
fcompl
push
cmpsl
sub
mov
add
sbb
cmp
and
sbb
cmp
xchg
dec
cmp
arpl
or
add
or
inc
push
in
cs
or
lods
adc
inc
dec
and
sbb
out
xchg
sub
outsl
in
xor
inc
or
jl
dec
mov
stos
sub
movsl
jo
roll
pop
or
sub
imul
or
sbb
into
cmpsb
and
jmp
and
decl
ret
dec
mov
and
jne
not
pop
add
les
inc
push
adc
add
sarl
pop
out
sti
push
xchg
add
stos
rorl
sbb
jae
pop
sbb
rorl
adc
jp
outsb
pop
adc
xlat
or
push
lret
ss
and
or
subl
add
arpl
adc
fs
mov
insl
stos
mov
add
add
inc
fs
xor
ficoml
fmuls
aaa
inc
sbb
test
pop
mov
sbb
test
pop
mov
and
stos
xor
call
sub
or
add
lret
adc
pusha
out
cmp
inc
fsubrl
sub
mov
or
push
pop
mov
lahf
sub
inc
scas
pop
push
scas
or
in
stos
push
lods
xchg
push
sbb
adc
or
popf
jnp
cmpsb
mov
push
sbb
xlat
lahf
loope
pushf
adc
sbb
cltd
mov
xor
push
xchg
cs
out
out
or
mov
sbb
push
sahf
push
pop
sub
aas
test
sarl
adc
sbb
push
xor
cwtl
jge
addr16
or
in
sbb
jo
movsl
mov
sub
lcall
jbe
adc
adc
mov
mov
daa
pop
sub
sbb
mov
add
xor
ret
aad
outsl
out
cmp
or
cltd
cmp
xchg
mov
xorb
repnz
inc
xchg
push
push
lahf
daa
fisttpll
sub
mov
and
or
add
xchg
add
sbb
lahf
sbb
scas
adc
sbb
sub
mov
adc
add
add
lret
mov
stc
cmp
adc
inc
sbb
and
into
or
pop
or
sub
or
dec
push
inc
add
pop
pop
add
aaa
cltd
sub
outsb
std
adc
xchg
push
sbb
pop
pop
add
shrb
xor
sbb
stos
shll
or
in
test
cltd
pop
sub
jae
ret
push
push
inc
or
or
xchg
mov
push
add
inc
add
fstpl
mov
sbb
jae
and
mov
decl
or
outsl
jle
fs
adc
add
jmp
cmp
aas
pop
mov
xchg
xchg
mov
add
push
sub
pop
dec
and
sbb
lcall
sbb
sbb
bound
inc
lea
fsubrs
fistps
add
fiaddl
fiaddl
push
adc
mov
test
xchg
push
add
pop
outsb
popf
or
orl
cmp
or
sarl
add
push
dec
aas
add
insb
add
inc
fstl
xchg
dec
adc
mov
out
add
cmp
test
shlb
stos
fistps
scas
and
xchg
sbb
das
pop
lods
out
lret
loopne
cmp
pop
push
sbb
push
pop
inc
push
jmp
pop
inc
xchg
mov
xor
mov
dec
sbb
shr
sbb
xchg
add
xor
adc
cld
imul
daa
lea
fs
pop
fsubrs
add
faddp
sub
lret
xchg
xchg
push
sub
pushf
fisttpll
ljmp
test
xchg
cwtl
cmp
jl
mov
or
rcll
add
mov
cmpsl
xchg
cli
pop
and
push
aad
or
push
arpl
or
sbb
adc
cwtl
aaa
add
pop
jns
das
xchg
sbb
lea
xor
lahf
xchg
fsts
mov
adc
movb
adc
jns
or
les
cmp
mov
mov
push
fdivrl
out
or
ss
push
xchg
push
dec
sub
pop
lock
push
push
mov
dec
ret
adc
sbb
pop
outsb
scas
sub
mov
push
cmp
pushf
pop
xchg
pop
cltd
inc
test
aad
xchg
sub
iret
lahf
dec
shrl
mov
sbb
stos
repz
or
or
xor
popf
jecxz
and
sarl
leave
sub
mov
add
add
or
push
and
and
pushf
dec
cmpsl
add
sub
adc
xlat
xchg
mov
pushf
cs
cmp
in
pushf
insb
cmp
stc
in
pushf
insb
cmp
mov
adc
mov
or
sub
cltd
fstp
inc
push
lret
push
sbb
sbb
sbb
scas
leave
arpl
cs
or
adc
mov
sub
rorl
cmp
and
mov
adc
xchg
rcrb
sbb
imul
movsb
add
pop
int
imul
bound
xchg
xor
cmp
sub
sbb
out
sub
xor
dec
mov
jae
testl
loope
sub
dec
aad
pop
fidivrs
mov
sbb
mov
xchg
sbb
daa
push
add
daa
ret
sub
cmp
faddl
loope
in
mov
or
mov
jne
cmp
mov
sahf
orb
sub
int3
cmpl
jp
pop
sbb
mov
xchg
and
and
pop
pop
aaa
sbb
cmp
jbe
sub
cltd
and
fs
mov
inc
adc
adc
orl
addb
cs
or
or
aad
lret
fcmovbe
push
sub
sbb
inc
push
adc
pushf
pop
add
sbb
mov
pop
sbb
add
sub
jne
push
mov
push
cmp
scas
mov
lret
sbb
or
mov
and
or
add
aas
mov
add
and
int
or
or
mov
adc
rorl
lea
pop
fcom
jb
add
push
or
xchg
in
or
ret
fimuls
pop
fists
adc
mov
mov
push
xchg
sub
test
xor
adc
cmpsl
out
pop
and
push
add
or
cltd
jmp
xchg
pop
and
fmull
out
ljmp
cmpsl
inc
sbb
sbb
outsb
pop
call
cmpsb
pusha
pop
rorb
or
push
sub
adc
cmp
or
mov
movsl
mov
ss
mov
inc
add
push
sub
push
sbb
cwtl
andb
fldenv
in
push
dec
and
or
xchg
in
cmp
outsl
shrb
xor
nop
enter
or
lods
push
xor
and
add
push
icebp
or
dec
scas
cmpl
mov
dec
push
movsb
stos
pop
sarl
pushf
push
addl
push
pop
ljmp
push
daa
adc
mov
sub
push
js
add
fwait
jo
sub
loope
fxrstor
adc
or
nop
mov
xchg
imul
sub
cmp
mov
mov
sbb
dec
xchg
shrl
adc
rcl
mov
addl
sbbl
sub
inc
pushf
lret
in
lds
add
fdiv
insb
inc
jmp
and
pop
xorl
fdivl
test
push
addb
xchg
dec
fmuls
es
mov
daa
stos
cltd
push
and
mov
int
aas
call
ret
mov
sub
adc
or
sub
and
mov
sub
add
sub
cltd
sbb
out
andl
sbb
aaa
or
addl
pop
mov
or
mov
and
imul
add
mov
push
sbb
or
lret
sbb
add
lret
out
dec
cmp
mov
movsb
fdivrs
mov
lcall
outsb
pushf
popf
call
sbb
mov
int
daa
cli
pop
cltd
movl
rorl
cmp
adc
scas
popf
out
adc
pop
in
mov
mov
push
in
add
or
out
and
cltd
and
xchg
xor
mov
test
int3
inc
cltd
push
test
cmc
push
xchg
mov
or
add
pop
sub
sbb
pop
nop
daa
push
dec
pop
xchg
xchg
xchg
test
pop
push
addl
and
jb
push
add
or
mov
sbb
and
fcmovb
ljmp
dec
cli
jae
aas
mov
sbb
aam
add
mov
xor
push
scas
adc
lret
fstpl
sbb
inc
xchg
stos
fdivrs
stos
inc
push
cmpsb
or
jp
and
lea
pop
mov
test
bound
push
push
mov
sub
pop
add
nop
cmovg
pop
test
xor
addr16
push
daa
mov
xchg
xor
and
out
and
sbb
pop
gs
adc
cmp
addb
push
xor
push
xor
pop
adc
mov
mov
mov
or
adc
pop
mov
addr16
or
adc
fwait
sub
add
mov
sbb
pop
mov
fcmovbe
out
sub
pop
js
nop
andnps
rcll
inc
ret
cltd
lcall
sahf
xlat
dec
and
add
mov
push
clc
fcompp
inc
aaa
dec
sub
cwtl
adc
inc
fstps
lret
jmp
fcoms
pop
mov
inc
jecxz
cs
push
mov
push
push
push
add
push
or
outsl
into
adc
push
movsl
ldmxcsr
pop
in
mov
add
scas
or
adc
es
adc
xchg
mov
pop
lahf
add
add
pop
cmp
push
sbb
fsts
xchg
nop
daa
ja
and
andl
cmp
xchg
or
inc
mov
mov
mov
add
sbb
scas
es
cmp
push
rcrb
cmpl
insl
mov
cwtl
jmp
sub
ds
xchg
push
add
push
ljmp
jnp
stc
xlat
and
sub
cwtl
sub
or
sbb
add
sbb
add
fstpl
sbb
popf
xchg
scas
sub
loop
push
or
and
cmpsb
push
sbb
into
scas
push
notl
cmpsl
orl
push
jae
xchg
inc
add
mov
add
sbb
sbb
adc
cmp
les
mov
add
push
xchg
lds
cld
or
cltd
jo
inc
xchg
pop
mov
add
push
pop
mov
fs
sbb
cmp
jae
cwtl
push
pop
mov
sub
fdivrl
enter
ljmp
pusha
rolb
or
and
cwtl
mov
imul
pop
adc
ret
sahf
xchg
push
xchg
pop
jns
sbb
add
jno
xor
sub
dec
ljmp
pop
adc
cmc
pop
cmp
sahf
sbb
inc
sbb
popf
push
add
and
ljmp
scas
scas
shrb
daa
inc
adc
cmp
sub
sbb
push
inc
cmp
add
jbe
xchg
lret
pushf
add
xor
ss
and
jg
outsl
push
sbb
sub
ja
dec
sub
sbb
add
xchg
insl
cwtl
imul
inc
subl
xchg
add
cmp
sub
lret
cmp
pop
xor
cltd
sub
mov
sbb
lret
sub
int3
lods
lea
sbb
cwtl
push
pop
xchg
and
jns
or
push
push
mov
aas
mov
aam
sbb
lahf
adc
aaa
inc
push
ljmp
sbb
or
psrlq
pop
and
out
lahf
or
jle
or
xchg
mov
sub
sbb
push
scas
sub
xor
imul
sahf
push
push
jecxz
aas
inc
jmp
adc
rorl
popf
sbb
cmp
cmp
sub
adc
out
add
sbb
or
daa
xchg
adcl
mov
mov
and
mov
pop
pop
sub
pushf
ljmp
or
xor
add
js
sbb
cmp
insl
xor
adc
fmul
cmp
cmp
inc
adc
sub
test
mov
scas
mov
pop
shlb
cmp
jns
add
out
hlt
imul
sub
mov
push
and
cmpsl
cs
inc
add
cmp
rclb
out
ljmp
test
cmpsl
push
add
sub
out
rcrb
in
xchg
pop
xchg
lods
push
push
adc
test
fidivrs
test
cmpsl
adc
adc
popf
pop
or
orl
sbb
lods
inc
inc
scas
stos
subb
xor
lea
dec
sub
dec
ja
sbb
pop
xor
scas
hlt
sahf
pop
sbb
sub
in
sub
insl
pop
inc
sub
cltd
and
cwtl
cmp
push
mov
mov
xlat
sahf
xchg
push
sub
xchg
push
sub
sbb
xchg
push
dec
shrb
out
xor
shlb
ljmp
imul
mov
mov
out
ficompl
imul
sub
sbb
fnstenv
mov
sahf
mov
mov
fdivrs
and
sub
mov
in
pop
sarl
sub
push
jnp
fstp
xor
idivb
pop
aas
pop
sahf
popf
daa
gs
inc
adc
and
dec
mov
dec
insb
out
xor
stos
mov
inc
or
sub
addr16
adc
push
mov
xor
call
inc
popa
lods
cwtl
cmp
addl
sub
sbb
call
inc
fsubl
out
pop
cmp
jae
sahf
and
add
xchg
jae
cld
addl
sahf
cmp
imul
into
xchg
shlb
and
pop
stos
inc
sbb
popf
sub
popf
test
cmp
lahf
push
stos
stos
sub
push
sub
sbb
and
testl
sbb
or
mov
xchg
xor
sbb
movsl
nop
mov
test
mov
adc
movsl
or
out
sbb
out
bound
or
or
push
insl
add
cmp
lret
adc
and
or
sub
into
mov
insb
fldl
mov
sbb
push
movsl
xchg
sbb
adc
das
scas
mov
pop
or
and
add
add
fists
adc
pushf
push
push
stos
sub
or
or
out
push
add
loope
sub
xchg
lock
sbb
pushf
cwtl
jnp
sub
jns
pop
lret
and
xchg
inc
add
push
xchg
lea
arpl
xlat
mov
test
mov
jp
push
jg
mov
addl
sub
jae
sbb
push
mov
push
sahf
xchg
cltd
cmc
xor
jb
movsb
push
xor
cwtl
mov
movntq
xor
data16
fsts
pushf
and
xchg
adc
ljmp
adc
sbb
pop
cmp
imul
gs
sub
adc
mov
add
dec
jnp
xchg
mov
mov
lcall
push
orl
pop
pushf
sbb
push
lcall
dec
push
fstps
addb
shlb
xchg
movsb
lret
inc
das
sbb
test
lret
fcomi
mov
push
movsl
out
addl
push
and
sbb
adc
rcrb
and
mov
sbb
fsubl
add
xchg
pop
push
jg
xor
mov
push
push
lret
push
push
push
inc
xor
aaa
pop
xchg
icebp
cmp
lcall
push
sbb
sti
mov
or
imul
fsubs
fsubrs
xchg
call
fs
mov
mov
pop
lock
adc
stos
shrl
pop
mov
pop
lds
cli
into
pushf
subb
lahf
sbb
pop
cmp
lret
movsl
aaa
outsb
xor
rorl
push
xchg
cmovp
cs
in
cmp
xchg
pop
and
pop
nop
es
xchg
scas
pop
and
sbb
sbbb
xchg
add
push
push
adc
xchg
das
adc
cltd
or
fsubs
shll
out
xchg
and
mov
pop
mov
cmp
daa
mov
push
cmp
cmp
inc
call
adcb
dec
mov
test
sbb
dec
and
add
push
adc
add
aas
pop
mov
dec
inc
sub
call
jno
pop
sahf
xchg
out
lret
xor
rcrl
loope
adcb
add
cmpl
pop
sbb
testb
fsubrl
in
lcall
ret
aas
shr
sbb
cld
sbb
adc
and
pop
cmpsl
daa
push
enter
inc
call
cmp
add
jo
push
stos
mov
das
gs
lahf
inc
enter
and
pusha
xor
into
push
push
add
dec
test
xor
add
lods
and
fwait
loope
mov
adc
ds
jmp
pop
nop
test
aad
add
inc
mov
ficoml
add
pop
inc
int3
leave
or
inc
les
xor
movl
negb
sbb
dec
and
clc
syscall
inc
rclb
rorl
lahf
out
add
sbbl
pop
sbb
test
andb
es
nop
leave
xor
outsl
jl
arpl
add
test
in
js
and
fiaddl
xor
mov
and
xor
repnz
sbb
xchg
xor
pop
out
and
jp
fwait
mov
data16
shrl
or
ss
push
and
lea
mov
inc
add
pop
add
pop
mov
sbb
jmp
std
daa
push
mov
xor
inc
leave
sbb
add
sbb
dec
aad
aas
leave
rorl
add
test
mov
pop
pop
inc
pop
add
ds
lods
lret
xorl
enter
sbb
and
sbb
pushf
or
sbb
fmuls
and
out
cmpsl
and
dec
sub
aad
add
into
inc
aas
daa
jle
adc
push
lea
adc
cmp
in
or
ret
cmp
frndint
inc
adc
je
sub
push
mov
addb
shlb
xor
mov
push
or
add
push
or
ljmp
or
mov
sub
lods
xor
fnop
push
adc
cs
addr16
out
test
and
mov
and
xor
inc
daa
mov
shlb
add
lret
push
cmpb
arpl
into
xlat
std
and
and
add
incl
popf
aas
or
fisttps
pop
imul
xchg
out
stos
sbb
mov
xor
xor
movsl
jge
dec
inc
and
pop
cmp
jecxz
sbb
xor
adc
fwait
jge
push
addr16
dec
add
cmp
dec
dec
mov
addl
fiaddl
xor
mov
xchg
inc
sbb
fwait
movsl
sub
add
adc
push
add
add
inc
cltd
xchg
sub
adc
inc
or
lahf
xor
dec
ficoms
sbb
adc
xor
sbb
xor
sbb
add
dec
xchg
sub
cmp
adc
pop
das
cmp
lahf
in
cmp
add
cmp
mov
sbb
add
xchg
ds
lcall
adc
inc
arpl
daa
pop
mov
adc
sub
test
adc
mov
sbb
push
xlat
cwtl
pop
cmp
mov
cs
jmp
dec
lahf
in
mov
mov
adc
pop
or
hlt
std
fimull
cmp
xor
adc
leave
jae
pop
cmp
cwtl
cmp
dec
or
fs
mov
lock
dec
jecxz
xchg
push
xchg
cld
push
outsb
or
jecxz
xchg
dec
add
jge
add
pushf
ljmp
pop
cmp
and
add
sti
sbb
shrl
or
push
push
lahf
fs
and
add
and
mov
movsl
xchg
popa
fmuls
adc
and
sbb
cmp
sub
fwait
push
int3
cmp
addb
out
test
push
ret
test
insb
or
hlt
arpl
mov
mov
scas
push
jg
xchg
stos
xchg
mov
cli
mov
or
ljmp
push
add
dec
jle
daa
nop
sbb
lahf
dec
mov
xor
xor
je
in
cwtl
test
cli
add
sub
fldcw
cmp
int
mov
mov
and
cmp
mov
movsb
xor
jmp
loopne
repz
or
sub
add
int
sbb
bound
sbb
adc
xchg
clc
int
gs
jnp
rclb
arpl
push
cmp
xlat
jo
or
gs
je
std
cmp
push
stos
and
fisttps
cmp
mov
sub
xor
mov
push
lods
imulb
pop
mov
mov
add
sbb
jb
and
arpl
or
in
lods
repnz
fcompl
fildll
jbe
pmaxub
rcll
push
lahf
sub
add
shr
scas
add
bnd
sub
ja
pop
cmc
mov
or
leave
cltd
and
lea
daa
push
push
movsl
and
mov
sar
fucom
sub
mov
xor
add
adc
cmp
or
cmpsb
sub
loop
enter
mov
roll
or
flds
or
mov
sub
pop
mov
or
fstps
daa
or
pop
sbb
lahf
pop
scas
xor
pusha
gs
enter
jno
jle
pop
mov
es
xor
sahf
fsts
jns
jbe
and
dec
mov
sub
push
outsl
jb
add
xchg
add
xor
shlb
sbb
and
and
pop
es
cmpsl
ss
in
lea
add
push
sbb
sbb
inc
mov
xchg
rorl
sbb
popa
ret
push
outsl
mov
mov
pop
xor
aas
dec
or
cmp
mov
cmp
ss
stc
and
rclb
inc
subb
fildll
int
inc
mov
push
inc
inc
lcall
fmulp
les
daa
mov
push
pop
imul
leave
int
fwait
mov
jp
ret
push
pop
pop
push
ret
ljmp
xor
ret
dec
fimuls
pushf
and
lds
jge
or
ret
loopne
icebp
mov
inc
ret
in
lods
popa
xor
inc
jmp
popf
pusha
test
sbb
and
cmp
inc
mov
xchg
mov
inc
inc
dec
fisttpl
mov
hlt
fisubrs
inc
dec
xor
aaa
xchg
cltd
or
mov
mov
dec
push
jbe
push
fs
adc
or
movl
adc
mov
inc
pop
inc
loope
pop
add
dec
inc
lock
or
mov
ror
mov
int3
dec
dec
iret
or
in
dec
aad
outsb
lea
lods
ret
mov
orb
jne
loope
adc
stos
mov
test
ret
nop
insl
jae
mov
shrb
pop
or
int
dec
dec
out
xchg
dec
out
mov
ret
out
or
pop
mov
pop
pop
ja
adcb
mov
dec
cmp
mov
mov
pop
sti
mov
lea
stos
mov
adc
test
adc
jge
cltd
negl
test
dec
fwait
xor
xor
xor
sbb
add
pop
or
sbb
xchg
cmp
pop
stc
mov
movsb
jb
push
xchg
sbbl
insb
or
xor
cmp
insb
adc
daa
push
dec
mov
lret
cmpsb
aas
xor
loopne
sbb
xor
insb
testb
popf
add
insb
dec
dec
xor
or
mov
iret
or
jnp
mov
shrl
xor
jmp
sbb
insb
add
sub
clc
bound
and
pop
mov
jo
add
dec
sub
and
std
shlb
jp
sbb
ficomps
int
mov
enter
xchg
add
mov
orb
sub
cld
movups
and
js
int
test
add
jmp
jb
mov
sbb
xor
pop
lea
lret
int3
imul
int3
jg
test
jle
cli
nopl
cmpsb
sbb
cmp
out
cmp
popf
fwait
or
xchg
dec
in
lock
and
lods
sar
add
add
xorl
imul
shrb
jecxz
int3
inc
xor
mov
xchg
push
jp
mov
jne
or
addr16
fnstcw
add
cmpsb
dec
sub
test
add
fisttpl
and
ret
repnz
jnp
pop
mov
lahf
int
leave
fisubl
icebp
fiadds
sbb
aaa
mov
push
fisttpll
lcall
add
add
int
dec
jne
pop
mov
mov
bound
pop
int
cld
inc
into
pop
test
mov
popl
rolb
lods
adc
rorb
leave
mov
mov
sbb
sbb
jmp
cmp
test
rclb
sub
ret
pop
subb
dec
adc
orl
jne
pop
test
cmpsl
sbb
lds
add
dec
int3
rclb
dec
sti
es
aas
mov
cmp
add
adc
scas
jne
lds
mov
or
jnp
sti
sbb
cmp
flds
idivl
xor
repnz
fisttpll
jnp
es
imul
xchg
es
sub
stc
or
lds
imul
pop
ret
dec
mov
movsb
mov
test
add
std
jb
mov
mov
icebp
fnstenv
inc
sbb
leave
loopne
jne
mov
cmp
out
ja
cmp
adc
inc
add
lods
es
jl
inc
xchg
filds
dec
sub
mov
icebp
xor
xlat
pop
aaa
lret
cmp
sbb
outsb
or
xlat
adcb
sahf
jnp
rorb
das
cwtl
les
jb
xor
imul
cmp
or
pusha
jbe
mov
ret
daa
sub
push
daa
or
pop
out
stc
or
or
pop
ret
or
xlat
out
mov
adc
dec
mov
daa
rolb
jne
add
lea
int
out
sub
rorl
push
cltd
sub
inc
ret
fwait
pop
cmp
icebp
andl
dec
orb
cmpsl
inc
sbb
popf
inc
shlb
mov
cmpsb
in
jg
sbb
lds
inc
jp
xlat
cwtl
sub
add
addl
imul
jp
pop
sub
dec
jns
pop
add
loopne,pt
icebp
sub
dec
lods
or
and
iret
inc
jnp
shlb
mov
rorb
and
mov
cmpl
mov
add
fsubs
ja
push
shrb
dec
or
mov
ficoml
add
popa
lea
lret
cli
inc
loopne
push
fwait
mov
mov
icebp
sub
pop
push
fdivr
xor
mov
rcll
enter
pop
push
sub
inc
adc
mov
scas
xchg
xchg
fdivs
xlat
pop
or
mov
test
pop
xchg
xor
test
shlb
test
fists
inc
int3
add
rolb
inc
mov
xchg
add
dec
inc
ret
pushf
sub
mov
movb
mov
pushf
ss
sarl
jp
in
sub
or
push
int3
mov
popf
dec
push
xchg
fadds
push
xchg
mov
add
pop
adc
sub
jae
daa
add
out
int
xchg
pop
lea
iret
shll
and
adc
cltd
cmc
imul
je
in
xlat
cmp
pushf
inc
xchg
add
xchg
push
popa
cmp
adc
sbb
sbb
inc
inc
cmp
ret
fwait
scas
rcr
push
adc
addl
sub
inc
inc
sbbb
sbb
sbb
inc
sub
add
adc
sub
jae
adc
fisttps
inc
repnz
lret
mov
mov
iret
rcrb
push
adc
cmp
mov
pop
cmpsl
adc
mov
jle
cmp
pop
fistl
test
push
sub
adc
dec
lock
rolb
push
dec
lea
push
xor
inc
dec
or
aad
ret
out
rolb
xchg
mov
ss
mul
incb
push
mov
int
push
dec
ret
int3
into
add
add
mov
jbe
push
dec
int
jl
inc
sub
dec
js
pop
dec
mov
lods
stc
dec
pop
pop
push
ror
pusha
loop
lea
jp
outsl
mov
les
movsb
dec
dec
clc
outsb
lea
inc
add
inc
add
frstor
mov
adc
loopne
inc
cmpsb
roll
pop
xor
mov
leave
pop
push
ret
push
push
subl
popf
popa
jge
cltd
jns
sbbb
xchg
xchg
lods
stos
sbb
pop
lcall
inc
xchg
sbb
fstl
lea
rclb
push
xchg
cmp
ficoms
push
xchg
aad
push
ljmp
xchg
sub
bound
cmpsl
test
out
or
in
jp
or
mov
cmpsb
out
jnp
mov
mov
aaa
ja
mov
mov
jne
mov
lret
mov
dec
or
ss
testb
or
sub
pop
pmulhw
dec
push
or
xor
dec
inc
dec
adc
lea
push
push
leave
test
push
popf
adc
rcrl
mov
pop
jno
sub
lods
mov
bound
xor
xchg
test
aas
xor
cmc
or
inc
pop
clc
jb
test
push
movsl
mov
sub
add
cmp
mov
cli
out
pop
sarl
test
pop
mov
mov
int
mov
and
insb
dec
shlb
dec
lods
dec
and
jp
add
arpl
dec
push
sbb
std
fiaddl
icebp
or
pop
cmp
add
add
sub
mov
aas
lret
mov
ljmp
aas
xchg
dec
int
mov
or
test
pop
es
imul
xchg
xor
pop
lea
movb
xor
or
and
shlb
cmp
or
jns
mov
dec
jp
mov
or
popw
out
je
mov
jg
emms
lds
jnp
pop
pminsw
stc
cmp
mov
lret
cmp
push
rol
cltd
retw
fwait
shll
xor
push
pop
push
jo
lods
cmp
ss
enter
or
and
nop
jle
xchg
lcall
jg
sub
mov
nop
cmpb
or
stos
push
mov
mov
pop
or
mov
out
add
cmp
sub
int3
mov
pop
popf
mov
or
jo
pop
mov
and
push
xor
insl
les
arpl
pop
mov
scas
rcl
mov
mov
cmp
push
in
fdivr
iret
or
mov
std
out
int
insb
mov
cwtl
mov
in
inc
or
js
push
xchg
or
addb
or
int
jle
or
fcompl
pop
or
in
je
inc
push
ljmp
sbb
jp
fs
add
dec
imul
ret
scas
je
xor
mov
jge
cmp
push
test
xor
mov
or
and
decl
mov
fdivrs
xchg
mov
inc
mov
sub
mov
or
push
mov
jno
lret
adc
or
add
fldt
sbb
sbb
or
int
js
or
rolb
adc
das
inc
push
xor
xchg
cmp
mov
jnp
loop
xchg
cmp
or
and
out
loope
pusha
gs
ds
call
dec
mov
pop
jmp
sub
push
and
rcrl
fs
xchg
ret
push
and
inc
test
mov
mov
pop
shll
push
ret
xor
pop
xor
push
jecxz
jle
mov
add
pop
or
lea
inc
xor
and
test
into
pop
pop
sbb
lret
sub
jne
std
hlt
xchg
shlb
or
stc
fmuls
xor
fimuls
and
lods
mov
addr16
imul
xor
jb
into
std
cld
sub
mov
xor
adc
xlat
inc
or
and
ret
dec
mov
cmp
xor
or
and
in
mov
inc
cmp
ret
popa
sbb
add
repz
mov
das
xchg
jp
or
push
imul
imul
sbb
sahf
jns
fdivrs
jge
fisttpl
jmp
or
imul
xchg
xchg
or
rcr
popa
lret
jo
adc
cmp
das
cmp
or
fmuls
int
je
dec
or
cmp
fisttpll
xor
pop
add
sbb
jmp
jno
mov
cmp
and
or
sbb
push
or
out
adc
addr16
stos
testl
filds
cmpsb
shrl
cmp
or
xor
mov
inc
sub
sbb
add
push
call
push
mov
xor
or
push
lret
movsl
repnz
std
inc
cmp
cmp
cmpb
std
fdivl
or
adc
mov
mov
add
cmp
data16
push
loop
add
jp
pop
add
lea
sbb
mov
cmp
cmp
rorb
lret
dec
int
out
in
cwtl
lret
push
fmuls
inc
cmp
fsubrl
dec
sbb
sahf
out
pop
inc
ss
nop
stos
inc
and
mov
or
jae
or
mov
hlt
cmpsl
add
pop
test
dec
fidivl
in
jne
mov
pushf
inc
push
mov
xor
inc
scas
or
mov
sbb
mov
test
fisubrs
mov
addl
cmp
lret
fnsave
ret
xlat
jne
mov
or
out
clc
or
push
sbb
pusha
inc
ret
sarb
cmp
scas
cmp
mov
cs
enter
mov
mov
negl
or
mov
in
dec
lret
fstps
jle
fs
bound
outsl
xor
ja
lods
or
shll
dec
add
dec
out
fmuls
stc
nop
or
negb
fnstenv
adc
mov
fisttpll
rorl
rcl
jg
inc
or
int3
inc
aad
dec
jne
in
lret
inc
cmc
push
or
out
test
xor
adc
jg
sbbl
ror
test
out
cmp
sub
jo
pop
mov
scas
mov
movsb
lret
mov
lret
fdivs
jne
sbb
cmp
aam
or
pop
sbb
call
ss
imul
shrb
pusha
or
fisttps
lods
xchg
cmp
pop
sub
and
cmp
inc
shrb
leave
push
rorb
dec
jb
enter
cmp
mov
inc
pop
les
ss
cmp
or
lahf
or
push
and
xor
or
dec
cmpsb
test
xchg
outsl
inc
xchg
mov
or
pop
pusha
cltd
xchg
or
sbbb
sub
ret
call
int3
or
or
mov
leave
fisttpll
jne
pop
or
das
push
out
int
xchg
push
call
sbb
arpl
and
lods
jnp
in
insb
sub
data16
sbb
ljmp
or
jns
cmp
or
lahf
pop
xchg
pop
imul
push
addr16
xchg
ja
push
or
pop
movsl
cmpsl
pop
add
adc
xchg
lock
pop
lods
imul
mov
into
push
fnstsw
fwait
mov
int
ret
int3
mov
inc
out
mov
adc
pop
cmp
enter
iret
dec
pop
or
sub
add
mov
fmuls
lock
sub
mov
mov
jns
mov
shrl
mov
lret
pop
imul
inc
cmp
lds
pushf
mov
dec
sub
mov
ljmp
pop
mov
pop
or
add
lret
inc
insb
loopne
or
xchg
pop
clc
gs
mov
cmp
cmc
ret
shlb
sub
xchg
adc
add
fsub
dec
test
xchg
sti
lods
gs
fdivrs
inc
xchg
mov
out
sbb
push
lea
addb
sahf
rclb
lahf
int
orb
add
gs
or
sub
or
loopne
or
inc
ret
nop
and
add
dec
jno
fwait
bound
out
sarb
pop
sub
mov
or
xor
adc
int3
aam
and
lock
shlb
xchg
and
popf
inc
daa
or
ss
addl
push
xchg
mov
iret
stos
lods
mov
adc
in
pop
inc
xor
mov
sub
inc
leave
cli
filds
mov
mov
jnp
std
sbb
int
ss
or
pop
movsl
push
popf
push
mov
leave
xor
sbb
dec
loop
dec
lcall
mov
pop
test
fstl
into
out
sbb
push
mov
cwtl
popf
add
xchg
push
sub
mov
enter
add
push
rcrb
subl
addl
ffree
inc
xchg
xor
addb
sbb
push
push
push
or
aaa
or
mov
jno
inc
movsl
sbb
frstor
mov
xchg
popf
push
enter
pop
sbb
cmp
aaa
idivl
cmp
ret
mov
cmpsl
lea
sti
xchg
call
add
andb
cmp
pop
das
cmpsb
xor
and
add
lods
stc
mov
xchg
inc
cmp
loopne
xor
xor
and
cmp
mov
cmp
add
stos
or
sub
fiaddl
sub
add
jbe
int
aaa
repz
arpl
or
insb
mov
lods
lret
jl
addl
inc
jp
or
jp
or
jp
jnp
dec
mull
or
jp
les
add
cmpps
push
mov
out
repz
add
or
nop
scas
imul
insb
loopne
add
adc
xchg
pop
clc
gs
ret
mov
popf
int3
daa
xor
pop
dec
cli
lds
push
fidivrl
mov
mov
and
mov
pop
mov
pop
lahf
adc
sub
xchg
lds
add
pop
mov
pop
mov
or
int
fbstp
dec
test
inc
lahf
sub
das
add
sbb
jns
add
lcall
pop
xchg
inc
mov
movsl
es
fstpl
inc
dec
xchg
dec
xor
xor
mov
leave
clc
lret
dec
arpl
xchg
mov
mov
push
xor
les
subb
add
mov
popa
xchg
xchg
add
fdivl
mov
or
fimull
pop
ret
xchg
adc
pop
je
xchg
in
and
cs
lds
mov
xchg
adc
jle
lock
mov
inc
or
into
push
mov
aam
mov
inc
push
add
fimull
iret
or
inc
mov
jle
jo
or
cmc
js
cmp
loopne
lcall
or
pop
add
lret
mov
pop
div
dec
cmpsb
test
push
aam
pop
clc
dec
jge
xchg
out
or
rclb
aam
xor
or
sti
inc
or
shrb
in
jnp
pop
mov
sti
icebp
add
test
adc
and
sub
or
xchg
cld
sub
fisttpll
mov
mov
mov
sub
enter
sub
inc
and
in
push
shld
sub
or
sub
mov
lret
or
das
mov
pop
pop
setae
data16
inc
loopne
daa
cmp
int3
addr16
or
iret
mov
or
scas
mov
stc
xor
call
hlt
ror
or
xor
push
add
int3
sbb
or
push
add
arpl
xor
push
imul
xchg
ret
jle
inc
xchg
repz
je
and
or
popa
push
lcall
scas
sbb
data16
out
push
pop
inc
icebp
sub
pop
or
mov
loop
push
push
jmp
or
adc
jno
or
insb
rcrl
add
loope
and
fisttpl
or
fs
insl
pop
cli
orb
jge
ss
cmpb
or
and
ds
hlt
aaa
push
fimuls
addr16
jmp
jl
outsb
and
loope
pop
push
int3
dec
xor
out
cmp
mov
inc
sbb
pop
test
sub
je
pop
or
mov
xor
sbb
bound
lret
imul
mov
or
out
adc
jp
dec
test
xchg
sbbb
cli
xchg
dec
call
aam
rorl
mov
lret
ret
test
fildll
dec
mov
sub
pop
inc
add
jbe
sbb
push
clc
cltd
imul
sti
pop
cmpsb
pusha
jb
xlat
push
inc
mov
js
mov
dec
adc
mov
imul
bound
dec
dec
cmp
and
dec
sysret
jp
cmp
andl
sub
inc
gs
add
pop
orb
jo
pop
mov
rorb
pop
dec
push
imul
pop
subb
pop
mov
sbb
ficoml
sbb
cmpsb
test
jnp
or
pop
pop
inc
psubsw
aad
sbbl
ss
cmp
movsl
int
inc
sbb
fcomp
dec
mov
imul
dec
or
nopl
stc
mov
fdivs
int3
aaa
add
xor
pop
sub
pop
mov
orl
fadds
dec
arpl
xchg
pop
les
int
pop
jmp
or
testb
fwait
sbb
inc
pop
mov
pusha
jns
or
mov
push
fdivr
js
or
ret
pop
inc
xchg
and
std
iret
add
cmp
sbb
in
sbb
loope
mov
and
adc
cld
int
and
mov
pop
ja
sbb
orl
addl
jns
test
nop
pushf
sub
adc
add
enter
and
dec
aaa
jle
xchg
sbbb
in
cwtl
push
aaa
dec
xor
cld
clc
jnp
popa
jle
dec
pop
imul
xchg
and
ja
push
inc
aam
jne
loopne
scas
out
cmpsb
mov
negl
jns
mov
add
inc
out
pop
dec
aaa
jp
sbb
push
aad
pop
into
add
jno
sub
or
out
adc
jne
dec
xchg
add
adc
lret
pop
xor
xor
cmp
sbb
or
push
and
ds
cmc
and
or
and
ds
mov
inc
and
mov
negl
and
jbe
scas
int3
sub
lds
and
adc
sub
jle
aas
decb
sub
cli
push
addb
lods
push
in
inc
fnsetpm(287
xor
popf
inc
fldl
data16
sub
int3
mov
loop
and
pop
aas
lds
flds
add
test
or
addr16
data16
stos
add
repz
adc
test
cmp
movsl
inc
dec
das
out
xchg
inc
adc
cli
div
shl
mov
dec
sbb
add
xor
and
insl
call
push
jb
push
ret
nop
lods
push
pop
pop
test
stos
out
dec
out
loop
inc
add
mov
lahf
lods
out
inc
jno
push
mov
xlat
fwait
cmpsl
sti
sub
pop
jmp
outsl
scas
xor
fcmove
fwait
loope
sbb
daa
stos
das
mov
ficompl
fstps
sbb
fldl
adc
das
loop
fimull
pop
push
jecxz
mov
dec
mov
nop/reserved
and
or
sbb
ret
jp
inc
and
or
lods
xchg
jae
add
adc
ss
pop
out
mov
jnp
mov
or
pop
dec
lods
pop
aaa
jo
cmp
add
ja
adc
repnz
and
jge
filds
addr16
ret
mov
test
sub
dec
xchg
inc
xchg
inc
loopne
mov
pushf
pop
sub
cmp
das
push
lret
inc
push
xchg
out
xor
dec
pop
pop
xor
cmp
jl
std
ja
stc
sbb
out
out
aaa
rcll
or
pop
ficoml
mov
fldl
xchg
pop
lcall
sub
adc
pop
mov
mov
ficompl
fldcw
ja
lret
popa
in
mov
mov
pop
mov
movsl
test
cmp
and
adc
stc
out
movsl
imul
xor
popf
test
in
pop
inc
xor
fwait
inc
inc
xchg
cmp
dec
fadds
repz
pop
adc
rcrb
jle
into
in
loopne
inc
inc
mov
fcomi
mull
nop
inc
adcl
in
lret
or
cld
sbb
pop
xchg
out
insl
lcall
dec
test
leave
sub
ror
int3
push
xchg
pop
adc
dec
push
into
movb
subb
loopne
pop
pushf
mov
mov
adc
pushf
push
xor
dec
push
into
je
xchg
ret
adc
mov
jle
pop
lods
push
mov
orl
daa
inc
lret
test
out
adc
ljmp
ror
push
dec
xchg
jne
add
ret
sbb
jae
sahf
pop
adc
outsb
pop
adc
mov
jmp
and
ficoml
inc
jmp
sub
inc
out
addr16
cmpl
sahf
dec
pop
mov
push
shrl
daa
adc
andb
add
call
pop
sub
add
call
mov
subb
call
pop
sub
add
push
pop
or
push
addr16
int
inc
fiaddl
icebp
mov
fwait
sahf
mov
push
jp
fldt
mov
pop
mov
fsts
sahf
push
je
dec
add
call
inc
es
mov
addl
rolb
sbb
add
mov
inc
mov
popf
shl
iret
test
jp
push
and
pusha
data16
inc
mov
call
sub
jae
xchg
into
fistpll
or
push
or
push
and
cmp
mov
fwait
mov
sbb
cli
int3
push
cmpsb
sahf
pop
cld
ja
lret
or
mov
rclb
rolb
addr16
call
and
int
dec
mov
fidivrs
jge
xor
mov
inc
adcl
mov
cmpsb
inc
aaa
addb
inc
xchg
addb
inc
dec
cli
insl
data16
data16
mov
lock
lea
cltd
dec
popf
xchg
in
pop
add
ror
add
bound
cltd
or
sbb
lods
or
sub
add
dec
mov
aas
sbb
push
inc
test
iret
cwtl
lret
xchg
cmpsb
inc
jns
xchg
cld
xor
rclb
decl
inc
out
andb
mov
adc
into
add
xchg
mov
xchg
addb
xorl
xor
movsl
xchg
outsb
push
inc
xchg
pop
int
pop
mov
pop
icebp
and
mov
adc
cmp
ja
mov
pop
fidivs
xor
pop
pop
push
xchg
aas
into
push
and
sub
xchg
out
sub
sbb
movsl
movl
pop
test
xchg
faddl
or
into
mov
das
push
add
or
fmuls
or
adc
inc
dec
cmc
inc
jae
xchg
test
xor
pop
push
xchg
cmp
iret
test
dec
shlb
adcl
cltd
cmp
mov
mov
push
or
lahf
out
sub
cli
cld
inc
inc
cmp
and
or
xor
xchg
xor
cld
cmp
sahf
add
dec
movsl
cld
test
dec
mov
add
in
cmp
outsb
pop
test
xor
test
out
icebp
sub
pop
fimuls
insl
pop
ret
hlt
dec
mov
push
test
fiaddl
push
jecxz
fldenv
fcmove
sub
xchg
aam
xchg
or
adcb
push
sub
inc
stos
in
sbb
subb
loop
pop
xor
xchg
movsb
and
stos
popa
decl
fwait
xchg
outsb
rorb
test
lcall
inc
or
push
sbb
or
out
fwait
daa
cmp
sub
jo
or
adcl
jno
cmp
enter
int
fwait
sti
shlb
add
pop
dec
fs
xor
roll
faddl
xchg
fcmovu
ret
push
mov
sbb
or
jno
repnz
ret
ljmp
mov
repz
sti
mov
into
push
cmp
mov
jmp
mov
inc
mov
in
cmp
adc
dec
sub
dec
in
push
mov
iret
push
pop
mov
rorl
mov
adc
hlt
and
mov
adc
cmpsb
mov
addb
dec
xor
mov
pop
loopne
mov
enter
pop
sub
sub
outsl
mov
insb
mov
xchg
or
ret
or
xor
jno
cmp
or
xor
xchg
cld
pop
cmpsb
test
mov
cmpsl
xlat
or
rcr
and
fistps
adc
out
clc
cmp
mov
xor
dec
pop
and
mov
push
cwtl
xor
int
into
sahf
push
sti
daa
out
int3
pop
out
pushf
stc
pop
jecxz
movsb
xor
out
or
arpl
add
mov
pop
call
xor
push
xor
sahf
lods
movsb
jnp
xor
cld
lret
push
or
mov
xchg
add
scas
cltd
jno
arpl
sub
mov
into
or
push
mov
sub
shlb
or
push
jl
mov
hlt
mov
popf
pop
mov
mov
or
xchg
adc
push
ret
outsb
ds
push
or
imul
xor
mov
xor
cmp
push
cmc
pushf
fstpt
int3
andb
daa
mov
or
mov
fimull
insl
mov
test
mov
push
cmp
cmpsl
pop
arpl
mov
cmp
fwait
adc
lret
out
jno
imul
sbb
insl
mov
xchg
das
orl
push
lret
imul
cmp
xorl
movsb
push
and
mov
pop
fimuls
cld
addr16
inc
in
inc
adc
add
sbb
shrl
cmp
pop
push
mov
or
movsb
jecxz
dec
xchg
jae
cmp
sahf
push
out
pop
or
pop
dec
adc
lret
les
mov
aam
xor
in
inc
sbb
mov
lcall
imulb
inc
sub
jmp
int
stos
mov
mov
inc
pop
push
data16
fmuls
jge
jmp
fisttps
std
mov
mov
jne
in
aam
je
das
and
adc
jb
into
mov
and
xchg
or
sub
xor
sbb
xor
ror
or
fisubs
iret
or
pop
test
or
sub
xchg
adc
out
or
rcrl
daa
push
cmp
jp
dec
pop
jle
das
jbe
sti
lock
mov
daa
push
and
test
sti
cmpsl
das
or
pop
sub
pusha
cmp
movsb
xchg
mov
add
sbb
mov
dec
hlt
mov
xchg
or
fcmove
xchg
sahf
mov
adc
cmp
int3
mov
sbb
jmp
cmp
xor
int3
inc
dec
dec
hlt
add
push
dec
mov
dec
cmp
xchg
pop
pop
push
into
cmp
jnp
inc
mov
lock
add
lds
aam
pop
pop
into
pop
out
repz
xchg
xchg
js
pop
test
clc
and
add
sbb
mov
idivl
xchg
mov
cs
aam
aaa
out
pop
cmp
mov
test
nop
negb
pop
pop
mov
or
popf
pop
xchg
add
add
jl
jmp
or
out
add
adc
dec
pop
and
mov
cltd
jmp
jne
and
mov
imul
ret
pop
sbbb
jmp
mov
jmp
dec
jne
and
mov
sti
stc
cmp
loopne
jmp
andb
mov
inc
loopne
les
daa
pop
inc
mov
sbb
lcall
ja
jb
hlt
aam
add
mov
sar
jnp
pusha
data16
adc
add
cmp
sub
mov
jnp
pusha
daa
adc
pop
jmp
sub
cmp
jmp
jb
cli
pusha
scas
lock
and
sub
arpl
jmp
out
mov
bsr
jno
mov
cmpb
ret
sahf
leave
es
pusha
jae
pop
loopne
orl
dec
inc
call
inc
clc
dec
cli
or
push
or
enter
pusha
and
sbb
bound
and
lock
mov
lods
adc
inc
push
xchg
test
movsl
add
into
movsb
sub
iret
popf
xorb
lds
insl
adc
inc
ljmp
rcl
icebp
sbb
mov
insb
jnp
mov
jne
dec
imul
add
andl
sub
es
testl
fcompl
cmpl
aaa
push
idivb
pusha
enter
imulb
iret
sbb
rcrl
lret
cmp
xchg
dec
mov
in
adc
push
adc
ljmp
std
mov
inc
in
idivl
frstor
int
add
call
inc
fadd
arpl
xchg
sahf
pop
inc
dec
pop
xor
aaa
inc
mov
add
push
mov
jge
lahf
cmp
mov
mov
pop
dec
push
jne
inc
test
lods
nop
rorl
lret
push
iret
mov
inc
push
dec
mov
repnz
fnstenv
push
insl
int3
in
iret
add
dec
int3
mov
sbb
xlat
scas
jae
cmp
sub
or
jg
fldt
add
dec
adc
divb
cld
xorl
jle
or
or
nop
dec
or
shlb
or
sub
std
jbe
aas
jbe
mov
mov
adc
or
loope
rorb
fsubl
ficoms
xor
test
and
push
cli
cwtl
ss
stos
sub
pop
insb
test
xor
push
sbb
loopne
jmp
adc
imul
dec
xchg
incb
ret
std
mov
sub
outsb
mov
sub
dec
xchg
test
pop
jne
aaa
mov
cmp
add
cmp
jb
fdivl
ror
cli
xor
loop
xlat
jo
cltd
stc
push
or
out
fs
xor
sbb
repnz
imul
inc
lret
aaa
or
gs
out
pop
mov
fwait
xor
lret
insb
or
mov
stc
inc
fsubl
mov
in
xchg
sti
daa
xor
mov
push
stos
sub
sub
dec
cmp
cvtps2pd
jecxz,pt
or
mov
jl
push
mov
xor
aas
outsl
stos
mov
xlat
or
mov
fildll
das
scas
push
jnp
or
cmp
jecxz
or
loope
in
push
aam
fdivs
hlt
bound
shlb
inc
rcr
mov
and
push
and
mov
adc
imul
push
mov
or
mov
dec
fmull
jmp
iret
dec
mov
jp
or
xchg
mov
in
mov
cmp
or
mov
mov
sbbb
mov
ret
test
sub
ret
cwtl
jp
adc
push
mov
dec
loopne
aam
mov
or
scas
ja
imul
add
sub
int
jge
in
dec
lret
cld
sbb
push
jno
or
jl
test
rcrl
ja
scas
xor
das
out
imul
xchg
sbb
call
loope
lea
les
or
or
cs
cmp
mov
jl
sbb
push
rcrl
scas
cmp
mov
stc
cmp
or
jmp
push
inc
rcr
sub
mov
mov
cmp
sub
fldenv
cmp
xchg
push
data16
xor
and
andb
jg
popl
mov
sbb
cmpsl
push
in
or
jae
and
add
sahf
lea
movsl
cmpsl
lahf
sbb
cwtl
sub
cmpsb
cs
imul
sbbb
in
leave
pop
sbb
sub
jno
addr16
clc
inc
lret
ljmp
mov
lds
mov
aad
outsb
add
cwtl
shlb
push
sub
sbb
sub
sub
xor
lret
ljmp
stos
mov
pop
movsb
sub
push
fwait
das
mov
xchg
rcrl
or
dec
fmuls
dec
and
ret
xchg
or
in
imul
testl
or
adc
add
lods
pop
insb
or
imul
adcl
or
pusha
fstpl
jne
fimuls
sub
pop
dec
inc
mov
mov
lret
pop
add
scas
mov
push
ret
aam
inc
add
mov
or
jo
int3
dec
cmp
sub
sahf
cmp
or
es
pop
or
scas
ljmp
mov
add
mov
outsb
mov
xor
in
and
gs
ret
xor
lds
sbb
movb
jo
mov
out
movsl
imul
dec
mov
mov
aam
sbb
sub
jmp
cmp
stos
jno
cmpsl
stc
adc
int
out
or
mov
out
mov
lcall
and
mov
mov
nop
rcrb
insb
lods
mov
jo
sbb
or
stos
push
adcl
mov
movl
push
int
mov
jnp
sahf
aaa
push
push
imul
or
repz
sub
or
inc
fs
test
mov
cmc
sahf
sti
stc
aad
or
out
jl
or
daa
mov
mov
loopne
test
in
fidivl
jne
ret
aad
cld
sub
push
enter
shlb
mov
dec
or
mov
push
or
notl
mov
or
xchg
cmc
mov
dec
or
std
call
add
sbb
stos
mov
icebp
mov
fs
sub
arpl
roll
cmp
pop
dec
in
outsl
add
scas
sbb
dec
dec
lds
lods
add
cmp
sbb
or
out
in
xor
out
mov
cmpsl
es
xchg
lret
push
dec
mov
lahf
div
and
sbb
sub
jae
addr16
cltd
cld
fbstp
mov
jne
add
fmuls
lret
mov
fmull
test
xchg
mov
aaa
or
repnz
pop
or
lea
ja
and
in
mov
jno
sbb
push
cli
mov
loop
enter
push
rclb
das
in
xchg
jno
or
std
sbb
inc
adc
push
pop
test
mov
cltd
int
outsb
in
sarb
xchg
push
xchg
rclb
and
mov
aaa
inc
je
int
and
push
fmul
and
iret
fisttps
popa
xchg
and
pop
jmp
add
cmovg
inc
push
pushf
daa
pusha
push
cwtl
xchg
hlt
or
xor
mov
jecxz
xorb
fs
xor
pop
xchg
dec
cmp
and
mov
mov
out
or
popl
lret
fisttpl
cmpsb
and
addr16
inc
lret
add
mov
push
push
or
in
jo
or
xor
cmp
inc
or
sub
mov
cwtl
pop
cld
push
mov
xchg
shlb
gs
or
scas
mov
push
sbb
pushf
mov
push
push
ljmp
push
jne
sbb
in
scas
fildll
mov
mov
int3
enter
outsl
mov
shll
call
shr
fcomip
leave
mov
mov
pop
call
or
stc
mov
sub
jae
cmpsb
sbb
fstpl
mov
call
sub
mov
in
jl
fimuls
pop
jno
sub
mov
aam
bound
movl
lods
or
dec
cwtl
or
ds
in
xor
jno
jp
or
mov
ss
into
push
out
rcl
pop
popa
or
push
dec
int
and
and
loope
aaa
imul
arpl
mov
adc
xor
adc
setle
push
xchg
icebp
fstps
jmp
dec
fisubs
cs
xchg
jns
ds
arpl
or
mov
sub
add
and
mov
int3
mov
xor
sbb
mov
jle
outsb
cli
push
or
pop
sahf
test
pop
mov
aas
call
sti
lret
in
gs
fistpl
adc
jne
jnp
or
push
dec
dec
cmpsl
or
mov
aaa
inc
lcall
jne
or
mov
xchg
test
clc
int3
les
or
out
xchg
outsl
shll
test
push
sub
xchg
or
xorb
rol
jp
sub
and
mov
leave
mov
or
mov
out
adc
push
cltd
or
mov
fsubrs
pop
xchg
pusha
jns
sub
dec
sub
aas
mov
orb
std
or
xor
xor
adc
popl
fldenv
stc
test
mov
mov
fwait
test
mov
and
pusha
or
mov
jb
ret
call
add
fcomp
sti
int
imul
and
xchg
sbb
das
mov
jo
jg
js
cltd
pop
int
ds
or
mov
sti
or
aas
push
call
pop
aam
push
ret
je
xor
xchg
and
sub
or
enter
push
pop
add
outsb
or
xor
bnd
jmp
ret
sbb
std
mov
mov
jmp
jecxz
jb
insb
or
sbb
jmp
std
rolb
call
inc
pop
hlt
shlb
or
mov
sahf
les
mov
imul
popa
pop
fwait
push
mov
jnp
sub
ja
sbb
or
dec
das
and
or
popa
jne
ds
loop
in
and
jl
loope
es
lds
imul
fcmove
aaa
cmpsb
cmp
add
int3
into
addr16
scas
in
sub
or
pop
es
jp
lods
aaa
xchg
push
pop
xchg
mov
int
pop
add
sbb
fmuls
rorb
dec
mov
sbb
clc
mov
lahf
mov
mov
jl
rolb
xlat
push
or
xchg
adc
xor
and
inc
mov
xchg
jnp
xchg
lcall
xor
or
mov
mov
outsb
sub
pop
fwait
testb
adc
arpl
out
sub
mov
fs
sub
pop
adc
inc
insb
out
pop
add
int
or
fwait
xor
xor
mov
mov
or
rcrb
fldl
inc
or
adc
testb
movsl
aam
add
xor
or
xor
fmul
sti
out
out
or
xchg
int3
dec
push
mov
or
xchg
inc
in
les
popa
ja
or
int3
mov
cmpsl
adc
sub
fnstenv
jp
jno
push
or
mov
out
sub
dec
mov
inc
mov
or
xor
adc
xchg
xchg
or
lret
fwait
xchg
sbb
rclb
hlt
or
rcrl
mov
dec
scas
out
popf
mov
cmpsb
xor
cwtl
sbb
rcl
or
outsb
push
scas
rcll
mov
call
push
fisttps
dec
repnz
inc
inc
rclb
insl
xor
xor
push
in
and
roll
clc
shll
daa
mov
dec
fwait
imul
or
jb
jo
stos
xor
mov
bound
pop
cmp
fs
cmp
push
rcrb
shlb
pop
push
or
lods
mov
xlat
orb
cli
lret
inc
lods
imul
repz
ret
or
vpcmpgtd
push
or
loope
sbb
jae
cs
outsl
cltd
cmp
pop
or
out
dec
and
jg
scas
popa
inc
movsb
mov
jne
out
cmp
pop
ret
clc
das
add
dec
xorb
xor
inc
dec
out
and
lds
clc
movb
into
cmpsb
cmp
pushf
sti
dec
pop
mov
sub
or
adc
imul
lods
lahf
inc
push
shlb
and
sub
sub
sub
xor
outsl
or
jne
fstpl
xchg
clc
not
pop
or
sub
rorl
cmp
cmp
mov
int
inc
fwait
aam
ss
pop
mov
add
xor
shlb
stc
or
xlat
or
aas
mov
repz
adc
jl
enter
xor
pushl
sub
aam
and
mov
jecxz
ret
jne
das
stos
ds
ds
imul
int
cmpsb
jno
mov
lahf
push
orb
fsubs
xor
or
mov
out
mov
cmpl
das
inc
movsb
dec
insb
cmp
and
push
or
lea
imul
push
inc
out
push
iret
ror
or
dec
in
mov
or
add
fsubs
sub
mov
ljmp
and
xchg
sbb
xorl
les
test
dec
jnp
mov
jmp
xor
xor
or
stc
gs
shlb
xchg
jns
int
push
das
adc
mov
into
inc
lahf
push
addr16
lods
ret
or
or
test
xchg
test
scas
or
std
dec
dec
int3
xchg
stc
ficompl
sbb
jne
out
mov
int3
aam
and
dec
fwait
inc
insl
jo
sub
pop
ret
ret
inc
xchg
sub
ret
jg
loopne
mov
sub
or
xor
inc
mov
data16
test
and
std
int3
jmp
mov
xor
and
shlb
enter
mov
bound
or
mov
hlt
mov
mov
lcall
js
cmp
cmp
fisubrl
int
push
arpl
mov
or
jmp
inc
aad
add
xchg
stos
sbb
push
cmp
xor
test
xchg
xchg
and
mov
lret
rorb
sub
mov
mov
or
jmp
or
push
push
hlt
int3
or
mov
fisttpll
mov
jl
mov
in
xor
addr16
dec
lret
pop
and
das
or
icebp
out
mov
or
es
stos
and
xchg
mov
rorl
lds
pushf
lods
sub
sub
or
imul
jg
xor
mov
leave
lods
jae
sbb
mov
mov
lods
jbe
inc
rcl
or
dec
or
sbb
add
addb
push
test
or
push
lret
or
insb
ljmp
jno
imul
jo
lock
sbb
mov
mov
mov
into
xor
xchg
sub
push
or
test
cmp
xor
xchg
jnp
sbb
iret
mov
lods
cmp
mov
or
daa
mov
sub
xor
subl
bswap
out
mov
dec
call
xor
in
sarl
arpl
mov
out
or
out
jns
fstpt
mov
xor
push
int
ret
nop
sbb
cld
js
xor
and
push
aas
sub
adc
or
fsubl
dec
sbb
xlat
cli
jae
cmove
or
cmp
push
stc
lret
cli
add
int
or
and
sub
in
pop
pop
lds
or
les
jmp
inc
fstps
aad
or
mov
cmp
shrl
test
pop
adc
repz
adc
data16
or
mov
cmp
mov
aam
adc
push
or
test
push
cld
push
pop
jnp
cmp
or
loop
stc
sti
and
sar
pop
mov
xor
das
mov
ret
out
in
cmp
enter
xor
adc
cmp
les
cli
jl
jp
mov
icebp
js
or
push
fistpl
aas
incl
mov
pop
hlt
mov
add
shll
xlat
syscall
jmp
out
jg
or
jbe
push
mov
lds
mov
dec
lcall
inc
mov
xchg
aaa
mov
inc
pop
dec
mov
inc
or
add
imul
loope
xchg
cmp
sub
pushf
movsb
aaa
ret
adc
int3
in
ds
push
out
lods
inc
fdivrl
addb
fsubl
push
sub
leave
jns
xor
aad
mov
dec
push
pop
cmpsl
jne
xchg
shl
dec
mov
xor
lods
add
pushf
in
xor
mov
lods
jne
mov
push
sbb
out
and
mov
cmp
jns
push
or
int3
inc
rol
xlat
les
jl
sbb
mov
test
or
pushf
fimuls
jl
mov
icebp
mov
andl
aaa
push
fidivs
inc
adc
fisttps
mov
fdivs
cmpsl
xor
push
js
xchg
inc
dec
insb
sbb
movsb
aaa
pop
gs
mov
and
pop
and
adc
adcl
js
fimuls
dec
inc
dec
lahf
movsl
push
sbb
xchg
inc
daa
xchg
cs
push
or
lds
mov
aaa
aad
dec
sbb
sbb
in
inc
cmp
mov
inc
mov
loope
mov
call
pop
int
cli
add
ret
sti
xor
in
or
cld
mov
xchg
aaa
ror
sbb
adc
cli
repnz
es
jns
addr16
addr16
pop
std
inc
xchg
sbb
push
jmp
mul
cmc
and
std
add
hlt
js
in
mov
sub
add
pop
mov
adc
hlt
or
add
lea
hlt
das
or
mov
inc
sti
dec
inc
mov
test
shlb
scas
mov
lcall
movsl
cmc
shr
sar
pop
repnz
js
sbb
mov
lahf
js
mov
pop
push
shlb
or
or
daa
ficompl
ljmp
idiv
scas
mov
mov
stos
jbe
ja
lahf
jg
jb
or
add
ss
jns
xchg
hlt
sub
pushf
or
inc
loope
xor
daa
xchg
lds
and
aaa
enter
mov
and
vcvtpd2dqy
mov
jne
out
pop
packuswb
pop
lahf
sbb
sbb
addl
aas
adc
leave
inc
dec
jno
int3
mov
dec
popf
sbb
inc
data16
add
cmp
mov
jl
mov
xlat
push
sbb
arpl
movb
sbb
or
es
sar
out
pop
add
dec
ror
and
sbb
into
sbbl
aad
data16
xor
iret
mov
mov
sub
jno
add
mov
jno
fisttpl
or
mov
mov
fcomi
test
inc
dec
movsl
dec
cmp
cmp
push
dec
xchg
add
cli
and
les
adc
jle
mov
cmp
cmp
hlt
pop
jge
xor
cmp
ficompl
lahf
push
xchg
jmp
xchg
sub
shll
add
std
incb
int
rolb
mov
js
push
and
lcall
or
push
mov
nop
hlt
or
data16
push
mov
jb
push
fiaddl
jle
push
test
adc
inc
call
xchg
mov
mov
sbb
clc
inc
pop
movb
enter
sub
cld
int
inc
in
sub
aaa
push
pop
xchg
test
mov
mov
pop
sub
call
out
mov
xchg
scas
mov
sub
call
cmp
and
inc
adcl
pop
mov
fsubl
in
pushf
or
mov
adcl
cmp
add
mov
dec
inc
xchg
sub
mov
mov
xor
push
out
mov
lahf
mov
fldl
test
xchg
or
push
daa
and
mov
cmp
or
push
rcl
popa
and
into
cmp
cltd
pop
add
aaa
add
insb
sub
pop
pop
mov
sti
mov
pushf
adc
cmp
push
jbe
popf
pop
daa
sbbb
sbb
movsb
lahf
es
jle
cmp
push
mov
pop
or
int3
enter
testl
scas
int
or
test
jno
lahf
lret
xor
mov
mov
pop
fcomps
in
daa
int
mov
lahf
repnz
jbe
lahf
ds
pusha
mov
jnp
aad
loopne
cmc
cld
call
mov
mov
push
cmp
in
xlat
cmpsb
pop
lods
lret
lea
mov
mov
pop
dec
inc
test
add
sahf
mov
mul
mov
dec
xor
loopne
icebp
data16
fdivrs
cltd
and
add
sbb
adc
inc
insb
or
add
mov
pusha
cmp
cmp
mov
pushf
add
addr16
outsb
or
lea
mov
dec
pop
xchg
or
and
aaa
sub
cmp
xchg
sti
jne
movsl
add
cmc
mov
lret
cli
mov
or
dec
addl
adc
or
dec
ja
std
xor
gs
mov
add
add
popf
mov
out
lahf
test
in
mov
sti
adc
pop
enter
xor
pop
push
adc
sub
add
jg
xlat
mov
mov
inc
xchg
dec
lret
pop
dec
dec
sbbl
lcall
test
popf
mov
mov
inc
sub
sbb
test
dec
sahf
sub
jp
inc
cwtl
sti
popf
lds
push
or
repz
repnz
push
inc
sti
jnp
pop
mov
mov
popa
in
add
inc
leave
pop
jl
xor
sbbl
addl
sbb
adc
sbb
sub
daa
cmp
xchg
xchg
mov
xchg
sarl
dec
fisttpl
imul
push
and
aam
xchg
xchg
mov
push
in
jno
mov
mov
push
flds
les
push
in
xchg
in
lea
fwait
or
cmp
mov
mov
jne
leave
dec
and
into
inc
adcb
stc
mov
add
jb
xor
mov
repz
dec
rorl
mov
mov
popf
sbb
divb
fstpt
pop
call
test
fmull
fstps
xor
sbb
xchg
jp
mov
mov
cmpsb
mov
jae
cmp
int
push
xchg
mov
out
mov
or
xor
mov
push
lcall
adc
shlb
ss
jo
or
std
dec
ror
rcrb
add
inc
sub
aam
sub
pop
lret
or
inc
loopne
add
ds
jne
in
out
popa
push
das
fs
jae
xor
fwait
jno
sub
icebp
movsl
inc
or
add
xor
mov
sbb
mov
lret
pmaxub
sub
adc
or
sbb
mov
add
data16
ret
mov
aad
push
aaa
ljmp
loopne
jl
lret
adc
dec
dec
cmp
out
js
call
aam
lods
add
fiadds
test
sbb
in
mov
ret
mov
arpl
or
or
sub
movsb
jmp
rorb
jl
sar
or
imul
ret
decl
sub
xor
leave
push
fdivrp
mov
lods
cmp
cmpsl
icebp
dec
fdivs
xchg
inc
mov
rsm
mov
jge
out
mov
movsl
in
scas
or
mov
inc
test
pop
call
or
mov
cmp
cmp
movsl
sub
pop
lds
adc
fldl
mov
fists
sub
fs
push
pop
dec
ret
je
mov
xor
ss
or
leave
dec
sar
add
les
cld
test
repnz
dec
lret
add
adc
cmpsl
hlt
sbb
stc
jge
mov
test
out
pop
push
mov
xor
aaa
inc
xchg
sysret
add
pop
cmp
xor
mov
mov
mov
mov
inc
lret
adc
das
fdivs
pop
mov
xchg
js
movb
mov
cmpsb
ds
lret
mov
out
xchg
pop
cmp
pop
inc
mov
lret
sti
add
sar
sbb
cmpsb
and
push
dec
sbb
dec
or
cmp
enter
push
push
rorw
push
push
mov
lcall
stc
loopne
mov
test
rorb
mov
insl
pop
aaa
mov
adc
push
or
test
int3
sub
pop
test
dec
sbb
aad
or
jne
adc
pop
daa
dec
xchg
incl
lcall
outsb
test
ret
jno
pop
and
lds
jp
adc
out
popa
mov
jp
rorl
xor
mov
stc
sub
cmp
repnz
out
cld
js
sbb
inc
dec
leave
mov
adc
loopne
xchg
cmp
es
mov
mov
movsl
scas
xlat
jl
inc
and
lea
loopne
mov
testb
andl
add
cmp
sub
mov
add
and
pop
adc
aad
insl
lahf
sub
adc
fistl
mov
leave
fsub
aas
arpl
pop
lea
sub
fs
dec
testb
fsubs
fcmovne
iret
mov
flds
push
psubd
sar
cli
jbe
iret
push
mov
in
aaa
fidivrl
jle
fcoml
inc
adc
xor
mov
adc
adc
mov
add
sbb
lahf
out
push
daa
dec
outsb
pop
sbb
clc
or
add
push
or
in
sbb
lea
sub
rcrl
arpl
jnp
test
add
mov
xor
sub
jg
fadds
sbb
lahf
mov
mov
rcl
out
mov
cli
push
arpl
roll
dec
sbb
test
dec
icebp
mov
mov
cmpsb
hlt
subb
cwtl
lds
add
dec
loopne
inc
dec
mov
fisubrl
test
xchg
cltd
repz
or
shlb
imul
sahf
xchg
movsb
fidivrl
ret
xchg
mov
cmp
push
out
cmp
xchg
testl
fadd
or
push
int3
sub
movsb
fistps
xorb
ja
dec
out
out
aad
xor
mov
xor
jne
outsl
mov
scas
xchg
pop
or
movsl
mov
jns
push
add
mov
mov
bound
sub
cli
cld
mov
xchg
adc
fs
aad
mov
push
scas
xchg
push
and
stc
dec
in
sub
sbb
jne
mov
not
gs
orb
ss
in
js
jmp
dec
incb
dec
or
lods
push
into
or
xor
or
adc
das
enter
push
push
inc
lret
aad
and
shrb
push
mov
std
cmp
call
ror
out
add
cltd
in
and
jne
mov
push
sysenter
jmp
mov
or
mov
call
mul
inc
cmp
lret
adc
mov
movsl
inc
inc
mov
and
pop
push
adc
or
push
cmp
lea
ljmp
xor
sub
add
bound
jo
rcrb
shlb
sub
dec
push
mov
pop
xchg
add
int3
loop
sbb
ror
cltd
in
sbb
jle
daa
hlt
test
or
cmc
mov
out
addr16
mov
or
add
and
push
int3
xor
sbb
jne
dec
or
fistpll
dec
add
data16
negl
fstpl
jle
rcrl
dec
pop
inc
mov
ss
leave
lcall
das
and
int
jge
mov
xchg
jecxz
push
stc
or
jmp
enter
add
cmc
pop
xlat
sub
or
fstps
mov
mov
sbb
inc
movsl
push
push
or
test
xchg
or
mov
lret
jb
out
rorb
sub
add
in
or
adc
sub
cmp
lret
mov
or
inc
xchg
insl
mov
in
add
roll
out
sub
xchg
push
xchg
ret
sub
mov
inc
outsl
je
stos
or
int3
xor
jp
fwait
adc
ret
cmp
and
sbb
or
xchg
xchg
adc
popa
mov
xchg
mov
mov
cs
fs
cmp
sahf
dec
movsb
clc
bound
cmpsl
pop
in
xor
inc
out
nop
jge
inc
bound
cltd
int
lret
adcb
and
xchg
cmp
jne
mov
fstpt
pop
in
pop
pop
mov
mov
jb
or
mov
cmp
or
pushaw
xchg
inc
or
notl
test
enter
cwtl
scas
or
repnz
cmc
int3
mov
lds
mov
or
push
ljmp
inc
mov
jb
cld
mov
mov
or
xchg
dec
add
or
dec
sbb
cmp
or
mov
ds
jmp
jp
pop
loop
mov
es
ret
fs
aam
xchg
sub
adc
mov
mov
dec
xor
or
outsl
mov
add
in
dec
xor
sahf
std
pop
and
push
mov
or
mov
adc
cmpsl
adc
pop
mov
and
dec
aas
repnz
js
call
lret
pop
push
and
std
movsb
lret
xchg
xchg
and
rorb
dec
push
jg
jl
or
out
add
and
pop
nop
or
lret
aam
or
call
push
stos
sub
push
cmc
dec
inc
mov
ja
movsb
xor
push
int3
sub
lahf
jmp
xor
js
and
cmc
aam
dec
jg
in
sub
xchg
or
sti
mov
or
in
test
push
loope
scas
add
in
out
xor
sbb
mov
lods
clc
mov
imul
cmp
xor
jnp
pop
ret
rclb
or
jg
or
inc
pop
cli
and
adc
jmp
xchg
sub
inc
dec
mov
mov
popf
addl
nop
jo
and
les
pop
je
bound
pusha
mov
or
xor
cmp
cmc
xlat
daa
or
cli
cmpsl
adc
dec
pop
scas
movsb
ret
push
jo
cmp
or
add
in
or
jecxz
stos
sub
iret
cmpsb
mov
jp
inc
xchg
pop
xor
sti
or
stc
xor
std
or
shll
pop
mov
pop
movsb
sti
mov
rcr
or
test
push
lds
call
loope
or
cmp
mov
cmpsl
lcall
lods
neg
or
aam
mov
stos
mov
das
shlb
rcrl
jmp
ret
xor
push
cmp
repz
or
xor
cli
or
pop
in
ja
sti
andb
xor
push
xlat
std
fnstenv
movsl
sbb
mov
ficoml
mov
pop
or
pop
mov
mov
enter
popf
xor
pop
adc
cmp
mov
mov
jl
add
jg
fisubs
mov
sahf
stc
imul
imul
adc
stos
xor
adc
jo
insl
xor
mov
mov
mov
or
out
or
or
pop
push
add
xor
and
xor
dec
mov
sbb
sub
or
test
dec
or
pop
mov
pop
fstpl
test
pop
xchg
clc
fisubrl
adc
out
rcll
aad
or
sbb
decl
push
lret
outsl
decb
push
int3
inc
and
icebp
sbb
in
xor
ret
lods
rcrl
mov
push
or
scas
andl
or
mov
push
jbe
pop
insl
popa
jns
out
scas
fisttpll
dec
test
lret
cmp
or
rcrl
scas
call
in
lods
mov
enter
clc
lods
addb
push
stc
pop
or
add
pop
inc
or
mov
mov
pop
add
rorl
adc
mov
out
push
hlt
call
adc
enter
js
std
adcb
dec
jmp
shlb
lret
ret
inc
jne
ret
or
das
pop
mulps
jns
dec
daa
xor
sbb
ficompl
sbb
test
mov
lret
add
xchg
mov
shlb
daa
mov
jb
iret
or
jo
es
xchg
rcr
in
or
movsb
int
jns
jge
data16
and
pop
xchg
cmp
aam
inc
mov
fidivrs
lds
jp
sub
hlt
repnz
movsl
inc
push
xor
xlat
aaa
inc
xchg
sbb
subb
lea
inc
into
mov
repnz
sbb
int3
push
cld
mov
add
mov
loope
dec
aad
mov
fnsetpm(287
adc
adc
xor
mov
mov
xchg
sbb
fs
stc
sbb
loop
xchg
test
jne
bswap
cmp
add
ljmp
dec
pop
out
xchg
jne
vpaddq
into
sub
jle
fiaddl
mov
bound
out
dec
pop
imul
mov
pop
repz
or
jmp
nop
jp
lds
ret
nop
movsl
das
pop
sub
xchg
das
ffree
inc
and
das
inc
mov
mov
aaa
add
dec
rolb
pop
cmp
jnp
fwait
cmpb
filds
in
pop
pushf
mov
xorb
cmp
loopne
std
pop
adc
add
pushf
or
mov
or
mov
mov
add
ljmp
push
or
mov
add
pop
jo
mov
mov
daa
test
stc
xor
jne
pop
or
filds
xor
pop
movsl
es
pushf
sbb
insl
xor
popa
daa
cmp
ret
mov
aas
lcall
movsl
mov
lods
mov
pop
gs
fucomip
gs
add
in
lods
pop
pop
popf
lods
pop
and
push
stos
push
or
sub
enter
lahf
sub
ret
lcall
adc
inc
add
mov
xchg
arpl
jne
cltd
mov
fidivrl
push
push
sbb
mov
dec
mov
xchg
dec
mov
push
inc
inc
inc
fsubr
xchg
mov
mov
sbb
movsl
jne
and
add
push
sti
lods
aam
mov
or
loopne
fsubs
xchg
sub
add
pop
loope
jb
das
lds
aam
out
popf
jg
lds
mov
add
insl
inc
stos
mov
cmpsb
pop
xchg
xor
add
push
dec
ret
shll
sub
int3
fistpl
loop
ret
cmp
jne
mov
mov
imul
dec
pop
sbb
and
icebp
mov
jns
ret
sub
std
out
ret
sub
or
pop
ds
or
out
stc
test
add
sub
push
jge
test
push
sti
jmp
or
mov
mov
lret
imul
ret
inc
mov
dec
cmpsb
shll
mov
icebp
or
xor
scas
xchg
sbb
or
mov
pop
xor
inc
and
outsl
ret
pop
inc
sarb
mov
lret
out
movsl
scas
fisubs
xchg
mov
inc
call
test
imul
pop
push
rcrb
mov
xor
insb
xorb
or
xor
and
addr16
sub
stc
jbe
ret
inc
cmpsl
xlat
or
pop
push
mov
cmp
mov
stos
outsl
loopne
cld
xchg
mov
xor
mov
xchg
scas
arpl
decl
jg
aas
outsl
mov
jb
nop
or
push
push
popa
es
sarl
adc
test
mov
enter
repnz
pop
in
cmp
xlat
setne
xor
mov
or
mov
or
out
mov
pop
mov
xor
cmpsb
in
les
cmp
or
mov
cli
sub
push
pop
addb
push
imul
sub
jge
jl
add
pop
or
arpl
adc
inc
shll
jo,pt
movsb
and
into
dec
loopne
test
imul
mov
rcl
or
cmpsl
mov
pop
or
imul
mov
jl
adc
fwait
mov
enter
pop
mov
andb
or
fwait
movsb
jecxz
or
inc
push
shlb
or
add
xlat
jmp
mov
std
dec
or
rorb
je
xor
push
outsl
nop
leave
loopne
add
or
mov
cmp
inc
sub
hlt
test
or
test
sub
movsb
les
or
pusha
insb
rclb
jmp
ljmp
lret
cli
pop
mov
sti
xor
sub
pop
dec
aaa
lods
popf
or
enter
mov
aam
or
sub
mov
sub
xor
xchg
jecxz
or
xor
lods
and
sbb
push
std
int
pop
leave
jo
xor
ret
cld
insb
adc
or
stc
fists
or
sbb
inc
orl
orb
movzbl
add
xor
cmc
inc
repz
in
adc
popf
int3
inc
or
xor
mov
mov
std
push
xchg
int3
jl
repnz
adc
rorl
adc
cmpsb
enter
cmp
ds
or
out
int3
dec
xor
inc
lret
fnstenv
bound
js
xor
or
mov
cmp
jae
int3
imul
xor
and
movsb
adc
jno
cli
sbb
pop
cwtl
or
es
inc
mov
jmp
mov
xchg
and
cltd
xchg
sbb
adc
push
jo
out
ja
fistl
iret
pushf
xor
pop
xor
adc
or
xchg
pop
dec
test
call
int
mov
add
or
mov
icebp
cld
or
pusha
xor
jne
mov
das
test
jno
icebp
lret
or
rorb
aas
or
test
mov
loopne
sbb
xor
adc
or
adc
icebp
test
imul
iret
mov
daa
jbe
fists
int3
enter
insl
fwait
push
insb
lods
cs
das
aaa
fimuls
pop
cmp
adc
xor
test
movsl
daa
mov
or
jecxz
je
outsb
scas
xor
lret
aam
inc
sub
or
pop
lds
fildl
push
sub
push
fwait
outsb
es
movsb
xor
insl
dec
push
add
arpl
jge
hlt
cmc
jno
jmp
xor
sbb
scas
adc
movsl
ret
ret
jg
add
test
xchg
das
mov
and
jl
test
mov
out
lea
popa
xor
xorl
lods
inc
js
std
or
cmp
push
or
xor
in
xchg
pusha
movsb
sub
nop
mov
and
inc
gs
mov
inc
fdivs
leave
mov
or
sbb
les
cltd
rorl
push
xor
movsb
push
cwtl
sub
and
stos
or
jbe
ss
push
testl
or
int3
xor
aam
stos
jle
cmp
dec
fs
orl
mov
pop
or
scas
cltd
imul
orl
mov
aad
mov
cmp
and
cmp
and
jbe
pop
or
imul
or
add
inc
into
sub
mov
fcomp
ret
fsts
icebp
test
fadd
das
push
fstpt
jmp
adc
sbb
or
dec
mov
aaa
cmp
leave
std
out
dec
jb
pop
ret
in
std
insl
mov
push
push
loope
xchg
es
push
enter
xchg
adc
movsl
add
popa
cld
mov
mov
sbb
mov
lods
sbb
cmp
aad
pop
fdivrs
mov
dec
xchg
insl
jno
mov
shlb
inc
cmp
fstpl
std
or
pop
popf
push
std
or
xor
repz
mov
dec
push
or
xlat
pop
fcmovb
push
or
xchg
fstps
aas
and
add
iret
and
mov
mull
stos
into
adc
ret
push
adc
mov
andb
into
inc
or
inc
mov
cli
out
cld
lret
stc
push
popa
aaa
mov
or
dec
mov
iret
push
lret
or
out
scas
lds
aam
lds
cmp
adc
repz
mov
dec
inc
out
out
sub
aam
imul
ret
nop
movsl
lds
popa
xchg
lahf
aam
inc
and
pop
push
dec
push
sub
adc
and
xor
mov
xor
mov
and
and
add
cmp
es
pop
mov
inc
mov
movsb
cmp
testb
fcmovnb
pushf
mov
test
std
cwtl
popf
fistpl
mov
cmp
mov
jmp
inc
insb
dec
sub
loopne
movsl
pop
xchg
out
push
inc
ret
cwtl
add
cs
loope
insl
pop
adc
hlt
repnz
xchg
sbb
adc
push
mov
xchg
xor
popa
incb
movb
pop
les
cld
in
mov
cwtl
out
fsubs
sti
xchg
les
adc
add
cwtl
or
mov
repnz
xlat
mov
aaa
mov
stos
jnp
vcomisd
mov
pusha
aas
mov
sbb
cmp
in
pop
clc
gs
or
flds
aad
fwait
pushf
testb
icebp
xor
inc
std
push
fdivs
jbe
arpl
or
cmp
push
ljmp
jo
insb
aaa
fwait
mov
fisubrl
sub
clc
add
lods
push
imul
push
xchg
mov
fdivs
imul
mov
inc
rcrb
fcmovnbe
call
mov
push
dec
or
mov
jo
mov
and
test
sub
jnp
fdivr
push
test
pushf
inc
popf
pop
es
push
cmp
pop
and
add
cs
jo
and
mov
push
mov
inc
loopne
mov
loop
inc
xchg
jo
pop
xchg
fwait
clc
fs
pop
lods
and
dec
mov
in
les
lock
mov
dec
ret
lret
jae
add
imul
jae
sti
pusha
mov
jns
pop
sbb
jl
jmp
popf
das
daa
sti
mov
dec
pop
shlb
push
jno
ja
test
xorl
bound
mov
clc
jae
imul
dec
xchg
jo
lock
insb
loopne
mov
lock
xchg
push
clc
filds
test
dec
fsubr
push
mov
push
dec
or
dec
mov
xchg
shlb
sub
push
lea
mov
loope
cmpsb
aaa
add
setbe
bound
fcomps
pop
ret
in
push
or
xacquire
mov
call
pushf
adc
sbb
int
lea
lock
cmp
add
mov
and
jnp
sahf
adc
shr
sarb
push
cmpsl
jbe
nop
arpl
mov
mov
xchg
pushf
stos
mov
jns
lds
xor
or
addr16
dec
ret
nop
jecxz
test
ret
xchg
mov
lds
cmp
mov
loopne
icebp
sbb
add
or
pop
push
test
outsl
mov
dec
mov
add
fldt
ret
and
jbe
sbb
sub
sub
or
inc
add
mov
notl
pop
adc
jb
xor
dec
and
and
cmpsl
sub
cmp
mov
add
jbe
xchg
push
jp
dec
int3
lret
mov
adc
sbb
adc
add
jp
frstor
cmp
mov
mov
sbb
insb
loopne
ja
pushf
cld
xchg
enter
adc
inc
dec
test
insb
loopne
push
mov
sub
add
fwait
mov
add
or
dec
mov
cmp
test
idivl
mov
cmpsl
and
bound
push
jne
adc
or
lock
aam
adc
mov
test
cld
ss
ljmp
add
cmp
dec
mov
and
push
mov
xor
lea
daa
or
insb
cli
mov
testb
mov
lret
ret
js
push
mov
sub
or
cmp
ret
dec
mov
or
push
cmp
dec
inc
dec
push
lea
mov
pushl
jp
lea
inc
iret
xchg
jae
mov
cmp
mov
or
and
call
int3
push
sub
inc
jb
imul
test
outsb
sbb
sbb
cmp
mov
or
clc
aas
push
jns
push
inc
fsubl
jge
ret
nop
gs
cld
mov
cltd
enter
cmp
cli
dec
addl
ret
nop
and
or
sbb
aam
lahf
or
xchg
ret
nop
and
inc
mov
or
ss
ret
push
loop
lds
mov
and
rcrb
in
sarb
pop
add
xchg
push
cli
out
icebp
xor
inc
or
bound
call
sbb
ljmp
icebp
mov
xchg
inc
cmp
cmp
sub
pop
mov
jne
xchg
lods
adc
dec
xor
push
insb
jne
adc
adc
cwtl
adc
mov
pop
sahf
xchg
dec
aam
pop
add
ffree
pop
hlt
popa
out
clc
jb
imul
loope
xchg
daa
sub
cmpsl
sub
in
sbb
pushf
or
movsb
orb
out
out
popf
call
fsubs
mov
jb
xchg
nop
inc
inc
rorb
mov
xchg
xchg
sahf
inc
dec
xchg
mov
xor
dec
ret
nop
and
dec
push
mov
xchg
inc
pop
push
push
cmp
sti
mov
out
gs
call
int3
sbb
mov
cmp
fs
mov
pop
xchg
sub
pop
cmpsb
fldenv
ficoms
sub
fisubs
movsb
mov
or
imul
mov
push
push
call
and
test
scas
push
daa
add
cmp
popf
add
xor
aaa
outsl
push
inc
mov
inc
sub
push
daa
adcb
add
std
inc
out
xor
fildl
cs
ljmp
popf
orl
xorb
push
ret
mov
loopne
push
pop
push
adc
fwait
inc
or
push
pop
sub
sbb
scas
jbe
lcall
adc
xchg
loop
enter
xor
add
mov
xchg
popf
inc
out
xchg
push
sub
mov
xchg
test
inc
adc
scas
cwtl
sbb
lds
lds
pop
ficoms
lods
xchg
daa
sbb
mov
imul
sahf
push
shlb
dec
test
stc
jbe
xor
jb
dec
icebp
mov
mov
mov
xor
push
mov
arpl
mov
aaa
ret
inc
ja
or
test
jno
ret
nop
sub
lahf
pop
dec
add
inc
popa
dec
test
xchg
cmp
filds
and
mov
add
adc
movsb
fbld
or
fcoms
xchg
lock
lds
push
lea
push
cmp
inc
pop
add
adc
pop
cmpsb
ds
mov
mov
add
jo
sbb
inc
call
ds
sbb
fstpl
lds
jo
sarl
mov
ds
adc
ret
mov
enter
mov
inc
lret
cmpsb
aas
mov
popa
and
and
and
pop
or
or
test
scas
test
push
sub
sahf
xchg
xchg
push
fistps
ret
outsb
push
bound
mov
jb
movsl
push
icebp
aaa
add
lock
push
mov
enter
sbb
mov
ds
aaa
pop
repz
pop
lods
jne
or
jp
push
mov
scas
inc
js
in
call
testl
mov
cmp
and
xchg
add
fdivl
iret
sub
decb
or
xor
mov
fs
xor
fmul
fistps
dec
out
mov
lds
in
add
int3
inc
mov
hlt
cmp
out
mov
bound
mov
cmp
xchg
jbe
sahf
addr16
xchg
out
add
and
ret
loopne
jecxz
neg
aaa
or
and
inc
pop
mov
dec
out
xchg
fs
fsubl
xchg
sbb
fisttpll
mov
push
jmpw
adc
add
pushf
bound
mov
idivb
inc
xchg
pop
sti
jne
push
call
es
jbe
xchg
pop
xchg
cmp
add
add
int
rcrl
fsubrl
inc
mov
mov
add
les
push
vpcmpgtw
mov
sub
mov
fwait
mov
xor
jle
adc
adc
loop
push
and
jge
idivb
pop
push
sub
sar
sub
out
mov
jno
mov
inc
dec
or
xorl
decb
sub
les
jmp
jae
push
dec
scas
or
sarb
push
dec
es
xchg
and
push
or
aam
sbb
mov
lcall
movsl
aad
fldl
inc
inc
scas
and
arpl
or
sbb
sub
sub
xor
and
bound
xchg
and
sbb
and
movsb
jnp
andl
call
dec
mov
pop
ds
test
leave
out
daa
push
xchg
lcall
cli
dec
jp
lahf
int
pop
pop
pop
mov
sbbl
les
pop
adc
xchg
jmp
jp
fidivrs
inc
leave
pop
sbb
lahf
add
cmp
push
enter
dec
lds
int
xor
pop
mov
push
cmp
cmpsl
lcall
sbbl
pop
out
ficompl
ljmp
pop
into
sub
sbb
ret
lret
popa
inc
arpl
jg
pop
push
push
pop
leave
enter
add
dec
and
xchg
pusha
lcall
lock
add
outsb
mov
leave
xchg
test
xor
xchg
hlt
sbb
add
dec
mov
ror
xor
pop
pop
mov
lcall
int
sahf
inc
outsl
dec
dec
mov
lds
dec
xchg
dec
mov
lock
lods
mov
lea
cmp
or
int
jle
outsb
pop
outsb
into
pop
dec
pop
lds
add
jmp
pop
dec
mov
mov
xor
and
mov
mov
sbb
inc
addb
pop
or
stos
inc
dec
mov
jp
or
pop
imul
jbe
into
pop
mov
add
test
movsb
add
fidivl
iret
add
fs
sbb
adc
flds
cmp
stos
adc
lock
shrl
sbb
xchg
popf
push
fstpl
xlat
lock
push
dec
or
jge
ret
push
out
std
or
xchg
sub
lahf
fildll
repz
dec
pop
push
aam
aaa
cmp
rorl
ret
repnz
aaa
sub
and
shr
stos
cmp
mov
int3
adc
dec
sub
dec
mov
mov
or
add
inc
xchg
dec
sub
out
xchg
fisttpll
inc
mov
inc
mov
push
hlt
popa
cmc
xchg
and
adc
sahf
adc
adc
or
xchg
dec
dec
ficoms
adcl
inc
test
popl
into
push
pop
cltd
mov
lods
cmp
ret
or
add
addr16
jo
scas
and
popf
ret
add
pop
lcall
mov
mov
inc
daa
sub
jo
lret
sarl
sarl
cmpsl
ficomps
daa
ret
imul
popf
mov
leave
push
cltd
subb
dec
mov
lcall
pop
add
movsl
inc
into
imul
sub
vmovaps
outsl
add
sub
cmp
es
and
in
lret
stos
aaa
rorl
or
sbb
cld
pushf
ds
push
pop
xchg
sbb
cli
out
mov
pop
sti
sbb
shll
xchg
out
popf
in
sbb
mov
sbb
jo
cld
add
jp
mov
lds
pop
mov
cmp
adc
mov
ret
pop
inc
sbb
sub
aaa
fstpt
popl
cli
sti
pop
add
orb
mov
mov
stos
movsl
add
shrb
dec
loopne
stos
mov
pop
decb
pop
sbb
mov
mov
sbb
jp
mov
push
push
pop
push
push
aam
lret
das
xchg
push
push
mov
inc
cmp
lock
add
xchg
sub
adc
pop
mov
ljmp
jne
pop
fnstsw
adc
faddl
xchg
outsl
pusha
aad
pop
test
rorb
frstor
int
add
or
pop
leave
fmull
cltd
jae
mov
loopne
aaa
sbb
ret
out
lock
add
int
mov
lea
sub
sbb
pop
push
push
fwait
das
aam
out
jle
pop
sub
add
andl
inc
mov
push
add
daa
adc
sub
gs
sbb
orb
xchg
das
adc
or
iret
dec
pop
inc
ret
add
sahf
sbb
sbb
ss
push
cwtl
ds
adc
xchg
stos
xor
sbb
out
iret
movl
ss
int
dec
sub
xchg
in
loop
xor
daa
xchg
push
sub
lea
pop
push
aas
pop
adc
sub
shrl
mov
ljmp
test
push
mov
add
stos
iret
sub
fisttpl
xchg
adc
lds
test
stos
sbb
fwait
sub
hlt
push
adc
repz
cmp
mov
push
or
jno
xor
mov
pop
add
dec
lret
aam
sahf
xor
mov
std
inc
mov
cld
or
pop
push
in
loop
mov
jle
mov
cmp
cli
sbb
fs
scas
dec
xchg
adc
int3
mov
arpl
insl
xchg
sub
xchg
push
cmp
cmp
cmp
fimull
scas
cwtl
add
sarl
or
xor
xlat
jae
cs
dec
ds
jecxz
xor
xchg
imul
dec
in
mov
cmp
insb
mov
clc
daa
cwtl
test
in
pushf
mov
inc
jl
cmp
popa
loop
push
pop
hlt
cltd
or
repz
sub
or
arpl
loop
loopne
cmp
cwtl
mov
cmp
add
or
xor
dec
cmp
adc
lahf
pop
stos
cs
or
incl
xlat
in
loopne
aaa
lret
stc
rcrl
in
aas
scas
mov
add
xor
cld
mov
notl
xor
jae
jl
adc
fistl
or
mov
enter
js
mov
fwait
mov
sub
sub
lret
cld
mov
leave
jbe
or
shrl
hlt
sahf
inc
scas
jge
and
push
or
inc
mov
or
or
rorl
ds
and
xchg
mov
test
call
cmpsb
addb
nop
inc
mov
jb
mov
add
ret
and
mov
ja
sbbb
stos
mov
jb
xchg
xor
fs
mov
int
mov
scas
aas
or
test
adc
or
jmp
mov
cld
test
cmp
or
lret
cli
pushf
cmpsb
punpckhwd
movsl
or
mov
lods
jl
jbe
mov
daa
sti
mov
cmc
aas
mov
data16
scas
cltd
pop
hlt
rol
or
test
push
mov
xor
pop
mov
outsl
fwait
ret
addr16
lcall
sub
out
je
rcrl
and
add
sub
ret
inc
push
lods
xor
cmp
fs
mov
in
clc
in
sub
dec
mov
jae
lcall
aaa
add
or
mov
mov
stos
cmp
or
inc
or
gs
out
and
xor
loopne
sub
jb
inc
mov
int3
outsl
loope
pop
or
push
popf
mov
aaa
outsb
aad
sahf
jne
mov
or
in
mov
inc
movsb
fisubrs
push
or
mov
lea
inc
int3
fmuls
mov
cld
xor
inc
cmp
fsubs
jnp
rorb
dec
jmp
jle
aam
clc
dec
xchg
mov
inc
fstpt
inc
or
popa
loope
push
daa
xor
jle
push
inc
or
sbb
dec
addb
mov
int3
pop
lret
xchg
inc
int3
push
adc
insb
or
push
rolb
dec
push
lret
out
or
jl
int3
xorl
gs
enter
pop
mov
int3
or
jbe
ret
rorb
insb
fistpl
push
int
push
jnp
mov
xchg
imul
daa
lods
fcmove
dec
sbb
in
call
ret
adc
mov
dec
lods
cmp
fidivrs
enter
cmp
rcll
ret
xchg
out
mov
jg
cmp
adc
or
mul
cs
xchg
fwait
add
mov
and
or
lcall
sub
fs
mov
mov
sub
test
addr16
sbb
jmp
insb
inc
push
cmp
sub
fsubl
mov
or
mov
mov
ret
pop
or
cmp
inc
xchg
movsl
ljmp
js
inc
test
ljmp
loope
aas
adc
jne
dec
mov
out
cli
cmp
sbb
data16
sub
mov
leave
xor
cmp
mov
push
push
scas
xor
daa
or
lret
push
jmp
or
inc
jp
mov
and
dec
or
js
xchg
dec
ret
aas
and
add
outsb
inc
jbe
mov
arpl
mov
sub
and
sub
or
or
ljmp
adc
in
xchg
lret
xor
xor
pusha
rolb
jae
test
xchg
cwtl
or
xor
es
subb
aam
jo
mov
or
in
shlb
xchg
test
call
js
and
in
add
mov
sub
cld
sbb
jne
aaa
xor
xor
sbb
inc
js
jne
jmp
mov
cmp
aam
das
mov
aas
pop
pop
nop
jle
fisubrl
cmp
dec
pushf
push
movsb
mov
cmpsb
scas
testl
jge
sub
lds
in
xor
out
cmp
and
int
inc
push
mov
jmp
add
add
sub
sahf
push
mov
aaa
inc
push
ret
lcall
je
loopne
mov
xor
or
out
rcrb
stc
gs
mov
xor
pop
or
pop
sbb
arpl
push
enter
std
jnp
push
xlat
and
js
gs
clc
mov
data16
xchg
or
add
or
aaa
inc
push
rorl
and
push
leave
lds
dec
mov
mov
into
ret
add
or
xchg
sti
idivl
pop
push
mov
mov
mov
dec
sub
adc
cmp
aad
in
andb
xchg
add
lods
roll
and
jg
mov
lods
lahf
adc
xor
push
fs
jns
mov
xor
mov
mov
or
hlt
add
daa
xchg
loop
jmp
add
and
sbb
shr
adc
lods
mov
enter
push
nop
gs
mov
les
jge
xchg
pop
fadd
jp
xchg
push
cmp
addr16
pop
push
aas
scas
fisubrs
leave
inc
xor
mov
aaa
pushf
or
mov
dec
imul
mov
fimull
mov
bndstx
adc
lret
push
xchg
xchg
test
dec
sysret
mov
test
int
push
jl
int3
sbb
dec
push
cmc
or
inc
or
push
push
test
cmp
js
shll
repnz
mov
out
lods
popf
inc
xchg
in
dec
and
je
add
add
jb
lret
or
or
mov
shl
insl
std
cmp
cmp
mov
xor
xlat
dec
mov
and
mov
xbegin
sub
andl
inc
sahf
jle
push
add
aad
fidivl
pop
adc
int
sub
mov
xor
bound
fdivs
mov
mov
aam
ret
and
sarb
shl
dec
xlat
inc
add
imul
or
adc
or
pop
popf
enter
and
or
aam
pushf
in
push
mov
sub
pusha
sbb
xchg
fs
sbb
mov
mov
jecxz
push
ret
mov
sbb
or
xchg
jp
push
enter
ret
addl
pop
xor
rcrb
subb
sbb
xchg
adc
or
loopne
getsec
or
in
sbb
cmp
push
push
add
fldt
sbb
cmp
mov
int
ljmp
sarb
ret
jo
je
dec
mov
jae
xor
cmpsb
xor
negl
fsub
call
mov
sub
js
push
out
shlb
or
jg
repnz
nop
loopne
xchg
or
push
and
mov
arpl
cmp
pop
das
sub
fdivrl
sub
int3
loop
or
fmuls
cmc
or
add
inc
nop
stos
or
mov
mov
popa
add
popf
pop
lods
or
xor
fcmovu
or
xor
jne
pop
sti
lods
repnz
jno
daa
mov
xchg
jns
dec
or
repnz
push
mov
xchg
mov
and
xor
pop
dec
xor
addr16
loopne
inc
les
push
addr16
lcall
dec
mov
lret
or
sbb
pop
or
arpl
xor
in
das
imul
lcall
xor
mov
fwait
rorl
push
xchg
aam
or
jmp
push
ljmp
addb
xor
sbb
int
jne
hlt
insl
push
push
fwait
mov
je
xor
repz
xorb
fsub
fnstsw
jmp
cmpsl
sbb
pop
imul
or
mov
cld
xor
cmpsl
mov
or
rcrl
or
rolb
dec
xchg
or
or
jp
int
push
lods
xchg
repnz
pop
es
loope
cmp
scas
or
pop
mov
or
sti
fwait
xchg
outsl
sub
or
and
pusha
mov
std
xor
sbb
cli
bound
hlt
dec
or
sub
pop
out
lods
clc
xor
or
push
mov
popf
ror
or
test
fldt
push
sbb
mov
push
inc
xor
sub
xchg
jno
inc
xor
iret
pop
sbb
add
fldl
push
jl
pop
push
add
push
or
fs
mov
arpl
enter
sbb
sbb
xchg
int3
in
or
fnsave
test
jp
mov
loope
sub
test
mov
or
adcl
mov
xchg
xchg
rcll
in
xor
xor
leave
inc
cmp
or
popf
pop
nop
mov
fistpll
sub
xchg
or
frstor
push
pop
xor
cmc
dec
clc
and
adc
add
in
sub
or
push
mov
orl
inc
mov
fs
jb
mov
push
and
dec
cmc
or
inc
xor
in
mov
les
scas
sarl
add
pop
mov
bound
ss
movsb
inc
or
dec
add
pop
or
or
int
movsb
add
jl
add
sub
in
rorb
push
cwtl
loop
cmp
imull
push
mov
xor
stc
test
fsubrs
or
jg
rcrl
push
mov
lcall
movb
push
adc
jne
mov
push
into
cmc
dec
jp
hlt
loop
je
lret
ss
add
lcall
out
and
pop
je
push
fadds
lods
pop
sbb
scas
enter
cmp
jne
mov
or
cmp
mov
mov
or
icebp
shrb
lcall
push
shll
mov
outsb
xchg
and
imul
in
or
push
lret
dec
jne
fistl
mov
xor
or
stc
cli
add
jo
xchg
stos
int
aaa
repz
xchg
sub
lcall
xchg
or
or
movsl
add
mov
icebp
nop
push
and
xchg
fldcw
xlat
sub
jo
movsb
and
pop
inc
mov
lea
pushf
fsubl
jne
imul
aas
mov
xor
pop
cmp
lock
lret
or
mov
jg
arpl
or
pop
jle
push
scas
mov
dec
iret
lret
mov
xchg
cmc
pop
sub
dec
cmp
movsl
sub
icebp
mov
or
das
add
sbbl
push
inc
test
xor
jno
pusha
mov
adc
dec
mov
mov
stc
pop
inc
inc
cmp
add
popf
or
pop
inc
je
jnp
mov
pop
or
into
mov
insb
or
mov
or
mov
cmpsl
dec
pop
pop
movsb
sbbl
or
popa
xor
jne
cmp
or
xor
ds
jle
jp
jo
scas
in
adc
mov
loop
mov
inc
jle
mov
inc
add
paddw
adc
mov
in
xor
fidivs
adc
sbb
insb
jmp
adc
sahf
sbb
popa
inc
addl
dec
dec
stos
mov
adc
adc
adc
sub
dec
xlat
push
jb
push
pop
adc
insl
jne
aam
aam
add
jmp
sbb
jmp
pop
lea
rcrl
jnp
ljmp
cmp
lret
add
leave
out
test
sbb
mov
add
mov
lock
cmp
sarb
pop
lcall
and
daa
test
fldenv
adc
sub
and
in
repz
in
and
inc
jle
push
fucom
inc
or
insb
add
in
loopne
sbb
fsubrs
addr16
outsl
mov
or
test
xchg
ret
push
faddl
or
or
mov
cmp
sahf
pop
or
push
jo
add
jg
pop
adc
ret
fcomi
and
int3
adc
dec
out
test
inc
mov
cmc
or
movsb
jge
out
jae
stos
jbe
movsl
lods
mov
loopne
addb
mov
into
sbb
inc
das
jmp
or
add
sbb
sbb
jnp
push
jg
sub
pop
in
rcrl
dec
xor
orl
fwait
push
in
call
adc
jmp
jl
inc
sub
repz
or
jecxz
or
mov
jb
dec
dec
dec
push
jne
sub
mov
mov
dec
mov
mov
xor
adc
test
push
shlb
mov
inc
push
adc
push
cmc
or
mov
jne
or
mov
aad
pop
pop
add
sub
imul
outsl
hlt
or
sbb
mov
xchg
icebp
test
scas
lahf
mov
lret
cmc
xor
outsb
dec
mov
fldt
dec
orb
and
mov
not
mov
arpl
or
rclb
add
daa
decl
lods
jb
data16
lods
fsub
cwtl
shll
jge
adc
xchg
repz
outsb
adc
mov
test
int
mov
pop
sarb
call
lcall
jns
pop
add
enter
daa
leave
jae
mov
dec
pop
fisttps
mov
cmc
into
dec
pop
jmp
adcb
les
es
dec
insl
or
dec
stos
xor
and
or
cmc
adc
mov
push
dec
push
cs
cmc
mov
into
aam
mov
int3
pop
in
cmc
dec
jp
mov
int
in
nop
in
jne
lods
fs
idivb
out
cli
imul
testb
stos
int
xchg
dec
cwtl
leave
iret
sar
or
loopne
mov
or
mov
popf
fsubs
jmp
dec
pop
out
dec
sbb
pushf
fcmovnbe
push
enter
aas
andl
adc
dec
fstp
mov
push
into
pop
dec
loopne
lret
int3
ret
mov
and
cs
pop
divb
aaa
adc
in
sarb
rolb
pop
dec
add
shlb
lods
loopne
addb
adc
push
ret
mov
inc
push
imul
xchg
cmpsl
pop
or
repnz
sub
adc
xchg
add
in
test
or
xor
xchg
clc
enter
pusha
test
mov
enter
cmp
shll
addl
xchg
xchg
ud1
or
xchg
xor
push
sbb
ds
call
cwtl
push
rorb
jge
cmp
gs
in
imul
mov
jmp
mov
xchg
or
jns
ret
jl
aas
and
ret
jnp
cmc
add
popa
jns
dec
js
mov
or
sub
mov
in
cld
rclb
and
test
mov
add
cmpsl
or
xor
jne
stc
adc
mov
adc
push
push
repz
ljmp
imul
sub
daa
icebp
xor
or
testb
or
push
mov
loopne
xchg
push
fwait
push
add
call
or
imul
scas
or
sub
call
decl
or
and
jmp
fwait
xlat
or
loope
mov
sub
out
or
mov
enter
lret
int3
and
ljmp
sub
or
ret
ja
test
inc
mov
or
cmp
mov
and
movsl
cmpsl
fisttps
movl
aas
or
into
loopne
je
xor
jne
or
scas
adc
jnp
mov
cmpsb
xchg
xor
mov
sbbl
sahf
rcrb
sub
mov
sbbl
movsl
mov
mov
and
cmp
dec
cmp
lea
aas
sub
inc
cmpsl
sbb
rorb
shrb
bound
lea
int
xchg
push
cltd
addb
jno
or
and
mov
sti
inc
sub
ret
ret
nop
in
add
inc
int3
jae
xor
mov
mov
add
in
outsb
imul
inc
into
sub
add
dec
fsts
sti
sbb
adc
cmp
jo
xchg
jp
shrd
xor
mov
jae
ret
nop
and
outsb
dec
popl
leave
fisttpl
clc
inc
subb
in
lea
div
adc
les
jo
push
mov
lahf
mov
cmp
mov
or
lahf
inc
jne
and
mov
std
and
xchg
lahf
int
enter
mov
push
dec
nop
jo
mov
mov
out
add
scas
cmp
inc
add
shrb
inc
adc
push
dec
fistpll
inc
pop
aas
or
xchg
dec
push
fcmovnu
mov
loope
negl
mov
ljmp
mov
inc
fstpt
ror
sbb
repnz
or
and
sbb
nop
mov
mov
setge
mov
push
mov
fcmovbe
sbb
adc
dec
jae
mov
lds
mov
jbe
mov
into
fwait
das
add
lea
ret
cwtl
add
jle
mov
loopne
pop
call
push
xchg
push
dec
xchg
aas
push
imul
push
dec
leave
inc
and
mov
push
mov
or
mov
fists
inc
inc
dec
xor
push
push
add
ret
int
aam
mov
pop
popa
aas
mov
lret
ret
aaa
mov
mov
cld
mov
push
testl
mov
xor
es
inc
mov
inc
xchg
clc
and
cmc
dec
in
add
mov
mov
mov
jns
mov
gs
rcrb
cli
dec
pop
xor
inc
ljmp
pop
sbb
inc
ja
mov
inc
fmul
mov
jmp
xor
sub
dec
mov
add
push
add
in
pop
mov
fists
in
fld
hlt
and
test
nop
loop
xor
lret
dec
mov
dec
pop
out
mov
mov
xlat
pop
sbb
rcrl
sbb
cmp
jmp
inc
pop
jae
or
andb
sub
xchg
fnstcw
sbb
push
xchg
pop
push
xor
dec
nop
xor
es
lds
push
pop
mov
or
pushf
adc
mov
mov
popa
xor
scas
mov
mov
in
jg
outsl
xchg
xchg
test
mov
mov
call
mov
adc
jns
and
int
or
icebp
shll
mull
mov
loope
and
aam
cmp
stos
dec
imul
loop
or
es
outsl
xchg
add
out
add
insb
cmp
fimull
pop
data16
ds
ja
pop
mov
add
cmp
mov
lret
jb
cmp
mov
ret
cltd
pop
inc
movsl
aad
aaa
jbe
lock
pop
mov
testb
xchg
movsb
lods
aas
pop
add
dec
pop
mov
push
cmc
add
jo
or
ss
out
hlt
mov
cmp
or
add
or
repnz
or
pop
dec
lods
pop
aaa
jo
cmp
int3
mov
sti
xor
add
or
and
or
or
and
int
jle
mov
or
cld
add
int3
shr
mov
dec
into
mov
inc
dec
inc
or
xchg
add
loopne
jno
add
add
or
mov
std
cmp
sti
jnp
dec
mull
or
cmp
pop
mov
repz
pop
dec
or
insb
ret
mov
mov
sub
and
or
jp
idivb
ja
push
sub
enter
out
dec
cmpsb
dec
jo
cmp
aad
and
aaa
int3
fdivl
jns
lds
aam
and
dec
adcb
jne
dec
adc
je
sub
or
inc
push
dec
daa
add
repz
add
add
sub
xor
adc
in
jbe
popa
imul
int3
rol
setge
int
pop
xchg
adc
test
dec
ja
xchg
push
shrb
mov
hlt
ja
hlt
subl
fmul
push
or
lods
push
mov
pop
fsubr
jmp
pop
addl
dec
pop
sub
lcall
addb
fimull
sbbl
add
sbbl
pop
test
mov
pop
and
jmp
xor
inc
mov
cs
loope
mov
jge
loopne
sub
push
add
outsb
mov
pop
scas
loop
scas
lcall
decb
out
inc
and
dec
push
cltd
and
movsl
and
pop
arpl
pop
arpl
mov
lods
xor
xchg
push
clc
gs
sbb
loop
mov
repnz
push
sarb
push
adc
mov
lds
pop
outsb
dec
mov
dec
mov
push
mov
lds
push
in
mov
adc
pop
test
lcall
add
shll
add
repz
inc
add
mov
sub
ret
mov
dec
mov
gs
fnstsw
lds
addb
gs
lahf
mov
lcall
mov
jo
leave
data16
mov
add
sub
outsb
dec
push
lods
int3
add
repnz
mulb
adc
sbbb
aam
xchg
in
std
pop
cs
jl
mov
dec
jl
popf
dec
popf
pusha
pop
leave
mov
sbb
or
repnz
or
cmp
cmp
mov
stos
test
pop
mov
dec
jbe
mov
sbb
ds
inc
push
jecxz
pushf
xor
cmp
xlat
jo
xor
sub
or
sub
add
popa
andb
out
outsl
popf
sub
hlt
or
and
inc
js
mov
lcall
lds
pusha
mov
mov
psubusw
stos
test
test
int3
or
xor
sbb
xchg
cmp
out
pop
pop
adc
or
mov
cmc
idivl
and
adc
lock
mov
and
mov
ss
popf
test
arpl
mov
pushf
xchg
pop
les
int
mov
movsl
pop
lcall
mov
push
dec
dec
xchg
sub
inc
addr16
insb
pushf
outsl
adc
or
out
add
inc
pop
leave
jno
addb
mov
cmpsl
out
inc
stos
int
mov
lret
jg
mov
xor
sbbl
stos
mov
inc
test
adc
cs
cwtl
sub
roll
popl
ljmp
mov
popa
in
ss
sub
inc
mov
xlat
lcall
add
movsb
adc
xor
insw
adc
lahf
shll
cmpsb
add
add
cmpsb
push
jmp
push
lods
mov
loope
daa
pop
repz
adc
dec
lea
mov
in
in
mov
mov
xlat
shlb
cmp
inc
fmulp
shll
mov
in
sbb
sbb
dec
pop
pop
jmp
cmp
test
inc
pop
xadd
inc
cmp
loop
lret
enter
mov
imul
dec
add
cli
mov
pop
fcoms
out
lea
ficomps
sub
dec
ror
rcll
ret
nop
lods
jge
aaa
mov
popf
sbbl
jne
add
push
cmp
xor
ret
nop
and
imul
pop
ret
dec
cmp
mov
int
fidivs
jg
pop
test
mov
xor
mov
test
into
es
and
jbe
pop
dec
push
add
or
cmp
jge
popa
jnp
das
push
pop
dec
dec
imul
pop
sbb
mov
movsl
jb
test
roll
add
mov
ror
or
gs
add
xor
xchg
arpl
loopne
test
jg
sbb
adc
sub
stc
push
jns
fcoms
outsb
outsb
jbe
push
sbb
je
inc
or
xchg
popf
cmpsl
or
addr16
mov
pop
inc
mov
sub
aaa
inc
adc
inc
mov
xchg
pop
xor
sub
pop
pop
pop
pop
lret
loop
sub
in
fdivr
inc
mov
cmp
mov
imul
xor
push
xor
iret
sbb
and
cmp
mov
xchg
insb
push
les
out
mov
jbe
mov
and
sbb
orl
xor
or
xor
xchg
pop
clc
and
and
ret
pop
or
gs
mov
adc
or
xchg
daa
pop
push
jns
fidivs
fisttps
lcall
mov
dec
rcr
adc
scas
sub
data16
dec
add
pop
cmpb
sbb
add
gs
push
adc
das
xchg
faddl
addr16
rorb
int3
mov
mov
stc
mov
add
mov
leave
pushf
dec
push
test
dec
adc
jp
cmpsl
mov
hlt
jl
or
jne
add
sub
clc
and
imul
add
mov
pop
and
and
in
decb
stc
mov
sub
add
rclb
repnz
xor
mov
fmull
sub
or
rolb
sti
pop
xchg
cmp
iret
pop
stos
or
es
or
lods
fisttps
insl
aam
fwait
mov
or
mov
movsb
mov
lret
lcall
repnz
dec
insb
loopne
adc
push
mov
ss
lret
ret
or
loop
out
pop
pop
sbb
addr16
jle
sub
adc
ja
jae
sbb
dec
andb
int3
jne
xor
les
mov
inc
pop
incb
nop
call
pop
repnz
jmp
aaa
sub
mov
jle
repz
scas
pop
jno
mov
ds
dec
out
movlps
xor
mov
xchg
sbb
aaa
stc
les
fidivs
fisubs
ret
mov
sbb
or
into
or
addr16
jno
jge
inc
clc
test
adc
pop
add
popf
xchg
xchg
mov
adc
xchg
dec
aaa
dec
data16
cmp
adc
addb
dec
xor
scas
in
inc
daa
inc
test
scas
and
int3
cmpl
jnp
mov
subl
mov
repz
cmpb
mov
mov
or
add
int3
out
xchg
mov
adc
adc
dec
in
insl
or
rorb
add
enter
lcall
test
lea
jo
or
popl
test
cmpb
pop
xchg
or
add
out
pop
or
subb
xchg
sub
movsl
inc
orb
aas
insl
jae
stos
fisttpl
fisttpl
pop
mov
aam
mov
leave
fisubl
lea
call
or
and
fidivl
adc
adc
jge
pop
lret
ficoml
pop
add
sub
mov
xchg
inc
hlt
mov
fsubrs
push
rol
mov
fiaddl
outsb
cwtl
pop
daa
or
or
pusha
mov
push
mov
xchg
inc
mov
pop
inc
jnp
pushw
add
cmp
gs
mull
lods
dec
fstl
lret
insl
jg
mov
sarb
jb
fdivs
sub
jb
xor
xor
jge
and
xor
pop
ret
jns
inc
push
fsubrl
popa
mov
sub
ficoml
jmp
imul
mov
cs
add
inc
adc
dec
xchg
xchg
jge
pop
loope
jne
mov
cmc
add
subb
xchg
sarb
cmp
cmp
andl
pushf
lret
movsl
nop
daa
mov
daa
bound
mov
mov
sbb
inc
daa
xchg
xor
popf
xchg
outsl
push
push
sub
mov
xor
pop
and
insl
mov
popf
sahf
push
sbb
test
push
adc
jno
dec
add
cli
sti
dec
call
xor
mov
push
cmp
pop
imul
pop
aam
mov
cmpsl
and
movsl
xor
icebp
xchg
sub
sub
nop
aam
loop
sahf
xchg
adc
sub
mov
inc
cmp
or
jle
push
clc
ss
adc
sbb
outsl
insl
lea
add
add
sysret
ja
jno
sub
dec
lea
sarb
cmpsb
xchg
das
cmp
dec
jl
add
jmp
in
sarb
cmp
es
shlb
mov
lods
jge
xorl
lock
add
inc
insl
sbb
orb
dec
sub
imul
and
pushf
or
inc
inc
cmp
stos
sbbl
add
addb
in
ret
jnp
icebp
or
adc
loopne
mov
clc
cli
jb
add
push
cmp
clc
ficoml
xlat
insl
sbb
int
pop
loopne
popf
int3
popa
xor
sbb
mov
sti
pop
lds
pusha
pop
add
loopne
das
mov
adc
push
dec
mov
sti
xchg
lahf
aam
das
ffree
inc
mov
leave
loop
lock
lret
test
fsubl
pop
repnz
sti
pop
push
sbb
fmuls
mov
leave
or
idivb
shld
subb
mov
add
out
stc
or
xchg
add
dec
xchg
xor
rclb
aas
jge
inc
push
pop
sub
jb
sub
mov
jbe
mov
sub
add
mov
mov
stc
divl
adc
ja
push
pushf
jb
or
hlt
es
mov
dec
cs
cmp
cld
sahf
mov
aaa
xchg
cmp
aam
xor
mov
gs
dec
insb
loopne
negl
movsb
lret
mov
sub
pop
aam
mov
mov
imul
push
popa
fwait
xchg
mov
lock
dec
lea
jg
add
int3
inc
movsb
fidivs
fnstcw
es
out
orl
mov
les
les
push
xchg
test
rolb
sahf
aam
data16
aaa
pop
sbb
xlat
pop
icebp
adc
fimuls
mov
mov
lods
and
jne
cli
test
mov
sub
pop
dec
pop
cmp
aaa
adc
ljmp
lock
inc
mov
lret
repnz
call
xlat
out
rorl
shlb
xchg
push
clc
and
fstp
daa
pop
or
ret
nop
and
lock
push
aam
lcall
push
rorb
ret
nop
sub
adc
nop
sub
popf
dec
push
in
ficompl
test
nop
insl
cmp
add
mov
repz
cmp
jg
adc
pop
ret
int3
mov
sbb
arpl
push
adc
cli
pop
cmp
mov
xchg
jns
xchg
inc
add
pushf
and
mov
xor
int3
es
jne
xor
divb
pop
aaa
pop
cmp
imul
dec
cwtl
sbbl
cwtl
sbb
cmpsb
cld
imul
mov
sub
gs
mov
xor
loop
sub
push
cwtl
lcall
loope
outsb
cmp
aam
sti
jbe
jge
jnp
popf
push
add
js
cmp
cs
aam
leave
add
mov
jbe
aaa
xchg
into
or
dec
fdivrl
leave
addl
mov
je
ret
xor
push
pusha
lret
jnp
xchg
mov
mov
sbb
jmp
into
pop
sub
sub
adc
icebp
xor
int3
jbe
test
xchg
or
lea
add
addl
xchg
mov
or
push
push
xchg
clc
fildl
sub
movsl
sbb
or
bound
out
xchg
sbb
sub
inc
dec
lds
xchg
aas
xchg
inc
or
add
mov
lock
int3
inc
int
int3
xchg
add
pop
add
jmp
aas
add
or
or
add
ret
nop
sub
shlb
mov
jbe
adc
icebp
mov
leave
aam
sub
mov
or
lahf
into
push
mov
push
add
jo
or
rcr
call
xchg
pop
push
sbb
pop
dec
out
leave
les
sub
add
mov
mov
add
aam
lods
cmp
dec
jo
imul
lods
in
lods
pop
dec
xor
push
pop
int3
hlt
cmp
mov
in
mov
pop
and
imulb
lahf
test
xchg
mov
bound
leave
or
adc
cmp
fcoml
popf
inc
cs
push
inc
xchg
mov
xor
lds
imul
adc
mov
mov
xchg
push
xchg
pop
sub
int3
lret
or
roll
adc
fmul
daa
orl
dec
aaa
sbbl
daa
inc
or
pop
daa
pop
mov
cmpsl
mov
stc
and
sub
std
iret
sub
pop
mov
enter
xchg
sbb
mov
add
inc
rcrl
push
adc
fstpt
into
pop
cli
xlat
bound
inc
xlat
pop
les
add
mov
pop
xchg
jmp
mov
jle
sti
pusha
cmpsl
fldt
xchg
leave
mov
dec
push
imul
jge
xchg
out
pop
xor
push
dec
sarl
fmull
stc
mov
jmp
cld
insl
es
gs
mov
cltd
add
dec
popa
sbb
test
pop
loop
xchg
dec
fnstenv
repz
mov
gs
leave
pushf
or
sub
push
jp
popf
mov
dec
mov
inc
or
inc
inc
xor
int3
arpl
xor
test
add
lcall
fistl
add
and
fcomps
mov
or
add
or
insb
xchg
mov
aas
lds
dec
sub
lds
out
popf
mov
lds
aam
and
xchg
ret
clc
gs
sub
out
adc
lds
lods
fstpl
and
inc
pop
testb
stos
int
out
mov
add
mov
jne
xchg
xchg
lret
xchg
cmp
hlt
mov
cmp
push
jmp
sub
addl
or
and
mov
adc
or
xor
mov
jg
aaa
popf
mov
outsl
mov
fimull
xchg
out
adc
lds
pop
test
and
and
push
outsb
sbb
add
test
or
bound
xchg
jnp
test
sub
test
push
push
mov
mul
mov
rolb
adc
je
aaa
pop
xor
inc
jl
and
pop
xorl
pop
push
dec
dec
sub
sbbb
or
out
sbb
gs
mov
dec
aaa
dec
repz
daa
pop
xchg
fildll
or
xorps
sub
je
mov
or
and
mov
cmp
sbb
enter
jnp,pt
movsb
mov
out
loopne
shrl
xor
lods
imul
loop
inc
or
ljmp
xchg
shlb
out
ja
testl
loopne
popaw
mov
int3
jl
loope
xor
cmp
test
sub
cmp
or
pop
fildl
mov
call
jmp
dec
into
out
pop
adc
mov
or
xorb
pop
dec
ret
nop
and
add
lds
push
repz
and
clc
or
inc
sub
fwait
add
fsubl
popf
sbb
mov
into
dec
popa
or
mov
mov
insl
sti
lea
sbb
shll
cmp
and
pusha
xor
jl
or
cmp
or
mov
push
jnp
and
dec
mov
xor
cs
vmovhps
cmp
jo
in
cltd
mov
add
das
in
mov
ds
mov
test
xchg
popl
rorl
data16
xlat
inc
and
loopne
push
out
sahf
in
andl
dec
pop
pop
jmp
push
dec
dec
sub
movsl
lds
pop
roll
insl
orb
leave
ret
in
cmpsl
ret
insl
pop
fwait
inc
repz
leave
push
ss
rorb
divb
sbb
fiaddl
sbbb
dec
jno
lods
lds
cmp
lahf
xchg
jns
cmp
lret
mov
mov
mov
and
push
push
push
fdivrs
adc
or
xor
lret
lret
cmp
inc
mov
inc
sti
inc
ja
loope
add
mov
repz
mov
pop
je
cltd
js
es
iret
in
loopne
adc
jmp
lret
adc
enter
sub
push
loop
adc
add
sub
mov
in
pop
je
fdivrs
outsl
push
dec
mov
fnstcw
movsb
in
mov
pop
add
out
push
mov
jns
jns
out
jb
mov
xchg
pusha
jne
mov
movsl
aam
out
xchg
push
out
or
push
fisubs
jle
sbb
mov
lret
pop
sbb
rcr
insl
jb
cld
mov
bswap
xchg
mov
add
les
rorl
stos
ret
jno,pt
pop
arpl
addb
int3
dec
or
jno
ret
out
xchg
mov
adc
push
ror
imul
repz
add
loop
push
mov
and
cld
ja
sub
sub
mov
sarl
leave
inc
mov
int3
xor
dec
dec
loopne
adc
into
inc
es
adc
daa
mov
xchg
add
aas
pop
jns
pop
inc
pusha
sub
push
mov
in
cmovs
mov
loop
or
push
push
jo
les
les
out
jno
mov
test
mov
jb
sbb
xlat
jge
scas
xchg
sahf
movsb
push
out
jbe
xchg
add
push
into
test
lds
iret
insl
add
and
loopne
push
repz
test
cmp
mov
test
mov
push
dec
dec
scas
mov
xor
out
sub
subl
cmp
lds
out
pop
jmp
inc
dec
pop
jnp
mov
cmp
pusha
xchg
ss
popf
jmp
sarb
push
out
fdivs
rcr
out
mov
out
push
lea
int3
rcll
pop
pop
in
lea
sbb
mov
pop
fcomps
shll
lahf
lret
mov
lahf
inc
lods
dec
pop
xchg
jmp
cli
lds
int3
scas
or
mov
aad
daa
mov
scas
pusha
repz
add
jbe
test
sar
mov
inc
orl
insb
loopne
fdivl
test
pop
insb
loopne
sldt
iret
fstpl
jmp
imul
daa
cmc
inc
imul
repnz
mov
in
aaa
or
ss
inc
xor
sbbl
push
cmpsl
imul
scas
daa
lcall
mov
fsubrp
pusha
scas
mov
dec
repz
or
inc
movsl
pop
pop
imul
repz
ljmp
sub
arpl
and
popa
inc
sub
lret
loopne
out
sbb
jp
jmp
jecxz
dec
cmp
adc
pop
pop
xor
mov
pop
sbb
mov
pusha
pop
lret
mov
fistps
addl
lea
push
nop
lds
adc
cmp
or
sub
std
nop
inc
movsb
call
iret
pop
xor
sub
pushl
ds
in
push
mov
out
dec
js
dec
fbstp
mov
xor
fbld
gs
push
popa
add
test
add
filds
pushf
xor
mov
test
mov
add
add
inc
loopne
hlt
outsl
les
in
pusha
in
stos
lods
outsb
push
push
and
dec
arpl
les
test
out
cmc
adc
test
notl
adc
movsl
and
mov
loope
ja
mov
insl
and
adc
sbb
scas
and
sahf
push
cwtl
out
insl
scas
jo
jp
lret
insl
mov
push
sti
add
xchg
fs
mov
popa
clc
sbb
push
loopne
cmpsb
lds
aam
or
add
mov
add
xchg
addl
sti
push
sub
fistps
or
hlt
cmp
push
call
sbb
repz
dec
xchg
cmp
add
adc
inc
dec
or
lret
dec
cltd
pop
movsl
int
dec
fisttpl
inc
mov
rcrb
xor
loopne
lock
mov
pop
pushl
or
into
and
ret
mov
adc
mov
or
sarl
mov
cmp
in
ljmp
call
iret
mov
or
adc
mov
pop
jge
pop
aam
and
aas
push
jg
adcb
in
adc
cmpsb
xchg
xorb
mov
aam
pusha
dec
mov
cltd
mov
pop
jecxz
cmp
or
cmp
loope
sbbl
add
xlat
jo
std
mov
js
sbb
popf
lods
or
fs
mov
or
pop
scas
dec
or
sbb
bound
imul
into
outsl
mov
xlat
std
mov
bound
out
enter
or
push
fmull
ret
adc
push
xorb
call
or
mov
ljmp
cmp
cmp
fs
cmp
dec
cmpsl
fmul
das
adc
push
insl
add
add
sub
ret
sub
dec
cld
call
aam
jno
idivl
or
in
loop
scas
push
mov
mov
das
or
xlat
xchg
xchg
outsb
mov
sub
pop
xchg
xor
mov
enter
dec
and
adc
push
enter
sbb
and
es
in
mov
cmp
dec
repz
mov
dec
mov
std
jns
out
xor
fldt
or
pop
repz
sahf
lods
mov
or
imul
sbb
ret
ret
int3
cmpsl
adc
or
js
cli
inc
ss
or
sar
xchg
mov
movsl
or
push
inc
fs
cmpsl
jle
and
mov
lods
test
testb
cmc
fisubl
or
adc
push
jp
add
jl
or
cld
ret
imul
clc
adc
or
jle
jne
or
loopne
call
inc
and
sahf
or
cld
or
inc
mov
and
pushl
inc
lods
push
mov
adc
loop
jge
mov
cmp
mov
sarb
dec
arpl
push
sbb
add
and
add
scas
lds
sahf
pop
xchg
popf
pop
leave
or
insb
mov
pop
ret
adcl
xor
sbb
es
push
daa
mov
mov
cltd
lahf
adc
sub
insl
cmp
add
fsubrs
dec
push
inc
pop
push
es
pop
xlat
andl
push
cwtl
mov
pushf
xchg
repz
lret
popa
popl
push
or
outsb
test
adc
pop
out
out
sbb
dec
cmpsb
stos
lds
stc
loope
add
mov
dec
popa
outsb
shlb
daa
enter
xor
daa
mov
test
std
dec
xor
ror
call
subl
mov
clc
sarl
push
or
push
dec
pop
add
cmp
scas
jno
mov
and
dec
push
ror
in
sarb
jno
mov
and
int
cmp
dec
in
sarb
adc
mov
cld
xor
and
aaa
aaa
xchg
sbb
imul
mov
inc
sub
mov
and
xor
aaa
xchg
xor
dec
or
data16
imul
out
push
and
aaa
mov
js
js
popf
sub
cld
pop
cmp
xor
pop
cmp
insb
sub
negl
push
insb
sub
lds
shl
out
cmp
cmp
lods
pop
add
in
sarb
popf
jecxz
cmp
lods
or
mov
sub
adc
inc
sbb
lret
sub
addb
inc
sbb
inc
pop
inc
dec
push
bnd
fdivs
mov
sarb
inc
fwait
or
ret
mov
jp
and
ret
dec
or
xor
hlt
fnsave
movsb
or
mov
and
int
movsl
pop
add
pop
stos
inc
and
adc
imul
pushl
mov
popa
pop
inc
mov
and
add
mov
add
pop
loopne
int3
add
mov
mov
rorl
lret
push
push
shll
xor
add
mov
cmpsb
aas
mov
and
and
or
std
iret
pop
add
xor
aaa
les
out
fcoms
add
cmpsb
xchg
fmuls
sub
adc
mov
inc
xor
movsl
int
es
adc
cmp
cmp
mov
insb
loopne
xchg
rcll
aad
xor
pop
push
inc
imul
dec
mov
in
inc
imul
adc
pop
insb
loopne
sbb
mov
gs
movb
mov
xchg
and
sub
pushf
sbb
loop
adc
cmp
popl
movsl
bound
out
es
dec
or
pop
loop
xchg
inc
out
addr16
jns
psrld
daa
ljmp
push
dec
lods
pop
sub
dec
aam
test
rcrb
ss
call
shlb
dec
repz
cmpsl
push
add
and
popf
adc
notl
mov
icebp
es
dec
or
ffree
dec
out
popf
movsb
addb
lds
mov
sahf
pop
lds
insb
cmp
lds
xchg
or
rolb
dec
xor
and
shr
cmp
add
int
scas
adc
addr16
mov
mov
lods
xchg
pop
jns
or
adc
pop
insb
pop
cmp
cmp
xor
addr16
mov
leave
adc
pop
daa
and
fldl
pop
mov
inc
mov
or
mov
adc
inc
pop
adc
addb
popa
addr16
test
daa
sbbb
inc
fsubl
popf
inc
mov
mov
mov
add
lret
dec
cli
pop
inc
pop
pushf
cmp
dec
xchg
mov
sbb
stos
pop
xor
push
leave
pop
bound
aam
push
push
xlat
cli
sub
out
mov
in
mov
jl
loopne
scas
fs
pushf
inc
push
mov
les
shll
aam
and
pop
addl
outsb
inc
xchg
daa
add
jo
xor
movsl
add
lock
cmp
cmp
lret
rol
daa
sub
pop
pop
dec
or
in
fcmovnbe
call
dec
pop
shl
xor
xor
int
fisubl
lea
lcall
imul
dec
mov
push
xchg
jb
xchg
rorb
cs
imul
rol
dec
ja
inc
push
push
sarb
movsb
mov
imul
mov
sar
and
ret
shrl
adc
dec
fdivs
push
out
aaa
push
enter
pop
push
mov
push
loop
or
add
pop
or
aaa
fistpl
int3
daa
mov
pop
fwait
push
iret
aaa
pop
rcrb
sub
pop
loop
or
pop
mov
pop
jbe
aaa
pop
dec
int3
daa
dec
pop
adc
or
or
mov
inc
jno
pop
jb
push
popa
pop
dec
aaa
dec
rolb
sub
pop
leave
loop
leave
in
sbbl
sbb
nop
insb
loopne
xor
int3
push
add
dec
in
insb
mov
lds
cmp
aaa
inc
repz
shlb
jne
gs
jne
into
xchg
add
int
jae
das
add
lahf
lods
jecxz
dec
adc
out
sarb
add
out
adc
ljmp
add
lcall
inc
push
addb
inc
fistpll
sahf
mov
dec
ret
nop
daa
test
mov
mov
inc
test
lcall
andb
insl
and
mov
hlt
fisubrl
lcall
movsl
pop
xchg
sbb
fldenv
movsl
test
popf
pop
daa
xor
add
int
ret
inc
mov
dec
sub
cmp
stc
ja
and
adc
sub
imul
dec
sub
or
test
ret
mov
xor
ja
ret
or
sbbb
jnp
dec
mov
push
mov
fcoms
ja
mov
in
hlt
rcrl
dec
adc
enter
adc
mov
and
mov
lds
in
cmp
sub
lds
int3
popf
pop
adc
cmp
mov
add
mov
add
xchg
out
xchg
gs
sub
inc
fimuls
out
push
fmuls
into
pop
sbb
rcr
enter
int3
movsl
inc
dec
mov
das
xchg
enter
stc
pop
xor
sbb
inc
outsb
cmp
nop
jb
int
and
enter
leave
int3
fisttpll
cld
mov
xchg
push
mov
int
ss
lods
lret
jo
inc
mov
gs
pop
repnz
pop
stc
dec
pop
ror
mov
jecxz
dec
enter
popf
jecxz
sbbb
adc
cld
xor
xchg
bound
paddq
sub
xor
fimuls
sbb
add
andl
push
movsb
and
or
repz
aaa
mov
mov
es
ds
mov
dec
fldcw
mov
cmp
loopne
hlt
scas
test
out
sbb
sbb
lds
or
mov
xchg
test
cld
xchg
cmp
dec
ret
jp
pop
sbb
and
and
push
daa
sub
mov
test
fdivrs
imul
jo
bound
lea
das
push
push
inc
jo
sub
pop
xor
les
sub
push
icebp
mov
mov
push
push
ret
xchg
push
in
negb
repnz
jb
rolb
loopne
mov
mov
inc
in
push
sub
ljmp
adc
ret
int
sti
fwait
lret
movsl
mov
rclb
push
pop
sbb
lea
cld
inc
xchg
cmpsl
orl
das
xchg
add
adc
pop
sub
aam
push
sbb
loope
std
roll
adc
fstp
xchg
fisubrs
xchg
lahf
nop
xor
mov
add
cmc
xor
cmp
pop
and
inc
mov
loope
mov
and
lret
addb
aaa
call
lcall
jo
sbb
push
sbb
pop
mov
sbb
pop
inc
lock
mov
pop
mov
movsb
mov
sub
and
loope
inc
cli
xchg
push
add
inc
cmovle
int3
or
jg
leave
repnz
pop
dec
mov
out
pushf
fimuls
subb
push
pop
cld
xchg
inc
push
or
shrl
fimull
pop
test
pop
mov
cli
iret
xchg
xor
mov
js
mov
das
or
rcll
pusha
or
ja
outsl
loop
fcompl
dec
add
inc
ss
pop
or
insl
addl
dec
cltd
jge
roll
or
pop
test
jno
roll
movsl
mov
jmp
or
mov
mov
and
stc
push
cmc
icebp
xchg
fisubrl
cmp
lret
jp
jb
or
or
mov
dec
mov
rcr
ljmp
repnz
or
imul
sbb
inc
dec
inc
mov
lods
dec
push
test
inc
subl
sbb
sbb
xchg
jne
sbb
xchg
add
push
jno
cltd
subb
lcall
into
sub
push
mov
jns
cmp
cli
in
loopne
jl
and
das
jnp
mov
leave
arpl
mov
and
not
movsl
xor
mov
popa
push
mov
enter
or
mov
xchg
mov
jl
mov
cmp
cld
xor
jo
mov
sbb
jp
clc
das
xchg
push
movsb
adcb
iret
inc
repz
or
add
adc
fdivl
or
inc
scas
sarl
shlb
adc
fwait
popf
stos
or
into
inc
jnp
int
xor
mov
ss
sbb
cmp
imul
negb
xor
stos
jnp
push
gs
or
mov
adc
cwtl
mov
lods
or
dec
cmp
fisubl
jbe
or
cld
xchg
fldt
mov
bound
std
jb
mov
sub
adc
loop
jl
or
mov
fld
dec
test
repnz
pushf
or
scas
das
mov
push
fidivrl
cld
add
test
xor
mov
loop
push
sub
dec
push
mov
shl
xchg
aam
or
mov
stos
adc
lcall
clc
loop
mul
or
or
cltd
loopne
or
iret
imul
mov
inc
loop
jno
or
and
cmpsb
or
ret
cmp
testb
lods
mov
mov
mov
or
int
add
out
mov
and
in
imul
lret
jmp
cmpsb
xchg
in
repz
out
or
sahf
jecxz
add
xor
or
fs
mov
mov
movsb
adc
adc
mov
out
fwait
insl
or
mov
adc
pop
xor
enter
ljmp
hlt
nop
rcrb
sarb
pop
and
and
stc
icebp
sbb
jl
ret
and
dec
cmpsl
xor
rcrl
push
or
pop
push
mov
jae
cli
cmp
push
add
sahf
mov
das
adc
and
enter
mov
xor
push
shll
flds
stos
imull
cmp
mov
push
or
fmull
xchg
cmp
dec
or
pushf
xchg
cltd
mov
dec
dec
jge
xor
sub
xchg
aad
mov
or
lcall
xchg
test
insl
scas
xchg
popa
or
je
and
stos
js
dec
orb
sti
inc
cmp
leave
inc
dec
add
and
ds
inc
jmp
hlt
ss
fisttpl
or
cmc
cmp
or
cld
repnz
or
pushf
dec
xchg
or
xor
lret
push
adc
incl
push
mov
pop
jmp
and
pushf
sarb
stc
cmp
cmpsl
fistpll
xor
jmp
push
or
data16
sbb
dec
outsl
xchg
jl
jmp
push
stos
jb
cmp
push
arpl
cmpsb
add
mov
xchg
testl
jbe
scas
sti
mov
iret
push
mov
lret
movsl
inc
std
pop
in
mov
cmp
or
loope
aas
dec
dec
or
test
sub
push
scas
clc
test
mov
sub
cmpsb
dec
fs
stos
sahf
aad
loopne
and
or
lods
mov
xlat
je
popa
cmc
aad
and
or
roll
mov
jb
add
sub
or
add
hlt
jle
rcrl
and
mov
jae
aaa
repz
rcll
inc
mov
xor
lcall
ljmp
and
push
ret
icebp
outsl
ljmp
subl
insb
sarb
mov
mov
mov
mov
stc
add
mov
or
lods
sub
mov
pop
hlt
mov
or
fld
mov
or
movsb
lods
mov
cmp
subb
repnz
adc
in
int
inc
pop
mov
jp
jno
push
or
cmpsb
xchg
scas
adc
dec
aam
xchg
xor
out
fsubr
pop
or
cmp
dec
xchg
decb
add
cmp
or
sbb
sub
or
add
pop
xor
popa
xor
mov
clc
out
aaa
mov
lret
nop
scas
pop
repnz
or
dec
xchg
mov
or
test
jecxz
int
clc
add
test
scas
adc
roll
cmp
dec
mov
push
ret
add
inc
ds
xchg
cmp
or
sti
and
or
fwait
bound
push
or
mov
sbb
clc
cld
in
mov
mov
inc
sbb
test
shrb
sbb
xlat
mov
or
push
call
nop
sbb
xor
in
dec
or
mov
and
or
jbe
mov
dec
sbb
sub
jmp
xchg
pop
push
add
pusha
push
rorb
data16
and
push
jae
sub
dec
and
add
daa
loope
shrl
leave
xchg
adc
inc
mov
mov
fsts
icebp
add
jns
mov
int
jae
jl
push
xor
dec
push
mov
cmp
sub
sub
addl
and
sub
mov
dec
adc
add
and
fwait
int
rclb
mov
xor
jmp
or
out
dec
dec
nop
xchg
int
js
hlt
dec
jo
push
insb
scas
or
add
push
int3
or
enter
or
pop
imul
rorb
fs
sub
bound
adc
ss
les
mov
cmp
xchg
jo
xchg
adc
enter
shr
sub
push
push
dec
movb
lret
addr16
and
xchg
jecxz
aam
ret
adc
cmp
ret
stc
mov
mov
scas
ret
or
jbe
or
push
fisttps
mov
mov
push
scas
or
inc
cmpsb
mov
pop
cmpb
cmpsl
enter
sbb
stc
and
jge
andl
mov
shr
lds
fldt
xor
or
lret
or
or
cmp
in
aad
iret
cltd
mov
sub
test
xor
mov
mov
call
movsb
push
scas
in
xor
fwait
dec
inc
les
xchg
add
out
sub
mov
or
adc
push
mov
push
dec
fdivrl
sub
pushf
push
movsb
mov
and
orl
es
or
dec
mov
fs
push
sbb
push
sbb
je
or
mov
or
cwtl
inc
ror
or
and
das
cli
sarb
push
inc
cmp
in
addr16
ret
arpl
jo
or
dec
inc
sahf
lret
into
inc
mov
mov
dec
cld
shl
jecxz
dec
inc
movsb
cmp
xor
add
rorb
sbb
add
lea
push
adc
and
ret
stos
mov
sbb
dec
in
pop
jbe
jecxz
ret
and
adc
adc
cwtl
jbe
xchg
jno
scas
or
shl
fmuls
loope
mov
add
xchg
cmp
pusha
ret
sbb
or
pop
jae
sbbb
cltd
and
sub
nop
mov
xlat
or
pop
in
mov
dec
jb
jp
or
repz
fiadds
adc
pop
or
popa
mov
aam
cld
and
and
sahf
mov
rcrb
or
and
cmp
loope
and
decb
mov
cmp
add
dec
loopne
jp
stos
or
movsb
mov
mov
push
xor
mov
or
dec
sbb
lahf
sarl
cmpsl
in
ret
jecxz
aad
out
or
xchg
push
inc
dec
or
sub
fsubs
pop
loopne
or
push
clc
ret
push
dec
or
int
stos
or
xchg
ds
or
mov
mov
data16
shll
jg
mov
orb
stc
push
out
jo
cmp
or
add
sbb
push
cmp
jg
jmp
call
or
stc
stos
lea
mov
cmpsl
mov
xchg
pushf
or
mov
mov
push
loopne
mov
or
cmp
or
pop
xchg
adc
dec
int3
push
xor
or
push
dec
cld
jle
nop
or
add
testl
js
fisttpll
push
lea
ret
ret
rclb
jb
insl
out
cmpb
jl
inc
add
push
lret
ljmp
mov
xor
aam
enter
repz
push
cmp
outsl
push
sbb
loope
mov
push
movsb
mov
or
jle
shlb
ja
jecxz
jg
int
fs
fcompl
cmp
push
std
or
mov
pop
mov
cs
loop
jmp
sarb
test
cs
xor
mov
dec
add
lcall
sbb
push
push
or
testl
push
fnstenv
dec
data16
or
gs
in
xchg
stos
cmp
jo
lds
mov
addl
pop
push
xor
or
outsl
push
mov
cwtl
inc
stos
repnz
xchg
pop
mov
loope
jb
and
add
cmp
aad
xchg
jle
ds
fmull
rorl
push
add
lret
mov
inc
js
stc
push
xchg
or
adc
rep
or
idivb
xchg
repnz
push
xchg
cmpl
das
jns
dec
mov
fs
dec
xchg
out
mov
pop
and
mov
xor
fwait
pusha
je
xor
or
xor
or
das
mov
aam
cmc
pop
decb
dec
mov
loope
int
adc
fs
repnz
pop
lods
push
adc
test
sbb
dec
pop
pop
aad
cs
xchg
rorb
or
fwait
adc
data16
loope
sub
in
or
std
mov
cld
int
mov
lret
lods
xor
stos
jp
add
adc
xchg
mov
sti
push
cld
dec
shlb
adc
outsb
or
in
jg
xchg
int
push
cs
sbb
rcrl
or
fdivrl
or
mov
rolb
es
std
sbb
push
cmpsb
xor
daa
xor
loope
repz
fs
or
dec
sub
cwtl
jmp
add
ret
jbe
rolb
dec
xor
in
push
jle
add
cmp
ss
mov
movl
iret
fcomps
sub
push
add
rorl
mov
push
rorl
imul
enter
insl
and
addl
sbb
sbb
in
enter
dec
nop
shlb
shrb
int
adc
and
mov
fdivrs
inc
andl
dec
cld
push
push
sub
lret
in
ljmp
clc
mov
adc
or
mov
push
mul
mov
out
ss
clc
cld
and
mov
ffreep
iret
inc
inc
sbb
mov
xor
arpl
push
dec
sbb
mov
sub
or
jle
adc
push
out
insl
cmpsb
and
adc
mov
sub
mov
mov
mov
pop
ljmp
xor
or
in
hlt
inc
aam
cwtl
iret
js
movsl
fwait
and
out
cmpsb
mov
cld
mov
data16
push
mov
iret
cmp
ret
or
cmp
or
lods
dec
mov
mov
iret
nop
inc
jmp
movsl
not
adc
cs
sahf
aaa
cmp
pusha
or
arpl
xor
add
out
cwtl
rcl
int
fs
dec
xor
mov
loopne
call
jb
or
jae
into
and
pusha
cmp
in
adc
xor
and
jle
or
jae
ffree
les
mov
test
sbb
icebp
dec
inc
leave
and
aam
xor
lods
sbb
sbb
loopne
jge
cmp
xor
or
sti
fisttpll
mov
pusha
mov
xor
push
sub
fmull
out
jo
sub
and
mov
out
cmc
push
call
xor
mov
mov
ljmp
jno
enter
mov
fidivl
dec
cs
push
sbb
aam
push
cmp
stc
movsb
int
inc
loopne
iret
popa
sub
push
js
xor
or
xor
inc
ss
dec
fs
ss
inc
pop
push
in
sub
mov
adc
rorl
stos
inc
mov
sti
xor
xchg
sbb
cltd
push
or
ljmp
fisubl
or
add
sub
jo
sbb
out
lods
or
js
fstpt
mov
jo
pop
icebp
adc
add
push
add
sub
and
or
mov
or
pop
dec
std
xor
fsubs
push
push
outsb
cmp
mov
ljmp
roll
js
nop
pop
out
cmp
jg
sbb
cmp
scas
or
cmp
data16
cltd
mov
jecxz
call
jge
rorb
dec
push
adc
jo
dec
enter
cmp
inc
rorl
mov
cmpsb
inc
test
mov
mov
inc
imul
inc
icebp
cmp
bound
push
rep
repnz
shlb
or
or
inc
inc
testl
test
ret
mov
icebp
jmp
arpl
notl
nop
mov
or
in
scas
xchg
fs
push
and
mov
pop
push
xchg
or
iret
inc
aad
aas
mov
cmp
or
int
jle
or
xor
fcoms
push
cmp
mov
andl
loop
repnz
icebp
pop
push
or
mov
jecxz
dec
pushf
mov
aas
cmp
or
std
xchg
pushf
inc
or
mov
int
sub
push
mov
dec
add
mov
lret
les
fcompl
movsb
or
and
cmc
nop
or
outsl
stc
aaa
ds
jle
mov
adc
insl
test
in
or
mov
mov
mov
jge
xchg
inc
adc
orl
int3
inc
dec
mov
cmp
das
adc
and
push
cmp
xchg
cmp
out
mov
cmp
aad
rorb
or
xchg
cmpsl
lods
or
cs
push
xor
sub
jo
mov
enter
rol
ljmp
ja
divl
inc
fiadds
add
or
fdivrl
repz
sar
or
push
lcall
or
fld
ret
dec
jp
inc
cmp
pusha
imul
cmp
repnz
in
xchg
sbb
inc
xchg
push
mov
movsb
or
fdivl
test
arpl
roll
jge
sub
push
enter
mov
outsb
jnp
test
sub
xor
pusha
inc
cmp
pop
rcll
das
movsb
repnz
clc
in
cli
aad
xor
cmc
mov
push
and
or
adc
jns
sahf
push
and
shll
jge
jno
jae
inc
in
and
pop
pop
dec
sahf
and
cmp
stos
push
or
xchg
pop
cmp
je
les
mov
movsl
jecxz
lahf
sbb
dec
jo
inc
ficoml
popa
mov
pop
jbe
cmc
or
stos
cwtl
jecxz
or
adc
xchg
call
mov
out
repnz
adc
movsl
xor
inc
arpl
adc
dec
mov
ds
or
jbe
add
out
lods
push
pusha
sbb
enter
ss
add
mov
jecxz
xor
or
mov
pusha
mov
cli
xor
iret
mov
cmpsb
or
sahf
or
push
push
lea
je
sub
mov
or
dec
pop
insb
mov
iret
mov
popa
cmpsb
cmp
data16
or
repz
jecxz
rol
sarb
nop
mov
test
add
mov
dec
or
or
xor
pusha
and
inc
and
icebp
ljmp
xchg
xchg
jo
add
sub
scas
ja
or
add
das
int
push
mov
push
mov
and
dec
cli
pshufw
sbb
mov
inc
shrl
insb
jle
mov
and
push
add
mov
xchg
test
outsl
jnp
and
into
inc
jns
xchg
cmp
aas
or
rol
dec
xlat
dec
js
xchg
xchg
push
adc
and
push
dec
jae
xchg
loope
clc
add
xchg
stos
addr16
dec
popl
pusha
lds
add
lods
rcll
xor
ret
dec
in
cmp
stos
nop
sti
or
rorb
popa
std
aam
push
fidivl
in
aas
scas
jle
or
mov
in
cmp
addr16
pusha
ret
pop
xorl
sbbb
inc
sub
pop
lret
mov
cmp
fsubl
and
xchg
mov
hlt
pop
jbe
or
mov
mov
rcrl
nop
push
or
push
cmc
ret
lret
hlt
jb
ret
xor
mov
lahf
aam
adc
add
adc
clc
mov
rorb
inc
sbb
icebp
jecxz
mov
or
scas
jnp
jne
inc
pop
jns
dec
imul
loopne
stc
mov
mov
mov
or
adc
in
pop
popa
enter
in
clc
out
sub
and
cwtl
int
push
xlat
push
mov
arpl
jg
inc
nop
dec
mov
sti
lahf
adc
dec
aam
jge
jo
fs
pusha
add
fisttpll
mov
repnz
lret
int
mov
stc
rcrb
mov
fisubrs
fucom
sub
jl
into
jbe
enter
push
fsubrs
sbb
xchg
add
sbb
cli
loop
hlt
adc
dec
test
mov
push
out
dec
jg
xchg
iret
sti
stc
lret
not
add
stos
int
dec
mov
jae
inc
xor
or
sub
icebp
inc
imul
xchg
hlt
cli
dec
push
sbb
or
or
ror
rolb
xor
xchg
ds
mov
orl
or
xchg
cmp
adc
or
mov
in
imul
jne
push
mov
mov
addr16
cs
mov
sbb
adc
nop
xor
or
sbb
or
sub
sub
and
sbb
sub
inc
sbb
pusha
xchg
das
pop
inc
mov
ss
jl
rorb
rcrb
jmp
sub
ja
testb
dec
mov
and
arpl
test
sub
mov
or
in
pop
jecxz
or
push
sub
rclb
xchg
mov
icebp
cmpsb
xor
jecxz
add
repnz
adc
fwait
aam
and
shl
jmp
xor
or
aas
mov
rorl
mov
repz
mov
mov
or
or
clc
push
mov
repz
dec
sbb
sti
push
mov
or
ss
mov
mov
add
mov
and
xor
or
je
xor
movsb
dec
sbb
adc
sub
cmp
or
pop
js
mov
pop
out
xchg
cmp
cmp
loope
cli
inc
mov
inc
jo
ljmp
fwait
call
outsb
shlb
rorl
mov
inc
in
dec
icebp
fdivs
ss
int
loopne
int3
xor
xchg
cmp
xlat
outsb
mov
pop
xchg
jae
je
push
ss
adc
test
add
sbb
bound
or
je
adc
out
sbb
lcall
xchg
add
push
mov
or
int
mov
dec
xchg
xchg
sub
jnp
jns
or
jbe
pop
ret
or
mov
addb
mov
push
xchg
add
imul
gs
dec
mov
clts
loop
sbb
es
jge
or
or
mov
cwtl
dec
ret
cmp
mov
nopl
push
sbb
vmwrite
test
dec
pop
or
pop
xchg
push
adc
sbb
hlt
ss
xor
pop
aad
rcrb
pop
push
push
adc
xchg
ljmp
pushf
or
popf
push
rclb
inc
cltd
pop
out
add
shl
das
aad
lcall
dec
out
imul
leave
cltd
mov
dec
push
cltd
adc
cld
ret
push
cmpb
mov
add
push
fldenv
fcompl
push
push
lods
rcrb
sub
inc
sub
add
ljmp
push
xchg
mov
push
adc
add
push
or
adc
mov
mov
sti
push
and
rcll
cs
sbb
push
lock
inc
pop
mov
inc
ret
xchg
ljmp
into
xchg
fcmovb
sub
mov
inc
xchg
int3
orl
les
ret
xchg
ljmp
dec
mov
dec
loop
jbe
popf
pop
inc
sbb
mov
rolb
or
xor
pop
pop
add
sbb
out
in
lcall
mov
xor
test
or
out
inc
dec
sub
add
inc
and
xor
inc
push
adc
jge
mov
sub
inc
mov
int3
mov
sub
mov
inc
push
mov
roll
rolb
test
daa
sub
add
or
out
push
rclb
fwait
les
xchg
roll
aad
push
cld
sub
or
dec
scas
push
add
inc
sti
loopne
icebp
imull
ret
inc
pop
add
dec
pop
fldt
pushf
push
aad
scas
adc
orb
adc
push
stos
add
or
or
daa
out
stc
scas
int3
adcl
aad
repz
add
sbb
add
stos
jg
dec
aam
scas
aas
mov
and
pop
adc
lods
cmp
lea
mov
add
push
cmp
imul
sub
adc
test
mov
add
add
rcl
mov
sbb
or
sub
xchg
dec
or
sbb
pop
inc
iret
iret
mov
jbe
push
loope
aad
cmpsb
xchg
repnz
xchg
stos
push
push
fisubrl
adc
push
push
lods
addl
add
int3
fwait
jno
mov
fcoms
pop
aaa
xchg
cwtl
or
add
les
adc
clc
jns
and
add
add
bound
mov
inc
inc
cmpl
dec
push
imul
xchg
outsb
mov
loop
bswap
mov
stos
sbb
fwait
pop
das
mov
daa
jg
push
insb
loopne
clc
mov
inc
das
das
dec
int3
fsubrl
sub
inc
call
mov
cltd
movsl
inc
imul
ret
in
lods
rclb
into
jns
aaa
push
adc
push
cmp
push
pop
or
mov
into
fadds
adc
ret
mov
iret
fiadds
xorb
inc
in
sub
push
inc
xchg
fbstp
mov
lods
xchg
aam
lret
inc
divl
jg
inc
xchg
mov
aam
test
shl
add
sti
es
mov
inc
frstor
lods
imul
and
cmc
fisubl
and
lret
aam
push
mov
jp
jecxz
push
xchg
mov
repnz
insl
push
pop
dec
inc
xor
sub
jp
mov
cmp
lahf
loop
rcrl
jno
mov
add
stos
test
and
xchg
push
les
fistpl
xchg
push
popa
shl
into
pop
in
in
dec
pop
in
jo
push
cmp
inc
xchg
cmp
decb
popa
popf
sbb
fisttpll
add
rolb
and
dec
cwtl
mov
adc
movsl
sbb
mov
dec
pop
addb
int
cmp
fidivs
int
fmulp
adc
mull
xchg
lock
enter
mov
ret
ds
inc
or
dec
inc
pop
popf
or
into
cltd
push
insl
or
frstor
xor
inc
jge
inc
or
lods
jno
movsl
or
xchg
rcl
fcomps
xor
or
mov
sub
push
loope
or
stos
icebp
push
lahf
les
mov
les
or
ss
ss
jo
hlt
lock
loopne
iret
les
dec
divl
mov
sbb
loopne
cmc
les
jne
dec
pop
loope
sbb
push
add
push
lock
inc
mov
leave
loopne
scas
or
pop
popf
insl
lds
xchg
mov
inc
pop
popa
sbb
fstl
push
xchg
sub
or
inc
inc
push
xchg
shr
jmp
or
and
popa
icebp
pop
subl
es
jp
outsb
in
iret
pop
rcr
inc
stos
sbb
xlat
cwtl
push
adc
adc
aas
cmp
xor
push
das
imul
jg
ja
dec
or
outsl
stos
cmpsl
mov
mov
lock
or
inc
loopne
or
push
sub
iret
or
arpl
inc
xor
ss
mov
cmc
insl
and
xor
dec
mov
mov
dec
or
out
lods
ret
dec
lods
sbb
lock
add
ret
mov
stos
or
mov
or
add
or
or
bound
xlat
loope
sbbb
rcl
jo
or
adc
fimuls
out
test
push
scas
fs
ret
aas
mov
mov
xchg
push
testl
push
mov
and
inc
mov
jmp
and
or
sahf
or
inc
and
mov
scas
pop
jne
mov
and
push
or
cmp
mov
repz
aas
jb
pcmpgtb
or
xchg
lahf
and
pop
inc
push
cmp
inc
add
test
shlb
jge
popa
ret
push
inc
cld
add
in
cwtl
mov
mov
out
fs
insb
xchg
int3
int
pop
dec
cmc
cmp
inc
or
je
cmp
sbb
jns
shll
dec
fidivrs
cmp
mov
sbb
addr16
jb
pop
or
movb
or
jg
xor
or
mov
repnz
or
inc
test
int3
mov
add
mov
or
stc
js
sub
cmp
mov
push
or
imul
dec
cmp
sbb
mov
test
xchg
push
add
fsubl
movsl
shll
jne
inc
sub
icebp
or
pop
out
ret
add
inc
push
fistl
or
and
insl
inc
or
loopne
xor
or
scas
ja
jo
jmp
loope
or
mov
fdiv
in
dec
pusha
ror
or
outsl
ds
addb
pop
out
push
sub
sbb
jecxz
sti
jmp
push
jp
aas
lret
sub
sub
ds
or
push
mov
inc
or
les
cltd
pop
fwait
add
inc
scas
adc
lods
loopne
xor
mov
xchg
adcl
sub
adc
in
mov
std
loop
lahf
xor
shrl
pop
int3
mov
or
sbb
daa
mov
int
mov
cmp
mov
dec
push
jb
in
sub
inc
and
cld
xchg
ss
in
cmp
or
in
shll
dec
popa
or
scas
cmc
and
dec
aaa
xchg
push
cmpsl
dec
in
call
pop
xchg
rcll
cmp
sub
lea
dec
ja
xchg
jne
inc
sbb
xor
out
stc
in
outsb
push
and
jmp
or
or
dec
ljmp
daa
mov
jle
lds
mov
lret
xlat
testl
or
and
pop
sti
or
pushf
xchg
loopne
int3
xlat
add
sbb
sub
mov
jns
int
fmul
enter
iret
cmp
dec
or
xchg
push
cmpsl
mov
pop
sub
cmp
mov
cmpsb
mov
push
into
addb
cltd
xchg
or
cld
arpl
and
vdivps
jl
lcall
imul
fists
inc
lds
int3
aad
xchg
cwtl
pop
test
dec
subl
adcb
adc
jecxz
imull
icebp
adc
sbb
lahf
add
in
orl
loope
lret
or
xor
jnp
jecxz
sti
cmpsb
in
jbe
cmp
jmp
cltd
add
push
je
push
mov
decb
in
mov
ficompl
inc
lods
jg
push
rolb
or
ret
shlb
mov
cmp
mov
stos
adc
pop
sbb
inc
add
jmp
inc
cld
out
push
lret
in
jl
pop
mov
loop
add
and
jb
scas
cmp
pop
jge
inc
mov
push
mov
mov
mov
sbb
adc
mov
sahf
daa
sub
mov
xor
push
sub
mov
stos
sbb
dec
shr
pusha
dec
dec
xor
xlat
out
sub
mov
aas
push
jg
pop
bound
pop
je
ljmp
add
fldt
mov
push
loop
lea
ret
sub
sub
push
test
inc
xchg
sbb
test
ja
mov
mov
clc
push
push
mov
xor
xchg
add
xchg
mov
sarl
sub
mov
inc
shlb
xchg
or
mov
mov
lds
pop
std
jo
fmuls
pop
cmp
fwait
adcb
mov
pushf
adc
in
faddl
movsl
or
sub
sub
ja
mov
aad
or
lahf
adc
imul
or
dec
movsb
mov
xor
rorb
loopne
push
and
insl
or
xchg
sbbb
pop
sub
sbb
test
or
insb
inc
mov
fistpl
ret
jmp
leave
pop
dec
xchg
mov
adc
ljmp
rorb
jg
sbbl
sbb
adc
push
or
imulb
xor
lcall
data16
sbb
jbe
cld
dec
in
sbb
ret
lret
or
add
outsb
les
orl
xor
lea
jb
sbb
mov
rclb
or
out
push
in
cmp
cmp
ljmp
rorl
mov
cmp
ss
out
hlt
pusha
or
shr
mov
mov
or
pop
outsl
or
jge
push
call
popa
ret
aas
in
in
int3
xchg
sub
sub
mov
repnz
mov
insb
cmc
test
ds
nop
scas
push
or
push
xor
push
or
cli
jb
mov
mov
xor
stos
aaa
or
lcall
push
call
into
mov
cmp
adc
or
sbb
jp
pushf
mov
pop
inc
scas
sub
mov
aad
sbb
mov
sbb
int3
sbb
push
inc
mov
pop
ds
cmp
mov
inc
jno
shl
nop
push
mov
out
dec
popa
fcmovnbe
adc
ret
mov
mov
cmpsb
dec
adcb
in
flds
pop
repz
jb
rorl
mov
data16
push
cmp
addr16
push
or
mov
jg
mov
pop
cld
mov
cmpsb
jmp
shr
popa
mov
outsl
xor
push
adc
mov
lods
bound
popa
or
sub
push
sti
jno
mov
dec
lahf
inc
pop
iret
xor
mov
xchg
inc
imul
pushf
outsl
add
jge
adc
inc
mov
cmp
popf
outsb
push
pop
sub
or
cmpsb
dec
scas
stos
adc
or
scas
xor
cltd
rcrb
ds
or
ret
es
cwtl
or
sarb
cltd
xchg
addr16
jno
or
push
lds
lods
sub
add
jl
loope
jmp
gs
xchg
push
jle
cltd
push
xchg
mov
adc
popf
or
dec
mov
cmp
xchg
add
in
or
or
cld
mov
lret
out
mov
xchg
loope
scas
jmp
add
xchg
add
jb
sbbl
push
rol
xchg
fwait
or
mov
adc
or
test
ss
dec
push
jecxz
xchg
in
inc
dec
jle
xor
xorb
add
imul
dec
jmp
roll
fistl
popa
mov
fwait
out
dec
mov
xchg
rol
es
in
stc
push
or
jp
stos
test
or
mov
or
jl
pop
ds
mov
cs
cmpsl
push
sbb
or
fld
lds
cmp
jb
or
sub
jg
inc
jmp
cmp
int3
fnsave
aam
fidivs
or
mov
inc
into
xchg
sub
inc
jne
notl
push
arpl
xor
daa
int3
pop
mov
ds
cld
or
xchg
xor
fimuls
cmc
sti
add
push
mov
lods
iretw
int
nop
jbe
mov
sub
inc
rorl
pop
and
sbb
cwtl
adc
xchg
or
pop
jle
xchg
sub
push
fwait
or
inc
es
or
mov
cmp
jecxz
inc
pop
jg
dec
push
scas
pop
mov
mov
leave
sbb
cmp
and
lret
fdivr
cmp
loopne
mov
test
mov
dec
or
sarl
dec
iret
sbb
fdivrs
aam
sti
or
xchg
xchg
push
imul
cmpsb
repnz
or
pop
lea
rorb
je
insl
hlt
or
mov
jbe
or
cli
mov
adc
adc
mov
jns
dec
sub
adcl
mov
push
push
mov
pop
adc
sbb
lea
popl
testb
pushf
and
mov
dec
xor
mov
loop
bound
add
xor
aam
shll
jg
pop
or
xchg
aaa
xlat
inc
ret
fimuls
mov
pop
loopne
ja
pop
lret
sbb
push
mov
cmpsl
push
rcrb
or
mov
sti
pop
cs
les
mov
dec
fcomip
iret
aaa
out
or
ds
fdivrl
sub
or
cmpsb
divb
fcmovnbe
add
add
lret
xchg
mov
push
add
lret
leave
pusha
xchg
xchg
pop
imul
sbb
scas
or
subl
cmp
or
pop
jle
or
test
or
int
clc
mul
adc
push
cld
jbe
pop
cltd
test
xchg
pushl
or
mov
stos
mov
arpl
sbbb
cmp
pop
test
mov
mov
das
lcall
lods
sub
arpl
sbb
sub
sub
fsin
cmp
aaa
push
out
test
mov
sti
jmp
imul
mov
push
and
or
jb
jo
or
clc
enter
mov
xor
inc
inc
or
lods
sahf
fmuls
test
xchg
adc
jmp
or
pop
pusha
les
push
mov
or
sub
imul
fwait
push
sub
push
sti
or
inc
lahf
xlat
mov
imul
das
movsl
push
int
jmp
pop
sbb
aas
jnp
or
mov
cmp
in
fwait
loope
cli
dec
xor
xchg
push
or
add
xor
ja
inc
push
xchg
mov
pop
lret
daa
repnz
out
stos
push
dec
adc
and
mov
jg
inc
cmp
imul
movsl
sub
xchg
lods
int
inc
cs
test
sbb
fdivp
or
pop
cmp
mov
cmp
sub
inc
mov
adc
and
mov
push
sub
add
lret
fistpl
mov
ja
cmpsb
stos
xor
repz
bound
xchg
or
test
movsb
loopne
or
add
jecxz
mov
out
cli
test
popf
dec
aad
push
mov
or
cmc
ss
nop
jns
dec
xchg
ljmp
ret
xchg
je
mov
ret
pop
adc
pop
or
fbld
cwtl
or
icebp
sub
mov
rol
add
cmpb
movsb
xor
cld
mov
and
mov
orl
stos
imul
adc
jmp
js
dec
jecxz
and
xor
mov
shll
or
add
lret
repz
and
pop
lcall
adcb
xor
idivl
loopne
or
push
sbb
push
outsl
xchg
out
cmp
in
rorb
add
jns
inc
dec
xchg
mul
sbb
xorb
shlb
cltd
push
dec
or
ds
mov
jnp
lds
mov
lods
sbb
push
stos
test
inc
inc
sub
mov
sbb
pop
rorl
jnp
js
repnz
gs
mov
test
mov
or
je
iret
test
push
jge
out
or
mov
pop
cmp
xchg
jecxz
or
js
sub
or
aas
jo
pop
xchg
fisttpl
mov
mov
mov
pop
loope
jae
xchg
sub
push
add
stc
inc
lea
or
aaa
test
jmp
push
mov
imul
sbb
push
xchg
jno
je
arpl
repnz
int3
daa
pop
adc
enter
cmp
addr16
sbb
dec
mov
outsb
pop
es
sarb
lahf
mov
clc
jmp
and
rcr
or
or
push
sahf
or
stc
int3
orl
mov
mov
js
push
adc
or
xor
inc
insb
imul
mov
dec
cwtl
les
iret
mov
xchg
repz
dec
lds
je
pop
push
xor
cmp
xchg
fnstsw
push
cmp
jge
fmuls
ret
or
enter
sbb
mov
imul
or
cmp
outsb
xor
ljmp
sbb
jmp
les
xorb
dec
push
imul
inc
clc
int
aaa
insl
ljmp
gs
int3
lret
or
mov
ja
cmp
cmp
or
outsb
and
mov
popf
sbb
sub
or
stos
outsl
rorb
hlt
inc
shrl
lds
or
lret
sbb
je
jns
lods
and
mov
cmpsl
dec
sbb
pop
or
mov
mov
aas
dec
xchg
scas
outsb
or
pmaddwd
cmp
ret
cmp
js
stos
cmp
sub
push
mov
cmp
and
iret
cmp
or
push
pop
mov
shl
or
pop
mov
out
js
or
in
pop
xor
dec
inc
fsts
je
insb
sbb
inc
pop
xor
sahf
in
or
in
adc
or
or
fbstp
or
or
call
int3
out
imul
dec
and
loopne
push
fmul
popa
or
push
inc
push
lret
cmp
lret
adc
repnz
or
repz
fsub
nop
mov
sbb
push
or
push
fidivl
clc
mov
les
jnp
inc
dec
sub
lret
test
divl
or
mov
lea
movsl
shr
adc
ljmp
shrb
insl
ds
rcrl
fucomip
and
sbb
lret
fldcw
mov
or
fisubl
mov
jg
add
jp
int3
xchg
mov
mov
rorb
jo
mov
int
push
pop
stc
mov
hlt
scas
mov
mov
jb
xlat
loop
or
adc
leave
pop
or
imul
push
adc
ds
shl
or
aas
into
inc
lods
or
or
adc
stc
sub
sub
or
sbb
fdivrs
in
push
adc
je
or
sub
in
lret
fistps
inc
push
mov
jne
mov
cltd
push
enter
inc
ficoms
cs
lea
lret
pop
insb
outsb
pop
sarl
dec
lods
xor
pop
cmc
pop
dec
dec
or
lcall
mov
shrb
xchg
push
int
and
pop
mov
push
in
or
or
pop
cmp
popf
or
in
test
adc
sbb
in
cli
mov
int3
mov
jnp
sub
cmpsl
mov
fdivs
xchg
or
hlt
fwait
adc
or
fwait
or
enter
or
sahf
js
inc
or
mov
outsb
jg
stos
cmpsb
lods
pop
fisubrl
xor
adc
test
push
xor
xor
shrb
in
jmp
std
das
or
ret
sbb
es
nop
dec
rorl
pop
mov
or
pop
mov
fcoml
adc
leave
stc
push
or
cld
sbb
adc
push
xor
add
adcb
icebp
xchg
mov
call
push
or
popa
inc
sbb
or
add
pop
cli
or
les
or
or
insb
mov
add
fcompl
adc
dec
ret
ret
push
idivb
repz
jmp
mov
imul
test
mov
dec
or
shlb
dec
int3
outsl
addr16
out
jnp
or
out
fadds
pop
aad
int
negl
repnz
or
repz
rorb
inc
mov
psrad
or
clc
or
mov
ret
xor
cli
loop
inc
inc
nop
push
rdtsc
xor
pop
loopne
nop
rorb
inc
ret
test
pop
loop
and
jg
push
sub
mov
dec
dec
ret
cmp
or
sub
cli
xchg
icebp
cmp
imul
xor
cmp
lds
outsb
xor
dec
or
popa
mov
or
jecxz
imul
push
or
pop
mov
cwtl
inc
add
sbb
add
and
xchg
jl
pop
lds
aam
sub
or
cmc
or
fwait
jl
push
or
jb
les
inc
in
jp
or
icebp
mov
jg
xchg
into
out
mov
mov
aad
and
scas
sub
mov
and
or
loope
or
or
out
data16
or
sar
jo
fcompl
xor
jae
das
lret
mov
or
jns
dec
jne
mov
adc
in
or
adc
inc
and
fisttpll
mov
int3
cld
loope
dec
divl
out
mov
or
cmp
rorb
sub
fildl
stc
mov
pop
xor
mov
hlt
lods
shrl
sbb
loopne
mov
out
inc
mov
imul
cld
jnp
and
movsl
jle
fsts
inc
insl
sbb
sub
stc
mov
dec
loopne
loope
mov
xor
dec
or
xchg
rcr
in
lea
cmp
adc
fs
mov
cmpsb
inc
cmp
aaa
sbbb
in
cmp
std
sbb
jge
dec
test
xchg
icebp
or
pop
cmp
cs
and
sub
iret
outsl
push
or
je
jl
inc
fs
pushf
roll
or
jbe
sub
cmpsl
dec
jns
pop
jno
pop
mov
push
cld
cmp
lods
mov
sbb
pop
in
mov
scas
fisubrl
rolb
int
or
adc
or
dec
inc
add
cmp
or
enter
or
in
outsl
sub
xor
inc
test
or
xor
ret
mov
push
push
pop
int3
ja
adc
aas
cmp
sbb
inc
xor
testl
data16
mov
outsb
sbb
dec
mov
notb
mov
dec
ret
cmp
loop
xor
outsl
fadds
loopne
ror
inc
rcrl
call
cmp
loope
and
cmp
dec
pop
int3
in
in
ret
outsb
add
fisttpl
lds
xlat
pusha
pop
push
xsha256
cmpsb
xchg
lret
test
sbb
or
pop
xchg
jae
mov
xchg
stc
add
xor
jl
mov
scas
inc
pusha
jnp
adc
mov
or
jp
lds
fidivs
xchg
loope
or
sub
xor
scas
imull
cmp
clc
repz
movsl
dec
add
and
jl
pop
in
mov
movsb
mov
push
jmp
pop
dec
in
cs
mov
mov
test
dec
pop
loopne
inc
mov
dec
aaa
xchg
and
rcr
or
push
std
sub
in
pop
sbb
push
test
imul
loope
mov
or
push
pop
xchg
or
push
out
sbb
push
jg
lret
addr16
mov
shlb
popa
dec
aam
aad
shlb
or
xchg
dec
mov
or
sbb
addr16
jmp
or
test
dec
cmpsl
mov
adc
or
outsl
add
rorl
ss
hlt
xor
cld
sub
cltd
movsb
test
adc
mov
jg
mov
jb
push
or
mov
pop
loope
jge
mov
or
or
test
sub
scas
loop
stc
or
cmp
loope
pop
lock
mov
imul
mov
add
adc
pop
int3
dec
sbb
xor
cmp
jmp
inc
lcall
xchg
ljmp
aaa
test
cmp
and
lods
loope
or
cmpb
mov
push
stos
popf
dec
mov
mov
or
cmpl
imul
dec
stc
fnstsw
lret
pop
inc
jg
inc
sahf
and
mov
xchg
test
or
std
imul
or
lea
mov
dec
xor
adcb
xchg
dec
mov
in
xchg
mov
mov
mov
push
pop
or
and
dec
test
jae
fucomp
sub
pop
out
cmpsl
dec
outsl
xchg
mov
sbb
push
scas
ret
cmp
pop
int3
cmp
adc
mov
rorl
or
cmp
push
or
xchg
or
lods
or
cmp
jnp
shr
sub
fidivrs
jbe
jl
movsb
mov
or
add
sub
mov
js
cs
popf
mov
or
xor
pop
push
dec
addr16
xlat
sub
je
mov
push
xor
mov
call
jnp
sub
sbb
ds
or
add
push
xchg
or
jle
fisttpl
push
fimull
push
fmull
xor
or
push
add
push
pusha
cld
mov
mov
pop
or
lods
jp
cmpsl
or
cmp
sbb
sub
int3
xchg
or
pop
or
jmp
adc
in
xor
inc
lds
fwait
xchg
or
sub
into
stos
dec
testb
les
sbb
xchg
pop
jle
imul
jl
movb
xor
das
lret
mov
outsb
scas
xchg
mov
mov
pop
or
push
jbe
fwait
mov
or
jecxz
jl
sub
or
fldt
outsb
int
addl
rcll
fmull
lahf
std
mov
cltd
mov
add
mov
push
or
pop
dec
adc
push
loop
adc
enter
int
out
jp
cmp
mov
dec
push
cli
popa
cs
or
adc
cmp
and
adc
mov
sub
mov
inc
cld
leave
adc
mov
nopl
and
movsl
dec
mov
stos
jnp
out
ret
push
jns
adc
xchg
pop
cmpsb
or
sbb
out
mov
jg
and
xchg
int
imul
ds
test
xor
insb
or
cltd
bound
lds
push
xor
or
daa
stos
or
and
scas
insl
movsl
mov
or
sub
or
lret
pop
jno
or
jp
dec
pop
or
pop
push
lcall
cmp
aas
push
insb
or
vfrczpd
icebp
flds
cmp
pop
adc
lods
mov
andb
ret
insl
js
pop
mov
test
hlt
adc
jnp
divb
push
aaa
xchg
fmull
mov
adc
lea
or
aaa
and
loope
std
jp
and
adc
movl
mov
imul
jae
xchg
push
push
adc
adc
int3
pop
cltd
roll
xor
sti
add
add
ret
pop
shrb
pop
fwait
push
sbb
test
cmp
divb
into
insb
cmp
les
and
or
das
inc
mov
pop
push
or
jo
sti
or
push
ret
fsubrs
mov
mov
imul
or
cmp
xchg
inc
or
dec
dec
add
rorb
lret
insb
shr
loope
mov
or
mov
cmc
fucomp
fcoml
xorb
jo
adc
xchg
cmp
mov
in
sub
into
mov
dec
mov
push
adc
jge
jo
and
jecxz
jb
xchg
add
rorb
jp
movsb
mov
dec
stc
ret
push
pop
sahf
or
inc
psadbw
mov
mov
loope
sarl
adc
out
sti
or
test
ret
int3
and
nop
mov
fistps
nop
rorb
hlt
xor
xchg
or
pop
push
add
or
insl
dec
sub
or
div
outsb
mov
jo
xchg
push
xchg
jns
add
das
shrb
adc
dec
or
pop
jns
enter
sub
jg
push
add
mov
mov
jle
or
scas
jmp
out
mov
or
movsl
loope
std
cld
mov
mov
pop
adc
in
cmp
fsubl
pusha
or
xchg
or
mov
and
ret
inc
ds
jge
jmp
int
adcl
cmp
js
cld
jne
jmp
pop
in
adc
into
mov
jmp
aaa
stos
aad
or
rep
push
jne
cmp
call
or
test
lea
mov
push
sbb
push
iret
imulb
aas
jo
insb
add
inc
in
sbb
lock
mov
or
and
sbb
shll
adc
rcrb
jmp
inc
xchg
or
mov
sti
or
mov
mov
cmp
or
mov
push
adc
outsb
dec
and
or
inc
mov
outsl
int3
jae
repz
cltd
mov
out
mov
sbb
mov
push
call
test
or
out
int
or
xor
pop
icebp
jae
flds
mov
inc
lods
in
mov
or
push
in
idivb
cmc
xchg
jp
out
pop
or
popa
xor
push
insb
or
lret
pop
lret
pushf
or
jmp
and
scas
mov
pop
loop
cmpl
or
inc
sti
cli
inc
repz
xchg
and
mov
inc
xchg
int3
outsl
aad
mov
or
xor
lods
or
mov
xor
arpl
je
test
inc
jp
pushf
shlb
mov
sarl
mov
mov
push
lds
inc
aad
add
loope
outsl
push
or
lods
fimull
sub
loop
imul
xchg
mov
push
movl
lcall
sahf
clc
pop
or
int3
mov
push
sbb
or
outsl
data16
in
cmp
xlat
clc
push
pop
mov
or
cmpl
pop
xor
jmp
sbb
push
xlat
testb
ret
or
add
repnz
pop
dec
mov
loope
adc
sub
jmp
imull
mov
cmp
mov
mov
pop
or
add
data16
xor
or
sub
aaa
push
or
xor
jae
and
xor
jno
or
dec
add
or
xchg
mov
rorl
mov
scas
push
or
jmp
or
fistps
jge
scas
cmp
mov
xchg
jb
stos
add
rcl
test
subb
pop
stc
outsb
test
in
cmpsl
mov
lea
sub
int3
in
rcr
or
ja
arpl
mov
mov
xchg
enter
and
or
jbe
lret
fmull
repz
push
mov
ja
daa
test
cmp
xchg
rcrb
sub
sbb
out
push
mov
incb
fmuls
repnz
mov
or
lret
mov
dec
lret
jecxz
sbb
cmpsl
sub
rolb
pop
or
loope
addr16
add
pop
sub
inc
push
add
mov
int
or
fs
lcall
mov
inc
mov
dec
sub
test
lds
pushf
imul
inc
push
aam
xchg
arpl
or
xchg
in
mov
lahf
or
jbe
adc
mov
or
in
bswap
clc
or
lret
mov
fstpt
mov
adc
mov
or
xor
scas
add
push
int3
subb
jmp
repnz
data16
cs
add
filds
mov
adc
xchg
nop
or
mov
inc
in
aad
sub
test
loope
sub
push
dec
jns,pt
xor
js
leave
dec
idivl
lcall
mov
or
rclb
lret
pop
xchg
cmp
lods
or
outsb
arpl
push
jl
pop
rcrb
sub
mov
mov
xor
std
icebp
shrb
jecxz
ss
pop
fistpll
or
dec
adc
aas
lahf
subl
out
inc
or
pop
outsl
xor
dec
das
div
and
sub
test
cld
inc
mov
scas
lcall
mov
sub
shll
popa
lahf
scas
ss
loopne
lret
mov
xor
inc
jbe
fisttpl
xchg
ja
rcrb
or
sbb
add
aaa
jne
sarb
jnp
stc
mov
or
sub
popa
dec
int3
mov
xchg
fdivl
test
je
dec
push
repz
mov
or
hlt
adc
or
stos
adc
or
xchg
rol
adc
mov
adc
inc
dec
mov
xor
or
jp
loope
or
ss
hlt
xor
push
rorb
pop
push
or
cld
ss
fimull
je
jg
lret
rorb
jbe
pop
loopne
icebp
je
out
cmp
ds
or
aas
push
push
pop
or
je
insb
xchg
pop
pusha
pop
cmp
or
outsl
cmovg
gs
or
fmul
inc
mov
int
rorb
or
filds
enter
repnz
xchg
or
fidivrl
xor
pop
adc
mov
clc
and
enter
xchg
or
test
shll
mov
ret
pop
xchg
mov
push
or
mov
xchg
sbb
or
imul
ret
out
cmp
idivl
push
cmp
inc
mov
std
jnp
sub
cld
push
add
push
incl
push
inc
insl
or
test
adc
xor
or
sarl
les
push
or
repz
push
push
fisttps
push
dec
hlt
nop
sub
adcl
fdivrp
jnp
daa
add
dec
add
inc
loop
jge
xor
aam
mov
mov
inc
or
inc
ret
fisttpl
cmp
cmp
lea
mov
cld
cmp
iret
ret
or
and
pop
cmc
adc
in
dec
adc
lret
aam
xchg
enter
fdivrl
loop
and
cmp
pop
std
popa
xchg
add
lea
imul
popl
enter
pushf
in
cmp
fmuls
insb
xchg
sbb
or
mov
add
mov
dec
lds
in
or
test
fistl
leave
push
xlat
mov
or
dec
bound
mov
sbb
ret
add
in
lods
mov
or
in
mov
int
lahf
mov
movsl
xor
lret
pop
or
lods
loopne
outsb
or
pushf
js
adc
data16
or
mov
push
fisttpl
and
ds
xchg
add
pop
inc
cli
fwait
mov
jb
or
lcall
aas
dec
jecxz
sub
xchg
or
fiadds
jns
cmp
loopne
inc
mov
mov
sub
clc
adc
lods
push
sbb
cmp
or
sarb
jmp
mov
add
jp
idivl
cs
fbstp
mov
or
cwtl
out
and
jns
movsl
push
or
dec
dec
jl
dec
iret
push
pushf
jle
ds
lret
mov
je
pop
lcall
fmuls
cmp
ss
lods
cmp
jle
cmp
je
jae
sub
inc
loopne
lods
cmp
mov
ret
xchg
or
xchg
out
aaa
call
or
inc
push
pop
lahf
or
mov
es
or
icebp
mov
dec
mov
and
sbb
fmul
pop
xor
mov
xor
jle
jb
inc
xlat
or
hlt
std
push
push
or
or
loopne
pop
decb
mov
ret
jecxz
mov
or
xchg
movsl
and
xchg
dec
out
inc
add
or
mov
imul
sbb
and
or
mov
mov
bound
movsb
call
ret
mov
es
push
mov
aas
mov
sub
call
cmp
rep
sub
sbb
ds
or
ja
or
out
int3
dec
inc
or
test
outsb
push
or
adc
pop
fisttps
pop
mov
xor
push
pop
push
inc
nop
inc
or
xor
cmp
cmp
xchg
rorl
xor
imul
xor
ficoms
and
mov
sub
lret
mov
into
xchg
push
hlt
adc
or
cld
dec
mov
or
add
pop
or
cmp
jg
or
jle
mov
mov
pop
aam
mov
int3
mov
clc
cmpsb
or
push
mov
mov
or
rorb
or
jnp
xchg
bound
aas
mov
push
or
inc
fldenv
or
sub
inc
lret
pop
pop
jno
dec
hlt
int3
insb
fadd
or
loopne
sub
sub
syscall
mov
sub
push
xor
scas
or
daa
xor
sub
push
or
out
out
adcb
aam
test
xlat
addr16
jne
push
adc
xor
in
mov
es
std
xchg
mov
add
xchg
mov
mov
cmp
sub
or
push
je
mov
inc
xor
cmpsb
xchg
or
push
arpl
arpl
adc
repnz
push
out
test
push
cs
aam
push
hlt
nop
jnp
pop
in
outsb
or
adc
mov
cwtl
icebp
xor
cld
adc
xchg
gs
mov
repz
jno
and
dec
shll
jnp
dec
dec
call
popa
orb
xor
int
repnz
cli
add
inc
int3
leave
and
rcrb
outsb
imul
xchg
or
shll
dec
cmp
int3
push
or
xchg
mov
cmp
movb
lcall
mov
dec
aaa
sbb
or
mov
sti
mov
or
in
or
cmp
popa
add
mov
movsb
in
jbe
insb
les
xchg
add
pop
cmp
scas
dec
iret
stc
jecxz
std
mov
mov
in
movsl
push
cmp
inc
push
or
xchg
sahf
repz
pop
sub
add
lret
icebp
ja
addb
xor
shrl
js
lods
shrl
pop
out
icebp
pusha
jb
cwtl
fucomip
or
jge
or
int
imul
adc
testl
fnstenv
xor
inc
sub
out
mov
test
or
pop
mov
fcmovnu
inc
jg
lcall
xchg
add
inc
push
mov
or
pop
pusha
je
int
mov
push
cmp
cmp
pop
jns
gs
das
dec
out
mov
mov
lea
test
jge
jmp
cmpsb
jl
add
out
add
and
pop
push
sbb
mov
pop
pusha
aas
and
shll
cmc
das
imul
push
push
or
stc
inc
or
dec
jno
addr16
loop
cwtl
les
sub
aam
sbb
and
shll
vfnmsub231ps
ret
lret
xchg
or
fsub
sub
test
cmp
pop
repnz
stc
ret
mov
pop
and
and
xchg
movsb
test
in
pop
loopne
add
xchg
lods
rclb
stc
nop
test
jno
aam
or
xor
push
or
mov
mov
xor
lds
xchg
stc
aaa
or
call
mov
in
fsubs
mov
and
inc
sbb
mov
mov
gs
mov
mov
sahf
scas
dec
xchg
test
push
cltd
push
sub
push
jns
push
test
cmp
dec
rcrl
std
push
mov
xor
scas
or
xor
adc
mov
data16
push
mov
xchg
jae
xor
cmp
cmp
inc
inc
adc
push
add
cmp
jae
mov
cmpsb
mov
or
push
aam
mov
xor
test
out
or
dec
xor
push
pop
fs
and
leave
jb
outsl
push
stos
or
out
mov
js
pusha
int3
scas
xchg
cs
out
or
decb
negb
stos
pop
ficoml
mov
or
fistl
inc
stos
stos
loop
xchg
jge
adc
or
loopne
xchg
stos
and
stos
adc
push
xorb
cmp
aas
dec
dec
mov
lods
stos
fwait
mov
imul
pop
pop
or
cs
xor
sub
inc
cmp
or
xchg
decl
ret
jp
mov
mov
jnp
loope
mov
fcmovnb
or
inc
pop
pop
push
or
push
push
mov
sbb
mov
cmp
out
test
in
subl
or
adc
mov
out
cmp
or
sub
ret
dec
mov
ss
cmp
pop
push
or
loop
lock
jb
pop
out
ret
test
stos
sub
xchg
pop
cmp
or
test
les
xor
add
mov
cmpl
or
adc
lea
mov
or
mov
or
cmp
push
push
int
icebp
sbb
sub
push
pop
or
dec
fwait
xchg
push
in
in
mov
daa
clc
hlt
or
je
aam
or
sbb
iret
cmp
push
cmp
push
mov
push
xchg
mulb
aaa
mov
ret
jae
stos
xor
ljmp
fildll
movb
loopne
xchg
fcmove
or
cmp
scas
sub
or
cmp
es
pop
cmp
push
push
or
push
mov
or
leave
stc
mov
out
and
ret
or
sub
dec
insb
or
sbb
dec
stc
fldt
or
leave
call
mov
and
int3
mov
movsl
fisubs
stc
insl
dec
fnstsw
out
movsb
out
sbb
sub
dec
mov
xor
ret
nop
jns
add
jmp
or
and
fdivrl
outsl
jg
dec
jl
loopne
ret
sbb
mov
cmp
push
daa
jns
popa
fs
mov
jge
int3
out
enter
push
aad
sub
outsl
cmpsl
pop
mov
shrb
mov
xor
sbb
ja
sub
js
nop
aas
imul
in
call
fildll
push
and
pop
xchg
or
imul
add
shrb
mov
push
push
mov
sub
xchg
out
push
cmp
sub
scas
add
into
or
enter
or
dec
jo
mov
mov
dec
cltd
data16
add
mov
nop
mov
fimuls
dec
rcll
jl
imul
adc
data16
sahf
cmc
jno
nop
or
pushf
movsb
in
or
jb
ljmp
xchg
xchg
fs
or
or
or
outsl
fdivr
mov
or
pushf
sbb
jnp
adc
dec
sarl
aad
test
ss
cmpsl
or
mov
jnp
hlt
mov
or
popf
sbb
or
cmp
ret
shl
aas
sub
jno
jge
lds
xorl
daa
iret
lcall
xlat
lret
cwtl
nop
cli
lods
push
jmp
std
hlt
sub
out
xchg
mov
subl
movsb
pop
mov
mov
iret
add
mov
and
sbb
es
arpl
cmp
into
dec
rclb
jl
aam
jo
int
mov
std
push
lret
or
pop
or
gs
push
repz
sub
dec
stos
or
aam
or
push
dec
dec
orb
or
or
or
fs
xchg
pop
jo
cld
ljmp
int3
add
add
rcrl
cmp
aad
out
mov
pop
stc
inc
lcall
pop
pop
adc
or
or
fwait
lahf
mov
mov
pop
outsl
stos
xchg
inc
gs
inc
mov
fstl
inc
mov
loopne
jecxz
jp
jmp
jg
xchg
mov
or
mov
sub
lahf
mov
or
outsb
mov
lcall
fadd
mov
mov
sarb
pop
inc
adc
loope
sub
sbb
iret
mov
adc
in
rorl
xchg
loopne
inc
mov
test
mov
in
jmp
jno
sub
add
test
xlat
sub
xor
mov
dec
fdivs
divl
in
lret
in
out
pushf
push
dec
sub
cwtl
jb
push
clc
mov
call
or
in
lds
mov
push
jbe
xor
arpl
and
add
icebp
inc
pop
sbb
ja
mov
aaa
in
imul
cmp
inc
stc
int
scas
nop
sarb
test
push
cmp
lahf
ret
push
xchg
adc
jbe
or
pop
add
sbb
push
scas
xchg
jl
loopne
sub
testb
stc
gs
cmp
out
insl
mov
int3
cmc
in
cltd
mov
xchg
sbb
add
pushf
jmp
xchg
push
dec
out
shlb
push
pusha
test
lret
pop
or
jae
aas
lds
mov
or
xchg
jno
hlt
or
or
addr16
or
fisubrl
push
icebp
pop
jl
dec
sub
cmp
fmuls
or
fs
mov
or
call
fidivrl
or
or
lcall
mov
xchg
inc
pop
subl
insb
mov
lret
mov
push
inc
mov
mov
aas
push
shlb
repz
push
and
lods
test
es
adc
cld
insl
ss
mov
xor
sti
dec
mov
pop
lock
xchg
sbb
stos
out
mov
jg
movsb
push
aas
sbbl
push
mov
adc
ret
mov
dec
mov
sbb
in
jp
xchg
sub
sub
push
push
in
mov
pop
scas
cmp
in
xchg
xor
mov
and
sbb
mov
fs
ret
ret
in
inc
mov
adc
lret
mov
ret
bound
enter
in
out
rorl
pop
in
push
fcmovne
das
sbb
xchg
ljmp
xchg
inc
or
arpl
and
jmp
mov
jmp
or
jmp
mov
pop
mov
push
aaa
js
ljmp
repz
cmp
push
jle
or
sbb
in
std
cmp
sahf
adc
jae
push
sti
inc
xchg
rolb
insl
nop
pop
jbe
xor
mov
imul
fisttpll
cmp
movsb
or
push
add
fimull
icebp
outsb
jmp
aaa
ss
xchg
and
fcompl
or
imul
insb
push
or
lcall
movsb
pop
std
jno
pop
and
jl
and
cmpsb
sahf
or
aaa
dec
pop
fwait
sbb
in
cmpsl
or
arpl
or
mov
dec
test
pop
rorl
cmpsb
adc
or
lahf
adc
cmpsl
jg
or
movsb
repnz
jb
pop
push
sbb
xchg
data16
aas
mov
inc
out
out
mov
rorb
xchg
outsl
repz
cmpsl
out
dec
push
dec
cmp
mov
lahf
mov
dec
mov
insl
cld
cmpsb
xor
fisttps
mov
sarl
mov
jmp
fmulp
or
lea
jbe
clc
cmp
cmc
ret
and
sub
je
aas
or
lret
gs
in
pop
or
sahf
push
insb
iret
or
out
sub
in
pop
mov
outsl
enter
clc
lods
or
cmc
push
or
or
mov
mov
or
stc
sbb
fimuls
or
ret
mov
add
dec
arpl
hlt
adc
dec
jae
push
les
or
or
fisubrs
sbb
pusha
aad
mov
aas
sbbb
push
mov
cmp
mov
mov
mov
adc
mov
clc
int3
push
xor
enter
leave
jmp
sub
dec
mov
push
push
inc
push
adc
lea
popf
adc
loopne
xor
int
mov
adc
sub
dec
ljmp
pop
clc
stos
jmp
lea
daa
inc
or
and
and
and
ret
xlat
rol
mov
or
movsl
jno
pop
or
and
lret
xchg
or
fisubl
inc
or
in
test
or
mov
mov
sub
das
adc
or
nop
mov
test
mov
sahf
dec
xor
xchg
aaa
shrl
xor
aaa
out
push
sbb
dec
cs
pop
xchg
or
mov
paddw
cmp
pushf
mov
jae
ljmp
repz
sbb
adc
and
cmpsl
test
adc
lahf
push
lods
or
cltd
xor
mov
jb
cmp
xlat
lret
sbb
or
mov
ss
fisttpl
cmp
push
sbb
inc
pop
iret
lods
dec
or
or
dec
xor
clc
cmp
test
cwtl
ljmp
xor
fwait
dec
cli
aad
mov
arpl
jbe
xchg
xor
clc
ljmp
jbe
inc
scas
sbb
sarb
repnz
out
push
sbb
inc
or
adc
cli
popf
sbb
xchg
pop
or
push
xchg
mov
nop
scas
or
ds
rorb
notl
pushf
jno
shlb
or
cmpsl
mov
inc
or
pop
dec
xchg
xchg
int
xor
xor
test
stc
imul
or
mov
inc
fisttps
repz
pushf
mov
or
divb
lock
jl
fistps
cmc
sarb
sahf
ds
adc
add
or
cmpl
pop
mov
std
cmc
sub
outsl
testl
xchg
fildll
lret
fcomps
test
jecxz
xchg
or
adc
push
sbb
or
out
push
scas
subb
xor
mov
stos
in
sbb
mov
xchg
push
fbstp
push
orl
mov
test
mov
xor
or
popa
mov
enter
int3
enter
cwtl
decl
jbe
and
dec
into
sub
cmp
popa
push
aaa
add
in
push
and
int3
jp
icebp
lock
fcmovne
out
xchg
into
pop
xor
mov
iret
enter
popa
sub
lea
dec
push
sub
nop
call
or
scas
and
or
negl
cmp
xchg
mov
push
mov
push
cs
inc
sbb
xor
adc
and
cmp
movsl
lods
outsl
in
daa
cmp
sub
or
mov
adc
jnp
out
in
popa
adc
dec
int
lahf
pop
sub
daa
or
jmp
aad
or
in
cmp
sub
dec
add
mov
ss
cmp
lret
maxps
ret
mov
dec
xor
push
dec
add
repnz
ds
sub
in
test
pop
and
out
out
or
jne
jbe
dec
cmp
loope
xor
pop
add
jg
nop
jge
jns
jae
push
cmp
out
xor
fs
aad
mov
cmp
add
jns
jecxz
in
fsubs
add
or
call
add
imul
lods
test
push
jb
jle
inc
or
mov
pushf
mov
into
ds
testl
mov
sbb
fdivl
or
add
mov
aas
cli
sbb
sub
dec
roll
jb
dec
test
cmpsl
xchg
xor
or
xchg
ficomps
sahf
stc
aas
add
int3
std
arpl
insb
cmp
mov
lds
dec
sbb
ret
in
xor
cmpsb
repnz
inc
xlat
sahf
stos
mov
or
out
cli
in
or
dec
jecxz
add
jp
add
stc
xor
jmp
out
mov
adc
pusha
push
add
sbb
insl
fnstsw
leave
mov
fidivrl
dec
sbb
pop
rorb
pushw
enter
dec
call
or
nop
fstl
or
loopne
push
mov
scas
or
xor
xchg
xor
jae
rol
push
mov
aaa
push
add
sbb
mov
fmul
or
dec
cld
lods
jns
or
sahf
mov
mov
mov
lock
int3
pop
inc
mov
mov
mov
pop
jge
je
mov
sahf
pop
lods
or
adcl
or
ss
add
or
decl
mov
xor
fiaddl
subb
jmp
sarb
jnp
adc
mov
es
or
sti
dec
in
lcall
cmp
dec
data16
rcrl
aad
sbb
or
ficoms
das
scas
jmp
lretw
add
fwait
add
sub
pop
sbb
or
popa
fistpl
lea
repnz
mov
leave
pop
mov
int
lods
scas
pop
sub
into
cmpsl
dec
call
pop
mov
add
incb
and
mov
push
lods
fistpl
mov
test
adcb
loopne
int
insb
or
aam
inc
aas
test
push
lahf
sbb
sbb
jbe
add
ret
aam
shll
jnp
or
add
ja
bswap
or
rorb
or
scas
out
inc
stos
or
lahf
or
popf
ret
mov
scas
lea
cs
fcom
or
movsb
pop
fbstp
int3
cmc
pop
dec
pop
and
dec
fs
cmp
sbb
push
or
ror
sbb
cmp
divb
mov
cs
aad
dec
pop
fidivrl
stc
pop
into
mov
shlb
aad
or
push
mov
outsl
push
call
shlb
add
or
pop
fs
or
rol
in
testl
dec
sahf
or
imul
in
sbb
bnd
lcall
or
addb
fisttpll
cmp
es
jge
or
gs
mov
mov
inc
lret
ret
test
cmp
xchg
pop
or
dec
sbb
or
out
fisttps
pop
jns
jo
pop
aam
inc
sbb
adc
or
cmp
jne
or
pop
movsb
loope
or
add
in
mov
fcoms
clc
dec
cmp
inc
xorl
pushf
mov
xchg
or
mov
mov
lahf
leave
or
sub
adc
or
into
int
dec
mov
lcall
outsb
push
gs
push
xor
dec
fld
mov
or
hlt
ljmp
xor
push
xlat
fisttpl
pop
cmp
mov
cmp
adc
stc
cmp
ss
hlt
fsub
mov
das
or
cli
jno
aad
adc
mov
or
jo
sub
movsb
sbb
sarl
jbe
jecxz
cmp
or
call
mov
nop
leave
mov
sahf
sub
xchg
mov
mov
dec
or
cmp
sub
aaa
adc
or
pop
nop
xchg
movsb
lods
aam
cmp
or
pop
call
mov
movsl
mov
jle
roll
xchg
cli
aad
mov
mov
xchg
cmp
ror
mov
push
xor
sub
adc
int3
sub
mov
dec
mov
aam
enter
fnstcw
lret
xor
into
ret
cmp
dec
cmp
lods
push
mov
ret
xchg
push
in
mov
loopne
out
bound
or
xchg
out
jge
mov
fst
das
pop
addr16
jns
or
cltd
dec
or
cwtl
xor
add
add
add
in
sbb
mov
std
stc
jmp
push
daa
stos
adc
or
in
mov
dec
dec
cmpxchg
inc
jne
cmp
je
in
or
mov
dec
cmp
or
lret
jmp
or
cmp
mov
fstl
loopne
and
int
sub
add
cmp
int3
rcl
xor
nop
loopne
pusha
jmp
lods
mov
pop
mov
rorl
push
push
mov
and
jmp
cmp
adc
mov
push
imul
movsb
push
ss
pop
outsb
adc
clc
or
in
lds
out
or
insl
pop
dec
mov
mov
mov
xor
enter
mov
ds
mov
rorl
or
outsl
call
ret
arpl
push
and
push
popw
mov
jb
and
bswap
les
clc
dec
nop
fmull
cmp
jno
or
fdivrs
imul
rol
jmp
fnstsw
mov
xor
rclb
and
out
roll
in
cmp
or
and
mov
mov
mulb
push
mov
or
sbb
int3
push
test
and
je
hlt
mov
jae
rorb
sub
aam
or
cmc
mov
or
mov
and
and
jge
mov
nop
mov
pop
cmp
call
lret
or
ja
jno
dec
int3
push
sbb
xchg
cmp
aad
xchg
sub
outsb
pop
push
arpl
testb
fcoml
sbb
aaa
mov
subl
add
mov
mov
mov
dec
adcl
xchg
in
stc
cli
inc
and
std
xor
jno
dec
cmpsb
adcb
jae
xor
or
hlt
lret
sbb
insl
fistpl
repnz
cli
les
xchg
dec
imul
lods
scas
addr16
mov
mov
repz
inc
xor
inc
add
cmp
or
jl
inc
aad
add
lds
outsb
or
daa
rolb
sbb
orl
or
push
sub
or
mov
inc
repz
out
icebp
cmp
ja
dec
jno
or
mov
inc
or
negl
lods
or
ret
inc
iret
xor
adc
enter
mov
lret
aas
pusha
or
out
rorb
cli
std
or
dec
clc
inc
or
cmc
fcmovnb
mov
push
test
or
mov
int
pop
jae
lret
or
cmp
fldt
icebp
ret
call
sbb
jbe
sti
ficomps
mov
sub
rcll
or
xor
sub
movsl
xchg
aam
shll
ss
jmp
push
fsubrl
or
fldcw
or
adcl
shl
dec
or
mov
or
xor
sub
out
jmp
aas
idivb
hlt
inc
xor
or
mov
mov
int
cmp
scas
cmp
mov
add
jge
lea
mov
pop
stc
out
mov
jecxz
and
cmpsb
or
jl
dec
add
cmpsl
mov
psrad
lret
xchg
out
or
or
pop
pop
or
out
aad
or
pop
xchg
in
xor
rorl
fcom
sbb
or
repz
xor
or
cmp
shrb
or
push
orl
pop
dec
push
dec
arpl
orb
je
push
mov
dec
or
mov
dec
push
push
insl
pop
pop
sbb
inc
clc
mov
and
dec
xor
jnp
mov
mov
cmp
outsl
or
int
adc
sti
cmp
outsl
push
jns
int
in
out
cmp
or
enter
fimuls
loop
scas
jecxz
jns
fs
aaa
add
pop
lret
loop
fmull
push
or
jg
xor
and
cmp
inc
or
cmpsl
int3
fnstcw
fwait
sub
adc
hlt
adc
sahf
inc
mov
cmp
sbb
and
pop
mov
cmp
ficoms
aas
rorl
pop
sbb
loop
jg
das
shll
cmpsl
pop
cmp
enter
push
mov
in
imul
adc
mov
and
das
lds
outsl
in
test
cmp
stc
pop
fldenv
jmp
repz
push
inc
test
mov
mov
add
or
sbb
out
adc
or
in
lahf
or
test
ss
xor
es
insl
xor
mov
sarl
daa
mov
xor
sbb
mov
and
jmp
sbb
in
orb
dec
mov
cwtl
test
cmp
sbb
push
jb
in
mov
sbb
push
or
push
out
dec
xchg
daa
lret
js
or
xor
xchg
mov
std
mov
in
and
push
into
jl
dec
or
adcb
mov
les
dec
fcomps
mov
cli
or
sub
scas
pop
mov
sub
insb
sbb
xchg
xor
jb
mov
or
js
dec
jle
add
in
jge
ret
test
mov
xlat
imul
mov
jp
xor
dec
jmp
or
int
inc
fisttpll
bound
shlb
adc
int3
add
adc
mov
test
pop
cmp
test
nop
inc
out
dec
shlb
cmp
jb
cmp
push
or
sarl
movsb
pop
aas
iret
or
or
mov
dec
or
xlat
inc
or
or
xor
push
icebp
lcall
xchg
ret
pop
cltd
inc
or
jbe
bswap
and
aam
mov
and
jne
jmp
ret
adc
add
lret
cmp
mov
ret
lcall
add
push
dec
sub
mov
xchg
pop
sbb
loopne
dec
mov
adc
mov
ljmp
addr16
jne
or
fstpl
push
mov
xor
dec
jo
adc
sbb
shl
into
in
or
mov
sbbl
xor
test
stc
or
mov
sub
lahf
scas
movsl
mov
cmp
pop
or
daa
jne
sbb
popa
lea
pushfw
ss
inc
push
dec
adc
sub
mov
dec
sub
loope
pop
scas
pop
push
rcl
cltd
add
mov
or
xchg
ret
ret
insb
mov
and
fwait
outsl
and
ds
sub
jp
lea
pop
adc
inc
mov
xor
arpl
movsb
repz
cmp
sub
pop
out
add
jp
sbb
ss
testl
xchg
xchg
movsb
stc
inc
scas
sbb
cmovge
xchg
mov
xchg
shr
cmp
popf
pop
push
out
outsl
mov
pop
push
and
inc
or
out
std
or
push
pusha
dec
jecxz
mov
jno
inc
or
xchg
loope
repz
fcoml
cmp
icebp
scas
testl
push
push
mov
inc
sub
loopne
inc
stos
aam
cmp
and
test
lea
or
sub
ss
dec
aaa
aad
int3
jnp
aam
push
sbb
and
cli
push
mov
and
adc
sbb
inc
mov
int
push
in
and
lret
in
add
or
sbb
dec
pop
mov
mov
xor
add
andb
mov
hlt
sbb
xchg
mov
lea
dec
int
loope
lock
or
adcl
lcall
dec
or
or
negb
pop
or
lahf
nop
add
mov
test
arpl
call
sub
or
jno
rorb
sub
xor
icebp
cs
in
lods
scas
rorl
xor
xchg
orl
or
cwtl
fdivr
pop
sbb
testb
scas
xor
mov
dec
fs
cmp
xchg
and
inc
cmc
aaa
sub
in
dec
pop
and
mov
repz
fstps
adc
xor
fwait
rcrb
or
icebp
loop
or
fisttps
in
ret
test
movsl
mov
imul
repnz
leave
or
push
in
lahf
testl
fistps
sub
dec
leave
sbb
and
or
jl
push
push
test
push
es
rcll
or
imul
in
scas
jl
jns
dec
cmp
or
mov
dec
frndint
cmp
stos
xor
push
xchg
adc
lods
aas
or
inc
inc
dec
jb
pop
aad
add
subps
das
repnz
sub
test
add
bound
dec
out
stos
das
xchg
adc
add
in
sahf
pop
ja
imul
mov
retw
test
sarb
repz
or
aaa
out
or
dec
jge
decb
imul
or
mov
pop
push
adc
push
jo
or
sti
lods
mov
or
mov
repnz
sbb
jecxz
or
xchg
sub
inc
mov
push
cmp
and
gs
xor
sbb
or
std
mov
or
mov
add
push
cmp
or
sbb
or
pusha
in
js
xlat
dec
test
jnp
outsb
bound
cwtl
mov
es
mov
mov
jl
cltd
pop
mov
orl
or
inc
jae
sub
cmp
test
or
xor
mov
mov
or
cli
or
or
adc
mov
mov
ficompl
cmpb
xchg
and
roll
pop
or
xor
shrl
test
cmpsb
fwait
fwait
shlb
xchg
gs
mov
and
insb
aaa
sbb
mov
mov
loopne
xor
add
push
orb
pop
inc
dec
dec
shll
xor
aad
mov
or
add
ljmp
and
add
add
mov
and
in
or
mov
sub
cli
cmc
out
iret
je
out
jmp
or
inc
inc
out
inc
cmp
adc
jns
inc
lea
ret
int
cmp
cld
xchg
imul
cmpb
in
push
cmp
ss
jecxz
inc
seto
mov
pushf
es
xchg
fadd
mov
and
or
cltd
mov
ret
sub
fsubrl
dec
decb
sbb
adc
xor
out
inc
stc
jae
dec
cmp
add
dec
stos
sbbb
xor
jp
adc
push
mov
bound
loop
cmp
jb,pt
insb
push
scas
and
or
pop
cmp
ret
popa
add
test
ja
push
scas
ss
push
sub
mov
xor
sbb
xor
inc
mov
dec
sub
mov
out
or
repnz
out
mov
cmp
jg
mov
das
mov
add
test
jle
jmp
cmp
dec
pop
nop
jge
xchg
or
xchg
int
mov
mov
and
cmpsb
xchg
xor
inc
jle
subb
sub
mov
push
cmpsb
stos
hlt
int
loope
clc
push
xor
mov
or
cli
and
lahf
aas
cmp
cmp
push
or
call
xchg
or
jmp
and
adcb
test
xlat
xor
jmp
inc
or
adc
out
icebp
insb
or
xor
fwait
or
mov
sbb
jge
and
out
or
test
shl
or
dec
pop
dec
in
mov
dec
jno
mov
mov
js
mov
lcall
or
mov
cwtl
jmp
sarb
cmp
xchg
enter
sub
mov
adc
aam
pop
int3
lahf
or
repz
or
arpl
popa
fmuls
bound
cmp
adc
xchg
addl
dec
add
fbstp
and
sub
out
sbb
repnz
cmp
xchg
pusha
aam
or
sbbl
or
fmuls
xchg
loopew
add
mov
mov
or
call
mov
push
pop
mov
xlat
popf
mov
fnstcw
add
aam
lods
nop
xor
out
fdivs
mov
shr
cmc
in
jl
sahf
and
mov
add
loope
or
cmp
pop
stc
adc
lret
dec
mov
dec
jg
push
sbb
lcall
arpl
test
push
negb
sbb
and
int3
xchg
dec
jle
fidivs
jmp
clc
gs
push
mov
sub
sarb
jbe
push
nop
xchg
xchg
movsb
movsl
push
mov
mov
adc
mov
sbb
sbb
std
mov
xchg
mov
aas
or
outsl
pop
ror
xor
fadds
ds
lds
test
mov
rcll
mov
or
pop
jae
dec
cli
idivl
out
int3
cmp
push
pop
pop
ret
xor
cmp
ljmp
pushf
ja
adc
outsl
or
jmp
cmpsl
dec
in
jae
mov
sbb
mov
add
pop
and
std
lods
enter
add
jg
jae
movsb
addl
or
sbb
inc
jne
fnstenv
dec
fsubrs
cmp
jne
or
mov
mov
out
mov
out
dec
aaa
nop
sub
fcompl
mov
lret
int3
scas
adc
jne
repnz
push
or
push
out
stc
fldenv
fstpl
mov
mull
mov
adc
xlat
or
sbb
jmp
dec
adcl
ss
pop
or
mov
or
cltd
call
jb
sub
push
bound
popa
push
push
imul
bound
lea
mov
idivl
sbb
inc
inc
push
pop
xchg
rol
push
jns
pop
sbbl
dec
mov
and
push
nop
or
ret
test
sub
cmc
or
add
sbb
xor
test
jb
pop
jns
xlat
mov
dec
in
push
dec
adc
rorb
fdivl
mov
js
jl
jle
mov
mov
dec
or
inc
jae
lods
or
and
data16
add
mov
icebp
imul
sbb
sub
aad
test
movsb
add
test
or
out
jmp
pusha
or
dec
xchg
aad
mov
popf
push
or
popa
lahf
int
dec
mov
or
sbb
out
sub
ret
push
and
icebp
pop
sbb
or
repz
icebp
dec
ror
gs
or
push
cmp
jmp
cmp
adc
jge
or
xchg
sbb
push
inc
adc
stc
push
push
xchg
imul
cld
mov
add
scas
cmpsl
pop
lahf
add
aas
or
sti
adc
xor
popa
xor
inc
mov
or
arpl
movsl
sub
stos
pop
fidivl
or
push
adc
int3
mov
xor
pop
pop
or
fimull
xchg
or
rcll
sub
leave
adc
jecxz
adc
out
gs
inc
push
insl
repz
inc
lds
push
push
out
adcl
mov
add
and
jns
adc
push
adcl
or
mov
inc
daa
xor
or
fbstp
dec
jno
adc
sti
call
or
shr
push
mov
pop
push
pop
loop
mov
mov
jmp
jb
int
fcmovu
mov
cs
daa
aaa
outsb
add
je
outsl
into
into
xchg
add
mov
outsb
cld
pop
xor
sti
sub
cmp
push
push
add
popf
es
xor
or
jmp
or
insb
aam
sub
pop
sub
das
or
andb
ret
cltd
cmc
mov
lcall
xchg
pop
pop
or
scas
sub
ja
fwait
or
inc
cli
insb
xchg
or
call
cmc
aam
mov
or
jnp
jo
mov
enter
or
mov
negb
mov
sub
fdivs
or
ret
xchg
cmp
or
push
mov
js
in
inc
test
pop
dec
shrb
outsb
dec
jbe
sbb
xchg
aam
repnz
and
lret
or
out
fs
dec
gs
push
adc
cmp
ljmp
or
call
outsb
sarl
int
orl
scas
cmp
or
cld
mov
sbb
je
cmpsb
testl
mov
push
push
cmp
dec
sbb
leave
or
push
mov
addr16
inc
dec
lret
xchg
sub
mov
or
loopne
adc
jno
push
or
clc
xor
aaa
xorb
push
popf
adc
or
dec
into
inc
or
push
xchg
pop
lds
add
mov
out
xchg
filds
add
pop
arpl
sub
aaa
and
scas
clc
sti
sahf
jns
sub
jnp
lcall
repnz
push
flds
inc
dec
cld
cmp
or
dec
fistpl
divb
repnz
or
cmc
mov
repz
or
repnz
jns
pushf
ds
test
mov
jp
xchg
push
lret
xor
adc
ret
rorb
or
xor
or
and
xor
ljmp
sbb
fistps
fimuls
mov
int
mov
xor
dec
jo
and
out
int
repz
jae
aaa
pop
cmp
or
in
and
setnp
or
push
jnp
xchg
cmp
push
addb
enter
sbb
inc
sbb
jae
inc
cmp
or
filds
lea
adc
lea
and
xor
cmc
rcll
or
lea
add
call
rolb
mov
out
dec
rcll
or
rolb
test
and
shrl
js
xchg
xchg
outsl
sbb
mov
xor
lea
xchg
xchg
jg
or
push
movsl
or
fldenv
das
mov
sub
xchg
push
lods
lret
xor
pusha
mov
or
jbe
aas
mov
mov
in
aas
dec
inc
sbb
test
cmpsb
or
test
cmp
pop
sbb
or
dec
push
adc
sub
scas
mov
lea
pop
push
push
test
dec
dec
mov
ds
je
lock
xor
push
ret
mov
daa
pusha
jne
jb
jno,pt
mov
adc
rol
or
mov
popa
dec
or
rcll
les
or
xor
or
xchg
sub
xor
xor
xor
or
shr
repz
frndint
in
lret
mov
add
and
adc
data16
or
in
test
call
push
and
add
ss
repz
iret
pop
test
push
fisubrs
xor
sar
outsl
sub
das
adc
es
ja
test
mov
xor
dec
jo
arpl
jnp
push
aad
push
or
daa
adc
xor
jmp
xchg
subb
fisubs
mov
repz
push
sbb
jbe
push
ror
push
push
xor
fldt
pop
fsubl
sub
xor
sbb
js
test
ds
adc
jo
jmp
xchg
push
mov
scas
sub
lea
or
icebp
pop
mov
sub
adc
in
outsl
inc
je
sbbb
movsb
or
mov
sbb
xchg
sub
or
mov
add
sbb
or
adc
sbb
push
lahf
inc
push
lcall
sub
or
stos
or
jbe
lds
sbb
or
push
jnp
lods
int3
jecxz
fstpl
lret
jle
imul
xchg
or
mov
and
int
push
push
js
daa
jbe
cltd
inc
test
rorb
rclb
ljmp
jnp
push
mov
aas
or
mov
cli
cmpsb
int
and
movlps
inc
xchg
outsb
cltd
imul
jmp
je
xchg
or
and
addb
pop
insl
stc
push
xchg
fdiv
inc
mov
mov
decl
iret
pop
mov
daa
mov
fldenv
outsb
mov
and
adc
or
outsb
ret
sub
inc
lahf
xor
enter
or
je
or
cmp
fcoms
or
dec
add
repnz
subl
sub
dec
push
or
xor
xchg
orb
jg
lea
adc
mov
or
mov
mov
and
adc
pop
cmpsb
js
mov
jg
pop
cmp
or
fwait
push
ja
iret
add
or
adc
lods
pop
or
push
cmpsw
jae
jmp
fwait
dec
ret
mull
int3
xchg
adc
cmpl
mov
fldcw
outsb
sub
pop
enter
xor
repnz
mov
inc
jg
cs
fdivp
stos
cmp
es
or
enter
or
mov
sub
repnz
mov
or
inc
cltd
int
stc
jo
mulb
or
popa
or
dec
or
loopne
cmp
and
in
dec
adc
xor
jmp
mov
imul
mov
fwait
int3
cltd
sbb
sbb
mov
enter
fsubl
jl
lahf
ds
push
xchg
pushf
inc
insb
fcoms
sub
cs
sbb
pusha
pop
int3
insb
in
sbb
dec
sbb
or
jle
lods
fbstp
push
cmp
cmpsl
or
rorl
cmp
dec
pop
push
lret
mov
repz
mov
xchg
dec
je
out
pop
fwait
in
out
inc
js
ret
lods
add
cwtl
xchg
jp
cli
xor
mov
or
sub
popf
inc
leave
xlat
test
int3
test
mov
cs
loop
cltd
ret
ficoml
mov
or
sbb
push
lds
or
jb
icebp
ret
mov
mov
xor
adc
dec
push
outsb
and
pop
js
imul
decl
jp
or
mov
lods
out
das
je
fsubrl
or
xlat
in
cmp
add
rcrl
xchg
and
loop
gs
je
xor
jne
push
jns
outsl
stos
in
adc
xchg
mov
daa
cmp
cmp
movsl
jmp
or
movb
push
inc
data16
aaa
or
pop
adc
mov
out
subb
je
push
or
hlt
jb
enter
cmp
in
mov
mov
aas
testb
mov
sub
cltd
fdivl
jae
jb
pop
jp
cmp
aas
pop
int
repz
jnp
push
shlb
or
pop
sbb
inc
add
lret
sub
or
mov
pop
add
or
icebp
addb
sahf
pop
and
xor
sub
or
repz
clc
or
addl
push
in
stc
xchg
mov
lods
test
sbb
sub
push
inc
jg
test
movsl
pusha
stos
push
popf
or
jnp
inc
add
dec
nop
push
cld
jg
icebp
or
psubsw
cmpsb
or
pop
aad
inc
and
out
jno
sbb
dec
or
loopne
mov
enter
sbb
xorb
mov
sub
pop
xchg
and
or
rol
test
xchg
and
ja
in
mov
pop
cmpsb
xchg
push
int3
sbb
adc
xor
test
cmc
or
flds
or
push
andps
std
lcall
push
jp
shl
inc
repnz
fs
mov
or
or
and
loopne
pop
scas
jns
in
fdivl
fwait
mov
adc
js
push
gs
or
out
jmp
int3
xchg
je
pop
and
aad
insl
or
sbb
fisubrs
mov
dec
or
fcmovnb
lret
push
aad
stos
icebp
shlb
jle
mov
xor
cwtl
mov
or
push
jecxz
mov
rclb
repz
sub
fcoml
daa
std
jl
or
xlat
sbb
or
mov
cmp
fldl
movsl
imul
push
adc
or
inc
loopne
loop
add
or
or
xlat
imul
xchg
mov
dec
sub
jne
sbb
or
or
push
scas
or
xor
ret
push
push
xlat
jmp
insl
fs
cli
std
sbb
out
adc
add
xchg
jg
adc
or
adc
jl
or
push
loope
push
or
pop
pop
gs
or
ljmp
not
add
sbb
or
mov
daa
fimuls
or
loopne
inc
push
or
cmc
out
outsl
or
jne
pop
dec
pusha
std
sub
sbb
mov
stos
xor
les
mov
adc
cmp
dec
repnz
sarb
mov
jge
inc
std
mov
jbe
int3
arpl
pop
xor
das
adc
aam
xlat
movsb
push
mov
and
ret
in
movl
add
int
das
data16
dec
add
cltd
xor
dec
fadd
scas
pop
movsb
mov
lret
xchg
repz
xor
rol
jne
dec
xchg
mov
ss
inc
pop
ss
push
data16
sub
pop
repnz
imull
or
mov
sbb
jg
scas
ret
cwtl
data16
sbb
cmp
pushf
jns
xorl
xor
cmpxchg
jo
repz
fsubl
sub
rorl
pop
ljmp
call
mov
pop
jp
fiaddl
mov
sub
adc
mov
loop
fsubl
inc
pop
inc
or
movsb
pushl
push
or
gs
mov
dec
nop
cmp
or
sub
inc
or
test
lcall
sbb
and
push
or
in
subb
loope
pop
lret
fcmovbe
cmpsl
push
or
rol
xor
mov
xor
sub
cli
data16
call
int3
and
or
arpl
dec
xor
cltd
mov
mov
xor
sahf
mull
pop
shlb
mov
sbb
dec
sub
jle
frstor
popa
sarl
and
out
mov
inc
fmuls
sbb
movsl
outsl
sbb
cwtl
and
and
loopne
cmp
xor
xlat
orb
cwtl
jle
or
inc
loopne
sbb
xor
cltd
xchg
pusha
loop
popa
push
xlat
pop
stc
daa
shl
jo
in
cmpsb
lods
xor
mov
inc
aaa
sbb
aam
fs
jb
or
mov
jle
or
out
jle
insl
mov
add
lret
sub
pop
inc
adc
enter
sbb
bound
test
cli
addr16
pop
cmp
sub
stos
jbe
jp
leave
sub
enter
xchg
out
or
addr16
movsb
cmp
sub
jp
mov
adc
test
mov
fmull
popf
cwtl
sub
cmp
out
ret
pop
test
int
or
and
out
lret
inc
jne
into
shl
or
xchg
mov
fidivrs
or
or
idivb
jg
cmp
mov
ret
dec
jecxz
mov
dec
lret
cmp
ja
or
cmc
lods
dec
lret
mov
packuswb
jecxz
aaa
cmpsl
mov
pop
add
outsb
mov
mov
push
shlb
or
lods
mov
mov
popf
push
dec
fcompl
pop
push
dec
mov
dec
ss
int
popf
jbe
push
and
and
mov
ljmp
and
pop
daa
ja
and
mov
fcmovnu
or
rcll
les
mov
pop
xor
mov
out
rep
sarl
or
popf
aas
icebp
or
cmp
jae
or
repz
das
or
int
fisttps
imul
dec
sbb
inc
sub
fdiv
or
cmc
repz
movl
inc
xchg
dec
or
out
dec
lcall
sbb
cmpsl
or
pushf
or
cwtl
or
mov
arpl
cmpsb
repnz
or
rorl
xchg
inc
sahf
mov
lods
in
sbb
xchg
leave
mov
or
jne
or
ss
sahf
dec
and
dec
fistl
cmp
or
xchg
mov
or
or
dec
or
jno
cltd
pop
or
xchg
jecxz
fwait
mov
or
jp
sbb
movsl
mov
out
and
rolb
pop
lret
add
mov
dec
cmp
jp
pop
insw
or
dec
mov
popf
andl
lret
add
add
inc
dec
stos
add
in
cmp
or
pop
cmc
mov
clc
mov
and
dec
fstl
cmp
or
shl
jns
mov
push
push
aam
push
pop
lea
sbb
sub
or
sahf
popa
push
mov
adc
pop
inc
xchg
aam
scas
and
dec
push
dec
sub
adc
lea
push
mov
in
lds
fadds
xor
dec
mov
out
xchg
dec
lahf
adc
jb
adc
lock
into
movsl
test
sub
push
or
push
ror
adc
mov
push
cmpsb
icebp
addr16
pop
add
xor
in
cwtl
mov
ret
movsb
adc
cmpsl
mov
cmc
mov
in
popf
test
repnz
lods
out
inc
or
pop
sti
insb
cmpsb
int
cltd
sub
les
cs
iret
xor
int
cmp
sub
data16
or
dec
shl
aad
xchg
xor
dec
and
ja
sub
lds
out
movsb
imul
lods
addb
or
push
mov
pop
jo
in
divb
shrb
xchg
in
decl
dec
sarb
das
dec
lods
push
mov
xchg
push
inc
daa
ffreep
dec
push
xchg
add
mov
mov
mov
cmp
mov
sbb
or
bound
fprem1
xor
mov
add
dec
int3
or
cs
fidivrl
push
lds
roll
xor
pop
lret
adc
and
imul
rep
into
jp
sbb
or
test
inc
mov
mov
or
or
mov
push
jne
mov
aam
adc
std
mov
push
insl
fadds
mov
rorb
popf
push
int
pop
in
jno
out
daa
das
mov
mov
decl
icebp
or
add
and
addr16
in
and
imul
mov
add
sub
ret
data16
lea
jae
sbb
ret
cmpsb
jl
push
and
ljmp
pmulhuw
mov
mov
ljmp
fs
xchg
jg
pop
sub
push
adc
and
sbb
in
cmp
ja
xor
pop
fisttps
sub
testb
sti
or
shrb
ds
stos
xchg
xor
lods
lret
xchg
pop
jp
push
mov
int3
sbbb
mov
dec
xchg
inc
out
push
or
or
js
fidivl
jg
imul
int3
xchg
testl
pop
sub
or
lods
cmp
pop
and
xchg
dec
or
pop
sbb
xchg
fwait
int
int
pop
faddl
or
scas
xor
adc
incb
pop
bound
lret
mov
ret
stos
imul
in
mov
lods
xor
enter
lods
or
sbb
or
fwait
lahf
sbb
lea
movsb
popf
lcall
int3
aad
xor
aam
and
das
scas
cmp
movsl
out
notl
or
xchg
mov
jp
sub
sbb
dec
sbb
out
xor
jg
fadd
xor
loop
mov
out
mov
or
or
loopne
jae
inc
xorl
xchg
scas
sbb
inc
cld
add
mov
and
in
xor
jmp
or
or
das
clc
stos
or
cli
adc
jge
xor
mov
and
or
in
mov
icebp
push
jbe
lods
push
dec
movl
or
mov
xor
outsb
cmp
paddq
push
or
push
or
pop
sub
idiv
pop
scas
or
push
sbb
lcall
or
in
inc
jle,pt
test
push
aad
or
aas
or
or
subb
pop
mov
or
int
mov
mov
jb
cmpsl
xchg
in
or
jns
mov
mov
cld
xor
and
or
inc
mov
stos
mov
and
xlat
add
sub
adc
inc
pushf
or
repnz
popl
dec
xlat
scas
shrb
push
or
rcr
sbb
loope
cmp
sub
pop
push
in
sbb
mov
push
fwait
mov
rorl
jl
or
adc
mov
mov
aaa
ljmp
push
lret
or
fs
ret
or
outsl
hlt
adc
fwait
into
aad
ret
jne
test
out
lret
or
mov
fsts
lods
repz
es
daa
movsl
enter
fldl
cmp
jne
pushf
leave
rclb
popa
mov
or
int
aas
push
add
xor
or
jecxz
mov
jle
or
imul
push
mov
cmpsb
inc
clc
or
xchg
cwtl
fsubl
or
mov
lahf
icebp
and
mov
push
jle
test
xchg
fdiv
outsl
mov
sbb
loope
or
gs
int
sub
xor
pop
xchg
or
insb
sbb
ret
mov
mov
cmp
adc
loop
outsl
push
movsb
fisttps
aas
push
dec
or
or
push
inc
add
mov
xchg
xor
data16
xchg
dec
addr16
insl
aaa
push
lahf
push
gs
mov
add
mov
imul
inc
push
adc
push
out
ljmp
xor
push
in
xor
dec
xor
jbe
lret
sti
ror
mov
aaa
dec
cli
lods
hlt
push
call
test
cmpsb
imull
or
mov
add
push
or
enter
sbb
jmp
xchg
fisttpll
push
test
outsl
cmpsb
test
sbb
inc
icebp
test
cmp
or
pop
sbb
mov
cs
sub
cli
clc
imul
or
mov
repz
mov
bound
imul
push
sub
incl
mov
enter
xor
or
dec
push
sub
push
dec
add
sbb
sub
loopne
ja
or
or
jmp
xor
push
pop
adc
or
mov
aas
jp
push
fistl
or
popa
arpl
sub
in
pop
mov
pop
xor
adc
mov
insb
push
shll
or
push
pop
add
or
fwait
into
xchg
dec
mov
push
cmpsb
fs
xor
lods
sbb
or
or
add
cld
or
leave
call
xor
add
mov
or
ss
adc
shrb
dec
push
xor
andl
fisubrl
push
insb
icebp
sbb
sub
or
or
inc
mov
ror
mov
out
xchg
and
int3
xor
or
and
fdivrp
jns
sbb
xchg
add
cmp
int
bnd
fstpl
sub
push
xor
mov
test
sbb
sub
mov
adc
or
pop
int
mov
hlt
arpl
rorb
sub
aad
clc
out
or
mov
xchg
int3
aam
and
gs
test
and
cwtl
pop
leave
fisttpl
mov
ret
into
ja
mov
mov
sbb
add
cmp
dec
int
insb
xchg
leave
popa
jno
xchg
mov
dec
mov
pop
test
inc
mov
cmp
dec
jp
pop
test
pop
fcompp
and
ds
dec
jbe
pop
jg
ss
or
pusha
pop
xor
icebp
dec
aas
fimull
rol
inc
sub
cmp
or
out
jnp
push
or
add
and
pop
xchg
jns
cmp
loopne
or
xlat
insb
scas
decl
mov
dec
cmp
int3
mov
popa
lea
adc
add
addr16
or
in
lcall
in
push
xor
sub
or
pushf
xor
mov
leave
sbb
mov
inc
sbb
ret
cli
xor
out
sub
add
in
push
xchg
dec
and
jnp
lret
dec
lahf
sar
sbb
mov
test
or
arpl
xor
cmp
push
stos
inc
inc
lea
sahf
rep
int3
sub
je
xor
pop
xor
or
movsl
ds
mov
rorb
jnp
or
cmc
xchg
mov
or
xor
or
or
mov
or
push
fiadds
jne
rclb
js
arpl
fldenv
xchg
adc
orb
popa
imul
cmp
ret
ret
cmp
aad
cmp
int
add
je
mov
rorb
sub
ret
inc
cmc
adc
bound
mov
fs
in
aas
sbb
or
and
mov
mov
cmp
inc
pop
enter
push
mov
dec
lea
sub
mov
xor
mov
mov
pop
mov
ss
rcrl
subl
xor
add
sub
push
fs
icebp
push
rorl
and
cmp
mov
and
dec
or
mov
incb
jle
xor
and
nop
je
or
les
pop
pop
inc
test
xor
or
pushf
adc
push
jo
test
and
scas
or
and
sbb
mov
or
push
sahf
test
sbb
stos
comiss
or
mov
or
mov
xor
aaa
mov
les
cmpsl
pushf
mov
js
cmp
or
mov
clc
or
ret
leave
ret
pop
mov
inc
dec
les
sub
pop
das
pop
push
mov
dec
dec
inc
movsb
or
in
ljmp
ret
aaa
mov
xor
push
add
xchg
mov
mov
js
outsl
sbb
inc
mov
jl
test
mov
mov
push
mov
je
mov
dec
dec
cld
sbb
sub
or
mov
sbb
syscall
ret
addr16
mov
inc
push
into
mov
adc
ret
sbbb
and
or
adc
addb
in
or
xchg
mov
sbb
jne
aas
in
mov
or
dec
pop
push
dec
hlt
pusha
pop
sub
loop
leave
dec
cmpsb
lret
or
dec
sub
inc
or
mov
adc
xor
lahf
and
outsb
add
or
adc
or
push
cmp
xchg
sub
cld
aas
mov
inc
adc
push
adc
ss
lds
xchg
push
push
xchg
xchg
outsl
or
mov
mov
sahf
add
jl
cmpsb
icebp
and
or
iret
ja
ret
fdivl
pusha
out
or
xchg
std
or
out
add
or
ja
ds
cwtl
sub
mov
std
clc
loop
sahf
xor
add
sti
lea
aas
xor
sbb
cmc
das
outsb
xor
int3
lock
jns
mov
pushl
sub
lret
mov
into
mov
and
outsl
ret
into
add
or
cli
xchg
xchg
dec
and
stos
enter
hlt
loopne
int
ds
fsubs
mov
scas
cli
das
or
push
mov
jl
xor
mov
clc
or
imul
or
mov
int3
stc
jo
je
dec
lret
fwait
mov
stos
cltd
or
sub
push
or
jns
test
mov
adc
adc
repz
pop
push
movsb
rcrb
jg
or
mov
bound
mov
sub
pop
or
or
push
or
jnp
ret
mov
scas
lahf
dec
xor
and
add
or
jne
pop
push
mov
inc
icebp
inc
xor
outsb
leave
cmp
cmc
and
dec
pop
in
mov
xlat
jae
inc
movl
lods
mov
and
mov
sbb
cs
test
adc
clc
xor
mov
mov
pop
jo
dec
fs
imulb
pop
jmp
psubb
test
enter
and
fwait
or
pop
jg
pop
into
orb
stos
mov
or
mov
sub
mov
aam
fstl
out
push
or
shlb
or
repz
fcomps
fsts
outsb
pop
push
fmull
inc
test
outsl
push
adc
or
adc
sbbb
sbb
mov
or
dec
push
lret
nop
mov
into
test
mov
cmc
cld
or
repz
xchg
or
xchg
pop
jae
int
std
fnstcw
ret
bound
mov
roll
outsb
or
jecxz
or
fbstp
mov
pushf
shlb
inc
push
out
adc
in
je
mov
stos
xchg
push
cmp
or
sbb
inc
xor
dec
push
dec
out
sbbb
or
insl
jb
enter
mov
pop
jns
mov
ds
cld
mov
stos
xchg
cli
or
inc
ljmp
loopne
mov
out
cli
out
xchg
and
mov
lcall
or
sub
mov
mov
xor
fdiv
repnz
js
mov
push
loopne
cltd
inc
fwait
leave
adc
bnd
stos
mov
sar
dec
stos
insl
or
test
mov
dec
ss
lods
add
stos
cld
inc
shrb
push
mov
dec
int3
mov
mov
mov
fsub
dec
or
cwtl
mov
lret
sub
adc
mov
adcl
lea
test
inc
add
or
inc
mov
push
lea
add
loop
idivb
jl
add
xchg
je
push
or
sub
in
icebp
cld
sbb
in
or
xchg
pop
jbe
or
sub
jg
inc
xchg
dec
pop
pop
movsb
cmp
movsl
xor
cwtl
inc
shll
sub
inc
js
int
or
movsb
addb
cmp
push
scas
or
cmc
cmp
test
inc
mov
and
int3
pop
stos
iret
mov
out
add
jne
or
push
inc
repz
or
stos
mov
aad
xor
scas
mov
push
pop
mov
jbe
or
xchg
adc
and
xchg
sub
sbb
popf
adc
cltd
push
nop
or
or
dec
scas
ja
xrelease
add
pop
ret
push
addr16
and
add
fwait
adc
dec
ljmp
push
inc
xchg
or
lods
lahf
inc
aaa
sahf
or
sbbb
push
imul
jns
sbb
je
or
xchg
insl
dec
pop
ret
not
jmp
sbb
sbb
das
inc
mov
int3
mov
sbb
jnp
bound
xchg
or
jbe
jb
jg
jp
or
test
stos
or
mov
sub
in
inc
push
add
inc
xchg
mov
orl
ds
xchg
or
mov
sub
mov
or
mov
cmpsl
scas
xchg
inc
lcall
sub
add
inc
clc
and
xlat
imul
cmp
jmp
lret
pop
lcall
push
and
push
imulb
cmp
std
pop
and
xor
add
and
add
dec
or
cwtl
mov
decb
dec
mull
ret
leave
push
cmp
dec
inc
movsl
outsb
push
xor
mov
push
ror
mov
xor
testb
cmc
arpl
sti
cmpsb
mov
leave
jle
int3
jmp
mov
jecxz
fst
pop
adc
or
pop
sub
xor
imul
sbb
inc
sbb
xor
hlt
lahf
sti
adcl
mov
xchg
or
jo
dec
in
pop
shlb
int
xchg
mov
cmp
nop
das
ret
adc
addb
or
hlt
punpckhbw
or
rcr
cmc
jg
adc
rclb
or
adc
in
mov
sub
sub
xor
or
ss
dec
push
cmp
mov
cmpsl
popl
mov
subb
xchg
popf
mov
pop
xchg
imul
pop
push
enter
mov
inc
aad
fimuls
pop
mov
lds
mov
sbbb
pop
or
push
or
andl
stos
or
lods
lret
insl
daa
jnp
out
pop
mov
push
rolb
inc
adc
pop
xor
and
dec
mov
sub
sub
xchg
fsubs
jle
or
cmp
push
inc
sub
jmp
jg
dec
imul
hlt
mov
test
ss
xchg
enter
mov
or
in
ror
mov
negl
sbb
arpl
mov
or
xchg
jp
daa
or
add
mov
and
cmp
ret
dec
inc
push
sub
js
or
fisubrl
pusha
sbb
sbb
fs
sbb
add
inc
sbb
int
js
xchg
jg
test
push
ret
xchg
inc
mov
lcall
icebp
or
mov
or
or
dec
testb
aad
test
or
push
sbb
mov
mov
out
push
push
or
mov
gs
sbb
xchg
push
pusha
xor
sahf
cmp
sub
cmp
insb
xor
push
push
or
in
mov
or
mov
sarb
or
inc
sbb
enter
jne
jb
lcall
nop
or
xchg
lea
push
cmp
mov
test
or
sahf
sbb
dec
jecxz
icebp
xor
in
fwait
jno
cmp
xchg
mov
test
dec
sbb
fidivl
rorb
sub
dec
jle
dec
movsb
add
adc
stos
mov
lods
out
fistl
or
jecxz
pop
cmp
cld
lahf
adc
jnp
xor
lods
ds
inc
mov
dec
js
sub
and
insb
xchg
or
test
mov
and
jmp
cwtl
movsb
leave
or
je
jnp
mov
lods
adc
call
cs
pop
cmp
add
or
mov
pop
mov
lods
cwtl
pop
cmp
cli
ja
push
test
sub
loope
or
in
fadd
cwtl
stos
mov
xchg
lahf
xor
xchg
mov
leave
shrl
pop
dec
out
outsl
mov
push
pop
js
cmp
out
sub
sub
add
jg
xchg
mov
or
test
pop
xor
aas
dec
decl
dec
fcomps
sub
jg
or
lret
mov
dec
aaa
call
jl
arpl
push
or
mov
icebp
iret
fisubl
bsf
in
lret
out
or
gs
ret
mov
aam
aas
adc
xchg
in
or
ja,pt
arpl
mov
cmp
dec
into
nop
ds
pop
outsb
cmp
mov
in
or
in
fwait
in
in
mov
mov
lods
jp
mov
xchg
in
fdivp
mov
dec
push
xor
fwait
shrb
push
fstpt
mov
imul
pop
pop
cmpsl
adc
dec
insb
cli
fs
cwtl
or
push
or
pop
test
cmp
push
ret
xchg
and
xor
or
mov
out
xchg
inc
dec
and
xor
lahf
dec
adc
or
notl
xor
fbld
inc
fsubs
das
add
dec
mov
ss
lds
or
aad
imul
and
jle
test
inc
sbb
and
inc
and
add
cmp
mov
xlat
push
test
scas
dec
mov
pusha
adc
inc
xchg
xchg
call
repnz
lret
sub
mov
jge
sbb
das
or
dec
mov
fmull
call
outsl
fimull
into
jmp
or
ret
cli
jno
adc
loop
mov
lret
sarl
jbe
ss
scas
sbb
jp
mov
jne
aaa
or
xchg
shll
pop
dec
mov
das
sbbb
and
mov
or
xor
iret
data16
xor
pusha
inc
jecxz
aaa
jb
sub
fwait
push
in
or
mov
inc
cmp
or
and
xor
or
daa
pop
sub
lret
test
inc
fnsave
pop
or
fucomip
cmpsb
or
add
adc
or
cld
daa
jp
cmp
ret
mov
stos
xor
lock
sbb
into
testb
icebp
rcl
dec
xchg
pop
dec
movsb
or
and
aad
or
pause
js
add
mov
sahf
test
in
fs
xor
hlt
ja
stos
aad
and
adc
add
insl
dec
das
test
bnd
push
hlt
jle
dec
iret
mov
cmp
or
clc
jae
lret
or
rcr
push
or
out
push
dec
push
mov
in
fs
insb
or
sahf
outsb
or
test
ret
or
pop
cmc
dec
jbe
cmp
mov
sub
dec
or
nop
push
push
and
es
cmpsl
shl
cli
punpcklwd
scas
xchg
fildl
lea
pusha
jl
xor
xor
ret
sub
cli
les
dec
shlb
loope
and
xchg
and
aas
xor
xlat
fisubs
je
icebp
and
int
js
xor
ss
cmpsb
adc
xchg
push
pop
or
out
popa
sbb
jp
lcall
lret
or
add
stos
iret
cmp
push
inc
mov
xor
xor
cmpsl
or
scas
imul
ret
cmp
out
jnp
ja
sbb
scas
aaa
int3
fcoms
cld
test
lret
mov
xchg
shrb
iret
fwait
push
fistl
mov
cmovp
imul
sarb
aaa
cmpsl
popf
xor
stos
sbb
inc
add
mov
mov
mov
or
mov
lods
addb
and
inc
ret
xor
dec
cmp
mov
inc
or
adc
loopne
jne
or
jg
or
mov
dec
jmp
push
bound
repz
mov
fs
jmp
je
loop
jl
push
jae
andl
addb
pop
test
mov
push
test
mov
out
sarl
out
add
fisubl
shll
jb
enter
test
leave
push
sahf
or
scas
pop
adc
mov
iret
pop
addr16
inc
or
push
and
jb
sahf
subl
cltd
pop
sub
test
sbb
or
rcll
or
call
mov
arpl
mov
mov
jl
add
mov
test
and
aas
in
push
insb
popf
ljmp
adc
xor
cmp
jmp
inc
mov
push
out
xor
imul
jns
nop
sub
push
or
lods
jae
mov
loope
std
xchg
add
push
push
push
stos
insb
pop
push
mov
and
push
imul
mov
push
nop
adc
adc
in
add
mov
incl
and
mov
sbb
js
and
mov
mov
rcll
lods
add
arpl
adc
loope
push
pop
or
stos
movsb
test
mov
pop
sub
or
jecxz
rorb
je
enter
adc
push
or
addb
bound
mov
mov
and
pop
dec
mov
pop
loope
decl
mov
test
mulb
cli
sbb
popa
or
jno
scas
xchg
mov
insl
int
push
ficomps
adc
lea
adc
and
push
decb
mov
icebp
jnp
mov
or
mov
ja
push
push
xor
ret
adc
push
leave
or
inc
js
addr16
aad
dec
lahf
outsb
sub
or
sbb
push
cmpsb
int3
push
mov
inc
popf
dec
push
dec
or
aas
in
dec
inc
ficompl
arpl
fldt
jae
push
or
rorb
repz
xorb
or
cli
jb
sub
lahf
adcb
mov
popa
outsl
test
mov
and
inc
or
stc
in
bound
in
dec
jb
pop
or
cvttps2pi
in
dec
jno
inc
subb
and
or
mov
xor
or
cmp
in
aam
pop
ljmp
mov
stos
xorb
xchg
sbb
or
sub
add
sbb
mov
pusha
fwait
pop
jp
or
xor
push
je
xchg
xchg
cmpsl
js
stos
xor
or
mov
push
int3
pop
fnstsw
cmp
xchg
cld
or
fsubl
push
push
js
repnz
or
cmp
lahf
into
fs
or
scas
rolb
prefetch
xor
jg
imul
inc
dec
aaa
fistl
cs
ret
or
mov
vphaddbq
test
add
shlb
dec
icebp
sub
addb
xchg
loop
mov
fistl
jle
sbb
cmp
movsb
ret
push
cmpsl
cmc
and
or
in
dec
lret
jl
scas
fisttpl
sub
dec
ja
int3
jns
xlat
xchg
or
sub
mov
es
jecxz
or
push
aas
and
add
and
sbb
xchg
dec
or
pushl
scas
ret
push
lret
leave
sub
les
int
or
rclb
or
mov
stos
and
or
or
cld
fidivrl
dec
ss
movsb
mov
xor
outsl
es
outsb
or
int
jno
or
xor
xchg
cmp
icebp
adc
enter
or
mov
cmpsl
movsl
sub
mov
pop
xor
daa
out
aas
cmpsl
mov
or
push
fidivrl
or
mov
mov
mov
cmp
mov
js
cmpsl
cmp
scas
xchg
or
xor
lahf
xor
mov
ss
test
pop
or
mov
outsl
out
int3
xorl
dec
add
sbb
adc
add
rcrl
cmp
mov
xchg
push
data16
sbb
add
std
in
out
adc
mov
pop
xor
mov
repz
cmp
adc
mov
cmp
enter
repnz
ret
cli
lods
lahf
sub
loope
sbb
or
inc
out
push
or
mov
sti
dec
mov
push
xchg
cmp
repnz
mov
enter
insl
pop
in
cmp
cmp
or
or
push
rorb
ljmp
xchg
cmp
adc
inc
scas
adc
lcall
or
dec
or
sub
dec
or
jle
mov
int
inc
pop
out
jne
or
jno
clc
aam
or
movl
aas
lahf
ret
pop
rcr
sub
mov
mov
ljmp
inc
ret
pop
adc
int
inc
loopne
pop
mov
cltd
insb
add
sub
or
out
lret
ret
sbb
cmp
jp
fsts
cwtl
cmpsb
push
outsl
or
inc
inc
sbb
in
xchg
inc
xlat
dec
or
ret
jecxz
hlt
push
shlb
fcomi
push
dec
aaa
pop
pushf
or
rorl
outsb
pop
mov
idivl
das
inc
rorb
popf
sbb
dec
imul
push
sub
sarb
xchg
mov
mov
fistps
xchg
scas
jno
inc
cmp
ja
xor
or
repz
pop
pop
mov
outsb
cmc
dec
dec
into
lahf
and
das
lret
push
int
push
cs
adc
and
and
gs
or
mov
mov
aaa
repnz
mov
push
jns
sbb
and
cltd
cmp
push
push
stc
adc
add
in
repz
sub
shl
or
cmp
loop
or
and
or
mov
and
fistl
cmp
pop
mov
ret
push
xlat
fstp
ret
cmp
mov
rorl
pop
or
mov
and
xor
or
xor
bound
mov
or
outsl
movsl
or
inc
mov
xchg
mov
pop
ja
out
add
mov
dec
xor
mov
add
sbb
or
or
mov
int3
addr16
fldl
xor
inc
aad
popa
divl
push
or
push
sub
lea
std
and
jne
mov
lahf
nop
or
cltd
jb
xor
push
pop
pushf
pop
int3
scas
sti
rcrl
aam
and
mov
out
aad
int3
xchg
push
pcmpeqd
mov
nop
jbe
or
cltd
hlt
pop
std
jmp
ret
outsl
stos
or
or
mov
pop
jo
mov
out
adc
outsl
out
push
test
sbb
cmc
sbb
cmp
or
aad
or
fs
mov
sub
xchg
add
or
cwtl
mov
dec
fs
push
fistpll
add
lods
cmp
iret
sub
xor
inc
and
push
dec
or
stos
enter
hlt
test
jmp
add
mov
je
mov
or
ret
test
out
cs
insl
mov
push
or
dec
sahf
sub
lret
or
lods
jnp
decl
out
cwtl
stos
adc
rcr
push
cmp
xchg
push
aaa
mov
or
int3
leave
cmc
inc
or
rcll
int
fiaddl
cwtl
test
jnp
adc
push
xlat
push
ficomps
inc
or
or
andl
ret
jns
cmp
fmull
divl
xchg
shl
and
and
jbe
call
fmull
jg
ljmp
daa
andb
or
and
jno
mov
loopne
xchg
clc
or
out
fdivs
jnp
outsb
pop
sbb
dec
shlb
jnp
xor
sub
jno
jae
stos
jl
mov
js
or
jg
data16
or
adc
push
stos
sub
and
add
fstps
frstor
or
ret
push
jbe
or
inc
nop
cmp
push
out
sub
aaa
testb
or
fs
mov
xor
jg
inc
fdivp
add
jb
jge
push
out
jle
mov
imul
and
in
xor
mov
mov
cld
jmp
loopne
fnsave
lods
add
repnz
cmpsb
iret
in
jmp
and
sti
loope
scas
push
mov
mov
aas
adc
or
add
mov
xchg
dec
xor
sbb
sti
sbbl
in
xor
es
int
inc
fmull
pop
cmp
or
mov
lret
and
jnp
cmp
mov
cmc
and
in
js
and
pop
aaa
xor
mov
adc
shll
jne
in
dec
mov
stos
and
or
clc
decl
lods
cmpsb
mov
pop
sbb
popf
fbstp
rclb
shrb
jl
pushf
cwtl
dec
jecxz
xor
cmp
lds
ja
aas
ds
or
push
mov
std
int
push
outsb
mov
mov
or
lds
mov
mov
mov
sbb
loop
or
jae
or
ror
enter
aas
cmp
or
movsl
js
fisttpl
dec
push
xlat
sub
and
lods
imul
fiaddl
or
not
or
icebp
xchg
add
fimull
cmp
mov
aad
sahf
rorb
xchg
aas
mov
inc
and
mov
push
sub
pop
mov
movsb
cs
dec
sbb
adc
jo
addr16
aas
mov
sub
std
push
roll
jl
sub
das
loopne
cmp
inc
sub
adc
or
mov
mov
xchg
jb
fmuls
push
scas
repnz
or
mov
mov
arpl
inc
ss
push
imul
aaa
rcrb
ret
pop
or
dec
sbb
xchg
jge
imul
test
dec
mov
push
dec
ds
cmp
sbbb
repz
jmp
call
stos
mov
mov
clc
out
mov
nop
pusha
ret
xor
hlt
and
fistps
add
ljmp
jns
or
das
xchg
xchg
outsl
cmc
sbb
push
cmpsl
leave
in
dec
or
sti
iret
jne
or
xchg
arpl
mov
imul
add
jge
aaa
xorb
cli
dec
xor
loopne
fidivs
decb
xchg
xorb
pushf
mov
jnp
lretw
lret
movsb
int
dec
insl
jae
fdivl
jmp
out
or
jo
push
mov
scas
xlat
pop
mov
inc
iret
mov
insl
cmpl
aaa
dec
dec
jle
or
scas
add
loope
mov
mov
or
and
inc
rorl
sbb
mov
cli
pushf
or
jnp
repz
fldt
sub
push
push
and
fwait
dec
xchg
scas
cwtl
dec
idivl
xor
rorl
adc
dec
sub
test
jecxz
add
and
movsb
or
and
sbb
cltd
sbb
test
cli
out
mov
jo
or
aas
jecxz
aam
mov
mov
sub
push
push
mov
mov
fists
cmp
xchg
mov
jbe
movsl
fnsave
ss
sub
and
subb
dec
mov
or
test
cmc
mov
ret
imul
loop
ret
xchg
pop
jnp
fprem1
test
push
adc
or
cmpsb
sbb
and
dec
sar
orl
mov
xchg
or
and
push
jge
jp
fcompl
lret
add
loopne
jo
sub
or
inc
lods
scas
sub
lcall
out
int3
cld
sub
aas
loopne
out
outsb
es
or
inc
cmp
push
push
sub
std
or
outsb
lods
les
mov
push
adc
in
and
mov
dec
aad
xor
xlat
push
cmp
mov
inc
cmp
inc
cmpsl
inc
sub
and
int3
sub
dec
lahf
mov
jo
filds
fcomps
pop
mov
add
or
push
pop
data16
out
xchg
dec
mov
fcmovu
or
icebp
dec
shlb
xor
loope,pt
mov
or
inc
add
or
lret
cmp
add
and
jbe
cli
aam
xorb
pop
sub
lods
or
or
or
push
leave
sbb
add
je
sub
or
int
pop
sbb
or
hlt
or
pop
es
or
in
push
sbb
out
outsb
pushf
or
xchg
aam
js
stos
xchg
push
inc
or
mov
push
in
or
or
xor
xchg
test
fcompl
sbb
sbb
test
fiadds
pop
aam
or
push
adc
or
push
xchg
sub
jbe
cmp
or
cmp
cmp
adc
adc
or
pop
jnp
or
imul
fs
fwait
mov
bound
scas
pusha
imul
mov
adc
lcall
push
imul
mov
es
or
and
call
jnp
mov
cmp
rcrb
std
cmpsb
scas
sbb
push
and
ds
xchg
adc
stos
and
daa
mov
jbe
add
inc
inc
pushl
or
pop
mov
xchg
outsl
lret
stc
pop
ss
sub
leave
push
lcall
or
dec
sbbb
or
aam
xchg
pop
dec
fcoml
xchg
xor
push
and
or
mov
stos
mov
pushf
sub
xchg
ret
int
or
fwait
xchg
outsl
mov
imul
ljmp
aaa
adc
cmp
dec
repnz
lcall
cmpsl
xchg
jge
jno
js
mov
lret
sbb
cmp
sub
int3
aaa
dec
frstor
gs
lods
xor
xchg
int3
xchg
cmpsl
push
in
jno
dec
sbb
xorb
mov
lret
or
dec
aam
loope
sbb
mov
pop
sbb
fs
mov
test
pusha
xor
dec
add
pop
pop
enter
jmp
jae
decl
je
test
dec
xor
inc
pop
nop
fsubrs
or
test
pop
scas
adc
das
shrl
test
push
jecxz
jg
inc
lcall
jb
xor
mov
xchg
sub
and
sub
adcl
or
cmpsl
mov
stos
dec
test
subb
mov
or
scas
inc
call
ret
shll
mov
xor
jno
mov
int3
mov
xchg
sbb
jp
repnz
jb
dec
or
jge
pop
repz
jbe
adc
aad
fs
mov
cld
or
jne
cmp
push
push
andl
movsb
or
push
add
rorb
mov
test
shlb
scas
or
or
cwtl
sub
pand
in
cmpsb
or
dec
mov
ret
in
and
fisubrl
scas
loope
sub
je
inc
fwait
dec
aam
dec
out
add
mov
pushf
in
mov
test
mov
add
cwtl
lret
pop
jp
pop
test
lods
sub
push
xchg
pop
sbb
or
out
mov
adc
or
and
hlt
adc
jae
pusha
loope
cmp
mov
iret
imul
or
fistl
adc
cmc
or
addr16
adc
ja
jg
mov
sub
and
adc
mov
movsl
or
jmp
jns
jno
lods
loopne
and
pop
add
sbb
push
xchg
shlb
lret
jmp
fcomps
or
mov
loop
das
pop
fcom
fs
fisttps
jae
jnp
les
sti
ret
mov
jecxz
in
inc
rcl
int
lret
or
ljmp
test
cli
das
add
dec
cmp
or
pop
mov
les
inc
test
ja
jl
inc
sub
lret
push
pop
xor
sub
imulb
jbe
cwtl
inc
push
gs
arpl
or
cltd
pop
out
lea
mov
xor
jae
inc
or
adc
push
ds
aaa
xchg
dec
ret
fistpll
les
or
sub
dec
add
lods
std
ret
popf
cmp
or
aam
test
or
xchg
sbb
mov
or
fmull
bound
ret
dec
or
adcl
fidivl
or
imulw
push
lahf
pop
mov
push
arpl
cmp
and
rorl
iret
aas
popa
or
notl
rorl
add
or
jecxz
mov
je
xchg
push
sub
leave
xchg
sbb
fcom
add
loope
cmp
dec
pushf
jns
xor
arpl
lods
add
or
push
sbb
or
shlb
jno
or
jle
mov
int
hlt
js
scas
cmp
ret
ret
aad
jecxz
dec
cmp
stc
or
mov
jg
dec
xchg
pop
out
dec
or
xor
loopne
test
cmp
add
test
sbb
add
sahf
mov
stos
add
or
mov
test
std
es
sub
shl
cmp
repz
stos
sub
fisttpl
iret
cwtl
or
pop
into
pop
add
or
jbe
pop
jle
in
dec
das
imul
mov
inc
jmp
aas
xor
cmp
or
sub
push
fwait
or
fucomip
std
enter
mov
jmp
aaa
loopne
lcall
xor
aad
mov
lahf
xor
sub
sti
js
in
push
xchg
mov
fcompl
movsb
sub
jg
sub
or
mov
pusha
out
push
cmp
neg
cmp
subl
push
mov
ret
mov
adc
or
int3
mov
cmp
fsubr
mov
repz
movl
insb
or
push
ss
sbb
or
loop
pop
cwtl
or
jnp
jle
mov
dec
or
arpl
jno
or
mov
dec
loope
rorl
xchg
xlat
xor
xor
push
push
lret
rcl
imul
add
ret
push
xor
jp
jmp
or
test
push
pop
std
mov
jbe
sub
or
call
xchg
push
mov
popa
xchg
add
fadds
push
or
cmp
mov
sti
lods
sub
cmp
jns
aad
mov
jo
orb
and
std
and
sbb
add
stos
xchg
mov
mov
sbbb
jle
ret
fldenv
mov
int
cmp
dec
cmp
int
sub
dec
xchg
mov
jb
ljmp
daa
aaa
pop
xchg
enter
into
mov
push
je
jb
cmc
or
filds
ror
cltd
insb
lcall
in
push
mov
mov
cltd
or
jae
addr16
xor
sub
sub
mov
popa
repnz
add
lds
sub
sbb
shll
dec
xchg
fsubs
xor
vpsubusw
dec
xor
in
gs
dec
jne
dec
push
int
mov
lret
xchg
fdivl
outsl
or
jp
and
cmc
mov
or
popa
mov
adc
js
or
pop
or
mov
call
nop
adc
stc
dec
dec
movb
cmp
push
lahf
inc
es
sub
into
ret
xor
or
clc
xchg
add
xchg
xchg
cmpsl
cltd
xor
inc
or
jo
dec
xchg
int3
aam
shrb
pop
inc
mov
nop
cmp
xchg
or
pop
mov
int
pop
fstp
outsb
iret
sub
or
test
or
dec
or
pop
cmpsb
pop
mov
sub
jg
inc
dec
dec
popa
pop
lds
add
mov
mov
fsub
or
stos
loop
mov
decl
pusha
mov
lret
adc
mov
mov
int3
das
sub
notb
jbe
nop
fnstcw
inc
mov
or
das
xchg
lods
cmc
add
stos
or
xchg
xchg
mov
mov
test
leave
sub
or
cmp
hlt
loop
in
push
imul
ja
jbe
push
out
jnp
sarl
fsubp
pop
or
repz
pop
int3
add
xor
mov
inc
push
rcl
shll
add
rorl
in
cmc
push
xor
dec
sti
push
push
outsb
test
jge
shlb
or
xor
mov
cmpsl
and
fiaddl
lret
sub
or
in
hlt
ret
or
mov
add
dec
addb
pop
sbb
mov
push
ja
jecxz
pmulhw
pop
or
dec
and
fisttpl
sub
pop
mov
inc
xchg
popf
sub
jmp
or
mov
mov
pop
in
add
cmc
cmp
scas
sahf
xchg
roll
sub
pushl
movsb
jae
xor
dec
or
mov
and
jbe
int
ret
xchg
test
adc
or
out
inc
sbb
bnd
sbb
flds
jo
mov
shrl
idivb
mov
loop
mov
push
lods
mov
lret
or
mov
gs
fisttpll
es
jp
loope
mov
fisubl
imul
jo
jne
sahf
and
adc
and
adc
sub
int
push
xor
sub
push
or
ljmp
pop
pop
repz
sub
dec
fisubrl
paddd
mov
test
cmp
jo
cmpsb
or
push
pop
inc
push
scas
mov
cmp
fimull
fstps
int
daa
sub
and
daa
fdivs
lret
pusha
or
repz
fiadds
jae
call
jne
shll
or
add
xchg
orl
mov
sbb
sti
ror
inc
mov
sub
and
adc
xor
sub
ret
pop
stc
or
cld
fs
rorl
pop
xchg
xchg
or
inc
fildll
mov
int
lret
fidivl
adc
mov
adc
dec
fstl
mov
lcall
and
loop
fsubrl
cmp
pop
repz
xchg
test
inc
lret
lret
cld
adc
jle
rorl
cltd
xchg
clc
pop
xchg
repnz
mov
cld
outsl
test
dec
inc
mov
add
push
sbb
cmpsl
xchg
mov
and
mov
aad
inc
test
insl
cli
std
xchg
lcall
sub
jp
or
push
cmpsb
loope
or
fsubrs
or
adc
orb
pushf
xor
pop
sti
es
or
out
aam
mov
mov
popf
mov
pop
ljmp
jbe
push
popa
das
pop
mov
or
dec
jo
adc
gs
insb
jg
jecxz
xor
mov
movsl
lods
aam
imul
fisttps
or
cld
cmp
sar
mov
loopne
mov
xor
pop
imulb
or
cmp
or
scas
pop
inc
and
jg
pop
fbld
in
mov
jae
and
jl
aam
in
or
rol
push
dec
or
lods
and
movsl
dec
inc
and
mov
fwait
xor
or
in
shlb
in
or
jo
cwtl
push
adcb
mov
lods
jno
xor
or
ljmp
mov
mov
xchg
mov
and
pushf
pop
std
inc
push
push
or
or
loopne
in
ror
jnp
mov
ss
xor
adc
jne
test
sub
or
cmp
or
les
popf
rorl
mov
icebp
cmpsb
or
adc
xor
out
gs
cmp
or
jmp
push
push
mov
fdivl
jae
and
push
sbb
and
clc
or
repnz
inc
or
outsb
lret
pop
lcall
popa
sub
or
faddl
sub
sbb
adc
aam
call
les
pop
fisttpll
sti
sbb
or
out
scas
pop
mov
lcall
pop
and
pop
clc
mov
adc
out
adc
add
push
fwait
xchg
push
add
and
or
cmpsl
loope
and
push
sahf
xchg
xor
xchg
or
cltd
fxch
sub
mov
in
xchg
dec
cmc
repz
mov
inc
mov
sub
or
push
loopne
std
or
jo
shlb
fmul
and
call
mov
xchg
imul
add
jno
push
mov
inc
cmp
xlat
or
icebp
ret
or
jl
jmp
or
imul
adc
pop
mov
pop
mov
push
fs
clc
inc
cwtl
rorb
shrl
stos
lcall
je
sbb
push
adc
repnz
push
out
aaa
adc
ret
jge
cld
add
leave
xor
xor
or
stos
dec
xchg
testb
push
mov
movsl
pop
dec
push
insb
pushf
xor
sub
mov
fisubrl
arpl
cli
push
inc
repnz
jp
push
in
xchg
push
inc
fmulp
stos
mov
jl
iret
pop
loop
xlat
repz
lret
int
lds
mov
and
jmp
mov
icebp
dec
ss
mov
repz
sub
jmp
push
fisubs
dec
in
sub
int3
xchg
or
adc
or
iret
pop
cmpsb
push
or
and
decl
lcall
pop
or
push
xor
int
pop
movsb
cmp
jne
dec
pushf
adc
or
cmp
cmc
mov
mov
mov
jnp
mov
negl
mull
test
xor
or
sub
jmp
and
or
call
jecxz
jbe
and
or
daa
in
or
in
dec
fldl
or
fisubrl
cmp
ret
rcr
xor
les
bound
sub
cmp
mov
or
pop
cwtl
jge
stos
xchg
or
jbe
fndisi(8087
dec
push
es
jge
dec
testl
test
cs
cmp
lret
fisttpl
or
sub
pushf
or
mov
pop
lods
cmp
adc
sbbb
add
push
fwait
adc
fsubrs
inc
out
pop
add
mov
sarb
sbb
push
and
ja
insl
sbb
or
sbb
pop
or
lret
jmp
or
jge
mov
in
jge
pop
add
call
and
fsubp
mov
add
and
or
cwtl
ja
sub
sbb
inc
or
push
pop
aaa
int3
shl
xor
in
pusha
mov
shr
rorb
lcall
add
or
sbb
in
test
xchg
ja
inc
je
out
clc
mov
or
jge
cmp
dec
cld
cmp
mov
and
repnz
mov
jbe
movsb
pop
into
jl
xor
or
mov
sub
mov
xchg
loop
mov
xchg
sub
mov
xor
js
add
or
imul
das
iret
test
ja
adc
dec
xchg
sbb
xor
fwait
pop
test
in
into
or
or
scas
fisttpll
cmpsl
cmp
xchg
rcr
ds
xor
adc
loop
mov
or
dec
out
rorl
test
stos
and
push
test
scas
pop
fstps
sahf
clc
adc
or
fsubrl
xchg
in
or
int
cmp
ja
je
popa
or
add
in
ljmp
stos
xchg
mov
or
lahf
sbb
pop
mov
fcomps
add
aaa
xorb
pop
dec
scas
add
test
ficoml
mov
aaa
or
in
dec
cmp
mov
rolb
or
popf
lret
sbb
inc
insb
in
cmp
push
dec
mov
push
in
mov
rcl
int
mov
xor
add
dec
cmp
or
mov
sub
push
out
mov
mov
ss
pop
or
sbb
shll
insb
ret
or
clc
rcrb
or
mov
mov
mov
push
mov
loope
jl
pop
ds
rcr
or
xor
repnz
jns
dec
imul
in
jge
iret
or
jbe
scas
mov
ret
lods
or
daa
xor
or
mov
xchg
pop
call
sbb
mov
mov
or
js
fsubrs
daa
mov
and
sbb
mov
push
add
cmp
lea
lret
xchg
mov
jns
dec
xchg
cltd
jbe
sub
xor
xor
cmpsb
in
or
call
jb
lret
inc
and
or
fadds
call
shrb
mov
mov
sbb
fnsave
mov
or
sbb
xchg
push
jbe
call
iret
mov
mov
out
je
icebp
out
in
pop
clc
jle
cmp
scas
lahf
stos
in
add
cmp
or
pushf
subl
xchg
int
ficomps
lods
movsl
int
test
das
cmp
stos
or
fs
add
mov
rolb
cmp
push
fwait
out
lret
nop
or
or
or
mov
mov
jnp
pop
or
mov
cli
cmp
pop
pop
cwtl
xlat
aas
out
mov
pusha
mov
mov
fdivl
sub
pop
mov
adc
sub
dec
or
mov
addr16
xchg
dec
mov
sarb
cwtl
outsb
mov
or
mov
mov
mov
inc
neg
cmp
sub
pop
dec
insl
pop
mov
push
xchg
jecxz
or
shr
enter
push
cmp
pop
cmpsb
mull
adc
or
int3
lahf
adc
dec
fs
mov
loop
lea
jo
inc
jno
sbb
jmp
mov
in
and
cld
mov
add
leave
mov
or
pop
jmp
cltd
or
pop
scas
and
sub
jle
sbb
fldt
xchg
inc
mov
ds
into
mov
or
fwait
mov
repnz
fiadds
dec
test
add
or
cmp
pop
push
mov
fimull
and
int
and
cmp
mov
jg
or
adc
fcompl
xor
test
jg
sbb
ds
mov
push
or
push
cltd
and
add
or
in
or
out
push
pushl
jno
and
push
dec
cmc
out
popf
push
popa
call
dec
adc
ficomps
jg
mov
jo
stc
jmp
or
xchg
pusha
adc
rcrl
out
mov
push
adc
or
rclb
push
outsl
ret
sub
jns
dec
aaa
fs
ja
jge
xor
push
mov
adc
scas
pop
pop
sub
inc
imul
cmp
sub
sbb
jb
sti
ds
mov
sbbl
repz
sar
fmull
insb
mov
adc
sbb
lcall
cmp
inc
dec
mov
sub
imul
mov
call
repnz
dec
or
rcr
push
xchg
jno
ss
shr
fistl
jmp
or
dec
and
into
je
jnp
cmp
loopne
mov
repz
out
or
movsl
cmc
and
or
push
pop
mov
dec
inc
jno
or
aad
or
stos
xchg
mov
or
cwtl
loopne
sbb
or
jp
loop
outsl
xchg
stos
mov
mov
inc
adc
inc
shlb
aad
aaa
adc
lret
jae
or
cli
pop
or
mov
and
xor
xor
or
and
sbb
enter
inc
sbb
lods
inc
mov
or
xor
xor
scas
testl
or
repz
aam
xor
data16
fwait
add
sub
and
sbb
lcall
mov
or
jne
mov
mov
add
lret
push
mov
pop
lahf
or
or
ss
sub
repnz
stos
or
jb
mov
dec
push
adc
pusha
dec
out
sbb
ss
pop
adc
mov
cmp
pushf
cmp
sbb
jne
scas
popf
add
int3
xchg
add
test
jnp
cmp
push
outsl
shl
mov
lret
jl
iret
int3
push
jle
stos
cli
lret
stc
or
int
in
pop
ljmp
repz
xor
mov
stc
adc
push
sub
push
inc
fwait
pop
mov
outsb
fdivl
adc
stos
aad
sti
inc
je
sub
and
shl
test
jns
xor
cmp
mov
sub
stos
imul
fcomps
out
cmp
mov
fs
cmp
sub
imul
imul
fdiv
stc
jns
fidivs
or
push
xlat
loopne
je
mov
xor
push
mov
subb
xchg
mov
sub
mov
fmuls
stc
mov
pop
mov
jge
outsb
dec
or
cmp
rorb
call
push
test
js
lret
or
inc
adc
push
dec
int3
sbbl
insb
sbb
enter
ficoms
mov
push
mov
int
scas
sub
dec
or
add
mov
sub
cmp
mov
int
nop
ljmp
cmp
jae
js
mov
and
nop
add
mul
mov
push
xchg
sub
or
imul
mov
mov
sub
daa
mov
inc
or
xor
adc
inc
add
xor
or
and
hlt
or
xor
cwtl
jno
pop
sub
and
arpl
lods
mov
jo
in
out
loopne
std
lret
mov
push
jle
xchg
inc
jbe
cmp
movsb
jl
iret
mov
js
pusha
jb
or
test
testb
addr16
mov
arpl
daa
cli
mov
jp
lea
mov
or
hlt
mov
or
inc
ja
repz
inc
mov
addl
ret
or
or
or
test
inc
ret
push
pop
cli
cmp
or
ja
cmpsb
mov
rorb
test
cmp
add
sub
sbb
xchg
mulb
fs
mov
hlt
add
push
clc
inc
addr16
add
fstpt
pushf
xlat
dec
lret
mov
or
outsb
mov
or
sub
out
imul
pop
loopne
mov
push
test
cmp
add
or
in
stos
sti
or
pop
adc
lret
jge
or
xchg
jns
inc
cld
pop
jge
idiv
mov
jmp
jnp
imul
in
mov
jecxz
repz
xchg
outsb
jne
push
daa
or
dec
scas
cmpsl
test
popa
dec
push
mov
pusha
or
stos
pop
nop
test
mov
repz
aam
pop
cmpsb
xor
add
out
incl
in
sti
adc
push
mov
push
enter
sub
cwtl
push
icebp
dec
xlat
jmp
push
bound
cltd
sub
or
and
outsb
jp
xor
addr16
sub
ficomps
dec
mov
test
push
push
fs
jbe
xor
mov
add
pop
xchg
fcoms
ljmp
repnz
or
sub
mov
inc
inc
fstpt
xlat
leave
sub
xor
or
std
mov
or
gs
jo
or
filds
sahf
movsl
lahf
mov
loop
or
jg
das
or
xchg
mov
sub
fisubrs
scas
dec
movsb
push
mov
sahf
lods
shlb
xor
cmp
and
pop
aam
clc
push
out
dec
or
test
mov
pop
add
in
ret
pop
cmp
or
subb
in
ror
mov
adc
repnz
nop
popf
leave
movsb
stos
dec
or
cltd
pop
xor
or
xor
sahf
ret
loop
clc
cmp
sbb
fucomp
psubb
lods
add
or
inc
fcoml
mov
movsl
mov
or
adc
mov
fisttps
stos
xchg
out
and
sub
inc
mov
mov
in
sti
add
mov
jae
mov
cmp
pop
xlat
and
mov
lea
out
cmc
shlb
mov
mov
xlat
mov
dec
mov
lahf
add
push
sbb
neg
push
loope
hlt
or
mov
dec
in
adc
dec
subb
arpl
or
jnp
pop
iret
dec
dec
outsl
in
xor
aaa
jmp
dec
int3
push
pop
push
mov
jae
rcrl
dec
sbb
or
in
dec
mov
or
imul
nop
mov
xchg
scas
or
jmp
cmp
jne
adc
nop
push
sbb
fsubl
rolb
sbb
cmp
or
test
leave
repnz
sub
mov
xchg
or
pusha
insb
dec
cmp
cmp
test
xchg
sub
rorb
pop
repnz
fucomi
xchg
jne
push
cmp
mov
push
sbb
and
jns
jmp
stos
xorl
inc
or
sbb
sub
sbb
dec
sub
cltd
push
jle
inc
or
jo
loope
lea
std
test
pushf
rcl
push
or
mov
cmp
mov
decl
cmp
scas
mov
mov
out
daa
popf
sub
cld
ret
push
repnz
popa
mov
pop
inc
rol
mov
mov
sbb
inc
arpl
gs
xchg
dec
jno
rorl
hlt
inc
repz
sub
xor
mov
scas
push
ljmp
or
mov
mov
mov
je
or
ret
or
aad
adc
lcall
cmpsb
popa
add
jno
cmp
jne
adc
inc
mov
sub
fcmovne
mov
and
mov
pushf
mov
cli
flds
repnz
sub
int
mov
loope
jle
push
insb
bound
or
orb
inc
xor
and
sub
xchg
add
or
lods
cwtl
mov
or
xchg
xor
cmp
or
push
or
xor
icebp
or
test
test
cmp
mov
push
inc
lock
add
xchg
push
cmp
jge
fimull
mov
es
or
pusha
mov
lea
mov
sbb
repnz
sub
adc
push
out
or
repz
mov
jle
lahf
cmp
call
sbb
mov
and
add
inc
mov
into
inc
or
cmp
jecxz
or
cmp
fistl
adc
or
xor
push
in
jmp
sbb
nop
mov
shl
inc
cmp
js
out
out
scas
xchg
sub
in
jg
sub
lds
fdivp
mov
mov
cli
inc
adc
jne
lahf
or
inc
adc
cwtl
and
cmpb
or
mov
jmp
out
scas
je
jl
cmp
sbb
sbb
cmp
sub
cmp
sub
sar
lea
ss
cld
xor
xor
ja
push
cltd
push
enter
xor
or
outsl
add
rolb
cmpsb
mov
xor
push
sbb
lds
or
add
xchg
pop
fmull
add
adc
movsb
cmp
aas
sbb
xor
or
mov
or
pop
rorl
iret
loopne
clc
into
popa
lret
inc
pop
cvtps2pi
mov
jecxz
pop
jp
fistps
lcall
or
xchg
mov
dec
adc
mov
hlt
mov
bound
cwtl
dec
add
fcmovu
push
or
sbb
sbb
sarb
or
xor
insb
sbb
adc
subb
lret
push
pop
jecxz
push
sti
or
push
or
lret
mov
mov
stc
and
add
shlb
movsb
xchg
jae
std
and
mov
scas
or
dec
test
jmp
or
mov
or
adc
mov
adc
imul
cmp
push
rcrl
xor
inc
jmp
or
jb
add
subl
push
and
mov
xor
pop
sub
lea
les
push
xchg
test
das
push
sbb
popa
or
shl
add
or
inc
or
aaa
inc
push
adc
push
push
sbb
test
push
xchg
mov
cmp
rcll
lods
mov
lcall
or
jmp
push
inc
hlt
enter
lret
cmpsl
inc
or
cwtl
and
or
fisubrl
or
cwtl
pop
sub
ljmp
sar
sub
test
xlat
cmpsb
dec
sub
nop
or
cmp
xor
mov
mov
or
mov
adc
or
fstl
adc
sahf
addr16
fwait
xor
mov
or
arpl
dec
sub
or
mov
repz
outsl
sub
pop
or
lds
xchg
out
call
mov
xchg
dec
out
das
addr16
fidivs
dec
and
mov
mov
sub
pop
ret
pop
out
out
cltd
pushf
fimull
lods
gs
sahf
or
xchg
mov
icebp
hlt
fwait
jge
xor
mov
in
or
xor
xor
push
pop
push
fmuls
shlb
fwait
add
xor
enter
imul
sub
xchg
ret
roll
in
sub
pop
imulb
cmp
mov
or
rcll
mov
repnz
iret
mov
jmp
pop
mov
sbb
push
inc
out
or
add
arpl
test
pop
sbb
daa
sub
je
cmpsl
mov
rorl
sbb
sub
or
fcomps
sbb
mov
cmp
xchg
push
jbe
or
addr16
in
push
pop
and
or
pop
ljmp
out
je
cwtl
pop
movsb
add
sub
push
push
or
mov
pop
pop
jnp
add
lea
aas
inc
or
or
xor
ljmp
jae
xor
sti
mov
in
add
in
cld
jns
test
out
mov
ja
push
jae
mov
sub
or
or
or
aas
aam
shl
or
push
icebp
repz
ret
sbb
int3
in
cmp
or
hlt
mov
std
ret
or
jbe
in
dec
shl
or
mov
or
pop
jg
repz
stos
cmp
fmuls
mov
push
sub
lds
stc
add
rcr
sub
cmpsb
aas
mov
shrb
cmc
mov
push
mov
dec
call
test
test
lcall
aad
cwtl
xor
or
sub
xchg
scas
aas
gs
rol
rol
insb
adc
mov
andb
xor
or
xchg
xchg
dec
scas
sub
mov
fcmovne
sbb
pmaddwd
jae
and
sub
inc
sbbl
into
push
add
mov
ror
or
sbb
add
xchg
fcoml
pop
mov
sub
rorb
mov
je
xchg
or
dec
xor
fldcw
stc
cmp
mov
push
pop
cwtl
mov
pusha
push
adc
aad
jecxz
sub
mov
xor
arpl
or
scas
in
mov
jle
and
adcl
pop
or
je
repz
jle
jmp
or
mov
dec
movsb
and
cmp
popl
push
mov
xchg
add
mov
cwtl
sbbl
dec
aam
push
jbe
mov
adc
sahf
sti
test
jo
clc
or
cmp
mov
jl
dec
xchg
or
adc
or
or
jne
push
xor
fwait
mov
aad
xchg
or
push
or
lret
cli
dec
jmp
and
cmc
pop
stos
sbb
std
inc
repnz
cmp
testl
or
and
mulb
js
out
int
mov
cmp
aaa
out
mov
cmpsb
push
jb
ds
xor
sti
xor
or
imul
aad
add
movsl
jg
stos
jno
ss
rorb
shr
orb
call
pop
test
dec
ret
or
push
mov
int
das
or
xchg
repz
or
mov
sub
and
xlat
or
xchg
or
js
or
mov
mov
inc
push
fisubs
aad
or
movsl
xchg
cmpsl
aaa
inc
lahf
mov
cld
cwtl
push
inc
outsl
call
cmp
sbb
aaa
cmovle
repz
adc
sbb
sub
mov
sbb
outsl
fwait
dec
call
mov
push
xor
test
jns
sub
dec
or
icebp
push
adc
mov
out
cmp
insb
out
jnp
push
or
mov
stos
sbb
mov
orb
popa
outsl
jno
stc
cmc
adc
or
test
ss
ret
fs
or
pop
dec
sbb
mov
sub
ret
lret
sbb
dec
push
icebp
ret
dec
enter
dec
rclb
test
pop
data16
loope
and
rclb
and
ljmp
push
addl
inc
push
jb
sub
in
or
mov
push
iret
or
xchg
nop
cmp
dec
or
xlat
mov
sbb
addr16
sub
or
sub
pop
testl
fldt
push
inc
sahf
popf
leave
loopne
testb
xchg
or
test
mov
jl
in
repnz
adc
xor
and
in
lcall
sbb
out
mov
fisttpll
lea
shll
xor
jo
push
mov
mov
cmc
mul
add
jecxz
xlat
data16
loope
int3
jmp
jno
dec
loopne
jmp
stos
les
in
mov
inc
mov
dec
sub
mov
movsb
or
or
push
fisubrs
xor
cli
out
loopne
je
fcmovne
or
dec
popa
mov
lcall
aam
divb
cwtl
dec
or
adc
shll
js
mov
or
mov
dec
in
inc
add
std
dec
cld
or
int3
repnz
stos
inc
mov
gs
pop
sbb
adc
idivl
adc
or
xor
mov
pcmpgtb
lea
or
lods
add
push
push
addr16
shr
dec
pop
test
sub
pusha
loope
mov
lcall
or
or
and
fidivrs
xor
mov
fistpl
or
inc
cmc
cmpsl
mov
lret
call
or
js
jns
int3
jp
in
push
stos
lock
ds
dec
cmc
dec
jl
loopne
stos
in
sbb
mov
arpl
adc
std
int3
js
push
push
adc
xchg
gs
dec
in
cmp
mov
dec
shlb
cs
jnp
popa
sarl
sbb
add
push
icebp
adc
add
xchg
mov
push
or
mov
outsl
adc
je
or
scas
jl
adc
adc
jp
fsubrl
sub
or
jo
sarl
or
aad
and
inc
add
mov
xor
ret
xlat
sub
add
push
icebp
or
push
shr
repz
or
jnp
aaa
mov
xchg
outsl
adc
or
mov
outsb
push
or
mov
push
or
hlt
out
dec
dec
repz
xchg
rclb
fcoml
mov
testl
rorl
mov
xchg
fwait
in
gs
or
and
mov
loopne
call
into
mov
shrl
mov
or
imull
aam
dec
es
xchg
mov
out
pop
or
add
bound
lods
cmp
or
xchg
scas
xor
jne
int3
push
clc
add
repz
or
jecxz
cli
scas
add
push
push
xor
jb
sub
stc
dec
popf
cmp
cmp
int3
leave
or
mov
sti
les
lods
adc
test
sarl
push
or
fs
or
sub
push
or
test
ds
add
movb
rcrl
inc
push
pop
xor
pop
or
jbe
inc
imul
sub
cs
mull
cmp
fucom
dec
mov
mov
adc
jbe
or
xchg
aam
and
or
nop
lret
cwtl
cmp
pop
adc
mov
in
sub
fisttps
cmp
iret
and
leave
or
jl
mov
popa
xchg
mov
cmp
or
je
jnp
int
test
inc
sbb
add
popf
sbb
ljmp
jbe
xor
or
outsb
je
test
pop
push
sub
test
push
sahf
enter
lret
pushf
sub
or
mov
cmp
or
xor
stos
ljmp
rcll
sub
ds
jle
mov
or
fwait
mov
cmpsl
jg
movsl
and
cld
cmp
addr16
nop
out
imul
or
mov
push
cmp
rorl
aaa
xor
pop
mov
mov
or
pop
mov
fistps
shll
xor
cmp
and
or
out
insb
or
sbb
aad
inc
adc
inc
adc
cmp
ret
adc
insb
repz
adc
cmp
test
ja
loopne
or
mov
dec
insb
out
jne
add
add
inc
and
pop
lret
xchg
lcall
push
stos
mov
addl
or
add
and
imul
cli
or
mov
mov
add
mov
jle
lds
lcall
or
fwait
lcall
xor
movsl
cmp
jg
je
dec
mov
cmp
ja
adc
outsb
sub
mov
lea
pop
mov
sbb
popl
and
sahf
aad
bnd
ror
pop
cmpsb
sti
int
test
adc
xchg
sbb
lcall
bound
int
pop
sub
add
in
sub
shrl
notb
dec
jnp
loope
fs
loopne
xorl
inc
or
vpmaxub
imul
mov
mov
icebp
xchg
js
lret
aam
or
inc
outsb
jle
mov
mov
or
and
sub
mov
imul
dec
push
xor
jmp
cli
out
adc
pop
sbb
cmp
cmpxchg
outsb
push
and
cltd
in
out
mov
dec
sub
push
roll
imul
ret
cmp
or
out
cmp
outsl
inc
inc
adc
sarb
adc
mov
cmp
adc
int
sub
sub
xor
pop
jl
ret
sarl
and
or
out
pop
pop
sbb
jmp
push
sahf
mov
or
pushf
pop
inc
xchg
sub
aaa
and
sbb
sub
or
xchg
nop
push
xor
sti
cmp
pop
scas
mov
push
mov
aaa
or
int
jmp
or
pop
dec
push
arpl
icebp
push
and
sbb
int3
aas
aaa
loopne
add
and
enter
xor
xchg
ror
mov
and
cmc
or
adc
mov
cmpsl
mov
or
xchg
in
fmuls
aas
cmc
jg
or
mov
repz
jo
imul
hlt
dec
push
or
dec
push
imul
or
popf
lods
jo
dec
inc
lahf
mov
shlb
sti
movsb
mov
jb
imul
popa
xor
cmp
add
out
dec
xlat
push
sbb
out
push
int3
xchg
cld
xor
repz
pushf
test
fs
out
dec
outsl
stos
shrl
push
adc
ljmp
ret
mov
in
das
jg
or
movsl
fs
or
orb
inc
hlt
sub
jnp
pop
int
mov
push
mov
inc
dec
jmp
push
dec
jge
outsb
fs
idivb
and
or
push
movsb
scas
sub
fsts
pop
sbb
divl
mov
or
lcall
insl
dec
movsb
jge
add
mov
and
xor
fbld
ljmp
out
xchg
mov
push
iret
mov
or
negb
or
in
je
sbb
jne
adc
push
fdiv
or
adc
or
out
clc
mov
out
or
xchg
ret
popa
outsb
or
das
gs
add
pusha
out
mov
mov
mov
rol
or
cmp
inc
or
test
lods
or
lret
mov
push
push
push
mov
or
xor
gs
dec
jo
add
jg
adc
data16
dec
loop
repnz
outsl
gs
outsb
or
jb
adcb
lret
loop
push
mov
or
push
xchg
push
imul
pop
xchg
dec
add
fcompl
out
hlt
fbld
cmp
cmp
sti
sbb
or
ja
pop
xor
add
rorl
cs
dec
fisttpl
jo
arpl
adc
jp
sub
or
cmp
pop
popa
or
or
sbb
push
sahf
enter
sbb
jne
test
and
icebp
lcall
inc
clc
mov
repz
out
sub
jb
shll
lahf
xchg
cmpsl
jmp
pop
pop
hlt
or
popa
dec
rorl
int3
cmp
and
in
insb
leave
inc
or
inc
jecxz
push
push
sub
dec
xchg
jl
or
scas
sbb
jnp
lcall
js
sub
movsb
mov
inc
push
xlat
pop
add
sar
sti
bound
outsb
mov
push
or
mov
add
or
ljmp
xlat
mov
dec
bound
sbb
push
and
lods
cmp
daa
sbb
andl
lret
mov
sub
andl
cmpsl
or
add
sbb
pop
stc
popf
push
or
dec
push
xor
loop
add
ret
dec
enter
clc
pop
mov
outsl
or
mov
push
ret
mov
cmp
and
out
or
or
movsb
je
sub
xchg
aam
adc
push
rcll
enter
xchg
mov
add
cmp
dec
sti
cmc
push
jbe
mov
fwait
rorb
movsb
fwait
pop
loopne
hlt
stos
and
adc
add
fwait
test
dec
xchg
sbb
jp
out
dec
fs
je
cmp
pop
add
rorb
fsubl
testb
inc
add
xchg
dec
add
pop
add
in
jmp
push
jbe
sarl
rclb
mov
movsl
int3
mov
dec
jle
sti
mov
or
aad
add
daa
movsl
sbb
loope
fsubrs
mov
not
push
add
adc
adc
push
jbe
mov
lret
dec
add
or
mov
adc
or
mov
xchg
aas
pop
lods
mov
push
jle
mov
int3
imulb
jb
sub
out
xor
or
inc
fnstcw
movsl
xorl
ljmp
sbbb
dec
outsb
lods
sbb
mov
jne
rcrl
sarl
or
js
fsubrl
idiv
rcll
in
popf
ja
mov
cs
stc
mov
lcall
test
nop
sbb
aaa
mov
popa
add
cmp
lahf
xchg
imul
push
or
lds
rclb
push
stos
mov
mov
sarb
inc
or
cmp
rorl
inc
lods
sbb
xchg
sub
cmp
and
int
xchg
mov
and
ror
mov
lret
xor
mov
testl
or
sbb
pop
inc
mov
lret
fsubl
mov
or
loopne
push
flds
in
cmp
and
xchg
popa
test
mov
cmpb
or
adc
add
lcall
aam
jmp
testl
or
dec
aas
movl
add
movzwl
clc
push
aam
and
jnp
and
sbbb
loop
sbb
fisttpl
add
flds
jnp
insb
sub
push
cmp
jecxz
lahf
cli
aas
jg
repnz
mov
push
or
pushf
sub
daa
or
pop
std
mov
repnz
fwait
sub
lea
xchg
mov
or
call
into
mov
inc
rclb
jb
and
push
xlat
pop
sbb
mov
pop
xchg
or
pop
lods
addr16
or
in
icebp
pop
or
mov
and
inc
cwtl
xchg
jge
and
addr16
dec
add
test
mov
mov
adc
movsb
aad
and
add
sbb
ret
daa
imul
xchg
xor
arpl
add
jmp
sbb
or
jae
mov
or
rcl
das
dec
dec
pushf
lcall
push
add
test
push
or
jnp
add
repz
and
and
ret
icebp
or
loopne
loope
or
xor
lret
mov
mov
ja
jb
ret
push
sub
notl
dec
and
ja
add
push
lret
or
arpl
jae
ficomps
aaa
and
test
add
add
fnclex
sahf
dec
xor
or
into
and
adc
push
xchg
mov
shl
dec
mov
xchg
push
and
or
xchg
int3
cmp
mov
mov
lods
cmp
mov
or
sbbb
add
push
nop
or
shr
rorb
xor
add
lret
outsl
or
jecxz
or
dec
sbb
pop
xchg
cmpsl
cltd
add
or
fsubp
scas
cmp
pop
in
outsb
dec
xchg
cmc
pop
in
enter
mov
push
cwtl
addb
mov
fmull
pop
lcall
hlt
xor
aas
popa
iret
or
scas
cmp
decb
imul
das
push
int3
mov
push
fstl
insb
mov
or
inc
cld
movsb
pop
or
repnz
sub
int
adc
jne
imul
stc
repz
scas
inc
insb
mov
sub
push
dec
test
cmp
xchg
or
jo
das
or
add
mov
cmc
adc
ss
jmp
or
jns
sub
dec
stos
mov
in
xor
ljmp
and
sub
fisttpll
sub
out
je
shl
int3
push
test
lea
sti
pop
test
sub
insb
jnp
mov
mov
push
or
mov
sbb
repz
in
xor
ja
add
test
ljmp
inc
and
and
imul
pop
scas
iret
fwait
xor
std
mov
push
sub
or
xor
jne
out
adc
cmp
mov
dec
insl
sub
cmp
mov
xor
push
dec
inc
inc
push
mov
call
aam
mov
and
xor
repnz
and
or
jae
cmp
test
xchg
nop
movsl
or
enter
or
sbb
sub
push
xor
jns
xchg
or
xchg
testb
push
xchg
xchg
inc
push
adc
rclb
into
xor
xchg
or
pop
and
das
jne
inc
ret
jmp
repz
or
sahf
fwait
push
das
dec
hlt
stos
ret
jp
cs
cmp
ret
push
and
or
xchg
test
inc
pop
fcmovnb
or
ljmp
mov
pop
nop
add
dec
sub
pop
fisttpll
ret
jo
jp
repz
lods
cli
aaa
sbb
push
mov
push
es
ret
ja
jns
adcl
pop
bnd
push
mov
sbb
ljmp
xor
cmc
sbb
test
xchg
or
fistl
aad
jp
xchg
mov
pop
xchg
sub
jno
cmc
push
test
push
jmp
push
fwait
sub
mov
shrb
dec
mov
mov
loope
nop
fnstcw
or
push
mov
or
pop
pop
popf
ret
or
mov
add
push
insl
push
test
nop
stos
sti
mov
mov
or
and
fimull
mov
cltd
jp
push
pop
pop
leave
js
scas
and
add
or
popa
clc
imul
in
fistpl
andb
lcall
pop
or
mov
or
mov
mov
sbb
push
clc
and
or
cwtl
lret
idivl
xchg
mov
outsb
push
loop
lahf
and
or
jecxz
push
push
or
clc
adc
imulb
mov
push
xchg
cmp
aaa
and
mov
inc
lea
ljmp
cmp
fs
adc
cmpb
mov
xor
idivl
rol
dec
add
cmp
push
inc
inc
sub
out
and
mov
lods
outsb
or
push
and
mov
xchg
xor
pop
mov
pop
ffree
sub
dec
cmpl
mov
add
mov
out
pop
daa
mov
add
outsb
dec
xchg
or
ds
in
ret
cmp
test
pop
imul
dec
push
xor
sub
mov
insl
pusha
jmp
cwtl
or
inc
and
int3
cmc
sub
test
mov
mov
mov
clc
add
jl
data16
and
testb
rol
mov
xchg
mov
lret
stc
hlt
mov
icebp
test
shl
or
das
pop
in
or
pop
cwtl
pop
inc
dec
lahf
fistpll
pop
sub
jg
repnz
xor
adc
stos
loope
ret
push
push
push
imul
je
ret
subl
or
or
jmp
xor
test
rorb
ja
adc
lea
cmp
scas
dec
fstp
repz
xchg
fisubs
xor
test
fld
mov
push
adc
mov
or
pop
pop
cmpsl
add
hlt
idivb
adc
pop
dec
jne
ja
test
scas
xor
cld
pop
pop
or
in
out
cmp
cmp
push
imul
sub
pop
fcomps
jg
or
mov
dec
sti
or
sub
mov
or
or
add
shlb
dec
out
cmp
inc
dec
mov
in
int3
jno
hlt
nop
or
jge
mov
jns
inc
std
roll
or
dec
lret
loopne
or
dec
xchg
popf
sbb
orl
dec
mov
cwtl
jb
ja
mov
inc
ret
rorl
js
cltd
inc
push
adc
in
and
into
push
test
lahf
cwtl
jmp
xchg
mov
movsl
mov
int3
or
jnp
pop
jmp
mov
out
pop
rcrl
xor
adc
enter
sub
orw
xchg
dec
jo
cmp
orb
je
mov
pushf
ljmp
scas
js
cmc
pop
mov
or
xor
bound
fimuls
mov
add
lea
push
pop
sbb
cli
inc
xchg
call
mov
int
sub
adc
or
loopne
in
or
xchg
cmp
pop
or
cmp
xchg
pop
je
or
mov
insl
or
clc
mov
or
mov
movsb
mov
bound
popf
test
xchg
push
jno
or
fbld
nop
out
mov
aad
loope
enter
hlt
pushf
ss
or
mov
inc
rorl
jo
pop
or
inc
mov
add
das
or
bound
mov
in
cmp
sti
rorb
testb
mov
js
xchg
les
mov
dec
es
inc
mov
mov
int3
ret
cmpsl
cmp
test
aad
push
sbb
aam
sbb
shrb
int3
fidivl
adc
addr16
jecxz
xor
adc
sub
jp
mov
mov
push
cmpsl
jae
xchg
or
bound
lea
pop
mov
mov
ljmp
jae
jecxz
aad
out
je
ja
xchg
shll
js
daa
inc
sbb
pop
jmp
xor
lods
or
xchg
lds
int
pop
cmpsl
xchg
fnsave
sub
lahf
jns
out
sbb
mov
mov
or
and
push
test
sub
jnp
ds
das
or
clc
xchg
js
adc
in
sti
or
shl
add
cmp
sub
pop
pop
jo
inc
adc
pop
xchg
sub
or
or
insb
js
imul
out
pop
testb
sbb
push
inc
int
fmul
xchg
imul
push
sub
or
ljmp
sbbl
dec
jmp
shlb
cmp
xor
adc
mov
clc
xlat
or
movsl
out
xchg
pop
int
iret
mov
imul
adc
push
pop
jo
mov
addr16
or
cmpsb
loope
mov
stos
std
push
stc
or
add
push
sub
cmp
cmp
or
mov
mov
int
or
and
insl
mov
movl
sbbb
shrb
push
cmpsl
mov
out
mov
sbb
je
or
xchg
mov
out
imul
clc
xchg
sbb
mov
mov
jmp
sub
and
cmp
adc
push
mov
stc
cmpsb
sub
shll
lret
cld
push
call
jae
pop
filds
mov
pop
push
or
cltd
mov
in
aad
add
subb
pop
popa
adc
loope
xchg
jle
roll
fldt
dec
pop
sub
cltd
or
jle
and
jmp
xchg
fld
mov
add
push
cmp
or
mov
cmpsl
std
ret
mov
inc
and
push
xor
ljmp
orl
adc
mov
in
inc
push
sub
push
aas
or
xchg
adc
rcrl
jecxz
icebp
or
mov
pop
pop
inc
mov
pop
sahf
int3
dec
cwtl
push
in
jbe
sub
sbb
jb
dec
insb
push
jmp
pop
sub
mov
push
dec
mov
out
and
into
pusha
cmp
or
and
mov
or
mov
xor
jae
ja
xor
or
outsb
outsl
lea
ljmp
int3
jbe
clc
sbb
jb
and
inc
out
test
add
jl
mov
mov
add
iret
idivl
aam
cmp
and
lcall
xchg
aas
mov
jns
dec
xchg
or
or
xchg
std
outsl
xor
mov
pop
inc
dec
jle
shll
decl
repz
inc
mov
test
xor
pop
jne
sbb
or
stos
ss
out
mov
xchg
ret
mov
icebp
xchg
adc
mov
jne
mov
pop
or
push
sti
test
mov
mov
push
lahf
push
nop
test
inc
or
lods
ficomps
movsb
push
filds
fsubs
rorl
sbb
sbb
dec
cmc
or
mov
gs
cmpl
xchg
mov
fsubrs
push
cmp
ljmp
les
jmp
scas
fisttpll
adc
pop
mov
test
not
lock
in
rolb
jle
push
rorb
xor
ja
clc
sub
mov
ret
mov
or
repz
scas
cltd
mov
adc
or
xor
sbb
sti
std
or
cmp
je
test
xchg
add
or
int
lods
lret
push
iret
rol
lret
pop
mov
test
xor
faddl
orl
aad
test
popa
sbb
or
cli
outsl
pop
adc
insl
push
mov
jo
sub
sar
xor
mov
mov
lahf
xchg
adc
ret
fucomp
sub
jg
cmc
mov
cmpl
popa
or
sti
out
aad
xchg
mov
loopne
or
cli
mov
lret
sub
push
cmc
jns
xlat
mov
or
jmp
out
mov
ss
cmp
sub
jmp
jb
xchg
in
movsl
xchg
and
aaa
fisttpll
or
xchg
adc
or
mov
arpl
shll
subb
jg
dec
xor
mov
lea
ljmp
mov
sub
sbb
sub
adc
or
or
sbb
mov
mov
jae
ds
rep
dec
dec
xlat
in
jg
xor
push
or
pop
jmp
inc
inc
push
dec
and
mov
jp
jns
clc
sahf
lods
ret
shlb
mov
jb
stos
ret
dec
xchg
pop
popa
and
xor
push
inc
ret
sbb
jo
or
out
xor
dec
push
in
cmpsl
or
cmp
cmp
or
xor
or
or
sbb
fstps
ret
xor
xchg
sbb
jp
sub
and
add
in
dec
jnp
int3
outsl
mov
xchg
adc
jbe
or
xor
inc
nop
jne
dec
mov
adc
xor
sbb
mov
and
mov
or
arpl
in
mov
subl
sbb
jg
or
int
cmp
or
ret
cwtl
adc
daa
mov
fisubrl
out
or
mov
lea
cltd
or
or
shl
and
mov
add
inc
fisttpl
push
xor
addr16
sahf
dec
mov
adc
or
aad
fisubrl
iret
inc
cmpsl
jmp
or
pop
rorb
pop
or
cmp
adc
xchg
sbb
jnp
add
sbb
into
popf
aaa
cmp
add
adc
jmp
push
je
iret
cld
sub
ja
add
enter
repnz
add
sub
mov
mov
ss
cmp
or
icebp
jo
orb
xor
cmp
pop
dec
mov
cmp
ret
cmc
int3
mov
add
std
ljmp
cmp
mov
mov
jg
pextrw
or
push
push
in
add
dec
add
pop
out
es
or
cltd
adc
or
in
ret
cmp
mov
or
pop
xlat
and
cmpsb
mov
xchg
and
mov
mov
dec
jl
or
xchg
outsb
inc
mov
mov
adc
add
dec
lahf
fsubp
sub
cwtl
in
lea
lods
es
jo
push
lds
pop
iret
or
mov
pusha
add
out
mov
xchg
pop
or
dec
ds
int
fisttpll
gs
rcll
outsl
pop
aas
out
xorl
mov
cwtl
xor
push
or
mov
xor
or
or
or
dec
lahf
ret
out
xchg
or
jl
repz
int3
cmpsb
sar
fcoml
mov
cmp
scas
sbb
cmc
orl
divl
xchg
jp
xchg
testl
or
repnz
sbb
jnp
push
imulb
aam
and
int3
outsb
sub
dec
adc
scas
mov
sub
or
cmp
sahf
mov
fisttpl
gs
leave
cwtl
popaw
pop
sub
mov
ds
xchg
pop
pop
push
or
mov
xlat
fnstenv
jno
add
xchg
aas
test
das
mov
or
mov
adc
xchg
jle
pop
leave
std
sub
ret
adc
cmpsl
or
pop
cli
jnp
or
andb
and
jne
leave
cmp
cs
lea
mov
push
mov
dec
ret
mov
push
add
and
cmpsb
stc
test
lahf
nop
lds
outsl
push
rclb
and
cs
test
or
push
adc
or
lahf
xchg
mov
inc
add
pop
out
xor
sub
inc
mov
mov
or
scas
adc
ret
cmp
or
sbb
xchg
mov
loopne
ds
pop
or
sbb
sahf
and
subl
xor
into
test
repz
adc
jl
shll
movsl
xchg
push
sub
xchg
test
push
adc
push
outsb
rcrl
inc
in
and
pop
xor
cmp
call
mov
pop
jle
sbb
ret
lds
xchg
ds
or
imul
cmpl
mov
inc
xchg
adc
stos
orl
push
xchg
sub
mulb
mov
dec
adc
repnz
mov
out
push
cmp
add
adc
aad
repz
dec
fwait
scas
xchg
clc
aam
push
lret
pop
cmp
cld
ret
in
out
sub
cwtl
dec
add
dec
mov
pop
shlb
mov
sub
test
dec
imul
or
inc
mov
xchg
or
jno
mov
rdtsc
dec
popl
int3
xchg
cmpsl
push
adc
sti
or
jnp
xchg
lfs
mov
xchg
and
or
or
xchg
outsb
pop
add
pop
jp
aas
inc
dec
lds
cmp
ret
in
arpl
unpckhps
popa
shll
pop
mov
or
loopne
mov
or
addr16
xchg
iret
or
push
pushf
jle
mov
popa
aas
mov
repnz
shrb
test
out
xchg
outsb
inc
sub
adc
cmp
cmovge
inc
xor
icebp
or
mov
lods
xor
mov
cwtl
mov
dec
xchg
mov
lahf
xor
stc
or
pushf
test
or
in
jl
or
fdivr
adc
bnd
fbstp
cmp
pop
cs
or
push
outsl
nop
or
pusha
ja
push
cmp
inc
repz
dec
xchg
orl
or
inc
addr16
xor
pop
dec
xchg
fcomps
dec
jg
push
sbb
cmpsl
inc
or
fs
pop
or
stc
aaa
lds
adcb
inc
adc
dec
enter
fsubrl
xor
jo
rorl
movsb
es
or
sbb
sub
rcrl
imul
mov
sub
fcoms
insb
or
add
mov
inc
fisttps
repnz
mov
pop
negl
mov
push
pop
cvtps2pi
mov
xchg
aaa
xor
push
cmpsb
jle
xlat
ja
scas
arpl
mov
setno
dec
sub
scas
xor
pushf
cmp
push
insb
push
lds
pop
inc
jo
pop
jbe
or
add
add
movsl
jmp
int3
dec
cmc
ljmp
inc
out
jmp
das
sti
ret
lcall
addr16
mov
mov
pop
imul
sbb
out
xchg
adc
es
mov
mov
cmpsb
sbb
int
cli
xchg
pop
or
xchg
adc
mov
xor
loopne
cld
xor
add
shrl
cmp
pop
sub
testl
imul
pop
std
inc
xchg
xchg
out
lcall
popf
es
cltd
fidivrs
fcompl
sub
je
cmp
call
scas
adc
test
or
jb
adc
mull
cmc
or
test
aam
hlt
cmp
test
xchg
push
cmc
int3
lahf
add
sub
mov
push
sub
cld
pusha
or
lret
xchg
inc
in
das
sub
push
xor
ret
cmp
pop
mov
mov
int
or
popf
mov
jmp
rorl
add
cld
pop
add
jae
push
and
repz
xchg
dec
pusha
cmpsb
call
pop
jno
ds
mov
mov
inc
in
xchg
push
or
inc
xchg
mov
orb
cli
pop
ja
test
jnp
lds
jbe
and
iret
xchg
inc
jns
lcall
fnstcw
rorl
pop
cmp
fisttpll
sub
mov
gs
jnp
dec
sub
enter
sub
jmp
mov
icebp
fbstp
or
jnp
xchg
test
sahf
test
icebp
lcall
iret
std
fs
scas
push
popf
test
mov
lret
xor
stos
sub
mov
ret
ror
repnz
test
scas
aas
xchg
js
rol
push
repnz
daa
aad
or
or
or
jg
sub
or
lahf
pop
fs
or
iret
mov
ja
out
xlat
sbb
and
cmp
shrl
ds
xchg
or
mov
sahf
es
movsb
fisttpl
pop
sbb
clc
push
adc
fwait
scas
sub
cmp
push
xchg
dec
lcall
lahf
int
push
ret
rolb
fcomip
dec
rcr
pop
je
push
adc
or
sub
sbb
pop
push
loopne
scas
xchg
ret
in
stc
js
adc
or
add
inc
sub
xor
sbb
push
dec
out
mov
push
cmpsb
insb
js
mov
xchg
push
testl
or
cmp
cli
cs
mov
scas
fwait
add
test
bound
push
push
lret
mov
mov
dec
or
or
repnz
pop
mov
dec
icebp
pop
or
jg
cmpl
sub
cmp
aaa
fcoml
or
dec
cmp
cmpsb
std
das
dec
inc
iret
cmp
mov
adc
cmc
mov
ja
ss
and
cmp
enter
dec
or
cmp
jp
jae
scas
or
sub
sti
mov
and
push
test
or
add
int3
mov
je
mov
pop
test
flds
jg
dec
xor
push
mov
shlb
mov
sbb
leave
and
mov
pop
or
cs
mov
mov
addr16
sbbb
or
dec
xchg
shlb
mov
and
jge
push
or
sub
cmp
stos
ja
mov
push
mov
popa
ja
adc
jne
cwtl
sbb
add
cltd
push
pop
icebp
push
int
cld
div
sbb
lret
or
imul
or
jg
popa
push
sbb
mov
lcall
cmp
or
fcmove
and
push
cmc
in
lret
add
sbb
fildll
or
mov
js
or
lret
xchg
or
dec
outsb
mov
loopne
sbb
and
ficoms
ljmp
push
sbb
mov
xor
adc
shlb
add
mov
pop
out
mov
movb
or
sbb
test
call
pop
sahf
or
xchg
pusha
rclb
lods
int
ret
test
mov
notl
add
sub
mov
pop
aam
or
stos
jne
dec
cmp
mov
ljmp
int
jl
push
dec
pop
push
ss
fdivs
ret
xchg
addr16
sub
or
xchg
sbb
xor
stos
enter
fsubrs
cmp
lea
rep
icebp
xchg
inc
xor
mov
xor
loope
mov
or
sub
add
sbb
pop
or
add
mov
or
icebp
lods
mov
addr16
movlps
fs
xchg
mov
mov
sbb
out
nop
hlt
or
adc
testb
imul
and
mov
cmp
adc
sub
dec
mov
stc
or
dec
xor
repz
iret
call
push
shlb
or
stc
faddl
lods
sub
sub
stos
or
xor
mov
jmp
out
push
xor
orb
imul
inc
inc
mov
lret
fisubl
cli
fldenv
push
or
ret
call
push
xlat
jp
sub
cmpl
lcall
lret
imul
push
mov
fdivl
in
push
aam
ret
jmp
icebp
movsl
mov
cmp
cmp
outsl
cmpsl
sahf
xor
int
adc
and
loope
xor
pop
push
cmpsl
xor
and
sbb
aam
pop
notb
xchg
inc
xchg
pusha
imul
loopne
cmpsb
sub
insl
ret
ja
rcr
aaa
xor
add
cltd
and
dec
mov
idiv
xor
pop
ficoml
in
dec
fisttpll
dec
jg
sub
sbb
je
or
cmp
or
xchg
popf
jne
or
cli
mov
insl
lret
or
mov
dec
adc
sbb
mov
or
fcoml
add
rorl
mov
xchg
xchg
decl
movsl
aaa
cmp
movsb
mov
ret
loopne
rcll
cmc
or
mov
cmp
xor
and
jmp
cmpsl
sub
loope
std
push
iret
add
or
mov
incl
iret
push
leave
test
mov
imul
cmp
scas
arpl
and
or
lret
push
push
enter
test
cld
mov
les
dec
xchg
movsl
lods
and
xor
lcall
lret
not
sbb
popl
xchg
sub
shll
in
add
stc
jns
inc
pop
inc
inc
gs
orb
jmp
or
ja
icebp
or
push
mov
int
rorl
andnps
orl
sbb
loopne
mov
mov
decb
cltd
std
sarb
push
inc
stos
test
sub
add
ret
pop
jb
ficompl
jle
or
xlat
xor
or
mov
test
cmp
or
mov
iret
cmpsb
lahf
popa
ss
or
push
mov
fmuls
adc
inc
mov
jo
into
cmp
inc
test
adc
pushf
mov
pop
inc
cmp
rorb
hlt
mov
and
xchg
aad
int3
push
adc
xor
insb
or
outsb
hlt
je
or
stos
sbb
ja
int3
pop
cs
arpl
or
test
mov
pop
dec
mov
outsl
mov
xchg
add
push
mov
cmc
sub
js
and
cld
jmp
imul
test
lods
and
stos
int3
sub
xor
arpl
mov
sub
mov
outsb
subb
rorb
mov
iret
dec
data16
xchg
enter
or
push
rorb
sbb
std
mov
jno
push
pop
cmpsl
sbb
cmp
sahf
xchg
orl
or
repz
mov
xchg
lods
or
pop
stc
rorl
sub
movd
stos
sub
jnp
push
sub
dec
add
cmpsb
call
sbb
das
cmp
cmp
mov
mov
xchg
push
sub
fimull
or
ret
test
in
add
popl
xchg
cmc
gs
cld
or
fsub
repz
arpl
or
mov
xchg
sbbl
mov
insl
ret
inc
addb
cli
or
ss
cld
test
cmp
push
and
adc
adc
out
cmp
movsb
ja
mov
add
cli
pop
push
pop
push
sbb
pop
fisttpl
adc
mov
loop
jne
jmp
mov
mov
or
sbb
frstor
int
jge
sti
aaa
scas
mov
mov
sub
jne
or
xchg
loope
mov
je
inc
dec
inc
or
adc
incl
mov
jbe
xchg
ret
out
xor
mov
movsl
jg
movsb
adc
outsb
jmp
or
test
cwtl
lret
jbe
sbb
or
imul
sub
sbb
scas
dec
inc
mov
jl
pop
movsl
sub
and
dec
adc
mov
or
nop
ret
mov
mov
ficoml
js
sti
or
in
aaa
es
pop
push
test
mov
jae
jno
lret
fimuls
sbb
sub
cmp
call
pop
hlt
mov
adc
cmc
add
and
mov
mov
mov
mov
jo
imul
arpl
fisubl
aas
insb
or
pop
mov
xor
mov
dec
cld
or
mov
fisttpl
lcall
fcompl
movsb
xchg
adc
je
mov
mov
fisttps
adc
adc
pop
mov
sbb
imul
test
aas
push
push
mov
int
andb
imulb
ljmp
dec
clc
push
loope
xchg
xor
jns
inc
push
mov
or
cmp
jecxz
jne
nop
sbb
rorb
mov
std
or
mov
and
sbb
fwait
outsl
or
sub
or
jmp
scas
and
add
ds
and
inc
dec
btc
xor
sbb
shrb
jnp
stc
adcl
and
push
cwtl
or
mov
out
js
int
cmp
sbb
xor
loope
or
jmp
leave
mov
pop
jo
or
dec
dec
push
stos
push
in
adc
mov
in
pop
or
adc
ljmp
xor
fisttps
lret
mov
or
sahf
jmp
in
push
test
or
sbb
sub
hlt
test
pusha
enter
sbb
loope
or
sahf
fcmovnbe
xchg
push
test
or
mov
pop
popf
or
enter
or
mov
in
cmc
loopne
movsb
jne
ret
pop
add
mov
xchg
mov
gs
or
pop
mov
or
lret
add
or
sub
daa
sub
pop
movsl
addr16
movsb
fs
jo
adc
stos
inc
or
scas
xchg
data16
into
jg
mov
call
test
js
push
adc
or
lods
mov
jmp
lea
jb
mov
push
cmp
std
dec
or
add
cmp
xchg
xor
mov
shl
cmp
shlb
ds
or
adc
int3
adc
pop
fwait
out
int3
sti
sub
and
mov
and
or
cmp
jl
cmpsl
dec
fnstenv
fcomps
or
enter
or
xchg
inc
add
jb
fwait
es
pop
subl
dec
sbb
cli
out
sub
ret
cmp
insl
or
push
mov
cs
mov
rol
jo
mov
cmp
dec
out
or
or
pop
push
or
jge
sbb
sbb
cmc
or
or
testl
jg
add
in
inc
rorl
enter
or
and
mov
cmp
lret
int
push
mov
or
decl
mov
rcrb
ljmp
bound
aam
cltd
sbb
ds
wrmsr
fs
or
jns
orb
mov
int3
inc
aam
cmp
sub
pop
rcll
popa
xchg
cmp
out
or
adc
movsb
inc
sub
pop
or
inc
jne
pusha
or
xor
loope
divb
fisubs
fwait
enter
pop
icebp
loop
cwtl
fs
aam
adc
mov
xor
outsl
jl
sbb
inc
xor
shl
or
push
shl
je
cmp
ret
add
jmp
or
aaa
aam
dec
mov
mov
pop
mov
enter
mov
je
mov
push
dec
scas
add
pop
and
dec
inc
stc
add
dec
push
lea
mov
inc
xchg
movsl
sbb
fs
pusha
clc
sub
std
ret
push
hlt
push
clc
xor
dec
mov
int
stc
sbb
xor
rcr
aam
or
or
je
and
imul
xchg
jp
sub
or
or
std
dec
push
mov
test
and
add
sbb
enter
add
ret
shrb
data16
lods
or
aas
inc
mov
lds
sbb
jmp
xor
movsb
xor
push
repnz
or
mov
add
or
cmpsb
popf
fwait
xchg
int
cmp
cmc
mov
dec
daa
push
fst
lds
cmp
out
je
out
xchg
insb
repnz
or
lcall
cmp
sub
psrlw
fistl
sub
cmp
or
imul
add
mov
push
mov
fcoml
enter
cmp
jb
and
mov
sbb
or
fwait
push
dec
lahf
or
fdivr
pop
push
dec
pop
pop
bnd
and
add
cmp
inc
into
cmp
dec
and
or
add
pusha
or
ds
arpl
xor
push
or
dec
dec
fwait
dec
mov
push
aaa
sub
fwait
pusha
and
push
shll
sub
test
push
mov
or
dec
xor
mov
out
loop
daa
sti
idivb
adc
dec
fdivl
push
int3
dec
stos
mov
xor
pop
lret
shrl
push
orl
into
sub
pop
sub
mov
sub
dec
rcll
add
push
cltd
cmpsl
or
push
xor
jnp
cmp
test
push
sbb
cmp
fdivl
in
dec
sti
cmc
or
stc
pop
pusha
push
or
iret
subb
out
pop
pop
dec
mov
int
and
test
and
repnz
data16
add
fbstp
adc
lret
in
repnz
cmp
or
mov
cltd
cmpsb
mov
xorb
mov
mov
int3
adc
jo
push
pop
sub
push
lret
sarb
pushf
sti
mov
enter
or
imul
mov
cmp
inc
or
or
stos
jecxz
push
or
mov
leave
mov
lea
push
ds
cmc
pop
and
pop
sub
scas
data16
xor
adc
pop
xchg
mov
cmp
sbb
shll
mov
xor
int3
es
int3
adc
pop
xor
cli
ds
into
es
sub
in
push
xlat
xchg
push
pop
sub
mov
sub
scas
mov
sahf
cmc
or
gs
inc
push
ffreep
pop
outsl
sbb
dec
mov
int
inc
add
scas
or
lods
movsb
mov
shl
xlat
sbb
adc
sbb
int
ret
pop
push
xor
leave
or
ljmp
clc
xlat
in
in
mov
cltd
ljmp
into
test
or
andb
jnp
push
repz
jns
hlt
ret
or
fdivp
dec
cli
or
scas
mov
lret
xchg
mov
test
xor
jecxz
xlat
mov
int
rolb
stos
icebp
push
dec
imul
xor
rorl
xchg
fisttpll
call
push
rol
loopne
and
mov
dec
xchg
sub
push
insb
push
xor
ljmp
shll
sbb
dec
or
jbe
enter
cmp
and
xchg
xlat
or
mov
add
push
or
sbb
pop
ds
or
inc
pop
xchg
push
sub
mov
leave
out
cmp
sbb
cmp
or
or
pop
in
lret
sahf
pop
adc
xor
or
sarl
xchg
or
xchg
dec
sbb
jle
pop
cmp
lret
repnz
ret
inc
push
xor
addr16
cmp
fisubrl
sbb
dec
xor
mov
in
sbb
cmp
xchg
imull
sahf
test
dec
cmp
orb
xchg
ret
mov
int3
mov
cmp
or
xchg
mov
jb
fimuls
test
lock
add
cmp
clc
xor
push
pop
scas
jns
cmpsb
push
xchg
xchg
icebp
mov
das
or
sbb
fsubr
lret
inc
inc
or
xchg
cmp
jl
daa
xor
sbb
outsb
int
pop
loop
sub
mov
and
ret
nop
iret
and
or
ja
jle
inc
ret
mov
jne
pop
cmpsb
add
ret
jp
in
and
push
movsl
mov
sub
sbb
lret
rcr
sahf
mov
ja
jne
je
cld
nop
xor
stc
xor
imul
mov
or
mov
mov
jge
sub
aaa
push
or
out
lds
sub
mov
je
sub
scas
int3
or
pop
or
inc
cmpb
jle
repnz
adc
imul
ficompl
ds
and
sbb
testb
push
push
cmovb
adc
push
or
scas
dec
or
mov
mov
out
insl
sbbb
ljmp
sbb
shr
in
std
cmp
hlt
or
mov
test
lret
cld
cmp
ljmp
push
shlb
loope
or
cmpsb
adc
lods
or
push
xlat
ret
in
mov
mul
sbb
dec
out
jmp
xor
cmp
aad
pop
push
rsm
lret
or
mov
or
add
inc
mov
and
pop
test
sub
adc
inc
pop
cmc
sub
je
or
cmp
pop
mov
daa
stos
fistpll
sub
mov
adc
jmp
arpl
or
cli
jl
dec
jge
jnp
ljmp
mov
out
cmp
ljmp
jb
insb
cmp
sbb
cmpsb
sub
aaa
add
or
inc
leave
adc
or
out
push
sub
xlat
xchg
jge
add
dec
sub
aaa
pop
mov
or
dec
sub
out
or
mov
xchg
outsl
ret
imul
jns
pop
mov
sub
cmp
or
mov
sub
jmp
push
clc
xchg
enter
jbe
imul
pop
xchg
dec
je
aad
mov
xor
mov
xor
or
loope
push
adc
std
mov
jg
push
inc
adc
lret
add
adc
xor
fstpl
sub
cmp
pop
mov
scas
mov
ss
imul
test
push
jecxz
test
or
mov
nop
xor
mov
inc
or
cmp
loop
addr16
push
or
adc
popa
mov
add
inc
sbb
xor
call
ficomps
xchg
mov
cmp
or
lds
das
mov
sbb
xor
outsb
pop
into
jno
xchg
or
sub
into
dec
ficoml
lahf
or
aas
loope
jg
push
push
add
int3
lods
mov
mov
movsl
add
in
mov
sub
pop
add
testb
add
fldl
or
flds
stos
lret
mulb
cwtl
jne
mov
xchg
cmp
push
in
into
aam
xor
inc
add
je
jo
and
pop
jns
ljmp
nop
lahf
add
lods
les
cmp
inc
fcmovb
flds
inc
pop
or
pop
nop
sbb
cmp
xor
call
std
ja
mov
or
mov
cli
jb
gs
and
cmp
mov
mov
fsubrp
movsb
sub
cmp
inc
jecxz
jo
adc
pusha
dec
mov
ja
jg
popf
and
and
cmp
ljmp
or
pop
fldl
cmp
inc
in
inc
pop
ret
nop
sub
adc
or
jle
push
inc
addr16
fistpl
mov
xor
mov
sbb
sub
push
add
sub
adc
jle
dec
dec
or
data16
jmp
es
scas
xor
mov
xchg
push
pop
sbb
or
lahf
push
adcb
fdivrl
icebp
ret
push
jge
cmp
pushf
inc
and
ret
inc
push
fnstcw
or
lods
imul
mov
push
push
xchg
or
lods
xchg
mov
aam
or
and
mov
icebp
addr16
push
int
ljmp
inc
repz
push
fchs
shrl
dec
dec
cmp
imul
xor
repz
lods
or
jbe
pop
inc
or
jns
inc
mov
adc
lcall
xor
sti
jnp
loope
cmp
lret
bound
mov
or
xor
xchg
jg
sbb
pop
fst
dec
sahf
loop
jp
and
ds
sbb
or
inc
mov
xchg
notl
cmp
test
aaa
jl
clc
loopw
int3
fistl
fcoms
sti
mov
mov
pop
icebp
push
mov
lea
iret
jp
rclb
add
sahf
or
dec
scas
or
stos
mov
shrb
mov
or
sub
ds
cmc
mov
pop
sti
xchg
out
pop
frstor
sbb
mov
inc
aaa
pop
add
or
in
cmp
lods
inc
jp
inc
or
cmp
jno
inc
ret
mov
sub
dec
fimull
js
test
or
inc
pop
dec
sbb
xchg
sub
lahf
or
pop
pushf
stos
es
mov
pop
jno
ret
mov
push
jnp
cmp
testb
cmp
cltd
mov
stos
xlat
dec
pop
dec
adc
das
sub
rclb
sbb
js
cmp
or
mov
iret
push
jo
clc
or
or
push
lods
cmp
dec
cmp
jecxz
sti
in
popf
xchg
add
int
lea
mov
clc
icebp
test
rcll
sbb
xor
dec
mov
out
or
icebp
jnp
arpl
jp
jb
or
or
add
mov
lahf
or
add
or
roll
pop
pusha
cld
sub
pop
std
scas
or
in
sub
inc
bound
lcall
insb
sbb
or
int
outsb
or
arpl
mov
and
in
push
fwait
cmp
jne
add
leave
popf
sbb
stos
mov
xchg
scas
hlt
mov
pop
or
cwtl
movb
mov
mov
sbb
in
mov
paddsb
ret
roll
xor
pop
lods
push
test
ds
rcrl
call
imul
or
jmp
aad
sarl
andb
mov
add
jp
imul
push
add
divl
or
mov
pop
sbb
or
mov
dec
mov
pop
or
or
inc
xorl
jg
pushw
inc
stos
or
hlt
or
inc
xchg
clc
call
adc
cmc
or
imul
jmp
or
sbb
cmp
daa
push
int
lods
add
mov
sarb
ret
push
jg
fs
lea
je
test
loope
add
stc
add
cltd
push
out
sbb
pop
jge
lret
xchg
adcl
or
adc
pop
jb
cmp
ja
or
popf
aaa
sub
or
sub
fcmovu
pop
ror
mov
or
hlt
sbb
push
push
mov
cmp
cli
fimull
sarl
mov
or
test
andb
add
or
jp
std
or
pop
sahf
sub
outsb
mov
xor
sbb
or
cmp
insb
mov
xchg
pushf
or
repnz
pop
mov
xor
sbb
subl
imulb
cmp
mov
xchg
adc
or
jae
sub
or
jne
jle
mov
and
adc
xor
int
xchg
mov
dec
ds
imul
or
jno
aas
push
aaa
cltd
adc
je
push
adc
js
arpl
sbb
fs
push
inc
push
fmull
mov
repz
rcl
adc
jge
loope
mov
xor
setns
fs
cwtl
jne
sbb
pop
sbb
int
pusha
in
adc
or
mov
jle
dec
xchg
cmp
fldcw
or
cmpsl
mov
rorb
aam
jbe
movb
xor
mov
or
mov
jge
mov
sbb
mov
jp
push
repz
or
mov
xchg
or
fwait
jo
repnz
out
sub
clc
sub
lcall
add
add
fldt
or
xchg
pop
sbb
or
mov
repz
jae
pop
ret
cmp
lea
jge
dec
add
xchg
and
dec
or
inc
scas
jo
fdivr
sub
ret
filds
out
xchg
push
or
xor
or
push
push
in
xor
movsl
out
std
ret
or
cmp
or
push
add
aam
push
shr
cli
imulb
mov
es
std
lret
inc
aas
or
ds
mov
clc
sarl
dec
or
into
cmp
fnstsw
and
and
fiaddl
push
inc
dec
sahf
or
adc
sub
sub
nop
mov
mov
movsb
shlb
sbb
dec
into
fmul
xchg
and
mov
jp
or
jle
or
mov
or
aad
pop
orb
rorb
in
xchg
push
jecxz
lods
movsl
xor
rorb
jnp
or
mov
and
ret
mov
push
cmp
mov
insl
fnstsw
jns
mov
jp
sahf
fsubs
add
loopne
and
js
out
fisubrl
inc
xchg
leave
outsb
mov
ret
inc
stc
pop
pushf
rcl
test
enter
and
inc
mov
inc
fists
or
aaa
cwtl
scas
adc
jno
ret
fidivrs
cmp
dec
cli
mov
inc
inc
rcll
lret
sbb
fsubl
xor
sti
sahf
jb
inc
cmpsb
xchg
repnz
or
enter
iret
jg
cwtl
out
inc
lcall
mov
or
orl
rorb
daa
mov
vmread
push
int3
pop
push
gs
cmp
inc
or
xlat
push
ja
stc
fcoms
nop
test
and
cmpsl
inc
imul
jns
sub
lahf
push
sub
cmc
push
mov
or
lcall
push
pop
dec
out
pushf
hlt
mov
loopne
rorb
add
and
fbstp
iret
push
lea
dec
xor
inc
bswap
jb
repz
test
les
popa
lds
leave
mov
jnp
dec
push
adcl
or
sub
mov
sbb
imul
repnz
cmpsb
dec
loope
or
into
mov
mov
dec
and
insb
fmuls
pop
mov
cld
rcrl
xchg
mov
std
lods
notl
xor
add
push
fadd
sub
insb
cmp
or
push
lds
mov
mov
in
rcll
xor
xchg
aad
xlat
sub
mov
xor
or
pop
jge
jbe
lea
add
stos
xchg
jne
cltd
test
sub
outsb
scas
pop
adc
sub
push
int3
xor
mov
fmuls
lret
mov
push
gs
scas
or
fildll
pslld
jno
jle
sub
inc
adc
dec
lret
cld
xor
or
or
mov
xchg
cltd
idivl
jnp
or
dec
jle
lret
push
jmp
fistpl
js
icebp
sbb
scas
or
push
aad
cmpsl
lds
dec
xor
mov
mov
push
or
or
mov
popa
cmc
imul
or
pushf
and
adc
inc
or
push
dec
call
insl
roll
jmp
jno
and
or
add
orl
daa
insb
fimull
mov
mov
lods
hlt
push
or
rolb
dec
push
or
pop
cwtl
loopne
cmpsl
ds
mov
dec
jle
and
loop
hlt
or
dec
imul
pop
mov
in
lret
cmp
mov
lods
imul
lahf
or
cwtl
xchg
dec
jecxz
xchg
and
xchg
mov
push
mov
jge
popf
imul
push
cmp
repnz
or
stos
jo
mov
fiadds
scas
add
cmp
dec
aas
scas
loopne
cmp
mov
mov
mov
pop
test
into
int
lea
inc
loop
cmp
insb
jae
idivb
out
jl
inc
repz
cmpsl
or
push
xchg
lcall
sub
data16
xchg
jne
enter
mov
sub
push
fwait
and
mov
repz
lret
or
out
pusha
and
jno
pop
sub
testl
out
inc
push
lret
push
ret
jmp
xor
mov
and
mov
mov
loop
cmc
xor
ret
or
nop
or
jl
mov
dec
pop
lods
fisubs
lahf
sub
or
xchg
sbb
adc
dec
push
into
dec
ret
and
gs
or
shlb
sub
push
inc
fsubrl
mov
scas
cmp
fmulp
repnz
add
mov
jno
jecxz
inc
sti
jmp
xor
or
mov
mov
inc
mov
rcll
ss
push
pop
or
xchg
dec
mov
in
adc
mov
shll
or
orb
lods
decb
jp
cmp
adc
ja
es
fldcw
dec
jb
sbb
pop
mov
shr
adc
cmp
sbb
xor
fsub
push
sti
leave
rcr
mov
and
jnp
mov
add
popl
jno
inc
aam
sbb
ret
es
mov
push
or
nop
testb
jl
mov
mov
lds
in
mov
adc
push
or
dec
pop
pop
xchg
dec
pop
idivl
popf
orb
dec
movsb
leave
push
in
mov
inc
pop
or
scas
inc
sbb
or
dec
sbb
push
out
xchg
xchg
jae
dec
dec
mov
xor
out
sub
mov
xchg
rcll
cmp
add
dec
int3
or
ja
sarb
jne
aas
dec
mov
xchg
mov
pop
mov
or
cmp
fsubl
add
or
dec
mov
mov
sbb
adc
jae
or
inc
add
ror
enter
pusha
psraw
fstpt
insl
stc
mov
cmp
add
in
jbe
ret
movsb
movl
test
pusha
or
xchg
mov
xor
int
push
int3
sbbl
mov
cmp
negb
in
or
lds
dec
mov
push
push
cmp
add
ror
and
and
or
fst
test
xchg
push
iret
das
and
cmp
xchg
scas
or
xchg
xchg
push
or
mov
jnp
clc
or
fs
xor
std
pop
outsl
sub
jl
leave
jns
or
cltd
into
movl
add
int
sti
in
ja
mull
pop
rorl
sbb
push
sbb
mov
ss
mov
ret
fdivrl
mov
mov
decb
pop
sti
and
sub
leave
mov
or
dec
addr16
push
mov
push
add
jl
aam
scas
pop
mov
adc
ds
es
mull
movsb
xor
hlt
pop
cmp
movq
int3
or
xor
jns
lea
mov
in
pusha
pop
int
fs
cltd
push
xor
mov
in
xor
add
sbb
negb
mov
add
mov
sub
xchg
add
adc
dec
cmpsb
jg
add
sub
jl
mov
shlb
sti
or
pop
in
mov
mov
lcall
mov
stos
pop
inc
adcl
push
mov
testl
sbb
mov
push
out
cmp
and
xor
faddl
or
and
inc
mov
stc
cmp
dec
push
cltd
lahf
sbb
push
sub
pop
scas
dec
lea
mov
jle
or
sbb
jmp
aad
or
subb
fwait
jno
mov
ret
in
fiadds
or
shrl
cmp
cli
addr16
cmp
pushf
mov
cmp
push
lcall
mov
lods
leave
lods
leave
pop
or
movsb
enter
mov
test
inc
xchg
or
pop
and
cmp
or
divb
pop
pop
int
mov
loope
xor
imul
cltd
dec
fs
xchg
mov
jno
std
outsb
lds
rcll
adc
cmp
push
mov
xor
jg
or
mov
stc
je
mov
in
jg
clc
es
jmp
dec
adc
add
sub
mov
jb
ja
mov
out
out
jp
jmp
cmp
cmp
ret
adc
xchg
xchg
or
sbb
cmp
sbb
jno
add
xchg
xchg
addb
in
or
adc
je
in
or
adc
xchg
aaa
lods
pop
into
jmp
pop
or
mov
push
or
jo
lahf
loop
popf
je
lods
dec
inc
jecxz
ffree
mov
sbb
xor
jnp
pop
or
out
jb
lock
jne
aaa
shrb
out
push
testb
xchg
or
outsl
pushf
fwait
jecxz
jbe
les
jae
in
cmpps
inc
pop
leave
and
or
enter
dec
pop
inc
jmp
ret
sti
cmp
ret
pop
or
add
jne
cs
inc
add
enter
cmp
mov
ja
sbb
fimuls
ret
or
and
xor
repnz
dec
outsl
pop
shrl
xchg
add
ficompl
sar
and
ss
xor
int3
cmpsl
out
sub
sub
in
or
or
cmc
mov
stc
mov
jnp
adc
daa
add
or
xchg
lret
and
push
fisubrs
xchg
or
divl
push
inc
push
cmpsb
sahf
push
dec
or
push
dec
jp
adc
inc
mov
or
mov
test
xchg
dec
mov
pop
aas
jg
out
stos
and
sbb
sbb
or
stos
fcompl
mov
and
sti
sub
mov
mov
push
push
ss
lods
xchg
das
stc
mov
outsl
out
outsb
rcll
shl
fsub
and
cmp
cmp
mov
pop
ds
and
and
push
push
jmp
and
pusha
fistps
mov
mov
pop
mov
iret
xor
sarl
data16
cmp
push
and
jo
mov
mov
push
adc
leave
jbe
and
mov
nop
push
cmc
inc
inc
push
xchg
mov
push
rcr
mov
or
mov
dec
push
fstps
rolb
hlt
int
fists
outsb
shlb
pop
jnp
cmp
popa
add
imul
inc
mov
sbb
lret
or
in
xor
or
loope
and
dec
cmp
pop
inc
inc
sub
jle
cmp
or
ret
cmpsl
or
mov
ret
out
sub
mov
pop
dec
pop
or
pushf
cmp
inc
push
dec
or
ss
ret
adc
xchg
cmp
test
push
loopne
dec
dec
pop
jne
cmp
mov
adcb
fucomi
mov
fcomip
int3
pusha
icebp
je
or
jl
or
das
mov
and
dec
sub
rcrb
pusha
lea
jp
jl
mov
shr
push
cmp
or
scas
cmpsl
adc
or
outsb
mov
cmp
ds
lret
sub
xchg
pushf
scas
mov
mov
popa
pop
or
push
mov
mov
out
xchg
fwait
jnp
sub
xchg
jg
or
into
inc
insb
or
sbb
push
mov
nop
nop/reserved
loopne
fisubl
addr16
push
decb
loope
cmp
or
test
pop
adc
cmp
add
sbb
sub
stos
sub
mov
xchg
stc
mov
or
in
pop
pop
mov
aaa
inc
movsl
sub
pop
popa
popf
jnp
xor
test
sahf
inc
lcall
insb
or
sub
mov
add
out
push
mov
cli
mov
or
add
pop
dec
or
call
lret
mov
repz
iret
jle
or
mov
cld
mov
jge
fwait
mov
das
or
inc
sti
push
sub
push
jns
pop
mov
mov
or
fmull
cmpsl
int
jns
divb
xor
out
lods
ja
push
imul
pop
out
dec
popf
rclb
pop
jge
or
cmp
push
adc
clc
pusha
pop
pop
adc
push
add
xchg
xchg
pop
or
mov
inc
dec
xor
dec
mov
xor
push
outsb
mov
hlt
test
in
sbb
dec
mov
mov
pop
insl
out
fbld
int3
push
outsl
pop
or
mov
and
or
jo
loope
or
dec
fistpl
out
or
mov
mov
push
and
inc
or
loope
iret
daa
or
mov
jp
adcb
jae
and
outsb
sbb
in
sub
lods
push
or
lcall
outsl
fldcw
gs
cli
push
add
imul
mov
or
mov
movsb
je
sbb
aas
lret
xchg
and
sub
pop
dec
lcall
adc
pop
sti
jecxz
mov
adc
pop
in
push
iret
sbb
or
xchg
pop
cmc
cmp
adc
shrl
push
mov
scas
ret
xchg
loope
out
add
imul
mov
xchg
test
or
push
mov
push
outsl
jno,pt
movsb
mov
pop
daa
sbb
jb
or
test
out
das
loopne
push
push
push
inc
cmp
pop
lahf
fwait
jle
sub
shrl
sub
or
ds
dec
out
or
hlt
and
mov
fucomi
rol
movsl
in
lret
sbb
and
push
push
fbstp
pushf
jle
fsub
sbb
or
push
aaa
or
sbb
push
inc
pop
cmp
stos
addr16
out
pop
sub
or
enter
or
xchg
popa
add
nop
xlat
xor
or
fldcw
bound
cmp
out
mov
add
sub
dec
mov
xchg
pcmpgtd
mull
or
add
fstps
add
dec
jp
push
es
loopne
xchg
loopne
jmp
repz
enter
or
xchg
pop
push
cmp
repnz
jo
xchg
or
fidivrs
and
or
rcrb
sub
mov
addb
cmp
repz
inc
pop
sub
jg
incl
pusha
popa
jecxz
popa
cmp
dec
movsb
pushl
or
imul
adc
mov
or
or
cmp
pop
in
outsb
ret
inc
and
add
or
mov
sbb
mov
cmp
pushf
cwtl
in
or
xchg
inc
jl
or
mov
fwait
inc
or
dec
pop
cmp
push
rorb
mov
dec
stos
or
rclb
notb
or
in
cmp
jecxz
mov
in
or
jl
pop
sbb
pop
or
lcall
ficoms
adc
mov
scas
xorl
or
dec
js
cld
lret
sub
cs
mov
or
out
fidivrs
data16
cs
push
mov
scas
pop
cmp
and
ret
aam
rcrl
sbb
adc
dec
outsb
mov
xlat
jne
mov
push
xor
mov
bound
and
fmulp
xor
or
jae
mov
mov
ja
ret
in
cmp
das
pushf
sti
cmp
ds
xchg
insl
or
adc
jmp
pop
mov
lret
xor
cmpsl
or
and
sub
jmp
or
mov
mov
and
dec
push
pop
sbbl
cmp
mov
sub
mov
inc
and
pop
movsl
or
out
pop
aas
stos
lods
or
sbb
fwait
inc
or
in
xor
call
addl
leave
adc
mov
mov
imul
int3
pop
icebp
xchg
sub
fidivrs
sarb
mov
jno
mov
jg
mull
cmp
fbstp
sub
cmp
push
and
cli
cld
dec
add
shl
int
dec
pushw
dec
popl
lahf
mov
lret
imul
mov
push
or
aaa
nop
addr16
shll
pusha
dec
add
push
ss
or
in
and
or
inc
insl
mov
and
jg
rorl
rorl
adc
sub
mov
jne
stos
adc
enter
in
jle
aam
pushf
int3
scas
ds
adc
out
enter
add
outsb
iret
dec
mov
xchg
pushf
sub
xor
cld
cmp
enter
or
fwait
dec
or
mov
cmp
inc
ds
testl
lods
or
push
push
cmpsb
call
imul
dec
rorl
xor
clc
jecxz
je
out
int
mov
lea
in
xchg
and
adc
mov
loope
sti
adc
pop
int3
jb
inc
add
mov
scas
dec
adc
or
fwait
stc
je
or
cld
pop
push
into
or
xor
faddl
xchg
movsl
fnstsw
jb
or
xorb
loopne
js
or
test
ret
data16
iret
dec
or
lea
movsb
add
xor
in
data16
cmp
mov
xchg
mov
cld
xor
out
or
pushw
sub
or
das
push
cmp
mov
or
push
or
push
sbb
push
mov
add
je
mov
xor
push
lea
ja
fcomps
loop
cmp
or
mov
pop
sarb
scas
lret
adc
fmull
ret
jmp
and
aas
nop
lahf
xor
test
lea
and
dec
mov
add
cmp
or
insl
lods
cmpsl
test
sub
xor
dec
fcom
fs
jnp
mov
inc
and
or
mov
out
insb
stos
push
ret
lods
mov
push
inc
fstpt
mov
fdivrs
sub
or
xchg
or
mov
xlat
aas
outsb
or
and
xor
test
inc
and
mov
cld
out
cmpsb
inc
je
sub
fcompl
sbb
add
xor
xor
pop
int
pop
xorl
orl
or
adc
jmp
lret
ret
jo
add
imul
enter
outsb
sub
bnd
xor
mov
push
or
sbb
pop
push
pusha
repnz
push
adc
mov
rcll
cmpsb
sub
or
dec
pop
loope
or
xchg
cmp
add
xlat
sti
dec
push
mov
jp
and
or
cmp
jmp
in
adc
shr
mov
aas
jno
loope
sub
inc
pop
lret
push
jp
lds
pop
dec
or
test
and
cwtl
add
sub
imul
or
sbb
lods
std
insl
mov
andb
ljmp
popf
add
jmp
cmp
jmp
dec
adc
pop
cmc
or
mov
shlb
fisttps
in
sub
pop
dec
pop
add
jbe
sti
mov
cmp
inc
cmp
mov
or
cltd
fildll
sbb
aas
sbb
mov
sub
clc
add
mov
repnz
mov
cmp
mov
dec
out
gs
pop
dec
clc
or
es
xchg
cmovp
dec
lds
fwait
pop
sbb
xchg
sbb
push
or
stos
les
leave
mov
cmp
sti
idivb
xchg
or
jl
dec
out
sbb
jmp
mov
push
aad
jl
iret
or
push
add
test
dec
dec
sub
lods
imul
jecxz
bound
rcrb
mov
sbb
ret
push
mov
and
sbb
call
out
or
and
sarb
adc
pop
fisubrl
add
sbb
or
clc
jle
adc
imul
lret
fsubl
xor
bnd
mov
cmpsb
xor
testb
jle
shl
xor
xor
scas
leave
cmp
or
insb
fwait
insl
xchg
xorb
shrb
fsubrs
rorl
popa
lods
or
xchg
jae
ja
inc
ret
sbbl
inc
mov
jnp
cmp
or
mov
add
cmp
jae
push
or
ret
pop
xor
cli
js
mov
bound
xchg
sbb
stos
in
push
ds
add
or
push
repz
insl
xchg
xor
dec
cld
lret
rorb
leave
cwtl
hlt
push
mov
or
push
xchg
lret
movsb
sbb
and
stos
mov
xchg
mov
sbb
add
cmpsl
fs
inc
scas
cld
aad
mov
ja
mov
or
add
imul
dec
cwtl
mov
int3
xor
jle
sub
xchg
mov
outsl
fmull
fwait
es
lods
jmp
or
adc
pop
or
push
outsb
fucomi
mov
add
lods
or
cmp
or
sbb
lret
out
dec
out
pop
jno
lods
test
pop
push
lret
mov
push
in
nop
cmp
jl
sbb
dec
adc
sbb
adc
xchg
mov
jae
dec
mov
mov
inc
pop
mov
mov
ds
int3
loop
lods
and
sub
mov
cmpsl
neg
fsts
cmp
xor
sbbl
xlat
jge
and
pop
and
xor
jb
jne
inc
jle
cmp
imul
lret
movsl
or
mov
mov
or
data16
or
movsl
shll
mov
adc
jb
xchg
stc
int3
notl
mov
int
or
dec
cmp
and
or
pop
clc
ret
dec
mov
jge
adc
addb
into
or
shl
cs
or
lods
cld
cmpsb
out
or
cmp
jno
pop
jge
divb
das
mov
adc
sbb
sub
andb
je
adc
test
outsl
mov
loop
jnp
and
jl
std
fsts
jp
or
sub
ljmp
xchg
scas
mov
jmp
xorb
mov
rolb
or
mov
fs
add
mov
add
outsl
cmp
outsb
cmpsb
and
or
sbb
jle
lods
stc
or
mov
and
js
adc
push
repz
sbb
lods
lods
pop
or
cs
mov
or
subb
mov
or
or
cmpsl
xor
in
int3
ret
insb
or
push
mov
rcrb
or
dec
lods
jmp
push
test
sbb
mov
mov
and
cltd
sub
rcl
push
sti
in
xor
in
or
mov
ljmp
cmpsb
xchg
jmp
pop
or
js
mov
adc
adc
push
hlt
or
loop
mov
or
out
mov
test
dec
pop
pop
inc
pop
fs
in
or
push
jge
lea
mov
mov
or
std
scas
test
ret
jg
arpl
or
pop
cmc
jp
dec
scas
std
cmp
out
rcrl
arpl
or
es
xchg
or
pop
outsb
inc
add
repnz
mov
repz
xchg
xchg
or
cli
cmc
mov
or
mov
sub
cltd
repz
xor
xchg
sbb
mov
subb
mov
sbbl
out
jmp
or
jl
cmp
mov
mov
jmp
dec
mov
imul
ds
ret
jle
das
or
adc
fstps
cmp
sub
mulb
sti
mov
shrb
jae
rorl
in
push
mov
aam
sbb
sarb
inc
paddw
adcl
jge
jmp
fidivl
mov
or
cld
mov
cmp
test
aas
dec
or
push
mov
and
rcll
or
bound
xchg
xchg
or
das
xchg
or
pop
lcall
lret
lds
adc
jae
mov
or
ret
and
out
aad
cmpsl
call
sub
andl
test
push
mov
mov
ljmp
repz
push
xor
enter
aaa
jo
int
cld
lret
fwait
lock
or
sbb
xor
jnp
or
aam
jne
or
mov
mov
or
or
mov
imul
stos
out
mov
enter
mov
jg
outsl
loope
xor
dec
dec
sahf
mov
sub
or
daa
lret
ret
mov
popa
sbb
or
fsts
je
or
cs
test
loop
cmc
cmp
and
imull
adc
xor
movl
imul
inc
push
sub
nop
xchg
or
subl
dec
lds
fstpl
out
rorb
hlt
and
jl
aam
push
rcr
push
or
mov
mov
jge
inc
iret
cmp
cmpsl
fisttpl
out
cwtl
adc
test
out
xchg
or
repz
push
sub
jne
pop
push
adc
cmp
mov
int3
sbb
rorb
or
imul
or
stos
inc
cs
or
adc
ficoms
mov
or
ret
out
fwait
sbb
mov
outsl
or
cmpsb
sti
lcall
push
cmp
dec
mov
mov
cmp
mov
loopne
push
daa
pop
cmpsl
incb
xor
or
outsb
inc
lret
pop
mov
pop
cs
inc
pop
or
mov
and
rorb
cli
imull
push
or
arpl
bound
lahf
das
outsl
dec
enter
mov
fcompl
push
dec
add
leave
pushf
and
mov
cltd
or
mov
xchg
mov
sub
or
mov
lret
jle
jno,pt
rorl
dec
movsb
or
test
sbb
fiaddl
inc
sbb
pushf
inc
pop
adc
bound
pop
cmp
or
xor
mov
loop
sub
dec
testb
ds
mov
adc
insb
movsb
mov
out
lret
cmp
dec
pusha
push
ljmp
fs
aam
mov
ret
bound
mov
fimuls
jne
int
jmp
es
adc
cmp
imul
or
mov
dec
xchg
xchg
insl
mov
sahf
inc
inc
xor
das
mov
mov
clc
js
rorl
ljmp
in
into
data16
pushf
je
and
push
or
mov
jne
sbb
js
or
test
xor
movlps
lods
sbb
test
lret
nop
mov
xchg
repz
sbb
xor
mov
xchg
mov
push
sub
mov
pop
rolb
out
icebp
cmp
jb
push
or
xchg
test
ret
cmp
mov
sbb
jecxz
mov
dec
add
mov
and
push
call
cmp
and
test
sbb
push
cld
lret
enter
loope
xchg
add
fists
test
cmp
and
mov
xor
add
jnp
movsl
xchg
jl
push
pop
or
js
push
iret
dec
dec
add
or
adc
aaa
dec
mov
jno
aaa
add
lds
inc
fistpll
or
imul
push
pop
add
xorb
shrl
sbb
cmp
int
lea
or
pop
jae
adc
dec
int3
or
mov
pop
mov
repz
aam
xchg
and
inc
ret
or
mov
and
push
jbe
jno,pn
sbb
adc
mov
hlt
mov
xchg
insw
push
push
inc
outsb
sub
int3
cmpsl
cmp
cmp
sbb
adc
and
and
clc
adc
aaa
add
or
std
lds
and
int3
or
push
call
icebp
scas
mov
pop
adc
insl
mov
push
jmp
adc
jecxz
jbe
les
test
fsubrs
stos
or
fstpl
add
inc
scas
xor
int
mov
fdivl
lods
sbbb
adc
aad
in
or
imul
enter
or
mov
jo
stos
mov
fimuls
push
jns
fnstenv
rolb
test
or
add
jl
sbb
push
or
sbb
imul
sbb
in
adc
pop
pushf
mov
dec
or
cmp
xor
and
add
dec
pop
jne
sbb
pushf
and
icebp
ret
or
sub
push
test
repnz
int3
or
enter
dec
into
aaa
and
or
cmpsb
mov
push
or
stc
ret
or
push
and
inc
cld
mov
sub
shlb
aas
mov
xchg
ret
cwtl
inc
out
xor
dec
xor
popa
ret
ss
mov
inc
fistpll
lods
lahf
or
das
repz
sub
mov
mov
fcoms
fsts
sti
add
ds
cmc
cmpsw
pop
or
sub
xchg
or
stc
jle
jne
out
popf
aam
testb
cmpsl
cmp
sbb
jle
jg
inc
inc
rorl
xchg
loop
xchg
inc
dec
bound
pop
push
and
jns
and
jmp
int3
loopne
pop
sarb
pushf
dec
ds
sbb
mov
ret
push
fmuls
pusha
mov
sahf
pop
int
jle
fnstenv
in
cmpb
add
aam
lahf
and
fwait
lods
rorb
loopne
enter
cmp
mov
repnz
ds
jg
lods
sbb
push
or
fildll
sbb
ljmp
imul
nop
mov
repz
mov
test
cli
jae
or
push
shlb
sub
adc
arpl
mov
cmp
das
scas
add
gs
lahf
or
push
popa
test
sbb
inc
in
out
jle
jno
stc
ret
mov
xchg
mov
test
push
sbb
outsl
push
cmp
mov
sub
pop
xlat
and
jmp
or
cwtl
ljmp
sub
or
dec
fwait
test
mov
cmp
inc
in
sub
dec
push
mov
aas
testb
adc
or
test
ja
repz
mov
dec
dec
cmpb
mov
or
js
cwtl
jle
cmp
stos
imulb
jmp
dec
xchg
or
jns
or
push
and
xchg
or
inc
sbb
pop
aad
dec
push
gs
mov
mull
cmp
loop
add
inc
test
jmp
jp
int
sub
int
insb
cli
push
pop
mov
cmp
testb
ja
je
lods
pusha
lret
jmp
dec
push
xor
mov
dec
pop
or
mov
sub
pop
add
repnz
rolb
test
imul
cmp
sbb
push
mulb
and
inc
adc
nop
cwtl
pop
sub
or
pop
mov
das
push
dec
ret
mov
testb
imul
ret
dec
dec
aaa
adc
add
jns
push
add
or
insl
cwtl
jg
or
add
cli
repnz
out
loop
es
pop
in
push
aas
inc
mov
and
pop
or
fwait
leave
cmp
mov
ds
dec
outsb
push
push
mov
push
sbb
xor
iret
jl
push
repz
pop
mov
inc
imul
aas
das
dec
orb
in
mov
in
data16
add
or
incl
leave
fldt
or
scas
push
inc
mov
int
iret
int3
pop
stc
xor
lcall
sbb
repnz
mov
std
fmull
xchg
ret
lods
int
push
pop
push
mov
inc
mov
or
shll
stos
ret
rol
int3
sbb
imul
out
repnz
or
pop
loop
adc
or
ljmp
push
inc
mov
cmc
jecxz
mov
fucomip
ds
loopne
add
and
adc
pop
fxch
cmp
inc
cmp
cwtl
dec
or
jmp
aad
pop
or
cli
mov
sbb
lods
rorl
pop
or
sub
arpl
sub
jge
sbb
or
mov
add
pop
dec
movsl
mov
mov
mov
cmp
jo
xor
leave
cmp
movsb
or
faddl
je
es
dec
pop
xor
decl
fisttps
sub
sub
lea
jmp
cmc
add
enter
lock
lcall
or
cld
in
mov
or
add
sub
in
pop
cmpsl
sbb
xchg
push
dec
lods
cmpsb
loop
rcrb
mov
nop
js
clc
or
andb
out
xchg
sub
movaps
iret
mov
das
out
divb
js
or
jb
test
add
aaa
push
fdivr
mov
add
pushf
call
mov
je
push
mov
inc
scas
cld
xchg
pop
ret
mov
pop
jecxz
or
cs
jnp
or
call
jle
pop
cltd
sub
xor
adc
hlt
mov
mulb
loope
cmp
lds
push
or
call
mov
xchg
loopne
or
adc
adc
movb
xchg
or
addr16
pop
or
pop
adc
or
or
jle
cli
inc
add
xchg
js
and
repz
mov
xchg
fwait
cmp
sbb
jae
or
and
cmp
push
sbb
cmp
or
or
or
mov
fidivrl
subb
inc
push
rcrb
cmp
fbstp
inc
pop
xorb
sar
psrlw
mov
xchg
repz
jne
lds
push
cmp
shll
push
mov
lret
or
test
or
xchg
push
iret
outsl
fmuls
lret
lods
mov
or
pop
ja
es
mov
mov
and
sbb
cmp
out
sbb
inc
nop
mov
cmp
and
lret
insb
or
sub
mov
push
into
push
jecxz
outsl
sbb
inc
cli
or
mov
push
or
shll
pop
xchg
pusha
or
out
jp
cmp
push
mov
mov
push
sub
push
rcrb
xchg
jp
int3
fistpl
cmp
imul
add
pop
ljmp
lock
sub
lods
lret
test
addb
jno
sbb
es
jmp
mov
xchg
mov
inc
jp
rcl
loop
sti
cmp
push
prefetchwt1
enter
gs
sahf
and
rol
call
xlat
sti
dec
icebp
imul
jne
mov
stc
or
pusha
mov
or
inc
ss
or
ja
mov
or
sti
add
mov
sub
mov
inc
mov
jae
ret
repnz
fs
or
outsb
es
mov
mov
ficoms
or
repz
inc
or
rdtsc
leave
out
stos
insb
mov
enter
jge
mov
xchg
movsb
sbb
cmp
ret
or
bound
lods
mov
fdivr
sub
not
dec
and
scas
outsb
rcrb
movsl
clc
int
pusha
in
out
xlat
aaa
push
cmp
adc
ja,pn
cmp
or
mov
cwtl
jecxz
repnz
dec
das
ss
ss
cmpsb
int
insb
or
loope
aaa
daa
dec
int3
xchg
xor
mov
stos
ljmp
iret
add
ret
jo
dec
jg
sub
loop
ret
dec
pop
sarb
or
popa
dec
mov
sub
and
fs
addr16
lret
je
sbb
dec
scas
pop
inc
lds
outsb
ret
mov
addr16
pop
out
test
push
jno
xchg
int
adc
fcmovnb
das
push
scas
sub
out
pop
xlat
or
mov
inc
ret
push
mov
lock
xchg
sub
inc
addl
dec
mov
cmpsb
or
jne
mov
or
in
jge
or
push
in
cli
cmp
mov
stos
xchg
inc
popa
in
loop
cmp
cmp
xchg
sbb
and
subl
adc
jb
test
sbb
jle,pt
cmc
ds
or
add
repz
rolb
mov
das
mov
sub
test
insl
dec
or
stos
out
mov
mov
fisubs
pop
add
adc
push
rorl
push
adc
xor
cmc
std
pop
rcl
aam
fnsave
pushf
mov
ljmp
or
and
int3
nop
inc
and
jg
fwait
mov
movsb
ret
mov
imul
mov
push
mov
inc
inc
mov
imul
dec
push
adc
pop
repz
ucomiss
or
xchg
mov
cwtl
loope
pop
jmp
lret
ds
testl
enter
insl
push
push
add
sub
sbbl
out
or
fistps
dec
out
or
mov
negl
mov
arpl
xor
jo
or
int3
pop
add
cmp
mov
adc
cmp
or
lods
repnz
jae
adcb
sahf
sti
ficoms
or
faddl
xchg
jle
jle
jmp
inc
scas
int
xchg
cmp
test
lret
or
aaa
inc
inc
pop
push
shr
fwait
gs
mov
or
stos
out
ret
mov
mov
nop
add
or
insb
das
std
enter
dec
mov
jg
mov
ret
adc
mov
scas
subl
imul
xchg
sbb
mov
movsl
cmp
sbb
ljmp
jle
adc
jns
add
dec
or
mov
cmp
testb
pop
pop
or
test
ljmp
mov
mov
stc
sti
xchg
test
pop
aam
or
or
inc
xchg
inc
or
ljmp
or
adcb
or
dec
mov
std
or
xor
repnz
dec
pop
clc
push
push
mov
pop
dec
int3
jae
js
and
iret
shll
icebp
lret
jb
or
pop
loopne
repz
in
inc
jno
push
movsl
adc
rolb
fsin
in
call
inc
adc
mov
jmp
cmp
std
rcl
out
xor
or
aam
inc
jae
pop
shrb
imul
sbb
sub
or
repz
js
or
jl
cmpsb
adc
arpl
imul
sub
jl
ret
mov
and
fisttpl
cltd
sarb
or
push
insl
shll
cmovbe
int
cmpsl
xor
mov
lcall
xchg
inc
or
cld
jge
jo
out
sti
leave
shrl
sbb
mov
sbb
jle
daa
popa
mov
mov
inc
fcomps
repz
sub
sub
sbb
imul
pop
dec
fwait
or
adc
pop
pop
or
dec
and
xchg
or
mov
shrb
add
mov
pop
dec
push
push
cwtl
or
xor
movsl
or
sub
jl
or
cli
mov
or
adc
adc
inc
mov
lea
or
dec
ds
xchg
jle
cmp
mov
dec
or
push
cmp
aad
dec
jg
jle
and
scas
xchg
lret
lods
or
push
sub
lea
mov
xor
xor
gs
push
mov
sbb
or
pop
test
mov
shl
rorb
lahf
lret
ret
cli
int
push
out
dec
mov
loopne
mov
sbb
mov
nop
mov
xor
inc
je
jb
out
jns
cwtl
xchg
popf
jno
aaa
in
jecxz
xor
or
fisubs
sub
out
ds
imul
in
cmp
mov
cmp
mov
push
xchg
hlt
inc
imul
push
scas
mov
sahf
loopne
jae
jne
int
push
sysret
aad
lods
add
sub
test
pop
das
orb
dec
or
pop
lcall
dec
lea
inc
sbb
subl
int
pop
push
ret
stos
leave
cmp
adc
int
pop
cltd
ret
or
loop
mov
pop
mov
xor
bound
pop
nop
fs
popf
movsl
xor
fs
push
sbb
jne
sarb
mov
inc
dec
nop
sbb
mov
sub
dec
rolb
sbb
inc
shrb
cld
enter
cmp
shrb
jecxz
int3
inc
xor
mov
xchg
push
jp
fldenv
cld
and
mov
ror
and
sbb
dec
inc
dec
daa
inc
mov
dec
cmpsb
and
jecxz
and
test
add
clc
mov
cmpb
adc
repnz
add
cmp
sub
insb
adc
lock
ljmp
setb
mov
int
lcall
or
bswap
ljmp
addb
lret
fisttpll
dec
dec
push
xchg
push
push
mov
pushf
adc
repnz
out
aad
popl
popf
inc
sbbb
mov
dec
pop
je
add
imul
adc
pop
xchg
mov
fdivrl
inc
shrb
mov
push
fsts
push
push
ljmp
adc
test
cmp
push
aam
inc
int3
ret
xchg
lea
adc
mov
and
popf
pop
add
push
inc
add
lea
push
mov
xor
in
aad
jmp
sub
dec
add
in
mov
mov
pop
adc
add
lea
or
or
mov
les
in
pop
xchg
bound
adc
pop
popa
xchg
mov
lret
add
adc
adc
cwtl
sub
test
cmp
pusha
mov
pop
lea
sbb
sbb
pop
push
daa
inc
daa
or
pop
mov
decb
ror
dec
add
adc
adc
dec
dec
mov
mov
rorl
in
ret
enter
pop
loop
fst
push
dec
push
xchg
sub
add
ret
pop
inc
loopne
dec
dec
mov
int
cmp
pop
jl
loope
add
sbb
inc
inc
cmp
add
out
jmp
dec
cmp
gs
push
cmp
lea
mov
and
lock
call
inc
inc
into
pop
outsb
xchg
sbb
sbb
sbb
and
sbb
fwait
add
leave
fs
lret
push
movl
sub
clc
add
popf
jo
int3
mov
test
mov
lahf
fcoms
int
pop
mov
fstl
sbb
pop
inc
adc
es
jnp
cmp
adc
add
subb
test
fisubl
cld
pop
movsl
pushf
mov
add
out
add
dec
ss
cmpsl
imul
lea
pop
add
lea
dec
push
mov
mov
ret
fldcw
enter
xor
loop
lods
int3
fisttpll
daa
daa
jae
in
or
inc
adc
clc
push
imulb
or
addl
adc
and
insb
roll
std
and
cmpsl
jns
bound
xor
lret
cmp
adc
jne
mov
xor
sbb
xor
cmpsl
sbb
inc
ror
jne
sub
cmp
sub
and
int
movsl
jnp
inc
repnz
mov
gs
mov
and
inc
adc
mov
and
mov
sbb
sbb
ret
adc
pop
sbb
lea
mov
mov
xor
inc
leave
stos
data16
mov
xchg
aaa
pop
pop
cli
xorb
ret
test
loope
mov
adc
lock
sbb
in
sbbb
cmpsb
mov
jb
int
sahf
adc
and
popf
xlat
sahf
or
pop
add
lea
mov
xchg
pop
out
push
nop
or
dec
loop
popf
add
fldl
xchg
ret
mov
pop
mov
sub
fbld
inc
mov
mov
cmpsl
push
push
insb
loop
mov
cmp
fwait
pop
fstpl
add
es
xchg
out
cld
sbb
ljmp
jmp
bound
or
cli
sbb
dec
scas
pop
shlb
dec
daa
pop
lret
dec
or
lea
stc
sub
or
xchg
popl
std
pop
xchg
mov
sub
cmc
mov
les
add
push
imul
mov
pop
push
std
out
cmpsl
mov
push
dec
fildll
aaa
dec
mov
sbb
pop
mov
imul
push
and
sub
movsl
pop
pop
mov
daa
inc
jns
ret
mov
aas
sbb
push
sbbl
mov
shrl
sbb
mov
leave
inc
lahf
pushf
lcall
insb
pop
add
xor
mov
hlt
pop
add
jns
test
jle
xchg
and
scas
jbe
int3
and
out
ret
pushf
or
pop
add
or
leave
inc
outsb
pop
inc
out
bound
in
fidivrs
mov
add
fbld
ret
mull
jne
mov
clc
cmp
dec
lahf
add
cmp
or
lds
adc
repnz
ja
std
mov
cmp
or
ffree
test
mov
lock
jnp
add
lds
adc
mov
addl
test
orl
stc
mov
mov
inc
loop
pop
pop
mov
mov
mov
xor
xor
and
lret
mov
daa
movsl
pop
imul
pop
cmp
mov
or
cld
stos
pop
add
pop
adcl
add
lds
mov
inc
mov
xlat
dec
and
pop
into
xchg
arpl
or
mov
cmp
inc
imul
daa
dec
stc
ss
add
dec
adc
mov
pop
leave
sbb
leave
xchg
mov
push
outsl
sbb
xchg
js
inc
mov
lea
or
xchg
inc
add
or
xor
jl
ss
mov
inc
sub
push
fisttps
pop
dec
jo
adcb
xor
adc
add
adc
push
sbb
pop
pop
or
mov
dec
jmp
push
or
cs
shlb
mov
nop
sub
sub
dec
inc
pushf
dec
inc
add
xor
pop
in
or
roll
push
dec
and
push
sub
add
sbb
repz
jp
int
or
xchg
add
cltd
rol
xor
sbb
and
and
inc
lock
test
adc
mov
gs
sbb
dec
push
and
fisttps
and
sbb
lea
pusha
mov
and
add
or
insl
jp
dec
pop
mov
sbb
fwait
sbb
shr
push
mov
sarb
or
and
or
or
sub
or
cmp
fmulp
pop
sbb
cltd
out
sbb
psrld
mov
mov
push
add
and
jmp
popf
sbb
or
cs
sbb
fnstcw
sbb
cmp
xor
rolb
hlt
pop
push
mov
movsb
cmp
cmp
ret
std
xchg
lock
mov
jns
xchg
ret
fimull
mov
xchg
cmpsb
adc
push
adc
inc
pushl
mov
and
and
inc
add
int
sbbl
adc
fmuls
sbb
lea
sub
scas
adc
into
adc
push
les
push
lds
xchg
cmp
popf
dec
mov
jg
mov
pop
adc
sbb
xchg
push
adcb
fs
xchg
sbb
out
pushf
or
and
add
xor
mov
push
arpl
cwtl
add
fcom
add
dec
sbb
cmp
add
push
pop
add
or
or
lock
and
mov
es
lds
cmp
pop
or
nop
aas
sbb
lar
iret
jo
push
lods
rcrl
test
into
add
or
sbb
push
popf
shll
add
sbb
and
sbb
orl
fistpl
lcall
out
frstor
xor
insb
sub
inc
add
aam
sbb
mov
cs
pop
scas
movsl
dec
lea
dec
add
inc
xchg
pop
fidivrl
pop
add
cwtl
mov
inc
dec
icebp
fildll
push
push
orl
mov
sub
xchg
sub
out
push
adc
add
inc
and
mov
sub
loopne
mov
inc
jge
sbb
cmp
pop
inc
sbb
or
lds
scas
push
sbb
xor
jo
cmp
add
jbe
in
ja
in
jg
xor
insl
adc
jno
push
lds
pop
ret
dec
xor
mov
clc
sqrtps
mov
mov
jl
add
orl
pop
bound
mov
xchg
movl
push
and
or
inc
in
pop
neg
into
mov
lahf
mov
dec
mov
or
fistl
add
sbb
add
js
sbb
mov
repnz
sub
and
cmpsb
push
mov
ss
push
cmpsb
inc
mov
add
icebp
sbb
dec
inc
xchg
leave
add
sbb
adc
cmp
mov
push
xchg
repnz
add
ret
xor
adc
ja
add
xor
bound
adc
lock
xor
and
cmpsl
add
cmc
xor
push
sahf
or
mov
xchg
inc
icebp
pop
cmp
arpl
rorl
jge
jno
dec
out
mov
fld
in
lds
jae
inc
add
shlb
pop
inc
cs
sbb
adc
ret
fidivrl
shll
mov
mov
sub
ds
rcrb
into
add
sub
cld
dec
or
mov
cmpsb
outsb
add
sbb
add
adc
iret
sub
lea
or
jg
add
inc
or
add
cmp
leave
jp
shrl
test
rcl
and
bound
mov
sub
test
adc
out
push
jmp
test
xchg
inc
sbb
push
rcrl
ss
push
stos
lock
out
sbbb
test
sub
inc
add
inc
cmp
cmp
subl
cli
mov
and
mov
pop
inc
or
leave
dec
sbb
out
sbb
sbb
mov
cmp
xchg
dec
daa
push
in
inc
out
mov
cmc
add
movb
sub
xor
aaa
cmp
add
stos
sbb
popf
mov
or
sbb
insl
out
rorb
mov
or
int3
in
out
movsb
roll
cmp
inc
or
pop
sub
out
mov
dec
imul
popf
mov
or
cmp
mov
dec
ret
xchg
leave
or
dec
mov
les
inc
xchg
shl
push
and
in
xlat
jb
andb
xlat
mov
mov
push
sub
pop
or
cmp
cmp
cmpsb
sub
sbb
add
pop
enter
fistps
adc
pop
or
or
mov
sub
mov
and
and
jb
lds
ljmp
rcr
xlat
xor
or
fs
mov
add
push
loop
push
adc
inc
lcall
pop
xchg
inc
inc
push
adc
out
adc
mov
mov
or
into
push
lcall
adc
inc
sub
ret
sub
xchg
dec
testb
or
bound
scas
ljmp
or
out
inc
pop
cmc
rcll
ret
push
dec
mov
push
jbe
xor
sbb
movsb
ffree
out
mov
cmpsl
mov
push
outsl
stos
sub
pusha
outsl
lahf
or
int3
xor
pop
pop
pshufw
mov
add
push
popl
test
or
add
add
outsb
mov
cmp
andb
sbb
adc
mov
test
leave
les
sbbb
xor
xchg
cltd
cmp
adc
rolb
mov
inc
add
mov
fs
addr16
or
sub
push
sub
out
push
cmp
daa
testl
jno
dec
popa
cs
add
sub
sbbl
and
sbb
adc
add
out
adc
jg
int
push
and
sub
push
sub
das
push
pop
mov
rorl
jle
xchg
push
sub
sub
bound
mov
lret
xchg
jne
add
dec
sub
das
inc
xor
pop
in
out
test
or
shlb
stos
mov
adc
adc
es
les
jns
bswap
shlb
mov
sub
fbstp
sbb
fidivl
pop
xlat
sub
mov
jl
les
pop
fnsave
mov
in
xlat
push
or
test
movsl
inc
test
push
inc
jg
movl
add
adc
adc
pop
push
pop
js
pop
mov
mov
or
mov
xchg
cmp
jg
sub
dec
xor
cld
scas
test
jmp
lahf
ret
sbb
jmp
pushf
add
push
dec
outsl
and
inc
int3
leave
iret
jne
cmp
or
mov
jne
mov
xchg
mov
cmp
fimuls
and
lret
sbb
xchg
outsb
and
mov
int
std
mov
orb
pop
xor
jne
or
xchg
pop
mov
pop
add
jle
adc
xchg
xchg
pop
or
sub
inc
pop
subb
clc
adc
mov
push
inc
add
sbb
in
mov
dec
or
inc
dec
sub
pop
xor
mov
inc
push
leave
jp
imul
xor
sbb
aas
sub
hlt
sbb
popf
into
add
sub
lock
and
jae
adc
sbb
add
adc
mov
sub
imul
inc
nop
dec
pop
sbb
daa
xor
inc
add
lds
sub
aas
inc
lahf
stos
fisubrl
sbb
pop
jns
xchg
bound
sbb
lcall
jbe
xchg
or
add
xchg
pusha
pop
les
fistl
dec
dec
mov
xchg
pop
lds
xchg
lret
mov
sub
adc
out
jo
pop
sbb
sbb
add
mov
dec
inc
fwait
add
inc
push
inc
mov
add
je
addb
adc
dec
ljmp
mov
push
sub
insb
gs
push
lahf
les
test
fcmovb
inc
xchg
aas
scas
outsl
add
test
daa
adc
insl
and
pop
out
cs
push
repz
lret
inc
mov
push
sub
jbe
add
mov
fsubrs
add
out
mov
dec
and
jb
sahf
and
xchg
pop
sbb
ret
xchg
aam
test
cmp
adc
inc
ss
incb
mov
mov
cld
or
dec
lea
pushf
inc
inc
mov
xchg
ds
pop
sbb
jle
jp
and
jl
lods
xchg
cld
dec
push
in
iret
mov
mov
and
pop
xchg
sbb
rorb
arpl
inc
jge
and
insb
xchg
loope
lcall
inc
in
and
outsb
orb
leave
into
dec
add
sbb
adc
xor
test
push
test
add
jcxz
in
enter
pop
or
dec
push
roll
add
mov
jno
or
sbbb
into
jb
push
out
lahf
xlat
inc
pop
ret
fwait
adc
insl
addb
or
pusha
sti
pop
cmp
push
push
icebp
or
sbb
lret
icebp
lods
mov
lock
lods
xor
out
jnp
adc
sbb
out
add
dec
pop
loope
push
add
lret
mov
cmp
inc
out
inc
inc
sarb
pop
repz
cmpl
mov
inc
les
pop
mov
and
add
lret
sub
and
into
mov
aad
add
sbb
mov
xchg
ret
jo
rclb
mov
cmp
inc
or
aaa
into
or
fsubrs
mov
jbe
cs
dec
sbb
or
movsb
lcall
out
add
adcl
adc
iret
xchg
adc
pop
imul
adc
or
push
ret
inc
arpl
inc
je
xor
sbb
fs
test
pushf
adc
sbb
es
xchg
dec
ficoml
or
dec
jg
scas
popa
add
pop
testl
or
decl
fimull
and
push
sbb
and
or
jae
cld
ffree
sbb
and
xchg
xor
test
pop
jg
mov
cmpsl
mov
pop
pop
pop
mov
mov
pop
mov
push
sub
inc
mov
or
xor
pusha
pop
and
imulb
jns
push
fsubrl
in
scas
mov
sub
out
nop
cmpsl
mov
jns
out
or
mov
mov
ds
or
loopne
ret
mov
cmc
loopne
enter
mov
dec
cmpl
or
adc
adc
push
shlb
pop
pop
sbb
add
xor
and
jbe
lea
or
int
or
mov
xor
xchg
mov
repz
add
sbb
ds
and
xchg
add
pop
inc
adc
fmul
bound
mov
pop
xchg
mov
sub
fidivrs
les
mov
sub
sub
adc
push
out
into
cmp
sub
and
iret
pop
ja
and
loope
mov
int3
inc
mov
sub
inc
cmpb
sub
and
leave
or
mov
or
push
sub
mov
out
out
insl
and
push
adc
mov
mov
addb
add
fistps
test
mov
dec
sbb
mov
push
pop
cmp
fisubs
out
or
pop
lret
adc
in
push
xor
imul
or
sub
repnz
push
cltd
mov
test
stc
inc
call
dec
xchg
or
cmp
xchg
out
test
xor
popa
or
add
jo
push
cwtl
test
mov
dec
pop
jmp
sub
pop
add
sbb
sbb
inc
data16
mov
or
mov
push
jecxz
push
lods
dec
and
les
jp
xor
int
sub
mov
cmp
or
dec
ret
xchg
pop
shlb
aam
mov
pop
add
inc
or
inc
fcmovne
xchg
pushf
or
mov
adc
ret
inc
mov
or
adc
sbb
push
and
adc
push
ljmp
push
fwait
pop
push
mov
fmuls
outsb
sbb
into
or
mov
out
das
decl
mov
mov
out
stc
fwait
push
into
jecxz
pop
add
into
and
and
hlt
push
fstps
into
add
adc
xchg
arpl
adc
mov
dec
and
add
xchg
adc
xor
mov
jb
mov
lds
or
inc
inc
pop
sbb
pop
in
or
xlat
jbe
test
mov
push
adc
test
mov
movsl
sub
popf
lea
jl
add
insb
sub
insl
testl
leave
ret
xchg
fistpll
adc
ret
push
sbb
add
push
test
push
add
jo
pop
xor
cmp
sbbl
sbb
sub
sbb
push
lds
sub
and
ret
rcrb
mov
mov
into
cmp
lret
pop
jg
inc
out
mov
sub
add
inc
add
call
ja
pop
mov
out
push
aad
mov
out
ret
dec
cli
push
ror
pop
mov
xor
cmovb
sbb
sahf
dec
and
cs
mov
add
ljmp
mov
dec
pop
fwait
jecxz
add
rcll
add
pop
add
sbb
jmp
adc
das
and
repnz
imul
inc
cs
mov
inc
pop
or
loopne
pop
test
adc
jl
dec
ret
iret
out
test
xlat
sub
ret
les
js
push
pop
test
mov
add
mov
push
fstl
in
lods
push
insl
push
or
fcoml
pusha
inc
loopne
sbb
cmp
dec
xor
add
or
push
andb
inc
mov
sbb
xchg
push
inc
mov
ja
push
push
push
adc
sbb
add
es
int3
in
inc
jbe
sub
lret
lret
xchg
or
add
ret
mov
dec
sbb
xchg
out
push
add
popa
stos
mov
jo
mov
outsb
dec
pop
mov
lods
and
mov
mov
mov
xchg
arpl
outsb
add
pop
popl
mov
lret
sub
adc
sub
mov
enter
je
add
and
add
imul
and
bound
inc
test
sub
or
and
add
xchg
add
sar
aas
test
jnp
xor
adc
inc
or
add
mov
in
into
dec
mov
fstl
jmp
inc
stc
addr16
sub
out
and
call
idivl
inc
add
dec
xor
popa
add
and
rorb
cmpsl
lahf
pop
jp
sub
sarl
and
rcl
test
mov
adc
std
add
adc
scas
adcl
xchg
sub
roll
test
adc
adc
and
jmp
push
adc
xor
xor
shrl
pop
xor
jp
outsl
and
mov
and
fnstsw
js
repnz
les
je
xchg
fdivp
push
bound
push
push
test
jnp
idivl
add
add
sub
cmp
pop
cwtl
fs
or
insb
xor
testb
icebp
xchg
test
sub
pop
adc
and
mov
stos
scas
sub
mov
ret
mov
and
cmp
sub
jp
adc
daa
out
add
daa
out
test
pushf
dec
mov
fdivl
mov
mov
and
push
mov
and
add
push
aaa
sub
push
mov
push
and
and
xor
cmpsb
and
arpl
inc
xorl
pushf
adc
mov
lcall
sbb
ret
inc
pop
inc
or
iret
mov
loope
sbb
cmp
or
imul
mov
pushf
adc
jns
pop
cmpsl
ficoml
mov
call
test
xor
out
aaa
push
popa
or
cmp
mov
lcall
pop
mov
fistpll
into
mov
pop
leave
jmp
sub
hlt
fdiv
xor
sub
insl
fldenv
fmuls
fcompl
pop
xor
push
mov
outsb
jb
xor
cli
fs
add
pop
loop
push
mov
push
andl
pop
inc
sub
push
add
ss
sarl
cmpsl
xor
sub
daa
daa
add
pop
inc
sbb
and
mov
icebp
add
cmpsl
or
andb
cmp
jo
mov
test
test
add
inc
adc
es
push
mov
and
ds
adc
inc
sbb
cwtl
pop
add
fmull
inc
fucomi
lods
inc
mov
jecxz
sbbl
or
adc
or
iret
aaa
or
notl
mov
subb
jecxz
ss
mov
pop
ficompl
out
ret
mov
mov
js
mov
add
outsl
xor
xchg
pop
sahf
dec
jne
adc
fisubrl
mov
lret
inc
jb
or
cmp
jmp
push
adcl
mov
aad
cwtl
outsl
mov
imul
out
inc
imul
sub
roll
jecxz
push
leave
mov
xlat
push
adc
sub
leave
and
adc
gs
adc
pop
insb
out
pop
mov
clc
fadd
pop
sub
adc
push
mov
push
mov
sbb
sbb
add
push
mov
sbb
in
cmp
aad
lods
adc
jp
and
sbb
sbb
pop
cmp
jg
fcmove
push
out
sub
stos
test
xchg
adc
xchg
sbb
cmc
outsl
adc
fsts
movb
sub
shll
push
sub
les
shll
aaa
sbb
shll
in
sbb
cs
repnz
mov
pop
incl
roll
aas
test
sbbb
jo
push
test
jb
fwait
adc
mov
xchg
mov
or
ret
xorl
scas
mov
add
in
dec
sub
or
push
mov
je
inc
xchg
sub
push
daa
or
jne
jae
arpl
push
xchg
jp
es
fcompl
stos
sub
cld
sbb
push
mov
sbb
ret
arpl
mov
inc
shr
inc
inc
int
aam
daa
sahf
movsb
and
adc
xor
sub
xor
aas
sbb
aaa
adc
add
int
mov
cli
and
sbb
out
push
push
and
xchg
add
cwtl
cmpl
xchg
or
mov
pusha
pop
push
mov
xor
push
andl
adc
enter
mov
sub
xchg
add
iret
xchg
xchg
or
in
fstpt
pop
xor
cmp
add
push
push
mov
das
int3
dec
daa
adc
inc
jg
test
adc
test
out
fimull
mov
xchg
dec
dec
inc
pusha
add
arpl
and
rclb
xor
add
push
xchg
inc
mov
pop
cmp
fwait
mov
pop
push
lcall
adc
rcrl
pop
imul
xchg
jns
push
sbb
ficoml
inc
lahf
scas
mov
lds
cwtl
jmp
lods
jge
sub
into
push
sub
arpl
test
sub
in
test
push
addr16
cmp
dec
dec
jg
or
and
sub
sub
xchg
mov
in
xor
push
cltd
xor
pop
repnz
and
ds
adc
mov
sbbl
test
movsl
mov
cmp
jne
dec
push
adc
xchg
add
test
test
pop
test
mov
sbb
into
and
lods
xchg
inc
pop
pop
popa
rcrb
or
mov
jmp
add
ds
push
and
pushf
xchg
aas
out
sbb
xlat
popa
pop
dec
xchg
pop
add
test
subb
jmp
filds
sbb
dec
insb
pop
test
cwtl
pop
imul
inc
cmpsl
inc
mov
and
mov
push
push
sub
mov
adc
mov
mov
aaa
xorb
pop
push
push
scas
sbb
sbb
xchg
icebp
xor
add
cmp
push
fwait
pop
adc
pop
pop
adc
mov
inc
xor
stos
leave
and
xchg
inc
test
push
rorb
cs
pop
test
inc
sbb
inc
push
mov
push
push
push
rsqrtps
push
cltd
mov
mov
lcall
pop
sysret
add
lret
fadd
inc
cs
sub
pop
ss
sub
push
scas
out
push
adc
or
lds
imul
mov
sub
ja
add
rcrl
pusha
sub
aaa
out
es
mov
popf
or
mov
outsl
inc
imul
test
adc
rdmsr
stos
pop
mov
mov
fwait
or
add
add
mov
xchg
gs
out
add
sub
mov
in
orb
and
dec
mov
add
xchg
ret
and
sbb
pop
mov
cmp
les
jl
inc
sahf
pop
xchg
sub
cltd
push
add
sbb
mov
flds
and
sbb
adc
dec
xor
jg
inc
lret
test
out
ficoms
mov
ud1
inc
mov
mov
mov
jo
lea
pop
enter
xchg
sub
stc
push
and
dec
sbb
and
add
inc
aas
ret
inc
imul
test
mov
sbb
loopne
jo
push
fs
inc
out
mov
cmp
xor
je
or
stos
xchg
jnp
push
pop
push
jo
fidivrl
or
pop
sbb
inc
ret
add
lret
mov
adc
mov
fisubrl
sub
sbb
xchg
dec
inc
and
mov
decl
lea
arpl
mov
xor
insl
fcmovu
adc
jae
pop
add
lea
mov
dec
dec
add
or
dec
cmp
push
push
cwtl
sub
lahf
mov
mov
jle
arpl
sub
add
dec
pop
sub
mov
push
add
pushf
adc
xor
pop
or
ljmp
mov
out
lcall
mov
idiv
fdivrs
xchg
add
jae
ficoms
fcmovb
push
sub
xor
xlat
sbb
mov
jp
movsl
adc
stc
inc
or
sub
and
fisttps
mov
fimull
sbb
les
cmp
cmp
es
and
dec
adc
aaa
stos
push
and
xor
inc
cmp
and
aas
xor
cwtl
call
push
fsubl
in
in
sub
aas
or
scas
popf
adc
out
fildll
and
fistps
call
ds
lea
xor
cmp
lret
aad
loope
or
rol
das
out
pushf
cmpsb
inc
push
insl
aas
adc
mov
push
xchg
xor
sbb
inc
push
sbb
out
enter
sub
and
out
cmp
mov
or
das
leave
and
jge
stos
lds
jns
popf
ss
or
mov
movsl
sbb
inc
andl
pop
push
inc
movsl
lods
push
pushf
imull
arpl
rcrb
mov
dec
clc
jg
sbb
cli
das
or
xor
nop
add
pop
xchg
pop
shll
push
sbb
rolb
inc
sbb
or
sub
mov
cmp
mov
cli
int
and
push
xchg
and
les
dec
sbb
push
inc
addb
ret
dec
dec
or
int3
adcl
dec
xor
mov
scas
jg
xor
popf
iret
sub
cs
mov
push
xor
movsl
popf
lret
push
insb
pop
lret
adc
fsubrl
cmp
fsts
add
icebp
cmp
adcl
sahf
or
jmp
xchg
ss
imul
mov
idivl
dec
scas
pop
pop
ficoml
xchg
sub
jns
into
xchg
test
ret
pushf
add
in
sub
sub
cmp
test
push
push
push
lret
test
pop
sbb
jge
pop
movsl
pusha
push
test
cmp
mov
jg
scas
sub
add
and
add
xchg
mov
xchg
sub
add
cmpsb
ss
stos
loop
ret
mov
mov
cmp
add
lahf
aas
mov
inc
push
lea
fldl
add
inc
sub
pop
ljmp
or
insl
and
inc
ret
inc
fs
movsb
mov
mov
ret
lret
sahf
aas
repz
xor
cmp
add
shl
mov
xor
ss
jp
or
and
fimull
cmp
adc
mov
jns
xor
xchg
or
pop
arpl
fsubr
fs
mov
mov
andb
out
jne
cmp
mov
cmp
lcall
add
stos
inc
xor
mov
adc
es
xlat
adc
adc
push
pop
stos
repz
mov
mov
lret
sbb
out
nop
adc
sub
mov
ja
push
test
outsl
fiaddl
sti
jl
test
mov
test
roll
mov
js
aad
imul
lea
lahf
cmpb
cli
pop
jmp
cmp
add
cmp
sub
xchg
sub
sub
adc
lret
mov
xchg
and
xor
push
lea
outsl
pop
pop
sbb
pop
les
add
mov
jle
imul
xlat
cwtl
cs
or
out
add
mov
cmp
mov
jno
dec
xchg
aam
adc
cmc
pop
stc
shll
popf
es
cmpl
repnz
pop
dec
lea
sbb
loopne
jo
mov
mov
mov
add
mov
xor
mov
inc
or
int3
pop
push
cltd
fnstsw
repz
cwtl
sbb
sbb
adc
mov
push
sbb
and
loopne
inc
xor
cmp
add
clts
ret
test
mov
xor
mov
lods
push
mov
xor
pop
pop
adc
adc
in
mov
sbb
lret
xchg
rorb
addr16
pop
or
fisubrl
rcrb
les
int3
mov
inc
pushf
mov
les
inc
or
les
push
loope
out
aas
lahf
lret
mov
xchg
sub
sbb
add
pop
or
push
test
or
pop
and
xchg
push
arpl
sub
dec
out
cmp
stc
lahf
or
or
cmp
push
xor
mov
sbb
push
les
push
shlb
mov
fisttpl
or
mov
mov
xchg
mov
pop
or
adc
xchg
and
in
aaa
adc
xchg
pop
cmpsb
cmp
pop
cmpsl
adc
test
ja
int3
or
jp
xchg
mov
mov
inc
fwait
or
shlb
rclb
jne
addl
lret
mov
int
les
mov
mov
xchg
sub
das
out
nop
or
pop
jge
fcomip
cmp
jb
mov
jp
and
pop
xor
adc
push
mov
sbb
nop
xchg
add
dec
bound
push
daa
sbb
out
push
mov
or
test
or
push
inc
arpl
rsm
leave
loope
sbb
xor
cwtl
es
push
or
adc
ss
sahf
bound
xchg
les
push
xor
call
bswap
loopne
lods
inc
aas
mov
sub
aaa
pusha
rcrb
pop
adc
push
sbb
add
into
fadd
icebp
pop
adc
pusha
push
bnd
pop
test
cmp
jno
push
lods
lds
add
inc
pop
adc
xor
cwtl
cwtl
pop
js
add
mov
roll
aad
xchg
adc
dec
pop
inc
out
mov
ret
pop
test
add
scas
xchg
dec
and
pop
sbb
loop
jns
push
inc
or
in
push
orb
repz
rorb
repz
sbb
add
pop
dec
mov
popf
dec
mov
fisttpll
ret
adc
pop
inc
std
lea
fldl
insl
xchg
mov
pop
rolb
fisubrs
fwait
mov
movsb
jp
mov
inc
sbb
xor
pop
pop
cmp
fiaddl
jl
add
shrb
gs
ret
push
in
rcrb
imul
imul
fnstsw
jecxz
add
xchg
mov
out
adc
mov
shrb
lods
push
xchg
inc
pop
cmp
jns
in
xchg
mov
adc
push
or
add
sub
stc
movsl
inc
loopne
dec
xchg
int
sub
inc
sbb
arpl
mov
jo
fucom
les
bound
shl
sbb
jbe
inc
push
adc
push
notl
imul
xchg
dec
scas
rorb
inc
add
xor
sub
pop
sbb
or
adc
call
lahf
and
sbb
sbb
out
jb
aam
enter
xor
xor
and
add
xchg
mov
add
pop
insb
test
mov
and
mov
pop
mov
mov
test
xchg
xchg
add
jns
addb
xlat
lods
jns
dec
or
dec
xor
pop
out
sbb
sbb
negl
aaa
adc
mov
out
pusha
scas
pop
in
adc
adc
xchg
mov
scas
lods
cltd
xor
shrb
sti
inc
add
xor
jge
dec
pop
dec
imul
add
dec
loop
or
add
test
lcall
xor
inc
sub
lea
or
mov
ds
loopne
fwait
out
or
pop
add
and
mov
movsl
lock
mov
jno
push
sub
adc
stc
fldl
loope
cmpsb
add
rolb
movsl
sbb
repnz
cmp
sbb
and
adc
scas
xchg
cmp
leave
dec
iret
in
outsl
stos
inc
fldt
fs
inc
iret
fwait
ja
int
sub
sbb
sub
xchg
cli
sbb
jno
or
xor
mov
pop
lods
pop
mov
stos
mov
fsubr
add
xchg
xchg
xlat
pop
sbb
test
ja
sbb
cmp
daa
jo
cli
inc
push
mov
jg
mov
jns
ss
scas
cmp
mov
dec
aad
xor
adc
and
popf
lds
icebp
loop
adc
jno
xchg
outsl
add
xor
jae
or
sbb
fldl
jo
addb
sbb
and
shll
cmp
jno
add
rolb
cld
adc
mov
addl
subl
adc
insb
cmpsb
int
adc
add
jle
cwtl
mov
pop
xor
jo
mov
adc
xlat
ss
inc
xor
std
push
add
mov
cmp
push
adc
addr16
fistpl
aas
sub
movsb
lods
daa
push
loopne
adc
push
add
ret
sub
stos
inc
mov
sub
iret
jecxz
lds
mov
andl
cmp
push
fdivrs
jbe
xchg
or
pop
ss
jno
stos
test
test
push
sbbb
ret
mov
mov
aam
pop
lods
insl
insb
cltd
adc
sahf
mov
packuswb
jo
out
push
sbb
xchg
lcall
pop
dec
xor
sbb
lret
daa
adc
cwtl
pushf
pop
inc
inc
lods
shlb
push
add
lods
jno
add
addb
add
xor
xor
sbb
clc
mov
cwtl
or
push
leave
mov
or
pusha
inc
mov
mov
mov
adc
cwtl
sbb
xchg
aaa
sub
fs
popf
mov
or
inc
mov
and
pop
outsb
pop
or
or
loopne
add
pop
fstps
pop
adc
dec
jle
pusha
jmp
cmp
xchg
cli
inc
inc
jmp
orl
lods
addl
jae
in
adcl
pop
pop
mov
lcall
jae
mov
push
push
iret
pop
pop
sub
xchg
daa
xchg
sbb
push
pop
jne
adcb
iret
jo
dec
ss
mov
mov
inc
addl
cmp
test
out
dec
add
xchg
dec
stc
pop
daa
sbb
push
test
leave
add
aas
xor
ret
pop
pop
arpl
pop
or
xor
stos
out
fs
push
lahf
out
dec
bound
movsb
sbb
push
mov
sbb
or
xchg
or
in
sbb
andb
rorl
cs
leave
xor
xchg
mov
adc
insl
into
mov
push
movsl
jl
ficompl
jp
and
push
data16
lahf
mov
or
mov
ljmp
jg
or
sub
sub
movzwl
sbb
sbb
fildl
sub
push
sbb
test
inc
test
lock
mov
xchg
inc
mov
fsub
cmp
adc
mov
mov
adc
mov
pusha
or
adc
xor
js
test
out
cld
sub
sbb
ret
mov
call
decb
jne
int3
push
aaa
push
subb
or
aad
test
lea
out
add
xor
xlat
mov
cld
stos
mov
inc
jo
lahf
inc
mov
adc
or
outsb
inc
aas
xor
out
lret
or
or
lea
int3
push
fimuls
jne
add
mov
lret
inc
out
orl
lret
sbbb
fneni(8087
loope
fisttpll
and
out
jbe
add
ja
add
dec
inc
push
gs
sub
lods
and
pop
xchg
add
adc
and
test
add
xchg
and
mov
xor
cmp
xchg
xor
arpl
xor
fildl
lea
inc
movl
adc
adcl
int
mov
xchg
and
sub
xor
call
dec
adc
xor
fwait
adc
lcall
in
xchg
adc
rolb
push
fimuls
dec
pop
fdivl
cmpsb
stos
fdivrs
jnp
scas
pop
scas
mov
outsl
xlat
sbb
push
ficoml
jmp
insl
cmp
addl
add
lock
into
pop
mov
mov
adc
ds
push
scas
mov
xor
in
pop
sbb
adc
push
dec
ret
pop
out
lds
inc
movsb
push
les
rcll
ds
aas
leave
sub
adc
addr16
mov
fiadds
fisttpll
dec
sahf
shl
adc
xchg
decl
or
push
cmp
lods
dec
sarl
pop
sub
add
out
ljmp
dec
mov
pushf
loopne
sbb
lret
ja
xor
ficompl
inc
pop
or
dec
xchg
fisubrl
rcrl
xchg
inc
xchg
pop
xor
je
xor
cwtl
outsb
xor
push
dec
cmc
inc
mov
std
mov
cli
inc
adc
test
mov
mov
xor
stos
loope
mov
sbb
call
loope
shrl
add
cltd
popf
sub
mov
dec
adc
notb
xor
sbb
cltd
ja
and
or
ss
push
into
add
pop
mov
inc
or
addr16
push
cmpsl
mov
push
testb
inc
out
jb
or
inc
add
andb
test
jg
pop
inc
inc
stc
mov
ret
pop
pop
xchg
lret
sub
or
lods
fcoml
aam
cmovge
scas
add
lret
cmp
sbb
mov
jno
fwait
arpl
xchg
xchg
test
mov
mov
add
imul
int3
adc
mov
imul
jbe
dec
sti
mov
pop
sub
cmp
pop
adc
pop
sahf
and
inc
into
int
push
xor
dec
outsl
icebp
sbb
test
stc
and
jnp
sub
daa
sub
add
test
push
das
out
sbb
fwait
scas
cwtl
adc
push
add
pop
mov
in
inc
arpl
add
sub
or
orl
adc
sub
and
lods
enter
push
jo
lods
std
push
cltd
push
imul
xchg
out
lret
and
adc
jg
mov
cmp
pop
imul
dec
adc
test
addr16
pop
ss
sub
dec
adc
sbb
pop
popa
repz
xchg
ljmp
sub
cmp
lds
das
cwtl
or
pop
push
adc
push
inc
cmp
xor
add
xchg
jne
les
dec
adc
pop
push
mov
shrl
push
jl
jp
add
repnz
inc
and
fmull
out
test
or
push
or
fwait
mov
leave
add
push
pushf
and
sahf
in
xor
cmp
shrl
mov
inc
push
or
cwtl
pop
pop
sbbl
and
movsl
xchg
lret
scas
mov
mov
sbb
jmp
lret
jle
or
mov
mov
xchg
push
out
sti
add
mov
sub
test
push
add
inc
xchg
add
or
add
lods
popf
adc
pop
or
add
pop
xchg
aaa
and
aad
sbb
lahf
push
mov
adcb
xchg
add
test
jle
dec
insb
cmp
or
push
jbe
out
popa
xchg
inc
jmp
fcmovb
rol
out
push
aaa
test
popf
xor
enter
jp
stos
dec
test
adc
repz
sbb
pusha
jnp
repnz
popf
xor
inc
dec
js
test
mov
or
sub
pop
add
sub
add
hlt
test
xchg
movsl
ficomps
or
aas
cmp
push
addl
pop
fstpl
jo
dec
out
scas
nop
ficoml
cwtl
push
aas
pmaxsw
inc
adc
xchg
xor
int
push
mov
mov
push
xchg
mov
ret
dec
pop
mov
mov
xchg
sarl
pop
in
add
jbe
dec
test
test
mov
ss
roll
cli
leave
ss
movb
xchg
imul
mov
and
xlat
push
dec
push
mov
lret
adc
sbb
add
or
sub
imul
sarl
inc
hlt
repnz
cmpsb
pop
xchg
pushf
inc
sbb
scas
jo
lahf
fcompl
cmp
mov
add
cmc
popf
push
fs
inc
inc
insl
sahf
test
pusha
adc
pop
pop
mov
fld
mov
inc
push
xorb
out
and
mov
cltd
stos
inc
repz
subb
leave
mov
lret
and
fstpl
loopne
sbb
sbb
pop
push
imul
call
out
push
mov
outsl
addl
fsubrl
sbb
push
rolb
adc
sub
adc
and
arpl
xchg
inc
adc
or
push
sub
and
dec
pop
mov
inc
jmp
loopne
sbb
mov
mov
dec
stos
sbb
add
xchg
sub
dec
scas
mov
mov
inc
and
movsb
out
scas
pop
jl
popf
cmp
out
inc
cmp
xchg
jne
inc
inc
sub
push
and
dec
inc
int3
and
inc
lods
aaa
xlat
stos
pop
jb
xchg
aam
jmp
in
ljmp
add
push
ret
sbb
arpl
or
out
cmp
dec
add
inc
out
insb
pop
pop
popa
and
rol
inc
mov
dec
mov
sub
xor
incl
add
pop
sbb
push
aaa
xchg
pop
repz
push
imul
jl
das
pop
mov
popf
test
mov
xor
add
xchg
aaa
mov
scas
pop
cltd
cmpsb
imul
sbb
fmull
in
sub
outsb
jns
mov
arpl
mov
mov
sbb
xchg
cmp
ret
aad
lcall
and
nop
lods
pushw
push
xchg
sub
push
and
stos
outsl
sub
ret
push
scas
mov
sbb
pop
fisubrl
or
faddl
scas
sarb
scas
out
cmc
add
out
iret
xchg
loop
lea
inc
mov
dec
ror
and
mov
in
les
movsb
loopne
and
cwtl
outsb
adc
cmp
pop
dec
adc
lods
cmpsb
and
push
jno
aad
scas
mov
cmp
add
mov
adc
int3
fsubs
sbb
loope
push
sbbl
inc
jg
mov
xor
push
sbb
push
icebp
mov
jg
aaa
adc
les
arpl
adc
add
dec
xor
iret
xchg
mov
push
call
add
add
bound
insl
shl
mov
int
test
fmuls
pop
mov
in
or
pop
add
pop
push
xchg
inc
or
mov
or
sub
ja
mov
outsb
or
sbbb
sbb
adc
mov
sub
add
nop
test
outsl
aaa
pop
leave
cmc
lahf
and
ja
xchg
sbb
mov
inc
sbb
mov
sbb
xlat
push
sbb
mov
vsqrtps
ror
pop
mov
cld
sub
clc
inc
cld
push
movsb
ja
xchg
sbbb
mov
cmp
add
repz
movsb
test
sub
adc
xor
jne
jmp
sbb
push
jbe
adc
adc
in
fwait
lea
push
lahf
mov
clc
stos
mov
add
pop
inc
icebp
sub
or
cmp
cmp
adc
mov
popf
add
adc
sub
jne
fisubl
push
fstps
inc
sbb
lock
leave
daa
push
or
daa
add
out
cmp
roll
mov
sbb
aaa
in
push
push
adc
repz
sbbl
mov
cmpsb
and
xlat
xchg
popa
enter
mov
out
jo
adc
sbb
das
fwait
cmp
enter
mov
sub
inc
or
push
cs
mov
xchg
or
or
int
pop
add
adcb
es
sbb
sbb
int3
daa
ret
inc
cltd
jno
lea
flds
push
loop
xor
sub
pop
lret
insl
pop
lea
insl
fmulp
sbb
xchg
pusha
cmp
adc
cld
sub
adc
fnstcw
sub
bound
add
fisttpll
ficompl
xchg
popf
loop
add
daa
xchg
stc
dec
inc
mov
sbb
stos
aam
xor
dec
lods
shll
roll
fbld
mov
xor
inc
into
mov
lea
push
scas
xchg
mov
adc
or
shl
xchg
into
pop
sbb
lock
rorl
lock
xchg
or
mov
or
mov
and
mov
lods
rcr
xchg
add
shl
lcall
adc
cltd
fidivl
sbb
pop
sub
inc
mov
orb
cmp
xchg
mov
nop
fcom
jo
xor
aaa
dec
scas
mov
fwait
mov
nop
jge
add
sbb
mov
add
call
out
sbb
cs
push
dec
or
mov
add
cmc
cs
inc
sub
aam
inc
and
call
pop
dec
mov
and
lds
xchg
test
and
cli
xchg
ret
inc
push
or
test
and
mov
aaa
imul
pop
movsb
jae
pop
mov
cmp
jmp
sbb
sti
jae
pop
fwait
insl
and
inc
push
inc
cmp
or
sbb
cwtl
out
cwtl
and
or
xchg
cmp
jns
mov
add
jl
sub
pop
adc
out
mov
sub
inc
int
into
lea
enter
lods
jno
lea
enter
loop
imul
loop,pn
outsb
pop
scas
adc
add
js
cmp
and
mov
data16
dec
push
addr16
sub
rolb
pop
outsb
icebp
aas
push
sbbb
mov
adc
scas
inc
stc
popa
fcompl
or
or
xchg
adc
iret
cmp
add
fs
sbb
pop
add
aam
push
xor
fmulp
inc
sbb
les
or
mov
dec
mov
ficompl
and
inc
dec
mov
mov
gs
sub
pop
sub
pop
mov
into
mov
sub
mov
inc
idivb
push
aam
add
lea
inc
jns
xchg
add
aas
dec
mov
arpl
dec
mov
and
test
aam
push
out
or
sbb
insb
into
or
aaa
xlat
push
fldl
xchg
pop
dec
or
bound
or
aaa
cli
push
fisttpll
or
bound
inc
xorl
imul
lahf
inc
sbb
pop
aas
pop
mov
mov
into
adc
xchg
and
les
stc
xchg
push
pop
rolb
dec
je
ret
test
dec
faddl
inc
cmpsl
add
xor
dec
cmpsl
xchg
mov
xchg
push
or
sbb
mov
fidivrs
xor
sub
xchg
int3
into
push
mov
add
adc
xchg
pop
test
leave
adc
dec
dec
cmpsl
dec
pop
push
push
outsb
and
add
or
fs
sbb
push
or
sub
sbb
or
xchg
fldl
or
call
insl
inc
push
aam
and
dec
aam
fwait
jo
mov
xchg
sub
mov
sbb
sahf
lds
rcrl
xor
adc
addb
pop
inc
sub
in
bound
mov
dec
or
or
cmp
pop
out
jnp
sbb
xchg
cli
cmp
or
sbb
adc
xchg
mov
idivl
adc
fisttpl
mov
mov
mov
cmp
sub
adc
cmpb
cmp
adc
push
insl
mov
or
dec
aad
mov
fcmovu
and
mov
sub
pop
or
into
xchg
je
notb
push
mov
push
add
mov
add
or
ljmp
mov
mov
stos
lea
jge
sub
pop
jecxz
inc
add
pop
sahf
push
pop
mov
scas
sub
xchg
jmp
inc
out
sarl
bound
jb
mov
es
icebp
sub
shlb
xor
rcl
movsl
sub
xchg
sbb
push
inc
add
int
mov
icebp
gs
push
or
out
sbb
out
jo
mov
add
xchg
add
sub
cld
test
mov
jecxz
xor
cmp
sbb
scas
js
insl
add
and
dec
mov
jp
pop
mov
hlt
pop
add
push
pop
loope
ja
inc
movntps
lock
add
addb
xor
cmp
add
aas
sysexit
inc
jne
pop
adc
jno,pn
sti
orl
jnp
sub
add
pusha
push
mov
outsl
adc
stos
inc
pusha
push
cmc
aaa
stos
nop
inc
xor
pop
xor
fidivrl
mov
dec
cli
mov
mov
aas
push
imull
int3
jbe
shrl
es
mov
xchg
popf
fimuls
aas
xchg
inc
loop
add
or
mov
lods
mov
add
test
ja
sahf
jno
jmp
dec
mov
or
sbb
pop
daa
jb
iret
pop
dec
out
sbbb
dec
dec
sub
push
fucom
pop
jno
push
scas
inc
loop
ja
cli
fists
cld
add
jo
mov
adc
fldt
dec
fdivl
jo
add
dec
pop
pop
test
inc
cltd
add
mov
ja
rolb
jge
or
push
add
adc
test
out
adc
sbb
sbb
and
xchg
mov
mov
mov
inc
in
and
movsb
cmpsl
jp
test
pop
shll
lret
add
pop
subl
iret
inc
sbb
and
sbb
pop
rclb
pop
pop
and
push
xchg
add
sbb
fnstsw
add
xchg
mov
stos
mov
fstps
fcoms
out
orl
add
jbe
ret
lods
mov
test
popa
adc
imul
sbb
insb
inc
adc
or
add
sbb
mov
js
push
push
sub
adc
es
sbb
jae
mov
loop
mov
repnz
inc
fcompl
fwait
fs
idivl
testl
add
leave
repnz
mov
or
std
clc
adc
lds
insb
in
mov
dec
movl
into
mov
into
add
inc
imul
insl
out
pop
jbe
sbb
rol
pop
dec
sbb
inc
inc
test
pop
add
fsubrs
xchg
es
inc
lahf
mov
hlt
dec
jne
shlb
adc
aaa
adc
mov
sbb
xchg
dec
cmpsl
movl
push
pop
pop
dec
imul
mov
mov
shl
stc
icebp
cmp
shlb
dec
push
mov
movsb
push
and
pop
int
inc
xor
sbb
or
and
out
mov
adc
in
sub
or
xchg
insb
xchg
iret
or
sbb
test
outsb
leave
idivl
cmpsl
cmc
rorb
dec
js
aaa
xchg
and
ja
or
cwtl
sub
push
push
pop
in
push
sub
pop
pop
insb
sub
cltd
xor
movsb
push
inc
and
dec
mov
sub
adc
and
or
stos
fidivrs
aaa
cli
jl
jne
xchg
not
adc
imul
lcall
loopne
or
mov
push
fsubrs
xchg
adc
pop
sub
pop
inc
xchg
add
sahf
sub
pop
ds
and
sahf
inc
mov
fdivs
fisubl
daa
addr16
pop
cwtl
clc
mov
mov
jl
mov
inc
or
mov
pop
lds
add
cmpsl
or
popa
inc
jns
mov
in
faddl
and
or
sub
jnp
sub
adc
push
pop
push
cwtl
mov
and
mov
lret
loopne
rcr
pop
mov
pop
pop
adc
pushf
push
aas
add
mov
in
mull
sub
dec
fbstp
imul
jne
fbstp
aaa
sarl
and
notl
xchg
sub
test
mov
ficomps
jae
pop
jmp
push
repnz
mov
movsl
rcll
xchg
out
add
pop
lock
out
xchg
jb
sub
add
jne
dec
lahf
icebp
lret
fs
xor
or
adc
pop
add
mov
ds
nop
inc
or
xor
aad
fidivrl
sub
fldt
ffreep
aaa
sub
bound
sti
or
insb
or
mov
cli
movsl
test
mov
adc
and
test
clc
stos
lock
inc
iret
pop
and
jns
adc
mov
adc
subl
jmp
leave
sbb
iret
mov
xor
sub
add
pop
and
pop
pop
daa
lret
sub
xor
sub
lds
pop
xor
dec
add
test
dec
sbb
and
or
cmp
xor
sbb
pop
sbb
push
inc
and
imul
or
push
push
xchg
fwait
xchg
fnstenv
push
das
adc
or
sub
pusha
lea
sbb
scas
pop
mov
movsb
xor
and
adc
pop
cmp
movsb
and
lret
adc
cmp
push
inc
mov
inc
cmp
xor
aam
inc
xor
or
lret
and
xchg
sbb
push
out
fistpl
push
insb
mov
mov
xchg
inc
rcll
adc
sbb
sbb
xchg
inc
int
aam
push
cltd
fildl
imul
push
mul
inc
mov
call
add
int3
sbb
jns
lods
ffree
pop
push
stc
pusha
movsl
xlat
leave
loopne
imul
loope
ror
test
test
mov
test
dec
fimull
add
scas
xor
add
push
cmp
dec
pop
pop
out
or
shrl
insl
add
xor
cwtl
out
cmpsl
sbbl
das
cwtl
scas
inc
sub
out
lret
xchg
adc
add
xor
mov
xchg
push
mov
leave
andb
push
inc
cmc
out
test
lret
cmp
cltd
push
fs
xchg
inc
addl
or
dec
adc
test
sub
or
mov
pop
clc
test
xlat
add
inc
sbb
sbb
xor
outsb
xchg
mov
dec
outsb
pushf
xchg
outsb
fdivl
sahf
add
popf
aad
mov
fs
dec
faddl
pop
imul
popw
frstor
cmp
sbb
ds
mov
data16
add
sub
es
flds
xor
xor
push
add
addr16
add
pop
call
push
dec
sub
push
adc
inc
mov
push
push
repnz
xchg
loope
stos
test
adc
or
leave
xchg
stc
cmp
testb
xlat
das
xor
movsb
inc
call
push
jno
rolb
test
mov
lock
popl
aas
scas
jl
lret
mov
jmp
pushf
xchg
cmpsb
std
add
add
ficomps
push
test
daa
adc
and
cmp
push
fimull
arpl
out
jge
outsl
testl
cmp
or
cmp
or
repz
je
mov
add
and
add
dec
bound
gs
xchg
mov
in
pop
scas
movb
iret
test
in
sbb
outsb
mov
outsb
mov
or
sub
shlb
stos
sbb
mov
pop
mov
cmpsl
sbb
push
jnp
or
and
push
aad
jp
mov
sbb
hlt
movsb
adc
add
sub
pop
cmp
cmc
out
cmp
into
push
dec
sti
out
lds
rolb
pop
inc
repz
aaa
or
inc
addl
or
or
insb
ja
fisttpll
adcb
imul
add
aaa
add
sub
mov
and
rclb
sbb
addr16
nop
cmp
pop
pop
imul
adc
and
xchg
je
imul
mov
out
pop
or
sub
push
or
add
addr16
shlb
push
pushf
lea
fucomip
sbb
sub
mov
mov
push
and
lock
ror
push
pop
push
imul
xchg
mov
mov
loopne
mov
inc
xchg
or
imull
or
out
popl
dec
fstps
imul
pop
cwtl
cwtl
xor
das
pop
leave
imulb
adc
movb
adc
fisttps
call
lods
in
push
sbb
and
jmp
add
test
xchg
cltd
leave
push
push
out
aam
xor
arpl
and
loope
out
mov
in
dec
ljmp
mov
pop
jg
mov
negl
xchg
sbb
shll
pop
cmp
xchg
xchg
dec
inc
ret
mov
and
or
cmp
movsb
ret
pop
pusha
mov
push
mov
stos
adc
adc
cmp
cmp
lret
sub
sub
dec
call
sub
testl
sbb
adc
test
add
in
sub
jae
rorb
cmpsl
test
cmp
fiaddl
or
sub
arpl
push
fcomip
sub
mov
dec
daa
sbb
mov
push
sub
pop
cmp
fstl
jecxz
xlat
add
sub
and
or
nop
in
jp
sub
xor
push
push
hlt
xchg
adc
push
es
adc
sbb
add
aaa
and
pop
pop
inc
outsb
sbb
rolb
ja
mov
xlat
xchg
sarb
lock
xchg
aas
ja
and
aas
div
test
fcomps
jg
out
idivb
cwtl
mov
mov
sti
cmp
and
push
sub
into
xchg
mov
fistpl
inc
scas
mov
stc
mov
jae
enter
data16
ja
je
jmp
jns
sbb
enter
xchg
fisttpl
popf
test
jne
fisttpll
loopne
mov
addr16
xchg
pop
dec
pop
daa
sbb
sbb
add
gs
dec
rcr
sbb
int
lds
movsl
into
rclb
dec
pop
int3
in
loop
mov
jmp
add
repnz
repnz
add
aam
sbb
movsb
inc
cmp
and
imul
and
lahf
add
xor
dec
cmpsl
push
adcl
pop
and
insl
mov
and
mov
fstp
inc
int3
xchg
sbb
mov
push
sub
add
pop
in
cmp
rcrl
cmp
cltd
and
rclb
aam
inc
sbb
push
or
xlat
or
lds
pop
xchg
cld
mov
cmp
and
lods
mov
cld
movaps
cltd
sub
adc
sbb
ds
adc
add
mov
mov
and
xchg
adc
ret
pop
fcoms
jge
push
lock
sub
fistpl
enter
les
into
or
add
test
push
xchg
adc
negl
sbbl
push
add
or
jns
add
fisubrl
int3
jge
pop
dec
mov
mov
out
stos
int
into
add
sub
push
push
sahf
push
xor
sbb
inc
mov
mov
mov
pop
xchg
xor
mul
pop
scas
add
pop
push
cs
sbb
push
sbbb
sub
je
adc
les
inc
outsl
push
push
adc
or
das
push
bound
jl
push
scas
fs
shlb
sqrtps
push
je
mov
push
sbb
or
dec
add
ret
addr16
add
add
pop
xlat
push
adc
ret
cmpsb
repz
or
aas
sub
add
dec
mov
sbb
sub
es
cmpl
add
mov
mov
imul
test
cmp
cmp
adc
popf
shll
push
je
es
sbbl
pop
xchg
pop
jne
xchg
cld
movsl
and
jnp
out
clc
cld
out
add
scas
popf
push
stos
shrl
les
add
and
loopne
and
xor
out
jl
and
and
jne
dec
xlat
loope
in
sbb
or
loopne
sub
cwtl
sbb
push
mov
mov
xchg
sarb
pop
sbb
pusha
and
add
add
lahf
les
fidivl
imul
hlt
pop
mov
jno
cmpsl
ss
scas
mov
inc
ficoms
mov
xor
in
std
dec
dec
adc
int3
out
push
incl
leave
cmp
cltd
inc
inc
sub
push
addb
sbb
inc
out
push
notl
sbbb
adc
pop
cwtl
rclb
and
ds
clc
xchg
pop
push
shrb
and
shll
lods
xor
adc
js
sub
cmpsl
push
cwtl
push
sbb
dec
in
fidivl
sahf
mov
test
cwtl
out
mov
inc
repnz
in
dec
push
lods
cmp
lds
fbstp
ret
xorb
adc
or
addr16
push
mov
lea
inc
and
sub
imul
push
fcoms
or
fisttps
fstp
xchg
mov
mov
roll
inc
xchg
push
bound
xchg
daa
js
fisttpll
xchg
daa
faddl
mov
insl
adc
jae
or
push
inc
lcall
in
aas
shlb
pop
and
mov
rclb
test
pushf
mov
mov
iret
xchg
movsb
jb
es
inc
sti
mov
mov
lahf
dec
imul
sbb
sbb
xchg
sbb
jns
stc
out
xor
aam
dec
jb
loopne
cmpsl
pop
lahf
icebp
cmp
mov
cmp
mov
sahf
cmp
sbb
fsubs
hlt
pop
mov
xchg
int3
lods
pop
int3
adc
mov
and
xor
dec
push
inc
sbb
dec
pop
out
and
and
lock
inc
add
and
fs
call
addr16
pop
add
subps
test
es
int
or
xor
pop
lods
vpextrw
clc
in
mov
cli
fwait
push
fs
fsubr
cmpsb
pop
mov
pop
loope
inc
mov
sbb
int3
data16
ss
stos
cwtl
push
imul
imulb
hlt
push
push
mov
dec
out
and
inc
pop
pop
cwtl
or
jg
test
push
inc
dec
mov
or
sbb
fadds
jne
enter
inc
xor
xchg
mov
push
addr16
lea
mov
hlt
out
es
cmp
cmp
add
subb
push
push
enter
shl
pop
cmp
xchg
push
bound
add
xor
add
xchg
aaa
mov
adc
sahf
mov
sarl
ja
or
mov
dec
ss
add
sub
inc
push
inc
mov
inc
fistps
fbld
scas
lea
and
add
sbb
add
ss
adc
or
scas
sub
testl
xchg
mov
cmp
mov
dec
lds
push
xchg
add
xchg
sbb
xchg
lahf
adc
push
adc
jle
adc
bound
cmc
cmc
mov
mov
adc
lret
xor
sbb
je
into
sbb
sbb
mov
pop
inc
mov
lret
sti
pop
adc
pop
pop
xchg
or
subl
add
jmp
loop
aaa
pop
cmp
aas
or
inc
es
sbb
cmp
shrl
movb
js
lods
lock
xchg
sub
lahf
and
int3
mov
ljmp
jo
add
cld
lds
cmp
dec
sub
fldl
ljmp
test
call
push
adc
xchg
mov
adc
aas
call
enter
out
fwait
and
dec
adc
xchg
les
xchg
xor
notl
or
cmp
pop
lcall
xor
cmp
xchg
scas
es
or
sub
cwtl
add
dec
pop
int
inc
dec
rcrl
into
pop
movsl
or
or
sub
dec
pop
adc
jae
add
dec
adc
and
ja
pop
scas
jae
jmp
xchg
pushf
das
xor
and
inc
and
mov
xor
lods
xchg
push
shl
ret
ds
pop
adc
jnp
rclb
aaa
les
jns
or
pushf
inc
inc
dec
push
sbb
sub
jmp
jl
call
loope
adc
fsubl
rcll
fs
ds
lods
mov
push
bswap
sbb
and
inc
sub
stos
out
mov
push
movsb
xchg
lds
mov
inc
xchg
push
dec
movl
lcall
es
add
fstp
dec
xchg
jmp
add
repnz
mov
les
sub
pop
sahf
frstor
or
or
inc
jp
xorl
dec
testb
fidivs
sbb
cwtl
fcom
xor
inc
add
fdivs
add
jmp
aam
jmp
push
adc
lods
adc
lret
or
addr16
adc
sub
sbb
and
push
or
mov
lock
stc
xchg
sbb
imul
mov
out
jmp
dec
xchg
test
dec
repz
incl
sahf
popf
sbb
dec
xor
lock
lret
push
mov
or
pop
pop
dec
fcompl
cmpl
adc
push
gs
mov
sub
pop
lret
stos
andl
scas
lods
push
sbb
sahf
test
inc
dec
pop
sbb
lods
clc
xor
mov
mov
mov
scas
sbb
mov
pop
scas
mov
lret
sbb
mov
wrmsr
cmpsb
xchg
cwtl
lret
clc
or
sbb
or
hlt
cltd
or
aaa
add
add
pusha
popa
clc
dec
jge
dec
push
jbe
lock
sbb
lahf
push
test
sti
stos
ficoms
lcall
push
mov
sahf
fdivrl
cmp
pop
in
test
add
fwait
sbb
cmpsl
xor
sbb
out
adc
shlb
out
sbb
xor
pop
ret
cwtl
cltd
sahf
nop
xor
mov
pop
and
or
inc
or
clc
jne
xchg
sub
cmp
mov
cltd
add
xchg
add
cs
and
stos
out
xchg
adc
and
inc
test
inc
mov
into
stc
dec
push
pop
stc
ljmp
fld
pop
pop
pop
mov
pop
xchg
mov
mov
aas
lods
and
xchg
adc
sub
adc
sub
lea
adc
pop
sub
adc
cmp
mov
inc
pop
and
inc
push
xchg
fidivrl
push
call
mov
leave
mov
test
shl
sbb
lds
leave
sbb
pop
xlat
sbb
push
insl
sbb
neg
fimull
inc
lret
sbb
lods
mov
inc
xor
dec
and
fucomp
insl
push
xchg
xchg
lret
fnsave
xor
test
xchg
lahf
and
dec
shl
iret
adc
sub
pop
mov
sbb
pop
jge
jge
arpl
sahf
mov
ljmp
aaa
xchg
popf
pusha
mov
or
sbbb
sbb
jb
add
add
jmp
adc
sub
sbb
pop
shlb
lret
and
insl
sbb
scas
inc
test
stos
adc
sub
loopne
pop
rcrb
ret
cmovge
inc
int
fmul
ss
lods
or
xor
sbb
jo
out
addb
mov
ret
jae
mov
adc
jae
inc
sbb
rorl
ret
mov
lods
lahf
or
aam
sub
or
insl
sbb
sub
mov
test
xor
xor
pop
loopne
ljmp
and
cmpl
mov
xchg
sub
rcll
mov
movsl
fdivs
inc
lret
mov
sbb
dec
adc
les
mov
lds
and
sbbb
adc
nop
jae
arpl
outsl
mov
rcr
lea
int
orl
ret
inc
xchg
test
mov
or
cmp
sub
mov
cli
add
and
insb
and
negb
ds
les
pop
push
pop
test
loope
iret
sbb
sub
daa
or
xchg
sbb
push
enter
fsubrl
call
in
imul
inc
or
or
jo
jp
adc
out
dec
push
in
add
inc
adc
pop
daa
testb
jae
push
test
aas
or
ret
jmp
sub
xchg
cltd
es
pusha
push
jmp
sbb
sub
mov
insl
test
mov
pop
bswap
sqrtps
and
push
mov
dec
adcl
xor
lcall
inc
push
movsl
es
test
arpl
repz
add
sbbb
pop
inc
sbb
xchg
pop
pusha
clc
add
lea
sti
loope
inc
add
cmp
fidivrl
xchg
mov
or
repz
test
inc
data16
fwait
pusha
fldt
pop
gs
xchg
dec
add
push
loop
lahf
dec
push
inc
pop
fadd
dec
jbe
daa
test
sub
int
les
imul
inc
add
lods
vmovsldup
in
loop
dec
test
pop
fwait
jmp
or
daa
mov
jle
ljmp
ss
xor
imul
test
ror
mov
cmp
mov
sbb
cmp
das
xchg
xor
sub
fmuls
sub
out
nop
sbb
faddl
push
cmp
daa
addr16
pop
addl
out
mov
xor
sub
cmpl
lds
jno
or
in
xor
aaa
push
xchg
lret
sub
aaa
xor
fldl
dec
or
push
mov
inc
daa
mov
fs
loope
sbb
or
stos
inc
sbb
loopne
test
into
push
stos
aam
inc
and
addr16
inc
inc
in
daa
leave
or
dec
adc
out
xchg
dec
popf
adc
test
ss
xor
sub
add
or
add
int
push
add
jmp
inc
aas
adc
je
add
and
dec
lods
lea
jne
std
lock
sbb
inc
xor
ss
inc
pop
adc
bound
fbld
daa
test
xchg
adc
bound
mov
xchg
ds
rcl
mov
dec
dec
sti
pop
lods
les
sete
repnz
lea
xchg
out
sahf
and
sbb
loop
inc
sub
shll
push
inc
hlt
in
xchg
stos
cmpsl
js
gs
nop
jne
scas
sbb
xchg
mov
stc
xchg
stc
add
sarb
inc
mov
adc
in
sub
sub
push
jle
jl
jmp
inc
adc
arpl
sbb
mov
pop
push
sbb
popa
scas
sbb
pop
sub
adc
lcall
fisttps
xchg
or
pop
pop
pop
ficompl
fcmove
add
shrb
xor
jecxz
test
enter
inc
adc
xchg
xor
dec
arpl
pusha
jnp
mov
pusha
pop
jl
mov
addb
mov
or
sbb
add
fistpll
sbb
adc
push
sahf
add
inc
fbstp
pop
sbb
push
xchg
cs
mov
stc
sbb
scas
clc
test
push
sbb
pop
add
adc
inc
or
sub
les
adc
adc
and
lcall
and
mov
inc
xlat
sub
cmp
mov
lods
push
cmp
push
xchg
sub
sbb
xchg
add
adc
frstor
pop
ficoml
mov
pop
jae
int
leave
xchg
push
dec
xchg
push
or
out
lret
fmull
repz
addr16
push
push
add
mov
aam
mov
sub
cmc
jecxz
sub
add
aaa
mov
inc
jne
push
cli
adc
inc
xchg
mov
mov
mov
pusha
imul
add
pushf
pop
xor
mov
daa
test
sbb
xlat
inc
sbb
adc
aaa
mov
pop
out
lcall
addl
iret
or
insb
or
sbb
sbbl
popf
lds
adc
fldenv
mov
out
rorb
hlt
cmc
jg
dec
mov
test
lret
mov
scas
or
in
out
dec
cmp
sbb
sbb
pop
insb
sub
aaa
aam
es
jg
mov
jp
sub
mov
leave
aaa
push
imul
inc
enter
fisubl
loopne
add
sbb
lds
sub
lods
cmp
cvtpi2ps
rcrl
cmpb
imul
das
sbb
inc
jp
test
cltd
push
sahf
mov
inc
lods
lea
out
enter
inc
mov
pop
sbb
xor
and
push
xor
pop
pop
repnz
outsb
and
fistps
orb
or
inc
jns
or
insl
and
mov
fs
or
pop
xchg
and
lea
xor
insl
add
mov
xchg
or
adc
push
xchg
divb
push
push
pop
das
adc
xor
add
adc
les
push
xchg
repz
or
xchg
cmp
adc
xor
cmp
aam
fsubl
test
xchg
jb
adc
xchg
or
jo
sbb
sarl
or
mov
push
sub
fisubl
mov
push
lock
push
pop
cli
xchg
xor
leave
jecxz
addr16
addb
sub
test
xorl
pop
lret
xchg
sti
out
pop
push
sbb
jle
inc
loopne
cmp
pop
js
nop
stos
lret
push
push
test
adc
mov
or
sbb
test
test
push
insb
lret
pop
orb
jge
test
sub
ficoml
push
mov
fwait
int3
push
mulb
rol
push
sbb
int3
inc
lea
cmpsb
sbb
adc
mov
pushf
and
ret
sub
cmp
fadds
pusha
sbb
das
int
sbb
cmp
je
dec
sbb
dec
cmp
stc
adc
scas
xor
push
sahf
in
add
outsb
inc
adc
or
jp
fwait
test
mov
cmovge
inc
pusha
push
xor
xor
dec
lea
int
sub
ror
and
sbb
pop
in
add
mov
or
in
jo
adc
mov
movsl
mov
sub
pop
pop
loopne
repz
lods
mov
lea
mov
add
nop
ss
push
dec
inc
ret
pop
stos
les
out
dec
mov
aad
hlt
add
jbe
or
and
orb
out
pop
xchg
test
push
mov
bound
jne
inc
lahf
mov
sub
movsb
hlt
fbld
mov
mov
inc
fs
xor
sub
sbb
inc
xchg
clc
imul
xchg
or
fiaddl
push
out
cwtl
adc
xor
adc
cmp
arpl
mov
mov
dec
or
adc
insb
xchg
hlt
push
aam
and
xchg
cmpsb
test
pop
lea
xor
add
inc
adc
or
pusha
fwait
add
sbb
or
orl
pop
mov
xor
daa
mov
movsb
mov
push
iret
mov
push
cmpsb
sub
add
jb
iret
vpsrlvq
pop
lret
or
outsb
xchg
out
mov
pop
add
leave
in
xor
scas
sbb
insb
xchg
cmp
mov
jmp
sub
loope
sbb
adc
mov
shrl
sbb
sbb
rolb
stos
and
xchg
ret
andb
mov
push
xlat
add
test
sbb
cltd
lock
mov
sahf
incl
pop
xchg
xor
cltd
ficompl
ds
add
jle
incl
ficoms
cmp
mov
sub
or
fmull
cli
xchg
xchg
push
out
push
mov
add
lea
add
xchg
inc
arpl
cmp
cs
sbb
leave
sahf
outsb
sub
in
push
pop
aad
pop
sbb
or
add
adc
cmp
xor
into
or
pop
sbb
jne
push
or
adc
mov
lahf
insb
or
mov
mov
jb
dec
inc
jo
sahf
adc
dec
sbb
mov
adc
sub
test
sar
in
xlat
cmp
cmp
pop
filds
insl
or
cmp
pop
lock
out
push
xchg
in
sbb
lret
lcall
xor
pop
add
pop
sub
cltd
fs
sbb
sbb
test
mov
pushf
pop
popa
lods
jg
addb
inc
mov
dec
sbb
sbb
mov
loop
dec
and
rclb
sbb
mov
sub
into
in
sti
and
es
sub
mov
ror
inc
out
fcmovnu
dec
iret
cmp
in
lods
sub
lea
dec
dec
mov
xchg
popa
xor
xchg
xor
js
roll
and
and
das
add
jb
sub
pop
mov
push
inc
add
push
pop
xlat
xor
sub
and
cltd
sarb
testb
dec
push
push
sub
mov
outsb
outsb
cs
or
sbb
pop
add
add
andl
or
dec
lds
loope
fmuls
and
dec
adc
data16
ss
test
pop
pop
out
dec
popa
adc
test
push
or
mov
ret
and
mov
lahf
sbb
lock
xchg
inc
sarl
repz
adc
leave
sbb
por
add
lock
mov
jo
aaa
mov
mov
aaa
into
aas
mov
aas
mov
cmc
je
sbb
sub
imul
mov
pop
add
mov
daa
dec
loopne
and
lret
lea
cmp
test
ret
adc
sahf
dec
je
pusha
sbb
or
pop
jo
fimull
mov
sub
fs
push
add
mov
cmp
into
sub
aaa
xlat
push
fldl
inc
xchg
pop
inc
or
bound
xchg
aaa
cli
push
fisttpll
pop
mov
bound
int3
xorl
dec
adc
popf
andl
leave
sub
lahf
inc
push
sub
aas
dec
mov
inc
insb
xchg
into
sub
lahf
inc
add
sti
aas
inc
mov
inc
dec
xchg
inc
xchg
enter
or
test
fstpl
inc
push
pop
pop
or
bound
rolb
aaa
cmpsl
push
fstpl
pop
pushf
or
bound
faddl
clc
inc
das
pop
dec
out
sub
add
fadds
or
daa
rcrb
sbb
in
test
pushf
push
rclb
mov
jns
add
popf
pop
out
push
addr16
lea
gs
mov
pop
mov
in
cmp
mov
insl
push
dec
fcmovne
test
icebp
sub
fildl
push
inc
inc
lea
push
xor
loop
int
and
lret
lea
imul
ret
cmp
fcmovnu
add
lods
jg
dec
adc
mov
inc
arpl
frstor
les
jge
jecxz
xchg
xor
insb
or
loopne
mov
les
jo
lods
mov
mov
nop
fisttpll
lds
lds
xorb
mov
fsubrs
arpl
in
inc
mov
inc
cmp
mov
gs
or
push
lds
and
inc
sbb
push
dec
leave
dec
lcall
ss
lcall
add
push
into
sbb
push
popf
test
pop
iret
and
fs
ds
push
cwtl
add
inc
add
push
lea
mov
aam
sub
lds
inc
repnz
add
add
ss
daa
fdivrl
ss
or
or
jb
movsl
push
fstl
nop
sahf
dec
mov
adc
mov
inc
sbb
sub
aam
push
daa
sub
rcrl
xchg
xchg
pusha
into
inc
cmpsb
nop
push
scas
jg
pop
sub
pop
lcall
mov
mov
nop
arpl
xchg
pop
into
pop
or
aas
or
daa
leave
cmp
mov
add
adc
pop
mov
xor
mov
pop
add
add
xor
call
pop
xor
pop
clc
lahf
loope
xorl
lcall
fs
mov
lret
sbb
jae
inc
and
or
test
dec
or
bound
and
mov
inc
inc
lea
mov
inc
sub
notb
mov
adc
pop
adc
pop
std
pop
or
lret
mov
das
inc
mov
into
mov
mov
xor
push
jg
enter
or
push
mov
sbb
test
pop
sbb
ja
lret
arpl
mov
sbb
pop
scas
xchg
test
aaa
dec
pop
sub
sti
inc
int3
xchg
fisttpll
pop
adc
inc
lcall
xor
adc
lock
dec
cmp
cvtpi2ps
scas
pop
push
rclb
inc
push
cmp
ficoml
daa
loope
test
sahf
adc
jae
jp
je
dec
dec
add
andb
sbb
icebp
mov
push
lahf
mov
outsb
insb
les
fwait
add
or
fs
xchg
mov
aad
sub
xchg
imul
fwait
adc
xchg
inc
dec
pop
xchg
inc
add
push
mov
inc
fsubr
daa
cs
fldl
add
cltd
lods
out
mov
inc
xchg
add
sub
data16
shlb
push
inc
or
in
lret
jle
xchg
mov
mov
cld
pop
pop
push
sub
je
and
cmp
pop
push
pop
inc
xchg
inc
movsl
movl
mov
loope
inc
pop
lcall
popf
and
sub
push
nop
popf
xlat
pop
dec
push
jo
in
stos
add
sub
iret
scas
pop
push
cmc
mov
add
mov
xor
in
orb
jo
push
call
push
pop
pop
or
pop
jp
push
clc
hlt
xchg
push
jbe
adc
push
xchg
or
lds
imul
lds
loopne
mov
andl
in
test
fwait
pop
fsubrs
inc
dec
ljmp
jge
ret
outsb
xchg
popa
roll
mov
sti
pop
jne
fbld
mov
pop
sub
dec
inc
daa
test
daa
add
sahf
sub
popf
call
jns
bound
cmp
inc
movsb
xchg
test
mov
and
adc
sbb
into
jbe
fsubr
inc
add
stos
and
lea
add
adc
jae
jecxz
dec
and
in
pop
pop
cmpsl
fbld
adc
adc
mov
add
cmp
sbb
js
dec
lret
in
mov
inc
test
adc
or
lea
sbb
pop
add
inc
xlat
mov
mov
sub
xchg
sub
movsl
lods
add
fiaddl
inc
sahf
out
inc
addl
add
shll
sub
pop
push
in
loope
mov
pop
ss
jp
std
data16
fdivrp
sbb
fcomip
adc
pop
mov
loope
sub
sbb
push
and
sub
push
idivl
mov
inc
in
bound
xor
out
rcrl
aaa
cmp
mov
fs
xchg
or
pop
or
push
in
and
fsts
in
mov
adc
xchg
lret
mov
pop
repnz
lret
cli
sub
popl
xchg
add
mov
enter
jg
adc
xchg
pop
mov
mov
inc
orl
inc
out
push
adc
and
addb
mov
lret
test
mov
cmp
iret
cltd
leave
pop
sub
addb
dec
mov
into
cmpxchg
mov
mov
fwait
daa
add
adc
lods
cmc
push
sbb
out
sub
inc
add
mov
aaa
push
pop
dec
lret
in
or
ss
xor
call
sbb
les
push
sbb
in
out
mov
cmp
mov
fs
lret
cmp
int3
sbb
add
dec
adcl
dec
add
and
ret
adc
lea
test
pop
movsl
pop
ss
loope
je
stos
sbb
out
lcall
dec
sbb
inc
scas
and
out
out
adc
xor
rorl
xor
enter
adc
mov
mov
mov
popf
xorb
sub
leave
xor
les
fsubl
lea
enter
push
sbb
rcrb
jle
sbb
mov
push
pop
xchg
adc
dec
xor
ret
daa
sbb
orb
clc
mov
push
pop
pop
or
aaa
test
adc
sub
inc
out
imul
inc
add
pop
pop
dec
mov
test
xlat
iret
lock
sub
push
mov
int3
push
bound
sub
lds
or
popf
pushf
push
xor
add
add
adc
cwtl
outsb
scas
loop
sbb
mov
adc
fimull
out
dec
sbb
std
mov
cwtl
push
mov
scas
jae
in
sbb
cmp
sub
jbe
cmp
decb
add
inc
ss
sub
xchg
pop
fbld
cs
lret
xor
sub
cmp
lcall
and
mov
adc
stos
repz
movsl
fwait
mov
jne
out
aas
cwtl
insb
mov
sub
or
adc
lds
dec
scas
in
fdivrs
xor
aaa
mov
mov
and
call
push
inc
jle
adc
test
sbb
push
jle,pn
add
ret
inc
adc
push
xchg
int
or
das
xchg
inc
xchg
inc
mov
xchg
adc
dec
cs
sbb
andl
pop
ljmp
xchg
fwait
adcb
outsl
les
jp
fstpt
mov
add
or
lds
or
mov
mov
je
daa
sbb
lret
jae
xlat
pushf
popf
mov
int3
lret
mov
addr16
push
pushf
lcall
jne
mov
lock
sub
pop
jp
sbb
fcoml
adc
sbb
jns
pop
add
add
and
mov
sbb
shrb
add
pop
sub
not
pop
imul
call
adc
xor
adc
jo
xlat
or
daa
shrb
pop
sub
xchg
xchg
punpckldq
sub
lds
push
push
dec
scas
sbb
jno
xor
repnz
pushf
in
add
push
shrl
add
stc
ljmp
sbb
pop
ficoms
call
test
daa
pop
mov
xchg
and
or
fistpll
stos
les
rorb
test
shll
sbb
out
insl
pop
mov
jns
mov
sub
test
sbbb
push
add
mov
adc
add
orl
mov
push
addr16
sub
pop
lret
int
test
sub
or
test
cmc
enter
adc
xor
pop
and
push
lahf
test
shrl
lret
test
xchg
test
pop
mov
clc
xlat
loope
mov
mov
sahf
xchg
mov
adc
xchg
int3
add
mov
inc
movsb
jl
mov
adc
and
stos
sbb
gs
mov
scas
sub
and
mov
push
lds
clc
or
in
push
sub
sbb
outsb
mov
subl
mov
pop
je
xor
lret
stos
in
lods
dec
mov
out
pop
movsl
cmp
push
aam
sub
sub
lret
adc
xor
xchg
ljmp
or
and
adc
repnz
pop
mov
xor
sub
mov
outsb
add
or
cltd
or
xor
or
sub
dec
lock
enter
decl
adc
xchg
sub
and
add
fisttps
cmp
sbb
pop
jne
push
movsb
out
push
inc
jb
or
shll
xchg
or
ret
adc
sbb
lds
int
movsb
add
adc
xchg
push
mov
jb
xchg
andl
jbe
sub
inc
inc
sub
xor
push
push
scas
dec
les
dec
dec
ret
push
dec
std
jbe
dec
cmpsb
scas
xchg
stos
dec
pop
fldcw
and
push
mov
pop
pusha
inc
or
jno
cs
aaa
xchg
sub
arpl
and
inc
mov
out
sbbl
sbb
mov
xchg
fstl
sbbb
ret
das
cmp
pushf
adc
rcrl
outsl
jg
test
cltd
lods
inc
aaa
cwtl
sub
cmpsl
in
inc
jg
inc
rcl
mov
pop
pushl
adc
shll
pushf
inc
inc
shrl
xor
data16
inc
das
repz
pop
inc
pop
fucom
aaa
pop
adc
ret
sbb
fdivs
out
pushf
jne
popf
daa
pop
mov
inc
addl
ljmp
lahf
sub
rcrl
inc
or
int
and
jo
test
cmpsl
adc
mov
ds
paddsw
sahf
add
into
int3
sbb
push
stos
shlb
xchg
push
mov
dec
inc
fcmove
jecxz
adc
xchg
and
mov
int
mov
xchg
push
sbb
fdiv
xor
insl
adc
test
and
xchg
push
into
push
test
nop
pusha
sub
and
jo
mov
popf
cmp
daa
push
push
push
mov
add
insl
sbb
sbb
add
pusha
jns
push
outsl
sbbl
int
mov
cmpsl
leave
lea
or
mov
jb
sub
xor
pop
mov
imul
jns
inc
push
and
pop
scas
pop
ret
and
rclb
lds
lcall
cld
dec
adc
pop
aaa
dec
fmuls
dec
iret
inc
xchg
mov
dec
mov
mov
mov
inc
lods
add
bnd
inc
cs
or
xchg
adc
fsubs
test
dec
sub
adc
pop
jle
adc
aas
das
adc
out
push
jle
stos
sbb
dec
fists
test
pop
pop
or
xor
daa
push
cmp
push
lahf
test
sbb
add
sbb
xbegin
push
rcrb
cmp
mov
xchg
mov
cwtl
sub
leave
outsl
das
cs
mov
cmp
adc
std
imul
loopne
test
jecxz
pop
adc
adc
lahf
lahf
lret
loop
icebp
inc
leave
int
call
popf
fwait
push
test
dec
add
icebp
pop
ds
mov
js
add
addr16
fimuls
pop
sub
int
jbe
xor
popf
mov
movlps
sbbl
push
inc
lcall
mov
sbbb
and
fisubrl
xor
add
lahf
shrb
inc
jg
sbb
sbb
in
sub
mov
ss
aad
adc
cmp
rcrb
pop
pushf
sub
mov
out
mov
inc
mov
cmp
sbb
shl
push
sbb
ret
sbb
scas
aam
pop
dec
loopne
push
fisttpl
pushf
add
es
sbb
push
xor
lea
ret
adc
pop
icebp
or
cmpsb
ss
or
or
dec
lea
adc
pop
loopne
aaa
add
lcall
les
movsl
cmp
mov
cltd
sbb
xorb
inc
inc
int
rcrb
icebp
inc
adc
push
fiadds
push
sub
out
push
fidivl
dec
push
mov
and
test
xchg
out
pop
xor
push
cmp
aas
and
sub
add
dec
add
outsl
fs
or
pop
add
adc
add
scas
int
jl
sbb
jne
push
and
mov
xchg
inc
add
fmul
adc
outsb
mov
add
gs
mov
mov
adc
jp
fistpl
sbb
mov
movl
js
jle
add
and
push
ret
inc
mov
jecxz
mov
dec
pop
cli
lret
pop
imul
popa
cwtl
mov
push
sti
daa
ss
aad
ret
ds
and
out
and
bound
sbb
mov
xchg
dec
xor
pop
leave
mov
dec
mov
test
mov
popa
mov
pushf
jo
cli
sbb
add
xchg
pop
adc
cwtl
inc
fs
push
cli
rorb
sti
sbb
sahf
shlb
xchg
mov
lock
mov
incl
sub
xor
js
cs
lock
xor
fsubs
push
jnp
adc
aam
sti
adc
push
pop
xchg
jmp
outsb
adc
xlat
fnstsw
mov
add
ss
sub
dec
bnd
jne
mov
push
das
cmp
mov
int
jecxz
dec
xchg
adc
lds
js
or
cmp
jae
dec
xchg
xchg
mov
adc
in
inc
and
or
aaa
orb
or
int3
cmpps
aas
lds
cmp
imul
aaa
aam
popf
andb
test
je
roll
or
fiaddl
out
pop
xchg
sbb
enter
and
mov
or
in
sub
mov
out
lock
out
fstps
jp
sub
test
sbb
sbb
data16
mov
daa
or
xchg
lock
push
movsb
iret
das
push
cmpb
add
lds
lods
pop
imul
sub
jo
jae
add
xor
movsl
add
out
add
dec
adc
fwait
nop
add
or
xor
mov
rcrl
popf
adcb
push
es
ja
inc
in
add
leave
mov
fcoml
or
scas
xchg
les
outsl
dec
gs
dec
lock
push
mov
rcrl
jp
pop
aas
pop
divl
adc
sbb
stc
jae
aam
mov
jb
gs
aaa
jl
push
xchg
and
jae
loopne
pop
loope
popf
mov
cmp
outsl
insl
mov
icebp
or
and
and
jns
jnp
inc
xchg
adc
in
or
imul
jnp
add
arpl
sti
xchg
cltd
mov
mov
cmp
loope
xchg
aas
enter
push
push
push
sbb
inc
push
fistpl
pushf
and
inc
adc
iret
mov
repz
das
add
or
pop
packuswb
or
popa
lret
xor
xor
aas
pop
shll
dec
hlt
xchg
inc
int3
push
pop
and
into
cmovge
mov
iret
fcomip
sub
jmp
xlat
pushf
jnp
add
and
ret
mov
insl
addr16
sarb
sbb
adc
out
add
or
dec
xchg
sbb
fs
mov
rclb
movsl
cs
fldt
rcrb
movsl
mov
pop
xor
jmp
pop
mov
fisubrs
jg
loope
mov
imul
pop
inc
xchg
xchg
fbld
pop
xchg
sub
out
imul
fistpll
pop
mov
push
lods
sub
pop
test
pop
addr16
das
negb
mov
pop
and
and
das
pop
mov
fisttps
xor
sarl
cli
add
pop
xchg
inc
mov
lods
pop
dec
or
jle
int3
xchg
inc
fstpl
movsl
movsl
jb
popf
lea
movsl
gs
fimull
pop
jnp
sbb
fwait
rcll
dec
int
and
inc
test
and
dec
pop
cli
dec
dec
add
or
test
xchg
stos
mov
out
jmp
pop
fsubrs
out
adc
pop
and
pusha
imul
and
cmp
sub
cwtl
and
rcrb
mov
inc
pop
mov
jo
pop
mov
faddl
gs
sbb
mov
fcmovne
outsb
stc
fwait
pop
lahf
dec
xchg
dec
test
into
rcr
cmp
push
inc
xchg
jmp
sub
lahf
lods
fstpl
shrl
inc
lea
inc
pop
push
stos
sbb
bound
or
pop
das
mov
xlat
jge
mov
xchg
push
lahf
sbb
inc
push
cwtl
sbbl
push
das
aaa
cmpsb
fisubs
in
adc
icebp
out
adc
pop
sub
outsb
jae
mov
mov
mov
push
insl
cmpl
adc
xor
test
xor
pop
incl
adc
inc
stos
scas
jp
sahf
or
jno
aam
xchg
lcall
push
lahf
cltd
xchg
lock
test
mov
fs
jge
repnz
push
pop
or
test
sbb
cmp
inc
jmp
mov
sahf
bound
pop
cmp
mov
fldl
mov
dec
shrb
cld
or
xor
ss
mov
lcall
add
imul
cmpl
daa
sub
test
sbb
aas
cmp
xchg
pusha
stos
mov
lods
cltd
push
and
xlat
cmp
inc
lds
orl
sub
adc
sbb
fsubrs
insb
loope
std
sbb
or
inc
pushf
and
pop
or
inc
cmp
outsb
cs
ret
mov
push
add
sbb
xchg
inc
add
loop
fadd
push
or
inc
pop
sub
daa
test
or
mov
push
pusha
xor
lods
femms
in
in
adc
push
leave
add
cld
xchg
rorl
xchg
and
pop
cmp
push
push
pop
aam
clc
mov
lcall
xchg
cltd
mov
xor
ds
cmp
sbb
pop
and
test
adc
and
aaa
inc
and
pop
repz
push
and
mov
leave
lret
mov
xchg
mov
ja
jae
test
rep
es
loope
pop
or
into
out
or
scas
or
incl
sbb
push
mov
mov
mov
mov
filds
test
pop
test
mov
scas
mov
dec
inc
shll
push
pop
push
daa
popf
push
dec
sbb
imul
out
adc
push
jnp
adc
mov
adcb
push
xchg
aam
cmc
sbb
adc
mov
and
sub
test
push
jne
sbb
mov
fmuls
xchg
xchg
jg
pop
mov
es
xchg
repnz
sarl
xchg
add
add
cmpsl
or
outsl
pop
icebp
fprem1
pop
sub
or
pushf
xchg
or
mov
rcll
lahf
lret
stc
xor
addb
or
out
mov
xchg
push
add
jno
lods
sbb
out
push
mov
outsb
mov
stos
ss
cmpb
dec
pop
jmp
popa
or
lea
sbb
mov
xchg
push
push
dec
jle
or
hlt
cmp
pusha
aas
adc
sbb
sub
pop
fsub
add
cmp
adc
xchg
and
jp
loop
pop
xchg
lea
fdivrs
imul
push
fcmovnb
xchg
pop
fisttps
out
jle
mov
lds
or
popa
and
imulb
jo
push
stc
xor
add
jg
pop
mov
push
xor
push
pop
les
xlat
push
pop
lock
jge
int
jp
lea
dec
insl
sbb
loop
sbb
daa
sub
dec
insb
or
int
dec
dec
call
ds
or
jns
adc
push
sbb
add
xor
xchg
popf
and
mov
mov
imul
sbb
mov
mov
shlb
insb
sub
shll
xor
nop
or
adc
pop
aam
cmp
lret
in
and
test
jnp
sbb
dec
sub
imul
jae
lea
or
or
xchg
movsl
jmp
jp
mov
sbb
repnz
mov
inc
add
in
push
mov
lahf
push
leave
adc
add
lret
sarb
add
pop
dec
gs
or
sbb
pop
pop
fnstsw
pusha
mov
adc
pushf
shll
cmp
adc
push
cmp
sahf
sbb
mov
or
sub
lcall
ficomps
ljmp
xchg
adc
jb
mov
push
aas
lret
mov
mov
push
and
int
jmp
xchg
aam
fcmovnb
jo
jl
int3
pop
in
pop
sbb
aas
add
pop
adc
or
jbe
cmpsb
pop
xchg
xchg
xchg
dec
fidivl
fnstcw
test
out
dec
xchg
fidivl
fcos
test
jno
xor
adc
pop
cmp
das
daa
cs
dec
add
push
and
sub
daa
arpl
pop
sbb
push
xchg
cwtl
and
xor
inc
nop
rclb
xchg
cwtl
popf
xchg
mov
into
sub
dec
mov
dec
mov
xchg
mov
add
xor
fldt
out
pop
mov
pop
cltd
pop
imulb
push
mov
push
jne
mov
bound
push
cwtl
mov
mov
dec
jg
pop
mov
xlat
push
pop
jae
notl
ljmp
xchg
mov
stc
or
lea
cmp
xor
cmp
push
xor
xchg
inc
mov
fmul
pushf
popa
call
inc
ljmp
xchg
arpl
jp
fmulp
cmp
shrl
mov
les
mov
pop
xlat
imul
mov
adc
jge
xchg
or
sbb
movsb
pushf
std
leave
mov
addb
inc
filds
out
out
mov
xchg
ror
pop
cli
inc
cltd
ficoms
aam
sub
std
inc
pop
xor
lock
cmp
data16
out
sti
mov
ja
jle
mov
dec
jno
ficoml
nop
rcll
cmpsb
sbbl
ja
repnz
cmp
andl
cmp
mov
or
pop
mov
mov
mov
popf
inc
ret
andb
stos
sbb
int3
jne
aas
cmpsl
cmc
adc
pop
pop
xor
pop
push
xor
ss
lahf
mov
sbbl
pop
roll
mov
adc
cwtl
je
pop
outsl
out
mov
cwtl
add
movsb
inc
and
rolb
in
xor
pop
pop
pop
aad
loopne
lds
xchg
test
adc
test
sub
sbb
orb
mov
pop
adc
fs
cltd
push
dec
mov
into
je
ja
push
sub
pusha
pop
xchg
pop
jb
lret
jge
or
and
loop
pop
pop
sahf
jp
fsubr
cmc
dec
sbb
inc
sub
dec
adc
cltd
imull
mov
sar
mov
sub
aaa
ljmp
sub
fwait
xor
or
inc
mov
int
jl
and
jnp
sub
cmp
sub
add
or
neg
lret
imul
mov
aaa
sbb
shl
mov
mov
in
leave
hlt
clc
cmp
in
lret
popf
xor
outsb
push
push
sub
pop
jns
jb
test
sti
test
add
add
pop
in
movsl
ror
sbb
shrl
lea
mov
jmp
dec
add
cld
add
insl
mov
adc
repnz
and
jbe
rclb
xchg
out
jmp
out
push
jno
add
add
push
adc
jle
pop
subb
inc
sbb
mov
or
push
push
sbb
bound
in
push
push
insl
ret
sbb
sbbl
outsl
xchg
insb
int3
ret
mov
xchg
shll
pop
push
loope
cli
shl
cmpsl
lret
lds
mov
cltd
das
push
cltd
ret
dec
repnz
pop
stc
inc
test
iret
nop
xor
int
lea
popf
outsl
call
add
into
lcall
mov
rcll
mov
sub
jne
leave
in
add
sub
add
dec
into
cli
xchg
xchg
xchg
sahf
sbb
out
or
mov
xchg
cmpl
sbb
cmp
js
ror
icebp
data16
push
inc
xor
scas
pop
push
imul
mov
sbb
push
adc
add
ret
adc
jmp
dec
jg
inc
and
mov
add
pop
jbe
lret
xchg
and
adc
jmp
jbe
lods
xchg
and
sbb
sub
jbe
lret
pop
and
mov
cmp
jbe
lods
xchg
jp
fcoms
mov
ret
adc
and
push
dec
jbe
lret
push
and
aaa
aaa
xchg
sbb
lods
xchg
ja
aad
xchg
pop
lret
sub
sbb
divl
push
mov
adc
and
std
aaa
ljmp
push
mov
cmp
adc
test
xchg
mov
pop
cwtl
insl
std
or
xchg
enter
adc
xor
stc
cltd
jns
pop
mov
mov
sub
shlb
int3
sub
test
cmpsb
scas
icebp
pop
ss
testl
add
out
flds
add
xchg
dec
test
popf
roll
mov
inc
push
add
scas
aaa
push
xchg
cmpsl
add
stc
fists
scas
sub
xchg
das
xchg
pop
dec
and
movsl
sub
lea
loope
mov
mov
jge
stos
and
mov
lds
aaa
out
push
ret
fwait
stos
or
inc
sbb
push
push
hlt
leave
mov
dec
lret
roll
fcmovne
inc
mov
outsb
inc
lret
mov
loopne
xchg
ljmp
sbb
dec
xor
lds
pop
mov
leave
pop
xor
inc
add
adc
xor
sbb
xchg
jg
add
dec
xchg
dec
lock
bound
cmp
das
or
push
repz
add
je
pop
pushf
adc
lea
fsubp
insl
pop
push
or
push
sub
shrl
bnd
sahf
scas
jg
popf
pushf
inc
xchg
dec
hlt
add
inc
fistps
bound
mov
pop
mov
and
mov
dec
sub
popf
int
ret
pop
jae
fstpl
xlat
add
mov
mov
loope
sbb
mov
adc
or
add
or
sub
das
add
movsb
arpl
jae
movsl
xlat
xor
xchg
arpl
test
pop
ret
xor
pop
sbb
rcr
jns
adc
lea
cld
movsb
pop
test
jge
add
addr16
jecxz
jo
ficoms
cmp
mov
push
or
mov
jns
testl
js
mov
xor
adc
orb
je
stos
or
pop
sbb
sub
mov
jmp
popa
movsb
leave
or
subb
bound
mov
mov
xor
xchg
push
xchg
sbb
in
in
add
lret
in
jg
mov
xchg
sub
or
xchg
aaa
mov
xor
fmuls
xchg
xchg
xorb
adc
addr16
pop
xchg
mov
mov
sbb
jns
outsl
clc
mov
push
pop
sub
out
xchg
test
sub
sbb
push
sub
adc
insb
mov
jge
ds
call
roll
push
xor
les
lret
fdivrl
mov
mov
dec
pop
inc
jl
push
or
adc
pop
push
gs
sbb
loopne
stos
mov
movsb
mov
xchg
mov
xor
pop
aas
fs
int
or
adc
stos
cwtl
cmp
inc
xor
push
cmp
in
int
fldl
cmpsb
clc
push
push
les
scas
popa
pushf
dec
adc
ficompl
xchg
add
sub
sub
adc
inc
push
xchg
scas
xchg
out
das
ror
data16
icebp
cmp
or
lea
xchg
sarl
pop
or
dec
push
cmp
cmp
pop
call
pop
lret
sbb
xchg
in
cltd
cmp
pop
addb
dec
cmp
bound
jge
add
mov
adc
sahf
call
test
pop
lods
inc
sbb
pop
repnz
xchg
and
sti
mov
adc
cmp
sbbl
pop
sub
xchg
dec
mov
pop
xor
xorb
and
jle
fwait
adc
ss
xchg
bound
adc
repz
adcb
mov
sahf
or
inc
xor
fidivrl
or
into
cwtl
in
xchg
jl
xlat
push
sbb
lcall
cs
or
mov
dec
mov
sbb
insl
dec
xchg
push
inc
lea
xchg
dec
adc
or
stos
ret
pop
dec
jp,pt
sbb
adc
inc
shll
sub
mov
mov
adc
int3
inc
push
or
test
sbb
mov
inc
jg
out
pop
movsb
jg
jle
mov
ds
dec
add
incl
mov
pop
sbb
repnz
ret
stc
xchg
cmp
sub
dec
sub
or
inc
or
shlb
push
pop
inc
or
mov
cmp
mov
adc
sub
pop
and
sub
aam
insl
jecxz
jbe
outsb
insl
mov
jg
jp
sub
cmp
rclb
addb
pop
push
lock
jmp
pop
sub
push
jg
sub
lcall
ss
jp
or
aaa
jp
sbb
or
sub
lds
cmpsl
dec
ffree
imul
sbb
or
imul
pop
adc
cmp
rolb
pop
loop
enter
or
push
adc
pop
or
or
sbb
sub
nop
sbb
imul
add
loop
insl
and
lret
mov
sub
shrl
pop
inc
aaa
sbb
flds
in
or
loope
and
bound
testb
xor
push
movl
jle
sbb
mov
adc
sub
dec
and
shr
cltd
sub
cmc
cwtl
mov
jb
add
mov
push
jmp
andl
push
mov
lods
hlt
or
xchg
sub
mov
xor
adcl
ja
cmpb
and
mov
xorb
add
orb
lret
mov
inc
pushf
mov
mov
out
mov
xchg
jg
pop
std
or
bound
push
add
dec
insl
sbb
daa
dec
aam
cmpsb
cwtl
imul
dec
sbb
ss
mov
ret
xchg
or
cwtl
inc
repnz
mov
mov
lods
mov
aaa
lret
addr16
dec
ja
bndstx
pop
lock
jne
mov
xor
imul
inc
sbb
xchg
rclb
lret
fisubrl
loopne
mov
mov
or
popf
pop
fiaddl
ss
jb
xor
mov
xor
aaa
xor
pop
pop
or
cmpsb
and
or
cmp
fisttps
mov
pop
adc
lods
aaa
nop
cmpsb
inc
mov
enter
mov
push
test
inc
cmp
or
js
sarb
push
outsl
push
dec
mov
sbb
add
adc
loopne
out
je
sub
xor
sbb
ret
push
daa
xchg
xor
cmp
add
in
sub
cmp
daa
add
cmpsl
cs
jb
xchg
pop
push
or
or
mov
adc
sub
lcall
add
test
fldenv
loopne
jle
ret
pop
mov
das
fistps
xchg
lahf
aaa
ljmp
lahf
icebp
shrb
sbb
mov
pop
push
and
bound
or
and
sbbb
fdivl
aaa
xor
inc
xor
sub
jmp
inc
xor
sbb
sub
adc
ja
lret
add
push
call
dec
imulb
ret
imul
sub
xchg
test
imull
push
xchg
enter
mov
jp
stc
jbe
adc
jb
fchs
mov
jge
lcall
dec
add
ja
dec
leave
mov
pop
lds
mov
or
add
movsl
pop
sbb
in
dec
fdivrs
dec
xor
mov
cmp
fiaddl
xlat
je
cmp
push
sbb
push
xor
and
adc
push
fistps
mov
mov
bound
mov
imul
rcrb
xchg
mov
push
cmp
mov
xchg
mov
pop
insb
sub
xchg
jg
rorl
pop
addl
or
and
sub
mov
xlat
pop
mov
and
cmp
notl
push
and
mov
add
popf
aaa
inc
push
push
fsubs
lea
outsl
repnz
jno
int
jp
call
pop
xchg
pop
jge
add
in
push
and
inc
or
loopne
shll
bound
out
arpl
pop
sbb
shlb
mov
cmp
mov
adc
jge
ficompl
jmp
sti
xchg
cmp
sub
jbe
outsb
dec
xor
pop
sub
mov
xor
movsl
cmpsb
and
addb
adc
and
inc
xchg
cmp
cmp
repz
addr16
or
into
sti
dec
sar
jg
inc
ss
test
jo
xor
xlat
jle
or
mov
mov
xlat
pop
in
daa
or
pop
popa
scas
pop
aas
insb
adc
mov
add
cmp
jbe
daa
jns
xchg
into
hlt
cmp
test
xor
jo
mov
iret
mov
rcrb
add
sub
sub
cs
lods
lahf
lds
fiadds
int
icebp
adc
ret
add
push
xchg
lahf
mov
mov
adc
test
jmp
idivl
dec
cwtl
call
fisttpl
cmc
lods
je
xchg
xor
add
stc
dec
addr16
push
and
adc
jo
mov
dec
ret
mov
xor
insb
inc
imul
ror
push
push
lea
lea
rcl
xor
mov
daa
or
clc
out
stos
or
pop
jne
bound
and
adc
iret
cmp
push
jg
je
ja
adcb
fidivl
ror
mov
call
mov
mov
loopne
xor
in
mov
or
xchg
push
lahf
in
lcall
xor
mov
inc
out
mov
insb
push
mov
mov
adc
ret
lods
in
inc
jns
inc
cmp
jnp
jge
dec
stos
xlat
xchg
jg
inc
cmp
cmpl
dec
cmpsb
rcll
adc
push
sbbb
test
dec
mov
sub
inc
hlt
sub
ret
sbbl
aaa
test
and
fimull
jl
push
jp
inc
jae
jne
xchg
inc
pop
cwtl
jge
ds
dec
cmpsl
stos
std
push
xor
outsb
rolb
mov
mov
cltd
add
xchg
addb
ret
xchg
mov
orl
shlb
jl
xor
add
xchg
sub
cltd
sub
push
adc
mov
or
or
and
jmp
sub
dec
mov
pop
push
push
daa
mov
lret
scas
ds
pop
pop
mov
and
int
xchg
jo
adc
jp
or
add
fiadds
shrb
or
add
fwait
dec
xchg
xor
add
or
data16
and
pop
mov
mov
mov
into
sbb
mov
fs
lea
inc
or
add
loopne
sbb
and
outsb
jmp
lods
fldl
movsb
push
call
in
mov
fiaddl
mov
fcmove
lret
leave
sub
pop
mov
mov
pop
add
fmuls
mov
xchg
ret
xor
mov
xchg
bound
adc
orb
je
sub
add
scas
or
fadd
test
push
pop
sysret
scas
in
mov
xchg
negl
pushf
ja
out
adc
imul
int
push
dec
int
fisubrl
mov
es
mov
pushf
mov
adc
adc
or
fimuls
lea
out
jns
aaa
test
mov
mov
stos
bound
int
aas
pop
add
pusha
aam
mov
movsl
addr16
add
andb
pop
push
mov
lcall
nop
shrl
subl
inc
adc
shlb
xchg
es
and
jno
add
push
cmp
mov
popf
fxch
lods
fistpl
or
sbb
lcall
subps
repnz
dec
aad
bnd
push
lock
mov
pushf
jg
pusha
lods
mov
inc
add
pop
pop
scas
pop
inc
add
in
cmpsl
jnp
add
xor
out
icebp
rclb
or
pop
mov
test
into
xchg
in
mov
pop
fwait
add
fidivrl
add
call
mov
out
adc
incl
icebp
sub
sti
sub
or
inc
cmp
lahf
xor
add
lret
mov
les
xor
js
test
inc
mov
pusha
lea
or
adc
stc
push
push
or
lret
jmp
sub
mov
and
jnp
jns
loope
inc
mov
popf
cltd
in
cltd
add
jecxz
sbb
xchg
or
out
adc
mulb
jne
adc
adc
and
or
test
pop
in
lods
mov
dec
sbb
mov
xor
shlb
mov
mov
mov
jmp
ja
fbld
enter
dec
in
sbb
inc
mov
xor
or
daa
fists
or
or
dec
cmc
or
mov
lods
sbb
sbb
jae
fwait
and
jecxz
orb
cmpsb
in
mov
xchg
popf
adc
scas
lret
pop
jns
jnp
mov
mov
sbb
lret
xor
jne
test
scas
adc
mov
cli
xor
mov
ret
cmp
dec
jl
mov
pop
in
rcrb
push
or
dec
xor
mov
cmp
adc
xchg
push
push
fistl
mov
jp
jle
and
popa
mov
leave
pop
insl
mov
in
and
xchg
add
or
pop
push
iret
lret
cs
insl
aam
adc
dec
dec
and
lea
push
jo
xor
push
mov
adc
sub
mov
lds
and
dec
adc
ret
popf
lret
lahf
adc
adc
cmp
mov
inc
push
inc
fs
xchg
mov
pop
cltd
scas
pop
mov
and
adc
dec
inc
inc
push
dec
jecxz,pt
xchg
pop
jbe
scas
in
adc
cli
cmp
sbb
adc
seta
cmpsb
cmp
mov
sbb
inc
and
mov
adc
jae
negl
sub
pop
pop
pop
pop
mov
mov
adc
pop
ss
add
mov
jno
out
xlat
addb
sbb
inc
and
mov
push
nop
movsl
inc
outsb
cli
jno
sbb
fstps
mov
jo
pop
jae
stc
push
popf
xchg
mov
or
sahf
cli
or
filds
dec
movsl
movsl
mov
inc
fcompl
aaa
pop
add
push
mov
push
mov
cmpsb
add
adc
cmp
xchg
add
add
cmp
test
mov
pop
dec
mov
out
xor
sbb
pop
push
es
sub
pop
lret
mov
and
imul
sbb
lcall
xchg
incb
cs
push
movsb
jle
test
loop
inc
roll
sub
pop
mov
repnz
xor
xor
icebp
into
das
mov
mov
xchg
negl
and
lret
imul
jae
mov
adc
lret
mov
nop
cli
imull
xchg
mov
push
ss
mov
jns
xchg
xchg
iret
inc
cmpsb
stos
nopl
out
jmp
adc
mov
adc
sbb
push
rclb
jecxz
adc
mov
pusha
mov
clc
sub
ljmp
sbb
ror
cmp
jno
mov
xlat
lods
mov
xchg
mov
adc
aas
sub
pop
inc
loopne
ss
sbb
scas
incl
es
popf
lock
xchg
mov
xchg
and
fsubs
jp
push
stos
ret
lea
xlat
or
push
fdivrs
clc
in
sbb
sbb
inc
outsb
sar
sbb
xchg
adc
test
das
mov
sub
pop
outsl
jno
ret
orl
es
push
pop
push
sbb
push
mov
push
adc
dec
sbb
outsb
loope
cmp
xor
cmp
test
add
dec
mov
add
xlat
mov
jo
xchg
pop
lret
add
jae
pusha
adc
sbb
pop
imul
mov
fcomip
cltd
mov
sub
sbb
ret
inc
repz
dec
adc
mov
fidivrl
sti
nop
xor
xadd
bound
leave
rcrb
aaa
cmp
sbb
lods
and
cmp
cmp
sub
pusha
lods
out
push
mov
push
cmp
mov
and
or
out
loope
push
mov
dec
inc
sbb
mov
es
cmpsl
ljmp
int3
jmp
jo
test
hlt
and
cs
pop
scas
mov
xor
add
out
out
les
and
xchg
je
inc
pop
ja
test
jbe
orl
fstl
and
pop
mov
sbb
out
imul
jp
pop
lea
add
imulb
sbb
sbb
lock
mov
mov
dec
test
push
imul
add
mov
sub
pop
sbb
pop
das
iret
lahf
jno
dec
lods
jle
dec
jle
fstpl
lds
in
aad
mov
or
outsl
cmp
xchg
mov
add
xor
lar
cmc
and
sbb
xor
jbe
lcall
add
pop
or
pop
cmp
mov
sbb
pop
and
addr16
push
mov
cmp
mov
push
sbbl
xlat
mov
xchg
xor
jge
cwtl
addb
xor
xchg
dec
ret
xchg
jbe
stos
test
daa
xor
sbb
fucomp
pop
push
push
sbbl
lret
mov
clc
mov
out
mov
out
mov
push
test
pop
push
lock
int3
movsl
jae
mov
add
xor
pop
xchg
dec
and
addr16
or
fsubs
add
outsb
mov
pop
fidivs
ficoms
sbb
dec
inc
sub
insl
fldl
mov
cmp
mov
or
or
add
lea
push
jle
cltd
xor
add
enter
push
icebp
mov
cs
jmp
pop
adc
pop
push
lods
jno
fs
enter
arpl
inc
scas
aam
pop
mov
ret
jne
daa
dec
jle
out
jg
stc
stos
mov
and
lahf
ret
loopne
andl
adc
jmp
arpl
int
and
out
pop
mov
out
push
adc
mov
repnz
dec
cli
adc
test
push
mov
insb
or
push
mov
add
mov
add
or
lds
cmp
mov
mov
pop
mov
dec
xor
lea
fiaddl
inc
jmp
icebp
jp
xor
jb
lds
adc
lret
xchg
testb
push
xor
dec
pop
jns
sbb
clc
lret
call
or
jnp
lock
fcmove
loopw
adc
push
mov
cmp
ja
add
add
pop
push
lods
fs
add
lcall
or
xchg
or
adc
mov
popf
or
pop
mov
mov
push
cld
dec
inc
outsl
loopne
xchg
xchg
or
in
or
inc
cmp
scas
xor
jb
mov
out
push
sbb
pop
and
push
mov
es
push
cmp
fistpl
cli
int
xor
cmpsb
xchg
daa
xor
adc
xor
sub
scas
mov
data16
out
push
inc
dec
xor
jle
adc
xorb
dec
sub
fsubrs
daa
test
repnz
sub
and
in
mov
in
mov
pop
push
notl
xor
fisttpl
add
push
push
mov
mov
sbb
jecxz
pop
outsl
dec
in
pop
cmp
data16
fildll
int3
sub
jb
ficompl
nop
stos
or
sub
sbb
inc
bound
or
dec
loope
xchg
cltd
xor
cli
pop
inc
mov
or
and
inc
addb
push
int3
xchg
movsl
add
in
add
add
mov
xchg
add
adc
outsl
add
loop
hlt
sub
clc
inc
mov
inc
sti
and
pop
int
sti
nop
loop
inc
fcmovne
push
mov
ss
inc
aad
sbb
lret
jecxz
out
fisubs
rol
lret
add
xchg
sbb
mov
sbb
insl
jmp
inc
pusha
jp
pop
adc
in
add
jmp
sbbb
stc
cltd
notb
lea
int
inc
xchg
cmpsb
dec
fldl
cmp
add
add
int
or
mov
or
pop
andb
pop
mov
fisttpl
adc
and
int
add
sahf
int
inc
pop
push
inc
int3
and
stos
imul
andb
in
jge
les
cmp
clc
mov
fiaddl
mov
push
pop
sets
xor
hlt
sub
arpl
xchg
icebp
xchg
adc
clc
nop
std
lds
ror
dec
and
add
and
shrl
and
pop
inc
call
push
stos
loop
addb
pop
scas
mov
and
cwtl
jno,pn
aam
sub
les
js
and
pushf
js
stos
push
jne
lea
outsb
push
xchg
dec
fs
loop
xchg
mov
iret
fdivrs
xchg
rolb
das
adcb
fiaddl
inc
ret
inc
xchg
pop
xor
dec
pop
fimull
mov
mov
imul
sar
mov
adc
pushf
push
sub
push
jle
dec
sbb
xor
fadd
adc
lds
sub
stos
outsl
lods
fimull
cmp
out
ss
imul
xchg
xchg
lea
jbe
cmc
packsswb
lea
bound
push
sub
mov
ficompl
aaa
pop
inc
popa
xchg
int
inc
inc
adc
lret
int
inc
nop
xor
int
mov
or
cmp
sub
imul
into
ljmp
xor
sub
in
add
cmc
ret
daa
adc
or
and
adc
mov
xor
push
repz
adcl
push
adc
gs
sbb
push
mov
loop
push
inc
pop
cltd
pushf
jo
cli
inc
js
or
outsl
shrb
cs
lock
xor
cmc
leave
and
inc
add
mov
or
and
sub
les
lret
adc
cmp
mov
push
or
cmp
hlt
push
cmp
pop
inc
mov
lods
add
bound
add
fwait
mov
sbb
iret
cs
cmc
push
mov
pop
push
cmp
movl
fninit
popf
add
test
or
push
aaa
add
fmul
lock
cwtl
aaa
faddl
and
add
push
cmp
icebp
and
insl
xor
lcall
and
insl
sbb
or
outsb
push
adc
sbb
mov
mov
mov
pop
sti
pop
pop
push
lret
inc
sbb
or
mov
enter
mov
mov
lahf
mov
pop
pop
sbb
sbb
bound
pusha
loopne
lods
cmp
or
arpl
adc
pop
adc
push
push
pushf
fsubs
sbb
adc
cmp
insl
dec
scas
push
sbb
pop
clc
and
cmpxchg
jmp
rol
add
outsl
arpl
out
sbb
adc
fbstp
shll
in
out
adc
aas
sub
or
sub
add
adc
cwtl
push
hlt
adc
shrb
mov
arpl
mov
pop
cltd
push
cmp
pusha
arpl
pop
inc
mov
inc
xchg
scas
lcall
cwtl
sbb
mov
inc
dec
mov
add
hlt
addr16
cli
popf
nop
add
cmp
xchg
push
fidivl
mov
add
sarb
mov
or
adc
mov
jg
sub
and
adc
test
mov
add
inc
mov
mov
mov
lods
sub
or
sti
jg
addr16
js
sbb
jmp
jg
pop
xchg
cmp
loop
lea
int3
push
sbb
dec
out
and
popf
push
in
push
imul
outsb
mov
xchg
push
xor
push
inc
mov
aam
in
cmc
in
adc
sub
mov
or
xor
push
dec
ret
push
ret
mov
mov
sbb
pop
push
sbb
xchg
pop
outsb
inc
insb
fwait
lods
sbb
scas
mov
add
into
mov
pop
jg
jl
ficoml
fisubl
and
adc
xchg
pop
add
mov
dec
out
lods
dec
add
sbb
mov
cmpl
push
lret
inc
scas
adc
push
shlb
repnz
insl
cwtl
hlt
mov
inc
pop
aas
mov
push
or
daa
stc
push
mov
cmp
xor
aaa
dec
push
sbb
jne
fs
fisttpl
cmpsb
pop
testl
mov
cwtl
push
jge
pop
ss
cmpsb
cltd
mov
sub
call
mov
add
adc
out
enter
rclb
sub
mov
leave
scas
test
rolb
lds
and
lret
mov
adc
cmp
or
aaa
mov
aam
mulps
orl
aaa
shlb
lds
and
out
insl
add
pop
fcompl
cmpsl
notb
call
push
adcl
xchg
sub
mov
pop
loopne
mov
daa
push
xor
and
push
sub
add
jbe
pop
stos
leave
dec
push
mov
cmp
dec
sar
inc
jo
test
inc
sbbb
or
rclb
imul
cld
mov
push
mov
ja
inc
in
frstor
add
sbb
xchg
jmp
icebp
call
push
ret
xor
jge
pop
pushf
lea
mov
xor
cmp
sub
xorb
cmpl
dec
lea
out
leave
cmp
adc
dec
mov
seto
movsl
sbb
and
sbb
jle
pop
sub
es
sub
xor
or
call
addr16
xchg
push
xlat
and
sub
out
adc
sbb
in
pop
add
and
xor
pop
cmp
test
adc
sub
mov
sbb
pop
sbb
test
mov
and
movsl
dec
div
jbe
out
xchg
inc
in
inc
push
popf
in
inc
into
push
inc
in
inc
lock
inc
pop
or
sarb
sbbb
in
sbb
adc
xlat
xor
iret
dec
xchg
add
into
ljmp
fcoms
pop
mov
repnz
movsl
jno
lea
test
inc
inc
int
push
or
ss
mov
popf
push
xor
andl
das
es
test
or
mov
hlt
mov
adc
mov
call
lods
add
in
pop
loope
add
xchg
out
jae
jb
sub
in
lret
lea
xor
mov
jns
xlat
xchg
mov
stc
inc
sbb
mov
adc
or
sub
inc
sub
enter
push
outsb
jle
ret
sbb
mov
push
ljmp
dec
test
cwtl
pop
push
xor
ret
cmpsb
lcall
mov
rcll
movq
xlat
data16
cli
outsl
jne
jnp
fld
sbbb
xchg
lock
dec
mov
test
insl
sarb
std
or
or
fs
addr16
or
and
push
cmp
jo
lods
mov
rcrl
nop
pushf
call
out
xlat
ficoml
das
pop
fldenv
mov
inc
jp
pop
mov
pop
andl
lea
sub
bound
pop
or
imul
fidivs
push
sub
dec
xor
fs
jmp
add
and
in
or
int
adc
mov
lea
in
mov
mov
adc
pop
in
sub
sub
daa
or
xor
jl
call
adc
iret
xlat
dec
mov
push
jmp
popl
mov
mov
and
int3
popf
leave
mov
xor
cmp
out
outsl
add
xor
sarl
xchg
imul
les
adc
xor
lods
ds
ss
inc
les
loop
or
out
cmp
fisttpl
pop
xor
in
cmp
in
out
scas
inc
into
lcall
popf
out
push
mov
lds
push
scas
div
xchg
and
adc
cmp
xor
mov
adc
push
sbb
js
outsl
movzbl
mov
xor
mov
insb
pop
mov
popf
fidivrl
cmp
rcll
mov
pusha
bound
pop
or
shr
stos
mov
adc
inc
repz
addl
aas
sbb
mov
loopne
mov
pop
jne
sbb
and
les
xor
pop
in
fwait
and
sbb
dec
lea
mov
add
sub
cmp
add
in
inc
push
pusha
mov
jbe
inc
and
les
loop
addl
loopne
aaa
test
fidivrs
dec
sub
lods
adc
lret
fldt
pop
sub
mov
jg
and
test
dec
mov
push
adc
sbb
dec
pop
pop
push
fnstsw
dec
jne
xor
sbb
shl
add
cwtl
jbe
and
dec
sub
pop
leave
jbe
ds
jb
pushf
mov
ss
fdiv
lods
xchg
cltd
scas
mov
outsb
rcl
sbb
or
or
cmpsb
imul
xor
ds
fcomip
mov
inc
or
cmpsb
test
add
inc
adc
call
pushl
repnz
add
jae
jnp
test
out
scas
and
push
adc
push
test
push
aaa
adc
xchg
sbb
mov
jmp
inc
pop
in
xor
jge
ficoml
push
jb
xchg
sub
dec
push
xchg
xchg
lahf
outsl
ss
fstl
sbb
jp
pop
xchg
mov
sti
add
mov
add
pusha
push
and
jmp
or
inc
adc
pop
inc
sbb
pop
adc
nop
mov
sub
ret
jb
into
mov
in
sub
aaa
inc
add
dec
pop
inc
cwtl
xor
or
add
or
sti
mov
xchg
or
dec
arpl
pop
xor
pop
roll
cwtl
scas
push
xor
sub
and
pop
add
xchg
push
mov
inc
dec
push
aaa
push
or
pop
inc
mov
call
lea
mov
jp
sbbb
inc
sub
gs
and
inc
and
mov
and
and
lock
sub
push
call
mov
xor
push
dec
dec
mov
cmp
fsubs
icebp
stc
sbbl
mov
fadd
add
mov
sbb
addl
leave
fdivrs
add
in
push
mov
int3
sbb
jbe
fcoms
imul
cmp
rcrl
pop
push
jnp
loopne
sub
popf
push
jp
fmuls
jb
jbe
push
lahf
sub
lea
and
xor
ret
fst
cmc
push
xor
mov
lret
ficoml
jg
in
loopne
addr16
sub
mov
and
adc
mov
int
jle
push
lea
xchg
je
fwait
cli
mov
pop
mov
test
push
xor
push
sub
enter
popf
int
and
xchg
les
mov
cmp
mov
pushf
jg,pn
mov
fwait
mov
sbb
xor
add
pop
add
faddl
push
mov
dec
sbb
push
mov
sub
sbb
clts
jp
daa
mov
lods
rcrb
or
add
inc
cmpl
out
push
adc
stc
stos
enter
push
sbb
aas
inc
dec
paddusw
add
pop
ret
jbe
inc
cmp
cmp
xchg
adcl
mov
xchg
inc
ficomps
inc
inc
push
pop
sbb
cmpsb
cmp
roll
movsb
outsl
adc
xor
mov
cltd
shr
ficompl
nopl
and
outsl
pop
cmpb
shll
add
push
pusha
push
rolb
je
mov
js
lahf
pop
rclb
sub
or
xor
adc
cmp
out
sub
or
push
xchg
out
pop
xchg
outsb
xor
pop
inc
out
test
test
jns
into
inc
cmp
sarl
jb
mov
xchg
or
fildl
outsb
jo
orps
subl
mov
lods
sbb
mov
xchg
leave
dec
xor
paddusw
mov
icebp
aas
nop
test
inc
and
movsl
sbb
pop
fnstenv
aaa
call
pop
or
pop
sub
daa
sub
sub
jecxz
adc
adc
cmp
into
pop
sbb
sbb
mov
test
or
test
cmc
jge
dec
aad
clc
lret
sbbl
call
lcall
in
imulb
test
push
sahf
pop
mov
or
sahf
jecxz
leave
and
adc
push
xchg
repz
scas
add
fisubs
push
ret
sarb
jb
cli
cld
mov
movsl
test
mov
movsb
lea
adc
rcrb
or
push
pop
fdivp
and
mov
push
mov
in
push
mov
imul
jb
inc
call
jecxz
cmp
ja
dec
add
mov
dec
test
mov
movsl
xor
jne
dec
fiaddl
cwtl
icebp
icebp
lods
sbb
add
sbb
adc
fimull
add
test
mov
push
add
lds
aaa
dec
add
lock
sbb
cmpsb
fnsave
loop
scas
dec
setbe
leave
mul
jns
mov
pop
mov
dec
inc
mov
inc
mov
mov
sbb
cmp
gs
std
sbb
fcmove
or
shll
mov
fs
xchg
or
loope
fwait
in
add
popf
in
aad
inc
pop
mov
sub
push
mov
popf
cmp
jp
pop
or
sbbl
ret
jb
rclb
sahf
mov
data16
add
inc
lret
arpl
cmpsb
sbb
scas
mov
and
ja
faddl
stos
add
into
xchg
or
ret
xor
xor
inc
pushf
adc
ja
jae
imul
ds
ds
or
pushl
sbb
andb
jmp
pop
out
pop
gs
das
push
mov
in
imul
loope
nop
sbb
sub
adc
pop
adc
sbb
mov
fldl2t
mov
add
inc
loopne
dec
pusha
lock
mov
jnp
cmp
sub
mov
sub
cmpsb
sbb
into
adcb
repz
movsb
mov
inc
int
mov
cmpb
orb
add
or
push
cltd
push
add
or
orb
adc
inc
inc
test
cmpsb
cmp
lcall
nop
ss
mov
sub
in
popf
fwait
cwtl
icebp
fidivrl
jne
mov
pop
sbb
and
test
fs
dec
sub
daa
mov
out
cmpsl
xchg
sub
mov
stc
gs
sub
stos
fstps
push
and
pop
pop
test
mov
jo
xchg
xchg
fstps
sub
int3
stos
daa
pop
lock
or
jecxz
loopne
dec
sti
lods
mov
xor
dec
mov
pop
sarb
outsb
push
push
push
popf
xchg
add
add
sbb
cmp
and
stc
popf
pop
ret
fwait
inc
sub
add
daa
jnp
fcmovu
fs
push
cmpsl
sbb
push
push
add
lea
dec
xor
adc
mov
pop
aad
int3
or
repnz
fmull
adc
xchg
jnp
cwtl
pop
bnd
dec
out
xchg
xor
popf
xchg
into
cmovge
stos
ficomps
xchg
fmul
cmpb
gs
xor
xchg
cmp
mov
add
pushf
popa
push
enter
into
xchg
xchg
xor
xchg
and
bound
pushf
std
jle
aaa
int
cltd
pop
jbe
cmc
fisttpll
repnz
inc
int
test
jne
lds
arpl
mov
lret
mov
daa
sbb
pop
xor
sbb
out
jbe
aas
push
repnz
jecxz
pop
sub
push
push
cmpsb
ss
xlat
sub
ds
ss
adc
xlat
adc
inc
pusha
sub
xor
inc
jmp
fiadds
adc
loopne
push
inc
xor
mov
or
xchg
push
andb
jno
mov
jnp
pop
xchg
mov
mov
adc
or
fstpt
dec
mov
inc
loope
insl
sub
push
loopew
xchg
insb
xchg
scas
pop
xor
lret
adc
pop
cmp
sbb
pop
insb
shrl
and
scas
mov
leave
pmuludq
push
push
sub
inc
lods
lret
pop
ja
or
or
xlat
and
push
stc
push
adc
push
and
sub
sub
es
hlt
push
mov
and
roll
fmull
add
fidivrs
pop
dec
fs
nop
outsb
and
pop
or
rorb
add
xor
xchg
cwtl
add
adc
xor
xchg
stos
xor
sbb
mov
push
sub
bound
lea
inc
or
pop
push
inc
fwait
lret
lds
sbb
shlb
lret
sbb
ja
fcomps
lret
and
sub
pop
and
pcmpgtw
shrb
fidivs
inc
sti
push
adc
dec
mov
add
lea
pop
or
xor
push
xor
orl
cmp
cmpsb
and
and
out
sub
xchg
cmp
cld
sbb
inc
or
xor
xor
inc
adc
adc
xor
ffree
pushf
lret
aaa
sbb
xchg
jae
cmp
repz
mov
or
xor
jo
or
data16
clc
aas
out
testl
push
inc
popf
mov
aaa
stos
push
dec
adcb
inc
les
fcoml
sub
test
dec
cmp
push
lds
ss
sub
leave
lds
xor
cli
pop
sub
push
add
loop
adc
add
loop
add
mov
rcll
mov
sub
lea
pop
movsl
stc
aaa
dec
add
mov
jp
enter
xlat
out
stos
xchg
push
xchg
leave
rolb
xor
dec
hlt
inc
inc
pop
push
movsl
push
adc
adc
and
push
cli
stc
cmp
jge
shlb
adc
cmp
shlb
sbb
clc
inc
add
xor
testb
sub
sub
imul
or
and
inc
mov
xor
adc
lcall
mulps
ds
pop
mov
insl
push
and
adc
shrl
cli
add
mov
xchg
int
inc
lods
push
fnstsw
push
test
fistpll
scas
sbb
mov
fsubl
movsb
xor
or
xchg
icebp
leave
daa
aaa
jns
enter
filds
inc
or
inc
xor
or
sarl
adc
mov
lret
sbb
data16
daa
and
inc
scas
inc
adc
inc
in
mov
leave
aaa
or
lods
dec
add
icebp
xchg
jecxz
dec
test
sub
addb
xchg
scas
clc
or
and
add
xor
out
or
cmp
dec
sahf
xchg
cmp
in
or
or
add
dec
mov
pop
add
or
dec
or
xor
sbb
xchg
and
sub
daa
sub
aaa
sbb
adc
inc
ret
or
mov
subb
sbb
aas
add
test
repz
xor
and
mov
dec
out
add
loope
bound
lret
ds
in
stos
sbb
fs
xor
mulps
xorl
js
mov
pop
xchg
stos
adcl
xchg
lea
sbb
into
in
fsubrp
jnp
mov
shll
add
pop
xchg
stos
sub
fs
or
cmp
ds
shrb
lea
inc
add
sbb
sub
mov
cmp
cmp
sub
xor
sbb
add
jne
mov
pop
push
xor
cmp
imul
adc
sbb
pop
add
xchg
mov
add
jo
dec
adcb
fisubrs
pop
je
mov
imul
add
dec
adc
stos
xacquire
cmp
or
xchg
ret
hlt
bound
sbb
out
inc
sbb
jg
or
dec
fbld
popa
adc
add
bound
les
sbb
sub
ret
pop
testl
mov
xchg
jbe
test
add
lahf
enter
mov
sub
sub
dec
push
fmuls
int3
xchg
mov
data16
push
push
insb
xor
movl
add
in
inc
leave
dec
pop
jo
andb
cli
inc
mov
mov
mov
xchg
or
rcr
push
sub
scas
mov
inc
arpl
std
and
and
orl
sub
inc
sub
xor
add
mov
popf
push
mov
add
lds
xchg
cs
xor
push
pop
sbb
and
mov
push
sbb
int3
pop
leave
mov
mov
cmp
cwtl
cmpsb
or
sbb
dec
xor
inc
xchg
and
dec
ja
and
and
xor
sub
adc
leave
sbb
add
orl
out
dec
push
dec
in
sbb
daa
repz
mov
mov
repz
xchg
movsb
sahf
mov
movl
push
lret
xchg
mov
cltd
sbb
fstpl
mov
or
not
inc
sbbl
add
sbb
xchg
pop
test
cltd
push
and
and
cmp
addr16
pop
scas
mov
iret
lahf
adc
or
ret
cmp
xchg
mov
movsb
and
add
pop
jp
scas
divb
inc
insl
loope
nop
or
dec
in
scas
mov
ret
mov
aaa
sub
das
push
fidivrl
sub
or
add
and
imul
push
xchg
outsl
loopne
cmp
stos
shlb
xchg
jl
flds
test
xlat
fmuls
jle
enter
pop
cmp
xchg
cmp
push
subb
pushf
sub
add
into
sbb
push
jno
fcomi
fwait
cmp
arpl
push
jmp
or
pop
adc
cs
ja
mov
or
mov
sbb
push
int
outsl
sub
xor
imul
sub
sbb
pop
sbb
jne
mov
imul
mov
xor
shlb
popa
xchg
mov
xchg
sub
mov
push
test
out
push
ja
push
dec
in
dec
inc
add
and
pop
mov
ficompl
loopne
sbb
pop
sbb
push
fdivrl
mov
aaa
xor
add
mov
repz
fwait
inc
or
in
xor
rorb
add
xchg
add
sbb
cs
push
fimull
icebp
je
popf
lock
add
mov
cmpsl
filds
lock
xlat
add
call
ss
xchg
or
mov
or
or
inc
push
imul
add
ret
aaa
sbb
sbb
inc
push
imul
dec
outsb
mov
ja
inc
jg
ret
aaa
pop
inc
ret
or
lcall
dec
fbstp
rorl
jp
out
pop
mov
out
enter
scas
sub
jg
iret
pop
lods
mov
fstps
push
sbb
sbb
cmp
int
xchg
lea
mov
mov
mov
sub
cmp
sti
pusha
pop
mov
xchg
pop
in
aaa
enter
scas
test
sub
mov
inc
pop
cmp
imul
mov
shl
or
les
es
adc
dec
icebp
daa
add
cmp
ret
inc
faddl
jp
cmp
xlat
cmp
dec
in
scas
mov
jmp
jp
push
or
dec
jmp
add
test
lcall
push
jnp
test
adc
add
movsl
sbb
xchg
or
add
orb
mov
sub
ret
fmulp
pop
ja
adc
scas
jb
inc
cmp
sti
mov
add
inc
jbe
dec
shrl
ja
xchg
mov
adc
out
fisubl
popa
in
sbb
and
insl
inc
ret
pop
xchg
inc
jbe
aad
imul
ja
clc
push
add
scas
ret
loopne
sbb
sub
inc
sbb
xorb
or
sbb
add
adc
cmp
dec
scas
aaa
adc
das
push
xchg
cltd
lcall
inc
or
cmp
or
fisttpl
test
jb
addb
test
sbb
dec
add
or
add
lahf
xor
sub
xor
push
test
adc
and
and
pop
hlt
inc
pop
jo
pop
iret
aaa
pop
test
jmp
pop
rclb
and
popf
xorb
or
aam
lds
imul
xchg
aaa
int
and
sub
aas
into
insb
jae
inc
and
mov
imul
ljmp
inc
mov
pop
sbb
mov
lret
xlat
ret
data16
xchg
jp
stc
jb
dec
inc
ret
mov
fstpl
jne
pop
addb
pop
inc
in
lods
insb
andb
addr16
ss
in
adc
push
pop
aad
imul
out
loope
push
mov
aad
inc
test
lds
cmp
test
push
push
sbb
shrb
shll
loopne
popa
jo
dec
out
test
mov
or
xor
dec
das
aam
push
inc
hlt
dec
pop
jae
leave
ja
aaa
inc
addr16
dec
pop
jmp
bound
dec
mov
sahf
inc
push
daa
aam
xchg
push
nop
jo
bound
int3
out
or
sbb
jl
pop
dec
pop
cwtl
xor
or
lock
and
ja
pop
xor
and
les
pop
jecxz
fmull
dec
loope
xchg
mov
jno
fstl
lods
ror
into
jo
jge
add
sahf
ljmp
cmpb
sbb
jmp
in
sub
lea
pop
sbb
inc
adc
pop
imul
insb
xchg
test
pop
incl
xor
out
jo
mov
js
lea
add
adc
or
mov
xor
add
mov
or
sub
sbb
sbb
or
mov
jns
xchg
aad
dec
or
pop
loop
sbb
jp
imul
push
das
or
pop
jb
pop
push
pop
or
idivl
sahf
xchg
cs
out
fwait
xor
mov
xor
cmp
push
imul
sub
mov
pop
int3
xchg
add
or
cmpsb
xchg
adc
test
int
jbe
ja
xlat
jg
sub
mov
orb
add
or
mov
orl
clc
lock
addl
pop
mov
add
or
inc
outsl
xor
sbb
inc
and
dec
test
lds
stos
push
and
mov
add
xor
mov
adc
pop
adc
int
mov
out
add
orl
cltd
push
or
xor
or
pop
daa
add
mov
test
cmp
push
add
aaa
xor
orl
xchg
push
sub
inc
in
sbb
insl
jle
cltd
lock
js,pn
lods
jle
xchg
scas
and
mov
push
aas
jo
out
pop
in
inc
or
or
sbb
add
sbb
add
pushf
or
add
sbb
push
adc
es
scas
cmp
or
inc
or
pop
test
jne
inc
filds
lret
mov
pop
cmp
mov
es
dec
sbb
sbb
and
loope
adc
jp
push
mov
imul
mov
ds
or
data16
sbb
inc
xorb
addr16
push
repz
mov
movsb
mov
mov
pushl
in
lcall
out
push
sub
pop
or
aaa
adcl
icebp
sub
outsl
dec
mov
mov
inc
push
daa
add
sub
lods
ja
sbb
xor
outsl
out
fisubrs
lahf
xchg
cltd
add
xchg
pop
cmp
mov
cmpsb
add
scas
add
cmp
add
daa
add
hlt
aaa
push
sbb
mov
scas
inc
bound
leave
adc
sub
cmp
push
inc
or
nop
inc
cmpsb
add
scas
pop
mov
sbb
pop
pop
sub
pop
call
and
in
ds
push
imul
in
test
scas
xor
adc
jb
pop
pop
sub
fdivs
fisttpl
inc
lret
daa
cmpsl
adcb
fwait
mov
decb
sbb
adc
xchg
sub
cmp
sbb
jne
mov
cwtl
rclb
add
je
xor
jnp
mov
pop
aaa
sysenter
dec
sbb
test
or
aaa
push
jns
sub
and
xor
xchg
sub
pop
pop
push
dec
mov
popa
add
push
or
sbb
les
pop
out
das
mov
mov
sub
push
adc
out
call
sub
pop
push
adc
cmp
data16
sahf
adc
mov
mov
lret
cmp
bswap
xchg
out
movsl
movl
int
jns
or
insb
mov
cltd
dec
dec
cmp
or
sbb
mov
sbb
aad
std
adc
or
sbb
pusha
movsb
mov
sub
mov
hlt
mov
lret
push
inc
mov
dec
and
lea
cmp
mov
adc
sub
pushl
fbstp
lahf
mov
add
aaa
cmp
add
sbb
imul
inc
add
insb
or
ja
stos
in
imul
cmp
and
adc
inc
inc
lock
sub
mov
xchg
sti
push
inc
shld
or
xchg
adc
les
dec
xor
imul
add
add
inc
add
cltd
mov
pop
xor
call
add
sbb
out
cmp
jle
das
sbb
or
cmc
and
mov
ret
fucomi
std
cmp
push
int3
push
cmpsb
scas
cmc
inc
adc
mov
xchg
fcomps
cmp
aas
adc
aas
sbb
mov
inc
shlb
js
mov
and
int
rolb
cmp
cmp
jg
pusha
sti
inc
sbb
out
mov
arpl
dec
xor
mov
shlb
loopne
lcall
fbld
xchg
les
pop
ffree
int3
pushf
add
je
cmp
test
pop
cmc
xor
shl
inc
inc
xchg
xor
in
out
in
popf
add
jmp
xchg
add
pop
inc
cmc
mov
sub
sbb
je
cs
push
roll
out
test
mov
iret
jl
or
push
ss
or
dec
dec
dec
rorl
sar
addl
cmp
cmpsl
push
popf
mov
bound
frstor
jbe
add
daa
sbb
sbb
cmpsl
je
mov
lock
repnz
adc
mov
xchg
int
stos
sbb
ret
push
push
dec
and
ror
mov
lock
mov
sbb
push
xchg
xor
sub
sbb
aas
and
into
xchg
sbb
add
lea
outsl
out
loopne
or
inc
xchg
push
fbld
mov
popf
xchg
mov
in
test
lea
dec
inc
adc
aam
xor
push
popf
scas
push
fisttps
lcall
or
mov
add
xor
fldl
repnz
mov
imul
mov
xchg
incb
push
lds
xchg
xchg
add
sub
jae
or
sbb
and
lods
in
xor
into
in
or
and
int
sub
jle
iret
mov
pushf
push
pusha
inc
addl
jle
stos
cmpl
shrb
in
xorl
jo
xor
movaps
mov
lret
xorl
mov
inc
xor
push
mov
aam
push
or
add
insb
pop
lret
sbb
xchg
jp
push
or
add
insl
sub
popa
das
inc
test
adc
addr16
cwtl
mov
add
int3
sbbb
iret
cwtl
and
cmp
inc
xchg
or
sbb
inc
add
testl
int
cmp
test
add
sbb
jp
lahf
or
and
xchg
inc
dec
dec
out
xor
bound
inc
mov
or
fisttpll
daa
add
mov
lods
push
ret
bound
shll
and
cmp
add
or
call
lock
shlb
adc
leave
daa
ret
mov
or
test
enter
and
ret
outsl
pop
sub
mov
inc
adc
mov
xlat
sahf
mov
xchg
sub
sbb
in
dec
ret
fdivrl
aam
sahf
jo
divb
or
fwait
notb
sub
pop
mov
mov
push
and
into
rclb
ficompl
test
les
sbb
adc
sbb
out
call
dec
xor
mov
sbbl
clc
pop
adc
adc
or
pop
jl
pop
push
mov
pop
push
adc
xor
mov
xor
xchg
sub
add
mov
stos
gs
pop
stos
mov
cltd
push
push
sarb
add
daa
mov
iret
dec
fmulp
aaa
mov
inc
sub
imul
leave
push
imul
mov
je
fcmovnbe
test
outsl
dec
inc
fildll
mov
xchg
imul
cmpsl
clc
popf
fmuls
inc
sbb
cli
lret
adc
fdivs
pop
push
js
lret
in
imul
scas
fidivs
sbb
adc
dec
test
popf
movsb
test
pop
mov
dec
data16
movsb
idivl
push
xchg
jge
iret
mov
iret
lds
dec
shl
stos
sub
lret
adc
mov
jno
pop
or
jo
sbb
aas
pavgb
mov
adc
add
inc
sub
mov
adc
daa
pop
test
mov
fsts
mov
movswl
fidivs
stos
jecxz
in
lret
mov
popf
mov
jbe
out
int3
pop
mov
mov
or
das
jecxz
jl
shrl
and
ret
enter
into
push
lock
cs
outsl
and
or
outsb
sahf
push
das
pop
rclb
dec
sbb
jbe
or
nop
mov
scas
push
lods
push
ret
inc
add
add
mov
iret
xchg
lret
dec
mov
add
mov
ret
lea
pop
mul
xchg
jmp
pushf
push
je
daa
or
sti
movsl
es
or
and
push
xor
xor
aaa
stos
xor
cmp
sub
sbb
and
fbstp
pop
add
es
mov
roll
jbe
repnz
scas
xchg
or
xlat
popf
mov
sti
dec
rolb
test
adc
fisttpll
cmp
cmpsl
or
xchg
fidivl
adc
aaa
push
and
cmp
nop
shrb
push
daa
scas
and
cmp
daa
mov
js
shrb
out
push
mov
lds
and
sbb
nop
rclb
mov
pusha
imul
cltd
sbb
jbe
xor
push
in
sub
aam
inc
xchg
xchg
js
shlb
pop
mov
sub
add
xchg
mov
push
or
xchg
mov
fildll
scas
imul
mov
sbb
lods
test
fildll
jl
in
aam
arpl
aaa
das
cwtl
popf
xchg
lret
mov
gs
lea
sti
sub
mov
jb
push
sti
divb
mov
mov
fs
test
roll
sbb
push
faddl
xor
dec
outsb
adc
icebp
int
movsl
stos
sub
int
mov
xor
push
push
mov
test
icebp
inc
mov
pop
add
sti
out
mov
fstps
jle
int
adcb
sbb
out
jo
pushf
popf
jp
mov
hlt
sub
sbb
dec
mov
mov
rorb
ds
xor
lcall
xchg
mov
jo
push
inc
sbb
test
movsb
xchg
cli
sbb
mov
or
jo
subb
out
rcll
loop
mov
popf
sbb
or
inc
leave
sub
mov
jb
sti
sub
mov
sbb
stc
cs
lds
xchg
adc
inc
push
xorb
shlb
addb
pusha
xchg
sub
xchg
clc
push
dec
or
or
mov
sbb
cvtps2pd
sbb
or
add
int3
inc
rcrb
ret
cmp
fisttpl
push
dec
add
arpl
rcll
add
dec
push
cmp
fisubl
dec
mov
mulb
dec
xchg
adc
jmp
add
mov
leave
mov
jb
lea
jp
insl
mov
loope
inc
push
xor
leave
xchg
mov
cmpsb
andl
leave
xor
insl
mov
ret
add
jbe
sub
sahf
cmp
ds
cmc
xor
data16
out
testb
nop
and
xor
pop
mov
adc
pop
add
pusha
int
bound
sub
and
insb
aam
sub
pop
shl
cmp
loopne
ljmp
sbb
out
clc
push
inc
pop
inc
jbe
or
mov
sti
shll
xor
rorl
add
mov
test
repnz
sbb
mov
push
popf
jo
aaa
add
mov
xchg
pop
jne
xchg
adc
divb
lock
push
inc
dec
nop
jns
insl
ja
dec
jmp
mov
mov
int
in
test
xchg
scas
jmp
lea
jbe
adc
int
loope
sub
mov
scas
lcall
xchg
or
inc
out
sub
push
outsl
cs
cmpsb
loop,pn
cltd
out
and
cmp
test
subb
lods
scas
sub
jecxz
lahf
mov
int
push
inc
pop
xchg
dec
mov
leave
push
adc
mov
xor
lcall
in
or
xchg
push
outsl
sub
dec
cmp
add
mov
fwait
orl
inc
js
ret
popa
daa
movswl
sbb
or
lahf
xchg
mov
push
push
sbb
sti
data16
rorl
sbb
orb
xor
push
andb
subl
orl
push
push
or
fldenv
add
popf
xorb
inc
fadd
outsl
and
push
clc
insl
movsl
out
mov
sub
repnz
mov
push
sbb
pop
mov
sbb
inc
mov
adc
in
jg
xchg
loop
mov
sbb
movsb
mov
hlt
mov
fwait
hlt
sbb
stos
xchg
hlt
lds
pop
lods
fisubs
cmp
sub
inc
sub
add
cwtl
mov
sub
out
xchg
incl
pop
adc
fistps
lock
push
adc
adc
iret
lock
ret
mov
add
mov
sbb
ret
xchg
push
repz
sbb
stos
or
and
dec
xchg
cmp
out
shll
mov
sub
push
pop
cs
mov
popf
mov
mov
pop
pop
or
lea
and
add
imull
popa
or
cmpsl
or
pop
cs
mov
push
jo
stos
outsl
sub
je
outsb
adc
and
jo
mov
and
fcoml
cmp
xchg
dec
mov
sbb
sarl
jo
mov
imul
jl
mov
sub
cli
jns
dec
mov
lret
or
dec
fldpi
imul
jno
fwait
aad
pop
and
fwait
jp
or
fwait
sub
sbb
mov
inc
leave
sub
mov
push
mov
add
or
inc
lock
add
arpl
ja
pop
pop
arpl
push
inc
and
push
int
pop
adc
xchg
inc
mov
xchg
fxch
adc
das
jp
scas
push
rol
or
mov
jo
lds
or
sub
inc
push
cs
lock
inc
fsubs
add
loope
int3
xor
lea
bound
icebp
lcall
adcb
test
xchg
movsl
mov
sbb
pop
jno
outsb
push
cmp
sub
push
or
movsl
cs
fmull
js
adc
imul
sub
push
mov
xchg
jae
fisubrl
jns
mov
jmp
sub
nop
lods
cmp
rol
lahf
mov
loopne
sar
cmp
jns
ljmp
or
jp
scas
sbb
mov
aaa
dec
pop
push
jle
inc
ss
loope
sbb
fiaddl
add
test
stos
push
jg
es
dec
mov
xchg
push
shlb
add
mov
inc
cmp
mov
dec
sub
dec
loop
push
fisttpl
cs
mov
imul
in
xor
lock
xor
add
cli
out
adc
sub
xor
fs
cmp
pop
mov
icebp
cmpsl
cwtl
es
xorl
xor
ret
imul
lods
inc
push
lock
add
stos
sub
cltd
cmc
add
adc
add
pop
mov
test
dec
cmp
mov
inc
push
ret
aaa
sbb
sbb
inc
out
sub
lds
or
insb
lret
sbb
sub
shll
or
xorb
or
push
out
inc
ror
js
sub
out
xor
dec
mov
push
insl
testl
xor
aad
daa
lret
dec
mov
lea
sub
adc
int3
xchg
push
mov
stos
std
pop
addl
sti
lcall
lods
insl
lods
push
adc
mov
add
push
das
cmc
faddl
ja
in
ret
xchg
push
add
or
aad
lahf
fisttps
sbb
out
push
add
jecxz
inc
rorb
inc
inc
cmp
shll
shl
cmp
lods
mov
add
jmp
or
pop
add
fs
xchg
cmp
mov
mov
sub
jle
pusha
into
cmp
into
mov
sahf
nop
push
or
sub
xchg
pop
sbb
sbb
push
add
pop
sub
pop
inc
xchg
pushf
cld
mov
mov
addr16
push
push
or
in
or
add
mov
mov
lock
cwtl
ljmp
shll
sub
cmp
xchg
sub
icebp
xchg
push
sub
rolb
sbb
jne
out
shl
mov
add
dec
adc
int3
pop
cmovo
leave
aaa
call
aaa
mov
out
outsl
les
push
cmp
popl
xchg
in
out
subl
adc
int
lds
sub
ss
insb
call
sbb
or
ret
out
jg
cmp
mov
lock
cli
or
inc
mov
enter
pop
mov
mov
push
ja
mov
jnp
pop
stos
ds
push
lcall
add
mov
shrl
inc
pushf
jmp
outsl
cld
aaa
rol
mov
roll
pop
mov
lock
jo
inc
mov
push
sub
cmc
ffree
call
adc
loopne
lret
ja
mov
add
jmp
push
add
jo
xchg
mov
movsb
nop
sub
mov
dec
sbb
movsb
sub
mov
pop
xor
mov
out
pop
pushf
xchg
decb
xchg
stos
popf
into
cmc
fmul
iret
dec
repz
lcall
jb
adcb
filds
popf
mov
fsubr
fisttps
testl
add
pop
pop
mov
test
fstl
sub
pop
mov
jmp
flds
push
lds
jecxz
or
aaa
xchg
mov
or
and
or
sbb
sbb
data16
inc
cmp
out
lods
cwtl
push
mov
in
inc
jne
pop
mov
push
mov
add
stos
xchg
mov
aas
stos
adc
sub
ss
sbbl
pop
popf
ss
fcoml
fsubrl
lcall
xchg
add
fmuls
in
lcall
mov
fistps
shl
cmpsl
adc
pop
and
fisubl
add
sub
mov
jnp
test
into
test
pop
sahf
add
mov
pop
add
stos
test
cmp
push
fs
lcall
roll
mov
dec
stos
adc
xchg
push
lds
or
mov
call
inc
mov
loop
lea
lods
in
dec
pushf
into
popf
fnsave
ljmp
add
sbbb
lret
inc
bswap
or
and
cmp
lahf
insb
ja
hlt
sbb
inc
ja
hlt
imul
sub
add
int3
das
cmpsl
call
jns
ss
dec
pop
mov
ret
adc
lock
sub
add
loop
pop
and
ss
scas
sbb
mov
add
sub
ljmp
pop
add
lock
insl
jecxz
cs
scas
mov
outsb
xchg
imul
sub
or
adc
cmp
out
addb
cltd
mov
lcall
sahf
imul
inc
adc
mov
dec
ret
loopne
push
inc
add
dec
inc
mov
movsb
lcall
ret
sti
lahf
ss
ffree
in
cmpl
mov
xchg
pusha
inc
jns
movsl
dec
cmp
out
pushf
adc
adc
sub
pop
stos
mov
cmp
jbe
cmp
add
fimull
out
push
mov
sti
daa
jg
outsb
je
add
adc
ret
cmpsl
sahf
incl
inc
xchg
dec
lds
mov
aas
lcall
cmpsl
js
pop
cmp
pushf
or
lods
rolb
add
aad
rorb
scas
mov
stc
sub
add
mov
push
push
sbb
ja
add
push
push
ljmp
xchg
add
adc
cs
mov
mov
xchg
xor
pop
or
xor
jns
outsb
cmp
pop
les
add
xchg
mov
jl
or
mov
push
ss
andl
pushf
paddsb
in
sub
sbb
roll
adc
cmp
addr16
mov
idivb
sub
push
inc
ss
popa
stos
aas
lods
sbb
xchg
sub
pushl
fwait
call
cmp
mov
adc
mov
ja
inc
dec
jecxz
daa
lret
cmp
loope
sub
mov
out
adc
mov
jbe
xor
jb
adc
ds
repz
xor
lsl
cwtl
inc
xor
pushf
mov
sti
lret
adc
outsb
sbb
xlat
pop
inc
pop
pop
push
mov
push
mov
mov
mov
sbb
ss
test
dec
in
push
sbb
push
das
mov
push
adc
das
in
xor
xchg
push
xor
inc
shlb
dec
inc
addr16
mov
sub
ret
mov
mov
cmp
daa
sbb
xor
lret
loopne
sti
test
dec
pop
xor
cmp
adc
in
mov
idivb
ror
subb
fldl
pop
pop
cli
add
pushf
inc
cmovp
adc
sub
repz
jae
test
aas
mov
mov
fiaddl
js
sbb
shl
xchg
mov
dec
lahf
popf
fisttps
or
mov
mov
ret
dec
mov
or
gs
dec
sarb
leave
pop
mov
push
sbb
or
sub
mov
sarl
pop
test
rorb
daa
sub
adc
sbb
mov
push
sbb
cmp
pop
push
bound
inc
popa
inc
inc
pop
out
fmull
in
sbb
cmc
adc
mov
stos
sub
adc
mov
mov
dec
push
dec
pop
ret
js
cmp
loope
sahf
and
mov
movsb
in
dec
lods
js
int3
push
lea
cltd
push
cltd
pusha
rcl
jae
movsl
push
scas
cltd
repz
pop
movsl
push
xchg
sar
out
pushf
addl
inc
pop
cmp
jno
rorb
in
pop
xor
and
lds
dec
sbb
inc
testb
dec
inc
ret
daa
hlt
lock
pop
decl
or
daa
dec
inc
je
mov
mov
pop
push
xchg
sbb
cltd
cmpsb
pop
add
notb
pop
fwait
stos
testb
xlat
fbld
add
cmpl
mov
lret
les
jnp
ficoml
xor
test
fstl
fstpt
sub
orl
outsb
dec
jg
xorb
cmp
cmp
loop
cmp
sub
cmpl
sub
inc
ljmp
xchg
sub
push
adc
les
add
jecxz
push
sub
adcb
mov
cs
in
or
cmp
xchg
or
int3
add
outsl
sbb
pop
loopne
pop
sub
mov
and
jmp
test
sbb
rcll
outsl
cmpsb
or
and
fs
or
add
xchg
push
lret
inc
out
xorb
rcrl
jmp
movsb
fcmovb
sbb
add
fadd
lahf
out
push
mov
mov
or
scas
mov
mov
sbb
inc
js
xchg
sub
or
sub
inc
cld
inc
leave
push
jbe
adc
and
scas
je
mov
inc
and
js
adc
add
adc
lods
bound
xor
scas
aas
sub
inc
push
and
xchg
sub
test
add
out
shrb
add
pusha
jno
or
in
xchg
add
icebp
xchg
inc
pushf
dec
fsubrl
sbb
xor
hlt
mov
outsb
adc
mov
cltd
stos
mov
in
stos
insb
or
sub
int3
dec
sbb
adc
data16
scas
push
mov
stc
add
push
cmpsl
xor
push
push
and
out
add
sub
push
xlat
addl
popf
cs
out
xor
pop
mulb
xchg
add
inc
sub
js
jno
or
jne
aaa
sbb
add
lret
pop
mov
push
add
lahf
lret
fs
daa
jge
mov
ljmp
stos
pop
inc
or
and
or
add
scas
pop
jbe
out
out
push
shll
daa
xchg
iret
leave
imul
cmpsl
mov
pushl
mov
jns
int3
xchg
btr
cltd
nop
xlat
and
or
add
jns
gs
int
aaa
mov
sub
into
ret
dec
rcl
loope
loopne
sub
inc
ds
push
sub
pop
fldt
xor
outsb
mov
xchg
pop
or
or
fidivs
sti
lret
scas
scas
mov
mov
mov
pusha
mov
in
bound
adc
data16
fistpl
sbb
xchg
add
and
outsb
jae
out
test
adc
in
xor
adcl
lods
je
add
jae
nop
cmpsl
gs
test
xchg
scas
mov
cmp
ficompl
inc
andb
cmp
mov
jns,pn
add
ds
push
mov
push
mov
inc
push
addr16
dec
push
xchg
shlb
push
mov
pop
pop
xchg
cld
cmp
lcall
xchg
es
sub
push
clc
mov
test
push
packssdw
addb
testl
das
xor
ds
pop
lret
out
pushf
adc
mov
data16
or
cld
rclb
mov
mov
out
iret
jae
push
xorl
jecxz
sbb
pop
sbb
mov
insb
pop
fimuls
mov
test
cmp
mov
and
mov
push
call
mov
imul
push
int3
and
lret
sbb
mov
lahf
sti
push
ds
inc
adc
jg
jmp
or
fisttpl
lea
inc
adc
loopne
sbb
cld
outsl
xor
icebp
lea
inc
xchg
pop
dec
dec
jno
lea
adcl
out
pop
call
pop
lds
jno
or
insb
cli
sar
or
dec
sub
pop
imul
sbb
in
or
adc
lds
add
jbe
sbb
mov
or
inc
sbb
mov
fisttps
hlt
jno
mov
sub
jno
and
push
inc
xchg
mov
cwtl
sarb
sub
mov
icebp
mov
sbb
sub
sbb
xor
xor
cli
jo
cwtl
sub
out
pop
mov
addb
lods
jno
cmp
push
jns
fsubr
in
add
xor
inc
imul
cld
je
jmp
mov
jmp
int3
aad
call
push
icebp
bound
cmp
test
aam
xchg
outsl
add
xor
ss
mov
push
jns
mov
data16
addr16
sub
adc
out
mov
add
mov
test
daa
add
push
pop
mov
mov
inc
cmp
adc
mov
addr16
sbb
push
pop
jmp
mov
pop
inc
xor
sbb
xchg
or
add
mov
lds
or
pop
jp
or
subl
rorl
cmp
inc
les
sbb
cltd
stos
daa
xchg
popf
cli
ret
adc
int
adc
test
push
fnsetpm(287
push
cmpsl
inc
xchg
xor
push
cs
xchg
ss
aas
popa
mov
xor
sub
sub
xchg
stos
repnz
adc
xchg
push
jnp
xchg
imul
mov
fldcw
add
mov
sub
sbb
xchg
push
aaa
inc
std
jne
mov
jmp
mov
xchg
push
daa
push
adc
fcoml
jmp
xor
cmpl
add
lret
lea
and
adc
pushf
int
inc
sub
sti
je
sub
add
xor
es
inc
out
xchg
push
and
mov
mov
sbb
mov
push
push
xor
push
xor
sub
outsb
shrb
pop
push
mov
lods
sbb
inc
or
mov
add
lds
add
jbe
mov
stos
jle
jle
sbbb
jl
invd
out
adc
dec
movl
add
rorb
xchg
mov
xchg
fistl
pushf
mov
mov
mov
mov
inc
or
lret
stos
inc
fisubrl
outsb
roll
inc
lcall
inc
push
push
ret
ss
mov
push
adc
ret
xlat
lea
pop
lea
orl
leave
or
lea
pop
cli
pop
push
cld
in
pop
popf
inc
roll
cli
pop
sbb
out
mov
jmp
xchg
jmp
sarl
mov
jae
or
inc
int
sub
dec
lea
int
or
mov
adc
add
xchg
imulb
cmpsb
leave
test
xor
jno
ficoml
cmp
mov
cmp
jp
xchg
sbb
mov
test
push
fcomip
out
dec
fwait
inc
movswl
jns
or
cmp
dec
mov
pop
cmp
sbb
loop
scas
add
lret
fwait
aaa
fmuls
add
fcomps
cmp
clc
ljmp
mov
xchg
mov
mov
insl
add
icebp
or
mov
pop
or
outsb
sbb
mov
repz
xor
cmp
cmp
out
hlt
in
jmp
sub
mov
add
aaa
shll
and
outsb
fisubrs
comiss
das
repz
or
lods
inc
xchg
sbbb
mov
adc
push
ret
jae
fwait
adc
push
cmpb
fcomi
loope
cmpb
mov
add
adc
mov
scas
andb
pop
popf
mov
insl
je
ret
fcos
mov
xlat
das
jbe
dec
mov
lock
inc
or
mov
and
arpl
jae
mov
ficomps
arpl
les
push
add
call
scas
sbb
test
lock
mov
outsl
stc
cmp
dec
nop
cli
or
inc
and
pop
addb
push
xor
outsl
jmp
and
or
out
dec
aaa
or
orl
sbb
dec
faddl
lock
js
pop
pop
mov
into
and
dec
sbb
or
fidivs
scas
push
push
dec
call
xchg
fimull
mov
inc
enter
repz
mov
scas
stos
clc
scas
addr16
rcrb
pop
gs
imul
cwtl
jle
movsl
addr16
lock
pop
push
in
push
cmpsl
push
xchg
xor
inc
add
icebp
ja
out
push
inc
jp
pop
fdivrl
lret
lock
mov
push
mov
push
cltd
cmpsb
and
sbb
add
pushfw
in
stc
pushf
jno
or
push
or
xchg
out
cmp
cmpsl
inc
insl
pop
loope
xchg
std
fmull
shrl
pushl
stos
push
cld
call
sbb
lcall
in
rolb
inc
sbb
add
cmp
adc
arpl
mov
cmp
xchg
push
add
mov
pushfw
loope
mov
or
popa
lds
dec
rorb
xchg
lods
out
cmp
pop
inc
inc
xchg
xchg
push
sarb
dec
ds
pop
push
mov
sub
test
cmp
jl
leave
jl
popf
pop
daa
pop
adc
jnp
push
loop
pop
stos
mov
outsb
add
aam
xchg
loope
enter
adcb
pop
cmpsl
ljmp
fiadds
and
gs
add
mov
mov
mov
lahf
push
pop
rol
in
inc
outsl
je
and
popf
fwait
inc
push
cltd
jle
mov
or
mov
pop
pop
aaa
mov
sub
cmp
sub
test
jmp
pushf
inc
xchg
mov
mov
push
xchg
fwait
pop
push
out
sti
push
orb
xchg
movsl
jb
je
pushf
inc
add
push
ss
das
mov
pop
inc
mov
sbb
lods
xor
fimuls
xchg
mov
pop
xchg
pop
dec
fs
aad
mov
stos
mov
fimuls
xor
insb
and
fadd
mov
push
or
adc
cmp
xchg
pop
jnp
mov
data16
sub
pop
mov
or
shl
inc
fistl
mov
adc
cmp
pushw
jo
imul
in
mov
xlat
pop
fs
rolb
mov
or
cmp
mov
jecxz
out
jmp
pop
fcoms
adc
xor
jmp
mov
repnz
sbb
sub
or
push
sbb
test
subb
pop
bound
or
jbe
inc
imul
es
pop
into
xlat
push
fiaddl
test
pop
xchg
les
mov
nop
jg
scas
loope
roll
ret
lds
fiaddl
jmp
mov
sbb
ret
add
xor
xchg
add
push
rcrl
sub
iret
and
and
cli
mov
in
xor
jns
orl
mov
enter
jg
ficoml
mov
call
les
add
leave
or
adc
les
jge
lahf
xchg
fwait
dec
ficoml
in
mov
movl
and
push
inc
xchg
nop
fldcw
sbb
sub
inc
xchg
cmp
mov
dec
pop
nop
out
jle
sub
testb
jb
mov
daa
cmpsb
into
ja
jno
test
and
inc
xchg
push
mov
lret
xchg
pop
xor
adcl
push
mov
sbb
mov
pop
mov
stos
cmpsl
and
ret
mov
add
sub
sarb
push
bound
xchg
jo
mov
out
xchg
push
setb
jne
push
cmpsl
dec
jmp
int3
test
mov
inc
int
movsb
pop
sub
dec
mov
xchg
ret
out
push
dec
icebp
aaa
mov
mov
fucomip
lret
popa
outsb
jo
jle
sub
push
add
into
sbb
sbbb
lret
add
add
sub
clc
inc
jo
inc
dec
xor
lds
mov
cmp
xchg
mov
arpl
mov
call
add
movsb
pop
sub
stos
stos
sbb
inc
lcall
xchg
mov
add
fimull
cmp
cld
add
adc
sbb
inc
les
adc
repnz
cmc
sub
icebp
mov
add
sbb
rorb
cmp
aam
xor
add
dec
xlat
xor
lock
or
aas
sub
adc
xorl
test
fwait
mov
sarb
xchg
ret
push
dec
pop
jne
sub
xlat
push
mov
mov
hlt
pop
pop
inc
lds
and
sbb
lea
ret
sub
lods
push
or
test
int
xor
adc
aad
add
adc
mov
add
cmp
xchg
lahf
fimuls
hlt
dec
mov
in
addl
int
pop
pop
fiaddl
jecxz
arpl
test
add
mov
mov
xchg
imul
push
push
enter
mov
outsb
fimull
mov
fwait
hlt
int3
test
or
lods
dec
xchg
cmpsl
shll
mov
fimull
xchg
sahf
mov
fdivr
test
rclb
dec
push
inc
outsl
femms
jg
mov
pop
loopne
cmp
cli
es
adc
push
ss
add
add
add
and
or
movsb
xchg
adc
sbb
das
cwtl
imul
stc
adc
adc
sbb
mov
sbb
pop
cmp
frstor
add
mov
iret
xor
lods
mov
sbb
inc
fwait
shlb
sbb
push
iret
pop
daa
adc
fwait
pushl
lock
cltd
insl
fwait
aaa
push
insl
mov
lods
push
stos
push
lcall
adc
inc
cltd
lods
mov
xchg
cmp
scas
push
or
adc
call
sub
dec
add
mov
popa
lret
lods
xlat
fwait
lds
add
inc
enter
sahf
fldcw
mov
std
aas
movlps
out
sub
push
mov
xor
or
int3
out
xchg
movsl
aaa
sub
mov
inc
mov
ret
lea
push
int3
insb
inc
or
cmpsl
out
pop
in
cmp
mov
lods
lds
std
push
pushf
and
cltd
cmpsl
fwait
aaa
jp
sub
and
dec
dec
shrl
xchg
add
mov
sub
jle
inc
jb
inc
inc
mov
sub
addl
jae
pop
lret
insl
decb
dec
push
sbb
daa
xchg
xchg
stos
mov
xchg
push
aas
ret
inc
outsb
int3
or
sbb
das
push
push
sbb
xor
fwait
imul
aaa
stos
enter
mov
sbb
xchg
imul
add
jns
sub
xlat
or
insb
sub
mov
push
fwait
inc
jl
int
insl
xlat
fwait
lds
sub
add
aad
bound
fstl
aaa
fs
inc
mov
push
cmp
or
jp
pop
sbb
movsb
ret
inc
call
sbb
push
jne
int3
lds
adc
sbb
mov
out
xchg
pushf
fwait
lds
sub
xor
push
mov
divl
xlat
push
mov
xchg
popa
aaa
in
add
pop
je
mov
imul
mov
add
data16
mov
out
ss
imul
adc
inc
jno
xchg
xor
or
es
and
push
mov
shll
int
test
dec
mov
xor
mov
cmp
in
fwait
mov
xchg
mov
fwait
mov
fwait
imul
lea
add
into
and
jb
sbb
daa
mov
and
adc
out
imul
ret
popa
or
mov
mov
xor
or
mov
insb
mov
mov
mov
negb
loop
mov
and
sbb
jns
xor
mov
sbb
dec
xor
sahf
add
inc
or
add
ret
inc
mov
sub
test
add
jae
insb
gs
mov
shrl
sbb
cltd
pop
and
inc
dec
pop
jbe
cld
sub
adc
rol
lds
add
std
cmp
insb
gs
ret
frstor
sub
sbb
incl
or
mov
cmpsl
add
cmp
mov
shll
mov
cmpsl
xchg
mov
push
shrb
or
jb
sub
and
stc
mov
adc
test
or
in
lahf
sub
iret
nopl
andb
sub
sbbl
add
sub
lods
orb
rolb
add
mov
lret
push
arpl
inc
adc
imul
pop
sbb
pop
push
sbb
push
mov
mov
jo
and
lock
push
sbb
inc
inc
add
push
icebp
call
lea
bound
sub
iret
wrmsr
call
in
cmova
xlat
mov
push
add
in
adc
sti
ljmp
scas
lcall
or
lahf
test
bound
int
push
dec
movsb
orl
in
or
dec
movl
push
xchg
sbb
inc
jne
mov
sbb
dec
add
aaa
pop
dec
or
dec
pushf
test
cwtl
dec
test
leave
and
add
orl
mov
pop
pop
push
lods
lea
inc
dec
js
rorb
jae
pop
cli
test
mov
cmp
add
pop
add
sbb
ret
mov
stos
imul
sub
mov
enter
inc
pop
jae
popf
ljmp
sbb
and
shll
inc
mov
roll
push
sbb
xchg
jne
call
sti
or
push
lahf
add
imul
in
test
add
test
sbb
adc
aam
imul
or
movsl
sbbb
mov
adc
andl
fadds
rorb
les
cmp
scas
or
adc
cs
pop
pusha
push
push
mov
int3
lock
cs
lcall
or
mov
test
dec
dec
fidivl
mov
mov
pop
jg
push
das
mov
push
sbb
dec
pop
pop
xchg
rcrb
arpl
test
or
lods
xchg
and
out
mov
mov
or
adc
fbstp
jp
push
adc
outsl
jmp
les
bts
or
jns
test
scas
pop
mov
out
fsubs
dec
mov
orl
ss
sub
shlb
sub
roll
lods
or
push
pop
sub
inc
rorb
push
sub
fiadds
push
fisubrs
sbb
and
or
adc
jo
lea
sbb
pop
daa
adc
pop
mov
xchg
sbb
inc
data16
push
dec
pop
xor
mov
scas
xchg
insb
sub
xor
std
insb
xchg
aad
ret
cmp
or
xchg
popf
addr16
and
test
adc
into
cwtl
les
adc
pusha
adc
xor
xor
popf
dec
ret
adc
xor
mov
push
pop
jno
adc
mov
or
fisttps
xchg
sbb
aam
scas
lds
pop
shll
popa
push
out
test
xchg
add
sbb
in
ds
push
mov
xchg
test
insb
push
lea
lea
adc
loope
scas
ret
mov
dec
and
mov
jae
gs
bound
ret
out
adc
stc
mov
mov
add
daa
push
push
adc
xlat
cmpl
iret
outsl
mov
cmc
les
rolb
test
clc
dec
or
pop
mov
mov
adc
ljmp
and
mov
pop
ja
andb
push
in
push
inc
test
into
outsb
mov
frstor
xor
lock
pop
inc
jb
mov
mov
fbstp
xchg
lods
decb
jns
mov
fcoms
fldenv
movsl
sbb
or
or
inc
das
add
add
movl
adc
stc
and
out
sub
pop
mov
and
mov
or
jo
dec
sbb
xor
sub
xor
sbb
clc
adc
dec
sbb
aas
and
sbb
lock
add
mov
push
sbb
adc
xchg
jbe
sbb
shl
xchg
or
je
cmp
sub
test
push
addr16
clc
xchg
sahf
xchg
lea
push
push
cld
inc
add
dec
fwait
stos
mov
adc
sbb
push
int
gs
cmp
test
push
cltd
push
rorl
pop
pop
inc
pop
hlt
jae
sub
xchg
leave
push
sbb
mov
push
pop
sbbb
xchg
lods
push
mov
insb
fcoml
pushf
xchg
fsubl
out
mov
cmp
mov
sbb
mov
nop
mov
cmpsl
mov
aad
add
adc
test
sub
mov
adc
lahf
mov
lea
cmpsb
out
mov
ret
xchg
or
or
or
lods
imul
ds
cmc
in
aam
mov
mov
inc
loopne
cmp
xchg
pushf
xchg
add
mov
dec
bound
sub
test
xchg
adc
imul
cmp
mov
or
daa
sbb
sbb
int3
ror
xchg
mov
je
pop
iret
mov
or
mov
xor
dec
lock
shlb
dec
push
aaa
lea
cwtl
jmp
xor
in
jmp
outsl
sub
mov
fldl
mov
loopne
mov
mov
mov
sbb
adc
mov
fstps
mov
xor
mov
ss
imul
mov
dec
pop
mov
push
inc
sbb
out
cmp
lcall
mov
push
in
cli
inc
pop
push
test
rorb
pop
test
pop
mov
or
push
movsb
loopne
sub
int
add
mov
inc
mov
mov
frstor
insl
test
mov
sub
cmp
push
inc
inc
pop
cmp
xchg
aaa
xor
mov
cmp
lods
xor
stos
mov
xor
popfw
adc
cs
daa
ds
bound
dec
cmp
cmp
lds
pop
lcall
jp
push
mov
fimuls
jp
cmp
inc
jg
cld
xchg
inc
push
pop
or
mov
ret
call
sbb
inc
fisubl
jb
orl
xor
rcll
je
jl
cmp
or
mov
inc
fldenv
add
add
jae
sysret
mov
mov
mov
rolb
xor
adc
test
fiadds
rcrl
sahf
sub
xchg
pusha
hlt
icebp
add
pop
seta
in
sbb
cmp
mov
pop
outsl
ret
dec
dec
jo
out
andb
test
ds
out
cli
sub
outsb
shl
cs
adc
mov
fisubrl
mov
xor
inc
xor
das
notb
test
push
das
mov
enter
adcl
add
cli
fs
pop
pop
or
aad
inc
add
push
dec
leave
add
sub
sub
into
sbb
les
or
iret
ficomps
and
iret
loope
ficoml
sub
sbbl
push
inc
loop
push
fcoms
sub
push
and
sbb
sub
xor
mov
push
popa
dec
pop
out
add
lds
and
nop
xchg
sub
rclb
lods
dec
push
sub
jns
adc
add
cmp
inc
pop
jp
adc
fisttpll
loopne
std
add
fcmovnu
in
gs
pop
sbb
andb
jb
mov
add
pop
add
sahf
push
pusha
pop
xchg
pop
sub
out
mov
fisubrl
out
sbb
sbb
lahf
xchg
gs
notb
add
dec
cmpsl
pop
inc
fiadds
ret
cltd
mov
push
mov
pop
or
ljmp
lret
inc
mov
je
shlb
mov
addr16
inc
jbe
sbb
or
ret
test
les
pop
pop
adc
pop
inc
and
sbb
sbb
adc
nop
cmc
sbb
stos
mov
sbb
or
sub
outsl
pop
decb
mov
fsubrp
add
inc
fmull
icebp
in
sbb
lret
hlt
pop
mov
sbb
sbb
pop
iret
in
cmp
sbb
rcrl
mov
add
sbb
pop
idivl
and
fwait
ds
lret
imul
inc
pop
mov
adc
dec
adc
out
xchg
xchg
stos
adc
das
leave
addl
je
lods
sub
sahf
push
inc
fmuls
push
aas
add
push
inc
adc
pop
lret
xchg
push
pushf
popa
xchg
les
rolb
outsl
cmp
or
xchg
movsl
xchg
stos
adc
push
xchg
adcl
test
cmp
jae
les
mov
inc
imul
into
push
movsl
lcall
lcall
fbstp
and
xchg
iret
push
xor
jns
pop
dec
test
xor
mov
jl
test
rcll
outsl
inc
adc
imull
pop
jp
call
mov
inc
mov
rolb
xor
lahf
adc
test
lea
sub
cs
pop
cmp
pop
mov
cwtl
scas
popf
adc
pop
or
xchg
rorb
imul
pushf
cmpsb
inc
inc
mov
sbb
mov
xor
pop
adc
clc
rol
cmp
insl
popf
pusha
imul
add
push
es
insl
rcrl
imul
sbb
inc
out
adc
cmp
cmp
aam
mov
lret
xor
xchg
pushf
adc
mov
in
adc
stos
push
inc
xor
inc
inc
adc
push
ret
adc
cmpsl
mov
sbb
push
cltd
lea
inc
jp
mov
add
lock
inc
out
and
ss
sbb
subb
aas
jnp
jmp
roll
out
int
jno
fcmovb
loop
sub
sbb
xor
adc
sub
mov
repz
push
pop
fistpll
cmp
mov
test
pop
sub
das
sbb
hlt
mov
sub
jne
cmp
lahf
aas
adc
popf
add
pop
es
push
leave
pushf
wbinvd
mov
push
or
ret
inc
push
and
je
out
fdivs
pop
mov
adc
add
add
inc
jns
inc
out
add
dec
shlb
add
shrb
popf
test
mov
xchg
sub
fldl
dec
cmp
sbb
fisttps
fnstenv
or
push
sbb
and
push
fstl
push
push
lea
je
mov
aaa
sbb
pop
aas
sbb
add
sarb
xchg
frstor
stos
add
rcrb
idiv
xor
jo
and
mov
inc
lahf
mov
push
out
scas
xchg
pop
lea
int3
pushf
pop
arpl
arpl
addl
in
xchg
out
mov
add
or
sbb
int3
test
dec
std
xchg
pop
aad
mov
cmpsl
sbb
cmc
xorl
faddl
inc
data16
lock
sbb
mov
daa
pmulhuw
bound
je
jp
test
jns
cli
sub
negb
movsb
pop
popa
enter
jmp
push
clc
and
stc
lahf
loopne
leave
mov
cli
inc
nop
leave
mov
xor
push
or
xor
jge
jmp
add
and
mov
fistpl
xchg
test
stos
shlb
pop
and
cmp
jns
jno
add
imul
sbb
cwtl
fldenv
add
mov
arpl
and
cltd
cmpsb
arpl
dec
or
in
sub
xor
sbb
inc
mov
and
jb
xor
cmpsb
xchg
sahf
lods
and
outsb
flds
sbb
lds
sub
and
mov
subl
fs
mov
and
push
mov
cmpsl
sbb
sbb
add
inc
mov
addr16
test
jmp
cmpsl
sbb
sbb
inc
inc
lock
cltd
subb
sbb
jbe
addr16
fwait
xor
pop
addr16
ds
test
xchg
rclb
aam
or
pop
lea
push
xchg
pop
jp
fwait
mulb
xor
jo
gs
mov
mov
adc
data16
pop
xchg
add
push
sub
cmpsb
pop
mov
inc
adc
fs
sub
sub
adc
and
or
pop
jmp
scas
scas
cmp
int
std
pop
scas
aas
sbb
xchg
lahf
or
mov
xlat
cmp
jae
out
inc
movb
mov
aaa
inc
rcr
popa
sub
outsl
stos
int
push
test
jmp
jns
adc
ja
sbb
pop
imul
imul
test
push
push
cmpsl
mov
jo
pop
cmpsl
bound
mov
xchg
add
fcoml
jo
leave
jbe
push
mov
jne
inc
ret
or
scas
or
and
and
aam
in
lret
push
das
sbbl
xchg
scas
xor
cmp
fiaddl
pop
in
xchg
rcrl
rcr
std
cs
divb
jle
adc
leave
adc
pop
out
xor
pop
fisubrl
adc
inc
adc
xchg
mov
sbbl
ret
outsl
push
adc
cmc
mov
popf
lret
and
les
add
lret
mov
mov
mov
xchg
push
dec
cmc
adc
dec
stos
xor
pop
shll
push
sbb
sub
and
push
imul
lret
adc
inc
push
mov
sbb
out
imul
adc
cs
ss
pop
mov
jbe
push
stos
push
loopne
insl
fmull
fisubrl
sbb
mov
hlt
test
lret
cmp
add
and
xor
and
xchg
daa
sub
dec
add
adc
adc
jno
sbb
inc
test
pop
add
xchg
daa
or
dec
add
xor
or
and
aaa
hlt
dec
sub
adc
and
xor
and
adc
sub
dec
add
adc
adc
jno
sbb
xchg
test
pop
add
fldenv
or
dec
add
xor
sub
clc
aad
push
sub
xchg
daa
and
dec
add
sub
adc
jno
adc
fldl
sbb
adc
add
dec
add
or
adc
and
pop
mov
pop
push
and
and
addr16
push
dec
sub
sbb
xchg
adc
daa
sub
test
add
addr16
push
dec
or
sbb
sub
or
or
add
aad
shlb
sub
rorl
dec
mov
sub
push
adc
daa
sub
test
add
addr16
xlat
dec
or
sbb
cltd
popf
xor
rcll
xor
mov
pop
sahf
and
and
addr16
rorl
mov
sub
xchg
adc
daa
sub
test
add
addr16
sbb
or
sbb
push
popf
xor
rcll
xor
mov
pop
popf
and
and
addr16
pop
dec
sub
sbb
aam
adc
daa
sub
test
add
addr16
orl
pop
stos
popf
xor
rcll
xor
mov
pop
out
and
and
addr16
pushf
dec
sub
sbb
pop
adc
daa
sub
test
add
addr16
jbe
dec
adc
outsl
pushf
xchg
data16
dec
iret
out
mov
pop
fcompl
push
rorb
les
push
enter
pop
dec
add
or
pop
jne
clc
or
pop
jge
loopne
popa
in
gs
mov
mov
ja
repnz
out
jg
cli
mov
out
mov
loop
imul
mov
fimuls
pop
mov
mov
fimull
inc
or
adc
shlb
and
and
enter
int3
and
lock
hlt
and
clc
and
cld
and
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
xor
xor
cmp
jbe
int3
and
sub
push
pushf
adc
cmp
add
or
or
xor
xor
cmp
cmp
and
sbb
adc
adc
mov
jae
adc
fadds
mov
or
sbb
add
lock
lock
in
add
or
push
shlb
lock
mov
xor
aad
add
adc
and
add
cmp
popa
add
jbe
stc
mov
mov
idivb
test
push
or
xchg
jge
adc
sub
xchg
sub
xor
mov
sti
out
test
mov
sub
mov
jbe
xor
and
jo
sahf
pop
fsubr
insb
outsb
int3
pop
mov
scas
aaa
lea
int
inc
int
push
test
mov
cmp
call
imul
int
xchg
and
cwtl
mov
sbbl
push
push
mov
icebp
jns
shlb
and
jns
call
xchg
adc
movsb
outsb
xchg
push
outsl
out
stos
xchg
xchg
push
ljmp
loopne
scas
cmp
stos
fcoms
scas
loopne
ja
fwait
mov
xor
loopne
add
movsb
lea
lock
push
sbb
dec
and
cmp
out
fildl
add
das
adc
pop
aaa
sbb
adc
xchg
sub
sub
xor
cmp
inc
pop
and
jg
and
aaa
inc
or
sbb
xchg
insl
imul
or
aaa
mov
adc
lret
or
aaa
mov
imul
fadds
push
mov
imul
or
aaa
mov
cwtl
test
into
aaa
mov
adc
lret
or
aaa
mov
test
into
daa
mov
adc
lret
or
aaa
mov
adc
lret
mov
adc
lret
or
aaa
mov
adc
lret
or
out
fadds
push
mov
imul
or
aaa
mov
cwtl
test
into
aaa
mov
adc
lret
or
aaa
loope
add
mov
xchg
mov
addb
lds
lock
or
loope
mov
jge
shrl
mov
xor
adc
insl
push
pop
cmp
aad
and
sub
jecxz
xor
push
cmp
rclb
sub
lea
sbb
fimull
mov
push
and
ss
lret
mov
icebp
rorl
test
cmp
sub
lea
and
sbb
pop
outsl
adc
daa
sub
inc
pop
dec
adc
stc
sbb
xor
push
or
call
or
jbe
in
lret
or
xor
lea
cmp
sbb
pop
imul
daa
sub
inc
stos
dec
sub
and
adc
addr16
lea
sbb
sbb
pop
sahf
fsubl
xchg
cwtl
ss
aam
xlat
ds
fnstenv
push
sub
lea
sbb
pop
xchg
adc
daa
sub
inc
cltd
dec
sub
and
adc
addr16
lea
sbb
pop
pushf
fsubl
xchg
les
dec
inc
mov
mov
push
or
xor
dec
add
cmp
adc
insl
push
pop
and
test
pop
push
or
push
insl
fldl
sbb
fidivl
hlt
inc
mov
or
rolb
xchg
out
or
xor
pop
es
out
lds
and
cs
xor
daa
sub
inc
xchg
dec
sub
and
adc
addr16
rorl
dec
mov
push
pop
adc
popa
mov
stos
in
sub
sub
or
xor
xor
es
daa
cmp
dec
add
and
adc
insl
xchg
sub
test
xlat
push
cmp
rcrb
sub
lea
and
testb
lret
or
xor
xor
or
cmp
dec
add
and
adc
and
ljmp
push
fcompl
rclb
les
enter
int3
dec
pop
lock
hlt
jne
clc
add
cld
jge
loopne
popa
or
gs
call
insl
push
mov
es
jg
cli
and
out
and
loop
imul
and
and
and
fisubs
push
and
and
and
fisubl
inc
and
and
ret
negb
push
mov
jae
andl
mov
lock
jno
hlt
xchg
jne
clc
xchg
jns
cld
xchg
jge
loopne
popa
xchg
in
gs
call
xchg
insl
xchg
rclb
push
xchg
fcoms
pop
push
shrb
push
sahf
cmp
aam
rcr
pop
dec
out
push
rcll
fcompl
decb
dec
mov
mov
repnz
out
jg
cli
adc
xchg
and
adc
or
or
aad
movl
stos
inc
lahf
lret
adcb
add
roll
pop
xchg
sub
push
lcall
or
pop
test
out
sbb
dec
xor
dec
sub
les
pop
test
mov
mov
stos
cwtl
or
idivb
mov
jbe
mov
xor
and
mov
or
lods
scas
mov
stos
rolb
cmp
mov
push
mov
test
in
mov
push
insb
sub
xchg
pop
push
loope
inc
push
icebp
cmpsl
jge
pop
inc
mov
or
fcoms
in
xchg
fadds
mov
xchg
sbb
jmp
imulb
cmpsb
fwait
or
mov
sub
out
lock
inc
int3
jg
test
adc
inc
ret
dec
lcall
mov
test
mov
lcall
mov
je
addb
orb
orb
sbb
fstpl
mov
dec
es
shrb
or
add
sub
pop
dec
pop
push
out
aas
sahf
pushf
jmp
adc
lock
sub
adc
lea
cmp
cmp
adc
mov
fcomps
dec
shll
sbb
add
xor
fs
mov
int3
cmp
mov
clc
push
add
jle
sub
mov
inc
add
out
fadds
push
mov
imul
or
aaa
mov
pop
test
aaa
mov
adc
lret
or
aaa
mov
adc
into
pop
and
les
out
fadds
push
mov
imul
push
dec
mov
lret
or
aaa
mov
adc
lret
or
aaa
imul
test
into
aaa
mov
adc
lret
or
aaa
mov
pop
test
aaa
mov
adc
lret
or
aaa
mov
adc
into
pop
and
les
out
fadds
cli
jb
test
fwait
pusha
call
mov
adcl
loopne
xchg
in
in
cmp
ss
outsl
sar
scas
adc
xchg
xchg
rorb
fadds
iret
outsb
push
xchg
leave
je
sarb
add
pop
dec
int3
mov
mov
add
test
mov
gs
or
movsl
lahf
aaa
lea
push
cmp
scas
sbb
xor
inc
jmp
pushf
jo
mov
mov
push
stc
mov
xor
aas
incb
sub
popf
shrl
jnp
mov
pop
test
xchg
push
mov
sbb
lea
or
or
mov
mov
adc
xor
or
lds
into
push
sbb
lahf
push
movsl
add
sbb
sbb
mov
inc
test
jno
adc
or
or
push
push
add
add
popf
enter
mov
sbb
mov
push
ss
cmp
pop
fmul
popa
ret
or
sbb
addb
push
subb
xchg
in
fwait
cmp
pusha
xor
in
push
xor
test
sub
adc
push
sub
sub
cs
adc
sti
stos
mov
sub
sbb
sbbl
xor
sbb
in
sub
cmp
jo
daa
cmp
in
mov
push
jg
add
lds
cmp
xor
push
arpl
mov
jae
cmp
aam
sub
out
pop
or
cmp
inc
sbb
and
lds
fimuls
jl
jns
mov
cmp
push
outsl
mov
iret
push
pop
mov
aam
sub
jnp
rcrl
inc
xchg
in
stc
rorl
addr16
sbb
dec
outsb
dec
lcallw
pop
js
into
xchg
addl
add
in
in
fidivs
push
adc
lock
push
pop
mov
sbb
sub
push
pop
bound
nop
mov
daa
out
aad
dec
in
pop
andb
inc
outsb
pop
ret
aaa
add
ja
sub
fcompl
sbb
xchg
push
aas
dec
mov
addl
adc
cld
jecxz
repnz
mov
cmp
mov
lods
lret
add
lahf
xor
or
imul
jecxz
xlat
mov
mov
jl
ljmp
xchg
lods
cli
xchg
int3
popf
int
fsubl
xchg
mov
test
rcrb
add
lock
stc
sbb
das
iret
push
data16
or
mov
xchg
ss
add
cmp
fwait
les
frstor
sbb
es
add
es
jmp
xchg
pop
in
mov
mov
vdivpd
sbb
jno
inc
hlt
ret
sub
or
mov
jle
push
dec
cmp
xchg
inc
out
mov
xor
loopne
mov
cmp
inc
or
jg
scas
rolb
xor
dec
and
add
adc
and
sub
es
pop
dec
stos
sbb
xchg
sub
inc
icebp
daa
leave
jnp
ja
cli
loope
push
or
sub
sbb
ds
mov
lahf
out
xchg
into
sbbb
sbb
xchg
sbb
shll
mov
mov
roll
fdivs
cli
pmaxsw
inc
sub
in
push
pop
xor
cmp
cmp
js
les
movl
mov
sbb
insb
mov
fucom
and
push
daa
or
inc
aaa
insl
adc
les
sbb
daa
lods
xchg
repnz
mov
mov
dec
je
aad
and
imul
into
dec
jbe
lret
lahf
dec
bound
loop
bound
dec
adc
daa
mov
popf
loop
dec
lea
sbb
pusha
cmp
insl
orb
sub
mov
fsubrs
inc
or
inc
sarl
push
fistps
lcall
stos
inc
addr16
imul
dec
int
aad
into
or
cmp
inc
sub
pop
jns
inc
enter
fistps
pushf
int
dec
popf
insb
dec
gs
aaa
aam
std
daa
inc
sub
lods
lcall
loop
sub
bound
pop
loope
or
fmul
inc
xchg
mov
inc
jbe
xor
test
jae
pop
lods
mov
dec
sub
sub
sub
fistpll
test
shlb
add
adc
inc
test
mov
arpl
jbe
sub
inc
insb
inc
sbb
pop
lcall
jns
pop
xchg
cmp
xchg
lret
cmpsl
fiadds
aaa
outsb
popf
mov
daa
mov
lret
scas
or
or
out
or
popf
int
sbb
subb
xchg
cmp
dec
and
push
orb
jp
outsb
inc
jmp
in
jl
sub
pop
ret
cmp
cmc
test
mov
xchg
daa
inc
ret
pop
ret
test
or
xchg
bound
adc
lock
vcmpps
inc
test
jp
jbe
inc
sub
jp,pt
adc
inc
adc
push
add
lahf
ljmp
xchg
sbb
jmp
pop
lcall
int3
inc
mov
pop
push
imul
daa
out
inc
dec
or
xchg
add
test
xor
mov
dec
or
bound
add
inc
testb
cmp
lcall
subb
imul
fcompl
push
inc
popf
lds
inc
mov
mov
xchg
xchg
fildl
aaa
movsl
adc
push
pop
sbb
insb
lret
inc
in
jge
inc
lds
pop
adc
fs
inc
popf
enter
inc
ret
mov
sbb
push
sbb
adc
cwtl
push
dec
mov
dec
xchg
aad
rclb
ret
test
int
jge
push
popf
movsl
mov
aad
jbe
pop
or
scas
ret
or
bound
or
cli
adc
push
pop
xchg
xchg
jae
pop
push
xlat
or
xchg
jg
fbld
inc
sub
xor
or
pushf
adc
mov
lcall
sub
ds
or
aad
push
pop
pop
testb
and
dec
movsb
inc
push
mov
add
inc
and
fisttpl
fists
add
lret
or
adc
cmpsb
mov
les
into
mov
mov
idivl
dec
and
add
mov
loope
stc
mov
lods
add
adc
stos
test
das
adc
cmp
dec
add
add
mov
pop
inc
mov
pop
push
sbb
fists
or
fwait
lret
fnsave
inc
in
sbb
cmp
cmp
imul
jb
or
inc
mov
add
lret
dec
pop
lea
sarb
mov
dec
ljmp
jo
pusha
push
subl
orb
divb
adc
pop
push
aas
sbb
add
add
lret
mov
mov
stos
sbb
ret
stos
mov
xor
dec
jp
sub
movsb
push
xchg
aas
cmp
pop
cmc
in
pushf
mov
jne
pop
mov
imul
or
push
jo
out
cmpsl
and
pop
add
xchg
sbb
popa
mov
jmp
adc
sbb
imul
mov
adc
xor
push
jl
jnp
dec
or
jg
int
aaa
test
sub
int
inc
inc
push
movsb
scas
outsb
mov
stos
or
xor
or
cs
icebp
pushf
sub
insl
push
js
les
mov
mov
sqrtps
sub
out
add
pop
push
xchg
pop
idivb
xchg
dec
add
adc
or
pop
sbb
mov
inc
scas
inc
mov
inc
mov
push
dec
pop
in
out
jle
dec
test
dec
mov
jmp
lock
ljmp
push
neg
test
addb
sbb
xlat
push
add
adc
xchg
pop
inc
in
ja
push
test
inc
aaa
in
outsl
je
jge
dec
rolb
call
ss
jae
das
jge
dec
stos
pop
xchg
or
popl
mov
dec
pop
out
mov
mov
dec
sub
sub
dec
jp
movl
adc
bound
popl
out
pop
jp
or
mov
inc
adc
gs
adcb
in
comiss
sub
xor
cli
xorps
mov
imul
fsubs
sub
xor
insl
mov
sbb
es
push
test
push
shll
mov
lret
faddp
call
mov
scas
insl
cli
mov
movswl
add
repz
push
scas
mov
movsb
and
sub
jg
int3
dec
insb
adc
in
mov
push
scas
push
testb
sub
scas
scas
imul
inc
icebp
xlat
cmp
push
adc
mov
stos
cmpsb
add
jp
int3
add
sbb
xor
push
iret
sbb
les
push
test
adc
jns
dec
lods
jne
aaa
jno
mov
fcompl
cmpsb
out
cwtl
hlt
inc
lcall
adc
push
pushf
add
adc
sahf
add
xor
outsb
mov
fsubl
sub
mov
das
jle
aam
dec
fisttps
lds
or
js
loope
dec
and
insb
cmp
inc
addr16
or
loop
imul
adc
popf
xor
addb
sbb
xchg
inc
mov
xchg
fisubl
xor
mov
ret
mov
orl
mov
mov
adc
enter
ja
xor
inc
add
and
push
sbb
add
adc
jns
fisttpll
out
inc
cli
mov
sub
xor
lcall
int
mov
and
mov
imul
mov
stos
pushf
or
sbb
or
add
jle
or
add
cmp
xor
jb
jg
xor
addr16
add
or
sahf
es
or
inc
xchg
and
mov
adc
int3
add
pop
fisttpl
lahf
popf
xchg
addr16
push
dec
pop
xchg
inc
and
mov
mov
jne
inc
xorl
xchg
negb
cmp
mov
sub
ud2
inc
pop
out
xchg
jne
ret
dec
or
inc
loope
sub
mov
jne
sbbb
xor
or
mov
cmp
pop
out
ds
add
sbb
push
and
inc
ret
inc
sub
dec
ja
mov
lea
mov
mov
dec
pop
pop
mov
add
sbb
inc
jo
cmp
mov
bound
sub
mov
jns
or
addb
in
lcall
xchg
lcall
int
shll
push
xrelease
outsl
int
pushf
pop
mov
test
dec
pop
mov
pop
jae
push
out
dec
xchg
xchg
pop
cmp
mov
bound
sub
or
and
lds
jge
ss
iret
cmp
cwtl
repz
sbb
xchg
adc
jmp
jmp
xor
or
cmpl
cmpsb
mov
fisubl
mov
fmull
xchg
xor
ficompl
jns
shll
or
aas
jno
jb
sub
loop
movsb
pop
xchg
int
or
cmpsl
jl
mov
movl
xor
add
push
rolb
push
aam
push
adc
loopne
xchg
filds
mov
mov
xor
fsubrs
out
or
gs
hlt
dec
aad
iret
inc
js
rcrl
mov
sbb
push
andb
dec
pop
mov
jnp
popf
push
mov
jno
xor
or
push
pop
fstpt
sub
jb
jle
ja
stos
mov
xor
icebp
pop
or
outsb
cmp
fmull
movsb
pop
lahf
leave
push
cmpsb
cwtl
adc
test
iret
rclb
popf
mov
xor
mov
add
push
outsb
mov
add
jl
sahf
pushf
lds
sub
or
imul
jo
dec
mov
mov
adc
or
mov
pop
mov
jmp
dec
cs
fstpl
je
sub
int3
or
xor
jno
in
roll
dec
inc
mov
adc
or
mulb
outsb
daa
or
insb
mov
lock
lock
push
mov
adc
push
sbb
push
xlat
sbb
pop
call
adc
push
out
xor
sub
cwtl
adc
sbb
inc
ret
aas
jp
jo
shr
ds
sub
mov
jmp
xchg
push
mov
pop
arpl
fwait
add
or
jp
sbb
sub
orb
mov
sbb
xchg
insw
add
insb
mov
popf
xchg
xor
jns
aad
fwait
es
sbb
iret
inc
mov
push
cmpsb
xchg
outsl
sbb
inc
mov
arpl
mov
shrb
test
xchg
pop
pop
cwtl
adc
ja
jb
sub
push
and
adc
push
je
test
mov
test
cmp
cmp
mov
stc
or
fldz
les
or
stc
mov
jmp
lock
dec
pop
pop
add
scas
jge
add
or
push
sub
dec
xchg
outsb
cmp
aad
nop
mov
outsb
adc
fisttpll
add
lcall
mov
mov
ret
push
push
dec
push
fisttpll
lea
dec
add
test
sbbb
pop
sub
dec
adc
and
adc
dec
or
pop
fisubs
lea
arpl
test
enter
cmp
mov
xchg
jecxz
fistps
sub
adc
lock
jno
sbb
mov
mov
xor
and
dec
sub
inc
push
pop
fnsave
dec
dec
xchg
mov
loopne
sahf
xchg
mov
xor
pop
jp
test
fwait
mov
sbb
scas
addr16
adc
sbb
xchg
pushf
scas
dec
mov
pop
imul
and
int
mov
lds
or
xchg
inc
inc
sbb
in
mov
inc
std
inc
push
lret
add
fsubr
sub
push
cmpsb
ja
push
and
fwait
pushf
call
or
add
addb
out
aas
mov
or
cmp
and
addb
mov
test
mov
and
call
mov
and
flds
arpl
fldenv
xchg
insb
sbb
ljmp
xor
pop
mov
inc
sub
jge
add
mov
cmpsl
lret
xchg
jg
insb
sub
push
sbb
call
dec
fcomps
jne
inc
enter
int3
filds
xchg
dec
rcrl
int
xchg
push
jg
jbe
cld
xchg
mov
sub
pop
out
rcll
mov
mov
sarb
add
add
jne
cmp
sti
daa
inc
inc
mov
pop
add
dec
into
jge
dec
adc
mov
sahf
out
xchg
push
sub
int3
ss
rclb
data16
jge
stos
lea
push
sbb
call
stc
or
xchg
cmc
movsb
pop
lods
popf
dec
mov
xchg
add
int3
mov
es
jb
fistps
aas
push
pop
in
add
jo
cmpb
ja
into
push
out
ficoml
push
mov
xchg
fisttpll
int3
pop
ds
js
dec
sbb
mov
jbe
mov
ficomps
dec
bound
mov
mov
lret
dec
iret
sbb
cmp
or
xchg
jno
sbb
pop
mov
test
inc
mov
mov
scas
xor
mov
jb
xchg
sahf
cmpsl
mov
sub
push
mov
test
sub
cmc
add
outsl
lret
jle
sbb
jle
cmp
shlb
xor
or
ds
js
test
lret
adc
inc
jne
mov
mov
lods
in
scas
vpunpcklqdq
mov
xor
insl
push
inc
adcl
mov
out
iret
movsl
cltd
xchg
icebp
sub
pop
popa
add
or
int3
decb
enter
fists
in
xchg
xchg
xorl
xor
push
mov
out
adc
rol
mov
xchg
dec
xchg
rcr
mov
test
jge
or
scas
add
loopne
pop
fistpl
sbb
mov
mov
add
inc
nop
ss
filds
out
or
scas
cmpb
inc
gs
outsb
mov
out
out
pop
insl
and
mov
loop
jmp
lcall
mov
inc
lods
xlat
sbb
jmp
or
or
xchg
sub
add
inc
loopne
cmp
add
and
inc
comiss
movl
adc
aaa
xchg
aad
popf
cs
ljmp
cmpsb
cwtl
sub
sub
jbe
gs
je
in
mov
cmpsb
sub
ja
cmc
cs
add
xchg
sbb
or
sbbb
pushf
dec
lock
or
out
xchg
outsb
sub
and
push
int
mov
pop
push
add
mov
test
jo
lahf
sbb
test
or
cmp
fsubl
mov
add
nop
fidivl
jbe
cmpsl
or
jns
lcall
lea
push
mov
test
cmpb
sub
clc
xchg
lahf
leave
nop
push
xchg
inc
and
stos
add
test
std
inc
in
mov
mov
mov
in
bound
adc
sarl
push
pop
inc
pushf
mov
push
xchg
je
cmp
xchg
orb
mov
xor
les
scas
adcl
sbb
in
mov
ret
sbb
ret
or
lret
sub
sbb
mov
sti
add
inc
jl
hlt
xor
inc
test
push
jecxz
push
jle
ds
push
movsb
sbb
mov
sbb
sahf
inc
sub
sbbl
inc
dec
xchg
adc
pop
into
sub
xor
dec
bswap
xchg
inc
lods
lret
shl
aam
mov
mov
add
out
xor
aaa
lods
xchg
dec
or
vpmaxsw
mov
add
jecxz
test
inc
and
ret
repz
sub
cmp
icebp
sbbl
sub
aaa
das
xor
inc
adc
add
add
popf
das
mov
inc
aaa
mov
mov
scas
jne
or
pop
xor
or
ljmp
mov
mov
aaa
addl
ljmp
int3
and
mov
jecxz
xchg
into
ss
xchg
sub
sbb
and
popa
adc
or
inc
and
aas
xchg
mov
jne
fs
stos
aas
into
sbbl
dec
lret
scas
negb
cld
add
imul
push
adc
add
add
dec
xchg
or
addr16
sbb
dec
push
xchg
xchg
inc
jg
bound
cs
cmp
fstpl
sbb
push
imul
cmpsl
clc
pop
dec
leave
orb
insl
movsl
add
cmp
push
and
add
or
jmp
mov
push
movsl
mov
jmp
sub
mov
fbstp
movsb
mov
test
and
insl
jb
loop
test
xchg
fstl
loop
int3
outsb
lea
leave
leave
xor
pop
or
cwtl
xor
cwtl
lret
mov
cmp
adc
adcb
mov
add
or
xlat
add
jp
xor
loope
sub
mov
inc
push
lea
mov
jecxz
mov
lcall
movsl
shrl
dec
adc
test
sbb
xchg
or
push
sbb
mov
lcall
lds
popf
inc
inc
sbb
xchg
mov
lods
add
std
add
sbb
sbb
jmp
cmp
xor
xchg
mov
sub
push
pop
sub
adc
push
mov
xchg
push
mov
or
aam
pusha
pop
mov
test
int
lret
pop
leave
shr
jbe
pop
push
dec
or
jg
lret
jo
xor
insl
or
xchg
inc
ss
xor
adc
fisubrs
sbbb
adc
mov
adc
sbb
leave
clc
cmp
movsl
mov
sbb
sbb
ror
flds
dec
xchg
mov
push
imul
cli
mov
jne
push
xor
andl
and
jle
aas
repnz
aaa
jp
or
lods
sbb
xchg
addl
out
adc
and
or
shrl
add
sub
mov
movsl
js
into
adc
push
js
lcall
jno
lea
sbb
push
popa
pop
decb
sbb
pop
push
add
data16
jo
cs
or
pop
out
lods
and
xchg
xor
mov
ljmp
and
fldl
sahf
pop
push
push
cs
add
lea
or
sbb
pop
or
shrl
or
shrl
scas
out
je,pt
cmpb
fisttpll
or
add
stos
xor
adc
popf
sbb
inc
xchg
fsubl
xorb
rcrl
lahf
test
xor
jo
shll
xchg
add
mov
and
inc
mov
jmp
pop
sbb
push
pop
push
xor
push
insb
fsubr
insb
subb
and
xchg
rorl
out
outsl
mov
add
mov
aaa
daa
scas
jp
xchg
xorl
push
bound
add
incb
sub
inc
pop
xchg
pushf
aaa
cmp
or
mov
andb
inc
inc
dec
loope
push
orl
imul
cmp
loopne
xchg
fstps
lahf
scas
lock
jg
arpl
in
dec
leave
mov
movsl
add
cwtl
lahf
pop
sbb
dec
fs
xor
ret
add
adc
andl
sbb
xchg
dec
or
gs
inc
sub
mov
jle
out
popa
ret
enter
xor
cmpsb
push
gs
inc
cs
imul
xor
dec
mov
int
push
stos
call
or
inc
mov
pop
mov
shr
jno
add
testb
data16
call
fs
fcompl
sbb
and
dec
fiadds
mov
sbb
mulps
mov
push
imul
mov
sbb
das
sub
sub
incl
sub
and
pop
pop
or
adc
pop
add
add
inc
mov
fbstp
lahf
adc
loopne
push
pop
leave
add
movsl
dec
dec
cmp
jnp
les
mov
cmp
arpl
pop
pop
imul
adc
or
mov
jo
outsb
int3
fdivrp
cs
loopne
mov
call
mov
inc
mov
mov
femms
mov
gs
inc
adc
mov
je
push
xor
or
aas
jp
fidivrl
mov
sbb
push
out
sbb
movsl
push
fisubrs
lahf
dec
pop
aaa
aaa
imul
fdivs
das
xchg
and
sbb
inc
add
test
push
or
scas
addr16
inc
test
sub
in
add
loopne
cs
testb
nop
dec
cmp
lock
lcall
or
inc
push
add
sbb
adc
or
daa
sub
ja
dec
cld
rol
adc
imul
pop
imul
mov
loop
test
inc
lret
pop
imul
mov
push
adc
imul
dec
mov
loop
sarl
inc
lret
pop
imul
mov
loop
push
cmp
pop
imul
mov
aam
loop
ljmp
sbb
adc
sub
inc
sbb
adc
pushl
lret
sub
inc
lahf
and
jle
call
pop
shll
sbb
dec
add
shrb
out
pop
push
dec
or
and
mov
daa
mov
imul
xchg
in
cld
xchg
loop
xchg
or
cmp
lret
icebp
cld
add
pop
sub
hlt
dec
add
xor
test
shll
add
mov
ja
ljmp
pop
ljmp
pop
add
cmp
mov
popa
add
xchg
les
imul
nop
rcr
aaa
aam
popf
xchg
mov
into
sub
xchg
lret
inc
inc
imul
aaa
imul
sub
push
les
imul
cmp
das
aaa
aad
popf
push
mov
into
sub
and
lret
inc
les
aaa
inc
cwtl
popf
mov
into
sub
and
stos
les
imul
inc
mov
into
sub
push
inc
xchg
imul
aaa
aam
popf
sub
lds
cmp
sub
in
adc
and
sbb
and
cmp
adc
adc
rol
inc
push
imul
inc
mov
into
sub
lds
lcall
aaa
rcrl
into
sub
and
inc
inc
imul
aaa
sbbl
mov
sbb
jnp
cmp
insl
mov
fsubrp
leave
cwtl
sub
inc
aas
int3
sbb
xchg
icebp
add
pop
ret
sbb
lea
add
jle
cmp
push
adc
scas
shll
mov
sub
out
lock
jo
or
and
adc
rorl
lea
daa
test
pushf
cs
loopne
sub
jp
or
sbb
ret
pushf
inc
sti
sub
pop
negl
andb
leave
test
sbb
dec
cmc
push
sbb
rorl
inc
lahf
add
mov
xorb
idivl
in
add
xchg
xlat
fiadds
mov
sbb
cmpsl
mov
xchg
insl
pop
fcompl
add
lods
push
sub
push
fsubrs
adc
mov
dec
pop
inc
sbbl
or
scas
fdivl
adc
out
mov
dec
mov
fidivl
mov
pcmpeqd
pop
movsl
sbb
jae
mov
cmp
jae
fcmovb
rorb
sbb
hlt
add
aaa
add
dec
ret
adcl
jg
shrl
xchg
cmpb
pop
out
adc
push
inc
lea
add
inc
push
fcmove
int
lds
nop
sbb
mov
int
pop
lret
int
xchg
mov
sbb
pop
adc
imul
lcall
pop
push
xchg
inc
xor
insl
xchg
rol
or
dec
aas
xchg
cmp
ret
jecxz
imul
inc
mov
lods
mov
push
xchg
pop
addb
inc
mov
pop
adc
addb
xor
mov
push
sub
outsb
add
call
pop
xchg
sub
inc
dec
sub
cwtl
pop
cmp
pop
int3
dec
push
ret
ja
out
or
mov
int
xchg
ds
mov
popa
mov
ja
add
inc
insb
dec
pop
jns
ljmp
aas
xchg
cmp
lret
movntq
out
or
pop
adc
xchg
je
inc
cs
stos
xor
jecxz
add
inc
mov
mov
dec
push
inc
scas
mov
jne
fiaddl
dec
pop
test
jnp
movsl
inc
arpl
imul
test
ljmp
xor
lods
cmp
mov
sub
pushf
xor
mov
mov
enter
cmp
push
dec
in
inc
pop
mov
jmp
fldenv
sbb
mov
xchg
inc
mov
xorb
data16
cs
cmp
lret
xchg
int3
add
subl
ret
loop
mov
push
and
pop
xchg
pop
ret
add
xchg
rcrb
mov
xchg
pop
or
xchg
in
nop
inc
cmp
mov
mov
leave
xor
pop
mov
test
sub
adc
lds
sbb
add
cmp
cmpl
sbb
or
lret
mov
outsl
sbb
dec
cmc
or
inc
mov
cwtl
xchg
inc
adc
sub
push
sbb
jmp
pop
xchg
lret
cmp
es
inc
loope
lahf
push
scas
lds
mov
xchg
pop
xor
sbb
sbb
xchg
mov
fwait
jl
or
or
mov
nop
pusha
mov
int
push
push
psubq
jbe
fsts
sub
xchg
jecxz
push
push
dec
decl
repz
and
or
push
lret
mov
pop
jl
add
fnstenv
add
sbb
inc
xchg
sub
and
lods
outsb
js
subl
xchg
inc
aam
scas
pop
leave
add
jle
cmp
bound
arpl
sub
push
loop
adc
ja
outsb
lret
shlb
push
push
pop
xchg
pop
push
adc
inc
jnp
inc
push
lods
icebp
mov
fwait
xchg
sub
lea
aaa
and
dec
call
addl
mov
outsb
rcl
jno
shll
enter
scas
push
repz
daa
ret
rorb
lods
or
add
adc
mov
adc
sbb
dec
push
orb
test
in
or
pop
inc
pop
scas
pop
out
loopne
cmp
fiaddl
pop
stos
sbb
pop
adc
push
mov
sbb
or
hlt
or
mov
ret
inc
xor
and
mov
imul
sub
mov
into
jmp
scas
jmp
mov
pop
sub
adc
cmpsl
xchg
int
pop
mov
push
cmpsl
shrb
inc
cmp
xchg
jae
int3
gs
add
jae
xchg
into
jmp
iret
xchg
and
inc
xor
into
jg
fidivl
jns
pusha
dec
dec
xor
lret
mov
fsubs
mov
les
ds
inc
push
out
das
pop
cmpsl
stos
pop
ljmp
mov
dec
testl
pop
int3
jno
or
daa
mov
iret
aam
or
ret
subl
call
enter
mov
cltd
bound
lds
xchg
pusha
or
mov
xchg
ss
pop
dec
mov
or
imul
or
movsb
dec
mov
jnp
test
jne
data16
pop
sub
mov
push
mov
or
shlb
popf
or
dec
adc
cmp
test
jae
add
daa
rclb
sub
test
pop
push
les
and
xchg
sub
or
lock
andb
inc
dec
and
bound
aam
test
or
or
out
ss
divl
mov
sub
mov
sbb
hlt
sbb
push
in
pop
add
push
mov
lahf
xchg
sbb
cmp
push
or
or
mov
pop
or
cmpsl
ds
aam
xorb
cmc
mov
adc
data16
fldcw
push
sub
mov
sub
pop
push
mov
sub
pusha
loop
push
or
std
push
xchg
leave
lods
mov
out
inc
or
dec
adc
pop
jmp
dec
pop
gs
pushf
add
stos
push
jne
mov
push
lret
inc
shrl
aaa
push
popf
xchg
ss
stc
push
push
pop
les
test
pop
push
andl
adc
mov
jns
lds
and
push
data16
mov
pop
rorb
or
loop
or
enter
sbb
or
movsl
push
sarb
sub
xchg
xor
and
pop
loopne
sti
fnsave
mov
sti
roll
sti
xchg
mov
sbbb
xchg
idiv
xchg
movsl
mov
xchg
jne
inc
sbb
adc
xor
inc
fcmovne
sti
mov
and
mov
sub
cmc
sti
pushf
mov
subb
xchg
idiv
fdivl
xchg
idiv
fnsave
sbbb
pushf
mov
sti
ljmp
ss
aas
pop
sbb
pushf
hlt
les
fists
out
stos
out
addr16
cmp
add
cmpsb
loopne
cmp
jge
mov
lds
leave
ss
xchg
adc
sub
jne
mov
cmp
jne
cmp
cmp
daa
sub
dec
sti
pusha
lds
and
push
arpl
adc
pop
sbb
dec
cmc
push
enter
add
das
outsb
push
test
mov
mov
jne
cmc
mov
into
inc
std
mov
push
lock
jl
mov
cs
dec
int
add
mov
pop
xlat
pop
sbb
iret
mov
pop
call
jo
lds
xchg
lret
cmp
das
imul
add
lods
mov
or
frstor
stos
adc
movsb
addr16
sub
lea
icebp
fistl
rorb
test
dec
lret
aaa
adc
xor
cmpsl
xor
xor
or
sbb
sbb
inc
add
pop
out
rclb
xor
sub
scas
inc
sub
inc
mov
push
fdivs
aaa
xchg
cwtl
popf
aam
xchg
into
jne,pt
xchg
lds
and
out
cmp
lea
pop
add
movsb
inc
push
imul
das
mov
push
push
push
pop
or
sub
adc
mov
out
cmpsb
jmp
rcr
xchg
or
adc
or
pushf
lock
jo
or
es
push
mov
mov
je
imul
daa
xor
in
bound
popf
push
cmp
insl
test
popf
and
adc
pop
flds
test
cmp
movl
cmp
pop
movsl
mov
mov
pop
push
loopne
jmp
mov
sbb
pop
out
cltd
sbb
and
xor
aaa
add
or
add
fstl
rcrl
jbe
out
scas
mov
push
pop
aad
idivb
push
in
dec
outsl
orl
mov
cmpsb
dec
sub
lods
mov
cli
lods
call
dec
push
sbb
dec
cmp
ja
fcmovnu
into
or
out
daa
rcrl
into
sub
shll
push
les
stos
jecxz
mov
call
std
and
and
fldenv
add
dec
add
adc
mov
sub
pop
push
mov
add
adcb
daa
call
repnz
ds
pop
push
stc
push
fidivrl
dec
pop
or
dec
fidivl
mov
push
jge
les
nop
out
enter
pavgb
cmc
xor
daa
sahf
xor
stc
push
xorl
lods
pop
aas
in
mov
add
push
add
adc
jo
mov
xor
sub
test
xchg
add
testb
pop
fmulp
cmp
adc
fstl
lods
int3
push
xchg
leave
rcll
mov
mov
bound
dec
mov
or
loop
movsl
xlat
cmc
add
pop
add
js
sub
outsb
xchg
or
mov
aaa
xor
push
lock
sahf
xor
push
sbb
and
adc
sbb
push
or
sbb
dec
add
adc
lock
fs
inc
inc
repz
push
daa
nop
adc
add
mov
jmp
mulb
mov
xor
sbb
or
lock
add
jne
sbb
dec
push
add
dec
shlb
and
jbe
sti
inc
adc
xchg
pusha
aaa
loope
rolb
mov
insl
loopne
fnsave
mov
cmpsb
scas
popf
xchg
popf
call
leave
loopne
movsl
jae
imul
mov
movsl
cmp
and
mov
sub
and
mov
jbe
and
pop
repnz
add
cmp
add
insb
cmpsl
arpl
add
ret
frstor
mov
cmpsl
loop
add
es
cmpsl
cmp
mov
shl
daa
or
not
dec
add
add
ret
cmp
cmp
loopne
les
adc
dec
inc
int
jnp
mov
and
or
aaa
xchg
jg
jmp
loopne
shlb
fwait
sub
daa
jg
lock
icebp
dec
inc
cmpsb
push
lahf
ret
loopne
dec
movb
or
add
insb
out
mov
xchg
sbb
or
imul
or
add
or
inc
xchg
jmp
int
mov
and
lahf
mov
gs
or
mov
mov
ret
pop
xchg
int
dec
push
ret
std
les
jle
test
jl
cmpsl
adc
and
cltd
pop
iret
sub
xor
aas
xorl
jge
lds
jmp
xchg
jmp
jns
add
pop
inc
pop
jb
mov
test
inc
or
mov
mov
mov
inc
xacquire
pop
inc
arpl
sti
xchg
mov
dec
push
ret
mov
pop
mov
pop
push
xchg
fsubrl
push
or
mov
fcompl
lods
mov
in
sub
outsl
cmp
je
jge
inc
inc
push
stos
sub
xor
xchg
out
sub
mov
fsubr
adc
adc
ja
mov
push
pop
jb
push
sti
xchg
out
xlat
add
daa
dec
je
add
loop
cmp
or
ret
pushf
lods
imul
sub
push
mov
aaa
mov
pop
and
or
push
jb
outsb
shrb
pop
icebp
mov
add
pop
jnp
sub
cmp
sub
and
in
inc
aaa
cs
inc
pop
dec
test
in
mov
into
xor
les
addr16
dec
loop
stos
or
sub
in
pushf
xchg
push
mov
inc
xchg
cwtl
xor
inc
mov
xchg
sub
icebp
inc
outsb
pop
mov
data16
outsl
sub
bound
pop
sbb
lahf
hlt
jmp
xchg
cwtl
xchg
repz
add
shr
jne
lods
lds
xchg
and
add
jnp
shufps
js
lret
les
out
adc
xor
xchg
fstl
adc
fldcw
mov
or
cs
pop
push
mov
imul
aaa
imul
cmp
jnp
pusha
or
and
ficompl
sub
cmp
sub
decb
inc
or
test
inc
push
or
in
adc
lods
pop
push
push
xor
lods
out
mov
xchg
outsl
mov
push
push
mov
mov
cld
push
daa
test
loope
dec
cmc
xchg
movl
loop
mov
adc
test
jns
adcl
mov
rorb
dec
test
jmp
dec
pop
pop
cmpsb
fsts
mov
je
sbb
loop
and
push
jnp
xor
insb
arpl
iret
out
dec
out
addr16
jle
mov
arpl
pop
dec
dec
add
xchg
inc
lds
mov
or
shr
jns
ret
lahf
out
fwait
popf
in
shll
mov
fwait
pop
pop
push
lods
pop
mov
xor
ret
hlt
aas
les
leavew
insl
mov
inc
aam
gs
cmp
clc
xchg
mov
xor
leave
and
sbb
mov
js
out
and
jmp
dec
xchg
aaa
es
insl
outsl
xchg
mov
mov
lds
xchg
sub
cmp
adc
popf
dec
jp
and
icebp
sbb
daa
or
mov
mov
sbb
icebp
dec
aaa
adc
sar
outsb
in
sbb
or
js
inc
push
pop
fwait
mov
mov
js
add
ret
push
lret
les
ret
testl
lods
jle
aaa
pop
imul
or
push
loop
cmp
fstps
and
mov
and
xchg
insl
orb
fisttps
dec
enter
xor
mov
sub
push
xchg
mov
xchg
std
fwait
out
pop
arpl
mov
adc
inc
movsl
pop
sbb
test
and
pop
xchg
popf
dec
inc
call
hlt
pop
sub
adc
jg
gs
push
lods
pop
xor
xchg
into
xor
ret
dec
aas
les
movl
and
cld
mov
xchg
call
lea
inc
rcrb
mov
test
sbb
sbb
fnsave
and
test
mov
pop
jbe
fcom
jb
test
arpl
adc
aas
inc
dec
dec
add
shrb
fadds
sub
inc
std
inc
push
inc
push
mov
mov
shll
inc
pop
cwtl
mov
add
popf
lcall
rorl
addb
add
dec
cmpsb
clc
add
mov
cwtl
adc
inc
jne
ss
out
lods
aam
and
add
sub
pop
es
sbb
and
mov
sbbb
cmpsb
pop
mov
jp
add
or
lods
sahf
adc
mov
xlat
pop
mov
add
cmp
addr16
sub
xlat
or
int3
cmp
loop
xchg
icebp
jge
xchg
fwait
loope
daa
fwait
lret
out
daa
or
or
call
aaa
or
or
loop
test
or
or
loop
push
or
decb
or
lds
pop
or
mov
roll
lret
or
lret
or
lret
or
and
adc
sub
stc
decb
aaa
or
or
loop
das
aaa
or
or
loop
inc
aaa
or
or
call
int3
lds
sub
mov
pop
or
lds
or
lds
or
vmovaps
mov
pop
or
aaa
or
into
sub
jne
rcr
incb
lret
or
sub
adc
sub
mov
out
sub
adc
inc
lock
mov
clc
or
inc
or
or
std
and
cmp
sub
sub
not
je
sub
jbe
add
lret
icebp
mov
lds
push
mov
lret
gs
daa
xor
not
dec
mov
cmp
xchg
pusha
push
mov
cmp
call
arpl
or
mov
sbb
adc
lea
mov
not
or
clc
mov
nop
push
cs
push
sbb
inc
ficomps
aaa
push
cwtl
popf
scas
mov
mov
outsl
mov
inc
or
fcmove
dec
cltd
sti
xor
or
push
mov
mov
fcoml
ret
aad
testb
repz
cmp
push
negb
mov
fsubrs
sub
adc
adc
jbe
sub
pushf
jo
dec
cmp
push
add
stc
fisubs
pop
xchg
mov
loope
es
and
inc
cltd
cmpl
sub
out
dec
pop
loopne
dec
lea
cmp
adc
clc
mov
pop
xorb
dec
aam
xchg
jo
lahf
es
mov
push
mov
into
cmp
pop
mov
cmc
cltd
outsl
fwait
or
les
add
cltd
insl
mov
scas
inc
aam
mov
mov
cmp
push
xor
pop
xchg
mov
int3
adc
enter
mov
adc
or
int3
loope
cmp
out
in
or
mov
inc
lahf
or
fisttps
xor
adc
pop
xor
jo
or
or
fisttpll
pushf
and
or
hlt
les
jo
adc
lods
repz
outsl
adc
pop
add
adc
push
inc
pop
sbb
mov
pushw
xchg
adcl
lock
fwait
scas
sub
inc
test
lods
push
pop
fdivrl
and
add
inc
push
lea
add
es
lcall
jle
sbbl
add
iret
mov
lods
mov
dec
mov
push
sub
fimull
mov
insl
sbb
push
scas
or
out
mov
out
adcb
adc
ret
jle
js
dec
dec
in
lods
mov
inc
mov
test
cmc
mov
in
imulb
faddl
mov
mov
mov
pop
dec
push
outsb
xchg
xor
dec
jae
sub
jno
leave
ret
cmp
ret
cmc
jge
pop
add
push
add
stc
cwtl
jno
add
je
pop
iret
inc
and
enter
pop
leave
mov
xor
faddl
adc
sub
adc
or
cmpb
adc
sub
adc
cmpsb
addb
mov
pop
lock
inc
sbb
lahf
daa
add
lret
imul
and
jp
cld
sub
mov
rclb
popf
adc
lea
out
shrl
inc
mov
imul
fistps
insl
xchg
fadd
pop
movsb
fisttps
rcrb
cmc
dec
pushf
mov
clc
stc
enter
adc
add
xchg
lret
inc
lea
adc
lcall
or
push
dec
ret
xchg
xchg
enter
insl
mov
push
mov
inc
pop
fimull
sahf
mov
sbb
test
sbb
adc
mov
adc
mov
test
mov
lea
jae
aaa
add
push
xchg
add
add
sti
loop
cmovne
bound
sbb
mov
jbe
or
push
push
xor
cmc
lods
inc
ss
inc
or
shrl
lds
mov
inc
pusha
stos
jge
cwtl
pop
and
aam
pop
pusha
and
fwait
aaa
mov
mov
mov
adcb
sub
mov
pop
adc
pop
push
and
sub
iret
aaa
xchg
sub
and
add
je
mov
adc
stos
xchg
add
and
xchg
out
xchg
push
adc
adc
fcoms
sub
pop
outsb
adcb
imul
xchg
insb
jg
aam
jns
or
add
push
pushl
lea
and
jnp
cmp
xor
sub
in
and
jge
call
ljmp
sbb
jb
adc
sub
push
or
add
or
shrl
mov
sub
cwtl
sbbl
int3
mov
dec
jl
inc
pop
jle
xchg
stc
pop
add
jmp
cmp
mov
cmp
mov
xchg
testl
xor
mov
mov
sti
aaa
ss
fs
or
xchg
loopne
pushf
or
imul
xor
mov
mov
imul
pop
adc
add
cmpsl
add
jns
fdivrl
out
or
fsubl
xchg
mov
dec
dec
sub
sbb
ja
mov
ret
inc
clc
cmpsb
les
sarl
rcrl
iret
pop
pop
cmp
sub
mov
add
and
add
push
mov
loopne
dec
mov
in
je
sbb
mov
mov
jo
gs
ja
pop
mov
sbb
sub
popl
push
push
jg,pn
xor
push
xor
xchg
xor
bnd
test
test
sarl
mov
lret
mov
hlt
xor
push
frstor
lds
push
mov
aad
push
push
arpl
push
xchg
fyl2xp1
mov
inc
or
mov
push
aaa
es
sbb
ret
test
jb
xchg
xchg
ljmp
sub
add
dec
mov
imul
dec
lahf
mov
rol
std
aaa
or
sub
mov
pop
test
push
fldl
xchg
sti
daa
fcoml
insl
pop
push
push
in
sub
adc
loopne
fcoms
lcall
cmp
push
xor
negb
mov
arpl
test
in
adc
outsb
stos
jae
pop
mov
push
inc
scas
cmp
xor
add
and
sbb
cmp
or
adc
cmpsl
or
int
popf
sub
push
and
jne
stos
cmpb
or
xor
sti
popf
adc
xchg
add
ds
add
sub
sub
push
dec
push
mov
mov
push
loope
adc
inc
stc
popf
mov
pop
setb
jne
pop
fisubrl
push
pop
pop
mov
mov
popa
add
xchg
xchg
test
push
and
push
xchg
outsb
lock
mov
fs
jo
popa
xor
jnp
or
pop
repz
jae
shlb
xchg
leave
test
arpl
adc
sbb
leave
jp
stos
pop
enter
dec
mov
sub
ljmp
push
inc
push
stos
ja
mov
sbb
pop
movsl
or
inc
xchg
cs
cmp
or
ficoml
adc
ficomps
pop
ds
int3
mov
add
mov
jnp
or
mov
test
cmp
push
jae
xchg
push
jp
add
cmp
add
jecxz
loopne
call
cmpsl
xchg
movsb
mov
fldcw
lret
repnz
jo
dec
out
pop
inc
fistps
dec
xchg
push
xchg
sbb
test
leave
jmp
cwtl
and
xchg
sub
aas
mov
cli
jmp
arpl
adc
push
ss
and
jb
ljmp
push
out
or
jmp
mov
jnp
sub
xchg
add
inc
repnz
icebp
daa
repz
inc
repz
add
sti
ret
pop
push
fisubl
test
fistpl
test
xchg
jnp
add
add
in
sub
inc
aaa
mov
popf
jmp
cltd
shlb
ret
andl
sbb
cwtl
push
fstpl
jle
scas
sbbl
push
adc
stos
push
pushf
int
arpl
mov
mov
or
sbb
out
pushf
cmp
mov
sbb
pop
and
daa
in
pop
adc
imul
push
sbb
mov
xchg
sbb
and
xor
loopne
adc
xchg
inc
pop
mov
cld
mov
cmp
add
dec
mov
xchg
pop
pushf
pcmpgtb
xor
aam
pop
aaa
icebp
xor
mov
and
adc
lods
shrb
sub
andb
adc
sbb
sbb
xchg
add
xor
icebp
xor
lret
jo
or
and
lret
jp
xor
mov
and
adc
lods
shrb
sub
or
lods
jno
pop
pop
sbb
sbb
xchg
add
xor
daa
lret
xor
and
push
daa
test
cmp
dec
lds
imul
lds
and
out
lods
rclb
sub
or
lods
jno
pop
pop
add
test
lret
push
mov
jbe
aaa
hlt
dec
xlat
cmpsb
sub
cmp
adc
out
cmp
shlb
sub
or
lods
jno
out
lret
adc
arpl
sbb
ficompl
ja
add
pop
push
mov
lock
mov
or
xor
sub
shlb
and
aas
or
xor
mov
daa
gs
imul
sub
sbb
adc
or
mov
xor
push
xor
or
jbe
dec
mov
xor
sbb
jb
push
daa
call
shrb
out
jbe
dec
mov
xor
add
jb
push
daa
test
sbb
dec
lds
imul
lret
cmc
inc
movsl
or
push
lods
jno
ja
pop
cmp
sbb
pop
inc
adc
daa
test
sub
dec
add
adc
adc
mov
addr16
les
sbb
sub
out
idivb
and
pop
push
mov
aaa
pop
rcll
cmp
daa
sub
inc
push
dec
and
lds
and
out
lods
rclb
sub
les
sbb
pop
pop
add
test
lret
mov
or
and
mov
xor
daa
call
add
xchg
jecxz
arpl
pop
cmpsb
mov
mov
mov
xchg
sahf
ds
negb
push
mov
jae
pop
ja
repnz
jnp
pop
jg
cli
push
arpl
pop
addr16
loop
imul
das
push
ljmp
rorb
pop
xor
fisubl
and
mov
fcompl
sbb
sbb
sbb
sbb
sbb
sbb
pop
lock
jno
hlt
pop
jne
clc
pop
jns
cld
pop
jge
loopne
popa
pop
in
gs
call
pop
insl
pop
rolb
jnp
out
jg
cli
mov
addr16
mov
push
mov
sarb
pop
mov
into
movl
mulb
mov
xor
jmp
movsl
aaa
jle
push
xlat
and
adc
icebp
out
icebp
adc
pop
call
lret
jo
fidivl
shlb
ljmp
daa
mov
mov
mov
dec
push
push
or
scas
test
sbb
mov
cmp
jns
xchg
and
mov
fwait
imul
lcall
adc
mov
scas
jg
in
sbb
sbbb
rcr
pop
leave
test
xchg
pop
pop
sbb
or
dec
ficomps
sub
push
xchg
shll
repz
jns
add
cld
xlat
sbb
sub
jmp
daa
mov
add
push
in
inc
fistps
push
add
jno
and
lea
sbbb
pop
dec
in
lahf
test
push
or
ljmp
dec
cmp
cmpsl
fstl
sarb
notl
lds
std
mov
les
xchg
shld
push
or
sbb
push
enter
sbb
andb
or
xor
cwtl
push
push
lods
lret
xchg
jle
push
daa
out
pop
xor
sub
pop
movsb
push
movsb
lds
jp
cmp
bound
andl
das
dec
insb
cmc
inc
inc
mov
dec
mov
setp
in
adc
sbb
pop
adc
imul
add
outsb
sub
jecxz
push
inc
mov
ds
inc
jp
in
xchg
pop
sbb
lret
inc
sub
mov
or
cld
call
shlb
xchg
xchg
mov
sbb
fisttps
cmp
nop
jo
arpl
xchg
outsl
push
dec
xchg
lret
xchg
xchg
das
stos
and
adc
add
add
es
mov
adc
push
mov
mov
loopne
jb
pop
and
cmp
cmc
sbb
stc
sbb
out
insl
push
dec
xorl
out
imul
filds
daa
lea
xchg
xor
or
jl
sbb
push
cmpsb
xchg
add
dec
loope
lock
xor
mov
inc
xor
lcall
movsl
add
jg
jge
sub
shrl
adc
push
mov
fisttpll
add
in
cmp
sbb
jbe
push
mov
push
lods
jo
aad
ss
loope
pop
sbb
xlat
in
pop
or
jge
mov
mov
pushf
mov
scas
mov
inc
mov
sub
cmpsl
add
sbb
mov
leave
and
inc
icebp
xchg
mov
rolb
decl
xor
ja
dec
pusha
xor
xchg
stos
adc
mov
sbb
mov
mov
fmull
imul
mov
cmp
leave
cltd
gs
pop
sbb
andl
inc
mov
mov
xchg
cld
stos
pop
test
dec
out
sbb
mov
icebp
and
inc
adc
inc
push
adc
xor
lret
sub
rcr
test
arpl
sbb
out
add
fs
in
lods
pop
lock
and
lret
pop
pmaxsw
cmp
data16
sub
adc
mov
sub
or
cmp
insl
mov
lret
or
aaa
mov
adc
lret
or
aaa
imul
test
into
aaa
mov
adc
lret
or
aaa
mov
pop
test
aaa
mov
adc
lret
or
aaa
mov
adc
into
pop
and
les
out
fadds
push
mov
imul
push
or
lret
or
aaa
mov
adc
lret
or
aaa
cmp
les
out
fadds
push
mov
imul
or
aaa
imul
test
into
aaa
mov
adc
lret
or
aaa
mov
pop
test
aaa
mov
inc
push
ss
or
mov
sub
inc
sub
sbbl
lds
int
dec
test
adc
add
inc
repnz
mov
sbb
jmp
add
sbb
push
ficompl
mov
cmp
bswap
js
mov
cwtl
mov
mov
add
iret
xchg
xchg
mov
xchg
cmpsb
sub
adc
into
jns
mov
push
or
mov
into
jns
mov
fdivrs
sub
mov
sbb
fwait
push
xchg
daa
or
loop
or
addr16
dec
pusha
das
mov
int
and
mov
or
xchg
sub
xchg
cmpsl
leave
adc
xchg
cmp
push
sbb
nop
mov
into
adc
add
inc
bound
mov
push
or
mov
inc
dec
leave
clc
push
out
mov
sub
and
pop
dec
mov
inc
mov
push
mov
dec
adc
cwtl
ss
inc
jns
mov
fsubrs
movsb
inc
enter
fisubl
add
inc
daa
test
adc
sbb
bound
fstpl
lcall
cltd
fisubl
dec
sub
dec
pop
hlt
pop
clc
daa
sub
shlb
loope
xor
imul
mov
clc
and
icebp
mov
cld
mov
cmpb
pop
sub
in
out
mov
xchg
int3
pop
push
lods
sub
pop
mov
les
sub
test
int3
imul
and
mov
adc
or
cmp
adc
pop
mov
jns
mov
bound
ffree
daa
add
cmp
sub
inc
or
mov
inc
daa
xor
daa
loopne
daa
clc
sub
hlt
aaa
daa
lret
mov
inc
je
les
or
and
lds
mov
mov
push
push
inc
int3
lcall
mov
dec
dec
rclb
xchg
in
stos
adc
frstor
lds
sub
sub
sub
inc
sbb
pop
jmp
lcall
dec
sbb
and
pop
mov
inc
add
decb
jle
aas
xchg
daa
mull
cmp
out
movsb
jae
jp
shrb
into
out
iret
aaa
cmpsl
rcrl
mov
clc
and
add
and
xchg
fsubl
fldl
test
out
add
in
fwait
sbb
aad
addl
or
mov
mov
je
or
les
inc
sbb
lcall
and
loop
loopne
ljmp
lods
cmp
dec
xchg
les
fwait
inc
subb
pop
jecxz
inc
push
dec
xchg
mov
movl
or
fistps
xchg
and
fldcw
push
inc
push
and
add
or
adc
adc
enter
jb
cld
inc
or
dec
push
fcmovu
lds
out
fisubrs
pusha
rolb
xor
sbb
fsubrp
es
shrb
pop
sbb
adcl
stc
jmp
lea
loop
inc
xor
loopne
sub
sbb
mov
add
stos
xchg
push
xchg
inc
out
icebp
lret
inc
jg
push
mov
push
loopne
clc
lea
int3
adc
or
daa
sub
adc
fldl
mov
pop
mov
push
mov
fldt
xchg
cli
fisubs
and
mov
stos
add
lds
fsincos
cmp
pop
adc
add
push
subb
add
repz
inc
xchg
add
pop
inc
in
loopne
cmp
stos
add
rcll
dec
imul
adc
inc
cmp
xacquire
je
pop
fidivrl
shl
out
or
mov
cwtl
rorb
or
xchg
shrb
pop
pop
push
push
cmp
lcall
stos
xchg
inc
pop
lock
adc
add
sub
mov
leave
lret
imul
shrl
xchg
xchg
sbb
mov
or
xchg
aam
pop
into
cmp
test
push
fistpl
xorb
dec
or
or
sub
xor
nop
sub
or
mov
arpl
xchg
fs
push
push
sarb
jbe
pop
xchg
jnp
outsl
jbe
rolb
push
push
lret
mov
ret
sub
lcall
and
add
or
les
pop
cmpsb
ret
pop
sbb
loope
sbb
cli
loope
mov
mov
xchg
and
inc
jo
lahf
sub
jmp
mov
pop
mov
mov
xchg
pop
xchg
or
mov
mov
pop
adcb
fdivl
loopne
xchg
xchg
inc
bound
sbb
or
out
and
add
jns
fnstenv
inc
ret
or
xchg
push
mov
dec
mov
shr
test
addr16
inc
mov
mov
mov
xor
subb
jne
inc
lcall
push
in
cltd
mov
xchg
test
cmpsl
rolb
cmp
jno
xchg
lods
xchg
das
mov
ds
add
sub
subb
stos
les
push
add
jmp
mov
dec
or
mov
mov
push
fwait
iret
pop
int3
cli
es
jp
test
scas
fistl
imulb
xchg
and
pop
add
dec
push
les
fs
jle
loope
addr16
adc
xchg
sub
arpl
inc
pop
dec
pop
pushf
sub
test
inc
xor
je
add
lret
xchg
cmp
adc
or
pop
inc
dec
mov
addb
pop
adc
test
sbb
orl
pop
pop
mov
mov
dec
dec
js
inc
aas
and
movsl
fdivrl
or
lods
mov
mov
push
ss
int3
mov
mov
cwtl
mov
nop
mov
push
in
insl
loopne
dec
pop
ud1
mov
mov
test
outsb
fld
jg
mov
xor
std
xchg
adc
mov
les
mov
fcoms
and
mov
ljmp
rcrb
sub
in
pop
pop
fadd
xchg
jb
or
repnz
loop
add
dec
pop
ja
mov
lret
inc
xchg
or
in
sub
or
int
mov
pop
scas
mov
and
imul
sbb
loop
mov
daa
dec
xor
or
shl
xor
push
popa
pop
repz
xchg
testl
cwtl
inc
lcall
stc
cmp
or
imul
inc
pushf
dec
xchg
movsb
addb
insl
lcall
and
icebp
lods
aad
adc
int
xor
popa
xchg
sahf
insb
push
push
lahf
mov
pop
push
insl
sbb
jmp
dec
push
adc
fiaddl
mov
lret
xchg
loop
or
jne
mov
fdivl
cmpsb
xchg
add
int
mov
push
fisubl
pop
loop
daa
mov
imul
hlt
add
call
fwait
cmp
cmpsl
ficoml
lods
pop
sub
cli
insl
xchg
inc
sbb
push
push
xchg
xlat
xorl
subl
pushf
iret
pop
sarl
pop
bound
cmp
fmul
xchg
out
rol
les
inc
js
test
lahf
xchg
push
push
lods
and
dec
mov
aaa
push
fsubrs
in
push
insb
in
cs
mov
dec
loopne
jae
push
int3
xchg
in
mov
lret
popf
jno
push
or
pop
nop
add
aaa
jle
pop
rclb
ret
dec
cli
sub
xchg
or
decb
gs
inc
pushf
dec
test
push
aas
sysexit
inc
cmp
mov
inc
insl
pop
inc
dec
scas
stos
fwait
and
push
imul
clc
mov
daa
loop
scas
out
jmp
clc
sub
jb
sub
or
push
lret
testl
xor
mov
imul
mov
aad
inc
jo
mov
inc
pop
xor
cmpsl
icebp
outsl
das
cmpsb
dec
push
push
or
popf
jp
nop
xor
cmp
mov
push
push
mov
xor
add
mov
push
mov
rcl
fwait
xchg
add
ds
xor
xor
js
xor
mov
hlt
cmp
add
cmp
mov
sub
pop
movsb
sub
out
xchg
mov
arpl
pushf
xor
sbb
push
mov
mov
dec
adc
mov
adc
add
inc
xor
push
insl
add
mov
jl
int
scas
push
cmpsb
or
int3
sub
hlt
jmp
insl
pop
ret
mov
sbb
addr16
mov
cwtl
enter
pop
scas
jl
orl
pop
mov
mul
adcb
pop
ret
rolb
push
gs
adc
jb
mov
call
js
cmpsl
or
clc
inc
lds
jmp
xchg
insb
scas
dec
sbb
fcmovb
xor
stc
pop
nop
mov
gs
push
mov
jg
jo
stos
loopne
cmp
jmp
push
insl
inc
pop
mov
fidivl
gs
or
add
mov
xchg
xchg
or
pop
mov
les
xchg
mov
addl
xorl
sbb
out
jae
adc
mov
sbb
aad
fisttpl
jbe
fbld
rclb
test
lcall
pop
addr16
ss
mov
xor
inc
xchg
mov
inc
mov
daa
call
inc
fmuls
rcrl
push
sbbb
ficomps
dec
push
rcrl
fcmovnbe
orl
test
movsl
inc
push
scas
lret
cmpsl
sub
sbb
add
sub
in
imul
daa
seto
adc
or
int3
cmp
xchg
cmp
loop
inc
pop
insl
sbb
push
lcall
mov
sub
push
push
fmuls
sub
sbbb
xor
add
xchg
push
test
push
sbb
push
sub
mov
push
in
mov
lods
push
out
arpl
ss
aad
sbb
cmp
movsl
rolb
pop
pop
or
sbb
outsl
adc
int3
lods
mov
pop
enter
or
xchg
pop
sub
popf
xchg
push
lea
stos
pop
sub
add
jno
inc
lds
sbb
lods
fsubs
push
add
mov
enter
outsl
lea
or
cli
sub
lea
sub
shrb
inc
fdivrs
int3
cmp
pop
aaa
ds
fwait
pop
outsl
loopne
pop
fcoms
pushf
xor
pop
movsl
or
dec
into
pop
sub
inc
bound
fwait
xchg
enter
or
inc
cmpsb
jl
sbb
xor
adc
pop
lods
mov
dec
add
dec
sahf
mov
cmpsl
xchg
push
pop
ficoms
fs
xor
and
fldenv
je
mov
ljmp
sbb
push
or
daa
push
dec
adc
movsl
pop
sub
mov
inc
pop
dec
jmp
xorl
sbb
dec
ljmp
lds
pop
loop
ficoml
mov
lret
xchg
sub
rol
lea
pop
rcr
pop
movsl
add
xchg
pop
add
sbb
cld
jbe
das
pop
mov
stc
lret
pop
aas
cmc
xor
inc
addl
pop
jbe
xor
jbe
push
or
lds
mov
mov
cmp
fnstsw
ss
jbe
dec
pop
lea
mov
test
mov
sub
aaa
mov
sarb
mov
sbb
int3
test
mov
push
sahf
mov
shlb
pop
rorb
scas
xchg
jecxz
aaa
push
sbb
or
jbe
or
mov
or
cmp
xchg
sub
xor
rcl
loop
dec
add
rcr
rep
dec
mov
adc
sbb
cmp
xchg
add
mov
lahf
subl
xor
push
es
lcall
mov
clc
mov
dec
addr16
jle
jg
fmull
aad
fisttpll
adc
ret
xchg
sahf
fnsave
out
and
lcall
popf
fists
sarl
xchg
jne
xchg
mov
pop
adc
stos
call
pusha
aad
test
sbb
fidivrl
in
jns
inc
xchg
cmp
sub
adc
mov
cmp
pop
mov
pushf
test
xlat
lods
sbb
daa
sbbl
fldenv
in
pop
sub
pop
fsub
lret
xchg
dec
insb
or
aaa
xchg
dec
adc
dec
and
bound
adc
loop
int
and
xchg
sub
arpl
pop
xchg
sbb
leave
and
adc
sbbl
mov
lret
push
sub
loop
loope
mov
and
pop
xchg
sub
mov
cmp
push
or
aas
xchg
test
pop
add
add
sbb
add
mov
lahf
adc
lret
lcall
push
push
pop
jns
fs
and
out
movsb
out
fidivrl
push
xchg
ja
outsl
add
push
add
pop
or
xor
inc
sbb
xchg
addb
push
or
dec
fwait
out
aas
dec
es
lahf
pop
out
push
comiss
pop
sbb
adc
xor
xor
fwait
les
jge
cmp
pop
jg
adc
daa
movb
cwtl
sbb
sbb
aaa
je
mov
fcoml
mov
or
jnp
dec
and
out
mov
fisubrl
mov
push
sub
push
pop
xchg
push
pushf
movsb
daa
leave
pop
aaa
jmp
cwtl
insl
call
adc
mov
gs
in
mov
daa
mov
mov
xchg
jg
pop
and
pop
inc
ret
ds
inc
cmp
fdivrl
sub
ds
sub
aad
xchg
sub
mov
int
les
pop
or
xor
dec
lret
mov
dec
lret
mov
dec
lret
gs
dec
mov
push
pop
add
inc
lcall
add
push
test
fwait
inc
fmul
dec
jg
into
lea
dec
subb
sbb
sbb
and
or
loopne
jg
jnp
push
sbbl
xchg
out
sbb
or
iret
xchg
shl
scas
mov
push
adc
pop
jp
cltd
push
mov
pop
lahf
gs
sub
aaa
cmpl
adc
add
pop
ret
pushf
decl
lret
stos
jnp
xchg
or
fimull
adc
or
dec
push
sbbb
mov
ljmp
sub
push
push
sbb
pop
add
addb
jmp
cmp
mov
test
xor
movsl
jg
stos
mov
jnp
sbb
sub
mov
test
ss
mov
mov
or
cmp
sbb
adc
cmp
test
cli
cwtl
sub
repnz
sub
inc
lahf
xor
xor
sbbb
sbb
xchg
adc
cli
cmp
adc
xchg
pop
and
shrb
or
inc
int
imul
pop
pop
movsb
xchg
and
outsl
and
mov
dec
testb
pop
push
mov
mov
pusha
nop
push
jo
pop
out
ret
cmpsl
maskmovq
scas
adc
mov
inc
pop
aam
xorl
jo
lcall
pop
stc
shr
mov
pop
insb
sub
xorb
mov
mov
dec
xchg
or
popf
int3
je
ss
mov
dec
popf
or
inc
fistpl
jne
stos
popa
iret
add
daa
xor
cmp
gs
fisttps
lahf
push
mov
xor
ret
loope
and
adc
sbb
lods
test
or
dec
mov
loopne
sub
loope
mov
inc
xchg
int3
inc
inc
cwtl
add
or
fdivrp
inc
dec
pop
loope
xchg
sbb
ss
or
adc
int3
scas
loope
inc
adc
mov
ss
inc
xchg
adc
aaa
or
int3
sti
lds
pop
test
out
lea
push
jb
jle
in
xlat
sub
dec
bound
fisttpll
inc
dec
mov
dec
hlt
inc
or
int3
cld
test
mov
les
out
iret
dec
ds
fs
pop
dec
fwait
jg
icebp
xlat
test
fmulp
or
imull
add
mov
int
xor
mov
dec
fimuls
aas
std
xchg
mov
into
or
or
daa
mov
mov
movsb
inc
mov
stos
leave
pop
sbb
into
jmp
sbb
or
out
xor
xchg
mov
xor
dec
push
imul
push
fsubrp
add
loope
mov
mov
push
leave
int
push
xchg
pop
leave
vphaddbq
dec
int
enter
shlb
inc
aaa
rclb
adcb
sub
ss
addr16
mov
xchg
rol
daa
enter
rcrb
sub
mov
int3
enter
or
int
dec
divb
dec
mov
enter
add
rorb
negb
or
aas
dec
inc
jbe
sbb
jbe
inc
cli
mov
int3
jbe
lahf
pop
enter
or
jbe
aas
rol
jbe
das
push
pop
xchg
add
sub
cld
pop
imul
leave
sub
cld
pop
arpl
sub
lcall
cld
pop
xchg
leave
lcall
rcrl
mov
or
pop
imul
inc
leave
sbb
addr16
jne
pop
imul
xchg
leave
cmp
pop
xchg
leave
mov
popf
pop
xchg
mov
cmpsb
mov
pop
insb
leave
and
leave
and
leave
and
leave
add
add
push
lret
jbe
ret
and
fcoml
jbe
lahf
pop
sbb
or
and
cmp
sbb
sbb
fdivr
lds
inc
add
hlt
pop
cmp
cmp
xchg
push
orl
sub
pop
mov
scas
inc
push
dec
fisttpll
das
sub
add
push
mov
add
sub
add
cmp
or
and
xor
mov
loopne
orps
mov
adc
push
or
sbb
xor
dec
cmp
test
or
leave
loopne
push
loope
xchg
cltd
mov
adc
sbb
dec
insb
sbb
addr16
inc
shl
mov
in
repz
sarb
xchg
daa
int
dec
mov
pusha
movsl
fisttpll
xchg
nop
je
insl
in
adc
pop
xor
insb
sbb
loop
addb
int3
mov
outsb
xchg
jo
imul
sub
sbb
testb
mov
xchg
int3
mov
decb
addr16
imul
scas
mov
dec
pop
jmp
jae
subl
imul
inc
pop
es
enter
add
inc
sahf
push
dec
test
cmp
pop
dec
cmpb
push
mov
gs
icebp
and
mov
push
dec
pop
out
dec
outsl
sahf
insl
pop
or
mov
insb
sbb
loop
int3
subl
gs
out
ds
aaa
mov
mov
inc
aas
dec
or
mov
mov
mov
mov
int
loop
jle
ss
insb
sbb
loop
dec
subl
cmc
jg
mov
in
xor
sub
outsl
add
aam
xorb
ds
cmpsl
sbb
insb
dec
sub
popf
pop
test
popf
add
insl
mov
loop
movl
test
popf
or
or
test
jo
into
pop
and
cs
shrb
rcrb
rep
add
mov
ds
adc
imul
dec
sbb
repz
dec
fisubl
xorb
ds
bound
hlt
ds
imul
inc
sbb
inc
jae,pt
xchg
or
or
fisttpll
int3
insb
sbb
loop
lea
xor
out
ds
adc
and
loope
push
pop
out
lock
leave
sahf
jle
cli
lds
lcall
int3
cmpsl
pop
ja
rclb
jmp
and
jecxz
push
inc
std
push
shrl
pop
sub
outsl
add
aaa
xchg
pop
push
ss
lock
imul
bound
nop
inc
aas
aam
xchg
int3
and
int3
mov
fucomp
in
imul
mov
fdecstp
loop
movl
ds
sti
mov
inc
aas
imul
push
add
test
mov
lea
xchg
enter
es
stc
enter
fs
push
enter
mov
push
ja
jno
and
aad
mov
shlb
in
int3
adcl
adc
or
lret
or
jge
adc
add
repnz
adc
sub
fwait
and
aas
add
popa
sub
dec
add
movsl
or
push
lea
mov
sbb
xor
pop
and
mov
push
xchg
pop
jbe
lahf
fwait
sbb
jp
cmc
sub
xchg
or
inc
lcall
popf
movsl
lds
rep
addl
les
aam
sbb
inc
inc
jmp
mov
dec
mov
les
pop
sbb
mov
rcrl
test
stos
add
shrl
mov
xchg
stos
out
cld
popa
call
sahf
movb
sbb
xchg
jne
sarl
add
xor
or
popf
pop
inc
lock
xchg
addl
xchg
icebp
scas
scas
jecxz
enter
add
or
imul
in
in
in
orb
adc
aaa
inc
jp
pop
add
insl
ret
or
pop
std
int3
adc
pop
jb
enter
xor
fistpll
adc
dec
in
fs
pop
mov
adc
lret
sbb
push
mov
dec
mov
loop
push
aas
aas
xor
adc
sbb
xor
adc
jns
xlat
push
call
adc
inc
inc
sbb
int
je
sub
push
loop
xor
fimuls
push
xor
rolb
pop
add
adc
mov
enter
int3
cli
insl
push
xlat
pusha
xlat
and
es
cmp
lcall
bound
lahf
stos
sbb
movsb
push
adc
mov
popf
cmp
inc
mov
adc
xchg
add
mov
sub
push
loop
mov
out
fwait
mov
out
out
dec
xchg
jo
movsl
imull
stos
aas
pusha
lods
mov
pop
gs
fstl
out
rorb
loop
mov
or
mov
push
xchg
or
inc
push
jns
xchg
stos
stc
fildl
pop
and
stos
push
sbb
pop
sarl
or
xchg
daa
mov
push
add
mov
fcoml
inc
xchg
stos
je,pn
pop
sbb
inc
sub
sbb
mov
xor
loop
fsubrp
jle
mov
rcrb
push
push
int3
cmp
es
aas
pop
loop
jo
push
adc
jae
mov
pop
lret
out
daa
sbb
outsl
xor
notb
push
jg
rorl
in
add
add
sbb
les
lods
leave
scas
sub
fwait
dec
movd
test
jle
ficoms
fsubr
rolb
or
and
sub
cmp
pop
jae
stos
pop
push
dec
jg
cwtl
out
sbb
jp
push
rorb
add
mov
sub
fmul
jns
flds
flds
adc
adc
adcl
push
pusha
adcl
icebp
push
jno
dec
enter
lahf
andl
push
mov
clc
lret
inc
add
jno
add
scas
jns
fs
rorb
decb
aas
mov
roll
and
push
int
mov
test
push
inc
mov
cmpsl
push
int
aaa
dec
mov
or
int3
add
in
push
inc
js
lcall
daa
xchg
mov
std
dec
mov
sbb
imul
mov
dec
aas
add
or
xlat
jne
rcrb
outsb
mov
aas
xchg
mov
sub
push
sbb
add
add
roll
mov
mov
rol
or
jnp
push
pop
cs
xor
jp
or
mov
pop
mov
lret
lods
clc
sbb
lods
fwait
or
movsb
mov
sbb
popf
mov
xor
lock
test
adc
dec
sbb
or
pushf
adc
data16
ds
fwait
cmp
loope
clc
sub
fwait
adc
test
and
pop
sbb
jns
cmp
pop
aad
or
mov
sbb
sbb
pop
loope
shlb
sub
or
mov
pop
sbb
gs
dec
inc
jg
sbb
pop
cmp
mov
push
mov
sahf
pop
inc
cltd
out
push
xchg
test
push
and
aaa
rorl
fnstsw
out
mov
les
int
adc
push
adc
in
sub
and
ret
adc
add
jae
ret
sbb
sbb
jo
inc
xor
inc
mov
hlt
ret
push
mov
sbb
das
adc
mov
sub
and
cltd
mov
add
pop
adc
imul
lods
rorl
mov
xchg
fstpl
rep
push
and
test
sub
lods
repz
push
nop
adc
cmpsb
push
pop
mov
mov
stos
pop
lods
and
movsw
sub
pop
enter
pusha
insl
sbb
leave
andl
pusha
or
add
test
adc
setne
lea
pusha
in
mov
pusha
out
inc
dec
pusha
pop
inc
dec
pusha
pop
inc
dec
pusha
pop
inc
dec
pusha
pop
inc
dec
shlb
ret
and
mov
sbb
cltd
out
dec
shrb
dec
sbb
adc
dec
por
or
aaa
add
adc
xor
ja
lock
arpl
inc
adc
xor
imul
out
sub
mov
sbb
pop
and
imul
dec
or
test
repz
xor
mov
xor
pop
adc
adc
cmc
cmp
sbb
push
sbb
inc
test
testb
cmp
stos
sbb
add
in
bound
pop
jp
daa
movsl
sbb
dec
negl
add
or
or
adc
cltd
hlt
push
rcrl
adc
push
dec
scas
mov
das
popf
addr16
dec
out
adc
int
inc
cmp
sbb
popf
mov
xlat
clc
imul
hlt
xchg
cmp
pop
leave
add
adc
push
out
push
out
cmpsl
sbbl
cmp
or
lds
fucom
pop
lds
pop
scas
sbb
aad
sbb
or
mov
sbb
nop
jl
pop
lds
sahf
sbb
sbb
pop
sub
loopne
xor
inc
dec
push
arpl
arpl
rcrb
pop
pop
push
or
xchg
inc
sbb
xchg
xchg
filds
push
sahf
out
sbb
add
nop
popf
or
mov
filds
lea
je
stc
add
mov
insl
adc
jo
in
cltd
jno
lea
push
enter
sbb
popf
rorl
data16
lret
ret
mov
adc
sti
cmp
cmp
sub
xchg
sti
movsl
adc
xor
pop
daa
ror
or
sub
sti
jp
cwtl
push
or
rcrl
testl
inc
bound
dec
pop
inc
xchg
lcall
jb
imul
and
mov
shlb
cmp
push
nop
out
es
lea
orb
xor
es
sbb
lds
dec
mov
test
ja
fs
nop
xchg
cmp
bound
sub
ret
mov
sub
adc
popf
inc
and
faddl
mov
stos
push
test
cmpsl
mov
xor
sub
dec
cmp
sub
test
mov
push
sub
sub
mov
sbb
scas
and
popf
adc
jo
mov
cmc
push
mov
xchg
pop
in
xor
jmp
inc
mov
notl
or
shll
adc
and
mov
xor
lcall
inc
scas
repz
dec
mov
int3
and
or
lahf
add
ret
xor
loopne
test
pop
sub
cmp
add
mov
and
and
ja
leave
push
fstps
or
mov
sub
pop
pushfw
push
popa
mov
jg
push
enter
push
push
add
xor
sub
xchg
leave
xor
out
je
add
ja
pop
push
sub
fbstp
or
cltd
jo
mov
nop
cmp
cmp
or
pop
sub
push
pop
xor
ret
lds
test
enter
leave
push
test
or
in
jl
clc
mov
pop
pop
sti
sub
mov
add
stc
mov
test
into
dec
lock
std
insl
pop
or
mov
scas
scas
sub
fimull
mov
xchg
pushf
mov
js
mov
fs
test
sub
xchg
test
jmp
xor
cwtl
pop
je
and
je
pushf
subl
sub
imul
jno
dec
jge
cltd
adc
push
cs
int3
add
or
pop
insb
cwtl
ret
out
pop
lds
ror
cli
jne
and
test
pop
xchg
mov
add
lock
push
add
pushf
mov
dec
rcll
sbb
sbb
or
ss
popl
xchg
js
scas
mov
cmp
jmp
repnz
xchg
add
loope
inc
dec
lock
dec
mov
scas
loop
inc
lret
int3
loop
ret
sahf
loop
mov
int3
jl
jg
loop
cmpsl
or
fnstsw
cwtl
add
popf
mov
ret
xor
and
ja
das
rcll
lret
leave
pop
fs
movsb
pop
xor
pop
in
mov
inc
sarl
leave
pop
inc
jmp
enter
cmc
addr16
push
push
and
fwait
test
cwtl
dec
cltd
gs
lock
in
push
aas
dec
adc
pop
movsb
push
pushf
mov
or
adc
mov
mov
add
bound
xchg
mov
cmp
andb
leave
push
es
fisubrl
pop
popf
ret
enter
jg
or
lods
loop
loopne
cli
mov
adc
mov
enter
popa
sub
add
test
aaa
add
fsub
xchg
mov
pushf
loopne
jecxz
leave
mul
icebp
jecxz
and
lcall
inc
or
sbb
xchg
dec
lds
cmpsb
aaa
test
adc
and
add
xor
ret
mov
xor
jmp
sbb
jne
fdivrp
sbb
mov
pop
mov
arpl
nop
adc
inc
ss
mov
adc
xchg
and
mov
adc
orb
lods
sahf
ds
test
ljmp
dec
mov
xor
xor
call
jno
ret
add
movsl
inc
add
and
fisubrl
cld
xor
jmp
push
lds
dec
mov
push
mov
mov
mov
mov
inc
sub
ja
pop
lea
mov
or
lock
xor
xchg
fxch
xor
inc
dec
cmpsl
ja
adc
fs
fldl
enter
dec
jbe
out
xlat
adc
push
inc
mov
sub
scas
sub
and
dec
inc
jmp
daa
arpl
inc
xchg
iret
inc
fisttpl
inc
jp
outsb
xchg
inc
inc
mov
cmp
cmp
andl
jne
push
orb
push
push
adc
cli
idivl
stc
pop
push
out
mov
into
mov
bound
add
xchg
cs
push
jg
movsl
sbbl
sub
xlat
adc
push
lret
add
sbb
arpl
adc
push
push
mov
pop
mov
out
ds
push
add
dec
testl
pop
jae
cmp
and
add
pop
cmpsb
mov
jno
loope
fildl
sbb
in
add
mov
pop
inc
cs
add
jo
stos
push
in
xor
daa
sub
addr16
repnz
scas
cmpsl
adc
rol
or
mov
adc
mov
fnsave
sahf
inc
das
inc
add
jns
push
inc
outsl
add
sub
test
xchg
stos
push
mov
pop
fwait
out
adcb
lcall
lret
xchg
pop
orb
lea
and
cmp
mov
mov
subl
outsl
xor
insl
xchg
popf
out
add
xchg
adc
sbbb
inc
adcl
xor
push
xor
jo
cmpl
faddp
icebp
cmp
aaa
pop
inc
push
sub
sbb
and
sbb
dec
mov
inc
or
sub
cmp
sbb
push
cli
or
ret
xchg
add
daa
xchg
mov
adc
xchg
lret
test
pushf
popa
inc
mov
je
dec
mov
lds
enter
sbb
push
xchg
sub
adc
sbb
xchg
cmp
sbb
test
sbb
ret
rolb
pop
loopne
mov
mov
lret
cmp
rorb
sub
or
xor
aaa
inc
aaa
dec
lock
es
cmp
pop
sbb
mov
and
daa
dec
stos
and
leave
pop
or
pop
xrelease
lahf
inc
clc
or
mov
cmp
add
inc
mov
sub
idivl
push
iret
sarl
mov
notb
testb
dec
mov
leave
sub
cmp
push
sub
or
push
js
push
sub
lret
mov
pop
dec
ror
icebp
xchg
pop
adc
repnz
inc
lock
movb
fsubrs
xrelease
add
pop
stos
daa
or
add
xorb
in
mov
push
mov
ret
xor
sub
push
mov
gs
add
push
pop
sbb
mov
cmp
or
push
lock
shrl
popf
xchg
sbb
push
les
cmp
leave
es
pop
push
das
pop
fisubl
stc
adc
and
jb
int3
pop
pop
xchg
push
adc
fidivl
lods
adc
and
sbb
pop
insb
xorps
gs
xor
and
xchg
jne
aas
inc
add
sarb
sti
xchg
sub
fisttpll
dec
push
gs
jl
add
sbb
pop
dec
jl
rcl
push
mov
mov
imul
or
pop
xchg
repz
adc
inc
out
mov
insb
xchg
jmp
push
ret
adc
dec
sub
xchg
pushf
cltd
sbb
lea
xchg
sbb
rcr
cld
add
fisttpl
ret
sbbl
stc
and
fmull
popf
jns
and
lods
xlat
lds
or
jns
daa
into
jle
pop
jns
sub
stos
sbb
and
lahf
arpl
sbb
mov
mov
adc
cmpsb
add
or
ret
imul
jecxz
ret
mov
lods
push
jo
inc
pop
jne
andl
cmp
insl
pop
push
rol
mov
jmp
dec
fwait
dec
test
dec
add
add
rcrl
or
add
and
pop
rolb
nop
inc
add
xor
les
dec
pop
fmull
sub
sbb
into
pop
daa
or
sbbb
sub
sub
inc
or
and
dec
jo
xchg
in
inc
into
imul
js
add
sbb
sti
cwtl
push
and
mov
and
popa
sub
and
arpl
stc
dec
sbb
add
pop
jge
xchg
lock
mov
sbb
mov
add
movsb
jmp
adc
fwait
adc
cltd
sbbb
pop
jo
int
sbb
pop
addb
add
sbb
lret
insl
fiadds
or
dec
adc
xchg
xchg
or
aas
fcompl
and
sub
push
mov
mov
or
add
test
xchg
add
or
jo
mov
out
loop
fisttpll
jge
mov
inc
in
push
fildl
sbb
aaa
add
lret
test
insl
in
xchg
xchg
mov
push
out
mov
sbb
filds
sbb
arpl
dec
add
dec
push
in
jno
ret
cs
cmp
and
xchg
xchg
cmpsl
jnp
les
or
les
push
push
xchg
adc
test
lock
xorb
jecxz
add
sbb
push
ficompl
pop
dec
push
xchg
fstpl
lds
inc
leave
movsb
out
cmc
cmp
push
mov
sbb
inc
sahf
pop
xchg
sub
adc
mov
inc
inc
push
inc
lea
daa
addb
jno
scas
xchg
add
stc
xchg
add
int3
adc
cmp
cmp
jg
movb
add
jp
jb
or
add
test
sbb
add
push
adc
subl
push
into
inc
fcoms
add
pop
sub
arpl
leave
jp
push
add
sbb
sbb
dec
xchg
adc
insb
xchg
pop
add
dec
push
lods
cltd
mov
inc
pop
sub
cmp
pop
je
adc
pop
mov
inc
arpl
data16
lds
add
imul
jo
fs
xorl
popf
xchg
mov
pop
xchg
das
stc
out
xor
add
sbb
add
out
add
push
jo
mov
icebp
add
mov
add
jo
into
bound
aaa
sub
ficoml
ja
les
add
mov
pop
test
xlat
lds
call
lea
imull
sbb
pop
fwait
or
cmovge
rcll
or
mov
addr16
inc
jle
and
cltd
lret
xchg
arpl
leave
xor
or
dec
imul
or
cmpsl
int3
dec
pop
push
add
int
pop
mov
ja
xor
aaa
xchg
lds
cmp
addb
xchg
xlat
add
xor
scas
aas
scas
cltd
mov
out
mov
mov
hlt
les
xlat
pop
lods
test
test
mov
aas
inc
mov
outsb
xchg
or
stos
push
pop
orb
adc
call
or
and
pop
or
loop
in
repz
in
lret
jmp
xor
gs
jmp
mov
sbb
adc
or
xchg
sti
xchg
mov
loopne
sub
outsl
jmp
arpl
push
push
clc
sbb
fsubl
es
mov
pop
movsb
loopne
adc
push
adc
push
testl
adc
xchg
cmp
or
xor
insl
push
inc
adc
sbb
mov
cld
clc
in
xorl
stos
mov
mov
lahf
inc
sbb
loop
cltd
or
and
mov
sahf
and
pop
fimull
pop
or
dec
mov
pop
xor
dec
cltd
add
pop
leave
testb
mov
sbb
lock
out
dec
add
add
test
add
ds
sub
mov
dec
adc
inc
xor
std
roll
fidivrl
and
sub
lods
jno
lret
jo
ljmp
xor
cmp
mov
xchg
jae
cmpsl
lret
adc
scas
cmpsl
sbb
test
mov
arpl
cmp
repz
mov
movsb
push
bound
js
in
sub
test
xchg
and
loope,pt
pop
pop
xor
rcrb
pop
mov
popa
dec
mov
rcrb
adc
xor
add
adc
dec
xor
cwtl
lret
fiaddl
pop
pop
sbb
lock
dec
sbb
test
pop
imul
xchg
pop
mov
add
lahf
inc
sub
outsb
mov
jae
lahf
mov
test
adc
or
clc
mov
pop
pop
xor
and
shlb
cmp
inc
sub
adc
sbb
dec
push
adc
add
aas
mov
stos
dec
inc
push
inc
dec
int
int3
test
imul
out
dec
inc
mov
xchg
arpl
inc
mov
imul
pop
addr16
mov
sbb
dec
mov
push
inc
adc
imul
addl
pop
adc
sub
bound
jne
inc
dec
push
inc
stos
adc
das
scas
mov
jnp
mov
fwait
dec
sub
pop
cmp
dec
mov
and
in
bt
pushf
clc
mov
rol
cmp
test
jmp
push
lea
js
stc
clc
mov
stc
pusha
add
pushf
cmp
call
pusha
pusha
mov
lea
je
inc
pushf
push
btr
sub
xadd
sar
mov
bsr
neg
add
clc
mov
test
movzbw
pop
shr
sub
lea
mov
bt
or
pushf
pushf
lea
je
shl
add
sar
sbb
sub
stc
shr
btc
mov
movzbw
rcr
sar
add
call
seta
pushf
mov
push
bswap
lea
pusha
mov
xchg
not
pushl
popl
cwtl
mov
lea
pushl
movsbw
movl
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
out
dec
dec
sub
icebp
xor
jle
es
mov
fsubrp
dec
jae
rol
pop
je
pop
or
push
dec
add
dec
push
pop
out
inc
xlat
addr16
movsl
cmpsl
or
or
push
stos
imul
pop
xchg
sti
cmp
aas
scas
xor
imul
popa
dec
sar
out
adc
dec
inc
mov
and
cltd
xchg
lahf
fildll
das
xlat
push
xchg
sub
pop
mov
cmpsl
pop
fidivrs
lea
scas
add
xchg
push
dec
mov
jle
xchg
ret
mov
xor
xchg
add
push
mov
and
fistpl
pop
out
pusha
mov
xor
out
mov
jne
mov
and
stc
pushf
add
sub
stc
stc
pushf
add
lea
jne
pusha
dec
call
pop
pop
xor
pop
and
in
inc
lahf
pop
pop
sbb
movsl
je
std
imul
aam
sub
data16
daa
daa
inc
sbb
pop
lds
mov
cwtl
lods
sbb
cmp
mov
lods
es
cmpsl
add
pop
push
adc
mov
mov
and
inc
jp
xchg
sbb
sbbl
je
orb
scas
lock
subb
out
jp
mov
mov
sub
ret
sti
ljmp
mov
adc
stos
hlt
add
xlat
int
adc
jg
stc
repz
cmpsl
lods
sbb
mov
jae
or
pushf
pushf
or
or
loope
in
adc
repz
pop
fwait
fs
in
cmc
sub
fbstp
dec
mov
mov
jae
fdivrl
mov
mov
adcl
sbb
loope
or
sti
push
gs
push
lahf
jl
fwait
je
insl
xchg
push
sti
sti
sbb
jns
lds
sti
jmp
jecxz
or
fldt
sbb
in
or
adc
push
loope
ret
jl
lods
adc
jg
mov
stc
test
or
out
mov
les
or
or
in
mov
pop
stos
ljmp
mov
dec
movsl
int
xchg
scas
inc
cmpsb
into
mov
xchg
mov
or
inc
cmp
mov
enter
cmp
sbb
xor
push
in
sub
sahf
adc
in
insl
pop
pop
push
inc
sub
jns
stc
bt
xor
pusha
ror
pusha
push
lea
call
pushf
cmp
jmp
push
fisttpl
jnp
fldz
inc
fsqrt
pushf
fcompl
into
jp
cwtl
scas
dec
lods
dec
pop
cmp
pop
daa
es
mov
aaa
insb
inc
fsubrl
mov
leave
xor
xchg
test
rclb
pop
sbb
test
inc
mov
xor
mov
test
out
dec
push
shrb
mov
rcrb
stos
cmpsb
fdivp
js
in
pusha
mov
nop
jmp
cltd
cltd
imul
jmp
mov
add
std
decb
cli
jb
push
pop
arpl
fsubrl
mov
sub
mov
push
cmpsl
push
clc
xchg
pop
dec
sbb
fucom
loope
sti
fildll
stc
push
and
test
flds
out
ret
inc
lods
ret
sbb
cmp
push
sti
jo
out
fidivs
test
mov
push
push
mov
jo
jg
and
dec
jle
sub
add
push
push
js
jmp
iret
iret
lea
je
stc
add
pushf
pusha
pusha
mov
lea
jmp
cmc
test
push
pushf
jmp
call
fs
fbld
xlat
lock
pop
xchg
popa
mov
loope
arpl
daa
and
addr16
cmp
jns
sub
test
fbstp
jo
in
stos
push
and
es
pop
bound
sbb
xor
pop
test
xor
mov
mov
adc
pop
mov
or
mov
inc
mov
sahf
lods
ret
cwtl
push
cmp
scas
fmuls
mov
pop
push
pop
pop
aam
js
ljmp
mov
lea
jl
push
movw
lea
mov
pusha
mov
mov
pushl
ret
jmp
pusha
pusha
lea
je
jmp
jmp
jmp
jmp
jmp
lea
call
call
movl
call
cltd
sbb
sub
push
sbb
stos
push
push
movb
sbb
pop
add
push
pop
ret
push
lcall
insl
int3
jno
shlb
mov
ret
mov
inc
test
nop
mov
out
popf
rcrl
jmp
movsb
push
int
loop
insb
in
sub
inc
sub
mov
push
adc
test
lods
cmpsl
sub
call
lret
xchg
ljmp
stos
inc
or
in
pushl
sub
scas
push
or
cltd
pop
sub
push
loop
cs
jmp
stos
scas
fadds
pop
pushf
int
adc
inc
mov
mov
add
fsts
sub
mov
sub
xchg
stos
shrl
scas
in
mov
call
ljmp
nop
or
jg
fs
jp
jecxz
mov
fsubrp
add
rcll
lods
insb
outsb
mov
sub
in
loop
stos
push
scas
ljmp
push
sub
test
cmp
out
xchg
sbbb
push
mov
dec
in
sub
mov
mov
push
stos
imul
fistl
sub
insb
sub
xchg
scas
pop
popf
adc
call
insb
sbb
stos
inc
adc
jg
call
jl
outsb
add
xchg
jl
or
pop
test
dec
mov
daa
sbb
sub
pop
jg
aas
jecxz
lds
adc
mov
cltd
mov
mov
cmp
stos
adc
xor
mov
gs
iret
lds
adc
cmp
mov
insl
loop
mov
fs
mov
mov
pop
mov
pop
in
sub
jns
lret
sub
push
arpl
lods
nop
mov
push
lahf
mov
adc
dec
push
cltd
data16
mov
adc
push
cmc
sub
pop
xchg
sub
nop
daa
mov
and
arpl
adc
test
adc
mov
dec
jecxz
movsb
loope
cmp
test
adc
and
mov
sbb
mov
pop
adc
fisubrs
sub
loopne
inc
inc
cmp
mov
loop
add
mov
loop
xchg
movsl
lods
popf
pop
mov
rclb
add
bnd
stos
add
sbb
mov
pop
mov
aaa
adc
pop
and
mov
scas
xchg
dec
insb
mov
inc
add
jl
lods
lea
in
movsb
cmp
loope
gs
inc
push
pushf
mov
add
sbb
cltd
and
incl
adc
test
das
sub
mov
xchg
sti
sub
mov
fsubrs
xchg
pop
jg
mov
sub
daa
and
mov
jno
out
pop
ss
xchg
pop
dec
xchg
mov
sub
sbb
fiadds
loop
and
lahf
add
mov
sahf
fs
addr16
and
mov
push
fisttps
add
pop
xor
adc
fs
jl
sbb
adc
add
pop
scas
decl
xchg
test
push
rolb
adc
lods
add
xchg
das
xchg
test
jg
mov
je
jecxz
cltd
imul
aas
in
test
sti
adc
popf
rcll
adc
cmp
xchg
ficoms
shrl
mov
jno
imul
ficoms
mov
fists
pop
sbb
dec
sbb
arpl
scas
push
mov
pop
push
sbb
push
xchg
mov
jp
add
adc
sub
push
bound
stos
mov
aaa
rclb
out
fiadds
shl
mov
xchg
pop
add
loope
test
adc
inc
sbb
push
popa
cmpsl
imul
inc
shrl
test
xchg
and
testb
stos
lods
add
mov
daa
pop
push
inc
mov
push
stc
xchg
ret
pop
mov
dec
outsb
mov
imul
mov
push
lock
adc
mov
stos
std
pop
push
push
sub
adc
cs
sub
movsl
mov
cmp
jp
push
push
fadds
rcr
jmp
in
sub
cwtl
mov
push
lds
dec
sub
aas
mov
jecxz
cmp
stos
bound
pop
xchg
fcoml
iret
dec
fidivrs
in
or
rcrb
in
sub
push
std
cmp
and
adc
add
imul
inc
arpl
outsl
add
cltd
mov
addps
sbb
in
mov
in
daa
adc
pop
xchg
cltd
pop
pop
cs
call
pop
sub
jmp
mov
xchg
push
sbb
scas
add
jb
pop
stos
mov
jmp
mov
dec
shr
mov
xchg
sub
std
and
pop
pop
in
in
call
adc
stos
imul
lret
pop
push
sbb
repnz
pop
add
or
scas
push
push
sub
adc
jecxz
in
rclb
test
jp
in
pop
imul
pop
insb
fimull
dec
loop
pop
and
add
in
test
scas
arpl
sub
xchg
pop
jl
in
cmp
pop
cli
cs
push
or
push
xchg
lods
pop
push
mov
loope
xchg
or
push
aas
test
test
and
popf
add
push
ja
shlb
imul
stc
pop
in
lret
push
cs
pop
mov
in
jnp
sub
inc
imul
sub
loop
sub
inc
sbb
das
in
sub
and
pop
sub
push
stc
push
pushf
jns
xchg
adc
xchg
cmp
xchg
lahf
in
push
jp
imul
in
mov
dec
test
subl
in
das
ljmp
arpl
mov
sbb
mov
adc
pop
push
arpl
in
loop
rorl
push
xchg
leave
add
and
cmc
loop
xor
jp
push
pop
cs
jns
mov
xchg
cmpsl
loope
and
test
in
dec
mov
lds
imul
add
inc
test
and
lods
clc
add
pop
jb
mov
dec
mov
push
outsb
stos
loope
test
ljmp
mov
frstor
insb
jmp
xchg
inc
in
gs
les
pop
add
in
pushf
sub
test
sub
jecxz
imul
inc
arpl
add
pop
mov
xor
mov
mov
fidivrs
leave
jbe
popf
pop
dec
pushf
mov
insb
aaa
in
push
jecxz
pop
sub
fs
stos
arpl
sub
in
xchg
push
xchg
scas
in
xchg
mov
adc
aam
pop
outsl
shl
daa
push
addr16
jecxz
loope
push
mov
in
pop
das
icebp
xor
cs
mov
mov
loop
loop
mov
sub
inc
push
adc
imul
in
pop
lods
mov
in
rcrl
mov
addr16
les
adcb
push
sbb
adc
adc
and
xchg
xlat
cs
push
lds
push
test
test
push
and
imul
daa
jg
out
cmc
subb
arpl
sub
ja
dec
pop
mov
jg
ss
push
mov
adc
jp
std
ficoml
movsb
pop
in
scas
inc
push
push
cs
xchg
adc
test
jne
cmc
jp
sbb
pop
mov
cwtl
fidivs
cltd
push
sub
outsb
outsb
test
mov
lds
mov
jmp
jns
in
lcall
xlat
xchg
xor
or
popf
nop
mov
int
sbb
popa
fidivrs
shrb
std
pop
imul
sub
push
push
sbb
cmc
mov
movsl
addb
mov
push
xchg
ficomps
pop
mov
add
mov
test
popa
fiadds
mov
mov
sub
in
adc
mov
in
sub
aaa
xor
popa
sbbb
pop
pop
mov
jmp
int
imul
cvttps2pi
movswl
aaa
fstl
lea
push
xchg
in
and
bound
lods
adcl
sub
loop
cmpsl
fisttpl
nop
jmp
test
mov
js
lcall
add
xchg
jmp
adc
je
xchg
sub
stos
adc
lods
pop
and
inc
in
add
adc
push
inc
mov
mov
push
xor
cmpsb
lea
sub
push
dec
jo
pop
xchg
adc
adc
insl
add
inc
lock
adc
inc
mov
mov
jl
cmp
dec
sbb
push
out
das
int
add
arpl
jne
jns
repnz
push
or
decb
or
sub
test
fstps
adc
mov
jg
pusha
adc
xor
pop
adc
test
enter
dec
mov
cmpb
in
add
fcomps
xor
mov
das
aad
or
cmp
push
or
arpl
addr16
cmp
dec
inc
mov
push
sub
jo
push
add
sbb
inc
mov
cmp
inc
mov
mov
rcrb
pop
gs
cltd
xchg
xor
xchg
pop
add
add
push
imul
lahf
sbb
or
inc
or
jmp
push
dec
cs
sbb
aas
test
push
push
mov
add
in
xor
cmp
dec
add
and
mov
fiadds
mov
jno
test
cmp
aaa
pop
push
outsb
fwait
pop
icebp
cmp
aad
add
add
sbb
cmp
add
mov
popf
jne
dec
mov
insl
xor
push
push
gs
or
sbb
add
mov
jge
fsubrp
lret
fucom
add
mov
add
or
or
sbb
cmpb
stos
insb
stos
outsb
in
pop
outsl
and
int
pop
pop
aad
xchg
or
push
fucomip
add
lahf
sub
rcrb
lock
push
xor
adc
push
adc
insb
push
sbb
adc
sbb
add
push
sub
sbb
pop
testb
push
xchg
mov
in
out
add
add
filds
sub
std
int3
lods
es
nop
sbb
sbb
xchg
pcmpgtw
mov
outsl
sbb
adcb
out
add
add
push
pop
fistpll
and
daa
cs
adc
sbb
inc
cmpsl
sbb
sbb
pop
add
in
or
aaa
cltd
dec
lcall
ficomps
mov
add
jp
cwtl
lea
cmp
movsb
int3
push
sub
pop
mov
dec
adc
pop
sbb
aaa
insb
xor
sahf
cmp
or
pop
sarl
sbb
addr16
mov
xor
out
arpl
dec
push
mov
push
or
inc
ret
sub
daa
add
xchg
push
add
cld
push
xchg
sub
sbb
or
push
leave
in
cmp
adc
out
dec
mov
xchg
mov
jl
out
aam
push
leave
lock
add
adc
push
in
add
push
sbb
inc
adc
aam
lock
and
sbb
dec
xchg
insl
outsl
scas
int3
ja
add
into
fstpl
sbb
popa
cwtl
cwtl
push
in
dec
cs
rolb
push
lret
mov
out
jns
into
stos
xchg
xor
addr16
push
pop
out
adc
sub
fldcw
pop
shl
mov
and
pop
int3
bound
xor
insb
pop
mov
pop
popf
xlat
sahf
out
push
bound
mov
and
bound
sbb
popf
or
ja
cltd
ret
cmp
mov
mov
xor
mov
bound
mov
push
xor
pop
ret
cmpsw
or
lret
dec
add
out
add
outsl
mov
daa
int
addr16
testl
int3
loop
subb
ret
rorl
lcall
cmp
or
test
sti
pop
adc
xor
lea
add
movsb
stc
dec
int
jbe
mov
xor
addr16
push
insb
pusha
pop
pop
cs
pop
and
loop
pop
leave
xchg
sbb
stc
repnz
icebp
push
mov
pop
gs
and
ja
loop
inc
jbe
sbbl
add
in
add
dec
mov
js
sub
pop
rcll
testl
and
jp
daa
xor
pop
outsb
add
cmp
mov
add
pop
mov
push
int
pop
sbb
mov
dec
sarb
fimuls
inc
pop
cltd
push
push
xor
push
cmp
pop
cmp
inc
call
cltd
xor
outsl
push
cmpsl
adc
jle
shlb
cmp
add
out
repz
xchg
xchg
lds
jns
dec
push
sub
sub
push
aaa
imul
cmp
ret
dec
stos
aaa
sbb
popf
pop
rolb
sbb
cmpsl
dec
xchg
cld
in
dec
xor
ljmp
subl
add
add
adc
scas
ffreep
push
jle
in
dec
es
push
mov
out
ss
jbe
test
mov
mov
ljmp
insb
lcall
ds
push
mov
repnz
and
out
jnp
test
add
pop
movups
int
mov
xchg
add
jb
push
mov
sbb
sahf
out
and
lret
xchg
dec
fisubl
xorl
dec
and
cmp
cmp
stc
mov
adc
repz
mov
inc
daa
xor
daa
sub
jae
jne
mov
xchg
add
lret
jno
push
mov
cmpsb
sub
mov
or
loope
sbb
movsb
fcmovne
and
ljmp
lahf
add
and
or
daa
push
icebp
dec
mov
fstp
insl
stc
lahf
dec
insb
pop
or
addr16
cld
ret
out
popf
and
ljmp
sbb
dec
rclb
or
pop
cmp
scas
cmp
cmp
inc
xor
test
cld
push
insb
sub
add
pop
adc
and
imul
fnstsw
or
sub
popf
adc
cmp
sbb
mov
inc
psubsb
sub
sahf
sbbl
loope
insl
pop
add
pop
cmp
iret
push
arpl
jns
cmc
jp
dec
xchg
pop
jns
mov
mov
xchg
lea
pop
negb
inc
inc
sub
jmp
enter
push
add
outsb
xor
rorl
pop
xor
jl
adc
pop
mov
ja
pop
add
adc
ficomps
cmp
pop
pop
inc
cmpsb
pop
adc
dec
rorl
pop
mov
std
sarb
inc
repz
jl
mov
pop
mov
addl
cmp
sbb
addr16
dec
mov
dec
addl
sbb
sbb
orl
sti
ret
shll
pop
jp
push
mov
cmp
inc
sbb
cmpsb
int
dec
and
xor
aad
sub
sbb
push
std
stos
imul
add
inc
pop
enter
popa
push
mov
nop
pop
in
mov
dec
outsl
add
cltd
pop
xorb
sbb
mov
inc
and
mov
scas
inc
sahf
fimuls
fldl
leave
lret
shll
bound
sub
or
out
sub
cmp
add
out
iret
push
sahf
std
jbe
popf
sbbb
lret
xor
lahf
out
ss
aas
xchg
test
xor
jg
std
xor
daa
sub
jno
mov
pop
lret
sahf
sbb
cmovl
inc
lret
jp
in
push
jnp
add
sub
inc
adc
fiaddl
ficoml
insl
stos
fisttps
push
add
inc
clc
bound
stos
push
outsb
cmp
mov
scas
sbb
push
fisubrl
mov
ss
adcb
sbb
je
pop
addr16
add
insl
or
pop
aad
mov
lret
cld
mov
push
outsl
fidivrs
adc
jae
and
pop
or
mov
sbb
sub
push
push
and
int
nop
inc
mov
mov
inc
add
cmpsb
iret
testl
ret
pop
cmp
add
lods
cmp
push
or
xlat
mov
push
sbb
xchg
into
xor
daa
sub
iret
fmull
mov
lods
lret
dec
call
test
lret
aaa
push
dec
mov
and
ss
cltd
or
sub
sbb
js
push
test
mov
or
fistpll
push
jne
push
repnz
pushf
add
arpl
dec
add
mov
int
mov
inc
xor
xor
push
inc
sub
jno
jbe
out
jl
and
or
imul
xor
mov
insb
aaa
into
rorb
jge
mov
pop
dec
scas
add
pop
push
jns
jno
iret
push
cmp
dec
sarb
outsb
add
sbb
test
xor
cmp
movsl
or
pop
ret
jmp
test
lock
lds
bound
insl
in
mov
imul
or
adc
imul
aas
cltd
data16
adc
add
push
or
pop
mov
notl
ret
cmp
lods
jo
sub
push
mov
add
lods
scas
test
ja
add
ret
xchg
or
jp
push
mov
push
test
pcmpgtw
lds
jl
popa
xor
push
out
sbb
push
cmpsw
xchg
test
adc
dec
arpl
push
icebp
std
dec
fwait
and
xchg
lock
xchg
lret
cs
mov
pop
push
push
jne
fcomi
pop
mov
sbb
enter
std
add
or
clc
inc
ret
pcmpgtb
xchg
mov
dec
mov
stc
enter
jno
jle
fcmovnb
pop
sub
xchg
andl
leave
lock
out
xchg
in
imul
lea
inc
es
mov
dec
inc
xor
pop
xchg
shll
xor
bound
lock
cwtl
rcrb
outsl
adc
mov
dec
cwtl
inc
cmpsl
jb
add
test
xchg
out
dec
sub
or
out
or
shl
aad
inc
stos
out
mov
cmc
jg
push
push
les
pop
mov
in
enter
pop
mov
sbb
outsl
imul
fcomi
lahf
sub
mov
movl
mov
jno
or
daa
iret
mov
mov
add
pop
outsl
mov
mov
andps
roll
xor
imul
sub
mov
jne
adc
std
cmp
loope
pop
push
ds
out
fists
jb
add
mov
loop
rolb
fcomps
mov
ret
inc
repnz
sbb
popf
mov
arpl
lea
orb
fstps
mov
loop
in
fisttpl
lret
sbb
adc
pop
loop
mov
fists
pop
push
adcl
pop
pop
fisttps
pop
mov
leave
stos
pop
sub
ret
rorb
test
sub
stc
lcall
sub
pop
mov
push
adc
mov
adc
xchg
mov
bswap
xorb
push
aaa
lock
jl
test
daa
mov
adc
adc
xor
dec
add
lret
lock
dec
jge
inc
fdivs
int3
jne
or
or
outsb
in
lods
mov
iret
inc
jnp
sub
push
pop
pop
filds
push
sbb
jge
inc
repz
insb
xchg
cmp
sbb
mov
cwtl
or
loop
pushf
sbb
lret
negb
push
add
xlat
out
leave
add
aam
add
imul
or
popf
aaa
or
dec
mov
add
leave
scas
push
dec
mov
stc
arpl
gs
add
or
leave
mov
fwait
xchg
and
mov
rorl
xorb
inc
arpl
lret
sbb
stc
into
or
mov
cmp
pop
fmul
fdivs
sbb
addr16
sub
pop
leave
push
movb
int3
cmpsb
or
in
negl
pop
inc
jl
cwtl
sub
pop
or
mov
stos
or
push
loopne
jmp
xchg
enter
insl
shll
bound
iret
dec
out
or
repnz
push
xchg
rclb
rcrl
aad
ljmp
jg
dec
mov
adc
xchg
inc
cmpsl
sub
sub
mov
or
fistpl
xchg
stos
push
inc
lods
fwait
orb
fidivrs
decl
arpl
xchg
addb
adc
adc
test
decl
mov
or
sub
dec
add
adc
call
js
inc
add
dec
jmp
popf
lahf
push
lea
jae
and
adc
adc
pop
inc
into
outsl
cmpsl
sub
fcomps
das
dec
pop
aas
fldenv
ja
or
and
dec
in
or
sub
adc
dec
adcb
aam
rorl
inc
push
mov
lea
stos
jle
pop
fwait
adc
xor
fmul
and
inc
sbb
push
arpl
sbb
lret
cmp
push
leave
into
pop
stos
mov
adc
in
add
add
jo
dec
dec
mov
pop
out
int
mov
mov
sbb
pop
popa
adc
mov
add
stc
pop
adc
bound
push
jnp
ss
mov
push
push
push
lea
and
lahf
fdivrl
mov
scas
mov
imul
xchg
pop
js
filds
xorb
sbb
mov
lahf
xchg
sbb
mov
inc
std
pop
push
mov
daa
mov
cs
sbb
test
pop
scas
or
das
push
dec
xchg
sub
push
iret
dec
xchg
outsb
and
ja
mov
pop
aaa
repz
lahf
mov
and
in
push
xlat
push
mov
pop
pop
or
pop
or
xor
push
pop
inc
add
cld
insl
dec
pop
cmp
push
cmp
or
dec
add
dec
popf
push
rolb
inc
or
stos
sub
sbb
ret
inc
dec
pop
or
fldl
sbb
pop
inc
xor
int
in
inc
add
jp
movsb
sbb
add
test
and
pop
sbb
or
xor
adc
gs
repz
dec
test
add
inc
add
mov
leave
scas
jmp
push
add
cmp
in
cmp
sbb
gs
and
imul
dec
push
icebp
fst
movsl
sbb
cmpsb
int3
xlat
ja
sahf
in
add
rcrb
jbe
popa
jb
jp
sub
insb
shlb
add
out
in
and
mov
and
mov
dec
xor
mov
or
and
inc
pusha
cmp
inc
add
adc
insb
xor
push
xor
jp
xor
flds
xlat
insb
pop
mov
sbb
cpuid
adc
out
push
xor
outsb
into
adc
ja
lret
arpl
arpl
lcall
push
add
and
popf
daa
add
bound
cmc
add
movups
faddp
sbb
inc
add
faddl
ficoml
int
pop
lock
dec
mov
dec
shll
jl
pop
fcoml
leave
or
xchg
jno
pop
adc
mov
dec
adc
mov
inc
fcoml
xlat
mov
sub
lds
lcall
cmpb
push
rclb
xchg
push
mov
test
scas
mov
adc
je
out
into
push
mov
ret
and
add
les
cmp
inc
leave
gs
xchg
cwtl
insl
ret
mov
iret
sbb
push
out
push
in
subl
jae
xchg
imul
push
ret
nop
inc
or
cwtl
std
rcrl
jnp
nop
iret
sbb
addr16
in
jge
mov
aad
mov
outsl
mov
aaa
push
daa
sub
lret
inc
gs
bound
adc
dec
in
mov
xor
mov
pop
lret
and
cli
shll
popf
sbb
mov
cwtl
jmp
les
out
leave
aad
idiv
pop
xchg
inc
adc
scas
in
out
xchg
or
xor
test
xor
mov
scas
xor
insl
xchg
xchg
mov
cmp
test
addr16
push
mov
fildl
pop
xchg
fstpl
or
pop
push
add
add
pop
dec
xchg
fstpt
movl
out
sbb
cmpsl
fcompl
adc
pop
add
or
fs
leave
mov
add
gs
sub
fld
repz
dec
or
sub
lret
xor
dec
xchg
sub
cmpsl
sbb
push
fwait
pop
inc
xchg
add
lcall
ret
roll
dec
pop
lods
pop
adc
dec
clc
test
add
cmpsl
mov
xchg
cld
lcall
sub
sbbb
inc
insb
pop
shl
sbb
sub
testl
lret
in
adc
in
cmpsl
clc
dec
xor
push
sahf
rcll
ljmp
push
xchg
bound
pop
xchg
mov
jae
pop
xchg
or
sbb
dec
xchg
dec
ds
mov
or
cmp
mov
insl
sbb
ret
dec
jnp
inc
pushf
xor
movsl
enter
and
stc
aaa
ret
fisttps
push
mov
lahf
stos
adcl
iret
dec
insl
insl
push
push
sbb
mov
push
and
and
cli
test
and
jge
push
xchg
inc
push
add
ss
add
jne
loopne
sbb
mov
xor
lcall
ret
iret
sbb
mov
lods
xor
pop
ja
add
mov
mov
lock
xor
sub
cs
add
sahf
out
cmp
sbb
adc
sbb
test
xchg
adc
test
and
roll
push
xlat
roll
jge
jmp
xor
pop
addl
lea
cmp
movl
mov
mov
iret
mov
xchg
inc
mov
inc
adc
adc
sub
les
sbb
sub
or
xor
imul
add
test
outsl
jne
pop
bound
inc
push
jmp
test
sbb
push
xor
int3
insb
cld
inc
lea
jg
pop
add
shr
add
push
sbb
jg
pushf
jne
insb
xchg
jo
in
add
mov
or
aad
rcr
mov
push
sbb
jno
cs
incl
mov
pop
in
push
mov
xchg
iret
dec
imul
out
jge
lea
pextrw
loopne,pn
out
jecxz
mov
mov
jbe
out
and
imul
jle
enter
cmp
jne
int3
or
mov
jmp
add
or
mov
mov
roll
or
andb
bound
fs
addr16
mov
or
cmp
xchg
and
sbb
lahf
stc
pushf
adc
pop
insb
fcmovu
xor
fsubl
push
das
in
dec
loope
sub
dec
push
pop
jmp
xchg
stos
add
roll
roll
fmulp
orb
adc
mov
insb
jmp
jg
or
int
rcll
xchg
push
hlt
mov
orl
pop
or
enter
inc
add
cmp
fnstenv
mov
iret
rorb
fsubs
xor
in
mov
push
push
xor
bound
mov
adc
icebp
jecxz
xor
push
rcl
test
jns
je
push
mov
push
sbb
in
and
fwait
cmovne
jae
jnp
test
ja
aam
insl
pop
aad
push
xor
mov
jns
add
jmp
add
int3
out
popf
lcall
lods
add
adc
adc
push
mov
jmp
aaa
stmxcsr
xchg
pop
jp
adc
adc
mov
jg
pop
mov
mov
testl
push
lcall
jbe
fildll
sbb
and
scas
add
xchg
xchg
pop
add
pop
cmp
loop
add
inc
adc
push
ljmp
test
arpl
loope
aas
popa
into
in
jmp
fwait
push
bound
pop
subps
test
iret
and
in
pop
inc
ficoms
in
negb
cmpb
shll
cmp
xchg
out
xchg
add
orb
push
jo
push
sbb
lea
int
scas
std
sbb
lds
push
or
negb
pop
pop
fwait
xchg
pop
mov
imul
mov
inc
add
jns
out
imul
add
pop
jmp
xlat
mov
cmp
pusha
dec
lods
pop
sub
cltd
pop
and
sbb
fsubl
shll
pop
pop
and
adc
inc
push
adc
cmpsb
sbb
lods
int3
movsbl
or
xor
notb
push
pushf
insb
inc
add
pop
in
adc
push
add
mov
addr16
dec
and
xor
rolb
or
addb
loop
sarb
cwtl
mov
mov
jl
sbb
mov
ficoml
fiaddl
pop
sbb
sbb
stos
inc
push
ficompl
add
pushf
push
sub
push
jge
aad
add
and
and
adc
mov
loopne
fisttpl
adc
inc
mov
outsl
or
int
lods
flds
andb
addb
fistl
cmp
int
sbb
pop
add
adc
push
in
add
testl
inc
js
dec
mov
test
mov
lock
sbb
or
out
daa
lea
sti
sbb
cmpsb
pop
leave
or
or
out
repz
push
inc
adcb
xor
leave
dec
dec
cmpsl
sarb
ja
inc
sbb
outsb
push
cmp
rorb
jecxz
push
addl
sbb
fbld
cld
mov
scas
xor
inc
int3
test
rorb
push
pop
adc
mov
and
lea
stos
dec
add
fdivl
scas
insb
mov
mov
cmp
bound
pop
xorb
cmp
cmovae
or
mov
adc
and
mov
mov
dec
icebp
int
push
sub
pop
pop
push
bound
leave
in
adc
dec
xchg
cwtl
hlt
lods
dec
lea
xchg
stc
cli
ljmp
jge
inc
lret
inc
daa
push
out
addb
ret
or
mov
ficompl
xlat
ljmp
adc
pop
cmpsl
mov
insb
movsl
sub
popf
xor
test
andl
sub
push
pusha
inc
pop
inc
pop
push
adc
add
inc
add
dec
int3
mov
xor
add
in
or
and
fisubrl
ret
add
bound
aam
mov
xchg
loop
outsl
sti
add
lret
in
insb
addr16
cltd
fsubrs
leave
mov
sahf
dec
shll
xchg
dec
xchg
aam
jns
sahf
push
xchg
push
inc
pop
or
rolb
dec
dec
dec
cld
faddp
and
dec
xlat
or
add
rclb
rorl
sbb
sub
add
ret
and
add
shlb
insb
or
sbb
dec
sub
scas
pop
cmp
insb
adc
cmp
int3
dec
iret
and
inc
jge
fiadds
pop
movsl
mov
scas
pop
mov
addr16
jmp
push
rcll
xchg
mov
add
pop
cmp
loop
cs
fimull
frstor
or
movsb
dec
pop
xlat
cmp
or
add
or
sub
fstp
sarb
rcll
subl
or
js
sbb
pop
pop
jle
sbb
aam
and
sub
sbb
enter
bound
pop
sbb
inc
push
mov
fldenv
stos
test
push
test
insb
es
pop
xor
cmp
sbb
xchg
and
repz
lods
dec
lcall
cs
mov
cwtl
test
inc
sub
or
adc
inc
add
inc
dec
sub
xchg
out
subl
mov
pop
sbb
pop
push
pop
bound
lahf
aaa
inc
pop
pop
repnz
xchg
int3
dec
jp
sbb
inc
ja
fists
sub
enter
cs
sbb
or
in
or
inc
jnp
sub
popf
pop
test
imul
mov
xor
jp
lea
aas
and
aaa
jb
dec
rclb
xor
xchg
mov
cs
imul
add
cmp
insb
test
xchg
xor
add
out
test
fisubrl
pop
push
lea
push
int3
push
enter
or
leave
cmpsl
cwtl
daa
lcall
lahf
xor
or
inc
stc
out
ret
and
shll
push
gs
xor
int3
loopne
psubd
jl
jb
xor
ljmp
xlat
xor
push
mov
adc
dec
dec
cmc
movsl
mov
cmp
and
ljmp
das
rcll
xchg
sti
sbbl
out
test
push
pushf
lods
sbb
out
es
pxor
stc
lds
les
add
mov
stos
pop
push
xor
das
mov
push
jg
inc
jge
mov
sbb
out
out
jge
sub
jg
or
insb
fiadds
ds
push
dec
in
cmp
mov
fcomps
nop
or
insl
jl
push
cmp
xchg
mov
inc
andl
dec
pop
aas
pop
rolb
mov
mov
xchg
pop
popf
push
daa
mov
std
add
sub
sarl
mov
mov
shrb
inc
fdivrl
mov
test
insl
mov
xchg
push
add
add
cmp
fwait
pop
ss
sub
sbb
jb
pop
daa
aaa
adc
fistl
inc
mov
adc
fucom
imul
idiv
out
fwait
dec
cmp
iret
sbb
iret
roll
xor
clc
std
addr16
rol
or
out
mov
rorl
faddl
and
and
jle
cmp
lea
data16
bound
xchg
add
int
jmp
icebp
inc
std
pop
push
iret
add
ja
int
int
mov
ret
fildl
ror
adc
testb
in
mov
ja
dec
sub
mov
lret
push
xor
repz
insb
xor
push
or
int3
mov
in
pop
lods
into
testb
test
int
repnz
std
push
mov
arpl
or
add
mov
rolb
add
arpl
pushf
test
jne
pop
add
xor
mov
daa
mov
dec
fbstp
nop
mov
push
mov
mov
sahf
mov
and
add
stos
inc
cmp
mov
mov
pop
jnp
and
cmp
sbb
pop
mov
dec
jbe
das
cs
adc
fisubrl
mov
cmpl
dec
inc
iret
add
jo
dec
iret
lea
cmp
out
cmpsb
rcr
push
pop
cmpb
ret
push
into
fwait
xor
outsl
mov
cmp
in
and
dec
repz
lea
xchg
jbe
inc
pop
push
sub
and
fisubrs
add
pop
pop
je
aaa
sahf
adc
adcb
out
mov
arpl
ljmp
mov
sbb
stos
jge
pop
pop
push
dec
xor
lods
pop
daa
cmp
cmpsb
mov
pusha
sbbb
push
iretw
or
adc
lods
fistps
cmpsl
arpl
cmpsl
adc
push
pop
add
sub
mov
inc
psubusb
mov
jp
push
push
out
push
pop
cmpsl
int
sbb
imull
imul
cmp
sahf
xor
mov
push
dec
mov
clc
sub
sub
pop
and
inc
xor
pop
add
mov
jle
ret
inc
push
fwait
sub
and
dec
or
leave
cmp
xor
or
sarl
inc
lods
inc
mov
test
repnz
loopne
inc
inc
in
mov
or
daa
out
sbb
add
mov
add
stos
adc
sub
sbb
lcall
cmp
sbb
adc
es
mov
out
push
cmp
sbb
inc
insl
sbb
cld
out
mov
push
push
mov
out
lods
adc
pop
str
fists
xor
in
arpl
inc
push
imul
push
dec
jmp
xchg
cs
mov
mov
adc
push
and
xchg
push
xor
push
xor
mov
sarl
fwait
xchg
lea
mov
leave
sarl
mov
add
out
jge
mov
rclb
ds
push
push
shlw
pop
jl
add
lds
pandn
sbb
hlt
push
ja
and
mov
fucomp
sahf
pop
add
xchg
icebp
popf
dec
inc
pop
sub
loop
pushf
add
xchg
mov
cs
and
mov
and
pop
decb
ret
cmp
jnp
push
cltd
mov
cmp
rcr
sub
sbbb
xor
xchg
and
into
pop
cli
scas
dec
inc
jb
xchg
test
xorb
int3
sub
dec
jae
jno
and
mov
sbb
xlat
mov
lcall
sbbb
in
xchg
cmpl
loop
iret
sbb
sbb
sbb
jecxz
mov
lret
xchg
mov
xchg
lahf
push
leave
cmp
bound
popf
cmc
mov
dec
adc
push
ljmp
xor
xchg
dec
mov
leave
dec
mov
or
xor
int
out
mov
cli
xor
outsb
nop/reserved
add
pop
and
inc
sbbb
push
jno
stos
inc
stos
fistpl
test
mov
jge
push
les
inc
cmp
sub
push
bnd
mov
sbb
hlt
pop
xchg
lods
xchg
int3
pop
bound
dec
jg
mov
jns
andb
mulb
and
das
sahf
push
cmpl
loopne
lss
xchg
outsl
sbb
push
and
pop
adc
push
xchg
in
xor
ret
cmp
fsubrl
inc
pop
dec
push
fidivrs
mov
addb
lret
lcall
outsl
add
fimuls
jnp
and
xlat
fsubs
cmp
aas
jg
sbb
sbb
popa
push
or
jmp
mov
dec
jmp
or
xorl
xchg
cmp
fstpt
lret
pop
lret
loop
dec
cld
inc
mov
cmp
add
aad
jle
mov
push
int
bound
sbb
cmpsl
inc
jl
in
int
pop
aad
mov
jecxz
lods
pop
lock
add
sbb
xlat
cmp
dec
out
data16
stos
xchg
or
andb
or
je
ret
lcall
test
dec
cmp
sub
mov
dec
aaa
mov
lret
cmp
lret
add
negb
push
pop
loopne
sbb
inc
sub
ffreep
rorb
xor
cmp
sub
mov
add
cmpsb
cmp
pop
xchg
dec
loop
out
cwtl
pop
jmp
outsl
push
and
adc
cmp
leave
dec
jb
and
pushf
int3
in
insb
adc
push
jge
lahf
xchg
stos
xchg
xor
jg
push
or
or
mov
dec
sbb
lea
enter
in
mov
push
inc
mov
xor
mov
iret
push
fwait
xlat
shl
enter
or
or
sub
sbb
cmc
cld
dec
aam
sbb
sub
dec
adc
iret
popf
mov
xor
mov
xchg
sbb
pop
mov
mov
lds
push
lea
in
in
push
or
insb
movsb
mov
and
cmp
fists
push
add
push
ds
dec
test
inc
repz
or
jne
push
aam
add
mov
mov
ret
fstl
push
iret
orb
add
jno
push
adc
aad
add
lcall
dec
xchg
adc
bound
adc
punpckldq
pop
pop
pop
aaa
es
leave
and
out
in
push
push
sbbb
insb
test
xchg
jb
mov
js
stos
cltd
sbb
pop
sub
rorb
and
dec
and
mov
sbb
lods
inc
outsb
lcall
popf
loop
inc
and
adc
dec
push
pop
xor
inc
nop
rolb
cmp
push
out
daa
adc
dec
dec
adc
test
lea
add
les
cwtl
jge
rol
mov
dec
jmp
pop
inc
push
gs
mov
into
out
ret
jno
dec
fldl
adc
mov
fnsave
outsb
pop
inc
adc
add
cmp
subb
sub
and
mov
rclb
les
dec
stos
int3
mov
lcall
stc
xor
popw
push
sbb
push
pusha
or
stc
wrmsr
addr16
inc
loope
dec
and
arpl
out
jg
sub
and
rcrl
bound
cltd
pop
out
out
std
sub
out
and
dec
out
and
mov
and
dec
insl
gs
inc
jp
sbb
insl
mov
xor
mov
mov
jns
cmpsl
push
fcomip
xor
in
sahf
sub
daa
out
mov
sub
imul
or
sub
in
xchg
jl
mov
or
mov
xchg
into
imul
les
xchg
mov
out
xor
dec
cmpsl
mov
dec
pop
cs
sub
xor
push
push
mov
out
xchg
pop
pop
pop
rcrl
fdivl
pop
cmp
jae
cwtl
mov
or
and
dec
or
sti
mov
cmpsb
adc
inc
jmp
shlb
push
fsubs
testb
cmc
out
lds
add
ljmp
lea
xchg
movq
push
lret
push
jle
outsl
dec
mov
insb
xchg
jbe
dec
fistps
cvtps2pi
mov
into
inc
repz
mov
test
call
push
lock
xchg
in
and
rclb
mov
sub
dec
add
outsb
pop
inc
push
into
dec
lods
fnstcw
mov
inc
bnd
mov
ret
push
test
out
packuswb
outsb
lea
xor
and
mov
pusha
int
lret
sahf
frstor
xchg
cmp
outsb
xchg
mov
add
rcll
mov
xchg
int3
mov
add
xchg
enter
or
out
shll
inc
cltd
dec
stos
jge
lea
pop
leave
rorl
lret
imul
add
mov
ja
and
push
lds
cld
addr16
fnsave
vpunpckhqdq
repnz
movups
xchg
inc
aam
sbb
mov
cli
mov
dec
mov
xlat
xor
lds
xorb
test
xlat
xchg
push
inc
sti
xchg
add
subb
xchg
outsl
rcrl
push
xor
xchg
lea
filds
cmp
mov
mov
adc
xchg
dec
cwtl
mov
rclb
lret
xchg
or
xchg
jge
push
out
and
pop
xchg
insb
das
test
inc
mov
movl
dec
xchg
mov
push
out
dec
fimull
lock
rcll
add
repz
mov
pop
jns
push
push
jge
or
imul
fstpt
sbb
pop
test
sbb
mov
cld
push
sub
mov
arpl
std
pop
or
and
sub
in
jp
and
or
in
mov
and
xchg
and
xchg
lock
in
adcb
jns
test
cltd
mov
xchg
mov
leave
std
push
add
imul
xor
push
clc
xchg
or
push
std
sti
pop
dec
cli
jno
sbb
outsl
sub
addr16
pushf
push
in
mov
jo
sub
shrb
sbb
mov
mov
sub
jge
aam
adc
pop
icebp
lcall
push
mov
pop
pop
out
call
fs
cltd
lea
xchg
sub
insb
pop
fstpl
ss
cltd
test
fstps
pushf
fwait
insb
push
orb
imul
xor
lds
jl
into
shl
fwait
jmp
jle
cltd
fs
icebp
test
adc
xchg
pop
int
inc
loopne
lds
int
pop
mov
or
in
ficoms
dec
pop
int
adc
loopne
inc
ret
or
jae
add
xchg
inc
push
inc
iret
pop
int3
push
shlb
or
xor
enter
and
jle
adc
add
add
out
insl
push
add
aaa
cmp
sbb
insb
mov
or
jl
push
ret
jge
fidivl
gs
adc
pushw
xchg
adc
xor
and
orl
push
xchg
shl
push
xchg
pop
dec
push
imul
fcoms
das
xor
adc
std
cmp
arpl
dec
pop
dec
popf
outsb
pop
stos
movsl
pop
sarl
inc
es
dec
xor
jge
xor
inc
inc
mov
mov
lea
arpl
dec
mov
xchg
icebp
mov
xchg
xchg
dec
push
xchg
pushf
daa
add
test
into
push
adcl
jno
je
lahf
xchg
paddq
or
sub
push
jge
inc
sbb
bndldx
add
inc
xchg
mov
icebp
loop
inc
faddl
xor
xchg
jg
add
push
xor
pop
sbb
pop
jp
cmp
icebp
fs
subb
in
insl
out
mov
leave
push
fisubs
sub
push
insl
fldl
iret
or
lahf
fsubr
clc
add
fwait
stos
jbe
inc
into
mov
sbb
jb
and
xlat
sbb
xchg
mov
pop
out
cmpsb
lds
stos
out
pop
mov
test
out
pop
xlat
test
inc
ja
bound
add
imul
jmp
and
pushf
data16
movsl
dec
iret
scas
push
jecxz
test
pushf
lea
sarb
cmp
push
iret
xlat
push
in
scas
mov
xlat
cmp
sub
adc
xchg
push
stos
and
push
mov
sbb
loope
pushf
jmp
push
pusha
sub
pushf
fdivs
add
dec
stos
aaa
inc
xor
lahf
add
jb
in
dec
dec
mull
out
push
xchg
lret
imul
aaa
or
adc
push
sbb
jge
cmp
inc
jo
add
por
pusha
jle
dec
stc
dec
jns
or
outsl
mov
movsl
xchg
fnstenv
cmp
inc
cmp
jae
push
xchg
pop
jne
ds
inc
fmul
in
cld
int
push
cmovb
sti
bound
xor
scas
sbb
int3
mov
int3
inc
cmp
inc
adcl
cmpsl
inc
iret
xchg
mov
sahf
iret
sub
mov
mov
xadd
mov
adc
fstpl
call
xor
in
ficompl
popl
add
and
mov
xchg
jmp
adc
mov
stc
addr16
cmp
and
fidivrl
out
pop
sub
jne
hlt
or
cmp
mov
ss
icebp
and
add
cmp
or
psrld
mov
mov
sbb
xor
imul
xlat
pushf
add
dec
loop
mov
dec
lods
dec
mov
pop
inc
xor
inc
imul
adc
pop
mov
inc
xchg
jge
iret
ja
daa
ja
adc
lods
sub
addb
jne
pop
loopne
mov
pushf
lret
addr16
jp
mov
cmpxchg
mov
mov
out
jne
push
pushf
in
shll
stos
mov
in
clc
jne
into
call
xchg
cmp
push
mov
addl
ja
stos
or
mov
les
add
fs
mov
jg
cmpsb
adcl
add
lods
sbb
cmp
mov
cmp
dec
jns
inc
xor
push
and
jo
cmp
add
shl
stos
add
std
rcrl
lret
inc
hlt
lods
inc
xchg
lcall
jl
sbb
test
sbb
dec
xchg
out
xchg
ficomps
frstor
cmp
inc
push
out
or
test
lret
cmp
sub
mov
sbb
cwtl
lea
repnz
push
jns
sarl
sti
and
pop
or
push
jge
les
adc
mov
arpl
inc
pop
push
arpl
sbb
xchg
mov
cmp
inc
jle
iret
and
test
int3
push
mov
push
mov
ficoms
pop
cmp
sbb
movsl
pusha
test
jg
xor
fcoms
sub
push
pop
lods
inc
gs
sbb
dec
mov
mov
or
mov
xchg
dec
adc
add
lods
xor
out
sbb
sbb
data16
jg
shll
xchg
sbbb
lods
dec
loop
jmp
xor
push
bound
dec
imul
stos
mov
sbb
push
pop
inc
ret
sbb
xchg
dec
punpckhdq
and
mov
std
out
mov
lahf
fistpl
in
pop
dec
xorl
adc
push
sub
dec
jle
push
shr
pop
ds
pop
cmpsb
inc
orl
sbb
addr16
jle
rcrb
and
dec
add
stc
addr16
dec
dec
repz
xor
sahf
adc
fisttpll
xlat
dec
push
sub
sub
outsl
dec
adc
mov
and
jmp
jo
out
mov
mov
adc
lods
gs
rcr
inc
shrb
and
and
xchg
xor
sbb
pushf
test
rclb
vmulps
fistpl
cmp
or
push
fwait
cmp
pop
fbstp
outsl
adc
scas
jb
mov
insb
or
daa
pop
cmpsl
jo
add
stc
sbb
arpl
sub
adc
cmpsb
sub
int3
and
sub
xchg
sbb
test
pop
or
subl
add
mov
sbb
add
lret
lds
dec
xor
sbb
testl
lods
out
xlat
out
xchg
std
jmp
insl
mov
mov
movsb
mov
push
lock
aas
cmp
lds
fildl
lea
sub
rol
xor
lcall
outsb
enter
fstps
pop
loopne
imul
bound
mov
scas
addr16
xlat
ss
leave
pop
cmp
cwtl
outsl
inc
xchg
adcl
inc
add
sbb
pop
lret
jns
fisttps
adc
testb
xor
xchg
out
aas
fidivs
xchg
pop
inc
in
xchg
mov
dec
dec
lds
or
aaa
push
out
std
add
add
mov
inc
pop
mov
push
inc
xchg
add
gs
inc
jnp
inc
pop
pop
outsb
sbb
dec
add
lods
out
js
stc
roll
mov
daa
mov
inc
movsl
xchg
inc
mov
mov
push
pop
sbb
daa
xchg
cmpsl
in
xor
mov
int
push
addr16
loop
pop
sub
pushf
test
daa
pop
pop
xchg
fsubrl
inc
arpl
ret
inc
xchg
mov
and
xlat
mov
cli
outsl
xchg
sub
in
pop
call
pop
inc
sbb
cmp
cmp
mov
xchg
js
dec
xlat
xlat
adc
mov
test
pop
push
pop
dec
xchg
sub
nop
cltd
xchg
scas
std
inc
sbb
sar
cmp
inc
outsb
add
adc
jge
mov
pop
xchg
fs
sub
aaa
jp
push
or
fsubp
rol
outsl
add
ja
insl
repnz
or
in
sub
sets
aas
mov
hlt
lret
adc
arpl
dec
cmp
inc
out
pop
cld
sbb
in
repnz
js
inc
out
fucomip
fmull
sub
xor
out
movsl
call
jns
std
xor
idivb
jae
add
bound
inc
scas
fs
pop
mov
fisttpl
or
popf
xor
add
adc
out
pop
pop
jno
xchg
or
inc
pop
loope
jo
push
arpl
cmpsl
aad
sbb
sbb
push
add
push
inc
test
xor
pop
out
inc
and
or
pop
lea
popfw
or
push
mov
mov
repz
mov
push
shl
fstpl
sub
cmc
sub
inc
cmpsl
stc
dec
movsl
daa
dec
outsl
cs
mov
pop
fcoms
xor
inc
sub
xor
cmp
je
xor
inc
fcomi
xchg
fiadds
rsqrtps
pop
adcb
je
xchg
in
sbb
enter
int3
repnz
data16
pop
push
cmp
pop
cs
sbb
xchg
xor
xchg
xor
xchg
push
jge
iret
call
cmp
addr16
psubusb
xor
and
sub
mov
nop
jge
pop
addr16
cmc
dec
lret
jle
dec
inc
divb
jo
sbb
enter
shll
std
jnp
negl
dec
pop
rcl
add
out
push
std
cmpsl
psraw
push
sub
stos
mov
or
fiadds
xchg
mov
inc
jmp
subb
adcb
out
loop
test
cmp
pop
sbb
sub
adc
bndstx
ljmp
out
push
call
rolb
xor
inc
dec
shlb
insb
je
jno
jl
add
mov
rolb
out
mov
addr16
adc
add
aaa
xchg
mov
out
xor
cmp
mov
sub
mov
pushf
sahf
adc
inc
add
push
ror
divl
mov
push
iret
orb
icebp
xchg
insl
and
sbb
shlb
inc
pop
ljmp
insb
pop
ret
lods
mov
push
shll
lahf
cmovne
inc
pop
lret
pop
mov
sub
sbb
xchg
repnz
sbb
or
push
inc
fwait
pop
es
or
test
aam
fsub
fcmove
mov
add
lcall
mov
daa
loop
or
mov
add
xor
mov
adc
pop
sbb
sub
xor
clc
and
pop
push
cmpl
cld
xchg
call
popf
lock
add
xchg
add
xchg
iret
icebp
rcrl
mov
fmulp
dec
fiadds
cmp
or
xchg
pop
xchg
sbb
or
mov
xchg
insb
xchg
xor
std
rorl
push
repnz
jb
into
jns
push
into
mov
push
lea
popf
in
or
pop
cmp
xor
cmp
nop
pop
shlb
mov
mov
pandn
sahf
or
js
adc
arpl
int
rol
xor
sahf
scas
jle
lock
pop
subl
mov
push
stc
pop
roll
daa
fstpt
or
testl
inc
ss
mov
and
add
xor
out
imul
les
scas
sub
ret
mov
push
int
push
xchg
inc
lret
sbb
mov
mov
adc
lds
je
rcll
int3
and
sub
insb
fiaddl
int3
adc
ljmp
add
fstps
inc
int
ficomps
pop
pop
push
in
xchg
xchg
test
cmp
fwait
lods
sti
lahf
gs
roll
les
adc
loop
test
sub
iret
lds
sub
outsl
lea
sbb
inc
iret
cltd
inc
popf
inc
lret
cmp
test
stos
push
push
fldt
push
fcmovb
repnz
pop
enter
dec
mov
mov
cmp
pop
xor
fcomip
iret
xorb
sbb
push
xchg
ss
outsl
xchg
mov
xor
adc
pop
push
mov
pop
ss
xchg
imulb
lods
je
mov
sbb
paddw
sbb
cmpsl
lea
lds
lods
sub
push
push
xchg
adc
sbb
scas
mov
inc
mov
mov
cvtps2pi
dec
push
in
or
jmp
xchg
dec
push
sarl
jne
lds
aaa
cmc
sahf
cmp
setl
mov
mov
ror
pop
ret
repnz
sbb
or
in
sbb
popf
mov
mov
aas
or
cmp
cmpsb
out
pop
lea
call
xor
aam
push
push
aaa
jmp
nop
push
sarl
icebp
add
lock
xor
push
orb
fistpl
pop
adc
cwtl
lock
sbbl
cmp
cmpsl
std
sub
jp
pop
inc
sahf
ucomiss
les
gs
push
lods
inc
cmc
xor
cmc
ss
scas
repz
jge
int
fcomi
adcb
aaa
aaa
roll
stc
xchg
jge
mov
cltd
jmp
rep
add
inc
or
adc
cld
daa
cmovg
mov
test
adc
and
mov
xor
or
in
add
icebp
dec
push
and
or
push
sbb
sub
andl
int
imul
fisubrl
xchg
cmc
int
inc
repnz
ds
inc
inc
iret
cwtl
inc
sub
inc
popf
imul
jmp
test
pop
lods
and
mov
movsl
mov
test
shlb
stc
aad
push
mov
ret
pop
addl
add
icebp
lcall
fs
dec
cmp
daa
push
in
pop
mov
call
lods
adc
movsl
stos
or
dec
sbb
xchg
movsb
jge
bound
cmp
add
iret
setle
pop
mov
and
and
rorl
bound
ret
jmp
addr16
inc
push
lock
sbbl
imul
sti
mov
out
xor
inc
int
idivb
push
fadd
pop
enter
cmpsl
cmp
xchg
mulb
or
fidivs
xchg
das
sti
into
cmpsl
mov
lea
movsl
jmp
mov
xor
lock
cli
dec
pop
jne
add
dec
add
jne
cmp
mov
jns
and
pop
dec
xor
sub
dec
popf
ret
mov
mov
or
int
xor
pop
loope
pop
or
ja
add
test
rcl
lcall
inc
int
pop
jecxz
clc
out
fcoms
call
negb
sub
adc
push
shll
leave
push
adc
dec
sbb
mov
inc
sbb
mov
jmp
mov
inc
ror
test
cmpsb
mov
mov
inc
jmp
lods
shll
add
sbb
int3
mov
adc
mov
incb
add
push
hlt
push
push
or
xor
cmp
inc
pop
lahf
push
test
sub
fnstenv
repz
popa
sar
mov
nop
and
pop
push
cmpsb
es
ss
adcl
cmp
lahf
fdivs
rcrb
inc
lahf
push
add
into
dec
leave
xor
aad
xchg
jb
pop
push
pop
dec
cmp
popf
aaa
or
lret
lahf
cmp
sbb
or
xchg
outsl
mov
pop
mov
movsl
dec
sbb
popa
addr16
mov
xchg
outsl
mov
into
mov
dec
pop
add
mov
daa
jns
outsl
or
cmp
push
pop
add
cmp
mov
add
xlat
push
xchg
addb
xchg
mov
jge
movsb
pop
call
xchg
mov
in
out
in
sbb
mov
test
and
outsl
dec
lret
repz
xchg
sti
das
in
shll
or
sub
pop
xor
cmp
ds
push
xchg
lahf
popa
cltd
add
xchg
andb
fcoml
dec
or
jnp
xchg
bound
inc
push
dec
xor
sbb
add
std
xchg
cmp
aad
insb
cmp
push
rclb
xchg
mov
in
mov
sbb
xor
pop
add
test
dec
idivl
pop
lret
iret
ret
jge
push
inc
mov
leave
jmp
iret
int
add
mov
and
push
movb
dec
cmpsl
sub
gs
pop
add
fcomps
xor
xchg
sub
or
leave
lea
fadd
pop
add
cmp
int
mov
fstpt
xchg
stc
add
leave
push
add
enter
push
lret
lds
mov
dec
bound
xor
add
push
push
out
dec
inc
sbb
adcb
xor
mov
addb
cmp
pop
test
lea
ja
ret
pop
data16
add
hlt
loope
in
icebp
xor
int
xchg
aas
add
push
imul
xchg
mov
mov
es
push
call
das
sbb
cmp
inc
xor
lods
out
pop
jmp
pushf
xchg
ss
sub
sub
xor
popw
rcl
mov
jp
gs
mov
outsl
add
push
jae
rol
es
imul
movl
push
insb
stos
lea
mov
aam
push
fldenv
dec
adcb
loope
and
and
xchg
lret
pushf
xchg
adc
mov
adc
out
and
jbe
mov
dec
push
iret
in
push
fsubl
lcall
mov
test
inc
mov
cmp
int3
dec
xor
lock
into
cmpsl
cli
loopne
cmp
in
rolb
lea
or
pop
jo
das
xchg
mov
enter
shrb
leave
test
int3
push
push
outsl
pop
in
cld
lock
cld
xchg
in
pop
dec
ss
enter
sub
insl
sbb
sub
pop
inc
arpl
cmpsl
xor
ja
fcmovne
mov
das
sbb
lods
xchg
mov
mov
enter
dec
fsubl
aad
arpl
pop
sbb
or
std
fsts
dec
sahf
xchg
insl
add
loopne
cmpsl
jnp
push
test
int3
stos
inc
xor
adc
or
mov
push
adc
or
imul
add
adc
mov
iret
into
leave
mov
int
inc
pop
inc
mov
shl
and
cltd
dec
xor
add
movaps
lret
sbb
pop
jl
call
mov
popa
leave
dec
lods
inc
and
xor
in
imul
sub
mov
inc
imul
cmp
lock
jecxz
lcall
mov
mov
mov
cmpsl
adc
xchg
jno
or
enter
inc
mov
pop
lods
stos
daa
int
movhps
inc
pushf
pop
out
inc
imul
int
adc
pmuludq
sti
rorb
push
push
dec
loop
cmp
ret
push
mov
mov
sub
fldl
cltd
sbb
loop
scas
bound
loope
outsb
or
cvtps2pd
xchg
inc
icebp
pop
into
xchg
fldlg2
mov
pop
fwait
or
orl
pop
or
or
mov
data16
jg
fldenv
lahf
pop
ljmp
enter
jmp
mov
jbe
mov
int
pop
push
xor
repz
loopne
hlt
mov
pop
mov
pop
sbbl
push
test
sbb
cmpsl
lock
ds
mov
xchg
pop
jo
inc
mov
lcall
es
testl
pop
add
mov
adc
xchg
mov
fidivrs
fs
sahf
insl
mov
ficoms
xlat
adc
sbb
out
dec
mov
lea
xchg
les
dec
and
mov
pop
sbb
push
push
lods
push
out
psrld
jnp
push
cld
add
pop
loope
lods
fsubs
push
inc
push
lahf
mov
adc
push
das
int3
xchg
js
jl
aad
fwait
push
or
push
pop
shlb
dec
fs
rcrb
pushw
pop
add
cmp
sbb
setg
adc
bnd
dec
and
in
int
fs
sub
std
insb
out
or
lret
xchg
lret
clc
lret
pop
mov
and
faddl
mov
pushf
addr16
mov
faddl
pop
dec
pop
insb
pop
jns
test
inc
mov
cmpb
xor
dec
adc
inc
push
lcall
pop
pop
push
pop
test
push
ret
dec
cmp
sub
test
shll
mov
or
dec
ljmp
push
inc
enter
pushf
leave
sahf
int
pop
stos
int3
cmpsb
inc
xor
and
push
in
out
add
dec
add
fadds
or
or
cltd
das
mov
lods
mov
cmpsl
mov
fcmovne
xchg
jge
gs
cmp
mov
jl
jno
xor
adc
or
adc
iret
xchg
xchg
push
add
lahf
mov
xchg
or
lea
push
dec
addr16
out
iret
int
xchg
jecxz
je
sarb
movsl
xor
popf
pop
aam
pop
iret
cwtl
cmpsl
into
push
xor
push
mov
mov
pop
mov
adc
lret
sub
sbb
std
xchg
push
inc
sbb
mov
dec
lock
mov
gs
xor
mov
neg
xor
cmp
std
jmp
dec
test
sbb
push
jge
mov
inc
lea
ss
fcoms
ret
cltd
lret
jg
daa
lret
ljmp
and
lds
sub
daa
lret
adc
push
fcompl
or
lods
pop
pop
stos
jle
or
lea
sbb
pop
xchg
push
fcomps
pop
add
fwait
cmp
add
daa
cmp
jmp
mov
and
sahf
cmp
mov
mov
mov
sbb
add
outsb
outsb
adc
pop
and
iret
and
and
insl
mov
or
in
sub
out
pop
sub
es
push
xor
xor
cs
mov
xlat
loop
aas
xchg
std
inc
inc
into
sbb
jge
jmp
mov
xor
outsl
xchg
loope
ljmp
orl
jb
mov
sub
push
pusha
mov
lea
int
insl
sbb
jl
hlt
push
push
fwait
mov
out
pop
xor
pop
sub
sahf
or
sbb
ficoms
fiadds
bound
fwait
and
inc
insl
adc
jae
ret
lret
mov
cmp
cmpxchg
adc
pop
ret
jmp
jno
mov
push
pop
and
inc
push
pop
sbb
or
jge
enter
mov
into
outsl
mov
cmp
cmp
dec
testl
cli
nop
push
mov
jecxz
mov
push
pop
jne
sub
xchg
pop
push
mov
sub
test
inc
mov
call
cltd
pop
push
sbb
femms
fstpl
push
jb
xor
test
icebp
add
aaa
or
pop
pop
cs
mov
push
fwait
loopne
popa
add
sbb
lea
out
pop
loope
sub
lret
jbe
ret
pop
into
xor
ljmp
inc
imul
imul
sub
popf
or
add
pop
mov
xchg
pop
mov
out
cli
inc
jp
aaa
pusha
iret
mov
xlat
pushf
pop
jno
jae
lret
mov
adc
xchg
sarl
xchg
cmpsl
push
mov
add
xchg
insb
nop
addr16
les
or
dec
pop
xchg
inc
push
mov
int3
mov
sbb
cmp
and
dec
rorb
mov
cmp
and
mov
andb
rorb
jp
dec
movsl
xor
insb
xchg
or
adc
data16
dec
pop
testl
sahf
decl
push
or
fistpll
adc
inc
push
imulb
aaa
mov
pop
pushf
fidivl
inc
movsl
jns
aam
dec
roll
add
negl
insl
mov
leave
inc
add
adcb
xchg
mov
dec
add
insb
push
test
mov
jge
and
cs
add
add
xor
cmp
frstor
xchg
sbb
bound
push
js
ss
push
les
inc
aad
repz
inc
inc
jo
fmulp
hlt
adc
arpl
inc
cmp
push
fsubrs
sbbl
push
ljmp
sbb
orb
sub
lods
fmulp
dec
push
pop
jns
pop
leave
add
mov
les
inc
cmp
sahf
xchg
cld
stos
lret
call
push
or
outsb
lea
enter
xchg
add
or
mov
iret
int3
in
dec
loopne
popf
adc
jle
lahf
or
mov
pop
inc
xchg
mov
es
aad
pop
xchg
add
xchg
cmp
lret
gs
sbb
adc
dec
in
rclb
xlat
out
mov
int
rsqrtps
sub
ret
out
roll
inc
pop
leave
aaa
xchg
xchg
add
inc
loopne
das
xchg
inc
sbbl
sahf
dec
psllq
gs
xchg
out
out
mov
imul
out
std
push
lret
loopne
push
mov
test
dec
mov
imul
sbb
pop
xor
push
dec
cmp
cmp
xchg
jg
mov
repz
inc
jle
in
add
dec
fcmove
xor
ja
adc
add
out
or
pop
les
add
nop
out
dec
push
pop
cmp
imul
inc
push
xor
xchg
mov
pshufw
jae
add
sub
pop
xor
mov
pop
insb
pop
insl
inc
add
shll
or
fwait
push
xchg
cmc
mov
jmp
movsl
shrl
mov
push
mov
cli
cld
dec
insb
push
mov
cmpsl
mov
cmpl
inc
dec
dec
mov
jle
mov
scas
ja
mov
cmp
sub
mov
arpl
outsl
andb
shrb
sub
adc
dec
push
xchg
out
xchg
cwtl
or
sbb
mov
push
cmp
in
xchg
dec
dec
out
jecxz
push
fldl
repz
enter
arpl
or
sti
xor
imul
sbb
jne
paddd
rorb
or
inc
sbb
dec
add
idivl
sbb
push
and
mov
lds
daa
sbb
out
add
mov
cli
jmp
ror
loope
mov
aas
pop
inc
imul
popa
in
aaa
sti
add
mov
rcrb
stos
and
pop
xor
imul
push
out
xor
dec
jo
cld
mov
sbb
dec
out
add
adc
push
lods
xor
bound
inc
adc
xchg
mov
jp
lds
cmp
push
or
xor
add
out
inc
test
and
stos
sbb
out
push
mov
add
inc
popa
mov
adc
inc
leave
mov
inc
mov
xchg
shrb
jmp
ljmp
mov
adc
ret
sbb
xchg
or
add
sub
add
mov
or
pop
and
pop
inc
dec
mov
add
xchg
or
cmp
bound
insb
mov
mov
jnp
mov
and
push
lea
lea
dec
test
mov
pop
insl
mov
fcmovbe
out
sahf
stos
mov
add
mov
pop
stos
jno
xchg
sbb
push
in
insl
fs
inc
add
sbb
leave
repz
cmp
stos
xchg
sti
out
pop
push
and
lds
or
xor
sahf
and
cmpsb
xchg
xchg
cmc
movsl
adc
loop
push
jae
and
mov
push
pusha
arpl
cmp
imul
sbb
pop
cmp
cmp
loopne
xlat
and
mov
sub
into
int3
add
dec
out
ret
push
insl
sub
pop
scas
push
pusha
lea
dec
adc
cmp
cmp
sbb
insl
ror
cmp
addr16
dec
xchg
sub
pop
inc
movsb
fdivrs
and
roll
in
pop
repnz
enter
rcrb
fimull
test
lret
sbb
cltd
loop
xchg
es
sbb
cmp
jne
fcom
out
inc
out
add
in
jmp
outsb
mov
std
pop
daa
imul
cmp
jl
jl
pop
jecxz
and
out
ds
jne
in
jne
add
xor
pop
add
mov
dec
xchg
icebp
lds
stc
sub
inc
sarb
adc
pop
adc
sub
xchg
test
setnp
shl
pop
push
and
jae
lcall
mov
adc
ss
comiss
pop
adc
jge
fisubs
sbb
adc
leave
sti
mov
xchg
dec
push
aas
lods
push
into
gs
cmpsl
setae
test
les
sbb
mov
test
iret
cmc
jne
test
add
out
loopne
xchg
mov
mov
hlt
jl
lea
push
jge
jg
out
add
push
gs
sbb
icebp
fucomp
out
lret
xchg
rcr
sbb
mov
jns
mov
insb
imulb
pop
inc
fcmovu
sbb
mov
inc
fbld
cmp
mov
mov
lea
nop
dec
ficomps
lods
fcomi
lcall
imul
or
jne
enter
dec
fcomi
pop
inc
outsb
mov
push
push
call
inc
xchg
aad
push
pop
ja
cmpsl
ret
cltd
iret
mov
adc
aam
and
pop
push
arpl
inc
ficompl
inc
iret
xchg
xlat
outsb
or
fcom
cwtl
ja
pushf
aam
insb
out
xchg
test
test
repnz
jge
xor
pop
xchg
mov
dec
outsb
xchg
fists
aaa
int
ja
inc
sbb
sti
cmp
lahf
fiaddl
push
mov
adc
inc
dec
push
hlt
das
xchg
push
insb
cmp
ret
dec
mov
nop
int
in
xor
sets
dec
insl
insl
push
movntq
push
lods
adc
pusha
xlat
int3
or
pop
lock
mov
jo
imul
fucomip
leave
xchg
mov
lret
sub
sub
and
jno
sub
mov
lock
adc
pinsrw
jl
pop
aaa
test
inc
sti
iret
sti
lods
and
mov
mov
push
int3
bound
jl
stos
orl
lock
inc
adc
int3
xor
pop
jne
xor
addr16
lods
lahf
pusha
loope
into
out
in
faddl
jae
mulb
orl
nop
lret
and
imul
jns
push
jb
daa
sub
jmp
fwait
movsl
sbb
pop
aaa
inc
and
sahf
loopne
ja
pop
mov
pop
jecxz
popa
rorl
pop
and
cvtps2pi
addr16
iret
jnp
addr16
stos
push
push
adc
add
push
xor
push
and
xor
and
adc
sub
inc
pop
lret
cli
jbe
test
roll
arpl
shlb
and
les
mov
dec
dec
mov
and
sbb
scas
movl
inc
and
jno
xor
dec
cld
movsl
std
cmp
inc
aaa
sub
sub
iret
rolb
push
pop
push
push
ret
dec
rorb
push
ret
ss
adc
adc
cmp
sbb
pop
mov
sti
adcb
pushf
ffreep
sub
lcall
or
divb
inc
mov
stc
gs
cwtl
outsl
jb
jecxz
lcall
or
sbb
dec
jns
mov
mov
iret
and
cmp
enter
aam
sbb
mov
dec
dec
lret
cwtl
fmuls
pop
pop
dec
add
inc
sahf
div
sub
dec
outsb
xor
jl
sbb
ret
outsb
cs
or
sbb
add
aaa
andl
pop
pop
add
cmp
cmp
pop
ret
lds
xor
cmp
jl
lea
mov
cwtl
cmp
sarb
lcall
mov
sbb
add
adc
inc
adc
out
imul
lods
lret
hlt
sbb
movntq
pop
xor
adc
out
pop
ss
pop
xor
xor
lcall
test
outsl
popf
clc
pop
loop
push
movsl
mov
mov
mov
rorl
insb
inc
push
inc
cmp
pop
mov
bound
lret
add
push
outsl
xor
or
pop
push
dec
add
adc
imul
cmp
rolb
aaa
hlt
push
inc
shl
sbb
mov
pop
or
mov
sub
push
and
sbb
and
movsl
lret
xor
adc
xor
arpl
or
push
mov
lahf
adc
or
aaa
dec
add
pop
or
pop
pop
mov
test
sahf
sbb
sbb
adc
xlat
sub
dec
cmpsb
inc
sub
or
mov
sahf
and
in
cmpsl
in
cmp
fsubs
mov
xchg
mov
jb
sub
pop
cmp
loop
xlat
push
or
outsl
xchg
stc
dec
daa
adc
rcrl
add
xor
adc
pop
in
or
out
ficomps
pop
dec
enter
insb
movsl
les
dec
nop
movsl
pop
or
addr16
cmovl
fcoml
popa
loopne
das
test
add
enter
test
outsb
aad
ja
add
daa
jb
das
stc
inc
jge
push
inc
sahf
fcmovnb
fmul
jmp
std
or
pushf
add
xchg
xor
pop
addr16
lods
jle
sbb
and
xchg
xor
xchg
cld
xlat
pop
daa
cli
sbbl
mov
inc
push
stos
mov
adc
or
and
adc
enter
cmp
cli
pop
cmp
adc
xor
fmuls
in
filds
add
leave
push
int3
mov
imul
push
jge
pop
outsl
lea
lods
jo
fsubp
flds
sbb
fcmovb
outsb
push
and
bound
out
sbb
iret
scas
shrd
fsub
xchg
lea
lock
test
xchg
or
loopne
adc
cmp
fs
into
nop
loop
rcll
cmc
cmp
mov
mov
nop
pop
mov
js
dec
push
pushf
dec
pop
mov
and
data16
jecxz
test
test
fimull
or
lcall
adc
cmp
sub
frstor
mov
xlat
orb
imul
adcl
mov
inc
cmp
divb
and
xchg
and
inc
aaa
pop
mov
dec
pop
mov
or
rcrb
adc
pop
mov
mov
mov
dec
jbe
addb
pop
dec
scas
rcl
movsl
cmp
sub
mov
mov
adc
mov
cld
or
jb
into
popa
popa
ja
test
xchg
nop
push
ret
shrb
lahf
push
out
cs
adc
and
stos
add
cmpsb
lea
std
fcmove
jae
push
xchg
mov
jne
adcb
iret
sbb
cwtl
addr16
test
in
cmp
sub
subb
or
sbb
lret
xor
ret
inc
jb
mov
sbbb
test
or
xor
bound
push
popf
out
xor
dec
lret
xchg
inc
fisubl
data16
pop
or
jge
adc
pusha
inc
cmp
mov
addl
imul
xchg
in
or
out
and
and
cmpsl
jae
inc
xchg
cmc
das
mov
xlat
scas
stc
pushf
or
out
xor
cmp
or
imul
in
add
into
jmp
jmp
fnsave
arpl
xor
pop
adc
fisubl
push
adc
cmp
xlat
and
int3
loop
mov
fidivl
xor
add
or
loop
repnz
clc
sbb
sub
or
imul
dec
mull
pop
adc
test
pop
bswap
jle
cmpsb
or
push
lahf
inc
or
notl
add
inc
sbb
add
js
repnz
rcr
inc
dec
fidivrs
cltd
int
push
pop
subb
sbb
fucompp
dec
xchg
jge
add
outsl
jp
fs
dec
push
dec
inc
into
or
dec
nop
push
and
aad
add
jnp
pop
cmp
daa
and
out
cltd
cmpsb
mov
pop
pop
xor
mov
xchg
jp
push
pop
and
add
jg
inc
cmp
insb
or
pop
mov
sbb
sarl
sbb
and
daa
pop
lahf
fwait
ss
pop
cmp
iret
int3
in
push
lea
add
repnz
lret
into
rdpmc
lcall
dec
sbb
lea
aaa
sbb
adc
pop
dec
sub
and
lods
mov
xchg
mov
fdiv
xchg
pop
popl
push
rcl
pop
add
or
jle
iret
mov
test
pop
imul
jmp
or
gs
sbb
mov
test
ds
int3
xchg
xor
pmullw
ret
test
mov
hlt
push
push
sbb
mov
add
aam
icebp
shl
add
fisttps
lret
jae
dec
inc
mov
jo
push
ds
cmc
rclb
cmp
mov
cltd
enter
adc
das
mov
push
cmc
xor
arpl
cwtl
mov
ljmp
and
out
insl
dec
nop
pop
pop
add
jp
cmp
cltd
sub
sahf
outsl
inc
inc
sub
mov
xchg
add
loop
sub
push
fs
sub
inc
setp
sub
aaa
out
pop
push
and
sbb
sub
pop
iret
mov
ds
pop
rcll
aaa
or
or
inc
inc
add
jne
adc
in
mov
int
add
stc
rol
fistps
sub
cmp
scas
aam
popf
jg
out
stos
fistps
fimull
movl
mov
and
jbe
mov
ljmp
adc
dec
push
cld
das
ja
outsl
sbb
dec
adc
mov
xor
jae
add
rcr
lea
inc
out
addr16
cmp
or
mov
mov
sub
add
xchg
int
pop
xchg
out
jno
cmp
push
inc
popf
sti
add
lahf
add
mov
iret
insb
sbb
cld
cmp
lea
adc
insl
push
iret
insl
mov
xor
cmp
dec
push
add
cmpsb
outsb
mov
lods
int
ds
xchg
mov
repnz
cltd
pop
jl
into
out
jbe
add
cmc
dec
sub
ss
in
repnz
orl
mov
sub
xchg
rcr
mov
mov
cwtl
mov
shr
mov
inc
mov
stc
mov
mov
sbb
add
pop
outsb
inc
inc
iret
subl
add
movsb
jl
add
push
lods
pop
xchg
and
or
add
in
xchg
sbb
lcall
push
lret
mov
add
dec
jns
push
pop
pushf
xchg
mov
pop
icebp
mov
sbb
cmpsl
pop
dec
daa
pop
dec
int3
mov
push
leave
add
jo
sub
xchg
or
push
enter
jle
pop
sbb
fisubs
push
aaa
sub
cld
xchg
and
push
jno
fnstsw
mov
and
xchg
lods
repz
fisubl
imul
xor
dec
cmp
cmp
jge
int3
int
out
or
mov
mov
sbb
sbb
push
int3
mov
movb
mov
and
cltd
ffree
sub
sub
dec
mov
mov
sub
inc
lea
imul
leave
cmp
or
adcl
xor
xor
ss
push
push
cmp
popf
sub
call
fildl
add
add
push
mov
sub
and
in
adc
xor
xor
fdiv
mov
sbb
movb
cs
movsl
lret
repnz
inc
sub
pop
inc
xchg
add
xor
popa
xchg
dec
addr16
sub
push
outsl
add
arpl
cmpsl
and
xor
mov
in
mov
iret
jecxz
pushf
mov
nop
inc
dec
aad
and
dec
bound
pop
xchg
jb
pop
sub
cmpsb
repz
addr16
rorb
add
das
xor
jle
in
fs
gs
xchg
cmp
bound
and
and
loope
insb
lcall
xchg
popf
adc
xchg
adc
add
lcall
jge
or
rorb
pop
in
pop
lret
xor
xlat
xchg
sub
sub
or
cs
int3
mov
add
leave
lea
out
push
push
mul
lods
enter
push
dec
fcoml
out
sbb
add
leave
and
fcoms
fdivrs
and
fnstsw
or
cs
ja
lea
mov
mov
les
test
push
mov
fistps
mov
shlb
xor
dec
xor
bnd
jp
gs
int3
lods
pop
out
mov
mov
int
ret
pop
xlat
dec
fidivrl
add
add
sbb
cmp
sbb
out
loop
sbb
fstl
daa
out
lret
and
sub
lcall
dec
test
sub
or
repz
push
shrb
imul
stos
sahf
insl
out
jp
pop
mov
inc
lock
cmpsl
inc
and
sbb
aaa
fmul
ss
or
sbb
sub
mov
mov
pop
xchg
ret
test
sbb
test
push
and
adc
pop
add
hlt
inc
and
test
add
in
gs
xchg
xorl
loopne
shl
push
test
stc
xchg
cmp
int3
insb
jbe
adc
cmp
pushf
adc
repnz
sbb
push
inc
mov
adc
stc
jb
mov
jmp
stos
andb
inc
jg
fstpt
mov
adc
pushf
test
cmp
adc
movsl
push
xchg
icebp
movsb
adc
fwait
or
push
sub
dec
insb
or
test
jmp
adc
mov
fiadds
mov
fldcw
mov
pop
xchg
ficomps
mov
add
pushf
loop
push
inc
jb
lea
xor
or
jne
mov
jmp
inc
add
pushf
xor
push
cmp
sahf
ficoms
int3
mov
dec
adc
iret
dec
in
ja
mov
push
and
cli
mov
lret
fdivl
add
ja
fcmovnb
sbb
pushf
dec
pop
mov
push
or
xchg
psubb
shl
dec
or
xor
out
mov
iret
jge
jmp
bound
xor
or
or
push
sub
and
cwtl
pop
dec
push
fiaddl
rorb
fwait
mov
push
mov
frstor
sbb
push
or
dec
mov
lahf
in
add
pushf
adc
popf
sbb
rol
pop
sub
cld
push
xchg
pop
mov
sahf
pop
sbb
pop
push
pop
aas
gs
inc
add
imul
andb
sbb
sub
lds
ljmp
fcomps
out
rcrb
jmp
jno
int3
mov
out
lock
dec
imul
insl
sbb
lds
sbb
mov
ret
sbb
adc
inc
mov
int3
push
roll
xor
iret
add
sbb
sub
push
pusha
cltd
test
popa
xchg
ret
push
xlat
rcr
and
jns
sbb
cmc
mov
sub
push
xchg
sbb
pop
aam
outsb
and
popa
mov
daa
push
mov
xchg
hlt
inc
jp
xor
adc
iret
pop
lds
gs
xchg
icebp
dec
jmp
inc
sub
ja
cwtl
inc
xchg
leave
sbb
rcr
and
xor
andl
sbbb
mov
test
pop
movsl
leave
fidivrs
add
or
and
rcrl
insb
aaa
les
mov
mov
lock
push
inc
xor
repz
test
mov
sbb
enter
pop
pusha
in
leave
fldcw
iret
mov
pop
jbe
xchg
adc
ret
test
in
mov
lahf
push
into
push
adc
or
mov
fcomi
mov
inc
and
mov
ss
pusha
jae
scas
adc
pushf
mov
mov
fiadds
out
push
dec
fists
add
mov
or
xor
mov
or
hlt
out
pop
add
getsec
frstor
push
inc
ja
inc
lret
rcl
out
dec
enter
int
sbb
fs
mov
icebp
pusha
cltd
popa
ret
in
scas
mov
xchg
sbb
aas
sub
aam
out
repnz
push
mul
mov
add
lret
rcrb
les
aaa
scas
movb
mov
out
icebp
push
int
sbb
fadds
push
aas
lret
pop
sbb
pop
dec
pop
rorb
into
adc
or
sub
mov
pusha
lahf
addr16
cmp
jl
cwtl
mov
pop
mov
sub
adc
pop
pop
daa
in
pop
pop
pop
cmp
inc
leave
push
sub
pop
out
repnz
xor
xorb
add
out
push
pusha
fsubp
dec
adc
add
mov
xor
in
out
pop
fs
sbb
sbb
xchg
pop
jg
enter
in
pop
push
test
sar
add
pop
mov
out
clc
cmp
into
insb
cwtl
or
push
or
push
ret
mov
mov
mov
sbb
jno
daa
std
lret
std
inc
orl
jbe
test
push
lods
call
inc
pop
int
out
lret
fildl
rorb
sti
and
or
add
cmpsb
cmp
dec
insl
mov
into
out
ja,pt
cmpsb
inc
scas
iret
js
gs
jmp
addr16
popa
mov
adc
loop
fimuls
cmp
cld
jmp
sub
push
out
lcall
andl
fdivr
push
add
aaa
addb
pop
push
add
push
sbb
fimull
mov
shl
aaa
mov
fisubl
sub
and
dec
adcb
int
cmpsl
adc
repz
mov
fcmovb
dec
sub
aas
mov
idivb
sub
jp
sub
rolb
dec
pop
dec
ret
icebp
push
pop
sbb
sbb
add
dec
ds
mov
bound
addb
ret
setl
mov
sub
fcoml
xor
jge
sbb
pop
test
gs
insb
add
inc
notb
mov
pop
jae
sbb
mov
push
lds
add
cmp
int3
mov
loope
enter
xor
ljmp
xchg
sub
ljmp
sub
sub
xchg
push
jns
pop
jbe
jbe
add
xchg
xlat
int3
mov
jne
enter
insb
push
push
lods
xor
sub
mov
pop
dec
call
fld
push
pop
xor
mov
dec
addr16
iret
ret
pop
popf
in
pop
stos
pop
loop
insb
ljmp
pop
ss
js
sti
jns
dec
jle
dec
mov
addl
mov
aas
aad
fldcw
sbb
jle
cmp
sub
mov
out
and
inc
jge
data16
sbb
int3
sub
mov
test
jl
scas
push
lods
and
pop
push
add
cmp
pop
int
dec
push
sub
ret
pop
in
pop
adc
lcall
lea
int3
out
push
pop
scas
jge
cmc
mov
insb
lea
sub
pop
cltd
mov
push
andps
xchg
mov
fstps
popa
out
movsl
out
pop
pop
lea
aas
push
pop
outsl
xchg
addr16
hlt
push
daa
imul
adc
lods
or
dec
fisubrl
leave
sub
daa
push
inc
int3
push
or
repz
dec
cmpsb
shrl
mov
mov
xchg
loopne
mov
ficompl
ljmp
into
in
jp
scas
inc
fbld
fnstenv
rcl
xchg
outsb
add
mov
dec
xchg
mov
sbb
mov
insl
pusha
imul
xchg
fbstp
daa
scas
add
cltd
mov
and
test
dec
repz
xor
lea
arpl
push
sbb
dec
add
sbb
jae
jns
stc
dec
mov
fstl
inc
add
add
cmp
jne
jle
popf
jne
decb
dec
shll
lds
sbb
jecxz
add
inc
leave
mov
xor
sub
jmp
arpl
pop
xor
fimuls
push
adc
les
aas
and
or
sub
dec
inc
inc
int
xor
mov
add
and
mov
loopne
push
sbb
pop
dec
shrb
cmp
mov
jno
add
add
js
jnp
xor
mov
hlt
in
out
fbstp
addr16
push
int
sub
xchg
rolb
int
dec
push
sbb
mov
jns
add
ja
push
pop
jg
pop
data16
movsb
fidivs
pop
sbb
insb
adc
mov
sbb
inc
cmp
add
pop
movsl
adc
xchg
stos
pop
mov
pop
xor
push
xor
push
movsb
xor
push
int3
stos
sbb
sub
inc
sbb
or
sbb
insb
sub
ffreep
push
pop
fdivs
das
cwtl
pminub
cmp
dec
pop
or
add
addl
loope
mov
inc
imul
lret
mov
mov
and
stos
jmp
sti
aad
cmpb
mov
popf
push
xorl
add
dec
je
sub
daa
mov
movl
nopl
popa
jl
add
in
dec
int3
inc
mov
mov
ret
sub
ret
inc
cmp
leave
lret
iret
sub
push
and
fs
inc
imul
std
pop
addr16
sbb
rclb
mov
inc
dec
fisubrs
xor
cmp
fcmovbe
test
ss
mov
shll
mov
popf
jge
mov
int3
loop
stc
push
lods
dec
inc
nop
fldcw
jp
sbb
std
inc
or
and
add
gs
cmp
xor
test
int
cmp
lcall
xchg
xor
mov
jne
xchg
in
mov
lods
scas
xor
jb
scas
fs
push
test
adc
out
xchg
inc
lret
fdivs
jmp
popf
adc
ret
lret
iret
xor
into
outsb
or
mov
test
push
xor
mov
cmp
cli
mov
sub
sahf
xchg
push
push
cmpsb
and
dec
jle
int3
in
add
jno
jmp
jl
xchg
mov
das
cli
push
xchg
sbb
fldcw
test
lcall
mov
fsubs
sub
clc
adcl
cwtl
mov
test
sahf
jg
data16
lahf
mov
inc
push
mov
or
or
push
sbb
mov
test
std
rorb
push
sbbb
add
add
or
adc
das
dec
cmp
dec
fidivrs
test
insl
movsl
leave
dec
out
jbe
xor
ret
and
cmpsl
dec
sub
insl
imul
arpl
pop
test
mov
push
ja
cmp
shrb
pop
lock
inc
ds
je
imul
xor
cmp
mov
sub
xor
push
and
fldl
pop
inc
ss
sbb
cmpb
add
push
sub
mov
xor
imul
xchg
pop
jne
inc
gs
pop
adc
data16
call
jbe
adc
jbe
stc
sbb
inc
bound
xchg
cld
movsb
and
add
rolb
stos
push
sbb
push
adc
fsts
and
iret
fadds
test
pop
divps
sbb
and
iret
push
mov
xchg
push
sahf
ljmp
mov
pop
lods
xchg
jl
add
push
lods
mov
pop
push
inc
or
mov
mov
scas
les
jle
xor
sbb
xlat
mov
add
pop
rcrl
or
or
pop
daa
or
fcmovnbe
idivb
pop
sub
jge
jno
add
push
aaa
lret
mov
inc
daa
add
insb
jo
jns
and
push
push
fildl
rorl
fcomip
imul
mov
sbb
pop
mov
mov
pop
mov
adc
lea
fisttpl
jo
scas
in
inc
ror
ret
in
lock
xchg
mov
sub
arpl
les
push
pop
outsl
pop
push
dec
or
push
ljmp
inc
insl
mov
xchg
cmp
push
pop
inc
out
xor
add
push
adc
pop
xor
jge
adc
cli
shll
and
push
push
cmp
push
push
imul
stos
mov
cs
jb
lcall
in
leave
xchg
mov
lahf
mov
lret
adc
sbb
mov
mov
push
stos
xor
fistpl
int
incl
sbb
insl
and
out
aaa
xor
pop
lea
adc
loop
sub
iret
lea
sbb
incl
sbb
xor
ds
pop
lds
out
or
sub
add
iret
subl
adc
nop
mov
xor
push
push
jo
xchg
and
cs
or
mov
push
adc
dec
sub
push
outsb
into
fcmove
xchg
in
mov
rcrl
pop
mov
cmpsb
stos
ljmp
pop
mov
sub
fcomi
cmp
ss
xor
shlb
lods
in
mov
clc
insb
fldl
jnp
cs
out
gs
pop
jmp
xchg
sbb
pop
sub
int
sub
xor
pop
aas
dec
dec
out
xor
leave
adc
inc
jge
es
adc
in
push
dec
in
mov
mov
xchg
push
inc
gs
mov
mov
test
hlt
push
cli
hlt
cmp
test
test
in
mov
adc
and
push
xchg
push
pop
cld
aas
sahf
push
xor
lret
pushf
mov
sub
arpl
jbe
push
push
out
les
push
pop
adc
and
lahf
fnstenv
push
sub
mov
xchg
cmp
fadd
fs
and
dec
jle
int
out
mov
mov
mov
imul
sbb
or
daa
adc
jb
and
dec
sbb
and
inc
sbb
cmp
mov
int
ret
cmp
dec
ja
sbbl
jge
inc
cmpsl
enter
or
push
paddsw
sbb
and
cwtl
js
xor
rcrb
fisubrl
sbb
test
pop
pop
sub
xchg
mov
adc
jo
test
sbb
iret
ss
sbb
stc
addps
sbb
xchg
sub
int3
push
add
xchg
dec
mov
fstl
push
gs
pop
sbbb
xchg
call
loopne
mov
and
jp
pop
add
movsl
jg
pop
out
lret
dec
cmpsl
loope
jp
adc
pop
xchg
inc
insl
xchg
push
ret
out
fwait
xor
dec
shlb
sbbl
in
insl
mov
cmp
sbb
repnz
js
ficomps
adc
dec
unpckhps
iret
repz
in
adc
xchg
enter
sub
iret
out
adc
pop
mov
mov
and
or
sub
sub
mov
lea
adc
add
mov
int
ljmp
shl
xor
sub
mov
add
push
repnz
icebp
out
push
inc
fbstp
inc
pusha
push
cmpl
add
sti
add
inc
repz
jns
sub
xchg
fwait
xor
ret
fcoml
xchg
xchg
xchg
sub
add
jge
das
xor
imul
dec
xchg
mov
add
pop
push
and
dec
dec
ficoml
mov
out
je
ficoml
xchg
and
xchg
decb
leave
add
lock
mov
add
dec
pop
outsb
push
fisttps
cmp
or
and
jl
rcrb
mov
add
test
dec
sbb
adc
jnp
push
push
cmp
outsb
or
aaa
or
jo
dec
fbld
lods
ret
add
mov
shlb
mov
dec
add
pop
shrl
add
sub
xor
and
addr16
cmp
icebp
mov
idiv
in
repnz
mov
lret
mov
fistpll
cltd
popf
js
mov
sbb
test
push
sti
cmp
dec
mov
inc
outsb
imul
sbb
aas
dec
ret
std
rclb
push
sbbl
add
subb
out
inc
stos
adc
xchg
fistpll
enter
int3
movsl
lods
mov
iret
xor
rcrl
cmp
lret
shl
dec
inc
sahf
adc
fisubrl
iret
lea
and
in
scas
mov
sbb
les
in
push
or
sub
lea
mov
and
fcomi
or
test
fsubl
xchg
push
dec
inc
xor
test
push
xchg
stos
neg
leave
xchg
pop
ja
inc
adc
das
and
cld
aas
and
jo
out
movsb
sbb
or
mov
mov
xor
mov
cmc
aad
cwtl
and
mov
mov
sub
fsubrl
inc
jno
pusha
das
add
in
negl
scas
cltd
mov
ss
mov
shll
sbb
mov
xlat
dec
jecxz
fimull
rcll
popf
jg
mov
lahf
xor
iret
orl
pop
pushf
je
mov
sub
lock
or
mov
jne
sbb
aam
cmpsb
pop
jecxz
sbb
push
add
ret
fdiv
cmp
mov
paddusw
mov
xor
call
push
lea
xor
lds
pop
mov
and
fbstp
ret
dec
int3
daa
mov
repz
shl
lret
and
pop
xlat
mov
mov
xor
out
mov
pop
or
xor
out
popf
arpl
inc
lahf
push
mov
out
int
xchg
add
lods
imul
lret
and
xchg
or
bound
shll
inc
and
push
outsl
jne
in
test
sub
sub
in
sbb
push
movl
add
dec
add
push
adc
shrl
add
add
mull
cwtl
jp
dec
mov
add
fnstsw
push
cltd
ficoml
dec
movsb
fdivs
popa
addr16
lds
in
mov
mov
push
leave
push
jge
minps
xor
or
call
or
sbbl
mov
lret
xor
ljmp
ja
icebp
push
mov
ljmp
pop
inc
pop
hlt
cwtl
stos
cmpsl
push
mov
mov
dec
inc
cmpsl
pop
add
xchg
pand
iret
outsl
insl
fmull
in
sbb
pop
mov
adc
sub
cmpsl
sbb
cmp
daa
push
mov
or
push
mov
lcall
mov
lea
mov
insb
jl
fwait
lret
ss
ss
insl
jp
inc
push
and
das
data16
rol
dec
inc
mov
sbb
pop
pop
testb
mov
push
mov
je
notl
lahf
push
pop
mov
out
add
fwait
cmp
int3
adc
push
cmp
test
and
pop
add
push
dec
cmpsl
push
inc
stos
mov
or
daa
pop
sbbl
out
inc
xchg
pop
mov
aad
test
pop
fldl
push
mov
clc
shll
pop
xchg
pop
lahf
lcall
xchg
int
lcall
cmc
pop
sbb
sbb
dec
jmp
aad
fcomi
jae
adc
into
aam
sbb
ljmp
movzbl
mov
sub
jno
mov
and
out
ss
sub
pop
cwtl
imul
mov
push
shl
clc
std
addr16
mov
in
jmp
cmpsl
dec
add
pop
mov
fstpl
pop
dec
sub
xor
jo
ljmp
jnp
and
iret
negb
ds
lock
xchg
fsubl
dec
xchg
sti
xor
push
in
push
sbb
sbb
gs
lock
movsl
fcmovb
xchg
cmc
pop
adc
xchg
pop
fldt
push
lahf
inc
das
and
les
cli
mov
out
into
arpl
push
fstpl
je
mov
jns
mov
sbb
fs
aaa
and
insl
imul
cltd
adc
mov
rorl
mov
ror
mov
add
jnp
adc
gs
cmpsl
leave
jmp
addr16
pop
adc
test
iret
stos
pop
or
xor
sbb
mov
adc
mov
pop
vorpd
nop
lcall
arpl
js
sbb
ja
mov
lcall
xchg
xor
cmpsl
pop
jge
ficompl
sub
jl
sub
xor
and
push
sub
bound
je
pop
jno
shll
sbb
int
jnp
lods
sbb
add
mov
mov
mov
mov
ljmp
imul
push
loop
fisttpll
in
sbb
mov
dec
in
jge
mov
pop
cli
sahf
dec
fnstcw
fdivrl
xor
lcall
add
inc
pop
xchg
mov
mov
int
inc
rcrb
int
sbb
sbb
iret
lahf
fiaddl
inc
adc
xorb
add
mov
push
ret
pop
add
insb
inc
leave
add
add
scas
sub
inc
test
cmp
cmp
inc
xchg
jb
mov
addl
das
push
and
dec
push
leave
and
dec
sbb
xchg
inc
iret
add
dec
jno
in
mov
mov
fnsave
add
cwtl
out
push
push
iret
imul
arpl
inc
push
loopne
outsl
aas
aaa
pop
xchg
pushf
adc
and
addr16
test
push
sbb
popa
nop
or
or
pop
push
fildll
xchg
ljmp
add
sahf
icebp
mov
xchg
pop
scas
ficomps
nop
xlat
sbb
outsb
ds
push
dec
add
sbb
cmp
and
ret
cmpsb
ret
push
cmp
test
push
ret
dec
lea
test
pop
cmpsl
pop
out
fisubrs
imul
out
xchg
lock
mov
jne
stos
mov
sbbl
sbb
dec
inc
lcall
fadds
inc
sub
call
adc
mov
movsb
mov
add
fimull
sbb
bound
shrl
pop
orl
les
dec
push
ret
aad
and
popf
pop
les
push
pop
iret
adc
rcr
and
shrl
xor
adc
fs
sub
add
mov
jle
aam
das
xor
shrd
pushf
xor
xor
sub
and
dec
das
arpl
sbb
mull
mov
mov
fsubl
xchg
or
jg
or
push
adc
cmp
pop
dec
or
xchg
or
add
ret
mov
inc
push
aad
in
in
jge
pop
pusha
jnp
push
les
cltd
mov
push
jno
mov
jmp
movsl
inc
jle
cmp
or
inc
cmp
or
popw
stc
mov
imul
or
cmpsb
mov
mov
jmp
repz
jmp
insl
ja
xchg
scas
addb
or
icebp
mov
out
and
pop
xor
cmpsl
sbb
inc
add
lret
insl
mov
lcall
pop
or
xor
in
add
xchg
mov
sbb
fcompl
dec
mov
cli
cmp
pop
jo
stos
adc
pop
ficoml
push
fwait
dec
out
sbb
mov
sub
xchg
xchg
push
lahf
pop
cmp
iret
mov
push
push
add
sbb
movsl
and
popf
test
cmc
mov
push
push
stos
cld
js
lret
leave
pop
dec
daa
rcrb
mov
jg
cwtl
outsw
addb
js
repz
addr16
lds
nop
popa
adc
inc
movsl
leave
xchg
mov
lods
push
nop
xchg
test
fcoms
push
sbb
xchg
dec
sbb
in
ja
xor
and
testb
push
dec
sbb
push
xchg
xor
mov
xor
cmp
clc
sub
test
mov
and
inc
xchg
mov
push
clc
out
push
add
fwait
orl
nop
fstl
cmp
or
pop
push
inc
cmp
inc
leave
jg
leave
cmp
or
adc
pop
adc
mov
xlat
sahf
popf
xorl
subb
outsl
jbe
adc
sbb
pop
out
pop
push
add
fldl
flds
iret
add
push
or
jmp
pop
aaa
and
add
pop
fistpl
in
cli
insb
sub
ja
adc
nop
push
pusha
dec
sub
daa
pop
dec
inc
mov
sub
ficoml
mov
out
cltd
mov
mov
push
test
adc
iret
andb
add
fcoms
in
mov
dec
dec
and
add
push
pop
jmp
cld
paddsw
xchg
xlat
stos
pop
stos
inc
push
fildl
nopl
lcall
andnps
inc
jnp
ds
xchg
sbb
data16
add
inc
mov
cmpsl
or
xor
mov
mov
test
push
fldenv
sahf
je
data16
sub
ret
mov
out
xchg
add
sub
lahf
add
in
xor
xor
clc
loop
cmpsl
cmpsb
insl
idivb
rorb
insb
xor
mov
pop
jbe
shll
sbb
cmpsl
and
push
inc
dec
mov
das
xor
insb
push
jo
imul
sti
aad
mov
add
sbb
nopl
cmp
jno
imul
dec
inc
add
jmp
mov
or
mov
mov
mov
pop
mov
sub
push
mov
mov
cld
dec
lods
repnz
mov
sub
mov
aas
sub
add
incl
xor
push
mov
cmp
fdivrs
das
mov
or
mov
popf
in
sub
inc
mov
pop
push
arpl
hlt
fistpl
adc
pop
iret
push
addr16
daa
dec
pusha
xor
mov
mov
push
aas
xor
dec
or
mov
imul
fstpl
inc
jmp
or
mov
addr16
add
ud1
add
test
insl
xor
fstpt
popf
jno
push
pop
sbb
mov
or
insl
dec
lods
jo
fisttps
test
jne
bound
push
pop
xchg
mov
pop
or
lea
dec
in
call
ret
jg
iret
pop
sbb
cmc
mov
add
idiv
push
pop
std
outsl
pop
dec
sti
pop
add
inc
loope
add
sbb
jo
and
and
pop
xor
mov
sbb
sub
sub
xor
mov
add
fstl
add
inc
sbb
adc
sbb
shrl
add
push
inc
or
cmpsb
xor
or
and
int3
andl
and
lods
or
daa
mov
cs
inc
and
xor
sub
test
inc
aas
pop
and
inc
lret
add
pop
push
outsb
adcb
lods
sbb
sbb
lods
push
mov
sub
mov
inc
test
insb
push
arpl
pop
fisttpll
or
adc
pop
sub
enter
out
xchg
dec
inc
or
mov
fisttpll
int
lods
dec
sbb
insl
loop
fs
xor
lock
push
loope
xor
add
add
cmp
adcl
popf
fdivl
lea
roll
sub
inc
movsb
push
or
imul
jo
sbb
or
xor
test
sbb
jno
imul
mov
xchg
add
out
sbb
imul
mov
and
push
icebp
pushf
jns
sbb
sub
adc
int3
cld
mov
stc
cmp
jns
in
int3
int3
cmpsl
xchg
mov
inc
int3
aam
dec
daa
imul
hlt
out
push
sub
int
sbb
sbb
mov
mov
lods
mov
idivb
test
sub
jecxz
imul
pop
cmc
inc
add
xor
cli
pop
dec
cld
stos
xchg
push
mov
in
jns
in
std
dec
mov
add
sahf
add
push
mov
scas
cmp
popf
lea
out
mov
mov
jb
pusha
and
or
xor
or
jno
xchg
pop
lock
ss
mov
inc
minps
push
pop
jmp
popf
cmp
dec
mov
push
or
repnz
add
dec
ret
add
cmp
out
in
jbe
insl
addr16
stos
dec
push
lea
ljmp
outsb
jnp
inc
cmp
pop
push
data16
test
jle
xor
pushf
cltd
fdivr
sbb
mov
movsb
mov
add
push
and
dec
xchg
shlb
movsb
mov
cmpsl
mov
in
xlat
jnp
pop
aaa
into
mov
or
fiaddl
xor
lock
out
imul
in
xor
enter
repnz
cwtl
pop
in
ja
inc
mov
mov
jae
mov
bound
into
dec
and
in
pop
aad
push
lahf
pop
cltd
add
sbb
cmp
ret
sub
push
push
adc
pop
and
inc
leave
or
xchg
fdivrs
rorb
shlb
popa
push
in
push
or
or
mov
negl
and
sub
inc
dec
add
ret
jle
cmp
cmpsl
loopne
jnp
and
inc
inc
int
push
add
adc
popw
jmp
pop
xchg
adc
xchg
inc
mov
xlat
cmp
faddl
aas
pop
pop
add
sbb
rcrl
addr16
in
mov
jae
mov
pop
aas
sbb
call
push
lea
xchg
in
sub
fistps
scas
xchg
lcall
dec
fwait
icebp
jb
push
fucomip
xor
iret
int3
pushf
pop
lods
pop
adc
pop
inc
int
imul
lahf
cmp
push
sbb
stos
dec
idivb
xor
add
push
add
jbe
out
push
mov
xchg
inc
aaa
sbb
outsb
or
jg
fwait
mov
pop
xchg
sub
inc
lret
xor
and
iret
subb
mov
pushf
or
sahf
add
jp
fsubl
ficoms
fcomp
aam
push
push
xchg
dec
xchg
into
icebp
nop
adc
shr
fcoms
push
lock
insb
add
out
mov
and
imul
ss
test
arpl
shll
into
ret
clc
fidivrs
faddl
xchg
mov
sbb
jno
push
leave
xchg
test
adc
jo
xchg
stc
fistpll
lods
add
push
iret
xchg
dec
mov
icebp
cmp
or
push
inc
divb
int3
sub
scas
lret
imul
and
int
or
ror
sbb
xchg
mov
adcl
test
push
jp
and
push
pop
sbb
repnz
or
adc
dec
call
in
fisttps
mov
adc
cmpsb
movsb
sbb
cmp
out
mov
ror
mov
mov
dec
mov
mov
ja
lock
pop
outsb
outsl
xlat
dec
and
mov
or
lods
adc
test
jae
cmc
iret
push
das
mov
push
inc
or
pop
ss
movsb
sub
shll
adc
push
scas
sarb
into
dec
pop
sub
fstpl
int
ljmp
test
xor
std
fcomi
leave
leave
dec
jne
filds
dec
into
mov
lods
inc
sahf
dec
dec
push
inc
cmp
and
jno
pop
ljmp
or
add
stc
int3
outsb
bound
sbb
xor
push
mov
lods
push
fsubl
cld
stos
push
scas
imul
lds
jae
sub
sub
mov
or
pop
jbe
nop
add
add
sub
add
add
jo
loope
out
mov
pop
pop
dec
jo
addr16
inc
cwtl
pop
addr16
push
imul
mov
xchg
fidivs
mov
push
mov
lock
pusha
ret
inc
lcall
cmp
shl
into
cmp
cmp
gs
fld
fldt
mov
arpl
inc
imul
pop
push
nop
out
mov
xchg
xlat
in
add
mov
sbb
sbb
xlat
int3
std
mov
cwtl
lds
addr16
shlb
in
xchg
mov
hlt
pop
push
mov
jne
sbb
sub
mov
xor
ja
or
inc
jb
sbb
fbld
mul
data16
pusha
cli
sbb
push
jge
fsubr
mov
mov
notb
sub
pop
rcl
and
aad
and
lods
ror
daa
jle
inc
push
lret
adc
insb
fstpt
movsl
sub
repnz
push
sbb
fidivrs
sbbl
xor
mov
out
jbe
test
mov
je
pop
xchg
les
insl
push
cmp
jno
push
scas
or
idiv
rolb
jne
xor
xor
add
pop
mov
jb
xor
mov
cmp
mov
pop
adc
pop
imul
adc
push
mov
add
popf
jbe
cmp
xor
xor
sti
outsl
add
adc
xorl
cmc
inc
sbb
leave
sub
pop
js
add
pop
sbb
jle
sbb
int3
or
inc
push
test
adc
add
push
mov
pop
js
add
arpl
sub
add
cmp
popf
sub
sub
insl
mov
xor
test
adc
push
incb
dec
adc
pop
pop
pop
hlt
inc
and
add
sub
int
lea
cld
addr16
sahf
mov
insl
mov
sbb
sbb
adc
pop
dec
cwtl
test
push
movsl
inc
movsb
pop
xor
sbb
jg
push
dec
outsl
add
pop
repnz
fldz
lret
cmc
add
pop
insb
mov
jl
pop
in
sub
lds
out
pop
jne
int3
dec
fisttpl
xchg
xchg
push
lock
addr16
mov
bound
xchg
les
xlat
inc
fdivrp
mov
xor
mov
sub
lret
test
mov
stc
fisubrs
inc
cmpsl
pusha
sbb
mov
out
xor
inc
movsb
jle
dec
jmp
pop
outsl
jns
or
scas
mov
test
outsw
xchg
push
out
rcl
aam
popa
ja
pop
sub
adc
push
iret
xchg
and
xor
bound
push
xchg
xor
inc
int3
and
inc
frstor
push
mov
addr16
repnz
push
add
shl
fwait
lahf
aaa
xor
push
mov
imul
pop
lods
mov
fadds
loopne
cmp
gs
out
dec
jl
pop
dec
rcr
mov
loopne
lods
mov
dec
pusha
rol
insb
popf
jg
push
add
fs
or
inc
inc
inc
lret
and
or
xor
push
add
ficompl
xorb
insl
pop
pop
and
inc
pop
gs
adc
pop
and
pop
pop
scas
das
xchg
or
dec
adc
pop
and
sbbl
fwait
psubw
stos
call
iret
lret
inc
negb
xor
lods
mov
lea
mov
gs
nop
iret
push
pop
ret
dec
dec
ret
into
psubusw
dec
inc
xor
popf
mov
inc
cwtl
pop
push
and
arpl
jge
cld
out
stc
test
mov
data16
sahf
mov
insl
push
jl
jno
dec
mov
sbb
pushf
sbb
lds
mov
cmpsl
loopne
mov
sub
fwait
repnz
sbb
jle
fisubs
adc
call
insl
cmp
out
fsubl
lods
bndldx
cltd
mov
hlt
pop
sbb
int3
push
push
mov
push
mov
push
lock
mov
sub
push
and
xchg
insl
cmp
dec
cmpsb
add
inc
dec
in
dec
sbb
sub
dec
sub
repnz
pop
ljmp
in
xor
jo
mov
dec
unpcklps
and
ja
xor
pop
lret
and
xchg
mov
cmp
insl
cmp
sbb
aam
push
imul
cmpsb
push
mov
pop
or
es
sub
call
inc
insb
pop
loopne
inc
dec
outsl
jno
and
xchg
mov
sbb
fnstcw
or
ja
mov
or
pop
loope
pop
cmpsb
add
lret
push
pushf
fidivrl
rcrb
mov
les
xchg
dec
std
fidivl
lock
mov
jnp
sub
jae
jge
rcrl
or
loop
sub
add
test
mov
add
pop
xchg
dec
push
out
cmpsl
xchg
xchg
test
cmc
pop
mov
xorl
std
mov
push
or
sahf
mov
cltd
icebp
pop
cmp
push
xor
cmp
rcr
xor
xlat
jbe
scas
cmp
push
cwtl
in
push
dec
popa
adc
shlb
dec
cmp
sahf
shll
divl
push
mov
dec
nop
shrl
stos
test
flds
xchg
les
int3
fisttpll
repnz
sbb
inc
fisubrs
arpl
stc
out
xchg
jae
les
jns
test
out
cwtl
mov
push
adc
insb
add
psrad
addl
mov
icebp
cmp
lods
push
dec
lods
das
or
out
clc
arpl
pop
adc
adc
lods
xor
int3
aas
cmp
sub
lods
repz
push
inc
sbb
lcall
pop
test
bound
push
inc
adc
cmp
dec
call
fsubrl
insb
push
stos
pop
subb
pop
inc
sub
ja
loope
dec
mov
inc
ret
sahf
aas
stos
aaa
xchg
ss
cmp
movsb
lds
cwtl
ret
fwait
sbb
cmp
fdivr
sbb
insl
fsubrp
add
andl
aam
push
shrb
insb
popf
loop
jmp
jnp
sub
mov
add
pop
mov
outsb
sub
xchg
xchg
and
ja
and
js
or
fidivs
mov
scas
sbb
pop
test
sbb
jno
clc
call
xchg
mov
insl
jne
push
xchg
imul
stc
pop
frstor
stc
dec
add
xor
mov
jg
mov
xchg
mov
push
pop
jno
mov
adc
andb
iret
out
scas
sbb
mov
ret
xor
idivb
fcoml
or
mov
inc
and
xchg
jne
dec
and
hlt
daa
outsb
lds
test
adc
out
lret
dec
xor
xchg
xchg
out
mov
push
stos
fxsave
mov
mov
insb
pop
int
psubb
or
xchg
mov
movsl
sbb
ucomiss
mov
in
in
push
iret
or
loopne
pushf
dec
cs
bound
jno
dec
xchg
mov
xchg
ret
cwtl
cmp
and
test
daa
rorl
push
icebp
cwtl
sbb
cmc
fidivs
aaa
inc
push
push
inc
fcmove
jno
fsubl
cmpsl
scas
xlat
out
mov
sbb
and
pop
xchg
mov
mov
push
cmpl
sbb
add
dec
sahf
lods
lods
or
inc
rcll
dec
pop
xchg
popf
daa
inc
lds
lods
gs
sub
xor
stos
repz
repnz
inc
filds
add
inc
push
xchg
aam
jmp
sahf
cmp
iret
dec
das
jnp
or
outsl
aas
ret
clc
push
orl
xchg
push
sub
cwtl
xor
cmp
dec
push
pop
sbb
cmpsl
mov
sti
add
push
mov
and
test
jb
call
xchg
pop
mov
xchg
outsb
adc
nop
and
scas
xor
loope
jo
insb
daa
xor
lret
ficoml
dec
inc
inc
sub
xchg
cmp
loopne
dec
and
enter
call
fwait
arpl
out
xchg
push
lock
out
ja
fwait
inc
out
mov
fisttpl
add
jmp
push
push
in
rolb
xorb
dec
mov
or
pop
cmp
fcoml
or
sbb
js
mov
aas
sub
cli
fistpll
pop
push
movsb
popf
sbb
sub
popf
pop
shl
cs
insb
pushf
lea
adcb
shr
cltd
lret
add
inc
divb
pop
inc
xchg
and
ret
xchg
div
int3
dec
out
inc
jo
mov
mov
add
xor
pop
add
sub
sbb
call
lcall
cwtl
jle
mov
out
jge
lret
fsubl
add
add
jg
ret
cmc
inc
pop
fsubl
shll
jge
pop
aam
pcmpeqw
xchg
sbb
mov
sbb
or
fwait
jg
push
push
adc
fcomi
mov
ret
push
sbb
cmpsl
dec
push
repnz
aaa
es
sbb
scas
gs
lea
add
enter
or
fldcw
popf
addr16
stc
push
aam
fdivl
cmp
rorb
sbb
or
rcl
movsb
add
lret
mov
addr16
out
popa
add
pop
cwtl
adc
jecxz
pusha
fldl
lods
mov
or
ficoml
push
lcall
or
dec
out
aam
sbb
ret
push
mov
push
mov
fld
mov
sub
mov
loopne,pt
outsb
pop
push
sub
addb
cmp
mov
pop
or
cwtl
hlt
in
testb
ficoms
cs
lcall
lea
jg
push
dec
push
cmpsl
inc
sub
add
add
sbb
cwtl
sub
add
and
sbb
lods
fdivr
in
inc
sbb
fadds
sub
sbb
push
push
mov
mov
dec
addl
xchg
aaa
push
fsubl
pop
add
cltd
mov
dec
pop
xchg
div
ret
add
lock
adc
xor
mov
mov
mov
rorb
es
aad
inc
fiaddl
dec
test
add
popf
push
jbe
cld
mov
bound
iret
int3
inc
aaa
cmp
pop
pop
out
sbb
mov
fstpt
test
das
mov
pop
out
add
int3
loopne
xor
mov
lcall
pop
add
mov
xchg
int
sbbb
jnp
int3
add
aaa
daa
pop
cmp
das
or
lcall
pop
fwait
push
inc
jmp
inc
lret
sub
inc
subb
js
add
mov
push
jmp
push
into
in
cltd
ret
fwait
lahf
cmp
movsl
aaa
lods
aaa
jb
lock
mov
and
add
cs
mov
mov
aad
and
popa
pop
push
cwtl
movsl
adc
frstor
bswap
pop
dec
lcall
filds
ret
jns
or
orb
xchg
iret
xchg
insl
sbb
stc
cmp
mov
add
sbb
scas
sub
jge
inc
fstps
sbb
dec
loopne
lcall
inc
enter
bound
inc
adc
xchg
into
repnz
jae
ds
xlat
xchg
lcall
add
or
dec
sbb
jne
push
loope
push
mov
roll
or
add
lds
fbld
nop
sub
push
xchg
push
test
sbb
sbb
pushf
inc
mov
mov
fisttpl
gs
rcrb
bound
mov
negb
jmp
fstpl
rclb
cmp
sbb
iret
mov
inc
adc
fisttpll
mov
xor
dec
leave
push
lcall
and
adc
leave
jl
out
imul
popf
bound
mov
stc
cld
cmp
mov
rclb
rcrb
hlt
cmp
int
mov
jne
mov
pop
add
and
adc
push
popf
rcrl
stc
jb
push
sti
addr16
fdivrp
adc
sti
cmp
movl
cld
sbb
and
adc
stos
xchg
outsb
adc
mov
movsl
xor
insb
add
mov
add
popl
push
pop
adc
cli
out
mov
adc
pop
inc
int3
sub
lock
inc
push
jp
pop
xor
ret
dec
xor
daa
fdivs
iret
lods
pop
lret
inc
and
push
or
mov
add
pop
mulb
scas
and
fdivrs
pop
stos
push
addr16
nop
pop
mov
neg
nop
out
std
and
push
push
mov
sub
iret
add
pop
into
cwtl
pop
xchg
lret
test
adc
or
xchg
setae
mov
addr16
sub
lea
mov
sub
sbb
xchg
mov
fidivrl
inc
or
pop
or
or
arpl
push
lock
movb
scas
or
ja
add
out
push
push
lock
faddl
jl
cmc
mov
xor
cmp
dec
ss
cld
cmp
jno
lods
ja
mov
pop
lods
inc
divb
popa
into
cmpsl
or
jo
repnz
xchg
ret
das
mov
mov
pop
fadds
pushf
sbb
cmp
push
jge
cmp
out
jno
shlb
and
sbb
testl
jbe
arpl
sub
jo
add
mov
int
xlat
fbld
dec
sbb
int
or
xor
adc
sbbl
mov
fs
fldl
jno
mov
or
inc
dec
xor
pop
inc
scas
pop
push
loopne
imul
sbb
gs
xor
bound
push
or
add
mov
rorl
mov
xlat
loopne
fdivs
sbb
nop
andl
mov
int
add
std
cmp
icebp
dec
add
mov
jp
in
adc
mov
cmp
lock
cmp
dec
lret
dec
sbb
into
mov
mov
push
mov
push
out
add
popf
sbb
aaa
sahf
fidivs
stos
mov
int
jmp
mov
gs
jmp
test
imul
mov
xor
sbb
inc
add
int3
sbb
fcoml
mov
jns
sarb
pop
or
jns
iret
sbb
pushf
dec
fmull
lea
aaa
rorl
xor
pop
mov
cld
mov
lock
aas
mov
pop
daa
sub
add
cmp
enter
mov
stc
mov
insl
repnz
mov
ds
dec
andb
jne
pop
cld
jnp
stos
adc
push
in
pop
and
push
jmp
sbb
ds
push
dec
adc
out
jp
stos
dec
shufps
mov
fstpl
mov
jl
sbb
addl
sbb
dec
add
or
test
fldl
ret
int3
or
cli
lds
jecxz
aas
push
pop
shll
push
dec
rclb
cmp
or
xor
fildll
clc
fildl
pop
add
shrl
addr16
movl
push
pop
lahf
push
add
jae
test
repz
or
mov
add
or
or
jbe
cwtl
popf
fcoml
push
pop
cwtl
cwtl
fsubs
int
or
add
cmp
lods
loop
in
mov
movsbl
push
sti
xor
dec
or
inc
divb
insl
mov
xor
push
inc
out
cmp
push
pop
rorl
adc
out
popf
jne
cmp
push
iret
dec
mov
xchg
cs
mov
inc
loop
iret
inc
out
jae
pop
inc
jae
or
popf
jb
pop
xchg
jne
bound
enter
or
int
adc
pushf
mov
dec
out
fsubrp
or
mov
clc
push
pop
in
and
bound
jge
adc
or
clc
or
ljmp
lea
or
push
leave
sahf
or
xor
out
pand
pushf
sbb
in
mov
int
lret
das
insl
push
lcall
jns
push
imul
xorb
inc
outsl
enter
ss
lret
stc
ret
aad
cmp
idivb
enter
xchg
call
stos
arpl
pop
insl
dec
adc
xor
fbld
scas
popf
sub
insb
sbb
out
int
mov
adc
lcall
iret
ret
les
enter
xchg
dec
pop
fcmovnbe
mov
mov
adc
ret
xor
pop
out
addr16
mov
outsb
jbe
fs
aaa
insb
fidivl
in
dec
push
dec
outsl
push
push
and
fbstp
inc
icebp
jmp
push
xchg
gs
mov
xchg
lcall
xor
xchg
in
testl
ds
sbb
jp
mov
sahf
mov
jmp
ss
mov
xchg
stc
mov
out
add
idiv
loopne
push
sbb
sti
rcr
in
pop
xor
push
js
shlb
dec
jno
mov
adc
jge
mov
xchg
sbb
adc
dec
pop
sub
bound
popa
cltd
movsb
jle
pop
aas
adc
sbb
push
notb
leave
movsb
test
stos
pop
xor
sti
mov
mov
or
daa
daa
pop
and
addr16
popf
jno
mov
loope
out
adc
mov
dec
addr16
out
pop
imul
int
shl
push
xor
pop
jp
pop
xchg
push
notb
push
add
lahf
dec
xor
int3
sub
add
shrl
pop
repz
dec
sub
xchg
aas
lds
xor
js
lea
insl
push
push
test
xor
lret
dec
mov
mov
pop
adc
cld
lds
push
mov
popf
in
xor
int
in
adc
stc
cmc
cmpsl
cmp
ja
ret
int3
jmp
xor
pop
xor
mov
es
pop
inc
jbe
add
iret
xchg
sbb
inc
and
pop
adc
movsl
xor
lods
adc
sahf
xor
add
pop
or
or
fstl
mov
movsb
adc
or
lock
pop
adc
jns
fwait
push
mov
rep
or
jno
in
add
mov
sub
pushf
inc
and
sub
and
cs
sahf
mov
inc
push
inc
pop
xchg
jns
mov
sbb
cmpsl
lea
add
jns
mov
std
sub
popf
iret
mov
pop
or
int3
loop
les
sbb
insb
cmpsl
mov
sub
pop
addb
xchg
pop
iret
js
rcrl
xchg
inc
sub
fwait
sbb
outsl
lret
iret
repnz
dec
push
pop
out
clc
mov
ficoms
inc
fstl
and
int3
jno
inc
and
mov
arpl
push
jb
aas
in
jg
pop
pop
add
and
lods
inc
out
lret
notl
jnp
lods
call
jno
sub
add
push
or
dec
ret
iret
insl
xchg
pop
dec
imul
mov
dec
ret
ficoms
sbb
aaa
or
dec
push
rolb
pop
push
shrb
jbe
es
roll
std
daa
ret
lds
and
cmpsl
cwtl
push
mov
or
pop
call
adc
ljmp
mov
mov
add
jle
cmp
push
sti
test
push
in
dec
xchg
xchg
out
jbe
test
repnz
and
and
push
int3
ret
inc
loop
sbb
add
and
lods
in
inc
pop
and
out
or
and
or
add
cmp
dec
clc
test
pusha
out
sbb
push
push
rclb
arpl
pusha
adc
xor
lcall
scas
push
pop
pusha
ficoml
inc
adc
mov
ja
lcall
outsl
mov
outsl
xchg
mov
mov
push
inc
mov
sub
movsb
sub
inc
sbb
adc
inc
adc
cmc
and
xor
jl
sarl
ret
pop
jno
lahf
insb
pop
ret
es
sub
insb
or
lahf
inc
jb
rorb
movb
dec
test
sarl
and
divb
adc
sbb
and
add
cmp
fisttps
or
push
test
lds
jnp
fldcw
adc
mov
add
sub
test
inc
mov
xor
stos
or
arpl
iret
idivl
and
push
arpl
in
jle
cmp
ret
and
xor
xor
loop
pop
loope
mov
jno
int
mov
out
sub
ja,pt
xor
jno
mov
xchg
xchg
leave
mov
dec
in
xchg
lds
sbb
jle
sahf
in
inc
sub
cld
pop
add
incb
rolb
pop
dec
sbb
mov
mov
lea
popf
notb
jp
cmovle
aaa
mov
cld
xchg
xchg
jle
mov
sbb
inc
daa
pop
fldl
adc
mov
pop
mov
cmp
cmp
aaa
in
add
jb
push
aaa
xor
lcall
xor
or
insb
adc
inc
xor
cmp
out
adc
inc
movsb
subb
int3
fdivl
insb
push
dec
fcmovu
jno
aad
test
mov
push
int
insl
ret
lea
push
push
and
pop
in
mov
shr
pusha
mov
inc
leave
push
xor
mov
dec
bound
cmp
lock
filds
push
xor
jns,pt
dec
jge
bswap
fmulp
int
xor
dec
jl
mov
jne
push
lcall
cltd
pop
mov
push
popf
out
popf
cmc
or
mov
lods
dec
push
addr16
cmp
push
sarb
enter
lret
pusha
sti
shll
fisubl
cld
push
test
inc
stos
push
cwtl
jg
cmp
aaa
or
add
es
mov
lcall
loope
mov
jg
mov
push
or
rclb
xchg
mov
sbb
mov
daa
cmp
ja
mov
dec
lahf
ja
push
push
add
push
mov
iret
fldt
pop
sub
xor
cmp
mov
pop
mov
mov
je
xor
into
pop
mov
pop
inc
pop
mov
cmp
test
add
testb
push
mov
pop
mov
sbb
add
mov
in
mov
les
mov
out
outsb
pop
sbb
stos
sub
int3
addb
testl
or
sub
mov
sbb
mov
sbb
or
pop
test
cs
jb
lock
dec
or
add
in
push
lds
insl
mov
jg
mov
mov
cmp
adc
addr16
mov
sbb
mov
adc
sbb
leave
in
aaa
dec
pop
fsubrs
dec
push
or
inc
iret
add
dec
add
pop
pop
jne
inc
rcl
mov
cmpsl
outsl
nop
bound
or
xchg
mov
leave
daa
sbb
dec
pop
jmp
pop
fsts
lret
push
jp
pop
fcom
call
int
testl
sub
int3
divb
push
adc
push
pop
and
mov
pop
or
jns
pop
out
sbb
stos
dec
fadds
enter
pop
insb
jb
outsl
mov
lea
cmp
mov
scas
add
addr16
inc
iret
lahf
out
sbb
jmp
leave
dec
push
ret
or
ja
pop
xor
sbb
add
xchg
pop
nop
and
je
xor
lret
or
xchg
cmpsl
mov
mov
pop
notb
das
out
adc
adc
or
adc
test
out
cmp
and
sbb
int
imul
out
lret
stos
and
xchg
adc
pop
xor
adc
mov
and
mov
pusha
fnstsw
pop
and
xor
ss
mov
rorl
insb
enter
mov
mov
xchg
mov
lcall
daa
pop
mov
inc
mov
outsb
or
xchg
or
sbb
stc
dec
sub
mov
push
popf
lret
and
push
leave
xor
sbb
adc
add
add
andb
lcall
cmp
loop
jp
dec
pusha
fisubs
cwtl
mov
xor
cs
and
and
and
addl
adc
xchg
mov
lock
mov
add
pop
and
and
out
nop
and
test
insl
repnz
lock
nop
fcomi
movsb
cmp
sub
ss
lret
xchg
cmp
addr16
pusha
add
hlt
add
xchg
inc
cltd
pop
leave
scas
into
in
sbb
sub
add
mov
xor
sbbl
mov
jno
ss
push
dec
push
mov
jne
pop
aas
mov
cltd
jnp
inc
std
clc
inc
fwait
mov
pop
mov
cmp
ret
xor
mov
mov
xchg
std
push
jmp
into
xchg
pop
cmp
lret
adc
jbe
add
jnp
inc
add
or
push
mov
or
dec
js
sub
mov
mov
mov
repz
jae
sbb
cmp
cmc
xor
adc
sbb
fimull
cmp
nop
sub
jno
pop
mov
pop
pop
test
push
cmp
test
or
orl
lock
stos
ret
lods
negl
mov
sbb
mov
rclb
dec
xchg
arpl
adc
arpl
out
sub
inc
push
xor
dec
cmp
xchg
lds
mov
and
xchg
insb
jno
jmp
andl
inc
lods
out
adc
and
inc
fidivs
insb
or
scas
mov
jae
and
sub
fsubs
loope
or
lea
push
sarb
jne
insl
mov
mov
popa
sub
mov
pop
es
mov
popa
iret
mov
insb
xor
pop
and
fstl
hlt
or
popf
push
daa
and
xchg
rcr
push
popa
pop
cmp
add
test
test
push
sub
repz
test
paddusb
push
xchg
lea
mov
rcr
aam
or
push
add
mov
int
mov
lea
test
jl
jmp
xchg
push
cmp
or
mov
and
mov
jmp
and
loopne
mov
int
popf
pop
outsl
push
xor
add
fwait
out
push
xor
insl
inc
dec
lock
nop
pop
rolb
xchg
mov
push
sub
dec
adcl
gs
pop
inc
leave
add
jno
adc
mov
cmp
push
mov
cmpb
pop
inc
out
arpl
hlt
add
aaa
js
popf
imulb
mov
cwtl
push
mov
cli
mov
push
cli
stos
mov
sbb
insb
push
adc
jae
and
mov
sbb
pop
cmp
ja
ja
mov
shll
add
mov
testl
pop
xor
in
out
dec
repnz
lret
iret
jne
xlat
push
cmp
inc
push
mov
iret
adc
int3
mov
add
push
jae
shll
add
inc
lcall
sub
sbb
adc
mov
dec
add
add
push
inc
mov
fwait
sub
in
cld
sbb
mov
dec
call
orb
aas
cmp
std
or
mov
mov
aaa
xchg
add
adc
adc
popf
dec
mov
int
out
sub
sub
mov
pusha
dec
jmp
mov
pop
leave
dec
pushf
push
iret
push
inc
add
pop
out
ja
adc
or
rcrl
add
mov
lea
cwtl
pop
adc
sbbl
dec
cmp
mov
push
adcl
cmp
xor
pop
push
dec
sbbl
xchg
repnz
mov
enter
arpl
fadds
adc
or
jle
dec
fadd
jns
shrl
mov
pop
xor
int3
dec
test
loop
sbb
mov
jae
pop
loope
sub
test
fwait
mov
push
sub
lea
or
in
insl
subb
lds
sbb
fdivrl
sbb
pop
push
lea
inc
adc
dec
or
pop
dec
jl
push
xchg
sbb
fsubrs
push
or
pop
adc
xchg
cmp
add
cld
aas
jnp
xor
inc
xchg
jmp
jae
push
mov
in
ds
jge
sahf
pop
and
ret
dec
or
mov
sbb
pop
xor
xor
xor
xor
dec
data16
pushf
rorb
xor
movsb
fcompl
adc
xor
mov
dec
sub
xchg
xorb
inc
dec
adc
pop
out
sti
orl
lods
roll
cmp
and
sub
sbb
add
repnz
pmaddwd
inc
cmp
inc
test
push
test
pop
pop
test
jo
pop
insl
ds
notb
add
ret
dec
and
xchg
mov
push
mov
in
and
cmp
idivb
ds
out
mov
push
stc
and
fwait
ds
adc
lahf
in
adc
sbb
cld
outsb
mov
dec
add
and
pop
in
dec
mov
dec
insl
repnz
and
mov
lods
jno
xchg
aas
xchg
xchg
jne
inc
adc
mov
mov
add
repnz
aad
lock
add
fisubl
test
add
jg
xchg
out
rolb
ret
jns
pop
mov
adc
mov
fwait
push
cwtl
mov
iret
movsb
pop
aas
cmp
jbe
mov
xor
sub
sub
or
dec
inc
sbb
xor
and
push
push
fcoms
push
mov
cmp
or
stc
inc
jae
mov
fnstsw
movsb
add
mov
sbb
dec
adc
jbe
inc
adc
add
das
xchg
fstpl
xor
mov
popf
insl
adc
arpl
sbb
push
mov
cmpsl
in
movsl
mov
insb
fcoml
sub
in
xchg
ds
test
movsl
mov
lret
daa
pop
iret
lcall
js
nop
pusha
dec
inc
jne
xor
cld
xor
xor
cmpsl
pop
sbb
insl
cltd
push
jle
dec
in
inc
bound
insb
test
out
lahf
cmp
jmp
scas
cmp
and
jb
add
dec
inc
scas
xor
stos
pop
dec
jmp
add
stos
push
sahf
pop
mov
add
lret
cmp
cmp
les
test
outsl
mov
out
xchg
inc
scas
loopne
negb
iret
dec
and
xchg
mov
mov
sub
sbb
subl
cmp
mov
pop
adc
push
sbb
mov
mov
test
subb
xchg
adc
and
mov
sbb
pop
cmp
xor
sbb
mov
sbb
test
and
pop
sbb
mov
test
adc
mov
adc
daa
pop
pop
insl
add
popf
imul
mov
imul
or
xor
adc
lea
adc
aaa
inc
xchg
imul
or
mov
add
dec
je
add
add
andl
aas
push
sbb
loopne
scas
inc
adc
repnz
or
out
sbb
pop
lods
inc
xchg
in
add
fcoml
mov
mov
adc
pop
jg
pop
lock
jae
adcb
or
cmp
push
aaa
lea
inc
add
sbb
push
add
jno
mov
pop
into
adc
pushf
inc
adc
int
push
jne
add
clc
int3
push
inc
or
or
sub
sbb
das
xchg
push
stos
xchg
inc
xlat
sbb
adc
pushf
sbb
shll
dec
mov
add
xchg
adc
rorb
adc
push
mov
jg
ror
pop
pop
jge
aam
add
xchg
push
sub
push
sbb
mov
xorl
cmp
sub
popf
dec
adc
or
dec
pop
add
scas
add
or
mov
imul
dec
dec
int
inc
addb
or
mov
or
mov
push
dec
mov
add
add
dec
mov
add
sbb
ficompl
pop
or
test
add
add
sbb
fildl
inc
add
pop
sbb
rclb
push
xchg
xlat
or
sbb
adc
rcrl
push
xchg
aad
shrb
scas
adc
xchg
aam
push
xchg
mov
push
push
loopne
mov
xchg
jmp
jb
mov
sub
adc
or
lods
test
inc
bound
xchg
sbb
cmpsb
mov
fimull
ficoms
ret
add
daa
fnsave
sbb
jnp
clc
mov
or
xchg
andb
int
push
push
out
arpl
lods
jmp
in
pop
push
sbb
fldcw
or
andb
pushf
shrb
pop
gs
jno
or
xchg
add
das
aad
cmp
add
push
shr
push
in
ljmp
adc
nop
aam
lret
jae
or
call
shrl
bnd
push
aas
add
dec
test
sbb
sbb
insb
sbb
addl
push
mov
inc
sbb
jmp
pop
mul
addr16
mov
imul
push
pop
jnp
jae
sbb
in
stos
mov
push
repnz
push
and
xorl
xchg
push
out
xchg
push
lcall
jle
fmuls
xchg
add
sub
jmp
xchg
push
ljmp
and
test
and
scas
push
and
and
sbb
icebp
rclb
cs
inc
add
sbb
pop
jmp
mov
pop
pop
call
push
inc
aas
push
pushf
outsb
imul
push
out
xchg
add
adc
pop
push
and
fdivl
mov
sbb
xchg
les
fs
mov
inc
sahf
add
inc
dec
mov
push
push
and
andl
aas
test
or
sub
cmp
sub
add
mov
dec
dec
lods
and
add
mov
dec
push
sbb
sub
push
inc
pop
adc
push
mov
sbb
insl
sub
adc
lcall
adc
mov
ret
and
lods
adc
testl
inc
loop
ucomiss
sbb
out
lods
xchg
lods
fistpl
sub
sbb
enter
mov
push
ja
subb
movb
fistl
jbe
xchg
push
push
mov
pop
mov
or
inc
das
hlt
jbe
ss
mov
and
pop
adc
popa
icebp
movsl
xor
sahf
cmpsb
sahf
in
jmp
imul
push
xchg
adc
addl
aas
ss
xchg
or
inc
sub
mov
mov
inc
add
fstp
sub
push
sbb
jbe
pop
xchg
lea
test
cmp
scas
movsl
mov
jns
shll
cli
inc
sbb
fisubl
add
add
clc
gs
adc
rorb
mov
push
insl
add
dec
bound
sbb
fsub
add
add
out
jle
dec
lea
les
push
lea
jo
lea
mov
or
gs
sub
add
fmull
shlb
mov
loop
or
insb
lods
in
sub
outsb
scas
out
and
push
movsl
in
jp
cli
aas
or
movsb
in
or
data16
out
or
pusha
mov
mov
repnz
or
jl
cld
cmp
jle
xor
js
clc
xor
lret
mov
or
je
hlt
xor
jbe
test
or
xor
lock
out
mov
jp
or
fcom
jg
add
pop
mov
push
push
mov
add
pop
out
dec
inc
imul
add
imul
sbb
and
xor
out
pushf
xchg
or
fdivl
sahf
int3
fxtract
adc
in
pop
push
ljmp
pop
adc
daa
or
das
adc
sub
aad
mov
xor
xchg
xor
add
or
sbb
pop
adcb
pop
imul
sbb
pop
jmp
outsl
adc
xchg
mov
lcall
cmovnp
push
sub
dec
push
pop
out
daa
add
pop
sbb
les
mov
rcr
cmpsb
pop
pop
add
fcoml
cmpsb
xchg
push
pop
and
sub
in
bound
outsb
sbb
or
shl
cmp
test
xor
sub
dec
push
cltd
roll
cs
imulb
out
push
test
add
dec
pop
pop
pop
int3
pop
mov
sbb
faddl
nop
or
pop
push
adc
adc
adc
xor
xlat
aaa
xor
inc
adc
scas
mov
pop
fwait
sbb
imul
adc
cmp
xor
lahf
cmp
sbb
js
outsl
lds
inc
mov
sarl
outsb
dec
sub
sub
sbbb
aaa
xchg
add
adc
xchg
sbb
nop
xchg
lea
cltd
out
stos
cmc
fldcw
fadds
adc
shrl
push
sbb
hlt
dec
jg
lea
scas
sub
push
xchg
add
dec
sbb
cwtl
rolb
rcr
iret
in
inc
adc
adc
xchg
pop
sbb
in
pushf
mov
int3
inc
lds
pop
ds
add
xchg
xchg
inc
adc
add
pop
pusha
in
sub
shll
pop
int
into
xchg
pop
lcall
lods
test
imul
jge
xchg
and
mov
fmulp
loope
jne
shr
push
mov
cltd
xchg
or
dec
das
sub
pop
sub
inc
out
and
pop
rcll
pop
lret
mov
sbb
adc
lcall
dec
xchg
add
enter
sub
adc
fildll
adc
sahf
cmp
jb
sarl
and
xchg
fldl
jne
pop
xchg
or
or
xor
and
or
aaa
rcrl
dec
aam
cmp
sub
xchg
lret
jne
adc
xor
dec
sub
sbb
xchg
add
call
loopne
nop
sub
ret
sbb
add
aaa
in
mov
inc
xchg
jg
cmp
or
out
lret
jo
mov
add
adc
jae
mov
sti
orl
cmp
adc
arpl
aas
jne
jge
cmp
dec
cmp
xchg
dec
jne
dec
push
sbb
or
mov
enter
add
cmp
stos
sbb
add
adc
sub
iret
and
adc
xchg
push
adc
push
jns
cld
cmc
push
mov
jg
insl
sbb
xchg
cld
xchg
jns
sbb
imul
fucomp
push
xchg
push
aam
rclb
lods
mov
pushf
sbb
fisubrs
xchg
sbb
xor
das
mov
pop
or
xchg
add
aad
scas
push
add
roll
push
sub
cmpsb
inc
inc
add
enter
cmpsl
bswap
test
je
ljmp
sbb
lret
sahf
fcoml
lock
movsl
xor
addr16
lea
out
cld
jp
inc
inc
rcll
lods
into
push
sub
lea
int3
leave
ljmp
mov
push
rorb
roll
ret
or
and
inc
add
pushf
lcall
and
push
mov
adc
sub
bound
sbb
mov
mov
jae
cmp
fstpl
lret
xchg
scas
adc
pop
mov
sbb
scas
xchg
dec
mov
cltd
shr
xor
xor
test
adc
ja
dec
sub
dec
daa
add
popa
push
imul
mov
addr16
les
xor
sub
dec
cwtl
dec
sub
lea
shrb
adc
es
aad
or
lahf
pop
aam
push
mov
das
test
pop
sub
push
sub
bound
lret
xchg
cmc
sbb
inc
add
and
rcr
and
ja
scas
dec
push
mov
inc
pop
push
imul
mov
adc
add
ja
ss
mov
daa
pop
xchg
mov
cs
or
push
loopne
popf
inc
cmp
cmp
sbbl
addl
or
fisttps
push
adc
pop
mov
rolb
pop
mov
pop
jbe
sbb
push
popa
fadd
cmp
imul
imul
dec
jne
inc
adc
dec
inc
mov
fs
or
loope
adc
jg
rcl
stos
sbb
or
cmp
push
fcoml
or
repz
jp
sbb
mov
int
data16
fldcw
sahf
cmc
pop
push
lret
or
sahf
or
leave
int3
xor
xchg
jnp
mov
push
and
or
mov
ffree
dec
out
loop
popf
loop
inc
inc
lahf
pop
adc
bound
jns
insl
clc
mov
leave
pop
jl
mov
xor
pop
lds
inc
sbb
int
loope
mov
and
jns
gs
sub
sbb
hlt
stc
lcall
push
cmovge
nop
sbb
jae
jge
push
cmovs
fcoml
adc
mov
sub
mov
pop
mov
aaa
sbb
sbb
and
outsb
xor
xlat
and
push
jp
lret
fwait
popf
stos
inc
and
cmp
stos
ret
add
inc
jns
pop
mov
out
pop
test
fwait
movsl
xchg
jle
push
xor
loopne
sbb
mov
adc
pop
imul
cmp
aaa
inc
ret
pop
pop
pop
imul
add
int3
sbb
or
mov
or
or
pop
vucomisd
push
mov
add
addl
sbb
adc
add
push
add
pop
xchg
xchg
and
arpl
sub
pop
fldcw
and
aaa
imul
sub
xchg
out
and
lods
push
add
or
imul
mov
jb
aaa
pop
mov
xor
mov
sets
lods
int
xchg
fmuls
mull
fimuls
pop
jne
add
addb
imul
inc
mov
jns
cmp
mov
dec
gs
dec
cmp
pop
cltd
pop
fadds
push
sbb
int
adc
add
gs
pop
insl
call
nop
sub
jge
mov
mov
xchg
sbb
add
cld
movsl
lret
xor
shrl
dec
xchg
pop
inc
inc
mov
or
fsubrs
stc
pop
xor
nop
fwait
pop
xor
dec
outsl
test
fstpl
lock
pop
bound
pop
cld
ds
sbb
fwait
add
sub
pop
sub
insl
or
pop
cltd
xor
jg
pop
add
pop
adc
dec
inc
les
xchg
adc
dec
pop
push
imul
addr16
inc
sbb
pop
subl
ret
add
cmp
mov
pop
imul
test
push
mov
out
adc
stos
mov
sbb
pop
adc
shlb
stc
cmp
or
pop
imul
push
out
pop
pop
cmp
lret
sbb
mov
sbb
aaa
imul
cmp
mov
sbb
aas
imul
cs
mov
adc
out
pop
adc
adc
add
add
inc
sbb
ds
test
dec
sbb
enter
mov
add
imul
xor
sub
jno
add
cmp
adc
filds
ljmp
and
ja
push
fucomi
inc
xchg
and
ds
xlat
dec
imul
test
daa
fwait
imul
addr16
mov
imul
rcrl
dec
cmp
addr16
sub
mov
sbb
and
or
inc
jne
pop
imul
push
sbb
int3
movl
sub
sbb
sub
add
ja
lods
push
or
inc
cmp
in
mov
xor
aas
fs
das
xor
pop
or
in
lret
push
or
mov
pop
and
or
je
mov
in
subb
mov
sub
stos
or
dec
sub
jmp
or
insb
notb
xor
js
mov
or
gs
xchg
cmc
or
and
adc
pop
or
mov
jb
adc
iret
cli
ds
negb
jne
stos
outsb
or
repnz
ss
or
push
insl
mov
pop
adc
pop
fildl
mov
mov
pop
inc
jb
pop
out
test
xor
jp
push
mov
out
sbb
or
lret
icebp
andb
sbb
jecxz
or
adc
mov
jl
add
inc
inc
xchg
in
int3
inc
lret
sub
fmul
insb
out
xchg
mov
jbe
std
stc
add
push
mov
into
out
jno
cmp
int3
lds
rol
add
lret
sbb
adc
inc
pusha
movb
or
loopne,pn
mov
sbb
cmp
dec
or
pop
xor
ja
test
adc
andb
cs
push
fs
mov
mov
sbb
mov
and
fildl
and
push
or
popa
fsts
mov
mov
insb
andb
adc
lret
jp
rcrl
fimull
push
and
lret
sub
xchg
cmp
orb
push
in
mov
imul
stos
aad
pop
fldl
and
inc
addr16
sbb
jo
fisttpl
ret
popa
pmaddwd
mov
and
ret
arpl
repz
mov
push
sub
mov
lods
xor
out
mov
call
aad
push
lret
xchg
movsb
mov
or
mov
mov
test
daa
xchg
fisubrs
add
sbb
test
pushf
xlat
mov
jo
in
in
cs
dec
cmp
mov
mov
sub
adc
mov
jle
add
inc
sub
popf
add
cmp
pop
daa
adc
pop
lret
inc
add
shrb
xchg
in
insl
inc
test
jae
cmp
out
jae
addl
cmpsb
fwait
test
test
inc
test
stos
jne
sahf
xchg
mov
jbe
stos
inc
test
sbb
mov
out
mov
pushf
mov
push
aad
adc
push
imul
xchg
pop
mov
sub
add
subl
xchg
fcoml
adc
lahf
addb
aam
adc
dec
and
pop
aad
pop
lods
mov
jb
add
fildl
push
cmpsl
les
cmpsb
mov
cmpsb
inc
or
andb
add
mov
ret
addl
neg
ja
sbb
ret
enter
push
add
mov
in
lea
add
aad
adc
push
cmc
sub
arpl
jns
xor
jne
hlt
icebp
lret
xor
pop
push
enter
mov
or
fldt
dec
xchg
sub
inc
mov
lods
loop
test
in
lea
xlat
jmp
and
xor
inc
dec
lock
mov
mov
fwait
sub
aam
cs
jno
cmp
fisttpl
lret
or
lret
add
add
push
xor
xor
xor
xor
sbb
push
xor
xor
xor
xor
cmpsl
xor
push
xor
mov
pop
add
fwait
dec
fcmovne
add
inc
xchg
adc
pop
rclb
mov
test
addl
je
mov
adc
jns
add
sbb
add
xchg
mov
jns
xor
inc
xchg
cmp
cmp
add
xorb
pop
lods
push
cld
insb
int3
jp
lret
in
pop
sbb
jmp
cld
int3
fsubl
cmp
loopne
mov
jl
ds
repz
mov
cld
mov
dec
std
sbbb
push
in
mov
or
push
or
or
or
lret
stos
fwait
xchg
and
imul
leave
fildl
test
mov
call
jle
lret
call
rcr
rcrb
cli
jnp
aaa
mov
jbe
sbb
aaa
mov
or
rcl
scas
dec
stc
test
add
adc
faddl
int3
vrcpps
das
cld
scas
int3
test
pusha
in
jl
clc
cld
lret
inc
xchg
jmp
and
sub
es
rol
js
ret
fisubl
das
or
mov
xchg
jns
jae
jne
iret
xor
fiaddl
or
xor
shrb
inc
mov
xor
xor
ss
cli
xor
rolb
ljmp
stc
jne
rorl
jns
jae
jne
dec
jne
dec
push
pop
ja
jns
jae
xor
sub
jnp
sub
ja
jns
jae
jne
dec
jae
jno
pop
add
aaa
fwait
push
iret
dec
mov
out
pushf
and
fdivl
add
inc
sbb
pop
test
sub
in
jg
xchg
xor
clc
nop
je
icebp
mov
inc
inc
mov
int3
xchg
fcompl
cwtl
cld
insl
cld
scas
cld
and
xor
lea
pushf
loope
std
sub
add
lret
add
shrl
xor
dec
outsb
inc
inc
ret
mov
dec
sahf
fwait
int3
push
inc
int3
sbb
pop
in
pop
cld
aad
outsl
cld
adc
cld
push
cld
cld
sub
imul
movsb
cld
loope
cmp
cmp
aaa
jmp
icebp
mov
jo
pop
inc
dec
lret
dec
xor
jno
out
fwait
lret
pop
xor
insl
xor
cmp
jae
or
or
pop
rorb
outsl
xor
xor
ss
jb
pop
nop
jbe
mov
ffreep
xchg
push
sbb
or
lret
loop
push
pop
fiaddl
rolb
inc
lret
fnstenv
cwtl
xor
xor
xor
sub
mov
pop
pop
inc
inc
fwait
sbb
inc
add
inc
mov
movl
mov
ja
ficompl
cs
pop
pop
dec
fwait
rcr
add
push
adcb
mov
out
cld
push
int3
lods
fsubr
in
repnz
cmp
mov
mov
mov
jbe
mov
dec
fcmovnb
popf
outsl
adc
outsl
popf
sub
sub
xchg
mov
mov
sbb
stos
xchg
xchg
nop
xchg
nop
push
nop
and
sbbb
aad
push
call
popa
call
hlt
loop
rolb
rclb
cli
out
repnz
mov
mov
pop
cltd
int
push
xorl
and
add
lahf
movq
xor
xchg
loop
test
fldl2e
outsl
sub
jbe
fnstsw
adc
push
rclb
adc
cmp
jle
lret
cmp
js
sbb
pop
add
cmp
loop
orl
ljmp
addr16
jmp
roll
mov
lret
xor
test
outsl
stos
xchg
push
stos
or
sar
jle
mov
mov
popf
xlat
flds
fcmovnb
push
and
jae
sub
inc
add
and
inc
mov
fstl
movsl
call
and
or
int
xchg
inc
push
pop
xchg
add
add
mov
lods
or
or
or
or
cmp
addb
cmp
pusha
jge
sbb
dec
sbb
sub
nop
cmp
sarb
xor
push
bndstx
int
js
dec
lret
push
test
ret
addb
fidivrl
push
int
aas
call
fidivl
ret
ficompl
adc
xchg
push
mov
sub
jmp
mov
mov
ja
jns
jae
jne
dec
sahf
jno
or
or
or
sbb
mov
jno
xchg
jo
add
mov
shll
cmp
aas
cmp
shr
jecxz
jge
mov
sbb
jmp
shll
lods
mov
sbb
nop
cmp
pushf
nop
lods
jnp
jle
repz
fcompl
sub
sbb
pop
pop
nop
pavgw
lcall
sbb
imul
fmul
subb
popf
inc
add
lock
xchg
in
pop
sbbl
xor
test
xchg
xchg
sub
or
push
shrb
add
or
push
push
dec
ficoml
sti
fcompl
jbe
dec
pop
jmp
fwait
lret
daa
xchg
jne
dec
lods
jno
or
or
lret
push
pop
ja
sbb
sub
add
cmp
mov
pushf
cmpsl
lods
in
mov
fcomi
lea
fldenv
adc
enter
in
xchg
xor
dec
shrb
mov
roll
lret
mov
sbb
push
xchg
xor
ss
cmp
pop
add
mov
pushf
loope
dec
mov
push
push
cmovne
xchg
jmp
sbb
pop
push
adc
mov
fwait
adc
add
inc
mov
xchg
pop
inc
push
mov
shlb
mov
es
push
xchg
mov
sub
xor
fwait
inc
fstpt
cli
mov
and
mov
mov
xor
or
fwait
mov
aas
push
sub
mov
inc
outsl
test
cmp
cmp
movsb
ja,pt
jge
pop
ja
jns
jae
jne
dec
adc
or
sbb
cmp
dec
cmpsb
fnstenv
sub
adc
mov
seto
xor
xor
xor
pop
push
xchg
fwait
sbb
push
add
inc
sbb
xor
jns
hlt
insl
lcall
pop
jae
jne
dec
adc
mov
xchg
jae
jne
dec
push
jno
or
or
or
stc
push
xchg
iret
xor
xor
pop
test
lods
sub
aaa
adc
add
xor
lret
int
add
and
pop
pop
cmp
ret
orb
orb
rolb
test
lea
popf
mov
enter
clc
push
scas
call
sbb
adc
addr16
cmp
xchg
mov
push
iret
mov
cmp
mov
pop
or
lods
addl
rcll
push
pop
push
ja
stos
xchg
fcompl
xor
adc
sbb
or
inc
jg
and
roll
fdivr
test
loope
std
aam
rcll
sbb
in
nop
loop
cs
lods
mov
sbb
inc
pusha
shlb
lahf
cmp
add
les
and
push
sub
sub
sbb
ss
lret
push
and
mov
and
push
xorl
aaa
inc
xchg
fstl
sbb
sbb
sub
and
and
jbe
imul
cld
sbb
and
xor
pop
pop
pop
and
and
call
pop
ficompl
adc
and
daa
ss
aas
xor
xor
xor
xor
jo
inc
xchg
cmp
pop
sub
cmpsl
test
pop
es
or
add
stc
daa
cmc
sub
sub
and
int3
movsl
and
es
cmp
and
cmp
cld
cmp
ja,pt
mov
push
adc
xor
or
push
fisttpl
add
inc
add
push
ret
mov
push
lret
lret
adc
push
es
and
daa
inc
sub
sub
cs
xor
xor
and
xor
sub
cmp
call
ds
and
mov
adc
push
xor
lret
xchg
fwait
pop
adc
addb
or
add
call
push
test
sub
icebp
out
mov
sbb
nop
push
pop
sub
fs
idivb
push
inc
dec
xchg
dec
fwait
add
push
push
sub
inc
mov
fadd
or
leave
push
gs
iret
mov
add
inc
std
imul
xchg
int
fsubs
cmp
add
popf
adc
inc
inc
movb
push
add
idivl
and
add
mov
and
loope
popa
in
ljmp
push
add
pop
dec
mov
aaa
mov
lret
inc
es
sub
iret
jmp
pushl
lret
xor
popa
xor
mov
push
sbb
cld
mov
inc
andb
out
cli
or
push
sub
adc
jbe
add
js
fstps
inc
aam
test
cmp
fldl
mov
push
mov
fcmovb
test
movsb
cli
cwtl
in
xchg
push
lcall
xchg
popa
in
stos
push
push
sbb
xchg
or
outsb
out
mov
adc
in
aad
popf
jmp
inc
xor
jbe
das
sub
outsl
add
fwait
xchg
inc
rcll
xchg
gs
mov
pop
inc
mov
push
roll
or
adc
lock
adc
rcrb
mov
push
fldl
push
sbb
sub
call
pop
push
mov
add
xchg
das
mov
inc
dec
sub
cltd
ret
mov
jp
in
jp
pop
es
dec
push
sub
sbb
test
mov
or
test
icebp
push
fstl
add
repnz
subl
add
out
sbb
mov
cld
les
in
or
sbb
jecxz
mov
lock
pop
mov
push
push
lahf
or
push
mov
popf
adc
jnp
hlt
pop
push
test
dec
ret
stos
add
jl
imul
leave
xchg
sbb
xchg
sub
or
lds
mov
sahf
pop
sbb
sbb
lret
mov
roll
movsl
rcrb
add
and
inc
ja
pop
or
mov
xchg
cmp
push
inc
dec
add
fisttpl
roll
sub
adc
inc
movsl
xor
mov
and
sbb
mov
or
sbb
andl
mov
enter
mov
sbb
xchg
fidivrl
ja
xchg
out
data16
enter
cs
aaa
fdivl
dec
xchg
xchg
add
mov
lea
in
lods
sar
pop
xchg
aas
inc
sub
popf
les
pop
ja
push
jno
jns
sbbl
push
adc
pop
jl
inc
sbb
xchg
icebp
scas
inc
sub
pushf
cmp
imul
xor
xchg
cmp
xchg
fs
out
test
outsb
pop
addl
movl
or
jmp
aad
mov
fisttpll
adc
imul
cmp
jecxz
xchg
std
in
or
push
inc
mov
sbbb
fs
or
arpl
aam
mov
xchg
imul
sbb
rcll
xchg
xchg
imul
das
xor
test
xchg
push
popa
xor
add
movsb
imul
pop
jmp
xchg
ret
adc
jg
sahf
push
push
sti
or
out
fiaddl
add
sbb
popf
fistpll
inc
adc
xchg
stos
mov
inc
push
xchg
out
dec
nop
add
in
push
xchg
sub
in
pop
sub
sbb
mov
push
aaa
mov
push
subb
in
cltd
mov
adc
sub
xor
out
cmp
mov
fcoml
xchg
psubusw
inc
push
pop
or
adc
and
adc
mov
inc
js
movsb
ss
xchg
push
xchg
inc
xchg
inc
lds
cmp
adc
mov
xchg
mov
sbb
sbb
popf
mov
mov
xchg
int3
sbb
xchg
mov
popf
jp
lahf
testl
scas
rcll
nop
jp
push
and
movsl
dec
ljmp
sub
repnz
dec
mov
push
add
jno
subl
push
add
cwtl
scas
fdivp
push
bound
xchg
ret
rorl
sbb
xchg
mov
and
addl
sbb
aas
stos
bound
sub
cltd
push
pop
mov
xlat
insb
push
test
pop
sbb
inc
popf
xchg
push
mov
push
mov
mov
push
nop
mov
xlat
pop
clc
das
sahf
mov
ret
fistps
stc
fbld
in
pop
fcmovu
inc
dec
roll
pusha
lret
add
sbb
cltd
add
pushf
push
cmpsl
jne
mov
inc
bound
sbb
rcrl
push
fwait
mov
out
add
sbb
mov
xchg
xchg
pop
inc
jmp
test
mov
fcmovnb
test
mov
mov
dec
add
pop
add
pop
loopne
scas
lods
into
test
cmp
and
xchg
ljmp
fistl
fstpl
mov
jg
xchg
fwait
xchg
and
ss
test
es
setnp
sub
inc
add
cmpl
loopne
push
dec
mov
in
repnz
loopne
hlt
jp
jge
test
pushf
dec
repz
dec
inc
mov
dec
xchg
pop
int3
je,pn
pop
add
jmp
sbb
sbb
dec
add
dec
mov
addb
lea
adc
push
pop
mov
mov
outsl
fisubrs
fisttpll
les
and
pop
iret
fldcw
hlt
mov
lea
mov
and
test
aad
xchg
xchg
stos
iret
xlat
dec
pop
subl
ja
lock
cltd
cmp
loopne
test
es
loop
addr16
sub
pop
call
cwtl
push
sbb
pop
or
inc
and
mov
push
dec
dec
mov
add
lcall
push
clc
xlat
pop
add
or
test
push
add
mov
adc
mov
xchg
sub
hlt
sbb
push
insl
inc
lds
mov
or
sub
sbb
scas
inc
add
sbb
test
pop
lds
add
addr16
and
xor
xchg
push
cltd
dec
xchg
or
into
cltd
add
ret
sti
add
addl
sub
xchg
lock
aas
jg
scas
stc
push
jo
and
cmp
sbb
mov
mov
inc
jnp
sbb
xchg
mov
inc
add
fs
ret
fnstcw
sarb
pop
fwait
or
mov
sbb
pop
pop
nop
pop
adc
xchg
daa
popf
dec
mov
adc
pop
sub
stos
in
cmp
inc
int3
bound
mov
popa
jmp
lock
data16
stc
lcall
lock
mov
lahf
das
push
stos
xchg
cmp
pop
pop
add
scas
imul
xchg
mov
sub
nop
sarl
addr16
dec
cltd
push
pop
xlat
inc
pop
xchg
mov
adc
sahf
add
aad
inc
dec
xchg
ret
push
cld
sti
pop
rcrb
mov
sub
dec
outsb
xchg
pop
insl
push
pop
add
incl
out
out
hlt
or
lret
pusha
ljmp
mov
or
cmpsb
adc
out
adc
sbb
xchg
leave
lds
pop
mov
cmp
in
pop
jp
push
lret
mov
imul
pop
inc
sbb
jle
jmp
ja
adc
mov
js
shlb
sbb
adc
or
ficompl
aad
push
shll
xlat
into
faddl
and
inc
pop
push
adcb
pop
pop
lret
divl
fwait
inc
add
sbb
pop
stos
cmp
les
call
mov
repz
lea
inc
pop
dec
add
or
pop
idivb
in
pop
or
pop
cltd
pop
es
mov
xchg
or
ja
jno
mov
mov
or
aaa
sbb
add
dec
xor
cmp
push
mov
sub
xchg
int
push
movb
and
pop
mov
out
sub
ss
push
add
orb
pop
cltd
ret
xor
or
xor
and
sbb
or
inc
adc
inc
cmc
jbe
push
inc
xor
push
aad
xor
or
outsb
mov
sahf
scas
mov
sbb
outsl
sti
push
push
mov
daa
jae
sbb
stos
jg
push
jp
cmp
js
bound
xchg
dec
fidivl
loop
jae
shll
nop
mov
inc
jg
andl
nop
adc
roll
push
jp
xor
loop
dec
add
mov
and
push
incb
mov
sub
mov
push
push
out
in
jns
test
movb
mov
bound
das
pushf
inc
jl
xor
aad
fistl
push
push
fwait
test
sbb
xchg
xchg
add
outsl
pushw
aas
cs
cs
sbb
ljmp
test
daa
pop
ret
inc
xlat
les
xlat
xchg
sbb
adc
inc
pop
rorl
inc
dec
roll
icebp
xchg
das
add
inc
stos
repnz
mov
outsb
lock
fcompl
jmp
imul
pop
mov
jg
xchg
xchg
xchg
aad
repz
add
adc
adc
in
in
aam
inc
adc
dec
mov
shll
imul
ret
addl
adc
mov
push
pop
sub
mov
push
adc
pop
add
mov
loopne
inc
lcall
shr
sbb
adc
pushf
ret
xor
lahf
jge
rol
lods
fwait
test
push
inc
inc
sbb
mov
inc
pop
mov
repz
jbe
test
mov
mov
fildl
dec
push
scas
insb
rcrl
mov
sbb
mov
sbb
xchg
mov
lret
adcb
sbb
ss
shl
mov
sbb
gs
bound
lods
scas
push
push
jmp
outsb
push
fists
pop
inc
mov
mov
test
dec
xor
mov
push
das
hlt
insl
add
orl
add
push
pop
cmc
roll
fwait
aaa
ljmp
shl
pop
call
inc
jle
ret
or
mov
or
les
add
loopne
imul
or
sbb
adc
jmp
shrl
jb
lea
cmp
mov
and
dec
fucomi
push
insl
pop
push
or
inc
scas
sbb
imul
or
push
dec
loope
mov
push
inc
or
lahf
push
lock
lahf
push
push
jmp
movb
pop
sbb
mov
mov
testl
out
jae
inc
scas
push
loopne,pt
into
mov
icebp
ret
pop
or
fdiv
mov
dec
xchg
stc
test
xchg
xchg
lahf
shrl
mov
fidivrl
adcl
fnstsw
aam
add
xchg
mov
scas
enter
es
mov
cltd
xchg
jmp
xchg
jecxz
push
jo
sbb
fsubrl
int
mov
mov
mov
push
ljmp
inc
xchg
out
adc
pushf
fstl
test
inc
sub
lret
push
add
stos
push
pop
mov
incl
push
lock
data16
fsubrl
add
loopnew
xlat
dec
mov
mov
inc
lahf
js
xchg
sub
push
push
lret
push
xchg
fistps
inc
sbb
scas
jbe
adc
mov
xchg
push
cmc
loope
dec
mov
dec
icebp
in
pop
jmp
lret
mov
xchg
inc
test
adc
data16
ja
inc
mov
aas
idivb
pop
xchg
cli
sbb
lock
sti
stos
push
cmp
loopne
sti
lret
dec
add
or
scas
adc
mov
xchg
rcrl
stos
icebp
sbb
lret
imul
sbb
xchg
and
adc
add
sbb
mov
mov
add
iret
push
mov
push
mov
in
out
jg
mov
ljmp
xchg
mov
push
call
xchg
inc
dec
es
jns
dec
jp
or
ja
cld
fistpll
rcl
push
or
inc
arpl
out
mov
call
jns
repz
jmp
add
jbe
push
sbb
test
sahf
jnp
xchg
jmp
mov
push
cmp
out
fiaddl
sti
cltd
dec
cmp
lret
stos
lea
pop
adcb
fcmovu
dec
sahf
adc
lods
in
stc
popf
inc
stc
jg
cmp
push
call
add
push
pusha
test
and
test
nop
inc
add
aaa
outsl
adc
fbstp
daa
xchg
sahf
movsl
iret
je
jno
pop
mov
pop
xchg
push
cmp
pop
xor
test
sbb
xor
or
fdivl
int
pop
sub
loop
insl
pop
fcoms
add
nop
shr
push
dec
or
lods
into
stc
push
mov
jmp
sub
loopne
dec
mov
mov
sub
or
scas
xor
push
shll
fisubs
lret
mov
movsl
gs
imul
or
jp
into
xor
and
jo
pop
cmpsb
fwait
inc
xchg
das
test
jmp
lahf
aam
push
imull
stos
push
scas
inc
mov
and
je
add
lods
stc
sub
add
cltd
xchg
jmp
dec
push
sbb
shll
inc
add
mov
jp
push
xor
out
push
orl
jecxz
inc
pop
cld
lret
rol
pop
jae
fwait
lahf
xchg
lret
mov
xchg
stos
mov
jp
pop
iret
movl
call
xchg
test
jmp
add
lds
mov
mov
xor
push
cli
addl
lret
dec
aas
cmp
imul
outsl
xchg
jno
movsl
jo
xchg
adc
mov
adc
lock
adc
hlt
and
pop
cwtl
aad
cwtl
adc
out
xor
mov
aam
outsb
cwtl
mov
sbb
xchg
sahf
lods
je
sar
ss
sbb
out
sub
cmpsl
mov
and
or
sbb
jl
lcall
add
cmp
les
repnz
push
mov
rol
xlat
inc
cli
scas
push
out
outsb
jle
sbbb
sub
out
mov
mov
mov
xlat
icebp
ret
sbb
ss
aad
pop
cwtl
push
loopne
das
xor
icebp
shr
ja
das
sbb
push
pop
or
das
mov
loopne
xchg
xchg
rcll
test
cli
dec
psubusw
lods
xlat
cs
fldcw
lret
pop
sbb
ds
xchg
and
lret
push
jnp
test
das
pop
dec
movsb
inc
lret
xor
je
xchg
pop
popf
xlat
mov
outsl
sbb
or
fsubr
push
es
mov
nop
push
cmp
xlat
testl
jne
or
ret
mov
pushf
or
mov
stc
outsb
mov
scas
sahf
fld
popf
loopne
fwait
pop
push
das
cmp
ljmp
popf
push
shl
lcall
mov
test
xchg
sub
shrl
stos
ljmp
xchg
adc
lock
ffree
xlat
fs
out
jns
clc
inc
push
mov
adc
or
rcrb
mov
fcompl
rolb
aam
int
fstps
out
push
xor
mov
push
fnsave
push
dec
popf
push
push
fcompp
xchg
mov
cltd
add
xchg
roll
inc
aad
pop
mov
sub
pop
push
push
mov
stos
pop
or
sahf
pop
mov
pushf
or
adc
adc
push
jge
xchg
push
rcll
shrb
sub
sub
mov
sub
lret
sbb
mov
xchg
stos
adc
sub
jne
xchg
pop
adc
icebp
in
sub
push
scas
ret
rcll
xor
int3
ret
test
xorl
adc
add
xchg
sahf
pop
inc
shr
ljmp
push
xchg
aam
rclb
push
outsl
dec
adc
pushf
sbb
lods
sbb
mov
popf
or
inc
adc
fiadds
aaa
xchg
pop
fildll
xchg
xchg
andb
ds
adc
xlat
xchg
sbb
cmp
pop
call
enter
aas
out
add
add
push
adc
stos
das
sub
pop
ret
rcll
faddl
scas
aad
add
sub
pop
xlat
aam
xchg
mov
sbb
fadd
xchg
stos
fldl2t
fbstp
imul
fstl
pop
sub
cld
mov
dec
mov
shrb
adc
xchg
pop
sub
rorl
cmp
icebp
or
push
push
xchg
or
push
push
out
xchg
lcall
xlat
xchg
add
dec
push
adcl
scas
fisttpll
xchg
popf
add
xchg
sub
xchg
dec
cmp
rcr
xor
iret
test
xchg
stos
add
insl
fists
sbb
fcmovb
das
ds
sub
pop
adc
sub
xchg
pop
dec
xchg
add
sahf
out
mov
loop
adc
int
stos
push
add
push
call
xchg
and
mov
cmp
sahf
sub
outsl
pop
fdivl
adc
or
pop
aad
rcl
sbb
inc
out
push
sbb
testb
cmp
and
lock
jecxz
mov
push
push
sub
dec
movsl
add
inc
fsts
sbb
out
ficoms
ds
pop
sahf
sbb
add
adc
sbb
fisubrs
movsb
fcmovne
out
xchg
std
push
fstps
aas
sub
fwait
sub
cmp
enter
xchg
add
push
push
cmc
xor
push
or
xlat
xchg
pop
les
fists
xchg
orl
adc
pop
sbb
faddl
ljmp
in
ljmp
into
xor
sbb
adc
subl
xchg
push
pop
stos
lret
scas
out
popf
and
imul
adc
pop
pop
mov
in
mov
pop
push
adc
pop
sbb
addr16
pop
lods
push
ljmp
sub
xor
xchg
xor
xchg
pop
push
sbb
mov
pop
push
out
fists
push
aas
ret
sub
sub
stc
nop
adc
imul
fists
pop
lcall
push
out
push
and
lcall
outsl
int3
xchg
popf
push
push
lahf
xchg
loopne
cmp
adc
rcll
push
std
fildll
mov
gs
stos
xchg
sti
add
sbb
cwtl
sbb
inc
popf
sub
inc
push
lods
pop
xchg
fstpl
sub
lcall
pop
sub
rcrl
mov
aam
mov
sbb
clc
and
mov
daa
or
push
std
mov
push
xchg
rol
pop
out
ljmp
adc
outsl
ret
popf
stos
fnstsw
aad
cltd
push
and
ret
pop
add
add
xchg
or
out
inc
xchg
popf
fwait
push
inc
daa
xor
and
rcll
sbb
xchg
sub
jle
js
mov
xchg
pop
lds
ficomps
mov
xor
int3
adc
rclb
call
arpl
push
mov
xlat
popf
add
pushf
pop
sbb
adc
and
adc
sub
xlat
fwait
testb
pushf
sbb
mov
push
push
cltd
test
pop
fnstcw
xchg
add
stos
inc
push
adc
test
in
push
xchg
adc
iret
loop
ffree
pushf
idiv
lock
fsts
outsl
stos
push
mov
inc
sub
fisttpl
aad
mov
mov
xchg
sbb
jnp
xchg
or
adc
imul
adc
scas
sbb
mov
sti
mov
jecxz
pop
rcll
xlat
push
sbb
adc
fistps
push
aaa
add
and
sub
pop
xchg
xchg
ljmp
aad
and
pushf
sub
fst
add
adcl
mov
jmp
pop
mov
xchg
aad
xchg
xor
push
cmp
adcl
pop
or
les
adc
dec
adc
sub
or
insl
in
push
sahf
push
sub
repnz
stos
mov
adc
pop
stos
pop
push
repnz
rclb
push
sbb
dec
inc
flds
imul
mov
push
fimuls
rcrl
add
mov
inc
sub
pushf
cltd
or
subl
inc
pop
sub
pop
push
push
pop
out
ljmp
pop
cltd
cmp
push
adc
leave
mov
fldlg2
mov
stos
xchg
lds
pop
adc
in
mov
cmc
xchg
xor
mov
pop
es
insl
pop
cltd
fcoml
sub
out
popf
fsts
ror
and
lock
inc
subl
xchg
dec
inc
sub
push
icebp
fs
pop
xchg
xchg
sub
or
pop
xchg
fst
not
sub
push
add
adc
xchg
inc
push
imul
and
add
lret
pushf
adc
mov
rcrb
fstpl
loop
loop
jno
xchg
push
xor
shll
pop
and
subl
or
xchg
jge
push
out
stos
stos
bound
psrld
xchg
add
movsl
and
xchg
jns
dec
pop
pop
pop
insl
pop
push
rcr
sahf
mov
rcrl
addl
cltd
loop
inc
pop
inc
push
jle
aas
sub
ds
cmp
pop
das
sbb
add
push
sbb
sub
rcr
cmp
aam
xchg
test
pop
xchg
sbb
push
aad
test
sbb
dec
adc
test
push
xlat
inc
and
push
mov
pop
sbb
dec
jmp
outsl
add
adcb
pop
test
sub
mov
xchg
xchg
sub
rorb
pop
movsb
push
jmp
shrl
nop
pushf
xchg
scas
sbb
adc
sub
cltd
sbb
xchg
mov
fnstcw
push
push
inc
imul
pop
shlb
fldcw
nop
fsubrl
or
jns
les
xlat
mov
in
or
pop
int3
fidivrs
sbb
push
push
xchg
and
imul
sub
push
mov
adc
mov
int3
pushf
push
mov
xchg
stos
aam
cmp
pop
pop
sbb
push
add
fsubl
mov
sub
sub
das
adc
push
outsl
and
xlat
and
movsl
inc
or
rolb
sbb
sub
push
lcall
in
mov
push
pushf
ljmp
popa
and
aad
mov
dec
push
rcll
inc
pop
sbb
pop
push
adc
bound
fwait
pushf
out
push
mov
add
push
add
push
sbb
push
inc
or
xchg
or
xchg
ljmp
push
das
xchg
pop
and
dec
shl
mov
xlat
sub
mov
push
xchg
shrl
jp
mov
mov
nop
fwait
or
fnstsw
pop
xchg
and
bound
fs
scas
test
dec
popf
sahf
fistps
ja
add
cmp
sbb
ljmp
andb
and
dec
adc
push
push
sub
ds
inc
pop
stos
cmp
sbb
add
out
inc
orl
push
adc
push
lahf
inc
push
add
and
xor
dec
adc
stos
rol
sbb
lret
and
push
mov
xlat
sub
rorl
mov
mov
add
add
leave
mov
cmp
lret
mov
stos
mov
les
push
test
jns
aaa
inc
mov
popf
push
insl
sbb
cmp
xchg
xchg
stc
push
fsubr
enter
adc
xchg
push
add
lods
mov
fnsave
mov
and
lret
stos
push
sbbl
fidivrs
movsb
jl
pop
jp
aam
jg
scas
adcb
shrl
mulb
push
sbb
cltd
lock
fs
push
test
push
cltd
push
push
ljmp
fst
das
outsl
mov
mov
sahf
xchg
push
int3
in
mov
push
bound
push
xor
dec
test
xchg
pop
cmp
sub
mov
adc
or
xchg
sbb
mov
ret
or
pop
mov
pop
xchg
lods
inc
push
das
loop
cmp
ror
outsl
pop
cmp
push
xchg
and
add
inc
add
or
rorl
and
jns
pushf
das
inc
xor
lock
push
pop
and
ja
cltd
lret
xchg
xchg
in
and
inc
rol
xchg
adc
jp
scas
mov
push
stos
mov
js
dec
sbb
mov
pop
sub
xchg
xlat
pop
pop
sbb
es
adcl
fsubr
dec
jg
aam
inc
ja
push
add
cltd
xchg
fstl
int3
hlt
inc
into
xchg
mov
dec
test
aam
mov
pop
adc
cmp
adc
lds
pop
in
sahf
xchg
rcrb
in
adc
adc
loopne
pop
ljmp
dec
int3
das
scas
sbb
psubw
cltd
and
lods
push
lahf
fstl
lock
sahf
sub
cmp
mov
jge
xchg
adc
ds
test
jge
fstl
add
std
sub
dec
add
push
stos
nopl
push
xchg
popf
cmp
das
cmp
push
popf
jg
bound
xchg
fcoml
adc
and
pop
rorl
fbld
sub
pop
fdivr
xchg
sahf
repz
ds
loop
scas
sub
cltd
aad
pushf
sbb
fstl
orb
or
sbb
pop
push
pop
xchg
jecxz
push
or
jb
inc
js
sbb
arpl
pop
inc
cs
ret
pop
push
xor
les
sbb
test
push
mov
imul
pop
xchg
sub
les
ror
stos
push
xor
stos
add
cmp
xchg
cltd
sub
sub
dec
xchg
das
adc
sbb
stos
jo
or
ficoms
adc
push
push
enter
push
pop
sub
pop
sub
das
ljmp
pushf
fbstp
add
fisubs
xchg
push
imul
out
push
mov
ret
sahf
imul
cld
push
push
pop
push
adc
sub
fnstenv
sbb
adc
nop
leave
stos
sub
xchg
mov
jb
xchg
inc
lock
pop
ficoms
adc
rolb
imul
pop
fwait
int
stos
filds
aas
xchg
sbb
sub
sub
and
fsts
sbbb
dec
xchg
inc
cld
adc
ret
subl
pop
fcompl
inc
add
enter
lret
mov
aas
imul
xchg
ffree
cli
push
out
add
add
pop
and
push
or
inc
pushf
cmp
or
jno
popa
push
push
xchg
xor
and
rcl
or
xchg
xlat
adc
stc
lahf
fsts
stos
insl
mov
mov
rcr
mov
sub
mov
xchg
adc
ds
push
cmp
pop
adc
push
inc
pop
push
popf
sbb
ljmp
xchg
xchg
das
jne
inc
pop
xor
adcb
adc
xchg
push
cmp
rcl
and
ljmp
jne
sbb
adc
pop
pop
xlat
push
outsl
bound
ds
push
faddl
xor
mov
add
lcall
pushf
push
pop
outsb
push
popf
in
adc
push
push
xchg
pop
push
insl
dec
filds
push
fwait
rcll
rolb
inc
lahf
inc
addr16
adcl
xlat
push
or
adc
nop
dec
fildll
mov
shrl
sub
or
ja
pop
push
xor
aad
xor
push
dec
rcll
cmp
mov
fstpl
ljmp
cmp
rol
es
add
pop
outsl
sbb
sbb
int3
xchg
pop
stos
nop
loope
out
push
sbb
fists
adc
cmp
fildll
stos
scas
dec
pop
iret
push
cmpsb
ss
xchg
xchg
xchg
push
call
mov
outsl
in
cmp
inc
stos
xchg
add
mov
out
scas
inc
push
push
aam
test
push
sub
lea
sub
pop
adc
xchg
mov
fstps
movsb
mov
and
cltd
add
sub
mov
cmc
jbe
iret
sub
sarl
xlat
xchg
das
imul
cld
out
add
aam
adc
push
aas
xchg
push
inc
xlat
inc
sub
int
imul
push
push
xchg
aad
sbb
xchg
sbb
out
xor
pop
sub
add
mov
fistps
inc
pop
xor
and
fimuls
aad
call
push
pushf
sub
sub
xlat
push
cmp
push
sbb
xchg
leave
aam
sub
divb
push
mov
pop
lea
push
faddl
xchg
out
das
lods
setbe
mov
pop
mov
es
std
push
lret
xchg
xchg
push
push
push
dec
push
test
xchg
outsl
orb
insb
jmp
cltd
aad
add
das
fsubrl
outsb
daa
and
push
mov
orl
stos
inc
xchg
xor
pop
mov
shl
xor
push
xchg
xchg
push
sbb
mov
sbb
daa
fisubrs
adc
gs
push
mov
and
out
in
out
rcrb
xchg
das
and
pop
pop
pop
addr16
sub
adc
sub
jb
stos
push
sub
mov
pop
sbb
mov
add
push
sub
cmp
mov
stos
mov
or
scas
push
mov
aam
ret
jecxz
mov
addl
pushf
fisubrs
jb
add
push
les
push
xchg
or
bound
rclb
dec
xchg
popf
shll
lret
and
ret
pop
adc
lahf
and
add
popf
pop
xchg
jb
hlt
divl
pop
sahf
xchg
lods
push
sub
pop
adc
sbb
rcll
fiadds
test
xchg
leave
pop
scas
xchg
cwtl
fld
sub
pop
sbb
cmpsb
movsb
int
pushf
xlat
pop
add
call
adc
push
adc
outsl
lret
xchg
pop
sub
sbb
adc
sbb
push
sbb
mov
filds
lock
adc
sub
mov
xchg
push
aam
pop
sub
sbb
fwait
adc
adc
popa
dec
or
or
sub
leave
mov
and
sarl
and
cltd
push
sbb
pop
inc
dec
inc
push
pop
lods
and
adc
xchg
pop
pushf
push
sahf
mov
mov
sbb
pop
rclb
outsl
cmp
mov
sbb
cltd
pop
rcrb
inc
arpl
sub
sub
lods
cwtl
push
xor
add
xchg
rol
xchg
ficomps
adc
popf
pop
rcll
mov
rcll
push
inc
cmp
xor
out
adc
flds
inc
rcll
sbb
das
or
pop
push
rolb
dec
add
pop
sbb
cmp
push
push
movsl
gs
fistl
push
stos
push
cmp
mov
cltd
or
cmp
adc
mov
xor
pop
ljmp
xor
push
fldcw
mov
jmp
or
sbb
ss
fsub
rolb
ljmp
sub
in
cmpsb
les
pop
adc
int
pop
xchg
sbb
daa
pop
ljmp
cmp
test
jb
lods
dec
push
push
sbb
pop
rcll
addr16
daa
ss
adc
and
bound
ds
fcoml
sub
push
xchg
sbb
add
sbb
pop
jnp
rcrl
inc
dec
adc
inc
inc
ror
cli
add
sti
cltd
stos
dec
das
adcb
and
out
ret
xchg
sub
and
sahf
xchg
pop
sbb
xchg
out
add
xchg
and
mov
je
sub
cltd
fldl
sub
lret
stos
xchg
das
adc
sbb
notl
push
lods
push
push
mov
pop
xchg
int3
push
mov
sbb
mov
aam
outsl
fsubrp
in
sbb
sti
shlb
cwtl
in
xchg
ss
mov
int3
inc
adc
pop
sbb
push
or
test
popa
lcall
inc
rcll
ljmp
inc
sbb
cmp
push
insl
imul
adc
xchg
pop
mov
inc
sub
cmp
cmp
ds
cltd
mov
adc
mov
outsb
sbb
push
gs
cltd
adc
xchg
cmp
pop
and
adc
add
adc
leave
cmc
add
ljmp
mov
pop
movsl
pop
stos
xchg
mov
jg
mov
scas
push
int3
xor
movsl
xchg
fcompl
jge
pop
push
cmp
mov
xchg
adc
imul
and
jmp
das
adc
lahf
sub
out
loop
in
roll
jl
adc
adc
push
test
mov
and
inc
fstps
es
xchg
adc
gs
mov
or
sub
imul
cmp
pop
cli
in
das
sbb
pushf
pop
sbb
rep
push
push
pop
pop
pop
sub
popf
stos
xchg
dec
xchg
movsb
pushf
enter
aam
or
sub
movl
sbb
sub
inc
push
xchg
inc
cmp
inc
mov
xchg
stos
repnz
xchg
mov
pusha
in
int
fistpll
and
push
pop
and
and
push
mov
popf
cmc
jge
rcrl
outsl
aas
in
add
xor
test
mov
int3
sub
xlat
pushl
imul
mov
loopne
pop
jae
filds
loop
pop
das
rcll
adc
aad
inc
adc
xor
add
das
pop
shll
je
cmp
fildll
xchg
into
sbb
push
leave
scas
mov
cmpl
aad
mov
iret
sbb
and
aam
or
push
xchg
push
cs
add
lock
aas
sub
lods
rcll
push
inc
cmp
and
into
pop
fstl
mov
stos
push
pop
push
xchg
insl
rcrl
les
push
jl
sub
stc
dec
push
xchg
push
notl
inc
mov
inc
fsts
sub
adcb
pop
lcall
movsb
int
sub
cmp
dec
pushf
sbb
enter
rcrl
out
cmp
xchg
stos
pop
xchg
aas
xlat
pop
inc
sbb
xor
mov
mov
sub
aam
scas
adc
push
clc
cwtl
arpl
subb
sbb
jmp
jge
fsubr
sub
lea
pushf
sbb
pop
scas
iret
aad
jg
dec
aam
int3
push
mov
xchg
add
jb
sub
pop
jge
imul
push
xchg
sbb
pop
fidivs
ror
testb
adc
push
scas
es
sbb
and
ret
and
mov
rcr
push
std
test
pop
imul
adcl
or
sahf
inc
pop
xchg
dec
jbe
adc
loopne
xor
xchg
xchg
xlat
xchg
xor
out
mov
push
inc
push
sub
imul
ficompl
mov
or
sub
stos
mov
jecxz
stos
dec
jne
mov
inc
pop
sahf
insl
pusha
xchg
divl
and
pop
adc
push
push
add
ljmp
call
add
add
fbstp
adc
scas
xchg
and
pop
push
xchg
add
out
fistpll
les
xchg
bound
pushf
pop
add
add
mov
paddw
xlat
mov
test
mov
pop
sub
dec
mov
push
outsb
jo
repnz
sbb
push
xchg
dec
mov
push
cld
mov
pop
pop
subb
sbb
sbb
push
dec
test
inc
push
pop
mov
das
mov
and
xlat
sbb
mov
xchg
push
push
movsb
pop
loope
movsl
xchg
fstl
push
jge
push
adc
push
add
or
sarl
sub
and
or
cltd
mov
push
xor
mov
adc
es
pop
les
lahf
pop
mov
sub
stos
push
push
repnz
movsl
push
jb
xor
and
push
imul
inc
xchg
fiadds
aas
aaa
adc
pushf
xchg
imulb
jae
adc
jno
dec
adc
push
mov
push
mov
or
xchg
rolb
popf
xor
scas
xchg
out
push
adc
arpl
push
cmp
out
pop
dec
mull
rcrb
les
lcall
scas
outsl
jno
adc
test
adc
push
adc
pop
push
pop
iret
mov
movsb
fcmovne
das
push
int3
inc
stos
movsb
push
sub
adc
gs
xchg
out
push
fdivrl
pushf
inc
jp
mov
xchg
xchg
jb
add
add
stos
inc
inc
adcl
das
imul
stos
stos
inc
cmp
std
test
jae
insl
pop
sub
mov
stos
fdivrl
or
outsl
pushf
and
lcall
push
leave
ljmp
lods
psrad
xchg
shlb
sub
xor
addb
xor
les
inc
adc
stos
insl
jo
aad
inc
mov
fsts
adc
imul
xchg
aas
mov
mov
outsb
stos
push
lods
push
fidivl
mov
push
mov
inc
mov
loop
pop
fcompl
fists
adc
xchg
negl
popf
adc
pusha
add
xchg
and
repnz
xchg
loop
sbb
inc
sub
adc
repnz
ljmp
outsl
push
int3
out
stos
pop
sahf
mov
cmpsb
mov
leave
fstl
cltd
mov
loope
daa
sbb
and
sub
push
cmp
and
push
int
push
xchg
sub
dec
pop
add
inc
nop
pop
outsl
int3
xchg
mov
popf
cltd
push
mov
sub
fnsave
and
sbb
stc
js
xor
pop
movntps
scas
test
sub
rclb
and
adc
cltd
xchg
ficomps
add
aam
sub
and
and
andb
cs
cmpsb
push
mov
inc
sbb
xchg
aam
cltd
push
mov
cmp
popf
imul
lret
adc
clc
xchg
sub
aam
push
xchg
movsl
xchg
push
xor
fists
push
fisubrs
scas
mov
push
fsubrl
add
das
or
sbb
sbb
loope
push
inc
int3
sbb
push
jmp
in
xchg
pop
into
sbb
push
das
or
addl
ljmp
popf
add
push
rorl
push
imul
ljmp
aad
popf
sbb
data16
jns
push
mov
fcmovnu
sub
pop
xchg
mov
int3
movsb
push
or
cltd
dec
pop
and
inc
sub
out
leave
js
and
into
push
mov
inc
lcall
lods
mov
push
cmp
mov
xchg
dec
arpl
push
cmpsl
ret
sub
rcl
sub
inc
out
sahf
inc
pop
mov
daa
mov
mov
push
shlb
aad
adc
test
push
cli
dec
inc
subl
xor
lcall
pop
pop
lea
push
nop
and
and
std
sub
xchg
bts
sbb
int
das
xchg
adc
mov
aad
notb
xchg
xchg
mov
fidivrs
aad
adc
out
mov
out
ljmp
inc
push
ja
xor
sbb
rcrl
movsl
rorb
pop
aad
in
push
cltd
clc
xlat
pop
pop
mov
and
fildll
xchg
jb
test
adc
pop
ret
test
sbb
pushf
pop
xchg
cltd
jno
adc
stos
scas
hlt
pusha
cmp
pop
ror
xchg
mov
xchg
mov
pushf
cmc
je
jne
shrb
push
xor
pop
push
xlat
add
and
sbb
sbb
fwait
sbb
mov
mov
xchg
sub
pop
movl
or
ljmp
scas
push
sub
lret
push
into
das
xlat
add
jmp
inc
inc
in
pop
lods
imul
es
adc
push
fstl
aam
mov
iret
pop
mov
cltd
repnz
push
xchg
cmp
sbb
shrl
xchg
push
pop
inc
fistl
jge
negb
push
dec
cmp
jecxz
inc
inc
push
xchg
adc
xchg
ficoms
adc
sbb
rcll
aad
xchg
fnstsw
or
into
pop
pop
imul
mov
add
pop
lods
add
sub
sbb
adc
and
repnz
insb
cmp
and
rol
xchg
xchg
xlat
add
in
outsl
shll
pop
mov
mov
or
outsl
pop
sbb
dec
leave
pop
xchg
enter
mov
sbb
pop
jp
adc
ror
pop
xchg
clc
les
sub
xchg
push
dec
mov
into
inc
push
das
inc
jle
pop
and
lea
rcrl
rcr
xlat
push
std
push
fsts
pop
stos
fwait
adc
lret
or
pop
clc
ficomps
adc
shlb
cmpsl
orb
rorl
sarl
bound
push
loopne
adc
add
das
or
push
rcll
pop
jecxz
ds
inc
cmp
xchg
sahf
mov
pusha
lods
fldcw
sub
mov
mov
test
sbb
mov
imul
or
sub
inc
shrb
sti
xchg
loop
outsb
outsl
mov
test
jb
in
in
insl
in
rcll
inc
rol
sub
movb
les
das
inc
jle
adc
popf
cmp
and
aas
pop
sub
xchg
push
sbb
push
jmp
sub
mov
bound
mov
rcll
insl
daa
sbb
pop
cmp
mov
inc
rcr
fwait
loop
jge
xchg
sub
push
out
gs
push
push
inc
cltd
push
sar
sub
pop
aam
int
adc
inc
push
addr16
push
xor
adc
sbb
inc
xchg
xchg
push
adc
lret
sub
int3
out
mov
scas
pop
ljmp
lods
fdivr
shl
xchg
and
inc
test
dec
ret
adc
xor
xchg
pop
iret
sbb
push
xlat
inc
mov
sbb
cmp
pop
inc
xchg
aad
adcl
rolb
filds
in
adc
aam
xchg
push
std
stos
xchg
adc
cltd
dec
adc
xchg
push
and
xchg
sub
adc
fwait
inc
xor
in
and
daa
push
inc
lret
roll
lods
pusha
lods
das
push
and
mov
jge
stos
cmp
xchg
cmp
scas
outsl
and
sub
ss
inc
out
shll
push
icebp
cmp
sub
fidivl
sbb
fs
pop
xchg
outsl
test
cltd
stos
inc
rorl
push
stos
push
out
mov
push
adc
add
xchg
sub
outsl
adc
js
cmp
leave
pop
in
pop
popf
lock
push
jge
aam
push
jne
pusha
sub
pop
inc
and
or
push
xchg
data16
add
push
adc
dec
push
or
xchg
test
rcl
pushf
inc
jmp
adc
xor
in
lcall
out
pop
les
cwtl
jae
ljmp
sbb
mov
adc
fldcw
push
push
push
filds
xchg
clts
aas
and
insl
adc
inc
sub
xchg
adc
mov
mov
push
xchg
inc
mov
xlat
fstps
inc
mov
or
aam
sbb
add
push
push
insl
sub
outsl
mulb
xchg
cmp
mov
xchg
push
or
aad
lods
add
push
insl
pop
push
add
inc
pop
inc
add
out
adc
pushf
stos
sub
das
ss
stos
or
adc
add
movb
shrl
sub
xchg
scas
xchg
sbb
leave
pop
fadd
adc
addb
push
pushf
sahf
daa
adc
or
xchg
add
in
outsb
sahf
pop
hlt
not
cmp
xchg
outsl
push
sub
sub
in
ss
inc
xchg
enter
jge
adc
lret
gs
mov
xchg
nop
faddl
int
rol
aad
lock
sahf
inc
and
adcb
sbb
xlat
mov
adc
popf
mov
fcoml
push
fiadds
pop
cmp
lcall
inc
mov
mov
add
das
push
xchg
xchg
fnstsw
adc
std
loope
out
dec
fldenv
jge
push
add
xchg
icebp
loop
pop
push
push
insl
pop
push
scas
push
lret
push
imul
dec
cmp
pop
push
jnp
push
mov
adc
adc
sbb
xor
cmp
and
loope
mov
inc
sub
mov
adc
add
xchg
xchg
inc
mov
sbb
add
dec
push
sbbl
adc
sbb
inc
push
ljmp
mov
adc
jl
or
push
test
xchg
jp
xchg
dec
les
xor
out
sbb
push
xchg
mov
sbb
das
cmp
add
fldt
ret
mov
or
roll
push
xchg
add
int
inc
push
push
and
adc
pop
popf
xchg
ja
pop
adc
adc
cmp
pop
push
sub
xchg
push
xchg
xor
xchg
ljmp
pop
xchg
rcr
mov
or
xchg
inc
mov
mov
mov
sub
mov
movsl
faddl
xor
lret
add
test
pop
pop
xlat
mov
sub
outsl
push
rcll
inc
jmp
add
xchg
mov
fadd
xchg
out
insl
rclb
push
inc
ja
xor
sbb
adc
sbb
push
nop
inc
int3
outsl
push
mov
cltd
xchg
fldenv
cltd
push
lret
cmpsl
adc
adc
mov
loopne
inc
jge
xchg
rcll
push
push
sbb
adc
dec
out
xchg
sub
xchg
addb
add
mov
bound
addr16
pushf
cltd
pop
jo
jb
ljmp
mov
scas
mov
fldl
pop
aaa
sub
das
addr16
flds
lods
mov
rclb
dec
xchg
int3
aad
shrb
xchg
sbb
add
rcrl
out
pop
push
jmp
mov
mov
xchg
lret
fwait
pop
out
fwait
push
push
stos
push
mov
sub
mov
int
pop
sbb
xchg
scas
cld
mov
flds
pop
mov
aad
hlt
add
xor
int
adc
xchg
mov
mov
xlat
push
repnz
imul
ret
push
inc
stos
xor
xor
xor
inc
sub
add
inc
xchg
push
shrb
mov
cmp
je
aad
test
pop
inc
xchg
adc
and
insl
jp
sbb
repz
mov
in
les
inc
les
imul
ss
cmp
scas
xor
push
adc
cmp
xchg
fsubr
aas
dec
add
rcrb
and
lods
dec
imul
mov
push
xchg
in
mov
and
mov
push
xchg
stos
sbb
jo
mov
push
pop
push
ficoms
push
xchg
adc
mov
repnz
daa
pop
enter
pop
das
add
xchg
mov
leave
mov
jns
pop
xchg
das
or
push
out
pop
sub
les
add
jle
jb
and
fldl
pop
cltd
mov
xchg
fiadds
sarl
mov
pop
adc
adc
xor
push
add
popf
int
sbb
ljmp
jmp
cmp
pop
out
dec
xchg
cmp
stos
insl
push
hlt
dec
ljmp
xchg
xchg
xchg
xchg
cmc
or
sbbl
xchg
adc
push
push
and
lret
aad
int
inc
pop
cmpsl
stos
pop
arpl
xchg
jmp
add
cmp
stos
nop
pop
inc
fsts
aas
adc
movsl
in
sub
pop
pop
add
sahf
negb
int3
push
sbb
in
cmpsl
fidivrs
stos
and
fnstcw
cmp
pop
sub
inc
jge
xor
pop
pushf
xchg
inc
rclb
push
sti
push
cmp
nop
fidivs
popf
es
sbb
xchg
std
ja
loopne
mov
jl
and
pop
stos
inc
repz
sbb
inc
imul
xchg
jmp
imul
popf
lret
xchg
lcall
xchg
pop
cs
clc
in
movaps
or
sub
stos
sbb
int
pop
adc
push
decb
cmpsl
sub
push
sahf
adc
rcrl
test
sbb
imul
sbb
add
xchg
test
adc
inc
sub
fistps
sub
xchg
pushf
cmp
add
xchg
les
jl
sahf
xchg
push
inc
cmp
int3
enter
jp
mov
ficoms
xchg
test
inc
adc
mov
pop
inc
in
cmpsl
add
out
in
inc
cmp
add
push
inc
inc
xchg
xchg
subl
adc
xchg
push
repnz
enter
lods
push
mov
mov
fildll
cs
decb
sbb
push
pop
dec
push
enter
dec
cmp
leave
enter
cltd
xchg
pushf
pop
fs
and
xchg
leave
xchg
scas
popf
or
ljmp
push
jmp
push
sbbl
ljmp
aad
inc
xchg
sub
mov
pop
leave
mov
fidivrs
lcall
inc
push
outsb
daa
ljmp
dec
insl
mov
pop
dec
ficoml
xor
imul
sub
jge
ljmp
lea
bound
xchg
repnz
std
ret
cltd
push
pop
out
xor
int3
xchg
sbb
pop
sbb
loopne
mov
test
add
mov
outsl
adc
push
jg
xlat
sahf
les
ja
shrb
shrl
stc
sub
and
les
pop
cmp
sahf
and
jb
sub
inc
push
pop
xchg
push
scas
insl
repnz
push
les
pop
xchg
and
dec
les
imul
ljmp
pop
push
sbb
fldt
adc
xor
push
popf
xor
jp
sbbb
sub
cmc
test
pushf
ficoms
or
cmpl
sbb
ficomps
or
xchg
outsl
ljmp
aam
lret
push
das
shrb
pop
mov
xor
xchg
mov
push
push
xor
lret
test
int3
imul
pop
mov
lcall
xchg
sub
imul
add
sbb
daa
jae
ret
xchg
movsl
xchg
cmc
jg
sub
adc
lea
scas
xor
pop
xchg
mov
enter
push
push
stos
pushf
mov
push
xchg
daa
ret
shll
xchg
fscale
push
stos
movhps
push
xchg
mov
cmp
jo
adc
sbb
sbb
inc
sub
push
sbb
cli
das
add
dec
push
inc
sub
rorl
adc
insl
mov
pop
adc
repnz
pop
fnstcw
xchg
inc
push
cmpl
aas
xchg
hlt
out
push
sbbl
xlat
sub
inc
cmp
push
push
xchg
test
testb
inc
push
lret
aas
sahf
das
sbb
or
xchg
imul
movsb
sbb
push
push
xor
adc
xor
xchg
leave
pop
enter
or
dec
test
push
xlat
xchg
sub
mov
ss
or
inc
adc
int3
add
mov
dec
outsl
jle
mov
mov
jns
test
fstpl
scas
add
push
or
xlat
mov
xchg
outsl
and
add
pop
pop
rcrl
hlt
icebp
and
pop
push
adc
in
pop
push
out
push
adc
dec
lock
push
rclb
lods
mov
or
shrl
and
and
sbb
push
test
sbb
inc
sbb
pop
sbb
mov
fstl
xchg
pop
ficoms
sub
sbb
sbb
shrb
cmp
pop
adc
adc
sbb
or
push
sub
fstpl
out
outsl
aad
in
push
cltd
xchg
mov
fcoml
movb
outsl
outsb
cmpsl
adc
mov
fmull
jle
sbb
sbb
fs
sub
or
popf
inc
sbb
push
fists
ss
dec
push
push
in
push
mov
scas
sbb
xchg
sub
xlat
fistpl
les
sub
add
push
adc
cmp
pop
std
lea
in
leave
sbb
xchg
jno
and
adc
xlat
rol
faddp
jns
sbb
mov
pushf
pop
push
pop
and
imul
push
xchg
xor
out
push
fwait
cmc
inc
scas
stos
sbb
push
push
xchg
xchg
cmp
add
or
xor
and
scas
pop
jb
loop
xchg
outsb
add
rcrb
adc
push
mov
out
pop
add
pop
mov
sub
adc
adc
or
push
sbb
pop
sahf
jl
xchg
sub
xlat
pop
adc
test
push
sbb
fcoml
fists
push
stos
mov
mov
sub
add
pop
lock
xchg
pop
and
pusha
mov
adc
mov
push
adc
xchg
sbb
sbb
mov
or
fistps
push
xchg
xlat
es
adc
inc
sub
push
or
pop
mov
cmpsb
cs
xchg
aam
movsb
ror
fdivl
enter
ret
xchg
or
das
sbb
inc
mov
xchg
lods
fistl
fwait
inc
push
stos
adc
add
dec
sub
adc
xor
outsl
shr
sub
stos
push
inc
inc
cli
sbb
sbb
and
fnstsw
dec
push
sub
xchg
stos
push
clc
jmp
push
movsb
xchg
ror
xchg
xlat
sahf
in
push
and
xor
pop
out
stos
mov
lods
push
xor
sub
sub
les
bound
movsbl
cmp
add
push
rclb
or
pop
sbb
rol
inc
sbb
aad
push
lret
push
dec
add
sahf
loop
stos
scas
push
test
les
mov
jae
inc
inc
test
lods
cmpsb
movsb
push
push
mov
inc
jbe
mov
xor
sbb
adc
mov
mov
lret
fcompl
fstl
pop
rcl
sub
inc
pusha
addr16
sub
cltd
inc
movsl
cmp
out
insl
pusha
pop
sbb
inc
cmc
push
push
add
shrb
loope
outsl
sahf
xchg
insl
loope
adc
push
add
and
cltd
jle
mov
mov
imul
cltd
xchg
jge
xchg
inc
push
cmp
push
or
jo
jnp
ficoms
xchg
repnz
sub
mov
push
dec
out
pop
xchg
adc
inc
aas
shl
xor
scas
sbb
cld
jne
jno
and
ret
sub
xlat
dec
rcll
lea
pop
xchg
aad
cmc
fbstp
adc
push
and
int
xchg
pop
sub
inc
push
adc
push
xchg
and
pop
push
sbb
enter
shlb
int3
les
pushf
xchg
or
mov
mov
mov
fwait
leave
lret
mov
in
xchg
ficoms
ss
aad
pop
subl
push
push
shrb
jo
pmaxub
dec
inc
stos
aad
add
arpl
pop
push
dec
xchg
imul
push
dec
ss
push
jo
jne
jmp
xchg
inc
int3
inc
out
into
sub
adc
vmovhpd
bound
pushf
cmp
rcll
sarb
cltd
inc
sub
or
mov
jb
xchg
push
cmpsl
inc
call
sbb
pop
je
adc
push
pop
sahf
dec
sbb
pop
stos
outsl
mov
inc
aam
xchg
push
xchg
ja
xchg
sbb
fwait
mov
push
sbb
or
push
stos
mov
and
adc
push
outsl
push
pop
inc
xchg
xchg
sub
cmp
ss
lret
xchg
ljmp
rcll
mov
push
jle
push
rolb
ror
inc
lret
push
out
adc
jl
sub
shlb
inc
fsubr
ffreep
imul
outsl
push
das
and
pop
rcl
ljmp
fcomip
cmp
dec
or
pop
cld
mov
xchg
or
sub
jl
lea
mov
das
dec
ljmp
inc
rcrl
subl
push
cmp
in
and
daa
cmp
xchg
sbb
add
push
xchg
sub
pop
inc
sbb
popf
inc
scas
sbb
push
aad
mov
push
xchg
and
mov
ljmp
stos
push
adc
sub
sbb
imull
sbb
add
mov
inc
sub
loop
xchg
add
xor
insb
lcall
pop
inc
popf
push
push
ljmp
call
xchg
sbbb
adc
add
stos
ljmp
ljmp
and
sub
mov
add
pop
adc
bound
lret
inc
sub
xchg
orl
fisubrs
testl
pop
sub
adc
jae
xchg
ja
add
xchg
xchg
adc
ljmp
sbb
push
fmull
rolb
sub
push
adc
push
add
sahf
sub
sbb
or
cs
int3
push
push
ljmp
inc
sbb
sub
fnstsw
mov
add
pop
sbb
popf
sbb
cltd
mov
aad
movsl
fstp
mov
xchg
mov
roll
push
and
sub
xchg
adc
rolb
lcall
jge
xchg
jle
push
and
push
mov
jb
inc
add
roll
rcrl
push
adc
push
push
sbb
mov
xchg
push
sbb
add
out
xchg
inc
pop
pop
inc
xchg
aad
push
stos
mov
xchg
rcll
loop
jno
sbb
jo
jo
add
cwtl
push
dec
or
movsl
adc
sbb
sub
aad
inc
pop
push
jns
jb
pop
sub
fdivs
fiaddl
das
or
xchg
sbb
push
aad
push
add
sarl
xchg
adc
sub
sub
pop
stos
lods
test
imul
mov
cmp
push
bound
loop
mov
xchg
ja
stos
pop
xlat
push
sub
mov
xchg
sbb
pop
adc
outsb
ret
pop
les
pop
aaa
arpl
test
outsl
fwait
pushf
sbb
movl
out
leave
xchg
ret
adc
rclb
push
shr
adc
and
push
push
adc
enter
mov
mov
xchg
loop
sahf
fistpl
fstpl
das
pop
mov
js
push
int
push
outsl
adc
sbb
xchg
add
sub
mov
xchg
push
sbb
mov
adc
sub
jbe
mov
popf
cltd
adcl
xchg
push
aam
mov
ficomps
data16
adc
mov
dec
sahf
into
loop
push
fsub
int
push
icebp
push
outsl
int3
lods
stos
pop
sahf
test
jnp
iret
sub
aam
popf
pushf
in
mov
pop
pop
xchg
push
stc
out
jae
mov
sub
mov
xor
rcl
pop
dec
push
or
inc
das
mov
mov
push
leave
stos
fsts
inc
adc
push
and
rorl
sbb
xchg
xchg
sub
jne
xchg
sbb
xor
lret
xchg
inc
push
mull
ss
add
and
int
pop
aas
jecxz
sbb
aam
enter
enter
jo
rclb
add
insl
je
xchg
scas
leave
mov
push
xchg
les
ds
xchg
fcompl
mov
add
das
push
ret
xor
adc
inc
inc
xchg
pop
lea
and
data16
sub
add
adc
push
loop
adc
push
orl
dec
pop
inc
sub
xchg
add
cmc
cmp
xchg
sub
aaa
loop
xchg
sub
push
movsl
fs
pop
sub
jno
sub
cmp
xchg
push
push
in
arpl
mov
adc
cltd
or
sti
pop
out
xchg
std
stc
popf
jp
inc
sbb
add
movsb
sbb
pop
mov
pop
aad
sbb
push
insl
loop
add
fisubrl
sbb
faddl
fstp
imul
arpl
jle
sub
cmp
out
in
repnz
notb
fistpll
pop
das
flds
inc
popf
test
xchg
rcll
fwait
nop
push
sub
and
sbb
les
hlt
aaa
pop
adc
sbb
mov
add
xchg
outsl
fstps
jmp
xchg
push
out
lret
add
adc
and
push
dec
das
push
loop
xchg
adcl
xchg
popa
push
cmpsb
les
rcrl
push
dec
nop
aam
pushf
push
cmp
adc
cmp
sub
adc
pushf
call
mov
fistpl
out
sbb
cmp
pop
inc
arpl
cmpsb
push
push
mov
movl
cmp
sbb
bound
bound
jbe
push
mov
sub
out
sbb
push
sub
lret
adc
mov
cmp
ljmp
rorl
push
mov
push
pop
mov
pop
adcb
and
adc
fldl
int
aam
xor
fcmove
sub
push
sbb
ljmp
adc
push
mov
fcoml
sbb
lret
adc
ret
sub
sbb
sub
pop
ljmp
pop
push
popf
or
faddp
jb
fistl
xchg
pop
xor
push
mov
pop
push
adc
sub
push
push
push
add
xchg
or
inc
mov
fwait
mov
pushf
xchg
pop
inc
scas
in
bound
in
xlat
fbstp
push
rcrl
jne
ffree
push
lret
xchg
push
sbb
mov
pop
xchg
inc
sub
mov
fmulp
adc
xlat
mov
clc
or
push
inc
ficomps
ja
inc
push
push
push
insl
xchg
popf
rcrb
xchg
xchg
les
cmp
lahf
outsl
dec
mov
aaa
lret
sbb
fucom
add
sbb
shll
add
pop
int
add
testb
inc
fadd
nop
xchg
xchg
int3
push
pop
cwtl
lcall
xchg
and
lea
pop
aad
sbb
xchg
icebp
test
jl
sbb
push
cmp
push
mov
dec
rclb
sahf
dec
aam
push
xchg
and
and
sti
inc
adc
loop
push
mov
hlt
add
imul
sbb
cmpsb
sbb
sub
dec
fisubrl
sub
and
pop
xchg
aam
adc
xlat
xor
sbbl
out
lea
xor
add
outsl
add
push
mov
pop
pop
das
scas
insl
es
add
clc
or
pop
xor
xlat
fdivl
cmpl
insl
leave
movb
in
cmpsb
das
fdivrp
and
sbb
enter
inc
sub
pop
add
pop
xchg
pop
push
cmp
push
imul
or
inc
enter
cltd
xlat
lea
pop
pop
xchg
fnsave
and
fistps
adc
mov
inc
lahf
cltd
aad
outsl
addb
scas
sbb
dec
xor
add
inc
push
ror
sbb
loopne
mov
mov
inc
pop
faddp
aam
cmp
push
xor
add
inc
int3
lahf
mov
rcrl
add
pop
bound
insl
jno
xchg
adc
lcall
faddl
sahf
pushf
roll
and
aaa
int
cmp
fstps
xchg
push
sbb
and
cltd
imul
adc
out
repnz
stos
dec
test
inc
aam
cmp
cmc
adc
push
ljmp
pop
xchg
or
adc
pop
push
push
in
push
pop
fsubrl
mov
shrd
cmc
pop
ss
int
add
testb
xchg
jb
enter
push
movsb
and
adc
xlat
dec
jmp
das
rcr
outsl
push
fildll
aam
xchg
adc
dec
rorl
inc
sub
adc
out
push
mov
popf
stos
iret
push
int3
test
es
push
adc
push
pop
out
loop
mov
xchg
sbb
leave
stos
xorb
push
das
push
dec
adc
add
pushf
roll
xchg
push
jge
sub
inc
jl
roll
mov
inc
sbb
dec
rolb
push
rcrb
test
test
xor
popf
inc
xchg
fcoml
add
sbb
sbb
and
pop
bound
cmp
mov
mov
out
sahf
push
add
stos
inc
push
mov
outsl
adc
repz
xor
pop
sub
rolb
scas
inc
or
push
gs
add
rcll
push
cmc
xchg
cmpsb
xchg
stos
adc
inc
inc
popf
xchg
cwtl
jb
icebp
add
mov
outsl
xor
mov
sbb
imul
das
xchg
pop
and
imul
ljmp
fstl
push
sub
sub
xchg
adc
scas
fisubrl
sbb
pop
fsubrl
push
scas
in
push
sbb
stos
jp
pushf
xor
mov
sbbl
in
shrb
lret
adc
or
pop
or
xor
stos
rcrl
sub
xchg
or
inc
cmc
iret
and
repz
xlat
or
sub
fldl
xchg
push
mov
cmp
sbb
inc
adc
jg
iret
out
fists
xchg
xor
sbb
and
out
pop
jge
imul
adc
or
xchg
pop
inc
mov
push
push
push
cmp
sbb
inc
fdivrs
aaa
sbb
xchg
les
push
xchg
mov
push
xchg
xchg
jge
pop
adc
ret
sub
lods
sbb
pop
cmp
add
rcll
push
pop
mov
or
dec
add
pop
jge
jmp
rclb
scas
ljmp
xchg
sub
add
push
int3
adc
fdivrl
fidivs
mov
pop
xlat
mov
xchg
sbb
add
xchg
pop
pop
pop
xchg
xorl
add
adc
cmp
pop
fdiv
sbb
inc
xchg
popa
scas
rolb
or
xor
aad
fimull
push
fsts
ret
push
ljmp
add
xchg
stos
and
pop
xchg
test
inc
les
das
enter
lods
pop
xchg
push
inc
stos
xor
lea
sub
inc
and
sbb
pop
stos
adc
adc
xchg
fstpl
inc
xchg
xor
jge
push
les
ljmp
or
adc
push
push
xchg
mov
adc
pop
inc
fstl
dec
inc
adc
les
mov
xchg
rcrl
jbe
stos
aam
push
cltd
and
rcrl
and
jo
xchg
sbb
add
int3
sbb
mov
test
push
add
push
add
xor
sahf
aam
pushf
clc
test
out
dec
rcrl
dec
cmp
aaa
andb
enter
stos
xchg
mov
xchg
mov
pop
idivb
ret
push
inc
add
sub
sbbl
ljmp
inc
hlt
adc
lea
xor
cltd
leave
push
fmull
into
pop
mov
cmc
sbb
dec
popf
fcoml
cmp
mov
add
xchg
out
push
inc
push
cmpsb
cmp
jo
rcl
fstpl
ljmp
pop
xchg
fwait
stos
mov
sahf
add
xchg
adc
popf
sbb
sbb
xchg
test
sub
std
mov
cld
icebp
aam
xor
adc
shrl
mov
push
subb
push
push
xchg
add
aad
xor
iret
xor
sbb
call
in
mov
popf
xor
and
movntps
sub
pusha
sbb
add
mov
adc
outsl
fistps
pop
lods
or
imul
cmp
iret
xor
int
out
rcll
mov
inc
push
mov
adc
adc
adc
rcll
pop
mov
inc
ljmp
xchg
aam
xor
dec
mov
xor
sub
lret
imul
rorl
push
sub
inc
xchg
fcomip
into
push
insl
call
jo
jb
push
mov
imul
xchg
xor
pushf
add
scas
pop
add
inc
shll
test
pop
xchg
cli
xchg
mov
jmp
sub
lret
ret
push
push
adc
inc
sub
fnsave
ret
stos
les
jge
push
cmpl
jns
sbb
xchg
sbb
xchg
xor
adc
cld
bound
ficoml
sbb
pop
xchg
sbb
sub
sahf
test
inc
adc
or
adc
pop
in
cld
sub
stos
xchg
out
cmp
pop
and
shll
adc
aad
lret
add
movsl
ss
stos
inc
pop
inc
adc
out
pop
imul
add
xor
adc
xor
xchg
sbb
shrb
stos
xor
rcr
sub
inc
push
movsb
mull
cltd
or
inc
fstpt
jmp
xchg
loop
xlat
imul
sub
repnz
hlt
std
in
neg
sahf
inc
pop
shrl
and
movsl
outsb
adc
push
pop
pop
adcl
sbb
test
les
pop
inc
ljmp
sub
sbb
sbb
adc
stos
pop
aad
xor
fwait
fldl
jge
sahf
lock
mov
push
fcoml
aas
inc
das
cltd
out
xor
rorl
aad
or
mov
jge
pop
push
xor
sub
popf
insb
cmp
adc
xchg
fs
push
xchg
imul
test
inc
xchg
std
outsb
inc
je
stos
xchg
push
push
add
add
scas
mov
pop
daa
dec
cli
sbb
outsl
subl
add
leave
xchg
adc
add
pop
cld
sbb
and
and
xchg
imul
pcmpgtw
sahf
sub
and
adc
int3
xchg
pop
scas
sub
sti
rclb
xchg
pop
xchg
ret
adc
push
ljmp
push
and
insl
into
xchg
pop
das
roll
faddl
gs
mov
fldenv
inc
pavgb
aam
cld
jg
sub
gs
fisttpll
pop
or
add
xchg
cmp
xchg
outsl
addb
adc
dec
adc
dec
fst
push
sub
push
in
stos
xchg
push
mov
sbb
cmc
mov
std
pop
scas
movsl
rcrl
and
push
aam
sbb
pop
mov
fnstsw
add
sub
or
push
rcrl
xchg
adc
sbb
push
and
xor
loop
sub
and
icebp
push
sbb
mov
xlat
adc
sbb
add
pop
out
adc
push
ret
lea
inc
out
adc
sbb
pop
push
lcall
xchg
dec
pop
dec
push
xchg
xchg
rcrl
xchg
pop
push
stos
dec
xlat
mov
imul
push
cld
outsl
jge
cltd
xchg
inc
stos
sbb
rcl
jne
sbb
adc
call
aam
aad
add
add
push
ds
movsl
sbb
or
sbb
adc
push
push
rcrb
pop
mov
sub
mov
adc
cmc
mov
push
adc
mov
adc
inc
add
ss
aad
xchg
bound
pop
aam
mov
adc
push
adc
imul
int3
sbb
sti
or
repnz
mov
enter
hlt
aad
cmp
fcmovb
sbb
out
pop
xchg
lret
sbb
inc
out
sbb
sbb
jo
cs
aaa
test
daa
rcr
sub
add
xchg
xchg
stos
outsl
in
bound
mov
sub
dec
rcll
push
mov
adc
mov
xchg
mov
lret
push
xchg
cmc
test
cmp
sub
inc
or
adc
mov
jbe
loop
push
out
clc
pop
lea
xor
je
mov
sbb
jb
lret
jb
xchg
outsl
jge
addl
test
pop
pop
in
adc
cmpsl
inc
std
scas
mov
nop
cmp
dec
push
sbb
pop
adc
sahf
adc
aam
shrl
xchg
leave
fisubrs
mov
les
mov
mov
mov
mov
sbb
stos
popf
xor
mov
outsb
cmp
dec
aad
pushf
sbb
pop
push
jns
push
push
testb
cmp
pop
xchg
push
sbb
sbb
xchg
push
xchg
push
cmpsb
nop
mov
pop
lock
stos
adc
les
add
ficomps
pop
jne
inc
xchg
dec
cltd
mov
imul
pop
pop
daa
movsl
testb
push
test
push
stos
push
mov
xchg
xchg
xor
test
pop
xlat
or
cltd
xchg
sub
imul
pop
sbb
xchg
xchg
push
loop
push
movsl
sub
jno
jne
fildll
xchg
sub
out
dec
mov
sti
int
push
rcrb
cmc
rcll
sbb
fwait
aad
aaa
or
fisttpll
sbb
enter
aaa
mov
add
xlat
pop
adc
sub
nop
push
nop
inc
aaa
lock
sahf
pop
push
or
xchg
fists
xor
push
sbb
cmp
pop
dec
push
push
pop
sbb
add
shll
xchg
int
add
push
popf
xchg
sbb
inc
xchg
mov
push
nop
mov
xor
sub
add
jbe
out
outsl
sbb
hlt
in
xchg
movb
inc
sbb
and
xchg
push
push
test
add
faddp
cmc
ffree
out
fsts
adc
cmp
ret
outsl
ficoms
lret
das
arpl
js
ds
adc
add
cltd
xchg
addr16
adc
sbb
popf
leave
ds
xchg
lret
xchg
imul
shl
cmp
pop
imul
xlat
mov
adc
and
cmpsl
pop
pop
push
or
push
stos
push
cld
repz
lret
or
sbbl
sbb
mov
pop
shll
fisubrs
bound
adc
xchg
adc
xor
sahf
stos
lods
fisubrl
sahf
sbb
add
out
cli
push
xlat
sbb
imul
int3
jp
pop
push
sbb
fcoml
pop
push
add
pop
das
xchg
mov
and
mov
push
lods
push
popf
push
cmpsl
xor
dec
out
ljmp
ficompl
sbb
mov
inc
pop
pop
adc
out
fiadds
cmp
sub
push
adc
xor
add
push
out
push
pop
mov
push
or
sub
add
push
popf
rcl
enter
push
push
in
add
stos
cmc
mov
pop
xchg
imul
pop
sbb
push
jecxz
pop
mov
ret
scas
rcrb
pushf
lret
or
xchg
mov
xor
repnz
pop
fldenv
dec
mov
ljmp
loope
ficompl
das
lret
push
ret
addl
shrb
popf
push
int
out
adc
lods
icebp
sahf
jne
aam
repz
popa
lret
xchg
popf
ret
push
push
rclb
in
jl
or
sahf
push
push
out
or
push
adc
add
xchg
xlat
xchg
push
push
push
fsub
adc
stos
sbb
dec
sbb
leave
sahf
push
pushf
leave
add
cltd
ret
lds
fbld
mov
cld
xor
push
repz
pop
xor
sti
adc
mov
ljmp
push
mov
inc
push
add
cltd
pop
das
inc
pop
les
cmc
out
pop
fildll
daa
inc
das
push
xchg
out
leave
vmwrite
push
pop
adc
int3
xchg
sub
adc
stos
sbb
enter
cwtl
push
adc
arpl
shlb
and
ret
popf
sbb
lods
pusha
lea
ficomps
sub
sbb
mov
loope
mov
das
or
inc
int3
adc
xchg
or
xor
aam
frstor
int3
adc
xchg
addr16
xchg
adc
push
into
ffree
sub
sbb
pop
push
aam
fcompl
xchg
scas
movsb
sahf
dec
push
popa
lcall
and
push
xchg
icebp
inc
fistps
outsl
jo
sub
mov
loop
xchg
push
xor
repnz
shll
sub
scas
push
xchg
xchg
xchg
add
sbb
sbb
push
pop
ljmp
stos
cli
adc
xchg
mov
add
sbb
add
fstpl
popf
outsl
fsubl
mov
adcb
push
fcoms
xor
clc
mov
xchg
popf
push
cltd
pop
int
pop
fdiv
xor
rclb
add
les
inc
std
mov
int
pop
shll
dec
and
xchg
sbb
push
xchg
ljmp
sbb
out
pop
sub
push
cmp
or
inc
loopne
mov
rorl
mov
push
sbbl
int3
inc
cltd
leave
jmp
cmp
ljmp
in
aad
in
and
xlat
sbb
push
pop
push
fcoms
or
subl
mov
sahf
push
movsl
mov
sub
dec
adcl
jmp
or
fs
push
adc
push
or
ljmp
cmp
sub
adc
fistps
out
xchg
in
cli
push
pop
pop
push
fisttpl
gs
stos
push
sbb
inc
addr16
stc
andl
xchg
inc
sub
inc
inc
popf
incl
mov
aam
cmpsl
pop
push
les
loop
xchg
out
out
dec
hlt
outsl
mov
and
push
sbb
pop
pop
sub
das
fcoml
div
dec
adc
dec
xchg
test
nop
cmp
add
xchg
xchg
lret
push
daa
adc
sbb
mov
push
pop
add
pop
xchg
inc
clc
aam
lods
push
inc
adc
sub
imul
testb
insl
out
aad
xor
push
into
push
shrl
leave
test
mov
ror
dec
std
dec
jb
sub
adc
xor
adc
xchg
mov
aam
not
stos
inc
and
adc
sbb
jp
xchg
rolb
push
fiadds
sub
push
stos
fimuls
ljmp
adc
adc
and
ret
scas
das
sub
lahf
int
pop
push
jb
mov
pop
xchg
outsb
sub
sbb
mov
push
es
inc
or
xor
mov
xlat
stos
mov
js
les
flds
add
repz
ret
stos
cld
rorb
lods
imul
pop
pushf
movsl
adc
pop
shll
sub
les
add
inc
push
stos
pushf
outsl
insl
dec
fcoml
js
into
xchg
push
roll
push
pop
xchg
cmp
fldcw
pop
pop
jmp
loop
shrl
xchg
lea
cwtl
out
pushf
push
push
or
and
or
cmp
pushf
shrl
cld
mov
inc
mov
jmp
pushf
ret
sub
fstps
enter
push
adc
push
outsb
pop
dec
sbb
mov
inc
scas
int3
inc
inc
out
sar
pop
repnz
mov
std
xchg
mov
pushf
xchg
adc
les
cltd
movsl
fistl
out
popa
bound
pop
repnz
lods
sbb
xchg
idivl
addr16
sub
adc
les
push
adc
xchg
ss
cltd
enter
test
lahf
sub
inc
pop
pop
pushf
lods
lock
lret
imul
and
mov
adc
popa
push
popf
cmp
jmp
xchg
push
jb
sbb
sbb
sbb
dec
or
out
aam
mov
push
sahf
mov
bound
sub
fst
test
sbb
sbb
xchg
popf
xor
pop
pop
jno
inc
fistpll
sti
stos
mov
fcompl
xchg
div
lret
mov
mov
enter
push
ret
jbe
insl
nop
aad
clc
sub
xchg
xchg
add
mov
inc
adc
aam
ljmp
lret
shrl
pusha
pop
push
call
jns
test
xchg
sbb
pop
fisubrl
sbb
dec
xor
or
xchg
stos
push
aam
push
xor
dec
inc
inc
push
sbb
sahf
inc
test
sti
push
loop
xchg
inc
fidivrs
loop
pushw
lret
pop
mov
fcoms
fstl
and
cmc
dec
fisttps
dec
and
mov
xor
aad
stos
lret
xor
mov
sbb
or
popf
fcoml
sbb
xor
into
xchg
xchg
add
imul
and
xor
and
scas
push
xchg
ret
sub
inc
loopne
adc
pushf
sahf
pop
sbb
into
push
fisttpll
in
mov
xchg
cmp
jno
shrb
push
lret
push
das
mov
outsb
mov
push
pop
repz
scas
jmp
xchg
int3
aam
push
ljmp
push
aad
popf
sbb
adc
dec
adc
imul
pushf
stos
mov
push
int
sub
or
pop
push
dec
add
adc
push
add
inc
mov
xchg
xchg
into
xchg
xchg
stos
leave
std
inc
mov
adc
ret
push
adc
sub
popf
out
inc
testb
push
adc
sub
popf
jge
fisubrs
pop
pop
and
roll
xchg
pop
push
and
xlat
adc
or
adc
cmp
xchg
pop
sub
and
nop
push
jbe
jge
das
lret
xchg
push
add
fistps
sub
mov
rcl
sub
push
sti
es
jp
push
lea
std
adc
pop
jne
movb
sbb
push
jbe
das
push
add
xlat
fmuls
cmc
mov
push
or
sub
push
roll
jp
xor
adc
stos
cmpsl
pop
push
ss
lods
movsl
pop
sbb
sub
mov
mov
sub
gs
aad
add
ljmp
movsb
fcoml
daa
push
adc
es
pop
outsl
scas
popf
out
xchg
test
pop
inc
test
sub
mov
cli
mov
xchg
aad
fnstenv
xlat
sbb
inc
stos
pop
subl
mov
mov
sbb
int3
inc
sahf
pop
stos
sbb
inc
ret
test
xchg
jge
xchg
push
shr
sub
dec
lret
cmp
adc
adc
and
setbe
pop
cltd
pop
xchg
std
shrl
cmp
flds
xor
pop
sbb
sbb
outsl
adc
fcmovbe
loop
aad
daa
jecxz
mov
sti
lea
adc
pop
and
subl
pop
loop
sbb
add
andnps
xlat
les
leave
or
mov
test
adc
adc
outsl
shll
dec
mov
test
shr
stos
push
xlat
pop
sbbb
sub
sbb
in
enter
fsts
push
mov
add
push
push
repnz
gs
sahf
add
cmpsb
popf
push
pop
cmp
pop
flds
xchg
adc
add
inc
sbb
pop
les
sub
decl
or
sbb
xchg
xchg
mov
inc
adc
out
add
xchg
dec
and
popf
sub
push
aam
sbb
scas
clc
pop
xchg
and
sbb
repnz
sub
subl
mov
fwait
cwtl
lods
dec
push
imulb
cmp
push
push
sub
push
rcrb
rclb
popf
adc
andb
inc
push
mov
jbe
sbb
pop
jbe
pop
xchg
dec
outsl
xchg
ficoms
pop
sub
popa
fbld
pushf
xor
sbbl
pop
push
sbbl
xchg
enter
xchg
fst
sub
add
sub
rcrl
push
idivb
inc
jb
outsb
lock
inc
fisubs
push
pop
push
inc
xchg
adc
test
jns
xlat
adc
popf
pop
mov
sbb
push
add
add
or
push
push
cmp
pop
fstpl
cmp
adc
iret
pushf
xor
fisttps
xor
xchg
shrb
mov
and
xchg
sahf
std
addb
push
imul
push
pop
stc
fisttps
rol
and
sbb
out
sub
movsb
sub
sbb
adc
pop
xor
pop
rorl
xchg
inc
iret
fsubl
mov
rcrb
jnp
xor
inc
aam
subl
fbld
lret
xchg
push
shlb
mov
add
ret
lods
loope
push
push
in
mov
inc
int3
mov
les
js
cmp
or
stc
cmp
inc
mov
push
push
mov
filds
popa
sbb
sbb
jg
fadd
fstl
arpl
aam
sbb
ret
push
subb
das
xchg
mov
lret
or
sbb
pop
lcall
adc
nop
xchg
push
inc
xchg
rcrb
adc
lret
adc
cmpsb
sahf
dec
add
xlat
and
loop
mov
ljmp
adc
cmp
sbb
das
add
cltd
in
lret
mov
in
lret
pop
push
sbb
mov
pop
mov
xor
imul
insl
inc
push
ljmp
inc
sub
nop
into
shlb
sahf
mov
les
cmpsb
mov
or
push
scas
adc
sbb
fnstcw
inc
cmpsb
loop
out
xor
and
rcrl
lea
xchg
cmp
and
ficomps
fcoml
rcrl
sub
xchg
sbb
leave
xchg
push
xchg
or
sub
rcrb
jge
adc
aas
int3
pop
sub
nop
fildl
inc
lret
push
les
ror
add
jnp
adc
lcall
sub
fsubrs
out
xchg
push
mov
ficomps
inc
aas
add
out
int
push
adc
jmp
insl
mov
push
mov
mov
dec
pop
fstl
inc
xor
push
mov
push
or
pushf
jbe
clc
mov
lahf
and
and
sub
stos
insb
pushf
pop
xlat
out
inc
push
loopne
adc
adc
mov
pop
lar
mov
push
negl
mov
stos
sub
sbb
dec
sbb
sub
lret
sbbl
sub
es
sub
sub
adcl
mov
mov
das
xchg
cmp
xchg
mov
xchg
pop
ficompl
outsl
movsb
sarl
sbb
into
sub
and
xchg
fsubl
popa
aam
xor
adc
ja
loopne
notb
xor
das
inc
in
pop
aad
in
movsb
fnstcw
push
adc
popf
adc
lea
fdivrl
push
jno
adc
push
adc
lret
cmp
cmp
lahf
xor
pop
shl
or
pop
xchg
les
adc
bound
xchg
push
inc
jp
mov
adc
push
shrb
fsubrl
mov
std
aam
ljmp
fstl
fcmovu
push
sub
mov
mov
xchg
cld
lcall
adc
pop
adc
jb
xchg
adc
xchg
les
cmc
pop
mov
pop
inc
xchg
fistps
xchg
int3
int
ficoms
pop
sbb
add
add
push
sbb
sbb
lcall
fucom
leave
fstps
aad
hlt
pop
xor
pop
in
cmp
xchg
cmpsl
sbb
push
push
rcrl
xchg
xchg
add
inc
test
dec
mov
inc
pop
xchg
xchg
stos
pop
xchg
mov
inc
push
out
inc
sub
movsb
xchg
outsl
cltd
jno
adc
rcrl
jne
dec
faddl
ljmp
xchg
xchg
mov
rcr
add
fimull
xchg
inc
jno
pop
std
and
js
fsub
adc
xchg
xchg
into
fnstsw
and
sub
mov
pop
pusha
and
push
xchg
loop
inc
adc
out
jnp
int
rorl
push
push
push
xor
pop
aad
mov
add
rcll
jae
lods
popf
in
loop
push
cltd
outsl
push
cmp
adc
ljmp
sub
inc
roll
xor
jno
xchg
adc
dec
xchg
bndstx
adc
sahf
inc
pop
lret
outsl
lods
cmp
loop
out
das
sub
xchg
xchg
push
cltd
and
push
mov
adc
int3
scas
sub
cli
push
inc
fists
pop
jecxz
adc
sbb
mov
arpl
push
pop
fbld
repnz
leave
rclb
repnz
mov
cmc
sub
paddq
xchg
fcoml
jmp
pop
cmc
add
push
adc
cmp
das
lret
and
xchg
push
fstl
or
jge
xchg
inc
mov
inc
cmp
aaa
cltd
pop
repz
push
mov
dec
notl
adc
out
dec
push
mov
popf
sub
add
les
imull
sub
ds
testb
cmp
mov
cs
outsl
das
or
sarl
inc
adc
imul
cmp
rcr
fstps
sub
lods
add
shrb
loop
sahf
movsb
dec
das
ds
jns
stos
in
xchg
les
adc
xchg
xchg
std
icebp
mov
xchg
fsts
pop
push
les
sbb
push
adcl
inc
adc
cs
adc
dec
ss
xchg
and
outsl
sbb
fcoml
sbb
andl
mov
inc
xchg
and
and
adc
jge
cmpsb
das
in
movsl
stos
jl
sbb
add
push
out
xor
je
inc
sahf
repnz
inc
dec
insl
adc
push
pop
add
pop
into
jns
mov
loopne
adc
pop
push
pop
xchg
push
add
mov
xlat
pop
xchg
push
adc
loop
push
sub
push
inc
pop
jbe
das
xchg
xor
jg
jmp
mov
inc
xchg
fbstp
leave
sbb
int3
pop
push
mov
int3
stos
ret
push
adc
inc
test
mov
adc
xchg
incb
scas
push
mov
sbb
xlat
or
xchg
cmp
inc
stc
add
outsl
orl
push
ja
shll
pop
adc
aam
sar
sbb
into
imul
popf
jb
pop
movsb
sub
push
lcall
cmpsl
pop
aad
daa
shrl
rorl
pop
aad
pushf
aam
loop
outsl
fbstp
sbb
dec
xor
jmp
sbb
iret
push
push
ja
pop
mov
lock
sub
sub
outsl
or
ds
cmp
jbe
popf
push
lea
lret
xchg
xchg
lea
jno
cmp
pop
push
adc
fstl
push
fwait
adc
xor
mov
int3
or
adc
xor
das
xlat
and
stos
aam
sbb
push
sbb
and
popl
pop
fsts
sbb
daa
pop
lret
and
xchg
pop
xchg
dec
inc
mov
movsl
add
jno
adc
xchg
xchg
outsb
xor
xchg
sbb
add
icebp
scas
sub
pushf
xor
ljmp
or
aam
sub
loop
adc
mov
push
loop
push
or
or
aad
nop
cmc
or
cmp
xchg
sub
xchg
data16
ret
roll
popf
push
shl
xchg
mov
push
xchg
xchg
popa
js
scas
adc
adc
gs
mov
sub
fnstcw
inc
rcrl
pop
jb
and
dec
sbb
xchg
xlat
push
jo
push
dec
inc
pop
shlb
push
outsl
mov
das
adc
mov
xchg
popa
cwtl
mov
sub
pop
push
adc
das
imul
sbb
cwtl
xchg
push
cs
xchg
mov
mov
scas
dec
les
aad
cmp
outsl
inc
xchg
sahf
push
jge
movb
xchg
dec
xor
int3
push
sbb
scas
push
ret
out
sbb
leave
inc
and
sub
sahf
aam
mov
aas
or
push
loop
adc
jo
jge
push
stos
jo
add
add
movsb
xchg
xchg
fstl
js
push
push
sahf
fld
xchg
sbb
addr16
repnz
mov
fsubrl
xlat
mov
push
push
hlt
adc
sti
or
sub
push
icebp
push
test
jle
mov
mov
mov
mov
pushf
pop
xor
pop
sub
adc
adc
mov
loope
fld
sub
out
bound
in
sbb
push
inc
sub
xor
inc
mov
xor
int3
cmp
psadbw
xlat
lret
add
xchg
fwait
lea
pop
dec
push
inc
test
mov
int3
adc
push
pop
ss
inc
sbb
pop
xor
loopne
outsl
std
enter
inc
xchg
lea
adc
mov
ljmp
roll
stos
push
sbb
pop
out
mov
mov
inc
xchg
push
mov
cmpsb
loop
xchg
sbbb
inc
push
outsl
and
int
pop
push
xchg
imul
int3
add
add
inc
push
pop
push
addl
pop
pop
xchg
mov
movb
or
aam
push
outsl
sti
pop
push
add
cmp
sub
sbb
ficompl
outsl
popf
sbb
inc
in
aad
pop
or
push
push
lret
popf
add
xor
sub
daa
imul
push
pop
cltd
xor
mov
enter
pop
subl
pushf
aas
aaa
fwait
push
push
pop
sar
add
cmovo
das
outsl
pop
imul
or
fstpl
push
sbb
sbb
pop
dec
pop
xchg
imul
and
sub
aam
inc
int
outsl
cmc
lret
xchg
pop
sub
push
fists
and
push
stos
clc
add
xlat
stc
sbb
js
fbld
pusha
xchg
mov
testl
adc
into
sahf
xor
adc
movsl
mov
push
jecxz
adc
pop
mov
dec
or
push
mov
orl
add
fcmove
mov
adc
ja
sub
cltd
ss
iret
pop
out
clc
test
push
scas
mov
push
inc
scas
pushf
sbb
cmpsl
push
cltd
and
cmp
bound
sahf
push
push
xor
push
add
shll
mov
out
sub
adc
sahf
mov
daa
mov
repz
sbb
fisubrs
push
stos
xchg
outsl
cwtl
pop
and
cmp
popf
xor
fld
adc
sbb
or
or
out
cmp
sub
enter
fisubrs
fsubl
sbb
ds
push
xchg
add
pop
add
or
rcrb
adc
jle
push
add
stos
inc
adc
xor
xchg
adc
out
cmp
lret
pop
aad
xchg
pop
sbb
int3
add
fisttpll
popf
sbbb
shrb
or
sbbl
xchg
fldl
ficomps
stos
sub
cltd
scas
pop
push
adcb
sbb
mov
leave
aaa
or
inc
stos
jo
cmp
les
or
adc
jno
dec
pop
sbb
adc
add
add
adc
mov
cmc
and
shrb
cmp
push
fildll
pop
xor
cmp
cltd
stos
pop
adc
push
lcall
dec
adc
push
adc
xlat
xchg
sbb
sbb
fldt
mov
xchg
cmp
add
mov
pop
aad
sbb
ret
push
fdivrl
xchg
inc
add
sbb
sahf
sub
das
jne
xchg
jo
xchg
sub
mov
repnz
jne
xchg
outsl
adc
movsl
aaa
sub
fwait
push
sbb
and
xor
lock
adc
add
pop
mov
stc
xchg
jnp
dec
mov
pushf
xlat
icebp
sub
imul
push
pop
sub
jbe
nop
bound
imul
add
adc
outsl
mov
dec
push
pushf
roll
pop
movsl
stos
das
push
push
pop
sahf
xchg
lret
mov
leave
ffreep
sub
das
iret
and
push
stos
push
aad
cmp
iret
inc
into
add
pop
stos
dec
lcall
adc
jae
pop
fisubrs
pop
xchg
xlat
adc
enter
adc
push
rcrb
dec
pop
inc
or
adc
adc
imul
icebp
fsts
pop
stos
sbb
rcrl
adc
mov
fwait
cmp
and
xlat
scas
aaa
ja
push
into
xchg
add
adc
sub
and
adc
pop
stos
xchg
outsl
sbb
pop
rcr
pop
sahf
into
xchg
push
inc
lahf
mov
add
push
flds
adc
sub
rolb
push
dec
lahf
sbb
cltd
push
aam
aas
push
aad
mov
int
push
fld
push
xchg
xor
pop
add
dec
adc
aam
fabs
subl
xchg
bound
push
add
push
out
stc
sub
lock
rolb
push
xchg
cmp
push
push
imul
adc
add
mov
les
into
aam
mov
adc
stos
fstl
and
xchg
sbb
sbb
or
xchg
xchg
mov
adc
sbb
and
sub
add
push
sti
stos
fstl
sahf
rclb
cmc
lret
and
lcall
xchg
aad
fdivrl
cld
xor
mov
mov
sub
sub
das
xchg
aam
faddl
push
xorb
adc
scas
pop
pop
sahf
jae
mov
add
inc
cld
fnsave
andl
out
adc
pop
adc
sarl
mov
adc
cmp
push
push
fnstcw
push
loop
rcrl
sub
mov
ja
sbb
xchg
push
stos
push
mov
sbb
addb
test
popf
dec
xchg
pop
pop
adc
dec
xchg
push
rcr
xchg
sbb
in
mov
add
push
ret
cmpl
pop
vpermps
fwait
add
pop
push
jmp
adc
xor
stc
sub
sbb
cltd
mov
xchg
mov
mov
xchg
mov
cmp
out
aam
sti
pop
and
xchg
push
int
xchg
fmull
inc
sbb
push
sub
lods
sbb
adc
cmpsb
andb
fidivrl
jne
ja
xor
sbb
pop
pop
xchg
stc
imul
popf
sahf
add
call
ljmp
flds
stos
into
aad
fmull
jge
xchg
enter
dec
pop
pop
sub
shlb
sub
sub
pop
push
xor
mov
negb
sub
mov
xlat
adc
cs
fwait
cmp
stos
mov
pop
push
aad
xchg
inc
adc
cltd
pop
pop
add
push
out
pop
add
aaa
xchg
sub
inc
pushf
and
xor
xchg
out
ds
pop
pushf
inc
repnz
std
ficoms
xchg
shrb
xor
imul
and
xlat
add
adc
pop
rcrb
xor
ljmp
push
pop
mov
in
jg
stos
sub
mov
leave
push
mov
push
das
gs
sbb
mov
pop
push
sub
sbb
inc
dec
push
cmp
addr16
addr16
add
fstp
sbb
in
leave
xchg
xlat
leave
fisttps
ret
aad
cwtl
add
nop
movsb
cmp
mov
sub
xchg
push
outsb
popl
mov
jne
pop
sbb
jne
pop
mov
shlb
mov
xchg
jne
pop
inc
fdivp
xor
daa
sbb
inc
cltd
push
push
rcll
sub
mov
es
sub
push
mov
in
fstps
popf
in
sub
rcl
mov
pop
xchg
popf
or
repz
pop
pop
sbb
fwait
mov
push
cs
sahf
xchg
movsb
dec
push
cltd
test
push
adc
cmp
pop
sbb
cmpl
inc
add
adc
movsb
ret
pop
push
xchg
adc
sub
cmp
ljmp
cwtl
leave
xchg
enter
inc
sub
lock
pop
fldl
inc
dec
jo
fdivr
mov
test
cmp
push
push
cmc
adc
hlt
and
insl
inc
fistps
fnstsw
stos
lock
or
xchg
aas
notl
sbb
out
sub
ds
add
xchg
adc
ljmp
into
push
push
add
mov
push
stos
push
out
jge
shll
adc
aas
sub
sub
mov
inc
sbb
testl
rcrl
aas
scas
mov
pop
ror
ficoml
out
shrb
xlat
out
icebp
les
inc
clc
sub
sbb
xchg
dec
pop
pop
xchg
push
pushf
sti
shll
and
and
negb
out
pop
xchg
mov
xor
pop
adc
inc
cmp
fldln2
push
sbb
bound
fsubl
mov
ret
push
pop
rclb
sti
inc
sahf
xchg
xchg
scas
imul
cmp
pop
inc
xlat
fdivs
mull
in
add
xchg
sbb
sub
pop
mov
addr16
fstpl
push
sbb
xchg
adcb
in
jb
stos
imul
xchg
mov
and
push
xchg
sub
mov
add
ljmp
fstpl
push
jle
loop
out
xchg
outsl
sbb
lea
lds
xchg
mov
notb
mov
push
mov
cmpsb
mov
mov
rcrb
inc
xchg
mov
ds
inc
das
adc
sub
scas
push
lahf
xor
aad
push
leave
xchg
flds
hlt
into
movsl
lods
rcl
adc
rcll
inc
push
push
decb
imul
aas
sub
mov
hlt
mov
fdivl
push
adc
fstpl
push
push
mov
int3
leave
xlat
mov
insb
add
add
push
nop
aam
int
adc
push
pop
xchg
pop
fcompl
lods
jmp
shrl
pop
and
or
out
dec
ds
out
pop
mov
xor
gs
sub
aad
das
push
pop
push
sbb
imul
push
addl
es
pop
adc
scas
mov
push
xchg
xor
les
cmpsl
hlt
add
pop
and
aad
push
xchg
shlb
fistpl
lods
loope
cmp
das
sub
cltd
test
pop
adc
bound
lods
xchg
jno
rcrl
sbb
fwait
add
lods
xchg
sbb
aaa
fsubl
fidivs
xchg
sub
mov
lcall
and
or
add
mov
imul
adc
push
push
xor
stos
adc
loop
jno
push
pushf
mov
lods
inc
subb
inc
fs
jle
xor
aam
pop
sub
nop
das
xchg
push
lea
xchg
push
cwtl
fwait
lcall
fwait
bound
popf
ja
popf
fdivrp
ljmp
leave
sahf
jne
adc
sahf
sbb
rcl
sub
and
ds
orb
adc
sbb
mov
rcrl
inc
xchg
sub
aaa
xchg
fistps
pop
ljmp
cli
out
adc
jne
sti
mov
lds
cs
sahf
mov
pop
ss
cmp
and
ljmp
xchg
jge
adc
push
sbb
sbb
std
sbb
rorb
mov
sub
popf
xchg
sub
sub
adc
mov
xchg
inc
push
xchg
bound
scas
push
fldenv
mov
inc
push
popf
shlb
out
subb
jo
sbb
add
popf
cmp
loopne
add
outsl
sahf
test
shll
outsb
mov
sub
sub
and
js
aam
mov
push
lea
fidivrs
inc
sarl
andl
xchg
xchg
pop
cltd
fstpl
fstpl
or
inc
cmp
imul
push
test
shrb
ret
pop
sbb
xchg
aad
pop
add
lret
inc
sahf
pop
push
aam
cmp
mov
add
outsl
mov
push
sbb
mov
inc
ljmp
ljmp
sub
adc
mov
and
jbe
push
pushf
xchg
stos
les
aad
sbb
fisubrs
xlat
scas
inc
mov
dec
out
push
fsubrl
imul
lods
sub
outsl
adc
pop
roll
int
fisubrs
sub
adc
push
push
mov
mov
xchg
aad
xchg
stos
xor
xchg
xchg
sahf
pop
add
jl
push
idivl
push
pop
xchg
ljmp
add
mov
and
inc
adc
rorl
xchg
int3
dec
rorl
rclb
ficomps
orl
ljmp
push
pop
sbb
mov
repnz
cltd
testb
aad
and
xchg
adc
stos
inc
fsts
sub
stos
inc
xchg
in
or
ja
out
push
int
push
sub
dec
insl
push
pop
pop
inc
push
test
sub
aam
testb
pop
outsl
sbb
mov
add
sbb
dec
insl
loopne
cmp
pop
xchg
aad
test
fnstenv
rclb
jae
nop
bound
push
scas
cmp
cmp
imul
adc
test
inc
jns
cltd
add
xchg
pop
lcall
jbe
pop
cltd
inc
sbb
push
mov
push
lock
xchg
mov
les
ljmp
xchg
out
push
inc
push
nop
ds
pop
pop
xor
bound
adc
lods
stc
sbb
pusha
shrb
adc
adc
popf
enter
int
cltd
push
pop
adc
adc
rep
adc
rcll
sub
xchg
jge
push
xor
adc
cmp
add
inc
into
ljmp
sub
mov
outsl
gs
lea
sbb
xor
push
out
xor
mov
leave
pop
rorl
pop
add
inc
sahf
push
xor
fistl
rolb
mov
sbb
cltd
sub
mov
jne
add
rol
mov
or
pop
stos
loopne
sub
sbb
ljmp
xlat
mov
nop
pop
sbb
psrld
rcrl
pop
xchg
ficoms
movsb
scas
xor
xlat
adc
bound
mov
dec
adc
pop
les
push
leave
sub
cmp
pop
sbb
cmp
sbb
pop
mov
pushf
inc
das
das
ret
push
std
inc
ds
mov
inc
loopne
push
mov
sub
mov
fcoms
lock
std
bound
add
ret
stos
popf
sbb
repz
data16
loop
jle
bound
inc
add
rcrl
cld
fwait
adc
sub
pop
push
inc
inc
sub
push
mov
xor
lcall
xor
lea
and
aas
out
xchg
sbb
fmuls
imul
adc
push
mov
xchg
repnz
imul
push
push
sti
inc
or
jg
add
ret
fildll
loopne
fstpl
pop
xchg
dec
push
fstps
adc
lcall
xchg
out
mov
push
cmpsl
inc
push
xchg
xchg
sub
pushf
cmp
xchg
push
sarl
mov
mov
pop
xchg
jecxz
pop
adc
fldcw
pop
push
popf
adc
push
adc
or
lods
cmp
cmp
pusha
sub
imul
stos
xchg
or
add
pop
pop
mov
push
lea
sbb
xchg
pushf
insl
addr16
sbbl
push
cmp
out
stos
xchg
xor
das
pushf
lods
pop
aad
xchg
and
outsl
push
ret
cld
jb
push
lods
subb
push
push
mov
cs
xchg
ficoms
ja
cltd
rorb
pop
push
aam
push
push
dec
xchg
cmp
jg
adc
push
mov
rcrb
add
fsts
popl
rcrb
notl
push
pop
xchg
clc
int3
mov
xchg
push
pop
int3
sub
adc
imul
mov
dec
xlat
inc
in
push
stos
xchg
fcmovne
das
mov
stos
mov
lock
mov
sbb
lcall
repz
rcll
mov
fldl2e
mov
icebp
stos
imul
and
xchg
and
and
mov
adc
lahf
fsubs
inc
add
xor
insl
xchg
xchg
cld
push
push
mov
and
jbe
dec
sarl
mov
push
in
mov
add
mov
das
push
pop
xchg
and
incb
jge
les
fwait
push
xor
cmp
outsl
mov
rcrl
stos
sbb
xchg
inc
ja
xor
inc
mov
push
out
inc
imul
adc
inc
mov
or
mov
fadds
mov
leave
rcll
das
les
push
dec
pop
or
cwtl
sbb
add
cmp
rorl
ja
lea
push
xchg
xchg
ds
sbb
stos
add
jp
cmp
push
repz
aam
ret
push
fsubp
out
xchg
sbb
cmc
jo
fcoml
add
cltd
das
outsl
stos
mov
aaa
xlat
adc
pop
xchg
lret
jno
stos
xchg
jns
sbb
sbb
in
xchg
push
xor
sub
sub
sbb
push
mov
leave
and
mov
push
adc
inc
xchg
cmp
sarb
sbb
xchg
jnp
out
stos
movsb
ja
push
insl
fcoml
pop
addl
sbb
pop
push
and
push
add
adc
rol
stos
pop
push
push
addr16
xor
scas
jmp
or
xlat
sub
adc
xchg
xor
push
adc
filds
aad
sahf
and
sub
pop
shrb
push
push
loopne
jbe
fmull
xchg
xchg
pop
stos
repz
hlt
lock
adc
push
and
push
mov
add
out
xchg
stos
shl
inc
push
fnstsw
inc
sbb
bound
outsl
mov
test
cltd
and
inc
inc
push
add
push
inc
cs
cmp
add
push
push
cmp
lcall
bound
lods
in
jle
mov
mov
rolb
cmc
sahf
rorl
adc
or
adc
push
testl
jae
jge
filds
adc
sbb
sub
out
mov
mov
and
xlat
cmc
out
lock
roll
cmp
jne
adc
sbbl
aaa
pop
into
aam
int
fldcw
xor
cld
xor
rcr
aaa
mov
push
sbb
mov
test
or
xchg
sub
sahf
jmp
mov
dec
pop
cmp
sbb
fdivrl
fisubrs
fnsave
stc
fimuls
and
int3
push
cltd
shl
stos
push
push
or
das
in
ret
xchg
xchg
push
sub
inc
pop
add
int3
sar
xchg
in
in
mov
cmpl
pop
and
inc
cmp
push
adc
mull
adc
push
push
rorb
scas
pushf
xchg
xorb
pop
pop
xlat
es
lds
cltd
lret
outsl
mov
mov
xchg
mov
mov
jp
mov
adc
xchg
sbb
lea
push
lcall
mov
sbb
or
shrl
jo
outsl
aam
cs
das
sub
dec
inc
cltd
fldl
aam
xor
jge
xchg
adc
sahf
jb
jno
push
add
xchg
inc
das
sub
cmp
xchg
gs
dec
inc
int
or
push
scas
sub
mov
mov
stos
rcll
mov
out
mov
stos
pop
adc
inc
stos
fsubp
popl
xchg
aam
mov
xchg
adc
aaa
pop
sub
and
xchg
mov
shrb
mov
inc
adc
fisubs
sbb
and
and
dec
mov
sub
push
sbb
mov
push
stos
jo
pop
jo
pop
movl
push
lret
push
loopne
pop
or
xchg
fimuls
cmc
sub
adc
shrb
fadd
out
pop
pop
xchg
sbb
lcall
imul
xchg
aad
push
gs
pop
xor
aaa
cmp
sub
sub
mov
in
sbb
shrl
rol
add
jecxz
loope
push
xchg
imul
mov
sub
jle
stc
out
pushf
sbb
out
mov
shrl
add
add
fisubrs
in
in
outsb
inc
iret
mov
mov
sbb
and
sub
scas
in
scas
sbb
pop
int3
inc
cmpsb
or
xor
adc
les
sbb
sarb
scas
jne
add
adc
xchg
addr16
or
stos
sbb
jne
push
or
push
xchg
mov
adc
sbb
inc
ret
rcll
push
mov
clc
xchg
cmp
popf
cmp
cltd
out
cmp
adc
pop
ds
push
sahf
lret
pop
fsts
sbb
jle
lods
cltd
push
push
out
fnsave
mov
adc
xchg
ret
or
les
push
les
lret
or
push
outsl
push
adc
fmul
aad
pushf
mov
jmp
in
xchg
sub
lret
cmp
je
insb
xchg
pop
imul
outsl
fwait
scas
pop
iret
push
sbb
test
std
sub
lcall
xor
mov
add
cmp
enter
adc
rcrb
fcoml
adc
sbb
sbb
ret
nop
mov
pop
adc
sub
push
sbb
cltd
fld
aad
daa
adc
sub
pop
push
mov
sbb
outsl
mov
push
data16
in
lret
imul
push
popf
cmp
lret
rorb
test
xchg
xchg
xchg
jnp
aam
and
inc
xchg
fsubrl
adcl
in
les
aad
sbb
mov
add
push
push
int3
or
sub
cli
fcoml
push
push
in
xchg
fstps
rolb
inc
xchg
scas
sbb
push
sub
push
arpl
insl
and
push
add
outsl
adc
push
outsl
sub
pop
mov
dec
subl
ljmp
sub
push
adc
inc
push
sub
das
stos
sbb
stos
sub
aad
stos
xor
xchg
xor
testb
pop
movsl
mov
push
dec
or
add
push
xchg
cs
popf
lock
out
mov
ja
lcall
sbb
daa
or
add
dec
movsb
add
or
outsl
add
rcrl
inc
adc
add
dec
movsl
aad
pop
aam
adc
negl
leave
adc
push
pop
popa
xchg
jae
repz
pushf
inc
cmp
push
add
sbb
and
dec
push
sub
adc
fsubrs
xlat
adc
repz
cltd
jg
popf
mov
inc
shll
popf
mov
push
aaa
cmp
test
xchg
nop
les
ds
xchg
push
and
xchg
inc
jns
jae
ljmp
pop
xchg
and
std
push
jne
sbb
mov
out
popf
pop
fsubrs
ror
pop
adc
pushf
mov
or
outsl
int
rcrl
adc
dec
xor
xor
and
adc
fistl
cwtl
scas
jne
lahf
and
or
cmp
add
add
sub
pop
enter
test
fists
xlat
gs
dec
icebp
xchg
push
xor
ljmp
mov
dec
fsts
pop
inc
sahf
out
stos
sbb
fwait
jne
test
fldcw
sub
xchg
mov
push
sub
xchg
test
adc
lcall
inc
adcl
sub
data16
mov
stos
mov
sbb
cwtl
xchg
jl
into
sub
pushf
loop
inc
cs
movsb
bound
les
pop
out
lods
and
sbb
push
pop
out
inc
mov
inc
nop
sub
add
fadd
inc
push
push
adc
into
inc
jge
sub
outsl
jmp
shll
je
mov
xchg
aam
into
push
xchg
ficoms
ficompl
jle
stc
fisttps
mov
lea
push
cmpsl
inc
ficompl
xor
rorb
mov
xor
inc
jo
mov
push
fst
stos
xchg
push
lock
xchg
sbb
sahf
pop
lcall
leave
push
inc
mov
adc
cltd
inc
les
shl
push
pop
int
das
aam
push
mov
pushf
xchg
test
mov
pop
xor
push
jg
xchg
shrl
add
rcrb
cltd
lcall
push
sbb
es
mov
rcrb
stos
mov
cltd
sbb
sub
lea
sub
adc
fstpl
rcll
adc
sbb
adc
adc
fbld
sbb
enter
cltd
xchg
aad
sahf
sub
ss
pop
mov
cmp
mov
pop
imul
add
fldcw
iret
outsl
sub
sbb
xlat
push
pushf
sub
das
fisubs
cltd
xchg
xchg
and
xchg
push
inc
sti
int3
adc
aam
neg
adc
sub
and
inc
sub
sbb
das
lcall
mov
xchg
repnz
jp
mov
repnz
in
nop
int3
push
cltd
xlat
fisttpl
jg
push
fwait
pop
xchg
add
flds
lods
adc
inc
mov
pop
jle
push
and
int3
mov
xchg
loop
lahf
jns
outsl
xchg
sbb
push
xchg
sbb
xor
imul
xchg
xchg
das
mov
pop
pop
lods
adc
mov
fisttpl
outsl
push
in
sahf
popf
add
ret
inc
sbb
shl
out
into
push
cltd
pushf
ljmp
xchg
inc
xchg
adc
or
mov
adc
adc
cmpsb
and
not
xor
les
les
and
add
je
sbb
sahf
int
outsl
stos
sub
in
cltd
sti
enter
and
push
and
pop
pop
mov
xor
int3
push
fldl
inc
popf
sub
clc
inc
pop
addr16
out
sub
int3
jmp
cmp
out
mov
cmp
adc
push
stos
loopne
shr
and
pop
rol
ja
nop
insl
into
xchg
jne
dec
arpl
push
adc
inc
jbe
rcrb
scas
mov
lods
sub
pop
push
sub
push
adc
outsl
insl
mov
push
mov
shr
js
or
pop
adc
cmp
cmpsb
adc
xchg
sbb
mov
lock
test
sbb
mov
outsl
xor
mov
push
pop
aam
setge
and
inc
adc
xchg
cmp
stos
jae
push
bnd
push
adc
fisttpll
sub
imul
pop
inc
mov
shll
or
mov
lret
imul
sub
xchg
pop
xchg
sub
test
add
mov
adc
pop
sbb
cmpsb
jns
jne
mov
inc
scas
out
push
lods
lods
inc
push
das
cmp
pop
sbb
scas
dec
push
adc
xor
popf
xor
imul
imul
sbb
sbb
mov
xchg
push
int3
mov
scas
sahf
pop
xchg
cmp
add
roll
mov
test
add
adc
mov
lcall
orb
adc
fists
pop
inc
push
adc
loopne
xchg
psubusb
aam
jecxz
mov
sub
add
jle
outsb
jge
add
adc
sbb
push
out
rcrb
xchg
inc
sahf
das
add
test
sub
xor
loopne
push
push
cli
push
inc
mov
mov
adc
int
pushf
push
pop
sub
xchg
jb
dec
pop
jno
adc
nop
insl
push
pop
in
nop
push
push
pop
jg
pop
pop
mov
pop
ljmp
subl
dec
pxor
and
jb
enter
imul
sub
cmp
sub
test
sbb
sub
cmp
xor
rcr
pop
push
out
test
and
push
outsb
or
mov
fstpl
sti
out
inc
adcb
aaa
xchg
cmp
mov
adc
sub
fisubrs
sub
fbstp
add
push
in
xchg
into
adc
lea
xchg
fnstcw
pop
add
and
inc
das
xchg
mov
lock
jecxz
add
pop
out
into
xchg
xor
xor
xor
fistl
inc
lea
pop
and
push
cwtl
scas
xor
mov
pop
xchg
push
xor
add
push
imul
sbb
clc
scas
mov
sub
aam
ljmp
nop
pushf
aam
xchg
mov
and
in
mov
sub
xchg
sub
mov
mov
pop
sbb
and
inc
aas
sbb
sub
pop
jge
imul
das
mov
leave
adc
adc
cvtpi2ps
xchg
sub
adc
adc
xchg
cmp
jmp
das
push
shlb
pop
test
push
xor
ret
xchg
push
xchg
fst
adc
fwait
xchg
bound
mov
out
test
push
jp
pop
mov
or
in
rcr
push
subl
lea
cmc
xchg
mov
js
aam
cmc
mov
lock
xor
sbb
jecxz
inc
or
and
mov
pshufw
sub
mov
sbb
and
cmp
sbbl
outsl
mov
sub
shl
fcoml
je
pop
add
enter
lcall
fbld
jle
jp
pop
clc
dec
adc
mov
push
push
inc
rol
mov
das
push
ljmp
mov
jge
cmp
gs
adc
sbb
mov
pop
push
rclb
dec
sbb
pop
sbb
jb
les
call
jo
cwtl
fisttps
pop
scas
pop
adc
pop
xchg
push
pop
pop
cmp
cltd
inc
lcall
pop
sub
mov
sub
pop
les
pop
adc
pop
inc
or
and
lcall
add
jg
pop
mov
sub
das
and
sbb
xor
mov
pop
lods
and
jbe
enter
pushf
rcrl
push
jp
leave
ficompl
outsb
sub
insl
adc
xlat
sub
lods
inc
adc
test
or
adc
dec
inc
push
imul
inc
xorl
daa
sbb
ret
aam
ret
jmp
jbe
movsb
add
stos
pop
pop
xchg
sbb
filds
push
leave
stos
pop
cmp
push
inc
pop
sbb
out
push
das
xlat
arpl
mov
push
cld
out
sub
push
adc
ret
push
lods
or
push
rcr
mov
jne
jb
xor
rcrl
mov
lret
les
iret
xchg
add
fcompl
xchg
in
jge
xchg
adc
notb
push
xor
adc
xchg
fiadds
push
shll
xchg
out
std
pop
pushf
jmp
dec
ficoml
cmp
sbb
fs
pop
scas
loope
lea
fistl
shlb
xchg
sub
fstpl
int
rcr
fsts
mov
pop
pop
adc
stos
add
fnstcw
cmp
jbe
cmp
xchg
and
scas
xchg
xchg
xchg
cltd
sbb
fists
xchg
loope
xor
pop
or
xchg
sbb
pop
push
xchg
fstpl
aad
xor
pushf
cmp
scas
xchg
sub
dec
adc
jo
dec
sub
push
xchg
add
xchg
mov
sub
fsubrl
sbb
pop
jp
aam
xor
outsl
sub
mov
sub
sub
ljmp
mov
pop
les
stos
inc
sbb
dec
push
ror
mov
icebp
stos
sub
push
rcrb
rclb
js
cmp
pop
pop
pop
sahf
add
sub
sbb
into
das
pop
xchg
cmp
into
sbb
lret
xchg
scas
cwtl
lock
sub
xlat
xchg
inc
mov
add
stos
mov
xchg
push
xchg
pushf
xchg
mov
sub
pop
sub
popf
pop
pop
mov
shrb
lret
pop
sbb
les
sub
add
push
jge
push
test
or
pop
adc
fcoml
fstpl
daa
fistps
xchg
shrl
xor
adc
das
and
and
out
xchg
add
pop
shlb
adc
or
pop
mov
lock
adc
sarb
push
rcl
inc
loope
xchg
sub
push
fstl
fiadds
ljmp
sbb
bound
rorb
xchg
or
hlt
adc
das
out
sub
xchg
dec
push
pop
push
jb
sbb
and
fistps
fcoms
gs
adcb
sbb
push
sbb
mov
push
cltd
imul
add
adc
lcall
add
cltd
xchg
push
sahf
adc
arpl
jle
in
mov
ficoms
stos
lods
xor
cmp
or
stos
push
adc
cwtl
push
ja
xchg
popf
mov
xchg
sahf
movsl
xorl
xchg
imul
popa
sbb
mov
aad
sbb
sub
xchg
push
xorb
and
ret
pop
shlb
lods
xor
sbb
add
push
dec
sahf
inc
pop
lret
sbb
push
xor
imul
add
imul
xchg
aaa
inc
lcall
push
pop
out
addb
mov
xor
xor
pop
iret
mov
and
test
lock
nop
add
push
xchg
pop
pushf
sbb
test
pop
jmp
std
add
insl
sbb
sahf
inc
mov
pop
push
inc
push
jmp
mov
adc
sbbl
and
sbb
fimuls
mov
push
rcrl
push
scas
lcall
sub
lock
mov
mov
pop
push
add
push
sub
out
setge
sub
adc
das
out
mov
fstl
inc
pop
inc
xchg
cmp
xor
sahf
push
adc
push
jno
idiv
outsl
jge
push
xchg
push
fwait
add
or
jbe
in
out
push
xlat
out
and
int
push
xchg
adc
fmul
push
lea
scas
xchg
pop
pushf
fst
or
adc
fistl
imul
dec
inc
sbb
push
nop
pop
adcl
xchg
ljmp
adc
xor
pushf
and
and
stos
push
leave
mov
pop
negl
cmpsb
cmc
add
ss
add
push
xor
popf
sub
jge
xchg
pop
in
pop
push
add
stos
or
shrb
test
mov
dec
pop
stos
push
sbb
push
mov
rcr
lret
mov
push
xchg
loop
fucomip
sbb
aaa
pop
icebp
push
data16
outsb
in
movsb
mov
aad
pop
and
pop
xor
pop
int
and
loop
jbe
xor
das
in
adcl
push
adc
jb
xchg
jno
sbb
sbb
and
push
scas
push
rclb
inc
fists
adc
xor
not
popa
dec
nop
mov
cmp
js
int3
push
inc
sub
and
out
mov
push
pop
les
sbb
movsb
js
xlat
addl
sub
ljmp
pop
inc
inc
lods
or
mov
mov
and
icebp
adc
mov
lcall
stos
push
cwtl
mov
scas
in
xchg
outsl
popf
sub
roll
sbb
adc
mov
ror
mov
hlt
pop
mov
popf
sahf
fcompl
sub
xchg
cmp
push
scas
jae
push
scas
jmp
xchg
adc
ficoml
imul
mov
scas
pop
add
es
cmpsl
and
lods
inc
fdecstp
bound
imul
push
cmp
push
inc
sbb
push
xchg
fdivl
push
sbb
fbld
pop
ret
push
mov
aaa
js
popf
add
ret
sbbl
push
pop
rcl
mov
sub
sub
adc
ds
pop
pushf
fidivs
push
jmp
das
pop
dec
xchg
jle
push
jns
push
cwtl
and
rol
popa
pop
popf
jns
mov
and
xchg
fsubr
pop
sub
push
sub
xchg
in
or
scas
and
adc
adc
push
pusha
adc
xchg
pop
jne
adc
test
adc
or
ficomps
sbb
fcoml
sub
sahf
das
cmp
daa
xchg
loop
in
push
stos
push
adc
xchg
mov
pop
sahf
sbb
add
aad
test
pop
aam
sbb
das
stos
cltd
fisubrl
add
or
jmp
inc
inc
dec
xchg
push
mov
pop
xchg
adc
addl
ret
inc
xchg
xchg
add
sbb
xchg
add
iret
sbb
and
sub
jmp
or
xor
aam
mov
rcr
fistps
sti
cltd
imul
pop
cmpsl
fs
xchg
int3
sbb
scas
stos
cltd
jo
xchg
fstpl
inc
shrl
mov
stos
stos
add
pop
xchg
cmp
sbb
lods
nop
cmp
inc
ss
mov
divl
and
add
pop
and
xchg
fldl
xchg
outsl
xchg
scas
push
mov
sub
sbb
rorl
call
sbb
sti
pop
hlt
fisttps
sbb
roll
and
adc
mov
loope
xchg
out
adc
mov
test
jl
or
adc
nop
sbb
arpl
mov
pop
add
or
xor
les
sub
xor
xor
sub
and
cld
pop
xchg
adc
sbb
xchg
fcompl
idivl
push
xchg
shl
sub
cmc
addr16
mov
xchg
cwtl
mov
sbb
pop
jle
mov
mov
roll
add
addl
push
adc
jno
inc
jge
outsb
mov
pop
add
sbb
pop
pop
mov
or
notl
dec
scas
pop
loope
popf
aaa
push
insl
bound
inc
addr16
push
scas
pop
out
lods
push
pop
aad
out
shll
inc
push
das
xchg
icebp
xchg
push
sbb
adc
jg
add
sub
sahf
push
dec
aad
sbb
xchg
xchg
sub
enter
dec
and
pop
inc
in
push
sbbl
pop
cmc
loop
les
push
rclb
adc
push
jb
loopne
icebp
xchg
hlt
das
scas
inc
sahf
aam
lock
pop
xchg
xchg
pop
xor
les
popl
std
fnstsw
xlat
inc
cmpsb
cld
es
sub
sbb
xor
sub
pushf
sahf
loope
std
fnstenv
insl
sub
push
shr
push
pop
sub
sub
adc
jae
add
push
jne
lods
xchg
rclb
popa
xchg
sub
push
or
push
mov
rcll
stos
sbb
mov
dec
mov
or
ret
xlat
push
aas
fwait
inc
xchg
inc
push
adc
pop
insl
pop
rcl
ret
push
adc
stos
push
xchg
sbb
adc
dec
add
rorb
rclb
push
das
fnstcw
fcoml
mov
xchg
add
rcrl
xchg
push
scas
popf
mov
loop
ficomps
int
push
fldcw
rcll
sbb
imul
fidivs
push
pop
ljmp
fcoml
sbb
sahf
inc
lcall
sbb
iret
xchg
xchg
add
sbb
sub
xor
ds
call
add
pop
xchg
out
dec
jne
xchg
xchg
mov
imul
xchg
std
scas
add
pop
and
hlt
mov
insl
jae
xchg
sub
cmp
je
imul
adc
xchg
cmc
xor
xchg
lea
pushf
sub
pop
add
or
ljmp
add
aam
std
sahf
xchg
or
mov
imul
pop
imul
push
dec
push
stos
test
cmp
adc
push
push
scas
jbe
adc
inc
xchg
adc
ljmp
push
add
jbe
dec
imul
jae
js
cmp
into
lcall
pop
movsb
jb
insl
dec
xchg
sbb
mov
cltd
int
imul
fsts
push
inc
mov
pop
scas
jnp
stc
push
imul
adc
xchg
js
and
jns
fists
push
xchg
cmc
and
mov
xchg
test
es
fnsave
inc
adc
mov
fisttps
sub
adc
push
das
das
mov
test
pop
push
mov
and
and
nop
cmp
adc
pop
scas
cmp
push
adc
push
pushf
mov
adc
mov
xlat
cltd
lods
pop
inc
in
mov
push
faddl
stos
ja
xchg
addl
or
sahf
mov
adc
pop
outsb
lea
sub
and
sbb
fadds
sub
sbb
adc
or
xchg
inc
pushf
xlat
and
dec
push
out
push
out
popf
adc
rolb
inc
xchg
stos
mov
dec
push
sahf
add
adc
aas
sub
xchg
jg
and
push
je
and
adc
pop
outsl
outsl
xchg
inc
inc
cmpsl
lea
and
jo
adc
mov
fdivrl
pushf
inc
cmc
jne
inc
mov
mov
push
xchg
adc
xor
xchg
std
into
stos
movntps
jno
adc
mov
pop
fistpl
andl
adc
sbb
popf
daa
xchg
pop
add
rorb
pop
jno
sbb
pop
adc
xchg
mov
stos
sbbl
sub
jbe
pushf
xor
int
xchg
push
fld
fs
imul
mov
pop
cltd
sub
xor
xlat
aam
sahf
pop
imul
push
aas
push
gs
les
and
lods
lods
aad
sub
gs
hlt
js
sarb
jno
add
inc
push
push
rol
pop
pop
adc
sahf
sub
jmp
mull
imull
into
pop
nop
inc
test
pop
mov
sbb
cmpsb
enter
pop
movsl
xchg
push
xor
mov
cmp
das
xchg
int
adc
push
inc
add
push
and
add
mov
xchg
sahf
mov
add
stos
xor
xchg
das
mov
nop
and
mov
xchg
movsb
adc
mov
mov
aad
push
inc
adc
pop
adc
test
push
out
push
mov
xchg
pop
pop
les
inc
fistl
outsl
xor
push
shrl
ror
push
adc
in
aad
fcoml
push
push
rcrl
and
inc
inc
test
out
add
xor
and
xchg
sbb
stos
repnz
popf
pop
push
xor
cmp
fistl
adc
push
sbb
jmp
aad
scas
cmpsl
out
ds
add
into
sbb
mov
cmp
push
shrl
push
outsb
fbld
jo
ficoml
stos
repnz
iret
inc
sub
add
mov
inc
and
push
jg
mov
out
sbb
loop
xchg
sub
scas
xchg
imul
cli
sbb
mov
sub
push
sbb
sbb
push
popf
mov
add
pop
nop
mov
dec
loop
lahf
or
jo
mov
mov
push
iret
adc
enter
inc
cmp
out
push
and
xchg
adcb
mov
push
stos
push
or
rcrl
ret
inc
xchg
les
cs
sub
pushf
or
js
xchg
and
sbb
pop
aam
xchg
mov
pusha
scas
fistpll
aad
jne
cltd
jb
popf
jmp
pop
push
and
push
cmp
mov
cmp
mov
je
adc
scas
inc
sub
add
push
dec
outsl
pop
push
and
pop
xchg
aam
and
popf
stos
jbe
add
dec
lahf
call
stos
push
incb
lock
sbb
pop
push
push
push
loopne
and
dec
pop
pop
inc
test
and
aad
cmp
lea
int
rcll
pop
inc
outsl
push
ss
int3
add
push
int3
fbstp
jmp
add
mov
sub
pop
mov
pop
lea
cmc
das
lods
call
sbb
std
mov
adc
subb
popf
cmp
jae
jl
lret
sbb
adc
inc
mov
sbb
cmp
fisubrs
sahf
and
imul
push
adc
mov
xchg
pushf
outsl
std
popf
adc
sbb
lea
pop
xlat
pushf
je
aaa
or
add
repz
cmp
adc
sub
icebp
inc
imul
sahf
add
in
cmpsl
xchg
pop
pop
xor
dec
ret
xlat
sahf
adc
call
sub
push
filds
adc
outsb
clc
dec
dec
push
stos
pop
pop
fsts
sbb
sbb
test
repnz
xchg
movsb
add
pop
adc
pop
hlt
std
imul
xchg
xlat
cmpsl
cmpsb
leave
pop
orb
ss
aam
inc
lods
push
pop
inc
pop
mov
inc
push
scas
mov
sub
adc
xchg
push
add
das
xchg
fcompl
in
in
mov
daa
cmp
pop
xchg
xchg
xchg
push
lock
xlat
push
out
rcrb
mov
pop
sbb
pop
mov
nop
sbbb
rorl
mov
inc
sub
sbbb
dec
mov
cmp
nop
testb
call
xor
jbe
xor
push
pop
adc
xchg
add
das
pop
mov
and
push
fistps
and
fidivl
and
fst
xchg
push
push
js
jp
lahf
sbb
push
lea
mov
fsts
xchg
fisttps
ret
imul
jbe
aaa
les
push
movsl
jnp
push
out
iret
scas
test
push
and
push
ror
xchg
mov
xlat
xor
xlat
adc
pop
push
adc
push
out
adc
aad
cltd
xor
cli
push
xchg
ljmp
inc
jge
xchg
push
cmc
in
cmpsl
dec
adc
fxch
inc
ret
cmc
inc
sub
pop
loope
leave
xchg
mov
cmpb
cmp
pop
subl
adc
mov
stos
push
scas
rcll
inc
and
pop
fistps
add
les
mov
sub
fldcw
pushf
pop
dec
adc
ljmp
adcb
xchg
shll
popl
fwait
push
pusha
fdivl
or
adc
lahf
fdivrl
fistpl
pushf
out
rcrl
push
sub
xor
push
jbe
sub
ret
fwait
mov
sub
sbb
xchg
jo
cmp
scas
push
sub
push
fldenv
sti
pusha
adc
fcoml
outsb
popa
or
mov
xlat
mov
imul
addr16
fildll
push
sbbl
stc
mov
dec
xor
sub
push
loopne
and
mov
imul
add
push
adc
push
icebp
outsl
push
popf
xchg
cmp
inc
xchg
sbb
and
sbb
icebp
add
dec
les
jle
popf
data16
or
push
xchg
fists
jge
add
std
cs
mov
fsubp
sbb
shrl
push
push
push
fsubrl
or
ffree
pop
das
hlt
inc
push
inc
pop
adc
fcompl
add
call
insb
cmp
in
pop
xchg
arpl
inc
push
inc
inc
mov
ret
pop
push
das
inc
fmul
mov
mov
push
pop
jno
fs
pop
push
adc
dec
push
push
mov
pop
adc
loop
pop
push
sub
flds
fistps
dec
test
xor
sbb
mov
or
sahf
xchg
mov
mov
pop
notb
push
and
outsl
scas
xor
loopne
and
and
xchg
sarl
scas
xlat
mov
insb
push
add
aam
and
jp
push
cs
adc
stos
push
xchg
sarl
aam
jle
bound
std
xchg
dec
aad
push
pop
mov
in
shrb
cld
daa
add
subl
outsl
sbb
push
push
es
dec
rclb
xchg
stos
stos
stc
and
xchg
push
inc
adc
adcl
aad
mov
stos
and
sub
pushf
loop
scas
push
movsb
sbb
sbb
mov
cld
or
jge
das
push
push
sub
push
fildll
xlat
cltd
jmp
fldenv
ja
xchg
xchg
push
xchg
xchg
push
jge
filds
jns
loop
xchg
pop
das
add
in
sbb
aad
in
pop
daa
push
xlat
testl
lods
hlt
sbb
pop
xchg
and
pop
fwait
das
adc
xchg
orl
sub
adc
dec
inc
pop
adcb
jae
cmp
ljmp
sub
fld
leave
pop
xlat
adc
pop
sahf
inc
mov
add
inc
cmp
pop
inc
sub
les
adcl
add
xchg
xchg
sarb
sub
cmp
sub
push
fsubrp
adc
inc
pop
lock
pop
push
ljmp
pop
or
fadd
fldl
mov
sub
test
inc
fistpl
jecxz
xlat
popa
xchg
push
mov
stos
popf
fs
in
add
push
inc
mov
or
xor
xchg
sub
inc
adc
xchg
cltd
faddl
xchg
jge
pop
outsl
in
rol
xor
negl
imul
ss
mov
out
mov
push
mov
jle
jbe
addl
adc
popl
adc
push
adc
add
mov
jnp
je
xlat
mov
mov
adc
push
cmp
and
push
out
mov
push
js
dec
cmc
pop
and
shlb
push
sbb
or
jmp
add
mov
jg
stos
pusha
sub
mov
push
ror
aad
jne
jne
mov
dec
jo
and
lret
dec
sbb
fists
pop
pop
sbb
xchg
imul
xor
fsubrl
sub
xchg
mov
jnp
and
push
sti
stos
mov
and
push
sub
les
pop
push
cwtl
mov
mov
mov
dec
or
mov
lods
pop
sub
push
cltd
sub
push
sub
cs
fwait
sbbl
int3
pushf
mov
sbb
in
cltd
out
push
mov
inc
inc
mov
test
out
pop
test
fldl
mov
push
jno
cmp
adcl
jb
mov
push
push
jo
pop
popl
sbb
jnp
push
add
daa
or
xchg
xor
inc
scas
xchg
rcl
adc
cmp
mov
xor
testb
add
dec
push
and
cmpsl
push
mov
arpl
push
push
jne
lock
sub
jl
add
orl
imul
mov
pop
outsl
std
lahf
push
inc
pushf
cmc
fidivrs
insl
lret
xchg
addl
movsb
sbb
add
aam
fbstp
push
popl
pop
pop
cmc
lock
ss
push
sarb
adc
aad
xchg
inc
xor
sarl
or
xchg
sub
out
xchg
mov
cltd
cmp
xchg
cld
gs
aam
in
jge
stos
adc
pusha
add
in
cmp
and
inc
pop
add
push
pop
fwait
jae
outsl
pop
pop
int3
jbe
inc
faddl
add
cltd
and
pop
mov
cltd
inc
or
adc
adc
mov
ds
stc
add
xor
leave
pushf
add
mov
push
mov
out
enter
std
mov
mov
cltd
push
in
sarl
push
xchg
mov
xchg
jbe
xchg
aad
add
dec
xchg
xlat
test
cmpb
insl
and
scas
inc
push
push
inc
inc
fsubrl
pop
or
inc
stos
mov
mov
sbb
aam
inc
or
sub
pop
sbb
xchg
shlb
push
sahf
jge
rcll
or
sbb
stos
adcb
sahf
rol
add
or
xchg
aas
pop
inc
mov
pop
sub
push
xchg
xor
pop
outsl
out
sbb
rcrb
fists
cld
xlat
fadd
mov
jno
rclb
std
mov
push
into
sahf
bound
pop
mov
sbb
test
mov
lds
test
or
adc
xchg
cmp
xchg
imul
loopne
fldt
pop
stos
daa
mov
orl
or
adc
sbb
and
push
loop
sub
xchg
dec
sbb
sahf
dec
aam
push
mov
mov
ret
sbb
sub
pop
fcompl
pop
test
insl
and
fwait
and
ret
stos
inc
sarl
or
jo
xor
inc
pop
rcrb
ss
fistpll
cltd
sti
pop
jno
pop
sahf
push
cld
js
mov
fcomps
fstps
push
mov
shlb
xchg
xor
enter
and
pop
sbb
lds
add
in
popa
adc
movsb
mov
popa
jae
xchg
push
xchg
jae
adc
hlt
inc
repz
inc
imul
jne
fstl
and
out
adcl
ret
fnstenv
adc
sbb
adc
rcrl
adc
sti
test
and
inc
fsts
fisubs
sahf
jl
or
aam
pop
xor
pop
aad
mov
xor
xchg
outsl
cwtl
shl
sbb
lds
dec
sub
call
mov
clc
mov
stos
xor
in
mov
lds
push
push
xchg
rorl
iret
aas
and
ret
sbb
cltd
lret
sbb
cmpsb
adc
aam
cli
xchg
xlat
lret
shll
add
pop
xchg
dec
pop
fistpl
and
iret
shlb
outsl
jecxz
and
int
inc
rolb
mov
hlt
jo
lds
inc
sub
sahf
xor
enter
das
mov
jle
test
sbb
cltd
pusha
imul
push
sbb
popa
mov
mov
xchg
outsb
xor
cmpsl
or
xchg
fnstenv
sub
pop
adc
aad
add
sbb
lods
inc
imul
cli
dec
mov
xor
or
cmpsb
sub
mov
or
imul
lcall
jae
mov
inc
out
xchg
pop
rcrb
jge
push
sarl
jns
pop
adc
imulb
imul
divb
filds
es
mov
pushf
test
lds
sub
es
pop
mov
insb
cltd
push
cmpl
sbb
sahf
lods
adc
jge
in
jbe
xchg
dec
xchg
sub
mov
iret
xor
addr16
mov
mov
imul
sub
jmp
sbb
repz
sub
push
jg
sub
loopne
pop
sub
outsl
sub
cli
lret
xchg
fldcw
adc
pushf
xchg
jb
leave
push
mov
ficoms
shr
xlat
sub
aaa
pop
mov
push
sub
or
push
stos
imul
enter
inc
xchg
sub
push
sbb
push
add
mov
xchg
push
test
mov
xchg
fsts
xor
stos
outsl
sahf
pop
aad
sub
cltd
scas
mov
xchg
pop
push
stos
or
and
pushf
aad
popf
push
mov
pop
fcoml
das
lret
sbb
sbb
pop
cmp
dec
push
insl
sbb
sti
jge
xchg
push
mov
das
pop
mov
stos
adc
cmp
sbb
push
lcall
inc
aad
sbb
shrb
adc
das
sbb
adc
lods
pop
fistpll
out
inc
sub
mov
lock
sub
add
rcll
pop
js
sbb
push
push
lret
xchg
push
lcall
jne
add
cmp
push
adc
mov
outsl
aad
aad
scas
mov
addr16
sub
test
incb
push
les
aam
jle
dec
jp
pop
push
stos
repz
xchg
int3
pushf
imul
sti
jmp
pop
mov
add
adcb
fstps
pop
out
xor
sub
shrb
push
stos
sub
push
inc
push
adc
adc
xchg
loop
adc
shr
xor
scas
and
jo
push
xor
xchg
xchg
push
subl
jb
add
rcl
cmpsb
cmpps
fnstcw
and
xchg
adc
outsb
sbb
jecxz
sub
sub
add
js
add
int
xchg
pop
push
adc
jle
ljmp
or
or
mov
mov
or
sub
fstp
push
shrl
xchg
sub
out
aaa
ficoml
add
out
xor
mov
xchg
inc
sub
sbb
imul
sbb
aam
inc
jb
dec
ja
scas
mov
xchg
xchg
repz
xchg
jne
cmc
popa
push
adc
cmp
push
negl
imul
push
scas
jp
jno
mov
inc
aam
pop
push
push
in
jmp
push
pop
jmp
xchg
and
sub
imul
int3
push
lcall
xchg
outsl
push
imul
fsubp
popf
sbb
mov
dec
outsl
clc
dec
jbe
out
push
pop
bnd
scas
mov
rcll
sub
mov
pop
push
sub
test
stos
add
push
push
sub
add
subl
push
es
cmpsb
and
lea
xchg
cltd
ljmp
sbb
pusha
lods
mov
lods
dec
xchg
sbb
sahf
mov
cmp
add
pop
test
nop
roll
push
xchg
or
adc
xchg
cmp
and
sahf
pop
inc
push
jo
xchg
inc
mov
daa
mov
push
push
mov
mov
inc
xchg
sub
mov
clc
mov
pop
xchg
xchg
jno
add
push
xchg
push
sbb
dec
out
xchg
xchg
stos
push
inc
pop
inc
nop
xchg
jne
test
sbb
fistps
and
lods
lret
add
sahf
mov
pop
sbb
and
xlat
push
int
push
xchg
inc
das
pop
cwtl
setnp
pop
adcl
test
pop
push
lret
out
aam
xchg
xchg
add
int3
push
add
int
push
inc
xlat
in
out
xchg
cmp
les
xchg
rep
sub
std
lahf
scas
divb
xchg
xchg
fstpl
add
push
add
xchg
push
or
push
xchg
add
int3
xchg
push
call
rcll
mov
sahf
setno
xor
push
test
and
sbb
push
push
mov
aad
sub
add
sbb
popf
mov
sbb
add
sub
in
xor
push
popf
dec
in
sbb
fists
jo
xchg
js
das
xchg
adc
xor
adc
inc
xchg
adc
and
inc
push
flds
pop
pop
arpl
stos
lret
faddp
push
mov
sbb
xchg
sbb
outsl
xor
fwait
sahf
movsb
xchg
rcll
fnstenv
lds
imul
filds
lods
adc
fstl
xor
outsl
xchg
push
dec
fimull
nop
dec
inc
xchg
int3
push
shrb
test
adc
xchg
inc
imul
push
push
ret
push
scas
iret
loop
das
jp
mov
or
mov
mov
sub
adc
fstl
insl
repnz
pop
mov
lea
mov
cmc
andb
sub
rcrb
adc
pop
ret
mov
pusha
push
pop
xor
inc
sub
stos
inc
sub
imul
adc
sarb
pop
jmp
sub
jge
imul
push
push
ljmp
aam
leave
xchg
rcll
xor
adc
popf
pop
cmc
jnp
add
ret
cltd
push
pop
clc
dec
ds
mov
add
mov
scas
add
int3
sub
xlat
cmpsl
imul
jae
jo
lahf
loop
mov
xchg
ds
imul
xchg
push
push
push
pop
adc
rolb
and
sub
ljmp
fld
scas
fisubrl
xor
and
movsl
mov
mov
popf
stos
or
sbb
nop
xchg
mov
and
lods
and
xchg
xchg
aas
es
push
pop
sbb
push
mov
and
test
pop
notl
and
les
push
dec
test
loop
stc
movsl
ja
sbb
and
lea
push
outsl
sahf
aad
sbb
rcrl
cmp
sub
fld
adc
cltd
pop
sbb
xchg
lret
call
mov
hlt
test
add
xchg
cmpl
mov
rcrb
cmp
mov
insb
push
mov
adc
incl
pop
jb
add
mov
sub
sbb
push
ljmp
in
inc
lea
aad
adc
cltd
lods
push
pop
add
mov
inc
pop
les
roll
stos
push
into
pushf
aam
sti
push
in
sbb
and
sahf
xchg
in
xchg
xchg
pushf
sub
inc
mov
enter
push
or
push
icebp
inc
or
sub
and
fdivp
imul
loope
fistpll
sbb
xchg
in
cmpsl
stos
jb,pt
add
mov
adc
rol
movsb
mov
int3
std
push
xor
mov
xchg
push
push
stos
sbb
stos
and
push
mov
cmp
sbb
inc
rcrb
rcrb
adc
cmpsl
xchg
popf
sub
push
pop
aad
lods
and
cli
xchg
das
scas
movsl
jno
lock
xchg
and
xchg
cmp
movsl
xchg
sbb
pop
cmp
xchg
or
xchg
das
ffreep
mov
dec
not
imul
icebp
push
dec
jo
fwait
leave
sbbl
lret
mov
sarb
and
pop
mov
mov
enter
mov
popf
je
adc
sbb
push
inc
adcl
cmp
sub
sbb
xchg
mov
adc
sbb
inc
push
fadd
and
das
adcl
les
idivl
fsubrl
adc
xchg
cmp
xchg
das
push
jmp
pop
cltd
and
pushf
xchg
push
or
outsl
test
xor
sub
or
pop
sbb
xlat
fdivr
ret
jae
adc
andb
xor
sub
add
hlt
shrb
scas
sbb
packssdw
leave
insb
rclb
sub
jl
inc
lahf
ds
ja
add
lods
scas
scas
or
rcl
cmp
stos
adc
out
insl
sub
adc
fwait
cmp
rcr
and
rcll
inc
jmp
cmp
rclb
fists
inc
adc
add
pop
mov
int
les
mov
xchg
mov
cmp
int3
lods
dec
xlat
xor
ljmp
les
test
sbb
mov
inc
and
in
fnstcw
adc
push
xchg
sbb
inc
rolb
mov
sub
push
push
push
repnz
mov
inc
aam
pop
or
std
pop
popa
pushf
sbb
fists
outsb
adc
xchg
jbe
adc
mov
and
adc
ljmp
pop
sbb
std
pop
sbb
loope
shll
fucom
and
mov
jl
xor
pop
pop
push
inc
test
push
aam
adc
cmp
sub
mov
sbb
rcrb
lret
les
xor
push
xchg
sub
ljmp
pop
sarl
xor
cld
cmp
and
fcoml
flds
stos
and
into
adc
fistps
imul
cmp
and
xchg
cltd
bound
roll
insl
jp
push
test
sbb
push
mov
mov
push
xlat
imul
push
mov
pop
shrl
add
and
pushf
adc
fidivrl
std
push
pop
loopne
xchg
cwtl
rolb
outsl
pop
adc
push
or
nop
imul
xor
sbb
lret
jnp
xchg
mov
scas
pop
pop
subl
and
mov
xchg
fnstsw
inc
pop
inc
sbb
lods
jp
sub
incl
push
sub
inc
pop
fsubp
pop
outsl
scas
or
pop
cmp
test
pushf
pop
push
push
mov
xchg
cltd
stos
stos
cmp
sub
sub
inc
call
test
lods
mov
push
dec
xchg
xchg
push
scas
adc
mov
rcrb
sub
sbb
aad
xchg
xchg
out
int3
push
fucomip
int3
push
lret
aaa
push
cmp
sbbb
aam
or
push
push
inc
adc
adcl
pop
push
sarl
add
jo
push
jmp
cmp
push
les
stos
out
xlat
cmp
fstp
push
push
aad
cmp
popa
push
adc
cli
clc
mov
rcll
push
and
repnz
push
mov
sub
pop
xchg
shlb
pop
inc
inc
outsl
ss
inc
out
xchg
sub
sub
lea
movlps
add
cwtl
out
stos
ds
pop
xor
rcrb
clc
push
mov
cli
clc
rol
sbb
out
imul
xor
icebp
jbe
outsl
xor
adc
and
sbb
lret
fucomip
adc
adc
sub
sub
xor
outsl
sar
or
ljmp
mov
outsb
int3
ficoms
xchg
faddl
aam
fistl
lods
xchg
push
out
mov
adc
sbb
inc
xchg
test
sub
stos
pop
sbb
pop
sub
pop
cld
test
flds
jge
xchg
outsb
cmp
and
sub
int3
pop
xchg
ficomps
and
fistps
adc
cmp
sub
pop
lea
push
jle
fistl
pusha
xor
aam
push
pop
sar
pop
push
stos
out
pop
dec
cmpsl
sbb
adc
push
out
push
xchg
int
push
fst
lret
stc
sahf
cmc
adc
xchg
xchg
shll
roll
test
push
adc
stos
js
cmpsl
mov
xchg
mov
sahf
xchg
adc
pop
sbb
mov
fildll
mov
jge
adc
cmc
xchg
mov
inc
aam
test
imul
jge
ficomps
jne
cmp
mov
cmp
push
xchg
add
popa
bound
add
test
sub
mov
enter
xor
shll
xchg
out
and
xchg
and
inc
xchg
push
adc
xor
or
lds
xchg
aas
sti
mov
scas
rcrl
mov
adc
rcl
dec
sbb
sbb
inc
mov
sbb
xorl
popf
and
cmpsb
insl
das
xlat
push
xchg
sbb
lock
stos
out
lds
inc
popf
stos
lods
leave
fidivrs
scas
sub
pop
out
xlat
popf
or
aam
sub
or
xlat
ljmp
sarl
and
xchg
arpl
in
das
xchg
xchg
pop
xchg
mov
sbb
jle
sub
inc
aam
mov
test
cmp
sub
adc
fnstsw
mov
aam
and
outsl
and
inc
outsb
adc
stos
ljmp
popl
insl
rcrl
adc
and
out
scas
pushf
mov
add
xchg
rorl
xchg
push
jge
pop
adc
dec
push
sbb
adcl
mov
cmc
pop
sarl
pop
stc
adc
sub
xor
push
pop
sub
dec
stos
ljmp
ljmp
push
out
lock
mov
xchg
add
shrb
sti
insl
cmp
sub
loopne
xchg
push
scas
add
das
rcr
sbb
push
pusha
adc
int
fisubrs
xchg
mov
push
aas
aad
pop
push
repz
out
jno
cltd
adcl
push
push
leave
xchg
cmpsb
roll
loop
pop
mov
lret
jo
dec
push
inc
push
sbb
sub
adc
orl
jecxz
xchg
rcrb
jb
adc
add
and
rcrb
gs
xor
xchg
jmp
pusha
xchg
fadds
ret
das
mov
out
std
inc
leave
sub
xchg
xor
sub
test
and
sbb
or
rcl
mov
cmp
cmp
push
pusha
lret
add
mov
imul
and
les
mov
xlat
push
pop
fldt
sub
pop
sbb
scas
push
jnp
xlat
xor
int
sub
adc
mov
repz
cmp
sub
sub
out
xchg
into
sub
pop
rcll
pop
mov
es
cmp
pop
stos
add
out
adc
mov
sub
mov
pop
scas
cwtl
in
sbb
ret
sarb
jb
and
mov
add
pop
xchg
push
xchg
stos
les
sbb
xlat
arpl
sti
mov
cltd
stc
dec
or
inc
sbb
push
in
in
movsl
adc
xchg
xchg
xor
mov
sub
xchg
jge
aad
lret
and
pop
popf
mov
out
sub
push
mov
adc
push
fsubl
xchg
cmp
fists
je
jbe
lods
outsl
ljmp
push
push
adc
xlat
push
push
int3
cmp
sbb
add
cli
push
int
ljmp
adc
pop
test
sahf
adc
aam
pushf
push
xchg
sub
inc
push
adc
lea
xchg
cld
fsubs
jle
jmp
fsubrp
push
push
fbld
roll
xchg
xor
push
ljmp
inc
sbb
adc
and
adc
sbb
fiadds
int
repnz
push
xchg
test
sub
mov
mov
mov
push
imul
leave
mov
ret
sub
loopne
faddp
mov
xchg
mov
push
cmp
inc
cltd
pop
ficomps
jno
xchg
int3
mov
jge
pop
push
fnsave
xchg
bound
and
sbbb
add
sub
jp
rorl
rcrl
mov
ret
xchg
pop
xchg
bound
repnz
push
xchg
add
push
xchg
push
popf
scas
fcompl
xchg
mov
pop
fisttpl
and
rolb
pop
mov
pop
or
sub
adc
add
add
lods
adcl
rcrl
mov
pop
sbb
aas
sbb
adc
iret
dec
lods
shrl
inc
push
mov
push
js
out
addl
sub
dec
xchg
adc
popa
sub
adc
test
dec
pop
aas
or
cmp
popf
pop
mov
jle
jne
push
ljmp
jmp
sbb
inc
fistpll
inc
je
data16
sub
lcall
aad
sbb
sbb
adc
jmp
lret
xor
popf
mov
ljmp
subl
cltd
pushf
xchg
add
add
xchg
mov
jns
lret
cmp
mov
out
nop
sbbl
push
dec
xchg
push
xchg
sbb
push
notb
mov
adc
in
push
xchg
stos
sub
push
or
lods
add
xchg
outsl
aaa
sub
sbb
fidivs
pop
sbb
adc
sbbl
lock
loopne
aam
inc
add
mov
popf
cmp
fimull
push
idivb
push
les
dec
sub
sub
stos
stos
inc
or
dec
jno
scas
imul
repnz
icebp
mov
xchg
out
ret
inc
xchg
push
aad
jg
aad
scas
cmc
das
mov
adc
orb
cwtl
xchg
xchg
xchg
dec
xor
lret
pop
pop
pop
imulb
pop
or
mov
xchg
jb
push
sub
dec
adc
cmc
mov
mov
cmp
mov
xchg
incl
scas
sbb
mov
aam
sub
mov
dec
mov
push
das
xchg
xor
sub
movsl
push
aam
push
mov
mov
int3
stc
test
mov
xchg
clc
cmp
push
push
xchg
xor
lds
pop
hlt
sub
cmp
sbb
xor
and
adc
push
rclb
cmpsb
inc
sbb
xchg
out
xchg
add
mov
sub
rcrb
push
lods
lock
shll
and
xchg
out
aas
add
popf
inc
sbb
xchg
push
and
cmp
xchg
out
mov
push
shr
insb
lock
cltd
or
push
stos
aam
xchg
pop
mov
out
pop
xchg
out
pop
push
popa
adc
sbb
mov
jb
out
sub
imul
push
cmp
push
pushf
push
fldt
inc
lea
jns
cmp
push
cmp
jae
pusha
out
xchg
ficomps
mov
lods
mov
lods
test
inc
adcl
sbb
sub
xor
cltd
scas
aaa
mov
jmp
fists
sbb
mov
jno
jae
shll
mov
lret
cltd
scas
push
cltd
and
out
loop
loopne
push
xchg
fwait
dec
lret
pusha
dec
sub
mov
fstps
fbstp
pop
out
pop
ljmp
mov
mov
mov
mov
pop
aaa
mov
ss
sub
or
xchg
fwait
aaa
or
inc
pop
xchg
jae
leave
rcll
outsl
sub
adc
bnd
sbb
cmp
cmp
sahf
jb
shrb
aaa
shll
lock
mov
pop
adcl
jle
notl
mov
inc
mov
adc
inc
fs
mov
les
inc
cltd
xor
sbb
xor
pushf
pop
cmp
sub
cltd
rcrb
dec
add
pop
ja
ficoms
cmpsl
push
sub
rclb
adc
jb
jnp
xor
das
fsubrl
inc
pop
push
js
jl
inc
in
jle
inc
fists
sbbb
inc
jnp
pop
mov
xlat
inc
stos
cwtl
loopne
push
xchg
sub
stos
xchg
or
push
test
ds
mov
or
push
cmp
inc
or
rcrb
ficoms
xlat
push
cs
jle
mov
fistps
popf
popf
xchg
int
pop
sbb
jo
cmp
aad
inc
sbbb
pop
shrl
fimull
add
cmp
push
pop
adcb
nop
into
popf
imul
adc
jmp
sbb
lock
pop
push
jne
das
adc
add
or
rolb
outsl
movsb
push
add
lret
xchg
rclb
cmp
sub
push
pop
push
les
ficoms
inc
rol
fldcw
int3
popf
push
test
rcrb
sbb
pop
xlat
sub
push
xchg
popf
adc
lods
adc
pop
mov
test
mov
add
push
ret
push
mov
xchg
pop
insb
push
ficoms
das
adc
add
mov
cmp
adc
sub
pop
nop
enter
jne
shll
popf
xchg
cmp
push
fldcw
es
mov
int3
movsb
push
in
ljmp
dec
sub
push
push
faddp
adc
xchg
in
movsl
jmp
push
pop
lret
mov
sub
add
scas
adc
fisubs
mov
inc
xlat
rcll
add
cmp
insl
fdivl
adc
mov
das
pushf
imul
adc
iret
mov
mov
cwtl
sbb
call
loop
push
out
iret
js
xchg
push
xchg
aas
xchg
outsl
push
pusha
jge
fnop
and
or
xchg
leave
adcl
ficomps
inc
jns
fwait
enter
lods
adcl
out
mov
popf
outsl
ljmp
push
pmaxub
sub
and
pusha
sbb
gs
add
pop
mov
push
sbb
xchg
pop
das
in
outsl
fdivl
mov
push
fisubrs
mov
fsts
push
sarb
into
aam
dec
fldt
push
sbbl
push
pushf
sbb
or
cltd
mov
xor
xor
popf
pop
push
mov
mov
lahf
push
xchg
sub
or
push
cltd
pop
ret
jle
dec
and
jbe
xchg
adc
mov
or
rol
push
fisttpll
push
les
popf
sub
push
add
fnstcw
adc
pushf
or
xchg
outsl
push
push
add
das
sbb
jl
pop
lea
std
adc
sbb
inc
push
push
lahf
ljmp
or
lods
xchg
inc
pop
push
rorl
push
xchg
push
and
mov
ficoms
inc
push
les
pop
xchg
push
mov
sbb
sbb
scas
lock
das
xchg
ficoms
xchg
sub
push
xchg
icebp
cmp
push
mov
pop
sahf
je
inc
adc
xchg
push
sub
scas
jge
add
fst
mov
out
popf
mov
sahf
jbe
ret
shlb
push
aad
jp
sbb
gs
add
sbb
xchg
rcll
fs
popf
push
sub
sub
push
cmp
xor
sbb
shl
icebp
shrl
adc
xchg
repnz
push
xchg
js
xchg
jne
lret
jge
push
sbb
rol
aad
push
mov
or
add
inc
sbb
mov
mov
int
push
pop
in
lret
pop
mov
inc
xor
lea
xchg
push
fldenv
mov
push
pop
subl
fcompl
sahf
jge
xchg
stos
jmp
aad
je
movsl
hlt
add
xchg
aas
push
push
ret
sub
cmpsl
stos
shll
inc
sti
dec
adc
add
sub
leave
push
or
test
pop
push
ficoml
outsl
movsl
repnz
push
mov
lahf
sbb
pop
sub
fdivrl
pop
imul
sub
sbb
sub
push
fists
ja
out
xor
sub
test
in
sbb
int3
push
outsl
pop
fmulp
outsl
xchg
aam
sub
push
adc
add
xor
sbb
pop
js
and
stos
subb
lock
mov
sub
xchg
shll
add
pop
enter
rcrb
sbb
adc
lret
into
pop
or
stos
inc
xchg
int
sub
cmp
dec
ds
push
and
cmpsl
push
fdivrl
inc
popf
rol
pop
sub
or
out
js
daa
or
sbb
push
pop
adc
adc
scas
sbb
loopne
push
sbb
push
ljmp
mov
test
dec
dec
xor
push
cmp
aad
pop
adc
adc
mov
bound
loop
xlat
inc
dec
lods
mov
ja
sahf
lods
sub
pop
arpl
mov
pop
lcall
shlb
les
andl
ret
ficompl
adc
scas
insb
enter
sbb
aam
sbb
fs
jmp
jb
mov
nop
jb
sahf
inc
add
push
push
xor
sbb
rcrb
xchg
sub
sub
add
rolb
sti
enter
jp
cmp
stos
stos
dec
out
xchg
sub
pop
ficoml
into
jb
fcoml
icebp
mov
out
fstps
cmp
xchg
imul
sub
popf
pop
cltd
and
xchg
ds
addr16
in
xchg
fildll
sub
mov
shll
mov
push
movl
push
pop
movsb
rcr
jb
insl
xchg
fldcw
inc
push
inc
icebp
mov
loop
jge
mov
loopne
push
ja
les
ljmp
mov
cltd
aas
out
leave
stos
push
mov
sub
and
mov
das
push
into
xlat
mov
clc
add
pushf
bound
mov
mov
inc
aad
lea
push
adc
adc
cmp
push
xchg
roll
xchg
pop
ss
fnop
xor
mov
sbb
ret
add
xlat
xor
aad
out
scas
push
push
push
sbb
push
or
fists
std
sbb
ret
xchg
imul
aad
add
sub
rcrb
xchg
pop
sbb
pop
and
cwtl
jno
nop
push
xchg
adc
cld
ds
push
and
stos
push
out
sbb
push
xchg
add
push
cltd
adc
fsubl
fs
fnsave
push
sub
sbb
and
xchg
je
lods
aad
sbbl
int3
pop
and
pop
rclb
lea
push
push
adc
jne
push
xchg
das
sahf
pop
inc
adc
popf
bound
inc
xchg
push
in
sub
fisubrs
mov
jo
push
xchg
out
nop
xchg
sub
sub
nop
adc
pop
ret
xlat
sbb
fsubrl
inc
and
pop
ljmp
sbb
adc
pop
add
sub
sub
fiadds
inc
and
cltd
stos
dec
nop
scas
rclb
les
xlat
push
xchg
jge
push
xchg
iret
sbb
sbb
das
pop
andl
push
and
push
addr16
and
pop
xor
fisubrs
pop
popf
pop
pop
sahf
push
in
mov
aad
jno
adc
cmp
add
cld
add
insl
add
cmp
outsl
pop
fisttpl
aam
mov
pop
lcall
lods
dec
test
add
popf
and
in
add
sbb
movsl
fwait
push
add
cltd
adc
dec
popf
xchg
adc
xor
cmp
ficoms
push
dec
sarl
cs
movsl
push
lcall
fldl
xlat
orl
sub
sub
in
test
inc
les
ss
add
scas
movsb
inc
ds
dec
xchg
popf
stos
inc
pushf
int3
sub
dec
dec
pop
sub
or
inc
sbb
repnz
sub
sub
xlat
sbb
or
sbb
xchg
xor
adc
imul
dec
mov
shlb
xor
rcr
flds
stos
lods
bound
push
ficoms
fists
repz
es
andl
pop
sub
notb
cmpsb
sahf
xchg
sbb
cltd
sbb
pop
push
inc
in
or
sbb
cmp
inc
ljmp
les
mov
inc
das
pop
dec
mov
icebp
fdivrp
imul
popf
mov
pop
jno
cmc
push
mov
mov
ds
and
push
adc
stc
sti
dec
sub
push
out
xchg
sbb
outsb
sbb
sbb
inc
pop
insl
leave
fldl2e
iret
jecxz
shll
adc
cmc
shll
sbb
push
pop
cltd
mov
out
mov
stos
dec
inc
mov
xchg
push
lret
aaa
sub
int3
stos
sbb
sub
sub
push
repnz
inc
mov
cmp
les
cmp
sbbb
mov
sbb
push
lcall
jle
or
xchg
aam
jge
rclb
aas
sahf
push
hlt
xchg
aad
sbb
dec
pop
sbb
test
int3
dec
sbb
xorb
int
pushf
push
adc
pusha
repnz
insl
inc
push
stos
fnsave
popf
jge
push
jb
mov
dec
pop
sub
gs
imul
inc
pushf
cmp
add
xchg
cs
mov
pop
cwtl
pushf
xchg
jp
adc
xor
fstpl
push
pop
rcl
push
adc
pop
inc
adc
aam
sub
inc
aad
adc
push
int
pop
xchg
fsts
das
xor
imul
iret
jae
rolb
les
movb
mov
popf
bound
push
in
adc
out
repnz
push
push
xor
stc
cmp
push
int3
movsl
repnz
imul
push
sub
mov
rol
xchg
push
pop
gs
inc
pop
inc
adc
lret
adc
push
stos
cltd
gs
aam
cli
pop
pop
sub
adc
and
push
dec
int3
mov
imul
push
pop
mov
pop
sbb
push
xchg
sub
imul
adc
and
fimuls
push
pop
insl
dec
xchg
aad
outsl
das
add
adc
inc
pop
xchg
push
cmpsb
lea
popf
or
sbb
sub
push
lods
lods
inc
pop
dec
imul
int
xchg
aam
sub
sub
adc
push
xor
scas
add
cmpsb
dec
adc
out
add
push
xchg
pop
adc
pop
outsl
and
mov
and
icebp
pop
sub
bound
cmpsl
jo
cli
xor
out
sahf
adc
push
xchg
push
repz
inc
fsts
nop
dec
add
cmp
movb
adc
inc
xchg
push
imul
ss
je
xor
pop
pushf
shr
not
mov
stos
mov
sub
jl
mov
cmp
xor
sbb
adc
ljmp
das
stos
and
push
aad
loope
inc
pop
dec
aam
pop
fstpl
inc
xchg
pop
das
ret
add
pushf
adc
inc
mov
popf
movsl
pop
push
std
add
xor
pop
inc
xchg
lods
sub
popf
sahf
out
lock
sti
fwait
pop
test
xchg
jne
push
jmp
adc
ljmp
xchg
xchg
cwtl
mov
xchg
inc
inc
adc
loop
call
adc
adc
sbb
add
jo
or
add
xchg
pop
mov
mov
push
xor
imul
xchg
ljmp
xchg
pop
test
inc
inc
add
mov
rcrb
add
add
push
xchg
sub
xchg
mov
faddl
jo
xchg
repnz
mov
sub
sub
in
mov
xchg
cmp
cltd
in
push
pop
int
sbb
pop
adc
add
shrb
pop
xchg
into
xchg
pop
xchg
mov
movsl
push
rclb
mov
dec
das
push
pop
ljmp
dec
add
into
push
inc
or
xchg
out
jae
jnp
out
fxch
xlat
push
sub
stos
pushf
adc
ret
adc
insl
and
cld
movsb
or
in
mov
xchg
scas
ljmp
enter
adc
cmp
push
sub
add
les
add
pop
fxch
sub
xchg
mov
call
leave
loopne
push
cmp
sbb
lds
outsl
out
rorl
push
inc
push
int
xlat
push
fbstp
fstps
ret
inc
scas
aad
xchg
mov
sbb
imul
push
inc
mov
out
sbb
enter
test
push
add
or
sub
cmpb
push
into
pop
xchg
push
int
ljmp
mov
adc
sub
inc
push
inc
lods
add
lret
push
push
push
imul
xchg
push
inc
xchg
ficoms
and
lcall
pop
iret
dec
jnp
pop
sub
xchg
addr16
sub
shrl
out
cmpsb
sbb
and
adc
push
xchg
mov
rcrl
pop
pushf
cmp
or
xor
loop
das
jo
cmp
imul
xchg
inc
xchg
adc
adcl
dec
add
pop
lcall
cltd
ljmp
ficoms
adc
popf
call
faddl
add
push
push
popf
mov
fcoml
cmp
sbb
pop
shll
lods
mov
pop
push
int3
lea
pop
aam
adc
pushf
pop
push
movups
inc
pop
shll
dec
inc
push
xchg
stos
les
sbb
cwtl
stos
imul
pop
pushf
scas
pop
in
rcl
sbb
dec
sbb
pop
shll
push
sbb
xchg
xchg
fisubrl
fldcw
mov
pop
and
mov
out
mov
sub
push
push
inc
fstps
sbb
dec
fdivs
adc
and
push
add
mov
xchg
jae
adc
push
and
mov
pop
sbb
cmpsl
sub
shr
and
int
xchg
pop
testl
lods
shrl
push
les
bound
pop
into
ljmp
cmovl
add
or
sbb
in
xchg
sbb
pop
lds
pusha
je
sub
cmp
push
pushf
out
sbb
pop
xchg
pop
pop
stos
adc
imul
repnz
push
loopne
mov
and
rcl
pop
bound
add
dec
pop
cmp
icebp
shl
lds
pop
sub
movb
adc
and
lea
xchg
xchg
push
adc
pushf
shrl
mov
neg
pop
mov
sub
xchg
out
jmp
popf
or
pushf
push
or
add
xchg
out
cmc
leave
or
push
push
rcl
inc
xchg
rcll
outsl
add
xchg
dec
adc
push
ljmp
xchg
mov
loop
xchg
pop
pop
bound
mov
fildll
xchg
data16
push
add
xchg
dec
fwait
pxor
cmp
fbld
pop
push
push
daa
xor
adc
faddp
fldl
sub
and
jp
mov
into
scas
leave
pop
pop
aaa
sbb
fadds
gs
mov
sub
inc
push
outsl
ret
mov
mov
push
fiaddl
sbb
aad
sbb
test
sbb
jp
xor
sbb
mov
out
decb
push
inc
fcompl
aas
xchg
sub
mov
outsl
sub
imul
mov
cmp
imul
sub
xchg
ficompl
aad
shll
push
xor
pop
inc
push
orl
push
xchg
pop
dec
repnz
push
add
mov
ret
imul
fstl
mov
sub
mov
aam
sub
mov
xorl
out
pushf
sbb
lret
adc
sbb
das
and
into
ficomps
xchg
inc
mov
out
popa
sbb
cmp
xchg
stos
movl
push
push
lods
mov
mov
testl
add
mov
or
out
inc
adc
je
nop
lea
xchg
das
std
add
inc
push
add
sbb
adc
and
test
xchg
jno
sub
and
dec
bound
and
xchg
faddl
push
xor
jae
cmc
xchg
mov
push
pushf
adc
push
cwtl
lret
push
lods
sub
mov
das
adc
ret
aam
push
cwtl
testb
push
mov
mov
push
adc
call
adc
idivl
lret
pop
sbb
push
lods
pushf
add
xor
sahf
std
push
xor
and
fildl
pop
mov
sub
jns
cmp
sub
das
nop
lock
inc
xchg
pop
sti
xchg
outsl
ret
ss
inc
push
sbb
daa
inc
movsb
mov
ror
push
pop
cltd
stc
fsub
push
push
test
push
push
sbb
fwait
push
push
cmp
pop
push
outsl
push
push
mov
cmp
or
lahf
xlat
xor
and
mov
adc
push
xor
mov
sub
stos
push
lcall
andl
push
xchg
mov
dec
inc
push
aad
rep
imul
xchg
push
or
cmp
inc
dec
cltd
xchg
das
push
rcr
cmc
fs
cmc
sub
test
shl
dec
aad
pop
push
adc
sbb
pop
cltd
xor
fistps
push
mov
mov
sbb
jo
mov
stos
sbbl
xchg
jne
ljmp
add
push
xchg
mov
mov
dec
subb
and
xchg
inc
push
fstl
xor
push
cmp
xchg
dec
pop
cltd
sbb
sub
push
test
dec
insl
test
xchg
mov
push
add
push
or
aam
add
xchg
outsl
and
lcall
xchg
int3
and
ljmp
lods
lods
jge
inc
les
xchg
adc
ret
mov
cltd
mov
sub
xchg
mov
xor
pop
jge
push
cmpl
sub
data16
out
add
in
jge
and
inc
adc
xchg
out
push
push
movups
xchg
xor
ja
adc
sahf
xchg
push
xchg
lds
in
stc
sbb
fs
fistpl
insb
push
rcl
jb
push
cs
sub
adc
push
pushf
push
or
testb
addb
shrl
sbb
inc
mov
adc
out
addl
stos
lahf
loop
push
hlt
andnps
xchg
add
xchg
lcall
adc
sub
push
sbb
rolb
add
dec
adc
adc
sbb
cmpsb
or
aam
lods
adc
in
push
sub
nop
cmpsl
add
sub
fidivrs
pop
sbb
sbb
xchg
fstp
pop
sub
xor
outsl
push
ret
popf
and
xor
cmp
das
cmp
xlat
fldenv
pushf
xchg
insl
or
pop
mov
enter
push
inc
inc
hlt
pop
das
inc
push
sub
aaa
rorl
push
mov
out
pop
scas
push
in
and
adc
mov
jbe
mov
sbb
and
rclb
shrl
test
lret
dec
add
xchg
push
std
push
aad
sahf
popf
add
push
sbb
imul
test
outsb
pop
out
push
dec
bound
xchg
sub
inc
and
lock
add
or
es
xchg
push
inc
test
gs
daa
xchg
popf
out
lock
inc
andl
cmp
das
cmc
popa
dec
push
add
pop
stos
sbb
pop
add
fldt
push
xor
lods
lret
outsl
pop
xchg
cltd
outsb
pop
xchg
add
scas
ret
push
push
fcompl
pop
aad
pop
xchg
xlat
mov
fidivl
adc
lea
push
mov
adc
imul
push
add
popf
or
aad
pop
pop
pusha
inc
sbb
xchg
sub
pop
arpl
cltd
mov
sbb
inc
imul
mov
cltd
rcrl
xchg
xor
inc
pop
subb
inc
push
sbb
das
insb
shrb
stos
fldcw
shlb
aad
push
fbstp
xchg
aam
xlat
ret
insl
in
popf
pop
xchg
mov
scas
mov
scas
inc
clc
out
rclb
lds
mov
sub
push
cmp
ljmp
sub
cmp
inc
xchg
add
mov
adcl
cs
in
pop
cmpsl
push
xor
cmp
dec
xor
adc
push
inc
push
xchg
fnstcw
and
cmpsl
out
add
pop
add
xchg
ss
loopne
popa
jne
les
stc
pop
xor
sbb
aam
fnstsw
adc
mov
xchg
mov
xchg
adc
testb
cltd
sub
sub
outsl
inc
jne
push
mov
mov
scas
pop
mov
adcl
push
xchg
fld
outsl
sub
sub
stos
pop
xor
aad
push
loopne
mov
xchg
popf
xchg
jge
add
bound
adc
scas
lahf
and
push
fstpl
mov
xchg
mov
push
xchg
mov
nop
sub
inc
pop
lock
mov
sub
das
push
mov
lea
cltd
sbb
mov
add
sub
mov
xor
push
mov
sub
or
aad
sub
mov
rol
outsl
addr16
lods
mov
and
lea
adc
add
lods
in
xchg
das
in
data16
mov
in
push
fimuls
sub
xchg
mov
and
jb
or
imul
add
outsl
adc
pushf
filds
xchg
mov
xor
jg
jge
pop
push
mov
scas
les
test
push
add
add
add
ficoms
sbb
xchg
adc
insl
and
push
mov
call
inc
jns
push
dec
out
lods
aam
add
sub
xchg
add
mov
xchg
shlb
adc
scas
cmpsl
enter
mov
xor
xchg
roll
push
dec
out
pushf
xchg
cmp
sub
cmpsb
int3
mov
add
jmp
lds
faddl
and
sahf
and
dec
das
push
adc
adc
aaa
ficoms
push
iret
leave
sub
pop
jbe
fcoml
mov
std
fwait
mov
inc
xchg
pushf
std
mov
xor
es
push
adc
sub
xchg
cltd
cmp
rcll
jle
setbe
pop
stos
jb
and
mov
push
xchg
and
sub
cmp
xchg
adcb
scas
scas
xchg
adc
outsl
out
jg
xchg
xor
rol
sub
rcll
push
push
fwait
xor
lock
and
fwait
xor
ja
push
cmp
subl
add
pushf
adc
mov
addr16
shr
jb
xor
adc
inc
lcall
cmpl
aad
add
data16
fstps
pop
fdiv
test
push
jno
loopne
or
jo
scas
aam
mov
nop
insl
xadd
mov
pop
add
fwait
sbb
add
mov
sub
leave
les
sub
lods
push
imul
das
xor
sbb
push
incb
xlat
lods
in
pop
dec
inc
cmp
sbb
xchg
and
push
movsb
mov
or
sub
push
outsw
int
push
push
inc
cmp
xchg
pop
mov
fisubs
aaa
xlat
fildll
inc
es
das
xchg
pop
xor
or
push
fldenv
rcl
cmp
xchg
scas
push
nop
outsb
cmp
insb
or
imulb
mov
push
stos
sub
mov
scas
mov
and
push
adc
fstpt
dec
rclb
inc
mov
rcl
pusha
xor
repnz
sbb
adc
out
jp
xor
jge
push
xchg
sbb
push
mov
jbe
push
pop
in
loop
stos
repnz
inc
ficomps
lea
mov
enter
pop
sbb
pushf
enter
and
inc
fldl
add
leave
xchg
fisubrs
aaa
adc
adc
rcr
pop
xor
aas
int3
push
inc
xchg
add
sbb
push
adc
ror
mov
roll
decl
aam
insl
push
pop
insl
mov
xchg
sti
xor
and
imul
pop
mov
mov
push
and
fcompl
adc
inc
cmpb
xchg
add
push
sub
fists
pop
push
rolb
inc
stos
adc
sbb
mov
push
ds
rcl
jge
sbb
push
hlt
add
inc
mov
mov
mov
and
add
test
enter
aam
adc
sbb
push
loopne
cmp
rcr
inc
movsb
jae
adc
sbb
ljmp
jne
add
and
and
dec
ljmp
add
adc
pushf
and
mov
inc
inc
pop
cwtl
popf
lcall
xchg
and
cmpsl
cmc
les
iret
xor
jb
adcb
push
cs
fbstp
add
sbb
xchg
sbb
add
dec
pop
sub
fsts
cmp
xor
xchg
xchg
rorl
dec
sub
aad
push
faddl
movl
dec
leave
out
sbb
or
and
sub
jae
mov
outsl
enter
in
pop
movsl
xor
popf
sbb
inc
mov
add
sbb
stos
or
mov
push
test
ljmp
and
sti
out
sub
sbb
lret
jo,pn
repnz
lods
xchg
lret
shlb
dec
push
xor
ds
jb
insl
push
les
dec
pop
pop
xchg
mov
xlat
adc
aas
pushf
in
sahf
mov
or
movsl
push
jge
pop
jp
mov
mov
fnstcw
mov
fwait
push
xor
xlat
nop
xchg
mov
push
into
xchg
lock
out
xchg
insl
mov
aaa
imul
ret
ffreep
sbb
pushf
pop
push
scas
rcll
addr16
inc
xchg
aam
push
adc
jb
loopne
dec
dec
push
pop
sub
fldt
mov
inc
lahf
add
pop
mov
mov
lea
fistpll
rcrl
jo
jmp
pop
push
push
adc
push
xchg
imul
push
add
push
xchg
xchg
add
push
adc
sbb
xchg
jne
adc
sbb
gs
adc
shl
cltd
inc
shll
aad
cmp
sbb
xlat
leave
pop
xor
lret
adc
xchg
and
out
jno
or
push
cmp
push
adc
pop
cmp
add
shrl
push
push
push
inc
pop
mov
add
mov
xchg
out
out
das
int
fists
xchg
sub
out
lcall
fistps
sbb
ror
das
push
imul
push
ficoms
mov
adc
mov
lret
xlat
inc
out
push
mov
pop
cld
les
push
sub
inc
cltd
inc
xchg
push
xchg
inc
sbb
gs
iret
xor
sub
and
andl
xchg
in
push
fnstsw
addr16
xchg
push
lea
xor
add
adc
out
cmp
push
cmp
into
pop
ret
xchg
push
inc
jl
xchg
add
inc
aas
das
in
or
and
push
push
filds
ret
cvtps2pd
mov
push
mull
mov
push
add
cld
mov
jp
mov
xchg
outsl
pop
stos
jo
xchg
push
or
pop
xchg
pushf
push
jmp
xchg
mov
push
add
push
inc
filds
push
push
push
xchg
push
loop
subl
sbb
adc
push
push
fidivs
mov
sub
pushf
mov
sub
cltd
in
es
outsl
into
scas
xchg
pop
in
mov
adc
sbb
imul
das
fisubrs
xor
xchg
push
cmp
ret
push
sbb
sbb
sub
adc
pop
push
add
repnz
aaa
shlb
sbbl
inc
and
mov
adc
subps
jne
fistpll
xchg
inc
jne
out
adcb
add
das
sub
mov
sbb
mov
lods
push
rclb
push
repnz
repnz
jg
xchg
mov
jge
scas
pushf
mov
dec
pop
outsl
and
mov
cmp
push
xorl
fisubs
or
out
call
xchg
push
in
rcrl
stc
fdivl
pop
sarb
lcall
enter
mov
sub
mov
pop
inc
inc
add
adc
push
imul
cwtl
xchg
gs
pop
mov
scas
add
push
mov
pop
stos
out
jl
sbb
mov
xor
xlat
adc
inc
inc
sahf
sub
pop
inc
adc
sub
mov
mov
sbb
sahf
insl
fst
lret
and
pop
ljmp
xchg
inc
sub
xchg
or
xor
mov
aam
push
scas
cmp
adc
mov
add
fstl
sub
outsl
rcrl
push
adc
jno
gs
inc
adc
jge
out
inc
lret
inc
sbb
inc
push
fldt
push
pop
lret
add
pop
push
sbb
jne
push
jbe
fisttpl
pop
lret
int
xchg
xor
imul
or
add
xchg
adc
xor
or
inc
icebp
jb
es
sub
sub
into
push
pop
adc
push
sbb
mov
push
pop
mov
dec
mov
xor
xchg
push
xchg
shrl
mov
fstl
sbb
and
mov
sbb
cmpsb
add
cmp
mov
push
aam
sub
jno
push
scas
rcr
add
setle
adc
push
pop
fldl
adc
or
sub
push
ja
xchg
sbb
or
push
and
or
in
data16
mov
test
push
pop
push
xchg
insl
pop
popf
scas
xchg
add
adc
into
pop
cltd
adc
cmp
shll
loop
pop
xlat
pop
ss
je
fsts
rcll
insl
imul
and
lea
jb
loop
sub
pop
cmp
mov
mov
sbb
push
not
int
bound
stos
sub
and
mov
push
push
xchg
pop
add
push
jmp
and
outsb
sbb
jne
push
lds
movsb
jp
adc
pop
inc
adc
pop
add
push
mov
xchg
sub
ljmp
xchg
mov
sbb
lcall
sti
or
sub
lret
push
and
sub
mov
outsb
addr16
in
jl
inc
push
adc
mov
fsubr
sbb
dec
loopne
imul
xchg
leave
ret
scas
idivl
and
ljmp
jnp
cmp
dec
cmp
jb
icebp
loop
ljmp
cwtl
insl
xor
das
mov
cmp
adc
xchg
push
sub
pop
push
mov
xchg
push
ss
or
push
dec
mov
cwtl
push
xchg
adc
add
int3
mov
nop
sbb
ficompl
mov
xor
mov
sahf
mov
cmp
outsl
xor
insl
std
adc
push
ret
lock
fiadds
mov
jge
addl
popf
inc
mov
xor
push
push
sub
das
shrl
push
push
leave
fisubrs
ljmp
fsts
inc
pop
dec
cmpsb
cmp
aad
and
mov
adc
in
sub
cltd
jp
pop
insl
mov
xchg
sbb
and
lcall
adc
ret
sub
fmulp
adcl
cmpsl
mov
push
ljmp
adc
inc
pusha
sub
les
dec
sub
push
jns
scas
xchg
fwait
in
popf
or
sahf
inc
push
xchg
lods
sbb
lods
pop
xchg
adc
stos
inc
jl
mov
mov
fdivs
pusha
xchg
aam
pop
outsb
mov
daa
fwait
cmova
xchg
iret
mov
add
shlb
pop
push
sbb
int3
lcall
popa
imul
mov
enter
push
out
sub
aas
movsb
push
push
aad
int3
scas
loop
imul
sub
pop
bound
fxch
sahf
ljmp
ss
mov
mov
or
push
xlat
movsl
sub
popf
inc
pop
cmpsl
mov
stos
xchg
rcll
and
adc
popf
adcb
xchg
inc
pop
sahf
add
lea
ds
out
movsl
mov
xor
outsl
lods
jp
das
insl
mov
aad
adc
call
pop
sub
push
push
in
cmp
jne
push
jp
andl
xchg
cmp
xchg
fiadds
push
jb
pop
bound
sti
shrl
test
dec
shlb
push
les
xchg
push
pushf
push
sahf
mov
pop
xor
push
jne
mov
pop
jl
filds
pop
aad
cmp
sbb
pop
pop
xchg
aam
xchg
pushf
cmp
dec
push
or
shll
adc
scas
jbe
push
test
leave
sub
mov
adc
cltd
mov
rolb
mov
and
fsubrl
push
fld
out
scas
lods
xchg
mov
movsl
sub
add
imul
jp
inc
cmp
or
adc
lahf
mov
adc
adc
adc
pushf
mov
push
cmp
ret
xchg
ljmp
inc
mov
inc
xchg
sahf
adc
jne
popf
and
push
push
call
lock
jno
mov
mov
cmc
push
popl
lods
lcall
push
push
cld
rcl
push
cltd
or
cld
mov
fcmovnu
xchg
sub
nop
xchg
sub
cld
push
push
in
sub
jo
int3
xchg
rcl
add
das
popf
repnz
sbb
xor
sbb
jnp
pushfw
daa
lods
and
sbb
xor
xor
nop
push
nop
push
and
int3
mov
loop
rorb
std
or
outsl
inc
fldl
shr
and
int3
xchg
sub
cltd
mov
push
inc
imul
das
push
mov
xlat
jno
inc
mov
rolb
mov
test
pop
scas
xchg
rcll
sbb
lcall
cld
add
push
jno
pop
lea
jg
ret
and
and
xchg
enter
mov
mov
rorl
adc
xchg
inc
test
sbb
mov
lods
test
add
fbld
fstpl
xchg
lcall
inc
push
cmp
adc
mov
outsl
shrl
std
aad
pushf
push
or
adc
mov
pop
xor
out
or
jbe
sahf
cmpsl
lea
adc
scas
into
push
enter
push
sbb
rcll
sbb
sbb
mov
rcll
mov
fwait
cmp
loopne
je
clc
xor
jo
movb
lods
ds
xchg
push
mov
push
nop
out
and
sbb
adc
xchg
idivb
pop
inc
arpl
sbb
popf
loop
adc
push
push
clc
sub
mov
push
cmc
int
adc
push
pushf
pushf
jns
ret
mov
outsl
push
xchg
stos
or
aad
push
in
and
xor
shll
daa
bound
cmp
pop
pusha
adc
cmp
testb
push
hlt
add
jmp
shrb
mov
sbb
and
sub
push
iret
in
lock
xchg
mov
stos
adc
sbb
sbb
imul
stos
das
int
aad
push
or
es
test
adc
xchg
inc
fucomp
add
inc
and
cwtl
jo
pop
stos
ficoms
outsl
and
enter
cltd
pushf
bound
push
adc
xchg
mov
push
push
mov
jp,pn
sbb
pop
sub
adc
lret
cmp
xchg
xchg
andb
push
pop
mov
pop
and
pushf
cltd
and
sbb
rol
xchg
sub
cmc
nop
and
ret
push
xchg
push
stos
and
mov
adc
adc
jmp
stos
movl
dec
pop
aaa
mov
roll
out
inc
pop
pop
pop
cmpsl
pusha
lret
cmp
sub
mov
push
out
push
cmp
push
shlb
jae
fs
or
mov
adc
inc
push
stos
pushf
cmp
sub
sete
fsubl
push
push
rcrl
sbb
rcrl
ljmp
inc
lods
cmpsl
pusha
sbb
dec
sub
and
sbb
xlat
popf
aam
icebp
shll
push
sbb
xchg
testl
push
pop
sbb
lret
stos
push
pop
pop
push
jb
sbb
push
aad
insl
mov
sub
add
imul
pop
and
push
int3
mov
mov
push
repnz
fcoml
push
fwait
inc
pushf
addl
insb
pop
xchg
xor
shl
and
pop
dec
and
cmp
imul
pushf
push
ljmp
aad
ds
pop
dec
setne
xor
push
arpl
jl
adc
orl
sbb
pop
cmc
mov
addr16
inc
xchg
cmp
adc
sub
push
push
bound
out
stc
and
pop
aaa
fists
push
inc
push
shrl
fsubs
pop
sbb
ret
pushf
scas
sub
aad
push
jb
sub
push
popf
push
push
xchg
lcall
dec
call
inc
sub
aad
inc
sub
add
cltd
sub
adc
ficomps
adc
outsl
push
push
lock
mov
cmp
mov
gs
lea
xchg
fsubrl
mov
sub
xchg
push
xlat
cs
or
leave
ficomps
and
out
lods
sbb
aam
incb
push
push
mov
sbbb
pop
dec
fstl
ljmp
fildl
aam
clc
mov
sbb
cmp
inc
adc
sub
fldenv
shl
or
xchg
inc
add
ljmp
push
push
lods
insl
test
mov
xchg
sbb
xor
inc
int
aad
xlat
sub
rolb
xchg
bound
push
mov
rcrl
push
inc
xchg
adc
sbb
adc
mov
pop
mov
insl
cwtl
inc
pushf
mov
jecxz
movsb
iret
ljmp
cmp
nop
push
mov
sub
xchg
js
fcoms
mov
mov
sub
mov
jbe
jge
std
pusha
je
pop
push
sub
mov
shrl
popf
test
imul
add
sbb
dec
xchg
push
pusha
adc
xor
add
fidivrs
lret
sub
sbb
popf
sbb
mov
push
add
adc
fprem1
sbb
sub
shll
sub
call
outsb
dec
adc
lret
push
mov
imul
pop
inc
jg
sahf
push
xchg
or
xchg
xchg
cmp
ficompl
mov
or
cmp
rcr
push
decb
adc
scas
sbb
sbb
pusha
leave
xchg
mov
loop
mov
push
or
adc
sbb
pop
jg
sbb
inc
jnp
xchg
add
pop
subl
outsl
adc
sbb
jno
les
sbb
adc
fldcw
xchg
push
or
orl
jo
dec
xlat
sahf
fldl
xor
push
pop
ss
sti
mov
add
aad
xchg
jge
push
pop
add
cltd
push
lods
popa
mov
nop
dec
sbb
addl
mov
mov
adc
int3
rcll
jg
sahf
push
sub
xchg
adc
aam
push
xchg
and
ds
rol
faddl
pop
push
sbb
in
pushf
sub
and
push
push
sbb
pop
pop
das
pop
pop
sbb
mov
push
or
test
test
xchg
and
das
xchg
adc
xlat
cmp
push
addr16
xor
int
xchg
subl
dec
mov
sbb
stos
push
add
ffreep
push
push
repz
xor
inc
das
stos
xor
sbb
inc
cmp
ficoml
jns
dec
push
inc
adc
sub
addr16
cmp
outsl
int3
push
add
push
inc
aas
push
cs
sbb
lret
xor
adcb
push
rclb
push
scas
cld
cmc
ror
adc
or
push
xchg
add
gs
out
dec
out
mov
add
xor
mov
sub
and
pop
and
int3
push
sub
aam
pushf
jne
xchg
xor
stos
xchg
sbb
das
pop
fimuls
sahf
stos
rorl
outsb
push
lock
int3
mov
icebp
dec
inc
repz
and
push
sub
xor
xchg
mov
dec
cmp
push
movsb
sbb
xchg
fists
push
lods
ljmp
into
push
adc
push
adc
mov
xchg
xchg
adc
popa
shlb
mov
pop
push
cltd
mov
sarb
fucom
pop
and
adc
xchg
into
fiadds
outsl
call
insl
enter
fwait
mov
stos
add
les
lock
adc
push
rcll
inc
popf
xchg
sub
leave
call
sub
clc
cmp
sub
cltd
sbb
in
fwait
xchg
das
adc
shrl
out
xchg
add
push
adc
cmp
cmc
jle
les
aam
icebp
xchg
popf
cmpsl
push
stos
popf
ficompl
cmp
pop
call
dec
pop
push
sub
lahf
mov
pop
adc
dec
faddl
psubsb
out
stos
out
ficomps
and
fldt
adc
pop
and
leave
sbb
fisttpll
stos
popf
rcrl
adc
das
fucomi
ljmp
ret
push
pop
fnstenv
stos
or
in
test
push
and
push
xchg
xchg
xchg
subl
jmp
inc
pop
push
cmp
push
imul
fidivs
aas
sbb
sbb
push
insl
xchg
aaa
push
das
xchg
sub
sub
shlb
das
test
adc
out
adc
inc
popf
inc
lods
push
sub
sbb
sahf
cmp
cmp
into
fstpl
ret
sub
and
sbb
mov
sbb
push
add
push
and
and
pop
fcoms
jns
outsl
cwtl
push
push
movb
lea
pop
cmp
xchg
adc
inc
push
divb
pop
mov
pop
lahf
jno
inc
sbbb
xor
mov
enter
test
in
pop
out
clc
addr16
insl
inc
xchg
add
push
add
push
push
jb
leave
lea
mov
cltd
pop
and
aas
out
aad
andb
cmpsb
mov
mov
xor
xchg
dec
mov
jge
push
mov
push
pop
pushf
cmp
lods
sbbb
mov
add
pop
iret
xorb
push
mov
fsts
outsl
lret
repz
push
sbb
xor
pop
cmp
out
lea
and
jle
dec
mov
push
movl
sub
out
push
pusha
loope
int3
test
fstps
movsb
pop
inc
aam
mov
fwait
std
rcl
lods
jecxz
out
addl
xchg
loopne
push
imul
jg
pop
push
sbb
shll
sbb
inc
jb
pop
sub
push
rcrl
addr16
cmpsl
adc
dec
adc
xchg
push
sbb
daa
pop
scas
mov
in
or
jno
xchg
icebp
cmp
cmp
pushf
fldenv
add
pop
fcoml
pop
mov
push
rcll
dec
leave
push
pop
out
sub
sbb
sbbl
stos
add
lcall
ret
sbb
pop
repnz
adc
push
scas
push
push
mov
ret
mov
aam
popf
adc
add
pushf
inc
fwait
xchg
or
and
jno
mov
jb
insb
or
inc
rcll
pop
lret
daa
ja
fbstp
adc
lea
push
xchg
sbb
fcmovne
inc
lahf
out
aad
add
push
jge
inc
push
adc
ljmp
mov
mov
decb
repz
clc
shrl
sbb
push
cmp
xchg
sbb
xchg
pop
aam
pop
je
inc
adc
in
adc
inc
mov
sub
rolb
push
mov
add
xchg
mov
push
flds
xchg
jno
aaa
fsubrl
and
mov
arpl
lods
not
out
cmp
inc
sbb
or
out
ret
mov
xchg
fwait
sbb
push
lock
imul
and
add
push
adc
stos
sub
jbe
negl
add
push
sbb
int
cltd
sub
jnp
push
test
adc
das
inc
dec
cltd
sbb
int3
sbb
sub
or
pop
inc
cltd
adc
xor
sti
pop
push
mov
inc
lcall
cmp
sahf
push
pop
xchg
xchg
nop
mov
adc
xor
pop
add
adc
sbb
jo
adc
aas
in
sarl
ret
pop
sahf
or
sub
xchg
add
xchg
add
jns
adc
lods
pushf
push
mov
popf
sbb
xchg
inc
adc
aad
mov
xchg
hlt
ficomps
scas
push
add
and
mov
fiadds
push
aad
lods
jo
outsl
mov
add
or
sbb
adc
adc
aam
sub
xchg
aad
jl
out
xchg
jge
push
xlat
fwait
inc
mov
inc
popa
sbb
cmp
int
xchg
imul
push
lret
xchg
leave
xchg
lret
xchg
int
push
fisubs
sub
push
xchg
pop
push
cmc
pop
push
jp
in
mov
shlb
xchg
mov
stos
sub
mov
es
push
push
mov
std
pcmpeqb
outsl
bound
add
jge
xchg
fld
sub
mov
adc
sbb
imul
leave
cltd
fdivl
mov
jne,pt
add
jb
sub
jge
ljmp
notl
sbb
pop
push
popf
adc
sbb
xchg
adc
insl
cltd
sbb
js
jne
dec
push
add
jo
inc
xor
lods
mov
mov
popf
sub
fnstsw
stos
insl
rolb
push
pop
out
sub
out
pop
das
imull
ror
adc
pop
dec
jge
popf
cld
cli
add
shrb
pop
loopne
nop
jb
jp
pop
stos
pop
es
jne
add
mov
jo
sbb
mov
push
das
sbbl
pusha
mov
scas
push
xchg
ret
xchg
push
push
notb
nop
mov
jns
pop
xlat
inc
movl
fcoml
fidivrs
and
xor
or
je
sbb
mov
mov
adc
int3
scas
xchg
inc
xor
mov
mov
xchg
xchg
xchg
fdivl
adc
inc
mov
add
push
cmc
fwait
cmpl
aaa
out
fists
mov
pushf
stos
gs
jno
outsl
dec
push
push
xchg
xchg
push
cmp
pushf
mov
jne
rorb
dec
add
xor
rcll
mov
sub
cvtpi2ps
and
outsb
inc
sub
pop
aam
ljmp
xchg
jbe
rcrb
pop
sahf
lods
lods
push
std
lcall
mov
out
stos
and
mov
ficomps
shrb
push
mov
push
push
stos
aam
jge
xchg
adcl
inc
pop
popf
xchg
aam
adc
or
leave
pop
push
rorl
es
rcrb
fcomip
pop
jno
jmp
pop
clc
jae
mov
ret
mov
call
xchg
cltd
mov
faddl
xchg
and
les
sbb
repnz
jmp
mov
pop
sahf
push
clc
inc
test
in
icebp
and
adc
jns
adc
mov
inc
das
push
pushf
push
bound
in
and
sbb
dec
pop
outsl
add
in
outsb
dec
xlat
adc
push
fnstcw
ds
pop
bswap
adc
pop
daa
mov
xchg
add
out
bound
int
aam
rcrl
xor
add
fldcw
sub
aas
insl
cwtl
sub
and
aas
mov
movb
movsl
outsl
cltd
add
imul
sub
ljmp
adc
pushf
xchg
insl
stc
pop
mov
insl
out
pop
adc
std
lods
insl
pop
js
push
push
fxtract
xor
scas
call
mov
push
and
nop
push
lcall
fsubl
scas
xchg
add
sbb
push
adc
push
fimuls
rcr
xor
out
into
push
ljmp
pop
sbb
inc
inc
push
pop
adc
mov
popf
adcl
sub
sbb
outsl
testl
stos
xchg
cltd
imul
inc
adc
sbb
inc
sub
call
andb
rorl
out
adc
mov
xchg
sbb
test
out
leave
sarl
pushf
repnz
sbb
mov
pop
jge
xchg
lahf
jp
js
scas
mov
stos
fstps
push
cmp
xlat
add
loop
fbstp
push
mov
cltd
or
sbb
shl
pop
insl
mov
jmp
and
sarl
scas
sbb
dec
rcr
xchg
xchg
push
clc
inc
inc
inc
jmp
cwtl
fcmove
sahf
mov
xchg
dec
pop
ret
add
leave
sbb
or
push
out
mov
subl
movsb
repz
loopne
push
sahf
aam
mov
dec
mov
push
adc
and
bound
popf
test
sbb
hlt
xor
xchg
sahf
dec
sub
outsl
sbb
sbb
xchg
test
push
sbb
into
adc
out
xchg
mov
orb
fstps
adc
fwait
push
movsl
jae
aad
push
add
mov
lods
cwtl
push
cmpsl
in
rolb
mov
movsl
in
mov
outsl
orb
pop
xor
sahf
fcompl
call
pushf
jno
scas
add
adc
test
xlat
popf
xchg
out
pusha
mov
sub
xchg
and
adc
jmp
push
rol
adc
push
pop
fiaddl
pop
fcoms
sbb
push
negl
lods
dec
scas
xchg
xor
cwtl
insb
shlb
mov
insb
mov
loop
add
push
outsb
mov
in
mov
ds
popf
ficoms
push
pushf
dec
pop
out
movsl
push
add
inc
fists
lea
inc
ret
pushf
adc
sub
rcl
sub
xchg
sbb
adc
imul
add
fldl
pop
push
and
lret
pop
into
pop
adc
ret
das
scas
aad
int3
xlat
imul
sbb
cmp
or
push
rol
stos
push
orl
sub
push
adc
inc
and
add
dec
push
add
push
mov
pop
inc
xchg
in
outsl
sub
jge
pop
push
mov
jb
xchg
sahf
incb
lcall
adc
sub
std
push
pop
aad
insb
cmp
xor
rorb
outsl
push
sub
push
lock
mov
mov
push
imul
add
push
sub
adc
lock
and
push
adc
xchg
aad
or
jno
sub
adc
sahf
sub
xchg
out
pop
xor
mov
push
add
pop
adc
ljmp
sub
aam
xchg
xchg
pushf
push
sub
mov
push
push
adc
out
push
push
lods
nop
xchg
adc
out
sar
int3
cld
mov
sub
xlat
xchg
or
mov
nopl
sbb
inc
adc
test
sub
pop
xchg
push
stos
outsb
stos
push
xchg
aam
mov
and
sbb
pop
cli
fiaddl
shll
dec
xchg
lret
std
mov
pop
push
orl
jmp
outsb
push
push
xor
sbb
pop
ds
out
push
add
xchg
inc
das
push
ds
add
xchg
pop
mov
lcall
jnp
sbb
sub
and
fistpll
fdivr
mov
outsb
enter
add
into
or
and
push
sbb
cli
subl
sbb
inc
les
je
xchg
pop
xlat
add
lcall
inc
xchg
xchg
inc
clc
xchg
mov
sbb
cmpsl
mov
xchg
enter
ljmp
nop
add
imul
jns
xchg
sbb
inc
jmp
xchg
mov
int
push
ss
cld
adc
xchg
xchg
push
adcb
out
stos
andl
dec
cltd
xor
das
adc
push
xchg
push
cmp
in
and
push
cltd
sbb
pop
and
fcompl
dec
rorb
xchg
dec
sbb
and
sbb
rorl
sbb
and
and
imul
fwait
jae
into
fistps
inc
les
cmp
movsl
nop
adc
pop
ja
push
mov
add
and
lods
outsl
ljmp
test
or
push
and
adc
loop
push
inc
jae
out
and
sbb
xchg
stos
push
mov
xchg
aas
rcr
sbb
push
aad
cltd
push
ds
sbb
adc
adc
mov
cmp
pop
setae
clc
das
int3
sub
roll
push
xor
shr
and
adc
pop
cltd
push
or
add
mov
adc
roll
sbb
xchg
push
fnsave
push
xchg
jne
sub
pop
jmp
test
xchg
xchg
pop
push
popf
fsubl
js
ret
cmp
jno
add
xor
cmp
pop
xchg
mov
add
adc
call
gs
adc
xor
push
xchg
fisubrs
pop
aam
dec
aad
lods
imull
aad
outsb
aas
jb
outsl
push
mov
xchg
and
adc
cmp
into
adc
or
lret
ficomps
pushf
xchg
pop
pop
stc
adc
imul
cmc
or
mov
dec
rcll
fwait
pop
sbb
add
fcoml
mov
jg
cmp
adc
adc
mov
sbb
subl
fsubr
add
pop
sub
ret
sahf
cli
adc
loop
scas
or
xor
loop
iret
pop
in
cmpsb
lods
adc
mov
pop
mov
jl
loop
push
inc
mov
aam
dec
push
aam
ljmp
pop
aad
outsb
push
push
inc
xchg
add
mov
stos
and
xchg
inc
lret
lret
push
dec
ja
mov
pop
and
es
les
fstps
jecxz
aas
sub
push
subb
sbbb
rcl
adc
xchg
aad
imul
mov
pushf
adc
adc
xor
and
subb
and
and
adc
mov
loope
jge
or
push
sarl
push
sbb
lea
int
push
das
loopne
mov
scas
enter
xchg
adc
mov
sbb
xchg
push
sub
sub
adc
jmp
clc
movsb
inc
add
leave
test
add
out
add
ljmp
insl
in
mov
ss
push
cltd
cmp
inc
sub
scas
out
inc
or
push
stc
addb
or
jbe
outsb
xor
test
push
sub
lahf
pusha
push
aad
sti
adc
rcrl
bound
dec
push
push
push
push
push
in
mov
subl
fwait
lea
imul
sub
xchg
popf
dec
pop
ret
xlat
xchg
shrb
and
pop
xchg
scas
outsb
adc
hlt
and
outsl
xchg
mov
dec
mov
push
pop
push
sbb
xchg
stc
cmp
cmp
ret
repnz
dec
scas
sub
add
inc
and
xchg
jo
jp
cltd
sbb
sbb
leave
sub
xchg
jne
sarb
pop
test
adc
imul
insl
ds
ljmp
xchg
sahf
mov
fstl
or
pop
aad
sbb
test
pop
outsb
mov
push
xchg
push
push
cltd
mov
pop
sub
mov
ds
lret
jnp
add
lods
mov
pop
cmp
push
adc
cmpsb
mov
imul
mov
adc
jne
pop
sbb
xchg
ret
aaa
xlat
aam
cmp
das
frstor
icebp
push
outsb
sbb
adcl
scas
sub
popf
pop
inc
mov
shlb
sbb
sub
push
push
pusha
adc
pop
push
push
inc
cli
pop
jno
aam
test
xchg
pop
stos
repz
pop
pop
sbb
xchg
test
dec
lods
fidivl
daa
addl
ret
rcrb
push
sbb
movl
out
idiv
shll
push
into
scas
fmull
pop
insl
int
xlat
push
inc
shrb
jnp
stos
out
mov
mov
xor
cmp
inc
push
mov
push
es
sbbb
pop
push
fcmovbe
aad
push
fiaddl
push
jge
mov
jge
xchg
aaa
loop
push
cwtl
mov
dec
out
test
xlat
fistpll
rolb
xchg
jbe
fiaddl
pop
lret
addr16
test
mov
pop
push
pop
faddl
push
push
and
in
cmp
hlt
mov
sub
aad
push
scas
rclb
fistps
fldl
pusha
adc
adc
xchg
or
in
cmpsl
adc
adc
sub
out
gs
mov
negl
adc
inc
orl
mov
in
es
mov
ds
mov
pop
pusha
mov
mov
popa
pusha
outsb
push
push
idivb
push
in
xchg
mov
sub
mov
sub
push
cli
mov
jg
mov
cltd
call
aas
jp
mov
xchg
mov
pushf
mov
or
les
fstpl
push
sbb
cmp
add
cwtl
das
jns
scas
mov
cltd
cmp
popa
lret
push
mov
fbstp
xlat
or
xchg
push
je
mov
or
xchg
sbb
jb
popa
push
push
cmp
mov
sub
jmp
faddl
jno
and
ja
aas
in
inc
mull
push
daa
notl
repnz
mov
inc
aam
shll
lods
sbb
pop
hlt
ljmp
adc
sahf
mov
xor
out
pop
push
adc
ljmp
add
pushf
mov
and
outsl
into
pop
xchg
push
iret
dec
out
sbb
rcrb
negb
fistps
stos
cmovbe
inc
adc
outsl
adc
sub
cmp
sbb
dec
fists
push
xchg
xlat
add
sbb
xchg
pop
fldt
ljmp
adc
pop
push
push
fwait
sub
loop
scas
imul
sub
out
inc
adc
ror
push
push
hlt
in
popf
add
data16
ljmp
fld
mov
xlat
ljmp
stos
inc
xor
mov
xor
shrl
inc
das
inc
scas
les
pushf
stos
pop
stc
mov
push
fcompl
add
push
test
popa
xchg
push
int
push
cmp
adc
sub
inc
sbb
sbb
sub
inc
pop
idivl
sub
popa
fiadds
sub
jo
cmp
inc
push
push
adc
adc
xchg
push
sbb
out
sub
cwtl
push
cmp
pop
aas
int
scas
fst
xchg
movsl
popf
notb
xchg
xor
outsb
xor
xchg
aad
pushf
inc
push
fcoml
les
or
ficomps
inc
xchg
or
out
dec
push
dec
aad
adc
cli
push
loop
test
xchg
xchg
sub
xchg
pop
jne
shlb
adc
lods
jl
std
adc
push
fcmovnb
xchg
aas
stos
iret
mov
ss
sbb
mov
subl
out
rclb
sahf
push
mov
lcall
push
stos
mov
lea
push
fstps
sbb
insl
in
adc
sahf
pop
das
push
fsts
pop
push
shlb
cmp
xchg
movsb
mov
fucomi
xchg
fistps
out
aam
fstps
add
adc
rcrl
pop
lods
pop
cmpsl
push
mov
sbb
push
js
mov
int3
sub
lret
mov
xchg
lcall
insb
inc
sahf
pop
push
sub
fstps
subl
pop
adc
fsts
rcll
fisttpl
xchg
shrb
sahf
push
jno
jmp
sbb
repnz
cs
sti
or
push
out
mov
inc
cltd
xchg
add
mov
push
sub
ja
outsl
push
lret
fcoml
cmpsb
dec
mov
int3
das
adc
inc
and
insl
gs
sub
add
fcomps
pop
adcl
imul
add
popf
test
pop
ror
out
shrb
add
mov
pop
pop
or
xchg
scas
pop
push
popa
outsl
fsubrl
xor
adc
sahf
mov
inc
rcll
fnstsw
out
mov
mov
ljmp
out
inc
sub
mov
push
push
hlt
packssdw
adc
mov
outsb
loop
faddl
into
adc
push
xor
jns
aaa
popa
rolb
sahf
xor
rcr
sub
push
xchg
lret
adc
test
mov
sbb
xchg
orb
mov
or
push
out
gs
rcr
in
xchg
cmp
imul
sbb
push
xchg
fsubrl
movsb
pop
loop
fnstenv
fiadds
inc
adc
aad
push
dec
pop
sub
push
xchg
into
pop
push
inc
imul
push
loopne
in
and
outsl
fnstsw
push
clc
cld
inc
sahf
adc
aad
sbb
mov
xor
nop
out
pop
push
jnp
lcall
scas
jb
inc
or
ljmp
shrl
push
push
scas
pop
or
add
fwait
dec
int
stos
fists
sbb
aam
xchg
push
dec
sbb
sub
sub
jbe
lock
rcr
jb
insl
gs
das
scas
bound
push
pop
frstor
xor
aad
ja
out
push
xchg
pop
addr16
int
push
das
pop
mov
push
and
aad
out
rcrl
sub
pop
cld
lea
pop
sahf
ljmp
xchg
fnsave
sbb
adc
aas
sbb
pushf
or
sbbb
xor
xchg
cmp
sbb
subl
stos
shrl
les
stos
mov
sbb
fucomp
rorl
inc
popf
sub
push
les
stos
mov
sahf
fcompl
xchg
decl
adc
push
insl
imul
mov
and
sbb
aaa
roll
add
sbb
and
fxch
inc
shll
mov
push
or
sub
push
fcoml
pop
xchg
inc
aam
sbb
rcrl
sahf
les
adc
sti
dec
xchg
in
xlat
sbb
mov
movsb
out
movsb
repnz
ffreep
imul
fdivrs
dec
sbb
rcl
cli
scas
pop
fisttps
add
cmpsb
mov
movsb
mov
les
mov
scas
divb
xchg
xchg
fcomps
jno
add
add
push
into
push
mov
lods
icebp
cltd
jge
xlat
push
negb
imul
xor
xchg
pop
sbb
fdivrp
xchg
enter
sbb
push
adc
loopne
lret
fisttps
rolb
int3
pushf
sub
popf
out
jb,pt
fcoml
pop
mov
scas
push
sbb
xor
imul
pop
mov
fisubl
lods
sub
out
loop,pt
push
push
pushf
aam
insl
mov
scas
in
cld
popf
push
push
movhps
inc
xchg
cmp
cmp
sbb
push
sub
sub
lods
in
in
mov
push
sbb
push
sbb
push
or
push
push
stos
push
mov
pop
jns
push
roll
adc
push
push
daa
jae
leave
push
dec
inc
mov
mov
xor
mov
lret
out
mov
fucom
xchg
push
pop
mov
insl
push
push
push
push
adc
xor
pop
in
fnstcw
cmp
fists
inc
push
cmp
imul
sub
xlat
push
pop
cmpsl
sbb
inc
scas
adc
dec
xor
xchg
push
push
ss
pushf
cmp
out
push
fimuls
popa
je
rcll
dec
mov
and
mov
aas
mov
dec
xchg
sub
push
adc
pop
test
pusha
addr16
xchg
lods
xor
lret
dec
outsb
fiaddl
sbbl
les
sbb
or
sbbl
xchg
bndldx
push
xchg
ljmp
xchg
inc
pop
scas
adc
or
push
or
pop
aad
add
test
inc
imul
dec
push
into
push
push
push
dec
jb
xchg
mov
sbb
sub
xchg
aam
or
add
dec
add
lret
sbb
xchg
leave
rcrb
push
fistpl
dec
jbe
xchg
imul
push
sub
adc
ljmp
jne
cmp
push
pop
adc
pop
inc
xor
mov
xchg
or
stos
pop
cmp
inc
cltd
mov
leave
mov
addr16
mov
test
test
call
sbb
xlat
ds
arpl
das
lock
push
push
push
mov
mov
sub
leave
inc
stos
xlat
mov
xchg
loopne
ficomps
sbb
push
je
push
xchg
adc
push
pushf
pop
mov
cltd
loop
das
sahf
sub
add
sbb
adc
push
out
and
mulb
jb
xchg
mov
cmp
roll
dec
sbb
pushf
sub
push
adc
or
cmpsb
xchg
xchg
adc
fidivs
notb
sub
leave
xchg
sbbl
stc
mov
inc
faddl
and
push
and
sbb
mov
pushf
xchg
test
jecxz
fadd
push
sahf
lcall
fwait
push
cmc
push
mov
fidivl
mov
out
mov
adc
xchg
cmp
xlat
xchg
sahf
mov
xchg
adc
add
bound
or
les
insb
or
outsl
rorb
pop
xchg
cli
inc
push
push
adc
xorl
fstl
xchg
scas
and
addr16
mov
inc
pop
aas
subb
push
nop
insl
mov
adc
mov
int3
les
les
inc
not
pop
filds
xchg
frstor
ljmp
negl
xchg
mov
pop
sbbl
pop
push
out
push
add
xchg
loop
pop
popf
lods
mov
rcll
repnz
mov
xor
push
fimuls
pushf
das
xchg
push
inc
push
inc
inc
dec
adc
hlt
sub
gs
adc
pushf
sub
fcmovu
aad
bound
adc
addb
cltd
adc
sub
scas
aad
pop
fisubrs
rclb
cmc
imul
fmull
int
inc
cltd
push
popf
sahf
pop
mov
pop
adc
xchg
sbb
push
push
inc
sub
lret
aad
shrb
xchg
cmpb
add
push
xchg
sbb
jno
sbbb
xchg
xchg
pop
aam
sbb
dec
roll
fstpl
sbb
aam
or
xor
popf
xchg
mov
in
mov
mov
das
outsb
cmc
mov
fmull
push
adc
fdivrl
aaa
add
add
adc
add
and
push
inc
adc
sbb
dec
push
sub
jp
dec
push
jle
sub
ret
add
rcrb
pop
mov
test
sarl
mov
jb
pop
push
adc
dec
rcrl
out
push
je
push
jg
push
sbb
imul
or
inc
xchg
aas
inc
xchg
inc
sqrtps
add
xchg
sub
push
mov
mov
andb
cmpsl
cmp
lret
inc
sahf
aam
outsl
or
pop
and
sbb
inc
das
xchg
ret
push
fnsave
xor
scas
rcrl
mov
adc
pop
xchg
fwait
xchg
insl
sbb
scas
outsl
adc
cmp
test
fwait
rcr
mov
add
or
xor
imul
sahf
sbb
add
mov
xchg
shrb
and
test
cltd
xchg
ret
inc
nop
push
ret
stos
sub
out
shrb
push
sbb
int3
inc
outsl
adc
clc
gs
push
inc
xchg
cld
lret
xchg
xchg
fmul
inc
aad
dec
ret
mov
xlat
adc
push
xchg
cmp
inc
xor
sbb
stos
mov
sbb
cmp
rorb
xchg
aad
push
push
popf
sbb
in
ficoml
mov
add
pop
push
mov
xchg
add
bound
adc
and
addr16
add
push
out
stc
and
push
out
imul
int
sbb
inc
xchg
ss
sub
test
shll
push
test
xchg
sbb
shll
and
call
mov
outsl
enter
mov
dec
flds
push
push
sbb
leave
jno
or
xchg
lret
clc
cmp
ret
sahf
repz
cmp
test
sbb
rcl
dec
icebp
push
sbb
jl
mov
ljmp
shrb
test
jmp
mov
leave
scas
fbstp
inc
push
sbb
ljmp
push
aas
cmp
inc
sub
das
inc
xchg
aad
sub
pop
xchg
inc
mov
dec
cmp
adc
xlat
gs
sub
mov
pop
sbb
stos
cwtl
pop
lock
sbbl
outsl
sub
dec
and
push
adc
insl
dec
fldcw
lods
mov
xor
les
xchg
add
pop
mov
xchg
ljmp
jp
cmp
add
pop
movsb
inc
iret
adc
and
sbb
mov
sar
aam
out
sub
xchg
sub
call
sbb
imul
push
lods
pop
aam
mov
cmc
adc
push
fcmovu
mov
sbb
cmpsl
popf
inc
ss
scas
mov
and
xchg
aas
cld
sbb
adc
or
sub
jbe
or
jb
and
push
adc
nop
call
cltd
jg
pop
push
insl
push
and
xchg
or
push
int
stos
repnz
shrl
adc
les
sbb
mov
scas
pop
mov
push
xchg
and
cmp
and
or
sub
rorb
cltd
sbb
xchg
xlat
pushf
inc
push
notl
pop
fdiv
mov
mov
jae
adcl
lret
outsl
and
pop
stos
addb
xlat
sbb
mov
sti
or
push
and
xchg
sub
mov
xchg
add
int3
xchg
ljmp
mov
xchg
iret
cli
lea
aaa
call
adc
subl
lea
sbb
popf
in
sbb
inc
add
addb
rcr
test
pop
inc
xlat
pop
sub
lods
js
xchg
aad
fimull
mov
dec
xchg
push
fisubrs
rcrl
push
jne
mov
enter
or
push
mov
lods
sub
adc
add
fstpl
out
ljmp
das
lods
sbbl
fisubs
call
cmp
stos
add
outsl
ljmp
xchg
ljmp
das
lret
adc
mov
ljmp
lret
push
adc
cmp
inc
adc
fsubrl
sub
lahf
loop
orl
fdivl
adc
cs
inc
xlat
scas
rolb
jg
test
pop
sti
inc
outsb
pop
insl
cmp
pop
aam
mov
ljmp
inc
fistpll
sbb
sbb
rcll
pop
cmc
sbb
daa
mov
mov
fisubrs
push
fnstenv
cli
add
cmp
aad
cmp
cli
inc
push
push
mov
adc
and
mov
xchg
cmp
popf
test
out
sbb
jmp
xchg
inc
sbb
arpl
sbb
sbb
push
stc
sbb
rcll
jbe
adc
out
push
imul
enter
rcll
or
fstl
sub
lods
adc
aaa
xchg
ljmp
xchg
imul
lock
inc
sbbb
fstps
cs
ljmp
xchg
adc
cwtl
add
fwait
inc
pop
out
xchg
testb
popa
fcoml
push
out
xor
call
inc
and
push
cmp
cmp
cmp
sub
mov
gs
inc
inc
rcrl
fisubrs
push
jmp
leave
xchg
push
int3
mov
fsubl
popa
xchg
iret
repnz
sub
ds
pop
loop
push
sti
pop
adc
sbb
fs
pushf
dec
fmul
sbb
pop
mov
adc
mov
jecxz
jl
ror
sbb
jmp
icebp
ss
and
inc
pop
push
jl
jmp
stc
adc
add
or
imul
sub
adc
mov
rcll
mov
aad
push
fs
push
leave
sub
lea
and
or
pop
fstl
cltd
pop
mov
rorb
and
out
mov
sbb
mov
inc
outsl
lcall
add
xchg
xlat
dec
push
test
fisubrl
adc
mov
lods
sbb
into
popf
xchg
clc
xchg
pop
cmp
mov
pusha
std
xchg
xchg
lcall
pop
ret
repnz
fisubl
jp
jo
clc
jg
pop
inc
mov
fisubrs
adc
or
adc
je
ljmp
fists
xchg
call
scas
in
sahf
test
lods
push
cmp
pop
dec
pop
mov
in
push
stos
or
arpl
ja
push
sbb
push
bound
pop
sbb
pop
aad
mov
adc
ficomps
adc
mov
stos
cli
insl
test
lods
xchg
bound
pop
notb
hlt
fs
cmp
jns
mov
mull
push
push
push
push
xchg
jl
adc
push
shlb
fidivs
push
loop
addl
dec
inc
cmp
sti
f2xm1
and
das
jmp
dec
or
inc
sbb
aas
fidivrs
stos
push
xor
adc
out
and
lea
fists
xchg
xchg
dec
mov
js
xor
push
shrb
sbb
adc
pop
push
imul
stos
push
dec
pop
stos
aas
leave
popf
dec
cmpsb
mov
sbb
inc
xor
in
cwtl
rorl
loopne
push
inc
sbb
adc
xchg
jg
shll
aas
mov
pop
cwtl
dec
in
adc
sub
outsl
sub
jle
cwtl
rcrl
cwtl
mov
or
sub
push
loop
inc
sub
jg
stos
pop
inc
cwtl
jl
xchg
stos
jg
cwtl
das
sub
mov
cltd
movsb
imul
sub
cltd
cmp
pop
lds
dec
inc
cwtl
movsb
sub
sub
sub
fsubs
lahf
sbbl
cwtl
sbb
lahf
in
mov
in
fdivr
pop
xchg
adcl
inc
sbbb
xchg
adc
pop
push
imul
adcl
xlat
push
inc
sbb
push
scas
pop
adc
pushl
test
hlt
into
outsl
mov
mov
js
lods
adc
das
xchg
push
mov
fistps
pop
aam
sahf
push
ds
les
and
iret
mov
jnp
pop
nop
push
push
mov
push
es
lret
push
call
push
decb
push
xor
adc
sahf
int3
inc
sub
pop
inc
fadd
in
mov
adc
cltd
jae
aam
out
xor
fnsaves
out
loop
cmp
dec
xchg
mov
jbe
xor
mov
std
cmp
xchg
decb
adc
fistpl
pop
das
sub
in
or
inc
cwtl
push
jne
stc
arpl
xor
xchg
dec
adc
push
push
xchg
call
inc
popa
add
xchg
popf
or
in
lods
add
adc
mov
icebp
mov
sbb
sahf
mov
inc
xchg
aam
push
inc
add
push
adc
mov
push
sub
add
xchg
adc
mov
fsubrl
pop
stos
imul
lds
sub
pop
push
mov
sbb
pop
and
sbb
stos
fsubrl
scas
jp
gs
add
cmp
sub
in
ja
shlb
scas
xchg
stos
push
movnti
mov
loopne
and
adc
popf
push
mov
sub
push
ret
imul
enter
sbb
outsl
push
xchg
aam
pushf
outsb
pop
loope
xchg
mov
inc
ljmp
push
cmp
popf
mov
pushf
xor
xchg
aad
push
jbe
sub
rolb
xchg
mov
jmp
xorb
rcrb
mov
mov
pop
imulb
pop
xchg
push
push
push
push
lcall
fs
sub
xchg
add
mov
push
outsl
xor
rcpps
das
test
xchg
sbb
adc
popf
lods
adc
xchg
push
sub
lret
pop
sbb
push
adc
dec
pop
test
scas
scas
jno
dec
jb
xlat
adc
pushf
repz
add
inc
sarb
add
ljmp
inc
hlt
call
pop
pop
ficomps
sub
sbbl
push
push
loop
xchg
sub
sub
adc
xchg
pop
xchg
push
pop
rcrl
int
push
push
xlat
out
clc
mov
adcb
stos
and
fsts
push
shrl
xchg
adc
inc
push
call
mov
adc
xor
ficoms
sub
fistps
hlt
xchg
das
mov
xchg
scas
add
xchg
jl
pop
fwait
inc
lds
dec
jge
imul
and
in
in
xchg
add
cltd
sbb
push
call
push
out
dec
adc
and
sahf
orl
test
push
jnp
inc
xlat
xchg
int
sub
sbb
aam
push
stos
ss
ret
ret
loop
dec
add
pop
adc
inc
lods
lret
pop
sarl
dec
xchg
pop
dec
pop
push
xchg
outsl
dec
dec
adc
cmp
inc
jno
or
push
fldenv
dec
popf
sbb
mov
push
ljmp
outsl
das
rolb
inc
mov
fmull
xchg
stos
inc
mov
mov
mov
movsb
and
divb
adc
and
mov
pushf
cmc
loope
mov
rcrb
cli
inc
sbb
mov
sub
xchg
out
int3
jae
sahf
insl
inc
popf
fiadds
inc
pop
push
loop
mov
cmp
sub
push
sub
push
pop
movsl
xor
fstl
push
or
inc
outsl
outsl
add
lods
dec
adc
inc
xchg
imul
fcmovnu
sub
shr
or
pushl
add
mov
sbb
xchg
jge
push
ljmp
das
imul
pop
pop
insb
lcall
nop
fiaddl
mov
dec
push
imulb
jo
inc
jge
push
mov
jne
push
popf
loop
jno
xchg
ljmp
inc
insl
sbb
push
adc
adc
xlat
cs
xchg
pop
mov
adc
addb
hlt
fistps
mov
cwtl
rorb
ss
lcall
add
scas
push
add
sub
xchg
push
dec
mov
fsubrs
and
or
ja
outsl
imul
sub
push
push
xchg
lods
hlt
xlat
xchg
cmp
movsl
pop
mov
incb
push
cmovge
sbb
scas
xchg
scas
aas
aam
and
popa
pop
cmpsl
adc
add
movsl
fidivrl
cmp
std
adc
repz
adc
push
adc
pop
mov
mov
pop
cmp
outsl
mov
jmp
push
inc
les
ficoms
rcll
xchg
pushf
fstl
fists
iret
cwtl
inc
std
cmpsl
sub
jb
mov
lret
inc
out
pop
mov
adc
add
add
cltd
sub
leave
fmulp
sbb
mov
lods
es
ljmp
xlat
icebp
in
dec
push
fldenv
xchg
pop
cmp
push
sub
mov
sbb
cmp
les
xchg
pop
jmp
ret
sahf
xchg
stos
nop
push
adc
xchg
push
bound
push
and
lcall
mov
cmp
fcmovnb
push
gs
stc
lret
xchg
push
xlat
mov
sbb
into
adc
into
hlt
test
pop
push
shl
lock
pusha
aaa
dec
mov
pop
bnd
popf
xlat
adc
test
ficoms
pushf
fistl
cltd
out
add
xchg
sar
inc
das
pop
add
andl
sbb
xor
and
jge
adc
push
aas
push
rclb
mov
test
sbb
dec
mov
loope
je
scas
inc
and
out
jle
sub
xchg
adc
xor
jmp
stos
fstps
pop
pop
fildll
xchg
lods
sarl
mov
lcall
and
jbe
filds
push
pushf
pop
loope
sub
sub
std
dec
pop
xchg
pushf
mov
imul
dec
pop
jno
jle
adc
aam
add
sahf
lods
stc
out
das
aad
jle
sbb
les
and
fcoml
push
adc
push
rcr
push
xor
sbb
sbb
outsl
sub
push
pop
sub
out
mov
add
rcl
dec
adc
xchg
das
sbb
fwait
popa
push
add
xchg
imul
pop
xchg
pop
add
rcll
adc
add
xlat
fisubrs
and
gs
cld
popa
inc
push
sub
scas
imul
shll
sbb
adc
or
xlat
rcl
push
and
xchg
cmp
cmp
adc
lcall
ret
sub
push
les
mov
xlat
stos
xchg
out
int
fstp
outsl
mov
sysexit
pop
inc
cmp
dec
xchg
and
xchg
cli
cli
pop
ret
inc
sarb
push
fidivrl
daa
adcl
arpl
push
xchg
dec
mov
or
inc
adc
sbb
popa
xchg
mov
jmp
inc
ds
mov
mov
pushf
test
push
xchg
pop
mov
add
ror
fcoml
jl
inc
xor
sub
test
lds
stos
xchg
push
push
pop
aad
jge
fisubrs
jo
in
add
test
add
inc
push
int3
fidivrs
push
sub
jge
stos
notb
and
rcrl
mov
ficoms
add
sahf
out
push
pop
jle
ret
adc
xor
pop
xchg
push
sub
adc
jo
js
lock
popf
stos
jne
pop
mov
sbb
adc
xor
and
pop
bound
push
xchg
xor
adc
sbb
jb
xchg
push
int3
das
out
mov
add
repnz
and
xchg
test
push
ret
xchg
iret
lods
inc
movsl
inc
sbb
std
mov
xlat
sub
aam
xchg
sbb
pop
push
push
faddl
sbb
mov
adc
inc
cmp
lret
pop
icebp
stc
fbld
xchg
cld
stos
stos
ss
add
xchg
pop
loopne
in
xchg
into
xchg
adc
inc
push
sub
inc
mov
sbb
imul
push
and
jmp
scas
sub
cmp
xor
stos
lret
sahf
aad
jo
rcr
and
sbb
cmp
and
pusha
data16
xlat
mov
xchg
xchg
sahf
xchg
flds
stos
xchg
aam
repnz
call
jns
xchg
and
push
out
cmp
add
sub
pop
pop
push
sbb
add
or
shrl
xlat
mov
xchg
push
pop
test
add
xchg
push
ficomps
sahf
lea
adc
pop
jge
lods
lods
adc
sub
popf
loope
mov
outsl
fnsave
push
sbb
push
lcall
leave
or
jb
add
xlat
xchg
mov
negb
push
mov
imul
setl
or
bound
lock
sub
fdivs
xchg
sbb
adc
pusha
and
bound
mov
lea
sub
sub
add
mov
decl
xchg
fstp
aam
push
lock
addr16
sub
fstpl
call
frndint
sbbb
adc
or
cltd
cmp
dec
and
inc
sbb
xchg
ljmp
jge
adcl
xchg
push
mov
xchg
push
fists
adc
gs
scas
loopne
xchg
inc
add
aad
sub
leave
cwtl
aam
dec
pop
adc
xchg
cltd
negb
pop
mov
faddp
cmp
adc
iret
test
xchg
mov
rcl
leave
mov
push
sbb
push
inc
push
fiadds
jns
add
and
sbb
push
push
push
inc
movsb
xchg
fadds
aas
pop
cmp
add
nop
push
push
jbe
mov
sub
inc
sub
and
sbb
jge
lret
test
pop
aam
mov
cld
xor
mov
adc
js
fsubrs
sbb
mov
pop
push
aam
sub
int3
fistps
pushf
out
inc
mov
push
stos
xchg
jge
xchg
jmp
rol
adc
and
cld
pop
pop
xlat
xor
enter
dec
repnz
test
sarl
aaa
adc
jbe
frstor
in
aam
xchg
mov
lods
insl
push
xchg
mov
fst
xor
xchg
pop
xchg
ror
adc
push
pop
sbb
insl
into
sbb
inc
inc
push
outsl
dec
xchg
in
movsb
hlt
adc
icebp
mov
pop
push
aad
sub
jo
push
mov
leave
movsb
lods
stos
ss
add
add
mov
js
sbb
imul
inc
or
sahf
addr16
aad
xchg
sbb
push
rcrl
rcll
xchg
sbb
test
mov
fcomps
dec
sbb
ljmp
cmc
inc
fsubp
pop
in
push
pop
aad
adc
xchg
loopne
mov
addr16
in
test
pop
add
pop
push
xor
mov
shlb
cmp
rcrl
mov
inc
pop
sub
push
cmp
push
jb
imul
cmp
adc
cwtl
scas
adc
filds
adc
inc
in
fsubl
cld
adcl
inc
jecxz
mov
and
push
dec
inc
fstpl
sbb
and
dec
in
shrl
les
push
sbb
out
and
mov
push
add
fstpl
aad
loop
xchg
imul
xchg
out
adc
cmc
lcall
ss
jo
pop
stos
sahf
pusha
lret
jg
aam
pop
push
pop
dec
push
xlat
xchg
pop
in
jmp
das
mov
xchg
dec
mov
js
cmpsb
pushf
add
into
push
int
adc
mov
xchg
mov
imul
push
pop
inc
cmp
fsubrl
pop
xchg
push
sub
sbb
sub
loopne
mov
adc
sub
pop
dec
test
je
imul
push
fistl
xor
or
push
fwait
xchg
sub
daa
sub
xor
mov
jb
pop
inc
leave
jl
repz
sbb
mov
xchg
cwtl
push
lret
push
test
ljmp
pop
sbb
outsb
inc
jmp
xchg
loopne
fistpl
js
loop
inc
push
andb
aam
adc
push
aam
pushf
xchg
sbb
popf
out
inc
movsb
shrb
outsl
stos
shrb
popf
mov
xchg
addr16
add
clc
movsb
jb
mov
jg
insb
pop
xor
xor
sub
imul
fildl
mov
xchg
mov
insb
pop
dec
cltd
add
aas
mov
xor
lret
add
adc
loopne
push
mov
pop
push
into
adc
jge
push
mov
sbb
add
xlat
dec
pop
xchg
mov
std
mov
inc
jnp
push
push
dec
mov
cmp
push
pushf
sbb
push
add
cltd
xchg
mov
pop
or
sub
sub
pusha
mov
xor
xor
add
std
mov
fidivrl
ljmp
mov
push
mov
fld
mov
in
lret
xchg
mov
mov
mov
jns
popf
addr16
ljmp
inc
mov
sahf
inc
fsubrl
sbb
adc
fidivs
imul
stos
sarl
outsb
xor
pop
push
sub
hlt
inc
test
xchg
das
leave
push
pop
fmull
sub
stos
sbb
leave
sti
or
sbb
and
and
push
jno
mov
das
imul
jge
xchg
aad
xchg
adc
ljmp
jo
inc
outsl
insl
mov
push
pop
cmp
pop
test
inc
scas
adc
outsl
dec
pop
sbb
mov
push
sub
pop
jbe
negb
jae
rcl
sbb
xchg
stos
mov
ljmp
shl
fbstp
add
insl
into
pop
xlat
inc
xorb
stos
lcall
lods
xchg
adc
jge
pushf
xor
adc
repnz
lret
je
cmp
adc
pop
xchg
inc
and
cmp
out
aad
fldenv
std
xchg
in
adc
sbbb
cmpsl
fstpl
sbbl
push
sub
shll
sbb
and
ficompl
push
xor
fwait
pop
and
shlb
xchg
mov
leave
push
mov
xchg
sub
adc
sbb
out
lret
shll
ljmp
mov
add
aas
scas
sbb
adc
pop
fcompl
pop
fcomip
lock
mov
xchg
jno
and
sbb
pushf
push
fsts
movsl
mov
adc
addb
fwait
xor
rcr
mov
dec
push
xchg
stos
inc
scas
mov
rol
and
pop
cltd
dec
lea
fldcw
sbb
movsl
aad
jo
adc
mov
inc
vpmacsdd
out
push
mov
cmp
push
adc
sub
jo
in
pop
das
xor
sub
add
cmp
pop
inc
pop
lret
loopne
sub
xlat
rcl
adc
cmp
push
push
xchg
xor
push
xchg
mull
inc
imul
sub
push
sbb
ret
pop
fists
incb
push
add
sbb
inc
aas
pop
insb
and
push
add
dec
adc
shrb
fiadds
insl
popf
leave
xchg
sbb
dec
push
mov
les
push
shr
sub
out
push
xchg
xchg
shlb
int
xchg
xchg
or
test
stos
sub
inc
stos
sub
pop
icebp
inc
dec
inc
mov
das
subb
nop
push
or
rcll
xchg
shll
call
fwait
imul
test
xchg
pop
mov
sub
ret
push
enter
push
mov
add
insb
jno
xchg
push
sbb
cmp
js
push
xchg
stos
popl
popf
pop
xor
inc
scas
push
pop
pandn
and
xchg
mov
dec
popf
popf
sbb
int
outsl
stos
sub
pop
jb
mov
dec
in
in
iret
xchg
cmp
cmp
stos
and
sbb
lods
add
rcll
lods
adc
js
pop
fdivrs
data16
pop
outsl
add
inc
test
out
push
leave
sbb
push
sbb
push
fwait
sahf
stos
lcall
push
out
mov
add
dec
pop
push
mov
push
xchg
jle
adc
or
fcoml
xchg
pushf
lods
pop
push
popf
xchg
sub
xchg
fisttps
pop
cmc
mov
fistpll
pusha
sub
push
fwait
shr
push
sub
sub
imul
sbb
decl
adc
and
inc
sub
xchg
out
fists
push
xchg
sbb
or
push
fcoml
in
pushf
insl
cs
xchg
pop
movsb
pushf
adc
push
fcmovne
popf
ror
sub
fistps
sub
xor
cmp
add
cmc
das
cmc
popf
sub
and
sub
pop
adc
fmuls
in
cmp
enter
fcmovnu
leave
sub
push
pop
std
adc
enter
xlat
push
bound
xchg
filds
pushf
sub
rcll
lea
push
scas
lock
aad
jmp
rclb
adc
mov
push
push
stc
int3
fstpl
mov
ret
stos
jbe
mov
push
sbb
pop
adc
sub
xchg
shl
in
mov
ljmp
xchg
bound
inc
insl
mov
aam
mov
jge
lods
sbb
ja
sub
test
adc
and
icebp
inc
dec
mov
pop
jge
xchg
jl
add
cltd
mov
call
xchg
xchg
ror
outsl
push
xchg
cmp
mov
rcll
push
cld
pop
add
xchg
mov
arpl
stos
mov
pop
dec
imul
push
mov
sbb
add
pop
sub
push
xor
push
push
push
mov
out
sbb
push
leave
inc
push
ffree
popf
ror
inc
xlat
sbb
aad
push
and
pop
pushf
les
out
les
push
sub
xchg
xchg
xchg
ret
mov
push
dec
stos
inc
xor
mov
xchg
sbb
mov
imul
mov
push
jne
cmc
ljmp
cmp
dec
into
imul
push
adc
pop
cmp
popf
aad
les
xor
push
add
pop
xchg
and
xchg
ljmp
pop
cwtl
outsl
dec
push
lcall
xchg
push
pop
sub
mull
insl
sahf
push
sbb
mov
or
and
sarb
cmp
cmp
push
sbb
push
xchg
xchg
sahf
push
push
test
xchg
adc
sub
rcl
imul
xor
push
in
in
sbb
call
jecxz
push
mov
xor
and
std
iret
push
pushf
cltd
ds
icebp
adc
imul
xchg
sbb
mov
movl
mov
lods
add
push
repnz
lods
pop
fidivrs
sahf
scas
sub
jb
inc
inc
stos
clc
cli
ds
xlat
bound
aad
sahf
dec
adc
push
xchg
aad
xchg
pushf
push
pop
cltd
aam
scas
adc
or
mov
sbb
push
mov
xchg
mov
es
das
xchg
sbb
push
scas
xchg
pushf
rsm
into
push
fisttps
xor
imul
popf
xchg
divb
aam
cmp
decb
ficomps
push
push
or
adc
aam
dec
das
jmp
outsb
int
push
push
mov
lods
jl
jle
out
rol
ror
sbb
mov
std
mov
xor
mov
fsubr
push
out
add
scas
xor
xchg
scas
shrl
aam
rolb
pop
push
sbb
dec
mov
adc
adc
or
gs
ss
pop
mov
jge
pop
jae
push
mov
test
rclb
lcall
out
mov
cmp
dec
inc
jle
scas
adc
push
das
imul
fsts
lcall
dec
movsb
pop
push
fsubrl
ficoms
xchg
popf
insl
subb
sub
insl
mov
push
and
fstl
dec
inc
mov
pop
adc
jbe
adc
push
push
aam
xchg
out
adc
sbb
ljmp
push
les
ljmp
jl
push
roll
push
mov
std
sub
xchg
aad
fisttpll
das
xchg
adc
adc
push
inc
pop
popf
ds
adc
xor
cltd
inc
xchg
stos
cmp
aad
push
jge
faddl
pop
push
inc
push
jmp
les
inc
fwait
out
mov
lcall
shrb
cmp
adc
push
movsl
ja
pusha
and
pop
pushf
add
jae
mov
outsb
cmp
xchg
push
stc
pop
enter
inc
in
xchg
push
jb
loopne
xchg
and
pop
jl
push
lods
push
pop
es
xchg
fstl
shrb
pushf
loop
xchg
jecxz
lret
adc
movsb
cwtl
rorl
mov
shlb
sbb
sbb
aam
subl
pop
je
je
add
push
and
ficomps
and
test
push
cmp
lcall
push
push
fnstsw
fstps
inc
testb
mov
add
push
in
mov
xchg
xor
sbb
xchg
pop
add
sub
std
aas
push
mov
fcompl
ret
xlat
out
addr16
sub
rorb
xor
loop
sahf
pop
push
cmp
faddl
and
inc
and
jl
xor
adc
push
xchg
mov
mov
push
push
push
out
mov
mov
out
daa
in
in
pop
xchg
mov
xchg
das
ficomps
pop
fwait
popf
lret
and
stos
and
xchg
test
cmove
push
fwait
rcll
ret
pushf
loop
ret
bound
add
test
aad
xchg
fidivrs
add
lret
mov
das
xchg
mov
jmp
xchg
dec
das
in
je
xchg
fcompl
adc
mov
bnd
sbb
outsl
es
push
adc
ret
clc
mov
imul
xchg
push
cmp
roll
lock
insl
stos
xlat
xchg
xchg
push
push
stos
jo
fistpll
push
pop
adc
adc
mov
aam
popf
inc
aas
lock
inc
pop
push
rcrl
leave
adc
xchg
push
inc
stos
pop
or
add
sub
dec
pop
mov
int3
fists
shrb
jle
push
fnstsw
add
adc
push
subb
aam
adc
mov
cs
adc
out
lea
xor
cmp
lea
xchg
sbb
add
xchg
pop
stos
fimuls
ror
jns
les
or
mov
aad
adc
ljmp
stos
call
sbb
push
mov
push
adc
sub
ljmp
pop
inc
push
and
stos
push
hlt
cmp
shll
push
insl
bound
lfs
out
inc
sub
out
xchg
out
sbb
mov
shrb
sbb
or
pop
adc
pop
xor
sbb
add
ret
lret
push
add
push
xlat
sbb
mov
sbb
sub
data16
mov
xchg
sbb
pop
dec
sbb
inc
movsl
sub
xchg
pop
cmc
inc
call
push
sbb
adcl
sub
adc
add
dec
push
fucomip
push
sbb
pop
inc
add
pop
pop
add
shr
leave
adc
ret
dec
popf
push
xchg
aam
pop
rolb
insb
lcall
inc
out
fisttpl
add
ljmp
and
aad
aaa
sbb
xchg
lret
mov
inc
roll
lea
fsubrp
popf
lret
pop
mov
inc
pop
or
and
and
adc
mov
add
fsubrl
cs
sub
into
aad
sahf
int3
adc
decb
and
popf
ret
lea
std
fldenv
push
hlt
push
push
sbb
insl
cwtl
rcrl
add
or
adc
inc
and
cwtl
sub
pop
cmp
sbb
addl
xor
adc
fs
std
xchg
das
adc
ja
xlat
in
in
fbld
outsl
in
adc
nop
push
js
mov
push
sbb
fstl
xlat
inc
cltd
pop
mov
scas
push
lods
icebp
push
adc
fnstcw
fiaddl
jp
imul
stos
leave
fwait
xor
inc
filds
xchg
sbb
jo
aam
fildl
adc
dec
mov
test
aad
inc
out
stos
xchg
pop
movsb
inc
pop
adc
stos
or
hlt
add
xchg
loop
fists
jecxz
xchg
push
out
push
cmpsl
xchg
loop
sbb
lcall
mov
push
insl
rcr
dec
xchg
nop
mov
es
mov
cmp
and
mov
add
mov
test
hlt
cltd
mov
jb
loop
popa
push
inc
popf
add
add
mov
push
inc
cli
int
push
popf
xchg
je
pop
cltd
jb
div
xlat
scas
mov
leave
fcompl
fisttps
lods
adc
fsts
in
aas
xchg
lcall
rclb
push
mov
pop
nop
ljmp
scas
outsl
fadd
and
xor
jmp
inc
inc
jmp
mov
xor
mov
pop
das
pusha
loope
add
xchg
cmp
xchg
leave
cwtl
inc
sbb
pop
outsb
jbe
or
ror
movq
hlt
cltd
xchg
push
dec
mov
push
repnz
push
popf
sbb
fisttps
imul
sbb
fs
cltd
or
lret
lret
fstpl
repnz
pshufw
outsl
call
cmp
aad
inc
cmp
das
and
fnstcw
adc
add
cwtl
push
lock
push
cltd
push
jmp
fsubrl
adc
pop
fdivl
adcl
pop
scas
in
xchg
aam
loope
mov
push
xchg
pop
sbb
out
sub
pusha
pop
fdivl
or
push
sub
pushf
out
push
cwtl
pop
mov
inc
sub
cmpsb
push
int3
inc
in
adcl
test
int
outsl
stos
hlt
in
push
sbb
repnz
in
cli
cltd
pop
clc
das
fstp
lods
jecxz
push
adc
mov
push
popf
xlat
add
xchg
sbb
sub
shll
int
adc
stos
sarb
push
push
xor
sbb
push
mov
lods
jg
out
nop
mov
sbb
mov
xor
jb
stos
push
enter
loope
sub
lods
mov
jo
lret
movsl
inc
or
das
dec
or
sub
cmp
lods
int
xchg
pop
call
movsb
mov
inc
imul
and
loop
sbb
faddl
sbb
adc
push
push
inc
xchg
andl
xchg
hlt
adc
push
test
fcompl
lea
inc
add
fistl
pop
add
stos
fldt
xchg
dec
outsl
sub
push
ficoms
stos
movsl
add
xchg
loop
sbbl
adc
adcb
call
and
dec
fiadds
rcrl
mov
jne
scas
ds
pushf
mov
pop
pop
fildll
sub
mov
ret
lret
nop
repnz
fdivrp
lock
xchg
sbb
test
cmp
fldt
in
cld
out
jmp
adc
push
gs
jbe
push
fiaddl
xchg
push
sbb
lret
and
scas
push
mov
jo
push
test
xchg
stos
leave
stos
les
pop
sub
pushf
adc
popf
xchg
fcomps
jg
adc
mov
movsb
cli
das
mov
test
mov
push
xchg
testb
sub
rcrl
pop
xchg
imul
fists
xchg
xor
das
imul
sbbl
nop
int3
xchg
push
mov
rorb
push
xchg
and
xchg
sahf
stos
lret
movsb
lret
pop
sub
imul
sbb
pop
push
jno
adc
push
push
lea
xor
insb
xlat
sbb
pop
ja
fstl
pop
mov
pushf
mov
enter
lcall
jg
ret
or
stos
xchg
push
rcll
adc
int
push
jns
pop
mov
sahf
adc
out
jecxz
aam
push
and
iret
jge
imul
cmp
sti
scas
in
sahf
bound
mov
adc
jb
adc
popf
test
stos
clc
push
jge
les
xchg
xchg
adc
rcr
inc
loope
sub
jmp
fidivs
pop
add
fisubrl
mov
fnsave
sub
mov
pop
xchg
in
and
mov
fcoml
push
pushf
aam
pop
rclb
xchg
je
xor
inc
stos
xor
jecxz
adc
jmp
sub
aam
out
sbb
mov
int3
xor
cmp
push
loop
dec
mov
lahf
test
jbe
cltd
mov
sub
sub
outsl
sub
adc
mov
daa
adc
repz
dec
pop
xchg
mov
cltd
push
sbb
out
cmp
xor
sbb
ret
sbb
inc
roll
lock
and
aad
stos
aad
sbb
push
sub
lods
stc
add
fldcw
stos
sbb
sub
mov
inc
rclb
jb
xor
adc
shrl
bound
sub
fmull
ret
adc
pextrw
xchg
fwait
push
push
fwait
push
sbb
lcall
inc
sub
inc
cmp
stos
mov
mov
push
lock
shll
fstl
pop
xchg
and
add
shr
xchg
jge
adc
lea
pop
pop
push
cmc
mov
push
in
rorb
push
mov
inc
popf
rcrb
push
mov
lods
fwait
popf
fstl
aas
pop
fldcw
mov
rol
mov
in
jnp
shrl
mov
std
sub
cmp
adc
sbb
sahf
push
xchg
adc
sbb
mov
into
dec
clc
pop
cltd
fsts
jae
loopne
scas
dec
sub
inc
mov
adc
setle
push
push
xor
out
push
pop
sbb
bound
sbb
das
repnz
ja
int3
int
leave
push
push
xchg
fstps
pushf
aam
rolb
fdivrl
movsb
pop
jns
lea
adc
aad
test
push
pop
push
out
push
add
cltd
add
stos
out
rcrl
outsb
ret
fs
bound
into
iretw
leave
mov
jnp
push
and
stos
add
push
sub
aad
outsl
sbb
cli
jbe
or
xchg
xchg
ja
inc
pop
loop
push
das
xchg
inc
sbb
mov
push
cld
int
xchg
pop
rcl
shll
aas
mov
add
cmp
cld
pop
adc
push
push
cmp
stos
and
xorl
pop
push
inc
sub
xchg
sbb
inc
rcrl
mov
in
dec
popf
mov
ljmp
jl
push
mov
push
adc
mov
scas
fbstp
mov
cld
xchg
push
adc
mov
subl
xchg
and
adc
dec
scas
push
push
xchg
stos
lods
fstl
je
aad
xchg
pusha
pop
mov
or
sbb
pop
lods
xchg
sub
test
loopne
decl
sub
pop
mov
or
push
fcmovnb
shll
push
xor
lret
fsubrl
fistps
adc
and
ds
inc
adc
mov
sub
leave
lods
add
inc
in
adc
xlat
push
mov
leave
jg
sahf
outsl
adc
iret
hlt
xlat
sub
fsub
jne
fstpl
push
pop
das
mov
sbb
sbb
jle
leave
adc
sub
adc
insl
rorl
pop
push
add
xlat
push
mov
pop
jmp
imul
ljmp
push
repnz
orps
stos
int3
push
inc
ror
xchg
pop
inc
pop
pop
xor
pop
push
adc
out
ret
sahf
in
cmp
cmc
jmp
aaa
sbb
mov
ljmp
ds
aad
mov
outsl
pop
movsl
xor
insb
xchg
push
and
mov
popf
ja
adc
push
sub
bound
ret
adc
sbb
cltd
shrl
cmpsb
sbb
mov
fdivp
cmp
addr16
insb
lods
sbb
xor
xchg
push
push
xchg
lret
pop
mov
fnstcw
and
sbb
hlt
pop
xchg
mov
and
xchg
mov
mov
daa
in
xchg
jo
jb
mov
stos
out
test
mov
xchg
xchg
fmuls
add
mov
popa
push
add
shrl
inc
dec
xchg
cmp
inc
stos
dec
push
pop
push
inc
or
cltd
cmpsl
adc
mov
loopne
ljmp
sbb
adc
loope
and
aas
mov
sbb
addb
push
lret
or
test
adc
adc
pop
aas
add
rolb
xor
ss
test
sahf
and
sub
inc
or
adc
xchg
sbb
pop
adc
sub
fldcw
xchg
aam
push
xlat
int3
pop
mov
out
ljmp
imul
dec
mov
pop
push
sub
insl
out
inc
adc
xlat
push
adc
push
btr
dec
frstor
mov
dec
pop
push
mov
in
mov
push
cmp
data16
push
pop
push
xchg
mov
adc
jb
add
imul
xchg
push
sub
pop
into
add
inc
mov
or
xor
sbb
iret
enter
pop
mov
mov
adc
fldl
aad
enter
xchg
xchg
fstpl
push
push
bnd
mov
mov
dec
pushf
fisubs
push
push
roll
jmp
mov
es
xchg
lea
push
xchg
xchg
ljmp
push
scas
pop
das
sub
and
adcb
mov
adc
xor
sub
cld
sub
addl
les
jecxz
cltd
scas
xchg
pushf
adc
sbbb
popf
mov
and
push
xor
pop
stos
jo
jae
xchg
out
and
dec
adc
adcb
sbb
jecxz
rcr
frstor
sbb
hlt
lea
pop
pop
imul
sub
adc
mov
das
push
dec
sbb
out
push
scas
xchg
jbe
push
movl
and
push
xor
xchg
push
out
add
das
push
les
ja
add
push
inc
and
jecxz
pop
ljmp
stos
xchg
pop
stos
lods
mov
mov
sub
ret
das
xor
add
les
xchg
jb
inc
ss
addr16
inc
sub
sbb
fmul
icebp
enter
loopne
shl
lahf
jge
xchg
inc
mov
aaa
sbb
ljmp
pop
out
adc
cld
or
xchg
push
lcall
orb
mov
outsl
dec
xchg
fsubrl
mov
ljmp
push
outsl
pop
xchg
in
jge
push
push
rcll
sub
fcomps
lcall
sahf
in
jmp
dec
movsl
push
push
fistps
movsb
adc
inc
das
mov
pushw
adc
xchg
ret
pushf
scas
adc
jbe
dec
cmp
cmc
lea
push
jb
or
xlat
and
testl
and
adc
add
xchg
pop
fmull
imul
push
imul
push
sbb
andb
pop
xchg
out
imul
pop
add
fidivs
fists
sbb
cld
adc
test
repnz
fwait
sbb
push
push
fstl
testb
in
imul
mov
or
dec
das
pop
fstl
sbb
adc
fst
sub
adc
stos
outsb
jno
popa
ficoml
push
popf
ss
pop
sbb
push
outsb
cmpsl
jns
addr16
push
int3
daa
fcmovbe
sbb
leave
dec
add
cmp
shll
jmp
ret
xor
inc
pop
inc
sbb
pop
insl
jle
shll
imul
and
hlt
leave
mov
cltd
or
fcompp
enter
out
shrb
ret
in
xor
sub
lock
movsl
adc
and
cltd
xchg
inc
aam
rolb
stos
enter
outsl
sub
imul
fbld
leave
push
outsl
enter
fidivrs
mov
push
pop
push
mov
inc
sub
outsl
aam
xlat
fcoms
ss
neg
mov
adc
cwtl
ljmp
add
cmpb
outsl
push
adc
mov
sub
fbld
add
inc
pop
pop
adc
inc
cltd
push
pop
adc
mov
ffree
rol
and
pop
cmp
rclb
push
xor
nop
or
stos
and
fldt
out
and
andl
xchg
sub
leave
mov
mov
fnsave
xchg
adc
and
or
xor
ljmp
rolb
xor
adc
mov
add
stos
sub
push
dec
ret
sarb
rcll
xchg
fcomip
xor
xchg
cmp
addr16
adc
ljmp
sub
add
and
aas
add
pop
xlat
sbb
cmc
scas
pop
push
push
xchg
add
pop
inc
sbb
ret
sub
mov
mov
xchg
xchg
fsts
aas
popf
and
les
pop
lret
adc
loop
adc
add
adc
adc
and
popa
flds
sub
stos
lahf
inc
fcompl
adc
pop
lcall
aad
cltd
adc
shrl
mov
mov
jmp
xor
outsl
stos
sbb
scas
pushf
inc
pop
push
inc
insl
cmp
inc
sbb
call
sub
jae
outsl
lret
int
push
stos
pop
xchg
out
addr16
push
push
cmp
xlat
pop
outsl
out
adc
adc
and
out
stos
pushf
lcall
lea
push
cltd
jge
popf
aad
adc
dec
fisubrl
aam
add
pop
adc
outsl
xor
push
jmp
imul
rsm
fwait
pop
sbb
sbb
push
push
inc
out
fldl
outsl
and
mov
adc
jge
test
out
js
xlat
xchg
je
cld
sub
faddp
fcoml
je
repnz
lock
xchg
inc
xlat
mov
decl
int
sbb
xchg
out
subl
fmull
in
sbb
xlat
stos
shlb
movsl
mov
imul
inc
push
push
sub
sahf
xchg
pushf
int3
inc
sub
pop
adc
sub
cmp
mov
cld
addb
xchg
aad
cmp
or
jge
roll
in
out
sub
adc
xor
cmc
mov
add
rorl
inc
stos
pop
xchg
ret
sbbl
jbe
push
faddl
pop
adc
pop
outsb
cmp
jne
popf
hlt
jle
sti
movaps
loop
adc
das
xlat
xchg
inc
jbe
in
mov
pop
sahf
push
pop
push
lea
adc
das
sbb
mov
call
sar
mov
jne
subps
xchg
std
jge
mov
inc
push
inc
adc
cmpb
and
in
and
push
decl
xchg
mov
outsb
push
cmpsl
xlat
mov
enter
ret
push
mov
xor
lea
push
dec
cld
enter
push
or
sbb
mov
imul
cmp
rorl
xchg
outsl
jge
imul
mov
subb
sub
inc
aam
fldcw
pop
add
mov
jno
adc
pop
inc
mov
loope
pushf
mov
inc
fstp
push
jge
pop
push
xchg
add
xchg
xor
mov
xchg
xchg
fldt
lods
jne
out
aas
push
xchg
cmp
mov
ret
xchg
xchg
dec
stos
movsb
cmp
sub
push
and
push
pop
mov
bound
jne
push
xchg
inc
fcomip
notb
mov
add
xchg
stos
push
fstl
nop
or
clc
call
push
cmp
lcall
push
mov
hlt
ret
fsubrl
or
xor
in
das
js
adc
inc
sub
xchg
push
cmp
inc
cwtl
pop
in
outsl
aam
rclb
sbb
ja
dec
xchg
mov
add
out
xchg
dec
cwtl
sbb
enter
pushf
pop
popf
jle
mov
xchg
and
xchg
frstor
sbb
pop
stos
subb
adc
leave
pop
push
pop
aaa
pop
xlat
fsubl
mov
aam
xchg
or
scas
xchg
sub
int
sbb
cltd
out
gs
pop
stos
jo
shlb
lcall
fisubrl
data16
xchg
shr
cmp
fstl
fwait
lods
jns
loop
push
cmpsl
test
add
stos
or
sub
adc
xor
leave
jae
xchg
fistps
enter
inc
fcompl
add
popf
push
int3
sbb
sahf
sub
xchg
rol
pop
sub
dec
xchg
lock
xchg
mov
lods
xor
ljmp
test
ret
pop
xlat
lret
sbb
test
xor
push
pop
stc
in
in
mov
sub
lcall
or
andb
inc
sbb
adc
mov
jo
gs
out
inc
filds
sub
jns
cmp
mov
xchg
sbb
std
popf
ja
xor
sub
xchg
sbb
pop
rolb
ss
cmpsl
stos
xchg
add
in
mov
mov
pinsrw
pushf
inc
cltd
lods
cmp
fxch
movb
mov
cmp
test
punpckhdq
int3
jne
pop
sub
repnz
push
pop
out
cmp
pop
pop
test
add
pop
sbb
loopne
in
push
mov
leave
mov
dec
mov
xchg
xchg
pop
aas
or
push
popf
shrl
sub
cld
clc
pop
mov
push
push
in
aam
xchg
sub
fldl
scas
xchg
adc
inc
popf
pop
rcll
lods
in
stos
lods
shl
aas
push
push
adc
or
xor
leave
sahf
push
dec
adc
pop
xchg
rcrb
push
push
test
scas
adc
push
cmp
aas
ljmp
inc
sbb
dec
shrl
leave
inc
popf
jp
scas
xchg
std
push
mov
sbb
sub
inc
out
sub
add
adc
aaa
rcrl
xchg
sbb
pop
push
sbb
adc
stc
sub
pop
sbb
sbb
into
push
imul
and
seta
add
cltd
or
sahf
sub
xlat
cmp
int
push
xchg
sub
aad
push
inc
xchg
sbb
enter
pop
xor
and
lret
ljmp
lods
rcrl
pop
push
cltd
mov
pushf
outsl
sbb
xchg
pop
pop
ret
ljmp
popf
pop
xlat
pop
nop
sbb
cmp
pop
xchg
mov
add
mov
stos
nop
adc
adc
fwait
xchg
mov
xchg
fldenv
loop
push
mov
fcmovnb
sbb
xchg
je
loop
lods
mov
or
out
add
fsubrp
adc
bnd
lods
fldt
inc
xchg
xchg
inc
std
out
xchg
mov
push
pop
pop
adc
xor
xchg
das
repnz
and
cmp
rcrl
push
mov
pop
notb
rcr
flds
cmpsl
call
dec
push
xchg
roll
pop
in
sub
cltd
scas
fstl
jns
push
pushf
xchg
addr16
dec
mov
xchg
push
pop
dec
popf
xchg
xchg
push
pop
aam
pop
sbb
movsl
cli
xchg
adc
mov
iret
jge
fstps
pop
mov
xor
push
lods
in
adc
js
mov
subl
pop
shl
sbb
mov
mov
mov
xchg
out
pop
aam
popf
mov
jne
pop
add
cld
pop
xchg
xor
sub
icebp
je
in
sahf
les
fmulp
shlb
xchg
mov
and
movb
popf
push
mov
rorb
ret
xchg
xchg
in
mov
xchg
stos
stos
xchg
mov
into
les
adc
imul
sbb
pop
and
sub
rolb
fstpl
adc
adc
shll
pop
scas
add
add
add
xchg
outsl
test
jp
loop
push
mov
loopne
pop
inc
dec
mov
aad
mov
adc
rcrb
lock
inc
out
xchg
adc
call
pop
push
and
push
inc
adc
bound
in
rclb
push
sbb
jno
pushf
sbb
outsl
push
cs
cmp
mov
xor
in
sbb
bound
lock
pop
inc
shll
rol
fstps
sbb
xor
xchg
bound
sahf
mov
mov
and
pop
insl
ret
cmp
scas
mov
push
ret
push
xchg
xlat
adc
fsts
mov
rcr
lea
pop
push
jmp
adc
sbb
pop
data16
stc
sub
sbb
stos
push
shrl
insb
gs
filds
stos
pop
lds
outsl
popf
push
jb
hlt
jb
and
push
aam
pushf
lcall
pusha
dec
rcll
push
pop
shlb
scas
push
xor
subl
inc
adc
jno
mov
std
rcl
into
das
adc
loopne
mov
mov
loope
push
xchg
bound
das
ss
pop
ljmp
push
cwtl
xor
sahf
inc
xchg
ficoms
jo
mov
cmc
sbb
push
push
sbb
lcall
xchg
xchg
outsb
mov
lods
mov
int3
sbb
scas
push
sahf
sbb
or
inc
push
adc
cmp
aad
push
out
shl
jbe
push
mov
push
push
xor
imul
and
sub
push
jae
pop
push
add
mov
and
pop
lret
aad
scas
std
mov
adc
adc
fnsave
push
mov
xor
xor
dec
xchg
ljmp
mov
lock
daa
data16
sub
xchg
pop
push
push
push
repz
add
fldl2e
out
out
xchg
inc
pushf
aad
inc
fbstp
sbb
pop
xchg
sahf
lods
stos
add
out
mov
push
insl
sub
push
xchg
outsl
stos
push
out
loopne
adc
sbb
rolb
jg
daa
jmp
leave
xchg
lret
and
add
xchg
and
fbld
sub
out
adc
push
stos
sub
xlat
outsl
gs
outsl
and
pop
push
sbb
shll
push
add
out
push
pushf
xchg
lods
mov
sbb
insl
push
push
aam
setne
and
pop
rcr
popf
sub
sub
mov
xchg
jb
lods
adc
adc
cmp
jge
inc
xchg
adc
adc
xchg
cmp
shrl
sbb
sub
xchg
xor
sbb
xchg
rorb
inc
out
jmp
xlat
loopne
inc
ds
fstp
in
sbb
dec
cltd
pop
xlat
sbb
push
push
nop
xchg
shl
imul
stos
adc
mov
xchg
pop
add
sbb
out
mov
jmp
or
adc
add
sub
pop
pop
adc
insl
jno
push
testb
adc
imul
xor
mov
xlat
into
pop
mov
sahf
xchg
out
xchg
adc
mov
mov
xchg
fldenv
inc
and
iret
imul
fcmovu
popf
pop
xor
rclb
xchg
add
xor
dec
outsb
popl
push
popf
dec
sbb
push
adc
scas
adc
cmp
sbb
lret
adc
adc
mov
scas
sbbl
dec
les
push
push
inc
xchg
push
loop
adc
sbb
adc
push
sbb
pop
sahf
xchg
mov
loopne
adc
out
adc
shrb
sahf
push
jmp
cmp
inc
int3
push
std
xchg
push
xchg
shlb
dec
out
pop
and
das
mov
add
imul
pop
insl
sbb
cltd
ficoms
ja
and
xor
loopne
cmp
xchg
sub
push
scas
sub
xchg
push
stos
js
test
leave
daa
inc
inc
pop
sahf
xor
cmp
xchg
sbb
jo
mov
out
sbb
push
adc
pop
cmp
jbe
sub
inc
adc
pop
push
push
push
push
stos
push
push
xchg
xchg
cltd
arpl
inc
or
mov
fnstsw
sbb
sbb
push
out
imul
xchg
std
xchg
adc
sub
adc
aad
jle
sahf
xchg
push
fisubrl
rolb
push
add
popa
fwait
push
jmp
pop
popa
sbb
inc
sub
adc
out
xchg
gs
hlt
pop
pop
jge
fldcw
mov
lcall
test
pop
mov
inc
dec
inc
testb
push
outsl
cmp
inc
out
xchg
pop
adc
mov
mov
xchg
faddl
adc
das
lcall
xchg
sbb
and
loopne
xor
xchg
sub
fdivr
xchg
pop
dec
lods
inc
scas
aad
ljmp
aam
pop
mov
push
push
shrl
adc
push
stos
addr16
ficompl
push
out
inc
pop
stc
mov
lcall
sub
into
add
mov
std
inc
into
add
push
inc
cmp
roll
leave
xchg
stc
push
movsb
enter
xchg
loop
popf
cmc
push
sub
pop
xchg
ret
adc
sbb
fdivrp
mov
ror
lret
imul
pop
xlat
pop
sbb
faddl
jbe
xchg
xchg
adcl
in
pop
sbb
bound
ljmp
mov
push
popf
sti
mov
sbb
aam
sahf
adc
xchg
xor
repnz
push
adc
and
and
stos
pushf
popf
xchg
sub
dec
xchg
adc
xchg
pop
and
dec
and
sbb
outsl
or
push
scas
sbb
popf
sub
fmull
mov
pop
add
add
and
lahf
pop
ds
aaa
mov
jb
push
sub
stos
lcall
outsl
rcrb
ffree
and
roll
inc
xchg
adc
push
lods
add
pop
insb
pop
movsb
pop
xor
sbb
pop
test
push
adc
out
mov
bound
sbb
test
sub
mov
sbb
xor
pushf
stos
bound
jno
mov
mov
cltd
sbb
jmp
push
jns
pop
cmpl
push
stos
xchg
fcoms
xchg
adc
mov
sbb
xchg
push
rcr
add
xchg
inc
adc
mov
popa
lea
mov
or
add
push
imul
sarl
push
pop
fcomip
int3
fstl
xchg
mov
adc
fists
fcompl
push
push
or
xlat
cmp
ret
fstpl
or
mov
xchg
lods
or
and
push
push
fsubr
sbb
pop
les
or
push
push
cmc
movsb
inc
insl
push
mov
push
cltd
push
xchg
loope
add
sub
add
out
xor
xchg
outsl
mov
ret
ljmp
xchg
or
test
or
les
sub
adc
xchg
adc
int3
into
out
xchg
or
pop
inc
sub
adc
lds
inc
ficompl
cmp
cmc
js
lea
fcoml
xor
jp
cmp
jp
aaa
arpl
add
test
dec
push
nop
stos
inc
les
jl
sub
jp
clc
mov
push
xchg
mov
push
push
in
js
or
loope
push
shr
js
jge
shlb
lea
mov
adc
lea
imul
fnsave
cwtl
pop
bound
std
xchg
pop
out
xor
daa
pushf
lea
adcl
mov
push
mov
fmulp
into
pop
adc
das
pop
cwtl
push
int3
sub
push
add
adc
fildll
mov
push
pop
pop
aad
nop
push
adc
out
imul
sbb
push
int3
push
sbb
lods
pop
ljmp
xchg
cmp
sbb
in
sahf
sbb
adc
mov
push
pushf
pop
gs
cmp
mov
sub
sahf
xor
popf
jnp
cmp
rorb
xchg
stos
adc
add
fistl
rorl
push
rcll
dec
mov
cwtl
stos
xor
in
pop
xchg
pop
out
fisttpll
add
xchg
mov
add
insl
xchg
aas
ficoms
mov
mov
jbe
xchg
xchg
jnp
pop
sbb
inc
lea
das
adc
xor
pop
pop
inc
cmp
and
sub
ds
push
and
out
loopne
xchg
imul
push
push
sbb
pop
dec
das
pushf
sub
pop
mov
cmp
xchg
adc
mov
loop
mov
sbbl
pushf
push
sub
push
xchg
mov
jb
hlt
and
push
mov
sbb
mov
fcmovu
push
pop
add
xchg
adc
lea
jbe
repnz
stos
popa
xchg
xchg
pop
jp
ficomps
enter
and
sub
inc
cld
sub
into
decl
add
sbb
aad
roll
add
inc
sahf
aad
sahf
faddl
sub
outsb
adc
imul
adc
push
and
mov
orl
xchg
xchg
faddl
push
lea
adc
imul
fidivrs
mov
add
lea
push
ljmp
stos
push
dec
mov
iret
push
xlat
lahf
lcall
push
loopne
xor
pushf
cs
fs
inc
pushf
push
movsl
lods
adc
inc
adc
sub
fistps
push
sahf
xchg
cmp
push
and
pushf
popf
sbb
mov
fsubrl
cmp
pop
push
stos
pop
mov
stos
sahf
iret
mov
xchg
das
testl
out
ficoms
adc
adc
inc
stos
mov
sub
adc
xor
xchg
cmpl
stos
xor
xchg
xor
nopl
add
adc
xor
xchg
xlat
pop
int3
int
push
pop
sbb
xor
imul
hlt
xchg
push
pop
cmp
xchg
xchg
push
std
push
push
fxam
testl
adc
loopne
push
cmp
sbb
mov
mov
push
cmp
ljmp
test
push
jp
adc
add
sbb
ds
mov
pop
lcall
xchg
adc
mov
int3
pop
xchg
lcall
movsl
sbb
scas
and
sub
popa
fldcw
outsl
mov
shl
aas
subb
cmp
add
fcomps
push
outsl
xchg
mov
adc
xchg
pushf
adc
decb
pop
pop
and
push
hlt
sub
inc
outsl
add
sub
dec
rcll
hlt
cmp
int
pop
rolb
insb
hlt
and
cmp
ds
mov
insl
cmp
sbb
push
cmp
out
jmp
sbb
mov
addr16
mov
adc
jmp
cmp
or
xchg
jge
adc
shll
stos
addl
push
pushf
jb
mov
mov
pop
add
push
cltd
leave
sahf
jno
aad
add
adc
dec
sub
xchg
hlt
gs
pop
mov
mov
cltd
add
dec
dec
adc
addr16
push
ljmp
sbb
mov
shll
push
and
test
shll
sbb
mov
xchg
or
fwait
imul
mov
push
pop
cld
subl
jge
adc
pop
xchg
pushf
sbb
mov
mov
pop
mov
xor
ljmp
adcb
lret
adc
rorl
in
aam
filds
shll
add
stc
sahf
aaa
push
pop
mov
xchg
jb
mov
sbb
iret
notl
stos
ds
aad
or
push
loop
dec
mov
icebp
inc
out
xlat
insl
leave
sahf
sbb
mov
sbb
mov
or
adc
rorl
pop
stos
fsts
fst
mov
mov
or
cmpl
inc
ret
jecxz
cld
mov
adc
lret
adc
dec
mov
sub
inc
xor
and
ret
fildl
mov
dec
sti
pushf
pop
rcl
inc
hlt
xchg
and
stos
push
push
xchg
leave
popf
push
addl
add
pushf
pop
sub
mov
movsl
call
xchg
pop
mov
add
pop
sbb
add
sub
inc
xlat
mov
and
bound
push
sub
jnp
mov
jmp
sub
lcall
icebp
adc
test
fcoml
cmp
adcl
adc
ds
inc
ror
jns
scas
pop
int
push
pop
inc
adc
ja
inc
pop
pop
cmp
aas
cltd
sti
add
scas
xor
xchg
inc
push
test
stos
sbb
div
inc
mov
bound
push
xchg
mov
adc
xchg
and
dec
rcrl
fsts
lods
mov
sbb
stos
icebp
sahf
xor
or
xchg
out
inc
adc
bnd
movb
push
xor
push
sub
mov
xchg
ljmp
roll
cmp
xchg
xchg
push
faddl
shrl
out
imul
push
and
dec
adc
sub
inc
mov
and
sbb
push
mov
outsl
fsubl
sbb
sahf
rclb
out
sub
cmp
xor
xchg
mov
or
push
adc
faddp
push
out
les
inc
gs
xchg
jmp
push
add
inc
pop
ljmp
adc
movsl
mov
lods
or
addr16
xchg
stos
pop
adc
jns
or
jp
fnstsw
imul
dec
dec
xchg
mov
and
aam
daa
adc
movsb
insl
push
das
dec
pop
les
sub
mov
int
xchg
push
cmp
scas
sub
sbb
jge
and
xchg
adc
pop
inc
push
popf
xchg
int3
mov
xchg
fists
testl
aad
and
push
aam
insl
mov
ror
mov
fcompl
and
push
stos
rcr
xor
xchg
and
xchg
aad
das
adc
sub
push
bound
jl
add
ret
inc
mov
sub
ror
push
push
pop
push
mov
xchg
xlat
shll
stos
lea
pop
jne
ljmp
fstps
das
fsubs
lods
js
inc
mov
jle
cmc
fsts
push
xchg
inc
stos
fs
mov
push
pop
mov
popf
leave
pop
xchg
push
push
clc
push
outsl
out
xchg
cld
xchg
loope
xchg
xchg
daa
dec
gs
pop
cltd
aaa
xlat
xchg
xchg
xchg
sub
stc
sbb
pop
pop
sub
jge
pushf
push
pop
inc
aas
xor
mov
les
fistps
push
push
push
cltd
arpl
andb
icebp
iret
jb
xchg
sub
and
ficoms
and
xchg
xchg
xor
inc
lret
sbb
sahf
push
and
sub
sub
sti
xorb
and
add
push
xor
das
jmp
xchg
popf
clc
adc
xchg
pop
inc
lock
xchg
fld
and
aas
xor
hlt
xor
andl
mov
inc
dec
inc
das
push
adc
xchg
outsl
add
leave
mov
inc
rcll
xchg
insb
or
aam
fbld
lock
and
sahf
or
imul
inc
enter
pusha
sbb
fstps
inc
out
sahf
lahf
dec
popf
adc
int3
fldl
inc
and
dec
pop
dec
cmpsb
push
adc
lret
adc
shrl
add
outsl
es
in
mov
mov
adc
xchg
in
je
scas
pop
xchg
jnp
xchg
fld
imul
test
inc
mov
push
mov
ret
loop
xor
xchg
xchg
and
xlat
push
jb
push
dec
xchg
fisubrs
xchg
imul
cmp
outsl
rcrl
scas
hlt
hlt
sub
push
mov
pop
sub
aam
mov
fstps
xchg
add
adc
lea
add
push
sti
inc
movsb
jne
mul
repnz
outsb
stos
insb
lds
les
test
xchg
enter
xchg
adc
push
ficoml
int3
inc
sbb
push
aam
sub
ljmp
dec
out
mov
add
cltd
push
sub
adc
and
scas
xchg
ljmp
das
push
add
ljmp
mov
fsts
fnstcw
insb
popf
cltd
xchg
adc
lock
cmpsl
push
and
cltd
fcomip
out
xor
pop
mov
xchg
ficomps
mov
fwait
pushf
xchg
jb
in
fstpl
stos
fldl
pop
push
jno
xor
cwtl
popf
mov
dec
push
mov
orl
adc
and
rcrb
jbe
sbb
xor
mov
dec
mull
arpl
or
xchg
push
outsl
ss
inc
add
fists
push
cmc
aas
mov
rcll
jo
sbb
sub
sbbb
xchg
inc
shrl
push
mov
xchg
pop
mov
mov
pushf
pop
sbb
push
push
subb
xchg
roll
adc
sub
and
sahf
imul
negb
and
pop
enter
ds
mov
mov
bound
stos
aam
stos
push
mov
mov
inc
mov
mov
xchg
mov
stos
jb
push
inc
imul
ljmp
fnstenv
lret
cmpsl
ret
push
push
jg
rcll
in
fs
sbb
mov
insb
rclb
aaa
pop
or
clc
push
pop
or
sub
add
scas
pop
lods
jp
pop
adc
popf
stos
cmp
pop
rcl
sbb
push
int
imul
aad
shl
fsubl
xchg
aam
sub
cltd
popf
scas
adc
push
cmp
pushf
push
add
xchg
aam
cmpsl
cmp
pop
xchg
push
out
insb
pop
sub
shrl
push
pop
fsubrl
mov
add
popa
fldcw
shl
cmc
mov
xlat
jl
dec
push
add
imul
inc
test
lcall
rcr
xchg
xchg
loope
ds
fisubrl
scas
adc
and
lcall
shrl
push
imul
add
lret
out
shll
iret
adc
pop
aam
mov
int3
insb
sahf
lcall
xor
fldcw
push
inc
lods
push
std
push
add
xchg
sub
push
out
fstl
mov
push
or
push
adc
shlb
xor
sahf
dec
xlat
inc
out
xchg
mov
cmc
aam
cmp
aad
int
xchg
pop
das
repnz
add
fwait
xor
sub
mov
in
push
adc
inc
fistps
enter
sub
sbb
fcmovbe
xchg
inc
push
popf
pushf
std
daa
dec
cs
pop
aad
adc
icebp
jge
push
clc
mov
dec
add
mov
fwait
outsl
sub
cli
rcll
mov
push
dec
das
scas
jb
or
rclb
mov
inc
push
push
shll
mov
push
sub
add
cmc
cmp
popf
sbb
sub
xchg
rclb
push
mov
pop
popf
cltd
cmp
in
pop
mov
sbb
jmp
sub
jb
sub
dec
fcoml
stos
xchg
ret
xchg
pushf
mov
xchg
xchg
adc
out
out
sub
sbb
push
aas
xchg
adcb
sub
hlt
dec
xchg
add
xor
fadds
out
dec
fs
leave
add
inc
fwait
rcr
std
sbb
leave
shr
xor
stos
pop
add
fstps
jno
fsubs
cmp
sbb
imul
jp
fnstenv
xchg
cltd
les
adc
sarb
mov
jl
ljmp
iret
inc
push
cmp
popf
lret
and
pop
cmp
xchg
frstor
dec
sbb
dec
xchg
aad
inc
sub
and
sahf
xchg
sbb
and
xlat
shl
xchg
jge
or
sub
popf
add
rolb
pushf
shrd
pop
adc
das
inc
push
xchg
mov
aas
cltd
push
lret
sbb
xchg
imul
mov
ficomps
pushf
mov
xlat
cltd
jmp
sub
pop
xor
je
daa
or
ljmp
mov
pop
mov
inc
fwait
add
and
ret
mov
out
xchg
push
lods
xor
icebp
shrl
fidivs
leave
stos
ljmp
add
and
pop
imul
push
imulb
pop
rcll
js
incb
xlat
xchg
adc
or
inc
int
mov
push
adc
mov
sub
adc
mov
sub
movsl
xchg
push
mov
insb
xchg
xchg
sub
andb
push
mov
fcmovnbe
leave
fists
cmp
pop
push
mov
cmp
push
in
or
aam
cltd
push
add
sbb
les
ret
and
xchg
arpl
adc
imul
sahf
xlat
xchg
out
xchg
pop
lcall
out
stos
cmp
sbb
sub
ffreep
xchg
cltd
push
mov
push
inc
flds
jne
pop
dec
sbb
ss
sbb
push
fidivl
fildll
imul
jl
xchg
decb
mov
sub
iret
adc
ljmp
rcr
sahf
push
in
filds
add
push
adc
xor
pushf
xor
push
push
out
xlat
push
push
scas
ficomps
fwait
xchg
xchg
adcb
inc
push
inc
cmp
or
scas
xor
stos
pop
and
pop
adc
fwait
xor
xchg
adc
and
shll
jno
xor
test
sbb
xchg
les
rolb
jmp
aam
test
ja
adc
dec
icebp
aam
jle
add
cmp
push
mov
push
fcoml
jecxz
sbb
adc
push
stos
popf
push
pop
out
adc
out
sub
push
xchg
sub
push
push
push
sub
fcoml
insb
push
call
das
sub
add
cld
jle
jo
lea
push
cltd
js
and
aas
push
pop
xchg
imul
scas
popf
gs
std
or
aas
orl
stos
outsl
xchg
add
stos
sbb
xor
imul
sbb
sub
push
jnp
adc
xchg
add
mov
push
mov
xchg
loop
aam
inc
push
sub
ss
lcall
adc
pop
fldl
lea
xchg
push
stos
push
rcrb
pushf
inc
jo
rcll
mov
push
sbb
pop
addr16
xchg
test
lods
jbe
ficomps
out
imul
insl
adc
aaa
sub
fsubl
lea
lret
js
notl
lods
dec
xchg
push
lea
xchg
pop
ds
xlat
xlat
shll
cltd
push
mov
aam
sub
mov
imul
movsb
mov
jno
shl
or
xchg
xchg
fistl
cltd
int3
rcr
xchg
cmp
stos
sbb
stc
shl
incl
and
fstl
cmp
stos
outsb
cmp
xchg
sub
xchg
sbb
ror
inc
push
and
xchg
rcrb
adc
ljmp
cmpsl
jnp
out
mov
bound
aam
adc
sub
dec
fisubrs
push
pop
xchg
push
aam
shrl
popf
sub
and
mov
scas
pop
rcrl
mov
lods
es
push
push
repnz
jb
imul
xchg
fdivrl
fs
adc
int3
xchg
adc
mov
lret
int3
sbbl
push
xchg
xchg
rclb
push
and
ljmp
xor
adc
je
aad
pop
and
inc
push
cmpsb
lret
dec
adc
adc
inc
mov
mov
pop
xchg
popf
pop
push
push
and
adc
pop
scas
push
mov
xor
fildll
sbb
sub
rol
stos
fwait
aaa
testl
aad
or
adc
sub
xor
outsl
lcall
push
or
addb
lods
rcrl
loop
xlat
pop
adc
pop
mov
mov
shll
idivb
out
xchg
fldcw
ret
and
ret
das
mov
push
jge
push
sbb
and
and
push
leave
lcall
bound
das
xchg
cltd
push
aad
adc
sbb
sub
xchg
into
pop
ror
jg
das
wrmsr
add
pushf
mov
xchg
scas
push
xor
jg
imul
sub
and
xchg
stos
mov
aaa
push
xchg
leave
popf
imul
mov
lret
addr16
mov
sub
insl
jno
sbb
cltd
push
cli
enter
jb
mov
jns
sbb
mov
push
push
ds
sbb
xchg
xchg
cld
outsl
lds
pop
mov
out
mov
jnp
jecxz
es
sbbl
leave
push
push
stos
and
stc
sub
mov
and
roll
pop
xchg
fisttpl
roll
and
or
rclb
xchg
push
ret
sbbl
lock
int3
in
test
add
pop
pop
fists
xchg
xchg
push
xor
fidivrl
outsl
dec
cltd
adc
push
mov
xchg
test
sub
adcl
jne
push
jbe
inc
add
loop
sbb
and
xlat
push
insl
pusha
xchg
aad
dec
xchg
mov
sub
pop
mov
add
push
push
cmp
int3
sbb
pop
push
mov
push
setp
orl
pop
hlt
sbb
data16
mov
xchg
mov
das
outsl
out
adc
jb
xor
fbld
or
push
pop
or
shlb
sbb
outsb
sbbl
call
sbb
and
cmp
aad
xchg
pop
add
mov
out
push
fisubl
xchg
bound
cmp
cwtl
imul
ljmp
xchg
jne
xchg
mov
push
ljmp
scas
push
mov
cmp
je
jg
xchg
xchg
push
jle
xor
inc
iret
cmpb
xchg
out
mov
adc
shrl
xchg
imul
call
jne
stos
pop
fstpl
stos
adc
test
rclb
adc
cmp
pushf
sbb
pop
loopne
dec
popf
xor
sbb
lcall
push
push
shl
ds
mov
sbb
loop
push
cmpsl
mov
sahf
xchg
sbb
add
xlat
pop
cmp
mov
rcl
out
sbb
imul
jne
pusha
adc
outsb
jne
xchg
les
aam
cli
push
dec
aaa
stos
inc
fwait
xchg
sbb
mov
mov
add
sbb
mov
jbe
add
xchg
int3
push
xchg
test
push
movb
mov
adc
loop
ljmp
leave
sbb
jmp
pop
push
hlt
inc
stos
popf
fnstenv
xlat
xor
icebp
sbb
and
push
int
aam
out
nop
mov
in
xchg
adc
xchg
outsb
jge
sub
fisubrs
cwtl
add
or
pushf
jo
push
or
rclb
aam
jnp
jae
jno
cltd
loopne
pop
sub
mov
push
mov
fsts
lods
hlt
jns
xchg
push
fisubrl
lods
iret
add
lret
rcrl
das
imul
sbb
loop
rcrl
fsubr
push
fstp
sub
add
aad
rcrl
mov
stc
pop
mov
mov
jne
stos
add
dec
inc
jo
mov
mov
xchg
push
aam
sarb
add
push
mov
sub
rorl
adc
xchg
sub
test
daa
fwait
stc
add
sbb
mov
or
xchg
stos
add
pop
sbb
xchg
fwait
adc
pop
adc
sarl
push
les
inc
sbb
inc
push
ret
lret
bound
xchg
aad
sub
sub
ret
push
mov
jmp
data16
mov
pushf
pop
sub
adc
cltd
dec
faddl
inc
push
inc
mov
sub
xlat
or
adc
into
push
imul
cli
inc
xchg
rcll
xchg
sub
adc
push
sbb
xchg
inc
mov
popf
inc
rclb
push
and
sahf
push
add
cltd
mov
test
fldl
mov
xor
je
outsl
leave
out
pushf
inc
push
mov
das
sub
add
ret
sub
dec
ss
pop
cmc
inc
mov
push
shlb
push
mov
mov
and
pop
adc
inc
sub
sub
inc
ficoms
push
xchg
movsb
jne
jns
cmp
jns
adc
pop
int3
push
push
fistpll
xchg
fstps
adc
and
xchg
leave
push
scas
xchg
ret
push
nop
push
mov
inc
and
inc
xchg
and
jp
adc
lock
jnp
jp
push
sub
push
leave
pushf
fsts
leave
jp
pop
sub
sub
sub
fldcw
mov
or
sub
movb
add
xchg
xchg
sbbl
inc
ljmp
pop
push
idiv
clc
les
pop
sbbb
xchg
mov
pushf
add
mov
in
push
ja
fld
subl
int3
ljmp
sahf
scas
mov
notb
cmp
repz
iret
pushf
mov
mov
dec
cltd
mov
fcmove
sbb
fbld
fldcw
mov
jo
xchg
mov
int3
stos
sub
addr16
insb
cwtl
ds
pop
pop
imul
adc
cmp
adc
das
cmp
push
push
xchg
adc
sahf
cli
fcomps
xlat
mov
sahf
mov
pop
push
lock
fwait
xchg
fmul
int
adc
pop
dec
lret
stos
cltd
xchg
jo
adc
sub
add
fcmovbe
jne
xchg
pushf
xorb
pop
xchg
stc
add
mov
mov
mov
sbb
adc
imul
dec
mov
outsl
xorl
mov
fistl
imul
sub
adc
push
push
outsl
ficomps
mov
adc
jg
xor
pop
adc
sbb
pop
sbb
adc
push
xchg
ss
fisttps
pop
xchg
push
imull
or
cmp
add
enter
mov
push
or
fldcw
push
leave
pop
int3
cmp
hlt
push
ljmp
pop
rcrb
stos
mov
sbb
xchg
xlat
inc
int
loop
rcll
shrl
add
jg
in
std
cwtl
inc
pop
pop
lods
test
ljmp
push
fbstp
add
fstpt
shll
mov
jne
rcrb
hlt
mov
jae
stos
pop
int3
rcll
pop
mov
nop
outsb
lcall
popl
and
movsl
xchg
pop
add
sbb
add
ljmp
mov
push
inc
xlat
aad
mov
clc
bound
fimull
imul
lret
xchg
notb
push
inc
inc
xchg
cltd
lods
punpckhdq
adc
push
push
push
adc
imul
enter
mov
lds
or
loop
xlat
sahf
pop
push
cmp
xchg
rcll
pop
jle
neg
adc
dec
out
xchg
lods
sbb
dec
ja
mov
das
xor
push
outsb
outsl
lahf
cmp
push
mov
outsl
inc
cmpsl
cmp
flds
push
stos
into
pushf
mov
push
cmp
xchg
add
and
xchg
popf
cmp
push
lret
imul
pop
stos
or
pop
xor
xchg
xchg
fucomip
popf
adc
xchg
xor
cmpsl
in
leave
pop
mov
fdivrl
rol
ljmp
push
dec
xchg
xchg
subb
add
addr16
inc
fistpl
hlt
lods
pop
sub
cltd
fnsave
xchg
imul
inc
xchg
xchg
sub
push
mov
stos
adc
mov
xor
inc
cmp
shll
pop
fildll
xchg
cltd
cmp
sub
and
popf
sahf
ror
push
xlat
jmp
jcxz
sub
out
fxch
sbb
or
popf
dec
inc
add
das
stos
outsl
jge
aam
adc
addr16
int3
out
test
stc
add
cltd
pop
pusha
test
push
aad
push
xor
adc
adc
dec
sbb
xchg
das
out
fldl
jle
jg
gs
add
xchg
push
sti
mov
pop
mov
sahf
mov
imul
xchg
and
subl
xchg
sbb
xchg
push
and
and
andl
ja
mov
adc
push
jle
sub
push
lods
jbe
xchg
je
sbb
pusha
xchg
sbb
stos
sbb
jns
outsl
xor
ss
xor
fcmovbe
adc
push
adc
jo
push
into
xchg
rcrl
pushf
pop
fdivrl
sbb
adc
push
mov
ds
ljmp
push
stos
int3
dec
js
inc
xchg
arpl
into
adc
lea
pop
adc
xchg
lret
ljmp
adc
push
add
jne
mov
inc
pop
push
xchg
sbb
jp
push
cmp
sbb
sbb
lret
add
xchg
repnz
inc
addl
sbbb
std
push
pop
pop
jle,pn
xor
sub
out
addr16
push
popf
lret
push
sub
and
test
xchg
push
push
fistl
in
push
xlat
pop
sub
push
popf
adc
dec
dec
xchg
pop
sbb
jmp
mov
and
repnz
inc
imul
dec
push
lcall
jbe
outsl
add
movsl
dec
pop
mov
adc
inc
adc
fnsave
roll
jg
ret
clc
aas
xchg
fsubs
rol
loopne
in
jnp
pop
out
sbb
ret
filds
mulb
push
push
pop
mov
cltd
push
rcr
inc
xchg
push
mov
pop
add
pop
and
and
hlt
and
iret
mov
mov
insl
mov
fs
out
lret
push
fcompl
xchg
mov
inc
les
popf
xchg
sub
adc
sbb
les
imul
aaa
mov
adc
das
in
mov
aad
shrl
sub
push
adc
push
push
outsb
xor
out
fstp
xchg
in
bound
bound
and
ret
movb
mov
pop
mov
push
sbb
push
outsl
adc
push
fwait
pop
mov
scas
xchg
in
cli
loop
clc
mov
dec
push
rcl
xor
fcomps
xchg
popf
xchg
ljmp
adc
shrl
leave
pop
adc
mov
xchg
lret
adc
sub
or
roll
lods
mov
xor
pop
imul
adc
lds
mov
inc
sbb
or
add
negb
popf
cs
adc
fstl
sub
xchg
call
mov
mov
xchg
xchg
subl
and
and
xchg
cmc
cmp
sub
rcrl
mov
ficompl
push
fsubrl
push
xor
js
push
aam
and
inc
xchg
std
pop
mov
pusha
mov
stos
sbb
xchg
pushf
xlat
testb
bound
icebp
mov
push
push
sub
rcrl
inc
sbb
add
out
aad
xor
scas
sbb
push
xchg
stos
sub
leave
movsl
enter
call
faddp
pop
in
sub
leave
push
mov
in
mov
xchg
sub
stos
pop
es
add
roll
out
aad
push
push
into
ret
dec
xchg
add
push
sahf
adc
pop
addr16
stos
shlb
in
les
stos
add
xchg
lods
cmp
ds
adc
and
push
fwait
rcrl
push
and
push
mov
icebp
lcall
push
push
rolb
out
mov
ss
aam
push
pop
rcll
push
sahf
hlt
pop
js
popa
jbe
gs
xchg
xor
mov
int3
mov
into
js
jbe
or
imul
aad
rclb
push
aaa
outsl
dec
sub
adc
ficoms
jmp
cmp
sub
xchg
push
pop
jno
sbb
inc
dec
bound
cs
sbb
out
push
lahf
inc
aaa
iret
arpl
xchg
inc
and
jp
ficoms
adc
daa
sbb
pop
mov
sbb
xchg
insl
sub
mov
push
adcl
aad
sbb
mov
out
xor
mov
shll
dec
adc
push
adc
bound
insl
xlat
outsl
cltd
and
mov
popf
outsb
mov
push
pop
out
push
sbb
imul
cmp
enter
xchg
pop
add
jp
adc
divb
add
add
adc
pusha
test
adc
leave
pop
out
loopne
adc
ljmp
adc
outsl
or
mov
scas
sub
ret
pushf
xchg
shlb
leave
roll
adc
sub
aad
testl
adc
nop
push
sbb
inc
push
pushf
cmp
lret
xor
adc
pop
inc
sahf
adc
xchg
sarb
xor
xchg
pop
pop
push
push
and
ret
scas
adc
mov
aas
sub
and
push
pop
fldl
shl
lods
inc
rolb
fisubs
mov
adc
sub
push
adc
popf
xchg
imul
mov
push
xchg
push
in
scas
cltd
leave
outsl
push
leave
jno
popl
xchg
push
insl
push
pop
sahf
mov
rolb
xor
or
pop
mov
xchg
push
leave
sbb
mov
pop
loop
xchg
jae
mov
xchg
sti
mov
pop
xchg
ljmp
inc
xlat
xor
inc
push
xchg
push
mov
enter
cmp
jge
les
inc
and
fisttpll
xchg
movsl
push
sbb
xor
and
lret
shrb
jbe
ror
xchg
push
ljmp
push
xchg
hlt
enter
imul
std
xchg
inc
xchg
adc
les
jnp
cld
add
xchg
and
into
sbb
lods
fbstp
xlat
cmp
push
adc
jmp
stc
jbe
dec
dec
sub
adc
pop
xor
sub
xchg
scas
xchg
add
sbb
repnz
xchg
icebp
adc
cmp
rclb
lret
pop
xor
ja
shl
sbb
test
les
bound
ret
adc
adc
dec
ljmp
push
mov
pop
nopl
mov
mov
push
jbe
inc
out
sub
pop
xchg
subb
sahf
xchg
push
fmulp
fst
push
aad
pushf
cmp
push
pop
inc
icebp
adc
fisubrl
xlat
nop
fsubs
pop
out
xchg
and
pop
push
jno
adc
adc
inc
inc
push
fistpll
xchg
add
inc
das
adc
mov
adc
sarl
gs
inc
lods
sub
sbb
sbb
fisttpl
rclb
loopne
add
leave
push
mov
mov
push
scas
jno
pop
sbb
fisubrl
cmpsb
sbb
dec
xchg
out
addr16
pop
push
xor
sbb
pushf
push
sub
insl
jmp
jns
xchg
popf
or
push
imul
repz
sbb
nop
fisttps
inc
pop
push
nop
rol
cmp
fsts
xchg
add
sub
pushf
sub
sub
and
dec
pop
xor
xor
sub
push
xchg
aad
movsl
outsl
rclb
loopne
sbb
xlat
aam
repz
add
or
xchg
mov
sbb
mov
in
lahf
lea
shrl
stos
sbb
seta
adc
out
dec
mov
adc
push
cmp
sbb
mov
add
sub
push
stos
lret
pushf
and
mov
call
push
jmp
mov
xchg
cmp
push
sbb
ljmp
loop
clc
lea
sbb
push
pop
push
inc
push
cmp
pop
mov
xor
stos
imul
xchg
add
push
pop
xchg
push
xchg
pushf
push
and
dec
pop
adc
out
addl
mov
pop
adc
add
pop
sbb
push
in
mov
mov
xchg
fwait
inc
pop
pop
aad
sti
push
sbb
loop
sub
insl
push
das
push
mov
decb
sbb
push
mov
shr
lea
aad
aam
jno
pop
lret
mov
xor
mov
mov
xchg
test
inc
sbb
sbb
orl
scas
push
cmc
nop
repnz
lods
add
imul
sub
xchg
xor
xchg
mov
xor
scas
pop
inc
cltd
pushf
and
les
rclb
aas
faddp
pop
pushf
pop
mov
fld
sbb
out
inc
imul
sub
inc
loope
mov
sub
mov
xchg
push
inc
push
mov
pop
cmp
aam
shll
std
xlat
sbb
jns
pushf
pop
inc
xor
negl
adcl
div
mov
scas
out
xchg
push
mov
dec
xorps
add
xchg
and
ljmp
dec
push
jne
push
or
inc
aam
cwtl
adc
jmp
fmuls
in
js
out
rcll
xlat
les
fmull
std
mov
lods
fcoms
pop
jne
adc
xchg
cltd
pop
lret
sbb
sub
xchg
jmp
mov
and
mov
cmp
mov
inc
xchg
faddl
fbstp
sbb
mov
out
xlat
add
ja
cmp
out
xor
mov
fwait
pop
popf
inc
js
jle
aam
pop
sti
pop
aaa
stc
pop
sbb
xchg
mov
and
das
sub
movsl
push
push
or
sub
stos
lods
out
popf
lods
imulb
push
inc
fisttpl
test
xchg
js
inc
push
into
sbb
add
push
stos
adcb
gs
adc
inc
ljmp
mov
jmp
xlat
xchg
push
or
cwtl
rcrb
pop
ljmp
stc
lock
push
in
iret
xchg
sbb
mov
pushf
pop
int
stos
flds
push
xor
rcl
xchg
frstor
add
fdivl
adc
stos
sbb
ljmp
jno
xchg
inc
shll
pushf
xor
adc
jae
inc
cltd
ffree
adc
pop
pop
sti
xchg
mov
stos
pop
out
and
movsb
inc
sbb
xchg
inc
cld
or
sbb
sbb
mov
das
push
scas
pop
lret
adc
cs
insl
dec
adc
and
push
das
push
adc
scas
cltd
call
sub
mov
lahf
add
mov
aam
lods
stos
push
sbb
pop
imul
xchg
int
fisubrs
shll
and
rcr
outsl
sub
xchg
aad
adc
push
int
ficoms
loopne,pn
cmp
in
mov
leave
push
sub
pop
pop
dec
sbb
pop
out
addr16
sbb
sbb
pop
pop
adc
push
pop
push
dec
inc
je
adc
xchg
pop
inc
scas
out
inc
xchg
decl
sbb
push
add
mov
and
sub
adc
push
faddl
movsb
ds
mov
or
test
pop
xchg
cwtl
sub
inc
push
xorb
rcl
jno
adc
ljmp
push
leave
adc
xchg
loop
inc
xchg
push
mov
stc
fdivrl
sbb
xlat
cwtl
push
gs
and
insl
in
push
test
add
inc
pop
push
int3
xchg
xchg
les
mov
cs
repnz
or
xchg
sbb
cwtl
or
push
mov
push
pop
call
aam
fcompl
pop
sbb
inc
idivb
push
sub
adc
aaa
sbb
stos
into
xchg
push
test
outsl
and
pop
push
pop
xchg
mov
mov
sbb
fcompl
jmp
shlb
push
sbb
rcl
subb
mov
into
imul
int3
push
pop
add
scas
leave
jno
cmp
cmpsb
lret
mov
cs
xchg
inc
popf
faddl
inc
pop
mov
sar
pop
out
push
mov
jge
popf
inc
xchg
add
sub
sub
or
test
stos
mov
sub
pop
sbb
hlt
mov
aam
imul
cld
sub
leave
ret
xchg
subl
scas
das
adc
xchg
rclb
mov
pop
mov
adc
cmp
add
push
adc
xchg
repz
aam
std
mov
sbb
adc
das
ljmp
push
mov
sbb
pop
fs
mov
adc
lea
jge
push
fs
insl
in
adc
add
jmp
fmul
sub
push
adc
pop
cld
imul
dec
pop
adc
adc
or
arpl
mov
sbb
push
cltd
push
iret
out
sub
cmp
popf
sahf
adc
or
mov
sub
ss
push
addr16
sbb
or
aam
push
adc
add
fildl
cmp
xchg
push
js
lods
sbb
jo
lahf
ljmp
adcb
cmp
stos
stos
shll
repnz
cmp
fmul
ficomps
inc
das
xchg
int
pop
fmull
inc
movsl
dec
mov
xchg
inc
popa
imul
dec
pop
sub
adc
sbbl
adc
fmull
enter
sub
sub
xchg
dec
add
pop
push
add
rcrl
inc
mov
ljmp
sbb
cmp
and
dec
scas
mov
and
mov
pop
xchg
push
xchg
mov
pop
call
adc
aam
push
pop
rclb
int3
mov
out
pop
dec
lds
movl
loop
fsubrl
sub
mov
sbb
sbb
mov
cmp
test
jg
push
inc
ljmp
ret
aam
push
fldl
cltd
sub
roll
ficoml
sub
in
int3
xor
adc
xchg
sbb
mov
push
or
add
or
sbb
inc
aad
push
sub
pop
lds
xchg
test
in
mov
rcr
add
cltd
sbb
push
in
inc
in
js
scas
jno
xor
pop
fsubrs
mov
xchg
fdivrp
add
xchg
sub
adcb
push
and
push
sbb
add
stos
mov
fwait
adc
push
aam
ja
js
sub
inc
inc
adc
sahf
add
sbb
xor
inc
adc
sahf
add
and
pop
ljmp
dec
popf
lret
out
push
pusha
scas
pop
rcl
scas
add
push
inc
sub
xchg
sbb
cltd
fsts
xor
and
adc
subl
sub
push
stos
stos
and
push
adc
scas
xchg
sbb
add
rclb
inc
loop
mov
xchg
and
sbb
inc
rsm
and
push
jb
int3
mov
push
pushf
nop
das
shrl
mov
in
lcall
lret
jmp
lahf
xorl
inc
out
xor
aad
jge
pop
movhlps
mov
fnstsw
outsl
xchg
sbbl
cs
stos
test
ss
sbb
int
sub
or
pop
push
test
mov
push
scas
sub
rcrl
fwait
push
loop
clc
pop
cmp
mov
and
xor
jb
stos
mov
addl
shll
in
jecxz
push
fists
ds
inc
das
xchg
xor
sbb
adc
sbb
pop
push
sar
das
je
cmpsl
pop
xchg
lret
ja
push
push
xchg
testl
xchg
mov
pop
daa
and
push
ja
or
sbb
adc
sub
adcl
add
ret
sahf
xchg
push
popf
mov
or
pushf
dec
push
xchg
out
dec
rcr
and
add
add
mov
test
rcll
in
fadd
mov
sti
push
jnp
or
stos
xchg
popf
sub
sub
inc
dec
cmc
aam
shl
js
and
jae
sub
out
mov
sbb
push
xchg
cmp
xchg
sub
mov
and
jno
jo
fucom
pop
dec
stos
inc
mov
scas
cmp
pushf
outsl
aad
cmp
xchg
rolb
adc
stos
xchg
es
push
fstps
inc
pop
push
xor
popf
adc
stos
xchg
lods
lret
push
mov
outsb
inc
xchg
push
loop
dec
insl
pop
push
outsl
push
outsb
inc
mov
rcl
sbb
scas
clc
push
push
sub
mov
mov
test
sub
and
push
fbstp
dec
inc
sbb
push
lods
rcll
sub
cmp
roll
sbb
xchg
rcr
push
lcall
test
sbb
fistpll
imul
push
std
inc
xchg
xor
jge
pop
inc
loope
push
sarl
xor
fwait
mov
inc
xchg
dec
cmp
pop
xchg
adc
sub
and
xchg
popa
and
inc
sub
dec
xchg
sbb
xlat
sbb
pop
scas
outsl
cmp
rcll
xchg
add
fwait
xlat
push
sub
push
sbb
xchg
xchg
stos
and
adc
or
push
aas
test
adc
sub
mov
addl
and
xchg
mov
lods
jns
push
cmp
inc
add
jae
adc
fsubrl
pop
sbb
pop
jecxz
sbb
mov
sahf
xchg
adcl
xchg
pop
es
push
cltd
sbb
mov
aas
push
shrd
cltd
imul
inc
push
outsl
sbb
jge
push
icebp
mov
rcl
aam
daa
cmc
jle
push
rcl
sub
fstl
and
aad
pop
mov
stos
adc
shll
int
sbb
push
lcall
sahf
inc
nop
xchg
xor
sub
pop
mov
adc
xchg
xor
push
mov
sbb
aas
ljmp
push
lea
push
xlat
xchg
subl
jge
stos
pop
repnz
pop
xor
adc
or
aas
shll
xchg
stos
adc
push
cmpl
xchg
inc
dec
inc
popf
aam
push
push
movl
add
pop
push
inc
mov
pop
faddp
adc
out
jae
add
push
xor
mov
sub
inc
mov
jl
xor
mov
ja
iret
sahf
lret
add
mov
in
cmp
push
imul
adc
outsl
sub
inc
fs
daa
je
pop
xor
inc
fsubrl
in
sti
sub
xchg
xchg
icebp
or
ja
adc
les
xchg
sahf
cmp
xchg
jne
inc
mov
and
sub
dec
push
scas
pushf
push
test
pop
movsb
add
pop
xlat
dec
adc
push
aad
ds
push
ret
push
xchg
fcomip
pop
sti
inc
lret
xchg
stos
xor
fdiv
sbb
imul
les
cmpsl
sub
pop
rorb
jae
int
add
pop
cvtpi2ps
mov
js
xchg
lods
sbb
sub
xchg
push
push
inc
hlt
add
and
jge
aam
xchg
loopne
movsl
add
cltd
aas
sub
xchg
lret
daa
push
push
enter
sub
rcll
adc
and
sub
pop
ja
jp
fstl
push
adc
inc
adc
insl
add
aam
or
mov
xlat
push
inc
push
sbb
sub
push
pop
dec
das
outsb
cmp
xchg
negb
cwtl
add
arpl
scas
mov
lret
dec
adc
aaa
pop
incl
inc
scas
or
cmpsb
lods
add
cs
adc
fidivrs
popf
mov
ss
xchg
mov
cmp
or
cmp
gs
xchg
push
lcall
xchg
push
cs
into
outsl
leave
fmuls
iret
add
int
sbb
pop
push
sub
and
xchg
xchg
inc
fistpll
pop
pop
jg
nop
pop
scas
sub
pop
inc
or
sub
sbb
aas
mov
sub
xchg
xlat
cmp
lret
pop
xchg
pop
mov
lock
lds
jecxz
mov
mov
inc
cltd
nop
cmpsb
popa
dec
out
xchg
adc
xchg
sarl
adc
push
sub
loopne
cmp
push
fmull
mov
ljmp
sub
mov
loop
push
xchg
adc
bound
cmp
pop
adc
sarb
stos
xchg
mov
push
push
adc
cmp
sub
and
mov
inc
cmp
sbb
repnz
out
adc
push
xchg
loop
xor
inc
push
sbb
xor
jne
mov
out
pushf
or
subl
push
das
pop
xchg
inc
adc
pop
fst
push
stos
clc
xchg
or
shlb
imul
dec
jecxz
jo
mov
rclb
out
dec
lods
jne
push
cmp
sub
sti
xchg
rclb
shrl
js
pop
scas
adc
xchg
adc
jno
pushf
push
xchg
sbb
fistpl
push
inc
adc
push
pop
mov
fucomp
add
stos
sub
jp
push
rol
rol
out
les
sti
jo
in
xor
cli
adc
pop
iret
or
or
movntps
in
addb
xlat
push
ljmp
push
rclb
inc
inc
xchg
push
stos
cltd
push
aaa
sbb
mov
fldl
add
mov
iret
sub
push
out
sbbl
jns
testb
scas
popf
inc
mov
out
jne
lret
subl
jo
xchg
ret
imul
push
sbb
add
test
sbbl
and
xor
add
push
xchg
out
ret
or
ljmp
add
mov
test
xchg
aaa
and
test
in
mov
lea
fisubrs
fwait
shr
cmp
or
scas
or
inc
mov
add
push
mov
inc
cmp
in
lret
push
mov
xchg
xor
cli
sbb
pushf
pusha
cmp
add
add
popl
roll
sub
push
push
fcompl
ja
cmp
outsb
xchg
mov
sub
icebp
pop
add
mov
dec
out
mov
mov
popf
sub
xor
ljmp
mov
xor
adc
push
add
loopne
adc
xchg
sub
aad
push
sbb
mov
fisubs
adc
push
sub
std
sub
fisttpll
adc
das
filds
pushf
std
jnp
std
fimuls
adc
jbe
popf
cld
push
loop
fsubp
in
les
sti
sbb
sub
or
xlat
lods
xor
xchg
es
out
jmp
std
add
pop
push
fnstcw
or
subl
imul
std
xor
sub
lret
sbb
xchg
xchg
iret
sbb
cs
push
lock
push
or
call
rcl
mov
add
outsl
fldl
aad
fcoml
adcl
test
pop
fldcw
adc
ljmp
enter
ffree
cli
adc
sahf
push
cltd
dec
rcrl
adc
xlat
xchg
jge
push
add
out
push
push
push
push
and
mov
add
ficoml
xchg
scas
jp
sub
push
sub
rorl
xor
scas
aad
xor
sbb
rcrl
push
aam
jbe
jo
clc
jae
dec
daa
mov
sbb
into
outsl
and
pop
xor
fstpl
ljmp
mov
adc
jbe
fiadds
testl
fldlg2
cld
js
pushf
xchg
adc
add
adc
sbb
pop
aam
mov
mov
aas
pop
scas
dec
fists
int
adc
inc
jo
inc
push
ffree
addr16
imul
ret
pop
push
mov
sub
sub
inc
mov
cmp
mov
aam
das
lcall
xchg
adc
out
push
iret
and
popf
fiaddl
stos
xchg
inc
mov
mov
jl
out
jge
adc
andl
ljmp
adc
in
addb
sahf
mov
adc
int3
dec
inc
lock
adc
and
add
scas
daa
pop
fsubl
adc
inc
push
adc
push
mov
popf
jmp
mov
mov
movsb
rcl
repz
jne
out
lcall
stos
inc
into
adc
pusha
int3
push
movsb
xlat
in
pop
push
popf
stc
xchg
loope
inc
cmpsb
mov
mov
lret
je
and
cld
dec
pop
xchg
aad
rcrl
mov
adc
out
nop
sub
test
xchg
rcr
test
scas
mov
out
cmp
loopne
mov
pop
lahf
mov
mov
sub
loope
iret
mov
cli
jl
push
xchg
in
scas
outsl
xchg
pop
je
fstl
add
shrb
iret
mov
pop
fildl
jmp
ss
fcoml
sub
xor
ljmp
mov
repz
popf
mov
jne
outsl
ds
sbb
fldl2t
ljmp
imul
mov
movsl
sub
insl
push
mov
pop
cmp
pop
jbe
adc
dec
push
imul
daa
sbb
add
cmp
out
adc
pushf
mov
out
in
mov
xor
xor
lret
sbb
inc
push
pop
pop
inc
aas
add
add
push
push
push
data16
mov
xchg
xchg
mov
out
lahf
outsl
pop
icebp
xchg
sub
mov
pop
inc
iret
push
adc
sbb
cmpsb
adc
dec
in
mov
lcall
push
flds
xlat
stc
and
ret
push
pop
stos
inc
xchg
adc
test
ljmp
adc
sub
rcll
add
ss
jle
mov
jp
push
adc
out
aam
xchg
sub
lods
lahf
shl
jmp
sbb
lcall
pop
out
inc
pop
pusha
xchg
ja
xor
insb
sub
in
test
mov
push
cmpsl
aad
cmp
adc
inc
add
popf
mov
movd
dec
sub
dec
push
or
xchg
int3
pop
inc
xchg
fistpl
es
dec
out
sub
mov
in
mov
pop
pop
push
jmp
and
xor
in
sub
cld
xchg
das
sub
call
sub
cmpb
mov
sub
lods
adc
mov
fsqrt
mov
xchg
mov
or
icebp
popf
sub
add
xchg
call
mov
cwtl
jp
dec
cmpsb
adc
pop
movsb
adc
lahf
gs
cwtl
jno
int3
mov
outsb
mov
xchg
pop
es
test
shr
add
movsl
fnstsw
cmp
cli
addr16
pusha
push
add
outsb
or
pop
out
pop
add
aad
sbb
das
mov
out
jg
ljmp
pop
repz
pop
sub
mov
sti
clc
daa
pop
jl
cwtl
pusha
jmp
out
sbb
inc
push
in
outsb
lcall
int3
add
aad
xchg
aaa
mov
sti
aaa
mov
sti
push
and
outsb
and
push
push
push
mov
xchg
sti
das
sub
mov
mov
in
xchg
jo
xchg
adc
sbb
push
repnz
sub
stos
xchg
push
out
pushl
sub
xchg
std
mov
mov
or
pop
push
cmp
inc
fsts
imul
push
push
outsl
or
push
xchg
mov
jle
adc
shlb
outsl
sbb
push
sub
pop
das
mov
pusha
mov
outsl
mov
and
aas
sbb
mov
xlat
push
fstp
and
or
cmpsl
sub
dec
bound
rcll
adc
inc
dec
push
and
rcrb
inc
rcr
mov
lods
fstps
push
jl
push
xchg
inc
mov
jnp
ss
pushf
pop
sahf
adc
sbb
mov
add
cwtl
shll
mov
fisttps
scas
ficoms
push
pop
sbb
outsl
into
cld
cmpsb
shll
repnz
out
fcoml
xor
in
test
out
insb
jno
das
fbld
push
out
pop
xchg
ljmp
xchg
sbbl
xor
adc
xchg
mov
pop
xor
fucom
insb
iret
cmp
idivb
xor
les
inc
stos
popf
shlb
pop
data16
jge
outsl
repz
sub
pushf
inc
ljmp
xchg
aad
int
push
call
adc
push
or
jb
rcll
dec
aad
xchg
pop
push
push
pop
mov
add
xchg
xchg
or
adc
push
xchg
sub
addb
xchg
pop
loopne
fstl
imul
aam
push
jmp
fsubrl
fidivrs
or
push
and
iret
sahf
pop
roll
cs
pop
push
or
push
aaa
push
cli
fldl
adc
int3
push
rcrb
scas
sub
out
push
pop
push
xor
push
aad
ljmp
rcr
sbb
xchg
inc
dec
add
aad
xor
je
cs
adc
out
push
clc
or
fistpll
sahf
sbb
roll
sbb
push
pop
aam
mov
xchg
xchg
adc
aad
cmp
ror
cwtl
popf
push
divb
inc
or
imul
push
xchg
test
dec
fwait
cmpsl
add
scas
aas
inc
jo
insb
mov
inc
popf
std
xor
mov
sbb
int
add
shll
pop
adc
jp
cwtl
xor
pop
adc
add
dec
inc
push
sub
add
rorb
imul
push
xchg
sbb
sub
add
adc
popf
push
cmp
insl
cmp
push
sbb
fsts
xchg
mov
xchg
mov
pop
or
test
push
aam
jne
scas
or
faddp
pop
fsts
inc
inc
push
stos
or
xchg
movb
push
push
aam
loopne
cwtl
mov
pop
push
repnz
adc
int3
mov
xchg
push
or
mov
shrl
or
xchg
adc
xchg
xchg
xor
rcrb
sahf
ljmp
std
aam
out
mov
push
pop
xchg
insl
or
jbe
mov
xchg
dec
push
sbb
jbe
pusha
mov
rcrl
pop
aam
push
mov
pop
xchg
cmp
stos
aad
push
and
imul
imul
popf
cmp
fildl
pop
pushf
pop
xor
pop
xchg
adc
mov
iret
adc
stos
push
sub
cmp
pop
xchg
sbb
sub
mov
push
add
push
cltd
scas
pop
loop
test
jecxz
xchg
hlt
or
fsubl
cmpsb
cmp
shrl
cs
das
fimuls
pop
xchg
push
sbb
repnz
jno
push
inc
inc
clc
inc
sub
sbb
pop
adc
xchg
or
shr
sbb
add
pushf
pop
repnz
sub
mov
adc
mov
add
pop
sahf
out
cmp
aad
pop
rcr
mov
push
add
scas
jge
xchg
xchg
inc
or
inc
and
rcll
push
ja
pop
bound
fcmovu
das
lock
rcll
pop
or
rol
imul
xchg
cld
lods
push
insb
push
lret
pop
pop
adc
idiv
mov
popf
testb
cmp
sub
rcl
dec
addr16
mov
push
stos
or
inc
sahf
and
push
xchg
xchg
pop
in
arpl
or
pop
add
into
push
sub
inc
test
jge
adc
sti
adc
cmovno
jge
push
inc
stc
rcrb
lahf
push
pop
les
inc
xchg
leave
rclb
xchg
mov
insl
les
sbb
pop
rcll
int
add
stos
cmp
mov
push
pusha
xor
adc
or
push
sub
frstor
loopne
pop
and
call
fimuls
sub
not
cmp
xchg
pop
sahf
aam
sub
popf
xchg
xchg
xlat
rcrb
push
in
jmp
iret
fdivl
xchg
sbb
aaa
pop
lret
pop
in
cmpsb
dec
sbbl
pop
cltd
adc
loopne
jns
repz
imul
fimuls
pop
sub
dec
add
lds
xchg
adc
xchg
mov
sbb
rcll
push
test
adc
scas
ficoms
lret
mov
in
xor
mov
and
pop
adc
push
out
lock
shrl
dec
fcoml
imul
lahf
repnz
sub
out
and
inc
push
xor
adc
add
shl
xchg
xchg
aam
enter
inc
push
cmpb
pusha
std
int3
cmp
shr
inc
adc
xlat
out
leave
stc
mov
inc
xor
outsl
sub
sbb
imul
shl
inc
sbb
les
xchg
xchg
jnp
dec
dec
out
flds
shrb
pop
loop
or
out
push
ror
outsl
imul
push
aad
ret
pop
in
add
push
popf
fstl
mov
insl
sbb
minps
sub
mov
xchg
push
shll
add
scas
mov
js
jge
xchg
push
mul
cmpb
mov
scas
xchg
repz
lcall
stos
clc
or
and
sbb
sbb
pusha
xor
dec
fcoml
inc
xchg
cmp
push
push
into
xlat
adc
sti
sbb
iret
sub
sbb
xor
push
aad
sub
and
ret
sub
das
mov
mov
pop
sbb
push
les
add
push
or
out
sub
push
sub
scas
xor
push
mov
xchg
mov
mov
or
jge
imul
out
mov
scas
inc
sub
push
xchg
pop
fcoml
inc
push
andb
cltd
and
pop
push
inc
mov
sbb
imul
leave
xchg
xchg
filds
pop
xchg
jb
dec
cmc
sbb
imul
cmpl
fcompl
cwtl
sarl
movsl
or
adc
xlat
add
dec
jns
das
push
adc
pop
scas
sbb
lea
cwtl
jo
test
push
rorl
push
iret
jbe
les
cmp
and
movsl
sti
not
lret
js
or
push
rorb
jp
pushf
and
adc
mov
mov
and
cmc
adc
ror
faddl
push
sub
jns
scas
xchg
cmc
xchg
scas
xor
xor
push
xor
not
sub
lahf
xchg
stos
mov
shll
xor
addl
bound
js
adcl
or
je
xlat
cmpsl
push
xchg
imul
mov
sahf
push
inc
roll
pop
push
jb
sbb
fucomi
xchg
push
leave
loop
inc
sbb
sbb
stos
pushf
adc
xchg
insl
xchg
ljmp
es
xchg
je
fucomip
add
push
icebp
mov
shrl
loop
ss
std
mov
mov
jne
pop
pop
movsb
cltd
push
das
in
in
sub
pop
push
xchg
les
xor
push
mov
adc
xor
sub
fcom
cmc
inc
test
sub
xchg
inc
push
adc
jg
xlat
mov
aaa
shrl
cmp
inc
shr
mov
out
push
fstps
cltd
sub
pop
adc
fnstcw
les
fbld
push
lret
push
xchg
xchg
push
shlb
push
and
inc
or
push
scas
push
nop
jae
push
in
out
popf
push
lret
lock
sbb
fld
gs
and
xchg
inc
in
xchg
cmpsl
stos
mov
out
mov
sbb
lods
xchg
sarb
sub
je
aaa
sbb
aad
gs
push
outsl
cmp
int3
das
inc
pop
pushf
std
sbbl
adc
pop
push
add
mov
jmp
sbb
daa
ror
repz
ja
dec
cmpsl
popf
pop
sahf
mov
rcll
jp
adc
sarl
add
ljmp
push
stc
stc
ret
xchg
push
push
xchg
cmp
jbe
push
xor
xchg
mov
xor
enter
lods
xchg
xlat
jp
pop
jge
push
xchg
mov
insb
inc
mov
gs
pop
int3
sbb
fstpl
adcl
lods
fistps
mov
shlb
shl
lcall
movsb
sbb
lcall
push
add
push
mov
lods
je
and
popf
sbb
inc
pop
ret
enter
push
cmp
or
loopne
aas
loopne
addl
xor
ffree
and
sub
pop
cltd
stos
pop
fnstsw
push
aad
sbb
adcl
pop
xchg
sbb
adc
inc
popf
adc
sub
out
mov
in
jb
int
pop
add
mov
hlt
xchg
mov
out
sub
fistl
cmp
adc
jb
loop
cmp
lods
push
ljmp
lahf
fyl2x
jae
add
and
and
outsl
adc
icebp
push
ds
shr
ja
popf
lock
sub
test
adc
inc
sbb
decb
push
scas
imul
mov
dec
xchg
adc
inc
rcl
stc
xchg
mov
push
pop
das
push
or
push
sbb
xchg
cmp
lods
add
adc
sahf
or
xor
enter
lods
push
movsl
mov
pop
sbb
mov
cli
mov
test
imul
sub
push
cmp
push
xchg
add
push
sub
bndstx
lahf
sbb
sub
jb
adc
imul
frstor
sbb
mov
sahf
add
push
pushf
cltd
push
jge
sbb
shlb
jnp
ret
das
insb
fisubrs
popa
sbb
aam
pop
jl
inc
mov
mov
xorl
pop
fidivrs
pusha
sbb
sbb
popa
leave
push
rorl
repnz
ret
pop
sahf
sub
adc
pop
das
cmp
fistps
cmp
or
das
adc
rcll
and
add
inc
jo
outsl
mov
jnp
pop
push
repnz
stos
push
bound
xor
adc
hlt
inc
inc
mull
sub
sbb
fld
sbb
movsl
inc
xchg
adc
in
mov
dec
add
xor
push
pop
inc
pop
dec
sbb
vunpcklpd
rcll
xchg
or
adc
stos
xchg
sub
adc
sbb
adc
pminsw
out
sbb
lcall
leave
cmc
and
push
xchg
xchg
in
sbb
xchg
add
out
jae
lcall
les
rcrl
scas
sti
or
std
adc
adc
jns
pushf
mov
xlat
leave
or
sahf
adc
cltd
insb
punpckhdq
setae
pop
outsl
fnsave
stos
pop
das
mov
rcl
movb
filds
push
adc
aad
clc
pop
xchg
popf
jno
push
pop
add
ss
pop
push
jp
stos
sbb
push
dec
pop
sbb
push
stos
push
add
add
faddl
icebp
sbb
push
sub
xchg
popf
clc
sahf
push
adc
pushf
ficoml
cmp
outsb
adc
shrl
ret
xchg
pushf
loopne
push
adc
xchg
jmp
cmp
loopne
jno
ja
inc
xor
outsl
pop
imul
pop
push
cmc
inc
pop
jmp
fst
sub
cmpsl
das
testl
ret
fildll
mov
pop
lret
pop
pop
add
xchg
cltd
xchg
popa
outsl
push
sbb
lcall
sub
stos
fcompl
sbb
inc
xor
imul
and
lea
jne
movsb
mov
faddp
aaa
adc
mov
scas
push
insl
into
aam
aas
mov
imul
and
flds
aam
mov
mov
ja
rorl
sbb
push
divb
push
xor
sub
jbe
sbb
or
mov
pop
or
sbbl
sti
mov
stos
dec
loopne
outsl
adc
xor
sahf
sbb
xchg
adc
loop
inc
pushf
dec
imul
push
dec
dec
loop
ljmp
push
inc
xlat
mov
sbb
cld
inc
jle
sub
scas
adc
sub
mov
xchg
pop
mov
cwtl
pop
xor
int3
push
inc
mov
inc
pushf
xchg
pop
sarb
cmp
fbld
loop
pushf
mov
add
fsub
lea
stos
jne
mov
mov
push
pop
and
inc
jg
repz
xchg
cmp
xchg
aam
clc
movb
call
jge
rcr
adc
adc
mov
push
inc
sub
lret
sub
xchg
sahf
jno
inc
cmp
rcll
daa
icebp
dec
dec
jmp
outsl
xor
inc
aad
sub
xchg
push
stos
sub
sbb
pop
xchg
sbb
ljmp
cld
adcl
pop
pop
mov
xlat
ljmp
stos
and
out
pop
xchg
in
dec
lock
pop
bound
adc
mov
ficoms
and
dec
loopne
popf
mov
sbb
pop
adcl
enter
rcr
test
push
jo
add
mov
inc
jmp
mov
push
adc
push
fldcw
mov
inc
xor
xor
and
cmpsb
add
pushf
insl
mov
pop
mov
ljmp
mov
sbb
xchg
adc
sub
sub
xchg
sub
pop
stos
adc
push
push
fsubs
imul
aad
add
push
jbe
jno
iret
push
jbe
cmpsl
test
mov
cmp
sbbl
imul
cltd
cmp
or
ret
fcoml
push
outsl
das
push
insl
add
sbb
adc
jb
insl
mov
fstpl
xchg
inc
jno
bound
insl
in
sub
dec
rclb
xchg
pop
dec
mov
add
stos
lea
sbb
les
adc
push
inc
cmp
xchg
pop
mov
jge
xor
adc
test
dec
add
stos
roll
mov
jecxz
pop
sub
mov
nop
sahf
dec
adc
sub
outsl
mov
pop
mov
aad
inc
fisubrs
push
push
add
add
adc
inc
ficoms
adcl
das
inc
xchg
xchg
lock
mov
imul
imul
push
rorl
pop
xchg
inc
cmpsb
xor
sub
mov
in
jmp
pop
push
xchg
push
flds
imul
loop
xchg
cs
push
mov
stos
xor
test
das
into
cltd
inc
pop
xlat
push
cs
ljmp
push
pushf
sub
gs
cltd
add
icebp
mov
jb
fstps
roll
jge
push
push
or
lock
mov
aam
adc
scas
jb
std
jne
call
test
or
push
jl
jecxz
lret
pop
mov
adc
add
pop
cmpsl
dec
aad
pop
push
filds
adc
subl
hlt
inc
xchg
adc
lods
jno
and
push
and
sub
cwtl
push
cwtl
imul
adc
xchg
or
popf
das
push
push
movl
stos
pop
sbb
test
mov
shl
divb
pop
mov
mov
sub
lret
shrb
pop
push
jge
pushf
popf
xor
mov
mov
sbb
int
pop
sbb
popf
and
out
push
and
aam
xor
add
xchg
adcb
sub
sbb
fnstcw
sub
pop
xor
out
ljmp
push
addr16
add
sub
push
xchg
dec
xchg
out
adc
cld
sub
pop
push
sub
fistps
xchg
push
push
lahf
mov
cmpsb
or
stos
cmpsl
fcmovnb
add
ss
mov
shrb
sub
les
adc
test
shl
pop
mov
les
js
outsl
xchg
xor
xor
ret
cmp
pop
push
and
mov
mov
push
push
mov
jmp
fcoml
mov
loop
sbb
call
pusha
cli
inc
lea
xlat
je
xchg
rclb
and
push
fbstp
mov
scas
sbb
xorl
xchg
enter
pushf
aad
test
loope
mov
aam
bound
and
jb
cltd
push
cmp
test
jmp
sbb
cltd
fsts
adc
cmp
cltd
and
scas
pop
stos
stc
xor
add
sahf
push
neg
push
fcomip
fsubl
pushf
or
sub
aad
sub
mull
aam
push
testb
daa
mov
push
bound
fcompl
fdivl
pop
xchg
jo
test
in
mov
jno
hlt
sub
cmpsl
push
mov
add
jle
enter
xchg
xchg
and
gs
inc
fldl2t
or
xchg
add
xchg
rcl
lea
push
rclb
cmp
and
cwtl
orl
mov
pop
sub
pop
and
fwait
pop
inc
sub
cmp
aad
jmp
push
leave
scas
stos
sbb
test
sub
sbb
push
push
xchg
push
insl
lcall
adc
clc
lcall
cltd
rclb
push
jns
adc
sahf
outsl
dec
roll
xchg
push
adc
inc
in
dec
push
inc
push
add
xchg
adc
and
test
pop
or
aam
fcompl
flds
cmc
cmp
dec
add
add
and
and
mov
inc
inc
add
pushf
mov
sbb
add
pop
push
out
inc
xchg
fldcw
pushf
xor
jge
adcl
inc
sub
test
sub
push
mulb
sbb
aas
lea
rcl
push
test
or
sbb
and
ljmp
push
sub
shll
and
mov
lods
outsl
dec
jge
adc
jno
stos
outsl
cmp
call
pop
inc
and
and
xor
aad
loop
in
loop
cmp
adc
xchg
sub
fsubrl
cmp
and
ret
sub
push
cld
add
imul
fsubrl
pop
sti
and
mov
and
inc
rcl
add
sbb
ds
sbb
popa
test
xchg
addb
xlat
stos
ljmp
xor
pop
adc
add
cmp
movsl
lea
out
fsubrp
inc
xor
shl
hlt
shlb
push
fptan
pop
iret
loop
sub
aad
arpl
jmp
jmp
sbb
add
rcrb
push
xchg
mov
ljmp
scas
int3
add
push
out
cmpsb
aas
sbb
pop
xchg
out
mov
mov
push
lret
xor
mov
lcall
push
xchg
fdivrl
ss
xor
mov
adc
fwait
gs
ds
mov
mov
lock
roll
shlb
flds
clc
xchg
xchg
xchg
jmp
ds
xor
outsl
mov
dec
aaa
ficoml
jb
popa
inc
push
sub
mov
in
shlb
mov
xchg
push
pop
fcoml
fwait
xchg
gs
ljmp
pop
pop
inc
sbb
push
mov
push
and
push
dec
out
inc
pop
add
sbb
xchg
push
into
push
movl
mov
cmp
adc
add
sti
and
pop
pop
imul
sbb
stos
xlat
xchg
mov
add
test
push
fstpl
adc
push
cld
lea
repz
inc
lods
fists
inc
push
loope
sahf
cmpsb
or
push
mov
aad
stos
inc
sub
loope
das
inc
lods
pop
sahf
add
push
lcall
scas
bound
ret
fimuls
lea
xlat
push
xchg
sbb
loopne
aam
pop
pop
movsl
rcrb
xchg
or
jge
sbb
loopne
adcl
push
fsubrl
cmp
dec
pop
adc
xchg
and
and
sbbl
fmulp
push
mov
jmp
pop
push
mov
rcll
addr16
pop
addr16
popa
and
pop
jne
add
popa
add
sub
dec
xorb
lock
fidivs
ret
lea
fstl
cmp
fwait
mov
dec
roll
int3
andl
mov
jl
add
sub
mov
pop
pushf
cltd
add
xor
pop
xlat
ror
xchg
xchg
xchg
push
mov
pop
xchg
pop
pop
das
xchg
cmp
pop
xchg
jno
xchg
add
mov
inc
fwait
cmp
mov
sbb
jmp
popf
pop
xchg
bound
fldl
mov
inc
fnstcw
pushf
xchg
adc
cmp
mov
rol
jno
inc
sub
xor
and
xor
mov
xor
fists
fucom
aam
add
push
faddl
repnz
xchg
fistpl
out
xlat
or
jge
xchg
les
mov
scas
push
adc
xchg
ja
push
aas
push
cli
ret
das
outsl
pushf
mov
pop
adc
mov
mov
pop
pop
cmpsl
inc
push
pusha
ret
cmp
adc
mov
sub
mov
mov
push
push
sub
data16
ljmp
adc
xchg
adc
sbb
mov
movsb
ljmp
sub
sbb
hlt
adc
dec
aas
lcall
repnz
fld
jb
bound
xor
fdivrl
popl
push
xchg
fnstenv
sbb
gs
add
inc
aam
test
test
fstl
roll
shlb
shrb
out
pop
add
outsl
push
cltd
add
mov
push
aad
enter
ds
mov
push
sub
ljmp
outsb
adc
jo
push
xchg
sub
cltd
xchg
pushf
mov
xchg
cmp
pop
inc
cltd
push
and
std
xorl
adc
add
rcrl
cmp
adc
mov
inc
sbb
mov
adc
lea
push
sub
aad
out
and
pop
stos
push
push
adc
push
push
rcl
stc
nop
mov
add
xchg
pop
sub
push
sbb
add
lcall
sbb
xchg
cmp
or
dec
sbb
or
stos
out
mov
inc
ja
xor
mov
sbb
mov
aad
or
push
push
cltd
scas
popa
test
gs
inc
adcl
dec
nop
cmp
outsl
push
cmp
xchg
sbb
inc
pop
xchg
pushf
sub
adc
getsec
inc
adc
pop
ror
std
int3
popf
adc
sahf
or
push
clts
and
or
sub
pop
out
mov
dec
mov
addl
cmp
repnz
xchg
aam
fisttpll
and
shl
xor
adc
jnp
mov
loope
imul
mov
or
xchg
sub
sahf
push
pop
inc
imul
xchg
pop
dec
mov
push
mov
stos
gs
dec
sahf
test
aad
or
jle
jne
add
enter
das
out
stos
push
inc
sbb
sbb
xchg
or
vxorpd
fnstsw
int
pushf
push
push
push
int
xchg
shll
ja
ret
pop
push
jp
in
add
js
arpl
out
inc
mov
dec
adc
xchg
divb
xlat
xchg
inc
popf
add
sub
popf
xchg
scas
imul
stos
rclb
aad
jg
xlat
jmp
lods
add
ss
stos
mov
sub
out
push
sbb
xchg
sub
popf
ja
push
sub
adcl
adc
in
mov
push
sub
xchg
aam
les
mov
xchg
push
and
mov
popf
xchg
sahf
xor
imul
adc
cmpsb
inc
sub
outsl
sbb
sub
push
xor
dec
daa
inc
xlat
int
ljmp
loop
mov
push
lock
adc
adc
mov
pop
into
xchg
fstl
jge
fnsave
xchg
stos
sub
enter
sub
xchg
ficoms
push
push
cmpsl
add
push
xchg
sbb
rcrb
or
cmp
stos
popf
adc
cmp
inc
inc
pop
cmp
lcall
adcl
imul
and
rcl
in
jmp
out
fsubp
imulb
push
movsb
fisubs
pop
fsubl
push
push
stos
pop
js
xchg
scas
push
jmp
xchg
adcl
mov
shlb
sub
pop
sbb
icebp
mov
stos
dec
das
fsts
loop
insl
das
push
clc
bound
je
pop
xchg
inc
push
pop
push
push
lods
jbe
sbb
xchg
inc
push
cmp
push
adc
push
sbb
xchg
mov
pop
shlb
and
add
xchg
popf
cltd
iret
mov
push
faddl
ljmp
push
push
fwait
int
stos
push
xchg
cmp
adc
cmpsl
jl
add
roll
mov
scas
lret
icebp
js
push
jle
mov
pop
insl
dec
push
popf
stos
inc
test
or
repz
repnz
push
mov
ret
cmp
les
pushf
adc
add
inc
fstpl
ljmp
shll
cmp
push
scas
dec
inc
mov
stos
insl
stos
push
xchg
push
jnp
sub
pushf
push
push
sub
outsl
xor
sbb
pop
sbb
jecxz
pop
push
xchg
cwtl
xor
mov
and
sbbl
xor
fucomp
aam
hlt
pushf
int3
adc
dec
rcrl
rclb
inc
push
push
rol
pop
ljmp
dec
adc
xchg
jne
add
adc
add
dec
pop
loope
cmp
jno
jne
pop
inc
ret
push
jge
xchg
cltd
xor
push
mov
sbb
mov
das
mov
push
cs
outsb
fadds
xchg
leave
xorl
aam
call
sbbb
xlat
cltd
mov
add
loop
repz
xor
sbb
push
stos
inc
pop
cwtl
sbb
sbb
adc
xchg
leave
aam
sbb
cs
add
lcall
mov
aam
scas
pop
mov
push
xlat
dec
jle
jb
inc
ljmp
out
shlb
pop
pop
xchg
xchg
push
add
mov
fsubrs
sbb
aad
inc
dec
sub
add
notl
leave
jo
mov
mov
mov
pop
xchg
clc
repz
lcall
or
push
sbb
cltd
ficoml
out
xchg
push
pop
adc
outsl
adc
push
pushf
mov
xchg
aaa
or
lahf
stos
sti
outsb
in
or
add
cmpl
lods
jb
pop
fstpl
and
add
push
rolb
sbb
pop
sub
xchg
mov
ret
rolb
add
ss
push
inc
scas
push
sahf
xchg
inc
pop
mov
push
push
clc
cmp
xchg
pop
pushf
xchg
inc
sub
sahf
int3
push
loope
cltd
adc
mov
jmp
cs
xchg
js
fsts
sbb
dec
push
ljmp
rorl
push
les
test
mov
push
cmc
das
adc
pop
sbb
cmp
push
xchg
jmp
filds
push
xchg
pop
xchg
xchg
aad
shll
pop
bound
scas
outsl
std
int3
push
fldl
sti
add
xor
cld
cmpb
sub
xchg
adc
aas
push
stos
xchg
cltd
and
shl
sub
sub
push
clc
inc
sub
or
cmpsl
push
push
cmc
sbbb
pop
xchg
stos
mov
scas
pop
cmp
sahf
sbb
cwtl
inc
lock
push
out
loopne
popf
adc
fld
sahf
xchg
pop
add
push
or
xchg
ret
xchg
inc
shrl
push
push
mov
lods
icebp
frstor
lods
outsl
mov
addr16
cwtl
push
inc
xchg
add
pop
push
adc
push
or
mov
fists
test
adc
sbb
or
pop
push
pop
pop
movsb
fnstsw
jge
pop
sbb
scas
fldl
int
sbb
imul
lret
dec
push
lret
xchg
and
mov
push
cwtl
out
insl
inc
ficoms
in
sbb
aam
sub
sbb
add
enter
aaa
xchg
pop
imul
aad
mov
add
push
xor
cltd
adc
add
inc
ljmp
setge
xchg
xchg
sbb
xchg
cmp
xchg
sbb
add
fcompl
mov
mov
scas
sarb
jne
repnz
add
fstl
add
push
rorl
push
jg
mov
sahf
push
jge
imul
add
sti
pop
push
jae
lahf
dec
addl
add
inc
aam
pushf
push
xchg
adc
xchg
inc
in
xor
xchg
add
fsubrl
imul
mov
push
adc
out
lods
sub
jle
add
mov
rclb
inc
xchg
inc
mov
in
sbb
pop
sub
jge
aam
xor
push
andb
lcall
and
pop
push
adc
ret
pop
out
outsl
push
dec
imul
mov
js
pop
xchg
mov
fistps
or
push
xchg
popw
sbb
bound
pushf
sbb
cmp
clc
xor
sub
imul
stos
jno
mov
xchg
sub
cwtl
aad
lods
dec
push
sub
pop
pusha
mov
fsubr
test
cmp
xchg
popf
fstps
imul
xchg
rorl
mov
hlt
int3
inc
xchg
cmpsb
enter
faddp
bound
cs
push
xchg
push
push
mov
cld
xchg
sahf
jo
xchg
cltd
add
xor
ljmp
loop
sbb
rcrl
into
push
push
int3
inc
xchg
push
pushf
lods
and
pop
sbb
pop
nop
adc
imul
imul
aaa
les
cmp
xchg
sub
sbb
imul
xchg
push
add
adc
lea
fiadds
xor
ss
and
cmpsb
adc
adc
add
popf
aad
dec
add
adc
mov
fistps
mov
push
stos
jge
inc
xchg
lret
pop
push
adc
dec
pop
test
pushf
aad
pop
cltd
in
inc
aam
push
jle
and
inc
pop
add
xchg
fcompl
lods
cwtl
push
push
jno
lods
sub
push
clc
test
jge
outsl
scas
ljmp
xlat
lea
rcll
mov
test
sbb
fwait
pushf
xor
repnz
stos
imul
push
xchg
pop
sbb
leave
bound
adc
and
ficomps
sub
imul
aam
mov
outsl
sub
push
sti
insl
xchg
inc
inc
add
push
xchg
push
ds
mov
add
pop
dec
lcall
lock
push
loop
push
shr
test
adc
int
push
xchg
stos
jl
push
adcb
dec
ret
scas
rcl
in
pop
fsubrl
cld
pop
push
or
push
adc
rclb
adc
das
das
lods
repz
andl
ljmp
sbb
and
mov
loop
rcll
xchg
push
jb
addr16
ret
mov
popf
xchg
push
pop
cmp
fistps
sub
bound
pop
xchg
mov
aam
and
mov
xchg
push
fdivrs
out
sbb
mov
pop
adc
push
ljmp
psubusw
or
fstps
dec
test
and
add
push
lods
pop
pop
aam
push
xor
fldcw
xchg
lods
ficomps
outsb
lret
incl
movsl
arpl
push
mov
and
xor
push
mov
shrl
fildll
iret
mov
and
orl
pop
fstp
sub
dec
push
adc
push
push
inc
pop
sbb
adc
push
adc
iret
sbb
and
stos
dec
push
pop
inc
xchg
cltd
adc
outsb
adc
movsb
arpl
pop
xchg
xor
xor
stos
sti
pop
ss
adc
push
push
pop
scas
sbb
test
inc
fstpt
and
xchg
fadd
sbb
js
mov
push
inc
cmp
rorb
rcrl
sub
mov
sahf
xor
adc
adc
popf
fwait
sbb
and
fsubrs
push
imul
push
mov
insl
xor
sbb
rcll
stos
pop
mov
mov
pop
sbb
xchg
xchg
shrb
subl
or
mov
movsl
mov
scas
les
pop
push
sub
addl
push
in
aam
push
pop
push
adcl
push
sub
sub
sahf
mov
pop
push
cmp
push
adc
lret
xor
cmp
mov
imul
ficomps
mov
xchg
sahf
xor
fstpl
sub
rcrl
inc
sti
adc
mov
xchg
sub
leave
les
pop
mov
fistl
push
adc
mov
fcoms
push
add
xlat
fldcw
repnz
sbb
das
dec
imul
xchg
xchg
pop
repnz
mov
dec
push
addr16
mov
fisubs
dec
xchg
inc
stos
cld
and
out
stos
pop
lea
in
pop
push
pop
adc
dec
popa
push
xchg
fwait
cmpsl
and
xchg
addb
stos
adc
pop
sub
aad
stos
testb
or
push
sub
movsl
aas
sub
fsubrl
add
push
xor
sbb
pop
sbbl
xor
les
sbb
cmc
or
sub
pop
push
scas
cltd
out
add
mov
push
cmp
mov
pop
adc
push
mov
sbb
sub
jb
and
xor
push
add
leave
les
adcl
and
notb
add
sbb
push
addb
out
push
jb
add
in
outsl
lods
insb
dec
mov
aad
ficomps
cmc
arpl
xchg
mov
faddl
or
stos
jle
inc
xchg
loope
jb
out
pushf
faddl
push
push
das
adc
fstps
call
ljmp
pop
pop
pushf
xor
pop
cmp
adc
pop
adc
aad
sti
jge,pt
out
adc
xor
sub
inc
jo
add
xchg
mov
adc
push
fsub
push
sahf
mov
fists
orps
add
lock
adc
shll
sbb
xchg
or
pushf
test
push
cltd
dec
ljmp
aad
sub
movsw
push
mov
dec
enter
out
push
pusha
cmp
xor
test
adc
sti
mov
inc
adc
fcompl
cmc
mov
xor
sub
lcall
mov
hlt
mov
sbb
xchg
outsl
push
lock
sub
mov
mov
rcrl
lods
and
adc
outsl
lock
popf
inc
push
sub
pushf
xchg
lret
inc
fbld
and
add
rcr
mov
inc
repz
add
fsts
xchg
icebp
sub
sub
fmul
fsubl
mov
xlat
pop
inc
jg
lods
push
xlat
sbb
cmpl
sbb
sbb
add
xor
jmp
sub
inc
mov
fcoml
inc
clc
sub
push
sbb
ret
sbb
cmp
cmp
adcl
rcl
fists
xor
push
jge
imul
shlb
push
ljmp
sbbb
sbb
xchg
leave
stos
imul
inc
sbb
pop
inc
adc
push
adc
cmp
imul
inc
sub
sub
sbb
pop
roll
movups
aad
cmpsl
sahf
xor
insb
push
adc
popa
adc
out
push
sub
out
push
pop
ljmp
jae,pt
adc
insb
sub
fcompl
sbb
rorl
dec
out
push
leave
pop
pop
les
jns
iret
inc
pop
push
pop
xlat
insb
xchg
push
inc
jne
dec
pop
and
je
adc
adc
pop
pop
or
stos
xchg
push
xchg
sbb
adc
int3
outsl
xchg
or
clc
into
pop
lret
jg
imul
fcompl
out
and
fst
out
sub
jb
and
push
push
aam
xchg
pusha
pop
data16
xchg
sbb
sub
imul
push
aad
hlt
or
inc
sbb
das
inc
cmc
bound
push
or
imul
xchg
lods
xchg
adcl
adc
lods
stos
push
scas
insl
xor
adc
xchg
test
cltd
mov
jmp
xchg
repnz
and
push
cmc
repz
ret
loop
cmp
inc
loopne
bound
xchg
inc
push
push
cmpsb
sbb
jmp
mov
into
inc
pushf
and
outsl
pop
sbb
rcll
xchg
push
das
adc
or
inc
push
pop
pop
push
ljmp
and
push
sub
into
orl
ret
imul
out
sub
pop
push
inc
and
sub
adc
pop
pop
sub
fdivl
xchg
std
adcl
inc
pop
push
test
push
test
jl
inc
sub
push
sub
std
push
push
lock
push
fadd
push
push
int3
iret
inc
and
pop
adc
addr16
sahf
mov
ljmp
out
dec
divps
xchg
add
sbb
adc
push
mov
xor
mov
in
in
push
subb
dec
sub
add
push
dec
lret
aam
mov
push
inc
inc
stos
xchg
add
cmp
mov
xchg
mov
and
aad
iret
jae
xchg
push
out
inc
lea
adc
sub
adc
in
mov
bound
ds
sbb
addb
out
sub
mov
lea
inc
push
xor
pop
mull
lahf
lea
sbb
pop
cltd
push
lock
jbe,pn
rcll
push
rorl
ficomps
sbb
add
rcr
xchg
pop
push
insl
insl
sahf
push
hlt
ss
push
aad
adc
pop
cmp
lds
push
xor
sbb
leave
xchg
adc
xchg
push
pop
rclb
mov
xlat
mov
sbb
sub
out
aam
mov
or
sub
xor
pop
fimuls
ret
fcompl
adc
inc
insl
lods
xlat
aad
mov
divl
xchg
xchg
sub
inc
ret
shrb
fists
and
daa
adc
or
sub
inc
pop
xchg
xlat
sub
push
jbe
adc
sub
mov
lea
cmc
mov
icebp
adc
cmp
sub
out
pop
mov
cltd
scas
push
aas
sahf
pop
imul
pop
mov
test
sub
cmp
mov
jnp
xchg
inc
fimull
push
pop
push
push
dec
xchg
lods
repnz
push
jge
mov
push
adc
fdivl
cltd
pop
pop
push
and
mov
dec
xchg
add
mov
adc
adc
pop
mov
pusha
fwait
stos
mov
adc
add
xor
mov
pushf
mov
shlb
push
pushf
leave
push
aas
push
fcomp
mov
sub
push
push
pop
xor
pop
outsl
lcall
ret
aad
inc
shl
sub
sub
ds
add
xchg
add
cmp
aad
dec
pushf
inc
mov
add
outsl
inc
adc
out
inc
outsl
popa
mov
std
xchg
cmp
int3
mulb
scas
pop
out
sar
das
pop
push
mov
pop
xchg
add
outsl
fcompl
scas
xchg
mov
sbb
push
sub
xlat
outsl
cltd
es
jns
add
adc
sub
aad
sub
sub
test
imul
andb
es
fisubs
fmull
sbb
das
clc
sub
xchg
adc
fcoml
out
aam
and
inc
push
dec
mov
in
xor
lods
sti
pop
pop
fisubrs
mov
mov
push
pop
bound
push
loop
mov
push
shrb
les
sub
add
push
xchg
sub
cmc
mov
imul
adc
enter
inc
add
mov
add
pop
lret
mov
or
pop
xlat
pop
pop
sbb
xlat
cmp
faddl
stc
pop
fisubs
shl
push
fsts
fwait
jg
mov
mov
inc
fs
push
sub
adc
dec
sub
fisubrl
shlb
lods
inc
inc
ds
sub
and
mov
and
or
stos
and
pop
xchg
and
jmp
fcom
cmp
in
sub
and
mov
pop
push
sbb
pop
sbb
loopne
jo
fstl
aam
lcall
and
adc
aam
fsts
jge
push
jo
or
adc
pop
enter
inc
sbb
add
and
loopne
push
pop
int3
mov
aam
sub
pop
sub
sbb
push
add
fbstp
or
sbb
leave
add
sahf
ret
movsb
mov
xchg
cltd
and
mov
mov
pop
les
xchg
sub
out
ljmp
repnz
mov
and
mov
call
push
add
jo,pt
roll
push
pop
push
lcall
add
inc
cmc
mov
adc
inc
jb
out
mov
ljmp
shlb
inc
xlat
xchg
xchg
das
pop
imul
dec
pushf
fsts
push
les
xor
pop
xchg
sub
xchg
mov
pop
ljmp
lea
pop
pop
mov
adc
cwtl
xchg
das
sub
ret
push
inc
psrlw
xchg
push
es
insl
movsl
das
xchg
setge
mov
or
popa
scas
mov
pop
lea
das
xor
adc
push
test
add
fistps
inc
add
ficomps
sbb
inc
jmp
sbb
pop
fisttps
shlb
mov
sub
push
nop
inc
push
addl
mov
sbb
fildll
push
fucom
leave
sbb
pop
je
ds
stos
aam
shrl
and
sbb
sahf
adc
rcl
adc
push
sbb
ljmp
das
push
inc
aam
or
popf
pop
push
xchg
pop
mov
ficoms
adc
ss
fcomp
push
push
jmp
push
pushf
ret
add
rcr
sub
push
mov
sub
int3
stos
push
push
cltd
lea
push
pop
xchg
dec
push
pop
cltd
hlt
out
pushfw
scas
mov
and
and
setne
push
adc
inc
lods
sub
xchg
lret
pop
mov
adc
push
push
inc
push
push
ljmp
imul
sub
insb
dec
push
faddp
out
sub
pop
push
adc
jmp
xchg
push
ret
push
outsl
add
lcall
pop
sbb
add
sbb
add
out
push
lods
xchg
push
jne
push
inc
repnz
mov
std
andb
push
scas
stc
inc
movsb
aam
add
pop
push
xchg
cltd
rol
mov
push
out
fldcw
test
pop
aam
addr16
adc
dec
add
cmp
shrb
sbb
or
adc
leave
xchg
push
and
push
push
out
push
xchg
popf
cmpsl
pop
popf
push
xchg
lret
pop
push
scas
jp
movl
inc
sbb
mov
add
push
pop
popf
fists
adc
xchg
sbb
mov
push
int
push
xchg
out
jb
int
push
add
cmp
sahf
rclb
pushf
int3
push
pop
sbb
les
and
sbb
sub
xor
outsl
jmp
lahf
std
mov
out
pop
inc
inc
adc
mov
popf
xchg
mov
pop
inc
insl
push
movsl
ret
iret
insl
movsl
xchg
sub
rcll
pop
scas
and
test
mov
addr16
push
sub
adc
and
add
xchg
ljmp
and
jge
push
stos
pop
mov
je
push
and
sbbl
push
adc
arpl
xchg
xchg
cmp
lea
int
les
push
push
pop
rcrb
mov
fstpl
push
xchg
xchg
mov
push
daa
xchg
inc
xlat
out
lea
xchg
push
xchg
xchg
adc
ret
or
aad
push
je
in
inc
iret
and
das
push
inc
decl
push
out
faddl
adc
add
mov
sub
xchg
and
in
sbb
sub
xchg
xchg
nop
ss
inc
inc
inc
pop
adc
aad
dec
lods
xchg
xor
xchg
inc
lret
rclb
xchg
insb
sbb
scas
cmp
dec
sbb
scas
lcall
adc
lock
pop
xchg
sub
sbb
cltd
orl
bound
lods
push
push
pop
scas
dec
lods
jmp
adc
sbb
pop
adc
inc
outsl
sub
loop
arpl
and
jo
adc
loope
outsl
adc
mov
sub
movsb
push
or
fbstp
int
xchg
sub
shl
outsl
and
xor
ss
icebp
pop
mov
pop
push
sbb
leave
imul
or
xor
sbb
into
adc
shrl
xchg
sub
nop
xor
outsl
sub
sub
mov
lea
stos
les
aaa
add
mov
cmp
andl
push
icebp
into
xchg
pop
push
or
cmp
xchg
das
inc
fisttpll
sbb
push
mov
fmulp
shlb
mov
push
mov
inc
jne
fsubrl
add
nop
gs
inc
mov
mov
and
pop
imul
sub
mov
faddp
std
std
push
lock
cmp
inc
xchg
aam
sub
sub
lods
sbb
push
les
mov
pop
mov
add
or
jge
das
inc
jns
arpl
cmp
lahf
push
xchg
mov
and
in
sbb
xchg
imul
loope
inc
imul
push
hlt
mov
adc
dec
mov
out
out
rclb
and
out
mov
mov
das
rol
mov
jne
xchg
add
jne
push
adc
aad
push
mov
cmpps
adc
movsl
addr16
jp
push
mov
xchg
jmp
mov
call
push
push
pop
push
mov
fsub
lods
mov
pop
faddl
aam
mov
out
push
xchg
ljmp
mov
fdivl
movsl
dec
xor
add
xlat
pop
cmp
shr
adc
push
fiaddl
sbb
adc
imul
outsl
xchg
sub
inc
push
cltd
clc
sub
sahf
inc
sbb
inc
xor
or
adc
sahf
xchg
xchg
push
push
scas
rclb
pop
xor
pushf
std
mov
mov
je
cwtl
jecxz
inc
jno
mov
ds
pop
lock
mov
inc
fldt
or
mov
js
imul
aaa
xlat
inc
imul
push
pop
mov
add
adc
stos
adc
jmp
out
fstpl
add
sbb
sub
mov
hlt
shrb
add
xchg
leave
pop
rol
xchg
pushf
into
xchg
jmp
adc
sub
xchg
push
movsl
add
stos
sbb
ja
push
das
fcmovu
xchg
cmc
outsl
mulb
outsl
cmc
movsl
xchg
shr
mov
rcl
ret
or
add
xchg
push
push
jns
ds
sub
sbb
adc
push
mov
push
push
sbb
sub
xchg
sbb
sbb
loop
lret
cmp
push
xchg
xlat
pop
repnz
add
aas
or
imul
fisubrs
pop
popa
fisttps
lret
nop
push
cmp
add
xchg
in
add
rol
push
push
sub
and
push
sub
lcall
inc
push
inc
xlat
push
cmpsl
in
ret
outsl
jnp
shll
lret
scas
push
xchg
imul
pop
pop
pop
jge
pop
inc
aad
push
lcall
cltd
rolb
or
xchg
xchg
adc
insl
les
add
sbb
ficoms
and
inc
repnz
mov
icebp
push
push
imull
lods
mov
popf
mov
aad
popl
mov
mov
fsts
lret
imul
cld
adc
push
xchg
roll
pushf
xchg
subl
fnsave
pop
loop
ficomps
mov
aam
sub
and
popf
ret
xchg
nop
ror
push
push
stos
xchg
clc
dec
out
lahf
je
mov
gs
add
test
fidivl
in
push
pop
push
cmp
dec
in
xchg
aad
pop
push
fcomps
popf
xchg
mov
leave
inc
pop
adc
mov
out
pop
and
loop
scas
sub
sub
push
push
pop
sbb
rcrb
mov
ret
lea
cmp
mov
push
mov
xorl
sub
add
mov
adc
cmpsl
repz
pop
shl
pop
sbb
lock
adc
aad
push
lods
subl
aad
jns
ficoms
lahf
xor
repnz
sti
test
outsl
pop
xchg
shll
sarb
jg
pop
out
inc
imul
scas
adc
dec
pop
pop
aaa
fwait
push
mov
rcrb
call
xlat
lods
notb
je
and
leave
cmp
cmp
add
mov
das
push
inc
push
mov
les
mov
lea
mov
ljmp
je
push
filds
stos
xchg
aad
out
push
xlat
xchg
popf
mov
fsts
xchg
sub
fstl
and
call
push
pop
outsb
lcall
add
push
adc
sbb
pop
push
xchg
lret
icebp
jo
test
popf
sti
or
cmp
cmp
sbb
lcall
pop
pop
ss
sbb
mov
stos
mov
pop
addr16
xchg
rol
scas
jecxz
sbbl
fucomp
adc
adc
push
xchg
xchg
and
adc
shll
enter
rclb
push
push
nop
sub
adc
adc
add
cltd
rcll
push
xor
mov
inc
inc
and
shll
sbbl
push
push
mov
inc
sub
lret
aad
sub
xchg
clc
mov
push
add
xchg
ficomps
and
push
mov
pop
push
xchg
jae
push
push
ret
inc
test
out
dec
movsb
pop
fmull
push
andl
dec
test
adc
jl
shll
data16
imul
xchg
fldcw
sbb
leave
sbb
dec
aad
fstl
test
add
xchg
and
cltd
xchg
mov
stos
aad
sahf
fistpl
inc
ljmp
sbb
outsl
aad
pushf
and
mov
adc
fcompl
bound
mov
jg
xchg
push
lods
mov
sbb
ret
and
adc
sbb
fwait
fwait
popa
jle
pop
stos
pop
rorl
sbb
outsl
add
push
mov
sub
xchg
iret
in
movsl
push
jnp
sbb
sub
or
xor
popa
mov
dec
insb
adc
sbb
cmp
xchg
adc
sbb
sub
das
aam
outsl
mov
and
adc
pop
add
popf
sbb
nop
lods
scas
push
xchg
push
sbb
xchg
mov
adc
sbb
push
ljmp
pop
or
push
push
adc
pusha
cmp
pop
xchg
jb
xlat
mov
push
loopne
leave
inc
stos
xlat
jne
popf
lahf
int3
std
fildll
aam
xor
mov
push
scas
rcll
sbb
sti
cmp
cmp
and
sbb
rcll
jbe
out
cmc
mov
mov
mov
mov
testb
sbb
and
mov
in
xchg
fcoml
ds
cmp
sbb
imul
sub
adc
repnz
fidivs
or
pop
adc
insb
add
enter
notb
adc
sbb
sbb
cwtl
sbbl
inc
popf
jnp
lea
bound
dec
sbb
sbb
push
mov
jns
imul
push
pop
test
lret
orl
and
mov
and
data16
call
inc
rcrl
jp
out
xchg
push
in
outsl
stos
adc
cmp
leave
push
outsl
popa
adc
ss
push
mov
jg
xor
ret
outsl
mov
aam
xor
popa
dec
shrb
inc
sub
pop
inc
sysexit
rcrb
scas
sub
push
xchg
aad
inc
in
rcll
fsts
das
add
xchg
aam
fwait
add
imul
cmp
ret
das
pop
push
roll
cs
lods
jmp
push
xchg
lcall
dec
jmp
outsl
stos
push
pop
fst
mov
lret
cltd
push
into
adc
mov
fwait
cmp
lcall
xchg
xchg
fldl
lea
out
std
addb
push
inc
ljmp
push
mov
push
xor
push
inc
fsts
das
sbb
add
aas
xchg
pop
pop
xchg
jge
pop
adc
add
popf
ret
xlat
mov
cmp
ret
stos
rcll
sahf
adc
faddl
mul
mov
xchg
dec
pop
jge
xchg
cld
dec
sub
xchg
push
adcl
push
outsl
fs
lods
test
in
jno
stos
out
clc
ss
push
cltd
sahf
rorl
cmp
fsubrl
lods
ret
xchg
inc
push
sbb
sub
push
insl
fs
ds
fdivp
test
sbb
aam
nop
xchg
pop
pop
and
inc
daa
pushf
jno
adc
insl
xchg
rclb
mov
loop
pop
in
and
push
inc
sbb
sti
xchg
je
mov
push
xchg
push
push
sub
inc
pop
and
pop
aam
and
inc
ljmp
push
ja
rorl
arpl
ljmp
mov
leave
stos
pop
les
jne
lret
mov
shll
jmp
ficomps
sbb
xchg
xchg
stos
mov
inc
push
add
mov
sub
enter
push
or
inc
jp
popa
xchg
mov
and
outsl
fwait
push
rcrl
sbb
push
xchg
dec
dec
push
pop
ficomps
xchg
inc
and
xor
cmp
dec
xchg
cwtl
stos
xor
jg
xchg
adc
pop
adc
mov
hlt
adc
sbb
in
and
divl
adc
stos
jge
push
faddl
loopne
mov
push
push
leave
filds
pop
rolb
xchg
in
out
out
push
stos
add
scas
leave
sub
sbb
loope
sub
fstpt
decl
adc
sub
pop
scas
leave
cmp
xchg
jno
xor
pop
pusha
aad
jp
xchg
stos
mov
fwait
jp
mov
int
xlat
pop
sub
jmp
test
outsl
push
sub
dec
push
xchg
das
sbb
imul
cld
fmul
and
sub
mov
aad
iret
pushf
fisttpl
inc
cmp
pop
aaa
sbb
mov
xchg
pushf
adc
push
cltd
repnz
sub
leave
xchg
xor
and
adc
sbb
lea
fists
shrb
lods
cltd
push
pop
insl
mov
xlat
sti
arpl
pop
clc
test
rcll
mov
hlt
jb
jno
inc
jb
insl
add
add
lea
adc
push
stos
cmp
xlat
je
test
push
mov
in
cs
adc
out
sbb
jb
inc
xchg
mov
call
sub
mov
sub
sub
add
push
imul
sbb
repnz
mov
xchg
xchg
sub
dec
pop
sub
outsb
jne
sahf
cmp
adc
push
push
xchg
jbe
push
cmp
ja
lahf
adc
xor
pop
push
adc
cmp
dec
sbb
jl
adc
pushf
sbb
adc
push
je
xchg
mov
outsb
dec
adc
xchg
sbb
push
xor
insl
xchg
imul
ficomps
lods
frstor
sub
or
sub
xchg
xchg
out
add
lea
popf
pushf
cmc
insb
mov
jmp
mov
adc
outsl
lock
out
fdivr
pop
xor
shrl
repnz
lds
or
femms
mov
sub
xchg
sahf
sbb
test
hlt
mov
adc
out
and
xchg
lahf
mov
mov
or
fdivl
push
cmp
cmp
mov
xchg
scas
mov
inc
xchg
sub
stos
lret
pop
push
xchg
pop
push
iret
adcb
fwait
jne
test
adc
pop
mov
sbb
icebp
sbb
daa
sbb
jbe
inc
test
pop
stos
add
popf
inc
jae
aam
mov
fisubs
and
push
test
mov
ds
int
fsubr
das
fisubs
xchg
adc
adc
aam
mov
and
pop
fcompl
cmp
lcall
ss
adc
pop
xchg
leave
cmpsb
lea
adc
sbb
mov
push
imul
imul
stos
adc
adc
cltd
inc
xchg
insl
les
sbb
push
adc
sahf
fisubrl
ficoms
xchg
aad
mov
int3
push
push
roll
xor
fcompl
mov
stos
push
inc
mov
adc
pcmpgtd
pop
dec
push
sbb
inc
pop
mov
test
cmp
push
mov
roll
ret
sbb
xlat
adc
adcl
mov
bswap
lcall
rcl
xlat
sbb
stc
adcb
pop
mov
hlt
cltd
adc
push
ljmp
lods
ljmp
add
lods
xchg
aad
test
jnp
pop
sbb
push
sbb
adc
cmp
xchg
sbb
or
sub
add
mov
jns
xor
xchg
push
ja
inc
xchg
push
mov
mov
popf
insl
mov
adc
mov
xchg
push
rclb
fstp
imul
lcall
orl
cld
shr
xchg
xor
add
lcall
ss
jbe
insl
xor
mov
std
xor
and
xchg
inc
rcrl
inc
sub
popa
fistpll
add
adc
add
mov
cld
subl
adc
mov
pop
enter
and
xchg
or
add
adc
sub
or
insl
xchg
push
pop
add
fnstcw
fsts
inc
push
sub
pop
adc
popa
inc
shr
out
and
xchg
add
push
and
inc
and
lret
adc
push
adc
mov
icebp
sub
sbb
add
mov
pop
scas
mov
mov
inc
movsb
push
sub
mov
and
nop
sub
adc
inc
xor
das
cmc
nop
movsl
scas
xchg
out
sub
pop
std
sub
nop
push
sub
sbb
pop
xchg
lret
rclb
rorl
sbb
bnd
push
adc
outsb
jne
imul
adc
dec
adc
les
das
aaa
movsb
les
icebp
sarb
imul
push
ja
clc
push
and
push
or
psubsw
and
rol
aad
inc
jecxz
rcrb
cmp
sub
push
adc
pusha
out
add
inc
push
and
add
ficoms
mov
shrl
faddl
pop
xchg
mov
fwait
add
bound
push
lods
cwtl
xchg
std
sbb
aad
shrb
push
xlat
sbb
jge
pop
xchg
push
rcrl
sbb
sbb
les
leave
inc
outsl
dec
mov
xchg
pop
inc
push
ffreep
jnp
cld
leave
inc
pop
sbb
lahf
add
sbb
outsl
sbb
mov
shrl
cmp
lret
and
mov
outsl
pop
xchg
rcll
push
xor
leave
aad
or
fsubl
sbb
sti
out
push
inc
or
scas
popa
jecxz
aas
adc
mov
push
sub
cmp
sbb
push
lea
add
fcoml
push
cld
sbb
imull
imul
aad
jns
sahf
popf
sub
xchg
adc
adc
adc
fisubs
ret
outsl
adc
push
jmp
push
mov
popf
jae
inc
mov
add
add
or
push
addl
xchg
xchg
les
jmp
outsb
xor
sbb
mov
add
pop
aad
data16
pop
mov
xlat
inc
in
or
inc
add
push
orl
outsb
cmp
add
fbld
lods
pop
sbb
jns
push
mov
lods
adc
out
cwtl
push
gs
gs
pop
sub
adcl
out
pop
and
mov
bswap
adc
add
xchg
mov
subb
movb
pop
stos
sete
into
pop
aad
dec
ljmp
sbb
fdivl
push
or
adc
scas
fists
add
xor
mov
push
jo
ljmp
js
outsl
pop
dec
cmpsb
mov
push
xchg
cmc
jp
mov
pop
cltd
das
mov
out
lea
pushf
mov
addr16
aas
fists
inc
aad
xchg
jmp
and
das
inc
adc
scas
xorl
out
test
stos
fisttpll
push
scas
push
push
adc
adc
mov
xchg
outsl
push
inc
push
adc
adc
lcall
fst
pushf
das
push
out
mov
lods
imul
push
xchg
jns
roll
xchg
mov
adc
sbb
rcll
pushf
jl
sub
mov
xchg
mov
movl
and
adc
jmp
dec
outsl
ds
push
insl
pop
pop
stos
fstps
lcall
cmp
sbbb
push
mov
mov
xchg
lock
sub
push
xlat
sahf
push
pop
jp
xchg
sbb
ljmp
inc
lret
xchg
dec
add
lret
sbb
xchg
roll
xchg
xchg
and
dec
adc
push
mov
pushf
lret
jo
xor
pop
push
pop
jmp
ret
in
imull
pop
sbb
sub
lret
aam
inc
fiadds
imul
xor
jge
pop
clc
and
push
push
push
jo
pop
adc
push
add
push
aad
pusha
cmp
mov
stos
sbb
imul
push
adc
int
scas
adc
aam
aad
mov
popf
sbb
push
mov
or
sbb
jbe
pop
adc
mov
into
xchg
adc
or
sbb
leave
xchg
xchg
aad
sbb
xor
test
push
push
push
loopne
mov
push
and
bnd
push
mov
ret
scas
out
inc
es
jge
sub
mov
and
xchg
and
sbb
xor
and
add
add
fnsave
inc
jecxz
inc
jo
xchg
lret
movl
pop
xor
add
xchg
cmp
mov
fistps
ja
pop
inc
xchg
shl
lock
stc
pushf
test
sarl
bound
pop
sub
and
addl
scas
stos
mov
pop
les
repnz
and
xchg
cmp
push
push
pop
sbb
jo
mulb
out
jmp
and
repnz
mov
sahf
ljmp
sbb
repnz
inc
test
pop
push
sbb
into
das
out
dec
push
xchg
adc
push
and
push
push
rcrl
loop
adc
pop
mov
push
sbb
lcall
inc
popf
push
out
mov
cmp
xchg
inc
inc
adc
fadd
shrb
pop
adc
xchg
aam
xor
adc
xchg
scas
imul
pushf
std
repnz
push
popf
rcrl
push
ficomps
and
xchg
sbbb
push
xchg
adc
scas
lods
jnp
push
addr16
sahf
sbb
push
add
scas
nop
repnz
imul
popa
scas
fsts
pop
stos
push
xor
jbe
rol
push
rcr
fmulp
js
int
ret
leave
sub
push
lods
sbbl
adc
test
mov
cwtl
adcl
pop
cmc
aas
sub
and
dec
push
test
inc
lret
sbb
push
jns
test
popf
jno
xchg
or
test
mov
mov
lds
stos
push
push
stos
popf
setb
jge
pop
inc
jo
jg
das
pop
mov
add
test
or
inc
sti
xlat
push
std
icebp
xchg
aas
pop
sbb
xchg
and
sub
and
pop
pop
adc
sbb
lods
imul
mov
dec
pop
push
mov
cmp
pusha
push
xchg
xor
sbb
jne
mov
xchg
pop
push
sub
mov
xlat
mov
int
xchg
aam
loop,pn
ficomps
les
mov
ljmp
rcr
xchg
push
outsl
into
fsts
int
inc
ljmp
adc
stos
pop
lahf
pop
lods
test
xchg
rolb
or
aad
sbb
lea
pop
mov
ret
std
push
inc
jge
stos
adc
push
or
adc
sub
xchg
push
mov
pop
stos
push
sbb
out
ljmp
repz
iret
out
mov
xchg
push
mov
rclb
sbb
cltd
push
pop
and
pop
fistps
xchg
movb
leave
ljmp
popf
int3
sub
sbb
iret
sub
adc
add
xchg
aad
jne
sbb
or
cmp
out
lods
add
jg
xchg
stos
lock
fdivl
sub
pop
cmp
sbb
add
fs
add
mov
push
outsl
sbb
pusha
mov
xchg
aad
imul
popf
aam
shll
sbb
mov
cmp
mov
mov
stos
pop
ret
pushf
ret
and
pusha
mov
inc
ficomps
mov
jle
bound
fists
mov
lret
push
pop
xchg
outsl
sbb
sub
popa
mov
mov
cwtl
pop
insl
fcoml
add
das
sub
cltd
cmp
and
in
jg
into
xchg
leave
push
dec
push
outsl
adc
pushf
adc
push
out
mov
das
mov
rorb
or
popf
outsl
xchg
ljmp
push
loopne
out
adcl
cmpsl
test
push
mov
and
adc
adc
pop
pop
push
push
inc
loop
rclb
addr16
cmp
or
lcall
add
pop
out
popf
outsb
push
mov
push
push
or
aas
ljmp
lret
xlat
lret
sbb
mov
cmp
sub
cltd
fbstp
loop
icebp
xchg
and
jge
xchg
pop
inc
push
xor
inc
add
push
adc
xchg
les
push
das
fucomi
cmp
xchg
push
aad
scas
jae
sub
ss
xchg
fwait
popf
push
cmp
and
addr16
stos
std
cwtl
sbb
sti
push
dec
fidivl
adc
sub
push
lods
ror
xchg
ljmp
rol
pop
pop
mov
lcall
push
xlat
sub
mov
mov
leave
gs
adc
inc
and
sbb
nop
add
sahf
repnz
sbb
imul
iret
mov
mov
aad
aam
and
add
outsl
cmp
sub
adc
sub
pop
sbb
les
pop
out
in
cmp
mov
movsb
xchg
lret
xor
mov
test
das
sahf
out
daa
xchg
pop
xchg
std
or
faddl
push
ficoms
push
mov
cs
sbb
push
push
jge
xchg
xchg
inc
cmp
pop
sahf
xchg
sbb
push
sti
pop
scas
fstl
push
lea
int
push
fyl2x
sarb
push
ljmp
sbb
xlat
cmp
mull
push
inc
pop
mov
mov
ret
orps
lea
push
stos
sbbl
ss
lods
xchg
sbb
stos
testb
xchg
xchg
adc
ja
test
push
imul
popf
dec
xor
fistl
add
xlat
shrl
mov
daa
repnz
mov
xor
aad
pop
inc
xchg
inc
push
adc
or
mov
mov
sbb
mov
push
call
sbb
push
adc
out
aad
mov
mov
adc
fstpl
pop
dec
dec
xor
das
dec
pop
xchg
push
ficoml
pop
test
outsl
stos
das
test
aam
and
sahf
fcoml
imul
adcl
ljmp
add
sahf
shll
cwtl
adc
adcl
bound
dec
xchg
cwtl
xlat
dec
pushf
push
inc
inc
je
jb
rcl
dec
lret
stos
sub
shl
in
push
add
xchg
push
pop
inc
push
mov
int3
sub
decl
adc
push
sbb
adc
xchg
jge
outsl
and
sti
int3
push
pushf
stos
inc
in
loop
sbb
push
mov
pop
xorl
outsl
sbb
out
pop
comiss
imul
add
in
leave
scas
repnz
gs
add
int3
outsl
pop
pop
push
mov
cltd
mov
int3
push
fisttps
sub
sahf
mov
addr16
sbb
fcmovnbe
sbb
fldenv
pushf
nop
stos
pop
fdivl
test
adcl
jp
adc
dec
notb
fmuls
xor
mov
push
lret
stos
rclb
fiadds
in
mov
pop
cmp
pop
xchg
insl
push
xchg
ficomps
pop
and
ljmp
lea
outsl
sahf
cmp
out
push
call
inc
xor
fwait
push
out
aad
int3
mov
fwait
das
sbb
cmp
les
lcall
sub
adc
ljmp
sbb
dec
push
pop
inc
push
sti
xchg
clc
sub
and
stos
daa
or
push
push
or
xor
insl
ljmp
xchg
jmp
int
add
xchg
xchg
je
adc
leave
leave
mov
and
scas
pop
ret
jns
sbb
adc
rcll
imul
mov
fld
and
gs
insl
or
inc
xchg
adc
dec
adc
and
push
inc
ror
mov
pop
push
xor
pop
xchg
adc
mov
pop
push
mov
xchg
imul
xchg
pushf
pop
push
adc
les
pop
leave
aad
push
je
pop
xchg
xor
icebp
fcoml
pushf
adc
jns
push
lods
xchg
jbe
adc
mov
inc
push
call
test
fnstsw
add
lock
xchg
jmp
leave
sub
jns
cmp
sub
pushf
dec
rclb
sbb
adc
cmp
sbb
clc
pop
pop
add
outsl
adc
imul
and
imul
rclb
in
rclb
imul
or
push
outsl
dec
xchg
adc
ret
cltd
aam
adc
imul
inc
cmp
dec
sub
ficomps
fbstp
aad
mov
imul
daa
mov
stos
ror
into
test
ret
push
scas
xchg
sbb
and
jne
push
push
inc
xor
push
sbb
sub
sbb
inc
jno
sbbb
add
fsts
xchg
mov
sub
bound
dec
xchg
and
cmpb
sahf
inc
push
roll
fildll
xor
inc
sub
or
ds
rcrb
jbe
movb
sub
push
inc
or
lock
or
std
pop
pop
test
fists
add
ja
xchg
ljmp
adc
jno
rol
xor
jne
aam
sub
sbb
pop
inc
jmp
gs
add
mov
pop
xchg
shr
sbb
sbb
lcall
xchg
popf
cmp
pop
adc
les
sbb
dec
xor
adc
cmp
and
adc
fisubrl
adc
negl
pop
inc
aaa
aad
bound
sbb
cwtl
or
mov
ficoml
pushf
jmp
pop
popf
sub
inc
xor
xchg
mov
test
outsl
xlat
mov
sub
pop
scas
push
cmp
jo
xlat
das
sbb
push
push
dec
xchg
lock
sub
sbb
dec
xchg
xor
cs
mov
pop
adc
push
imul
ret
stos
push
inc
push
loop
mov
pop
inc
cmpsb
aam
mov
das
xchg
loop
pop
outsl
test
adc
cltd
aad
cmp
inc
push
adc
add
stos
xchg
sub
rcrl
xchg
movsl
setne
scas
xchg
cmp
imul
push
scas
int3
stos
rcrl
dec
xchg
pop
jae
xor
xor
sbb
pop
scas
in
adc
gs
div
hlt
inc
push
lods
add
sahf
xchg
pop
stos
sarl
aaa
lcall
leave
inc
xor
fstpl
mov
adc
cltd
imul
inc
xchg
push
sub
xchg
xor
pop
and
mov
push
push
or
pop
push
cmp
xchg
sub
fistps
mov
lret
xor
adc
ret
sbb
fstps
mov
ja
movsl
pop
push
push
into
fstl
test
push
cmp
sbb
xchg
scas
ljmp
roll
jg
loop
sub
mov
sahf
adc
mov
ret
in
cmp
push
sbb
inc
popf
imul
in
nop
xchg
aaa
xchg
xchg
ljmp
andl
rolb
xchg
sbb
ljmp
xlat
pop
sarb
pushw
adc
gs
pushf
movsb
mov
pop
insb
into
mov
sub
push
add
sub
push
xchg
ror
out
aad
das
insb
mov
xchg
pop
rcr
in
stc
xlat
mov
pop
dec
ljmp
aad
inc
ss
add
fistps
cltd
out
pusha
xchg
inc
pop
push
xchg
sahf
daa
mov
push
xchg
adc
bound
bound
sbbb
std
sub
sub
xchg
aam
sbb
pop
into
pop
int
fcoml
cltd
pusha
sub
lcall
andb
jp
and
sbb
mov
sbb
pop
fstl
push
aad
push
out
mov
in
xchg
jne
cltd
lock
add
inc
pop
push
add
push
push
ljmp
mov
lods
pop
push
sarb
sub
scas
les
add
pop
lock
pop
sbb
mov
or
rcll
aad
popl
ffreep
ljmp
jne
stos
mov
xlat
add
nop
sbb
jb
pop
pushf
out
lea
outsl
push
adc
xlat
imul
push
fs
mov
push
inc
jle
clc
es
push
sbbb
push
addl
inc
adc
out
mov
inc
int
xor
scas
loopne
xor
movsb
mov
clc
xchg
jae
adc
stos
loop,pn
jp
sub
xchg
pushf
add
and
bound
mov
pop
push
aad
cwtl
xchg
nop
mov
sub
gs
xchg
pop
test
pop
push
adc
enter
inc
insl
rol
adc
pop
inc
mov
and
lret
dec
adc
jno
add
aam
pop
or
outsb
mov
dec
jmp
inc
dec
pop
pop
adc
stos
push
push
inc
popf
sub
adc
pop
sahf
push
mov
dec
leave
repnz
xchg
stos
dec
subb
push
fwait
mov
adc
out
lea
pop
sbb
ljmp
shrl
sahf
mov
leave
pop
aam
into
mov
jns
and
pop
adc
sub
inc
push
aam
adc
loop
fildll
pop
outsl
pop
mov
and
stos
hlt
sti
xchg
and
adc
in
mov
sahf
adc
sbb
and
jecxz
in
scas
and
jnp,pn
ss
xor
adcb
push
sub
les
inc
movsl
adc
or
in
outsl
sub
les
lea
adc
jo
sub
repnz
mov
inc
rcll
sbb
daa
leave
sbb
jp
out
sub
xchg
rcrl
inc
in
das
stos
int
xchg
outsl
shll
xchg
cmpl
fldenv
fcompl
shll
push
fdivr
jno
adc
xchg
push
sbb
mov
ljmp
into
push
ror
sub
test
out
repz
flds
jne
decl
inc
les
adc
adc
scas
and
les
sub
das
xchg
sahf
sbb
cli
pop
pop
test
adc
xchg
push
mov
cmp
mov
jno
test
sbb
sbb
addl
pushf
cmp
or
cmp
pop
outsl
fcoms
scas
xchg
shll
insl
cmpsb
pushf
xchg
pop
das
adc
daa
xor
into
pop
pop
aad
mov
enter
into
inc
xor
or
jle
repnz
mov
lret
mov
add
pop
push
fdivp
fldt
popf
test
push
mov
lods
cmpsb
loopne
sbbl
fisttpl
lods
jge
and
bound
cltd
cmpsb
pushf
sub
xchg
scas
shrb
inc
popf
inc
pop
sub
dec
jge
add
add
in
dec
movsl
cltd
xchg
push
not
push
and
into
pop
xor
inc
adc
lods
and
aam
xor
push
mov
jne
xor
adc
adc
ds
mov
movsb
pop
inc
adc
mov
xchg
pop
pop
and
xor
lea
leave
pop
lock
test
inc
out
das
xchg
je
inc
lods
adc
mov
xchg
xchg
enter
popa
sub
subb
push
rolb
adc
pop
push
sbb
sbb
sub
mov
js
addr16
adc
add
into
push
xchg
ljmp
fimuls
push
sbb
push
imul
scas
sahf
push
push
and
and
add
ljmp
cli
shll
insl
push
sbb
out
push
push
pop
test
add
aas
push
inc
cltd
test
xchg
dec
mov
adc
pop
mov
fstpl
adc
into
pushf
add
adc
insl
push
inc
xchg
cmp
fadd
popa
hlt
xchg
push
sub
popf
xlat
bound
xor
add
iret
inc
sbb
push
push
push
cmpsb
lea
loope
add
xlat
and
fwait
add
fidivs
add
insl
lcall
and
xchg
scas
aad
pushf
rcll
adc
pop
xchg
push
inc
add
xchg
rolb
mov
gs
pop
pop
push
pop
popf
out
and
sub
pop
mov
inc
xchg
push
xchg
xor
inc
mov
mov
xor
push
push
hlt
inc
mov
fs
adc
imul
push
sub
push
inc
pushf
push
pushf
lea
xchg
xchg
aaa
es
inc
push
push
adc
aaa
mov
and
ss
cmp
stos
sbb
pop
xchg
or
push
add
les
sbb
jns
push
lahf
xor
fs
int3
sbbb
in
push
push
xchg
addr16
xor
mov
fstps
push
inc
insb
enter
cmp
fsubl
andl
into
out
enter
xchg
cld
push
dec
notb
lahf
bound
or
adc
outsb
pop
push
push
sub
sbb
cltd
or
pop
push
aad
xchg
movsb
rcr
cmp
adc
fcmovbe
sub
or
fwait
insl
outsl
push
adc
push
or
in
in
aaa
das
ficomps
repnz
in
push
leave
mov
sub
and
les
pushf
xlat
push
mov
mov
outsb
xchg
push
jb
sbb
out
add
loop
inc
and
sbb
fcoml
call
pop
sub
xor
sbb
in
int
hlt
fstps
addr16
push
stos
and
popl
divl
adc
cmp
inc
pushf
pop
sbb
adc
xchg
das
push
stos
inc
and
leave
fdivp
inc
repz
jo
pop
and
cmp
push
stos
xchg
push
xchg
rclb
pop
test
push
mov
xor
mov
imul
xchg
sbb
lret
inc
adc
xchg
aam
sbb
psubusw
rcll
mov
into
inc
dec
push
mov
scas
sub
iret
inc
push
add
pushf
sbb
pop
pushf
les
push
loop
xchg
arpl
push
filds
xchg
push
inc
xor
xchg
aas
or
cltd
adc
das
cmp
fildl
les
mov
cwtl
push
sbb
xchg
push
rep
sbb
subl
cmp
pushf
sahf
sbb
ljmp
sub
pop
push
cmp
fcompl
push
ss
das
mov
xchg
or
aad
pop
push
adc
hlt
push
mov
add
pop
adc
aad
ret
push
pop
adc
stos
push
cmp
faddl
xor
pushf
pop
mov
stos
adc
rorl
and
push
outsb
fnstsw
push
cmp
fcoml
add
sub
aas
push
lret
inc
push
push
sbbl
aam
aad
mov
jae
xor
or
sub
push
sbb
adc
lcall
lea
das
cmc
push
mov
pushf
mov
and
adc
push
xchg
sbb
jns
xchg
andl
enter
ss
mov
dec
xor
shrl
or
push
adc
les
sbb
xor
ljmp
call
or
pop
lcall
sub
sbbb
sub
and
scas
push
sbb
cwtl
and
xor
stos
mov
xchg
stc
adc
xchg
mov
ljmp
push
aam
mov
pop
stos
or
push
push
pop
sbb
das
inc
adc
dec
scas
rclb
fstl
xor
and
ljmp
pop
add
lret
and
xchg
xchg
lcall
or
push
data16
inc
rcll
test
xchg
pop
and
subb
sub
push
inc
sbb
push
aam
aad
out
adc
jge
inc
pop
pop
and
in
add
outsl
xchg
push
aam
push
shr
mov
sub
adc
xor
aam
xor
push
outsl
outsb
lea
ljmp
sti
adc
pop
mov
addr16
outsl
shrb
dec
movsl
pushf
int3
lods
adc
aam
dec
mov
aas
xchg
jns
add
push
adcl
cmp
xchg
pop
push
rcll
enter
and
clts
xor
leave
aad
xchg
enter
mov
pop
adc
mov
sub
add
dec
xchg
scas
inc
and
aas
jmp
pop
inc
bound
mov
popa
mov
rcll
adc
outsl
aam
adc
lahf
push
cltd
sub
or
adc
inc
sbb
xchg
sbb
mov
lods
ror
mov
setb
ret
enter
lea
flds
std
or
aam
lea
push
sysexit
xlat
xchg
xchg
pop
rcrb
mov
push
add
pop
push
xchg
xor
nop
adc
and
icebp
into
adc
mov
in
pop
inc
pop
and
fisttpll
push
jp
add
rcrb
pop
imul
sub
les
push
fsubrp
bound
mov
cmp
imul
mov
aam
inc
xchg
adc
or
adc
rcll
sub
sbb
jno
push
fnsave
add
cmp
add
inc
rcll
lea
mov
xchg
push
sbb
xchg
push
leave
adc
mov
xchg
rcr
inc
pop
scas
das
cmp
rcrl
push
cmc
stos
adc
pop
cmp
leave
pushf
xchg
jne
pop
lods
stos
shlb
cwtl
aam
out
xchg
push
and
pop
imul
dec
xchg
jo
dec
sbb
push
pop
inc
mov
sbb
fcoml
and
add
adc
lock
mov
pop
push
jo
and
out
stos
xlat
out
inc
push
fimuls
xor
aad
xchg
call
push
imul
xchg
adc
jmp
pop
fsqrt
adc
jb
xchg
in
iret
push
cmp
pop
iret
mov
sbb
xor
mov
repnz
add
or
shr
jmp
xor
and
aad
scas
mov
dec
add
xchg
add
xchg
push
cmp
sbb
jne
jno
dec
jmp
adc
cmp
movsl
jo
arpl
adc
mov
sub
lcall
mov
mov
add
pop
mov
mov
cmpsl
aas
and
std
test
sub
xor
xchg
xchg
stos
adc
lret
xchg
sub
inc
pop
xchg
popf
push
loop
sbb
inc
inc
sbb
mov
or
js
sbb
subb
xchg
cmp
dec
push
sbb
movsb
sbb
push
stos
movsb
adcb
mov
ficomps
sbb
mov
pop
int
xor
adc
cltd
out
push
std
cmp
xchg
sbbl
dec
xchg
push
int3
ljmp
inc
std
faddl
test
sbb
adc
pop
fbld
dec
mov
jns
outsl
out
inc
inc
push
add
loop
scas
ficoms
sub
in
rcrb
inc
push
fptan
mov
sbb
fildll
dec
ljmp
adc
dec
sbb
add
ficomps
adc
push
std
and
les
xchg
sub
pop
das
pop
pop
push
mov
mov
push
outsl
nop
popf
sub
in
mov
adc
sub
mov
popf
xor
inc
addb
imul
pop
loopne
inc
pop
out
test
add
nop
adc
jmp
push
pop
pushf
xor
adcl
jle
cs
xchg
lret
adcb
pop
aad
inc
push
adc
push
shl
xlat
push
and
sahf
imul
test
mov
in
mov
jmp
xor
push
popf
leave
test
dec
pop
scas
stos
xchg
aam
xor
adcl
sub
jl
cmp
lods
push
icebp
ret
adc
pushl
adc
shll
or
ljmp
ret
sub
sbb
mov
stos
push
pushf
gs
push
rorb
test
sbb
sub
ficomps
inc
push
rorl
lret
mov
clc
pop
lcall
pushf
mov
mov
rorb
adc
sub
adc
shll
and
test
cmp
sahf
in
dec
mov
les
fdivl
inc
sbb
xchg
shrl
sbb
push
je
insl
fs
shlb
xchg
data16
dec
xor
lret
cmp
les
push
adc
lods
sbb
imul
stos
call
xlat
add
push
mov
inc
fiadds
xchg
rolb
cmp
movsl
ljmp
aam
addr16
sahf
test
aaa
pop
pop
scas
adc
pushf
push
sbb
push
test
mov
shlb
adc
mov
sbb
in
fs
mov
popf
push
or
out
cltd
mov
xchg
scas
leave
pusha
xchg
std
das
push
stos
sub
nop
das
add
fstpt
and
push
or
popf
cli
inc
cmp
xor
xor
xchg
sbb
push
pop
jge
push
cld
xor
add
gs
xchg
xor
sbb
loop
inc
xchg
scas
mov
fidivrs
lcall
xchg
adc
push
into
pushf
ljmp
push
loopne
sahf
aam
push
inc
mov
sub
and
adc
sbb
faddl
stos
or
movsl
add
fxch
aad
rorl
lods
jmp
aaa
pop
aam
sbb
adc
pop
xchg
aad
aaa
xchg
adc
xchg
cs
mov
lods
pop
sahf
adc
lcall
rcrl
mov
mov
std
enter
sbb
stos
dec
jmp
dec
les
stos
inc
add
fimuls
sub
xchg
xor
in
je
or
imul
inc
sbbl
dec
fcoml
adc
inc
les
add
pop
iret
adc
mov
inc
sub
mov
scas
sub
push
jmp
push
pop
cltd
ja
jns
mov
test
or
pop
shll
xlat
push
shlb
enter
shrb
repz
sbb
pop
adc
xor
and
sbb
fidivl
test
xchg
inc
ficomps
adc
push
aaa
in
ret
xlat
das
divl
ljmp
fwait
jne
xchg
xchg
adc
enter
sbb
pop
sahf
pop
mov
mov
in
jle
aaa
push
pop
stos
and
mov
nop
inc
pop
xor
push
inc
addr16
mov
mov
aad
fdiv
sbb
sbbl
popf
outsl
xorb
cmc
pop
sbb
push
fldt
flds
fisubrs
push
and
adc
ljmp
push
sub
loopne
or
sub
and
cmp
les
mov
pop
lahf
fbstp
ss
inc
and
rcll
ljmp
push
sub
sub
sbb
lret
adc
and
bound
push
ds
outsl
int3
adc
adc
in
mov
pop
andl
adc
xchg
sub
xchg
popf
push
inc
xchg
push
bound
dec
je
adc
and
pop
and
push
pop
or
mov
lock
cwtl
ret
out
sub
xchg
pop
mov
rclb
hlt
lcall
sub
cmp
ljmp
je
pop
sub
jle
mov
ror
push
jge
imul
subb
loopne
out
jne
inc
mov
jl
fiadds
mov
mov
popf
xorl
aaa
jae
adc
pusha
adc
aam
fisubrs
clc
xchg
out
pop
lods
push
stos
push
adcb
clc
cmpsl
ljmp
push
inc
xchg
inc
xchg
push
push
and
std
inc
push
add
sbb
rcr
pop
cmp
adc
in
lahf
popa
jne
sahf
xchg
xor
test
and
xchg
gs
cld
jg
inc
ffreep
cwtl
scas
rcll
fstl
das
adc
pop
xchg
push
shrb
jnp
test
ret
pop
cs
sbb
push
push
mov
movsl
and
add
xor
xlat
inc
fs
fcompl
gs
shrl
xchg
scas
xchg
xor
lret
xchg
insl
out
rcr
adc
push
dec
int
cltd
xlat
aad
mov
popf
jns
mov
movsl
sti
jle
arpl
xchg
jl
jb
pop
push
and
ss
mov
stos
xchg
or
aam
lock
push
xchg
mov
xlat
adc
pop
xchg
pop
mov
aas
cltd
stos
repnz
sub
bound
in
sbb
bound
rol
sub
sub
xchg
and
sub
outsl
and
xor
xlat
fsubr
jb
in
jo
push
lods
mov
aad
pop
add
add
add
xchg
pop
xor
sti
popa
imul
mov
and
xchg
dec
cltd
sub
push
aam
fbld
inc
pop
xchg
pop
sbb
mov
push
fadds
mov
lahf
fisubrs
dec
ds
sahf
dec
ljmp
push
data16
xchg
rcrl
in
movl
push
cmp
and
lret
push
and
cmp
cmpsb
mov
push
inc
inc
or
push
je
jne
inc
add
push
int3
adc
pop
inc
fcompl
test
adc
pop
sbbl
mov
inc
cmc
push
mov
ja
sub
mov
and
sub
mov
mov
push
lea
loop
push
push
cld
mov
into
cltd
aas
sbb
push
dec
jae
aam
int3
iret
push
cli
das
rorl
xchg
loopne
and
push
outsl
push
push
push
pop
pop
adc
bound
fstps
xchg
popf
shll
pop
mov
loopne
mov
push
pop
push
in
adc
push
xchg
adc
nop
ljmp
adc
sbb
cltd
sub
and
pop
xorb
cltd
out
push
shr
sub
inc
xchg
fldenv
xchg
mov
add
aad
rclb
dec
or
scas
cmp
jb
push
jno
add
popa
movzbl
mov
sbb
mov
and
jge
rcll
jne
dec
cmp
sbb
sbb
das
xchg
sbb
sbb
add
xchg
aam
pushf
xor
pop
mov
rcll
out
sbb
test
ds
ss
push
jbe
add
push
pop
out
pop
int3
pusha
in
sub
inc
sub
imul
fnstsw
mov
sbb
hlt
inc
xchg
or
xlat
popf
rolb
adc
dec
fs
shlb
pop
adc
cltd
inc
pop
sub
and
sar
push
xor
pop
mov
xchg
xchg
cmp
pushf
cmpsb
push
or
fildll
pop
mov
push
pop
xchg
xor
ficoml
mov
xchg
mov
pop
test
push
roll
adc
ja
xchg
jne
and
push
sbb
pop
ljmp
push
inc
mov
push
aad
lds
fstpl
dec
imul
dec
dec
push
cmp
stos
cmp
pop
stos
mov
adc
xchg
lret
xchg
or
gs
inc
and
cmp
sbb
push
in
imul
mov
sub
shl
ja
cwtl
xlat
push
fimuls
int
xchg
inc
lret
sahf
shl
add
pop
je
jns
mov
inc
jge
adc
xor
lcall
xchg
ret
shrl
xchg
cmp
pop
xchg
adc
push
sbb
sub
mov
faddp
push
push
pop
push
xchg
or
popa
push
les
xor
stos
fisubrs
inc
scas
sbb
xchg
add
push
call
das
push
adc
cwtl
fwait
es
subl
sub
sbb
push
xchg
xchg
pop
push
aad
xchg
mov
popf
repnz
sbb
push
std
xchg
je
mov
faddp
xchg
push
sub
sbb
push
pop
fstpl
mov
lods
test
ljmp
xchg
sarb
popf
in
les
int3
imul
adc
push
sub
lods
mov
rorl
pop
int3
fsubrl
aam
stc
jge
or
sarl
test
pushf
scas
enter
xor
fwait
insl
aaa
adc
roll
jmp
push
flds
ffreep
and
inc
mov
fstpl
pop
and
mov
and
roll
notl
cld
adc
fbstp
bound
adc
les
mov
sub
sub
and
push
pop
push
cltd
mov
pop
push
scas
push
out
ds
push
mov
sbb
movsl
lods
testb
push
dec
mov
jne
add
pandn
std
pop
mov
lahf
inc
jb
repnz
xlat
adc
xchg
gs
scas
jno
out
sbb
dec
fstpl
das
enter
rcl
movsl
cwtl
jne
adcl
jg
out
fistps
stos
push
add
push
or
out
jne
sub
push
pop
adc
pop
ficomps
es
adc
sub
push
inc
push
or
mov
inc
pop
xchg
fldt
dec
adc
outsl
pushf
xor
and
push
sub
sbb
cs
test
sbb
in
loope
xchg
lock
aas
xchg
xchg
faddl
dec
ja
and
push
in
dec
inc
jne
sbb
shrl
xlat
push
lea
fcoml
ret
adc
jecxz
push
mov
adc
adc
ret
inc
mov
enter
in
call
sub
push
inc
ficomps
out
push
xchg
out
xchg
pop
push
fcoms
popf
imul
mov
mov
mov
fisubs
and
ljmp
repnz
je
push
mov
xchg
fstl
pop
sub
fdivp
xchg
pop
pop
addr16
lcall
aam
fs
bound
sti
xchg
mov
popf
fists
push
xchg
lods
clc
push
xchg
xchg
add
xchg
pop
add
scas
xchg
cltd
mov
in
and
fdivl
movsl
sub
dec
add
cltd
push
xchg
adc
sbb
push
scas
xchg
jnp
or
xchg
mov
push
ss
aas
ffreep
adc
dec
fdivrl
aad
sbb
arpl
xchg
and
lock
add
cltd
les
pushf
loop
sbb
xchg
shll
inc
int
xchg
sbb
push
les
fdivl
jbe
andb
js
add
pop
aam
fstps
sub
sbb
push
sbb
pop
adc
mov
lcall
ret
push
xchg
pop
and
adc
sub
xlat
sbb
std
sahf
orl
pop
popf
xchg
gs
scas
pop
sub
rcl
mov
je
bound
push
inc
dec
xchg
sbb
sbb
add
adc
and
test
or
cld
push
int
xchg
arpl
xchg
push
cmp
inc
fldcw
adc
pop
xchg
inc
mov
jne
dec
jle
stos
inc
rcl
cli
repz
cmp
xor
subl
xor
in
sub
inc
std
mov
lret
add
xchg
xor
xchg
xchg
lcall
sbb
imul
pop
aad
jne
insl
mov
pushf
sbb
xor
fsts
inc
stos
push
sub
sahf
adc
xchg
xchg
jae
and
cmp
fnstenv
pop
add
cltd
sbb
mov
faddl
push
out
adc
mov
sub
and
and
movsl
pop
loop
push
imul
clc
in
movsl
out
pop
xor
int
pop
fsts
sub
and
les
lret
sub
push
xchg
jo
sbb
mov
rclb
rclb
pop
aam
adc
sahf
xchg
adc
pop
addr16
lods
inc
inc
int3
mov
xchg
pop
xchg
jmp
loop
adc
xlat
ja
sbb
inc
push
lea
imul
movsb
adc
outsb
xchg
jge
adc
mov
stos
bound
aad
das
das
cltd
mov
pop
pop
cmpsl
push
jne
addl
nop
pop
pop
aad
test
jo
xlat
and
je
rcl
push
mov
sahf
ret
popf
sub
cmp
fcmovbe
inc
push
test
pop
xor
mov
push
mov
fidivl
push
pusha
sub
repz
mov
lods
in
ret
jg
add
addr16
push
jo
les
popa
aas
xor
ret
or
pushf
call
and
cmpsb
enter
xor
add
pop
push
mov
adcb
mov
stos
mov
enter
mov
push
xchg
cmp
es
dec
flds
pop
adc
adc
insl
aaa
sbb
js
clc
outsl
cmp
cmp
rcrl
adc
ljmp
mov
pushf
ret
inc
rcll
add
stc
inc
les
push
rcrl
into
sub
add
xor
insb
xchg
je
jae
rclb
das
push
xor
out
imul
mov
lods
dec
push
ljmp
loop
outsl
ss
loopne
cmp
cmpsl
jo
mov
and
pop
push
jno
xor
lret
push
push
icebp
lret
sub
cmc
jle
test
cmp
mov
fnstenv
ljmp
neg
mov
and
mov
sub
or
mov
add
push
fldt
sub
movsl
xlat
sbb
adc
push
push
xchg
push
jmp
push
xchg
outsl
push
rclb
sbb
cmp
push
add
sbb
pop
testb
pop
adc
jge
mov
sub
push
adc
dec
fstl
cmp
sbb
and
out
adc
enter
adc
mov
pop
pop
test
dec
adc
fildll
xlat
push
ficomps
pop
cltd
aad
mov
xor
add
add
push
aam
addr16
fadds
int3
xchg
cmpsl
adc
in
fcoml
inc
shll
inc
lods
push
dec
push
push
pop
inc
aaa
pop
popf
xor
mov
int
sbb
fsub
rcll
and
mov
mov
adc
pop
push
push
lock
xchg
movl
ja
push
adc
fldenv
fcom
xchg
add
dec
inc
adc
and
pop
push
insb
add
push
popf
les
sti
inc
shrl
sti
and
dec
dec
push
test
inc
push
xchg
sub
das
sbb
inc
adc
int
pop
push
jmp
sbb
outsl
xchg
mov
xor
pusha
xor
js
inc
add
push
sarb
xor
sbb
mov
push
sub
push
sbb
xchg
and
xchg
movsb
sbb
ret
stos
subb
xlat
outsl
pop
push
addl
mov
push
sub
push
sbbb
ljmp
lea
das
pop
shll
add
xchg
subb
sbb
cmpsb
das
sub
mov
mov
xchg
sbb
xor
lcall
loop
out
xor
push
xchg
leave
xchg
and
push
imul
xor
ja
pop
in
dec
sub
scas
mov
roll
les
dec
push
xchg
sarb
das
pop
sub
dec
push
pop
aad
add
xor
andl
mov
inc
xor
xchg
jb
ret
pop
movsb
stos
lcall
push
xlat
bound
adc
adc
sub
push
push
and
xorb
aam
push
popf
cltd
xlat
movb
mov
pop
in
xchg
test
pushf
cmp
dec
push
adc
push
fwait
int
pop
gs
push
shlb
push
insl
sbb
aam
sub
mov
push
sbb
orl
xchg
xchg
and
lods
sbb
fisttpll
jnp
fisubs
fimull
push
inc
xchg
sub
aam
sub
push
inc
aas
sbb
pushf
imul
and
fildll
sbb
sub
in
add
pop
ror
pop
mov
mov
nop
pop
ds
test
fiaddl
pop
and
xchg
out
and
mov
or
rcrl
test
inc
cmp
adc
sahf
xchg
out
inc
subb
mov
xchg
shl
out
lock
push
das
je
jno
fstl
sbb
xchg
sbb
ret
outsl
push
icebp
xchg
xorb
and
sub
jge
sbbb
outsl
imul
aad
rolb
rcr
sbb
mov
push
js
mov
ffree
lock
jno
inc
orl
ss
in
popa
push
xchg
add
rcrb
push
push
sub
xchg
pop
sarb
fstps
adc
inc
cmpsl
jbe
outsl
lods
add
inc
fldl
bound
loop
dec
xor
movsl
repz
xchg
push
lcall
lock
xor
or
xchg
add
outsl
sub
aad
cmp
mov
popa
test
inc
stos
xchg
shlb
in
mov
adc
add
pop
fmul
das
fsubl
pop
adcb
xchg
mov
adc
into
rclb
shlb
xor
xchg
cmc
dec
sub
adc
out
lock
inc
push
pop
movsb
repnz
bound
ja
xor
stos
sbb
repnz
jge
je
lcall
cwtl
das
pushf
inc
xor
imul
aam
fsts
icebp
mov
sbb
scas
in
sub
cld
mov
push
push
xor
xchg
rcll
popf
push
jge
sub
pushf
jno
or
add
pop
data16
inc
popa
sbb
popl
or
xorl
subl
sbb
dec
sbbb
int3
das
fstl
xlat
cltd
cmp
imul
push
lods
adc
imul
stos
pop
inc
pop
xchg
add
sbb
push
shlb
push
dec
pushf
pop
pop
sub
sahf
xchg
cmpb
xlat
adc
rcrl
sbb
scas
les
or
add
pop
rcll
push
movsb
push
xchg
jl
dec
jne
rcll
sbb
push
sbb
push
mov
or
cmpsl
in
lret
add
pop
xlat
ficomps
adc
pop
dec
inc
push
xchg
addr16
xchg
insb
das
imul
lcall
or
addr16
fcomps
fwait
xchg
pop
xchg
out
sub
pop
xchg
sbb
iret
sbb
pop
cltd
and
xchg
popf
fidivrs
mov
xor
xchg
jp
or
aaa
add
shl
inc
aad
fldl
inc
sbb
fdivrl
fldt
sub
pop
push
leave
fstps
inc
ljmp
cmc
daa
mov
rcrl
push
add
and
xchg
mov
add
fisubs
xor
xchg
ficoml
popf
push
adc
xchg
inc
and
ret
adc
push
fldl
mov
cmp
rcrb
mov
sub
xchg
pop
mov
into
xchg
push
mov
roll
psrlq
cmp
mov
cmpsl
mov
or
lods
add
movsb
add
sahf
cltd
xchg
push
icebp
add
add
aam
in
call
adc
push
push
fcom
shrb
pop
rol
mov
xchg
inc
xlat
adc
mul
dec
cltd
push
in
fildll
xchg
xor
movl
pop
xlat
xchg
sbb
push
nop
aam
xor
sbb
pop
push
imul
xor
adc
xor
mov
fisubrs
mov
fcompl
mov
sahf
out
sbb
push
mov
ss
das
popf
stc
mov
pushf
pop
sub
mov
mov
inc
xchg
push
hlt
shlb
and
inc
in
out
push
dec
es
popf
sbb
into
sbb
dec
dec
in
out
sub
xchg
xorl
push
sbb
xchg
dec
and
push
xchg
outsl
xor
push
and
sub
inc
push
add
ficoms
xchg
sbb
shrl
das
sbb
push
adc
cmp
adc
js
stos
fiaddl
pop
out
xchg
leave
lcall
imul
stos
xchg
iret
push
inc
das
repnz
in
add
scas
rcl
inc
lcall
pop
cli
xor
add
sbb
cmp
push
xor
xchg
sub
pop
jb
push
jno
scas
push
mov
or
inc
daa
cltd
scas
fidivs
gs
push
adc
xor
sub
lods
adc
xchg
stos
sahf
rcl
out
daa
sbb
fsubl
jb
aam
sbb
movsb
inc
jp
xchg
andb
les
mov
negl
sbb
mov
push
xor
mov
xor
sbb
imul
sub
cmp
mov
sub
fld
fnstsw
push
jb
or
push
inc
cwtl
xchg
lock
imul
out
sbb
pop
sub
sbb
pop
pop
push
mov
pushf
push
imul
adc
popf
hlt
push
stos
cld
fmul
hlt
dec
add
ret
dec
mov
test
push
ljmp
push
scas
ret
push
push
pushf
in
cltd
sahf
cmp
push
adcb
les
cwtl
xchg
push
push
push
fcoml
popf
fnsave
fs
sbb
push
rolb
les
mov
jne
fsubrp
and
push
add
dec
inc
inc
xorl
and
imul
or
imul
shr
dec
adc
jp
mov
mov
push
add
fucomp
mov
inc
pop
mov
push
shlb
push
shll
mov
out
pop
cmpsl
adc
inc
imul
mov
mov
es
adc
sub
pushf
stos
lret
into
stos
scas
xchg
add
pop
xchg
sarb
sub
out
and
lods
mov
pop
stos
adc
test
add
aam
push
sbb
mov
or
out
scas
outsl
add
mov
sahf
sbb
out
call
aam
push
or
scas
cmp
rcr
lcall
sbb
pop
orl
xchg
sar
ljmp
mov
xor
xlat
loop
and
xchg
xchg
sahf
cmp
shrl
jmp
xchg
xchg
push
pop
loop
inc
xlat
sub
adc
fsubr
lret
adc
add
push
rcrl
movsl
add
les
fsts
out
or
sbb
adcb
pop
adc
rcrl
aad
les
cs
cmp
sbb
into
adc
mov
sbb
adc
rcl
mov
xchg
sub
adc
jge
ljmp
sbb
inc
outsl
mov
push
lea
inc
mov
mov
ret
pop
inc
add
push
sbb
outsb
xchg
push
ret
pop
jo
or
out
loop
stc
inc
push
mov
outsl
adc
add
fisubrs
imul
push
mov
shll
adc
les
popf
mov
dec
inc
pushf
es
or
scas
push
cld
pop
das
addr16
dec
int
sbbl
inc
sub
aaa
jle
adc
xchg
sbb
or
and
aas
mov
sub
push
mov
imul
inc
push
cmp
sbb
pop
loopne
xchg
cmp
xchg
adc
jle
jecxz
push
sub
lods
push
arpl
jne
push
shrl
pop
test
and
jo
sbb
aam
sbb
cmp
neg
and
iret
jae
inc
add
pushf
mov
cmp
push
mov
loopne
mov
dec
imull
cld
imul
or
mov
stos
push
xor
add
xchg
out
mov
in
ds
inc
xchg
aad
add
stos
jmp
dec
push
sbb
pop
rorl
mov
mov
pop
jge
xchg
lea
jge
out
xor
push
sbb
addr16
or
scas
lret
mov
popf
mov
push
jle
xchg
and
sbb
sbb
adc
insl
cltd
out
stos
scas
push
add
mov
mov
insb
pop
rcll
lock
adc
xor
jo
sbbb
cmp
pop
xchg
sub
and
fnstcw
pop
push
inc
lret
xor
pop
push
leave
outsl
xchg
fimuls
pop
cwtl
push
xchg
sbb
aaa
jmp
push
int3
das
push
ljmp
push
adc
je
and
inc
pop
sahf
xor
and
sub
cmp
push
push
cwtl
test
xchg
in
push
push
cltd
aad
in
das
ljmp
aas
push
cmp
jge
xchg
mov
sahf
call
pop
fld
push
sbb
scas
and
mov
mov
inc
push
imul
pushf
test
repz
mov
in
xchg
mov
push
aad
push
adc
cmpsb
nop
test
inc
push
popf
mov
mov
lret
pop
inc
pop
adc
mov
sbb
mov
fcmove
xchg
mov
popf
sbb
outsl
or
mov
fistps
fwait
xchg
push
stos
mov
cltd
sbb
lea
cmpsb
pop
aad
stos
and
outsl
imul
je
inc
loope
lock
stos
jns
xchg
inc
inc
xor
scas
fldt
xlat
sbb
add
add
adc
icebp
push
lret
inc
adc
dec
sbb
xchg
xchg
insl
sbb
pop
inc
push
andl
xchg
mov
sahf
fadds
mov
adc
stos
fstl
sbb
inc
in
ss
shrl
loop
scas
aam
mov
int3
mov
push
in
or
fucom
or
pop
adc
or
rolb
pop
and
subl
adc
fs
jge
push
arpl
movq
adc
push
repnz
sahf
pop
inc
popf
xlat
push
lods
fsts
jno
test
inc
sbb
xor
adc
adc
xchg
push
rcrb
popf
pop
in
mov
cli
push
xchg
rcrl
push
gs
add
outsl
icebp
fisttps
ffree
xchg
das
sbb
cmp
sti
or
adc
and
mov
push
mov
out
lea
push
xor
adc
fisubs
add
adc
xor
and
sbb
inc
rclb
stos
xor
push
cltd
lods
adc
xlat
out
xchg
loopne
sbb
sub
sub
rcll
dec
push
out
sbb
xchg
push
mov
pop
mov
adc
mov
xchg
mov
push
push
pushf
outsl
fstpl
repnz
adc
mov
test
rcrb
aad
sbb
sahf
pop
sub
hlt
xor
call
pop
add
dec
rolb
cltd
dec
fadd
mov
adc
push
lods
shll
pop
sub
out
xlat
xor
xlat
or
mov
dec
in
out
adc
pop
dec
and
adc
sbb
mov
push
stos
iret
mov
jnp
adc
sub
mov
les
xchg
movsb
cltd
or
les
test
jne
inc
mov
adc
jne
loope
dec
push
inc
lret
pushf
repnz
lods
pop
push
adc
jne
add
pop
shll
adc
insl
xor
fldcw
xchg
sub
fistps
test
fcoml
and
pop
das
xor
mov
cmp
pop
mov
pop
inc
sub
incl
push
rolb
pop
xor
lods
push
sbb
adc
fistps
fisubrs
outsl
int
popf
scas
pop
int3
sahf
push
das
out
add
xchg
and
push
mov
out
mov
arpl
dec
pminsw
push
dec
repnz
adc
push
cwtl
xor
imul
xchg
fiadds
add
pop
lock
push
push
pop
popf
pop
and
and
push
iret
mov
mov
lods
es
xchg
and
ljmp
lods
or
pop
fbld
pop
flds
fnstenv
fcoml
addb
sub
sub
push
push
xor
xchg
mov
imul
xchg
inc
pop
add
gs
jl
add
rclb
adc
and
sub
pop
sbb
fisubrs
xchg
jo
sahf
jns
xor
and
push
sahf
imul
out
adc
pushf
mov
push
inc
pop
xor
fildl
imul
adc
adc
dec
xchg
pop
sbb
xor
shrl
inc
bnd
imul
jge
sahf
adc
push
pusha
pop
pop
xor
sub
jb
loop
jp
mov
orb
pop
imul
push
inc
insl
mov
stos
inc
into
jl
inc
jp
mov
stos
ljmp
add
outsl
and
push
leave
add
push
fsts
pop
ja
roll
xchg
pop
sahf
daa
or
pop
push
sbb
xchg
mov
adc
push
push
pop
aam
and
dec
sub
pop
xchg
add
adc
push
pop
int3
xlat
das
fxch
repnz
mov
popf
fnstsw
leave
adc
adc
jg
loop
push
sbb
mov
adc
pop
pop
xchg
push
das
inc
or
mov
or
pop
xchg
mov
out
xchg
cmp
rcrl
sub
mov
fwait
enter
stos
in
enter
jno
aaa
das
xchg
sub
add
aad
push
xchg
es
add
sub
sub
sti
push
rcr
and
test
iret
add
sub
push
data16
add
mul
jne
jo
nop
imul
xchg
sub
sbbl
sub
loop
add
rclb
push
sbb
mov
xchg
rcrl
lods
mov
dec
pop
xor
pop
out
mov
test
stos
xchg
addr16
es
int3
add
sub
xchg
xchg
mov
xor
pop
stc
test
outsl
push
dec
cmp
fsts
push
lret
adc
test
xchg
les
sbb
push
orb
imul
mov
stos
scas
out
inc
inc
shrb
popa
out
adc
xchg
push
mov
das
inc
inc
popf
xchg
in
fwait
add
mov
loop
fildll
push
push
sbb
or
sbb
push
aam
inc
xlat
xchg
push
fadd
lret
dec
or
xchg
rcl
and
xchg
mov
cmp
push
out
and
lock
xor
enter
cmp
pop
pop
adc
xchg
pop
sbb
mov
push
jo
adc
fdivs
inc
push
negb
lods
jl
stos
xchg
jno
dec
add
ret
push
call
push
addr16
push
cmpsl
arpl
push
mov
insl
mov
ss
inc
or
push
add
gs
adc
fld
stos
je
push
ret
fisubrs
stos
pop
cmp
mov
and
and
xlat
dec
loopne
das
dec
pop
push
xchg
les
xor
jne
xchg
fwait
enter
adc
out
insl
mov
sahf
nop
mov
push
aad
push
je
push
pop
mov
sbb
pop
dec
xchg
loop
xchg
add
out
jge
fsubrp
xor
js
jb
cltd
out
lods
xchg
xchg
idiv
sti
cld
movsb
xor
inc
push
hlt
scas
adc
stos
int3
push
push
push
push
pop
xor
repnz
call
push
cmc
lahf
cmp
and
pop
in
and
stc
push
addb
xor
xchg
push
sub
iret
jb
xor
sbb
mov
or
das
xchg
decb
cmc
rcrb
test
pop
lcall
xchg
jno
ss
sbb
mov
push
add
push
das
and
and
dec
adc
jne
sbb
les
mov
addl
xor
sub
scas
nopl
mov
shrl
adc
iret
gs
xor
xlat
sti
jb
mov
sbb
lea
les
and
mov
adc
outsl
shll
mov
and
rcll
out
mov
sub
aad
popf
dec
adc
fisttpl
sahf
push
push
ds
das
call
sub
inc
adc
cmp
je
xchg
add
ret
sbb
xor
inc
inc
fsts
les
nop
mov
dec
dec
xchg
sbb
push
xchg
lahf
and
out
pop
sub
adc
adcl
rcrb
popf
mov
ds
push
push
adc
inc
loop
in
pop
xchg
xchg
js
icebp
scas
insl
imul
cmp
les
stos
adcl
cmp
and
lret
push
push
push
int3
xchg
push
xchg
mov
mov
dec
cmp
sbb
pushf
popf
cmovbe
push
mov
jae
pop
xchg
stos
add
sub
les
xchg
adc
retw
push
xor
setns
rcrl
les
push
adc
sbb
into
shrb
sbb
pop
sub
in
aad
push
je
mov
push
push
sbb
add
lcall
cmpsl
fiaddl
xchg
loopne
pop
stos
nop
cmc
rcl
cmpsl
cltd
rol
ficomps
mov
shll
les
dec
loop
out
aad
adc
outsl
mov
out
inc
pop
push
lea
rcll
xchg
adc
adc
push
xchg
cwtl
int
inc
adc
mov
out
push
push
and
xchg
sub
add
bound
sbb
test
imul
push
leave
mov
xchg
clc
jge
ds
fidivrs
mov
bound
sub
cmp
sub
mov
push
push
fnstenv
inc
ljmp
mov
in
lret
stos
ficoms
push
push
jne
xchg
cld
jg
adcl
pop
inc
mov
stos
inc
imul
xchg
push
aad
pop
jmp
mov
add
pusha
mov
fisttps
fdivl
decl
std
pushf
addr16
in
ffreep
push
shlb
jg
push
popf
scas
push
dec
push
pop
pop
pop
shrl
addl
lret
hlt
mov
xchg
pop
and
sub
xlat
adc
loopne
pushf
outsl
pop
test
aas
sbb
les
inc
mov
fists
cmp
mov
decb
mov
adc
pushf
sbb
inc
das
xchg
add
in
sub
push
xchg
xchg
scas
pushf
testb
out
aas
ja
push
mov
xchg
fstpl
enter
or
xchg
movsl
addr16
fucomip
mov
xchg
stos
or
jno
inc
aam
sub
xchg
mov
mov
and
loopne
push
rorb
movsl
adcb
adc
clc
scas
or
scas
pop
inc
rcll
cmpsb
lea
adc
push
adc
pushf
add
dec
or
sbb
aad
outsl
jne
inc
daa
or
sub
xchg
adc
mov
int3
bound
pusha
or
pop
adc
inc
fists
scas
scas
xor
xlat
adc
add
add
mov
das
inc
lods
sub
sbb
fcoml
mov
pusha
ss
pop
out
mov
mov
push
je
pop
inc
sbb
or
push
aad
data16
cmp
bound
out
test
pop
sub
and
xchg
das
sbb
cmpsl
add
push
push
pop
adc
loope
aam
xchg
imul
push
out
xor
fscale
pop
lea
mov
int
push
sub
leave
xchg
enter
cmp
push
das
pushf
jae
sub
push
pushf
mov
xor
mov
loopne
insb
pop
mov
cltd
pop
rcrl
cld
sbb
pop
sbb
ficomps
adc
scas
mov
cmp
inc
xchg
push
cmpsl
cmovo
lea
push
fstl
cmp
dec
jb
adcl
out
into
imul
cmp
ljmp
lods
out
inc
jo
or
inc
xor
mov
push
faddl
pop
xchg
aas
xchg
inc
pop
xchg
sbb
xchg
xor
adc
out
out
fsubrl
js
xchg
sub
jbe
pop
dec
pop
push
mov
jns
ljmp
stos
mov
loop
push
or
xchg
mov
add
and
fstl
das
xchg
pop
popf
imul
stos
gs
adc
jnp
inc
rcr
push
test
sub
push
push
sbb
xchg
sub
lea
xlat
xchg
push
mov
adc
push
scas
xchg
idivb
push
pushf
xchg
jno
inc
pop
xchg
sbb
mov
and
fildl
aaa
ret
pushf
aam
mov
cwtl
xlat
and
lret
sbb
into
sahf
das
into
lds
imul
stos
iret
sbb
inc
xchg
pop
aam
lods
imul
pop
mov
lods
dec
insl
shrb
popf
sbb
inc
push
xchg
stos
roll
pushf
enter
or
pop
stos
rclb
js
cmp
push
test
xlat
lods
inc
jne
imul
pop
pop
push
and
stos
jg
xor
hlt
pusha
and
pop
dec
stos
and
scas
repz
dec
pop
xchg
cld
dec
push
push
mov
adc
add
sub
stos
leave
push
inc
xor
popf
push
or
add
mov
pop
sbb
lock
out
fnstsw
mov
cltd
xor
in
mov
sbb
xchg
jb
or
mov
imul
xchg
mov
pop
sub
out
aad
clc
mov
sbb
push
and
sbbb
aam
rcll
xchg
popa
inc
adc
pushf
sbb
lcall
inc
or
lahf
pop
sub
inc
out
bound
xchg
fxch
push
xchg
push
jg
aam
xor
push
outsb
iret
aam
sub
les
pop
xchg
outsl
pushf
filds
xchg
movsl
and
rcr
aad
sbbl
out
pop
push
mov
fcoml
pop
rol
in
lock
cli
and
adc
add
dec
adc
jl
mov
jle
fstl
xchg
shll
jno
gs
xor
pop
adcb
pop
adc
int
popf
sahf
stos
sbb
inc
mov
scas
push
dec
repz
xchg
or
pop
cmc
stos
out
out
pop
inc
es
jge
adc
sahf
xchg
pop
imul
test
leave
push
sbb
scas
and
les
fidivrs
xchg
outsb
dec
sbb
fdiv
inc
xlat
or
cmp
stos
pop
jns
test
aas
cmp
cmp
leave
sti
push
mov
aad
xor
xor
mov
xor
inc
sbbl
mov
pushf
pop
bound
rcrl
mov
or
movsb
out
hlt
sbb
in
adc
pop
xor
adc
xor
dec
cli
pop
add
cmc
inc
mov
mov
push
sti
push
push
jo
cs
fists
lcall
and
xchg
mov
mov
or
cmp
jmp
adc
xor
mov
fisttps
xchg
mov
pop
out
or
adc
inc
fistpl
push
push
outsb
mov
inc
sub
xor
sti
insl
loopne
rcrl
sbb
xchg
scas
pop
xchg
push
adc
mov
dec
shlb
add
and
outsl
in
stos
xor
push
sbb
xchg
sbb
sub
or
cltd
mov
fstl
push
scas
mov
pop
aad
inc
xchg
ljmp
mov
sarl
scas
lods
mov
out
in
jo
mov
adc
cmp
outsb
adc
lock
pop
sbb
jl
mov
fisttps
insl
sbb
pop
repnz
cltd
mov
sahf
xchg
outsl
jg
push
or
add
cmp
adc
scas
xchg
test
ljmp
push
mov
xchg
dec
out
sbb
stos
xchg
xor
mov
enter
push
fildl
xchg
addl
xchg
lcall
push
mov
mov
into
ss
arpl
inc
fwait
int3
inc
xchg
lds
aad
mov
cmp
push
push
int3
adc
xchg
push
lret
repnz
mov
pop
cmp
cmp
xchg
adc
addl
push
rcrb
fstpl
adc
sbb
fistl
push
xchg
sub
adc
cmp
ficomps
fisttps
dec
cmc
pop
push
sub
mov
testl
mov
push
fnsave
pusha
xchg
pop
bound
or
adc
inc
fcoml
popf
dec
jle
stos
adc
sub
or
xchg
mov
aam
sbb
scas
dec
out
xchg
lock
adc
pop
push
pop
stos
inc
inc
mov
xor
pop
mov
fistl
cmpsl
xchg
mov
rorl
xchg
sbb
cli
fbstp
pop
outsb
adcb
push
stos
imul
hlt
jne
push
inc
mov
orb
xchg
stos
popa
scas
add
pop
iret
adc
fisubs
ljmp
pop
sbb
push
add
sbb
lcall
cmp
std
out
mov
jno
sbb
sahf
ficoms
inc
ds
sub
movsl
jae
or
mov
sbb
sahf
mov
std
cld
xchg
pusha
setle
sub
aad
sub
add
inc
push
popf
sub
or
sbb
xor
repnz
adc
enter
test
rclb
push
ja
push
push
xchg
add
push
and
add
rol
or
push
popf
gs
add
mov
xchg
cs
xchg
inc
pop
stos
rol
lock
push
lahf
mov
mov
dec
xor
mov
mov
cltd
imul
and
lods
repz
mov
mov
cmp
fbstp
aad
add
or
push
or
adc
mov
sbb
pop
push
dec
sbb
pop
inc
cmp
addr16
das
xchg
pop
sbbl
in
rcll
fisubrs
lods
lea
push
add
std
in
popa
push
ljmp
sbb
inc
pop
int3
push
or
orl
mov
and
push
xlat
cmpsb
push
add
pushl
lods
outsl
popf
sarl
stos
adc
xchg
push
aad
iret
rolb
and
xchg
pop
addl
aam
dec
rcll
inc
mov
leave
sub
dec
rcl
lock
cmc
sbbl
sbb
mov
out
inc
fbstp
sahf
push
sub
push
outsl
popf
cld
notb
sbb
mov
lock
aam
ror
ret
adc
dec
jne
aad
inc
pop
mov
push
mov
mov
xchg
sbb
stos
cmp
push
xchg
int3
ret
push
loop
pushf
sub
add
add
pop
jo
xlat
adc
and
cmpsb
sbb
lock
subl
xor
adc
and
scas
xor
lret
sbb
ljmp
push
shl
sub
xchg
pop
cmp
sbb
mov
add
pop
outsb
push
cmp
sbb
cli
push
test
pop
sub
das
outsl
and
arpl
xor
jmp
rcr
mov
sub
cmc
pop
hlt
adc
inc
xchg
sub
xlat
icebp
or
popf
push
sub
mov
aad
addr16
sub
xchg
std
arpl
adc
and
mov
clc
push
rorl
fcomps
call
sbb
xchg
jmp
das
xlat
add
sbb
jo
or
lock
push
or
xchg
les
add
test
push
mov
push
xor
adc
cwtl
or
xchg
jne
xchg
push
insl
xchg
rcrb
js
ds
sub
mov
dec
push
in
and
cs
and
mov
push
rcr
and
push
lock
mov
std
push
es
repz
xor
pop
rcll
popa
imul
add
adc
or
movntps
shrb
cwtl
jg
jmp
ret
push
shrb
sub
sub
test
leave
sbb
ljmp
test
jmp
push
mov
gs
jmp
adc
out
test
xor
cld
and
xchg
mov
adc
push
xchg
int3
push
xchg
inc
loope
sahf
mov
mov
xor
fistpl
pushf
sbb
xchg
and
ljmp
fsts
shll
pop
mov
les
mov
aam
push
push
xchg
push
sub
xchg
and
push
push
cmp
mov
push
pop
push
or
cmp
push
sbb
pop
push
pop
xor
dec
in
scas
inc
lods
mov
stos
lea
test
clc
into
outsl
pop
inc
mov
ret
loope
and
pop
sbb
and
scas
outsl
das
rcrb
rcrl
fstps
mov
xor
push
pop
mov
xlat
adc
lret
ljmp
xchg
cmp
push
push
vmulpd
lock
movsl
loopne
test
mov
int3
sbb
xchg
push
cmp
sbb
push
pushf
ljmp
cmpsl
lret
sbb
cmp
sub
cmp
pop
push
in
js
dec
cmp
in
fisttpll
in
dec
push
dec
add
mov
fisttpl
and
sbb
icebp
sub
pop
mov
sub
inc
fcoml
push
andnps
repnz
cltd
and
je
xchg
jne
outsl
mov
inc
inc
xchg
hlt
mov
inc
shrl
cli
popf
mov
cmp
test
shll
jne
xor
pop
leave
xchg
adc
xlat
push
sbb
xor
xchg
rol
sub
in
add
dec
push
ljmp
mov
aaa
xor
pushf
and
add
adc
aam
outsl
pop
stos
pushf
push
ficomps
repz
mov
and
dec
stos
aam
scas
les
gs
pushf
inc
incl
insb
xchg
add
push
aam
push
shll
fsubrl
xor
cltd
mov
das
in
mov
stos
aam
add
inc
incb
inc
jae
mov
stc
push
xchg
fcompl
loopne
mov
mov
push
shlb
xor
push
mov
xchg
sub
fsubrl
testb
in
popf
push
adc
stos
aad
mov
lods
sbb
das
inc
lea
leave
xlat
push
inc
xchg
fildll
xchg
jb
cmp
mov
cmp
lcall
stos
jmp
xchg
cmp
and
mov
add
ss
jp
and
pushl
mov
cli
xchg
out
lcall
fxch
cwtl
push
push
sub
push
push
push
aas
add
pop
sbb
adc
mov
rcll
push
push
into
xchg
xchg
pop
or
movsl
mov
mov
faddl
sub
push
pop
adc
inc
cmp
sub
pop
xchg
xlat
xor
lcall
push
aaa
loop
popf
jg
call
fsts
mov
fwait
xchg
fnstsw
sbb
fsubrl
push
inc
adc
fstpl
cmpsl
rcrl
cltd
or
icebp
test
imul
add
mov
rclb
jns
push
out
hlt
shrl
rcrl
inc
mov
ds
xchg
xlat
ljmp
int3
mov
jmp
fiaddl
push
adc
inc
addb
bound
bound
push
fstpl
mov
xor
fildll
das
xchg
das
scas
sbb
sahf
fimuls
shrb
fbld
or
flds
ss
sub
and
xor
sub
cltd
xchg
lods
adc
push
adc
push
push
pop
and
pop
cmp
xchg
add
push
cmp
sub
in
and
in
inc
pop
mov
inc
imul
rcll
xor
hlt
xor
jge
outsl
push
xchg
daa
xchg
mov
lods
mov
jbe
lret
inc
sbb
or
popf
mov
nop
and
jl
adc
push
repz
jno
xor
adc
mov
pop
lock
cltd
push
aad
push
push
dec
pop
pop
jmp
aam
aas
mov
cwtl
lods
inc
cltd
push
sub
cmp
movb
xchg
bound
sti
mov
int
push
out
adc
push
divl
pop
sbb
rcl
adc
pop
inc
push
pop
aad
bound
xor
and
push
sbb
test
ss
adc
push
outsl
es
test
sub
dec
leave
pushf
push
mov
ljmp
ds
push
cmpl
mov
push
add
das
fisubrl
and
adc
or
adc
dec
stos
adc
lods
dec
jge
fiadds
fwait
jb
add
adc
cmpsl
xchg
fs
adc
push
add
adc
and
hlt
push
xor
aas
cld
leave
inc
scas
fldenv
add
mov
sbb
xchg
push
push
loopne
mov
sbb
pop
out
xchg
in
jmp
xor
add
adc
push
push
fldl
xlat
aam
outsl
out
pop
xchg
add
xchg
nop
fsubrs
jle
pop
sahf
sbbl
clc
mov
setae
outsl
push
or
adc
ds
pop
pop
sbbb
and
pop
xchg
rorb
imul
xchg
push
sbb
pop
push
or
mov
ds
xchg
into
add
loope
push
aad
sbb
adc
leave
xchg
adc
xor
add
sbb
push
mov
push
adc
or
xchg
xorb
rcl
cmp
sbb
xor
lret
idivl
inc
pushf
aad
psrlw
dec
cmc
and
fld
push
out
nop
pop
or
xchg
bnd
lock
sbb
push
pop
dec
shrl
cwtl
xchg
or
xchg
pop
ret
xorl
rcr
lret
and
sbb
and
dec
rcll
sub
scas
gs
ss
rcrl
pop
xchg
xchg
push
mov
ja
call
pop
scas
inc
push
adc
add
pop
xchg
push
lea
ret
outsl
das
insb
popl
push
les
fildl
fisubrs
xchg
shr
imul
adc
xor
ss
fsts
ljmp
shr
sbb
incl
cmp
test
inc
fwait
xchg
iret
jmp
jl
xchg
xor
and
lods
inc
cli
pushf
pop
in
mov
ret
push
inc
mov
dec
add
aam
cltd
xlat
xchg
sub
ret
ljmp
push
dec
in
xlat
aad
scas
stos
push
jge
sub
adc
ret
aad
ljmp
jp
shlb
movsb
or
je
jne
add
adc
xchg
add
ficoms
jg
push
lcall
es
xchg
xchg
jne
je
aam
xor
lea
std
and
sbb
mov
addr16
stc
ljmp
push
pop
xchg
sub
sub
cmc
inc
sbb
test
and
pop
aam
adc
pmullw
sub
mov
sahf
or
xor
and
xchg
adc
rolb
mov
pop
sbb
cltd
icebp
adc
inc
xchg
ljmp
pushf
push
inc
push
sbb
adc
add
dec
adc
out
aad
inc
ss
sub
pop
aam
lods
adc
ss
sbb
sbb
aam
mov
lcall
sahf
pop
popf
push
hlt
mov
ja
ljmp
rolb
adc
lock
shrb
cmpsl
xor
fstps
pop
js
pop
cmp
inc
pushf
mov
stos
sub
pushf
pop
mov
int3
sahf
xchg
xlat
aam
inc
enter
pop
pop
pop
lock
xchg
sbb
mov
push
sub
scas
popf
les
leave
pop
aad
dec
pop
pop
cmp
fsubrl
add
rcll
rclb
cmp
stos
and
pop
xorl
sbb
test
inc
inc
imul
out
int
adc
push
int3
sbb
jne
lret
call
jb
enter
mov
fimull
imul
inc
sub
dec
push
xchg
push
and
movswl
adc
rclb
int
movb
lods
cmp
xchg
fstl
lcall
xchg
push
sub
xchg
imul
outsl
sub
inc
popf
adc
fcmovu
xlat
adc
pop
push
cld
pop
sti
pop
sub
push
sub
adc
cmp
xchg
push
fsubr
lea
nop
lods
mov
int3
xchg
sub
push
leave
pop
sbb
je
add
mov
sub
leave
push
sub
xchg
aad
push
out
push
aam
jg
popf
mov
insl
mov
rcrl
inc
stos
xchg
push
push
push
fistps
sbb
sub
sub
xchg
fs
add
sbb
out
mov
shrb
inc
push
popf
xchg
xchg
ss
xchg
pop
xchg
and
stos
sub
adcl
addr16
rclb
xor
sbb
into
sbb
movsb
fnstcw
xor
add
push
adc
dec
fstps
loopne
notl
mov
xor
pop
mov
push
bound
movsl
xchg
fiadds
pop
xchg
pop
pop
mov
xchg
shr
push
sub
pop
cwtl
stos
add
jne
pop
cmp
xchg
add
pushf
adc
inc
ja
push
das
aam
and
sub
lods
shrl
lahf
fistpl
and
pop
sub
xchg
fsts
jmp
inc
lret
mov
fcompl
and
imul
sbb
pop
in
stos
inc
mov
sbb
cmpsb
sbb
sub
mov
stos
push
pop
pop
or
outsl
and
loopne
in
xchg
xchg
cmp
adcl
push
fsts
popf
mov
cmp
or
sub
out
faddp
sbb
out
inc
and
xchg
outsl
in
ror
dec
movsb
outsb
adc
inc
push
ds
push
push
jbe
jmp
adc
cmp
aam
int3
pushf
push
jge
ficomps
xlat
cmp
xor
imul
xchg
pop
xchg
hlt
inc
push
mov
int
sbb
mov
fsubrl
les
xchg
inc
mov
fsts
stos
imul
outsb
push
rcl
sarb
sub
rcrl
mov
es
push
xchg
push
xor
mov
fcoml
pop
std
mov
iret
inc
test
loop
cs
decl
inc
dec
out
aam
hlt
xor
push
xlat
push
adc
pop
ljmp
loopne
cltd
add
push
lea
push
pop
aad
popf
xor
or
loop
xchg
rcll
push
repnz
sub
fstl
pop
pop
pop
imul
mov
call
xlat
pushf
xor
push
sbb
das
push
mov
pop
push
xchg
jle
in
sub
lcall
fldt
add
inc
inc
xchg
pushf
and
lods
xor
cmp
das
xchg
ljmp
repz
mov
and
jo
fnstcw
iret
mov
mov
xlat
scas
sub
das
inc
push
jge
fcoml
inc
call
sub
cltd
xchg
mov
push
movsl
adc
pop
cmp
test
push
in
mov
in
es
test
xchg
or
lahf
fistpll
inc
push
mov
sbb
sbb
add
pushf
push
divb
les
inc
repnz
push
mov
xchg
xchg
popa
xchg
shll
sub
fidivrs
cmp
fsubrl
cmpl
pop
sahf
xor
adc
loope
sarb
daa
cwtl
xor
popa
repz
sbb
stos
sbb
fistl
push
inc
xchg
imul
adc
leave
mov
pop
cld
test
popf
xor
out
pop
jns
js
add
cmp
push
stos
sub
pop
fcoms
xor
push
addr16
ret
fstpl
and
adc
inc
fcoml
fstpl
sbb
mov
adc
adc
and
xchg
push
ljmp
add
push
mov
sbb
fdivrp
cli
mov
imul
mov
cs
adc
sbb
daa
sbb
enter
jl
hlt
push
inc
add
ljmp
leave
les
xchg
adc
jo
cmp
xchg
push
in
cs
shlb
rol
movsb
push
mov
push
ficomps
loop
and
stos
rclb
adc
push
adc
xchg
and
add
cltd
xchg
into
rorl
repz
add
push
xchg
adc
pushf
pop
xchg
sub
push
pop
shrl
bound
loop
fiaddl
rcrb
repnz
xor
xor
pop
push
push
fistl
mov
xor
jge
filds
fstpl
and
push
pop
pop
jg
cmp
test
inc
imul
sbb
inc
dec
fwait
rcl
xchg
xchg
pop
push
scas
ficoms
popf
ljmp
out
outsl
bound
or
mov
imul
push
add
into
sbb
pop
push
xchg
jnp
inc
mov
imul
xchg
shl
in
sub
sbbl
int3
xchg
sahf
xchg
xchg
orl
movsl
idivl
popf
push
adc
xor
iret
mov
mov
sahf
xchg
adc
push
mov
inc
dec
add
mov
push
mov
popa
ret
sbb
sbb
mov
sahf
pop
xchg
ss
cltd
loope
ror
popf
xor
ljmp
aad
cltd
lods
data16
xor
mov
cmc
inc
fucomip
int3
divl
pusha
sbb
push
push
fwait
push
push
sub
adc
xchg
xchg
push
push
xchg
int
push
les
outsb
stos
mov
gs
inc
shrb
push
sub
sahf
stos
popa
jle
jne
jb
dec
sbb
mov
mov
out
int3
adc
push
xchg
xchg
aad
xor
loopne
aas
aam
sbb
or
scas
pushf
shr
pop
das
enter
add
jg
push
movl
inc
xchg
das
pushf
aad
mov
xchg
lret
out
xorl
inc
xor
ljmp
pop
pop
add
cmp
push
push
arpl
std
insl
lods
or
stos
or
push
leave
ljmp
pop
aaa
stos
sbb
xchg
jo
and
aas
adc
push
cmc
outsl
inc
mov
rcrl
sbb
in
test
push
push
pushf
cmc
subb
add
xor
adcb
adc
out
push
sti
fisubs
fldl
jo
pop
aaa
rcrl
pop
pop
sahf
mov
push
repnz
fsts
mov
pop
std
inc
pop
sub
inc
xchg
lea
push
aad
adc
inc
imul
push
push
mov
xchg
pop
xor
sub
push
ss
lcall
push
mov
loopne
scas
mov
sub
xor
sub
arpl
dec
pop
adc
out
mov
sub
shr
inc
dec
add
fwait
push
cmp
sbb
add
enter
mov
pop
cmp
sbb
and
cli
push
daa
cmp
sbb
xlat
ret
lret
xchg
cld
imul
sub
and
push
lea
fsubrl
xchg
push
push
mov
adc
mov
pop
sbb
out
or
gs
xchg
xlat
out
lea
orb
add
test
xor
stc
lcall
mov
xchg
rorl
xor
push
xor
adc
xchg
add
inc
lds
rcll
pushf
xchg
push
xchg
push
add
sub
mov
ficoms
push
push
bound
pop
xlat
orb
or
sub
push
sbb
xchg
filds
adc
add
sbb
sbb
xor
sbb
push
add
push
in
sti
pop
ss
lret
ds
icebp
fwait
mov
mov
sbb
xor
push
adc
mov
loopne
inc
adc
inc
out
push
pop
lea
adc
or
mov
adc
sub
xor
pop
scas
jge
push
shlb
adc
add
das
cmp
int3
adc
outsl
decb
pop
cmp
push
sbb
pop
cld
inc
data16
cmp
das
sub
outsb
push
push
jmp
iret
cmp
fisubrl
adc
sub
inc
stos
cmp
stos
outsl
test
pushf
mov
out
out
rorb
inc
add
xchg
xchg
add
sub
xor
sub
and
test
push
sahf
rcll
xchg
push
jns
and
mov
xchg
mov
or
xchg
lea
sub
push
movhps
mov
sub
mov
ljmp
push
fildll
rclb
inc
pop
inc
ja
bound
xchg
int
das
bound
xchg
cli
arpl
push
les
into
sub
push
ret
pop
inc
imul
push
mov
and
pop
xchg
sahf
xchg
xchg
iret
push
pop
and
pop
xchg
cmp
bound
mov
sub
add
adcl
aad
aaa
sahf
xchg
aad
mov
push
cmp
inc
lds
inc
mov
fstl
pop
inc
stc
outsl
data16
cs
jbe
aam
add
mov
xchg
aaa
fistl
out
push
outsl
cmp
stos
xchg
adc
dec
fcomip
fisubrl
fmul
push
xchg
jbe
lret
sbb
xchg
push
xchg
push
lret
mov
subl
xchg
sbb
mov
cmp
rcll
hlt
pop
scas
adc
stos
sbb
notl
jno
fstl
jne
sub
xor
add
push
adc
mov
push
sbbb
sahf
pop
push
pop
or
pop
dec
aam
xchg
sbb
or
mov
mov
or
or
shrl
push
les
daa
movsl
int
iret
sbb
repz
push
xchg
cltd
jge
pop
sub
aam
inc
mov
fists
je
push
iret
pop
outsl
jl
dec
sbb
push
cmp
in
pop
xlat
insl
ficomps
adc
in
mov
aad
mov
mov
adc
xlat
and
pop
inc
adc
push
js
sub
xchg
xchg
pusha
ret
adc
xchg
les
pop
inc
push
push
xchg
adc
scas
push
rol
adc
inc
cmp
push
mov
fidivl
aam
sbb
and
jge
pop
sub
jne
gs
shlb
outsl
les
push
and
popf
adc
xchg
les
mov
in
push
xchg
and
out
int3
enter
fbstp
sbb
test
push
jl
push
xor
push
adc
pop
push
adc
sub
push
das
xchg
push
cltd
hlt
mov
xchg
dec
addb
out
pushf
inc
push
push
xchg
mov
cld
sbbl
enter
in
aad
add
dec
lret
ficomps
push
pushf
lret
stc
sub
add
mov
push
jbe
push
sahf
stos
xor
xchg
aas
jne
xchg
sub
or
lahf
push
fidivrs
mov
push
pop
sbb
gs
sbb
lret
rol
add
rcrl
subl
stos
nop
pushf
sbb
xchg
xchg
push
das
cmp
mov
sahf
cmp
into
fistps
adc
aad
push
jo
popf
jb
cmpsl
jo
add
inc
push
mov
mov
pop
sub
pop
aas
adc
mov
roll
xor
rclb
icebp
in
je
outsb
xchg
out
out
lea
popf
addr16
add
outsl
mov
and
xchg
imul
or
jp
add
add
aam
jle
adc
int
popf
out
push
popa
adc
push
adc
xchg
scas
dec
enter
dec
mov
push
sub
ret
dec
push
fldcw
ror
mov
cmc
add
cmpb
mov
xor
add
adcb
push
movsb
or
mov
in
xchg
mov
inc
icebp
xchg
sub
and
and
xchg
pushf
pop
mov
sbb
sub
shlb
jmp
cli
adc
jne
adc
jbe
pop
test
pop
adc
push
hlt
scas
sub
cmpb
xor
out
gs
pop
and
leave
sbb
sub
push
call
sub
mov
mov
rcll
push
adc
leave
or
sub
adc
push
stos
sub
in
in
lods
fldcw
push
or
dec
pop
cs
popa
jecxz
push
stos
pop
adc
shlb
mov
scas
orl
iret
lods
sbb
rcrl
xchg
push
in
in
adc
push
sbb
scas
add
and
sbb
adcl
fldenv
test
and
adc
sub
mov
and
sbb
mov
xchg
sub
xchg
sbb
inc
mov
sbb
jge
xchg
test
loopne
jno
popf
fstpl
push
adc
xchg
sub
cmp
push
inc
icebp
pop
out
xor
adc
shl
jle
cltd
aam
sbb
std
jp
and
sub
and
ds
mov
push
inc
popf
dec
mov
xchg
dec
xor
ss
sbb
popa
pop
rcll
test
loop
sbb
sbbl
xchg
push
adc
aas
bound
imul
mov
addr16
or
inc
push
push
int
pushf
sub
jae
mov
inc
popf
out
lock
mov
dec
sbb
mov
push
mov
das
ffreep
testl
fldcw
lcall
inc
sub
mov
adc
and
lahf
inc
les
push
xor
mov
push
pop
sbb
inc
pop
bound
add
out
inc
leave
aam
cmpsb
pusha
xchg
scas
and
adc
mov
lcall
xchg
add
fsubl
movsb
fs
dec
push
adc
adc
outsb
loop
scas
dec
lods
pop
pop
sbb
in
out
sub
int
pop
xchg
shll
push
das
add
cmp
pop
jge
sub
push
popf
and
ljmp
dec
push
sub
sub
xchg
pop
fisubs
out
aad
push
mov
into
mov
subb
push
mov
das
mov
xor
pop
test
movsb
les
add
pop
mov
xor
adc
lcall
in
mov
gs
adc
dec
push
das
imul
ret
popf
mov
out
inc
inc
stos
push
notb
push
imul
ret
gs
adc
push
xchg
sub
pop
mov
les
ret
inc
inc
int
imul
stos
notl
punpckhdq
push
cld
es
dec
fstpl
jge
push
pop
xor
out
push
shlb
rcl
pop
popl
push
andb
adc
popf
xorl
xchg
lret
xchg
pop
sub
fisubrs
das
leave
add
add
push
push
lods
ret
adc
adc
mov
push
sub
cmp
xchg
stos
dec
stos
pop
push
push
mov
inc
popa
inc
inc
push
xchg
cmp
sbb
incl
out
mov
inc
xchg
cs
movsb
leave
sahf
shll
fcomip
inc
xchg
popf
push
lcall
pushf
push
pusha
dec
jb
mov
mov
xor
mov
and
jle
xchg
int
fcoml
pop
rorb
inc
shlb
aad
sub
push
fs
nop
push
out
adc
dec
sbb
pop
sbb
scas
enter
add
push
shll
push
push
ret
sbb
xor
mov
mov
push
lret
dec
sub
pop
pop
stos
sbb
sbb
sbb
pop
xlat
pop
mov
mov
out
sahf
repz
les
inc
fcoms
jmp
fwait
out
pop
stos
sbb
inc
xchg
les
aam
aaa
fucomp
popa
ds
aam
xor
and
dec
test
xor
loop
out
fsubl
mov
mov
sub
rorb
push
negl
test
ret
xchg
sub
mov
push
imul
sti
int
pop
rcrb
pop
outsl
loop
dec
xchg
loop
push
addb
scas
lahf
and
sahf
sbb
dec
sbb
rclb
xchg
ljmp
push
pop
test
fidivl
cmp
pop
inc
sahf
adc
pop
in
push
mov
pop
pop
sub
push
push
fstl
pop
shlb
mov
adcl
push
cltd
sbb
xchg
xchg
adc
insl
xchg
inc
pop
rcll
xchg
cmp
divl
out
lods
test
and
scas
sahf
xor
lret
mov
gs
adc
push
loopne
sbb
loopne
out
int
das
pop
pop
xor
mov
xchg
sbb
adc
pop
or
popf
rclb
outsl
mov
pop
adc
ljmp
inc
outsl
lods
adc
cmp
movsb
xchg
test
sbb
das
push
lods
shrl
jbe
xchg
leave
arpl
rcrl
xor
jo
pop
scas
hlt
and
cmp
mov
xchg
ljmp
fnstenv
push
sbb
mov
pop
xchg
sahf
or
sbb
fcoml
fiadds
stos
adc
aas
cmp
cltd
cmp
push
lcall
sub
aam
in
xlat
push
pop
outsl
push
push
xchg
and
addl
pushf
xchg
or
repz
cltd
filds
sub
cmpsl
pop
cmp
dec
out
add
pop
or
xlat
pop
ffree
ja
pop
sub
pop
mov
rcrl
push
adc
sbb
xchg
stos
leave
fdivl
outsb
pop
fisttps
rclb
loopne
mov
xchg
outsl
pop
push
mov
sub
xor
pop
int
inc
cwtl
shlb
adc
rep
push
ja
inc
push
cltd
fstl
xchg
pop
ja
adc
xchg
xchg
mov
fistpll
sahf
xor
mov
push
iret
leave
fistpll
add
out
lods
xchg
push
cmp
dec
add
stos
fidivs
pop
xlat
push
les
mov
repnz
sub
aad
jge
pop
filds
stos
cmp
ret
out
inc
mov
imul
loope
jo
stos
sbb
popf
lahf
insl
pop
push
push
push
add
inc
pop
adc
and
push
call
push
cmp
fistps
xchg
mov
mov
jnp
and
adc
push
cltd
jp
test
push
pop
or
pusha
adc
or
push
stos
xor
lea
pop
xcrypt-ctr
cmpsl
pop
pop
pop
pop
outsl
push
out
rolb
pushf
out
int3
sbb
fstps
testb
orb
shrb
add
xchg
ffreep
jecxz
xor
ffree
out
xchg
pop
push
pop
xchg
or
add
je
clc
stc
add
jl
call
xchg
xchg
sub
aad
jno
mov
or
scas
inc
sub
call
cmp
shll
sbb
or
xor
mov
shrl
mov
enter
push
clc
push
and
fcoms
or
mov
fnsave
js
add
cmp
inc
xchg
rolb
inc
pop
imul
cltd
cmp
fidivl
pop
adc
dec
popf
pusha
adc
and
adc
sub
fcomp
xor
fcoml
xlat
lea
push
sbb
pop
add
das
mov
ljmp
je
sbb
mov
lods
arpl
fadds
pop
out
pop
in
cmp
xchg
xchg
inc
pop
das
les
loop
adc
and
mov
sarb
add
mov
pop
int
push
adc
call
inc
pop
xchg
and
add
xchg
shrl
dec
pop
pop
pop
xchg
sbb
shlb
cs
and
ljmp
mov
or
cwtl
sbb
out
adc
leave
mov
in
pop
adc
xchg
push
push
push
sbb
push
fistl
pop
push
stos
mov
xchg
addl
cmp
and
mov
lret
pusha
cmc
xor
ljmp
inc
dec
pop
outsl
mov
pop
adc
pushf
and
pop
insl
adc
push
insb
stos
and
pop
push
stos
sbb
test
dec
into
flds
push
cmp
push
xor
push
int
rcl
xor
push
inc
aam
cmp
out
dec
jmp
adc
ljmp
xchg
inc
mul
jne
imul
mov
aad
cmp
aad
js
inc
out
fldenv
out
int
sbb
outsl
movsl
jle
sbb
popf
jno
jge
push
cmp
dec
out
and
ret
sbb
test
jne
lret
aas
xor
xchg
push
mov
push
inc
out
orl
adc
out
adc
xchg
std
inc
aam
mov
js
pop
pop
movsl
mov
or
sti
dec
outsl
dec
mov
insl
mov
sub
add
scas
mov
idivb
fimuls
jb
and
mov
dec
xchg
hlt
xor
push
push
xchg
das
aad
std
sarb
stos
movb
lcall
push
aad
stc
rclb
push
inc
mov
mov
adc
lret
pop
pop
pop
push
pop
pop
mov
cmpsl
sub
mov
adc
push
pop
jmp
orl
xchg
data16
pop
adc
js
fucomi
stc
subl
jbe
mov
pop
stos
sbb
aam
in
negb
imulb
push
rclb
fisttpl
push
movsl
pushf
dec
xchg
out
sub
test
cltd
test
xchg
insl
dec
adcl
xlat
imul
push
fsts
xchg
dec
jb
xchg
or
addr16
and
push
and
loope
pop
push
stos
cltd
jg
xlat
pop
mov
sub
xor
xchg
inc
inc
add
pop
scas
cmc
iret
or
adc
push
inc
sbb
push
aad
orb
les
outsl
mov
outsl
push
sub
in
sub
in
xor
xchg
fisttps
ljmp
idivb
pop
xor
and
push
jmp
pop
sbb
pop
mov
popf
push
in
mov
jb
nop
enter
add
outsl
sub
push
pop
xchg
mov
xchg
ljmp
jo
add
inc
sub
pushf
adc
scas
pop
xchg
push
cmp
pop
faddp
ret
sbb
repnz
sbb
and
cmc
push
rep
fdivrs
movsb
or
pop
xchg
push
push
xchg
push
mov
push
xor
adc
cmp
pop
fstpl
aas
inc
cltd
push
xchg
shll
mov
cmp
xchg
push
inc
push
xchg
xchg
adc
sub
fnsave
push
sbb
test
sbb
or
sub
sub
ret
out
fsubrl
adc
sahf
fsubs
inc
adc
push
and
or
push
push
sete
xchg
push
add
xchg
pop
in
adc
stos
push
jecxz
movsbl
push
inc
and
pushf
push
cwtl
popa
sbb
sbb
mov
fwait
fwait
sahf
into
pop
stos
mov
pop
jo
enter
in
lret
popf
push
scas
enter
xor
pop
add
dec
dec
push
xchg
sbb
cld
loopne
adc
xchg
aad
push
xchg
push
filds
xchg
scas
outsl
xchg
sub
or
sbb
inc
pop
mov
cltd
out
adc
xchg
fstps
js
aad
inc
popa
add
into
pop
and
pop
adc
dec
add
repnz
push
mov
dec
sub
dec
fwait
mov
adc
xchg
xchg
inc
std
faddl
cmp
call
adc
inc
ljmp
pop
clc
add
cmp
ret
xchg
aad
mov
sub
pop
add
sbb
inc
les
aad
sub
hlt
push
notl
flds
push
inc
adc
je
xchg
subb
xchg
std
push
stos
mov
sub
nop
cmp
sub
mov
out
adc
xchg
stos
shrl
mov
sbb
sbbl
test
stos
iret
jne
dec
negl
inc
add
pop
out
ret
popf
push
pop
jge
stos
jl
inc
js
mov
ret
xchg
mov
orl
outsb
std
aaa
adc
jge
xchg
fcoml
add
fnsave
fists
shrl
or
rcrb
sarl
sbb
inc
sub
xchg
push
outsl
cmp
adc
flds
sbb
enter
leave
pop
xor
lret
je
adc
xchg
cltd
mov
push
popf
filds
shll
push
pop
fsubp
add
pop
int
scas
inc
push
mov
stos
xchg
outsl
sub
pop
xchg
mov
push
out
pop
push
fstps
xchg
xchg
int3
sub
cmp
pop
xor
xchg
iret
or
adc
pop
aam
jne
xchg
add
xchg
inc
push
out
outsl
pop
sub
push
adc
jne
xchg
cmc
push
mov
push
and
push
in
add
xlat
pop
or
scas
xchg
icebp
mov
sub
inc
out
scas
cwtl
sub
push
sbb
add
add
adc
or
push
adc
add
push
mov
aam
jp
sahf
and
sbb
or
jecxz
add
cltd
subb
pushf
addb
sbb
mov
enter
rcll
push
fistps
pushf
cmp
push
lcall
lock
dec
out
sahf
sbb
push
scas
std
roll
lea
push
outsl
sub
sbb
aad
lcall
out
or
test
dec
shlb
aam
pop
adc
sbb
fdivl
add
popa
push
stos
and
push
icebp
cmp
pop
or
shlb
dec
shrl
pop
adc
ljmp
scas
in
and
dec
sbb
push
xlat
sahf
pop
stc
sub
cmp
pop
rclb
sahf
pusha
int3
sarb
and
out
push
jne
push
les
xchg
outsl
sahf
push
int3
stos
jno
sbb
push
lcall
loop
das
push
adc
stos
pop
pop
mov
into
add
insb
ljmp
out
ret
jae
icebp
sub
sub
sbb
pop
xchg
push
filds
add
pop
adc
adc
xchg
ficoml
jp
xchg
pop
add
test
cmp
xchg
les
push
xchg
int3
jmp
fistl
add
loop
mov
xor
add
xchg
fisttps
flds
imul
pop
aad
dec
call
pop
out
cmp
stos
inc
inc
pop
inc
jecxz
xchg
in
sti
call
ficomps
sti
fcom
dec
inc
push
fmull
inc
dec
adc
inc
popf
pop
sbb
rolb
pop
add
mov
jns
xlat
adc
int3
nop
cltd
dec
sbb
xchg
adc
mov
xchg
adc
dec
out
mov
sub
adc
leave
addr16
or
sahf
sahf
je
gs
jne
push
cltd
sub
adc
xor
pop
push
fcmovb
push
sbb
jbe
xor
aas
js
pop
push
push
xchg
stc
add
in
std
fnsave
mov
jbe
popa
cmp
xchg
pop
std
push
dec
stos
lret
dec
lock
pop
add
push
movsb
push
stos
push
out
idivb
adc
pop
sbb
push
xor
out
push
push
push
pusha
clc
loop
mov
neg
and
inc
jecxz
fstl
inc
sahf
push
push
es
aam
push
fld
out
test
adc
xchg
pop
sbb
add
adcl
cmp
mov
stos
jmp
inc
mov
pushf
in
and
or
inc
outsl
xchg
sbb
das
mov
add
test
lock
push
mov
or
cltd
fistpll
mov
inc
pop
pop
xchg
mov
xor
movsl
je
add
sbb
sahf
jmp
repz
push
add
dec
sbb
rclb
jle
pushf
and
sub
jbe
jbe
push
add
lds
sub
mov
push
ds
iret
mov
xchg
and
iret
cltd
mov
arpl
sbb
out
cltd
sbb
outsb
test
shrl
nopl
sbb
pusha
jg
and
pop
and
sbb
lret
sbb
pop
cmpsl
movsl
shrl
shlb
and
out
je
sub
push
and
icebp
fistpl
mov
stc
sbb
mov
push
test
test
cltd
xchg
mov
or
xor
mov
movsl
and
adc
pop
ss
sub
insb
add
fs
add
fldt
arpl
icebp
sahf
jl
xchg
inc
ljmp
push
arpl
push
arpl
add
push
je
mov
test
imul
sti
rcrl
shlb
lods
sarb
and
jecxz
jae
inc
movsb
sub
movsb
outsl
mov
adc
outsl
mov
rolb
out
adc
outsb
ds
sub
pop
out
nop
adc
push
movsl
xchg
sahf
das
ljmp
out
lcall
fldt
sub
mov
out
cli
pop
dec
popl
sub
sbb
shlb
sub
xchg
into
pop
pop
dec
and
xorl
mov
adc
sub
mov
sub
cwtl
mov
adc
cwtl
jo
adc
cwtl
jp
adc
pop
scas
xlat
movsl
and
fwait
inc
popa
xlat
mov
jnp
adc
ficoms
mov
cltd
imul
xchg
stos
xchg
ds
test
push
test
xor
dec
mov
shrl
adc
adc
xchg
push
inc
popf
sub
pop
lret
ss
addl
mov
in
inc
enter
xchg
das
sub
push
imul
sahf
fstpl
cltd
xlat
leave
es
push
or
adc
movb
push
xchg
cltd
fisttpl
sbb
stos
pop
sbb
xchg
iret
movsl
jbe
jg
dec
arpl
fistpl
ljmp
xchg
fstl
push
les
pushf
push
stos
outsl
pop
mov
xchg
scas
sbb
iret
out
mov
cltd
in
out
add
in
xor
int3
adc
mov
jmp
mov
sub
cmc
mov
popf
jne
popa
xorl
push
push
fcoms
pop
imul
pop
pop
pop
roll
mov
cmpb
xchg
cmp
mov
stos
push
adc
stos
push
pop
pop
jle
roll
in
xchg
sbb
xchg
mov
insl
adc
flds
push
sti
adcb
push
repnz
push
sarl
xlat
mov
mov
add
mov
sahf
xor
adc
shlb
pushf
sub
add
xchg
add
pop
jmp
push
ja
fstps
into
mov
inc
inc
sbb
jne
shll
movsl
sub
loope
adc
in
adc
jne
mov
push
xchg
ds
das
push
inc
insb
ret
xchg
cmp
rcll
out
mov
sub
call
outsb
hlt
sbb
push
movsl
mov
xlat
mov
xor
ss
stos
pop
xlat
rolb
push
shll
mov
fnstcw
pop
mov
xchg
data16
cmp
jl
out
push
mov
fistpll
inc
sub
fscale
pop
adc
imul
dec
or
gs
sahf
ja
lock
dec
cld
push
stos
pop
test
push
dec
shrl
sbb
in
mov
xchg
adc
lds
xchg
aam
xchg
stos
sbb
sub
cmp
xchg
mov
cmpsb
mov
sub
or
cmp
cmp
inc
and
mov
rcll
stc
ds
shll
mov
lods
cmp
sbb
repz
sahf
sbb
lods
xlat
push
push
jnp
jb
or
rclb
pop
xchg
sub
sub
xchg
in
mov
adc
add
inc
add
xorl
stos
nop
arpl
inc
or
fistpl
dec
lahf
adc
sahf
mov
out
scas
push
sbb
pusha
lds
cli
lahf
sub
lcall
adc
inc
pop
sub
sub
xchg
enter
pop
stos
in
sahf
push
fs
xchg
add
sub
inc
outsl
ficomps
or
push
icebp
idivb
sbb
and
imul
xchg
imul
divb
push
fsts
imul
cmp
pop
sbb
pop
sub
xchg
das
testb
adc
push
pop
push
fnstcw
xchg
add
fsts
xchg
ficoms
xchg
push
push
xor
sbb
xor
mov
pop
adc
mov
nop
inc
push
mov
xchg
rclb
popf
dec
inc
xchg
inc
xchg
mov
adc
xor
rorl
push
pop
js
sbb
lea
js
jecxz
adc
jno
xor
pop
push
adc
mov
xchg
pop
xor
pop
test
movsl
and
sbb
xchg
and
adc
and
aas
fisubrs
adc
push
mov
sbb
rcrl
cltd
jns
cmp
rolb
stos
int3
fwait
mov
adc
xlat
adc
xchg
jmp
dec
das
in
gs
xchg
sbb
adc
pop
xor
call
das
fisttpll
sbb
mov
scas
movl
push
mov
push
xchg
and
push
rcrb
add
jecxz
pop
or
xchg
scas
push
push
push
sbb
push
subl
push
stos
cmp
icebp
mov
scas
mov
lcall
fstpl
xchg
ja
pop
scas
out
ljmp
aam
pusha
inc
add
xor
fadd
push
push
out
dec
ret
les
mov
adcl
sub
popf
inc
pop
xchg
fists
sbb
ficoms
push
jbe
inc
sub
adc
repnz
xchg
fst
xchg
add
aam
lret
stos
sub
adc
push
int
push
push
add
or
push
add
push
test
stos
xchg
aad
pop
adc
add
rol
cs
add
adc
sbb
xchg
xchg
or
stos
xchg
xchg
pop
push
push
scas
loopne
int
fsts
ljmp
movb
xchg
das
fld
shrl
xchg
push
in
push
sub
rcrb
dec
push
adc
scas
clc
in
fstps
nop
or
and
pop
cmpsl
push
xchg
in
push
push
ljmp
pop
add
xchg
inc
stos
pop
or
rcr
pop
xchg
ljmp
int
xchg
push
cld
cli
mov
and
push
xchg
fnstenv
dec
adcl
push
pop
popf
sbb
adc
rcl
sub
xchg
jmp
shl
mov
add
xchg
push
or
jecxz
mov
sahf
fsts
add
in
xlat
popf
xchg
sub
pop
aad
fmulp
push
inc
xchg
imul
rcl
dec
lcall
fisttps
jp
push
mov
sahf
xor
nop
dec
fstpl
lret
xlat
xchg
inc
movsb
mov
sub
aam
stos
fistps
aad
ret
push
addr16
xchg
adc
xchg
rolb
out
adc
sub
xchg
push
sbb
pop
sbb
mov
das
mov
cmp
push
popf
fs
and
das
into
push
adc
cmp
loopne
adc
sbb
adc
subl
aas
sub
sub
adc
or
jmp
das
ljmp
mov
test
xchg
xor
and
cmc
jno
fcmove
pop
mov
xchg
sbb
fs
push
sbb
pushf
xchg
sub
xchg
fisubl
test
sub
fisubl
sbb
test
add
adcl
push
inc
push
adc
stos
xor
and
lea
ja
push
add
push
lock
sbb
rcr
cwtl
lret
stc
sbb
stos
sbbb
pop
dec
lods
fcmovnbe
inc
adc
stos
adc
sub
loopne
jp
mov
add
fmul
xlat
lods
shrl
aam
ds
in
pop
xchg
or
xchg
and
das
and
and
mov
push
in
out
push
push
repnz
fsub
mov
mov
lods
pop
push
insl
es
xchg
xchg
sbb
adc
jno
push
out
push
pop
out
sub
push
out
lret
popa
xor
mov
bound
das
sub
insl
jge
aam
aaa
outsl
repz
adc
sub
dec
lret
inc
mov
iret
mov
dec
push
and
lret
stc
sub
add
jecxz
loopne
out
pushf
daa
sbb
push
sub
sbb
push
xchg
adc
inc
dec
les
add
mov
inc
pop
sahf
push
out
popa
xchg
pop
fnsave
stos
iret
lods
xchg
cltd
into
inc
hlt
mov
fildl
movsl
add
sbb
int3
xchg
adc
and
leave
adc
lret
popf
nop
push
push
xor
enter
test
lods
inc
rcrl
imul
inc
adc
sub
add
and
stc
add
sbb
sub
adc
das
xchg
lea
lret
push
add
sbb
sub
push
adc
int3
xchg
addr16
in
clc
dec
fdivrl
push
mov
push
enter
sub
dec
xchg
sub
push
xchg
fsubrp
outsl
adc
and
sahf
mov
loope
jbe
and
fldt
pop
mov
adc
adc
mov
aad
and
sbb
lea
fildll
outsl
mov
int3
pop
adc
pop
xchg
sbb
fstpl
add
stos
imul
bound
das
out
sbb
nop
mov
add
rcrb
fildll
pop
adc
or
xor
stc
mov
adc
adc
int3
xchg
aad
scas
add
rorl
pop
adc
pusha
aam
divl
inc
add
pop
push
adc
adc
push
mov
addb
sub
fcoml
ljmp
push
lcall
popf
nop
xchg
in
out
inc
cli
cmp
leave
push
sbb
lea
rcrl
mov
push
stos
adc
cli
mov
scas
pop
inc
xchg
pop
adc
jno
jns
inc
nop
push
mov
int
push
adc
xchg
push
jns
aam
popf
mov
es
and
sbb
xchg
pop
stos
push
ss
or
cltd
js
sbb
pushf
das
or
fisttpll
pop
pop
popf
loop
fmull
pop
sbb
pusha
inc
daa
fldcw
push
xchg
out
jne
xchg
mov
mov
xchg
push
jge
fwait
aam
inc
push
push
xchg
or
xchg
push
fistps
mov
add
mov
aam
popf
pop
xchg
add
adc
pop
push
push
inc
push
or
xchg
sub
pop
mov
mov
push
fdivrl
sub
or
push
popf
aam
mov
xlat
adc
outsl
lcall
movsb
inc
cmp
or
adc
xchg
fcoml
xchg
iret
xor
repnz
arpl
xchg
in
push
push
repnz
push
mov
nop
push
clc
and
pushf
pop
sbb
pop
and
sarl
dec
daa
sub
push
out
sbb
xchg
sbb
popf
xchg
pop
adc
leave
pushf
push
or
push
mov
xchg
and
mov
mov
cmpsl
js
pop
int3
rcl
scas
rcrl
loop
sub
xchg
pop
sbb
gs
jbe
push
and
pop
sahf
and
lods
cmp
hlt
and
xlat
je
or
mov
mov
adc
sub
sbbb
add
xchg
xchg
stos
subl
imul
xchg
adc
pop
push
push
aad
pushf
movsl
sub
das
cmpsl
push
pop
dec
push
clc
cmp
xchg
arpl
inc
xchg
jb
and
xchg
outsl
rclb
adc
aad
adc
jle
cltd
stos
or
mov
das
sub
pop
xlat
daa
add
sahf
pop
adc
adc
pop
movsl
pop
jnp
xor
push
int
xchg
sbb
fildll
fdivrl
popf
xor
adc
push
sbb
mov
adc
xchg
fwait
jno
xchg
sahf
jg
rcl
gs
fdiv
icebp
lds
fsubl
inc
mov
sahf
xchg
mov
call
jae
cltd
inc
jnp
jno
push
rcll
push
push
aad
xchg
push
pop
sbb
in
adc
dec
xor
push
mov
fstps
mov
sub
push
sbb
sbb
dec
xchg
fcompl
push
sbb
inc
sbb
xchg
call
mov
inc
cmc
xchg
addr16
or
push
sub
mov
add
sub
scas
sbb
sbb
push
mov
mov
inc
mov
xchg
cmpsb
addr16
movsb
rcrl
aaa
adc
mov
push
dec
push
lds
es
icebp
fnstsw
rcrb
das
scas
fstpl
xchg
fisubs
mov
and
push
aad
cmp
testb
fs
or
outsb
push
call
in
ss
scas
push
inc
bound
push
cmp
inc
push
repz
fstpl
gs
inc
decb
sbb
popf
roll
cmp
fldl
sub
add
or
dec
xor
sbb
pop
out
flds
xchg
cwtl
xchg
sbb
ljmp
sbb
or
std
pop
pop
stos
mov
les
xor
sub
jmp
xchg
push
jno
jno
push
adc
je
sub
outsb
xchg
adc
mov
cmp
ljmp
mov
sbb
sub
pop
mov
sub
idivl
add
push
xchg
and
or
push
mov
push
dec
ret
push
test
jbe
xor
aad
ljmp
mov
xchg
fimull
in
inc
jne
xchg
mov
xchg
sbb
pusha
addr16
pop
xor
movl
pop
jp
dec
stos
mov
sub
xor
add
fiaddl
inc
test
jo
jp
ds
rclb
mov
adc
addr16
leave
ficoms
outsl
cmp
shll
fiaddl
push
or
scas
cs
in
pop
sub
fsubl
mov
add
out
sub
sub
xchg
movsl
jecxz
call
adc
pop
mov
dec
arpl
push
xchg
adc
and
mov
and
xor
fstpl
fistps
sbb
std
pop
scas
clc
aaa
stos
push
pop
and
sbb
dec
sbb
xchg
les
roll
sbb
int
sbb
and
bound
rol
sub
sub
hlt
cld
movsl
adc
repnz
jb
and
mov
and
mov
stos
lea
fistps
push
push
mov
and
push
cmp
fbld
push
sbb
stos
xchg
xchg
inc
sub
xchg
push
sub
lea
and
push
add
loop
push
and
sbb
bound
pop
xchg
pop
les
sti
mov
dec
shlb
rcrb
push
sbb
movb
adc
push
sub
stos
popa
adc
sbb
jae
push
dec
addr16
addr16
pop
test
push
push
xor
rcrb
inc
sbb
lcall
mov
out
inc
imul
sbb
adc
mov
xchg
xor
ret
ficoms
scas
xchg
imul
push
xor
popf
imul
mov
vpperm
add
imul
push
xor
int3
pop
shr
sbb
aas
inc
pop
jg
push
inc
add
push
shrb
push
sub
iret
shlb
shrb
xchg
jp
dec
push
mov
hlt
push
jb
rcl
cmp
mov
sahf
sub
std
mov
mov
and
pop
in
dec
adc
decb
stos
hlt
inc
pusha
mov
fldcw
pop
adc
leave
sbb
pop
mov
push
insb
addb
cs
add
aad
enter
in
rcr
push
sub
xchg
pop
mov
mov
int3
lea
fdivrl
push
push
stos
push
aam
les
push
sub
mov
fists
std
movsl
movsl
stos
xchg
jl
sbb
sahf
notb
add
adc
push
ret
pushf
xchg
pop
pushf
fcoml
push
sub
sub
xchg
rorb
sub
inc
pop
scas
lock
mov
test
dec
mov
xchg
outsl
xchg
mov
int3
roll
push
and
hlt
fisubrl
scas
test
fcmovu
adc
int3
outsl
push
sub
push
inc
les
add
pop
dec
jecxz
pop
rep
pop
add
js
leave
shrb
leave
xlat
fstps
ficoms
addl
dec
enter
repz
fists
cmp
sbb
xlat
mov
gs
test
popf
sbb
jae
rcrl
stos
clc
xchg
mov
out
ljmp
add
in
xchg
outsl
mov
push
xor
sbb
fs
pop
and
sub
cs
pop
xor
sub
or
adc
inc
fnstsw
mov
jle
pop
cmc
icebp
sbb
xchg
imul
or
sub
sbbb
mov
jp
xor
push
xor
mov
sub
push
xchg
and
sbb
cmpsl
dec
adc
mov
insb
lods
sbb
cmc
mov
je
mov
rcl
and
iret
adc
fs
or
mov
sbb
push
ljmp
loope
pop
clc
rorl
frstor
imul
call
mov
xchg
push
xor
push
pop
push
push
outsl
cmp
leave
adc
rcll
add
inc
push
push
push
xchg
es
fsubr
xchg
cs
lahf
pop
xchg
push
mov
pop
or
pop
sahf
push
sbb
ljmp
pop
stos
adc
push
notb
adc
push
lods
push
add
pushf
cltd
cwtl
xchg
popl
pushf
dec
adc
bswap
mov
push
mov
sahf
in
xor
push
pop
mov
std
repnz
fidivrs
cltd
push
push
rcrl
and
and
out
inc
push
inc
out
sub
stos
sbb
jo
pusha
inc
leave
sub
and
sbb
and
push
and
xlat
ror
xor
push
pushf
cmpb
das
mov
sbb
shl
adc
push
adc
push
adc
vorps
mov
jge
adc
mov
sahf
adc
xor
and
lods
adc
pop
in
lock
xorl
inc
repz
test
clc
xchg
add
test
dec
inc
jo
ret
rclb
shrb
jno
aad
out
pop
push
mov
mov
loop
adcl
sbb
xchg
or
push
pop
cmp
ljmp
call
mov
dec
dec
xchg
xchg
pop
rcll
insl
adc
adc
mov
fwait
xchg
push
cmp
dec
push
adc
shrl
or
mov
mov
loope
xchg
les
push
das
pop
stos
cwtl
lar
loopne
repnz
popf
push
pop
and
jae
sbb
pusha
inc
ficoms
push
je
dec
xchg
fstl
push
push
adc
xor
mov
popf
jne
call
cmp
push
pop
shll
push
pushf
inc
in
mov
sbb
pop
lods
pop
fdiv
adc
adc
sahf
lock
repnz
pop
rclb
into
sbb
xor
aam
xchg
ljmp
xchg
or
pop
rcr
sub
mov
adc
xchg
adcb
sbb
pop
adc
adc
xor
leave
push
ljmp
jle
sub
sbb
dec
pop
pop
adc
ds
and
adc
dec
nop
dec
aad
pop
sub
cmpsl
sub
xchg
inc
adc
cltd
xchg
rcll
and
sub
imul
adc
mov
adc
mov
push
add
xchg
xor
ror
add
push
sbb
adc
sub
clc
adc
mov
sub
rcrb
iret
sbb
sub
enter
loop
xchg
shlb
rcr
xorl
xchg
fwait
cwtl
loopne
push
pushf
push
pop
xchg
hlt
add
sbb
loopne
mov
sbb
pop
out
imul
push
xchg
pop
lret
in
in
sti
addr16
lods
call
push
pop
pushf
int3
inc
xchg
xchg
inc
movsl
les
and
mov
js
pushf
sahf
push
in
rclb
push
xchg
push
outsb
inc
cmp
lret
popa
test
enter
xor
pop
rclb
push
or
stos
sub
push
push
shrb
push
ljmp
roll
rol
ret
mov
xchg
sub
or
outsl
mov
sub
xlat
xchg
cmp
pop
push
push
inc
rcr
or
stos
xchg
push
and
pop
adc
cltd
add
push
iret
jae
rcll
pinsrw
ret
or
pop
adc
fldt
ret
sub
adc
push
popf
and
jb
inc
xchg
inc
insl
push
sub
mov
imul
xchg
fsts
xor
outsl
inc
in
sbb
std
inc
aaa
inc
push
xchg
dec
aam
add
imul
fcoml
xchg
adc
xor
add
xchg
rorb
xchg
mov
ret
fildll
sub
xchg
and
pop
adc
repnz
outsl
push
xchg
sbb
mov
mov
adc
dec
out
les
mov
dec
ljmp
sbbb
rcll
ret
in
xchg
pop
push
xchg
insl
push
pop
adc
pop
cwtl
stos
iret
inc
inc
and
push
and
imul
sbb
sub
push
cmp
xlat
stos
pusha
adc
lods
cltd
xchg
fldcw
xchg
xchg
adc
nop
and
lea
sbb
inc
clc
xor
inc
lcall
lea
lret
test
push
pusha
aas
mov
aad
mov
loope
or
push
aad
xor
mov
mov
xchg
inc
pusha
ljmp
das
dec
push
rcll
xlat
fidivrs
mov
arpl
sub
xchg
mov
xchg
push
mov
popa
sbb
clc
outsl
add
push
adc
mov
mov
adc
sbb
in
inc
dec
frstor
dec
sarl
and
xor
pop
and
xlat
push
les
daa
xchg
fidivs
inc
pop
das
xorl
out
popf
xchg
xchg
movsb
std
cmp
mov
cmpsb
push
adc
add
rcrb
mov
push
and
adc
push
fxtract
cmp
cs
push
insl
movsl
sbb
fists
push
cltd
ljmp
lahf
das
insl
shl
xchg
pushf
sub
mov
lods
mov
lods
testl
xchg
push
scas
fbstp
mov
xor
pop
repz
pop
xchg
ljmp
movsl
fisubrs
add
mov
movsl
mov
shrl
cmp
outsl
xor
dec
sbb
int
outsl
inc
filds
mov
jl
sub
sbb
and
and
push
pop
lret
pop
add
sub
xchg
adc
mov
inc
movsl
pop
and
adc
das
popf
mov
or
mov
inc
mov
sub
jmp
push
fidivs
je
popf
movsl
pop
mov
aad
or
sbb
fisubs
in
xchg
pop
lea
cltd
mov
hlt
fistpl
out
popf
pop
sbb
xchg
add
outsl
insl
inc
imul
adcb
loopne
pop
sub
bnd
jae
and
pushf
inc
jl
add
pop
test
xor
outsl
ffreep
add
es
insl
push
pushf
xchg
lahf
movsb
scas
outsl
mov
orl
out
mov
adc
jo
imul
cmpsl
imul
fsubrs
push
sbb
fcmovnbe
mov
gs
dec
fidivrs
push
rcrb
inc
push
xchg
aam
stos
shl
clc
jge
sbb
xlat
or
outsl
cmp
cmp
mov
pop
pop
ljmp
popf
xchg
xchg
xlat
adc
or
pushf
sbb
push
subl
mov
sti
cmp
imul
stos
xor
push
sbb
out
movsl
je
stos
xchg
add
mov
lods
adc
add
aad
negl
rorb
pop
ficomps
and
fsubrl
jo
fistl
inc
aad
adc
in
mov
or
mov
jmp
inc
div
push
push
mov
sub
addl
mov
add
jge
sub
stos
xchg
sub
push
push
xchg
pop
mov
and
movsb
das
sbb
jne
push
stos
decl
repnz
fimull
push
mov
jmp
fdivrl
and
imul
mov
push
jo
inc
add
adc
rcll
out
imul
push
stos
xchg
ret
pop
xchg
cs
mov
push
hlt
out
ficomps
les
adc
push
xchg
sarb
scas
push
jns
push
sbb
push
adc
ror
aad
xchg
cltd
or
adc
stos
xchg
rcrl
stos
subps
xor
jb
add
cmp
inc
das
adc
addl
fst
cltd
outsl
sahf
inc
mov
cmp
imul
sub
mov
inc
lahf
xor
pop
dec
xlat
pop
jecxz
inc
sahf
pop
push
scas
repnz
xchg
dec
xchg
psadbw
std
or
loopne
into
xor
sub
sbb
pop
inc
lods
jb
adc
push
inc
xor
mov
xorl
aas
or
adc
adc
sbbl
push
loopne
jns
xchg
cli
mov
sub
addb
mov
std
xchg
loope
pop
xor
test
jo
inc
subl
out
sub
adc
in
pop
jle
jge
adc
insl
mov
fs
fnstcw
mov
inc
push
xchg
inc
mov
inc
dec
fnsave
cmpsl
in
and
stos
test
push
xchg
inc
xor
jge
push
fnsave
or
add
or
stos
aad
pop
mov
lea
rcl
push
jge
push
pop
outsl
in
pop
sbb
push
sub
cmp
imul
ds
lahf
xchg
test
cmp
fmul
fcomps
fstpl
inc
call
mov
imul
icebp
stos
push
jmp
out
mov
inc
xor
in
pop
xchg
push
jbe
xchg
cmp
jb
ljmp
adc
sbb
push
mov
or
push
adc
sub
pop
cs
inc
xlat
int3
adc
sbb
xchg
movsb
xor
adc
loope
rcr
imul
stos
pop
fnstenv
adc
into
ficoms
inc
mov
fnstsw
xor
in
hlt
mov
mov
jl
jle
push
out
mov
pop
fistps
mov
jb
or
pop
mov
roll
into
inc
mov
xor
mov
and
aad
cmp
dec
push
pop
pop
xchg
ret
xor
adc
xchg
jg
adc
lea
out
ds
mov
inc
stos
test
popf
xchg
jb
jnp
leave
rcll
scas
xor
icebp
jmp
mov
faddl
jne
scas
sarb
ret
or
adc
pushf
iret
adc
cmp
pushf
shll
scas
test
inc
pop
sub
adc
mov
dec
inc
jge
push
dec
sahf
sbb
inc
shlb
xchg
fwait
out
sub
xor
jnp
mov
mov
push
mov
sub
jecxz
push
sub
push
xchg
dec
adcl
sub
mov
nopl
and
lahf
pop
push
in
lcall
out
sub
mov
imul
test
lods
sub
and
mov
jle
pop
ffree
rcll
push
push
cmp
adc
xchg
mov
stos
out
sbb
stos
and
xchg
mov
cmp
adc
inc
push
mov
push
in
mov
mov
pushf
or
xchg
xchg
and
sbb
loop
test
and
sahf
das
mov
loopne
sub
sbb
test
sbb
sarl
xchg
lock
or
mov
xlat
aas
aaa
nop
push
add
aas
rcr
sahf
pop
test
pop
inc
mov
fwait
push
mov
loopne
mov
sub
mov
push
xchg
fldcw
push
pop
xchg
sub
lret
push
pop
aaa
dec
sbb
shl
or
aas
pop
jmp
and
pop
clc
pop
mov
loopne
fdiv
push
mov
push
mov
subl
sub
and
push
stos
outsl
sub
and
fld
nop
mov
jle
cwtl
out
push
rorl
dec
push
fdivl
pop
push
xchg
insb
sub
sub
xchg
outsl
daa
push
jmp
sub
sub
stc
movsl
xchg
out
sub
roll
pop
pop
xchg
stos
or
push
xchg
daa
sbb
pushf
ret
sbb
imul
jp
pusha
mov
xchg
fcomps
and
xor
sub
jmp
decl
sbb
rcl
add
sub
cmp
movsb
jo
sbb
imul
cmp
movsb
jo
push
jl
xorl
push
shrb
mov
sub
push
loop
test
sbb
outsl
mov
dec
xlat
aad
fcoml
sub
inc
jmp
ljmp
repz
cmpsl
xchg
pop
pop
mov
enter
pop
add
add
push
push
add
popf
pop
sbb
mov
mov
rcl
jle
negl
fiaddl
mov
add
xchg
push
stos
pushf
enter
jnp
sahf
adc
adc
clc
add
inc
push
cwtl
ret
pop
push
js
add
and
pop
add
sub
push
jg
loop
adc
push
add
fcomps
xor
inc
pop
rcll
pop
aam
add
stos
loop
cltd
fisubrs
std
cld
and
adc
popf
sbb
or
fisubrs
rcll
sti
xor
push
insl
aam
inc
mov
dec
fistl
mov
xchg
mov
and
cmp
fucomip
push
repnz
cli
pop
mov
push
popf
aas
sub
adc
adc
xchg
push
stos
lcall
jae
fincstp
lret
xlat
shll
add
pop
dec
outsl
ficoms
pushf
fdivr
jae
adc
icebp
adc
ficoml
sbb
sub
imul
cltd
sbb
pop
push
rol
xlat
inc
sub
fnsave
stos
cmpl
xchg
int3
push
imul
movsl
movsl
sbb
and
jg
jmp
sub
leave
adc
mov
fists
mov
sub
push
aad
pushf
xorl
add
sahf
xchg
pop
out
inc
sub
pop
decb
dec
adcb
push
adc
mov
jae
pop
adc
push
cmp
popf
fistpll
push
push
jb
stos
ror
in
pop
adc
add
pop
rcl
mov
push
mov
cld
push
dec
movsb
adc
push
jp
mov
xchg
das
inc
pop
jbe
std
sti
xor
push
push
pop
outsl
push
fsubrp
or
shll
and
or
popf
sbb
aad
bound
xadd
sbb
and
roll
inc
aad
stos
addl
xchg
jo
iret
push
push
sub
and
mov
and
mov
jb
inc
xchg
cs
pop
xor
add
pop
push
pop
pop
cmp
and
push
cwtl
inc
and
pop
push
adc
xchg
push
inc
das
scas
xlat
mov
pop
push
dec
add
xor
xor
push
fldl
adc
push
stos
sub
xor
jp
pop
outsb
or
push
imul
mov
ret
int
fsubrl
and
mov
stos
lret
ljmp
xor
scas
push
loop
pusha
pushf
push
int
out
or
xchg
mov
sub
cs
lret
push
mov
push
sub
stos
adc
dec
xchg
xchg
push
push
xor
xchg
outsl
xor
xchg
pop
sub
rolb
xchg
xlat
sbb
push
inc
cmp
adc
pop
jge
xchg
xchg
sub
sub
repnz
xchg
push
push
and
gs
mov
aad
push
fistpll
adc
push
lcall
add
push
xchg
xchg
adc
test
dec
sbb
and
sub
xchg
stos
xchg
scas
nop
imul
shll
pusha
xor
push
push
mov
xchg
pop
pushf
out
leave
push
pop
or
mov
fcoml
xchg
lds
jne
push
mov
sahf
xchg
adc
adc
stos
out
pop
adc
xchg
mul
push
push
pop
inc
ds
push
js
fsts
push
sbb
sahf
dec
mov
push
sub
lcall
loop
mov
pushf
bound
xchg
mov
roll
orl
stos
sbbl
test
lods
xchg
sti
mov
or
jmp
loop
sub
and
lea
xchg
push
or
adc
and
xchg
xchg
or
push
push
aam
mov
call
push
out
mov
add
push
aam
xchg
cmp
and
std
jnp
jp
mov
sbb
int3
adc
popf
inc
xlat
das
push
push
daa
pusha
jo
push
ljmp
cmp
cmpsl
sbb
push
dec
outsl
cltd
roll
pushf
out
ret
scas
xor
adc
cmp
inc
adc
jbe
fists
sub
push
sub
and
scas
and
dec
das
pusha
adc
or
push
push
fidivs
vpackssdw
sub
xchg
mov
and
pop
push
imul
and
dec
jbe
add
ficompl
mov
sbb
xor
sub
sub
and
test
cmp
mov
lods
pop
imul
jmp
adc
movsl
cmp
mov
xchg
fidivs
sub
adcb
sbb
js
cld
sub
sub
popf
sub
xor
push
rorb
push
push
sbb
xchg
rorb
sub
push
rcl
sbb
sbb
or
adc
cmp
cmp
lret
xchg
negl
push
mov
inc
xchg
cltd
dec
sbb
cmovl
scas
pop
adc
mov
push
pop
fisubrs
cmp
das
add
ss
xor
add
cmp
sbb
jnp
subl
inc
ljmp
out
fbld
jmp
sahf
pushf
fsubrl
adc
push
cwtl
fidivrs
cltd
leave
push
adc
pop
mov
aad
test
aam
jge
ljmp
arpl
add
jae
sub
sbb
pop
or
mov
fcoml
ja
xchg
mov
dec
xchg
mov
xchg
xor
pop
push
mov
stos
pop
into
sahf
mov
adc
xchg
les
lret
adc
pop
sbb
push
adc
lea
popf
sub
pop
int
mov
mov
xchg
push
sbb
xchg
iret
lret
aas
js
divb
xchg
pop
ficomps
into
jbe
aas
inc
imul
add
outsl
push
out
and
rol
into
pop
sbb
js
test
pop
sub
xchg
cltd
ficoml
mov
das
cmp
ss
xchg
pop
sbb
pop
pushf
aas
pop
inc
fstpl
xlat
inc
mov
inc
scas
sub
sbb
xchg
fists
pop
or
add
sbb
pushf
dec
add
add
xor
in
push
outsl
lods
std
ja
addr16
inc
scas
pop
stos
das
push
sbb
subl
insb
xchg
shll
sahf
jnp
lea
jle
sub
iret
cld
ja
push
adc
bswap
push
roll
pop
mull
mov
xchg
cmp
sub
lcall
adc
mov
add
or
adcb
add
add
or
stos
inc
movsl
imul
sub
inc
addb
mov
xchg
loopne
cmp
stos
in
dec
stos
pop
cmp
xchg
loope
sub
xchg
mov
cltd
xchg
or
mov
sub
mov
cli
mov
rorb
xor
iret
adc
sbb
shll
push
sbb
and
xchg
stos
mov
frstor
in
fsubp
push
and
xor
cltd
jbe
pop
adc
pop
sbb
push
subb
sub
dec
rcrb
mov
push
rcll
outsl
out
out
push
inc
stos
xor
add
xchg
xor
mov
xor
sbb
lcall
mov
inc
sarl
sub
mov
sar
push
jmp
sbb
in
lcall
push
scas
insl
mov
jo
xchg
ret
and
cs
fcoml
pop
orl
mov
ljmp
adcl
stos
jp
add
adc
das
push
lea
sbb
sbb
xchg
push
xor
sbb
or
fildll
push
xchg
pop
pop
scas
out
jge
stos
jmp
je
loop
out
stos
jle
xchg
and
or
xchg
push
mov
jmp
mov
inc
fmuls
insl
sbb
xchg
cltd
push
test
sbb
inc
int3
popf
ljmp
xchg
sbb
adc
fsubl
jno
fwait
ja
aaa
pushf
push
jae
outsl
fsqrt
cld
cmp
sbbb
push
add
ret
jae
in
push
xchg
loopne
test
adc
adc
pop
adc
push
out
jb
xchg
das
sahf
sti
cltd
push
gs
dec
add
popf
adc
fstpl
push
icebp
cmp
fistl
imul
and
jb
xor
leave
push
pop
xchg
movsb
pop
sbb
js
pop
shl
xlat
xchg
adc
pop
stos
sbb
rolb
stos
inc
mov
imul
mov
roll
adc
sub
inc
aam
bound
clc
xchg
jmp
popf
sub
pushf
icebp
outsl
mov
adc
push
push
fistpl
xor
mov
mov
mov
adcl
pop
pushf
cmp
cmpsl
pop
push
les
push
popf
out
test
enter
enter
loopne
pop
ss
idivb
stos
pusha
xchg
sbb
xchg
push
rcll
cmpsb
push
push
and
xchg
inc
mov
mov
fsts
mov
out
sbb
sbbb
xchg
rolb
insb
ret
jge
adc
in
lret
adc
lea
push
add
cltd
mov
ljmp
add
imul
mov
adc
push
push
xchg
mov
testb
push
push
pop
jg
sahf
cltd
flds
add
pop
mov
xchg
stos
mov
imul
pop
jae
dec
push
push
push
pop
jb
push
pop
in
fildl
inc
push
push
shlw
test
aad
sub
xchg
sbb
rcr
push
inc
jns
mov
int3
imul
add
add
sub
push
pop
push
mov
xchg
ds
movsb
pop
loop
fists
add
ljmp
inc
lods
cmp
sarb
out
push
fimuls
push
mov
push
adc
stos
inc
cli
push
mov
sbb
fmul
add
mov
pop
pop
out
push
sub
sbb
xchg
out
fstl
ja
scas
enter
sbb
test
pusha
pop
jmp
lods
adc
mov
xor
pushf
xchg
sub
mov
sub
add
cmp
xchg
inc
fcoml
adc
push
das
jmp
pop
rcr
push
jnp
jle
sub
inc
es
das
movsb
imul
bound
incl
sbb
pusha
ret
sbbl
xchg
xchg
xchg
ljmp
sub
push
jno
inc
cmp
shrb
pop
das
xchg
adc
aas
xchg
inc
xchg
aam
ficomps
inc
sub
inc
ljmp
sub
daa
xchg
push
xchg
sbb
xchg
test
xchg
jbe
je
xchg
pushf
fcmovnu
adc
pushf
adc
std
nop
movl
cmp
xchg
mov
das
cltd
jne
push
imul
sub
test
xchg
jbe
adc
mov
stos
cltd
mov
push
sti
push
and
fmull
jecxz
and
inc
cmp
mov
test
ficoms
aad
inc
inc
inc
add
dec
push
cltd
pushf
xchg
xor
dec
inc
popa
cmp
inc
sbb
jg
xchg
repz
jge
push
push
nop
int
sbb
mov
das
xchg
pop
les
xor
push
sbb
hlt
cwtl
ret
ljmp
mov
sbb
int3
sahf
das
and
push
flds
fstl
sahf
fistl
xchg
pop
ffree
sbb
cmpsl
stos
test
push
and
pop
pushf
inc
insb
les
sbb
add
into
push
std
sbb
insb
insb
ja
xchg
add
push
das
mov
inc
lods
push
cmp
das
push
adc
sbb
inc
pop
push
fidivrs
inc
adc
dec
mov
fcmovnu
xchg
jmp
xchg
pop
push
pop
inc
test
mov
or
mov
rclb
sahf
xchg
push
push
sbb
fmuls
das
sub
push
aad
faddl
adc
fistpll
add
movsl
cmp
lods
fwait
ljmp
adc
push
xchg
jp
adc
repnz
push
fstpl
sub
cmp
sub
popf
mov
mov
xchg
lret
pop
mov
push
pop
sbb
sub
sub
cmp
and
jne
out
inc
nop
popf
ret
xor
lods
mov
cmpsl
pop
stos
movsl
cs
mov
repnz
mov
mov
pop
aad
push
lcall
mov
inc
pop
jb
popa
sub
fstp
loopne
test
jp
add
scas
sub
int
out
push
daa
xchg
push
xchg
jmp
sub
fstl
test
dec
xchg
xchg
rcll
pushf
adc
adcb
cmp
push
dec
and
push
das
les
sub
rolb
cmp
dec
pop
xchg
inc
adc
sbb
sub
adc
out
pop
notl
sbb
stos
adc
shrl
pop
leave
sbb
fucomip
sbb
xchg
adc
add
das
xchg
rolb
xchg
jno
add
or
pop
push
jb
xor
xorl
scas
push
iret
and
outsl
adc
adc
adc
xor
mov
rcrb
lods
icebp
stos
pop
cmp
and
fwait
stos
sbb
addr16
pop
pop
sub
mov
cmp
rcll
mov
fsts
mov
sub
push
fistps
fdivl
std
repnz
loopne
lods
clc
push
pop
aad
call
pop
mov
xchg
imul
movsl
adc
mov
fwait
pop
push
sub
imul
or
negl
out
pushf
xchg
sub
push
enter
jbe
inc
mov
cmp
pop
mov
sub
adc
subl
andb
je
mov
add
ss
sahf
sbb
push
stos
sub
mov
ficomps
insb
inc
test
xchg
inc
push
dec
inc
or
lea
xchg
sub
xor
ficompl
xor
jnp
stos
adc
jno
push
fnstenv
ds
dec
mov
or
rcll
in
add
orl
cmp
sbb
dec
lods
fisttpll
pop
rcll
cmp
fistpll
inc
in
add
data16
ds
sub
andl
adc
fmull
inc
add
push
mov
stos
add
jno
jp
adc
add
mov
push
sub
pop
xor
popf
or
test
cmpsl
out
sub
add
sbb
xchg
adc
xor
fstps
cmp
addl
test
pop
ljmp
subl
scas
imul
addb
sbb
stos
push
dec
inc
cmp
scas
cltd
mov
xchg
shrb
fsubrs
inc
xchg
xchg
add
dec
loop
and
xchg
int
addl
dec
xchg
sbb
stos
adc
ret
adcl
test
inc
xor
decb
push
sub
addr16
loop
pop
xchg
dec
add
pop
ret
sub
cmp
xchg
pop
out
inc
pop
ret
popa
pop
push
outsl
add
sub
and
xlat
sub
ss
notb
outsl
push
test
push
sbb
jle
popf
xchg
sbb
test
outsl
sahf
loop
lods
test
xlat
push
fidivrs
repnz
and
xchg
xor
cmp
push
out
aas
xchg
pop
shlb
into
push
push
into
mov
test
cmpl
pop
stos
add
jg
add
push
fisubrs
adcl
inc
push
fisttps
mov
adc
push
jle
jmp
xchg
sbb
outsl
sub
or
xchg
inc
mov
pop
jle
pop
xchg
fcmovnbe
smsw
int3
adc
inc
pop
sbb
cmp
inc
adc
add
aad
inc
mov
pop
fadd
pusha
pop
ljmp
dec
enter
push
push
popf
cltd
xchg
bound
mov
push
insl
pushf
push
stos
js
adc
mov
push
flds
pop
xchg
sbb
pushf
cmp
push
sub
int3
fstps
imul
xchg
test
lods
mov
outsl
xchg
and
das
sub
aam
push
push
clc
push
push
dec
cmp
roll
xchg
sbb
out
lods
arpl
adc
cmp
sahf
ja
insl
rclw
inc
enter
xchg
pop
inc
aad
rcl
rolb
mov
push
push
sbb
xor
rcr
pop
push
xor
push
push
sub
movl
adc
adc
inc
push
push
push
int3
xchg
dec
ficoms
aam
lods
fcoms
pop
fisttps
sbb
lock
xlat
popf
out
mov
xchg
fwait
aam
sbb
repz
adc
sub
loopne
sub
xchg
in
fldt
push
cmp
cmp
sbbb
repnz
jbe
scas
and
xchg
lock
xchg
xchg
imul
push
push
or
pop
dec
push
xor
pop
xchg
add
fsts
push
and
pop
stos
stos
jno
divl
jl
xchg
sbb
dec
inc
xchg
pop
fcom
and
pop
stc
orl
clc
andl
push
jge
pop
adc
rclb
xlat
aam
fiaddl
jge
ficoms
xchg
scas
js
mov
jge
xchg
add
std
pushf
push
push
sbb
xchg
sub
push
rcrl
inc
push
sbb
or
xchg
sub
fcmove
xchg
dec
push
sub
dec
rcrl
mov
stos
aad
neg
mov
sub
inc
icebp
test
or
imul
cmpsl
dec
in
rclb
adc
xlat
add
leave
xchg
lret
jl
pop
xor
adc
push
push
adcl
sbb
popf
push
jge
sarl
pop
scas
loopne
and
sahf
aas
fs
popf
fisttpll
push
fs
ja
mov
cs
imul
sbb
mov
aas
rcll
sub
xchg
xchg
dec
adc
shll
int
push
sahf
or
dec
cwtl
fstps
xchg
add
jno
xor
inc
mov
or
rol
sahf
adc
in
push
popf
fists
dec
movsl
push
jo
ret
outsl
sub
pop
xlat
xchg
inc
shrb
cmp
dec
iret
rcrl
fcompl
lahf
leave
cmp
cmp
push
filds
shr
rcl
ficomps
jns
aam
cmp
stos
rcll
mov
mov
dec
pop
or
les
dec
mov
adc
inc
int3
inc
jo
popf
subb
xchg
rorb
cmp
push
xor
dec
push
add
inc
aad
outsl
repnz
xlat
mov
push
push
mov
push
adc
xchg
fiadds
push
dec
mov
xchg
add
sbbl
int3
scas
xchg
mov
sub
push
aam
or
sahf
adc
outsl
mov
or
push
out
xlat
push
mov
scas
inc
fst
shl
inc
mov
pop
sub
inc
lcall
xor
add
stos
and
mov
push
and
push
push
xchg
ljmp
aaa
mov
xchg
cltd
or
mov
push
push
sbb
adc
dec
adc
rcr
cmp
das
fisubrs
and
sub
popf
sbb
pop
sahf
and
aaa
int3
xchg
sbb
stos
sub
sahf
push
push
lods
lahf
inc
outsl
xchg
cltd
iret
mov
out
mov
push
pop
popf
in
pop
add
stos
and
mov
loop
inc
mov
add
xchg
mov
rcll
push
rol
sarb
push
imul
icebp
ficomps
xchg
pushf
popf
jle
mov
ljmp
jge
sbb
popa
sbb
fistps
sbb
or
pop
cltd
push
mov
pop
xchg
mov
cmpsl
add
xchg
push
orb
sub
sahf
aam
push
pop
shrl
add
xchg
stos
sbb
dec
pop
xchg
fistpl
fldl
push
stos
das
sti
insl
mov
pop
adc
add
or
pop
sub
in
xlat
push
sub
sub
push
clc
js
jne
adc
insl
shll
mov
adc
dec
leave
pop
sbb
rcr
adc
dec
pop
xchg
pop
pushf
xchg
jge
rclb
add
inc
sbb
pop
xchg
push
inc
sub
mov
int3
nop
lods
adcl
xchg
mov
xlat
fists
stos
push
push
xchg
pop
xor
dec
push
push
je
adc
mov
rcl
xchg
inc
pop
out
and
xchg
jnp
inc
inc
fdivl
inc
mov
inc
cmp
push
and
jo
fwait
stos
push
pushf
inc
xchg
add
xor
stos
cltd
push
xchg
mov
push
ret
testb
sub
movsl
jl
and
aad
test
pushf
adc
js
adc
add
cwtl
leave
xchg
pop
enter
cmp
adc
stos
push
xchg
mov
fistps
lods
outsb
xchg
fstp
xchg
pop
test
lahf
push
sub
mov
xor
lcall
js
sbb
xchg
bound
xchg
out
xchg
dec
gs
xchg
push
xchg
adc
pop
and
sbb
rolb
ljmp
add
push
dec
xor
add
test
and
mov
xchg
xchg
push
mov
add
scas
lods
addr16
jge
fldl
cmp
lods
jp
xchg
jb,pn
clc
adc
cmp
xchg
enter
mov
or
dec
xchg
adc
in
enter
aam
xchg
push
inc
push
aam
push
mov
inc
xchg
shlb
jnp
mov
or
mov
cmc
fwait
movsb
add
push
mov
xchg
int
fcoml
mov
stos
adc
push
xor
adc
mov
popf
xchg
fsts
sbb
std
sahf
xor
enter
sbb
aad
sbb
xchg
popf
xchg
pop
xor
inc
das
lea
das
sbb
xchg
mov
addl
pop
sbb
das
enter
int3
push
inc
inc
outsl
cmpb
pop
sbb
in
fcoml
scas
xchg
in
mov
mov
ror
push
stos
xchg
fdivrl
push
push
jle
sub
sub
pop
imul
and
add
push
fcoml
inc
mov
sub
sub
sbb
aad
pushf
push
rcll
or
in
adc
push
pop
push
cmp
rclb
outsl
pop
stos
pop
mov
sub
loopne
or
repnz
call
pop
insl
in
pop
pushf
outsl
adc
gs
push
xchg
mov
inc
aaa
inc
mov
jle
movsb
mov
je
mov
loopne
inc
xchg
pushf
cltd
jmp
mov
std
sbb
es
push
fildll
xor
cmp
notb
mov
push
pop
aam
sub
pop
insb
inc
filds
cli
movsb
pop
lret
popa
test
pop
dec
and
xor
xchg
cmp
aad
clc
aad
xchg
or
fsts
aad
add
imul
lods
sbb
xor
fldl
fistps
inc
loopne
xchg
test
outsl
ret
fimuls
lods
jmp
ljmp
adcl
sahf
push
inc
aas
je
rcll
dec
dec
stos
inc
jmp
shl
push
add
movsl
and
push
xchg
cmp
sbb
ljmp
stos
movsl
cs
add
mov
cwtl
ljmp
adc
cli
cmc
adc
adc
push
adc
and
push
jl
push
stos
add
minps
push
shll
adc
fwait
leave
ljmp
in
mov
cltd
das
fbstp
sbb
pop
xlat
push
dec
adc
aam
test
sub
cltd
mov
add
sbb
cmpsl
jge
pop
fsubrs
add
out
imul
jnp
aaa
push
push
mov
push
xchg
mov
inc
ficoms
out
inc
jge
xlat
adc
sub
cld
test
push
xor
movb
xchg
mov
filds
lock
add
stos
jnp
int
push
push
mov
mov
shl
and
xor
mov
push
xlat
orl
pop
xchg
jg
xchg
rcll
std
lds
subl
enter
fmull
sub
sbb
and
addr16
cmp
add
sbb
das
int
scas
pop
enter
push
shlb
pop
push
push
std
shlb
push
clc
xor
add
xlat
push
push
rol
ss
in
aas
push
inc
push
sbb
sbb
cmp
lret
push
test
flds
push
cmp
orb
pop
and
cmp
sub
je
repnz
inc
adc
cs
xchg
pop
sti
cli
ret
push
mov
sub
sbb
inc
inc
pop
push
xchg
jmp
sbb
xlat
mov
sub
inc
adc
push
stos
pop
std
cmp
sbb
pop
nop
jg
cmp
addr16
adc
inc
xor
xor
loop
ss
dec
xchg
sbb
gs
adc
das
push
push
int3
mov
or
xchg
mov
xchg
sbb
leave
lock
fidivs
xchg
iret
inc
lret
xchg
sub
mov
sbbl
xchg
pop
push
xchg
pusha
and
sbb
filds
adc
sbb
mov
jge
sbb
aam
mov
inc
sbb
inc
fwait
sub
xchg
inc
pop
stos
push
mov
sbb
pop
sub
movsb
push
std
or
inc
aam
faddp
adc
pop
out
mov
cs
ljmp
push
adc
inc
dec
sbb
push
adc
mov
push
ret
xchg
stos
mov
cld
mov
movsb
daa
dec
test
push
pop
jb
mov
test
and
roll
out
roll
xchg
lret
sbb
push
push
jge
fstps
push
jl
xor
pop
adcl
test
rcrl
push
push
dec
jo
sbb
fwait
pop
sbb
int3
xchg
fstps
roll
ret
adc
cltd
push
sbb
cmc
jns
adc
pop
add
pop
pushf
sbb
movhlps
fstpl
sbb
pop
fwait
adc
inc
push
das
int3
pop
stc
enter
mov
push
cld
add
pop
cmpsl
stos
jno
pop
jae
add
sub
push
jmp
fsubrl
bound
int3
mov
inc
sub
movsb
sub
hlt
xor
cmp
xchg
xchg
pop
inc
adc
aad
adc
int3
sahf
sbb
jge
pop
inc
jnp
and
adc
sti
sbb
sbb
outsb
sub
mov
loopne
push
cmpsl
add
cltd
xlat
sbbb
dec
pushf
and
add
xchg
add
pop
fmull
sub
adc
pop
pop
aam
sub
mov
mov
sbb
adc
popf
out
test
faddl
dec
stos
aam
decb
pop
dec
int3
rcl
add
sub
pushf
inc
sbb
fcoml
cmp
xlat
pop
pop
outsl
enter
or
loop
xor
lods
pop
aam
push
sahf
adc
leave
xchg
int
stos
fcoml
addr16
push
out
in
test
inc
push
scas
sbb
push
cltd
xchg
mov
xor
test
xlat
mov
mov
xchg
imul
adc
inc
inc
shrl
push
lcall
in
and
out
add
int
inc
fnsave
xchg
cmp
xchg
roll
add
push
push
xchg
mov
add
mov
add
add
push
push
pop
sahf
inc
xlat
imul
adc
push
and
gs
inc
inc
sub
clc
imul
out
xchg
fcompl
pop
inc
cmp
inc
mov
pop
mov
mov
enter
lcall
sbb
push
popf
jl
ds
iret
cmp
lock
rcl
xchg
inc
lods
lock
fwait
aam
ja
adc
mov
sbb
xchg
rcr
out
adc
out
xchg
ret
xchg
xchg
sbb
fcmovnu
fcompl
fbstp
push
scas
vmovntps
popf
xchg
push
aas
sub
je
adc
lahf
ljmp
pop
adc
xchg
push
pushf
mov
xchg
adc
das
je
mov
ss
pop
push
add
inc
mov
add
add
xchg
ljmp
clc
loope
in
movsl
pop
adc
sub
rclb
pop
jmp
xchg
fbld
xchg
mov
sbb
push
push
ret
fisttpll
inc
mov
cwtl
rcrb
add
sbb
sbb
xlat
inc
int3
stos
xchg
mov
inc
adc
rcll
lcall
add
out
add
push
lahf
enter
xor
shrb
outsl
bound
icebp
loop
jmp
push
fsubr
jl
cltd
mov
lcall
lea
pop
jnp
aam
jle
fiadds
push
sub
push
add
outsb
pop
adc
sahf
test
jmp
or
jmp
mov
xchg
imul
jns
sahf
shl
repz
push
cmpb
or
cmp
xchg
cmpsl
jae
pop
sti
and
repnz
outsl
xchg
popf
pop
sbb
cltd
adc
jno
adcl
push
sub
mov
loopne
pop
or
faddp
cmpsl
pop
loop
std
xchg
test
cmpsl
push
clc
int
xchg
xchg
jecxz
jl
lret
push
popl
push
std
cwtl
adc
enter
xchg
leave
hlt
int3
gs
scas
xchg
cltd
add
push
and
int3
sbb
mov
xchg
adc
stos
add
adc
push
or
nop
out
aam
sub
sub
lcall
lock
mov
sub
loop
xchg
enter
ljmp
sbb
cmp
mov
adc
push
inc
pop
pop
repz
sbb
cmp
out
stos
and
icebp
les
xchg
xchg
pop
push
popf
push
jns
push
sub
cltd
pop
in
dec
adc
xchg
xchg
les
sub
mov
fiadds
xchg
sqrtps
push
scas
fldenv
sbb
inc
test
imul
sbb
xchg
pop
pop
pop
shlb
stos
fiadds
ffreep
pop
rclb
popf
xchg
shr
lock
sub
icebp
push
mov
sub
pop
pop
add
das
xchg
and
sub
fnsave
mov
dec
and
stos
bnd
mov
cli
pop
push
mov
inc
push
or
scas
xlat
push
enter
add
outsl
jne
sbb
dec
or
rcll
mov
push
sub
jo
push
sbb
leave
frstor
mov
les
mov
inc
fsts
add
aam
xchg
pop
jne
xchg
push
xchg
ds
fldenv
js
push
iret
mov
sbb
and
sbb
pushf
add
pop
adc
loop
push
lods
ja
ja
adc
xor
out
push
push
rclb
mov
cltd
lea
sub
insl
daa
adcl
pusha
test
into
pop
or
push
mov
sub
push
jle
add
pushf
sub
out
adc
jne
push
add
aas
sub
sub
je
xchg
sub
mov
inc
push
repnz
push
icebp
pop
mov
push
les
adc
loop
add
push
imul
pop
mov
xchg
outsb
jge
popf
add
outsl
cltd
push
sbb
push
out
les
pop
inc
sbb
push
sub
mov
xor
and
cltd
push
roll
lds
jno
adc
testb
sbb
enter
mov
inc
mov
jns
pop
shl
adc
sbbl
jae
imul
sub
cmp
jge
xchg
push
lahf
jne
popf
arpl
jne
push
nop
push
jne
ret
sub
scas
shr
ficoml
sbb
or
das
stos
pop
push
add
pop
jmp
sbb
xchg
pop
outsl
jns
xor
aad
sbb
scas
outsb
gs
sub
fildll
push
sbb
sub
adc
lea
fdivrp
sbb
sar
arpl
mov
pop
xchg
push
cmp
mov
int
pop
stos
out
push
cmp
jne
xchg
pop
sbb
adc
sbb
mov
stc
push
or
shrb
stos
and
push
push
das
add
pop
push
pop
testl
mov
cwtl
push
movb
jg
cmc
and
das
pop
cmp
push
adc
push
xchg
jmp
mov
mov
imul
mov
and
aad
mov
adc
dec
shrl
add
fisttpl
lret
add
adc
les
iret
jb
sub
mov
inc
sbb
or
das
das
jle
adc
sbb
mov
jge
cli
inc
xlat
sub
insl
sbb
adc
movl
mov
and
shl
mov
mov
ficompl
adc
sbb
and
out
mov
xor
fcompl
mov
mov
les
fmul
aam
adcl
push
repnz
xchg
iret
mov
add
push
xor
xlat
out
ret
pop
test
lds
sub
js
in
and
and
test
jle
push
adc
sbb
loop
adc
lahf
adc
xchg
and
dec
lcall
push
ror
aam
pop
push
cs
push
mov
or
add
sub
stos
jb
lock
scas
insb
mov
pusha
sub
or
scas
outsl
pop
stos
push
push
or
cmp
sbb
into
push
push
push
push
flds
mov
ss
or
push
add
xchg
insl
jb
sbb
and
push
jge
das
out
add
mov
test
add
aam
jge
xchg
sbb
sub
fists
mov
pop
xchg
dec
add
hlt
mov
xchg
lock
add
inc
das
and
enter
mov
data16
push
xlat
mov
enter
in
subb
xchg
push
adc
pop
pop
adc
sub
and
leave
inc
pop
imul
push
sbb
aad
aam
xchg
xor
jne
adc
ret
mov
ret
sub
outsl
out
arpl
dec
pushf
inc
loop
or
bt
adc
aad
xchg
in
mov
fsts
inc
imul
into
xchg
aas
jbe
aam
ljmp
scas
mov
or
ficomps
and
iret
pop
das
mov
adc
sub
mov
add
lahf
cmp
pop
push
xchg
outsb
xor
rcll
add
aam
dec
les
push
xchg
aam
setno
cmp
adc
and
mov
push
mov
ds
out
xlat
stos
loop
push
xchg
add
mov
fxch
popf
sbb
aad
shrl
mov
or
sub
lea
scas
adc
mov
push
and
les
ljmp
sub
jge
push
push
lret
daa
pop
aad
iret
push
arpl
xor
je
shr
movsl
rcl
add
mov
pop
inc
xlat
and
push
push
cmp
je
rcll
ljmp
and
mov
cmp
lock
sbbl
sub
pusha
in
sbb
aad
bound
aam
push
adc
hlt
jmp
pop
dec
mov
mov
imul
loopne
sbb
push
sub
dec
push
xchg
scas
cltd
pop
les
inc
sub
sub
popf
imul
add
sbb
push
xchg
adc
sub
cli
inc
cmc
and
repnz
bound
xor
xchg
pusha
adc
and
xchg
push
adc
adc
das
leave
cmp
divl
push
outsl
ljmp
inc
aad
and
mov
in
arpl
xchg
cmp
out
inc
cmpb
mov
sbb
push
dec
pop
xchg
pop
rcl
int3
mov
in
pop
leave
sbb
rclb
xchg
mov
add
lea
outsl
add
push
push
push
and
inc
dec
nop
sahf
es
mov
cs
leave
sbb
or
pop
adc
mov
pminsw
sbb
xor
pushf
ficoml
inc
int
adc
sbb
in
jb
inc
push
mov
mov
xchg
ljmp
push
and
and
xchg
pop
in
daa
ficoml
sbb
or
pushf
adc
test
aad
sbb
fstpl
outsl
add
das
adc
jae
cmp
outsl
sahf
push
ljmp
inc
xchg
icebp
out
out
sub
and
rcll
sbb
inc
push
stos
adc
cltd
push
inc
imul
inc
ljmp
adc
adc
cmp
shll
cld
xchg
or
pop
lods
arpl
in
in
imul
sbb
add
add
pop
loopne
adcl
xchg
aam
push
adc
dec
sub
pop
mov
es
aam
jb
gs
out
sub
xlat
adc
add
xchg
test
xchg
ss
icebp
mov
rcll
shrb
push
fucomp
and
xor
std
mov
mov
or
ds
cld
adc
xor
out
fstp
mov
iret
and
lock
sbb
scas
adc
sub
cmp
je
mov
and
xchg
mov
fists
lods
push
fdivl
rorb
sbb
adc
push
sub
xlat
sub
cli
fmul
inc
pop
push
movsb
sbb
mov
adc
rcll
push
pop
dec
popf
std
das
sub
les
add
xchg
sbb
xor
popf
dec
sbb
sbb
xchg
fildll
sub
jbe
mov
sub
in
jmp
pushf
push
dec
popf
out
mov
rorb
call
or
mov
in
ret
xlat
inc
fbld
stos
xchg
leave
rcrl
iret
cmp
adc
sbb
sub
adc
and
cltd
push
add
adc
pop
int3
pop
push
sahf
add
and
or
push
sbb
dec
int3
and
subb
int3
jnp
pusha
lcall
xchg
cmp
or
popf
xlat
sbb
sarb
pusha
add
bound
les
push
cmp
and
in
mov
xchg
push
shl
dec
popa
push
das
jle
or
mov
adc
roll
jb
sbb
std
or
pop
scas
xor
les
test
push
add
and
leave
fmull
sub
sub
mov
sahf
xchg
rcrb
mov
roll
adc
adc
pop
das
aad
lods
mov
push
dec
mov
imul
sbb
xchg
icebp
hlt
jg
aam
mov
mov
push
jbe
enter
pop
arpl
push
mov
loop
push
shll
aam
sub
cmp
pushf
dec
dec
xor
push
inc
pop
or
les
xchg
xlat
cmp
push
dec
pushf
sub
xor
jge
push
les
add
je
sbb
les
sub
fisttps
nop
cmpsl
sbb
pop
xchg
sti
push
cld
sub
mov
inc
lret
and
stos
push
adc
or
push
xchg
inc
repnz
in
sahf
jecxz
jb
ret
hlt
inc
sbb
jne
sbb
aam
fisubrs
xchg
jnp
xor
pushf
add
mov
subl
xchg
adc
loopne
mov
add
xchg
push
idivl
sbb
clc
ds
xlat
pop
add
popf
ret
out
xchg
push
mov
addl
ss
xlat
pushf
push
xor
add
subb
scas
fwait
sub
add
adc
push
popf
sub
cltd
out
or
fimuls
xchg
das
push
rorl
mov
xchg
adc
pop
sbb
and
and
pop
jb
push
xchg
flds
push
fsubl
imul
sbb
pop
mov
add
ljmp
inc
das
jbe
fiaddl
stc
andl
push
fisttpll
sub
push
jbe
jbe
cmpsl
fidivs
cwtl
inc
aam
loop
xchg
es
cmp
add
xchg
out
push
pop
cltd
dec
mov
sub
sbb
pop
rcll
pop
lret
sbb
nop
mov
pop
mov
inc
mov
movsl
insl
rorb
jmp
or
sub
lods
mov
add
mov
flds
push
inc
sub
or
incb
pop
sub
std
push
push
cmp
cmp
int3
sti
adc
cmpsl
pop
inc
aad
adc
int3
rcll
adc
xchg
sub
xchg
sbb
mov
aas
push
outsl
jns
push
mov
aad
mov
mov
lods
cli
xchg
push
aad
push
mov
mov
and
dec
push
cmp
xchg
notb
hlt
xchg
cmp
or
adc
sub
test
push
mov
jmp
jge
push
inc
or
call
int
imul
pop
xchg
test
xchg
pop
std
and
jo
mov
es
sub
push
push
xchg
and
push
or
adc
aaa
xlat
shrb
shrb
cltd
sbb
sbb
stos
xorb
xlat
outsb
jle
push
sbbb
xchg
push
rcl
test
add
leave
pop
mov
lahf
push
xor
xor
xchg
pop
cmp
bswap
sbb
push
inc
pop
sub
fldl
outsb
cltd
push
adc
xchg
outsb
adc
lods
rorl
add
imul
stos
and
push
iret
xchg
adc
pop
mov
pop
adc
dec
aad
xor
cmp
push
ja
sub
fcoml
adc
dec
xchg
setbe
mov
inc
aad
sbb
addl
push
cltd
sbb
pop
xor
add
pop
and
daa
push
dec
xchg
bound
ret
sub
stc
shll
cmp
enter
addr16
mov
lret
xchg
mov
dec
xchg
pop
popf
xchg
cltd
faddl
f2xm1
cli
jl
shlb
hlt
mov
jg
pop
and
push
pop
sbb
addr16
and
mov
xor
xchg
int3
pushf
pop
push
fsts
shrb
mov
add
push
aas
jbe
leave
aam
inc
leave
push
andb
sub
rcll
dec
mov
pop
lods
xlat
aad
jg
outsl
and
sbb
mov
inc
outsb
sub
or
xor
shrb
push
fxch
add
into
cltd
push
lea
outsl
xlat
cmpsl
popa
ret
les
cwtl
pop
outsb
dec
leave
int
loopne
xlat
xchg
push
rolb
xchg
mov
push
cmpsl
loope
inc
dec
outsl
rol
push
fcoml
xlat
lcall
fisubrl
xchg
cs
ss
fcompl
sahf
adc
leave
flds
adcl
fsubl
sti
test
adc
lods
enter
lods
cltd
roll
xchg
stos
popf
adc
push
mov
xor
outsb
stos
mov
sub
inc
stos
xchg
inc
jbe
push
rcl
dec
push
inc
mov
addr16
loop
sahf
push
push
dec
mov
xchg
orl
add
xchg
outsl
int3
cld
xchg
std
pop
sahf
pop
jge
adc
out
push
jecxz
bound
and
jl
push
cltd
push
cli
mov
lcall
jmp
push
and
mov
and
pop
lock
sub
cs
ret
adc
mov
and
aam
xlat
sub
xchg
xchg
das
xchg
xchg
adcb
inc
negb
outsl
and
in
frstor
xchg
insl
cld
push
pop
jns
adc
movb
mov
andl
loop
xchg
push
in
scas
gs
es
popf
int
daa
dec
cmp
sub
addr16
dec
push
add
outsl
pop
fldt
mov
push
pop
jl
ja
addr16
xchg
outsb
add
push
bnd
cli
push
fmull
ljmp
shlb
adc
jecxz
lods
adc
mov
or
sub
out
fs
stos
lea
push
ficoms
inc
inc
mov
push
push
aad
dec
cmc
xchg
mov
fidivrs
mov
int3
adc
jo
push
xchg
adc
shrl
or
aaa
xlat
pushf
jno
lahf
loop
push
aad
sbb
call
push
sub
dec
pop
push
hlt
lcall
push
pop
outsl
sub
jp
sbb
inc
into
pop
or
pushf
xchg
addb
jbe
add
xchg
fcmovne
xchg
adc
push
cltd
sahf
jle
cmc
aad
scas
pop
adc
test
pop
jnp
cld
jno
sarb
push
xchg
hlt
xchg
hlt
outsl
icebp
or
shrl
cmp
cmp
jno
and
xor
cmp
imul
loop
inc
xchg
fwait
jne
inc
push
pop
movsb
push
jne
fucomip
adc
jp
fisttpl
shlb
fidivs
out
fisubrs
mov
and
adc
and
sub
push
xlat
add
shl
dec
adc
inc
adc
pop
scas
adc
xchg
dec
push
popf
subb
loop
jb
cmp
push
xchg
adc
push
ret
pushf
push
loopne
add
clc
fstl
stos
icebp
fisubs
pop
outsl
lock
jne
hlt
xor
lods
xchg
inc
popf
push
sub
push
pop
adc
adc
xor
push
shrl
mov
pushf
shrl
cmp
jo
orb
adc
rcr
jmp
les
jno
mov
cmp
pop
stos
cltd
xchg
inc
jge
sub
push
outsb
jle
stos
pop
aam
ljmp
pop
add
push
add
xchg
sub
imul
sbb
or
adcb
xchg
and
push
adc
inc
xchg
aam
inc
insl
je
push
rcl
inc
or
fs
adc
in
mov
push
sub
and
adc
shlb
cmp
shr
inc
and
ficoml
aad
arpl
pop
fnstenv
test
xchg
mov
xchg
rcll
pop
push
fmulp
sbb
sub
fldcw
adc
xor
js
push
xor
dec
inc
sub
icebp
pop
push
cmp
adc
inc
ljmp
or
xchg
sub
pop
inc
push
popf
xchg
or
pop
cmc
scas
insl
sbbl
mov
int
push
or
sub
push
push
and
lods
cs
sahf
xchg
inc
xchg
adc
insl
or
jne
push
mov
add
adc
xchg
adc
mov
push
inc
push
push
cmp
aam
and
mov
ss
mov
push
push
add
push
fcoml
pop
outsb
jge
push
shlb
xor
pop
mov
xchg
sbb
xchg
inc
lods
call
adc
cmp
sbb
nop
lock
mov
fsub
mov
pop
push
pop
adc
add
dec
rcll
mov
inc
ss
xor
insl
push
push
pop
fisttps
jne
adc
lock
std
add
pop
cmc
std
sub
inc
sub
xchg
adc
ret
inc
jle
ds
aad
popf
cmp
lea
add
push
adc
adc
rclb
mov
add
daa
stos
xchg
xchg
adc
adc
mov
adc
pop
push
push
fisubs
inc
jo
sbb
pop
mov
sbb
push
test
popf
inc
std
sub
sbb
cltd
inc
xchg
sarb
sub
push
sub
addr16
dec
mov
aam
sbb
pop
xchg
adc
cmp
push
sahf
and
sbb
mov
cmp
add
dec
push
cltd
lret
stos
mov
push
cmp
inc
push
mov
adc
out
out
or
stos
sbb
mov
das
and
iret
sbb
mov
scas
sbb
and
and
pop
pop
scas
jbe
lret
pop
pop
jnp
pop
lods
pop
push
push
movsl
mov
xchg
sbb
fiadds
cmp
aam
mov
es
cltd
mov
and
mov
mov
aaa
and
cltd
adc
imul
dec
scas
cmp
mov
addr16
lret
es
add
loop
hlt
mov
xchg
push
jo
mov
fildll
pop
sbb
xor
fstps
push
aaa
cmp
pop
popf
jno
pop
mov
xchg
inc
and
scas
popa
add
mov
or
mov
movsb
inc
push
push
add
inc
mov
aaa
xor
sbb
add
sahf
xchg
pushf
push
aas
leave
rcl
lret
push
cmp
and
add
sub
icebp
insl
push
push
fs
loopne
mov
sbb
inc
repnz
cmpb
rcrl
in
pop
roll
or
jno
stc
test
sbb
jl
mov
fistl
rcl
sub
rorb
cmp
int3
pushf
dec
mov
adc
rcr
and
arpl
xlat
mov
rcll
mov
xchg
push
xchg
xchg
add
popf
insl
push
outsl
push
mov
test
add
mov
pushf
sbb
shr
push
subl
sbb
sbb
imul
sub
popf
sahf
xchg
inc
push
xchg
pop
scas
es
idiv
popa
faddl
add
xchg
sub
push
sbb
push
inc
add
add
push
cltd
push
cwtl
cmpsb
mov
xchg
ja
jg
movsl
addr16
or
ficomps
adc
push
inc
adc
pop
or
es
xchg
fbstp
and
in
sbbl
out
dec
sbb
adc
inc
sarb
xor
sbb
adc
adc
ret
push
mov
cmp
imul
xchg
dec
ficomps
int
les
bound
add
push
test
push
clc
into
push
subl
loope
rclb
inc
out
push
fdivl
scas
aad
and
pop
jge
stos
push
adc
sbb
fwait
xchg
mov
push
add
sbb
push
pop
cmp
sub
dec
xchg
popf
adc
jmp
ret
jge
outsl
jb
cmp
fcompl
fxch
xchg
xchg
bound
sub
lret
sbb
jl
les
rclb
lcall
mov
loop
popf
inc
outsl
pop
pop
lahf
inc
push
push
xchg
bound
dec
xchg
and
fcoml
sub
lret
inc
xchg
stos
and
mov
cmp
mov
in
inc
repnz
test
xchg
push
ret
sbb
lea
inc
sub
xlat
int3
push
xchg
imul
enter
mov
les
sbb
addb
sub
adc
xor
pop
repz
popa
sbb
pop
cli
movsl
pop
lods
push
sahf
adc
imul
test
mov
pop
hlt
xlat
inc
jmp
popf
scas
outsl
inc
aaa
xchg
loop
push
sti
addr16
gs
sbb
int3
sbb
scas
push
mov
adc
sbb
pop
jne
movb
push
adc
mov
imul
adc
inc
xchg
adc
sub
mov
ljmp
mov
fcoml
pop
ljmp
xchg
rcll
lea
fnstenv
xchg
mov
add
fsubrl
scas
and
movsl
leave
aad
iret
push
cmp
pop
shl
das
stos
push
and
ss
mov
sbb
mov
push
pushf
int3
pop
pop
pop
fdivl
push
rcll
repz
xchg
cld
bound
std
sahf
adc
sub
pop
xlat
and
sub
fstpl
je
outsb
stos
or
adc
cmp
inc
pop
imul
lods
sub
fimuls
pop
and
movsl
mov
sbbl
adc
xorb
and
xchg
andl
int
inc
shrl
frstor
lds
hlt
and
pop
cmc
stos
mov
icebp
inc
inc
dec
clc
mov
push
adc
rcll
jp
xchg
jge
xchg
iret
sahf
inc
xchg
adc
addr16
iret
fstl
and
push
xchg
sub
sub
fistps
repnz
push
and
pop
xchg
and
stos
push
gs
popf
loope
xor
xchg
test
in
cmp
outsl
cmp
repz
addr16
enter
out
movb
les
mov
mov
xchg
and
stc
rorl
push
addl
lcall
test
lcall
pop
ret
sub
inc
add
mov
sub
mov
adcb
pop
adc
push
mov
cld
pushf
dec
dec
mov
pop
mov
movb
adc
push
adc
pop
imul
cltd
pop
pushf
in
jp
push
and
pop
and
call
sbb
dec
sbb
xchg
sbb
insl
rcll
sub
pop
scas
gs
mov
fwait
lcall
ficoms
xor
sub
rcll
sub
repz
fcoml
push
push
sub
call
sbb
mov
nop
sbb
xchg
ds
out
jl
sub
adc
loop
inc
xchg
xchg
cltd
mov
sbb
rclb
lods
test
leave
push
xchg
out
adc
sub
push
mov
int3
pop
scas
inc
sbb
fnstsw
add
scas
pop
xchg
loope
push
leave
flds
push
clc
lods
xchg
inc
sbb
pop
aaa
xchg
push
adc
mov
pop
sahf
pop
sbb
mov
pushf
sub
addr16
xor
add
jmp
pop
cwtl
fisubrl
cltd
adc
mov
and
xor
xlat
ljmp
add
pop
fsubrl
sub
push
add
cmp
stos
idivb
les
mov
dec
adc
std
lods
push
imul
pop
sbb
dec
xchg
in
lret
fnstsw
das
push
int3
mov
mov
outsl
adc
push
fiadds
shrb
aad
lods
push
imul
xchg
dec
outsl
xchg
xor
sahf
xchg
push
push
jmp
loope
lahf
les
adc
mov
stos
cs
das
rcl
inc
nop
fiadds
bound
push
in
sub
orl
fs
pop
xchg
xchg
pop
jge
push
or
divb
fsts
pop
dec
xchg
and
xor
pushf
fstpl
rorl
pop
cwtl
adc
inc
xchg
adc
mov
jae
pop
sbb
pop
sbb
sbb
pop
pushf
inc
or
push
mov
xchg
stos
add
mov
ret
xchg
loop
sti
fcoms
add
mov
fcoml
fisubrs
lret
jb
cmp
fildll
ljmp
add
xchg
mov
leave
dec
jne
add
jecxz
mov
lods
or
leave
jg
std
lret
adc
xor
inc
xchg
out
xchg
aam
or
stc
push
pop
fsubrl
and
push
shll
mov
pop
push
popf
call
das
aaa
dec
lcall
mov
xchg
shrl
xchg
rolb
sub
mov
movsb
push
xor
nop
pushf
les
sbb
xchg
sahf
sub
inc
test
push
and
sbb
fcmovne
push
pop
dec
imul
fsub
int
sub
jmp
adc
outsl
nop
push
or
and
sub
and
sbb
adc
pop
push
mov
loop
mov
fstpl
movups
pop
sub
sbb
and
test
or
adc
xchg
filds
push
mov
push
stos
out
and
movsb
ret
sbb
xchg
cwtl
and
mov
ret
hlt
fsubrp
push
shl
and
icebp
mov
lods
mov
xchg
fbld
insb
lea
mov
das
sbb
stc
xchg
mov
sbb
xchg
outsl
outsb
popf
or
jmp
sbb
add
push
insl
test
xchg
push
cmpsl
mov
int3
xchg
jmp
rorl
and
inc
dec
add
mov
cli
adc
push
push
stos
inc
xchg
out
xchg
cltd
movsl
test
rcrb
pop
test
lods
iret
jo
std
sbb
inc
fcoml
lods
inc
mov
sbb
inc
pop
popf
sahf
in
jo
adc
rcr
fbld
lcall
fisttpl
sbbl
xor
idivb
imulb
push
gs
push
xor
xchg
stos
ljmp
fsts
jg
mov
das
jno
cmovle
aad
and
imul
stos
into
inc
out
xchg
push
iret
adc
push
and
and
sbb
pushf
loop
imul
mov
mov
push
mov
sub
inc
inc
xchg
xchg
sub
fstpl
out
push
addr16
int3
push
icebp
aas
cltd
adc
dec
stos
pop
and
or
mov
adc
fnstcw
push
xchg
sbb
xchg
xchg
adc
arpl
push
mov
sub
mov
jg
fiadds
xchg
ds
sub
test
stos
leave
mov
and
sbb
push
nop
loop
repnz
push
popf
jecxz
push
aad
mov
push
xor
push
sarl
sub
pop
test
xchg
mov
jns
mov
pop
rcrb
pop
sahf
mov
mov
int3
mov
fstps
rorl
popf
lret
push
dec
mov
fisubs
add
in
sbb
push
pop
imul
push
pop
roll
in
lcall
cld
mov
and
pop
adc
movsl
les
aad
hlt
push
adc
ret
xchg
fidivrl
roll
xor
add
xchg
lcall
popf
sahf
mov
lret
adc
popf
xchg
pop
repnz
rcrb
movsb
xor
sub
inc
insl
mov
pop
xor
cltd
stos
xchg
scas
pop
fs
inc
sub
mov
xchg
add
inc
sti
das
out
inc
repz
fstpt
mov
push
aam
stos
aad
push
testl
push
aam
xor
fwait
cltd
pop
stos
push
inc
les
mov
sar
pop
mov
rorb
data16
and
xor
mov
push
and
lret
or
fidivrs
aaa
xor
jge
stos
push
divb
cmp
push
ss
adc
jae
mov
mov
std
rclb
push
mov
and
cltd
ja
sbb
xchg
aam
jb
or
push
push
xor
rcrl
and
roll
out
xchg
cmc
cmp
lds
push
sub
in
cli
pop
inc
test
in
mov
dec
push
and
dec
ffreep
and
lock
lcall
xchg
shlb
pop
xlat
aas
or
pop
push
inc
push
cltd
lods
mov
mov
and
adc
inc
xchg
and
sbb
fcoml
imul
out
pop
sub
adc
jns
adc
gs
ret
push
sub
cmp
outsb
int
imul
pop
push
push
xor
cltd
out
std
jns
adc
dec
lock
xchg
aam
cld
aad
and
sti
insl
rclb
fsts
inc
fstpl
fbld
dec
or
roll
sbb
pop
pop
and
sub
dec
popf
adc
fistps
pop
decl
push
stos
push
ds
enter
adc
inc
sbb
push
xchg
and
ds
leave
xchg
xor
sbb
shll
faddl
sbb
xchg
mov
stos
dec
adc
das
inc
sub
xlat
push
xchg
add
roll
adc
aas
push
imul
fwait
ret
scas
add
xchg
pop
stos
imul
push
aaa
icebp
pop
mov
or
adc
adc
ficomps
sbb
test
inc
push
out
or
mov
fsubrl
data16
addl
xor
lret
sbbl
enter
into
lods
mov
addr16
mov
insb
shrb
xorb
xor
xlat
xchg
xor
rcrb
ljmp
fwait
pop
sub
aad
aaa
push
mov
imul
inc
or
sub
outsl
sub
push
adc
fbstp
sbb
int3
pop
aam
and
pop
aas
inc
repnz
cli
pop
dec
lea
stos
xor
push
sbb
dec
sbb
cmp
inc
xchg
xchg
std
aad
scas
mov
jge
fwait
mov
inc
xchg
lods
lds
push
rcrb
xchg
cmp
xor
xlat
mov
and
int
xchg
ljmp
test
int3
jmp
test
outsl
add
sahf
and
adc
push
pop
scas
pop
subl
aas
mov
sbb
stos
es
mov
adc
pop
xchg
jbe
xor
push
xchg
mov
loop
push
mov
jecxz
cs
cli
cltd
inc
xchg
push
sar
adc
adc
fdivl
or
in
inc
mov
pop
inc
gs
lods
test
enter
fbstp
sub
mov
mov
ljmp
mov
push
sub
xchg
adc
push
adc
xor
movsl
scas
std
and
stos
das
call
out
or
fbstp
sub
jmp
mov
adc
unpckhps
insl
push
push
or
shrl
or
and
or
fisubs
test
and
aad
jp
movb
insl
pop
loopne
loopne
mov
nop
mov
notl
inc
addr16
add
xlat
stos
repz
test
fyl2xp1
push
cltd
dec
int
xchg
pop
scas
out
cs
loopne
fiadds
inc
out
ss
rcll
add
inc
add
sbbb
xchg
pop
push
shlb
inc
stos
jge
sub
jge
push
sarl
xor
xor
xchg
out
std
lcall
pop
mov
mov
inc
cmp
pop
lcall
xchg
lret
adc
das
sbb
pop
xor
xlat
imul
rcr
scas
cltd
enter
fldl2e
in
jge
push
pop
stos
push
mov
scas
and
roll
clc
xor
inc
sub
sub
rcrl
lock
sbb
ja,pt
adcl
cltd
cmp
inc
notb
incb
stos
stos
ffreep
mov
push
push
addl
push
xchg
call
pushf
sbb
pop
sub
push
push
jg
pop
sbb
lea
push
mov
dec
mov
adc
pop
push
xor
sbb
incb
push
rol
push
push
xlat
inc
sbb
imul
push
insl
notl
push
jb
push
ds
sbb
xlat
sarb
sbb
stos
lock
pop
push
push
scas
push
push
add
insl
mov
mov
cld
lret
lahf
push
test
fstps
rcrb
adc
out
push
and
sbb
loope
imul
subl
stos
ljmp
shrb
popf
lret
xchg
fcoml
adc
xchg
or
push
push
enter
push
pop
adc
stc
test
mov
sub
mov
xchg
inc
add
loop
xchg
addr16
insl
mov
push
xchg
dec
push
lret
and
inc
sahf
fistpll
cmp
dec
sbb
xchg
push
xor
inc
sbb
pop
inc
cmp
test
ret
fiadds
inc
addb
cmpb
aam
aad
and
adc
test
inc
rolb
fnsave
xchg
imul
sub
xchg
inc
push
shlb
push
sbb
in
sbb
add
out
pop
push
inc
mov
xor
mov
dec
or
cmpsb
scas
scas
cmpsl
bound
pop
loopne
or
sahf
outsl
popf
cmp
testl
or
push
rcrl
notb
fildll
pop
or
pop
shlb
fidivs
adc
xchg
out
or
pop
popf
mov
lret
mov
xchg
icebp
xchg
sub
sub
or
xchg
fadds
outsl
outsl
imul
sub
mov
pushf
das
dec
dec
sub
push
sub
jno
sarl
xor
dec
outsl
push
xchg
fists
scas
ljmp
cmc
push
mull
aad
sub
fists
adc
aas
ror
stos
sbb
pushf
jge
shll
pop
in
pusha
xchg
inc
push
sub
std
push
cltd
xchg
aad
sub
ljmp
push
mov
int
aam
xchg
push
outsl
arpl
scas
jbe
stos
xor
pop
mov
cmp
add
sbb
push
xchg
mov
sub
sub
adc
cmp
sub
lret
rol
mov
out
xchg
js
loop
fnstenv
push
test
xchg
test
push
out
dec
fistps
inc
scas
adcl
data16
rcr
sub
mov
jg
or
sub
sahf
adc
sub
push
xchg
enter
cmpsl
inc
imul
push
add
push
xchg
push
push
int
pop
inc
pop
filds
stos
sbb
pop
dec
leave
sti
or
mov
add
mov
mov
xlat
pop
outsl
add
cmp
pop
imul
loop
push
or
stos
push
dec
popf
aam
dec
add
cwtd
xor
xchg
imul
and
stos
xor
push
pop
jle
dec
mov
aad
adc
shrl
sub
cwtl
aam
xchg
xor
cmpb
out
jge
add
push
out
pop
stos
repnz
popa
aad
xchg
hlt
iret
adc
mov
sbb
jbe
icebp
jecxz
adc
pop
ljmp
lock
pop
push
insb
push
jle
dec
cli
xlat
in
adc
push
xchg
scas
adc
xor
sbb
dec
test
cmpsl
jb
out
push
push
sub
adc
adc
dec
mov
adc
cli
fcompl
dec
popf
sub
dec
imul
aad
sbb
xlat
sbb
adc
in
mov
ret
stos
xchg
push
xchg
push
and
out
pop
stos
cltd
xchg
sbb
sbb
pop
inc
je
or
sahf
mov
gs
stos
imul
cmp
mov
leave
gs
sbb
bound
movhps
adc
inc
jne
ds
xchg
ret
push
pushf
push
pop
rolb
inc
and
adc
ficoms
lods
stc
aam
fnsave
outsb
push
push
push
inc
in
insl
ja
fsubrl
jmp
outsb
xlat
sbb
imul
adc
xlat
lret
lcall
scas
sub
jnp
popf
in
push
jp
inc
and
add
xor
or
adc
imul
add
push
pop
sbbb
iret
int3
rcl
scas
xor
add
fwait
push
test
push
jae
push
adc
filds
mov
sbb
enter
sbb
xchg
adc
xchg
ljmp
adc
inc
jge
push
imul
inc
xchg
test
rclb
ljmp
xchg
fistps
adc
push
push
into
aad
cltd
int
shr
pop
int3
xor
stos
stos
xor
aad
test
mov
inc
pop
sub
hlt
mov
sub
cmp
cmp
adc
rcrl
push
adc
adc
jne
sahf
xor
xchg
and
jge
inc
push
adc
mov
cwtl
xor
movsb
mov
and
add
adc
scas
inc
adc
in
xor
int3
imul
mov
or
pop
push
or
xchg
fisubrs
pop
xchg
xor
out
jmp
fistl
push
adc
and
ret
pushf
les
hlt
lods
lcall
xchg
add
mov
and
push
xchg
int3
add
push
std
sahf
das
fnstenv
xchg
popf
mov
sbb
enter
mov
rcrl
mov
fst
jo
adc
rol
out
sub
in
mov
mov
out
mov
push
int
push
aad
popf
ds
call
push
stos
mov
sbb
call
sub
fisttpll
sbb
sub
xchg
pop
sbb
jbe
out
push
cmp
lahf
xor
loopne
add
add
stos
icebp
leave
dec
mov
cmp
adc
add
xchg
sahf
push
adc
mov
repz
add
sub
sahf
mov
fstps
pop
pop
movsb
icebp
or
pop
stos
xchg
xlat
fnstcw
scas
cmp
xchg
push
push
movsl
mov
mov
mov
aad
std
inc
arpl
fwait
les
jl
aam
loopne
or
add
aad
mov
fcoml
cld
adc
inc
pop
push
inc
aas
leave
dec
cltd
xchg
das
adc
fcoml
push
stos
push
fadd
xor
pushf
nop
pop
js
jmp
sub
and
mov
scas
and
adc
sarl
or
enter
push
addr16
das
inc
pusha
lods
int
bound
xchg
push
push
mov
jb
scas
xchg
push
fldenv
stos
stos
inc
fs
loop
fiaddl
js
frstor
lret
mov
xchg
shll
add
pop
scas
fisttpl
xchg
add
fwait
jbe
scas
push
and
sub
ss
out
lods
pop
push
sbb
xchg
test
add
push
sbb
push
adc
push
adc
int3
rcll
cmp
stos
mov
aaa
in
loope
ljmp
adc
mov
push
loopne
rclb
xchg
arpl
adc
mov
add
aad
popf
and
sub
cmp
sub
nop
shrl
out
sub
sub
pushf
je
push
sbb
lcall
mov
ja
push
inc
jecxz
inc
push
aas
push
pop
adc
xchg
sbb
aad
sahf
das
fdiv
or
add
and
mov
xchg
cwtl
adc
mov
pusha
mov
mov
pop
inc
push
pop
dec
xchg
add
sbb
adc
jg
xor
imul
sbb
inc
push
push
sub
push
aad
sbb
adc
xor
int
push
adc
xlat
shlb
push
fisttpll
or
sub
push
cmc
sub
fcmovbe
xchg
cmp
fbld
push
outsb
lods
push
stos
push
sbb
outsl
mov
fldcw
aas
xchg
aad
cmp
or
popa
lods
push
xorl
sub
out
stos
pop
aam
sbb
inc
shlb
cmp
dec
or
mov
aad
adc
ret
ljmp
sub
test
sahf
pop
imul
ss
pop
negl
dec
push
lds
xchg
xor
adc
and
adc
pop
pop
xchg
inc
sub
lea
les
push
and
sub
dec
fldl
clc
mov
and
subb
pop
jo
test
iret
sbb
fdivrs
rcrb
jmp
cltd
dec
sub
pop
or
add
xchg
and
inc
sahf
ds
sbb
pop
xor
sbb
inc
xor
fisubrs
sbb
adc
xchg
pop
mov
sbb
sub
push
cmp
jmp
xor
adc
push
ljmp
jecxz
adc
sahf
mov
in
std
or
rolb
push
push
mov
pop
outsl
movsl
pushf
push
push
xlat
mov
and
xchg
pop
push
enter
push
lods
sbb
and
movsl
jp
filds
loop
lock
lcall
and
adcb
or
sbb
mov
and
or
sub
xchg
pop
cmp
mov
sbb
aam
push
sbb
fistpll
sub
mov
inc
cmp
inc
fcompl
out
sub
movsb
test
xchg
repz
push
inc
gs
icebp
out
adc
in
leave
push
sub
aam
sub
inc
push
push
test
sahf
lcall
push
pop
cltd
jnp
xchg
or
sbb
sub
rcll
pop
iret
clc
mov
cmc
aam
sub
inc
sbb
and
jl
xchg
adc
mov
and
imul
aad
adc
add
xlat
pop
push
mov
cmp
push
sbbl
xchg
or
pop
addl
aad
rcr
cmp
loopne
notl
add
in
or
in
fstps
pushf
xchg
sbb
push
adc
aam
insb
adc
xchg
pop
push
xor
daa
popf
lock
mov
fists
sbb
sbb
pop
stos
or
stos
xchg
and
xchg
push
fsts
pop
xlat
sub
mov
jg
aaa
stc
pop
mov
xchg
fstps
les
push
pushf
xor
xchg
fcomps
add
fstpl
rclb
adc
sbb
pop
xlat
mov
mov
stc
orl
inc
shlb
les
push
pushf
shrl
pop
fisttpll
dec
popf
push
push
pop
js
push
xchg
sbb
mov
xchg
sub
mov
imul
mov
cmpsb
dec
push
xchg
xlat
xchg
aam
xor
pop
sahf
rdmsr
adc
in
ret
add
or
inc
jl
add
lret
and
test
xchg
loopne
or
cmp
clc
mov
leave
jge
call
out
fcompl
and
in
adc
call
jo
xchg
in
mov
jl
pop
add
inc
push
roll
push
lods
sub
cmp
pop
xchg
inc
stc
sbb
mov
rcr
ljmp
leave
add
lret
push
sub
imul
push
out
pop
fstpl
pop
sub
pop
dec
cltd
add
pushf
and
fmul
adc
pushf
adc
stos
push
out
jp
scas
pop
call
sbbl
push
in
xor
mov
dec
adc
testl
ficomps
push
sbb
jmp
les
imul
imul
add
fiadds
scas
xchg
xchg
fwait
xor
adc
shrl
popf
popw
in
fidivl
sub
and
inc
movlps
inc
xor
das
xchg
mov
adc
ds
pop
mov
pop
cmp
sub
in
dec
xor
addl
out
jl
cmpb
into
insb
or
pop
xchg
xchg
pop
rcll
xchg
and
nop
fists
stos
xchg
cmp
push
xchg
and
push
push
aam
sub
push
in
xor
enter
sar
lods
xchg
aad
fdivs
mov
inc
outsb
mov
cmp
pusha
mov
aaa
lahf
stos
jno
sti
inc
cmp
pop
push
sbb
pop
jp
add
fistl
stos
ljmp
aas
jp
fstl
push
rorl
sub
cmpsl
pop
ljmp
aam
push
cs
shrl
in
xchg
fnstcw
insl
fidivrs
lcall
pushf
pop
es
push
sbb
aas
mov
cltd
int3
pushf
push
push
dec
and
out
das
sub
loop
pushf
leave
pop
popf
jp
cmp
or
xchg
pop
aam
adc
lret
jecxz
sub
mov
adc
arpl
cmp
or
adc
xlat
gs
inc
pop
stc
pop
adc
push
push
and
xchg
int
sub
call
push
mov
adc
rclb
int
add
ljmp
imul
pop
mov
scas
stos
adc
push
add
les
add
push
pop
inc
fnstenv
cltd
insl
int3
xchg
xchg
stos
loope
outsl
hlt
fwait
lock
and
aad
adcl
inc
sub
push
fnstsw
cwtl
les
out
inc
in
xchg
inc
fwait
pop
and
push
xor
cltd
adc
shlb
sahf
push
addr16
push
stos
adc
push
sub
outsl
movsb
push
and
bound
scas
adc
rcrb
lahf
sbb
push
sub
inc
xchg
out
in
js
and
ja
les
cmp
pop
lods
mov
jmp
xchg
nop
mov
stos
pop
push
sub
push
push
mov
mov
rclb
jno
jmp
xchg
sbb
cwtl
pop
aaa
xor
sub
sub
xchg
sub
mov
mov
adc
loop
gs
sbb
inc
addl
xchg
sbb
xchg
push
mov
mov
push
aad
mov
mov
inc
adc
push
push
shl
sub
push
fdivrp
enter
inc
jl
pop
and
testl
xchg
std
add
pop
imul
pop
js
mov
jne
adc
mov
mov
sub
xlat
out
stos
xchg
outsl
xor
aam
xor
or
push
ljmp
mov
mov
aam
cmp
mov
xchg
cmp
mov
and
xchg
pop
sub
sbb
xchg
mov
js
dec
ret
in
or
scas
rol
aad
xchg
fstps
dec
mov
push
xchg
xchg
xchg
stos
movsb
cltd
xchg
imul
insl
mov
roll
push
leave
fwait
and
fiaddl
pop
shl
daa
push
lock
xor
das
outsl
gs
pop
inc
fdivp
sarl
jmp
inc
aad
xlat
int3
jb
adc
xchg
xchg
jno
xchg
push
pop
or
adc
sub
roll
pop
scas
push
mov
int3
cltd
fcoml
scas
into
and
pop
fnstenv
jb
inc
popl
and
ds
and
adc
sub
add
nop
rolb
aam
int
fstps
out
push
xor
push
xchg
sbb
jne
dec
cmp
sbb
inc
lock
cltd
das
add
or
pop
cmp
out
sub
or
mov
pop
jne
lock
jge
scas
sub
sbb
add
das
aad
rcl
cmp
out
addr16
pop
dec
push
hlt
fs
int3
push
push
push
not
lret
subb
dec
das
pop
iret
cltd
lret
aam
mov
sahf
xchg
popf
mov
ror
push
adc
push
jnp
sbb
stos
imul
xor
pop
cmp
sbb
ror
outsl
in
inc
imul
pop
adc
fnstenv
rcrl
rcl
inc
pop
adc
push
rcr
mov
push
sub
outsb
iret
insl
outsb
imul
mov
dec
xchg
xchg
pop
scas
jno
lahf
sub
xchg
pop
push
xor
inc
xchg
inc
ss
inc
loop
xlat
add
mov
push
cltd
jmp
sbb
jno
inc
pop
or
cltd
and
add
dec
fnstenv
or
inc
roll
push
add
pop
lret
and
xchg
movsl
negl
orl
pop
pop
pop
shlb
inc
dec
xlat
sbb
movsl
mov
ljmp
push
sahf
xchg
popf
push
inc
pop
scas
xchg
rcl
mov
xchg
xor
adc
fistpll
int
les
mov
int
pop
push
js
cltd
mov
stos
in
cmp
jbe
std
scas
push
jbe
dec
adc
sahf
shlb
call
push
and
add
fldz
pop
dec
mov
pop
xchg
fmull
imul
adc
add
push
xchg
xchg
sub
push
ficoml
jp
push
lea
sbb
mov
and
push
sub
cmc
inc
out
push
push
push
pop
xchg
and
and
xchg
pop
adc
fadd
push
jnp
rcll
xorl
das
inc
pop
xlat
mov
mov
stos
xor
xor
xchg
adc
push
popa
push
aad
jo
in
dec
sub
push
inc
push
pop
xchg
les
add
sbb
adc
ljmp
mov
orl
inc
cmc
add
mov
or
and
sbb
push
adc
aam
mov
jne
xchg
ss
add
imul
fidivrs
xchg
mov
movsl
daa
insl
add
xchg
push
inc
inc
mov
pop
xlat
test
gs
cltd
loop
sub
stos
cmp
and
cmc
mov
outsl
jns
ljmp
je
loope
jecxz
add
sarb
das
mov
inc
pop
test
cmp
add
fstpl
lock
or
push
push
sbb
add
and
addb
leave
xchg
sub
mov
sbb
add
imul
std
sbb
inc
aas
xor
xchg
inc
outsl
mov
ljmp
adc
out
sahf
je
xchg
pop
sbb
es
fsts
in
gs
scas
and
pop
sbb
lret
inc
roll
in
jo
sub
mov
int3
sbb
push
inc
pop
xchg
inc
fucom
adc
loop
add
leave
cs
jl
movsb
fnstsw
pop
push
js
pop
pushf
filds
jb
aam
insb
fcomi
iret
push
push
cmp
subb
pop
xchg
xchg
xor
lock
cmp
dec
scas
inc
push
push
xchg
rcl
adc
jbe
aam
call
dec
pop
jno
stos
adc
xchg
je
test
pushf
cltd
sbbb
adc
push
sub
test
movsl
inc
lods
dec
gs
xchg
fsub
bound
das
sub
ja
pushf
sub
xchg
add
xchg
insl
out
sub
push
aam
pop
imul
je
cmc
sbbl
or
push
dec
push
popf
imul
sub
adc
push
and
fmull
fstl
sbb
pop
xchg
repz
and
and
aad
jl
outsl
rcrl
in
push
movb
cmp
pop
adc
push
add
adc
dec
mov
push
add
push
inc
in
insl
pop
fsubrl
push
or
or
adc
outsb
jge
fidivrs
mov
xchg
pop
pop
xchg
adc
pop
sub
mov
leave
rcrl
or
clc
daa
sti
cmpsl
into
adc
imul
test
mov
inc
out
and
push
mov
pop
xchg
ja,pt
adc
inc
mov
cltd
sbb
icebp
cltd
xchg
lea
fcoml
rorl
cli
and
xchg
or
jmp
sbb
adc
sub
push
mov
ret
or
jns
sbb
sbb
subb
les
xor
popa
outsb
add
jle
ja
xlat
js
mov
leave
push
enter
fucomi
sub
fadd
xchg
inc
stos
pushf
xor
inc
out
ret
push
and
sahf
xor
fsubl
pop
pop
add
add
nop
xchg
inc
scas
push
rcrb
and
push
adc
xchg
pushf
sbb
sbb
lods
push
and
push
add
and
push
adc
decb
xor
xchg
pushf
shlb
fbld
pushl
test
xchg
xor
push
sbb
push
sahf
push
lcall
xchg
xchg
mulb
adc
and
mov
in
cld
popf
stos
fcoml
in
and
add
add
scas
leave
repnz
push
push
xor
adc
scas
push
inc
into
add
setae
jbe
pusha
adc
adc
loopne
xchg
jno
push
aam
inc
out
fists
pop
rcrl
xchg
sbb
push
pop
aam
sti
xchg
fisttpl
adc
nop
adc
sub
and
aad
cmpl
out
stos
add
sub
shrb
pushf
lods
xchg
add
pop
ja
add
imul
ds
stos
pushf
insl
fldt
add
fs
pop
pop
mov
xchg
inc
in
inc
adc
or
push
rcl
ja
out
int3
test
adc
sub
mov
aaa
or
push
rcll
cmp
mov
ljmp
pop
popf
inc
xchg
xchg
ds
enter
sbb
pop
push
xor
sub
sub
inc
call
sahf
gs
sub
cwtl
ret
into
pop
aas
adc
ljmp
sbb
xchg
fistl
leave
fstl
mov
and
adc
sbb
and
push
push
cmp
fadds
aad
cmp
int3
out
adc
stc
add
push
xorl
add
leave
es
ret
fcompl
cmp
sbb
rorb
push
aam
das
out
xchg
add
test
mov
mov
inc
push
out
das
xchg
sahf
adc
and
les
gs
push
insb
push
lock
sub
cmp
adc
icebp
test
rcrb
repnz
int3
mov
inc
inc
sub
lods
int3
pop
xchg
lds
adc
xchg
addl
xchg
ds
mov
scas
popf
jno
rcrl
xchg
std
mov
and
mov
mov
or
sub
pop
sbb
fdivrl
test
sbb
push
pop
bound
shrl
push
and
sub
stos
rcrb
mov
push
es
jmp
push
ficoml
cmp
rcrb
push
add
adc
sbb
pop
fistpll
sarb
sahf
xchg
iret
jecxz
cmpsl
push
mov
pusha
add
fst
les
sbb
rcrl
jno
stos
pop
mov
fsubrs
sbb
filds
pop
xchg
stos
loopne
mov
mov
rcrl
mov
pop
and
xor
add
inc
and
xchg
ss
mov
adcl
jge
imul
sub
popf
dec
xor
sbb
and
add
out
adc
sub
and
call
loop
xchg
pushf
push
push
xchg
cmp
cmp
push
adc
data16
lcall
out
ss
push
cmpl
into
rcl
xchg
sub
ficoml
lea
orb
adcl
sub
rcrl
mov
outsl
lret
sub
pop
xchg
fimuls
mov
mov
and
iret
inc
cld
fsubrl
adc
sbb
iret
sbb
adc
pop
adc
sbb
sub
imul
push
aaa
sbb
bound
push
pop
orl
shr
aam
pushf
pop
push
xchg
sbb
add
sahf
mov
int3
fisubs
xchg
aad
in
sub
xor
pop
adc
subl
sbb
aad
mov
leave
popl
cltd
ret
pop
pop
bound
enter
movsl
sarb
jae
adc
in
call
and
fwait
inc
cltd
or
push
sub
mov
xlat
orl
xchg
push
push
loop
xchg
and
mov
sahf
bound
xor
push
adc
out
roll
aad
push
inc
cmp
cwtl
mov
cli
pop
mov
or
cld
loopne
das
ss
and
cs
mov
outsb
mov
and
mov
xchg
sub
xlat
or
push
sbb
dec
push
or
rcr
push
ret
enter
mov
aad
pop
out
outsl
mov
push
aam
xchg
xchg
fldl2e
scas
sbb
inc
adc
loopne
adc
push
pushf
popa
sub
push
stos
ss
inc
int
sbb
xchg
push
out
aam
push
fdivl
das
pop
pop
xchg
inc
pop
stos
jae
test
adc
rcrb
movl
lods
dec
sbb
xchg
push
shlb
ljmp
add
xor
sbb
push
fisubrl
pop
jmp
stos
test
mov
loop
test
inc
mov
cmc
enter
iret
mov
jl
add
ljmp
lods
popf
push
stos
std
mov
inc
jge
xchg
push
les
outsl
inc
sbb
inc
rcll
rolb
sbb
xlat
add
popa
adcl
std
jmp
sbb
mov
mov
pushf
cmp
outsl
inc
pop
mov
xchg
aad
cmp
push
xchg
xor
xchg
shrl
push
pushf
adc
outsl
popf
push
mov
or
inc
adc
adc
adc
pop
cmpsl
cs
aad
int
pop
rcrl
adc
dec
sbb
sbb
mov
out
add
sti
mov
aam
inc
push
in
imul
push
rolb
pushf
sub
sub
and
or
out
fst
shrl
sti
lret
ljmp
rcrl
cmp
push
fsubp
lods
imul
push
cmc
cmp
xchg
sub
or
sub
ljmp
pop
dec
scas
mov
push
out
pop
inc
daa
inc
mov
jno
mov
das
mov
gs
popf
inc
pop
push
pop
int3
ficoml
shlb
pop
mov
cltd
xchg
jae
minps
in
xchg
push
lahf
int3
add
dec
add
sub
pop
sub
mov
shll
and
cltd
jle
cmp
pushf
fsubl
sbb
stos
jno
pop
add
repnz
and
and
pop
inc
add
pop
xchg
mov
fs
imul
mov
repz
pop
sub
mov
and
scas
add
aad
mov
xchg
inc
mov
xchg
push
sub
sbb
sbb
inc
jle
jne
add
nop
notb
sbb
push
int
push
push
pop
movsb
push
es
mov
inc
ficomps
pop
fldcw
andb
sbb
or
pop
push
xchg
das
add
add
push
and
in
mov
pop
in
sbbl
xchg
jbe
sbb
sahf
int
pop
push
leave
add
outsl
jno
inc
push
sbb
add
test
xchg
pop
ret
push
ljmp
jne
fucom
sahf
clc
jb
sub
sbb
ret
mov
push
push
lock
in
fxch
or
out
cs
xchg
sub
stos
pop
sahf
inc
stos
rsqrtps
mov
cmpsl
inc
pop
in
pop
xchg
cmp
pop
pop
ror
adc
mov
jnp
addr16
push
jne
push
pop
xchg
adc
gs
xchg
adc
inc
jg
adc
xchg
sub
stos
xchg
fisubrs
sub
lods
inc
inc
outsb
add
popw
xchg
xchg
jb
andl
push
adc
push
push
fisubs
fistps
cmp
pop
rcll
and
xchg
adc
lea
xor
sub
adc
cmp
adc
sbb
pop
mov
sbb
pop
sub
aas
xchg
adc
push
push
sub
sbb
pop
mov
out
mov
ret
push
push
adc
adc
lods
sahf
xchg
adc
lret
cmp
sub
enter
mov
inc
push
fisubrs
cmp
xor
sub
rol
aad
jnp
xchg
lahf
mov
mov
sub
ja
pushf
add
loop
adc
adc
cmp
sub
inc
jle
sub
scas
mov
xchg
fadd
dec
mov
and
pop
ja
push
dec
lea
adc
sbb
inc
sbb
mov
and
sbb
outsb
push
fsubl
in
cmp
adc
and
ljmp
xchg
sahf
cltd
scas
push
sub
faddl
fisubrs
ljmp
push
fistps
int
inc
aad
push
daa
adc
outsl
shrb
subl
add
pop
xchg
xchg
pop
sub
je
test
add
add
xor
rcll
faddl
pop
adc
mov
adcb
mov
scas
sbb
popa
mov
arpl
sbb
cmp
imul
or
fistps
cmp
pop
lock
stos
test
push
push
imul
xchg
sub
out
jbe
mov
std
add
mov
jb
xlat
shlb
push
and
xchg
aam
pop
rclb
jge
lods
or
outsl
cmp
adc
popa
pop
xchg
lods
sbb
adc
push
push
cmp
pop
mov
jne
adc
lods
xor
out
mov
shll
out
outsl
fsubrl
xor
or
das
pop
stos
mov
xchg
xchg
inc
scas
adcl
inc
pop
adc
xchg
adc
add
ret
fnsave
aam
das
pop
imul
ljmp
stos
aas
enter
fcomi
mov
dec
inc
mov
xchg
pusha
das
jle
push
xchg
inc
sub
mov
shl
dec
sarb
push
fnsave
std
cltd
mov
sub
xchg
pop
or
and
aam
insl
cmpsl
ficomps
clc
inc
mov
inc
pop
push
add
pop
mov
cmc
sahf
out
cli
sti
sub
add
xchg
sub
mov
insl
daa
pop
aam
enter
das
pop
dec
sbb
shrb
xor
sbb
xchg
fst
pop
pushf
xchg
xlat
loopne
and
push
jge
das
orl
scas
sbb
clc
add
popf
and
sub
push
fsubl
adc
push
adc
adc
xchg
sub
imulb
xlat
sbb
sub
xchg
inc
imul
dec
fstps
push
fists
es
push
and
cwtl
leave
arpl
adc
aad
sub
add
or
inc
in
sub
cmp
xchg
adc
idiv
inc
clc
ficoms
and
inc
pop
adc
stos
insl
mov
push
ss
icebp
aad
fcompl
sbb
rclb
aad
xchg
mov
push
xchg
jne
clc
shrb
adc
xor
xchg
fsubrl
enter
out
xchg
or
xchg
sub
out
insl
fcoml
jne
adc
lcall
sub
fcoml
sti
out
nop
mov
mov
inc
inc
push
mov
sub
pop
loopne
jne
adc
cmc
es
mov
test
ret
out
fcmovnbe
xchg
push
xchg
fadd
mov
add
pop
ljmp
xchg
lcall
xchg
sahf
fldenv
push
sub
xor
sbb
adc
inc
push
add
ret
out
push
adc
mov
pop
outsl
and
bound
lds
loop
fidivrs
xchg
jb
leave
insb
jno
add
dec
sbb
xchg
sub
push
xchg
pop
adc
mov
ja
add
xchg
lea
push
push
mov
fwait
shll
shrl
aad
sub
add
std
sahf
fidivs
xor
dec
xchg
rcl
cli
pop
adc
aam
test
out
lods
xor
inc
adc
mov
shlb
sbb
sbbl
imul
xchg
jge
adc
xchg
out
ret
ficoms
mov
mov
repnz
pushf
push
shl
push
xor
fnsave
xchg
rclb
mov
imul
mov
or
mov
mov
lret
lcall
jo,pt
push
sub
push
mov
cltd
add
inc
addb
xchg
lea
add
fucomp
stc
sub
aam
nop
iret
jmp
mov
ret
pop
sbb
add
push
scas
cltd
loope
rcrl
xor
push
je
adc
push
scas
ret
push
cmp
nop
adc
movsl
jbe
push
loopne
mov
xchg
enter
mov
xor
fisubrs
iret
or
roll
flds
pop
addr16
add
insl
gs
xchg
outsl
inc
mov
pop
fists
push
adc
push
mov
pushf
test
sbb
sbb
fs
mov
inc
mov
cltd
inc
add
stos
pop
mov
ret
xchg
jb
hlt
out
aam
pop
fcoms
roll
mov
xorl
pop
xchg
sbb
je
xchg
icebp
cmp
fldcw
xlat
pop
fldt
mov
pop
push
fidivs
gs
or
sbb
xlat
fists
daa
nop
dec
lea
sub
inc
aad
addr16
inc
or
inc
sbb
jmp
jne
test
mov
mov
je
adc
ficoml
std
fdivl
fisttpl
in
pop
movsl
inc
rclb
pushf
roll
stos
xchg
cmc
push
aaa
mov
les
xor
and
pop
inc
xchg
ljmp
es
aas
push
sub
int
imul
dec
sbb
shrb
push
aaa
test
push
inc
add
pop
loop
pop
add
cltd
in
subps
push
push
pop
add
imul
pop
fcoms
cmp
faddl
ret
xchg
lret
adcb
or
cmc
mov
fwait
push
or
xchg
sbb
inc
inc
movsb
push
push
les
pop
pushf
mov
popa
cmp
mov
stos
sahf
out
adc
and
push
ss
fadds
aad
mov
pop
cmpsl
cmc
dec
enter
xchg
sub
leave
xchg
mov
pushf
sub
ret
sbb
aad
adc
faddl
adc
pop
scas
les
loopne
popl
xchg
push
fldcw
xor
mov
repz
popf
sbb
rorb
pop
ljmp
xor
sub
pop
xlat
test
inc
cmpsl
mov
dec
bound
push
mov
and
pop
cltd
mov
cmp
rclb
dec
sbb
and
sbb
ds
shrl
pop
adc
mov
clc
sbbl
xor
clts
jb
insl
fwait
rcl
push
inc
jno
jno
push
dec
jo
cmc
cli
lods
outsl
sub
sbb
xchg
push
cmp
stos
xor
leave
popf
pushf
leave
rclb
and
add
repnz
nop
xchg
aad
cmpsb
sub
les
xchg
bound
jl
addl
arpl
in
fildll
jg
fidivs
outsl
mov
rorl
pop
fcoml
and
inc
push
inc
adc
xchg
pop
push
fadd
subl
mov
aad
shrb
inc
das
pop
ds
pop
xchg
xor
ljmp
in
push
cs
xchg
push
sbb
sub
add
mov
rcrl
add
setno
pop
cmpsb
fcoml
pop
lds
push
out
jle
fisttpll
sbb
pop
xor
adc
stos
fldl2e
xor
add
ret
pop
scas
pop
sbb
jns
add
pop
xor
adc
rcll
adc
push
stos
testb
dec
pop
stos
fnstenv
mov
mov
xchg
outsl
ljmp
push
push
add
inc
out
mov
pop
rcll
cmp
sub
shrb
jg
adc
sbb
arpl
fnsave
subb
rolb
adc
xchg
sub
adcb
out
push
shl
not
bound
jne
add
sbb
push
mov
push
push
mov
hlt
fmull
sbb
push
sbbl
xor
mov
sbb
pop
stos
sub
inc
movl
lods
mov
add
imul
mov
cltd
sbb
fildl
add
xchg
xlat
cmpb
sbb
sbb
into
push
xchg
cmp
ljmp
xor
pop
push
add
and
sub
dec
movsl
push
scas
aam
sbb
and
push
mov
jno
jbe
lods
out
aad
call
aas
in
and
add
or
push
out
flds
int3
aam
push
dec
xor
push
ja
xchg
sub
adc
into
push
cltd
mov
out
push
adc
fists
add
aaa
lods
xchg
push
cwtl
out
push
in
enter
call
push
push
ficoms
pushf
jecxz
mov
push
xchg
add
xchg
nop
push
push
aad
pop
adc
jbe
adc
enter
pusha
jo
ret
sub
fcmovne
pop
popa
adc
mov
test
push
push
cmp
and
add
adc
sbb
lea
xchg
xlat
aam
adc
fcomi
push
ja
stos
add
push
flds
cmpsl
imul
jl
cmp
notl
adc
imul
das
and
add
xchg
add
movl
fmuls
mov
push
inc
popf
adc
or
int3
push
ja
lds
adc
inc
push
ret
into
xchg
imul
sub
pop
push
mov
div
jbe
cltd
mov
push
adc
adc
mov
enter
roll
ljmp
enter
sbb
flds
push
push
push
jge
push
xchg
stos
clc
in
insb
xor
sbb
mov
sub
add
xchg
fcoms
clc
pop
jmp
push
sbb
lret
sub
push
pop
xchg
sbb
shrl
sub
jo
das
aad
shll
loop
iret
mov
xchg
mov
adc
xchg
insl
arpl
test
cmp
mov
push
mov
aad
push
mov
in
cmc
andl
adc
stos
pop
xor
aam
cmp
inc
push
mov
push
pop
mov
mov
sub
fildll
sub
pop
push
push
push
inc
outsb
push
adc
add
push
push
ficomps
mov
push
sub
or
push
les
mov
xchg
xchg
lea
mov
rcrb
cld
pop
sub
jb
and
push
sub
xor
out
dec
stos
add
jmp
aaa
test
push
mov
sbb
dec
roll
lret
xor
nop
push
xchg
cmp
pop
pop
cmp
add
cmp
rorb
push
sbb
imul
xchg
xlat
fists
rcrl
push
aam
out
sbb
pop
lahf
scas
adc
push
loop
pop
sub
pusha
test
sbbl
inc
xlat
adc
sbb
push
nop
pop
xchg
das
xchg
sbb
inc
fiaddl
in
fwait
xchg
leave
push
push
add
ficoms
popf
pop
lret
rcll
das
inc
push
cmpsl
fnstenv
addr16
stos
aam
dec
into
push
or
pop
pop
mov
sub
dec
subb
into
adc
mov
out
add
xchg
push
scas
andl
sahf
adc
pop
les
xchg
outsl
fldl
mov
push
inc
adc
int3
stc
or
addr16
aad
mov
test
leave
and
das
lods
addr16
mov
lret
lds
stos
xchg
out
sbb
testb
pop
sbb
cmp
inc
stos
scas
push
popf
inc
pusha
xchg
bound
sbb
mov
cld
popf
ljmp
stos
fnstsw
and
lods
push
rclb
aad
add
push
inc
push
xchg
sub
add
xchg
push
or
add
pop
scas
and
divl
xlat
adc
popf
and
xchg
adc
movb
mov
fsub
ret
test
push
nop
xchg
inc
shll
sbb
mov
xchg
popf
pop
cmp
xchg
mov
sub
push
inc
adc
das
push
add
push
rclb
aam
xchg
pop
fbld
les
rclb
and
add
mov
je
mov
push
and
push
add
and
sbb
pop
mov
push
ficoms
shrb
cmc
iret
stc
push
mov
jne
push
mov
out
inc
or
push
out
fcompl
ljmp
adc
adc
sub
test
lea
sahf
sarb
rcrb
push
cmc
xor
lcall
or
xchg
jge
pop
adc
lret
sbb
sbb
push
ljmp
outsl
ficoms
stc
gs
sub
mov
fnstenv
push
push
adc
xchg
sub
pushf
pop
setg
sbb
sub
stos
int
adc
push
outsl
xchg
addr16
flds
add
pop
ljmp
mov
mov
fsts
adc
jge
pop
adc
push
lahf
jno
push
fistpll
scas
outsl
popf
lea
sbb
dec
std
movsb
jp
mov
adc
lea
xchg
cmc
mov
sbb
ja
sub
or
out
mov
sbb
sbb
pop
pop
fldenv
sub
lcall
bound
fcompl
push
hlt
rol
pop
ficomps
cmp
pop
jl
cmc
sarl
inc
das
adc
sbb
fmuls
pop
inc
xchg
inc
loop
mov
mov
xor
ljmp
test
xor
push
pop
imul
fidivrs
sub
lret
imul
les
fnstcw
mov
testl
mov
push
pop
cmpb
mov
hlt
fmull
push
rcrl
adc
stos
popf
sub
push
fwait
mov
lcall
adc
mov
inc
sub
aam
xlat
pop
lret
mov
pop
cmp
int3
xchg
ljmp
pushf
das
iret
pop
cmp
and
rcpps
scas
lret
outsl
xchg
mov
pushf
xchg
push
rcrl
mov
sbb
js
dec
push
addr16
lods
xor
fistpll
ljmp
cmp
clc
pop
and
xor
sahf
les
mov
push
adc
int
xchg
les
mov
pop
jne
addb
stos
fdivl
sbb
sbb
mov
jle
push
mov
aad
adc
dec
xchg
ljmp
jo
adc
lods
cmp
sbb
popf
les
push
stos
and
mov
sbb
cmpsb
mov
das
movsl
ffree
xchg
sbb
pushf
push
sbb
adc
pop
add
shr
or
cmp
and
and
cld
and
or
insl
stos
push
inc
xchg
xchg
adc
or
push
pop
sub
push
stos
pop
xor
mov
push
sahf
nop
inc
movsb
add
add
push
test
push
ss
nop
add
push
xchg
push
sbb
cwtl
fistpll
push
mov
cmp
xchg
inc
dec
push
xchg
inc
ss
add
imul
push
lret
sub
pushf
pop
or
pop
mov
xchg
aaa
jmp
stos
stos
cmp
and
adcb
bound
push
les
or
push
and
into
pushf
pusha
nop
jae
icebp
leave
fcompl
cmpsb
movaps
and
push
mov
jg
insl
inc
pop
push
inc
lret
aad
ds
mov
add
in
mov
push
sub
inc
stos
ficoms
jno
cmp
add
cld
nop
pushf
sbb
scas
pop
scas
outsl
xor
jmp
movb
sub
xor
stos
mov
adc
pusha
ret
or
xchg
pop
pop
fcom
sub
xor
inc
dec
pop
cmp
dec
bound
push
pop
sub
shrb
sub
movsb
xor
nop
push
out
addr16
lods
dec
jns,pn
pop
sahf
inc
sbb
out
sbb
dec
sahf
or
popf
push
adc
mov
or
or
mov
into
filds
pop
push
xor
enter
push
adcl
sub
inc
dec
aam
outsl
out
sub
xor
jge
push
push
add
mov
fld
sbb
mov
daa
pop
cmp
push
pop
sub
add
xchg
sub
push
pop
adc
ljmp
sbb
inc
aam
or
enter
bound
ds
and
pushf
push
shrb
inc
rcr
push
faddl
pop
sahf
fsubrs
in
lret
mov
das
inc
fsubrl
aam
pop
push
xor
push
jo
out
sub
xlat
sahf
ljmp
or
cmp
sbb
mov
xchg
cmp
aam
and
rorl
int
xchg
das
sub
jge,pt
outsl
shll
or
xchg
gs
adc
outsl
pop
sub
enter
cmp
xchg
inc
adc
popf
scas
adc
inc
faddl
aad
test
mov
inc
xchg
test
xlat
add
ficoml
jmp
and
fdivl
outsl
sbb
les
leave
stos
fxch
xchg
inc
jp,pn
or
aad
ja
jne
clc
adc
ret
ja
mov
and
sahf
sahf
gs
xchg
push
adc
js
into
push
sahf
test
out
stc
lret
adc
addl
pop
insb
jmp
adc
mov
insl
out
xor
test
sub
stos
xor
cltd
loop
cmpsl
loopne
adc
xchg
movsb
cmp
add
orl
mov
push
lret
inc
mov
enter
push
in
popf
xor
lds
push
mov
lcall
pop
stos
jecxz
xor
adc
cmpsb
sbb
lea
sbb
les
es
pop
inc
push
pop
xor
xchg
aam
push
xchg
sub
rcrl
jne
push
xchg
xor
mov
cmp
lock
push
push
mov
stos
jmp
xchg
mov
xlat
fnstsw
mov
pop
dec
popa
inc
adc
and
adc
xor
xchg
pop
adc
repnz
test
outsl
sub
mov
pop
xchg
imul
into
inc
pop
fimuls
inc
aaa
fisttpll
adcl
stos
push
mov
nop
xchg
testl
rclb
pop
mov
xchg
out
jmp
adc
stos
and
pop
add
add
pushf
push
inc
cmp
push
test
pop
inc
push
push
out
in
inc
xchg
and
fcoml
lret
mov
mov
mov
adc
outsl
and
sbb
push
add
sahf
fwait
ret
push
negb
xchg
mov
inc
push
cmp
push
adcb
pop
in
popf
push
out
sbb
ss
or
push
xchg
jmp
lods
stos
rclb
das
popf
push
add
cmpsl
push
icebp
inc
jne
xor
push
xchg
aas
sbb
popf
sbb
pop
push
in
outsb
push
scas
push
sub
or
sahf
pushf
cmp
xchg
adc
xchg
cltd
aad
fildll
lret
push
pop
pushf
xchg
rorl
pop
adc
mov
jmp
stc
mov
push
jp
sbb
xor
mov
xchg
and
pusha
mov
xchg
inc
mov
fidivs
dec
push
stos
std
xchg
push
cmpsl
aad
xor
mov
add
mov
sub
idivb
mov
mov
mov
int3
xchg
rcrl
iret
out
mov
mov
mov
out
push
mov
adc
xor
jb
imul
pop
xor
add
xchg
loop
xchg
stos
push
mov
fstl
xchg
pop
pop
lret
cwtl
inc
adc
addr16
ret
loope
push
jae
xchg
adc
pop
cmp
push
scas
xlat
push
xchg
xchg
mov
pop
mov
out
andl
push
je
int
push
xchg
xchg
movlps
pop
push
je
mov
sub
mov
pop
xchg
incb
lea
rclb
fstl
adc
sar
xchg
mov
pop
push
out
xchg
xchg
inc
rclb
adc
lds
adc
out
shrl
pop
xchg
adc
xlat
or
sbb
cmp
pop
add
out
cltd
pop
lods
sbb
call
lahf
test
stos
hlt
xchg
and
sub
je
lret
loopne
dec
notb
in
sub
push
aad
sbb
push
pop
pop
pop
pop
mov
js
jnp
cmp
push
sbb
adcl
repnz
sub
hlt
mov
add
xchg
mov
sbb
dec
mov
xchg
inc
std
jmp
cmpsl
xor
xchg
gs
test
testb
add
mov
or
push
dec
push
insl
adc
jl
adc
mov
pop
pop
shl
cltd
add
in
outsl
in
sbb
push
xchg
adc
fstpl
jl
xor
push
rcll
adc
add
mov
cli
xor
xchg
mov
jno
fldl
add
cltd
xchg
imul
sub
adc
mov
pop
incl
lretw
sbb
aad
xchg
cld
aam
js
hlt
sub
push
cld
mov
xchg
push
adc
mov
js
xchg
sub
cmpsl
mov
pop
pusha
clc
sub
dec
sub
and
popf
pop
xchg
sbb
fcmovbe
push
xor
sbb
mov
out
fcomip
ficomps
dec
lods
sub
sbbl
xchg
ret
pop
rolb
fs
jbe
dec
jno
mov
sbb
mov
jne
inc
ja
lahf
push
mov
pop
sbb
stos
sbb
fcoml
sarb
mov
fsts
out
and
test
sub
shll
jne
sti
fistpll
pop
test
add
add
xchg
inc
push
fidivs
jbe
std
insb
sub
push
roll
push
sbb
roll
adc
rcr
cmp
sbb
leave
ljmp
xchg
ror
int
sub
rcll
pop
jp
cmc
lods
les
inc
push
adc
mov
push
cmc
xchg
xlat
stos
das
push
adc
test
push
roll
sub
leave
push
sbb
das
loop
in
push
pop
inc
in
stos
in
add
outsl
jp
mov
testb
popf
dec
mov
push
sbb
or
push
push
xor
add
pop
dec
xchg
sbb
sbb
mov
lret
adc
bound
pop
in
lea
sub
sbb
sarl
pop
sub
fstps
add
sbb
pop
push
xor
mov
pushf
ljmp
add
cmp
pop
push
and
mov
outsl
fstpl
test
sbb
rclb
fmuls
or
add
imul
add
sub
out
push
pushf
mov
push
pop
sub
push
mov
insb
shll
imul
sbb
cmpsl
pop
adc
push
inc
cmp
pop
or
jbe
fidivrs
jae
lret
push
inc
sub
mov
mov
xchg
push
sbb
ljmp
aam
xlat
fstpl
orl
xchg
shll
adc
xchg
repz
pushf
les
in
jge
pop
xchg
add
xchg
fcomip
jg
int3
es
adc
fsubrl
xchg
stos
pop
filds
cmpsb
or
xchg
adc
push
scas
or
xchg
in
push
ljmp
int3
fsts
xchg
inc
xlat
xchg
and
test
jbe
jns
mov
imul
dec
faddp
push
push
push
out
add
pop
sub
mov
push
adc
subb
rol
mov
fnsave
and
imul
pop
xchg
or
add
adc
fistpl
insl
xchg
lahf
mov
fcoml
mov
dec
scas
sbb
mov
mov
pop
add
cmp
add
sub
rcrb
enter
jb
pop
add
sub
xlat
into
push
popf
dec
jae
ljmp
out
and
mov
inc
mov
and
or
xchg
out
cmp
mov
mov
push
xchg
cmp
sahf
xchg
adc
dec
lea
adcl
add
sbb
sub
adc
lret
adc
jno
inc
xor
movsl
mov
sbb
or
ds
mov
push
das
and
fstl
add
xor
push
and
outsb
out
lahf
push
sbb
push
pop
bound
xchg
jno
mov
push
fisttpll
sub
inc
adc
leave
pop
xchg
popf
leave
jecxz
ja
xchg
cltd
mov
lret
fsubrs
shrl
stos
push
sbb
leave
in
mov
push
sbb
lods
mov
xchg
shll
arpl
pop
call
sbb
roll
jge
cltd
sbb
and
loop
xchg
popa
pushf
xchg
mov
psrad
stos
mov
inc
dec
adc
fldcw
xlat
lock
jne
adc
mov
rcr
adc
out
je
xchg
sbb
cltd
xchg
ffreep
pushf
jae
fldl
xorl
scas
mov
push
sbb
mov
pop
mov
xor
stos
fiadds
adc
cltd
scas
cmp
and
and
pop
adc
ret
xlat
or
add
inc
cld
dec
hlt
push
push
ss
sub
xchg
stos
push
cmp
sbb
imul
fldcw
sbb
adc
inc
adc
pop
mov
push
adc
aam
and
stos
xchg
ja
ffreep
cmpsl
fcmovnbe
sub
imul
das
sbb
mov
dec
or
pop
xchg
int3
js
xlat
addr16
inc
inc
pop
and
sbb
clc
sbb
aam
fists
xchg
int3
movsl
sarb
adc
adc
push
sub
adc
push
add
mov
sbb
add
aas
repz
dec
ficoms
scas
imul
dec
push
pop
rcl
mov
sbb
sub
jl
xchg
pop
gs
roll
lds
sbb
flds
les
inc
imul
divl
cmp
jmp
sub
sub
xlat
mov
xchg
mov
xor
push
sbb
movsl
in
dec
xchg
jno
les
stos
sub
rcr
call
mov
jecxz
pop
add
call
loope
push
add
adc
and
ja
push
mov
pop
imul
daa
stos
adc
fsubl
pop
push
xchg
jb
hlt
enter
cmpsb
out
mov
xchg
data16
pop
ljmp
xchg
pushf
xchg
out
pop
push
xlat
cmp
aam
xchg
pop
add
xchg
repnz
sbb
sub
cwtl
sahf
cmp
fmull
imul
sub
pop
xchg
sub
rcr
outsl
emms
push
out
push
push
push
outsl
jge
xchg
das
add
sub
push
cmpb
sbb
adcl
dec
rorb
jns
rcrb
push
or
adc
ficoms
in
add
fstpl
sub
pushf
and
les
daa
out
into
sub
xchg
icebp
loop
out
xlat
pop
xchg
or
add
adc
ret
ficoms
xchg
sub
add
pop
scas
cmpsl
loope
dec
push
xchg
xchg
pop
pushf
push
push
inc
shrb
inc
int3
push
mov
movsl
dec
hlt
inc
stos
pop
pop
insl
sub
fcmovnb
xchg
clc
outsb
push
lods
inc
fcoml
push
jge
stos
jae
inc
jle
rcrb
and
int3
xchg
adc
pop
sub
cwtl
fiadds
sahf
cltd
or
sbb
rorb
pop
push
xchg
outsl
dec
std
cmp
push
jge
xchg
stos
mov
stos
inc
lods
mov
ror
lcall
push
xchg
adc
rcrl
inc
popfw
xchg
das
adc
xchg
adc
sbb
int
pop
out
and
rcrb
push
dec
inc
pop
pop
adc
xchg
sbb
pop
pop
jp
mulb
sub
xchg
aaa
pop
xchg
gs
xor
pop
inc
testl
xchg
ja
aam
add
push
sahf
pushf
xlat
adc
and
sub
pop
sbb
adcb
mov
daa
cmpl
push
pop
popf
adc
sub
xchg
lods
aaa
push
stos
and
in
mov
ljmp
das
mov
int3
push
xchg
lahf
cltd
or
lahf
in
push
sub
rolb
and
xchg
lea
rcrl
repnz
outsl
xlat
fimull
pop
sub
clc
xchg
sub
fcompl
xchg
enter
add
add
shr
stos
mov
fdivrp
jo
and
sbb
pop
aam
repnz
xchg
scas
sub
lahf
scas
push
xor
mov
inc
in
mov
push
or
add
stos
adc
cltd
adc
sbb
xchg
sub
xor
fcoml
pushf
mov
inc
and
gs
pop
sbb
addr16
enter
fdivl
inc
and
xchg
sub
sbb
adc
test
push
mov
das
jo
subb
adc
mov
xchg
adc
fldenv
repz
lock
inc
mov
push
bound
dec
push
lret
outsl
push
cs
push
sbb
lods
jg
adc
lods
push
xchg
xchg
and
adc
sub
les
int
fisttpll
fwait
push
cmp
pop
inc
add
ljmp
mov
mov
fbld
push
jnp
pop
stos
xchg
insl
out
push
shll
adc
xchg
shlb
mov
or
mov
nopl
into
les
push
adc
mov
pop
insl
in
les
push
frstor
pop
mov
out
stc
push
jnp
pop
addl
aas
addl
adc
xchg
sbb
and
in
xor
shll
xor
roll
adc
adc
push
pop
inc
stos
sub
adc
imul
pop
mov
jmp
push
aad
popf
adc
cld
and
sti
and
push
xchg
and
pop
scas
jbe
pop
push
stos
push
adc
cmp
fcomip
incb
xorl
push
fisubrs
popf
movsl
dec
addr16
sbb
push
out
mov
pop
insl
sub
cmp
rol
into
push
adc
lahf
aam
adc
jge
push
test
add
outsl
jbe
lods
das
shlb
xor
out
mov
aad
xor
pop
inc
stc
dec
mov
rcl
repnz
repz
out
aad
xor
shll
pop
ljmp
add
sbb
sbb
push
add
push
jns
icebp
cmp
rcrl
xchg
cmp
pop
and
sub
movsl
pop
js
inc
adc
push
mov
sub
mov
or
pop
aad
xor
lods
and
pop
aaa
xchg
push
sbb
push
lret
inc
dec
xchg
out
in
adcl
sahf
loop
mov
push
cmp
fbld
pop
sahf
mov
push
push
mov
mov
ficomps
call
jge
pop
pop
add
adc
push
xchg
or
xchg
cltd
sub
sbb
stos
push
add
xor
lock
das
push
pop
add
mov
push
xchg
inc
popf
out
mov
aad
addr16
inc
sub
push
mov
pop
sbb
cld
cwtl
xorb
push
mov
shll
pop
das
iret
leave
jle
repz
ljmp
fldl
pushf
das
push
mov
xor
sub
xor
inc
pop
stos
push
sub
test
mov
sbb
dec
aam
into
cmp
mov
enter
or
push
or
push
pop
xor
mov
pop
sbb
stos
push
icebp
stc
pop
mov
pop
or
sahf
cmp
push
jmp
das
xchg
dec
js
sbb
xchg
shrl
popf
adc
xchg
xchg
xor
and
push
push
or
pushf
sarl
sbb
pop
push
and
faddl
das
inc
adc
stos
sti
cmp
leave
add
push
ljmp
add
xchg
sbb
adc
sub
cmp
pop
push
add
dec
pop
sub
sahf
xor
dec
ss
cmp
pop
fldl
dec
adc
sbb
ret
shlb
out
cmp
or
mov
xchg
push
push
inc
push
dec
addr16
lods
pop
sub
xchg
aas
int
push
orl
shlb
and
popfw
xor
jecxz
ret
call
push
subl
popf
scas
xor
mov
jb
mov
push
leave
rcrb
lcall
stos
and
xchg
sub
fisttps
add
mov
xchg
adc
mov
dec
pop
xchg
xchg
std
push
xchg
inc
mov
sbb
shlb
adc
shll
add
xchg
hlt
inc
xchg
sbb
cmp
or
sbb
shrl
stos
das
fstps
fcoml
push
push
cmp
out
stc
pop
daa
push
sbb
lods
scas
and
aaa
shrl
sub
sub
xchg
mov
push
outsl
ljmp
xchg
roll
inc
cltd
inc
inc
inc
in
adc
sbb
out
add
mov
aas
push
filds
xchg
push
xlat
jmp
or
popf
xchg
fbld
fidivs
mov
push
aad
adc
push
xchg
sbb
xchg
shlb
bound
lods
arpl
popf
lds
scas
in
cmp
sti
mov
xchg
push
lea
imul
ss
stos
stos
inc
je
dec
inc
sub
mov
out
adc
mov
inc
adc
xchg
movl
sahf
mov
sbb
lods
aad
std
nop
call
mov
mov
rcrl
test
adcb
cmp
mov
test
dec
insl
jp
aad
xor
fisubs
mov
int3
outsl
push
aam
hlt
adc
xchg
sbb
ds
mov
hlt
inc
mov
jno
push
mov
cmp
push
roll
pop
je
sbb
adc
outsl
fadds
xor
mov
xchg
adc
fstps
mov
jge
push
cld
icebp
aad
xlat
cli
add
add
das
sbb
loop
arpl
out
call
out
add
das
dec
outsl
lcall
mov
enter
pop
sub
ljmp
jle
push
cltd
push
push
pop
dec
sbb
sarl
sub
or
roll
xchg
sbb
fs
adc
popf
push
loop
fcmovbe
add
aad
std
pop
ljmp
pop
test
les
sub
push
dec
xorb
mov
sbb
fsubl
dec
cltd
aad
das
push
adc
pop
call
xor
dec
inc
les
mov
fwait
and
adc
imul
push
out
popf
cltd
sbbl
sahf
inc
outsl
xchg
adc
pop
imul
cld
mov
stos
movsl
sbb
sub
sbb
push
cmovne
les
out
roll
mov
and
in
pop
inc
mov
bound
sub
push
sbb
push
inc
xchg
xchg
lods
stos
jle
add
aad
mov
xlat
xchg
xchg
sbb
dec
rcll
or
push
add
push
and
rcrl
ja
shll
out
xchg
pop
fldt
push
cltd
test
push
dec
adc
xchg
inc
push
stc
mov
sub
pop
jo
fcmovb
jle
loop
push
fstps
xlat
sbb
xchg
dec
xor
sub
mov
and
loopne
xchg
and
push
dec
lret
inc
test
inc
push
adc
pop
into
ljmp
or
mov
cmpl
push
mov
push
xchg
test
lds
stos
push
inc
stos
std
test
pop
scas
add
cmp
stos
jbe
mov
add
push
stos
xchg
dec
pop
pop
push
inc
shll
xchg
outsb
xor
popf
cmp
xchg
aad
sbb
xchg
adc
inc
stos
cmp
xlat
out
clc
inc
aad
cltd
xchg
push
push
push
sbb
mov
cmp
imul
mov
cmp
mov
push
pushf
inc
push
sbbl
add
sub
fisttpll
pushf
push
fstl
add
adc
rcrl
das
bound
xor
add
in
repnz
popf
xchg
jge
xchg
movl
sahf
pop
out
pop
sub
push
adc
imul
ljmp
and
xchg
addl
bound
jl
clc
nop
out
push
adc
sbb
mov
push
fildl
push
cmp
lret
dec
xchg
bndcu
cmp
aam
aad
in
scas
stos
or
xchg
fistl
inc
ficomps
scas
fstl
jo
sub
xchg
jge
adc
loop
imul
xlat
pop
dec
mov
dec
push
test
push
adc
and
mov
aas
push
xchg
push
sbb
aam
xchg
popl
les
in
pop
pop
sbb
fiadds
ljmp
fistps
imul
push
pushf
fidivs
mov
sarl
iret
sbb
cltd
sbb
testl
xchg
xchg
jo
in
dec
and
sub
push
test
xchg
pop
fildll
xchg
pop
sbb
inc
shl
push
nop
stos
xchg
aad
push
mov
adc
les
shrl
das
pop
push
xchg
mov
int3
pop
fcoml
mov
jno
mov
xchg
pop
imul
sub
push
fsincos
pop
andl
cmp
pop
inc
pop
sbb
stc
jne
imul
loope
mov
push
push
pop
mov
adc
sub
mov
fsts
fimull
pop
dec
cltd
xchg
roll
inc
inc
ficomps
dec
popf
sub
xlat
pop
and
not
sub
push
sti
int3
fsubr
ret
mov
pop
loop
hlt
dec
jmp
lea
cltd
jge
outsl
push
xchg
jbe
add
adc
inc
push
inc
pop
ficomps
dec
mov
fadds
xchg
lea
or
mov
pop
mov
jb
out
sbb
sbb
xchg
out
and
rcl
ret
xchg
imul
push
pop
stos
mov
xor
push
dec
test
movsl
clc
sub
ffree
test
cld
inc
pop
jb
sub
cmp
push
sub
xlat
push
push
mov
adc
sub
iret
or
imul
adc
cmp
pop
cld
or
pop
sub
xchg
push
int
pop
adc
sub
jo
mov
aad
imul
cltd
rclb
ss
stos
shlb
xchg
add
xchg
arpl
adc
int
stos
adc
js
aas
xchg
xchg
adc
sbb
stos
push
mov
subb
jg
ret
dec
xchg
das
push
cltd
jecxz
idivb
or
push
rclb
scas
dec
pop
call
movsl
push
sub
inc
fists
push
daa
inc
clc
sbbb
ret
aad
pop
and
adcl
adc
adc
xlat
inc
xchg
push
cmpl
aaa
aas
jmp
cltd
mov
pop
mov
xchg
lahf
or
xchg
xchg
and
jne
lods
mul
and
shrl
sbb
cwtl
sbb
or
ret
xchg
ds
pushf
push
fstl
or
xor
repnz
and
adc
lahf
xor
pop
add
pushf
lea
lods
push
pop
and
jbe
mov
xor
int3
xchg
xchg
xchg
inc
sub
imul
roll
out
fisttps
mov
jo
sbb
les
lods
adc
push
xchg
mov
pop
pop
xchg
pop
mov
sti
in
imul
cmp
test
push
xchg
jmp
std
pop
sub
shl
mov
push
rcr
dec
pop
adc
cmp
stos
push
sbb
repz
xlat
mov
xorb
pop
stos
inc
dec
cltd
adcl
xchg
xchg
sbb
adc
enter
ja
pop
fimuls
sarl
and
push
add
mov
fsubs
adc
ja
cmpsl
pop
inc
shlb
fiaddl
lods
je
pop
std
scas
lock
xor
insl
mov
adc
mov
sub
test
flds
pop
xor
xor
stos
sbb
incl
loop
or
fistpll
fstl
push
add
ficoms
pop
repnz
inc
pop
sbbb
stos
lret
andl
popf
cltd
inc
xchg
mov
mov
inc
fisubrl
xchg
sub
sub
push
sahf
sbb
pop
jmp
lods
test
jbe
jae
pop
adc
add
mov
pop
pop
pop
inc
push
imul
push
jns
sahf
pop
add
adc
das
mov
outsl
and
inc
lret
add
sbb
push
sbb
mov
sub
cmp
lret
pop
insb
pop
call
xchg
push
sub
push
cltd
dec
loopne
cmp
xchg
fistl
shrl
gs
lret
data16
aas
sbb
push
outsl
in
pop
push
and
xchg
and
ljmp
shrb
scas
push
out
dec
pop
inc
adc
adc
popf
push
shr
xor
dec
pop
sub
sub
xchg
mov
popf
scas
xchg
mov
pop
fcmove
pop
xchg
stos
rorb
les
out
add
sbb
fcomps
mov
les
das
push
mov
inc
xor
call
nop
rclb
sub
adc
mov
xchg
cmp
push
xchg
add
aaa
sbb
lcall
ljmp
xor
sub
xchg
and
ja
sub
popf
leave
push
pop
adc
aad
or
les
shlb
xchg
stos
nop
xor
push
xor
adc
outsl
xchg
ljmp
hlt
inc
adc
cmp
fwait
pop
push
loopne
sbb
imul
seta
loop,pt
ds
xchg
ds
hlt
sub
daa
inc
sbb
pop
xchg
mov
xchg
cmp
mov
adc
and
cwtl
sarl
mov
xchg
mov
xor
shll
push
mov
or
push
sbb
inc
sbb
pop
add
stos
ret
adc
ljmp
test
minps
and
les
fisttpll
or
and
sbb
pop
push
sub
int3
push
pop
xlat
pop
js
pop
xor
fsubrl
xchg
fnstsw
pop
adc
push
add
sbb
in
sbbl
lret
in
mov
xor
push
push
add
jle
push
sbb
popf
sbb
fmulp
aad
pop
jle
mov
adc
pushf
out
imul
xchg
loop
les
mov
dec
clc
rcrb
xchg
jns
shlb
push
pushf
adc
lods
push
xor
cmpsb
sbb
cwtl
pop
xor
imul
popf
shll
sbb
rcrb
movsl
fnop
add
scas
sbb
adc
pusha
lret
or
sub
xchg
fcoml
push
stos
jmp
jno
adc
inc
add
rclb
ret
ljmp
mov
xchg
inc
xchg
inc
pop
cmpsl
add
xchg
push
adc
push
mov
dec
cmp
push
push
mov
lods
sbb
mov
and
fisttpll
and
mov
push
inc
fldt
sub
adc
sahf
mov
jo
gs
dec
aad
aaa
test
xchg
fcmovnb
inc
das
pop
cwtl
lods
push
jmp
scas
into
pop
ret
xchg
push
inc
mov
fisubrs
adc
mov
rcll
sbb
arpl
das
aam
xchg
aam
push
inc
jb
insl
cmp
sbb
lea
push
les
xchg
xor
mov
inc
sub
stc
pop
sub
test
test
mov
xchg
shlb
pop
xor
inc
push
cltd
xchg
ds
pop
cmp
push
push
dec
andb
push
mov
lds
loop
push
inc
movsb
mov
mov
xlat
inc
or
jp
add
or
pop
jmp
mov
xor
pop
xlat
pop
mov
sbb
jb
inc
push
js
icebp
mov
xchg
mov
sar
mov
jg
in
mov
fsubrl
aad
pop
pop
sbb
out
outsl
sbb
dec
inc
sbb
mov
ljmp
in
sti
or
adc
pop
fwait
pop
mov
sbb
fnstcw
repnz
mov
leave
push
test
shlb
into
sbb
cmp
push
fnstsw
add
test
ret
int3
push
das
nop
out
inc
pop
or
ds
push
jg
aaa
rcl
popf
lret
adc
sbb
fcmovne
pop
ret
push
movsb
cmc
adc
adc
or
sbb
add
stos
in
dec
xchg
sub
daa
push
ljmp
sbb
outsb
dec
push
sub
push
or
add
les
and
loop
outsb
xchg
std
pop
inc
das
jmp
inc
ret
jae
inc
sub
fsubrl
loop
enter
sahf
add
lea
sbb
sub
movl
pop
pop
sub
push
cmp
push
sbb
push
sbb
les
or
pusha
xor
mov
adc
lock
stos
mov
push
das
xchg
daa
mov
leave
inc
jmp
adc
shrb
push
nop
xchg
sbb
ljmp
mov
cld
int3
xchg
xchg
outsl
sahf
sti
lods
fs
rclb
mov
scas
test
fisttps
int3
pop
push
stos
shrb
pop
int3
dec
addr16
inc
repz
mov
pushf
scas
hlt
sub
inc
hlt
add
sbb
xor
pop
hlt
push
xor
lock
push
pop
push
dec
ljmp
mov
mov
inc
adc
scas
xchg
addr16
add
fsubp
repz
imul
adc
and
jno
push
push
shlb
repnz
into
popf
pushf
cmpsb
scas
mov
mov
loop
imul
imul
sub
ljmp
mov
inc
mov
xchg
sbb
jb
imul
or
sbb
rclb
pop
sahf
cmpxchg
xlat
inc
xor
xlat
fnstcw
jbe
sbb
outsl
add
sub
and
push
push
mov
seto
pop
xor
fsubr
sub
aad
jno
out
lods
mov
cmc
sub
adc
decb
inc
mulb
xor
lcall
sub
dec
mov
xchg
xchg
cmp
and
jno
add
fcompl
popf
sbb
aam
int
push
push
push
mov
movsl
call
push
xchg
rclb
mov
ja
fisubs
adc
xchg
push
mov
xchg
shl
add
clc
push
sbb
xchg
add
movsl
ja
or
push
inc
push
adc
pop
xlat
imul
xchg
sub
and
faddl
adc
aad
mov
mov
xchg
push
cmc
jae
stos
mov
aas
pop
mov
sub
jo
push
xchg
insl
scas
adc
scas
hlt
std
sbb
pop
or
push
pushf
sbb
roll
ljmp
inc
lret
sbb
jp
movb
push
mov
loop
push
adc
xor
xor
pop
xlat
pop
ljmp
sbb
std
adc
add
xchg
add
xchg
mov
cltd
fstp
mov
ret
pop
mov
cmpsl
addr16
sbb
in
xchg
icebp
and
xlat
jge
outsl
xchg
test
fcmovnb
loop
stos
xchg
aas
xchg
xchg
inc
adc
jecxz
adc
repnz
out
das
adc
adcl
xchg
xor
push
sahf
cmp
push
push
adc
inc
adc
sbb
push
cmpsb
jle
xor
mov
aad
adc
stos
mov
cmp
fnstsw
dec
pop
jne
sub
push
fstp
int
pop
das
stc
popf
cmp
cltd
adc
add
rclb
pop
adc
jne
adc
mov
out
push
int3
jp
dec
push
ljmp
sbb
adc
push
addr16
mov
cltd
push
cmp
adcl
pop
in
ret
adc
adc
fistl
jecxz
dec
and
inc
stc
add
inc
dec
out
fstl
ss
pop
xchg
dec
sahf
outsl
adc
xchg
repnz
jbe
sub
iret
fisubs
jo
xor
add
adc
imul
aad
leave
adcl
outsl
xor
out
fsubrs
fcompl
xor
push
fwait
loopne
add
jb
xor
cmp
inc
adc
jg
popf
xchg
out
dec
decl
dec
inc
mulb
movsb
xchg
adc
xchg
pushf
push
cmp
pop
and
push
pop
xchg
call
mov
cltd
daa
xor
jmp
push
stos
imul
enter
jp
push
shlb
aam
pop
scas
or
bound
popa
xchg
or
arpl
mov
sbb
ret
xchg
push
jg
inc
aam
push
pop
cmp
pop
iret
sbb
pop
sub
insl
ret
pop
adc
push
loope
adc
pushf
xchg
les
test
adc
xchg
and
rol
mov
mov
mov
jp
pop
stos
xor
sbb
xchg
xor
and
lcall
adc
cld
or
les
or
popf
xlat
push
lret
mov
fdivrl
inc
roll
rorl
aad
pushf
xchg
fld
test
lods
scas
cmp
adc
push
movsl
add
ss
outsl
push
xlat
xchg
dec
rcll
sub
rcrb
xor
push
ret
pop
lods
mov
aas
loope
xchg
sbb
aad
or
xor
sub
xchg
push
into
lcall
add
and
mov
xchg
push
sbb
xchg
push
test
in
sbb
or
push
sbb
int3
bound
hlt
mov
xchg
push
lea
cmc
sbb
or
pop
push
xchg
aad
repnz
movsl
adc
jge
stos
cmp
push
mov
mov
daa
xlat
insl
dec
fsts
movsb
cltd
div
clc
push
xchg
sub
xchg
pop
es
inc
xchg
and
pop
mov
out
inc
adc
fstl
pop
ffreep
enter
xorb
mov
jp
loopne
loopne
cs
popf
and
push
shrl
or
aad
shll
inc
add
ljmp
scas
ret
jne
cwtl
inc
inc
outsl
xchg
push
daa
and
scas
sub
out
rol
push
sbbl
shll
cmp
sub
inc
fstp
sbb
xchg
xchg
jp
xchg
loopne
cmp
or
cmp
mov
lret
sbb
push
nop
push
lcall
cmc
xchg
adc
stc
clc
insl
sbb
stos
mov
cmpsl
cmp
ds
das
sub
in
in
insb
mov
xor
mov
andb
lret
adc
sbb
pop
push
adc
imull
jbe
cs
ficoms
push
gs
js
movsb
sahf
sbb
lret
or
pop
sbb
or
jns
ljmp
adc
mov
int3
sub
mov
add
add
sub
repnz
xchg
and
lea
sbb
or
popf
push
stos
rol
and
and
daa
push
xor
add
inc
aas
insl
sbb
inc
stos
mov
arpl
adc
out
xor
mov
lea
sti
roll
mov
mov
jg
add
xor
push
faddl
stos
dec
xchg
or
ja
out
movsl
inc
fmuls
in
aas
xchg
fstpl
pop
cmp
ja
xchg
out
pop
aad
pop
push
pop
es
pop
adc
adc
mov
inc
das
inc
sub
mov
sbb
jb
out
cs
cmpsl
jne
sarb
push
push
popf
das
xlat
xor
rorb
cmp
mov
adc
sbb
aam
test
fstl
dec
push
call
mov
xchg
cmc
push
mov
scas
lret
mov
xchg
cmp
push
adc
and
shll
xchg
sub
push
inc
lods
add
adc
mov
fucomp
pushf
or
pop
xor
mov
fucomi
push
and
adc
mov
mov
aad
in
and
and
fcoms
cmovno
push
add
xor
lahf
push
lock
sub
cmp
xchg
fstps
cld
test
mov
ficoms
xchg
xchg
aad
xchg
pop
mov
jle
sub
pushf
adc
in
adc
sub
jne
xchg
popf
xchg
pop
mov
sbb
push
inc
andl
shrb
fisttpl
int3
sahf
xchg
xor
pushf
xchg
in
leave
adc
cmp
mov
mov
roll
inc
push
aam
xor
adc
jae
sahf
lds
pop
xchg
ret
xchg
and
clc
sub
mov
or
loopne
sbb
dec
xlat
inc
or
xchg
outsl
and
pop
cmp
pushf
fldenv
in
out
sbb
imul
inc
push
stos
sub
les
push
loop
push
cli
pop
addr16
xchg
inc
adc
lods
push
test
lcall
add
mov
dec
sbb
sub
jmp
add
and
and
sbb
repz
xlat
ret
scas
inc
add
imul
push
rcll
das
roll
inc
inc
lods
sub
push
jne
fcoml
shrb
inc
lods
inc
xchg
popl
adc
xor
xchg
fiadds
push
aad
sarb
mov
sbb
scas
out
mov
dec
scas
lcall
push
fldcw
push
mov
add
mov
sahf
cmpsl
outsl
sbb
enter
mov
pusha
addr16
add
dec
pop
std
fcoms
cmp
mov
cmp
adc
xchg
cmp
add
sbb
sub
cwtl
pop
aas
lcall
add
or
sbb
sbb
fsts
sbb
add
rcrl
pop
sub
enter
add
xchg
pop
dec
mov
fildl
mov
fstpl
rorb
push
adc
fdivr
or
popf
and
add
jbe
push
imul
or
pop
xchg
popa
push
sub
mov
xor
rcrb
rcrl
shl
pop
xchg
sub
sbbl
lea
push
sub
lret
xchg
addr16
jg
push
fiadds
nop
push
push
std
aad
mov
inc
and
das
push
fwait
xor
shll
outsl
lods
xor
jge
push
mov
mov
popf
jns
xchg
mov
inc
js
jne
add
sub
lods
mov
adc
sub
push
lret
das
xchg
pop
fadd
hlt
out
inc
push
cmp
loopne
and
das
adc
push
xchg
std
dec
add
out
push
lea
outsl
in
test
lret
lcall
fisubs
stos
std
fcompl
inc
push
push
pop
adc
push
and
mov
movsl
sub
rcrl
inc
pushf
push
lock
insl
xor
sub
aas
dec
sbb
das
mov
cmp
adc
add
sbb
fcmovnb
push
xchg
and
pop
faddp
into
inc
fmull
xchg
adc
xchg
test
push
fstps
jb
adc
push
stos
adcb
cwtl
push
insl
cli
inc
sbb
and
cltd
inc
push
cld
inc
fisubrs
adc
dec
mov
xchg
xchg
xchg
sahf
xchg
cmovb
sbb
mov
cmp
adcl
push
aas
xchg
xchg
fstps
push
sbb
inc
push
inc
mov
popf
xchg
rcr
fisttpll
aad
jge
xchg
sbb
mov
aam
fwait
push
sahf
mov
xchg
xchg
cld
push
lods
std
pop
adc
rorb
mov
pop
inc
pop
stos
add
lahf
xor
stos
pushf
inc
cmp
sbb
addl
ffreep
ss
loope
pop
pop
inc
fdivrl
mov
andb
cwtl
shrl
sub
addr16
mov
mov
push
push
lea
pop
xchg
inc
pop
in
jb
aad
sbb
push
cltd
outsl
mov
inc
notl
sbb
add
cmp
shll
repz
dec
push
je
push
push
pop
jmp
jne
adc
enter
push
add
mov
outsl
mov
xchg
cmc
inc
push
cmp
jbe
push
push
mov
or
dec
inc
aas
push
bound
push
pusha
std
shl
or
in
ljmp
xlat
stos
push
push
push
daa
pushf
mov
inc
push
push
lock
mov
shlb
popf
mov
popf
scas
aad
adc
mov
enter
rcll
aaa
push
idivb
sbb
pop
rcrl
or
fstl
adc
pop
push
xchg
scas
out
pop
ljmp
hlt
add
bnd
aad
push
push
xchg
mov
mov
mov
outsl
imul
mov
xchg
mov
lods
mov
loopne
push
pop
fists
lret
sub
inc
pop
add
sbb
xchg
or
movsb
push
mov
repnz
adc
inc
jbe
mov
xchg
outsl
xchg
mov
inc
xor
dec
fstpl
out
adc
add
jmp
sub
stos
mov
cwtl
sub
adc
mov
imul
push
aaa
pusha
or
sbb
lea
out
jbe
adc
and
cmp
call
or
push
int
ja
outsl
mov
out
orps
and
xchg
pop
jp
sbbl
push
xchg
fidivs
xchg
aam
dec
and
xchg
testl
add
push
or
scas
pushf
adc
lret
imul
adc
stc
sub
popf
inc
xchg
inc
rcll
leave
andl
sub
sub
ret
push
cmp
fwait
ret
xchg
test
xchg
sahf
add
inc
insb
push
sbb
xlat
fsts
pop
stos
das
ljmp
pop
pop
lods
out
jb
pop
and
push
push
stos
fwait
xchg
roll
push
fistps
pop
iret
fdivl
dec
dec
stos
inc
out
push
push
xchg
push
jle
push
jae
sub
popf
and
push
xchg
mov
push
xchg
push
aaa
pop
sahf
xchg
push
fwait
aam
xchg
push
push
ds
sub
cmovns
cmc
rcll
cmp
lcall
jl
pop
divb
imul
add
mov
aam
cmp
mov
jno
mov
or
sub
adc
add
push
cmp
push
mov
push
xlat
pop
fdivrs
adc
xchg
inc
test
xchg
add
sub
add
rcl
push
aam
mov
int3
repnz
outsl
xchg
inc
sbb
push
xchg
les
adc
pop
sahf
adc
pop
xchg
xchg
insb
adc
shrb
sub
leave
xchg
sub
dec
push
pop
adc
nop
outsl
leave
out
dec
sbb
lods
or
pop
or
aad
out
test
xchg
hlt
add
les
lea
xchg
mov
pop
js
mov
aam
push
push
shl
sti
pop
jmp
dec
mov
pop
sbb
rcrl
adc
fcomp
sbbl
popf
out
mov
ja
outsl
and
inc
inc
add
push
sbb
mov
je
xor
push
shr
setno
xchg
mov
jnp
mov
inc
aas
sbb
lret
xchg
adc
push
xchg
sahf
sbb
popa
test
mov
pop
mov
jge
push
push
mov
mov
stos
xchg
popf
add
push
jl
lret
cltd
rorl
sub
dec
add
push
dec
xorl
sti
mov
push
cwtl
leave
xchg
push
and
leave
or
dec
cmp
imul
xor
and
imul
jno
test
mov
cwtl
or
push
push
aad
nop
outsb
sub
mov
std
jo
fstl
sub
mov
add
sahf
bound
insl
and
outsl
add
adc
sub
and
xchg
push
dec
push
aad
scas
inc
mov
sub
int3
cmpsb
xchg
das
in
fists
push
cmp
pop
sbb
fwait
scas
pop
xchg
imul
adc
sbb
fldcw
sub
sahf
inc
es
pop
xchg
mov
sub
sarb
push
push
push
xchg
push
filds
xor
xchg
loopne
mov
jnp
mov
neg
flds
jle
mov
push
int3
inc
popf
aam
das
sbb
fs
addr16
push
push
mov
aad
push
mov
das
out
outsl
addr16
ficoms
jmp
dec
fstl
fists
pop
sbb
add
pop
xlat
sti
std
jnp
jo
inc
repnz
loop
pop
arpl
sub
pop
push
push
push
lcall
cmp
pushf
decl
repnz
lock
insl
sub
lods
sbb
xchg
xchg
xchg
enter
imul
aad
jae
sti
sahf
lods
xchg
pop
xchg
popf
push
daa
push
xor
ljmp
inc
imul
out
enter
cmc
dec
shl
push
inc
aas
pop
xlat
das
sahf
xor
inc
push
adc
sbb
insl
pushf
pop
js
and
xor
push
testl
cmp
rcll
ja
push
or
xchg
sbb
push
scas
fcoml
sti
subb
fnstcw
xchg
fstl
aas
mov
sbb
cmp
js
outsl
push
shrb
jne
adc
xor
lcall
dec
dec
nop
add
pop
xchg
add
xlat
and
dec
sub
inc
ficompl
push
movsb
in
push
xchg
je
push
mov
pop
and
sub
fwait
sbb
adc
push
push
adc
lods
sbb
inc
push
sbb
subl
add
aad
mov
xchg
xchg
ret
push
push
xlat
sahf
lock
in
push
xchg
cmp
pushf
xchg
cmp
and
pop
push
faddl
push
int3
cltd
sub
scas
insl
adcb
lahf
gs
inc
stos
push
xor
pop
and
xchg
push
cmpps
les
insl
mov
adc
insl
mov
pop
adc
aad
sbb
push
sub
xchg
mov
inc
inc
mov
dec
or
mov
pop
sbb
shr
rcll
inc
imul
or
xchg
shlb
cmp
sbb
test
sbb
insl
inc
adc
push
push
inc
dec
inc
push
ffree
xchg
mov
push
jno
nop
std
mov
loopne
inc
sub
sub
mov
xchg
fbld
cmp
pop
cmp
sbb
insb
lea
xchg
xchg
mov
fisttpll
hlt
pop
sub
sub
pop
adc
std
stos
adc
sbb
adc
sbb
xchg
pop
pop
dec
aas
mov
dec
faddl
pop
ret
push
sbb
imulb
push
stos
push
repnz
adc
pop
shrl
aas
mov
adc
stos
and
insl
dec
push
add
dec
push
out
push
mov
dec
loopne
aam
xchg
xchg
bound
jne
aad
sbb
or
adc
mov
movb
mov
jle
insl
es
fiadds
add
mov
adc
pop
ljmp
dec
adc
jne
inc
lea
xorl
imul
add
js
xor
xchg
xchg
out
ljmp
sbb
xchg
xor
xchg
test
sub
pop
cmpsb
les
data16
push
out
popf
pop
jge
adc
add
fcomps
sbb
cmpsb
xchg
addr16
mov
lea
push
cmc
notl
xchg
ror
push
fstps
sub
xchg
xchg
adc
stos
cmp
shrl
jo
inc
pop
out
fstl
mov
das
xchg
cltd
imul
aam
add
pushf
popf
pop
adc
sbb
les
pop
rorl
sbb
daa
mov
outsl
lods
mov
mov
idivb
jns
mov
test
rorl
push
repnz
imul
adc
call
subl
add
adc
out
push
or
fsubrl
pop
and
mov
fisttpll
sbb
push
sub
sahf
pop
push
and
scas
sbb
sbb
push
push
push
out
push
mov
add
pop
add
fldt
sbb
insl
stos
pop
popf
sbb
mov
push
das
lcall
adc
push
adc
sbb
fistl
xchg
lret
addr16
mov
add
add
les
pop
xchg
pushf
pop
fisubrs
ljmp
loop
push
push
adc
jge
push
adc
sbb
adc
ljmp
push
cltd
repnz
inc
ret
in
jnp
xchg
jne
pop
shlb
popa
int
stos
sbb
push
jl
icebp
mov
ss
leave
adc
cmp
pop
aam
lcall
push
xchg
imull
xchg
xchg
pop
stos
rcrb
inc
xchg
add
xlat
sub
rcrb
push
fcoms
and
out
inc
mov
push
add
dec
in
dec
push
sub
roll
sahf
xchg
push
jge
push
push
pop
out
inc
aaa
mov
xchg
adc
in
je
sub
xor
divb
pop
roll
mov
lods
test
xchg
add
int3
add
clc
rcl
jmp
outsl
pop
rorl
push
sbb
push
lods
movsl
cmp
loopne
imulb
sub
mov
movsl
mov
in
adc
es
adc
jne
fcoml
ja
fwait
lock
ds
les
into
cmp
cmp
xchg
pop
sbb
xchg
out
jl
xchg
adc
add
clc
aas
enter
sub
loop
xchg
pop
cltd
xchg
lea
push
push
pop
outsl
jge
movb
sbb
push
lret
push
adc
push
push
xchg
xchg
in
inc
outsl
fldcw
sub
ss
fcoml
xlat
lret
xchg
rorb
sbb
fadds
lods
xchg
ja
aad
mov
push
mov
xchg
sub
add
push
mov
mov
and
push
add
jp
cltd
aam
pop
shrb
js
pop
adc
jle
fmuls
push
sub
push
cltd
and
ror
push
xchg
pop
mov
push
cmp
cltd
fidivrl
rclb
fdivp
std
xchg
pushf
push
mov
xchg
push
stos
rcll
pop
xchg
test
adc
add
cmp
dec
sahf
sbb
xchg
push
xchg
adc
jp
outsb
popf
jb
bound
xor
pusha
adc
cs
or
aad
xorl
dec
ljmp
sub
xchg
or
xor
shlb
cmp
lahf
xchg
push
dec
cmp
scas
inc
les
xchg
pop
inc
xchg
js
pop
pushf
les
sahf
faddl
pop
push
and
inc
push
fldcw
cmp
out
fldl
fucomip
mov
lret
ljmp
xchg
push
repnz
push
pop
inc
inc
mov
xor
sub
pushf
inc
xchg
push
daa
pop
std
lcall
int3
movsb
adc
aam
sbb
jb
sub
dec
inc
jp
roll
push
adc
dec
pushf
push
xor
inc
cmp
lcall
inc
sbb
xchg
xchg
sub
out
pop
and
sbb
and
or
pop
sub
push
fldl
dec
xchg
out
adc
int
rcl
or
dec
or
push
outsl
cltd
adc
mov
into
add
inc
jg
stos
loop
inc
scas
xchg
adc
cmp
pushf
cmp
xchg
push
mov
sbb
data16
sbb
mov
insb
imul
rcll
xchg
mov
push
sub
dec
sbb
xor
adc
jb
and
in
mov
cmp
add
out
mov
xchg
mov
ficompl
mov
ljmp
shll
sub
pop
lahf
ret
inc
sub
xlat
xchg
pop
xchg
xchg
lock
into
fnstcw
mov
xchg
sub
mov
orl
ficoms
sbb
xlat
and
int3
out
aam
sub
std
mov
mov
shl
mov
xchg
push
lock
jl
leave
push
and
ret
fldcw
fcompl
adcl
ja
mov
loop
stc
or
and
dec
fadd
xchg
xor
sbb
loop
ja
pusha
push
push
inc
xchg
mov
int3
and
roll
adc
pop
lock
xchg
outsl
lods
mov
xor
adc
addr16
xchg
setne
das
stos
or
adc
imul
clc
int3
xor
mov
jne
or
hlt
jno
cmp
ljmp
sbb
adc
fbld
inc
sub
jle
mov
sahf
fstl
xlat
pop
sbb
pop
leave
adc
mov
push
adc
pop
xor
xchg
or
add
xor
adc
and
inc
popf
addr16
xor
pushf
xor
push
and
leave
adc
out
push
jl
sbb
gs
inc
xlat
add
int3
out
xchg
int
xchg
shrl
xchg
sbb
fsts
mov
sub
mov
mov
sbb
add
adc
fisubrs
adc
test
shrl
push
sub
ja
sbb
lea
stos
int
pop
xchg
aaa
push
xlat
cs
cli
das
push
sbb
push
outsb
sbb
shrb
pop
xchg
push
pop
and
or
inc
bound
insl
lcall
faddl
ljmp
loop
ss
adc
notb
dec
sub
adc
fxch
fsubl
sti
shrb
pop
outsl
xor
ret
lock
lock
roll
inc
cmp
mov
stos
lret
mov
push
ret
das
jno
push
pop
inc
or
push
lods
sbb
aad
pop
inc
or
xor
rol
pop
pop
sub
scas
inc
xchg
push
xchg
push
in
stc
test
sub
pop
inc
sub
dec
int3
sbb
mov
push
dec
sub
jecxz
xchg
sbb
push
add
subb
jne
mov
pop
inc
push
and
loopne
dec
ja
xor
das
and
sahf
and
push
sub
add
pushf
sub
pop
leave
inc
mov
sub
inc
sbb
lds
push
pushf
and
xchg
int
pop
adc
hlt
cmpsb
fisttps
pop
pop
mov
mov
enter
rclb
mov
push
pop
xchg
cmp
adc
test
cmp
cmc
cmpb
insl
dec
adc
sbb
popa
enter
xorb
movsl
sub
sub
push
ljmp
sar
or
xlat
sbb
sub
rolb
adc
push
dec
les
sub
aam
and
and
stos
xchg
or
push
popf
outsl
xchg
out
imul
mov
inc
sub
fsts
inc
scas
sbb
scas
xor
das
push
sbb
add
pop
shrl
jo
sahf
jle
bound
andl
les
lret
inc
xchg
xchg
and
mov
fisubl
inc
or
xor
aam
cmpsl
ficoms
adc
fldt
and
adc
sub
adc
mov
les
insl
adc
and
aaa
xchg
pop
push
cmpsb
jge
lea
push
adc
cwtl
xor
std
sbb
xor
repnz
sub
das
cmp
fists
cmp
shll
ficoml
sub
and
enter
in
fists
push
sbb
orb
sbb
ljmp
outsl
jmp
ljmp
mov
pop
out
pop
and
jno
inc
fisubrl
push
out
mov
mov
adc
stos
fsubr
cli
cmc
fldl
fwait
aam
loopne
rclb
icebp
jno
jmp
mov
scas
adc
sub
xchg
daa
fmulp
pushf
lret
pop
and
sub
pop
addb
cmp
test
lret
mov
mov
sub
into
stos
sahf
cmp
or
xchg
push
xchg
incb
jne
push
iret
shrb
add
pushf
add
sub
push
pop
outsl
xor
cmp
mov
xor
push
push
adc
lods
outsb
mov
fsts
fstl
push
mov
adc
popa
push
push
jge
xchg
ficoms
cmp
sahf
xlat
test
push
add
cmp
xchg
mov
fisttpll
inc
ss
popa
imulb
rcrl
gs
cmpl
rcll
adc
xor
mov
adc
sbb
sbb
fmull
mov
test
inc
add
inc
and
ds
sbb
adc
mov
jnp
test
lea
dec
cs
popf
adc
or
pop
dec
xchg
xchg
pop
cltd
aad
mov
sub
jecxz
aam
sti
jbe
lods
push
sahf
stos
sbb
adc
sub
lret
pop
dec
sub
dec
sahf
leave
roll
test
enter
loopne
sbb
lret
sahf
aam
aad
mov
sbb
pop
pushf
adc
cmp
leave
pop
xchg
mov
sub
rclb
xchg
mov
aad
aas
xor
sahf
les
inc
inc
sbb
xor
inc
sub
xchg
cmp
and
sahf
sub
pop
cmp
out
rcl
xchg
sub
test
stos
and
pop
or
pop
outsl
mov
test
movsl
xchg
mov
aam
push
push
adc
pop
push
jp
fcomps
push
sub
mov
aam
cwtl
adc
xchg
push
sbb
jge
add
or
fistps
pop
sbb
insl
pop
mov
dec
sub
sub
mov
xchg
sub
adc
jo
ret
dec
daa
les
dec
cmp
xchg
or
cmp
inc
inc
stos
cmc
xor
cltd
rcll
cmp
test
orl
mov
sub
filds
xor
push
fcoml
aas
mov
xor
adc
push
sub
iret
ss
adc
adcl
cltd
rolb
imul
stos
iret
dec
adc
push
test
lcall
push
or
xchg
mov
mov
pushf
lea
popf
push
jge
les
setbe
aad
js
mov
xchg
sub
ret
lcall
inc
ss
adc
sbb
mov
xchg
sub
and
push
push
jle
sbb
dec
push
sbb
jmp
push
jbe
test
cmp
lea
xchg
sub
mov
cld
mov
jge
push
popf
mov
in
pop
scas
pop
fcompp
rclb
fisubl
ljmp
repnz
mov
adc
xchg
mov
stos
dec
pop
push
pop
insl
push
xchg
pop
sbb
divl
dec
mov
xlat
xchg
add
and
insl
ds
mov
inc
loope
test
push
xchg
in
out
adc
adc
scas
sub
or
js
cmpsl
adc
aas
add
jns
push
pop
dec
sub
push
les
jle
add
pushf
xchg
fisttps
les
imul
pop
adc
mov
out
add
pop
into
aam
xor
ret
filds
xor
pop
lock
jo
pop
mov
aam
decl
mov
pop
sbb
loop
clc
fists
jnp
pop
mov
add
rcrb
or
out
dec
mov
popf
jae
addr16
mov
sbb
xlat
cmp
cltd
pop
ret
scas
inc
fs
pop
sub
mov
xchg
and
push
daa
inc
test
mov
stos
das
nop
sbb
push
lcall
test
or
ljmp
ret
xchg
xchg
push
mov
sbb
mov
pop
xchg
pop
add
adc
nop
inc
jns
ds
pop
std
pushl
mov
mov
leave
push
lea
stos
push
pop
cmp
sub
cmp
push
push
jg
das
mov
jge
xchg
xor
dec
xchg
adc
inc
aad
sub
sub
std
outsl
xchg
lods
sbb
adc
stos
test
mov
jnp
rcrl
inc
or
mov
mov
cwtl
lock
push
mov
sahf
int3
pop
pushf
add
xor
stos
outsl
sbb
dec
pop
pop
cmp
mov
jge
push
in
ror
mov
sub
call
xor
fnstenv
pop
sub
sbb
push
fmuls
ds
mov
js
sbb
or
push
aam
rorl
popl
xlat
cmp
and
mov
loopne
sub
subl
mov
xchg
lret
add
add
pop
test
adc
in
push
xlat
fucomp
pop
movsl
push
lret
and
int3
pushf
adc
sbbl
enter
or
xchg
and
push
push
xchg
sbb
sbb
scas
and
pop
mov
mov
mov
aad
jmp
lret
sbb
dec
sahf
push
push
stos
xchg
xlat
push
lock
sbb
cmp
xchg
inc
push
fsubrl
push
sbb
xlat
inc
sbb
push
xor
loop
xchg
jle
bound
insb
or
xchg
adc
pop
inc
xchg
adc
fstl
insb
adc
outsl
lret
lods
mov
mov
sub
xchg
stos
lods
test
loope
arpl
pop
insl
xor
les
sub
push
faddl
sbb
out
int3
cli
std
xchg
into
test
jno
add
repnz
push
push
stos
xor
lret
adcl
push
sbb
pop
dec
push
pop
xchg
xchg
cli
aad
sbb
xchg
addr16
add
and
sub
push
aam
jle
jb
test
lret
adc
adc
fisttpll
xchg
out
pop
pop
aad
repnz
xor
pop
push
iret
add
rcll
push
leave
in
leave
imul
pop
adc
loop
out
sub
call
int3
push
jg
add
das
add
rclb
popf
adc
push
mov
xchg
fstpl
pop
outsl
inc
movl
adc
cmp
imul
or
push
mov
sub
rcll
xchg
add
sub
ss
loop
xchg
inc
popf
clc
inc
sub
inc
mov
pop
inc
xchg
aad
aam
inc
pop
jo
ja
cmp
in
out
inc
fucomip
and
aad
push
pop
add
inc
push
xchg
cwtl
mov
xor
or
adc
push
pop
dec
push
movsb
inc
jg
test
xor
sbb
push
lcall
xchg
adc
cltd
out
mov
loopne
push
fistl
shrl
leave
push
scas
adc
sbb
xchg
sbb
push
mov
icebp
xor
insl
std
adc
push
popa
leave
add
inc
rclb
fiaddl
or
adc
ret
cltd
test
xchg
scas
popf
pop
mov
mov
aam
and
xchg
jecxz
dec
adcl
push
push
hlt
inc
mov
sub
pop
fnstsw
xchg
rcrl
pop
fists
mov
std
rorb
xchg
push
push
mov
push
add
pop
ret
popa
fisubrl
mov
mov
mov
xchg
scas
loop
aad
notb
popa
in
sbb
lea
pop
add
sbb
xchg
push
bound
adc
pushf
aam
dec
mov
sahf
and
dec
sbb
add
push
outsl
aad
xlat
les
xchg
adc
out
adc
lods
adc
xor
enter
xor
xor
and
scas
inc
mov
fmul
scas
fistps
mov
xchg
jbe
repnz
mov
rcrb
outsb
xchg
adc
out
push
cwtl
rol
pop
cmp
or
mov
leave
ljmp
dec
xchg
and
das
popf
int3
add
inc
shrb
inc
ret
lahf
mov
mov
test
inc
divl
mov
push
pop
addr16
lods
ljmp
push
stc
in
sbb
pop
jne
add
in
xlat
xchg
out
sbbl
sbb
rolb
rcll
push
xlat
sub
mov
inc
mov
mov
inc
insl
mov
inc
xchg
sub
sahf
ficoms
into
push
sbb
inc
sub
mov
sahf
aaa
out
xchg
and
inc
rcll
addr16
cltd
sahf
lods
xor
pop
xchg
mov
int
rcll
das
pop
lods
sub
adc
or
inc
lds
sbb
pop
imul
shrb
js
divb
push
fwait
xor
pop
sbb
pandn
xchg
sbb
or
add
sbb
pop
pop
inc
mulb
hlt
and
push
fistps
and
fsubrp
pop
loop
dec
jge
push
aam
xchg
repnz
adc
stos
scas
xor
pusha
addr16
lea
adc
fbstp
cltd
push
movsb
mov
xchg
sub
ss
and
push
test
add
movsl
ror
lea
xchg
pop
jge
pop
mov
cmp
mov
roll
movsb
fcompl
repnz
fcmovnb
adcb
push
adc
rcll
cmp
pop
cmp
pop
xchg
sub
shrb
mov
rorl
fucom
ja
push
aaa
pop
push
ja
push
inc
adc
inc
nop
fsts
cmp
push
outsl
push
mov
dec
pusha
les
and
mov
lock
adc
adc
inc
mov
movsl
jge
jne
popf
pop
push
jno
xchg
rclb
adcl
push
and
cld
and
call
lret
setnp
popf
sub
mov
lret
movsb
adc
outsl
movb
sbb
ljmp
inc
outsl
xchg
adc
push
sbb
stos
adc
xchg
and
lods
pop
xchg
xchg
jo
xchg
clc
xor
xchg
pop
sbb
inc
sub
jo
out
cmp
sbb
and
nop
or
xchg
sub
push
push
push
shlb
insl
sbb
dec
push
cld
aas
inc
pushf
push
and
and
xchg
push
aam
ss
push
sbb
inc
mov
fcoml
leave
push
aas
rclb
add
jle
ljmp
cmc
test
imul
das
into
push
inc
jb
cmpsl
test
sbb
mov
lret
stos
adc
stos
iret
inc
xor
sub
and
pop
pop
mov
notl
aam
cltd
lea
xchg
xor
cltd
rol
adc
scas
inc
adc
and
pop
push
adc
cld
outsb
and
das
sbb
call
inc
fildll
jmp
sbb
xchg
cmp
aam
sub
cmp
push
ss
xchg
out
xor
sbb
pushf
outsb
int3
push
push
jge
pop
out
fdivl
xchg
iret
loop
push
adc
mov
out
sbb
ret
sbb
stos
push
fstl
adc
aad
aam
dec
popa
adc
rcr
fsts
sub
xchg
inc
jb
insl
aad
fstl
mov
push
and
and
in
out
dec
pop
aad
imul
push
js
adc
pop
adc
sbb
dec
pop
sahf
sbb
repz
adc
les
js
cmp
pop
xchg
sbb
xchg
xlat
xchg
flds
lds
adc
pushf
pop
rcrl
push
ja
cltd
clc
es
jne
add
repz
inc
mov
in
jle
ficoms
jp
pop
subb
test
scas
inc
insb
pop
aas
jb
sbb
sahf
push
dec
dec
push
ljmp
add
aam
mov
bound
test
xchg
xor
sub
cwtl
pop
andl
xchg
mov
aas
cmp
mov
subl
push
int
xchg
aad
jo
mov
sub
xchg
xchg
pop
mov
xchg
lock
push
filds
in
cltd
push
push
imul
adc
nop
add
int3
popf
inc
sbb
imul
mov
ret
mov
sub
pop
fdivrp
add
scas
add
xchg
push
in
pop
pop
sub
jns
jne
cltd
push
cmp
pop
xchg
sub
dec
sbb
lods
rcl
xchg
out
pop
sbb
mov
xchg
push
adc
mov
xchg
sub
ljmp
sarl
inc
sub
adc
lea
pop
add
neg
push
and
xor
outsb
pop
add
adc
imul
adc
les
enter
push
xchg
cmpsl
inc
pop
stos
fstps
lcall
adc
sahf
cmp
faddl
push
popf
push
push
adc
sbb
loop
pop
addr16
pop
add
ja
daa
dec
imul
xchg
subl
insb
inc
adc
push
in
jg
stos
xchg
pop
push
inc
lcall
inc
rcl
and
lock
sahf
pop
mov
sub
mov
pushf
mov
push
movb
xchg
ljmp
imul
les
rcrl
push
cmp
aaa
xchg
xor
mov
adc
scas
fmull
adc
popf
xor
xchg
sahf
sub
and
sbbb
xor
das
inc
dec
lock
or
int
pushf
xchg
sub
push
adc
or
popa
xchg
sub
push
pop
pushf
aam
add
xchg
mov
push
sbb
inc
inc
adc
mov
mov
outsl
call
xchg
sarb
aas
sbbb
adc
ret
adcl
std
xchg
jge
push
lret
adc
outsb
xchg
sbb
and
stos
push
sub
xchg
xlat
push
addl
rcrl
xor
xor
mov
dec
rclb
pop
sbbl
adc
clc
ja
sbb
push
push
xchg
xchg
pop
cltd
adc
nop
sahf
leave
fdivr
sti
aad
stos
mov
xchg
paddusw
aad
sbb
push
pop
xchg
xchg
adc
aas
sbb
rcl
xchg
push
js
or
pop
cmp
popf
adc
not
xor
xchg
mov
cs
push
cmp
popf
and
and
sub
cwtl
push
cmp
stc
pushf
mov
and
sbb
sbb
ret
ficoms
test
push
jbe
mov
loopne
xor
mov
sub
inc
sbb
pop
xchg
outsl
les
ror
mov
mov
push
mov
push
cmp
pop
xchg
xchg
push
enter
cltd
loopw
in
clc
and
inc
out
mov
mov
ror
fwait
ret
outsl
ss
iret
sub
mov
sub
imul
out
push
fmulp
movhps
push
popl
or
das
mov
stos
mov
sbb
lret
out
xlat
xor
push
sahf
addl
add
lahf
sbb
adc
pop
adc
lret
push
leave
xchg
sbb
inc
or
jge
pushf
rclb
add
push
xchg
inc
sbb
lcall
mov
mov
cwtl
rol
stos
sub
and
push
xchg
push
aas
ret
out
cmp
adc
je
pushf
sub
das
push
mov
pusha
pop
push
sbb
add
xchg
pop
adc
testb
cltd
sbb
and
xor
repnz
dec
test
pushf
scas
add
aad
inc
insl
loop
les
jge
sahf
xor
push
gs
sbb
fldenv
sbb
leave
les
mov
movsb
add
bound
sbb
and
loop
inc
scas
fdivrl
xlat
flds
push
loop
pop
rcll
js
outsb
or
push
pop
pop
lock
aad
ss
mov
sub
stos
pop
push
sbb
pop
pop
inc
pop
cmpsl
lods
cwtl
dec
xchg
lods
push
ljmp
push
sbb
pop
sbb
push
push
adc
loopne
and
imul
popf
lock
popf
pop
in
icebp
shll
addb
popa
or
fnsave
mov
pop
add
ss
test
mov
int3
in
xchg
mov
adc
xchg
cmpsl
dec
push
leave
adc
das
adc
mov
mov
and
xchg
inc
faddl
ja
push
in
fistps
xchg
add
push
sahf
add
aam
pop
pop
xchg
and
sbb
ficoml
mov
ret
out
mov
push
add
xlat
loopne
aaa
jl
xchg
fisubrs
inc
xchg
pushf
inc
xchg
and
fcmove
inc
xor
fists
dec
dec
mov
xlat
int3
aam
pop
sbb
xor
andl
xor
push
push
push
jb,pn
push
cli
sbb
sbb
xchg
xor
stos
xlat
sub
mov
inc
fadds
sbbb
push
sub
mov
dec
xchg
push
xchg
loope
popa
adcl
push
adc
mov
pop
add
scas
inc
add
push
movsl
insl
and
xor
dec
jo
push
andl
xchg
fcomps
or
jp
push
mov
adc
adc
ja
cmp
mov
fcomp
int3
inc
add
xchg
mov
cs
movsl
aaa
in
sarb
push
rcrl
fistps
push
adc
push
pop
xor
push
xchg
cmp
pop
pop
push
lock
fsubrs
sbb
push
xlat
adc
push
sbb
or
pop
or
fiaddl
jmp
fcoml
push
cltd
xchg
jb
and
pop
sbb
out
sbb
pop
enter
adc
lods
stos
pop
test
mov
xchg
adc
sub
sbb
pop
add
lcall
lea
push
pop
push
push
clc
xor
sub
stos
push
aam
or
sahf
iret
jp
negl
mov
pushf
xlat
aam
xchg
or
adc
inc
cltd
shll
les
xchg
push
push
adc
sahf
das
sbb
loope
pop
sbb
mov
xchg
adc
leave
cmp
aam
mov
call
fcoml
stos
jp
int
xchg
pushf
adc
hlt
test
mov
stos
fmul
pop
push
pop
xchg
sub
dec
rcl
xchg
fcmovu
xlat
in
pop
adc
push
sbb
inc
xor
jl
add
or
xchg
out
scas
fsts
cltd
and
mov
adc
in
pusha
xchg
sbb
xchg
pop
push
xlat
and
fcomip
add
sbb
dec
xchg
mov
mov
xor
add
mov
add
cld
mov
stos
cltd
inc
fincstp
xchg
ljmp
stc
sub
sub
xor
sarb
mov
adc
adc
mov
aad
adc
dec
adc
adc
push
xchg
add
or
add
fistpll
stos
mov
and
jl
xchg
sub
jbe
cmp
fsub
cmc
ret
add
rcrl
pushf
mov
add
inc
scas
pop
shll
adc
sbb
adc
push
push
push
xchg
pop
inc
leave
xchg
xchg
add
pop
lock
and
adc
add
aam
std
pop
xlat
icebp
push
pusha
jb
lds
and
xchg
sbb
es
clc
lock
xor
ficomps
mov
clc
aam
sarl
jae
aam
insb
push
xchg
cmp
push
pop
xlat
cwtl
sbb
adc
in
idivb
je
fldt
xchg
sub
xchg
cltd
enter
pop
cmp
inc
rcl
rcl
sub
negl
leave
fists
loop
jno
pop
fdivrp
bnd
and
pop
cmp
dec
fsts
movb
into
fcompl
int3
push
sub
xchg
adc
and
sub
aam
das
subl
out
shll
inc
inc
pop
bound
sub
xchg
push
mov
xchg
rcll
sbb
int
xchg
jae
sbb
push
fadd
imul
sahf
inc
adc
pop
int
pop
adc
sub
test
mov
mov
leave
pop
rclb
mov
hlt
scas
push
xchg
push
aam
lret
sub
lcall
sub
xor
push
sub
xchg
aad
addr16
in
xchg
adc
ss
push
cmp
cmpsl
lret
add
push
pop
push
dec
adc
pop
adc
xchg
fsts
out
xor
lock
mov
popf
or
es
mov
into
jnp
dec
and
inc
inc
es
cli
push
cld
jge
push
add
sbb
cmp
es
test
adc
push
scas
sub
push
rclb
xchg
adc
cmc
fsubrs
aam
imul
mov
pop
inc
sbb
das
pop
sub
xor
push
xchg
sbb
insl
add
jmp
mov
pushf
pop
xchg
xchg
outsb
push
stos
adc
xor
outsl
stos
sbb
cmp
xchg
movsl
mov
sbb
mov
pop
add
xlat
and
xchg
enter
ret
pop
sbb
add
mov
enter
dec
pop
lret
push
fcomps
outsl
std
stc
xchg
jp
mov
jmp
mov
aad
xchg
sahf
pop
fcoml
mov
pop
sbb
leave
scas
ljmp
sbb
sbb
cltd
inc
movsl
sbb
xchg
pop
sahf
mov
mov
xchg
cmp
and
xchg
adc
les
push
sahf
aad
xchg
add
cltd
fdivr
repnz
inc
adc
fstpl
sub
inc
sti
ret
xor
lcall
pop
lcall
pop
xor
push
adc
lret
testb
movsb
xchg
xchg
enter
mov
xor
addb
push
cmp
dec
fmull
push
push
xchg
and
int3
xchg
add
cltd
or
test
popf
cmp
fistps
inc
sub
stos
cwtl
das
lea
stos
sbb
push
mov
mov
sbb
test
xchg
out
and
call
xchg
sub
mov
push
les
sbb
mov
push
push
xor
popf
pusha
adc
adc
ret
jae
push
lock
push
adc
fst
push
je
xor
std
rcll
mov
add
push
repnz
ffree
pop
hlt
filds
sub
popf
push
push
adc
cmp
xchg
sub
cmp
mov
aad
cmpsb
sub
ljmp
fdivrl
adc
xor
push
xchg
mov
xchg
pop
sbb
add
enter
in
xchg
fnstenv
stos
adc
xchg
mov
adc
lods
and
std
sub
shrl
subb
pop
sub
mov
xchg
lods
addr16
adc
push
cmp
pushf
xchg
out
mov
sub
fdivl
inc
sbb
ss
pop
xor
xchg
bound
nop
sbb
inc
adc
mov
pushf
adc
push
lods
paddusb
mov
add
add
rcrl
out
dec
fwait
inc
popf
push
inc
pushl
inc
pop
aad
sub
decl
jb
rorl
cmc
ja
push
aam
xor
xor
inc
out
xchg
push
push
cmp
adc
push
or
adc
imul
ret
sbb
mov
into
xchg
or
push
cltd
push
xchg
dec
ljmp
movsb
xor
push
sbb
push
les
dec
ljmp
sub
test
xor
fisubrs
inc
sahf
push
outsl
add
cmp
pop
movsb
push
mov
mov
cmp
pop
push
repnz
pop
fstl
mov
pop
pop
inc
push
mov
dec
clc
sbb
shrb
push
fdivrp
push
sub
les
add
out
xlat
adc
fnstcw
leave
adc
aad
ffreep
imul
xor
and
xchg
lea
inc
push
stos
pop
lret
cltd
fwait
loop
xchg
out
int
adc
push
lret
aam
sbbl
mov
sarb
les
sbb
sahf
sahf
jne
int
sbb
push
pop
push
cmp
sub
and
mov
inc
out
lods
xor
mov
push
pushf
push
popf
jns
sbb
pop
inc
inc
enter
sbb
mov
out
test
pop
or
inc
ja
cwtl
or
stos
out
int3
dec
push
add
lods
jb
lods
sbb
adc
push
data16
clc
imul
jle
lock
hlt
mov
sbb
push
pop
test
cmp
push
sbb
frstor
sti
fildll
fsubrl
push
ja
cld
ss
jne
sub
and
xchg
pop
pop
or
adc
push
push
repnz
daa
adc
sbb
mov
arpl
mov
lret
aas
pop
pop
push
push
add
push
jns
inc
rclb
gs
push
inc
je
push
cmp
xor
inc
stos
mov
add
jecxz
fnstcw
sahf
sub
sub
push
aad
ss
or
pop
sbb
adc
repz
add
sbb
iret
cmp
mov
aaa
cmpsl
sbb
inc
push
xchg
dec
xchg
lods
push
sbbl
jno
xchg
jb
in
out
xor
xor
adc
lock
sbb
push
imul
or
xchg
mov
into
pop
xchg
sti
cmp
scas
and
push
ljmp
stos
and
xchg
push
and
push
sbb
in
push
ja
adc
cmc
inc
adc
lods
test
popf
mov
add
push
add
pop
xor
nop
xchg
inc
in
xchg
xchg
iret
adc
fistps
add
pop
sub
sbb
sbb
cmp
mov
push
and
push
sub
rcrl
pop
mov
sbb
sbb
lcall
pop
fistps
push
sbb
imul
xchg
scas
xchg
xchg
pop
outsl
adc
sbb
mov
mov
fsubr
adc
mov
lret
ds
xchg
jmp
xchg
pop
and
sub
push
fsts
rcrl
adc
add
dec
push
testb
test
mov
adc
xchg
pop
push
lea
mov
adc
rcll
nop
add
cmp
pop
mov
stos
mov
test
shl
add
fists
rolb
inc
push
push
sahf
out
pop
dec
mov
mov
fldcw
fldt
lret
ret
pop
sbb
mov
fsubrl
notb
sub
xchg
call
repnz
adc
cltd
ficoms
dec
inc
push
push
adc
adc
lods
imul
dec
sbb
sub
dec
and
add
xchg
xor
mov
inc
insb
ret
das
sbb
adc
fists
shl
and
and
test
adc
push
imul
icebp
pushf
push
push
cs
cmp
push
fisubrs
sub
ljmp
and
stos
push
sub
pop
push
mov
sarb
ljmp
pop
loopne
sub
sti
lods
lods
xchg
jne
adc
fidivs
je
imull
out
cmp
push
lock
subl
sub
pop
mov
mov
xchg
xchg
cmp
inc
mov
call
movsl
es
flds
popf
adc
xor
cmp
pop
sbb
jle
xor
sbb
dec
repnz
xchg
loop
icebp
push
xchg
sbb
fistps
xor
add
dec
pop
push
inc
push
push
xor
daa
xchg
adc
inc
inc
fnstsw
and
push
pop
sbbl
xor
addr16
inc
push
adc
dec
imul
sbb
push
fcmovu
lds
imul
ficomps
sbb
add
flds
paddd
aam
jne
push
pop
add
iret
fstpl
pop
lods
addr16
sbb
adc
test
xchg
mov
outsb
adc
and
cwtl
test
mov
push
pop
aad
shll
inc
lods
push
cltd
mov
pop
and
sub
aad
push
daa
mov
aam
mov
flds
pushf
xchg
not
ljmp
rcr
xchg
shll
xchg
xor
adc
sub
mov
sahf
xchg
fcmovu
ss
aad
mov
sub
and
adc
pushf
in
add
inc
lea
add
sbb
in
pop
pop
shrl
adc
je
jmp
imul
push
add
scas
outsl
ss
ljmp
sub
lea
pop
add
push
and
mov
test
sub
pop
addr16
aad
or
xor
sbb
ret
sahf
lods
sub
mov
in
sbbl
loop
push
sahf
xchg
sbb
insb
sbb
xchg
adc
imul
adc
hlt
xchg
cmpsl
push
lret
shlb
repz
lods
dec
fists
repnz
pop
std
stc
jo
or
mov
pop
adc
push
pop
and
push
lock
shlb
pop
jmp
sub
add
imul
push
dec
loop
inc
sub
pop
sbb
jne
lcall
adc
sbb
mov
fld1
mov
notb
mov
aad
pop
pop
outsl
out
xor
sbb
sub
push
pop
cmp
xchg
fnstcw
push
mov
xor
push
pop
inc
sbb
sbb
sub
movl
lods
scas
int3
popf
sbb
push
sbb
pop
and
out
push
out
out
adc
mov
add
cwtl
dec
pop
sbb
add
pusha
push
sub
int
pop
scas
xchg
add
mov
mov
lcall
and
movsl
dec
and
aad
jno
adc
sub
dec
add
xchg
xchg
xlat
outsl
lods
pop
add
rcr
adc
jbe
sub
fists
iret
push
idiv
dec
fldl
stos
movsl
enter
pop
xchg
xchg
ljmp
cmp
inc
mov
icebp
add
adc
out
scas
stos
clc
adc
rcll
out
sbb
or
jg
pop
sub
out
pop
in
inc
mov
inc
std
fstl
and
repnz
ficoms
imulb
sbb
loope
push
push
aas
xchg
scas
cltd
jmp
addl
fdivl
adc
pop
stos
ficoms
sbb
push
inc
test
cmp
leave
push
je
adc
ret
push
les
push
lock
dec
lahf
js
addr16
pop
xor
add
jne
lahf
xor
adcb
jb
stos
mov
pop
push
je
fnsave
sub
jno
add
inc
sub
scas
sbb
popf
adcl
int
xchg
push
adc
shrl
daa
and
push
inc
ss
sbbb
test
ret
sbb
jne
or
pop
push
cltd
xor
pop
cs
rclb
leave
adc
shlb
inc
pop
push
sahf
js
xchg
sbb
lcall
lea
insb
sub
fcoml
push
cmp
xchg
push
add
cmc
ss
aad
shl
sbb
dec
push
xchg
mov
stos
orl
dec
outsl
lea
push
xlat
jne
push
mov
sbb
pop
xchg
sub
shrb
adc
push
pop
out
xor
pop
xchg
les
pop
shlb
adc
ret
adc
xchg
xlat
shrl
pushf
cltd
call
push
scas
out
mov
sub
add
and
mov
pop
push
jnp
mov
fstpl
mov
mov
mov
adc
push
jb
xchg
mov
lcall
push
fst
xchg
rcrb
jno
out
sbb
push
mov
aam
adc
sub
add
xchg
sub
mov
out
push
dec
pop
inc
or
cmpsl
mov
cmpsl
mov
outsl
or
xchg
outsl
or
lock
inc
mov
adc
fcompl
push
jge
adc
sub
pop
pop
push
imul
adc
lods
xor
scas
add
push
inc
mov
sbb
cmp
adc
leave
aam
ja
xchg
fisubs
pop
insl
jno
ds
adc
fisttpll
add
push
and
fistl
sbb
xchg
mov
pushf
jb
jae
das
lods
lahf
sbbl
inc
xchg
adc
sbb
enter
adc
enter
dec
rcrl
push
pop
xchg
jecxz
fnstenv
mov
push
or
add
adc
inc
cmp
leave
mov
lret
dec
sbb
push
mov
iret
mov
lahf
and
pop
push
push
and
cmp
pusha
cmpsl
stos
fldl
jmp
xchg
push
out
push
add
aam
outsl
xchg
loopne
shrb
imul
or
mov
fildl
push
addr16
push
pop
and
flds
inc
mov
xchg
xor
cwtl
fidivs
push
addl
notl
mov
scas
pop
js
mov
aam
aas
cld
sbbl
xchg
push
lods
and
fldz
mov
xor
sbb
jge
adc
out
addr16
lea
or
pop
movsb
dec
mov
ljmp
push
in
xchg
push
fsubs
or
out
xchg
ljmp
push
pop
adc
pop
loop
pop
jp
loop
inc
xchg
mov
cmp
inc
ficoms
pop
mov
jae
xchg
and
mov
adc
stos
inc
lods
inc
adc
pushf
push
lret
push
inc
sub
in
pop
add
cmp
inc
and
fnsave
and
test
icebp
das
push
pop
sub
xor
xchg
sub
fadds
das
out
xchg
jle
loopne
popf
mov
enter
leave
addl
rcrb
xchg
pop
sub
xor
pop
lods
push
ljmp
inc
xchg
mov
push
in
les
fnstenv
xchg
and
cmc
push
dec
adc
inc
xchg
xor
popf
into
ljmp
push
mov
xor
sub
push
fdivrp
fdivl
mov
adc
adc
xchg
xchg
push
cmp
out
push
mov
xchg
xor
pop
xchg
cmp
inc
ljmp
adc
aam
mov
aad
mov
shlb
xchg
fcmovnb
popf
push
xchg
aam
pop
pop
dec
leave
aad
adc
aaa
dec
sbb
cmc
jns
sbb
cmp
push
inc
les
xchg
pop
add
das
xchg
lods
lret
sahf
movsb
inc
cmp
sbb
sub
sub
movsl
stos
xchg
stos
jo
shrb
scas
shl
mov
fdivs
pop
sbb
mov
push
outsl
jne
inc
add
mov
ret
xchg
push
nop
lods
sub
sbb
fisttpll
push
test
fstp
sbb
rcll
stos
fstps
sub
les
nop
xor
stos
adc
out
cmpsb
push
pop
xchg
ficoml
pop
fcomps
hlt
lret
fists
mov
xchg
dec
pop
mov
sub
cmp
fidivrs
push
push
pop
adc
shll
pop
mov
and
adc
push
or
xchg
push
sbb
lahf
pop
in
adc
adc
or
pop
xchg
push
mov
lret
adc
sbb
pop
inc
cmpsl
jo
faddp
inc
push
sub
add
push
rclb
cmpsl
fwait
shlb
dec
push
and
test
or
add
pop
hlt
or
add
inc
xchg
sahf
sbb
or
add
pop
shrl
and
hlt
pusha
sub
aad
fstl
push
xchg
xchg
xchg
sub
pop
lret
mov
xchg
rcl
cltd
mov
add
loop
pop
mov
stos
pushf
xchg
xchg
icebp
adc
mov
sbbb
test
sbb
adc
fwait
scas
and
adc
ffree
std
pushf
addb
push
out
xchg
cmp
fcoml
push
push
inc
sub
fisttpll
push
push
and
push
punpckldq
pop
imul
les
add
ret
push
movsl
pop
xchg
addr16
mov
pop
cmp
push
add
fmull
aam
adc
push
xchg
into
push
push
ljmp
pop
dec
xchg
flds
inc
and
mov
fldcw
outsl
push
xor
arpl
mov
xor
or
out
and
inc
add
push
rcrb
jmp
cmp
shr
mov
xchg
ljmp
pop
push
fs
repnz
sub
push
xchg
push
fstps
cmp
xchg
nop
xor
add
pop
pushf
sbb
adc
xchg
push
add
pop
fbld
jge
push
rcr
jne
xchg
jge
push
sbb
xor
aad
inc
sub
pop
fildll
dec
pushf
pop
sbb
pop
ljmp
stos
fildll
and
andl
mov
push
xchg
push
pop
xchg
xchg
sub
out
inc
mov
inc
xchg
xchg
mov
xorl
ret
icebp
pop
stos
popl
fwait
sbb
or
push
pop
adc
mov
adc
mov
mov
sbbl
lret
pop
lea
sbb
fists
add
xor
xchg
enter
push
inc
xchg
enter
sbb
and
test
push
adc
lret
sbb
push
push
push
xor
and
pop
jo
pop
jno
xlat
pop
inc
push
adcb
inc
lcall
ret
cwtl
and
or
jno
and
adc
rcll
mov
adc
mov
les
and
inc
lods
mov
pop
inc
inc
adc
xchg
loop
scas
lock
fcoml
fs
ds
and
pop
adc
into
xchg
mov
cmp
push
pop
fmuls
xchg
mov
mov
cltd
adc
aaa
dec
nop
xor
pushf
add
lret
iret
mov
xor
mov
popf
daa
add
and
push
fildl
shl
sbb
mov
shlb
int3
scas
ljmp
xchg
adc
xchg
sbb
sbb
inc
xor
jb
mov
rcrl
stos
dec
fnsave
aad
xchg
xchg
sub
jmp
imul
dec
adc
rclb
out
sbb
testb
push
xchg
pop
push
fldcw
push
sub
cwtl
stos
mov
orl
xchg
pop
push
jp
shl
loopne
stos
push
xchg
mov
xchg
fcompl
xor
mov
rcrl
stos
and
xchg
sahf
cmp
imul
add
xchg
inc
aad
cld
adc
pushf
movsb
or
imul
ret
cmp
dec
or
and
sub
pop
rorb
inc
and
push
adc
jle
lcall
stos
fidivrl
pop
insl
dec
imul
push
popf
xchg
push
shrl
int
aad
aaa
aam
xlat
mov
add
xchg
dec
pusha
popf
mov
orl
aad
pop
scas
mov
xor
xchg
jg
adc
out
or
mov
xchg
add
push
mov
imul
in
mov
mov
scas
pushf
lret
imull
push
out
ljmp
pop
push
xor
fldcw
adc
mov
das
push
xchg
das
add
and
push
lret
rcl
mov
aam
inc
sbbb
push
push
sbb
aas
sub
pushf
push
mov
pop
xchg
lods
fstps
jo
stc
adc
test
jne
das
push
adc
lea
xchg
ds
xchg
fnstsw
out
push
push
dec
pushf
shlb
add
xor
stos
cmp
inc
pop
push
jne
fdivl
adc
pushf
pop
cld
out
iret
bound
sbb
sbb
or
pop
sbbb
jno
cwtl
push
out
data16
and
inc
out
pop
enter
inc
test
pop
lods
cmp
xchg
pop
loop
add
insb
sahf
inc
mov
loop
mov
inc
adc
xor
inc
sub
ljmp
cmp
push
outsl
icebp
lret
xchg
jno
xor
pop
aam
xchg
fildl
cs
fstp
cmc
and
xchg
push
push
mov
xchg
add
xchg
push
jge
pop
inc
lret
inc
push
push
test
jnp
loop
movsb
push
add
dec
mov
sbb
push
push
pop
pop
push
mov
push
sbb
pop
into
stos
cltd
xor
pop
aam
add
sar
rcll
pop
pop
sbb
add
xchg
and
lea
leave
xchg
push
push
mov
xchg
sbb
inc
pushf
test
mov
addl
scas
pop
xchg
outsl
xor
daa
into
xlat
sbb
mov
fstpt
addr16
adc
xchg
jb
and
adc
push
ret
mov
push
sub
mov
and
xchg
adc
mov
xlat
bound
daa
xlat
sbb
das
out
adc
jae
sub
lds
ljmp
adc
aam
cmp
rcr
pop
movsb
xchg
push
pop
aas
cltd
push
and
add
xchg
push
xchg
das
sub
rclb
xchg
xor
xchg
add
lret
fidivrs
pushf
adc
add
xchg
pop
pop
inc
push
push
or
xchg
pop
pop
aad
sahf
jl
pop
adc
inc
adc
push
push
xchg
leave
push
xchg
or
xchg
adc
je
pop
xchg
push
pop
sbb
out
pop
jge
fnstcw
dec
scas
test
lret
xlat
mov
and
xchg
ficomps
cmc
xchg
and
mov
add
cltd
add
push
xchg
fistl
or
cli
les
push
adc
in
fsts
sub
lret
imul
out
sbb
fidivs
pop
aad
jecxz
mov
xchg
mov
ret
rcl
in
sbb
filds
data16
or
int3
cltd
pop
test
addl
in
and
mov
mov
add
add
in
jge
inc
cmp
inc
lods
push
loop
jno
push
xlat
clc
mov
sub
iret
jbe
jno
mov
lock
aas
fsts
aad
leave
sbb
cwtl
adc
aas
adc
sub
lret
ljmp
push
adc
inc
cltd
inc
xchg
xchg
mov
pop
inc
add
push
sti
xlat
stos
into
movsb
mov
sbb
mov
cmp
fstp
push
popa
movsl
sti
cmp
into
ljmp
xchg
pop
mov
les
bnd
inc
inc
in
push
xchg
imul
push
xchg
cmp
enter
stos
sbb
sbb
adc
push
aaa
adc
int
push
cltd
iret
sahf
bound
imul
pop
add
xchg
aas
xchg
mov
or
mov
push
in
addr16
sbb
pushf
inc
xchg
push
mov
call
and
and
pop
ficoms
pop
mov
ficoml
xlat
fnsave
ss
call
sub
push
xor
push
lods
imulb
fs
sbb
faddl
mov
mov
inc
nop
xchg
in
stc
adc
xchg
sbb
sahf
push
xchg
dec
sub
mov
pop
push
jb
mov
loope
and
sub
pop
into
sbb
inc
fsts
or
pop
dec
sbb
fists
push
push
pop
movsl
les
cmp
negl
adc
stos
and
xchg
sahf
pop
sub
xlat
data16
sub
out
lods
mov
inc
int3
fistps
sahf
mov
sbb
pop
and
insb
mov
out
or
pop
push
push
out
adc
test
test
ffreep
jo
in
dec
test
push
lcall
and
fidivrl
aas
std
outsb
sbb
push
mov
test
push
sbb
jmp
push
push
push
and
das
add
push
xlat
sub
cmp
pop
xchg
stos
jge
sub
adc
add
fldl
xor
push
adc
pop
jns
inc
xchg
push
arpl
mov
xchg
jae
sbb
stos
stos
push
push
pop
pop
stos
push
dec
in
cmpsb
xchg
imul
add
and
inc
rcll
adc
adc
pop
inc
sbb
popa
fildl
and
addr16
lea
rcl
pushf
push
mov
lods
xchg
push
xchg
xor
std
sub
outsl
fdivl
add
xchg
sbb
outsl
ffree
inc
push
aad
mov
decl
rcrl
stos
cltd
out
ds
dec
cmp
stos
mov
sub
fcoms
xor
mov
test
and
lea
xor
das
scas
add
pop
push
sbb
pop
adc
pop
scas
pop
mov
and
sbb
frstor
pop
add
pushf
push
mov
add
in
imul
xchg
mov
adc
icebp
fwait
xor
les
adc
push
shr
pop
aam
jmp
ljmp
inc
cmp
xchg
sbb
fbstp
aam
push
sbb
lds
push
adc
mov
out
adc
ret
pop
jo
add
cmpsl
lods
das
ljmp
out
in
test
xchg
pop
sbb
inc
sub
outsl
cmp
into
mov
cmc
inc
sbb
add
stos
and
inc
test
xchg
loop
repz
add
pop
fstl
bound
ljmp
sbb
xchg
sbb
lock
cmp
lea
cltd
aad
ficoms
lret
out
sub
aam
rolb
xchg
scas
sbb
pop
xlat
aas
sahf
cltd
xchg
ficoml
lahf
sbb
rolb
loopne
adc
add
inc
push
lods
fistpl
adc
fcompl
pop
mov
xor
rorl
xchg
fstp
sbb
addl
cld
jp
aam
das
sub
mov
je
aam
mov
xchg
xchg
ds
popf
ljmp
outsl
stos
dec
scas
cmp
aad
cmp
sahf
and
sahf
std
xlat
cmpsb
xor
xchg
outsb
pop
das
mov
mov
pushf
mov
push
repnz
shl
jne
push
sbb
movsl
lock
les
aam
pusha
addb
push
stos
aad
dec
xlat
mov
fiaddl
xchg
mov
xor
inc
mov
add
sbbl
xchg
out
pushf
adc
xchg
cmc
loop
pop
add
test
and
pop
lock
dec
pop
cmpsl
rorl
cli
sbb
fimuls
das
pop
js
frstor
mov
aad
js
xchg
scas
fxch
sbb
push
cwtl
test
xchg
stos
pushf
add
pop
push
sbb
dec
insl
jae
adc
lods
push
push
pop
ficoms
rcl
pop
sahf
push
into
aam
mov
lret
dec
popf
jge
adc
hlt
int3
push
das
pop
push
int3
fdivp
imul
out
popf
xchg
adc
adc
lods
stos
sub
push
sub
shrb
sub
sbb
inc
push
mov
dec
aad
test
xchg
add
xchg
push
and
push
in
jno
pop
adc
fldcw
imul
ficomps
xchg
ds
sub
outsb
sbb
xchg
sbb
push
shrl
inc
xlat
sbb
jno
xor
push
cwtl
inc
and
sbb
push
sbb
xor
pusha
popf
and
adc
js
test
sbb
nop
fstpl
mov
push
hlt
push
pop
dec
pop
push
mov
push
adc
in
adc
in
or
xorb
dec
sbbl
jge
adc
adc
xlat
cltd
stos
leave
jae
addl
push
sub
lcall
pop
sub
pusha
imul
pop
push
inc
bnd
xchg
and
ja
xor
icebp
jle
cmc
clc
shrl
pop
andb
xchg
pop
xchg
xchg
xchg
pop
mov
leave
les
inc
je
lods
cld
push
sbb
call
out
xlat
mov
cmp
pop
xor
xchg
popf
push
std
or
lea
adc
or
xor
fldt
js
xor
sbb
and
mov
sbb
mov
mov
cmp
pusha
xchg
mov
add
and
jge
aad
and
xchg
out
xchg
pop
aam
mov
add
xchg
in
cmp
and
mov
xchg
or
cmp
adc
push
pop
inc
sahf
adcl
pushf
push
cltd
std
test
or
pop
cs
sbb
mov
adc
xor
push
mov
fcoml
sub
lods
cltd
ljmp
inc
sub
pop
adc
push
sub
cmp
xchg
pop
dec
flds
jmp
add
sub
adc
xor
aam
cli
or
push
test
insl
sbb
dec
pop
xor
out
shll
and
jno
xchg
sbb
and
add
xor
and
loop
and
jb
cltd
popf
lock
jp
ret
insl
sub
add
push
pop
push
pop
push
xadd
outsb
xor
scas
out
xchg
in
sub
xchg
xchg
out
xor
sub
pushf
das
xlat
adc
dec
std
sbb
adc
adc
je
sahf
pop
les
lret
pop
fistps
out
sub
lea
adc
lahf
xchg
fsts
xchg
push
gs
movb
sub
inc
into
lods
lods
shrb
leave
popf
insl
xchg
aad
std
les
sbb
adc
popf
add
js
js
mov
adc
jmp
pushf
push
fistl
fisubrs
push
xchg
outsl
sahf
push
inc
cwtl
sub
sbb
sub
add
andl
loop
sub
outsl
test
adc
mov
adc
je
lret
push
sub
and
cmpsl
inc
cmp
sbb
xchg
int3
push
outsl
inc
ficoml
and
sub
add
mov
iret
push
jns
and
adc
and
xchg
sti
xor
push
push
adc
js
insb
xchg
push
std
out
popf
stos
jge
push
push
bound
adc
mov
movsl
les
pop
mov
pusha
xchg
inc
mov
xor
ja
inc
ret
adc
popa
pop
lds
push
sbb
mov
push
outsl
js
xchg
push
xlat
pop
int
stos
fstpl
xchg
and
push
adc
xor
push
add
push
mov
loopne
scas
push
cltd
pushf
adc
clc
xchg
adc
mov
pop
push
adc
push
inc
xchg
fstp
xchg
rorl
xchg
pop
pop
ljmp
jge
cwtl
adc
and
mov
push
ljmp
xchg
push
subl
mov
push
inc
in
testb
cmp
jae
sahf
std
adc
adc
lea
ljmp
imul
out
adc
pop
insl
lret
ret
sub
add
add
push
and
out
aad
int
stos
xchg
subb
lods
mov
mov
mov
fmull
pop
xchg
push
adc
jno
and
mov
shrb
mov
enter
add
mov
imulb
xchg
sbb
or
enter
sub
inc
sub
push
push
in
ret
mov
sub
stos
xchg
xchg
pop
ds
sahf
xchg
into
sbb
and
sbb
test
call
xchg
ljmp
adc
popa
mov
sbb
push
xchg
push
fdivl
mov
mov
sub
xchg
mov
xchg
out
xchg
sbb
sarb
add
adc
add
and
rol
gs
inc
pop
cltd
mov
xchg
aam
sbb
fcompp
lret
cmp
xchg
xchg
push
ja
test
xchg
fst
adc
pop
icebp
push
stc
sub
sahf
lret
inc
jecxz
mov
jne
mov
and
mov
clc
scas
and
or
lea
lret
or
fcompl
inc
push
push
mov
push
scas
outsb
pushf
xor
test
dec
stos
xchg
sbb
aam
js
xchg
adc
add
cltd
and
mov
inc
xor
jne
mov
fisubrl
sub
mov
mov
lods
sbb
push
sub
adc
push
pop
cltd
jmp
mov
adc
inc
pushf
pop
xor
mov
adc
clc
xor
xchg
in
test
ret
mov
stos
mov
dec
sbb
xchg
sub
xchg
mov
push
inc
push
and
jne
sub
pop
adc
cmp
adc
fwait
aam
stos
stos
add
ror
push
xchg
adcl
das
adc
jl
pop
xchg
pop
add
sub
std
rorl
push
mov
dec
aad
std
adcb
push
out
xchg
or
push
adc
int3
xchg
fsts
leave
les
inc
cmpsl
or
pop
in
mov
adc
fstl
ret
xchg
push
inc
mov
in
mov
leave
xchg
mov
sub
sbb
pop
lcall
stos
pop
sub
adc
xchg
push
pop
sub
push
sbb
xchg
and
xchg
inc
in
ja
push
loop
mov
sbb
imul
inc
mov
sbb
stos
mov
popf
ror
out
cltd
xor
push
out
inc
rcrl
push
dec
rcll
push
imul
xor
popf
aad
adc
xor
push
in
lods
mov
pop
xor
lret
scas
adcb
lods
jmp
jns
mov
ret
test
aad
pop
jle
addb
sbb
imul
xor
lcall
stos
cltd
xchg
mov
xchg
fiadds
sub
sub
xchg
movsb
out
sub
fadds
pop
js
xor
mov
mov
xchg
rcrb
mov
out
xchg
fdivl
add
int3
addr16
arpl
adc
add
das
push
xor
jmp
cmp
and
inc
xchg
adc
adcb
add
xchg
std
mov
mov
adc
jecxz
push
dec
push
rcll
mov
xchg
inc
aaa
test
xlat
pop
int
pop
das
adc
pop
movsb
inc
into
pop
mov
shrb
push
aad
lcall
push
addr16
lock
xor
mov
fists
push
add
push
xchg
xchg
push
dec
sahf
add
and
xchg
cwtl
fnstcw
xchg
mov
adc
fimull
cltd
stos
adcl
inc
sub
push
cmp
mov
imul
jo
popf
xchg
cmp
or
scas
roll
and
pusha
mov
sbb
push
insl
add
inc
adc
fsts
xchg
push
aam
pushf
sahf
pop
imul
in
sbb
stos
out
das
push
fcoml
or
jae
sbb
fs
insb
repnz
pop
scas
pop
lea
push
xchg
sub
cmpsb
repnz
ds
lods
push
push
inc
das
inc
sahf
xchg
ljmp
pop
lret
pop
mov
ret
xchg
cmp
add
adc
addr16
andl
xor
fcompl
sahf
push
sub
sub
fstps
popf
out
push
xchg
into
push
sbb
int3
test
mov
or
into
sbb
pop
inc
in
popf
inc
sub
adc
xchg
sbb
lahf
jbe
popf
jge
pop
cmpsl
aaa
out
stos
add
sbb
xchg
mov
push
int
fsubrl
fsubrl
mov
push
mov
scas
pop
inc
aad
std
xor
aaa
stos
aad
out
int3
cmp
push
pop
push
insl
dec
xchg
push
mov
js
push
xchg
xorl
cmpsb
and
push
ret
popf
je
push
push
push
xor
adc
push
sub
adc
xchg
mov
pop
and
xchg
scas
jne
scas
jb
mov
or
inc
hlt
mov
mov
mov
imul
inc
xchg
stos
into
pop
push
aas
repz
pop
aad
mov
xchg
fists
adc
movsb
mov
fcompl
fidivrs
icebp
jo
adc
add
push
andl
push
and
pop
test
push
xor
sub
out
and
mov
pop
pop
add
dec
adc
push
pop
lcall
push
and
and
sub
cld
fwait
push
fmulp
pop
outsl
push
leave
xchg
aam
das
fldcw
ljmp
sbb
adc
push
aad
cmp
pop
and
test
xchg
sbb
and
xlat
and
lea
adc
pushf
xchg
pop
pop
ficoms
mov
test
jno
out
add
add
adc
insl
xlat
xchg
push
fistpll
pop
inc
add
xchg
xchg
xlat
fstps
cwtl
cmp
lcall
movb
adc
sbb
push
add
push
mov
fistps
sub
divb
popf
push
xchg
pop
add
push
push
lods
cmp
fisttpll
stos
sub
adc
sub
and
out
scas
push
or
add
rcll
add
out
pop
das
mov
jecxz
push
mov
push
xchg
pop
shrl
pushf
add
mov
mov
xchg
push
pusha
mov
sbb
inc
dec
pushf
push
int
push
xchg
xchg
pop
pop
scas
xchg
xor
push
fsubrl
adcl
adc
mov
xchg
push
cwtl
rorl
add
push
out
fs
ficomps
sti
xchg
xchg
and
inc
adc
mov
fstl
pushf
and
push
sbb
hlt
pop
imul
ja
scas
lods
lock
push
fistl
xchg
and
out
lea
inc
popf
jl
ja
sub
test
sti
mov
out
adc
mov
add
aad
or
sub
cltd
or
or
sahf
xchg
lods
sbb
push
fcoms
mov
sub
and
mov
push
sbb
cmc
mov
sbb
xlat
movsl
lods
lcall
adc
mov
repnz
rclb
ds
roll
and
ficoms
cltd
mov
push
adc
sbb
rclb
sub
repnz
pop
dec
push
aam
ficomps
push
mov
push
sbb
pop
icebp
jae
xchg
jno
lahf
gs
push
iret
cmp
mov
mov
rcll
sub
popf
scas
mov
xchg
sbb
or
adc
xchg
loopne
nop
push
aad
mov
cmpsb
cmp
pop
sub
stos
fcomps
xchg
push
dec
add
sub
pop
pop
inc
cwtl
mov
mov
ficomps
faddl
test
lcall
and
adc
les
push
xchg
dec
or
mov
adc
pop
fsubl
or
sbb
rorb
pop
fstl
lcall
mov
add
xchg
or
scas
add
cmc
add
imul
lea
mov
add
cmpsl
fisubs
mov
inc
sti
xor
sahf
leave
aad
xchg
gs
add
sub
filds
xchg
xor
push
mov
dec
mov
adc
sub
mov
push
in
push
mov
xchg
jno
xor
sbb
xchg
fisubrl
loopne
aam
aam
mov
mov
outsl
cmpsl
aam
inc
scas
inc
adc
lea
mov
sub
pop
out
xchg
mov
push
fcomps
inc
ret
adc
das
jp
pop
insl
lods
xchg
inc
add
sbb
pushf
jne
add
je
ja
movsl
push
sbb
push
mov
adc
and
cltd
sub
inc
pop
push
push
push
cmpsl
fcom
xchg
or
mov
push
push
mov
cmp
mov
pop
mov
cmc
ret
push
add
dec
adc
xor
fsts
push
lret
sbb
push
mov
sbb
push
popf
test
mov
inc
stos
xor
call
lods
pop
int3
add
shrl
pop
adc
or
push
push
sbb
jle
dec
aam
stos
xchg
fadds
add
nop
inc
je
jo
sub
addr16
fucompp
xchg
dec
or
pop
notl
rcll
fsubrl
icebp
fsubr
xchg
je
outsl
popf
cmp
sbb
test
fnstenv
push
inc
pushf
push
inc
stos
adc
jae
sbb
cmp
xchg
adc
pmullw
sub
int3
fstps
pop
xchg
push
jne
adc
ret
adc
add
cltd
xchg
sbb
int3
sbb
les
push
xchg
push
adc
les
push
push
popf
adc
fisubrs
inc
xchg
push
lods
adc
jge
push
fwait
mov
inc
lret
and
add
rorl
push
sbb
adc
add
loop
jno
adc
cld
int
adcl
movsl
adc
mov
rcll
sbb
aad
rclb
xchg
outsl
xchg
rcrl
pop
pop
insl
and
scas
and
into
xchg
cltd
mov
out
xor
sahf
pop
mov
sbb
push
xchg
clc
pop
adc
jg
adc
es
rcrl
fbld
inc
push
add
xor
les
cwtl
or
xlat
test
ror
push
mov
jnp
out
fstps
mov
outsl
das
xchg
inc
lret
popf
add
stos
shll
add
xor
loop
cwtl
cwtl
xor
push
add
faddl
es
pop
sbb
les
add
pop
xchg
pop
popf
rcr
inc
stos
inc
mov
test
out
push
fistps
inc
sti
adc
sub
xchg
adc
sti
int
xchg
shr
bound
notb
xlat
xchg
pop
enter
and
xchg
jge
shlb
loope
stos
sbb
add
sbb
or
scas
push
pushf
out
stos
adc
push
and
jbe
sbb
enter
jno
out
sbb
sub
pop
cs
in
repnz
sahf
add
xchg
outsl
dec
ficomps
push
cltd
push
add
cmp
xchg
sbb
fisttpll
adc
cmpsl
aam
cltd
mov
cmp
mov
push
add
outsb
xchg
testl
lods
lods
scas
std
in
lret
adc
push
adc
rcl
rcrl
outsl
mov
and
das
dec
pushf
rol
or
mov
and
and
xchg
and
loop
pop
pop
in
xchg
imul
int3
xchg
pop
mov
fcoml
ja
adc
mov
shr
sub
xor
xchg
sbb
mov
cld
pop
adcl
mov
popa
das
cmp
push
int
push
sahf
push
cmp
and
push
inc
jb
add
xchg
push
rcll
xchg
nop
add
outsl
es
push
cmp
push
into
das
rcl
call
popf
or
sti
addr16
xlat
push
adc
mov
xchg
enter
jb
fstl
aad
aaa
push
addl
rorl
les
adc
push
cmp
inc
push
adc
shl
rcrl
adc
and
fwait
sbb
idivb
pop
rcll
jno
mov
fstps
xor
inc
xchg
imul
test
pushf
jbe
push
mov
dec
add
aad
movsl
xchg
sahf
mov
repz
subl
pop
sub
mov
adc
sub
pushf
jbe
xchg
push
adc
push
mov
into
outsl
stos
add
cli
mov
popf
xor
aad
cltd
jg
add
push
adc
sbb
sahf
or
and
adc
daa
inc
inc
inc
pop
mov
int3
or
sub
adc
push
lret
pushf
stos
nop
enter
mov
inc
xchg
adc
stos
cli
dec
or
mov
and
xchg
les
push
push
shrl
adc
aad
mov
adc
loop
mov
xchg
add
addb
int
adc
pop
rcl
sub
jge
lock
fsubrp
inc
sahf
adc
inc
mov
adc
xchg
dec
push
push
inc
lea
sub
outsl
mov
sub
sub
pop
adc
adc
sbb
lea
xchg
pop
scas
mov
sti
sub
rclb
or
cmp
and
sbb
hlt
xor
sbb
leave
sahf
jb
xor
xlat
xor
add
ljmp
mov
xchg
dec
aad
jle
adc
adc
mov
sarb
mov
sbb
add
fdivrl
sbb
and
inc
repnz
movsb
jmp
jne
inc
mov
mov
pop
stos
sbb
sbb
leave
add
add
rclb
cltd
lods
sub
xchg
push
push
sbb
cltd
xchg
push
push
sahf
jae
jne
adc
jl
or
sub
fmull
popf
stos
sub
adc
push
fimuls
push
aam
cmc
push
xchg
sub
lret
xor
pop
ds
rcl
inc
fisttpll
mov
or
adc
mov
push
pop
push
inc
out
xlat
sahf
stos
mov
dec
les
xor
out
loop
xchg
xchg
push
sub
clc
dec
shrl
filds
push
sbb
rol
rep
cmp
out
adc
push
cmp
fisttps
adc
call
test
testb
mov
push
push
sbb
push
xchg
xchg
add
adc
jne
inc
push
sbbb
jbe
push
sub
pop
mov
testb
popa
sbb
iret
push
xor
enter
sub
xchg
adc
lea
push
xor
add
add
add
leave
subl
mov
ljmp
mov
mov
adc
xlat
shr
push
imul
sub
pop
push
pop
push
repz
lock
mov
mov
int3
mov
add
popf
sahf
pusha
mov
pop
aad
imul
out
mov
xor
fst
sbb
xchg
notb
dec
inc
push
pop
mov
test
adc
adc
push
pop
daa
fildl
jbe
lods
cmpsb
xchg
fidivs
xor
hlt
sub
mov
jb
mov
fiadds
push
js
fiadds
fcoml
push
mov
xor
and
cs
xorb
bound
mov
sub
aam
dec
movsb
imul
scas
ss
or
iret
pop
cld
inc
insl
stc
iret
xorl
sbb
pop
sub
push
rcll
repnz
pusha
inc
insl
adc
imulb
ficoms
nop
repnz
cmpsb
pop
or
out
call
push
push
movl
jmp
leave
xchg
push
or
adc
leave
jo
mov
adc
adc
sbb
push
xchg
pop
addr16
dec
ljmp
jge
imul
repnz
shrb
lea
push
pop
add
and
das
imul
xchg
sub
mov
pop
or
xchg
sbb
cmpsb
mov
xchg
stos
sbb
aad
clc
les
mov
lahf
mov
or
jo
arpl
adc
adc
loop
pop
popf
push
fdivrl
add
rcll
adc
xchg
aad
sti
fimull
xchg
lods
fsubrl
xchg
pushf
out
cltd
enter
jae
push
inc
xchg
sub
cmp
sub
adc
out
int3
cmpsl
iret
pop
sub
orl
lods
mov
cltd
push
or
xchg
inc
clc
pop
push
roll
push
loopew
jmp
jne
add
push
popf
sub
jmp
push
stc
lods
mov
pop
les
popf
shr
sbb
rorl
sbbl
filds
cmp
aad
sbb
or
push
push
add
ficoms
xchg
and
pop
test
flds
aam
outsl
xchg
scas
xlat
add
push
add
fisubrl
pop
push
cmp
add
xlat
xor
cltd
xchg
mov
adc
push
in
xchg
push
mov
cmp
sbb
xchg
pop
xor
pushf
subl
and
jecxz
andl
mov
pop
mov
imul
dec
out
or
clc
shlb
aas
xchg
xlat
push
adc
test
push
xchg
ret
lds
pop
iret
pop
loopne
push
push
xchg
outsl
and
lock
sub
jmp
jg
or
xchg
xchg
and
inc
fldenv
dec
push
pop
sbb
or
xchg
mov
push
sub
rcrl
mov
adc
rcll
mov
pop
cltd
das
cmc
inc
lret
dec
jo
pushf
push
andl
xchg
cmpsl
sub
popf
inc
mov
outsb
pushf
lcall
lea
xlat
xchg
das
pop
jne
push
stc
movsb
cmp
and
add
sbb
inc
add
xor
xchg
aam
inc
cs
inc
or
loop
xchg
xor
jge
das
pop
push
ja
fists
leave
stos
xchg
aad
and
pushf
push
push
adc
sahf
or
test
push
xchg
rcrb
inc
inc
mov
cli
sub
sub
mov
xchg
ljmp
imul
push
mov
fcoml
xor
add
xchg
mov
lret
popa
inc
outsl
and
cmp
push
sub
pop
lea
fstp
pushf
pop
and
inc
ljmp
pop
add
add
pop
xchg
fadd
adc
out
add
out
add
loopne
sbb
sbb
scas
shrl
xchg
fmull
movsb
sbb
xor
add
ljmp
push
dec
movsl
stos
es
pop
push
xchg
xor
aam
aad
adc
sbb
xlat
xor
movsl
stos
int3
sbb
test
pop
adc
cltd
inc
and
or
adc
cwtl
add
frstor
sahf
les
mov
push
sbb
push
adc
xchg
mov
inc
popl
mov
push
outsl
out
es
das
and
cwtl
pushf
and
xor
pop
ljmp
xchg
les
rcrl
or
dec
movsl
and
sbb
testl
and
mov
outsl
lret
dec
push
aam
cmpb
fisubrs
loopne
sbb
xchg
mov
out
cmp
adc
adc
fistps
jl
fdivl
push
call
push
pop
xchg
out
scas
push
dec
imulb
adcl
cmp
stos
out
lret
pushf
and
inc
pop
xchg
push
push
or
push
gs
nop
data16
mov
dec
mov
ljmp
aad
xchg
sbb
lret
pop
pop
xchg
dec
into
push
roll
inc
mov
lret
sbb
loope
add
hlt
outsb
sbb
lcall
xchg
rol
xchg
adc
jp
xor
leave
push
push
insl
ficomps
jae
and
mov
pop
inc
push
and
loopne
adc
add
adcl
jp
cmp
push
inc
push
pop
lea
push
out
aam
cmp
pushf
sub
xor
out
lret
xor
add
aam
and
push
sub
les
xor
pop
sbb
das
lods
pop
lret
sbb
adc
dec
jge
outsl
fildll
xchg
push
ljmp
add
ss
cmp
push
rolb
sub
mov
aas
sub
rcll
push
xchg
xor
lock
movsl
push
cltd
add
push
sahf
xchg
pop
scas
cmpsl
aam
sbbb
adc
push
outsb
fistpl
pop
mov
inc
ret
fsubp
pop
inc
incb
sbb
dec
stos
sbb
mov
das
sbb
inc
push
mov
lods
and
xchg
jge
pop
push
repz
stos
sarl
aam
lret
call
mov
bound
xor
mov
iret
mov
fistps
out
sbb
inc
sahf
scas
push
push
cmp
sbb
xchg
xor
adc
pop
cmp
stos
das
push
dec
incb
sbb
xor
fld
or
push
fdivrl
subb
push
adc
push
push
rcll
rcrl
aad
inc
roll
popa
lahf
outsl
lcall
cmp
rclb
or
inc
adc
subb
outsl
mov
fnstenv
cmp
and
lods
inc
mov
fistps
popf
notb
call
xor
push
shr
inc
imul
stos
and
and
inc
inc
add
push
push
add
outsl
sub
adc
xchg
data16
popf
push
adc
dec
pop
mov
mov
sbbb
fildll
sahf
push
sbb
out
sub
pop
fistpl
push
sbb
sahf
fcompl
pop
fisubrs
sbb
sub
add
sub
sub
push
push
mov
and
xchg
outsl
movsb
push
popf
outsb
sub
mov
or
adc
adcb
xchg
dec
inc
xchg
in
lea
push
frstor
push
arpl
out
pop
sbbl
xor
mov
scas
incl
jb
push
xchg
pusha
cmp
aam
fdiv
scas
inc
imul
jno
add
sbb
push
push
sub
incb
xor
push
stos
aam
pop
push
bound
and
daa
cmpsb
fisttps
adc
adc
xor
and
dec
adc
adc
sub
stos
xchg
push
xchg
scas
lret
adc
add
pop
push
out
leave
shrb
inc
sbb
dec
jmp
xlat
xchg
xchg
adc
xchg
testl
dec
adc
jne
stos
es
or
adc
enter
into
push
int
pop
sbb
lods
mov
cltd
adc
pushf
pop
push
dec
pop
sub
hlt
add
stc
xor
push
adc
rcr
jmp
jg
movsb
mov
loopne
aas
hlt
inc
imul
and
xor
aad
cmp
pop
out
push
pop
xchg
xchg
inc
repz
mov
stos
sub
adcb
shlb
adc
lods
int3
adc
rcrl
xlat
in
pushf
pusha
push
cmc
sub
popf
xor
add
pop
sub
sbb
int
ficomps
push
sub
or
xchg
ffreep
xchg
cwtl
mov
and
loopne
mov
xor
in
mov
xchg
rclb
xlat
fucomip
lea
dec
or
pop
fsts
push
std
fs
orl
inc
push
adc
dec
push
into
sbb
aam
mov
arpl
pop
xor
fiaddl
add
fwait
popa
mov
push
push
iret
mov
mov
push
std
addl
xor
je
arpl
inc
push
pop
imul
push
and
mov
push
jp
xchg
leave
rcrl
sbbl
sbb
fstl
cmp
adc
dec
push
shr
pcmpgtw
out
pop
jbe
cmp
inc
nop
cmp
rcrl
sub
pop
mov
clc
mov
rcl
and
es
push
mov
fidivrs
sbb
add
adc
fdivrp
rcrl
loopne
mov
push
jecxz
jno
in
es
ret
xchg
inc
fs
pop
xor
adc
or
push
bound
mov
sub
and
sar
adc
fstl
adc
lods
inc
push
xchg
pushf
imulb
fdivl
xchg
xchg
pop
imulb
push
xchg
fldl
pop
xchg
sub
test
pop
mov
flds
add
xchg
and
pop
add
les
adc
inc
push
ss
mov
rolw
mov
xchg
push
stos
push
in
popl
aas
fsts
popf
mov
test
fsts
in
cli
push
ret
test
jns
jmp
lcall
pop
push
pop
lods
and
movb
add
das
ficompl
push
shll
sub
xchg
fmulp
xlat
aam
mov
or
shrl
or
pop
xchg
push
push
and
mov
sbb
push
mov
enter
add
pop
xchg
incl
cltd
sbb
sub
pop
rorb
inc
sbb
dec
push
xor
xchg
mov
sbb
xchg
adc
push
adc
sbb
pop
xchg
addl
insl
dec
pop
push
pop
adc
adc
paddb
push
mov
and
cmp
or
add
int
inc
push
sbb
pop
adc
xchg
ficomps
adc
daa
inc
decb
stc
sarb
push
add
xchg
shlb
jmp
rorl
nop
xchg
into
push
pop
dec
mov
ficomps
jno
inc
cmp
popf
pop
test
xor
sub
xor
push
shr
out
js
aam
stc
push
in
jne
imul
or
outsl
lea
out
adc
outsl
inc
mov
add
sub
mov
dec
imul
cltd
push
dec
fstpl
push
sbb
mov
or
push
das
and
adc
fstl
push
xor
fidivs
aam
xchg
scas
xor
pop
adc
ret
push
les
mov
out
or
sbb
pop
fwait
xchg
push
xchg
sub
and
call
pop
iret
sbbb
adc
addb
pop
adc
xlat
pop
fldenv
push
push
pushf
adc
out
jne
pop
push
inc
dec
ja
xlat
xor
mov
cld
fcompl
push
adc
inc
shlb
stos
xchg
inc
lods
stos
stos
jge
sbb
xlat
sahf
test
fimuls
dec
jge
mov
xchg
xlat
push
stos
add
xchg
xchg
sub
pushf
inc
pop
push
sbbl
rolb
push
sarl
or
adc
and
rorl
aas
imulb
sbb
jae
push
cld
scas
xor
int3
and
mov
int
stos
insl
adc
xchg
fists
lods
xchg
mov
popf
xchg
cmp
push
adc
popf
in
loop
add
push
rclb
dec
sub
xchg
push
cmp
xchg
sbb
dec
scas
dec
inc
push
pop
ljmp
add
or
sub
sbb
sub
pop
aad
test
xchg
sub
sbb
fisubrs
imul
xchg
into
adc
or
push
nop
xchg
fsubr
xor
sbb
addl
xchg
pop
sbb
adc
xchg
inc
fildll
push
push
or
mov
cltd
push
xchg
out
push
imul
adc
xchg
xorl
jbe
jb
and
rclb
cmp
pop
shrb
sbbl
push
xchg
pop
out
rolb
inc
testb
pop
and
and
sub
add
adcl
adc
imul
scas
adc
and
inc
sbb
push
int3
fldl
ds
sti
or
sahf
add
cmp
aad
fimuls
ljmp
loope
or
push
ljmp
jge
xchg
add
adc
subb
cwtl
sub
and
push
sbb
sbb
aad
adc
mov
leave
xlat
stos
gs
shlb
cli
enter
pushf
adc
mov
jbe
xchg
xchg
add
imul
aam
jg
hlt
push
mov
dec
sbb
mov
inc
scas
pushf
repnz
arpl
insl
jp
add
mov
imul
pusha
mov
pop
push
pushf
xchg
adc
rcrl
addr16
loop
stos
out
movl
and
test
mov
xchg
mov
add
imul
push
ficompl
push
sub
sbb
sti
ret
push
lea
push
jbe
out
inc
mov
jne
pushf
push
arpl
pop
sub
stos
sub
inc
imul
push
cltd
bound
sbb
xchg
adcb
push
incl
sbb
ds
cmp
imul
cmp
push
sub
and
adc
aaa
xlat
mov
movsl
sbb
push
push
cmpl
pop
jo
xchg
sbb
lret
fadds
stos
xchg
and
repz
in
inc
fptan
sub
sbb
sbb
je
shrb
sbb
xchg
xchg
push
push
push
fcomps
pop
mov
loopne
pop
adc
sbb
rcrb
sti
js
mov
ljmp
xchg
mov
xchg
xchg
xchg
rcll
gs
add
scas
mov
iret
push
push
and
rcll
push
mov
leave
add
dec
push
lcall
xchg
inc
add
mov
aad
xor
push
fldcw
dec
fsubrs
dec
and
adc
mov
lret
adc
push
popa
pop
add
push
xor
stos
mov
loop
das
sbb
xor
and
xchg
sub
xchg
sub
rsqrtps
xchg
hlt
xor
shrl
leave
push
leave
sahf
enter
jp
rcrl
and
pop
pop
nop
ljmp
xor
jb
lods
jmp
adc
lods
jl
dec
fidivl
push
jno
xor
sbb
add
imul
sbbb
out
and
insl
pop
adc
sbb
cmc
sbb
pop
xchg
pop
mov
xchg
das
xchg
nop
push
int
outsl
cltd
sub
xchg
les
popf
sbb
pop
jae
or
imul
cmp
sbb
lods
sbbl
call
inc
les
ja
push
lcall
rcrl
stos
inc
cmp
xor
pop
fistpl
fmuls
pop
pop
pushf
xchg
inc
lea
dec
pop
push
hlt
cmp
int3
out
inc
movsl
xchg
xchg
ljmp
popa
aas
and
out
cwtl
lret
testb
add
dec
lret
adc
push
outsl
add
pop
mov
imul
scas
xchg
outsb
ds
lcall
std
adc
inc
loopne
lcall
pop
add
push
sub
push
sbb
jl
jmp
and
stos
fsts
ficoms
xchg
call
popl
adc
rclb
pop
mov
adc
mulb
hlt
xchg
xlat
outsb
std
ljmp
pop
jg
lods
sbbl
push
cmp
dec
push
sub
fsubl
and
jne
xchg
jb
loopne
test
sbb
adc
sub
and
push
test
lcall
xor
and
aaa
iret
inc
out
addr16
divb
popf
std
test
pop
daa
jmp
test
adc
inc
mov
negb
pushf
xchg
iret
inc
lea
sub
add
inc
jmp
push
sbb
or
or
or
push
sbb
xchg
das
pop
adc
into
xchg
sub
neg
sbb
add
push
jns
adc
xchg
mov
scas
roll
push
cmp
fbld
cmpsb
repnz
xchg
sub
sub
mov
loope
les
repnz
ljmp
sbb
stos
jns
add
sbb
push
adc
inc
sbb
jns
popf
xchg
sub
nop
stos
adc
lock
push
or
stos
popl
sub
sub
mov
popf
orl
adc
pop
jb
jno
mov
xchg
mov
nop
xor
fs
push
pushf
mov
or
or
fldenv
pop
mov
sbbb
add
fnstenv
nop
fisubrs
push
into
pop
xchg
inc
or
cli
inc
adc
pop
cltd
cmp
sarb
aam
pop
mov
mov
popf
sbb
adc
adc
xchg
mov
jne
xchg
loop
rcl
popf
sub
or
mov
outsl
in
shll
fisubrs
mov
addb
xlat
out
jg
test
xchg
cmp
xlat
sbb
cmc
inc
adc
scas
push
rcrl
sub
inc
jns
arpl
xor
out
fnstenv
add
or
sbb
xchg
lcall
pop
hlt
popa
das
add
xchg
adc
jbe
pop
adc
rcrl
inc
bound
jb
in
je
cli
cmp
lods
into
stos
pop
pop
cmp
inc
cltd
les
and
in
xor
xchg
jmp
add
cltd
hlt
push
push
sub
imul
xchg
aad
in
push
adc
pop
loop
sbb
lret
xchg
or
fiadds
fcoml
out
adc
pop
push
pop
xchg
sub
jge
pop
imul
sub
aad
daa
dec
shrb
fidivrs
pop
das
mov
sub
out
int
push
stos
out
adc
jno
fdivrp
loope
sbbb
dec
mov
push
sahf
pop
enter
lea
xchg
push
xlat
xor
mov
inc
bound
mov
cmp
push
xchg
xchg
cltd
das
adc
fcoml
mov
or
fnstcw
fmull
sbb
pop
cli
jnp
int3
sbb
mov
push
ret
fisttps
roll
xchg
cltd
sub
push
out
int3
ljmp
pop
andl
std
or
hlt
dec
out
lods
loopne
pop
sub
push
mov
fcoml
int3
mov
pop
fldcw
scas
lods
mov
cmp
xchg
mov
jge
das
stc
dec
rcrb
adc
inc
sahf
ficoml
jge
xchg
fnsave
sbb
xor
adc
xchg
sbb
xchg
pop
js
mov
add
cmc
inc
mov
jge
cs
leave
das
popa
mov
mov
pop
xor
into
push
push
xor
pop
adc
sbb
mov
xchg
rcll
adc
xchg
rclb
xchg
inc
fst
fsincos
push
cmp
jg
fimuls
outsl
push
mov
xchg
ret
mov
ror
xchg
repnz
mov
fdivp
mov
pop
fnstenv
adc
dec
push
pop
push
fistps
pop
sbb
push
rcl
push
inc
mov
mov
pop
std
cwtl
pop
push
adc
popf
pop
mov
push
dec
sub
adcb
and
leave
fst
push
and
sbb
sub
push
les
xchg
push
or
mov
das
sub
test
mov
xchg
mov
leave
mov
popf
mov
dec
ja
xchg
sahf
sbb
aam
push
psrlw
jo
sbb
leave
jbe
jle
lea
xor
out
les
jb
adc
adc
mov
mov
pop
ss
xlat
mov
les
xor
jb
mov
cmc
xchg
outsl
adc
mov
mov
pop
pop
pop
sub
xchg
cwtl
jne
xor
xchg
lcall
add
notb
adc
xchg
adc
scas
in
std
add
out
stos
mov
stos
fcoms
xor
push
aas
outsl
sub
pop
pushf
sub
sbb
mov
sub
mov
push
mov
sbb
stos
das
lods
gs
roll
insl
sub
inc
outsl
out
pushf
icebp
sub
mov
push
push
push
aad
xchg
stos
faddl
sbb
icebp
sub
out
push
dec
xor
add
mov
jge
ljmp
mov
cltd
push
push
xchg
jo
push
sahf
dec
push
les
push
cmp
into
mov
add
out
fldenv
enter
les
push
adc
pop
stc
lahf
mov
incb
adcl
push
push
stos
iret
stos
or
sbb
push
mov
pop
adc
xchg
movsl
cmp
scas
mov
jmp
sub
adc
xor
fnstcw
rolb
sub
mov
sbb
scas
xchg
sarl
mov
fmulp
imull
mov
loop
cmp
push
shll
xchg
xchg
push
mov
push
mov
mov
dec
ret
sub
cmpsb
push
aad
fistpl
pushf
add
lahf
push
jg
adc
adc
push
cmp
insl
xor
divb
bound
jmp
int
sub
xchg
xchg
lret
mov
enter
enter
xchg
push
xchg
sbb
in
push
sbb
shrl
cmp
test
fbstp
adcb
das
sub
xchg
aas
insl
mov
xchg
push
fucomip
popa
frstor
cmpsl
lret
fidivrl
add
call
push
and
push
push
outsl
sbb
add
sub
mov
loop
aam
sti
adcb
xchg
xchg
xchg
push
push
aad
arpl
mov
ljmp
and
shll
cmp
jo
adc
fsubrl
lock
xor
shr
rcrb
push
cmpsb
bound
xchg
fisubrs
mov
sbb
inc
shrb
cmpsb
push
int3
pop
pop
xchg
fsubrs
push
inc
xchg
movl
scas
shll
sbb
push
and
push
sub
pop
xchg
pop
js
addr16
popf
sbb
and
xchg
adc
movb
sbb
push
cld
pushf
filds
xchg
pop
fisubrl
aam
sub
push
mov
ja
addr16
cmp
fstpl
outsl
iret
lcall
mov
sbb
add
mov
jg
push
add
xchg
andb
sbb
fsubrl
adc
mov
xor
jnp
das
andl
sbb
mov
outsl
aas
aaa
fdivl
xchg
pusha
mov
sub
out
fsub
pop
fmull
dec
pushf
xchg
push
and
pop
call
adc
cmp
add
nop
pop
mov
ljmp
push
sbb
cltd
mov
pusha
loop
stos
fsubs
out
adc
js
sub
pop
sbb
int
rcll
xchg
loopne
mov
push
clc
and
push
xor
or
fists
adc
pop
out
shll
adc
fcompl
je
sbbl
lods
popa
in
push
adc
sub
pop
add
jne
ss
xchg
add
xor
pop
sub
scas
ljmp
lahf
sbb
cmp
push
insl
cmpsl
stos
push
lahf
mov
xchg
sub
xchg
ljmp
adc
fistpl
shll
ja
xor
pop
pop
xchg
addb
fstps
or
stos
pop
push
enter
ja
push
push
pushf
sbb
loopne
mov
roll
sahf
adc
ficoms
imul
push
lret
xchg
test
push
cmp
sbb
fwait
inc
ljmp
popf
movsl
cmc
xchg
mov
or
xchg
mov
adc
sub
cmp
rclb
sub
out
in
lods
push
inc
and
sbbb
sbb
inc
add
mov
stos
rcrb
push
push
pop
popf
push
or
xchg
ret
push
fisubs
dec
xchg
push
fsts
popf
and
xor
push
adc
cltd
inc
add
xchg
xchg
cmp
inc
xchg
sbb
pop
inc
push
push
jge
xchg
jle
lahf
mov
xchg
int
sbb
cltd
fisubs
or
xchg
pop
push
dec
aad
adc
stos
orl
ret
stos
outsl
push
sbb
dec
sbb
xchg
xchg
inc
sub
jb
dec
insl
mov
faddl
mov
xchg
or
adc
and
mov
mov
sub
fsts
insb
ss
fistps
inc
scas
inc
push
sub
fcomip
mov
sub
imulb
sbb
or
push
push
shrl
add
popf
xchg
sub
fbld
rcll
inc
out
inc
aam
sbb
adc
jbe
repnz
adc
or
mov
push
sbb
sahf
enter
pop
fimuls
jl
ljmp
outsl
adc
and
push
xor
push
mov
pop
mov
aam
sub
in
mov
pop
push
and
or
flds
pop
fstp
lods
mov
dec
sub
xchg
aam
mov
push
xchg
pop
cmp
push
fmull
pop
push
sbb
scas
das
repz
repnz
xorl
fmul
xchg
das
sbb
push
outsl
xor
xchg
xchg
cwtl
ror
dec
pop
inc
xor
or
push
jmp
das
sub
mov
add
add
ljmp
icebp
pop
push
push
lahf
mov
mov
pop
lock
sbb
int3
out
xor
leave
xchg
rol
adc
pop
fwait
out
ficoms
std
push
sbb
sub
push
xchg
out
pop
cwtl
mov
data16
adc
push
push
sub
mov
push
dec
inc
loop
jge
xchg
shll
xchg
rcll
sbb
dec
test
clc
les
jecxz
add
add
filds
stos
int3
jns
push
adc
aam
lock
jns
push
mov
add
sbbb
mov
popf
sbb
inc
rcll
imul
mov
stos
sahf
int
cltd
xchg
pusha
enter
call
das
inc
fwait
xchg
xchg
mov
out
xor
pop
xlat
dec
xchg
outsl
pop
sbb
ss
pushf
leave
xchg
adc
inc
cltd
push
fildl
push
mov
aad
notb
stc
jbe
subl
sub
outsl
out
sub
mov
mov
repnz
popf
rcl
cmpl
sub
jle
inc
mov
lods
sbb
lret
push
inc
xor
xor
push
adc
stos
jbe
in
popf
ret
mov
xchg
sahf
outsl
loop
das
cld
call
and
pushf
sub
stos
sbbb
rcr
and
ror
adc
sub
adc
xor
xchg
pop
mov
in
pop
in
and
pop
shrb
adc
addr16
daa
ss
pop
outsb
fcoms
or
shrl
push
sbb
gs
into
xlat
scas
push
test
inc
or
out
lea
add
xchg
sub
pop
xlat
pop
cmp
mov
int
aam
cmc
jl
lahf
adc
sbb
std
sbb
adc
push
sub
imul
sub
pop
outsl
inc
adc
fiadds
push
push
or
and
into
pop
aam
mov
sbbl
add
add
popf
inc
xlat
and
push
add
push
sbb
faddl
cmp
xchg
popf
mov
or
or
cltd
mov
inc
std
sub
loop
xlat
ret
pop
cwtl
xchg
adc
insl
adc
adc
test
loopne
mov
jae
test
mov
and
xor
inc
add
push
or
xlat
xchg
add
sbb
xchg
pop
xchg
mov
add
xchg
mov
xor
jno
cmp
xor
sub
rcr
push
xchg
mov
sbb
outsl
inc
leave
xchg
push
and
and
sub
cltd
aad
push
dec
mov
shl
adc
mov
pop
push
bound
and
stos
rcll
cmp
sub
push
jle
or
cltd
push
std
popf
sbb
lcall
adc
xchg
xchg
das
cmp
pop
rol
push
push
mov
clc
outsl
fstps
mov
out
or
das
mov
and
out
movl
loop
xlat
xchg
mov
push
sub
pop
or
sbb
sahf
and
and
adc
add
xchg
imul
lret
jo
adc
dec
pop
xchg
push
push
ja
mov
dec
js
and
test
adc
cmp
xchg
push
xchg
pop
jo
dec
lcall
inc
ds
sub
stos
cmp
xor
pop
cmp
sbb
fisubrs
stos
ret
mov
lea
adc
and
cmp
ss
sbb
lcall
int
fcoml
pop
test
jae
jge
add
dec
test
push
rcl
pop
sbb
push
cmpl
sbbb
jl
add
imul
mov
testb
cwtl
xchg
orb
popf
xchg
sub
adc
xchg
pop
aad
xchg
outsl
popf
dec
adc
inc
add
and
leave
sub
push
sbb
dec
ret
pushf
sub
cmp
push
sahf
scas
int
pop
xchg
stos
cltd
stos
lret
pop
sbb
and
das
das
sahf
mov
jmp
outsl
faddl
sub
push
or
cmp
sub
rclb
xlat
mov
or
pop
sarb
imul
mov
das
push
int
xchg
push
in
mov
pop
sub
out
push
insl
in
push
sbb
xchg
sub
cmp
fcmovnb
loop
jmp
or
in
cmp
testb
and
lret
pop
pop
jmp
sbb
inc
aad
adc
sbb
outsl
cmp
sub
dec
pop
sbb
filds
xor
pop
push
or
imul
push
popf
pop
leave
orb
in
push
sub
jge
adc
inc
push
mov
paddusb
lcall
mov
cmp
push
imul
mov
inc
push
filds
sub
mov
into
sub
adc
push
mov
push
addl
lods
push
scas
cltd
mov
repnz
xchg
and
in
add
xchg
dec
adcl
push
pop
outsl
mov
sub
test
xlat
popf
scas
outsb
mov
mov
in
cld
ljmp
aad
std
movsb
out
into
mov
mov
lods
xchg
ficomps
frstor
add
push
inc
xchg
push
or
popf
xor
add
fs
push
xor
out
pop
adc
ljmp
add
push
xchg
test
lret
xor
ljmp
fsubrs
mov
or
les
stos
xor
adc
fisttps
mov
int3
push
sbb
es
mov
leave
fidivrs
sub
push
icebp
mov
scas
pusha
mov
popf
int
pop
pop
sbb
xor
mov
popf
sbb
les
pop
imul
xor
xchg
rep
add
add
fs
popf
xor
int
movlhps
sbb
mov
pop
xchg
adc
sbb
push
aam
pop
push
stos
movl
aam
loop
aam
scas
sarb
xor
lods
sub
mov
das
mov
pushf
cltd
pop
sbb
inc
or
add
in
fists
lret
push
pop
cmp
and
cwtl
ret
pop
xlat
xchg
and
pop
out
cltd
inc
test
stos
adc
popl
fcmovu
sbb
sbb
sub
and
push
out
stos
adc
in
sub
aam
outsb
loop
ds
mov
push
jns
xchg
lret
jbe
enter
push
sbb
out
adc
lds
push
addr16
movl
insb
push
push
data16
rcrl
xchg
inc
mov
test
push
out
push
pop
ret
call
cs
sub
jmp
push
add
sub
pop
pop
push
mov
cmp
ljmp
pop
in
sbb
test
adc
das
cli
ljmp
sti
sub
pop
das
dec
pop
mov
mov
rcrb
xchg
mov
sub
push
dec
test
shlb
insb
sahf
jg
xor
xchg
push
push
pop
push
lcall
jle
cmp
das
cmpsb
and
push
xor
cmp
imul
jmp
add
imul
push
push
xor
pop
xlat
xchg
jne
ret
scas
pop
xor
ret
mov
aaa
fwait
pop
shll
stos
ds
adc
sub
push
fs
push
aaa
cmp
xchg
loop
aam
inc
dec
cmp
inc
xchg
and
fnstenv
or
ret
pop
insb
xor
adc
adc
or
sbbb
and
cmp
inc
xchg
fimuls
inc
das
sbb
cltd
mov
sbb
xchg
aad
mov
cmp
icebp
popf
xor
loopne
movsb
sbb
jnp
push
repz
int3
jmp
pushf
inc
out
std
cltd
sbbl
dec
out
ljmp
mov
inc
add
xchg
adc
xchg
sub
cmpsl
xor
aad
adc
fistpll
add
xchg
cltd
cs
ss
popf
stos
mov
sahf
add
xchg
inc
insl
cmp
push
fcoml
ja
aam
inc
push
xor
icebp
ds
out
pop
inc
adc
jbe
push
sub
add
adc
pop
xchg
xchg
xchg
les
xchg
rcrb
cltd
pop
insb
add
push
push
das
aas
cltd
or
push
xchg
sub
mov
adc
xchg
sub
push
adc
dec
adc
push
out
fsubl
add
add
pop
es
sub
xchg
push
outsb
cmp
sbb
push
push
inc
push
jno
les
jmp
popa
shl
push
dec
push
sarl
lret
aas
lods
push
sbb
adc
push
stos
push
pushf
xchg
shr
inc
addr16
mov
adc
jge
sbb
inc
aaa
xor
pusha
cmp
ljmp
shlb
andb
fidivrs
movsb
jb
inc
stos
aad
lods
mov
or
rclb
push
pop
adc
sbb
andb
mov
sbbb
sbb
pop
ljmp
fisubs
adc
pop
dec
pushf
sub
push
rcll
xchg
sbb
add
adc
push
rorb
fstps
jae
ds
pop
push
xchg
fistpl
pop
out
pushf
pop
jmp
icebp
cmp
push
test
jle
test
adc
loopne
and
push
popf
push
xchg
nop
jne
add
push
adc
gs
sbb
xchg
jno
fisttpll
shl
mov
xlat
outsl
hlt
cmc
fistps
xchg
jo
mov
push
mov
push
push
xchg
pop
shrb
xchg
push
sub
mov
dec
sbb
fcmovnu
push
or
push
pushf
xchg
or
aad
push
pop
and
outsl
lret
imul
push
inc
push
popf
xchg
xor
sub
inc
push
xor
sbb
adc
shr
xchg
push
sub
push
repnz
xchg
xchg
lret
fcompl
fldcw
sbb
inc
xlat
xchg
stos
pop
add
imul
push
sub
dec
inc
aad
fyl2xp1
add
push
addr16
mov
in
mov
xchg
aad
adc
sbbl
fsubs
roll
adc
sbb
sbb
add
sbb
push
das
xchg
dec
stos
ficompl
jae
jge
push
popf
repnz
inc
lcall
cltd
sub
out
sub
adc
out
lods
out
paddd
pop
fisubrl
xor
cmc
xor
xor
adc
sbbb
arpl
mov
push
loopne
int3
xlat
pop
popf
aad
mov
xor
aam
mov
xor
shl
fcmovnu
inc
xor
sub
sahf
push
xchg
push
push
pop
stos
mov
mov
imul
adc
fwait
and
aaa
enter
dec
push
dec
mov
pop
scas
fcomip
mov
mov
out
out
pop
xchg
scas
and
shrl
xchg
jb
enter
sbb
aad
into
subl
fstpl
push
adcb
add
pop
out
and
sub
xchg
sbbb
stos
mov
xor
dec
cltd
adc
mov
xlat
shlb
lea
xor
inc
cwtl
xor
gs
add
adc
pop
dec
adc
sub
lret
xchg
movsb
sbb
pop
push
faddl
adc
push
fld
fst
pop
ds
aad
xchg
jg
pop
adc
lret
add
mov
xchg
jp
imul
sub
or
rcll
adc
xor
mov
mov
das
stos
pop
lea
xchg
pusha
sub
push
aad
ficomps
adc
fwait
push
xchg
push
sbb
je
pusha
lret
mov
adc
into
pop
push
leave
imul
xlat
bound
popf
sahf
xor
sub
rcr
inc
xchg
sbb
push
add
in
subb
cmp
mov
fstps
pop
sub
sbb
push
add
rcr
shrl
pop
in
and
pop
mov
and
mov
xchg
das
sbb
pop
lods
sbb
xchg
sbb
pop
inc
mov
lea
xchg
mov
sbb
cltd
test
push
sub
ficomps
fnsave
out
push
ret
cltd
aam
aam
out
add
jge
aaa
pop
addr16
das
add
pop
adc
pop
in
add
pop
sbb
imul
xchg
push
setb
out
bound
and
and
pop
or
inc
lret
push
mov
test
sbb
cmp
xchg
and
fcmovbe
xchg
test
sub
movsb
aad
sub
daa
push
negb
pop
mov
jo,pt
push
sbb
xchg
ss
rclb
sub
into
cltd
sbb
outsb
push
hlt
xchg
mov
cmp
call
fcomps
stos
fwait
push
push
mov
out
mov
pushf
negb
push
stos
pop
scas
fildll
popf
xchg
out
add
push
push
sbb
aam
add
xchg
sbb
fildll
mov
mov
jbe
rolb
sbb
mov
flds
shlb
sbb
jmp
cmp
sti
mov
pop
sahf
xor
xchg
insl
les
jmp
xchg
addr16
into
jo,pn
add
inc
and
jo
and
xchg
jge
adc
mov
cltd
frstor
shl
icebp
sbb
cmpsl
and
sub
les
cmp
and
movsl
mov
xchg
adc
lcall
lcall
push
cli
push
pop
push
fisttpl
pop
push
imul
push
stos
xchg
xchg
jne
inc
pop
push
cmp
aam
sub
addr16
outsl
xlat
inc
push
sbb
inc
outsl
gs
pusha
int3
push
fistps
sub
xchg
pop
fidivs
mov
shl
test
notl
pop
add
out
sub
repnz
mov
jle
jle
sahf
sbb
sub
outsl
cmp
pop
scas
mov
or
pop
lods
dec
aad
daa
push
aad
into
adc
adc
fistpl
push
pop
ljmp
scas
push
pushf
gs
sub
mov
inc
std
xor
inc
ficoms
cmp
mov
sahf
adc
jp
std
rclb
and
xchg
xchg
dec
mov
fistpl
dec
mov
push
pop
push
sub
loopne
pop
push
shll
push
pop
dec
fildll
pop
sarb
int
stos
adc
arpl
inc
cmpb
fcompl
ds
and
sbb
xor
and
fistpl
sub
push
push
nop
rorl
sub
adc
mov
ljmp
scas
pop
xlat
rorl
fs
dec
push
cmp
fcompl
xlat
rorb
lcall
dec
cltd
dec
or
pop
push
xchg
and
cli
out
sub
inc
push
adc
ret
jne
jae
push
and
sbbb
inc
xchg
or
rorl
popf
lcall
ficomps
adc
jg
xchg
xchg
xchg
xchg
js
push
ljmp
add
jmp
sbb
out
ror
push
or
pop
pop
out
pop
fstps
pushf
in
inc
push
push
sbb
aam
xchg
and
ljmp
call
push
rcll
push
test
xlat
mov
sbb
inc
andnps
test
dec
jecxz
ss
ljmp
repnz
jae
xorb
push
inc
das
adc
sub
sbb
lods
jle
push
or
jb
adc
xchg
xchg
add
push
push
bound
iret
in
push
inc
cmc
push
ss
xor
push
out
out
xor
xchg
jge
outsl
adc
xchg
xadd
xchg
add
pop
popf
push
scas
stos
or
roll
fstpl
mov
mov
bound
inc
push
pop
mov
dec
movsb
stos
stos
ficoms
lret
out
sbb
xchg
cmp
cmp
outsl
stos
fstl
rcrl
sahf
sbbb
mov
and
enter
sbb
nop
fdivrs
xchg
push
sbb
xor
sub
adc
lahf
cmp
cmp
sti
adc
scas
and
sub
in
mov
loope
xor
subb
xor
test
aas
mov
or
outsl
inc
nop
xchg
and
sub
pop
xchg
repnz
pop
pushf
xchg
and
ret
ljmp
sub
push
cmp
push
cmpsb
sbb
shrl
imul
xchg
push
faddl
loope
sbb
and
test
into
sbb
push
mov
fmul
push
xchg
mov
fsubs
pop
jge
push
cltd
lock
jne
pushf
pop
adc
stos
xchg
push
int
adc
jb
int
rcr
fsubp
repnz
sub
fwait
jge
pushf
push
push
ljmp
stc
leave
pop
push
int3
sbb
fs
push
and
lods
xor
test
mov
xchg
imul
pop
pop
addr16
ret
lret
adc
xchg
lods
pop
sub
xor
xlat
shrl
movq
and
and
fisttps
addl
mov
add
jbe
xor
sub
cmp
dec
mov
stos
das
pop
xchg
pushf
pop
cltd
mov
or
adc
mov
sbb
in
cltd
push
push
insl
mov
pop
and
inc
stos
repnz
push
roll
aad
icebp
and
push
lcall
push
mov
inc
mov
pop
mov
cmp
push
cltd
imul
mov
jl
inc
sub
shrb
negl
int3
mov
cltd
push
xlat
xchg
inc
add
ficomps
sub
stos
dec
pop
sbbl
push
and
inc
pop
push
bound
aas
sub
adc
mov
cmp
mov
orb
imul
mov
xchg
jmp
fstl
loopne
js
ficoms
shr
xlat
pop
gs
aad
setg
fcompl
adc
outsl
push
sub
dec
push
sarl
cmp
pop
scas
aas
lea
not
cmp
adc
add
add
ja
int
das
dec
lret
cmp
sahf
outsl
fcompl
imul
mov
sbb
xchg
data16
sub
sahf
mov
adc
add
sbb
sbb
les
push
push
sbb
xlat
push
fld1
loopw
data16
pop
pop
pushf
loopne
xlat
push
and
push
jb
popl
adc
test
sbb
cmp
aam
repnz
loope
xchg
cmp
xlat
mov
xchg
push
sub
leave
xor
mov
aad
add
push
sub
pop
sahf
scas
sbb
pop
stc
sbb
fstps
mov
daa
gs
add
lods
enter
pushf
cltd
xchg
xlat
sbb
cltd
push
outsl
ds
ds
sbb
pop
lods
gs
push
bound
push
pushf
cmp
pop
cmp
push
xchg
cltd
xchg
push
sub
imul
pop
xchg
jne
das
pop
aas
add
test
xchg
aas
add
imul
adc
out
inc
dec
inc
push
ficoms
das
rcll
jne
push
lock
mov
flds
minps
xor
shlb
fsubs
adc
sbb
push
adc
xchg
xlat
sbb
adc
outsl
out
pop
sub
aas
out
fisubs
mov
ljmp
sbb
les
pop
xchg
push
sub
mov
pop
xlat
rcll
adc
push
sbb
sub
or
push
jge
aam
lahf
enter
inc
cmp
and
xlat
or
lods
adc
stos
je
add
push
xchg
cmp
test
enter
add
lea
in
lods
das
sub
out
imul
adc
cltd
push
movl
add
cmp
and
cli
inc
test
aam
dec
sub
adc
push
loope
testb
push
cmp
adc
mov
sub
lcall
and
ljmp
popf
cltd
pop
stos
push
fcomp
sub
and
movsl
cmp
xlat
fcomps
sbb
mov
lret
and
rorl
pop
xchg
or
fldl
mov
sbb
jo
and
mov
enter
xor
loop
fdivl
lcall
pop
cmp
and
stos
fldz
sbb
adc
ljmp
dec
adc
cmp
fmull
aam
out
ficoml
loope
sarb
out
sbb
gs
pop
sub
imul
aad
fimull
jb
pop
cmp
outsl
or
clc
pop
out
repnz
push
stos
push
mov
mov
jge
fcoml
jl
add
jmp
in
xchg
out
xor
sub
mov
xchg
xchg
test
iret
pop
rcrb
sbb
push
add
push
push
adc
arpl
fwait
push
rcrl
jb
and
shll
loop
out
out
push
cltd
adc
cwtl
push
adc
jne
loope
outsl
das
xchg
jmp
push
inc
mov
xchg
add
adc
out
adc
add
int3
popf
adc
fidivrl
pushf
test
push
xchg
and
aas
add
ja
bound
pop
jmp
mov
es
testb
mov
iret
fnstsw
lods
hlt
adc
jle
xlat
inc
add
mov
pop
fmuls
js
stos
gs
inc
mov
sbb
ret
push
push
fcmovnu
sbb
mov
pop
mov
sahf
xchg
inc
mov
stos
mov
adc
scas
sub
pop
out
jmp
or
test
sbb
xchg
xchg
cmc
push
hlt
dec
mov
xchg
or
push
pop
adc
sub
dec
les
adc
mov
stos
xchg
dec
adc
push
roll
not
and
sbb
cmp
adc
xchg
pushf
test
orb
add
inc
push
ficoms
stos
adc
mov
das
sub
cld
push
xor
mov
fcompl
adc
adc
cs
shrl
les
outsb
add
push
bound
icebp
sub
cmp
iret
xchg
sar
sub
sbb
mov
and
jge
outsl
shlb
xor
xchg
ret
xlat
push
into
or
lock
sub
subl
inc
fnstsw
rcll
dec
sbb
inc
subl
fs
pop
xor
pop
sub
addr16
cmc
shrl
js
mov
fiaddl
ficoms
popf
xchg
test
lea
cmc
rolb
test
cmp
shrb
je
adc
shrl
scas
xchg
imulb
lea
sahf
out
rcl
sbb
jecxz
ficompl
cmp
push
xchg
loop
je
xor
push
pop
fists
mov
outsl
scas
pop
jae
popf
adc
xchg
push
xchg
fbstp
sub
jae
pop
push
dec
mov
sbb
das
mov
fildll
push
fsubrl
pusha
fsubs
scas
rcrl
js
imul
popa
fstpl
jg,pt
imul
xchg
stos
and
faddp
repnz
fdivrl
adc
ja
inc
adc
inc
rcr
sub
xchg
loop
inc
push
push
pop
push
jno
rolb
xor
xchg
lret
cmpsl
dec
outsl
cmp
fcompl
cmp
pop
add
adcb
or
sbb
rcll
xchg
outsl
jno
cmp
shlb
push
xchg
sbb
xlat
les
xchg
inc
sub
adc
pop
lods
cmp
std
js
push
push
mov
gs
xchg
or
pop
jle
xchg
lret
dec
push
adc
imul
push
in
call
pop
push
popf
sbb
das
leave
push
imul
aam
call
lock
fadds
out
push
push
repnz
out
fsts
loop
call
push
jge
sahf
or
pop
and
push
sub
add
rcrb
xlat
xor
pop
inc
sub
push
lea
fcoml
outsb
add
in
pop
add
dec
push
sahf
fstl
add
sbb
dec
fadd
pop
pushf
cltd
pop
sub
push
inc
push
cmp
imul
mov
pop
adc
push
sbb
lcall
stos
xchg
sub
xchg
push
push
push
mov
roll
fildll
rcr
push
mov
and
imul
jae
fldl
xchg
and
fscale
sbb
imulb
lods
ret
mov
sbb
xchg
sub
xchg
add
xchg
push
xor
sub
and
cmp
sub
jbe
push
sbb
push
pusha
add
and
sbb
pusha
sub
js
sbb
out
decl
and
xchg
adc
ret
enter
sbb
mov
sbb
sbbb
stos
andb
jge
xchg
inc
push
sbb
cli
sbb
in
cmpsb
sub
xlat
pxor
das
fisubs
mov
xor
pop
pop
int
filds
push
addb
jmp
fstpl
cmpsb
add
xor
imul
sbb
scas
rcrl
das
lds
adc
sbb
stc
mov
andl
es
fistps
imul
cmp
push
inc
sbb
inc
mov
leave
cmp
or
push
popf
push
ljmp
mov
cmp
xchg
icebp
adc
divb
inc
sbb
pop
and
mov
cltd
fsubl
mov
out
mov
jo
mov
adc
imul
pop
loopne
sub
fst
xor
fwait
rorl
movsl
xchg
out
mov
sahf
sub
pushf
outsl
bound
rolb
mov
sbb
add
xchg
pop
sahf
sbb
dec
adc
sbb
fiadds
iret
lods
lods
pushf
popf
pop
adc
lock
rcrb
xchg
inc
lods
stos
xor
fcom
ret
outsl
hlt
pop
lcall
cld
adcb
das
xchg
repz
mov
adc
mov
xchg
xchg
adc
fdivrl
and
cmp
fidivl
cmp
pop
sub
fld
push
push
ljmp
add
addl
inc
test
bound
jo
cli
dec
int
out
pop
pop
push
lea
mov
sbb
sbb
push
scas
sub
mov
mov
jge
sbb
mov
push
cltd
add
int
inc
push
push
pop
sbb
loopne
pop
addl
add
stos
das
inc
lahf
pushf
setae
pop
rclb
les
scas
test
fmuls
pushf
push
pop
xchg
cmp
sbb
xchg
aam
int3
push
xchg
call
push
cmp
and
sub
fstps
pop
in
adc
mov
push
xor
aad
stos
cmp
and
sub
adcl
fcoml
icebp
inc
mov
repnz
sub
outsl
xchg
sub
push
inc
das
adc
jmp
push
push
or
xchg
sub
imul
sub
inc
rcll
int3
xchg
das
push
sub
mov
popf
das
xchg
and
mov
push
inc
xlat
std
push
push
hlt
rcl
adc
out
rclb
cmp
test
js
push
xchg
or
ljmp
push
das
sbb
stos
pop
das
mov
jmp
std
aam
push
xor
pushf
ffree
outsl
push
pop
cmpsl
jle
int
aam
cltd
mov
push
and
mov
out
das
sarl
xchg
lods
dec
push
fidivrs
dec
inc
pop
pop
stos
cltd
cwtl
jns
xlat
mov
ret
popf
cltd
push
ljmp
xchg
cmp
adc
push
sub
and
sbb
int
sub
cmp
push
loopne
sti
add
push
jnp
insl
ficoms
push
xchg
inc
lret
psrlw
das
lret
adc
sbb
or
mov
push
lock
adc
pop
stos
push
idiv
or
dec
or
mov
scas
pop
mov
push
addl
adc
mov
push
push
jb
push
loope
mov
jb
or
mov
jns
mov
push
rorl
pop
bnd
loopne
xor
stos
xchg
xchg
rclb
cld
test
push
popf
movaps
clc
pop
shr
stos
fcoms
mov
or
mov
adc
or
scas
pushf
and
or
stc
add
push
push
mov
addr16
sub
movsl
pop
xchg
sarl
xchg
shl
pushf
cmp
jbe
cmp
addl
adc
mov
in
push
mov
icebp
and
inc
adc
lret
adc
jge
xchg
xchg
jge
fcompl
xchg
mov
js
sbb
lods
add
push
sbb
adc
push
loop
adc
ljmp
popf
pop
popf
cmp
inc
inc
lret
sar
mov
leave
adc
js
push
mov
int
xchg
das
rcr
pop
lock
xchg
popf
pop
push
repnz
inc
sub
add
ficoms
pop
std
push
push
cmp
stos
or
aad
in
pushf
push
mov
ret
test
or
in
sbb
test
push
sub
pushf
stos
filds
cs
pusha
cmp
pop
sbb
negl
xchg
xor
xor
jge
xchg
sbb
xchg
fidivs
xchg
cmp
rcr
dec
sbb
sahf
push
or
outsl
and
sbb
xchg
xchg
add
mov
test
push
aas
inc
inc
push
or
adc
pop
xchg
rcrl
repz
sbb
das
fsubrl
aam
nop
stos
xchg
imul
add
push
push
inc
push
mov
xchg
lret
push
sbb
push
test
pop
mov
push
inc
xor
mov
mov
sbb
ds
or
aam
cmp
cld
das
sub
fcoml
shrl
ss
cli
sub
lea
adc
aam
sahf
ss
pop
mov
inc
push
push
dec
pushf
popa
lahf
out
sbb
adc
push
pop
push
jo
aad
leavew
retw
pushf
addr16
xchg
adc
pop
cmp
push
cmp
adc
xchg
mov
scas
mov
pop
pop
pushf
push
xchg
sbb
int3
inc
fimuls
xor
and
cwtl
sbb
or
add
add
movsl
loop
ret
movl
clc
xchg
ds
adc
out
scas
sub
pushf
mulb
and
xchg
xchg
loop
add
das
into
imul
jne
adc
dec
stos
mov
setp
stos
xor
sbb
jl
xchg
lret
mov
leave
push
or
fstpl
ds
push
xchg
addl
adc
lds
std
dec
daa
xchg
ficoms
dec
sub
sub
cmpsb
fisttpl
jns
aam
mov
pop
andl
outsl
mov
fiadds
add
push
cmp
dec
sbb
lcall
cmp
sub
push
movsl
aas
jge
adc
frstor
adc
mov
fadds
loop
xlat
xchg
pop
sbb
cmp
adc
push
lahf
sbb
jecxz
lods
push
xlat
xorl
pop
popf
movsl
mov
fsubs
add
fucomp
xor
cltd
imul
pop
sub
jae
xchg
pop
pushf
jge
sahf
sbb
movsl
stos
fnstcw
je
xchg
xchg
pop
xor
xor
push
push
sub
aad
das
aam
pop
cmp
fists
cwtl
nop
sub
adc
scas
inc
sbb
push
mov
mov
mov
adc
push
push
stos
pop
mov
cltd
push
mov
or
xlat
das
outsl
fstpl
inc
int3
pop
sbb
inc
cli
out
sub
push
scas
dec
jno
xchg
push
adc
fldenv
andb
xor
movsl
je
ja
inc
push
les
xor
arpl
sub
cmp
loopne
das
xor
nop
xchg
sub
inc
mov
ror
in
cmc
fsts
shll
sub
cltd
xlat
out
aam
mov
adc
sbb
add
mov
adc
lods
mov
push
and
xchg
push
pop
nop
xor
xchg
adc
mov
push
xchg
fcompl
mov
ds
rcrl
push
cmp
pop
out
xchg
cltd
int
scas
pop
xchg
or
sub
popf
push
aas
rolb
ficoms
or
leave
xchg
adc
std
enter
xchg
push
sti
sbb
mov
insl
jae
fists
sahf
inc
mov
int3
xchg
out
clc
mov
popf
pop
adc
test
fldl
sbb
pop
push
popf
jno
jl
nop
mov
mov
call
mov
push
inc
pop
push
popf
adc
sbb
clc
bound
aad
jmp
lcall
sbb
out
push
add
adc
xlat
test
and
pop
loop
inc
sbb
mov
mov
mov
pop
pop
in
and
in
sub
pop
push
adc
pop
pop
lret
push
outsb
pop
pop
ffreep
arpl
jbe
pushf
movsl
mov
and
aam
jo
lret
daa
xchg
add
push
xor
cmp
ljmp
mov
lods
lock
xchg
outsl
stos
lods
pop
sub
pusha
pop
notl
add
adc
sub
add
pushfw
and
in
sub
cmpsl
dec
sahf
push
ds
sti
xchg
sahf
push
out
aad
xlat
sbb
sub
adc
cmpl
sbb
or
sarb
add
inc
mov
stos
jnp
mov
xor
and
xchg
sbb
rcll
lret
adc
adc
aas
pop
adc
push
mov
aad
pop
xchg
sahf
inc
sbb
in
pop
mov
xchg
cs
pop
imul
dec
sti
inc
fs
in
ficoml
rcll
sahf
testl
push
push
cmp
mov
mov
sub
push
xchg
push
sub
sub
add
jge
rcl
subb
icebp
sub
cmc
enter
decb
ljmp
ficomps
insl
int
xchg
or
stc
fs
repz
jb
adc
pop
push
inc
fisubrl
cmp
xchg
or
out
adc
sub
xchg
mov
test
aam
xlat
stos
xchg
push
cmp
fisttps
xchg
das
push
incl
popf
xchg
fldl
add
mov
dec
jnp
xchg
in
sbb
sbb
mov
sbb
into
push
add
outsl
push
and
cwtl
push
sahf
push
stos
pop
cmpl
add
inc
adc
cmc
jo
pop
inc
mov
and
xchg
sbb
add
push
push
push
xor
shrb
mov
mov
jp
scas
pushf
push
push
jge
in
in
sahf
sub
pop
pop
mov
jo
xchg
fiaddl
enter
mov
mov
mov
cltd
xchg
sub
les
add
ss
frstor
int3
push
cmp
mov
jbe
xchg
pop
push
leave
push
pop
and
cmp
or
xchg
adc
aad
in
rcll
lea
ret
lea
adc
int
orb
adc
mov
push
sahf
bnd
push
add
test
inc
shlb
lock
nop
out
or
pushf
mov
sahf
ljmp
mov
iret
sbb
lcall
xor
sahf
sub
imul
pop
dec
das
rolb
adc
sbb
xchg
adc
or
loope
nop
add
pushl
test
mov
pop
push
out
mov
rcl
xchg
lods
fiadds
mov
imull
sub
and
sub
pop
push
push
mov
pop
xchg
adc
fwait
imul
mov
movsb
mov
xlat
adc
sahf
adc
xlat
stc
sub
xchg
aam
pop
std
mov
mov
popl
out
ret
mov
lea
mov
in
in
sbb
inc
xchg
mov
push
push
stos
dec
xchg
pop
xchg
push
pop
loopne
push
shlb
das
sub
mov
inc
pop
pop
xchg
sub
jbe
push
cltd
lret
push
mov
jmp
nop
push
xlat
loopne
fsincos
pop
push
mov
mov
jnp
mov
xchg
or
enter
inc
scas
push
into
popa
and
ja
sub
test
rclb
or
sbb
pop
outsl
pop
cmp
sub
loop
mov
xchg
test
sub
stc
fisttpll
adc
pop
call
out
mov
aas
sub
scas
aad
xorb
fldcw
into
pushf
xchg
fisubs
xor
xchg
bound
std
mov
or
pop
in
or
mov
mov
stos
cltd
add
push
stos
cmp
les
out
jle
pop
sub
pop
faddl
adc
popa
orb
popf
add
rol
in
popf
aad
sbb
adc
scas
in
add
dec
std
mov
and
pop
push
and
and
js
jbe
mov
xchg
sbb
int3
mov
flds
push
in
sbb
xchg
test
sahf
xchg
adc
lea
pop
sbb
int3
lea
sub
sub
loop
fst
xchg
pushf
push
aam
fwait
into
das
ljmp
pop
adc
arpl
ja
push
dec
sub
push
imul
aam
ftst
inc
hlt
sbb
inc
xchg
and
jns
fisttps
int
or
xchg
add
push
mov
mov
and
loopne
shrl
shl
pop
sub
sub
xchg
out
lret
mov
fdivrl
xor
xchg
mov
adc
insl
inc
outsl
subl
sbb
sbb
xchg
adc
negl
push
xor
sarl
jmp
sub
lea
pop
pop
push
repnz
xchg
pop
push
ret
popf
adc
push
pop
mov
mov
rcr
stos
insl
les
out
inc
adc
push
cmp
sbb
mov
xchg
mov
mov
pop
fadd
shrb
xorb
sub
pop
sub
pop
stos
fcmovu
mov
push
sub
outsl
pop
push
sbb
pop
aaa
push
add
fwait
shr
adc
inc
pushf
popf
push
ljmp
mov
out
jo
lret
jnp
movb
addr16
push
movsb
test
sahf
push
sbb
addr16
stos
jg
shll
or
les
imul
lods
and
push
out
adc
dec
pop
push
fimuls
and
push
push
ss
mov
push
pop
xchg
popf
push
das
mov
sbb
xchg
inc
adc
or
push
aas
lcall
pop
inc
imul
out
lods
cltd
xchg
push
pop
fwait
inc
lods
xchg
das
add
and
mov
sub
pushf
mov
bound
insl
xor
pop
adc
icebp
push
xor
and
scas
dec
sbb
add
js
scas
cmp
or
sahf
adc
pop
xchg
cld
cltd
leave
or
and
cmp
add
xchg
fcomip
xchg
stos
mov
adc
xchg
push
mov
jbe
lret
fsub
inc
cs
sub
adc
xchg
push
out
jle
xor
or
sbb
sub
test
cltd
imul
adc
pop
sbb
fs
xor
std
sub
cmpsb
mov
ficomps
fsts
lods
repnz
iret
test
xor
push
adc
js
push
repz
sub
clc
cwtl
hlt
cmp
pop
outsw
push
or
aam
mov
pop
adc
jle
pusha
inc
sbb
jae
adc
add
fmul
add
sbb
cmp
pop
sbb
mov
jl
lods
std
sahf
sbbl
adc
sub
lret
xchg
or
call
or
push
push
cmp
mov
sub
xchg
inc
rolb
sbb
scas
pop
bound
leave
xchg
xlat
roll
push
inc
inc
scas
cltd
add
aas
dec
sbb
jg
xchg
push
pushf
and
adc
sahf
dec
sub
add
sbb
xchg
push
jmp
sub
sub
adc
inc
adc
push
xchg
mov
out
fstl
dec
rcrb
scas
pop
stos
push
adc
inc
xchg
pop
sbb
mov
and
fs
mov
pushf
xlat
pop
mov
cmp
xchg
popf
aad
imul
fistps
xchg
xor
lea
mul
pop
shl
mov
pop
fldcw
cltd
loop
push
cli
push
cmp
in
pop
rol
sub
cmp
scas
imul
cltd
add
xor
mov
inc
dec
testb
aas
out
add
andl
sbb
jg
mov
lods
out
test
xchg
adc
pop
xor
int3
pop
addb
pop
sbb
shlb
xor
rclb
shr
loopne
aam
fdiv
ret
push
ljmp
push
sub
jne
faddl
xchg
pop
fistl
sbb
xlat
setb
fiadds
int3
rcrl
outsb
aad
cmp
fstpl
adc
lret
sub
aad
ret
cltd
shll
xlat
sub
adc
cmp
and
addb
pop
roll
rcll
rcll
popa
mov
roll
scas
xchg
xchg
xchg
imul
xlat
pop
pop
xchg
popf
shl
adc
popf
mov
outsl
and
pushf
pop
ljmp
addl
sub
adc
aam
add
and
fmull
xchg
ret
je
sub
subl
mov
fcoml
push
clc
shr
pop
rorl
sub
sbb
repnz
cwtl
xchg
popa
xchg
fcoml
sbb
rcrb
ret
xchg
push
repnz
aad
xchg
add
imul
dec
sbb
xchg
push
insl
adc
jo
cld
mov
push
fldl
cmpsl
fdivrl
cmp
adc
xchg
sahf
sbb
mov
test
movsl
ret
push
push
cltd
lods
imul
fcmovu
xchg
mov
pop
push
push
adc
push
sub
add
lret
cmp
sti
dec
mov
leave
push
pop
pop
inc
push
sbb
push
andl
jae
adc
xor
sbb
mov
jbe
inc
pop
pusha
addr16
xchg
lcall
inc
fs
and
inc
pop
push
movsl
addb
add
adc
outsl
pop
xchg
and
lds
and
xor
hlt
loop
push
lea
add
mov
sbb
adc
out
dec
xlat
xchg
push
popf
js
and
pop
xchg
push
add
adc
fldl
fnsave
sbb
mov
into
push
andl
push
sub
repz
ss
xchg
or
mov
imul
jb
sahf
ret
inc
bound
adc
jbe
call
pop
pop
and
and
sbb
xchg
sub
pop
out
das
add
push
lret
icebp
inc
or
mov
mov
jae
adc
sbbl
push
fildl
outsl
sbb
dec
mov
popf
aad
aaa
push
push
xchg
mov
add
adcb
mov
test
test
pop
xor
int
inc
pushf
test
enter
sbb
sbb
call
mov
int
dec
rcll
pop
cmpsl
push
adc
les
add
add
inc
xchg
mov
add
mov
loopne
mov
push
lcall
dec
sbb
lods
mov
push
pop
scas
lods
outsb
stos
push
sub
lret
push
rcll
fs
pop
subl
fcoml
leave
mov
and
or
cmp
std
out
bound
hlt
inc
cmp
stos
xchg
adc
pop
pop
and
sbb
push
lea
push
xchg
push
xchg
add
mov
add
cmpsl
pop
mov
pop
in
add
mov
mov
push
mov
test
test
xchg
lods
roll
push
ss
into
adc
or
clts
rcrb
rcrb
xchg
movl
pop
jo
inc
repnz
mov
enter
popf
or
add
jne
xchg
and
mov
test
pop
push
mov
scas
xchg
fldl
cltd
iret
inc
pop
fists
push
mov
jp
dec
mov
cld
push
inc
dec
adc
push
mov
sti
jbe
bound
insl
mov
push
sbb
push
jnp
sbb
cltd
add
rcr
lock
sub
in
icebp
call
lods
inc
inc
loop
mov
jmp
mov
rcrl
adc
pop
fstps
add
test
sbb
leave
inc
inc
stos
xchg
mov
push
gs
lret
pushf
fstpl
sbb
inc
sub
pop
aad
shrl
sub
xor
push
push
sbb
adc
inc
add
fsts
mov
aad
mov
adc
insb
push
xchg
mov
ret
stos
pop
jg
pop
xchg
mov
and
in
xchg
outsl
rorb
aas
sahf
pop
xor
add
push
sub
jp
or
inc
xchg
or
push
bound
xchg
jge
push
xchg
outsl
out
nop
repnz
not
mov
sub
xchg
jb
adc
mov
pop
sbb
xchg
xor
fwait
sub
mov
push
push
test
dec
stos
popf
rolb
cmp
aad
pop
scas
adcb
push
push
cltd
xor
lea
xor
imul
jnp
sub
jno
dec
fnstsw
hlt
dec
xchg
pop
push
push
sub
sbb
xchg
pop
adc
jno
scas
mov
mov
sbbl
fidivl
push
stos
sub
or
cmc
cmp
sbbb
stos
sbb
scas
rcll
aad
repnz
pop
addr16
xor
add
mov
fadds
pop
in
add
in
xchg
push
test
les
scas
lods
mov
outsl
and
outsb
xchg
jecxz
mov
push
cmp
adc
outsl
sub
sbb
inc
adc
xlat
sbb
les
mov
mov
movsl
push
call
mov
les
xchg
imul
test
fisubrs
inc
pop
aad
cmp
mov
dec
xor
adc
mov
setge
and
sub
pop
aam
inc
popf
outsl
scas
and
lods
xlat
lea
push
sbb
shrb
push
sbbb
push
fiadds
sbb
and
pop
xor
push
test
dec
inc
ret
hlt
ret
add
and
xchg
rclb
pusha
loop
add
inc
xchg
ficoms
or
sbb
xchg
aas
call
aad
add
xchg
ss
ljmp
adc
popf
aas
inc
lret
jbe
scas
inc
fwait
xor
inc
push
push
adc
mov
insl
xchg
cltd
push
add
or
push
mov
std
or
aad
pusha
push
cmp
mov
das
sahf
jge
ljmp
addl
sub
test
fbld
push
rcll
out
ret
adc
pushf
jae
insl
call
insl
jno
sub
sbb
fcoms
jg
xchg
mov
subl
lea
psrlw
sbb
xor
nop
push
ljmp
int3
xor
dec
jecxz
xor
xchg
mov
mov
xchg
frstor
xchg
xlat
popf
int3
mov
sub
ja
shrl
xor
xchg
loopne
xor
ljmp
pop
rorl
inc
mov
out
pop
out
xchg
movsl
xor
sub
push
add
sbb
insb
lea
rcr
mov
dec
stos
inc
or
add
xchg
xchg
aad
or
les
aam
cmc
ss
push
mov
pop
roll
aad
jo
adc
adc
sbb
sahf
ljmp
nop
pop
mov
sub
push
dec
mov
into
push
lock
lods
hlt
pop
xorl
out
imul
xchg
push
cmp
loopne
ret
inc
sbb
adc
jle
and
nop
sbb
sub
push
xchg
loop
pop
sbb
xor
adc
push
pushf
ret
outsl
inc
push
or
push
iret
aas
add
pop
jb
insl
inc
sbb
out
sub
sbb
and
xchg
xor
mov
adc
xchg
in
fstl
add
sub
push
pop
addr16
int
add
shl
outsl
xlat
xchg
mov
insb
stos
push
push
divb
out
das
roll
push
loopne
sbb
inc
pushf
xchg
xchg
pop
xor
movsb
in
xorb
das
push
cmp
imul
sbb
ja
adc
rorl
push
rcrb
rcll
dec
sarl
push
push
xchg
xor
scas
push
sbb
pop
inc
into
jge
das
inc
into
in
dec
cltd
outsl
and
sbb
sub
leave
sbb
scas
sub
jbe
imul
push
sti
cltd
xor
pop
stos
lea
ljmp
add
push
mov
xchg
lret
mov
pop
pop
pop
mov
mov
cmpsb
push
sbb
mov
dec
xchg
pop
out
xchg
sub
pop
mov
sbb
fnstenv
or
call
sub
std
scas
xor
pop
lods
mov
jge
out
ds
cltd
add
adc
outsb
xchg
xchg
xlat
xchg
cmp
popf
pop
jne
sbb
adc
add
sahf
push
popf
test
and
mov
sub
inc
enter
aaa
push
pop
ljmp
push
call
xlat
pop
push
pop
imul
pop
pop
shr
movups
sub
ja
xchg
push
push
pop
cmp
push
addr16
outsl
push
stc
mov
leave
push
das
xchg
test
add
cld
xchg
loopne
pop
das
push
cs
leave
adc
mov
sbb
lods
mov
push
adc
dec
nop
ss
adc
xor
push
sbb
loope
inc
push
sbb
stos
push
sbb
xchg
jo
and
inc
push
push
sahf
inc
sbb
add
mov
push
and
add
push
sub
xor
or
pop
push
xchg
mov
pop
pop
xchg
adc
cmp
lcall
das
adc
push
cltd
pop
shll
lahf
inc
sbb
and
insl
outsl
sub
push
in
adc
out
xor
xchg
pop
adc
dec
sbb
mov
fmull
push
pop
mov
xor
inc
pop
mov
and
mov
sub
das
imul
xchg
fistps
cmpsl
incl
xchg
lcall
aam
mov
fisttpll
lea
aad
xor
push
sub
fsts
add
sub
imul
popf
insb
std
push
inc
insb
and
cld
pop
fildll
fsts
imul
ficompl
xchg
and
push
cmp
adc
stos
scas
aad
mov
sbb
and
push
cltd
aam
es
sub
vmread
fcompl
lret
das
push
rcrb
sbb
sbb
xchg
push
xchg
inc
pop
jb
sahf
out
lods
push
add
mov
outsl
gs
arpl
dec
stos
rcll
cmpsb
sub
sub
out
push
sub
mov
mov
sbb
dec
sub
inc
pusha
pop
sbb
pop
mov
lock
scas
out
sti
out
aaa
stos
rcll
and
jbe
inc
mov
xchg
ljmp
push
pop
xor
adc
sbb
push
sbb
int3
mov
inc
das
insl
fstpl
push
sub
insl
movsb
push
pop
out
stos
xchg
ret
andb
xchg
mov
sbb
rcll
or
push
int
pop
adc
sbb
push
pop
pop
inc
adc
mov
push
stos
xchg
inc
sbb
or
xchg
in
sbb
jge
sbb
push
imul
out
loopne
adc
inc
scas
ret
sub
imul
xchg
add
sub
shlb
push
xchg
out
pop
fstl
add
stos
push
sbb
sub
out
xchg
pop
mov
and
ficoms
adc
test
pop
dec
pop
xlat
add
add
loop
xchg
xlat
xor
jp
fidivrs
aam
sbb
and
or
imul
adc
into
aam
dec
lcall
cmp
mov
add
les
cltd
stos
push
or
adc
sbb
pop
in
xor
pop
jle
jge
push
add
mov
xchg
or
push
daa
mov
and
jecxz
xchg
mov
fstl
and
and
push
rclb
add
adc
fcomip
mov
addl
push
and
add
arpl
sub
fcompl
push
or
inc
adc
cmp
dec
sbb
pop
sub
pop
fincstp
pop
push
aas
and
leave
filds
add
outsl
rol
enter
int3
out
ljmp
test
push
movsb
ljmp
mov
fcoml
mov
outsl
sub
mov
lds
jns
sbb
mov
js
outsl
bnd
cmp
add
dec
mov
cmp
or
xor
lahf
xchg
ja
xchg
incb
pop
aam
jno
xor
push
mov
mov
rorl
jmp
outsb
sbb
sbb
adc
ljmp
xchg
pop
and
stos
push
ljmp
popf
add
mov
xlat
or
xchg
test
push
xchg
movsl
add
push
cmp
inc
aad
xchg
out
xchg
fcomp
cmp
cmp
aam
xchg
ljmp
mov
sbb
adc
mov
fidivrl
movl
imul
pop
scas
push
push
jmp
pop
fistpll
mov
sub
mov
icebp
and
push
int
aam
adc
inc
push
sub
and
cli
rol
xchg
push
pop
fstl
sub
jne
fbstp
push
push
ljmp
adc
shlb
clc
mov
fsubrs
rcrb
add
aad
adc
xchg
sbb
dec
rcl
stos
js
push
out
pop
pop
jns
int3
jne
xchg
addr16
clc
cmp
cltd
mov
or
popf
xchg
stos
push
xor
sbb
or
add
xchg
sbb
sub
push
add
xchg
stos
pop
push
mov
sbb
xor
adcl
aas
xchg
das
outsl
xor
sub
adc
push
push
ljmp
xchg
aad
xchg
inc
jno
push
inc
sbb
stos
in
mov
dec
outsl
push
sub
mov
aad
outsb
sub
pop
rcrl
mov
int
adc
xor
pop
fbld
div
mov
aad
pop
add
sub
test
inc
enter
add
mov
rcll
cltd
in
jbe
repnz
scas
adc
mov
mov
push
adc
push
aad
std
icebp
lcall
scas
push
aaa
into
push
inc
fstpl
push
leave
sbb
xchg
mov
leave
sarl
push
pop
lcall
sub
push
sbb
pop
push
imul
daa
inc
push
addr16
jne
lock
shll
and
mov
and
sbb
xchg
cwtl
inc
jmp
popa
mov
cmc
adc
fdivl
inc
outsl
add
std
test
mov
or
push
imul
adc
insl
cs
inc
push
mov
cmp
sbb
xchg
imul
dec
imul
sub
test
add
ret
adc
aaa
fisubrs
stos
and
sbb
inc
xchg
pop
movb
push
xchg
fistpll
in
testl
cmc
sbb
add
xchg
mov
push
rcll
popa
cmp
push
lods
and
das
mov
push
das
push
xor
inc
les
bswap
adc
sbb
fildll
mov
rcll
je
nop
iret
pop
sub
jno
push
sahf
xchg
sbb
push
popf
in
push
imulb
popf
test
fidivl
pop
pushf
pop
push
pop
pop
enter
push
cld
xor
sub
add
ficomps
push
adc
sub
cltd
repz
stos
inc
xchg
les
sahf
xor
sar
push
push
pop
sbb
rcl
xor
mov
scas
or
xchg
out
das
and
fldl
xchg
mov
imulb
repnz
xor
sub
pop
rcrl
xchg
fcmovb
inc
mov
sbb
xchg
mov
movsl
inc
fnstsw
pop
sbb
rcll
push
outsl
imul
add
test
stc
lods
lcall
ja
sbb
xchg
cmp
rol
imul
adcb
sub
mov
xor
sbb
adc
mov
adc
shrl
sahf
sarb
movsb
or
mov
ficoms
leave
fists
es
xor
dec
leave
mov
stos
leave
lods
mov
push
sti
inc
jne
addr16
flds
aam
and
lret
leave
out
dec
mov
xchg
mov
test
je
xor
test
in
xchg
sbb
ds
and
sbb
push
test
loopne
pop
sub
push
sub
xor
pop
pop
mov
inc
out
xchg
xchg
inc
jle
inc
pusha
pop
fildll
sbb
stos
adc
push
mov
sahf
movsl
clc
popf
mov
lock
loop
ret
int3
lods
mov
imul
xor
stos
sub
xchg
and
fldl
sti
mov
xor
sub
sbb
xor
pop
cltd
adc
adc
xlat
and
sbb
mov
cs
loop
fcoml
aam
pushf
ficomps
adc
adc
aad
mov
fstl
push
popf
and
xchg
shll
mov
sub
mov
test
fdivrl
rcrl
adc
test
das
sbb
xchg
dec
inc
movsl
movsl
pop
popf
test
xor
xchg
mov
sahf
pop
and
mov
aam
dec
mov
sbb
scas
xchg
adc
push
pop
shrl
cmp
adc
xchg
fsubrp
insl
adc
sarl
popf
jmp
xchg
sub
aas
pop
fimuls
sbb
enter
adc
sbb
add
mov
xor
xor
adcl
pop
cmc
das
mov
loop
sub
js
cltd
or
cmpsb
push
jne
sub
das
add
loop
ficomps
imul
and
push
pop
cwtl
push
divl
adc
sub
test
adc
cmc
cmp
and
rcll
ss
pop
inc
adc
shr
push
push
adc
pop
xchg
aad
push
push
push
fstl
movl
insl
add
fistpll
sbb
sub
enter
lret
stos
cmp
aas
add
popf
sahf
stos
xchg
push
int
pop
pushf
mov
popf
addb
sub
or
faddl
push
add
xlat
mov
add
ss
lods
test
fnstcw
popf
push
inc
jge
loop
jmp
ds
loop
out
shrl
frstor
stos
sbb
cmp
push
mov
and
add
xchg
mov
push
xchg
jecxz
pushf
cld
adc
rclb
das
into
xchg
push
xchg
data16
and
popf
mov
cli
adc
fiadds
pop
adc
adc
adc
xor
and
in
jns
ljmp
xchg
test
xchg
aam
pop
push
aam
mov
aad
sub
lret
sbb
push
adc
and
add
push
cwtl
pushf
push
rclb
push
push
sbb
fstpl
lds
sub
xchg
lods
cmp
inc
mov
push
movl
sub
clc
iret
das
mov
lret
popf
xor
xchg
adc
cltd
sub
pushf
scas
or
loopne
sahf
push
inc
push
sbb
xchg
les
push
jge
sub
jno
ds
xor
je
cmp
mov
xchg
add
jno
stos
lea
mov
push
inc
adc
dec
inc
fs
mov
rcrb
fucom
fdiv
pop
sub
aad
movl
mov
iret
ret
xchg
hlt
shr
mov
jns
add
xchg
pushf
adc
in
push
sub
out
xlat
movb
mov
add
push
outsb
adc
hlt
xor
pop
xchg
sbb
pop
adc
inc
rclb
sbb
outsb
aad
movhps
xchg
sbb
pop
rcr
test
aas
pop
mov
inc
push
pop
inc
rcll
sub
fbld
jbe
cmp
and
pop
imul
fimuls
adc
adc
xchg
push
cmp
sub
adc
stos
pushf
mov
imul
mov
push
inc
adc
addr16
scas
sub
adc
cmp
fistpl
fstps
int3
sahf
repnz
popf
inc
ffree
cmp
push
sarb
imul
loope
ss
cmp
mov
in
inc
push
sub
push
fmull
das
xchg
push
dec
sub
lcall
out
inc
xchg
scas
and
inc
xchg
xchg
adc
xchg
sub
rorl
loop
mov
sub
test
scas
shrl
dec
popf
xchg
fcoms
loopne
mov
test
andb
push
stos
inc
das
adc
mov
out
mov
sub
jo
sub
xor
mov
data16
fcompl
sub
in
out
fldl
xchg
movsb
enter
push
xchg
sbb
sub
push
xor
mov
rolb
mov
enter
sbb
fldcw
les
ds
dec
xor
fisubrs
scas
leave
cmp
sub
or
add
scas
cltd
bound
mov
shrl
sbb
mov
fwait
aaa
nop
push
out
sarl
gs
popf
sub
sub
lds
cmp
nop
jnp
dec
mov
dec
dec
pop
sub
mov
dec
push
inc
sub
das
sub
pop
dec
imul
sub
adc
pushf
adc
fstp
enter
fisubrs
cltd
sbb
frstor
pop
xchg
mov
es
sbbl
jbe
mov
pusha
lea
mov
mov
mov
ja
int
cmp
stos
pop
cwtl
outsl
movsl
and
pop
xchg
shr
shl
daa
popf
mov
or
push
mov
sub
xchg
adc
mov
insl
call
sti
pop
push
fisubs
mov
adc
rcr
or
fcmovnbe
mov
dec
mov
rcl
mov
int3
sub
faddl
out
pop
push
add
adc
pop
xor
aam
scas
jle
push
lock
lock
sub
outsb
sub
mov
adc
push
mov
test
sbb
outsl
stos
xor
sbb
push
xor
adc
pusha
int3
pop
pop
push
add
xchg
mov
adc
fdiv
jbe
mov
shll
and
or
sbbl
dec
aad
mov
xor
pop
ret
cltd
push
aam
push
mov
iret
imul
je
adc
xchg
add
sbb
dec
popf
sti
rcrb
scas
inc
sbb
stos
pop
xchg
push
mov
rorl
ret
pop
adc
xchg
push
test
mov
pop
sti
or
adc
ficoml
in
stos
in
lret
loop
pop
xchg
pop
pop
aam
lret
add
xlat
out
mov
xchg
xchg
cmp
mov
rcll
imul
fwait
sti
enter
push
adc
pop
call
aas
sub
push
ficoml
pushf
adc
je
xor
cmc
rorb
xchg
xchg
push
daa
jg
pop
call
inc
aad
loop
stos
or
sub
stos
fwait
dec
xchg
xlat
pop
mov
jl
es
cmp
addb
lcall
and
mov
fwait
push
int
sbb
sub
mov
lcall
ficoms
and
outsb
mov
lahf
repnz
and
gs
or
cltd
out
lea
andl
inc
or
stos
sbb
inc
xlat
push
xchg
in
ret
push
pop
dec
rclb
ja
jmp
scas
or
push
push
aam
mov
push
adc
pusha
xchg
cli
popf
sub
sti
push
pop
pop
lahf
xor
push
xchg
sarb
mov
ja
stos
jmp
dec
fsubl
add
cmp
sbb
sub
or
lret
or
das
xchg
and
inc
inc
sbb
psrld
adc
pop
xor
inc
ret
fucomip
xchg
stos
adc
adc
inc
fstl
loopne
and
daa
addr16
fisubs
mov
add
lcall
pminub
dec
pop
pop
dec
aam
call
pushf
mov
push
ds
xchg
jne
stos
adc
jge
nop
sub
jno
out
xorb
fcompl
pushf
push
cmp
cmp
nop
pushf
das
and
lret
outsl
int
xchg
pop
xchg
push
sub
roll
lea
adcb
cs
ffree
xchg
fcompl
andb
lods
push
insb
fstpt
lret
push
adc
clc
sbb
inc
pop
aad
pop
xchg
add
push
call
and
sub
and
adc
sti
pushf
sbbl
mov
add
fwait
mov
loopne
into
jp
leave
jp
cmpsb
pop
xor
inc
fwait
ljmp
inc
out
lods
lods
mov
sbbl
fists
shrl
sarl
addl
xchg
fbld
jmp
loope
outsb
faddl
popf
sahf
cmp
rcl
xchg
push
cmpl
adc
sub
push
xchg
push
scas
insl
lahf
push
aas
mov
pop
adc
push
xchg
fiaddl
push
push
leave
or
xchg
push
lcall
mov
rclb
sbb
push
xor
or
ficomps
cmp
and
rcrl
push
pop
xchg
cmp
sub
les
sbb
out
xchg
adcl
adc
negl
jne
push
xadd
add
pop
and
and
mov
push
push
xchg
adc
lods
dec
inc
push
aad
stos
jo
adc
pop
sbb
adcl
sbb
shll
pop
pop
mov
push
xor
push
xor
sbb
jmp
ljmp
inc
mov
fsubrp
lcall
push
shrl
mov
int
das
outsl
rcl
dec
mov
xor
inc
and
shrb
push
mov
mov
sub
cmp
rcll
push
sahf
xlat
ret
xchg
dec
xchg
jge
push
pop
pusha
sbb
sbb
sahf
push
xchg
aad
je
push
ret
mov
pop
das
cltd
and
movsb
lcall
dec
lcall
pop
sub
sbb
je
adc
adc
cmc
adc
loop
loopne
enter
xchg
mov
jge
rcrl
dec
imul
stos
push
add
out
pop
outsb
ljmp
pushf
icebp
xchg
sbb
rol
cltd
push
scas
jmp
fwait
push
sub
mov
and
inc
adc
xchg
xchg
inc
push
xlat
sarb
in
pushf
push
mov
pop
loopne
mov
push
notl
inc
rcrl
aas
les
bound
cs
xchg
xor
push
xchg
inc
xchg
pusha
add
cmp
sbb
in
cmc
dec
add
pop
sub
fbld
dec
lret
sbb
push
xchg
xor
out
roll
sub
adc
push
int3
pushf
push
sahf
sub
dec
mov
inc
adc
pop
xchg
jb
sub
pop
fbld
xchg
xchg
pushf
cmp
sbb
adc
sbb
pop
ret
je
mov
jb
enter
cltd
dec
mov
out
inc
cmp
jo
adc
push
ljmp
cmpsl
insl
dec
pop
sahf
or
adc
fnstcw
push
pop
outsl
sbb
xchg
jg
push
fldt
das
adc
fsts
add
in
lcall
pop
adc
lds
scas
xlat
add
dec
rcrl
cltd
lods
leave
subl
aad
mov
bound
pop
fcoml
adc
aam
pop
stos
pop
sub
sahf
sbb
lock
mov
cltd
mov
fstp
clc
xchg
xchg
popf
pop
adc
pop
mov
test
inc
mov
lret
cmp
inc
fstpl
aad
sub
xchg
pop
ljmp
push
inc
iret
inc
in
xor
xchg
mov
push
arpl
adc
sbb
push
scas
xchg
call
fwait
out
adc
cmp
push
stos
in
arpl
sub
fsts
adc
dec
sbb
adc
enter
stc
aam
xor
push
adc
adc
xchg
fists
out
int3
repnz
push
add
xlat
and
pusha
mov
fldcw
mov
test
adc
mov
push
ret
sub
push
or
sbb
cmp
push
xchg
ja
push
popf
inc
push
xchg
aam
insl
push
push
push
xchg
pop
movq
icebp
fsubs
les
fldcw
adc
xor
enter
repnz
stos
shlb
aam
xchg
rcr
pusha
sbb
xchg
sbb
push
pop
push
push
outsb
xor
test
inc
sahf
xchg
push
jge
pop
cmp
mov
int3
rcll
mov
inc
lahf
scas
mov
outsl
sbb
out
adc
jo
xchg
xlat
in
sub
adc
pop
adc
xchg
inc
sahf
js
fwait
jno
add
add
push
xchg
subl
pushf
adc
sbb
jb
sub
and
inc
pop
pop
shl
clc
sub
sub
sbb
inc
scas
push
ss
adcb
aam
or
push
into
rorl
shrl
pushf
sub
and
add
add
pop
and
mov
adc
sub
fbstp
push
xchg
stos
xchg
hlt
lods
addb
rcr
push
and
push
sub
dec
shr
movb
push
sbb
xchg
js
std
xchg
sub
sbb
push
insl
ja
sub
repnz
mov
jmp
push
frstor
xchg
repnz
inc
lock
cs
xchg
adc
push
lret
xchg
xchg
xor
sbb
cvtdq2ps
sahf
adcl
aad
add
out
sbbl
sbb
je
add
aad
pop
fisubs
push
sbb
xchg
pop
imul
add
leave
push
pop
cmpl
pushf
sub
cmp
cltd
scas
pushf
pop
push
cli
add
push
divl
adc
ljmp
push
or
dec
add
and
cmpsb
test
xchg
pushf
pop
leave
push
mov
fdivrl
or
pop
cltd
mov
mov
and
adc
xchg
dec
xchg
sbb
imul
insl
mov
rcrl
out
movsb
jge
stos
popf
out
mov
push
cmp
add
xchg
xchg
adc
sub
inc
push
cmp
aad
push
fmulp
sti
repnz
and
mov
xchg
cltd
push
cmpsb
add
sbb
push
adc
dec
in
jns
jns
stos
xchg
lods
daa
pop
das
sub
mov
aaa
xchg
sbb
xchg
jl
ss
scas
loopne
jecxz
cmp
aam
sub
popf
out
mov
int
adc
test
sub
rclb
lret
xor
imul
pusha
leave
cli
mov
scas
loop
std
pop
popf
jb
int3
lret
xchg
in
pushf
xchg
add
pop
adc
stos
xchg
push
fisubrs
lods
popf
push
mov
fidivrs
mov
pop
outsl
fprem
xchg
dec
or
and
aam
push
mov
dec
pop
scas
das
xchg
adc
add
pop
sbb
pop
cmp
pop
push
out
inc
push
inc
push
pop
xchg
mov
jmp
and
bound
addr16
mov
dec
pop
push
push
mov
testl
add
popf
pop
xor
adc
jg
out
cmp
int
add
imul
ljmp
into
sub
xchg
adc
and
pop
mov
xchg
fldl
pop
out
and
negl
adc
sbb
fisubrl
popf
push
inc
pop
bound
lret
mov
stos
or
out
add
cmp
enter
aad
sbb
sub
negl
psrlw
inc
stos
adc
add
sbb
lcall
sub
jne
scas
adc
sub
add
fisubrs
pop
xor
xchg
cmp
push
sub
push
mov
cmp
sub
ss
cmp
and
sbb
adc
hlt
xor
sbb
fists
mov
movsb
repnz
jp
loopne
fs
mov
sbb
ljmp
sbb
test
ret
pop
sbb
xchg
ljmp
pop
shr
pop
push
stos
and
imul
add
xlat
sub
or
push
push
int3
adc
test
adc
das
hlt
add
pushf
loopne
ret
orl
xlat
int3
scas
scas
in
mov
fstl
push
add
pop
imul
sub
cwtl
sub
mov
push
fstpl
stos
push
pop
xchg
or
add
gs
ficomps
inc
lcall
pushf
jbe
and
xlat
adc
sbb
adc
adc
mov
aad
pop
sub
add
jle
out
cwtl
out
cmpsl
mov
adc
dec
hlt
ret
mov
mov
out
pop
mov
sbb
shll
repnz
pop
lea
xchg
aad
popa
push
mov
adc
and
scas
andb
mov
add
lods
jl
into
add
mov
push
or
sbb
stos
testl
sub
fstpl
mov
inc
xchg
das
cltd
adc
mov
repz
in
sbb
cmp
mov
je
dec
inc
ror
and
cmc
or
mov
lret
push
fwait
pushf
sbb
scas
jae
popf
dec
loop
xchg
xor
rcrb
push
cmpsl
ret
xchg
test
in
pop
mov
adc
push
cmp
in
inc
jg
xchg
inc
or
fcompp
sub
out
lret
fiaddl
aam
icebp
out
mov
and
push
and
imul
aas
jmp
call
shr
and
mov
adc
adc
push
int3
and
push
sbb
les
pushf
adc
jle
lods
pop
cmp
mov
pop
cld
aaa
sbb
sahf
cmpsl
les
out
decl
cmp
vphadduwq
in
jmp
pop
stc
sbb
and
xor
leave
adc
and
jge
imul
lahf
add
inc
push
push
mov
adc
xchg
adc
push
push
sbb
outsl
sub
sbb
push
xchg
shl
das
imul
int
rcll
pop
push
insb
and
faddl
outsl
leave
push
jb
add
push
sbb
das
fwait
inc
xchg
sbb
movsl
loop
aad
xchg
xchg
in
adc
cmp
sbb
sub
aad
sub
push
ljmp
sahf
les
and
dec
push
and
jno
dec
das
sbb
pushf
mov
mov
push
xchg
mov
push
pop
out
repnz
aad
cli
jge
push
adc
sahf
sbb
shll
sahf
mov
sbb
sbb
aad
mov
xchg
or
out
push
scas
cli
jg
mov
xchg
repnz
into
mov
sahf
push
xchg
push
imul
sub
and
push
xchg
cltd
xchg
and
test
sub
nop
push
mov
mov
mov
js
shlb
sbb
aad
into
push
push
lea
inc
inc
lods
daa
or
nop
sbb
pop
rcrb
push
jns
popf
sbb
sbb
test
gs
out
pop
mov
sub
push
add
or
jle
repnz
loop
loopne
or
xlat
sbb
push
pop
jmp
cmp
adc
push
sub
pop
mov
add
push
xchg
mov
pop
pop
push
mov
fwait
addr16
adc
lret
mov
adc
push
push
adc
sub
push
or
sub
push
shll
pop
sbb
lret
leave
rclb
inc
push
je
jmp
pop
mov
popf
adc
push
pushf
dec
mov
mov
fs
dec
inc
fstl
pop
or
adc
sub
push
stos
adc
and
mov
xchg
push
push
in
xor
inc
push
jp
mov
mov
mov
pop
pop
mov
push
mov
fidivl
lret
and
mov
xchg
js
outsl
repnz
fimuls
mov
fstl
adc
rorl
rolb
push
mov
mov
xchg
nop
inc
dec
jnp
pop
out
adc
lcall
lock
inc
push
push
adc
xchg
mov
aad
mov
fldlg2
push
push
cld
nop
lcall
adc
stos
ljmp
sub
adc
mov
pop
popf
pop
int3
aad
xlat
mov
movsb
adc
pop
push
mov
push
hlt
pop
pop
xchg
insl
imul
inc
iret
or
push
enter
push
subl
inc
imul
sbb
sbb
adc
xchg
ret
jb
mulps
pop
push
xor
movsb
and
iret
je
fnstcw
add
rcrl
sbb
and
lods
pop
push
push
aad
pusha
dec
sub
jmp
test
pop
sti
add
sbb
xchg
fwait
mov
outsb
xor
fimuls
add
xchg
push
gs
aad
add
repz
pop
cmp
pop
insb
imul
xchg
inc
fcom
lods
scas
insl
mov
sbbl
or
popf
xchg
adc
adc
lock
sbb
loopne
lret
stos
xchg
or
inc
sbbl
or
sub
xor
sub
sbb
aad
adc
pop
add
and
frstor
sbb
ljmp
aam
aad
fbld
or
xchg
xchg
pushf
dec
dec
pop
push
pop
outsl
mov
rcl
inc
inc
push
aam
loope
jae
iret
or
popf
imul
xchg
cltd
jge
xchg
inc
clc
jne
push
adc
adc
flds
add
push
mov
or
dec
ds
xchg
push
fstpt
ljmp
out
stos
push
movb
adc
cmp
stos
and
imul
lret
les
xchg
aas
xchg
addb
loop
repnz
movsb
xlat
inc
xor
out
ja
pop
add
sub
aam
or
pop
adc
push
into
xchg
push
cltd
ret
fcoml
int
adc
iret
stos
and
cmp
sbb
mov
sub
xor
lcall
xchg
pop
adc
out
out
pop
and
push
stos
popf
and
test
inc
push
pop
jp
les
pop
inc
inc
xchg
test
and
ljmp
shll
daa
pop
jbe
rol
fdivl
pop
rorl
push
sub
xchg
filds
inc
rcll
sbb
push
ja
or
mov
push
sub
xlat
xchg
pushf
pop
sbbl
push
insl
das
popf
outsl
mov
ljmp
push
jne
cmc
dec
push
scas
add
mov
sub
fisubrs
scas
and
mov
stos
cltd
fmulp
push
fsts
mov
ret
ret
out
outsl
jp
repnz
dec
sbb
xchg
mov
test
sbb
rclb
or
fstp
push
les
dec
testl
jo
lods
lea
scas
xor
out
nop
xor
test
adc
mov
pop
xchg
out
push
pop
inc
push
int3
sub
sub
rclb
sbb
adc
lods
adcb
push
mov
pop
xchg
and
mov
inc
loop
add
lret
pop
into
xchg
inc
roll
push
sub
aam
std
insl
cltd
scas
push
add
sbb
psadbw
lret
xlat
sahf
in
add
add
mov
sub
xchg
pop
or
sub
mov
xor
dec
sbb
pop
mov
imul
add
shr
push
scas
sbb
cmp
and
ljmp
sbb
adc
sub
cmp
push
cwtl
sub
push
cmp
push
xchg
rcl
gs
rclb
jno
mov
cmpsl
ficomps
mov
mov
xchg
push
int3
push
mov
int3
or
inc
out
push
std
leave
xchg
imul
dec
push
pop
out
xor
mov
pop
and
adc
sub
inc
xchg
aad
ss
dec
or
sbb
push
jge
stos
imul
adc
xor
lcall
sbb
push
test
imul
sub
adc
mov
mov
dec
xchg
push
mov
add
out
negb
ffreep
sub
push
mov
mov
stos
lods
pusha
adc
xlat
fistpll
sbb
lcall
scas
mov
lret
fcompl
pop
outsl
xchg
push
xchg
mov
and
mov
xchg
pop
aad
push
loopne
adc
insl
int3
shr
das
add
pop
int3
imul
push
cmp
sbb
xchg
scas
sbb
leave
cmp
adc
or
sub
aam
add
rcl
adc
xor
jp
push
fcompl
inc
loope
sbb
sahf
fstps
shll
mov
enter
pop
or
sub
ljmp
aam
xchg
testb
popf
sbb
out
adc
mov
mov
insb
mov
xlat
add
adc
cmp
out
cltd
push
aam
push
inc
or
push
add
imul
add
xchg
loop
or
jno
out
sub
mov
xchg
adc
inc
mov
pop
sbb
inc
sbb
push
aam
add
xchg
adc
push
push
fsubr
xor
sbb
xor
cmp
and
sbbb
pusha
adc
push
iret
mov
subl
addl
adc
add
roll
fcompl
inc
push
int3
movsl
add
lahf
jo
scas
add
push
lods
mov
hlt
repz
mov
lds
stc
scas
xchg
xchg
shll
sub
pop
sbb
ljmp
pop
adcl
or
ss
pusha
pushf
fs
sbb
popf
daa
mov
or
xchg
cmp
sbb
sbb
loop
mov
movsl
fimuls
push
das
in
push
scas
aad
push
pop
cmpsl
sahf
adc
pop
dec
adc
sbb
rcll
into
xor
dec
aad
xchg
ficomps
adc
cmp
push
pop
ret
push
ljmp
jmp
mov
das
nop
pop
fisttpll
sub
int3
mov
pushf
pop
dec
in
cwtl
fs
xor
push
scas
mov
mov
imul
sub
inc
xchg
shll
push
jbe
pop
xchg
loopne
es
sbb
and
sbb
inc
popf
pop
cmp
lcall
test
js
aad
cwtl
out
cmp
adc
pop
sbb
ret
cwtl
jb
mov
lret
popf
cltd
inc
xchg
push
xchg
loopne
mov
pop
pop
adc
sbb
outsl
cltd
pop
push
es
les
sbb
ficomps
cmovne
adc
sar
adc
ficomps
xchg
movsb
jne
sbb
fsubp
sub
popf
jmp
adc
outsl
cs
push
negb
push
xchg
rcrb
push
xchg
push
inc
in
add
add
lods
dec
xchg
pop
pop
xchg
pop
ds
push
clc
jl
push
imul
repz
jnp
sub
cmp
mov
push
loop
fisubrl
xchg
daa
sbb
loop
outsl
xor
xlat
push
iret
mov
imul
pop
push
adc
les
push
rcr
xlat
push
bound
bound
sahf
scas
pop
ljmp
data16
jp
xor
roll
or
push
bound
aad
test
push
adc
aam
xlat
imul
sbb
pop
iret
sbb
in
push
call
push
scas
adc
push
push
jne
aad
roll
push
sbb
add
sbb
push
push
icebp
fwait
in
xchg
aad
inc
cmpsl
test
rcrl
and
gs
or
push
xchg
stos
out
ja
xchg
push
ret
xor
adc
pop
sub
ficoml
loop
sbb
outsb
clc
bound
aam
lret
lods
or
pop
sbbl
rorl
mov
push
pop
fs
push
pop
and
call
adc
cs
sbb
xor
inc
mov
push
out
adc
fsubl
add
aaa
ds
stos
adc
xchg
in
fcoml
add
fistpll
push
stos
pop
add
pushf
add
ds
pop
lock
cmp
dec
adc
fsts
sbb
xchg
test
scas
jle
insb
test
das
push
lea
sbb
popf
out
sbb
sahf
sbb
sbb
pop
arpl
lret
mov
xchg
cmp
nop
fisttps
jl
fwait
sub
jg
sbb
or
push
outsl
push
sahf
mov
repz
and
rclb
xor
inc
pop
aam
xchg
sbb
mov
lret
pop
sbb
sahf
xchg
xchg
unpcklps
fst
in
fadd
or
ror
xchg
pop
scas
aad
or
insl
or
ljmp
stos
and
xor
dec
xchg
jmp
sub
xlat
fstps
xchg
and
xchg
pop
push
rcrb
shrb
xorl
adc
in
stos
pop
dec
js
mov
cmp
ds
sbb
jnp
pop
or
cmp
rclb
mov
sub
movsl
mov
adc
sub
mov
outsl
mov
std
jp
add
pop
fbstp
push
pusha
stos
mov
mov
mov
and
and
imul
loop
adc
sbb
xlat
and
fstl
fists
and
cld
sbb
sub
xchg
sub
push
loope
iret
into
sbb
dec
xchg
out
movsb
inc
fmulp
jbe
adc
xor
movsb
stos
daa
mov
pushf
arpl
sub
push
aaa
sbb
push
popf
pushf
cmpsl
cmp
cld
xor
fistpl
inc
jne
or
fidivrl
aam
popf
jnp
sbb
mov
cmp
jecxz
scas
mov
jmp
adc
clc
outsl
xlat
mov
es
pushf
and
sub
iret
pop
in
in
lcall
jo
cmp
xlat
push
adc
ss
faddl
sbb
pop
add
shrl
lea
push
sub
sub
xor
pop
xchg
mov
shll
inc
xlat
ljmp
in
out
push
push
adc
subb
sbb
cmp
mov
sub
addr16
pop
adc
ljmp
icebp
into
stos
xchg
orl
pop
inc
imul
rcll
pushl
jb
mov
shlb
sarb
xchg
xor
clc
stos
sbb
in
pop
bound
inc
jge
fcompl
test
adc
stc
rolb
xchg
cmp
out
sub
mov
aam
pop
xchg
push
insb
imul
cmpsb
rcrl
mov
push
xchg
inc
add
rcrb
mov
lds
es
repnz
inc
sbb
xchg
push
sbb
sub
xchg
pop
push
sub
pop
adcl
rcrb
xchg
lods
mov
mov
jge
inc
jbe
inc
xchg
or
cmp
dec
mov
ret
orl
dec
push
jmp
mov
sub
adc
sbb
adc
sahf
push
mov
mov
rcl
sbb
cli
xlat
mov
ja
popf
xchg
insl
aad
push
add
xchg
icebp
add
sbb
inc
and
add
pop
or
ficompl
aam
mulb
push
ljmp
pop
lea
sub
mov
push
shrb
pop
xchg
xchg
mov
xchg
ljmp
ret
inc
sub
pop
xlat
shll
lcall
sub
add
and
sbb
rcrb
adc
roll
pop
pop
push
adc
iret
xor
mov
insl
inc
xchg
adc
cmp
sbb
xor
in
xor
sub
inc
adc
mov
adc
orl
pushf
stos
xlat
fstl
add
repnz
scas
bound
mov
cmp
addr16
jbe
cmp
repz
sbb
pop
adc
insl
out
cltd
add
push
or
sbb
xchg
out
xchg
subl
inc
fisubrs
sbb
fstl
push
inc
push
inc
mov
mov
ret
push
js
cmc
movsl
imul
mov
pop
jo
cmp
ds
pop
adc
fwait
cmp
jl
jle
cmp
imul
rclb
stc
test
into
push
sub
push
and
and
ljmp
sbb
jmp
xchg
xchg
add
lods
mov
xchg
adc
sub
pop
mov
jbe
leave
xor
cltd
push
push
xchg
push
and
push
popf
add
outsl
sub
test
push
insb
add
aad
sub
aam
adc
or
imul
aam
sti
push
fucomp
mov
xchg
sbb
popf
adc
lock
bound
xchg
call
pop
mov
xchg
xchg
dec
pusha
sbb
mov
adc
imul
push
sbb
fsts
jo
jl
xchg
rclb
mov
repnz
adc
mov
in
sbb
rcrl
sahf
sbb
adc
xor
inc
outsl
ljmp
loopne
inc
sbb
pushf
mov
fdivr
sahf
testb
cs
cmp
and
cld
xor
pop
push
jbe
aas
mov
push
mov
xlat
xlat
lret
jge
popf
fld
stos
fsubr
mov
push
xchg
xor
sbb
mov
mov
push
inc
xchg
out
lret
push
mov
mov
inc
jo
lret
lret
mov
adc
sub
divl
sub
adc
push
test
sub
sti
adc
dec
mov
cli
mov
jp
xchg
stos
pushf
cmp
rorl
fbld
call
ffree
sbb
xchg
pop
pop
leave
xchg
pushf
pop
mov
ret
adc
push
inc
negl
lahf
xor
pop
or
bound
push
pop
sbb
add
sbb
pop
adc
or
aam
mov
pop
sbb
adc
imul
adc
xchg
pop
rcrb
filds
adc
out
je
inc
push
sbb
fwait
push
inc
fdivrl
xchg
inc
test
loopne
shl
dec
in
inc
push
insb
lea
dec
inc
jbe
jne
popf
inc
aad
pop
mov
mov
adc
imul
int
push
ficoms
or
daa
jne
adc
mov
xlat
inc
dec
add
push
push
sti
xchg
cmp
fisubrs
mov
fwait
xchg
ret
pop
pop
loop
sbb
add
xchg
and
stos
in
lahf
adc
call
les
lods
push
sbb
cltd
inc
ljmp
sub
add
mov
testb
pop
xchg
jge
inc
adc
iret
cmp
fstl
sbb
inc
xor
loop
xchg
xchg
aad
xor
stos
mov
or
aam
adc
mov
xchg
xchg
shrl
inc
ja
out
mov
sbb
outsl
adc
adc
pop
add
fisubrs
push
sub
adc
xor
aad
inc
jns
insl
in
adc
ss
pop
mov
mov
rorl
sub
pop
std
mov
push
mov
adc
adc
adc
stos
mov
sbb
mov
in
push
jmp
enter
ret
push
adc
adc
rclb
les
and
or
in
push
out
rol
add
shrl
sub
pop
mov
inc
std
ret
ljmp
push
dec
xchg
imul
inc
mov
add
rorl
push
je
pushf
sub
shlb
int
push
aad
ljmp
je
ficoms
cmc
adc
and
into
scas
sbb
dec
add
cmp
and
das
push
mov
insl
pop
aam
add
setle
ret
fst
inc
jp
scas
push
push
push
jne
adc
rcr
xor
sbb
aam
mov
cltd
push
mov
insl
stos
inc
popf
inc
pop
lahf
loop
mov
sahf
aam
stos
fimuls
in
push
sbb
stos
inc
xlat
rcrb
push
pop
ds
sub
lret
jmp
lods
push
fwait
adc
adc
sub
adc
arpl
sahf
lret
rcrb
adc
sbb
adc
sbb
das
sbb
in
test
ljmp
shl
mov
mov
pop
adc
inc
scas
xchg
pop
aad
jge
sahf
inc
pop
sub
inc
mov
cltd
xorl
les
xchg
sar
out
pop
rcrl
movsl
push
dec
aaa
fcmovu
mov
mov
nop
fstpl
push
popf
adc
les
lret
xchg
sbb
ret
call
aad
push
lods
sarl
jp
and
stos
rcrl
hlt
add
inc
mov
gs
das
mov
push
jo
dec
out
jecxz
pop
xchg
push
sub
xor
dec
xchg
sbb
sbb
xchg
fcmovu
pop
sbb
les
cld
gs
or
jp
lret
aaa
push
aad
lods
push
int3
mov
push
popf
loop
test
add
xchg
xorb
xchg
adc
pop
push
loop
xlat
pop
mov
pop
adc
sbb
xchg
pop
insl
inc
mov
lcall
sub
das
aad
jl
std
out
dec
das
adc
outsl
push
aam
push
xchg
sbb
scas
jge
add
cmp
jno
outsl
lcallw
sbb
adc
push
insb
xor
pop
sub
xchg
mov
rorb
sbb
and
xor
aad
xor
add
out
xchg
shrl
add
addr16
dec
dec
loopne
sbb
push
xchg
jl
sbb
jge
push
push
je
mov
sbb
adc
sbb
fdivrl
mov
cmpl
sbb
inc
push
and
sbb
cmp
outsb
xchg
mov
pop
rclb
or
jo
fdivl
popf
cmc
or
and
push
inc
ja
and
xor
mov
loope
cmp
ret
pushf
stos
push
cmpsb
lret
dec
sbb
ffree
xor
inc
ret
sar
xchg
mov
aad
les
sbb
mov
add
dec
adc
outsl
jae
or
cmp
add
xor
mov
inc
scas
add
lods
cltd
aam
ss
popf
dec
jge
xchg
xor
out
ljmp
movsl
mov
es
mov
pop
pop
sbb
push
ds
insl
sbb
imul
mov
xchg
ror
xchg
bound
fdivrl
mov
push
mov
cmp
push
pop
pop
inc
jle
add
fsts
cltd
xchg
mov
std
inc
fcompl
mov
sbb
push
cmp
sbb
cmp
push
fisubs
pushf
aam
faddp
adc
xchg
lds
xchg
xor
sub
mov
sbb
sbb
pop
push
add
orl
pop
adc
imul
sbbb
sub
adc
push
sbb
adc
inc
and
push
fcmovnb
push
sub
repz
sarb
fwait
pushf
jno
inc
jno
out
shll
pop
enter
cltd
pop
int
push
stos
enter
and
fildll
push
push
xchg
call
adc
adc
and
xor
das
cmp
mov
repnz
ds
pushf
and
adc
push
xlat
adc
sbb
push
push
jne
push
jle,pt
inc
or
cli
push
fnsave
pop
movsb
sbb
sbb
pop
fnstcw
rcll
pop
or
push
xchg
cld
jp
shr
sbb
mov
sub
loopne
fnstsw
sbb
push
adc
imul
stos
sbb
pop
xchg
cmp
pop
popf
ljmp
push
or
push
cmpsl
aam
dec
xchg
popa
mov
sqrtps
xchg
mov
lret
push
pop
inc
testb
adc
inc
cltd
push
pushf
and
inc
adc
xchg
ret
push
int
adc
out
lret
sub
dec
push
inc
stos
xchg
cmp
pop
shrl
pusha
xor
push
sbb
push
jns
fistps
pop
stos
test
inc
lret
in
jecxz
scas
in
cwtl
push
adc
adc
xchg
xchg
popf
xor
and
push
jle
push
adc
xchg
adc
pop
pushf
mov
jo
lahf
ljmp
stos
ficoms
or
cmp
xchg
sbb
in
push
sub
aam
sbb
in
lcall
sub
push
xchg
cltd
and
mov
das
xchg
mov
pop
mov
pop
loop
fsubr
xor
ljmp
stos
adc
fidivl
add
jmp
push
filds
fld
push
nop
aaa
lea
pushf
xchg
ds
inc
push
inc
cs
es
push
test
sbb
xchg
cwtl
pop
pop
push
movl
rcl
cmc
mov
jge
fnsave
cmp
xchg
xchg
cltd
aas
lret
rolb
xchg
cmp
test
or
cmp
sub
sbb
fsubl
fs
es
pop
xchg
mov
mov
xchg
stc
fsubl
dec
pop
cltd
push
mov
cltd
int
xchg
pop
jbe
mov
adc
pop
sbb
jbe
xchg
stos
adc
cltd
test
pushf
xor
sub
cltd
xchg
jl
add
pop
adc
push
cmp
add
or
adc
mov
popa
out
pop
adc
pop
mov
scas
push
cmp
and
mov
sbb
mov
adc
adc
pop
xchg
pop
mov
push
sbb
jbe
movsb
lea
inc
int3
jg
adc
xlat
cli
into
xchg
dec
xchg
xlat
pop
lods
sti
push
push
xor
lock
pop
sbb
push
fsubp
pop
push
cli
pop
pop
test
jg
ret
outsl
jnp
jno
stos
adc
inc
push
push
fisubrs
pop
stos
xchg
adc
sbb
xchg
push
xchg
or
repnz
adc
add
xchg
aaa
mov
leave
mov
leave
fisttpll
push
push
nop
cmp
fcomps
ds
rcr
les
xchg
jno
push
arpl
ds
push
call
in
adc
in
add
pop
stos
add
push
imul
outsl
and
sub
inc
ffree
jo
pushf
aas
adc
pop
or
ffreep
cltd
xchg
pop
jne
lods
cltd
pop
xchg
push
push
in
adc
sbb
mov
rcll
mov
pop
and
lods
aam
ficoms
stos
push
pop
xorb
mov
xchg
shlb
mov
lods
pop
sahf
push
cmc
loop
into
lods
int3
adc
xor
cmp
mov
mov
enter
sub
adc
or
adc
in
lods
and
out
dec
ret
inc
push
push
outsl
add
adc
xor
xor
adc
cmpsb
sbb
adc
fucomp
sub
mov
gs
lahf
fcoml
sti
push
jo
mov
cmpsl
xchg
pop
scas
adc
cmp
sbb
or
fisttpl
xchg
pop
fistpl
out
xchg
xchg
ret
imul
cmp
fstpl
jle
pop
mov
cmp
xchg
sahf
pop
cltd
jge
inc
add
xchg
gs
fnsave
xor
jb
and
mov
xor
add
xchg
sub
sub
stos
shll
hlt
inc
adc
ret
sub
push
jae
mov
mov
out
push
sub
xlat
pushf
lea
stos
shlb
sub
hlt
mov
ret
fstps
mov
das
aad
in
mov
sub
inc
xchg
das
pop
rcrl
sub
shrb
roll
push
fstl
dec
fstpl
aam
xchg
lret
push
dec
outsl
push
aad
addr16
add
pop
ljmp
push
sbb
xor
sbb
pop
xchg
cwtl
shrb
inc
sub
mov
push
out
cwtl
push
popf
cmp
movsl
sub
sahf
lock
inc
mov
push
xor
dec
sahf
sbb
das
cmpsb
aas
sbb
xchg
out
mov
fcoml
mov
inc
pop
sbb
in
loope
fdivs
mov
pop
pop
sbb
mov
aam
cltd
sub
add
push
out
jns
pushf
dec
lcall
stc
and
test
ss
lcall
push
xor
fldcw
add
ds
loop
out
inc
xchg
std
aad
jnp
add
dec
gs
fbstp
xor
pop
pop
daa
outsl
cmp
xchg
xchg
rcrl
mov
mov
push
daa
add
mov
adc
or
xchg
mov
xchg
and
leave
xchg
add
push
push
pop
sahf
dec
sub
lcall
cmp
sub
push
aad
mov
cmpsl
push
xchg
cmp
dec
add
push
push
cmpsb
sahf
lahf
ss
and
xlat
inc
sbb
andl
fldl
inc
out
imul
xor
fldt
rcl
fwait
push
fsts
into
popf
stos
outsl
iret
or
sbb
push
push
xchg
sbb
out
jmp
xchg
icebp
das
roll
aad
push
inc
mov
adc
movsl
leave
aad
bnd
adc
ds
in
xor
ja
pop
iret
mov
stos
adc
out
push
mov
shl
xlat
sbb
mov
adc
shll
xchg
scas
push
mov
sub
xlat
sbb
jo
test
imul
and
mov
cmp
movsl
mov
adc
sbb
mov
sti
stos
xor
sbb
icebp
lock
xlat
test
int3
hlt
push
mov
ljmp
pop
das
push
aad
push
sub
push
out
sub
or
xchg
outsl
aam
stos
pop
pushf
push
fiadds
dec
xchg
and
inc
xchg
adc
sbb
pop
fucomp
mov
fadd
in
or
sub
fwait
push
mov
dec
xchg
jecxz
push
sub
pop
out
fdivrl
push
pusha
mov
leave
in
lahf
sahf
pop
rcrl
jp
cwtl
pop
add
push
xchg
sbb
inc
sub
repnz
jge
inc
xchg
add
cwtl
or
sahf
xlat
cmp
or
test
adc
pop
popf
xor
pop
add
in
sub
sahf
push
adc
jbe
roll
lods
jg
pop
jge
add
sub
push
xchg
and
sbb
push
adc
das
pop
test
push
push
mov
shlb
adcb
fstp
shrb
pop
xchg
xchg
pop
mov
xchg
push
les
test
mov
jg
das
sbb
dec
xlat
mov
adc
leave
mov
push
pushl
sub
pop
push
sbb
ss
fsubl
shrl
fcom
cmp
scas
frstor
loop
push
cmp
xor
adc
imul
fwait
shlb
jbe
imull
mov
sub
adc
out
repnz
push
mov
fisubrs
xlat
rcr
pop
neg
xchg
rcrl
xchg
jb
ret
xchg
sarb
lret
outsb
sub
sbb
popf
aad
movlps
mov
jne
mov
js
mov
cmp
push
insl
push
xchg
pop
pop
adc
movsb
xchg
out
mov
pop
sub
jb
flds
sub
push
mov
mov
adc
notb
lret
pop
movsl
jnp
ss
xchg
mov
pop
mov
cmp
pusha
dec
pop
pop
cmp
xlat
fwait
das
adc
adc
adc
pop
fscale
in
lods
push
xor
adc
push
push
pop
sbb
inc
fucomp
jle,pn
mov
mov
cld
mov
pop
fcoml
popf
push
sub
mov
into
xchg
push
cltd
xchg
push
cmp
jmp
xor
dec
push
fucomp
stos
movsl
pusha
lods
fstps
pop
cmp
add
add
push
sbb
lods
mov
fstl
add
iret
and
loop
mov
push
mov
xchg
fstpl
mov
rcrb
and
jne
xchg
push
xchg
mov
jge
pop
mov
sub
fstpl
adc
adc
push
adc
pop
xchg
scas
jae
inc
mov
push
les
fs
fsts
push
fwait
sbb
lods
fadd
in
stos
inc
xchg
pop
add
sub
and
xor
xchg
sbb
or
push
push
jmp
inc
stos
push
out
mov
clc
aaa
xchg
push
push
test
mov
int3
sbb
xor
pop
pop
pop
imul
out
out
push
pop
cmc
dec
sbb
pop
aaa
movsb
into
popf
or
pop
inc
seta
icebp
xchg
push
lcall
jp
loopne
fildll
lahf
push
or
rcr
cmp
adc
pushf
cltd
and
pop
sbb
insb
popf
cli
sbb
rclb
xchg
imul
arpl
jno
dec
xchg
jnp
push
lahf
das
les
or
lret
pushf
scas
sub
sahf
sbb
fstp
push
mov
hlt
sbb
pop
lcall
push
mov
push
sbb
push
adc
jo
mov
cmc
sub
outsl
push
das
xor
cmp
call
mov
or
pop
mov
add
dec
add
adc
dec
popf
jmp
aad
jno
ficoms
push
sub
cmp
aad
and
mov
and
add
subl
fisubs
das
lock
test
adc
xor
lret
subl
out
push
sub
scas
xchg
adc
push
sub
push
inc
sbb
ficomps
sahf
adc
sbb
push
xchg
pop
sub
push
mov
pop
shrb
lods
sub
in
mov
sub
push
movsb
jb
and
jb
and
xchg
and
inc
scas
gs
or
loope
jae
aas
sbb
fisttps
push
loop
pop
sbb
ja
fnstsw
adc
adcl
pop
outsl
dec
loop
xchg
mov
inc
movl
inc
mov
in
mov
pop
xchg
sub
sbb
lock
popf
pop
mov
add
push
scas
lea
mov
cmp
sub
enter
adc
nop
cld
inc
push
pop
fmul
mov
mov
xchg
gs
and
mov
mov
mov
xchg
push
mov
fcoms
inc
xor
fists
mov
movsb
mov
sbbb
dec
sub
adc
mov
dec
jns
fcmovne
xchg
push
cli
xor
jns
pop
pop
xor
pop
jno
dec
sub
push
add
leave
sub
cltd
sahf
push
xchg
add
sbbl
sarb
add
sbb
adc
ds
and
push
aam
cmp
decb
add
lods
sbbl
mov
or
xlat
sub
sahf
ljmp
dec
mov
push
rcr
pop
push
cwtl
adc
ljmp
mov
push
shlb
gs
adc
addr16
xchg
push
pusha
push
xchg
lods
push
out
adc
pop
inc
xchg
xchg
sbb
mov
push
push
enter
push
out
test
outsl
mov
sbb
divb
push
icebp
sbb
adc
lret
mov
leave
push
sahf
imul
aam
loopne
adc
mov
mov
fiadds
imul
xor
pushf
adc
or
inc
out
lret
add
jno
add
xchg
xlat
mov
add
js
push
out
rcll
mov
xchg
std
adc
movb
js
das
sub
ret
add
mov
inc
pop
test
adc
aas
mov
in
adc
inc
fmul
xchg
inc
int
roll
fldenv
push
stos
xchg
xchg
rcrl
inc
push
adc
scas
jns
mov
std
mov
xchg
xor
adc
inc
push
mov
fldenv
push
orps
push
and
lret
mov
int3
pop
adcb
leave
or
or
push
leave
pop
ret
push
or
sahf
pop
xchg
push
stos
xchg
aad
mov
xlat
ljmp
xchg
stos
jg
test
xor
sbb
fistl
and
adc
aam
sub
inc
mov
loopne
jmp
sbb
ljmp
cmp
pop
xchg
xchg
sbb
imul
or
or
sub
fisubrs
dec
lods
inc
xchg
fsub
jae
sub
and
xchg
movsl
mov
sub
push
sahf
loop
inc
mov
pop
adc
adc
repnz
cmp
adc
and
ljmp
fst
ja
pop
sbb
or
pop
out
repnz
daa
mulb
sub
test
popf
push
mov
jns
mov
lret
xchg
ss
jg
dec
adc
sub
sti
nop
pushf
fstpl
stc
neg
adc
fmul
shll
int
add
jmp
push
ss
mov
sbb
ret
pop
loop
dec
pushf
stos
adc
repz
add
ficoms
shrl
add
fwait
xchg
push
hlt
add
int
sub
popf
pop
sub
mov
inc
inc
les
cltd
push
add
pop
fldcw
pop
push
cmp
xchg
mov
push
push
bound
fs
cltd
push
xchg
sub
inc
add
and
push
das
fsubrl
in
lcall
xchg
aam
stos
xchg
inc
and
outsb
outsl
pop
in
icebp
lret
sbbb
enter
mov
sub
jl
add
lret
scas
cmp
sbb
sub
xor
sbb
xlat
cmp
fs
roll
xchg
mov
xlat
and
or
pop
pop
push
out
test
or
cmp
push
stos
pop
outsl
adc
inc
into
pop
aad
mov
xchg
das
fadd
call
or
cmpl
pop
fadds
jmp
popf
bound
das
inc
fidivs
aam
and
rclb
imul
faddl
dec
push
lcall
push
ret
inc
push
sub
adc
stos
in
mov
cwtl
jl
scas
push
xlat
fstl
pop
sarb
lcall
repz
je
xor
test
push
roll
sub
adc
fisubrs
adc
idivb
dec
cmp
dec
sub
mov
lock
and
int
push
xchg
sahf
jmp
aas
movsl
push
mov
xchg
ja
pop
lods
test
es
ficompl
jns
sbb
adc
sub
stos
enter
fstp
push
push
les
aam
push
adc
ffreep
pop
push
ljmp
jns
push
repz
mov
xor
repnz
xchg
fbstp
popa
fwait
cmp
inc
fstl
mov
pop
lret
lea
lock
sub
pop
pop
push
into
enter
adc
enter
pusha
test
inc
xor
push
sbb
dec
add
into
pop
xchg
loop
adc
jge
adc
ret
push
shrl
lret
test
push
pop
xor
ja
add
adc
pop
sub
push
ljmp
push
adcl
test
imul
flds
fists
out
enter
lock
or
mov
insl
sbb
jge
ljmp
adc
push
cmp
xchg
fldl
sub
es
xchg
xchg
fwait
push
adc
mov
push
mov
mov
xchg
push
jb
ds
fists
sbb
pop
inc
adc
stos
lock
cltd
jbe
inc
out
add
rcr
jge
pop
scas
add
xchg
mov
adc
rcll
lcall
inc
shll
push
sbb
je
push
lods
push
sbbl
xchg
and
sub
sbb
sbb
mov
add
xor
xchg
ds
lods
push
scas
xor
cmc
sahf
enter
nop
sub
push
xchg
inc
fcompl
sbbl
outsl
jbe
scas
cmp
sub
push
push
scas
div
pop
and
popf
out
insb
lea
test
sbb
push
nop
or
fisubs
test
pop
xor
push
stos
leave
push
pop
cltd
xor
data16
push
rclb
pop
fdivp
sub
outsl
rclb
sbb
pop
int
add
rorl
gs
xchg
mov
stos
jo
repz
lret
push
popf
das
ds
push
les
inc
pop
cltd
addb
xchg
pop
add
clc
lret
roll
in
and
inc
inc
ljmp
into
xchg
and
inc
rorb
push
mov
push
push
sub
inc
add
mov
push
adc
add
sbb
mov
cltd
pop
and
std
mov
sub
push
adc
imul
call
adc
imul
cmp
les
cmpsb
hlt
aam
lcall
xchg
xchg
push
sub
pop
fs
cmp
push
push
test
js
scas
adc
sub
aam
sbb
mov
fidivs
jmp
shr
stos
les
test
sbb
call
sbb
push
push
shrl
sbb
xor
pop
insl
js
aas
mov
mov
setnp
xchg
ss
pop
push
pop
cmpl
enter
mov
ja
inc
loopne
insl
ret
inc
dec
push
popa
push
push
out
adc
out
das
xor
inc
rclb
add
rcll
test
stos
fsubp
or
jne
iret
dec
mov
rorl
mov
xchg
push
add
lcall
cmp
sbb
bound
inc
jge
out
fcoml
push
xor
lcall
lea
xchg
xchg
fdivl
test
push
mov
int
pop
popf
aam
adc
and
jge
pop
and
sbb
sbb
pop
push
xor
insb
xchg
push
sbb
xlat
push
rcrl
enter
ja
xchg
ds
scas
aam
sahf
popf
add
das
jle
fmull
shrl
int3
xchg
mov
xchg
ret
fstps
mov
repz
aam
dec
push
popf
pop
movb
scas
pusha
mov
addb
mov
test
cs
scas
adc
sub
mov
push
xchg
cmp
sbb
loopne
sbb
xchg
sub
cmp
push
or
adc
fst
push
push
fsubrl
mov
pop
add
cmp
sub
xor
pop
fcoml
iret
sbb
cmp
cli
sbb
add
xchg
fisttps
push
aam
mov
ljmp
mov
fnstenv
pop
adc
sub
pop
paddusw
push
add
push
adc
int3
cltd
sub
and
stos
cmpsb
lret
rcrb
movsb
push
lahf
into
push
push
pop
xor
sahf
xor
sbb
mov
sahf
add
leave
sub
lahf
lods
in
std
add
test
cmpsl
scas
sub
sub
adc
cmpsl
push
shrl
push
sub
clc
addr16
dec
fst
fld
add
xchg
ret
notl
xchg
popa
aam
addr16
adc
fwait
shll
mov
into
xchg
xchg
sbb
lock
test
ljmp
push
sbb
jne
xlat
rcrb
cmp
cmp
mov
push
xlat
inc
adc
or
aad
sahf
mov
adc
pop
xchg
xorl
mov
movsl
and
and
scas
leave
fistpl
aas
pop
les
hlt
shll
stos
repnz
dec
adc
movsl
sub
ja
sarl
sub
pop
cmp
push
rcr
nop
sub
adc
push
fwait
pushf
push
not
sbb
push
xchg
xchg
shrb
mov
add
scas
rcll
and
stos
adc
fmul
stos
xlat
jno
inc
shl
cmp
xor
fwait
popa
dec
icebp
into
xor
push
cltd
test
pop
sbb
lods
xor
movl
popf
xchg
or
mov
imul
pop
outsb
add
push
adc
and
xchg
sahf
sub
adc
xchg
inc
adc
xchg
sbb
push
adcb
sbb
adc
out
adc
push
xchg
pushf
push
xchg
push
xor
add
xchg
mov
push
aad
out
inc
xchg
push
rcll
and
add
xchg
jbe
pop
fcompl
in
xchg
push
sahf
inc
push
xchg
adc
mov
push
andl
nop
and
nop
push
test
sbb
sar
imul
dec
push
faddl
ljmp
sub
push
stos
push
pop
fwait
and
inc
subl
adc
sbb
call
sbb
push
or
pop
ljmp
adc
shl
repz
pop
ss
fistps
inc
inc
out
cs
call
lods
push
cltd
cmp
fmull
push
push
push
fidivrs
xor
ds
repz
sub
lcall
pop
aas
xor
int3
cmp
jne
scas
adc
adc
rcrl
mov
clc
lock
xchg
das
push
add
les
ror
xchg
test
or
xlat
xchg
sub
and
and
mov
cmpb
push
test
cmp
fstpt
jb
add
fst
mov
mov
dec
adc
fmul
sbb
jo
inc
mov
mov
and
scas
mov
push
inc
mov
pop
mov
adc
in
rcll
sbb
mov
and
sbb
les
dec
lcall
ljmp
sahf
les
jp
and
fcmovnb
adc
mov
mov
mulb
roll
adc
imul
sbb
bound
jmp
cwtl
aas
and
and
flds
push
bound
inc
cltd
popf
lods
out
xor
das
sbb
lcall
lea
lock
pop
fisubs
cmp
sbb
sbb
out
xchg
fsubrl
pop
xchg
add
push
aas
add
push
fsubp
leave
scas
fmull
inc
pushf
xlat
iret
sbb
push
inc
sbb
fs
adc
enter
sub
pop
push
subl
cwtl
cmp
ficoml
inc
pop
adc
sbb
pop
mov
cld
jne
outsl
das
inc
sub
fs
mov
out
or
adc
adc
fisubs
push
push
push
and
gs
dec
faddl
mov
mov
and
pop
out
push
imul
lret
jmp
adcl
shlb
mov
sub
xlat
xchg
xchg
pushf
cmp
rcll
pop
and
sbb
dec
rcll
test
jmp
pop
adc
testb
adc
das
fildl
jle
lods
xchg
cmp
fwait
xchg
push
sbb
inc
cltd
pop
or
lcall
mov
stc
sbb
ljmp
xchg
push
or
aam
movsl
icebp
mov
inc
sbb
mov
pop
and
xchg
iret
popf
test
pop
dec
push
inc
clc
or
sub
push
out
mov
sub
and
or
rcr
subb
mov
loopne
pusha
lea
xchg
adcl
loopne
cmp
add
popa
sub
sarl
jbe
xlat
inc
xlat
mov
inc
xchg
adc
push
test
xchg
inc
scas
lods
push
xchg
sub
xchg
push
sub
jne
push
js
mov
mov
les
sbb
scas
inc
ljmp
push
cmp
aam
xchg
sbb
in
fstps
push
pop
out
inc
inc
pushf
in
push
adc
stos
add
scas
add
adc
cmp
inc
xchg
push
push
add
loop
incl
adc
and
loope
xor
xchg
jb
xchg
in
cmp
jp
leave
sub
dec
jo
fsubrl
push
les
popf
sub
ficoms
js
fsubrl
loop
add
in
push
scas
xchg
xlat
and
jmp
cltd
fsubr
xchg
inc
das
fisubrs
data16
int
add
mov
sbb
stos
adc
pop
adc
cmp
mov
push
pop
dec
sub
popf
enter
into
push
outsl
and
push
ljmp
xchg
dec
inc
in
leave
mov
pop
or
push
xchg
sub
inc
lret
subl
ds
and
sub
pop
sbb
daa
xchg
xlat
lret
sbb
std
push
lods
mov
cld
and
mov
sbb
orl
scas
push
adc
sub
or
add
push
sbb
das
cmp
les
popa
mov
int3
sub
push
stos
push
mov
mov
bound
sbb
out
push
cltd
push
sbb
adcl
jle
lret
popf
sbb
mov
jg
xchg
push
shlb
fldl
push
dec
mov
pop
call
and
adc
leave
xlat
xchg
lret
push
dec
push
adc
xor
sub
mov
fcomps
sbb
pop
inc
cmpsb
movsl
add
iret
fcomp
xor
or
cmp
and
xor
xchg
or
push
xchg
inc
aaa
aad
sbb
pushf
pushf
cmp
push
push
adc
repz
mov
adc
popf
pop
ror
repnz
imul
cmp
push
mov
mov
mov
sarb
fisttps
push
adc
add
sbb
ficompl
fsts
fiaddl
or
xchg
iret
shrb
stos
ret
scas
sti
xchg
popf
sbb
rcl
or
adc
aam
insb
cmp
push
mov
xlat
cltd
sub
push
sbb
negl
sbb
das
hlt
jbe
dec
sbb
bound
push
and
inc
outsl
cmpsl
inc
inc
mov
scas
inc
mov
fsubs
pop
aaa
add
sahf
out
push
sbb
sarl
adc
and
sub
xor
popf
leave
push
xchg
aad
add
movsl
mov
rcrl
xchg
repnz
stos
test
ja
push
inc
mov
xchg
aam
rcr
dec
cmpsl
sbb
push
push
lret
adc
mov
test
out
sahf
sbb
sbb
sbb
mov
add
xchg
sbb
ficompl
clc
pushl
jle
mov
sbb
add
movsl
pop
lret
adc
pop
push
sbb
sbb
sahf
jo
add
and
inc
fists
xchg
xchg
and
mov
leave
push
fcoml
cltd
in
jb
mov
imulb
and
pop
mov
aad
decb
pop
push
daa
rcrb
sbb
sbb
mov
jge
sbb
or
xchg
xchg
insl
sub
scas
pop
outsl
xor
clc
add
push
fsubl
insl
add
push
xchg
jns
adc
inc
adc
push
shrb
dec
in
cwtl
push
js
pop
push
ficomps
mov
cmpsl
int3
push
push
lret
pop
add
sti
enter
xchg
push
nop
xor
aas
call
pop
rclb
scas
xchg
lock
scas
sub
out
adc
out
adc
rorl
fs
push
loopne
sarl
xchg
dec
push
sahf
nop
or
stos
add
sub
call
pop
sti
pusha
or
jne
pop
inc
lahf
add
cltd
cmp
pop
pop
sbb
imul
sbb
add
mov
cli
test
xchg
pop
sub
aam
movlps
in
icebp
push
push
inc
jl
jmp
lods
fstl
aad
in
xchg
ljmp
or
sbb
adc
push
jns
fwait
sahf
inc
adc
xchg
mov
cmp
lret
mov
push
push
cmc
outsl
aam
leave
out
sub
leave
add
insb
mov
dec
and
cltd
adc
xor
into
shlb
push
sahf
popf
mov
mov
sub
scas
ljmp
sub
enter
jecxz
xor
xchg
cmp
das
push
imul
xor
sub
pop
pop
adc
cwtl
sbb
mov
sbb
aam
hlt
jb
mov
pop
fadds
rcr
xchg
adc
jo
cvtps2pd
xlat
mov
popa
mov
inc
stos
sahf
stos
add
push
push
sub
pop
rcrb
xchg
sbb
mov
cmp
pushf
add
or
or
sbb
leave
fld
dec
je
push
nop
and
stos
dec
or
pop
in
les
test
pushf
lock
sub
pop
push
out
push
fbstp
lea
pop
push
inc
insl
ds
fstpl
push
out
xor
lret
mov
test
push
das
mov
mov
xor
or
adc
xchg
sarb
rcrl
mov
popf
jp
xchg
jo
int
push
stos
inc
push
rol
loop
pop
pop
pop
lret
icebp
mov
push
mov
ljmp
popf
add
xlat
fsubl
push
xor
xchg
js
das
xchg
mov
cmpsl
add
hlt
pop
test
push
lcall
repz
xchg
and
ljmp
push
sub
push
ret
out
les
insl
jg
inc
test
and
shll
sbb
decb
lock
mov
js
cwtl
movsl
xchg
fldl
mov
lock
imul
cmpsb
popf
je
adc
inc
inc
ret
fldcw
lock
pop
fiaddl
sbb
lcall
xchg
xor
sbb
subb
cltd
in
mov
cmp
cmp
inc
cltd
les
and
push
outsl
std
push
sub
adc
dec
push
cmp
adc
fsts
add
aam
pop
es
mov
lcall
xlat
in
addr16
xchg
mov
mov
scas
xchg
outsb
nop
pusha
imul
pusha
js
inc
fsubp
or
sub
xchg
mov
sbb
push
jge
outsl
bound
mov
or
xchg
jno
popf
add
cltd
sub
push
mov
xchg
shrl
rcrb
push
popf
aad
or
push
inc
push
jns
sbb
movsl
fs
movl
outsl
add
inc
bound
in
stos
in
or
push
pop
fidivrs
dec
mov
adc
stos
push
mov
mov
pop
pop
iret
out
adc
sub
sub
ficoms
cltd
and
cmp
add
adc
adc
in
pop
pop
adc
inc
jno
cltd
imul
jl
mov
lret
out
sub
lds
jnp
stos
mov
stos
sbb
xchg
popf
stos
dec
sub
xchg
cltd
into
stos
push
sub
cmp
out
ficoms
stos
jl
test
mov
adc
mov
push
in
adc
les
sub
cmp
stos
jl
mov
lret
out
sub
lds
jg
stos
mov
stos
sbb
xchg
popf
stos
dec
sub
pop
lds
dec
inc
stos
cmp
out
ficoms
stos
jl
enter
jb
xadd
lcall
cmp
xchg
push
jl
fs
lahf
dec
xchg
push
pop
ficoms
pop
rcrb
push
push
push
ljmp
fiaddl
pop
shrb
fcoml
xchg
push
stos
push
push
lret
or
push
out
xlat
rclb
adc
sub
stos
xchg
lret
fcomps
lret
push
das
fdivr
adc
sub
adc
push
frstor
jo
pop
push
jne
inc
js
popf
cld
imul
fisubl
mov
roll
mov
push
or
sbb
out
xor
pushf
lret
mov
push
adc
pop
mov
sbb
pop
or
rol
push
push
outsb
mov
push
bound
les
loopne
push
sbb
adc
xor
push
out
push
aam
in
and
pusha
sbb
das
outsl
push
and
sub
inc
push
adc
xchg
lea
mov
push
sub
out
sbb
aas
adc
mov
sub
cwtl
lods
cs
push
filds
sbb
out
mov
sbb
dec
push
xchg
pop
xchg
test
cltd
int
rcrb
mov
xchg
adc
cmp
push
ror
adc
sbb
mov
out
cmp
repz
push
es
mov
pop
xor
out
add
aad
mov
fists
fstpl
mov
mov
cmp
xlat
popf
xor
ret
in
xlat
es
test
sub
mov
cmpsb
xchg
int3
repnz
xchg
loopne
dec
das
xchg
sahf
stos
inc
test
popf
aam
pop
pop
das
insb
fs
and
lods
mov
mov
outsl
sub
cmpsl
sub
int3
cmpsl
sub
cmp
pop
iret
jl
lock
jp
es
iret
or
push
mov
dec
push
cs
sbb
lods
nop
arpl
dec
mov
sub
xchg
mov
push
movsl
xchg
dec
movsl
jg
sub
rorl
sub
les
lret
cmp
jg
dec
fstps
jle
mov
test
sub
icebp
mov
rcrl
mov
les
pop
roll
es
push
xchg
inc
lret
add
rcrl
test
les
cmp
aad
mov
xor
xchg
inc
movsb
sub
cwtl
sti
popf
jae
xorl
stos
mov
movsl
push
adc
lcall
xchg
leave
outsl
add
sub
push
repz
int
pop
sbb
hlt
sti
pop
int
push
push
hlt
loop
jle
mov
mov
ficoms
or
sbb
scas
mov
push
ljmp
adc
fstpl
clc
jge
xchg
sbb
xor
or
imul
cmc
inc
jp
jbe
inc
jle
in
dec
pop
xor
loop
mov
rcrb
push
push
mov
adc
outsl
aam
xor
out
pmullw
gs
rsm
fildl
loopne
add
add
aam
shrl
xchg
mov
pop
icebp
inc
jns
mov
aam
lcall
cmpsl
test
sub
adcb
dec
outsb
xchg
jg
fwait
pop
cltd
pop
stos
sbb
int
push
push
test
pop
inc
pop
aam
popa
mov
cmp
test
xor
adc
push
pop
sub
inc
xchg
sbb
stos
imul
sbb
mov
jecxz
adc
dec
ret
rol
fadd
xchg
ret
aam
adc
adc
aad
pop
ret
adc
push
mov
mov
inc
filds
push
roll
mov
and
bound
les
push
sahf
push
xorl
sbb
jp
sub
les
imul
mov
outsb
push
sub
mov
sub
pusha
aaa
daa
sub
mov
sbb
pop
push
or
fisttps
inc
inc
imul
aaa
inc
cwtl
popf
xchg
and
xor
xchg
push
aaa
inc
cwtl
popf
xorl
xchg
lret
add
stos
cwtl
cltd
add
mov
and
lret
xchg
lret
inc
sbb
xchg
or
andl
les
jmp
les
imul
mov
sub
andl
imul
xchg
cvtdq2ps
adc
es
aaa
pop
xchg
sub
xchg
add
cmp
fwait
sbb
inc
test
push
scas
sbbb
inc
test
or
and
scas
adc
xlat
inc
fwait
xchg
xchg
fists
xchg
fistps
sub
xchg
test
xchg
sahf
cs
test
orl
insb
sub
xchg
scas
xchg
push
mov
scas
out
push
je
jo
into
sti
popf
imul
cwtl
xlat
pop
fwait
outsl
push
scas
adc
xlat
push
fwait
xchg
xchg
fists
fildll
fucomip
xchg
fildll
fists
fists
xchg
fistps
pop
and
xor
sbb
inc
into
jp
xchg
jp
pop
out
rol
rcr
push
lods
xchg
addl
popa
mov
xchg
push
popa
lea
xor
push
lcall
lret
cmp
xchg
push
ja
mov
cmp
es
ljmp
aad
pushf
mov
add
xchg
and
mov
inc
lret
aaa
inc
cwtl
pop
inc
mov
push
push
inc
mov
push
mov
dec
popf
mov
push
mov
jl
push
inc
test
sbb
sahf
dec
xorl
dec
xchg
loop
xchg
add
jnp
add
and
lret
inc
sbb
mov
fisttps
cltd
lahf
movsl
sbb
lret
add
sbb
ljmp
sbb
jns
add
dec
adc
xchg
fwait
mov
test
arpl
mov
movsl
ficoms
add
inc
add
lock
inc
imul
inc
cwtl
popf
inc
mov
into
imul
popf
call
or
ds
sbb
inc
das
push
sub
and
and
cwtl
fildll
out
mov
test
aas
xor
aaa
inc
cwtl
dec
aaa
inc
cwtl
pushf
inc
test
sbb
mov
test
mov
out
push
call
cmpsb
sub
xchg
sbb
jle
out
xchg
je
js
cmpsl
mov
sbb
xor
xor
xor
xchg
out
mov
push
bound
inc
aaa
inc
xchg
sbb
xchg
xor
arpl
mov
mov
mov
and
in
in
xor
cmp
cmpsl
or
mov
nopl
gs
mov
push
gs
sahf
lods
fmulp
add
sub
lret
cltd
and
xor
push
test
mov
or
push
cwtl
push
xlat
inc
out
movsl
inc
push
xchg
sbb
xor
xchg
push
pushf
push
mov
xchg
aas
sub
or
adc
adc
xlat
xchg
mull
loope
iret
inc
inc
xchg
je
test
mov
inc
mov
out
or
xorb
mov
mov
inc
out
xchg
aas
add
cmp
loop
or
pop
cwtl
cmp
push
sbb
arpl
ljmp
pop
push
cmpsl
test
add
pop
dec
out
add
fwait
sbb
jge
or
sub
sbb
addr16
leave
lods
inc
inc
add
pop
xor
add
insl
fcmovnbe
rolb
pushf
push
adc
in
ss
pop
and
fiadds
xchg
push
mov
add
ja
aas
mov
fcompl
pop
shrb
mov
mov
pop
and
jge
int3
add
and
pop
sbb
inc
adc
sarl
in
pusha
push
or
lret
push
cmpsl
test
lret
fwait
rcll
fsubl
xchg
sbb
jmp
fnstenv
or
out
or
rcrl
push
mov
xchg
add
push
lods
sub
cltd
pop
sbb
outsl
adc
sbb
xor
cmp
sub
pop
sub
mov
sbb
fidivl
popf
xchg
xchg
adc
adc
dec
hlt
dec
cltd
adc
rclb
add
xor
jp
dec
xchg
sbb
xchg
or
pop
sbb
nop
notb
cltd
fists
push
test
inc
arpl
inc
xlat
push
push
out
ds
stos
sbb
pushf
adc
mov
push
xchg
cwtl
sti
nop
push
jns
cmpsb
xor
mov
fmul
pop
ljmp
sbb
roll
add
xlat
push
fwait
out
scas
adc
scas
mov
pop
lret
mov
cltd
and
jo
cltd
xor
add
inc
inc
jecxz
cmp
cmpsl
pushf
xor
pop
or
sub
insb
scas
adc
push
xchg
adc
mov
lahf
lea
mov
xor
imul
test
mov
mov
lods
push
fnstcw
mov
mov
inc
and
outsl
pop
cmp
subl
addr16
insb
inc
sbb
push
sbb
lcall
pop
sub
mov
xor
or
addl
and
ljmp
cmp
sbb
dec
push
sbb
pushf
ljmp
sub
fldl
addr16
adc
jecxz
inc
jmp
adc
pop
adc
rcl
lahf
push
mov
bound
fcomps
nop
jl
mov
add
testl
xchg
sbb
out
adc
filds
outsl
xchg
sbb
jecxz
enter
inc
xor
scas
mov
cmp
push
push
push
pop
and
adc
subb
add
cmp
andl
push
push
sub
inc
mov
push
push
sub
inc
mov
mov
out
mov
stos
cmp
sub
adc
cmp
mov
add
pushf
push
in
in
ljmp
and
pop
movsl
mov
out
lcall
lret
movsl
dec
imulb
sbb
cs
xchg
ljmp
ret
and
push
jno
insl
lret
pop
movsb
ds
inc
xchg
or
lods
jmp
xchg
test
pop
mov
add
pop
rcll
mov
adc
push
push
cs
cmp
jle
imul
sbb
fwait
pop
cmp
xchg
adc
sbb
mov
mov
or
sbb
push
imul
ljmp
sub
lods
mov
xchg
icebp
jmp
dec
cmpsl
mov
sbbl
scas
stos
xor
sbb
fwait
add
sbb
and
adc
lods
fs
sbb
xchg
cwtl
mov
sbb
pop
inc
lea
lcall
xchg
pop
test
rcl
stos
test
aaa
mov
cmp
lods
sbb
push
xchg
adc
mov
pop
jmp
rcll
mov
pop
sub
in
pop
rcrl
cmpl
sbb
push
xor
scas
mov
pushf
out
and
jmp
add
outsl
mov
popf
fwait
in
lret
fldcw
fucomp
sub
xchg
sarl
mov
cmp
sub
inc
sbb
xor
fwait
cmp
add
test
or
jnp
mov
adc
je
add
xchg
adc
add
mov
mov
add
inc
dec
lods
sbb
rcll
pop
out
xchg
adc
insl
jge
std
fcomps
mov
jle
pop
lret
cmp
gs
out
inc
mov
push
adc
scas
test
adc
cs
mov
mov
xor
pop
add
stos
mov
jns
stc
and
pop
xchg
xchg
sbb
repz
adc
bound
lahf
sub
pushf
adc
es
add
cmp
cs
scas
jae
roll
dec
movsb
sub
fwait
loope
sub
sbb
pop
xchg
xor
xchg
test
lea
push
sbb
fsts
stos
in
lods
cltd
fmul
imul
lret
or
xlat
pop
mov
lods
sbb
dec
lret
dec
xor
jge
add
sbb
cltd
addr16
push
push
xchg
je
xchg
adcl
dec
push
mov
mov
xorl
xchg
cwtl
sub
add
add
fwait
adc
mov
push
sbb
and
cmpsb
dec
dec
xchg
cmp
sub
out
jl
push
pop
imul
pop
imul
rcrl
jae
mov
sbb
pop
or
imul
jle
inc
add
sbb
popa
mov
sbb
les
enter
sbb
les
scas
enter
pop
ss
divl
xchg
sahf
add
add
lcall
dec
push
fwait
insb
lods
cltd
jno
nop
and
pop
lahf
push
in
dec
mov
push
sbb
and
scas
adc
mov
cs
loope
pop
mov
mov
sub
mov
xchg
mov
pusha
pop
xchg
inc
in
imul
sub
test
imul
xchg
cltd
mov
mov
push
push
cmc
cmpsb
out
adc
bound
int
scas
inc
stos
cmpsl
scas
jno
mov
fwait
ret
ja
xor
jb
movsl
xor
and
cmp
and
aaa
add
mov
push
stos
mov
shrb
fsubrp
mov
and
jbe
push
sbb
mov
cmp
sub
jno
xchg
cmp
cmpsl
pop
test
mov
fsubrl
sbb
outsb
test
scas
cld
mov
or
cmp
outsb
test
cmp
jmp
outsb
sub
mov
sbb
push
es
pop
cmp
xchg
xchg
ljmp
and
mov
stos
jb
push
mov
movsl
mov
shlb
scas
cmp
outsb
pop
pop
push
stos
mov
repz
ficompl
movsl
lcall
jb
imul
add
and
ja
lahf
ficoml
aam
mov
lods
pop
xor
cwtl
pop
mov
sub
mov
mov
cmove
fistps
or
shrl
push
mov
and
imul
les
push
xchg
sub
ljmp
mov
add
aas
fcomps
daa
into
or
fwait
cmpsl
insb
xor
inc
push
out
sahf
adcb
xor
mov
cmpsb
fadd
pop
sub
dec
cmp
mov
adc
or
inc
out
push
mov
cmc
and
test
pop
jl
movsl
movsl
scas
or
xor
cs
sbbl
scas
xlat
xchg
ud1
dec
cmp
pop
lea
mov
outsb
and
xchg
fwait
in
cltd
out
subl
stc
xor
mov
push
es
ds
jno
fsubrs
ss
push
mov
push
mov
stc
pop
add
movsb
xchg
mov
sbb
jecxz
scas
jns
xchg
addb
mov
mov
mov
add
mov
xchg
js
mov
xlat
cwtl
insb
adc
add
adc
inc
sub
adc
add
cs
ljmp
cmp
stc
jb
and
xchg
scas
add
and
mov
mov
jns
neg
and
shlb
sbb
les
lea
sub
out
nop
in
and
cmpsb
lret
jae
movb
inc
js
gs
insb
mov
inc
testl
dec
xchg
pop
mov
jecxz
pop
xor
pop
push
pop
test
dec
test
pop
cmp
out
imul
cmp
sub
xorl
fnsave
rorb
icebp
adc
add
inc
adcl
and
iret
popf
fwait
sub
je
adc
repz
jb
dec
sbb
scas
xchg
pop
xor
sbb
and
cmpsb
push
inc
mov
hlt
add
addl
inc
xchg
les
xchg
xchg
lods
cwtl
repz
or
mov
fadds
bound
mov
cwtl
fs
add
fistpl
push
dec
test
and
imul
mov
sbb
push
dec
ss
lea
or
pushf
sbb
mov
icebp
push
pusha
xchg
insl
and
mov
repz
je
test
sub
mov
out
cwtl
fiadds
or
sbb
dec
push
je
clc
aas
xchg
and
stc
inc
xchg
addl
jmp
jb
stos
mov
stc
add
add
mov
lods
jecxz
rcrl
movsb
das
xchg
mov
xlat
xlat
cmp
mov
out
scas
int
push
push
scas
xor
mov
imul
and
shll
lret
adc
call
mov
fwait
sbb
movl
jp
sbb
push
ficoms
lods
adc
insl
mov
fcoms
mov
inc
mov
adc
inc
mov
sbb
mov
push
add
flds
test
movsl
sub
into
cwtl
lods
jbe,pt
lahf
inc
push
pop
mov
cmpsb
add
push
iret
fbstp
xchg
pop
cltd
shrb
mov
xor
sbb
mov
and
sbb
cmpxchg
ror
fwait
pushf
clc
imul
push
cmp
shll
test
and
les
sarl
mov
push
adc
icebp
xor
cmp
cltd
inc
mov
push
cmpsl
xchg
cmp
addr16
add
andl
test
ss
mov
movb
adc
sbb
mov
push
fs
inc
pop
dec
dec
add
adc
sbb
cwtl
push
pop
mov
add
or
add
add
xchg
inc
fwait
lahf
sbb
das
add
lcall
addr16
pop
xchg
cwtl
add
mov
stos
arpl
push
mov
xor
mov
push
movsb
inc
fadd
test
mov
xor
cmp
shl
sub
mov
jbe
mov
and
inc
adc
fcomps
adc
pop
push
mov
nop
popa
sub
scas
push
nop
cmp
or
fisttps
push
jmp
or
push
nop
push
cs
out
sbb
sahf
dec
mov
gs
fnstenv
pushf
jmp
scas
push
push
xchg
mov
lea
pushf
daa
scas
dec
pop
andl
test
sub
out
data16
movsl
xchg
mov
xchg
or
out
fadds
scas
push
adc
and
mov
dec
outsl
outsl
out
adc
mov
push
mov
call
xchg
push
and
sti
or
push
push
dec
lahf
insb
xor
mov
lods
adc
mov
mov
fs
sbb
push
sub
mov
pop
popa
fwait
sbb
xor
xor
jmp
jno
push
movsl
push
jg
outsl
pusha
test
pop
sbb
cwtl
jecxz
daa
shll
mov
push
addl
scas
add
push
mov
jo
add
lahf
dec
addr16
sbb
sbb
sbb
fadds
adc
pushf
jb
sbb
cli
push
pop
incb
scas
push
cmp
sbb
sbb
xchg
xchg
pop
out
sub
push
jbe
leave
mov
push
cmp
arpl
cmpsl
or
xchg
sbb
inc
dec
push
faddp
xor
and
pop
push
adc
mov
push
imul
stc
push
outsb
ret
test
pop
fldcw
jg
dec
mov
sub
idiv
test
call
lea
jae
cmp
cmp
test
call
loopne
lret
cmpsl
mov
sahf
sub
inc
mov
cmpsb
jb
jl
data16
into
lcall
enter
pop
sbb
mov
in
mov
in
aaa
jnp
sub
lahf
cmp
lahf
loope
pop
sub
orb
insb
xchg
cmp
add
js
std
jae
pushf
add
add
cmc
push
test
clc
or
jmp
pushf
lea
je
pusha
mov
mov
mov
lea
jmp
lea
mov
jmp
push
mov
movl
jmp
lea
pushf
lea
push
call
call
call
pusha
mov
mov
jmp
cmc
sub
mov
shl
pusha
pushf
mov
call
pusha
pushl
popf
push
lea
jmp
adc
push
mov
cmc
clc
test
add
call
pusha
mov
pusha
lea
jne
xor
not
cmc
lea
mov
call
mov
call
shl
mov
rcl
shrd
mov
rcr
mov
push
push
jmp
mov
mov
setnp
btr
xor
call
call
call
push
pushl
popl
pushf
pushl
pushf
lea
jmp
movb
pushl
popl
push
lea
jmp
push
call
rcr
aas
movzbw
mov
stc
bt
bt
jmp
aam
mov
ror
ror
mov
bt
add
call
sar
shl
mov
rcr
adc
not
not
mov
pusha
mov
add
movl
pusha
mov
push
pushl
push
pushf
lea
jmp
jmp
ror
or
xor
add
jns
shrd
bt
and
not
mov
pusha
add
pushf
pushf
push
mov
pushf
mov
pushl
mov
lea
jmp
mov
push
lea
jmp
pushf
popl
jmp
test
bsr
shrd
ror
mov
bts
and
bswap
push
mov
mov
movb
test
jmp
pushl
clc
jns
push
cmp
add
pusha
jmp
add
clc
test
sub
push
pushf
mov
pushf
mov
lea
jmp
pusha
pushf
mov
call
pushl
popl
movw
pushl
lea
jmp
call
pushf
xor
movb
bt
test
sub
pushf
mov
push
pushl
movb
pushf
lea
jmp
dec
add
shl
ror
mov
cmp
stc
sub
cmc
jmp
mov
pushl
jmp
pushl
popl
pushl
pushf
lea
jmp
pushf
pushf
stc
sub
mov
xchg
movb
pushf
pushl
jmp
mov
jmp
stc
or
cmc
mov
call
mov
mov
pusha
pushf
lea
jmp
mov
mov
pushf
popl
mov
lea
jo
popl
push
movb
pushf
push
lea
jmp
cmc
sbb
btc
mov
pusha
pusha
add
pushl
movb
lea
jmp
bt
shld
pusha
mov
call
cltd
bswap
mov
movsbl
movzbw
mov
push
push
divl
pushl
movb
movb
mov
jmp
bswap
jmp
pushf
movb
push
mov
jmp
sub
jno
cmp
sub
push
xchg
call
add
call
mov
pushl
cmp
sub
test
stc
and
jmp
mov
mov
movb
pushf
pusha
pushf
popl
call
ror
rol
push
inc
ror
neg
pushf
or
sub
add
mov
test
bt
add
mov
mov
call
pushl
mov
mov
pushf
pushf
lea
jmp
sete
setl
inc
mov
mov
bt
call
pushf
popl
movw
call
push
stc
bt
add
cmc
cmp
clc
call
call
push
mov
mov
movb
lea
jmp
jmp
stc
stc
mov
pushf
sub
mov
mov
push
pushf
lea
jmp
mov
mov
lea
jmp
pushl
popl
push
pushf
lea
jmp
shld
setl
cmc
notl
pusha
shl
bswap
call
mov
pushl
pushf
popl
call
add
jmp
pusha
call
movb
call
push
pusha
push
push
repz
popl
lea
clc
jmp
add
call
mov
pushl
push
pushl
lea
jmp
call
jmp
jmp
sub
pushf
push
mov
pushf
pushf
mov
lea
jmp
cmp
cmc
sub
bt
test
shr
pusha
pushf
pushf
call
call
call
movw
pusha
mov
pusha
mov
push
pushf
lea
jmp
repz
popl
pushf
pushf
push
movl
lea
jmp
shl
xadd
cmc
cmp
mov
btc
sar
ror
sub
cmc
sbb
bsf
xor
add
bts
shl
shrd
jmp
pushf
test
not
movzbl
test
call
movl
pushf
pusha
call
sub
jmp
pusha
mov
push
pushf
lea
jmp
movsbl
lea
cmp
test
push
cmp
push
movw
pusha
lea
ja
test
mov
clc
shrd
movsbw
lea
pushf
sub
or
bts
lea
bts
lea
rcl
shl
and
btc
sub
push
mov
jb
pushf
movsbw
cld
push
mov
mov
movzbw
std
pusha
mov
pop
bswap
lea
pushf
lea
call
push
movb
push
pusha
mov
call
mov
pushl
mov
push
lea
jmp
pushf
jmp
bswap
shrd
sbb
das
mov
stc
sets
clc
mov
call
shr
movw
pusha
mov
jmp
pusha
shl
bt
shr
mov
sar
add
add
pusha
not
setne
call
rol
cmc
shl
mov
dec
and
mov
stc
pushf
sub
pusha
bt
shr
call
push
test
neg
clc
pushl
xor
bt
jmp
bt
add
pusha
clc
call
mov
jmp
mov
pushl
movw
push
mov
lea
jmp
movb
push
pushf
popl
pushf
push
pushl
popl
movw
lea
jmp
movb
or
movl
jmp
jmp
clc
test
push
test
add
pushl
pushl
mov
push
mov
pusha
pushl
push
lea
jmp
bt
cmp
lea
clc
call
push
mov
pusha
mov
mov
lea
jmp
jmp
mov
add
jp
add
pusha
pushf
pusha
push
lea
jmp
cmc
bt
sub
movb
push
call
movzbl
clc
test
lea
push
cmc
sub
stc
ror
movl
dec
lea
jae
clc
pusha
pusha
rol
movb
mov
sub
mov
pushf
clc
cbtw
stc
stc
cwtl
cmp
jmp
test
xor
stc
add
clc
pushf
pusha
add
jmp
add
jmp
add
call
pusha
aam
rcl
mov
cmc
bt
xchg
pushf
xor
pushf
jmp
test
cmp
sets
ror
mov
rol
and
rcl
mov
call
call
pushf
mov
pushf
push
lea
jmp
pusha
mov
pushf
pushf
lea
jmp
pusha
push
call
cmc
push
btr
push
bt
push
mov
mov
push
btc
push
xchg
lea
xchg
not
push
bswap
pushf
pushf
mov
bswap
pushf
lea
bts
pushl
popl
pop
bswap
push
pushf
lea
ror
push
mov
bts
call
jmp
movsbw
movzbw
mov
pusha
mov
pushf
pushf
push
jmp
xadd
xchg
aaa
movsbl
mov
add
inc
bt
mov
call
mov
pushf
pusha
movb
lea
jmp
mov
pusha
rcl
mov
ror
mov
bt
test
cmp
add
call
rcl
lea
aaa
mov
bsr
shr
and
mov
jae
rcl
xor
cmp
mov
call
add
add
shl
pushf
mov
mov
pusha
clc
add
pushf
lea
jmp
ror
pushf
dec
pusha
mov
sub
jmp
add
movw
shrd
call
jmp
bswap
shl
mov
pushf
shl
jmp
mov
rol
clc
cmp
sub
stc
test
jmp
sub
movzbl
rcl
mov
bt
jmp
cmc
stc
push
xor
clc
jmp
bt
call
lea
jo
pusha
mov
inc
cmc
neg
jmp
jmp
mov
pushf
pushf
mov
pushf
lea
jmp
mov
push
jmp
call
pushf
lea
mov
mov
pusha
pushl
lea
jmp
cmc
xor
cmp
sub
test
clc
mov
cmp
cwtl
test
push
pushf
jmp
lea
jl
push
pushf
mov
mov
mov
push
lea
jmp
ror
xor
rcr
movzbl
mov
cmp
shl
jmp
push
call
push
push
pushl
popl
pushf
push
pushf
pushf
lea
jmp
and
pushf
push
call
test
mov
mov
sub
movb
pusha
lea
jne
call
btc
not
bswap
xchg
pushl
xchg
movzbw
rol
btc
xchg
lea
shl
xor
rol
lea
clc
bsf
mov
seta
sub
call
lea
jne
pushf
push
mov
mov
pusha
push
lea
jmp
add
push
mov
pushf
pushl
ret
mov
pushf
lea
jmp
mov
movb
lea
jmp
xor
adc
rcr
call
and
bsf
shr
mov
test
cmp
pusha
add
push
push
pushf
push
lea
jmp
pushl
popl
mov
pushl
pushf
lea
jmp
mov
mov
btc
mov
call
pushf
popl
mov
movb
call
rol
push
pushf
call
pushl
popl
push
movb
movb
lea
jmp
mov
push
lea
jmp
bsr
lea
push
xor
cmp
add
movsbw
movzbw
inc
inc
clc
rol
lea
bts
xor
xor
movzbl
pop
mov
pushf
jmp
movb
add
sub
lea
call
rep
cld
shl
mov
jmp
mov
mov
mov
push
pusha
movw
pushf
lea
jmp
xchg
std
mov
cld
pushf
movw
cld
call
pusha
mov
pushf
pushl
popf
pushl
lea
jmp
pushf
jmp
mov
pushl
repz
popl
pusha
pushf
pushf
lea
jmp
call
jmp
setb
dec
inc
call
call
mov
mov
pushl
pusha
movw
lea
jmp
lea
jne
inc
push
xorb
lea
mov
pushf
call
rep
ror
rol
mov
btr
bt
add
mov
mov
bt
pushl
popf
movb
mov
mov
lea
jmp
movsbw
shrd
mov
rol
call
mov
pushf
pushl
popl
mov
pushf
push
lea
jmp
repz
popl
push
lea
jmp
call
shld
sub
bt
aaa
mov
clc
jmp
movsbw
push
push
shl
and
pushf
mov
movw
call
mov
mov
pusha
mov
pushl
ret
jp
push
mov
jmp
call
mov
pushf
xchg
movzbw
mov
mov
pusha
cld
cld
mov
push
push
call
test
push
pusha
pushl
sub
lea
jg
pushf
mov
pusha
mov
pushl
movw
lea
jmp
pushl
jmp
call
jmp
mov
mov
pushl
movl
pushl
lea
jmp
push
call
call
add
shl
adc
mov
cmc
clc
cmc
add
pushf
push
pushl
lea
jmp
test
sub
push
mov
mov
movb
movb
lea
jmp
in
stc
fcomps
fcomps
iret
inc
stc
sahf
pop
stc
decb
pop
stc
sub
stc
rolb
and
decb
inc
stc
in
stc
gs
stc
adc
stc
incb
inc
stc
rolb
repnz
stc
in
stc
cld
inc
stc
in
stc
incb
pop
stc
sahf
pop
stc
repnz
stc
imul
mov
pop
stc
xor
xchg
push
stc
decb
inc
stc
icebp
push
stc
decb
stc
sub
stc
sub
stc
jmp
stc
mov
aas
stc
sahf
push
stc
jp
stc
xchg
push
stc
decb
inc
stc
pop
inc
stc
sbb
sbb
cld
inc
stc
cmp
icebp
push
stc
inc
dec
stc
decb
stc
test
push
stc
decb
sub
stc
xchg
push
stc
adc
stc
incb
dec
stc
jle
stc
incb
push
stc
jp
stc
jle
stc
decb
stc
jle
stc
sub
stc
out
stc
jle
stc
pop
push
stc
jle
stc
cli
cmp
jle
stc
icebp
push
stc
jle
stc
rolb
jle
stc
incb
push
stc
xor
push
stc
addr16
stc
jle
stc
faddl
jle
stc
incb
inc
stc
jle
stc
inc
cmp
stc
pop
push
stc
decb
inc
stc
imul
in
stc
xchg
push
stc
decb
dec
stc
inc
push
stc
sbb
pop
stc
cld
inc
stc
icebp
push
stc
dec
inc
stc
imul
rorb
cmpsl
push
stc
in
stc
xor
incb
cmp
stc
adc
stc
rolb
decb
stc
rorb
mov
stc
mov
push
stc
gs
stc
faddl
fcomps
push
push
stc
cld
inc
stc
inc
push
stc
cli
cmp
and
out
stc
rolb
push
push
stc
decb
inc
stc
pop
push
stc
incb
stc
icebp
push
stc
repnz
stc
cmpsl
push
stc
adc
stc
cmp
push
push
stc
sbb
push
stc
decb
inc
stc
decb
sbb
loop
stc
decb
stc
in
stc
in
stc
pop
push
stc
adc
stc
pop
push
stc
xor
cmp
stc
icebp
push
stc
icebp
push
stc
mov
stc
xor
decb
pop
stc
icebp
push
stc
icebp
push
stc
mov
stc
cmp
aam
stc
adc
stc
imul
repnz
stc
cmp
inc
dec
stc
jmp
stc
decb
stc
loop
stc
incb
stc
decb
stc
sahf
pop
stc
sahf
push
stc
decb
stc
icebp
push
stc
sahf
pop
stc
addr16
stc
aad
stc
inc
cmp
stc
cli
cmp
incb
inc
stc
incb
pop
stc
incb
inc
stc
incb
push
stc
incb
ds
incb
pop
stc
incb
push
stc
incb
pop
stc
incb
pop
stc
incb
inc
stc
incb
inc
stc
incb
pop
stc
incb
inc
stc
incb
inc
stc
incb
inc
stc
incb
push
stc
insb
pop
stc
fcomps
dec
cmp
decb
inc
stc
incb
inc
stc
decb
dec
stc
jmp
stc
cmp
repnz
stc
xor
push
stc
out
stc
incb
inc
stc
cmpsl
push
stc
pop
inc
stc
incb
pop
stc
test
pop
stc
cli
cmp
decb
stc
incb
inc
stc
mov
push
stc
in
stc
push
push
stc
sbb
out
stc
in
stc
test
pop
stc
incb
add
sti
loopne
add
push
movb
mov
lea
jne
add
pushf
pusha
shrd
xorb
mov
push
bswap
movzbw
mov
mov
movb
pushf
lea
jmp
call
push
push
mov
push
pusha
repz
popl
pusha
movb
lea
jmp
ror
dec
sub
bswap
mov
shrd
cmp
movsbw
cmp
add
jmp
push
stc
xor
pusha
clc
bswap
movb
stc
neg
cmc
mov
cmp
pushf
add
pushf
push
pushf
pushf
xor
jmp
stc
sub
push
call
mov
pushf
repz
popl
mov
pushf
movb
lea
jmp
jmp
movl
call
pushf
pusha
pushf
lea
cpuid
test
sub
test
cmpl
push
mov
movb
mov
pushf
lea
jns
push
mov
lea
jb
mov
jmp
jmp
rcr
xchg
cmp
rol
mov
pushf
mov
clc
pushf
clc
sub
push
call
call
call
test
sbb
add
mov
test
sub
clc
stc
call
pushf
movb
push
mov
jmp
pusha
cmc
add
jmp
lea
jb
push
pushf
pushl
ret
shrd
push
jmp
jmp
call
call
stc
shr
sub
sar
movzbl
rol
bts
btc
bsf
sub
bswap
bsr
rol
neg
add
push
bswap
bswap
movzbw
inc
and
shld
pusha
cmp
neg
btr
or
xor
shr
shld
bswap
inc
add
rol
seto
rcr
mov
jmp
pushl
mov
repz
popl
pusha
lea
jmp
movzbw
lea
movzbw
inc
rcr
setns
cmc
jmp
push
pusha
mov
pushf
pushl
pushl
ret
cmp
aam
mov
sub
mov
pushf
not
pushf
not
cmp
sub
jmp
mov
movb
push
push
pusha
lea
jmp
pusha
cbtw
test
cwtl
push
bt
sub
push
pushf
mov
pushf
pushf
lea
jmp
mov
movb
lea
jmp
mov
pusha
lea
jmp
dec
jne
mov
test
pusha
test
add
pushl
pushf
push
pushf
lea
jmp
pusha
jmp
movb
add
jmp
shld
mov
test
push
test
add
pushl
pushf
movb
pushl
lea
jmp
lea
not
lea
pushf
bswap
movsbw
push
pushf
bswap
pop
cld
mov
pusha
push
not
lea
call
and
call
setbe
lea
shl
call
call
inc
call
pushf
repz
popl
push
push
pushf
lea
jmp
pushf
popl
call
jmp
add
pushf
call
cmp
pushl
mov
lea
jne
setns
clc
xorb
movzbl
pusha
not
mov
pushl
lea
jmp
push
mov
call
pushf
lea
jne
adc
shl
xorb
pushf
pusha
mov
pushf
pushf
pushf
push
lea
jmp
mov
pushl
pushl
pushf
movl
lea
jmp
clc
clc
clc
add
mov
mov
pushf
cmp
pushf
cmp
sub
call
add
pushf
jmp
pushf
popl
pusha
jmp
btc
rcr
mov
ror
ror
neg
mov
cmc
pusha
clc
add
pusha
mov
pushf
push
movw
movb
lea
jmp
cmc
add
jmp
bt
add
jmp
cmp
cmp
add
pusha
pushf
push
lea
jmp
jmp
aam
rcr
movzbw
lahf
mov
cmp
sub
push
pushf
movb
mov
mov
mov
pushf
push
lea
jmp
pushf
pusha
jmp
mov
mov
stc
clc
call
pusha
mov
movb
pushf
pushf
lea
jne
pushf
mov
bt
mov
stc
jmp
shr
bsr
pushf
or
mov
xor
adc
mov
dec
sub
bts
ror
dec
pusha
dec
pushl
rol
setnp
push
rol
or
sub
cmp
movzbl
pushf
stc
pushl
mov
jmp
jmp
pushf
pushf
test
shr
bt
movl
or
bt
cmp
pushf
clc
xor
pusha
pushf
inc
pushf
pushf
decl
pushf
push
call
lea
ja
pushf
pushf
mov
push
movb
repz
popl
push
lea
jmp
mov
pushf
push
mov
movw
lea
jmp
call
cmc
call
shrd
mov
mov
dec
bswap
shrd
mov
call
setp
setae
mov
call
jmp
repz
popl
push
movb
lea
jmp
jge
cmp
add
jle
mov
call
mov
mov
call
ror
shrd
neg
rcr
xor
dec
and
and
btr
cmp
mov
pusha
pusha
sub
call
pushf
popl
movl
push
jmp
pushf
popl
mov
call
mov
jmp
jmp
bsf
sbb
mov
bt
clc
add
pusha
mov
pusha
call
jmp
bsr
sub
push
mov
stc
pushf
add
push
lea
jmp
shrd
cmp
neg
and
mov
jmp
pushf
pushf
mov
pushf
push
lea
jmp
push
pusha
pusha
mov
jmp
cmp
xchg
test
cmc
cmc
xor
stc
sub
bt
cmc
sub
test
not
movb
neg
pusha
cmp
call
pusha
movl
pushl
popl
movb
movb
mov
pushf
lea
jmp
jmp
mov
pusha
mov
jmp
call
pushl
pushl
popl
mov
movb
movb
lea
jmp
pushf
mov
movl
mov
movb
lea
jmp
jne
neg
mov
push
bt
and
cmc
cmc
cmc
cmp
pusha
jmp
jmp
jmp
cld
call
repz
popl
pushf
movb
push
mov
lea
jmp
inc
bt
mov
sub
cmp
mov
clc
call
bsr
stc
shl
mov
call
pushl
popf
pushl
lea
jmp
call
call
mov
pushf
pushf
lea
jmp
call
pushf
call
seta
lea
movsbw
mov
jmp
jmp
bt
sub
jmp
pushf
popl
call
call
pushl
popl
pushf
push
lea
jmp
cmc
cmp
push
cmc
add
push
lea
jmp
mov
shl
xor
mov
pushf
stc
pusha
add
bt
cmp
stc
call
jmp
mov
mov
pushf
pushf
push
pusha
lea
jmp
jmp
add
push
pushf
lea
jmp
bswap
mov
push
call
aas
movzww
call
std
popf
pusha
pushf
movw
movw
lea
jmp
bt
sub
push
shl
call
shl
pushf
mov
mov
movw
pushf
jmp
jmp
stc
add
pusha
pushf
lea
jmp
pushf
pushf
popl
pushf
jmp
clc
push
cmc
not
pushf
jmp
not
jmp
jmp
lea
sbb
cmp
shl
mov
setp
xor
stc
and
mov
cmc
call
pushl
popl
pushf
lea
jmp
shl
rdtsc
call
lea
lea
sub
push
call
pushl
pushl
popl
pushl
pushf
pushf
lea
jmp
xchg
cmc
test
call
mov
mov
jmp
shrd
inc
pop
test
push
mov
sbb
not
cmp
mov
setp
clc
not
mov
or
pusha
mov
shl
setl
mov
or
sub
shl
clc
mov
movzbw
not
push
rcr
mov
bsf
mov
shrd
pushl
popf
not
mov
pushf
mov
movb
mov
movb
movb
pushl
ret
pushf
pushl
pushf
call
sub
jle
shrd
cmc
pop
jmp
sub
cmc
push
stc
add
pusha
pushf
popl
jmp
movzbw
lea
shr
mov
pusha
jmp
cmp
call
pushf
popl
push
pushl
popl
movb
lea
jmp
pushl
pushf
mov
repz
popl
movb
lea
jmp
stc
call
lea
je
jmp
cmp
pushl
call
shr
test
sub
jl
mov
push
sub
clc
pushf
stc
add
jmp
shl
sbb
sbb
mov
stc
jmp
pushf
popl
call
pushl
popl
pushf
mov
lea
jmp
and
sar
clc
adc
mov
clc
add
pushf
pushf
lea
jmp
add
push
pusha
call
xor
add
jle
sub
pushf
lea
jno
push
pushl
mov
push
push
lea
jmp
movsbw
push
bswap
bswap
mov
jmp
lea
jmp
setae
mov
pushf
mov
jmp
call
repz
popl
mov
pusha
pushf
lea
jmp
shl
test
mov
pusha
cmc
clc
sub
cmp
call
mov
jmp
das
movsbw
mov
pusha
stc
pushf
cmp
add
mov
mov
push
pushf
pushf
popl
push
mov
mov
lea
jne
popl
pushf
pushl
lea
jmp
sub
call
jmp
rcl
add
call
mov
sub
clc
test
pushl
not
push
clc
push
call
neg
call
pushl
call
call
sub
pushf
pushf
movb
call
push
sub
jnp
push
sub
push
movw
pusha
cmc
sub
push
call
mov
movb
pushf
jmp
cmp
and
pushf
mov
push
call
call
add
rdtsc
shl
shl
mov
and
sete
shr
shl
mov
jmp
cmc
stc
cmc
rol
jmp
mov
pusha
lea
jne
adc
bsf
pusha
mov
cmc
pushf
mov
and
cmp
jmp
call
