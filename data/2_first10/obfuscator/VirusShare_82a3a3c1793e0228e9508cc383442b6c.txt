add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
jo
add
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
or
add
ja
pop
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
clc
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
aam
add
add
xor
cmp
xor
xor
xor
xor
bound
xor
add
dec
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
and
add
cmp
or
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
imul
outsl
add
outsl
add
je
add
jno
insb
add
add
jbe
add
add
popa
add
popa
add
add
add
je
add
popa
add
outsb
add
add
popa
add
arpl
add
insb
add
outsb
add
imul
jb
add
add
add
outsl
add
jb
arpl
add
add
add
add
add
sbb
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
test
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
add
add
dec
pop
jne
bound
addr16
sub
xor
add
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
imul
outsl
add
outsl
add
je
scas
add
add
data16
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
inc
push
pop
push
imul
outsl
add
jae
sub
push
add
sub
and
das
data16
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
scas
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
add
jno
insb
add
add
jbe
add
add
popa
add
popa
add
add
add
je
add
popa
add
outsb
add
add
popa
add
arpl
add
insb
add
outsb
add
imul
jb
add
add
add
outsl
add
jb
arpl
add
add
add
add
add
adc
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
push
add
dec
add
add
add
jbe
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
std
ljmp
mov
sbb
mov
stos
cmpsl
inc
push
test
mov
cmp
xchg
xor
jb
in
or
into
test
sbb
aam
push
cmc
imul
faddp
lcall
sbb
stc
lahf
or
nop
cmp
xchg
push
scas
fdivrs
mov
inc
jl
cmpsl
popf
mov
lea
aam
push
shrl
inc
dec
out
hlt
inc
dec
sub
in
dec
mov
mov
mov
fnstsw
xchg
mov
and
decl
or
add
push
in
ss
dec
push
imul
cmc
movsb
xor
js
dec
aad
bound
into
push
leave
cmp
dec
push
test
in
clc
or
arpl
jecxz
sbb
popa
jecxz
jp
ljmp
inc
in
mov
addr16
rcr
test
cltd
sub
push
repnz
aaa
add
in
fwait
addb
int
push
add
push
daa
pop
mov
sub
loopne
mov
push
add
push
and
ret
das
into
popl
leave
test
lods
mov
fs
and
sbb
sbb
inc
stos
xchg
xchg
bnd
lea
negb
cmpl
adc
pop
and
int
jmp
fdivs
xor
mov
sbb
sbb
mov
sub
inc
adc
jecxz
icebp
cmc
xor
jo
pop
mov
jmp
push
mov
outsb
std
push
cmp
sub
out
lret
sub
imul
imul
iret
cmpb
fstpt
ljmp
add
push
sbb
xchg
xor
test
lock
dec
hlt
jle
arpl
fstl
bound
inc
cmp
adc
sarl
xchg
sbb
lea
outsl
inc
xor
bound
xor
andb
jl
jmp
lods
daa
mov
push
test
mov
loope
fwait
push
push
out
add
lods
fwait
and
inc
pop
xor
dec
add
xchg
and
fldcw
mov
mov
rolb
pop
lahf
lods
jmp
cmp
mov
negl
test
jno
xor
or
and
xor
in
sbb
lock
push
enter
xor
xchg
xchg
out
loope
sbb
sub
cmp
mov
xor
dec
push
sub
cmpsl
stos
insb
mov
add
xchg
ret
popa
dec
pop
popf
rcl
sub
in
pop
xchg
ja
mov
outsb
jne
test
push
aam
stos
xchg
and
xchg
in
mov
pop
iret
adc
vpaddusw
mov
sub
jo
jns
add
in
mov
pushf
and
stc
jge
mov
std
or
dec
outsb
pop
dec
xchg
xor
push
movsb
hlt
xorb
das
popf
jo
insb
mov
pop
fsubs
mov
jle
pop
ss
arpl
sbb
lret
cld
mov
pop
insl
push
pushf
movsl
fidivs
loope
ror
test
dec
fdivrs
jp
add
test
dec
adc
jg
and
dec
cmp
mov
inc
mov
jb
xor
push
repz
xchg
ss
loope
sbb
inc
xor
imul
dec
push
pushl
es
sarl
push
cmpsl
fwait
test
fs
push
ret
in
insl
loope
adc
dec
int
lds
mov
xor
push
icebp
adc
and
add
cld
std
sahf
gs
cmp
jnp
cwtl
fadds
mov
jno
cltd
gs
mov
adc
pushf
ds
xchg
adc
gs
jne
aam
xor
stc
out
sbb
adc
pop
add
fdivr
loop
jae
mov
adc
int
pop
dec
sbb
pusha
push
insb
xorl
subl
mov
jmp
daa
test
and
xchg
mov
lcall
cmc
xchg
hlt
sub
sub
loope
pop
xchg
enter
adc
pop
adc
cmpsb
shrb
pop
rolb
push
mov
sbb
pop
xchg
cmp
sub
fcomps
adc
xchg
sti
inc
out
mov
mov
test
out
mov
adc
mov
push
aas
jp
add
cmpsl
pusha
inc
pushl
insb
lcall
js
hlt
cli
ss
pop
bound
or
pop
stos
in
cmp
sbb
gs
or
std
pop
push
adc
nop
nop
arpl
cmp
mov
mov
repz
mov
xor
mov
push
das
pop
xchg
adc
sahf
mov
mov
mov
fsubl
aam
push
push
das
pop
lds
or
addl
std
sub
mov
pusha
popl
addb
mov
jbe
mov
push
imul
subb
sub
push
lahf
arpl
add
or
mov
leave
cmc
in
out
out
test
jl
pusha
fadd
cmpsb
jns
jge
dec
sub
xchg
dec
cmp
cmpsl
lds
out
insl
out
jle
ja
addr16
cmp
dec
inc
pop
jle
jns
jnp
aam
inc
inc
inc
and
fs
xchg
inc
mov
pop
push
add
mov
fcmovb
sub
push
dec
stc
cmp
mov
cli
pop
mov
or
les
ss
dec
or
lcall
stc
lods
das
xchg
xor
mov
add
bound
sahf
mov
and
adc
pop
andl
mov
push
pop
icebp
cmpb
hlt
out
fistpl
subb
cs
push
ret
cmp
and
movsl
cmp
jno
jno
and
add
mov
mov
xchg
call
jmp
js
inc
jmp
lds
loope
push
dec
sbbb
in
ret
pslld
or
pop
fadds
daa
out
cmp
imul
aam
dec
repz
mov
push
dec
stos
dec
lods
adc
mov
bound
pop
arpl
sahf
aas
popf
ds
insl
adc
idivl
sarb
inc
stc
xor
and
popf
rorl
inc
test
test
andl
cwtl
aaa
sbb
xchg
lahf
add
jl
xchg
dec
xchg
fs
mov
test
roll
or
push
out
jbe
ret
addb
sahf
test
dec
pop
pushf
inc
mov
pop
xchg
dec
lods
jne
aas
and
lret
clc
pop
push
xchg
pop
sbb
sahf
jp
pop
fs
jo
js
or
lods
cmp
adc
outsb
push
gs
jns
push
jb
sbb
mov
mov
std
adc
test
ljmp
push
cltd
mov
insl
inc
pop
mov
test
xor
inc
dec
frstor
fsts
hlt
dec
jge
mov
xchg
adc
jae
pop
and
adc
mov
and
add
pop
jle
in
add
sahf
sbb
sub
dec
imul
shlb
xor
shl
mov
data16
movsl
mov
xchg
popf
stos
hlt
shrl
scas
cmp
add
icebp
push
fstpt
add
push
and
adc
xchg
sbb
sarb
les
cmp
and
adc
mov
fisubrs
mov
cmpsb
pop
xor
std
push
daa
push
sti
outsb
into
cmp
ret
pushf
in
inc
push
cmp
xchg
sti
sub
aaa
data16
pop
add
lods
es
jg
mov
test
mov
xor
pushf
cmp
lods
scas
out
xor
xchg
mov
je
xchg
insl
or
das
in
lds
popf
xchg
iret
jae
or
pop
adc
popa
inc
jp
xlat
pop
out
lahf
pusha
pop
in
adc
or
adc
jb
hlt
cltd
dec
jl
fistl
out
mov
sbb
push
and
xchg
roll
test
aas
orb
testb
xor
and
jge
or
ja
mov
pop
repnz
es
push
mov
popa
add
mov
aas
in
clc
jo
dec
sbb
lock
xchg
out
and
std
add
and
aas
pop
rclb
push
decl
cmpsb
es
jbe
rcr
imul
xor
jle
pop
pop
repz
pusha
in
mov
cmp
fisubrl
es
stos
int
or
xlat
mov
xor
and
ficoms
xchg
int3
xor
adc
add
xchg
sbb
mov
rol
xchg
jb
xor
addr16
shr
stc
push
add
cmp
sub
inc
sbb
fldcw
or
pop
mov
outsb
lock
aas
leave
sub
sub
push
rcrl
out
mov
pushf
lret
and
pusha
push
mov
pop
int3
iret
fcompl
andb
popf
test
cmp
movsb
jp
mov
adc
or
fildl
jae
cli
cwtd
aas
mov
ja
sub
lcall
dec
add
sub
out
jmp
jns
fstp
or
hlt
hlt
sbb
fcomps
mov
sub
aas
sbb
fcom
push
xor
pop
sar
sbb
sbb
insb
jecxz
pop
mov
mov
mov
xchg
popa
addr16
mov
pusha
sub
xchg
pop
aaa
les
rorl
int
jo
lcall
mov
pushf
cmp
adc
lret
clc
push
addr16
xchg
mov
mov
inc
sti
pop
xlat
cmp
or
lret
in
les
outsb
fdivrl
cltd
add
mov
inc
ficoms
dec
out
sub
mov
cmp
jecxz
pop
cmp
mov
rorl
imul
inc
add
add
pop
push
imull
icebp
mov
add
xor
mov
adc
mov
roll
notb
test
cmp
mov
popf
dec
inc
jno
sbb
rorl
ret
out
scas
stc
call
adc
mov
cmpsb
ffreep
jb
mov
aaa
mov
cmpsl
test
or
shll
xlat
inc
in
fs
clc
clc
jl
stc
enter
stc
lods
xor
movsb
push
fisubl
fisubs
xchg
adc
sbbb
aas
sbb
sbb
sbb
in
xor
fstps
pop
push
lahf
cmp
xchg
cmp
mov
imul
xchg
ret
clc
cmp
cmovnp
cmp
push
int3
and
mov
addb
cld
xchg
iret
rol
lea
dec
cwtl
into
dec
pop
mov
lret
mov
pop
inc
mov
and
add
mov
jae
stos
iret
std
iret
sbb
sbb
mov
add
shlb
movsb
push
sub
stos
sub
pop
mov
movsb
and
roll
add
lcall
mov
ret
test
mov
or
pop
add
fmulp
sbb
ret
pop
aad
loope
and
movsb
into
sbb
xor
pop
sbb
lock
xor
jb
sub
out
fisubrs
xchg
lcall
int
xchg
lret
leave
pop
jle
sub
pop
add
iret
and
mov
mov
js
pop
dec
leave
into
jns
xor
ljmp
inc
cmp
aad
int3
dec
stc
fs
movsb
out
mov
aad
rclb
loopne
push
and
or
jae
rcr
les
cmc
inc
jecxz
dec
push
std
inc
ds
je
testl
fdivrl
mov
add
xor
ljmp
fimuls
mov
jl
fiaddl
ljmp
int3
push
das
test
fmull
fisttps
add
jb
repz
cli
popf
fbstp
js
and
cmc
lea
and
icebp
or
fwait
jle
inc
adc
mov
ret
insl
xchg
fisubs
ss
lret
push
xchg
call
lds
jb
push
in
aaa
mov
pop
jo
ja
sti
push
jp
out
jae
or
cs
popa
pop
xor
jno
mov
inc
into
or
adc
lret
mov
sti
js
testb
xchg
jge
sbb
jno
cmpsl
dec
sbb
xchg
add
lret
push
mov
mov
inc
mov
into
xor
cmp
jae
sub
arpl
jge
push
arpl
in
and
test
mov
adc
repnz
adc
mov
popa
out
cmpsl
xor
cli
inc
mov
test
adc
xorl
repnz
jns
sub
dec
jecxz
jecxz
mov
mov
cwtl
dec
outsb
stos
adc
xchg
push
pop
aad
leave
scas
mov
lcall
inc
out
test
add
push
push
sahf
mov
int
jno
out
ljmp
cmp
or
or
pop
outsl
add
xchg
add
jg
int3
sbb
fistpll
outsl
add
fcompl
dec
daa
sub
imul
inc
and
cmp
cmp
sub
andb
sbb
addr16
jge
repz
lock
hlt
jp
or
outsb
leave
popf
push
jecxz
and
rcll
xor
in
pop
mov
clc
sti
or
sbb
data16
sti
stos
inc
push
mov
outsl
push
xchg
outsb
jl
hlt
push
cmp
pop
cmpsl
lods
in
clc
ljmp
int3
adcb
cmp
hlt
inc
hlt
rcll
and
pusha
and
add
aad
pusha
mov
xlat
sbb
xchg
add
xchg
adc
lods
dec
outsl
fcmovnb
mov
mov
xor
pop
xchg
ljmp
ret
inc
jg
push
sbb
scas
inc
xor
cmpsl
adc
aad
jle
inc
adc
jmp
aaa
jnp
addr16
sub
xor
cmc
lods
mov
stos
mov
adc
pop
dec
cwtl
in
ret
push
rorl
push
loope
sub
mov
mov
adc
jg
outsl
out
cmc
adc
lcall
pop
mov
xchg
inc
push
sti
pushf
imul
fadds
jle
jmp
movsl
sub
shr
or
imul
test
dec
pop
movsb
push
mov
cmp
lcall
mov
rolb
cmp
jno
xchg
or
pop
dec
push
mov
dec
jmp
std
not
jp
add
jbe
cmpsl
cmpsb
dec
xor
or
pop
push
pop
int3
push
cltd
mov
cmc
mov
std
dec
adc
xchg
imul
aas
test
xchg
std
cmp
loopne
test
jge
stos
nop
jo
outsb
push
aam
mov
pop
test
dec
cmp
aam
dec
imul
mov
xor
mov
hlt
invd
mov
mov
xchg
mov
inc
bnd
scas
jg
ss
cmpsl
jne
int
ror
xor
sbb
cli
mov
inc
sarb
movsl
xlat
lock
hlt
mov
inc
out
out
adc
cmpsl
enter
roll
ficoml
idivb
in
or
rol
adc
lock
aam
out
nop
mov
push
dec
aas
lds
inc
or
mov
xor
scas
jmp
jne
pop
enter
push
xchg
add
add
ljmp
int3
add
mov
insl
mov
out
ss
xlat
nopl
add
jbe
mov
rorb
adc
push
mov
lcall
adc
xor
mov
lds
push
fwait
leave
adc
movsb
test
mull
inc
pop
fs
sbb
mov
fnstcw
jnp
data16
sub
gs
arpl
adc
dec
mov
pop
mov
loopne
sub
adc
stos
or
sbb
rorb
pop
and
pop
pop
adc
jno
sarl
imul
add
xor
faddl
pusha
fdiv
pop
jns
sub
jle
mov
or
test
outsl
pop
icebp
leave
push
pop
scas
mov
jle
push
loopne
push
add
dec
push
add
push
jne
imul
mov
mov
push
push
pop
icebp
sti
cmpsl
mov
pop
jno
insl
mov
lods
daa
jno
pop
popl
and
pusha
adc
mov
nop
ss
jb
imul
sub
push
cmpsb
cmpl
sbb
jno
cmpsl
jmp
lahf
aas
imul
fldz
daa
cli
jg
cmpsb
mov
lret
push
mov
or
movsb
rcrb
mov
orb
std
data16
pop
mov
or
sub
mov
sahf
xchg
imul
mov
xchg
lcall
out
or
and
pop
inc
lret
int
test
lods
fwait
jge
jle
fimull
sbb
jne
gs
int
nop
jno
sub
xlat
fiadds
leave
push
adc
es
scas
push
cs
shll
pop
sbb
lret
jae
jnp
pop
mov
xchg
cmp
and
cmp
sbb
mov
imul
cmc
pop
mov
push
xchg
das
cmp
mov
popa
xchg
push
sbb
cmp
stc
gs
xchg
div
add
inc
rorb
mov
daa
jne
cmp
inc
and
lret
cmp
sub
sbb
jne
clc
cld
scas
and
push
orl
jns
push
dec
and
mov
movsb
stos
mov
and
stos
mov
xor
and
jae
lahf
add
jbe
lahf
rcll
aas
sbb
push
pusha
mov
mov
outsl
xor
dec
das
mov
mov
lods
bound
sub
dec
pushf
popl
cmovae
faddl
jle
xchg
inc
filds
and
aaa
into
lods
jmp
cmp
clc
ret
cmp
roll
ja
push
mov
mov
lods
jnp
shrl
nop
sub
aam
daa
lcall
movsl
jbe
cmp
lret
mov
jb,pt
adc
mov
inc
dec
jp
ret
fcompl
rcr
push
mov
in
pop
ss
xor
les
dec
push
pop
ss
xchg
fildl
outsb
push
or
add
cmc
xchg
jg
out
xchg
add
out
fisttpl
sbb
imul
fs
sbb
sbb
imull
mov
imul
fs
outsb
pop
imul
insb
lea
decb
push
inc
xor
dec
lods
xchg
leave
ret
test
cmp
mov
testl
pop
es
xor
jae
ffreep
lods
iret
fisttpl
daa
cmp
xlat
add
dec
jg
jne
mov
es
rorl
mov
dec
jmp
fwait
lds
mov
sub
jo
pop
add
shll
repz
mov
hlt
xchg
pop
adc
and
cltd
inc
sti
stos
imul
pusha
pop
int3
je
lcall
mov
shrl
scas
cs
push
stos
daa
add
in
lods
cli
xchg
jne
adc
jne
jp
inc
push
sub
daa
inc
es
push
inc
and
push
or
das
loop
sbb
insl
hlt
pushf
pop
push
nop
mov
or
mov
hlt
sahf
and
bound
iret
push
lret
xchg
pop
adc
pop
rcl
jge
pop
pop
inc
ret
ret
xor
data16
in
shl
loope
or
jbe
mov
mov
cmc
jl
divl
or
sbb
stos
pop
push
mov
add
adc
mov
pop
loope
jbe
into
mov
adc
xor
ret
out
repz
lods
adc
xor
sub
shl
in
iret
fidivrl
or
jmp
sti
mov
imul
hlt
shrb
sub
fnstenv
inc
xchg
and
jno
xchg
movsb
inc
or
push
push
lret
cltd
test
mov
out
adc
pop
lcall
std
sbb
push
cmp
jmp
xchg
pop
xchg
sub
jp
sub
aad
jae
xchg
ficomps
in
push
push
jo
or
cmp
pop
mov
dec
enter
and
std
sahf
mov
ret
les
jno
jno
rclb
int3
dec
xchg
and
mov
int
sar
xchg
in
mov
scas
push
inc
adc
lods
sbb
in
jl
dec
sub
push
stc
lods
ljmp
ljmp
push
push
das
movsl
dec
jl
dec
or
push
mov
das
jl
xchg
xchg
out
gs
pusha
xchg
andl
and
popa
leave
arpl
sti
adc
lock
out
xor
mov
pop
push
scas
xchg
sbb
mov
xor
pop
int3
out
jecxz
fdiv
repz
and
sub
push
aad
addr16
lret
stos
fimull
push
sbb
cwtl
aam
sub
adc
mov
ret
dec
lcall
jl
pop
arpl
cltd
cmp
jecxz
mov
xor
loopne
and
pop
in
jg
pop
ljmp
pusha
inc
out
ss
lahf
fwait
and
dec
repz
cmp
popf
ret
movsb
ljmp
jle
adc
mov
stos
mov
out
add
adc
inc
movsl
out
sub
dec
cmpsb
cmpsb
frstor
xor
leave
jno
mov
mov
push
out
stos
scas
xchg
je
and
ret
out
stc
mov
mov
loope
clc
cmp
in
mov
mov
dec
hlt
stos
fldcw
add
aaa
daa
cmp
cmc
lods
ljmpw
push
pushf
les
and
cltd
jg
shll
mov
aas
daa
ds
stos
in
mov
stos
push
in
test
daa
mov
sahf
or
rorb
test
fistpll
push
popf
cltd
dec
ljmp
push
subb
int
cli
mov
push
call
push
sub
add
add
rorl
icebp
pop
test
adc
pop
addr16
jns
fmulp
add
sahf
mov
mov
xor
push
popa
xchg
iret
mov
dec
lret
pop
cs
pop
mov
cmp
sub
sti
mov
shl
mov
dec
push
fdivl
xorb
repnz
dec
gs
xchg
inc
xor
pop
out
jmp
mov
jg
shll
xchg
cs
fs
add
fimull
mov
push
jo
jg
js
push
les
jp
bound
pop
scas
add
out
and
xor
xchg
xchg
int3
sub
or
stos
or
jae
sbb
mov
int3
out
inc
andb
pop
mov
shlb
push
scas
cmp
add
lcall
loopne
sahf
shl
xor
sahf
adc
in
mov
lea
jne
fwait
out
lret
cltd
test
addl
mov
mov
cmp
aaa
andb
mov
cmpsb
jl
mov
nop
test
add
gs
out
cmpsb
mov
in
pop
and
test
stos
sbb
push
lahf
sahf
sbb
and
adc
xchg
inc
mov
add
xchg
mov
inc
popf
sub
dec
and
fsub
xchg
adc
cltd
pusha
dec
stc
sbb
xchg
add
inc
jl
dec
pop
push
sahf
xchg
into
mov
sarl
mov
dec
mov
arpl
dec
xor
aas
stc
lods
mov
cmp
mov
push
movsl
gs
cli
and
ret
xor
inc
stos
pop
lcall
insl
adc
pop
xor
xchg
lock
fs
ljmp
xor
inc
add
jne
into
ja
xchg
call
shll
sbb
mov
jmp
rcr
in
cld
test
and
xchg
imul
xchg
jge
add
cmpsl
xor
ret
daa
dec
adc
mov
fs
adc
pop
dec
push
and
push
push
sub
jge
jmp
jb
pusha
push
scas
push
pop
icebp
in
insb
lds
and
fs
mov
pop
mov
fildll
jmp
lret
inc
or
jo
clc
add
aas
jg
loop
aad
das
mov
test
shrl
xlat
and
xor
repnz
xor
mov
mov
movl
push
pop
test
adc
imul
scas
mov
pop
mov
mov
out
push
jmp
dec
add
dec
adc
and
jp
push
and
adc
pop
test
ret
xor
jle
scas
addl
jecxz
jmp
jns
daa
jb
pop
sbb
or
popf
or
pop
sbb
lahf
push
mov
ljmp
scas
mov
adc
das
inc
xchg
daa
aas
xchg
mov
adc
stos
or
dec
ds
or
inc
rorl
cmp
ljmp
jle
popf
fsubrl
mov
adc
ss
inc
sub
jl
sbb
lret
mov
shr
insl
bound
jmp
imul
cltd
xlat
xor
stc
sbb
xor
dec
ja
or
in
dec
insb
xor
xchg
mov
inc
xlat
cwtl
mov
mov
jns
push
dec
stos
dec
scas
sub
jmp
push
xlat
jl
push
pop
xor
and
or
xor
outsb
je
jo
dec
cli
and
pusha
lret
ret
xchg
push
mov
jecxz
mov
popa
lcall
sub
shrl
mov
fnsave
lods
xchg
mov
jl
jecxz
rcl
mov
xlat
into
mov
sahf
mov
mov
jl
mov
loope
movl
js
cwtl
jno
cmp
add
pop
ret
xchg
jge
cltd
call
sar
imul
jg
ljmp
add
or
inc
js
xchg
pop
pop
sbb
stc
jae
cli
adc
xor
mov
in
fs
stos
xchg
sbb
mov
data16
push
stos
mov
icebp
rcll
pusha
pop
shld
xchg
and
pop
sbb
dec
sbb
xlat
idiv
mov
frstor
mov
jle
js
std
push
mov
jbe
push
mov
dec
out
dec
and
xchg
xchg
cmp
or
dec
cld
adc
mov
insb
es
jg
shrb
ds
sbb
inc
fnstsw
psubsb
sub
cwtl
iret
xlat
cld
movsb
iret
out
dec
daa
add
aam
mov
pop
out
ret
leave
xchg
push
xchg
adc
in
lcall
pushf
dec
call
test
imul
nop
inc
xchg
mov
dec
aaa
cltd
mov
stc
push
pop
pushf
imulb
inc
addb
or
fstpt
aam
rcrl
or
mov
addr16
jecxz
pop
sub
jbe
mov
cmc
aas
mov
sbb
pop
mov
jb
dec
xchg
cmpsl
pusha
mov
out
push
sahf
outsb
xchg
push
scas
imul
xchg
incl
push
dec
inc
cmp
das
mov
cmpsl
pop
xchg
adc
mov
and
push
or
js
lods
cmp
xor
iret
mov
lods
xchg
inc
push
sbbb
fprem
cwtl
ljmp
add
pop
adc
shrb
push
mov
clc
add
add
outsb
cmp
sahf
inc
test
jne
popa
popa
cmp
sti
aas
imul
and
xchg
ds
imul
push
repnz
mov
out
pop
jo
adc
popa
lea
jle
int3
pop
fstps
es
enter
xor
mov
out
pop
adc
out
int
push
jp
out
mov
fnstsw
lret
ja
sbb
arpl
inc
adc
out
jecxz
mov
insb
push
adc
pop
mov
mov
sbb
or
incl
xor
mov
stc
jmp
lea
aaa
xor
pop
aam
cmpsl
or
lea
out
lods
pop
je
xchg
add
mov
jmp
aaa
cli
arpl
addr16
mov
sbb
adc
pop
cmp
mov
cwtl
fcomi
or
cmp
jbe
out
or
xor
mov
mov
cmp
xchg
adc
add
and
scas
xor
mov
imul
xchg
inc
xchg
and
fisttps
orb
sti
and
pop
and
sub
inc
mov
pusha
fsubrl
imul
insl
dec
adcl
sub
sbb
rolb
cmpsl
stos
fwait
jg
mov
adc
pop
lods
shlb
call
jmp
lock
xorl
insb
xchg
movsl
push
sub
fstpt
int
dec
repnz
mov
cmpsb
scas
insb
mov
xor
jo
sti
sarl
pop
outsl
out
enter
js
jg
shll
test
adc
push
ds
mov
imul
mov
jnp
call
aas
shl
jns
int3
sub
hlt
xor
insl
mov
idivl
mov
mov
sbb
stc
adc
xor
inc
pop
mov
jecxz
mov
add
scas
mov
ds
leave
dec
sub
jno
mov
ljmp
jno
sbb
std
mov
sub
sahf
inc
int3
jge
sub
shlb
mov
adc
fldt
test
pop
sti
mov
sbb
lcall
add
sar
mov
movsb
mov
jnp
bound
in
js
cmpsl
nop
fwait
neg
mov
jmp
aaa
and
dec
inc
mov
add
mov
jb
out
dec
popf
sbb
add
mov
sbb
nop
js
mov
cmc
xlat
inc
stc
fdivrl
push
loop
sbb
pop
lock
mov
mov
sbb
cmp
and
imulb
stos
fstp
repz
xor
xchg
das
or
jo
loop
test
ja
movsb
insl
and
adc
rclb
or
jmp
add
xor
mov
cwtl
inc
out
call
push
stc
out
jecxz
cmc
pop
mov
mov
inc
xchg
mov
fcmovne
in
pop
xchg
push
test
xchg
dec
adc
insl
shr
jmp
in
fstpt
adc
xchg
sbb
mov
sti
or
ret
jp
mulb
shlb
pushf
rorb
hlt
je
inc
push
sub
add
cmc
xchg
stos
dec
inc
push
popa
xchg
mull
lahf
movsb
push
sub
enter
fst
mov
pop
gs
pushf
adc
jo
sbb
in
cmp
jle
jl
pop
jnp
sarl
das
mov
loop
sbb
push
mov
enter
in
xor
aas
popa
mov
inc
pop
jle
cs
fcmovne
pop
in
cwtl
pop
dec
jne
add
cld
cs
dec
pushf
aad
in
stos
cwtl
roll
push
cmp
push
sarl
sub
mov
cmp
and
xchg
gs
push
jo
and
test
sti
lcall
mov
loope
mov
aad
mov
loopne
pop
rolb
xlat
aaa
rcrb
hlt
test
pop
adc
sbb
aad
inc
sbb
ret
mov
mov
add
sub
add
test
xor
int3
js
mov
cld
pop
cmp
inc
mov
jecxz
outsb
lds
icebp
loopne
repnz
cmp
fidivrs
mov
enter
sbb
outsl
mul
clc
lods
dec
jg
incb
jno
fiadds
imul
sub
mov
add
stc
in
fidivl
outsl
ljmp
hlt
movsb
fnstcw
push
call
into
inc
adc
dec
iret
sbb
jae
jp
cmp
and
jno
popf
hlt
push
xchg
leave
pop
jno
xor
bound
xor
xchg
subl
negb
and
mov
stos
movsb
jecxz
mov
ljmp
loope
int3
fstpt
pop
mov
test
stc
pop
iret
fidivl
sbbb
mov
lds
add
inc
inc
rcrb
fbstp
pop
cltd
pop
pop
aaa
xlat
fildl
cmp
mov
test
lret
cld
xor
sbb
adc
jbe
dec
add
enter
add
dec
mov
mov
aaa
mov
mov
or
stos
jo
sbb
dec
scas
insb
or
dec
mov
jg
xchg
aam
scas
testl
outsb
cmc
or
mov
mov
add
out
xorl
and
and
add
aad
shll
mov
subl
mov
or
enter
into
aaa
lods
jl
test
std
pop
push
mov
xchg
xor
imull
jecxz
xchg
mov
jo
and
push
add
mov
imul
dec
xchg
push
imul
cmp
sub
dec
adc
mov
sbb
mov
push
lea
imul
adc
jmp
inc
sbb
fmull
and
sub
lcall
jo
icebp
mov
ret
outsb
pop
addr16
aam
cmp
fndisi(8087
lea
sbb
inc
imul
mov
sub
pop
jnp
dec
sbb
lahf
arpl
xor
and
and
in
loop
inc
mov
push
pushl
scas
and
mov
test
test
mov
orl
sbbb
je
sub
arpl
pop
rclb
or
gs
lds
push
inc
test
test
xor
mov
mov
out
push
cltd
fnstsw
pop
test
cmpsl
icebp
adc
add
jno
cmp
in
xor
sub
int
xor
fnstcw
xchg
popa
adc
jae
iret
lcall
xor
and
mov
sub
jb
mov
pusha
jnp
mov
jae
mov
or
bound
arpl
and
lods
inc
in
mov
mull
cmpb
stos
mov
outsb
cmc
mov
cmpsb
outsl
and
cmpsb
cld
adc
in
mov
fistl
fmuls
out
push
push
aad
fstps
fwait
stos
cmpsl
push
iret
jne
cwtl
sub
lds
out
xchg
or
and
push
lock
faddl
jno
cmp
fnstsw
mov
outsl
mov
push
lret
std
stos
dec
jle
push
cltd
ror
dec
mov
pop
inc
or
push
push
dec
int
or
inc
stos
dec
repz
bound
xor
minps
sub
pop
pop
jg
add
fdivrl
push
cmp
divl
sbb
jge
roll
das
int
jg
pusha
outsb
cltd
test
int
xchg
sti
scas
jo
adc
mov
xchg
lock
jnp
push
push
jmp
rcr
lss
gs
cmp
jle
dec
out
in
mov
loopne
push
push
mov
ss
xchg
or
insb
dec
pop
sbb
xchg
or
repnz
lods
xor
in
aam
mov
fildll
aam
xchg
xchg
and
inc
call
sub
jne
call
pusha
or
pop
or
xor
mov
inc
scas
fs
adc
push
scas
and
cmp
pusha
dec
xchg
cmp
or
repnz
sti
jecxz
scas
jg
push
mov
or
mov
xor
jnp
test
stc
rolb
sbb
loope
jbe
or
xor
pop
sahf
jle
push
cltd
xchg
int
adc
xchg
pop
mov
adc
insl
out
and
loopne
fs
mov
jge
sub
lahf
repz
loop
sub
setle
or
jo
pop
jecxz
sbb
pop
scas
or
scas
fimuls
add
adc
je
add
sbb
testb
xor
cwtl
sub
in
inc
cmpsl
rorb
inc
mov
ljmp
adc
mov
ret
fsts
dec
jb
aas
mov
lds
movl
mov
sub
sub
in
pop
cmc
cli
jle
mov
sbb
andb
xchg
push
dec
cmc
leave
mov
sbb
loop
loopne
mov
jecxz
je
adc
fadds
xchg
jp
mov
push
int
dec
daa
mov
shrb
jo
lods
rorl
les
pop
mov
lods
notl
jns
ficoms
jecxz
cltd
pop
repnz
ja
lock
jp
cld
pop
mov
pop
dec
fs
push
out
inc
fsubrs
and
mov
adc
add
cmp
pop
push
movsb
lock
mov
cld
push
jp
fbld
pop
push
ret
and
xchg
pop
daa
enter
inc
jae
leave
stc
in
push
in
and
mov
cmp
ja
mov
sbb
jns
sbb
scas
adc
jo
sahf
insb
addr16
lret
mov
fldcw
cmp
mov
popf
lcall
inc
test
in
pop
fwait
clc
mov
lahf
xchg
and
mov
add
add
insl
inc
js
data16
pop
repz
xchg
push
jp
cmp
jnp
pusha
rcrb
out
leave
adc
jbe
sbb
sbb
pop
dec
stc
mov
fnsetpm(287
mov
mov
test
push
cs
fldt
fstl
lods
mov
jae
mov
lock
sbb
hlt
inc
dec
jne
adc
out
call
pop
inc
or
push
test
xor
shll
dec
push
jne
rol
sub
addl
add
and
testl
push
sbb
or
inc
jecxz
or
les
loop
cmp
mov
sbb
push
sbb
add
add
jle
ljmp
pop
push
adc
lcall
mov
pop
js
pop
push
xchg
jl
mov
mov
nop
sti
out
mov
shlb
insl
scas
shrb
xor
scas
jp
fsub
push
aaa
adc
and
cmpl
lret
test
mov
mulb
dec
sub
mull
pop
unpcklps
cli
stos
hlt
popl
or
dec
xchg
pop
std
dec
ljmp
xor
rorl
mov
out
leave
cltd
cs
and
je
pusha
ss
sbb
out
cmp
inc
cmp
sub
sbb
cli
sub
fs
pop
ret
ret
adc
inc
enter
push
imull
pushf
jge
hlt
aad
adc
pushf
dec
xor
sti
call
jle
mov
xor
adc
rorb
cmp
das
inc
mov
pop
ret
daa
test
aas
cmpb
in
pop
outsl
orl
pop
hlt
or
pop
pop
aad
cmp
incb
icebp
push
stos
mov
push
addr16
mov
xor
xlat
jb
mov
add
mov
mov
inc
sub
call
inc
and
rcll
inc
into
in
imul
ja
out
push
lcall
cld
xchg
jns
hlt
sahf
decb
jbe
xor
fnstsw
clc
jle
mov
mov
xor
mov
or
dec
sbb
xchg
dec
int3
and
inc
xchg
int3
mov
cmp
jae
push
fimull
jge
in
cld
fildll
stos
xor
adc
fwait
lea
mov
push
add
mov
inc
icebp
inc
or
jae
mov
imul
sub
mov
pop
stos
sub
scas
jno
out
ret
out
push
add
test
sub
arpl
mov
mov
inc
inc
pusha
test
fidivl
mov
fcompl
or
cltd
outsb
imul
or
mov
ljmp
mov
push
mov
mov
into
pop
mov
xor
pop
sbb
cs
jb
and
cwtl
adc
shrl
fldt
dec
sub
mov
out
ljmp
aad
sub
and
jae
ja
mov
iret
push
js
mov
xor
into
rcrl
rcrb
and
cmp
push
fcomp
in
mov
imull
mov
repz
js
mov
sbb
cld
dec
sar
aam
pop
call
mov
addl
push
jg
pop
mov
popa
push
cmp
adc
push
out
lods
sahf
int
insl
out
fwait
test
ljmp
and
enter
push
add
ja
lock
cmc
je
cmpsl
xchg
jle
cmp
xchg
dec
fucomp
ja
ja
imul
and
xchg
push
push
mov
pop
aas
stos
test
sub
push
jmp
in
push
shrl
aad
and
out
dec
nop
jmp
int3
xchg
mov
mov
es
in
cld
fst
or
loope
out
sub
sahf
or
push
sbb
inc
jle
sbb
or
xchg
rcrb
mov
repz
sub
jns
hlt
push
fmul
add
pop
push
push
clc
fwait
in
fdivr
mov
push
adc
dec
fists
ret
out
mov
adc
sub
or
mov
adc
pop
aam
insl
cmpl
inc
jl
adc
and
mov
adc
lock
rcll
cmp
lods
lods
gs
lds
fcomip
mov
rol
sbb
jne
cmp
and
jp
pusha
and
sti
xchg
or
stc
push
cs
les
loopne
xor
sbb
cmp
insl
std
mov
sbb
roll
or
cmp
jmp
xchg
sub
popa
cmpsb
inc
pushf
mov
adc
push
ret
inc
sbb
push
push
jne
leave
sbb
std
xchg
outsb
and
or
cs
push
mov
aas
call
mov
mov
add
test
cmpsb
sub
xchg
call
xchg
enter
jge
cwtl
out
sub
mov
lahf
lahf
xor
out
xchg
mov
sub
sub
mov
dec
test
orb
out
dec
mov
aaa
in
mov
jmp
popa
mov
cld
inc
inc
sub
adc
orb
out
sbbl
test
enter
cmp
or
out
or
mov
iret
std
mull
outsl
dec
add
xchg
pop
movsl
and
mov
fs
cmc
mov
jecxz
addr16
inc
mov
mov
fs
sbb
cs
lret
cmp
and
sbb
sahf
fcompl
int3
cmc
mov
xlat
cltd
adc
fsubs
fcmovnu
pop
nop
adc
stc
xor
pop
xor
or
cmpsb
cwtl
stc
shl
test
push
or
add
arpl
push
jmp
add
cmp
nop
mov
push
jmp
pop
rclb
insl
inc
sbb
and
loop
add
adc
jl
or
or
shlb
clc
mov
xchg
scas
mov
sub
mov
adc
sbb
inc
mov
sbb
cltd
mov
cmp
aad
fcoml
mov
je
ja
xor
out
jle
sub
cld
add
lods
xlat
mov
incl
outsl
outsb
cltd
cmpsl
jo
inc
popa
ljmp
jbe
mov
jae
lods
sbb
flds
cmpsl
scas
pusha
out
cli
idiv
mov
jle,pt
popl
cmpsl
scas
and
aad
jbe
clc
repnz
push
inc
push
fimull
inc
stc
mov
add
xchg
push
lahf
cmpl
lea
ss
and
push
stos
jmp
sub
cmpsb
incb
test
lods
fsub
xor
pop
inc
popa
cmp
popf
imul
fcomps
cmp
pop
adc
movsl
cltd
sbb
and
add
jle
ljmp
adc
cli
std
les
cwtl
cmpsb
jbe
mov
movsb
ss
jl
lahf
dec
push
outsl
adc
dec
mov
pop
mov
add
insl
in
cmp
sbb
push
xchg
rorl
jnp
pop
lods
cmp
decb
int
xor
sbb
add
bound
ja
icebp
xchg
bound
out
stos
cmp
xchg
adc
push
aaa
imul
aaa
data16
fdivrl
imul
fld
aad
mov
fmuls
add
popa
fidivrl
pop
sub
inc
movsl
lret
xchg
add
xor
mov
mov
cmp
into
push
push
mov
jp
ds
popa
dec
int
lret
out
frstor
mov
inc
mov
cmpsl
pop
movsb
cwtl
ss
pop
imul
push
lret
mov
nop
rolb
jo
out
or
fcmove
lret
shl
or
mov
cld
xlat
cmp
xchg
xlat
ljmp
dec
ljmp
mov
ror
add
outsl
push
clc
nop
adc
mov
jg
xchg
movsb
fadd
push
mov
imul
fs
pop
lahf
gs
out
sub
lret
mov
sahf
mov
test
lods
loopne
loop
enter
mov
push
or
mov
push
jb
xchg
jmp
cmp
scas
mov
fs
in
fnstcw
xchg
push
dec
adc
jb
push
mov
inc
stos
sub
lods
ja
stos
shl
pop
and
test
repnz
dec
testb
rcr
shrl
out
fs
stos
adcl
outsb
fwait
ret
leave
repz
fdivs
gs
ret
sbb
mov
mov
adc
push
mov
in
jbe
xor
cwtl
add
int3
popf
push
arpl
imul
jb
aam
push
cmpsl
mov
cmp
sub
test
fmuls
dec
mov
test
cld
xor
xchg
jg
jp
jo
pop
movsl
adc
lods
sbbb
mov
inc
lret
fcmove
xlat
or
jecxz
mov
mov
dec
xorl
inc
dec
sahf
jmp
shll
daa
cmp
jbe
cmp
aaa
adc
call
inc
fwait
mov
and
lock
ds
mull
bound
lock
lods
inc
mov
push
movsb
in
add
cmpsb
jl
pop
xlat
in
pop
icebp
jg
fwait
gs
sbb
pop
mov
mov
xchg
or
std
xchg
lods
out
cmp
xor
ret
pop
leave
sbb
stos
dec
inc
mov
cmp
push
jne
inc
ja
jge
cmp
sbb
daa
scas
add
jmp
pop
jno
lcall
ret
pop
fs
mov
cmp
inc
jge
mov
add
sti
add
mov
sbb
lcall
scas
lahf
inc
pop
inc
rcpps
mov
jmp
pop
subb
fisubs
aas
pop
push
add
dec
dec
inc
test
shll
mov
inc
dec
cli
mov
add
inc
adc
les
hlt
push
adc
ja
mov
es
cmp
add
jecxz
xchg
mov
mov
xchg
or
mov
nop
add
sub
pop
add
mov
and
arpl
jbe
lods
hlt
lret
jae
lcall
aas
mov
js
fwait
mov
outsl
pushf
inc
jns
out
dec
in
dec
out
aad
push
add
shll
cmpl
test
mov
js
andl
lcall
xchg
bound
lock
cmpsb
cli
sahf
dec
lods
add
std
cs
dec
mov
cltd
push
fs
fbstp
adc
xlat
sub
bnd
sbb
mov
inc
dec
das
xor
jb
sub
nop
dec
insb
cmp
cmp
movsl
xor
adc
loopne
leave
jbe
mov
jae
cli
lret
xchg
xchg
test
fsub
push
push
pushf
mov
mov
push
add
adc
sbb
mov
es
cmpsl
adc
sub
ret
mov
sub
lods
popa
xchg
popa
mov
mov
xor
int
xchg
sbb
or
sbb
jns
inc
mov
or
mov
gs
jle
jle
sbb
sbb
arpl
mov
orl
dec
add
cmpsl
inc
inc
and
xor
fildl
rolb
push
and
and
mov
les
pop
insl
lock
test
adc
mov
out
ret
stc
mov
loope
outsb
mov
jp
xor
adc
add
mov
popa
cmp
das
jb
pushf
jecxz
add
mov
insl
insb
scas
xchg
hlt
push
decb
add
scas
hlt
cmpl
cmp
inc
mov
add
push
mov
subl
pop
test
pushf
pushf
jg
sub
push
stc
push
mov
xchg
or
and
jle
insl
dec
nop
sub
mov
mov
ret
loop
pop
mov
jl
sbb
push
imul
aas
fisubs
ja
pop
mov
lea
mov
inc
jb
jg
jne
push
add
pop
inc
cmp
outsl
mov
mov
xchg
fwait
cmp
pop
rcl
je
pop
jl
js
and
push
call
xor
xorb
outsl
jle
stos
insl
outsb
lcall
jmp
movsl
in
push
movsl
mulb
sub
xchg
mov
lock
into
cmpsb
cmp
adc
dec
sbb
test
jbe
aam
push
xlat
push
rcrl
test
dec
das
mov
cmp
xor
jb
or
and
outsb
mov
adc
sub
insb
inc
pop
ret
sbb
hlt
test
push
push
in
pop
inc
push
int
mov
push
std
xor
inc
div
std
push
pop
mov
mov
mov
cmpsb
lods
add
mov
fstps
sbb
icebp
push
fstpt
mov
pop
aaa
in
test
inc
add
mov
pop
adc
cmp
lea
mov
xchg
loopne
das
es
stos
stc
je
xchg
int3
mov
add
outsl
das
xchg
cmp
xchg
sarb
fmull
sbb
ja
rorl
mov
jl
adc
cltd
adcb
or
mov
cli
stos
push
lea
pop
inc
jno
out
daa
lahf
mov
iret
mov
mov
pushf
pop
leave
inc
jl
or
dec
int
cmc
mov
cmp
outsb
repnz
sahf
xor
mov
or
clc
mov
add
cmp
sub
shrl
ja
mov
mov
jl
mov
add
mov
sti
lea
xchg
cmp
test
jle
pusha
dec
gs
fnstenv
dec
aaa
gs
popa
in
int3
dec
mov
or
pop
sbb
jnp
addb
pop
clc
adc
mov
test
ja
jns
in
pop
repz
pop
cmp
mov
sti
bound
stos
cmp
sub
dec
xor
insb
mov
test
call
int
imul
loop
dec
pushf
dec
xor
je
fs
rcl
shl
xchg
cmpsb
push
sbb
pusha
xor
xor
lods
es
scas
test
lods
and
push
loop
and
push
or
fisubl
push
adc
xchg
jecxz
sub
sbb
imul
mov
push
xchg
mov
in
lea
pop
movsl
jno
lret
sub
adc
stos
jg
mov
cwtl
dec
sahf
test
enter
mov
xchg
xor
sub
gs
scas
cmp
inc
xchg
pop
repnz
xchg
xlat
push
movsl
ljmp
mov
fcompl
add
in
pushl
mov
outsl
scas
add
enter
pop
xor
push
sarb
sbb
rorl
mov
jb
mov
mov
cmp
dec
sbb
jg
imul
leave
in
addl
dec
in
mov
add
sbb
xlat
adc
sub
inc
sub
popa
xchg
cltd
outsb
pushf
sub
and
bound
sbb
push
and
sahf
cmpl
dec
sub
aas
add
inc
mov
push
cwtl
int3
test
push
push
loop
test
ss
push
sti
inc
fsubr
lret
mov
insb
fnstsw
inc
pushf
call
js
cmp
shrl
jbe
fcoml
cmp
in
dec
jno
pop
cmp
out
mov
icebp
cli
add
into
dec
fldt
mov
mov
xor
pop
sub
shll
pop
pop
xchg
out
lahf
aad
movsb
lds
jb
jnp
ret
pop
repz
xchg
mov
jo
mov
subb
into
pushf
inc
pop
sarl
push
pop
repnz
or
imul
push
lock
xor
into
pop
xor
sub
movsb
jne
and
xor
enter
cmp
stos
pop
mov
inc
adc
les
jae
cli
adc
jmp
bound
jno
stc
shll
jp
test
cmp
add
fists
pop
sub
andl
jmp
mov
aad
xor
insl
adc
jnp
dec
sbb
sbb
popf
xchg
stos
popf
adc
addr16
imul
mov
pop
adc
gs
popa
mov
aas
sarb
decb
inc
or
arpl
inc
pop
lods
mov
or
sahf
dec
mov
add
pop
xor
int3
and
jmp
sbb
in
xor
xchg
inc
adc
cmpsl
or
arpl
and
xor
shll
lock
push
push
std
dec
mov
lahf
jne
mov
dec
clc
into
cmpsl
lahf
jl
jle
icebp
cmp
cmp
out
adc
cmc
xor
push
inc
mov
subb
inc
popf
inc
std
loop
iret
call
adc
ss
mov
sbb
sar
std
xchg
mov
lock
decl
xchg
mov
stos
mov
push
jecxz
mov
test
stc
adc
and
les
mov
nop
jne
add
out
and
js
outsl
dec
shll
movsb
test
ds
lods
mov
clc
mov
xchg
add
sbb
stos
dec
jo
and
movsb
scas
cmp
push
jne
xor
mov
mov
pop
movsl
dec
aas
ret
pop
ret
pop
dec
hlt
loope
inc
daa
xchg
rcll
adc
data16
mov
test
jl
xchg
push
mov
in
add
ficompl
mov
mov
pusha
in
jl
dec
icebp
fdivrl
sub
push
add
loope
in
movsb
test
mov
xor
add
fmuls
pusha
mov
out
pop
sbb
cmp
arpl
subb
decl
mov
icebp
lcall
lea
ret
adc
ljmp
insl
dec
jmp
dec
pop
out
xchg
dec
insb
enter
adc
clc
outsb
lods
popa
add
stc
lahf
xchg
jno
add
ss
jb
pushf
jge
mov
pop
and
jb
sbb
inc
adc
add
sbbl
test
or
dec
mov
xorl
dec
insb
add
nop
sbb
insb
or
sarl
ja
sub
call
and
mov
mov
add
mov
repnz
in
push
push
std
push
fwait
mov
add
adc
cmp
fcoms
mov
mov
test
aas
push
push
push
mov
mov
ja
mov
iret
insb
mov
mov
push
mov
jge
jbe
out
lock
jl
loope
scas
push
mov
adc
xor
enter
mov
adc
xor
movsl
pop
jbe
jmp
pop
lock
ret
fwait
push
rolb
xor
xorl
cmpsb
fstpt
pusha
leave
std
inc
jnp
sub
mov
pop
cmp
mov
push
pop
sbb
hlt
cmp
lods
fimull
aas
int
pop
jnp
cld
inc
imul
mov
jl
dec
lods
test
add
adcl
cmc
pushf
jbe
outsb
pop
popf
jecxz
mov
dec
ret
jmp
sub
lea
js
aaa
clc
pop
mov
mov
outsl
out
and
outsb
fucomi
loope
rorl
adc
cmp
ljmp
in
nop
inc
jno
sbb
gs
scas
out
jae
jns
pop
test
enter
xchg
rcrb
cmp
cwtl
into
cmpsl
sbb
test
ficomps
pop
cld
movsb
mov
mov
shlb
je
jmp
xor
daa
adc
shrl
cmp
cmp
andb
cmp
call
adcb
xchg
fsubs
lea
test
or
clc
xchg
mov
xchg
jge
jp
rorl
jne
cmpsl
jb
dec
loop
inc
sub
xor
std
jb
fsubl
rcll
sub
ds
outsb
lahf
push
mov
cmc
into
inc
jbe
inc
shll
add
jne
insb
fcomps
pop
in
pop
xchg
add
xor
or
pop
pop
push
ret
sbb
push
cmpl
stos
bound
or
call
mov
xchg
mov
xor
rorl
push
push
adc
fstl
mov
fwait
test
add
arpl
or
pushf
inc
pusha
enter
fs
fcmovnu
stos
and
mov
pop
ret
adc
and
add
push
nop
add
xor
xor
loopne
cld
and
jo
in
jp
add
scas
xor
sub
xor
test
leave
adc
sub
cwtl
orb
mov
ret
jbe
movl
push
xor
sbb
adc
cwtl
push
imul
shl
lods
sub
mov
pop
push
mov
adc
dec
aas
jno
gs
push
sbb
adc
push
xchg
pop
icebp
sub
push
fldcw
icebp
fwait
icebp
push
add
pop
mov
inc
jnp
xor
push
imul
scas
adc
push
xchg
xor
mov
sub
pop
leave
sbb
shlb
arpl
pop
mov
or
fcmovu
push
sbb
bound
bound
xchg
enter
test
sbb
xlat
push
dec
fists
lahf
pop
cmp
and
pop
fstps
sub
sti
jp
jmp
add
or
xchg
mov
jmp
push
shr
loopne
rorb
mov
xorb
in
sub
out
jmp
jbe
jbe
outsb
pushf
dec
ljmp
pop
cmp
cmpsb
mov
insl
jmp
push
addl
repz
cmpl
fs
inc
fstps
fisubl
decb
add
stc
cmpsb
jecxz
shll
jns
imul
aad
push
mov
pop
jnp
stos
jo
push
jmp
jp
dec
in
dec
push
inc
lcall
and
fidivrl
adc
sahf
fcmovb
sub
push
cmp
mov
int
and
sti
sbb
mov
or
bound
insb
xchg
fsts
xor
mov
push
loop
push
add
cmp
mov
fxch
fs
jo
fcompl
shl
movsb
and
xchg
shll
sub
sahf
mov
cmc
lret
out
pop
mov
dec
in
sub
or
int
popl
out
jnp
aam
add
jb
ss
jle
sarb
cmp
in
dec
popl
inc
sbb
jmp
vmread
sbb
in
jp
test
in
out
shll
rorl
xor
lahf
xchg
xchg
pop
scas
mov
and
dec
fsubrl
adc
insl
mov
xlat
insl
bound
dec
jge
sbb
inc
pop
add
jne
or
out
mov
lods
pop
negl
icebp
stc
xchg
mov
xchg
leave
and
pushw
add
add
or
frstor
sbb
add
adc
mov
cmp
stos
sbbb
jae
sbb
sub
adc
mov
popa
inc
gs
mov
push
cld
sahf
mov
xchg
inc
sub
add
sbb
data16
push
ret
sbb
je
lahf
in
fwait
inc
imul
add
in
movsb
sti
push
out
pop
push
scas
jne
ficompl
rclb
xchg
jp
adc
scas
cmp
imul
mov
pop
cmp
testb
in
mov
out
dec
mov
xlat
mov
and
leave
xor
fdiv
popf
inc
pop
lods
cmp
inc
push
mov
or
inc
push
cmpsl
mov
xor
sti
iret
shlb
add
ret
push
jmp
popa
testb
ficompl
loope
mov
gs
lcall
rorb
jg
fwait
push
sbb
inc
push
cli
mov
test
jp
gs
jo
cmpsb
pop
ds
jne
stos
mov
bound
pop
ret
sub
inc
xchg
mov
cltd
adc
cld
adc
sbb
andl
mov
test
scas
divl
mov
cli
mov
into
sahf
sbb
inc
xchg
mov
aam
jp
imul
add
sti
and
push
sub
ss
repz
sbb
inc
and
in
push
xor
fnstsw
mov
sub
sahf
or
insl
cwtl
ret
xor
add
movsb
stos
or
xor
sub
dec
push
add
shlb
popa
sbb
sub
bound
cwtl
fs
xor
cli
jecxz
movsl
lods
imul
std
or
leave
shlb
and
push
pop
lea
lcall
xor
adc
fs
insb
and
movsb
and
or
das
aas
or
ret
mov
jge
xor
std
lea
mov
paddb
xchg
es
adc
movsl
pop
and
cltd
adc
cld
loop
cs
dec
xchg
add
add
lds
rolb
push
push
int3
lcall
inc
stc
sahf
imul
out
xchg
out
movsb
ffree
pop
mov
push
loop
movb
sbb
lods
pop
mov
add
adc
mov
xchg
xor
imul
adc
and
add
or
movsl
cld
mov
cmp
xlat
xor
cmp
call
nop
add
add
jecxz
repnz
push
out
sbb
orb
int3
lret
mov
mov
cmc
dec
push
out
jo
iret
push
xorl
mov
mov
clc
jmp
fildll
inc
fimuls
leave
bound
jnp
imul
insl
xchg
lods
and
and
pop
cmp
test
mov
push
push
sub
cmp
test
add
cmpsb
jl
or
lods
sbb
lret
pop
adc
mov
dec
das
sbb
pop
or
cmovb
hlt
loope
add
jbe
sbb
orl
sti
popa
cmp
inc
mov
adc
jp
mov
lcall
xchg
andl
lahf
jp
imul
push
and
shlb
or
pop
cmp
in
sub
adc
xchg
inc
mov
lods
loop
push
popa
cmp
orl
xchg
or
pop
ror
xor
or
jle
sbb
mov
outsl
daa
xchg
sahf
xchg
mov
adc
push
adc
mov
xor
iretw
or
mov
cmp
mov
xchg
aad
out
or
add
dec
lret
sub
push
cmp
pop
xchg
xor
pop
pop
mov
cltd
mov
bswap
sbb
pop
jno
iret
iret
pop
sub
xchg
mov
repz
and
sub
jp
cmp
shlb
dec
add
add
ret
cltd
insl
sub
push
mov
push
rolb
push
add
inc
dec
pop
mov
mov
jg
dec
push
jbe
stos
lock
sbb
lahf
lea
jno
inc
bound
arpl
jnp
pusha
and
shl
aas
insb
sub
jmp
rolb
inc
jecxz
jle
adc
scas
insl
jb
dec
cli
xchg
pop
jo
jge
pop
add
dec
mov
jl
movsb
notb
shlb
jecxz
pop
and
mov
daa
mov
int3
mov
int
jge
sti
adc
xor
jbe
pop
mov
in
jo
adc
xor
pop
cmp
dec
in
call
or
jb
sub
jmp
jmp
pop
dec
xor
lcall
push
pop
sbb
pop
fcomps
lret
icebp
pop
leave
mov
adc
mov
fdivrl
pop
lds
cmc
addb
push
in
fsubp
mov
lods
add
push
pusha
xchg
into
pop
daa
lods
mov
or
pop
push
cmpsl
inc
inc
sub
sbb
xor
sbb
push
fwait
les
ja
incl
sub
xor
jecxz
mov
jmp
por
mov
push
int3
xchg
sub
cmpsl
idiv
popa
adc
xchg
ret
jp,pt
test
mov
mul
das
pop
fisubs
jmp
and
cmp
shll
inc
mov
xor
cmpsb
negb
mov
addr16
fstpl
cmc
jne
mov
mov
or
cmp
nop
into
xchg
lods
push
mov
dec
dec
les
cmp
iret
ret
lea
ja
mov
fwait
bound
fmuls
add
add
pop
dec
xchg
adc
add
or
out
push
mov
ja
and
pop
xor
pop
xor
add
dec
flds
rorl
lea
or
add
cmpsl
ficompl
push
mov
pop
int3
mov
sbb
pop
test
mov
push
pop
pop
inc
rcr
push
arpl
ret
add
int3
in
mov
js
mov
in
jnp
in
sub
sub
bound
lock
movsl
jmp
jecxz
fwait
test
cwtl
xor
test
lcall
lahf
push
call
xor
push
lods
or
xchg
xchg
pusha
xor
mov
mov
dec
addb
pusha
call
call
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
ret
add
