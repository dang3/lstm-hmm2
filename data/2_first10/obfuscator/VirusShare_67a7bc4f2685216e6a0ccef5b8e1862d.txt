nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
pushl
call
add
pop
sub
mov
add
ret
jb
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
pusha
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
sub
mov
add
ret
add
push
pop
lea
push
pop
rep
call
add
push
lea
mov
shl
add
add
pushl
pop
pop
cmp
je
push
sub
jl
pop
cmp
ja
jmp
pushl
ret
hlt
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
push
push
call
add
pop
sub
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
push
push
push
call
add
pop
sub
mov
add
ret
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
mov
push
mov
push
subl
push
subl
mov
xor
inc
call
sub
mov
pop
mov
mov
lea
push
pop
dec
and
mov
mov
xor
adc
adc
lea
xor
cmp
je
sub
sub
or
adc
add
mov
pushl
sub
sub
pop
bswap
jmp
lea
push
xor
mov
nop
call
test
jne
sub
ret
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
push
push
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
pushl
push
push
call
add
pop
sub
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
add
sub
push
push
pushl
push
push
call
add
pop
sub
mov
add
ret
add
add
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
sub
push
pushl
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
jb
repz
fucom
outsb
imul
clc
in
xor
ss
lret
dec
scas
lret
jp
incl
stos
leave
mov
xchg
out
stc
or
and
lods
repz
adc
test
jb
sbb
stc
sbb
push
inc
std
xchg
lods
add
aad
push
lods
fwait
cs
jg
mov
scas
fcomi
push
mov
rcll
or
mov
out
mov
jg
in
push
adc
rolb
adc
outsb
in
inc
lcall
mov
out
mov
sbb
sahf
fs
add
lods
pusha
or
mov
jecxz
xor
jns
bound
fwait
int3
lods
mov
mov
scas
mov
cmpsb
sub
xchg
pop
mov
sahf
sub
popa
jnp
push
xor
cmp
ss
sahf
mov
fidivrs
addb
addl
out
adc
jl
test
ja
sti
jae
xchg
push
aas
hlt
call
lcall
dec
mov
fadd
jle
fmull
xchg
ret
xchg
mov
xchg
and
std
ss
leave
xor
push
push
push
daa
push
std
jge
push
add
push
push
push
aam
rorl
je
in
out
loope
aam
les
cmpsl
push
jmp
mov
into
cmp
mov
test
pop
xchg
cs
das
sbb
push
mov
inc
add
xor
loop
and
je
xor
imul
mov
out
insb
outsl
jg
int3
test
ljmp
jecxz
lret
jnp
and
adc
wrmsr
mov
out
adc
test
jp
pop
cmpsl
jmp
xchg
scas
jbe
and
aam
xchg
pusha
leave
arpl
ja
add
insl
cld
fsubrl
mov
push
repz
mov
cmp
rorl
mov
sub
es
arpl
in
sub
jg
and
shrl
movsb
lock
iret
scas
out
jno
sbb
lcall
fidivl
jns
lock
push
gs
test
pop
cmp
sti
faddp
pop
ffree
xlat
lock
dec
cmp
aas
inc
mov
xchg
lds
sub
icebp
loop
push
or
jg
add
push
cs
cltd
xchg
or
in
inc
ret
cmpsb
mov
dec
scas
fstpt
shrl
mov
int3
sbb
sub
aam
sbb
pop
jo
scas
mov
sbb
fstpl
sbb
and
pop
mov
cmp
out
into
mov
xlat
div
mov
cmp
and
pop
out
push
adc
dec
sub
jge
in
addw
scas
clc
push
out
pop
aam
xchg
call
jno
fwait
mov
mov
dec
mov
dec
jo
aaa
pop
push
sti
push
int
jle
lods
add
aam
movsl
pop
dec
sub
mov
das
or
aad
ds
dec
jbe
cwtl
sub
movsb
xchg
jo
pop
or
test
push
dec
mov
pop
aam
dec
lds
mov
scas
cmp
sub
out
test
movsb
cltd
shl
xchg
or
sbb
push
sbb
push
or
mov
gs
mov
inc
fs
dec
xchg
mov
dec
insb
xchg
mov
in
adc
dec
clc
xlat
inc
cli
adc
sub
daa
arpl
sbb
pop
xchg
shr
mov
dec
xor
mov
ljmp
lods
dec
lock
es
dec
fwait
cwtl
pop
push
mov
push
popf
dec
scas
adc
insb
imul
imul
ficoms
and
xchg
fildl
ja
cs
mov
adc
mov
hlt
iret
jmp
mov
pop
mov
xchg
xchg
insl
pop
mov
pop
loop
rorb
insb
xchg
dec
adc
mul
sbb
sarl
popl
dec
mov
or
loopne
pop
dec
mov
sarl
test
add
aam
push
decl
imul
cld
repnz
dec
lcall
test
nop
mov
inc
ror
roll
pop
repnz
addl
mov
orl
sbb
mov
push
addr16
pop
and
call
jle
pop
call
icebp
notb
ds
jg
mov
mov
js
pop
imul
xor
mov
lea
insb
faddl
sbb
cld
jns
aad
sub
xor
fisttpll
repz
sbb
adc
scas
jns
push
and
jns
cmp
out
inc
jns
stc
cmp
int3
inc
ret
xor
ret
mov
sti
pop
sub
outsb
sahf
lret
sahf
sub
ror
repz
popf
mov
mov
sub
popf
dec
mov
mov
push
pop
pushf
fiadds
xchg
mov
fistl
movsl
iret
push
add
outsb
icebp
sbb
iret
cwtl
std
icebp
je
push
fsin
icebp
rorb
pop
outsb
sti
stos
mov
fstps
push
jmp
test
jnp
adc
into
dec
adc
mov
pop
lods
daa
aas
mov
fisubrs
sbb
fwait
pop
or
sub
std
rolb
das
pop
mov
cwtl
int
aad
ficoms
in
and
push
sbb
and
mov
lcall
daa
dec
aaa
ss
leave
and
inc
inc
mov
rolb
je
pop
mov
mov
repnz
cmp
lret
sub
in
aad
xchg
cs
cli
jb
into
xchg
insl
imul
mov
push
pop
mov
pop
test
sbb
mov
push
outsl
mov
add
dec
sbb
outsl
xor
xchg
dec
out
mov
pop
fildll
addr16
xchg
cwtl
and
sub
or
and
mov
pxor
push
outsb
xor
dec
mov
inc
test
mov
test
xchg
in
cmp
xlat
push
pop
mov
sbb
cmpsl
push
sahf
or
dec
ja
pop
adcb
and
inc
popf
mov
or
lods
and
sub
ret
aad
cmp
mov
sub
fnstsw
mov
cmpb
cmp
aaa
and
fcmovu
daa
and
fcmovu
div
addr16
cmp
xor
in
mov
jge
push
sub
mov
inc
aaa
in
in
.byte
