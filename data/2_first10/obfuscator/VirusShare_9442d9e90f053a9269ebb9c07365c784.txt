mov
fidivs
popf
and
or
xor
xchg
jl
test
das
hlt
push
lret
jmp
jmp
and
lock
jno
sub
pop
loope
inc
ret
dec
cld
pop
cld
pop
adc
pop
outsl
jb
jns
inc
push
enter
mov
jle
add
mov
xor
loopne
cmc
adc
push
fmull
in
or
push
lcall
in
jne
stos
nop
jg
mov
insb
dec
pop
ja
sub
push
adc
add
add
push
jmp
inc
ja
out
repz
adc
shrb
or
sub
sbb
xchg
jbe
or
push
cmc
push
adc
sub
lcall
lock
test
xor
movsb
mov
stos
repnz
jno
adc
pop
js
iret
jg
push
or
sub
push
lock
std
std
mov
xchg
shlw
inc
ret
rcrb
popa
and
pop
ss
outsl
dec
sbb
and
dec
inc
cmc
and
aam
push
ret
add
out
fisubl
adc
test
popa
push
icebp
add
mov
test
xchg
int3
les
dec
mov
push
enter
roll
mov
jmp
pushf
cmp
add
jmp
jmp
mov
push
jmp
sub
and
jle
ret
data16
inc
call
stc
je
fcomp
es
pop
push
aas
push
cmp
pushf
test
pop
cmp
jb
mulb
testb
lahf
sbb
adc
cmc
lret
cli
popf
inc
mov
lods
cs
stos
cmpsb
sub
mov
jae
mov
lea
pusha
pushf
pushf
pushf
mov
call
cmc
sub
test
cmp
call
cmp
test
cmp
or
pushf
push
jmp
dec
pushf
mov
pusha
push
rol
movb
sub
pushf
cmp
test
cmp
not
lea
pushl
jmp
push
push
pusha
movl
call
push
neg
movl
movw
mov
pusha
rol
stc
cmc
clc
cmc
shr
pushf
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
cli
dec
jg
and
into
push
aam
daa
push
adc
inc
leave
xchg
push
sub
cmp
movsb
ret
cwtl
xor
jne
mov
out
dec
es
mov
mov
clc
and
cmp
lcall
mov
andl
push
test
scas
cmpsb
fs
add
js
test
movb
sub
mov
adc
icebp
not
pusha
mov
jmp
jmp
mov
and
pop
mov
sub
xchg
jmp
xlat
outsb
cmp
cmpsb
fsubs
jg
mov
out
xchg
sub
pop
jne
mov
subb
sbbb
mov
pusha
sbb
xcrypt-cbc
cmpsl
xchg
pop
push
xor
cwtl
xor
xor
cmp
pop
cmc
enter
sbb
mov
cmp
mov
xchg
mov
ljmp
push
push
sahf
lock
stos
fs
mov
cmc
js
out
mov
int3
sahf
xchg
mov
jmp
sar
jo
push
rep
dec
and
jle
sbb
lods
lcall
push
repnz
fnsetpm(287
test
mov
js
cwtl
xor
lret
xor
pop
jmp
add
push
push
add
pop
push
and
hlt
jmp
and
mov
pop
adc
aaa
shll
jno
pop
xor
add
push
mov
cmp
test
mov
jbe
imul
sub
adc
mov
int
inc
push
mov
cmp
call
push
inc
pop
std
pushf
sbb
int3
cs
xchg
jb
dec
out
mov
xor
sbb
mov
fs
mov
adc
or
int3
cld
or
cmp
cmp
push
sub
aas
pop
adc
and
xor
or
lods
dec
jmp
pop
loopne
fistpl
push
and
jl
pop
in
call
bt
cmp
pushf
call
movl
pushf
pusha
mov
mov
pushf
pushl
ret
push
push
lea
call
jnp
pusha
pushf
lea
jae
call
not
movzbw
mov
lahf
movsbl
mov
pushf
bswap
pop
lea
pusha
mov
push
pushl
movl
call
test
xor
popa
clc
lcall
orl
push
xchg
sbb
xor
nop
rcrb
cmpsb
les
lods
push
icebp
xchg
fnstenv
mov
and
lcall
mov
cwtl
adc
lcall
xor
cmpl
add
mov
leave
clc
mov
pushf
stc
movsbw
sbb
mov
movzbw
bts
movzbw
shl
mov
pushl
movl
jmp
lea
je
pushf
pushf
adc
pushl
lea
jmp
movsbw
mov
movsbw
mov
bswap
movsbw
pushf
mov
pushf
pushf
movw
lea
jmp
mov
addl
mov
pop
fnstcw
add
in
inc
outsl
mov
pop
clc
daa
int3
outsl
adc
push
push
and
pop
pushl
jb
mov
cmc
mov
xor
fnsave
dec
push
xchg
xchg
sub
sub
add
xchg
das
cmpsl
and
out
cmpsl
xchg
jg
mov
test
fwait
ss
mov
xor
jl
stc
cwtl
xor
or
lods
dec
in
jp
pop
add
dec
js
aas
mov
addr16
and
subl
ds
sub
movsl
inc
rorl
out
fstl
pop
aam
daa
or
jae
subb
jne
dec
aas
stc
cwtl
pop
pop
mov
mov
fistpl
out
cwtl
sub
imul
in
lock
mov
daa
lods
sub
jl
adc
call
repnz
push
lea
jg
jne
bswap
cwtl
jmp
clc
pushf
cmp
xchg
bt
sar
mov
clc
push
call
cmc
jmp
push
add
andl
or
scas
dec
out
lea
lret
jno
fimull
push
shrb
outsl
aas
pop
pushf
in
outsl
xor
push
xacquire
hlt
mov
dec
in
cmpsl
inc
fists
push
into
inc
sarl
inc
rolb
pop
xchg
mov
xchg
lea
je
call
setae
seto
inc
push
mov
call
lea
jne
call
movl
pusha
push
pushf
movb
lea
jmp
mov
and
aad
push
mov
movsl
pop
test
insb
or
jmp
mov
sbbl
cld
cwtl
xor
push
lods
xor
inc
or
das
syscall
and
xchg
xor
outsb
lock
inc
sub
iret
jne
insl
mov
or
data16
shll
popf
mov
nop
daa
mov
cmpb
neg
push
dec
pop
mov
cli
adcb
jp
and
insb
out
test
push
scas
dec
jmp
shl
xor
fsubrs
pop
pop
pop
shrl
ror
addr16
subl
mov
enter
out
mov
bound
push
lahf
mov
ja
imul
pop
loop
pop
icebp
xchg
pop
ror
mov
test
jmp
mov
mov
not
call
movb
call
call
jmp
movl
pusha
jmp
lods
lock
cld
jle
xchg
sub
and
push
fsubs
jmp
das
xchg
or
and
xor
jb
or
movsl
sbb
insl
imul
jns
and
scas
jnp
xchg
mov
jecxz
add
push
xor
mov
loop
ror
ret
sub
imul
mov
and
inc
mov
das
jnp
adc
ja
dec
stos
es
in
imul
adc
and
fdivr
in
out
lock
adc
pop
sub
out
cmpsl
orb
inc
xor
mov
rorb
pop
sub
add
dec
push
cmc
fwait
enter
xchg
push
xor
xor
cmp
cwtl
outsb
mov
inc
inc
fcomps
mov
adc
inc
xchg
push
sti
out
and
into
repz
imul
push
xor
pop
dec
insl
xchg
es
add
and
pop
arpl
call
add
bt
push
cmp
movw
lea
ja
lea
call
bt
bt
mov
rol
test
mov
jmp
call
clc
test
or
pusha
lea
jne
rol
movsbw
mov
pushf
pushf
jmp
pusha
pushf
mov
lea
ja
jmp
stc
cmp
call
lea
jae
stc
jmp
lods
cmc
pushl
cmc
sub
movw
call
mov
not
inc
setbe
call
mov
lea
jae
cmp
jmp
inc
mov
and
add
xor
pusha
rcl
mov
cmp
cmp
test
jmp
mov
pusha
jmp
pusha
lea
jne
pushf
movb
stos
pushf
push
lea
jmp
pushf
lea
je
pushf
call
mov
pushf
pushf
pushf
pushf
lea
jmp
push
call
mov
movsbw
cwtl
setne
movsbl
movl
lahf
pusha
lea
jmp
lods
lock
fcomps
in
sub
mov
hlt
cmp
rcr
push
int
in
aad
xchg
imul
nop
cltd
jb
add
mov
repz
and
test
add
insb
add
jns
xchg
mov
jecxz
add
sbb
add
lods
movsb
sahf
jp
out
cmpl
sub
popf
lcall
mov
stos
out
mov
sbb
xchg
mov
movsb
dec
in
sub
gs
int
inc
aad
mov
lret
push
sub
addl
idiv
stos
mov
adc
jae
add
xorl
sbbb
pop
sub
push
out
outsl
adcb
cltd
lret
lds
xchg
pop
cmp
pusha
dec
fisttpll
add
cld
mov
mov
nop
inc
dec
fcomps
outsl
mov
add
dec
mov
out
das
or
xchg
adc
mov
mov
xchg
sbb
dec
dec
pop
and
mov
test
ficoms
call
mov
jp
and
testl
fistl
fsts
inc
jecxz
es
pop
add
aas
xlat
jns
mov
gs
inc
adc
insl
daa
mov
mov
cld
enter
cmp
mov
cld
rcrl
pop
cmp
cmp
or
jle
imul
hlt
scas
dec
xchg
add
mov
mov
movsb
and
pop
add
out
int
arpl
mov
push
sub
mov
inc
mov
adcl
xor
lods
dec
jge
adc
xchg
ret
imul
cmpsl
aas
les
xor
cmp
mov
loop
mov
pushf
mov
jmp
push
jg
mov
out
sbb
loop
mov
mov
shlb
cmpsl
inc
loopne
and
sti
xchg
mov
pop
fistpl
jb
mov
in
test
dec
aam
in
mov
pop
mov
xchg
adc
scas
pop
ljmp
das
enter
mov
test
bound
mov
jle
lds
dec
cmp
dec
sbb
pop
mov
cmp
jo
mov
ja
leave
xor
or
js
lds
cmp
mov
mov
pop
or
mov
xor
or
imul
andl
dec
in
xchg
das
aam
pop
mov
sub
lcall
cmp
testb
or
xchg
das
enter
lods
dec
int
xorl
mov
jb
mov
das
and
fwait
jecxz
mov
fucomi
lahf
sub
ret
pop
aas
pop
shlb
add
sbb
xor
aaa
fadd
sbb
xchg
sub
add
fnsave
sbb
sub
int3
lahf
push
push
lahf
pop
cmc
mov
jb
sbb
jns
mov
movsl
jo
dec
pop
repz
xchg
add
cmp
xor
mov
ret
inc
les
sarb
sbb
or
test
push
pushf
lea
je
push
sub
stc
pushf
test
cmp
jmp
test
test
pushf
lea
je
bt
stc
jmp
nop
pop
in
mov
and
mov
mov
in
and
sar
inc
lock
std
mov
or
mov
cmpsb
pop
andl
lods
fstpt
rol
in
cmpsb
dec
in
sbb
test
sahf
jno
iret
ret
inc
jmp
jmp
push
or
pop
inc
popa
sub
test
mov
push
inc
xchg
cs
pop
es
hlt
stos
rcrl
push
iret
adc
int
sub
mov
inc
daa
sti
xchg
bswap
bound
jg
nop
pop
nop
js
pop
int3
outsb
sub
pop
dec
rcll
lret
dec
leave
inc
ret
add
sbb
cld
dec
mov
pop
clc
ja
mov
sbb
leave
shl
adc
jecxz
and
daa
enter
dec
loop
push
mov
incl
inc
cmovle
jo
shrb
ds
xchg
xor
stc
int
xor
rcll
xor
adc
pop
pop
push
ljmp
inc
in
mov
notb
jl
arpl
xchg
sub
out
inc
in
or
test
js
je
push
dec
dec
inc
lea
jae
movzbw
bswap
xchg
bswap
mov
jmp
sbb
lea
add
dec
push
mov
push
ret
mov
movsl
cwtl
ss
fmull
xchg
hlt
mov
dec
rorb
dec
or
pop
add
shrl
and
andl
pop
mov
idivb
dec
icebp
scas
movsl
aam
pushf
je
push
add
lock
mov
or
mov
add
testb
andl
sbbb
pop
cmc
xchg
xor
insb
out
fwait
std
sahf
int3
inc
insb
push
je
inc
inc
inc
lock
lret
test
shlb
inc
lret
xchg
fst
mov
push
mov
call
lock
mov
mov
sbb
cmp
imul
mov
inc
test
mov
jl
ja
jne
jmp
rcr
bound
mov
iret
mov
push
clc
jge
mov
dec
sarb
xor
jge
sbbb
or
and
fcmovb
jle
pusha
and
mov
cmpsb
fs
pop
std
mov
fs
ljmp
pop
fidivs
cmpsl
xchg
imul
and
lret
and
cmpsl
lock
ljmp
jb
dec
sub
addr16
add
xchg
xor
or
sub
addr16
dec
xchg
xchg
push
or
insl
adc
iret
in
test
push
mov
push
mov
push
iret
dec
iret
dec
int
lret
push
rorl
icebp
lods
mov
xor
add
scas
popl
outsl
dec
inc
loop
xchg
clc
xchg
shrl
in
mov
jecxz
jp
jge
rcrl
cmp
jp
mov
and
popa
or
inc
fwait
cmp
pop
mul
sub
addr16
arpl
test
xchg
pop
and
mov
mov
jae
cmp
cmp
int3
push
hlt
cwtl
sbb
jmp
jbe
scas
fisttpll
mov
sbbl
stos
xor
xor
cli
jno
inc
stc
or
pushf
lea
je
lea
jmp
bt
cmp
jmp
push
push
mov
lods
test
bt
sub
test
pushf
movl
neg
stc
stc
movb
ror
cmp
call
cmp
mov
call
jns
add
outsl
or
mov
loop
mov
pop
test
fistl
movsl
pop
jmp
data16
mov
es
decl
sub
adc
cmp
xchg
mov
dec
xor
or
sub
xor
fdivl
inc
rorl
scas
sub
mov
push
movsl
imul
cmp
sbb
out
popa
push
lcall
or
pop
cmpsb
pop
cmpsb
mov
cmp
mov
jmp
adc
pop
je
sahf
inc
repnz
xor
std
jns
js
jb
popa
imul
adc
cmp
cmp
mov
pushf
cmp
mov
mov
lea
bswap
cwtl
mov
push
jmp
movl
pushf
push
mov
call
lea
movsbl
push
mov
jmp
lea
jae
cmp
cmc
bt
cmp
cmp
push
mov
lea
ja
jmp
jae
pusha
jmp
stos
push
pusha
lea
jmp
pusha
stos
mov
pushf
push
pushf
lea
jmp
add
and
pushf
cmp
pop
add
cmpsl
mov
dec
xor
mov
pop
sub
mulb
lcall
and
and
inc
cmc
jecxz
inc
popa
pop
lahf
pop
mov
sbb
dec
mov
adc
cmp
jmp
add
dec
gs
popa
addr16
outsl
js
add
and
lea
les
sahf
inc
fdivl
xchg
push
xor
mov
sub
stc
push
fs
gs
or
sub
adc
out
lea
mov
pop
cli
ja
push
out
fcom
loopne,pn
add
nop
sub
lret
inc
inc
fstp
js
loop
mov
jnp
add
jle
fcomp
cwtl
push
ljmp
cs
push
adc
xchg
jnp
inc
pop
ret
iret
inc
out
xor
dec
jns
mov
xor
movsl
sub
and
rol
bt
sub
pusha
stc
clc
pushl
cmp
movzbw
mov
jmp
movb
mov
push
mov
pushf
pushf
movw
pushl
ret
mov
lds
je
mov
sbb
or
in
mov
jp
sti
xchg
dec
in
test
int
add
inc
loopne
and
test
xchg
shll
orl
pop
mov
popa
dec
xor
pop
mul
popa
loopne
xchg
mov
bound
mov
or
out
push
out
mov
mov
int
mov
push
icebp
xchg
cmp
sub
xor
mov
cli
sbb
fs
rorl
push
rclb
cli
adc
cltd
ret
test
sub
jne
popl
call
jmp
lea
call
call
pusha
push
cmp
pushf
push
lea
jae
push
test
bt
cmp
add
pusha
pushf
pushl
jmp
cmc
or
pusha
jmp
stc
add
movb
test
call
test
and
mov
dec
call
imul
xor
ret
xchg
cwtl
std
fimull
stos
or
pop
loopne
and
sub
mov
sub
jmp
xchg
jb
add
jp
gs
clc
nop
jp
inc
and
cwtl
xchg
xor
orb
inc
pop
hlt
mov
movsb
inc
jecxz
fistl
sub
dec
movb
sub
xchg
xchg
push
or
mov
xor
mov
stos
push
lods
icebp
dec
jmp
aas
sbb
mov
or
add
lock
adc
xchg
loopne
fsubrs
cmpsb
and
or
das
rorl
adc
xchg
andl
sub
fs
imul
jmp
sub
lock
cmpsb
fsubs
push
out
push
repz
sub
jnp
xlat
xor
xor
loop
sbb
movsl
add
lods
dec
aas
mov
mov
clc
jne
pop
xor
jmp
mov
fisubrs
int3
insb
aas
aaa
mov
or
sbb
push
xchg
add
xchg
loop
and
divb
push
lods
cltd
mov
insl
in
jnp
push
fidivrs
mov
cmpl
adc
mov
ds
dec
jl
loop
fxch
mov
fcom
jae
daa
loope
sbb
cmp
add
xchg
xor
inc
mov
in
fistps
out
or
pop
sti
testb
inc
je
xchg
cld
fistl
in
fs
sbb
jb
pop
add
test
mov
push
test
dec
mov
dec
pop
fcmovne
mov
mov
cmp
jle
jbe
leave
jb
jmp
mov
outsl
arpl
inc
jb
add
test
or
pusha
cmc
cmp
jmp
pushf
movl
pusha
push
lea
jmp
pusha
lea
je
pushf
pusha
test
movb
cmp
push
jmp
arpl
sbb
ljmp
cmp
je
mov
cli
push
and
xchg
mov
mov
mov
test
les
mov
sbb
repnz
cmc
xchg
adc
adc
push
mov
cs
test
push
dec
mov
or
test
call
mov
pushf
add
bt
pusha
movzwl
bsr
shl
or
shl
mov
pushf
add
jmp
test
push
bsr
add
shrd
cmc
shld
rcr
mov
stc
sub
jne
cmp
pushf
add
cmp
movb
test
clc
mov
and
shld
test
pop
mov
test
pusha
test
cmp
movb
lea
jbe
inc
mov
shl
sbb
bt
pusha
add
rcl
bt
stc
shrd
mov
cmp
test
add
rcl
movl
clc
bt
mov
test
call
push
movb
movl
call
pusha
lea
je
pusha
lea
movzbw
movzwl
pop
pushf
bswap
lea
pusha
mov
pop
mov
call
jmp
inc
add
shl
neg
xchg
rcr
mov
test
test
mov
bt
test
bt
xchg
dec
not
mov
stc
stc
sub
pushf
pusha
call
mov
arpl
mov
xor
xchg
pop
int3
aad
in
cmc
jno
lock
mov
scas
push
hlt
cwtl
xor
imul
inc
jecxz
pop
xor
cmp
mov
adc
mov
pusha
pushl
adc
cmp
mov
and
movsl
dec
xchg
sbb
lret
sarl
popf
xor
xor
xchg
jl
dec
scas
push
push
negb
sub
lret
jae
or
data16
push
dec
out
jle
mov
sbb
jo
mov
sbb
xor
fistl
ret
je
cmc
scas
push
sti
je
insb
jmp
fstpl
pop
add
mov
in
jmp
call
call
pushl
mov
lea
je
call
call
pusha
lea
je
cmc
xchg
ror
add
sub
cmp
cmc
jmp
clc
stc
imul
cmc
push
add
pushl
pushf
pushl
lea
jmp
push
push
lea
je
bt
clc
cmp
push
pushl
pushf
pushf
lea
je
pusha
push
lea
jmp
call
push
push
movb
pusha
movl
pusha
pushl
mov
pushf
lea
jmp
push
lea
jne
pushf
pushf
jmp
xor
cltd
andl
mov
in
mov
add
in
pusha
fisubl
push
ret
repnz
mov
out
xchg
xor
push
lahf
test
das
pop
int
insl
pop
pop
sti
jae
mov
adc
jae
jle
jmp
xchg
add
repz
fwait
mov
mov
xor
push
test
or
push
aaa
sub
addr16
stc
lret
shll
movl
xor
sti
je
ljmp
dec
jmp
or
loope
inc
xchg
sarl
or
stos
cmpsl
lds
pop
rcrl
xor
mov
je
lahf
or
push
lret
add
fdivr
sarb
dec
pop
or
push
ficoml
push
jg
pshufw
test
lahf
inc
or
andl
pop
repz
xor
mov
dec
sarl
pop
or
shlb
dec
call
and
out
jns
jecxz
jbe
sbb
nop
or
stc
scas
ss
cmp
ja
daa
lret
mov
dec
call
mov
and
dec
sub
jne
pop
push
push
lods
or
push
sbb
pop
std
jl
pushf
jl
mov
test
mov
push
fmull
pop
ljmp
shrb
imul
in
loopne
fistps
mov
pusha
pop
cli
jnp
xor
jmp
jmp
bsf
inc
bts
add
mov
cmc
cmp
clc
cmpb
jmp
movb
not
movsbw
pop
push
pusha
lahf
mov
lea
pushf
jmp
push
test
fwait
andl
shll
icebp
lds
adc
addr16
xchg
fcom
in
sub
jecxz
mov
sbb
pop
add
ds
iret
lahf
or
push
rclb
pop
ficoml
sbb
pusha
cld
ja
fisubrs
andl
sub
imul
push
mov
push
ror
push
mov
add
sbb
push
fwait
sbb
add
xchg
jle
stc
divl
dec
xchg
jge
insb
or
sub
out
adc
sub
mov
adc
dec
xchg
roll
cmp
les
push
inc
mov
cld
movsb
xchg
mov
ret
mov
outsb
das
inc
cmc
ljmp
jmp
mov
fmulp
cld
gs
xor
out
fimuls
arpl
jmp
out
bound
mov
orb
arpl
out
sbb
sub
loope
adc
sub
mov
out
xlat
add
cmc
loope
insl
or
mov
test
outsl
cmp
push
mov
xor
push
pop
xor
dec
pop
dec
cltd
xchg
xor
dec
and
pop
adc
xchg
mov
int
dec
xor
mov
mov
adc
addl
adcl
int3
xchg
punpckhwd
jg
or
movsb
hlt
outsb
fistl
xor
cmp
or
sub
or
jge
popf
gs
pusha
nop
mov
jmp
inc
inc
lds
js
pop
push
sbb
dec
inc
mov
jbe
ja
js
insl
out
in
jo
mov
lret
cmc
lcall
call
lea
ja
push
pusha
jmp
pop
xor
shll
cmp
and
pop
sarl
pop
sub
shll
shrl
cmp
sbb
cmp
das
and
sarl
and
shrl
and
cmp
shll
add
pusha
mov
push
jmp
aaa
gs
andl
lock
xor
outsb
adc
popf
adc
in
and
fmulp
add
push
jno
ja
or
dec
cmp
aad
rcll
adc
imul
daa
repnz
mov
mov
jmp
scas
xorl
push
mov
cmp
fnsave
fldcw
ret
mov
push
pop
push
mov
cmp
dec
in
push
into
and
sbb
push
push
aaa
sbb
arpl
dec
out
mov
in
test
mov
lds
jo
aas
dec
push
sub
mov
in
ficoms
cmp
mov
test
mov
xchg
xor
xorl
and
lea
call
push
pushl
pushf
pushf
lea
jne
lea
bswap
mov
push
lea
jmp
mov
lea
call
pusha
lea
jb
pusha
pushl
ret
sub
push
sahf
andl
inc
fistps
lcall
cmc
xchg
sub
notb
jle
dec
out
xchg
sub
inc
loopne
adc
stc
and
inc
inc
ficompl
nop
xor
push
leave
pop
imul
inc
push
mov
or
sub
sub
push
mov
cwtl
jne
test
rcll
jmp
sub
test
pushl
popl
jmp
pusha
cmpb
pushf
pushf
lea
jne
adc
jmp
mov
andl
mov
mov
into
addr16
jle
call
sarb
mov
pop
xor
xchg
xor
cs
xchg
flds
jno
sbb
in
adc
sbb
cmc
insb
or
fnstcw
imul
pop
fcoms
dec
sbb
orb
ret
jmp
jmp
call
mov
lea
jb
pushf
mov
bt
movb
cmp
pushf
movb
lea
jae
bt
push
shl
mov
sets
mov
bsf
mov
lea
cmc
push
stc
xor
bt
repnz
jmp
bswap
movsbw
movl
shrd
mov
sub
pushf
bt
cmp
jmp
push
movb
pushf
rep
movzbw
mov
pusha
lea
jmp
jnp
add
add
rcrl
test
push
shlb
test
jmp
fsubrs
repnz
lret
outsl
inc
sbb
cmpsl
xlat
adc
lods
pop
mov
std
pop
add
mov
lock
or
push
xlat
jns
push
repz
std
pop
mov
dec
push
sub
or
shlb
adc
stos
push
out
add
sub
cli
mov
adc
dec
adc
jae
xchg
or
or
push
cmp
xor
ficompl
mulb
bt
call
test
jmp
iret
std
dec
mov
sub
inc
adc
mov
xor
push
fstpt
dec
repnz
xor
jb
mov
sar
sub
lahf
or
cmp
fwait
inc
or
stc
mov
push
js
push
mov
or
aad
leave
notl
pop
jo
sarb
mov
shlb
shll
add
clc
mov
jecxz
negb
mov
mov
fidivrl
mov
hlt
mov
jo
repnz
pop
std
inc
jl
popf
xchg
dec
ljmp
sbb
iret
push
push
sahf
inc
cmp
jg
jo
inc
inc
push
mov
pop
aad
mov
or
jg
lock
xor
push
rorl
icebp
or
ljmp
outsl
rclb
and
pusha
jecxz
out
fsubl
pop
rorl
dec
adc
and
jmp
lea
ja
pushf
lea
je
jmp
test
sub
bt
pushf
pushf
cmp
repnz
push
pushl
lea
jne
xor
shr
shrd
mov
test
sub
bsf
rcr
dec
mov
cmp
stc
bt
test
sub
call
arpl
sbb
sbb
pop
sti
xchg
aaa
iret
push
scas
dec
out
insb
push
js
jecxz
inc
sub
aas
pop
push
aaa
stos
xor
mov
mov
ljmp
insl
push
xor
frstor
pop
aad
fistpl
dec
jge
cltd
xchg
mov
inc
or
jo
andl
imul
inc
call
cli
xchg
xor
dec
sarl
sbb
pop
iret
outsl
adc
adc
cltd
addr16
lock
or
sub
dec
inc
jg
adc
push
imul
mov
jnp
add
div
ljmp
mov
hlt
jmp
bound
or
pusha
inc
adc
outsb
pushf
popf
dec
add
cmpsl
and
das
pop
fimuls
or
sub
adc
mov
cmp
pop
fisubrl
dec
and
pushl
mov
jmp
cmc
call
add
add
push
add
mov
add
add
mov
add
add
add
jmp
pusha
lea
jne
add
xor
bswap
setle
mov
pusha
cmc
pushf
or
call
pop
dec
cli
mov
std
lcall
inc
xor
loop
mov
in
mov
sbbl
dec
lret
mov
dec
sbbl
imul
push
jl
jecxz
out
imul
cmp
jb
fisttpl
mov
ljmp
fcoml
inc
rolb
mov
mov
daa
mov
shll
mov
sub
not
clc
shl
push
push
xchg
cmp
shr
push
rcl
mov
ror
clc
stc
rol
mov
ror
shr
clc
mov
test
sets
sub
push
pushl
pusha
lods
and
shr
sub
ror
rcl
neg
pushl
pushl
push
stc
ror
sar
neg
bt
rol
jmp
cmp
and
dec
jmp
and
shl
dec
repnz
and
loopne
sbb
push
hlt
mov
arpl
jmp
cmp
fisubl
sarb
je
adc
adc
sub
dec
enter
ds
add
adc
daa
push
lcall
outsb
xor
shrb
insb
bound
aam
test
out
cmp
push
pop
call
xor
pop
test
fstpl
dec
into
dec
lds
inc
mov
pop
imul
loope
andl
mov
pop
fildl
pop
push
mov
push
rolb
mov
ljmp
adc
fidivl
jecxz
xchg
sbb
xchg
sub
cmpsl
jg
aad
gs
test
movsb
cmp
mov
adc
or
cmp
inc
adc
xchg
sub
leave
push
xchg
xor
out
mov
cmp
shlb
add
arpl
mov
pop
or
xchg
pop
scas
std
sbb
push
jae
call
add
jp
andl
in
mov
shrl
mov
in
push
pushf
xchg
fidivs
pop
stc
daa
out
jo
stos
or
popa
lcall
out
lahf
imul
mov
inc
fsub
rolb
hlt
scas
push
cmp
fistpll
lods
sbbl
xchg
pop
out
je
sub
fimull
shlb
data16
cmpsb
cmpsl
mov
leave
popf
xor
mov
fcoms
pop
jbe
mov
hlt
and
lock
cmpsl
sub
test
push
mov
mov
xor
pushl
movb
call
add
dec
outsl
popa
fs
imul
add
shll
insl
adc
arpl
movsl
inc
shr
mov
jnp
push
cwtl
xchg
cs
cwtl
add
dec
call
sub
xorl
cwtl
jecxz
fcmovb
ds
or
in
rcrb
fists
nop
push
sbb
sub
fistpl
fnsave
pop
lcall
mov
xchg
jge
js
addb
divb
enter
push
icebp
jno
repz
and
shrb
stos
dec
in
xchg
xor
insb
or
aas
mov
ret
pop
out
mov
jl
lcall
pop
add
movsb
or
sbb
cs
js
test
cmp
out
mov
add
xchg
push
push
andb
stos
sub
push
ds
push
inc
cmp
dec
sbb
lock
sti
push
dec
jmp
std
xor
fldcw
repnz
sbb
leave
mov
xchg
xor
push
loop
push
lret
ficomps
sub
gs
lret
mov
cmp
lret
fs
fcmovbe
jno
push
je
or
jmp
dec
jp
pushf
add
test
out
dec
push
sub
jmp
iret
push
int
cmpsb
adc
sub
mov
mov
add
cltd
add
add
aas
mov
cmpsb
mov
jb
push
xor
xabort
stos
sub
mov
dec
cmpsb
sahf
cltd
aaa
mulb
js
mov
mov
mov
push
enter
ja
add
in
jmp
jl
pop
mov
mov
arpl
icebp
insl
out
imul
out
push
lea
cmp
lea
aam
gs
outsl
inc
mov
mov
dec
in
sub
mov
mov
xor
iret
lcall
lds
mov
cmp
xor
rorl
mov
mov
bt
bswap
mov
bt
test
cmp
push
lea
jbe
sbb
call
lea
je
lea
call
out
xor
dec
in
xchg
mov
shll
ja
fdivrs
ret
ds
pop
mov
daa
lret
jmp
dec
int3
mov
cmp
pop
ficomps
push
aam
movb
fwait
outsl
lcall
rcrl
test
sub
xor
inc
and
cmp
cmp
mov
movb
push
jmp
jne
pop
stos
andl
xchg
das
shrl
stos
dec
loop
pop
scas
push
lock
stc
pop
lahf
sysenter
sub
inc
pusha
add
add
fisubs
and
shll
pop
loopne
ficomps
rorl
mov
jmp
mov
clc
shl
call
jmp
push
jmp
imul
daa
leave
insl
or
sti
int3
dec
jb
movsb
inc
cli
xchg
das
pop
divl
sub
decl
shlb
push
int
lahf
xchg
notl
mov
inc
out
push
repnz
push
test
add
cmp
test
icebp
pop
jbe
mov
lret
mov
jge
mov
sub
leave
inc
sub
cmpsb
sub
mov
stos
andl
shll
mov
out
xchg
xor
outsb
push
lods
inc
ret
xchg
outsl
les
push
inc
pop
arpl
les
icebp
cmp
mov
out
stc
xchg
fwait
or
insl
daa
int3
mov
arpl
cltd
adc
movsb
shrl
test
ret
pop
ljmp
inc
jle
es
pop
xor
mov
sbb
jg
adc
pop
js
inc
or
leave
inc
adc
iret
mov
mov
roll
movl
xor
push
pop
movsb
ror
ret
pop
loop
push
and
and
cmpsb
sub
xor
out
in
lock
push
adc
jecxz
sbb
add
lods
dec
in
and
jp
shll
into
pop
das
cmpsl
lods
jg
xlat
jb
fst
js
fstp
jbe
call
dec
in
int
pop
mulb
jge
in
or
cwtl
int
loope
mov
aad
aam
lret
aas
ret
cmp
pop
add
pushf
lea
je
push
movb
lea
jmp
movl
push
push
lea
jmp
call
insl
cmp
lods
andl
push
cli
pushf
xor
lods
jge
shl
or
jecxz
push
outsl
cmpxchg
mov
aam
or
push
daa
mov
and
push
test
clc
jo
and
and
pusha
aas
fcmovnbe
jae
fildl
imul
fsubl
mov
adc
aam
outsl
lret
insb
xor
movsb
aas
loopne
hlt
nop
or
aam
sub
jbe
divb
out
mov
je
dec
or
daa
stos
xor
xor
cmc
jo
call
rcrb
mov
and
mov
mov
pusha
std
sbb
aas
sahf
mov
repz
pop
hlt
nop
xor
jbe
mov
out
imul
and
and
adc
stos
inc
in
jle
add
cmpsl
dec
les
lcall
movsb
inc
or
inc
in
add
cmp
pop
in
pop
mov
jno
pop
clc
outsl
ljmp
push
fisubrs
push
sbb
mov
lea
jbe
cmc
sub
xor
rcr
rol
mov
add
lea
mov
test
add
rcr
cmc
shr
shl
not
not
mov
btc
add
pusha
movw
pushf
jmp
cmp
pushw
popfw
movb
pushl
pushf
inc
jmp
lret
lods
andl
xchg
ret
pop
stc
cltd
cmp
pop
mull
gs
add
hlt
dec
in
stos
sub
inc
sti
xchg
cmp
mov
addb
xchg
add
addr16
cmpl
xor
andb
std
popa
outsl
pop
adc
sahf
xchg
pop
sbb
fdivs
adc
xchg
jae
sub
enter
fs
in
pop
std
sub
insb
mov
mov
xor
jnp
or
aaa
mov
xchg
add
not
sub
shl
or
shl
sub
mov
or
add
mov
or
shl
add
xchg
shr
pusha
shrd
shr
not
bsr
sbb
test
mov
bt
shl
cmp
lea
add
push
pop
movw
call
scas
jp
scas
andl
or
jo
lods
dec
jecxz
pop
imull
nop
mov
push
inc
sbb
fcmovbe
push
xor
mov
push
loopne
lret
jmp
fcmovbe
mov
pop
cli
jb
insl
out
in
lock
push
cmp
fwait
testb
fdivr
call
push
test
scas
andl
fdivs
mov
std
xchg
xor
xchg
mov
gs
stc
jne
hlt
into
pop
or
in
adc
das
pop
mov
xor
push
hlt
push
out
sbb
or
dec
lock
fiadds
sahf
inc
mov
xor
or
fcompl
roll
scas
inc
jmp
ljmp
pop
aad
stc
ja
mov
and
andl
dec
push
cmpsl
fistpll
mov
xchg
jg
dec
and
mov
andb
mov
cwtl
inc
outsb
pushf
mov
adc
xchg
nop
or
fadd
in
add
push
dec
in
sbbl
mov
push
fcoml
add
pop
loope
loop
or
mov
mov
repz
loop
fisubs
push
ficoml
push
add
imul
pushf
mov
pushf
pusha
pusha
lea
jmp
ds
fldt
push
notl
test
in
shl
icebp
xchg
les
jnp
add
hlt
cwtl
cmp
pop
stc
les
xlat
dec
pop
or
sti
jbe
cmp
cli
addb
add
and
mov
insl
dec
inc
fldt
shr
ret
xor
cmp
divb
int3
insl
or
mov
and
ds
aam
shrb
dec
rcrl
insl
pop
sub
fmuls
pop
push
push
out
add
fmul
inc
cmp
dec
push
lahf
fstps
jle
push
sar
lods
fistl
mov
pop
repz
cmpsl
push
dec
dec
popf
pop
push
push
test
adc
scas
sbb
xchg
push
add
mov
movsl
rcll
scas
and
adc
data16
stos
cmpsb
cmp
out
jns
test
stc
pminub
scas
mov
aaa
inc
xor
leave
clc
pop
das
and
adc
adc
pop
mov
cmp
jns
arpl
pop
dec
jno
dec
int
xchg
push
pushf
cmc
or
lea
jae
pushf
lea
je
mov
mov
mov
movsbw
call
cmc
mov
btc
stc
mov
bt
ror
mov
clc
bt
bt
call
jmp
add
adc
add
add
add
add
add
add
inc
hlt
adc
dec
hlt
adc
dec
hlt
adc
add
add
add
dec
hlt
adc
out
fistpl
insl
xchg
rcll
xor
aas
loop
call
pop
shl
xlat
inc
out
adc
jne
mov
das
or
loope
loopne
xor
cmp
gs
mov
push
lods
pop
mov
push
inc
add
stos
mov
in
mov
fisubrs
or
and
mov
pushf
ficomps
leave
jns
mov
aas
fldenv
lret
xchg
jno
iret
dec
cmp
out
cmp
adc
adcb
sbb
movsl
cwtl
add
and
mov
stos
mov
pop
add
mov
rcr
inc
mov
push
pop
arpl
sub
test
cwtl
fnstenv
shll
fidivrs
sbb
mov
and
push
loop
clc
add
jmp
scas
mov
push
imul
push
inc
mov
or
pusha
and
out
mov
push
outsb
jmp
fists
dec
mov
mov
or
sub
push
adc
pop
push
out
xchg
adc
push
mov
pop
xor
pop
movsb
lret
mov
or
xor
push
loop
leave
lods
pop
fmull
int
dec
hlt
loop
xchg
shrl
fdivl
test
and
pop
pop
or
adcb
push
mov
mov
popa
in
push
adc
push
adc
out
je
inc
dec
dec
or
mov
iret
sub
mov
inc
das
out
ret
sub
pusha
ret
aas
lret
dec
stc
pop
ljmp
data16
mov
inc
dec
push
bound
add
adc
mov
int3
adc
movd
push
push
push
sub
dec
push
mov
push
lcall
mov
rorb
movsl
shlb
mov
mov
mov
test
inc
jge
fidivrs
mov
insl
mov
jb
jl
cwtl
jg
mov
stos
sbb
sub
xor
dec
mov
pop
or
add
icebp
jae
mov
in
or
mov
and
and
cmpb
cwtl
les
fwait
jl
lods
sub
mov
mov
jp
xchg
movsb
mov
mov
xor
sub
jmp
mov
pushf
pushf
popf
pop
xchg
inc
fcoml
pop
sub
jbe
mov
mov
lock
xor
cmp
or
hlt
add
ja
mov
sbb
push
mov
cwtl
repnz
mov
ljmp
sbb
and
out
sahf
mov
xor
fwait
cmp
mov
xorl
and
mov
in
and
mov
sub
add
in
negl
adc
out
inc
push
sbb
mov
cmp
jl
in
pushf
pop
or
jns
icebp
int
sti
mull
int3
adc
rorl
jbe
mov
pushf
daa
adc
mov
fisttps
lea
pushf
or
adc
pop
dec
and
and
insb
or
xor
sbb
sbb
sti
mov
enter
cmp
mov
jle
jp
sti
and
ds
fwait
ljmp
sbb
xchg
add
dec
lock
and
bound
out
mov
mov
adc
xchg
mov
cmp
jo
and
mov
dec
xchg
out
xchg
sbb
les
pop
add
or
cld
pushf
jnp
test
add
inc
aam
jecxz
pop
add
push
fs
ret
pop
or
jge
inc
mov
ja
inc
out
xor
in
jp
mov
or
xor
push
inc
lahf
mov
jno
int3
dec
dec
addr16
jno
sbb
test
xor
lods
hlt
leave
mov
test
sbb
xchg
mov
pop
push
fistpll
jp
shld
fcomps
insl
dec
js
push
cmpb
in
test
xor
xor
pop
lcall
jecxz
mov
test
adc
mov
dec
adc
lds
jmp
xchg
jp
std
mov
push
xchg
xlat
xlat
xchg
test
adc
and
ss
out
cmp
fmull
cltd
in
jle
xchg
and
loop
jns
out
lret
or
xchg
pop
lods
or
rcll
cmpsb
aad
in
lahf
sub
imul
cmpsb
ret
jb
lods
inc
push
pop
mov
in
lret
lods
popa
fxch
fistpl
xor
ss
pop
aam
ja
lret
int
jle
sub
mov
lret
mov
test
push
mov
inc
xlat
sti
cmpsl
inc
movsb
or
ret
ss
adc
mov
add
das
lcall
jp
sbb
push
notl
outsl
in
jb
xchg
xlat
imul
sbb
aaa
mov
repz
mov
inc
mov
add
or
test
sub
fs
popa
cmp
shrb
pop
and
repnz
mov
pop
sub
xchg
mov
dec
pop
xor
mov
push
sahf
mov
adc
cmp
and
inc
ds
imul
jae
push
jp
jne
xchg
mov
jae
sarl
xor
or
xchg
enter
push
inc
push
mov
xchg
add
int
and
jns
into
aaa
shrl
mov
xor
loope
into
mov
ljmp
mov
adc
scas
aas
aad
dec
mov
and
and
mov
jae
ljmp
xchg
ret
cmp
addl
cmp
fcmovnu
pop
in
dec
mov
int3
push
stos
jno
pop
sub
mov
mov
cmp
inc
pop
adc
push
mov
sahf
pop
push
lea
fnstcw
inc
inc
lcall
int3
adc
inc
and
fwait
je
fcoml
outsl
jns
inc
fwait
lds
je
cltd
les
pop
xor
negb
jb
mov
ret
add
cwtl
test
in
jns
es
stos
cmp
pop
xlat
ret
imul
xchg
bound
pop
and
fldt
stos
or
loopne
mov
mov
sub
pop
cld
rcrb
and
imul
jl
in
jo
xchg
inc
xor
pusha
addb
out
and
repnz
jns
pop
std
pop
mov
mov
jecxz
xchg
sub
in
mov
outsl
inc
mov
call
adc
addl
or
mov
pop
xlat
js
cld
jnp
mov
pusha
enter
add
in
xchg
fldt
cmpsl
inc
jne
and
mov
std
pop
std
fsubp
sbb
ljmp
mov
pop
xchg
ds
inc
push
sahf
addb
dec
mov
xor
pop
jge
push
dec
jg
mov
pushf
inc
cld
pinsrw
push
sub
xor
mov
jp
xchg
ds
adc
adc
add
out
std
cmpsb
bound
shlb
fdivl
loopne
push
outsb
push
movb
dec
mov
ljmp
pop
dec
mov
inc
add
ret
dec
movsb
repz
std
fsubrl
js
inc
scas
xor
div
and
sbb
std
xchg
xor
push
add
insl
sbb
hlt
mov
mov
mov
aaa
shl
cmp
insb
push
push
roll
rcll
jmp
cmpsl
in
xchg
data16
lods
aas
cmpsb
push
pop
jae
or
out
data16
xchg
cmpsl
xchg
cmpsb
and
cmp
das
xor
push
clc
lock
adc
lods
in
adc
and
es
std
mov
ror
call
jbe
cmp
cmp
sti
pop
dec
imul
mov
inc
in
sbb
mov
lock
mov
mov
add
xor
xchg
or
pop
jg
sbb
jl
mov
cmpsl
sbb
in
arpl
mov
push
inc
jbe
lods
jne
jecxz
cmp
sbb
repz
into
sub
sub
sbb
int3
jl
pusha
dec
push
jnp
push
loopne
sub
mov
dec
mov
mov
insb
rcll
sbb
clc
popf
out
push
sub
pop
stc
and
xor
fisttps
or
fstp
mov
icebp
inc
xchg
popa
scas
out
mov
lret
fmuls
pop
pushf
cmp
les
mov
icebp
fstp
lods
xchg
mov
dec
lds
stos
movsb
mov
cmp
and
repz
pop
inc
push
pop
mov
sub
mov
repz
movsl
adc
pop
jbe
push
les
cwtl
jmp
push
fmulp
les
mov
hlt
jno
mov
std
adc
cmc
cld
outsl
fisttps
mov
lods
aam
sub
insl
mov
aam
jo
adc
notl
in
cmp
xorl
pop
or
cltd
call
xorb
rclb
mov
push
mov
inc
jns
mov
loop
stos
fistps
xor
or
and
rorl
fdivrl
les
icebp
or
xlat
sbb
or
mov
jl
sbb
xchg
rolb
sub
push
aad
inc
stos
push
jg
add
xchg
dec
lods
fwait
and
dec
add
lret
mov
test
inc
jae
outsb
ffree
lods
cmpb
je
pop
mov
cltd
xor
out
jb
xchg
pop
xor
jo
stos
cmp
gs
push
sub
scas
das
test
mov
loopne
rorb
and
jl
xor
push
inc
sti
cmp
inc
add
adc
insl
jno
jb
call
jne
or
adc
fimuls
aaa
mov
lock
dec
sub
adc
xor
adc
ss
mov
push
addr16
push
xchg
cwtl
mov
shlb
dec
popa
push
pop
test
mov
pop
xor
mov
xor
out
ja
jg
out
and
mov
mov
shll
xchg
push
dec
mov
outsb
xor
mov
adc
lcall
imul
xor
and
jle
add
in
or
ss
adcb
xchg
inc
gs
dec
jo
rolb
dec
pop
pop
fsubl
pop
dec
jecxz
xchg
fistl
inc
sub
sub
icebp
es
cmp
inc
and
shll
out
jb
mov
outsl
daa
push
lcall
insb
clc
or
les
inc
fwait
mov
rorb
in
jo
xchg
rolb
add
add
es
out
and
pop
cmp
movl
pop
rcr
jns
dec
cltd
adc
push
shll
pop
notl
andl
cmp
mov
popf
icebp
xchg
sub
lea
inc
insb
xchg
xor
cs
jmp
in
mov
test
cmp
jp
subl
cmpsl
jmp
xchg
mov
in
lea
les
mov
mov
lea
pop
sbb
mov
std
mov
pop
mov
push
or
fdivl
movsb
pop
mul
std
mov
adc
jne
xchg
mov
je
mov
mov
xor
ret
shrl
mov
mov
inc
jecxz
push
sbb
and
or
or
pop
mov
dec
push
and
jp
negl
sarb
sbb
add
pop
sti
shl
jno
test
sub
cmp
jno
mov
out
xchg
les
cmp
cli
jns
jg
jne
outsl
hlt
and
xor
xor
inc
ret
fisttps
add
jmp
test
push
cmp
mov
pushf
pusha
lea
ja
push
not
inc
inc
inc
neg
rcl
not
or
xchg
cwtl
shl
mov
or
cmc
mov
call
mov
movsbw
lea
jmp
jmp
les
inc
fnstsw
mov
pop
cs
jmp
xchg
in
stos
ror
rcrb
dec
loop
in
pop
mov
cli
lcall
sub
lcall
subb
and
jns
adcl
or
insb
add
stos
or
jp
idivl
xchg
push
mov
addr16
cmpl
pop
fcoms
cli
adc
xor
andl
test
into
insl
pop
stos
inc
daa
sti
fwait
jnp
mov
ja
idivb
xchg
adc
fidivrs
fidivrl
jae
mov
xchg
aas
pop
lahf
cwtl
xor
imul
outsl
jmp
loope
out
test
pusha
add
pushf
mov
movb
push
lea
jmp
repz
push
pushf
jmp
lea
je
cmp
cmp
pusha
cmc
add
mov
pushl
movw
lea
jmp
lea
ja
jmp
cmc
push
cmp
push
movb
lea
jbe
not
bswap
mov
setle
bt
and
push
add
xadd
ror
and
mov
shld
movsbw
setle
add
shld
xor
push
bsf
movl
adc
btr
clc
cmc
mov
stc
cmp
pushl
pushf
pushl
jmp
daa
push
repnz
aam
adc
add
pop
xchg
int3
lds
je
jnp
int3
xchg
fnstsw
mov
std
cmc
mov
xchg
sti
xchg
insl
add
dec
mov
dec
in
stos
mov
cmp
inc
jp,pn
fstps
and
dec
xchg
cmp
cmpsl
dec
les
out
mov
mov
mov
stos
mov
pop
and
leave
outsb
in
sbb
sub
addb
icebp
push
cmc
ss
jge
lcall
mov
fdivrl
lods
lea
sub
les
cltd
cmp
pop
dec
in
cmpsb
inc
in
and
mov
ds
imul
cmp
mov
je
lret
jno
jns
dec
xor
dec
jmp
in
and
sbb
inc
movntq
mov
mov
sbb
in
sahf
shl
lahf
fisubl
xor
mov
mov
or
test
addr16
jnp
andl
pusha
sti
pushf
inc
fnstcw
ret
mov
sub
clc
xchg
shl
lahf
lcall
push
pop
divl
popf
xchg
push
sub
xchg
cmp
push
mov
xor
push
adc
xor
mov
sub
arpl
in
or
sbb
mov
mov
jle
jle
jns
stos
inc
mov
lds
inc
mov
xchg
dec
icebp
insl
in
gs
aaa
jo
repz
inc
andl
mov
leave
dec
leave
sbbl
adc
mov
mov
rcrb
add
lret
xchg
xor
pusha
jmp
cmp
xchg
ss
outsb
scas
push
push
dec
enter
xor
cmp
pop
pop
jmp
dec
xor
fiadds
mov
dec
jmp
cmp
adc
rcl
xor
push
js
mov
fcomps
xchg
cmp
in
sti
mov
sarb
ljmp
fcomps
push
rorb
cmp
inc
mov
xor
dec
call
jecxz
sldt
pushf
add
pushf
pusha
pushf
lea
jmp
popf
cpuid
nop
call
jmp
cmp
mov
push
lea
jb
bt
pushf
pusha
bt
cmp
pushf
push
lea
jae
jmp
bswap
call
pop
call
lea
push
movw
call
lea
je
pushf
or
pushf
lea
je
neg
lahf
xor
shl
shrd
ror
mov
aam
cmp
sub
and
mov
movzbw
shr
cmp
shl
mov
cmp
push
sub
jne
cmp
or
pusha
lea
je
rol
add
adc
rol
pusha
shl
sub
pushl
shr
movsbw
mov
and
cmc
sar
add
or
add
not
dec
cmc
mov
call
movb
mov
pushl
movw
mov
pushl
ret
cwtl
arpl
les
mov
shll
mov
hlt
jns
fildll
cmp
adc
pop
ret
xor
inc
call
xlat
jno
aam
push
cmp
dec
in
nop
adc
adc
aas
mov
and
lea
jbe
dec
sub
movzbw
mov
bt
mov
rcl
add
bsf
stc
shr
shl
rcr
stc
mov
movzbl
add
jmp
push
movzbw
mov
pushf
lahf
movl
lahf
lahf
cwtl
lea
pusha
movb
movl
movb
jmp
call
bt
cmp
push
pushf
lea
jb
test
cmp
call
mov
push
pusha
mov
mov
pushf
pushf
push
pushl
ret
cmc
add
add
clc
stc
or
call
test
xor
std
cltd
adc
ja
ror
dec
ja
xchg
push
je
dec
in
dec
call
add
cli
dec
xor
and
push
push
cmc
aad
imul
pop
frstor
mov
lock
dec
and
ret
sbb
loopne
mov
test
in
fstpt
mov
add
xchg
scas
inc
or
add
sub
pop
add
add
pop
xor
jmp
pop
rorb
rorb
sbb
xchg
or
mov
stos
stc
rol
pop
fistps
jmp
xchg
lds
inc
out
and
rcrl
cmp
mov
sub
pop
test
movzbl
shrl
xchg
mov
push
push
mov
adc
mov
cmc
in
imul
hlt
cli
int3
jnp
fimuls
xchg
or
mulb
xor
xchg
add
adc
push
cmp
add
fcoml
xor
xchg
nop
lea
pushf
movsbw
mov
mov
call
pusha
movl
call
pushl
popl
push
mov
pusha
bswap
pop
seto
movl
not
lea
jge
cwtl
mov
lea
js
pushf
pushl
pusha
movl
mov
jmp
jmp
ljmp
mov
sbb
int3
xchg
xor
shl
cltd
xor
xor
jnp
xor
xchg
sbbb
pop
add
sti
xor
test
jmp
into
leave
data16
imul
notb
mov
jge
xor
add
jp
rorl
jge
in
lock
in
subl
into
inc
dec
or
and
cs
arpl
shrl
jle
adc
jge
pop
xor
mov
mov
mov
inc
loopne
add
jl
jl
js
jg
sub
out
jmp
pushl
popl
pusha
pushf
pushl
ret
jmp
pop
pushf
call
pop
loop
movl
out
sub
pop
clc
xchg
fnstcw
ret
shll
add
cmp
push
cmp
xlat
mov
mov
ficompl
je
in
lods
sbb
out
mov
popl
mov
xchg
lods
push
sub
xchg
and
out
dec
ret
jge
dec
ljmp
push
out
nop
jp
sbb
jb
jne
cmp
call
pusha
pushl
push
movl
pushf
jmp
pushf
movl
pushf
pusha
pusha
movl
pushf
pushf
lea
jmp
test
cmc
test
cmp
pusha
push
pusha
lea
ja
clc
pusha
imul
stc
test
cmc
add
push
pushl
lea
jmp
lea
jae
jmp
es
push
enter
jg
mov
sub
jg
mov
pop
xchg
cmp
js
insl
pop
mov
mov
cmc
loope
push
fidivrs
clc
es
cld
repnz
inc
jg
out
ret
mov
mov
insb
sub
fidivrl
scas
or
popf
xchg
fsubrs
ret
data16
pushf
jo
scas
inc
ret
imul
das
shld
dec
sahf
dec
add
mov
incl
icebp
jb
int
inc
mov
insb
xchg
leave
andl
mov
outsl
sub
out
cmp
shl
nop
sub
xor
xchg
repz
shlb
movsb
inc
jecxz
pop
lods
xor
lahf
js
xchg
mov
gs
or
mov
xchg
mov
adc
js
jmp
bsf
btr
bsr
mov
mov
jmp
lea
ja
push
jmp
lret
addb
add
and
adc
add
add
add
adc
push
sbb
adc
add
pop
add
in
pop
add
add
add
int3
fsubs
xchg
ss
insl
aas
adc
mov
lds
sbb
jnp
lea
in
and
imul
aas
fistpll
mov
sbb
loope
push
lock
cld
inc
push
push
pop
nop
ss
popf
jge
mov
in
imul
call
je
rol
andb
rorb
subb
xchg
sub
lock
mov
imul
fimull
lods
sub
loopne
sbb
mov
pusha
movsb
jae
adc
scas
push
fsts
sarl
aaa
cmc
leave
sub
mov
pop
add
push
mov
leave
add
add
jnp
xor
repz
imul
addr16
or
adc
dec
xchg
popa
loop
lds
pusha
push
xor
filds
xchg
jno
lret
mov
mov
xchg
adc
test
imul
setle
pusha
inc
not
not
call
cmp
stc
add
push
movb
push
lea
jmp
pushf
lea
je
cmp
cmc
cmp
push
lea
jne
pusha
inc
push
pusha
push
mov
inc
push
push
lea
jmp
ror
cmc
pushl
clc
jmp
jg
std
lret
andl
fistpll
cmpsl
inc
in
sub
imul
push
xlat
pop
inc
je
test
add
xchg
push
sub
dec
jmp
shlb
dec
pop
cmpsl
aad
push
jmp
popf
inc
mov
mov
test
stos
xor
aaa
mov
movsb
sarb
mov
lea
pusha
lea
jb
push
cmpb
mov
pushf
lea
jne
bsf
bt
mov
mov
jmp
add
push
movb
pushf
lea
jmp
pusha
mov
push
not
bswap
mov
pushl
pushl
pusha
pushl
ret
pushf
shr
call
pushl
cmc
cmp
pushf
mov
lea
jae
pusha
cmp
pushf
push
jmp
pop
in
int3
andl
loope
daa
ret
pusha
jmp
mov
rcll
mov
loope
sbbb
dec
inc
mov
out
and
xlat
insb
pop
rorb
inc
aaa
cmc
and
jae
call
pop
aad
sar
or
lea
cltd
in
jmp
or
jmp
movl
push
pushf
lea
jmp
pusha
lea
jne
call
or
je
andl
daa
pop
add
scas
lret
int
pop
cld
orl
ret
movsb
ds
ja
mov
notb
inc
pop
inc
cmp
into
inc
jne
sub
push
inc
fnstsw
lcall
pusha
loope
rorl
outsl
in
imul
int
push
popf
sbb
shlb
stos
sub
out
mov
jb
int
and
push
pushf
push
repz
push
mov
out
sbbb
js
mov
out
xchg
mov
ficoms
imul
movsb
add
cwtl
mov
mov
dec
js
inc
push
adc
repnz
adc
aas
idivb
addr16
cs
pop
rcl
out
ljmp
jne
sub
mov
int
mov
xchg
jbe
push
mov
mov
push
sti
lahf
and
aad
in
outsb
xchg
or
xchg
popf
dec
outsb
or
ror
jb
js
jle
ds
and
push
ret
fs
loope
aad
aad
iret
push
into
lea
jg
pushf
pushl
mov
movzbl
pop
push
push
push
pushl
ret
enter
andl
adc
mov
scas
sti
jge
pop
bound
shlb
push
testl
sbb
adc
lahf
or
sbb
imul
cli
jbe
out
fcmovb
push
out
mov
popf
insl
inc
jo
lods
inc
pop
lea
mov
clc
xchg
dec
inc
jmp
inc
jge
sbb
fcmovnb
push
dec
add
mov
lods
jecxz
mov
mov
and
clc
popf
jge
add
and
jmp
outsl
ds
shr
mov
insb
sbb
imul
fcom
insl
pop
inc
add
nop
jg
push
lfs
pusha
xor
int
sti
xor
jbe
lcall
push
dec
lds
dec
loop
dec
addr16
lret
ret
scas
out
shll
mov
sbb
outsl
xorps
in
push
cmp
out
insl
push
out
movb
mov
outsl
add
cmp
test
frstor
adc
loop
not
int
leave
mov
test
idivl
addr16
xchg
js
adc
mov
scas
movsl
aas
jecxz
hlt
aam
dec
sbb
test
hlt
insb
andb
inc
fstl
data16
pop
xlat
push
fstpl
popa
das
pop
test
neg
push
call
sub
iret
andl
stos
dec
out
sub
popa
add
mov
cmc
std
ja
cmpb
mov
pop
repnz
lds
sub
repnz
and
fdivrs
lret
adc
cmc
add
dec
ds
aaa
mov
add
adc
cmc
cmp
pusha
pusha
pushf
lea
ja
shl
test
neg
add
rcl
mov
jns
clc
test
cmp
push
pusha
lea
jb
test
bt
bt
cmp
pusha
lea
ja
call
pusha
stc
add
movw
call
movl
pusha
mov
lea
jmp
push
push
sub
andl
jb
cmpsb
inc
fidivrs
mov
movsl
fwait
push
cli
jnp
pop
add
cmp
nop
xor
nop
xor
outsl
or
push
fadds
mov
mov
lds
outsb
mov
sub
sub
test
insb
mov
in
sub
mov
pusha
xor
xchg
sub
fdivl
add
sarb
sub
cmp
adc
mov
adc
mov
sub
jno
push
jmp
std
jbe
je
pop
adcb
test
movsb
sub
test
fistl
mov
mov
bnd
adc
pop
xchg
cmp
xchg
pop
das
iret
lea
loopne
cmp
mov
and
pop
sti
in
repnz
sbb
cmpsb
js
notl
xor
dec
loop
mov
fbstp
out
adc
scas
adcb
leave
xor
cli
cltd
xor
pop
jb
sbb
xor
ljmp
aas
pop
repz
cmc
xchg
push
dec
rcrl
cmp
shll
sub
xchg
sbb
ret
scas
cli
fsqrt
lcall
addr16
xchg
inc
cs
sub
xchg
xor
jbe
xchg
icebp
lods
dec
dec
out
insb
inc
lcall
in
test
add
pop
or
add
xor
pop
repnz
out
jmp
aaa
lods
in
xchg
inc
fstpt
or
push
mov
movsb
cmp
and
xchg
arpl
sub
push
mov
xor
sahf
out
sahf
pop
out
xchg
adc
sbb
das
repnz
lahf
xlat
jns
ja
mov
js
sbb
xchg
dec
sub
mov
lock
mov
cmp
outsl
lods
outsb
mov
mov
lcall
lret
rep
mov
popf
sub
xchg
xchg
inc
inc
ds
push
ja
stos
lret
cli
into
ja
repnz
dec
loope
lea
aad
shrb
xchg
adc
mov
xor
loop
mov
mov
gs
in
push
mov
xchg
lea
test
xchg
or
fistpll
mov
inc
cmpsb
lahf
mov
push
push
pop
aad
fisubrs
stos
aad
out
aad
ret
push
test
gs
out
pop
sbb
data16
out
jno
xlat
insl
leave
cmp
scas
jecxz
pop
or
mov
dec
xchg
shlb
adc
dec
xchg
cmpsw
pop
jb
fistpll
add
rcll
leave
dec
es
and
ficoms
rcrl
jne
pop
insl
shll
mov
insl
sub
mov
shlb
lods
cmp
pusha
insl
inc
xchg
jge
sarl
jo
push
mov
xchg
insb
arpl
imul
lods
sahf
dec
mov
adc
in
pusha
addr16
pop
outsb
rcrb
int
imul
aad
xor
add
insl
pop
push
je
dec
outsl
int
xchg
lods
adc
push
mov
sub
push
push
lods
push
fisubl
inc
push
lods
repnz
frstor
popf
sub
xor
dec
aam
stc
jge
cmp
shrl
xchg
jle
pop
pop
rclb
addr16
iret
je
lock
mov
movsb
mov
rorl
fildll
fnstcw
std
sbb
push
test
adc
in
mov
iret
xchg
lahf
lods
jb
pxor
lods
pop
sub
adc
rcr
iret
add
jge
push
jge
das
cltd
imul
aas
push
push
outsl
jle
int
popf
push
in
gs
add
scas
roll
repz
or
iretw
cmpsl
in
int
jl
jge
pop
mov
jo
jg
adc
out
int3
int
and
fcomip
mov
xchg
push
das
pusha
icebp
lahf
test
xor
pusha
adc
push
mov
mov
pop
mov
push
les
pusha
mov
add
adcb
mov
bound
aad
into
in
std
data16
scas
cmpsb
popf
movl
cmc
jmp
outsl
inc
data16
push
nop
adc
xor
push
call
loopne
call
pop
jge
jno
jae
xchg
sahf
aad
hlt
gs
jno
outsb
push
xchg
call
rcrb
jae
xchg
insl
cld
push
or
xchg
cmp
mov
outsb
mov
adc
jno
pop
ds
jae
xchg
lahf
fnstsw
outsb
xor
data16
lea
xchg
in
in
xor
cmp
mov
into
jno
xchg
dec
fisttpll
lret
subl
inc
dec
mov
test
xchg
jne
pop
movsl
decb
rcll
in
sbb
outsb
cmp
pop
jmp
pop
cmp
inc
dec
dec
int
fwait
mov
dec
push
dec
adc
jae
scas
rorl
dec
fidivrs
xchg
pop
pop
dec
scas
fwait
mov
mov
mov
xchg
out
lcall
out
xchg
out
sub
dec
popf
js
shrb
ljmp
sahf
fildll
mov
xorl
and
in
mov
sbb
insl
pop
outsl
xchg
imul
insl
jb
int
sub
pop
push
bound
jne
xchg
or
dec
adc
std
dec
inc
adc
xchg
popf
fdivrp
lret
insl
cmc
pop
aas
xor
jno
jnp
dec
loope
mov
add
xchg
lods
call
lds
adc
stos
pop
fidivs
outsb
cwtl
jne
pop
mov
xchg
hlt
outsb
outsb
xchg
jno
aad
pop
push
jg
xorb
push
popf
jns
into
scas
setno
out
dec
xor
jb
and
lahf
fucomip
popf
push
outsb
nop
dec
aas
xor
jns
adc
sbb
outsl
add
mov
mov
fistpll
and
aad
scas
sarl
sti
jo
jno
mov
jge
dec
nop
popf
out
insl
mov
adc
insl
negb
sub
lds
xor
scas
inc
bound
int
pop
rorb
jbe
lods
mov
jno
dec
dec
int
pusha
insl
lods
sub
cmpsb
or
pop
loopne
into
sti
pusha
push
sbb
and
add
xchg
lods
mov
popf
jge
sbb
pop
sub
insl
out
pop
push
int
imul
push
in
jae
lock
fstpt
pop
loopne
jne
sahf
xor
addb
xchg
lock
jmp
mov
les
scas
mov
inc
aas
mov
push
pusha
hlt
push
insl
fnstsw
arpl
xchg
sbb
adc
jle
pop
push
rorb
xchg
cltd
scas
in
scas
dec
mov
test
xchg
pop
jo
clc
leave
adc
xchg
ds
push
mov
insl
repz
jo
push
sub
insl
push
jge
pushf
lea
fsubrs
call
cmp
push
add
outsl
leave
scas
lahf
aam
insl
rorl
test
repnz
lahf
mov
pop
adc
scas
mov
jge
xlat
lea
push
lods
lahf
out
xchg
ret
dec
test
ljmp
lea
lret
inc
adc
push
dec
scas
adc
aam
cwtl
push
std
xchg
sbb
dec
add
aaa
cmc
sub
xor
jbe
in
icebp
jge
idivb
mov
mov
push
cmpsb
or
mov
pop
mov
add
mov
or
dec
xor
std
rcr
int
mov
jl
sarl
add
icebp
jge
cmc
outsb
into
hlt
shrb
pop
jno
mov
push
in
lcall
outsb
in
mov
mov
xor
adc
cs
pop
hlt
lea
mov
lea
jno
jp
jo
repz
fidivrs
sbb
lea
pop
pop
mov
subl
scas
adc
jl
jle
push
daa
sbb
push
mov
add
aaa
lahf
ret
pop
pop
shrl
mov
sahf
shll
jno
outsb
jge
or
push
pop
and
pshufw
pop
cmp
xchg
jno
aad
pop
cs
outsl
push
xchg
sbb
mov
fldt
in
mov
push
jno
out
insb
int
mov
pop
adc
mov
int
adc
and
insl
shrd
aas
icebp
cmpsl
insl
push
imul
xchg
mov
shl
test
jne
lock
fcomps
cmpsl
jge
out
insb
pop
mov
adc
mov
or
adc
das
jns
aad
xchg
xor
jns
pusha
lea
call
das
in
push
sub
jo
xchg
pop
jo
fadds
fcoms
out
mov
xchg
paddq
loopne
sbb
jg
gs
mov
push
adc
xchg
inc
test
pop
jo
loopne
adc
lods
push
xchg
xchg
add
push
insl
sub
push
mov
mov
outsb
xchg
pop
pusha
jl
mov
scas
xchg
lea
shll
insl
mov
push
jne
rcll
sub
pop
xor
fs
outsl
loopne
sub
cmp
cmp
pop
inc
shr
mov
out
mov
sahf
add
pop
pop
in
call
in
and
sbbb
lea
xchg
jp
ljmp
mov
sub
test
mov
sbbb
popf
scas
loopne
mov
push
out
xchg
dec
push
ds
mov
pop
jo
sbb
sub
jl
int3
stc
sbb
dec
pop
sahf
repz
cwtl
add
fidivs
xchg
push
xchg
xchg
push
out
sbb
push
out
loopne
sub
in
xchg
popf
cmp
xlat
popf
xor
js
mov
mov
push
push
lahf
call
sbb
mov
mov
jne
jg
cmc
arpl
pusha
addr16
xor
stos
jge
and
xchg
sbb
push
push
out
sub
loop
popf
push
imul
imul
and
jp
jno
sbb
xchg
pop
jle
pop
insl
mov
lods
in
repnz
loopne
fisubrl
push
std
iret
mov
pop
mov
jle
scas
mov
xchg
mov
dec
adc
push
insl
mov
rorl
jle
scas
push
fisubl
fcomp
popf
loope,pn
int
into
mov
daa
incb
outsl
lods
mov
icebp
pop
mov
push
outsb
xor
cs
shr
fiaddl
rcrl
push
hlt
das
out
shr
aas
xor
call
jmp
xor
sarl
in
dec
mov
jno
xchg
xor
mov
lds
jg
jg
mov
sub
mov
add
in
jno
mov
jle
mov
sbb
mov
lock
jno
leave
jbe
dec
xchg
ficomps
push
cmpsb
shrb
push
mov
pop
push
lock
xchg
xor
pop
fnsave
xchg
repnz
fucom
adcl
adc
mov
lods
jno
setnp
or
pop
nop
lods
sub
pop
je
pop
js
push
sub
shlb
loop
pop
pop
pop
adc
repnz
insb
popf
leave
fwait
rcl
or
cwtl
jge
nop
lds
cs
sub
pop
js
popf
mov
jge
roll
cmp
push
xchg
aad
icebp
pop
cli
rolb
in
test
jle
jge
mov
jae
dec
adc
out
jecxz
repnz
cs
arpl
sbb
mov
outsb
bound
fiadds
xor
sbb
xchg
subl
xchg
pushf
fimuls
hlt
adc
xor
fisubrs
pop
insl
popf
sbbl
mov
pop
shlb
mov
jle
adc
addb
jo
enter
popf
dec
stos
mov
mov
xchg
icebp
xchg
jbe
push
push
sbb
push
xor
nop
xor
inc
inc
mov
fcoml
sbb
lahf
aad
iret
pop
lcall
scas
jb
iret
jae
aas
sub
sbb
sbb
repz
adc
icebp
je
int
sarb
lods
nop
pop
push
das
sub
mov
cmp
xchg
push
sbb
push
adc
int
in
jg
jno
dec
lea
dec
pusha
push
xchg
dec
dec
cli
mov
fistl
lods
lea
call
sahf
xchg
test
lods
popf
push
push
lods
lea
fists
push
pop
jo
push
lea
imul
xchg
je
outsl
cmpsl
dec
cmp
aas
aaa
push
popf
dec
or
mov
call
sub
jge
dec
mov
movsb
mov
sub
fiaddl
je
sbb
xchg
orl
xor
rolb
mov
mov
mov
dec
fidivrl
bnd
jb
lock
jle
in
mov
pop
jno
xchg
push
in
rcrb
into
in
stos
mov
mov
fldl
sbb
mov
mov
push
mov
xchg
and
inc
xchg
mov
cs
jno
jo
lock
sub
repnz
mov
mov
xchg
jno
mov
ds
xorb
mov
mov
aad
bound
xchg
dec
aad
lahf
mov
add
sahf
out
data16
pop
nop
or
sub
inc
dec
test
pusha
mov
movsb
sbb
cmp
mov
in
mov
lods
scas
add
insl
shlb
mov
cmp
inc
outsl
lea
paddq
xchg
fs
into
adc
xor
jb
pop
push
jnp
out
lea
lea
mov
out
pop
jge
mov
imul
test
jae
xchg
xchg
push
push
mov
lods
shll
repz
in
xor
xlat
je
lods
push
xchg
xor
sbb
mov
mov
aas
pop
fildl
mov
sbb
outsl
insl
int
das
cmpsl
out
jle
mov
leave
loope
push
stos
dec
inc
outsb
testl
gs
loope
cltd
xor
shll
xor
mov
pop
lods
bound
xor
pop
xor
int3
jp
mov
flds
jne
sahf
rcll
aas
or
dec
jo
lds
push
or
out
lea
jae
test
insl
or
push
or
dec
bound
push
out
pop
dec
fwait
push
jp
loope
mov
arpl
lahf
pop
mov
cmpsb
in
mov
adc
mov
pushf
dec
sbb
push
push
or
stos
bound
mov
outsl
popf
pop
gs
xchg
jae
pop
scas
xchg
rclb
out
sbbb
mov
outsb
mov
arpl
outsb
dec
inc
flds
or
std
push
push
mov
decb
push
adc
mov
adc
lods
push
outsb
mov
dec
in
fwait
mov
lcall
xor
mov
rclb
mov
jns
pusha
stc
cmp
test
add
scas
icebp
imul
pop
inc
jne
mov
xchg
loop
loopne
pop
mov
cmpsl
or
int
arpl
aas
dec
adc
popf
inc
pop
pop
lahf
or
pop
sbb
lea
mov
dec
ficomps
jno
inc
insl
adc
mov
wbinvd
jge
bound
jmp
loopne
adc
das
pop
sbb
mov
pop
inc
ljmp
mov
inc
outsl
mov
mov
jle
jle
insl
mov
jo
popf
mov
jno
mov
jge
popf
mov
shlb
std
adc
das
sbb
adc
aad
jo
rclb
mov
fwait
jo
std
jp
mov
andb
adcb
sub
xor
repz
mov
jle
push
aad
lahf
pop
aas
loopne
insl
pop
push
std
xchg
mov
push
outsb
lahf
xchg
das
aad
pop
mov
jae
xchg
insl
popa
pop
jae
in
aad
pop
outsl
jae
xchg
out
outsb
pusha
ja
adc
jno
pop
xor
lea
xchg
in
fstpl
aad
pop
fisubrs
jae
xchg
iret
fstpl
lcall
out
add
sbb
mov
push
imul
push
mov
arpl
xchg
push
jmp
outsb
jns
pop
nop
dec
dec
lock
dec
cld
lods
inc
pop
jge
fmul
sahf
jp
scas
outsl
insl
shr
dec
fldcw
jo
lea
addb
mov
shr
pop
test
lahf
mov
call
mov
add
jne
bound
jge
sbbl
cltd
mov
insl
das
ds
imul
decb
or
and
pop
mov
sbb
adc
cmp
pop
es
xchg
sub
xchg
and
lret
lret
lods
sub
cmpsl
xor
outsb
mov
mov
pushf
out
push
cltd
fstl
lods
adc
jno
cltd
stos
xchg
lea
fstl
xor
adc
lods
cli
mov
mov
lea
out
push
rclb
xchg
adc
pusha
mov
in
pop
iret
aad
inc
popa
out
and
outsl
ds
pusha
mov
xchg
or
rorl
jno
test
loopne
push
out
sub
jbe
xchg
push
inc
icebp
lahf
jle
rcll
aas
mov
pop
out
xchg
into
movsb
jno
dec
xor
pop
pushf
add
rcrl
repnz
dec
jno
push
xlat
mov
fstpl
sub
xchg
scas
aad
rcll
xor
iret
pop
sub
jno
xchg
out
aad
shlb
adc
fisttpll
outsb
push
xchg
nop
aad
pop
inc
jge
cmp
jae
cltd
pusha
sbb
mov
jno
inc
sub
jno
xchg
mov
mov
xchg
shl
xchg
mov
pop
popf
lea
inc
aad
pop
jge,pt
outsl
aas
scas
xchg
mov
sahf
xchg
lahf
fstp
stos
pushf
dec
pusha
loope
lds
mov
inc
bound
aas
mov
loopne
pusha
xchg
jge
mov
push
add
int
imul
lods
fdivp
lahf
xchg
push
jg
push
scas
aaa
mov
xchg
rclb
push
subb
push
pop
int3
push
pop
nop
mov
push
rclb
mov
lods
aam
adc
mov
jae
adc
aaa
mov
mov
jge
loopne
push
pusha
aas
imul
push
mov
imul
push
int
imul
push
lods
clc
imul
push
imul
push
lahf
xchg
imul
adc
jo
shl
call
insl
jle
sbb
insb
mov
pop
int3
mov
ljmp
rcrl
pop
jo
mov
ljmp
jge
mov
out
mov
sar
or
fstpt
sub
andl
aad
pop
test
aas
push
aas
cmp
add
nop
mov
outsl
loopne
add
fsubrl
sbb
inc
aas
mov
dec
mov
push
pop
pusha
mov
xor
aad
int
data16
sarl
sbb
bound
mov
mov
sub
mov
int3
test
xor
cmp
lock
das
std
pusha
aas
add
std
cmpb
sbb
outsl
jmp
fistpll
stos
mov
add
sub
jae
enter
cs
nop
jmp
or
push
mov
mov
outsl
pop
dec
add
nop
mov
sahf
xchg
jno
aad
pop
ds
daa
outsb
push
jno
outsb
push
xchg
nop
xchg
lock
scas
adc
add
xor
mov
outsb
ficompl
int
icebp
xchg
sbb
xchg
cs
int
inc
out
jno
jb
out
mov
adc
mov
jb
mov
jb
pop
scas
pop
sbb
scas
jae
xchg
dec
xlat
and
lea
icebp
push
mov
mov
mov
outsb
xchg
lods
or
mov
jno
add
lea
jecxz
and
add
or
mov
sar
mov
fstpt
fidivrl
pusha
and
lods
push
in
lods
outsb
jae
jmp
out
mov
insl
lahf
mov
ficompl
scas
and
outsl
repnz
xor
popf
mov
sarl
jge
arpl
in
fisttpll
pop
in
pushf
xor
rcrb
mov
push
popf
jge
jae
jge
xchg
jge
scas
and
fstpl
adc
push
mov
push
rcl
into
dec
test
scas
mov
pop
inc
xchg
or
add
in
insb
lea
xchg
and
rcl
insb
fstpt
pop
jae
and
hlt
out
mov
je
enter
jae
gs
adc
bound
repz
cmpsl
pusha
popl
and
jo
mov
sub
xor
call
insl
jle
lea
pop
ret
adc
xorb
and
sbb
fiadds
jno
roll
mov
mov
sub
or
and
xchg
xor
into
mov
filds
shlb
mov
cmp
pop
in
push
dec
jnp
aad
ret
out
mov
cmp
dec
out
jle
jbe
dec
out
hlt
stc
sbb
in
fisttps
cmp
std
mov
mov
xchg
out
mov
aas
jle
cli
insl
fnsave
adc
leave
insl
pop
int3
push
cmp
push
cmp
adc
shrl
scas
mov
xlat
dec
cs
dec
out
scas
jp
ds
mov
or
insl
jg
in
and
insb
insl
shlb
dec
cmp
incl
adc
push
mov
jg
shl
out
pop
ficompl
insl
cmp
in
jae
in
aaa
arpl
push
lea
fdiv
pop
sub
mov
adc
stc
xor
lcall
imul
add
outsb
popf
and
outsb
xchg
inc
outsb
movsb
popa
push
xchg
xorl
and
mov
sahf
movsb
in
and
incl
sahf
bound
jge
cmpb
sbb
sahf
ret
xchg
loop
pusha
pop
sbb
sahf
and
jge
outsl
test
shll
mov
push
int
dec
pop
push
daa
sbb
pop
out
push
dec
sahf
xchg
ret
call
repnz
setno
into
xchg
aas
lods
pop
jo
pop
je
das
enter
adc
nop
jno
outsb
and
or
sub
psubsw
fbstp
cwtl
jl
xor
cmpl
or
ds
aas
fimuls
repz
jo
scas
repz
insl
xor
xor
or
and
outsl
jno
lahf
iret
ja
jg
cs
sbb
aas
jno
loope
pop
pop
popa
int
cmpsl
jae,pn
pop
iret
pop
dec
pop
mov
loop
std
das
data16
ficoms
jno
pop
insl
or
popf
xchg
int
std
pop
sub
push
sbb
out
aad
push
pop
dec
jg
mov
outsb
jo
mov
insl
dec
adc
xchg
jle
ficomps
pop
jae
xchg
pop
outsb
push
xchg
adc
pop
lock
adc
lods
xchg
in
aad
pop
jae,pn
xchg
lahf
fstp
outsb
setae
nop
pop
rclb
jnp
sbb
outsb
int
std
aad
mov
xchg
jle
std
in
out
movsl
dec
data16
lods
and
les
pop
jbe
and
fstpl
outsb
push
xchg
mov
xor
sbb
push
jno
xchg
or
xchg
sahf
aad
pop
push
pop
jae
xchg
pop
outsb
pusha
xchg
nop
xchg
xchg
xchg
jg
cmp
mov
lea
ds
lea
jno
aas
test
mov
shll
lods
inc
call
mov
add
mov
xchg
and
mov
insl
pusha
in
dec
xchg
lea
dec
insl
lods
pusha
lods
fst
rclb
adc
insl
in
repnz
ds
push
sahf
movsl
jae
lea
in
aaa
push
aas
insl
adc
push
and
aad
adc
mov
aad
xchg
je
jge
xchg
fstpt
iret
add
out
mov
push
in
adc
lock
jge
push
arpl
pusha
in
divl
imul
icebp
jge
adc
jge
fstp
int
rclb
bound
mov
ds
sahf
movsl
imul
push
mov
aas
out
adc
std
pop
aas
pop
fldl
pop
jg
jns
push
scas
fsubrl
jp
xor
adc
shl
lods
scas
xchg
push
cmp
push
xchg
shlb
popa
scas
clc
pop
pop
sub
cltd
nop
lock
cmp
pop
jnp
shlb
jge
sub
outsl
jo
or
inc
out
jae
adc
repnz
rcr
cmpsb
push
or
outsl
insl
andl
sub
pop
adc
jno
inc
out
std
insl
int
and
adc
sbb
and
lds
outsl
es
pushf
lods
fidivrs
xor
mov
ds
pop
jle
xor
adc
jb
jo
pop
cltd
jae
mov
push
jb
and
mov
imul
adc
xchg
inc
loopne
fs
push
or
lock
in
nop
jmp
mov
jbe
lea
jp
mov
add
ds
js
mov
push
or
adc
push
jp
jns
lods
cmpsb
outsb
rolb
icebp
dec
fiadds
into
ljmp
jae
outsb
dec
dec
sbb
shrb
xlat
jle
andnps
or
lods
lahf
or
add
lock
insl
mov
lea
xchg
in
jle
out
in
pusha
mov
sbb
jo
imul
adcb
or
or
rcll
or
jno
ja
mov
pop
push
pushf
aad
outsb
aaa
mov
scas
in
mov
sbb
jnp
cwtl
inc
lods
push
mov
xchg
mov
mov
add
push
xor
pop
aas
loope
or
nop
insl
test
in
cmp
push
in
scas
sub
popa
icebp
int
jg
pop
push
pop
vhsubpd
pop
jbe
cs
jo
scas
mov
mov
jle
jle
pop
gs
cld
jns
popf
pop
pop
push
loope
cmp
lods
fcomip
in
lahf
sahf
add
sahf
lahf
ds
push
cmp
and
jnp
aad
loope
in
and
mov
lock
std
push
insl
mov
xchg
jno
aad
pop
sbb
dec
xchg
mov
mov
mov
into
mov
mov
sarl
push
inc
pop
jecxz
loop
adc
jnp
mov
into
enter
aas
dec
cmp
mov
sub
xchg
jne
loop
xor
test
scas
jecxz
xor
sarb
arpl
inc
popf
shl
mov
ss
xchg
push
pop
cmpsl
mov
xchg
adc
xchg
addb
int
pop
test
jp
fmull
pop
mov
rol
xlat
fisubrs
mov
sahf
pop
jno
jae
xchg
cmp
inc
pop
or
pushf
shlb
jno
out
xchg
out
dec
aas
iret
test
outsl
stos
mov
jno
jae
int
adc
mov
mov
outsl
jno
test
sbb
stc
mov
cwtl
insl
aas
sbb
inc
pop
push
adc
mov
scas
add
jb
out
mov
das
jno
mov
mov
jo
mov
jno
xchg
mov
sub
insl
jno
xorb
fnsave
outsl
std
stos
stos
bound
jle
ficomps
pop
mov
rclb
out
sbb
cmp
in
push
mov
jno,pt
pop
sahf
adc
adcb
out
push
iret
push
out
scas
js
sbb
aad
into
and
iret
pusha
adc
fldl
jge
insl
mov
pop
scas
jae
xchg
lahf
fucomp
outsb
aas
xchg
nop
aad
pop
xor
xchg
int
sbb
outsb
dec
xchg
lahf
aad
pop
aas
mov
and
jno
pop
sbb
out
fstpl
xchg
call
das
pop
mov
sub
mov
xchg
fstpl
aad
pop
add
lods
popf
push
sub
outsb
ds
jg
out
pop
push
shlb
lods
mov
outsb
into
xchg
ds
pop
fists
adcb
mov
roll
jno
movsl
push
mov
xor
xchg
cmp
out
xchg
pop
adc
out
adc
jno
jae
xchg
iret
outsb
das
xchg
adc
pop
and
test
sbb
xchg
out
aad
pop
outsl
mov
fstl
lods
xor
jae
xchg
jle
into
outsb
push
xchg
ds
pop
iret
pop
jae
xchg
mov
add
outsl
lea
pop
sub
into
outsb
pop
mov
je
mov
fbstp
xchg
pusha
fnsave
mov
jno
pop
or
mov
xchg
jg
scas
pop
fisttps
jae
xchg
mov
add
fldl
std
adc
jge
inc
insl
aas
sub
push
xchg
in
jmp
insl
pop
or
lea
sub
lods
and
insl
pop
call
gs
mov
push
shrl
insl
aas
fstp
jb
lods
mov
outsl
adc
int
aaa
aaa
xor
fs
icebp
jge
mov
test
pop
lods
or
jge
ret
jge
pusha
sub
jge
sub
popf
fs
jge
test
mov
push
jge
in
pusha
ljmp
popf
and
jge
inc
jge
popa
push
xchg
addl
dec
icebp
push
adc
scas
push
jle
aas
push
mov
rsm
sbb
xchg
js
insl
mov
lea
jge
xchg
jns
add
outsl
jo
dec
cmp
std
lret
jae
xor
jp
jge
lock
cmpsl
pusha
mov
sbb
xchg
pop
jp
in
sub
xchg
cs
je
pop
ror
loope
jge
mov
je
dec
adc
mov
or
fistpll
push
mov
loopne
movsb
mov
scas
fsubs
push
adc
nop
movsb
mov
ds
jle
push
mov
dec
adc
cwtl
xchg
fisttps
outsl
jge
or
scas
sbb
scas
mov
lret
sub
mov
lock
std
hlt
push
mov
lret
gs
inc
in
js
scas
jl
fldl
and
lahf
ret
jmp
je,pt
jno
xorb
push
or
adc
scas
lcall
mov
sbb
in
mov
shll
aas
adc
mov
clc
lds
in
iret
lods
addr16
push
inc
imul
in
xchg
jle
jne
lea
push
loopne
in
push
xor
mov
in
sahf
mov
js
lods
out
in
xchg
scas
jo
xor
mov
in
mov
dec
js
lods
out
rcr
sub
outsb
int3
xchg
sbb
imul
pop
jae
test
sub
insb
add
sub
mov
jmp
mov
jp
js
lock
or
mov
arpl
sub
mov
in
out
push
mov
popf
mov
jns,pn
mov
iret
or
paddq
into
pushf
movsl
push
mov
cmp
popf
hlt
repz
mov
scas
aas
jl
sahf
jecxz
in
dec
and
clc
stc
lahf
mov
cmc
lea
rcll
push
pop
jge
nop
jno
jae
cmpsl
shr
repz
jg
xchg
outsb
and
mov
fsubrs
xchg
inc
jnp
pop
xchg
adc
cmp
jbe
fidivs
mov
inc
push
gs
lods
jae
fsubs
dec
or
mov
xor
jmp
in
mov
dec
out
push
ror
and
inc
andl
mov
in
int
and
out
ds
enter
dec
xchg
je
mov
in
stc
out
stos
and
push
dec
gs
imul
test
xor
dec
pop
add
inc
dec
movsl
fbstp
jecxz
jae
xchg
rcr
out
outsb
jmp
test
mov
lea
cltd
popa
xorb
mov
and
andl
mov
lea
mov
popa
insl
popf
out
loope
mov
data16
sub
mov
outsb
sbbb
cmp
mov
ficompl
pop
repnz
add
cmpsb
mov
mov
xchg
jg
fbstp
mov
les
push
xchg
in
aad
push
mov
scas
mov
not
add
dec
mov
fldenv
lret
xlat
adc
out
adc
add
xor
mov
cmp
ja
loope
rorb
dec
jg
xor
sbb
pop
xor
dec
cmp
jp
dec
repnz
jo
dec
xchg
stos
faddl
mov
push
int3
jl
pop
fimull
pop
jmp
icebp
and
pop
jns
int
psubusw
push
push
pop
iret
mov
subb
lods
push
imul
sub
scas
ficoml
frstor
mov
bound
out
outsl
jp
jb
bound
loop
or
mov
testb
add
test
lods
aad
fisubrs
mov
xorb
lea
pop
inc
movsl
add
xchg
mov
xchg
insb
xor
xorb
adc
mov
mov
xor
dec
inc
mov
fs
cwtl
test
mov
mov
lds
into
add
and
out
mov
icebp
pop
out
sbb
jp
subb
cmp
dec
add
fwait
jb
xchg
push
jle
push
or
dec
fisubrs
pop
test
ljmp
cmp
out
in
jnp
pushf
imul
cltd
jns
jl
or
bound
inc
out
lods
int
pop
cmp
outsl
out
pop
int
jns
rcr
cli
imul
jne
rorb
dec
push
repnz
lock
and
dec
fsub
shll
lods
pop
mov
push
adc
ds
and
push
push
aad
sbb
mov
pop
ljmp
outsb
mov
das
mov
sbb
lods
mov
loope
cmp
pushf
dec
arpl
mov
stc
or
imul
lds
or
xchg
jnp
mov
dec
and
pop
bound
loopne
pop
xlat
add
lahf
or
cld
mov
fimuls
mov
sbbl
mov
incl
push
cmc
in
pop
jmp
sbb
push
dec
lret
sti
popa
dec
mov
call
xchg
pop
aad
divl
pop
xor
cmc
adc
sbb
or
push
adc
push
add
xor
adc
ret
subl
lds
xor
lock
or
xorl
add
fdivrs
inc
addr16
jno
sahf
loop
and
mov
pop
or
fisubrs
icebp
loop,pn
lds
xchg
flds
outsl
dec
ljmp
pop
pop
inc
cmp
addb
ret
fidivs
stos
xor
pusha
lea
std
jg
jbe
adcb
ret
sbb
jno
add
pusha
scas
pcmpeqw
frstor
adc
int3
cmc
jnp
lret
or
mov
aaa
push
nop
outsb
mov
cld
insl
in
xor
outsb
aam
push
cmp
scas
adc
jb
hlt
cmp
mov
or
cmp
outsl
or
cmp
daa
insl
sbb
push
iret
rorb
scas
popf
lods
cmp
cmp
ljmp
outsb
fmuls
xchg
cmp
push
sbb
xchg
mov
mov
insl
imul
sahf
das
mov
ds
aam
pusha
lds
test
andl
fidivrs
insl
out
pop
in
nop
or
push
jge
adc
jmp
jl
pushf
std
lea
into
imulb
popa
sub
dec
jne
test
mov
push
scas
fisttpll
stos
mov
rclb
imul
mov
pop
mov
outsb
fists
jbe
mov
jae
xchg
jns
in
pop
das
mov
lock
and
push
lods
mov
rcr
xchg
jno
aad
pop
int3
sbb
imul
add
pushl
orb
faddp
mov
jbe
mov
cmp
xor
fimuls
int
into
xchg
in
jmp
cmp
out
std
das
add
outsl
dec
icebp
push
into
mov
mov
adc
lahf
aam
ljmp
push
mov
movsb
jo
adc
jbe
jl
mov
stos
xor
mov
popf
xor
mov
daa
in
repnz
inc
sub
sahf
or
push
in
lahf
rol
fisubs
mov
dec
scas
data16
movsl
loop
dec
test
jg
movsl
lea
sub
and
mov
pop
pop
add
push
lds
fnstenv
lea
pusha
loopne
pop
popl
sarb
fs
fisttpl
sbb
ds
std
or
add
bound
std
sbb
dec
jo
dec
jge
dec
out
and
scas
jb
out
mov
pusha
rorl
lock
xor
fstps
adc
cmpb
lea
pop
jne
roll
xchg
lods
into
fs
loopne
sub
add
sbb
push
imul
jge
mov
xchg
andl
into
outsl
sub
popf
xchg
cltd
pslld
jns
sahf
sbb
jns
jo
jnp
pop
andb
shll
mov
das
cmp
movsl
pop
jp
daa
outsl
aam
push
lds
into
daa
push
pusha
jno
lods
pop
and
jo
fsubp
call
insl
fsubrs
and
add
adc
mov
lods
stos
es
fdivrp
jno
outsb
fwait
xchg
jmp
cmp
fdivl
test
mov
sarb
jbe
or
adc
xchg
pop
jg
sbb
mov
jbe
add
adc
or
out
or
fmul
mov
outsl
icebp
pop
sub
js
fisubs
lret
xchg
pop
mov
push
ficomps
mov
inc
lahf
arpl
rclb
push
and
and
push
scas
mov
fcomp
popf
fdivrs
xchg
pop
scas
out
and
mov
mov
daa
cli
bound
nop
rcll
in
out
jo
scas
pop
dec
outsl
mov
incl
sub
outsb
mov
add
cmp
lds
mov
jns
jo
in
cmp
stos
or
dec
jmp
sbb
sub
or
rcrl
pop
mov
leave
mov
mov
xor
int
movsl
or
cli
ja
out
mov
ja
into
scas
shlb
xchg
daa
int
fbstp
cltd
push
leave
xchg
pop
roll
xchg
xor
ficompl
xor
dec
sbb
xchg
or
xlat
mov
mov
aam
jnp
and
loop
pop
pop
pop
pop
dec
jb
mov
insl
adc
jg
mov
movsb
call
sbb
sbb
hlt
fstpl
pop
jge
sahf
cmp
sub
fidivrs
jle
pop
insl
pusha
pop
cmp
adc
lods
pop
hlt
outsl
dec
loopne
cmp
scas
jo
loopne
sub
shll
loopne
adc
js
in
lods
rcrb
aas
pusha
pop
cmp
outsl
xor
outsb
iret
movsl
jg
aas
imul
subl
jne
std
inc
cmp
outsb
cmc
shl
test
lock
out
outsb
out
mov
xchg
jns
jge
push
pusha
fiadds
push
addr16
leave
mov
push
inc
das
iret
arpl
sahf
dec
mov
adc
cmpb
mov
jnp
popl
and
adc
xchg
pop
mov
dec
jns
cmpb
sub
imul
push
pop
lods
mov
lea
jno
or
jae
xchg
ljmp
xor
xor
into
mov
and
xchg
into
sar
inc
lahf
push
into
cmp
adc
cs
sub
lock
icebp
push
out
ja
ss
sub
inc
into
jb
cs
xchg
fstl
mov
jge
cltd
ss
fdivs
fstpl
xchg
cmp
movsl
das
pop
sarb
pop
arpl
scas
ficomps
mov
call
jg
adc
jl
mov
jo
xchg
push
js
fs
push
mov
lahf
popf
shrl
xchg
push
cmp
cmpsl
mov
sub
pop
popf
dec
or
lock
pop
out
mov
push
mov
fldz
pop
insl
mov
push
lea
orl
jo
jg
ds
cltd
pop
pop
push
xor
std
sub
mov
jno
xchg
out
loope
daa
orb
rorl
jmp
mov
bound
lock
je
ljmp
insb
out
nop
jno
aad
pusha
jno
data16
mov
bound
add
pop
sub
into
inc
inc
mov
jno
xchg
stos
mov
pop
xchg
jno
aad
pop
scas
add
xchg
nop
shlb
or
push
outsl
xchg
dec
sbb
or
mov
mov
sbb
mov
lds
adc
dec
xchg
or
sbb
ficoml
mov
pop
dec
push
jae
outsl
adc
nop
xchg
add
jno
fldl
scas
xchg
dec
sbb
das
jecxz
pop
loope
mov
pop
shr
lds
fildl
es
scas
inc
cltd
scas
add
test
in
adc
push
push
push
jg
dec
shrl
pop
int
pop
pop
adcb
imul
imul
imul
pop
xor
repnz
push
int
outsl
pop
in
jle
lods
pop
xchg
jecxz
jmp
mov
out
lods
add
into
xor
outsl
test
adc
lcall
adc
jae
scas
pop
repz
pop
fucomip
jae
xchg
mov
xchg
out
bound
leave
add
stos
shrb
sahf
push
push
push
push
aam
ja
arpl
push
loopne
push
push
ja
push
sub
aad
or
lea
scas
loop
push
jo
cmp
lea
push
jnp
fnstenv
push
jns
mov
fstpl
loopne
cmp
lahf
aas
pop
xchg
xchg
scas
pusha
fsubrl
or
jg
ljmp
lods
orw
scas
mov
adcl
sub
adc
subl
outsb
pop
scas
add
cltd
mov
cmp
xchg
mov
xchg
lods
sbb
mov
xchg
test
xchg
lcall
xchg
int3
add
cs
mov
js
jle
out
push
inc
cmpsb
push
cld
push
push
fdivrs
mov
push
mov
nop
adc
jmp
arpl
divl
fisubs
xchg
fstpl
into
sub
fsubp
lahf
in
adc
aas
push
pop
or
into
popf
inc
xchg
aaa
arpl
inc
pusha
stc
outsl
add
std
addr16
incb
into
add
xchg
out
lret
push
dec
js
into
les
sub
pop
popf
mov
mov
stos
or
fidivrs
in
lea
jo
mov
adc
outsl
decb
popf
add
in
push
scas
add
inc
cmpsb
stc
iret
sbb
cmp
add
bound
or
sarl
push
jne
adc
pop
push
popf
daa
js
jg
push
xchg
test
cmp
aas
xchg
mov
xchg
push
data16
popf
push
jle
jbe
insl
shl
pop
pusha
xchg
adc
xchg
lds
insl
cmpsl
insl
adc
popa
xor
lock
sahf
and
add
add
aas
jmp
das
inc
test
leave
jg
dec
mov
lock
int
sbb
mov
push
insl
sub
or
aad
loopne
jle
adc
mov
mov
inc
fcoml
sahf
and
jbe
into
enter
push
enter
mov
or
cmp
in
iret
test
and
sbb
pop
ret
cmp
lods
outsb
xchg
pop
icebp
lret
xchg
mov
loopne
cmp
popf
lods
jns
push
cs
xor
outsl
enter
lock
mov
mov
ret
lds
sahf
push
mov
iret
movaps
insl
sbb
fsubrp
dec
setnp
push
mov
loopne
cmp
adc
ficomps
jge
cmp
push
cmp
adc
stos
lods
nop
mov
aam
mov
mov
fstpl
inc
mov
outsl
insl
scas
pusha
jb
inc
aas
sahf
pop
lods
pusha
scas
fidivl
lods
pusha
test
rclb
lea
lock
rcrl
out
cs
mov
loope
call
jo
jo
aas
cmp
push
stos
insl
aas
aas
fsubrs
adc
jg
fwait
lods
mov
std
out
mov
fidivrs
jge
cmc
sub
or
mov
imulb
scas
insb
pop
jg
pause
sub
jne
jo
ljmp
pop
sbb
mov
push
xor
fldcw
in
fldcw
xchg
sbb
xor
in
jo
loopne
cmp
lods
scas
stos
mov
mov
ds
fwait
xchg
pop
int3
rcr
sarb
xchg
lods
int
xor
outsl
xor
push
cltd
imul
mov
loop
xor
fcoms
test
xchg
mov
lea
popf
xchg
lea
pop
adc
ret
lods
mov
dec
mov
into
push
cs
popl
std
jae
mov
jno
jo
das
movhps
out
mov
lret
test
mov
lods
mov
jno
outsb
jl
int3
aad
int
iret
pop
mov
stos
outsb
dec
xchg
fwait
aad
pop
cmp
dec
jmp
pop
iret
xor
lahf
and
cmp
jg
icebp
mov
lret
fisttps
arpl
jp
pop
in
inc
and
add
icebp
aas
into
mov
mov
fidivrs
outsl
fsubp
sbb
mov
loop
adc
pop
fstcw
fidivrs
test
jmp
add
scas
enter
jle
lea
jo
ret
add
add
rcrb
add
mov
cs
cmp
xchg
fmulp
pop
iret
xor
mov
pop
mov
push
aaa
fs
cmpsl
cmc
jle
fwait
pop
ja
cmpsl
rorb
stc
into
loope
mov
stos
popf
pusha
rcll
outsl
in
inc
push
xor
push
cmp
iret
rcrb
dec
mov
ret
jae
sbb
jo
sahf
addr16
ret
es
scas
mov
stos
mov
ficomps
ja
pusha
jle
or
adc
std
arpl
daa
inc
ja
mov
in
push
insl
js
popf
push
insl
ljmp
pop
mov
test
mov
fdivrl
jmp
jg
aad
roll
add
push
fcmovnb
jo
mov
xchg
jmp
or
pop
xchg
adc
mov
and
ds
fsubrp
les
ljmp
sbb
fidivs
push
daa
push
adc
mov
scas
add
mov
mov
dec
fsubr
push
pop
cmp
cltd
push
mov
push
pusha
fstl
and
ds
dec
out
lods
and
arpl
adc
push
iret
faddp
inc
mov
inc
lods
int
in
fistps
aad
loope,pn
add
scas
out
mov
pop
ret
movsl
outsb
ds
sar
jl
in
jecxz
cs
scas
rol
lods
mov
inc
xchg
jae
insl
fisubrl
jno
dec
das
loope
mov
dec
mov
xchg
cmpsb
outsl
icebp
insl
popf
mov
mov
jb
lret
mov
rcl
sbb
out
xor
loopne
lods
shrb
jb
movsl
loopne
fidivs
sarl
xchg
xor
jno
bound
jl
loope
sbb
mov
mov
data16
xor
mov
dec
cwtl
xor
fs
in
inc
xor
dec
adc
pop
sbb
lods
lods
scas
call
insl
movq
lea
pop
rclb
loop
mov
sub
scas
das
adc
scas
insl
sub
insl
sub
or
mov
mov
mov
push
xchg
pusha
pop
imull
lea
jl,pt
es
jge
outsb
cs
fcomps
int
jle
add
xlat
inc
je
mov
pusha
fidivrl
xor
ljmp
jl
mov
call
loop
adc
mov
adc
addr16
mov
clc
add
push
fidivs
imul
mov
shl
jecxz
xchg
mov
into
shll
mov
popa
cmpsb
fnsave
cs
into
sub
loope
addb
stos
xor
mov
and
push
and
mov
pop
mov
lock
push
pop
xor
or
call
pop
in
sahf
or
outsb
in
cmp
rorb
mov
stos
mov
fnstsw
ds
mov
xchg
imul
mov
loop
adc
pusha
fnstcw
lea
mov
jg
push
das
mov
loope
xor
pusha
iret
add
fsubr
jp
fwait
loopne
jg
jle
iret
lahf
sar
jmp
or
dec
mov
pop
rolb
push
pop
mov
mov
pop
sbb
out
outsl
lock
mov
outsl
out
sbb
add
push
lcall
push
inc
stc
cmpsb
insl
loopne
shlb
imul
fs
out
loopne
jge
movups
movsl
jge
pop
jge
cltd
in
ficomps
mov
scas
pop
adc
fidivrs
xchg
push
das
jg,pt
jns
fbld
movsl
int
jmp
std
jne
int
dec
pop
ror
movl
xchg
push
rorl
int
lea
pusha
xchg
jo
loopne
jp
xor
jo
shll
shlb
or
cmp
test
and
sahf
iret
adc
out
fildll
fmul
daa
mov
jo
cmp
daa
inc
add
push
lods
lcall
xchg
mov
fcmovne
fcomps
int3
jae
xchg
imul
outsb
pop
xchg
stos
aad
pop
dec
fwait
jae
xchg
cmp
mov
xchg
sub
jns
mov
iret
ds
stos
test
adc
cs
mov
cs
dec
icebp
lods
lcall
dec
mov
out
cmp
pop
mov
into
mov
jmp
inc
pop
fbld
dec
or
sub
popf
fwait
jle
dec
jecxz
pusha
adc
sbb
and
adc
jbe
js
xor
outsl
adc
out
repz
ret
mov
mov
push
aas
lock
rorl
scas
dec
popf
sub
into
jle
lcall
mov
mov
cwtl
push
ds
jmp
movsb
fs
fmulp
pop
xor
popf
out
mov
shr
rcll
jp
ljmp
jecxz
test
iret
sbb
loop
inc
cmpsb
jo
inc
jo
iret
adc
repz
into
jnp
push
jmp
mov
jmp
into
ja
inc
outsb
repz
cmp
jle
mov
das
cmpsb
jno
cmp
insl
xor
xchg
xorb
mov
and
fiadds
test
popf
fsubrs
dec
mov
jne
mov
lahf
mov
mov
std
outsb
lcall
jle
stc
shlb
pusha
fbstp
xlat
mov
pusha
pop
std
mov
addr16
fbstp
cwtl
push
mov
lods
sar
xlat
test
fs
scas
push
popf
aas
popf
lret
jnp
adc
mov
xlat
pop
popf
or
mov
fisttps
push
loope
shrb
movsl
repnz
add
dec
shll
adc
test
mov
iret
lret
dec
out
push
jne
lds
xorb
fcoms
sarb
jno
cltd
cmp
lock
jle
stos
push
xorb
or
std
jge
jno
rcrb
repnz
sahf
loopne
and
mov
sub
or
inc
shlb
mov
int
jg
fnsave
adc
sbb
fsubr
mov
fscale
dec
xchg
jge
push
cs
push
jg
mov
insl
pushl
popf
xchg
ror
mov
aam
shrl
mov
lea
std
data16
popf
push
push
loopne
outsb
xchg
flds
mov
ja
into
es
nop
and
adc
ds
adc
lahf
push
push
push
rcrb
cmp
outsl
in
jmp
lea
mov
pop
push
xchg
popf
or
pusha
enter
push
outsl
jmp
xorl
int
lods
int
jne
fstl
mov
rcrb
mov
into
pop
popl
test
push
outsl
jge
pusha
out
outsb
imul
int
into
pop
push
outsb
pop
outsl
jge
sbb
xchg
mov
andb
sbb
xchg
xchg
cmpb
std
out
sahf
jno
dec
shrb
popf
into
ja
push
or
into
add
fisubrs
stos
lock
outsl
xchg
jno
lods
fdivrs
dec
mov
mov
scas
rcrb
lea
into
xchg
iret
jo
xor
xor
mov
pop
mov
out
rclb
cmp
lret
int
andps
into
sahf
data16
pop
call
outsl
mov
outsl
cmp
rcrl
aas
xchg
pusha
fnstenv
sbb
ror
push
or
push
pop
shrb
pop
sub
scas
hlt
push
aas
or
out
cltd
pop
ror
adc
dec
ss
shlb
adc
in
push
pop
push
clc
aam
call
mov
outsl
jno
push
or
repnz
out
add
adc
movsl
data16
fimull
insl
pop
push
push
repnz
rep
lcall
lea
push
pop
pop
sar
mov
notb
adc
xchg
loop
and
insl
lcall
xor
int
push
outsb
cmp
mov
xor
pushw
lea
jp
jnp
cmc
out
and
nop
or
mov
adc
xlat
pop
insl
push
lea
rorl
es
xchg
mov
mov
pop
mov
nop
mov
push
test
fsubl
cmc
rcl
fsubp
stos
push
or
push
push
sbb
loop
jb
inc
incl
push
insb
dec
lahf
xchg
arpl
push
jge
pop
inc
dec
es
jp
sbb
scas
shr
in
inc
std
lcall
xchg
data16
outsl
pusha
ss
jle
xchg
push
dec
pop
popa
in
push
jl
dec
sub
ja
mov
outsb
inc
stos
add
into
out
loope
jno
cmp
adc
pushl
mov
dec
pop
cld
xchg
sbb
jge
imull
mov
pushf
fwait
xchg
mov
mov
pop
pushf
ss
cmp
cmp
out
test
sbb
sbb
and
xor
xchg
add
outsb
data16
loop
xchg
cmpb
push
int
je
and
fimuls
xor
mov
xchg
dec
loope
jo
dec
push
mov
rorl
jbe
sub
popa
cwtl
inc
fbld
loop
cli
ret
and
push
dec
jge
jnp
sarl
negl
pop
push
movsb
test
xchg
lcall
add
adc
or
mov
push
push
pop
pop
mov
ror
mov
fsubl
cs
mov
sahf
loop
out
jb
scas
adc
cmpsb
xor
push
cmpsb
cmc
lods
pusha
sahf
repnz
lret
push
out
cmp
fstpt
lahf
mov
push
jns
sub
ret
xchg
sub
nop
insl
outsb
or
scas
pop
icebp
push
jle
mov
dec
leave
cli
adc
js
cmpsl
aaa
in
sbb
pop
xchg
test
pop
jl
inc
mov
dec
jp
popf
notl
mov
cs
adc
cwtl
cli
cs
pop
ja
popf
mov
jno
jmp
add
fsubp
frstor
xor
jle
cli
dec
adc
loope
dec
sbb
pop
popa
andb
push
pop
clc
stos
negb
pop
loopne
cld
in
sbb
jno
xchg
je
int
jbe
push
popa
sub
popa
sub
test
loop
cmp
mov
in
cmp
pop
jle
jnp
je
inc
ljmp
lea
jne
sahf
mov
push
jle
cmc
jno
dec
mov
ficoml
popf
mov
orl
sub
jnp
mov
psrad
test
mov
rcrl
push
push
mov
mov
mov
stos
iret
add
sarl
gs
scas
call
roll
push
insl
fiaddl
loope
cmpsb
mov
addr16
jno
into
fidivs
xor
mov
pop
insb
cmc
insl
lods
dec
add
in
int
fistl
lea
insl
jbe
jae
mov
or
rcr
cmp
out
dec
sub
loopne
adc
popf
lea
aas
sbb
mov
xchg
test
sub
pop
dec
sub
xor
xchg
test
bound
sub
stc
or
pop
popf
jg
push
cmp
aam
mov
into
out
push
stos
mov
outsb
fldt
ljmp
in
jno
ljmp
cmpsl
lret
xchg
int
ret
sbb
add
cmp
dec
cmpsb
imul
rcrb
mov
fwait
repz
mov
pop
imul
rol
adc
inc
push
add
pop
xchg
rcl
mov
out
jno
fwait
jo
push
fstpl
jnp
inc
pop
jne
jo,pt
mov
pop
jns
shlb
bnd
pop
lret
inc
mov
pop
xchg
inc
outsb
cmp
push
scas
dec
cmc
sbb
inc
cmp
jmp
lret
insb
or
push
xchg
cmpb
mov
fimuls
jmp
xchg
mov
scas
popf
fstpl
mov
sub
pop
add
mov
push
jno
int
mov
jecxz
cmp
insl
mov
loope
lods
scas
jge
stc
xchg
out
rorb
push
xor
mov
xlat
xor
mov
xorb
popf
fildll
in
push
dec
mov
mov
in
jne
adc
jns
fidivl
cmp
mov
add
inc
rcrb
push
jmp
jp
dec
cs
dec
push
adc
jb
push
shl
decl
mov
jmp
rorl
and
and
lods
int
movl
lods
jge
cmp
arpl
xchg
mov
sbb
lods
popf
data16
jne
test
aad
je
or
mov
pop
inc
mov
into
xor
insb
jno
or
pusha
jp
add
jne
fiadds
aaa
push
dec
gs
mov
cltd
dec
xor
test
pushf
lcall
int3
jecxz
dec
push
push
xchg
cltd
or
loop
arpl
pop
push
lcall
mov
jge
cmp
xchg
lcall
popf
push
fidivs
pop
inc
sbb
sub
js
out
lret
lock
pop
sahf
loop
add
dec
or
mov
push
dec
pop
sti
add
dec
pop
pop
xchg
mov
cmp
xor
xchg
mov
or
dec
lahf
mov
rcr
sbb
lea
sbb
sahf
or
repz
and
test
inc
mov
push
jge
lea
jb
and
sbb
xchg
out
iret
jb
fisttps
idiv
mov
stc
popf
int
push
push
pop
data16
sbb
cmp
hlt
decb
push
sbb
jmp
or
dec
xchg
or
outsb
sbb
rclb
adc
fcoms
xchg
fwait
xor
cwtl
sub
push
lock
pop
sbb
pusha
mov
jns
inc
sahf
mov
fs
iret
or
clc
pop
xchg
inc
cs
fildll
loopne
push
push
and
loop
sbb
andl
fcoms
and
ficomps
mov
push
push
dec
sarb
push
das
es
mov
outsb
arpl
fsubrs
int
shr
pusha
scas
jge,pt
sbb
mov
cmp
bound
xchg
ficoml
repnz
mov
std
mov
sbb
dec
lock
outsb
stos
sbb
fimuls
sub
push
xchg
push
das
xchg
push
lahf
ljmp
fldcw
push
outsl
jne
sub
jae
dec
push
sbb
mov
out
lcall
cmp
scas
pop
mov
jle
mov
jbe
jno
out
push
sti
fistl
fnsave
icebp
lahf
sahf
xchg
mov
scas
mov
xchg
cli
test
push
mov
jbe
mov
jge
shlb
out
mov
push
pop
nop
xchg
decl
pop
decb
js
es
pop
cmp
outsl
push
adc
icebp
subl
loopne
lcall
into
push
fdivrp
pop
mov
push
xchg
into
dec
stos
push
jae
mov
xor
neg
adc
pop
push
mov
ds
cmpb
jae
adc
push
nop
xchg
pop
xchg
outsl
dec
xchg
outsl
test
fstpl
jne
pop
mov
jg
pop
lahf
outsl
scas
xor
lea
and
inc
jae
mov
jle
scas
orl
xchg
sbb
das
jg
out
clc
loopne
sub
fists
mov
ljmp
outsl
sete
test
lcall
lret
mov
pop
xchg
into
fldz
xchg
aas
xlat
pusha
mov
pop
ljmp
pop
js
arpl
and
in
loop
repnz
nop
test
lock
and
dec
int
pushf
fldenv
outsb
pushf
dec
xor
push
mov
pop
add
outsb
xchg
out
jo
xchg
lock
cs
mov
aam
aam
xlat
out
push
flds
pop
and
mov
jecxz
aad
mov
cmp
push
cmpsl
jns
insl
mov
mov
sub
inc
sbb
lahf
add
mov
jge
push
xchg
mov
xchg
push
js
pop
outsb
mov
aas
mov
in
adc
xor
lods
sahf
daa
ficompl
mov
pusha
frstor
or
popa
jae
and
sbb
sbb
inc
icebp
lods
cmpsl
push
out
es
add
jbe
testb
sbb
xor
sbb
cmpsb
inc
add
popa
xor
into
pop
test
jle
pop
sahf
pop
in
test
sbbb
inc
insb
xchg
es
jo
outsb
into
xchg
outsl
into
adc
leave
add
std
fprem
jo
out
adc
outsl
pop
xor
lea
or
fsubp
jecxz
cmp
test
flds
xchg
push
xlat
cs
fisttps
xchg
sarb
xchg
int
sbb
pop
pop
pop
outsb
lods
add
push
adc
bound
xchg
outsl
xlat
mov
insb
push
cmc
loopne
ficoml
jmp
in
ret
into
jo
lahf
mov
mov
lcall
fimuls
mov
out
adc
push
stos
xchg
xchg
jo
jb
push
cmp
xor
data16
roll
and
jno
daa
call
or
daa
adc
popa
std
mov
subl
sub
fisubs
popf
dec
test
mov
andl
and
jl
js
or
mov
mov
orb
popa
dec
int
pop
subl
push
outsb
or
repz
jmp
push
daa
lea
push
into
aas
sub
data16
inc
stc
aas
cmc
mov
dec
xchg
loope
xchg
test
scas
inc
dec
std
neg
icebp
fidivs
push
popa
sbb
scas
fisttps
xorl
fidivrs
push
cmp
push
jbe
pop
xchg
xchg
xor
dec
sarl
push
push
mov
loop
jge
lahf
outsb
xchg
in
stos
lock
jg
jno
xor
jge
xor
in
lcall
sahf
adc
scas
push
in
push
fistpll
mov
jp
out
in
ljmp
mov
mov
dec
bnd
adc
lock
ffree
sbb
push
lods
xor
mov
lods
inc
stos
mov
ja
mov
xchg
jne
sbb
jmp
loop
in
or
mov
lahf
scas
loop
push
or
sub
adc
xor
sbb
bound
jno
mov
sar
pop
dec
gs
cltd
jmp
cmc
lock
inc
mov
lods
scas
or
jne
pop
fstpl
xchg
or
jle
cmc
jno
iret
iret
arpl
int
mov
mov
and
adc
push
xchg
data16
aaa
push
sub
lea
es
sub
fistps
or
jno
add
xor
fwait
pop
dec
cwtl
pop
lcall
inc
push
cli
lret
jno
cmp
dec
aaa
xchg
push
sar
jno
in
scas
xlat
sub
movsb
sub
lods
dec
sub
lcall
lock
xor
aad
pop
aaa
icebp
sbb
sbb
mov
mov
xchg
insl
fnstsw
into
in
sahf
std
push
outsl
xor
ret
fstl
add
fiadds
dec
mov
nop
push
push
xor
clc
jne
sbb
dec
fidivs
std
mov
in
test
std
push
int
xor
jmp
test
or
shll
lock
std
stos
in
xchg
outsb
lods
or
sahf
jg
pop
clc
lahf
gs
dec
xchg
cmpsl
jno
xchg
loopne
je
rcrb
fmul
mov
out
xchg
lcall
stos
imul
mov
xlat
lahf
pop
add
inc
divps
into
fucom
ljmp
and
ja
jo
sahf
out
adc
mov
dec
sub
test
idivb
lods
jbe
xchg
pusha
pop
mov
in
addr16
lahf
iret
add
dec
xchg
loopne
pop
xchg
insb
dec
clc
mov
icebp
out
sbb
lock
fisttpll
aad
stc
sub
int
std
mov
adc
jp
or
out
in
movsl
test
aad
scas
pusha
push
sahf
jge
dec
inc
aam
gs
push
xor
cwtl
jle
adc
popf
inc
jnp
shrb
dec
pop
sub
xchg
jle
hlt
add
xchg
lea
jno
ret
imul
add
imul
push
mov
insl
int
fstp
insl
cmpsb
fcompl
nop
inc
fisttps
mov
and
cmp
push
jnp
xchg
pop
pop
pop
pop
imul
insl
push
loop
jne
scas
add
xchg
sub
cmpsb
push
mov
add
scas
mov
mov
xchg
jge
andb
rolb
jge
push
insl
lods
cmp
lret
cvtps2pd
push
xor
or
mov
insl
nop
rcrb
cmpsl
lds
arpl
sbb
fstpt
por
das
aam
aam
aad
scas
test
inc
xchg
jg
ds
adc
mov
pusha
pop
aam
popf
cmpsb
mov
pop
sbb
loop
xor
jo
loopne
out
nop
imul
sbb
test
xor
jle
push
xchg
dec
and
mov
lret
outsb
xor
pop
shrb
movsl
fcoml
jge
or
fs
insl
outsb
fsubs
out
lock
xchg
push
mov
pusha
fiadds
outsb
xchg
scas
jo
xchg
and
add
xchg
data16
pop
fnop
xchg
xor
pop
stos
std
add
jg
mov
outsb
cs
jg
stos
imul
adc
repnz
xchg
lcall
xlat
jle
push
mov
push
push
repz
aas
mov
fdivs
mov
popa
push
sbb
outsl
loopne
in
sub
jge
mov
aas
xchg
js
dec
sbb
bound
fisubs
cli
inc
scas
cmp
inc
cmp
repz
outsl
ret
jle
arpl
scas
adc
jge
and
pop
imul
roll
push
roll
push
orl
jo
xchg
sub
je
or
jg
imul
dec
pop
push
scas
incl
mov
loopne
movl
clc
sbb
loopne
loope
loopne
insl
out
rcll
popf
in
sbb
movsl
ret
push
mov
lahf
clc
mov
pop
cmp
add
std
push
mov
in
sub
arpl
in
sbbb
sub
hlt
shrl
out
jo
xchg
jle
fldcw
or
popf
pop
shl
mov
jno
mov
adc
outsb
data16
sbb
loop
pusha
mov
sarl
sub
fisubrs
pop
pop
and
pushf
pusha
mov
mov
pop
cmp
inc
sahf
outsl
sub
and
jmp
pusha
sbb
je
es
xor
mov
lock
push
inc
int3
jle
mov
push
mov
push
jecxz
jns
push
decl
sahf
add
iret
sub
fstps
in
or
mov
pop
cltd
popf
push
or
outsl
inc
jo
cmp
xor
loopne
imul
lahf
pop
lock
jne
pop
je
mov
pop
ds
xor
jp
jno
and
jp
loope
aas
loopne
cmp
sbb
dec
repnz
lcall
jbe
inc
push
orl
cmp
outsb
dec
in
stos
dec
jg
cli
jbe
pop
pop
inc
jns
pop
cld
mov
push
jne
sub
mov
loope
sahf
mov
mov
enter
stos
xchg
cmp
push
xchg
sbb
jae
xor
nop
mov
cld
add
imul
jb
mov
mov
popa
adc
idivb
sub
cltd
test
pop
ret
jb
sahf
psllq
movsl
jge
jnp
dec
pop
adc
xchg
ret
dec
bound
mov
aad
rcrl
dec
adc
es
push
rorl
call
hlt
push
rcrb
rorl
push
jge
jmp
adc
outsb
mov
pop
mov
jo
enter
std
repnz
fistps
xchg
push
xor
dec
in
add
push
stc
pop
rolb
imul
dec
sbb
jnp
test
test
push
mov
mov
std
nop
dec
les
pop
subl
push
push
jmp
xchg
pop
jo
movsl
call
and
mov
cmp
ljmp
test
mov
es
ljmp
cmc
addr16
xor
sub
pop
mov
sub
mov
push
inc
lcall
xchg
into
loope
fsubrs
push
adc
fwait
cmpb
jnp
xchg
out
loop
xchg
cmpsb
or
add
aad
push
pop
insl
sahf
mov
mov
mov
aad
xchg
pop
sbbl
ficomps
sti
fstpl
cmpl
jge
outsb
scas
into
pop
out
lods
mov
loop
inc
stos
mov
add
jne
push
out
jne
int
icebp
pop
push
int
mov
xchg
popf
xor
pop
jge
popf
nop
xchg
pusha
daa
cmp
jbe
out
jns
dec
mov
mov
dec
decb
in
jb
inc
shr
mov
push
dec
mov
push
cmp
mov
out
out
xchg
out
xchg
lea
cmpsb
out
outsl
lods
mov
jns
outsl
popf
js
fidivrs
push
push
adc
xorb
cs
cmpl
jb
jmp
ja
push
lahf
aas
xlat
mov
mov
xor
arpl
pop
sub
xor
nop
ja
push
dec
or
lods
mov
das
insl
jae
pusha
and
dec
lahf
lcall
dec
aad
stos
das
lea
pop
pop
and
sbb
int
push
mov
out
mov
add
jecxz
add
mov
or
shr
fisttpll
lret
mov
jg
lea
xchg
adc
mov
mov
popf
jg
pop
sub
incl
xchg
jmp
jne
into
push
fstl
daa
pop
jecxz
and
out
mov
mov
cmc
inc
dec
push
popf
push
cli
cmp
fiadds
das
pop
jnp
divb
xorb
stc
mov
jge
int
push
outsb
and
insl
rep
cwtl
lock
sub
iret
cmpsl
iret
xchg
movsb
insl
std
sub
mov
and
in
aas
std
out
pop
jge
and
pop
jge
push
ds
inc
xchg
jne
test
outsb
push
xchg
xchg
lahf
or
cltd
out
cmp
lods
jge
push
mov
ss
lret
lahf
repnz
into
out
mov
add
mov
adc
cs
mov
jo
or
out
inc
xchg
loopne
xchg
pop
xchg
sahf
rolb
outsb
jge
outsl
xorl
int
into
stc
xchg
popf
push
push
mov
mov
dec
imul
sahf
inc
inc
inc
loop
jo,pn
lcall
xchg
ljmp
add
outsb
sbb
push
push
adc
jbe
mov
lret
lds
lock
fnsave
mov
push
dec
outsl
sahf
mov
xchg
into
jecxz
push
cwtl
cli
mov
popf
sbb
xor
push
inc
xchg
nop
in
mov
mov
xchg
push
mov
push
mov
ljmp
jno
movsl
test
seto
fisubs
add
jne
xor
jle
mov
fstp
sub
dec
es
mov
mov
push
iret
in
xor
mov
call
jo
dec
movsl
xchg
icebp
jne
cmpsb
sub
mov
push
rcrl
ja
pusha
outsb
es
leave
mov
sbb
ror
push
cmpsb
jnp
xchg
push
mov
lea
lret
xchg
xchg
popa
mov
inc
pop
adc
push
fisttpll
inc
in
jmp
cs
ds
mov
mov
push
test
dec
jg
jno
dec
pop
movsl
ret
pop
dec
iret
dec
sbb
xchg
stos
sahf
cltd
mov
dec
sbb
daa
mov
roll
bound
mov
dec
adc
jmp
or
pop
mov
mov
cmp
sahf
mov
and
mov
jno
cmp
push
mov
xchg
shrb
lahf
sub
into
js
sub
sbbl
pop
pop
xchg
and
mov
mov
sbb
out
xchg
iret
aad
jge
lret
test
icebp
xchg
pop
and
stos
jl
popa
cmp
cmp
repnz
jge
lea
push
outsb
pushf
int
pop
mov
dec
ds
adc
sub
int
xchg
insl
inc
outsb
lret
out
or
mov
dec
fnstsw
outsb
loope
cmp
std
jbe
jo
bound
jb
mov
jge
cmp
or
cmpsl
xor
inc
mov
add
fiadds
divb
add
lahf
and
push
add
or
out
adc
aad
and
rolb
jno
rcrb
pop
mov
outsb
ljmp
cmc
nop
cli
xchg
jne
imul
scas
pop
lds
out
aam
xor
push
dec
mov
push
negl
and
in
sbb
lahf
pop
sub
test
pusha
into
in
push
fisubrl
mov
imul
js
inc
xchg
test
nop
cs
sbb
push
bound
sub
fwait
pop
je
cwtl
cmpsl
lcall
fwait
pusha
insl
push
fdivp
mov
sub
pop
repnz
fcmovb
negb
mov
sbb
mov
mov
fisubrl
push
aaa
popf
mov
push
sahf
subl
mov
jp
mov
lods
jecxz
out
cs
rorl
jo
mov
into
ss
dec
pop
lods
or
mov
loop
ss
lea
jo
insl
pop
adcb
push
mov
jg
mov
jmp
js
xchg
cmp
lahf
nop
push
or
xchg
into
xchg
popf
ja
cmp
loope
fnsave
xchg
jle
outsb
xchg
popf
lods
lret
lahf
xor
and
imul
sbb
xor
push
out
lods
jl
mov
data16
sbb
sub
lea
push
adc
popf
adc
pop
sub
out
jle
mov
aas
jp
sub
push
add
and
xchg
mov
rcll
cmp
out
lds
cmc
push
shrl
sbb
scas
and
pop
and
sarl
sbb
xor
std
popf
sub
insl
push
popf
sbb
jecxz
rcll
sbb
cs
sub
aad
jns
cmpsb
jmp
popa
loop
xor
popf
push
sbb
insl
xor
push
lea
pop
and
hlt
frstor
iret
mov
std
sub
ss
int
bound
dec
rcrl
notb
bound
mov
scas
xchg
and
sti
push
adc
lret
gs
jg
xchg
repz
push
out
xchg
outsl
lahf
ljmp
int3
xor
filds
popf
push
loop
mov
push
icebp
and
cmpsl
in
adc
pop
mov
bound
mov
loopne
popf
or
inc
int
inc
dec
xlat
inc
pop
push
push
loop
mov
es
outsl
push
ja
sub
add
or
std
jg
or
into
loopne
jle
push
and
dec
mov
jmp
pop
popf
ljmp
aad
data16
push
xchg
xchg
push
outsb
insl
push
loopne
jp
pop
int
cwtl
fwait
push
sbb
orb
push
add
jle
add
adc
insl
xor
add
mov
jae
xor
jo
push
mov
xor
repnz
mov
adc
add
lcall
push
aad
loopne
xor
add
out
xor
les
cmp
dec
xchg
iret
sbb
xchg
loop
or
lea
xchg
aad
andb
inc
ss
sub
push
insl
dec
mov
fildl
xchg
lea
js
dec
outsb
fstl
cmpsl
mov
push
lods
mov
pop
xchg
xchg
xchg
sahf
aad
loope
jb
ficoms
sbb
and
mov
rcr
push
mov
xchg
gs
ds
mov
stos
das
maxps
stc
push
xchg
jge
sbb
int
mov
fnstcw
insl
rcrb
scas
jp
call
mov
jge
xchg
into
xchg
ds
hlt
cwtl
or
mov
push
fdiv
xchg
pusha
jmp
test
mov
push
js
xchg
pusha
jmp
pop
ret
xor
push
mov
jo,pt
dec
dec
jae
cmpsl
sahf
dec
imul
icebp
jge
fucompp
mov
rclb
mov
ds
in
std
in
cmp
pop
lcall
das
push
cwtl
pop
aam
iret
mov
scas
popa
push
dec
xchg
in
setb
jne
ljmp
cltd
lret
xchg
std
in
iret
add
xor
lcall
jne
int3
lahf
arpl
jg
fucomp
pop
into
sbb
jmp
xchg
popa
in
outsl
mov
mov
scas
scas
mov
pop
sbbl
cli
in
test
push
mov
mov
mov
std
push
int
frstor
imul
jns
or
arpl
jle
in
popa
sbb
push
outsb
push
test
cmp
pop
dec
es
imul
fildll
jecxz
mov
pusha
roll
adc
frstor
dec
pop
in
outsb
js
outsb
outsb
jo
fisttps
fstl
and
imul
xchg
iret
xchg
pop
outsl
jne
push
pop
push
push
mov
lea
repnz
sarl
inc
and
lahf
xor
dec
lea
loop
sub
or
sub
lea
dec
xor
push
mov
mov
decb
mov
aad
mov
sarl
movsb
cmpsl
mov
fimuls
mov
push
mov
std
push
push
out
lahf
lods
or
xchg
push
mov
xchg
jge
push
fistpl
xor
inc
mov
mov
pusha
or
or
rcrb
sahf
loope
inc
mov
stos
jecxz
push
fiadds
mov
out
jo
cs
int
mov
cmp
outsl
sub
loope
in
dec
fisttpll
std
stos
ljmp
mov
jecxz
pop
push
lret
fwait
scas
in
daa
inc
dec
xchg
movsl
sbb
into
sbb
pusha
std
ds
push
nop
aam
xchg
lea
xchg
dec
mov
push
fisttpll
pop
xchg
xchg
repz
xchg
jg
jae
dec
push
mov
pop
pop
bound
pop
lcall
int
addr16
sbb
es
push
xor
lds
mov
imul
mov
stos
push
cmpsl
gs
push
push
test
iret
xchg
mov
sbb
xchg
push
mov
push
fwait
insl
nop
sahf
insl
ljmp
add
into
dec
insb
push
ret
cltd
jmp
mov
popf
les
xor
paddsw
lock
scas
mov
shl
in
jo
mov
gs
sub
adc
cltd
pop
lea
notl
mov
outsb
cmp
hlt
popf
push
sbb
fs
je
hlt
jae
or
pop
inc
pop
mov
subl
scas
jne
loopne
icebp
xchg
pop
aaa
lds
addl
scas
mov
cmc
mov
mov
dec
lea
loop
or
int
rorb
lret
dec
xor
pop
out
outsl
cwtl
adc
int
jo
lods
fldcw
mov
push
in
out
into
mov
std
ds
cmpsl
incb
lahf
xlat
push
jle
jns
nop
mov
cmp
jne
mov
jge
sub
jb
rclb
popf
out
xor
cmp
pop
push
enter
daa
ds
inc
and
jge
xor
outsb
jge
xor
sbb
incb
repnz
dec
pop
fsubr
insl
in
jb
push
jecxz
adc
mov
ljmp
int
sti
outsl
hlt
pop
popf
push
mov
ffreep
sub
sbb
cmc
scas
repnz
mov
fucomp
in
xor
jge
inc
out
int
jecxz
stc
lahf
and
sbb
push
jmp
inc
loop
lcall
mov
aad
or
mov
lock
lea
pop
ja
xchg
mov
loop
push
mov
addb
jns
xchg
out
xlat
push
mov
sbb
add
jle
pop
jo
xchg
ds
scas
hlt
sub
std
repnz
addb
jge
addr16
sbbl
jmp
stos
sti
lahf
cmpsb
push
out
js
mov
add
mov
sahf
cli
scas
or
shl
jg
ss
mov
mov
out
inc
or
push
lods
das
push
dec
icebp
movsl
jne
frstor
loop
cmpsb
ss
sbb
jg
in
pop
ja
jne
inc
pmuludq
int
mov
cmpsb
jl
sub
sbb
mov
mov
aas
xchg
xorb
int
push
outsb
bound
add
andb
gs
inc
push
test
ss
or
mov
jg
cmpsb
xor
push
js
mov
lahf
mov
lea
xor
dec
jnp
jbe
mov
dec
jp
mov
cmpsl
dec
adc
ret
test
mov
sahf
in
les
push
push
cmp
out
or
xor
push
xchg
xchg
lahf
jg
xchg
mov
insl
sahf
in
xor
sub
mov
insl
mov
lret
lods
inc
mov
mov
jg
insl
movsl
mov
stos
xchg
pop
pop
push
data16
loopne
scas
test
cmpsb
mov
scas
addl
jb
arpl
popf
sahf
push
aaa
pop
js
out
mov
pop
push
or
mov
adc
sbb
sub
and
fdivp
jns
add
lret
or
aaa
xchg
xchg
int
mov
in
loop
mov
lcall
loopne
xchg
scas
push
push
xchg
mov
push
cmc
dec
or
das
push
mov
ja
mov
push
pop
jmp
pop
outsl
sbb
jne
daa
ja
scas
fsubp
pop
xchg
int
arpl
into
in
jmp
or
push
push
outsl
rorl
outsb
cmpsl
mov
in
shll
mov
fstl
ret
dec
xchg
sbb
imul
in
or
push
mov
push
pop
or
dec
scas
insb
aam
xor
pushf
pop
pop
scas
jns
cmp
jg
pop
sub
mov
mov
xchg
pop
lret
mov
ret
mov
dec
jns
cmpb
sbb
ja
popf
cmpsb
push
sbb
sbb
jbe
jo
mov
adc
mov
sarb
fldl
sbb
popf
lcall
arpl
cmp
jle
test
mov
pop
xor
flds
sbbb
xchg
mov
mov
jne
add
lock
hlt
push
fnsave
adc
lods
mov
inc
lea
ljmp
inc
dec
sbb
jge
testl
fistl
in
into
icebp
and
push
mov
bound
in
mov
xor
negl
inc
dec
xor
xchg
xlat
push
into
xchg
lods
in
mov
rcll
and
mov
mov
loop
pop
jnp
popa
ljmp
sbb
mov
xchg
mov
pop
aam
push
sahf
push
and
push
cltd
loopne
xchg
in
jmp
inc
pop
jecxz
jbe
mov
xlat
mov
mov
std
cmpsb
incl
insl
xor
outsb
cs
addr16
mov
test
sarb
pop
fildll
outsb
cli
addr16
jnp
jg
mov
shlb
mov
pop
jp
stc
sbb
lret
les
shrb
stos
mov
stos
sbb
xchg
adc
or
insl
enter
and
leave
and
jo
loope
push
ds
stos
cmc
nop
in
sahf
movsb
sub
sbb
std
testb
call
rcrb
popl
xchg
pop
lcall
sahf
mov
lods
jecxz
sbb
xchg
sbb
push
mov
pop
nop
push
mov
cmovg
cmpsl
cld
scas
pusha
jnp
std
icebp
mov
outsl
and
cwtl
fimull
outsb
test
popf
lea
jle
sub
outsb
xchg
outsl
dec
xchg
out
jbe
iret
or
jo
or
xchg
mov
loop
stos
in
jle
mov
push
aaa
inc
lods
inc
xchg
adcb
add
lock
cmp
popf
dec
pop
movsl
rorb
out
mov
std
nop
jnp
cmp
popf
dec
push
mov
pop
jg
inc
push
test
lret
aas
fs
lret
lcall
cmc
jne
xchg
decl
ljmp
out
ljmp
cli
lcall
push
xchg
das
jnp
stos
dec
cmpsb
xchg
minps
pop
data16
sbb
orl
aam
out
outsb
inc
xchg
add
les
push
scas
push
xchg
adc
sub
loop
lods
popl
and
loop
fst
jne
dec
rorb
fisubl
push
jne
cmpsl
gs
dec
cmp
iret
hlt
stos
lcall
int
popa
xchg
dec
pusha
shrl
lods
pop
fbld
ds
test
stc
jp
sahf
dec
mov
and
mov
test
adc
push
sbb
push
push
dec
cmpsl
xlat
xchg
fstpl
pusha
ljmp
sahf
xchg
shll
mov
sub
lahf
lea
fsubrl
sbb
jg
cmpsb
in
jg
int
in
mov
out
xchg
mov
repnz
ret
outsb
mov
lods
fisubs
pop
lcall
outsb
out
outsl
shl
inc
push
xor
cmpsl
sbb
repnz
lea
mov
into
in
out
stc
divl
mov
adc
adc
add
pop
nop
out
push
mov
sarl
scas
push
shlb
lea
call
push
cmpsb
mov
and
xlat
mov
aas
out
jl
vmread
push
mov
js
xchg
add
pop
cmc
mov
mov
pusha
sbb
jbe
pop
and
push
call
scas
lds
xchg
call
xchg
pop
cmp
sub
mov
push
dec
aaa
inc
fnsave
inc
aaa
pop
cmp
xchg
add
pop
js
aas
dec
in
xlat
imul
jbe
sbb
out
lea
je
int
mov
std
ljmp
pop
mov
xchg
loop
sub
out
cli
pop
shll
mov
stos
test
cltd
jne
in
fmuls
fdivrs
xchg
jns
inc
outsl
rcrl
stos
stos
scas
jge
incb
xchg
ss
int
dec
cmpsb
and
dec
stos
repnz
xor
lret
and
jge
push
std
cmp
push
lea
nop
pop
in
rorb
adc
lock
pusha
jne
lea
in
fnstsw
scas
mov
divl
add
clc
add
ret
fisubrs
ljmp
sub
dec
xchg
popf
xchg
mov
pop
xchg
lods
mov
sbb
or
push
sub
inc
fcomip
mov
pop
adc
push
shrl
push
pusha
xor
sub
filds
push
xor
cli
lret
xchg
jg
into
jge
cs
mov
mov
mov
std
in
mov
jecxz
lock
jg
push
jnp
adc
scas
adc
mov
popf
push
outsb
push
dec
pop
movsl
xchg
in
jbe
xor
sahf
sub
xchg
gs
sarl
sbb
mov
ficoms
sbb
std
pop
in
add
mov
add
mov
out
hlt
adc
dec
xchg
dec
ja
adc
dec
pop
mov
not
xor
repz
ljmp
xor
shlb
jmp
sbb
xor
cmpsb
cmc
outsb
out
fidivs
push
pop
out
test
cmp
push
std
jno
or
iret
xchg
pushf
out
js
movb
pushf
mov
inc
cmpsl
into
cmp
iret
xchg
loope
sub
shlb
mov
outsb
fprem1
jg
fucomp
test
push
cmc
mov
aas
mov
nop
adc
das
xlat
jo
mov
mov
lock
cmp
mov
adc
fbld
test
btr
loope
lahf
rcrl
outsb
pop
xchg
jne
outsb
mov
jae
and
hlt
out
add
dec
xchg
lea
mov
sub
jbe
jo
adc
js
rol
outsl
sub
xchg
xlat
sbb
and
inc
lret
cmp
dec
inc
mov
jbe
pop
mov
fadds
imul
xchg
xlat
aad
fxch
push
scas
inc
fadds
push
sub
mov
ret
or
push
jno
jne
pop
negb
lret
shr
leave
adc
loopne
das
sarb
jns
test
repz
or
xchg
pusha
sar
sarb
push
test
mov
in
sub
gs
imul
xchg
sub
mov
scas
push
call
icebp
ja
popf
leave
into
jae
adc
insb
mov
mov
xor
push
in
lods
bound
inc
dec
jb
mov
mov
std
lods
cmc
ror
shll
sarb
sbb
add
aaa
rorb
sub
jbe
mov
sbb
fs
lds
xor
inc
aad
sbb
ja
fidivrl
or
push
std
icebp
push
rorl
or
push
sarb
jne
pop
mov
pop
sub
ss
int
cmp
xchg
int3
lock
dec
scas
xchg
movsl
stc
cmpsb
gs
cmc
out
or
leave
lcall
inc
imul
jle
rorb
cltd
pusha
sub
mov
int
push
outsb
mov
lods
and
outsl
pop
les
mov
rcr
pop
insl
lcall
orps
lods
fnstsw
jge
stos
scas
jecxz
xor
repnz
jg
lea
in
andl
popf
inc
mov
mov
stc
jb
popa
lods
jmp
inc
push
sub
cmp
pop
outsl
jb
addr16
lea
add
jg
fiaddl
cltd
mov
mov
cs
outsb
add
push
mov
insl
push
loopne
das
mov
gs
dec
ret
sbb
orl
jle
lret
adc
ja
mov
pop
ficompl
outsl
movsb
iret
into
imul
sbbl
iret
imul
xor
lcall
mov
jecxz
xchg
icebp
es
fwait
pop
in
int
xchg
rorb
xchg
je
fstl
mov
ffree
dec
push
jge
mov
rolb
dec
jb
jbe
add
lahf
push
jae
sbb
add
daa
iret
vmwrite
and
push
loop
popa
outsl
lds
push
std
iret
xor
mov
test
flds
in
iret
adc
mov
fists
gs
leave
stc
lock
xchg
add
and
mov
pusha
test
das
leave
jmp
scas
pushf
popa
pusha
push
cmp
scas
lods
icebp
das
push
fs
aad
jp
test
sbb
outsl
add
imul
popf
das
int
out
jno
xchg
roll
popa
iret
jmp
imul
orl
dec
pop
jle
shlb
jmp
cmc
xchg
mov
jg
int
or
std
jge
xchg
push
cs
push
pop
xchg
popa
jno
popa
lea
popa
scas
lods
cmc
jns
jge
fnstsw
and
subb
adc
mov
add
dec
outsl
jne
sbb
fnstsw
or
test
sbb
in
repnz
cmc
or
nop
fimull
xchg
sbb
outsb
xor
lods
std
aam
jle
fnstenv
cs
fildl
and
outsl
icebp
and
packsswb
in
cs
lods
dec
cltd
pop
iret
dec
xchg
xor
aaa
lea
lgs
push
das
mov
lahf
outsb
cmp
psubusb
ds
movsb
cltd
out
xchg
jmp
mov
lods
inc
xor
into
adc
mov
push
adc
lahf
nop
push
push
nop
jno
sarl
xor
sbb
fisubrs
mov
push
mov
mov
lea
mov
push
cmp
xor
ljmp
insl
das
push
add
jne
int
pop
cmp
push
in
sbb
sbb
adc
jno
add
mov
add
sub
push
pop
std
mov
loope
int
jbe
lret
aas
push
lcall
into
push
pop
testb
push
cwtl
or
mov
jmp
dec
jg
xor
imul
xchg
imul
xor
cmpb
adc
repz
jne
ss
mov
data16
dec
sbb
or
cmp
add
xor
dec
adc
cmp
inc
mov
xor
pushf
add
pusha
mov
jl
push
cmp
jmp
int
int3
cli
push
dec
fcomps
jns
dec
arpl
xchg
pop
cmpl
jmp
pop
inc
mov
ret
into
dec
dec
mov
pop
dec
orl
cs
pusha
pop
sarb
or
loopne
mov
outsl
ja
ds
dec
test
int3
pop
pusha
shrl
xor
dec
rcrb
mov
jns
jp
lcall
push
add
pop
fistpll
test
dec
adc
mov
repz
ds
pop
aaa
mov
ljmp
or
jne
addl
and
call
dec
add
fs
fwait
mov
mov
out
in
clc
jne
stc
ret
dec
and
lock
bndldx
int
popa
sub
cmc
dec
or
fisttps
nop
mov
push
insb
imul
adc
je
sbb
cld
dec
in
or
xchg
pop
cmp
add
sub
xlat
mulps
dec
jmp
fldt
sub
int
int
ss
out
fxch
xor
lret
in
pop
daa
cs
xchg
xor
imul
sbb
jge
add
adc
sub
call
icebp
push
sahf
fimull
adc
ret
xor
cmc
outsb
cmpsl
shl
ret
jle
inc
shl
leave
aad
dec
adc
movsb
movsl
outsb
cmp
pop
pop
inc
arpl
xor
mov
int
cmpsb
lcall
movsb
dec
push
divl
inc
mov
dec
mov
mulb
adc
push
push
int
outsb
or
mov
dec
scas
pop
mov
mov
rcr
iret
inc
addr16
xor
les
and
arpl
mov
cmp
dec
push
sub
and
jo
xor
jne
lahf
sbb
sub
jae
jb
sub
cmp
out
cmp
scas
xchg
imul
pop
xchg
ds
ljmp
incl
adc
nop
and
stc
dec
pop
and
dec
pop
frstor
enter
adc
push
xchg
and
lea
or
in
lods
lds
mov
xor
and
push
imul
test
je
and
jns
popf
jbe
mov
push
mul
and
pop
aad
add
lahf
cmp
and
sti
ja
pop
and
push
inc
aad
mov
data16
mov
das
mov
insl
jne
sbb
nop
roll
popf
cltd
jno
or
std
push
mov
aas
xor
dec
or
sub
test
orl
inc
inc
add
ret
add
push
fcomps
jns
push
aad
int3
push
sahf
pop
or
push
int
or
dec
push
or
cltd
mov
inc
loop
xchg
cmp
push
frstor
add
ja
shrl
sarb
push
data16
iret
es
sub
addr16
fxch
fmull
and
pop
pop
push
add
imul
or
shr
sub
ja
jp
in
es
popf
mov
inc
scas
xchg
subl
pop
daa
aas
fstpt
lods
sub
popa
testb
sbb
push
jns
lods
fistpll
dec
pushf
xor
push
cmp
mull
adc
push
insl
jge
mov
push
nop
add
mov
ja
push
lock
jno
sbb
insl
adc
sbb
imul
fcoms
mov
jl
daa
out
pusha
dec
int
clc
jb
lods
mov
orl
imul
mov
mov
imull
pusha
xor
out
shlb
sub
imul
pop
stos
jg
movsb
inc
loop
lcall
loope
pop
xchg
and
stc
cmp
rorl
push
pop
xchg
int
sub
mov
clc
pop
dec
in
jmp
incl
stos
pop
outsb
xchg
jae
mov
mov
pop
xchg
fsts
lock
aas
int
adc
add
in
and
pop
ja
or
jns
add
xchg
xorl
cltd
rcll
adc
aad
lea
xor
cli
rorl
int3
sti
lea
cld
jp
add
leavew
lea
mov
xchg
nop
call
adcl
dec
dec
jmp
xchg
insl
dec
ficoms
sbb
jno
xchg
pusha
loop
dec
fscale
push
sub
mov
adc
shll
mov
mov
int
fstps
pop
dec
mov
xchg
popa
out
xorl
push
push
daa
aad
test
icebp
or
loope
or
leave
push
jno
and
insb
rcpps
jnp
addr16
pop
loope
pop
rcrb
adc
bound
lea
lret
fcoml
les
pop
insl
int
mov
pop
cmp
and
je
enter
lea
int
push
test
mov
mov
fildll
dec
pop
xor
xchg
sbbl
lock
fwait
xchg
mov
or
xchg
gs
lahf
adcl
mov
flds
aad
rcrb
ja
mov
and
mov
mov
cmp
inc
or
stos
mov
ds
cmpsl
pop
mov
cltd
leave
arpl
test
sbb
cmp
push
test
mov
xchg
adc
sub
mov
insb
insl
adcl
sarl
pop
out
fildll
fxch
pop
imul
out
insl
mov
dec
pop
mov
mov
mov
xor
cmp
loope
cmp
xor
int
imul
or
lcall
xchg
popf
fldl
xchg
outsl
adc
rcr
cltd
inc
or
jne
popa
dec
jo
sbb
push
jne
or
into
xchg
or
test
test
or
xchg
in
xor
xor
or
fnsave
stc
js
stos
in
test
add
xchg
aas
or
ja
rclb
xchg
jge
sbb
sub
dec
push
add
xor
cmp
and
cwtl
insl
popa
jbe
mov
sub
sbb
xchg
push
pushf
xor
jge
insl
imul
out
sbb
outsl
out
mov
out
jbe
sub
pop
pusha
or
int3
adc
xchg
pop
insl
or
push
sbb
push
insl
fnsave
lock
je
xor
add
push
fistps
movsb
in
add
jno
jecxz
add
imul
xchg
pop
aad
add
daa
adc
lods
mov
and
jns
popa
jbe
cmpsl
aas
cs
imul
js
test
popa
gs
jecxz
pop
insl
rcll
xchg
xchg
xlat
jne
or
sbb
rcr
xchg
sarl
or
and
cmc
inc
fdivr
cltd
jns
jno
lock
add
mov
lea
test
gs
pop
aaa
in
fmuls
pop
dec
pop
dec
idivl
dec
xchg
jecxz
dec
push
rorb
std
pop
cmc
mov
test
pop
sbb
lcall
loopne
inc
mov
or
cmp
and
dec
push
sahf
dec
call
dec
or
push
addr16
mov
leave
add
push
insl
pop
dec
imul
adc
out
mov
xlat
pusha
cmpsl
xchg
dec
nop
imul
xchg
testl
stc
adc
sub
adc
push
pop
and
push
push
mov
jne
cltd
std
pusha
push
cmc
mov
xchg
sub
xchg
xchg
sbb
and
push
call
lcall
lods
or
mov
mov
lret
sbb
mov
fdivr
push
aam
jge
std
fldcw
js
pop
insl
push
mov
mov
ja
lret
stos
push
add
xchg
fdivrl
mov
mov
jp
xchg
roll
test
data16
inc
adc
or
and
sub
inc
inc
cli
push
add
and
mov
cmc
inc
je
mov
jl
mov
rcr
ficomps
push
loopne
push
lods
mov
ds
stc
hlt
pop
popa
insb
mov
push
ss
sub
cld
push
outsl
adc
xchg
and
mov
pop
fstps
test
sbb
push
jno
out
cmp
je
cs
into
jno
dec
insl
cmp
rcl
lods
popf
jg
scas
pusha
xchg
dec
mov
dec
lea
jb
add
jbe
popa
in
mov
hlt
gs
pop
ficompl
popa
insl
stos
dec
lods
jge
imul
jl
jns
add
ret
insl
xchg
sub
sub
mov
xchg
lods
and
bound
repnz
sbbb
dec
mov
outsb
jb
pop
inc
imul
inc
iret
jecxz
neg
je
popa
cmpsb
pop
push
jecxz
dec
cmc
push
fbstp
imul
lea
mov
lea
push
daa
out
inc
push
aam
xchg
xor
gs
xchg
shrb
dec
adc
insl
adc
xchg
adc
jge
push
push
movsl
iret
dec
mov
dec
loope
jmp
and
sub
bound
push
jb
dec
test
mov
fcmovu
loop
ljmp
and
sub
xor
pop
pop
arpl
outsl
jae
ja
fwait
lahf
mov
mov
xlat
fcmovnu
jecxz
jmp
out
repz
sbb
and
dec
sub
xor
pop
pop
pusha
fs
push
cwtl
pushf
mov
mov
mov
loopne
call
dec
adc
sbb
and
sub
icebp
xor
mov
mov
push
mov
in
test
lods
call
movsl
sub
mov
pop
dec
lods
gs
push
xchg
pop
imul
insl
popf
push
outsl
mov
sbb
dec
test
sbb
mov
cmpsb
push
mov
mov
pusha
xchg
mov
push
dec
pop
xor
inc
mov
int3
fs
mov
dec
cmp
adc
mov
mov
mov
inc
js
push
das
imul
or
dec
adcl
aas
pop
mov
or
stc
jecxz
cmp
and
sbb
add
frstor
push
or
dec
adcb
dec
imul
mov
and
dec
aaa
adc
jae
xchg
out
hlt
add
imul
sbb
nop
loope
ljmp
pushf
xlat
subl
jecxz
jbe
arpl
rcll
mov
push
cmp
hlt
dec
lea
lret
dec
mov
pushf
fimull
push
cld
xchg
popa
cmp
orl
in
pop
cli
dec
and
mov
outsb
stos
add
dec
adc
repz
je
les
jmp
and
in
pushf
ffreep
dec
jmp
add
and
into
rcrb
imul
popf
inc
xor
pop
lock
inc
adc
jl
mov
iret
mov
movsb
dec
jne
das
in
and
add
push
repz
push
insb
cli
xor
fadd
inc
pop
jge
mov
cmp
loop
movsl
shrb
icebp
mov
out
push
jnp
cmp
jge
cs
lock
mov
in
push
sub
sbb
adc
lds
push
push
add
popf
mov
mov
sub
xchg
aam
cli
sbb
inc
dec
in
sub
ss
dec
aas
and
clc
mov
cld
aaa
dec
add
cmpsb
imul
push
dec
pop
and
mov
or
dec
dec
and
inc
pop
dec
movsb
ss
add
ret
jmp
or
and
cmp
and
or
adc
pop
pop
fdivp
mov
cmp
push
inc
out
fldcw
add
push
xor
inc
push
nop
dec
aaa
jge
xchg
popf
stos
dec
test
fstl
inc
sbb
aas
xchg
push
mov
movsl
sub
cltd
push
dec
es
sub
push
dec
subl
jne
fmuls
pop
mov
leave
dec
repnz
xor
inc
cmp
xor
dec
cmpsl
mov
mov
dec
outsb
fucomp
js
jne
mov
lea
pop
rol
xchg
mov
add
pop
ret
xor
roll
add
das
cmpsl
xor
jl
in
aas
xor
add
fildll
dec
mov
jg
cmp
sbb
rorl
cmp
lret
pop
dec
repnz
shrl
cmp
dec
out
sub
scas
fisttpll
or
mov
dec
imul
xchg
dec
mov
cmpl
es
push
mov
sbb
pop
or
imul
out
jb
add
mov
pusha
int
mov
mov
mov
add
sti
out
mov
xor
cmp
or
sub
aas
dec
mov
lds
pop
lret
jp
outsb
inc
adc
dec
add
pop
xchg
orb
jae
push
adc
xchg
dec
push
inc
daa
fsubs
add
adc
mov
pop
mov
mov
pusha
ss
mov
test
inc
jne
popa
inc
dec
aam
lcall
mov
in
adc
cltd
dec
loope
rorl
test
mov
mov
repnz
jo
dec
or
bound
xor
add
sbb
dec
insb
test
jle
cmpsb
xchg
lret
push
cmp
pop
stos
jae
cmp
sahf
dec
sbb
xor
mov
push
dec
pop
adc
inc
and
and
div
dec
mov
dec
mov
add
imul
adcb
jo
mov
into
aaa
in
mov
arpl
sub
mov
in
fs
pop
in
into
jmp
sarb
cmp
jns
decb
inc
int3
ss
add
shll
mov
shrb
cli
lods
inc
and
lret
cs
inc
sar
dec
sbb
pop
mov
lret
mov
or
mov
push
out
pusha
arpl
cmp
test
mov
mov
mov
inc
filds
xor
pop
or
pop
dec
sar
jb
cmp
jp
inc
lods
xor
add
inc
and
imul
std
jecxz
mov
int
xlat
push
fdiv
popa
frstor
in
jns
adc
sub
xor
fsubrs
pusha
or
adc
jp
adc
or
dec
out
cli
fadd
sub
cwtl
push
jno
sbb
inc
pcmpeqw
xchg
jo
dec
mov
sbb
inc
mov
inc
scas
loope
dec
sub
cmp
xchg
jns
or
cmpsl
ss
in
xchg
scas
mov
mov
dec
add
mov
and
mov
outsb
dec
sub
jge
lods
xor
pop
push
inc
adcl
or
sub
loopne
inc
jno
ret
push
push
sub
jp
dec
popw
jle
pop
fimuls
lahf
dec
or
popa
lret
leave
icebp
out
test
mov
dec
mov
dec
sub
cmp
orl
lods
add
dec
sbb
lret
dec
notb
hlt
test
pop
xchg
dec
adc
dec
jge
call
test
mov
cmp
xor
xor
lcall
push
pushf
mov
push
mov
into
cmpsl
mov
xchg
dec
push
repz
scas
dec
mov
sub
aam
xor
inc
fimuls
bswap
out
movl
mov
mov
sbb
leave
daa
sub
push
popf
lea
inc
xor
pop
jbe
das
stos
cli
mov
sub
xor
adc
aam
dec
cmp
dec
cltd
mov
or
in
mov
out
lret
rorb
lods
and
mov
push
out
fdivr
inc
mov
push
mov
pushw
jb
jns
mov
hlt
dec
mov
mov
sbb
fs
dec
orl
lcall
add
mov
dec
je
ret
adc
lahf
pusha
adc
aaa
push
mov
xchg
clc
or
add
pusha
movsl
sbb
dec
adc
icebp
xchg
inc
xchg
pop
dec
add
fisttps
dec
mov
lret
popa
cmp
gs
ss
mov
cltd
pop
or
stos
dec
push
xchg
stc
repnz
mov
lret
mov
jbe
fisttpll
in
dec
or
push
cltd
xor
fcmovne
orl
mov
and
fisttps
clc
dec
ljmp
aad
aaa
adc
mov
cmc
xor
hlt
sbb
imul
dec
je
mov
in
sub
or
jne
xchg
dec
pop
push
dec
dec
mov
sub
mov
test
popf
stos
inc
inc
push
sub
jne
loope
jno
pop
jg
aam
lea
inc
xchg
cld
push
mov
imulb
rorb
sti
mov
lret
cltd
imul
pop
mov
add
push
scas
out
pop
mov
mov
ljmp
xor
fwait
outsl
blsfill
dec
push
sub
aam
jns
dec
or
push
push
dec
mov
jno
and
xor
xchg
mov
and
adc
inc
pop
roll
jno
dec
push
in
sbb
shrl
popa
xor
nop
xchg
fdivrl
imul
jno
or
xchg
imul
lret
popa
jne
lock
js
fldl2e
insl
out
mov
mov
bnd
cmpsb
dec
data16
nop
pop
cmc
pop
adc
int3
shrl
pop
fiadds
jge
dec
push
lea
popa
mov
pop
cmp
andl
gs
push
outsb
fidivs
in
test
imul
xchg
pop
fdivs
or
and
pop
jmp
and
mov
jge
arpl
popf
jne
sbb
sub
ss
push
push
mov
popa
rorb
pop
sbb
xchg
mov
or
mov
pushf
pop
mov
mov
mov
popf
sbb
jle
mov
mov
fldenv
lea
pop
addr16
jbe
test
mov
scas
push
lods
out
mov
outsb
fdivs
pop
fnsave
jns
mov
dec
pop
imul
sarl
bound
mov
lock
mov
test
rcll
xlat
mov
vorps
lea
leave
mov
cmpb
push
fnstenv
push
jo
mov
pop
shll
imul
out
push
or
xchg
fucomip
insl
repnz
adc
fwait
nop
xor
pop
popf
push
pushf
movsl
push
bound
popa
nop
push
push
pusha
cwtl
repz
sbb
inc
inc
sti
test
push
test
pop
push
jne
cmp
divl
out
jg,pn
jmp
xchg
or
jecxz
push
mov
jge
addl
lock
imul
fnstcw
jecxz
jge
jecxz
xor
pop
roll
jecxz
or
jmp
imul
mov
add
in
out
mov
lea
roll
inc
cmpsl
xchg
ror
loopne
ds
orl
mov
loope
aas
push
insw
int3
shl
adc
xchg
push
lea
dec
pop
sub
addr16
mov
mov
test
jno
add
int
jmp
pop
scas
orl
pop
mov
pop
dec
sbb
cmc
std
test
test
pop
pop
sar
pusha
addl
pop
jge
or
xchg
jmp
jbe
push
push
pop
jae
jbe
fnstcw
aaa
add
add
shrl
xchg
jne
push
inc
cmovo
add
mov
xor
mov
jbe
in
sub
inc
mov
sub
jae
sbb
fidivs
mov
les
adc
mov
jo
jg
or
pop
int
jne
mov
fstps
insl
shlb
dec
jmp
xchg
mov
mov
insl
add
mov
addr16
mov
je
enter
dec
push
pop
scas
movsb
adc
js
mov
pop
sub
fldcw
pop
test
adc
sub
pop
cmpsb
mov
xchg
mov
cld
in
cli
add
movsb
xor
or
cli
push
dec
mov
inc
dec
inc
in
jp
mov
inc
ret
out
std
dec
sub
in
and
mov
jl
push
daa
xchg
mov
sbb
or
mov
push
out
dec
int
pop
adc
adc
xor
test
inc
dec
and
pop
mov
xchg
jns
mov
ja
pop
dec
sub
rol
imul
add
shl
sbb
cli
clc
push
mov
inc
dec
mov
adc
pop
dec
gs
cmp
add
shrb
dec
mov
daa
cltd
leave
pop
sbb
push
les
mov
scas
mov
cmp
cs
sub
xor
shll
insl
in
lock
dec
repz
and
mov
dec
dec
outsl
fistps
mov
pop
dec
arpl
repnz
pop
sub
mov
cmp
cmp
mov
mov
inc
test
mov
or
mov
test
pop
test
xchg
mov
dec
push
in
movsb
dec
insl
daa
inc
lahf
jb
xchg
mov
fisttpl
adc
jns
xor
loop
mov
lods
adcb
add
faddl
mov
mov
cmp
orb
push
in
cmp
sub
cli
jle
and
mov
add
aas
lcall
push
sahf
cmp
dec
mov
in
adc
dec
or
or
mov
xchg
and
xor
adc
dec
cli
das
xchg
mov
xor
add
movsb
jg
push
in
jmp
jge
push
stos
sarb
cld
inc
das
mov
int
push
and
inc
stos
dec
xchg
cld
xorb
fwait
pop
add
addl
jno
out
in
mov
push
pusha
or
rep
cmp
pop
dec
sub
ja
fldl
or
push
nop
adc
in
dec
sti
cmp
inc
sbb
add
and
ret
xchg
dec
jno
cmp
insl
mov
pop
push
mov
fcoms
mov
insl
and
mov
add
aad
jno
push
call
repnz
pop
xor
cmc
aad
adc
xchg
inc
push
lds
push
mov
xchg
fisttpll
jns
int3
xchg
xor
fnstsw
in
daa
jns
fs
bound
fld
jp
and
pop
int
aam
mov
insl
xor
shlb
xchg
call
pop
jl
adc
inc
xchg
push
lock
jecxz
nop
call
rcl
mov
inc
rcll
std
loope
inc
clc
push
std
insl
insl
movsb
inc
jge
addr16
inc
fldenv
movsl
jne
outsb
jg
mov
aas
bound
lods
add
push
jge
ds
popf
xor
in
sti
icebp
loope
lock
xor
fidivl
sahf
xor
pop
mov
imul
pop
xchg
sbb
lret
xchg
jge
lock
rcrb
mov
mov
imul
aam
push
mov
mov
lret
cmp
lret
ret
xor
pop
in
fwait
xor
pop
push
sub
and
xor
leave
inc
xchg
mov
sbb
jge
imul
mov
int
xchg
lea
pop
mov
mov
jae
sbb
js
adc
dec
push
insl
mov
pop
jae
test
loope
xchg
mov
int3
daa
jo
loope
outsl
pop
adc
outsl
rcll
dec
xchg
movsb
inc
mov
push
or
cli
leave
jmp
jo
pop
push
fnsave
mov
mov
mov
adc
and
int3
xor
lock
xor
lret
adc
or
pop
dec
scas
cli
sub
and
jl
xchg
iret
mov
sub
ret
jecxz
dec
ficomps
sbbl
mov
fidivrs
lods
into
xor
aam
push
jbe
xchg
or
add
into
test
jmp
adc
sbb
xchg
into
jge
popf
pop
xchg
loopne
mov
psubsw
aas
rol
mov
psubusb
std
jl
rsm
and
cmpsl
mov
movsl
arpl
fsubrl
decl
movsl
jmp
jmp
popf
push
lea
jmp
gs
int
pop
mov
push
popf
or
mov
or
std
aad
sahf
dec
arpl
or
shl
mov
jns
imul
insl
out
fnstcw
lcall
gs
lods
sub
divl
push
and
push
and
int
sbb
jns
or
ret
pop
les
inc
iret
pop
xlat
and
bnd
es
pop
popa
aas
jmp
mov
xchg
fldl
insl
std
sbb
lcall
cli
shlb
mov
in
add
jle
stos
mov
int
ss
xchg
xchg
jo
xchg
loope
adc
adc
jp
ja
mov
fwait
loopne
sub
jmp
mov
outsl
out
in
arpl
jmp
mov
out
pop
repnz
mov
xchg
ljmp
mov
out
jp
xlat
mov
bound
pop
pop
jge
push
es
pop
push
insb
xchg
call
and
aam
insl
sub
pop
in
enter
js
jge
push
cmp
nop
insl
or
into
or
pop
clc
dec
push
xchg
stc
shll
cmp
adc
mov
arpl
xchg
add
add
jno
es
insl
cmc
cmp
nop
enter
xchg
repnz
stos
pusha
test
and
xchg
insl
icebp
shrb
test
je
pushf
dec
mov
jp
jo
push
mov
jmp
jmp
add
insl
in
cmc
in
scas
jo
adc
lds
loope
jle
lcall
add
mov
fistpl
test
pushf
push
cli
sub
outsb
pop
sbb
xchg
xchg
sbb
inc
pusha
mov
sub
loope
push
pushf
out
xlat
lahf
xchg
sbb
add
aad
scas
or
bound
insl
insl
rcll
pop
sbb
shll
inc
push
jae
mov
mov
push
push
insl
into
jno
gs
push
pop
movsb
inc
test
jno
data16
mov
cmp
inc
jno
bound
imul
lea
push
je
mov
xchg
push
push
mov
mov
pushf
mov
imul
add
mov
cmp
sub
fidivrs
dec
cmc
outsb
xchg
adc
in
js
push
je
xchg
sub
cmp
add
jmpw
pop
imul
mov
mov
stos
fistl
imul
push
add
adc
std
js
push
mov
es
std
je
dec
cltd
mov
icebp
push
xchg
test
lock
mov
cmc
sarb
push
jmp
inc
push
aas
mov
jae
and
loope
insl
inc
sub
xchg
sbb
inc
mov
outsl
sbb
lret
add
in
sub
dec
std
insl
lret
add
cmpsb
test
xchg
inc
lahf
mov
subb
insl
lret
test
xor
inc
pop
mov
jns
insl
sbb
lcall
mov
sbb
xor
jmp
pop
cmpsb
mov
imul
add
mov
insl
shll
xchg
jno
cmpsb
pop
cld
push
jae
adc
mov
mov
dec
insl
fldl
pop
test
cmpsb
xchg
push
jno
aas
inc
int
push
mov
mov
xlat
shl
push
mov
xor
xchg
test
pop
inc
sbb
movsl
mov
sahf
mov
test
xor
movsb
decb
insl
xchg
push
dec
lods
pop
cmp
aas
jno
rcr
movb
or
in
dec
jmp
sahf
daa
cmpsb
insl
mov
lea
je
push
add
stc
mov
insl
jae
xchg
lret
int3
pop
mov
pop
int3
xchg
testl
push
ret
adc
jno
pop
sbb
jle
daa
adc
adc
dec
and
xchg
xor
xchg
jmp
and
mov
je
mov
adc
xchg
cmp
or
loope
mov
pop
lods
mov
add
xchg
in
sub
inc
clc
push
in
fimuls
test
push
dec
push
outsl
loopne
ret
pop
push
lods
in
add
es
adc
adc
xor
xchg
dec
mov
sub
cmp
jnp
gs
addr16
mov
std
sub
gs
mov
sarb
mov
mov
jne
mov
pop
jge
enter
jmp
test
imul
int
je
test
stos
pusha
add
xchg
adc
popa
test
je
test
imul
xchg
mov
jns
push
pop
jo
outsb
lahf
aad
jbe
adc
lea
mov
std
and
lret
and
xor
scas
add
shlb
popa
mov
push
int
dec
insl
jb
xchg
mov
aad
mov
inc
imul
pop
pop
xchg
mov
fucomp
jbe
out
ficomps
nop
test
fnstcw
cwtl
lea
stos
mov
sbb
ret
mov
pop
adc
adcl
mov
outsw
lea
mov
aad
xchg
lods
stos
sbb
mov
xchg
repnz
ret
push
insl
imul
pop
adc
jmp
dec
lcall
or
jbe
sbb
bound
mov
ss
dec
sub
cs
imul
adc
pop
iret
cmp
fmuls
adc
lock
fstpt
pusha
dec
in
cwtl
call
cmp
adc
aaa
scas
fidivs
jg
mov
xor
lahf
inc
ret
dec
jmp
ds
rcr
fnsave
imul
or
push
mov
adc
push
addl
int
dec
cmp
sub
imul
dec
outsb
ds
out
add
adc
insb
pop
imul
aaa
call
cmpsb
cmp
aas
jnp
mov
fiadds
pop
jecxz
pop
cmpsl
fwait
xor
jo
cmp
popa
sub
or
nop
dec
pop
fiadds
into
clc
jge
lret
ss
dec
mov
sbb
stc
cld
adc
test
cmp
pop
sbb
fistpll
fsubrs
dec
or
dec
pop
faddl
mov
push
adc
daa
out
call
ds
push
adc
inc
sub
leave
and
lods
xor
daa
jae
lods
fidivrs
in
es
int
mov
sbb
aad
pop
outsb
sti
dec
dec
mov
mov
mov
xchg
adc
das
sbb
mov
pop
data16
mov
push
daa
sbb
xor
pop
ja
dec
lret
sbb
vmread
stc
mov
jge
sub
or
inc
mov
push
insl
aas
jp
mov
pop
lahf
test
outsl
jnp
sub
push
mov
sub
push
movsl
aam
mov
loopne
dec
xlat
or
std
imul
rolb
and
xor
xchg
xor
sarb
aaa
arpl
hlt
xchg
enter
popf
mov
daa
in
lahf
dec
cli
xchg
adc
mov
out
enter
dec
loopne
xor
sarb
mov
dec
fs
mov
test
fmuls
pop
stc
andb
ret
sbb
dec
sti
lret
jbe
test
imul
std
pusha
pop
popf
dec
push
mov
fstl
adc
rorl
inc
mov
xchg
das
mov
dec
jl
mov
outsl
fcomps
lock
addr16
push
or
add
sbbb
sbb
mov
fsub
das
lods
rorb
cmp
stos
adc
xor
jle
push
fmuls
scas
repnz
call
loop
xor
inc
dec
jp
sbb
cmpb
push
or
mov
imul
outsb
stos
call
or
mov
or
lds
adc
dec
push
mov
mov
or
mov
sbb
pop
jne
mov
push
cli
mov
cmpsb
sahf
out
in
in
pushf
xor
or
pop
or
inc
adc
pop
pop
xor
add
adc
add
xchg
and
fnstcw
jp
cmp
mov
daa
adc
aaa
add
dec
repnz
and
lret
inc
icebp
dec
push
push
dec
testb
mov
cmp
xor
or
add
bnd
cmp
mov
mov
iret
mov
cwtl
inc
jno
and
pusha
xchg
daa
pop
push
dec
fisttpll
pop
hlt
mov
inc
dec
test
add
jg
jne
push
pop
cwtl
pop
pop
adc
scas
mov
sub
push
sub
jecxz
push
xchg
movsb
push
repnz
cmp
stos
or
lea
dec
mov
dec
xchg
sbb
ja
dec
jg
fisubl
xor
or
pop
push
pop
ja
iret
push
pop
mov
sub
out
push
sti
cltd
or
cli
or
push
mov
adc
sub
jmp
cmpsb
pop
mov
pop
fnstsw
add
mov
orl
shll
int
rcrb
and
shlb
popa
push
pop
adcl
jns
xor
and
jbe
les
loope
push
int3
iret
fnstenv
pop
in
outsl
mov
cmp
jl
push
sbb
loope
pshufw
insl
in
shl
and
mov
adc
inc
sub
mov
iret
pop
push
addr16
push
insl
data16
movsl
cli
shrb
les
scas
scas
xchg
loope
imul
aam
pushl
xchg
enter
xchg
lock
inc
sahf
cmpl
or
stos
hlt
aam
aas
pop
mov
in
aad
mov
lret
dec
gs
dec
out
fnsave
pushf
pop
or
jns
insl
popa
sbb
shrb
pop
pop
and
je
sub
or
pop
insl
gs
loop
pop
sbb
into
xlat
sbb
rorl
pop
addr16
jg
outsl
into
push
jne
mov
nop
push
pop
or
fs
jmp
cmpsl
dec
enter
jg
xor
push
pop
jbe
aaa
mov
cmp
dec
inc
lea
push
lock
lret
mov
add
imul
push
gs
mov
insl
dec
popa
mov
push
sub
adcl
ret
xchg
jmp
or
lea
test
dec
leave
ja
adc
pop
cltd
mov
arpl
pextrw
mov
pushf
daa
loop
sub
push
and
or
pop
sbb
push
inc
fcoms
fsts
push
mov
sbb
ficompl
push
test
cmpsl
xchg
sub
popa
aam
rcll
lods
fnstenv
dec
lock
jl
idivb
int3
mov
loopne
cmp
adc
sbb
ss
push
leave
adc
out
sub
or
xor
orb
test
arpl
repnz
sbb
jmp
aaa
pop
enter
push
mov
xor
das
pop
arpl
cmp
and
loop
add
fnstenv
cmpsb
push
jno
xor
jno
jo
sbb
push
jns
xchg
dec
push
push
cmc
das
int3
dec
dec
flds
mov
jb
ljmp
lea
sar
fdivrs
inc
and
sbb
or
lcall
or
cld
int
push
and
mov
add
rcll
cmpsl
mov
and
mov
test
push
cmp
or
dec
pop
dec
sub
mov
dec
and
inc
dec
lea
inc
orl
adc
xchg
pop
je
bnd
and
out
and
mov
sub
rcr
scas
les
dec
aam
sbb
lock
dec
jnp
test
mov
inc
pop
gs
data16
sub
mov
stc
jmp
and
dec
or
xchg
imul
dec
jl
push
jge
loop
repz
jbe
mov
les
push
pop
xor
sub
push
xchg
dec
cmp
icebp
aam
jo
dec
js
xchg
orb
mov
dec
mov
pop
mov
dec
cltd
jmp
les
pusha
jp
mov
inc
pop
jbe
sub
and
insb
outsb
pop
xchg
add
cmpsb
dec
mov
xchg
pop
jo
test
ficoms
sarl
sub
or
inc
sub
xorl
cmpsl
dec
and
or
outsl
adc
lret
test
jae
ss
mov
jb
sub
pop
lock
pop
mov
jg
cmc
test
inc
cmp
mov
gs
push
mov
imul
xchg
scas
jp
inc
xor
cmp
jnp
cli
dec
outsb
daa
repnz
push
xor
icebp
fildll
mov
push
loope
adc
sub
or
pusha
or
and
dec
pop
and
sbb
inc
dec
imul
mov
ret
decl
in
mov
andl
leave
dec
pop
xchg
fdivrs
adc
add
fmull
pop
cld
cmp
mov
jecxz
dec
lods
mov
in
cmp
sub
data16
pop
inc
jo
in
nop
int
insl
mov
rolb
xlat
movsl
mulb
decb
mov
mov
sbb
mov
jnp
shll
fsubs
loop
je
xchg
dec
jnp
jo,pt
xlat
fisubl
les
add
push
and
bound
dec
or
add
test
pushf
sbb
adc
repnz
xchg
shlb
mov
or
es
rcr
dec
inc
fs
pop
lret
sub
pusha
dec
sbb
and
inc
or
rorb
mov
mov
xor
jb
orb
test
mov
jecxz
sbb
cli
rorb
aad
xchg
adc
xchg
sti
pushf
das
dec
xor
cld
dec
mov
xchg
dec
sbb
fmulp
jle
inc
leave
inc
mov
sarb
ror
lcall
push
and
mov
arpl
repz
movsl
cmp
lds
int3
xor
insb
lods
ja
clc
mov
sbb
mov
scas
xchg
lods
adc
push
jge
xlat
ja
dec
in
scas
sub
lahf
cmp
adc
inc
dec
outsb
push
xchg
or
mov
push
push
int3
popa
xor
xor
sub
jb
mov
or
dec
fimull
pop
outsb
push
inc
iret
dec
rcrb
dec
xorb
lret
std
vcmpps
push
dec
and
mov
pop
cs
add
xor
enter
iret
mov
and
lret
dec
addb
test
sub
xor
cmp
sbb
jl
dec
pop
repnz
add
imul
dec
mov
push
mov
rcrl
jo
rol
dec
mov
dec
cs
lret
lea
jns
pop
push
aaa
movsb
push
insb
aam
stos
jge
fsubrp
xor
lcall
cwtl
or
call
stc
loopne
fucomip
std
cli
sbb
push
imul
int
lret
dec
sub
and
inc
jecxz
rcll
push
imull
leave
cmpsb
das
cwtl
iret
pop
pop
pushf
dec
fsubrs
stc
icebp
dec
mov
ljmp
add
stos
sub
std
xor
mov
dec
in
dec
mov
push
xor
cmp
cld
sub
and
jmp
xchg
les
repnz
and
das
push
push
leave
sti
pop
xor
stos
int3
push
jae
fsubs
pushf
pop
lret
jnp
dec
sti
fcmovbe
mov
dec
jl
dec
out
cwtl
fisttpll
lret
dec
cmc
shrb
xchg
dec
in
xchg
fsubrl
inc
push
xor
and
addl
mov
dec
lcall
push
dec
inc
fistpll
dec
dec
jp
add
movsl
js
dec
sahf
pop
daa
cmp
xor
cmpsb
jo
add
xchg
out
push
adc
mov
lret
dec
xorl
arpl
dec
call
fimull
inc
sub
fistps
outsb
outsl
dec
sbb
dec
cmp
jmp
ret
mov
jo
leave
mov
xor
or
xchg
lds
stos
adc
fadds
dec
dec
fcmovu
ljmp
sub
inc
cmc
lret
std
and
add
inc
ss
dec
cmp
cmpsl
sbb
fs
popa
mov
fmuls
ret
test
iret
mov
cmpsl
jle
push
xchg
fldenv
orb
fnsave
sub
xchg
push
dec
sti
cltd
roll
dec
adc
pop
int3
jne
xor
clc
stos
cmc
sub
bswap
rep
cmp
xor
jae
andl
mov
data16
int
cmp
sbb
sbb
pop
pushf
and
test
cs
out
popl
jo
xchg
insl
dec
outsb
mov
push
jecxz
je
ud0
jle
loop
jmp
mov
fimuls
leave
add
pop
and
or
pop
pop
frstor
shrl
xor
xchg
icebp
xchg
stc
xchg
pop
bt
shrl
shlb
int
popf
jne
pop
jae
sub
mov
sbb
pshufw
out
inc
lret
loope
stc
lds
data16
movb
and
cmp
pusha
xor
fcoms
inc
xchg
add
or
insl
inc
adc
add
mov
add
leave
cs
pop
rorb
mov
das
jo
and
push
jmp
dec
lret
mov
and
xor
dec
in
fwait
outsb
daa
pmaxub
pop
push
pop
test
xchg
insb
cmp
loop
push
add
and
ud2
movsl
inc
lret
dec
dec
cmc
xor
pusha
filds
sti
mov
and
js
dec
clc
xchg
cs
pusha
mov
test
cli
fdivp
rol
ret
decb
outsb
aaa
addr16
pop
and
pop
push
push
sarl
dec
or
cli
mov
xor
pushf
xchg
cmp
leave
jb
ljmp
aam
mov
stc
mov
jne
clc
ret
adc
test
and
mov
dec
dec
fdivr
or
sub
dec
inc
cmpsb
pop
mov
lret
jo
sub
cmp
js
dec
roll
daa
mov
push
pop
jmp
popa
testl
int3
rorb
dec
inc
xchg
nop
or
test
stos
dec
aas
sbb
imul
mov
aam
movsb
pusha
jns
cmp
in
loop
rol
shr
data16
mov
inc
dec
adc
jecxz
in
mov
dec
and
mov
sbb
xor
adc
inc
fldenv
sub
ja
aas
mov
jo
pop
jnp
cmp
mov
imul
dec
or
mov
pushf
lock
dec
cmp
sbb
xor
fwait
dec
mov
ret
mov
push
inc
stos
lahf
int
add
push
xchg
lcall
mov
push
cwtl
sbb
or
cs
leave
lods
sub
jb
cli
inc
add
lds
push
xchg
mov
dec
movsb
shll
jp
int
call
fs
push
pop
ret
leave
out
lret
xchg
dec
adc
xor
cmp
cs
cmp
jns
les
push
dec
hlt
cmpsb
xor
dec
jl
out
add
xchg
call
loop
cmp
sub
lods
jns
jno
aaa
rclb
inc
idivl
push
sub
fmull
dec
lods
and
jge
sub
popa
pop
negb
fs
aad
std
add
jp
mov
mov
rcll
push
jecxz
dec
out
adc
dec
cmp
cs
sub
xchg
dec
enter
test
fcos
dec
lret
jne
loope
xchg
lds
call
inc
out
pop
dec
pusha
cmpsl
incl
jl,pn
dec
lret
gs
dec
adc
jae
out
clc
mov
insb
arpl
das
push
pushf
add
pavgb
kmovw
fisttpll
push
push
dec
dec
aam
or
or
mov
cmp
ror
cmp
xor
adc
outsl
test
pop
cmp
enter
sub
pop
fstl
dec
xchg
pop
insl
mov
test
and
cmp
or
jne
mov
insl
or
sbb
dec
adc
daa
pop
sub
jmp
leave
dec
sbb
int
pop
adc
mov
adcl
insb
lret
jge
aas
mov
movsb
push
mov
sbb
lods
pop
dec
movsl
xchg
out
pop
hlt
cmp
add
mov
dec
icebp
daa
mov
rorl
cmp
dec
pop
lret
push
dec
movb
or
pop
add
mov
vpaddusw
dec
aaa
cmpsl
call
xchg
xor
jb
jns
xor
popa
jg
je
dec
cld
xchg
adc
cmp
stos
sbb
push
dec
pop
pop
xlat
dec
xor
cmpsl
ret
lds
aam
mov
or
cmpsb
add
test
mov
in
xchg
lock
xor
jmp
nop
mov
pop
mov
mov
inc
mov
insl
add
in
jecxz
push
jo
jb
xchg
cmp
mov
dec
xchg
jle
lret
dec
clc
cmp
or
xor
or
sub
push
test
mov
test
jp
dec
in
je
pop
mov
test
pop
call
and
and
loopne
and
dec
inc
mov
and
dec
xchg
jmp
dec
aaa
es
mov
arpl
mov
in
jae
fdivl
mov
fimuls
cltd
add
jno
sub
push
int
cld
jo
pop
jbe
inc
lea
loopne
xor
mov
dec
cmp
sub
xor
adc
pushf
jmp
sti
cmp
or
scas
mov
sub
aaa
jnp
or
outsb
dec
mov
jmp
je
lods
lret
jnp
sub
xchg
mov
mov
aam
jp
mov
pop
mov
and
and
dec
or
in
es
fbstp
push
xchg
cltd
cmp
jns
or
std
adc
and
imul
cmp
dec
ljmp
mov
sub
addr16
fs
mov
mov
dec
aas
pop
clc
fisubs
push
addl
xchg
pop
ds
xor
fwait
scas
cmp
rcl
or
jns
push
add
lods
fcoms
push
cli
jnp
push
sbb
pusha
cmpsl
or
inc
mov
dec
call
add
jl
xor
int
and
hlt
leave
push
pop
insb
ja
inc
dec
scas
push
mov
inc
mov
jl
adc
fisttpl
es
iret
nop
mov
pop
in
dec
fsts
js
xchg
inc
jmp
rcrb
orl
and
shlb
nop
add
push
mov
and
ret
cli
frstor
push
xchg
sub
jge
mov
loopne
cld
popa
xchg
inc
fisttpll
adc
dec
dec
cmpl
outsb
sbb
subb
fstpt
adc
xchg
das
jle
outsb
dec
sahf
je
popf
jnp
sar
repz
and
aam
jnp
nop
mov
insb
ror
repnz
cmp
cmpsb
xchg
subl
stos
sub
push
es
repnz
adc
nop
xchg
xchg
xchg
insl
lds
aaa
jno
or
xchg
jae
sbb
push
cmc
inc
and
leave
sub
ret
dec
push
aaa
mov
cld
jp
mov
jns
dec
cmp
pop
cmpsb
dec
mov
sub
loope
add
rorl
outsb
push
aad
xchg
cmpb
dec
test
jno
clc
pop
shll
mov
dec
aad
adc
insb
pusha
cmpsl
cmp
xlat
dec
dec
sub
pushf
mov
scas
fists
mov
test
leave
and
add
fdivr
mov
push
mov
aam
repnz
mov
fists
xor
daa
adc
sbb
cmc
jb
dec
mov
ret
lds
lret
rclb
cld
pusha
test
fnstcw
or
adc
data16
call
out
clc
inc
dec
sbb
jg
and
dec
shrl
sub
or
xor
cld
sbb
inc
xchg
mov
xchg
aam
pop
rorb
jg
sub
ljmp
pop
stos
mov
adc
pusha
xor
iret
xchg
lret
popf
call
sub
fwait
pop
or
push
mov
add
mov
dec
or
jmp
pop
lods
popf
repnz
addr16
pop
test
dec
fucomi
test
jae
fwait
jl
lods
xchg
ret
cmp
dec
xor
stos
movl
dec
xor
shrb
pop
adcl
ljmp
inc
stos
push
iret
inc
mov
add
push
inc
pop
adc
imul
jbe
mov
in
imul
dec
fs
xchg
loope
mov
rorb
ret
jno
cli
call
jecxz
add
nop
jmp
pop
mov
std
pop
sbb
pop
outsb
add
iret
dec
pop
les
pop
mov
cmp
xor
arpl
dec
cli
aam
xor
inc
movsb
mov
or
test
sbb
dec
add
nop
int
xchg
pop
jbe
mov
loopne
dec
jno
sub
cmp
jno
add
pop
cs
mov
push
out
cmp
dec
add
jne
leave
jne,pn
aas
xchg
jp
cmc
jp
xlat
loopne
mov
test
add
movsl
add
push
pop
sbb
pop
out
movsl
dec
pop
dec
imul
inc
sti
and
mov
lcall
hlt
lods
mov
sar
pop
dec
inc
and
addr16
in
cmpsl
test
lds
mov
pop
jae
adc
orl
push
loopne
insl
ret
sub
dec
repnz
jnp
test
cs
cmp
aaa
pop
es
dec
xchg
sbb
negb
dec
hlt
stos
adc
xchg
cmp
rcrl
lret
add
popa
adc
push
push
imul
push
and
and
ret
inc
push
clc
call
je
dec
mov
test
sarl
jge
jb
outsl
in
shlb
aam
ljmp
adc
xchg
dec
and
fildl
dec
xchg
fbld
mov
add
lret
rcrl
cmp
pop
xor
xor
jb
lods
int
mov
loopne
xor
rorb
inc
and
clc
inc
xor
cld
inc
mov
xchg
jmp
mov
dec
and
lahf
outsl
mov
mov
add
les
push
adc
mov
dec
cmp
hlt
lret
pop
and
mov
xchg
adc
test
outsl
add
lahf
stos
lea
xchg
sarb
rolb
in
pusha
adc
bound
imul
dec
mov
jp
arpl
mov
dec
pop
ds
cmp
adc
mov
clc
cwtl
push
mov
mov
lock
adc
dec
add
pushf
loopne
dec
jmp
ljmp
xor
pop
lcall
daa
inc
std
mov
fldenv
cmp
adc
addr16
dec
push
cmp
cli
dec
cltd
pop
xchg
mov
dec
das
es
outsb
mov
push
adc
imul
push
xor
adc
dec
mov
into
sub
adc
or
xorb
dec
pop
mov
mov
dec
inc
mov
rorb
mov
cmp
mov
mov
repnz
imul
push
dec
imul
leave
push
push
push
scas
nop
inc
cmpsb
or
mov
mov
daa
sbbl
fisttps
mov
push
popf
cmp
ljmp
sub
frstor
scas
insl
or
loope
idivl
jle
push
xchg
test
mov
cmpsl
dec
jge
cmpsb
adc
or
lea
in
pop
inc
popf
pop
mov
in
data16
rorl
xchg
ljmp
adc
jl
jne
push
xchg
xchg
aad
dec
negl
jnp
stos
out
inc
mov
int
xchg
cmp
mov
add
sarl
gs
sbb
outsb
pop
mov
xchg
call
or
xlat
nop
out
fnstsw
popf
ja
aam
sbb
sub
push
aaa
dec
fucomp
inc
loop
cmp
pushf
xchg
push
or
int
push
xchg
dec
movsl
mov
add
cltd
mov
inc
ss
pop
xchg
pop
sub
jns
or
ja
pusha
sub
aad
fldcw
mov
daa
es
dec
test
sub
jecxz
xor
stc
xchg
test
inc
inc
les
sbb
jae
daa
andl
push
mov
or
fs
jo
movsl
dec
or
pop
aaa
jno
movsl
iret
pop
aaa
sub
sub
mov
pop
scas
xor
jge
mov
jno
mov
aad
dec
xchg
and
pusha
popa
cs
popa
push
sahf
add
adc
pop
cmp
sbb
push
sub
fisttpll
xor
push
sarb
and
push
sbb
mov
adc
inc
xlat
pop
mov
lods
popf
mov
aas
push
jbe
sub
adc
jo
mov
mov
data16
pop
jne
and
gs
nop
jmp
fisubrs
pop
cmpsb
and
imul
cmp
jbe
or
int
pop
xchg
dec
dec
es
pop
int
sub
or
pop
or
or
mov
out
jmp
ficoms
dec
xlat
cmp
mov
or
inc
lcall
loope
in
pop
jno
popf
jmp
cmp
push
int
imul
js
cmc
inc
add
icebp
icebp
test
xchg
jge
insl
jmp
stc
dec
pop
subl
add
fildll
jne
pop
idivl
std
int3
or
jns
xor
xchg
stc
rcr
dec
pop
int3
in
xchg
push
leave
pop
mov
jne
add
sarl
inc
or
mov
pop
pop
aam
mov
jae
lcall
mov
iret
fisttpll
insl
xchg
cltd
push
ror
jae
insl
adcl
add
sbb
aas
pop
adcb
sub
xchg
popf
sub
sub
dec
adc
xor
mov
add
sub
cli
and
test
lods
pusha
and
mov
into
adc
cld
js
mov
enter
test
and
movsl
xchg
xor
or
cmp
jno
out
subl
mov
movsl
xchg
pop
cmp
scas
mov
cltd
aaa
movl
dec
and
cmp
clc
push
sbb
push
xchg
jo
mov
test
jmp
jne
stc
cmp
jne
aad
pop
and
mov
jno
dec
mov
cmc
mov
sub
and
sub
jg
pop
addl
inc
pop
add
adc
or
mov
jae
and
add
add
insl
lret
xor
pop
imul
sub
push
sub
push
jo
cmp
rorl
popa
inc
sbb
pop
pop
outsl
sarl
inc
dec
lock
popl
lret
adc
test
mov
mov
movsl
dec
in
cmc
popf
imul
push
or
rol
insl
subl
shr
pushf
add
xchg
test
insl
push
pop
fidivrs
pop
addl
call
pop
repnz
ja
dec
addl
adc
arpl
inc
mov
out
pop
jo
xchg
jge
xlat
sub
nop
aaa
sub
rcrb
insl
mov
mov
push
arpl
lea
gs
sbb
or
xchg
jne
arpl
adc
xchg
popa
lds
leave
and
popl
gs
cld
ja
sbb
bound
mov
in
add
sti
sbb
orl
jmp
jbe,pt
inc
std
mov
jecxz
lea
jns
in
lods
mov
push
mov
cmc
push
insb
cld
inc
xchg
cmc
xor
inc
fcoms
dec
pop
xor
inc
mov
nop
pop
daa
push
jo
ja
stos
cwtl
daa
je
xor
aas
movsl
dec
pusha
test
daa
mov
pop
jno
out
int
mov
dec
pop
dec
jl
sbb
das
inc
insb
dec
pop
sbb
mov
push
fs
aad
xchg
mov
mov
push
jge
pop
mov
mov
inc
fists
xor
cmp
movups
iret
xchg
js
aaa
dec
mov
mov
push
push
push
rorl
mov
popf
dec
daa
addl
inc
push
jg
lods
rcl
std
cmp
data16
pop
sub
loopne
nop
jmp
js
int
mov
pop
adc
mov
leave
mov
imul
shrl
mov
loope
insb
nop
inc
sti
push
hlt
dec
mov
inc
jo
js
mov
fbstp
leave
notl
mulb
fld
mov
insl
sbb
cwtl
clc
ja
push
stc
push
lds
lret
pop
rolw
xor
xlat
popl
and
into
outsb
std
popa
fistpll
popa
push
rcr
lea
jo
push
nop
outsl
mov
enter
js
add
dec
insl
pop
std
scas
sub
fs
pop
adc
int
xor
cltd
mov
mov
xlat
or
pop
pop
mov
sub
and
inc
test
fsubrp
aad
sbb
mov
test
cld
and
xchg
aaa
movl
rorl
data16
cmc
aaa
movsl
xlat
dec
stc
popf
cmp
dec
test
pop
movsl
int
push
shr
gs
cli
sub
scas
insl
fisttpl
inc
xor
movsl
dec
xor
add
call
outsl
pop
cltd
scas
pop
orl
std
pop
push
test
sbb
cmp
subl
dec
popa
cmp
cwtl
dec
xchg
push
fmuls
inc
adc
clc
jmp
push
aas
dec
mov
scas
cs
out
push
jecxz
add
out
dec
fildll
clc
mov
rorb
pushf
sbb
loopne
dec
out
cmp
mov
pop
add
popf
in
iret
and
decb
and
scas
mov
inc
jae
inc
xchg
gs
call
push
xorb
cmp
mov
or
cs
dec
xchg
xor
cmp
mov
dec
dec
jae
jno
mov
or
dec
repnz
out
ret
mov
iret
sti
les
dec
xlat
adc
test
or
cmp
les
mov
adc
mov
add
stos
mov
enter
cs
push
cmp
shl
jns
pop
push
jl
mov
sarb
popa
mov
and
sbb
add
dec
xor
sti
test
dec
cmp
incl
sub
dec
jns
les
lret
shlb
dec
je
push
cmp
jge
stos
movl
push
ds
shl
mov
loop
arpl
or
dec
mov
sti
rorl
push
adc
xlat
test
xchg
xor
push
js
subb
loop
inc
jge
insb
jg
das
add
enter
pop
lds
or
lcall
std
mov
sbb
lea
fcoms
cmp
aam
mov
xor
jmp
mov
jb
mov
xchg
setne
lret
cmpsb
dec
pop
xchg
orb
punpckhdq
in
test
mov
loopne
jb
scas
sub
insl
xchg
enter
popa
xor
gs
aas
sti
loopne
lock
test
loope
jbe
cmp
incl
or
jge
call
add
pop
mov
or
adc
shlb
push
jle
cmp
pushf
addb
pushf
push
negl
lret
jp
xor
jmp
testb
mov
add
push
and
push
rcrb
hlt
sti
dec
outsl
test
nop
sub
xor
jne
pop
mov
inc
jle
cwtl
rol
cmp
les
inc
lea
jge
movsl
nop
daa
xor
aaa
add
out
push
aaa
sub
outsb
xchg
sub
jl
icebp
push
lock
int
rcll
lea
cmp
scas
pop
xchg
icebp
rclb
lods
leave
mov
movsl
mov
push
shll
test
mov
inc
cmp
jecxz
or
pop
mov
sub
loope
jo
lods
arpl
clc
sub
push
jo
mov
fisubs
pop
aad
lea
or
push
sub
jns
loope
xchg
jne
ljmp
test
xchg
xchg
aaa
sbb
push
sub
sbb
popf
or
ds
insl
rclb
movsl
fnstenv
sti
jge,pt
aam
fstl
in
int3
mov
mov
les
dec
addr16
push
xchg
and
das
es
mov
xchg
dec
inc
mov
ds
mov
imull
lret
aad
pop
xlat
dec
mov
outsl
push
mov
outsl
lea
or
mov
outsl
aas
into
rorl
push
test
in
cmp
imul
pop
mov
cltd
hlt
sub
lods
mov
push
imul
jns
aad
inc
cmp
push
inc
mov
cmp
dec
test
pop
lcall
sbb
sub
testl
xchg
cmp
mov
popf
out
inc
mov
or
pop
daa
pop
testb
sub
pop
std
ljmp
in
out
adc
push
jle
mov
pop
mov
popfw
jge
mov
push
pop
push
inc
lret
cmp
lcall
xchg
xchg
mov
mov
push
out
imul
adc
repz
cld
fcoml
clc
dec
test
pop
dec
call
mov
mov
mov
push
in
jl
jle
imul
sbb
dec
cmp
xchg
clc
sub
or
mov
fxch
fstl
pop
cmp
or
cli
adc
divl
stc
xor
dec
push
sbb
imul
into
cmpsb
lods
push
pop
dec
jmp
and
cmp
cmp
das
add
es
jl
fs
push
nop
outsb
add
lret
out
push
loop
mov
mov
inc
cs
dec
adc
sub
fisubl
mov
test
push
movsl
lea
retw
jbe
xlat
imul
aad
mov
std
xchg
or
adc
rcll
lods
in
outsl
and
test
mov
pop
push
cs
xor
mov
jb
out
or
sbb
stos
cmp
push
push
mov
imul
add
dec
roll
out
jl
rorl
inc
mov
or
fisubrl
sub
dec
cltd
pop
push
fidivs
push
dec
repnz
push
pusha
inc
pop
mov
cs
nop
inc
xchg
cli
push
ret
mov
mov
dec
test
inc
sti
jns
sub
mov
sub
rcrb
movsl
inc
mov
pop
inc
or
add
add
dec
or
mov
mov
inc
ret
and
hlt
lods
jl
inc
xor
pusha
dec
mov
scas
dec
mov
add
add
push
aas
xor
test
mov
sub
dec
pop
push
and
adc
and
rorb
pop
lods
pop
inc
or
iret
inc
xchg
push
fisttpll
cs
loop
sbb
outsb
adc
les
imul
and
bound
sbb
adc
dec
or
fstpt
je
arpl
mov
or
sub
jae
adc
xlat
rcll
adc
call
fdiv
jmp
dec
push
xor
dec
shl
clc
cmpsl
push
lret
sbb
in
sub
dec
das
mov
push
pop
push
cltd
fisubl
icebp
movsb
mov
and
dec
cmp
cs
shl
sahf
adc
jb
pushf
add
cmp
pop
dec
ret
cmpb
dec
test
fstpl
dec
pop
xor
mov
xlat
add
adc
dec
call
mov
cmp
inc
inc
loop
xor
dec
mov
jecxz
dec
into
mov
jb
push
or
rcll
inc
dec
inc
dec
cmpsb
sarb
in
leave
sub
push
fadd
mov
and
push
idiv
dec
xchg
les
std
jnp
jp
lock
pop
sub
mov
mov
mov
dec
add
out
pop
clc
int3
mov
lds
cmpsb
sti
jecxz
xor
es
mov
imul
mov
scas
dec
mov
out
cmp
jbe
lods
rol
sub
add
or
cmpsb
pop
int3
arpl
out
dec
sub
push
ja
or
and
call
je
adc
jle
int3
xchg
xchg
pop
loopne,pn
xor
popa
stos
mov
xchg
jne
rcl
mov
cs
cld
out
cmp
or
dec
fs
inc
mov
call
sbb
ret
pop
and
add
pop
scas
lcall
aam
mov
cmp
fdivrl
fsts
mov
cmp
dec
ljmp
aaa
dec
mov
mov
jne
enter
mov
into
and
xchg
dec
mov
call
push
test
pop
out
inc
or
in
mov
sub
jecxz
push
push
xchg
int
mov
and
sub
out
pop
add
or
adc
out
or
push
je
sub
dec
ret
inc
dec
mov
cmp
movsl
aaa
bound
inc
pop
icebp
lds
dec
testb
dec
push
pusha
dec
nop
mov
pop
cmp
push
scas
movsb
shlb
pop
jnp
bound
nop
add
out
insb
xchg
add
daa
mov
movsb
cmp
pop
pop
xor
lods
dec
data16
mov
or
dec
test
loope
push
hlt
jb
dec
jle
call
jnp
add
dec
insb
sbb
xor
mov
imul
icebp
and
dec
xchg
divb
bound
roll
incb
rcrb
push
xlat
mov
mov
cmpsl
push
cmc
cmp
xor
push
aas
jmp
or
repz
or
imul
clc
cmp
dec
cmp
shl
dec
faddp
mov
push
xor
sub
sbb
dec
cli
int
das
ret
fistpl
stos
dec
add
add
dec
xchg
test
xor
push
dec
mov
dec
xor
ret
push
pop
fmul
dec
repz
jns
jae
lret
push
jmp
push
and
dec
cmpsl
fidivs
xchg
jbe
pop
call
push
shll
or
ds
push
daa
adc
push
lahf
inc
dec
orl
mov
dec
shlb
push
sub
and
jp
fbld
xchg
cmp
dec
ja
cmp
and
pop
mov
dec
add
ret
push
inc
cmp
cmp
sbb
mov
cmp
mov
push
cmp
es
out
lods
xchg
dec
pop
shll
imul
in
dec
inc
outsb
test
ds
pop
test
sub
scas
sub
mov
aas
lret
adc
jge
sbb
mov
dec
push
cwtl
and
ja
cmp
int3
cmp
rclb
push
clc
aaa
or
push
out
ss
dec
or
sbb
dec
aaa
cmp
test
adc
and
mov
es
dec
mov
lahf
loope
fisubrl
cmp
cwtl
sbb
shlb
pusha
inc
jp
xchg
lcall
hlt
movsl
out
call
mov
jo
test
je
cmovge
insl
imul
ds
add
push
lret
fisttps
pop
fidivrs
dec
jmp
test
add
shrl
out
cmpsb
pushf
xchg
dec
pop
add
or
push
arpl
movsb
mov
lret
sarl
adc
push
xchg
frndint
push
les
aaa
in
lahf
pop
xor
mov
enter
jo
mov
fnstcw
int
cmpsl
mov
push
pop
mov
out
sub
dec
mov
pusha
ss
mov
dec
and
lods
aad
addr16
call
cmp
mov
sub
inc
mov
aas
cld
repnz
in
xor
dec
xor
lods
push
dec
mov
add
sarl
and
sbbb
dec
inc
lret
adc
push
arpl
cmp
dec
test
xchg
pop
mov
stc
orb
cli
pop
into
xadd
fmull
dec
add
pop
lcall
dec
cmc
adc
fstpt
or
int3
xchg
inc
pop
lcall
dec
arpl
int
cwtl
mov
icebp
add
repnz
mov
rorb
cmp
mov
mov
push
mov
or
lret
pop
cmp
leave
cwtl
jmp
les
lods
pop
es
push
lret
mov
shrl
addr16
xor
pop
adc
aam
mov
repnz
in
lock
rclb
dec
jno
jle
ja
sar
xchg
xchg
add
mov
mov
ret
insl
mov
and
fs
ss
xor
lcall
rcll
jno
ljmp
fcoml
jo
daa
mov
push
fbld
xchg
mov
jno
sub
xchg
dec
push
lods
pop
popf
or
xor
xchg
push
dec
fstps
mov
push
or
jae
movsl
add
push
xchg
mov
test
mov
pop
stc
sub
push
dec
imul
push
fs
jp
mov
xor
mov
js
dec
aas
movsl
in
int3
iret
insl
mov
loop
out
jle
mov
les
pop
scas
psubusw
xor
cmp
gs
repnz
pop
pop
sbb
cmp
imul
jmp
test
inc
pop
in
pop
rclb
repz
in
mov
out
loope
out
mov
cmpsb
jecxz
or
fistpl
add
outsl
repnz
iret
icebp
test
inc
pop
repnz
mov
scas
in
sub
push
hlt
addr16
icebp
rcll
add
jmp
mov
jbe
pusha
inc
frstpm(287
icebp
nop
xchg
jo
adc
pop
pop
orb
icebp
push
insl
dec
std
repz
lods
pop
movsl
inc
push
mov
dec
lods
test
adc
test
test
cmp
mov
mov
pop
cmp
fnstenv
or
xchg
inc
js
pop
popf
icebp
lods
gs
js
stc
xchg
add
aam
icebp
outsl
jge
fsubrp
sub
xlat
and
pop
jmp
std
push
xor
push
std
jno
adc
test
stc
sub
pop
jge
icebp
push
pop
stc
rcl
mov
js
pop
icebp
xchg
xchg
int
insl
inc
and
outsb
out
push
jbe
sub
mov
xchg
dec
push
push
jmp
lret
loopne
mov
cmp
imul
jns
or
in
mov
outsl
jno
jmp
mov
push
add
mov
pop
mov
sub
cs
insl
outsl
sub
fistpll
les
pop
mov
pop
adc
loop
outsl
jno
jecxz
pop
jbe
out
loope
lock
jno
jns
lea
std
test
push
cmp
stos
leave
in
lret
jg
cmp
jbe
daa
and
xor
pop
sbb
pop
repz
sub
popa
or
cmp
push
and
insl
jg
cmp
mov
xchg
cld
add
mov
mov
push
and
sub
mov
xchg
jp
int
push
mov
push
push
dec
lods
ja
sbb
lahf
xchg
inc
xor
mov
jg
jge
loope
mov
mov
pushf
add
mov
sub
mov
dec
aad
mov
dec
cmp
ret
ds
mov
enter
into
xor
lock
mov
jnp
mov
in
arpl
hlt
pop
daa
sbb
loope
jo
sbb
xor
xchg
dec
push
pushf
js
push
cmp
dec
call
push
les
gs
idivb
pop
xchg
cmp
in
bound
xor
cli
stos
addr16
and
dec
push
or
lret
inc
neg
dec
and
xor
or
and
icebp
bound
stc
push
mov
lahf
cmp
mov
leave
sub
inc
dec
inc
outsb
adc
mov
dec
shrb
cmp
cli
dec
out
jae
ljmp
lahf
ret
shll
fdivrs
loope
out
add
scas
mov
ds
mov
testb
mov
out
inc
dec
aas
test
mov
dec
mov
sti
push
repz
imulb
mov
push
add
push
adc
adc
dec
fistps
pop
pop
sub
dec
adc
shl
adc
pop
push
mov
xchg
xchg
add
dec
frstor
dec
cwtl
add
out
clc
call
aas
out
jns
adc
daa
mov
mov
dec
rcl
dec
jne
sti
clc
dec
mov
inc
xor
cs
inc
xor
xor
cmp
jg
ds
pop
dec
repz
mov
adc
pop
cltd
popa
sbb
jb
sub
inc
out
pop
decl
dec
xchg
mov
inc
sub
ret
dec
cmp
or
sub
ja
fsub
andb
adcb
mov
jno
popa
jecxz
test
xor
sub
pop
push
and
arpl
cmp
pop
movsl
mov
mov
add
mov
jg
jae
pop
cmpsb
gs
push
test
lods
mov
adc
lea
adc
and
aas
test
rorb
imul
inc
pop
cltd
dec
adc
outsl
std
dec
ja
and
data16
mov
out
push
sarb
dec
enter
add
sub
mov
pop
push
fisttpl
dec
or
or
xor
orl
add
ljmp
dec
jmp
mov
mov
fisubs
stos
sub
push
rorl
push
inc
mov
add
leave
out
mov
leave
or
mov
andnps
icebp
popa
dec
out
aaa
mov
pop
pusha
cmp
mov
filds
push
xchg
mov
cmpsl
shl
dec
pop
icebp
mov
rorb
pusha
in
adc
cmpl
inc
dec
enter
push
pushf
dec
pop
stc
outsb
or
adc
repnz
in
dec
mov
gs
and
sub
inc
std
jp
cmp
mov
scas
and
shlb
ja
dec
sub
pusha
dec
mov
out
aaa
dec
push
dec
int
push
pop
jb
test
insb
mov
push
aas
sbb
arpl
daa
push
mov
mov
mov
dec
mov
rorb
xchg
dec
out
aam
mov
aaa
dec
mov
insb
out
adc
enter
sbb
das
push
andl
mov
sahf
inc
out
dec
into
sarl
sub
es
pop
pop
sbb
mov
dec
clc
sub
jge
lods
fcomps
lds
lock
call
push
mov
push
jbe
lahf
inc
in
stos
pop
je
pop
into
ljmp
adc
inc
sbb
dec
mov
les
and
jle,pt
bound
dec
icebp
rol
sbb
pop
push
mov
cmp
sbb
pop
lret
inc
jne
cld
aam
stos
dec
int3
xchg
repnz
adc
xor
dec
popf
jns
pop
mov
push
xchg
dec
cmp
cmp
dec
movd
dec
jge
into
xlat
andb
sbb
test
inc
dec
imul
outsl
test
stc
mov
adc
xor
lahf
repnz
stos
or
and
orl
shll
enter
dec
mov
add
lods
add
cli
roll
push
xor
pop
cs
or
cmc
push
push
fdivl
movsl
aas
ret
cmp
mov
dec
shlb
pop
adc
inc
js
push
call
cld
mov
or
mov
or
adc
fwait
dec
clc
sub
add
mov
mov
push
jp
push
call
int3
dec
add
mov
dec
dec
sbbb
mov
xchg
or
rclb
or
enter
mov
dec
mov
sub
dec
les
pop
lods
scas
pop
fisttps
push
push
xchg
aas
cmpsb
pushf
mov
bound
pop
mov
pop
movlps
lds
dec
dec
mov
mov
movsl
out
leave
cltd
pop
icebp
inc
dec
lods
lret
mov
or
lock
pop
sbb
xlat
das
inc
dec
jno
in
add
dec
cs
pop
xchg
jo
fcmovne
out
dec
loopne
mov
aam
pusha
or
movsb
ffreep
cmc
adc
dec
xor
add
mov
sbb
push
icebp
cmp
pop
sub
iret
adc
adc
pop
and
inc
ficoml
loopne
or
icebp
mov
fs
xor
repz
pop
mov
and
xchg
xorl
and
test
in
not
adc
push
sbb
lret
jae
sub
dec
sbb
or
pop
jae
mov
push
adc
fmull
hlt
dec
pop
xor
sub
inc
or
inc
pop
or
bound
es
decb
xor
pop
jl
pop
cwtl
push
jo
dec
cltd
movsb
test
add
lret
sub
call
xchg
or
jno
jp
sub
inc
pop
ljmp
pop
popf
pop
call
das
sub
fists
jns
xchg
adc
xchg
fidivrs
scas
aaa
popa
test
lods
out
lea
jbe
jb
int
rclb
rcrb
pop
push
lds
test
inc
inc
mov
xor
gs
pushf
test
movsl
or
jmp
gs
mov
lods
pushf
popf
lds
jo
shll
les
inc
push
aas
clc
cmpsl
outsl
lea
xchg
cmpsl
pop
or
push
pop
mov
jne
or
nop
xchg
add
xor
flds
and
mov
pusha
std
add
xchg
xor
pop
jne
stc
or
adc
add
outsl
loopne
in
icebp
orl
dec
xchg
test
dec
test
pop
repz
inc
int
fs
adc
test
and
push
adc
inc
pushf
js
insl
das
pop
cmp
or
sahf
or
jns
cmp
int3
into
add
jo
cmp
aad
pop
push
outsl
xor
adcb
sbb
adc
xor
imul
mov
sub
in
sub
adc
insb
inc
js
sub
pop
in
dec
pop
outsl
sub
adc
into
pop
into
aas
jecxz
xchg
and
in
mov
xchg
cld
sbb
icebp
cmp
pop
and
pop
xorb
inc
jne
rorl
aaa
fcomps
test
and
aaa
popf
sbb
xor
add
out
test
jne
stc
mov
das
fcmovnu
outsl
insl
mov
ja
jne
cmp
cmpsb
add
xchg
xchg
mov
xor
lds
cs
push
fisubl
pop
lcall
sti
dec
jo
mov
je
ret
mov
adc
repnz
fdivs
dec
sub
jmp
negl
xor
jo
cmp
movsl
aaa
pop
mov
lods
push
inc
pop
xchg
adc
inc
repnz
in
cli
inc
sub
ficoms
stos
or
cwtl
rcrl
lock
out
sbb
aad
adc
dec
xor
orl
mov
fwait
xchg
test
dec
and
testb
int3
cmp
sub
aad
icebp
mov
in
cmpsb
ret
mov
in
pop
add
lahf
mov
into
cmp
rorl
mov
test
sub
das
xchg
push
iret
xchg
jne
inc
inc
in
jo
mov
nop
scas
push
fsts
mov
xchg
mov
dec
inc
scas
pop
test
pmulhuw
pop
or
in
sub
cmp
enter
sti
mov
or
es
subb
clc
cs
sub
push
adc
addr16
gs
rorl
and
or
dec
imul
bound
sbb
or
xchg
shrl
dec
fs
mov
mov
push
mov
sub
mov
mov
and
dec
mov
sbb
cwtl
sbb
mov
lahf
les
insl
arpl
aad
jo
cmpsb
or
insl
imul
scas
mov
es
jae
push
pop
push
xchg
popa
sub
mov
inc
mov
mov
aam
push
pop
fiadds
lods
fnstcw
adc
fisttpll
push
mov
aad
fisttpl
pushf
jo
or
jb
enter
cmc
xchg
add
xchg
mov
mov
fstps
xchg
cmc
fsts
jb
cs
stc
mov
stos
fs
xchg
sub
mov
cmp
es
movsl
mov
hlt
dec
adc
scas
fldcw
pop
jae
popf
add
idivb
mov
pop
mov
push
cmp
adc
ficoms
pop
gs
ret
aad
cwtl
mov
ljmp
test
sahf
mov
dec
jbe
scas
pop
mov
adc
andl
pop
or
adc
mov
sahf
nop
mov
aaa
aas
pushf
popa
test
and
mov
adc
rolb
ds
pop
dec
jp
shl
jecxz
popf
into
out
inc
push
fsubrs
or
insb
mov
outsl
icebp
mov
mov
fists
jnp
mov
lds
cld
push
pop
xor
jl
mov
push
into
jno
push
mov
xchg
aaa
cwtl
jmp
cmp
rorl
fstps
nop
iret
test
mov
insl
mov
dec
sbb
add
pop
mov
aas
cmp
jno
xorb
jnp
fcomps
pop
shlb
dec
xor
stos
in
fadds
cltd
sub
sahf
stos
fs
add
cld
in
push
pop
gs
les
sub
movsb
bound
cmpsb
scas
xor
imul
test
xchg
cmp
dec
adc
out
push
adc
mov
popf
cmp
leave
push
push
mov
stos
bound
mov
test
pop
push
pop
adc
cli
mov
jmp
insl
sub
icebp
jae
pop
push
pop
mov
cmp
lea
aad
sub
push
xor
stos
loopne
add
lds
add
mov
loope
mov
push
lret
fimull
mov
fsts
jmp
addr16
or
dec
sbb
pusha
test
cmp
lods
jne
pop
mov
nop
lret
jno
data16
mov
mov
insl
jb
mov
pop
lea
mov
in
xor
jge
push
jne
pop
mov
pop
jo
adc
dec
pop
ror
jno
outsb
jmp
sbb
frstor
jp
jp
ljmp
xchg
sub
inc
pusha
push
pop
adc
pop
repnz
or
stos
arpl
cwtl
rcll
negl
xor
adc
mov
cmpl
lea
add
movsl
movsl
cmp
xor
js
shll
imul
sub
pop
lcall
data16
mov
insl
push
gs
mov
cmpsb
roll
gs
subb
jns
inc
insl
lret
pop
fnstcw
and
adc
movsl
insl
mov
mov
inc
das
sub
inc
pop
jno
push
movsl
or
pusha
call
flds
scas
xchg
cmpsb
push
mov
orl
push
jp
xor
popf
cmp
sub
loope
stc
rorb
cmp
inc
inc
lret
rclb
jg
push
cmpsb
out
pop
jbe
aaa
ja
push
jmp
or
arpl
push
mov
dec
mov
mov
xchg
test
mov
inc
xor
addr16
inc
shll
cli
mov
pop
mov
xor
push
inc
pop
mov
test
popa
mov
push
sbb
ja
mov
test
push
xor
out
sub
cmp
pop
mov
jns
mov
andb
test
mov
fs
mov
imul
sbb
roll
in
ficompl
lock
mov
leave
rorl
mov
outsl
int
push
int
pop
jns
into
adc
test
xorb
aad
mov
aad
jge
insb
leave
fnstcw
fstps
cmpsb
out
vaesenclast
es
pop
adc
shl
sbb
fdivr
cltd
mov
push
mov
adc
xor
dec
cmp
jp
adc
pop
mov
dec
push
shrb
popf
sub
popf
fmulp
sbb
loope
xor
imul
mov
mov
gs
mov
mov
stc
add
inc
outsl
in
loop
push
gs
pop
insl
stc
std
push
cli
and
xchg
stc
mov
stc
cld
stc
daa
mov
dec
rcr
icebp
mov
sub
das
xchg
das
jns
inc
icebp
pop
xchg
rcr
mov
mov
jnp
int3
mov
test
or
int3
iret
push
sub
rcrl
cmp
dec
insl
fcompp
lret
mov
dec
stc
sub
pop
push
stos
movsl
cmp
mov
and
push
insl
fmulp
inc
sbb
aad
lea
adc
out
js
nopl
inc
mov
inc
scas
pop
in
ret
push
fs
xor
sub
mov
stc
ja
mov
xor
xor
mov
xor
in
xlat
mov
mov
mov
push
mov
mov
insl
mov
xchg
xchg
mov
jmp
or
in
dec
jle
cmpsb
mov
lret
cmp
mov
test
repnz
pop
data16
lods
icebp
jecxz
and
or
test
scas
rclb
push
or
rcr
rcl
inc
loop
push
out
pop
ficoms
movsb
add
jge
lea
and
jno
mov
xor
cmp
aas
loopne
push
and
clc
rcr
rclb
sarl
sub
imul
xor
mov
xor
lcall
shll
pusha
sbbl
jae
call
test
push
test
adc
add
xchg
std
icebp
insl
arpl
dec
inc
test
arpl
jne
shll
cmp
fwait
sbb
and
out
push
mov
push
pop
pop
pop
jae
stc
div
and
cmpsl
adc
lret
dec
push
or
adc
pushf
push
rorl
push
xchg
adc
jae
pop
ret
xlat
adc
adc
movsb
popf
push
je,pt
pop
cmp
icebp
into
jno
adc
popf
and
cmp
sub
mull
movsl
fidivs
out
xlat
adc
adc
in
lea
xlat
fidivs
fdivl
fsubrs
dec
gs
decb
push
adc
mov
cli
dec
mov
sbb
aaa
repnz
fs
les
ret
insl
insl
mov
and
push
out
xchg
push
sbbb
mov
in
dec
dec
filds
shlb
sbb
cmpb
and
ficomps
shrl
xchg
scas
jne
cmp
leave
mov
and
pop
pop
ret
mov
xchg
jb
icebp
push
lret
arpl
lods
nop
mov
repz
fstl
sub
outsl
popf
jg
mov
mov
shll
mov
test
sbb
jge
repz
loope
mov
jb
mov
jbe
or
mov
jbe
pop
or
lea
std
mov
sub
mov
fsincos
movsl
pop
inc
push
aad
mov
xchg
test
ja
std
xchg
xlat
loopw
mov
kmovb
mov
mov
imull
jb
std
repz
push
inc
in
in
xchg
std
idiv
cmp
xchg
int
popf
std
std
fstps
in
mov
mov
mov
and
mov
enter
popf
pop
mov
leave
pop
dec
xor
mov
stc
hlt
outsb
movsb
flds
test
mov
sub
popa
movsb
adcl
lret
push
into
adc
mov
jb
or
fldenv
ret
inc
cmpsb
or
mov
pop
inc
sti
popa
stc
icebp
cmc
test
std
push
inc
sbb
stos
or
test
push
cmpsb
outsb
pop
dec
mov
mov
mov
mov
scas
addl
mov
lea
mulb
andl
dec
mov
adc
xchg
sub
test
loop
dec
js
mov
pop
mov
push
and
jge
imul
lcall
lcall
jne
push
repnz
pop
push
dec
push
sbb
into
mov
sahf
pop
outsb
jp
dec
xchg
test
pushf
jge
push
push
mov
pop
mov
jne
or
test
cld
jg
push
xchg
insl
sbb
xchg
insl
cmpsb
ljmp
imul
sahf
jo
adc
ds
out
popl
lds
pusha
pop
inc
sbb
or
pop
push
shll
nop
sub
mov
xor
outsl
push
cmp
repnz
push
imul
insl
ficoms
pop
dec
pop
scas
ljmp
jge
pop
push
push
jge
jne
faddl
xchg
iret
xor
cltd
push
adc
movsb
jno
sahf
or
shlb
pop
mov
xchg
xor
lods
xor
push
pop
test
int
negl
dec
icebp
fistl
cwtl
push
mov
leave
cli
outsl
shll
cmp
loopne
add
pop
dec
popa
out
push
push
sbb
jle
leave
cmp
sbb
push
push
fnstsw
jp,pn
pusha
inc
jle
int3
pop
xchg
cmp
lea
add
popa
pop
cmp
mov
sub
jle
jl
push
mov
xor
setnp
push
je
jae
xchg
sbb
sub
sub
mov
cmpsb
sub
fnstcw
xchg
in
xlat
cmp
sub
out
pop
or
jne
and
push
cmp
and
inc
cmp
lret
pop
cld
and
and
and
push
mov
das
push
stos
enter
pusha
imul
sub
dec
pop
jo
push
jo
mov
mov
imull
in
shl
inc
push
stos
dec
inc
outsb
testl
gs
insb
jno
insl
sti
pusha
jp
aas
add
xchg
mov
adcl
mov
xlat
pushw
add
ds
lds
mov
sti
inc
jecxz
in
movsb
jns
sahf
add
and
or
ljmp
jo
jne
das
or
dec
lcall
clc
lock
arpl
xor
ljmp
pop
push
sbb
cld
aaa
add
xor
pop
pop
push
xchg
xchg
in
mov
lret
enter
xchg
dec
push
xor
mov
push
sbb
lds
xchg
push
push
sub
jge
xchg
and
xor
stos
sti
outsb
inc
stos
jo
pusha
adc
mov
jno
xchg
loop
pop
cmc
lcall
in
dec
frstor
lcall
in
das
scas
outsl
in
popa
mov
push
mov
shlb
and
outsb
or
aad
sub
in
out
shr
insb
out
scas
mov
xchg
jno
pushf
mov
fs
hlt
dec
sahf
aam
iret
or
mov
pop
jne
mov
push
popa
push
in
ret
test
mov
xlat
dec
out
jns
xchg
sbb
cltd
inc
outsl
les
add
xchg
pop
addr16
xor
cmp
or
add
cmp
and
stc
lcall
dec
xchg
aam
xchg
insl
mov
int3
std
mov
jmp
dec
sbb
or
scas
fbstp
dec
mov
inc
dec
adc
push
jnp
sbb
adc
inc
loope
mov
add
add
jb
dec
pop
mov
inc
mov
jecxz
pop
icebp
and
dec
lret
addr16
adc
sti
fildll
inc
jmp
dec
incb
incl
fsubl
mov
jne
add
dec
push
fisubs
repz
lods
dec
mov
jmp
sbb
int
jbe
mov
sub
cmp
vmovaps
jp
into
add
lds
push
push
xchg
dec
mov
fbld
pop
movsl
lds
push
mov
lret
and
outsl
aad
call
test
lds
inc
dec
ja
and
adc
jbe
mov
push
jg
in
lret
xchg
mov
dec
sub
pop
movsl
dec
mov
in
das
pushf
sub
inc
mov
aas
adc
and
mov
daa
xor
cmc
outsb
out
lahf
fisubl
lahf
orl
int
or
orb
push
xor
dec
mov
lahf
sbb
dec
pusha
dec
push
dec
sub
sub
add
aam
pop
test
decb
jns
jb
pop
popf
mov
or
leave
mov
push
les
jae
mov
or
popf
aas
or
gs
push
dec
dec
cltd
and
cmp
mov
ret
and
add
or
or
xchg
or
xchg
mov
mov
sbb
sbb
jns
int
hlt
aas
jp
cmpsl
ficomps
test
iret
gs
ror
xor
xor
testb
cmp
fs
mov
imul
je
pop
inc
adc
mov
dec
inc
stos
add
test
jno
adc
out
dec
loop
out
sti
imul
dec
or
mov
xchg
dec
repnz
push
cmp
jae
test
mov
fisttps
sbb
jmp
imul
pop
xchg
xlat
das
push
mov
sahf
push
test
sub
sub
lcall
and
dec
xchg
outsb
or
sbb
sbb
adc
test
daa
dec
xchg
divb
ret
push
in
add
fisubl
sub
cmc
aas
dec
mov
rolb
dec
adc
les
roll
add
ss
ror
pusha
add
fsubs
pop
int3
jg
cltd
or
imul
jo
lea
push
out
stos
mov
outsl
adcl
out
sub
dec
and
sbb
add
xor
fs
mov
ss
dec
icebp
or
inc
push
adc
jo
mov
dec
movsl
ret
push
mov
pop
or
stc
dec
jno
stos
ficomps
dec
pop
ja
iret
push
mov
mov
xor
out
xor
mov
aam
cmp
and
sbb
push
dec
xor
cmp
movsb
or
int3
dec
andl
mov
add
xchg
mov
adc
daa
loop
add
sub
cmpxchg
mov
pop
dec
into
clc
xor
mov
adc
jnp
cmc
ret
add
jb
sbb
cld
push
sub
and
and
orl
xchg
xchg
aas
sub
test
adc
dec
test
cmp
jg
insl
test
ds
test
or
mov
dec
sbb
bound
shrl
cwtl
das
dec
push
xchg
in
cmp
dec
push
outsl
xchg
push
fucom
das
jle
sbb
pop
lret
sbb
mov
pop
cmp
xchg
ret
dec
leave
dec
outsl
or
sub
aaa
cmp
repz
das
cmp
in
rcll
mov
add
mov
xor
mov
dec
insb
enter
jae
mov
dec
mov
add
jecxz
dec
push
cld
add
sub
fmull
push
cs
int3
bound
adc
imulb
scas
sub
and
dec
lret
mov
cs
cmp
sbb
iret
dec
ret
adc
testb
dec
test
ja
mov
sub
lock
cmp
inc
jmp
add
roll
or
dec
out
ds
test
stos
jmp
fwait
mov
shlb
mov
cltd
ljmp
mov
ljmp
rorb
xchg
addb
mov
mov
test
aam
aas
and
mov
scas
cmp
and
jp
out
xor
jnp
mov
mov
fnsave
jb
in
insl
aas
cmovle
xor
inc
cltd
inc
ljmp
imul
adc
lret
jns
in
or
dec
inc
dec
jmp
repnz
xchg
inc
dec
xchg
lret
sarb
pusha
test
jge
pop
or
inc
out
in
push
inc
or
inc
inc
dec
loope
sbb
pushf
or
dec
addr16
lock
les
pop
lock
jno
push
ss
rcrb
mov
dec
in
adc
rorb
dec
pop
cmp
leave
aam
fwait
mov
lock
or
mov
out
xor
inc
mov
mov
xchg
daa
cli
jl
jge
mov
jg
fsts
or
inc
stos
call
int
lods
push
add
shrl
and
std
jb
cs
cmpsb
shl
dec
dec
jo
add
xor
pop
lcall
dec
leave
inc
stc
adc
outsl
or
dec
push
jnp
push
pushf
rcll
out
or
dec
int
mov
xor
cmpsb
sahf
push
outsb
mov
int3
dec
sub
cs
dec
xor
lods
push
jp
cld
lds
pop
xor
or
out
push
mov
fcompl
cmp
shlb
mov
jo
sbb
test
push
ja
jo
mov
cwtl
adc
cmp
push
cmp
imul
mov
sub
in
push
mov
sbbl
pop
and
call
dec
jo
inc
and
andb
rcll
sub
arpl
mov
es
sbb
mov
inc
rcll
sahf
push
out
sub
leave
cmpsl
adcb
cmpsb
mov
xor
fstps
ds
and
scas
insb
push
mov
sbb
xchg
lea
cmp
pop
int3
inc
sarl
xchg
jge
icebp
adc
mov
data16
and
enter
xor
mov
in
lea
lret
push
sbb
mov
subl
shll
xchg
fmuls
test
mov
pusha
jns
or
pop
gs
loope
popf
push
pop
mov
dec
inc
push
dec
in
aad
cmc
arpl
in
pop
not
test
mov
sub
stos
fmul
jo
lea
cld
xchg
and
insb
pop
aas
pushf
ds
sub
lods
addr16
iret
xor
iret
arpl
movsl
movsb
js
fisttpl
insl
adcl
hlt
fcomp
cmp
cld
pop
fcoml
xchg
addr16
jno
or
mov
push
std
minps
jno
shrb
imul
adc
push
xor
or
ds
cltd
push
pop
roll
clc
int
cs
sub
adc
or
sahf
lret
dec
lret
mov
adc
imul
dec
out
mov
adc
outsb
add
in
in
dec
mov
je
pop
fldcw
leave
ret
dec
stos
out
adc
dec
cs
xchg
inc
fmuls
dec
inc
frstor
fcomps
aaa
xor
cmp
shll
jb
addr16
imul
data16
out
test
fcomp
and
ljmp
rorb
ret
andl
clc
mov
repnz
pop
out
leave
push
pop
dec
xor
lock
push
xchg
dec
add
adcb
cmp
dec
gs
stos
mov
or
adc
inc
fxch
adc
mov
out
fwait
add
mov
inc
dec
daa
rcr
jl
mov
xor
fdivrs
mov
mov
xchg
jmp
shrb
mov
addr16
cld
mov
mov
insb
xchg
dec
sub
jbe
ret
xchg
mov
call
jmp
in
das
push
in
repnz
inc
mov
imul
mov
aam
outsl
dec
and
xchg
pop
fsubrl
ds
push
pop
stos
adc
adc
cmp
mov
std
stos
push
ret
add
jle
cmp
bound
in
mov
lret
add
aam
cmp
mov
outsl
lds
xchg
cmp
dec
pop
insb
push
add
jne
daa
mov
incl
outsb
jae
pop
imul
or
outsb
mov
jae
lds
daa
das
adc
and
xchg
fs
pop
add
fucom
cmpsl
outsb
dec
cmpl
cmp
leave
repnz
push
mov
jnp
test
bound
fistl
push
imul
popa
int3
clc
enter
jg
mov
fbstp
or
scas
mov
pop
jno
ljmp
std
xor
sub
insl
inc
dec
dec
adc
rcll
aam
or
push
push
add
rcll
cmp
rolb
sub
xor
scas
lock
shll
fildll
jmp
sbb
dec
dec
enter
mov
pop
in
cmp
dec
add
dec
out
sub
ret
inc
fs
loopne
cmp
sub
jecxz
out
loop
rcll
dec
or
push
rorb
dec
xchg
cli
mov
ret
and
mov
imulb
push
pop
push
xlat
dec
mov
or
sbb
sub
mov
pop
enter
dec
jmp
sbb
lret
cs
pusha
dec
mov
inc
xchg
addl
push
push
cli
push
sahf
xchg
test
xor
fnstsw
lds
es
jp
add
xor
dec
adc
adc
pusha
push
sti
jbe
clc
dec
or
cs
adc
mov
outsb
test
dec
sar
xchg
sbb
fldl
popf
mov
pushf
aad
dec
mov
dec
mov
sbb
lods
cmp
dec
hlt
insb
iret
mov
scas
and
adc
dec
clc
movsb
dec
sbb
dec
or
xor
mov
imul
les
outsb
pop
fdivs
sbb
movsb
dec
or
cs
jg
dec
cmp
and
push
addb
out
dec
mov
and
addr16
push
cmpsb
repnz
pop
xlat
add
dec
push
pusha
std
cli
fmul
pop
test
lds
push
sbb
cmp
rcll
sub
sahf
cwtl
sbb
clc
xchg
call
fsubs
lds
add
xor
inc
pshufw
pop
ljmp
pop
sbb
push
mov
pop
fs
in
jecxz
dec
addl
push
into
das
dec
xchg
and
ret
pop
std
push
jge
mov
mov
dec
push
inc
mov
popf
lret
push
out
xor
mov
pusha
push
out
add
mov
testb
icebp
sbb
popf
js
dec
and
mov
push
jle
xchg
dec
fcmovbe
ljmp
jecxz
or
add
xor
jo
jae
and
or
sub
xor
mov
lret
cmpsl
mov
fdivr
mov
dec
jmp
push
lea
mov
test
push
pusha
jmp
push
dec
or
sbb
cli
sub
mov
mov
mov
push
jle
xor
and
push
jmp
cmp
fmuls
cmpsb
mov
xchg
dec
pushf
jmp
inc
push
push
jbe
pop
jo
add
outsb
mov
int3
dec
sub
push
mov
dec
mov
cmp
push
pop
lcall
dec
lret
pop
xchg
dec
sbb
in
arpl
lock
dec
jg
mov
in
gs
pop
mov
in
outsl
adc
pop
dec
out
test
push
mov
pushf
nop
xchg
dec
cmp
xor
inc
xor
push
popa
mov
lds
test
or
loop
push
pop
test
cld
ret
loopne
or
popf
loopne
push
mov
test
nop
fs
xchg
cmp
int3
arpl
insl
or
adc
mov
pusha
das
adc
inc
mov
mov
scas
fs
mov
xchg
in
cwtl
push
pop
push
mov
fisubrl
push
mov
mov
push
adc
push
sbb
push
call
popf
add
orb
je
mov
jg
xchg
call
jns
xchg
les
pop
in
out
xchg
sbb
xorb
xchg
dec
out
jo
xor
pusha
cmp
mov
or
popf
cmpsl
into
xor
xor
cld
aaa
cwtl
inc
idivl
test
movsb
dec
push
popa
lods
std
lock
fcomps
xlat
je
and
inc
push
das
adc
rcll
sti
cmp
ffree
cmp
ds
cmpsb
fldl
outsl
adc
and
xchg
ss
sbb
scas
pop
pop
popa
and
loope
push
push
mov
insl
loopne
jns
mov
into
inc
add
adc
test
sbb
ljmp
stc
idivb
sbb
or
jl
xor
and
and
push
aad
imul
push
mov
cltd
aaa
in
xchg
pushf
inc
pop
lds
cltd
xchg
inc
mov
int
popf
pop
int3
mov
sbb
dec
mov
and
xchg
push
in
scas
mov
aas
push
sub
lcall
ja
fcmovne
pushf
jns
call
gs
xchg
ds
sub
xchg
inc
fcmovne
add
mov
loope
sarl
dec
fnsave
cmp
cmp
dec
fsubrs
push
dec
and
idivb
dec
dec
add
mov
jno
mov
gs
sub
ljmp
inc
bound
cmp
or
repz
ds
shr
dec
mov
cmp
lods
mov
xchg
je
aad
mov
mov
into
xchg
fsubr
scas
pop
dec
lock
push
mov
mov
out
and
dec
xchg
stos
ja
dec
pop
dec
inc
and
sub
mov
adc
fwait
dec
xor
sbb
std
inc
mov
push
cmpl
jge
repz
fcompl
add
cld
xor
mov
mov
mov
dec
cmovle
fidivl
mov
pop
fwait
outsb
ret
fdivs
test
jg
mov
pop
xor
in
dec
lcall
imul
aam
add
mov
shrb
dec
stos
cmp
outsl
out
mov
cltd
pusha
std
sub
adc
test
jle
pop
daa
add
push
fsubr
mov
push
cwtl
roll
dec
dec
inc
mov
mov
sub
inc
jmp
addr16
cmp
pop
out
xchg
pop
or
shl
or
jge
mov
aad
cmc
addr16
inc
xor
adc
push
add
dec
pop
or
push
dec
pop
cwtl
aas
jb
inc
idivb
xor
mov
mov
aas
dec
fwait
push
push
aad
xchg
or
mov
dec
adc
push
mov
imul
pop
cmp
jge
dec
fcomp
add
mov
sbbl
pop
add
mov
xor
adc
sti
jbe
or
pop
pop
leave
std
bound
sub
xor
outsl
insl
stc
xchg
jns
cmp
fsubl
mov
pop
test
fdivl
mov
cmp
aam
ss
xor
inc
lahf
leave
fstps
jmp
leave
xchg
int
adc
mov
push
in
rcr
jecxz
xchg
and
inc
mov
subl
pop
jmp
outsl
movsl
push
jmp
dec
push
out
pop
push
cltd
sub
lods
lret
test
inc
outsb
dec
push
std
pop
cmp
inc
jp,pn
inc
outsb
orl
jne
testb
fcmovne
loope
les
ljmp
mov
adc
jbe
add
dec
dec
xor
insl
ss
pop
xchg
xor
int3
or
mov
dec
cltd
mov
adc
icebp
test
in
fnstcw
sub
test
push
ds
jmp
lods
push
adcl
xor
daa
data16
and
xchg
dec
loopne
sub
dec
das
ds
cpuid
pushw
or
dec
cmpl
nop
inc
mov
int3
popf
and
push
lahf
xor
jnp
leave
jmp
pop
mov
dec
rcr
bound
mov
imul
iret
lea
leave
repnz
inc
adc
sbb
mov
mov
mov
mov
lret
cmp
adc
popf
dec
aaa
xchg
sub
sbb
mov
push
add
pushw
jbe
dec
mov
test
out
dec
movsl
sub
mov
movsb
xor
scas
fmull
adc
jo
or
dec
into
mov
push
arpl
jnp
out
pop
call
ds
clc
adc
ja
mov
pusha
test
rcrl
repz
pop
scas
add
add
mov
pop
ljmp
leave
and
inc
dec
divb
dec
dec
outsl
sbb
push
subb
mov
enter
dec
mov
push
push
sbb
ret
dec
lret
ljmp
push
lea
ret
mov
jnp
mov
testb
jae
cs
lcall
adc
add
push
inc
iret
xchg
xchg
cmp
nop
mov
sbb
pop
sub
xchg
mov
in
dec
push
dec
test
push
loope
pop
mov
fs
ljmp
shrl
or
in
aam
lret
xchg
dec
push
imul
dec
mov
push
jp
jl
ret
rorb
jbe
repz
iret
movsb
mov
xlat
ja
loope
mov
mov
mov
jge
sub
add
sub
or
sti
mov
cmp
ret
inc
ja
rcrb
adc
sbb
rcll
icebp
outsl
call
scas
decl
jns
test
and
add
cwtl
fcomp
aaa
dec
pop
cmp
cmovo
xchg
or
mov
test
out
push
add
out
xchg
lods
ja
jno
fmull
stc
aad
cmp
mov
cmc
popa
mov
jno
pop
sti
xchg
rolb
std
push
outsl
pop
fiadds
flds
adc
fisubrs
mov
pop
add
loope
rcr
bound
lock
andl
aas
lods
and
mov
int
sub
shlb
inc
mov
pop
in
popa
pop
mov
shrl
cmc
test
rcrb
roll
adc
clc
jo
mov
clc
outsl
or
gs
pop
jp
push
popa
lods
inc
mov
dec
or
dec
pop
lods
popa
clc
push
jae
stos
adc
hlt
fwait
cmc
push
jns
into
wbinvd
pop
mov
mov
pop
dec
leave
jbe
scas
pop
lea
sub
pop
aaa
movhps
mov
push
neg
popa
test
cmpsl
gs
pop
cli
xor
pop
pop
dec
mov
jne
sbb
stos
rcrb
out
jge
sub
fwait
cmp
xchg
sbb
loope
addr16
mov
jl
and
dec
push
cmp
shrl
sbb
pop
inc
mov
mov
in
push
xchg
push
lea
in
mov
push
mov
push
into
jno
cltd
jns
in
jmp
dec
imul
aaa
dec
nop
or
imul
pop
outsb
xchg
adc
fisttpll
jae
pushf
std
mov
cli
sbb
shll
loope
adc
mov
cld
les
jnp
mov
or
stc
ret
xor
cmp
enter
jo
sbb
dec
push
gs
jno
sbb
icebp
mov
rorb
or
std
jl
mov
enter
repz
out
inc
dec
or
dec
xor
std
addr16
test
fincstp
push
sbb
mov
jo
out
adc
fists
sub
add
iret
xlat
mov
xor
adc
scas
pop
or
push
stos
fisubs
pushf
and
je
bound
push
xor
push
clc
rclb
xchg
fxch
inc
mov
out
outsb
lcall
aad
outsl
out
je
stc
cwtl
and
js
pop
shll
push
pushf
pop
aas
dec
jg
jno
fistpll
in
lods
push
xchg
or
scas
inc
or
lcall
ret
mov
push
std
or
jno
cmpl
mov
fnstsw
mov
shl
movsl
test
cmp
and
cmp
repz
lcall
rclb
lds
sub
in
adc
lea
push
xchg
ficompl
js
adc
nop
add
test
inc
adc
push
aas
loope
xor
pop
adc
pop
mov
js
sti
mov
pop
out
add
inc
js
lock
int
pop
fsubp
sbb
aad
sbb
mov
sbb
xor
lods
pop
cmp
shl
or
imul
notb
jnp
xchg
pop
fiadds
lds
shlb
in
pusha
dec
mov
addr16
flds
les
aam
inc
cmp
xchg
insl
jl
jmp
jp
inc
insl
int
gs
aam
das
push
pop
sti
add
pushf
popf
pop
out
cltd
icebp
pop
pop
call
test
insb
xchg
out
inc
lea
adc
aam
sub
pop
pop
insl
push
cmp
movsb
popa
dec
add
insb
js
das
jge
cmp
jo
inc
mov
push
test
cmp
push
lods
je
and
or
pop
clc
call
adc
test
push
rorl
mov
fildll
test
mov
enter
in
adc
shrl
fnsave
jge
lock
test
test
daa
test
jge
pop
clc
pop
push
icebp
dec
cmp
hlt
jl
xchg
jge
cs
insl
aaa
jecxz
or
xchg
push
fimuls
pop
xchg
cwtl
repz
jge
sbb
fucom
fidivrs
jecxz
jge
jecxz
inc
je
jecxz
jge
jge,pn
jecxz
pop
or
lock
das
jns
gs
movsl
push
mov
jae
mov
add
or
sbb
or
flds
imul
mov
fsub
lods
add
outsl
or
aad
loope
dec
sbb
jle
mov
rorb
push
lea
jo
xchg
inc
mov
addr16
push
adc
mov
lock
add
jbe
adc
cmp
jno
xchg
and
in
fs
mov
jge
mov
rol
pop
xor
ret
lcall
vprotq
xchg
shrb
lahf
sahf
shr
mov
xchg
sbb
pop
fwait
add
outsb
in
mov
icebp
jae
add
push
js
push
dec
pop
lahf
gs
stc
lods
cmc
lea
xor
shrl
cmpsl
sbb
out
stos
lds
stc
scas
subl
mov
sub
xchg
mov
in
outsl
mov
sub
cltd
test
inc
insl
fstl
std
inc
sub
mov
rorb
dec
or
pop
shl
pop
push
xchg
jbe
inc
pop
sar
insl
aas
or
cmpsl
lret
dec
subb
jbe
movsl
popa
fnstcw
and
sub
loope
cmp
pop
sub
pop
clc
fstp
outsb
adc
sub
int
nop
pop
lods
gs
jne
sbb
inc
jno
ja
or
mov
and
cmp
or
mov
jo
sbb
inc
pushf
mov
inc
jno
pop
adc
push
mov
gs
xor
push
and
jb
sub
xchg
fs
test
sub
xchg
inc
cwtl
pop
js
jmp
and
ret
cwtl
push
lret
push
pop
test
xor
dec
or
pop
xor
movsb
sbb
sbb
decb
xor
movsb
jg
push
or
pop
push
lahf
add
jno
cmp
mov
pop
test
lock
shr
mov
insb
mov
test
in
ret
dec
imul
adc
mov
push
js
repz
push
aaa
outsl
mov
sub
aas
dec
mov
push
and
mov
rclb
jo
inc
ret
fnstenv
mov
ficomps
dec
fidivrs
add
or
cltd
dec
loop,pn
in
cmpsl
stc
ret
dec
je
les
adc
adc
xchg
mov
inc
mov
jo
inc
ret
aad
push
lock
mov
push
xchg
add
shrd
push
das
pusha
test
cmp
pop
adc
aad
xor
iret
pop
popf
iret
aaa
push
pop
daa
and
cwtl
repz
mov
cmpb
push
push
gs
jmp
roll
decl
cmovo
cmp
frstor
mov
push
rcrl
dec
xchg
push
and
xchg
loope
insl
js
mov
push
add
xlat
push
in
pop
lret
xor
inc
movsl
jl
fldenv
push
mov
cli
negb
in
pop
test
or
jnp
push
je
insb
insl
cltd
adc
adc
fadds
dec
out
pop
mov
xchg
out
pop
shl
xchg
cmc
sub
jp
ss
or
aad
mov
movb
inc
jg
or
icebp
mov
sbb
clc
ljmp
in
adc
fcmovne
push
and
insl
gs
mov
jp
and
les
adc
pop
aas
fisubs
and
mov
mov
std
daa
xor
jecxz
mov
sbb
int3
shll
nop
movsl
outsl
test
pop
cmp
cltd
xchg
lock
fwait
pop
jg
dec
imul
mov
ret
cmpsb
cltd
pop
xchg
dec
pop
xor
ja
mov
pop
add
lock
jge
xchg
stc
clc
dec
shl
sub
leave
cmp
test
inc
xor
outsl
mov
inc
push
cmc
cmp
push
dec
pop
mov
mov
popf
cmc
aaa
repnz
es
adc
cltd
sbb
add
movsl
mov
xchg
push
mov
and
daa
cmpsb
add
xor
mov
test
mov
jge
jae
xchg
test
push
out
xor
movsl
xchg
popa
sbb
call
aaa
sbb
fs
in
popf
mov
test
enter
mov
xchg
test
lock
hlt
jo
jae
mov
cmp
add
sbb
jp
cmp
popf
lea
jecxz
xchg
mov
pop
fidivrs
jg
sub
jl
jne
int
ss
dec
std
loope
data16
jg
addr16
inc
bound
outsb
push
pop
push
out
xchg
stos
pop
test
pushf
fcoms
or
loop
push
xor
cmpl
ja
sar
adc
jns
pop
or
mov
jae
xor
test
addr16
and
addr16
fldenv
jecxz
push
inc
lock
add
imul
arpl
fnsave
mov
cmp
inc
add
pop
mov
lods
push
loop
jo
cld
aam
push
fstps
nop
add
sub
cld
pop
movsl
dec
incl
shrl
xchg
outsl
lea
adcl
jb
and
push
jle
add
loope
pop
addr16
jmp
fld
mov
pop
into
jno
xchg
pop
in
push
outsl
bound
stc
outsl
test
in
popf
into
cmp
loope
hlt
sub
mov
fldenv
add
push
mov
sahf
loop
add
es
add
sbb
repnz
add
jle
sarb
xor
lods
cltd
jne
fadds
and
cwtl
mov
push
leave
cltd
imul
push
addr16
mov
test
sti
jge
jne
pop
imul
arpl
xor
add
inc
push
jns
movd
adc
push
lods
hlt
daa
pushf
cmp
lods
in
lret
xor
sub
mov
and
dec
scas
xchg
push
sbb
call
lea
jo
popa
test
in
add
push
or
pop
jp
hlt
es
insl
enter
imul
push
mov
imul
mov
gs
loopne
sar
orl
insb
popf
ror
das
adc
popf
rcll
cmp
imul
outsl
jns
and
loope
jne
mov
adc
clc
repz
scas
aad
aam
jno
mov
mov
cwtl
mov
xchg
mov
cmp
cmpsl
lods
mov
mov
mov
xchg
insb
test
lods
pop
int
mov
cs
inc
pop
mov
inc
gs
imul
inc
jp
scas
pop
xor
imul
cmp
pop
imul
push
gs
popa
inc
sti
or
jnp
loop
jae
aas
adc
and
insl
test
jge
stos
loop
xchg
test
std
push
jne
enter
outsb
fsin
bound
push
jo
and
das
fimuls
gs
jno
xchg
fsubs
les
outsl
popl
mov
push
xor
ret
stos
xchg
mov
insl
add
aam
jg
mov
rorb
hlt
pop
repnz
or
outsl
mov
pop
aad
push
rcll
lret
sbb
mov
jg
leave
test
in
les
mov
push
xchg
lcall
pop
jbe
shrl
stos
sbb
jne
loope
jne
push
pop
mov
out
in
mov
outsb
jbe
xchg
popa
leave
push
push
mov
ret
sbb
rol
loope
pop
mov
inc
lea
pusha
push
inc
push
cmp
fimuls
enter
jbe
push
mov
jb
xchg
jmp
xchg
insl
sbb
pop
clc
jmp
pop
jo
sub
call
sub
xchg
or
adc
imul
js
loope
jge
jge
inc
lea
mov
in
xor
mov
pop
dec
push
rclb
test
aas
adc
cmpsb
jl
push
rcl
sbb
jae
dec
rolb
jo
fs
sarb
push
outsl
pusha
sbb
in
inc
push
pusha
push
insl
imul
jmp
adc
out
js
dec
pop
fnstcw
cltd
push
inc
outsb
jo
adc
pop
popa
mov
divl
pop
pop
jbe
movsl
and
rcrl
inc
xor
push
lds
js
fmull
gs
or
push
outsl
js
push
mov
jns
mov
adc
push
jg
jmp
pop
inc
jbe
push
inc
pusha
arpl
inc
pop
sti
push
hlt
mov
xor
xchg
popa
pop
es
adc
adc
xchg
and
movsl
iret
pop
pusha
jmp
decl
pop
dec
into
stos
mov
cmp
mov
pop
dec
std
insb
jmp
cmp
mov
loop
cs
fstl
fisubrs
insl
xor
inc
pop
data16
pop
ja
push
xchg
out
mov
xor
dec
call
mov
sub
jne
dec
cli
push
sub
sub
inc
adc
test
inc
ss
icebp
pop
adc
ds
xchg
imull
push
and
data16
iret
insl
pop
jns
insl
fiadds
and
jle
orb
data16
rcrl
test
adc
jge
rcrb
fists
mov
jg
add
mov
adc
js
mov
lds
push
mov
je
jg
aas
ljmp
push
xchg
jno
nop
imul
sbbl
pop
cmovo
lahf
xor
jo
lea
xlat
mov
cmpsl
adc
int3
shll
pushf
fadds
fwait
inc
jmp
push
fnsave
pop
aam
push
rorl
fsts
outsl
add
inc
popf
data16
int3
out
repnz
aas
xlat
stc
and
cmp
cmc
sub
repnz
aaa
xlat
icebp
and
dec
xchg
xor
sub
mov
cltd
insb
dec
cmp
sahf
mov
push
or
push
cmp
je
pop
rorl
gs
adc
pushf
xor
mov
fists
pusha
test
mov
out
push
out
mov
rorl
pop
fsubrs
and
test
xor
fisttpll
push
pop
cwtl
push
jl
js
stos
outsb
or
fs
pop
push
or
sbb
js
nop
adc
mov
xchg
mov
hlt
inc
jo
push
lret
xchg
mov
adc
jne
test
nop
sbb
shl
xchg
pop
push
pop
push
lds
mov
xchg
insl
sub
xor
jns
adc
mov
adc
xor
in
mov
psubq
sbb
cmp
add
dec
imul
sahf
int
sbb
jo
adc
adc
sub
repnz
add
adc
push
stc
jno
and
loopne
add
loope
mov
jae
mov
pop
test
cmp
push
push
add
stos
sbb
inc
insb
lret
aam
testl
cmc
cmp
mov
scas
push
lret
rorb
mov
scas
xchg
jle
cmc
and
lds
lret
gs
loopne
jp
add
aaa
dec
xchg
jb
fstps
aas
int3
sar
pusha
outsb
ds
dec
push
stc
xchg
lcallw
cltd
dec
mov
bound
test
or
dec
data16
pop
adc
dec
lock
inc
push
fwait
sti
clc
cs
orl
add
mov
stc
fsubs
add
inc
mov
daa
add
xor
addb
add
fbstp
ret
sub
adc
gs
inc
mov
mov
lds
lods
pusha
mov
jo
sbb
inc
test
fs
jp
or
pop
pop
lods
or
jbe
push
insl
movb
and
daa
cmp
pop
sbb
mov
shll
inc
adc
inc
fidivs
push
adcb
lahf
in
and
nop
fildll
pusha
cmp
call
or
pop
mov
mov
fldln2
or
jns
lock
jge
movsl
fistl
ficoms
lcall
lock
jne
jns
hlt
call
jbe
sub
js
pusha
fcmovnbe
inc
inc
xor
jne
stos
in
xor
mov
sub
je
lock
mov
push
cmp
lock
inc
inc
ret
xor
loopne
cmp
add
mov
push
loopne
add
push
loope
pop
jecxz
jns
and
imul
lock
popf
jne
jno
or
insl
xchg
fnstsw
xchg
outsl
loope
and
lea
mov
inc
jne
jmp
mov
push
mov
push
jns
pop
add
adc
mov
loope
mov
lea
mov
sub
pop
pop
sub
out
test
fchs
xchg
add
push
into
adc
lds
dec
mov
or
cmc
xchg
lea
push
lahf
add
cltd
inc
loop
inc
xchg
imul
xor
sbb
mov
adcl
std
adc
xchg
cmp
mov
call
push
loopne,pn
dec
mov
test
test
in
push
jne
in
or
sub
push
outsl
loopne
inc
mov
mov
jg
pop
push
iret
fwait
gs
sub
cmc
xchg
mov
pop
out
push
sub
jae
xor
xor
inc
add
mov
pop
outsb
pop
adc
lahf
int
jno
mov
leave
pop
xlat
lret
xor
xlat
xchg
and
fldt
mov
xchg
dec
fmuls
out
xchg
cmp
sbb
xchg
jns
mov
xchg
dec
mov
adc
push
mov
or
mov
adc
int
fidivs
adc
outsb
or
mov
push
pop
xor
scas
pop
bound
mov
xchg
and
pushf
xor
int
outsb
xchg
in
pop
adc
imul
jne
lods
shll
xchg
jle
push
pop
cmp
stc
jg
jle
ja
xadd
push
jp
dec
scas
lods
jp
or
movsl
xor
jbe
rclb
and
aad
jbe
les
sub
ret
xchg
cmp
mov
jp
pusha
jae
inc
mov
cmp
test
test
fwait
ljmp
pop
lods
dec
imul
sub
jb
adc
insl
pop
js
addr16
adc
movsl
jo
in
and
outsb
fidivrs
xchg
pop
add
mov
pop
icebp
push
xchg
jecxz
or
clc
clc
pop
scas
pusha
scas
jle
insb
fdivr
test
xor
lcall
scas
cmc
mov
insl
jmp
mov
and
std
lea
sbb
or
mov
and
mov
jge
arpl
inc
jno
mov
fnstcw
imul
lds
mov
ja
mov
cmp
shl
pop
jge
imul
sbb
cmpsl
cwtl
jbe
mov
push
jne
push
pop
rcrb
into
or
je
ficomps
jo
sbb
push
jae
popa
pop
push
dec
and
into
jecxz
ret
fwait
push
xor
aad
gs
adc
xchg
addr16
adc
loopne
xor
jmp
outsb
add
jp
xchg
mov
pop
pop
filds
add
pop
xchg
jo
xchg
bound
push
xor
imul
pop
add
jno
lret
test
fistps
add
jl
in
lahf
push
scas
mov
jno
loope
sub
outsb
mov
std
aas
outsb
iret
adc
fwait
ret
das
call
test
xchg
jno
inc
pop
cmp
cmp
jnp
dec
fisttpl
nop
mov
daa
mov
xchg
xchg
add
jge
outsb
mov
outsl
lea
jecxz
cltd
pop
jnp,pn
dec
in
jl
test
xor
push
sbb
adc
dec
leave
loopne
adc
pop
mov
cmp
out
dec
jno
fisubrs
push
jns
popf
push
pop
inc
xlat
inc
dec
gs
jne
ljmp
dec
pop
std
bts
jl
xchg
rorl
movsl
jg
adc
push
imul
aas
inc
aam
lods
roll
pushf
fisttps
rclb
imul
xchg
mov
push
xchg
sub
in
fwait
pop
or
outsl
test
jno
pop
popf
movsw
int3
shrl
ficomps
mov
minps
fldenv
add
xchg
nop
enter
fstps
lea
inc
rorl
ja
xchg
dec
cmp
dec
insl
ljmp
jae
xor
dec
adc
in
je
js
test
push
xlat
xor
adc
xchg
cld
imul
imul
int
test
addr16
push
mov
sub
add
aas
inc
lea
or
add
jmp
xchg
cmp
dec
and
cmp
mov
gs
xor
xor
nop
pop
lock
mov
and
aad
push
mov
pushf
out
pusha
aad
pop
aas
pop
dec
je
sub
mov
xlat
popa
into
pop
cwtl
jno
jl
rcrl
movsl
push
fnsave
sahf
xchg
fnstcw
mov
xchg
or
mov
mov
mov
cltd
and
daa
dec
outsl
jne
loopne
mov
gs
popa
xchg
adc
xchg
mov
push
popf
jne
pushf
mov
dec
push
inc
xlat
sahf
or
aad
or
mov
push
add
jl
cmp
inc
sbb
push
cmpsl
add
sbb
popa
mov
pushf
arpl
and
push
and
and
add
movsb
iret
sbb
adc
mov
imul
adc
dec
push
mov
push
outsl
mov
dec
push
lcall
push
dec
pop
pop
jmp
and
fsubr
lock
jns
cmpsb
dec
xor
mov
add
sub
and
pop
adc
lea
inc
int
fs
cmp
insl
int
cmpsb
mov
fs
mov
cmp
and
mov
xchg
xor
sub
jbe
mov
shll
jecxz
lret
mov
mov
xlat
pop
mov
imul
fs
sub
xlat
shlb
cltd
jo
cwtl
jno
sbb
jecxz
mov
sub
xchg
xor
jge
xor
xor
xor
enter
loop
aam
daa
xchg
xchg
cltd
roll
idivl
dec
mov
dec
pop
pmullw
pop
in
test
inc
push
push
adc
dec
ss
inc
mov
mov
popl
or
test
rcr
and
movl
cmp
stos
aam
pop
stos
cmp
xchg
mov
lret
mov
pop
loope
or
pop
sbb
sbb
out
ljmp
aaa
xchg
int
inc
rclb
cld
int
xor
xor
dec
js
mov
imul
or
fadd
and
jge
stos
xor
mov
mov
add
inc
pop
fsts
jnp
pop
inc
pop
lds
fstl
and
cs
lret
rclb
xchg
xchg
xlat
out
or
fldl2t
jl
fsub
mov
neg
push
pop
mov
inc
mov
icebp
push
js
das
sub
test
out
mov
dec
icebp
movsl
or
shrb
xor
jo
sbb
sarl
insl
add
jmp
gs
imul
subl
add
push
lods
gs
sub
fstps
or
mov
or
mov
jmp
xchg
int3
iret
cld
rcll
fnstsw
popa
cmp
insb
pop
je
mov
cmpsl
inc
pop
loopne
add
push
push
jno
pop
mov
out
test
mov
adc
or
pop
pop
cli
in
sbb
pop
rorb
pop
pop
stos
ljmp
or
dec
or
fnstcw
test
popa
xchg
loope
loop
icebp
cmp
dec
imul
mov
pusha
lea
enter
mov
sbb
js
push
fisubrs
sbb
scas
das
sub
sub
sub
jns
mov
mov
data16
mov
mov
out
xor
lock
ds
cltd
imull
repz
mov
jo
push
xchg
fcmovnbe
xchg
mov
dec
or
xchg
mov
adc
ljmp
fnstenv
mov
lea
cmp
xchg
ss
lods
addr16
xor
sbb
xlat
jns
stc
adc
es
out
push
stc
mov
daa
adc
dec
mov
loop
jns
test
push
lret
or
fisttpll
and
jbe
sbb
add
mov
stos
add
mov
add
adc
xchg
add
sbb
cmovne
or
sbb
je
mov
into
pop
imul
stc
adc
bound
inc
jo
lret
push
xchg
inc
in
jo
cmc
test
pop
cmpsb
push
or
je
adc
xchg
into
push
fstl
adc
daa
xchg
insl
sub
xchg
mov
or
or
pop
xlat
pop
dec
push
mov
test
sub
imul
fidivl
add
push
dec
imul
cmp
scas
lods
pop
popa
dec
jns
daa
ljmp
pop
les
cmp
push
mov
lods
xchg
adc
inc
sub
push
pop
mov
dec
dec
aam
addr16
imul
mov
xor
sub
clc
test
aam
imul
pop
dec
es
mov
dec
inc
test
push
adc
pop
mov
dec
xor
sarb
outsl
popl
ja
cld
sub
outsb
lods
adc
orb
mov
or
ds
bound
repz
insb
rorl
pop
daa
leave
mov
enter
mov
or
dec
inc
movsl
cld
xchg
dec
nop
cmpb
insb
std
rorb
adc
mov
dec
aad
cmp
arpl
pop
push
add
iret
dec
outsl
and
adc
adc
xor
mov
sbb
repnz
lret
dec
jl
arpl
xor
imul
dec
test
adc
jp
dec
mov
movsb
dec
int
out
xchg
mov
dec
cs
dec
test
pop
shl
ret
rcrb
cmc
lret
adc
dec
mov
test
imul
pop
nop
imul
cmp
das
pushf
nop
or
pop
repnz
std
push
popf
mov
dec
xor
into
pop
sahf
pop
jo
js
stos
adc
or
jl
mov
call
inc
or
ljmp
adc
idivb
mov
sub
mov
lea
inc
and
repnz
lret
filds
dec
and
sbb
sub
jb
lea
cmpsl
mov
shlb
cmpsb
xchg
inc
dec
mov
aaa
mov
sub
inc
in
sbb
inc
xor
dec
mov
sub
add
loopne
cmpsb
push
fmuls
adc
and
jl
daa
outsb
jbe
and
mov
mov
sbb
dec
add
mov
mov
and
and
pop
xor
pop
mov
mov
ja
orb
mov
dec
or
das
mov
fsubr
ja
out
nop
inc
jge
jl
push
jb
xlat
adc
std
daa
test
or
push
clc
mov
cmpsl
in
int3
push
dec
sahf
adc
aam
add
fnsave
sub
mov
cmpsb
movsb
jecxz
and
fmull
cwtl
into
pop
lret
sub
cmp
xchg
imul
pushf
and
push
cmp
xchg
das
lret
or
mov
bnd
lea
test
push
daa
pop
imul
nop
sub
xchg
adc
cmpsb
lahf
push
shl
jno
xor
xor
imul
stc
fldcw
push
pop
roll
sahf
sub
mov
push
pop
rcl
pusha
aaa
cs
dec
lods
aaa
iret
sahf
inc
pop
repz
into
adcl
pop
xchg
mov
jecxz
add
push
cmpsl
aad
pop
ffree
sub
jmp
lods
xor
clc
popa
and
outsl
ret
jbe
stos
inc
mov
mov
jp
mov
xchg
mov
hlt
mov
push
mov
fisubl
sbbl
adc
adc
addl
or
cltd
mov
push
or
out
add
lods
sbb
loopne
in
hlt
stc
xor
xor
xorl
in
nop
inc
cs
xchg
mov
outsb
roll
push
lret
aam
push
pop
fiadds
lea
xchg
lret
aam
or
js
movsl
cmp
jge
mov
enter
xor
jno
sub
fisubrs
jge
jne
dec
pop
sub
out
mov
lea
addr16
repz
inc
icebp
xchg
sbb
xchg
inc
jnp
sbb
dec
loopne
cmpsb
pushf
or
les
xchg
or
pop
cmpl
jl
sbb
xchg
loope
mov
call
sub
ffree
insl
xchg
jmp
lret
aam
cwtl
rcll
gs
xor
insl
ficoms
adcl
adc
and
sub
adc
lea
int
push
sub
xor
xchg
aaa
fsubl
or
jg
int
sub
lret
aam
pop
xlat
adc
imul
unpcklps
imul
xchg
imul
adc
pop
ds
mov
lea
jo
xchg
insl
lds
shl
pop
push
xlat
insl
cmp
pop
jo
xor
lds
rorl
adc
dec
pop
lea
pop
jo
adc
lds
push
dec
imul
loop
lahf
jno
sbb
je
push
push
adc
pusha
xlat
roll
pop
das
pop
ret
ss
js
nopl
insl
inc
or
or
add
push
repnz
xor
aad
sub
adc
pop
daa
adc
mov
scas
loop,pn
adc
xlat
pop
adc
data16
xor
stos
test
xchg
fnstenv
xchg
dec
or
sub
inc
imul
xchg
out
stos
daa
jmp
fnstcw
jno
mov
ds
mov
fldenv
jo
adc
mov
ds
ja
data16
jmp
sub
or
addr16
cmpsl
and
and
insl
mov
pop
sub
mov
sbb
inc
xchg
xlat
push
and
gs
mov
insl
push
icebp
mov
push
add
lret
imul
cmp
add
shrl
xor
and
insl
aam
pop
fldcw
mov
jge
arpl
and
stc
push
fldcw
mov
xchg
bound
jne
fimuls
push
xchg
lea
mov
fwait
call
pop
loope
neg
enter
jl
scas
mov
sub
cmpsb
ficomps
xchg
mov
subb
nop
sbb
jae
rorl
mov
jne
jne
sbb
push
jno
jno
sbbb
xchg
pop
insl
inc
shrl
adc
xchg
xlat
imul
pop
std
mov
shll
add
popa
cmpsb
mov
shll
popa
jno
imull
xchg
pop
xchg
insl
jmp
popl
insl
jbe
jge
mov
cwtl
test
jae
pop
mov
jp
sub
jns
jns
dec
fstpl
inc
int3
pop
int
call
cmpsb
in
test
icebp
jmp
dec
sbb
xchg
lds
and
xor
insl
mov
scas
fstpl
dec
pop
jmp
js
push
pusha
pop
xor
shlb
adc
lods
xchg
pop
lds
das
mov
out
sbb
adc
dec
pop
push
in
addr16
ret
fisttpl
in
dec
mov
lods
pop
addr16
jmp
sbb
push
lds
xchg
sahf
cmpsb
loope
jo
sbb
jmp
fstl
dec
push
lds
sbb
push
loopne
popa
pop
aad
dec
aam
push
ret
mov
dec
pop
cmp
repnz
pop
cmp
add
lea
mov
filds
insl
adc
pop
fmuls
jo
xchg
mov
mov
cmp
test
test
scas
jae
xor
in
fld
fists
in
outsl
subb
push
push
sbb
fisubrs
in
xchg
imul
scas
jae
and
jge
ljmp
xor
adc
loopne
fscale
inc
adc
fcomps
jmp
fstps
je
sbb
jbe
sbb
int3
iret
push
adc
jns
xchg
push
sub
push
cs
push
adc
roll
cmpsl
test
or
jp
pop
int
pop
mov
mov
mov
adc
int3
rcrl
sbb
lods
jnp
jo
push
cs
outsb
in
sub
pop
repz
jmp
shll
rcrl
ja
inc
pusha
aad
rcl
int
jae
mov
rcr
mov
jno
jmp
popa
add
cltd
mov
clc
mov
xchg
bound
aad
orl
loopne
adc
sub
cmp
jne
xchg
insl
mov
data16
lcall
lcall
push
outsb
pop
and
jae
push
cmp
je
adcb
xchg
bound
lea
shl
mov
lret
push
push
mov
xor
cmp
mov
dec
cltd
or
cmc
test
call
fcoml
fistps
arpl
jae
mov
insl
inc
imul
push
test
cmpsl
cmp
dec
insl
lcall
pop
xlat
jb
das
fadds
js
pop
cli
sub
dec
or
push
popa
sarl
fisubs
sti
sbb
mov
repz
mov
sbb
ror
cmpsl
orl
push
mov
and
iret
cmpsb
scas
jmp
adc
dec
or
pop
pop
cmpsl
enter
rcr
mov
pop
in
pop
mov
adc
outsl
adc
stos
mov
pop
dec
aad
es
rcll
aam
rcll
popf
pusha
lock
sti
aad
pop
push
sub
insl
insl
mov
push
xor
pop
popa
cmp
loope
data16
scas
pop
out
mov
loope
pop
dec
stos
xchg
popa
mov
add
xchg
mov
add
push
sti
mov
lods
aad
cmpsb
jle
jle
lea
jo
scas
add
fs
pop
adc
pop
call
push
sbbb
aas
dec
xor
add
aaa
mov
dec
push
jnp
mov
pop
jns
pop
loop
cmc
orb
add
mov
pushf
mov
aas
fisttpl
mov
xchg
push
dec
pop
popa
in
push
jl
or
outsl
les
pop
pop
bound
cmp
jno
lods
cmp
arpl
les
popf
repnz
mov
add
add
push
adc
data16
mov
les
test
sbb
mov
mov
repnz
and
fisubrl
push
dec
lea
pop
push
arpl
mov
bound
repnz
pop
jg
imul
xor
sub
jge
negb
daa
rolb
ja
jge
popf
test
or
nop
into
out
outsl
insl
push
ficomps
loop
mov
sbb
pop
sbb
push
leave
pop
lcall
sub
adc
xor
add
jg
pop
icebp
iret
push
loope,pn
jno
push
sbb
cmp
fcomps
scas
jmp
pop
filds
jo
nop
in
mov
add
mov
mov
into
ja
inc
jle
in
add
mov
pop
xorb
test
mov
add
jno
push
inc
cmp
lock
rep
cltd
insb
mov
cmp
ret
push
stos
xchg
popf
insl
mov
sbb
push
stos
jmp
cltd
cmp
jmp
jne
pusha
fs
div
add
mov
lea
mov
inc
mov
popa
imulb
mov
jge
cmp
xchg
cmp
push
xchg
dec
rcrb
gs
lret
sar
push
mov
sbb
pop
imul
aam
ficompl
and
in
fwait
sahf
fisubs
dec
fistpl
and
loop
sbb
pop
pop
pushf
and
sbb
jmpw
dec
or
and
and
and
dec
out
cmpsl
out
push
sub
ljmp
insb
lods
in
sub
pushf
loopne
sbb
lahf
push
movsb
and
shll
push
adc
cltd
popa
adc
push
push
and
sbb
in
aam
jle
push
or
loope
gs
push
imul
arpl
test
push
loop
fcomps
push
das
jmp
dec
fiaddl
dec
repnz
cwtl
orb
dec
cvtdq2ps
xlat
mov
outsl
dec
shl
mov
cmp
push
stos
aas
test
mov
dec
and
sbb
mov
inc
imul
mov
ljmp
jecxz
int3
repnz
push
mov
mov
out
or
jmp
adc
pop
dec
leave
and
push
scas
sti
xor
jmp
xor
pop
pop
add
or
and
fstpl
push
or
cmpsl
xor
pop
aas
xchg
cld
lods
sub
lock
xor
inc
shrl
ja
aam
cmp
test
imul
or
xchg
sub
xor
push
cmpsb
sub
inc
jmp
jge
mov
cmp
lock
movsl
inc
mov
arpl
cmp
test
dec
mov
negb
ss
jp
imul
dec
mov
push
mov
and
cmpsl
cmpb
mov
mov
iret
call
jmp
add
int
dec
out
sub
push
add
sub
hlt
and
push
add
and
pop
dec
fmull
push
or
dec
adc
adc
push
jg
fwait
in
pop
dec
test
lds
mov
push
xchg
dec
mov
lcall
mov
dec
dec
cli
stos
jb
scas
les
cwtl
mov
dec
loopne
insb
adc
push
pop
pop
divb
add
aam
adc
mov
in
call
and
or
sysenter
fldt
push
cmpsb
or
mul
nop
fwait
sub
es
mov
xor
std
and
push
dec
sbb
cmp
pop
sub
sbb
movsb
addb
popa
in
scas
pop
aaa
dec
jno
stos
jnp
xor
cwtl
adc
dec
mov
lds
notb
leave
and
adc
inc
dec
xor
dec
clc
dec
push
cmp
pop
inc
push
scas
mov
insb
pusha
inc
test
mov
mov
addr16
or
mov
jmp
mov
pop
dec
sbb
int
cmpsb
test
and
cmp
ds
iret
lods
cmp
aam
dec
adc
dec
sub
lcall
shlb
fisttps
lods
pop
sbb
nop
inc
jge
mov
inc
cmc
data16
dec
stos
and
add
adcl
jne
pop
mov
jmp
popa
xchg
pop
or
push
cmpsl
and
adc
imul
add
lcall
out
inc
mov
add
pop
cmp
dec
inc
xor
addr16
adc
int
lods
add
and
jno
rorl
pop
cmp
dec
sarb
dec
adc
cld
rorb
mov
cmp
dec
or
sbb
push
js
sahf
dec
sti
jno
and
xchg
clc
add
dec
fistps
ja
aaa
fwait
into
and
mov
insb
leave
sbb
cmp
loop
dec
mov
jmp
pusha
push
mulb
pop
fisttpll
and
and
adc
dec
inc
add
and
fiaddl
jbe
vmovups
ss
dec
mov
cmp
cld
ret
leave
add
bound
xor
popa
pop
orb
sti
mov
ret
jns
cmp
dec
xor
js
inc
jg
and
shlb
out
loop
daa
push
add
cmpsb
lods
ficompl
dec
mov
and
clc
pop
out
dec
int3
inc
jp
pop
adc
fisubl
leave
jge
sbb
test
mov
test
dec
jle
lahf
pop
dec
fisttpl
arpl
movsl
or
cmp
ret
pop
adc
dec
xchg
sbb
inc
idiv
cmp
test
xchg
push
add
in
dec
inc
fdivs
out
mov
pushl
idiv
cli
xorps
dec
mov
movsl
orl
mov
arpl
cmp
fiaddl
shr
xor
cmp
and
mov
pushf
or
mov
cmp
test
adc
dec
popf
dec
mov
sub
sub
and
nop
inc
dec
gs
push
inc
insb
mov
into
test
adc
out
pop
inc
push
test
inc
dec
mov
and
cli
dec
clc
push
or
cld
imulb
adc
and
cmp
sbb
lock
cwtl
fisttps
xchg
jg
dec
dec
adc
cmp
std
inc
adc
dec
inc
lret
sbb
lcall
jo
das
loopne
roll
insb
mov
mov
outsb
call
js
sub
aad
mov
pop
adc
nop
sbb
orb
dec
jb
adc
push
das
sbb
ss
and
pop
aaa
cmp
dec
dec
jbe
sbb
arpl
jg
enter
dec
jle
int3
mov
in
cmp
mov
sub
dec
dec
in
cli
cmc
sub
scas
jp
cwtl
jge
popf
lret
les
add
inc
clc
out
fcmovu
dec
dec
jg
fsubl
or
loop
cmp
dec
mov
pop
insb
and
mov
shll
mov
mov
clc
adc
cmp
dec
dec
insl
inc
sub
lock
lods
mov
pushf
dec
aas
xor
and
sub
scas
dec
test
scas
popa
int
popf
push
imul
push
cltd
es
imul
enter
dec
lcall
sbb
xchg
cld
dec
dec
test
xchg
sub
insl
pop
imul
fs
rorb
idiv
dec
dec
mov
mov
loop
mov
dec
js
movb
shll
into
faddl
xor
out
pop
fidivs
mov
decb
inc
dec
jbe
and
shl
roll
les
add
lea
cs
mov
cmp
leave
out
lret
dec
inc
sub
sub
xor
jge
jb
orl
in
scas
arpl
jle
mov
and
lock
inc
mov
mov
test
aaa
leave
outsl
dec
insb
mov
ret
or
mov
sub
cld
inc
dec
xchg
pop
loopne
jno
out
cmpb
or
mov
pop
loop
arpl
imul
iret
bound
cmp
cmp
cmpsl
imul
cltd
out
and
dec
xor
push
lret
pop
repz
popa
inc
cmpsl
dec
fisttps
lds
roll
or
dec
std
mov
mov
adc
or
dec
push
addr16
fisttpl
dec
cmp
orl
outsl
dec
add
shrb
ret
dec
dec
sub
mov
xor
mov
imul
mov
mov
dec
imul
into
imull
iret
jecxz
ss
sti
jp
inc
cli
or
inc
or
inc
ror
inc
push
cmp
sub
lods
push
pop
incb
cmp
rorl
or
xchg
dec
pop
pop
xor
aas
inc
je
pop
sbb
xchg
ret
dec
jmp
push
dec
mov
mov
add
add
xchg
sbb
mov
pop
add
data16
dec
lret
lock
fxch
dec
loop
jle
movb
xor
inc
add
aas
cmp
jmp
xchg
and
ret
inc
inc
dec
mov
jae
dec
push
sub
cwtl
nop
mov
inc
fwait
dec
xchg
cmp
lret
cmpsb
jns
and
jno
imul
adc
mov
jnp
andb
dec
dec
ljmp
cmp
outsl
sbb
insb
sub
push
es
sub
call
test
dec
fwait
ss
sub
dec
call
mov
aas
inc
adc
mov
or
call
and
push
adc
cmpsl
dec
dec
push
lea
dec
fldt
rcrb
mov
dec
es
repz
clc
inc
mov
mov
mov
gs
jg
inc
in
sbb
xchg
aaa
sbb
test
jecxz
dec
in
jmp
mov
jge
adc
scas
dec
scas
sarb
test
adc
pop
insb
adc
mov
jmp
add
iret
loopne
pop
call
in
add
in
jae
clc
imul
push
iret
pop
jmp
mov
or
out
cmp
jecxz
ss
mov
js
cwtl
cmpsl
mov
add
iret
push
daa
inc
dec
mov
mov
iret
mov
jl
cmc
sbb
in
mov
xor
loop
xchg
dec
bnd
jno
dec
std
test
mov
mov
dec
xchg
dec
or
fidivrs
cmpsb
sbb
and
arpl
ss
sub
mov
add
movsl
cmpsb
call
lods
sub
dec
and
sbb
sbb
cmp
repz
mov
push
xchg
pushf
mov
loop
daa
nop
and
dec
xor
mov
push
inc
das
cmp
fwait
loop
repz
mov
dec
dec
movsb
sbb
xchg
pushf
ss
push
insb
push
jne
xchg
mov
in
dec
test
jge
jmp
dec
push
dec
dec
push
mov
ss
jecxz
dec
sbb
pop
sahf
push
mov
mov
cmpb
cmp
fdivs
lds
jmp
cli
pop
dec
loope
push
fstpl
ret
fisttpl
mull
jnp
inc
rolb
scas
adc
stos
sbb
pushf
pop
cmp
push
xlat
test
dec
dec
addb
or
leave
xchg
decb
lods
lock
cmp
popf
mov
sub
pop
cmp
mov
push
or
add
cmpsl
pop
inc
add
mov
sti
inc
pop
in
inc
rorb
jmp
xchg
inc
test
fwait
xchg
mov
test
and
in
lahf
dec
loop
adc
cmp
push
imul
sti
in
mov
in
loop
dec
int
ret
add
pop
sbb
xor
fs
and
dec
xor
fwait
xor
lret
or
sbb
and
sub
das
daa
pmulhuw
inc
test
incb
inc
mov
push
ret
sarb
inc
dec
bound
push
loope
push
out
dec
inc
fadd
inc
out
mov
dec
mov
xor
sub
sbb
fs
and
dec
pop
sbb
outsb
mov
repnz
mov
mov
dec
loopne
inc
pop
jmp
dec
xchg
mov
les
add
dec
cmp
adc
mov
dec
lds
insb
dec
imul
adc
dec
repnz
or
mov
sbb
movsl
fsub
add
dec
push
jae
cmp
outsb
shrb
dec
jns
xor
sub
stos
mov
adc
test
out
pop
jae
dec
mov
lods
push
inc
cmp
inc
and
enter
pop
mov
pop
insb
adc
push
into
js
shll
lods
dec
ljmp
je
xor
fcmovbe
lahf
loopne
dec
mov
xchg
insb
sbb
dec
or
test
jns
ret
dec
or
jecxz
pop
dec
mov
lds
push
add
xor
jle
or
mov
test
and
scas
sbb
ret
dec
inc
faddl
cmp
push
ds
mov
cld
mov
movb
add
das
fiadds
in
or
xor
mov
lret
dec
dec
xchg
js
xchg
or
rorl
cmpsb
clc
pop
mov
ret
inc
outsl
mov
adc
or
sbb
jle
add
dec
mov
std
imul
mov
ss
dec
cmp
int
sbb
imul
in
rcll
mov
movsb
dec
int
outsb
adc
cmp
jns
inc
fcomi
dec
cld
lret
fimuls
loop
jge
pop
pop
mov
inc
movsl
dec
jb
rol
and
adc
arpl
inc
dec
adc
fstps
dec
fimuls
xchg
mov
lock
hlt
inc
dec
scas
dec
mov
jns
popf
ret
bsf
adc
in
lret
jno
pop
mul
dec
jb
xor
aam
mov
sahf
dec
jmp
subb
inc
dec
mov
or
leave
test
int3
cwtl
push
dec
test
dec
mov
nop
mov
pop
shrb
lds
out
and
mov
sub
dec
stc
mov
repz
sbb
fcmovb
gs
imul
dec
mov
dec
fwait
cmpsl
sub
movsb
stos
push
les
adc
push
daa
paddusb
sub
and
out
mov
mov
ret
xor
pop
in
ljmp
adc
out
adc
andl
push
or
or
cld
les
xlat
xor
stc
cmp
cltd
ja
cwtl
rcrl
and
test
iret
inc
mov
nop
cmp
and
jmp
inc
dec
jae
inc
mov
xchg
lods
js
cld
inc
popa
fwait
stos
nop
dec
out
xlat
jl
scas
inc
sub
cmp
xor
xchg
lret
mov
sbb
mov
pop
add
or
cmp
iret
test
or
ffreep
lods
push
or
mov
test
adc
aas
pop
imul
cld
mov
pop
imul
nop
fnstsw
loope
push
sbb
adc
xor
mov
dec
cwtl
push
dec
sub
push
dec
sahf
sbb
push
dec
icebp
push
scas
das
mov
dec
pop
jno
mov
dec
scas
push
and
testl
mov
das
cmpsb
pop
hlt
sub
inc
cld
add
pop
in
dec
stos
fcoml
lret
jl
insb
repnz
in
xor
idivl
dec
lea
les
mov
jbe
push
jecxz
pop
or
dec
into
jmp
in
jl
dec
jecxz
mov
enter
movsl
or
loop
add
pop
pop
daa
adc
cld
adc
in
les
cmp
jp
je
and
push
add
ret
and
ljmp
push
sbb
and
hlt
and
or
lret
and
clc
ljmp
jmp
push
dec
inc
pop
mov
test
fisubrl
in
xor
into
inc
mov
push
jnp
xchg
fmull
les
orb
in
fmuls
mov
inc
gs
imul
mov
dec
mov
xor
loope
pop
inc
push
cwtl
lret
rolb
hlt
mov
jmp
push
insl
dec
ror
std
mov
mov
das
push
and
pop
cwtl
repz
dec
insl
cmp
dec
mov
inc
and
and
xchg
testl
js
push
cmp
popw
cmp
push
inc
shlb
push
mov
sbb
adc
loop
call
inc
jmp
negl
add
cmpsb
rclb
pushf
sbb
sbb
ds
lret
sub
jecxz
and
dec
hlt
dec
add
int3
lea
jg
shll
movsl
jge
cltd
pop
decl
push
vpaddd
cwtl
mov
jl
outsb
es
xchg
imul
negl
push
add
add
pop
inc
and
lock
mov
jbe
push
inc
fiaddl
in
dec
jne
addr16
cli
cmp
pop
add
sbb
sti
lret
roll
lods
test
push
aaa
mov
movsl
imul
or
sahf
cmp
pop
mov
or
jns
out
nop
jge
mov
int3
ror
bound
adc
dec
popl
xchg
imul
push
adc
mov
sbb
push
xor
scas
xor
aad
inc
data16
repnz
movsb
repz
mov
into
cmpsb
add
movsl
pop
xor
add
dec
pop
or
in
push
xchg
fisubs
mov
push
insb
adc
adc
sti
xor
mov
negl
jb
das
or
jns
pop
dec
adc
ficompl
orb
dec
fbstp
lret
out
out
xlat
mov
inc
sti
fisubrl
lock
clc
push
ja
dec
add
lods
lahf
call
adc
mov
dec
pop
dec
sub
xor
ret
je
jl
imul
pop
cmp
xchg
add
ror
xchg
bsf
dec
pop
dec
push
decl
inc
in
dec
mov
ret
movsb
mov
push
test
shl
add
jp
xor
das
ret
add
push
dec
test
lahf
jmp
jl
icebp
addl
stos
hlt
insl
mov
mov
xor
or
pop
leave
inc
jae
fsubs
xor
test
adc
pop
inc
adc
push
and
icebp
sbb
repnz
insb
into
out
aaa
dec
xchg
fisttpl
jmp
mov
imul
iret
mov
mov
push
add
xchg
inc
cmpsb
mov
adc
sbb
xchg
dec
cmp
inc
mov
adc
xor
cmovno
cmp
ret
push
mov
push
lods
jg
pop
add
push
or
into
pop
enter
xlat
mov
push
inc
dec
inc
jmp
lods
adc
dec
jb
in
and
fmull
in
dec
cwtl
ss
mov
shl
ds
mov
mov
insl
mov
insb
add
xlat
add
mov
in
lods
ficoml
movsl
cmp
mov
cld
jnp
xchg
dec
sti
out
jmp
sbb
dec
mov
xor
xlat
shrb
pushf
inc
dec
dec
jmp
mov
movb
daa
dec
aad
scas
cmpsl
lods
cmpsb
dec
in
es
loop
inc
push
sub
dec
lds
dec
hlt
dec
pop
mov
cmp
sbbl
push
leave
popf
adc
push
aam
pop
push
mov
jmp
cmp
sub
and
mov
imul
packsswb
int
dec
xchg
inc
mov
cmp
mov
loopne
dec
cli
add
inc
scas
mov
mov
sarl
in
inc
ret
mov
mov
add
repnz
test
or
mov
jmp
inc
cmp
mov
in
repz
movl
movsb
push
or
xor
xlat
ljmp
lahf
iret
xchg
xchg
test
pusha
jbe
in
dec
cmp
sbb
lods
pop
jp
les
push
and
mov
inc
mov
mov
push
mov
push
sub
mov
int
jp
and
ss
ljmp
inc
fsts
int
shlb
dec
cmp
xchg
scas
add
aas
ss
cmp
sub
test
or
mov
pop
or
jb
mov
dec
lret
mov
inc
cmp
adc
inc
and
dec
rcr
scas
mov
loop
imul
das
je
icebp
call
or
scas
xorl
stos
dec
nop
xorb
dec
xchg
dec
fistpll
xlat
inc
dec
lods
cltd
pushl
outsb
and
dec
lods
movsl
adc
xor
fstpl
inc
bound
bound
inc
fsubrl
dec
xor
push
imul
cmc
or
scas
loopne
out
dec
adc
sub
or
push
cmp
mov
pusha
sub
dec
add
add
aam
mov
xchg
or
jl
dec
dec
jns
fmuls
cmp
test
dec
xor
lods
jl
clc
ds
mov
or
stos
and
dec
faddl
pop
orb
mov
sbb
inc
inc
push
pop
sub
push
mov
dec
ss
fiaddl
and
inc
lods
dec
and
cmpsl
ss
clc
out
dec
inc
dec
scas
insb
into
and
jp
loopne
negl
mov
dec
js
stos
sbb
pop
imul
and
leave
sbb
int3
adc
sub
xchg
fldl
imul
xchg
dec
cmp
sub
repz
and
xor
lods
mov
ss
repnz
and
inc
adc
dec
hlt
enter
or
xor
jmp
loop
fisttpll
mov
add
adc
call
leave
cmpsl
dec
lods
inc
insb
in
push
mov
cmpsb
xchg
xchg
jg
dec
data16
pop
and
das
movsb
mov
jecxz
dec
aaa
or
test
dec
and
xchg
dec
mov
mov
loopne
dec
aam
rorb
or
jae
inc
lahf
gs
cli
cmp
add
sbb
inc
mov
les
inc
aaa
out
mov
clc
dec
cmp
cld
mov
push
push
push
jns
mov
inc
inc
jmp
dec
sbb
repnz
adc
and
imul
cmp
dec
mov
clc
sub
dec
pop
dec
aam
xchg
sub
pop
mov
dec
adc
dec
call
push
mov
xchg
push
dec
data16
ljmp
in
cwtl
cmpsb
imul
repz
test
fildl
and
cmp
ss
dec
je
mov
dec
mov
or
mov
push
pop
jmp
or
dec
mov
jno
pushf
dec
cld
inc
repz
test
mov
cmp
sarl
inc
mov
push
lods
add
and
and
stos
sbb
mov
es
scas
dec
out
stos
lea
ljmp
pop
mov
leave
in
pop
popa
fcomp
fs
sub
and
lods
pop
xor
jp
dec
addr16
out
outsb
sub
push
cmp
dec
jmp
enter
sub
mov
mov
dec
xor
dec
mov
dec
sbb
test
and
aaa
or
jmp
mov
push
sbb
shrb
into
int3
outsb
sub
pop
inc
dec
jmp
inc
sbb
test
sub
push
mov
add
sbb
add
push
jb
pop
loope
test
xchg
and
pop
add
into
enter
out
sub
push
dec
dec
fbld
loop
lds
mov
pop
sbb
cmpsb
jno
icebp
push
and
test
jmp
cltd
xchg
push
lea
mov
or
mov
gs
mov
jns
adc
xchg
and
add
push
shl
jns
push
mov
insl
ds
lock
dec
fstpl
mov
lea
add
push
scas
subb
xchg
imul
cmc
cmpsb
dec
ljmp
dec
sahf
mov
arpl
loopne
shrl
icebp
lea
push
or
fdivrp
inc
cld
icebp
fcmove
push
pop
push
adc
xor
push
jle
out
xchg
add
inc
xchg
icebp
out
int
mov
repnz
sti
cmpsb
sbb
jbe
out
xor
mov
pop
xorl
cmc
push
ret
popf
push
cltd
sbb
les
lret
pop
or
lcall
popf
adc
xor
lahf
fiadds
xor
cmp
fidivs
lea
ljmp
and
test
inc
mov
pop
sbbb
loop
gs
sar
push
aaa
icebp
ljmp
iret
cs
jb
sbb
cmpb
dec
push
mov
pop
test
mov
or
ljmp
test
ja
or
jno
mov
nop
or
jns
ljmp
xchg
pop
push
push
mov
imul
dec
mov
xor
je
jb
xor
push
xor
xchg
lods
xor
fstp
out
or
in
loop
pop
lahf
lods
pop
xchg
add
jnp
rcll
jge
lods
and
bound
test
mov
dec
notb
mov
push
lcall
test
test
test
test
test
test
js
sbb
push
fsub
push
out
cli
pop
xor
fisubs
cmp
mov
dec
aam
mov
push
xor
add
mov
or
mov
push
push
mov
mov
cmp
fiaddl
sbb
jmp
sbb
fisubrs
stos
and
loop
cmp
ss
xor
fiaddl
jmp
cmp
push
std
shl
int
pop
mov
xor
outsl
jnp
pushf
cli
mov
or
das
mov
lock
out
scas
shrl
cli
out
sub
jmp
xor
mov
rorl
das
ljmp
scas
ljmp
adc
bound
mov
lcall
pushf
or
or
mov
loop
sub
mov
rorb
lea
cs
cmp
sub
sbb
push
push
sbb
fisubrl
add
jle
out
sbb
loop
insl
loope
push
push
mov
sub
pop
jns
xor
lret
inc
sbb
and
or
mov
es
decb
scas
pop
nop
int3
xchg
daa
jmp
sbb
or
sbb
adc
adc
cs
ficoms
leave
sbb
jae
mov
lock
js
ss
repnz
popf
push
xor
repz
sahf
orl
fbstp
cwtl
and
repnz
mov
mov
jg
adc
fstps
xchg
jae
popa
xor
xchg
mov
scas
test
ds
mov
in
popf
mov
negb
test
or
push
mov
rcl
pop
cld
stos
bound
lret
incb
pop
mov
xor
stc
inc
jge
js
and
orb
loopne
xor
inc
repz
push
movsl
cmc
xchg
sub
sahf
dec
or
xchg
cmp
sti
test
mov
xor
mov
jmp
xor
scas
xor
fisubl
aaa
sti
cmp
mov
or
fistpl
and
adc
add
jp
sub
loop
cmc
imul
adc
or
std
xor
leave
scas
bnd
loop
or
push
cmp
pavgb
popf
adc
sbb
test
push
mov
loop
das
xchg
sub
push
das
push
lods
mov
repz
mov
mov
int
imul
pop
scas
push
mov
pop
std
outsb
xlat
sub
sub
gs
pop
jno
jne
test
jns
int3
stos
dec
xor
pop
jno
pop
imul
adc
dec
aaa
gs
xchg
cmp
gs
and
shrl
shlb
push
adc
push
dec
movsl
rcr
sbb
lods
xchg
loope
rcll
adc
sbb
xchg
and
aam
and
dec
pop
sahf
sbb
sub
lret
les
pop
pop
cwtl
fcomps
fimuls
push
fwait
pop
loop
sbb
fdiv
sub
or
xor
xor
and
and
jp
mov
dec
jle
dec
pushf
cld
or
hlt
jl
adc
dec
pushf
fmull
and
fs
loope
pop
mov
insb
loop
gs
add
rcll
aad
dec
adc
adc
push
mov
sbb
adc
repz
pop
push
adc
dec
imulb
xlat
pop
in
mov
and
jne
pop
fwait
xchg
push
cmovle
pop
arpl
adc
icebp
mov
fistps
lods
jecxz
mov
push
add
sub
add
outsl
scas
out
das
jo
dec
lock
jb
repnz
mov
xor
xor
dec
xor
ja
idivl
js
clc
dec
cmp
lret
popl
lods
lea
enter
jg
cld
dec
stos
out
shr
mov
adc
add
leave
fdiv
fcoml
repz
cmp
lds
call
adc
add
mov
scas
adc
or
testb
in
cmp
sub
mov
int
mov
ss
in
fmull
cmp
add
jp
adc
mov
clc
xor
push
and
dec
adc
or
jnp
xchg
dec
mov
insb
je
imul
xchg
adc
sub
jl
pop
ds
mov
sahf
mov
dec
jp
ljmp
or
cmp
and
mov
in
cmpsb
dec
sbb
add
add
cmp
dec
push
rolb
movsl
rclb
aam
test
ret
out
dec
fdivrs
nop
imul
push
push
mov
fs
lock
dec
lock
test
sbbl
adc
dec
pop
mov
test
adc
imul
std
dec
fdivs
fists
lock
xorl
fcoml
adc
mov
sar
ffree
je
leave
xchg
xchg
sbb
cmp
lcall
cmp
sub
adc
popf
fs
movsl
sub
test
xchg
loopne
or
push
add
stc
jnp
inc
movsl
pop
insb
or
xor
push
mov
jno
inc
out
test
int
dec
dec
pop
sbb
in
sub
fildl
dec
sbbb
mov
insl
push
jmp
xchg
cmp
jg
sub
sub
dec
push
in
fnstcw
xchg
mov
shrb
lret
and
xlat
mov
ja
xor
pop
sub
push
mov
imul
dec
inc
loop
cmp
mov
movsb
outsl
mov
dec
int3
jbe
movsl
dec
ds
inc
jg
xlat
sbb
loop
rcll
mov
hlt
inc
mov
insl
jecxz
mov
mov
sbb
mov
jg
fiadds
icebp
sub
mov
in
cmp
repnz
push
out
xor
out
sbb
xchg
insl
in
arpl
popa
cli
pop
dec
xchg
xor
xchg
rorb
dec
clc
call
mov
adc
adc
jg
pop
jmp
dec
out
mov
xchg
pop
imul
cmc
adc
sbb
cmp
test
mov
jle
outsl
sub
fistpll
das
call
xchg
dec
dec
out
shll
iret
and
sbb
mov
ljmp
adcb
addr16
sbbl
jmp
lahf
xchg
push
mov
dec
movsb
cmp
cli
fdivr
jecxz
jo
sahf
ja
mov
pusha
push
xor
push
xchg
fcmovb
dec
pop
movsl
fstps
and
lods
aam
add
adc
int
mov
lret
cmp
dec
cmpsl
sub
push
mov
shr
ljmp
outsl
inc
pop
dec
repnz
dec
and
jp
dec
loop
or
aam
lret
mov
rcrl
cmp
push
addr16
xchg
dec
loope
jp
outsb
mov
pop
mov
dec
jbe
mulps
xor
pop
push
out
das
sbb
xchg
and
dec
enter
push
and
xor
dec
lret
gs
sub
dec
daa
test
xlat
push
jle
insl
test
cmc
lock
xchg
es
les
or
dec
in
dec
add
mov
xchg
dec
jp
outsb
inc
fsts
adc
mov
pop
jbe
mov
cmpsl
xchg
orb
inc
mov
loopne
ret
push
dec
inc
cmp
repnz
or
dec
pop
jle
cmc
cmp
cs
sub
sbb
mov
dec
clc
addr16
mov
push
dec
stc
xor
ljmp
mov
mov
sbb
ret
mov
ror
and
mov
push
inc
dec
push
sub
int3
dec
cmp
mov
repz
add
dec
subb
imul
jbe
cwtl
dec
in
mov
cmp
and
arpl
mov
inc
cmp
xchg
cmp
rorl
repz
mov
shrb
pop
inc
push
mov
dec
lcall
cmpsl
filds
mov
fadds
inc
pop
dec
dec
adc
add
cmp
jae
xchg
orb
dec
jns
leave
cmpsb
outsl
popl
dec
lret
mov
dec
inc
fadds
mov
lods
pop
movsb
xor
shl
dec
dec
cs
lahf
orl
add
jp
sub
int3
test
jmp
out
add
dec
insl
arpl
mov
inc
int
dec
dec
stos
cmp
imul
popa
mov
push
out
js
cs
dec
adc
inc
pop
inc
add
pop
lcall
push
push
sahf
js
adc
dec
lahf
aam
and
inc
std
dec
and
fadd
mov
aaa
fsubr
rorl
popf
jne
inc
dec
pop
jo
adc
nop
inc
enter
div
pop
inc
push
lret
xchg
das
ss
inc
aaa
sub
shlb
cs
aam
inc
xchg
push
or
aad
pop
repnz
in
dec
cmc
test
push
mov
dec
xor
cmp
fiaddl
pop
cmc
push
popf
xchg
dec
xchg
imul
addl
roll
out
push
sbb
sub
fs
add
popa
mov
iret
inc
std
sbbl
ja
pop
es
inc
xchg
dec
adc
loopne
dec
stos
addr16
cmpsl
fstp
xchg
and
jmp
dec
ljmp
fadds
xchg
dec
dec
cmp
add
test
mov
ret
mov
mov
pop
and
push
dec
ljmp
push
cmpsl
jp
pop
repz
adc
xlat
dec
addl
push
pop
sbb
push
mov
in
movsb
dec
add
xchg
jae
mov
sub
cmp
xor
mov
mov
mov
js
stc
push
xor
push
dec
lods
cmpl
pop
inc
int
nop
dec
push
dec
mov
loop
mov
push
scas
sti
sti
pop
dec
cmpb
scas
cmp
in
pushf
jo
test
imul
inc
lea
aaa
xchg
xlat
adc
dec
mov
testb
jnp
push
fstps
outsb
adc
shr
pop
mov
dec
aas
icebp
rorl
insb
xor
dec
or
inc
mov
dec
cmp
inc
mov
loope
cmpsl
and
test
inc
out
sahf
dec
pushf
mov
fs
lds
lcall
out
dec
outsb
xchg
in
jecxz
dec
insb
or
lretw
test
mov
mov
jmp
dec
lods
pushf
jecxz
xchg
rcll
pop
jl
lds
call
andb
mov
and
adc
xchg
xor
dec
cmpsl
leave
outsl
lds
push
inc
jb
imul
xor
loopne
cmp
into
sub
dec
int3
mov
mov
dec
daa
mov
icebp
adc
lcall
sub
fisttpll
xor
dec
add
sub
cmpb
add
ret
das
sbb
repz
js
xor
daa
cmp
mov
testb
sbb
inc
push
arpl
mov
push
jno
jg
cmp
pop
push
sub
in
cld
shlb
sub
mov
add
mov
add
les
hlt
icebp
jns
test
adc
inc
xchg
aad
dec
jne
sub
daa
hlt
cmpsl
out
mov
repz
push
cli
inc
insb
xchg
push
push
mov
mov
xchg
dec
push
add
push
cmpsl
les
xchg
data16
into
adc
dec
incb
add
lret
mov
scas
cmp
pop
clc
test
fwait
and
call
cmp
fistpl
movsb
dec
xchg
add
cmp
and
jg
call
rcll
cmp
and
xchg
xchg
jge
dec
mov
push
xor
stos
enter
nop
sbb
cmpsl
fwait
inc
lahf
mov
movzbl
jge
push
mov
lods
into
shrb
push
xor
subb
loopne,pt
mov
xor
andb
push
add
xchg
movsb
call
and
adc
insl
dec
scas
pop
js
pop
cmpb
cmp
int
cmp
jbe
cmp
insb
dec
out
stos
adc
enter
mov
ds
sub
dec
fs
fmull
mov
and
pop
jecxz
out
push
sbb
jge
mov
cmp
jne
mov
mov
or
jg
xchg
adc
cmp
cmp
mov
xchg
das
sbb
loope
fisubs
pop
repz
scas
push
pslld
mov
cltd
dec
cmp
push
stos
inc
dec
es
and
xchg
je
and
ret
xchg
jg
jno
dec
jl
mov
push
dec
xchg
xor
mov
and
add
aas
outsl
mov
fimull
cmp
rep
enter
cmpsb
stos
dec
mov
arpl
std
dec
sahf
xchg
dec
pop
jge
test
and
pop
cltd
inc
and
or
std
cmpb
adc
mov
pop
rcr
dec
push
xchg
push
stc
in
movsb
fnstenv
aaa
ficoml
and
lret
dec
pop
sbbl
mov
mov
cmc
or
push
mov
jno
mov
mov
and
xchg
lds
pop
cltd
sub
sub
cmp
xchg
lcall
cmp
addr16
aaa
sahf
shrb
mov
pop
dec
pop
outsl
push
cld
fnsave
enter
nop
or
dec
sub
xchg
ret
shlb
dec
push
in
loop
daa
insb
mov
imul
add
inc
push
push
or
add
xchg
scas
mov
xchg
mov
push
push
cmpsb
int3
negl
ret
mov
fimuls
and
xchg
push
clc
dec
in
sub
and
int
loope
xchg
repz
push
dec
pusha
pushf
add
clc
cmp
jp
mov
add
mov
sbb
adc
js
imul
vmovshdup
inc
push
push
push
sub
or
sbb
dec
sti
sub
and
jl
in
cltd
fcomi
sbb
dec
push
je
mov
and
ret
mov
ja
dec
mov
and
pop
mov
icebp
lahf
inc
or
mov
mov
cld
jo
scas
dec
jmp
or
mov
mov
cs
popf
dec
test
or
cmp
int
jp
xchg
std
insb
loopne
test
int
out
stos
xor
divl
ret
sbb
add
or
dec
cli
jge
mov
inc
rcrl
and
std
fsubrl
outsb
push
fimuls
ja
cmpsb
and
arpl
xchg
aad
xor
dec
sub
pop
cmpsl
int3
jl
ds
ret
mov
dec
out
and
mov
sti
add
jecxz
fsubp
xchg
dec
ljmp
jle
lcall
add
cmpsb
dec
mov
mov
in
rol
cmpsl
cmp
dec
mov
sub
sub
testb
sahf
xor
lods
nop
xor
je
into
cmp
xor
sbb
add
add
pshufw
int
fs
jecxz
push
in
cli
int3
leave
mov
pop
inc
adc
popa
and
sub
xchg
test
add
scas
enter
pop
fwait
adc
push
dec
dec
inc
push
cmp
dec
add
mov
dec
pushf
std
jge
dec
or
dec
dec
inc
loope
inc
xchg
xbegin
xor
fnstcw
fsubrs
bound
repnz
and
fwait
jmp
pop
je
jle
out
xor
fstl
mov
sarb
sbb
jmp
mov
mov
dec
fwait
xchg
or
pop
icebp
roll
dec
add
not
inc
inc
mov
xor
dec
rorl
je
out
fcmovb
ds
or
out
out
mull
dec
mov
fistl
xor
cmp
push
pop
mov
lahf
adc
pop
dec
add
insb
dec
xor
pop
jmp
cltd
nop
addr16
mov
popa
mov
pusha
dec
iret
outsl
test
cwtl
xchg
sahf
jg
int
sti
rorb
stc
int3
cmp
into
daa
out
repz
mov
ja
dec
rorl
adc
sti
cmp
in
mov
dec
push
xchg
ficompl
or
clc
stc
mov
sbb
mov
mov
push
add
sub
push
ja
orb
pop
and
xlat
add
scas
push
dec
xchg
imulb
sbb
stos
test
sub
shrb
mov
sarb
sti
mov
cmpb
dec
mov
sub
pushf
xchg
mov
xchg
add
les
cmp
jbe
lcall
lds
inc
test
sbb
and
sub
orb
scas
mov
push
pop
fwait
call
adc
dec
jl
bound
les
jge
sahf
mov
lcall
fisttps
add
popf
add
fisttpl
mov
sub
popf
xchg
dec
mov
pop
sbb
sbb
pop
cmp
and
inc
icebp
mov
mov
gs
int
out
ret
cs
sub
pop
sbbb
xor
rorl
ja
mov
mov
pop
push
std
and
xchg
aad
jp
jne
add
dec
sub
mov
dec
xor
mov
sbb
les
jbe
sbb
inc
inc
icebp
cmp
sub
inc
or
mov
push
sbb
shl
sbb
lods
mov
fistps
lods
add
jge
and
sbb
pop
lods
dec
sarb
adc
dec
pushf
gs
testb
xchg
mov
in
dec
in
mov
test
dec
adc
add
mov
insb
mov
into
push
repz
jecxz
icebp
push
testb
jmp
mov
or
arpl
cmc
fmuls
fwait
inc
inc
lahf
mov
rorb
mov
mov
ret
pushf
mov
sub
test
xor
mov
push
xor
dec
mov
aam
pusha
push
rcr
jg
xorl
mov
inc
pop
rol
rclb
xor
mov
pop
dec
rcr
xor
es
and
imul
pop
pop
das
adc
xchg
push
push
cmp
scas
adc
jbe
cs
insl
jle
jae
pop
xor
ljmp
nop
pop
addb
dec
xlat
mov
ret
jb
push
adc
or
mov
and
push
sbb
ror
pop
inc
jo
ljmp
rcll
mov
fcoml
xchg
inc
and
icebp
jecxz
or
hlt
adc
xor
movsl
test
loopne
push
je
dec
cmpsl
inc
rolb
dec
push
std
loope
out
dec
cmp
mov
add
fnstcw
dec
gs
lahf
sub
ds
mov
xchg
dec
or
jle
mov
and
mov
shll
mov
cmc
lock
xor
outsl
shrb
les
dec
mov
mov
push
push
adc
mov
das
push
in
sti
stos
jmp
and
cmp
dec
or
dec
sbb
push
imul
nop
inc
outsb
movsb
jns
lret
aam
mov
mov
add
orl
xlat
jno
rorb
push
repnz
pop
dec
and
subl
or
rorl
dec
cvttps2pi
push
mov
jl
lret
repz
cmp
dec
ret
or
pop
adc
dec
jge
lret
inc
pop
inc
loop
add
scas
or
decb
imul
mov
movsl
push
or
add
dec
pop
outsb
push
int3
test
dec
xchg
lcall
push
fiadds
mov
xchg
sbb
js
fdivrs
sbb
fwait
sbb
hlt
xor
dec
push
jb
lahf
xlat
mov
dec
and
push
loope
popf
orl
pop
push
mov
stos
stc
lret
dec
dec
adc
cmp
jle
dec
push
in
dec
in
shrl
and
repz
fwait
add
inc
jecxz
mov
xor
nop
push
and
hlt
fldl
mov
pop
negl
popf
clc
dec
pushf
movsl
mov
or
cmp
mov
push
jp
xchg
iret
push
negl
stc
cltd
xchg
dec
jae
sub
mov
test
popf
into
inc
inc
mov
mov
push
clc
dec
sub
mov
xchg
aas
or
mov
pop
fwait
pushf
scas
adcb
mov
or
cmp
dec
cmp
in
pop
jns
aaa
scas
dec
cmp
stc
outsl
hlt
dec
sub
fs
aam
xchg
push
xchg
sbb
inc
stos
push
dec
js
mov
lahf
dec
adc
dec
sbb
loopne
push
push
andl
xchg
outsb
sub
outsb
adcl
fwait
sbb
scas
xchg
addr16
dec
cli
mov
xchg
aad
adc
scas
xchg
out
jno
xchg
test
cld
and
xor
test
and
xorb
aaa
fdivrp
repz
xchg
shl
imul
jmp
lret
dec
and
dec
mov
lods
bnd
cmp
pusha
jbe
mov
loope
xor
cs
and
mov
fimuls
cmpsb
les
ja
push
ss
daa
xchg
jmp
dec
push
xchg
call
jb
inc
dec
mov
xor
or
cmp
fwait
dec
mov
aas
pop
dec
xchg
xor
dec
sarb
pushf
inc
icebp
or
dec
ljmp
aaa
dec
add
mov
mov
cltd
pushf
jb
in
sub
pop
imul
inc
push
dec
dec
int3
adc
in
dec
xchg
outsb
ror
pop
pop
test
bound
lcall
dec
loop
dec
jbe
stos
xor
dec
cltd
xor
pop
or
dec
add
mov
xorl
jnp
jle
push
sarl
cwtl
push
ljmp
aad
fwait
inc
and
dec
movsl
fnsave
dec
mov
cmp
mov
dec
mov
mov
cmp
dec
je
xchg
mov
jae
jnp
sub
and
adc
cmp
lret
ret
pop
movsb
jl
js
outsl
insb
or
repnz
pushf
roll
mov
add
imul
cmp
int3
mov
mov
dec
cmpsb
mov
imul
adc
dec
push
inc
dec
dec
jne
cmp
add
stc
lea
lahf
repz
push
dec
dec
shrl
lods
call
sar
lea
decl
or
das
mov
xchg
xor
aas
cmpb
daa
lahf
push
loope
lcall
cmp
adc
orl
pushl
enter
and
adc
jno
push
cmp
mov
iret
hlt
adc
int3
and
xor
pop
lcall
push
add
jns
push
dec
jo
dec
in
fdivl
nop
xor
and
dec
or
popa
mov
cli
dec
call
sbb
repz
jne
test
inc
imul
nop
mov
inc
mov
iret
and
imul
sbb
int3
dec
push
dec
jge
jns
dec
sti
inc
push
mov
dec
add
xchg
mov
mov
cmp
push
aam
inc
lcall
dec
push
jo
scas
sti
add
push
pop
ror
movsl
adc
mov
mov
dec
pop
or
nop
adc
dec
loopne
dec
cmp
add
pop
pushf
adcl
outsl
jns
sti
or
sbb
rcll
repz
mov
dec
dec
cwtl
mov
dec
dec
or
mov
imul
into
push
sub
jno
mov
pushf
jns
mov
dec
push
sbb
aam
add
push
push
push
pop
sarb
dec
xor
pusha
xor
in
push
insb
daa
popa
nop
lods
jo
ret
mov
fmul
bound
aad
es
and
sub
insl
ja
sub
punpckhdq
push
xchg
cld
testb
or
xor
pop
test
sbb
insb
hlt
lea
clc
ja
xchg
mov
testl
nop
cmp
lods
mov
xchg
sub
enter
pop
cmpsl
jmp
dec
jge
decb
pop
inc
xchg
movsb
fmull
adc
dec
sti
aaa
sub
leave
cmp
out
dec
sbb
les
arpl
stos
push
bound
adc
or
jecxz
enter
fsubp
pop
out
int
and
mov
adc
out
subb
test
mov
or
out
and
push
mov
dec
sub
mov
and
call
add
lret
dec
xchg
cltd
inc
mov
ror
jb
testb
pop
and
mov
call
mov
or
cmp
fnstenv
lock
es
pop
xchg
mov
js
scas
into
xchg
add
ficoml
pushf
std
rolb
fwait
test
inc
xor
sub
sbb
xchg
jecxz
fxch
dec
pushf
insb
cwtl
stos
aam
sbb
mov
popl
adc
cmp
cli
jl
cmp
or
mov
int
mov
test
mov
mov
loopne
les
cmp
ret
lahf
push
loopne
enter
js
push
dec
add
jo
cltd
adc
dec
cmp
lret
ds
popf
mov
dec
xchg
dec
loop
sbb
dec
mov
push
daa
movsl
je
dec
or
in
push
dec
cmp
out
mov
push
shll
jae
shlb
lds
push
mov
mov
test
xor
dec
popf
add
push
cmp
push
mov
mov
insl
cmp
dec
add
gs
ja
add
xchg
mov
addb
dec
push
sub
and
or
arpl
fdivp
xchg
pop
mov
inc
lret
adc
cmp
outsb
mov
pop
js
sbbb
push
cmp
sub
cmpsb
dec
fcomps
addr16
cli
add
mov
cmpsl
imul
ss
xor
in
ret
push
add
into
xchg
sub
jp
dec
repnz
and
jl
xchg
imul
push
lcall
mov
mov
cmpsl
or
dec
sub
mov
in
hlt
enter
ljmpw
mov
jo
push
dec
shlb
jmp
mov
movsb
mov
jl
imull
out
push
mov
shlb
outsb
jmp
mov
stc
cs
aad
pop
popa
fidivs
pop
adcb
int
and
dec
shll
cmp
xor
les
add
test
xchg
scas
and
jb
or
in
xchg
into
pop
dec
lock
outsb
cs
or
adc
mov
dec
adc
sbb
push
mov
cmp
cmp
shrb
jnp
ja
divb
mov
mov
das
dec
jecxz
dec
pop
andb
sbb
cmpsb
xor
xor
jg
bound
and
jbe
out
push
dec
fists
xor
lret
sbb
arpl
stos
cwtl
and
mov
test
testl
and
rol
mov
add
cmp
les
sbb
lds
js
pusha
repnz
imul
xchg
jae
dec
jp
scas
mov
push
push
adc
stc
lret
cmp
xchg
xor
iret
sub
dec
test
jb
stos
sahf
dec
mov
cmp
push
test
stc
jmp
mov
add
outsb
int
imull
sahf
cmp
inc
mov
icebp
rorl
pop
gs
push
orb
inc
arpl
xchg
sbb
lods
push
cmp
mov
jle
iret
in
pushl
mov
jge
xor
imul
push
pop
inc
dec
inc
push
hlt
jno
push
xor
inc
enter
jnp
jge
ss
sub
jne
pushf
jp
arpl
mov
push
out
outsb
movsb
jns
jmp
int
pop
mov
adc
popa
dec
repnz
dec
pop
inc
add
jns
popf
dec
sub
js
push
dec
int3
fwait
mov
sub
dec
add
mov
cs
dec
movsb
in
sarl
loop
mov
and
mov
mov
cmc
pop
in
and
xchg
inc
dec
aam
sub
mov
mov
dec
cmpsb
icebp
mov
frstor
dec
scas
imul
inc
or
insb
pop
jl
jecxz
push
adc
push
dec
fdivs
adc
rcrl
decb
dec
push
std
ret
pop
or
mov
dec
in
dec
adc
add
lock
int
cmc
xlat
push
test
xchg
mov
xor
jnp
imul
daa
dec
sar
push
dec
push
cmpsb
dec
cmp
rep
iret
inc
enter
and
jo
adcl
shrb
mov
mov
sarl
xchg
arpl
adc
inc
pusha
repz
scas
outsb
mov
mov
cmpsl
push
xlat
test
mov
out
xor
shrb
mov
pushf
sti
mov
xor
dec
sbb
sub
inc
mov
scas
loope
in
pop
push
xchg
cmpsl
fcmovnb
popf
out
loop
orl
or
clc
ficoml
cmp
ss
jg
mov
repz
xor
and
dec
mov
or
or
sub
sbb
cld
dec
dec
sbb
mov
mov
lds
adc
push
pop
rorb
sbb
subl
int
mov
adc
jns
out
dec
mov
aas
cmpsl
ret
mov
push
sbb
int
push
dec
xchg
mov
xchg
sbb
xchg
mov
into
pop
cmp
mov
adc
adc
dec
dec
cmp
jmp
xorb
pushf
dec
add
cmp
push
aas
movsb
test
inc
push
addr16
subl
or
js
xchg
fs
sub
jno
scas
insl
jb
lods
mov
pop
inc
pop
cmp
les
notb
test
dec
inc
mov
rcll
stc
cli
jno
mov
mov
jnp
inc
dec
pusha
sub
and
cmp
stc
inc
orl
sbb
sub
push
cmp
aas
dec
fcompl
mov
jl
fbld
mov
push
lahf
scas
mov
push
mulb
fldt
sub
lcall
mov
or
pop
xchg
add
ret
push
lods
xlat
sbbb
dec
push
lret
jecxz
pop
in
and
call
jb
cmpsb
dec
adc
lock
or
xchg
inc
inc
mov
dec
sbb
jg
mov
stos
shll
xchg
ds
mov
cs
addb
lcall
inc
fcom
stc
sahf
inc
push
jl
movsb
fs
es
xorl
add
mov
xchg
push
call
clc
jns
sub
mov
mov
push
xchg
jb
dec
daa
mov
repnz
ret
push
dec
mov
xchg
out
leave
mov
and
jbe
push
cmp
mov
jne
xor
sub
shll
out
xchg
push
data16
adc
jle
test
sbb
mov
lds
inc
add
and
cmp
mov
mov
nop
loopne
inc
dec
sbb
pop
sub
dec
test
xor
add
int3
add
repz
mov
test
fists
les
mov
mov
jge
pop
outsb
arpl
imul
xchg
adc
fcmovbe
dec
decl
sub
fildll
lret
push
sbb
out
dec
mov
inc
adc
test
sarb
bound
lods
clc
dec
inc
cld
sub
out
inc
xchg
dec
ret
dec
aam
lods
dec
xchg
push
or
dec
scas
xorb
mov
imul
push
lods
add
dec
xchg
sub
dec
xchg
push
and
jo
lods
daa
inc
lds
mov
mov
mov
popf
push
add
dec
enter
mov
sub
cmp
sub
dec
xchg
jle
pop
das
imul
out
ret
adc
rol
stc
pop
rorl
in
mov
dec
ret
mov
lds
pop
popa
push
mov
stc
dec
cld
pop
adc
dec
mov
pop
fdivl
ret
adc
rolb
movsb
loopne
mov
subl
fmull
ret
mov
mov
imulb
out
mov
add
jmp
mov
dec
mov
enter
popa
mov
sub
rol
out
xchg
das
push
dec
jo
xchg
cmp
dec
push
xor
mov
add
xchg
das
jns
xor
push
inc
push
mov
inc
ja
sbb
dec
fdivs
stc
inc
fstps
add
mov
push
andb
xor
rorb
xor
mov
jae
dec
gs
lds
xchg
js
outsb
xchg
orb
pop
jne
fisubrl
int
pop
enter
addr16
in
sbb
in
int3
orb
sbb
mov
dec
hlt
mov
stos
dec
xchg
flds
dec
or
nop
leave
jp
ret
sub
push
les
movsl
cmp
sub
mov
icebp
adc
dec
shll
pushf
push
jb
sub
xchg
icebp
std
xor
sbb
shl
dec
data16
sbb
xorl
leave
fwait
test
xor
fdivrs
rolb
dec
fiaddl
addr16
pop
aaa
push
pop
adcl
and
stos
adc
jg
jo
dec
jecxz
or
xor
dec
mov
lods
adc
dec
mov
std
and
cmp
mov
popa
pop
adc
push
inc
fidivrs
ds
cmpsl
inc
dec
mov
cmp
lods
fwait
sub
mov
aas
push
push
cli
fbstp
xchg
data16
push
ljmp
in
dec
xor
inc
repnz
pushf
mov
dec
mov
add
dec
bound
push
xorb
dec
sahf
push
jecxz
mov
daa
adc
mov
xor
lahf
mov
pop
test
xorl
xlat
outsb
mov
lea
push
je
outsl
add
dec
xor
pushf
mov
jnp
loop
lahf
mov
xor
push
push
test
push
mov
mov
shll
jle
mov
mov
sti
dec
jno
xor
movsb
add
xorl
pop
loope
pushl
or
inc
or
sbb
dec
pop
cmp
inc
call
cli
in
dec
pushf
dec
movsl
and
shrl
mov
les
lods
fsts
adc
sbb
mov
pop
push
mov
orb
cmp
or
js
cmc
in
xlat
and
scas
imul
pushl
push
mov
test
sbb
loopne
or
das
xchg
xchg
mov
iret
dec
insb
jl
shlb
lret
arpl
inc
fidivs
dec
or
xor
pop
and
mov
xchg
lods
sbb
div
frndint
push
inc
pop
push
inc
dec
cwtl
or
push
fidivl
push
add
mov
sub
mov
inc
imulb
mov
stc
in
or
xorb
daa
dec
pop
mov
cld
dec
inc
push
loopne
out
xchg
es
into
in
pop
sub
jmp
sub
insb
popf
lock
clc
dec
xor
dec
mov
inc
mov
imul
pop
adc
sub
pop
sbb
repnz
insl
add
cwtl
mov
cmpsb
jg
inc
push
mov
cmp
push
fistl
leave
out
cmc
adc
or
mov
jnp
add
mov
testb
bnd
pop
cmpsl
test
lods
aam
inc
pop
mov
ret
scas
out
cmpsl
in
push
imul
adc
fistps
inc
dec
adc
cmpsl
and
and
cmp
insb
stc
or
add
and
cmp
and
dec
in
decl
cmp
test
or
iret
jo
lret
dec
inc
popf
add
loope
mov
adc
js
push
mov
dec
xorb
add
push
rcrb
mov
pmovmskb
dec
in
cmp
dec
mov
cld
mov
mov
dec
fstps
pusha
dec
and
shll
cmp
rclb
mov
sbb
dec
sbb
adc
dec
pop
or
bound
jge
dec
mov
stos
or
jmp
adc
jge
sbb
push
movsl
cwtl
cltd
pusha
and
loope
dec
lods
sbb
pop
jnp
nop
addr16
jle
push
mov
das
dec
out
inc
push
xor
dec
jae
add
adc
inc
insl
fistpll
dec
push
repnz
lock
mov
push
cwtl
push
rorl
mov
mov
out
stos
pop
push
popf
dec
jmp
outsb
je
gs
push
dec
ror
add
insb
mov
ss
shll
outsb
scas
xor
int3
cmp
dec
and
xor
sub
jb
and
movsl
cltd
imul
movq
sahf
dec
sbb
add
dec
and
mov
xor
pop
mov
or
sarl
out
push
mov
testl
mov
xor
std
dec
bound
sti
and
lods
and
dec
add
pop
and
es
sarb
push
mov
clc
add
add
enter
loop
stc
hlt
sbb
dec
inc
fbstp
or
dec
dec
clc
adc
imul
pop
push
int
sbb
dec
push
xor
dec
or
push
push
add
clts
nop
out
adc
movsl
push
in
pop
sbb
cmp
dec
mov
cmpsl
stos
adc
iret
sbb
fmull
pop
ds
xor
pop
es
sub
xor
dec
or
ret
mov
adc
or
xor
inc
adc
cs
lods
leave
xchg
scas
sub
cmc
and
loope
jbe
repnz
add
adc
add
sbb
push
pushf
jg
add
xor
loop
jp
mov
movsl
and
arpl
lds
mov
and
aas
dec
pop
or
add
cmp
and
hlt
cmc
testl
out
xor
xchg
mov
add
loopne
mov
xchg
dec
pushf
sbb
ljmp
adc
in
mov
mov
or
pop
xchg
sti
imul
iret
mov
push
pop
notb
outsb
loope
mov
push
lea
stos
aad
mov
nop
inc
add
fst
aaa
nop
dec
add
pop
mov
imul
mov
stc
dec
add
fwait
add
clc
divl
orl
lods
xor
dec
jl
sbbb
xlat
mull
xchg
lea
dec
xor
push
sub
aas
dec
cli
insl
xchg
mov
shrl
hlt
call
rolb
mov
lds
inc
les
outsl
add
ret
inc
bound
sbbl
mov
nop
cmpsb
lahf
notl
and
xchg
fs
movsb
movl
push
add
rol
or
fidivrl
test
int3
push
lahf
mov
out
jo
xor
jge
aas
inc
shrb
dec
fisubrl
mov
sbb
mov
dec
add
dec
imul
leave
ja
mov
test
clc
inc
pop
cmpb
cmp
movsb
push
dec
lods
xchg
inc
or
sbb
fiadds
xor
test
mov
adc
jge
mov
aas
fs
push
hlt
jnp
add
into
xor
mov
mov
insb
or
test
mov
lcall
ja
mov
and
pop
sti
inc
iret
addl
jmp
pop
faddl
popf
sub
sub
xchg
sub
data16
mov
mov
pop
jne
add
jle
adc
mov
subb
mov
in
shll
adc
dec
fcoml
jno
orb
mov
xor
inc
inc
popa
jge
inc
arpl
push
mov
out
push
cmp
mov
repz
xor
test
neg
sbb
stos
into
xchg
cmc
dec
push
pop
shrl
inc
xchg
test
inc
test
mov
dec
out
rcrb
mov
dec
lea
add
push
in
dec
lods
mov
repz
pusha
pop
lock
fcoms
and
or
int3
daa
dec
jb
in
xchg
popf
test
mov
out
dec
dec
test
add
pop
push
arpl
sbb
xchg
pushf
cmp
js
sbb
adc
orl
cs
jno
icebp
push
adc
cmp
or
mov
cmpsb
mov
and
xor
int
add
add
stos
test
pusha
leave
subb
and
jge
out
stos
gs
dec
xor
cmp
aaa
add
imul
jns
dec
sbb
mov
dec
lret
xchg
mov
dec
pmulhuw
cwtl
pop
push
mov
fcoms
test
and
xor
xchg
dec
enter
dec
or
mov
inc
sbb
xor
mov
jl
sub
daa
es
imul
popf
mov
lods
pop
xor
testl
imul
shlb
cltd
or
or
xor
mov
loop
or
add
imul
jl
fistpl
into
outsb
sub
and
mov
sbb
lds
test
xchg
ja
lcall
mov
scas
xor
push
lret
ljmp
and
add
insb
jle
jmp
xchg
cld
test
jno
cltd
aas
cmpsb
mov
dec
subb
sbb
jne
sub
fcoms
mov
fs
jecxz
mov
add
dec
in
pop
sub
iret
popf
jg
test
imul
sti
dec
inc
cmp
add
xor
mov
js
inc
push
add
sbb
pop
push
pop
adc
into
popl
fisttpl
sub
fwait
push
jbe
sti
pop
jg
xchg
nop
in
sbb
and
cli
cmp
pushf
mov
pop
jmp
jne
ret
mov
lds
inc
xor
dec
nopl
sbb
dec
popf
xchg
xor
adc
je
inc
insl
push
adc
sbb
sbb
jno
push
add
fs
jns
fwait
dec
mov
popa
push
push
fsub
cld
pop
mov
decb
sbb
jmp
push
shlb
dec
jecxz
dec
sub
lock
enter
cmp
or
ss
mov
movsb
mov
daa
cmp
shl
stos
in
dec
scas
cld
sub
mov
iret
mov
mov
xor
aas
into
dec
mov
out
push
inc
add
pop
test
rolb
mov
dec
rorl
mov
repnz
dec
imul
ret
mov
push
call
adc
mov
cmp
dec
fcomi
ret
xor
jmp
jmp
iret
les
int3
or
cltd
ficomps
pop
cmpb
dec
lods
inc
xor
jae
mov
adc
pop
lret
xchg
mov
ja
stos
daa
sarl
push
jo
ret
jp
pop
mov
lea
adc
dec
push
push
outsl
aam
insb
out
pop
pushf
imul
pop
notl
mov
pop
es
aad
rcr
repz
loopne
inc
and
data16
mov
imul
cmpsl
adc
or
dec
mov
add
xor
dec
hlt
xor
add
dec
cmp
into
push
das
and
adc
jbe
jo
lods
sti
sarb
dec
in
xor
data16
dec
popa
arpl
fbld
sub
or
jno
or
dec
aas
pop
js
in
fs
shll
xchg
fnstenv
popf
fidivl
mov
shlb
push
mov
sbb
or
or
add
dec
dec
in
add
or
cmp
add
shlb
dec
cmpsb
repnz
cwtl
addr16
dec
inc
shrl
int
and
nop
adc
daa
aaa
mov
imul
enter
dec
mov
add
aad
lds
shl
sti
call
mov
pop
jp
fs
push
out
sarl
mov
leave
test
les
mov
dec
sub
xor
sub
pushf
cmpsl
ss
push
enter
jnp
cli
or
js
push
dec
jno
out
xor
adc
dec
fadds
and
add
loop
inc
fdiv
mov
jno
shl
outsb
dec
fcmovnbe
push
ss
fnsave
pop
sbb
xor
imul
adc
clc
ja
mov
mov
jecxz
in
lea
xor
cmp
dec
push
push
cwtl
popa
in
loope
dec
cmc
mov
sub
sarl
jnp
jecxz
add
stos
xchg
dec
sub
mov
lahf
sti
dec
mov
imul
push
mov
rcr
mov
mov
adcb
aas
inc
push
and
dec
pop
mov
das
adc
fs
repnz
cmp
push
xorl
jl
negl
pop
imul
and
mov
or
push
js
adc
dec
dec
mov
xor
push
mov
dec
scas
jmp
xor
fmuls
or
and
pop
add
loop
insl
dec
test
and
push
popf
mov
das
sub
int3
or
dec
and
add
or
dec
pop
int
mov
popa
in
cld
nop
mov
jl
fisubs
aaa
imul
sub
push
jo
push
cmp
mov
cmp
adc
push
movsb
fdiv
dec
push
stc
out
xor
sub
push
or
and
dec
add
sub
cwtl
or
rcll
gs
mov
sub
add
inc
bound
in
stc
enter
xchg
dec
mov
and
add
jnp
aas
out
sbb
dec
call
lods
cmp
std
jle
xchg
pushf
cmp
dec
call
rorb
add
add
ljmp
mov
stos
iret
fucomp
cld
es
clc
push
push
pop
nop
lods
stos
pop
sub
sbb
inc
and
into
dec
jne
push
cs
fldcw
cwtl
inc
xchg
xchg
int
shlb
pop
scas
dec
and
ljmp
stc
roll
sub
movsl
in
xor
ret
and
cmpl
push
push
das
mov
adc
mov
addl
idivb
sub
test
ret
into
out
dec
out
inc
xor
adc
adc
xor
cmc
inc
out
xor
push
fstpt
test
sub
ret
mov
pop
aas
sub
xorb
rcrl
ret
int3
or
jo
pop
sahf
in
popa
mov
push
in
mov
test
sub
adc
mov
pop
cmpsl
int
sbbb
ret
mov
nop
cmp
dec
inc
call
enter
hlt
push
xchg
and
inc
push
sbbl
test
xor
dec
into
add
mov
dec
jmp
stos
cmpsb
fcoml
inc
dec
and
or
pop
or
jp
and
fs
ljmp
and
lcall
adcb
pop
testb
dec
dec
xor
mov
xchg
xor
lock
sbb
add
ja
or
inc
cwtl
dec
xor
or
les
dec
cli
xchg
cmp
push
mov
stc
sahf
lea
add
and
call
or
lret
adc
adc
push
sbb
fistpl
jb
mov
add
ror
xchg
cwtl
ds
jp
movb
push
cmp
pop
or
dec
jnp
and
or
lea
mov
imul
xor
cld
cmp
inc
aaa
sub
sahf
mov
dec
pop
sbb
andb
call
imul
inc
inc
pop
lret
xlat
out
adc
jge
ret
sbb
popa
dec
adc
mov
ss
pop
cltd
xor
clc
dec
fwait
mov
sbb
call
daa
imul
lret
lea
or
lods
imul
je
pop
or
lahf
mov
adc
notl
test
add
int
push
push
pushf
add
arpl
push
mov
scas
dec
add
sub
in
sti
dec
xchg
mov
and
loope
sub
adc
icebp
jno
jecxz
dec
mov
dec
inc
pop
dec
cmp
sbb
mov
das
dec
js
lock
xor
adc
scas
in
mov
dec
xor
mov
cmc
movsl
add
insb
dec
ds
add
mov
je
jbe
arpl
pop
dec
push
subb
dec
mov
sbb
cs
cld
testl
fistl
sbb
pop
pushf
jmp
dec
call
iret
rolb
inc
inc
push
mov
adc
sub
mov
pop
mov
sarl
pusha
push
xor
push
lret
cmp
in
jl
fldt
int
mov
outsl
mov
push
int3
mov
mov
and
mov
inc
mov
jns
add
and
add
mov
mov
movsl
or
inc
in
std
dec
sbb
xor
sbb
inc
inc
jo
lahf
xor
dec
nop
addr16
movl
inc
dec
repz
fadds
jo
adc
add
sahf
mov
pop
in
push
insb
and
dec
dec
sub
sub
push
test
dec
jo
in
insb
dec
inc
sub
je
mov
roll
jmp
mov
fmull
loop
jne
dec
nop
imull
cmp
mov
cmp
dec
and
rolb
gs
jl
xor
mov
dec
xorl
fs
mov
push
data16
or
add
dec
ss
jae
inc
das
dec
pop
jecxz
repz
test
aaa
push
mov
sti
lret
jo
mov
add
xchg
lret
leave
cmp
dec
jmp
xor
sbb
sti
repz
lds
sbb
xor
popa
adcb
dec
mov
dec
push
jbe
sub
push
dec
out
sbb
mov
dec
cmp
call
pop
dec
xor
addr16
jbe,pt
dec
cmp
push
and
inc
aaa
cmpb
push
in
iret
sub
mov
sub
jl
ss
pop
dec
in
loop
cwtl
pop
ret
push
dec
scas
icebp
out
adc
test
sahf
push
pop
xor
mov
dec
or
fnstsw
dec
testb
movsb
dec
or
movl
or
cli
rolb
inc
pop
adc
outsb
dec
hlt
mov
dec
jne
adc
and
cmpb
inc
xchg
or
aas
inc
mov
imul
sbb
mov
repz
cmpl
cmp
dec
mov
test
mov
adc
dec
push
mov
pop
jne
xchg
scas
cli
lock
ljmp
sbb
dec
jbe
pop
gs
cltd
push
scas
cwtl
dec
mov
push
clc
xor
inc
jo
xor
cmp
mov
mov
push
adc
iret
out
out
movsb
aas
dec
pop
lcall
or
fisttps
adc
jno
dec
mov
push
inc
andb
sbb
xor
icebp
sub
dec
lock
jl
cmp
lcall
dec
pop
pushf
jo
mov
scas
inc
dec
mov
lahf
mov
dec
sub
adcl
cli
ds
mov
dec
push
push
pop
icebp
pop
adc
loope
xlat
dec
je
test
outsb
daa
cmpsb
dec
jl
adc
jo
push
xor
or
mov
mov
dec
sbb
mov
mov
or
ds
mov
out
ja
sbb
inc
dec
mov
dec
loope
jle
and
out
test
rclb
jae
adc
out
mov
xor
dec
inc
pcmpgtw
stos
xchg
sahf
rcll
jp
sub
push
cmp
les
daa
inc
subb
push
adc
sub
test
dec
dec
mov
jno
fstpl
scas
push
dec
rcrb
cmc
and
push
int3
or
imul
inc
lahf
mov
mov
loopne
inc
ror
pshufw
mov
dec
and
cmp
stos
push
jo
jnp
fisubrs
pop
inc
mov
mov
dec
dec
adc
leave
push
mov
int3
push
dec
pop
scas
or
sar
jge
mov
popf
lret
push
in
pushf
jle
stos
dec
test
inc
xchg
in
imul
fisubrs
std
shlw
or
imul
clc
dec
xor
cmc
mov
mov
jo
mov
dec
sbb
out
inc
in
jb
inc
leave
sub
push
subb
or
test
ret
int3
mov
orl
jo
cmp
leave
fdivp
repnz
cmp
jae
call
xchg
bound
push
xchg
fists
push
sti
ret
dec
dec
scas
pusha
jnp
jl
les
data16
inc
jno
rorl
dec
jmp
int3
out
dec
push
clc
cmp
rep
adc
pusha
mov
imul
jne
mov
jnp
int3
mov
shll
nopl
jbe
push
out
jmp
jle
or
mov
dec
cmp
mov
clc
scas
pop
fisttpll
repz
repnz
dec
add
xor
mov
push
enter
int
push
pusha
into
sarl
jo
jg
test
add
stos
add
sbb
sub
loope
dec
pushl
fwait
push
or
xchg
dec
mov
ljmp
mov
mov
scas
pop
add
iret
insb
push
xchg
ja
dec
cmpsb
jmp
incb
popf
push
dec
insl
xchg
push
xchg
pusha
movsl
sbb
jl
fs
das
add
mov
mov
testb
sub
cmp
inc
cld
aaa
das
out
test
mov
stc
jbe
dec
adc
in
dec
push
jns
inc
dec
int3
das
and
sub
mov
ljmp
sarb
xor
sbb
push
and
data16
out
int3
ljmp
and
shll
mov
push
xchg
dec
insb
cmc
out
bound
push
jge
pop
fcomp
nop
rcll
push
dec
push
push
sub
mov
xchg
push
xor
fdivl
movsl
dec
pop
lret
dec
jl
and
push
xchg
stc
leave
push
dec
xor
ja
in
adc
sbb
push
pop
stc
add
mov
adc
lods
negl
add
stc
push
mov
push
push
or
inc
js
sub
push
inc
cmp
addr16
dec
add
sub
test
stc
xor
fmull
xchg
push
adc
mov
pop
int3
std
xor
xor
pusha
enter
outsb
lds
pop
fmull
xor
idivb
out
popf
shll
shl
sub
ljmp
mov
xor
inc
push
and
jl
jbe
push
aam
shlb
xchg
mov
pop
ss
dec
test
cmp
pop
cmp
stc
add
shlb
dec
pop
js
mov
pop
dec
mov
sub
xor
arpl
xchg
sub
xchg
push
push
leave
popa
mov
ror
sti
clc
inc
popa
pop
push
and
pop
dec
dec
fiaddl
sbb
jo
iret
jge
dec
in
mov
scas
hlt
mov
push
sbb
adc
mov
jbe
xchg
rorb
insb
in
cwtl
cltd
stos
leave
pop
cld
leave
mov
pop
adc
rclb
rcrl
xchg
and
push
inc
lret
lcall
stos
push
iret
xchg
cmc
jl
push
fmull
lcall
dec
xor
fistpl
add
je
iret
jo
bound
imul
pop
outsl
shlb
in
xorb
inc
sub
mov
rorl
adc
test
dec
addr16
cmc
orb
cltd
int3
daa
cmp
fidivrl
push
or
dec
fs
iret
sar
test
and
out
clc
add
addb
sbb
fs
bound
shlb
and
lock
add
out
xor
test
or
and
push
sub
jbe
test
or
dec
repz
push
push
xchg
and
rolb
mov
fldl
push
test
popa
jae
or
jb
jns
cmpsl
fildl
push
or
xor
jmp
mov
xchg
inc
add
dec
sub
inc
enter
adc
je
pop
xchg
dec
lret
push
xchg
test
test
fs
into
mov
push
jbe
lret
dec
pop
inc
mov
fwait
shlb
and
jmp
addr16
pop
xchg
dec
je
fwait
rcrl
mov
and
inc
ja
adc
mov
aad
and
cwtl
mov
imul
int
ljmp
das
pop
jmp
mov
dec
mull
mov
imul
push
das
daa
insb
int
cmp
inc
jp
out
hlt
or
adc
js
cmc
pop
call
out
push
mov
es
dec
clc
sub
dec
mov
pop
sub
lock
loope
inc
sub
mov
mov
orb
pusha
icebp
dec
dec
lea
push
mov
popf
leave
and
jne
lret
cmpsl
fistps
inc
pop
adc
dec
mov
lret
cmpsl
dec
movsb
and
bswap
shll
add
mov
sbb
loop
out
fistpl
jo
mov
push
sub
mov
dec
or
mov
dec
jge
cmpsb
inc
iret
xchg
pusha
in
movsl
shl
dec
dec
enter
lods
mov
icebp
shll
mov
out
sub
add
adcb
cs
sti
and
and
xchg
or
xchg
in
mov
push
rclb
int3
jmp
lods
inc
ret
out
cmp
push
dec
das
in
xor
stc
push
neg
mov
xchg
pop
sbb
lret
popa
cmp
inc
cmp
stc
in
push
add
sbb
dec
sbb
inc
jp
dec
add
imul
push
xor
cmpsl
cmp
and
aaa
inc
pop
je
xor
sbb
lods
dec
jecxz
bound
xor
out
add
sarb
cltd
xchg
or
lds
test
add
xor
and
cmp
movsb
fstps
cmovle
dec
hlt
lds
sbb
xchg
pop
push
and
inc
dec
out
xor
or
das
push
inc
mov
xchg
dec
test
gs
push
lds
inc
or
sbb
mov
enter
int
mov
lock
adcb
dec
in
dec
pop
inc
in
and
jnp
add
jge
cmc
dec
adcl
rcll
mov
dec
ret
push
xchg
mov
inc
sub
cmp
lods
outsb
stc
jo
fcoml
fldcw
sbb
psubsw
nop
xchg
iret
jl
push
jle
push
dec
ret
xlat
dec
loopne
dec
jmp
hlt
nop
and
sub
vsubps
dec
out
icebp
lahf
jb
push
push
mov
test
pop
dec
shl
fimull
dec
imul
in
dec
mov
andb
lret
dec
js
dec
dec
adc
mov
lret
dec
push
fmull
jl
jecxz
pop
pop
adc
cmpsb
dec
or
cmp
xchg
stos
in
jne
and
into
add
in
je
stos
adc
inc
cmp
sbb
dec
push
jb
aaa
pop
adcl
test
sbb
ficomps
mov
imul
out
es
mov
push
hlt
fnsave
jmp
jnp
sub
dec
push
and
aas
inc
inc
in
or
fstl
pop
push
pop
cli
loopne
dec
dec
cmp
aam
dec
lret
test
pop
sbb
cmc
iret
lcall
and
mov
and
int3
push
push
xor
movsb
mov
mov
xchg
incl
test
cmc
cltd
dec
aad
divl
fisubrs
js
sub
mov
mov
in
add
jae
mov
bound
push
lcall
push
dec
cld
sti
dec
and
dec
xchg
pusha
and
sahf
jp
mov
push
xor
lds
dec
scas
push
push
das
ss
hlt
int
mov
cmp
fdivrl
repnz
push
push
and
fimull
shr
xchg
mov
mov
arpl
cs
mov
mov
add
sbb
movsl
fbstp
movsl
add
rorl
cwtl
pop
mov
pop
inc
cltd
mov
or
dec
into
jmp
push
fdiv
dec
xchg
push
in
push
adcb
jo
dec
dec
push
test
jne
dec
test
and
xchg
sub
dec
sbb
mov
sti
inc
mov
repz
xlat
out
fnstsw
jno
mov
jmp
je
dec
inc
jmp
mov
nop
outsl
push
lds
popa
imul
pop
decl
dec
jb
or
pusha
mov
lcall
je
mov
test
dec
xor
insb
cmp
dec
push
dec
jmp
push
sahf
sub
xlat
scas
jnp
sub
outsb
pop
sbb
dec
mov
mov
bound
mov
sti
push
loopne
dec
ljmp
ret
fcoml
mov
leave
or
mov
cmp
subl
or
xor
add
mov
ss
outsl
dec
mov
mov
sbb
and
mov
add
add
or
test
push
dec
inc
subl
xor
cmp
push
inc
mov
insb
mov
push
mov
dec
test
mov
pushf
roll
test
inc
inc
dec
push
lods
leave
mov
adc
into
inc
dec
add
fwait
dec
xchg
in
cmp
push
fdivrs
xor
inc
add
rdpmc
cmp
jmp
nop
cs
imul
xchg
orl
mov
in
mov
loop
pop
push
pop
mov
popf
add
icebp
hlt
movsl
out
sbb
clc
aaa
pop
cmp
dec
enter
and
leave
dec
insb
sub
inc
mov
stos
lea
jge
imul
lock
call
inc
add
std
jge
mov
and
lds
jmp
cltd
or
js
sbb
hlt
inc
mov
dec
insb
adc
pusha
adc
dec
ja
xchg
xor
dec
mov
out
shrl
dec
dec
ret
fwait
and
lds
sub
hlt
repz
inc
xchg
scas
dec
mov
push
sahf
call
jbe
dec
stos
mov
decl
in
nop
jecxz
in
psllw
aaa
mov
stos
shll
add
andl
std
dec
fs
pushf
mov
mov
xor
dec
cmp
sub
push
dec
add
or
inc
mov
push
loop
mov
and
dec
scas
pusha
and
fmull
stos
mov
sub
xor
or
es
lcall
testl
ret
cmp
jns
dec
mov
je
adc
mov
mov
cmpsb
fcmovb
and
and
mov
xchg
je
and
aam
mov
dec
dec
mov
mov
xor
cmp
pop
push
cmp
mov
mov
mov
scas
dec
adc
jbe
pushf
jmp
iret
scas
mov
ljmp
daa
inc
bound
mov
adc
pop
dec
dec
out
xor
sti
idivl
test
bound
or
push
rcll
in
dec
xchg
pop
pop
test
shlb
mov
sub
pop
cmpsl
stos
add
push
mov
sti
mov
data16
test
lds
and
mov
add
imul
fisttpl
mov
imul
mov
jl
or
popa
mov
pop
sbb
dec
je
call
int3
imul
xchg
jl
mov
mov
or
pop
mov
mov
push
inc
xchg
dec
xor
jo
mov
stos
dec
call
dec
dec
adc
jecxz
int3
add
cmpsl
inc
jb
cmp
mov
fbstp
sbb
pop
cmp
mov
loopne
outsl
jge
rorb
in
cmp
out
dec
fs
lret
ds
jle
and
cmp
add
xor
das
xchg
mov
mov
cmp
aam
rcl
or
iret
sbb
and
inc
aam
cmp
mov
push
dec
push
mov
or
lea
in
xchg
mov
inc
adc
repz
sub
push
inc
test
dec
enterw
ret
and
jnp
cmp
out
sub
mov
or
shrb
jl
jge
test
dec
dec
pop
fadd
nop
mov
mov
pop
jne
pop
push
push
mov
std
subb
stos
test
mov
hlt
mov
daa
dec
mov
bound
jmp
std
pop
ja
leave
lock
lods
es
mov
sbb
mov
adc
push
jnp
ficompl
pusha
cmp
dec
ret
adc
in
lret
popa
inc
or
dec
movsb
and
adc
dec
or
mov
push
cmpsb
fwait
pushf
jp
lahf
dec
insb
xor
shlb
dec
fs
push
jb
mov
inc
dec
adc
inc
bound
pop
loop
cwtl
add
mov
and
imul
and
jmp
dec
imul
bound
add
xor
mov
mov
in
sub
test
sub
les
push
mov
mov
negb
xchg
daa
pop
mov
js
inc
and
aad
sub
mov
lock
mov
jb
push
jo
dec
dec
cmp
imul
inc
mov
jnp
mov
jg
sbb
or
enter
inc
xchg
mov
inc
adc
jp
or
cmpsb
popa
pop
aas
ret
les
ret
fstl
cmovle
mov
scas
xchg
nop
and
push
mov
out
sbb
xchg
mov
push
repz
sbb
emms
ret
leave
or
jb
mov
push
push
cld
aaa
sarb
flds
lahf
neg
iret
xor
lcall
jb
xchg
push
sar
xchg
xchg
arpl
testl
inc
mov
dec
ja
push
into
adc
cltd
mov
inc
add
out
adc
popf
adc
push
sbb
adc
push
pusha
imul
ja
push
enter
pushf
sbb
cli
outsl
or
outsb
dec
ret
adc
jb
aas
push
gs
clc
cmp
dec
das
pop
adc
xchg
test
push
sahf
into
lods
mov
das
je
dec
sub
pusha
dec
add
sbb
adc
jle
mov
fnstcw
ficomps
sub
push
jne
bound
les
fnsave
pop
pop
sbb
and
mov
cmp
test
rcrl
xor
add
or
test
lret
xchg
mov
movsl
jmp
mov
lret
inc
pop
cmpsl
xor
dec
out
in
movsb
sbb
pop
data16
xchg
popf
popa
dec
shl
sub
lds
movsb
scas
cmp
mov
clc
jp
rorl
js
jecxz
inc
jbe
dec
adc
cmp
dec
cld
out
fbstp
sti
add
mov
test
cwtl
push
inc
add
std
inc
decb
mov
pop
xchg
jno
mov
inc
jno
and
inc
add
mov
mov
repz
dec
sub
cmp
mov
fisubl
and
add
dec
nop
add
sti
jp
jge
dec
and
push
clc
rorb
sub
popf
sbb
inc
iret
add
fwait
mov
lahf
jl
xchg
popa
adc
fsubs
lock
aas
sbb
xchg
add
dec
outsl
mov
stc
ljmp
ds
mov
pop
pop
int
dec
ljmp
mov
imul
jb
jp
mov
or
push
xchg
cmpb
test
mov
rorl
scas
js
ljmp
jae
and
orb
out
mov
fstl
push
inc
ljmp
ss
lds
test
inc
mov
repnz
cli
dec
andb
outsl
mov
fwait
dec
sub
pop
pushf
dec
andb
ret
push
jno
fidivs
jb
cli
mov
in
out
nop
push
psllw
stc
leave
outsl
aam
dec
push
xchg
adc
pop
shlb
inc
xchg
push
cwtl
push
jle
sbb
lds
dec
out
xchg
int
cmpsl
push
mov
dec
xchg
std
jmp
cmp
xor
pop
pop
mov
jo
idivb
dec
repnz
xchg
mov
adc
out
insl
scas
je
jno
imul
mov
mov
aam
movsl
pop
or
lock
fmuls
jecxz
sub
dec
inc
aam
add
adc
popw
pushf
jno
fisttpll
mov
and
push
dec
sub
in
test
sbb
push
sbb
ret
push
sbb
inc
mov
dec
mov
fcomip
jno
jne
data16
sub
pop
jns
or
sub
dec
mov
sub
sbb
sbb
mov
cmp
jo
pop
dec
sbb
jl
adcb
sbb
dec
cmp
dec
daa
popa
out
inc
push
stc
mov
adc
dec
ljmp
dec
jne
pop
test
stos
and
mov
test
pop
pop
jbe
test
push
sub
ret
xchg
mov
dec
pop
ja
imul
sub
dec
fsubs
xchg
nop
pop
and
xor
jno
testl
push
jb
sbb
cmpsb
sub
leave
inc
mov
push
aaa
dec
stos
shr
or
ret
test
push
int
enter
pop
mov
or
out
sub
loopne
fildl
mov
in
cltd
jl
ficoml
push
mov
or
sub
pop
outsb
dec
pop
mov
int
dec
lret
inc
cltd
push
jbe
imul
mov
in
pop
adc
or
push
das
and
inc
lret
aam
dec
sbb
or
in
push
cli
sbb
push
test
xor
jne
jbe
cmc
ss
sub
fcoms
dec
scas
and
add
sti
in
sub
dec
sub
push
cmpsl
adc
sbb
cmp
add
push
popf
pop
or
call
pop
mov
sti
aam
test
xchg
xchg
pop
pusha
je
xor
inc
xor
insb
or
inc
cmc
xchg
sub
roll
fldt
mov
xchg
xchg
ret
push
adc
insb
jo
dec
in
xchg
mov
sbb
mov
adc
sti
out
out
dec
aam
fcoml
cltd
mov
dec
arpl
and
mov
in
pop
dec
inc
dec
int3
dec
xor
rorb
into
adc
lcall
sarb
cmc
and
sbb
lcall
dec
sbb
jae
sub
xor
punpcklwd
fisubrl
bound
push
cmp
pop
xchg
push
xor
cmp
lret
cmpl
inc
fcmovb
or
cmpsb
mov
sbb
mov
mov
imul
push
sbb
xchg
cmpsl
test
jo
cli
dec
jge
adc
push
sub
inc
imul
dec
or
addl
fsubrs
sahf
push
out
popf
inc
scas
dec
clc
in
push
inc
cmp
mov
test
in
cs
inc
lods
mov
and
jg
popa
lds
rclb
cmpsl
cmp
inc
sbb
loop
mov
mov
loope
inc
aam
les
fsubrl
in
xor
or
cmp
push
dec
sarb
mov
mov
les
push
add
adc
shlb
and
dec
repz
rorl
test
xchg
subb
adc
dec
add
out
shll
ret
pop
andb
inc
loopne
dec
aad
in
out
fcoml
pop
test
mov
push
sbb
dec
scas
cltd
or
pop
jp
mov
push
out
ret
fchs
xlat
mov
jge
and
leave
ret
xor
mov
sbb
dec
aad
add
xor
mov
shl
cmp
sbb
imul
mov
add
dec
movsl
inc
cmp
push
lock
xchg
push
mov
push
sbb
inc
pop
fisubrl
dec
mov
dec
enter
pop
xor
sub
seto
xor
dec
enter
fwait
ljmp
mov
dec
jg
jmp
jnp
cld
add
stos
cmp
and
jno
cmp
push
rclb
scas
into
mov
xorb
jnp
dec
sarb
xchg
push
push
jecxz
xchg
mov
test
sbb
insb
fstpt
and
pop
rcrl
fmul
mov
addl
lods
push
xchg
or
adc
mov
or
mov
out
dec
cli
mov
ss
xchg
sbb
imul
lods
push
jmp
outsb
mov
adc
and
jnp
add
inc
ret
mov
push
push
ss
and
cmp
imul
imul
and
jp
sahf
cmpsl
decl
sbb
das
bound
adc
adc
inc
inc
dec
je
loop
cmpsl
and
inc
ficoms
pop
cld
scas
pop
jae
lds
mov
mov
or
lret
call
cmpb
adc
fsubr
fmuls
shl
jmp
dec
repnz
cmpsb
mov
xchg
sub
fwait
dec
lahf
mov
fiaddl
inc
push
pop
jbe
push
mov
rol
pop
inc
clc
cmp
js
scas
fisubl
push
adc
in
scas
jno
jecxz
subl
cmp
pop
xor
dec
and
ss
pop
sbb
and
dec
dec
fmuls
nop
push
test
lods
scas
push
imul
xchg
insl
cmc
out
clc
adc
and
push
xchg
sti
and
lcall
aas
xchg
roll
js
dec
jp
add
sahf
cmp
inc
mov
repnz
mov
adc
xor
or
aaa
test
dec
dec
or
push
jl
cmp
dec
ss
scas
nop
lods
dec
sub
loopne
jge
mov
pop
sub
cwtl
mov
mov
in
stos
inc
xchg
fs
rolb
cmp
xchg
xchg
fists
mov
jbe
push
dec
cmpsb
adc
mov
pop
or
mov
mov
dec
repnz
popa
shll
sub
lods
nop
dec
sbb
sbb
adc
cmc
testl
ds
ror
stc
sbb
int
dec
scas
loopne
adc
add
idivl
cmp
mov
es
or
dec
add
ret
or
mov
mov
dec
push
jae
xor
mov
movsl
cmc
pop
xchg
adc
loopne
aaa
jns
push
in
jle
push
testl
subl
ljmp
cmp
lcall
push
in
or
mov
stos
lret
mov
in
cmp
test
cmpsb
iret
fmuls
push
cwtl
xchg
sbb
loopne
adc
movsb
mov
xchg
pushf
into
mov
adc
cmp
scas
push
repz
mov
sbb
push
xor
mov
or
sbb
push
enter
int
sub
dec
mov
pusha
cmp
shll
into
loop
xchg
popa
dec
cs
dec
enter
in
and
inc
mov
pop
xlat
clc
inc
or
lret
fistl
outsl
cmp
shl
dec
fiadds
testb
addr16
test
jecxz
cwtl
push
outsb
je
out
dec
repnz
sahf
cmp
insl
sbb
cmp
add
pop
mov
in
xchg
outsl
rol
mov
add
add
and
repnz
sbb
stos
mov
jno
ret
rclb
xchg
xor
push
pusha
push
dec
ljmp
sub
je
ds
jmp
dec
xchg
mov
lahf
sbb
rorl
in
or
sbb
mov
xchg
jo
lods
xor
test
scas
int
jno
daa
js
sub
clc
inc
dec
mov
mov
clc
adc
rorb
test
dec
aam
dec
and
mov
push
ret
imul
stos
push
jo
popl
mov
adc
mov
loopne
leave
mov
decb
xchg
insb
xchg
rolb
loop
sub
cmpb
cmp
dec
popf
lahf
xor
mov
repz
cmpsb
nop
and
push
adc
gs
xor
and
xchg
dec
cmpsb
jp
scas
mov
dec
pop
cmc
push
jno
imul
fs
daa
lret
test
mov
xchg
roll
mov
xchg
push
push
or
sahf
sub
inc
pop
sti
mov
push
mov
popa
bound
xchg
aam
adc
jmp
dec
jge
cmpb
and
imul
scas
dec
in
dec
mov
loopne
dec
jbe
repz
add
dec
fs
xor
imul
hlt
scas
cld
dec
dec
dec
aad
in
mov
aaa
push
lret
les
cmp
cmp
mov
or
mov
xchg
popa
xor
pop
shlb
dec
lods
add
xchg
pop
fsubr
out
dec
sbb
mov
mov
dec
jae
sbb
pop
lods
outsl
xchg
daa
pop
push
sbb
les
dec
mov
fcmovb
addr16
repnz
add
jns
push
xor
call
cmc
pop
arpl
jmp
sub
sbb
dec
dec
or
out
dec
cmp
std
mov
push
shll
inc
imul
xor
or
notb
xor
jle
add
mov
jns
pop
mov
dec
cmp
test
ja
cmc
int
rcl
sbb
jl
cmp
sub
adc
and
dec
arpl
xlat
dec
dec
jno,pt
out
jmp
mov
shl
std
mov
add
icebp
xchg
dec
lret
and
in
jbe
dec
repz
xor
dec
sarb
cmp
push
xor
jg
cltd
push
dec
shll
dec
stos
shll
adc
mov
out
inc
push
xchg
bound
imul
rorl
pop
fistpll
add
push
cmp
pop
scas
pop
popf
adc
test
mov
outsl
shlb
xchg
mov
stc
add
sbb
jg
mov
dec
mov
xor
mov
leave
mov
cmp
mov
ret
cmp
jmp
adc
adc
dec
adc
out
outsl
jo
gs
test
loopne
test
sub
loope
cmc
push
fldt
cmp
fists
sbb
pop
push
mov
cld
dec
dec
inc
and
cmp
lds
dec
cmp
subb
repnz
lret
enter
or
es
faddl
add
test
dec
data16
out
pop
push
subb
push
aad
cmpsl
jg
je
xor
aam
jmp
jbe
or
sbb
sub
inc
dec
fmull
daa
cmp
shrb
jge
xor
imul
dec
mov
inc
fs
inc
lcall
mov
adc
jb
imul
xchg
dec
sub
or
dec
lret
les
rcll
loope
push
pop
mov
call
add
or
sub
sub
loopne
xor
jns
cmp
add
and
adc
sahf
scas
xchg
imul
dec
xchg
ljmp
dec
stos
or
lret
std
mov
dec
mov
ja
pop
sub
cli
push
adc
lock
les
xor
dec
xchg
frstor
sbb
xchg
ljmp
ret
dec
xor
jp
das
or
jle
cltd
jge
adc
jae
lea
loop
push
loopne
push
mov
and
dec
clc
outsb
movsb
xor
adc
jo
fs
cmp
dec
arpl
lcall
pusha
in
cmp
jo
xchg
dec
std
xchg
dec
out
out
stc
shrl
or
outsb
adc
nop
jo
push
adc
jmp
int3
cmp
outsb
test
dec
sub
les
dec
lcall
xor
and
cmp
insb
in
dec
movsl
out
dec
and
sbb
mov
cmp
int
nop
test
mov
push
xchg
mov
data16
dec
jecxz
fstps
inc
mov
cmp
dec
sbb
aam
dec
fists
stos
mov
outsb
std
adc
dec
dec
in
xlat
inc
aas
cmc
and
out
pop
call
dec
or
mov
cmpsb
movsl
xor
repnz
mull
test
fstl
add
mov
inc
pop
ret
aam
ja
outsb
nop
cmp
stos
or
dec
mov
inc
enter
jnp
mov
das
push
cmp
mov
mov
roll
mov
inc
cmp
adc
and
pop
jmp
hlt
xor
push
js
pop
imul
mov
push
dec
movsl
adc
mov
mov
decl
dec
jno
dec
sub
dec
icebp
mov
dec
dec
jne
pop
dec
sbb
ret
in
popf
mov
sub
add
aas
push
testl
and
lahf
xlat
dec
adc
lcall
mov
xchg
pop
xchg
rorb
fadds
dec
lcall
addr16
sbb
fistpll
mov
and
inc
mov
daa
dec
scas
jge
imul
arpl
dec
dec
cltd
jae
mov
mov
or
or
sub
xorb
jle
xor
rclb
add
mov
in
dec
test
enter
clc
cltd
push
icebp
rclb
aaa
mov
outsl
inc
aam
fs
mov
daa
xchg
movl
dec
mov
mov
mov
les
data16
push
xchg
push
sub
nop
or
adc
cwtl
or
rolb
push
push
sarb
fwait
mov
bound
mov
xchg
push
mov
scas
das
lcall
lods
adc
std
sahf
ds
dec
cmp
fistpll
xchg
test
cmp
lret
dec
sub
push
mov
cmp
xor
pop
cmpsl
mov
jno
stos
dec
negb
or
mov
repnz
mov
je
aad
out
mov
dec
mov
jnp
inc
inc
lods
mov
xor
loop
fimull
cmp
push
outsl
outsb
pusha
popa
dec
fwait
push
sub
xchg
xor
stos
and
test
add
test
clc
push
sbb
bound
pop
and
add
mov
dec
jg
pusha
je
mov
incl
into
mov
in
dec
lcall
sub
clc
loop
or
mov
outsb
adc
mov
adc
in
mov
and
adcl
jno
xchg
inc
dec
shll
jmp
pop
dec
mov
mov
push
jle
cs
das
push
out
dec
rcrl
jmp
pop
cmp
rorb
dec
cs
dec
xor
push
lret
into
enter
cmc
adc
in
test
sbb
dec
dec
xorb
dec
jp
sbb
out
jmp
dec
push
dec
cmp
sub
ret
lods
jb
aaa
xchg
fimull
xor
xor
push
scas
jo
int
push
jge
addr16
inc
push
pinsrw
sub
outsl
and
xchg
inc
cmp
addr16
push
mov
test
jecxz
push
iret
xor
int
fwait
out
dec
pop
popa
cmp
jmp
daa
pop
sar
lock
rorl
push
mov
popa
cwtl
xlat
dec
lods
mov
std
add
jbe
in
inc
out
aas
jle
inc
cmp
sbb
sbb
sub
shll
inc
popa
sbb
outsl
cmp
lcall
sbb
inc
scas
ss
inc
addr16
xor
mov
pusha
mov
dec
in
ja
add
lea
sbb
mov
dec
mov
int
or
insb
jp
lahf
mov
cmp
dec
mov
mov
mov
test
push
daa
cmp
pop
sbb
js
dec
jno
mov
lds
pop
vmwrite
adc
aaa
dec
ret
mov
out
and
repz
in
push
pushf
inc
sbb
jge
xor
lods
ja
mov
push
dec
adc
cmc
fwait
push
dec
xchg
stos
and
ja
inc
sti
jl
mov
hlt
sbb
lret
lcall
dec
in
ret
lods
push
leave
mov
pop
pushf
mov
imul
stos
fsubrl
jbe
popa
inc
mov
dec
add
mov
jb
insb
lcall
std
jle
pop
dec
loop
xchg
pop
jmp
inc
dec
sub
push
stos
jle
dec
xorl
jecxz
adc
xor
nop
inc
mov
inc
or
or
dec
cmp
inc
xchg
les
push
dec
imul
aas
xor
ret
sbb
dec
pushf
inc
mov
test
sub
jne
xchg
lret
dec
es
cmp
icebp
jbe
mov
inc
xor
imul
dec
fisttps
dec
imul
sbb
orb
dec
jb
mov
das
and
xor
loopne
in
insb
mov
aaa
jo
sub
push
add
jnp
insl
xor
inc
les
or
test
data16
inc
jmp
mov
and
adc
sub
jno
jp
adc
mov
jg
sub
lahf
dec
std
push
mov
imul
in
out
or
stc
adc
mov
outsb
rcr
mov
fstpl
pop
dec
or
jo
fs
imul
shrb
dec
mov
sbb
dec
popf
push
les
ss
sti
cmp
jecxz
dec
inc
and
jp
cmp
mov
push
stos
repnz
mov
sti
dec
int3
mov
shlb
push
pop
dec
imul
adc
rclb
shlb
std
push
test
outsl
rorb
xlat
cmp
xchg
sub
mov
test
ret
pop
cmp
add
test
jo
es
jl
xchg
mov
dec
fists
gs
cld
xchg
add
ret
fdiv
sub
jo
jno
or
jge
leave
and
dec
pusha
xorb
mov
test
sub
pop
cmp
aam
jg
xchg
or
fidivs
mov
repnz
xor
mov
int3
mov
dec
fs
mov
popa
cmp
dec
in
stc
call
aam
mov
mov
lea
inc
jne
dec
inc
push
jmp
cmpb
pop
clc
push
jnp
mov
in
dec
lock
js
nop
or
dec
lahf
rorl
dec
and
pushf
es
xchg
sub
cmp
mov
dec
xchg
push
sti
mov
push
push
dec
xchg
xor
loop
ja
int
jecxz
xchg
xchg
inc
and
in
popf
lock
or
dec
xchg
jno
add
sub
cld
mov
mov
sub
sbb
dec
movsb
stc
mov
or
into
insl
and
fadds
sbb
jnp
imul
getsec
aas
dec
js
je
mov
xchg
daa
es
mov
ds
sti
mov
mov
xor
fmull
inc
mov
cmp
loopne
lret
dec
push
lock
dec
pop
in
les
jecxz
push
and
int
fildl
xchg
cmp
dec
push
push
enter
aas
inc
cs
ret
dec
mov
cmpsl
xchg
inc
pop
mov
cli
adc
xor
out
fisubrs
shl
push
bound
dec
in
repz
jnp
cmp
mov
ret
dec
adc
xor
sub
das
enter
jecxz
cmp
in
lret
push
cmp
leave
imul
shlb
iret
pop
sub
dec
cwtl
mov
aaa
push
add
push
jge
inc
mov
inc
lret
nop
mov
bound
pop
jl
sbb
test
dec
mov
mov
lods
xor
inc
and
rol
dec
fsts
mov
push
jne
jns
scas
add
dec
sahf
imul
mov
loopne
dec
repz
xor
xlat
fisubrs
cwtl
clc
out
ss
cs
leave
sti
dec
xor
and
dec
or
xor
imul
fwait
sti
sbb
jmp
pop
mov
repnz
lret
testb
mov
adc
je
outsb
outsl
test
dec
mov
sbb
add
cltd
loope
rcl
shll
dec
and
pop
sahf
ljmp
sub
std
loopne
mov
cli
dec
inc
outsl
stos
cmp
dec
adc
cmp
repnz
push
fsubrl
test
dec
lret
fisubs
jns
sbb
dec
pop
dec
xchg
push
ss
daa
cmp
mov
or
lds
nop
mov
push
pushw
scas
sti
aaa
bound
adc
lcall
mov
sbb
into
dec
stc
lcall
popf
mov
stos
rorl
ss
xchg
popf
mov
icebp
push
and
pop
pop
repnz
cmpl
insl
pop
or
mov
xchg
outsl
lock
aam
hlt
data16
ljmp
dec
push
dec
mov
dec
and
dec
inc
lcall
jl
push
scas
sub
dec
sbb
call
xor
fnsave
dec
repz
mov
stos
ffreep
lsl
xchg
add
sbb
dec
xchg
and
addl
dec
dec
adc
mov
lds
lods
dec
lock
jl
adc
ljmp
lret
int
pushf
insb
push
jmp
cmp
xchg
mov
sub
mov
mov
mov
push
dec
and
xchg
or
and
repz
dec
xor
testl
sub
jne
jno
xchg
sub
or
notb
test
popa
push
les
sbb
ret
mov
push
adc
lods
pop
popf
dec
imul
clc
adc
dec
or
jmp
daa
lret
lds
sbb
scas
out
dec
dec
notb
pop
hlt
add
pop
cmpsl
jnp
xor
xchg
lods
testb
jl
stos
stc
xchg
push
cmp
mov
repz
dec
mov
dec
repnz
fbld
cmp
adc
push
stos
scas
sbb
pop
movsl
stos
jno
dec
lds
mov
mov
sahf
jge
jns
pop
imul
adc
mov
daa
hlt
pop
push
movsb
sub
outsl
pop
inc
rorl
dec
add
xchg
push
inc
imul
repnz
outsl
push
dec
sbb
pusha
pop
daa
clc
push
adc
icebp
dec
cmp
fstpl
mov
dec
cmp
loope
test
inc
outsb
andl
out
movsb
cmpsl
push
test
popf
inc
dec
fidivs
arpl
inc
sub
dec
enter
arpl
dec
xchg
jmp
mov
jle
push
das
cli
or
dec
cwtl
mov
xchg
ss
jecxz
cltd
dec
cmc
sbb
nop
leave
popa
loope
es
dec
fwait
jp
mov
xor
dec
inc
call
inc
testb
cmp
cmpsb
cmpsl
mov
and
dec
mov
adcl
lds
imul
loop
pop
fs
mov
testb
or
aam
test
and
aaa
rolb
stos
mov
inc
cmp
xor
movsl
sub
cmp
dec
adc
sbb
inc
lods
mov
xor
js
jnp
cmpl
mov
inc
dec
sbbb
loopne
in
adc
jae
sub
inc
jo
js
icebp
lods
push
mov
jnp
jg
dec
aas
dec
les
ja
cmp
xchg
push
loop
rorl
sbbb
inc
pop
inc
push
and
and
scas
xchg
scas
mov
dec
push
sbb
loop
lcall
outsl
je
iret
inc
dec
mov
fdivrl
fisubrl
mov
or
test
insl
rorb
dec
test
and
sub
mov
aad
adc
push
out
sbb
dec
hlt
in
adc
or
scas
mov
jge
rclb
outsb
stc
xchg
mov
aas
ss
ret
int3
inc
dec
cltd
add
and
test
inc
fdivrl
insb
add
mov
push
dec
mov
xchg
in
dec
cltd
imul
mov
dec
je
push
mov
rcll
xor
push
dec
insl
push
or
insb
cmp
dec
jne
inc
shll
jmp
or
or
dec
inc
pusha
imul
fucomi
and
push
aas
jno
cmp
inc
stos
shl
dec
roll
popf
cs
dec
sub
mov
mov
adc
aaa
hlt
adc
xchg
orb
loopne
mov
dec
pop
mov
jecxz
fldl
xlat
mov
dec
inc
inc
sub
mov
dec
out
push
loopne
dec
std
xchg
aaa
je
sti
mov
das
inc
cmp
ss
and
out
push
rol
test
gs
fsts
arpl
loopne
and
popa
subb
shl
jl
das
mov
jne
xor
sub
int3
fmuls
sbb
lods
leave
pop
adc
dec
sti
scas
cmp
dec
pop
xchg
addr16
sub
xchg
dec
sub
inc
or
push
mov
dec
pop
push
call
push
jb
dec
in
shll
das
cmpsl
pinsrw
call
out
adc
or
loop
lret
xor
dec
call
mov
xor
pop
jmp
inc
mov
test
pop
loop
ljmp
sbb
xchg
push
dec
loopne
pop
inc
dec
js
sbb
dec
mov
leave
adc
imul
inc
pop
into
dec
bound
ja
xlat
imull
fmul
sub
push
xchg
xchg
dec
push
insb
cmp
add
mov
cmp
mov
sub
lahf
xchg
shl
cmp
sub
sub
and
dec
cmp
ljmp
mov
or
xor
dec
mov
dec
jnp
pop
xchg
xchg
repz
cltd
lret
mov
aas
dec
xchg
fists
and
dec
ret
ficoml
fildl
fcomps
dec
cmp
push
and
sti
push
jo
inc
outsl
orl
cld
repnz
push
loop
inc
pop
push
out
jmp
xor
xor
stc
sbb
sbb
addr16
cwtl
dec
jb
inc
xor
rolb
pop
fsubrs
mov
in
in
arpl
lcall
enter
std
mov
out
lahf
sahf
jmp
enter
dec
sbb
pusha
dec
adc
shlb
clc
dec
imul
lods
xchg
dec
stc
jb
pop
test
fwait
mov
fisttpll
xchg
dec
mov
fs
cwtl
xchg
jno
dec
pushf
inc
jne
dec
nop
mov
inc
ja
xchg
jb
dec
imull
xor
cmp
pop
pop
dec
xor
jb
lret
inc
jmp
in
pushf
push
lods
and
sahf
pop
shr
mov
stos
outsl
repnz
dec
or
fcoms
dec
addl
and
sub
adc
dec
mov
xor
movsl
push
rolb
adc
and
pushl
mov
mov
dec
push
dec
insb
das
mov
incl
inc
pop
das
inc
dec
push
lock
push
mov
movsl
sbb
sbb
int3
ljmp
add
jo
into
shlb
cmpb
add
cld
scas
fnstsw
nop
bound
je
mov
insl
stc
dec
xchg
sbb
leave
lock
movsl
call
mov
adc
ss
mov
dec
xchg
mov
mov
jecxz
and
aad
xchg
fimuls
into
or
sub
cwtl
jnp
and
or
pop
daa
repz
or
es
cwtl
dec
or
out
mov
jae
nop
inc
hlt
insl
iret
test
sarl
dec
test
pop
and
mov
stc
mov
pop
lea
dec
dec
lret
mov
mov
fsubrl
fs
sub
sub
lahf
mov
fcmovne
pop
repnz
loope
adc
cmpsb
xor
sahf
fmul
push
jne
dec
mov
pop
push
mov
fisubl
arpl
or
mov
push
add
sub
stos
push
dec
sbb
mov
cwtl
xchg
jno
pop
cs
dec
mov
fstl
mov
test
insl
push
lods
repz
cmp
lret
mov
dec
push
stos
pop
add
stc
mov
add
dec
mov
shlb
push
cli
dec
shlb
in
push
add
add
dec
pusha
adc
mov
inc
pop
cmp
cmp
repnz
ss
pop
cmc
adc
jmp
inc
lret
push
fadds
push
leave
shlb
inc
int
cwtl
dec
jb
in
jo
mov
lods
mov
pop
sbb
and
push
jns
mov
pop
jle
inc
cltd
imul
mov
subb
or
je
imul
mov
push
cs
gs
sti
cmp
cwtl
pop
mov
and
clc
jno
lcall
lods
jno
movsb
xchg
aad
sub
fisubl
jge
out
and
or
dec
and
popa
scas
sti
dec
pusha
add
mov
add
fisttpl
mov
dec
test
pop
xor
and
add
or
mov
stc
cmp
iret
pop
mov
push
push
jge
xchg
dec
mov
pusha
into
mov
xchg
push
jp
insb
xor
int
jmp
fs
jp
push
repnz
inc
jae
adc
mov
mov
mov
ret
push
cmp
pop
sub
loope
mov
sbb
xor
ss
sbb
test
or
and
ret
dec
jmp
pop
sub
dec
xchg
jg
mov
push
mov
es
adc
push
imul
inc
xor
adcl
loopne
cmc
dec
imull
inc
mov
push
lcall
in
outsl
xlat
leave
fimull
pop
sbb
xchg
inc
cmp
or
mov
out
and
ds
jge
dec
xor
mov
int3
mov
push
inc
movsb
scas
dec
push
mov
mov
outsl
pop
sahf
dec
enter
dec
leave
rorl
cmovle
lahf
mov
inc
stc
daa
sub
hlt
out
push
hlt
add
jne
scas
scas
xchg
and
sub
mov
das
pop
testl
adc
mov
lahf
repz
pop
push
mov
ret
inc
sbb
scas
ret
dec
pop
mov
aad
jle
imul
mov
or
imul
jp
add
out
shl
in
dec
push
sub
dec
mov
pop
cwtl
fcmovbe
imul
mov
pop
test
mov
push
jo
cmc
and
dec
inc
arpl
les
lods
add
xchg
mov
push
mov
arpl
push
pop
add
sbb
pop
shlb
mov
mov
sarb
dec
xor
dec
leave
in
lret
jmp
or
lret
stc
into
call
insb
push
daa
jl
clc
call
pop
pop
lods
sahf
fimull
xor
inc
mov
and
aaa
jecxz
pop
dec
aad
mov
jb
jns
ror
daa
sbb
mov
or
addb
push
ret
or
imul
dec
jmp
xchg
xor
gs
jne
js
mov
imul
xor
std
popf
xlat
dec
orl
adc
jl
leave
mov
outsb
add
mov
popf
pop
jb
std
sbb
mov
je
in
test
or
dec
mov
xchg
or
inc
movsl
ja
les
and
aas
repz
out
ror
dec
out
jecxz
push
cmp
jno
xchg
insb
sub
dec
xor
ss
adc
dec
cwtl
xchg
dec
shrb
mov
decb
sbb
cmpsl
xor
push
rolb
xor
xchg
xchg
cmp
daa
add
mov
xchg
ss
push
jmp
cmp
cltd
sub
js
inc
insb
add
jge
and
dec
ds
push
mov
jbe
inc
inc
mov
clc
stc
imul
mov
sbb
dec
sbb
xor
cmp
je
cli
jge
popa
test
jno
in
sbb
inc
mov
sbb
test
mov
mov
jbe
dec
cmp
in
push
fcmove
call
pop
xchg
add
popa
and
mov
or
mov
clc
pop
aad
add
pop
mov
sarb
xchg
add
aad
lods
jle
dec
pop
clc
xchg
cwtl
stos
scas
dec
xor
xor
xchg
mov
stc
xchg
mov
dec
subl
repz
je
aaa
int3
out
dec
pushf
and
mov
inc
scas
iret
inc
hlt
dec
xlat
repz
icebp
aad
xchg
dec
and
cmp
dec
mov
imull
in
pop
mov
cmp
mov
push
push
pop
in
es
adc
push
mov
sub
out
aad
inc
test
mov
jecxz
mov
stos
lcall
jge
js
and
ret
sub
push
sahf
jle
pop
dec
add
flds
mov
enter
sbb
out
jmp
popa
dec
scas
jbe
sar
push
fnsave
dec
dec
cmc
pushf
sti
repnz
xor
inc
dec
sbb
cmp
or
push
xchg
rol
cmp
dec
or
jle
andl
hlt
addb
inc
adc
and
shrb
dec
movsb
cmp
xchg
or
in
pop
pushf
mov
mov
pop
dec
nop
pushaw
pop
xchg
inc
jle
inc
ret
pop
inc
mov
mov
mov
mov
mov
xlat
sbb
imul
dec
fadd
stos
pop
add
dec
pop
and
call
loopne
xor
cmc
push
dec
inc
imul
cwtl
insb
dec
mov
mov
mov
pop
cmp
dec
and
sbb
inc
mov
dec
adc
cmpsb
mov
add
shlb
adc
dec
sbbl
jmp
stc
cmpsl
xor
dec
leave
mov
cld
fcoml
sub
push
mov
mov
iret
sub
enter
stos
inc
jmp
movl
lret
lcall
push
dec
aam
xor
adc
pop
bound
movsl
outsb
push
cmpsb
mov
fistps
or
sub
js
dec
dec
and
pop
fwait
sub
rcr
pop
push
jns
ja
cltd
insl
pop
mov
in
out
mov
and
add
inc
aas
mov
or
in
out
gs
push
inc
outsb
leave
dec
sub
jns
push
adc
cld
sub
imul
in
cwtl
scas
dec
pop
adc
mov
imul
adc
and
cmp
loop
add
mov
sbb
jns
adc
pop
ss
rcl
dec
add
hlt
icebp
incl
dec
dec
mov
cli
fs
lods
adc
movsb
repz
push
cmp
mov
roll
dec
add
xchg
inc
or
add
xor
dec
and
ret
mov
inc
jl
or
mov
cmp
fstpt
jns
dec
dec
rclb
orl
cmpsb
aad
movd
lock
dec
add
jno
cmp
and
popa
cwtl
or
push
dec
adc
or
inc
dec
mov
xchg
les
mov
into
sub
int3
dec
shll
mov
lret
movsl
mov
lds
xor
sahf
fsubrs
dec
xorl
adc
inc
jg
mov
sub
and
cwtl
mov
test
lods
idivb
jno
movsl
adc
repnz
test
xchg
and
dec
stos
js
fstpt
popf
or
add
cmp
shr
jle
mov
mov
imul
mov
adc
lock
insb
jp
out
js
shll
xor
jmp
mov
and
cmp
jno
push
mov
lods
call
sub
mov
aam
out
or
test
lret
xor
cmp
ret
shrl
jne
or
icebp
dec
inc
fisubrl
andl
repnz
call
idiv
in
out
cwtl
cs
pop
in
push
xor
add
cmovle
decl
pop
addl
aaa
pop
mov
or
jl
popa
xchg
adc
es
stos
mov
inc
dec
hlt
add
sti
mov
fmuls
mov
dec
clc
lock
push
jb
pushw
testb
jbe
mov
arpl
cmpsb
or
sbb
pop
inc
stos
or
dec
cmp
mov
imul
dec
stc
inc
inc
out
dec
pop
int
ljmp
fimull
dec
dec
enter
je
mov
clc
test
xchg
jno
lret
int3
imul
movsb
std
cmp
out
inc
and
add
mov
and
dec
lods
xchg
jne
dec
xchg
movl
fisubrs
pop
push
imulb
sub
inc
dec
mov
jbe
rorl
dec
out
dec
inc
lret
or
enter
cltd
lret
das
cmpsl
jmp
dec
popf
insb
mov
bound
addb
adc
int3
dec
ret
cld
sti
jecxz
xchg
push
mov
fdivl
mov
push
mov
xor
xchg
dec
cld
mov
cmp
push
loop
mov
call
xor
leave
xchg
loop
pop
push
pop
and
add
imul
ljmpw
cmpsb
cmp
fimuls
mov
sahf
dec
adc
out
xor
addr16
sbb
cli
cmc
xchg
pusha
ss
dec
fwait
iret
cmp
push
stc
dec
negl
adc
shrb
add
mov
aas
pop
push
orb
jp
dec
add
insl
dec
pop
fisttpl
ftst
mov
xadd
or
xor
cmpsb
int3
mov
dec
jecxz
and
inc
iret
call
mov
dec
jo
int3
dec
xor
stos
lds
cmc
stos
xchg
out
icebp
repz
gs
mov
clc
ss
dec
fimuls
pop
mov
mov
jg
test
repz
or
scas
sub
sbb
ss
inc
dec
cwtl
cmp
cmpsl
mov
lcall
mov
push
insb
stc
add
adcb
sub
pop
jle
test
lock
xor
leave
enter
mov
mov
test
lret
dec
jne
out
imul
dec
test
cmp
dec
fcompl
dec
mov
lock
sarb
mov
fistps
pop
lcall
arpl
aad
sbb
test
jne
inc
dec
dec
mov
push
mov
jne
stc
adc
rorb
in
dec
daa
inc
insl
lcall
icebp
inc
push
mov
cwtl
adc
and
scas
add
cmpsl
push
bound
gs
adc
pushf
jg
push
fs
or
sub
xchg
and
mov
xor
mov
cmp
jbe
jmp
push
out
push
inc
ljmp
dec
or
pushf
sub
stos
jnp
or
jno
inc
dec
mov
imul
adc
inc
lret
jnp
sbb
pop
and
les
mov
mov
mov
mov
xor
xchg
and
adc
ss
ficompl
push
cmp
jae
gs
xchg
mov
adc
test
mov
sbb
lock
mov
xchg
dec
dec
xor
dec
insl
rorl
sbb
js
lret
dec
lods
add
mov
mov
dec
jl
out
clc
jg
into
daa
xor
push
divb
andb
rolb
lods
mov
xor
neg
sub
popf
push
enter
sub
leave
repz
pop
imul
jne
rorb
js
sub
loopne
and
add
rorb
add
mov
sbb
mov
loop
call
and
in
xor
adc
sub
mov
xchg
loope
sti
rcrb
mov
dec
push
popa
les
pop
mov
sbb
pop
gs
in
cld
loop
cli
dec
cmp
sahf
inc
faddl
fcoms
xor
in
dec
into
or
js
add
dec
out
or
sub
mov
jl
clc
pusha
clc
rorl
ret
cli
sbb
sahf
mov
dec
les
scas
mov
ss
adc
fldl
dec
jns
scas
das
xchg
push
inc
dec
cld
imul
push
cli
je
mov
int
cmp
shrb
rcrl
cltd
int
loopne
mov
push
shr
imul
mov
xchg
lock
jo
dec
cmpsl
mov
xor
or
lcall
test
test
outsl
add
dec
xor
call
jl
cmp
sbb
lds
test
mov
add
dec
cld
dec
fwait
es
dec
and
fs
repz
orb
jb
xchg
mov
divb
ss
or
cmp
addr16
adc
jae
pop
popa
bound
add
push
cmp
mov
or
imul
sbb
stos
add
xlat
jg
or
pop
enter
imul
popf
jge
dec
inc
pop
idiv
xor
int3
jp
dec
lret
cs
dec
das
inc
cmp
in
sti
fneni(8087
mov
cmp
lods
lods
push
mov
push
or
dec
je
sub
fbld
jecxz
xlat
push
xor
pop
outsb
sqrtps
add
sub
test
popf
cwtl
mov
jl
enter
cltd
add
dec
popf
es
push
inc
xlat
mov
or
sbb
push
out
cs
adc
sub
jmp
or
fdivl
jae
daa
sub
cltd
movsb
popf
mov
xchg
out
inc
dec
xchg
mov
scas
in
aaa
dec
jmp
orb
push
hlt
sar
mov
shll
clc
aas
adc
dec
adc
push
add
cmc
cmp
dec
imul
mov
dec
rcll
icebp
inc
das
mov
addr16
ret
ljmp
les
mov
repnz
mov
or
or
ret
lods
dec
jp
cmp
sbb
sbb
decb
push
scas
mov
inc
flds
lock
test
aad
imull
jge
and
cmp
sahf
nop
jne
mov
jmp
mov
inc
dec
mov
movsl
inc
xchg
push
add
adcb
cwtl
push
dec
sub
xor
mov
into
test
in
ret
xchg
xor
outsl
leave
mov
ja
sub
fcmove
stos
clc
dec
outsl
pop
mov
xor
lcall
orb
loopne
add
cltd
std
dec
pop
xor
adc
mov
mov
es
loopne
into
push
outsl
xor
mov
int
bound
or
addb
jl
pusha
movsl
sbb
mov
mull
sub
xchg
jmp
mov
shld
mov
adc
jg
or
add
fwait
jb
sbb
dec
or
nop
rol
xchg
fs
sub
sbb
leave
in
out
and
xchg
or
mov
loop
sarb
fstl
mov
in
xlat
je
ss
dec
ja
test
push
jecxz
outsl
dec
fimuls
lods
mov
mov
lret
paddsb
fildll
fcmovnbe
imul
or
mov
in
jmp
adc
lcall
es
lods
dec
popf
xor
pop
xlat
lcall
xchg
inc
aam
dec
bound
daa
das
dec
in
movsb
mov
rcll
jmp
aaa
push
push
ss
lret
sub
inc
push
pop
dec
imul
stos
dec
pop
roll
cmp
dec
jle
adc
out
adc
dec
mov
es
pop
jle
push
inc
inc
add
cmpsb
rcrb
rcrb
pusha
repnz
iret
fidivrs
imul
mov
movsb
dec
xchg
adc
rcr
push
dec
cmc
push
push
sbb
and
fs
in
movsl
mov
lret
dec
inc
dec
xor
add
mov
loop
sub
lcall
pop
call
orl
mov
sbbb
jne
fwait
and
dec
mov
dec
outsb
pop
sbb
jmp
inc
sar
dec
cmp
mov
cmp
insl
into
popf
ret
or
in
inc
push
test
cmpsl
xchg
sbb
rorb
dec
xor
fnstsw
rclb
mov
gs
push
xor
pusha
jle
push
clc
mov
dec
popa
inc
adc
sbb
cs
stos
outsb
add
pop
xchg
cmp
addb
inc
stc
push
xchg
jecxz
dec
fwait
push
mov
dec
movb
dec
pop
sub
pop
ret
dec
xchg
mov
dec
xchg
sti
push
int
je
inc
dec
add
pop
sahf
mov
js
in
push
outsb
push
sub
je
ret
push
inc
dec
ret
jg
sub
push
fxch
insl
jne
lret
testl
add
fsubr
cltd
mov
or
sub
adc
ja
lret
sbb
cmpsl
fimuls
movsb
ja
leave
out
dec
pop
repz
sahf
sbb
dec
mov
add
mov
ret
lea
sbb
xor
xchg
jb
mov
dec
mov
jns
jo
les
mov
jle
pop
add
push
mov
pop
xor
sbb
jmp
fcmovnb
xor
das
dec
inc
repz
shll
mov
dec
out
out
pop
dec
mov
sbb
mov
test
sbb
push
test
mov
dec
fcom
pop
xor
mov
mov
cli
xor
ret
or
jecxz
cwtl
xor
or
stos
jl
hlt
push
jb
aas
xor
push
inc
mov
xor
dec
mov
xchg
ja
imul
sbb
popa
xor
out
dec
and
scas
pop
test
ss
outsl
dec
or
cmp
int3
or
cmpsl
sub
push
inc
dec
mov
hlt
lret
xor
cltd
sub
jl
pop
add
iret
pusha
adc
pop
repnz
mov
add
sti
addr16
push
sbb
mov
aad
test
mov
adc
inc
inc
pop
push
mov
mov
stos
dec
daa
jp
sbb
sub
push
dec
jno
jne
and
mov
dec
lret
adc
scas
movsb
ret
xor
sbb
xchg
cmpb
mov
rorl
repnz
shrl
mov
dec
out
lret
mov
testl
inc
mov
pop
adc
cmp
jmp
or
mov
loopne
stos
mov
fs
and
pop
testb
pop
pop
aam
jo
popf
fdivs
mov
mov
daa
dec
inc
mov
test
dec
out
repnz
repz
mov
fstpl
cmc
in
inc
dec
les
pop
mov
inc
add
dec
inc
nop
je
xor
js
mov
flds
das
pop
test
cmp
out
inc
call
add
hlt
outsl
mov
fbstp
mov
pop
sub
dec
mov
fwait
daa
dec
inc
adc
sub
xchg
xor
aaa
xlat
das
mov
dec
fistps
addb
out
cwtl
push
inc
fisttpl
dec
nop
xchg
add
cmpsl
int3
dec
push
dec
test
fisttps
lods
sbb
or
push
xor
pop
dec
ret
lcall
mov
insb
or
add
rclb
leave
add
je
out
or
dec
ds
adcl
jecxz
imul
xchg
cld
cwtl
mov
aad
jbe
dec
inc
data16
mov
xor
addb
dec
lret
dec
mov
into
jg
jb
push
test
test
and
cmpsb
mov
mov
clc
jns
popa
push
fdiv
and
inc
mov
sahf
lods
rorl
inc
inc
mov
push
ss
xor
lock
scas
cmp
push
dec
add
inc
test
dec
cmp
jl
lahf
adc
mov
stc
cs
leave
dec
dec
lret
jmp
dec
add
addr16
popa
cmp
dec
dec
decl
iret
adc
sbb
sub
pop
mov
dec
pusha
xor
shlb
scas
mov
dec
dec
lret
mov
mov
jb
test
dec
frstor
rorb
mov
cld
rol
fidivrl
mov
shll
adc
jo
fldcw
mov
pop
ja
add
ss
xor
xchg
imul
dec
pop
jnp
xor
je
fstpl
jo
lret
mov
pop
cwtl
jo
test
xor
jne
mov
cld
xor
lret
into
push
adc
cwtl
adc
call
jmp
ja
rcl
shlb
cmp
mov
mov
fisubs
inc
cwtl
dec
mov
movsl
push
dec
pop
push
das
inc
dec
mov
xchg
mov
call
jbe
imul
mov
fstpt
mov
add
cltd
and
clc
popf
mov
lcall
insb
cmp
scas
bound
inc
inc
leave
mov
test
sbb
scas
scas
jnp
add
sti
jae
add
imul
popf
mov
adc
cmc
in
std
fists
aad
dec
or
fsubl
sub
sbb
and
sbb
sub
jl
sbb
inc
xor
js
push
cmpsb
lock
sbbb
into
scas
add
pop
lahf
cld
xorb
dec
lcall
fs
cmpsb
mov
ds
mov
and
inc
xor
inc
das
addr16
ja
mov
pop
cmp
ret
cmp
xchg
test
test
sub
lret
pop
das
aad
iret
fwait
out
sub
adcl
lret
into
pushf
std
lods
ror
sub
mov
adc
leave
ret
icebp
sub
es
rclb
ficompl
xor
inc
dec
jae
sub
int3
push
mov
or
int
push
in
pop
push
ret
nop
pop
dec
lcall
push
cmpsl
movsl
sti
adc
fdivp
and
xchg
inc
into
or
sbb
ds
mov
adc
in
mov
sahf
jcxz
test
mov
stc
les
pop
pop
out
add
dec
mov
ljmp
sbb
cs
jb
iret
fstpl
sbb
xchg
dec
int
push
cwtl
ss
pop
lds
xor
dec
mov
cmpsl
fs
pop
add
leave
dec
out
into
xlat
rcll
mov
dec
xchg
in
mov
sbb
lock
dec
add
dec
adc
sbb
sar
iret
push
sub
dec
test
fistl
in
mov
sub
mov
popa
pop
push
pop
and
stos
in
out
outsb
shrl
subl
and
cwtl
movsl
jo
dec
sbb
mov
mov
mov
ljmp
je
ret
sub
lock
pop
mov
or
mov
dec
nop
mov
shll
fiaddl
das
ror
pop
dec
cmp
fnstcw
push
daa
mov
inc
addr16
adc
push
addl
sti
out
pop
call
xor
add
fdivrl
mov
dec
mov
int3
cld
jno
lahf
mov
xchg
inc
and
dec
mov
in
jmp
lcall
cmc
gs
cltd
notl
notb
sub
test
and
outsb
call
arpl
and
mov
fs
xor
dec
xchg
lcall
mov
cld
dec
enter
push
mov
orl
inc
int3
sarb
repz
lock
cmpsb
aaa
xchg
dec
std
mov
jne
sub
sub
xor
mov
sub
test
test
je
int
xor
xchg
popf
pop
movsb
add
jb
dec
mov
ja
mov
inc
pop
dec
xor
sub
pop
out
clc
push
cmp
mov
mov
jp
fimuls
ret
dec
push
pop
adc
xlat
insb
ret
das
hlt
mov
test
or
add
cmpsl
dec
lods
lock
adc
mov
repz
push
push
scas
enter
and
jo
jmp
dec
jge
sub
pop
mov
xchg
mov
lds
fs
mov
jle
inc
inc
aad
dec
imul
xchg
push
movsb
push
jle
das
sub
imul
push
lcall
cmpsb
rorb
jae
loopne
in
test
pop
cmc
rorb
mov
sub
repz
xor
dec
leave
mov
add
scas
add
push
dec
std
movsb
fstpl
jno
and
in
adc
cltd
jg
or
jbe
rcrl
mov
mov
xor
out
pop
sub
inc
push
imul
add
aaa
stos
or
movsb
addr16
out
rolb
jle
jae
pop
xor
imul
hlt
dec
adc
das
dec
pop
jp
sti
sbb
std
add
ret
dec
xor
sub
xlat
sub
adc
or
outsb
shlb
xchg
dec
outsl
sub
out
ja
mov
call
jmp
mov
fmull
movsl
pop
sbb
dec
andl
fadd
les
push
fdivrp
dec
iret
jnp
adc
adc
push
dec
cmc
inc
add
adc
mov
cmpsb
shrb
icebp
dec
aad
les
sub
int
mov
fstp
push
lock
dec
mov
or
push
and
mov
leave
xchg
mov
outsl
inc
push
push
leave
out
mov
mov
call
and
mov
nop
fmulp
or
imul
dec
sbb
push
outsl
lcall
xor
daa
ret
imul
out
aam
dec
cmp
in
aas
jns
jne
xor
iret
push
test
es
mov
sti
jb
push
mov
nop
xchg
aam
in
sbb
sbb
dec
dec
roll
ljmp
push
push
mov
inc
cli
ds
ljmp
dec
pop
jmp
or
jns
dec
jbe
and
dec
js
and
sbb
jnp
aam
lea
cmp
or
jns
in
mov
out
cmc
imul
sub
mov
jae
ljmp
adc
fdivr
dec
into
cwtl
cld
cltd
sbb
sbb
inc
push
or
orl
pop
cld
loop
sub
xor
sarb
sub
push
adc
dec
cmp
fucom
dec
scas
pop
fstpt
and
jge
mov
push
push
cmp
adc
jo
xchg
sbb
aaa
sbb
adc
andb
dec
mov
mov
insb
shl
and
dec
cwtl
inc
sub
dec
xor
xor
out
dec
shll
stc
cmpsb
iret
ss
xchg
jne
cli
adc
popa
das
dec
sahf
fidivs
je
mov
dec
scas
push
mov
mov
push
sub
cmc
jle
xor
and
inc
lahf
xchg
add
pop
iret
push
into
enter
dec
aad
adc
in
mov
les
pop
xchg
gs
in
sbb
iret
push
cmpb
das
and
mov
scas
sub
mov
popf
dec
push
dec
insb
and
fsubrl
dec
push
loope
das
aas
addl
xor
iret
stos
adc
mov
popf
in
sbb
fmuls
xchg
test
subb
pop
mov
pop
cmp
stos
nop
loopne
and
dec
sbb
insl
jge
lds
scas
vmwrite
add
shll
pop
dec
notl
xlat
mov
inc
add
ror
push
mov
mov
loope
dec
jnp
int
scas
ss
dec
lcall
pop
add
adc
mov
rcll
pop
xor
jbe
dec
or
cltd
mov
push
std
aas
inc
inc
imul
or
sbb
aaa
jb
inc
es
add
aam
lds
repz
sub
jbe
add
mov
cmp
xchg
cltd
cmpsb
and
sub
in
mov
push
lock
or
sarl
xchg
xchg
or
pop
cmp
ss
clc
xchg
scas
stc
dec
sub
loope
dec
mov
jl
imull
clc
imul
mov
mov
dec
repnz
rorb
lahf
std
in
fidivl
add
cli
add
imul
sub
dec
ret
jbe
and
or
imul
adc
insb
mov
pop
cld
jg
adc
and
bnd
dec
sub
dec
fs
mov
lret
fwait
add
ret
xchg
inc
or
inc
add
push
mov
sbb
lahf
mov
stos
bound
dec
shll
loopne
jbe
mov
cmpsl
inc
xchg
in
sti
dec
or
fildll
jnp
ss
pop
cli
lahf
aaa
mov
mov
dec
outsl
aas
xchg
jo
fimuls
adc
jno
xchg
jge
adc
add
inc
mov
xor
scas
imul
lea
mov
popa
pop
sahf
mov
mov
das
push
mov
jl,pn
cltd
movsl
or
dec
out
iret
mov
lock
sub
mov
clc
mov
pop
test
shrb
jae
out
icebp
xor
jno
adc
aaa
inc
jge
orl
dec
jecxz
sub
lret
xor
mov
dec
scas
xor
aas
dec
cmp
adc
mov
test
push
lahf
inc
les
dec
pushf
shl
cwtl
repz
lcall
add
and
dec
aas
rcr
scas
push
adc
sbb
int
jmp
adc
subb
call
and
dec
jp
into
sub
inc
nop
or
dec
popl
inc
lds
insb
shl
add
out
popa
lret
and
daa
test
xor
mov
pop
pop
push
mov
test
sub
dec
inc
movb
xcrypt-ecb
cmpsl
movhps
fildl
inc
mov
dec
inc
pop
sub
sub
xchg
dec
daa
cld
pop
fwait
rolb
scas
int3
cmp
dec
cli
ret
mov
sub
push
or
dec
ficompl
je
push
cmp
sub
push
in
push
push
adc
add
mov
adc
andb
push
mov
xchg
in
lea
popa
mov
xchg
add
xchg
das
push
pop
dec
mov
mov
sbb
dec
push
xor
fisttps
dec
xor
sbb
pop
scas
inc
dec
or
les
aas
xor
in
jo
or
sbb
or
fcomps
punpckhwd
inc
int3
sti
lea
pop
lods
leave
in
dec
mov
mov
stc
dec
mov
mov
dec
ret
and
call
call
mov
xchg
pop
cmpsl
push
pop
je
out
mov
hlt
les
pop
inc
clc
xchg
outsb
pop
pop
xor
mov
sbb
xor
dec
fnsave
es
mov
enter
sbb
mov
or
pop
sbb
imul
mov
dec
mov
jg
sbb
leave
rcrb
xor
ss
or
push
scas
xlat
les
cmp
stos
sbb
and
dec
adc
stos
pop
mov
imul
or
dec
cmpsb
pusha
sub
dec
cmp
orb
insl
fiaddl
and
xor
add
add
push
out
jns
dec
adc
pop
lahf
add
push
inc
xchg
inc
pusha
jae
inc
leave
mov
dec
out
pop
scas
pop
push
sbb
addb
push
test
mov
jle
mov
push
das
dec
lret
sub
std
pop
enter
xlat
and
dec
lcall
rorb
xor
in
fs
dec
mov
adc
or
xchg
stos
imul
cmpsl
imul
sub
icebp
jne
push
rclb
pop
jo
out
and
mov
out
out
push
and
cmc
sbb
stc
inc
xchg
hlt
xor
cmp
sub
sbb
test
sub
addr16
mov
add
imul
and
lds
std
daa
ljmp
xchg
loopne
arpl
xchg
repnz
shll
jp
shlb
or
dec
add
mov
mov
and
movsb
rcr
das
data16
test
xchg
push
cmp
push
cmpsb
iret
dec
jb
rorb
pop
jo
adc
jmp
add
ljmp
inc
pusha
push
xchg
lret
xor
sub
loopne
add
pop
pop
cld
rcll
mov
cmp
out
dec
add
inc
dec
sub
ret
lcall
leave
pop
mov
push
mov
fdivl
hlt
movsb
dec
in
push
pop
enter
mov
iret
data16
cmp
dec
sti
hlt
add
dec
jb
sbb
jge
xchg
mov
pop
mov
xchg
ret
xor
mov
cmp
push
cmovg
fwait
mov
and
jl
adc
sbb
addb
push
sub
kmovb
dec
pop
mov
pop
dec
pop
mov
repz
fcmovnb
mov
fnstsw
loop
jns
scas
jmp
dec
notl
pop
sbb
repz
cli
out
mov
enter
jg
gs
adc
push
bound
stc
scas
nop
and
es
or
rcrb
pop
cld
popf
cli
and
cmp
dec
fmul
divl
dec
inc
ret
jne
hlt
mov
test
xchg
dec
mov
add
sbb
xor
in
xor
lcall
dec
insb
mov
int
sub
ds
dec
jmp
adc
add
in
jne
pop
clc
dec
cmp
dec
movb
iret
pop
adc
bound
imul
inc
orb
mov
dec
xchg
mov
roll
push
cmpsl
fimuls
imul
cmp
mov
out
dec
mov
mov
adcb
movsl
dec
pop
and
aam
pop
dec
stc
loope
push
or
aad
jb
cmpb
mov
inc
push
sar
sbb
pop
jp
das
mov
sub
ja
dec
dec
lds
mov
or
into
pusha
call
dec
inc
in
mov
lret
mov
push
in
div
ret
ss
xchg
dec
mov
push
and
adc
xorl
push
dec
or
dec
fs
inc
test
push
inc
aam
lock
mov
dec
push
filds
loopne
pop
nop
fcoms
lret
rorl
mov
and
jmp
jno
mov
in
dec
sarb
int3
dec
push
dec
mov
pop
mov
mov
shr
lcall
cmc
sub
pop
cmp
xor
sbb
sub
jne
sub
pop
sub
dec
adc
mov
sub
xchg
sub
lods
xchg
and
mov
clc
ss
pushf
addr16
mov
push
xor
sahf
fisttpl
dec
jg
stos
sarl
mov
jae
push
inc
xchg
dec
push
mov
inc
cs
outsb
or
das
jb
sub
or
ss
adc
push
and
das
inc
dec
inc
cmp
subb
scas
mov
loop
xor
dec
test
adc
ljmp
arpl
addl
test
lods
incb
cmpsl
je
adc
xchg
iret
lret
dec
movsb
cmpsb
daa
cltd
movsl
and
pop
dec
testb
push
push
cvttps2pi
lods
mov
dec
scas
in
inc
rolb
dec
mov
dec
sbb
xor
sub
clc
aam
into
inc
cli
xchg
dec
out
outsl
sbb
and
cmp
jb
adc
push
jge
in
fcoms
push
and
fnstsw
cltd
loop
in
cmp
insb
ss
pop
in
or
xchg
cmp
or
mov
and
and
or
jp
lock
cltd
out
aam
sub
jbe
aaa
fistpl
rorl
push
xor
out
fnsave
cld
push
ljmp
jo
scas
pop
nop
lods
mov
push
dec
pusha
push
xchg
es
scas
adc
les
sbb
jle
cmpb
mov
cmp
pop
arpl
rcrl
adc
and
adc
dec
adc
sarl
inc
mov
inc
adc
dec
xor
pop
scas
imul
fnsave
iret
add
xchg
pop
or
push
mov
mov
fwait
orb
dec
dec
mov
mov
add
add
add
stos
pop
xchg
dec
movsb
lods
cmc
jg
dec
icebp
cmpsl
scas
pop
inc
popa
loope
repnz
sub
add
in
adc
dec
loop
fs
push
jle
sbb
iret
scas
dec
loop
mov
fisttpl
data16
ja
or
outsl
inc
dec
inc
ds
xor
sbb
sub
cli
ror
cmpb
sbb
into
les
dec
notl
lods
rclb
fistpl
cmp
dec
sahf
xor
jecxz
insb
fimuls
out
lods
fs
orl
mov
cli
in
jbe
sbb
mov
dec
add
inc
scas
xchg
jl
mov
add
jae
or
adc
jmp
mov
pop
dec
add
push
jbe
cmp
jg
xchg
pop
hlt
loope
pop
xchg
mov
inc
sbb
and
cmc
xchg
lret
dec
inc
xlat
sbb
cmp
aam
lahf
test
daa
lea
xor
imul
cmpsl
sbb
jg
add
add
sub
lods
mov
faddl
sub
mov
jp
out
loopne
dec
insl
jecxz
mov
xor
dec
hlt
add
outsb
stos
dec
cli
adc
lahf
ds
dec
ficompl
fcompl
mov
or
mov
aas
addr16
jl
mov
test
es
pushf
in
sub
fmull
mov
add
mov
scas
push
xchg
iret
sbb
je
repz
fmuls
push
jbe
pushf
scas
scas
or
dec
and
mov
adc
push
dec
lret
scas
dec
lock
xchg
lods
inc
jbe
shrb
push
rorl
sub
shlb
cmp
mov
jmp
lds
imul
in
lret
sar
mov
xor
imul
or
dec
add
shlb
notl
sahf
sti
cli
sub
mov
mov
shr
or
scas
in
dec
or
gs
lds
movsl
das
call
jns
je
test
pushf
sub
pop
ss
insl
add
mov
dec
lock
xchg
sbb
push
outsl
mov
outsb
hlt
ss
mov
and
ljmp
dec
dec
icebp
loop
jo
out
xchg
imul
adc
adc
std
in
pop
imul
dec
imul
test
or
scas
mov
sub
dec
loope
pop
les
cmp
jle
orl
es
out
dec
sarb
cmp
loopne
mov
dec
pushf
fwait
push
push
and
jl
popf
cmc
clc
sub
dec
adc
and
cmp
cmpsl
jbe
or
out
clc
adc
movsb
ja
jl
stos
sbb
test
jle
cmp
scas
daa
stc
mov
bound
add
mov
dec
iret
ficomps
cltd
push
dec
push
xchg
test
shlb
cmpb
xchg
nop
xchg
dec
push
frstor
dec
pusha
fists
dec
daa
mov
cmp
pop
decb
mov
imul
or
push
pushf
dec
add
and
pop
stc
dec
repz
xchg
jbe
out
clc
xchg
mov
cwtl
mov
adc
dec
aad
and
lods
pop
add
lret
cmpsb
inc
dec
jmp
mov
sarl
push
pop
jne
cmc
pop
pop
mov
rorb
lds
ss
xchg
sahf
cmp
mov
mov
or
push
test
mov
mov
xchg
repnz
test
mov
push
add
mov
cmp
out
mov
push
xchg
cmpsl
mov
xor
popa
stc
fwait
pop
leave
dec
or
ret
cmp
jo
sub
lds
pusha
ss
loope
test
shll
xchg
cmc
inc
dec
addr16
popf
cs
dec
mov
cmpsl
xchg
add
rcl
sbb
pop
mov
xlat
repz
outsl
dec
hlt
mov
push
js
inc
jnp
adc
dec
nop
xlat
dec
xchg
jl
push
dec
cwtl
inc
mov
push
ret
rcrb
pop
in
daa
dec
add
cmc
ds
dec
mov
test
push
leave
das
dec
insb
mov
sbb
xchg
jns
loope
gs
dec
push
movb
jbe
and
xor
fimuls
and
cmp
push
dec
fisttps
jecxz
movsb
sbb
dec
jb
sti
jmp
loopne
insb
dec
fst
movsb
daa
sub
rcrl
sbb
push
jp
and
pusha
subb
push
xor
sbb
gs
std
dec
imul
lea
sbb
pop
push
and
aad
xchg
adc
pop
testl
dec
outsl
stc
push
dec
fwait
lret
jns
or
push
push
sub
and
pop
cmp
dec
lret
popf
dec
fmuls
xchg
fists
mov
sub
cmpsl
sti
mov
fsubl
test
neg
movl
lods
pop
aas
dec
jne
dec
jle
lods
dec
xor
lret
sub
testw
aaa
push
outsb
mov
dec
movsb
sub
pop
mov
inc
roll
shr
nop
fistpl
jg
andl
cmp
ret
dec
sbb
leave
cmpsb
les
out
outsl
mov
add
dec
cmpb
stc
adc
and
xchg
dec
and
mov
dec
ja
jne
dec
inc
stc
rorb
mov
push
repnz
outsb
and
dec
adc
pop
leave
fsts
xchg
xor
dec
sub
mov
sbb
push
lret
push
jge
xchg
fstps
inc
insl
sub
mov
jo
das
fldt
clc
push
aam
shll
enter
insb
xor
mov
idivb
jecxz
movups
in
test
movsl
fnsave
mov
jmp
idivb
mov
ret
jo
mov
adc
xchg
inc
mov
jp
pushf
push
call
enter
das
sbb
dec
dec
add
cmc
adc
lahf
mov
test
pop
and
repz
cmp
mov
or
adc
test
fidivs
lds
xchg
shr
adc
movsb
cli
ds
push
call
dec
xchg
fdivs
add
dec
outsl
sbb
xor
fs
mov
pop
movsb
insb
push
andb
lret
dec
fucomi
mov
jmp
xlat
fdivrs
jb
in
mov
cmpsl
ljmp
dec
dec
lods
pop
repz
push
rcll
fsts
int
out
or
xchg
dec
call
in
inc
xor
mov
dec
sub
js
sti
xor
sbb
loopne
mov
pop
inc
xchg
xchg
lds
ss
sub
repnz
cmp
sbb
sub
and
inc
lcall
xchg
dec
cmp
xchg
cmp
mov
addr16
or
sub
repnz
mov
fsubrp
dec
dec
cmp
sbb
test
mov
dec
mov
je
and
jb
dec
xor
mov
dec
andl
mov
adc
roll
dec
mov
sub
dec
adc
push
insb
dec
shrb
subb
mov
xchg
or
sbb
push
push
sarl
push
mov
dec
sbb
loopne
jmp
test
add
test
jmp
xor
out
mov
dec
jb
mov
lds
add
std
or
dec
cmpsl
shr
fstl
test
je
mov
inc
adc
inc
lret
hlt
cvttps2pi
test
jns
call
outsb
cwtl
in
test
jno
push
dec
imul
push
push
or
dec
sub
pop
or
push
std
cli
cmpsb
mov
gs
roll
jp,pt
or
mov
add
jmp
fimull
mov
clc
add
scas
dec
add
stos
mov
imul
into
dec
add
rorl
fdivr
sub
mov
insb
lret
sbb
dec
xor
std
mov
sbb
dec
or
pop
cmp
or
xchg
xor
inc
inc
aaa
mov
sarb
xchg
add
or
pop
sbb
dec
jmp
sub
call
loop
inc
aam
cmpsb
btc
cmp
imul
dec
sub
xlat
pop
xor
cmp
adc
aad
bound
mov
or
stos
ret
mov
sbbl
lods
dec
in
mov
movsl
cli
imulb
dec
and
repz
dec
sbb
jnp
push
mov
cli
not
pop
insb
sahf
nop
ljmp
lcall
cmp
inc
shlb
inc
dec
add
xor
sbb
std
outsb
mov
push
lret
and
add
call
dec
sub
sbb
adc
dec
pop
fstl
or
cmp
pop
xchg
cmp
add
das
cmp
cli
or
movsb
inc
mov
dec
or
jb
dec
frstor
xchg
shrb
sahf
dec
sbb
xchg
sub
pop
xor
adc
incb
into
ret
lret
mov
and
in
hlt
pop
dec
fwait
repz
imul
push
imul
or
cld
and
das
aad
fwait
shl
insb
pop
loopne
adc
sbb
fisttpll
int3
icebp
push
insb
enter
mov
dec
mov
add
or
lahf
dec
inc
inc
ja
fnstsw
or
outsl
mov
dec
mov
jno
dec
mov
pop
in
lods
leave
sub
add
jnp
jecxz
dec
subb
fwait
shlb
sbb
xlat
lret
clc
dec
in
sub
push
mov
push
fistpll
adc
andl
inc
cmp
xor
jno
or
sub
sub
sub
xorl
adc
icebp
dec
cmpsb
dec
lds
pop
mov
cmp
xor
mov
add
cmpsb
out
xor
xlat
push
or
xchg
jl
dec
dec
inc
stc
lds
mov
add
sub
mov
dec
cmp
dec
add
in
sub
in
lahf
aaa
pop
xlat
nop
loope
adc
dec
cmpsl
insl
add
cmp
mov
pop
or
insb
iret
or
test
or
fildl
repnz
sub
mov
jo
mov
pop
outsl
xlat
push
adc
xchg
xor
cmp
xor
ds
add
mov
lods
ljmp
inc
jb
jne
xor
mov
xchg
shrb
add
repz
outsl
mov
push
in
pop
pop
daa
orb
movsl
inc
dec
std
xor
iret
push
xor
lock
xor
dec
add
inc
jo
push
mov
mov
fnstenv
and
popa
aam
add
jb
dec
dec
mov
faddp
xor
andl
xchg
sbb
sbb
or
loopne
sub
dec
cmp
jle
cmp
shll
ret
fldt
cmp
jl
fisttpl
xor
dec
imul
int3
dec
std
loope
aam
fcoms
cmp
xor
sti
xor
adc
xlat
js
mov
dec
test
dec
jl
inc
dec
out
cmp
dec
or
lret
sub
jmp
dec
pop
inc
cmp
scas
fimuls
out
cmpsl
icebp
pop
inc
jno
shl
dec
shrl
push
clc
imul
iret
or
dec
call
dec
mov
sbb
and
pop
pop
adc
inc
dec
dec
ds
iret
adc
mov
ret
push
outsb
mov
cmpsb
and
lahf
dec
mov
aas
and
and
fcomps
mov
sbb
popa
pop
add
jecxz
dec
stc
lods
inc
stos
sub
rorb
pop
dec
xor
mov
je
lret
and
out
mov
jg
sub
push
dec
xchg
push
pop
mov
dec
and
daa
inc
pop
or
jp
jl
adcl
cmp
test
cmpb
dec
loopne
je
xor
mov
push
pop
jmp
add
cmp
cmp
jno
dec
mov
jecxz
ss
add
imul
cld
adc
insb
and
stos
jo
mov
movsb
push
jmp
int
imul
cltd
inc
inc
add
mov
jp
ss
mov
call
mov
in
push
sahf
addl
dec
jb
scas
dec
cmp
mov
jmp
adc
insb
fcmovnb
jecxz
inc
pop
and
repnz
lods
imul
icebp
cld
outsb
imul
mov
fxtract
xor
iret
xchg
inc
add
fwait
jle
lods
in
or
and
mov
dec
clc
pushf
mov
fwait
pop
lret
aas
sub
mov
dec
hlt
mov
mov
dec
bound
and
mov
cld
icebp
daa
sahf
dec
mov
inc
adc
dec
rol
xor
imul
cmp
ret
push
aam
call
jl
fisttps
mov
or
movsl
loopne
dec
xor
test
aad
jno
push
or
lret
jl
dec
add
dec
sbb
add
dec
call
adcl
mov
jnp
dec
fsubr
bnd
fildl
xor
mov
cmp
and
roll
imul
or
fidivrs
push
or
sub
dec
lcall
push
pop
ss
in
xchg
inc
and
cmp
shrl
pop
push
adc
push
jl
loop
bound
inc
aad
mov
mov
cli
jbe
into
xlat
xor
cmp
dec
push
lods
sub
jg
xchg
mov
dec
adcb
mov
ret
jp
dec
inc
jae
dec
inc
xor
popa
stos
mov
in
addr16
cmpsl
out
xlat
dec
les
dec
add
dec
mov
rclb
xchg
pusha
adc
xchg
ja
jg
ret
loopne
dec
fwait
push
inc
inc
rorl
pop
and
nop
fldt
cltd
lret
scas
enter
daa
dec
cmp
cmp
inc
dec
jno
iret
jnp
dec
stos
rclb
inc
sub
jbe
adc
and
add
jmp
ljmp
and
movb
pop
std
out
dec
fidivl
fisttpll
std
pop
jo
push
pop
aad
jo
std
cmp
je
popa
add
sub
int3
or
js
dec
ror
dec
movd
mov
subb
in
pop
lahf
insb
adc
pop
cmpsb
dec
and
pop
ret
mov
sbb
leave
mov
scas
mov
xlat
testb
sub
imul
cmp
xchg
push
popf
mov
out
dec
aaa
les
lds
or
dec
stos
push
inc
loop
mov
adc
hlt
pop
dec
repz
repnz
dec
je
ja
sarl
push
add
test
push
xor
inc
cmpsl
pop
dec
xchg
or
divb
mov
pop
dec
lcall
mov
cmpsl
sub
inc
mov
pop
sbb
xor
push
scas
add
dec
inc
cmp
loop
xchg
mov
cmpsl
push
lcall
cmpsb
int3
fisttps
sub
jne
and
inc
fisttpl
jge
pop
rclb
ljmp
adc
dec
inc
das
repnz
or
mov
ss
fdivs
data16
sub
inc
cmp
mov
aam
dec
mov
xchg
sbb
cwtl
jmp
mov
das
and
popa
dec
insl
dec
lock
inc
push
loopne
sbb
dec
add
call
sub
mov
test
xchg
iret
mov
pop
es
scas
cmp
insl
adc
movsl
pop
fwait
jno
arpl
out
out
je
jmp
lods
xchg
xor
push
lret
dec
jle
sbb
imul
inc
adc
dec
xor
mov
test
xor
inc
dec
mov
addr16
popl
pop
dec
cmp
mov
inc
push
dec
mov
fisubrs
jg
xchg
or
xor
dec
fcoms
lret
push
pop
cld
dec
inc
xor
cmpsl
or
adc
push
push
clc
dec
int
ret
adc
jbe
sti
push
mov
enter
mov
nop
clc
rorb
ja
les
and
outsl
test
jecxz
mov
mov
mov
dec
mov
hlt
fcmovnb
scas
mov
dec
or
loopne
dec
mov
fcoms
xchg
xlat
push
xchg
and
clc
jg
mov
adc
push
xor
mov
frstor
xchg
outsb
pop
fs
loopne
scas
add
ja
lcall
sbb
add
mov
outsl
push
insb
imul
shr
movsb
dec
fstpl
and
rorb
cmp
inc
and
lret
adc
mov
inc
and
out
sub
xchg
int3
movsb
mov
sub
push
pause
add
push
dec
add
cmp
out
mov
push
stos
xchg
leave
push
xlat
pop
xor
shll
mov
dec
in
stc
add
or
fs
push
dec
cmp
test
repz
xor
dec
xchg
lea
xor
pop
loopne
insb
iret
pusha
dec
inc
mov
push
aaa
xor
dec
mov
inc
js
jmp
cmp
ret
out
stos
mov
mov
addb
pop
sub
adc
loope
stc
into
insl
xchg
sbb
xor
cmp
dec
or
jae,pn
and
sar
dec
push
sub
cli
dec
popf
mov
aaa
xlat
pushf
in
lret
sbb
testl
stos
push
lret
lods
mov
adcb
dec
or
leave
and
push
daa
jl
ds
jecxz
rcr
dec
xchg
insb
rorl
call
xor
push
sub
mov
dec
cmp
inc
mov
jns
int3
cwtl
lcall
dec
cmp
sbb
or
loope
cmp
xchg
dec
call
cmpsl
iret
insb
sub
mov
cmp
adc
sub
adc
pop
dec
mov
jcxz
pop
jl
imul
mov
lods
cmpsb
ljmp
dec
ss
nop
aaa
testl
jmp
outsb
scas
mov
test
inc
pop
pusha
nop
aaa
xchg
dec
lods
movsl
mov
cltd
push
jnp
cmp
xor
mov
fdiv
dec
rcrl
lock
mov
test
daa
and
and
ret
std
cmp
pop
dec
and
decl
inc
jmp
stos
in
or
mov
loop
sti
and
adc
scas
xor
push
fsubrl
push
ret
nop
push
mov
push
cmp
and
sbb
mov
cmpsb
push
or
lods
dec
mov
mov
push
add
imul
push
or
add
je
push
fwait
rclb
mov
lcall
cmpsl
xor
jo
xor
dec
sahf
inc
scas
jmp
orl
push
imul
dec
das
movsb
mov
xchg
mov
jno
pop
mov
sbbl
sub
scas
jle
in
out
inc
inc
incb
cmp
xor
dec
mov
xor
dec
add
shll
aas
sbb
dec
and
fwait
lods
sub
and
or
btsl
cltd
adc
pop
dec
push
out
xchg
inc
stc
mov
loop
out
dec
data16
add
fdivrl
add
orl
std
in
testb
lds
shll
sub
dec
sub
lds
es
mov
fcoms
clc
dec
mov
ret
inc
xchg
int
add
testb
idiv
cmpsb
push
jle
sbbl
popf
mov
dec
pop
dec
js
test
or
xor
push
dec
in
jmp
dec
fadd
cmc
xor
pop
or
lods
jo
adc
sbb
xor
or
insl
jno
add
pushf
push
push
popa
pop
jmp
mov
dec
data16
dec
inc
dec
scas
clc
std
dec
pusha
or
jl
mov
inc
in
daa
repnz
push
dec
cmp
mov
rclb
sbb
xor
test
idiv
jg
dec
inc
push
stos
cltd
pop
ja
rclb
push
dec
xchg
sub
lds
cmp
loopne
test
and
ret
mov
dec
xchg
aas
sub
out
hlt
sahf
add
or
dec
jne
add
push
lock
sahf
push
mov
into
add
xor
xchg
into
adc
dec
movsl
or
addr16
lret
sbb
filds
jecxz
push
nop
cli
push
or
cmp
data16
into
into
xor
dec
ja
loopne
testb
dec
daa
pop
sub
test
sbb
int
mov
and
cmp
pop
pop
iret
or
sbb
xlat
fdivrs
pushf
into
sbb
dec
rcrb
xchg
sahf
inc
xor
mov
mov
dec
addl
add
push
mov
sbb
rol
lock
clc
andb
cs
xor
add
insb
push
pop
sub
lods
pop
add
xor
or
dec
nop
mov
xor
pop
jl
lret
xchg
outsl
stos
sbb
pop
enter
aam
mov
movsl
jp
pop
add
xchg
gs
rclb
clc
repz
push
aaa
lds
fldl
inc
mov
sub
dec
cli
pop
jecxz
pop
loop
ss
in
lds
sbb
cmp
cmp
adcb
dec
or
xor
dec
lock
mov
fadd
cmp
fnstcw
dec
add
mov
in
sbb
rolb
dec
mov
test
mov
or
pop
bound
cli
loope
xchg
dec
push
aad
ret
gs
shll
popa
lods
call
sti
sub
pop
es
ljmp
shrb
les
aas
add
cmp
into
sub
sub
pop
dec
push
cmp
icebp
dec
mov
pusha
jb
mov
pop
in
pop
fisubs
outsl
or
add
mov
pop
mov
mov
dec
ficomps
xor
or
dec
and
adc
outsb
sbb
addr16
pop
dec
popa
mov
push
notl
and
pop
loopne
dec
sub
jno
xchg
js
xchg
add
test
or
les
daa
es
add
xor
sti
pusha
jae
sub
adc
mov
neg
mov
and
cmpsl
push
out
arpl
mov
pop
inc
cmp
push
shlb
or
das
pop
adc
inc
mov
fstl
xor
imul
dec
inc
out
fiadds
in
mov
jmp
mov
pop
inc
insb
and
cwtl
leave
loope
jnp
cmp
or
mov
cmp
push
aad
mov
lock
imul
mov
or
push
xchg
dec
pop
loop
cmp
inc
inc
int3
inc
jae
sub
pop
int
push
sbb
das
sub
shll
out
cmpsl
outsl
repnz
add
pop
loopne
fidivs
das
sub
or
xor
mov
pop
daa
call
nop
or
stc
lods
fstpt
es
xchg
push
out
dec
cmp
ret
les
mov
xchg
mov
in
push
test
sub
xor
mov
decl
sub
dec
fistl
inc
inc
mov
mov
dec
mov
aam
and
loop
in
xlat
xchg
cmpsl
ja
dec
sbb
push
adc
sahf
sub
inc
in
ss
inc
aad
inc
sub
mov
insl
daa
adc
cmp
rol
adc
inc
leave
pop
int3
cmp
repz
loop
clc
sbb
jp
jle
out
and
out
jmp
xchg
cs
or
jnp
aas
sbb
jae
cli
dec
ljmp
pushf
cmp
rol
cmp
and
dec
cmp
imul
dec
fdivrs
pushf
outsb
jbe
outsb
ljmp
insb
or
inc
dec
int3
fs
test
popa
adc
sarb
jae
add
out
dec
xor
mov
dec
jb
pop
not
int3
inc
cmp
xor
stc
add
or
or
imul
in
iret
mov
push
aaa
insl
out
jno
fimuls
stos
dec
test
pop
jb
imul
nop
mov
and
je
xor
dec
sti
int3
add
out
call
push
fcoms
xchg
stc
push
imul
outsb
rcrb
inc
negb
loopne
dec
or
leave
hlt
ds
les
inc
sti
insb
mov
out
dec
pop
repnz
xchg
outsb
adc
jge
adc
imul
push
les
pushf
fstl
pop
pop
lock
aam
xchg
lock
call
addr16
inc
mov
sub
dec
push
std
fs
push
dec
sti
mov
stc
in
ja
mov
out
sub
cmp
dec
rcr
sbb
pop
inc
xchg
mov
sub
int
pop
xor
or
xchg
dec
outsb
jp
dec
cmp
pop
add
jg
stos
fmull
adc
int3
sbb
cmp
and
cmc
or
je
shrl
pop
andnps
rorb
xchg
xchg
orb
rorl
lahf
clc
mov
rclb
fmull
out
or
xor
icebp
cld
push
cmp
fildl
mov
hlt
jo
jp
mov
push
jle
cwtl
adcb
or
cmp
loope
sarl
insb
mov
xor
inc
dec
outsb
push
cmpsl
dec
mov
lret
subb
shrl
sbb
mov
mov
mov
pop
mov
jo
movsl
add
inc
sti
aad
dec
rcll
int
imul
rcrl
push
in
inc
add
push
mov
push
loope
mov
dec
cs
gs
and
dec
mov
jp
dec
mov
subb
lret
and
nop
pop
enter
fdivr
or
inc
ret
aas
sub
mov
cmpl
and
cmp
mov
add
fcmovnb
scas
jle
fdivrp
sub
sbb
dec
inc
dec
add
insb
mov
out
sbb
push
add
cmp
push
xchg
mov
sub
fdivrs
jo
sbb
das
dec
movsl
inc
testl
jb
cmpsl
mov
pop
popf
out
outsl
push
dec
xor
imul
adc
daa
icebp
add
jns
and
movsb
xchg
mov
dec
sarl
sbb
xchg
jp
or
mov
mov
or
adc
cli
and
pop
cmp
mov
jmp
lret
add
dec
nop
jo
and
rcr
sub
mov
inc
mov
daa
adc
pusha
arpl
adc
fcomip
out
aam
pop
shlb
jne
dec
test
pop
sub
cmp
in
in
mov
cmp
repnz
lcall
jle
dec
cmp
xchg
addb
andl
xor
cmp
adc
push
cs
ja
dec
scas
add
cwtl
push
sub
and
leavew
inc
imul
inc
idiv
xchg
jecxz
push
dec
bound
mov
dec
divb
aad
fistpll
xchg
dec
scas
jecxz
test
sub
stos
and
fists
push
inc
jmp
pusha
fsubrs
sahf
dec
sub
sub
push
push
adc
outsb
lahf
int3
dec
int
xor
or
js
dec
inc
jnp
dec
xchg
aaa
adc
inc
cmp
cltd
push
pop
movsb
mov
orb
or
dec
pop
test
mov
testb
rcrl
cmp
clc
sub
pop
mov
js
nop
cmp
cmp
xor
sbb
int
xchg
dec
pop
cmp
dec
das
adc
push
inc
out
loop
fstpl
dec
adc
cmpsl
cmp
push
cli
jbe
push
mov
repz
adc
fld
dec
fiaddl
add
dec
jmp
push
cmp
pop
cmc
and
adc
mov
mov
fisttpl
dec
push
and
dec
jnp
cmpsl
add
test
push
dec
sbb
sahf
mov
add
push
scas
int
inc
fisubs
shlb
mov
pop
push
xor
arpl
rorl
mov
sbb
pusha
adc
dec
das
loop
shl
dec
and
push
sub
jns
daa
dec
into
mov
dec
movsb
add
cmp
dec
lret
xor
xchg
insl
imul
mov
inc
std
fcmovne
push
out
pop
or
fisttpll
jb
imul
and
test
movsl
cmp
dec
pop
nop
cmpsl
mov
out
sbb
dec
mov
dec
xchg
test
inc
in
lock
sub
sbb
in
mov
stc
mov
mov
cmp
inc
fwait
std
push
test
xchg
lds
sub
test
arpl
mov
cmp
dec
ss
imul
les
out
add
sbb
push
and
inc
xchg
and
dec
cmp
dec
adc
dec
mov
jmp
jne
cmpsl
dec
inc
aas
pop
push
cwtl
xor
jg
pop
push
fabs
cmpsb
cmp
nopl
jne
dec
sbb
lock
fcompl
mov
in
cmpsl
sub
dec
jle
and
in
xor
inc
sub
add
out
add
imul
xor
imul
pop
xor
not
cmp
dec
dec
sub
push
fs
lods
adc
iret
or
adc
fisubl
push
dec
sbb
aas
orl
inc
or
ret
pushf
push
xchg
xchg
imul
dec
dec
xor
dec
sarl
lret
dec
cmp
popa
inc
mov
jo
sbb
fbld
jle
aad
push
test
or
stos
sahf
loop
push
scas
rorl
push
in
les
inc
push
in
fwait
sub
or
jne
cmp
mov
lret
jnp
leave
mov
dec
les
movl
repnz
icebp
ficoms
ljmp
dec
pushf
rorb
cwtl
xor
jp
xchg
dec
jno
bound
ds
movsb
in
nop
mov
das
rorb
divl
jle
dec
or
aam
jl
bound
into
stos
pop
mov
cmpsb
jae
and
mov
js
dec
fsubrs
mov
or
sub
dec
test
mov
mov
loope
sub
fdivrs
adc
stos
lret
scas
cltd
dec
sub
enter
xchg
jnp
bnd
stos
sbb
mov
sarl
xchg
and
mov
jbe
fmul
lds
imul
into
xchg
xchg
dec
xchg
insb
leave
mov
andl
jbe
int3
cld
pop
jmp
or
push
pop
shlb
or
xor
imul
inc
inc
pusha
or
fcomps
push
xor
das
dec
ficompl
repnz
call
icebp
ret
insb
jb
mov
es
sbb
pop
dec
lock
dec
lds
add
int3
dec
cmp
aaa
add
lahf
dec
adc
cld
mov
imul
movsl
dec
xlat
push
push
sub
or
jno
stc
lea
and
dec
pop
btr
add
mov
mov
enter
sarb
int3
mov
sti
lret
sahf
cmp
pop
sub
aas
sub
and
dec
movsb
popf
or
jae
repz
loope
push
daa
cwtl
mov
cmp
pop
test
add
in
pop
pop
push
scas
stc
push
js
rclb
xchg
sbb
xor
jmp
xor
daa
std
aad
dec
test
movsb
outsl
out
and
pop
push
insb
jge
mov
dec
test
mov
push
dec
lds
adc
int
sti
fisttpl
xchg
pop
add
dec
scas
mov
cli
adc
cmpsl
fsubrp
dec
divl
xor
mov
or
dec
or
test
bound
test
mov
cmp
push
and
test
xor
and
mov
push
dec
sbb
repnz
xor
push
mov
fdivs
shr
dec
xor
addb
inc
mov
jne
push
inc
dec
pop
mov
dec
test
sub
repnz
rorb
jle
lret
mov
add
fs
xchg
in
pop
dec
xlat
pop
xchg
fisubrl
jns
add
je
mov
dec
js
cli
out
sarl
dec
sbbl
cltd
inc
lahf
or
addr16
jecxz
mov
lods
dec
add
and
push
xchg
dec
dec
xchg
fwait
pop
notl
mov
fmul
scas
test
mov
iret
sub
push
mov
mov
sub
jne
div
cld
sbb
mov
jno
outsl
int
mov
movsl
cmp
mov
push
loope
mov
fdivrs
dec
dec
sub
xchg
dec
dec
lret
mov
jns
or
add
push
dec
insl
sbbl
sahf
push
lcall
push
aad
adc
dec
js
pop
sbb
dec
mov
inc
popf
push
roll
fimull
mov
dec
xor
outsb
fnstenv
add
push
push
jl
aas
cli
or
cmp
pop
iret
cmpsl
sbb
in
or
push
dec
xchg
outsl
push
xor
mov
xchg
movsb
fstps
dec
inc
mov
pop
dec
call
push
add
leave
dec
clc
popa
in
sbb
dec
and
cmp
cltd
test
jne
dec
push
or
and
push
test
inc
scas
int3
dec
insl
push
inc
pusha
rolb
mov
xor
sbbb
ds
ljmp
aam
bound
cld
xor
fidivl
push
dec
hlt
or
loopne
sbb
cmp
scas
jmp
fdivl
out
push
pop
pop
jno
sub
cmp
dec
or
push
dec
sahf
mov
and
in
testl
jl
les
or
lods
cmp
ss
add
out
adc
adc
int
fcmovu
pop
jmp
repz
ss
and
dec
loope
xchg
out
dec
ljmp
cmp
or
add
lcall
or
push
repnz
in
out
es
mov
stos
cmc
dec
mov
jp
enter
popf
push
dec
fildl
jmp
rorl
cltd
jns
clc
shlb
test
add
and
sub
pop
xlat
mov
jo
cmc
sub
test
call
push
orb
jo
mov
jns
incb
sub
push
cmp
xchg
in
mov
lret
jmp
xor
aas
addr16
add
xchg
add
ja
dec
rorl
add
enter
jnp
ffreep
inc
subl
xor
and
adc
out
fcom
dec
mov
aaa
inc
mov
and
notb
pushf
fmull
mov
dec
loop
testl
imul
sbb
stos
addl
decb
test
xchg
imul
push
repz
rcrb
call
cmp
sub
add
and
scas
sbb
pcmpgtw
repz
push
push
int
fsubrp
dec
mov
add
mov
jne
movaps
sbb
xchg
sbb
cmp
push
mov
movsl
loop
mov
jg,pn
leave
pushf
dec
pop
clc
es
push
xor
push
inc
enter
cmp
int
dec
sti
and
push
cltd
dec
push
sub
add
jae
in
dec
sbb
loope
mov
or
test
insb
fdivr
pop
and
sbbl
out
pop
in
pushf
mov
cmp
dec
sub
addr16
lods
pop
loopne
push
xor
lds
inc
dec
loop
in
imul
fdivrl
arpl
fidivrl
js
dec
cmpsb
inc
sbb
ret
cmp
dec
fistpll
addr16
fisttpl
mov
movsl
rclb
into
es
ret
into
pop
jge
dec
lds
and
jecxz
jmp
dec
rolb
pop
dec
fcmove
add
mov
in
adc
dec
sub
push
repz
inc
stos
and
xchg
dec
call
movsl
je
dec
mov
cmpsl
cwtl
pop
repz
call
pop
mov
xor
jno
lret
push
stos
dec
rcr
ja
dec
pop
leave
sbb
push
out
lahf
xchg
add
insb
dec
mov
inc
cmp
divl
add
mov
dec
jne
xchg
push
or
and
jae
dec
jae
pop
dec
stos
push
mov
dec
popa
dec
jo,pt
sbb
mov
cmp
jp
lcall
adc
adc
pop
stos
cwtl
dec
rolb
add
fwait
or
cmp
mov
xchg
idivl
rcr
ja
ret
inc
loopne
into
lret
rep
sbb
dec
mov
and
xchg
mov
push
mov
int
cmp
ss
inc
mov
fsubr
fdiv
test
adc
mov
in
mov
fdivr
dec
pop
mov
aaa
inc
into
shll
and
clc
orl
rorl
mov
pushf
xor
adc
mov
push
xchg
leave
int
sbb
bound
push
std
movlhps
jb
popf
dec
and
andb
testb
iret
jge
mov
test
add
fucomp
cmpsl
test
scas
jns
lcall
ret
push
dec
add
aas
dec
xor
dec
movsb
inc
inc
mov
xor
jle
fsubl
pop
test
push
dec
cld
rol
dec
pop
mov
jp
or
add
sbb
xor
dec
lret
movsl
mov
mov
jo
arpl
idivb
data16
in
jns
sub
mov
mov
rorb
push
mov
sub
sarl
push
inc
jbe
sub
jno
add
fdivrl
dec
mov
pop
rorl
std
test
dec
push
xchg
mov
daa
push
inc
xchg
xor
lret
mov
cwtl
call
xchg
test
insb
dec
mulb
mov
fists
push
push
xchg
push
fnstsw
clc
ret
cmpsl
sbb
out
add
ja
ds
jb
sub
add
movsl
loope
mov
cmpsb
shlb
lret
bound
push
rcll
jp
loop
inc
sahf
fs
fdivp
pushf
rcll
push
mov
cltd
dec
imul
in
das
cmp
push
adc
sub
test
int
add
adc
dec
adc
push
ficomps
icebp
lcall
lods
negl
inc
add
and
fldl
loop
loope
mov
dec
xorl
xchg
popa
mov
jmp
cli
lahf
decl
jl
mov
sub
mov
fwait
out
test
clc
and
dec
shll
incl
xor
das
cld
loope
cmpsb
dec
ss
fimuls
in
jae
in
pop
addr16
hlt
xorb
mov
enter
mov
cmp
cmpsl
pop
add
es
rorb
andl
rcrb
gs
dec
lods
insb
push
jle
sub
jo
icebp
aas
inc
out
inc
add
aam
add
xchg
dec
popf
jae
adc
je
dec
xlat
repz
push
loopne
mov
dec
jo
mov
xor
div
add
cli
sub
test
dec
jg
mov
sub
in
add
inc
xor
mov
cmc
xlat
cmp
push
add
aas
mov
clc
inc
stos
xor
dec
xor
shr
adc
sbb
out
aas
jo
pop
lods
dec
xchg
pusha
dec
mov
adc
icebp
sub
js
stc
fstpl
pop
add
out
std
dec
mov
mov
or
mov
dec
stos
pmulhuw
jle
fidivl
or
mov
scas
ds
dec
outsb
scas
dec
bound
adc
xchg
rcll
je
jns
mov
enter
add
addl
in
sbb
js
int
stos
xchg
loopne
insb
in
movsb
mov
out
mov
mov
jge
or
push
aas
dec
sub
inc
adc
sbb
jmp
enter
in
ljmp
mov
push
movsb
lret
dec
xchg
in
cmc
mov
xor
xor
push
cmp
add
aas
repz
dec
rorb
je
into
imul
movsl
fsts
pop
push
test
mov
dec
mov
daa
dec
clc
add
or
sub
cmpsb
ficoml
insb
lret
push
testl
daa
jns
pop
test
movsl
mov
test
mov
xor
dec
add
arpl
aam
sbb
popl
dec
popl
lret
sbb
inc
sub
pop
addl
add
adc
dec
mov
in
adc
aam
dec
call
stos
xchg
movsl
dec
arpl
and
sbb
in
push
sbbb
cmp
or
push
popa
mov
movsl
push
mov
jl
inc
xchg
cmc
insl
je
ret
fistl
push
rolb
add
fwait
mov
jnp
push
mov
fstl
nop
stc
lock
dec
jmp
test
fimull
xchg
mov
sub
ret
int
dec
xor
movsb
andb
sahf
das
into
insl
fbstp
out
push
cmc
frstor
push
cmpsb
fists
mov
sbb
xchg
dec
inc
jl
add
push
stos
test
push
xchg
pop
pop
cmp
adc
sahf
addr16
jns
insl
test
imul
inc
jb
mov
aas
sub
ret
cmp
cmpsb
test
sbb
add
sti
xchg
pop
xchg
adc
scas
dec
dec
jns
push
xchg
aam
dec
and
out
es
mov
shl
shrb
lea
xchg
je
mov
jo
scas
stos
adc
stos
cmp
lret
outsb
sub
lods
push
mov
add
add
push
aas
dec
sub
push
push
xor
dec
pop
cmp
arpl
hlt
lret
dec
adc
data16
out
pop
enter
jl
dec
jo
lock
mov
flds
pop
dec
push
xor
add
dec
cmpsb
mov
lock
fdiv
mov
mov
lcall
xor
cltd
sbb
add
inc
mov
xchg
pusha
loop
gs
mov
push
push
inc
in
and
inc
dec
dec
fucom
push
inc
dec
push
cmp
js
mov
inc
xor
adc
das
jae
lods
push
dec
and
mov
idiv
xchg
shrb
dec
mov
faddl
ss
add
dec
lds
shl
sbb
mov
sbb
into
lods
imul
or
fcomi
repnz
and
std
adc
data16
add
out
dec
pop
imul
inc
fdivs
or
and
gs
mov
pop
popf
movsl
sub
pop
outsl
outsl
jo
lods
dec
xchg
fwait
aaa
jl
or
mov
sub
inc
sarb
movlhps
and
inc
inc
pop
jns
cs
mov
outsl
mov
lcall
adc
jo
adc
pop
dec
mov
addb
or
mov
add
inc
pop
mov
add
cmp
ds
jnp
push
or
jb
dec
cmpsb
dec
popf
jl
insb
sub
dec
jne
ja
mov
jle
aam
scas
mov
or
sub
out
sub
aaa
in
dec
jnp
stos
sbb
or
out
dec
loopne
ja
mov
dec
and
outsl
pop
dec
addr16
inc
stos
cmp
pop
enter
mov
jo
mov
in
fists
pop
jno
aaa
insl
fstl
xchg
sub
out
loopne
pop
aaa
cmp
ret
pusha
jae
in
ret
xchg
sarb
enter
rclb
repz
into
ljmp
shrb
pop
sub
insb
jno
not
iret
or
ja
sub
jp
shlb
enter
imul
negl
add
dec
jno
push
sub
push
loop
xchg
mov
pop
xor
jg
orl
stos
or
inc
pop
pop
cs
nopl
out
push
cmp
xchg
push
jge
je
outsb
pusha
into
scas
enter
cmpsb
mov
shr
ds
cmp
dec
mov
les
and
popf
jecxz
dec
add
add
xchg
cld
and
dec
adc
pop
mov
cmpsb
leave
movsb
in
pop
and
repnz
call
test
sbb
lods
das
insb
jo
aad
int3
mov
into
jnp
fisubrs
shl
ja
jp
xor
xchg
out
insl
jbe
sarl
cmp
aas
andb
movsl
sbbl
jecxz
mov
sub
dec
jno
mov
test
pop
xor
in
adc
xchg
les
sti
pop
dec
jmp
std
dec
dec
mov
arpl
pop
xchg
mov
aaa
adc
lahf
dec
mov
popf
cwtl
sti
jp,pn
dec
insl
dec
outsb
cmp
mov
add
push
mov
add
sub
inc
adc
lods
xor
push
mov
dec
call
add
sub
iret
mov
pop
clc
mov
stc
int
xchg
dec
dec
imul
inc
dec
int3
push
or
xor
addr16
ds
bound
mov
push
or
inc
mov
orb
out
sub
add
or
push
or
sbb
dec
xor
cbtw
add
cmpb
shl
dec
mov
mov
and
test
dec
mov
ret
pop
xor
out
dec
add
add
scas
dec
lods
dec
icebp
sar
ds
fisttpll
inc
arpl
dec
adcb
mov
sub
mov
jbe
int
pop
pop
popa
push
int
fs
dec
lea
adc
mov
pop
dec
xchg
cltd
mull
mov
push
inc
ret
dec
call
dec
adc
fisubl
dec
and
lret
mov
mov
pop
dec
push
push
aad
scas
sahf
push
mov
and
push
sbb
mov
lcall
inc
scas
in
lret
std
rcll
outsl
jle
sbb
out
outsb
xchg
ficompl
dec
lock
loop
mov
add
idiv
inc
xchg
stos
inc
sub
jnp
mov
lcall
cmp
push
sti
and
icebp
inc
dec
insb
pop
cwtl
inc
mov
inc
iret
or
aam
sbb
notl
dec
mov
dec
dec
jl
ret
add
sbb
mov
dec
or
je
cwtl
jnp
mov
ss
in
iret
jmp
and
js
push
inc
sub
mov
dec
ja
adc
aaa
mov
in
cmc
push
xor
repz
dec
fistpll
cs
adc
push
pop
pop
cld
adc
setge
dec
test
add
lret
loope
sbb
xor
xchg
inc
push
add
pop
nop
dec
scas
inc
pop
pop
lds
scas
sbb
add
mov
jle
inc
ja
mov
jb
pop
xchg
pusha
xor
add
sbb
enter
ss
out
xor
dec
xor
dec
fistl
xor
jno
mov
dec
outsl
mov
daa
addr16
clc
push
insl
adc
lahf
sbb
neg
push
out
pop
dec
and
mov
add
sub
mov
xor
jl
test
mov
ds
lcall
adc
scas
ficompl
or
push
lock
call
cmp
inc
ffree
imul
insl
test
cmp
push
popf
icebp
int
push
sarb
dec
and
mov
das
scas
mov
repz
insb
cwtl
jo
mov
push
sti
adc
lret
xchg
outsl
dec
xchg
xchg
divl
ljmp
jp
push
inc
pop
xchg
shll
dec
or
fldcw
xor
cli
repnz
add
dec
fs
jmp
push
jp
fisttpll
xor
mov
clc
mov
dec
mov
les
sbb
dec
in
rclb
dec
aas
lds
sub
push
push
xor
jae
int
mov
cmp
in
push
fcoms
pop
jmp
mov
in
ficompl
jle
imul
mov
mov
inc
xor
sub
mov
je
dec
dec
orb
dec
inc
out
cmp
push
addl
inc
int
repz
or
in
mov
cmp
jl
mov
jp
ljmp
sbb
or
dec
cmp
rorb
adc
ljmp
push
js
das
imul
jl
jmp
setl
mov
fucomp
insb
loopne
xor
xlat
pop
out
cmc
icebp
call
sub
sbb
cmp
pop
std
ja
imul
sub
sub
test
sub
js
add
pop
stos
or
push
mov
mov
jae
decl
mov
xor
mov
out
add
test
repnz
mov
cmc
ja
inc
mov
dec
inc
jg
cwtl
dec
mov
dec
fcmove
stos
or
out
inc
push
and
sbb
or
test
mov
mov
pop
insb
mov
cmp
mov
push
pop
xor
mov
outsb
ds
dec
iret
xor
imul
dec
lret
scas
jno
push
or
mov
pop
leave
add
mov
sbb
stc
push
mov
fwait
jmp
push
xor
and
into
testl
out
adc
dec
stos
call
jo
push
jp
ja
stos
repnz
mov
mov
pop
pop
shlb
enter
aaa
dec
jnp
insl
movsb
adc
xchg
pop
sub
cld
aam
xor
clc
jne
dec
mov
dec
mov
pop
mov
pop
filds
sar
inc
xor
dec
push
sub
lods
jg
out
xlat
xor
int
leave
bound
dec
xchg
dec
fsts
pop
iret
and
inc
mov
jp
jns
ljmp
cli
dec
jb
fimuls
pop
in
mull
loope
jl
ret
or
aad
xchg
push
repz
push
sahf
cmp
jg,pt
xorl
js
addr16
pop
adc
lcall
call
repz
je
or
push
aas
mov
ror
pop
adc
xor
xor
sbbb
fs
adc
adc
xchg
xchg
mov
out
dec
lcall
cmp
push
lahf
stos
cwtl
out
sub
ret
adc
not
out
and
cld
addr16
movsb
xchg
and
sbb
pop
dec
cmpsl
or
movsl
test
cli
or
rcl
das
mov
xchg
cmc
push
add
jno
or
mov
shlb
pop
mov
add
push
push
inc
xlat
dec
cmpsb
push
mov
pop
xchg
dec
test
aad
shl
mov
fs
push
jne
dec
das
hlt
into
push
sub
std
imul
sbb
test
pop
ja
stos
ret
push
cmp
repnz
jno
xchg
fwait
cmp
int
aad
xchg
dec
andb
out
xor
out
push
jae
movsl
lahf
int
iret
mov
ret
jl
scas
in
rcrl
adc
mov
jne,pn
adc
cmp
xor
mov
rol
dec
mov
mov
xchg
inc
mov
in
dec
scas
dec
add
mov
dec
imul
sbb
jo
mov
cmp
loop
cmc
in
je
xchg
dec
adc
out
ja
insb
cmp
push
cmpsl
into
shrb
mov
movb
xchg
and
jne
es
popa
mov
das
xchg
dec
mov
test
icebp
jbe
sti
lea
fsts
fcompl
add
dec
lods
inc
fwait
mov
sarb
add
in
test
sbb
orb
mov
es
mov
jmp
or
adc
mov
dec
sar
xchg
test
lock
dec
mull
push
rcl
cmp
inc
mov
inc
shlb
je
pop
dec
xchg
shlb
ud2
arpl
dec
leave
mov
jecxz
and
cmpsl
scas
mov
or
xor
or
int3
xor
dec
jmp
adc
push
cmpsl
mov
jl
iret
imul
mov
dec
repnz
and
lret
cmp
fdivs
sub
push
mov
daa
xor
lds
inc
jp
mov
iret
cmp
add
popf
sahf
dec
movsb
xchg
push
inc
int3
into
call
cli
dec
ret
pop
cmp
das
or
out
mov
imul
test
pop
lds
add
les
push
sub
inc
jl
std
adc
pushf
sbb
pop
pop
pop
lock
push
xchg
push
sbb
push
stos
pop
clc
inc
xchg
das
test
sbb
or
stos
ret
aas
sub
dec
cwtl
js
sub
pusha
testl
movsl
mov
adc
jg
loopne
and
lock
test
push
enter
lds
call
dec
mov
mov
and
imul
xchg
cmpsl
mov
pop
outsb
xchg
push
push
cmc
push
repnz
sbbl
lds
fwait
inc
inc
add
dec
jae
mov
mov
dec
push
test
ljmp
les
int3
lods
mov
mov
inc
nop
jo
movsb
sbb
addr16
pop
mul
jmp
cmc
xor
add
test
sub
adc
loope
mov
mov
and
ret
rcll
stc
shrb
mov
insb
dec
shll
inc
fwait
je
sbb
bound
sbb
dec
inc
push
pmaddwd
jo
daa
push
rclb
dec
aaa
jbe
jge
fwait
pop
pop
add
clc
pusha
ja
iret
mov
lret
push
xor
ds
dec
icebp
adc
push
rorl
mov
inc
stos
iret
dec
jb
divb
push
add
addr16
loop
add
movsb
ret
mull
xor
in
or
aaa
push
mov
and
xor
push
push
aam
je
aad
cli
inc
sub
xor
in
dec
fistl
sub
fistpll
stos
rclb
xchg
mov
dec
rol
or
imul
inc
test
sub
dec
cmp
jnp
lds
dec
movsb
xchg
in
push
inc
xor
or
cmp
rorl
test
mov
adc
or
dec
cmc
hlt
pop
jmp
loopne
dec
ret
in
mov
pop
sbb
fxtract
xor
dec
sub
mov
roll
jle
adc
jl
jae
fwait
push
lods
push
je
addr16
repz
adc
dec
xchg
and
scas
filds
xor
or
scas
cmc
cmp
sub
xlat
in
aas
cmp
sub
cmp
or
sar
shll
call
cmovg
mov
imul
inc
call
test
cmp
add
inc
loopne
sub
das
imul
outsb
xchg
enter
gs
inc
add
dec
fiaddl
mov
inc
mov
dec
push
cmc
mov
cmpb
inc
mov
divb
jecxz
repz
fsubrs
inc
adc
outsb
mov
mov
pop
mov
or
dec
sub
mov
outsb
dec
or
cmp
enter
dec
mov
notb
in
jne
int3
enter
cs
push
inc
rolb
xor
jnp
dec
ret
push
xchg
insl
mov
ja
or
sbb
stc
cmovbe
sub
fidivl
sbb
push
jp
or
and
dec
mov
movsl
sub
fiadds
inc
jp
and
mov
adc
sbb
repnz
fisubs
daa
arpl
jne
mov
rorb
leave
sub
push
or
jecxz
inc
cmp
pop
jo
js
dec
sti
mov
pop
cmpsl
xchg
dec
movsl
xchg
aam
mov
sahf
dec
lods
ds
or
cmp
inc
clc
cmp
jmp
stos
and
push
mov
cmp
jecxz
test
bound
mov
sub
push
sbb
dec
xchg
or
andb
xor
dec
test
mov
mov
or
je
and
dec
mov
adc
and
mov
lods
pop
jbe
xchg
arpl
mov
dec
fisubs
fidivs
mov
jne
add
mov
dec
xor
lahf
scas
out
push
lea
xchg
lock
mov
int3
push
les
xor
inc
cmp
sub
and
inc
push
inc
jmp
cs
xlat
ja
mov
loope
mov
scas
repz
dec
push
lods
cmc
adc
into
push
lret
add
xor
xor
loope
dec
cltd
mov
shlb
es
xchg
aam
add
pop
dec
sub
ficoms
mov
lea
mov
xor
mov
inc
ljmp
mov
pop
xlat
stos
ret
cld
cwtl
jle
ja
xchg
mov
dec
outsb
jo
push
pusha
push
mov
jae
push
dec
in
mov
daa
sbb
inc
dec
cld
cmpsl
dec
ss
loop
pushf
dec
xor
idivl
jb
mov
in
xorb
subl
push
xchg
cmp
adc
xor
push
mov
mov
dec
inc
xor
dec
dec
bnd
out
cwtl
loopne
out
sbb
mov
add
dec
in
lahf
mov
jo
subb
xor
int3
es
mov
sub
inc
cmp
cmpsl
sub
dec
bndstx
push
rcrb
adc
imull
add
ljmp
mov
mov
lret
cwtl
std
push
pop
mov
insl
stc
mov
test
xchg
popf
dec
pop
fwait
xchg
movsl
in
jne
sbb
inc
lods
or
ja
adc
push
ret
xchg
sbb
movsb
cmp
and
cmp
inc
add
insl
dec
lods
mov
adc
movsb
jmp
cmp
sub
popf
and
repnz
mov
je
xchg
mov
cmc
mov
cmp
pop
or
sar
mov
pusha
sbb
sub
cmpsl
adc
cmpsb
into
dec
xchg
popa
pusha
test
pop
jno
dec
out
pop
out
dec
imul
scas
sbb
cmc
fs
sbb
dec
ret
andb
mov
dec
repnz
xchg
ret
adc
adc
sahf
cmp
jg
cmp
push
rorl
stos
pop
fsubrl
insb
es
in
cltd
add
dec
and
or
icebp
pop
sub
jne
adc
push
xchg
mov
cmp
jbe
mov
mov
cmp
dec
ret
add
and
int3
mov
mov
aas
test
mov
cmp
test
pop
or
and
pop
jno
cld
jl
push
sbb
or
mov
ljmp
in
xchg
dec
mov
pop
mulb
dec
scas
xchg
sbb
xchg
dec
rcrb
imul
dec
ret
movsb
les
mov
fwait
daa
dec
or
imul
scas
jle
in
add
das
out
aaa
dec
push
xor
sbb
jbe
addr16
stc
jecxz
and
fildll
push
dec
lds
xor
into
ret
cmp
out
mov
sbb
cmp
mov
pop
adc
mov
stc
int
pop
dec
xchg
daa
and
or
rcr
mov
xchg
stc
mov
rcr
test
sub
shll
out
xchg
and
push
push
aaa
lret
sub
loopne
xor
adc
mov
lret
mov
cmp
or
into
int3
adcl
stos
pop
mov
dec
dec
dec
inc
xor
adc
lea
pop
aaa
inc
sarb
add
dec
out
ss
enter
scas
lret
jne
dec
cmp
insb
mov
rclb
incb
sub
test
imul
test
adc
nop
std
arpl
xlat
data16
xchg
inc
repnz
cmp
dec
icebp
popf
cld
mov
push
or
mov
mov
gs
sbb
mov
jle
fimull
xorl
outsb
adc
cmc
jmp
insl
ds
push
popf
inc
jno
mov
cmp
sub
mov
push
xchg
mov
xor
popa
cmp
sbb
lds
test
push
pop
adc
jb
push
cmp
fisubrl
or
data16
push
loopne
push
add
inc
fcoml
es
and
xchg
jnp
cmp
and
dec
cmp
dec
pop
in
jl
xchg
pop
xlat
mov
hlt
push
jo
shll
xor
mov
dec
or
add
cwtl
outsb
sub
mov
sbb
pop
lcall
test
pop
repz
cmp
fisttpl
push
sbb
jl
ljmp
xchg
js
insl
dec
jg
iret
repz
dec
and
lahf
mov
and
in
test
lret
dec
dec
cmp
test
enter
jle
dec
dec
leave
mov
mov
mov
test
jp
repz
shl
icebp
daa
add
sbb
popf
xchg
aas
pop
dec
dec
jecxz
xchg
insl
int3
cmpsb
push
imul
fs
imul
adc
call
mov
clc
dec
or
dec
outsb
pop
add
ja
and
rorb
das
cmp
js
movsb
add
addr16
stos
lcall
push
mov
jne
loop
jecxz
push
inc
scas
xchg
dec
pop
bswap
ljmp
cmp
neg
sub
into
in
cmp
and
in
mov
jns
inc
aam
push
sbb
lret
fisttpll
sbb
jg
test
in
mov
mov
lds
inc
and
int3
and
xor
rorb
daa
add
cwtl
mov
movsb
pop
mov
xchg
jo
popf
jnp
dec
lea
mov
insb
jnp
adc
pop
and
mov
jge
insb
adc
and
dec
push
xchg
jecxz
popf
pusha
cmp
addr16
pop
dec
aad
lret
ret
jmp
ja
jb
push
pusha
mov
loopne
loope
rcrb
dec
xor
pushf
push
mov
cmp
mov
leave
out
dec
testl
cmp
sbb
dec
enter
je
cmp
stc
insb
xor
data16
mov
xchg
imul
cwtl
mov
inc
das
and
pop
je
sbb
dec
inc
dec
pop
test
pop
dec
dec
out
mov
icebp
xchg
testl
lods
mov
stc
mov
iret
pop
sti
pop
ljmp
push
incl
xchg
test
fimuls
mov
mov
in
lock
dec
mov
xlat
mov
adc
add
clc
out
pop
sbb
dec
shlb
ja
pop
adc
dec
cs
fisttpl
imul
pusha
cmp
pop
ret
mov
daa
test
repz
aam
pop
jae
sbb
adc
pop
loope
mov
aad
mov
dec
or
shlb
mov
std
dec
shl
fcmovnu
aaa
fists
dec
mov
and
fimull
pop
adc
loope
outsb
cld
clc
dec
dec
stc
shlb
sub
mov
mov
movsb
xchg
fsubl
call
jns
addl
inc
dec
sbb
lods
div
out
out
adc
rcrb
dec
pop
dec
adc
mov
xor
fadds
mov
sbb
daa
add
cmp
ficoml
mov
fxam
mov
cmc
imul
mov
cmp
mov
adc
cli
inc
lret
adc
orl
das
icebp
xchg
jne
clc
jl
sahf
add
sbb
shr
cmovle
mov
scas
xor
lods
sub
or
sbb
mov
ds
aaa
scas
push
cmp
dec
pop
adc
mov
cwtl
sarl
adc
repnz
and
push
mov
and
and
cltd
push
push
xchg
jb
outsl
out
jecxz
dec
and
sub
mov
lahf
adc
adc
push
jbe
out
aad
repnz
data16
test
incb
xor
cltd
pop
mov
aas
xchg
test
push
inc
pop
sti
xchg
jmp
das
mov
popa
aas
sub
orl
and
ja
and
sbb
pop
mov
call
sub
or
dec
aam
pushf
add
dec
sub
popf
dec
add
iretw
inc
shll
push
jle
imul
shlb
or
stos
inc
insb
push
test
sbb
adc
dec
push
xchg
mov
push
cmpsl
cmp
scas
mov
aam
sahf
pop
mov
dec
push
sbb
dec
push
mov
addps
into
sub
pop
adc
andb
test
ret
pop
es
pop
loopne
dec
sbb
and
xlat
jbe
ficomps
adc
lods
int
loop
and
pop
scas
lcall
cmpsb
repz
adc
lock
lret
mov
inc
push
inc
adc
insl
movsb
pop
sub
cmp
mov
or
in
xchg
adc
iret
add
inc
aaa
sub
lret
shll
push
pop
cmp
mov
cmpsb
sbb
mov
hlt
push
in
lods
dec
mov
pop
add
insl
add
scas
dec
push
ficompl
and
dec
call
or
ret
dec
daa
test
xor
mov
fcomi
out
aad
and
cmp
inc
call
sete
dec
out
mov
xchg
dec
or
xchg
loope
mov
movsl
leave
push
dec
and
test
dec
lods
aaa
lock
clc
adc
into
insb
je
sub
shlb
lock
shlb
test
dec
arpl
data16
in
fisttps
ja
shll
ret
insl
jecxz
out
inc
push
fdecstp
cwtl
push
and
mov
mov
clc
mov
ret
lods
sbb
sub
sbb
jge
dec
sbb
mull
fsubr
dec
ret
adc
push
cld
dec
mov
xchg
out
sbb
push
cwtl
xor
mov
xchg
scas
xchg
dec
dec
push
add
xchg
and
stos
mov
push
push
fsubl
loop
fimuls
cs
cmp
hlt
cmp
popa
adc
pop
imul
sub
xchg
js
test
mov
fdiv
push
jbe
xlat
push
xchg
test
adc
dec
mov
mulb
dec
out
mov
dec
push
test
scas
push
dec
insb
mov
stc
jo
add
xor
mov
testb
cmp
aad
je
adc
jb
jno
ret
dec
lods
xchg
and
and
adc
adc
mov
add
mov
and
mov
je
ret
lret
shl
sahf
dec
jg
dec
xchg
ja
dec
mov
add
in
dec
jmp
jo
popa
push
out
inc
data16
inc
dec
and
jno
push
mov
imul
push
sarb
lret
inc
sbb
addb
pop
xor
mov
xor
sbb
mov
test
repnz
jecxz
mov
add
dec
pop
sub
pop
lret
inc
dec
dec
fldl
out
cmp
and
add
lea
scas
dec
repnz
ret
jle
fmuls
dec
jg
enter
movsl
and
stos
jo
dec
loope
and
movsb
mov
mov
fdivrs
lock
inc
xor
pop
cli
pusha
and
xchg
dec
fldt
mov
and
dec
pop
cwtl
fnsave
lods
inc
int
sub
xlat
fwait
adc
inc
cmp
dec
shll
lods
jno
dec
fwait
adc
mov
jne
cmpsb
jae
jb
xchg
out
mov
ds
in
cmp
jo
add
adc
push
ds
inc
pop
cmpsl
js
js
daa
jle
pop
xor
jne
inc
cs
inc
ret
mov
outsb
loop
ds
cld
and
pop
dec
sub
dec
scas
mov
sarl
cmp
or
cmpsl
dec
incb
mov
ds
mov
add
shlb
insb
dec
mov
sub
dec
daa
mov
bound
xchg
stos
fisttps
scas
shr
call
jl
mov
in
cmp
outsb
push
mov
scas
fmull
fcmove
add
cmp
cli
or
dec
xchg
mov
adc
mov
int
sub
fidivrs
gs
mov
je
xchg
inc
pop
repnz
mov
pop
xchg
adc
in
imul
xchg
dec
pop
divb
dec
push
ds
lret
push
lds
fwait
push
scas
pop
mov
pop
push
lods
mov
jl
ret
inc
pop
aaa
pop
xchg
mov
mov
inc
daa
sub
mov
adc
mov
out
or
test
push
loope
add
cmp
adc
sti
insb
pop
inc
and
dec
adcl
je
add
adc
and
aam
into
cmp
lcall
addb
dec
leave
pop
pusha
or
cmc
lcall
or
jg
fwait
mov
dec
das
sbb
in
ss
dec
and
inc
jo
mov
xchg
dec
inc
clc
mov
sbb
xor
cltd
imul
fwait
cli
popf
push
add
mov
inc
movsl
mov
dec
lret
out
sub
loopne
jmp
mov
les
jns
sub
outsl
fidivrl
push
mov
dec
stos
popf
repnz
repz
sahf
dec
jl
jne
cmc
outsb
add
dec
cmp
or
dec
sub
jp
inc
lcall
push
fwait
mov
aad
mov
add
sti
cmpsb
pop
dec
add
mov
cmp
inc
test
push
dec
mov
movsb
lods
xor
jge
adc
in
mov
dec
push
jg
pop
rcrl
gs
push
mov
dec
cmp
add
sbb
push
pop
xchg
enter
cmovle
mov
jg
and
cli
push
mov
inc
scas
push
xchg
dec
icebp
push
mov
pop
push
enter
or
lret
movsl
scas
dec
xchg
pop
sub
ss
jnp
in
xchg
mov
les
fsubrs
jl
adc
mov
nop
pop
mov
mov
dec
inc
jmp
add
mov
rcll
cmpsb
cmpsl
adcb
shlb
mov
xchg
rclb
mov
ljmp
mov
insb
lcall
push
jge
repz
push
add
push
test
cwtl
jo
push
dec
pop
adc
mov
mov
xchg
daa
pop
repnz
adc
push
jne
dec
ss
imul
test
scas
cltd
dec
sub
je
and
xor
mov
mov
rorl
mov
arpl
enter
dec
ficoml
mov
cwtl
dec
mov
sub
fcompl
fcmovne
lock
mov
xchg
mov
cmp
add
mov
inc
call
stos
push
adc
push
mov
scas
jns
in
fnstsw
mov
xchg
dec
push
xor
pop
ja
xchg
testl
xchg
scas
gs
js
stos
xor
es
scas
pop
sbb
shl
jmp
incb
mov
jnp
inc
sub
je
js
bound
into
pusha
sarl
aaa
jle
or
xor
pop
xchg
mov
fst
pushf
push
xor
jns
mov
push
xchg
jno
shll
dec
add
cmp
push
out
dec
lds
xchg
dec
enter
mov
jmp
sbb
pushf
mov
add
fs
dec
sahf
les
dec
mov
cmp
push
dec
inc
jecxz
mov
mov
popa
dec
push
rol
scas
dec
ss
mov
dec
loope
in
sti
repnz
dec
insb
mov
mov
dec
dec
mov
into
sub
mov
pop
or
ret
in
or
out
lds
sub
xchg
ds
jle
aad
sbb
push
ljmp
call
push
aad
ss
inc
dec
ds
pop
adc
dec
add
push
int
adc
cs
imull
sbb
mov
arpl
aam
hlt
shrb
sub
jl
out
dec
hlt
cwtl
pop
cmc
test
and
or
lret
imul
and
dec
scas
cli
inc
les
test
in
sub
inc
inc
lret
ss
out
dec
lret
imul
push
addr16
sbb
popa
mov
fdivp
pop
daa
enter
fcoms
out
sbb
mov
jle
loope
mov
push
inc
fdivs
cmp
rorb
jae
cld
lock
ret
cmc
mov
int
cmp
mov
stos
inc
or
inc
fdivrs
sub
xchg
movsb
sarb
xchg
iret
adc
fmull
fs
sbb
mov
scas
pop
insl
or
mov
mov
xor
push
inc
mov
dec
pop
cld
sti
push
bound
pop
aam
lcall
cmpsb
dec
add
es
fnstenv
dec
and
cli
loopne
test
dec
pop
in
cmp
inc
fwait
call
add
inc
dec
test
xor
cwtl
je
xchg
jmp
daa
push
inc
adc
dec
mov
sbbb
pop
aas
pop
repz
jp
rorl
bound
aaa
dec
xchg
in
ret
xor
sbb
xor
sbb
shlb
cmp
mov
imul
or
push
inc
out
test
add
pop
loop
das
inc
sbb
mov
pop
pop
and
rdmsr
int
dec
imul
dec
mov
or
sub
popa
inc
xchg
call
loopne
out
daa
jg
push
imul
jne
pop
dec
lods
sub
pop
push
fcomp
sub
mov
sbb
jmp
sub
out
cmp
mov
mov
fnstsw
aad
adcb
cmp
sub
push
aam
dec
fnsave
jge
out
call
in
jnp
ljmp
mov
dec
jmp
and
mov
sbb
cmpsl
dec
sbb
sbb
es
dec
or
lret
xlat
jo
sbb
and
lcall
sbb
fmull
rorl
test
mov
insb
adc
aas
stos
cmp
and
mov
xchg
imul
rcrl
sti
and
cld
add
push
clc
xor
mov
incl
dec
xor
popf
leave
movsl
push
out
movl
data16
xchg
in
shl
aaa
pop
dec
loopne
pop
sub
adc
and
jbe
inc
dec
sbb
mov
mov
jg
pushf
xchg
dec
jno
and
rcr
jmp
push
push
out
test
pop
fwait
dec
push
mov
jge
je
sbb
add
and
outsb
sub
pop
xchg
and
push
jae
lock
mov
and
mov
pop
imul
pop
dec
andb
out
ja
dec
mov
push
imul
jmp
dec
or
pop
sarl
and
mov
push
add
fwait
mov
xchg
cwtl
mov
daa
cmc
adc
push
jecxz
jne
lahf
ljmp
mov
lods
lret
in
sti
push
imul
rclb
add
cmpsl
jecxz
mov
repz
push
insl
mov
and
imul
or
inc
scas
scas
push
fimull
rcrb
jo
or
push
dec
mov
fisttpll
dec
mov
lahf
push
mov
add
enter
mov
push
jbe
rorb
js
jne
cmp
fcmovnb
movsb
shrl
pop
push
push
dec
push
fmull
call
incl
mov
xchg
add
mov
xchg
pop
push
aas
adcb
mov
insb
mov
mov
rolb
scas
dec
dec
mov
jp
add
mov
rolb
dec
dec
mov
and
dec
cmp
xchg
and
mov
dec
sub
xchg
xchg
mov
pop
aaa
mov
fisubl
xorb
fisttps
add
bound
clc
fcmovne
das
sub
dec
int3
push
cmp
mov
mov
sbb
pop
mov
dec
xchg
lock
add
mov
or
enter
push
hlt
int
fisttpl
daa
lret
jp
out
cltd
fnsave
repnz
test
ficoms
sahf
dec
jbe
xchg
mov
ds
enter
pop
std
push
clc
and
jecxz
mov
sub
mov
movsb
into
mov
add
cli
mov
sbb
mov
adc
jo
xchg
mov
xor
gs
nop
jmp
inc
pop
mov
and
or
dec
testl
jae
ret
xchg
xchg
pop
movsl
jg
rcrl
cmpsl
dec
and
je
mov
jmp
ret
lock
sub
sahf
jle
in
cmp
fstl
inc
scas
leave
pop
ret
xor
aam
cmp
mov
fsubs
jmp
lcall
cmp
leave
jo
cli
sub
ljmp
xor
mov
lods
mov
movb
or
dec
pop
and
xchg
and
popa
dec
sbb
xchg
ds
sti
jne
cmp
aas
sbb
aaa
push
imul
mov
dec
xlat
repz
dec
cld
mov
outsl
xchg
cmp
xor
mov
cmp
cmp
xor
jp
ja
mov
mov
jg
push
push
test
xlat
in
lcall
cli
cwtl
leave
xor
cmp
aaa
sbb
std
les
stc
sbb
int
pop
dec
scas
sbbl
sbb
divl
mov
adc
xor
dec
repnz
fdivrl
push
push
xor
push
xchg
or
imulb
mov
fmul
rcl
and
fldt
in
sahf
test
dec
inc
ret
xor
push
mov
sub
and
orl
add
outsb
js
pusha
dec
push
bound
mov
xor
lds
push
jle
cmp
cvttps2pi
in
test
mov
dec
mov
pop
filds
lds
lret
or
addl
jg
data16
outsb
in
enter
pop
mov
push
fiaddl
std
out
mov
test
push
cwtl
lahf
lds
dec
les
call
jns
pusha
enter
xchg
iret
popa
popf
pop
dec
andb
ret
or
mov
inc
mov
push
dec
dec
sbb
sub
or
pop
in
xchg
xlat
movsl
or
inc
dec
pop
pop
mov
mov
shlb
cmpb
decl
or
jae
popa
clc
push
lock
ss
dec
sub
mov
mov
dec
out
mov
xor
pushf
mov
cmp
jae
iret
and
push
sbb
fnsave
icebp
test
cmp
leave
sub
les
pop
addl
sbb
adc
rcrl
in
inc
das
jge
adcl
in
in
dec
mov
add
mov
pop
call
jmp
pusha
shlb
jge
loopne
and
dec
pop
cmpsb
fwait
add
xor
add
add
ret
dec
arpl
dec
xor
or
cmp
inc
leave
cmp
movsl
dec
pop
sarb
adc
cmpsb
cmp
push
inc
xchg
dec
xchg
inc
fisttps
xchg
dec
jno
pop
xor
pop
pop
jmp
leave
mov
xor
stos
mov
movsb
dec
aam
imul
inc
shll
fistl
mov
int
loop
lods
dec
stos
push
jecxz
mov
loope
dec
xchg
inc
and
outsb
xlat
jae
mov
add
cmp
je
add
daa
int3
ds
push
and
repz
and
push
lret
add
imul
stos
mov
mov
sub
mov
dec
push
sbb
mov
fisttps
pop
call
push
push
push
dec
les
fmuls
sbb
cwtl
dec
rolb
dec
mov
mov
mov
je,pt
mov
adcl
dec
in
jecxz
iret
imul
push
dec
inc
loopne
xorb
add
push
lcall
into
sub
dec
cmp
add
dec
mov
jno
mov
ja
fs
xor
xor
mov
popf
cs
scas
imul
mov
nop
addr16
aaa
mov
inc
mull
dec
jnp
dec
fxtract
inc
dec
lds
push
sub
jnp
dec
adc
mov
sti
pop
push
sub
dec
jle
fmull
stos
bound
test
js
addr16
out
pop
jecxz
repz
call
jle
or
adc
mov
lock
aas
push
mov
ficomps
mov
adc
test
popf
cwtl
cmp
pushf
sti
dec
pop
js
pop
enter
lds
ljmp
arpl
adc
push
or
xchg
mov
xor
lock
add
call
std
dec
daa
out
lcall
rcrb
outsb
mov
push
adc
data16
movsb
sub
dec
mov
mov
jl
pop
rorl
icebp
in
sbb
mov
mov
inc
in
mov
ficompl
dec
sub
inc
stos
sysexit
leave
sbb
sbbb
movb
dec
or
push
pop
xchg
aam
mov
testb
lret
in
sbb
and
sahf
dec
jnp
add
das
cmpsb
leave
std
imul
inc
call
fcom
xor
jo
xchg
cmp
lock
pop
call
adcb
and
dec
dec
enter
cmp
sbb
push
ret
dec
cmpsl
jnp
decl
popa
pushf
std
jle
sbb
adc
dec
ret
jns
cmp
in
scas
clc
fs
imul
aaa
daa
call
pushf
mov
pusha
push
incl
mov
or
adc
mov
mov
cmc
jbe
stos
dec
gs
cltd
lock
lea
pop
push
adc
inc
iret
out
adc
jmp
dec
arpl
and
mov
xchg
repnz
and
adc
pusha
out
add
mov
dec
popf
push
inc
fnsave
cmp
inc
sub
add
loop
insb
and
idiv
cmp
push
movsb
push
inc
inc
and
mov
ss
aam
fmul
out
sbb
rcrb
fsts
or
dec
add
stos
subl
ja
stc
scas
sub
jb
and
mov
inc
inc
dec
adc
sbb
cmp
cmp
push
daa
mov
sbb
les
sub
inc
dec
popl
aad
dec
xchg
add
inc
jns
sub
dec
mov
add
leave
sub
sbb
cmpsl
fs
scas
xchg
dec
aaa
dec
mov
push
sub
mov
hlt
cmc
dec
adc
mov
insb
push
pop
pshufw
lods
pop
jg
aaa
push
cmp
sbb
sub
test
mov
dec
push
fsubl
ret
imulb
xor
mov
aaa
popa
inc
int3
or
dec
and
mov
sahf
sbb
fisubl
dec
incl
leave
pop
xchg
jp
jno
loop
push
movsb
sub
sub
dec
fadds
mov
enter
dec
sub
imul
sub
push
sub
into
rorl
out
int
dec
add
adc
fwait
mov
sub
sbb
imul
mov
hlt
cmp
sahf
mov
icebp
fidivs
push
in
dec
je
daa
push
push
sbb
out
movsl
adc
dec
hlt
bound
xchg
mov
sbb
imul
bswap
pop
fiadds
push
push
jb
mov
push
or
sub
add
or
fdivr
inc
addl
sub
jl
add
popa
out
jmp
inc
out
mov
cmp
daa
rorb
arpl
stc
adc
scas
pop
loopne
fisttpl
mov
insl
in
jns
xor
xchg
daa
fsubs
frstor
movsl
jo
mov
pop
sarb
dec
sbb
xor
dec
xchg
dec
into
leave
popf
cmp
fdivrs
sub
mov
test
divb
mov
cli
sti
adc
sub
dec
sbb
sub
fwait
dec
cltd
test
mov
push
es
out
adc
mov
jl
dec
push
sub
cli
and
xor
xchg
push
loope
imull
into
fildll
push
dec
and
mov
loope
fnstenv
in
shrb
lahf
adc
fildll
inc
push
xor
mov
dec
clc
sbb
fisttpl
jp
add
inc
popf
outsb
dec
mov
js
xor
repz
inc
xchg
imul
lea
inc
xchg
cmp
or
fisttpll
push
loop
xchg
xchg
pop
pop
js
std
dec
cmpsl
xor
xchg
in
clc
movsb
dec
and
mov
inc
stos
scas
lcall
sub
jmp
ljmp
int3
jp
fcomi
out
loopne
dec
xchg
ljmp
test
out
aad
inc
jae
lea
adc
push
mov
dec
xchg
pop
or
mov
jmp
in
adc
push
cmpsl
test
test
pop
data16
fisubl
inc
div
movsb
mov
adc
pop
xor
mov
inc
push
xchg
mov
lods
fdivp
icebp
add
sbb
pop
adc
jbe
xor
dec
loopne
cmpl
dec
repz
push
xor
mov
jns
divl
popl
push
sbbl
push
sbb
push
mov
pop
rorl
or
and
or
dec
jb
rclb
xor
imul
dec
fmull
decl
mov
xor
mov
mov
pop
outsb
mov
repnz
cmp
icebp
jne
inc
loop
dec
div
pop
inc
sub
lcall
out
das
mov
mov
fucomip
xor
and
dec
lret
inc
loope
loopne
lret
ds
mov
mov
mulb
dec
stos
xchg
test
push
jle
movsb
cltd
insl
fistps
outsb
imul
fstps
xor
sarb
out
sub
iret
push
add
or
mov
add
pop
call
dec
xchg
das
sahf
jne
imul
lods
push
cltd
ja
and
dec
dec
jo
andl
cmp
push
jb
fsubl
in
pop
cmc
pop
push
jbe
dec
or
and
or
mov
daa
mov
es
loope
repnz
or
clc
lret
jno
xor
add
fistps
inc
outsl
rolb
aaa
jns
clc
sub
aad
imul
fistpl
imul
rcr
cmpsl
sub
jmp
cwtl
movsb
mov
out
cmp
jmp
sub
mov
aas
lds
add
sbb
cs
lcall
mov
xchg
je
aam
add
mov
jns
mov
xor
or
inc
sbb
add
movsb
sub
dec
lds
xchg
dec
mov
and
mov
fnstcw
dec
push
inc
test
add
mov
js
or
dec
jnp
dec
sahf
inc
notl
movsb
in
insb
out
into
xsha1
cmpsb
dec
mov
xchg
cmp
out
jmp
iret
dec
daa
dec
or
mov
dec
jmp
imul
out
negb
dec
loopne
mov
pop
or
lds
inc
dec
lods
psubd
ss
inc
xchg
jmp
shll
loop
les
dec
stos
mov
xor
ss
call
sub
sbb
mov
gs
inc
and
xchg
add
pushf
mov
add
xchg
jecxz
cwtl
jb
mov
jge
sar
sub
mov
icebp
cmp
add
test
pop
jno
push
in
shl
out
dec
push
dec
and
dec
jns
call
xchg
dec
cli
nop
mov
pop
mov
cmc
ds
mov
fmull
imul
addb
dec
push
fistps
jo
xchg
push
push
adc
sub
dec
xor
jecxz
test
sti
ljmp
out
xchg
xor
out
push
xchg
mov
in
rolb
jg
dec
dec
jnp,pt
daa
jno
jo
rcrl
lcall
shr
out
sub
adc
dec
stos
pop
push
jmp
jne
push
dec
pop
xchg
push
ficoms
dec
test
fldt
aam
aaa
imulb
mov
int3
mov
stos
cs
nop
outsl
dec
bnd
pop
addr16
into
scas
ret
pop
fwait
and
push
int3
push
leave
inc
aaa
and
xor
outsb
roll
fsubl
jne
fldl
adc
shrb
rclb
popa
into
lods
cmp
daa
loopne
insb
cmp
inc
dec
int3
shlb
sahf
jns
push
push
clc
dec
mov
dec
cli
dec
or
mov
mov
ret
jbe
xor
and
scas
xchg
std
sbb
xchg
fisttps
inc
dec
popl
dec
adc
jge
clc
cmp
dec
stos
addb
mov
cmp
in
lods
mov
mov
testb
mov
dec
and
test
inc
lcall
test
dec
mov
sbb
repz
adc
loope
mov
test
lret
mov
sub
xor
mov
push
pop
aad
xlat
cmp
sub
dec
movsb
lods
pop
sub
clc
or
dec
aam
enter
mov
dec
xchg
jb
test
cmp
int
shll
scas
dec
xchg
mov
cmp
sti
mov
xchg
shll
push
sub
jmp
sub
cmp
ret
mov
inc
sub
sarb
dec
adc
dec
inc
inc
or
sbb
dec
jmp
push
outsb
clc
dec
jmp
dec
aad
out
mov
xchg
xchg
insl
push
push
dec
cltd
imulb
imul
or
mov
dec
mov
mov
inc
shl
mov
stc
je
repz
inc
and
movsl
fucom
sbb
dec
iret
xor
mov
pop
mov
sub
pop
cmp
cs
mov
mov
movsb
loopne
push
add
sbb
jle
cwtl
rolb
jns
inc
xor
lret
sub
mov
or
xchg
cs
jae
push
dec
scas
shld
sti
rorl
or
sub
cmpsb
cmp
mov
cmp
inc
dec
mov
push
and
jle
dec
std
out
shrl
dec
dec
jno
mov
dec
ret
arpl
inc
push
mov
dec
sbb
cmp
jns
and
rorb
adc
in
xor
dec
pop
push
out
cmc
or
dec
pop
xchg
enter
cmp
test
out
xor
iret
add
dec
jo
sbb
push
loop
pop
out
ljmp
adc
dec
sbb
cld
pop
inc
adc
subl
in
lahf
xor
imul
mov
jbe
inc
mov
or
ret
ss
xchg
mov
int3
in
or
sub
add
xor
sbb
rolb
dec
mov
xor
es
dec
fsts
ljmp
pop
mov
jecxz
jb
mov
add
inc
pop
loopne
es
mov
mov
jo
xchg
jae
add
fsts
and
cmp
sub
dec
in
sbb
mov
daa
cld
jecxz
push
stos
psllw
mov
andl
test
inc
es
negb
dec
pop
dec
out
pop
mov
dec
lret
fsubrl
cmpb
cmp
popa
imul
push
int
or
lahf
sub
rorb
xchg
popf
pop
sti
xor
xor
push
popa
imul
cmp
sarl
and
mov
and
xor
cmc
dec
repnz
mov
add
push
imul
shlb
xor
aam
lcall
ljmp
ss
mov
xchg
cmp
repnz
incb
dec
ds
jo
cltd
dec
les
das
push
shlb
dec
lahf
mov
ja
xchg
js
cmp
add
inc
mov
fwait
sub
mov
shlb
push
das
test
dec
push
fnstcw
or
lret
lds
sbb
push
jmp
stos
leave
sbb
mov
or
dec
cld
sbb
cwtl
mov
out
daa
pop
xor
jmp
mov
mov
push
hlt
fsubrl
jp
inc
sbb
inc
mov
inc
mov
add
xor
test
sbb
arpl
int
push
in
push
push
cwtl
lods
sbb
lea
pop
jmp
mov
dec
dec
scas
inc
adc
dec
nop
fistpl
inc
xor
lods
movsl
sbb
push
fldl
out
xorl
repz
ret
int
xor
sub
sub
in
shrb
dec
ret
shlb
mov
sub
in
sub
sti
imul
into
sbb
mov
imul
imul
jg
mov
popl
xor
mov
imul
icebp
fidivrl
out
inc
addr16
mov
imul
lods
jecxz
xor
add
std
xchg
jl
inc
lahf
dec
je
lret
in
fnstsw
dec
pop
cmpsl
or
movsl
cld
mov
cwtl
arpl
sub
push
adc
mov
cmp
and
dec
mov
dec
aas
adc
popa
push
int3
lret
dec
pop
xor
pop
fmull
gs
stc
xchg
xchg
dec
dec
sub
test
testb
test
mov
sar
outsl
bound
push
int
shlb
lds
pop
test
push
mov
loopne
insb
push
aas
add
loope
fsubrl
sbb
push
mov
xchg
push
xor
mov
push
dec
out
mov
mov
dec
insb
icebp
fs
mov
das
push
fcoml
and
jns
fsubrl
dec
cmpsb
negb
dec
pop
sbb
imul
shlb
mov
sahf
nop
test
push
jmp
jmp
mov
std
aaa
std
jg
lcall
fs
inc
pop
enter
dec
mov
sub
mov
dec
push
xchg
std
sti
mov
lahf
mov
jge
orb
aam
sbb
xchg
divl
loope
push
ret
or
orl
ss
dec
mov
fnstcw
rorb
out
mov
dec
fmull
add
pop
movsb
andb
iret
pop
xchg
mov
into
lods
insl
xchg
cmp
sti
mov
sub
and
shr
loop
jo
into
sub
jns
iret
repz
mov
pop
out
push
fnstsw
outsb
mov
jb
mov
push
rolb
into
shll
push
daa
sbb
mov
f2xm1
xchg
and
mov
xchg
mov
inc
fisttpl
sub
fmuls
ret
push
jne
nop
test
popf
push
dec
pop
push
ljmp
stos
and
jmp
lcall
adc
fdiv
clc
dec
testl
lret
dec
push
fildll
mov
aad
dec
add
jnp
repz
xchg
dec
ret
addr16
adc
out
cmpsb
stc
xor
sub
pop
lret
in
in
dec
test
lods
sbb
pop
jg
lea
in
scas
mov
push
mov
aas
add
sbb
mov
mov
scas
push
imul
mov
dec
cmp
mov
loop
cli
inc
sbb
fimull
imul
lock
mov
in
out
push
adc
inc
dec
insb
lret
and
stos
pop
imul
dec
roll
sbb
adc
jmp
ret
adc
push
xor
test
pop
arpl
imul
ret
mulb
in
dec
int3
mov
inc
call
fisubrl
out
mov
andnps
add
in
rcrb
and
rol
cmpsb
dec
pop
mov
cmpsl
fimuls
jbe
sub
or
dec
pop
mov
mov
mov
adc
xchg
lds
jns
add
adc
add
and
fisttps
out
jb
or
inc
rcr
dec
dec
addr16
shlb
jbe
mov
inc
dec
push
leave
hlt
or
adc
inc
js
call
imul
sbb
dec
addr16
cli
sbb
push
daa
mov
sbb
cmpsb
lret
lods
fs
dec
aas
mov
fsubr
jmp
push
inc
es
mov
js
pushf
in
xchg
add
jmp
sbb
insb
pop
adc
dec
push
add
adc
inc
inc
mov
jo
cmpsl
scas
in
xor
adc
pop
stos
out
push
push
dec
insb
xchg
jmp
pop
jns
pop
roll
mov
mov
adc
pusha
cmp
insb
das
mov
mov
adc
leave
loope
sub
repz
stos
and
dec
push
sbb
pop
test
ds
fisttps
fsubp
arpl
clc
imul
dec
into
lock
popf
mov
mov
sub
mov
push
or
jle
jp
je
pushf
lret
dec
xor
inc
xchg
dec
push
fnstcw
xchg
or
xchg
sahf
mov
dec
testb
loop
lds
xor
in
iret
nop
dec
loopne
ret
sub
insb
dec
dec
sti
rclb
or
jmp
mov
stc
shlb
lods
test
inc
jns
xchg
dec
les
jmp
leave
sub
xor
fnstcw
push
push
and
mov
cld
loope
and
fistpll
mov
cmp
and
dec
adcb
test
add
mov
xor
mov
addr16
test
dec
leave
test
jno
dec
mov
adc
out
adc
or
imul
shll
xchg
loop
fsts
js
lds
fisttpl
push
sub
dec
jp
scas
in
jmp
imul
out
xor
dec
push
push
xchg
pop
into
fwait
pop
inc
dec
sub
jne
aam
xchg
jns
leave
mov
in
or
adc
mov
inc
enter
pop
lret
loopne
dec
pop
or
divb
js
cmpsl
dec
shll
stc
out
repnz
idiv
pop
lock
call
mov
dec
mov
mov
mov
jne
loopne
enter
dec
inc
or
in
mov
xchg
jl
nop
pusha
iret
cmp
test
push
push
movsb
xchg
and
cmp
sbb
adc
cmpsl
dec
icebp
pop
push
into
ficoml
add
pusha
ror
out
lds
jge
dec
mov
pop
adc
xchg
adc
dec
lods
dec
in
nop
xchg
dec
inc
shll
loope
mov
xlat
dec
loopne
mov
mov
cs
sbb
scas
jo
ja
pop
test
dec
xchg
lret
and
jmp
out
dec
pop
lcall
jo
or
arpl
mov
mov
pop
push
jbe
xchg
adc
sahf
push
dec
lock
in
dec
int
dec
imul
inc
adc
movsb
iret
mov
dec
or
ret
adc
dec
jecxz
mov
addr16
add
mov
fisttps
in
in
not
adc
push
pop
cmp
cmc
dec
je
mov
jbe
mov
dec
les
and
sub
sahf
pop
dec
ljmp
aam
sbb
adc
push
fwait
out
pop
inc
or
cli
sub
stc
push
in
outsl
rol
cmpsl
dec
mov
aas
nop
negl
or
dec
xor
xor
test
push
int3
nop
inc
imul
xorl
dec
stos
test
adc
push
mov
rorb
cmpsl
cmc
sbb
jle
push
aam
leave
int
data16
adc
fwait
mov
scas
mov
sub
insb
inc
xor
dec
imulb
inc
pop
aas
inc
ja
dec
orb
push
fstpt
dec
stos
insb
leave
stos
mov
xor
imul
or
iret
les
sub
sub
inc
fsubrl
imul
nop
cld
push
clc
inc
dec
nop
pusha
call
pop
bnd
xchg
xchg
stos
scas
cmc
cs
dec
mov
cmpsl
adc
mov
inc
push
jb
shrb
pop
mov
nop
adc
xor
lret
loop
push
mov
test
xchg
cmp
or
dec
pop
ljmp
insb
sub
inc
jecxz
dec
pop
cmovb
cmp
jno
dec
clc
add
adc
xchg
jg
pop
add
lock
mov
aaa
xchg
fsubl
push
bound
xor
hlt
mov
dec
insl
rorl
cmp
dec
sbb
dec
sti
popa
push
jmp
dec
mov
sbb
sub
loope
jo
lods
jb
push
je
pop
cli
lcall
in
cmpsl
xor
lods
push
sub
mov
pop
popa
and
mov
cltd
sbb
dec
and
lock
inc
inc
sub
stc
sbb
inc
and
jno
inc
mov
pop
xchg
cwtl
jle
rcrb
xchg
lcall
test
xor
push
dec
sub
lock
mov
jp
lea
push
mov
in
jl
lahf
mov
or
mov
pop
lcall
inc
pop
aaa
jmp
out
adc
icebp
dec
int
pop
repz
inc
sub
mov
push
mov
lcall
data16
adc
aaa
pushf
lock
mov
sbb
dec
push
sbb
fcoms
das
cmc
add
xor
xor
lea
dec
mov
daa
dec
xchg
or
ret
out
cmp
and
dec
mov
mov
repnz
push
add
add
addr16
pop
mov
mov
jnp
addr16
mov
lods
xor
ds
dec
stos
mov
xor
popa
int
push
jge
mov
cmp
sbb
pop
je
cmp
fs
subb
dec
xor
and
imul
aad
inc
dec
cmp
addr16
dec
js
dec
adc
jnp
push
sahf
mov
hlt
add
pop
xchg
mov
jg
mov
movsb
cmovp
add
adcl
ret
jecxz
adc
adc
hlt
sti
or
adc
enter
cmp
mov
cld
repnz
popf
das
rclb
dec
incb
jbe,pt
jl
mov
cmpsb
sub
add
dec
lcall
addl
dec
push
loope
clc
dec
dec
push
pop
sub
pop
dec
sbb
or
cmp
pop
lods
and
pop
and
mov
iret
imul
sbb
sahf
add
icebp
xchg
jo
xchg
sub
shl
int
xchg
dec
mov
into
lods
lds
mov
xor
std
sub
and
fcomi
jae
pusha
inc
js
sahf
addr16
dec
dec
sbb
daa
cmp
test
or
cli
icebp
out
stc
xor
dec
pop
mov
adc
mov
push
das
stc
lock
dec
sub
xor
mov
or
fstl
xchg
daa
push
scas
movsl
ja
inc
dec
add
mov
add
dec
xchg
add
adc
mov
mov
rolb
dec
sti
mov
push
jb
push
mov
sub
adc
cmpsb
dec
mov
daa
inc
movsb
std
jns
int
dec
int3
dec
test
or
lods
ds
mov
test
push
cmp
adc
dec
ror
shrb
xor
and
dec
dec
andb
and
pop
mov
in
push
mov
and
ss
adc
lret
add
jl
add
jmp
xor
js
ret
cmpsb
call
sub
lret
inc
stos
mov
add
ds
imul
pop
inc
xchg
cmc
sub
mov
and
cmpsl
push
push
pop
mov
into
std
inc
movsb
into
mov
inc
dec
fwait
adcb
icebp
cli
ja
inc
xchg
test
imul
in
xor
mov
in
mov
xchg
xlat
fisttps
imul
xchg
stos
loopne
lock
pop
cmp
shrl
and
adc
dec
aaa
and
cltd
xchg
sti
addb
push
adc
aad
popa
jbe
xor
sub
dec
sub
jnp
xor
ss
mov
or
loope
pop
outsb
mull
into
out
jae
xchg
sahf
outsb
lods
jo
xchg
addl
pop
adc
pop
mov
jbe
test
cmpl
scas
xor
test
rcrb
lret
dec
or
ljmp
in
xchg
imul
ret
repz
loopne
jbe
mov
add
inc
std
sarb
cwtl
xor
scas
je
test
dec
fstps
sub
jecxz
fwait
test
clc
push
jno
sbb
push
dec
enter
dec
mov
dec
lds
sub
adc
das
dec
imul
lock
inc
cmp
ds
out
fsubs
adc
xchg
mov
aas
and
test
lods
mov
and
aam
push
dec
into
out
rolb
imul
adc
mov
jmp
xchg
inc
push
xor
mov
call
das
xchg
popa
aam
jo
push
aaa
dec
out
popf
sub
dec
mov
out
testb
or
imul
mov
xor
xor
fmulp
shrb
jle
mov
cmp
or
mov
cwtl
mov
stos
dec
aam
lahf
dec
mov
cmp
adc
or
sub
cmp
jno
sub
cmp
mov
inc
add
andl
imul
or
ret
cmp
dec
sbb
pop
and
xchg
out
mov
dec
in
or
dec
mov
and
in
dec
mov
not
dec
push
movsb
and
dec
jnp
int
dec
mov
push
adc
or
test
inc
sub
mov
dec
cmp
jae
dec
xchg
sahf
popa
push
daa
cmpsb
jb
dec
lods
push
push
mov
loopne
dec
ds
adc
pop
push
mov
daa
js
dec
dec
dec
cs
jne
mov
cmpsb
push
movsl
push
decl
cmp
out
repz
dec
lfs
es
inc
pop
and
out
icebp
ret
iret
pop
mov
jl
mulb
dec
dec
sub
inc
and
repnz
pushf
test
imul
mov
sbb
dec
aas
cmp
inc
imul
inc
fdivrs
cwtl
outsl
pop
mov
dec
sbb
loope
sahf
fwait
jecxz
mov
scas
movsb
pop
inc
stc
push
lods
test
int3
ljmp
ror
mov
and
aas
rolb
and
aas
cmp
pop
and
add
aaa
gs
xlat
adc
jne
cmc
push
gs
and
pop
dec
in
xor
jno
mov
enter
andb
cmp
aas
dec
cmpsb
aaa
insl
loop
stos
shll
in
mov
mov
stc
inc
cwtl
out
pop
jecxz
dec
sbb
xor
add
or
dec
aas
or
push
jno
pop
in
ss
mov
dec
enter
or
add
xchg
pop
jg
lcall
xchg
fidivs
mov
dec
mov
rclb
insl
dec
leave
xor
ja
aaa
xor
push
jnp
dec
js
pop
pop
sbb
sbb
xchg
adc
lret
inc
and
inc
jbe
pop
xchg
cmp
sbb
mov
js
inc
into
dec
dec
push
xchg
cmp
sub
or
inc
sbb
test
dec
test
xor
movsl
cli
imul
stc
mov
inc
push
dec
mov
sub
cmp
and
roll
cmpsl
ja
fs
inc
xor
ljmp
stc
sbbb
leave
data16
outsb
mov
ljmp
or
add
xor
inc
jbe
aad
pusha
jne
jns
and
orl
or
mov
xchg
dec
or
lock
jmp
dec
jae
mov
lods
dec
mov
cmc
sbb
nop
pusha
dec
rep
fsubrs
jne
std
leave
pop
or
dec
push
inc
mov
sti
lods
fimuls
sbb
repz
dec
fs
xorb
adc
imul
repnz
cmpsb
add
out
cmp
inc
js
mov
pop
mov
stos
push
mov
sti
andb
sbb
xchg
or
jge
lret
jbe
rol
xor
mov
dec
pop
stos
push
aas
aaa
sub
aad
mov
xchg
push
fidivs
dec
sahf
sbbl
push
fwait
add
fdiv
dec
push
cmp
lds
xchg
jl
and
add
sbb
or
xor
call
inc
outsb
push
rorl
enter
int3
inc
ret
std
sub
sahf
cmp
xor
and
cmpsb
lahf
neg
pop
inc
push
inc
sub
lock
in
je
add
mov
sbb
fstp
shl
stos
xchg
in
outsb
push
sub
arpl
mov
div
in
xchg
mov
loop
dec
aas
sub
jmp
leave
mov
and
dec
adc
xchg
stos
sub
add
test
pusha
push
scas
js
push
nop
cmp
test
sbb
cld
outsl
dec
out
cmp
stos
cwtl
aad
dec
jecxz
shrb
jns
scas
pop
mov
inc
or
bound
mov
xchg
lcall
push
jmp
cmp
inc
cmp
dec
xor
push
outsl
sbb
pop
add
sub
inc
dec
sub
ljmp
inc
fisubrs
and
dec
mov
mov
push
push
sbbb
mov
outsl
push
adc
mov
gs
fcoml
push
mov
cmpsl
dec
ret
popf
lds
pushf
cli
imul
dec
xchg
xchg
or
fisttpll
mov
dec
adc
mov
and
adc
mov
scas
testl
repz
inc
mov
mov
dec
repnz
xchg
bound
inc
and
movsb
ret
ficompl
xchg
push
dec
xchg
das
mov
push
sti
pop
stos
in
or
or
pop
fmull
and
xchg
xlat
mov
jle
scas
aad
decb
sahf
sar
adc
xchg
mov
lahf
cmp
add
lods
jecxz
cmp
test
pop
adc
imul
stos
outsb
dec
add
test
dec
addl
xchg
dec
movsb
add
fldl
adc
adc
shlb
and
pusha
lcall
pop
shr
mull
jmp
std
les
sahf
inc
pop
push
sbb
and
jl
dec
sub
jle
or
pop
mov
hlt
jecxz
mov
rclb
mov
pop
cmp
mov
lea
push
mov
xchg
bound
pop
test
inc
or
jns
subl
aas
out
xbegin
jp
dec
cmpsb
jns
sub
push
dec
mov
jbe
pop
push
xor
gs
stos
fcoml
mov
lock
push
adc
inc
in
jae
cmp
ja
and
loopne
repnz
xor
repz
cmp
cwtl
test
in
pusha
mov
dec
lds
imul
sbb
shrb
movsb
dec
sahf
xchg
popf
movsl
data16
dec
pop
dec
jb
inc
cmpsb
arpl
xchg
mov
in
pop
dec
xchg
or
shlb
push
sbb
popa
mov
outsb
add
sahf
rorl
dec
xchg
icebp
cld
rolb
insb
and
dec
bound
jl
shl
pop
je
or
xor
dec
cmp
xchg
jb
xchg
sub
dec
ljmp
push
scas
dec
fldpi
aas
enter
dec
cli
mov
repnz
inc
loopne
movb
mov
fimuls
pop
adc
jbe
rorb
dec
addr16
stos
push
dec
jae
stc
pop
pop
xchg
lahf
insl
inc
mov
push
int3
push
add
aaa
imul
dec
and
mov
shll
subb
add
mov
loopne
hlt
lcall
xor
addr16
in
das
test
addr16
jne
js
sbb
lcall
push
scas
mov
sub
loopne
jg
push
dec
jecxz
adc
scas
leave
cmp
inc
xor
cmp
dec
xchg
mov
insl
iret
rcr
dec
push
pop
fwait
mov
jmp
dec
add
and
cmpsl
mov
rol
dec
fldenv
nop
sbbl
pop
dec
dec
pushf
xchg
push
enter
loope
cmovge
jae
xlat
dec
outsl
lret
xchg
dec
jnp
push
out
ss
mov
inc
test
mov
jnp
xor
pop
lret
lret
scas
and
mov
push
dec
sahf
mov
dec
test
lds
xchg
inc
ret
lock
xor
aad
loope
stos
push
jnp
nop
aas
addr16
loopne
and
mov
push
cmp
repz
jl
sbb
xlat
inc
xchg
js
stc
mov
mov
cmp
or
fistpl
pop
push
mov
int
insb
cltd
inc
dec
or
call
clc
mov
es
sbb
dec
jbe
test
xor
sarb
and
mov
mov
cltd
mov
rclb
dec
jl
push
into
dec
enter
xchg
mov
scas
mov
vmovsd
adc
into
adcb
dec
lea
clc
fnstsw
fisubrs
js
aam
ss
cmp
imul
add
xchg
or
xchg
into
mov
cmpsl
in
dec
leave
ret
or
js
data16
mov
mov
dec
mov
call
mov
into
xor
dec
or
shrb
push
bound
daa
lret
dec
lret
xor
idivb
sbb
inc
rorb
dec
sub
int3
mov
pop
jo
pushf
push
call
xor
rclb
dec
in
stc
sbb
mov
pop
dec
or
jb
imull
insb
loopne
hlt
into
fsubl
push
dec
cmp
jge
xor
stos
aas
dec
add
hlt
ret
sub
mov
dec
jne
xlat
pop
out
imul
dec
ret
cmp
dec
dec
clc
les
repz
call
int
cmpl
shlb
adc
lds
pop
int3
das
add
in
sbb
dec
ss
jg
pop
or
mov
sub
push
cwtl
inc
mov
dec
in
push
shl
adc
clc
jge
incl
aad
fadds
dec
roll
dec
lods
cmp
and
jmp
and
int
decb
cmc
inc
push
xchg
mov
dec
mov
icebp
pop
imul
fadd
sub
insl
push
cli
xor
push
stos
imul
aas
cmp
cmc
adc
loope
push
dec
ds
add
iret
push
std
dec
div
inc
dec
pop
xlat
fldt
sbb
testl
push
ja
lds
mov
scas
push
stc
cmp
adc
call
dec
xor
jmp
dec
in
mov
xorl
imul
adc
push
sbb
mov
lret
mov
daa
jae
in
push
mov
rolb
mov
iret
cwtl
dec
sbb
loopw
fstl
and
dec
pop
mov
es
adc
clc
pop
imul
in
neg
add
mov
or
das
mov
addr16
adc
ret
clc
dec
lock
out
ds
xchg
xlat
lds
loopne
aaa
stos
jmp
jl
jmp
insb
add
fs
pusha
cmp
rol
and
aam
sub
js
dec
outsb
stc
pop
popf
inc
insb
cmp
dec
sbb
sub
movsb
jl
pop
mov
dec
inc
adc
cs
rcll
cmc
nop
jbe
repz
dec
mov
cmpl
shlb
cs
jecxz
aas
cld
dec
sub
sahf
lahf
das
mov
fadds
into
or
ret
sbb
out
adc
sbb
fimuls
jecxz
fnstenv
xchg
push
dec
mov
imul
or
inc
cli
std
call
xorb
add
cld
mov
sub
push
fmuls
arpl
jge
lock
dec
test
pop
dec
sub
mov
mov
je
add
ds
sar
lock
ret
shl
pop
fmuls
dec
fs
stc
shl
jo
out
icebp
push
cmp
and
cmp
out
dec
gs
sub
xchg
push
push
xchg
stc
push
jae
xlat
mov
out
frstor
cmp
popl
or
pop
push
insb
push
and
movsl
adc
sbb
cmp
shrl
xor
int3
dec
and
push
pop
pop
mov
call
cmc
mov
outsb
dec
dec
lds
mov
pop
jb
test
or
add
dec
push
xlat
adc
cmp
out
enter
movsb
mov
inc
push
dec
push
cld
push
jb
sbb
pop
rcr
gs
cld
xor
int
ret
add
loope
push
xchg
imul
arpl
jge
jne
loope
dec
cwtl
jmp
loop
aaa
push
mov
mov
mov
leave
dec
lret
data16
in
sub
dec
shlb
fs
mov
inc
mov
cmp
nop
mov
int3
movsb
add
js
cmp
loopne
dec
mov
mov
lahf
insb
movsb
lds
daa
sarb
mov
das
sub
fnstcw
mov
dec
xchg
pusha
sahf
cmpsl
cltd
push
push
jo
add
adc
iret
xorl
push
dec
xor
mov
sbb
mov
repnz
fs
stos
jbe
mov
je
jno
dec
dec
mov
mov
dec
pushf
dec
shll
and
sbb
inc
lret
int3
add
cmp
add
aas
cmc
sti
mov
jmp
cmp
arpl
jae
ljmp
hlt
fisttpl
inc
mov
out
dec
pop
jne
enter
fisttpl
ja
push
add
dec
jl
push
dec
cltd
or
dec
scas
dec
scas
fsubl
inc
ret
lcall
test
dec
scas
jb
ss
and
sub
mov
js
jp
cmpsl
mov
xor
dec
je
sub
aaa
out
mov
repnz
fists
push
rol
test
push
gs
movsb
mov
xlat
jbe
adc
mov
dec
dec
adc
ds
das
icebp
dec
mov
mov
pop
jno
push
in
push
xor
push
insb
mov
out
push
sub
mov
loopne
mov
fimull
jp
sbbb
add
sub
push
push
enter
icebp
mov
call
out
sbb
ss
pop
inc
dec
scas
aas
sub
fsubrs
ds
test
xchg
inc
std
insb
shll
inc
ret
cmp
movsb
mov
imul
cmovg
ljmp
lcall
imul
mov
mov
jp
cmc
call
imul
mov
movsb
pusha
push
cmp
dec
in
rclb
dec
pop
push
sahf
test
mov
jge
and
xchg
out
dec
dec
add
imul
cmovs
add
xchg
or
pushf
mov
decl
in
mov
repnz
div
fildll
iret
std
jnp
adc
mov
imul
popf
push
into
push
sbb
cmp
dec
scas
xor
dec
mov
xorl
out
dec
fiadds
xchg
shlb
dec
jmp
push
rorb
lock
push
repnz
mov
or
scas
cmp
cmpsb
ret
mov
mov
mov
gs
imul
iret
shrb
lcall
ds
xchg
ficoms
and
sub
cltd
mov
push
adc
fmul
xchg
sbb
dec
jl
sub
or
add
std
mov
rorl
sbb
cmp
add
push
ss
inc
cmp
mov
mov
movsb
push
push
pushf
in
int
imul
aas
pop
fisttpll
movsb
dec
bound
icebp
dec
test
and
lahf
and
dec
mov
xchg
mov
push
push
sahf
xchg
outsb
mov
test
lea
adc
inc
add
dec
lcall
orl
cmpsb
mov
lret
in
xchg
dec
cmc
lds
mov
push
sti
inc
dec
aaa
aam
sahf
jl
mov
dec
push
sub
pop
inc
dec
push
pop
lock
and
arpl
dec
lea
and
sbb
cmp
pushf
mov
jl
dec
push
add
fsubrl
ljmp
daa
data16
outsb
fisubrs
dec
dec
cltd
xchg
inc
les
jmp
mov
stos
adc
add
cmp
dec
jns
das
pop
stos
out
outsl
cmp
dec
mov
add
dec
pop
mov
push
les
out
out
test
dec
js
adc
pop
cli
add
repz
mov
push
daa
cwtl
mov
rcll
xchg
push
cli
pop
fildll
or
icebp
push
cmpsb
pop
fadds
dec
xchg
mov
insb
jo
dec
int
ret
mov
push
dec
mov
fdivrl
and
aaa
xchg
addr16
dec
fidivs
mov
daa
fadds
divb
mov
mov
mov
minps
xor
mov
fwait
inc
cmpsl
rorb
cmp
push
aas
and
test
ja
gs
iret
cmp
push
or
xor
mov
fdivrs
mov
xchg
icebp
xchg
mov
push
push
into
push
cmp
push
dec
mov
sti
sbb
mov
test
mov
dec
pop
cmp
or
stos
push
lds
in
fistl
mov
jns
dec
push
iret
sbb
pop
dec
je
adc
adc
test
dec
cmp
add
negl
pop
xor
jl
xchg
fisttps
lods
imul
outsl
jo
std
push
sbb
and
inc
push
dec
mov
pop
jbe
dec
jno
mulb
mov
push
dec
ret
sub
pop
or
in
lret
into
lock
int
lret
jge
imul
push
dec
aam
jle
mov
and
inc
fsubrl
xor
sub
bnd
mov
adc
enter
test
icebp
cmp
in
inc
sub
shlb
frstor
mov
xor
xchg
jl
sti
dec
mov
inc
add
dec
xor
dec
add
aam
dec
ljmp
lret
dec
lret
loope
push
xchg
iret
xor
dec
ss
movsl
jmp
dec
dec
repz
clc
mov
andl
inc
outsl
loopne
xor
add
sub
dec
mov
and
add
dec
xor
pop
aad
imul
inc
push
ds
fs
push
call
dec
jle
dec
cltd
xor
pop
sbb
cmp
jno
fisttps
mov
jb
inc
mov
cmpsb
arpl
ss
out
xchg
loope
pop
xchg
lds
cmp
dec
pop
mov
fmul
or
test
cmpsl
jb
pop
adc
push
push
jbe
mov
push
cmpsl
rcll
cld
addb
in
dec
loopne,pt
fisubrl
daa
int3
mov
jl
rorb
lods
aam
xchg
sahf
into
dec
call
inc
fdivrs
dec
dec
and
decb
fnstcw
js
ja
and
jns
fisubrs
dec
mov
adc
mov
decb
stos
rorb
or
push
xor
inc
mov
testb
sub
daa
cmp
cs
popf
jb
jns
das
divl
push
cmp
cltd
stos
stc
loopne
cwtl
dec
jp
rclb
pop
in
cmpsl
mov
sub
adc
ja
inc
push
xchg
jp
add
xor
pop
not
or
icebp
dec
insb
pop
fisubrs
xor
dec
dec
mov
push
push
jne
bound
sbb
mov
dec
xchg
fwait
shll
cmc
repnz
leave
scas
inc
mov
cmpsb
mov
add
std
fwait
cltd
xchg
pop
pop
test
mov
mov
aad
dec
sub
cwtl
stc
mov
mov
int
xchg
negl
xchg
stc
mov
or
es
and
ds
add
lcall
mov
repnz
and
bound
mov
in
dec
jl
test
pusha
or
sbb
mov
push
pop
in
sub
jge
mov
orb
cwtl
add
addb
push
scas
out
loopne
xchg
push
cmpl
pop
cmp
sub
das
in
inc
orb
fcmovnu
push
dec
test
cmpsb
out
stos
popf
aam
pop
das
cmp
or
xchg
rorb
test
popa
cmp
dec
lahf
add
xor
dec
sbb
mov
js
cmpsb
and
mov
test
inc
int3
les
dec
mov
sti
and
pop
test
shrb
lcall
icebp
stc
sub
imul
mov
mov
pop
dec
mov
scas
mov
xchg
loopne
lea
subb
mov
rcl
sbb
test
loopne
xorb
test
or
cli
mov
sbb
cmp
mov
insb
push
aad
cmp
sub
jg
leave
jle
mov
pop
mov
xor
popf
mov
cmp
cld
aas
inc
cmpsb
aad
jle
ret
popa
and
dec
or
jns
stc
scas
aad
push
idivb
jl
scas
popa
push
pop
mov
movsb
push
pusha
or
dec
xor
xlat
push
test
jg
dec
les
cmp
popa
shll
out
mov
push
adc
jo
lahf
dec
out
popf
mov
fisttps
in
or
xor
cmpsl
sub
push
cmp
mov
imul
adc
outsl
lods
inc
pop
repnz
inc
popf
dec
inc
or
xor
mov
gs
push
mov
dec
sbb
adc
or
mov
and
lods
test
loopne
dec
iret
out
pushl
push
and
lahf
adc
mov
mov
cmp
sbb
fdivs
popa
pop
mul
mov
frstor
shll
stos
rol
dec
pushf
inc
aas
cmp
scas
sar
sub
pop
int3
ds
jb
push
jo
dec
mov
fildll
or
push
iret
push
cs
mov
fwait
dec
lcall
mov
mov
fdiv
adc
jns
adc
gs
push
add
mov
xchg
roll
ss
mov
push
push
mov
inc
jae
pop
xlat
js
mov
cmp
lds
arpl
pop
xor
data16
dec
add
andb
lods
in
jae
dec
bound
cmpl
in
dec
roll
pop
add
pop
push
mov
dec
pop
mov
std
cmp
loop
dec
daa
imul
loope
jle
mov
enter
out
xchg
sbb
dec
mov
loopne
push
pop
jnp
iret
pushf
pop
in
iret
pop
jge
push
push
aam
xchg
inc
sbb
cs
mov
dec
cmp
insb
mov
lock
test
lcall
mov
fmul
cmp
jmp
sub
add
inc
popa
mov
cmp
cmp
xor
pushf
dec
addr16
push
in
out
push
xchg
mov
shlb
dec
push
mov
fwait
addb
mov
adc
rclb
pop
rcrb
repnz
dec
lods
inc
rcll
cmp
dec
inc
or
lret
ljmp
int
mov
dec
xchg
xor
and
dec
push
mov
mov
dec
in
push
outsl
int
movsb
dec
aam
stos
push
or
lock
ja
xor
int3
movsb
dec
repz
inc
sbb
iret
imul
push
arpl
pushl
xchg
push
scas
in
add
push
cmpsb
adc
xchg
mov
scas
imul
imul
dec
sub
lret
inc
mov
pop
mov
lcall
lods
adc
outsl
cmc
mulps
dec
aas
leave
xor
xorb
insb
mov
jns
lcall
clc
dec
xchg
add
stc
add
dec
pop
es
ljmp
xchg
mov
lods
mov
or
dec
xor
add
hlt
cmp
pop
jmp
cs
cmp
pop
cmpl
lods
mov
mov
das
push
dec
mov
lcall
mov
mov
push
sbb
or
jne
mov
test
sarl
dec
enter
sbb
add
fisttpl
movsb
rcll
pushf
mov
aas
mov
dec
in
fst
or
sub
negb
rorb
fcmove
in
adc
aas
jb
cmp
dec
imul
push
jg
jns
adc
xor
push
clc
shlb
mov
inc
sbb
aas
out
sub
add
push
dec
push
and
push
xchg
int3
dec
and
je
mov
or
fsubrs
mov
xchg
dec
jp
cwtl
pushf
cmp
dec
xor
pop
mov
dec
cmpb
jecxz
mov
or
dec
jle
jno
and
jmp
dec
dec
xchg
pop
add
fcmovbe
hlt
loop
shll
insb
mov
dec
daa
jl
fistpll
cmp
xchg
mov
and
jecxz
pop
test
jmp
outsb
js
fisttps
orb
mov
xchg
fwait
sbb
fistl
add
nop
shl
pop
mov
mov
shlb
dec
xor
insb
stos
dec
sbb
push
xchg
aas
xchg
xor
cmp
arpl
call
xchg
dec
sbb
and
insl
imull
dec
movsl
repnz
push
imul
push
lahf
sub
xchg
mov
xchg
imul
inc
mov
fdivrs
mov
int
outsl
adc
outsb
jge
push
repz
dec
cmp
jmp
fs
or
clc
rorl
test
xchg
test
stos
fldcw
adc
mov
jmp
xchg
mov
out
jno
pop
stos
js
pop
aaa
fadd
outsb
dec
push
mov
rolb
test
mov
out
cmp
push
mov
pop
xor
jae
or
daa
cld
test
ret
fnsave
jle
pop
push
js
push
out
bnd
std
mov
pop
enter
icebp
or
and
shll
mov
std
sbbb
push
in
sbb
xchg
cli
mov
clc
fsubs
and
mov
pushf
mov
in
xor
iret
cmpb
insb
fistpl
sar
pop
mov
lds
jo
push
enter
shl
adc
mov
imul
xor
aam
add
imul
jno
lea
movsb
dec
cmpsb
daa
lret
lock
paddusb
pop
sub
pop
mov
cwtl
dec
imul
iret
cmp
loopne
xor
outsb
lcall
jno
test
dec
frndint
mov
mov
cmp
fcmovu
icebp
dec
adc
mov
xchg
shll
dec
jp
push
adcb
xchg
loopne
push
ja
in
pop
mov
mov
insb
push
inc
dec
xor
xlat
or
mov
iret
push
call
jmp
stos
cltd
das
mov
int3
sbb
adc
cmp
es
hlt
jle
cmp
push
mov
xlat
push
pop
push
dec
test
sbb
cli
fdivrl
xchg
les
es
cwtl
mov
push
dec
sbb
sbb
cltd
dec
insb
fcmovbe
push
mov
ja
popa
mov
call
dec
dec
push
pop
movsl
dec
jae
and
les
cmp
addr16
stos
jne
dec
or
cs
push
cld
in
jmp
and
sub
lds
ffreep
cmp
bound
sbb
lret
loopne
or
sbb
or
cmp
cmp
jno
mov
pop
mov
sub
enter
mov
lahf
jns
mov
fmul
cli
adcl
xchg
jg
pusha
push
sbb
push
xchg
inc
or
int3
lret
sub
sub
sbb
push
inc
push
dec
movsl
fnstenv
pusha
mov
and
cmp
cld
std
dec
inc
add
mov
push
dec
inc
jns
mov
ds
or
jne
pop
mov
shll
dec
xor
mov
push
orb
xor
inc
sbb
pop
jmp
inc
imul
decl
push
test
dec
push
xor
mov
dec
fcomi
mov
cmp
out
ds
dec
nop
xor
shll
xchg
xor
dec
stos
sub
adc
jmp
out
loop
dec
sub
inc
inc
insl
inc
and
add
dec
cmp
sbb
and
add
test
stos
jb
and
add
ret
scas
push
out
sub
push
cmp
clc
dec
and
push
sbb
dec
push
jge
mov
test
icebp
lahf
out
stos
xor
movsb
stos
and
add
dec
jb
cmc
sub
dec
negl
aas
movsb
jne
inc
das
dec
les
stos
fstl
popa
inc
pop
mov
dec
shr
repnz
and
adc
inc
test
and
dec
push
pop
push
sub
inc
and
mov
std
inc
outsb
jbe
dec
add
scas
lret
jecxz
fbld
dec
xchg
jo
cs
dec
cmpsb
into
dec
fcoms
cmp
or
int
dec
pusha
mov
lock
or
push
xchg
ljmp
dec
cmp
dec
xchg
pusha
add
dec
daa
inc
std
bound
mov
lcall
and
test
dec
sub
jno
pop
mov
nop
mov
aam
cmp
xchg
leave
testl
fisttpl
lret
mov
cmp
hlt
sbb
pop
dec
lds
not
jle
mov
dec
lock
pop
adc
arpl
cmp
add
dec
les
js
dec
cld
xchg
push
mov
cmp
std
imul
subl
negl
jg
mov
imul
das
dec
add
js
and
stos
scas
dec
cli
clc
icebp
adc
imul
cltd
stos
orl
mov
cmp
cmpsl
int
pop
sub
inc
sbb
dec
inc
imul
arpl
pop
push
lds
dec
cmpsb
mov
push
cmovnp
adc
and
int3
pop
ret
jnp
jp
push
das
cmp
imul
push
adc
aaa
idivb
loopne
add
mov
jo
push
stos
sub
repnz
and
inc
leave
add
in
sbb
outsl
mov
push
jecxz
ljmp
cld
pop
dec
cmc
push
xchg
pop
cs
ret
xor
pushf
xchg
xchg
dec
push
loope
jmp
int3
mov
enter
add
rol
iret
xor
dec
cmpsl
add
cmp
sahf
pop
jae
stc
xor
gs
pop
cmp
mov
cmpsb
sub
stos
push
popf
adc
push
pop
xchg
into
test
mov
dec
scas
mov
jp
loopne
out
decb
sti
imul
dec
fistl
adc
cmpsb
add
iret
push
xor
fisubrs
orb
lods
sbb
dec
sbb
xlat
ret
insl
inc
rorl
jmp
mov
push
out
add
pop
imul
jecxz
mov
inc
cli
scas
dec
pop
xchg
mov
imul
dec
adc
dec
push
fs
push
scas
fnstsw
mov
dec
pop
dec
lcall
je
push
or
push
add
xchg
les
mov
dec
sbb
cmp
sub
ret
xor
xor
icebp
or
mov
mov
in
repnz
xor
mov
push
shl
pop
loope
dec
or
je
xchg
fnstenv
mov
in
fwait
popa
iret
mov
dec
xor
in
dec
dec
lahf
xor
aaa
cmc
mov
dec
inc
idivl
scas
mov
push
mov
jb
push
mov
mov
das
and
cmp
xor
dec
in
sbb
ret
mov
or
dec
xor
adc
loop
test
adc
pop
loopne
cmc
dec
jne
ja
stos
xor
lahf
call
insb
cmp
das
lock
dec
mov
outsb
jl
inc
dec
dec
push
cwtl
mov
mov
shrb
dec
scas
fadd
aam
in
pop
push
js
cmp
lock
scas
mov
pop
mov
inc
dec
test
inc
popw
dec
roll
mov
fs
xchg
mov
cmp
movsl
jbe
dec
and
adc
pop
pop
das
sbb
test
add
jo
and
sarl
cmp
or
shrb
addr16
int3
shrb
inc
or
xchg
xor
leave
dec
femms
hlt
mov
dec
jbe
jnp
mov
add
mov
adc
dec
xor
cmpsb
jbe
mov
cmc
mov
dec
push
ss
movsb
cmc
into
adc
sbb
out
xor
dec
hlt
dec
add
loope
addr16
lods
dec
dec
inc
xor
jns
enter
cmp
dec
pop
xchg
ljmp
enter
mov
cmp
jmp
mov
xchg
cli
in
movsb
dec
lea
popa
and
sbb
cmp
out
xlat
sub
dec
jnp
stc
cmpsb
gs
lahf
dec
jbe
cmp
mov
inc
or
lds
daa
insb
dec
ljmp
ret
push
mov
cwtl
call
mov
or
dec
inc
ret
lods
inc
sbb
fs
dec
dec
movsl
xchg
mov
adc
loop
xlat
push
jp
jno
sbb
lcall
insb
adc
in
ds
lds
repz
jnp
adc
rorl
sbb
mov
xor
sub
insb
icebp
dec
sbb
and
loopne
mov
sub
mov
dec
mov
sbbb
push
sbb
dec
ljmp
lods
jl
pushf
imul
dec
fndisi(8087
mov
dec
sbb
cmc
sbb
mov
push
mov
adc
jne
pop
bound
cs
dec
mov
jb
test
jne,pn
inc
movsl
push
lahf
rorl
add
fmull
fidivrl
cmp
mov
xchg
sub
lods
fdivrl
movsb
dec
outsl
adc
add
les
mov
arpl
jg
sub
icebp
call
lcall
xor
mov
dec
fadd
cmc
sbb
fsub
sub
dec
not
fwait
loope
icebp
addl
sbb
lcall
jg
test
pop
sub
and
cmpsl
xor
mov
xor
pop
jle
decb
xchg
in
push
and
outsb
movsb
lods
push
mov
xor
lea
and
dec
es
jb
ficoms
scas
sbb
push
dec
dec
adc
mov
or
or
in
pop
test
shll
in
fimull
xchg
fs
pop
lds
sbb
push
dec
cmc
loopne
into
mov
sahf
and
adcl
dec
mov
cmp
push
inc
cmp
jp
dec
jae
mov
mov
xchg
adc
push
push
adc
jo
mov
js
jg
stos
addr16
dec
pop
cs
arpl
mov
enter
mov
orl
mov
imul
xor
sbb
pop
rcrb
cli
test
test
dec
cmpsb
dec
dec
mov
aam
pop
push
popf
lock
jns
xchg
xchg
pop
sub
push
repnz
xchg
les
lea
push
lock
in
xchg
int
or
popa
in
mov
jno
sahf
or
rclw
pop
or
imul
push
mov
xchg
imul
xchg
push
int3
aam
adc
mov
aad
push
inc
add
cltd
add
adc
frstor
lea
nop
mov
test
inc
fisttpll
mov
sub
adc
jo
pop
outsb
dec
xchg
std
push
mov
cs
nop
and
in
icebp
les
inc
lcall
push
pop
dec
adc
out
jno
outsl
mov
dec
push
daa
pop
bound
mov
jno
add
cwtl
push
shl
pop
gs
jle
jne
loop
adc
jns
popf
pop
cltd
sar
addr16
in
scas
push
orl
rclb
push
loope
ljmp
lock
push
and
push
pop
mov
repnz
dec
insl
pop
nop
push
lock
arpl
jge
pop
movsl
aad
bound
call
dec
adc
popf
jno
pop
xchg
cld
insb
cmp
lea
jno
xor
sbb
add
pop
pop
xchg
xchg
in
xchg
xor
je
ror
cmp
xchg
jne
push
in
push
mov
sbb
fdiv
push
gs
notb
lcall
jge
pop
mov
push
push
or
insl
or
imul
ds
fstp
dec
fdivs
call
push
icebp
std
ljmp
in
sbb
fistl
cmp
dec
or
pop
dec
xchg
fdivrl
mov
notl
das
popf
xchg
push
std
ja
test
idivl
sarb
adc
pop
icebp
and
pop
imul
xor
pop
lock
ja
jg
and
ret
bound
pusha
adc
pop
xor
cli
outsl
and
outsl
in
insl
fdivrs
lea
cld
scas
or
sub
dec
aas
push
push
movsl
and
push
push
sbb
cltd
mov
push
leave
push
insl
imul
add
mov
std
ds
shrb
push
xchg
sub
sub
sahf
insl
test
cmp
aad
pop
add
pop
std
pop
out
fwait
lods
cli
sahf
popa
push
push
push
aas
insb
lods
rcrl
pop
cld
addr16
pop
into
clc
xchg
fcos
add
dec
nop
and
out
add
test
dec
outsl
in
lahf
mov
pop
jle
xor
xchg
bound
xchg
adc
int3
gs
adc
lods
sbb
pusha
mov
mov
jns
cmc
lret
pop
mov
cwtl
imul
jle
in
inc
into
lods
pop
hlt
dec
pop
dec
lods
or
call
lahf
xor
gs
sub
lahf
jle
pop
mov
xlat
xchg
gs
data16
dec
push
jnp
int
dec
sbb
movsl
ja
aaa
stos
dec
call
aaa
lods
fistl
pop
sbbb
stos
lea
mov
xor
lcall
nop
lea
imul
mov
pop
lea
mov
fistpl
lea
lea
xor
loop
sub
mov
mov
inc
shrl
sahf
push
xor
sub
pop
pop
inc
mov
xchg
push
arpl
pop
cmc
pop
lea
imul
dec
push
push
pop
aam
dec
mov
xor
rol
or
push
ja
mov
jno
pop
aam
cs
sub
pop
sub
xor
insb
out
movsb
js
pop
add
jno
mov
mov
jns
jmp
jns
scas
cmp
push
sub
addr16
int
rolb
cltd
out
jle
dec
push
mov
and
gs
cmp
imul
test
mov
hlt
into
idivb
dec
aaa
mov
gs
and
add
mov
test
jp
jge
xchg
or
in
push
inc
sbb
jns
inc
mov
push
cmp
mov
addr16
inc
pop
xchg
insl
fsubs
jno
stc
jae
popa
enter
xlat
pop
aam
shl
sub
inc
subl
aas
adc
jns
mov
pushf
pop
jo
sub
ljmp
fwait
les
jge
jmp
cltd
push
cli
orb
shrl
std
aad
mov
cs
jge
clc
gs
hlt
xchg
sub
jmp
faddl
int
push
cmpsb
mov
xor
ror
popf
pop
sub
ja
push
stc
push
adc
xchg
stc
xchg
icebp
jo
cwtl
cmpb
in
insl
cwtl
andb
pop
enter
movsl
or
fisubrs
movsl
outsl
and
sub
xchg
sbb
test
xlat
sbb
add
cs
in
movsl
xchg
test
orl
adc
insl
pop
orl
adc
lock
or
loope
mov
adc
cmpsl
and
mov
xchg
sub
fiaddl
out
imul
dec
rclb
insl
std
lock
cltd
add
add
stos
mull
xchg
gs
addr16
push
stc
outsl
imul
lea
imul
bound
je
pop
cmp
and
ds
add
rclb
hlt
xchg
mov
dec
fwait
xor
es
jne
sub
jo
aad
ret
adcl
xor
xchg
adc
or
shll
scas
popa
clc
xor
loop
icebp
inc
call
das
pusha
js
lds
xorl
loopne
repnz
mov
insl
nop
adc
lds
cmc
outsl
imul
insl
mov
pop
xchg
pop
stc
pop
std
mov
inc
and
lcall
test
mov
ror
arpl
adc
adcb
pushf
and
int
int
enter
xchg
pop
inc
adc
xor
push
pop
xlat
cltd
sbb
rcrl
test
imul
cli
data16
jmp
adcb
testb
gs
outsb
xchg
fisubrs
movsl
clc
popa
insl
push
inc
gs
mov
into
mov
movsl
ds
loop
fnsave
push
cmc
pop
outsb
xor
xchg
imul
or
lahf
pop
mov
gs
add
icebp
and
mov
pop
popf
aam
jge
mov
dec
lcall
pop
dec
in
imul
cltd
jno
fimuls
inc
scas
mov
cltd
lods
push
jecxz
pop
jge
jne
outsb
fnstcw
dec
jg
add
jp
in
adc
outsb
cmp
dec
in
insl
ret
xor
push
jmp
mov
fstpl
cmpl
setbe
rorl
cmpsl
sub
mov
pop
negb
pop
mov
pop
pop
or
xchg
insl
pusha
and
sar
pop
mov
jg,pn
jecxz
pop
and
dec
xchg
jle
dec
test
lea
test
jno
adc
fnstsw
dec
outsl
adc
adc
fs
jmp
loopne
cmp
mov
leave
ja
dec
mov
rcrb
pop
push
fs
int
push
push
jae
mov
cwtl
es
sbb
xchg
mov
jo
push
adc
data16
ja
or
sarl
mov
lds
sub
xchg
popf
js
push
fsubr
aas
leave
xchg
das
cmpb
fisubs
add
popa
popf
push
and
in
decb
mov
pop
mov
popf
jmp
xchg
and
fnstenv
xchg
cmp
test
decb
cwtd
pusha
and
mov
xor
lret
sub
int
mov
scas
jo
lret
push
adcb
mov
jne
xor
popf
mov
push
or
bswap
loop
es
lea
dec
xlat
pop
sub
xor
icebp
mov
sub
in
mov
out
cmc
popa
movb
mov
lods
cmpsl
int
rcll
jno
loope
xlat
push
dec
pop
out
rorl
aad
sbbl
push
push
mov
fnsave
dec
pusha
sbb
pop
cld
inc
fnsave
xchg
in
and
xchg
jmp
ja
push
scas
mov
push
pop
xchg
dec
insl
adc
xor
lcall
outsl
sbb
fildll
jle
in
dec
aad
pop
add
jge
scas
cmp
push
ficomps
pop
outsb
sub
sbb
xlat
cli
or
sbb
add
push
jne
inc
insl
int
enter
mov
mov
ss
fistpl
push
mov
fcmovu
jge
jecxz
sbb
lds
add
cs
xor
outsl
add
add
in
jmp
lea
mov
or
icebp
popf
and
push
xchg
and
pop
fisttpll
lods
adc
mov
xchg
pop
repnz
sub
inc
jecxz
push
sbb
inc
iret
outsb
test
cltd
pushf
push
int
push
in
inc
dec
outsb
popf
mov
and
jbe
xor
lock
sbb
loope
xchg
sbb
pop
mov
or
or
xor
mov
jne
frstor
fistpll
shrl
ret
xchg
fisttpll
jne
nop
mov
jl
test
in
xchg
lds
mov
pop
jl
icebp
std
mov
sub
xchg
pop
pop
pop
pop
fiadds
push
jno
fisttpll
xorl
push
movsb
and
push
sahf
daa
and
xor
dec
mov
cmpsl
dec
fstp
xchg
dec
es
fsts
orb
add
xchg
pusha
dec
push
xor
dec
rcll
iret
inc
mov
in
scas
pop
fsub
not
jns
jnp
and
sbb
jns
dec
jo
stos
cltd
pusha
dec
lcall
mov
or
aaa
insl
cmp
add
je
adc
or
fs
cmp
hlt
jo
ficompl
lea
ja
jmp
push
and
inc
movsl
fst
cmp
jle
cmp
cmp
lret
mov
mov
rcll
mov
push
mov
movsl
cmp
mov
aas
push
call
mov
xchg
cld
shrl
incb
jne
cltd
cmp
jns
cmc
fidivs
dec
mov
pop
xor
pop
out
popa
cmp
xchg
das
push
inc
pop
cli
jle
inc
sub
jge
aas
outsl
lds
cltd
xchg
orl
inc
int
pop
push
ds
sahf
dec
nop
adc
loopne
repnz
test
int
add
jns
add
jmp
adc
push
mov
cmc
xor
sub
bound
sub
mov
loopne
out
dec
lea
push
mov
fucomp
icebp
lea
out
mov
in
and
nop
push
add
aas
ja
out
popf
lea
xchg
iret
ds
pop
or
push
push
outsb
out
movsl
pop
aas
xchg
nop
filds
nop
push
and
and
jns
mov
fs
pop
sbb
sahf
pcmpeqw
mov
repnz
iret
mov
push
jbe
jp
push
movsl
aad
jg
arpl
divl
dec
mulb
xchg
decl
aaa
leave
pop
pop
jge
ljmp
pop
jo
xchg
std
or
shrl
mov
lds
pop
insl
lea
arpl
pop
sbb
inc
cmp
mov
inc
sub
jbe
lea
dec
sar
pop
mov
mov
lahf
mov
sbb
mov
mov
cli
lods
in
or
lods
sbb
lahf
movsb
out
add
sahf
dec
icebp
push
push
dec
push
fdivrp
sub
pushf
or
mov
adc
std
ljmp
lea
cmp
cli
insl
push
xchg
sbb
dec
inc
adc
gs
xchg
mov
scas
pop
pop
jns
xchg
je
popf
lds
popf
mov
sbb
cmpsb
mov
pop
rcrl
mov
pop
movb
dec
adc
stos
insl
and
jle
dec
cmp
in
pop
mov
or
mov
outsb
out
inc
data16
pop
mov
lods
jmp
xor
gs
add
add
push
mov
out
jo
add
pop
push
jae
lea
ret
push
jo,pn
push
bound
outsl
das
insl
outsl
add
cmp
xchg
push
ljmp
sub
data16
lea
jne
insl
outsw
shll
lahf
lods
pusha
pop
out
add
add
shll
icebp
mov
adc
scas
shrb
bnd
fisttpll
cmc
pop
inc
sbbb
sahf
dec
out
xchg
outsl
dec
mov
es
add
filds
jmp
push
pop
orb
push
iret
xchg
popf
adc
mov
cwtl
mov
adc
ds
ds
jle
jo
push
shl
pop
leave
xor
jecxz
rcr
adc
push
dec
aas
push
arpl
cmovs
iretw
xor
mov
xor
inc
xor
repnz
rolb
jae
ja
popf
xchg
out
imul
fnstcw
pop
pop
out
xchg
jp
or
outsl
push
testl
sti
pop
in
lock
sub
mov
mov
shrb
xchg
sbb
jbe
outsl
aad
mov
fists
mov
loope
xchg
or
or
jge
repz
xchg
mov
inc
shll
add
inc
or
dec
sbb
aam
mov
or
lea
test
out
xor
jno
push
mov
push
rorl
mov
dec
adc
dec
aas
fwait
or
test
pop
xor
pop
add
fstl
xor
jns,pn
stc
push
sbb
dec
add
inc
mov
pop
push
push
fwait
jno
mov
rclb
jns
push
and
xor
orb
je
mov
popa
addr16
out
repz
dec
mov
pusha
push
aad
pop
lea
faddp
jg
gs
cmp
lods
push
pop
mov
ljmp
fidivs
inc
inc
and
mov
in
lahf
popa
outsl
lods
push
xor
ss
fstpl
insl
inc
lea
jbe
add
test
cli
popa
fsts
pop
mov
insl
jne
sub
mov
roll
adc
jne
arpl
mov
cltd
data16
adcb
movsl
push
add
int
dec
in
pop
jle
mov
cmp
sarl
mov
into
adc
gs
inc
std
js
pop
pop
cmpsb
sahf
lcall
pop
cmp
loope
fucom
mov
out
cwtl
notb
adc
popa
mov
jae
mov
dec
inc
cmp
fidivs
outsb
ret
lods
loopne
mov
mov
outsl
in
out
lret
divl
out
hlt
push
sahf
movsl
lds
mov
adc
mov
jne
jbe
shll
dec
mov
call
scas
sbb
cmpsb
ret
dec
fisubs
stc
adc
mov
xchg
adc
jne
stos
jmp
xor
or
aas
out
jno
jbe
dec
push
or
push
cld
cmp
xor
scas
and
or
aam
test
popa
dec
dec
mov
or
lods
data16
sbb
fwait
cmp
fucomip
popa
lods
test
xchg
jbe
pop
mov
cmp
or
hlt
icebp
das
loop
test
mov
push
mov
test
fstl
mov
xchg
pop
sahf
sbb
xor
and
mov
fs
jp
test
gs
add
mov
outsb
mov
xor
loopne
fsub
hlt
fistps
pusha
in
rclb
mov
xor
int
push
ret
mov
lods
lds
rcrb
std
jae
xchg
push
cmpsb
mov
jecxz
pop
xor
orl
lock
fwait
mov
xchg
pop
mov
or
dec
ljmp
ficompl
movsl
lea
ss
dec
test
sarl
jne
mov
xor
jns
and
pop
and
insb
jmp
int
sti
cmp
lock
in
sbb
mov
sub
fwait
into
test
out
std
mov
jne
cmc
jg
pop
and
into
lcall
sub
push
mov
mov
jns
mov
mov
mov
adc
pop
jle
cmpsb
call
push
addr16
loopne
es
mov
jbe
jmp
repz
and
cmpsl
imulb
jl
mov
shll
mov
out
subl
mov
clc
setl
ja
sbb
mov
push
dec
push
sti
push
inc
jl
adc
adc
adc
push
ja
movsl
xor
loope
jbe
dec
lahf
adc
out
cs
lods
mov
add
lret
jnp
imull
ds
cs
and
xchg
adc
es
jnp
pop
mov
lds
add
jp
mov
xor
rorl
jp
or
push
int
lods
and
in
cld
call
mov
sar
or
popf
sbb
js
sahf
dec
insl
inc
in
jle
int
clc
cmp
bsr
movsb
iret
fisttpll
pop
pop
pop
lea
inc
shll
and
xor
cmp
ror
popa
je
in
mov
cltd
es
rclb
push
adc
xchg
mov
test
mov
aad
pop
std
mov
stos
lea
cmp
push
aad
and
insl
jo
xchg
out
or
in
jno
push
xor
inc
out
and
sbb
fisttps
jo
jno
add
pushl
jns
cmpsl
cmp
mov
inc
outsb
inc
jno
adc
out
mov
aas
in
frstor
icebp
pop
into
jecxz
adc
insl
pop
movsl
mov
push
jne
xchg
sbb
pop
addb
stc
popf
and
mov
sbb
lahf
test
insb
push
adc
insb
adc
dec
in
dec
jp
jb
sbb
icebp
repz
push
cmp
dec
enter
pop
and
js
pop
insb
or
aad
pop
mov
sbb
pushf
fs
dec
scas
jno
push
mov
aaa
nop
mov
cmp
mov
outsb
or
cmp
inc
call
xor
insl
pop
out
sbb
fidivrs
jbe
mull
aaa
mov
repnz
cmp
xchg
addl
or
mov
repnz
dec
add
mov
xor
adc
dec
insl
cmc
push
xor
cmp
int
pop
cmp
mov
jge
push
inc
insl
popf
add
push
inc
loope
mov
pusha
inc
lock
cmpl
sub
int3
shl
hlt
pop
xchg
or
or
xorb
pop
cs
pop
lret
sbb
xchg
mov
popf
mov
jne
mov
pop
scas
aaa
inc
std
cli
cwtl
aas
into
lcall
rcrb
and
loop
xor
lea
pop
test
mov
lds
xchg
aad
popf
cmp
ss
outsl
inc
xchg
mov
rcll
clc
pop
out
jecxz
sahf
xchg
sbb
mov
sti
pop
sub
add
jno
push
pop
mov
jne
cmpsb
push
test
idivl
jl
call
jmp
cmpsl
inc
mov
repz
icebp
imul
mov
sahf
imul
fwait
pop
sahf
mov
adc
push
fimuls
dec
mov
cmpsb
lods
outsl
es
xchg
test
jo
push
or
xlat
int3
cs
xchg
ss
repnz
rolb
lcall
aaa
std
jne
lods
xor
dec
das
add
cwtl
jne
dec
mov
and
shrl
mov
sbb
jmp
pusha
bound
test
cmpsb
cmpl
xor
lods
dec
xor
xchg
jg
mov
xchg
outsb
sbb
sub
mov
loope
mov
mov
inc
fs
call
lahf
mov
cmp
jb
jge
xchg
dec
mov
push
mov
sbb
mov
cmp
add
add
lea
insl
into
xor
shl
push
into
lds
lods
cmp
mov
xlat
jns
inc
bound
push
inc
push
add
cmp
jge
add
and
test
mov
fldl
insl
cmp
setge
mov
push
jl
loopne
mov
cmp
inc
xor
or
imul
mov
adc
cmpsb
mov
sbb
xchg
dec
push
push
cmp
lcall
mov
adc
and
lds
in
push
jbe
xor
imul
scas
mov
or
int
or
pop
xchg
jno
push
in
pushf
loopne
pop
ficoms
ds
repnz
jg
aas
pop
jl
inc
or
jne
push
xchg
pusha
add
xchg
popa
ss
or
nop
aas
out
popa
subl
dec
cmp
in
cli
shlb
rcll
jge
cmp
sbb
lea
je
pop
xchg
test
sub
push
add
loope
fsubrs
sbb
inc
fbld
mov
js
fxch
fists
sahf
mov
add
minps
flds
aaa
ret
cs
dec
mov
dec
push
push
cmp
lahf
hlt
xor
cli
cwtl
and
dec
mov
xchg
outsl
sbb
subb
aas
std
xchg
das
scas
pushf
sub
cmpsl
icebp
push
cmp
sbb
mov
lahf
testb
sub
push
les
rcr
subl
inc
in
test
shlb
sub
bound
test
cmp
in
add
push
int
jg
ret
lods
jp
or
push
pop
push
xchg
sti
shrb
loop
flds
pop
cmp
popa
lods
js
jg
sbb
jnp
ja
repnz
iret
scas
mov
push
or
into
xor
mov
repnz
pop
lds
aas
das
fwait
pushf
dec
pop
push
std
and
outsl
sar
imull
scas
xor
in
repnz
daa
push
shll
dec
push
add
sub
push
add
sbb
jne
imul
addr16
jb
pop
pushf
fidivrl
lods
push
bound
mov
mov
ljmp
xor
pop
sub
sub
and
jge
out
test
push
mov
pop
push
mov
imul
dec
sbb
cltd
or
xchg
stc
jmp
movsl
add
je
add
jo
sbb
popf
dec
mov
jo
xlat
sti
movsl
adc
jae
lds
cmp
in
jb
cltd
stc
rclb
rolb
mov
xchg
cmc
dec
and
enter
mov
or
in
inc
jmp
add
aad
jle
dec
sub
adc
adc
mov
or
xchg
pushf
mov
rol
ss
jecxz
mov
push
dec
sbb
pop
outsl
pop
std
in
mov
or
aam
fs
xlat
das
sahf
push
inc
test
jl
inc
jge
ss
or
sub
test
cmp
scas
std
mov
popa
sub
jp
test
push
push
or
jge
sbb
popa
push
cld
jo
fwait
add
negb
in
fisttpll
push
mov
scas
inc
jbe
idivb
nop
sub
xchg
mov
mov
jp
jne
fwait
xchg
aas
out
mov
jecxz
out
inc
iret
mov
cwtl
popa
cmpsb
mov
xlat
jmp
jnp
xchg
daa
popa
lea
lods
fbld
repz
arpl
fnsave
fcmovb
not
cwtl
movsb
daa
ret
mov
mov
std
pusha
xchg
sub
pop
mov
xorb
jne
add
popf
cltd
mov
loop
aad
push
push
in
jmp
incb
pop
filds
pop
in
and
lods
pop
or
mov
inc
lea
stc
xchg
sahf
mov
scas
mov
mov
std
stos
mov
lea
aad
mov
sub
cmp
sub
mov
cld
fs
sahf
outsb
mov
pop
mov
xchg
jns
outsl
sbb
ss
and
dec
and
jbe
fstp
insl
sub
xchg
loop
in
fimuls
dec
pop
dec
repnz
mov
sbb
cmp
or
cmpsl
addl
scas
test
aad
frstor
adc
popa
sbb
pop
xchg
inc
sahf
pop
fldcw
lahf
ret
dec
push
mov
sahf
adc
jmp
add
sahf
cs
ja
test
in
pop
mov
std
lods
xchg
push
mov
sbb
push
jbe
add
xor
lds
xor
xchg
sahf
dec
pop
pushf
in
mov
and
shrb
je
mov
aad
popa
ret
adc
dec
cmc
mov
push
push
test
add
out
push
sarb
jmp
gs
scas
push
cmp
loopne
scas
in
cmpb
jb
pop
ds
push
testl
rcrl
xchg
or
xchg
iret
popf
mov
sarl
xor
mov
push
bound
mov
xchg
pop
fistpll
xor
mov
push
jno
and
dec
and
mov
outsb
mov
jle
mov
and
loop
fwait
in
mov
mov
mov
pop
sub
popa
pop
jbe
das
jmp
pusha
popf
ret
bound
xchg
outsb
in
jno
dec
fimuls
mov
add
xchg
mov
jmp
pop
je
aas
loopne
cli
cwtl
push
ret
sub
iret
push
ja
jle
mov
loope
dec
addr16
lods
mov
insl
jae
lods
add
lea
mov
xchg
ret
mov
xor
jg
js
ret
jbe
das
pop
or
push
adc
inc
mov
push
adc
push
cltd
fimuls
sahf
out
dec
jae
cmpsb
das
mov
popf
xchg
pushl
sbb
fsubp
std
inc
pop
das
mov
in
aad
lds
fcomp
cli
aad
scas
or
jne
push
insl
cmc
daa
dec
int
pop
mov
pop
cmpb
insl
fwait
int
loope
mov
xor
xchg
cmpb
jne
iret
xlat
insl
dec
and
cmp
fmull
inc
pushf
lahf
or
push
stc
call
xchg
loope
sbb
addb
out
add
inc
mov
sbb
popf
lds
mov
inc
das
mov
scas
mov
fwait
movsl
mov
test
gs
nop
out
push
and
in
mov
mov
jne
inc
mov
rcrb
arpl
add
into
cs
xor
push
imul
inc
mov
aad
outsb
popa
push
lahf
arpl
jne
mov
lds
lock
mov
jno
movsl
popf
xchg
jp
sub
mov
xor
gs
shll
imul
imul
adc
in
adc
out
and
push
loopne
aad
adc
push
sbb
xchg
out
test
pop
mull
xchg
loope
inc
ljmp
cmp
adc
insl
jge
push
ror
lods
notb
test
push
lods
mov
jbe
scas
lock
xlat
lods
movb
xchg
fstpl
test
adc
int
js
add
arpl
cmp
push
loopne
or
mov
es
inc
insb
pushl
mov
mov
push
jns
mov
adc
inc
incb
adc
std
fcoms
mov
pop
dec
pop
lcall
mov
outsl
scas
cwtl
lret
and
jb
xor
push
aas
pushf
pop
jle
add
mov
push
cmp
dec
out
and
punpckhdq
mov
inc
lods
fwait
push
dec
bound
mov
leave
mov
gs
jb
pop
mov
pop
in
and
nopl
mov
and
out
jns
shll
cmc
data16
inc
xchg
pushf
xor
inc
jo
jecxz
push
out
insl
scas
daa
movsb
fiaddl
loope
lea
jp,pt
movsl
mov
jl
loopne
push
dec
fucom
pop
jno
mov
loopne
push
testb
xchg
out
cmp
sbb
imul
into
sbb
sti
mul
pop
push
in
xchg
mov
mov
fisttpll
add
xor
push
jmp
lock
inc
dec
jne
and
jmp
repz
mov
mov
jae
ljmp
data16
stos
sti
xor
outsl
sub
shr
mov
das
loopne
cmp
or
mov
mov
sar
out
je
out
js
fwait
test
shlb
pop
or
lret
pop
gs
sbbb
stos
mov
fwait
int
inc
cmpsl
cmp
jmp
add
xchg
and
sub
inc
sbb
mov
scas
sbbl
bound
sub
or
lea
lret
out
fbstp
sub
push
jo
and
clc
mov
add
xchg
aas
icebp
cmpsb
out
hlt
aam
dec
aad
jne
sahf
lret
repnz
imul
cli
push
and
push
mov
fisubrs
xchg
out
push
mov
mov
jmp
push
xchg
jecxz
add
loope
daa
adc
sbb
sbb
stos
ret
sar
push
out
xor
jle
in
loopne
jne
icebp
xor
mov
cltd
mov
outsb
mov
shrb
out
repnz
jp
mov
movsl
insb
mov
test
dec
push
outsb
and
jp
xchg
cmp
gs
xlat
sub
mov
jno
sbb
mov
push
jns
popa
sbb
adc
xorl
xchg
pop
iret
xchg
lds
jmp
cmp
in
add
xchg
jle
dec
pop
insl
es
sub
push
rclb
std
popf
xchg
insl
mov
cwtl
mov
gs
fstpt
mov
cwtl
aad
mov
sub
in
mov
in
outsb
dec
cli
fcomi
test
dec
sbb
sbbb
inc
xor
test
roll
sbb
dec
bound
jb
xor
sar
sbb
pushf
cmp
sbb
cmp
add
icebp
mov
pop
jno
mov
and
dec
movsb
jp
cmp
inc
sub
push
jle
mov
mov
cli
jb
push
cwtl
dec
mov
sbb
test
cltd
insl
mov
dec
lea
dec
fistpll
jne
push
lods
add
or
and
sahf
jmp
cmp
add
orb
push
clc
jno
inc
jns
fbstp
pusha
cld
add
in
cmc
aad
loope
inc
aas
add
ja
data16
add
in
std
daa
or
out
call
ret
loopne
push
push
ret
fs
mov
cmc
out
mov
pop
repz
adc
popa
addr16
or
imul
sbb
mov
add
pop
insl
int
in
mov
jno
dec
or
popf
dec
xchg
pop
pusha
enter
mov
pop
sbb
cmp
adc
fldl
push
and
popf
jge
sti
jno
lock
jns
insl
outsb
push
sbb
jo
xchg
fwait
adc
lods
jmp
call
out
cli
sbb
jle
testl
fwait
in
add
push
fldenv
lds
lods
sub
addr16
jle
jg
mov
insl
jle
mov
xchg
xor
ret
pop
sbb
pushf
xchg
ds
int3
mov
inc
xor
outsb
xor
pop
pop
daa
jg
dec
dec
ficomps
outsb
xchg
pop
xlat
sbb
cli
pop
add
pop
repz
add
push
lea
les
push
inc
out
dec
insl
ja
movsl
hlt
in
enter
sbb
inc
sub
subl
mov
fisubs
add
test
xlat
in
rol
adc
jmp
aas
icebp
adc
xor
cmp
mov
movsb
fneni(8087
daa
jle
mov
pop
testb
in
sub
dec
mov
adc
loop
faddl
nop
jns
out
fldcw
push
inc
ret
xchg
or
xchg
fsubl
jno
push
add
cltd
gs
mov
xchg
icebp
aaa
dec
idivb
fldl
push
dec
inc
ss
sub
sub
jb
test
bound
loope
fs
push
push
addr16
cmp
pusha
dec
ds
inc
addr16
lea
xchg
inc
aad
pop
pop
in
mull
sub
sbb
mov
mov
add
popf
mov
xchg
wbinvd
xor
mov
lret
adc
int
jno
xlat
lock
rclb
jmp
outsl
mov
stos
xchg
mov
push
into
sbb
inc
in
je
push
dec
es
lahf
adc
lret
loopne
mov
out
sub
lea
movsl
mov
or
mov
xor
jge
xchg
pop
pusha
lcall
push
jns
mov
push
out
ss
jnp
inc
xor
push
jmp
pop
loope
in
xor
cmp
jbe
push
icebp
push
or
iret
xchg
jp
and
out
push
or
mov
add
js
sahf
pushf
js
jmp
mov
adc
popa
adc
fwait
mov
lods
orl
inc
pop
addr16
ja
pop
xchg
fldlg2
pop
mov
xlat
shlb
aam
mov
test
mov
mov
aad
mov
adc
adc
stos
popa
jnp
cmpsb
pop
pusha
daa
sub
push
mov
mov
push
mov
sahf
outsl
pop
ljmp
rorl
dec
stos
sahf
pop
dec
cli
cmp
outsb
inc
pop
xor
or
xor
in
icebp
lds
ja
fisubs
mov
fldl
xor
insb
in
pop
pusha
or
cmpb
shrl
jno
push
mov
test
push
sbb
inc
out
sub
lods
sbb
sub
cmc
jns
movsb
in
or
rorb
jno
pop
jb
mov
jle
cld
fwait
adc
mov
ss
lret
mov
fstpl
shll
xor
and
lret
or
movsl
movsl
xor
adc
std
in
jl
pushf
fstpl
pop
insl
pop
or
push
test
lahf
in
mov
js
or
jmp
or
xchg
jecxz
mov
xchg
add
cwtl
jns
and
pop
mov
jne
sub
lods
imul
mov
pop
mov
lds
jno
add
insl
cli
jp
mov
xchg
jno
push
fnsave
lods
fadds
movsb
mov
icebp
dec
mov
icebp
dec
mov
icebp
push
mov
icebp
push
mov
icebp
pop
mov
icebp
pop
mov
pop
bound
pop
fistpl
std
and
cmp
xor
repnz
shlb
out
int
xor
repnz
std
cmp
lret
ljmp
mov
push
mov
test
dec
inc
data16
icebp
pop
pop
jp
mov
mov
or
or
adc
pop
jbe
and
test
push
mov
xorb
int
push
lahf
push
nop
cmp
mov
or
push
fbstp
fistps
mov
cmc
xchg
xor
sbb
fnstsw
push
mov
arpl
test
lds
negb
xchg
xchg
dec
xchg
mov
shrl
push
mov
int
mov
adc
add
in
and
lea
push
inc
filds
or
sub
pop
pop
cwtl
inc
stc
dec
ds
leave
jne
stos
ljmp
shrl
mov
mov
repnz
jle
nop
fstpl
lahf
test
movsl
in
fwait
xor
sub
xor
insb
lahf
jp
popa
jne
insl
and
outsb
xchg
fisubs
aad
mov
cmpb
js
jl
jo
jmp
out
jecxz
sbbb
scas
std
pop
xchg
in
xchg
aas
xchg
mov
lret
out
cli
mov
outsb
xor
push
rolb
pusha
hlt
mov
push
xor
lods
mov
xchg
pop
pop
subl
or
push
insl
mov
or
cs
fistl
ds
mov
adc
sti
imulb
outsb
loopne
dec
test
mov
lods
hlt
lods
push
lods
mov
xlat
dec
out
ss
adc
dec
pushf
add
lods
pushf
pop
gs
subl
push
xlat
fldl
insb
pop
lods
sar
mov
jne
adc
sbb
push
jp
movsl
cmpsl
push
sbb
cltd
cld
or
cmp
jb
jne
add
pop
popa
imul
outsl
fidivrs
orb
xor
stos
add
and
scas
cmc
mov
loope
push
sbb
push
pop
movsb
cmp
loope
outsb
jbe
out
movsb
inc
mov
in
in
and
sub
adc
xor
mov
out
add
mov
out
xor
sbb
stos
lret
and
pop
fcmovbe
sbb
push
push
add
sub
pop
mov
xchg
adc
out
pop
lea
lods
mov
lea
dec
leave
and
pop
popf
or
xor
jmp
lcall
pop
sbb
arpl
push
xchg
scas
outsb
add
pop
cmp
int3
fisttpl
cmp
or
outsl
sbb
out
scas
pop
mov
jecxz
fisubrl
movb
loope
insl
inc
repnz
aad
scas
loope
xor
lods
inc
aad
mov
adc
or
and
mov
add
sub
lea
mov
aas
push
aaa
pop
and
sbb
test
xchg
xchg
pop
xchg
xor
or
jle
pop
pop
xchg
pusha
mov
xchg
and
jae
out
insl
and
cs
test
inc
xchg
inc
insb
mov
or
pop
or
fistpll
xchg
mov
mov
rclb
stc
push
popa
lea
push
lret
out
popf
jle
mov
or
pop
pop
pop
ja
jae
xchg
xor
movb
and
add
lea
addr16
jg,pn
or
sbb
jg
add
add
int3
add
or
ret
ret
cltd
xchg
inc
cmp
dec
jb
mov
rcl
jns
and
push
fisttpll
jo
dec
test
push
dec
inc
xchg
cwtl
mov
lcall
js
xchg
or
xchg
inc
push
mov
bound
movsl
mov
jo
shrl
jg
or
aad
or
into
adc
or
in
cld
adc
pop
pop
rol
rorl
cmpb
xlat
and
sub
stos
cmp
and
cmpsl
xchg
aaa
mov
jecxz
das
into
stos
push
sub
loope
xor
pop
data16
outsb
fdivrs
pusha
pop
cmp
lahf
loopne
into
testl
imul
mov
adc
movsl
push
jge
inc
cmpsb
jbe
jecxz
aam
stos
adc
inc
mov
xchg
jae
sub
iret
lea
mov
cli
sub
mov
cmp
cmp
into
iret
test
lea
loop
xlat
mov
jmp
shll
es
pop
out
pop
test
pop
addb
mov
es
shll
sbb
das
out
and
mov
mov
nop
push
jge
jp
mov
aad
ss
ljmp
lds
stos
pusha
sbb
lock
push
add
add
imul
or
lea
sti
mov
pop
pop
fistpll
adc
mov
sbb
lea
in
mov
outsl
fnstcw
xor
jo
jge
sarl
push
das
pusha
pop
jb
sahf
in
inc
loop
xor
ficompl
sbb
rcl
sbbl
vpshlw
cmp
mov
mov
push
sub
xor
data16
jp
fsubr
xor
inc
jge
es
mov
cltd
dec
mov
aam
pop
sbb
push
xor
lret
inc
loop
dec
mov
shll
xor
cltd
inc
test
push
or
add
movsl
bound
xor
mov
push
adc
insb
push
loop
sarl
int3
jmp
int
jg
cmpsl
or
mov
fstl
mov
dec
icebp
xor
cwtl
dec
cmp
mov
sub
cmp
in
fcoms
jl
popa
jo
ficoms
test
rcll
push
movb
lret
mov
xchg
cmp
fistl
adc
rcll
ret
bound
xor
pushf
sub
aam
in
jne
lcall
and
stos
movsl
mov
xor
lret
cmpsl
loope
mov
cs
jp
sub
jmp
mov
push
gs
loop
add
stos
punpckhbw
bound
jns
incl
xchg
lds
xchg
in
or
cli
movsl
into
jecxz
pop
repnz
or
push
dec
sbb
push
adc
mov
out
fldcw
sbb
fmull
sbb
jmp
out
cltd
fidivrs
push
sub
stos
adc
pop
push
fnstcw
cmpsb
push
push
arpl
sub
in
xor
rcrl
push
dec
jmp
rcrl
mov
notb
ljmp
cmp
dec
imul
sbb
mov
je
loop
sbb
mov
pop
mov
or
jmp
sbb
lahf
push
roll
pusha
insl
cwtl
movb
inc
sub
aas
out
aad
sub
mov
jo
inc
pop
cli
lock
cmp
mov
inc
cmc
sbb
loop
fiadds
outsb
fnstsw
cltd
or
adc
leave
pop
cmc
push
push
jg
xchg
mov
icebp
sub
ja
outsl
movsl
leave
jno
jle
je
pop
jne
iret
mov
fistps
clc
xchg
fmuls
aaa
scas
insl
mov
jno
ja
sbb
pop
out
lret
shlb
xchg
xor
test
dec
add
lret
mov
aaa
rorl
mov
sub
out
out
je
inc
lds
lock
popa
xchg
push
inc
mov
fiadds
aas
dec
jmp
jbe
ret
cmp
fnstenv
inc
and
lret
xchg
cmp
adc
adc
shrb
enter
insl
xchg
mov
rorl
jns
or
mov
aam
movsl
xchg
outsb
stos
popa
pop
inc
xchg
lea
dec
dec
lahf
xchg
clc
mov
out
pop
inc
xor
xor
adc
push
cmp
into
xchg
lock
adc
add
cli
movsl
pop
jmp
out
data16
push
mov
mov
pop
loop
sbb
or
lea
ret
mov
mov
out
xchg
mov
je
push
pop
jns
rcrb
push
add
xchg
dec
or
dec
lea
fisubs
add
das
mov
push
jp
jns
ss
xchg
into
int
xor
pop
bnd
es
adc
adc
insl
adc
xorb
ljmp
add
add
int3
mov
into
jle
jp
fstpt
loope
lods
stos
push
push
pop
int
in
jge
xchg
js
push
out
cwtl
in
jmp
and
mov
aad
adc
dec
aas
mov
rol
cli
ficomps
inc
mov
sbb
popa
xchg
fstps
jmp
sbb
or
stc
mov
adc
ficoms
shlb
xor
icebp
test
mov
cltd
scas
jno
aas
jne
aad
or
xor
push
xor
jae
ret
cli
cmpsb
mov
push
push
xor
jge
push
fstps
mov
ja
jmp
jne
sti
cmp
fcomps
into
pop
out
mov
aad
lods
jne
insl
mov
jle
scas
aas
outsb
addr16
mov
je
divl
sahf
mov
outsb
mov
jns
lods
sbb
and
aaa
sahf
xlat
out
movsl
or
and
jmp
add
xor
outsl
iret
push
mov
jecxz
ss
and
xchg
outsl
mov
sub
insb
cmp
jo
mov
add
lock
ret
mov
mov
int
ret
loopne
xor
js
hlt
test
jg
negb
gs
sahf
pusha
pop
clc
fidivrs
out
sahf
dec
and
jo
movb
mov
cmp
scas
push
pop
xchg
sahf
test
lds
outsl
dec
enter
inc
lea
xchg
inc
or
cmp
cmpl
mov
push
pushl
stos
mov
cli
out
mov
loop
jmp
and
sub
enter
push
or
lcall
dec
jbe
mov
aas
jae
inc
inc
sahf
push
aas
lret
mov
daa
aaa
out
mov
sahf
push
push
or
push
scas
test
sbb
bound
lods
or
stc
adc
mov
xchg
cmpsl
cmpsl
dec
jecxz
jb
xor
inc
jo
lods
ds
push
push
add
pop
jne
and
popa
push
shrl
adc
ja
inc
cmp
test
mov
push
inc
dec
test
adc
lret
cmp
incb
cltd
sub
mov
adcl
mov
scas
jae
xchg
jle
outsb
outsb
sbb
jbe
sbb
xchg
fstl
test
hlt
je
negb
mov
mov
adcb
jnp
shrl
into
in
mov
ljmp
sub
enter
mov
jb
scas
mov
loop
mov
fwait
stc
orb
das
gs
xlat
sahf
mov
mov
jp
and
mov
xchg
call
push
mov
js
mov
in
pusha
jb
ds
les
fsubs
rclb
pop
in
mov
mov
popa
add
pop
movsl
fs
mov
cmp
mov
cmpb
mov
pop
sahf
sbb
jae
bound
ss
pop
mov
jno
subl
cltd
sub
inc
int
lock
popl
loop
adc
ds
mov
jb
jle
sbb
and
mov
into
repnz
dec
adc
push
and
insb
int
lock
test
dec
mov
insl
xchg
inc
lds
push
int
pushw
xchg
popf
mov
popf
in
addl
push
out
mov
in
inc
pusha
push
jne
jae
iret
mov
mov
sub
in
fcompl
and
lret
andl
fsubrp
sbb
ja
mov
sbb
fnstcw
sbb
out
das
or
mov
decb
jno
cmp
mov
stc
and
negl
or
pop
rorb
fucom
shl
cmpsl
mov
orl
cwtl
jne
mov
push
add
mov
out
add
lds
pusha
dec
jo
inc
dec
pop
cmpsb
mov
in
sahf
jnp
cmp
dec
cld
loop
addb
in
dec
sbb
jo
mov
mov
divb
sbb
inc
insb
and
adcl
jbe
or
popf
mov
int
pop
pusha
std
sub
test
stos
outsl
movsl
test
iret
jns
cmpsb
iret
adc
jns
mov
sbb
dec
aam
insb
leave
push
ficomps
jmp
stos
pop
int3
and
outsb
popf
in
xor
mov
xchg
jb
cmp
mov
jne
popa
jge
test
lea
xchg
mov
xor
test
pop
inc
cltd
gs
aad
es
xchg
mov
push
or
pop
mov
mov
xor
sbb
or
cmp
call
int
mov
pop
xor
test
sbb
sbb
push
jno
or
fiadds
out
sub
cmpl
fistps
rorl
sub
xchg
mov
xchg
pop
push
dec
inc
or
cli
mov
ss
push
std
add
sti
jnp
inc
mov
outsl
add
loope
sbb
nop
mov
push
xchg
pop
mov
movsb
add
stos
mov
cmp
cmc
lods
insl
std
lea
call
popf
arpl
and
sarb
pop
jg
dec
lds
xchg
sub
popf
aad
data16
shrb
lods
mov
dec
lock
cwtl
lret
dec
mov
hlt
cmp
cmc
movsl
cld
mov
add
add
cmp
or
sub
sahf
je
fidivs
mov
sahf
ret
fcomip
mov
inc
sbb
or
adc
stos
xor
push
mov
jne
std
lahf
lds
push
push
add
dec
dec
xchg
rcrl
ret
xor
test
push
stos
pop
xchg
inc
int
dec
pop
xchg
imul
xchg
lea
push
sahf
leave
dec
push
jns
mov
pop
in
insl
cmpsb
ds
jge
pop
stos
ds
aam
sub
test
arpl
popf
adc
mov
mov
mov
lahf
int
fstpl
pop
push
xchg
jmp
insl
and
outsl
jae
mov
outsl
arpl
jle
in
popa
sub
sbb
pop
mov
sbb
dec
or
imul
ja
push
mov
push
add
push
pop
cmc
mov
in
andb
mov
mov
and
mov
lds
pop
leave
adc
dec
push
sbb
push
inc
xchg
dec
mov
bound
adc
nop
lods
pop
repz
loope
dec
and
js
std
sahf
cmpsl
push
cmp
jmp
daa
jns
dec
mov
dec
insl
pusha
sbbl
and
xor
sarl
inc
les
sub
into
pop
inc
aad
insl
dec
roll
aas
movsb
nop
pop
lock
std
push
popf
dec
cmpsl
fistpl
cmp
cmp
mov
jle
mov
in
movzbl
pop
pop
cmp
add
and
or
into
mov
movsl
push
insl
adc
pop
dec
outsb
roll
xchg
out
sbb
mov
and
iret
pop
orl
pop
sub
sbb
fcoms
mov
flds
fidivs
aad
rclb
mov
fnstcw
fidivrs
aad
pop
aas
incb
sub
inc
adc
pop
mov
fcmovnu
add
les
push
out
imul
lahf
cmp
and
cs
int
cmpsb
js
and
fnstsw
outsb
lods
jg
mov
imul
lods
ds
addl
ds
mov
leave
lea
push
lahf
leave
lea
push
scas
shll
jo
xchg
lret
add
cmp
lahf
ret
pop
nop
xchg
push
popa
and
xor
into
repnz
xchg
lcall
add
xchg
jne
outsb
stc
call
inc
add
push
mov
outsl
cli
int3
inc
jmp
mov
jmp
sub
jae
loopne
mov
int
push
jae
add
aad
int
mov
pop
inc
push
adc
or
mov
in
sub
rcll
test
fwait
and
popa
xchg
mov
xchg
loope
sar
imul
icebp
inc
mov
loope
fiadds
push
int
enter
outsl
mov
idivb
shl
rcll
xchg
loope
cmp
scas
cmp
or
jge
mov
shrl
jp
jno
push
xlat
xorl
xchg
jmp
xchg
addr16
inc
xlat
mov
add
add
shll
lret
pop
fchs
and
sub
sahf
pop
sub
sbbl
pop
into
push
fstpt
cmpsl
inc
out
fimuls
mov
insl
aad
pusha
and
sub
push
push
jp
xor
dec
aad
jge
and
std
aad
jno
push
icebp
mov
sahf
data16
push
fstpl
push
jb
xor
scas
in
push
mov
sahf
jno
mov
push
jae
push
jne
inc
mov
in
call
cmpsb
scas
or
cs
and
out
jg
jle
in
jns
adc
pop
mov
mov
inc
in
popa
mov
aas
aas
mov
scas
pop
popa
mov
or
fdivs
xchg
sti
test
fsubrp
jne
rorb
aad
cmpsb
push
fsts
jge
xchg
enter
gs
enter
aad
pop
aad
jge
push
mov
cld
jo
pop
jge
lea
adc
jecxz
lret
nop
mov
mov
jo
push
push
xchg
test
add
push
jbe
xchg
fistpl
sbb
pop
stc
cli
xor
outsb
xor
pop
xor
jp
pop
inc
pop
dec
xchg
sbb
inc
xor
hlt
and
mov
xor
fstp
fsubrl
jl
les
in
mov
jne
add
popf
xchg
dec
in
outsb
rclb
xor
fwait
push
mov
jne
fidivs
xor
cmp
adc
enter
insl
pop
andl
xor
test
mov
sti
mov
jl
and
push
jge
xor
xchg
movsl
fdivr
in
std
mov
lods
mov
jle
daa
pop
xchg
dec
movsl
push
in
sub
notl
lahf
pushl
adc
mov
mov
test
or
mov
std
mov
or
sbb
dec
aad
ja
push
adc
push
leave
lahf
leave
sub
push
pop
lods
add
aas
mov
clc
out
nop
pop
jp
aas
std
loopne
in
cwtl
mov
jmp
sub
fs
stos
mov
aad
jl
gs
loop
insl
imul
lahf
mov
fcomi
pop
popa
pop
je
pop
enter
stos
adc
push
jns
call
lea
fadd
negb
shll
movsb
clc
and
out
add
bound
sub
push
pop
xor
pop
ret
ds
add
or
mov
icebp
leave
movsl
xchg
loope
loop
jne
push
out
adc
leave
add
jge
pop
sub
jno
out
adc
mov
cmpsb
push
mov
or
in
outsb
pop
sub
enter
call
sub
mov
and
pop
inc
bound
fisubs
dec
inc
ret
stc
ljmp
push
sub
push
adc
dec
jmp
lods
pop
subb
in
xchg
test
divb
test
popf
popa
push
lea
jg
ficomps
int
sub
scas
fstpl
iret
rorb
push
test
pop
xorb
and
lods
lea
test
adc
popf
incl
in
jecxz
shll
repz
jle
sbb
lods
jle
notl
pop
rcrb
mov
out
xchg
int
mov
mov
fstpl
pop
fmul
xchg
sbb
jbe
cmp
sbb
xchg
lcall
jl,pt
cmc
je
mov
xchg
or
add
aad
pop
decb
fildll
outsl
cmp
loop
stc
jge
std
rcr
outsl
rclb
pop
xchg
mov
mov
repnz
mov
into
pop
adc
in
jo
adc
int
lods
insb
scas
sub
cmp
popa
int
jno
fcmovne
pop
mov
sub
push
dec
dec
mov
aam
xor
push
gs
or
stos
mov
test
or
data16
push
mov
mov
outsl
add
or
push
mov
xor
push
bswap
imul
push
out
or
mov
outsb
mov
mov
and
cs
int
pusha
gs
fwait
pop
add
out
push
push
push
or
cmp
adc
xchg
push
inc
push
inc
and
mov
ja
jns
ret
cmpsb
adc
idivl
andl
mov
notb
dec
mov
mov
repnz
adc
popa
rcr
das
shrl
mov
sub
outsb
and
ds
or
adc
test
mov
lds
rorl
pop
pop
sbb
lret
sar
cltd
jl
les
adc
jge
push
aas
or
inc
clc
push
je
mov
jo
adc
jecxz
jb,pn
outsb
mov
lods
pop
mov
mov
fmul
mov
push
push
fdivrs
push
ja
sub
in
frstor
ss
push
and
xor
push
jne
jnp
mov
pop
adc
icebp
mov
in
and
test
add
xchg
sub
ss
lea
rol
jge
xchg
loope
lea
cmpsb
and
jge
in
cmpsb
loope
dec
jl
push
ucomiss
ret
int3
add
xchg
lods
lods
test
xor
cmp
ss
adc
jg
outsl
lods
ja
and
cli
xlat
stc
outsl
mov
or
xchg
pusha
imul
or
pusha
fsubrp
fldl
push
out
or
mov
aaa
mov
outsb
and
std
sub
inc
in
jmp
scas
fadd
mov
jns
lods
fnsetpm(287
outsl
movsl
jne
pop
sbb
loopne
insl
inc
or
pop
push
mov
jle
loop
push
inc
imull
mov
add
stos
popf
mov
mov
pop
xchg
std
insb
dec
fcmovnb
lcall
add
add
jp
cmpsl
jge
in
lcall
fs
push
sub
xor
test
dec
push
int3
lahf
inc
lods
adc
js
jmp
cmc
xchg
test
shrb
out
add
bound
lret
clc
fnstsw
loopne
adc
inc
cmp
fildll
lret
jo
xchg
add
aad
sbb
mov
orl
ret
or
mov
call
inc
xchg
or
push
std
pushf
inc
sbb
and
jge,pt
pop
mov
stos
jbe
pop
adc
xor
setne
adc
fstl
xchg
lahf
scas
jge
pusha
push
scas
mov
sub
jae
jle
push
jo
out
loopne
outsb
jmp
das
outsb
movq
mov
lods
out
ror
das
mov
ss
loop
push
and
push
lcall
lea
sti
fiadds
jle
popf
cli
mov
push
ds
js
xchg
push
adc
cmp
mov
xor
cmp
unpckhps
nop
xor
lahf
mov
lods
pusha
fiadds
insl
das
loopne
ror
mov
push
push
out
es
popf
jb
fiaddl
sub
cmp
loop
pop
decb
inc
in
push
sarb
adc
andb
loop
xchg
int
pop
pop
shlb
sahf
repnz
fimuls
mov
mov
xchg
mov
mov
jmp
xlat
cmpsl
dec
jmp
lret
out
sub
or
popa
inc
cmp
sahf
cmc
xchg
ret
cmpsl
jae
or
xchg
icebp
out
int
in
mov
rcll
pusha
cmc
mov
icebp
insl
jg
aas
cli
push
push
jmp
push
lret
aam
stc
cwtl
clc
lea
cmp
es
xorl
inc
jo
lahf
addb
icebp
add
inc
push
dec
cltd
sbb
xor
stc
in
pop
fidivrs
in
dec
mov
cs
lcall
add
xchg
mov
out
jbe
add
cmc
andl
data16
movl
pop
fisubl
add
or
cmp
into
jge
pop
mov
negb
pop
iret
js
push
jo
push
jecxz
sbb
lds
push
idivb
fstps
in
jp
cmpsb
adc
andb
xchg
xor
pop
or
pop
scas
xlat
sti
jae
pushf
jg
ror
dec
movsl
mov
mov
insb
icebp
out
addb
stos
cltd
jbe
das
fimuls
xchg
inc
stc
popa
mov
dec
sub
insl
push
ja
xchg
mov
popf
icebp
jge
pushf
inc
sti
stos
inc
dec
add
xchg
jmp
xchg
out
fildl
dec
fisubrl
pop
popf
push
sahf
mov
popf
xor
push
or
in
bswap
push
mov
fisubs
push
cltd
pop
dec
call
cs
insl
xor
dec
inc
mov
cmp
outsl
jmp
cmp
push
mov
add
add
movsl
addr16
mov
adcl
shll
out
xchg
nop
movsb
or
lock
aad
arpl
in
loope
push
inc
icebp
test
ds
sti
orb
mov
mov
add
push
addr16
into
mov
addl
jecxz
fidivrl
mov
or
std
push
jg
movsb
nop
jbe
out
hlt
xor
test
xchg
fs
push
or
or
sbb
mov
insb
imull
pusha
mov
and
push
fstps
movsl
sti
jmp
pop
mov
std
mov
dec
and
loope
xor
shrl
dec
stc
js
aad
pop
cs
repz
jp
pop
fimuls
ret
repz
and
mov
outsb
adc
pop
fcmovu
cmp
orl
add
fwait
push
jbe
fcomp
sbb
cwtl
dec
cld
mov
jbe
outsb
cmp
sbb
add
xchg
add
dec
xchg
jb
dec
leave
movsb
data16
lahf
insl
cmp
es
lcall
pop
cmc
insl
test
jne
cli
jns
cltd
inc
in
das
or
icebp
pop
pop
daa
jl
or
popa
bound
addr16
mov
in
cmp
mov
movsb
xor
sub
and
pop
jns
cmp
std
lret
in
fsubs
jne
test
test
jge
mov
cmp
adc
es
jb
movsb
or
add
mov
sbb
mov
push
pop
and
or
test
sbb
pop
pop
lea
mov
push
out
cli
lods
lret
lock
mov
jbe
jle
incb
ret
inc
in
insl
push
adc
sub
pop
mov
xchg
fstps
outsb
sub
jb
xor
scas
push
filds
jo
push
fsubrs
movsb
fisubs
cmpsb
add
pushf
sub
or
sarl
aam
bound
xchg
add
jp
daa
scas
sbb
or
dec
push
mov
jp
jae
out
ja
jbe
fistpl
adc
jmp
sbb
test
or
ficoms
jp
or
adc
push
icebp
outsb
add
xor
adc
test
push
mov
jnp
ficoms
lcall
inc
arpl
push
inc
and
xorl
push
mov
or
xchg
pop
rcr
xchg
xchg
hlt
xchg
mov
fcmove
xchg
mov
aad
int
and
xlat
inc
mov
jmp
insb
sarl
cmc
scas
sti
push
pop
pop
xor
daa
insl
jbe
inc
out
lret
sbb
aaa
fildll
fs
pop
dec
dec
xchg
pop
sub
or
mov
inc
jnp
and
cli
insl
rclb
stc
mov
in
movsl
aad
jns
jge
loope
or
outsb
outsb
out
sahf
dec
outsb
in
jg
dec
sub
imulb
jle
mov
je
fnsave
and
in
xchg
cltd
test
das
xchg
call
lds
xchg
cmpsl
ret
sub
out
scas
sbb
std
jb
xor
lcall
fucom
xor
xchg
lcall
mov
push
push
mov
pop
insl
mov
imul
pop
popa
pop
adc
gs
pop
mov
imul
insl
vorps
xor
lock
dec
test
dec
sarl
push
jge
jp
pop
fnstcw
mov
lea
mov
push
sbb
mov
dec
cli
das
frstor
cs
arpl
xor
mov
xor
mov
repnz
fwait
ds
fs
decl
decb
aad
sahf
dec
mov
cmp
or
sub
inc
test
insl
xchg
imul
pushf
fcomps
sahf
sub
xchg
sbb
pop
fisttpl
add
mov
stc
or
xchg
dec
enter
insl
std
mov
jnp
shll
rorb
pop
push
sahf
das
jp
into
test
and
add
or
gs
and
lcall
or
jo
add
push
push
jmp
pop
testb
repnz
test
test
out
push
add
lods
dec
int
adc
icebp
sahf
les
mov
das
aas
push
push
jmp
or
lret
adc
sahf
add
mov
cltd
orl
inc
mov
xchg
pop
mov
ficomps
mov
inc
fidivrl
pop
stc
xor
jle
bound
and
add
int
in
shll
jle
mov
int3
cwtl
add
into
or
xchg
jne
xor
bound
pop
push
loopne
sub
cmp
cli
push
aad
loope
push
movsb
mov
push
sub
pop
mov
push
loope
adc
pop
push
pop
push
adcl
aas
dec
test
xchg
das
add
or
cs
cmp
jnp
xor
je
and
inc
sub
ja
adc
shrb
lea
xlat
jmp
lret
sbb
mov
cli
push
push
rorl
cmp
sbb
lcall
mov
clc
push
mov
aad
ret
loopne
sarl
and
mov
or
pop
push
sub
jno
sahf
std
pop
mov
aam
inc
cs
dec
mov
icebp
stc
sub
cmc
jne
aaa
adc
popf
inc
pop
fwait
aas
mov
sub
sbb
popf
fsubrl
sub
push
xor
jmp
ds
jae
mov
mov
mov
repz
out
cmp
or
push
das
jne
jecxz
lea
and
or
cltd
sub
inc
fnsave
push
mov
lret
and
dec
into
dec
push
ret
sub
jb
fisubrs
and
clc
pop
loopne
in
pop
and
sahf
std
lds
popf
sbb
pop
push
adcb
shl
lds
xchg
push
mov
mov
stc
xchg
mov
pop
stc
xor
fstp
sahf
adc
pop
in
std
shll
fimuls
out
pop
out
mov
pop
jbe
sbb
xor
fistpl
je
inc
add
jmp
pop
jno
pop
and
pop
fs
loopne
mov
aam
or
sub
dec
mov
inc
push
daa
and
mov
mov
jp
aas
adcb
pop
loope
push
sub
cmp
loopne
lahf
cmc
push
sbb
popa
adc
add
stc
fistpll
mov
xchg
pop
test
or
pop
or
pop
jmp
imul
mov
cmpb
int
push
jns
and
fistpl
pop
mov
xor
sub
fldl
lret
push
lret
les
icebp
insl
mov
inc
pusha
or
out
or
jbe
es
je
outsl
jns
xchg
data16
jae
lret
arpl
ffree
add
lret
add
icebp
add
addr16
imul
aas
push
sbb
ret
cltd
cltd
or
or
mov
or
xor
ds
push
popf
xchg
stos
or
popa
ret
rcrl
push
out
jg
pop
hlt
aas
pop
outsl
cmpb
mov
jo
std
dec
mov
pop
leave
add
lahf
addr16
ljmp
filds
add
test
push
jmp
popf
jmp
fstpl
shll
xchg
xor
add
ja
lods
push
prefetch
pop
push
lret
xchg
mov
mov
sub
xchg
cli
mov
inc
out
xchg
push
in
lea
je
xchg
rol
lock
pop
lods
fadds
divb
stc
sub
jbe
ficomps
dec
mov
sub
and
aaa
lea
into
jne
mov
fiadds
lds
adc
pop
and
movsl
add
cmp
cmc
push
lods
jne
or
or
or
mov
inc
cmpsb
cmp
sahf
into
fimuls
adc
negl
loope
int3
jns
push
dec
je
movsl
hlt
pusha
jle
loopne
shlb
sub
xor
sub
inc
fimuls
cmp
insl
jns
cld
xor
jp,pt
push
in
mov
aas
int
lock
in
mov
push
imul
das
inc
out
int
adc
ficoms
orl
fidivrs
loop
dec
scas
push
mov
insl
cwtl
adc
cmc
push
jnp
jno
vpxor
movsl
cmp
pop
stos
jge
lods
dec
lock
lods
mov
dec
jbe
pop
dec
aad
or
pop
cmp
adc
dec
jne
mov
lahf
add
bound
push
xor
and
out
dec
inc
pop
xchg
in
pop
nop
shrb
cmp
push
cwtl
setno
jne
je
jl
into
xor
sub
add
dec
lods
es
das
in
cmp
add
push
testb
mov
rcl
sbb
mov
inc
mov
xor
in
pop
xchg
outsb
pop
add
dec
adc
inc
pusha
fwait
xchg
subb
es
push
dec
js
adc
pop
outsb
push
jmp
mov
cmp
pop
jns
hlt
dec
test
out
xchg
sub
jb
mov
daa
jo
loopne
mov
nop
outsl
sub
cli
cwtl
push
dec
mov
cmpsw
pop
and
xchg
mov
mov
mov
dec
jg
arpl
sbb
push
add
mov
or
sub
lock
outsb
lret
cs
sub
fidivrl
repnz
mov
mov
hlt
fdivrs
inc
jbe
jle
push
mov
mov
xor
in
je
jle
lret
jg
adc
pop
or
shll
xchg
cmpsb
pop
into
in
mov
sub
sbb
or
dec
icebp
stos
fs
lea
dec
xor
add
xlat
test
cltd
pop
lret
mov
lds
or
and
into
adc
pushf
loopne
sahf
inc
ds
sub
sbb
mov
dec
fstpt
xor
hlt
push
fadds
sub
fwait
adc
pushf
sub
mov
or
add
movsl
in
xchg
mov
test
shrl
sub
fldenv
jp
xchg
loopne
pop
sbb
test
or
loop
stos
fldt
cmp
repnz
cmp
pop
movsb
xorb
and
mov
push
cmpsb
aad
int
push
sbb
push
dec
push
mov
jmp
test
pop
mov
or
in
pop
ljmp
pop
dec
cmp
push
cli
or
inc
dec
jge
jle
dec
xor
and
cmc
mov
xchg
sbb
jns
mov
jge
mov
sub
adc
push
cmc
movsb
bound
mov
in
mov
fsubrs
out
testb
aad
scas
aad
push
push
mov
jle
bound
or
adc
ljmp
fwait
sbb
push
inc
dec
push
stos
adc
and
add
mov
outsl
jge
aam
and
dec
std
decb
fucom
pusha
and
dec
lock
push
pop
pmaxsw
cmp
popf
ljmp
push
icebp
xor
in
test
aad
test
pushfw
sub
add
xchg
cmp
sbb
pop
test
pop
and
ret
cld
out
sahf
call
insb
jg
into
jno
cmp
fwait
dec
dec
jle
pop
or
pusha
push
lret
mov
aad
jmp
push
push
lea
mov
int
js
mov
jle
inc
sub
lret
mov
jmp
jle
jno
sub
mov
inc
sub
int
mov
fwait
out
or
mov
push
loopne
aad
xchg
dec
insl
pop
pop
shrb
push
aad
push
adc
xor
lea
cltd
mov
sti
fisttpl
ss
inc
push
cmp
pop
push
dec
lods
test
pop
push
mull
push
fldl
lahf
outsb
mov
adc
inc
jge
dec
xchg
out
sbb
dec
jle
arpl
jae
out
inc
loop
xlat
jp
inc
jp
lods
push
js
dec
jge
cld
sbb
pop
mov
call
inc
xchg
dec
mov
sbb
lods
xchg
dec
mov
icebp
imull
sub
mov
imul
xor
out
popf
sahf
jl
icebp
pop
push
xor
pop
mov
xchg
and
bound
lods
mov
cmp
add
pop
and
test
inc
add
mov
xor
jl
sbb
push
imul
mov
lret
outsb
push
sub
jno
and
dec
gs
int
push
push
mov
iret
jb
sbb
mov
pop
lds
ds
pop
insl
push
push
push
sub
popf
xlat
or
inc
pop
xor
mov
xchg
mov
xchg
xchg
jg
insb
cmc
out
std
repz
jbe
sahf
insl
cli
icebp
dec
fcmovu
cli
lea
xlat
gs
je
stc
inc
into
xchg
inc
int
jne
mov
faddp
aad
pop
and
jae
test
xor
sbb
adc
inc
imul
jmp
mov
pop
fsubp
cs
ja
mov
xor
pop
bound
push
ja
and
sub
mov
sbbl
cmp
sbb
or
mov
inc
fnstcw
dec
repnz
in
pushf
sub
hlt
pop
pop
bswap
cs
stos
test
mov
dec
jg
inc
rclb
mov
lea
imul
movsl
loop
cmp
cmp
in
cs
aaa
dec
repnz
push
imul
pop
ret
in
outsl
pop
out
mov
push
jp
mov
push
mov
lock
mov
add
addr16
jb
loopne
incl
xlat
fscale
xchg
inc
repnz
mov
push
test
fnstcw
xlat
and
mov
mov
fwait
jecxz
data16
bound
loope
in
inc
mov
sbb
or
loop
jmp
cmc
jne
mov
xchg
and
mov
sub
stos
cmp
jae
mov
mov
in
mov
push
and
xchg
add
mov
or
or
out
adc
fistpl
push
mov
in
jmp
adc
and
ljmp
inc
cltd
and
sub
sbb
movsl
cmp
lret
lds
pop
mov
aam
add
cld
fdivrs
enter
inc
addb
out
mov
mov
and
js
cs
dec
and
loope
addr16
fdivrs
pop
leave
outsl
fisubs
rcrl
fstps
mov
jge
push
pop
sub
cmp
dec
jo
inc
pop
fisttpll
insb
and
or
jbe
mov
dec
mov
repz
add
int
ja
andb
adc
xchg
cltd
mov
xchg
pusha
or
lock
aad
inc
rcrb
imul
mov
lods
pop
adc
out
outsl
mov
push
mov
or
bound
xchg
rorl
mov
aam
pusha
sti
xor
lds
ss
in
xchg
mov
push
cmc
outsl
stc
xchg
std
jne
add
in
or
or
sub
dec
jae
xor
sub
ret
stos
sub
sub
push
inc
jbe
pusha
sub
test
pop
rolb
lret
mov
int3
sbb
sbb
ja
add
xchg
inc
les
arpl
dec
jb
in
mov
sub
and
nop
lods
cwtl
cmp
nop
jl
push
add
add
inc
mov
pop
popa
pop
adc
je
push
inc
push
jg
movsl
mov
push
pop
cltd
into
push
push
fcoml
mov
mov
outsb
aad
imul
and
mov
dec
jmp
sub
int
dec
les
mov
pop
xchg
mov
add
leave
lds
jge
push
lods
mov
int
jle
pop
inc
rolb
in
in
push
inc
icebp
call
adcl
loopne
mov
insl
divb
stc
out
mov
testb
inc
daa
cmpsb
std
popl
stc
mov
mov
ret
rolb
in
pushf
pop
xor
mov
jl
mov
orb
mov
mov
or
pop
jg
pop
adc
adc
push
jns
jbe
pop
jbe
scas
jp
push
sbb
loopne
cmpl
xor
cs
push
sbbb
int
inc
adc
daa
jecxz
imul
lahf
jmp
cmc
pop
out
ss
jno
sub
push
jne
aaa
lea
sbb
jge
add
fiadds
push
inc
jb
jmp
inc
mov
mov
mov
aam
int
cmpl
test
cs
mov
mov
mov
dec
or
inc
xchg
mov
cmp
add
fcomps
aad
mov
jp
pop
dec
mov
mov
fldl
cmp
jle
loope
jo
fiadds
adc
xchg
xchg
jge
orl
mov
sbb
sbb
push
push
fsts
scas
ficomps
xor
xchg
das
or
push
out
push
cltd
mov
rol
xor
daa
mov
mull
xlat
es
cltd
out
cld
push
mov
leave
insl
and
pop
pop
pop
popa
fcomip
in
adc
xorl
popf
loopne
cmp
sbb
xchg
dec
repnz
orl
push
nop
ret
lock
inc
mov
pop
repnz
jge
test
jp
jo
fiadds
sahf
xchg
jbe
addr16
jge
push
jle
jbe
xchg
lea
iret
es
fst
adc
sahf
aas
stc
aas
icebp
repz
outsl
inc
jge
push
pop
aad
push
push
pop
imul
into
pop
iret
stc
cmp
sub
dec
lret
test
in
and
scas
dec
push
arpl
dec
arpl
pop
aam
pop
adc
mov
xchg
ret
daa
and
sub
add
sbb
push
stos
cltd
mov
lods
adc
scas
or
lea
mov
push
sbb
jecxz
and
lock
xchg
shrb
outsl
adcb
cmpb
jb
mov
outsl
add
inc
xor
sbb
push
ljmp
cmpl
jmp
or
mov
mov
jns
xchg
fisttpll
loopne
out
mov
mov
test
and
and
movsb
shlb
adc
dec
sub
insl
and
xor
mov
and
loop
aad
std
sti
jns
aas
fidivs
mov
clc
pop
mov
fcomps
in
gs
jnp
aad
fcompl
aad
push
movsl
loope
icebp
add
mov
cmpsl
push
pop
sbb
dec
enter
ret
int3
cmpsl
mov
add
pop
sub
mov
ret
dec
into
push
pop
loope
xchg
mov
adc
inc
call
jne
push
push
imul
adc
fistps
lods
fwait
inc
adc
orb
xchg
dec
pusha
mov
in
aad
sub
push
push
push
lock
add
lret
adc
dec
push
pop
push
popl
mov
pop
xchg
pop
mov
popa
popa
jmp
mov
inc
jo
into
mov
push
mov
xlat
inc
push
inc
sub
insl
test
push
popa
lds
push
jmp
test
jno
pop
icebp
or
push
aam
xor
inc
adc
inc
aaa
in
cs
dec
fidivrl
stos
mov
shll
push
cld
add
icebp
add
nop
mov
outsl
aam
mov
sbb
pop
or
and
clc
jno
fsubrs
das
dec
cli
xchg
inc
arpl
int3
and
jno
int3
mov
pop
cld
mov
fidivs
test
jae
lds
fists
jo
sbb
into
int3
xchg
fldl
cmpl
push
out
fmuls
push
lahf
scas
shll
sub
push
negl
pusha
sub
sbb
xchg
mov
lods
stos
jmp
mov
jmp
xchg
push
popa
icebp
orl
xchg
jge
and
mov
ds
cld
std
daa
mov
mov
int
inc
loop
lock
ret
mov
xchg
jecxz
mov
mov
popf
lds
jbe
push
adc
jns
push
and
or
push
imul
popf
test
inc
in
push
stos
cmpsb
push
mov
jg
jne
popf
cld
rorb
fwait
add
mov
pop
jns
inc
sarb
push
xchg
cltd
gs
jne
mov
pop
out
push
adc
loopne
sbb
movsl
mov
push
mov
xor
mov
push
jo
es
je
mov
stos
push
mov
stc
jnp
rclb
push
aad
pop
lods
adcl
movsl
loop
mov
insl
scas
push
pusha
lods
or
popf
jns
ljmp
lahf
scas
popa
in
cmpsb
mov
inc
stos
popl
inc
bound
mov
or
adc
pusha
or
ja
push
mov
int
cmp
pop
repnz
aad
xchg
cmp
test
xchg
outsb
xchg
inc
jo
mov
xchg
pop
mov
xchg
add
sub
outsl
hlt
dec
xlat
jmp
or
rcrb
pop
push
mov
scas
xor
sub
pop
and
mov
mov
loopne
jbe
dec
mov
xchg
sti
ret
pop
pusha
insb
out
int
clc
dec
mov
pop
lahf
pop
sar
xchg
decb
sbb
jno
cwtl
jae
or
xchg
aad
push
gs
loopne
adc
inc
cld
push
insl
pop
jle
adc
push
lea
push
mov
imul
xchg
jne
or
cmp
add
lcall
cwtl
fdivrp
cmpsl
push
fwait
pop
loope
fisttps
sbb
test
lea
popf
sub
pop
cmp
call
xchg
xor
add
nop
dec
jbe
inc
xor
add
mov
fstl
stos
fs
xor
ret
sbb
mov
mov
jp
cwtl
cwtl
lods
push
sbb
jnp
mov
mull
jbe
test
mov
push
pop
fidivs
mov
mov
pop
push
cmp
adc
push
and
xlat
and
sub
call
mov
push
cmp
gs
push
icebp
in
sub
aad
jne
adcl
push
roll
push
aad
mov
test
lret
out
cmc
sub
out
in
dec
stos
push
inc
mov
or
ret
mov
xor
lock
mov
notb
insl
js
inc
bnd
cmp
sub
lahf
out
test
aad
sub
add
mov
fisttps
cwtl
dec
mov
push
dec
pushf
jae
push
std
or
push
dec
mov
mov
mov
daa
jmp
pop
mov
jl
cmp
jge
mov
inc
jg
dec
lods
sbb
add
lret
push
push
in
adcb
shrl
out
jno
push
xor
jne
jne
jge
jmp
roll
addr16
movsb
xlat
mov
pop
push
inc
pop
xchg
shll
arpl
adc
jo
sahf
pop
mov
jge
arpl
adc
jo
sahf
pop
mov
cwtl
xchg
add
arpl
sub
test
add
out
xor
mov
jne
jb
ja
roll
addr16
das
xlat
mov
or
xchg
std
cmc
pop
add
fsubrl
pop
pop
push
dec
les
dec
adc
ss
xchg
imul
sbb
fisubs
jae
pop
mov
cld
jbe
add
ret
aaa
stos
aaa
arpl
jo
ret
aam
sub
decl
es
sbb
sbb
adc
sbb
outsl
pop
cmp
roll
push
std
add
xor
jl
xor
enter
inc
mov
lods
dec
bound
lea
stos
lea
mov
push
jp
pop
addr16
mov
push
inc
pop
push
fnstcw
inc
fidivrs
sub
xchg
ret
mov
jns
mov
add
adc
add
sbb
mov
mov
insl
inc
rcr
push
xchg
rcl
gs
sbb
data16
lret
je
dec
inc
loopne
loopne
sub
mov
mov
push
daa
cltd
aad
fadds
mov
jg
lods
or
cli
in
or
daa
or
and
popf
add
xor
je
push
xlat
int
stos
lock
and
enter
std
sti
ds
sbb
xor
das
cmp
and
push
inc
xchg
and
inc
mov
mov
fs
xlat
xlat
push
mov
into
je
sub
aad
pop
fcompp
pop
xor
jge
push
xchg
pop
sbb
push
push
and
test
sti
and
fisubrs
in
push
sbb
sub
sub
cltd
xchg
rorb
inc
je
inc
addps
sub
lea
fists
mov
outsl
pushf
inc
std
hlt
cmp
cmpsb
mov
jle
mov
std
xchg
pop
loop
dec
lock
cs
aas
shl
dec
es
push
or
cmp
cltd
lea
add
jno
inc
sbb
jle
add
test
jb
push
outsb
or
xchg
movsl
inc
jecxz
cs
add
push
lds
xor
jo
cmp
cmp
incb
mov
in
in
xchg
gs
popa
cmp
jnp
fistpll
dec
add
sahf
push
in
mov
push
adc
flds
stos
cmp
dec
in
dec
call
inc
btr
aam
call
xchg
lds
cli
data16
in
xlat
cld
loopne
add
mov
roll
filds
jl
in
dec
cli
into
xchg
pushf
dec
enter
cmpsb
out
sbb
das
and
fidivs
cs
fisttpl
and
fistl
jo
ljmp
mov
sbb
aad
jge
stos
push
add
mov
pop
outsb
add
leave
xor
ja
cmc
adc
jbe
stos
sub
icebp
sahf
cmc
xchg
xor
pop
inc
adc
xor
lcall
pop
imul
adc
fists
pop
jp
aaa
adc
jmp
pusha
lahf
stc
shll
lods
aad
xchg
push
mov
jp
sbb
xor
and
xchg
repnz
frstor
mov
ljmp
loope
sub
sub
aas
sub
filds
mov
xlat
jns
pop
ljmp
lods
cmp
lea
xchg
in
adc
jne
mov
adc
ret
dec
inc
pop
mov
push
pop
sbb
inc
ja
push
sbb
jp
ret
test
xchg
lods
rclb
ja
inc
inc
ret
jmp
pusha
pusha
adc
mov
mov
sub
or
sub
aam
and
pop
inc
sbb
mov
jl
pop
aas
in
dec
icebp
jecxz
lret
decl
outsb
stos
xchg
jae
or
hlt
xor
push
cmp
lods
mov
into
je
push
xor
fidivrs
sbb
xor
sub
jg
addr16
outsl
je
push
mov
std
xor
jg
rcrl
lret
push
es
aas
xchg
push
repnz
pop
outsl
add
adc
lds
arpl
dec
lret
incl
lea
icebp
sbb
sub
test
push
std
cmc
add
dec
subb
jle
ja
lea
insl
push
jno
ret
stos
pop
xlat
ds
sbb
xor
sub
push
aad
mov
mov
lods
push
xor
lea
sti
jae
mov
sbb
jns
cmp
es
push
popf
cmpsb
xchg
pusha
push
fdivl
js
test
adc
ficomps
jo
or
cld
sub
out
lcall
sbb
dec
add
dec
sbbl
clc
mov
in
or
or
add
daa
lcall
xchg
lods
jnp
mov
or
jo
mov
and
cmpsl
xor
wbinvd
mov
jno
add
or
push
and
cmp
jge
xchg
and
mov
mov
fcoms
mov
insl
xor
lret
mov
enter
inc
jg
fldt
std
pop
push
jmp
icebp
lods
ds
xchg
pushf
sub
and
neg
jmp
xchg
or
sbb
stos
das
popf
outsb
pushf
push
and
call
dec
imul
push
xchg
lahf
cld
mov
dec
push
inc
repnz
sti
cmpsl
xchg
popa
cmp
lock
xor
xchg
jo
xor
outsl
add
pop
xor
or
jle
fadd
in
lea
data16
outsl
lods
xchg
arpl
and
imul
and
cmp
mov
rorb
test
lahf
ret
cmpsl
mov
pusha
daa
push
push
jg
aaa
fisubs
jb
fstl
mov
xor
rorb
pop
pop
rcrl
push
jbe
in
pop
mov
mov
cmp
out
aam
ret
dec
cmc
popf
rorb
sub
iret
aad
push
pop
mov
pop
test
sbb
add
add
outsb
mov
mov
test
dec
test
pop
jmp
arpl
arpl
or
push
jns
jno
add
and
add
movsb
mov
xchg
nop
test
mov
icebp
mov
inc
repz
data16
xchg
mov
das
mov
addr16
xor
pop
or
jg
jo
out
xchg
outsl
in
jno
out
outsb
jae
xchg
insl
icebp
orl
dec
push
repz
lret
or
adc
ficomps
fchs
icebp
js
push
jbe
push
adc
ret
aaa
int
mov
lods
xorb
pop
and
imul
pushf
pop
push
ljmp
repnz
fnstsw
push
in
add
in
pop
outsl
movb
stos
mov
gs
cli
pop
je
mov
bound
shrb
adcl
mov
cmpsl
lcall
mov
mov
push
mov
lahf
dec
sbb
mov
aad
movsl
add
daa
mul
fidivrs
xor
push
pop
or
dec
call
into
sub
push
pop
mov
and
adcb
cmpsl
and
stos
jo
imul
psubd
mov
cwtl
loop
add
inc
adc
fbstp
movsb
adc
sbb
sbb
push
insl
pop
xor
mov
and
lds
std
incb
into
mov
xchg
imul
lahf
sahf
mov
daa
dec
cmpsb
lahf
adc
addb
push
cmc
or
jecxz
inc
fcomip
or
jecxz
cmp
adc
add
sub
fstps
inc
cs
addr16
outsl
sub
hlt
loopne
stos
mov
jp
push
addr16
loopne
xor
jae
jns
jb
in
pop
cltd
adc
adc
jne
pop
cmp
dec
cmpsl
insl
pop
js
add
in
lods
mov
mov
dec
add
divb
gs
or
push
std
xchg
lret
jne
jns
scas
adc
lea
out
pop
idivb
cmpsl
jp
inc
outsl
dec
bnd
lea
lea
jge
mov
cmpsl
sub
cmp
pop
std
pop
ret
out
add
sub
ret
pusha
lods
sub
ret
mull
popf
lea
jmp
in
fmul
jne
cmpb
fiadds
aam
pop
stc
xor
push
jns
inc
sbb
dec
popf
popa
vmovntps
xchg
sbb
jge
mov
decb
mov
sbb
cli
push
adc
daa
or
ss
aaa
icebp
movsl
pop
stos
mov
rorl
or
push
xor
aad
aaa
bound
mov
pusha
and
aad
fmul
aad
push
cmc
add
sbb
lahf
rcll
pusha
jb
aad
mov
xchg
add
aad
xchg
enter
imul
pushw
loopne
push
fldl
mov
into
jo
push
mov
sbb
mov
mov
int
cli
pop
and
xor
jbe
fidivl
cli
nop
mov
xchg
lds
int3
mov
pop
fstpt
mov
pushf
mov
insl
mov
jp
imulb
cltd
mov
add
pusha
and
popf
scas
stos
mov
femms
adc
mov
and
fldl
cmp
cmp
sbb
jl
in
mov
scas
xor
stos
sbb
mov
fidivrs
inc
pop
jecxz
std
decb
out
pop
lea
popa
dec
lea
xor
leave
in
pop
and
dec
fstpt
lods
fisttpl
inc
jne
lahf
dec
sbb
lods
in
andl
stc
lds
call
jne
mov
repz
dec
outsb
aam
popf
pop
sub
adc
lea
lods
mov
or
mov
pop
test
sbb
xchg
into
jns
neg
push
xor
fs
xchg
adc
cmp
and
cmpsb
adc
insl
ficomps
pop
mov
adc
jmp
and
xchg
inc
or
push
mov
and
mov
out
jne
mov
add
out
das
lds
xchg
inc
pop
sub
adc
add
push
mov
push
ljmp
ret
arpl
std
add
addr16
sub
addr16
arpl
jge
sbb
mov
push
mov
fistpll
mov
mov
xchg
jo
div
inc
fiadds
jb
pusha
xchg
pop
mov
push
cli
mov
xchg
stos
testl
addr16
shrl
out
cmpsb
jbe
in
sbb
push
add
fidivs
push
repnz
xor
mov
push
sub
aam
nop
outsl
xchg
movsl
fcoms
pop
sti
mov
jbe
xchg
movsl
ficoms
jbe
cld
dec
jge
jmp
xlat
pop
and
and
out
jno
movsb
adc
mov
mov
int3
out
inc
jecxz
xchg
push
pop
data16
jmp
jmp
das
mov
das
xchg
rorl
pop
dec
call
fidivl
fmulp
cmp
fs
mov
add
aad
cld
movsl
lret
lods
aad
lret
out
iret
rcrb
dec
out
mov
outsl
in
ficomps
mov
ret
ret
int
push
or
xor
mulb
stos
or
divb
jecxz
xlat
pusha
cltd
push
pop
add
adc
fimuls
fcmovbe
in
cmp
pop
repz
mov
les
cmp
call
adc
repnz
insl
adc
push
inc
jnp
and
dec
fs
push
xor
test
jne
popf
push
pop
or
mov
addb
mov
in
fstpl
push
cmp
xchg
outsb
lahf
xchg
sub
out
popf
test
jae
pop
xor
sbb
and
scas
jmp
out
mov
in
out
mov
and
jp
outsb
jl
jae
xor
popf
rcr
sub
icebp
adc
xor
insl
mov
mov
int
add
push
popf
sub
sbb
mov
mov
xlat
hlt
xchg
in
in
lret
adc
xorb
lea
dec
cwtl
mov
cmp
mov
push
dec
icebp
push
push
push
cmp
xchg
or
lods
add
inc
pusha
out
movsb
pop
test
loopne
in
or
cltd
pop
mov
xchg
xchg
xchg
jp
lea
xchg
and
ljmp
inc
lahf
aas
push
sub
or
dec
push
fisubs
fistpll
pop
dec
inc
out
adc
pop
movsl
mov
mov
cmp
mov
push
mov
inc
dec
cmp
aas
mov
jmp
cmp
cmp
xchg
jg
popa
cmc
sub
push
jle
mov
inc
iret
mov
xchg
pop
sub
cmc
dec
mov
int
xor
xchg
nop
aad
mov
cmc
shll
cs
mov
insl
scas
inc
sahf
push
ljmp
jbe
sbb
mov
xchg
add
insl
lret
mov
add
outsb
cmp
dec
xchg
and
jnp
jns
and
fwait
mov
outsb
aas
roll
popf
push
daa
inc
push
push
inc
push
popf
sub
cli
pop
es
xchg
daa
inc
xchg
jge
lea
test
or
dec
push
daa
pop
push
in
xchg
popa
pop
jmp
jnp
lock
push
jne
ja
sbb
test
ja
insl
adc
xchg
xor
mov
repnz
mov
mov
add
pushf
iret
mov
out
jbe
jnp
loope
and
pmaxub
xchg
cmp
push
mov
mov
aad
push
pop
jno
outsl
jp
cli
sbb
pushf
fistpll
scas
popa
aaa
dec
cmp
jnp
inc
pop
xchg
fidivrs
and
add
movsl
sub
sahf
test
push
lcall
cli
mov
fnstsw
jbe
fwait
jge
mov
sti
int
lds
push
out
push
imul
dec
sarb
ja
push
sbbb
mov
shrl
xor
daa
stc
jns
int3
inc
lods
bound
ss
dec
outsb
pop
shll
lea
xchg
fstl
fucomi
mov
jne
nop
cltd
pop
jo
ret
push
aas
cltd
pop
leave
xlat
aad
ljmp
es
js
inc
mov
int
mov
mov
shll
push
popf
dec
fsubs
bnd
dec
mov
cltd
sbb
lret
test
mov
rcl
data16
pusha
pop
cmp
lahf
add
pusha
push
xchg
stc
sub
rcrb
stos
or
fwait
out
emms
pop
jbe
pop
les
pop
jno
pop
and
mov
fs
out
aaa
fsubrs
imul
and
or
ja
aaa
scas
mov
test
sub
push
pop
cmpsb
push
push
mov
cmp
mov
popf
sub
fldenv
fnstenv
dec
popa
xchg
jle
jns
cld
sub
and
pop
push
mov
gs
push
push
cmp
icebp
out
pop
addl
pusha
insl
mov
xor
mov
jo
stos
pusha
jno
push
adc
mov
pop
mov
popf
dec
lcall
loope
dec
pusha
insl
popa
mov
lea
push
xchg
stc
dec
and
loope
pop
stos
loop
xchg
out
dec
xor
cmc
aas
jle
aad
cmp
in
pop
dec
lea
test
dec
clc
mov
mov
pop
push
pop
cmc
xor
xlat
fucom
sbb
mov
inc
xor
or
out
jo
aad
hlt
add
loop
lea
sub
mov
xor
lea
dec
lret
inc
lock
add
cltd
pop
sahf
sbb
xchg
xchg
cs
int
lret
mov
cwtl
fldl
jl
repnz
lret
out
mov
cmpsl
adc
imulb
shrl
xor
push
dec
pop
or
push
xchg
mov
test
cmc
add
push
xchg
cmp
clc
mov
das
pop
movl
jae
push
test
jae
push
dec
jns
add
mov
popf
push
daa
imulb
fcmovbe
push
mov
cmp
add
lds
pop
pop
push
dec
jl
sub
xor
mov
push
int
movsb
fstl
mov
mov
mov
sbb
in
pavgb
jmp
add
xor
mov
int
push
scas
push
pusha
or
pop
lods
sub
or
lea
fisubrs
jp
movsb
call
xor
lahf
popa
jae
cmpsb
pusha
add
and
ret
fistpll
arpl
add
sub
lock
cltd
dec
sub
hlt
lret
arpl
std
dec
mov
ret
icebp
push
mov
and
sbb
mov
out
out
int
in
xor
jg
mov
mov
xchg
mov
push
dec
cli
mov
xor
or
add
lahf
cmp
xor
pop
pop
scas
add
test
sti
or
or
mov
add
mov
jae
or
push
jno
pop
outsl
popa
xchg
mov
loope
stc
sub
mov
mov
ret
xchg
jae
pushf
xchg
or
inc
fisttps
std
clc
xorl
mov
ficompl
cmp
incb
pop
stos
push
iret
int
pop
adc
js
lret
mov
fldcw
mov
jbe
mov
mov
mov
mov
adc
inc
sub
push
xlat
jecxz
and
pop
xor
mov
mov
je
sbbl
mov
pop
jne
xchg
stos
dec
and
sub
cmpsb
dec
out
inc
loopne
and
sti
inc
inc
test
lcall
cmp
mov
sub
and
mov
scas
push
pop
dec
mov
pusha
fidivs
sbb
pushf
cmp
lock
adc
jne
or
dec
adc
mov
mov
pusha
cmp
scas
xor
xchg
or
inc
stc
aaa
inc
jmp
cld
push
aas
popf
xor
sbb
pop
xor
cmc
rorl
push
arpl
and
ss
sbb
pop
mov
mov
sbb
jmp
xchg
fdivrs
loop
sarl
mov
mov
push
daa
aas
lahf
nop
and
inc
mov
fprem
and
or
mov
das
cltd
xchg
pop
inc
ljmp
adc
dec
push
mov
push
das
rolb
pop
adc
mov
xchg
push
andb
cwtl
inc
sti
mov
xor
jae
mov
xlat
bound
jb
aad
pop
push
xor
inc
test
rcr
insb
or
xchg
das
outsb
cmpsb
dec
aad
jle
push
mov
fwait
arpl
pop
dec
or
xor
aad
dec
mov
cmp
mov
adc
ret
enter
popf
add
dec
inc
pop
xchg
ljmp
and
in
shrb
mov
jecxz
xor
or
mov
cmpsb
dec
mov
jmp
das
insl
outsb
pop
pop
outsb
setno
int
push
jle
out
fildll
ss
push
xor
rcrb
outsb
adc
movsl
and
iret
add
es
lret
sbb
xchg
push
push
xor
test
xor
jmp
adc
lock
xchg
clc
xchg
mov
add
pop
scas
push
jle
add
repnz
ficomps
lret
scas
jae
jnp
popa
ret
outsl
aad
inc
pushf
pop
pop
lea
dec
rcrl
cli
outsl
rcll
jg
and
rol
pop
pop
jae
in
sbb
sub
lock
frstor
in
je
int
xchg
push
outsb
insl
int
into
or
jne
jbe
test
gs
daa
jg
mov
mov
aas
pop
das
pop
jae
xchg
fucomp
outsb
fists
jo
pop
mov
sub
shll
aam
pop
inc
aas
test
mul
les
je
mov
aad
fidivrs
push
xchg
adc
test
mov
ficoms
sbb
or
ret
stc
pusha
popf
dec
pop
pop
outsl
push
mov
stc
mov
push
insl
adc
pop
add
lret
xor
pop
mov
sahf
outsb
sub
lds
and
inc
scas
out
pusha
ds
imul
cmpsb
imul
inc
arpl
fsub
sub
aad
pop
pop
in
pop
inc
int
scas
ss
jmp
jb
push
sub
test
or
test
repz
xchg
test
pop
sahf
jns
leave
dec
mov
sbb
adc
test
sbb
jg
pop
xchg
xor
adc
in
and
xor
push
out
cmpsl
cmp
pop
pop
jne
xchg
jge
ljmp
mov
fcomps
ljmp
in
and
jno
ljmp
or
jge
dec
icebp
xchg
lret
das
and
sbb
aaa
in
pop
push
out
mov
sbb
stos
cmp
xchg
in
push
je
cs
lea
mov
mov
mov
mov
xor
mov
cli
add
fsubrs
xor
pop
and
pop
inc
pusha
mov
daa
cld
js
mov
push
xor
jno
jne
pop
jb
lret
or
fwait
xchg
cmp
and
lds
jle
out
inc
sahf
lds
mov
popa
xchg
aad
cmpb
decl
adc
test
movsb
test
pushf
ja
pop
push
stc
mov
pop
aam
outsb
push
popf
xlat
insl
dec
pop
jp
dec
jae
cwtl
out
insb
test
popf
out
jecxz
into
shll
push
dec
insl
push
push
ds
imul
xchg
imul
test
mov
leave
in
and
xor
test
arpl
sahf
and
or
outsl
imul
in
js
xor
int
mov
mov
or
push
jo
mov
push
xor
dec
xchg
add
dec
or
push
xchg
jo
cmp
dec
lcall
xor
adc
sub
pop
fidivrs
xor
int
push
dec
and
aaa
jb
push
jne
cmp
flds
adc
cmp
pop
inc
fldcw
pop
xchg
xchg
outsl
popa
and
outsb
cltd
decb
jmp
lea
xchg
ja
aam
xor
add
jge
jns
pushf
lahf
inc
add
in
sbb
cmp
rcr
pusha
adcb
insl
ss
lds
mov
jp
mov
push
fldln2
scas
lea
fs
xlat
jbe
aaa
xchg
or
push
orl
aas
xchg
stos
pop
xor
dec
nop
cltd
or
jns
add
in
xor
jg
addb
sarl
and
out
loope
jle
cmp
and
and
push
and
and
int
push
fstps
aas
pop
fists
insl
lahf
xchg
push
cmp
fisubrs
jae,pn
stos
insl
dec
inc
fidivrs
sbb
mov
push
insl
pusha
popa
imul
ds
arpl
push
or
or
push
jns
mov
or
xchg
push
int
push
data16
xor
jnp
cmp
push
mov
outsb
sbb
mov
aam
mov
mov
out
int3
repnz
repz
jle
adc
lea
mov
jmp
es
cld
and
adcl
mov
out
mov
lret
shll
popf
cld
and
xchg
lret
sti
out
push
ljmp
jbe
xor
das
push
jns
jo
fscale
iret
pop
or
cmp
mov
xchg
cli
and
int
xchg
lcall
sarb
pop
cltd
add
stc
nop
sub
sub
movsb
mov
push
xchg
mov
scas
cs
sbb
push
jo
mov
cs
add
push
sbbb
std
out
out
mov
mov
adc
push
dec
fnstsw
push
mov
pop
sbb
in
mov
testl
pop
xchg
into
outsl
in
lahf
mov
push
mov
fs
mov
add
pop
mov
cmc
adc
fdivr
sahf
outsb
icebp
pusha
add
xlat
adc
mov
cmc
stos
lcall
xchg
adc
enter
mov
stc
add
push
scas
jl
int3
addb
scas
aad
xchg
push
fwait
jo
and
stc
icebp
insl
ficoml
dec
fldcw
mov
jno
mov
lods
adc
cmp
and
cmp
clc
or
lods
pop
cwtl
or
or
into
loope
adc
and
sbb
js
mov
hlt
pop
je
sahf
mov
jecxz
cmc
dec
mov
mov
jle
or
cmpsb
sbb
fmuls
lds
aas
adc
mov
jl
mov
int3
and
pop
inc
xchg
popf
es
jo
push
lds
or
mov
aas
mov
scas
cmpsl
pop
imul
and
test
xchg
jl
orb
popf
adc
push
inc
mov
xchg
stc
push
scas
jo
pop
mov
jo
mov
dec
scas
sub
mov
cmp
hlt
ret
and
cmpsl
mov
push
xchg
xchg
sbbb
adc
scas
xchg
or
std
pop
jns
lods
pop
in
stc
pop
sbb
push
loop
mov
xchg
cmp
sbb
pusha
sub
aad
addr16
xor
insb
xchg
scas
mov
inc
test
or
mov
jle
out
adc
ror
cli
fadds
pop
sbb
movsb
adc
gs
pop
xchg
and
mov
aad
mov
mov
adc
sahf
jmp
iret
fbld
xchg
inc
add
notb
loopne
xchg
test
inc
loop
push
icebp
sbb
jmp
ja
pop
cmp
pop
sbb
popa
cld
cwtl
xor
ja
mov
mov
cltd
lods
jae
push
pushf
push
inc
inc
jne,pt
mov
push
outsl
mulb
add
mov
or
arpl
push
sub
inc
mov
or
int
sbb
sbb
cmc
into
addr16
outsb
call
call
jle
jp
lret
jnp
mov
xchg
popa
mov
mov
jbe
cmp
cltd
inc
and
movsb
sbb
cltd
dec
rcl
xor
test
push
stos
lahf
into
mov
add
stos
sahf
push
push
pop
out
jge
mov
fists
aaa
push
repz
lds
pop
push
lds
push
xchg
jo
push
push
and
xor
mov
insl
and
loopne
mov
and
add
push
push
and
xor
mov
insl
and
loopne
dec
pop
dec
sub
out
into
dec
popf
push
and
xchg
jo
pop
adc
pop
insl
mov
jne
je
ficompl
push
jns
data16
ficomps
insl
jge
jl
loop
dec
testl
test
pop
ljmp
pusha
rcl
insl
push
and
fdivs
int
push
fnstcw
pop
pop
in
imul
leave
repnz
xchg
ds
pusha
sub
add
int3
cmpsl
sub
test
pusha
push
aad
pop
je
mov
push
stc
scas
cmpsl
or
jo
mov
and
adcb
cmpsl
cmp
loopne,pn
flds
xchg
pop
push
cltd
subb
mov
cmpsl
and
ja
pushf
push
ds
cmpsl
push
es
push
fptan
fisubrs
aad
pop
outsb
adc
popf
mov
cs
loopne
jb
sbb
sbb
xchg
push
add
xchg
jo
pop
int
jp
aaa
cmp
push
jle
jo
inc
jmp
pushf
out
xor
enter
xor
push
xchg
fsubl
push
cld
div
jno
pop
pop
inc
mov
inc
dec
and
cmpsl
push
sahf
xor
negb
insl
insl
sbb
and
movsl
nop
dec
cmp
int
cltd
arpl
mov
dec
add
icebp
cmp
sbb
inc
inc
stos
lcall
cmp
out
add
leave
adc
push
jp
insb
mov
xor
pop
mov
jae
pop
cwtl
sahf
decb
loope
cmp
jb
ret
popf
imul
test
aaa
lahf
and
xchg
sar
sbb
pop
stc
mov
cmc
stos
pop
cld
push
xchg
mov
push
or
popa
test
push
inc
dec
rcr
stc
jo
stos
loope
mov
xchg
pop
lret
inc
jl
mov
shrb
mov
jge
lret
orb
mov
lea
fwait
loop
neg
roll
stos
repz
mov
mov
push
jbe
lds
sbb
add
cltd
int
mov
mov
mov
jmp
leave
and
mov
xchg
mov
les
and
pop
addb
pusha
lods
aad
xchg
aas
dec
mov
pop
xchg
dec
pop
in
outsl
cmp
in
and
xchg
pop
lea
arpl
pop
das
mov
jns
imul
mov
inc
data16
out
popf
std
or
add
out
mov
jbe
mov
pop
inc
repnz
push
outsl
in
rorb
rolb
gs
xor
es
js
and
cmc
cld
and
cmp
pop
lea
addl
loope
into
dec
push
adc
jo
cwtl
das
in
mov
cwtl
dec
xchg
xchg
mov
cmpsb
dec
rcll
dec
dec
jbe
or
or
sbb
int3
pop
cmp
outsb
mov
sarl
cwtl
lods
test
jge
outsb
jmp
mov
xchg
out
jbe
jmp
out
clc
cmp
fadd
out
xchg
jg
cmp
mov
movsb
mov
dec
lea
dec
sbb
testl
pop
inc
jecxz
mov
cmp
sti
ljmp
lea
movb
fiadds
movsl
lret
dec
push
mov
jns,pt
sbb
cmp
jbe
loopne
cmp
jge
adc
int
mov
jnp
popf
dec
lcall
pusha
pop
lea
mov
vmulps
push
push
stos
bound
pop
gs
mov
mov
and
rcll
add
es
push
les
loope
mov
pop
in
sbb
cmp
iret
cmpl
fstpl
js
aad
pop
cld
idivl
repnz
iret
aaa
insl
nop
xchg
push
inc
in
outsb
loope
movsb
cld
xor
out
rcrb
into
pop
sbb
xor
inc
and
arpl
mov
pop
lds
mov
jge
inc
push
ss
mov
cltd
shll
pusha
stos
jmp
test
test
jp
dec
adc
jbe
xchg
pop
and
cltd
xlat
mov
jmp
jns
push
mov
outsl
mov
adc
adc
push
insl
ficomps
mov
movsl
rep
xchg
sbb
jne
mov
jbe
cmc
fimull
mov
mov
in
ret
loopne
aad
pop
cmp
lret
imul
sub
mov
rcr
iret
repz
xchg
loop
and
aaa
adc
inc
mov
pop
pop
loope
loope
into
jle
movsl
and
leave
push
pop
das
leave
in
cmc
ficoml
sbb
adc
call
repnz
pop
pop
outsl
imulb
pop
and
push
cli
cmp
jbe
shll
inc
jo
xor
sti
bound
xorb
scas
mov
in
scas
sbb
xchg
add
lds
int
pop
mov
shll
pop
jecxz
ficomps
popa
out
push
shrl
leave
sahf
cmp
mov
jno
jge
popa
adc
and
in
fcomps
cltd
popf
movsl
and
xlat
imul
add
pop
xlat
rcrl
xchg
jns
stc
mov
icebp
and
pop
cs
mov
insl
repnz
pop
test
pop
pop
dec
sarl
lea
leave
pusha
ds
mov
insl
xlat
push
mov
ret
shrl
imul
inc
insl
jl
pop
sbb
adc
dec
pop
dec
int3
sti
imul
sbb
xchg
movsl
sbb
cmp
xchg
outsb
test
rcll
add
jne
icebp
pop
aad
pop
sbb
aaa
imul
xor
sbb
scas
repz
mov
dec
xchg
mov
lods
cmp
jmp
or
xchg
sbb
ds
in
fs
std
mov
adc
jbe
dec
jg
and
adcb
cmp
arpl
test
dec
test
cltd
add
jmp
aas
lods
cmp
mov
ret
nop
popf
std
int
data16
outsl
xchg
dec
and
jns
adc
int3
insl
test
out
repz
push
mov
shll
xchg
rorl
movsl
cwtl
sbb
pop
push
xchg
arpl
repz
outsb
imul
pop
and
mov
push
mov
rcll
outsl
mov
and
ds
fsubrs
popa
mov
jno
movsl
mov
jne
jb
and
push
pop
sub
nop
jmp
test
and
insl
push
gs
and
fs
adc
aaa
inc
sahf
jge
rcrb
push
shlb
mov
fs
jge
ror
mov
mov
stc
dec
jp
scas
lds
in
add
jo
pop
daa
mov
lahf
loop
data16
or
loop
fldcw
push
mov
lock
mov
lret
push
popa
lds
outsb
insl
mov
ljmp
add
lods
mov
jg
xchg
imul
xchg
pop
add
nop
sbb
inc
cmp
outsl
loop
ja
lahf
fadds
lea
mov
rolb
xchg
shl
push
adc
in
lret
xor
pop
mov
iret
xchg
fstps
idivb
sub
movsb
mov
cmp
fst
cmc
mov
mov
es
imul
push
xchg
std
fnsave
cmp
mov
pop
aas
cltd
sub
mov
punpckhwd
scas
rorb
fwait
inc
jo
adc
dec
fisubs
pushf
loopne,pn
jno
pop
rclb
add
dec
jl
mov
icebp
je
cmc
jl
jmp
stos
xor
jmp
lds
ror
fucomi
xchg
jns
inc
fidivrl
and
lcall
mov
jecxz
ret
cmpb
in
inc
adc
sahf
dec
clc
add
arpl
jno
cmpsb
in
push
xchg
cmp
pop
mov
jb
mov
xchg
dec
mov
pushf
clc
xchg
inc
ja
dec
data16
cmpb
popf
mov
lret
mov
in
test
pop
mov
cmp
xor
or
in
and
and
out
sahf
xchg
jns
jbe
mov
xchg
cmp
push
ds
cli
outsl
rorl
mov
add
xchg
pop
sbb
mov
movsl
out
mov
push
pop
inc
pop
cmpb
dec
subb
add
cmc
insl
andb
jmp
xor
call
sub
jae
jo
shr
das
cmc
adc
stc
mov
fwait
push
jge
mov
cmp
pop
mov
pop
add
test
ljmp
push
mov
jecxz
lret
enter
je
outsb
push
cmp
push
cmovs
inc
aad
outsl
mov
mov
shll
cs
adc
sarl
mov
pop
sub
pop
into
fsts
jmp
into
jae
cmp
inc
aas
enter
fidivl
add
adc
aas
gs
add
xchg
jnp
or
sti
push
mov
fidivs
adc
mov
bound
test
repz
jg
lds
daa
cmp
int
mov
and
push
aaa
inc
jle
outsb
xchg
insl
lock
fmuls
loop
out
aaa
fcmovne
xchg
fiadds
std
aad
fildll
push
std
aad
ficoms
sbb
jmp
pop
dec
bound
push
aaa
sbb
push
pusha
jne
add
or
jno
mov
stos
std
pop
pop
or
ror
or
sahf
push
mov
cmc
lds
push
inc
sar
jae
insl
jo
pop
jl
adc
mov
faddl
jne
es
sub
outsl
pushf
push
fdivrs
dec
inc
loope
pop
pop
imul
pop
pop
dec
inc
fidivs
push
addr16
out
push
push
push
add
sbb
mov
sub
sub
sub
inc
jl
std
sbb
sub
imul
idivb
push
add
cmpsl
xchg
dec
ret
sbb
lret
sub
jge
dec
daa
into
xchg
outsb
push
or
mov
or
mov
cmc
out
es
pop
mov
nop
loope
inc
testl
sub
sahf
notl
add
aad
imul
ret
and
push
icebp
icebp
xor
push
inc
mov
jp
xchg
dec
clc
push
cwtl
repz
subb
stc
pop
mov
hlt
shll
scas
loope
addb
outsl
sahf
into
jmp
mov
dec
aam
mov
lock
sub
imul
test
mov
sub
loope
pop
push
and
aad
mov
jnp
or
loope
pop
lret
scas
adc
cmpsl
outsb
dec
dec
xchg
es
fisttps
push
repnz
imul
pusha
jns
mov
xchg
push
test
rolb
push
std
xor
fcoml
out
pop
xor
int
sbb
repnz
xchg
xchg
mov
push
sub
nop
sub
lret
jg
adc
dec
mov
pop
cmp
or
inc
add
pop
inc
ror
mov
or
sbb
loopne
mov
clc
adc
mov
iret
ret
aam
xchg
jns
or
sub
fnstsw
js
std
stos
lods
mov
xor
shll
or
push
jge
adc
sbb
popa
stos
mov
pop
in
xor
mov
dec
iret
vaddps
xchg
dec
add
xchg
xor
push
cmp
mov
xor
jle
jns
or
scas
arpl
cmp
push
pop
adc
pop
and
pop
sbb
int3
fildl
xor
add
cmp
jmp
push
outsb
xchg
sbb
xchg
xlat
subl
lret
stos
pop
mov
sbb
imul
jno
pop
cmc
fildll
mov
ds
and
xchg
inc
in
add
jg
or
lret
xchg
pop
popf
loope
insl
cmpsl
pop
test
jne
push
adc
xchg
mov
dec
fidivs
seta
and
xchg
lahf
dec
mov
data16
xchg
dec
inc
xchg
mov
into
cwtl
adc
jge
stos
cmp
xchg
or
sub
xchg
clc
push
adc
lea
out
xchg
pop
jne
sar
iret
inc
or
mov
jae
lea
hlt
pop
inc
test
pop
outsb
popf
xchg
cld
in
mov
inc
sbb
popf
mov
adc
mov
cmpsl
fnstenv
adc
lods
mov
push
mov
lcall
xchg
mov
neg
mov
stos
adc
cmp
mov
lock
lds
ret
mov
jno
mov
repz
xchg
shrl
in
and
mov
insb
pop
test
cwtl
stos
out
sbb
jb
mov
repz
out
add
xor
fwait
jmp
mov
mov
xchg
aaa
sub
rcrb
jae
mov
dec
sbb
scas
loope
add
pop
daa
mov
int
mov
loopne
lods
fs
lahf
jp
jg
fldl
pop
xchg
sub
pop
jno
outsl
inc
push
mov
and
insb
mov
jmp
sbb
imul
xor
iret
jnp
xor
xchg
fsts
pop
rclb
fldt
inc
or
in
dec
mov
jae
imul
mov
popf
mov
add
out
mov
cmp
repz
filds
jg
xor
push
call
arpl
fnsave
mov
outsl
fstl
cmpsl
mov
js
mov
adc
imul
mov
adc
daa
lea
xchg
outsl
stc
xchg
shrl
jmp
btc
sahf
bound
xchg
popf
popa
fucom
and
outsb
sbb
sti
outsl
mov
cli
mov
or
arpl
add
fcmovnbe
sbb
lds
loopne
sbb
add
pop
push
test
mov
sbb
je
jbe
and
orb
xor
fnstsw
mov
hlt
mov
dec
movsl
sub
pop
dec
jle
jo
lea
xchg
nop
fwait
push
jo
sbb
hlt
inc
add
repnz
push
scas
or
adc
outsb
jne
pop
add
mov
jno
and
jb
loop
punpckhbw
mov
jmp
lahf
push
lea
lcall
nop
subl
loop
out
ljmp
pop
out
cmp
int3
xchg
decb
dec
xchg
mov
fcomp
cmp
int
xchg
xor
lcall
sub
xchg
push
xchg
add
jne
dec
jg
xlat
mov
xchg
aaa
jg
insl
and
lcall
outsb
jae
push
popa
jns
pop
jle
dec
test
inc
das
cmp
scas
loope
lock
fldl
rclb
nop
cltd
push
aad
divps
jg
ds
daa
outsb
jmp
pushf
out
out
add
cs
push
outsb
test
mov
mov
jns
jnp
mov
xchg
roll
mov
cwtl
jp
gs
mov
inc
outsl
cmp
lcall
mov
xor
mov
adc
sarb
js
in
sub
jle
xlat
in
mov
push
jp
dec
sbb
xchg
cmpsb
lahf
mov
idiv
int
cmp
pop
pop
jbe
xchg
push
jno
fnsave
or
xlat
int
mov
fucomip
jg
shlb
insl
fildll
movsl
mov
sti
xlat
mov
and
test
mov
test
xor
sub
lahf
jle
std
xchg
mov
dec
mov
fstpl
push
inc
adc
xchg
pusha
lods
adc
pop
aaa
filds
push
push
and
sbb
gs
push
jge
imul
jl
xor
inc
mov
sbb
dec
push
dec
test
mov
add
mov
in
aaa
push
cwtl
lods
arpl
pop
lods
xchg
push
inc
bound
add
mov
cwtl
adc
out
pop
or
xchg
sub
test
mov
daa
or
push
xchg
push
sbb
sahf
insl
into
push
push
adc
push
addr16
mov
jle
sub
sbb
out
test
xchg
jbe
stos
cmp
lret
jnp
int3
icebp
cs
mov
shrb
cli
jge
mov
nop
push
lds
push
jb
cwtl
cmpsb
cmp
out
lds
mov
mov
pop
int
ljmp
std
mov
inc
hlt
stos
pushf
push
loope
jle
jp
sub
jp
insb
pop
xor
push
cmp
popf
jl
jbe
cmpsb
int3
cmp
push
mov
fisubrs
xchg
lods
and
and
into
pop
mov
in
sarl
testb
mov
iret
pop
aam
test
popf
daa
mov
popf
enter
mov
pop
jle
pop
sub
popf
mov
push
sub
fimull
mov
test
repnz
fiadds
loopne
stc
in
stos
mov
add
ss
cmp
stc
outsl
ficoms
mov
dec
sahf
insl
cmp
xchg
test
jge
shr
push
inc
dec
fisttps
and
or
inc
mov
xchg
mov
nop
sbb
dec
out
outsb
dec
adc
push
jo
outsl
scas
lea
dec
out
mov
sbb
stos
add
pop
pop
xchg
inc
rcrb
add
and
icebp
lea
daa
enter
popa
hlt
jle
lds
testl
pop
mov
mov
dec
ret
sbb
xchg
lahf
pop
jp
dec
xor
sub
movsl
xchg
pop
push
pop
jp
add
aas
dec
fucomip
add
inc
fbstp
sbb
xchg
add
inc
iret
and
xchg
lock
xor
int
popf
stc
gs
cs
aad
pop
xor
jmp
xor
pop
sub
outsl
cwtl
fldl
dec
fsubrl
data16
outsl
test
push
jge
push
arpl
inc
mov
popa
ja
xor
xchg
dec
mov
cmp
add
loope
pop
jbe
aaa
enter
xor
ss
sub
inc
xchg
fiaddl
testb
mov
mov
or
shl
xchg
mov
lcall
in
stos
sbb
int
jno
adc
outsb
jo
mov
jge,pn
insl
xchg
mov
insl
mov
jp
sbbb
adc
pop
jp
and
adc
pop
cmpsl
mov
int3
push
inc
jl
pop
nop
vpmaddwd
mov
lock
and
loope
mov
xor
jmp
xchg
loopne
call
pusha
dec
dec
mov
int3
pop
addr16
mov
mov
sbb
inc
mov
mov
cli
mov
pop
push
push
faddp
fcomp
jle
mov
pop
lret
xor
adc
push
in
xor
pop
jle
in
dec
mov
fdiv
popa
push
adc
popa
pop
and
lods
mov
notb
fs
and
xchg
sbb
outsl
data16
addb
sbb
lahf
cwtl
pop
jl
jecxz
out
scas
loopne
aad
cmp
add
pushl
popf
popa
cli
dec
and
jp
imul
repz
cld
testb
loopne
push
idivl
mov
ds
jle
push
dec
psrad
rorb
jmp
out
ror
xchg
pop
stos
mov
aad
in
insb
stos
jecxz
pop
add
ja
lds
lea
cmp
cwtl
dec
cmp
push
dec
lahf
pop
xchg
pop
movsl
mov
mov
lahf
ljmp
mov
sbb
jno
pop
fs
subl
push
fwait
pop
out
data16
push
jle
rcll
lret
add
loop
jge
xor
dec
sbb
jmp
into
lods
cld
adc
dec
fisttpll
jge
inc
pop
xchg
push
mov
aad
daa
daa
and
pop
sar
adc
rcrl
test
sti
mov
mov
out
lds
mov
jl
in
fidivl
mov
lock
mulb
aas
jne
lods
mov
dec
or
lret
imul
gs
in
fs
divl
rolb
out
mov
movsl
xchg
lods
mov
adc
jmp
cmp
or
data16
xchg
into
ficoms
jmp
mov
mov
jecxz
rclb
add
pop
decb
push
cs
mov
jae
push
outsl
cmp
cs
shlb
imul
or
pop
add
mov
sub
inc
cmp
aam
neg
adc
jno
jns
inc
or
cmp
stc
push
mov
scas
cmp
pop
fwait
pop
sbb
cltd
cli
decb
jle
and
mov
fistl
pop
dec
fisubl
iret
add
mov
add
or
pusha
jno
xchg
or
test
std
stc
jge
daa
and
loop
fiadds
jmp
fldl
loop
dec
pop
clc
lea
pop
inc
mov
xchg
popa
ficoml
fnsave
pop
lods
mov
or
sub
and
test
sub
fldcw
pop
dec
cmp
enter
dec
xchg
fidivrl
add
or
pushf
jae
sbb
popf
icebp
pushf
push
sub
push
jmp
cmp
mov
mov
add
pop
outsl
jge
pop
flds
icebp
loopne
lret
cmpsb
fs
mov
cmc
mov
pop
stc
pop
pop
iret
push
sbb
stc
pop
jno
insl
xlat
jno
iret
xchg
lret
mov
sbb
xchg
push
dec
cli
test
push
mov
es
nop
sub
nop
cmp
mov
xchg
inc
ljmp
movb
or
pop
jle
sahf
cmp
pop
jne
mov
xchg
mov
add
movb
xchg
or
scas
push
lods
cmp
cltd
dec
aas
cld
sub
mov
lods
and
inc
sbb
std
inc
outsb
jl
xor
popf
sub
loope
fisubrl
lret
leave
movsl
xchg
xorb
adc
push
and
sbb
pop
xchg
jbe
leave
and
cwtl
pop
lret
and
aam
andl
mov
test
lds
std
and
cmp
repnz
fisttpll
mov
dec
sub
dec
movsl
mov
fwait
call
jns
jnp
fstps
xchg
into
or
test
mov
xor
and
push
xor
and
jbe
mov
arpl
subb
inc
push
dec
push
push
dec
adc
jne
xor
push
cltd
in
loopne
popa
arpl
popa
inc
xor
popa
dec
ljmp
push
xchg
dec
xor
push
lds
outsb
pop
in
outsl
push
xchg
gs
mov
out
arpl
test
add
andl
dec
xor
pop
lds
iret
xchg
in
test
shl
or
xlat
mov
sub
shll
xchg
jecxz
xchg
mov
pop
icebp
push
inc
mov
pop
iret
xchg
xchg
pushf
mov
xlat
and
ja
testb
js
dec
and
jle
cltd
pop
ret
push
decl
lods
popa
and
mov
push
call
mov
sbb
rorb
js
aad
lret
cmp
std
movsl
jp
popa
sub
movsl
test
aaa
jnp
andl
xchg
push
mov
xor
popf
icebp
lods
jmp
add
jns
insl
scas
or
int3
cmp
js
out
sbb
dec
dec
inc
xchg
sub
xor
sbb
inc
call
inc
jge
in
sub
std
imul
or
sub
jl
mov
mov
xchg
mov
xchg
aaa
stos
xlat
test
in
dec
mov
push
icebp
stc
or
pop
and
cli
mov
dec
leave
push
xor
repnz
shlb
xchg
dec
xor
add
dec
test
rorb
pop
popf
icebp
insl
and
sub
into
push
popa
cmp
adc
lret
gs
rorl
push
pop
jns
xchg
sbb
dec
repz
dec
push
inc
jno
sub
repnz
dec
xor
mov
les
mov
scas
stos
je
mov
push
jne
pop
sbb
pop
stc
into
fsubr
leave
xor
push
dec
fsubs
sbb
imul
insl
test
sar
dec
cmpsl
mov
push
mov
lds
xchg
jb
test
mov
pop
inc
mov
in
jno
pop
fisubrs
inc
data16
in
add
mov
push
fcomps
push
lds
sbb
or
jmp
inc
lods
outsb
adc
and
adc
fbstp
mov
out
jge
or
nop
mull
jle
jae
dec
jge
scas
int
push
subb
push
repz
clc
mov
push
sub
inc
scas
negb
or
sar
mov
sub
scas
and
rclb
sti
xor
mov
jae
les
insb
fwait
add
add
jne
lahf
nop
cmpsl
or
imul
mov
callw
push
ret
outsb
in
rcr
mov
dec
aad
xor
and
jl
ja
popf
inc
std
stc
push
jno
xchg
in
mov
or
or
pop
inc
sbb
mov
lock
xchg
imul
enter
dec
movsl
push
imul
loop
js
and
sti
dec
andl
xor
pop
outsl
xchg
repz
repz
xchg
cli
xor
lahf
scas
subl
cmp
fdivrs
stos
xchg
stos
mov
sub
adc
jg
mov
sub
cmpsl
decb
dec
jae
lea
push
or
int
ljmp
dec
loop
mov
sbb
das
and
mov
imul
jb
scas
aam
jns
les
repnz
daa
outsb
lahf
jl
push
push
hlt
repnz
fnstsw
outsb
and
daa
xchg
movsl
cmpsb
pop
leave
outsl
jg
lret
icebp
lods
aad
ja
int3
jge,pt
out
leave
scas
out
push
jae,pn
sbb
push
fldcw
pop
xor
mov
cs
mov
in
jo
fimuls
loop
xchg
das
adc
outsb
scas
lea
jo
outsl
fldcw
aas
pop
out
push
cmp
push
outsb
cmp
sub
in
test
and
dec
insl
cwtl
pusha
int
push
aaa
pop
das
insl
dec
jecxz
pop
xchg
lea
daa
shlb
mov
addr16
sbb
int
jle
frstor
outsb
ss
andl
fists
jns
dec
lods
mov
inc
inc
adc
lea
mov
mov
popf
mov
aaa
jns
je
adc
lea
add
cmpsb
into
mov
cmp
sbb
inc
pop
adc
sarb
xchg
loope
push
fstl
sub
lea
aaa
xor
scas
insl
gs
iret
lret
sub
push
push
pop
pop
pop
jecxz
cltd
pop
dec
das
clc
push
jg
push
dec
xor
inc
push
xlat
jle
aas
cltd
dec
add
jae
test
inc
pop
push
jl
incb
cs
rep
rcrl
lea
pop
dec
fs
xchg
mov
jg
scas
stos
and
mov
or
je,pt
dec
dec
jp
cmp
pop
mov
jno
xchg
das
aad
pop
scas
outsl
jae
xchg
out
aad
bound
test
or
cld
add
popa
clc
pop
pop
popa
add
dec
pusha
pop
popa
push
inc
leave
xchg
nop
arpl
add
pop
push
xchg
lds
inc
mov
test
pop
cmp
add
rcrb
cs
push
das
insl
pop
fcomip
sbb
test
shll
xchg
cmp
popa
pop
stos
loop
xchg
roll
ds
dec
pusha
pop
popa
dec
jg
push
inc
repnz
cmp
popa
aad
ja
pop
cld
scas
xrstor
jbe
jp
pushf
sub
icebp
push
pop
mov
mov
ljmp
cmc
adc
or
inc
ja
inc
adc
imul
lods
mov
mov
xlat
jo
and
add
popa
mov
lock
push
mov
lock
je
adc
mov
popa
dec
inc
mov
inc
insb
sahf
stc
sti
out
mov
cmp
ljmp
push
and
pop
insl
sarb
mov
jae
test
dec
xchg
repz
insb
adc
mov
mov
gs
out
pop
dec
clc
jns
lds
inc
ja
dec
fistpll
mov
push
jge
les
andl
mov
mov
inc
push
push
lahf
jge
jae
ds
test
inc
inc
pusha
dec
cs
jp
jmp
ja
dec
scas
jle
jnp
popa
jbe
xchg
aaa
lea
mov
lret
or
pushf
mov
aas
ljmp
inc
jge
push
sbb
stos
or
mov
stos
mov
loope
pop
and
add
mov
mov
jne
jne
xor
out
xchg
nop
lds
pop
in
cltd
and
sub
push
lcall
pop
in
sub
imulb
jbe
fucom
ficomps
adc
out
dec
push
test
push
xchg
jp
cld
xchg
stos
mov
jl
jmp
mov
cmp
jmp
dec
psrlw
movsb
std
rclb
lds
cmpsb
or
sbb
or
sbb
jecxz
sahf
push
mov
adc
or
clc
lock
mov
inc
xor
test
lea
add
lcall
push
xchg
popf
lret
out
std
test
repz
ficoms
loop
lahf
lods
push
lock
cwtl
or
mov
push
loopne
inc
mov
or
cli
and
mov
les
pop
dec
pop
and
mov
sub
push
jmp
sub
movsl
ror
inc
arpl
lea
movsl
sub
mov
dec
cmp
dec
dec
in
pop
xchg
jl
adc
dec
jp
jo
aas
cli
outsb
cs
or
stc
sbb
and
insl
or
xchg
push
pop
rol
adc
fcom
cmp
ljmp
add
imull
add
cwtl
jne
or
negl
ret
and
add
imul
jno
in
cmp
jo
je
stos
jecxz
mov
and
cli
mov
or
ret
popf
sub
push
sub
aad
rcll
sub
add
bound
loopne
dec
or
aam
inc
pop
frstor
popf
pop
mov
and
iret
sti
orl
xchg
dec
mov
cmc
mov
mov
fcomps
and
cli
test
leave
lock
div
xchg
xchg
iret
mov
or
jl
sarb
stc
or
and
mov
push
daa
aad
pop
xchg
leave
add
nop
mov
into
nop
pop
lret
stos
pop
std
xchg
sti
mov
mov
lds
jnp
cli
incl
loop
xor
fcmovnbe
lea
mov
addr16
inc
mov
stc
sub
adc
rorb
and
push
clc
push
or
fidivrs
sub
cmc
and
stc
std
shrl
scas
xchg
cmp
orb
clc
mov
cmp
dec
cmp
inc
fisttpll
mov
insl
insl
pop
lea
mov
out
mov
dec
jno
jno
ffree
ficoms
push
loop
fcoms
in
push
lods
fstpt
jg
mov
call
push
mov
loope
dec
stos
xchg
cmpsb
inc
ljmp
popf
mov
xor
mov
jns
push
jnp
dec
stos
pop
fisttpll
jno,pn
stc
xchg
lea
lret
sub
push
push
inc
sub
fscale
jg
loope
pop
repz
mov
repnz
inc
push
inc
add
stos
movl
adc
and
pop
in
jl
inc
sbb
jno
lds
add
pop
pushf
sbb
sahf
nop
mov
out
rcl
imul
cli
iret
inc
icebp
cmc
xor
push
mov
push
int
jecxz
jmp
gs
stc
mov
lret
lret
out
xchg
pop
push
cmc
sbbb
xchg
jns
mov
inc
movl
in
clc
xchg
jno
and
insb
das
jns
loope
bound
sub
push
sbbl
sti
inc
dec
mov
and
pop
cmc
ret
xchg
jecxz
push
fnstenv
xchg
mov
inc
scas
cmp
stos
bound
xor
xlat
repz
jae
scas
xlat
cltd
dec
cmc
push
scas
adc
pop
int3
pop
cmp
mov
roll
push
xor
mov
dec
inc
push
outsb
mov
pop
ljmp
lea
push
pop
push
pop
clc
mov
xchg
dec
xor
es
inc
mov
das
pop
and
dec
div
lahf
movsb
xor
jmp
sahf
dec
mov
scas
outsl
mov
pop
orl
cltd
sahf
jmp
scas
icebp
call
mov
cltd
jo
jo
fwait
jle
xor
shll
ret
xchg
dec
xchg
scas
jo
fsubrs
fstps
xchg
add
ss
fidivl
popa
sbb
mov
push
mov
pop
fldt
sbb
imul
mov
mov
inc
mov
push
popa
jmp
push
lcall
jmp
sahf
xor
inc
cmpsb
fbld
in
push
jg
mov
jbe
push
repnz
lods
mov
out
jle
les
nop
xchg
mov
movsb
push
jmp
xor
push
cmp
ret
sub
sahf
or
ret
les
mov
or
sbb
xchg
push
lea
imul
adc
xchg
jo
xor
fstpl
imul
iret
aad
aad
out
jb
decb
xchg
xlat
jno
jns
ss
lret
sarb
mov
in
adc
ljmp
mov
xchg
push
ja
lds
bound
cmc
push
cltd
or
subl
xor
xor
sbb
out
pushf
xor
scas
aad
sbb
inc
pusha
dec
inc
xchg
xchg
das
sub
inc
aam
outsl
jne
cs
out
scas
xchg
add
push
push
mov
out
popa
outsl
xchg
das
inc
mov
jle
popf
adc
inc
scas
xor
pop
movsb
jae
lods
aas
push
es
jle
ds
stos
mov
imul
jle
lret
aad
push
lds
ss
and
popf
push
jl
cld
pop
xchg
xchg
aas
cltd
cmpsb
incl
push
shlb
out
pop
cli
int
fstl
xchg
clc
fs
int
sub
adc
mov
cmp
push
jle
pop
lock
cmp
mov
popf
mov
mov
pop
insb
jbe
mov
out
in
test
and
xchg
xor
out
inc
outsl
cltd
pop
cs
jno
lods
int
std
push
movsl
mov
outsb
cmp
ljmp
insl
cld
enter
adc
shr
jle
pop
push
sbb
bound
imul
sahf
and
lock
fsts
jge
sub
dec
jp
sub
pop
add
lock
cltd
dec
sub
sub
arpl
movsl
movsb
xorb
add
jne
fisubrs
popf
popa
jmp
ret
xchg
push
sbb
inc
sbb
push
add
push
mov
inc
jmp
mov
mov
aam
test
or
test
dec
lcall
push
rorb
in
pop
js
lea
or
push
hlt
popf
mov
sub
pop
movsl
aad
cmp
cltd
and
xor
movsb
in
mov
fucom
insl
rorl
jbe
cs
mov
cmp
jno
outsl
popa
scas
pushf
adc
adc
push
add
add
xabort
int
bnd
and
outsb
push
cltd
lock
jle
ds
mov
pushf
into
jmp
sti
or
push
outsb
cwtl
cmp
add
fisubrs
stc
testb
inc
push
scas
jne
xor
lea
stos
lea
aad
pop
loope
mov
in
mov
inc
xchg
bound
movsl
sub
sti
push
mov
push
inc
dec
imul
daa
mov
jle
mov
xor
jecxz
or
ds
cli
dec
add
int
js
popf
cmp
rcrb
lods
or
sub
inc
jno
push
lret
icebp
jne
add
mov
adc
adc
into
inc
and
mov
push
xor
test
mov
jns
fnstsw
cs
jle
mov
shrl
outsl
jge
icebp
lcall
pop
sahf
inc
cwtl
cmp
sahf
jo
and
in
ja
mov
xchg
adcb
jae
mov
sbb
mov
out
pop
mov
jle
outsl
mov
outsb
dec
aam
jp
rcll
popa
outsl
mov
push
mov
mov
mov
cmc
hlt
ret
stos
das
cli
faddp
out
aaa
lahf
xor
jno
int
cmpsl
push
pushf
sub
stos
out
xchg
xor
rolb
inc
insb
outsl
push
out
or
icebp
insl
push
mov
pop
push
and
aad
insl
aas
push
dec
shrb
xchg
mov
pop
mov
pushf
fdivr
and
cmp
xchg
xchg
insb
cmp
mov
add
mov
inc
out
stos
xchg
loope
in
adcl
push
stc
dec
sarb
subl
sahf
mov
insb
adc
ret
adc
leave
lret
or
push
imul
inc
sahf
push
rcll
mov
jns
fcmovb
pop
sti
sbb
cld
dec
push
popa
shrl
aad
pop
pop
push
fldenv
dec
pop
mov
mov
jmp
decb
fnsave
jno
dec
sub
ret
adc
icebp
mov
insl
pop
xchg
mov
and
mov
and
popa
or
outsl
jecxz
adc
jg
pop
cmp
mov
frstor
inc
push
inc
cmpsb
scas
fidivs
jge
out
mov
out
xchg
sbb
pop
ljmp
and
xchg
mov
ss
push
in
xchg
jle
insl
inc
push
jo
mov
enter
fdivrl
inc
outsb
sub
outsb
jle
pusha
aam
std
cli
sub
mov
cmp
or
inc
mov
push
push
xor
pop
push
sahf
add
in
sbb
fcomps
jmp
add
mov
cmpl
add
jg
cmp
in
movsl
iret
mov
jns
sbb
and
mov
loope
or
mov
adc
add
mov
lea
pusha
adc
mov
jmp
pop
imul
nop
cltd
xchg
stc
ss
xchg
loop
das
push
xchg
sarb
push
sub
rcll
xor
pushf
shll
dec
shll
je
or
xor
aas
pop
mov
sbb
pavgb
iret
icebp
test
enter
mov
jb
into
mov
or
int
lds
xchg
rcl
adc
rclb
inc
adcb
pusha
ret
cmp
daa
add
pop
scas
lahf
daa
pop
out
fiadds
mov
mov
scas
xchg
gs
mov
or
mov
bound
cmpsl
mov
js
pop
push
cltd
or
adc
outsl
pop
push
addb
add
int3
cmc
adc
push
pop
inc
dec
jo
jns
mov
movsl
mov
push
cs
dec
sti
fstpl
cmp
xchg
ljmp
push
and
push
xchg
and
imul
cmp
xor
fstl
imul
outsl
int
mov
cmpsb
and
out
lret
lret
xchg
sbb
or
into
jp
push
loope
sub
cmp
vmovdqa
repz
lock
fdivs
jne
test
ficomps
das
push
xor
sbbb
repz
cld
fcoms
xchg
cltd
mov
and
add
in
rcrl
fidivrl
loope
dec
jle
jge
int
test
inc
adc
ffree
fnsave
mov
inc
inc
out
jno
mov
or
jle
fisubrs
outsb
nop
add
fwait
in
add
jmp
lret
shll
in
xchg
xchg
out
shlb
popa
bound
cli
or
and
adc
adc
pop
push
xchg
mov
and
test
lds
aad
jmp
pop
xchg
xor
rolb
pusha
mov
cltd
fnstenv
mov
mov
jge
push
inc
dec
arpl
movsl
pop
and
mov
adc
popa
jne
xor
adc
jge
and
dec
orb
lods
cltd
shrl
arpl
lahf
popa
inc
cmp
or
pop
xchg
mov
cltd
xchg
popaw
rcll
adc
fwait
inc
jno
loop
or
mov
mov
in
rcrb
cmp
nop
les
aas
pop
mov
nop
in
dec
cmpsl
aas
mov
mov
jmp
push
lods
lahf
mov
xor
les
push
lods
fistpll
nop
sub
push
jo
xchg
pshufw
xchg
rorl
xchg
push
enter
aad
push
pop
or
mov
int
lea
xchg
xlat
gs
xor
adc
mov
jo
daa
pop
scas
lahf
mov
lods
and
mov
lock
fcomps
xchg
add
push
shlb
adc
lods
xlat
xchg
lcall
js
push
pop
in
mov
pop
mov
jge
mov
int
and
call
stos
data16
in
icebp
stos
mov
out
ss
into
and
push
jge
push
pusha
and
mov
push
pop
push
xchg
push
push
and
pop
cmp
dec
dec
das
movsl
out
popa
hlt
mov
in
rolb
andb
xchg
mov
fstpl
ds
inc
dec
fsubrp
push
sbb
mov
adc
xchg
jno
aad
pop
dec
jae
xchg
into
fisttpll
aad
bound
lods
fcmovnbe
and
mov
inc
leave
push
gs
jl
ret
and
imul
call
outsb
outsb
jecxz
subl
mov
inc
mov
inc
test
lea
mov
lea
pusha
push
pop
pop
mov
pushf
mov
inc
fstps
insl
add
fprem
mov
clc
adc
mov
xlat
addl
cmc
std
stc
dec
pop
jo
test
es
and
xchg
fstl
and
xchg
ds
es
test
popf
test
and
subb
ficomps
cmp
jmp
and
fimuls
sbb
int
push
movsl
xchg
jno
in
subb
movsl
mov
jecxz
test
xchg
cltd
xchg
mov
mov
fidivs
jmp
subb
loope
adc
push
jno
mov
jno
jg
xchg
fcomps
inc
and
sub
sub
xchg
xor
push
mov
push
mov
mov
imulb
mov
shlb
addr16
jl
je
lahf
test
or
int
aam
push
push
mov
pusha
jle
das
outsb
push
or
jo
or
push
filds
adc
sub
sub
mov
sbb
add
call
das
mov
pop
out
daa
fidivs
int
or
jns
or
lret
rcr
loopne
sbb
mov
rcl
push
xchg
gs
ret
adc
cltd
popf
lea
std
push
arpl
cmp
dec
outsl
sub
out
add
push
push
mov
or
push
dec
enter
push
inc
loope
push
sub
push
pop
pmulhuw
and
sbb
or
pop
iret
lea
in
mov
out
sbb
in
test
jns
mov
cli
cmpsl
xor
xchg
push
aad
out
or
xchg
cltd
subb
test
cs
stos
jae
cmp
pop
scas
jb
cs
imul
pop
and
xchg
testb
out
dec
push
fsubl
jae
jle
push
lret
jecxz
roll
xlat
movsb
ss
sahf
stos
adc
cwtl
sahf
cs
jg
pop
jge
or
mov
pusha
outsb
mov
sahf
cmp
add
mov
icebp
pop
sbb
cs
fs
insl
xor
loopne
outsb
cmp
jns
mov
fstl
aad
pop
dec
jae
xchg
into
fisttpll
aad
aam
push
popa
cmpl
aad
loopne
ret
inc
pop
xchg
test
inc
adc
mov
mov
lret
cmp
loop
aad
out
sub
repnz
sbbl
push
insl
fsubs
jmp
gs
cmpsb
icebp
jle
rorb
mov
push
std
jnp
nop
mov
and
push
inc
insb
dec
in
out
push
int
dec
jmp
rcrb
popf
sbb
loopne
dec
lcall
pop
ss
or
push
cli
push
ret
lret
mulb
cltd
jne
jge
enter
push
lea
mov
fnstsw
scas
addr16
mov
sub
sbb
test
adc
mov
dec
mov
or
xor
pop
in
fnsave
cmp
mov
push
mov
jecxz
out
icebp
fadd
sti
stos
leave
sbb
mov
push
push
fnstsw
nop
sbbb
mov
orl
inc
sub
cwtl
mov
mov
mov
mov
pop
inc
xor
clc
cmpsl
xchg
aad
movsl
push
fimuls
dec
add
xorb
pop
std
mov
add
mov
fwait
jmp
mov
subb
push
sbb
int
out
mov
shlb
rcrb
inc
or
out
aad
out
jp
xlat
rcr
das
sub
enter
jbe
mov
decb
sub
pop
sahf
aad
in
mov
mov
mov
xlat
mov
jle
add
and
in
cmpsl
fimuls
cltd
push
lds
lret
stos
cltd
xorb
xor
repz
cmp
in
imull
orb
and
hlt
sub
xchg
lds
stc
jmp
outsb
xchg
sbb
adc
jle
mov
push
and
scas
xor
push
and
mov
jecxz
or
adc
fisubl
dec
jno
push
in
gs
ds
xchg
loope
pop
mov
int
hlt
stc
cmp
jo
fldt
jp
jg
cmp
icebp
pop
std
lea
dec
lods
cmp
jge
push
add
out
icebp
dec
gs
jge
add
or
and
or
or
lahf
add
jno
pop
sbb
xchg
scas
pop
fimuls
or
pop
in
mov
in
mov
in
imul
in
dec
fldln2
int3
xchg
in
cmp
in
mov
xchg
popf
xor
das
mov
push
push
inc
pop
mov
cmc
fldenv
arpl
pop
test
in
or
adc
pop
popl
test
adc
xor
add
mov
cmp
inc
dec
add
test
sahf
ja
xchg
adc
in
leave
jno
loope
es
xchg
leave
leave
ror
pop
sarl
andl
aam
jae
and
push
ss
fidivrl
mov
and
pop
mov
fstp
es
cmp
jecxz
je
push
rcrb
push
xor
aas
gs
mov
int3
adc
shll
fsts
push
jge
push
cmpsl
xor
fwait
lds
ret
je
call
xchg
inc
ljmp
in
push
stos
vsqrtps
shll
in
or
das
mov
inc
std
xchg
sub
sbb
fcompl
add
jge
or
movsl
pop
xchg
lods
xor
je
lea
jo
push
and
and
lock
mov
shr
cmp
lret
xchg
sub
xchg
inc
cs
ds
sti
lock
cmpsb
xor
daa
mov
mov
sarl
rorb
ja
stos
jno
mov
mov
fcomip
aad
adcb
add
dec
mov
cmp
aad
xorl
ror
add
and
jnp
xor
xlat
in
jge
cli
push
jle
lea
in
mov
ja
fisttpll
and
stos
inc
out
fldl
push
xchg
mov
in
pop
lea
es
lods
mov
xor
mov
xchg
jle
orb
mov
sub
or
or
gs
inc
jle
inc
jmp
int
aad
fstpl
sbb
mov
pop
mov
dec
out
adc
xchg
or
div
jp
xchg
fimuls
aad
xchg
into
mov
mov
aas
out
mov
mov
mov
insl
movsl
xchg
aad
or
mov
mov
sahf
push
mov
and
movsl
ja
sbb
mov
pusha
popf
movsl
movsl
or
mov
pop
pop
movsl
mov
sbb
lods
mov
lea
jae
lods
pop
jae
jno
or
inc
ljmp
subb
push
movsl
mov
dec
push
daa
push
fisubs
xor
push
mov
xchg
popa
jae
pop
les
cmpsb
jg
cli
cmp
stc
repnz
sahf
jne
inc
sub
pushf
jge
add
inc
cmp
loope
gs
add
cmp
pop
sub
jp
jp
test
lods
cmpsl
aas
incb
insl
xchg
pop
add
insl
xor
and
rolb
mov
mov
hlt
cmp
sub
push
inc
pop
mov
pop
js
mov
js
mov
imul
fidivrs
and
test
shlb
popf
stos
inc
adc
aas
div
inc
add
fnsave
clc
idivb
pop
fldt
mov
sbb
jb
mov
pop
mov
aas
out
and
mov
decl
stos
dec
and
mov
lods
or
adc
lds
out
je
fstl
movsb
xor
jnp
xor
shrl
cmp
shl
popf
sahf
and
and
enter
mov
outsb
int
jns
add
or
jle
outsb
dec
cli
outsl
popa
lret
and
fiadds
cltd
outsb
push
adc
shlb
std
cmpsb
dec
xchg
aas
loopne
jle
ret
sbb
ljmp
sti
inc
pop
imul
scas
or
imul
icebp
lcall
aam
lret
push
cmp
fnstenv
hlt
arpl
and
fidivs
movsl
jge
sub
icebp
sahf
pop
sub
sub
adc
aam
shlb
dec
in
scas
fisubrs
jl
mov
jns
loopne
jo
add
dec
scas
mov
rcrl
subl
adc
fsub
sar
jne
jb
pop
push
icebp
push
jns
add
xchg
push
pop
pop
mov
and
xlat
push
jmp
mov
lret
mov
rcrb
mov
mov
mov
das
pop
fildll
es
in
loopne
mov
cmp
pop
test
add
jns
pop
jle
pop
add
xchg
scas
jo
xchg
mov
mov
xchg
subb
jle
out
dec
and
das
cmp
das
int3
jbe
rorb
fisubrs
sub
fisttpll
shrl
push
pop
ficoms
gs
call
rorl
dec
aas
cld
icebp
dec
std
mov
or
sub
dec
jno
sbb
inc
into
movsb
sbb
or
scas
cmpsl
pusha
daa
into
fldz
scas
lods
jno
add
cmpsb
sbb
loope
cwtl
inc
push
push
push
movsb
mov
jmp
xlat
insl
push
sub
or
pusha
inc
jne
and
push
negb
or
sub
mov
jns
push
out
js
nop
push
jmp
mov
xchg
cmpsb
sbb
xor
outsl
xchg
lea
popf
xchg
xchg
pop
out
cli
stos
stc
nop
dec
ret
movsb
dec
cmp
jle
jge
shr
xor
daa
test
imul
nop
jb
mov
cli
fsubl
pop
lea
mov
xchg
lretw
bound
cltd
add
incl
lds
les
xchg
jmp
push
xlat
push
test
cmc
inc
add
pop
repz
cmp
mov
jecxz
cmp
inc
inc
mov
in
dec
add
dec
jne
dec
or
pop
fldpi
insl
pop
and
outsl
and
dec
cmpsl
inc
in
pop
imul
sti
in
fsubl
push
sbb
shll
pusha
leave
or
cmp
test
jbe
into
xchg
add
fdivrs
out
pop
fisubs
lahf
push
sbb
gs
sarl
out
enter
std
cld
test
xchg
push
sub
jne
mov
pushf
dec
sti
sub
lcall
aad
push
ret
mov
arpl
outsl
or
inc
pop
push
cmpsl
mov
pop
xlat
mov
add
push
mov
loopne
xor
adc
sub
enter
lret
pop
sub
dec
mov
mov
incl
shlb
jle
imul
daa
fucomp
mov
sbb
jmp
les
fsubrp
test
insl
fs
dec
rcll
sub
inc
mul
or
mov
xchg
xor
stc
inc
pop
js
ficompl
xchg
push
out
cmp
push
and
fldt
push
icebp
dec
lods
push
adcl
inc
lock
in
dec
cli
cld
sub
mov
lods
arpl
imul
or
rorl
dec
xor
gs
stc
inc
push
sbb
loopne
add
pop
lea
add
mov
xchg
lods
outsl
stc
insl
js
movsb
insl
ss
mov
cld
xchg
push
cld
cs
mov
shrl
dec
call
rcrb
lods
arpl
mov
pop
negb
pop
ljmp
or
fwait
ret
aaa
xchg
rolb
sbb
test
push
push
pop
and
sbb
sbb
stc
ficomps
sbb
insb
add
adc
arpl
mov
lds
inc
adc
adc
lods
lds
mov
fnstcw
sahf
loopne,pn
dec
pusha
lea
jne
rep
mov
icebp
pop
ljmp
data16
or
push
outsb
popa
je
into
roll
in
jae
stos
cmp
push
cmp
or
mov
push
sbb
jge
add
lea
pop
adc
mov
out
adc
push
gs
ds
sub
sbb
jmp
gs
repz
inc
rorb
mov
and
sub
lds
imul
movsl
xchg
or
sarl
push
imul
sbb
fstl
jns
call
sti
or
pop
ss
aas
mov
mov
mov
dec
test
in
into
jl
ljmp
test
dec
cmp
jle
leave
int
ret
scas
and
decl
sbb
fmull
cmpsb
int3
push
mov
and
mov
dec
sbb
loope
scas
cmpl
cmpsb
dec
mov
sub
sbb
fidivrs
fisttpl
lea
sub
and
jmp
sub
mov
sbb
mov
inc
dec
and
and
imul
int3
xchg
pop
aaa
fcompl
mov
scas
lahf
add
outsb
cli
add
push
or
lret
mov
outsl
cltd
lcall
ss
inc
fcomip
ss
ss
fstpl
lahf
data16
lods
test
push
and
stos
pop
loopne
dec
mov
and
ss
mov
pusha
cltd
xor
aaa
gs
add
cmp
cmpl
mov
fldl
icebp
xchg
mov
inc
cmp
outsb
stos
fs
ror
jne
fnstsw
or
or
mov
mov
xchg
inc
out
popa
cmc
and
sti
fsubrs
ja
xchg
pop
roll
jb
cli
icebp
dec
aad
mov
adcl
movsl
inc
cmp
lods
mov
xor
push
and
out
dec
push
ret
sub
sub
adc
pop
jge
inc
dec
mov
out
lret
mov
into
movsb
aaa
fdivrp
or
test
xchg
arpl
in
add
cli
scas
icebp
sub
lock
xorb
lods
cld
lcall
mov
jns
cmp
jnp
imul
ljmp
repnz
pushf
mov
jo
stc
xlat
jb
in
and
jge
and
lock
loopne
xlat
shrb
mov
mov
mov
push
pusha
mov
inc
xor
pop
cmp
lock
inc
mov
les
jle
push
std
outsl
dec
jmp
xlat
mov
push
insl
add
imul
xchg
in
jl
enter
cmp
in
lea
xchg
push
lock
outsl
xor
lea
insl
popf
mov
adc
jo
mov
lahf
das
popf
enter
in
fldcw
out
cmp
cmc
in
cmp
sbb
add
adc
icebp
es
xchg
jns
pop
dec
lea
aas
dec
aam
push
xor
outsl
jle
cmp
pop
adc
ret
sbb
aad
ret
xchg
and
fcmove
adc
add
int3
mov
out
sbbb
dec
icebp
outsl
popf
aas
pop
sub
loop
sub
jo
or
add
fmuls
repz
jmp
sub
dec
pusha
fldenv
push
or
push
xor
jns
push
mov
mov
movsl
mov
scas
push
and
imul
rcr
dec
out
js
pop
pop
popf
and
fstl
popf
sbb
loopne
fistl
cmc
stc
push
inc
ret
pop
in
mov
push
ljmp
fnsave
arpl
imul
mov
dec
lods
in
test
jecxz
adc
es
push
inc
sbb
in
test
add
aad
in
pop
mov
xchg
jle
popf
lcall
pop
push
inc
pop
nop
xlat
mov
fidivrs
mov
bound
daa
mov
loop
push
jecxz
pop
sbb
cmp
xor
lods
out
sbb
and
hlt
in
movsb
pop
ljmp
mov
add
repz
mov
ljmp
pop
shr
adc
push
pop
lahf
jb
and
sub
cmc
es
jle
xchg
pop
negl
or
incb
push
jbe
sti
mov
pop
test
inc
and
mov
push
aam
or
xchg
popa
cltd
mov
cmc
adc
cmp
cmp
jl
adc
fnsave
iret
insl
pop
push
in
outsl
into
test
jbe
jbe
mov
adc
mov
jge
jns
jbe
xchg
mov
cmp
popf
arpl
imul
xor
popa
or
or
mov
or
in
in
mov
pushf
lret
push
push
cmc
cmp
jmp
icebp
hlt
out
lahf
pop
sub
data16
cmp
push
mov
lds
shrl
icebp
rclb
fistpl
push
shrl
test
cli
mov
xlat
mov
cltd
cltd
mov
add
les
mov
jo
and
insl
pop
xor
aam
dec
popa
add
mov
int3
dec
lsl
lock
sar
andb
xchg
or
pop
arpl
mov
arpl
popa
imul
jg
icebp
add
inc
jg
cld
ljmp
out
jle
sub
add
test
lea
and
sbbl
pop
push
add
movsl
mov
fsts
cmp
fwait
insb
pop
mov
stc
fs
or
rep
xchg
inc
fs
inc
insb
mov
sub
stos
or
mov
xlat
pop
inc
pop
sub
dec
scas
xorl
pop
adc
cmp
add
shrl
push
or
mov
inc
rcrl
movsl
mov
sub
cmp
push
jp
fdivrp
dec
push
sbb
outsl
mov
cli
in
aad
inc
mov
and
xchg
test
daa
rolb
lahf
rorl
jecxz
pusha
rolb
scas
rolb
imul
mov
mov
mov
ficomps
cltd
add
cmp
cltd
adc
js
push
pop
push
jle
mov
in
push
mov
int3
pusha
icebp
cmp
xchg
pusha
adcb
or
inc
mov
xchg
add
data16
adc
lock
mov
sub
mov
fisubrs
mov
xchg
push
cmpsb
jbe
clc
or
push
jno
lcall
mov
mov
outsb
enter
ljmp
test
icebp
jmp
push
gs
fnstcw
int3
in
push
sub
pop
mov
mov
mov
push
xchg
jo
stos
jno
imul
rorl
xchg
fst
repz
jae
imul
or
movsl
xchg
fnsave
cmp
outsb
shlb
jno
and
jg
fnsave
dec
or
stos
cmp
test
sub
push
push
into
pop
imul
sar
mov
jbe
xor
cmpl
sarb
movsl
mov
adc
lock
iret
imul
rcr
fsubr
test
in
enter
lods
jmp
aam
mul
loopne
loop
dec
ficoml
mov
std
lods
outsl
orb
xlat
fisttpll
jno
adc
jecxz
add
or
std
adc
jb
test
shrl
jecxz
outsb
dec
negl
jne
dec
es
or
clc
sbb
lods
jne
rol
mov
jbe
aas
sbb
in
jbe
fstl
cmp
sbb
test
mov
pop
push
pop
sub
loope
imul
cmp
push
jle
jge
push
and
xor
jmp
or
mov
sti
aad
popa
pop
add
scas
mov
and
mov
pop
ret
sub
ret
pop
cmpsb
insl
mov
push
arpl
adc
scas
sahf
pop
mov
xchg
cmp
jbe
pop
push
pushf
add
jecxz
jae
int3
sbb
call
aam
outsb
ds
cld
ja
xchg
pop
cs
aam
leave
loop
xor
and
stos
popa
roll
pop
sbb
dec
cmp
pushl
inc
add
push
rcll
aas
je
dec
insl
nop
gs
push
cltd
jbe
xchg
data16
pusha
xchg
icebp
test
jbe
loope
mov
ret
mov
cltd
ret
xchg
mov
pop
sub
cltd
jge
adc
dec
jge
negl
popa
add
test
inc
add
in
fwait
data16
and
scas
pop
cmc
push
jne
push
mov
sti
add
pop
or
dec
xchg
push
icebp
mov
test
sbb
and
mov
popf
je
ficoms
int
jmp
add
xchg
jbe
dec
jmp
rol
leave
pop
lds
adc
popa
clc
dec
sbb
cld
and
stos
insl
cld
enter
sub
shlb
add
add
sub
and
cld
push
pushf
jne
outsb
clc
jns
adc
or
cmp
mov
or
adc
pop
pop
cld
imul
out
aad
adc
fnstenv
int
mov
cs
cmp
loopne
in
fsub
or
push
iret
cld
dec
aad
push
andl
lea
push
jo
enter
jle
out
jge
aam
outsl
ficomps
rorl
xchg
dec
aas
jge
rcr
push
mov
popf
dec
lret
sbb
xchg
mov
insl
cmp
push
or
lock
pusha
loope
insl
inc
nop
lock
push
jbe
lret
jns
mov
inc
mov
mov
sub
pop
pop
imul
mov
pop
adc
mov
adc
andl
lods
lds
push
int
push
scas
pop
rcrb
push
inc
sbb
std
clc
pop
jne
push
push
mov
scas
fidivrl
mov
and
popf
jo
xchg
std
sub
push
popa
push
add
fldl
or
and
sub
mov
inc
jge
lahf
lods
cli
in
scas
mov
xchg
imul
rorl
icebp
aad
and
or
nop
or
test
mov
push
dec
push
outsb
fstpl
sub
int
imul
mov
fwait
mov
xor
jae
bound
mov
mov
cltd
dec
inc
push
push
dec
dec
jo
mov
cmc
cli
mov
int3
mov
ja
rcrl
sbb
mull
and
push
out
sub
sbb
insl
cmp
mov
xchg
inc
aad
jo
push
fisubl
cmpsl
cmp
in
or
jo
sub
pop
dec
aaa
mov
clc
js
outsb
rol
fistl
nop
and
and
xchg
mov
xchg
pop
xlat
push
xor
xchg
lret
mov
popa
mov
jle
gs
imul
mov
pop
xchg
xor
cmp
popf
lea
inc
rcll
fisttps
in
rorl
adc
fnstenv
fcmovnu
inc
jl
mov
xorb
sbb
and
or
lds
sbb
xchg
rol
jo
adc
fisubrl
lds
dec
sbb
mov
xchg
sbb
pusha
jmp
imul
dec
loopne
pop
cmp
xor
int
jno
push
and
mov
adc
lret
movsb
cmp
dec
ljmp
cmp
add
xor
ret
mov
pop
jo
jae
jns
sbb
outsb
repnz
xchg
push
jmp
inc
mov
cmp
pop
dec
cmpsb
adc
push
jb
cmp
adc
cmp
orl
cli
ds
shrb
ffree
xor
dec
add
jmp
cli
xchg
ss
cmp
sbb
and
movsl
mov
mov
or
jo
jnp
icebp
lea
sbb
cltd
mov
mov
mov
outsb
push
jb
sahf
add
push
pop
fidivrs
xor
testb
fistpl
xor
jge
ss
lds
out
xchg
pop
and
sub
and
jb
mov
or
int
mov
in
jb
arpl
push
dec
jb
jle
or
daa
andb
xor
arpl
test
jnp
push
mov
cmc
not
pop
jmp
inc
test
aaa
cmpsl
pop
stos
and
xor
add
jbe
idivl
fwait
in
lds
incl
mov
jb
jae
in
jne
cwtl
mov
out
mov
arpl
push
dec
fdivrs
jge
sahf
jle
mov
sbb
and
or
leave
imul
fimuls
jo
lret
xchg
leave
lods
frstor
gs
xor
lock
or
mov
cmc
xor
or
dec
xchg
stc
pushf
xor
and
add
int
sbb
rolb
or
jae
and
inc
lds
dec
mov
jle
xchg
jle
mov
mov
xchg
cltd
xchg
pop
and
lods
add
push
iret
aas
movsl
jbe
sbb
xchg
dec
lock
mov
push
cmpsl
lcall
jle
cwtl
popf
inc
ss
jno
ficomps
cli
ds
cmpsb
in
fisttps
imul
gs
xchg
addr16
icebp
in
pop
sahf
outsl
mov
stos
loopne
and
in
xchg
popf
add
add
pop
cmp
mov
inc
mov
imul
inc
mov
mov
mov
out
sub
jg
push
push
push
inc
push
jl
movsb
adc
lret
nop
add
inc
mov
lods
push
pop
in
or
int
inc
loopne
imul
mov
adc
scas
out
adc
adcl
push
in
movsl
call
out
add
pop
push
aam
push
icebp
dec
jnp
and
loopne
add
or
xchg
fstpt
push
or
vphaddubd
or
adc
fucomip
or
or
fsubl
aas
loopne
ljmp
jne
flds
popf
sub
jmp
pop
jg
add
shrl
je
test
popf
xlat
dec
movsb
cwtl
xchg
scas
and
lea
jle
popf
and
jae
fwait
mov
movsl
xor
xchg
inc
cmp
rcll
sbb
mov
movsb
cwtl
jae
xchg
rorb
loopne
outsb
popf
push
lret
int
popf
icebp
and
cli
movsb
pop
jns
sti
mov
daa
outsb
pushf
cmp
fsubl
fbld
cmp
push
add
adc
or
mov
xchg
shlb
mov
xchg
xchg
fmulp
cmpsl
cmp
push
dec
mov
test
xor
in
jmp
sti
add
push
mov
gs
or
mov
dec
xchg
push
sbb
pusha
push
neg
push
mov
je
bound
push
lahf
testl
and
and
loope
cmp
add
fldl
test
lods
cli
and
repnz
pop
push
insl
or
aas
popa
inc
insl
push
insl
hlt
jns
leave
and
and
imul
ror
shlb
push
mov
dec
arpl
inc
jnp
loopne
and
xlat
aad
push
push
pop
int
mov
mov
das
sub
and
inc
push
cmpsb
sub
gs
or
call
cwtl
pusha
cli
push
sbb
mov
sbb
add
sub
mov
adc
sbb
dec
push
dec
mov
shl
xchg
push
scas
jno
arpl
inc
nop
mov
mov
call
and
mov
pushf
dec
outsl
jns
lret
and
fisubs
and
shl
jae
mov
fmulp
pop
mov
in
mov
pop
jle
jne
insl
arpl
mov
stos
insl
mov
dec
jle
mov
stos
sub
adc
sub
gs
rclb
imul
xchg
sbb
daa
iret
push
leave
popf
mov
pop
pop
push
pop
xchg
dec
arpl
push
pop
xor
mov
lock
cli
xchg
mov
ss
cltd
push
push
dec
mov
mov
loope
loope
sub
notb
xchg
add
mov
pop
add
stos
nop
scas
scas
fsts
scas
dec
jne
xor
rcl
push
test
sub
mov
inc
lahf
pop
iret
arpl
jns
sti
jge
pop
dec
addl
push
pop
notl
gs
mov
js
pop
xor
stc
ret
sub
int
div
and
les
add
xchg
xchg
cmp
loopne
je
xor
push
arpl
pop
add
xchg
shll
pusha
movq
inc
push
or
aad
jg
movsb
fists
sbb
mov
adc
or
orb
dec
rolb
adc
sub
ss
pop
fisubrs
jno
dec
iret
outsl
outsb
xchg
jg
cmpsb
out
cwtl
cmc
sbb
popf
adc
dec
mov
inc
sub
insl
idivl
pop
or
fld
pop
jge
mov
test
xchg
fstpl
cmp
xchg
jne
sbb
push
xor
popa
adc
fnsave
pop
xchg
imul
imulb
push
push
and
jp
sahf
fcoms
xor
sahf
imul
xlat
xor
jno
sub
mov
test
cmp
pop
jae
jns
mov
cmc
mov
pop
cmc
imul
dec
add
cli
cmp
mov
in
lock
gs
and
mov
or
sahf
lea
ret
sub
movsl
push
inc
int3
add
cmpsl
out
out
ret
mov
cmp
jno
es
jo
or
or
bound
pusha
aad
push
lods
jo
push
jno
jns
ret
cmp
add
scas
arpl
rclb
repz
and
mov
rcrl
sub
jle
jne
mov
out
add
jo
cwtl
mov
and
mov
call
pusha
push
pop
jne
enter
outsb
jge
test
mov
adc
out
out
loope
jne
push
jge
lods
mov
add
push
in
or
mov
gs
pop
int
mov
dec
and
outsb
icebp
int
jl
sub
push
or
cs
push
mov
sbbl
addr16
fdivr
mov
leave
outsl
in
ficomps
pop
ss
dec
bound
push
arpl
addr16
dec
xchg
fcmovnb
stos
push
loope
jge
pop
leave
outsl
fisubs
ror
jae
imul
sub
jb
outsl
cld
cltd
std
xchg
int
pusha
jae
adc
mov
ja
and
mov
mov
mov
lea
cmpl
stos
clc
jp
mov
lea
lcall
mov
imul
lea
dec
pop
popl
pop
shrl
pop
loopne
xor
dec
insl
jge
mov
jae
push
sarl
jl
fs
das
mov
dec
popa
enter
adc
mov
frstor
or
cltd
ljmp
ret
pop
xchg
ret
stos
jmp
inc
pop
xchg
fbld
cmp
jo
add
and
rcl
jnp
jecxz
sub
fistps
cwtl
push
sub
xchg
ret
lahf
fldl
sub
mov
repnz
sbb
push
mov
jne
cld
adc
dec
cld
repnz
add
mov
fldenv
loope
inc
incl
inc
jne
add
xchg
ror
jne
push
gs
mov
push
insl
icebp
fwait
jge
int3
bound
call
fadd
fidivl
jne
pop
jl
lds
adc
hlt
int3
mov
pop
call
js
pusha
jge
aas
push
lock
lea
rclb
inc
aam
adc
sahf
repnz
jno
insl
sub
out
outsl
rclb
inc
mov
mov
lds
xchg
mov
mov
inc
daa
jb
lds
mov
xor
push
das
int
jle
jno
vpmacsdd
mov
mov
nop
dec
jge
lea
sub
dec
xchg
mov
gs
loopne
push
mov
testb
sbb
rcrl
push
outsl
mov
adc
add
xor
loope
mov
leave
outsl
jle
dec
add
push
pop
jg
ret
bound
adc
xchg
outsb
pop
in
ljmp
popf
popf
push
push
mov
mov
ret
and
mov
sahf
push
adc
adc
popf
lret
or
outsl
ret
add
data16
push
movb
jae
loopne
cmpsb
into
ja
or
mov
adc
cmp
jle
arpl
insl
shlb
sbb
xchg
fisubs
xor
test
mov
dec
pop
push
jo
outsl
pop
rcrb
adc
nop
cmp
shlb
mov
popa
jl
jg
mov
add
mov
mov
fidivrl
pop
dec
dec
cmp
and
lahf
cmp
lods
aad
mov
jae
xchg
or
jmp
jecxz
repz
daa
xchg
movsb
pushl
pusha
mov
sahf
popa
pop
dec
adc
ret
inc
xchg
xchg
pusha
std
outsb
pop
sahf
pop
std
xlat
addb
and
fsts
rcl
insl
aaa
gs
jge
jb
fnsave
xor
cmp
or
xchg
jge
fst
jge
xchg
cmp
cmp
int
jecxz
mov
mov
adc
ret
sarl
cmpl
or
mov
daa
inc
ss
addr16
jecxz
pop
jmp
cs
addr16
pop
adc
stos
aad
mov
movsb
popf
mov
xor
arpl
andl
adc
adc
cs
ja
inc
sbb
adc
insb
and
and
inc
mov
jbe
push
fiaddl
rol
jmp
xlat
arpl
fisubs
sbb
fstl
aas
loopne
jo
imul
sbb
dec
repnz
outsl
scas
mov
push
lret
dec
sbb
outsl
sbb
mov
mov
insl
movaps
lea
and
mov
inc
int
push
jmp
movsl
dec
jno
push
or
sahf
ficomps
add
pop
jle
add
dec
enter
inc
pusha
cli
inc
lods
mov
or
in
fwait
inc
jg
vaddps
adc
insl
test
pusha
aad
mov
imul
sbb
mov
jb
pop
mov
lds
stos
push
sbb
push
ljmp
xchg
test
ljmp
cltd
or
xchg
cmc
jnp
add
mov
rorl
xchg
jmp
pop
in
enter
hlt
lcall
popf
inc
ret
sub
lahf
jns
popf
mov
in
xchg
mov
pop
mov
cltd
adc
add
push
movsl
pusha
mov
lahf
outsb
loope
mov
out
jmp
repnz
in
xchg
adc
scas
fistpll
push
rcrl
xchg
add
xchg
and
xchg
pop
or
sub
hlt
push
lods
cmp
outsl
pop
ret
int3
sbb
push
pop
jmp
or
xchg
lret
jle
push
xchg
dec
push
mov
push
movsb
ret
pop
push
lods
pop
nop
adc
add
js
insl
dec
add
sub
xor
xchg
dec
sub
push
ja
sub
xchg
lds
frstor
imul
das
push
cli
pop
mov
dec
insb
jo
dec
loop
out
adc
int3
insb
push
fs
in
add
sub
adc
lahf
bound
dec
dec
or
xchg
sub
jo
cmp
inc
pop
mov
mov
out
mov
gs
pushf
sahf
rcr
popa
mov
mov
sbb
jle
sub
mov
mov
pop
stos
xor
fstps
gs
shrl
rcl
pop
cltd
gs
fimuls
mov
std
mov
mov
gs
sub
ljmp
xor
cmp
in
inc
xchg
sbb
aam
popf
bound
sub
adc
inc
les
jp
adc
pop
mov
push
jno
in
push
loopne
mov
cmp
dec
and
pop
outsb
js
loopne
mov
bound
and
add
xor
lds
mov
popf
dec
mov
adc
mov
dec
test
ffreep
dec
iret
push
imul
mov
das
scas
pop
lea
lods
ss
jae
cmp
insl
push
mov
enter
dec
inc
add
sub
adc
andb
call
aad
mov
aaa
cmp
popa
roll
ds
dec
add
insl
hlt
and
test
xlat
and
movsb
adc
jmp
jmp
cmp
inc
jnp
and
stos
aaa
jmp
leave
jno
daa
jbe
int
sub
mov
sub
jae
xchg
pushf
fiaddl
pop
ljmp
shll
and
xlat
fsubr
push
dec
adc
bound
sub
cltd
adcl
or
outsl
or
in
loopne
insl
or
and
dec
test
mov
xor
xchg
mov
push
sahf
lahf
sub
iret
shrl
je
sub
xchg
mov
pushf
pushf
aas
sub
ja
mov
xchg
sahf
out
int3
or
fstl
stos
push
pop
negl
divb
popf
jmp
xor
in
cltd
arpl
push
outsl
jge
mov
int
and
nop
arpl
ds
xorb
mov
pushf
out
and
mov
jge
pop
and
out
and
dec
jae
inc
adc
dec
mov
sahf
pop
sti
xor
dec
lea
push
jnp
fisttps
jne
dec
movsb
inc
das
fcompl
dec
cwtl
adc
mov
sub
dec
nop
loope
test
cltd
test
into
pusha
mov
push
imul
push
or
jne
cld
sbb
sub
ja
pop
gs
push
xor
mov
xor
pop
scas
mov
xchg
xor
repz
int
cwtl
popa
mov
lock
cmp
cmc
popf
mov
popa
testb
int
xchg
arpl
rcrl
int3
xor
popf
push
movsl
test
iret
stos
pusha
fidivrs
das
cmp
mov
fwait
lods
fsubrs
movsl
and
mov
outsl
mov
outsb
popf
jnp
cmp
inc
push
inc
insb
push
xlat
mov
cmp
repnz
adc
xchg
jle
xchg
mov
adc
stos
insl
push
add
dec
fisubrl
dec
movsb
pop
cli
cmpsb
sub
lock
test
stos
in
xor
push
push
rcrb
clc
iret
sbb
cmp
sbb
inc
in
lcall
cmc
xchg
and
mov
lds
sbb
and
fidivrs
fwait
ret
push
sarl
inc
pushf
add
jge
mov
and
cli
das
andb
and
inc
je
ficomps
jae
loope
add
add
dec
sar
push
enter
call
test
pop
fs
dec
stos
cmp
loope
push
push
push
adc
cmp
mov
mov
ja
and
or
push
imul
xchg
repnz
xchg
push
test
aad
insl
jne
or
not
sub
lods
inc
repz
cmpsl
sbb
flds
jmp
jns
push
and
push
dec
cmp
pop
add
jbe
test
jge
mov
adc
xchg
cld
packssdw
aas
outsb
jmp
xor
gs
xchg
in
lea
and
repz
sti
or
xchg
jecxz
or
stos
or
fstl
push
scas
cmc
xor
push
mov
mov
mov
jns
gs
repnz
lds
shll
lcall
loope
sbb
push
rcll
icebp
inc
push
sub
movsb
pusha
lahf
shrb
rcll
sbb
lods
outsl
daa
test
aad
iret
imul
add
or
js
loopne
mov
loope
dec
mov
outsl
or
clc
sub
mov
push
mov
cmp
dec
jmp
mov
or
ret
ss
enter
adc
aaa
mov
pop
nop
inc
int
insl
dec
pop
push
jnp
popfw
lock
and
adc
lahf
fimuls
addr16
adc
lods
pop
xor
cmp
sarb
sbb
mov
xchg
sbb
pop
push
sarl
inc
stc
fwait
loopne
adc
fdivp
aaa
jle
and
test
add
loopne
stos
int
pop
and
addl
inc
pop
rcll
cwtl
cmp
negl
mov
mull
pusha
enter
test
movl
test
out
stc
pop
inc
sti
mov
std
cmpsl
jmp
in
or
or
xor
add
fcom
xor
or
add
xor
insb
pusha
jno
fmull
rcrl
rcr
dec
xor
xchg
fisttpll
push
mov
std
xchg
push
jp
lds
shlb
adc
in
shlb
sbb
xchg
jmp
inc
mov
insl
xor
add
out
movsb
loop
mov
push
aam
cmp
test
jno
and
stos
movsl
out
and
dec
cwtl
jbe
xchg
icebp
jno
insl
aas
das
dec
pop
pop
pop
adc
scas
mov
out
xor
xchg
add
fdivs
ficoml
int
mov
pop
popa
xlat
cmp
pop
inc
or
adc
and
mov
stos
subl
xchg
push
rorl
insl
jmp
mov
pmaddwd
insl
aad
sbb
mov
cmp
xchg
push
lds
and
fiadds
xchg
push
adc
push
imul
jno
jmp
xor
in
push
hlt
ja
daa
jnp
jp
push
and
dec
mov
sti
xchg
dec
aaa
sbb
loop
fstp
jle
pop
ja
xchg
cmp
sahf
pop
insl
mov
cmc
popa
xchg
in
fnsave
ljmp
push
outsl
leave
add
int
xchg
cmp
std
jo
or
inc
sti
fmull
cltd
jle
fdivrl
stos
and
and
frstpm(287
mov
aad
mov
icebp
push
mov
dec
dec
cli
leave
dec
dec
add
cli
pop
lods
into
mov
xor
jns
push
inc
lds
xchg
ss
jl
popa
mov
xchg
outsl
cmpsb
xor
push
jp
fld
ficoms
pop
pop
mov
popf
in
xor
push
inc
xchg
pop
xchg
mov
insl
or
subl
and
jge
ss
fxch
fisubrs
in
push
aam
jge
pop
in
pop
or
out
fnstsw
or
std
xor
outsl
lea
leave
and
cmpsb
rcrl
mov
lock
rcll
jnp
mov
pop
adc
push
push
xor
sub
test
push
dec
test
pop
ret
or
jg
jbe
push
pop
imul
cmp
imul
ja
pop
fsts
filds
push
int3
outsb
pop
xchg
xor
ja
xor
aad
pop
aam
popa
sbb
js
xor
nop
out
xchg
inc
push
pop
movsb
dec
popa
mov
sub
ss
adc
hlt
mov
fldpi
ficomps
or
stos
shll
scas
fcoms
pop
jg
ret
outsl
xor
pop
cmp
fildll
push
mov
pusha
fdivs
repz
mov
mov
inc
aam
push
jge
divw
out
pop
je
inc
pop
push
shrb
dec
std
mov
pusha
jp
sti
and
push
test
out
xor
daa
push
std
xor
imul
popf
aad
lock
ds
add
ret
jmp
nop
pop
jge
lahf
xor
pop
dec
pop
push
xchg
mov
push
or
sub
xorl
sbb
outsl
js
xor
sub
xlat
imul
add
or
push
lods
jp
insl
addr16
mov
push
add
mov
sub
pop
orl
push
sbb
sbb
mov
and
xor
leave
lea
loope
movsl
and
push
inc
inc
imul
push
sub
push
xchg
pop
jp
jmp
xchg
jo
pop
frstor
sub
out
push
push
xchg
xor
lcall
insl
push
inc
in
and
mov
xor
pop
scas
insl
inc
out
rcl
pop
in
outsl
popf
and
test
iret
scas
sub
xchg
cmpsl
pop
test
jo
arpl
leave
imul
rcrl
pusha
pop
sub
mov
daa
repnz
xorl
dec
fcomp
test
test
stc
xor
test
imul
mov
xchg
mov
pop
push
mov
fidivrl
mov
mov
fisubrs
pop
dec
add
sbb
xchg
inc
pop
pop
xchg
mov
dec
and
and
cmpsl
mov
arpl
push
shlb
mov
iret
sub
insl
and
push
inc
jg
sub
adc
mov
std
pop
mov
std
pusha
and
std
add
push
iret
push
fnsave
mov
insb
mov
push
popa
jo
movsl
jge
lods
push
je
movsl
pop
ja
add
js
nop
ja
pop
loop
jl
movsl
xorl
push
sub
jnp
movsl
out
dec
sub
jo
mov
test
stc
je
xchg
mov
dec
js
ficomps
outsb
push
out
jno
cmp
cli
xchg
cmpsb
and
scas
int
out
inc
adc
popf
cmp
xchg
sbb
inc
lods
cmp
dec
aad
int
or
sbb
xor
data16
mov
mov
dec
sub
jae
push
aam
xor
dec
dec
xor
mov
mov
mov
sti
ficoms
clc
aam
dec
pusha
or
cmp
inc
mov
xchg
ror
jno
int
or
pop
jle
leave
fcmovne
lds
or
push
lods
cli
in
out
or
xchg
divl
fldenv
arpl
xor
xchg
imul
test
sarb
mov
mov
inc
lahf
jnp
lret
mov
mov
pop
lds
push
jp
pop
push
lods
pop
cld
mov
lds
aas
in
and
loope
xchg
push
push
pop
push
dec
popa
les
test
outsb
adc
ljmp
pop
jns
or
xchg
cltd
es
inc
sbb
lret
inc
ret
inc
ss
jp,pt
divl
out
mov
jns
ljmp
test
aad
sub
dec
jle
mov
setle
daa
sbb
and
sub
ljmp
sbb
shl
cmp
lds
rcll
or
xchg
inc
dec
jp
mov
mov
clc
dec
cli
mull
popf
rcll
pop
in
gs
jo
sub
lds
jb
out
pop
fldl
stos
sub
mov
sahf
dec
xchg
call
push
cli
mov
loope
roll
pop
cmc
pop
xchg
dec
push
lahf
mov
sub
movsl
xor
add
add
mov
es
fsub
mov
add
and
xchg
repz
xchg
lret
sub
push
dec
fucom
popl
ljmp
lahf
xchg
pop
mov
call
test
or
xchg
stc
dec
inc
repnz
pop
jp
cmp
or
or
lock
xchg
incb
ja
lds
stos
lock
cmpsl
dec
xlat
mov
and
dec
in
and
stos
gs
rcl
sarb
imul
push
lds
or
into
fnstenv
sbb
call
push
inc
fwait
push
dec
xchg
pop
pop
xor
insl
xlat
insl
loope
pop
fucomi
repz
and
pop
push
and
bound
pusha
insl
es
ret
mov
cli
scas
imul
in
jne
lea
jge
adc
xchg
add
test
out
inc
dec
cmp
adc
inc
and
push
push
imul
cltd
pop
dec
imul
mov
test
inc
push
jecxz
add
and
dec
jne
call
cmp
jge
repz
ja
dec
fsts
xchg
out
jle
inc
jne
cmpsb
int
xchg
adc
cmp
rdmsr
ret
xor
orb
mov
pop
movl
icebp
push
sbb
cmpsl
jle
lds
outsl
jmp
pop
jge
cmp
pop
popa
out
dec
insw
xor
push
out
dec
cmpsl
sbb
adc
test
sbb
sbb
xchg
jno
pop
int
jo
aad
mov
clc
pop
inc
sbb
out
data16
rcr
jns
repz
push
mov
cmpsl
pop
rcr
mov
cmpsl
jne
fsubrp
pusha
stc
aad
mov
outsb
call
loop
or
inc
outsb
and
ja
test
sbb
push
add
dec
popa
jbe
adc
inc
jae
jno
stc
push
ds
iret
lods
dec
xchg
pop
iret
push
adc
rol
aam
out
sub
pop
lods
repnz
arpl
dec
cltd
lods
jge
loope
dec
sub
ja
mov
shrb
insl
pop
lock
pop
sub
xchg
mov
adc
dec
push
fwait
inc
push
dec
push
subl
popf
in
int
scas
jge
inc
xchg
int
inc
cmp
popf
dec
inc
push
xchg
pop
sbb
outsl
jle
push
data16
pop
fimuls
push
outsb
dec
jmp
cli
shrb
sub
clc
mov
test
cmp
cmpsb
push
movsb
xchg
repz
jbe
mov
xchg
lods
sbb
pop
jg
sarl
jne
jbe
lahf
popf
ret
mov
sahf
mov
sub
rcr
or
fisubrs
xor
mov
and
adc
jbe
or
es
xor
insl
sub
dec
xchg
pop
stos
xor
xchg
repz
test
insl
mov
pop
pop
loop
sub
fprem1
sbb
cld
jne
inc
dec
adc
add
repz
jecxz
pop
mov
pop
xchg
or
lahf
xchg
clc
and
cmc
xor
mov
lret
jne,pn
dec
mov
xchg
or
aam
xchg
or
in
mov
int
xchg
lods
sbb
aad
in
and
stc
fmuls
mov
imul
cld
cwtl
rorl
lea
loope
jmp
and
dec
or
test
push
shll
push
ffree
fisttpll
dec
and
negb
in
mov
lock
pop
cmp
mov
rorb
rolb
adc
rorb
mov
mov
dec
adc
dec
imul
dec
sbbl
test
dec
es
dec
inc
sbb
rcrl
fcompl
dec
out
hlt
ds
ret
mov
aam
call
cmpsb
cltd
fildll
rorl
sahf
hlt
push
sbbb
xchg
adc
xor
ret
xchg
adc
mov
adc
or
lods
sbb
mov
and
jbe
add
aas
dec
add
mov
push
ud0
pop
pop
xchg
fbld
fbstp
gs
add
xchg
jnp
movsl
into
inc
adc
inc
xchg
jge
js
cmp
add
lods
loop
aad
mov
push
scas
mov
or
xor
testb
fnsave
ds
incb
bound
rolb
adc
adc
fstps
pop
pop
mov
in
mov
push
pop
mov
enter
jge
daa
clc
int3
jno
lahf
rolb
sbb
pop
aad
test
out
adc
mov
add
xchg
mov
lock
cmp
fisttpll
pop
xchg
add
fs
mov
xchg
mov
loop
popf
flds
mov
je
mov
or
inc
pop
pop
push
jno
xchg
ss
add
pop
xchg
mov
aaa
jae
mov
add
imul
aad
imul
int
out
rclb
fcmovnb
lahf
stos
scas
xchg
aaa
jge
cltd
adc
cs
test
and
add
stos
stos
mov
inc
xchg
aad
bound
in
leave
cmp
aad
mov
mov
int
jecxz
movsl
stc
jmp
cmpb
scas
sub
sarl
pop
sarl
test
push
out
jne
test
movsb
je
shlb
fisubs
mov
sbb
stos
mov
fidivrl
mov
pop
adc
in
jmp
popf
scas
sub
mov
cmp
ljmp
jno
fildll
dec
jno
xchg
push
dec
test
mov
jne
in
rclb
xchg
mov
outsl
sub
pop
and
bnd
lea
or
inc
jbe
cmp
cli
sub
rcrl
popa
fs
lds
and
cmp
xchg
fld
jmp
and
mov
icebp
loope
cmp
jmp
ds
sub
pop
adc
cmpsl
out
imul
test
outsb
pop
popa
mov
xor
push
in
xchg
call
lret
adc
repz
cs
test
xchg
cmp
lods
inc
pop
adc
cmp
dec
mov
xchg
sahf
data16
cmp
fstpl
mov
adc
sbb
cmp
jle
sub
vphaddubd
das
mov
sub
out
ja
mov
or
or
les
ror
out
ret
pop
dec
mov
ret
inc
sbb
ret
loopne
in
movsb
dec
jb
rcrb
cld
imull
ffree
movsl
in
inc
cli
outsl
dec
jno
out
mov
insl
adc
mov
and
arpl
popa
mov
jle
incb
mov
scas
mov
cltd
mov
loopne
add
and
stos
pusha
push
cmc
jmp
dec
jne
loopne
mov
sahf
call
mov
movsl
pop
jmp
push
insl
dec
insl
sub
insl
dec
push
outsl
push
inc
sahf
xchg
and
repz
bound
and
xchg
fbld
xlat
mov
dec
fsubl
mov
shrl
pop
ja
pop
sub
in
ja
dec
gs
sahf
arpl
out
fldenv
xchg
gs
ljmp
out
pop
test
mov
pusha
sarb
xchg
notb
into
adc
jl
mov
and
outsb
lret
sbb
lds
xchg
and
mov
sub
cmc
mov
xchg
je
dec
lcall
loopne
adc
and
movb
outsb
sbb
mov
int3
popf
mov
mov
jge
jbe
mov
add
movsl
mov
sub
inc
ss
fst
mov
std
xchg
int3
imul
fcomip
jno,pn
fstpl
xchg
insb
pop
push
xor
lea
movsl
xchg
cmp
leave
cltd
cwtl
insl
add
leave
mov
inc
mov
mov
xor
jns
mov
movsl
xchg
pop
push
dec
sbb
push
push
out
mov
adc
popa
mov
ret
lods
cwtl
outsb
movsl
mov
jns
aaa
jp
jb
test
or
repz
inc
cwtl
push
popa
fidivrl
std
dec
enter
rcrb
fiaddl
repz
fisubrs
scas
fwait
call
push
cmpsl
jne
mov
cltd
dec
jnp
jo
pop
aas
cld
jb
imul
cmp
mov
push
or
add
outsb
mov
cmp
xchg
jle
testl
mov
xor
or
dec
mov
cli
xor
rcrl
xor
mov
xchg
cltd
jmp
lea
xchg
xchg
aas
mov
mov
enter
sbb
imul
inc
nop
add
xor
lods
aam
loope
mov
dec
jno
or
inc
add
jmp
insb
pusha
mov
mov
add
mov
sub
rorl
mov
mov
fdivrs
cwtl
push
gs
arpl
cmc
adc
outsb
ja
push
pop
es
adc
fimuls
mov
jg
decl
cmp
test
int
popf
iret
cwtl
dec
pop
sbb
cmp
sub
inc
jmp
cmc
fsubl
mov
ret
mov
insl
jle
xchg
mov
mov
imul
dec
xlat
fstpt
stos
imul
mov
push
xchg
push
adc
and
or
xchg
fnstsw
adc
cmp
jmp
ds
and
iret
xchg
hlt
stc
cli
sbb
pop
lock
and
pushf
lret
cmp
pop
mov
out
fdivp
cmp
pop
scas
mov
jb
fdivl
cltd
repnz
int3
setns
pushf
mov
sbb
idivl
push
fwait
mov
jle
repnz
aad
fldl
xor
out
xor
imul
out
mov
or
xor
xchg
frstor
mov
sahf
lret
mov
sbb
pop
cwtl
xchg
jle
jg
mov
xor
jg
add
mov
cwtl
jno
mov
fs
pusha
lahf
mov
mov
mov
outsl
jle
xchg
jo,pn
xchg
scas
leave
fdivs
insl
push
add
imul
fnsave
lock
daa
fnstsw
int3
popa
lds
fwait
and
andl
dec
setbe
jecxz
adc
scas
adc
xchg
and
jae
xor
jae
clc
jb
push
leave
inc
pop
mov
sub
outsl
std
outsb
push
sbb
sbb
add
push
inc
xor
dec
cltd
dec
inc
addb
mov
les
fldt
cmp
jge
aam
cmp
test
or
jns
cmp
in
jbe
inc
cmp
repz
pop
cltd
fwait
aaa
xlat
daa
jp
jae
test
cli
sahf
pop
dec
fldcw
out
cmc
outsl
pop
cwtl
mov
rol
fwait
mov
ret
mov
sbb
and
push
pop
sbb
xchg
lods
push
sbb
cli
loopne
fnsave
mov
rcl
jno
xchg
test
jp
and
bound
mov
jne
cmpsb
pop
popf
xchg
int
jmp
jno
and
jb
mov
xchg
outsb
mov
lahf
shrl
rcr
insl
add
stc
mov
mov
mov
mov
es
movsl
repz
loope
es
mov
jmp
add
int
push
outsb
add
lahf
fildll
fdivp
aam
imulb
test
in
push
cmp
and
ficomps
outsb
into
loopne
mov
aam
in
lcall
pop
cmp
jbe
data16
daa
push
loopne
push
pop
test
test
add
and
push
fidivs
jne
adc
pop
popa
push
sbb
push
sbb
int
into
pop
stos
popf
aas
mov
std
iret
mov
xchg
add
jo
sub
mov
popa
int
xchg
aaa
fsubrs
test
mov
sub
xchg
jno
aad
pop
out
jae
xchg
into
fnstsw
cmpb
scas
dec
data16
jbe
cld
subl
jle
jmp
cli
inc
pop
push
adc
cli
inc
push
lea
xchg
or
or
popf
or
fnstcw
aas
pop
call
insl
mov
pop
and
cmp
decb
xchg
int
push
adc
cmp
insw
mov
pop
roll
mov
iret
xor
or
in
push
fnstcw
aas
pop
call
insl
mov
pop
push
aad
cmp
decb
xchg
int
push
push
fnstcw
lcall
pop
sub
inc
jg
lea
hlt
and
subl
push
insl
aas
xchg
mov
stc
outsl
ds
int
push
pop
fnstcw
scas
insl
cmp
pop
and
mov
lea
mov
cmp
pusha
lret
orb
enter
jb
aas
sub
call
add
jg
pop
push
jae,pn
push
ljmp
insl
mov
sub
std
rcrl
dec
jge
pop
flds
sbb
and
or
ficompl
sub
call
sbb
jg
pop
push
jae,pn
push
repnz
mov
insl
push
pop
cmp
sarl
mov
xchg
pop
flds
sbb
and
or
cmpsb
pop
aas
sub
call
sbb
jg
pop
push
jae,pn
push
ficoms
jle
ss
cmp
sarl
mov
adc
inc
xor
and
or
push
pop
aas
sub
call
outsb
xchg
mov
or
ds
push
xor
jle
or
sub
std
rcll
dec
jge
pop
flds
sbb
and
or
out
pop
aas
sub
call
xchg
jg
pop
push
jae,pn
push
sbb
fnstsw
and
lret
std
or
ja
push
testb
dec
cld
stos
pop
cmp
adc
xchg
bound
adc
popf
ror
xchg
xchg
bound
adc
or
aam
push
xchg
pop
mov
pop
or
shr
shll
insb
shll
shrl
shl
shr
shll
shrl
xor
sub
repnz
shll
shrl
xor
sub
icebp
shr
shll
int
jl,pt
inc
jnp
jns
jns
jns
jns
jns
jns
jns
jno
jae
jae
jae
jae
jae
jae
jae
arpl
mov
pusha
shll
pusha
xchg
pusha
mov
pusha
dec
pusha
adc
imul
ffree
shlb
adc
and
clc
add
mov
inc
inc
add
aas
pop
jmp
hlt
arpl
arpl
add
shrb
and
sub
or
dec
outsl
lods
sub
xchg
imul
lds
mov
or
pop
mov
cmp
incb
call
pop
test
les
movsb
loop
xchg
sub
pop
jae
jno
mov
xchg
rorl
mov
inc
in
sbb
add
mov
dec
xchg
mov
and
xchg
xchg
ret
jp
push
test
jge
push
mov
out
mov
fsts
push
push
out
pop
xorl
jne
sahf
movsl
xchg
lret
mov
push
jge
sti
xchg
shll
movsl
xor
scas
xchg
lock
xchg
clc
adc
dec
repnz
mov
insl
pop
inc
in
mov
or
push
popa
and
lret
bound
xchg
mov
outsb
and
out
out
out
cmpsb
push
jecxz
cmc
xorb
ljmp
inc
xor
add
into
cwtl
cmp
cli
dec
inc
pushl
adc
mov
inc
std
pop
push
imul
pop
lret
push
mov
pop
fldt
jnp
push
cmp
jecxz
enter
into
add
push
dec
pop
adc
mov
js
mov
stos
jge
jg
add
ss
mov
mov
jno
xchg
jge
xor
cwtl
or
aad
test
or
aad
test
or
inc
jnp
lret
test
or
aad
test
jnp
lret
test
or
aad
test
fnstsw
ret
test
or
aad
test
or
outsb
aas
bound
or
aad
test
or
aad
xor
loopne
aad
test
or
aad
test
jnp
lret
test
or
aad
movsl
jno
lods
mov
jle
pop
push
gs
pop
pusha
popf
dec
out
mov
cwtl
dec
fcoms
mov
mov
pop
rcll
xchg
aad
lahf
shll
xchg
pop
enter
shll
xor
sahf
xor
int
push
jle
fnstsw
pop
popf
xor
or
popf
sbb
and
xchg
loopne
aad
mov
pusha
outsb
pop
lea
fistps
push
mov
pop
aas
pop
push
push
imulb
xchg
pop
cmp
sbb
jae,pn
push
mov
and
sahf
xchg
loopne
sbb
iret
in
xchg
outsl
pusha
or
int
push
loop
fistpll
pop
lahf
push
xor
xchg
fidivrs
pusha
outsb
sahf
out
pop
or
int
push
aas
pop
popf
push
cmpsb
jno
cmp
push
jae,pn
xor
ja
popf
or
aas
pop
lahf
push
mov
pop
xchg
fidivrs
pusha
outsb
sahf
out
outsl
pop
or
int
push
jbe
fnstsw
pop
popf
push
xchg
cmp
in
cmp
iret
pop
in
sub
pop
insl
rcrb
sub
lahf
shll
pop
enter
push
pop
push
jae,pn
push
pop
cltd
ljmp
mov
sbb
enter
jb
cmp
call
dec
ljmp
in
push
push
fldenv
pop
pop
aas
stos
pusha
fildll
outsl
stos
lahf
scas
pushf
pop
xchg
fidivrs
pusha
outsb
sahf
lea
pop
or
int
push
sbb
fnstsw
pop
popf
push
scas
jno
cmp
mov
iret
in
cli
pop
push
jae,pn
push
sub
lahf
insl
sbbb
outsl
push
shll
dec
sahf
mov
pop
jae,pn
xor
int
push
es
out
sbb
and
dec
mov
xchg
mov
std
iret
in
xor
pusha
jae,pn
push
and
lahf
insl
outsb
pop
pop
sub
push
jg
sub
daa
xor
ja
dec
in
adc
or
leave
in
xchg
xlat
mov
dec
int
push
or
aam
int
push
mov
dec
int
push
or
lret
int
push
mov
enter
repz
jmp
mov
stos
jae
imul
ja
hlt
in
in
xlat
mov
lods
pop
sarb
scas
push
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
fiadds
pusha
and
sbb
sahf
jl
inc
jb
popf
cmp
xor
sub
hlt
pop
in
pop
mov
lods
pop
je
insb
pop
xor
pop
repz
jmp
cmp
dec
fdivrp
sub
popa
aas
jge
inc
test
out
iret
sub
out
loopne
xchg
insb
adc
sub
gs
std
push
in
jbe
lds
in
mov
pop
cltd
sbbb
lock
sub
shll
ficoms
rcl
mov
sbb
inc
popf
not
ss
pop
sub
out
in
lcall
cmp
xchg
adc
mov
jno
jne
ss
rcrb
xchg
cli
mov
push
push
decl
gs
sbb
inc
in
lret
sub
xchg
mull
fistpl
xchg
cmpsb
popf
in
popf
sbb
in
push
repz
add
adc
ret
jb
xchg
add
in
mov
lret
mov
cmp
pop
and
adc
jne
xchg
jnp
dec
arpl
sub
daa
lds
mov
jge
in
and
push
aad
mov
cmp
imul
icebp
mov
cmpsb
imulb
add
pop
int
in
iret
lea
in
dec
nop
add
inc
iret
sar
inc
mov
push
push
jne
outsl
pop
in
inc
cmp
jmp
jb
movsl
int
loop
and
sahf
xchg
ljmp
mov
adc
pop
inc
xchg
jno
inc
jg
push
fstl
aas
push
pop
fstl
jmp
into
sub
popf
xchg
adc
sub
or
dec
dec
test
inc
add
cmc
nop
push
das
inc
ret
stos
stos
push
cmpsl
pusha
cmp
sti
add
popf
jno
cmpsb
mov
aad
test
or
aad
test
or
outsl
inc
bound
or
aad
test
or
cmp
fmuls
xchg
jnp,pt
lret
test
or
aad
xchg
cmp
lret
test
or
aad
test
jnp
aad
test
or
aad
test
or
outsl
inc
bound
or
aad
test
or
sub
fmuls
xchg
jnp,pt
lret
test
inc
icebp
dec
jne
inc
jno
mov
clc
sti
lret
fwait
lea
insb
inc
dec
and
xchg
les
and
testb
jne
hlt
push
lret
xchg
cld
pop
mov
pop
xchg
test
mov
movl
jge
movsl
cmc
push
and
cli
jle
inc
loope
scas
and
ret
stos
add
xchg
js
sahf
nop
scas
test
popf
sub
arpl
pop
lods
inc
sahf
dec
jg
mov
les
in
lahf
sbb
push
sti
sub
rorb
fsubrs
fsubrp
fwait
mov
test
pusha
dec
or
jne
mov
fld
js
int
fsubrl
int
aam
sahf
das
xlat
loope
inc
pusha
jnp
sub
clc
sub
xchg
nop
mov
mov
int
push
rcll
adc
jbe
jbe
jns
in
outsl
lods
sbb
or
push
adc
mov
mov
jmp
xorb
outsl
mov
shrb
push
add
and
mov
nop
repnz
rcrb
jmp
add
aad
jno
ror
lea
cs
mov
shlb
filds
cs
shlb
cs
jg
sub
push
adc
sbb
std
push
scas
gs
sub
cs
sar
rolb
jo
inc
loope
dec
imul
nop
stos
xor
aad
sub
scas
pop
rolb
jo
movsl
adc
cmp
mov
andb
push
in
scas
test
popa
jns
mov
popf
in
loope
xchg
dec
in
test
ja
in
cli
mov
and
cld
repz
jns
sbb
jp
mov
and
pop
jbe
pushf
jge
in
jae
popa
dec
xchg
sahf
add
adc
add
test
mov
and
dec
jmp
gs
lds
jmp
faddl
cmp
ss
lea
ficoml
add
arpl
sbb
sub
mov
gs
movlps
mov
jg
mov
jge
jle
and
bound
out
test
jne
dec
je
rcr
aaa
ss
shl
xor
sbb
ror
push
mov
repnz
mov
push
inc
lcall
jno
push
std
jp
imul
popf
test
xchg
mov
pop
lahf
jmp
jne
mov
mov
xlat
pop
inc
push
mov
mov
push
xor
out
fimuls
jne
inc
mov
pop
mov
shl
movsl
shlb
cmp
mov
xchg
mov
push
adcb
out
push
aas
int
or
mov
das
imul
dec
push
xchg
pop
sub
je
push
mov
repz
cmpsl
dec
jae
insl
or
mov
gs
or
push
sahf
popa
popf
and
push
cmp
push
mov
adc
fwait
push
in
gs
pop
jecxz
inc
call
shrl
jp
mov
inc
adc
push
outsl
jns
push
scas
jb
mov
stc
popa
push
pop
das
xor
adc
cltd
mov
jp
jmp
dec
popf
or
jge
mov
rcl
out
xchg
jne
jecxz
sahf
cmp
adc
fidivs
scas
cmc
sbb
lock
sub
push
cmc
loope
inc
mov
shl
or
dec
fcomip
and
push
test
xlat
mov
lock
jne
jns
dec
mov
xchg
mov
xorb
pop
adcl
mov
cmp
mov
movl
pop
push
and
mov
jmp
cltd
pop
ja
ficoml
insl
xor
shrb
pusha
cmc
push
stc
pop
inc
push
and
sub
push
es
push
pop
add
xchg
es
sbb
mov
stos
fdiv
pop
imul
insl
adc
fcoml
in
cmp
xchg
push
mov
addr16
sbb
mov
shll
in
ja
dec
cld
xchg
ss
mov
pop
stc
push
pop
fimull
pusha
fmuls
rorl
jg
xchg
addr16
leave
or
adc
mov
push
sbb
inc
push
or
mov
push
in
inc
mov
xchg
rcrl
dec
add
mov
in
xor
xor
pop
and
test
mov
dec
jo
pop
xchg
call
in
pop
icebp
cs
out
jnp
add
xchg
jne
popa
push
ljmp
xor
stc
and
dec
loopne
insl
imul
jno
xor
popa
and
mov
popa
es
and
cmpsb
loop
in
es
pushw
jmp
popa
inc
dec
push
mov
jo
mov
test
aad
sub
jae
cltd
gs
insl
pop
addr16
sbb
adc
jbe
fs
sub
add
outsl
add
gs
jno
fwait
ret
das
or
pop
icebp
in
imul
adc
mov
imul
mov
lods
fsubl
stc
lea
imul
jno
imul
pop
das
imul
or
mov
loopne
add
outsl
int
mov
add
jbe
sub
ret
daa
jae
ret
lea
jne
xchg
xor
fistpll
ja
js
mov
rol
mov
jp
cs
pop
icebp
xchg
jno
ljmp
jbe
loop
in
ds
adc
jno
js
jle
iret
insl
lret
jb
rcl
push
shll
jne
fimull
insl
push
jne
fldenv
inc
push
xlat
rcrl
mov
jo
pop
loop
rcll
fldt
addr16
xlat
mov
loope
dec
insb
int3
xor
leave
sarb
imul
fildll
cmpsb
jns
fstpt
sub
jns
push
jecxz
lods
ficoml
mov
sbb
jns
rclb
out
pop
jge
fisubl
insl
insl
jge
cmovle
in
aas
and
fcoms
inc
push
jmp
xlat
mov
jo
push
and
pusha
repz
arpl
aad
mov
insl
sub
xor
js
adc
sar
mov
lret
jb
in
das
pop
test
rol
shl
stc
movsl
jge
iret
rcll
int
aam
adc
cmp
lret
test
and
xor
jp
mov
jno
test
sahf
dec
lret
push
push
shrb
xchg
call
cmp
std
dec
xlat
sbb
pop
jnp
scas
push
out
loope
and
cmpsb
ja
push
push
pusha
add
out
push
cmp
outsb
cld
xchg
pop
mov
movsl
jno
sub
mov
mov
inc
pop
daa
scas
jle
into
and
int3
fucomip
inc
inc
adc
inc
shlb
or
loopne
es
fisubrl
fwait
push
dec
mov
movsl
mov
sub
dec
pop
inc
cmp
fbstp
adc
jge
popf
out
dec
adc
push
jne
cld
mov
dec
test
pop
cltd
jmp
jle
out
aas
adc
cmp
mov
xchg
pop
mov
sahf
cs
pushf
inc
cmp
or
sub
xchg
or
sub
push
xchg
or
data16
ja
mov
loope
xchg
insl
mov
add
fistpll
push
add
xchg
fnstsw
xchg
aas
adcb
add
test
ss
popa
insl
test
mov
fnsave
aam
or
js
add
push
ret
pop
loop
js
pop
out
add
popf
mov
andl
ficoms
sub
or
xchg
repz
or
idivb
adc
jg
sub
lods
sub
ret
sbb
adc
push
in
cmpsl
fidivs
cmc
mov
popa
cli
jnp
test
xchg
fbld
mov
inc
pop
mov
movsb
ficoms
test
jl
jns
push
mov
lret
arpl
jl
jmp
jle
push
pop
push
mov
scas
ret
loopne
inc
jnp
scas
mov
sbb
jp
shlb
mov
int
orl
gs
cmp
into
and
stos
sub
mov
xchg
lea
pop
and
sub
cmpsl
fwait
push
xchg
test
mov
mov
lds
rclb
outsl
xchg
jns
shll
xor
repnz
pop
mov
adc
aaa
pop
push
movl
cmp
cmp
icebp
add
cwtl
dec
adc
jg
pop
lods
fdivrs
and
sub
xchg
mov
jo
sbb
fdivr
jmp
ljmp
scas
vcmpps
lahf
in
and
sub
stos
jp
cli
push
add
jns
cmp
adc
or
daa
call
push
aas
imul
cli
or
cli
inc
rolb
fisttps
cmpsl
lods
pop
lea
lods
and
pop
int
repz
in
jmp
insl
sbb
ss
or
out
test
xchg
cmp
xchg
dec
fcomi
outsl
fucom
inc
pop
adc
adc
fwait
sub
jl
dec
setne
lds
or
sbbb
pop
stos
cmp
loope
fwait
jbe
pop
daa
mov
fisubrs
add
xor
fsubrp
or
mov
inc
daa
or
les
mov
nop
jge
jno
fs
jne
jns
dec
jo
ljmp
mov
dec
mov
cmp
popa
pop
jne
mov
jecxz
adc
je
push
shr
fisubrs
pop
xchg
push
ljmp
dec
pop
mov
mov
pop
mov
push
leave
or
es
add
in
mov
sub
lea
jno
pusha
imull
scas
or
sbb
inc
jmp
ret
repnz
rcr
adc
rcrb
cmpl
jno
pop
and
and
fs
in
movsl
pusha
xchg
loope
mov
adc
aam
cs
xchg
mov
movsb
fstpt
cmpsb
pop
add
jg
mov
fs
repz
out
jae
std
leave
mov
cmp
lock
mov
or
pop
mov
aad
pop
sub
fnsave
pop
and
push
cmp
mov
xlat
cmc
push
and
int3
popf
xor
lds
mov
mov
loopne
and
ja
xchg
dec
mov
mov
mov
jns
xor
outsb
stos
es
mov
add
pop
fsubrp
xchg
repz
mov
cltd
push
jmp
arpl
popf
jg
cmp
push
mov
stos
mov
stos
mov
ret
andl
popa
lds
mov
fnstcw
push
cwtl
cmp
push
movsb
imul
jp
adc
xchg
pop
xor
outsl
lods
or
dec
fisttps
dec
mov
gs
fsubp
mov
cmp
lahf
inc
adc
movsl
pop
in
jno
mov
adc
in
cld
inc
sahf
scas
pop
pop
imul
jns
pop
pop
xchg
xlat
cmpsb
mov
shl
dec
ret
sahf
sub
mov
rclb
lds
js
popf
fmulp
sbb
sarl
aas
cmp
and
rolb
adc
mov
js
cmc
jne
adc
jo
adc
xchg
cmp
jge
adc
into
and
mov
pop
jo
pop
inc
fdivr
filds
mov
dec
sub
mov
pop
cmp
jns
jmp
jns
pop
mov
hlt
out
adc
jns
mov
pop
ret
jns
loopne
pop
inc
mov
and
iret
fs
inc
das
xchg
lea
mov
jmp
mov
mov
or
cwtl
popf
call
stc
insl
mov
cli
xor
inc
sbb
cs
lret
jnp
jge
rcll
jns
ficompl
jno
daa
sbb
cmp
fidivrs
sahf
inc
jae
mov
xorb
jmp
sbb
lret
push
mov
sbb
movsb
adc
adc
arpl
shll
jge
cmp
pop
ss
fsubr
jo
adc
mov
lds
stos
and
xor
mov
bound
scas
push
xrelease
test
push
push
insb
push
pop
pop
mov
sbb
into
or
gs
cmp
outsb
test
ficomps
jo
sbb
call
lahf
pop
mov
into
mov
pop
pop
mov
fidivs
sub
xor
mov
lods
adc
mov
and
inc
test
add
push
stc
outsl
mov
scas
dec
push
insl
outsb
dec
push
repnz
sub
leave
fisubrs
outsb
sahf
cmpsl
mov
subl
fdivrp
sbb
lods
cmp
and
cmp
xchg
dec
aas
sub
mov
aas
jo
inc
pop
mov
xor
sahf
je
inc
in
cld
mov
mov
out
sbb
xor
cmp
mov
je
lock
pop
dec
sbb
es
lcall
or
xor
xlat
dec
insb
lea
dec
mov
test
test
jl
mulb
cmpb
jbe
mov
push
jg
cltd
xchg
repz
xlat
movsl
shrb
jo
into
xchg
or
imul
pop
dec
pop
or
popf
add
ret
pop
mov
push
mov
loop
fimuls
lcall
inc
cmp
dec
jg
insl
push
push
out
push
mov
cli
pop
mov
fstpl
jno
repz
mov
push
shl
fimull
inc
dec
aaa
mov
std
in
mov
or
fiaddl
mov
js
imul
xor
ficomps
ds
mov
outsl
xchg
xor
insl
cmpsb
andl
aam
push
sbb
je
movsl
aad
leave
hlt
sbb
jb
adc
dec
call
filds
mov
xchg
popa
dec
pop
adc
mov
jnp
mov
push
push
ds
popf
fdivr
outsl
pop
shr
pop
jno
mov
sbbl
cmp
cmpb
cmpsb
add
cld
inc
adc
pusha
jp
sbb
cmp
xor
xor
fwait
popf
or
add
pusha
fisttpll
es
insl
jl
dec
stos
push
pop
int
roll
push
sub
push
or
faddl
popa
addr16
push
jo
pop
pop
test
and
fidivs
sarl
jnp
xchg
pop
pop
iret
add
xor
loope
dec
push
xchg
insl
cmc
mov
mov
push
add
repz
gs
dec
pop
in
outsb
push
ljmp
ficoms
ja
outsl
imul
mov
mov
ljmp
mov
sub
xchg
lcall
mov
test
outsl
fcmovb
insl
mov
fidivrl
push
lret
mov
fimuls
adc
lahf
orl
lock
xchg
gs
arpl
in
lds
cmpsb
xchg
lds
insl
iret
jno
pop
imul
cld
lea
adc
push
stos
sub
jns
push
push
idivl
int
xchg
dec
test
popf
jle
aam
dec
sarl
lea
sub
divl
movb
fldcw
xorl
dec
dec
idivl
mov
imul
div
push
out
xchg
push
mov
lock
push
or
jmp
leave
push
push
xor
mov
jb,pn
stos
inc
pop
bound
ja
stos
sahf
mov
fistl
ret
in
cmp
xchg
jno
mov
jmp
and
adc
xchg
inc
aaa
out
push
xor
and
test
jns
xchg
es
fs
mov
test
push
fdivr
dec
cli
and
in
icebp
or
mov
ret
lahf
xchg
cmp
cmp
les
ja
sub
pop
adc
push
test
cmp
jge
or
mov
insb
cmp
inc
mov
js
stos
negl
lock
adc
xchg
lea
aaa
inc
ret
push
pop
pop
pop
lods
popa
pop
movsb
outsl
add
call
mov
stos
outsl
rclb
decb
lods
pop
xchg
mov
or
mov
sub
cmp
loop
movsl
or
stc
loop
dec
pop
adc
ja
and
mov
leave
fisubrl
push
rol
fists
test
mov
lds
sahf
out
out
movsw
andl
inc
sub
mov
lea
xchg
sub
mov
and
pop
std
inc
jecxz
lock
add
out
int
lods
cmp
repnz
stos
xchg
insl
push
iret
gs
mov
test
lods
push
neg
sbbb
mov
and
xor
js
loope
dec
popl
add
scas
es
inc
jmp
push
jns
pop
sbb
xor
jbe
add
jnp
in
fwait
xchg
rcrl
insb
ljmp
add
jns,pn
int
push
cmp
add
push
shll
mov
fdiv
cmc
cmp
clc
ret
daa
xchg
outsb
push
ret
sub
mov
inc
in
lods
loopne
xor
fucomi
jne
sub
adc
insl
pop
fwait
ljmp
or
test
push
cmp
add
jl
xorb
xor
add
mov
push
ja
aad
orb
sbb
lods
mov
sahf
jo
sbb
inc
lahf
cmc
in
and
pop
out
outsl
jno
pop
push
pop
popa
leave
inc
inc
push
popa
cld
xor
in
pop
jne
lea
es
xchg
xchg
xchg
ljmp
das
mulb
pop
inc
push
inc
insb
adc
push
gs
cli
loop
and
inc
cli
push
adcl
cli
adc
inc
and
jns
add
xor
cli
rcll
mov
xchg
jo
loope
movsl
xor
rcll
dec
popf
std
data16
mov
jno
ljmp
inc
out
test
imul
fwait
dec
lea
mov
aad
mov
pop
xchg
test
xchg
cmp
loopne
int
mov
aam
pop
inc
jg
mov
lcall
xor
xchg
push
jne
leave
mov
int
fldenv
push
popf
pop
mov
add
mov
fsubrp
sbb
jns
repnz
mov
scas
jns
xor
mov
cmp
nop
mov
js
jmp
pop
in
jge
sbb
pusha
mov
jge
push
aas
push
xchg
push
mov
jns
inc
mov
jge
mov
jmp
sub
imul
add
xchg
fnsave
jl
adc
adcb
cmp
push
xor
mov
xor
dec
push
xchg
cli
imulb
out
mov
add
pop
cmpsl
adc
jae
jecxz
out
mov
or
and
xchg
fistl
xor
jbe
rcll
icebp
push
push
popa
pop
rcr
push
pop
fwait
xor
test
popf
int3
push
in
or
jno
adc
mov
push
cs
push
dec
test
frstor
xchg
mov
fwait
js
mov
test
ret
bound
or
testb
add
fs
scas
imul
sub
jge
cmc
push
rcrb
lods
mov
push
mov
jo
jp
ljmp
xchg
pop
shll
sti
dec
lods
pop
sub
das
fisubl
dec
jp
xor
ljmp
push
add
cs
in
rolb
dec
bound
inc
push
mov
sbb
and
mov
mov
jb
xchg
push
push
in
ret
jmpw
push
pop
push
and
and
pop
cltd
xchg
dec
xor
test
dec
or
xchg
jne
cli
xlat
cmp
int
xor
xchg
mov
hlt
jo
xchg
mov
push
mov
imul
rcrb
les
jecxz
in
jecxz
in
icebp
inc
int3
xor
or
shl
pop
xor
cltd
dec
mov
inc
push
rcr
xchg
and
inc
bound
push
mov
js
and
push
xchg
sub
fldt
repz
into
mov
pop
jnp
push
or
mov
dec
xchg
mov
cltd
dec
mov
pop
and
pop
push
movsl
xor
xchg
testl
cmp
adc
add
mov
pop
mov
dec
lock
jle
aam
xchg
rclb
or
mov
cmp
jecxz
movsb
xchg
mov
sub
jo
das
cmp
lods
lahf
iret
xchg
mov
cmp
test
mov
outsl
cmp
into
mov
pop
cmpsb
and
pushf
xlat
cmp
sarb
sub
sbb
pop
push
sub
or
addr16
int
ffree
adc
je
inc
and
cltd
or
push
sub
scas
cmp
and
mov
das
inc
jbe
imul
pushl
addr16
cmpsb
push
mov
pop
mov
outsb
int
in
mov
lahf
int
in
mov
inc
cli
stos
mov
rorb
lea
inc
push
inc
test
sbb
das
mov
mov
pop
lret
arpl
inc
in
push
outsl
gs
cmc
xor
mov
cmp
sbb
test
and
rclb
lahf
jns
and
lds
jns
shrl
lea
sub
jbe
mov
cmp
cli
push
mov
movsb
jle
pop
xchg
js
mov
mov
test
cmp
lock
fs
cli
jecxz
jne
sbb
dec
jg
jne
pop
cld
lods
dec
jne
imul
mov
mov
stc
aaa
xchg
gs
mov
popa
and
mov
xchg
movsl
jmp
adc
jmp
add
fnsave
jp
pop
cltd
lds
sahf
insl
gs
mov
add
push
pushf
inc
ret
into
loope
mov
int
arpl
mov
xchg
pusha
add
lds
ficoml
jae
es
jae
imul
xchg
mov
jbe
lahf
add
jne
adc
shll
cmp
and
mov
pop
xchg
ret
fnstsw
jno
and
pop
insl
cmpsb
shrl
xchg
dec
outsl
adc
mov
or
roll
pop
subl
ja
inc
push
xor
inc
jno
addl
dec
jle
or
lock
fdivs
xchg
hlt
mov
inc
jle
mov
push
xchg
mov
dec
sti
rcll
pop
adc
push
icebp
xchg
jge
outsl
pop
lea
push
lea
addr16
inc
cmc
sub
jae
fidivs
dec
cmp
mov
stc
xor
add
jno
clc
cwtl
mov
orl
or
into
lret
dec
out
enter
insb
cmp
mov
cltd
dec
fsubrp
xor
pop
loope
test
adc
ret
mov
clc
fdiv
icebp
push
in
jl
push
xor
pop
jno
cltd
inc
mov
push
jmp
test
loope
out
jp
jmp
mov
mov
sub
pop
bound
std
pusha
mov
outsb
xchg
jo
iret
jno
dec
add
les
outsb
jle
jno
aad
pop
lea
cmp
out
into
pop
int
out
nop
je
lret
repnz
pushf
lahf
test
inc
inc
subb
mov
imul
jne
orb
lea
lea
adc
outsb
std
lea
outsl
mov
push
xor
sti
orb
das
pop
jo
or
cmp
flds
or
cmp
das
pop
jo
or
cmp
fstps
das
pop
jo
or
cmp
flds
das
pop
jo
or
cmp
fldl2e
das
pop
jo
or
cmp
das
pop
jo
or
or
fsubrp
sbb
mov
fisttpll
xchg
enter
rcrb
sub
jge
iret
fnstcw
aas
bound
and
addr16
fmuls
ficompl
loopne
negl
outsb
mov
sti
orb
jle
mov
mov
xchg
sti
test
outsb
jge
push
pop
inc
xor
negl
mov
inc
in
lods
lods
shlb
ficoms
mov
cmpsb
push
mov
decb
dec
cmp
cmpsb
mov
mov
jns
rol
pop
cli
or
popf
imul
pop
sbb
test
arpl
loop
roll
xor
jns
add
push
sahf
sbb
test
arpl
xor
sarb
push
push
push
sub
push
repnz
test
arpl
repnz
or
push
jns
or
push
sbb
test
arpl
sub
roll
xor
jns
or
push
push
sbb
test
arpl
push
or
xor
jns
push
push
ficompl
or
faddp
xor
stc
lock
in
fnstcw
aas
pop
cmp
lea
loope
neg
rorb
push
push
aas
sbb
sbb
push
push
push
sbb
test
arpl
adc
rcr
xor
jns
push
push
or
sbb
arpl
push
or
push
xor
push
fstps
adc
fstps
int
push
mov
ds
mov
pop
das
int
push
test
xchg
jge
mov
jp
nop
cs
popa
out
xor
and
int
dec
push
xchg
ret
pop
push
mov
jno
xchg
cmp
rcrb
add
xlat
push
pop
jns
add
push
jns
loope
fisubs
mov
jle
xlat
inc
outsl
jge
nop
lret
dec
into
lds
push
and
or
adc
jbe
lret
pop
jecxz
inc
scas
out
jmp
dec
loop
xor
inc
xchg
ja
insb
or
add
popf
jle
sbb
adc
dec
push
dec
scas
inc
mov
inc
jecxz
in
shrb
cli
inc
and
jl
or
stc
jmp
or
ja
scas
test
pop
dec
push
loope
cmpsb
js
push
dec
push
repnz
and
jmp
or
into
push
sub
aaa
xlat
xor
rcrl
xor
jns
push
out
xor
push
es
sar
jmp
push
xorb
negl
cmp
imul
sbb
or
mov
lods
out
adc
mov
cltd
jns
jae
gs
xchg
pusha
mov
or
sub
outsl
mov
cmc
fpatan
and
js
inc
out
lds
pop
ds
sub
push
rclb
jno
jmp
sbb
out
pop
or
sub
inc
push
pop
xor
mov
outsb
icebp
lock
push
test
in
pop
jns
fistpl
inc
dec
jno
jecxz
xchg
jge
push
arpl
cmpb
cld
push
scas
popa
jns
imul
jne
mov
icebp
inc
xchg
jge
jl
jns
jne
cmp
add
movsl
or
or
xchg
push
gs
fcompl
inc
jo
jno
imul
mov
and
bound
jg
jg
or
pop
jns
mov
mov
imul
lods
jns
xor
push
mov
and
lods
jmp
fs
adc
dec
loopne
jg
popaw
and
lock
pusha
mov
sahf
out
sub
lock
enter
lahf
jecxz
add
lahf
sahf
inc
es
mov
lds
cmc
or
lret
les
xchg
jmp
test
popa
mov
add
add
mov
xchg
jp
fdivs
insb
push
adc
jne
mov
fdivs
jno
pusha
scas
or
push
outsl
ljmp
out
ljmp
std
shlb
xchg
jb
mov
gs
int
xor
out
gs
adc
jns
gs
mov
mov
and
push
clc
shll
sub
push
fistps
mov
push
xchg
test
jbe
aad
dec
mov
aas
xchg
loope
mov
imul
in
leave
fnstcw
xchg
adc
push
es
fs
lea
outsl
inc
leave
int
in
insl
jbe
int
sub
mov
test
aad
in
jg
movsb
and
mov
jnp
pop
adc
lea
jns
loopne
sub
mov
xchg
sbb
rorl
xor
enter
call
jg
shrb
lcall
sub
pop
inc
or
xor
mov
je
cs
dec
test
scas
mov
push
outsl
jne
mov
mov
aam
inc
imul
pop
cltd
aaa
push
inc
jno
and
lcall
mov
mov
push
mov
jle
rorb
outsb
sbbb
mov
jbe
imul
test
or
or
inc
outsb
scas
ljmp
jbe
mov
and
in
icebp
scas
stc
cmp
mov
jp
cltd
js
scas
movsb
ficoms
jno
out
gs
gs
imul
or
fldt
shr
and
adc
inc
popa
xor
cmc
and
add
and
aaa
fstp
fchs
pop
in
mov
dec
outsl
cwtl
mov
dec
mov
mov
xor
pusha
leave
lds
popf
add
imul
insb
mov
xchg
std
jge
mov
push
aad
sahf
mov
adc
stos
pushf
dec
loope
adc
jl
out
lret
in
fwait
jno
negl
sub
jnp
inc
xchg
pop
mov
cmp
sub
mov
mov
mov
leave
jo
xor
inc
call
test
xchg
test
fiadds
into
cmp
lahf
fs
pop
add
outsb
cmp
hlt
pop
sti
leave
cltd
lds
jo
nop
xchg
mov
lea
jmp
jns
call
xor
test
adc
fwait
xor
sbb
dec
and
or
or
add
clc
jo
and
mov
xchg
fs
insl
sub
std
jns
xchg
loop
cld
enter
out
push
imul
lea
fwait
jge
pusha
test
outsl
mov
jmp
cmp
adc
jge
inc
xchg
pop
mov
loopne
pop
aas
cmp
sbb
lock
aam
lea
fimuls
xor
in
inc
cmpl
orl
push
push
in
mov
inc
in
push
fcoms
and
jnp
imul
outsl
cmc
mov
mov
cmp
sarl
lret
jge
xchg
aad
xchg
shrb
orl
push
mov
aad
negl
mov
shl
jne
and
nop
push
fimuls
jge
xor
xlat
jb
gs
mov
push
push
outsl
push
ret
rclb
stos
mov
inc
cli
xchg
pusha
cs
divb
sub
jmp
stos
dec
pop
loope
out
or
sub
xchg
dec
testb
dec
xlat
enter
gs
pop
sub
jae
pop
cmc
jne
aam
das
mov
jne
popf
lea
lea
sub
cmp
in
in
popf
mov
cmp
popf
mov
pusha
lret
push
jae,pn
imulb
adc
pop
in
ficomps
mov
int3
cmp
sahf
shrl
jne
jmp
sub
pusha
mov
mov
stos
repnz
xchg
fcompl
in
push
jo
push
sbb
sub
arpl
pushf
pusha
push
in
or
call
out
pop
lcall
repnz
ror
fs
popf
push
jae,pn
divb
std
cmp
mov
cltd
jne
dec
jl
pop
popf
filds
adc
pop
jmp
dec
movsl
cmp
fidivrs
inc
cmp
adc
int3
push
ds
jne
dec
cmpsl
cmp
pop
in
cmp
jne
ret
dec
cmp
jle
jae
pusha
sbb
adc
leave
fbstp
jle
in
filds
pop
jo
int3
push
ds
jne
dec
cmpsl
cmp
loopne
ds
jmp
cmp
fnstsw
inc
cmp
cmpsl
mov
outsb
in
sub
jmp
scas
jne
enter
mov
ret
enter
mov
subb
inc
mov
mov
lods
cwtl
and
dec
xchg
rcll
pushaw
in
mov
push
loopne
adcl
add
shll
movsb
scas
loop
xorb
or
int
aad
inc
push
jae,pn
adc
sub
in
leave
in
add
cmc
ret
jns
sub
mov
cs
add
aam
push
pop
inc
js
pop
pop
cmpb
pushf
dec
fdivl
clc
test
sbb
lahf
shll
subb
dec
aad
or
cld
andb
shll
imul
stos
cmp
xchg
xor
leave
insl
xor
shll
xor
mov
push
mov
sub
ret
js
xchg
push
xchg
sbb
add
xchg
mov
xchg
jo
pop
jae
leave
popf
pusha
adc
psadbw
fbstp
cmpsl
adc
and
dec
jg
xchg
jg
inc
aad
push
cmp
jo
and
lret
test
arpl
push
or
popf
push
sarb
xchg
fists
mov
mov
test
arpl
pop
clc
fcom
lcall
dec
lcall
cmp
mov
cmp
mov
jnp
ret
mov
aad
ret
dec
inc
and
add
pop
sahf
arpl
push
icebp
xchg
add
pop
loop
rcl
mov
lock
movsb
xchg
add
sbb
push
jnp
cmpsl
push
pop
lahf
pop
pop
push
lea
mov
frstor
lds
dec
inc
pop
jns
cmc
aam
jge
inc
icebp
add
xchg
mov
ret
lods
cmpsb
jle
sahf
inc
test
test
aaa
lea
jge
mov
mov
push
push
mov
stc
xchg
pop
xor
aas
jne
pop
and
lds
sbb
xor
test
add
ss
xchg
fisttpll
push
mov
sub
and
insl
and
push
mov
pop
pop
std
sbb
inc
lahf
pushf
out
popl
adc
mov
mov
arpl
decb
shl
inc
in
jns
push
push
and
leave
icebp
dec
ljmp
jle
sysenter
scas
jo
out
adc
insl
mov
push
push
jge
into
out
adc
mov
jg
mov
lea
int
xchg
inc
lea
inc
insb
xorb
push
mov
aaa
mov
cmpl
sti
mov
lret
test
mov
cs
shrl
push
lea
mov
pop
aaa
sub
gs
pop
mov
or
add
orl
lret
inc
scas
and
loope
loop
dec
cmp
int
mov
fisubrs
push
sub
xchg
pop
mov
add
jp
xchg
xchg
loop
lret
push
mov
insb
imul
jns
push
mov
cmp
int
cmp
lea
jno
jae
xchg
sbb
fwait
or
pop
iret
jae
xchg
push
outsb
mov
int
jnp
sahf
adc
scas
in
push
pop
and
push
mov
pop
add
jns
inc
fs
inc
jae
mov
mov
fwait
sub
fisubrs
jns
mov
adc
mov
std
jo
mov
pop
movsl
dec
in
lods
dec
and
pop
sbb
cmp
popa
push
and
xchg
push
arpl
fdivrp
aas
pop
pop
dec
adc
sbb
xchg
inc
pop
pop
xchg
ret
and
and
cmpsl
mov
arpl
push
shlb
cltd
push
dec
inc
xlat
sbb
push
jnp
push
inc
or
fidivrs
std
pop
add
xchg
push
pop
mov
lcall
popf
movsl
and
push
iret
jo
or
sub
ja
std
jo
pop
ja
mov
ja
xchg
std
js
sbb
fscale
jl
ja
push
in
push
sub
pushf
std
mov
mov
and
outsl
in
dec
ja
dec
or
sbb
jno
shll
insl
jns
adc
test
cmp
push
aam
xchg
push
rep
or
inc
dec
add
andl
repz
sbb
mov
push
mov
push
mov
mov
int3
mov
stos
or
pusha
fstp
mov
popf
and
fcompl
jne
sub
jns
mov
sarl
adc
stos
or
repz
mov
mov
jecxz
pop
mov
lahf
mov
xor
pop
sub
cmc
mov
mov
popf
ds
or
push
cld
dec
sarl
mov
lea
or
push
xor
jbe
cmp
stos
cltd
mov
loopne
xchg
jbe
jns
fsubrs
pop
insb
mov
push
stos
inc
push
js
out
cmp
jle
cmpsb
popa
insb
mov
int3
xchg
push
mov
cmp
cmp
js
jle
push
fcoms
dec
xchg
pop
push
mov
push
dec
inc
add
mov
and
mov
testb
outsb
sbb
outsb
mov
jae
lds
shll
ljmp
mov
sti
ja
icebp
cmp
or
xor
roll
nop
lds
xchg
hlt
in
adc
sti
ret
add
jnp
outsb
xchg
cwtl
jne
cmc
imul
hlt
lea
in
mov
push
jno
cmp
rcrb
test
add
adc
jno
dec
jae
inc
lahf
pop
jno
aad
shrb
inc
push
insl
mov
int
mov
sub
popa
and
cmp
fwait
lds
jl,pn
mov
xchg
fldl
mov
cwtl
imul
push
jo
pop
sbb
mov
mov
lea
loop
aad
xchg
sub
sub
adc
mov
dec
xor
mov
outsl
aad
fists
pop
aad
jno
sbb
xchg
sub
mov
dec
gs
mov
adc
lea
adc
pop
dec
scas
push
outsl
std
add
jmp
loopne
rcll
in
hlt
fistpl
inc
jne
enter
xchg
outsl
xor
xchg
xorb
fnsave
mov
sub
jmp
rorb
cli
mov
mov
lods
jne
sbb
cmp
push
jns
pop
pop
inc
rcl
dec
notl
jb
js
mov
jae
xchg
sub
fiadds
neg
sbb
ret
aas
loope
lret
add
aad
lahf
jns
loopne
in
call
mov
mov
sub
xlat
in
sbb
sbb
lds
mov
test
mov
ds
popl
inc
mov
mov
iret
popf
pop
mov
ret
push
xor
mov
xchg
orl
fs
push
adc
call
pop
xor
pop
sub
xlat
test
fistpl
sbb
test
xchg
add
add
lock
or
or
scas
jns
and
into
sub
ss
fbld
test
push
int3
mov
lea
arpl
dec
mov
mov
aaa
mov
jmp
bound
push
leave
push
xor
jnp
pop
adcb
mov
subl
outsl
out
arpl
jecxz
insl
jns
adc
lea
push
test
aam
push
repz
xchg
pop
xchg
pop
sub
cmc
pop
dec
push
jecxz
leave
js
enter
mov
mov
mov
lods
mov
mov
stos
insl
les
lea
das
xchg
ss
xor
ja
shll
insl
jns
arpl
imul
aaa
out
and
arpl
xchg
lea
mov
push
lahf
lea
pop
stc
shr
lea
inc
mov
jae
mov
and
lret
fidivs
jnp
mov
stos
sahf
lret
enter
sub
dec
hlt
xlat
sbb
rorl
lret
inc
jns
dec
enter
mov
xchg
xor
sti
xor
lock
push
mov
jns,pn
jno
dec
mov
or
and
testl
adc
add
dec
ret
fadds
push
jle
imul
lea
xchg
inc
enter
sti
adc
mov
shll
xchg
testb
addr16
test
addr16
jb
add
lods
dec
test
sbb
mov
inc
dec
and
lea
xchg
lret
pop
mov
xchg
pop
movsl
xchg
out
cmc
mov
pop
sbb
shrl
in
push
jns
mov
clc
pop
aam
and
stos
mov
int
adc
xchg
sub
popf
jle
aas
xchg
stos
and
into
sahf
imul
shrb
aad
mov
lea
mov
scas
ret
cmp
cmp
jle
sbb
pop
movsb
ret
int
insl
popa
jle
jge
lea
xor
xchg
jne
dec
cltd
jnp
sub
mov
lea
dec
jne
and
cli
xchg
xor
cltd
lea
dec
fmuls
lea
sub
lea
sbb
xor
lea
add
out
lds
rorl
and
cli
pusha
lea
jo
loopne
cmp
jo
loopne
cmp
jo
loopne
xor
cmp
lods
lea
ljmp
lea
push
xor
lea
or
lea
cltd
fmuls
loopne
push
lds
rorl
lds
rorl
lds
rorl
test
arpl
lea
rorl
lods
pop
lea
loopne
xor
or
xchg
cs
ds
lds
jo
loopne
dec
sbb
sub
lea
lea
imul
inc
cltd
in
shl
dec
sbb
sub
lea
cmpsl
dec
mov
lods
ljmp
mov
jnp
sub
xchg
pop
in
xchg
inc
sub
dec
test
fldcw
rcl
lea
out
lds
sbb
aas
loopne
dec
sbb
pop
jo
mov
lds
inc
xchg
in
mov
pop
into
adc
cwtl
push
push
or
dec
js
mov
sub
inc
cmp
test
call
jge
out
inc
cmp
mov
mov
xlat
test
arpl
adc
or
dec
lret
test
push
and
jecxz
push
hlt
cmp
leave
in
push
sub
rcl
lret
aam
dec
imul
lahf
mov
sub
iret
fstps
add
lret
mov
cmp
es
inc
and
fnstenv
inc
jecxz
mov
test
sub
stos
ss
jp
sbb
out
pop
scas
jmp
jecxz
cli
mov
int
and
jns
and
cmp
into
pushf
loop
into
sub
shll
gs
xlat
adc
int3
mov
adc
out
es
aas
shlb
ljmp
in
int
stos
push
xrelease
and
outsb
push
jecxz
xlat
mov
int3
push
sbb
test
out
push
xorb
add
mov
outsl
push
mov
insb
das
addb
in
call
mov
cmc
mov
mov
sub
pusha
mov
cmc
inc
insb
lea
popf
xchg
fidivs
jns
clc
test
inc
adc
inc
xchg
into
test
outsb
jne
mov
insl
int
add
pop
lret
icebp
sub
cmp
pop
and
and
xor
jno
mov
fiadds
inc
jae
jno
jb
lahf
xchg
mov
fiadds
push
sub
mov
sub
jae
xor
sub
imul
pop
cld
test
fstl
test
push
pop
and
sbb
jmp
out
aaa
addr16
pop
push
push
fnsave
ffreep
shlb
lea
mov
pusha
adc
and
cli
xchg
mov
rcll
dec
ficompl
fimuls
jle
movsl
or
popf
mov
push
mov
ficoms
adc
cltd
mov
push
cld
fcoml
int
or
jno
pushf
adc
lods
data16
shlb
add
jns
cld
sarl
jns
aad
je
cltd
mov
mov
jno
jg
pop
sbb
pop
cmc
adc
fdivrp
jno
outsb
push
iret
daa
inc
popa
mov
pop
pop
rorl
push
push
in
add
loopne
fisttpll
fnstsw
cwtl
insl
jl
xor
hlt
cmp
push
cmp
jp
cltd
sub
sti
pusha
in
push
push
out
imul
popa
cmp
pop
stc
test
faddp
jne
out
and
lea
dec
jmp
pop
faddl
in
mov
inc
and
push
std
cmp
loopne
mov
jno
popa
outsb
dec
pop
leave
decb
and
mov
sub
leave
loopne
outsb
dec
xchg
jns
cmp
xchg
mov
xchg
insb
xchg
das
int
mov
jle
or
stc
int
dec
test
mov
mov
cmpsb
mov
jo
pop
adc
pop
movsl
call
loop
xchg
das
cmp
mov
xchg
xchg
fstpl
enter
xor
stos
cli
inc
mov
and
sub
push
lock
pop
pop
xchg
or
mov
xor
jecxz
lret
mov
lock
aaa
les
into
outsl
dec
adc
jg
xchg
jne
sarb
mov
cmp
in
adc
cmpsb
gs
jns
sub
in
test
jle
repnz
jecxz
and
lret
dec
outsl
aad
mov
inc
pop
stos
mov
nop
lret
sub
add
les
mov
popf
inc
xchg
push
or
insl
xor
pop
xor
mov
mov
outsb
incl
push
jb
cmp
gs
mov
pop
mov
xchg
into
outsl
xor
aas
push
lahf
inc
lea
jo
adc
fcomps
pop
mov
xor
mov
fcomi
jecxz
test
xorl
fldl
iret
mov
and
inc
lea
lds
push
stos
ret
pop
out
add
rcrl
stc
aas
and
mov
sbbl
outsl
jge
mov
pop
inc
sbb
pusha
aaa
ja
insl
shrl
pusha
lods
and
xorl
and
ja
inc
popf
push
inc
gs
sarb
int
push
pushf
dec
cmp
xchg
bound
leave
rcr
push
int
cmp
out
inc
or
out
out
std
fldl
xchg
mov
jb
rclb
pop
mov
int
push
ficoml
bound
nopl
jne
ret
xchg
cwtl
dec
outsb
pop
cmp
xchg
mull
dec
stc
test
xchg
push
xchg
push
loope
xchg
outsb
mov
jne
aad
add
lahf
mov
lods
xchg
adc
add
jle
push
adc
push
xor
fcomi
imul
sti
les
mov
sbb
jl
mov
jo
flds
ficompl
mov
stos
popf
add
and
mov
fsubrp
adcb
jg
adc
add
imul
lea
dec
or
insl
and
and
ret
std
jno
rcrl
xor
dec
push
pop
inc
mov
inc
mov
mov
ljmp
call
pop
sbb
push
xchg
loope
pop
fimuls
add
sbb
jns
add
mov
push
mov
sbb
inc
aad
cmp
push
xchg
les
cli
push
mov
push
scas
mov
in
push
push
jno
push
nop
inc
push
lea
jge
fmulp
pop
mov
cwtl
sub
sarb
pop
outsb
cs
outsl
pop
pop
cs
mulb
hlt
lods
movsb
outsb
jbe
pop
incl
fiaddl
movsl
incl
gs
or
icebp
sub
add
pop
jmp
xor
stc
sbbb
test
std
mov
fs
adc
mov
std
rcrb
jp
sub
jno
and
pop
lock
push
add
je
pop
add
jnp
xor
lock
push
jp
aad
jne
xor
xchg
loope
js
lea
mov
jae
add
mov
dec
jl
stos
jl
fdivrs
sub
lock
pop
lds
repz
xor
pop
mov
in
scas
pop
in
push
dec
enter
scas
mov
rclb
adc
test
outsb
je
in
sub
mov
test
jae
ds
ret
fmull
xor
jge
and
ja
sub
lea
cmpsb
or
push
loope,pn
xorl
mov
icebp
push
cmc
cwtl
scas
and
sbb
aaa
bnd
jno
aad
or
pop
jle
bound
int
pop
jnp
fistpll
aam
gs
xchg
jae
jne
bound
lret
push
fwait
push
clc
cs
pusha
mulb
dec
mov
test
xor
jno
arpl
aad
xchg
push
out
jno
cltd
sub
clts
mov
das
add
sub
sub
das
repnz
push
bound
mov
lock
scas
fs
jecxz
mov
mov
sub
xor
stc
jge
testl
lea
sbb
outsl
daa
fcomps
mov
jns
and
mov
ja
loope
sarl
xchg
popf
jmp
xor
movl
pop
or
adc
add
icebp
xor
push
rcr
adc
fwait
push
xchg
sbb
pop
push
movsb
xchg
mov
mov
jo
insb
rep
and
xor
mov
pop
mov
jno
cli
daa
jge
jle
bound
jmp
mov
jp
lods
push
jo
cmp
jge
and
rcrb
dec
outsl
mov
ret
mov
js
outsb
push
mov
jno
push
movsb
adc
in
cmp
cmp
shlb
outsl
cmp
jmp
fs
popf
outsl
xchg
jo
adc
or
xchg
scas
enter
fldcw
aas
pop
out
lret
jle
push
jae,pn
jle
sub
xor
xor
pop
xor
jnp
aam
incb
add
outsl
das
or
xchg
scas
enter
fldcw
aas
pop
out
xchg
jae,pn
mov
in
xor
pusha
xor
lea
in
pop
mov
popf
pusha
jb
adc
sub
out
jo
or
fldcw
cs
fldcw
push
jae,pn
mov
cs
xor
test
repnz
mov
aad
out
call
pop
outsl
xchg
jae,pn
sbb
lcall
mov
loopne
std
lods
out
adc
dec
xchg
shlb
xor
mov
iret
xor
xor
popf
aas
pop
jo
cmp
popf
das
popf
enter
fwait
rolb
jnp,pn
and
sbbl
jo
or
icebp
outsb
ficoms
in
pop
iret
xor
fsubr
popf
xor
bound
addr16
fmuls
xchg
and
mov
mov
bound
and
addr16
fmuls
cmpsl
push
scas
mov
inc
dec
pusha
sub
jo
or
sub
iret
inc
shll
inc
insb
jnp,pn
mov
das
out
adc
out
pop
inc
aad
cmp
outsl
inc
lods
pusha
sub
out
rcll
xchg
scas
enter
in
fldcw
add
lods
jnp,pn
sub
sub
lea
loopne
out
mov
popf
adc
jo
sbb
das
cmp
out
lea
outsl
scas
or
icebp
outsl
in
xchg
cs
fldcw
add
sub
lods
xchg
fdivs
sub
bound
addr16
fadds
in
xchg
in
das
cmp
out
dec
into
adc
push
repz
mov
jae
sub
add
cmpsl
xchg
mov
xchg
sub
hlt
xlat
in
ja
lods
in
je
insb
ja
sub
repz
jmp
mov
in
jae
imul
in
repnz
ljmp
push
xor
outsb
sub
xchg
mov
test
xchg
in
in
in
in
in
in
in
in
in
in
fisttpll
fisttpll
xchg
fisttpll
adc
or
rcr
lret
fstl
fisttpll
scas
rolb
shrb
shl
shr
shlb
shrb
xor
sub
repnz
shlb
shrb
xor
sub
icebp
shr
jmp
arpl
imul
pop
in
cs
rorb
xor
xchg
jo
sbb
loope
aam
cs
xor
xor
cli
mov
pop
xor
mov
jo
das
pop
out
pushf
scas
fsubrl
cs
sbb
and
xor
outsl
push
rcrb
cli
test
or
cli
push
and
push
nop
xchg
lock
aaa
scas
dec
inc
scas
sub
xor
dec
xor
and
pop
sub
mov
in
gs
dec
cmc
jmp
mov
dec
pushf
test
xchg
les
sub
jbe
jo
mov
std
sbb
mov
jecxz
lods
push
lret
add
outsl
sub
cmp
bound
xchg
inc
pop
sub
cmp
adc
lahf
subl
sbb
js
cmp
fs
into
mov
mov
jl
push
pop
fst
cmp
or
mov
add
fldl
daa
jbe
leave
sahf
mov
test
sbb
rorl
shrb
test
cmpsb
ljmp
rclb
loopne
data16
and
pop
sti
in
pusha
in
mov
xor
clc
call
inc
bound
adcl
and
hlt
jnp
add
loope
lock
in
fldl
jle
repz
scas
xchg
inc
ja
fwait
cmp
cltd
pop
cli
scas
sbb
cmp
and
cmp
sub
xchg
mov
lods
movzbl
aas
ss
push
mov
mov
dec
test
lock
idiv
cmp
in
stc
jle
mov
jle
xor
test
push
and
sbb
and
ss
jo
cli
outsb
jbe
xor
cmp
push
mov
mov
fcmovnbe
out
or
ficomps
mov
orb
scas
and
jle
adc
sbb
addr16
xchg
fisttps
mov
outsb
out
xchg
and
lahf
push
mov
pop
push
push
scas
sub
lds
push
xchg
out
loop
mulb
popa
and
rep
in
mov
add
lds
cmp
fstpl
lods
in
vxorps
mov
xchg
inc
test
cmpsl
push
cmpsb
push
test
pop
inc
pop
mov
lock
push
push
call
and
loop
or
shlb
sub
repnz
je
jp
lea
sub
xchg
push
pop
sahf
sub
arpl
fidivrs
ja
popa
fnstsw
popa
cltd
pop
stos
mov
mov
sbb
movsl
mov
lret
push
test
in
sub
decl
inc
xor
mov
dec
fidivl
sub
imulb
pop
jns
xchg
sub
repnz
adcb
inc
pop
dec
mov
xor
cmp
xchg
adc
push
ljmp
push
and
out
adc
xchg
sahf
xor
xlat
xor
dec
lcall
scas
sub
ss
dec
xchg
inc
xchg
into
ficoml
push
pop
jbe
cmp
mov
jl
aad
pop
lock
lcall
or
lahf
xchg
scas
dec
sbb
jbe
dec
sbb
push
inc
push
xchg
jnp,pn
lret
test
or
aad
test
jnp
aad
test
or
aad
test
or
outsl
inc
bound
or
aad
test
or
cmp
fmuls
xchg
jnp,pt
lret
test
or
aad
xchg
xor
xchg
jnp,pn
lret
test
or
aad
test
add
lret
test
or
aad
test
jnp
aad
test
or
aad
test
or
outsl
inc
bound
add
pop
mov
iret
inc
fisttpll
sub
pop
sbb
sbb
fnstcw
into
shlb
mov
into
leave
jo
ficomps
or
mov
std
xchg
aam
push
adc
iret
dec
test
in
rolb
lock
pop
lock
sub
andl
or
dec
dec
mov
xor
add
fildll
imul
adc
lock
lea
outsl
adcl
das
mov
cwtl
scas
or
xchg
pusha
xchg
cmp
xor
aad
push
arpl
outsb
jge
add
sub
jne
pop
mov
jge
jne
mov
ljmp
xchg
cltd
scas
cmp
pusha
mov
movsl
mov
shrl
divb
mov
mov
xchg
rorl
mov
xchg
insl
in
adc
adc
mov
pop
test
scas
pop
aad
scas
push
and
xchg
pop
lahf
sub
inc
push
lahf
inc
lahf
arpl
leave
mov
lahf
jmp
scas
fcom
mov
fldenv
or
loope
push
in
ror
lea
jmp
sub
int3
pop
lahf
fldenv
popl
dec
loope
lret
pmaxub
aaa
xor
lret
aaa
fldcw
mov
mov
cmp
pop
popl
imul
out
sbb
mov
mov
xchg
inc
adc
jg
push
jg
push
xchg
std
mov
sub
pop
outsl
add
add
imul
sarl
push
inc
outsl
sbbl
mov
adc
jg
adc
test
xor
xor
mov
outsl
shll
inc
outsl
imul
dec
shrl
xchg
outsl
or
out
xor
sbb
sbb
dec
in
stos
inc
fldcw
dec
lret
stc
imul
pop
sbb
dec
rcrl
pop
or
scas
dec
shll
aad
pop
mov
mov
dec
push
xchg
xor
xor
mov
dec
shll
inc
dec
imul
xor
test
xor
xchg
or
out
aas
cmp
dec
pop
pop
pop
outsb
enter
jge
xchg
dec
ficomps
outsl
stos
cmpsb
pushl
sar
jns
inc
mov
test
cmp
in
out
dec
jns
ja
int3
cmpsl
jns
gs
pop
sub
xor
scas
aad
sub
js
mov
sbb
inc
push
in
pop
decb
inc
jle
ficoml
jns
mov
fldcw
push
add
gs
or
jne
aad
push
mov
xchg
imul
dec
fsubr
sbb
xchg
cmp
jne
mov
and
xor
or
pop
mov
rcll
ljmp
test
ret
gs
insb
lcall
iret
popf
xor
push
cmp
adc
leave
cmp
inc
into
pop
into
rcll
repz
fs
xor
mov
gs
pushf
pop
sbb
jmp
clc
xor
push
shlb
fisttpll
xchg
sbbb
cmp
mov
cli
divb
ret
mov
lahf
adc
adc
add
sub
mov
mov
popf
sbb
sbb
hlt
jns
or
test
shl
xor
push
in
repnz
mov
pop
xor
out
push
popa
mov
movsl
bsr
pop
fwait
xchg
fstpt
subb
inc
data16
negb
jns
inc
pushf
xchg
int
dec
inc
jne
dec
add
lcall
dec
outsb
int
pop
cmc
ljmp
xorl
sarb
jne
in
xor
mov
add
and
cmp
jne
in
fimuls
mov
lcall
movsl
nop
ljmp
aaa
jne
test
ss
mov
lea
push
cmp
mov
xchg
dec
mov
push
cmp
daa
outsb
das
and
jmp
xchg
jle
mov
popa
pop
dec
rcrb
push
push
fnstcw
loopne
es
sbb
loopne
inc
in
xchg
hlt
mov
inc
mov
push
xchg
jge
lahf
push
mov
lea
xor
or
pop
add
sahf
adc
xlat
outsb
test
je
jle
mov
in
sarb
mov
push
or
out
call
aas
aaa
in
mov
adc
and
jmp
xor
and
icebp
and
and
lcall
adc
aam
mov
jns
aad
mov
insl
mov
xor
std
in
in
shr
sbb
jns
in
inc
mov
mov
inc
cmc
add
jns
rolb
lcall
jle
test
pop
jbe
dec
arpl
lds
stc
sbb
orps
mov
imul
and
jo
xlat
subl
aad
xor
inc
sbb
leavew
arpl
cmpsl
mov
fstp
gs
cmc
jmp
jno
jno
xchg
shlb
sbb
ja
dec
lods
push
in
nop
lret
jne
aaa
mov
adc
es
xlat
or
mov
push
lods
fildll
push
scas
or
movsl
lock
mov
sub
mov
icebp
adc
cmp
lret
jns
xchg
add
fucomp
bound
add
repnz
jmp
stos
mov
xor
mov
pop
xchg
or
repz
jae
add
ljmp
mov
popa
xchg
add
sbb
rorl
mov
push
push
sbb
cs
or
add
pop
push
mov
stos
push
hlt
dec
icebp
jge
or
and
inc
lahf
sarb
movsl
test
push
xchg
jge
mov
jno
orl
mov
sbb
lahf
test
pop
push
test
fadds
mov
sbb
sub
xchg
or
or
lret
jbe
xor
adc
sub
mov
mov
xor
leave
insb
pop
jo
std
xchg
hlt
pop
jbe
test
and
popl
xor
dec
mov
add
inc
ret
out
scas
pop
stc
sub
fbld
loope
jo
xlat
mov
push
push
sbb
loop
popf
xchg
inc
xor
es
mov
mov
mov
cmpsb
push
jno
mov
push
cmp
rol
jge
dec
xor
jp
js
jae
mov
and
in
repz
pop
push
or
add
mov
dec
ret
lock
inc
jecxz
ja
pop
sbbl
or
pop
stos
sbb
ficomps
insl
jle
stos
arpl
sub
push
rol
jmp
outsb
or
add
push
lea
test
xor
paddw
popf
jmp
sub
scas
jae
inc
or
cmp
cltd
jle
xor
aas
movsb
jne
xchg
fdivl
sub
fdivp
push
decb
pop
adc
or
insl
mov
loopne
xlat
or
inc
cld
push
sbb
mov
movb
pusha
cmp
repz
pop
mov
mov
inc
cmove
inc
nop
les
xor
cmc
data16
pop
out
scas
dec
lds
mov
imul
jle
loope
sbb
arpl
push
loop
mov
jbe
xchg
inc
xor
aam
xchg
xor
ret
pop
movsb
xlat
jmp
hlt
cmp
mov
dec
in
shll
ja
xchg
push
cltd
sub
lock
popa
aad
add
jno
popf
jae
outsb
mov
add
pusha
cmp
mov
cs
cmp
outsl
imul
inc
int
loope
pop
dec
ret
cmpsl
mov
scas
mov
lcall
jns
mov
push
xchg
jmp
es
lds
ficoml
popa
test
lea
mov
jmp
std
vcmppd
add
mov
daa
into
pop
pop
movsl
ja
iret
lds
shll
cwtl
mov
insb
imul
cmp
popf
sub
sbb
dec
mov
dec
pusha
movsl
std
sub
mov
addb
test
inc
pop
ljmp
sub
mov
popf
xchg
pop
aaa
pop
pop
cs
cmp
out
lods
sahf
mov
mov
ficomps
std
xchg
dec
mov
xchg
ss
stos
push
push
push
into
adc
push
cwtl
mov
cmc
and
lods
aad
lret
pop
hlt
add
jns
sbb
sbb
cli
pop
inc
mov
add
jg
or
mov
in
xor
movsl
mov
cli
jmp
in
sub
je
in
cli
in
repnz
imul
xchg
sub
and
cmp
pusha
imul
and
loopew
cmp
lret
lret
xor
xchg
adc
out
int3
fstps
mov
ja
scas
loopne
sbb
xchg
push
pushf
stc
sbb
push
mov
mov
out
jns
das
fldl
fwait
push
inc
jp
add
mov
in
imul
fs
imul
subl
cmp
fildl
push
sbb
test
movsl
or
xor
adc
sub
mov
ds
adc
out
aad
sbb
ret
fsts
mov
jmp
stc
jp
cmp
xor
in
and
fnstsw
add
arpl
imul
aaa
adc
push
lret
push
in
out
ja
lds
sbb
mov
sbb
xchg
sahf
xchg
cmp
xlat
sahf
mov
dec
mov
push
adc
push
mov
cltd
inc
or
cs
pop
mov
outsl
inc
test
cs
ficomps
pop
lock
xchg
fimuls
push
jo
push
and
mov
pusha
pop
cmp
push
mov
in
shll
test
pop
inc
xchg
sahf
or
xchg
dec
fmuls
test
icebp
nop
pop
adc
cmp
mov
and
jmp
ds
imul
in
mov
mov
adcl
dec
or
incb
loopne
push
outsb
pop
jge
mov
fdecstp
fdivs
fnstcw
push
inc
lock
insl
out
jbe
jo
mov
and
dec
dec
fnstcw
add
jle
or
jae
jno
push
xchg
xchg
mov
insl
and
mov
mov
mov
lea
jne
dec
jns
and
out
dec
sbb
lret
lcall
xchg
mov
divb
jp
ja
pusha
es
xchg
lea
push
ret
imul
insl
xchg
fldl
xor
aad
in
add
cmp
in
in
xchg
push
cmpsb
lahf
rcrb
bound
cli
sub
or
arpl
push
or
cltd
cwtl
xor
add
mov
push
insl
mov
add
jp
xor
add
mov
inc
dec
mov
ljmp
test
sub
nop
testl
loope
or
roll
in
jbe
fisubrs
fldcw
jo
xchg
mov
sbb
add
xchg
lods
ss
jne
jmp
mov
and
in
daa
xor
cmp
xchg
dec
out
mov
jne
pop
fiadds
and
call
popa
mull
test
jecxz
xor
lds
mov
test
fidivrl
sbb
call
sbb
rcrl
int
xchg
inc
push
aas
shr
push
xlat
lds
out
cmp
adc
fimull
cmpsl
gs
mov
sbb
xchg
stc
cmp
fnstenv
push
mov
sub
filds
test
ret
fisttpl
in
int3
push
imul
mov
mov
roll
outsb
dec
sbb
mov
add
cmc
adc
fs
xchg
inc
and
nop
xor
xchg
fidivl
sbb
push
es
stc
pop
out
pop
sbb
nop
pop
pop
jns
call
cltd
lea
push
jae
inc
push
test
data16
shll
sub
xchg
js
cltd
dec
adc
mov
andl
into
jp
inc
pop
out
jmp
bound
leave
sub
or
in
jmp
xor
add
nop
sbb
jmp
icebp
adc
lds
dec
xchg
xchg
xchg
mov
and
jle
push
outsl
mov
jns
cmc
mov
mov
pop
mov
xor
cmc
xchg
push
push
in
push
es
push
lcall
jo
lcall
push
push
loopne
aad
outsl
into
dec
outsl
sbb
movsl
imul
pusha
call
mov
xchg
jmp
jno
mov
or
mov
out
pop
add
mov
or
int
into
aaa
lock
lods
xchg
xchg
pop
xchg
cmc
test
gs
lret
sbb
mov
popf
pop
addl
push
mov
and
iret
pop
es
push
mov
fdivr
jge
aam
insl
xor
pop
decb
pop
adc
data16
inc
add
aad
adcb
loopne
je
test
dec
push
pop
jbe
mov
pop
mov
xor
inc
dec
orb
rolb
andb
enter
and
js
jle
xchg
imul
sbb
xchg
outsb
push
pop
mov
mov
push
aas
cwtl
push
jmp
pusha
pushf
jb
int
shll
outsb
jb
and
cltd
in
fwait
dec
incb
mov
push
icebp
xor
mov
and
shr
out
mov
fisttps
ja
movsb
or
loopne
outsb
js
int
xchg
daa
add
inc
xchg
jb
fstpt
repz
scas
lods
or
icebp
jge
scas
out
shll
or
cltd
lret
or
popf
lret
or
mov
cltd
testb
and
outsl
jge
cmp
lds
xor
jb
popa
cwtl
dec
loope
outsb
mov
gs
xchg
cmp
fnclex
push
arpl
sub
dec
pop
jl
movsb
bound
cwtl
add
cmpl
mov
push
gs
mov
lcall
jp
mov
xchg
xor
ss
dec
xor
enter
pop
push
adc
scas
xor
insl
sahf
push
mov
and
mov
push
arpl
xchg
mov
fidivs
sbb
imul
cmp
lcall
and
sbb
int
mov
int
xchg
cmp
push
lds
orb
aad
popa
cltd
lds
gs
repz
arpl
loopne
pop
in
insl
mov
jmp
fdivrs
jecxz
sub
cmpsb
mov
nop
inc
nop
pop
fstp
mov
ror
out
pop
and
jmp
enter
push
insb
cs
cld
sub
pop
jno
mov
jbe
inc
adc
add
lahf
xchg
sbb
scas
in
xor
jbe
stc
jo
scas
pop
ds
jge
pop
mov
and
inc
fisttps
push
cli
pop
stos
iret
mov
xchg
loope
dec
popa
push
jno
into
inc
mov
jle
lret
inc
xor
xchg
out
xor
ja
lret
into
cli
mov
movsb
xor
or
xchg
je
in
orl
mov
xor
loopne
cli
sarl
data16
mov
popa
lds
xchg
stos
loopne
stc
sbb
gs
jns
jge
mov
lea
je
mov
cmc
lret
movsb
jae
ficoms
push
popa
inc
insb
mov
cmc
and
xchg
pusha
xor
or
fdivs
scas
cmp
xchg
cmpsl
pushw
jo
xchg
sub
out
test
loope
lret
std
jo
xor
jne
rorb
popa
cwtl
mov
rcll
pusha
push
or
lea
mov
sbb
test
xor
ds
jecxz
sbb
jne
xchg
es
lea
mov
test
pushf
xchg
scas
mov
outsl
add
movsl
lods
popf
add
fwait
mov
xlat
push
leave
adc
xor
xlat
mov
xchg
dec
sarl
lea
std
dec
lret
popf
addl
xor
xchg
mov
sbb
mov
xchg
dec
int
lcall
sbbl
das
xchg
or
pop
shrl
push
xchg
movsl
xchg
das
jge
push
pop
movsl
and
insl
test
jge
push
test
xchg
mov
adc
sub
es
cs
cs
scas
mov
arpl
dec
aas
jne
sub
push
ljmp
push
cwtl
cmp
test
and
pop
lret
lock
xchg
cltd
add
jbe
cltd
mov
insl
pop
orl
aad
and
push
or
lret
pop
outsb
jno
shrb
mov
jge
xchg
dec
flds
sbb
outsb
mov
push
lea
pop
xchg
mov
xchg
mov
leave
insl
popf
xor
push
mov
mov
push
test
lods
jne
pop
and
mov
out
mov
and
mov
and
mov
arpl
and
mov
adc
pop
cltd
in
xorb
cltd
orb
ss
pop
cltd
in
xorb
cltd
dec
sbb
xorb
cltd
push
sbb
mov
sbb
mov
sbb
mov
dec
and
cltd
jno
addb
and
andb
cltd
daa
xchg
popl
pop
addb
pop
mov
addb
pop
mov
addb
pop
mov
subb
push
shll
mov
push
mov
pop
and
mov
cmc
shll
mov
push
lds
lea
jp
pop
imul
insl
push
inc
sub
out
mov
ljmp
int
or
shlb
aaa
dec
scas
andb
sahf
adc
in
jg
or
and
cwtl
jge
inc
repnz
push
xor
mov
test
std
mov
rorb
insl
aas
movl
cmp
cmp
sub
scas
iret
adc
ljmp
imulb
cltd
dec
add
xor
gs
add
fidivrs
in
jbe
push
negb
sub
jge
push
out
jbe
push
mov
pop
xchg
pushw
out
mov
mov
xchg
movsl
mov
xchg
pop
jbe
out
mov
and
in
fisubs
pop
cmc
push
mov
out
inc
xchg
imul
inc
add
dec
mov
dec
repnz
jnp
pop
jne
imul
xchg
jns
inc
dec
lods
pop
jae
jge
dec
aad
cli
imul
inc
inc
jo
mov
out
xchg
mov
rorl
fsts
loope
lds
push
popa
pop
xchg
test
push
jae
aad
pop
xchg
add
xchg
mov
in
test
add
imull
hlt
outsb
popf
in
call
ret
test
in
fidivs
pop
lcall
mov
mov
cmp
jo
pushf
pop
in
add
dec
call
mov
mov
test
sub
pop
and
andl
bound
andl
out
xor
fldcw
mov
rorl
ljmp
cmc
scas
subl
push
push
xor
dec
xchg
pop
mov
imul
imul
in
stos
xchg
test
aad
ret
add
mul
push
jge
in
xchg
test
pop
xchg
clc
inc
filds
fisttpl
jp
imul
cmp
add
dec
push
aas
dec
inc
imul
incl
clc
sub
iret
arpl
orl
outsl
pop
imul
mov
pop
jge
push
in
mov
negb
xlat
leave
inc
jo
mov
pusha
inc
das
iretw
pop
aad
pop
and
loop
mov
iret
stos
dec
cmc
pop
pop
jne
in
mov
cmpsb
out
jmp
fstps
cmpsb
jbe
dec
inc
push
xor
fwait
inc
xchg
mov
mov
mov
fstps
xchg
adc
mov
data16
inc
and
dec
add
dec
xchg
ret
imul
or
shr
std
xor
gs
popf
cmp
fildl
addl
negb
inc
lcall
and
xor
iret
cmp
jno
dec
xchg
pushf
addr16
imul
lds
cltd
jge
push
repnz
nop
out
shlb
andb
aas
repnz
addr16
dec
inc
out
mov
mov
cmp
dec
inc
leave
dec
mov
adc
scas
stc
gs
imul
int3
push
test
sub
xchg
or
sti
js
jmp
jno
movsb
in
std
inc
jg
xchg
int
dec
popa
mov
sub
dec
pusha
in
clc
add
insl
ret
pop
push
sbb
in
and
lds
sbb
sbb
fldcw
lea
lods
in
push
pop
jne
les
mov
je
push
pop
jno
adc
lea
inc
mov
int3
adc
lds
add
ret
mov
inc
cmp
cwtl
sbb
std
lcall
int
cmp
cmp
mov
shll
cmp
jg
lods
mov
xor
or
loopne
cmp
aam
add
jbe
int3
xchg
pusha
ss
outsb
push
xchg
lods
and
and
gs
pop
out
push
sbb
cli
mov
xchg
mov
adc
add
call
sub
pop
sahf
bound
cmp
insl
imul
test
adc
leave
or
jb
sub
adcb
in
out
into
je
push
rcrl
mov
pop
sahf
mov
xchg
pop
pop
cmp
imul
fdivr
pop
cmp
pop
xchg
inc
popa
or
imul
fsubrs
stos
xor
pop
add
filds
roll
pop
in
aas
push
outsb
or
dec
xor
popf
or
jo
dec
dec
inc
xchg
rorb
inc
mov
loop
rcll
pop
pop
sbb
jle
stos
mov
imulb
mov
xchg
sahf
flds
das
pop
jecxz
xor
add
icebp
nop
lea
mov
xchg
cmp
push
mov
mov
loopne,pn
dec
lret
leave
fcmovnbe
out
nop
inc
gs
rcll
fldcw
and
inc
lea
icebp
jns
sbb
fisttpl
lea
filds
icebp
aad
das
jbe
xor
popf
test
cmpsb
mov
enter
aaa
ja
push
rorl
icebp
and
sbb
dec
stos
xchg
cmp
sahf
push
negl
jmp
adc
jne
jno
sahf
jmp
xor
dec
xor
mov
cwtl
lret
mov
stos
inc
or
outsl
sahf
inc
arpl
ret
mov
or
mov
fdivrl
jle
dec
in
loope
test
ss
jle
mov
push
sub
stos
leave
aaa
jl
jae
leave
mov
lods
cs
add
push
fidivrs
cltd
mov
lock
movsl
pop
ljmp
int
sbb
mov
mov
rorb
outsb
dec
imul
aaa
arpl
stc
xchg
outsl
dec
sbb
sar
popf
in
lods
fsubl
push
negb
dec
ja
ret
mov
lock
push
mov
lods
pop
repnz
adcl
jnp
fcomps
or
cmpl
sahf
pop
popf
add
xor
xchg
inc
adc
int
inc
fld
movb
xor
mov
mov
ficoml
in
mov
inc
test
leave
jge
dec
cs
ja
pop
jo
outsb
push
xchg
inc
sbb
cmp
addr16
mov
pop
in
outsb
push
ficomps
mov
icebp
mov
pop
test
ret
fsubrs
andl
std
jp
jns
mov
jge
out
lds
insl
adc
jle
mov
fimuls
cmp
dec
jecxz
mov
or
bound
je
adc
pusha
in
or
mov
outsb
add
into
inc
inc
jecxz
mov
pop
push
xor
dec
ret
enter
ret
inc
fildll
dec
xor
pusha
xor
inc
fwait
jae
rorb
xchg
cs
xchg
arpl
dec
xor
inc
inc
fsubl
add
sbb
sbb
pop
jmp
xor
pop
pusha
add
dec
mov
jge
add
sbb
jle
inc
mov
dec
add
mov
test
or
rolb
jg
push
xchg
ret
mov
mov
test
orb
jb
cmpsb
push
inc
lahf
mov
xchg
aad
pop
in
filds
jo
lret
adc
and
mov
xchg
inc
int
and
fstps
ficomps
outsl
push
xor
or
cmp
xor
imul
imul
inc
scas
mov
popf
imul
addb
test
dec
outsb
mov
test
aad
data16
int
pop
or
inc
xchg
push
ret
test
call
vmovshdup
lds
mov
mov
mov
icebp
sbb
and
mov
push
and
mov
cltd
and
jg
cs
popf
mov
sbb
push
xchg
inc
nop
in
lods
imul
es
inc
inc
cltd
addr16
push
inc
inc
leave
jb
cmp
inc
jb
aaa
push
jb
aaa
push
jb
aaa
push
jb
aaa
push
jb
dec
jo
out
pop
stos
xor
pop
dec
and
push
sub
mov
addr16
pop
push
mov
inc
mov
std
imull
rcrl
std
and
shlb
insl
mov
fstp
outsb
into
xchg
or
mov
and
jae
xchg
cmp
popf
mov
insl
mov
inc
mov
aad
pop
push
inc
dec
mov
sub
jno
popf
leave
sub
or
outsb
das
cmp
lea
pop
add
in
add
mov
mov
data16
lea
push
sbb
dec
ss
pop
push
cld
inc
sbb
cltd
and
rorb
sahf
mov
nop
testb
sbb
inc
cmp
pop
pop
dec
sub
orb
lahf
pop
jl
pop
lret
add
jl
out
mov
mov
mov
or
mov
pop
push
jle
sbb
lds
or
cwtl
or
popa
xchg
cltd
adc
sbb
pop
inc
push
inc
insb
dec
inc
out
incl
mov
add
je
mov
dec
cli
sti
in
cmp
pop
in
sahf
bound
and
stc
cltd
or
stos
std
fldcw
sbb
inc
adc
jno
pop
mov
mov
push
test
test
pop
xchg
jne
inc
rorl
clc
xchg
lods
outsl
mov
sbb
dec
mov
xchg
mov
jmp
int
mov
mov
cltd
ret
push
xchg
pop
sub
in
jg
cmp
pop
shrl
test
cmp
xor
sbb
icebp
lea
mov
cwtl
mov
stos
into
jl
gs
fidivrs
pusha
popa
std
mov
adc
popa
adc
std
clc
roll
scas
call
je
mov
stos
xlat
push
jecxz
lea
pop
test
fs
gs
inc
pop
jo
pop
flds
mov
aad
jbe
and
jle
inc
daa
in
addr16
cmp
sarl
fucomi
push
popa
mov
cmpsb
xchg
idivl
adc
push
ja
sub
mov
lods
mov
and
test
cmp
adc
xchg
or
mov
cmp
cld
mov
xlat
into
mov
add
imul
ljmp
addr16
insl
dec
pop
inc
xor
dec
mov
and
out
pop
pop
mov
jge
outsl
sbb
cmc
and
pop
call
les
in
popf
pop
mov
and
xchg
mov
mov
xor
rolb
add
lods
in
in
ja
adc
pop
out
lcall
mov
outsb
jne
mov
mov
jge
insb
arpl
icebp
out
add
sti
xchg
jmp
out
sahf
jmp
je
arpl
repz
push
add
call
fists
push
lea
rcll
pop
jnp
sub
rolb
xor
mov
loope
mov
imul
les
lret
cltd
xchg
mov
xchg
xor
jge
jge
cmp
popa
mov
fiaddl
lret
push
add
cmp
push
push
jge
dec
adc
fwait
add
cmpsl
push
cld
jo
jmp
push
aad
jne
xlat
data16
into
out
les
cli
add
mov
push
mov
cmp
rolb
clc
jge
in
out
outsb
adc
daa
cmp
sub
xchg
xorl
jo
mov
xor
loope
idivb
mov
aad
sub
push
scas
icebp
rorl
xchg
adc
dec
data16
add
or
or
and
dec
ss
cld
aam
clc
icebp
pop
adc
test
jbe
cmpsl
push
test
movsb
dec
out
fwait
cmpsl
outsb
test
jno
adc
pop
mov
shll
pop
push
xchg
test
imul
inc
outsb
imul
test
fs
mov
imul
and
mov
add
push
jns
adcb
movups
cltd
adc
mov
fsubrl
popf
sbb
in
scas
std
xor
ja
rcl
adc
cmp
movsl
cmc
pop
xchg
addr16
incb
das
push
in
xor
imul
gs
cltd
in
pop
mov
imulb
mov
mov
ficompl
dec
sbb
push
inc
dec
leave
dec
adc
pop
adc
call
lret
xor
lea
arpl
shll
mov
dec
mov
iret
test
adc
adc
cmp
das
jo
test
gs
cld
cwtl
mov
je
fldcw
jns
pop
fisttpl
icebp
pop
and
inc
mov
inc
push
mov
fwait
mov
and
xchg
in
jo
cmp
pushf
dec
mov
cmpsl
xchg
inc
add
cmp
pop
inc
lret
outsb
pop
mov
pop
add
fistpl
cmp
popa
lds
xchg
and
push
push
gs
ficoms
lods
jns
cli
in
cmp
popf
repz
or
push
mov
in
jae
mov
pusha
negb
xor
jg
mov
rcrl
cltd
rcr
mov
dec
xchg
jl
pop
lea
movsl
aaa
pusha
lahf
movsl
push
pop
mov
test
outsb
mov
jmp
lcall
ja
jbe
loop
negb
add
mov
xor
pop
cmpsl
mov
cmp
lds
lods
jns
mov
sbb
loope
sbb
in
mov
fnstcw
mov
mov
sahf
sar
mov
hlt
mov
push
in
mov
push
dec
mov
xchg
mov
aam
mov
lock
dec
fisttpl
push
mov
inc
or
mov
xchg
in
scas
test
inc
arpl
push
lods
xor
lahf
mov
xchg
mov
jnp
aad
mov
push
sahf
cmp
jle
aas
mov
and
ds
cmc
out
into
pop
mov
sbb
fwait
xlat
std
gs
jl
mov
test
fnstsw
mov
mov
adc
add
adc
lahf
jl
inc
inc
add
pop
test
lods
pop
jno
jmp
xchg
sahf
cmc
adc
sub
movsl
and
movsl
push
ret
xchg
mov
cli
cld
push
sbb
into
dec
mov
xorl
adc
negb
pop
mov
mov
dec
adc
pushl
stos
shlb
in
and
jg
xor
insl
nop
gs
outsl
and
mov
and
cmpsl
ret
mov
xchg
xchg
neg
inc
jne
stos
test
sbb
mov
jb
lds
mov
mov
jbe
shll
dec
dec
mov
rorb
fdivl
inc
sub
les
stos
sbb
rolb
add
sbb
adc
and
push
dec
xchg
test
and
mov
popa
testb
lret
cmpsb
rolb
lea
push
sub
and
repnz
jne
mov
push
jne
loopne
add
mov
test
add
inc
adc
lds
rorl
xchg
cmp
iret
xor
push
sbb
data16
icebp
jbe
pop
aas
loop
push
adc
mov
nop
mov
xchg
int
push
in
lods
pop
push
insl
mov
lods
push
rclb
pop
dec
leave
cmp
sbb
lock
out
mov
mov
test
inc
push
mov
pop
sahf
push
dec
push
xchg
dec
ljmpw
movsb
into
inc
icebp
jge
loope
mov
and
dec
push
mov
dec
cwtl
int
push
pop
insl
push
das
int
mov
cld
stc
push
outsb
xchg
into
sahf
in
decb
ret
or
cld
gs
push
cmp
sub
das
test
cltd
out
test
imul
gs
sahf
nop
sub
inc
hlt
sbb
or
in
in
mov
icebp
lcall
xor
xor
bound
xchg
in
xchg
dec
push
ds
mov
pop
std
aad
jg
dec
in
addr16
outsl
jno
popf
sub
stos
jmp
mov
mov
and
fdivp
loopne
out
xchg
clc
mov
inc
mov
cmp
aad
jmp
push
nop
dec
cltd
loopne
out
outsb
inc
and
dec
xlat
mov
push
xchg
es
stc
or
incl
cltd
adc
repnz
jmp
scas
scas
cmpsb
test
in
inc
mov
push
rorl
sub
ficomps
popf
ds
xchg
or
jle
outsb
or
mov
arpl
cmp
jno
xor
lods
jne
jg
sub
mulb
mov
subl
aad
mov
aam
lock
mov
and
test
pop
in
pop
and
jbe
push
stos
div
insl
stos
out
push
inc
pop
sub
lds
mov
shll
lahf
jle
push
imul
push
jmp
into
cmp
aad
or
inc
insl
pop
jne
inc
out
jg
pop
test
fnstenv
xchg
jg
dec
push
movsb
inc
xor
pop
pop
imul
incl
xchg
js
in
fidivrl
test
jg
ljmp
sub
lds
popa
lds
mov
pop
inc
dec
cs
mov
mov
icebp
insl
cmpsb
and
xchg
sbb
shll
inc
inc
or
pop
imul
xchg
inc
mov
push
xchg
xchg
mov
or
nop
or
insb
adc
jno
inc
jg
or
push
cmp
adc
ds
adc
push
push
testl
pop
cmp
mov
dec
dec
push
or
jnp
rcl
loope
mov
fwait
jns
into
mov
mov
cs
jns
ja
aam
or
cmp
sbb
add
data16
fs
mov
dec
push
mov
pusha
or
cmc
cwtl
dec
pminsw
or
lea
xchg
xor
ret
pop
sbb
xchg
into
push
mov
jne
xor
dec
int
dec
popf
outsb
lea
mov
insl
gs
shr
inc
lea
fcomps
fidivl
aas
mov
push
das
and
lea
mov
lea
imul
xor
fisttpl
mov
movsb
icebp
test
fxch
lea
or
stc
imul
sub
pop
inc
cmp
das
sbb
lods
leave
pop
push
divb
or
mov
sarl
icebp
lahf
inc
mov
lods
aad
pusha
es
pop
mov
insl
or
push
jnp
mov
andb
add
mov
fldcw
mov
xchg
imul
pushaw
inc
gs
aas
sbb
adc
ja
or
stc
mov
out
add
dec
mov
push
jg
popf
popf
xchg
and
pop
push
mov
fs
pop
loope
ficomps
or
popa
jmp
in
jae
fstl
sub
inc
push
add
enter
push
pop
popa
in
push
cmpsb
icebp
test
inc
cmp
jo
iret
add
add
mov
mov
adc
fldenv
scas
mov
addb
in
or
push
lods
pop
movsl
jecxz
in
sub
inc
adcl
mov
ret
out
cltd
cmp
fs
dec
adc
jg
xchg
test
mov
test
xchg
push
cltd
lret
icebp
mov
xchg
std
push
sub
sub
xchg
outsb
adcl
lock
mov
outsb
jns
ret
xchg
add
idivb
shrl
cmp
add
test
dec
test
xchg
ds
jle
xlat
inc
add
inc
jo
test
and
cli
push
xchg
out
pop
mov
lods
jns
stos
lods
stc
pop
sbb
mov
lahf
popa
mov
mov
pop
or
call
add
jae
in
dec
jecxz
out
repnz
ss
std
in
cmp
push
mov
movsl
shll
push
sbb
jmp
loop
adc
sbb
movsb
cmp
in
xchg
sarl
lods
imul
iret
shlb
jge
lcall
lock
pop
push
push
mov
xor
call
push
add
int
std
adc
scas
decb
xor
out
mov
addr16
cli
je
movsl
and
aaa
lret
xor
xor
js
in
jp
outsb
xchg
push
mov
adc
ja
popa
lds
cmp
lea
mov
mov
imul
enter
imul
mov
fst
cltd
mov
gs
mov
inc
add
xchg
ds
dec
leave
lret
pop
lret
mov
dec
cmc
inc
stos
cmp
fildl
dec
ficoms
divb
sarb
xlat
inc
pop
adc
inc
in
outsl
cltd
xchg
pop
testb
pop
pop
pop
js
inc
xor
push
clc
and
or
jl
imul
in
mov
dec
out
mov
push
mov
pop
jns
dec
hlt
jge
pop
lods
push
cmp
or
jb
add
jmp
cmpsb
mov
cmp
jns
xlat
dec
pop
cmp
adc
iret
pop
mov
out
insl
cli
movsl
test
mov
in
dec
outsb
sbb
add
mov
out
shrb
add
push
rorl
hlt
rol
jmp
imul
xor
hlt
pop
or
push
loope
aad
or
push
dec
lea
fs
push
inc
popa
leave
loopne
xor
sbb
push
mov
aas
and
loope
inc
xor
jne
imul
jae
inc
sbb
inc
push
mov
popl
dec
jmp
fwait
cltd
aad
jne
mov
ja
fimuls
pop
sub
scas
int
flds
andb
sub
outsl
sbb
popf
movsb
sbb
stc
pusha
aad
flds
in
and
out
jecxz
shlb
fldcw
loope
adcb
or
fiadds
xor
aaa
rcll
push
or
push
jg
push
aad
sub
jno
hlt
outsb
jl
and
dec
cmp
sbb
xchg
imul
jle
xchg
jae
xor
stos
mov
mov
jno
xchg
vpandn
or
popf
je
stos
adc
xchg
and
mov
mov
insl
outsb
test
scas
jae
inc
call
dec
jp
lods
call
adc
aaa
sbb
push
shl
data16
aad
jecxz
xchg
hlt
dec
imul
aas
jp
stos
aaa
addr16
push
jne
adcb
xchg
xchg
fstl
aad
pop
insl
xorl
adc
xchg
jae
cltd
sbb
xchg
scas
outsb
mov
mov
jo
js
lret
outsb
cltd
xchg
test
pop
outsb
arpl
fidivs
out
out
pop
repnz
jae
xchg
in
in
arpl
popf
adc
sub
orb
and
jb
call
xor
dec
lahf
xchg
out
xchg
rcrb
js
mov
in
addr16
push
cmp
or
stos
mov
mulb
add
dec
mov
mov
cmc
shlb
fistps
push
push
dec
lret
push
rolb
or
mov
pop
pop
push
mov
movsbw
lea
mov
movzbw
mov
bswap
lea
jmp
add
add
jmp
cmc
call
push
pusha
sub
sub
pushf
test
pusha
stc
or
pushf
movb
mov
pushf
lea
je
pusha
jmp
jne
pop
mov
insb
adc
mov
out
mov
push
lock
or
out
xchg
xor
inc
cs
inc
mov
data16
mov
jg
inc
divb
push
mov
movsb
sbb
xchg
dec
ljmp
into
push
cld
cltd
cmp
mov
test
jge
in
ret
je
inc
loopne
filds
outsb
out
out
fldenv
movsl
inc
roll
sub
pushl
jmp
movb
lea
jae
pushf
lea
jmp
sub
push
pusha
lea
jne
pushf
pushf
lea
call
pushf
pusha
lea
jmp
ja
adc
shr
sub
not
sub
bsr
movzbw
add
or
bsf
sbb
rcr
mov
shr
inc
mov
push
jmp
dec
clc
clc
push
test
setno
push
bsf
shrd
push
bt
mov
sbb
cmp
xor
sub
push
shl
lea
push
movsbw
mov
btc
push
xchg
mov
shld
setge
pop
mov
jmp
and
mov
jg
repz
fs
cmp
inc
mov
jecxz
data16
shlb
mov
out
dec
test
in
orl
push
jae
test
fcoml
in
lods
insl
inc
in
inc
inc
fld
cmp
jl
nop
sub
rep
dec
loopne
mov
insb
cmp
lcall
mov
sbb
mov
cmp
shll
cltd
aaa
mov
xchg
xor
sub
inc
popf
pop
add
std
inc
out
fwait
insb
es
cs
out
imul
ficoms
dec
lds
xchg
js
jecxz
pop
push
stc
js
pop
cmc
mov
sbb
neg
shl
mov
cmp
jmp
bts
stc
mov
shl
btr
shl
btr
add
add
sar
shl
mov
movsbw
movsbw
sub
bsf
add
add
call
das
pop
ljmp
repz
xor
aaa
or
mov
out
push
inc
sbb
cmpsb
movsl
mov
jae
out
mov
imul
popl
mov
cmc
jmp
inc
inc
adc
mov
pop
bound
jle
xchg
dec
pop
clc
mov
jl
enter
mov
cmp
xchg
ret
mov
xchg
mov
call
jno
leave
xchg
sub
call
in
repz
in
jecxz
push
and
js
shlb
push
xlat
lock
jl
cmc
lds
leave
inc
lret
dec
rclb
dec
les
jnp
nop
mov
xor
and
jb
jmp
lea
jne
lahf
pusha
push
movb
pushf
movzbw
push
pop
mov
call
pusha
cmp
cmp
pushf
jmp
pushf
inc
sub
push
pushf
xchg
lea
shrd
shr
mov
pusha
rcl
dec
mov
lea
pushf
cmp
add
jae
push
pusha
rol
pop
add
mov
jmp
neg
bt
rol
jmp
mov
jmp
lea
je
test
stc
clc
add
clc
stc
stc
push
cmp
push
pusha
lea
jb
pushf
pusha
cmp
call
popf
lret
jl
xchg
jle
mov
or
in
jns
call
cmp
mov
ja
lods
dec
jmp
mov
or
and
pop
cli
xchg
adc
push
ja
int
shlb
mov
in
mov
loope
xlat
pop
mov
clc
mov
mov
sbb
pop
repz
sub
popa
xor
sarb
dec
repnz
mov
cli
cwtl
fs
jnp
insl
out
outsb
out
call
adc
sub
je
ret
inc
mov
popl
test
mov
pusha
sub
call
movw
mov
call
call
call
call
cmp
ljmp
gs
outsl
fs
gs
imul
add
add
sti
decl
rclb
and
fsubs
push
stc
xchg
sub
dec
ljmp
dec
or
orb
push
std
mov
jb
xor
jl
in
mov
jae
cltd
ret
mov
mov
test
sbb
imul
push
dec
sarb
pop
mov
subl
or
push
neg
or
mov
push
xchg
pop
or
push
cmc
scas
push
xorb
add
imul
pop
loope
fistl
push
ficompl
dec
jns
iret
and
sub
andl
push
notl
scas
push
out
mov
xchg
sub
popa
lcall
leave
add
jle
sub
cmp
ss
jle
js
scas
push
cmp
fiadds
xor
mov
stos
inc
sub
popf
sbb
jae
mov
lahf
mov
sar
mov
lret
callw
xor
sub
sti
sbb
lcall
cmp
xchg
repz
xor
daa
test
mov
pop
xchg
bound
sub
cmp
and
jne
rcrb
testb
mov
pushl
popl
push
pushl
movb
pushl
ret
lea
jae
call
xor
and
lea
push
xchg
adc
dec
repz
mov
xchg
loop
es
outsl
cmp
sbb
out
mov
lods
push
inc
or
scas
mov
imul
jb
push
sub
shrb
div
adc
adc
fmull
cwtl
xor
dec
jge
out
ljmp
repz
outsl
in
jae
outsb
lock
xor
mov
xchg
ud2
inc
test
xchg
push
jmp
mov
and
shll
adc
dec
inc
xchg
xchg
push
lods
daa
or
or
adc
shrb
scas
dec
adc
pop
inc
add
jp
jbe
jno
jp
ja
or
cmp
fists
outsb
cmp
add
in
xchg
test
sbb
out
sub
xchg
rcrl
imul
fucomip
mov
xor
test
xchg
rcrl
inc
filds
jmp
scas
push
cli
jle
mov
shll
inc
rclb
dec
mov
push
lret
jns
aam
sarl
jo
mov
into
scas
sbbb
dec
lock
pop
add
mov
aam
and
es
imul
fistps
pop
ficomps
push
fisttpll
lcall
xchg
into
leave
push
insb
push
call
bt
clc
call
stos
fsubrs
xchg
pop
stc
xchg
sub
pusha
cld
mov
mov
sbb
cmp
or
jmp
add
test
mov
in
and
shlb
aas
dec
inc
cmc
in
dec
lock
hlt
xchg
sbb
or
mov
lods
xchg
mov
xchg
movl
pushf
call
add
add
js
pushf
test
pushf
lea
jne
pusha
push
mov
jmp
mov
mov
pusha
lea
call
jmp
repnz
call
lea
jne
shrd
rcl
mov
pushf
push
or
call
pushf
jmp
fimull
aas
test
and
xchg
cs
push
lret
push
inc
xor
mov
daa
inc
pushf
cltd
aaa
mov
clc
xchg
xor
push
out
addr16
jne
sbb
dec
jp
loope
pop
inc
in
xchg
and
jmp
add
std
pop
fbstp
jne
push
sbb
out
jmp
into
mov
movsl
addr16
add
jno
dec
push
mov
divl
test
pusha
add
sahf
loop
jle
pop
xchg
mov
bound
push
test
mov
sbb
outsl
cmpsl
mov
mov
pushl
jmp
pusha
mov
lea
je
push
cmc
call
mov
lea
call
pushf
jmp
pusha
adc
movw
jmp
add
inc
js
je
jb
arpl
jae
lea
je
pushf
pushf
lea
jmp
movl
push
lea
jmp
mov
fs
xchg
arpl
stos
inc
call
sbb
lock
add
add
mov
imul
pop
stc
xchg
cmp
jae
lods
dec
call
sbbb
dec
sub
pop
dec
jecxz
pop
fisubs
lea
or
xchg
push
iret
inc
sti
lahf
jnp
mov
aad
out
rcll
shrb
cld
notl
xchg
xlat
mov
jmp
mov
xor
xor
nop
lods
pop
add
push
lock
xchg
xlat
jp
mov
lock
sbbb
add
xor
xchg
js
rorb
dec
in
mov
push
inc
pop
addr16
std
fstpl
jae
or
sti
cmpsb
lahf
pop
jns
push
mov
push
loop
jmp
inc
jg
cmc
cli
mov
pop
je
jbe
ror
mov
and
sub
lea
std
xchg
sub
dec
pop
and
cmp
aas
ret
inc
sarl
pop
jp
icebp
inc
loop
fidivs
pusha
lea
pushf
jmp
jp
lahf
stos
xchg
sub
jae
cmpsl
inc
fstpt
mov
clc
jbe
push
cli
sub
inc
xchg
les
and
imul
pop
mov
mov
mov
lods
and
and
divl
mov
sub
bound
dec
in
sbb
mov
or
push
inc
outsl
push
lahf
mov
sub
sbb
das
mov
mov
fstl
cli
lock
sub
and
daa
lret
fwait
or
push
sub
lock
sub
test
sbb
ja
gs
jle
hlt
xchg
mov
xchg
adc
into
push
mov
fwait
pop
add
lret
addr16
adc
cmpsb
mov
mov
in
and
shll
daa
mov
inc
cmc
mov
jge
mov
mov
mov
test
adc
sub
movsl
inc
leave
inc
inc
push
adc
pop
repz
xor
outsb
adc
mov
rolb
push
stos
int3
xchg
fidivrl
mov
sub
xor
inc
and
repz
sub
jno
shll
pop
or
pop
or
je
jnp
jmp
std
mov
lahf
in
imul
loopne
cmp
jae
inc
in
rcrl
sbb
mov
inc
inc
frstor
push
cmc
adc
ss
sbb
int
jbe
cld
negl
lock
std
std
adcb
ret
jl
or
mov
adc
pop
and
xor
into
scas
in
std
jge
pop
in
cwtl
dec
dec
fs
aam
push
leave
add
out
das
adc
test
testb
add
fs
out
arpl
xchg
push
out
mov
sbbb
mov
mov
adc
jmp
adc
inc
push
jmp
bt
cmp
call
inc
outsl
fsubrs
pop
add
lods
dec
out
xchg
xor
cld
lcall
mov
adc
mov
jl
loope
out
mov
dec
cmp
cld
es
rcrl
nop
push
push
inc
psrlq
xchg
jno
inc
pop
xlat
mov
dec
out
mov
mov
mov
push
les
mov
ss
scas
xor
std
xchg
mov
and
adcl
add
mov
add
add
mov
sti
decl
xchg
lcall
call
cmc
pusha
add
jmp
mov
insb
or
clc
ret
add
icebp
lret
inc
pop
rolb
mov
aad
or
icebp
sbb
xchg
mov
adc
adc
sub
les
loopne
in
fstpl
pop
roll
or
and
jmp
sub
and
mov
clc
ja
sub
test
and
inc
nopl
jg
mov
mov
rcrb
xor
sbb
lds
pushf
or
cmp
or
sar
test
in
mov
mov
shr
movsb
cmp
ret
push
mov
test
imul
imul
andb
ror
sbbl
and
pop
xchg
xorl
rclb
push
fcoms
push
into
cld
push
rcrl
ret
ficoml
jmp
test
scas
xchg
shrb
test
ljmp
nop
mov
popf
push
fdivrs
mov
cld
xchg
mov
lock
push
xchg
add
push
jle
jl
enter
out
in
jecxz
lea
jne
not
lea
cwtl
pusha
movb
lea
movsbw
mov
lea
lea
pusha
movl
movb
mov
movb
pushf
push
mov
pushl
ret
call
and
stos
inc
call
std
xchg
xor
insb
adc
cmp
cwtl
andb
mov
out
enter
sub
gs
xlat
shll
xor
cmc
loopne
mov
sti
js
insl
lock
in
jecxz
add
mov
mov
out
add
add
clc
test
mov
jmp
jmp
lea
jne
bt
cmp
cmp
dec
mov
jmp
fs
sbb
push
hlt
cwtl
sbb
repnz
in
mov
jecxz
pop
sti
mov
hlt
mov
cmp
jp
mov
mov
push
push
jae
es
cmc
scas
test
mov
xchg
cli
push
into
dec
into
xchg
outsl
xor
mov
aas
fdivl
adc
xchg
push
rcrb
fwait
jae
mov
out
fcmovu
aad
int
imul
out
cmp
and
popf
test
sub
push
adc
and
xchg
adc
and
loopne
mov
and
fidivl
mov
test
or
jge
xchg
pop
movsl
lcall
mov
aad
or
mov
mov
ss
add
sub
mov
inc
cmp
mov
in
insb
es
xchg
sbb
out
test
xor
pop
stos
dec
test
sarb
in
or
xchg
addr16
add
fucom
jl
sarl
mov
sbb
clc
daa
lahf
push
lods
fdivr
inc
inc
loope
xchg
insl
pop
sbb
das
inc
or
mov
xchg
ss
jmp
add
jp
sbb
ret
mov
into
xchg
pop
lock
sub
fnstenv
dec
jl
or
xor
call
cmpb
addb
add
add
jl
jb
gs
ja
sbb
adc
inc
clc
push
clc
clc
cmc
shl
jmp
lods
js
mov
and
das
aad
fbstp
out
aam
cmp
push
pop
or
xor
test
sub
insb
push
mov
cmp
mov
or
cltd
jno
rcrb
adc
fstl
sub
pop
add
inc
sbb
sbb
sbbl
xor
nop
xchg
mov
pop
xchg
xor
popa
push
repz
mov
jl
lret
or
push
enter
adc
or
or
push
xor
dec
sbb
mov
pop
push
call
pusha
movl
pushf
lea
jmp
ljmp
sbb
xor
lods
popw
xor
out
xchg
pop
das
push
jae
inc
fdivrl
filds
sub
mov
ret
sub
mov
imul
pop
arpl
mov
push
sbb
imul
and
jbe
subb
jmp
cmc
stc
rol
jmp
lea
je
stc
cmp
cmp
pushf
jmp
ja
add
int3
data16
dec
loopne
add
inc
xlat
add
clc
fwait
sbb
test
je
mov
repz
cld
pop
test
mov
fnstsw
sbb
rorl
pushf
push
icebp
fcmovne
push
daa
sarb
subb
cmp
or
and
jecxz
and
movsb
inc
xor
sub
xchg
sub
lds
popf
xchg
xor
outsl
adc
adc
and
inc
mov
cmp
and
dec
mov
les
pusha
add
call
push
movl
pushf
push
lea
jmp
jmp
jmp
test
pusha
push
lea
je
call
fwait
leave
jle
xchg
jl
mov
loop
and
push
icebp
xchg
or
fistps
push
in
out
pop
insb
xlat
add
jno
xor
imul
ret
mov
sub
xlat
sbb
cmp
xchg
mov
mov
mov
xor
nop
mov
sub
inc
and
fldl2t
inc
fdivrp
incl
add
add
shld
movzbw
push
shl
pushf
lea
btr
aad
shl
bsr
sub
not
movsbw
daa
push
sbb
xor
push
not
push
rcl
sub
mov
push
lea
jmp
jmp
call
pushl
popl
mov
pusha
movl
pushl
ret
add
bt
push
clc
movzwl
clc
mov
clc
jmp
mov
gs
and
rcrl
sub
bound
mov
adc
xchg
insl
dec
jmp
mov
not
push
pavgw
and
dec
hlt
je
cmp
inc
cmc
das
aam
daa
sarb
aas
lds
lahf
sbb
mov
push
not
inc
not
not
jg
mov
jmp
bts
push
shl
bsr
rol
clc
mov
jl
push
bt
movsbw
mov
inc
pushf
cmc
btc
mov
pusha
movsbw
jmp
das
aas
cwtl
rol
push
test
or
dec
mov
rol
lea
aas
btr
sub
stc
lahf
push
mov
bt
shl
push
shrd
bts
adc
dec
push
mov
bsr
rcl
rcr
push
push
ror
mov
clc
jmp
pushf
push
movl
mov
pushf
movl
pushf
mov
lea
jmp
pushf
movl
call
jmp
pusha
lea
pusha
movb
movl
mov
pushl
popl
pushf
pushf
pushl
ret
inc
jne
mov
and
xchg
cmp
insl
or
mov
push
sub
mov
daa
popf
adc
cwtl
das
jmp
montmul
cmpsb
inc
loopne
push
ficoms
mov
mov
dec
daa
loop
vrcpss
xchg
xor
push
rcrb
stmxcsr
movsb
inc
in
jp
push
push
cld
push
mov
jo
mov
inc
aad
outsl
or
cltd
aas
jecxz
cmp
push
cmp
clc
test
cmp
mov
push
rcll
rorb
push
xlat
add
dec
out
pushf
pushf
movl
pushf
pushl
lea
jmp
popf
lret
jl
xchg
mov
popa
cld
popf
cmp
pop
loop
ljmp
jno
pop
mov
mov
icebp
nop
push
int3
ret
cltd
pop
shll
int3
dec
or
mov
push
sub
cwtl
jns
mov
pop
scas
sti
mov
fldt
in
mov
push
je
xchg
push
daa
loope
imul
xchg
mov
addr16
inc
test
lret
lds
enter
nop
xchg
mov
jae
js
les
in
in
imul
ret
pop
pop
cmpsl
inc
cmpsl
inc
ficomps
push
aam
iret
push
rorb
ds
mov
or
je
outsl
mov
and
insb
and
push
pushf
lea
jmp
dec
or
or
jle
das
cmc
call
xchg
pop
js
gs
in
adc
cmovle
aas
adc
dec
xchg
ss
adc
iret
or
push
or
cmovle
repz
fldt
aad
sbb
mov
lcall
xchg
mov
or
jecxz
lods
fildl
ds
mov
das
jne
adc
or
xchg
rclb
scas
aas
adc
dec
xchg
jno
ret
das
movsl
stc
sbb
push
cmp
scas
or
aaa
xor
xchg
jmp
fwait
clc
xor
shlb
add
dec
add
aas
aaa
xchg
or
push
or
mov
and
adc
mov
stos
or
movsb
lahf
mov
add
dec
orl
cmp
pop
or
lret
in
dec
test
mov
jbe
in
mov
pop
iret
cmovle
xor
jmp
xchg
sub
xor
dec
xchg
fiadds
lret
or
sbb
sbb
iret
or
hlt
loopne
and
gs
adc
or
add
sub
cmp
addr16
or
jne
adc
dec
xchg
rclb
scas
sub
or
jg
dec
xchg
cld
sub
aas
adc
dec
xchg
mov
jle
fimuls
dec
jo
adc
dec
xchg
xchg
loop
gs
pop
or
or
aaa
fstpt
and
cmp
pop
or
mov
push
jg
dec
fwait
sub
jmp
movsl
jns
cmpsl
or
and
aad
movsl
dec
or
dec
xchg
sbb
pusha
ja
adc
inc
test
into
sub
jmp
fwait
xchg
icebp
shr
mov
dec
or
imul
xorps
xchg
adc
adc
jae
inc
mov
dec
jmp
or
mov
ror
aaa
setne
not
mov
neg
shl
shr
bsf
mov
call
pushf
movl
call
mov
insb
or
or
not
in
fistpl
or
jecxz
inc
mov
mov
negl
aas
mov
sbb
jp
pop
mov
mov
insl
pop
dec
rol
mov
dec
or
stos
sub
add
adc
dec
sbb
movsl
sbb
push
fnstsw
fst
outsl
adc
icebp
bts
push
cmp
lret
xchg
fstpt
shrl
push
loop
fisubs
stos
pusha
aas
fcompl
add
movb
lea
jne
shld
aas
sete
sbb
sub
add
test
mov
sub
inc
rcr
add
dec
rcl
pusha
cmp
mov
pusha
push
cmp
call
cmc
bt
bt
or
push
call
cmp
lea
push
pushl
ret
movl
mov
pushf
lea
jmp
jmp
call
push
test
mov
dec
in
sbb
ja
mov
add
inc
pop
jb
inc
push
scas
xor
out
movsb
test
mov
and
mov
test
push
or
popa
dec
dec
dec
call
in
mov
leave
dec
jecxz
xlat
xchg
xor
pop
cld
or
xchg
or
cmp
pop
jge
mov
daa
mov
sbb
rclb
cld
ja
fisttps
rcrb
xor
outsl
or
sub
sub
xor
lds
sbb
loopne
scas
xor
cmp
jmp
pop
fistpll
jmp
cmp
icebp
outsl
hlt
jp
movb
test
imul
add
roll
add
stc
push
pusha
call
pusha
jmp
call
imul
mov
and
mov
imul
mov
sbb
lahf
andb
push
mov
dec
icebp
jae
lods
stos
jecxz
cmp
scas
inc
mov
test
scas
roll
push
or
push
scas
push
leave
inc
sti
pushf
xchg
xchg
shlb
jo
jo
subl
test
cmpl
pop
daa
inc
xor
arpl
ja
ret
movsb
sbb
bound
fnsave
aad
push
mov
mov
sbb
mov
ficomps
adc
shlb
aam
in
imul
out
lock
imul
sahf
insb
jge
or
cmp
jb
xor
movl
mov
mov
push
movl
push
pushl
mov
mov
lea
jmp
rep
pop
mov
pushf
lea
jmp
movb
inc
pusha
inc
pushl
pushf
pushl
lea
jmp
dec
sbb
mov
cmpxchg
andl
pop
std
mov
lret
das
gs
jae
mov
inc
pop
push
subl
sbb
in
fsubs
stc
fwait
pop
inc
cwtl
xor
shlb
fistps
fs
loop
jecxz
out
ljmpw
mov
dec
cmc
rolb
test
mov
iret
dec
push
cmpsl
jb
adc
repnz
xor
mov
lret
test
mov
pop
xor
xchg
xor
aaa
pop
fldcw
pop
or
and
cmp
mov
sub
xchg
fidivrl
lods
jbe
cli
int
inc
mov
cld
lahf
data16
lahf
jae
mov
fmul
mov
cmc
mov
lock
cmc
jb
cltd
movsb
mov
dec
call
jnp
jb
out
loop
jbe
dec
movl
xchg
fdivrl
push
repz
bound
push
shlb
fbstp
shll
int
mov
stos
or
lds
fstpt
xchg
sti
mov
push
test
mov
pop
dec
mov
imul
xchg
les
jne
lahf
xlat
je
flds
jg
sub
cltd
lds
inc
mov
loop
movsb
sahf
inc
popf
inc
cmp
into
jno
mov
push
daa
mov
icebp
cmp
gs
fnstsw
dec
out
fbld
pop
loopne
loopne
rcll
add
jmp
pushf
sbb
xchg
mov
dec
out
sbb
inc
fnstenv
xchg
sbbl
jnp
fcoml
movsb
xor
ss
es
test
rcrl
xlat
mov
out
cmp
inc
cld
xchg
mov
jmp
in
in
xlat
pop
loopne
pop
xchg
xchg
mov
push
stc
jmp
xor
rolb
pop
clc
xchg
cmp
js
mov
or
mov
daa
mov
jmp
mov
sub
jnp
stos
inc
rorl
cmp
jb
pusha
mov
cmp
mov
inc
fucom
lds
insl
data16
test
sub
ljmp
jno
mov
ja
loopne
inc
jecxz
scas
push
xchg
loope
fcmovne
das
stos
or
lock
sub
xor
pop
nop
xor
dec
mov
movsb
ja
cwtl
or
daa
pop
add
xchg
inc
cmp
in
addr16
roll
xor
aad
lds
iret
and
lods
into
jno
out
cmp
or
xchg
sub
cmp
repz
pop
sub
dec
ret
and
jne
pop
stos
inc
adc
jp
cmpsl
les
popl
pop
repz
push
icebp
mov
mov
mov
xor
test
lret
outsl
popf
or
in
dec
mov
pop
mov
cmp
add
ja
jp
sub
cmp
aaa
test
lds
xchg
mov
pusha
movl
pushf
lea
jmp
sbb
rolb
scas
inc
in
mov
cmp
push
js
mov
dec
inc
jmp
sbb
pop
sub
aad
cli
lds
jno
cmc
mov
or
sarl
cmp
fwait
mov
dec
popf
hlt
push
roll
pop
repnz
aam
xor
xor
cwtl
adc
or
fnstcw
in
test
in
sbb
pop
xor
stos
adc
dec
jmp
repnz
dec
push
cld
cwtl
adc
je
imul
ss
and
loopne
aaa
je
movsl
mov
adc
jge
mov
out
lea
les
mov
in
xchg
mov
shll
jle
and
outsl
adc
dec
in
sbb
mov
repnz
jns
cli
xor
jle
xor
xchg
ljmp
adc
pop
addb
push
stc
clc
mov
sub
call
pushf
pushf
jmp
push
jmp
ljmp
or
mov
xor
push
icebp
mov
bound
into
push
sbb
pop
mov
mov
mov
fidivl
mov
pop
fcomps
dec
lds
xchg
ja
je
pop
xchg
cmp
aad
xchg
and
dec
out
daa
int3
insb
add
cmp
or
das
movsb
inc
ss
mov
inc
xor
mov
out
cmpsl
dec
xor
inc
aas
push
clc
outsl
addr16
sti
jmp
je
jecxz
add
outsb
in
mov
test
jbe
mov
fnstsw
xlat
jne
je
jo
js
jne
outsb
jmp
dec
jnp
mov
pop
lea
lea
mov
lea
bswap
bswap
movzbl
mov
jmp
push
xor
ret
xchg
mov
notl
test
enter
jbe
push
push
clc
xchg
adc
js
inc
fmul
push
mov
hlt
das
movsb
pop
out
aam
out
sbb
inc
inc
cmp
xchg
mov
icebp
xchg
mov
mov
pushf
jb
loop
and
aam
inc
testl
dec
mov
xchg
sbb
sbb
adc
jle
scas
imul
and
mov
jmp
xchg
insl
loope
dec
test
xor
mov
lret
insl
or
mov
test
repnz
roll
les
roll
cmp
and
xchg
arpl
test
lret
stos
inc
loopne
std
cmpb
das
add
mov
or
cmp
cmpsb
xchg
mov
scas
push
jmp
outsb
fs
incl
mov
cmp
loope
adc
inc
out
andb
into
xchg
dec
notl
xchg
mov
hlt
aas
scas
mov
lahf
cmp
jo
add
jne
mov
popf
inc
or
pop
clc
lds
or
or
sti
jl
ja
js
leave
inc
sub
mov
jne
insl
imul
test
fdivr
ljmp
mov
and
pushl
mov
jmp
call
sub
movb
rep
pusha
lea
mov
pushf
movb
mov
lea
jmp
outsl
and
sub
or
and
and
add
xchg
movsb
push
add
addr16
push
imul
clc
cmc
add
pushl
pushf
lea
jmp
pusha
lea
ja
stc
add
jmp
or
or
das
into
addr16
xchg
cmp
scas
sub
shrl
mov
cmp
icebp
mov
aam
adc
stos
jae
jmp
fldcw
sub
and
mov
notl
push
mov
cmp
clc
outsl
jmp
int3
cld
cmp
push
add
mov
testl
add
and
call
push
pushf
call
lea
jb
pusha
mov
call
call
jb
or
xchg
lock
shll
dec
lock
sarb
add
aam
xor
jecxz
scas
dec
les
repnz
dec
jmp
cs
pushf
je
mov
push
in
xor
jb
or
arpl
rcll
stos
jno
or
shrb
pop
frstor
call
push
orb
mov
jle
fs
jne
pushf
call
pushf
pusha
pushl
call
movl
pushl
push
jmp
fisttps
rclb
xor
jne
scas
push
in
xchg
aas
sub
insl
pop
and
xor
jnp
jl
lods
ja
test
lock
mov
movsb
inc
xor
mov
pop
sbb
mov
pop
add
lret
mov
xchg
jl
pop
and
ficoml
lods
jmp
mov
lds
mov
scas
clc
xchg
dec
jmp
js
jl
jbe
jb
sbb
pop
push
mov
js
dec
jbe
movb
mov
out
xchg
ss
mov
mov
enter
movsb
and
pushf
or
inc
loopne
sbb
mov
sub
cmp
das
pop
sbb
les
lret
inc
fistl
sub
repz
loope
int3
mov
push
inc
dec
jg
icebp
stos
inc
lcall
and
je
sub
aas
fisttpl
movb
fnstenv
lods
push
in
mov
mov
aam
add
cmc
jg
xor
sub
inc
lds
in
push
mov
stos
or
pop
add
push
imul
test
mov
stos
dec
inc
call
xchg
push
fwait
push
in
rolb
inc
test
sub
pusha
test
dec
in
imull
lds
stos
and
aam
pushf
pushl
fdivrl
mov
jg
mov
icebp
out
mov
in
int3
mov
loope
sbbl
pop
andl
mov
sbb
iret
mov
lds
inc
pop
fidivrs
mov
ret
popa
jbe
sub
lds
jnp
cld
loope
jae
pop
movsb
dec
ja
adc
push
inc
pop
cwtl
pop
pop
cld
cltd
cmc
xchg
lret
icebp
xchg
cmp
jnp
inc
jo
movsl
mov
sub
dec
mov
jb
jno
stos
sub
mov
sub
movsl
sbb
fs
jne
call
mov
and
mov
cmpb
add
push
aad
mov
jecxz
ret
mov
loopne
sbb
pop
cmc
loope
insl
push
push
arpl
fdivrp
jb
lea
jo
hlt
ficomps
sbb
lea
push
mov
fidivs
push
lock
sub
pop
mov
pop
xchg
jp
jne
movb
rclb
arpl
jge
mov
pop
add
sti
push
inc
jo
xchg
push
mov
test
fnstenv
jae
jl
je
jp
imul
xlat
lss
scas
stos
mov
lea
push
mov
lea
call
jo
pushf
movb
movw
lea
jae
clc
test
sub
pushf
pushf
pusha
pushf
lea
call
pusha
push
pushf
lea
jae
stc
push
test
push
xor
call
lea
je
dec
add
shl
cmc
sub
shl
shr
shrd
sbb
mov
btc
dec
adc
bsr
add
movsbw
add
btc
mov
stc
clc
shr
pusha
clc
mov
stc
cmp
pusha
lea
je
pusha
cmc
call
movl
mov
pushf
lea
jmp
clc
pusha
cmp
add
pusha
cmp
jmp
adc
lret
shll
cmp
insb
push
cmpb
je
inc
test
or
mov
push
jae
bound
and
data16
shrl
fstp
ja
sub
sbb
fcom
data16
cltd
adc
cmc
call
aam
testb
sub
push
das
pop
js
mov
sbb
adc
or
add
add
test
and
or
out
stc
bt
movzbl
inc
btr
sub
sbb
mov
pushf
bt
cmp
jmp
jmp
pushf
jmp
push
lea
call
pushf
pusha
movb
movb
adc
pushl
lea
jae
call
call
clc
add
lea
cmp
add
push
dec
movb
call
lea
lea
jbe
push
pusha
pushf
pushf
pushf
mov
push
push
movb
movb
pushl
ret
fmull
cmp
popa
push
mov
mov
cmpsb
jmp
push
lock
jp
decl
jp
mov
negl
cltd
insl
aas
adc
adc
and
jae
jl
stc
jp
js
cmp
xor
int
cmp
jns
nop
jo
out
int3
push
jbe
iret
std
das
adc
je
stc
fwait
std
popf
aas
ret
cmp
xor
push
mov
test
jl
ja
pushl
popl
pushf
movw
pushl
ret
mov
lea
call
call
pusha
movl
pushf
pusha
call
sub
and
stos
inc
in
push
les
dec
or
icebp
imul
fidivl
int3
xchg
lds
cmpsb
inc
fnstcw
jne
and
test
adc
stos
and
mov
movsb
add
dec
cmp
pusha
rcl
xchg
clc
xchg
icebp
xchg
mov
std
xchg
xor
inc
out
and
aam
fwait
jg
aaa
popf
sbb
adc
repnz
xchg
sbb
push
pushf
push
inc
dec
out
push
add
fwait
sbb
inc
and
and
in
movw
pushf
movw
lea
jmp
mov
ss
imul
mov
mov
and
stos
mov
loopne
std
push
pop
cmp
and
xchg
adc
aaa
sub
push
sarb
jo
inc
cmc
cli
xchg
rcrb
jbe
imul
ja
negb
mov
adc
mov
sbb
jl
push
add
add
add
add
add
push
add
or
add
lods
push
fsubs
and
inc
cmp
test
mov
push
lock
test
add
mov
jns
mov
negb
pop
mov
push
testl
rcrl
sti
sub
cs
addr16
xor
dec
leave
inc
mov
xor
cmp
movsb
divl
or
xchg
mov
loope
push
mov
pop
shrb
arpl
ds
push
pop
cmpsb
jecxz
cmp
shll
cmp
cs
in
inc
cmc
dec
pop
cmpsl
popa
add
and
adc
mov
nopl
into
xchg
cli
xchg
das
iret
push
cmpsl
ds
es
xchg
jne
push
std
out
xchg
movsb
fsubrp
push
pop
cltd
lock
aad
arpl
sub
hlt
sub
adc
cmc
aad
xor
test
cmpsl
and
sbb
into
mov
mov
lods
ja
mov
sar
sar
sub
bsr
pushf
shrd
sub
add
movsbw
shl
mov
push
clc
mov
cmp
stc
clc
repnz
jmp
stos
mov
mov
call
lods
test
movb
sub
clc
push
neg
lea
jae
pushf
dec
push
cmc
push
rol
pushf
cmc
sub
jmp
push
jmp
movl
pusha
pushf
movw
lea
jmp
jne
gs
xor
fs
insb
add
add
lods
loop
xchg
pusha
pusha
movb
movw
lea
jmp
or
je
xchg
ret
pop
stc
xchg
aaa
shll
pop
mov
ror
insl
lock
lcall
cld
pushf
inc
xlat
outsb
pop
xor
xor
or
add
testb
or
loope
out
cli
jb
cmp
pop
movb
jbe
scas
mov
outsb
adc
insl
out
in
xchg
jns
je
aam
cld
xchg
in
xchg
loop
les
xchg
or
aam
xlat
mov
push
divb
cli
fisubrs
jmp
test
lret
mov
cmp
mov
and
repnz
xchg
sub
cld
mov
call
and
mov
sub
je
push
in
mov
xor
cmp
add
iret
add
iret
jnp
loope
sti
mov
sbb
cmpsb
sub
cld
xchg
pusha
and
shrl
or
mov
repz
mov
mov
xor
dec
and
outsl
gs
sub
shlb
mov
or
sbb
add
addl
inc
data16
mov
mov
leave
xchg
mov
xchg
inc
loop
and
pusha
add
dec
in
xchg
mov
gs
nop
inc
xor
int
pop
sbb
mov
jo
add
shr
jmp
xlat
jl
dec
xchg
inc
inc
cmc
xchg
notl
call
imul
je
fwait
mov
in
aas
neg
lea
je
push
movl
movw
dec
pusha
jmp
push
mov
mov
movw
pushf
lea
call
push
adc
pusha
mov
call
mov
lea
jne
rcr
mov
stc
test
jl
clc
cmp
call
call
call
clc
cmpb
call
call
pusha
adc
mov
push
lea
jae
pushf
mov
lea
jne
je
push
pushl
push
stos
pushf
pusha
mov
lea
jmp
pushl
pushl
pusha
inc
cmc
test
neg
pushf
add
jmp
lea
outsb
or
dec
out
daa
lds
scas
inc
jecxz
cmp
out
ficoml
imul
push
pop
cmc
sub
loop
jbe
mov
jle
ja
jbe
jae
into
lea
je
add
js
add
bsf
mov
cmc
clc
add
jmp
xor
roll
mov
aad
or
into
cltd
test
mov
xchg
fisubl
xchg
imul
iret
jmp
idivb
pop
lcall
adc
fnstenv
pusha
add
aaa
mov
pusha
pushf
clc
test
pushf
push
pushf
lea
je
pusha
bt
add
clc
bt
cmp
mov
jmp
call
scas
jp
rolb
fistpll
mov
mov
mov
jnp
shrl
mov
jmp
cli
xchg
pop
xorl
pop
xchg
in
rcll
std
mov
jmp
jge
sub
lea
sub
cmpsb
jns
repnz
pop
lcall
xor
jo
nop
jo
add
leave
sub
lea
push
cmp
rcll
lods
sbb
or
clc
jne
js
fldl
xchg
or
decl
push
inc
push
dec
xor
inc
dec
dec
add
adc
shrd
rol
add
add
not
and
dec
mov
shr
mov
bt
call
loope
cmp
xchg
cs
imul
inc
in
and
or
adc
jb
cmp
adc
cmp
lret
into
mov
pop
xchg
adc
or
sarl
aas
adc
mov
and
jae
fxch
xor
xchg
inc
loope
xchg
popa
clc
es
loopne
pop
xchg
push
jmp
cmp
jb
mov
cmpsl
jo
adc
repz
das
lret
insb
dec
and
pop
jb
mov
mov
aaa
or
icebp
repnz
add
pop
add
mov
mov
ficomps
cli
xchg
dec
call
cmp
cli
js
ja
jo
iret
pop
fcompl
mov
or
and
insl
or
mov
lret
mov
jnp
dec
inc
xor
mov
and
enter
mov
jae
negl
xlat
add
cmc
les
enter
in
jae
jae
jne
ficoms
dec
adc
pop
sti
js
add
xchg
jmp
mov
clc
xchg
xor
jno
xchg
rep
jnp
xor
rolb
jp
inc
lock
pop
pop
sub
sahf
pop
xor
mov
adc
cmc
xor
clc
mov
std
jg
jge
jbe
je
insl
in
fdivrl
or
inc
and
pushf
mov
pushf
push
pushl
ret
jmp
movb
test
cmp
push
lea
jb
pushf
pusha
cmp
pusha
push
lea
jae
jmp
push
dec
sti
aam
and
mov
add
jns
sub
sti
insb
mov
leave
and
mov
je
stos
dec
in
nop
arpl
inc
push
leave
fs
loop
lcall
push
test
ja
jns
xor
out
mov
mull
inc
add
and
int3
xchg
sub
les
ljmp
xor
call
pop
loop
loop
dec
sub
daa
mov
pop
rclb
pop
rclb
dec
js
jo
int
lods
sub
cmpb
call
mov
bswap
bt
sub
mov
rcr
xchg
cmc
sar
setl
mov
test
sar
setb
mov
btc
add
movzbl
mov
bt
pushf
stc
or
movb
lea
je
pusha
clc
or
jmp
sbb
fs
and
mov
fdivl
scas
sbb
ficompl
xchg
jo
and
enter
repnz
push
iret
jmp
lret
stc
mov
pop
mov
and
xchg
les
add
enter
xchg
inc
jmp
cld
lcall
shlb
jbe
xchg
nop
xor
sarb
fildl
pop
outsb
mov
push
mov
enter
ss
jnp
subb
dec
shlb
push
mov
xchg
sbbb
repz
xor
scas
es
and
fdivs
nop
xchg
in
xlat
jl
jg
aad
movsb
inc
ret
inc
jg
push
popf
push
repnz
es
loopne
pop
or
imull
pop
lea
pop
lods
jnp
adc
adc
jo
push
js
rorl
inc
int
imul
lods
inc
loopne
mov
push
movsb
and
sub
dec
in
je
int
sbbb
sbb
mov
xchg
je
push
pusha
movl
jmp
sbb
mov
cmc
mov
xor
mov
clc
test
mov
pushf
push
stc
add
clc
mov
cmc
ror
jmp
lea
ja
call
xchg
sub
popf
sub
out
push
sub
lea
xchg
stc
mov
imul
jb
dec
push
xlat
push
mov
dec
jo
test
mov
std
mov
push
notl
mov
push
sbb
ds
pop
push
imul
mov
jg
and
test
push
testb
push
ja
cmpsl
mov
xor
mov
xor
mov
dec
dec
ja
mov
out
iret
mov
or
xchg
xchg
dec
stos
ret
inc
imul
repz
pop
sbb
ss
lret
xchg
into
decb
and
in
out
fiaddl
shrb
dec
pop
mov
pop
repz
mov
dec
adc
sbb
cmpsl
pop
pop
insb
scas
out
lret
xchg
lods
push
es
inc
jge
repz
call
addr16
fcoml
shl
sbb
push
andl
mov
dec
ss
ljmp
push
dec
dec
pop
ja
xchg
lahf
les
rolb
dec
pop
jnp
es
xor
rcll
and
sbb
xor
les
into
pop
push
pop
outsl
jg
orl
push
cli
xor
out
cmpsl
mov
int
dec
es
outsl
shl
rorl
xor
push
jne
stos
lret
mov
imul
xchg
scas
sar
push
add
xor
jecxz
outsl
fldl
imulb
pop
insl
repz
mov
xchg
and
add
add
mov
outsl
xchg
outsl
insl
movsl
jecxz
sti
push
push
scas
pusha
mov
push
fisubrs
adc
lret
cld
fsts
movsl
sbb
push
xchg
sarb
movsl
call
js
add
cmp
mov
aas
insl
pop
dec
inc
mov
xchg
inc
xor
jb
movsl
sarl
dec
fucom
mov
pop
mov
call
jecxz
mov
pop
movsl
xchg
mov
notb
mov
pop
xchg
mov
push
inc
outsl
cmp
iret
dec
pop
add
mov
cs
or
lret
enter
mov
nop
jecxz
xchg
sub
into
sub
fucomp
shll
loop
scas
pop
stos
cli
jno
dec
imul
push
inc
push
negb
xlat
mov
movsl
push
imul
inc
ja
push
es
xlat
push
push
xchg
aaa
movsl
jae
push
dec
adc
ljmp
insb
lret
sahf
xchg
push
movsl
ss
fidivrs
int
outsb
mov
aad
jo
imul
aam
movsl
scas
cli
mov
xorl
std
mov
mov
fstpt
sbb
shrl
adc
movsl
cwtl
pop
roll
or
add
add
xchg
sti
roll
repnz
jne
movsl
sti
mov
pop
movsl
insl
lret
outsb
repz
movsl
call
movsl
out
pop
outsl
punpcklwd
movsl
sti
adc
jnp
push
and
and
jbe
jle
jecxz
movsl
cmpl
xor
stos
aad
jle
jae
jnp
jno
cmc
std
movsl
movsl
outsl
cmpsb
add
lret
cli
pop
packuswb
shll
pop
enter
popf
pop
stos
mov
or
push
xchg
scas
xchg
jne
std
pop
and
cmpsl
sti
popf
mov
add
pop
adc
adc
pop
xchg
lahf
push
std
xchg
push
bnd
add
les
xchg
xchg
xor
sbbb
out
pop
xchg
out
jecxz
cmp
into
pushf
mov
push
add
sbb
mov
outsl
dec
adc
xor
movsl
jb
in
mov
out
push
fldl
aad
cli
push
aaa
add
outsl
icebp
add
xor
jbe
jb
enter
int
mov
cs
sarl
push
ss
jmp
dec
dec
std
stos
xchg
xchg
mov
cmp
stos
mov
sti
cmp
dec
jnp
xchg
dec
icebp
pop
lods
sbb
scas
jno
mov
pop
adc
xchg
daa
fldl
add
mov
pop
scas
jp
push
pop
cld
mov
movsl
jbe
icebp
add
or
add
movsl
iret
and
movsl
push
push
mov
xor
add
scas
stos
cwtl
mov
loop
out
ret
int
pop
lcall
add
xchg
xlat
loopnew
xchg
and
pop
jecxz
add
mov
pop
mov
push
jg
xchg
add
cwtl
pop
push
pop
jecxz
flds
xchg
pop
out
movsl
fnstsw
scas
push
arpl
push
mov
cld
mov
in
jb
dec
mov
std
in
pop
fucomip
setns
ljmp
int
adc
xchg
fcomps
push
iret
repz
pop
mov
jp
push
pop
outsl
pop
cmp
dec
inc
push
ret
in
mov
xor
add
pop
fwait
xchg
stos
lret
bound
mov
cli
int
sub
xor
fwait
mov
xchg
jnp
mov
cwtl
add
lahf
pop
mov
push
sbb
loope
pop
pop
push
lret
movsl
dec
adc
out
test
adc
mov
imul
sbb
loope
pop
in
mov
je
cli
bound
shrl
mov
mov
loope
pop
ja
popf
pop
push
xor
add
dec
mov
xchg
sub
outsl
ljmp
iret
aad
jg
pop
mulb
pop
aad
cmpsl
mov
mov
es
test
pop
nop
test
jmp
jle
in
push
sbb
movsl
fistps
adc
pop
shr
add
loop
jae
push
std
loopne
je
dec
add
test
pushf
in
pop
loopne
add
add
movsl
xlat
pop
cmp
pop
xor
pop
shll
cmp
sbb
imul
xchg
jno
hlt
jbe
pop
fisubrs
jae
ficoms
popf
pop
ficomps
xchg
push
push
das
and
jbe
pop
jb
push
xor
ljmp
adc
pop
dec
je
outsl
mov
ljmp
mov
es
xchg
pop
xchg
mov
xchg
mov
adc
add
into
mov
xchg
mov
out
jb
jo
std
mov
out
arpl
imul
ret
inc
jecxz
sbb
mov
das
and
push
ja
call
or
rcrb
lret
lea
rcrb
push
ja
xchg
movsl
std
pop
add
pop
imul
mov
fs
adcb
js
add
adc
cmpsl
pop
jbe
out
movsl
add
gs
jno
rcll
lahf
or
gs
pop
mov
xchg
loop
aad
cmpsl
mov
jbe
mov
jge
sti
xor
and
mov
std
loope
aaa
pop
xchg
movsl
mov
xchg
pop
movsl
push
mov
scas
stos
fistps
mov
xorl
mov
jbe
mov
add
adc
mov
xor
xorl
add
cmpsl
pop
push
xchg
test
pop
insl
idivb
adc
mov
pop
xchg
mov
mov
mov
xchg
repnz
in
lahf
pop
mov
jl
pop
push
imul
mov
mov
xchg
dec
cmc
cmp
roll
divb
adc
in
push
inc
gs
inc
daa
pop
mov
jae
loop
or
es
fsubl
xlat
inc
mov
repnz
pop
pop
dec
add
mov
lahf
std
pop
rcr
push
inc
xchg
pop
sbb
mov
jp
xchg
pop
xchg
loopne
cs
add
hlt
jnp
fsubl
call
pop
mov
icebp
movsl
sbb
pop
inc
repz
cmp
jmp
pop
cli
jno
sub
lahf
add
push
ljmp
aaa
mov
xchg
mov
cli
outsb
pop
pop
das
xorl
stos
mov
add
mov
add
inc
js
add
addr16
sete
xchg
mov
pop
jp
adc
add
es
cmpsb
push
inc
test
adc
adc
mov
xor
movsl
or
int
mov
movsl
jp
shrb
repz
outsl
mov
xchg
add
loopne
jbe
icebp
add
jecxz
std
pop
test
dec
mov
ja
or
adc
push
mov
push
mov
push
lahf
mov
lret
mov
jo
imul
xor
xchg
sub
sub
xor
lock
lock
jo
inc
jo
ds
pop
imul
sub
inc
ds
mov
and
imul
push
outsl
adc
inc
cmp
and
sub
les
in
mov
lahf
orl
outsl
sbb
mov
mov
push
ss
push
icebp
pop
arpl
mov
or
xchg
and
push
adc
mov
sub
ret
pop
scas
ret
mov
xor
push
inc
push
xorb
pop
mov
das
fists
dec
arpl
shrb
test
aaa
inc
dec
pop
jno
shrl
or
out
repnz
sbb
push
push
or
mov
add
ficoml
loop
sbb
lods
call
mov
loop
sbb
pop
out
cmp
fdiv
movsb
inc
scas
pop
inc
inc
and
dec
pop
adc
cmpsb
aad
leave
fs
pop
mov
cmc
pop
lods
ds
insl
push
fsubl
pop
popa
xchg
repnz
lea
rorl
popa
shlb
das
rclb
jns
push
jno
xchg
pop
cmp
sbb
mov
or
adc
sbb
push
flds
lds
cmp
dec
dec
icebp
mov
shrl
dec
xchg
and
jbe
cmp
pop
xchg
bound
movq
fnstsw
adc
into
bound
lahf
loopne
out
mov
or
loop
fdivr
std
fcmovne
add
imul
or
xchg
mov
mov
movsl
mov
adc
add
dec
filds
xor
iret
sbb
ljmp
cmpsb
mov
lcall
pop
popa
mov
in
push
aam
push
dec
pop
push
add
and
fstpl
pop
mov
scas
push
cltd
stos
out
xor
or
lods
jnp
add
dec
stc
push
pusha
sub
push
inc
sbb
pop
push
and
mov
aas
adc
pop
lock
ret
data16
popf
stc
out
pop
fprem1
jg
dec
xchg
in
dec
cmpsb
popf
add
sbbl
xchg
lock
daa
lods
cli
unpckhps
mov
lock
sub
mov
mov
dec
fimull
stc
jne
xchg
dec
push
xchg
pop
dec
ficompl
push
testb
jle
fnsave
jne
lock
aam
dec
outsl
pop
into
lea
add
imul
std
mov
icebp
stc
push
xchg
aas
pop
outsl
lahf
loopne
std
scas
push
nop
mov
mov
xchg
lock
mov
in
jg
popf
push
hlt
stos
sahf
mov
lret
ret
lock
mov
pusha
insl
pop
maskmovq
testl
sbb
adc
jo
shl
and
dec
pop
add
mov
stos
inc
sbb
pop
jno
jmp
jnp
and
in
cmc
cmp
test
lea
fiadds
sub
cmp
push
pop
lods
mov
and
inc
mov
int
rorl
inc
rcrb
sub
add
inc
cld
jge
mov
or
lods
sbb
mov
ret
enter
xchg
test
or
jns
dec
mov
test
into
lds
and
bound
popa
out
xchg
mov
into
jb
lods
xchg
or
stc
xor
dec
pop
lea
popa
mov
push
push
mulb
xchg
jae
xchg
imull
sub
mov
fistl
jo
test
add
lcall
cmp
or
xchg
rcrl
shlb
mov
dec
fs
inc
lcall
sub
lock
gs
mov
imul
addl
cmpsb
out
push
arpl
pop
test
mov
pop
mov
lock
pop
mov
cmpsb
xchg
imul
fdivrs
outsl
mov
xor
mov
mov
roll
xchg
int
out
sbb
pop
popa
mov
pop
outsb
jae
sbb
jge
lret
mov
xchg
out
and
sub
push
test
mov
insl
out
jge
add
movsl
jae
xorb
out
insl
imul
push
pop
and
pop
sarb
js
add
adc
addl
lahf
and
xchg
std
out
cmp
push
outsb
cltd
mov
insb
push
sub
fadds
andnps
into
xor
pop
imul
and
mov
jge
popf
pop
jb
das
xchg
shl
pop
ret
nop
or
lods
or
movsl
sti
sti
les
sbb
xchg
dec
mov
int
das
psllw
and
mov
ja
loope
arpl
rorb
push
std
out
outsb
push
in
fstpl
arpl
aad
scas
jno
std
hlt
dec
repz
xchg
mov
lahf
adc
xchg
nop
das
jno
push
aas
neg
xchg
pusha
mov
into
shlb
push
loop
bound
lods
mov
insl
jbe
pop
mov
mov
dec
hlt
fldl
mov
jmp
jo
ja
test
mov
in
nop
scas
imul
fstl
test
push
dec
loop
jbe
rorb
movb
push
pusha
dec
jle
cmpsl
nop
ljmp
mov
je
lods
and
pop
and
cli
arpl
jns
movsb
cvtdq2ps
hlt
scas
cltd
aad
and
add
xchg
mov
stos
ljmp
and
mov
mov
insb
rorl
sbb
in
rclb
push
sub
das
add
lock
push
lods
push
or
enter
mov
dec
popf
inc
mov
jb
cmpsb
out
pop
xorb
sub
fidivrl
cld
push
and
jmp
rcrb
ficomps
push
dec
push
jae
jne
dec
xchg
aam
push
sbb
outsl
mov
lret
arpl
mov
sbb
lods
adc
xor
push
inc
xchg
std
mov
push
inc
fsubr
jge
push
sbb
sub
mov
shlb
in
mov
xchg
xchg
je
pop
mov
ret
std
outsl
sahf
sbb
lds
loope
or
clc
pushf
cmc
addl
out
pop
dec
mov
hlt
xor
jnp
cmpsl
std
jb
fucom
pop
xchg
popf
mov
rorl
cmpsl
xchg
push
arpl
loop
lcall
adc
ljmp
mov
scas
sbb
std
std
xor
jbe
add
xchg
jo
add
pop
fisttps
push
incb
push
sub
movsl
fcom
mov
outsl
mov
lret
fisubs
jecxz
adc
adc
mov
push
add
das
into
fisubrs
cld
and
jecxz
shll
xchg
hlt
aaa
mov
pop
setne
ret
cltd
push
test
lcall
and
fstpt
push
leave
inc
jo
sub
jp
push
jnp
inc
sbb
in
pop
jge
push
bound
pop
or
pop
stos
mov
jmp
push
adc
subb
icebp
cwtl
pop
iret
push
popf
pop
push
aad
mov
dec
test
xchg
loope
push
cmp
mov
jae
xchg
cmp
push
mov
push
imul
mov
adc
xchg
lcall
cmpsb
sbb
xor
test
in
and
clc
nop
mov
add
sbb
daa
push
pop
jnp
jae
ficompl
and
push
push
pop
ss
push
into
push
dec
loope
mov
push
pop
adc
push
push
movsl
out
ficomps
cmpsb
out
fistpll
aad
push
mov
je
or
lods
jbe
adc
jmp
shrl
add
bound
sub
dec
mov
xor
dec
popf
negb
nop
xchg
mov
jae
inc
jnp
cld
sahf
jns
pop
and
push
inc
fnsave
insb
bound
cmc
stos
and
out
es
adc
repz
pop
adc
imul
aad
loopne
pop
cmpsb
sub
mov
add
cld
jno
outsl
fistpl
mov
loopne
xor
or
and
and
into
adc
aas
fsubrp
insl
xor
paddw
stc
sbbl
arpl
fnstenv
loop
mov
cmpsl
sub
cs
mov
push
aaa
or
cwtl
clc
xor
gs
add
insl
jae
int
dec
fstl
push
in
fisubrl
popf
pop
mov
lea
sub
pop
pop
ds
lea
cmp
mov
gs
bound
inc
popa
mov
mov
test
pop
push
inc
mov
addr16
mov
lock
mov
int
out
lock
jne
jmp
jns
lcall
fst
mov
outsl
dec
pop
dec
jecxz
cld
mov
inc
icebp
inc
mov
xor
xchg
push
add
cmpsb
into
lods
dec
call
and
mov
addr16
out
sahf
xchg
jno
inc
into
in
outsb
mov
sbb
xchg
mov
shlb
pop
pop
mov
rcll
pop
mov
adc
jnp
test
scas
popf
xor
hlt
outsl
add
imul
jge
xor
mov
xor
xorl
call
outsl
cmpb
int
shlb
adc
cld
popf
fwait
push
push
mov
int
psllw
lock
pop
std
jl
into
xlat
jge
mov
inc
lock
in
test
arpl
arpl
push
fcmovne
pop
pop
inc
cwtl
adcb
mov
sub
xchg
adc
into
cmp
out
xchg
and
insl
cmp
cmp
mov
pop
test
and
sbb
das
nop
cwtl
inc
jno
dec
push
inc
mov
cmc
lods
cmp
je
int
jae
cld
imul
pavgw
push
jno
pop
inc
lock
daa
adc
psrad
test
add
es
ja
insl
lods
scas
cmp
push
sbb
hlt
xor
dec
int3
push
xor
in
inc
popf
aam
cmp
xchg
leave
push
pop
or
jnp
jge
int3
popa
sub
jbe
jae
or
pushf
leave
arpl
pop
cmp
ficoms
gs
jbe
ja
adc
mov
fidivl
insl
dec
jnp
mov
push
mov
or
rcrl
popf
sbb
popa
adc
mov
push
add
mov
push
and
jle
xchg
adc
lock
mov
mov
adc
fdivp
xor
out
lea
mov
mov
mov
ss
lahf
cmp
mov
rorb
push
push
movsl
pop
mov
push
js
insl
push
xor
cmc
jg
test
sub
jl
ss
jp
arpl
sbb
jmp
lods
outsl
cld
js
inc
inc
sub
or
jno
jne
out
lock
pop
sbb
fisttpl
lock
jne
ss
xchg
mov
scas
add
aam
jno,pt
pop
nop
aas
sbb
loope
mov
fs
pop
cmp
imul
or
push
jae
sbb
imul
out
push
js
mov
lock
jmp
push
jae
cmp
pop
or
jnp
add
lcall
out
cmp
xor
push
pop
push
test
xor
pop
addb
cwtl
loop
mov
insl
insl
stc
cmpl
cltd
out
cs
in
sbb
stos
xchg
push
add
jp
jl
in
dec
cmp
xchg
cs
or
sub
pop
ret
pop
push
jne
push
pusha
push
shlb
hlt
test
jge
outsl
pop
std
addr16
mov
into
cltd
mov
xchg
pop
jge
sbb
xchg
int
int
pop
xor
jne
out
movsl
jnp
rcll
jo
aam
mov
mov
cld
popa
xor
test
popa
push
fisttpll
icebp
insl
stc
mov
popf
jle
push
xor
mov
pop
adc
lods
dec
fucom
dec
push
xchg
jne
gs
mov
cmp
sub
mov
push
mov
mov
loopne
jmp
pushf
xor
push
jo
xor
sbb
stos
aaa
mov
mov
ljmp
roll
lock
ja
movsl
cld
xor
pop
and
jb
jge
lock
inc
pop
dec
es
in
loopne
dec
dec
pop
pop
push
jae
test
rorb
mov
lret
dec
mov
das
pop
mov
push
sub
jae
mov
xor
pop
jl
push
jno
popa
fldenv
push
sub
jge
push
sub
fwait
sbb
mov
dec
mov
leave
jge
adc
mov
pop
arpl
popa
dec
mov
mov
jne
inc
adc
shlb
jnp
sbb
sbb
je
shl
repz
cmp
popa
ja
mov
pop
cwtl
pop
jnp
cmc
jge
cmp
xchg
adcb
push
xor
or
lds
adc
outsl
gs
mov
jge
scas
int
push
in
and
lret
aad
pop
push
daa
pusha
sti
mov
lea
push
in
xchg
cld
hlt
in
pop
xchg
mov
popa
popa
lock
das
les
adc
mov
inc
push
dec
and
push
pop
lea
push
call
test
inc
lret
dec
jg
repnz
outsb
out
lcall
sbb
adc
inc
iret
lods
inc
push
cmp
jg
scas
xor
lock
inc
data16
popf
cmp
repnz
sahf
in
ja
mov
das
push
inc
and
popf
clc
movsb
xor
xorb
mov
push
lret
and
mov
jge
mov
and
jecxz
xor
xorb
adc
sahf
nop
pop
in
pop
cmp
lods
std
mov
hlt
cmp
loope
pop
popf
cmp
push
imulb
xchg
and
pop
pop
jno
pushf
xor
sbb
sub
mov
fs
push
cmp
push
rclb
dec
filds
mov
inc
loopne
aam
mov
push
les
jne
pop
cltd
and
xchg
sbb
in
sbb
pop
in
sbb
lcall
cli
dec
adc
roll
sub
in
shl
push
xchg
jbe
test
mov
jne
gs
and
pop
adc
je
push
inc
cmc
test
mov
push
orb
xor
mov
mov
mov
in
push
jg
int
push
shlb
push
mov
popf
dec
and
inc
jge
out
mov
std
adc
insl
jge
pop
pop
sub
inc
sbb
mov
push
shl
pop
pop
aad
scas
je
insl
mov
push
adc
test
inc
xchg
in
rol
mov
lods
scas
jno
adc
lds
cmp
sahf
pop
jns
ja
pop
cmp
jp
xchg
test
lods
sar
out
rsqrtps
xchg
movsl
sbb
push
fstpt
xchg
jb
pop
dec
xlat
mov
sub
mov
in
cmpsb
fildl
jo
and
adc
loope
push
and
jle
add
or
repz
iret
fwait
int
inc
mov
inc
std
dec
pop
mov
rolb
mov
ret
mov
inc
andb
imul
jecxz
pusha
add
sahf
lcall
addl
jle
lock
and
jb
xchg
loopne
insb
adc
addr16
data16
loopne
and
stc
xorl
inc
xchg
jb
push
pop
jp
outsl
std
test
pop
mov
stos
sub
sarl
jmp
dec
rorb
jno
hlt
pop
mov
jecxz
push
sbb
test
dec
push
pop
xor
push
adc
outsb
into
add
xchg
sub
push
pop
sub
mov
dec
test
jo
push
fnstenv
in
fs
das
push
rorb
mov
in
jne
push
xchg
jge
add
into
es
jae
add
stos
test
aas
xchg
cmp
add
dec
popf
push
imul
cmp
sub
fistpl
negb
mov
and
mov
cmpsb
shrb
mov
dec
popa
divb
in
cwtl
xor
test
pop
push
int
pop
push
push
xor
ficoml
ds
testb
bound
stos
jnp
push
xor
clc
arpl
inc
mov
pop
in
leave
inc
mov
lds
loopne
insl
incl
push
sbb
dec
push
jle
pop
cmp
add
push
or
out
cltd
ficompl
cmp
and
inc
cmpsl
jnp
jbe
fst
test
dec
push
aad
dec
mov
xor
mov
mov
and
lret
dec
pop
push
and
pop
cld
jne
push
dec
cmpsb
push
push
jae
inc
movsl
sarl
pop
push
push
pop
push
bound
outsb
jb
daa
push
adc
rcll
push
es
adc
push
into
jge
dec
stos
adc
jb
mov
sarl
lods
shlb
jcxz
int
sbb
rcl
xor
arpl
lcall
out
and
xor
popa
cld
push
dec
inc
push
aas
cmp
cmp
push
cmp
leave
push
jno
inc
xor
loope
loope
push
gs
sbb
int
xchg
cmp
jns
jno
push
mov
inc
push
idivl
mov
xor
jmp
dec
mov
int
jnp
inc
push
int
lcall
ja
xor
push
int
push
cmpsb
sbb
push
lods
or
jne
aad
jmp
xor
xchg
mov
sub
mov
jge
adcb
pop
sub
hlt
xor
xlat
leave
outsl
push
xchg
scas
xchg
jnp
rorb
jo
stc
xchg
int
inc
call
mov
adc
mov
cld
cmp
sahf
push
mov
bound
test
in
sub
scas
int3
push
test
data16
int
jle
and
push
loop
fisttpll
dec
bound
inc
sub
jmp
stc
in
pop
xchg
push
addb
lea
sti
push
je
std
xor
js
dec
fstpl
mov
out
pop
negb
out
das
iret
iret
lock
xchg
scas
scas
dec
call
pop
mov
arpl
and
or
pushf
mov
sbb
popa
out
push
pop
fwait
out
push
shlb
mov
insl
push
push
shl
imul
int
pop
imul
lock
sarl
sbb
jbe
inc
adc
xor
lods
jns
outsb
pop
xchg
lods
mov
sub
dec
popa
dec
cmpsb
jmp
jg
jge
add
jne
gs
je
not
stc
xor
add
imul
inc
loopne
mov
push
or
add
cmp
out
mov
xchg
repz
or
iret
jge
pop
and
outsb
repz
xchg
push
andl
pop
or
pop
ficompl
lcall
sbb
lahf
or
sti
aad
out
jg
dec
xor
pop
mov
mov
sub
push
call
fstps
mov
and
jns
jb
iret
cld
and
xchg
lock
outsl
leave
and
aad
shl
fimuls
mov
cmp
gs
lret
cmp
movsl
push
ljmp
shll
pop
mov
jae
sub
lcall
inc
or
xor
lcall
xchg
aad
sub
shl
add
jns
xor
cltd
xchg
repnz
pop
xor
hlt
adc
xchg
sbb
test
out
cmpsb
mov
push
sbb
and
stos
loopne
lock
push
mov
repz
cmpl
outsb
jge
mov
mov
xchg
insl
shl
leave
fdivrp
jno
out
mov
repz
mov
js
cld
pop
dec
xchg
subb
lret
adc
popf
ret
pop
loope
jb
or
xchg
dec
pop
popf
sbb
and
dec
dec
sbb
xchg
mov
and
popf
push
fstl
or
cmpsb
lods
xor
cltd
and
mov
xor
cld
je
or
xor
sbb
shlb
mov
lock
jbe
js
pop
jns
jnp
push
in
sub
lods
test
push
std
jge
dec
repnz
aam
scas
mov
xchg
out
fwait
xchg
mov
cmpsl
in
pop
pop
outsb
jecxz
pop
lret
addr16
loopne
insl
repz
pop
ret
cltd
xor
cltd
jge
jl
lock
sub
mov
aas
xchg
jbe
adc
xchg
lods
mov
out
lcall
cmpsl
pop
stos
push
and
pushf
loope
movsl
or
ret
mov
push
pop
cld
dec
addr16
cmp
sbb
iret
sbb
add
mov
adc
and
push
int
pop
insl
lock
sbb
cs
pmaxub
mov
or
push
call
fbstp
stos
nop
jae
jne
add
sbb
mov
lea
lock
stos
mov
ret
push
insb
jae
das
pop
mov
pop
jle
arpl
icebp
dec
adc
in
lock
nop
mov
clc
movsl
jbe
test
or
or
je
xchg
push
loop
hlt
jbe
add
push
fwait
cmp
pop
mov
mov
cmp
inc
xchg
push
ret
xchg
xchg
xchg
aas
test
dec
mov
fcomp
cmpsl
jno
in
push
iret
mov
inc
push
ds
sub
mov
lock
lea
into
cmp
mov
sub
jge
dec
cmp
xchg
arpl
pop
push
cmp
lcall
imul
add
jge
jae
pop
cld
imul
inc
push
mov
in
push
push
push
xchg
popl
repnz
jecxz
push
jmp
mov
sti
insl
add
jno
out
mov
push
pop
sub
cmp
xchg
adc
rclb
lock
icebp
pop
pop
sahf
scas
cmp
sbb
dec
push
cmp
add
arpl
stos
pop
test
gs
lods
gs
das
repnz
xchg
popa
pop
push
jle
outsb
pop
add
sub
push
cmp
adc
push
shrl
das
xchg
sub
or
xor
aas
fisttpll
pop
jns,pn
xchg
outsl
push
fisttpll
pusha
jmp
mov
and
gs
in
repnz
cld
cltd
hlt
shll
cmp
out
je
shrl
popf
dec
in
rcl
sub
aas
lcall
pop
dec
jo
std
mov
push
gs
mov
ja
push
sbb
sbb
testl
cmovns
bound
fs
fcoms
out
int
inc
push
stos
mov
sbb
inc
mov
or
das
outsb
gs
adcb
addr16
jo
jbe
nop
aas
sub
and
mov
outsl
mov
sub
js
fisttpll
popf
dec
inc
setb
ljmp
pop
into
push
xor
and
jne
xchg
jae
push
or
adcl
ljmp
push
pop
popa
xor
outsl
and
push
jnp
inc
aad
xchg
sbb
popa
lds
jmp
mov
ljmp
push
pop
ret
cltd
jae
xlat
jg
push
sarb
pop
aas
outsl
aad
or
pop
cwtl
pop
leave
testl
outsb
mov
jns
ja
std
int
cmp
test
gs
inc
lcall
pop
fwait
or
fstpl
adc
imulb
imul
arpl
mov
mov
loopne
pop
pop
xorl
lret
pop
push
cltd
fadds
adc
gs
hlt
or
jbe
jne
mov
outsb
dec
sbb
stos
dec
iret
or
jge
pop
outsl
dec
mov
adc
xchg
push
mov
mov
ds
pop
lods
dec
jle
cmc
loope
xor
dec
inc
cmp
mov
xor
mov
cltd
hlt
fsubrp
loope
jg
cli
in
push
jne
pop
js
pop
insl
nop
mov
hlt
cld
iret
sub
push
lock
push
cwtl
stos
shl
xchg
lock
addr16
cmpsb
mov
jae
cmp
sbb
mov
imul
and
insl
nop
lcall
cmp
and
popa
rolb
hlt
xor
inc
stc
add
int
sarl
dec
cmp
cmp
sbb
dec
pop
pusha
dec
imul
fsubp
loope
mov
jle
loope
movsb
insl
dec
repnz
or
and
dec
and
scas
add
leave
lahf
bound
das
mov
pop
fwait
in
lock
xorb
push
push
aad
sbbl
in
and
cmp
pop
fildll
mov
jns
fists
vdivpd
in
imul
mov
and
aad
sbb
push
lea
scas
jno
popa
pop
jle
popa
push
dec
pop
int
call
repnz
xor
clc
mov
loopne
lock
cmc
jo
outsb
loope
fcos
jp
mov
jecxz
mov
stc
into
push
jae
leave
pop
and
mov
pop
xor
xor
aad
jb
push
icebp
aad
xchg
dec
add
adc
rclb
cltd
roll
jecxz
push
mov
mov
dec
jb
add
es
xor
push
lods
jmp
cmp
pusha
push
or
mov
xchg
lock
jmp
rclb
cli
rorb
insb
jge
cltd
ja
outsl
sti
icebp
fprem1
rcl
xor
cmpsl
jge
and
ljmp
jb
sbb
mov
lock
jno
mov
test
fs
adc
ljmp
jp
dec
xchg
hlt
dec
xchg
fmul
push
sarl
rcr
dec
loop
jecxz
aas
lods
ljmp
repnz
adc
imul
jno
iret
cmp
dec
sub
push
rolb
popf
mov
lock
or
mov
scas
jae
jge
insl
adc
jb
repz
mov
hlt
out
cli
ja
ficompl
jbe
xchg
jnp
push
cltd
fisubs
repz
into
xor
shr
loop
mov
jge
inc
mov
inc
add
inc
dec
jnp
xchg
push
mov
jno
ja
sub
or
mov
dec
aad
dec
gs
pop
jg
fstpl
sub
outsl
or
std
xchg
jg
sbb
ficoms
std
loope
cmpl
mov
outsb
lock
xchg
mov
adc
in
push
int
and
lods
xchg
out
push
sbb
xor
icebp
dec
inc
sti
int
jle
fs
loope
jo
mov
xchg
stos
lahf
pop
in
sbb
push
lcall
sub
xor
sbb
inc
mov
push
mov
xchg
sub
pop
mov
stos
lea
xchg
repnz
mov
mov
nop
movsb
adc
hlt
bound
and
arpl
sub
lods
fwait
mov
movsl
aam
rcrl
cld
pop
inc
jmp
pop
mov
sbb
jno
dec
test
sbb
cwtl
xor
xor
jo
and
mov
inc
jge
mov
mov
xchg
push
test
mov
pop
and
shll
std
mov
or
gs
leave
push
add
or
inc
push
fdivrl
aad
or
scas
iret
jnp
add
mov
xchg
xchg
test
sbb
stc
push
inc
inc
and
shlb
mov
or
aas
mov
or
jb
adc
repz
stc
mov
into
movsb
cld
in
xor
aas
push
cld
imul
std
xchg
and
repnz
dec
rcll
push
scas
mov
out
push
pop
adc
jno
sti
pop
add
lods
out
inc
fiaddl
push
clc
xchg
adc
jnp
daa
push
loop
outsb
gs
fildll
jge
test
mov
pop
test
roll
fstpl
movsb
icebp
sarl
cmovno
mov
jge
and
in
icebp
lock
jo
push
movsl
push
out
movsb
inc
loope
mov
out
jno
divb
fisubrs
lock
lahf
out
and
xor
xchg
outsl
push
andb
adc
mov
jmp
mov
in
in
stc
mov
js
mov
xor
call
fsts
aas
addr16
cltd
cwtl
dec
jno
lret
pop
jecxz
popf
mov
mov
outsl
sub
and
mov
nop
hlt
aam
adc
stos
sbb
ret
xor
pop
adc
sub
sub
outsb
movsb
scas
mov
negb
xchg
mov
mov
mov
scas
icebp
sbb
testb
push
mov
leave
add
dec
add
add
fcmovne
jae
push
mov
mov
or
pusha
ss
dec
test
jae
adc
frstor
cmp
push
in
leave
sub
aam
adcl
inc
pop
in
pop
jge
mov
jne
push
jnp
bound
push
sub
stos
cmp
add
ds
jnp
xchg
push
lock
cmpsb
push
adc
cmpl
mov
push
decb
xchg
rol
fisttpll
fwait
jle
sub
xchg
pop
test
pop
push
cwtl
dec
pop
xor
dec
ds
cld
sarb
lea
loop
shlb
or
add
cmp
xor
mov
movsl
insl
cltd
mov
outsl
outsl
cmp
push
leave
push
es
sbb
adc
xchg
test
cmp
push
lock
or
je
pop
insl
push
outsb
pop
test
add
jnp
push
mov
lret
imul
adc
push
push
int
xchg
imulb
scas
jno
popf
mov
pop
xor
sbb
push
pop
push
push
dec
stos
cmpsl
mov
loope
mov
and
data16
lret
xlat
jg
insl
jmp
xchg
mov
push
sub
insb
gs
cmc
int
cmp
mov
jg
mov
movd
lret
sbb
lds
mov
jnp
in
cmpsb
stos
inc
inc
loop
push
jae
subl
jbe
mov
mov
rcr
mov
push
fmuls
cmc
mov
fists
push
fmull
push
jae
inc
jae
mov
repnz
push
xchg
push
call
sub
lea
in
inc
cld
pop
add
in
jp
adc
mov
or
xor
mov
gs
and
mov
popa
out
adcb
lock
inc
mov
sbb
mov
inc
jns
jo
imul
xchg
push
jno
lock
es
mov
insb
addr16
cwtl
out
fstl
sub
pop
repnz
and
lock
idivb
sbb
scas
nopl
ror
call
xchg
das
mov
cmp
hlt
ret
fnstenv
mov
lock
divb
in
mov
jo
test
pop
insl
stos
lock
mov
ja
xchg
outsb
pop
fistps
popf
ret
repz
mov
push
inc
lods
pop
dec
lea
jnp
ret
pop
movsl
or
lock
inc
push
fwait
cmp
fisubs
lods
or
mov
enter
or
mov
sub
mov
imul
jno
push
rclb
lods
das
movsb
jbe
push
inc
pop
push
sahf
sub
test
pop
inc
in
fisubrl
mov
and
adc
cmc
pop
jge
mov
jp
mov
mov
mov
ljmp
push
jecxz
and
add
mov
shl
int
inc
loope
sbb
adc
xchg
cmpsb
push
mov
mov
jo
inc
xor
call
lods
inc
pop
sub
jge
mov
popf
insl
dec
jns
test
jg
stc
fldcw
pusha
cmc
jle
push
jge
mov
fisubs
daa
nop
jecxz
xorb
lds
xor
xlat
negb
lods
nop
jae
cltd
hlt
outsl
cmp
xchg
sahf
push
mov
and
inc
sbb
test
lea
and
dec
add
mov
icebp
sub
iret
and
pop
mov
aaa
insl
pop
jnp
adc
out
ficompl
jp
fildl
inc
cld
jge
ficomps
mov
mov
cs
jbe
scas
and
adc
xor
icebp
jne
decb
sub
test
cld
fldcw
mov
cld
jge
addl
nop
pop
dec
inc
cmp
push
clc
dec
push
cmp
xchg
push
jnp
cmc
ret
lahf
lods
dec
and
notb
sahf
sub
aam
and
arpl
mov
xor
push
pop
mov
mov
inc
in
int
pop
imul
jne
mov
xorb
push
arpl
mov
arpl
pop
xchg
pop
bound
inc
mov
cmp
xchg
icebp
les
les
push
shrl
jne
sbb
popa
dec
cmp
adc
ja
inc
hlt
inc
mov
xchg
lds
dec
test
mov
mov
insl
sbb
add
outsl
xchg
pop
popa
pop
fiadds
dec
mov
ljmp
rorl
enter
pop
mov
subb
scas
jns
adc
push
jo
or
add
mov
imul
cmp
sbb
jnp
mov
int
idiv
stc
scas
lods
xchg
rorl
adc
pop
adc
pop
xor
cmc
mov
fsubrp
jg
jmp
notl
test
xor
mov
pop
loop
lods
adc
mov
pushf
add
cmp
pop
lcall
inc
jae
stc
test
pop
into
or
pusha
mov
out
repz
in
pop
push
sbb
arpl
xchg
mov
fiadds
sar
cmpl
sub
pcmpeqw
push
roll
ds
test
cs
sbb
pop
bound
ret
into
pop
divb
xor
lea
xchg
outsl
jnp
dec
bound
xor
or
mov
jge
mov
test
movsl
test
lods
sbb
mul
and
bound
jge
pop
jnp,pn
pusha
ficoms
xchg
mov
pusha
out
mov
test
push
ret
mov
jo
fists
mov
divl
insl
rorl
cmp
sahf
xchg
in
rorl
std
daa
push
or
popa
fsubr
pop
push
hlt
add
iret
rcll
mov
jnp
fnstenv
pop
push
inc
int
mov
int3
ljmp
push
push
and
mov
negb
fwait
div
xchg
mov
push
stc
cmpsb
stos
push
push
or
dec
cmc
jo
popf
movsl
test
pop
test
aad
or
adc
pop
scas
sbb
dec
data16
ss
outsb
xchg
ja
pusha
and
cs
cmpl
lcall
push
inc
insb
jecxz
cmp
loope
add
mov
hlt
push
jnp
lock
ss
lea
inc
in
dec
out
sahf
fldl
xchg
xor
adc
mov
xchg
dec
in
xchg
lods
mov
movsl
out
cmp
jne
leave
orl
and
lock
jge
jnp
sbb
aam
imul
out
xor
insl
hlt
xchg
jns
sbb
xor
ljmp
xor
lret
ljmp
sbb
rclb
jae
pop
push
fstps
push
jnp
pop
lock
lahf
and
dec
lock
inc
xchg
pop
sbb
push
adc
fnstcw
gs
adc
jp
sbb
jbe
add
lea
testb
negb
pop
or
and
mov
jne
ret
sarb
loope
mov
pop
xchg
aad
arpl
mov
and
mov
loopne
call
push
ret
push
iret
jmp
rolb
push
data16
repnz
sub
pop
jns
hlt
xchg
in
mov
mov
shr
cli
dec
pop
test
push
lret
mov
push
xchg
sbb
popa
popf
push
xor
xor
repz
dec
cmp
fstpt
in
aad
dec
xchg
xchg
xchg
jge
jnp
sahf
mov
cwtl
fsubrs
lea
popf
dec
mov
in
pop
jecxz
xadd
mov
cltd
pop
out
sarb
ja
push
iret
mov
dec
lods
pop
inc
outsb
xlat
xchg
popa
push
xchg
mov
pushf
shll
cltd
pop
and
rclb
push
int3
lea
ret
xchg
sbb
cmp
dec
sbb
mov
cs
jae
lods
pop
dec
push
xchg
or
dec
push
lods
inc
jg
fwait
dec
jle,pn
dec
xlat
test
push
testb
scas
out
lahf
stos
movsl
xchg
sbb
sub
pop
adc
inc
in
outsb
out
lret
push
and
add
push
sar
inc
mov
cs
arpl
jge
adcb
cmp
lcall
and
inc
movsl
in
jecxz
popf
mov
adc
mov
xlat
fnstenv
test
push
sub
xchg
lock
add
sbb
outsl
scas
xchg
adc
pop
jns
dec
pop
fldenv
popa
mov
jnp
movsl
push
lea
or
hlt
icebp
pop
inc
push
jae
dec
xchg
and
cmp
rolb
insl
fldcw
jb
iret
mov
jge
pusha
mov
arpl
fmulp
mov
ds
mov
cmp
jb
push
bound
outsb
jo
or
add
sub
lods
fsts
in
test
push
pop
jmp
cltd
shll
mov
ds
add
mov
jo
loop
sbb
data16
mov
pop
test
lcall
adc
dec
pop
das
decb
sahf
push
in
xchg
push
mov
sbb
and
clc
inc
pop
add
fmul
push
push
adc
pop
mov
mov
aam
xchg
push
mov
mov
hlt
sub
sbb
pop
jbe
bound
jbe
push
test
mov
inc
loope
adc
add
cmc
lock
rclb
mov
lock
lds
sbb
push
rorl
xor
or
push
popf
gs
orb
aas
jg
jecxz
das
mov
iret
inc
ja
add
fistpl
push
cltd
shrb
popf
push
pop
pop
cld
lea
int3
std
xor
test
fs
scas
cld
jp
outsl
or
jbe
lods
lds
jnp
daa
fnstcw
insl
push
mov
jnp
icebp
js
jecxz
xor
cmp
call
jb
or
jmp
push
and
ret
xchg
push
enter
cli
mov
jb
insb
jmp
lock
mov
cld
jp
pop
or
or
arpl
into
dec
cld
adc
cli
mov
xor
ss
xor
jecxz
cmp
cmp
inc
fimuls
lret
aas
add
jo
add
lock
xchg
mov
flds
mov
xchg
sub
pop
pop
jo
pusha
pop
inc
push
jle
push
or
push
mov
cld
cmp
xchg
lock
rcll
into
mulb
lcall
jge
mov
and
pop
inc
mov
pop
mov
pop
negb
lock
lods
cmp
inc
add
mov
mov
ss
mov
shll
lods
fnstenv
adc
jne
adc
xchg
pop
cmpsb
cld
dec
dec
and
mov
cwtl
lods
push
cwtl
lods
adc
aad
test
mov
addr16
lret
or
sub
mov
mov
clc
and
pop
mov
xchg
jns
fwait
popa
mov
push
movsl
and
jae
stos
nop
jbe
xor
dec
and
dec
shr
push
sahf
out
outsb
jne,pn
adc
lea
push
iret
push
mov
pop
or
push
jge
lock
mov
inc
dec
pop
into
push
lret
enter
ja
repz
xchg
or
xchg
lds
xchg
xchg
imul
and
xchg
insl
push
popa
inc
orl
lock
call
sub
add
sahf
roll
push
inc
cld
je
outsl
pop
xorl
ljmp
inc
adc
aam
outsb
dec
icebp
movsl
mov
jnp
sub
jecxz
test
lock
jl
sub
stos
aam
adc
ss
mov
add
cmp
xor
mov
dec
es
out
sub
mov
je
mov
cmp
and
add
pop
ret
pop
addr16
arpl
xor
mov
xor
xchg
push
inc
stc
xor
lods
vpminsw
push
and
clc
xchg
daa
add
pop
push
xor
adc
inc
inc
filds
test
inc
test
lret
out
addr16
popf
pop
mov
ja
or
and
in
cld
or
sub
leave
fbstp
jae
push
and
sub
pop
mov
push
xor
popf
out
lea
pop
mov
loopne
jle
iret
mov
pushf
fstps
sub
jne
mov
xchg
adc
cwtl
push
jae
inc
inc
cmp
scas
outsb
jge
rclb
xor
sub
fucomip
ljmp
inc
mov
popf
dec
push
inc
mov
shlb
les
data16
pop
sbb
mov
sbb
cmpl
sub
pop
jne
shl
movsb
aas
xlat
inc
aad
cltd
push
jno
repz
push
lret
mov
xchg
push
jp
in
push
rcl
dec
lret
test
add
add
xor
jmp
fs
mov
iret
push
adc
cmpsl
shrb
mov
push
and
repz
mov
frstor
cmp
dec
push
arpl
jbe,pn
pop
ss
nop
jle
jb
adc
lock
andl
push
movsl
loope
insl
cmc
cmp
pop
xchg
xorl
add
or
ds
mov
cmp
leave
dec
int
loope
popa
mov
outsb
pop
insb
and
push
inc
movsb
fisttpll
scas
cmpb
pop
dec
pushf
jae
jae
sub
lea
cmpsb
push
push
pop
xchg
test
sarb
loop
testb
je
mov
call
mov
inc
rolb
rclb
stos
fists
or
lcall
pop
push
in
xchg
mov
mov
lret
xlat
jmp
mov
push
xchg
pop
cmpsb
stos
xchg
xchg
fadds
xchg
loop
or
lea
push
xor
stc
shrb
scas
or
cmp
xorl
inc
adc
inc
ret
int
sbb
out
mov
xchg
fwait
pop
out
mov
scas
push
outsb
into
ss
stos
cwtl
daa
mov
mov
jl
imul
std
lods
adc
fstl
dec
insl
adc
cmp
fldcw
add
inc
jae
push
xchg
mov
hlt
sub
out
jne
mov
fwait
jg
mov
pop
pop
pop
mov
lock
xchg
lahf
push
dec
in
xchg
pop
fisubrs
nop
addr16
xor
fsts
cmp
push
jg
dec
push
test
dec
shlb
pusha
jnp
in
xor
mov
lcall
mov
mov
push
in
stc
inc
xchg
cmpsl
jae
jp
ljmp
cltd
icebp
das
adc
divb
mov
mov
jecxz
adc
fdivl
mov
xchg
pushf
stc
xchg
xchg
fists
inc
jp
sub
sub
out
out
mov
stos
mov
mov
es
xor
lea
sahf
out
pop
int
nop
xor
std
fistl
jb
sub
shrb
pop
aam
rcll
shll
insb
popa
push
xor
addr16
cmp
pop
push
stos
stc
pushf
sbb
cmp
lock
movsl
dec
inc
add
adc
xchg
repz
push
shrl
ja
pusha
add
xchg
addl
imul
fiadds
outsl
xchg
outsb
mov
cmp
mov
stos
aam
cmc
iret
dec
sarl
jmp
mov
sbb
push
dec
xor
xor
fists
or
cmp
inc
jp
js
add
sub
jg
lock
mov
jle
push
nop
jbe
fsub
mov
mov
push
jecxz
mov
jne
lea
mov
lea
stos
dec
push
testb
push
insb
movsl
es
loop
jge
or
enter
lock
cmpsb
inc
je
aam
out
cmp
aad
fmulp
or
ds
mov
mov
inc
out
orb
pop
daa
les
out
stc
out
mov
dec
outsl
xor
fnstsw
xlat
lret
xchg
out
jns
adc
sub
gs
rclb
push
push
adc
cmpsl
add
andb
je
xchg
lods
jge
push
add
shll
adc
jne
push
cltd
into
loop
aaa
inc
movsl
out
adc
shll
push
jb
push
out
ja
mov
jg
mov
insb
popf
pop
fstpl
pop
xor
out
jno
pop
xchg
lods
scas
sub
loope
cmp
cmp
lods
shr
push
cwtl
fs
adcb
sbb
es
sbb
jae
jg
mov
pushf
adc
ss
ret
mov
adc
inc
sub
fistpll
xorb
addr16
jae
sarb
rcrb
into
pop
mov
sub
stos
or
gs
fiadds
jbe
orl
and
and
das
push
xorb
and
mov
rcrb
test
push
es
movsl
and
lret
out
ds
dec
das
push
jae
lock
out
pop
rorl
cmp
leave
push
pop
inc
push
lock
jae
fcoml
shrl
inc
pop
mov
dec
push
ficomps
aas
fstps
jl
and
push
push
icebp
dec
mov
mov
ja
sbb
out
adc
popf
mov
gs
pop
dec
and
gs
jno
ss
gs
mov
imul
mov
and
outsb
fstp
fidivs
xchg
leave
bound
int
xchg
jnp
sti
lahf
jnp
push
sti
jp
lods
hlt
mov
lea
push
sub
push
mov
add
adc
test
sar
negb
pop
out
inc
cmp
int
jae
push
div
jecxz
jl
push
lcall
stos
mov
das
dec
outsb
jmp
lcall
push
xchg
stos
push
dec
loopne
add
pop
sbb
sbb
push
scas
xor
mov
push
lahf
adc
jns
fsubrp
popa
insb
jno
andl
mov
dec
cmc
lock
sub
xchg
adc
outsb
loopne
mov
mov
jne
jge
push
sub
push
jno
ret
lea
cltd
ret
mov
or
lahf
addr16
cmp
out
adc
outsl
push
imul
pop
lock
add
decl
sbb
dec
aam
push
data16
int3
pop
mov
ret
dec
cmp
push
mov
jle
mov
dec
in
outsb
mov
imul
mov
mov
sbb
xchg
test
mov
stos
cltd
push
stos
sbb
push
mov
xor
pop
in
push
push
test
andl
sub
mov
insb
xchg
fs
test
xchg
jb
inc
push
mov
and
addb
insl
pop
jp
in
push
daa
xchg
inc
mov
jae
f2xm1
stc
jp
in
sbbl
nop
lock
mov
pop
daa
sbb
notl
hlt
xchg
das
mov
adc
hlt
test
add
cmp
jge
pop
stos
stos
pop
jno
adcl
out
jns
inc
scas
lahf
pusha
dec
fldcw
mov
xchg
shrl
cli
dec
sbb
sub
dec
jb
mov
mov
lock
xlat
xchg
inc
add
sbb
push
and
mov
jno
dec
out
in
push
sub
mov
ds
cmpsl
mov
shrd
lcall
cmpsb
pop
push
je
in
outsb
popf
fcmovnu
es
aad
das
out
xchg
cs
iret
mov
push
mov
rcr
or
imul
cmpsb
test
adc
xchg
fcmovnu
iret
sub
fldcw
dec
pop
xor
and
push
scas
mov
mov
xchg
popa
push
inc
xor
lock
mov
and
cmp
jmp
leave
imul
test
xor
imul
add
insb
cld
inc
adc
mov
stos
popf
jne
and
divb
movsl
popf
or
leave
sbb
sarl
sub
insl
and
stos
inc
jne
add
xchg
ret
gs
gs
iret
lock
cld
mov
jae
push
in
jnp
push
sbb
sub
loope
cmp
popa
sub
push
dec
xchg
cmp
jge
cmp
mov
test
mov
mov
jne
sub
cmpsb
das
pop
lock
inc
popa
sahf
stos
clc
push
imul
push
adc
mov
shrl
insb
in
pop
fldl
dec
pusha
push
cwtl
add
dec
repz
out
fcmovnu
sub
stos
push
push
ret
push
dec
jmp
mov
popf
mov
popl
bound
daa
inc
pop
movl
rcrl
sbb
jg
pop
iret
dec
es
aad
nop/reserved
lods
inc
popf
pop
cmp
dec
sahf
adc
mov
pop
dec
in
jo
pop
jecxz
xchg
shll
cld
mov
lds
jb
adc
adc
adc
fsubl
mov
cli
mov
pop
mov
or
push
xchg
pop
jo
sbb
and
enter
push
xchg
sti
and
cmp
clc
popa
xor
decb
mov
hlt
clc
repz
push
mov
xchg
jae
xor
pusha
adc
cmp
add
pop
lods
orl
push
xor
lods
inc
je
adc
dec
and
jae
shrl
pop
int3
xchg
jno
pushf
fadds
jmp
xchg
fcompl
jno
data16
movb
lea
xchg
xchg
outsl
pop
push
inc
inc
fwait
jne
arpl
inc
sub
pop
lds
xlat
lea
xchg
aad
bound
addr16
insl
negl
imul
stos
lret
int
std
outsl
pop
sbb
outsl
in
cmp
push
push
jae
outsl
mov
icebp
cmp
cmpsb
sti
sbb
mov
xor
ss
lcall
fsubr
fs
pop
push
enter
jno
sub
fistpl
cld
lock
xor
push
icebp
sbb
cmp
lods
das
xor
arpl
in
adc
mov
jno
inc
dec
mov
cmp
cmp
gs
jns
sbb
lret
pop
out
rorb
pop
ds
dec
rol
mov
imul
adcb
arpl
jne
repnz
push
movsl
push
cmp
xlat
cmp
test
inc
pusha
popf
dec
popa
jmp
loope
in
sub
pop
push
adc
rcl
das
out
movsl
stc
xchg
outsl
aas
addb
hlt
mov
mov
shrb
hlt
push
imul
lods
gs
icebp
sbb
clc
scas
pop
lret
sbbl
dec
in
lret
aas
xlat
jno
push
mov
lret
sarb
inc
lret
or
mov
sub
rol
dec
jl
jmp
push
and
sub
fcomps
mov
in
call
sarl
inc
aam
dec
js
jno
cld
cmp
fcomp
pop
es
fbstp
fistl
sub
xchg
stc
cltd
cmp
dec
mov
sbbl
mov
sbb
lods
lock
or
sbb
fucom
ds
rolb
add
cmc
sbb
cmpsl
lcall
into
adc
cwtl
fwait
movsl
cltd
pop
inc
iret
scas
cmpl
xor
cmp
loop
sarb
pusha
dec
mov
and
pop
mov
test
fcmovu
jne
fs
push
in
hlt
nop
pop
push
jo
mov
leave
inc
loopne
ss
fbstp
and
jge
jbe
sub
and
ss
xlat
lcall
jae
lds
fstps
cld
push
mulb
cmp
int
add
or
xchg
xchg
idivb
testl
mov
test
in
loop
and
ret
imul
jle
in
lret
movsl
sbb
movsl
adc
or
dec
andps
xchg
xor
sbb
repnz
pop
dec
ljmp
mov
outsl
mov
push
xchg
mov
cmc
adc
cmc
xchg
push
or
jge
rclb
mov
lcall
jne
jno
das
outsb
mov
jo
and
imul
sbbb
mov
stc
pop
fidivl
adcl
jns
push
push
and
lock
jae,pt
lods
pop
test
sbb
shrb
jae
and
aad
hlt
lods
jl
xor
sub
add
pop
loope
cltd
fisttps
dec
pop
adc
lds
stc
push
push
sub
cmc
shll
lock
and
repnz
insb
push
fiadds
pop
ljmp
jge
sbb
cmp
push
aaa
sbb
pop
xor
push
cmp
pushf
cmp
push
iret
std
lock
leave
inc
aam
add
fnstenv
dec
loope
mov
or
out
roll
push
into
sub
pop
jo
push
subl
adc
arpl
movsl
fadds
xchg
fsts
lods
pop
je
imul
enter
test
in
pop
sbb
mov
pop
jno
inc
and
int
push
insl
cld
popf
xchg
adc
jmp
xchg
movsl
dec
movsb
jbe
dec
clc
pop
cmpsb
mov
mov
fnsave
repnz
das
mov
inc
pusha
hlt
lcall
push
test
xchg
xchg
add
nop
cs
adc
jge
lods
and
push
add
call
fnstenv
push
push
mov
xor
xor
xor
jnp
xchg
pushf
mov
ss
add
dec
sub
in
lcall
sbb
scas
sub
fcoml
push
dec
inc
out
lahf
add
pop
ss
and
or
cld
fildl
sbb
icebp
mov
and
cmp
lret
mov
pusha
js
mov
test
je
outsl
jle
pop
or
pop
dec
pop
push
push
fnstsw
insb
repnz
inc
cmpsl
cwtl
leave
decl
dec
notb
aad
mov
adc
push
pop
mov
mov
fistpl
xchg
mov
mov
mov
jg
addb
ja
dec
je
cmp
lds
mov
xchg
pop
lock
dec
inc
cmp
mov
cmp
incl
pop
lcall
sbb
dec
fists
jp
xchg
ja
ss
arpl
rcr
and
into
add
sub
fisubl
lea
pop
inc
xchg
xor
icebp
xchg
test
aad
push
sbb
pop
pop
imul
cld
test
jno
insl
jno
icebp
push
iret
je
sub
iret
iret
jle
and
or
out
mov
xor
sub
adc
sub
xchg
pop
frstor
mov
divb
test
jne
clc
or
out
rolb
sbb
push
in
xchg
test
outsb
sub
sub
hlt
mov
ja
adc
jns
pop
push
insb
clc
xchg
rclb
enter
out
outsb
xchg
outsl
pop
xchg
lock
fnsave
xchg
and
cmp
cli
gs
jo
add
push
inc
lock
cmp
and
jne
mov
pop
mov
sbb
mov
out
pop
add
xchg
mov
cli
arpl
lea
loope
repnz
inc
sbb
jns
lcall
and
cmp
lea
and
fstps
pop
lcall
mov
pop
cmp
stc
out
pop
popf
inc
and
cmp
sub
int
inc
add
scas
in
cltd
or
jge
sub
enter
ja
adc
aam
or
cltd
ja
adc
mov
dec
fmuls
js
insl
push
sub
sub
mov
jl
sub
push
jns
int
inc
sbb
mov
movsl
sbb
jns
in
xchg
imulb
sbb
mov
pop
shr
cmp
push
and
or
hlt
scas
xor
mov
xchg
dec
pop
jnp
stos
adc
push
popf
out
lock
xor
sbb
inc
lods
cmp
mov
mov
lret
inc
mov
cmc
dec
mov
jno
mov
mov
les
insl
fisubrl
push
jns
loope
and
add
pop
movl
outsb
sarb
push
lock
divb
pop
ret
jns
xchg
lods
hlt
decl
mov
add
jnp
jge
loopne
in
jne
xchg
cmpsb
xchg
int3
loopne
sub
sub
movl
and
push
mov
imul
xor
mov
mov
add
push
pusha
loope
adc
sarl
andb
insl
add
in
cld
jae
lcall
rcl
orb
mov
jg
add
pushf
aad
cmp
mov
outsb
das
lods
addr16
arpl
inc
push
std
pop
mov
add
fldenv
cltd
cmpsb
pop
add
mov
jno
insb
pop
sub
in
je
push
xchg
sub
rcrl
jne
repnz
fucom
push
push
icebp
inc
out
jns
pop
and
sbb
test
dec
mov
pushf
and
popa
cmp
mov
aam
jle
nop
jns
jg
jle
mov
push
lods
lea
jge
xchg
sub
gs
lods
popf
cld
and
or
loopew
cld
fnsave
jge
sub
mov
push
xorl
pop
js
js
test
mov
push
xlat
inc
push
push
outsb
or
cld
ja
sahf
pusha
popa
jnp
sbb
addr16
cwtl
outsb
push
cmp
addr16
sbb
popl
outsb
mov
cmpsl
pop
jne
push
jno
add
pop
mov
or
or
cmpsb
push
outsb
shll
cld
in
sub
inc
jnp
mov
fwait
lcall
jle
sahf
push
adc
pop
aaa
popa
push
mov
xor
add
inc
test
lea
ljmp
fsts
inc
outsl
xor
aas
inc
mov
gs
flds
or
jo
push
pop
sub
pop
leave
jne
sbb
lret
ret
inc
ja
xor
cld
jb
ljmp
cltd
jo
adc
jge
fisubs
xor
cmpsb
push
cld
test
push
push
data16
leave
lahf
xchg
mov
cld
jae
pop
xchg
cmp
mov
pusha
push
dec
repnz
mov
mov
out
outsb
jg
pop
push
loop
inc
mov
adc
cwtl
cmpsl
mov
jl
imul
inc
test
dec
push
in
nop
lds
rcr
lea
mov
ljmp
adc
lret
out
mov
out
push
push
inc
push
pop
push
push
sub
or
cs
addr16
xor
loope
inc
dec
sahf
pop
push
mov
fimuls
sub
lcall
out
stos
push
stos
popa
lods
arpl
es
mov
push
scas
pop
mov
mov
pop
push
in
lds
jecxz
aas
mov
push
shr
outsb
xchg
insl
mov
out
adc
xchg
cmc
jae
ss
mov
icebp
mov
dec
cmp
fstl
sub
test
fcomps
fisttps
notb
jl
cs
icebp
push
cmp
inc
add
sub
push
inc
outsb
aam
fimuls
retw
ja
outsl
adc
rol
fcmovne
lea
in
xchg
insl
push
fstpl
adc
cmc
lcall
xchg
icebp
rolb
sbb
hlt
pop
shll
in
lahf
es
jo
dec
xor
adc
test
clc
push
es
push
mov
jge
sbb
cld
or
mov
loope
inc
mov
mov
lret
sub
xchg
add
add
in
dec
fidivrs
lea
pop
xchg
pop
sub
xchg
push
xor
out
jmp
jecxz
jo
cld
jns
jno
jnp
jp
insl
adc
mov
loopne
xchg
test
mov
nop
es
dec
add
clc
push
push
jae
inc
jae
or
popa
mov
in
jne
pop
roll
sti
out
fwait
mov
cmp
inc
aam
xchg
cmc
dec
rcrb
add
inc
xchg
mov
or
outsb
test
testb
adc
call
xchg
or
insl
push
jo
cld
xchg
xlat
adc
cmp
leave
andl
mov
dec
add
xor
pop
dec
in
jae
fs
pop
xor
sub
sti
push
jbe
and
adc
dec
imul
lea
jno
sub
addr16
inc
pop
fistps
or
push
push
loope
popa
and
xchg
stos
or
cmp
std
es
inc
xchg
jo
jae
cmc
cwtl
jle
in
push
lds
popa
int
dec
cmp
and
or
int
push
repnz
fnstcw
cmp
sub
xchg
in
lahf
or
cmp
jp
jmp
mov
iret
bsf
ljmp
or
lock
ficoml
adc
inc
jne
leave
or
cli
lcall
pop
rol
fidivl
xchg
mov
loope
adc
jg
ljmp
jle
rorl
cld
xchg
and
xchg
mov
fwait
outsl
or
pop
or
insl
push
cld
dec
inc
fbld
loopne
scas
lret
pop
arpl
jge
mov
test
pop
nop
jo
int
jge
mov
jge
test
aam
mov
dec
aad
jae,pt
movsb
outsl
cmc
jge
push
mov
pop
stos
icebp
dec
enter
fidivrl
or
inc
sarb
ror
loopne
push
push
push
rcrl
pop
pop
jnp
jp
fadds
aam
jg
mov
adcl
and
and
repnz
cmpsb
es
adc
cmpsb
xchg
lock
jne
push
jnp
pop
or
popa
cld
and
jb
dec
jmp
xor
call
cltd
xor
je
dec
jne
insb
popa
jns
pusha
imul
cmp
mov
adcb
movsb
xlat
or
lahf
shr
pusha
lds
dec
hlt
mov
int
xchg
ljmp
or
push
add
jg
lock
pop
hlt
ret
mov
das
sub
loopne
je
lcall
adc
lock
jge
push
mov
lods
hlt
jge
ja
sub
mov
out
jb
adc
adc
out
cltd
sbbl
xor
cwtl
push
mov
xlat
sbb
mov
shl
dec
inc
or
and
or
test
pop
in
jl
hlt
hlt
out
push
movsb
hlt
out
loopne
popf
cli
je
aaa
pop
rolb
cld
data16
out
mov
testb
dec
xchg
sbb
ja
aas
cmp
pop
cmp
ret
jl
das
xor
clc
sub
cmpsb
jb
das
dec
hlt
ror
xchg
inc
sbbb
mov
push
sbb
loop
xor
gs
jge
lea
out
adc
sub
or
lock
test
pop
popa
jle
rcrl
push
sub
mov
pop
popa
pop
lds
dec
insl
outsl
dec
jb
dec
xor
sbbl
loop
jmp
lcall
sbb
cld
out
xor
xchg
loopne
pop
scas
xchg
adc
cmp
pop
mov
mov
outsb
lods
incl
sar
loopne
mov
mov
dec
outsl
addr16
adc
call
mov
loopne
jle
push
push
out
int
sub
nop
scas
rcrb
arpl
xor
flds
pop
cmp
jecxz
fsts
push
xchg
ljmp
and
pop
inc
pop
int
movsl
mulb
out
add
notb
pop
and
out
mov
rcrb
or
inc
out
lods
dec
adc
or
cltd
mov
mov
les
lds
dec
fwait
mov
lea
popf
sbb
lods
cmc
jne
pop
mov
inc
outsb
loop
jle
jne
jge
pop
jne
dec
cld
lock
inc
int
inc
xorl
loope
ljmp
jp
lods
fwait
lea
dec
adcl
sub
cltd
js
xor
rcrl
lea
or
pop
cwtl
loope
push
int
push
cmp
pop
lcall
cmpsb
ss
pop
stos
js
outsb
out
adc
dec
xchg
testb
mov
testl
cltd
mov
or
out
cmp
in
bound
stos
fld
adc
mov
mov
iret
push
mov
sbb
daa
and
clc
ficoms
incb
mov
insl
movsl
jecxz
popf
jns
mov
push
lods
pop
jae
xchg
mov
jle
clc
push
nop
xchg
aad
xchg
dec
dec
jp
mov
ret
test
flds
test
mov
scas
aad
push
jg
outsb
cmpsl
and
sbb
shrb
outsb
mov
add
stos
push
dec
xor
out
mov
jns
jbe
push
loope
pop
lret
pcmpeqw
test
outsb
insb
pop
leave
subb
cmpsb
out
jle
pop
fwait
jmp
sbb
dec
pushf
dec
inc
xchg
imul
mov
roll
mov
stos
fnstcw
popa
jno
pop
or
mov
adc
pop
mov
add
test
test
insl
mov
mov
pop
add
mov
or
sar
in
mov
shlb
mov
loope
sbb
movsl
aam
cmp
inc
xlat
inc
pushf
cs
jno
push
je
outsl
insl
cltd
pop
out
xchg
pop
movsb
adc
data16
pop
inc
popf
mov
sub
adc
mov
in
jno
push
dec
call
data16
jnp
sbb
repnz
orb
push
xchg
stos
inc
in
xchg
add
xchg
inc
push
mov
push
and
ja
mov
pop
add
push
fnsave
clts
fistpll
aam
add
cmpsl
sub
test
dec
pop
dec
jae
xchg
data16
movsl
or
cs
mov
bound
fcoml
and
lock
roll
push
sbb
mov
loopne
ret
push
dec
lret
cmp
xchg
add
aad
xor
subl
shr
stos
mov
mov
adc
nop
lods
stc
xor
jb
cmp
push
pop
inc
shrl
test
push
inc
cld
adcb
xor
fwait
lea
ret
add
dec
leave
movsb
xchg
mov
cmp
icebp
add
int
popf
lret
fbld
push
add
loope
add
imul
inc
scas
movsl
stos
aaa
xchg
pusha
or
pop
fidivl
inc
mov
jno
in
add
mov
mov
mov
or
sub
jbe
sub
sub
mov
mov
mov
pop
sbb
dec
xor
jg
sbb
jmp
xor
lds
pop
jmp
incb
bnd
popf
sbb
imul
dec
dec
pop
inc
pop
nop
pop
adc
arpl
push
lock
sub
lock
inc
ret
and
fldl
lcall
test
stc
fmulp
popf
dec
std
inc
arpl
outsb
stc
stos
cltd
jbe
dec
loopne
popf
ds
lods
adc
adc
pop
sub
dec
push
into
pop
dec
es
test
popa
cmp
cmp
lods
cwtl
and
adc
enter
scas
popf
mov
test
mov
xor
scas
fcom
and
jns
jns
lock
aam
pop
adc
cwtl
jae
push
cmc
inc
sbb
test
mov
add
push
ja
not
inc
loopne
fidivrs
repz
shr
sete
add
gs
pop
loope
mov
punpcklwd
lcall
outsb
xchg
cwtl
mov
and
insl
mov
xor
int
mov
lock
cwtl
adc
jno
push
cld
xor
jae
ss
fsubr
in
ret
cmp
lea
mov
aas
mov
lock
out
ret
movsl
mov
xor
and
add
jae
dec
jo
pop
or
clc
aaa
enter
xchg
and
jno
mov
mov
out
in
in
lea
ds
mov
insl
xchg
mov
pop
sbb
jo
out
dec
insl
pop
xchg
sbb
push
mov
imul
push
into
mov
je
mov
adc
mov
test
xchg
sub
pop
cmp
es
stc
sbb
mov
mov
sub
nop
in
or
lock
out
mulb
mov
xchg
orb
xchg
pop
push
iret
xor
mov
leave
mov
mov
call
lret
insl
ret
cmp
sub
jg
mov
fsubrs
xor
fwait
cmc
sbb
imul
jnp
mov
lds
hlt
pop
push
testl
xchg
test
in
jg
icebp
loopne
jno
mov
mov
nop
fiaddl
daa
push
xorb
add
adc
movsl
xchg
fucomp
and
int3
inc
hlt
pop
push
jno
outsb
out
xchg
into
aad
pop
mov
push
sbb
jle
lock
outsb
add
pop
adc
outsb
and
pop
xor
outsb
inc
aaa
mov
pop
pop
adc
in
and
xchg
jno
aad
ret
notb
push
imul
dec
pop
xchg
fistpll
std
adcl
adc
arpl
arpl
adc
push
xchg
xchg
sub
not
loop
push
lahf
xor
stc
insl
sbb
xchg
sbb
out
xor
ffree
pop
dec
and
inc
jo
loop
add
ljmp
mov
xchg
in
mov
or
or
sbb
or
out
add
and
pop
mov
jge
popf
xchg
jmp
push
jo
lods
aaa
pop
popf
jnp
outsb
lea
pop
jge
fildll
aaa
pop
pop
jnp
mov
subl
jp
push
das
mov
lea
outsl
test
xchg
jmp
fcmovne
ja
das
lcall
push
inc
cltd
lret
negb
sub
pusha
jbe
outsl
or
call
jnp
outsb
imul
ret
mul
fwait
insl
mov
push
pushf
subl
ljmp
std
arpl
push
decb
mov
lods
out
stos
push
push
fsts
pop
lock
adc
arpl
inc
xlat
xchg
xor
jmp
cmp
orl
dec
add
dec
aad
fsubl
cmp
repnz
rcll
inc
cmpsb
cmp
xor
aad
dec
dec
push
mov
jne,pn
shr
daa
push
cmp
jmp
jle
scas
adc
jne
pusha
stos
and
xchg
outsl
jmp
in
jg
mov
jno
out
hlt
push
cmp
xor
iret
mov
into
jo
xor
shrl
cmp
insl
nop
xlat
cmpsb
push
ficomps
loopne
into
inc
and
lret
mov
inc
jp
and
das
sbb
and
notb
push
inc
lret
lcall
mov
in
lock
hlt
cld
cmpsl
lock
push
sub
push
rcrb
dec
test
sub
insl
lea
dec
xlat
push
inc
push
push
cmp
test
and
mov
cmc
mov
movsl
xchg
mov
xchg
insl
xchg
pop
and
and
lcall
in
sti
xchg
sub
pop
or
inc
stos
daa
pop
outsl
divl
mov
jp
xchg
ret
jmp
outsl
ljmp
cmp
imul
out
mulb
sub
and
sub
scas
pop
and
adc
mov
inc
pop
popa
jo
test
subl
lods
dec
ret
loope
outsb
dec
icebp
movsl
ds
jb
mov
outsl
lods
xor
outsb
push
cli
mov
ficomps
cld
adc
stc
push
push
xor
sahf
test
mov
fs
test
aad
inc
push
mov
mov
out
cmc
adc
pop
popf
out
lods
mov
mov
jmp
mov
dec
popf
dec
ret
aam
gs
pop
xor
jae
fwait
aad
or
add
scas
push
flds
jl
push
je
dec
xor
add
imul
push
lcall
mov
xchg
arpl
inc
mov
stos
inc
insl
mov
aas
and
insl
cmpb
sub
xchg
jnp
sub
xor
shll
adc
pop
loope
and
xchg
pusha
popf
es
jge
out
iret
jb
mov
mov
popa
es
movsl
aaa
pop
std
test
jp
pushf
xchg
stos
mov
lods
inc
jge
shlb
aaa
test
jle
fnstsw
cmp
std
addr16
pop
fwait
adc
in
or
mov
shl
cld
ret
out
cmpsl
jmp
popf
scas
mov
es
das
jmp
imul
cltd
ja
jns
mov
or
outsl
jge
imul
push
int3
shrl
aad
push
lea
mov
sbb
hlt
jl
insl
pop
add
mov
movsb
bound
in
in
fbld
sahf
cmc
popa
lea
jl
sar
xor
popa
dec
xor
sub
int
add
adc
fdivrp
mov
add
sbb
and
mov
hlt
jbe
movsl
or
add
test
hlt
inc
popf
iret
add
int
lock
cwtl
les
inc
outsl
pop
pop
out
xchg
daa
js
mov
mov
insl
iret
pop
add
popa
sub
leave
cmpl
sbb
fisttpll
mov
and
mov
in
cmc
xor
push
mov
pop
bound
adc
insb
adc
xor
pop
sti
test
hlt
fisttpl
mov
rcll
or
mov
into
ret
or
hlt
jbe,pn
add
inc
pop
xchg
adc
cmp
scas
xchg
push
outsl
jbe
ja
push
xchg
inc
mov
clc
inc
arpl
sub
pop
mov
mov
call
sbb
out
outsl
xchg
cmpsb
mov
out
mov
scas
lret
lds
inc
lods
mov
xor
jno
lock
mov
bound
int
push
imul
mov
add
xchg
stc
hlt
das
loopne
into
mov
mov
sub
mov
xchg
push
xchg
mov
cmp
mov
and
loope
scas
outsl
repnz
cld
outsb
js
mov
gs
aad
sbb
ljmp
out
push
push
inc
loope
int
ds
int
clc
nop
add
pop
xchg
mov
jno
mov
into
nop
ret
clc
xchg
sbb
int
push
ret
dec
mov
in
loop
add
mov
lock
push
push
mov
xchg
sbb
pop
mov
sub
cs
xchg
and
loope
aaa
stc
ja
outsl
mov
or
cmp
jge
jge
jno
pop
loope
aam
pop
lcall
xchg
pop
jne
aam
pushf
mov
sarb
cli
or
cld
out
out
mov
jge
jg
pushw
jns
pop
push
popf
adc
cwtl
les
cltd
ljmp
into
test
jb
bnd
mulb
sub
clc
lods
sahf
addr16
jb
inc
inc
outsl
mov
lods
pushf
sbb
jnp
jae
push
frstor
mov
mov
dec
and
xor
es
notb
jnp
adc
subb
push
cmp
js
int
sbb
cmpl
mov
sarl
jno
push
loop
cld
push
sub
mov
cmpsl
xchg
push
shll
sub
pop
mov
insl
test
cmp
in
fcoml
mov
sti
mov
and
push
adc
dec
call
pop
dec
hlt
lahf
xor
mov
movlps
sbb
inc
mov
dec
test
or
rcrl
iret
movd
and
mov
cmpl
lods
pop
pop
test
lods
movlps
pextrw
jb
jae
jge
or
dec
cld
pop
and
in
and
mov
ret
rcll
jp
sbb
sbbl
ja
mov
dec
push
and
inc
inc
xchg
dec
test
cld
jno
idivl
loop
leave
out
les
lea
shll
mov
jbe
das
loop
adc
pop
pop
gs
pop
or
push
push
mov
xor
ss
rcll
sar
pop
and
fildll
cmp
push
aam
pop
outsb
out
jge
inc
push
lcall
sbb
sahf
mov
sub
rcrl
xchg
mov
outsb
xchg
pop
jns
inc
dec
or
jae
push
mov
pop
dec
stos
xchg
lahf
cs
popa
push
loop
xchg
mov
cltd
rcrb
in
adc
mov
in
xchg
add
das
sub
lret
cmp
cmp
std
es
add
insl
popf
mov
iret
lods
jae
sub
and
mov
out
sub
jo
sbb
pop
sbb
mov
lahf
stos
imul
aad
insb
lret
cs
xchg
popa
and
inc
int
outsl
or
push
and
and
mov
pop
movsb
fwait
mov
jae
ja
mov
jmp
and
fisttpl
pop
xchg
inc
arpl
sbb
arpl
xchg
and
ficoms
xchg
daa
mov
pop
int
inc
dec
xor
pop
repnz
pusha
pop
or
add
gs
push
popf
jbe
and
jnp
inc
or
in
pop
cwtl
fs
inc
fstpl
and
movsb
ret
push
push
push
stos
mov
and
or
pop
fimuls
mov
adcl
push
pop
outsb
xor
and
sub
xor
inc
jg
jae
xchg
or
int
dec
lahf
adc
dec
lock
push
andl
jnp
xchg
sbb
mov
stos
int
cmpsl
les
lret
xor
aas
in
push
ja
pop
test
xor
lahf
out
insl
outsl
xchg
gs
out
mov
jno
sub
shrl
fmull
lds
jge
xchg
mov
lds
int
clc
push
test
aaa
mov
call
adc
insb
and
jecxz
shll
mov
pop
out
bound
mov
push
jmp
pop
scas
mov
gs
test
sub
xor
mov
out
xor
jo
pop
in
leave
pop
push
ja
roll
mov
mov
mov
lds
stc
mov
or
cmpsb
push
stos
jecxz
ret
push
mov
pop
mov
aas
or
leave
and
cmp
lea
jge
dec
jp
xchg
xchg
sbb
stos
insl
imul
pop
and
mov
frstor
mov
lahf
pop
and
inc
or
adc
mov
dec
pop
dec
sbb
rcl
cmc
xor
cmp
cmp
and
push
xor
and
mov
push
dec
pop
dec
scas
inc
mov
pop
sahf
pushf
fs
sub
push
movsb
mov
jg
repz
mov
pop
dec
aad
aad
bound
xchg
test
xchg
rorb
sub
add
sbb
add
iret
ja
pop
shlb
roll
jp
cmp
mov
xchg
stos
gs
lcall
aad
data16
push
mov
mov
mov
rcll
xchg
bound
pop
push
push
lods
inc
cs
aam
jns
mov
sbbl
test
xchg
rcrl
lcall
sub
mov
fwait
sar
cld
orl
leave
sbb
call
lods
lcall
dec
jns
lods
xor
xchg
pop
popf
dec
push
insl
cmp
arpl
rorl
jmp
mov
sub
std
xor
jno
mov
mov
fs
loope
and
jno
push
xor
jp
setp
test
shl
sarb
xchg
inc
push
fnstsw
push
hlt
ds
push
orb
fcomps
xor
outsb
ret
out
roll
xchg
pop
test
adc
inc
sbbl
loop
jno
test
dec
sub
jnp
push
mov
fwait
jne
pop
xor
mov
stos
dec
jge
push
xchg
jnp
jbe
sbb
loop
flds
mov
icebp
inc
movsl
in
push
iret
lock
jno,pt
mov
inc
shlb
movsl
jns
std
mov
arpl
sbb
adc
loop
jns
dec
stos
scas
mov
je
ss
sub
dec
imul
fbstp
push
xchg
or
scas
je
adc
outsl
ret
inc
xchg
cmp
pusha
xchg
cmp
and
mov
dec
inc
in
ds
cld
icebp
fnstcw
rcr
jno
sbb
sti
aas
mov
add
sub
je
popa
jns
jne
and
cltd
jle
dec
cmp
call
lods
rcrl
xor
mov
mov
sarl
in
xchg
lea
pop
loope
cltd
clc
stos
push
xor
in
jp
stos
int3
pop
int
or
jge
xchg
cli
xorl
cwtl
inc
cmp
mov
imul
inc
mov
lret
lds
dec
insl
inc
pop
cltd
lcall
and
jae
sub
je
imul
pop
aaa
movsl
adc
pop
cmc
ret
push
add
jecxz
sahf
pop
or
or
inc
mov
cmp
cmp
ds
push
cmp
and
inc
mov
cmpsl
lods
incb
sbb
and
sub
sar
or
leave
arpl
gs
cld
js
push
adc
inc
lea
arpl
ret
in
lods
scas
lock
xlat
cs
pushf
ret
mov
je
adc
aad
sbb
stos
mov
pop
and
lock
sbb
xchg
adc
imul
inc
jecxz
repz
out
cs
jae
jbe
insb
sbb
sub
mov
jmp
xor
or
jo
sub
lea
in
clc
lods
out
sbb
pop
jl
loopne
jno
sahf
out
loopne
jle
fstpl
mov
fstpl
subl
mov
jae
nop
std
outsl
test
push
cmp
or
xor
pop
lods
insl
outsb
outsl
fldt
ret
inc
loope
xor
lock
push
push
outsl
icebp
out
insb
sbb
frstor
test
mov
sbb
into
aaa
pop
jno
lods
int
ja
lods
push
pop
stos
xchg
add
mov
xor
xlat
leave
pop
jb
or
jns
xchg
mov
pushf
int
jle
jne
test
aaa
mov
in
jnp
int3
rclb
add
lcall
sub
js
push
xchg
mov
adc
pop
loopne
mov
push
stc
loop
push
lret
outsb
xchg
popa
in
pop
adc
out
loopne
adc
popa
xor
stc
cmp
das
xor
push
push
rcl
or
push
jnp
push
pop
andb
je
daa
adc
cld
rcl
gs
fwait
jge
mov
jae
mov
insl
imul
lock
fwait
or
sbb
out
in
fs
comiss
mov
inc
add
inc
mov
int
in
mov
jae
or
sub
popf
mov
jmp
jl
jo
inc
jmp
adc
lcall
sub
gs
cli
dec
pop
insb
ja
fstl
nop
fidivrs
in
pop
outsl
ret
jmp
push
ds
sub
or
xchg
jecxz
fisubrs
dec
mov
pop
xchg
stos
xchg
mov
sbb
loope
inc
jecxz
lea
xchg
mov
ret
push
push
arpl
pop
imul
lock
pop
lret
cs
mov
iret
cmc
mov
mov
outsb
add
int
push
dec
and
adc
pop
rclb
mov
fisttpll
jnp
ret
add
xchg
lea
mov
sub
sbb
ja
loope
jmp
inc
ljmp
mov
xor
out
call
popa
mov
and
xchg
addl
movsb
add
popa
cld
jp
inc
push
mov
leave
shlb
push
rcrb
icebp
jge
dec
cmp
jecxz
push
lret
mov
sbb
lcall
pop
hlt
inc
jmp
pop
cmp
cld
mov
loope
outsb
imul
testb
and
fucomp
movsb
push
call
shll
sbb
orl
mov
movsb
ret
das
jb
ficoms
js
jnp
iret
sbb
pop
jno
xor
cmp
mov
pop
push
pop
inc
int
mov
test
sahf
push
pop
mov
cmpl
sbb
fisttpl
in
pop
loope
push
dec
push
and
mov
sbb
push
mov
dec
outsb
cli
push
pop
mov
push
or
in
mov
xchg
dec
rcrl
fsubs
loope
adc
xlat
out
loope
push
push
out
push
icebp
divb
scas
mov
ret
lock
xchg
arpl
hlt
jmp
ja
adc
mov
push
jecxz
pop
sub
andb
mov
js
jmp
int
cld
gs
jbe
mov
xchg
jno
mov
pop
data16
lcall
mov
dec
ja
push
dec
cmp
mov
push
push
pop
outsl
lea
clc
mov
aaa
dec
popa
sti
mov
data16
pusha
outsl
cmpsl
std
pop
xchg
lcall
push
pmaxsw
popf
push
mov
mov
stc
mov
cmp
popf
push
sarb
hlt
int
mov
mov
aad
addr16
hlt
sub
xchg
pop
mov
push
movsb
push
movsl
scas
cli
push
insl
cmpl
mov
push
shlb
dec
aad
and
insb
cs
outsb
shlb
dec
insl
dec
stos
push
xchg
sbb
jle
pop
outsb
xor
movb
push
and
pop
mov
sbb
aad
cmp
data16
xchg
out
add
inc
sub
dec
repnz
movsl
test
stc
push
inc
adc
int
adc
mov
jno
cmp
stos
pop
loope
or
jnp
stc
push
jae
ret
push
push
push
jge
and
push
dec
inc
jl
mov
loop
mov
jbe
aad
sub
dec
je
bound
fnstenv
or
orb
or
add
xchg
outsl
fstpl
add
mov
into
and
in
pop
scas
sub
or
mov
mov
dec
push
mov
jle
dec
sub
lea
mov
cs
push
jnp
jae
sbb
lret
repnz
lock
jmp
lea
lods
push
adc
rol
push
sbb
sub
shll
and
jl
enter
sbb
xor
ss
jecxz
clc
and
repz
cmpsb
dec
inc
add
adc
fnsave
cmp
cltd
cmp
mov
cmp
mov
adc
lcall
test
mov
test
ret
pop
gs
jg
mov
pop
inc
cltd
xor
fimuls
jecxz
repnz
negb
inc
mov
aas
and
popf
xchg
and
pop
jge
or
stos
mov
and
sub
jno
aas
and
mull
pop
loope
mov
inc
in
push
dec
pop
dec
rorb
push
hlt
inc
inc
lcall
pop
add
lahf
iret
or
mov
rorb
shl
add
nop
shrl
add
mov
mov
push
jnp
dec
pushaw
or
pop
push
dec
fs
lods
add
popf
and
popa
lahf
ds
push
fsubrl
js
xchg
ja
cmp
push
adc
stc
imul
cld
mov
xchg
push
jmp
xor
cli
push
rolb
subb
adc
mov
dec
dec
dec
and
lock
pop
cli
es
icebp
mov
push
pop
scas
adc
fwait
xchg
sub
pop
test
data16
je
xchg
mov
repnz
ret
stc
jp
and
dec
lcall
pushf
jo
push
out
mov
lret
cmp
adc
into
pop
das
pop
or
shlb
lods
cmc
xchg
jle
inc
sbb
imul
add
loopne
jmp
mov
pop
xchg
lret
out
sbb
lods
aaa
loop
dec
andl
aaa
pop
jbe
ds
aad
push
fdivrs
ja
add
fwait
inc
jo
hlt
addb
lcall
push
xlat
cltd
xchg
sub
out
fwait
mov
loope
ja
fcoml
sbb
fisubrs
outsb
mov
jb
je
das
cli
pusha
mov
test
imull
cmc
and
fistps
jnp
inc
outsb
push
push
mov
sub
jnp
lret
inc
out
pop
lods
xor
and
mov
idivl
jecxz
jnp
stos
sbb
sahf
int
je
movsl
xchg
outsb
shrb
sbbb
lock
aam
adc
ss
push
jmp
xor
pop
and
and
push
mov
decl
mov
dec
fdivl
push
dec
jne
rolb
and
cmpsb
lcall
gs
lret
pop
icebp
lock
lcall
adc
and
cwtl
push
sbb
test
jb
int3
push
xchg
jno
lea
sbb
dec
inc
movsl
dec
cmp
jecxz
ljmp
std
es
sbb
adc
lea
mov
sbb
jge
cmp
sub
adc
inc
push
lock
pop
mov
sub
cmpsb
iret
jge
inc
ret
xchg
push
mov
popf
cmp
sbb
pop
int3
int
daa
jle
lea
xchg
push
fcomps
ficoms
cmp
clc
jno
pop
mov
or
es
pop
lock
or
icebp
sbb
jb
sbbl
nop
rclb
out
mov
jnp
cmp
xchg
leave
push
sub
mov
adc
bound
dec
pop
push
xchg
push
push
lahf
in
fs
in
adcb
movsl
popa
cmp
movsl
lea
push
mov
sbb
addr16
out
or
in
pop
push
ds
aas
jnp
stc
jo
mov
push
lds
xchg
xchg
pop
cmp
imul
pop
cld
push
push
mov
js
fnstsw
into
stos
cs
mov
mov
int
xchg
sti
fisubs
adc
inc
mov
pop
push
fstpl
cmp
leave
shl
inc
mov
mov
xchg
jmp
in
lock
mov
sarb
push
mov
test
frstor
icebp
dec
inc
daa
sub
ljmp
xchg
stos
cmp
cwtl
cs
xlat
cmp
nop
mov
lock
jp
sarl
inc
adc
stc
int3
sbbl
nop
lahf
push
sub
inc
rorl
cmp
es
test
sub
idivl
mov
icebp
out
hlt
cmpl
dec
ficomps
pop
jae
scas
into
icebp
sarl
xchg
fistpl
sub
pop
jne
jb
rcrl
aaa
sbb
adc
or
js
jle
aas
xchg
push
bound
imulb
in
pop
xchg
pop
push
lea
and
mov
cmpsb
inc
add
jg
mov
inc
repnz
mov
sub
and
jae
mov
into
test
out
push
paddsw
lcall
mov
cld
lret
movsb
sub
stos
call
out
sub
addr16
icebp
or
mov
cmpsl
fldl
into
shl
popa
out
outsl
jmp
leave
aas
jmp
push
jno
pop
push
arpl
cltd
sub
pop
mov
add
je
mov
or
push
sbb
leave
in
push
lea
lock
ljmp
add
mov
mov
push
push
cmp
dec
jle
jmp
cwtl
not
ficoms
pop
lock
sbb
shlb
pop
fisttpl
dec
push
sub
push
dec
outsb
adc
dec
iret
gs
mov
lock
cmp
stc
outsb
add
movsl
test
dec
add
pop
inc
lret
leave
popa
leave
movsl
icebp
and
popa
adc
sbb
popf
inc
pusha
out
dec
lret
pop
es
push
mov
int
imul
insl
stos
loopne
mov
jecxz
into
mov
jne
movsb
popa
push
jne
and
xchg
mov
adc
nop
insb
sub
jg
push
xchg
add
cmc
rclb
mov
xor
mov
jne
into
stos
mov
lock
inc
jne
mov
gs
mov
mov
out
cld
out
scas
movsb
xlat
sub
sbb
sbb
aas
inc
lea
xchg
pop
popf
mov
test
cmpsl
mov
movsl
nop
push
fisubrs
add
pop
dec
sti
dec
mov
xor
mov
lahf
push
aas
fimuls
jne
imulb
insb
cwtl
add
scas
sbb
shrb
sub
adc
adc
inc
stc
in
or
leave
pop
outsl
mov
mov
je
xor
mov
and
cmp
cld
std
cld
push
ret
repnz
jns
insl
insl
shll
dec
and
popf
pop
sahf
push
shr
bound
jmp
jl
add
cs
xchg
mov
or
cmp
call
hlt
or
or
cld
xor
scas
jb
test
ds
popa
int
or
pop
push
into
test
push
jb
nop
jnp
mov
jbe
test
cmp
add
xchg
push
imul
insb
xchg
pop
fdivrs
rolb
stc
hlt
std
sbb
sbb
std
ret
or
pop
iret
mov
pop
dec
jae
cs
out
test
cmp
notl
cld
add
mov
adc
test
push
adc
nop
xchg
push
les
jge
loop
xchg
inc
adc
int
std
in
push
rcr
fldcw
nop
fnstsw
repz
pop
sub
add
aam
adc
lods
lcallw
and
xor
scas
jnp
and
scas
int
inc
ret
push
mov
xchg
push
leave
xchg
fcoms
xlat
push
arpl
add
in
das
push
int3
jmp
sub
add
lock
cld
push
mov
jmp
lds
or
mov
mov
lock
sahf
in
xchg
mov
jge
xchg
fdiv
jmp
mov
ja
jmp
jno
xchg
and
pop
shl
adc
data16
cltd
in
je
jno
sub
mov
pop
inc
inc
out
jnp
pop
frstor
lea
ds
ret
mov
cwtl
shlb
imul
pop
insb
push
add
testb
lods
jo
jl
cli
xchg
test
and
fdivrs
sbb
cld
mov
mov
push
push
repz
xchg
sub
mov
push
sar
mov
out
xchg
or
loope
ja
aad
push
or
mov
daa
loope
call
cmp
insb
das
subl
addr16
gs
sub
pusha
inc
xchg
push
lret
lock
mov
sahf
push
aad
out
jmp
js
ss
xchg
push
sbb
movsb
push
stc
adc
xchg
mov
stos
xor
xchg
dec
cwtl
mov
ret
mov
popa
mov
arpl
add
in
mov
jnp
pusha
int3
stos
push
mov
mov
jb
jns
mov
out
pop
jne,pt
pop
xor
push
xor
cmp
in
push
popf
push
and
gs
pushf
arpl
sub
adc
shl
aam
pop
aad
dec
or
shrl
pop
sub
inc
into
xchg
mov
cld
inc
das
call
or
cli
outsb
lcall
jl
jecxz
push
movsl
and
pop
xchg
outsb
mov
xor
mov
jmp
lock
pop
lret
sub
sbb
jae
lcall
ret
sub
or
push
mov
sbb
sub
push
push
shll
mov
xor
jno
loopne
adc
lds
jns
jb
sbb
jmp
lods
cmp
inc
jle
jno
or
out
shlb
sub
mov
outsb
pop
hlt
inc
jne
lock
rorl
or
notb
cmp
or
mov
insl
mov
insl
dec
pop
dec
ret
sub
dec
fstl
nop
xor
dec
pop
mov
jle
fsubs
in
test
sub
sub
mov
fmuls
test
and
push
jecxz
mov
cmovg
mov
repnz
inc
pop
addr16
sbb
loope
sub
insb
pop
cs
pop
lods
fcomps
and
jno
lds
out
push
cmc
arpl
insl
lds
pop
xchg
adc
jp
fistpll
jns
pop
test
cmpsb
push
filds
sahf
scas
std
int
mov
push
pop
outsb
push
xchg
ja
popa
lds
jge
outsl
insl
adc
les
daa
push
sub
xchg
pop
icebp
pop
aad
popf
jno
inc
dec
push
int3
sbb
popa
mov
outsb
cmc
in
mov
popf
cmpsl
lcall
jno
lock
outsb
mov
jmp
sub
adc
and
push
aas
test
ljmp
lock
call
mov
movsl
adc
jmp
xor
jno
insl
xor
int
inc
sahf
sbb
jae
icebp
mov
mov
cmp
jle
ja
cmp
mov
outsl
pop
pop
push
outsb
ret
xor
push
ljmp
xor
pop
and
sub
mov
xchg
aas
lock
mov
das
call
jno
pop
inc
mov
fisttpl
dec
int
xor
es
push
jo
popa
cld
loope
ret
lds
cmc
mov
iret
mov
push
sub
test
mov
push
push
lods
mov
dec
loopne
push
cld
add
outsl
popf
nop
push
xchg
loopne
jnp
fcoms
jp
jns
je
cmp
xchg
jbe
insb
cmp
lock
cltd
addr16
test
push
jns
dec
xor
sub
lock
fwait
lds
daa
jae
loope
or
mov
fisubrs
jno
ss
dec
popf
and
mov
dec
mov
fcmovu
pop
movsl
xchg
push
outsl
outsb
jno,pt
enter
lods
loope
pop
and
test
loop
mov
jae
les
mov
cmpsb
movsl
mov
xor
in
jge
inc
outsb
xchg
in
push
cmp
mov
dec
mov
cmp
fs
pop
andl
arpl
add
insl
adc
sbb
mov
xor
cld
push
out
sub
ljmp
xchg
lods
repnz
jae
pop
mov
hlt
pop
cmp
call
xchg
push
lds
sbbl
xchg
aad
pop
in
fldl
data16
mov
in
out
xor
cmp
dec
jge
sbb
add
dec
jno
jae
pop
push
cld
cmc
jmp
arpl
repnz
lods
dec
cwtl
in
pop
mov
insl
lods
inc
in
rcrl
adc
test
mov
test
sub
sbb
push
fs
icebp
fdivs
pop
push
add
add
mov
movb
cld
or
mov
xchg
xlat
inc
lea
cmp
pusha
jo
xchg
adc
jnp
rclb
cld
xor
add
shll
jno
dec
and
out
jo
mov
push
xchg
adc
into
push
rol
jae
push
bound
xor
cmc
rclb
adc
jbe,pn
xchg
in
add
int
or
cmpsb
sbb
jns
ror
sub
cld
cmp
icebp
es
jp
dec
mov
loop
call
nop
inc
or
test
mov
repnz
mov
std
sbbl
jge
loope
push
arpl
pop
std
stos
jbe
rcll
sbb
fstl
lea
in
push
rol
add
lret
dec
jb
jnp
lret
dec
fnsave
xchg
dec
fcoms
js
cmp
xlat
push
jno
jle
arpl
insb
mov
hlt
rcll
or
xlat
fidivl
je
loope
inc
ret
in
popa
cmp
cld
ds
and
pop
inc
lret
add
rolb
add
faddp
cmp
cmpsb
stos
and
pop
movsb
aam
mov
adc
add
add
aas
roll
hlt
repnz
xchg
sub
xchg
xchg
aas
pop
xchg
es
xchg
test
pop
pop
test
aaa
in
int3
repz
pushf
jae
pop
inc
xor
dec
cmc
lret
inc
stos
jne
mov
call
mov
aaa
xchg
rcrl
fcmovu
fistpl
adc
pushf
in
inc
xor
ret
bound
and
add
fwait
adc
xlat
and
jno
push
inc
loopne
outsb
pushf
sub
xor
icebp
lcall
xchg
aas
jge
add
xchg
mov
mov
cmpl
push
je
push
cli
mov
lea
pop
cwtl
push
xchg
xor
xorb
mov
sub
sub
xchg
in
dec
rcl
dec
push
lea
jns
pop
xor
push
pop
cld
mov
dec
stos
imul
fistpll
pop
adc
in
jmp
jne
popf
xor
push
dec
xchg
mov
jbe
cmc
xchg
push
gs
push
cld
sbb
xchg
pop
lock
xlat
aas
ret
push
jns
sub
popf
ss
mov
xor
outsl
push
and
xor
and
push
and
inc
jno
popf
les
in
jae
flds
cld
mov
popa
xlat
cltd
push
or
popf
inc
jbe
or
jb
jb
lods
mov
dec
cmp
pop
je
inc
popf
shrl
inc
push
dec
jae
rorl
call
xchg
lods
pusha
hlt
repnz
pop
dec
js
aas
jmp
cmpsl
fstl
jnp
shlb
fs
adc
movsl
jo
mov
pop
adc
fcoms
sarb
das
push
jno
cltd
lock
pusha
cltd
rcrb
test
orb
loopne,pt
jmp
cmpsb
push
adc
aaa
push
xlat
inc
xchg
fs
sbb
xchg
mov
in
stos
icebp
popf
int
pop
rcll
jo
lcall
bound
cmp
icebp
jo
mov
andb
cmpl
je
push
fs
inc
bound
dec
outsl
xor
stc
xchg
and
test
icebp
insb
gs
jmp
iret
pop
aaa
fsubl
jnp
xchg
pop
jl
push
and
pusha
popf
aad
pop
xchg
and
pop
test
gs
jae
icebp
mov
int
jbe
mov
xor
insb
hlt
hlt
mov
mov
pop
mov
push
popf
clc
cmp
mov
pop
mov
mov
loope
jp
xor
rcll
cmp
lock
leave
mov
call
stos
lock
int
lea
push
mov
test
mov
inc
inc
pop
not
sub
mov
test
push
adc
fdivr
aad
loop
lcall
inc
mov
aad
enter
pop
dec
cld
loope
sarl
jb
pop
add
adc
ja
push
sub
mov
lock
add
and
sbb
mov
push
ja
insb
stos
bound
rcll
lods
repnz
cmc
xchg
cltd
jno
and
inc
push
xchg
jbe
inc
mov
je
outsl
cmp
adc
xchg
inc
nop
jae
adc
xor
std
jg
out
fs
in
xor
movsl
cmpsb
sub
notb
movsl
mov
jg
sbb
ds
push
xchg
lock
jo
vphaddubq
jmp
lods
arpl
push
jecxz
loope
sbb
mov
push
push
rcr
test
dec
mov
adc
fdivrs
mov
adc
testb
shlb
cmp
lock
call
mov
popf
mulb
out
pusha
jbe
xor
hlt
dec
xchg
push
jb
lds
or
lock
rcrl
jge
xchg
mulb
jae
lods
loopne
cwtl
inc
negl
xchg
pop
outsl
dec
insb
push
add
nop
push
adc
shrb
jcxz
movsl
dec
xchg
mov
or
inc
pop
stc
lock
aam
arpl
mov
insl
es
lcall
aam
adcl
and
psllq
fsubl
in
pop
mov
or
insl
pop
mul
mov
rcrl
cmp
dec
shlb
pop
sahf
scas
insl
outsb
adc
outsl
mov
jge,pn
adc
addr16
push
ficomps
cmp
decb
dec
ljmp
or
mov
out
dec
pop
movsl
mov
adc
jg
shll
lea
aad
mov
insl
mov
push
mov
outsl
pop
aad
mov
insl
jnp
xor
mov
mov
cmp
push
and
aad
push
ret
cmpsb
loopne
sahf
xchg
jo
fisubs
lock
scas
xchg
popl
aad
push
andl
out
jge
mov
xor
jo
pusha
popf
insl
fsubp
leave
lods
pop
out
push
adcl
cmp
addr16
int
xchg
outsb
pop
push
xchg
sub
add
sbb
and
sbb
in
cmp
nop
sub
mov
push
dec
or
outsl
mov
mov
sahf
in
xchg
and
inc
lcall
adc
mov
pop
outsl
push
sti
pop
adc
xchg
stos
je
jecxz
sub
jno
or
dec
std
je
xor
jl
xchg
pop
inc
mov
inc
jae
sbb
xchg
insb
add
xchg
movsb
pop
cmp
jae
pop
pushf
fistpll
dec
fistpl
mov
pop
insl
dec
push
fbld
sub
xor
roll
pop
hlt
jbe
jnp
sbb
testb
hlt
cs
pop
mov
negl
cmp
lea
insl
sub
add
push
cmp
cs
rclb
imul
mov
stc
xchg
xchg
pop
mov
jmp
rorl
pop
test
pop
pop
push
mov
xchg
push
lods
rorl
cmp
out
rorb
jnp
or
mov
mov
fs
pop
jle
cld
outsl
inc
mov
popl
adc
jge
adc
data16
dec
ja
cld
pop
aas
fadds
lock
jae
adc
jo
lds
jge
insb
mov
xchg
mov
nop
and
jnp
pop
and
push
jae
ss
jb
lock
mov
xchg
loope
adc
loope
and
sub
movsb
scas
pusha
lea
dec
test
xchg
fcompl
repz
int
outsb
xor
bound
addr16
je,pt
and
xchg
lcall
push
pop
jp
das
insl
jo
xchg
add
lea
jbe
dec
jmp
add
and
add
push
pop
shrb
push
cld
insb
dec
cmp
or
orb
sub
stc
or
jp
test
cmp
ficompl
or
push
jmp
sbb
fstps
sahf
scas
cltd
insl
pop
cltd
fnstenv
push
aas
mov
lret
in
pop
dec
lock
ficoml
jb
inc
mov
sub
cmpsb
daa
jl
mov
xchg
scas
fisttpll
pop
jno
or
push
aam
dec
adc
dec
xor
scas
xor
adc
pop
je
int
cmp
aaa
sbb
movd
into
jmp
ror
leave
or
jp
adc
mov
test
adc
lds
or
pop
mov
rcll
lret
mov
pop
xor
popf
push
push
push
push
inc
sub
mov
and
mov
es
out
mov
sbb
fstpl
stc
pop
inc
dec
cld
mov
addb
push
das
mov
call
jne
fnsave
shlb
std
jb
jp
pushl
jbe
jo
imul
xor
jl
es
daa
add
popf
inc
clc
mov
scas
pop
cld
cmpl
or
jno
lea
cmpsb
int
or
outsl
stos
pop
lret
adc
bound
hlt
es
sbb
icebp
lret
bound
dec
mov
cmp
stos
in
dec
adc
pop
xor
lods
xchg
add
pop
mov
jo
jnp
sbb
arpl
mov
stos
xchg
das
mov
mov
cmpsb
adc
push
cltd
stc
jmp
jl
cli
add
iret
inc
int
pop
pushf
stc
xchg
inc
xchg
and
push
cld
cmp
sbb
lcall
and
scas
mov
lea
int3
xor
sbb
and
inc
loope
xor
jle
fdivr
mov
sub
xchg
iret
xor
inc
jecxz
mulps
fsubl
xchg
lods
insb
mov
into
mov
lret
mov
xchg
sub
lock
mov
mov
sub
std
xchg
xchg
and
add
addr16
ja
stos
push
aam
xor
ret
sarb
mov
lds
je
dec
imul
push
sti
pop
xchg
lret
jge
push
push
sub
mov
bound
mov
fdivr
popf
repnz
xchg
and
pop
jg
mov
and
dec
das
push
test
adc
xchg
hlt
pop
or
cmp
mov
adc
adc
insl
push
pop
jns
fcompl
stc
sbb
xchg
cmpsb
lock
cmp
adc
push
pop
movsl
add
outsl
in
push
ljmp
jge
pop
cmp
jg
jno
add
sub
out
out
cmpsl
xchg
ds
imul
fstps
out
ret
mov
ja
fstl
xchg
ret
inc
lods
mov
or
insb
inc
in
sbb
test
icebp
inc
ja
loope
inc
fbstp
lock
bnd
mov
int3
lret
loopne
loopne
stos
or
roll
loop
sbb
inc
mov
push
leave
lock
fisttps
sarb
shll
or
xchg
xchg
inc
cmp
mov
jno
adc
fidivs
inc
inc
stos
mov
pop
or
mov
popf
dec
xchg
addl
pop
dec
add
lods
dec
outsl
or
push
xchg
pop
or
loop
neg
ret
cltd
cld
aam
sub
xchg
xchg
loopne
lret
inc
mov
ja
dec
mov
fs
sub
jnp
jle
inc
jmp
push
bound
stos
in
outsl
pop
xchg
iret
adc
outsb
mov
pop
movsb
jbe
sub
std
add
mov
out
xor
cmpl
fwait
xlat
dec
fisubrs
adc
sbb
jecxz
mov
dec
movsl
pusha
cltd
js
stos
lock
sub
pop
xlat
in
cmc
jb
xchg
sbb
xchg
jbe
aas
push
adc
cmpsl
jge
sub
dec
int
pop
pop
sub
aam
pusha
fsubrs
mov
pop
cltd
in
sub
fs
pop
fsubs
pop
fmuls
mov
outsl
aad
pop
cs
jae
popf
or
add
push
fcoms
adc
add
mov
jns
sub
pusha
sahf
fcoml
mov
cltd
ficoms
icebp
les
insl
mov
and
loopne
sarl
xchg
jno
aad
pop
jae
xchg
push
les
into
mov
out
jno
xchg
jg
les
mov
fstl
push
push
push
mov
fimuls
push
dec
dec
adc
dec
insl
rcl
cmpl
cmp
cmpsb
sub
ds
icebp
insl
or
jmp
ljmp
jno,pt
mov
xchg
cmpsb
push
and
loope
in
mov
inc
pop
jnp
add
popa
pop
mov
icebp
xchg
sub
cmp
test
or
in
insb
popa
lcall
pop
xchg
orl
jo
pop
ficoms
loope
inc
mov
push
xor
jae
clc
pop
add
push
cli
cwtl
ret
outsl
jp
stos
sti
dec
arpl
add
cs
cmpsb
mov
xor
mov
cmpsl
sub
ja
mov
and
push
jno
jnp
inc
arpl
rcrl
notb
push
aad
and
divb
bound
pop
sbb
or
adc
jg
ds
pop
lock
and
ds
sarl
mov
fucomi
in
pop
jb
inc
call
cmc
ret
inc
rcrl
repnz
add
jae
insb
pop
in
push
lods
xchg
fldt
xor
adc
addr16
pop
fxch
xchg
lods
dec
mov
out
outsb
xchg
out
std
fwait
lret
dec
xchg
fucomip
shll
push
test
addr16
sbb
dec
or
test
mov
push
repz
std
xchg
jae
xor
cltd
mov
inc
xor
jge
add
jb
jns
jmp
int
xchg
jno
subb
popa
xor
mov
iret
test
jl
loope
cli
bnd
mov
cltd
insl
pmuludq
adc
and
ss
mov
push
xor
pop
push
mov
vcvttps2dq
idivb
faddl
inc
cld
sahf
in
imul
lock
js
add
mov
popa
iret
jo
cmpsb
xlat
mov
dec
push
aas
mov
sub
movsl
enter
fldenv
pop
sarl
xchg
test
and
and
dec
inc
testb
pop
mov
mov
ja
pop
test
movsb
xchg
cmp
xor
addr16
dec
repnz
movsb
loopne
and
outsl
dec
ds
cmpb
jle
ljmp
lock
jle
movsl
or
loope
or
mov
sbb
dec
push
inc
jge
inc
cld
cs
fs
roll
push
orb
pop
lods
and
fistpl
ficoms
pop
hlt
mov
sub
ljmp
lea
jno
lock
push
es
cld
je
inc
push
inc
movsl
iret
jb
xor
mov
mov
rcrb
xchg
or
clc
and
fiadds
jno
or
jns
pop
or
sub
mov
subl
sub
and
dec
mov
lea
push
test
mov
inc
jge
push
sbb
and
jne
nop
imul
fyl2x
push
push
in
xor
sub
call
jmp
jns
cwtl
mov
push
ret
xor
push
push
sub
jnp
jp
sub
sub
pop
xchg
sahf
push
out
mov
aaa
loopne
jne
leave
lock
push
mov
lods
ja
and
inc
rclb
sub
mov
xchg
pop
cwtl
inc
test
shlb
adc
rclb
mov
xor
jo
and
cli
fisttps
push
push
pop
inc
hlt
adc
scas
dec
js
cltd
xchg
bound
shrb
rcrb
dec
fdivrl
xchg
fsubrs
mov
leave
lcall
pop
push
insl
insb
push
sub
push
cli
shrb
mov
pushf
sub
es
or
xchg
scas
add
mov
aad
and
xor
mov
pop
and
imul
sbb
xchg
add
sbb
cmp
rcll
lcall
scas
int3
into
scas
out
rclb
sarl
mov
frstpm(287
rorl
push
mov
mov
push
jbe
cli
push
cli
cmc
mov
out
arpl
push
popa
ds
nop
lahf
push
lret
arpl
rolb
inc
xchg
push
sbb
jno
gs
push
mov
hlt
idivl
mov
movsl
shrl
lahf
cmpsb
out
ss
shl
and
das
mov
pop
imul
rclb
les
push
stos
out
or
cltd
mov
js
stc
into
or
adcl
cmp
xor
pop
notl
pusha
jle
std
mov
aaa
add
sbb
je
pop
into
lods
xchg
and
stos
shlb
fdivrl
cli
and
sbb
xor
xchg
adc
int3
lret
insb
mov
push
aam
sahf
xchg
in
loope
rcrl
pushf
loope
aas
pushf
call
pusha
test
movsl
push
inc
das
rol
and
lcall
in
cli
cmc
aad
mov
mov
pop
mov
pusha
push
insl
imul
out
sub
mov
xor
test
out
cli
lods
insb
popa
incl
mov
outsl
pop
mov
pop
jg
sahf
aas
add
pop
xor
jo
jne
jne
pop
stos
or
inc
sbb
adc
push
subl
lock
adc
jbe
jnp
mov
lahf
popfw
push
sbb
pop
fisttpl
jge
dec
in
cmp
adc
shll
push
push
mov
pop
aas
push
ja
add
enter
push
add
sub
stos
je
jo
jb
jno
mov
mov
mov
xchg
clc
jge
js
dec
mov
jae
aas
jge
xor
loop
jge
jne
mov
or
nop
outsb
dec
sub
cmpsb
xchg
lcall
in
outsb
jne
dec
push
outsl
jno
sub
shll
int3
shrb
pusha
add
mov
stc
std
ret
push
mov
sarl
xor
cmp
cmp
cmpsb
fistpll
xchg
repnz
xor
imul
mov
jae
cmp
jo
repz
adc
adc
shl
loop
in
dec
push
lcall
ja
aad
leave
cmpsl
cmp
out
jmp
aad
fs
xor
jns
enter
adc
iret
push
push
xor
jb
xor
jmp
jno
mull
nop
jne
cmc
inc
popa
dec
push
ljmp
lock
lret
mov
sarl
xor
dec
lds
mov
dec
fld1
lret
sub
pop
xor
shll
jl
mov
imul
sbb
gs
sbb
push
or
in
call
nop
cwtl
sbb
mov
ja
popf
or
les
pop
loopne
ds
ficomps
inc
pop
ds
enter
pop
in
bound
push
mov
push
loope
mov
mov
pop
addl
push
push
xchg
xor
xor
add
jne
imulb
call
jno
cmp
cmpsl
sub
add
adc
xor
sub
lret
or
push
add
out
xchg
and
je
movsb
sti
aaa
iret
in
inc
jnp
push
and
sub
add
out
jge
aad
inc
imul
pushl
mov
or
aam
es
or
pop
in
sub
mov
pusha
movsl
cmp
cli
cltd
push
stos
imul
rol
mov
jo
cltd
sub
push
push
pop
outsl
leave
cld
mov
mov
jae
inc
cmpsl
jnp
pushf
adc
dec
mov
popa
shrl
add
mov
aaa
scas
jp
in
push
sbb
jecxz
or
enter
pop
jae
jnp
adc
sub
outsl
add
sub
loopne
push
inc
out
sbb
jns
adc
subl
sahf
cwtl
or
mov
cmp
lcall
mov
cmp
mov
fidivrs
gs
jns
cld
pop
lahf
xchg
dec
mov
cltd
push
or
sub
les
dec
jl
adc
bound
repz
hlt
shlb
dec
cmp
fildll
or
fstl
dec
dec
jo
rcrb
scas
fistpll
push
xor
and
lret
mov
aam
sub
push
sahf
popf
push
adc
dec
cmpsl
jne
jo
mov
ret
xchg
out
xchg
mov
dec
std
ret
adc
xchg
cwtl
jns
and
mov
adc
ret
add
popa
sar
cld
adcl
mov
and
mov
arpl
shlb
xchg
jnp
dec
jp
xor
pop
andb
xchg
and
stos
repnz
inc
cmpsl
popf
push
xchg
cmpb
xor
mov
rorb
and
push
fcoms
xchg
out
push
or
push
xor
push
pop
pop
inc
push
inc
add
pushl
jle
cmp
push
push
dec
mov
inc
repnz
mov
xchg
xor
xor
adc
mov
xor
push
popa
jne
lods
int
or
jb
popf
bound
pop
xor
dec
push
xlat
jo
jo
dec
dec
sbb
testb
cli
fdivrs
js
pop
clc
adc
sbb
imul
hlt
in
loope
push
fstps
mov
xchg
jge,pn
gs
push
or
stc
xchg
data16
jne
lret
push
fstpl
lock
dec
xor
fnsave
lock
fidivs
push
push
mov
xchg
xchg
mov
dec
inc
in
dec
out
cmp
pushf
iret
mov
test
stos
push
test
andb
pop
leave
lea
bound
or
push
aam
popf
lods
sbb
or
xor
mov
xchg
lock
sti
je
sbb
mov
add
fildl
sbb
mov
push
add
fdivs
imul
jnp
fstpl
sub
pop
xchg
or
or
sbbl
fs
cld
pop
jge
xchg
xorb
js
inc
mov
hlt
cltd
inc
in
shl
xor
and
das
cltd
test
out
xchg
ficoml
arpl
xchg
mov
outsl
push
adc
sbb
jmp
push
add
nop
mov
jbe
xor
test
jb
mov
pop
jnp
lock
lret
out
xor
sbb
xor
fs
jge
pop
jecxz,pt
cmp
sbb
inc
xchg
int
mov
insb
hlt
cmpsl
sub
jbe
push
push
fcmove
lahf
mov
fisttpl
or
je
fwait
stc
jbe
clc
rol
popf
xchg
push
hlt
sub
cld
scas
insl
sub
popa
mov
add
std
in
shrb
test
push
adc
lret
aad
nop
cld
push
loope
mov
rcrl
push
sahf
mov
xchg
push
lahf
sub
dec
shll
in
cli
iret
push
xor
push
lret
ss
mov
out
jae
inc
mov
inc
sub
rcrb
lds
mov
and
pusha
sub
test
jmp
test
sbb
push
movsl
mov
sub
adc
sub
jg
stc
jmp
pushf
jne
dec
out
imul
jmp
xchg
mov
xchg
insl
jge
xor
mov
and
sub
lods
sbb
mov
mov
jge
jnp
insl
out
sbb
or
lods
inc
inc
sbb
pop
hlt
and
mov
push
je
sbb
ret
sub
test
test
shrl
imul
inc
fdivrs
in
lret
jle
fistpll
push
rcrb
sbb
jae
mov
jl
mov
mov
lods
dec
and
and
mov
cmpsb
mov
push
inc
cmpsl
lods
in
sub
pop
and
add
xchg
negb
adc
push
lcall
fisubrl
mov
rolb
shr
push
pop
sbb
leave
jno
pusha
sbb
add
lahf
xor
rcll
jge
adc
arpl
outsl
ret
jge
les
in
mov
stc
pop
je
dec
into
sbb
sub
std
lret
dec
movsl
dec
push
push
inc
mov
mov
push
ds
inc
push
je
cld
pop
testb
mov
push
jae
ds
dec
dec
and
into
sub
aam
inc
adc
popa
dec
push
adcb
test
jnp
push
movsl
loopne
sti
testl
push
gs
ss
jno
dec
xchg
pop
mov
pop
mov
fwait
dec
mov
aad
loope
int
and
int3
xchg
cltd
adc
insl
sub
add
dec
mov
or
mov
xchg
xchg
lahf
xchg
test
je
cmpb
test
jle
xchg
xor
sub
js
sbb
jo
orb
mov
sbb
jns
mov
outsl
xor
leave
cwtl
push
cld
test
fdivs
inc
sbb
arpl
jns
xor
out
hlt
mov
or
inc
mov
and
jle
mov
xchg
into
pop
inc
push
imul
fsub
call
aaa
dec
pop
nop
jae
cmpsb
jmp
bound
jle
mov
loope
mov
push
xor
xchg
inc
std
enter
outsb
imul
jmp
pop
mov
mov
aas
in
inc
mov
cs
pop
lahf
js
stc
cmpsl
inc
jo
mov
xor
sub
rorl
loop
outsb
cmc
sahf
int
rcl
mov
aad
mov
mov
jns
popf
xchg
lea
mov
xorb
and
push
mov
setge
mov
inc
negb
xor
sbb
pop
add
pop
mov
in
aam
jecxz
test
popf
cmp
pushf
add
mov
adc
adc
inc
nop
mov
push
sbb
jb
std
mov
mov
push
cld
sarl
lahf
add
mov
mov
popa
stos
mov
xor
mov
in
cmp
sub
dec
inc
mov
jle
inc
arpl
leave
push
mov
jge
pop
push
push
adc
xchg
push
jnp
stos
fwait
adc
push
cmp
and
xor
dec
cmp
and
hlt
jecxz
lea
sti
ret
notb
scas
hlt
mov
insl
cltd
cmpsb
jge
sar
mov
and
cmp
xchg
mov
fmul
pop
cmp
iret
xchg
repnz
popf
sti
loope
xchg
dec
bound
xor
pop
gs
push
cmpl
adc
leave
mov
pushf
dec
lret
sub
pushf
imul
dec
pushf
fsubrs
sbb
mov
lcall
cwtl
push
jge
mov
mov
fsts
push
filds
inc
jmp
cli
push
cs
adc
sbb
test
sti
mov
pop
and
outsl
in
ret
xchg
jg
push
push
cmp
sbb
clc
sbb
lods
outsb
jnp
jae
mov
in
xor
jo
jmp
pop
pop
roll
popf
mov
pop
stc
jo
sbb
pop
jns
jne
pop
shl
sub
movsl
jne
orl
in
ss
dec
out
add
xchg
stc
jne
icebp
mov
jecxz
mov
push
mov
shrl
mov
popa
push
pushf
in
outsb
stos
int
icebp
mov
bound
sbb
mov
pop
adcb
push
or
jle
lods
inc
in
inc
mov
xchg
pop
push
lods
and
inc
pop
in
fbstp
push
call
dec
movsl
cmp
jae
mov
subl
adc
out
scas
mov
outsb
cltd
pop
aad
add
loopne
ss
ror
mov
movsl
cmp
pop
pop
cmp
insl
pop
jmp
pop
or
sbb
jnp
scas
dec
xchg
pop
jg
movsl
push
jae
jnp
outsb
xor
push
mov
ds
jnp
add
push
jecxz
icebp
push
clc
adc
outsb
adc
push
cmp
rcl
jg
mov
mov
mov
ret
out
and
cmpl
mov
push
loop
inc
aad
pop
mov
jmp
mov
call
sbb
ds
mov
mov
jg
loope
ret
fmuls
jno
test
lahf
inc
rclb
rclb
xor
pop
aad
lcall
sub
mov
mov
adc
ret
pop
xor
jnp
mov
and
pop
push
sbb
jne
and
lods
mov
add
pop
dec
mov
inc
cmp
leave
cmpsb
rorb
mov
xor
jge
pop
push
notl
pop
jge,pn
arpl
push
mov
push
imul
mul
cs
mov
stos
popf
jb
pop
scas
mov
jg
mov
jge
gs
int
dec
iret
mov
dec
jns
dec
cmp
shll
int
mov
xchg
mov
ja
cmp
jno
insl
fsubrs
and
push
cld
mov
or
jns
imul
dec
xchg
test
mov
dec
hlt
adc
xor
sub
lock
cld
les
sbb
mov
mov
pusha
mul
mov
cld
insb
dec
dec
scas
lock
push
rcll
sub
js
stos
pop
xchg
mov
pop
jno
mov
pop
jg
mov
shrl
mov
sahf
fs
or
repz
xchg
loope
push
dec
add
add
xor
leave
pop
mov
inc
lea
lods
or
in
xchg
imul
xchg
jns
xor
lods
jne
orl
sahf
stc
jo
out
popa
mov
hlt
popf
dec
int
cld
mov
xor
dec
and
pop
mov
jne
dec
push
cmc
pop
outsl
imul
inc
fsubrs
ret
lret
jae
arpl
into
mov
fbld
xorb
shll
movsb
jns
into
lds
cld
add
aad
bound
push
push
jnp
and
dec
insb
test
jnp
mov
jno
imul
lret
lea
iret
sbb
pop
push
pop
adc
adc
sub
js
iret
pop
fldenv
xor
adc
xor
jmp
lahf
inc
stos
jle
popf
push
push
mov
dec
test
pop
xchg
ficomps
mov
mov
jmp
inc
jmp
sub
ds
dec
inc
je
in
jae
pop
sub
test
cld
mov
jne
mov
sub
test
outsb
dec
pop
sub
cli
pusha
std
inc
adc
dec
sbb
popf
scas
dec
jno
dec
fmull
and
rcll
ss
mov
loope
stos
cmc
xor
pop
xchg
xchg
dec
dec
push
out
and
cmc
jno
pop
dec
lock
xchg
push
push
mov
push
dec
jae
inc
push
sub
pop
mov
lea
popf
mov
aad
je
cld
add
lcall
cmp
enter
inc
orl
icebp
add
js
inc
mov
out
pusha
mov
jmp
xchg
cld
jl
mov
pop
clc
call
pop
pop
movsb
sahf
adc
shrl
pop
push
push
ret
icebp
movsb
rclb
jnp
mov
insl
imul
sbb
test
sbb
jecxz
adc
pop
pop
aaa
jl
jo
sub
jne
jae
sbb
mov
aaa
cwtl
jge
sbb
push
push
cltd
js
call
sbbl
cwtl
out
pop
cmpsb
pop
rcr
inc
xchg
mov
xchg
sahf
test
lods
add
inc
dec
insl
test
sub
and
test
addr16
mov
sub
and
lock
lea
into
mov
cld
push
fldt
outsb
pop
insl
into
test
xchg
clc
sbb
test
pop
std
scas
fs
mov
aas
out
popa
xchg
in
jo
negb
or
je
xchg
sbbl
pusha
mov
jge
jnp
ds
jno
gs
mov
sbb
pop
ficoml
aad
xchg
out
jns
inc
push
pop
imul
add
iret
and
iret
add
push
inc
push
adc
push
out
push
arpl
rol
cs
or
xchg
loop
push
add
pop
sub
jl
test
cmp
scas
xor
xchg
and
mov
popa
xchg
andb
or
dec
mov
fs
push
push
jae
mov
iret
add
add
ror
rorb
xor
sbb
popf
lock
imul
repz
jnp
jge
lods
sub
pushl
movsb
in
dec
jge
and
out
hlt
repz
shlb
sti
inc
dec
into
enter
cmp
cld
test
test
insl
jne
mov
jae
dec
outsl
nop
push
fldcw
mov
xlat
push
jp
sbb
cwtl
jbe
push
gs
cmp
jnp
mov
mov
ficoms
push
int
xchg
mov
lds
arpl
push
add
add
outsb
sbb
popa
xor
adcb
dec
arpl
jo
sbb
mov
cld
or
lahf
pop
mov
sub
aaa
dec
mov
mov
cltd
push
movsl
adc
jg
mov
push
mov
adc
shr
lea
add
out
jno
cmp
mov
xchg
mov
outsl
into
jge
mov
fs
dec
mov
stos
andl
or
fimull
in
ret
outsb
js
push
fnstenv
fdivs
in
sbb
bound
cwtl
jae
xchg
mov
xchg
lods
aad
pop
mov
dec
cmp
jp
cltd
pop
jo
or
hlt
and
push
pop
jl
int
add
loope
aam
shrl
push
inc
arpl
xor
jne
pop
int
sbbl
jns
lcall
and
pop
in
lret
add
sahf
pop
das
jl
dec
dec
faddl
sub
rol
nopl
xor
mov
in
out
mov
leave
dec
std
pop
outsb
andl
push
in
stc
andb
sub
xlat
jae
popa
cld
cmc
out
dec
in
std
test
sti
pop
das
movsl
pop
sbbb
dec
js
mov
je
andb
cld
cmp
inc
pop
das
cmp
addb
jge
aas
add
fbld
aaa
lahf
dec
mov
xchg
adc
icebp
sub
mov
out
clc
into
lret
test
clc
shl
cmp
fst
lock
shld
fwait
push
cmp
pop
adc
add
mov
jbe
adc
insl
push
into
data16
mov
pop
aas
dec
mov
push
adc
pop
and
xchg
sbb
adc
leave
push
push
das
inc
aad
mov
jge
jne
dec
dec
in
inc
mov
test
fistl
mov
lea
and
gs
loopne
xchg
hlt
pushf
push
jg
mov
push
lock
push
loopne
rcrb
hlt
add
outsb
dec
insl
or
pop
in
or
in
xlat
loope
test
push
loope
pop
sub
jecxz
roll
pop
push
cmpl
sub
sbbb
icebp
iret
pushl
jge
stos
mov
mov
ds
jne
pop
iret
rcll
enter
gs
lahf
outsb
scas
bndldx
inc
aas
dec
and
out
aad
mov
insb
jg
dec
cltd
inc
cmp
nop
pop
dec
and
jl
and
mov
nop
pop
jbe
test
jns
jae
inc
cmp
sti
pop
sbb
int
in
dec
js
xchg
sbbb
pusha
pop
xor
bound
xlat
fisttpll
jmp
call
mov
or
dec
and
mov
aam
mov
xor
inc
pop
int3
shll
pop
outsb
sub
nop
pop
cmp
aad
xchg
sbb
push
pop
sahf
sti
pop
test
loopne
rolb
lock
or
and
mov
js
jae
cmpsl
negl
mov
adc
int
xor
repz
lcall
jg
adc
jle
jmp
subb
outsl
adc
adc
xor
loopne
mov
sbb
sahf
das
movsb
rclb
lea
adc
mov
mov
fsubs
in
pop
or
xchg
inc
and
shll
cltd
pop
and
mov
outsb
jne
in
stos
fidivrs
shll
pop
cmp
pop
es
fnstenv
mov
xorb
call
fwait
popf
das
pop
dec
mov
test
fbld
push
jnp
push
sbb
leave
jno
inc
cmpl
pop
aas
ljmp
mov
repnz
outsb
sahf
dec
push
adc
xchg
aam
push
push
xor
clc
fstps
pop
outsb
movb
xchg
push
andl
maxps
pop
or
xor
push
inc
outsl
cmpps
jmp
fbstp
std
adc
add
adc
xchg
lock
popf
push
push
xchg
adc
dec
stc
or
pop
push
pop
fisttpl
les
xor
cmp
jne
lret
or
push
out
out
mov
sbb
loopne
andl
pop
mov
sbb
mov
jnp
and
enter
dec
repnz
in
shrl
movl
lds
sbb
subl
adc
popa
pop
pop
iret
push
and
push
mov
das
aad
nop
adc
xlat
inc
jb
jge
pop
pusha
testb
popf
or
cwtl
inc
test
rcpps
xchg
add
cmp
xchg
push
sub
cmp
and
pushf
out
inc
jmp
push
ret
xor
push
jmp
enter
push
mov
popf
scas
or
test
nop
rcrb
fstpl
cmpb
and
dec
inc
push
sbb
enter
lods
pop
sub
or
xor
outsl
or
or
insb
jns
push
jp
jb
ja
or
push
push
cld
pop
dec
cmp
pop
jno
push
mov
sbb
cwtl
iret
push
insl
pop
pop
adc
push
dec
pop
cltd
cmc
mov
xchg
loope
imul
into
mov
in
lods
mov
sarb
or
mov
sub
loop
das
mov
dec
pop
pop
pop
dec
js
fadds
mov
or
sub
xchg
popa
sub
enter
push
test
push
pop
lea
lret
into
push
push
int
push
push
sbb
push
jnp
cs
dec
fnstcw
cmpsb
inc
cwtl
sub
push
inc
call
cmp
mov
sahf
cld
ret
sub
test
pop
pop
outsb
out
je
push
jge
mov
jns
cld
push
popa
add
insl
scas
pop
adc
xchg
pop
cmp
dec
dec
dec
loop
mov
fnstsw
sahf
pop
nop
test
adc
bound
xor
dec
mov
jnp
inc
sbb
cmp
xchg
into
outsl
dec
pusha
int
xor
mov
iret
movsl
add
into
or
bound
dec
mov
lret
mov
sbb
out
xchg
testb
adc
xchg
jbe
aam
push
int
jno
lea
fcmovnbe
push
inc
push
cmpsb
inc
pop
in
fldcw
repz
fldl
jmp
lods
mov
loope
repnz
jns
lods
in
loop
push
mov
sub
jl
hlt
xor
xchg
and
fldenv
frstor
lret
inc
jge
insl
push
sub
pop
pop
mov
mov
xor
fwait
adc
and
pop
mov
cmpsb
in
aas
fnstcw
pop
mov
addb
pusha
pop
pusha
out
jns
pop
rcrb
xchg
in
cltd
pop
inc
add
mov
in
dec
pusha
negb
repz
mov
das
jmp
inc
push
push
lea
push
in
stos
lret
push
jnp
cmp
mov
sbb
xchg
jl
mov
push
pop
jle
pop
push
fldcw
fdivrl
add
mov
bound
lahf
adcb
xchg
push
mov
cmp
add
into
xchg
shld
movsl
inc
add
pop
mov
cmp
sub
pop
je
nop
mov
mov
or
and
movsl
xor
jle
arpl
ds
dec
jg
mov
jne
or
in
pop
hlt
push
insb
inc
pop
push
xchg
push
out
mov
aam
rcrl
adc
sti
pop
push
dec
and
mov
iret
sub
xchg
xchg
push
pop
cmpsl
gs
repz
jmp
aad
pop
sbb
in
imul
dec
cmp
jns
mov
xchg
out
je
mov
lret
xor
push
cld
pop
loope
in
and
sub
lds
mov
lea
add
push
jno
xor
add
mov
jns
mov
mov
xchg
xor
push
dec
mov
pop
pushf
mov
cmp
int
es
test
insl
mov
jle
cmpl
lods
add
cmp
mov
push
pop
sub
dec
je
push
push
scas
ret
inc
jns
xchg
push
and
ja
xlat
pop
icebp
inc
push
jmp
pop
mov
pop
pop
mov
xor
xlat
xchg
rorb
iret
outsl
icebp
cld
in
lods
xchg
clc
lea
aam
inc
cmp
xchg
inc
and
adc
mov
xchg
adc
fnstsw
push
xchg
push
movsb
cmc
hlt
pop
and
or
aas
pop
pop
adc
dec
stos
cmc
push
cmpsb
pop
xor
fwait
cmpsb
pop
adc
cmpsl
fistpll
jle
arpl
xchg
jne
outsb
shll
jno
shlb
pop
jbe
push
xchg
cmp
popa
lea
push
cmpsb
xchg
sub
int
outsb
pusha
mov
wbinvd
push
dec
add
loope
or
shrb
pop
cld
cmp
xchg
lock
push
or
cs
jle
adc
daa
outsb
adcb
sbbb
dec
xchg
mov
pusha
jae
xchg
and
xchg
xchg
outsb
inc
xchg
cmpsb
aad
pop
push
pop
jae
xchg
aas
outsb
adcb
jge
mov
fldl
cmpsb
xchg
out
inc
pop
jg
jae
xchg
mov
mov
xchg
fst
adc
ds
ja
pop
outsb
inc
xchg
jo
mov
insl
xchg
push
lods
xchg
in
and
aad
pop
outsl
jae
xchg
neg
aas
outsb
jo
mov
lock
cmp
inc
lds
into
push
push
negb
jo
xchg
cmc
aad
mov
cmp
pop
lea
lea
aaa
lea
xchg
add
std
clc
int
mov
es
outsb
jno
bound
stc
dec
and
insb
mov
sahf
add
sub
and
dec
xchg
mov
movsl
in
test
test
jge
popa
icebp
repz
mov
gs
stos
test
pop
lea
push
popa
pop
and
int
push
scas
imul
stos
adc
dec
dec
in
test
cwtl
pop
xchg
push
mov
cmp
popa
mov
fimull
fsubp
push
mov
repnz
out
sarl
pop
xchg
daa
in
pop
fistl
mov
add
imul
nop
insl
lcall
repz
mov
push
push
in
or
cmp
bound
repnz
mov
lds
add
int3
lcall
ja
jge
shrl
cmpsl
cmp
xchg
mov
pop
pop
xchg
jo
xor
pop
pop
popa
gs
jno
jne
jge
test
cltd
popf
mov
dec
mov
mov
rorl
loope
jmp
stc
std
add
adc
sub
cmp
push
fstl
push
jb
jp
jle
xchg
dec
sahf
mov
mov
xchg
rcl
fimull
out
out
repnz
add
or
adc
xchg
sbb
and
fdivs
jbe
dec
arpl
repnz
into
sbb
push
xchg
popf
mov
push
sahf
xchg
mov
outsl
daa
xchg
in
jmp
imul
push
adc
xor
push
int3
xchg
imul
and
pop
repnz
int
mov
push
fwait
push
inc
xorl
lcall
outsl
jb
push
push
adc
xchg
push
xchg
and
jge
push
int
aas
cmp
fisttps
lods
inc
out
push
sbb
add
mov
cmc
adc
leave
leave
rorl
sub
or
out
lret
add
out
mov
je
push
out
int
push
ds
add
push
sub
fstpl
shrb
and
inc
and
inc
daa
insl
sub
jae
neg
mov
mov
push
imul
in
xor
fistpl
insb
repnz
lock
aam
and
ret
scas
ljmp
in
int
mov
pop
movsb
ss
sahf
or
fwait
loop
and
je
or
ljmp
test
call
dec
xchg
add
loop
aas
mov
pop
pop
pop
dec
frstor
sbb
add
lahf
jo
int
outsb
repnz
mov
in
cmp
or
xchg
icebp
lret
push
jae
sahf
mov
rolb
out
and
rcrl
adc
add
xor
nop
jne
fucomp
and
loopne
repnz
mov
adc
movsl
inc
jb
inc
pop
xchg
sahf
mov
xlat
mov
mov
out
add
mov
iret
nop
rcl
fisubrs
push
cmp
leave
insl
jmp
cmp
pushl
sub
enter
das
cmp
stos
stc
fisubrs
sahf
and
jle
push
mov
js
addr16
lcall
aaa
sub
or
imul
into
stc
adc
xor
dec
addb
outsb
shrl
lock
std
pop
sub
push
cmp
fidivs
leave
in
sub
add
imul
xchg
gs
or
and
das
cmp
lret
sbb
and
data16
in
int3
sbbb
add
repnz
lret
cwtl
xchg
in
xor
sub
sbb
xlat
pusha
fdivs
addl
cmpsb
daa
cmpsb
pop
fwait
out
cmpb
lret
and
jne
sbb
hlt
fs
adc
push
out
and
fidivrs
xorl
pop
daa
out
std
cmpsb
lcall
mov
es
in
jne
ret
push
cmp
push
out
orb
xchg
adc
jae
xchg
jmp
lahf
mov
int
xor
fmul
inc
push
push
in
int3
rol
push
outsb
push
pop
pop
test
std
push
push
arpl
mov
jo
lret
cltd
int
push
cmp
out
movsb
popf
push
push
fisttps
push
xchg
add
lahf
push
push
push
inc
fsts
push
dec
mov
popf
roll
ret
push
lock
daa
dec
mov
add
imul
ja
jg
xchg
fwait
lahf
mov
mov
mov
iret
dec
rcl
fcmovnu
jecxz
jmp
dec
repz
incl
pop
or
dec
adc
sbb
and
sub
dec
xor
cmp
inc
inc
dec
push
dec
push
pop
pop
pusha
fs
js
addb
pushf
mov
dec
mov
mov
rorb
fcomp
loopne
call
clc
cld
add
or
dec
adc
sbb
and
sub
push
xor
cmp
inc
dec
dec
ds
imull
icebp
jecxz
dec
repz
sti
lret
data16
cmc
dec
add
xor
mov
push
fimuls
add
int
or
or
push
leave
mov
repnz
jno
aas
aas
adc
fisubrs
rolb
stos
mov
mov
or
and
lahf
push
mov
push
loop
push
push
push
repnz
incb
out
lds
lcall
sti
jns
xchg
into
pop
scas
lea
pop
adc
lea
leave
mov
out
inc
jne
sahf
out
in
out
cmp
adc
orb
push
xchg
lcall
int
push
or
int
push
or
push
stos
xor
sbb
dec
lcall
sbb
popa
mov
not
std
jb
mov
push
iret
nop
mov
sub
adc
dec
and
push
push
leave
jecxz
ljmp
lcall
pop
jle
mov
popf
jae
stos
mov
popf
sbb
cmp
insl
mov
mov
adc
inc
xor
mov
das
into
dec
pop
jnp
add
jo
inc
mov
into
push
dec
ljmp
gs
xor
outsb
jp
adc
cs
mov
dec
std
cmc
shlb
dec
push
push
inc
adc
fnop
loope
or
mov
lods
sbb
sbb
gs
fnsave
sub
mov
int
jnp
femms
sahf
jbe
pminsw
push
or
lcall
jno
decb
sbb
cmp
or
cli
pop
loop
push
or
inc
push
mov
sbb
jno
sbb
cld
or
jno
cltd
scas
enter
lahf
push
push
fnstsw
mov
out
mov
fsts
cmp
rcrl
lcall
cs
adc
pop
scas
test
in
pop
cmp
mov
cmpsb
test
push
frstor
int
push
movl
cli
aam
sbb
push
cwtl
jno
aaa
xchg
jbe
mov
add
ficoml
out
lcall
icebp
sbb
cwtl
test
icebp
xor
sub
int
neg
mov
in
jge
in
sub
stc
nop
dec
leave
adc
shll
adc
or
push
mov
int
cmpsl
mov
pop
mov
aam
ret
icebp
add
loop
in
iret
pop
lret
jge
jo
in
mov
aam
push
lret
mov
ljmp
sbb
sub
xchg
xor
imul
outsb
out
jo,pn
jae
idivl
pusha
nop
ds
inc
push
aam
sbb
int
test
ds
xor
dec
cmp
fmuls
inc
dec
sub
aam
push
lret
in
js
mov
add
aam
rol
mov
int
jnp
push
xchg
cwtl
or
in
leave
mov
int
in
jp
fbstp
or
popf
outsl
popl
in
cld
iret
imul
decb
shlb
shl
push
xchg
push
mov
add
mov
and
jns
push
xchg
les
pop
stos
repnz
push
pop
out
rclb
sahf
or
xor
rolb
cmp
mov
pop
cmpsb
mov
jbe
and
cmpsl
enter
movsl
mov
and
fdivrs
adc
pop
jmp
int
jo
jb
jno
rcr
xchg
xor
dec
mov
and
pop
lcall
leave
add
ffree
sbb
jmp
cmpsb
mov
arpl
pusha
nop
jae
mov
mov
cli
roll
sbb
test
push
rcll
cltd
ljmp
lds
test
dec
xchg
push
add
rcrl
int
mov
leave
xor
jle
cmp
sahf
xchg
inc
lahf
popf
cmc
inc
pop
pop
pushf
bound
pop
jl
push
repnz
pushfw
and
add
pop
mov
inc
xchg
xchg
test
cmpsl
test
int
cmp
and
shlb
xorb
cli
incb
aaa
or
shll
lds
pusha
sub
les
decb
je
xchg
dec
lcall
lods
push
sub
xor
lahf
lds
lds
or
lahf
addb
cs
in
rcll
outsb
fs
push
scas
push
pop
sub
loop
imul
js
repnz
int
sbb
test
inc
fistps
xor
fcoml
and
lods
xor
scas
pop
push
std
fildll
jb
mov
flds
pop
and
mov
jmp
lds
pop
push
dec
je
and
test
push
jne
push
cli
movsl
bound
push
mov
mov
push
mov
pop
das
cmp
adc
adc
bound
and
movsl
or
stos
popf
scas
addr16
sahf
pop
xchg
cmp
push
mov
hlt
push
and
lods
fnsave
jb
mov
nop
sbb
xchg
push
cwtl
xor
cmp
pop
xchg
jno
and
xor
jbe
xor
rcrl
hlt
push
pop
repz
dec
mov
mov
push
nop
mov
in
cltd
out
mov
jge
mov
fsubp
mov
mov
shlb
arpl
xchg
push
lcall
loopne
sbb
fbld
jae
jno
and
xor
aas
cli
popl
mov
ret
pop
sub
out
imul
cmc
loope
adc
xor
xchg
push
push
int3
out
pop
je
cltd
xchg
test
bound
push
loope
push
loop
sarl
push
sbb
adc
iret
pop
cmp
xchg
adc
dec
stos
inc
movsb
inc
or
in
bound
lock
jae
inc
fstp
mov
push
push
mov
rorl
mov
hlt
push
shll
popf
jg
sub
lcall
xchg
push
sub
add
jp
mov
xor
jno
das
push
out
int
jno
je
xchg
and
fdivs
pop
push
xor
movsb
cld
inc
rcrb
pop
mov
mov
icebp
pop
insl
xchg
pop
loope
xchg
outsb
das
aad
pop
gs
jno
xchg
jge
insl
insl
xchg
jno
jne
fidivrs
movsl
out
push
insl
mov
out
pop
xchg
xchg
out
push
lods
sarl
push
fstps
mov
lcall
jle
out
pop
add
jae
xchg
mov
gs
dec
mov
lcall
outsb
jo
xchg
icebp
icebp
lea
push
fsubrp
push
sub
iret
mov
lods
xchg
mov
int
dec
lea
enter
stos
movsl
jo
xchg
push
or
pop
push
pop
or
lock
movsl
mov
jno
xchg
jne
cld
test
sub
sub
arpl
stos
push
daa
insl
aam
lods
pop
inc
int
or
push
cmp
int
fwait
mov
sub
nop
push
inc
pop
and
inc
and
add
and
rclb
lret
loop
sub
fistps
into
push
xor
lods
out
insl
shl
jg
push
lret
rolb
dec
inc
dec
jge
pop
rclb
lahf
mov
pop
push
dec
dec
mov
and
pop
push
xor
lea
in
lock
shll
xchg
popa
jno
in
push
lret
lea
enter
adc
push
inc
cmp
pop
xchg
orb
arpl
aas
mov
xor
rcll
insl
popl
sbb
insl
xchg
add
pop
insl
or
into
repnz
xchg
aad
int
sub
xchg
outsb
popf
xchg
xchg
lea
sub
cltd
pop
pusha
lods
jae
xchg
mov
fisubrs
xchg
std
aad
int
and
lds
outsb
xchg
int
jae
xchg
lods
and
aad
sbb
pop
xor
fldl
pop
xchg
dec
dec
ja
mov
push
mov
dec
nop
cmp
fstl
pop
lods
popf
jnp
outsb
insl
das
pop
xor
add
xchg
mov
subb
pusha
aad
pop
aas
das
jae
xchg
paddusw
outsb
out
xchg
iret
pop
mov
dec
loope
adc
outsb
into
xchg
sahf
aad
pop
dec
sbb
outsb
jge
pop
jno
pop
mov
pusha
xchg
jle
leave
popf
ds
div
dec
push
out
test
stc
icebp
inc
test
pop
push
dec
push
shr
adc
or
fwait
das
sub
mov
and
ret
or
pop
ljmp
aas
fnsave
cmp
stos
jae
xchg
mov
xor
add
mov
sub
pop
jae
xchg
sbb
lea
xchg
adc
adc
in
push
clc
fbld
pop
and
dec
test
mov
push
lods
xchg
insl
jbe
mov
iret
push
stos
dec
jge
jo
aam
insl
jns
sarl
mov
frstor
xchg
mov
shrl
inc
mov
push
pop
dec
je
xchg
orb
int
and
pop
stc
out
add
rclb
in
xchg
adc
lods
mov
icebp
inc
or
dec
xor
iret
pop
add
xchg
sbb
dec
cmp
jb
cs
ss
or
jg
dec
dec
je
aaa
fwait
out
push
aas
arpl
mov
push
rolb
push
dec
les
cld
dec
inc
notl
fmull
sbb
or
in
pop
in
lea
fsubl
cmp
jmp
sbb
mov
jbe
mov
subb
push
pop
iret
mov
and
addr16
es
subb
xor
and
pop
inc
add
cmp
dec
push
jnp
xchg
mov
lock
dec
ror
push
sahf
jecxz
sub
test
loope
jae
dec
mov
sbb
dec
inc
xlat
jo
les
jle
mov
push
xchg
into
pusha
loope
fistpll
push
cmp
adc
jne
fisttpl
mov
dec
mov
cmp
mov
stos
push
xchg
pop
and
pop
pushf
std
dec
loop
fsubrs
xor
push
int
fs
xor
out
repnz
popa
inc
sub
cld
movsl
sbb
call
dec
inc
test
mov
rcrb
sub
or
aam
pusha
inc
mov
xchg
dec
lcall
inc
mov
dec
enter
xor
rol
mov
fstp
push
adc
inc
jnp
push
dec
mov
lcall
lods
or
andl
andl
jecxz
sbb
imul
push
inc
call
loopne
aas
fidivrs
xchg
les
gs
sub
dec
xchg
push
inc
into
cmp
loope
adc
cmp
sub
dec
inc
lods
cmp
outsl
scas
insl
mov
addr16
dec
push
daa
dec
mov
sub
mov
or
mov
dec
out
inc
push
stos
mov
dec
and
jmp
jns
pop
mov
dec
jb
add
sbb
cli
add
push
enter
lock
push
mov
xchg
dec
cmp
lods
xchg
loop
inc
dec
mov
gs
inc
xchg
push
mov
jo
pop
out
mov
pop
jl
ds
les
movsb
pop
pop
sub
scas
lea
aad
push
or
outsl
scas
iret
mov
mov
add
push
or
push
inc
aad
push
mov
rcr
mov
adc
in
in
xor
es
int
push
add
out
sbb
and
out
add
jne
fdivrs
xor
pop
sbb
ficompl
repnz
xor
cli
jg
or
ljmp
bound
sub
mov
or
insb
dec
cmc
gs
xor
cli
pop
fistl
and
push
fisubrl
xchg
sar
nop
fs
push
inc
ja
inc
mov
lds
daa
sarl
mov
pop
push
mov
out
lea
je
and
punpckhwd
or
and
sbb
sbb
adc
std
sbb
pop
pushf
adc
cs
sbb
sbb
sbb
sbb
sbb
adc
xor
or
mov
aaa
cmp
push
and
jnp
push
sub
xchg
xchg
xchg
mov
sub
push
sub
push
sbb
pop
je
inc
shlb
xchg
loopne
hlt
dec
sbb
faddl
sub
push
xor
lahf
add
adc
nop
lea
popf
loopne
lock
and
xor
inc
or
inc
cmp
inc
outsb
inc
jle
mov
inc
scas
inc
mov
inc
cmp
inc
ja
xchg
inc
ret
inc
filds
inc
adc
inc
sbb
push
xor
leave
cmp
jp
ret
dec
push
dec
dec
test
dec
pop
add
out
push
in
scas
es
cs
ss
mov
fsts
test
xchg
push
sub
push
push
mov
cmp
cmp
mov
xchg
adc
pop
loope
fwait
fwait
mov
lret
sub
das
mov
push
mov
sbb
fwait
popf
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ljmp
sbb
jl
sub
cltd
cmp
lds
lret
inc
lret
mov
movsb
lret
loopne
adc
inc
imul
sbb
push
push
ljmp
jo
xchg
in
and
fldl
jo
inc
mov
cli
rcrl
mov
mov
mov
mov
add
jbe
xlat
iret
ds
pop
add
sbb
imul
repnz
xchg
push
cs
xchg
inc
mov
aam
cld
mov
jmp
rclb
inc
lock
ss
pop
adc
adc
jmp
and
jmp
mov
imul
push
imul
jl
pushf
aam
sbb
je
xchg
mov
aam
hlt
aam
hlt
sbb
cmp
xlat
inc
cmp
xor
mov
xchg
je
xchg
out
mov
aam
hlt
mov
adc
push
int
je
nop
jo
jb
cmp
ja
test
imul
jmp
xchg
jo
fiadds
inc
dec
inc
stos
dec
fildl
inc
and
inc
js
pushf
inc
int3
inc
add
sbb
test
xchg
xchg
mov
xchg
mov
mov
cmpsl
mov
mov
push
inc
std
fwait
adc
pop
jg
gs
icebp
loopne
xchg
std
sbb
pop
ds
inc
mov
loopne
clc
inc
cmp
loope
or
and
mov
mov
mov
mov
mov
mov
arpl
mov
mov
mov
mov
je
fistps
sbb
sbb
sbb
adc
and
in
adc
out
xor
inc
mov
inc
ret
inc
nop
inc
mov
in
mov
lock
adc
aas
xor
inc
and
dec
mov
jle
mov
lret
leave
in
xor
sbb
aad
icebp
jg
inc
xor
inc
pop
inc
jg
mov
inc
dec
inc
in
xor
add
mov
dec
inc
test
pop
xchg
mov
mov
je
jmp
sbbb
sbb
inc
cmp
push
dec
and
dec
cmp
test
out
mov
mov
mov
mov
mov
dec
pop
xchg
cmp
shl
push
fsubp
xchg
xchg
dec
inc
or
jbe
test
enter
push
mov
cmc
ss
inc
add
inc
inc
mov
xchg
rol
fcmovb
adc
iret
leave
jmp
adc
mov
imul
ljmpw
out
insb
jg
cwtl
inc
jb
lret
or
mov
pusha
fwait
lods
fistpl
popa
sbb
add
incb
or
jge
imul
dec
leave
sub
pop
xchg
sbb
pusha
inc
push
add
dec
es
sub
add
shlb
movsb
xor
dec
repnz
hlt
sub
mov
or
and
or
imul
jmp
mov
insb
jae
fwait
fwait
mov
adc
and
add
loopne
hlt
mov
cmc
xchg
jbe
das
divb
push
mov
dec
dec
testl
dec
enter
sbb
lcall
sete
jp
or
lea
xor
std
ret
inc
push
or
jno
test
inc
dec
fwait
scas
xlat
lret
jb
push
unpcklps
xor
xor
push
rcrl
in
es
cs
shl
dec
xor
xor
xor
xor
xor
xor
outsb
pop
push
das
lea
xchg
das
cs
push
pushf
sub
adc
xor
fiadds
pusha
mov
inc
addb
mov
shr
cmc
lods
loopne
lock
and
xor
add
subb
inc
sbb
pop
xchg
lret
xchg
jae
jmp
mov
or
subb
movsl
xor
xor
dec
pop
pop
inc
xchg
fwait
lods
fistl
sub
je
xchg
in
sub
adc
xor
xor
xor
xor
xor
xor
xor
xor
fldl
inc
pop
inc
test
push
fdivl
fst
inc
pop
or
sbb
jbe
mov
adc
out
xorb
out
xor
cmp
dec
sbb
in
outsb
sbb
mov
inc
shlb
cmp
xchg
xor
xor
dec
inc
push
inc
cwtl
mov
lock
and
in
jg
add
xor
cwtl
mov
minps
push
jno
xor
dec
arpl
icebp
adc
daa
inc
shlb
jle
add
xchg
ss
mov
ret
lahf
cmp
add
ljmp
and
ret
cltd
cmp
sub
cld
iret
aad
xor
push
aam
hlt
push
adc
xor
xor
xor
push
jg
std
push
inc
pop
dec
mov
ja
mov
cmp
fstl
adc
into
stos
lahf
jg
add
adc
and
shrl
lds
xchg
adc
lock
fistpll
dec
push
fidivs
and
jmp
in
popf
das
lea
adc
pop
test
ja
aaa
fstpl
test
fldl
sub
or
push
cmp
xor
popf
test
xor
aas
push
xchg
cmp
in
xor
jne
xor
inc
inc
test
adcb
and
jo
shrb
in
ss
xor
xor
jno
sbb
ljmp
call
and
xor
jge
out
ret
xchg
rcrb
push
insl
out
lret
imul
testb
lds
mov
mov
push
je
xchg
jle
mov
sahf
hlt
scas
adc
xor
xor
xor
fisttpll
aaa
aas
inc
push
jp
movsl
cmp
fisubrs
into
xor
sti
aaa
aas
inc
loopne
lock
add
ret
dec
inc
push
xor
sahf
cmp
pop
dec
aas
dec
pusha
dec
xchg
jmp
and
mov
aam
hlt
into
xchg
out
repnz
leave
je
xchg
mov
aam
hlt
inc
adc
xor
xor
xor
xor
xor
xor
sbb
inc
cmp
xchg
pusha
scas
pop
es
cs
ss
mov
mov
adc
loope
aaa
loopne
lock
lods
in
jmp
in
ret
in
imul
vpackssdw
push
loop
cwtl
xlat
add
dec
push
push
call
stos
leave
push
lret
ror
loop
cli
lret
or
outsl
das
sub
xchg
pop
adc
push
nop
mov
jmp
rol
cld
lds
xchg
addr16
imul
sahf
adc
icebp
jge
xchg
push
into
sbb
rcrb
adc
jl
push
and
and
inc
mov
jmp
push
mov
repz
lret
ljmp
scas
mov
inc
pop
inc
imul
int
push
xchg
adc
and
inc
inc
dec
js
fists
push
cmc
sbbb
iret
mov
fisubs
out
cs
mov
lds
push
loope
push
loopne
mov
inc
imul
pop
je
shlb
push
pop
in
fwait
sbb
pop
cs
pop
fmul
sbb
sbb
and
xchg
mov
mov
into
loope
iret
sbb
adc
in
jne
iret
leave
pusha
leave
jo
lock
jmp
sub
out
inc
pusha
inc
jo
loopne
lock
xor
es
adc
xor
xor
ja
cmp
pop
sub
ds
outsl
fdivrl
sbb
nop
iret
mov
mov
jl
aas
mov
pusha
mov
orb
into
and
sub
popf
cmp
jmp
in
jle
sahf
loopne
shlb
incb
pop
push
inc
jg
scas
pop
mov
out
inc
incl
inc
pop
inc
das
mov
pusha
lret
jo
or
lret
mov
pop
aas
loopne
lock
sbb
xor
test
xor
mov
in
adc
or
lret
mov
sahf
xchg
scas
arpl
out
sbb
mov
scas
xor
add
test
xorb
add
push
xchg
xor
pop
popf
push
fsubp
add
movsl
xor
cmp
inc
adc
or
lret
xor
add
pop
mov
pop
push
mov
bound
adc
pop
adc
sub
inc
sub
mov
mov
insb
iret
not
verr
or
dec
test
xor
ljmp
loop
int
pop
pop
das
in
rol
xor
cmp
pop
and
mov
fwait
xlat
ss
mov
sub
loopne
push
pusha
push
adc
aas
add
jmp
push
dec
out
insb
popa
cld
mov
mov
mov
push
int
fs
jmp
mov
sbb
bound
push
decb
and
lods
dec
frstor
lea
jle
dec
and
jno
out
pushf
add
adcb
push
push
xor
mov
sbb
mov
shl
sbb
rcrb
and
adc
adc
push
jbe
inc
enter
aaa
jnp
or
int
fimull
fwait
sbb
xor
add
bnd
idivb
into
xor
pop
mov
shr
stc
dec
insb
call
loop
imul
sub
fidivs
rcll
push
add
ds
pop
add
jnp
mov
insb
lret
pop
lods
mov
int
sbb
mov
mov
orl
jle
inc
loope
sbb
xchg
xorl
jmp
add
xor
add
jmp
push
pop
data16
insb
xor
insb
ljmp
xchg
ds
pop
into
pushf
bound
add
aad
jle
dec
pop
jno
sbb
loope
lds
bound
mov
sub
cmc
push
ds
orb
add
push
jle
hlt
imul
aaa
xor
xor
xchg
and
enter
or
mov
and
cltd
dec
cmpsb
cmpb
cmp
or
add
dec
in
cmp
and
out
lea
test
push
push
or
fsts
fidivrl
lea
and
adc
xlat
add
fsubrs
add
int3
push
lea
sub
xor
mov
mov
dec
ljmp
dec
fnstsw
movsb
mov
and
out
and
nop
leave
and
lahf
out
jo
lahf
mov
jne
and
cmp
push
mov
stc
pop
xor
adc
nop
push
je
inc
jns
fistl
nop
lds
out
fsubp
test
dec
test
cmpsl
and
inc
imul
xchg
inc
xor
sahf
mov
test
cmp
cmp
add
out
aad
mov
lods
mull
adc
popf
mov
jge
fwait
xchg
cli
movsb
fisubl
clc
cwtl
fstl
xchg
frstor
push
xor
sbb
xchg
insl
mov
ds
pop
fcomi
in
arpl
out
out
ljmp
lock
jle
or
or
push
shrl
pop
and
arpl
mov
outsb
adc
jmp
bound
mov
int
popf
mov
xor
pop
loope
cmp
mov
shrl
repz
pop
sub
add
xor
out
push
stc
enter
es
push
shlb
outsb
lds
ss
fisubs
out
addl
mov
sahf
and
xchg
adc
jle
fcom
jb
lds
push
inc
lahf
iret
fldt
cwtl
int
jb
scas
das
cs
outsl
adc
test
push
mov
addr16
push
dec
xor
lock
addr16
lcall
scas
lcall
les
sahf
jne
inc
mov
pop
fisttps
stos
sbb
mov
data16
data16
push
test
inc
pop
fstpl
jbe
dec
shll
fbstp
fsubrs
jl
xchg
test
jle
fisubrl
cli
sbb
and
lea
inc
jecxz
sbb
call
jg
mov
xlat
pop
pop
scas
les
fsub
popf
int
push
fdivp
adc
adc
or
out
aam
sahf
cmp
push
xlat
cli
stos
jl
mov
jbe
sbb
add
push
pop
loop
jecxz
int
fistps
out
out
arpl
pop
mov
mov
xchg
and
and
sbb
dec
ss
out
and
fsubrs
and
mov
cmp
lar
mov
fcomi
jp
int3
repnz
test
mov
jle
pushf
stc
xlat
adc
push
fcmovnbe
sub
shll
out
inc
loopne
mov
mov
in
jmp
sbb
lahf
arpl
shll
adc
or
cmc
jb
inc
push
push
xor
dec
jge
or
dec
out
or
sbb
push
push
icebp
jno
adcl
call
lds
ret
sub
test
rorl
insl
int
mov
cwtl
cmpsl
sub
xor
lods
mov
sahf
out
cs
cmp
pop
sub
es
mov
mov
pop
or
xor
cmp
jno
in
or
sbb
arpl
sub
out
jecxz
push
push
add
hlt
mov
hlt
roll
icebp
mov
lods
nop
fwait
or
cwtl
sub
cli
mov
cmp
or
add
int3
gs
or
xchg
mov
and
loopne
imulb
or
iret
adc
mov
cli
shl
sbb
addb
xor
or
push
ss
jp
in
adc
movsb
je
clc
dec
jae
lret
ja
fucomip
dec
outsb
aad
pop
lcall
icebp
es
fsubrl
aas
ret
jmp
mov
aas
loop
cmp
andnps
inc
dec
xchg
xor
mov
cmp
int
pop
or
repz
in
int3
jp
int
add
add
and
aad
sbb
int
sbb
mov
scas
jle
imull
test
jg
or
adc
nop
inc
xchg
rcrl
and
in
repz
jae
rcrl
movsl
xchg
outsb
ffree
add
and
popf
and
mov
push
pusha
shll
jne
in
shrl
mov
cmp
int3
or
pop
arpl
mov
add
dec
mov
mov
repz
pushf
and
push
adc
int
aaa
scas
or
in
sbb
sub
xor
fldenv
lahf
or
lds
mov
das
loope
xor
popf
adc
lea
addb
jnp
outsl
push
rcll
mov
ficomps
mov
sub
ficoms
fwait
cmp
or
in
sub
in
dec
sub
cwtl
mov
repnz
movsb
cmpsl
xor
les
cmp
bound
mov
lds
pop
popf
adcl
pushf
cmpsb
or
rol
mov
rorb
lods
cmp
fs
hlt
mov
insl
int
daa
sbb
jmp
inc
or
test
pop
je
outsl
dec
fwait
xchg
add
scas
js
fiaddl
hlt
sub
ljmp
dec
loopne
jo
lds
das
fisttpll
loopne
hlt
shll
xor
cltd
cmp
mov
add
xchg
nop
je
in
xor
enter
mov
out
and
jmp
int
call
sbb
xchg
shll
sub
lods
and
pop
inc
mov
mov
icebp
ret
and
cltd
bound
cmp
cmc
ds
sti
fbstp
insb
sbb
stos
mov
xchg
movsb
sbb
xchg
mov
push
mov
or
jno
sub
mov
in
in
xchg
loope
xchg
test
xlat
stos
in
add
mov
adc
or
orb
jo
ss
jmp
mov
adc
mov
cmp
pop
ret
cs
sub
or
loope,pt
daa
jnp
fiadds
and
and
jge
or
push
aas
adcb
in
rcrb
cli
add
jns
dec
sbb
xchg
adc
and
jb
inc
loop,pn
fisubl
pusha
sub
fisubs
test
popf
xchg
idivb
popf
jb
out
xor
outsl
mov
jle
out
sub
jecxz
addb
push
xchg
jmp
mov
sbb
push
cmp
fsubs
incl
inc
ds
jecxz
mov
imul
or
shr
rdtsc
test
lods
shll
inc
sbb
cmp
arpl
cwtl
sahf
mov
or
xchg
pop
xchg
das
and
xchg
out
sub
hlt
leave
sbb
or
pusha
repnz
lret
ret
repz
xor
fdivp
loop
push
and
and
mov
test
shr
push
mov
dec
aad
outsl
cmpb
mov
mov
pop
popl
push
jae
popf
pushf
add
and
sbb
adc
fsts
ss
xchg
sub
jno
out
cmp
xchg
xchg
incl
sub
and
xchg
in
cmpsl
xchg
add
es
fisubrl
dec
aas
adc
push
adc
jmp
mov
loope
rolb
pop
inc
mov
mov
mov
sbb
test
subb
mov
sub
lret
adc
fidivl
jo
add
ret
adc
pop
cmp
adc
and
or
dec
ficoms
in
sbb
ret
sbb
sub
xchg
fildl
cmc
push
adc
sub
xor
and
fildl
sub
pop
or
cmp
add
push
mov
aad
int
pop
mov
cmpl
aaa
push
push
sahf
sub
jle
frstor
ret
push
cmp
loopne
mov
enter
repnz
pop
dec
lcall
lock
sbb
push
cli
sbb
ja
mov
push
sub
and
js
dec
adc
push
push
mov
add
xchg
mov
push
int
cmpsb
sub
hlt
loopne
inc
fisubrs
enter
daa
adc
xor
add
mov
lret
ss
fldcw
testl
sub
pop
dec
sub
int3
pop
push
xor
ret
sub
mov
ds
pop
mov
ret
mov
sub
fistpll
enter
sar
enter
add
ret
iret
sub
sbb
dec
dec
sub
pop
xor
cmp
sbb
ret
jb
jge
cmc
inc
dec
jecxz,pt
cmc
popf
inc
fwait
jle
sub
cmp
dec
repnz
test
aad
and
popf
push
inc
aas
cmp
jno
add
loop
sbb
inc
jne
xor
mov
rcll
add
mov
ds
mov
sbb
xchg
or
add
sti
dec
arpl
xlat
pop
xchg
or
pop
adc
mov
mov
sub
pop
sub
xchg
jbe
sbb
xchg
and
jbe
push
inc
mov
mov
clc
pop
mov
test
jp
push
out
cmp
cwtl
xchg
jbe
push
ljmp
adc
jnp
movsb
xchg
adc
sub
mov
push
or
fnsave
ret
addr16
xor
sti
std
sub
dec
cwtl
mov
jecxz
mov
cmpsl
sahf
and
daa
jae
movsl
lods
jp
sub
imul
xchg
jmp
cmc
les
cs
jb
xor
xor
shrl
into
jmp
sub
fcompl
mov
sbb
mov
in
xor
and
mov
mov
je
add
cmpsb
out
sub
or
jmp
sub
call
das
pop
dec
fdivrs
loopne
push
hlt
std
mov
sbb
scas
sti
mov
lcall
push
sub
xor
pop
dec
adc
scas
test
fisubrl
sahf
push
mov
cwtl
mov
popa
pop
add
int
pushf
fisttps
cmp
sub
jb
imul
addr16
sub
pop
push
inc
mulb
sub
cmpsl
pop
add
and
pop
dec
aaa
and
push
xchg
hlt
hlt
jecxz
in
iret
js
test
out
sahf
daa
or
mov
stos
jge
and
rep
lret
and
stos
mov
cmp
or
add
cmpsl
fld
out
pop
cmpsb
xor
lods
push
cmp
sbb
shlb
pop
jmp
loope
xchg
subl
out
mov
ret
cwtl
int3
aas
push
fsubr
stos
shll
lcall
pushf
repz
sti
sbb
xchg
loope
ret
and
int
inc
xchg
and
icebp
cmpsb
setb
pop
or
testb
push
mov
dec
jns
cmpsb
xlat
cld
add
adc
push
sub
and
fimull
or
aad
aad
and
adc
xor
push
rclb
stos
loope
fimuls
lods
imul
push
push
lret
shll
or
out
bnd
add
push
popa
hlt
adc
pusha
push
test
pusha
sub
cwtl
or
sbb
xchg
call
fdivl
jecxz
inc
insb
mov
stos
jb
add
sub
sub
xlat
rcr
cmp
pusha
and
mov
aad
inc
and
pushl
xor
lahf
add
cmc
or
add
out
cli
and
addb
jo
jge
add
lods
pop
push
pushf
cs
xchg
bnd
loop
cmp
movsb
sbb
pop
and
jecxz
and
xor
push
or
and
push
sahf
jp
fdivrs
loopne
adc
xor
mov
pop
testl
lahf
xchg
lret
insl
cld
jns
scas
xchg
xchg
lret
xchg
enter
xchg
xlat
pushf
fnstcw
mov
adc
js
notl
cmc
mov
call
rorb
jmp
sbb
loopne
sub
out
xor
cmp
es
mulb
mov
into
cmpsb
mov
into
int
cmp
dec
adc
and
mov
pop
outsb
fidivrl
into
mov
popf
pop
stos
add
enter
mov
repnz
add
and
dec
int3
and
sub
outsb
ja
insl
xchg
stos
aas
aam
lea
in
stos
in
xchg
xlat
sbb
or
cmpsl
or
les
mov
jp
jmp
mov
mov
mov
dec
jp
inc
outsb
stos
test
cmp
movsl
fcomip
inc
sbb
pop
jp
imul
loop
dec
xchg
repnz
sbb
mov
pushf
repnz
sahf
outsb
in
sbb
mov
cli
jbe
mov
mov
lock
jp
rcrb
ret
mov
loopne
mov
xor
ret
popa
xor
jmp
test
xor
mov
pop
cwtl
ds
xor
ss
loope
pop
jecxz
pop
ret
clc
add
fwait
js
inc
ret
xchg
loop
std
nop
mov
mov
inc
mov
mov
mov
and
mov
jb
ret
pop
xchg
lcall
xor
sbb
xor
sbb
ret
fildll
aas
jg
push
add
sbb
into
fiaddl
or
ljmp
es
sahf
dec
lahf
pop
es
repz
pop
jns
add
stos
xchg
cmp
add
jbe
push
push
loop
dec
ret
xlat
dec
mov
dec
cmpsb
push
mov
push
or
xchg
inc
push
lds
pop
mov
xchg
push
sahf
popf
stos
lcall
or
sbb
fidivs
xchg
bound
loop
sub
lds
outsb
subb
xchg
jle
cli
mov
push
push
jbe
sbb
dec
ss
sbb
stc
sbb
pop
loopne
cmp
pop
push
sbb
clc
push
push
cs
aam
jbe
push
imulb
sbb
mov
shlb
cli
mov
aam
pusha
xchg
je
sub
adc
adc
xor
inc
pop
cmpsb
mov
ljmp
adc
or
push
pop
sub
xchg
mov
push
dec
bound
or
push
ficompl
mov
gs
fwait
push
jo
cmp
xor
and
sub
stc
out
jne
ss
xor
mov
idiv
out
stos
or
jb
or
stc
outsb
imul
mov
cli
fisubrl
pop
call
out
clc
cmpb
test
bound
cli
adc
out
fwait
stc
jo
mov
sbb
xchg
test
adc
decb
xchg
sbb
das
mov
xchg
push
sbb
fiadds
outsb
sbb
mov
dec
repnz
push
in
sbb
jp
or
adc
add
pop
jge
push
push
or
inc
sbb
es
jp
sahf
sbb
shlb
pop
mov
scas
jne
arpl
and
push
stc
add
jle
jmp
inc
lret
and
out
push
stc
ficoms
scas
mov
push
or
cmpsb
out
cmp
imul
loop,pn
ficomps
ss
sahf
jb
nop
mov
and
lds
fisubl
outsb
mov
cld
test
mov
loopne
in
ficoml
push
pushw
jno
sahf
sub
mov
push
jne
jb
scas
insl
dec
int3
mov
imul
out
xlat
int
pop
pop
mov
lcall
outsl
out
stos
bound
fstpl
or
fldcw
out
xor
leave
out
mov
push
lcall
xor
leave
or
or
push
scas
rcrb
jb
mov
orb
stc
fsubs
push
jno
adc
sub
dec
dec
or
fisubrl
mov
stos
mov
inc
sahf
lahf
ljmp
or
cs
pop
test
adc
into
bound
sub
jb
mov
mov
cli
stos
push
scas
push
jle
sub
cltd
push
lcall
push
mov
mov
or
sbb
cmpsb
addb
cli
mov
dec
test
and
jbe
push
data16
add
push
lds
push
jb
stc
stos
shr
imul
test
scas
out
out
dec
inc
xor
and
outsb
xor
in
mov
add
stos
jb
incb
orb
mov
push
sbb
sub
es
add
data16
cmc
pusha
dec
push
sbb
es
sub
and
xchg
adc
imul
add
mov
push
orl
fiadds
push
push
sub
or
fstpl
mov
stos
or
pop
out
sub
ljmp
outsl
lea
pop
dec
scas
ret
pop
clc
push
outsl
jbe
sbb
ljmp
push
sub
imul
out
out
test
xchg
rorb
add
imul
xor
pop
stos
mov
push
xor
xor
repnz
mov
stc
mov
es
cmpsb
stos
xchg
scas
aaa
movsb
jle
and
push
mov
cs
pop
pop
sub
dec
mov
rol
outsb
jp
cmp
xor
scas
adc
jp
sub
sub
loop
pop
or
mov
mov
loop
dec
xor
std
sbb
rcrl
pop
sahf
scas
sub
imul
sbb
popa
lcall
xchg
and
jg
cmp
and
push
pop
jle
mov
lds
sub
and
cltd
push
jge
pop
xor
loope
lods
scas
sbb
std
mov
cmpsl
fldl
leave
cmp
frstor
mov
push
sbbb
jp
dec
jg
mov
adc
bound
xchg
es
ljmp
fidivl
cli
jbe
fiaddl
ss
sub
xchg
pop
out
pop
out
fwait
or
pop
movsl
mov
push
fisubrl
data16
rclb
xor
adc
push
lret
sahf
outsb
xor
cmp
int
or
xor
push
mov
loop
ficomps
insb
pop
lahf
ss
outsb
out
bound
push
jle
enter
repnz
pop
xor
xor
sbb
stos
in
push
or
rclb
xchg
addr16
imull
adc
xchg
mov
rolb
out
inc
sbb
fisubl
push
dec
inc
jp
cli
xchg
shl
push
pop
cs
out
dec
pop
out
mov
scas
shrb
pop
cltd
lds
pop
jnp
lcall
fnop
jb
sbb
in
and
mov
shlb
xchg
insb
fsubs
push
pop
push
push
xor
dec
push
mov
shrl
mov
enter
dec
lret
ss
and
das
or
push
jno
repnz
push
adc
jp
outsb
data16
pop
push
testb
ficoml
push
push
pop
jp
push
xchg
add
mov
sbb
mov
bound
push
and
lcall
pop
loopne
adc
dec
mov
lds
pop
xor
imul
adc
data16
mov
psllw
sub
loope
cli
pop
daa
outsb
addr16
ss
imulb
out
ss
dec
and
pop
lock
clc
push
int
mov
xlat
iret
push
sbbl
mov
outsb
loop
push
cmpsb
in
inc
fwait
sbb
mov
scas
xchg
imul
out
mov
dec
xor
scas
or
scas
cs
addps
sbb
lds
adc
ss
jbe
shlb
ficoml
aad
rcrb
adc
pop
hlt
scas
add
xor
xchg
and
pop
sub
imul
in
adc
or
in
xchg
xchg
repnz
clc
scas
sbb
cmp
test
xor
adc
sbb
inc
xchg
cli
mov
andl
push
mov
push
test
mov
lods
sahf
jb
xor
push
lcall
mov
or
mov
cwtl
fisubrl
sti
outsb
mov
dec
notb
push
aas
push
int
fcompl
scas
push
xchg
pop
adc
or
push
mov
cli
loop
int
mov
or
dec
xchg
adc
dec
or
sahf
push
test
ficoms
jp
jo
add
xchg
push
jb
jno
mov
or
in
gs
bound
into
pop
mov
xchg
sub
sbb
xlat
adc
mov
fcmove
sbb
jb
or
pop
and
dec
adc
addb
xchg
push
scas
sahf
arpl
xor
pop
and
ss
mov
je
loope
adc
dec
push
adc
inc
es
sahf
repnz
pop
jae
mov
dec
cs
or
js
scas
push
into
cmp
sbbl
rcr
add
sar
out
xor
pop
enter
push
xchg
aas
cmpsb
sbb
pushf
shlb
add
aas
cli
add
cmpsb
stc
xchg
je,pn
int
incb
push
iret
xor
sub
mov
jle
scas
setl
xor
mov
out
fldl
out
add
idivb
std
test
and
aad
scas
jbe
cmp
loop
pop
cli
xor
push
push
pop
mov
shlb
push
mov
sbb
sbb
pop
loop
pop
pop
push
and
xor
push
movsl
cltd
pop
xchg
dec
lds
test
in
cltd
sub
adc
push
jae
mov
dec
in
or
sahf
add
jo
movsl
cli
and
sbb
das
mov
push
es
popf
mov
leave
and
test
push
sahf
or
lcall
push
dec
cli
sub
repnz
jno
push
adc
testb
popf
xor
mov
scas
cli
outsb
push
sbb
stc
aaa
fistl
sub
mov
adc
jle
xchg
dec
adc
mov
push
xchg
or
mov
push
xchg
bound
ljmp
pop
dec
repnz
jbe
adc
adc
mov
xchg
stc
sub
jbe
nop
out
cs
aaa
lds
sbb
decb
pop
pop
mov
cwtl
xchg
jb
mov
dec
push
ss
mov
popa
sbb
xor
and
push
and
mov
jb
jbe
mov
loop
add
int3
jno
cmpsb
pop
cwtl
cld
push
movsb
adc
mov
push
rcrb
xchg
push
xchg
adc
add
bswap
add
xor
jns
pop
shlb
fisttpl
iret
fisubs
jns
pop
sub
mov
pop
ret
sub
out
dec
ja
xchg
lds
rcrb
pop
cmp
cmpb
lcall
push
fimuls
or
adc
or
pop
mov
mov
test
xchg
push
lcall
pop
jbe
in
sub
push
scas
xchg
outsb
lcall
adc
and
or
pop
adc
xor
dec
mov
and
cmp
lock
xchg
scas
inc
sub
scas
push
xchg
cmc
pop
adc
dec
or
cmpsb
fidivs
pop
add
xchg
scas
pop
mov
idiv
xor
push
int
stc
scas
jno
mov
je
or
mov
and
outsb
push
push
test
das
xor
add
fisubl
jbe
sub
mov
scas
sub
sbb
test
dec
ret
cmpsb
mov
imul
fiaddl
rcrb
mov
inc
lds
sub
sbb
push
mov
add
xor
fs
rol
hlt
sub
push
mov
andb
sbb
adc
scas
sub
pop
lahf
adc
sahf
imul
push
mov
loopne
scas
adc
test
sbb
ss
pusha
xchg
ljmp
push
data16
push
adc
imul
xchg
push
repnz
add
jecxz
gs
stos
mov
xchg
bound
popf
mov
pop
repnz
xchg
aam
or
sbb
movsb
jmp
pop
loop
sub
bound
push
inc
pop
repnz
mulb
xor
jb
ret
xchg
sar
imul
pop
bound
scas
loop
inc
cltd
out
popa
cld
and
fidivl
dec
icebp
stos
and
xchg
sub
xchg
xor
mov
filds
outsb
xor
and
out
mov
and
fisubrs
xchg
out
dec
inc
gs
fidivl
inc
push
hlt
mov
mov
dec
popf
pop
out
imul
dec
std
push
push
mov
cli
sbb
or
pop
leave
and
loope
adc
xchg
and
push
pop
jns
mov
lods
int
fidivrs
or
in
pop
sti
dec
ss
or
xchg
inc
in
adc
adc
jbe
mov
fidivl
stc
data16
push
jle
xor
pushf
cmc
push
lcall
cmpsb
or
stc
fmuls
scas
push
and
push
mov
push
add
arpl
ljmp
mov
sub
aam
rcll
adc
inc
adc
negb
js
stos
cmp
clc
push
mov
imul
jbe
pop
arpl
push
adc
outsb
jp
mov
mov
sarb
scas
sarb
in
out
push
pop
data16
push
or
pop
add
push
outsb
push
push
call
cmpb
xor
sbb
push
adc
sbb
jp
lea
and
out
scas
or
sbb
and
push
in
je
adcb
fcomp
nop
adc
and
sbb
pop
fcomip
std
js
pop
xor
aaa
xchg
es
push
sub
sbb
nopl
sub
mov
cmp
sbb
push
jno
xor
mov
mov
pop
push
fcmovu
pusha
stc
dec
adc
or
cld
shlb
and
and
sbb
leave
loop
lret
imul
and
sbb
mov
scas
pop
leave
ficoms
out
cli
jno
rorb
jb
aad
je
add
repnz
into
sbb
mov
cmp
nop
loopne
jle
pop
xchg
stc
iret
mov
in
xchg
or
pop
adc
or
dec
aas
data16
push
aaa
pop
je
jp
jp
repnz
sub
or
outsb
int
shlb
or
and
jp
cs
pop
inc
xor
loop
sbb
mov
or
jbe
out
data16
add
xchg
popl
cli
mov
sbb
push
rcrl
xchg
shll
mov
stos
xchg
add
dec
outsb
xorb
xor
and
sub
mov
or
fidivrs
sub
mov
shlb
xor
push
iret
mov
adc
mov
out
repnz
ficoms
es
icebp
fcompl
pop
and
test
pop
push
push
fimull
and
mov
shlb
and
adc
inc
lea
fidivrl
pop
repnz
add
ret
lcall
cmpsl
adc
pop
jbe
adc
pusha
adc
mov
add
jb
fnsave
test
and
or
jg
scas
jbe
or
dec
enter
or
out
fcomi
stos
dec
cmpsb
dec
adc
scas
clc
or
sbb
push
cmpsb
fdivp
fcmove
jl
jne
adc
mov
ficoms
leave
stc
loop
outsb
sub
sbb
cli
mov
loop
cs
push
icebp
push
data16
and
sbb
xchg
repnz
xchg
add
adc
cmpsb
xchg
or
idivl
jbe
shlb
sbbb
out
push
push
sbb
xor
or
iret
xchg
and
inc
ficoms
push
xchg
mov
adc
shlb
add
push
mov
xor
push
adc
jp
push
rcrb
les
push
cltd
xchg
cli
mov
lcall
subb
data16
pop
pop
mov
sub
push
out
mov
jb
psadbw
and
mov
fdivrp
jle
ds
fnsave
bound
test
and
add
ds
xor
popl
xor
and
cmpsb
mov
sub
std
into
mov
in
in
cmpsl
cs
cltd
test
sub
sbb
or
stos
adc
hlt
jno
push
push
aas
and
into
iret
es
divl
test
push
or
jp
dec
push
inc
notb
xor
repnz
fnstsw
xchg
xor
adc
xor
mov
sbb
and
out
push
push
sbb
push
stos
dec
js
or
jno
mov
ret
pand
jns
adc
push
popa
sbbb
lcall
popa
sbb
in
push
dec
push
bound
mov
adc
call
mov
sub
shlb
orb
push
xlat
ror
push
mov
psubq
xchg
js
ss
das
or
dec
fisttps
sbb
and
or
ljmp
mov
popf
lcall
cmp
and
sub
ljmp
fstps
xchg
fisubs
pop
daa
or
jb
negl
xor
sub
and
fildll
xchg
sbb
push
xchg
sahf
rorb
mov
data16
out
ljmp
std
scas
loope
aas
sub
push
mov
mov
ficomps
and
sub
mov
in
xor
outsb
sbb
jle
call
sub
lcall
ss
sub
and
push
cs
mov
sub
aam
lods
es
mov
popl
add
mov
adc
adc
out
push
or
xor
xchg
xchg
jnp
notl
mov
sahf
lds
adcb
jns
loop
stos
mov
jle
sub
push
fs
pop
jne
mov
rcrb
and
outsb
mov
push
mov
adc
mov
jne
push
adc
dec
jne
cmpsb
xor
adc
add
ljmp
jno
mov
mov
xchg
add
shlb
xor
into
iret
mov
mov
sub
mov
je
nop
push
mov
scas
push
sbb
sbb
aaa
mov
and
mov
in
xchg
into
cmp
nop
pusha
outsb
scas
xchg
push
or
fmul
incl
outsb
cmpsb
push
ljmp
test
xlat
push
out
addr16
jp
xlat
repz
test
mov
xlat
mov
adcb
data16
add
and
adc
cmp
repnz
ja
pop
cli
push
cmc
fidivs
sub
imul
sbb
and
jp
xchg
decb
movsl
mov
call
lcall
stos
sarl
cwtl
pop
imul
clc
out
outsb
fisubrs
jl
shl
fcoml
mov
dec
ret
dec
xchg
add
sub
dec
out
xor
push
pop
xchg
cs
pop
jge
mov
out
push
dec
push
add
dec
cwtl
and
push
and
in
push
add
ss
cs
aaa
dec
push
pop
pop
outsb
stc
mov
scas
arpl
das
push
pop
es
push
repz
lcall
sub
push
jbe
jmp
nop
mov
cs
cltd
jg
outsl
jp
pop
mov
fcoms
pop
and
push
stos
mov
imul
repnz
loop
xchg
cmp
mov
into
push
sahf
pusha
das
shlb
xor
add
push
fsubp
pop
ds
mov
jle
push
cltd
cli
test
jge
sub
test
pop
cld
jle
aas
mov
insl
jge
push
push
push
sub
cld
int
jbe
push
dec
sbb
xor
cld
out
mov
sbb
mov
das
mov
cmp
inc
dec
jle,pn
out
mov
sbb
test
fsubp
pushf
rcrl
jno
jne
mov
adc
dec
add
push
out
adc
in
push
nop
fnstsw
in
pop
or
bound
pop
fdiv
xchg
leave
cmp
outsb
sbb
data16
jbe
jp
rorl
sbb
inc
ljmp
mov
push
loop
stos
sub
inc
incb
outsb
cmp
into
lret
inc
call
adc
xchg
stc
int3
cld
repz
fsubrs
or
mov
cld
outsb
push
lcall
popa
sbb
mov
xor
sub
cmpsb
pop
cs
pop
mov
push
jb
mov
adcb
pop
cli
loop
pop
add
pop
push
xor
popa
fimull
repnz
add
push
cmpsb
popa
outsb
push
push
and
scas
fisubs
lret
or
pop
jbe
jp
shl
jb
bts
push
popa
bound
fidivl
mov
das
push
mov
mov
sbb
and
push
add
rcl
enter
or
xchg
cmpsb
push
inc
es
aas
outsb
xchg
xor
cmp
fs
popf
icebp
scas
mov
mov
xchg
inc
mov
sub
mov
insl
cmpsl
scas
add
imul
push
stc
or
arpl
aas
outsl
test
std
jecxz
and
and
jp
xchg
or
dec
jle
xchg
fisubs
push
mov
push
sub
adc
test
cli
stc
push
or
loop
mov
loop
mov
sub
scas
adc
in
sbb
repnz
cmovp
sbb
test
sbb
pop
xlat
es
push
cld
adc
sub
stc
mov
pop
inc
std
cmpsl
inc
leave
sbb
popa
push
fdivp
cs
pop
mov
lea
movsl
out
scas
pop
lahf
decb
data16
cmc
push
cwtl
or
neg
out
adc
pop
xlat
and
pop
scas
mov
dec
shll
xor
mov
jbe
insl
out
jo
sub
repnz
pop
aam
adc
call
push
add
scas
in
jge
cmpsb
std
lcall
push
shlb
push
out
mov
adc
out
xchg
sub
jl
fidivs
lret
add
push
and
add
cli
notb
into
call
push
dec
scas
pop
add
sbb
bound
test
xor
popf
pop
cmp
out
pop
bound
divps
rcrl
data16
loop
mov
adc
popa
cwtl
pop
aas
pop
adc
or
and
adc
ljmp
adc
xchg
cmpsb
outsb
pop
xchg
or
or
adcb
mov
push
mov
add
shl
add
in
inc
leave
mov
sahf
cltd
ljmp
push
lock
dec
daa
movsl
and
inc
sahf
inc
sbb
or
int3
movsl
sahf
pop
movsl
adc
inc
neg
out
test
adc
push
xchg
xor
xor
mov
inc
das
int
push
mov
jmp
out
in
loop
xchg
scas
jno
mov
xchg
mov
stc
push
sahf
push
jl
mov
pop
rolb
std
cli
mov
bound
or
icebp
es
lds
ret
adc
fimuls
jbe
add
insb
pop
repz
mov
ja
push
and
notb
mov
xor
jno
cltd
pop
and
xchg
test
cmpsl
sub
and
mov
xor
mov
xor
and
loop
push
adc
push
cmp
mov
inc
xor
mov
mov
xchg
loop
sub
fidivs
pop
push
ja
adc
loop
sub
xchg
push
dec
repnz
mov
push
inc
jb
push
decb
xchg
stos
sub
add
dec
xor
mov
pop
xchg
imul
ficoms
lahf
shlb
rcr
push
jno
adc
enter
jbe
nop
adc
adc
push
or
dec
scas
out
int3
and
frstor
mov
sub
jb
xchg
cmp
cmpsl
test
dec
rorb
das
lods
inc
test
xchg
push
sub
sbb
push
popa
mov
testl
cltd
xor
xor
repnz
mov
adc
ljmp
push
pop
lods
and
movsl
xchg
scas
sbb
sahf
xor
push
ljmp
fimull
pop
push
jle
xchg
xchg
pop
adc
loop
andb
pop
xor
push
xacquire
add
mov
sub
cltd
les
jmp
mov
mov
mov
ret
lea
sbb
push
mov
jb
loope
shlb
je
cs
jno
sub
lcall
sbbb
lock
ret
outsl
push
adc
les
stos
xchg
scas
mov
push
and
bound
in
sbb
xchg
push
add
shl
scas
inc
scas
loope
aas
xchg
pop
mov
shlb
repnz
scas
adc
movsl
outsb
fisubl
mov
imul
fcomps
stos
push
cmp
call
das
stos
cwtl
inc
lds
dec
jnp
ljmp
adc
push
adc
stos
xlat
push
out
loope
xor
lods
sbb
mov
add
idiv
mov
in
xchg
adc
push
imul
mov
push
xor
data16
into
jmp
cmpsl
or
ffreep
jns
sbb
cmp
movb
std
movsl
push
fwait
push
mov
aas
aam
push
lret
cmpsb
jns
adc
loop
jb
lods
xchg
sahf
jmp
jle
mov
xor
scas
xor
pushw
dec
mov
jns
mov
push
dec
push
xchg
push
mov
test
mov
cli
and
pop
xor
bnd
jns
out
jno
mov
push
xor
push
dec
pop
scas
stos
pop
xchg
xor
push
adc
mov
sbb
xchg
and
in
stos
lds
pop
jle
push
push
iret
sub
cli
mov
dec
sbb
push
pushw
outsb
adc
mov
push
push
sub
push
adc
cld
cmp
rcll
mov
and
pop
push
lock
push
das
mov
fstl
lds
xchg
ficoml
push
mov
sub
popf
xor
outsb
push
pop
es
repnz
mov
es
sub
fisubrs
jae
nop
dec
scas
lock
mov
stos
pop
negb
aas
arpl
addr16
mov
pop
xchg
mov
cmpsb
stc
mov
outsb
mov
push
leave
xchg
pushf
out
mov
scas
sub
xor
int3
or
mov
mov
pop
jbe
popf
call
xchg
test
jno
insl
mov
xchg
dec
fs
sbb
jp
pop
adc
push
xchg
out
pop
mov
xor
int3
stos
sbb
rorb
xchg
cmp
ja
movsl
mov
mov
cli
sbb
arpl
jnp
xor
repnz
push
sahf
sbb
in
cmpb
inc
push
cmpsb
dec
jp
xchg
mov
sub
push
data16
push
aaa
in
cmp
jp
sub
mov
add
pop
cmp
mov
add
or
cs
mov
mov
or
popa
dec
sub
sub
out
xchg
pop
push
or
repnz
jnp
repz
in
dec
fisubrs
jle
sub
cmp
cmp
ljmp
mov
jmp
jno
push
outsl
jle
add
ficompl
and
sbb
lcall
xchg
pop
cmp
adc
mov
je
mov
xchg
sahf
jae
sbb
ljmp
into
into
fimuls
xchg
loopne
je
add
pop
cmpsl
xor
add
push
adc
sub
pop
push
mov
dec
or
jp
jae
scas
roll
outsb
mov
stc
rolb
mov
es
jns
pop
push
jp
cwtl
push
mov
pop
xchg
stc
rclb
fidivrs
outsb
pop
ret
dec
adc
fidivl
and
mov
jno
stc
or
popa
loop
pop
out
cli
xchg
hlt
into
roll
aas
and
cs
adc
lcall
sub
and
test
jb
inc
push
sub
adc
outsb
pop
insl
or
xorb
xor
pop
sbb
sahf
and
popa
out
sbb
or
adc
mov
psrad
or
test
jns
sub
jno
sub
sub
fdivs
scas
in
std
sbb
sbb
scas
xchg
adc
push
les
push
pop
adcb
rcrb
push
cld
or
sarb
sahf
inc
mov
push
sub
scas
jns
sbb
xchg
push
and
cli
xor
sahf
jge
and
xor
and
sub
xchg
jmp
jp
das
mov
push
out
lea
in
or
sbb
mov
ljmp
jle
test
scas
push
outsb
add
xor
adc
int
sub
sbb
ds
stc
adc
pusha
push
sbb
imul
inc
and
jp
in
rcrb
xchg
sub
adc
push
scas
xor
mov
rclb
ljmp
push
mov
repnz
or
adc
xchg
jb
sbb
xchg
rcrl
out
push
popf
xchg
cs
repnz
adc
push
fisubrl
jne
stos
outsb
dec
lods
sbb
cli
jbe
mov
push
scas
out
outsb
sub
and
gs
jb
xchg
in
int
adc
loop
mov
fcmovb
xchg
jle
dec
mov
stos
xchg
in
and
push
leave
pushf
stos
jp
inc
push
pop
loopne
adc
sub
inc
es
mov
push
scas
push
pop
adc
dec
mov
fcoms
and
outsb
jle
jp
fistpll
es
or
push
pop
in
sub
in
loop
pop
ret
insl
cmp
imul
popa
in
dec
sbb
movsl
pop
mov
mov
jb
push
cli
mov
pop
repnz
jbe
fsubrs
sub
lcall
jl
sbb
pop
xchg
sahf
loop
push
adc
and
mov
and
dec
call
fnsave
adc
dec
mov
popa
push
push
stc
add
lds
or
add
and
xchg
clc
sbb
sbb
adc
add
push
pop
into
xchg
and
mov
cmpsb
popf
outsb
adc
push
push
adc
mov
dec
or
add
sub
scas
test
in
and
push
jecxz
push
cmp
xchg
adc
cli
out
jle
add
sub
mov
repnz
sub
and
imul
dec
sahf
mov
arpl
dec
adc
bound
xchg
push
data16
xor
mov
sub
bnd
adc
stos
fists
ficoml
mov
or
and
fisubrs
fsubs
add
push
pusha
xor
xor
push
xchg
jp
data16
xchg
int3
outsl
inc
imul
xor
add
add
inc
or
mov
jbe
rclb
push
mov
je
mov
sbb
loopne
fisttpll
in
jno
sahf
inc
popa
mov
jb
xchg
ja
xchg
mov
mov
dec
xchg
sahf
xor
clc
scas
xchg
cwtl
cmpsb
leave
and
int3
adc
sbb
shrb
sbb
cmp
mov
mov
or
shll
jae
xchg
and
shll
pop
cmp
pop
jno
pop
cmc
pop
rcr
outsb
jo
out
adc
add
jae
push
lcall
pop
popa
pop
out
cmp
dec
push
loop
push
sub
add
push
pop
sbb
insb
cmp
mov
mov
ja
loopne
divl
jns
out
sbb
scas
dec
xor
outsb
sub
dec
or
stc
mov
jge
sub
bound
pop
in
decb
mov
out
pop
cmp
cmp
jp
insb
pop
cmp
sahf
xor
xchg
and
out
xor
adc
add
jle
and
shrb
push
pusha
jmp
movsl
pusha
lods
push
jl
sbb
push
add
push
decb
adc
or
and
out
pop
or
adc
loop
xchg
xor
and
sahf
sahf
cli
mov
adc
xchg
jmp
mov
call
pop
int3
xchg
xor
sub
push
or
inc
mov
sbb
inc
and
in
leave
push
dec
mov
and
push
shlb
in
add
outsb
leave
push
sub
jns
dec
inc
jp
stos
jbe
cmp
jns
push
jae
dec
xchg
xchg
outsb
jbe
jge
and
xchg
mov
push
xchg
pop
addr16
movsb
sub
pop
mov
loopne
hlt
out
xchg
cmp
aam
jp
mov
inc
scas
ss
imul
adc
std
pop
push
pop
pop
sub
jmp
xchg
push
or
inc
lcall
outsb
out
call
sub
or
ljmp
jns
push
push
fsub
lods
adc
or
sub
and
stc
sbb
sub
fisubl
adc
push
into
bound
fwait
pop
imulb
std
mov
inc
mov
out
xor
sub
xlat
pop
cs
inc
mov
or
xchg
sub
sub
pop
ja
out
jg
cmpxchg
push
repz
sbb
push
mov
ljmp
mov
push
xchg
jno
jb
or
arpl
bound
lcall
jb
pop
dec
rcrl
adc
test
pop
bound
push
mov
xchg
jle
and
pop
pop
push
fwait
mov
mov
push
push
xor
in
call
jbe
lahf
cli
int3
pop
lock
adc
cs
jb
lds
sub
push
ficoms
lods
call
and
ret
dec
int
push
cmpsb
scas
mov
mov
iret
ds
dec
xor
xchg
lods
pop
or
mov
fisubs
stc
xchg
mov
jp
push
xchg
ljmp
or
imul
dec
pop
outsl
or
mov
mov
pop
jecxz
test
fs
and
fcoml
pop
jmp
adc
insl
jno
push
ja
sub
rcr
xchg
add
push
mov
ljmp
push
shl
push
xchg
push
pop
ljmp
shrb
leave
add
mov
mov
push
adc
lahf
fldt
in
push
sub
inc
sub
leave
pop
xor
cmp
jo
leave
jbe
xchg
xchg
jne
sub
clc
addb
pop
pop
ficoms
cltd
push
cli
push
lea
or
es
ljmp
and
push
and
add
lds
fisubl
and
fisubrs
mov
sbb
xchg
sub
stos
nop
in
negb
jb
mov
jle
cltd
and
rcll
add
jmp
int
cltd
xor
loop
bound
mov
mov
inc
dec
push
xchg
pop
or
mov
xchg
mov
imul
out
sub
insb
mov
pop
outsb
mov
dec
rolb
mov
pop
add
dec
mov
mov
repz
cmpsb
or
add
pop
cmpsb
sbb
iret
cli
ljmp
xchg
xor
pop
scas
shl
or
ret
mov
pop
popa
sahf
xchg
data16
push
insb
push
jb
movsl
adc
ds
ret
jl
or
ljmp
outsb
mov
jl
out
xor
sub
xchg
clc
push
pusha
and
jecxz
gs
fadd
mov
stos
scas
mov
adc
sbb
rsm
gs
lea
sbb
lods
std
or
repnz
pusha
outsb
out
sahf
clc
mov
push
pop
and
adc
pop
outsb
push
adc
loop
cwtl
xchg
mov
or
in
mov
stc
int3
lds
dec
and
loop
xchg
or
jo
jmp
or
xor
xlat
sub
repz
mov
rcrl
push
push
addb
xchg
cli
shlb
or
xor
aaa
lds
push
sbb
add
out
mov
mov
push
jp
ret
mov
pop
mov
lock
and
or
das
popa
xor
es
mov
mov
cld
mov
jle
jmp
or
jg
mov
sbb
push
js
sbbb
outsb
lcall
loope
cs
xchg
or
out
sahf
adc
mov
fists
loop
jb
push
mov
sbb
mov
out
cmpsb
repnz
push
xor
xor
sbb
insl
mov
adc
rolb
push
cltd
push
leave
add
sbb
sbb
cwtl
mov
jle
xor
popa
pop
jbe
sub
in
xor
rcll
movsb
sahf
cwtl
ret
shrb
aam
bound
test
or
outsb
loop
dec
and
jp
sbb
sarl
aaa
pop
jbe
push
push
dec
mov
sbb
fidivs
add
or
out
rorb
mov
call
test
push
pop
insb
sub
mov
enter
popf
jge
sbb
idiv
fimull
test
xor
adcb
inc
inc
cmp
shlb
and
dec
fisubrs
lods
outsb
sub
dec
sbb
scas
cli
out
das
mov
data16
bound
jg
pop
sahf
out
neg
lock
xchg
jne
test
roll
mov
std
sub
push
sub
mov
mov
psadbw
xchg
sub
stc
add
adc
cli
repnz
push
adc
push
incb
stc
push
and
shll
or
rorb
cmpsl
sub
pop
jp
cmp
or
mov
jg
std
mov
pop
testb
cwtl
pop
jno
sbbb
cltd
mov
data16
scas
mov
pop
imul
adc
bound
xchg
cmp
dec
or
xor
and
and
mov
outsb
imul
jno
out
icebp
imul
sub
xor
xcrypt-ctr
cmpsl
pop
jp
push
cli
mov
and
into
out
push
fisubrs
shll
push
call
rolb
jno
out
insl
pop
cmpsl
inc
jae
push
addb
lds
push
dec
sbb
adc
xor
mov
mov
scas
or
add
aas
adc
shlb
or
rorl
push
int
xor
adcb
jmp
enter
fisubrs
push
mov
jle
xchg
mov
fstpl
pop
rorl
fnsave
enter
xchg
lahf
and
adc
mov
jno
push
mov
pushl
xchg
std
imul
out
repnz
push
test
jne
xchg
outsb
xor
jno
pop
in
lcall
orl
scas
add
negb
ljmp
rcll
jmp
into
dec
cli
push
xor
pop
ljmp
orl
cs
es
pop
jbe
mov
data16
pop
ret
adc
es
je
cmpsb
clc
inc
dec
and
ljmp
rcll
add
xor
jno
arpl
out
fcomip
push
push
push
fimull
mov
dec
outsb
dec
jb
xor
orb
stos
fimull
jb
push
mov
test
out
shrb
or
pop
pop
and
mov
push
int3
cs
adc
add
ja
daa
pop
loop
sbb
or
and
cwtl
sub
mov
adc
inc
es
jbe
adc
fimuls
sahf
loope
jp
outsb
jno
jae
sahf
add
cs
or
push
xchg
adc
sti
push
push
repnz
xor
popf
or
add
push
push
sbb
mov
lods
or
pop
repnz
movsb
sar
pop
jb
sahf
in
cmpsb
adc
sub
xchg
jbe
or
sub
xor
popf
add
outsb
clc
sub
subb
mov
pushf
cs
sahf
push
out
outsb
pop
ljmp
cli
sub
adc
pop
sub
ss
rcrl
push
movsl
stos
push
loop
push
push
fisubrl
stc
jo
sbb
scas
xchg
xchg
push
loop
pop
aam
sbb
push
fcoml
push
into
cmp
sbb
shlb
scas
in
loop
fnstsw
leave
and
push
mov
push
cmp
cwtl
shlb
dec
push
xor
stc
in
or
adc
or
stos
outsb
and
dec
jae
sub
mov
add
inc
inc
xchg
lock
sbb
adc
add
outsb
jb
xor
rolb
pop
aam
cmp
add
fsubrs
fstps
adc
xchg
aaa
ds
jge
push
or
mov
sub
out
repnz
push
xchg
lods
imul
mov
stc
lret
xchg
ss
adc
sub
lret
clc
lea
fstpt
outsb
add
scas
mov
jle
jns
testb
add
jmp
je
and
lds
xor
pop
jb
nop
xor
stc
jle
sub
ss
add
pop
cli
stos
xchg
scas
push
testb
push
add
jp
sub
jbe
bswap
lcall
pop
xor
sar
bound
imul
mov
jno
mov
pop
push
mov
std
cltd
push
inc
jno
out
stc
imul
push
dec
mul
cs
dec
xor
arpl
adc
stc
insb
nop
cmp
out
push
xor
xchg
mov
jp
fdivrp
mov
fistps
test
repnz
ljmp
sarl
mov
ss
stc
push
dec
sbb
bound
dec
test
push
pop
xor
and
push
mov
push
push
cs
jle
push
popa
cli
jle
mov
cmp
push
scas
pop
test
sahf
stos
notb
push
and
cmc
adc
sub
sbbb
xor
ljmp
fisubs
stos
pop
ret
push
add
jle
data16
push
outsb
jno
adc
fildll
lret
push
push
bound
loop
mov
ljmp
ljmp
paddsw
xor
jle
add
mov
adc
mov
lcall
push
shl
jl
ss
and
mov
push
je
cmp
outsb
push
jne
and
push
in
mov
ljmp
sub
sbb
and
mov
push
inc
push
sub
addr16
ficoms
lahf
push
mov
ljmp
jno
jae
dec
push
cs
and
fisttpll
int3
pop
out
xor
xchg
ss
sub
mov
imul
lcall
pusha
es
xor
lcall
clc
and
push
add
ss
xor
sbb
pop
or
push
cmpsb
mov
stc
adc
inc
pop
shlb
roll
jmp
and
or
cmp
enter
push
mov
sub
sub
inc
mov
mov
movsl
enter
pop
and
mov
adc
jle
inc
push
inc
and
push
sbb
add
adc
dec
xor
ficoms
pop
inc
imul
sub
xor
add
in
rclb
popf
lret
jno
repnz
int
push
cmpsb
mov
data16
mov
add
adc
pop
push
sbb
es
sub
arpl
push
add
or
xor
addps
je
out
jp
testb
iret
ret
fisubrs
inc
in
sub
xor
cmp
jo
scas
outsb
divb
and
push
imul
mov
vmwrite
jbe
inc
dec
adc
push
pop
mov
leave
mov
jno
test
ss
mov
pop
dec
cmp
cli
repnz
test
pop
jne
not
pop
xchg
push
stc
sbb
cs
test
test
push
dec
ss
jle
dec
mov
mov
push
cli
push
ljmp
aaa
add
mov
xchg
adc
mov
or
push
aam
mov
stos
sbb
push
out
cmpsb
xchg
imul
cld
dec
sbb
in
push
xchg
push
aas
push
mov
mov
sub
dec
popa
scas
mov
push
fiaddl
or
stos
adc
cmp
mov
scas
sbb
sub
cmp
out
rolb
into
in
sahf
xchg
scas
addb
jle
es
mov
push
jle
inc
cmpsb
inc
push
jge
sub
inc
loop
jl
cmp
sahf
or
sub
sub
mov
push
sbb
or
leave
in
cs
scas
jle
inc
inc
dec
jno
mov
and
push
add
data16
cltd
sbb
or
mov
movsl
out
dec
cmp
imul
add
jbe
push
testb
jg
and
sub
fisubrs
pop
push
jle
jp
imul
cmpsb
mov
adc
repnz
push
add
adcb
sub
pushf
pop
scas
scas
fadd
sub
jo
add
dec
and
xlat
add
mov
stos
adc
mov
mov
loop
pop
mov
and
repnz
xor
cmp
and
pushf
push
jecxz
mov
sbb
loope
push
push
xchg
fcmove
fst
sahf
push
imul
dec
jmp
out
data16
stc
xor
mov
movsb
sahf
dec
fisubs
sub
out
insb
jb
adc
fdivr
das
xor
sbb
sbb
inc
inc
adc
pop
popf
jle
or
sahf
or
subb
pop
mov
lcall
int3
jbe
out
xor
iret
xchg
and
repnz
ss
cltd
ficompl
aaa
stos
clc
test
enter
or
push
inc
rcrb
in
es
call
scas
mov
xchg
mov
fisttps
add
into
pop
xor
xchg
into
shll
and
aad
stos
fstpl
push
push
out
sub
mov
daa
loop
sahf
jns
jp
imul
arpl
out
push
das
and
sub
arpl
and
push
dec
cli
jne
adc
and
adc
sbb
nop
push
xchg
jle
ljmp
sbb
sub
test
xchg
or
scas
sbb
out
rcrb
pop
insl
pop
xor
or
cs
jle
ljmp
sub
lds
add
xchg
dec
hlt
jl
push
cli
jb
retw
imul
or
cmp
mov
xor
andb
in
stos
imul
sbb
outsb
shlb
xchg
xor
outsb
add
popf
pop
push
inc
dec
fsubl
mov
mov
xor
and
lock
push
xchg
icebp
jno
or
jp
mov
sbb
pop
dec
push
xor
and
push
and
sbb
movsl
stos
leave
mov
jp,pt
and
jbe
rolb
mov
mov
jb
push
push
push
cmp
push
jbe
sbb
or
out
nop
ret
testb
add
and
cmp
mov
push
jb
sbb
pop
test
mov
jns
es
popa
mov
in
mov
out
sbb
push
rcr
sub
dec
push
outsb
sbb
add
xchg
and
out
sahf
nop
pop
clc
push
or
push
push
add
cmpsb
hlt
or
bound
scas
add
or
imul
mov
and
enter
mov
cmp
fnstsw
jmp
bswap
in
data16
scas
push
inc
jp
gs
xorl
sbb
das
pop
je
negb
loop
cwtl
adc
push
psraw
repnz
push
pop
or
es
jge
xchg
adc
jp
je
adc
scas
jle
in
push
cltd
sub
cmpsb
ss
dec
pop
daa
repnz
int3
iret
fiadds
leave
fstpl
and
insl
adc
adc
or
xor
mov
mov
xchg
jp
sahf
mov
cmp
clc
push
iret
mov
mov
je
pop
jmp
es
and
xchg
ficoml
inc
or
test
test
add
and
xor
sbb
pop
into
enter
sbb
or
ds
cmp
shlb
scas
clc
std
rclb
mov
addr16
dec
pop
dec
sbb
in
xchg
jb
push
sub
scas
push
into
xchg
in
or
mov
cmpsb
mov
iret
xor
jo
push
das
rcrb
adc
jbe
push
jl
push
outsb
out
insb
cltd
out
hlt
aad
es
or
orb
or
std
jle
pop
dec
xchg
mov
ds
xchg
bound
pop
adc
repnz
mov
inc
fsubrl
or
imul
pop
fs
pop
mov
call
lods
repnz
mov
scas
lock
fsubrp
push
adc
inc
in
or
sbb
sbb
scas
test
outsl
out
orb
mov
roll
jp
lret
mov
call
scas
outsb
xor
xchg
pop
outsb
jbe
push
sbb
push
test
mov
pop
push
adc
xor
call
dec
xchg
mov
xchg
and
stc
jle
ficoms
mov
pop
or
push
jle
movd
adc
test
xchg
cmpsb
ret
mov
add
popf
test
jno
imulb
jne
mov
mov
adc
stos
jnp
std
out
scas
sbb
out
push
xor
mov
fs
sbb
and
add
mov
movsl
mov
xor
xchg
push
addr16
dec
adc
repnz
mov
sub
ljmp
pop
inc
cmp
jbe
inc
cmpsl
jmp
int
push
xchg
mov
adc
fistl
dec
inc
sub
sub
jecxz
xchg
vaddsd
rcrb
dec
repnz
mov
xchg
push
xor
or
pop
insb
xchg
pop
out
jle
jbe
ljmp
jno
and
cmpsb
pop
out
and
cld
aas
inc
mov
sub
outsb
pop
adc
push
sub
sbb
imul
stc
mov
movsl
jle
adc
bnd
fisttps
xsha1
cmpsb
pop
sub
push
dec
pop
shrb
xor
pop
cmp
mov
sbb
aad
xor
lret
xor
jo
push
or
idiv
cmpsb
bound
push
shlb
push
or
adc
inc
cs
sub
and
pop
loop
sbb
pop
into
push
jns
xor
push
in
fsub
mov
outsb
push
negl
gs
push
xchg
mov
mov
cli
ljmp
fidivrs
push
dec
push
int
mov
sahf
mov
adc
sbb
jp
add
sub
outsb
push
loope
stos
pop
mov
imul
cmp
xchg
push
addl
sahf
outsb
mov
sub
cli
dec
and
rorb
push
sbb
rcl
pop
fiadds
add
pop
sahf
lcall
xchg
pop
and
icebp
jne
sub
or
stc
push
out
jno
add
or
jbe
adc
repnz
adc
push
bound
out
mov
cs
stc
pop
popa
lar
sbb
push
mov
jle
roll
mov
out
push
mov
or
cs
add
jp
loopne
inc
jbe
jge
aaa
addr16
push
cmpsb
stc
aas
xor
data16
mov
or
or
lcall
out
sbb
xchg
scas
lret
ud0
inc
int
push
mov
mov
sub
cs
cmp
jb
and
int3
add
cltd
out
sarl
jo
decl
cli
leave
andb
pop
lcall
icebp
sub
push
sbb
dec
imul
test
cmpsb
addb
xchg
xor
or
jg
push
cmpsb
lock
adc
xchg
cltd
rorb
movsl
inc
jge
mov
push
push
mov
jb
test
fimull
pop
stos
jbe
sub
aam
bound
das
into
cmpsl
lds
cmp
xor
xorb
sti
repnz
xchg
adc
enter
sbb
adc
mov
and
or
pushf
gs
repnz
stos
pop
divb
sbb
mov
bound
xchg
lcall
sub
ljmp
sahf
and
fidivrl
adc
inc
xchg
push
sbb
adc
and
xor
or
arpl
push
lock
adc
cli
scas
in
and
iret
adc
mov
int
jb
sbb
imul
fstl
xor
into
xchg
xchg
xchg
inc
outsb
and
adc
ss
cli
out
sbb
subb
adc
and
lds
add
pushw
sbb
scas
inc
or
pop
clc
mov
fstl
cmp
jno
sbb
rorl
sbb
pop
jmp
cwtl
sub
imulb
psubsb
fiaddl
jmp
outsb
repnz
movsl
adc
cs
stos
cltd
sahf
mov
jne
stc
fsubrl
mov
out
test
test
bound
shlb
data16
xchg
shlb
mov
and
fs
jbe
sub
push
cmpsb
das
add
pop
imul
pop
or
mov
fs
imul
fstpl
add
adc
adc
fisubrs
mov
scas
test
mov
arpl
dec
jmp
and
scas
leave
cs
cmpsb
xchg
lcall
adc
clc
shl
push
push
push
fisttpl
pop
cs
test
stos
push
adc
ficoms
mov
leave
fisubl
xor
aas
out
icebp
adc
lods
stos
push
xor
or
ds
scas
mov
adc
xor
or
out
jp
push
sbb
outsb
cs
jno
bound
pop
jl
ficomps
hlt
cli
sarl
enter
pop
fwait
xchg
push
ret
mov
xor
pop
sub
out
sub
pop
or
sbbb
or
lcall
into
lea
dec
sarb
xor
data16
in
and
or
and
lods
add
add
cmc
movsl
cli
jno
data16
outsb
fisubrl
xchg
sbb
scas
xor
xchg
notb
dec
int3
cmp
mov
test
repnz
jnp
mov
jle
les
test
lcall
jge
or
push
hlt
push
adc
xchg
or
push
rcrb
cs
mov
or
jle
add
adc
xor
xchg
gs
pop
fsubl
es
mov
ss
ret
jl
fldt
or
sub
xor
enter
test
outsl
push
jmp
and
adc
aam
loop
or
pop
mov
and
add
push
invd
push
loop
jp
dec
cmp
jb
xor
daa
lock
fisubrs
add
ljmp
imulb
push
jp
lret
andb
mov
pop
ljmp
sahf
jmp
push
test
adc
mov
test
lcall
stos
data16
fimull
pop
in
sbb
sbb
push
in
cmp
push
sub
push
push
mov
scas
and
out
testb
scas
mov
scas
shlb
xor
adc
mov
es
lds
jbe
movsl
cmpsb
pop
test
cli
xlat
sbb
iret
out
bound
jle
cld
outsb
mov
repnz
adc
push
adc
push
daa
int3
cmc
mov
jle
jno
sub
sub
dec
imul
adc
sub
jbe
adc
mov
out
push
xlat
fwait
push
fldt
pop
mov
out
push
or
cmpsb
pop
cld
dec
rcll
mov
shl
mov
push
sbb
loop
ss
mov
push
dec
or
mov
fsts
out
jmp
xchg
mov
stc
and
sti
sarb
int
jns
cli
pop
mov
enter
xlat
dec
fiaddl
xor
dec
mov
lock
pusha
bound
data16
or
or
push
or
movsl
sbb
test
stos
pop
shrb
int3
decb
movsl
push
arpl
arpl
clc
jns
xchg
enter
dec
pop
loop
rorb
repnz
jns
sbb
xchg
cmc
ret
xchg
adc
push
or
xchg
add
jmp
pop
dec
out
and
mov
mov
mov
sub
bound
and
sbb
sub
out
or
and
inc
push
jbe
fiadds
lret
push
mov
mull
dec
sub
into
call
aad
push
push
enter
cltd
xor
pop
and
mov
mov
adc
sub
mov
jp
xchg
mov
and
push
imul
out
int3
loope
outsb
ror
ss
data16
mov
es
adc
fs
loopne
jp
inc
push
notb
and
stc
mov
popa
xchg
mov
outsb
pop
ljmp
inc
das
std
lcall
push
push
and
cmpsb
into
xor
sbb
mov
es
stos
sub
mov
xor
data16
cmp
xchg
fwait
decb
add
lahf
cmp
mov
jns
fisubrs
xchg
mov
cmp
pop
outsb
data16
xor
data16
inc
in
rcr
push
dec
cli
ss
out
or
xchg
cltd
outsb
aam
shll
xchg
xchg
movsl
push
xor
push
xchg
push
outsl
xlat
sub
inc
xchg
sub
out
enter
cli
pushw
sarb
popa
fiaddl
out
xchg
aas
xor
push
mov
push
shrb
xlat
dec
lods
xchg
xor
pcmpeqw
dec
and
jne
sahf
cmp
and
sbb
mov
xchg
jle
xor
xor
cmp
sahf
xchg
jle
leave
jle
pop
jo
push
out
idiv
pusha
int
cmpb
fiadds
inc
adc
prefetch
and
sub
stc
es
bound
mov
ret
cmpsb
mov
jp
mov
outsb
pop
cltd
xor
jle
or
pop
pop
or
mov
shll
cmp
push
inc
xchg
push
lds
adc
mov
inc
mov
xchg
std
push
and
out
imulb
sub
sbb
fnsave
mov
add
stos
jns
pop
jns
push
lcall
xchg
push
pop
adc
imul
cmp
xchg
shl
mov
les
mov
or
jae
sub
leave
sub
sti
mov
xor
xor
xor
or
push
sbb
xor
std
stc
jp
mov
sub
scas
ficomps
push
ja
outsb
bound
push
push
ss
mov
dec
pop
mov
sub
cmp
xor
push
mov
fstl
arpl
pop
lcall
pusha
xor
jmp
sub
and
push
jmp
jp
dec
cmp
pop
jns
jb
decb
mov
mov
mov
pop
out
xchg
repnz
pop
in
sbb
pop
push
cli
filds
sub
push
ja
incb
data16
sbb
xchg
rclb
pop
sarl
push
push
and
pop
or
out
stos
or
sub
mov
mov
out
jb
sub
dec
mov
sbb
jle
pop
imul
push
mov
mov
out
cmp
out
mov
push
iret
notb
jp
jno
mov
mov
inc
lcall
sbb
push
inc
xchg
xchg
bound
or
adc
lcall
push
cld
stc
ljmp
sbb
xchg
ja
loopne
adc
mov
pop
rcrb
dec
push
push
xchg
stos
pop
imul
mov
leave
or
mov
push
mov
push
mov
mov
out
nop
data16
sbb
imul
or
cmp
push
push
sahf
adc
mov
ss
rorl
xchg
imul
and
stc
push
push
inc
jle
mov
popf
mov
cmp
pop
test
ljmp
add
lods
jns
or
cmpsb
xchg
outsb
repnz
mov
out
xchg
stc
ret
test
mov
sub
xchg
std
loop
in
scas
cmp
mov
lcall
sub
pop
loop
decb
mov
es
pop
mov
stc
cs
xchg
es
sahf
jbe,pn
add
pop
test
adc
imul
xchg
xchg
aas
mov
scas
ljmp
and
sub
arpl
jmp
mov
xchg
push
scas
mov
test
sub
push
mov
jle
and
cli
cmpsl
pop
cmpsb
shl
adc
pop
in
sbb
pop
imul
jp
cmpsb
and
inc
cmp
outsb
subb
jle
push
mov
out
hlt
jle
xlat
add
mov
and
xor
jmp
out
in
lds
ljmp
ss
fidivl
mov
dec
sbb
in
sub
mov
arpl
imul
in
push
push
imul
adc
sbb
push
sahf
xchg
ret
xchg
mov
stc
push
data16
push
or
push
scas
sub
adc
push
jae
pop
insb
xor
pop
hlt
decl
sub
ljmp
dec
test
testb
jno
cs
push
nop
pop
or
and
stos
adc
dec
arpl
and
jle
popa
cmp
xchg
push
pop
push
jmp
sub
mov
sbb
mov
pop
ljmp
push
or
fcmovbe
mov
jmp
sbb
dec
xor
mov
adc
cs
test
push
cmpsb
popf
xlat
test
adc
popa
jg
xchg
mov
push
dec
fwait
cli
stos
push
push
or
pop
lret
negb
dec
in
cmp
movsl
ss
mov
jb
push
and
scas
cmpsb
jae
jne
stc
in
dec
cli
mov
sbb
inc
push
shll
out
dec
pop
mov
push
adc
pop
les
and
pop
sub
or
xchg
rorb
mov
out
sub
into
gs
negb
and
fisttpll
push
fdivrp
push
mov
dec
rorl
bound
aad
outsb
inc
das
jns
mov
xor
outsl
pusha
mov
adc
mov
adc
or
add
pop
sbb
movsb
test
and
adc
cwtl
fiaddl
test
xchg
sarl
dec
ljmp
insb
cs
xchg
pop
pop
adc
es
jns
cli
outsb
or
out
jmp
push
jle
jecxz
push
fisubs
stos
sbb
stos
popf
ljmp
into
jne
movsl
sbb
sub
cli
repnz
cmpsb
cmc
pop
jp
loop
fs
push
mov
sub
pop
add
xchg
mov
pop
sarl
inc
out
test
les
push
push
xchg
fs
stos
mov
mov
mov
and
psubusb
xlat
scas
inc
xor
add
jbe
sub
or
xor
xor
xchg
push
xchg
mov
int
jle
adc
jne
sub
push
jb
jbe
and
popf
sub
cmp
imul
xchg
jbe
test
push
jnp
xchg
ret
scas
pushf
scas
mov
gs
jb
fbstp
xchg
push
mov
adc
sub
and
out
lcall
jns
scas
jae
push
mov
pop
rcr
jns
cli
mov
out
sbb
insb
mov
mov
jp
push
movsb
adc
xchg
jle
xchg
xlat
cmp
sub
arpl
insb
in
and
push
sub
daa
nop
sbb
inc
bound
repnz
cli
or
stos
push
add
scas
das
and
mov
leave
jmp
cmc
jns,pn
xchg
push
xchg
xor
sti
iret
cltd
sbb
das
inc
fstpl
adc
fisubs
push
pop
fsubrl
push
dec
jecxz
bound
sub
ljmp
fsub
arpl
ficoms
pop
sbb
mov
xchg
push
inc
sub
stc
out
jb
push
cmp
push
ror
adc
and
mov
out
leave
lret
sbb
ficoms
ficoml
push
data16
push
push
add
push
mov
loop
into
and
push
pop
or
std
xor
xlat
sbb
xor
inc
xor
lret
pop
stos
or
mov
sub
sbb
arpl
push
add
call
push
push
and
bound
xchg
adcl
adc
or
add
and
imul
loop
loopne
lea
fcmove
ror
pop
push
decl
rcrb
sub
lds
out
mov
xchg
stos
sub
sub
outsb
jle
push
mov
jb
pusha
test
ljmp
xor
xchg
pop
sub
gs
lcall
sub
imul
and
scas
stos
xchg
adc
and
jbe
sbb
adc
push
rcrl
cs
sbb
inc
scas
adc
in
cmpsl
cmp
mov
mov
frstor
imul
mov
and
or
mov
stc
ficompl
sbb
in
int
rolb
pop
loope
mov
xchg
lods
xchg
push
or
push
push
test
pop
jno
sub
pop
data16
incb
sbb
dec
aad
fidivs
jle
cmp
push
dec
stos
cli
mov
xchg
scas
push
outsb
pop
repnz
lcall
loop,pn
adc
fisubrl
incb
scas
jnp
mov
push
setbe
cmp
and
push
fcomi
xor
std
loop
push
sbb
stc
dec
sbb
push
ficomps
mov
es
mov
push
subb
pop
mov
aam
sub
roll
into
repnz
std
idivb
push
out
push
push
cli
dec
jb
inc
sub
adc
cmp
fsubrs
ja
and
pop
lret
dec
xchg
xlat
xor
sub
or
cmc
adc
pop
and
and
lock
mov
pop
add
outsl
mov
sub
iret
jno
ss
mov
jbe
jno
insl
and
mov
repnz
fs
mov
add
lcall
xchg
adc
pop
or
fadds
mov
xorb
mov
mov
and
out
push
add
scas
nop
scas
insb
pop
jb
clts
cs
sub
out
repnz
inc
push
xchg
sub
adcb
sbb
or
cltd
testb
je
mov
jmp
jb
mov
mov
clc
cmp
mov
mov
into
and
scas
mov
pop
push
icebp
imul
test
dec
lock
jp
fs
cltd
dec
mov
push
dec
sub
add
repnz
bound
out
out
jp
inc
cmpsb
dec
shrl
fiadds
fnsave
leave
shlb
or
cli
loop
lds
in
std
cs
push
jb
insb
ds
xchg
cmpsb
or
bound
cmpps
sub
pop
pop
sub
adc
mov
sahf
sti
clc
mov
stc
sbb
dec
je
adc
mov
or
push
sbb
in
lcall
popl
adc
orb
outsb
outsb
cli
int3
xor
decl
je
insb
cltd
fimuls
pop
sahf
negb
xor
jo
push
call
xchg
pop
dec
xorb
dec
xchg
xchg
inc
ret
scas
jmp
push
push
lds
mov
push
and
push
adc
push
testb
adc
sbb
mov
stc
aas
xchg
or
mov
mov
stos
jns
xchg
ja
daa
leave
scas
push
pop
jbe
fcmovu
cmp
int
sbb
xchg
add
xor
imul
imul
sub
and
into
inc
stos
mov
aad
scas
loopne
xchg
test
or
xor
dec
hlt
or
and
xchg
ficoml
rol
scas
or
mov
adc
mov
lea
es
loop
mov
and
stos
jb
cmpsb
pop
gs
push
adc
stc
dec
mov
sub
out
popl
sub
and
orb
outsb
sbb
test
jae
test
insl
inc
lock
or
adc
movsb
sub
mov
loopne
pop
sbb
mov
cmpsb
leave
cmp
ror
sub
sahf
xchg
iret
sbb
mov
mov
xlat
or
sub
jns
sar
nop
fsubl
push
or
loopne
mov
jp
or
outsb
repz
pop
push
mov
or
sbb
add
mov
lock
cmp
out
push
sbb
push
sbb
push
into
adc
pavgw
scas
loop
daa
cmpsb
cmp
outsb
jp
jl
fisubl
mov
popf
and
add
inc
repnz
cmpsb
leave
popa
sub
or
sub
roll
insl
jmp
adc
push
mov
xor
sub
imul
push
and
ljmp
jno
pop
mov
or
push
add
test
fs
daa
movsl
sti
dec
or
scas
and
mov
lcall
jno
imul
xchg
cmp
sub
scas
inc
in
sbb
je
push
adc
aaa
movsl
jbe
xor
cmp
fimull
dec
scas
xchg
push
push
sub
xchg
test
ljmp
push
push
and
out
out
mov
repnz
cmp
add
out
into
push
sbb
in
xchg
cltd
xchg
sti
xchg
push
jg
lret
jnp
and
out
std
out
pop
cs
jmp
push
push
movsl
sahf
add
pop
mov
xor
cli
stc
sahf
mov
cmp
arpl
lea
and
int3
imull
aam
repnz
iret
sahf
mov
sub
inc
cs
addl
popa
dec
lds
sub
int
cwtl
add
lock
sbb
mull
movsl
pop
lock
jl
imul
pop
jle
xchg
jle
fiadds
inc
loopne
adc
data16
out
cs
ficompl
out
dec
jbe
jle
jne
pop
mov
movsl
xor
xor
push
push
clc
and
adc
mov
jmp
repz
test
movsb
pcmpeqw
mull
or
rcrb
pop
inc
mov
pcmpeqb
push
sub
scas
inc
xchg
pop
jbe
out
and
pop
pop
lcall
jns
subb
xor
mov
adc
into
shl
and
push
sbb
mov
jb
das
push
add
rcrb
sahf
scas
jo
push
dec
scas
cmpsb
mov
and
or
popa
push
add
lcall
push
sbb
add
rclb
movsl
xchg
stos
out
dec
pop
or
ljmp
pop
pop
arpl
push
jmp
cmpsb
and
in
fldl
ss
mov
push
fisubl
push
or
fsubl
movsl
xchg
jno
stc
sbb
loop
arpl
outsb
fnstsw
scas
jmp
std
mov
repnz
push
lret
inc
sub
xorb
push
or
sar
mov
or
ja
dec
sbb
mov
leave
adc
es
jbe
out
and
and
jno
mov
xchg
adc
into
cmp
push
bound
jns
mov
ljmp
js
mov
orb
outsb
std
or
lds
xchg
ss
popa
adc
mov
pop
mov
mov
sbb
data16
test
inc
mov
hlt
hlt
mov
fdivrl
imul
pop
loop
stos
xor
xchg
mov
sbb
mov
pop
std
mov
push
push
push
pop
imul
xchg
negb
scas
incb
shlb
cmp
mov
sbb
and
out
scas
bound
out
and
jle
enter
aas
cmp
sub
cmpsb
rcll
or
imul
bnd
es
dec
rcrb
xor
out
cli
cs
mov
sahf
jmp
dec
fistps
mov
stc
scas
cmpb
sub
mov
mov
mov
imul
cltd
push
lahf
insb
adc
push
cli
pop
mov
lock
fwait
jmp
fmull
xchg
push
mov
pop
cwtl
imul
shlb
push
cmp
sub
xchg
outsb
mov
shrb
and
sahf
lds
cmp
xchg
sub
cs
outsb
fisttpl
ljmp
adc
lea
mov
push
pop
fsubs
push
push
ss
popf
or
scas
sbb
repnz
push
xchg
inc
sub
xchg
pop
cmp
sub
pop
jbe
rcrb
pop
push
sub
xor
fisttpl
push
lcall
mov
pop
stos
jno
dec
lahf
sub
jbe
and
sub
push
dec
testb
adc
popa
mov
into
lcall
outsb
sub
loop
repnz
xlat
test
outsb
pop
aas
out
pusha
es
pop
add
adc
push
decb
fst
adc
js
dec
push
pop
sbb
sub
dec
push
jp
mov
into
ljmp
sub
loopne
mov
orb
mov
push
dec
in
data16
sub
mov
or
cmp
out
out
ficompl
mov
imul
push
jns
add
sub
add
ljmp
jp
mov
and
pushf
cmp
adc
aam
sar
or
sahf
sbb
xor
lods
and
push
test
xor
push
fisubrl
sub
mov
adc
sbb
and
xor
xor
ficoml
xchg
mov
sbb
stc
dec
lahf
imul
adcl
loopne
fst
jns
mov
cld
add
je
xchg
cmp
jp
dec
call
add
cmp
sub
lahf
and
push
and
jl
lcall
push
fstl
rolb
scas
pop
push
adc
cli
pusha
jp
push
push
fcmovu
mov
inc
inc
outsb
bnd
and
jns
or
push
mov
pmulhw
leave
sub
clc
cmp
sub
push
outsl
outsb
xor
lock
mov
sarl
lea
aas
and
das
adc
sub
or
push
mov
scas
into
jbe
inc
fimull
es
inc
jno
xchg
pop
sahf
ljmp
dec
jmp
out
or
cs
imul
xchg
fcoms
jb
insl
sahf
xor
cmp
int3
dec
imul
shl
inc
adc
xlat
and
rorb
imul
subl
loop
push
and
or
mov
pop
dec
push
rcll
fadds
push
lcall
andb
push
sub
dec
mov
adc
mov
divl
hlt
rol
push
xchg
jb
sub
repnz
jae
test
and
shll
xchg
push
and
scas
sub
add
dec
test
cmpsl
rorl
idivb
imul
mulb
cmpsb
bound
and
incl
shll
mov
sbb
sbb
outsl
mov
jg
clc
frstor
out
jge
loop
imul
icebp
pop
inc
stc
push
xchg
mov
inc
mov
leave
lods
sub
mov
or
sbb
scas
decb
cmpsb
lcall
xor
std
mov
jp
jbe
rorb
sbb
dec
sti
xchg
xor
idivb
add
imul
loop
sbb
jp
sbb
xchg
jg
into
mov
js
sbb
out
arpl
xchg
pop
adc
out
ljmp
mov
push
adc
xor
out
push
sub
shrb
aad
addr16
das
sub
mov
cmpsb
adc
pop
scas
pop
jb
inc
sub
xchg
mov
out
dec
pop
negb
loopne
mov
push
push
push
push
adc
cmp
sub
shll
sbb
fisubrs
ds
cmpb
aas
inc
in
sub
adc
pop
jno
sbb
frstor
aad
sahf
idiv
sbbl
shlb
or
imul
loop
adc
enter
out
push
jmp
jge
or
sahf
idivb
in
jb
cld
push
xchg
mov
fdiv
push
mov
test
xor
jb
xor
push
mov
popl
xor
xchg
rcrb
mov
xchg
dec
leave
xchg
push
and
leave
loop
sub
jo
jb
push
sbb
lock
push
jle
imulb
push
in
ds
andb
or
mov
xor
mov
xor
push
xor
jbe
or
adc
movsl
add
xor
popl
sub
lcall
insl
push
push
dec
adc
and
and
lds
ss
or
popa
les
jbe
and
jl
push
sbb
in
cwtl
adc
mov
data16
jmp
cmpsb
inc
push
jne
adc
xlat
xchg
stos
popf
mov
out
cltd
adcb
jecxz
sub
and
mov
adc
jmp
lock
mov
jns
pop
cld
xor
int3
xchg
data16
test
push
jno
xchg
notb
sahf
aas
arpl
dec
cmp
shlb
lcall
lds
sub
sbb
xlat
sbb
or
cmpsb
js
outsl
pop
inc
dec
in
xor
sub
jmp
or
xchg
jp
add
mov
lcall
icebp
mov
jge
lea
sar
es
leave
mov
mov
fldl
cmc
mov
lods
std
jle
std
adc
sahf
push
dec
mulb
movsb
insl
and
or
ss
inc
jle
jp
xchg
jne
cmpl
out
das
ja
pusha
pop
dec
xor
fiaddl
push
push
mov
or
andl
mov
neg
in
adc
repnz
pop
jno
or
pop
pop
out
stos
push
sub
mov
xchg
les
xor
lret
idivb
cwtl
popa
fisubs
mov
scas
xor
ss
or
dec
or
ret
lcall
insl
adc
push
mov
or
and
outsb
scas
lahf
fsub
fmul
jmp
mov
loop
nop
cmp
push
enter
ss
push
dec
insl
mov
rcr
scas
das
sub
mov
fs
out
cli
push
push
or
into
xor
fisttpll
ss
mov
xchg
pop
push
mov
inc
fisttpll
xor
fisubrl
imul
push
adc
bound
jle
cmpsb
fisubs
fdiv
aam
mov
pushw
dec
jno
adc
mov
insb
adc
stos
push
test
mov
jg
xor
sbb
out
dec
jecxz
into
pop
and
outsb
sbb
pushf
jns
add
sub
outsl
sub
dec
sub
jecxz
faddl
mov
arpl
cmpsl
or
sub
dec
into
mov
push
or
imulb
xor
bound
xlat
repnz
cmpsb
loopne
adc
push
cltd
stc
or
ror
testb
push
xor
sahf
out
ficompl
jp
pop
cli
cld
shrl
push
outsb
ss
cmpsb
push
push
adc
mov
loope
dec
cs
loope
leave
loope
into
scas
out
loop
push
aad
jle
roll
pop
bound
lcall
inc
loop
out
addb
ds
out
mov
mov
scas
es
jp
jo
fucom
xor
sbb
push
imul
dec
pop
adc
sbb
add
sub
pop
xor
jns
sub
lcall
sahf
push
cmpsb
cltd
or
sbb
xchg
push
or
fimull
movsl
sub
sub
jmp
mov
push
sahf
or
lcall
dec
jbe
decb
mov
pushf
cmpsb
inc
pop
adc
dec
jecxz
push
mov
mov
bound
xor
pop
scas
mov
std
adc
add
adc
shrb
push
adc
out
sub
sub
rcrl
jp
and
outsb
inc
pusha
mov
push
cmp
sub
and
push
cmpsb
dec
push
fsub
mov
cmpxchg
mov
jne
fcmove
mov
mov
push
test
and
adc
sbb
jne
fimull
dec
mov
push
jb
jbe
inc
mov
jae
sbb
push
mov
outsb
xor
lcall
push
adc
sbb
inc
xorb
outsb
pop
and
sbb
test
addb
outsb
jb
fstps
push
mov
pop
out
je
mov
cmpsb
pop
and
ss
mov
sbb
adcl
cli
or
sbb
push
imul
stos
orb
rcrl
add
jbe
pop
or
mov
addr16
scas
notb
adc
adc
sub
test
and
js
push
lret
sub
pop
cmp
test
jbe
mov
insl
adc
iret
push
dec
xchg
stos
push
mov
pop
inc
jmp
aam
je
add
mov
sub
pushf
xor
cltd
push
sub
pop
pop
lret
ljmp
push
sbb
lcall
popf
push
bound
call
std
sub
mov
in
xor
stos
mov
pusha
pop
pusha
fs
das
or
sahf
dec
mov
inc
adc
repz
out
xor
push
in
mov
inc
push
and
xor
mov
pop
adc
outsb
std
mov
jne
mov
xchg
or
add
mov
xchg
mov
stos
push
inc
push
sub
nop
rcrb
jmp
iret
sub
cmp
jp
stos
sub
and
mov
sbb
stos
bound
xlat
outsb
fsub
pop
repz
mov
popf
cmp
loop
repnz
mov
movsl
cmp
jecxz
jle
adc
sub
jae
inc
pop
push
sbb
jle
mov
movsl
cmp
or
push
imul
pop
cltd
inc
pop
push
jbe,pt
xor
lds
push
push
mov
ret
scas
mov
jne
lret
aam
xor
mov
adc
dec
push
sub
repz
shrl
jle
and
cmpsb
xchg
sub
pop
in
in
pop
lods
fisubrs
adc
xor
mov
pop
mov
aaa
sub
push
xchg
and
notb
push
mov
push
push
subb
xor
lahf
lret
sub
pop
sbbl
int
loop
scas
inc
push
das
aaa
jle
jecxz
cmpb
mov
xor
iret
aaa
lcall
sub
pop
imul
cmp
mov
orb
jns
sub
cmpsb
jno
or
pop
and
rcll
push
sbb
pop
pop
jp
rclb
push
mov
add
into
test
push
or
enter
add
stc
mov
adc
pop
mov
ficoml
mov
adc
jbe
jl
dec
dec
rcr
pop
or
cs
sub
ljmp
test
xchg
push
repnz
out
out
clc
push
cld
sbb
jns
sahf
fisubrs
mov
add
repnz
sub
decb
pop
in
jp
in
sbb
and
pop
jno
mov
xor
xor
mov
xchg
scas
call
sub
xchg
jbe
into
shrb
push
cmp
das
xchg
pop
pop
cmp
lcall
mov
pushl
xchg
ljmpw
rclb
mov
iret
scas
cmp
xor
xchg
inc
push
stc
scas
push
xor
jp
adc
jl
add
push
or
or
sub
push
jbe
xchg
jb
jae
xchg
test
adc
fmuls
push
push
jb
mov
pop
loop
or
sub
xchg
sbb
in
mov
gs
pushw
movaps
pop
xor
ljmp
pop
xchg
stc
pop
mov
pop
sub
sahf
loop
mov
fnstcw
in
mov
sub
xor
jp
enter
sbbl
daa
js
addr16
cltd
push
push
mov
fcoms
repnz
push
cs
sub
adc
sahf
cltd
jbe
or
push
into
adcb
popf
bound
xor
jle
out
and
jp
divb
pop
sbb
sub
jo
xor
and
repnz
pop
bound
scas
sub
cmp
or
ficomps
mov
call
negb
jg
mov
loop
xchg
mov
pop
stos
push
mov
mov
psrlq
cs
dec
mov
repnz
xor
mov
adc
dec
sub
push
pop
stos
pop
xchg
push
sbb
add
or
mov
adc
pop
push
fisubl
dec
pop
cmp
push
sbb
push
push
sbb
fisubs
xor
mov
mov
adc
sbb
push
push
and
jo
pop
stos
or
idiv
sub
lea
in
repz
cs
or
xor
and
add
ss
fisubrs
adc
adc
gs
add
adc
inc
roll
inc
mulb
loope
mov
mov
dec
push
outsl
and
xor
push
shlb
mov
push
je
push
stos
pop
ljmp
cltd
cmpsb
aam
into
push
or
jae
sub
jo
call
movsl
cmp
jns
or
ljmp
add
mov
mov
xchg
cmp
cltd
negb
push
jmp
push
stc
aam
cmp
pop
xor
cmp
lods
loop
push
sub
scas
pop
test
aad
pop
push
inc
jo
sub
mov
cs
pusha
push
adc
scas
push
jbe
jb
gs
ror
iret
dec
pop
sbb
imulb
popa
push
and
into
jle
cli
mov
scas
xchg
mov
and
stos
gs
fldl
push
push
xlat
ljmp
mulb
jle
scas
mov
fdivrs
stc
out
into
xchg
mov
and
out
xchg
push
jns
jnp
push
xchg
pop
out
fadds
repz
sbb
adc
jbe
adcb
leave
jge
adc
dec
or
xchg
xor
ficomps
daa
ljmp
mov
stos
push
add
int
push
mov
adc
rcrb
movsl
test
enter
cli
fcompl
test
bound
ljmp
mov
dec
jp
clc
mov
mov
out
into
mov
in
stc
dec
fstpl
pop
jp
adc
sub
inc
jno
push
pop
test
bound
sub
mov
dec
insb
xlat
xchg
sub
push
adc
inc
and
sbb
jns
push
mov
pop
push
ss
sub
jbe
or
jl
mov
addb
out
pushf
out
mov
or
pop
loop
popa
scas
mov
rcl
jbe
mov
notb
outsb
stos
push
add
popf
mov
es
push
sbb
sahf
mov
icebp
mov
add
mov
ficompl
popa
je
pop
jno
out
lcall
push
mov
jnp
and
jb
add
inc
hlt
push
push
outsb
andb
xchg
push
mov
sbb
sub
fcomps
sub
jle
mov
inc
or
cltd
ljmp
sbb
jae
xor
fidivrl
mov
jp
aam
push
or
in
leave
js
mov
cli
fistps
fistps
pop
mov
out
xchg
sub
xchg
xor
in
popf
push
lahf
shlb
xor
lds
mov
dec
in
sbb
cmpsb
mov
out
or
push
orb
shld
push
sub
rolb
sub
test
frstor
xor
es
ret
jb
sub
pop
leave
xchg
add
scas
hlt
cmp
jmp
add
sub
xchg
add
divb
scas
cmp
mov
and
int
add
mov
or
in
rclb
push
pop
andb
test
arpl
adc
out
ficoms
adcb
mov
or
bound
test
cltd
mov
pop
outsb
inc
cmpsb
sahf
mov
cmp
jns
and
fdivs
add
adc
aam
pop
mov
jns
jp
sub
lea
in
ss
sub
push
cmp
sub
add
ljmp
jp
mov
xchg
dec
jno
xchg
mov
push
cmc
sub
out
sub
pop
pop
lcall
pop
cli
add
jp
jno
pop
lret
sub
cmp
ljmp
stos
push
es
cltd
sub
mov
xchg
leave
scas
lcall
inc
jle
icebp
test
xchg
repnz
push
out
ds
dec
push
inc
lds
movsl
sub
sub
or
push
jle
mov
bound
std
xchg
mov
push
ss
and
cs
xor
sub
ficoms
cmpsb
bound
sub
sbb
pusha
jge
push
fidivrs
jp
out
es
lret
es
inc
jno
xor
test
mov
insb
sahf
xor
arpl
adc
call
push
inc
sbb
pop
xorb
lcall
dec
fidivrl
mov
push
out
notl
jno
mov
dec
cs
mov
stos
dec
pop
mulb
bound
das
aaa
call
frstor
shl
mov
lcall
or
or
scas
popf
xor
push
subb
inc
mov
push
ss
xor
adc
outsb
xchg
xchg
inc
sar
or
or
push
jae
adc
dec
mul
mov
adc
repnz
out
pusha
jns
xchg
fisubl
imul
mov
fsubr
mov
push
gs
loop
movsl
fidivrs
scas
pop
push
stos
mov
sub
xchg
dec
push
sbb
ret
adc
xor
cmpb
shrb
push
fmull
clc
adc
dec
xchg
cs
cmc
jl
push
icebp
mov
mov
repnz
iret
mov
fsubrs
jg
scas
cli
ljmp
mov
popa
mov
push
cmp
add
xlat
out
cs
xchg
pop
sub
or
fisubs
leave
repnz
es
sub
lcall
bswap
iret
std
mov
mov
arpl
aas
stos
xchg
out
addr16
pop
scas
lcall
mov
push
jo
push
mov
sbb
and
mov
sbb
pop
divl
rcrl
lock
sub
pslld
push
scas
int
sahf
adc
das
hlt
scas
imulb
fstpl
xchg
push
xor
sub
cmp
add
int3
data16
inc
xor
pop
ss
sarl
sub
mov
xchg
xor
jmp
insl
pop
cmpsb
or
add
sbb
jge
cli
repnz
push
out
sbb
xor
jle
cmp
hlt
pusha
je
push
in
es
push
fstpl
ss
das
mov
add
ss
jle
faddl
push
int
or
divb
pop
fwait
movsl
sub
jo
jp
xchg
std
aam
xor
xor
out
stos
fidivrl
mov
data16
mov
push
mov
jg
xchg
pop
cltd
scas
or
jnp
scas
adc
mov
mov
out
dec
pop
stc
pop
push
push
push
sub
xor
cs
out
xchg
xor
je
add
outsb
mov
sub
xor
mov
in
popf
imul
or
fimull
ss
popf
mov
std
or
lcall
icebp
pop
out
rcrl
repz
pop
or
sub
sbb
rcr
sbb
adc
dec
insl
dec
testb
and
mov
fdivl
adc
scas
and
sub
push
push
dec
push
scas
sub
cs
cmp
aaa
or
sub
jbe
push
adc
pop
xchg
push
and
idivb
nop
aad
sub
and
mov
inc
push
stos
out
cmp
test
fisubs
in
sub
scas
arpl
push
push
fildl
movsb
inc
push
sahf
mov
xchg
jb
push
fsubl
fisttps
push
rorl
shrl
mov
jp
pop
mov
push
cltd
stc
sbb
xor
cmp
data16
push
scas
add
cli
jp
out
lcall
test
fists
pop
aam
aam
pop
int
mov
jbe
mov
cmp
insl
test
lcall
cli
xor
adc
add
xorb
mul
lahf
jb
dec
sub
adc
sbb
out
pop
push
and
cmpsb
fwait
test
xchg
mov
mov
mov
sbb
pushf
stos
lea
out
jp
dec
mov
xchg
push
and
jns
push
adc
pushw
mov
or
pop
push
or
lcall
push
orb
cmp
cld
hlt
and
cwtl
sub
push
adc
and
jl
into
and
mov
sbb
jb
xchg
adc
outsb
jp
std
fnstenv
xchg
xor
pop
jo
jmp
pop
sahf
out
push
sub
jecxz
dec
and
into
outsb
stos
xchg
jle
push
cwtl
mov
sbb
loop
in
outsb
stos
or
ja
jecxz
mov
iret
mov
scas
mov
xchg
testb
lahf
add
cs
push
jno
pop
or
int
xor
push
cmpsb
adc
loop
or
fisubrs
or
das
call
xchg
rcrl
dec
int
ljmp
movsl
push
sub
in
jnp
dec
push
fiaddl
sbb
mov
testl
scas
xor
in
pop
sbb
out
imul
push
or
push
jo
dec
mov
daa
jne
xchg
fst
dec
cs
movsl
pop
adc
mov
stos
mov
push
aas
xor
mov
xchg
push
test
in
xor
fiadds
jp
push
popf
mov
sub
mov
inc
pop
mov
lds
loopne
cltd
push
dec
cmpsb
loope
jo
xchg
fidivs
and
shrb
pop
pusha
push
push
push
pop
xor
push
jle
in
mov
xor
cmp
mov
ljmp
mov
loop
dec
xor
stc
cmp
sahf
sbb
out
sbb
xor
xor
inc
mov
xor
movsl
xchg
clc
lods
movsb
insl
pushf
sub
push
adc
sbb
lcall
cld
jns
ss
cltd
idiv
pop
or
mov
enter
aam
xchg
jle
and
fimuls
jno
mov
shr
pusha
dec
es
outsb
push
and
or
mov
jecxz
cli
aam
or
inc
cmp
mov
data16
repnz
aam
push
xor
push
add
or
scas
sbb
stos
jno
stos
arpl
bound
cmp
sbb
adc
push
and
stos
nop
adc
inc
mov
sub
push
cmpsb
xor
lcall
mov
popf
shrb
fstpl
test
stc
es
add
push
xor
pop
xorb
mulb
scas
cs
fisubrl
xchg
fwait
popa
mov
cli
pop
ficomps
outsl
xchg
mov
and
xor
jle
aad
subps
mov
lldt
ja
ret
fxch
jbe
jns
out
sub
cmp
fisubrl
sahf
or
jbe
test
sub
mov
sub
mov
rclb
outsl
push
stos
cs
das
jns
push
and
cld
xchg
mov
xor
aaa
adcb
sbb
loopne
sub
mov
add
adc
loopne
imulb
or
jle
or
push
es
xor
jne
sti
popa
jbe
ss
adc
sub
out
or
fisubl
sub
sub
cmp
bound
or
mov
mov
fisttpl
or
mov
cmp
mov
gs
mov
push
xor
push
jle
rorl
cs
xchg
outsb
pop
mov
inc
gs
adc
push
xchg
push
out
mov
incb
jle
repnz
mov
ss
es
push
shl
push
ss
jp
xlat
cmp
int
add
loop
data16
in
std
pop
bound
push
dec
arpl
pop
movsb
push
mov
jno
fildll
mov
out
outsl
mov
adc
lods
call
push
data16
or
mov
lcall
into
xchg
or
adc
add
cltd
clc
out
sbb
jb
adc
mov
mov
sbbb
std
or
xchg
mov
sarb
push
and
cli
adc
or
popf
push
xchg
jbe
push
jmp
adc
jo
push
xchg
and
adc
push
aad
inc
or
mov
mov
in
push
jbe
or
push
iret
xchg
sbb
pop
sub
xchg
mov
cli
out
gs
scas
or
pop
popf
aam
jle
lds
xor
xchg
repnz
push
scas
out
push
cld
xchg
pop
popa
sbb
sub
aas
nop
scas
fstpt
bound
cli
aam
cmc
punpckldq
xor
das
add
jne
daa
mov
imul
aaa
pop
test
in
leave
push
testb
stc
pop
jp
inc
push
sbb
push
mov
jp
dec
lock
or
insl
inc
cmpsb
stos
out
test
xchg
lcall
sbb
pop
ss
add
cmp
and
sbb
and
cmc
test
sbb
jp
or
lock
ficomps
lahf
out
pop
arpl
or
scas
loop
sub
adc
dec
inc
add
mov
add
pop
mov
and
popa
test
jb
negb
sbb
fbstp
push
stos
mov
jmp
inc
movsb
popa
pushf
stc
lds
or
and
mov
sahf
mov
inc
push
fisttpll
fisubrs
and
push
and
xor
pop
sub
es
dec
inc
push
in
push
dec
sbb
inc
stc
scas
test
cmp
xchg
rorl
push
sbbb
ret
jb
pop
inc
repnz
push
xchg
pop
xchg
push
xchg
adc
mov
repz
and
and
movsb
xchg
push
or
push
push
adc
push
mov
pop
test
pop
pushf
lds
sbb
ss
std
mov
xchg
mov
mov
aaa
push
call
shrb
outsb
pop
mov
jp
sub
mov
pop
push
stc
addr16
push
aas
outsb
jle
leave
and
ficoml
cs
cmp
mov
and
outsb
js
das
pop
test
push
and
xor
push
movsb
mov
stos
cli
int
xchg
ret
dec
add
cmp
shl
fstl
push
fstl
jp
xchg
nop
repnz
scas
xchg
jbe
aas
add
jne
add
cmp
jl
scas
pop
loop
rorl
push
sbbb
lcall
roll
pop
xchg
bound
jbe
mov
mov
popa
add
or
inc
mov
xchg
jp
push
xor
sub
xor
lcall
mov
pop
jb
mov
leave
and
arpl
imul
xchg
mov
push
sub
stos
adc
pop
adc
xor
push
sub
adc
repnz
ret
adc
jmp
negb
sbb
xor
mov
push
sub
ljmp
and
into
mov
mov
adc
imul
loop
push
mov
pop
sbb
jae
jo
pop
stos
mul
fidivs
cmp
cmpsb
mov
jb
outsb
xchg
mov
sub
cmp
inc
arpl
push
jns,pn
adc
push
stos
mov
push
or
pop
dec
sbb
nop
adc
out
push
sbb
adc
xchg
dec
bound
je
inc
push
test
mov
push
into
xor
xlat
shlb
dec
mov
imul
stos
ret
icebp
decl
push
push
cmp
sbb
jbe
sahf
subb
pop
data16
sti
pop
cmp
dec
dec
cli
sub
jle
pop
cmovle
and
sarb
adc
mov
push
stc
aas
lahf
inc
fidivl
push
mov
jb
xor
and
xchg
loop
sub
push
sub
jmp
mov
arpl
sbb
adc
xor
xchg
ljmp
data16
aad
mov
ljmp
sub
xchg
fst
sub
adc
stos
mov
xchg
and
push
inc
mov
fisubl
push
push
shlb
inc
push
mov
xor
xchg
xor
pop
adc
das
and
or
or
mov
push
jbe
pop
cmp
gs
push
pop
scas
mov
loop
std
mov
mov
movsl
in
and
popf
jp
in
mov
inc
push
sbb
into
push
sahf
xor
popa
rorb
jb
dec
test
cmpsl
or
cmc
aaa
in
xorb
cs
and
movsb
sbb
fcom
inc
push
arpl
sub
xor
xor
out
dec
xor
es
cmpsb
repnz
je
push
add
inc
notb
dec
pop
bound
jmp
jno
and
cmc
push
cmpsl
cmp
mov
pop
mov
xchg
fwait
push
cmp
and
adcb
cs
push
inc
push
or
jp
repz
in
outsb
cmp
scas
mov
int
jp
cli
rcll
push
ja
sub
xor
popl
leave
sbb
jg
bnd
lcall
xchg
inc
mov
dec
mov
repnz
and
mov
dec
pop
xchg
sarb
xchg
push
ficoms
scas
sbb
mov
mov
sbb
mov
out
jno
jbe
fistps
adcb
lods
or
push
mov
imulb
stc
aam
int
push
in
mov
test
jbe
push
fnsave
push
fbstp
or
xchg
and
mov
and
jp
mov
out
sub
mov
xchg
mov
cli
mov
sub
sbb
out
ljmp
add
sub
outsb
and
fnstcw
cli
cwtl
mov
pop
vaddss
loopne
push
sbb
lret
xchg
ret
js
ljmp
adc
xchg
inc
jbe
add
adc
inc
scas
outsb
dec
mov
cmp
jle
ficoms
xchg
push
mov
xchg
bound
cwtl
fcoms
nop
push
cli
lods
push
or
mov
xor
push
out
andb
stc
cmpsb
repnz
cld
addb
jle
imul
lock
or
jbe
ret
push
or
sub
andb
sbb
aam
adc
or
into
stos
sub
fadd
ds
fcoml
adc
jle
mov
out
aas
pop
inc
xor
lock
scas
test
push
mov
movsl
ljmp
pop
scas
adc
cltd
notb
mov
push
les
sbb
add
add
outsb
or
scas
in
cmc
sbb
scas
movsb
test
js
int3
sar
mov
push
xor
sahf
shrl
pop
sbb
add
mov
cltd
lods
subl
push
mov
push
rcrl
aaa
scas
or
xchg
mov
je
mov
test
dec
or
test
mov
scas
push
push
or
jnp
out
push
sti
inc
out
inc
or
data16
and
cli
loope
adc
jb
mov
in
movsl
in
mov
pop
adc
pop
add
push
sub
insl
or
mov
xor
popf
aas
jle
sub
jb
or
sub
inc
xchg
test
pop
je
repnz
sbb
mov
scas
enter
rcr
and
mov
scas
jb
and
leave
outsb
mov
inc
jecxz
cltd
jmp
mov
incb
jp
mov
std
or
and
mov
ljmp
shll
xor
cld
jno
push
outsl
jle
imul
les
jnp
imul
mulb
jle
stc
and
add
mov
mov
sub
inc
mov
loop
bnd
pop
push
dec
cs
mov
cmpsb
xor
bnd
dec
adc
dec
lcall
adc
sahf
movntps
mov
pop
or
or
and
scas
xor
sub
push
or
and
into
jle
rol
pop
data16
and
push
sbb
xchg
sti
imul
push
das
xchg
jmp
scas
push
mov
sub
cli
sbb
lahf
insl
cmp
dec
pcmpgtd
ret
pop
ljmp
lcall
scas
dec
dec
iret
outsl
loopne
std
out
movsb
ffree
test
push
lods
adc
and
rcrb
jne
dec
cmpsl
jbe
xchg
sub
sbb
or
mov
std
cltd
mov
stos
sub
pop
mov
test
cmp
cli
jbe
ljmp
cs
add
or
in
or
xchg
push
imul
mov
mov
lds
loop
push
fistps
push
sub
push
jle
out
sbb
push
stc
xor
ljmp
push
push
xor
hlt
sahf
dec
cltd
test
sti
jb
sbb
cs
push
xchg
dec
jb
add
push
subb
push
loope
or
jmp
mov
das
fldcw
cli
dec
test
mov
xchg
or
and
dec
push
es
data16
rclb
or
mov
rclb
outsb
xchg
ds
cli
test
mov
mov
mov
push
mov
lds
xor
rolb
mov
loop
mov
mov
xchg
pop
pop
pop
mov
fimuls
add
lcall
fdivs
cld
push
ret
andl
sbb
popa
sbb
dec
subb
bound
stos
mov
xchg
cmpsb
pop
sub
in
arpl
dec
in
mov
into
pop
scas
jge
repnz
cs
scas
mov
outsb
and
push
test
push
aas
push
cmpsb
stc
sbbb
mov
push
mov
out
sbb
sahf
lds
and
fidivrs
pusha
in
std
adc
repnz
or
std
xchg
and
pop
pop
jle
pop
pop
mov
movsb
push
or
lds
mov
adc
ss
pusha
out
push
lods
jb
scas
in
out
scas
mov
or
repnz
shlb
push
xchg
or
adc
push
jbe
cs
xchg
pop
test
inc
out
stc
push
mov
lods
in
and
push
ret
and
or
xchg
sub
jne
xor
clc
push
inc
or
sbb
or
adc
stos
loop
rcrb
nop
pop
pop
sahf
xor
and
adc
jo
lcall
sbb
gs
pusha
inc
pusha
outsl
add
pop
push
xor
shrb
sub
dec
roll
push
ss
outsb
sub
fisubrs
mov
dec
out
pop
int
faddl
cmpsb
shl
push
pusha
out
xchg
xor
sub
repnz
cmpsb
jb
jns
iret
rcrl
pop
fstp
stos
xorl
in
sahf
sub
inc
or
cs
dec
sub
or
pop
sbbb
rcrl
fwait
out
lock
and
cs
dec
pop
jb
and
jne
nop
ret
push
enter
cmpsb
sbb
mov
push
or
cmp
and
or
mov
aam
pop
stos
jb
push
bound
push
pop
loope
push
cmpsb
mov
cli
mov
xchg
jge
scas
daa
or
fisubrs
cmp
cmpsb
xorl
dec
inc
inc
in
adc
dec
xchg
stos
push
sahf
es
lcall
idivl
sub
cmp
clc
pop
push
cmpb
mov
xchg
and
xchg
std
data16
jmp
scas
pop
push
ficomps
push
xor
push
pop
outsb
rorb
in
out
notb
push
bound
fstpl
mov
out
or
push
lds
sub
or
stc
mov
jo
sbb
and
pop
mov
lds
stos
adc
iret
and
xor
mov
pop
mov
into
movsl
mov
cmp
pusha
push
push
xorb
inc
repnz
ret
imul
adc
jle
mov
daa
fxch
rorl
outsb
ret
mov
in
cli
rorb
pusha
jno
out
jno
push
stc
add
add
mov
sub
adc
xchg
push
adc
xor
mov
adc
push
rorb
out
lods
mov
out
mov
es
jb
fldl
iret
jp
lods
repnz
mov
ljmp
adcb
push
dec
adc
mov
adc
sub
xchg
add
sub
in
sbb
ss
cwtl
in
and
notb
or
lods
push
cmp
jp
movsl
mov
mov
xchg
loop
push
cmpsb
mov
inc
dec
in
sub
mov
sar
mov
loop
cli
fwait
xchg
out
lock
and
and
xchg
in
xchg
sbb
test
icebp
cmp
ja
push
clc
push
add
or
sub
lods
push
fnstenv
hlt
pop
jmp
push
mov
xor
lcall
xor
stos
and
pusha
lret
pop
xchg
jo
xor
jle
xchg
out
mov
subb
adc
sbb
test
sbb
dec
pop
sbb
jle
std
outsb
mov
and
mov
int
outsb
sub
xchg
cmp
movsb
fcompl
scas
in
push
jnp
jns
jns
insl
push
xchg
or
iret
xchg
sub
push
mov
icebp
jg
push
fimuls
xchg
lcall
adc
push
outsb
aam
pop
test
ss
scas
int3
lea
xor
pop
mov
xor
repnz
mov
jbe
xor
ss
scas
rorb
mul
jb
mov
pushf
jns
push
pop
daa
jbe
xchg
rcr
cmp
xchg
or
mov
repnz
jmp
push
lods
xorb
cltd
lods
fwait
sahf
ficoml
and
addl
push
dec
loope
pop
push
adc
popf
jp
cmp
adc
or
mov
int
movsl
xchg
jns
jle
iret
pop
xor
mov
xchg
sub
jge
rolb
in
push
mov
cwtl
push
in
mov
in
cmp
ja
fidivl
mov
cli
out
inc
call
jno
mov
pop
cld
outsb
jbe
pop
cli
pop
push
mov
and
and
xchg
lea
pop
push
cld
pusha
mov
scas
xor
push
pop
adc
push
mulb
sbb
mov
sti
push
mov
sarb
or
movsl
mov
mov
inc
jmp
pop
out
lea
outsl
scas
add
jp
push
sbb
push
out
into
dec
cs
test
cltd
into
push
xchg
es
sbb
sub
rcl
sbb
push
iret
and
test
jbe
in
xchg
sbb
bound
iret
xchg
pop
ljmp
adc
pop
adc
and
adc
dec
sbb
mov
xchg
scas
lds
mov
sbb
add
lcall
cs
and
mov
in
movsb
out
mov
adc
cs
call
push
cltd
jb
jne
lret
jb
push
pop
mov
or
push
sub
ja
push
xor
cli
push
sbb
arpl
jp
rclb
jae
push
outsb
les
push
mov
lods
fisubrl
sub
or
popa
sbb
pop
js
sbb
shrb
repz
gs
sub
mov
call
fistpl
adc
adc
outsb
fsubrl
or
mov
bound
push
mov
or
sbb
or
sbb
outsb
jb
cli
and
ss
xchg
in
insl
es
loope
jl
sahf
clc
insl
pop
pop
xchg
push
jp
daa
mov
cmp
ficoms
jbe
and
sub
push
cwtl
dec
or
mov
xchg
inc
or
or
add
sbbb
test
or
push
es
mov
rorb
adc
mov
rcrb
pop
movsl
mov
or
into
mov
or
sbb
mov
mov
std
sub
mov
jbe
push
out
xor
push
push
mov
int3
imul
dec
add
mov
xor
data16
cmp
jns
dec
gs
lcall
xchg
aaa
stos
call
imul
jb
push
sub
pop
stos
dec
mov
push
and
xchg
pmuludq
sbb
out
and
ljmp
mov
mov
clc
add
add
fnstsw
xor
jle
cld
push
push
or
jg
ror
fidivs
sbb
dec
mov
repnz
and
xchg
jp
mov
fisubs
sbb
or
pop
outsl
pop
aaa
push
mov
data16
loop
nop
gs
xor
sbb
push
sub
sahf
push
push
push
xchg
and
push
int
mov
mov
mov
test
loopne
pop
ret
aam
or
pop
cmpsb
push
in
jne
push
xchg
pop
repnz
cltd
jns
cmp
push
loope
mov
and
and
pop
xchg
push
sbb
push
lock
and
cwtl
xor
and
shll
and
push
pop
fisttps
cmc
and
fs
push
mov
xchg
pop
cmpsb
xor
xchg
cmpsb
push
jmp
add
add
leave
mov
pushf
push
xor
jno
push
and
pop
jne
arpl
bound
mov
paddusb
data16
sub
and
push
xchg
jno
mov
pop
sbb
pop
adc
shrl
rcll
loopne
lock
repnz
adc
or
daa
xor
push
or
push
inc
nop
mov
cli
push
xor
xor
sbb
ficoms
push
or
arpl
push
mov
lods
fnsave
sbb
cwtl
test
ss
es
pop
push
or
and
xchg
pop
dec
dec
fisubs
adc
mov
pop
fstpl
push
dec
subb
adc
movsl
outsb
mov
xor
jb
fimuls
sbb
or
adc
jnp
add
push
into
mov
or
dec
add
mull
adc
scas
sbb
push
bound
out
jge,pn
es
iret
cwtl
fimull
nop
push
adc
xchg
div
mov
and
jne
and
push
rcr
xchg
inc
inc
push
pop
ret
push
sub
mov
sarw
sub
jbe
stc
mov
sub
pop
test
xor
pop
and
dec
sub
cmp
xchg
sub
push
xchg
sub
push
stos
jle
push
outsl
es
lods
or
icebp
adc
dec
ret
pushw
outsb
pop
fldenv
xchg
push
loop
push
push
ss
fsub
mov
cmpsb
and
xchg
pop
adc
lcall
xor
xchg
sub
or
push
xor
rcll
cmpsl
pop
pop
push
xchg
fimull
bound
dec
or
push
scas
shll
into
or
les
mov
mov
jno
loop
push
insl
xchg
ds
adc
stc
stos
cmp
jl
imul
jl
rcr
test
shlb
cmp
mov
sti
mov
daa
leave
add
adc
pusha
add
pop
sbb
pop
push
pop
scas
sahf
adc
xor
int
stos
das
out
sub
cld
out
mov
std
rclb
cmpsb
add
pop
dec
push
lds
iret
jg
pop
lds
push
and
xchg
mov
cli
mov
xchg
ficompl
add
flds
loopne
jns
out
push
pop
in
adc
sub
or
sarl
push
testb
mov
lcall
shlb
lods
scas
ss
mov
outsb
es
int
rcrb
sahf
scas
hlt
xchg
jno
jbe
pop
loope
inc
push
jp
dec
and
sub
xchg
push
push
bound
cmp
jle
fwait
sbb
jmp
sub
mov
sub
jmp
out
out
sysexit
push
inc
mov
jbe
inc
into
jmp
jp
insb
xchg
jno
jne
jbe
jb
mov
cs
repz
xchg
sbb
mov
jbe
popa
cli
xor
mov
adc
frstor
stos
jle
adc
cli
xchg
xchg
push
lods
or
inc
movsl
loopne
imul
mov
sbb
push
cld
ds
leave
neg
push
add
shrd
jle
and
jle
dec
out
bound
scas
sbbb
add
dec
mov
dec
pop
js
lahf
push
in
les
xchg
or
pop
xor
dec
inc
cli
stc
das
fiaddl
mov
fwait
jp
insl
test
std
mov
in
xchg
scas
sub
push
iret
and
data16
popa
pop
out
addr16
mov
or
xor
scas
idivl
or
or
push
adc
xchg
stos
shl
jp
ljmp
sbb
sub
jb
dec
jbe
jp
xchg
xor
xchg
fcomi
push
dec
jae
jno
fimull
dec
jno
test
pop
mov
es
push
stos
outsb
xor
mulb
mov
pushf
cli
jno
stc
and
cmp
mov
push
insl
sub
push
and
fdiv
xchg
xchg
pushf
xchg
mov
js
dec
fwait
push
xchg
idivb
push
nop
dec
mov
test
scas
or
sbb
push
sub
dec
rorb
jbe
push
xor
mov
cmp
lcall
pop
push
pop
mov
pop
or
loop
push
jp
add
jo
out
xchg
and
imul
adc
test
pop
sbb
xor
jno
pop
xor
xorl
repz
outsb
adc
xchg
hlt
imul
sbb
mov
lock
push
cmp
popa
pop
scas
out
mov
mov
rorb
or
insb
stos
scas
push
pop
pop
mov
xor
xchg
sub
sub
cltd
push
movsl
fisubl
jo
cli
and
jno
xor
push
jb
adc
repnz
aam
cli
jns
and
into
sahf
sbb
es
popf
or
xor
push
mov
jns
or
int3
outsl
push
xor
mov
push
dec
fidivrs
out
push
in
std
xor
mov
inc
inc
mov
xchg
cmp
mov
mov
cmpsb
gs
test
push
fnstsw
xchg
sub
adc
pop
lret
xchg
clc
rclb
and
add
outsb
pop
orl
repnz
cmpsl
punpckldq
sahf
or
push
jne
add
inc
lcall
sub
cmc
sub
pop
std
ljmp
cs
push
stc
xchg
pop
adcb
imul
jns
or
ficoml
stos
sarb
cld
cmpsl
xchg
pop
in
jge
sbb
push
sbb
leave
jno
and
jo
pop
out
xorb
sub
stos
xchg
inc
xor
jmp
push
ljmp
and
rcr
or
sub
pop
jne
xchg
imul
insl
sbb
push
incb
rcrb
loop
stos
push
mov
pop
fidivs
push
cli
sbb
call
pop
sahf
in
stc
mov
xor
es
fs
loope
lcall
push
ljmp
inc
cs
xchg
xchg
jbe
je
sar
add
out
adc
mov
sarb
xchg
cmc
mov
cmp
imul
mov
and
and
fdivp
mov
sahf
movsb
dec
lea
push
fisttpll
jbe
in
fisttps
jb
inc
scas
jae
mov
shlb
push
ja
outsb
jp
frstor
and
dec
xlat
stc
bnd
dec
pop
call
cld
dec
pop
stc
stos
or
ds
outsb
xor
jge
or
adc
sbb
ret
lods
add
ror
das
sbb
push
mov
jge
sbb
shr
or
push
test
cmpsl
dec
or
push
push
clc
loop
pop
stc
shrb
pop
lahf
addb
jb
stos
imul
loop,pn
faddp
fmul
dec
in
jb
mov
xor
pop
clc
jge
pop
or
or
and
outsb
into
xor
gs
mov
push
fildll
push
es
and
jno
movsl
push
outsb
push
add
jno
pop
pop
push
add
fcoms
sbb
sub
jb
mov
popf
loop
aaa
jle
jle
in
scas
inc
cmp
adc
out
aam
rcrl
scas
stc
cmpsb
jae
bound
call
popa
ljmp
jns
lcall
cwtl
adc
out
in
sub
jb
std
idiv
ror
mov
call
push
mov
mov
push
andl
xor
push
xchg
push
push
jecxz
push
lahf
xchg
cmpsb
jns
and
jg
out
sbb
or
movsb
jl
arpl
subps
sbb
cmp
repnz
outsl
std
adc
shl
mov
push
adc
pop
cltd
push
push
adc
cmpsb
shlb
maskmovq
and
retw
sbb
jae
inc
push
adc
and
lahf
mov
mov
test
xchg
aad
es
xchg
cli
mov
dec
jp
adc
sub
mov
shlb
dec
out
out
cmpsb
adc
xchg
cmp
pcmpeqb
add
push
adc
adc
or
sub
repnz
sbb
pop
mov
mov
xor
jp
jl
xor
inc
push
or
lcall
iret
out
inc
xorb
cmp
out
fwait
in
mov
jbe
sbb
mov
and
imul
mov
cmp
mov
repnz
jle
lcall
ds
or
push
or
inc
push
jno
adc
or
mov
vmread
pop
es
nop
mov
sub
mov
lcall
ss
adc
add
adc
or
ss
mov
push
mov
pop
sbb
mov
mov
mov
adc
push
add
pop
std
jbe
push
adc
adc
lds
loope
call
sbb
mov
adc
pop
pop
xchg
mov
outsb
negb
or
jl
in
xor
stos
and
js
out
in
lds
or
cli
push
ret
movsb
jae
mov
pop
inc
stc
push
mov
fidivl
jno
dec
out
pop
clc
andl
int
and
inc
adc
testb
inc
or
mov
sahf
inc
ds
cli
mov
cmpsb
ljmp
cmp
les
xchg
lea
lds
or
in
inc
xor
jle
in
inc
aaa
xchg
cmp
or
mov
mov
out
mov
mov
aam
aam
sbb
inc
push
push
mov
sbb
cmp
mov
adc
xchg
xchg
jmp
xorl
sub
jg
mov
sbb
sbb
pop
mov
push
cmp
pop
divps
cmp
test
fstpl
int
shrb
insl
or
dec
xor
popf
push
xor
idivb
data16
push
in
mov
jg
bound
lahf
loope
mov
data16
lock
jl
xchg
jnp
shl
mov
roll
ficomps
jp
push
aad
push
rclb
shl
dec
addb
iret
mov
movaps
aad
push
fcoms
sahf
inc
sbb
xchg
shl
jl
fidivs
fisttpll
dec
xor
into
nop
adc
and
jne
dec
dec
push
adc
adc
or
or
jmp
sahf
pop
and
push
add
aam
dec
push
fidivrs
repnz
into
sub
xor
sbb
cwtl
adc
jmp
mulb
cmc
sahf
adc
xor
mov
out
fnsave
or
stc
or
dec
in
icebp
clc
and
in
fmull
push
bound
jp
insl
fisubl
sbb
std
subl
rorl
out
jbe
inc
mov
das
data16
mov
pop
or
pop
push
add
push
inc
push
inc
pop
and
pop
das
out
psubd
outsb
std
je
in
xor
ret
and
pop
lods
outsb
mov
jp
mov
ds
fidivs
lds
add
xchg
loop
xchg
push
mov
shr
jle
stos
leave
cli
push
std
pop
inc
sub
adc
sbb
fwait
sbb
jns
push
jne
mov
jle
and
jmp
xchg
std
inc
addl
pop
fisubs
scas
sbb
cli
and
testb
in
adc
js
xchg
push
call
mov
testl
das
mov
test
ret
cmpsb
push
mov
cmp
push
es
cmpsb
push
int
pop
shlb
jge
sub
insl
jno
pop
outsb
fimuls
mov
imulb
cmpsb
push
aaa
sub
stc
mov
push
mov
imul
nop
mov
stos
pop
in
dec
ret
pop
std
mov
cmpsb
arpl
fldcw
sub
stos
dec
pop
fldcw
push
sbb
mov
mov
data16
dec
adc
outsl
mov
cmp
pop
stos
ss
jge
into
int
cmpsb
or
jle
jns
lcall
and
stc
adc
and
jle
jle
and
mov
out
push
aas
jb
sub
xor
jl
sub
jb
inc
outsl
add
popa
push
push
xchg
shlb
cmc
stc
divl
xchg
xchg
cmp
loop
mov
in
pop
cmp
xchg
lret
lcall
adc
and
dec
adc
and
lret
mov
leave
pop
lcall
fstps
imulb
pop
inc
pop
xchg
sub
mov
push
adc
mov
pop
sbb
mov
stos
push
aam
pop
scas
push
jnp
adc
jae,pn
jb
imul
jb
sub
and
mov
lcall
dec
jae
test
in
sub
lods
or
mov
ja
push
push
in
xchg
sub
pusha
flds
test
fdivrl
fld
push
jp
push
lret
jno
fimull
aaa
out
and
dec
add
adc
mov
scas
dec
mov
in
sbb
aas
daa
scas
jb
or
mov
loopne
mov
xchg
nop
int
nop
adc
jbe
push
cmp
stc
out
push
mov
pop
jo
mov
fwait
pop
adc
sub
loopnew
or
int
jbe
rcr
inc
rcr
int
jb
jne
add
repnz
outsb
movsl
int
mov
mov
xor
pop
push
cmc
cld
loop
mov
xchg
adc
je
mov
aad
lahf
ja
xor
lcall
fbld
in
int
jge
or
mov
and
cs
test
mov
jae
popf
lret
add
cs
jb
lea
xchg
fcomip
xor
in
jg
dec
mov
mov
enter
mov
sub
and
or
push
push
jb
mov
pop
push
push
sub
xchg
xchg
xor
sbb
or
enter
rcr
pop
and
xchg
cmp
mov
sub
cmpsb
in
cmpsl
cmc
testl
test
xchg
mov
repz
adc
fbstp
cmpsb
push
pop
pop
into
pop
clc
mov
push
outsb
mov
and
cld
adc
push
idivb
cld
inc
in
loope
mov
cmp
iret
xchg
mov
mov
lahf
ljmp
jg
add
repz
cmpb
idivb
into
adc
lcall
xchg
fs
cltd
sbb
stc
xor
push
jp
cmpsl
adc
ljmp
lahf
mov
mov
and
xor
and
push
dec
sub
stos
fnsave
push
fisubs
rorb
or
push
bound
pop
jp
push
sub
lcall
mulb
rorl
dec
add
jbe
shlb
mov
scas
aas
addr16
xchg
fidivl
xor
or
xor
sbb
add
add
push
sub
bound
push
push
jbe
clc
addr16
cmpsb
aaa
dec
sub
outsb
ss
out
bound
jb
insl
sub
scas
mov
inc
jo
push
cli
push
and
loop
clc
push
push
adc
xchg
scas
popf
repnz
aam
popf
sbb
sub
popa
pop
movsl
lret
dec
lds
mov
push
std
mov
les
xor
mov
jb
sub
mov
jle
ret
jbe
mov
adc
sbb
xchg
fidivl
cmpsl
xchg
sub
mov
cs
aad
lods
int
jp
cmpsb
adc
sub
stos
pop
xchg
fists
es
mov
mov
fcmovbe
mov
cmp
mov
aas
cmp
jl
push
data16
inc
outsb
sbb
adc
pop
sub
dec
scas
xchg
and
dec
mulb
push
sbb
pop
push
mov
scas
test
xchg
push
xchg
jp
mov
shrb
cli
scas
mov
and
loop
push
cltd
push
sub
mov
or
lock
jne
scas
mov
mov
fldt
cs
or
out
les
std
and
data16
pop
ljmp
xor
dec
stos
dec
or
js
lods
jge
ficoms
sbb
arpl
or
sub
jo
jb
int
stos
push
and
stos
adc
test
pusha
jle
xor
loop
cli
les
sub
and
je
cmpsl
sbb
mov
mov
adc
cld
das
mov
xor
jg
cli
jecxz
adc
lds
popa
or
push
fwait
adc
sarb
push
xchg
cmp
scas
push
subb
xor
pushf
xchg
push
pop
or
sahf
or
not
xor
jnp
mov
push
jns
test
and
out
loop
push
insb
je
cli
sbb
clc
sbb
sub
insb
push
outsb
push
fisubs
xchg
fstpl
cmp
mov
dec
cmpsb
fisubrl
push
xor
adc
and
pop
pop
rorl
xchg
ljmp
fnsave
push
xchg
add
shlb
notb
dec
adc
out
cmpsb
sub
js
pop
xor
xchg
xchg
out
sub
or
push
sub
nop
sbb
lcall
inc
adc
shrl
outsl
sub
xor
fbld
es
cmpsb
dec
xor
pop
push
xchg
cs
int3
fcom
push
push
push
adc
or
mov
jbe
out
sub
loope
inc
push
aam
add
stc
xchg
sbb
movsb
sub
or
scas
cmpsb
push
scas
and
push
pop
fidivs
lock
jb
mov
ljmp
sbb
inc
jns
and
sub
or
xchg
gs
and
adc
and
cmp
das
stc
or
lcall
mov
sub
pushw
pop
jle
or
or
push
push
adc
leave
shlb
std
decl
fisubl
dec
out
mov
cmpsb
lock
jge
xor
imul
xchg
sub
nop
mov
mov
notb
sbb
ss
fiaddl
fidivs
shrb
cltd
dec
pop
jmp
es
cmp
mov
inc
adc
cmpsb
bound
push
inc
jle
ret
jle
jb
push
push
fldt
xor
stc
scas
inc
adc
and
or
push
scas
xchg
mov
push
stc
mov
mov
pop
out
cmc
jno
lcall
add
or
mov
pop
pop
xor
mov
sub
sub
mov
jns
sbb
lcall
mov
stc
and
xchg
std
cmpsb
pop
jbe
movsl
adc
mulb
xchg
jmp
jns
inc
call
add
push
aad
pop
ror
shll
dec
mov
cmpsb
mov
add
xchg
cli
cld
imul
jecxz
dec
test
inc
movsl
or
sub
shlb
outsb
push
insb
push
mov
test
adc
stc
stos
sbb
faddl
test
xchg
dec
mov
test
orb
loop
icebp
add
jno
push
jb
imul
daa
insb
dec
xor
adc
sub
ret
cs
mov
sahf
imul
dec
and
ficomps
cmc
pusha
sahf
pop
cmpsb
mov
ret
or
sub
push
xchg
push
mov
add
std
shl
and
mov
cmp
cs
jp
xor
inc
push
cmc
imul
mov
and
jecxz
rclb
popf
adc
and
cmp
outsb
ljmp
lcall
mov
addr16
push
xchg
or
dec
std
loop
or
das
dec
inc
or
scas
dec
jbe
out
pop
rcll
fnsave
inc
shll
xchg
dec
jo
outsb
jl
aas
mov
and
addl
mov
sbb
mov
pop
push
mov
cmpsb
fcmovu
jle
sbb
and
sub
adc
outsb
jle
jbe
lret
mov
repnz
shll
mov
scas
lods
fimull
push
mov
sbb
push
cmpsl
pop
ret
fsubrl
ret
push
cmc
insb
or
pop
stos
shlb
pop
sbbl
shrl
jns
popa
or
test
fsubrs
or
inc
jno
stos
mov
push
loop
fisubrl
xchg
push
ret
push
mov
pop
cwtl
mov
adc
popa
mov
dec
je
or
xchg
jb
sahf
mov
test
stc
cmpsb
jne
or
and
movl
shll
push
dec
jmp
sbb
lea
jp
scas
adc
jae
and
stc
push
pop
jle
and
fcomi
ja
mov
sub
out
dec
sbb
movsl
mov
repnz
cli
das
mov
jbe
and
jle
out
inc
in
jb
cmp
xor
das
and
shrb
add
mov
dec
xchg
sbb
cmp
jp
push
ja
push
cs
xchg
cmpsb
adc
pop
jg
push
aas
adc
push
repnz
xlat
adc
dec
adc
scas
sbbb
shlb
xlat
mov
scas
push
sarb
das
pcmpeqw
xor
push
repnz
jns
sbb
or
sbb
sbb
cmp
cltd
adc
ss
xor
aam
push
dec
aam
iret
cmp
jl
scas
jp
aaa
sub
into
leave
fiadds
in
cs
add
pop
sbb
adc
xchg
pop
or
sbb
dec
into
mov
xchg
add
test
mov
scas
push
setno
xchg
mov
inc
push
xchg
or
jl
scas
push
aad
mov
adc
xor
data16
jbe
scas
cmp
push
fwait
sub
iret
push
outsb
xchg
scas
bound
mov
push
les
cld
mov
in
sub
mov
arpl
in
mov
dec
scas
mov
cli
add
inc
or
xchg
xchg
push
addr16
mov
xor
cltd
subl
fimull
jg
test
shl
mov
or
pop
sbb
cli
cmpsl
dec
andl
dec
cmpsb
lret
test
outsb
push
add
mov
outsl
xor
xor
sarl
or
xor
stc
scas
adc
inc
adc
data16
xor
sub
repnz
mov
xchg
pop
jns
push
nop
xchg
arpl
pop
mov
jp
inc
adcb
sarb
or
xchg
mov
mov
dec
jno
push
jle
jno
jne
test
mov
idivb
popf
sub
fisubrl
pop
adc
or
xor
cmp
xchg
scas
mov
mov
inc
out
test
scas
inc
mov
out
sti
fiadds
mov
sbb
jnp
xchg
jno
jmp
cmp
mov
xor
and
push
jb
and
xchg
fisubrs
movsl
mov
dec
sub
data16
and
dec
ljmp
mov
inc
data16
inc
mov
rolb
xchg
mov
lcall
aas
dec
leave
jbe
cmpsl
or
sub
push
out
dec
bound
xorb
rclb
sub
jno
stc
push
jecxz
loop
xchg
mulb
jge
mov
cwtl
loopne
mov
mov
outsl
xchg
sbb
jp
das
mov
dec
fisubl
push
sub
jbe
das
fldl
subps
movsb
pop
sbb
dec
sbb
movsl
and
stos
sub
jno
mov
push
xchg
sahf
icebp
add
xor
shlb
data16
lcall
lods
cmpsb
repnz
mov
push
push
repz
xchg
jno
sub
jb
ds
int
adc
fdivl
mov
stos
jnp
idiv
dec
popf
or
dec
cld
push
das
adc
loop
shrb
es
ss
xor
add
mov
stos
insb
je
mov
popl
push
push
jbe
cli
pop
pop
in
popa
pushf
push
dec
push
es
mov
fidivl
and
popf
stc
ljmp
das
mov
and
add
push
rcrb
outsb
mov
cmp
jb
cwtl
es
jnp
cmp
cmp
sbb
add
pop
loop
fisubl
cmc
adc
cmpsb
rcll
add
arpl
arpl
inc
cltd
dec
gs
sbb
jne
testl
or
mov
dec
js
rclb
outsb
adc
mulb
add
jno
out
and
scas
jp
jle
push
push
dec
adcb
sub
mov
dec
xor
xchg
loopne
int3
dec
sub
push
cmpsb
xchg
out
xor
and
not
jl
fisttpll
jle
xor
out
push
shrb
sub
cs
pop
lods
ljmp
imulb
lea
enter
sahf
dec
jle
mov
and
xor
lock
mov
sbb
jnp
pop
inc
push
cltd
pushw
push
ficomps
and
xchg
iret
jle
pop
sub
pop
ss
sub
lcall
push
and
push
outsb
sub
mov
mov
mov
mov
cmpsb
or
addr16
push
xchg
jle
movsb
push
cmp
int
testb
outsb
or
outsb
sbb
test
ja
mov
dec
jecxz
popf
scas
sub
push
push
pop
loop
pop
jp
pushf
cmpsb
fsubrl
cmp
pop
sbb
push
sahf
sub
mov
fdivl
jle
mov
push
jmp
cmpsb
jbe
mov
mov
or
out
mov
or
sub
push
imull
xchg
rorl
and
mov
push
and
sub
inc
stos
mov
xchg
cmpsb
add
cmp
rcll
cmp
sbb
xchg
test
push
leave
mov
es
sbb
int3
adc
pop
xor
lret
adc
push
fldt
aam
xchg
pop
lret
or
xor
stc
adc
outsb
pop
sbb
mov
cmp
xor
sbb
sbb
adc
jp
push
jle
sub
jle
adc
jecxz
push
pop
push
daa
push
bnd
sub
out
cmp
out
out
pop
and
push
cltd
stos
pop
in
push
dec
cli
cs
mov
out
jp
jge
or
ficoms
sahf
push
adc
xor
jp
outsb
mov
and
out
pop
and
and
pop
repnz
and
loope
es
inc
and
push
adc
add
sub
xchg
cmpsb
sahf
mov
add
iret
lds
or
xlat
test
pop
movsb
push
enter
into
or
fs
push
mov
addb
push
ss
clc
inc
and
sbb
jb
xor
jno
out
cli
xchg
int
popa
jbe
ficompl
cmp
push
hlt
adc
sbb
outsb
lods
xor
xor
jb
fsub
fsubr
mov
push
in
pushf
decb
cli
cmpsb
mov
sahf
cmpb
out
sub
push
shll
cmp
stos
xchg
jmp
jnp
dec
addl
popa
push
push
cmp
adc
push
flds
jb
int
adc
out
sbb
push
rolb
jecxz
pop
pop
stos
idiv
movsl
jg
add
fimull
push
mov
idiv
jnp
adc
xchg
adc
xchg
and
daa
sbb
imul
xor
loopne
jb
inc
adc
loop
and
xor
lret
adc
xchg
pop
mov
int3
mov
outsl
push
pop
xor
mov
jns
mov
and
push
rol
push
xor
data16
inc
es
mov
mov
stos
pop
popa
cltd
mov
dec
jge
sub
xchg
addr16
cs
outsb
out
jle
xor
subb
sbb
mov
add
push
push
adc
test
inc
xor
shlb
arpl
ljmp
add
push
lea
jp
push
cmp
or
dec
sbb
adc
cmpsb
jp
and
pop
cmp
popf
pop
cmp
mov
lret
jl
sub
jne
jns
fisubs
outsb
sbb
or
mov
sbb
fcomps
jg
outsb
lods
jp
mov
mov
mov
xor
mov
sahf
imul
fs
pop
inc
imul
sub
jbe
out
insl
and
or
sbb
push
pusha
ds
jp
in
add
cwtl
mov
cmpsb
mov
mov
jno
sbb
pop
push
dec
push
out
sbb
lds
cli
adc
xor
push
cmp
and
mov
or
push
push
enter
ret
fwait
jb
call
xor
mov
jbe
adc
mov
stc
push
das
iret
call
jnp
imul
ss
out
xor
aam
jp
xchg
rorb
or
shr
sahf
pop
out
ljmp
pop
loope
insl
add
addr16
scas
insl
or
adc
fidivs
jno
sub
push
and
lret
movsb
push
cmp
stc
nopl
jbe
add
jns
ljmp
and
scas
mov
es
push
sub
cmpsb
jle
stos
adc
cmp
pop
pop
insb
jbe
es
call
push
filds
pushw
xchg
shl
dec
scas
cmpsb
loop
xor
bound
test
aaa
mov
fimuls
stos
sbb
fwait
pop
mov
andb
pop
adc
mov
mov
jle
push
xchg
sub
lahf
arpl
cs
shlb
mov
ret
fmul
daa
fcmove
aas
fisubrs
jecxz
mov
push
xor
mov
mov
ret
shrl
push
jbe
add
test
mov
push
cli
mov
sub
xor
test
push
ds
push
aas
into
loop
loop
add
adc
and
fmulp
sbb
or
jnp
clc
push
adc
enter
mov
les
frstor
out
movsl
stc
jp
pop
insl
jle
out
mov
movsl
sbb
sbb
push
adc
mov
out
adc
cs
pop
mov
mov
add
out
xor
fistpll
movsb
outsb
aam
sbb
call
int
mov
jno
repz
add
and
mov
adc
or
adc
inc
jle
scas
stos
cmp
xor
lret
push
lds
ljmp
adc
lds
pop
pop
mov
imul
sub
mov
adc
pop
push
adc
pop
and
jbe
mov
jp
popa
shrl
out
clc
rclb
and
fidivrl
push
cmp
adc
divb
pop
jle
stos
adc
fisttpll
pop
adc
or
dec
add
enter
test
sbb
xor
or
jmp
and
mov
nop
rorl
ss
add
insb
cmp
cli
xor
lret
mov
xchg
sbb
imul
lods
fcmovbe
cli
fdiv
lds
ljmp
subl
es
mov
inc
xor
icebp
sub
in
jne
lcall
repnz
and
into
fs
adc
ror
push
pop
add
fsubl
xor
mov
repz
pop
test
lea
pop
add
sbb
cli
sub
or
cmpsb
xchg
mov
sti
jno
lcall
jns
and
jbe
shrb
jnp
loop
xlat
and
push
imull
push
pop
addr16
ja
mov
aad
cmpb
xlat
push
test
loop
fisttps
data16
jno
adc
rcr
push
cltd
add
mov
or
lcall
inc
pop
jns,pn
push
and
jno
loop
stos
mov
sub
xor
and
push
sbb
mov
dec
paddsb
out
out
or
mov
xchg
push
and
or
std
stc
mov
aaa
in
out
push
loop
sbb
aam
dec
fnstsw
xchg
mov
mov
push
icebp
and
bts
es
mov
sbb
mov
xchg
mov
aad
xor
stc
xchg
sub
lahf
sub
xchg
push
out
pop
sahf
jmp
in
add
mov
inc
sub
xchg
fsubs
jns
pop
xchg
xchg
sbb
jno
pop
cld
jle
xchg
mov
xchg
cmpsl
jo
mov
mov
scas
sub
adc
mov
sbb
cwtl
cmp
push
xor
xor
inc
jmp
dec
mov
mov
mov
jno
inc
test
and
lcall
and
ret
shrb
jle
mov
mov
insb
outsb
jo
cltd
and
int
imul
mov
jo
adc
jbe
xor
idivb
xor
jle
das
mov
das
mov
sub
jp
orb
mov
mov
inc
movsb
sarb
fcomp
shrl
push
mov
adc
rclb
xchg
bnd
xor
xchg
inc
das
fstl
mov
xchg
dec
subl
xchg
dec
xor
sub
or
je
stos
and
jb
pop
push
scas
cmp
cltd
inc
sahf
fs
xor
pop
mov
and
or
or
bound
inc
in
sbb
xor
xchg
mov
dec
jns
mov
mov
inc
adc
rolb
bound
aad
and
sbb
lcall
adc
cmpsb
repnz
jle
stos
adc
jp
imul
cmp
jle
mov
dec
das
push
add
pop
jp
sub
push
ss
rolb
inc
sbbb
xchg
sbb
jmp
add
push
outsb
nop
cmpsb
cs
mov
inc
test
pop
add
cmp
xchg
fmul
jg
xchg
aam
repnz
fcmove
inc
rclb
stc
jge
push
testb
pop
and
xor
dec
inc
adc
in
ficomps
xchg
mov
or
stos
and
rcrl
sub
aaa
mov
leave
push
mov
sbb
push
mov
call
scas
mov
ja
in
int
in
aad
in
pop
push
sbb
add
add
addb
push
xchg
repnz
testb
sahf
aaa
test
inc
ficomps
fidivrl
push
das
or
and
test
mov
adc
mov
rolb
call
push
sub
mov
fwait
test
xor
jmp
repnz
sbb
push
into
mov
sbb
push
sbb
inc
pop
jle
addr16
push
sub
adc
push
scas
jle
cld
xchg
loop
jb
push
sub
out
lret
jno
imul
ljmp
out
mov
push
inc
push
movsb
lcall
xor
xor
jbe
adc
jle
stos
xor
leave
out
sbb
movl
mov
ljmp
mov
stos
jle
xchg
xchg
out
and
roll
adc
loope
inc
stos
adc
dec
xor
outsb
repnz
xor
xor
iret
test
loope
lcall
cs
ss
dec
rorb
inc
and
cs
call
out
cltd
out
test
rcrb
testb
jbe
push
fidivrs
jge
sahf
xchg
xor
adc
fisubs
out
cs
negb
inc
pop
shr
or
push
cs
push
ror
cmp
add
scas
mov
sub
jbe
sbb
dec
xor
xor
test
mov
cld
sbbb
lcall
cmc
ljmp
mov
loope
sbb
enter
push
pop
sub
stos
push
jle,pt
mov
repnz
bound
mov
sbb
xchg
sub
and
sub
jne
shrb
cs
push
hlt
jb
sbb
push
in
arpl
lcall
mov
mov
bound
jle
idiv
push
mov
cwtl
into
dec
or
shrb
ljmp
push
fisubrl
mov
mov
push
jg
or
lahf
in
jne
bound
add
fiaddl
sbb
lcall
mov
inc
inc
das
rclb
inc
inc
inc
aam
adc
push
lcall
sub
sbb
out
inc
pushf
push
jno
lcall
insb
push
sahf
push
out
push
aam
loopne
rclb
sub
fisubl
addb
andl
adc
frstor
sub
fstpl
loop
sbb
loopne
ja
js
and
sahf
lcall
or
push
sbb
rorb
mov
cmp
popf
add
xlat
or
jo
out
ret
scas
pop
test
shrb
es
nop
ja
sbb
inc
and
cmp
into
jge
jp
or
in
mov
jg
cmp
and
push
push
and
insb
not
insb
sub
xor
jle
outsb
cs
out
insl
xor
xchg
jp
xor
sbbb
stos
ror
lcall
pop
jle
mov
notb
fidivrl
or
shll
scas
andb
dec
sub
mov
push
test
fisubs
outsb
les
out
ss
dec
jo
xchg
cltd
push
ficomps
jns
sbb
daa
add
xchg
dec
jle
fisttpll
xchg
mov
sbb
push
ficoms
fists
add
sub
mov
xor
call
jnp
les
dec
lock
push
mov
push
lret
into
std
xchg
outsb
cli
in
jge
int
push
fiaddl
popa
pop
and
rcll
dec
xchg
fidivl
dec
rolb
out
bound
push
cmpsb
push
fisubl
js
mov
popa
cmpsl
pop
imul
xchg
je
cmpsb
push
mov
shrb
sbb
push
clc
in
pop
stc
jb
pop
push
push
xor
adc
sub
jp
scas
in
dec
in
cli
or
jnp
sub
mov
data16
sahf
add
inc
fs
sbb
sbbl
mov
cmp
sub
jecxz
das
pop
pushf
outsb
sbbl
out
lods
repnz
outsb
jmp
adc
pop
sbb
mov
fists
xor
dec
pop
ficoms
outsb
xchg
jne
lahf
jns
cli
mov
dec
or
push
mov
adc
inc
out
leave
cmpsb
movsl
sbb
jb
jns
ljmp
push
and
push
fs
push
push
lcall
pop
shlb
jae
jae
inc
test
testb
sahf
push
and
ljmp
test
bound
sahf
xchg
push
cld
leave
cld
loopne
mov
iret
or
lret
push
xchg
ret
xor
test
inc
jb
data16
pop
or
arpl
jns
xchg
insl
fmul
xchg
push
jno
push
push
in
sub
pop
and
das
xorb
push
and
lcall
in
mov
add
fimull
sbb
push
into
inc
sbb
fnsave
inc
jne
adc
negb
icebp
imul
into
jle
push
fidivl
push
sahf
jbe
inc
push
xchg
sub
adc
inc
jns
data16
xchg
stc
adc
mov
loope
out
jnp
mov
test
bound
ljmp
add
adc
push
fisubrs
out
mov
scas
jge
jbe
jle
fidivl
adc
in
adc
out
inc
mov
push
sbb
sub
movsl
js
adc
fimull
inc
and
repnz
mov
arpl
jno
loop
mov
xor
and
lods
inc
push
jb
sub
inc
jns
cs
lret
or
sub
pop
imul
out
mov
ss
shrb
ljmp
lcall
sub
sar
xchg
in
cmp
ficoms
sbb
ss
inc
cli
push
xchg
or
xor
pushf
jp
sub
dec
and
push
cld
mov
adc
adc
pop
and
add
jae
aas
mov
iret
std
xor
stos
mov
rcr
sbb
fidivrl
or
jns
xor
jns
pop
clc
or
pusha
popa
push
pop
scas
lcall
mulb
push
mov
add
xor
ficompl
shll
push
xchg
sub
push
and
mov
fcomi
int
cli
das
cld
jle
xlat
xor
xchg
testb
fwait
das
mov
mulb
xchg
sbb
lahf
mov
add
es
addl
bound
lea
mov
or
lock
push
and
sub
pop
jno
cmp
push
out
xchg
in
jg
lea
mov
shlb
mov
pop
mov
cmp
sub
std
mov
sub
inc
out
scas
or
loope
jle
popa
hlt
enter
jg
adc
pusha
ficompl
mov
arpl
mov
stos
bound
inc
adc
add
mov
lcall
outsb
dec
dec
sub
cmpsb
jbe
add
inc
jno
dec
arpl
stos
sbb
xchg
push
lea
mov
mov
outsb
jns
and
bound
addr16
xchg
mov
cmp
or
data16
xchg
adc
stc
sub
adc
push
cli
jmp
data16
push
sarb
cmp
sbb
out
mov
cwtl
loop
mulb
incb
xor
or
sbb
sbb
mov
push
adcb
out
enter
call
or
xlat
jo
dec
mov
ss
mov
fst
insb
cmp
je
lcall
add
std
jp
fistps
push
inc
add
and
push
scas
fisubrs
xor
ret
cmp
adc
or
fcmovbe
sub
sub
jle
inc
mov
pop
xchg
pop
cs
insb
push
and
ss
adc
push
push
mov
outsb
sbb
and
arpl
mov
push
stos
std
add
xor
push
and
stc
loope
xchg
mov
scas
pusha
mov
insb
jbe
pop
jle
loop
sbbb
mov
icebp
pop
outsb
jno
push
es
or
fidivrl
scas
ja
mov
inc
pop
push
push
jbe
push
repnz
mov
push
mov
pop
mov
int
and
pop
es
push
shll
mov
pop
scas
stos
insb
xchg
popf
jb
or
es
shlb
mov
insb
outsb
xor
pop
adc
dec
push
jb
cmpsb
push
pop
mov
pop
mov
push
subb
mulb
outsb
shll
shl
rcrb
into
mov
xchg
shl
or
jmp
outsb
fidivs
jno
adc
mov
bound
push
push
mov
fcomp
push
mov
stc
and
rorl
jae
xor
dec
decb
mov
sub
ficoml
div
or
icebp
ds
shlb
mov
loop
daa
push
xchg
pop
push
lret
jae
push
fwait
sub
aaa
and
inc
xchg
jns
pop
sbb
jg,pn
sub
jbe
inc
outsb
cli
or
orl
iret
rcrl
clc
shlb
jle
scas
addr16
sub
pop
xor
aas
push
mov
xor
mull
outsb
fcompl
push
pop
arpl
ja
inc
pop
jmp
sbb
cmpsb
push
push
sti
jb
loop
mov
adc
push
das
mov
nop
fisubrs
cmp
push
adc
bound
sub
and
add
rcrb
push
aad
xchg
sub
notl
push
sbb
filds
pusha
mov
sub
and
dec
ljmp
repnz
ss
sbb
adc
or
pop
sahf
cmp
and
outsb
repnz
stc
adc
test
xlat
addb
jg
ret
and
outsb
lret
cmpsb
sub
xor
push
aam
bound
shrb
inc
aas
hlt
gs
data16
mov
and
pop
sub
lret
pushf
push
jae
pop
ljmp
pop
lods
cli
xor
jge
std
mov
in
movsl
sub
mov
shrb
mov
sahf
push
push
jbe
sub
ror
int
add
dec
ss
mov
or
bound
cs
adc
imul
jle
insb
or
mov
into
dec
outsb
stc
pop
xchg
outsb
data16
cmp
xchg
or
and
pop
adc
pop
xchg
push
dec
push
sti
fisubrl
and
jle
outsb
jbe
andb
pop
xlat
jb
rorb
sbb
repnz
aaa
xor
test
out
mov
xor
sahf
ficoms
sub
xchg
pop
hlt
jae
pop
jbe
pop
sub
stc
pop
movsl
and
mov
ljmp
leave
imul
inc
sub
lods
xchg
mov
push
lcall
es
lret
je,pn
push
cltd
dec
movsl
loop
subb
xchg
idivb
mov
or
shll
pop
stc
jp
stc
js
and
lcall
fcmove
and
stc
xor
popa
mov
movsl
sub
inc
ja
or
in
nop
aam
test
mov
cli
adc
in
sub
adc
push
or
cmpsb
add
fucom
dec
scas
sbb
push
jbe
popa
mov
push
jne
cmp
or
pop
push
cld
push
xor
cmpb
jbe
jno
xchg
sbb
mov
daa
sub
jno
loop
mov
jle
dec
push
sbb
fs
push
mov
out
in
in
test
fsubrs
popa
xor
fbld
es
dec
popa
loop
jbe
mov
lea
hlt
cmp
lods
fstpl
bound
int
xchg
stos
es
sbb
mov
pop
inc
fadds
stos
lcall
int
and
nop
and
jle
cmp
sbb
es
mov
xchg
loope
mov
xchg
shl
sahf
mov
xchg
or
call
ds
jno
sbb
push
or
lods
push
add
ss
int
aad
lods
and
xor
xor
jp
call
jo
and
sbb
and
push
outsb
lcall
pop
xor
out
sbb
jns
fadd
dec
mov
push
adc
stc
cmp
fcoms
out
mov
pop
mov
cmp
fisttps
push
mov
scas
aas
push
iret
jg
sbb
pop
dec
jle
ja
pop
cs
ss
mov
xchg
cmp
push
jl
out
mov
outsb
push
mov
lcall
mov
insl
movsb
push
push
xchg
lock
stc
mov
pop
and
in
inc
add
mov
and
divb
stos
stc
xorb
into
fwait
sub
xor
loope
or
dec
pushf
mov
or
sahf
push
cmp
or
sbb
imul
cmpsb
sbb
xor
cmp
fistl
adc
into
rorl
movsl
xchg
repnz
aas
cs
sub
jne
push
sub
sti
or
jne
mov
xchg
nop
push
xor
adc
fcompl
ljmp
sbb
adc
and
adc
pop
jns
ljmp
es
imul
loope
arpl
mov
and
mov
fdiv
sahf
pop
push
sbb
xor
shlb
jae
push
jb
outsl
inc
sub
scas
iret
pop
pop
push
push
jecxz
test
jmp
sbb
jo
sub
lods
cmp
rcr
lock
mov
idivb
adc
adc
jle
fcmovbe
fstl
incb
and
jnp
cli
out
pop
push
cmpsb
jnp
lods
dec
or
mov
and
push
jecxz
inc
push
add
imulb
hlt
mov
xlat
mov
xchg
sbb
mov
mov
clc
sbb
sahf
pusha
std
add
push
out
adc
into
dec
add
shrl
loop
or
std
jnp
push
pop
imul
pop
adc
in
or
xor
push
mov
pusha
pop
sub
mov
xchg
loopne
das
jns
scas
xchg
scas
in
mov
repnz
lea
xchg
mov
adc
out
adc
xlat
adc
out
loop
jb
sub
push
jne
mov
mov
push
les
add
aaa
popf
jbe
in
out
and
cs
inc
and
repnz
pop
adc
adc
or
clc
mov
cmc
adc
mov
imul
call
ror
pop
jp
mov
xchg
xor
mov
fdivl
out
inc
cmp
xchg
jb
dec
js
jo
enter
dec
repnz
or
push
sub
cltd
aas
push
movsl
jle
xchg
jmp
mov
lret
lock
or
scas
sub
mov
xchg
adc
and
xchg
xchg
cmpsb
pop
jb
sbb
packssdw
and
lea
repnz
dec
divb
outsb
cmp
idivb
jle
outsl
and
pop
test
pop
sbb
jb
xchg
pushf
mov
bound
shlb
and
and
cmp
nop
call
cli
or
iret
xchg
adc
js
push
push
fsubp
xor
xor
and
sub
mov
and
fnsave
mov
push
cmp
dec
cld
push
shll
ficoml
xor
fcompl
push
mov
nop
push
and
mov
push
sbb
push
aad
push
rcr
loope
xor
add
sbb
loop
mov
push
or
sub
mov
test
push
cmp
data16
sahf
loope
mov
ja
dec
hlt
sub
mov
lock
jno
pop
xchg
inc
lock
das
mov
jne
adcl
es
push
loop
add
mov
push
cmp
mov
int
adc
popf
mov
jno
and
repnz
mov
pusha
mov
push
mov
testb
push
xchg
or
bound
push
scas
fs
mov
jecxz
test
push
js
shlb
jb
lods
push
push
jp
adc
or
ljmp
out
pop
adc
add
xchg
out
sahf
jb
ds
outsb
sub
mov
cmpsb
push
inc
jbe
xchg
jb
pushf
xor
sbbl
sbb
jb
push
leave
ficoms
jge
xor
sub
sbb
adc
sub
xchg
mov
sbb
stos
jle
sarl
out
adc
mov
out
imul
jmp
subl
int
fidivrs
xchg
jmp
in
fdivrs
fucom
ret
jno
and
or
scas
in
xor
repnz
dec
out
ljmp
xchg
xor
jcxz
out
inc
ja
testb
stos
das
mov
roll
scas
es
cmp
jb,pn
adc
jbe
pop
push
ror
loop
or
ljmp
iret
fwait
cli
sbb
xchg
ljmp
leave
xchg
push
jb
adc
or
bnd
jg
jo
test
sub
out
pop
sub
inc
mov
pop
pop
mulb
fsubs
mov
test
mov
mov
sbb
xchg
cmp
data16
push
cmpsb
push
lods
popa
and
xor
or
repz
andl
and
scas
cmovl
add
sti
lea
jno
and
fisubl
outsl
mov
out
dec
pop
outsl
and
mov
and
sbb
out
out
mov
cli
sub
pop
or
mov
push
loopne
inc
div
jbe
mov
rcrl
rclb
mov
push
xchg
sub
adcb
mov
shl
pop
adc
cmp
xor
inc
push
dec
pop
mov
sub
inc
popa
mov
push
jg
push
mov
xchg
aaa
mov
pop
lods
fisttpll
xor
jns
push
daa
mov
push
fimuls
ficoml
pusha
lret
jno
gs
sahf
call
push
adc
add
adcb
lcall
and
add
jns
or
or
push
sub
mov
jae
adc
jnp
dec
outsb
rcr
out
push
inc
push
mov
adc
sbb
hlt
adcb
xor
and
cwtl
out
mov
mov
sub
fsubrl
jb
dec
xor
scas
das
inc
rol
adc
lcall
inc
ja
int
movsb
pop
shl
or
or
and
enter
xor
repnz
in
inc
js
cli
xchg
lods
mov
mov
jecxz
mov
test
es
sahf
clc
ret
int3
fisubrl
stc
xchg
fisubs
cs
push
orl
leave
cli
outsb
in
sub
pop
ret
mov
lds
push
lcall
repnz
ficoms
cmp
push
add
mov
aad
pop
push
push
mov
lret
arpl
xsaveopt
sub
popa
and
push
addr16
adc
inc
mov
cmp
jg
repnz
push
sbb
xchg
mov
loopne
xor
push
adc
test
sub
mov
sbb
movsl
adc
jae
and
in
pop
leave
stc
ljmp
push
push
fdivr
lret
es
div
mov
cmpsb
test
xor
mov
sbb
aas
push
popf
pop
mov
cmpsb
xor
xor
pop
or
mov
loop
xchg
adc
push
out
mov
pusha
push
jns
outsb
push
jb
fsubl
cli
or
or
loop
or
sub
xchg
and
psrlq
sbb
xor
and
hlt
stos
xchg
iret
lods
and
jge
or
stos
mov
jp
mov
xchg
cwtl
sub
cwtl
stos
ljmp
sbb
mov
sub
xor
push
sbb
lods
int
or
fnstenv
mov
mov
push
ss
xchg
jo
and
cld
cltd
dec
movsl
add
pop
push
and
mov
mov
add
scas
pop
xor
mov
xchg
popf
mov
xchg
pop
jns
sub
pop
dec
fimuls
scas
and
das
test
mov
adc
sub
movsb
cmpsb
lock
xchg
out
inc
smsw
fsubrs
test
sbb
fisubrs
das
sarl
inc
push
cmpsb
and
iret
dec
xchg
cmpsl
cli
mov
pop
imulb
push
repz
mov
push
cs
jle
or
repnz
jae
shlb
out
push
dec
push
decl
xor
pusha
adc
imul
mov
rcrb
jb
jae
es
dec
fwait
clc
fs
push
push
mov
mov
push
and
je
out
fidivrs
pop
mov
fisubl
lcall
add
dec
xchg
xor
ficompl
pop
sub
or
das
inc
push
lock
jo
mov
fcoms
loope
add
xor
xchg
stc
movsl
popf
inc
cltd
or
int
shlb
cs
push
add
in
inc
mov
lods
sbb
push
mov
jbe
jne
jb
xor
mov
sbb
add
and
ss
and
fisubrs
stc
repnz
pop
adc
jg
repnz
pusha
mul
xchg
pusha
orl
shrb
fidivl
das
push
mov
sub
cli
loop
inc
mov
dec
xorl
jp
cs
fiaddl
mov
or
fidivrs
lds
test
leave
or
lcall
mov
jp
push
push
sub
add
adc
insb
push
push
andl
sahf
jnp
jecxz
pusha
imul
out
fnstsw
adc
and
sahf
xor
mov
insb
js
jno
sub
pop
push
mov
lock
sub
pop
and
adc
lea
stos
loop
jo
push
scas
pop
outsb
push
mov
mov
out
mov
and
dec
mov
add
sub
or
leave
dec
sbbb
pop
sti
cmp
imul
push
fsubs
push
cmp
xor
adc
ljmp
bound
ficoms
sahf
adc
fcoms
inc
xchg
out
xchg
outsl
add
sub
stc
adc
jb
out
jp
sbb
fsubrs
leave
add
mov
adc
or
jmp
add
xchg
pushf
pop
sub
mov
inc
test
fimull
push
lret
dec
iret
push
mov
nop
push
push
lods
or
pop
mov
into
loopne
adc
mov
sbb
cmpsb
mov
aam
or
shrb
decb
push
leave
or
ds
xchg
and
or
stos
push
loopne
scas
mov
enter
jno
jno
push
in
in
out
iret
cli
push
iret
out
ljmp
cld
pusha
push
inc
gs
push
sbb
std
pop
dec
push
jle
loop
dec
sub
std
std
rcrb
subl
fmuls
das
jmp
cli
push
and
sbb
fisubrs
int
emms
sub
loop
sub
xchg
cmp
mov
add
data16
out
jl
sub
leave
jl
jno
mov
push
mov
sub
mov
xchg
and
and
adc
push
cmp
mov
es
test
cmpsl
lahf
inc
adc
lods
data16
push
repnz
mov
mov
add
negb
jbe
insl
xorb
out
xchg
in
jae
sahf
push
inc
outsb
jecxz
fsubrs
pop
mov
das
sbb
xor
inc
push
xchg
xchg
stos
push
test
jbe
cwtl
scas
push
jl
xor
push
mov
xchg
jb
sbb
into
jae
adc
or
sbb
lds
call
fldt
inc
pop
cmp
notl
aam
mov
cmc
int
subb
sbbb
fdivrs
push
jl
mov
sbb
push
inc
inc
fisubl
push
scas
sbbb
xor
sarl
inc
or
or
lcall
ljmp
push
sub
bound
sbb
leave
xchg
and
pusha
mov
cmp
adc
cltd
andb
lods
sub
int
mov
and
in
popa
mov
xchg
nop
xchg
out
or
cs
shlb
cwtl
cli
ss
pop
cmp
and
out
repnz
stc
mov
dec
jnp
push
fimuls
cwtl
in
add
jle
sbb
ljmp
jbe
pop
cmp
insb
enter
adc
fimull
pop
or
xor
out
shrb
sbb
mov
inc
push
dec
cli
adc
popf
jbe
mov
rcr
sub
scas
rsqrtps
adc
shlb
or
pop
das
jae
mov
and
not
cmpb
lods
pop
push
mov
jnp
fbld
and
into
add
push
imul
shlb
inc
out
repnz
and
iret
stc
and
imul
pop
mov
jl
jb
add
in
sbb
and
adc
jecxz
mov
out
add
sahf
lea
icebp
jbe
jb
test
movsl
add
jle
inc
loop
and
adc
push
jb
push
sbb
cs
pop
pop
inc
jns
xor
add
mov
into
xor
sbb
mov
pop
jno
test
fisubrs
scas
loopne
push
sbb
es
ret
jns
sub
lods
adc
es
sbb
add
scas
jle
jns,pn
out
xor
pop
jae
insb
mov
mov
adc
gs
shl
adc
and
sbbb
mov
push
cltd
mov
aam
stos
gs
or
jge
fisubs
mov
cmp
lds
xchg
push
loop
insb
jo
push
repz
and
and
xchg
shr
xor
pop
sbb
jle
loop
adc
pop
lea
andb
jg
and
rcrl
xor
pushf
mov
sahf
stos
xor
add
sbb
mov
leave
cli
or
jle
into
out
and
aaa
adc
cmp
int
sbb
mov
fildl
xor
mov
scas
cmpsl
or
loop
ss
test
dec
cwtl
cs
push
mov
jp
lock
and
das
loope
pop
fwait
bound
xchg
ret
imul
repnz
push
pop
push
mov
sub
outsb
ljmp
jbe
es
dec
fcoms
out
adc
das
jge
fcompl
cmp
xor
sbb
sbb
repz
scas
sub
push
add
rcll
rorl
shll
adc
sahf
rcrl
lods
cmp
pop
or
xlat
add
aam
sahf
and
cmp
push
mov
adc
jne
jo
repnz
mov
sub
and
rdmsr
popf
xor
cs
push
sub
rclb
inc
sbb
fs
pop
outsb
jg
mov
lock
dec
movsb
xchg
dec
in
insl
movsl
lcall
adc
sbb
dec
shlb
mov
out
push
pop
pop
incb
movsl
adc
es
ficomps
ss
daa
std
cmpsb
push
mov
mov
cwtl
pop
int3
lcall
inc
test
or
mov
shlb
sbb
lock
jecxz
xor
into
cmp
push
or
fmulp
cmp
fstp
push
je
push
sub
dec
and
sub
mov
adc
ja
jno
mov
xchg
and
lods
mov
and
rolb
push
xor
es
sbb
mov
xchg
pop
nop
push
mov
shrl
mov
fiaddl
add
lcall
in
push
xor
ficoms
imul
jne
das
mov
testb
jle
inc
jl
jns
and
int
push
das
mov
sub
pop
xor
mov
mov
rolb
sub
cmp
push
scas
mov
cld
aam
adc
filds
jecxz
scas
mov
or
sbb
fidivs
sti
push
in
not
and
sbb
out
aam
xor
xchg
cmp
ss
rcrl
mov
cli
xor
cs
jae
mov
into
movsl
sub
cmp
xor
jbe
cltd
imul
xchg
loopne
adc
xchg
mov
jns
adc
xchg
sub
imul
sub
push
pusha
stc
repnz
push
outsb
out
sub
or
inc
ss
inc
pop
jge
push
gs
and
add
adc
add
incl
ss
fnstsw
jmp
push
jp
repnz
pusha
inc
pop
cltd
cmpsb
fstps
cmpsb
fcomps
pop
jle
lret
lea
push
scas
sarb
cmp
das
push
in
adc
scas
pop
xchg
mov
push
popa
test
stc
or
sbb
and
jl
adc
cltd
stos
fsubrp
jno
bound
rcrb
stos
jno
andl
pinsrw
adc
mov
jecxz
adcb
push
dec
lahf
pop
cmpsb
in
outsb
xor
clc
push
jb
fisubrs
stos
cltd
adc
enter
pop
ja
pop
in
repz
sbb
pop
mov
into
cpuid
push
call
shl
sahf
adc
or
cmp
mov
and
cli
push
xor
cmpsb
add
xor
out
ss
test
mov
js
adc
shl
popl
or
outsb
mov
lock
adc
cld
xchg
jp
xchg
xchg
cvtpi2ps
xchg
adc
or
out
and
adc
dec
jbe
mov
sbb
and
push
pop
jns
push
fcmovu
mov
imul
mov
setb
sub
mov
mov
cmpsb
ljmp
and
lds
notl
push
ret
call
and
cs
jbe
add
rorb
lcall
sub
mov
push
push
inc
outsb
cmpsb
std
add
mov
inc
jno
push
inc
sbb
repnz
pop
cli
adc
add
in
push
add
bound
fistl
jle
aam
add
inc
adc
push
jle
nop
jns
adc
stos
int
push
push
mov
outsl
push
pop
leave
arpl
jbe
addr16
push
cmp
aad
jp
dec
adc
ret
mov
pop
mov
scas
es
aas
pop
sar
xchg
mov
inc
pop
push
and
adc
data16
test
fisubrl
or
xor
ret
or
jne
xchg
ret
rorb
repz
in
push
pusha
cli
and
stc
jnp
add
arpl
test
xor
xchg
pop
or
es
std
add
jb
cwtl
mov
shrb
js
out
and
out
cli
push
and
insl
sbb
sub
lods
mov
nop
dec
in
push
into
inc
jb
jl
mull
adc
testl
popa
mov
bound
push
jbe
imul
push
jno
ds
in
popa
push
cmpsb
pop
aam
push
iret
inc
and
xchg
push
and
jns
scas
pop
dec
xor
inc
pop
lcall
adc
xchg
inc
cmpsl
testb
popf
and
in
mov
cmp
es
inc
push
fisttpll
inc
sub
in
push
insb
pusha
cmpsl
mov
xorps
stos
add
outsb
xor
iret
jp
leave
push
jle
pusha
ss
or
sysexit
pop
outsl
lret
icebp
mov
jmp
sub
lds
push
xor
fdivp
rcrl
mov
or
fisttpl
idiv
cmp
sub
sarb
adc
adc
loop
aad
pop
rorb
sub
push
sbb
mov
jo
xchg
or
jb
lods
push
push
orb
push
pop
xchg
stc
faddp
iret
ss
cmpsb
sbb
push
sub
imul
aad
mov
jb
sub
push
aad
or
xchg
inc
pop
mov
sub
fsubl
inc
push
jmp
pop
movsl
dec
negb
out
push
adc
rcrb
xchg
sbb
fisubs
mov
push
out
movsl
jb
andb
rcrl
out
lea
and
cmpsb
ja
andb
jb
scas
cmp
adc
sbb
es
mov
mov
shl
pop
pop
xor
xor
movsl
add
int3
rolb
mov
lods
lret
fnclex
mov
mov
out
aad
sahf
inc
out
iret
pushf
fiaddl
pop
es
shrb
mov
and
repnz
into
add
or
std
sub
and
jg
xchg
push
jno
mov
mov
pop
push
scas
mov
inc
cmpsb
and
xchg
fidivl
inc
inc
movsl
xor
jb
ss
scas
fimull
fstpt
pop
push
or
fnstsw
das
nop
xchg
inc
into
push
push
call
int
pop
setae
jb
int
negb
fidivrl
dec
ficomps
sbb
xor
sub
cld
mov
pop
mov
data16
sahf
mov
cmp
cmc
xor
ss
fstp
popf
jb
push
xchg
lods
pop
dec
popf
xchg
and
jbe
pop
ljmp
sub
inc
dec
xor
stos
sahf
testb
leave
push
xor
push
cmpsl
cmpsb
outsb
or
dec
scas
xor
push
xchg
es
clc
push
sbb
jecxz
sub
dec
dec
fdivrs
incb
loopne
jle
aas
push
es
cmc
and
scas
mov
pop
jg
sub
cmpsb
dec
sub
into
mov
sub
inc
setbe
scas
jle
imul
and
mov
iret
loop
les
dec
testl
cmp
jae
test
rcrl
dec
sbb
outsb
xor
xor
xor
test
lds
mov
xchg
jb
cltd
popf
push
scas
mov
add
loop
out
sbb
imul
and
lock
xlat
sti
arpl
ret
push
out
adc
pop
dec
xchg
push
sub
leave
int
jb
mov
sub
in
mov
popa
ss
add
jns
push
or
sbb
sub
mov
jle
and
jp
push
dec
dec
sub
sahf
mov
push
sub
sub
add
mov
push
mov
push
push
mov
lcall
iret
in
jle
jbe
mov
dec
popf
insb
outsb
mov
push
pop
imulb
adc
sbb
subl
repnz
scas
pusha
insl
cmp
and
xor
mov
adc
ret
into
or
ret
movaps
xlat
mov
hlt
test
push
mov
pop
jge
adc
push
fmull
jae
shl
mov
subb
cs
loop
shlb
lds
pushf
aas
inc
push
push
out
mov
mov
add
xor
mov
jle
xchg
mov
inc
fisubl
fs
cs
and
bound
xor
sti
adc
adc
xor
and
pop
int
add
sbb
es
sub
push
mov
cmc
nop
push
jbe
mov
int3
pop
pop
mov
ror
push
lcall
push
fs
fcomps
ficoms
push
jmp
add
mov
cs
stos
jle
pop
push
arpl
jle
or
popa
adc
mov
xchg
push
pop
ljmp
cmp
or
xlat
scas
dec
lret
sub
das
pop
adc
xor
into
sahf
sub
pop
fmulp
lcall
sbb
scas
jbe
or
in
ljmp
mov
xchg
push
cmp
push
sti
mov
mov
clc
and
ficoml
jp
xchg
jns
dec
jno
es
nop
sbb
xor
dec
xchg
push
xchg
and
pop
push
cld
pop
jmp
fcmovu
adc
pop
or
repnz
and
pop
mov
dec
push
sub
ljmp
rclb
sub
out
xchg
les
jb
sub
test
test
testb
mov
and
push
dec
pop
inc
add
loope
add
addr16
or
cli
mov
push
add
cmp
pop
shll
into
scas
inc
lret
insb
pop
int3
cmpsb
pop
movsb
push
stos
notl
inc
mov
xchg
sbb
mov
jns
push
push
mov
lds
sbb
jo
xchg
loopne
fmull
and
push
rorl
jle
mov
mov
dec
mov
out
xchg
leave
stc
xor
andb
repz
inc
es
shlb
or
cmp
xor
test
test
fists
sbb
push
push
scas
dec
cli
sub
cltd
push
movsl
test
loop
xor
in
sub
mov
pop
rorb
ss
add
int
out
shll
mov
dec
negb
stos
jle
adc
or
ficoml
jbe
out
xchg
add
and
dec
mov
xchg
inc
push
hlt
jp
pop
int
or
pusha
ljmp
loop
sub
or
push
push
inc
sahf
xchg
int
or
xchg
test
fwait
jo
inc
mov
out
push
push
fisttpl
fdivr
and
loop
inc
leave
repz
mov
xchg
imulb
push
xchg
das
outsb
xor
pop
cltd
mov
mov
pop
xchg
adc
sub
dec
lea
dec
clc
out
mov
jle
pop
cmp
mov
cmp
dec
je
bswap
repnz
jp
cld
sahf
jae
adc
pushf
mov
loop
mov
sub
data16
aaa
push
out
push
lds
cmp
jb
mov
ss
jbe
adc
out
into
fisttpll
mov
xchg
dec
sub
and
push
call
jae
dec
out
out
das
ret
xor
mov
push
cmp
lahf
sbb
jge
outsb
mov
push
ret
or
test
ffree
repnz
pop
jno
or
rcl
mov
call
icebp
and
xchg
cmpsb
cltd
gs
test
jns
pop
cs
cmp
sbbb
sbb
imul
jbe
ficompl
mov
rcrb
repnz
stos
xchg
aad
push
test
popa
sub
push
dec
jnp
mov
sbb
and
xchg
dec
loop
sub
xchg
ffree
shlb
stc
push
jmp
mov
loop
xchg
xor
sbb
dec
jnp
or
adc
scas
xchg
push
sbb
pop
adc
push
cmp
sahf
xchg
aaa
mov
xchg
in
pop
dec
push
scas
and
push
scas
test
notb
sbb
pop
movsb
push
leave
jbe
and
into
iret
ss
xchg
jle
mov
lcall
mov
scas
cltd
lret
rorb
push
iret
adc
int3
orb
push
mov
into
sub
jle
lods
out
out
sub
popa
jbe
jb
movsb
add
push
mov
mov
and
push
jmp
scas
push
push
lret
into
xchg
push
das
shl
fisubrs
cmc
sub
xor
push
cmp
stos
out
stos
mov
push
scas
aad
pop
pop
mov
mov
sbb
ret
cs
push
scas
repnz
ljmp
imul
out
cmp
out
add
aad
outsb
dec
jle
push
push
and
scas
sbb
cmp
outsb
and
xchg
xchg
popl
xor
adc
sub
mov
popf
push
and
cmpsb
repnz
push
mov
lods
push
bound
mov
pop
fildll
add
sub
push
and
cs
mov
fnstsw
cmpsb
nop
xor
aas
test
adc
sub
sub
or
push
sbb
aaa
mov
lret
jno
add
mov
or
iretw
xlat
adc
sahf
ret
push
dec
test
ss
ret
mov
add
into
and
sahf
sub
cmpsb
xchg
dec
or
gs
sbb
mov
mov
sbb
mov
adc
push
mov
int3
jae
ja
cmp
push
add
int
stos
dec
popa
sub
or
jle
push
fs
cltd
push
push
jns
xchg
push
out
out
sub
fisubrl
inc
movlps
xchg
test
andb
pusha
cltd
and
pop
fistpl
mov
in
pop
push
dec
xor
pop
test
jbe
scas
or
push
inc
mov
cwtl
lds
pop
or
and
imul
decb
lcall
loopne
iret
mov
add
lcall
cmpb
cwtl
popa
xchg
ljmp
cmp
rcr
xchg
movsl
mov
popf
inc
sbb
in
pop
in
and
push
cmp
dec
xor
xchg
dec
pop
or
dec
xchg
rcrb
push
fistl
cmpsb
push
xlat
repz
loope
sub
sub
adc
mov
xchg
add
xchg
jae
jns
scas
cmp
mov
mull
bound
pop
mov
sbb
add
and
pop
pop
iret
jl
das
cmpsb
outsb
mov
xchg
sbb
and
and
xchg
out
dec
mov
cli
mov
sbb
pop
pop
adc
out
inc
stc
or
and
imul
insb
or
cli
xor
mov
testb
push
pop
adc
int
mov
jno
data16
push
iret
test
mov
orl
cmpb
push
xchg
dec
or
push
xor
inc
stc
aam
push
aaa
popf
or
push
push
inc
pop
adc
fstl
jnp
ficompl
pop
test
sbb
and
scas
pusha
loopne
cmp
aaa
and
inc
pop
cmp
int3
mov
jle
sbb
or
sub
or
xor
add
adc
out
xchg
pop
fildl
enter
sub
adc
push
or
dec
stc
std
scas
mov
pop
adc
sbb
inc
jo
fimuls
inc
or
mov
mov
push
sub
out
rclb
jno
jns
jns
imul
xor
adc
scas
cltd
punpckhwd
stc
or
inc
rolb
and
jl
pusha
pop
out
lcall
ficoml
jb
push
jbe
gs
mov
xchg
jle
mov
dec
mov
ss
push
fidivl
and
cmp
movsl
scas
add
lcall
das
mov
jle
and
jp
inc
cmp
jl
sub
or
cmp
fucom
xor
xchg
mov
or
mov
jle
add
xor
cs
es
scas
pop
xchg
scas
or
push
push
fstl
data16
popa
ret
pop
stos
xchg
pop
or
stos
cmpsb
leave
aam
ss
and
xchg
xor
stos
pop
sbb
push
idivb
push
iret
push
adc
push
dec
sbb
add
sub
sbb
out
in
fisubl
stos
arpl
push
stc
adc
jno
arpl
mov
pop
adc
data16
leave
add
test
push
cltd
push
jns
es
icebp
push
stos
add
and
adc
sahf
fsubrl
outsb
jb
jle
movsl
sub
push
es
enter
ss
test
inc
add
xor
iret
mov
add
fisubs
pop
or
lcall
sbb
sbb
push
stos
lock
add
and
sbb
mov
sahf
fidivl
push
xchg
xor
into
xlat
and
pop
jge
jle
mov
dec
pop
xor
push
mov
arpl
sbb
outsb
hlt
jb
xchg
fistpl
inc
cmp
xchg
xlat
bound
sbb
fsubrs
push
cs
lods
pop
push
dec
adc
into
shlb
sub
sub
push
mov
scas
ss
push
or
push
mov
cmp
icebp
dec
faddl
shl
and
pop
sahf
aam
pop
call
fisubl
jns
sbb
adc
in
inc
inc
inc
and
mov
adc
add
pop
inc
js
xchg
jnp
jp
jns
jo
inc
into
push
mov
pop
xchg
ss
stos
xchg
push
pop
shll
adc
or
cmp
dec
in
pop
xchg
repnz
sbb
pop
mov
inc
add
xchg
push
jns
sahf
mov
inc
mov
push
lcall
sbb
clc
fidivs
push
hlt
rcr
xor
fdivrl
mov
es
mov
and
push
notb
sbb
cli
in
addb
lea
cmp
cs
sbb
scas
mov
push
in
lock
lock
push
or
ret
mov
or
ljmp
jbe
addr16
loope
push
push
rcrb
push
mov
sub
cmpsl
out
sahf
cwtl
xchg
sbb
subl
push
push
jb
xor
jb
or
out
xchg
ss
imulb
mov
adc
push
or
cltd
mov
out
out
mov
inc
push
insb
in
adc
fwait
and
int3
mov
out
sbb
imul
fiadds
sahf
mov
xadd
xchg
xor
insb
pop
cmp
andb
or
iret
popa
mov
push
push
xchg
jno
outsb
adc
inc
sbb
popa
repnz
xchg
pop
idiv
sarb
adc
cmp
imulb
hlt
jp
nop
push
lcall
and
xchg
outsl
dec
or
cmp
mov
xchg
arpl
arpl
pop
movsl
or
in
pop
movsb
jmp
adc
inc
dec
scas
mov
sbb
xor
or
lret
fmuls
pop
push
xlat
notb
jle
mov
bound
repnz
into
and
push
and
push
sub
movsb
push
jnp
outsb
scas
pop
pop
push
push
xor
into
add
cli
lret
popa
or
jns
sbb
aas
dec
cltd
out
mov
inc
add
or
testb
push
or
into
insl
shlb
mov
push
ficomps
or
xor
ss
test
jo
cs
orb
sub
out
push
mov
out
iret
popf
rorb
bound
sub
inc
std
idivb
pop
cltd
stos
dec
push
ss
xchg
xor
add
fisubrs
sub
pop
lret
sbb
inc
ja
out
sti
in
xchg
push
push
cli
adc
dec
test
into
cmp
mov
faddp
mov
rcrb
insb
ja
lcall
fisubs
pop
mov
jecxz
les
sbbl
bound
mov
scas
jp
loope
imul
dec
bound
xlat
sub
movsb
addr16
xor
xchg
jge
jle
push
xor
loop
xchg
pop
fwait
push
iret
sbb
sub
int3
idivb
subl
rcl
adc
enter
cmpsb
movsl
mov
rcll
sbb
testb
sub
add
xchg
push
jns
sahf
or
mov
int
std
xor
or
sbb
hlt
js
clc
push
pop
jle
or
dec
loop,pn
arpl
push
rcr
push
add
xchg
sub
and
adc
jbe
push
fidivs
xchg
mov
jle
add
popf
sub
jns
push
test
lea
xchg
cmp
mov
ds
inc
xlat
mov
fisubl
or
push
adc
dec
int
dec
cs
rcl
pop
test
cli
mov
and
inc
push
add
shrb
or
cmp
sti
sbb
push
bnd
mov
incl
test
jbe
inc
cwtl
xchg
data16
mov
test
fwait
adc
sub
push
pop
push
xchg
jmp
fiadds
pop
push
mov
cmp
jns
push
xchg
in
ficompl
mov
loop
or
cmp
mov
xchg
out
dec
push
push
mov
or
sub
xlat
adc
scas
push
iret
mov
and
xchg
fimuls
or
mov
xchg
cmp
pop
ljmp
test
in
test
imul
jp
xchg
sub
sbb
sahf
adcb
sub
stos
mov
push
out
jbe
test
notb
xchg
mov
scas
push
and
adc
push
pop
movsb
xchg
push
xchg
sar
jp
testl
notb
mov
add
pop
pop
fisubl
movsl
push
cmpsb
lods
lods
in
and
in
lods
scas
int
lods
push
mov
ss
sahf
xor
pop
subl
mov
push
push
mov
adc
negb
ficomps
dec
cli
push
xor
fwait
inc
jns
rcr
or
aam
dec
in
scas
xchg
repnz
sahf
rcll
fimull
xor
lock
mov
cmpsb
popl
jp
sub
out
push
adc
aaa
jbe
sbb
pop
push
imul
int
cs
data16
cs
test
add
bound
inc
mov
mov
mov
push
xor
js,pt
lock
rcl
xor
inc
add
adc
and
mov
fnstsw
ljmpw
jmp
and
mov
fimuls
or
sbb
es
push
adc
loop
loop
add
fnsave
pop
loope
popf
stos
mov
cwtl
and
repnz
sbbb
scas
insl
in
and
xor
cmp
enter
fmul
pop
or
push
or
cmp
loop
mov
jmp
mov
stc
mov
inc
push
sar
insb
push
xor
jge
in
data16
add
pop
and
sahf
out
and
lods
ja
repnz
adc
dec
test
add
imul
fiaddl
jle
popa
cmp
cs
xchg
loop
and
adc
push
sahf
gs
es
jp
stos
ss
mov
push
lret
push
sub
push
outsb
sahf
jbe
sbbb
xchg
mov
pusha
adcb
mov
orl
mov
adc
sub
sbb
mov
xchg
fidivrl
mov
test
push
or
nop
out
shrb
xorb
sbbl
cmp
imul
sbb
xchg
mov
call
push
scas
call
sbb
incl
popa
push
out
cwtl
shr
shlb
ss
sahf
xchg
mov
sbb
cld
pop
mov
or
jp
pop
push
inc
pop
jae
aaa
fdivs
xor
mov
and
repnz
rorb
lret
pop
mov
and
or
sbb
sbb
lods
jle
pushw
pop
mov
push
aam
cs
insl
fwait
jnp
mov
in
push
bound
mov
inc
push
mov
les
addl
int
push
nop
jne
js
push
sub
sub
dec
lods
fmulp
out
das
or
xor
sbb
pop
or
push
fidivs
stos
xchg
insb
scas
xchg
or
jp
mov
push
jl
and
imul
mov
adc
fdivrs
or
push
test
pop
ss
loopne
test
in
pushf
scas
xor
xor
orb
scas
xchg
push
push
or
add
sub
inc
mov
mov
adc
repz
ror
dec
scas
shrl
cmp
div
adc
aam
sub
pop
std
jbe
xor
mov
ljmp
cmpsb
jmp
loop
imul
xor
imul
mov
lahf
dec
std
outsb
xchg
movsl
push
adc
rolb
addr16
push
jb
cs
sbb
mov
or
cltd
push
movsl
sub
ss
mov
arpl
mov
and
xorb
sbb
push
pop
mov
pusha
pop
imul
dec
or
ret
xor
mov
sbb
sbb
push
fwait
push
push
sbb
into
cmp
fidivl
xor
cwtl
mov
scas
sbb
dec
mov
xor
inc
xor
sbb
inc
push
pop
test
adc
sbb
and
roll
mov
lahf
push
std
inc
pop
jp
add
dec
dec
in
lcall
jbe
mov
and
sarb
into
push
push
or
cmp
int3
pop
and
cltd
aad
jae
jb
jnp
arpl
add
pusha
push
sub
sub
es
push
and
add
shlb
jp
out
jno
ret
pushf
gs
xchg
testb
adc
sub
inc
sub
fisubrl
cmp
adc
add
shlb
fsubs
adc
sbb
sub
inc
ja
jbe
hlt
in
mov
push
sbb
in
push
sub
mov
std
xchg
testb
mull
bound
xor
das
xchg
cli
aam
dec
rolb
imul
out
jp
cli
dec
iret
sbb
or
and
xchg
jle
jle
cltd
cs
inc
inc
outsb
mov
push
mov
imul
pop
je
sbb
push
ljmp
and
xchg
pop
adc
dec
xlat
cli
push
out
ficoml
add
loop
rclb
sahf
push
xchg
mov
push
jmp
subb
js
mov
fsubl
mov
movsl
cmpsb
adcb
lds
xor
cmp
xor
xchg
mov
orb
or
das
fdiv
pop
daa
jno
lret
loop
mov
scas
pusha
jbe
mov
sub
rcll
jno
bound
mov
cwtl
add
dec
dec
xchg
addr16
and
adc
xor
or
aad
fcomps
adc
mov
loope
mov
push
jmp
jno
imul
cmp
movl
jae
nop
jns
or
pop
sub
sbb
imul
sub
stc
jp
add
in
jae
xorl
adc
pop
cli
lcall
mov
pop
and
mov
jb
push
gs
in
outsb
mov
dec
fisubl
sbb
add
or
out
inc
pop
jo
repz
addr16
in
call
jp
xor
dec
or
jmp
out
loopne
jmp
sti
mov
inc
cmp
iret
cmp
clc
mov
push
call
pop
das
push
stc
aad
push
or
out
ljmp
fidivrl
cmpsl
push
stc
sub
mov
scas
into
pop
sub
ja
push
xor
mov
xchg
shl
out
ror
incl
outsb
out
pusha
jl
pop
pushf
rcll
lock
arpl
sbb
mov
sub
loope
cwtl
outsb
pop
mov
mov
jb
filds
or
mov
or
out
negl
out
sahf
jmp
pushf
xchg
mov
out
jecxz
xchg
lret
out
mov
out
mov
inc
sbb
outsb
sub
and
subb
mov
pop
icebp
lock
mov
push
or
cmp
sub
xor
or
adc
jp
mov
or
push
push
fcom
test
aas
adc
or
sbb
jns
adc
add
je
out
fndisi(8087
and
sahf
outsl
jl
jae
mov
in
push
and
cmpsb
cmp
fs
mov
or
sbb
xchg
xchg
or
dec
inc
xchg
mov
jle
cmpsb
test
leave
xor
sarb
cmp
xor
sarb
or
mov
mov
jb
shrl
sub
stos
dec
xchg
fwait
lcall
stc
sub
mov
scas
fdivp
push
adc
xor
sub
ss
sub
jb
sbb
mov
dec
inc
adc
inc
push
push
cmp
and
mov
push
lret
xor
fsubrs
jb
sub
inc
xchg
imul
xor
int
xchg
mov
out
mov
into
adc
and
dec
and
pop
bound
jle
jb
jp
jb
mov
adc
out
cwtl
cwtl
add
mov
pop
pop
sbb
mov
cli
or
cmp
testl
push
rcrb
sub
adc
loop
pop
in
nop
adc
ss
push
cltd
rclb
jle
fisttpll
shlb
movl
cli
adc
neg
cld
inc
pop
nop
xor
jb
sub
push
push
adc
lret
das
stos
sub
cli
pop
jp
xlat
push
sub
and
mov
mov
mov
mov
xchg
mov
mov
clc
fimuls
nop
mov
and
sub
jo
adc
xchg
fisubl
push
sub
aad
cs
mov
outsb
aam
push
cmp
adc
dec
pop
scas
jb
mov
sbb
out
ss
or
mov
xchg
pop
adc
sub
push
cmpsb
and
pop
sar
in
xlat
iret
je
push
push
out
loop
repnz
or
or
aas
sbb
add
push
subb
cmp
jbe
push
into
imul
stos
or
lcall
pop
mov
add
xor
push
and
jle
push
ljmp
outsb
pop
mov
in
and
stos
push
adcl
push
ret
sub
test
sub
outsb
pop
adc
dec
mov
bound
jno
mov
in
or
shll
ljmp
cmp
mov
insb
pop
lahf
push
cmp
mov
pop
jge
idivb
xchg
push
or
add
adc
sub
sahf
loopne
adc
shll
hlt
pop
mov
repnz
push
pop
push
adc
subb
push
popa
push
pop
mov
xchg
dec
sbb
popa
cli
sbb
fists
mov
clc
lcall
sbb
clc
out
sub
push
push
out
or
decb
outsb
xchg
jge
push
cli
clc
in
rclb
sub
mov
ss
push
push
mull
sbb
call
aam
repnz
sub
fcomps
ljmp
out
adc
or
or
xor
scas
es
mov
stc
xchg
loop
mov
repnz
inc
lcall
adc
fwait
jbe
adc
jno
out
pop
ja
scas
popf
push
loopne
xchg
ficoms
sub
inc
movsl
mov
mov
or
es
shr
sbb
mov
fisttps
fnclex
or
sti
mov
mov
ret
lcall
jno
jno
dec
xor
outsb
mov
es
xor
push
es
add
fldcw
sub
jnp
pop
nop
ror
mov
ds
pop
push
xchg
adc
fildll
add
sub
mov
in
mov
cli
fs
ljmp
sbb
xor
stos
or
pop
xchg
ss
rclb
orb
mov
and
sub
mov
fisubrl
mov
dec
sarb
jle
fcomps
lret
lods
push
rcl
repnz
arpl
xor
sbb
xchg
in
adc
add
outsb
jae
pop
lock
cmpsl
scas
ret
mov
or
iret
int3
mov
cs
out
mov
cmc
xchg
mov
xor
cmp
mov
jle
push
jb
out
mov
xchg
pop
lcall
sub
out
or
scas
or
mov
mov
popf
mov
ret
push
fstpl
adc
mov
ss
shlb
sti
push
pop
bound
dec
push
xor
iret
or
es
mov
mov
mov
or
scas
mov
test
mov
pusha
mov
scas
xchg
add
jle
scas
cli
rorb
xor
and
lahf
cmp
mov
xchg
popa
pop
xor
aaa
push
jecxz
arpl
out
pop
insb
stc
imul
sarb
xchg
pop
fimull
stos
sbb
jmp
xchg
stc
rcrl
sub
adc
jl
pop
push
pop
cmpsl
dec
pop
out
pushw
inc
or
test
push
xor
sub
data16
lret
inc
or
jb
adc
sbb
push
fwait
jp
and
lea
jge
out
add
sub
insl
dec
mov
mov
fucomp
leave
pop
xor
incb
dec
cmpsb
push
add
mov
jb
push
jnp
mov
push
or
cli
jb
jbe
outsb
adc
sbb
addr16
fidivrs
mov
mov
xchg
xchg
push
out
adc
mov
sbb
outsb
and
add
shlb
cmp
or
xchg
push
pop
mov
add
lods
shrb
and
dec
stos
xchg
and
sbb
pop
repz
mov
out
sbb
fidivrs
and
xor
and
push
outsl
mov
cltd
jb
jno
sbb
jae
dec
adc
test
loopne
test
push
ficomps
push
shrb
hlt
sbb
jb
and
xchg
and
cmpsb
push
scas
adc
or
or
or
push
data16
and
sub
adc
cmp
pop
scas
jp
outsb
ja
aam
cli
into
cmpsl
adc
call
inc
data16
popf
and
xchg
sahf
push
scas
out
inc
stos
hlt
dec
adc
sbb
push
pop
es
sbb
mov
sbb
out
dec
pop
roll
mov
pop
sub
cmc
test
inc
jae
push
push
adc
inc
das
fucom
in
mov
sub
scas
mov
xchg
mov
mov
push
adc
hlt
popw
lock
jns
push
ljmp
jbe
outsb
cli
push
dec
dec
jg
ljmp
stos
sbb
adc
mov
jp
call
vmovhps
shll
mov
ss
nop
lods
mov
orl
or
sti
cltd
push
pop
popa
jae
loop
cmp
cmp
push
xor
das
jle
scas
xchg
bound
and
ljmp
aam
das
cltd
adc
mov
rol
push
roll
fsub
enter
stos
sbb
mov
and
fcomp
cltd
in
mov
add
cli
popa
sti
adc
cmc
jp
lret
xchg
cmpsl
mov
mov
adc
xor
dec
imul
aaa
jno
cmpsb
popa
movsl
mov
scas
xor
movsl
pop
jne
mov
outsb
mov
in
add
ret
push
scas
push
leave
adc
imul
cmpsb
fisubrs
sub
lret
jae
jns
mov
or
jne
stos
pop
mov
jmp
popa
rcrl
mov
push
lea
sbb
jp
mov
sub
push
loopne
pushfw
sbb
sub
into
mov
xchg
test
sub
mov
jne
mov
insl
out
sub
sub
iret
bound
mov
jle
or
decl
mov
cmpsb
in
mov
fdivs
adc
and
aaa
push
xchg
subb
jbe
dec
mov
mov
scas
jp
notb
cmpsb
push
enter
arpl
dec
les
or
sbb
pop
push
inc
imulb
xor
sbb
imul
std
pop
push
mov
sub
test
sbb
jb
dec
loop
jae
test
adc
out
testb
rcr
push
xchg
jbe
int3
loop
mov
repnz
or
cmp
outsb
stc
jno
and
cmpsb
pop
xlat
xchg
cmc
shr
or
jne
push
movsl
mov
ret
push
dec
mov
sub
out
pop
and
imul
push
mov
dec
push
dec
sbb
in
and
pop
pop
jmp
cmp
push
adc
add
jno
push
dec
js
xchg
das
or
xor
sub
push
xacquire
jmp
jle
push
jg
gs
mov
adc
jb
cli
ficoml
xchg
stos
lret
fdivl
xor
mov
dec
mov
ljmp
cmpsb
outsb
inc
repnz
loope
xorb
mov
jbe
mov
and
fisubrs
xor
in
push
loope
cli
inc
inc
rol
fiaddl
mov
jp
or
cmc
jne
xor
stos
fnstsw
sbb
mov
mov
push
clc
or
in
shlb
out
cmpsb
push
movsw
dec
jne
push
mov
loop
inc
xchg
adc
repnz
dec
jbe
jbe
adc
sbb
lock
scas
int
pop
testb
cld
or
cli
or
adc
fisttpll
movsb
xorl
test
jb
fisttpll
push
push
pop
movsl
sarl
aad
sbb
push
fadds
jnp
jb
mov
sbb
shl
aaa
ret
xchg
add
jg
ss
mov
stc
jb
push
xor
add
out
and
mov
adc
scas
xchg
push
cs
xchg
push
ficomps
mov
pop
inc
ja
stos
arpl
ljmp
mov
dec
call
incb
shl
es
test
mov
sbb
push
mov
outsb
and
jle
cli
imulb
cs
ret
inc
xchg
jb
das
fwait
xor
pop
in
adc
cli
stos
jge
adc
imul
jl
cmpsb
fldl
sub
repnz
push
jg
sub
in
add
imul
mov
mov
orl
sahf
jle
arpl
sahf
push
scas
stos
int3
shll
and
push
mov
jbe
mov
imul
push
fldl
push
push
out
adc
das
mov
lds
dec
push
repnz
ficoml
bound
push
sub
leave
mov
scas
mov
repnz
movsl
pop
push
mov
and
inc
push
arpl
jle
jmp
shrb
popf
out
xor
fistpl
jle
adc
and
dec
ljmp
sbb
in
fst
xchg
jb
cltd
push
data16
rorb
cmpps
in
ljmp
jns
jb
xchg
lcall
int3
pusha
adc
jbe
int3
nop
or
imul
imul
push
in
jns
push
push
sbb
jle
test
mov
pop
push
outsb
push
xchg
add
rcrb
pop
and
mov
adc
adc
jmp
subb
ljmp
push
out
rorb
add
ficoml
sbb
imulb
add
and
push
jp
outsl
cs
push
out
xor
adc
and
xchg
jmp
and
push
hlt
lcall
jp
fadds
mov
or
jbe
mov
in
lods
ljmpw
and
jecxz
das
mov
addb
cld
pop
push
rorl
push
sub
mov
jle
dec
lcall
xchg
jno
stc
pop
data16
sti
or
in
sub
push
subb
shl
sbb
push
into
fcompl
loop
jmp
mov
frstor
lret
and
mov
cmpsb
xor
sahf
jbe
mov
add
int
push
and
xor
cmp
lds
imul
pop
out
div
xchg
repz
add
push
mov
loop
pop
data16
in
sbb
rorb
mov
push
pop
jno
push
sub
inc
scas
mov
xchg
cwtl
mov
add
pop
cmpb
jge
fildll
or
jp
jno
popa
dec
mov
jl
xchg
mov
pop
dec
xchg
mov
adc
mov
loope
testb
and
sub
inc
jno
sub
aad
xchg
pop
or
sar
data16
mov
rcrl
lcall
or
jmp
cmpsb
add
cltd
ljmp
shlb
mov
jbe
leave
push
jle
lcall
sahf
and
inc
inc
add
in
dec
lret
cs
cli
pusha
stc
cmp
lods
xor
mov
jb
jmp
repz
enter
shrb
pop
sbb
loop
clc
aam
aaa
mov
xchg
mov
dec
and
push
sbb
cwtl
ret
xchg
mov
push
xor
cvtps2pd
or
aas
shl
adc
stc
adc
xlat
jmp
out
add
out
sbb
ljmp
jbe
call
scas
test
or
lea
adc
nop
ljmp
repz
cmc
imul
adc
xor
into
js
dec
stc
lahf
loop
and
push
repz
xchg
stos
pop
outsb
repnz
mov
push
xchg
xchg
or
adc
xor
ljmp
and
nop
sub
sbb
outsl
pop
in
sub
popa
xchg
mov
xchg
lcall
and
cmpsb
push
movsl
out
por
add
mov
stc
sahf
lods
xchg
sbb
pop
ss
add
mov
jbe
or
push
xchg
ss
push
xor
frstor
cmp
push
inc
fstpl
scas
mov
push
jb
fisttpll
mov
sbb
stos
and
movsl
add
loop
leave
mov
push
or
dec
sahf
xchg
scas
pop
rclb
loop
push
push
jo
pop
ljmp
mov
adc
jo
jne
add
scas
lcallw
ljmp
push
decb
cmp
out
push
sub
mov
adc
dec
jno
adc
mov
mov
fidivs
popf
adc
add
sbb
push
xchg
add
mov
enter
fwait
shl
shll
stos
xchg
mov
fsubrp
adc
or
mov
repnz
jns
mov
cld
insb
xor
push
clc
or
add
mov
add
leave
jle
icebp
aaa
jno
es
pop
scas
divl
xchg
in
aaa
mov
cld
pusha
jle
fwait
adc
dec
lods
sbb
or
sub
pop
adc
sbb
cli
mov
outsb
xor
cs
and
add
subl
popf
add
bound
mov
adc
mov
outsb
xchg
ret
push
ret
scas
sub
pop
jae
addr16
jbe
xorb
push
in
or
cltd
and
jp
popf
add
insl
xlat
inc
mov
outsb
push
fldl
dec
clc
test
int3
jne
xor
and
cwtl
insl
mov
push
push
in
ss
fucomp
cmpsl
cmpb
in
xchg
dec
jecxz
inc
push
int3
repz
adcb
adc
push
mov
scas
pop
scas
add
ljmp
stc
outsb
es
pop
sub
xchg
jns
push
ret
mov
and
xchg
push
mov
pop
adc
in
ja
cmpsb
int
mov
sahf
jbe
je
adc
add
outsb
push
rolb
outsb
sub
das
dec
or
movsb
stos
jle
pop
push
cltd
jb
sbb
jmp
aad
xchg
arpl
push
gs
in
sub
out
or
xchg
xchg
xchg
out
cwtl
nop
mov
cli
scas
or
pop
xor
and
mov
push
outsb
ljmp
nop
adc
add
push
sub
lcall
orl
mov
stos
out
stc
out
out
add
push
sub
fcoml
mov
add
jbe
hlt
fcomps
push
pusha
je
popf
dec
push
xor
out
jp
add
loop
xor
push
out
shll
daa
lds
jle
add
das
fstpt
dec
arpl
fisubs
data16
sbb
out
aaa
divb
scas
xchg
xchg
hlt
fstpt
sbb
or
mov
sbb
mov
mov
mov
call
imul
mov
repz
test
repnz
jle
xchg
pop
xchg
mov
loop
push
jg
pushf
mov
mov
sbb
mov
pop
mov
and
mov
lods
mov
mov
mov
js
or
mov
push
jbe
push
push
movsl
movl
push
sub
mov
jge
bound
mov
and
into
hlt
jp
add
lods
pop
sti
fsubrs
add
push
rorb
aaa
insl
aaa
or
les
adc
jbe
pop
loopne
shrb
mov
mov
mov
adc
xchg
xor
inc
cld
mov
inc
adc
outsl
jb
sub
xor
lret
movsb
lcall
pusha
jp
add
cmpsb
mov
fimuls
mov
pop
mull
push
xchg
xchg
mov
or
and
stos
imul
pop
mov
out
cs
inc
or
pop
outsb
bound
dec
es
cmp
mov
addr16
outsb
scas
mov
aam
pushf
mov
shlb
lds
adcb
sbb
push
push
push
xor
pop
push
or
push
scas
and
in
and
loop
cmpsb
test
clc
dec
mov
and
push
jb
scas
gs
fdivrs
fcoms
and
push
outsb
or
or
jp
fimuls
xchg
sub
xor
sbb
lock
dec
loop
ljmp
sahf
sub
jle
ss
cmpsl
jecxz
shll
int
outsb
and
sub
outsb
push
cli
mov
stc
jp
lock
imul
mov
mull
or
imul
jecxz
adc
mov
or
xchg
test
mov
ljmp
push
das
in
xor
xchg
push
and
mov
jno
jge
pop
stc
dec
and
cmp
push
dec
xor
dec
enter
sub
pop
xchg
push
mov
and
rcrl
adc
in
out
inc
cmp
mov
add
or
jb
inc
or
mov
repnz
push
mov
mov
dec
pop
sub
or
dec
iret
jbe
fsubrp
loopne
cmpb
push
aad
sbb
sub
cmpsl
cli
adc
push
sub
mov
sub
pop
cmp
pop
test
mov
es
adc
or
ret
scas
push
outsb
jns
push
xchg
stos
pop
cs
notl
sub
push
mov
imul
jbe
mov
push
sbb
mov
adc
mov
out
int3
mov
gs
shll
push
bound
iretw
int3
jle
sbb
mov
aas
adc
into
lea
out
add
or
stc
xchg
inc
je
or
sbb
in
mov
cli
int
imulb
xor
call
insb
ficompl
pop
or
push
cmp
pop
cs
jle
adc
mov
popf
stos
hlt
pop
mov
dec
test
sbb
mov
jle
xchg
scas
clc
mov
xorl
cs
jle
or
jb
and
or
mov
data16
push
inc
jp
into
mov
repnz
xchg
pop
sbb
arpl
xchg
roll
push
cmpsb
sbb
inc
rcll
lahf
rclb
or
mov
sbb
rcll
push
dec
sub
cs
push
cmp
adc
sbb
adc
sbb
addr16
fcmovne
pop
scas
cvttps2pi
pop
scas
fldt
mov
fcompl
scas
lds
dec
loope
jp
shrl
jne
roll
and
xchg
jbe
out
jns
sub
cmpsb
sub
push
stos
adc
adc
imul
or
stos
xor
sbb
ficoms
or
and
adc
mov
out
pop
outsb
sahf
in
inc
fwait
push
jno
negb
out
push
dec
and
xor
pop
dec
add
cs
mov
je
testb
je
sub
inc
loop
ljmp
repnz
pop
sub
in
outsb
and
xchg
and
jmp
sbb
mov
rclw
and
xchg
sbb
and
push
imul
ljmp
jno
mov
sahf
scas
mov
cmp
adc
jmp
lahf
push
popf
or
into
and
pop
sub
repz
push
pop
jns
stc
ret
push
pop
cld
lods
dec
in
shl
xchg
mov
pop
jmp
or
or
mov
cmp
or
push
scas
xchg
dec
xor
popf
divb
insb
lds
fimuls
or
jbe
jle
pop
jnp
mov
jnp
das
lock
or
sub
push
push
cs
adc
ja
into
sti
mov
loope
or
push
pop
stos
sub
ja
dec
mov
movsl
fstp
std
popf
scas
pusha
subb
or
add
and
adc
push
dec
les
and
push
lcall
int
loop
cld
and
mov
cltd
xor
stos
mov
pop
fdivr
out
lods
sbb
stc
sub
cmpsb
add
lods
push
pop
shr
and
fidivl
jp
mov
add
lock
andb
pop
cmp
mov
in
mov
mov
xor
fwait
out
xchg
sub
shll
adc
arpl
in
push
popa
or
das
lea
sub
pop
stos
pushf
loopne
sub
jle
sub
cli
enter
or
ss
pop
pop
xor
imul
xchg
adc
jle
insb
mov
push
jp
cmc
clc
xor
aad
stos
mov
xchg
out
pop
xor
xor
adc
push
mov
neg
or
outsb
movups
push
push
out
fidivl
movsl
xchg
jb
or
jp
jp
test
pop
jno
sbb
add
cli
and
cwtl
xor
jmp
jnp
movsb
jecxz
push
popf
mov
out
adc
stos
xchg
out
fwait
dec
pop
pop
pop
ss
sub
jns
xor
sbb
push
packssdw
stc
or
std
xchg
sub
push
adc
xchg
xor
hlt
outsb
adc
movsb
sub
pop
or
jb
cmpsb
push
pushf
out
repnz
movsb
push
or
or
sub
es
sbb
jle
mov
pushf
ret
jnp
es
fisubs
out
in
sarb
scas
cmpsb
xor
dec
sub
divb
sub
or
mov
jns
bound
sub
sub
int
and
sbb
scas
insb
pop
andb
jp
out
adc
iret
cld
xchg
lcall
jb
sub
pop
stos
push
cli
xor
ljmp
fstpl
popf
dec
ss
push
out
push
jb
rcll
adc
cmpsb
in
sbb
ficompl
or
sub
and
jp
jbe
pop
hlt
pop
stc
neg
xor
shlb
es
xchg
fistl
jmp
outsb
mov
jmp
call
push
pop
jb
loop
in
adc
xor
divb
adc
add
fwait
leave
jp
push
jno
or
xchg
add
xorb
inc
and
sub
mov
inc
push
push
test
cmp
and
movsl
outsb
imul
add
fimull
pop
stos
repnz
pop
mov
or
sti
jno
mov
aas
sbb
push
pop
ss
mov
imul
es
lret
cmp
push
ret
imul
or
inc
adc
sbb
mov
jbe,pn
sbb
scas
xor
inc
int
cli
dec
jl
push
push
ss
push
test
fadds
mov
aaa
sar
pop
das
lahf
jno
aad
jno
mov
add
scas
scas
sub
aaa
xor
loop
mov
repnz
push
pop
fs
insb
mov
push
cmc
loop
mov
sub
imul
inc
xlat
and
pop
cmp
lea
mov
sub
push
or
dec
and
mov
mov
subb
out
push
sbb
das
loopne
mov
ja
into
push
mov
mov
out
add
xor
orb
pop
jbe
scas
push
jno
ja,pn
or
adc
sub
fstpl
aas
cmp
loope
fiadds
push
jle
ljmp
ss
mov
cmp
lret
add
das
sub
scas
inc
and
jle
mov
push
lcall
insb
pop
mov
xchg
xchg
cltd
incw
push
stos
nop
adc
or
xchg
adcb
and
or
fisubl
mov
sarb
popf
mov
push
scas
cmp
jb
push
sahf
stos
frstor
lcall
or
sub
loope
ljmp
pop
mov
loop
jle
push
in
add
cltd
sub
and
or
movsl
push
out
inc
or
and
push
lock
push
gs
push
mov
dec
push
mov
bound
es
incb
arpl
pop
cli
or
and
fisubs
xchg
testb
or
lds
movsl
push
pop
mov
xchg
dec
xor
inc
sbb
add
pop
jns
sahf
lret
psubw
xchg
mov
xor
jle,pt
dec
out
sbb
rorl
mov
mov
es
mov
mov
call
aam
bound
cmp
imul
stc
pushaw
jno
adc
cli
dec
jl
repnz
rcr
cltd
or
rcll
xchg
xchg
sub
daa
outsb
or
stos
sbb
or
sub
dec
arpl
jb
push
pop
cltd
xchg
pop
mov
sbb
bound
sub
jno
data16
adc
push
aas
lock
xchg
stc
dec
mov
pop
push
lret
xor
pop
or
or
jnp
sahf
jb
dec
out
sbb
push
cs
sub
and
pop
xlat
jle
push
gs
addl
fmuls
shl
sbb
sub
cs
add
out
enter
mov
in
and
xchg
lock
cmpsb
jp
shrl
xor
push
loop
out
push
mov
or
lcall
loope
jp
pop
leave
xor
cli
sbb
jo
out
and
pop
inc
fmull
xchg
jae
push
push
add
mov
sub
and
adc
addr16
sub
jbe
test
shl
cmp
xchg
fucomi
pop
or
inc
jb
repnz
dec
mov
jp
sahf
ficoml
adc
imul
jno
or
inc
les
lea
push
add
jl
jno
popa
mov
add
jae
ret
fisubl
add
sahf
sbb
es
dec
movsb
or
pmullw
mov
push
inc
sub
mov
sub
push
fcoml
stos
sbb
ficoml
pop
cmp
pop
push
scas
dec
sub
sbb
jo
add
sbb
sbb
push
stos
sub
dec
aas
sbbb
jle
or
jno
sub
push
and
and
adc
and
call
cli
push
dec
jno
mov
and
inc
sub
popa
scas
jb
and
mov
das
mov
mov
lahf
sbb
xor
jo
fistl
sbb
adc
popl
push
push
add
inc
out
scas
cmp
jmp
xchg
int3
lods
fcomp
scas
imul
xchg
sbb
push
out
pop
paddusb
mov
and
xor
cmpsb
inc
xor
sbb
fstl
xor
sahf
jp
mov
fsubs
hlt
js
les
std
call
push
scas
mov
xor
dec
fsubs
cmp
xchg
cli
sub
bound
xor
push
xor
mov
scas
dec
lret
mov
addr16
xchg
push
ja
push
lret
cs
scas
xor
sub
out
adc
std
repnz
inc
jp
cmp
push
xchg
mov
sbb
outsl
dec
pop
jle
out
or
fs
push
mov
push
scas
ljmp
add
xorb
mov
sti
arpl
dec
and
xchg
jle
push
outsb
les
movsl
and
gs
loop
push
cmp
push
or
out
and
int
es
xor
mov
jnp
jno
dec
dec
ret
sahf
xchg
sub
jns
push
jnp
jne
mov
cld
jno
jbe
xchg
push
aad
push
or
adc
mov
in
add
pusha
into
and
jp
cs
xor
out
xor
fbld
cwtl
jno
push
imul
adc
mov
jp
std
popa
ss
fimull
mov
sahf
xlat
scas
jnp
outsb
and
enter
imul
int
add
outsb
data16
mov
mov
arpl
arpl
popa
xor
clc
popf
cmp
mov
daa
ds
sub
jb
jle
add
sbb
lods
pop
xchg
data16
xchg
dec
stc
sbb
out
cs
push
inc
test
pusha
rcrl
dec
pop
sbb
jmp
sbb
and
rclb
mov
jmp
mov
pop
movsl
es
dec
idivl
bound
jb
pop
test
outsb
ljmp
cmp
lret
adc
into
lea
cmpsb
inc
mov
fldl
pop
ds
mov
scas
out
sbb
sub
and
clc
fmuls
inc
repnz
mov
mov
push
jg
ss
cltd
or
dec
add
mov
iret
and
pop
iret
lods
pop
or
adc
mov
adc
dec
nop
mov
fcmovu
push
into
popf
and
sahf
mov
add
notb
xchg
and
stc
nop
sub
into
or
and
call
adc
dec
push
mov
sub
push
mov
sbb
lahf
fnstsw
lods
cmpsb
dec
sub
lods
add
and
push
stc
aam
or
lea
outsb
jp
inc
and
ss
sbb
push
jbe
mov
rcr
add
sub
iret
clc
insb
sub
gs
rolb
xor
xor
paddw
push
jp
out
fisubrl
jae
arpl
mov
xor
jmp
mov
sbb
sbb
andb
dec
jmp
xor
addr16
lds
push
or
into
je
jb
mov
stos
fwait
xchg
sbb
ljmp
movsl
push
cli
dec
cld
push
push
or
sub
mov
cmp
dec
les
fcom
and
scas
cmp
jle
xchg
lcall
mov
pop
inc
std
mov
xor
shll
jnp
dec
cmp
cli
cmp
sbb
scas
and
push
push
ficomps
lahf
pop
bnd
xlat
sub
pop
inc
mov
dec
pop
or
clc
aas
test
xor
push
les
push
mov
pop
or
loopne
xchg
adc
push
bound
lret
loope
adc
iret
out
sub
xor
dec
leave
fdivrp
jp
sbb
subb
inc
shlb
and
and
fcomps
xchg
mov
lcall
outsb
lods
std
mov
dec
mov
out
in
subl
add
ss
cmc
xchg
call
push
insb
stos
or
mov
popf
lcall
or
into
jb
ljmp
mov
mov
adc
es
xor
push
xchg
outsb
pop
sub
fidivrs
jno
dec
loope
or
adc
lcall
xor
push
inc
out
fs
mov
ljmp
xchg
es
xor
call
std
pop
mov
sahf
cmpsb
add
movsl
mov
bound
adc
jbe
dec
jae
cs
arpl
out
popa
pop
push
mov
pop
jno
jb
lock
arpl
and
aaa
adc
push
push
dec
xchg
xor
adc
divb
cs
xor
pop
or
cld
push
jb
xor
sub
adc
push
pop
push
sbb
mov
fcmovb
xchg
fbld
inc
outsb
sub
jno
cmp
and
fisubrs
enter
jns
mov
inc
jle
mov
cmpsb
ss
push
idiv
pop
loope
jnp
lds
call
adc
movsb
scas
pop
fmull
sub
data16
push
xchg
jb
es
push
test
sbb
sub
nop
inc
pop
inc
push
xor
sub
mov
punpcklwd
pop
sub
xchg
pop
jo
ret
sti
dec
lcall
stos
loopne
pcmpeqb
fisubrs
test
out
stc
push
add
push
int
jbe
sbb
mov
pop
decl
jbe
push
pop
xchg
xor
pop
adc
mov
and
xchg
insb
push
jae
jns
imul
and
dec
test
mov
outsb
incb
lret
outsb
sarb
lcall
xor
bound
scas
pop
leave
add
mov
ret
data16
arpl
or
and
sbb
jb
adc
add
dec
push
fisubrl
push
sbb
mov
test
sahf
push
pushf
mov
pushf
xchg
ss
or
mov
mov
dec
mov
test
push
sub
loopne
jp
arpl
ss
push
or
pop
push
xchg
push
push
cs
cmc
push
pop
iret
cmp
out
sbb
push
sbb
icebp
push
addl
sub
sbb
sarl
push
jne
sbb
mulb
push
or
adc
mov
movsl
sarb
xor
es
push
mov
les
mov
xchg
mov
jbe
ficoml
movsl
pusha
jle
std
fidivs
mov
xor
shrb
es
bound
mov
out
mov
mov
cltd
and
pop
jno
mov
cmpsb
scas
pop
in
xchg
ja
sub
push
xchg
push
push
mov
or
mov
scas
mov
adc
push
out
pusha
cmp
mov
xor
mov
bound
xor
xchg
test
aam
pop
cli
es
js
fsubr
lods
pop
repnz
add
arpl
jbe
push
stos
add
push
sbb
or
adc
std
mov
push
aas
test
out
dec
push
outsb
div
inc
in
inc
jns
incb
dec
sbb
sarl
cmpsb
and
jnp
popa
dec
ss
pusha
jge
dec
dec
das
push
mov
and
sahf
and
pop
lds
movsl
sbbl
pop
push
notb
std
sbb
inc
push
sbb
add
jle
lret
cmp
adc
mov
pusha
cld
pop
or
sbb
ss
push
sbb
cmp
mov
test
idiv
jns
mov
sub
pop
hlt
bound
mov
cmpsl
sub
mov
int3
jmp
xchg
jp
cmc
push
fs
ficoml
cmpsb
lods
cld
scas
jno
add
fimull
xchg
loop
pop
jne
call
in
add
call
out
xchg
mov
push
or
push
repnz
lock
jb
mov
mov
repnz
data16
adc
and
add
sahf
stos
xor
bound
xor
into
jb
add
repnz
mov
mov
sub
sbb
pop
mov
sub
or
mov
cltd
xor
jnp
pop
mov
push
mov
cli
inc
sbb
cli
sbb
cmp
out
or
push
xor
or
pop
pop
pop
xor
shll
out
xchg
pop
mov
lcall
aad
dec
outsb
arpl
and
test
lcall
hlt
adc
push
cmpsb
rcrl
inc
rcr
shl
sbb
push
pop
mov
sub
mov
gs
shrb
into
push
in
adc
ror
xchg
sub
sub
sbb
scas
out
and
lods
scas
fmuls
outsb
push
add
or
push
data16
sbb
ficomps
or
scas
out
and
xor
sbb
loope
data16
fdivrs
fidivrl
jb
repnz
push
mov
ljmp
sbb
das
adc
pop
mov
sbb
and
cmp
or
aam
shll
shrl
mov
push
ljmp
push
shrl
fisubrl
std
cs
enter
fcmovnbe
mov
push
pushf
mov
popa
mov
sbb
jne
push
ja
negb
xchg
clc
imul
es
scas
push
xchg
push
mov
scas
test
lock
push
mov
sub
push
or
mov
push
add
std
mov
aas
popa
sbb
push
cs
sbb
and
adc
pop
mov
addr16
lcall
sub
sub
mov
pop
ret
push
lods
adc
aas
dec
es
and
sbb
or
xchg
enter
lcall
mov
sbb
xor
push
push
lcall
sbbb
scas
js
push
sub
aas
movsl
stc
xchg
mov
sarl
fucom
and
lea
xor
movsl
outsl
xchg
add
out
outsl
or
mov
repnz
jle
xorb
nop
sysret
movsl
and
mov
push
add
sub
rcrb
and
imul
ljmp
fcoms
sahf
fisubrl
and
or
ja
incb
movsl
and
outsb
and
jbe
repnz
mov
push
fldt
add
ficoms
negb
cmpsl
pop
imul
and
push
sbb
std
sbb
jg
dec
xor
jbe
mov
ss
jb
das
add
scas
jle
movsl
sub
mov
insb
inc
or
push
and
dec
mov
or
cli
popa
sbbb
xor
xchg
mov
adc
push
xor
or
push
fsubp
pop
hlt
loope
lods
mov
pushfw
popa
push
ljmp
movsb
push
rcrb
mov
push
xor
inc
into
jle
lcall
or
lods
test
lahf
jns
outsb
out
push
aaa
xchg
ficoml
mov
lock
loop
andb
and
mov
ja
cmpsb
cmp
mov
xchg
loop
push
xchg
push
or
ret
dec
push
xchg
test
push
dec
push
fisubl
push
sbb
push
mov
ljmp
out
sti
push
ljmp
adc
shlb
or
lcall
adc
or
ja
std
popa
in
sbb
rclb
push
aaa
lock
out
popf
or
lret
dec
int
push
push
mov
in
frstor
pusha
jle
std
adc
movsb
xor
pop
and
jp
lahf
test
imul
sub
mov
rorb
xor
cmp
sub
test
jno
mov
push
retw
sti
push
rep
stc
adc
ret
inc
fsubp
jbe
push
sahf
xchg
push
adc
mov
outsl
jle
push
lahf
sub
or
dec
shll
ficoms
sub
or
mov
push
std
pop
sbb
cltd
pop
jns
mov
hlt
push
shlb
outsb
xchg
push
bound
xchg
scas
lds
sbb
dec
and
nop
cmp
jb
arpl
ljmp
aas
loop
clc
fidivrl
loopne
es
jno
sbb
push
xor
ret
push
stc
shrd
mov
ljmp
data16
cwtl
mov
lahf
outsb
dec
inc
loop
stc
test
scas
push
lods
cmp
scas
cltd
push
mov
iret
out
push
sub
rorb
jge
mov
push
sbb
bound
push
adc
scas
cs
pop
dec
sti
or
add
xchg
xor
dec
fstl
and
pop
cmp
sub
pop
and
jae
je
jp
fcmovnu
stc
adc
testb
loope,pt
inc
sahf
les
dec
pop
adc
push
and
xchg
push
test
cli
push
xchg
pop
arpl
push
pop
push
adc
and
jecxz
xchg
inc
dec
xor
rcrb
stc
sbb
sahf
or
mov
shlb
cmp
out
out
clc
imul
ss
rorb
and
imul
fidivrl
mov
ja
imul
jne
or
sar
enter
negb
hlt
and
add
push
pop
in
loopne
add
push
shld
or
imul
xchg
jbe,pn
dec
imul
adc
orl
jmp
or
jb
push
add
loope
fs
sub
jp
mov
stc
movsl
jne
loopne
push
pop
push
jbe
jo
lcall
pop
out
and
insb
sub
push
push
jg
lods
pop
sbb
sub
lahf
or
lock
int
test
lss
inc
and
aam
adc
adc
pusha
mov
divl
jno
repnz
sbb
cmpsb
jbe
jne
xchg
movsl
push
cltd
popa
mov
cltd
sbb
imul
or
push
call
pop
and
sahf
push
mov
add
test
xor
mov
mov
lock
mov
cld
adc
out
push
jge
and
push
xchg
or
repnz
and
push
dec
pop
add
push
int
jbe
pop
jb
rcl
xchg
mov
imul
js
gs
outsb
mov
pop
sbb
adc
sbb
or
adc
or
mov
jle
jnp
ficomps
inc
in
mov
addr16
push
push
dec
pop
mov
mov
adc
xor
jno
push
and
dec
sub
xchg
add
cmp
mov
inc
sub
pop
pop
imulb
out
pop
sahf
mov
insb
mov
jmp
outsb
int3
repnz
lret
pop
bound
mov
xchg
pusha
jb
jp
mov
jle
fimuls
sbb
mov
fisubs
pop
xchg
cmpsb
ss
test
loop
and
add
or
pop
xchg
ljmp
enter
imull
jle
fbld
cmp
loop
leave
cs
or
pop
mov
add
sub
adc
xor
fmulp
stos
mov
cwtl
push
pop
mov
xor
lret
pop
or
test
addr16
jno
ss
xchg
lret
arpl
xor
pop
imul
int3
add
mov
push
data16
ds
xor
adc
adc
and
pop
or
sbb
add
sbb
push
push
ds
and
jbe
cmp
outsb
or
push
out
cs
add
xlat
std
push
imul
cvtpi2ps
push
add
inc
jbe
push
cs
ror
fimuls
mov
stos
or
inc
aam
cli
mov
in
xchg
stc
jg
fiadds
adc
scas
cwtl
xchg
out
loop
popa
jl
inc
insb
es
mov
shlb
sub
cmp
cld
shlb
scas
dec
fistl
imul
sahf
sahf
shll
and
adc
or
loopne
sarb
pop
popl
cli
add
inc
jnp
inc
inc
test
aad
xor
pop
push
fisubrs
xchg
push
sub
push
sub
lcall
arpl
imul
repnz
imulb
jle
add
stc
sahf
push
sub
subb
ss
sbb
sbb
into
push
xor
push
std
stc
add
and
and
mov
cmp
stc
jns
scas
adc
lahf
loop
mov
inc
mov
push
lods
xchg
fimull
bound
jp
cmpsb
jmp
xor
jns
and
bound
outsb
ret
jge
aad
adc
into
fcmovu
mov
cmpsb
dec
dec
or
adc
fidivrs
sbb
not
shlb
movsl
or
out
mov
sbb
mov
repz
imul
jbe
mov
cwtl
mov
cmp
sbb
and
dec
cltd
stc
cmpsb
push
or
xor
mov
and
cld
push
xor
and
jno
sub
cmpsl
or
or
pop
sub
mov
int3
mov
lcall
push
push
adc
sbb
mov
add
stos
dec
jg
mov
jmp
adc
push
mov
mov
cmpsb
stc
rolb
mov
cli
pop
mov
mov
push
xchg
adc
jbe
mov
push
inc
out
xorb
xor
loopne
adc
stos
jle
xchg
mov
outsb
lret
jb
into
rcrl
js
cmc
add
xchg
aaa
or
roll
mov
mov
sbb
scas
mov
mov
sub
pusha
adcb
jbe
jle
mov
popa
fldenv
arpl
jb
mov
sub
mov
pop
mov
xchg
lcall
mov
inc
push
mov
scas
dec
sbb
cwtl
test
cs
inc
sub
fimull
inc
imul
lcall
mov
xor
ficoml
push
sub
adc
and
adc
pop
push
jle
sbb
out
fildll
adc
scas
xchg
mov
fimull
sub
movsb
jno
xor
pop
test
push
cli
add
sahf
mov
and
and
sbb
mov
dec
xchg
popaw
insl
out
cwtl
xchg
or
cmpsb
inc
popf
mov
cmp
rolb
xor
cli
outsb
scas
out
loope
repnz
dec
dec
or
das
adc
push
sbb
cli
cmpb
pop
mov
lds
sub
bound
mov
test
ljmp
push
int3
xor
orb
cmp
gs
push
fdivl
stos
pop
lock
push
dec
bound
xor
fucomp
repnz
insb
inc
je
mov
cltd
popf
jb
lcall
int
jb
ss
out
pop
push
xchg
adcl
push
pop
insl
mov
sahf
int
sbb
mov
out
sbb
jg
mov
or
and
cltd
mov
es
xor
adc
adc
or
sub
call
neg
sbb
and
mov
shl
imul
repnz
mov
fwait
sub
or
or
lcall
out
addr16
jno
sub
xor
lock
mov
das
push
adc
shlb
mov
popl
cs
fldl
push
scas
inc
jns
sbb
adc
jbe
ljmp
test
lds
push
mov
bound
scas
cwtl
dec
mov
pushf
mov
shlb
dec
xchg
dec
mov
notrack
or
iret
pop
push
push
imul
ss
out
cli
push
loop
and
pop
bound
fidivrl
inc
outsb
test
lea
stc
jle
xchg
dec
lods
push
mov
aad
push
dec
mov
mov
cmpsl
xchg
or
push
and
or
arpl
jle
pusha
adc
xor
stc
adc
sub
adc
mov
ljmp
add
out
cltd
push
pop
lods
and
pop
ds
pop
and
in
cltd
xor
push
push
fdivr
or
cs
scas
cmp
scas
lret
iret
pop
sub
sbb
mov
cltd
ds
jo
stc
into
mov
sbb
xchg
rorb
fsubrl
adcb
xor
pop
pop
xor
sahf
lock
stos
ss
xchg
xor
outsb
and
add
add
cmpsb
fldt
or
jo
push
stc
ljmp
mov
data16
jbe
adc
push
or
cwtl
int
jp
jb
out
lds
ss
je
push
imul
imul
div
daa
mov
jle
mov
jns
fidivs
addl
mov
and
xor
mov
lods
repnz
lcall
pop
jle
or
push
sbb
adc
cmp
outsl
pop
mov
cmp
pop
out
popa
jl
xchg
or
push
lret
decb
jb
stos
adc
ror
shrb
mov
inc
shll
cmp
sbb
call
mov
jmp
dec
test
or
adc
jle
push
jle
sbb
scas
xor
out
sbb
mov
sub
cwtl
push
or
push
add
pop
pop
xor
mov
xchg
push
adc
push
inc
js
cmp
and
add
in
adc
sbb
jno
xchg
pop
jbe
sarb
mov
mov
stos
jb
mov
jns
ljmp
xor
cwtl
roll
and
into
adc
pop
repnz
mov
sbb
cmp
fcoms
je
adc
das
int3
and
jno
push
xor
loope
scas
mov
xor
scas
xchg
push
sahf
mov
push
fisubs
pop
mov
pop
sub
push
sub
and
outsb
movsl
jg
and
dec
jns
rolb
scas
push
pop
add
fimull
leave
push
scas
es
pop
cmpsb
jae
movsb
popa
and
repz
pushf
push
pop
pop
mov
adc
mov
sbb
and
pop
cmp
push
push
outsb
push
and
jle
mov
jnp
imul
les
adc
xor
fidivrs
cvtdq2ps
xorb
pop
scas
push
and
out
mov
shrl
mov
adc
repnz
xlat
mov
xchg
ds
mov
push
cmp
iret
push
das
sub
bound
xor
sub
inc
jae
and
cmp
dec
and
out
psadbw
shlb
dec
jle
mov
scas
jle
or
or
push
jg
scas
mov
jb
sub
cli
push
and
and
scas
pusha
xchg
fs
pop
push
rorb
sub
out
or
xchg
repnz
aam
je
int
jp
sub
mov
negb
xor
push
pop
push
jp
dec
test
sbb
adc
imul
notb
pop
fimuls
xor
fs
and
jae
jno
lods
dec
pop
or
leave
bound
aas
dec
xor
cmc
push
ljmp
mov
sub
insb
ljmp
push
out
pop
pusha
mov
push
mov
mov
sub
pop
loope
jb
mov
shll
push
in
jmp
sbb
popf
notb
idivl
or
rcl
sbb
xchg
bound
sahf
adc
in
jns
cmpb
mov
xchg
push
xlat
push
sar
push
xor
scas
push
fistpll
test
and
dec
xchg
cmpsb
push
push
mov
and
hlt
nop
mov
push
cmpsb
xchg
pop
push
sub
fs
dec
cli
and
dec
cmp
xor
jl
adc
or
popf
and
adc
out
jle
inc
jmp
adcb
xor
adc
add
fisubrs
mov
add
mov
jp
test
sbb
xchg
sahf
cli
rorl
xor
push
repnz
pop
cmpsb
sbb
js
jns
xchg
in
fcoms
or
ss
insl
mov
das
out
jns
enter
push
sahf
push
and
push
xor
mov
jb
mov
fimull
jge
sub
sub
imul
andb
jbe
insb
enter
movsb
sbb
mov
cltd
js
xchg
dec
and
push
mov
lcall
push
xchg
imul
rcl
pop
jmp
jns
movsl
stc
xchg
and
arpl
pop
rorb
jae
testb
push
sbb
pop
popf
and
jle
cltd
sahf
test
inc
pop
stos
divl
mov
cmp
icebp
adc
movsl
lcall
jp
rcrb
xchg
jl
pop
push
movsb
into
imul
in
hlt
xchg
or
jo
push
jbe,pn
cli
mov
clc
cltd
fcoms
xor
ret
test
sbb
std
ljmp
jecxz
in
cmp
jno
sbb
sub
jp
cmp
pop
jns
or
xor
mov
dec
rorb
in
push
ss
or
mov
fsubrp
decl
push
cs
cltd
fsubrs
ss
dec
or
jno
jbe
mov
pusha
sub
sbb
shrl
jbe
sbb
xchg
gs
mov
out
sub
shrl
shl
imul
scas
mov
dec
jns
xchg
fimuls
pushf
jbe
cmp
sub
jae
push
jns
xor
push
xchg
data16
lds
cwtl
sub
lods
add
xchg
jp
lcall
cmp
jle
mov
testl
out
push
scas
jge
or
mov
cwtl
add
in
incb
add
xchg
dec
pop
jle
iret
xchg
icebp
int3
lods
adc
push
popl
fucom
out
mov
cmc
cs
xor
and
in
rorb
outsb
xchg
adc
xlat
push
push
dec
fdivrs
dec
cld
xchg
mov
loop
pop
divb
jle
cli
xchg
push
mov
push
rorb
ljmp
mov
loopne
push
pop
loop
mov
xor
jnp
jae
push
shlb
nop
sub
imul
scas
xchg
loope
sub
out
out
in
arpl
mov
pop
bound
jmp
jmp
jmp
xchg
push
lcall
xor
mov
lock
mov
test
and
pop
adc
idiv
test
push
scas
jb
push
in
xchg
pop
fcompl
stos
les
jp
add
mov
dec
or
xchg
ss
sub
popa
add
insb
or
and
push
add
jmp
lea
push
mov
adc
push
xchg
sub
sub
adc
adc
jns
ss
outsl
xlat
mov
ficoms
add
pop
sar
dec
pop
adc
push
jecxz
cmpsb
mov
clc
mov
cs
sahf
fwait
pop
lcall
cli
push
das
add
stos
or
gs
ljmp
lea
jns
sbb
cmpsl
ljmp
outsb
fcompl
int
loop
nop
or
lea
out
push
mov
sbb
add
adc
xchg
into
mov
or
stos
aam
push
or
addr16
jb
imul
jno
adc
mov
cmpsb
loop
ret
ficomps
repnz
mov
fisubl
push
sti
decb
sbb
lock
pop
stc
jbe
push
mov
xchg
and
and
jns
jecxz
xor
fbstp
iret
rolb
cwtl
sbb
lcall
pop
mov
or
loop
or
adc
push
jle
sub
cmp
stos
dec
es
sahf
sub
lret
arpl
sbb
push
adc
or
gs
sahf
fidivs
jno
add
xchg
repnz
ds
out
scas
or
add
movsl
push
popa
pop
mov
lods
push
or
movsl
sub
and
push
aam
out
out
push
es
insb
mov
cmp
adc
push
mov
sbb
out
std
inc
sbb
leave
adc
fiadds
cmpsb
lret
xchg
bound
push
adc
sub
push
push
mov
sub
pop
and
es
movsl
pop
push
fimull
adc
cli
int3
lret
lret
lods
mov
adc
adcl
outsl
cmp
shll
popf
push
or
mov
out
pusha
add
push
pop
repnz
jns
rclb
adc
outsb
pop
pop
testb
push
or
imul
es
les
lret
sub
push
adcb
cmp
stc
push
iret
and
movsl
or
jle
outsb
out
repnz
sbbl
jp
adc
in
std
mov
sbb
in
dec
xor
xor
push
pop
xlat
cs
and
ss
or
fcoms
in
push
push
jnp
jmp
dec
and
adc
push
push
pop
outsb
pop
pop
jbe
out
and
mov
xor
push
bound
fnstsw
inc
std
push
xor
sub
call
in
adc
jge
mov
es
jle
leave
adc
andl
shr
clc
push
sahf
mov
cmpsb
cs
es
pop
mov
dec
push
push
cmp
push
cli
or
rclb
in
shl
push
adc
sub
add
inc
imul
mov
aaa
scas
jp
add
and
pushf
pop
negl
dec
stc
sub
jbe
jno
out
xchg
jge
gs
int3
inc
pop
push
bound
pop
mulb
inc
int
push
jns
and
adc
cs
xchg
adc
mov
inc
sub
jle
pop
push
je
pop
dec
pusha
imul
dec
sbb
sub
ja
std
ret
icebp
sahf
addr16
negl
or
push
inc
push
jns
xchg
xchg
rclb
ljmp
test
stos
filds
faddl
outsb
lock
mov
ljmp
lahf
insb
bound
push
xchg
outsb
subb
or
dec
pop
pop
shrb
inc
arpl
movsl
scas
cltd
sub
data16
out
stc
adc
idivb
jecxz
mov
pop
repnz
xchg
jno
shl
and
or
mov
cli
data16
aad
das
lea
outsb
sbb
sub
sub
jb
push
movsb
ja
add
lret
dec
cltd
cmpsb
bound
xorb
outsl
sub
sbb
jp
push
iret
fildl
sub
out
arpl
jp
pop
push
lahf
adc
dec
call
and
sub
mov
sbb
movsl
xor
jnp
ficoms
movsb
int
push
leave
push
sub
fnsave
sbb
mov
adc
dec
jmp
pop
ficomps
gs
mov
jle
test
iret
and
xchg
sub
mov
sub
setbe
into
nop
and
jp
loopne
ss
fcmovbe
adc
dec
cmp
xchg
xor
in
pusha
pop
pop
xor
lcall
sbb
xor
cmp
xchg
sub
and
mov
ljmp
push
outsb
jp
inc
jle
fbld
push
and
enter
mov
jae
jb
sbb
ds
mov
xor
pusha
jns
lcall
xchg
cmp
mov
jno
enter
or
dec
addr16
pop
data16
ljmp
push
cmp
ja
jl
adc
jbe
pop
sub
test
stos
sub
push
outsb
pop
xchg
rolb
xchg
ss
es
fimuls
pop
jp
sbb
sub
mov
movsb
adc
and
jbe
and
adc
cmp
lcall
ja
mov
mov
shll
out
xchg
cli
pop
outsb
xchg
jnp
jb
data16
push
enter
int
loop
mov
and
or
xlat
jmp
pop
push
inc
or
js
cld
push
lcall
add
scas
or
xor
stos
outsb
adc
sahf
repnz
bound
dec
sub
fiaddl
orb
push
push
int
push
sbb
mov
push
sub
jg
lret
push
jg
sbb
aam
inc
cmpsb
or
adc
or
sub
scas
lods
sub
clc
andl
or
mov
mov
out
push
sub
sub
dec
pop
xor
xor
orb
popl
dec
push
push
pop
sub
and
outsl
ret
mov
fisubrl
pop
ljmp
sub
pop
xchg
rcll
adc
fisubrl
lds
movq
sbb
ds
fiadds
out
data16
jns
fidivs
sub
jne
stc
loop
adc
dec
arpl
pop
push
popl
mov
and
ret
nop
adc
scas
lahf
rcrl
das
out
js
pusha
imul
test
aas
nop
std
cli
dec
mov
cmp
jns
mov
fisubs
test
mov
adc
lods
xchg
and
nop
push
sbb
shrb
xor
push
jp
push
xchg
push
lock
mov
ljmp
into
pop
xor
and
mov
sahf
std
ss
xor
out
adc
popl
popa
movsl
ss
arpl
pop
notb
fs
or
sub
adc
mov
rcrl
pop
out
cmp
outsb
or
stos
sub
test
push
push
jecxz
xchg
mov
sub
pop
adc
inc
jle
mov
test
mov
sbb
inc
data16
repnz
loope
add
jb
adc
inc
cmpsb
add
inc
xorb
mov
in
das
std
xchg
xrelease
bound
xchg
stos
mov
cmpsb
mov
or
inc
or
and
ffree
push
cmpsl
fisubrl
out
push
and
jb
imul
sbb
jo
and
mov
in
and
loop
mov
scas
mov
cli
pop
pop
or
into
insl
iret
cmp
sbb
fcoms
inc
mov
mov
jns
ljmp
mull
cmp
in
scas
mov
add
mulb
outsb
sbb
cmp
sub
jbe
xchg
mov
xor
jbe
push
out
sub
aaa
xchg
sub
bnd
cs
rcl
divb
sarb
dec
push
sbb
ficoms
cmpsb
into
or
aas
outsl
cmp
loopne
subb
add
push
stc
movswl
out
jmp
testb
adc
fistpl
xlat
jae
mov
jns
sbb
jnp
dec
push
loop
push
or
xchg
adc
rclb
mov
popf
loopne
mov
imul
push
into
jmp
cs
xchg
and
cltd
scas
or
push
xchg
push
adc
dec
dec
pop
lcall
cmp
adc
cmpsb
adc
jae
mov
lods
or
jle
cmp
sub
jb
mov
es
jnp
xor
cs
lods
adc
and
orb
push
sub
xchg
shrb
push
test
lcall
and
pop
or
xchg
mov
adc
sahf
sub
sub
pop
lods
in
mov
adc
xor
xchg
push
jp
loope
mov
sub
push
fmull
shl
mov
aaa
push
imul
je
iret
sar
fs
cld
xchg
sub
rcll
shr
pop
push
mov
sbb
cmp
push
mov
popa
sub
adc
ds
ljmp
xchg
or
jle
mov
dec
loopne
outsb
pop
fildll
dec
aaa
jle
push
sub
adc
into
nop
fidivs
aad
or
pusha
sbb
bound
add
dec
jle
into
xlat
or
adc
pop
or
pop
add
push
xor
push
jne
push
xorb
addr16
push
cmp
das
sar
jae
rclb
mov
mov
clc
add
push
push
cmp
pop
sub
mov
push
or
sbb
push
xor
jp
stos
push
je
scas
ljmp
xchg
adc
popl
pop
sbb
sbb
cmpsb
pusha
adc
jge
mov
sub
loope
fstpt
jle
loop
scas
mov
shrb
inc
mov
repnz
adc
push
ret
nop
jbe
outsb
add
loop
es
mov
xor
mov
out
fstpl
cmp
xor
xor
push
pop
ds
popl
inc
jns
scas
pop
fimull
push
cmpsb
jb
ss
add
or
fwait
mov
jbe
outsb
adc
ds
jnp
and
or
outsb
push
jno
fimuls
inc
pop
and
call
or
and
sub
jb
add
push
adc
mov
push
imul
aaa
mov
push
fs
push
mov
adc
scas
jp
in
push
scas
insl
test
mov
aaa
pop
mov
pusha
mov
dec
or
jmp
scas
pop
int3
lret
xor
xchg
fimull
stos
cmpsb
sarb
sub
adc
call
sbb
jbe
shr
scas
ret
test
mov
jae
pop
jmp
out
shrl
push
mov
push
outsl
cs
adc
in
push
pop
and
cmpb
imul
es
popf
pop
leave
fsubp
pop
push
imul
fcompl
imul
mov
scas
imul
cmp
xor
cld
sbb
xor
adc
xchg
test
cmovne
and
push
mov
push
fimull
loop
fstpt
mov
scas
xor
ljmp
pop
mov
push
cmp
out
in
add
cmpsb
repnz
inc
data16
cs
insb
and
scas
lcall
mov
sbb
ljmp
rcll
in
push
ficoml
cli
sub
std
loopne
pop
mov
and
lods
out
or
xor
in
mov
push
or
andb
inc
ss
mov
imulb
outsb
mov
scas
mov
pop
add
pop
inc
push
stc
push
rolb
mov
xorl
andb
data16
icebp
add
lods
out
mov
arpl
xor
sub
inc
icebp
fstl
repnz
inc
push
lcall
push
pop
cld
pop
cmp
mov
mov
xchg
mov
sahf
fwait
aam
adc
xchg
pop
icebp
adc
add
and
lret
or
pop
or
mov
mov
sbb
sub
cmp
inc
xchg
lret
push
pop
push
jns
push
xor
sub
bound
or
pop
outsb
xchg
popa
inc
pop
jb
stc
scas
mov
and
push
jp
cs
adc
xor
xor
sub
xchg
ljmp
pop
mov
outsb
or
jnp
imul
popl
lods
mov
jnp
push
sahf
xchg
sbb
and
imul
out
cmpsb
or
mov
jmp
inc
data16
sbb
out
xchg
ficomps
inc
and
jg
push
data16
mov
sar
or
into
dec
push
sub
push
scas
jle
mov
pop
stc
sahf
mov
mov
sub
and
jle
shrb
imul
mov
inc
pusha
cltd
jecxz
fistpll
mov
or
add
adc
jno
and
jns
push
loop,pn
jecxz
lcall
jnp
jbe
mov
bound
and
dec
stos
int3
push
push
or
notb
les
or
inc
push
sub
adc
xor
fs
push
xor
aaa
pop
outsb
sub
inc
sbb
push
ljmp
adc
cmp
push
mov
dec
xor
stos
mov
cs
repnz
rolb
or
test
xor
fcoms
and
mov
inc
adc
mov
sub
divb
fisttpll
les
ljmp
andb
sbb
scas
fcmove
adc
mov
cmp
mov
sbb
and
mov
sub
push
xor
inc
outsb
add
dec
lds
push
rorb
es
dec
adc
xor
xchg
mov
and
sbb
fcompl
dec
and
pop
andb
out
pop
in
ljmp
or
xchg
imulb
and
push
out
stos
es
and
push
xchg
and
aaa
xchg
dec
dec
pop
and
mov
xor
push
out
outsb
aam
repnz
push
out
and
pop
inc
and
in
outsb
and
repnz
pop
xor
push
cld
mov
scas
call
mov
subb
stos
dec
push
push
xor
loopne
add
icebp
xor
std
mov
imul
test
insb
in
jecxz
imul
rolb
xor
sub
xchg
push
rolb
scas
push
out
fs
iret
jnp
in
bound
push
mov
mov
adc
dec
or
pop
loop
insl
pop
or
popf
and
insb
mov
push
push
jecxz
stos
in
loop
push
leave
in
sbb
adc
jo
jle,pt
ficompl
mov
jno
fisubrl
ss
clc
lods
mov
scas
xor
scas
adc
sahf
pop
xor
fnsave
adc
or
es
mov
sti
rclb
sbb
push
xchg
fidivrl
outsl
int
xchg
mov
and
shr
jp
and
call
jb
jp
in
xchg
sbb
stc
jb
fs
xchg
or
xchg
push
into
lcall
dec
cld
sahf
sub
push
stc
xchg
push
cmpsb
jbe
ljmp
iret
xchg
pop
pop
xor
xor
outsb
shl
outsb
lds
mov
xor
push
push
bnd
cli
dec
push
mov
stos
jbe
out
push
sub
idivl
test
std
imul
mov
ficoml
sbb
adc
xchg
mov
inc
outsb
pusha
hlt
sahf
lock
lods
xor
ds
arpl
jns
jle
dec
es
ret
jp
mov
push
push
jle
add
xor
or
jb
push
push
sub
xor
loop
pop
sahf
sbb
aas
push
es
and
rclb
push
xor
iret
in
fiadds
fsubs
push
pop
jp
imul
mov
pop
aad
adc
jecxz
ds
pop
loop
mov
sbb
and
in
pop
and
pop
mov
popf
jp
adc
sub
sub
cmp
idivb
mov
bound
nop
les
divb
jbe
jge
xchg
inc
or
push
xchg
shrl
jb
mov
sbb
adc
sbb
or
jne
scas
or
pop
mov
or
cmp
xchg
shlb
in
add
shlb
push
mov
inc
mov
fwait
data16
mov
sub
dec
mov
xor
pop
jae
in
decb
in
push
push
mov
sbb
mov
and
pop
inc
push
adc
sbb
and
cltd
cmpsb
adc
clc
fidivl
rcr
lcall
push
xor
scas
dec
mov
scas
and
ljmp
jle
in
xor
sbb
adc
jp
popf
packssdw
daa
pop
push
ljmp
mov
or
pop
sbb
dec
rclb
mov
or
push
push
scas
mov
andb
imul
dec
mov
enter
dec
adc
mov
es
loop
in
pop
scas
sbb
mov
pusha
jp
mov
pushf
cmpsb
jo
push
aaa
mov
add
out
jle
cld
jns
mov
jno
addr16
mov
ljmp
test
jp
cltd
cmpsb
sub
push
cwtl
outsb
pop
xchg
mov
jmp
aam
jb
data16
push
fisubl
pop
or
scas
cwtl
fidivrs
jb
dec
xchg
push
or
out
mov
es
jge
pop
ss
mull
aaa
xchg
add
mov
out
daa
push
sbb
and
push
popa
add
jno
sbb
xchg
or
jbe
cmpsb
out
imul
cltd
push
sbb
addr16
stos
lods
sub
push
xor
dec
push
mov
outsb
dec
scas
lods
push
add
inc
notb
cmp
add
sub
pop
ret
jns
fiadds
ljmp
adc
sub
cwtl
mov
stos
mov
adc
xchg
lock
das
sti
adc
adc
bound
sbb
pop
out
xor
jle
je
mov
push
das
lcall
scas
or
push
xchg
or
add
enter
sahf
sub
adc
imul
jb
adc
enter
es
scas
scas
and
push
sbb
js
sub
push
out
cmpsb
inc
in
adc
js
push
es
and
aaa
pop
sbb
insb
lret
mov
bound
add
pop
fisubs
adc
adc
jmp
ljmp
sbb
push
pop
sahf
mov
es
mov
sbb
adc
jb,pn
pop
cmp
lock
add
dec
sub
or
sbb
mov
mov
lahf
cmpsb
push
out
mov
push
scas
adc
dec
adc
sub
or
xchg
ljmp
out
or
push
cmp
jbe
sub
and
push
or
ljmp
push
sti
xlat
sub
xor
jae
mov
push
ds
xchg
sub
push
jecxz
pop
rclb
jbe
cltd
push
addl
or
push
testb
sub
orb
mov
inc
and
pop
mov
adc
push
pop
push
pop
xlat
cli
dec
sbb
outsb
push
stc
andnps
jle
fisubl
pop
inc
cs
jno
push
sub
mov
push
jl
xor
mov
sahf
sub
repnz
dec
pop
sub
jns
int
xchg
stc
push
pop
pop
sahf
ss
sub
adc
andb
adc
repnz
push
xchg
xor
cltd
xor
loop
arpl
pop
pop
fcom
test
mov
movsl
je
stos
stc
inc
mov
jecxz
dec
mov
shrb
test
bound
push
dec
jecxz
sbb
ss
push
xchg
pop
adc
ljmp
lcall
repnz
push
rclb
fcoms
movsb
push
fcompl
out
and
add
mov
xor
adc
push
es
adc
push
imulb
mov
mov
sbb
outsl
xchg
rcrl
jo
jbe
jmp
dec
icebp
cltd
out
icebp
cmpb
sbb
jbe
das
jmp
or
loop
rclb
shr
rcrb
fs
jbe
repnz
add
xchg
loope
shlb
out
lahf
mov
inc
cmp
jle
cmpsb
loop
call
mov
or
gs
out
pushf
std
jle
adc
xchg
adc
push
int3
push
dec
jbe
jno
jmp
lcall
out
pusha
adc
daa
mov
or
push
repnz
push
mov
push
cltd
sbb
and
push
out
cmpl
push
stc
cmovl
iret
mov
scas
cmpsb
jge
xor
adc
rcr
xchg
inc
jle
or
xlat
adc
cmpsb
cmc
rcll
mov
ljmp
clc
icebp
push
daa
mov
lcall
stos
sbb
pushf
std
cmpsl
negb
add
sub
jbe,pn
add
cli
outsb
xor
mov
jns
and
lret
aad
adc
dec
push
rolb
icebp
fisubrs
mov
adc
mov
fimull
lea
mov
loop
xor
inc
jno
sbb
pop
cli
or
dec
cmp
jp
test
mov
mov
loop
push
push
out
std
adc
jo
ss
mov
aam
sub
insb
adc
or
mov
mulb
scas
push
mov
mov
jmp
and
push
jp
push
rorb
mov
mov
std
outsb
std
lods
leave
out
inc
sub
lcall
pop
pop
shrb
adc
ljmp
repnz
push
lahf
not
ljmp
out
mov
lcall
incl
fnstenv
pop
rorl
ja
scas
jecxz
xchg
stc
dec
sub
shrb
imul
neg
scas
push
out
xchg
xor
out
int
out
clc
mov
push
adc
adc
mov
push
movsl
roll
xchg
mov
adc
and
scas
cwtl
mov
push
popa
jbe
and
push
and
jle
pusha
arpl
cltd
hlt
jl
rcll
mov
jmp
push
mulb
mov
push
adc
out
cwtl
into
in
cli
scas
sbb
push
inc
mov
gs
rcrl
repnz
in
lea
push
xchg
and
adc
shlb
add
xor
adc
int
fimuls
pop
in
popf
call
mov
push
pop
cmpsb
fsubrl
jae
repnz
jo
and
mov
test
ja
arpl
mov
sbb
mov
push
sub
in
pop
push
xchg
xor
fs
popf
and
cmc
xchg
fidivl
jb
sti
pop
lcall
rcrb
repz
and
add
mov
sbb
cmp
loope
testb
fnstcw
mov
pop
pop
jle
cli
outsb
xchg
lret
jp
ss
push
dec
mov
fidivrl
cltd
dec
jns
and
xor
popa
push
fisubl
sbb
ficoms
mov
mov
sti
ss
pop
gs
xchg
ja
add
xchg
outsb
push
jnp
andl
adc
popf
orb
or
loop
hlt
cli
sbb
pop
and
pop
out
jp
test
push
sahf
or
pop
adc
in
lahf
xchg
pop
sbb
data16
mulb
push
jmp
xchg
fisubrs
dec
addl
jns
xor
lcall
xor
mov
notb
xor
ljmp
mov
ret
out
stos
scas
cltd
bound
loop
pop
bound
jle
sbb
pop
scas
divl
push
push
and
or
pop
push
mov
repz
jp
out
data16
or
sbb
pop
call
cs
outsb
repnz
or
test
xchg
mov
pop
inc
pop
and
adc
loop
jbe
leave
jmp
sub
sarb
push
and
push
xchg
lahf
ss
adc
not
int3
test
add
xchg
push
stos
and
mov
das
jmp
bound
data16
call
dec
jl
out
sbb
mov
mull
das
addr16
sarb
popa
sahf
bound
fs
inc
arpl
mov
sub
and
push
mov
push
push
loop
aaa
pushf
mov
sbb
xchg
jns
ret
sub
mov
push
cmp
ss
and
repnz
imul
jp
dec
jnp
cs
mov
mov
adc
inc
push
leave
testb
rcll
jmp
lds
jns
adc
pop
sub
cmp
hlt
cltd
or
pop
pop
pop
mov
dec
jno
sbb
push
push
pop
xchg
adc
mov
push
adc
lret
sbb
das
ss
jecxz
lcall
cmpsb
popa
and
ret
pop
pop
push
pop
sbb
mov
mov
and
mov
rclb
push
xor
mov
pop
scas
cmp
fisubl
out
cmpsb
es
sbb
push
and
sahf
sub
sbb
in
push
xchg
xchg
push
adc
adc
push
clc
addr16
jp
out
xchg
adc
mov
adcb
xor
sbb
stos
jle
xor
pop
xchg
xchg
movb
jp
fwait
xchg
mov
push
add
dec
pop
pop
cmpsb
sub
jno
jp
scas
addr16
xchg
jle
pop
pop
ret
cmc
adc
scas
pop
andl
ror
inc
cmp
out
and
xor
sbb
out
lds
mov
jle
mov
in
lods
mov
sub
icebp
sbb
stos
fmuls
shrl
jp
scas
insb
xor
rcrl
pop
movsb
push
add
pop
fimuls
dec
ss
ror
sub
adc
enter
ret
cs
data16
xorl
cli
repnz
xor
mov
sti
dec
inc
lahf
xchg
lea
cltd
stc
bound
adc
in
and
mov
mov
push
rcr
mov
or
xchg
inc
or
shlb
stc
mov
mul
js
push
das
adc
jp
out
jne
jge
stc
adc
lods
cs
out
out
sarb
cs
stc
mov
aam
loop
jno
adc
aam
mov
xchg
mov
scas
sub
sbb
dec
subb
jl
or
clc
ret
jns
sarl
ficoms
or
ljmp
sbb
inc
stc
sbb
repnz
mov
sbb
add
and
xor
sbb
popa
ret
pop
sbbb
fists
ljmp
scas
shrl
rcrb
loope
es
ja
ljmp
scas
adc
rorb
nop
mov
mov
aaa
mov
add
mov
jle
mov
es
jle
je
ds
sbbl
adc
das
popf
adc
in
or
in
mov
into
dec
sub
jb
push
inc
push
sub
jmp
jle
pop
push
shlb
adc
into
sub
mov
scas
lahf
pop
bnd
aam
adc
cmp
pop
inc
clc
push
jle
rclb
out
popf
andb
xchg
cmpsl
push
roll
pop
lea
out
mov
xchg
in
out
sbb
rcl
xchg
xchg
jle
dec
sub
das
xor
mov
ret
sbb
inc
shll
cmp
mov
movsl
imul
cmpsb
jno
fidivs
and
fisttpll
mov
loop
mov
pop
and
push
push
push
sahf
out
push
repz
inc
jo
push
inc
or
sub
mov
jae
popa
pop
bound
or
mov
dec
cli
subb
out
xchg
into
test
push
pop
es
jle
sub
and
mov
fildll
push
pop
jp
les
rolb
push
and
jle
outsb
mov
iret
outsl
scas
test
mov
repz
pop
ficoms
mov
sbb
xor
outsb
jp
xchg
xorb
dec
mov
cmp
xchg
mov
es
repnz
out
mov
pushf
sbb
sti
sbb
jno
into
push
outsb
jbe
das
lock
nop
scas
sub
cs
push
loop
data16
mov
inc
push
push
rorb
or
popf
je
mov
bnd
negl
inc
outsb
arpl
or
aad
bound
stos
loop
adc
pop
push
or
sbb
push
pop
iret
add
pop
cmpsl
push
mov
ret
js
jae
push
pop
and
push
mov
mov
add
scas
pop
es
xchg
mov
out
pop
ss
cmpsb
es
decb
push
mov
push
cltd
jp
cltd
popf
iret
or
push
push
ljmp
inc
push
ss
scas
lods
repz
push
fcmovb
push
lcall
rorl
sahf
pop
ss
sub
pop
shll
or
push
outsb
inc
iret
das
and
pop
sahf
xor
loop
loop
sub
lcall
rcrl
out
jo
test
sub
mov
jge
push
xor
sbb
in
fimuls
jbe
loop
mov
mov
stos
push
xor
jp
push
insb
insl
cwtl
and
cld
mov
sub
xchg
push
ret
fsubrl
out
jbe
scas
push
std
cmpsb
and
imul
push
cwtl
adc
stc
adc
pop
mov
outsb
push
cltd
in
pop
mov
push
arpl
push
adc
or
rcr
jb
and
cs
and
sbb
inc
lods
scas
xchg
and
icebp
cli
and
repz
jle
jae
push
push
pop
pop
push
ss
ja
stos
dec
jo
es
push
xor
popf
push
jae
cwtl
xchg
cli
and
into
mov
sahf
jmp
xchg
xchg
fs
jecxz
xchg
push
jle
xchg
sub
popf
mov
mov
mov
fnstcw
xor
push
jnp
fdivrs
jns
push
mov
pop
scas
mov
adc
cli
cltd
adc
sub
mov
aas
scas
sbb
push
loope
and
dec
sbb
jle
decl
outsb
jbe
imul
xor
pop
dec
add
mov
add
repnz
pop
stc
into
cmp
mov
cmpsb
in
std
xchg
jmp
push
xor
jnp
add
jg
mov
paddq
shlb
jno
cltd
imul
pop
repz
minps
push
inc
jbe
out
andl
fisubs
push
inc
rcrl
push
call
push
xchg
push
xchg
test
sbb
lock
adc
mov
cmp
push
or
xlat
outsl
loop
jmp
mov
enter
and
imul
scas
sbb
mov
out
and
jne
pop
dec
adc
loop
mov
pop
pop
push
mov
mov
adc
inc
push
lret
scas
mov
cmpsl
xchg
es
push
pop
out
jge
inc
fisubl
jne
loope
cmp
sub
and
or
xor
xlat
test
ljmp
push
aam
jbe
jo
outsb
cli
inc
ljmp
cmpsl
loop
pop
mov
add
repz
inc
dec
shrl
pusha
or
inc
push
xchg
xor
jbe
cwtl
add
xchg
mov
out
dec
sbb
jb
ror
ja
push
sub
pop
push
jg
adc
push
push
scas
fdivrs
ret
push
lods
stc
jle
xchg
call
testb
data16
or
dec
mov
or
mov
mov
mov
out
fcom
cmpsb
data16
or
scas
test
sbb
and
cld
dec
push
divb
xor
push
push
mov
es
cmp
and
sub
pop
pop
sub
dec
ljmp
and
int
push
rorl
mov
push
sub
fcoms
sub
clc
sbb
mov
scas
out
imul
xchg
sahf
or
sub
sub
bound
ss
lcall
jp
sbb
push
daa
lahf
pop
fstl
pop
imul
inc
std
or
or
mov
jnp
stos
cli
pop
mov
shrb
push
mulb
xchg
lahf
lea
decb
mov
fdivs
inc
mov
adc
xchg
dec
or
jg
addr16
mov
push
lcall
cmp
jmp
or
sbb
add
jns
xor
nop
jle
imul
push
mov
rcrb
dec
sbb
mov
pop
jp
push
jle
js
xlat
pop
mov
push
and
clc
xchg
aam
out
push
adc
adc
push
aaa
pusha
inc
dec
mov
sbb
xor
push
or
jle,pn
sbb
xor
data16
scas
pop
dec
loop
push
mov
or
ljmp
mov
imul
mov
cmp
lock
outsb
jle
mov
outsb
scas
jp
les
jno
repnz
imul
or
dec
test
imul
cmp
and
xchg
jg
scas
sbb
push
stc
or
in
adc
jp
adc
ss
comiss
mov
lea
sbb
mov
pop
fsubs
pop
leave
mov
add
and
xchg
jb
and
shrb
push
stc
pop
cmpsb
push
or
out
sbb
push
jp
add
jb
sub
stos
sbb
negb
add
cmc
repnz
dec
cmpsb
dec
mov
and
push
mov
popf
stos
push
push
outsb
mov
rclb
pop
or
sete
scas
push
adc
mov
cli
shlb
push
shlb
lahf
xchg
push
into
cmpsb
cmpsb
xor
push
mov
push
lcall
aas
jae
clc
es
jb
imul
inc
inc
aaa
idiv
sbb
adc
add
rcll
push
mov
xor
jecxz
loop
mov
cltd
xchg
icebp
sub
cmpsb
out
sub
lock
push
lcall
xchg
mov
in
push
mov
fcomp
std
push
push
jbe
xchg
cmpsb
into
add
push
popa
ljmp
push
sahf
sub
int3
jae
mov
js
xchg
stc
imul
adc
fisubrs
sbb
pop
lds
or
cmpsb
cli
dec
xchg
sub
scas
int
das
je
mov
xchg
lea
pop
push
xchg
test
jg
decb
stc
jae
lcall
enter
sahf
inc
les
test
sub
mulb
mov
xor
je
rcrb
push
rcrb
sub
push
mov
adc
into
push
adc
cmpsb
jmp
ret
enter
icebp
cmpsb
test
std
popa
pop
xorb
lret
mov
xor
ficompl
sbb
inc
sbbl
out
inc
lock
jmp
xchg
or
es
std
xchg
mov
icebp
or
ss
mov
rcll
mov
insb
notb
xor
test
ss
mov
xor
mov
test
mov
stos
cmc
fcoml
fs
test
pop
push
stos
sbb
jnp
or
xchg
sub
sub
mov
popa
mov
and
mov
neg
jge
orb
bound
dec
es
add
cltd
xor
ljmp
orb
mov
cs
sub
pop
imul
push
lock
sbb
or
sti
repz
push
lods
xchg
sub
or
sahf
stc
mov
std
push
cmp
sbb
enter
mov
fs
pop
adc
xchg
adc
mov
orb
push
enter
incb
in
movsl
push
fists
push
clc
or
xlat
xlat
mov
cmp
int
cs
scas
popf
add
xchg
pop
loop
jno
fisubl
push
push
xchg
rclb
xor
loopne
cmp
sbb
xchg
push
lock
and
ret
pop
cli
jns
adc
jno
fcoms
stos
push
push
mov
jbe
sub
mov
dec
jle
dec
xchg
imul
cmpsb
xchg
mov
sar
pop
and
jbe
outsb
mov
push
dec
subl
je
cmp
repnz
cmc
push
ret
lret
sahf
xchg
in
push
mov
notb
ja
cmp
lcall
andl
jne
scas
jp
stos
std
mov
pop
lcall
sbb
push
cmp
mov
out
rcrb
lcall
stc
cmp
push
dec
incb
and
cmp
mov
mov
sbb
sti
push
sahf
cli
lret
push
mov
jbe
ljmp
xchg
jno
push
mov
jns
int3
jae
popa
cmp
push
loope
stos
xchg
pop
fdivr
or
jnp
pushw
dec
mov
sbb
push
or
mov
jb
adc
test
or
lcall
bound
xchg
rcl
or
sbb
and
hlt
jae
mov
inc
pop
jnp
lcall
leave
push
call
out
sub
cmpsb
xor
mov
sbbb
mov
and
cmp
push
enter
cs
insl
cmpsb
outsb
scas
clc
orl
push
and
rcrl
into
cmp
adc
adc
sahf
cmp
xor
jb
mov
xchg
xchg
cmpsb
inc
mov
push
sub
pushl
dec
adc
or
push
setle
outsl
fiadds
scas
adc
sub
test
pop
outsb
sbb
rclb
add
mov
sbb
sub
loop
xchg
repnz
jp
scas
and
sub
ficoml
xor
ret
scas
inc
cs
test
xchg
mov
sbb
popf
scas
out
cld
xchg
xchg
push
pusha
out
mov
jb
cli
jno
sbb
les
jbe
dec
test
jecxz
orb
bound
out
xor
or
and
jno
pop
mov
dec
cmp
adc
dec
loop
or
ss
repnz
imul
loopne
outsb
or
adc
stc
add
or
pop
sub
push
adc
scas
stos
jae
popa
xchg
push
push
loopne
jle
cs
pop
rol
add
push
or
mov
xor
pop
roll
sub
dec
pop
mov
lahf
insb
mov
mov
push
ror
jp
mov
movsb
test
idiv
lcall
and
add
jnp
ds
inc
repnz
add
lret
jp
sub
lretw
adc
lds
inc
outsb
stos
jle
imul
rolb
xchg
xchg
jb
lcall
int
push
imulb
mov
out
or
dec
adc
in
cld
inc
mov
xchg
mov
xchg
push
pop
ss
into
add
stos
xor
jne
dec
rcl
sub
jge
push
push
popl
xor
sahf
and
or
ds
jo
jle
scas
dec
pop
stos
xchg
ljmp
ficompl
mov
pop
push
sbb
adc
pop
scas
push
sub
arpl
arpl
jb
aad
mov
into
cmp
xchg
lds
and
adc
push
rcl
pop
jle
sahf
xor
jbe
mov
imul
dec
shll
sub
mov
lret
xchg
xor
ljmp
push
mov
sbb
lea
cltd
mov
loopne
in
ss
and
mov
shll
push
cmp
mov
push
push
scas
icebp
xor
fimuls
and
mov
mov
adc
int
ss
sub
popa
pop
and
push
lahf
push
push
rolb
outsb
cs
lretw
mov
push
fidivrs
in
out
in
fcmovbe
push
stos
push
adc
cmp
add
mov
push
jl
mov
subb
pop
sbb
imul
test
cmc
ljmp
sbb
mov
les
mov
jbe
xor
shl
pop
inc
js
ss
stc
dec
jp
shll
cmp
pop
sbb
aaa
jge
stos
loop
bound
popa
mov
out
adc
cmpsl
fnstsw
cs
cltd
xlat
leave
shr
lret
xor
in
mov
pop
cmp
mov
pop
or
push
push
fisubs
mov
in
pop
jle
std
repnz
ret
dec
int3
cltd
push
test
or
ja
xor
jae
ss
fstpt
or
ss
adc
jbe
das
lahf
mov
sbb
loop
jbe
sahf
xor
pmaxub
pop
sbb
push
gs
push
bound
adc
push
sub
jb
sbb
pop
push
sahf
cmpsb
or
les
and
roll
sarb
ret
sbb
dec
fisubl
sbb
jns
fiaddl
push
fdivl
imulb
push
fisubrs
cmp
sbb
sbbb
push
xor
dec
aaa
divb
in
call
bound
xchg
sub
adc
mov
mov
and
je
jecxz
stos
add
and
movq
sbb
xchg
es
mov
aam
sub
sbb
sub
out
mov
paddsb
out
adc
push
out
clc
lahf
xchg
arpl
pop
xchg
pusha
insb
push
jp
xchg
inc
imul
push
mov
andl
xor
or
subb
add
push
xor
scas
int3
sub
push
or
inc
inc
xchg
sub
shlb
out
dec
arpl
push
test
adc
jnp
rorb
fisttpll
cmpsl
cs
imul
fstpl
dec
xor
mov
jl
scas
pop
sbb
adc
pop
inc
inc
dec
fildll
xchg
popf
loopne
pusha
add
mov
push
push
push
stos
notb
jno
xor
jne
cli
incb
lret
push
out
dec
jns
push
pop
pop
xchg
inc
mov
mov
pop
popa
lds
imul
popa
xlat
stos
pop
mov
out
and
jno
push
xor
sbb
pusha
movsl
jge
sahf
mov
dec
cmpsl
xchg
cltd
sub
push
cltd
adc
clc
sbb
push
cmpsb
aaa
mov
or
jp
lcall
sahf
cltd
mov
xor
es
cmp
push
sub
inc
cmp
push
mov
adc
adc
loop
test
sub
leave
pop
xor
jbe
push
or
mov
pop
clc
and
loopne
push
xlat
ret
jle
inc
cmp
aaa
sub
movq
push
and
dec
xor
popf
ljmp
bound
cmp
lcall
push
or
xor
mov
mov
aas
pop
test
sub
mov
fistl
sbb
fwait
or
and
push
push
outsb
pop
out
dec
sbb
xchg
imul
je
aaa
inc
hlt
shlb
imul
mov
push
pop
adcb
push
xor
xor
or
jle
add
or
imul
fidivrs
pop
cmp
jb
and
xor
std
test
lock
test
push
inc
sarb
add
stos
jg
xor
notb
sub
fisubrl
mov
xchg
mov
adc
inc
cmpsb
pmaxub
fidivrs
lret
stos
jb
ret
aas
insl
in
and
sub
movsl
pop
out
jno
mov
mov
dec
jo
jno
push
mov
dec
push
scas
movsb
pusha
sbb
sbb
jle
adc
xchg
and
gs
cmp
shrb
mov
std
pop
cltd
lds
insl
adc
adc
xor
mov
push
out
jae
sub
add
mov
mov
fwait
sbbb
push
xor
pop
mov
out
xchg
andl
mov
inc
stc
cmp
add
inc
mov
push
dec
lcall
mov
xchg
adc
pop
scas
push
fdivrl
ret
ficoml
fildl
fstp
es
cs
scas
or
add
fisubrl
mov
push
mov
adc
mov
dec
scas
cli
push
dec
push
mov
sub
mov
sbb
push
ss
mov
test
lock
scas
cwtl
imul
xchg
dec
ficompl
jle
cli
xchg
push
into
add
push
pop
sbb
mov
or
std
push
push
jecxz
into
mov
scas
xor
xchg
pop
lret
scas
xchg
sub
pop
out
adc
mov
das
push
test
sti
ljmp
imul
push
push
mov
sbb
jnp
sarl
push
pop
cmpsl
mov
xchg
hlt
movsl
pusha
dec
or
xor
mov
shl
jne
xchg
lods
push
push
and
xchg
cmp
outsb
push
scas
out
adc
dec
pop
mov
and
inc
fisubrl
repnz
into
mov
repz
jp
popa
push
mov
mov
fisubs
push
jb
sbb
sbb
and
push
loop
sub
data16
push
mov
std
inc
adc
sub
push
aad
shlb
jle
fstpl
inc
inc
cli
add
inc
insb
xor
pop
push
xchg
pop
pusha
lcall
pop
pop
cmpsb
jle
lods
mov
mov
dec
mov
cmpsl
mov
mov
dec
imul
stos
sbb
mov
push
mov
scas
jno
test
sbb
mov
inc
jb
pop
dec
repnz
adc
pop
mov
test
mov
jbe
mov
mov
pusha
dec
pop
jp
and
xchg
sbb
cmp
mov
pop
sub
test
gs
repnz
out
mov
xchg
mov
jb
stc
rorb
xor
ljmp
push
ret
or
xchg
aam
rorb
push
dec
adc
or
cltd
lret
leave
mul
fcmovne
les
inc
sbb
xchg
mov
mov
loope
pop
test
jno
or
scas
xchg
aam
jnp
xchg
outsb
xor
mov
imul
mov
jb
sbb
mov
stc
aam
mov
loop
adc
or
decb
stos
inc
sub
push
inc
les
push
or
cmp
pushf
outsb
mov
mov
imul
inc
dec
sub
rclb
inc
sahf
xchg
xchg
arpl
push
sub
xchg
mov
or
cmp
pop
add
cmp
ret
mov
enter
test
cs
and
gs
xchg
in
out
sub
inc
ds
ljmp
xchg
out
fwait
xlat
pusha
push
pusha
jp
ljmp
pop
mov
sar
adc
dec
jae
repnz
ss
sbb
fstl
and
fldl
lds
push
jns
xchg
inc
mull
popa
jp
or
adc
int
jb
ficomps
cmpsl
and
jle
ljmp
adc
adc
jo
xchg
bound
insb
pop
xor
push
inc
xchg
pop
sub
add
xor
jbe
pushl
outsb
jnp
std
pop
mov
pcmpgtd
mov
adc
mov
movsl
mov
xor
movsl
shrb
pop
lds
push
push
push
scas
push
push
mov
jp
and
repnz
mov
pusha
movsl
ljmp
or
cmc
lods
pushw
push
stos
das
enter
push
or
xchg
add
xacquire
outsb
xor
sub
sbb
push
mov
mov
mov
mov
push
idivb
mov
and
stos
push
lahf
dec
jno
or
loop
dec
out
sbb
sbb
xchg
push
jnp
jae
mov
add
aam
sub
cmp
cmp
add
add
push
in
sahf
jno
jbe
xorb
mulb
fdivrp
push
mov
rcll
std
add
xor
dec
dec
pop
mov
push
pop
and
cmp
xchg
adc
cltd
movl
aam
roll
fs
sbb
scas
adc
push
scas
ljmp
push
cltd
pop
sbb
and
push
mov
mov
jle
jp
rcl
loopne
jae
pop
movsb
scas
push
bound
std
xor
in
popf
mov
mov
sarl
ss
insb
add
repnz
xor
adc
inc
xchg
lret
dec
stos
sub
xor
pop
loop
jle
and
lcall
ss
mov
test
mov
jle
testb
pop
outsb
jb
enterw
into
mov
mov
mov
loop
cmp
fwait
call
adc
fstpl
jle
sbb
jbe
and
adc
rorb
lahf
shlb
push
and
sbb
and
stos
shrb
push
sub
push
or
dec
mov
scas
scas
ss
push
out
dec
movsl
sahf
rclb
es
into
or
xor
and
cltd
imul
push
push
and
repnz
cmp
dec
jbe
outsb
dec
or
pop
xchg
mov
push
sahf
into
pop
stc
in
shlb
inc
cmpsb
imul
mov
movsl
xor
sub
test
lcall
mul
fstp
sub
add
enter
jle
sbb
push
jbe
mov
push
adc
cmp
scas
int
sub
cmp
xor
stos
mov
mov
insl
push
outsb
scas
adc
pop
push
cmp
idivb
mov
mov
or
cli
jle
bound
out
das
inc
mov
cmpsb
push
mov
outsb
and
leave
add
jle
in
or
or
adc
std
inc
cmp
outsb
rclb
pop
je
fadd
movsb
push
inc
or
sti
xor
gs
xchg
pusha
insb
push
test
pop
insb
jno
and
mov
sar
loop
xlat
call
xchg
mov
adc
shrb
jp
lea
shrl
push
jns
sahf
imul
inc
mov
sbb
mov
cs
jno
and
inc
or
xchg
and
lcall
loop
or
ljmp
mov
push
and
idivb
mov
cli
roll
add
movups
mov
xchg
push
push
pop
mov
lret
fcmovb
pop
fs
repnz
push
outsb
push
dec
mov
jnp
mov
or
mov
jae
cmpsb
subl
lahf
mov
push
out
jp
add
aad
sbb
bound
ljmp
imul
or
adc
cs
jns
dec
bound
sub
jle
fcom
sarb
int
pop
movswl
xor
sub
call
flds
xchg
stos
push
test
ror
inc
dec
ss
push
lods
test
and
jbe
xchg
sub
rcrl
adc
and
jae
and
and
push
fisubrs
rdmsr
in
jle
std
jmp
sub
ds
sub
push
in
fisubrs
jno
scas
sarb
adc
fldl
aam
shr
xor
pop
sbb
jb
out
outsb
ljmp
rcll
push
ret
hlt
data16
inc
cli
loope
sbb
cli
cmp
cs
push
xchg
lcall
jle
xchg
mov
es
xchg
ss
xor
bound
fisttpll
arpl
imul
push
incl
lock
movsl
sbbb
mov
sti
mov
jns
xchg
sbb
loop
mov
dec
mov
out
loopne
std
fwait
jns
jb
cmc
adc
sahf
adc
add
fimull
inc
push
lock
jp
repz
cs
pop
test
aaa
imulb
mov
lahf
repnz
jle
scas
mov
mov
push
mov
inc
push
pop
or
sbb
mov
push
xor
int3
xchg
nop
dec
cli
adc
out
scas
rcl
adc
scas
aas
movsl
out
sbb
pop
dec
push
stos
sbb
lahf
pop
mov
mov
mov
pushf
jle
push
lcall
xorb
push
add
ja
mov
je
loop
mov
jl
out
shr
cmp
push
stc
and
cmpsb
mov
outsl
aas
xchg
lds
jno
mov
dec
dec
ss
ljmp
xlat
xchg
std
imul
pop
fs
dec
dec
sub
cmp
jbe
rorl
pushl
xchg
xor
cli
sbb
xchg
fistpll
popf
xor
dec
push
mov
mov
sub
ret
sub
fmull
mov
pop
scas
imul
sti
out
jne
sub
or
loop
dec
sub
cld
adc
inc
xchg
pop
mov
sub
cmpsl
push
in
or
push
bound
push
and
mov
popl
lcall
outsb
jb
adc
push
sub
dec
mov
sbb
out
xchg
and
xchg
or
mov
imul
push
jns
sbb
enter
dec
push
sub
outsb
cli
int3
push
ret
inc
jmp
out
shrb
mov
push
jmp
add
and
or
stc
adc
and
xchg
sahf
xchg
pop
and
sub
arpl
popa
xor
imul
pop
repnz
sbbl
jp
and
push
xor
lahf
pop
adc
pusha
test
adc
outsb
rcrl
inc
sbb
iret
xor
push
nop
stc
mov
xchg
stos
iret
pushf
mov
add
xchg
out
adc
inc
neg
xor
fisubrs
pop
scas
push
jle
jp
mov
in
cli
notb
lahf
sbb
push
dec
xor
ret
pop
sbb
dec
jle
mov
push
out
mov
stc
xor
add
and
inc
das
inc
ljmp
push
xchg
pop
push
add
sub
es
pop
and
adc
push
jp
xor
sub
inc
sub
aas
push
xor
cmpsb
jne
adc
push
jbe
pop
and
cmp
out
jb
push
scas
xchg
xor
testb
push
sub
jb
pop
outsb
into
add
sbb
outsl
fsubl
jg
pop
into
mov
popa
ficoml
and
out
sbb
pop
out
sub
cs
sbb
cmpsb
jno
inc
inc
in
lmsw
jge
xchg
mov
lods
push
pusha
pop
int3
outsb
cmp
mov
or
push
sahf
loop
jp
adc
jb
sbb
ss
insb
adcb
scas
pop
or
les
xor
rclb
std
cmpsb
mov
push
adc
lcall
and
addr16
jl
mov
and
push
stos
or
popa
jns
or
jb
iret
in
sub
mov
rcl
popa
clc
or
shr
jb
je
cld
cmpsb
xor
mov
xchg
push
xor
js
or
roll
clc
outsl
add
loope
enter
xchg
loop
fldt
mov
sbb
rcl
je
into
adc
scas
cmp
sarb
aas
pop
mov
cs
bound
outsl
push
add
sub
jp
pop
pop
sbb
and
dec
mov
adc
sub
cmp
xor
pusha
and
jmp
push
mov
pop
mov
or
divb
sahf
xchg
dec
shll
mov
pop
xor
cli
push
int
push
adc
les
cmpsb
xorl
push
dec
ljmp
cli
ret
mov
adc
adc
push
push
je
add
clc
dec
xlat
or
cmp
sbb
push
xor
jb
xchg
adc
adc
mov
repz
sub
push
je
jecxz
pop
adc
xor
push
mov
or
test
mov
add
mov
sahf
mov
add
push
inc
and
jle
and
lds
xchg
xor
sti
rcrl
cli
in
sahf
daa
push
or
sub
repnz
mov
xor
or
addr16
adc
pop
subb
cli
leave
es
cmc
test
popf
cld
or
sub
pusha
bound
iret
push
lods
push
inc
push
es
das
ret
cli
inc
xor
mov
lea
mov
jbe
mov
mov
xlat
je
dec
jp
mov
es
aaa
cmpsb
push
lods
fldcw
mov
jmp
xchg
inc
daa
adc
jnp
adc
je
popa
push
sbb
dec
scas
inc
es
mov
mov
out
xor
das
mov
divl
xchg
and
inc
test
imul
jbe
xor
push
and
adc
and
mov
pop
push
sub
inc
push
pop
xchg
fimuls
or
pusha
xchg
addr16
dec
or
adc
push
aas
or
insb
icebp
sub
push
push
and
sub
mov
inc
cs
jb
xor
pusha
adc
aam
lds
stos
xchg
dec
inc
sbb
pop
jns
repnz
mov
pop
mov
or
scas
push
pop
sub
jmp
push
dec
xchg
stos
cmp
stc
inc
nop
jb
adc
jbe
push
sbb
les
cli
xor
xor
xchg
mov
xor
xchg
add
out
adc
push
out
pop
out
int
jle
fidivl
cs
scas
jecxz
adc
imul
inc
pop
or
fs
mov
mov
push
cli
divb
mov
sub
cvtdq2ps
push
lret
jp
ljmp
sbb
adc
shl
xchg
shlb
cld
sbbb
movsl
sub
or
int
xor
jo
insb
cld
dec
adc
sub
leave
xchg
inc
and
push
adc
ficompl
out
aam
xor
pop
push
inc
test
lods
push
sub
dec
push
adc
test
scas
sbb
shrb
imul
and
fisubs
xchg
xor
rol
int
push
sub
fsubs
xchg
push
fmul
or
decl
enter
dec
push
mov
xchg
jle
cs
and
out
dec
xorl
cli
xor
dec
adc
push
fwait
loop
cmp
mov
mov
fistpl
lret
loopne
fsubs
add
jmp
or
arpl
scas
clc
inc
sub
mov
mov
mov
cmp
pop
bound
cs
sbb
or
aas
dec
outsb
call
loopne
and
xor
adc
test
ds
jge
rcrb
movsl
jle
mov
push
sub
dec
inc
push
aam
sub
fsubrp
fidivrl
rcr
out
cltd
push
popf
enter
es
loopnew
lea
and
ss
fisubs
pop
lock
out
lds
repnz
popa
pop
xchg
pop
stos
push
adc
jp
scas
mov
mov
or
outsb
mov
jp
add
push
xor
out
fwait
push
stc
cmpsb
sub
sub
xchg
das
insl
add
adc
xor
cmpsb
adc
dec
push
loop
and
adc
loopne
fimull
loop
jmp
mov
cld
sub
dec
jle
and
lret
test
lcall
push
pop
add
negb
jb
dec
xchg
adc
xlat
dec
mov
mov
ljmp
leave
jbe
pop
sbb
push
stos
cmpsb
and
pop
jp,pn
push
push
loop
or
pop
out
add
sub
punpckhdq
push
cmp
push
int3
cltd
sbb
xor
sbb
es
lea
cs
sbb
adc
or
fisubrl
jo
mov
imul
sbb
and
inc
fmulp
mov
sub
outsl
js
pop
add
pop
insl
adc
push
cmc
sub
mov
ljmp
xchg
es
or
pop
add
and
jl
ljmp
les
pop
jl
sub
jle
orb
movsl
inc
push
shll
jbe
inc
inc
jno
pop
or
jae
xor
xchg
xchg
push
loop
test
jne
cmpsl
fisubs
stos
fidivrs
xchg
sub
aaa
lods
add
sub
or
into
push
jbe
adc
mov
jmp
rcrl
js
test
push
cmp
shrb
ja
jbe
arpl
mov
out
ljmp
scas
andb
xchg
gs
xchg
cmpsl
xchg
ret
hlt
and
pop
scas
mov
iret
xlat
mov
pushf
lods
in
mov
push
mov
ds
outsl
scas
add
mov
jmp
or
stos
lds
fiaddl
dec
sub
sub
or
or
inc
test
mov
pop
jp
mov
lods
sbb
adc
divl
inc
imul
mov
jge
loopne
les
packssdw
sbb
pushf
adc
out
sahf
out
inc
fimuls
mov
cmc
cli
pop
dec
sahf
sbb
sub
dec
mov
outsb
cmc
pop
das
dec
jg
mov
mov
mov
es
cli
notb
push
add
pop
scas
cmp
xchg
sbb
cld
aaa
pop
loopne
ss
cmp
fwait
idivb
or
lret
pusha
outsb
ljmp
pop
mov
mov
mov
pop
test
aam
mulb
and
lcall
sub
mov
jg
push
push
dec
out
das
inc
outsb
outsb
and
push
mov
mov
or
int
mov
fistps
ds
xchg
stos
or
inc
mov
xor
adc
loope
and
lods
jl
add
and
or
and
in
test
std
fucomp
out
cmc
imul
sbb
mov
and
pusha
mov
xchg
fists
sub
shl
mov
push
dec
dec
std
and
adc
jp
ljmp
mov
pushw
sub
xor
add
jle
sbb
stos
jmp
scas
lods
notl
stos
xchg
and
jecxz
sbb
lods
inc
pop
adc
or
mov
in
or
xchg
sub
icebp
stos
popa
clc
or
je
inc
movsb
cmpl
aad
pop
mov
sbb
push
dec
scas
sub
and
and
and
mov
adc
and
arpl
andl
mov
pop
fistpll
out
mov
xor
js
subb
enter
scas
data16
mov
xchg
in
es
lret
out
lea
out
inc
fbstp
sub
mov
dec
lcall
add
sub
mov
sbb
mov
out
lretw
js
popf
stos
mov
xchg
hlt
daa
ds
cmc
rcrl
adc
mov
nop
mov
inc
mov
dec
fwait
int
maxps
jp
adcl
sub
xor
outsb
stos
subb
repnz
sub
jl
mov
pop
sub
sub
int3
outsl
addb
jl
stos
fstl
pop
inc
sbb
fucom
mov
lock
mov
fidivrl
jo
cmp
das
fbld
cmp
incl
add
jb
jbe
cmc
jp
sbbb
jmp
inc
mov
repnz
dec
pop
mov
inc
push
data16
ljmp
ficoms
sub
sti
or
cmp
dec
xor
or
pop
push
or
data16
sbb
mov
aad
fnsave
inc
popf
adc
jge
and
in
sbb
cld
hlt
mov
pop
scas
and
mov
sub
frstor
rcr
lahf
xchg
repnz
jne
push
mov
xor
testb
out
adc
fistl
pop
pop
jle
mov
fiadds
sti
mov
sahf
pop
fdivs
dec
ret
jno
inc
pop
xchg
cmpsb
inc
push
mov
cmp
jnp
sbb
out
lcall
jbe
dec
inc
xor
sbb
xorb
insl
cmpsb
scas
push
mov
idivb
sbb
int
fdivrp
xchg
sbb
xchg
dec
mov
pop
xor
stc
lock
stos
push
push
push
mov
sub
mov
sbb
mov
ljmp
stos
mov
sub
lcall
adc
repnz
ja
in
jne
jb
imul
dec
scas
stos
mov
sub
add
xor
lds
sbb
adc
cld
push
inc
loop
stos
sub
jbe
and
fimull
out
movsb
std
and
push
dec
aas
push
xchg
and
push
imul
mov
leave
xchg
jp
mov
pop
xchg
jb
loop
and
into
hlt
xchg
cs
sbb
mov
sahf
sub
dec
mov
mov
push
mov
adc
fimuls
mov
insw
dec
mov
outsb
xor
jne
mov
fwait
push
out
and
push
push
pop
roll
scas
out
dec
push
push
cld
cmpsb
xor
adc
rcrl
jb
adc
mov
pop
add
mov
push
mov
fisubs
stos
push
loope
add
sub
imulb
xchg
rcll
inc
push
push
leave
cli
pop
sub
pop
shrb
xchg
xchg
sub
out
sahf
int3
dec
repnz
cmpsb
stc
les
sbb
aas
xchg
sub
jp
loope
fs
xor
scas
loop
pop
fiaddl
sub
bound
and
jge
xor
and
loop
es
ja
or
out
add
sub
popf
int3
lock
and
lret
jns
inc
int
jp
push
sbb
jecxz
shr
lods
packuswb
add
std
fiadds
imul
cmp
in
or
lahf
push
es
fidivrs
jmp
sbb
push
push
push
or
cmpsb
sahf
sub
test
in
pop
xorb
jle
or
jb
xor
mov
dec
out
loop
stos
sbb
lcall
sub
sub
stos
scas
in
push
push
mov
or
dec
nop
xchg
adc
sbbb
lods
mov
enter
mov
mov
mov
jle
sbb
push
dec
jp
stos
out
push
mov
mov
pusha
xor
xchg
and
ljmp
pop
or
out
in
std
test
loop
insl
push
push
lea
ljmp
sbb
inc
xchg
xchg
ficoms
push
mov
or
and
scas
outsb
fists
ficompl
mov
mov
xchg
push
ficomps
push
repnz
cmp
or
inc
bound
in
pop
add
bound
cld
scas
outsl
ss
push
in
nop
jbe
test
bound
push
cmp
loop
pop
ficompl
xchg
cli
mov
cmpsb
testb
and
and
xchg
xor
shl
cli
push
sbb
cs
lahf
cmpsb
sub
stos
lock
mov
xor
jb
adc
int3
adc
xchg
outsl
push
push
dec
sub
inc
dec
negb
sub
outsb
insb
inc
cld
sub
jle
pop
ljmp
push
dec
xor
jae
sbb
test
ret
jb
push
sub
mov
push
rorl
pop
adc
mov
sahf
je
outsb
arpl
jmp
stos
mov
or
sub
xor
pusha
data16
push
ret
sarl
clc
neg
scas
rcll
push
stos
xchg
les
outsb
cs
mov
fiaddl
sbb
xchg
jae
sub
dec
dec
push
lcall
add
es
mov
jge
xchg
std
pop
test
popa
aad
outsb
cmp
out
jp
pop
adc
and
lock
push
sbb
rcrl
outsb
or
and
lds
push
or
add
mov
outsb
sbb
pop
in
sahf
movsb
sti
pop
sti
or
mov
or
inc
shrb
loop
pop
xor
xor
jb
stos
pop
pop
dec
pop
outsb
movups
lret
push
bound
stos
jge
mov
movzbl
lds
sbb
jp
dec
shlb
and
clc
fwait
cmpsb
pop
cs
mov
dec
idiv
mov
es
loopne
mov
jp
or
daa
cmp
pop
rcrb
xchg
xchg
aaa
mov
mulps
dec
lcall
orl
xor
into
adc
shrb
mov
fucom
adc
adc
loop
and
cli
stos
mov
or
sbb
out
push
or
imul
mov
xor
out
dec
nop
or
repnz
sub
cli
sahf
or
xor
pusha
mov
sbb
es
adc
je
add
jnp
gs
mov
inc
pop
mov
pop
mov
jp
cltd
pushf
xchg
fwait
jno
push
dec
js
testb
bound
sbb
and
xor
call
popa
push
push
imul
outsb
out
push
push
divb
repnz
ficompl
pop
or
pop
mov
xchg
xor
or
and
xchg
sbb
push
hlt
inc
mov
loop
sbb
inc
dec
push
pop
push
sahf
sub
inc
jecxz
ss
roll
and
cli
mov
mov
xorb
adc
jbe
fnstcw
mov
inc
mov
fstl
adc
adc
lcall
test
cld
dec
mov
sub
rcr
add
pop
sahf
mov
insb
sbb
push
dec
outsb
and
lea
test
dec
dec
add
xchg
cs
jle
out
push
fimuls
mov
adc
movsl
rorb
push
xor
or
lea
shlb
push
mov
push
inc
andnps
mov
subb
mov
test
popa
push
push
push
fs
rcr
inc
in
jns
loop
mov
mov
mov
call
mov
or
repnz
push
cmp
xor
movb
and
xor
cld
and
or
push
into
test
mov
xor
imul
or
and
jecxz
xchg
push
idiv
fcoms
jb
sbb
pop
sub
into
mov
outsb
or
aas
negl
and
mov
push
lahf
xchg
mov
jbe
jbe
inc
sbb
shl
inc
stc
add
imulb
pop
gs
cmc
jne
push
out
fwait
sbb
pusha
jb
adc
in
ljmp
insb
les
jb
imul
add
jp
add
xor
push
xchg
mov
out
push
popf
fs
fst
fdivrl
fwait
bound
rorb
fisubs
sub
xchg
mov
jbe
cli
int
pop
cs
add
stc
fwait
int
dec
int
push
sbb
push
rcrl
mov
adc
sti
mov
rorl
adcb
and
mov
pop
fiadds
or
or
push
push
js
pusha
or
loop
enter
xchg
push
push
add
movsl
fiadds
push
sti
jns
or
popa
add
and
jle
and
scas
scas
repz
push
gs
repnz
and
dec
xchg
rcrb
mov
test
test
mov
jae
push
int
adc
pushf
shl
dec
jns
push
and
scas
shrb
sbb
cli
ret
mov
mov
push
or
push
shlb
dec
mov
jle
sti
lcall
push
cmp
mov
test
lds
mov
ss
mov
adc
adc
xchg
push
xlat
add
fcmove
shll
notb
ljmp
xchg
out
mov
mov
sbb
int
stc
scas
fimuls
fwait
in
push
mov
mov
loope
dec
mov
push
xor
jbe
lds
fwait
or
push
pop
xor
push
std
cli
ljmp
ret
cmp
xchg
pushf
pushf
mov
mov
jb
push
das
xor
inc
adc
and
leave
xchg
push
ljmp
push
pop
sahf
fcoms
and
rcl
jns
mov
stos
pop
push
repnz
arpl
fdivs
dec
push
lock
sbb
in
mov
jle
in
pop
std
dec
jno
loop
xor
and
xchg
iret
stos
stos
into
jnp
sub
inc
outsb
mov
jb
ljmp
jns
and
fldenv
mov
sbb
scas
lds
or
xchg
xchg
outsb
pop
out
shrb
fisubrl
mov
mov
addr16
scas
push
or
adc
push
lret
jnp
fidivrl
fcomi
or
outsb
or
or
pop
push
cmp
out
pop
scas
cmp
pop
jne
rorl
imul
push
push
push
es
push
xchg
pop
jb
fsubrp
push
push
cmp
or
pop
or
pusha
lahf
push
out
shlb
sub
pop
mov
mov
je
push
dec
gs
pop
push
add
or
push
or
jle
lods
push
clc
push
shlb
loop
cli
xor
cwtl
add
inc
mov
incb
push
arpl
repnz
add
push
sahf
mov
mov
add
out
xchg
ficomps
jne
outsb
adc
leave
cmp
push
xlat
or
sub
sbb
jmp
push
bound
lock
mov
data16
add
xlat
add
int
mov
xor
sub
mov
jg
and
fs
xor
inc
pop
scas
jle
enter
enter
sahf
xchg
outsb
push
xor
stos
mov
lcall
sub
push
mov
cmp
adc
dec
fdivp
in
mov
sbb
ja
sahf
popf
insb
hlt
imul
sbb
ficoml
cs
and
mov
out
dec
sbb
scas
push
sbb
setne
scas
cmp
xchg
adc
lds
cmp
insb
xor
push
add
mov
add
dec
mov
adc
jle
lcall
adc
mov
mov
xor
push
popa
adc
mov
xor
push
hlt
sub
adc
pop
mov
sbb
push
movsb
push
dec
push
lcall
insb
scas
mov
sti
decb
ljmp
frstor
in
xor
fcompl
addr16
and
movsb
mov
or
jnp
std
out
mov
in
jno
into
fisubs
pop
mov
mov
xor
pop
fimull
or
jp
jge
cmpsb
into
add
lock
lock
out
mov
fs
out
repnz
or
push
sub
mov
jb
sarb
int3
push
es
adc
adc
int
mov
outsb
sbb
stc
cmp
mov
pop
pop
scas
mov
sbb
adc
sarb
cmpsb
jns
decb
nop
out
mov
mov
loop
incb
cmp
das
jne
outsb
push
bound
adc
je
roll
pop
idiv
mov
es
lods
negb
sbb
shl
cmp
pop
push
int3
ja
jl
push
sbb
jle
lret
aaa
mov
repnz
pop
lods
xchg
mov
mov
scas
xchg
jbe
notb
jle
in
fnsave
or
vcvtss2sd
mov
popa
sbb
aas
push
lahf
aam
pop
enter
aas
stos
imul
and
cli
bound
or
xor
mov
fidivs
or
cmp
js
je
sbb
push
jle
ret
jne
mov
sub
adc
sbb
or
and
frstor
and
push
ss
outsb
dec
scas
push
sbb
pop
fdivrs
pop
xchg
cs
dec
sub
xor
mov
pushw
in
imul
xchg
xor
call
inc
push
jae
scas
rclb
jp
adc
cmpsb
andb
bound
push
sahf
scas
cli
scas
ss
in
repnz
mov
lds
xor
mov
xor
mov
dec
test
test
pop
sub
stc
arpl
cli
jae
les
mov
and
aam
mov
inc
orb
jle
rep
mov
fisttps
mov
add
sub
xchg
jns
mov
outsb
push
aad
stos
incb
scas
xchg
scas
adc
dec
test
loopne
mov
cs
adc
adc
aaa
fiadds
cmp
ret
sub
rcrl
rolb
fisubrl
sub
add
dec
or
mov
outsb
shlb
sub
fisttps
aam
push
add
jp
shlb
ss
ss
rclb
sub
jbe
leave
rorl
sbb
stos
bound
mov
mov
inc
mov
xchg
adc
adc
sbb
adc
sbb
bound
andps
out
stc
ficoml
cmp
inc
dec
cmpsb
pop
sub
lcall
bound
inc
ficoml
mov
or
pop
mov
stos
xchg
mov
outsl
push
ljmp
out
into
xchg
jb
jbe
push
sbb
stos
cs
mov
xchg
or
inc
push
and
mov
ror
arpl
jle
push
stos
jecxz
mov
sbb
add
ja
scas
pop
inc
scas
fsubl
push
mov
repnz
outsb
xchg
nop
xor
xor
out
imul
int
or
loopne
sub
loop
fs
pop
or
xchg
sub
mov
pop
fidivs
cmp
and
aaa
dec
mov
out
or
dec
insb
ret
push
shl
rcll
mov
and
jp
pop
push
cmp
xchg
sbb
adc
xchg
cmp
xchg
cmp
and
mov
fdivp
testb
clc
outsb
test
adc
test
mov
adc
int
push
insb
lods
shrl
adc
jno
and
fs
aaa
push
cmp
mov
lock
pop
xchg
push
stos
xor
jno
mulb
sbb
pop
push
push
shll
inc
push
sub
push
mov
dec
in
shlb
and
dec
jnp
push
adc
fdivrp
sahf
in
adc
add
xchg
int3
inc
xchg
loope
bound
mov
andps
insb
xor
and
xchg
int
repnz
lret
sahf
sbb
push
push
xchg
shlb
imul
jbe
cltd
cmpsb
and
fs
pop
aam
lret
jbe
jecxz
xchg
push
cwtl
sub
dec
insb
fsubs
sahf
test
mov
mov
push
les
push
mov
bound
ja
fisubl
dec
mov
push
pop
inc
pop
adc
scas
or
data16
out
arpl
push
adc
iret
mov
scas
jno
mov
xor
int
and
sbb
mov
adc
and
push
push
scas
out
jle
push
pop
sub
fsubrl
rorb
out
xchg
movsl
and
mov
es
in
loope
push
xor
push
and
xchg
mov
in
out
xor
xchg
sub
out
adc
inc
jp
sub
std
xorb
rcll
pusha
jle
lcall
aam
inc
insb
inc
stos
ljmp
push
jae
or
push
dec
dec
mov
cmp
stos
push
ror
fiadds
frstor
or
stc
xor
adc
daa
lea
ss
sub
and
sub
jb
adc
pop
ret
fimull
mov
jbe
pusha
pusha
insb
mov
add
out
push
popa
sbb
gs
fdivrp
imul
or
in
imul
push
jl
aas
sbb
mov
inc
inc
jmp
push
push
push
orb
pop
popl
and
aas
jge
sar
pusha
test
sub
lods
adc
enter
add
mov
pop
mov
test
or
arpl
fs
arpl
mov
xchg
sahf
clc
push
pop
sub
repnz
and
cmpsl
mov
cmp
lods
jbe
je
xchg
scas
pushl
cli
mov
int
mov
loop
adc
popf
stc
insb
mov
dec
movsl
push
mov
imul
mov
bound
adc
repnz
push
outsl
lds
mov
push
stos
fimuls
push
mov
mov
adc
or
adc
or
push
adc
ja
pop
jecxz
push
imul
movsb
fcmove
sbb
pop
mov
pop
cmp
pop
inc
ficoms
lcall
stc
jne
std
mov
sbb
push
pop
loop
push
outsb
pop
dec
ret
push
loopne
push
cmpsb
scas
pop
adc
push
xchg
push
and
push
stc
outsb
cs
or
mov
xchg
pmulhuw
fildll
sahf
cltd
cli
ss
mov
pop
data16
out
pop
adc
in
cs
push
rorl
popf
xor
shlb
jb
adc
xchg
or
aam
xlat
imul
rcll
add
icebp
push
mov
jbe
pop
prefetch
or
xlat
movsl
pop
xchg
enter
lcall
fistpll
rol
or
or
xchg
adc
pop
adc
xchg
sub
in
mov
outsb
sahf
out
popa
mov
lcall
adc
xchg
adc
push
aad
cli
fiadds
sti
loop
sub
fisttpll
inc
enter
out
push
push
cmpsb
scas
mov
rcrl
push
push
add
mov
scas
mov
ljmp
adc
std
sbb
mov
setno
ljmp
push
or
insb
adc
notb
push
sbb
lret
fmuls
cmovp
es
cmp
mov
sub
testb
push
test
mov
das
adc
pop
hlt
movsb
pop
imul
mov
xor
mov
xchg
mov
cltd
add
and
cmp
data16
sub
add
adc
out
push
and
mov
push
adc
sub
mov
in
jnp
jle
xlat
push
add
jnp
stos
out
and
or
or
inc
jl
pop
jb
insb
xor
imul
inc
pop
scas
sub
fimull
xor
fwait
psubd
aad
mov
push
push
push
shlb
ljmp
cli
mov
and
daa
out
fldl
pop
add
sub
stos
pop
jle
jl
cwtl
scas
push
fcom
loopne
sub
outsb
js
in
and
data16
and
pusha
andb
scas
sarl
rcrl
mov
adc
add
xchg
dec
mov
adc
lcall
sbb
mov
jle
push
cmp
scas
fs
jno
jle,pn
mov
mov
js
mov
stc
jl
pop
mov
adc
jns
mov
rcl
and
pop
insl
in
and
lcall
pop
fidivl
mov
fstpl
jns
cs
sbb
pop
ret
scas
push
inc
sub
pop
push
adc
or
xchg
xor
outsb
xchg
xor
cli
dec
test
and
stos
enter
xor
aad
xchg
mov
or
ficompl
imul
gs
push
or
pop
push
xchg
mov
xor
js
ficompl
adc
dec
sbb
repnz
cmpsb
int
push
xchg
in
in
xchg
cmpsl
push
aad
cli
arpl
imul
mov
jp
es
sub
push
xchg
in
xlat
push
mov
jge
push
shrl
push
fisubl
rorb
fucomip
jp
outsb
pop
push
sbb
xor
sbb
pop
adc
xchg
xchg
stos
cltd
popf
ljmp
addb
sbb
jae
insl
jae
adc
push
xchg
aam
int
or
pop
fdivp
jp
inc
shlb
xor
stos
adc
imul
sub
push
rcrb
sbb
mov
inc
xlat
pop
rorl
test
int3
js
push
xchg
mov
stc
outsb
jp
leave
push
jne
sahf
test
ljmp
bnd
test
outsb
jne
pop
adc
push
or
aam
dec
ds
sbbb
ljmp
jns
push
and
add
sbb
nop
xchg
scas
adc
pop
dec
adc
mov
mov
add
cmp
adc
push
pop
sub
lret
int
jle
sbb
pop
stos
push
cmp
jp
and
insl
or
fdivrs
sub
popf
decb
out
adc
imul
popf
xchg
push
into
jb
nop
adc
rcrb
jp,pn
mov
inc
imul
push
jb
sub
pop
dec
imulb
and
sub
test
add
cmc
dec
jne
mov
or
into
pop
mov
inc
stc
or
ljmp
sahf
jle
or
das
push
out
in
and
insl
ss
es
push
pop
fisubl
mov
clc
add
push
sub
lcall
int
cmpsb
dec
mov
or
pop
jbe
adc
mov
adc
push
es
xor
xor
inc
xchg
std
or
test
ret
dec
dec
sbb
outsb
mov
or
ljmp
mov
sbb
xchg
xchg
stc
rorb
bound
add
pop
sub
arpl
adc
push
or
xor
mov
fwait
jb,pt
or
shrl
mov
xchg
sbb
fiadds
repnz
add
sub
andw
sahf
sarb
mov
fmuls
in
sbb
pop
inc
jae
bound
pop
push
add
push
xchg
mov
mov
das
inc
fists
dec
dec
bnd
out
cwtl
in
and
jno
dec
rclb
data16
xchg
cmpsb
stc
out
sahf
jle
xchg
adcl
ficoml
push
mov
cli
adc
mov
lea
mov
fsubs
je
pop
sahf
push
xor
das
mov
cli
and
pop
adc
out
or
and
push
out
pop
mov
xchg
dec
loopne
mov
inc
pop
mov
clc
mov
sbb
adc
ljmp
out
xchg
and
cmp
pop
filds
or
sub
iret
mov
push
repz
pop
inc
sti
xor
and
pop
scas
jle
jp
fidivrs
adc
jno
nop
loopne
stos
jmp
add
hlt
loop
xchg
adc
cmpsb
aad
or
xor
or
int
mov
dec
inc
repnz
or
adc
or
es
jb
pop
xor
mov
ret
loop
or
jbe
and
push
imul
push
mov
mov
idivb
jno
dec
sbbl
mov
jp
adc
sbbl
push
ss
lods
pop
jnp
ficompl
repz
push
push
or
mov
fsubs
popl
xchg
out
bound
mov
push
stos
push
je
sbb
xchg
adc
orb
pop
js
jb
sbb
sahf
in
and
loop
scas
outsb
addr16
mov
cmpsb
pusha
sbb
loope
out
into
iret
sbb
cs
sub
scas
xchg
and
shrl
sub
ljmp
imul
sub
push
scas
cmpsb
jo
scas
lea
xchg
clc
test
xor
pop
outsb
push
stc
pop
rcrb
ss
fisubl
out
sub
stos
scas
bound
int
dec
sahf
pop
rclb
mov
movsl
push
out
sub
jle
out
ss
scas
stc
sbb
adc
xor
pop
mov
sbb
adc
std
sbb
mov
popa
sub
fldt
mov
repnz
pop
stos
addr16
ss
out
mov
push
popf
sub
push
les
dec
mov
outsb
push
adc
and
rclb
dec
rorl
mov
pushf
rcll
cwtl
out
repnz
push
repnz
clc
int3
arpl
mov
push
outsb
bound
and
mov
sbb
push
scas
bound
push
adc
imul
sub
and
add
push
ud2
iret
dec
pop
and
std
cmp
push
xchg
cld
test
adc
inc
loop
adc
sbb
out
push
push
xor
jae
test
adc
insb
xchg
dec
cmpsl
loopne
xor
repnz
repz
push
xchg
add
rol
stc
in
mov
and
xchg
cs
fs
scas
xchg
lock
jle
popa
pop
sahf
ljmp
pop
lods
mov
or
and
cmpsl
rcll
mov
ss
adc
xor
mov
mov
dec
testb
mov
xor
mov
adc
push
fsubrs
mov
das
mov
push
or
out
or
js
jo
sbb
sbb
mov
mov
jb
jns
mov
and
push
aam
or
stos
sbb
cmp
cs
out
adc
aam
push
popa
imul
xchg
inc
outsb
rorb
or
push
repnz
mov
xor
cltd
adc
jp
lods
in
or
push
or
test
jp
addr16
fistl
push
push
sbb
mov
mov
lock
push
dec
ss
xchg
sbb
scas
aad
loop
frstor
cltd
or
stc
negb
sbb
lahf
cmp
cmp
in
adc
and
mov
shll
push
and
shrb
out
push
clc
mov
add
or
jnp
jle,pn
ficoml
hlt
cs
pop
insb
jl
or
pop
xchg
push
xchg
push
lds
adcb
mov
xchg
fmuls
push
in
sub
lock
add
inc
jnp
jne
sahf
in
scas
pop
testb
sbb
inc
stos
jo
jle
cmc
out
mov
mov
clc
mov
fbld
pop
xchg
loope
rorl
push
add
xchg
dec
pop
push
loop
outsb
fsubrp
es
imul
stc
and
xchg
mov
clc
cli
shlb
int
cltd
push
popf
push
int3
push
gs
pop
mov
xchg
fidivs
mov
mov
sbb
cmpsl
mov
xor
scas
fwait
jle
inc
or
lcall
sahf
or
sub
lock
xchg
jne
mov
aaa
push
fisubrs
or
fdiv
scas
cwtl
dec
std
push
loope
xchg
mov
das
nop
loop
sahf
jbe
fwait
push
or
stc
and
rolb
loope
scas
fiaddl
arpl
imul
cmp
or
repnz
mov
adcb
outsb
adc
popa
sbb
scas
out
out
mov
jbe
push
sbb
or
int3
mov
mov
out
faddl
sub
xor
out
int
add
cli
adcb
dec
imul
dec
jb
dec
push
ljmp
repnz
test
cmpsb
and
push
int
shr
adc
inc
in
and
push
sbb
pop
xchg
pop
cmp
push
movsb
jae
and
dec
sbb
xchg
cmpsb
shlb
sbb
stos
stc
push
push
xchg
sti
push
decb
sub
jge
outsb
pop
cld
adc
and
jae
jle
cmpsl
pop
add
bound
mov
xor
fst
loopne
fdivrl
add
scas
leave
lds
push
and
or
pop
jle
or
jp
arpl
pop
js
stc
movsb
inc
leave
xchg
cmp
sub
loope
push
xchg
and
cmp
out
sub
int
add
enter
ficomps
push
sbb
xchg
scas
scas
or
data16
sbb
push
jle
es
jecxz
and
ret
cmp
or
or
push
lock
cwtl
add
and
cli
dec
pop
cli
adcb
es
mov
aas
pop
inc
jbe
push
negl
repz
inc
scas
pop
hlt
xchg
cmpsb
inc
push
ret
xor
lock
loopne
das
adc
cmp
shll
mov
xchg
jbe
push
adc
cs
or
psubw
ljmp
jns
mov
arpl
movsb
push
lods
mov
rorl
or
push
jno
imul
push
xor
adc
jg
push
cmc
sub
mov
shll
enter
clc
scas
jp
and
int
bound
push
jbe
sub
xor
outsl
mov
mov
movsb
ja
insl
arpl
mov
mov
jle
and
push
and
fisubrs
xor
int
in
js
shrl
nop
std
add
fidivl
xchg
fiadds
or
lret
mov
sub
notl
push
lcall
sbb
test
pop
cmp
and
or
popa
push
daa
leave
dec
pop
mov
sub
lea
jne
push
and
mov
inc
push
jbe
or
push
ljmp
imul
sub
jb
outsb
mov
push
loop
xchg
mov
push
aad
mov
icebp
inc
scas
repnz
pop
push
out
sbb
scas
sahf
jo
push
push
sbb
lods
mov
xchg
jbe
dec
add
cli
loop
mov
or
push
stos
adc
rcl
fisubl
iret
add
xchg
shll
scas
movsb
sbb
mov
shrb
hlt
int
push
and
stc
xor
sub
sub
push
add
push
xor
scas
mov
pop
sahf
mov
xchg
fcmovnb
and
sahf
sbb
inc
subb
sahf
mov
xchg
pop
mov
rcl
adc
xchg
cmpsb
jne
xor
out
stos
test
cli
ljmp
jp
popf
sbb
out
mov
sub
push
insb
mov
scas
mov
outsb
sub
test
fldenv
mov
imul
mov
and
outsb
xchg
mov
fisubs
sahf
cmp
pop
and
int
push
daa
adc
shlb
bound
sub
jb
push
in
std
movsb
jns
decb
and
sbb
hlt
loop
push
adc
sub
data16
call
sbb
xchg
mov
mov
mov
dec
adc
ss
lret
and
xchg
loop
ljmp
mov
jnp
mov
inc
cmp
pusha
test
and
inc
pop
repnz
and
das
out
enter
fstp
mov
lcall
cmp
outsb
femms
test
out
stos
mov
jo
outsb
rolb
shrl
lock
push
pop
lcall
shlb
sbb
xor
or
sbb
dec
sbb
push
push
stos
xchg
shl
sub
xor
add
mov
mov
ss
and
sarb
adc
xchg
arpl
pop
mov
push
clc
add
jne
stc
out
faddl
cld
push
call
fs
pop
stos
dec
popa
repnz
push
sahf
pop
stc
add
push
dec
inc
sbb
mov
stc
cld
sub
cmp
outsb
and
xchg
gs
lcall
imul
mov
mov
es
pop
add
cmp
and
popf
andb
cmp
adc
mov
jle
aam
repnz
das
rcrb
lock
in
int
or
jno
inc
push
xor
add
es
push
mov
xor
lret
xor
int3
sbb
add
adc
mov
out
or
pop
in
cld
xchg
mov
repnz
jp
ficoms
rorb
dec
mov
bound
sbb
ljmp
sbb
pop
scas
outsb
xor
mov
out
popf
pop
or
add
push
adc
stos
and
bound
cmpsb
dec
cli
outsb
mov
dec
repnz
data16
bound
mov
push
push
adc
bound
sub
jbe
adc
dec
stos
xchg
xchg
stos
jbe
inc
inc
lds
mov
push
cmp
scas
imul
sbb
sub
xchg
cmp
data16
adc
iret
in
shl
bound
scas
and
loop
push
adc
pop
jp
cs
mov
sub
cmp
jbe
insb
fnstsw
mov
push
stos
jae
push
push
adc
out
iret
pop
rclb
push
out
ficoml
xchg
scas
mov
xor
push
inc
or
lahf
xor
jns
divb
sub
mov
add
loop
xlat
out
dec
imul
data16
inc
nop
jle
mov
pop
adc
out
pop
push
or
mov
add
data16
mov
xchg
sar
xchg
out
or
imul
sub
add
stc
repnz
push
sahf
adc
negb
mov
lds
xor
and
shrb
push
xchg
jb
stos
cltd
or
adc
imul
mov
mov
fstpl
jb
add
fs
std
stos
fstpt
pop
shrb
loop
dec
jge
pop
in
fdivl
mov
mov
movsb
pop
shll
sbb
aas
jnp
xchg
mov
adc
into
push
test
lcall
ljmp
xor
in
sub
shr
scas
andb
loope
add
loop
push
sub
fidivrl
mov
push
rclb
scas
push
mov
fcoms
roll
stos
sbb
scas
cli
clc
jno
bound
mov
adc
loop
cmp
xchg
scas
push
sub
pop
jle
sahf
mov
mov
es
xchg
jbe
sbb
and
faddp
cmp
and
sti
lret
stc
call
mov
inc
inc
nop
pusha
adc
xchg
push
leave
aad
cmp
repnz
mov
xor
cltd
notb
push
sub
mov
push
xor
or
popa
push
repnz
movsl
or
adc
movsl
lahf
ss
jbe
add
out
cs
and
imul
mov
push
pop
mov
cmpb
testb
inc
ret
adc
shlb
mov
and
arpl
adc
pop
aaa
xchg
mov
mov
mov
lcall
divl
dec
jno
cmpsb
jae
xor
push
repz
xchg
adc
or
mov
test
or
push
mov
lea
fwait
out
pop
mov
or
push
adc
int3
and
cltd
mov
sub
fisubrl
or
xorb
add
jb
sbb
push
mov
jbe
mov
out
push
xor
sub
adc
sub
add
and
mov
outsb
adc
or
jmp
jle
adc
int
sub
sbb
insl
out
das
add
jl
adc
mov
sub
rcll
and
push
sub
in
ja
adc
push
stc
adc
or
pushl
aas
jne
mov
cmpl
jb
mov
out
ret
rclb
subb
dec
xchg
sbb
jno
sbb
sahf
rcl
int
mov
push
xchg
xor
ss
subb
ss
and
into
fsubrs
mov
mov
add
test
xor
mov
out
iret
mov
push
pop
dec
sub
add
fs
push
or
inc
xchg
and
rorl
dec
enter
lods
xor
negb
stc
adc
arpl
ss
push
and
xor
jp
xor
mov
push
fmulp
mov
pop
push
out
cli
push
adc
scas
outsb
jbe
push
adc
out
push
xchg
enter
cmpsb
fwait
cld
popa
sbb
es
jbe
mov
lcall
arpl
push
add
push
fst
push
dec
add
incl
into
test
inc
mov
test
xchg
sub
mov
into
stos
and
or
push
sub
jmp
push
bndldx
adc
push
ret
push
inc
repz
mov
dec
dec
or
mov
sbb
and
mov
mov
sub
xor
outsb
stc
pop
cmpsl
scas
inc
mov
xchg
es
dec
test
loop
jg
pop
add
dec
mov
popf
loop
mov
adc
scas
jae
jle
jmp
jns
jp
xor
hlt
lock
xor
push
dec
loop
lds
pusha
loope
enter
scas
pop
fisttpl
and
out
mov
ficoms
or
sbb
jbe
xchg
ret
in
push
repnz
ss
inc
jb
pushl
enter
outsl
push
in
test
cmp
dec
pcmpgtd
cld
ljmp
adc
adc
stc
pop
and
rorb
test
loope
arpl
not
gs
mov
aaa
push
adc
push
inc
scas
in
jl
cmc
push
scas
jle
mov
xchg
mov
mov
sbb
sbbb
stos
sub
sub
pop
jbe
sbb
or
pop
dec
lcall
push
xchg
adcb
adc
push
shl
outsb
add
fucom
inc
cltd
and
adc
xor
xchg
fidivrl
jns
mov
inc
stos
mov
or
jns
jbe
and
outsb
sbb
in
add
bound
mov
xchg
adc
and
scas
and
call
xor
cmpsb
and
outsb
jp
jb
and
data16
loop
push
mov
scas
testb
sbb
push
push
xchg
push
rcrb
adc
out
sub
movsl
push
xchg
cli
sahf
out
cmpsb
sub
xor
sub
mov
test
dec
xchg
ljmp
data16
das
ljmp
jmp
dec
adc
inc
pop
sub
cmp
insb
lcall
dec
inc
mov
push
jbe
insl
data16
sub
xchg
push
arpl
pop
ds
mov
pop
xor
inc
cli
dec
and
test
les
cmpsb
inc
xor
and
sub
inc
cld
or
sub
xchg
pop
ljmp
jecxz
sahf
xchg
outsl
push
cs
sub
cmpsb
jle
jae
push
bound
xchg
je
mov
or
sti
xchg
loop
mov
dec
sub
fnstcw
mov
popf
repnz
push
or
cli
subl
clc
xor
or
xor
fmul
pop
es
push
scas
mov
mov
sbb
lods
pop
repnz
scas
pop
sub
sub
jns
sub
xchg
mov
clc
jle
cmpsb
mov
jb
leave
jp
xchg
pop
test
scas
and
addr16
and
fimull
fmulp
push
lcall
sar
jp
mov
gs
mov
arpl
mov
lcall
or
int3
cmpsb
loop
xor
push
pop
mov
or
aas
pop
jno
and
inc
xchg
arpl
negl
or
pop
rcrb
cmp
stos
xchg
sbb
loop
jb
arpl
bound
sub
push
dec
test
dec
add
lods
add
push
cmpsb
fmul
into
bound
repnz
pop
sub
shrb
push
sar
into
movsl
stos
pop
pop
nop
and
pop
cmpsb
push
sti
and
adc
andb
xchg
outsb
jle
jp
mov
adc
pushf
xor
rcrb
xor
xchg
adc
pop
popf
mov
sub
ret
stc
sub
pop
push
out
lods
jmp
and
pop
push
inc
adc
sbb
pop
sbb
scas
dec
mov
das
setb
push
and
or
sub
inc
sbb
pop
jg
pop
cmp
jns
sub
push
mov
lods
dec
jo
or
mov
cli
lock
cmp
shrb
js
push
jno
repnz
jle
inc
mov
push
push
cmpsb
push
sbb
mov
jns
jle
std
mov
xchg
push
out
add
mov
or
inc
scas
ja
into
mov
sahf
lods
push
fisubrs
stc
or
and
lcall
jb
cmpsb
mov
push
xchg
pop
mov
pop
inc
out
or
into
dec
pop
sbb
dec
sub
ljmp
insb
cmp
sahf
dec
ss
push
dec
jp
pop
sbb
ja
or
sbb
shrb
imul
std
xchg
fadd
jle
jecxz,pt
popa
fs
stos
enter
dec
ljmp
dec
iret
and
call
and
in
xchg
clc
outsb
push
stc
push
xchg
push
pop
sbb
push
fisubrs
sti
loop
push
fiadds
xchg
scas
imul
repnz
imul
mov
loop
pop
xor
repnz
cwtl
movsl
sub
jae
arpl
adc
dec
scas
insl
push
cmpb
repnz
adc
sahf
movl
sub
shrb
jno
cs
push
insl
stc
cmp
enter
fcoms
jg
push
add
jno
adc
imul
bound
jbe
mov
pop
or
add
mov
sbb
dec
not
mov
sbb
or
sub
mov
dec
sbbb
scas
ljmp
repnz
fcoms
jb
push
test
stos
scas
adc
mov
outsb
lret
rcrb
and
ficompl
mov
xchg
pop
push
test
sahf
cs
push
inc
or
xchg
push
outsl
sbb
adc
or
into
and
mov
mov
push
pop
inc
rol
add
cs
dec
mov
jb
xor
push
mov
pushf
imul
push
xor
or
cs
outsb
mov
adcl
sbb
cs
push
ret
xchg
xchg
and
imull
push
imul
scas
ljmp
inc
popf
sahf
outsb
rcr
es
push
int
inc
adc
jle
or
push
jbe
aam
push
adc
cmpsb
outsb
sbb
bswap
sahf
cmpsl
pushf
inc
pop
or
imul
popf
testl
fldl
sub
add
push
scas
call
dec
mov
ss
insb
push
push
push
inc
or
sbb
cltd
data16
pushf
sbb
stos
popf
jbe
ja
push
shlb
push
push
inc
cli
jecxz
jns
jno
int
add
jb
and
sahf
or
sub
outsb
push
stc
adc
add
fwait
and
pop
test
and
ret
or
mov
mov
fs
and
or
cmpsb
clc
push
xchg
inc
out
in
mov
mov
fsubrs
adcb
adc
inc
popa
les
stc
aam
cmc
pop
sbb
stos
xchg
adc
decb
out
lret
jne
and
xorb
jns
imul
mov
mov
sbb
test
dec
add
dec
jae
loop
dec
mov
scas
push
pop
das
pop
dec
or
std
or
mov
movd
out
sbb
add
sahf
bsf
into
jg
das
mov
scas
sub
es
push
movsl
sub
out
or
pop
push
or
ljmp
push
xchg
jne
jbe
mov
ds
jns
push
mul
sbb
mov
jp
push
scas
jbe
data16
sarb
mov
pop
push
ficompl
bound
pop
and
aas
mov
sbb
add
mov
and
fimuls
fisubrs
adc
mov
push
inc
and
inc
jno
outsb
scas
loop
cmp
pop
sar
out
sbb
and
dec
add
inc
outsl
cli
nop
in
inc
xchg
jle
cmpsl
in
imul
adc
dec
push
and
xchg
es
or
xchg
adc
and
arpl
push
sub
shl
cli
call
push
out
sahf
xor
lds
cmp
neg
stc
imul
aas
xchg
push
or
into
inc
out
sbb
mov
push
dec
inc
arpl
sub
add
outsb
push
idiv
sub
pop
xchg
scas
shlb
repnz
sub
stc
outsb
stos
stc
cltd
xor
das
mov
adc
sub
adc
sbb
and
push
fdivp
adc
scas
cs
out
inc
stc
inc
pop
in
jmp
lds
into
mov
or
shlb
pusha
and
sbb
sti
inc
xchg
lcall
sbb
data16
mov
shrb
push
repnz
add
adc
rsm
cld
push
sbb
pop
fcomp
mov
mov
or
dec
shrl
and
adc
in
insb
rsm
xchg
xor
push
data16
jbe
inc
pop
pop
xchg
fisubrs
dec
xchg
ss
daa
push
mov
or
dec
fiaddl
cmpsb
xchg
stos
roll
xor
sbb
and
fcoms
sbb
int
mov
inc
xor
push
adc
xor
rcll
cmc
mov
cwtl
iret
dec
xchg
out
daa
outsb
push
push
mov
ss
popf
sbb
repnz
dec
sbb
adc
adc
mov
or
nop
dec
push
pop
in
inc
inc
sbb
stos
dec
jbe
add
andnps
stc
sub
mov
repnz
push
adc
adc
jnp
adc
out
divb
mov
mov
pop
jns
sub
xchg
in
lock
fisubrl
jae
shl
bound
imul
xlat
mov
and
sub
notb
pop
push
xor
jle
sbb
rclb
outsb
add
xchg
insb
lret
mov
les
mov
xor
jl
add
ljmp
cwtl
sahf
popf
outsb
xor
call
std
pushf
lods
imulb
jns
out
scas
xchg
push
pushf
popf
jmp
pop
and
sbb
cmp
notb
cs
jno
xchg
int3
dec
mov
popa
jle
adc
mov
push
dec
not
mov
incb
ret
call
dec
scas
dec
outsb
pusha
scas
sub
pop
add
mov
cwtl
mov
popa
mov
dec
adc
and
lods
cmp
fidivrs
mov
inc
and
dec
add
xchg
cs
outsb
ljmp
xchg
push
scas
divl
out
sub
adc
pop
xor
sub
and
cwtl
in
pushf
repnz
xchg
and
jp
cltd
outsb
push
jbe
test
lock
push
xor
push
xlat
int
jg
mul
mov
dec
aam
dec
je
jb
jmp
sub
mov
push
xchg
neg
xlat
and
mov
pop
push
cli
sbb
das
lods
push
sbb
adc
xchg
sub
fcoms
push
jle
into
mov
sbb
jg
mov
mov
in
add
in
adc
andb
or
pop
xor
out
push
and
push
insb
into
xchg
or
mov
out
lea
mov
es
loop
xchg
adc
stc
push
int
mov
mov
std
jbe
fistl
and
das
rorb
jb
mov
dec
push
or
in
push
insl
xchg
xchg
das
popa
inc
add
ja
insb
imul
arpl
or
cmpsl
inc
xor
xor
push
push
ja
adc
aas
popf
in
pop
dec
mov
jno
push
dec
pop
sbb
pop
pop
push
or
sub
out
lahf
pop
push
jle
stos
and
ficoms
sub
insb
adc
mov
jl
pusha
push
xchg
sub
sub
mov
std
shlb
js
aas
sub
enter
loopne
xor
scas
cmpsl
ds
sub
sbb
in
xor
adc
push
adc
or
push
stos
push
imul
mov
sbb
iret
out
pop
or
ficoms
push
pop
push
mov
adc
jnp
cmc
add
xchg
scas
roll
jle
sbbb
jmp
loop
shr
pop
data16
add
mov
les
push
jns
shrb
xchg
pop
repnz
imul
pusha
mov
mov
push
jbe
mov
movsl
inc
mov
sahf
cli
jae
mov
or
lds
jbe
faddp
cmp
stos
xchg
jns
sub
cli
push
sahf
lcall
pop
stc
adc
dec
ror
rolb
or
xchg
xchg
push
stos
adc
pusha
loopne
pop
dec
cmp
nop
imulb
push
mov
adc
push
lret
repz
adc
xchg
inc
test
cli
pop
jnp
insl
push
jo
inc
test
push
mov
cmpsl
xchg
sub
sub
inc
and
and
push
cmp
or
lods
xchg
repnz
sub
push
push
or
cmpsl
inc
mov
mov
call
xchg
pop
push
sbb
shl
push
add
sar
int
mov
out
data16
push
pop
dec
mov
inc
lcall
iret
shr
jb
stos
leave
mul
in
mov
add
xor
xor
out
mov
push
xchg
push
cmp
xorb
adc
push
repnz
outsb
andb
mov
test
cmp
sub
jb
mov
sbb
cli
sub
insb
lods
xor
into
into
loopne
or
iret
fldcw
xlat
adc
gs
pop
xor
loop
mov
jnp
sub
pusha
pop
stc
xchg
sbb
push
pusha
pop
cmp
cmp
adc
adc
pushf
add
cmp
sarl
loopne
lods
mov
sti
xchg
in
lock
pop
push
stos
xchg
dec
setnp
cwtl
daa
dec
repnz
and
mov
sbb
movsl
mov
xchg
addb
stos
jnp
push
pop
mov
pusha
jbe
sbb
iret
mov
add
scas
shlb
test
add
and
adc
arpl
push
lcall
int
inc
lcall
pop
jl
inc
adc
scas
jg
push
movlps
sub
fidivrl
ljmp
mov
scas
fbstp
pop
divl
mov
arpl
pop
inc
sahf
faddl
sub
adc
clc
imul
sbb
adc
push
mov
shll
icebp
out
sbb
sub
outsb
idiv
mov
data16
pop
xlat
bound
ljmp
sbb
lret
stc
push
sbbl
jle
fisttps
and
scas
push
mov
and
dec
jle
jecxz
stos
push
cmp
adc
cmpsl
sub
dec
filds
inc
leave
push
add
into
pop
mov
sub
pop
pop
jbe
ljmp
icebp
dec
sbb
jbe
in
and
sub
cmp
adc
lcall
dec
fistps
add
stc
repnz
cmp
mov
or
xchg
mov
cs
setle
push
sbb
jae
mov
fsubrl
cmp
sbb
sub
out
xchg
movsl
cmpsb
push
iret
dec
scas
sub
xor
jbe
shlb
inc
in
stos
sub
or
lret
push
dec
adc
stos
mov
cmp
in
sub
sbb
mov
jbe
mov
call
int
adc
fcmove
sub
and
push
add
and
sbb
loop
rol
adc
cs
popa
push
xor
sahf
arpl
jns
jle
jle
loop
dec
ds
mov
push
xor
aad
cmp
dec
out
mov
xor
xor
push
scas
out
dec
cmpsb
scas
sahf
and
lret
adc
mov
test
push
and
out
shlb
or
and
rcrb
shll
jecxz
sahf
cwtl
inc
mov
loopne
lcall
mov
sub
arpl
mov
imul
fwait
push
cs
andb
shrb
mov
lcall
fiaddl
adc
lcall
pop
negl
pushf
sbb
pop
xchg
rcrb
xor
and
or
sub
mov
stc
lea
xchg
mov
mov
lcall
fwait
dec
jb
adc
pop
sbb
mov
xchg
inc
test
or
mov
std
loopne
repnz
push
pop
adc
testl
stos
pop
inc
adc
fcom
jno
mov
stos
and
adc
jge
or
in
mov
scas
xchg
cmp
sub
inc
push
sub
outsb
imul
dec
sar
xor
xchg
push
jns
rol
sub
or
push
call
mov
and
sarb
and
add
pop
adc
out
int3
and
lds
subb
jns
es
push
imul
sbb
scas
jb
add
mov
jg
stos
or
jbe
push
cmpxchg
popa
outsl
xchg
pop
push
arpl
stos
xor
push
adc
shrb
xor
mov
jns
cmp
add
enter
cmpsb
loop
and
push
jno
pop
xchg
push
imul
mov
inc
fisttps
leave
pop
sub
lods
push
push
mov
cmpsl
push
push
es
mov
or
aam
loopne
sbb
ljmp
jle
sub
mov
mov
sub
or
pop
sahf
ficoms
leave
xchg
jle
inc
xor
sti
shl
xor
jl
adc
into
shll
sbb
jnp
mov
mov
push
add
xchg
jbe
cvtdq2ps
das
dec
call
push
rep
jns
push
add
and
sub
or
push
push
psubd
dec
jl
push
ja
push
pop
sbb
sub
mov
dec
push
enter
movsl
jb
cltd
stc
adc
orb
jbe
or
push
out
call
cltd
cs
push
sbb
jle
sbb
mov
in
mov
pop
out
cld
cs
push
cli
cltd
push
push
xor
or
pusha
mov
pop
es
out
xor
pop
fidivrs
or
or
divb
push
sub
push
repnz
movsb
xor
stos
mov
dec
push
negb
cs
and
add
xchg
lds
jbe
inc
andb
das
movsl
push
es
scas
pop
adc
insb
fwait
inc
pushf
cltd
data16
shlb
es
push
scas
stc
push
push
dec
pop
scas
pop
xchg
xchg
mov
push
js
jp
mov
cmpsb
repnz
in
int3
add
pop
sbb
fs
or
mov
inc
push
pop
shrb
jle
push
incb
pop
and
mov
aaa
add
pop
bound
pop
lahf
sub
or
jle
adc
es
add
pusha
lret
into
jge
sbb
and
fistpl
sahf
xor
pusha
pop
stos
sub
loopw
iret
jl
push
popf
call
aam
cmpsb
nop
stc
pop
xor
xchg
mov
es
loop
fbstp
je
cmc
scas
cmpb
jno
outsb
sahf
into
scas
lret
sar
loop
or
adc
mov
xchg
scas
cs
add
jbe
xor
mov
bound
dec
stos
popa
jo
push
data16
imulb
pmaxub
lea
jns
push
jns
pop
subl
xchg
xorl
push
movsl
push
cmp
out
jle
cwtl
mov
lcall
loop
sbb
es
adc
adc
mov
pop
roll
mov
push
or
fsubs
outsb
into
cmc
xor
scas
stos
and
push
add
mov
push
xor
mov
jns
test
push
xchg
data16
sbb
jle
dec
sub
xchg
mov
andb
outsb
adc
sub
pop
test
xor
push
xchg
es
sub
movsl
ret
sarl
sbb
iret
outsl
dec
nop
sarb
and
or
push
popa
mov
or
inc
lods
mov
cmovnp
aad
ss
hlt
add
mov
repnz
adc
cmp
cltd
dec
mov
leave
orb
das
xor
or
clc
scas
jbe
inc
adcb
push
popf
stos
mov
pop
mov
xchg
add
push
xor
scas
data16
and
or
mov
jmp
xchg
mov
push
pop
dec
jne
push
mov
bound
pop
shlb
push
mov
nop
mov
cmp
and
xorb
scas
lock
mov
xchg
test
pop
out
pop
add
add
movsl
ficomps
sbb
mov
push
not
jp
shlb
out
adc
push
xchg
xor
xor
sarb
dec
ljmp
loop
and
sbb
ss
or
popa
loop
ljmp
xchg
into
stc
jle
pop
xor
sbb
adc
data16
sub
cmpb
add
jle
dec
jno
or
dec
test
or
sub
pusha
cwtl
pop
cltd
dec
das
mov
je
adc
add
push
fsubrs
push
mov
sti
xlat
scas
pop
rdmsr
push
jle
dec
push
es
push
loop
pop
xor
add
fsubr
in
fiadds
mov
mov
and
inc
or
xchg
std
sub
loope
arpl
insb
inc
sahf
push
push
fsubs
pop
shlb
nopl
scas
mov
sbb
lcall
pop
or
pop
cmp
into
jbe
stos
enter
mov
sub
pop
push
inc
and
cwtl
push
sub
ss
leave
xor
jbe
lock
pop
ss
scas
sub
sti
sub
outsb
int
loop
pop
lcall
scas
fwait
and
inc
push
and
adc
cmp
iret
dec
pop
jnp
setle
or
sub
punpcklwd
repnz
mov
jb
rcrb
adc
xor
ss
cli
dec
dec
xchg
lahf
jno
adc
mov
dec
xchg
push
sahf
mov
push
push
andl
jmp
xlat
cli
stos
dec
jnp
push
sbbb
mov
push
aam
shrb
movd
in
xor
sbb
movsl
scas
fisubs
insb
xor
and
sbb
loopne
mov
nop
push
xchg
or
adc
xchg
or
push
xor
or
sbb
cwtl
rorl
inc
adc
sbb
sub
ret
pop
pushf
adc
mov
add
lock
gs
mov
pop
lahf
scas
pop
sub
imul
sub
mov
dec
xor
rol
fidivs
jno
ss
sti
mov
stos
or
push
and
adc
int
jp
pop
stos
add
sbb
sbb
cli
icebp
push
sub
movsl
adc
push
jbe
mov
fiaddl
mov
and
loop
push
jo
push
rcrb
cmc
adc
adc
dec
adc
adc
or
jle
inc
cltd
and
shll
mov
xor
cltd
jno
mov
pop
cmc
or
idivb
sub
sbb
fildll
mov
outsb
mulb
mov
add
cltd
fisubl
mov
sub
and
in
pop
cli
adc
fimull
push
mov
ficoms
mov
lock
or
push
jge
adc
mov
cs
sarb
movsb
pop
pusha
fimull
xchg
mov
push
mov
stos
fsubrs
jne
scas
sbb
mov
ljmp
imul
cmp
std
cs
stos
xor
icebp
push
mov
mov
lcall
mov
js
mov
mov
das
cli
push
and
data16
mov
cmp
rclb
pop
out
xor
or
push
and
xchg
jno
and
sub
fisubrs
or
clc
bound
sub
mov
rclb
push
pop
mov
pop
clc
push
outsb
sub
cmp
sub
sbb
scas
push
mov
push
push
stos
jp
push
shll
adc
cmp
dec
test
push
and
push
xchg
pop
or
push
xchg
sbb
xchg
mov
mov
lods
sbb
shrb
cmp
xlat
scas
movsl
dec
mov
cmp
xor
push
mov
cli
stc
shrb
pop
aaa
bound
xor
shlb
pop
inc
enter
sbb
ljmp
les
testb
jne
adc
fsub
mov
xchg
repnz
sub
fcomps
xchg
mov
stc
mov
add
and
fwait
mov
dec
sbb
popa
decb
cli
mov
adc
jle
jnp
sub
push
ss
hlt
and
aam
dec
push
push
mov
mov
fisubrs
inc
sar
fildll
push
or
repnz
lds
sahf
jmp
xchg
and
adc
and
cs
adc
push
and
push
shll
inc
xchg
pop
or
xchg
push
sbb
jns
push
push
mov
mov
jbe
inc
ds
sub
scas
hlt
mulb
adc
out
xor
in
xchg
push
jbe
adc
push
add
xchg
mov
sub
adc
dec
xor
and
popf
loope
adc
out
adc
es
mov
sub
jne
xchg
cmp
scas
loopne
rcr
xchg
int
scas
sbb
data16
ucomiss
scas
outsb
push
movsl
or
jle
add
pop
imul
ret
sub
lods
adc
stos
adc
xor
push
loop
mov
mov
jb
push
sub
into
jle
in
sbb
fimull
xlat
jle
adc
and
iret
mov
loop
and
cli
sub
xchg
or
cwtl
sub
test
mov
jnp
in
and
xchg
sahf
sub
and
xor
outsb
mov
ret
adc
test
lcall
mov
push
dec
and
int3
mov
iret
divl
loop
add
popf
dec
pushf
movsl
stc
sbb
xchg
xchg
shlb
mov
adc
out
adc
mov
ljmp
popf
jbe
shrb
sbb
outsb
aas
std
out
jns
sub
jle
pop
mov
sarl
data16
sub
shl
adc
addb
lret
lock
mov
pop
out
stc
mov
and
dec
insb
jnp
or
xchg
sbb
popf
jne
shlb
stos
pop
pop
xor
fiadds
fnsave
mov
push
into
loopne
xor
cmpsl
out
mov
adc
outsb
or
insb
inc
xor
sub
adc
sub
xor
cmp
bound
stos
addr16
add
stc
and
adc
push
fs
test
insl
jmp
inc
outsb
xchg
adc
xchg
std
lods
dec
test
sahf
jbe
scas
loop
call
push
sbb
imul
xor
inc
fucom
cmpsb
or
jle
bound
jno
shr
test
pop
lds
sbbb
adc
orb
push
mov
inc
mov
ret
rcrl
inc
scas
mov
push
fidivs
pop
insb
and
es
pop
adc
jle
push
scas
or
testb
fistl
push
push
adc
xor
data16
sub
pop
loop
or
mov
adc
lcall
adc
push
bound
mov
int
sbb
push
stos
mov
es
shrb
ljmp
mov
cmpsb
into
gs
repnz
cmp
pushf
sub
push
adc
aas
daa
inc
sahf
nop
test
fsubr
mov
loope
cmpsb
cmp
add
xor
inc
add
xchg
lea
jns
testb
jp
mov
in
and
shlb
jb
out
lock
bound
adc
push
push
mov
fimull
jl
dec
popa
cmp
pop
sbb
out
push
jle
clc
scas
dec
cs
paddw
mov
stos
mov
bound
outsl
shll
pop
fistl
cmp
push
es
jbe
inc
rclb
add
fstl
aam
movsl
mov
repnz
lds
jbe
pop
push
or
lahf
imul
cs
mov
adc
push
adc
and
test
mov
das
adc
sub
push
cmc
mov
dec
mov
orps
lea
cli
pop
jge
fimull
jle
push
jb
xor
lahf
imul
push
mov
into
clc
ljmp
bound
and
mov
rorb
push
jno
out
ljmp
mov
test
stc
scas
int
mov
ljmp
inc
xor
movsl
xchg
jb
aas
mov
push
adc
aas
sub
cmp
dec
mov
sub
jg
mov
cld
cs
push
int
sub
jb
neg
mov
push
dec
shlb
or
sub
xchg
pop
repz
jbe
dec
xor
mov
cmpsb
lods
or
loope
sarb
xor
jns
or
or
push
idivb
inc
test
data16
mov
aam
sub
push
add
inc
movsl
scas
test
insl
imul
lea
mov
dec
outsb
and
frstor
ljmp
push
add
fisubl
push
xchg
lcall
mov
jbe
ljmp
int
fiadds
push
repnz
xor
ss
xchg
das
sub
push
pusha
mov
dec
test
push
negb
xchg
cmp
movsl
fisubrs
or
dec
xor
jp
push
notb
ljmp
mov
fidivrl
adc
repnz
jo
push
testb
in
iret
out
mov
sub
in
xor
sub
bound
mov
shl
or
repz
imul
push
adc
adc
xchg
push
cli
popf
shr
ljmp
xor
loop
out
inc
sbb
mov
push
mov
rcrb
vmread
push
push
enter
adc
push
scas
test
adc
dec
sub
push
pop
or
add
cmp
sarb
mov
mov
xor
xchg
xchg
lcall
pop
mov
into
cmp
inc
or
xchg
pop
andb
sub
lds
push
push
xchg
mov
in
cmp
stos
sbb
dec
movsl
loop
cltd
rcrl
decb
and
inc
pop
sub
cmpsb
insb
cwtl
sub
nop
sbb
cld
cwtl
push
sbb
push
notl
lock
pop
jle
mov
push
stos
std
cmpsb
notb
push
data16
cmovne
sbb
rcrb
lcall
or
sarb
les
push
jns
add
out
outsl
addb
mov
aaa
mov
add
outsb
adc
cltd
push
orb
sbb
push
adc
mov
sub
sub
mov
push
enter
or
sbb
das
mov
push
outsb
fimuls
jp
adc
ljmp
popa
xchg
sub
imul
out
sahf
push
out
sbb
and
mov
test
or
jno
push
and
and
xor
xor
sub
adc
push
sarb
outsb
jp
dec
movsb
push
xacquire
push
out
outsl
insb
ja
add
adc
adc
rorb
xchg
xchg
inc
imul
jge
lea
mov
sub
sahf
loop
lret
cltd
pop
mov
rcrb
shlb
push
add
fcmovb
test
cmp
movsb
sbb
into
adc
mov
cmp
and
adc
repnz
jmp
je
push
inc
mul
repnz
or
xor
push
xor
xor
add
imul
inc
inc
movsl
sbb
inc
scas
imul
adc
jp
xchg
add
fs
push
push
xor
cs
sbb
fistl
sar
inc
data16
xchg
and
scas
stos
mov
mov
out
pop
stc
pop
or
cli
cmp
ds
ror
adc
shl
adc
mov
mov
jle
push
mov
cmpsb
push
mov
mov
out
mov
xor
xchg
sub
cmpsb
pop
cltd
cli
insb
mov
int
cmpb
mov
mov
jb
or
stc
dec
push
mov
cmpsb
xlat
gs
mov
push
or
cmp
mov
lcall
inc
xor
mov
inc
adc
adc
cltd
push
jp
sub
gs
adc
call
dec
mov
out
mov
stos
add
pop
or
loope
icebp
es
jb
stos
xchg
push
imul
sbbb
ljmp
push
rcrb
cmpsb
push
jg
scas
adc
push
and
imul
lret
sub
movsl
cltd
adc
jmp
sbb
pop
push
xchg
gs
push
sbb
push
stc
out
jle
or
adc
or
adc
xchg
out
hlt
inc
ljmp
mov
hlt
bound
and
pop
xor
outsl
mov
push
add
jge
inc
cmp
cli
sub
ljmp
push
cmp
adc
clc
popf
cltd
sub
ret
call
and
jp
mov
bound
xor
in
cmp
ret
ss
push
lea
and
scas
not
xchg
into
mov
cld
fmul
push
sbb
sbb
aas
xor
jb
push
in
push
dec
fmuls
outsb
add
in
cmp
stos
and
scas
adc
push
mov
add
xor
std
in
pusha
xchg
or
mov
jb
xchg
push
push
push
and
aas
cmp
and
mov
or
stos
pop
repz
or
repnz
cmp
jne
sbb
in
in
or
neg
or
sbb
xlat
test
arpl
push
push
and
jle
push
int3
xchg
insl
int
ss
mov
scas
in
pop
in
xor
xchg
iret
scas
setae
push
mov
push
xor
jno
ja
xor
notb
push
push
stc
adc
cli
imul
or
cmpsb
and
repnz
andb
or
outsl
mov
mov
jmp
dec
test
mov
ficoml
sahf
cli
and
ss
stos
aam
sbb
mov
decb
xor
cmc
shll
cwtl
neg
adc
sbbl
xchg
fwait
mov
adc
mov
mov
pushf
pop
movsb
repnz
inc
adc
popa
and
jmp
fisubrs
sub
pop
shll
add
lock
xor
dec
repz
lea
mov
aad
stc
xchg
iret
xchg
push
or
mov
adc
push
pop
push
xchg
pop
adc
mov
jp
aam
or
sbb
push
adc
push
rcl
or
in
jp
push
push
mov
sbb
mov
sub
push
addb
ficomps
push
iret
mov
push
mov
or
xchg
sbb
mov
cmpsl
roll
nop
mov
xchg
in
out
scas
and
jmp
ret
push
dec
jl
xchg
popa
jo
cld
arpl
insb
push
xchg
jle
xor
and
paddw
jmp
outsb
outsb
push
jbe
aad
push
adc
sbb
pop
cmp
sbb
mov
xor
mov
and
call
and
fidivrs
call
sub
lahf
or
jno
iret
sub
jp
xor
pushf
addr16
imul
clc
bound
mov
scas
and
daa
or
push
jb
mov
notb
pop
jp
fidivl
push
push
jno
test
popa
stc
ss
in
adc
push
scas
push
xlat
lock
fwait
cli
mov
ljmp
pop
push
jle
cli
mov
sbb
fstl
inc
sahf
mov
or
into
xchg
xor
shll
insb
or
bound
xchg
mov
stos
shlb
mov
cmp
popa
adc
cmp
xchg
or
dec
lret
xchg
xor
and
int3
dec
imul
lcall
out
addr16
dec
push
stos
add
fidivl
mov
push
pop
out
mov
push
cs
sar
push
inc
in
lcall
push
fs
mov
imul
jno
jns
adc
in
push
test
aad
shlb
notb
ljmp
sbb
into
xor
jne
xchg
mov
cmpsb
pop
outsb
pop
dec
mov
data16
xchg
xor
aam
imul
popf
sub
push
pop
inc
mov
push
ljmpw
pop
sbb
es
lock
push
es
outsb
outsb
insl
std
jp
dec
out
sub
sbb
shrl
xchg
pop
mov
test
pop
bound
mov
fst
es
pop
out
ficompl
loope
mov
jp
pop
push
push
ljmp
fisubrl
push
stc
xor
xchg
out
inc
es
add
cmpsb
outsl
mov
in
jge
jbe
loop
pcmpgtb
arpl
or
cs
jle
insl
test
push
xchg
inc
dec
divl
and
test
xchg
push
popl
pxor
cli
inc
out
or
push
ljmp
mov
fiaddl
xor
aam
xchg
dec
sub
or
or
shlb
add
xchg
lds
push
mov
push
out
cli
or
int
xor
pop
orb
jle
sub
insl
add
or
adc
push
dec
std
pop
outsb
push
xchg
fcmovbe
clc
jno
stc
jns
jns
push
cli
jb,pn
xchg
ss
push
ljmp
xchg
push
call
ficompl
fdivp
rolb
push
push
sar
int3
pop
xor
adc
cmp
sub
lea
pop
xor
dec
inc
mov
or
pop
jns
xor
int3
push
mov
into
sub
ss
imul
and
xchg
arpl
sub
push
lock
or
push
in
add
ds
xorb
push
dec
sbb
ret
jno
gs
scas
sysret
sub
jb
adc
jle
call
sbb
push
or
mov
xchg
or
cmp
sarl
push
outsb
pop
scas
adc
jae
add
cmpsb
ret
fs
ljmp
lods
pop
inc
fiaddl
xor
jns
repnz
push
push
sub
outsl
ljmp
sbb
stc
jle
cmpsb
pop
int
add
cltd
insl
or
push
lahf
in
jns,pt
push
push
push
mov
outsb
imul
xor
loop
push
notb
push
scas
call
jbe
pop
sbb
or
push
iret
xor
or
sbb
cmpsb
push
mov
xchg
add
dec
cmpsl
iret
adc
and
lahf
xor
and
je
es
push
loop
fidivrs
adc
adc
into
stc
jb
ss
sbb
imulb
sub
sahf
or
sub
push
inc
arpl
or
mov
adc
jno
sbb
mov
sub
push
jnp
dec
ja
sub
mov
popa
pop
repnz
xchg
push
negb
outsl
sbb
adc
adc
ja
cs
mov
jbe
xchg
sbb
rorb
xor
adc
or
ljmp
test
cltd
add
popa
jns
adc
data16
lcall
adc
fisubrs
sahf
pxor
pop
xlat
dec
addr16
stc
or
insl
rcrb
mov
jle
jmp
ret
jae
adc
mov
cld
out
cmp
mov
les
lock
xchg
xchg
hlt
xor
cmc
adc
rcr
dec
push
or
scas
fnstcw
adc
aad
daa
xchg
mov
fidivrl
clc
fimuls
outsl
adc
or
xor
test
pop
data16
sub
xor
je
das
lret
in
and
xchg
out
push
cld
roll
negb
xchg
sub
mov
scas
shrl
mov
push
mov
xor
arpl
loop
in
imul
cli
dec
lcall
fimull
and
subb
adcl
mov
xlat
xchg
add
popf
call
mov
sub
pusha
sbb
inc
lret
add
mov
mov
in
sbb
fsubrs
push
adc
pop
loop
scas
and
xchg
xorb
pusha
shrb
lret
push
std
rclb
or
mov
insl
pop
repz
out
repnz
mov
popa
xchg
pop
fistpl
leave
push
sub
mov
iret
negb
shll
lock
test
jle
cs
pop
lret
jae
loop
mov
inc
movsl
and
clts
ljmp
stos
xor
rcr
mov
stc
cmpsl
cmpsb
sbb
mov
scas
sbb
jle
sbb
push
mov
mov
push
and
push
adcb
sbb
sahf
adc
xchg
and
gs
push
cwtl
sub
jp
fisttpll
push
test
decb
popf
and
adc
data16
imul
push
insl
or
fnsave
mov
daa
push
aaa
jb
rcl
sbb
cmp
sbb
cwtl
and
lea
mov
rcl
jp
rcrb
cmp
sahf
push
in
popa
mov
pop
call
push
cli
push
xchg
es
cmp
push
push
lock
mov
inc
mov
sub
adc
into
divb
rorl
in
sbbb
push
out
aas
std
adc
pop
sti
push
sbb
and
jae
mov
jno
pop
test
pop
xchg
aaa
pop
sbb
cltd
ljmp
mov
cmc
pop
in
cwtl
add
into
xchg
sar
and
and
stos
lds
sbb
jbe
pop
jb
inc
mov
adc
cmpsb
packssdw
cmp
jle
mov
push
rorb
mov
es
jne
pop
mov
mov
pusha
sti
jns
xchg
mov
fiadds
jbe
stos
adc
movsl
pop
lcall
cli
std
cmpb
ja
mulb
sub
or
out
leave
test
mov
sub
xchg
xor
arpl
sbb
jb
sub
dec
cmp
sub
push
addb
mov
mov
sub
sub
push
in
scas
xor
push
sti
mov
or
push
jo
stos
mov
sub
bound
sub
andb
push
in
outsb
push
wbinvd
adc
xchg
jp
pop
lcall
adc
push
clc
out
scas
stos
pop
jge
imul
mov
add
ror
adc
mov
outsb
pop
pop
xchg
push
and
das
jbe
loop
ss
and
add
sbb
pop
insb
das
stos
mov
push
jle
into
adc
push
ss
popa
es
cltd
stos
dec
jno
adc
incl
rcrb
ss
mov
add
push
mov
lcall
sub
xchg
push
insb
dec
mov
call
and
mov
scas
clc
cltd
add
or
cmpsb
lock
and
popf
sbb
cli
mov
mov
es
mov
jle
xor
int3
mov
mov
sub
stc
insl
jne
bsr
ret
mov
in
out
inc
pop
pop
xchg
push
bound
repnz
into
aam
xchg
popa
imul
xchg
call
scas
jle
and
loop
mov
adc
in
or
jnp
enter
test
test
icebp
popf
inc
addr16
mov
push
push
add
ss
sahf
and
repnz
outsb
and
mov
sbb
clc
pop
cld
or
movsl
push
mov
mov
imul
xlat
jbe
push
shl
das
aas
mov
adc
int
adc
test
into
or
hlt
push
iret
jp
into
add
mov
pop
mov
push
cli
mov
loope
inc
push
add
or
data16
sahf
xor
sahf
adc
mov
or
mov
test
mov
inc
and
mov
jbe
lcall
jl
mov
cs
loop
jns
cmpsb
push
push
sbb
fdivl
adc
movsl
dec
aam
scas
push
scas
orl
popa
or
int3
push
adc
add
das
dec
leave
or
inc
aaa
push
pusha
jbe
and
scas
bound
das
dec
es
test
add
jo
popa
jge
out
adc
ljmp
sti
push
dec
adc
sbb
pop
xchg
and
gs
push
gs
bndcl
add
rol
iret
xlat
outsb
hlt
stc
rol
sahf
inc
mov
pushf
scas
das
jbe
ja
sub
ljmp
and
cld
movsl
mov
pop
xchg
push
lcall
and
outsb
push
cmpsl
push
sub
push
rcl
lcall
add
adc
in
int
sub
iret
stc
adc
mov
in
mov
xor
xchg
cli
outsb
xor
and
jno
jbe
jle
addr16
jne
push
iret
xor
pop
cmpsb
gs
fisubrs
cs
push
jno
or
or
fidivrl
sub
pop
jb
push
frstor
push
push
scas
adc
or
pop
jne
dec
push
divb
dec
stos
sahf
negl
enter
out
pop
in
scas
or
mov
frstor
mulb
xchg
popa
loopne
cmp
das
xor
jae
push
bound
push
mov
pop
lcall
out
and
repnz
mov
add
sbb
cs
outsb
and
or
inc
or
leave
out
andb
sbbb
sbb
vpshld
jbe
adc
push
out
fwait
lcall
movsl
out
sub
aad
std
sbb
out
loope
test
scas
or
sysenter
lods
push
or
push
pop
test
xor
inc
sbb
mov
push
lods
lcall
cmp
std
out
inc
push
sbbb
lock
push
outsb
dec
xchg
lcall
out
push
std
sbb
aaa
add
popa
mov
das
iret
jb
scas
and
pop
es
hlt
fiadds
movsl
pop
insl
adc
dec
lds
ss
pop
in
jecxz
or
xor
mov
mov
add
lods
sub
adc
xor
ljmp
mov
adc
mov
pop
ficomps
or
rcrb
push
int
push
xchg
rolb
stc
into
std
ljmp
push
xchg
jbe
mov
mov
bound
shlb
pop
push
jle
hlt
aas
inc
or
lcall
sbb
ds
sahf
xchg
sub
xchg
cwtl
push
push
out
shrb
sub
xor
push
and
sub
xor
xor
call
sub
roll
or
es
decb
loop
mov
ljmp
push
cmp
inc
adc
dec
jnp
ss
aam
adc
mov
ljmp
loopne
loop
xchg
dec
cli
jp
push
inc
test
mov
enter
mov
cmp
xor
cld
rolb
mov
pusha
mov
xchg
push
cmp
ficompl
cli
xchg
int3
cmp
es
leave
mov
das
sbb
adc
scas
adc
mov
push
cmp
xor
xlat
inc
into
mov
mov
and
in
cltd
push
sti
leave
and
movl
pushf
mov
movsl
ja
aas
mov
pop
adc
mov
das
stc
sub
add
and
stc
xor
fidivl
mov
jb
mov
inc
add
out
xchg
fistpll
out
jnp
jno
gs
ljmp
es
popl
pop
dec
adc
pop
push
jb
pop
inc
decb
fmuls
insb
xchg
ss
sahf
out
outsb
pop
outsb
inc
dec
incb
xchg
push
stos
loop
pop
jae
aas
and
cwtl
pop
jle
shll
ljmp
and
add
sarl
and
stc
rcrl
mov
imul
adc
pop
dec
imul
stos
xor
mov
and
jae
popa
inc
lcall
mov
sub
bnd
testb
sbb
or
fsubrs
adc
scas
negb
sbb
repnz
ror
outsb
mov
fisubrl
sbb
inc
pop
cwtl
fcomps
dec
repnz
push
inc
cmp
cmp
gs
test
jle
ss
loopne
dec
push
adc
int
push
lret
inc
decb
pop
add
es
mov
lahf
mov
xor
stc
sbb
jno
scas
ljmp
sqrtps
cmpsb
xor
jp
rolb
cmp
pop
or
fwait
movsb
lcall
push
cltd
xchg
lds
cli
ss
or
adc
add
push
fsubp
test
jno
cli
xchg
imul
xor
test
inc
mov
and
push
outsb
push
ljmp
imul
sbb
cwtl
test
leave
mov
ss
shl
movsb
push
add
jb
jnp
mov
stos
xchg
adc
sbb
outsb
in
cli
jb
push
mov
dec
jns
dec
movsl
jbe
dec
dec
sub
push
and
xchg
lahf
mov
and
add
cmpsb
mov
jmp
sub
push
mov
add
adc
xchg
add
lcall
xchg
inc
loopne
or
loop
jb
scas
sub
xlat
or
out
xor
pop
test
repnz
jp
fidivs
or
stos
std
sub
dec
mov
push
xor
mov
xlat
sti
dec
pop
sbb
jae
cmpsb
add
cmpsl
into
rcrl
jle
sbb
popa
push
bound
push
adc
sbb
fdivs
sub
bound
push
sbb
sub
movsl
mov
push
scas
call
jb
fisubrs
repnz
pop
lahf
cmp
rsqrtps
bound
and
popa
fistps
jbe
adc
jle
inc
mov
mov
add
cs
std
rcl
shlb
test
adc
cli
cmp
stos
and
jg
xchg
xor
es
jne
cmovb
lods
mov
fbld
ss
xor
sarl
dec
pop
or
mov
jbe
lcall
pop
mov
push
inc
sub
stos
sbb
lcall
pop
fcoml
jo
or
jle
pop
in
fimull
jbe
lret
insb
test
ficomps
push
ret
sbb
aaa
jne
pop
int3
jae
push
pop
sbb
dec
mov
xchg
pop
leave
push
rolb
call
inc
rorl
push
sbb
sarl
adc
stos
hlt
scas
fsubp
ficoml
adc
jge
sub
scas
pop
and
and
push
mov
pop
sub
or
mov
pop
jmp
pop
jno
inc
mov
cs
dec
loop
fwait
imul
mov
push
xchg
sub
mov
push
aad
test
shlb
xchg
scas
mov
sub
daa
jle
inc
pop
jp
pop
xor
dec
adc
push
nop
mov
push
xchg
cli
loope
sbb
scas
or
mov
sub
mov
xchg
sahf
inc
or
pop
xor
push
jo
imul
subb
mov
and
pop
es
shll
dec
es
sbb
sub
xchg
dec
shlb
jp
mov
jo
xor
scas
mov
jle
dec
test
push
inc
inc
outsb
inc
test
pop
pushfw
jno
adc
imul
mov
pop
lock
fidivl
insb
dec
lcall
mov
xor
push
testb
mov
sbb
or
cmp
ficompl
sub
bound
mov
scas
add
ljmp
loop
mov
inc
movsb
cs
aas
mov
stos
test
cmc
stc
add
outsb
and
sbb
popa
ljmp
and
or
pop
or
arpl
leave
xor
mov
mov
dec
and
ror
pop
and
push
das
or
push
and
shlb
and
add
scas
push
pop
cmc
pop
push
rolb
insl
dec
adc
bound
pop
incb
data16
icebp
imul
push
sub
and
push
or
stc
cmpsb
lea
xor
mov
sub
and
rolb
xor
movsb
or
inc
or
push
mov
sahf
xor
mov
jns
aam
rol
cmp
cmp
in
test
fadd
push
mov
lds
push
jo
sbb
fiaddl
lods
or
arpl
call
mov
push
ss
gs
aad
into
aaa
xor
ja
test
or
jbe
es
adc
insb
jno
mov
adc
or
push
adc
mov
jmp
push
dec
and
cmc
adc
shll
pmullw
jp
pop
rclb
mov
xchg
stc
imul
jp
push
sbbb
repnz
out
push
es
testb
sbbb
sub
mov
push
xlat
scas
int
and
int
test
adc
jp
add
mov
shr
sbb
push
ljmp
xor
stos
push
into
fnsave
out
push
call
fiaddl
push
mov
mov
test
sbb
movsb
pop
mov
mov
insb
addr16
sub
bound
and
sbb
ss
in
or
pop
or
mov
test
mov
test
push
jle
mov
out
xchg
ss
sbb
arpl
or
sbb
dec
ja
mov
jbe
cltd
shrl
repnz
or
jp
pop
fs
sub
sbb
fiaddl
std
lock
outsb
ss
pop
rcrb
jbe
pusha
mov
cmp
xor
mov
js
scas
icebp
cmp
hlt
xchg
mov
stc
movups
and
xchg
or
mov
cmp
lret
adc
stos
push
mov
push
lock
add
and
pop
jns
jbe
xchg
imul
das
mov
aas
data16
xchg
lcall
jle
xor
sbb
rcrb
add
aam
ror
into
xchg
jb
add
mov
adc
ret
pop
inc
sbb
dec
repz
and
rcr
pop
je
mov
dec
xchg
jbe
nop
xchg
aam
adc
push
cwtl
push
or
rclb
sub
pop
dec
imul
adc
out
fldl
sbb
arpl
cld
push
jmp
sbb
and
jbe
xchg
iret
std
mov
and
sbb
scas
or
push
lds
jns
sbb
jns
pop
lock
pop
adc
fsubrs
into
adc
and
inc
ljmp
push
stc
mov
xchg
sahf
mov
gs
ret
jns
out
bound
pop
mov
test
lcall
push
adc
fidivrl
data16
loop
xor
sub
lods
subb
push
adc
int
cmpsb
jbe
adc
sub
fldl
mov
or
xor
push
sbb
imul
ficoml
mov
jle
or
xchg
incb
imul
fnstenv
and
sahf
and
int
adc
scas
mov
sub
cs
lcall
inc
pop
mov
mov
push
xor
jp
push
cmpsb
pop
fsubrl
xlat
mov
push
icebp
scas
iret
rol
movsb
xchg
adc
iret
lret
sbb
mov
rorl
sbb
popf
pusha
and
dec
sub
cmpb
stc
cli
sub
std
and
xchg
shrb
rolb
jmp
std
mov
push
xor
xchg
add
or
repnz
call
aam
iret
mov
mov
loope
or
in
adc
cmp
or
pop
mov
xor
nop
out
out
fldl
test
dec
jge
push
xor
or
cmp
decl
es
mov
push
jb
cmp
push
xor
in
cld
add
sbb
xchg
cmp
sub
push
jp
stos
push
es
push
and
mov
loopne
jmp
xor
dec
xchg
lods
push
out
pusha
mov
int
in
imul
addb
push
es
xchg
mov
mull
push
jle
cs
xchg
sbb
push
push
in
adc
iret
ds
divb
inc
push
jge
stos
cmpsl
fidivrs
std
popa
cli
mov
jbe
or
adc
imul
xor
mov
out
cmp
scas
mov
dec
jle
sahf
jbe
mov
push
test
out
in
mov
insb
xchg
mov
pop
sub
dec
cwtl
testb
loop
xchg
movsbl
shr
pop
xchg
testl
aad
ljmp
jbe
test
popa
xlat
xchg
push
pop
or
lock
out
stos
pmuludq
sbb
out
push
mov
and
imulb
mov
or
pushf
jns
jle
jl
ficompl
sbb
push
add
adc
pop
xor
adc
popf
sbb
fs
popf
lcall
xlat
mov
xchg
pop
cmc
bsr
test
pop
sbb
test
inc
cmp
lods
sub
fcmovu
mov
mov
stc
adc
arpl
incb
or
sub
insl
out
adc
and
pop
ficomps
xor
xchg
push
and
mov
mov
mov
or
iret
sarb
test
sub
jecxz
lock
sub
testl
subb
bound
lods
sbb
adc
out
mov
bound
pop
xor
repnz
gs
sbb
xlat
aam
adc
sub
sub
xchg
or
std
bound
xor
cmpsb
xchg
add
int
jbe
data16
stc
outsb
stos
push
fadd
pop
or
cwtl
aad
push
adc
popf
jns
and
idivb
shrb
lahf
imull
push
cli
adc
dec
std
mov
testb
rorb
std
and
imul
dec
out
out
push
push
mov
insb
hlt
je
ds
aam
sub
adc
cli
cld
inc
insb
dec
enter
inc
push
mov
popf
repnz
imul
jl
or
xor
push
test
and
imul
leave
cli
out
mov
ss
sbb
das
lds
mov
outsl
lds
stos
push
imul
in
ror
mov
in
test
or
pop
jno
mov
mov
stos
pop
jge
push
sub
popa
and
xchg
rclb
fstl
loopne
cwtl
push
push
ret
and
pop
into
mov
and
mov
jae
in
push
pop
push
sub
add
arpl
cmp
pop
fisubrl
jno
push
int3
and
pop
xchg
rcl
or
or
pop
mov
fimuls
in
sbb
push
insb
lahf
xchg
adc
scas
add
jecxz
aaa
stos
mov
sahf
cli
mov
test
dec
jne
mov
xor
pop
call
out
stc
jns
imul
fcmovbe
jle
mov
lcall
cwtl
into
dec
leave
es
fcomps
xchg
or
movsl
int
xchg
sub
or
sbb
and
and
or
fsubs
and
inc
iret
mov
les
xor
or
lcall
sahf
sub
sub
in
xchg
xchg
cmp
loop
push
mov
movsb
mov
pop
cmpsb
adc
dec
imul
enter
or
dec
push
cli
add
arpl
ljmp
jbe
push
fldt
push
rorl
aas
scas
cli
jge
mov
pop
xchg
data16
jbe
push
jp
and
add
push
icebp
push
adc
aam
push
movsb
push
out
dec
push
jmp
mov
pop
das
ljmp
adc
inc
out
or
mov
outsb
pop
dec
sbb
les
pop
test
dec
push
clc
xor
pushw
in
jle
xor
sub
outsb
sbb
and
sub
data16
xor
and
push
dec
or
pusha
data16
mov
pushl
nop
repnz
stos
pop
mov
popa
pop
mov
sub
das
mov
imul
fisubs
sub
ljmp
sahf
xchg
out
and
test
or
or
ret
pop
loope
lcall
jbe
pavgb
push
push
inc
mov
push
movsb
pop
and
jae
imul
xor
xchg
dec
xchg
jecxz
jne
divb
jae
mov
adc
data16
mov
mov
jp
push
lods
xor
faddl
scas
push
cmp
shlb
testb
xchg
aad
sub
arpl
push
ficompl
repnz
pop
mov
pop
xor
xchg
ja
aam
adc
inc
inc
loope
xchg
mov
fisttps
outsl
data16
add
sbb
outsb
loop
movsl
outsb
cmpsb
imul
push
cltd
push
lcall
movsl
addb
movsl
mov
lds
jmp
repz
mov
jae
mov
cltd
xrelease
mov
movsb
pop
and
or
les
insb
adc
jle
xchg
aam
xor
es
xlat
mov
notb
out
jle
fwait
pop
sub
lds
inc
outsb
mov
leave
adc
add
popa
sub
bound
lcall
jnp
jo
divl
pop
int3
neg
inc
jmp
inc
push
lcall
int
mov
cs
cmp
add
sub
push
rclb
or
push
mov
mov
or
cmp
inc
xorl
bound
bnd
rol
pop
out
xor
xlat
cmpsl
push
xchg
outsb
imulb
push
xchg
and
xchg
inc
jae
push
imul
dec
pop
nop
adcb
cmp
sbb
mov
sbb
incb
or
rcrb
decb
jmp
clc
movsb
aad
imul
cli
sub
shlb
xchg
out
pop
xchg
mov
pop
sub
pusha
dec
lds
movsl
enter
std
stos
bound
ss
sub
adc
jl
outsb
das
ds
fwait
push
dec
setge
and
dec
inc
shl
jle
mov
repnz
std
data16
sub
outsb
push
push
sub
loop,pn
ret
in
addr16
pop
jb
nop
xor
sub
dec
pop
push
sahf
insb
inc
out
pop
xchg
push
leave
pop
fsubrp
add
in
lds
push
jle
lock
xor
jb
sahf
xchg
xchg
ficompl
rclb
scas
and
cs
jns
or
add
mov
mov
and
mov
cli
pusha
xor
jb
rcrb
push
and
sahf
test
test
mov
mov
outsb
iret
sti
std
cmpsb
push
xchg
scas
movsl
cmpsb
imul
dec
repnz
adc
add
lret
mov
mov
inc
mov
push
je
bound
mull
nop
lcall
sbb
and
adc
scas
xchg
jb
or
or
cmp
xor
scas
fstl
mov
mov
push
cs
bnd
popa
ds
lock
mov
jge
or
push
rclb
mov
sub
pop
adc
sub
jle
or
jle
mov
test
adc
and
pop
fisttpll
inc
mov
add
inc
push
int
mov
bound
dec
sub
mov
dec
push
xchg
add
sbb
out
jbe
push
mov
jge
pop
or
cmp
out
sub
jle
rorb
mov
jp
mov
int
jp
inc
xchg
xchg
jb
adc
push
cltd
and
out
test
lcall
inc
outsb
inc
mov
push
ds
je
push
mov
adc
dec
xchg
adc
or
repz
mov
outsb
ficoml
sbb
xchg
adc
dec
cli
in
cwtl
xor
sbb
fs
data16
sbb
pushf
jns
jp
js
insb
rclb
mov
jo
sarb
cs
adc
add
insb
inc
inc
testb
ret
js
dec
aam
xchg
jp
adc
lods
movsl
outsb
jns
push
or
xchg
jae
pop
xchg
xchg
jp
sbbl
pop
dec
xor
adc
push
dec
sbb
or
push
pop
popf
ficomps
adc
xchg
cs
popa
adc
push
pop
mov
xor
xor
stos
push
jmp
push
popf
mov
popf
fisubs
or
out
mov
cmc
inc
outsb
leave
push
movzwl
jecxz
push
stc
dec
es
fdivrp
outsb
fildl
cltd
loope
inc
cltd
dec
out
inc
xchg
mov
dec
dec
inc
cmp
jmp
push
sub
scas
movsl
pop
jns
push
mov
repnz
std
ss
xchg
mov
push
or
cmpsb
and
inc
ret
stc
pop
inc
dec
test
lcall
arpl
loop
jg
sahf
repnz
adc
pop
push
cmpsl
mov
push
fwait
outsb
and
es
xchg
adc
sbb
inc
mov
cmp
scas
mov
scas
test
push
scas
inc
in
lods
jge
add
xor
jno
sbb
mov
push
pop
bound
pop
or
pop
pop
pop
adc
adc
xchg
adc
xchg
push
loope,pn
loop
inc
mov
mov
sub
and
notb
push
jbe
movsb
mov
jno
jno
arpl
adc
xlat
mov
sub
in
rcrl
dec
jns
mov
xchg
outsb
bound
sub
push
adc
dec
shl
cli
cs
push
adc
push
popa
out
push
push
inc
pop
sub
or
mov
outsb
or
repnz
test
push
pcmpgtd
mov
inc
adc
out
mov
or
sbb
pop
repz
out
dec
imul
or
arpl
pop
push
loop
sub
mov
mov
xchg
add
in
or
mov
xchg
rcr
mov
outsb
xor
inc
in
movsb
dec
or
adc
test
sub
pop
fidivs
mov
jns
sahf
inc
push
dec
outsb
push
adc
jbe
stc
add
mov
mov
or
int
es
mov
fnsave
repnz
inc
fucomip
incl
dec
mov
inc
xchg
rorb
mov
xchg
scas
mov
pop
adc
xchg
push
push
outsb
mov
xor
mov
push
pop
clc
xchg
jge
insl
push
pop
adcb
push
or
push
and
push
push
adc
push
jb
xchg
push
inc
push
mov
sbb
out
popf
cli
or
aam
xchg
into
stos
loop
sbb
adc
mov
test
cmp
xchg
sbb
outsl
cmp
push
mov
mov
jns
sub
cmpb
pop
sub
jno
sub
dec
pop
jne
push
xor
into
sbb
push
pop
jns
sbb
jbe
lods
jae
dec
lret
adc
pop
xchg
push
les
fs
out
sub
jle
xor
stos
push
std
repnz
fsubs
mov
in
rcrl
mov
ss
stos
sbb
and
push
pop
sbb
mov
cmp
fidivs
xor
cltd
lcall
xor
xchg
je
outsl
or
sbb
ljmp
and
jne
lar
icebp
or
sub
bound
push
and
in
or
add
pop
testb
cs
fstpl
pop
mov
fdivs
push
push
sbb
cli
enter
xchg
mov
push
and
test
adc
jno
nop
lock
xor
xchg
xchg
xchg
mov
xchg
ja
jecxz
lea
jg
xchg
adc
xchg
push
sahf
sbb
sbb
or
pop
lret
and
outsb
add
inc
cmpsb
ret
imul
leave
and
stc
orb
inc
cmp
adc
xor
call
test
add
jns
and
dec
push
mulb
push
sub
cli
loop
inc
or
inc
sbb
sub
xchg
xchg
and
inc
mov
xchg
inc
test
inc
stos
loop
fdivrs
mov
cwtl
sub
dec
hlt
cmpsb
out
sub
and
push
pushf
push
inc
shlb
imul
daa
popf
cs
adc
jnp
push
rcrl
push
fisttpll
jle
cmp
into
mov
inc
push
and
bound
sbb
testb
inc
scas
lcall
roll
pop
shrb
push
sub
bnd
sbb
and
mov
iret
loope
sahf
les
jnp
jne
cltd
in
fstpl
jl
xor
sub
test
mov
clc
repnz
sbb
loope
cmp
push
adc
push
or
xor
mov
std
fimull
mov
xchg
int3
cmpsb
fisubrs
out
lock
push
adc
cli
adc
outsl
xchg
cli
stos
add
sbb
and
and
push
scas
pop
data16
sbb
outsl
jle
mov
fs
and
jecxz
push
inc
stc
adc
jge
enter
mov
jle
lds
and
cmp
imul
mov
pop
xchg
mov
jg
xorb
out
ficoms
ret
pop
pop
sbb
xchg
sahf
fs
mull
push
shlb
movb
pop
mov
sub
out
dec
stos
or
sbb
cs
in
stos
test
adc
data16
mov
xchg
push
or
mov
jecxz
subb
jp
cwtl
and
inc
out
ljmp
and
imul
cmpsb
addb
data16
dec
and
sbb
pusha
add
cmp
lret
and
out
nop
cwtl
lret
fmuls
push
aam
stos
mov
test
int
or
and
push
push
out
ljmp
xchg
mov
xchg
push
mov
and
jbe
ljmp
out
inc
inc
push
sub
inc
imul
push
lods
bound
jnp
xor
fcoms
xchg
outsl
dec
cmp
shlb
xchg
mov
adc
mov
push
mov
jp
cs
aam
pop
roll
cli
pop
inc
sub
push
mov
push
mov
mov
and
ss
icebp
push
adc
jle
mov
int3
add
stc
out
cli
imulb
or
cmpsb
jle
jnp
sti
inc
cltd
or
stc
maxps
das
fstpl
pop
arpl
or
mov
outsb
adc
cltd
push
sbb
inc
dec
enter
loope
push
push
int3
add
pop
jp
in
movhps
xchg
out
stos
imulb
sahf
mov
jne
test
adc
imul
jp
xchg
pusha
sub
mov
pop
pusha
cli
mov
xor
sysret
gs
xlat
lods
out
addb
pushw
nop
cmp
out
dec
sahf
fidivs
sub
outsb
add
push
xor
into
pop
push
imulb
sahf
ficoml
jb
mov
int3
test
testb
pop
sub
aam
push
fadds
xchg
lahf
popa
data16
push
sbb
neg
jecxz
xchg
jge
loop
testb
push
cmc
mov
jle
dec
xchg
movsl
ljmp
jae
sahf
sub
dec
mov
and
bound
out
mov
stc
xor
stos
imul
inc
es
lods
cmp
scas
or
out
adc
lds
sbb
sbb
or
jle
ds
adc
or
adc
mov
or
cli
add
sbbl
mov
xchg
inc
fdivrp
jo
fstpl
jne
jle
mov
out
inc
add
fdiv
dec
in
cs
ljmp
xor
mov
jle
nop
leave
mov
lcall
mov
adc
jp
outsl
mov
push
jp
roll
pop
mov
xchg
xchg
outsb
add
sbb
push
sahf
xchg
or
dec
xchg
decb
outsb
das
sub
iret
fidivrs
jp
or
das
sti
loop
xchg
or
push
xchg
push
dec
insb
mov
arpl
mov
gs
loop
inc
or
cli
push
stos
xchg
xor
mov
push
lods
xchg
sub
fidivrs
adc
push
mov
fnstsw
dec
outsb
push
fst
push
push
mov
and
mov
pop
or
mov
dec
cli
loopne
out
mov
mov
dec
or
ljmp
sahf
loop
mov
pop
les
push
xchg
out
out
bound
movsl
lcall
sbbb
dec
dec
pushf
scas
cmp
ret
inc
xchg
cltd
sti
adc
dec
nop
sub
clc
mov
bound
lcall
sub
shl
xor
or
mov
jge
mov
inc
jo
dec
push
mov
mov
addb
jns
bound
sub
cmpsb
inc
adc
jmp
dec
jne
xchg
in
sbbb
mov
es
sahf
jb
fisubl
aaa
push
arpl
scas
push
and
lret
repnz
xchg
push
mov
hlt
or
test
pop
mov
jb
pop
mov
xchg
jecxz
sub
leave
mov
cmp
jb
out
add
xor
inc
xor
movsl
xchg
fidivs
icebp
mov
push
addr16
jle
mov
jle
or
xor
xchg
xchg
push
out
push
mov
sub
fdivrs
and
push
mov
push
loop
dec
daa
sbb
ss
mov
test
notb
cs
rcrl
rorb
ss
mov
adc
mov
sub
cmp
jp
scas
std
mov
shrb
adc
divb
sub
push
jle
push
adc
lods
and
adc
mov
sahf
daa
mov
lret
sub
xor
cld
into
adc
pop
pop
mov
jno
and
lcall
cli
or
xchg
jle
mov
in
push
stos
jb
pop
jnp
dec
lret
and
mov
outsb
mov
and
xchg
pop
xchg
lds
cmp
into
sub
push
paddd
jne
cmc
push
cld
lock
insb
outsb
cmpsb
push
jno
jp
push
lcall
jno
dec
popa
sub
sarb
scas
out
dec
lcall
and
fldt
push
sbb
inc
sahf
rorl
or
shr
sbb
mov
dec
mov
push
shrb
getsec
pop
inc
inc
aas
add
ret
jnp
push
popa
xchg
adc
gs
scas
stos
add
pop
pusha
or
pop
jle
jno
outsb
out
je
push
xchg
xchg
fidivrl
dec
pop
jle
dec
arpl
add
cs
sbb
and
sbb
dec
cli
pop
vmovaps
js
xchg
xor
sbb
cld
in
mov
push
mov
es
ret
jns
loop
xchg
pop
sub
adc
adc
jle
dec
jle
outsb
fimull
adc
cmpsb
in
addb
mov
push
xor
xor
push
xchg
orl
ret
pop
xorb
xchg
inc
int
jle,pn
out
jp
loopne
xor
mov
je
ljmp
mov
call
or
mov
ljmp
ss
pop
sbb
lret
movsl
push
clc
jno
mov
daa
repnz
push
popa
xorb
mov
or
sub
test
add
into
and
jae
dec
jns
popa
push
jb
xor
outsb
sahf
into
dec
adc
int
push
leave
mov
ljmp
lcall
ret
ds
xor
push
push
jae
repnz
push
sub
into
loope
pop
das
inc
jle
xchg
mov
fisubrs
dec
popa
in
xor
push
mov
lret
or
ljmp
stos
xor
cli
orb
sbb
out
gs
sbb
pushf
out
xchg
push
jno
mov
ljmp
sbb
adc
inc
sub
jns
push
stos
or
mov
pop
inc
push
pushl
fadds
pop
xor
idiv
ljmp
push
in
pop
xor
adc
push
lcall
push
mov
inc
add
jmp
sub
adc
jbe
jle
xor
shrb
shl
int
repnz
int
sahf
shll
scas
scas
push
adc
outsb
sub
test
or
inc
shll
adc
or
adc
pop
sub
adc
bound
dec
push
xor
mov
add
mov
adc
xor
mov
push
cmp
inc
ret
outsb
cmp
push
fisubs
fs
test
inc
xchg
data16
sbb
pusha
gs
push
sbb
adc
jecxz
test
ljmp
or
fucom
rcrb
and
xchg
je
sbb
sub
andb
pop
xor
jle
push
or
movsl
adc
scas
and
adc
xor
mov
lcall
data16
sbb
and
jp
lcall
push
pop
pop
push
shlb
cltd
push
jno
pop
dec
repz
imul
fucomp
cmp
adc
mov
andb
repnz
in
jle
imul
adc
mov
addr16
fidivs
fists
sbb
add
rorb
xor
out
leave
fwait
test
push
mov
pop
fiaddl
adc
push
pop
push
sbb
mov
lcall
push
fstpl
jg
add
aam
or
aam
inc
push
inc
pop
xor
add
cs
xchg
out
mov
std
pop
dec
scas
test
sub
es
cmp
stos
test
jae
jno
jnp
mov
sub
inc
jle
xchg
pushf
add
not
push
das
sbb
push
add
pop
or
mov
std
sub
jle
mov
nop
in
sub
ds
add
push
adc
push
jg
xorb
jb
repnz
inc
push
es
xor
pusha
imul
js
dec
nop
loop
jb
scas
fst
adcb
popf
or
jno
jbe
lret
push
in
sbb
iret
fimuls
int
mov
xor
daa
sbb
or
out
jle
cli
and
das
push
leave
ficompl
shrb
push
mov
in
sub
inc
insb
lret
out
test
sub
push
xchg
push
test
ss
adc
xchg
std
xchg
imul
jp
out
jae
inc
ja
sub
movsl
jle
and
adc
test
push
decb
lcall
imul
ss
das
pop
in
lahf
and
or
wrmsr
scas
adc
jp
dec
or
push
xchg
sahf
push
or
adc
inc
ss
loop
aam
jbe
leave
cmpsb
push
add
adc
ss
fiaddl
add
popf
outsb
inc
outsb
outsb
push
fisttpll
in
shll
or
sub
push
or
push
push
les
push
push
data16
cmp
adc
cmpsl
pop
xchg
add
mov
bound
andb
mov
xchg
aaa
push
push
jb
cmc
sar
adc
pop
pminub
iret
jno
adc
imul
fimuls
cld
fs
add
and
or
push
lods
hlt
pop
fsubrl
mov
fidivrl
scas
or
insl
and
mov
inc
or
sysenter
pavgb
into
adc
mov
aam
dec
je
mov
or
fdivs
mov
cld
imul
std
push
test
or
scas
cld
rcll
pop
inc
arpl
notl
das
push
push
and
sbb
mov
dec
dec
xor
packuswb
cltd
insb
lfs
gs
stos
sbb
dec
outsl
xor
push
rorl
cmp
cmpsb
adc
cli
mov
adcb
data16
pop
xchg
sbb
pop
dec
mov
jbe
inc
outsb
mov
lcall
scas
inc
cwtl
es
add
push
jbe
jp
cmc
cvtps2pi
outsb
cs
jne
xchg
inc
fstl
fisubrs
push
mov
dec
jb
or
dec
mov
imul
imul
xor
and
lds
stos
or
ss
push
das
mov
scas
push
mov
sahf
dec
loopne
cltd
sub
scas
jle
xchg
and
pop
push
sbb
outsb
mov
mov
or
jg
or
and
and
adc
xchg
leave
mov
movaps
push
jle
test
mov
outsb
cs
lret
rorl
adc
mov
push
sbb
push
sahf
bound
jae
push
in
cli
push
push
jmp
and
es
cwtl
loope
inc
fdivrl
or
dec
jns
sub
rcrb
adc
xchg
cmpsb
push
pop
xchg
shrl
jbe
and
dec
int3
jnp
popa
push
bound
sub
mov
and
popf
bound
pop
adcb
and
pop
jp
stos
push
add
cmp
adc
mov
mov
repnz
pop
stc
cmp
cmp
cltd
mov
push
jno
mov
push
xor
mov
jns
push
jl
ss
cmc
cmpsb
es
xorb
push
stos
sbb
iret
xchg
pop
and
mov
out
sub
out
push
pop
sahf
mov
xchg
repz
into
fwait
push
jle
mov
and
out
sub
jbe
ficoml
cmp
vpshrdvw
pop
inc
pop
mov
fmuls
divb
sti
in
jg
mov
and
mov
or
fwait
push
lcall
push
sub
sahf
cmp
outsb
xor
mov
fadds
dec
xor
and
aas
cmc
scas
scas
or
pop
and
push
dec
sub
out
mov
or
add
xor
adc
sbb
jbe
outsb
repnz
imul
lods
cmp
pop
pop
rclb
es
xchg
or
and
or
jns
jbe
xchg
movsb
or
ret
or
scas
movsl
test
adc
fisubrs
sub
push
stc
ljmp
ss
out
adc
jno
sbb
imul
dec
xor
aam
cs
mov
lret
clc
ds
int3
cmpsl
mov
mov
push
loop
fiadds
fimull
push
cmp
jle
fidivrl
aam
popa
outsl
jge
cs
dec
stos
sub
mov
xchg
enter
xor
outsb
js
stc
push
cli
cli
add
scas
aas
std
orb
and
or
xor
cli
sub
push
out
movsl
test
sarl
adc
and
push
push
sub
jle
arpl
fldt
mov
xchg
sbb
or
repnz
stos
add
sbb
iret
xor
jbe
and
mov
dec
cld
adc
push
loope
dec
icebp
pop
sub
mov
leavew
mov
sub
les
xacquire
sub
dec
add
ret
dec
jl
jns
andb
lock
ss
ljmp
sbb
jno
push
ja
lock
sbbb
fmuls
fs
adc
sahf
mov
add
ss
and
jb
es
fidivs
adc
iret
push
fisubrs
xchg
adc
out
popaw
xor
pusha
aad
aaa
push
pop
fldt
das
cltd
std
mov
mov
jp
cmp
rcrb
iret
xchg
adc
test
std
ss
push
inc
mov
imul
test
add
cmp
jbe
add
repnz
ret
push
xchg
or
sar
into
outsb
push
outsb
and
adc
lcall
sbb
jle
jbe
cmp
jp
loop
negl
iret
push
push
mov
add
and
rolb
ret
ss
add
fdivrs
pop
cmp
sahf
jo
mov
neg
popf
repnz
jp
mov
xor
test
das
xchg
movsl
sbb
and
popa
mov
or
push
lahf
xor
push
pusha
mov
ret
sub
push
sub
lcall
or
xor
outsb
ss
les
int
push
add
aam
xor
nop
mov
stos
outsb
mov
mov
idiv
ss
xchg
or
inc
lcall
imul
cli
mov
mov
add
test
xchg
add
push
stos
pop
ss
push
mov
mov
imul
stc
cmpsb
adc
dec
stos
shlb
jnp
pop
test
sbb
scas
pop
movups
mov
pop
in
popa
inc
sub
lea
and
or
mov
dec
sbb
sbb
rcr
jp
push
inc
btc
mov
leave
and
sbbb
mov
jne
sbb
pop
mov
cld
push
push
xchg
in
sub
rorl
and
push
cmc
xor
push
imul
repz
jno
arpl
and
negb
repz
or
sarb
mov
fdivs
cmpsb
mov
or
jbe
xchg
adc
das
xlat
lss
mov
fimull
xor
xor
in
sahf
in
jle
mov
subb
dec
insl
jmp
int
fildl
sbb
xchg
lods
popf
stc
movsb
mov
sbb
or
vmread
rorl
inc
mov
ret
or
ds
scas
fwait
pop
push
push
cmpsb
ss
jno
ljmp
sub
stc
push
fdivl
out
clc
jnp
mov
xchg
scas
add
cmpsb
push
xchg
xor
ffreep
cmp
jl
cmpsl
mov
xor
stos
pop
pop
inc
arpl
and
imulb
dec
mov
cs
das
cmpb
mov
xchg
jns
sbbb
loop
cmp
cmp
ljmp
loop
shlb
inc
cli
nop
inc
mov
push
xlat
pop
mov
arpl
dec
mov
lcall
xor
xchg
out
or
ds
pop
bound
mov
dec
es
movb
xor
inc
push
jmp
or
mov
shlb
fstl
bound
popf
adc
or
mov
andps
mov
in
arpl
pop
pop
sub
push
pop
pusha
inc
xlat
xchg
fdivrp
orl
stos
mov
cmp
fdiv
popa
pop
pusha
cmp
sbb
dec
push
cli
xchg
push
sahf
into
inc
cmpsl
ficompl
adc
pop
push
push
rorb
into
leave
or
jmp
ss
add
lcall
push
in
xchg
out
mov
bound
int
ficoml
es
enter
iret
sbb
push
cli
push
sbb
or
inc
lret
gs
into
dec
push
push
das
dec
iret
enter
outsb
jle
test
xchg
cs
lock
jle
outsb
insb
fstp
xchg
test
cltd
sahf
lea
in
or
dec
cs
hlt
out
scas
add
cli
jbe
and
ljmp
bound
and
hlt
out
sub
mov
fisubs
jle
je
pop
adc
sahf
cmp
or
mov
out
xchg
and
pushl
test
mov
lock
and
push
fisubrl
clc
push
aas
xchg
adc
lods
mov
mov
push
mov
loopne
and
xchg
push
jns
push
out
nop
or
jbe
push
jp
pop
fsubrp
pop
mov
jge
in
pop
cmpsb
push
scas
and
scas
jle
inc
ret
mov
scas
sub
push
sahf
mov
loopne
out
jns
stos
sub
jle
insb
push
fcoml
push
movsl
jb
push
fistps
imul
sahf
pop
adc
mov
arpl
ds
andl
hlt
adc
movsl
data16
mov
bound
xor
xchg
and
jno
inc
push
push
sub
ja
cmp
push
sbb
or
stos
mov
fsubrp
or
adc
data16
jge
xchg
adc
jb
mov
adc
adc
push
dec
sub
sub
pminsw
jb
sub
mov
mov
sti
xchg
rolb
jb
stos
mov
pop
inc
jns
jle,pt
cmpsb
stos
add
and
dec
sub
dec
dec
test
out
std
jmp
jns
data16
cmp
inc
lock
cmp
jno
jg
lods
or
or
push
scas
xor
adc
insb
xor
mov
mov
pop
dec
jbe
and
jno
rcl
pop
dec
mov
and
and
adc
push
adc
push
int
mov
or
pop
push
lahf
push
out
sbb
cmc
inc
out
stos
sbb
cli
push
mov
sbbb
xchg
xor
jno
bound
push
mov
lods
push
pop
shrl
cwtl
push
push
push
push
scas
stc
mov
fcmove
std
xor
xor
pop
dec
jle
push
add
mov
bound
push
cmpl
jae
fisubs
aaa
pop
mov
xor
pop
or
pop
pop
sbb
cmp
loop
xchg
outsb
jns
pop
rorl
jb
adc
fstl
loop
in
adc
adc
fsubs
faddp
jge
xchg
xchg
jp
bound
push
mov
push
pop
notb
pop
aad
push
inc
out
or
popf
fisubrl
push
aas
ljmp
sub
or
and
sub
cltd
cs
xchg
xor
or
outsb
pop
jge
sahf
fcoml
inc
dec
inc
jle
or
pusha
cmpsb
rorb
and
mov
sub
pop
or
pop
rorb
cmp
xchg
fimull
pop
cmpsl
lret
stc
jnp
out
fsubrs
movd
mov
stc
bound
xchg
xor
or
sahf
mov
jp
and
push
shll
mov
loope
mov
fisubrs
fsubs
mov
inc
lret
push
xor
xchg
mov
adc
loopne
dec
mov
push
push
adcl
xor
sbb
pop
test
xor
roll
xchg
mov
cmp
pop
mov
adc
cmp
sbb
fcoml
loop
jne
mov
jae
mov
push
and
sbb
sbb
jae,pn
fiadds
or
push
pop
mov
push
jbe
push
scas
dec
mov
ss
jl
scas
in
pushf
int3
bound
mov
lret
lcall
inc
aas
mov
jp
sbb
pop
push
jle
inc
mov
xchg
fimull
dec
stc
jbe
scas
or
sbb
cmp
repnz
sahf
inc
lcall
jp
pop
popf
push
aam
sub
loop
push
push
push
les
or
push
hlt
adc
into
aas
sbb
inc
adc
push
push
jb
cmp
scas
jno
bound
mov
push
and
test
sarb
xchg
loope
out
adc
xor
jb
idiv
sub
and
mov
sub
imul
push
push
shlb
fidivrs
jae
scas
cltd
fisttpll
cs
adcb
data16
adc
mov
into
mov
sbb
sub
xchg
xchg
push
sub
es
cmp
test
sbb
int
mov
jb
and
sbb
mov
arpl
xor
mov
jbe
push
fiadds
ljmp
lcall
pop
mov
cmp
push
dec
orl
xchg
es
addb
push
iret
jecxz
das
lahf
inc
add
xor
cld
rol
loop
jge
nop
xchg
push
cmpsl
jns
rorb
and
push
or
and
and
push
push
aad
int3
test
jmp
sbb
mov
mov
sbb
inc
push
and
dec
xchg
dec
outsb
jp
sbb
lcall
adc
cltd
sub
addb
or
jp
pop
xchg
sbb
ljmp
mov
mov
push
jb
lcall
xlat
dec
icebp
cmp
add
rorb
das
mov
adc
sub
sbb
mov
pop
mov
push
std
pop
and
xorb
mov
fwait
add
loop
mov
cs
mov
hlt
sahf
jns
gs
xor
stc
mov
loopne
xor
dec
or
addr16
add
shl
shrb
xor
mov
sahf
negb
pop
mov
adc
or
scas
mov
ret
push
int
push
sbb
das
scas
add
push
push
cli
icebp
not
outsb
shrb
data16
scas
and
cmp
mov
push
add
sbb
in
mov
adc
hlt
lods
ret
lea
jns
mov
rolb
bound
lods
jo
and
incl
push
in
or
xorb
sahf
stos
mov
shlb
push
sub
cvtps2pd
cmpsl
or
or
xchg
sti
or
xchg
xor
lods
and
sahf
or
loop
clc
ret
out
mov
and
sub
repnz
out
or
inc
popa
mov
pop
pusha
fisubrl
into
pushf
and
mov
dec
fimuls
sub
aad
push
or
sarb
pop
sbbb
push
push
fisubs
push
cmpsb
push
mov
mov
push
adc
adc
fisubrl
or
scas
push
mov
lret
inc
aam
repnz
inc
cltd
jp
jno
cmpsb
jno
pop
ss
xor
mov
cltd
rorb
jp
enter
push
adc
mov
out
pop
cld
cmp
scas
lret
enter
loop
rcr
and
jecxz
pop
cs
pusha
out
push
leave
mov
es
in
fidivl
lcall
push
pop
bound
xchg
sub
push
mov
testb
xchg
adc
mov
cs
push
and
pop
xlat
xchg
mov
sbb
mov
jge,pn
mov
xchg
and
add
push
inc
outsb
jp
and
test
pop
sahf
jo
cmpsb
push
repz
jae
push
lcallw
in
and
pop
orb
ljmp
rolb
into
jp
mov
ja
xchg
jnp
push
call
sbb
das
xor
xchg
bound
push
push
push
lcall
sbb
xchg
dec
cmpsb
nop
or
and
ljmp
mov
fwait
clc
leave
ljmp
push
shrb
ds
lcall
mulb
arpl
bound
push
cs
sbbb
xchg
adc
repnz
repnz
mov
bound
or
sbb
ficomps
arpl
cmpsb
dec
jmp
dec
dec
bound
popf
add
and
xchg
push
jp
push
rorb
push
outsb
iret
js
xlat
lods
ret
push
dec
push
rcl
int3
sub
fstpt
dec
bound
cs
jae
pop
and
pop
popa
xor
or
or
repnz
hlt
mul
call
pop
adc
push
test
int3
pop
and
loopne
data16
mov
scas
das
cmp
iret
fadds
outsb
xor
push
push
out
adc
lret
shlb
xchg
das
xchg
out
outsb
dec
lds
jg
xorb
jns
ficompl
ja
xchg
in
icebp
cmp
test
rorb
sbb
inc
out
mov
sub
xor
mov
cmp
out
scas
xchg
mov
shlb
jl
pop
push
mov
ds
xor
loop
push
fisubrl
imul
adc
xchg
cmp
cs
push
lods
ret
fsubl
jb
pop
pop
aad
sub
xchg
inc
dec
pop
out
ljmp
mov
xor
call
push
bnd
scas
push
jle
mov
sahf
dec
hlt
ss
xorl
mov
adc
xor
scas
jb
ja
add
fs
or
or
shlb
ret
xor
out
mov
cmpsl
std
clc
xchg
or
push
adc
cs
sbb
outsl
or
cmp
je
int
sbb
in
stc
jmp
mov
out
mov
inc
lret
movsb
mov
cmpsb
adc
fsubrl
mov
or
stc
dec
xor
mulb
mov
mov
adc
into
scas
mov
sub
and
jb
mov
dec
mov
xchg
mov
or
mov
fidivl
mov
sub
pop
cli
sub
sti
enter
mov
adc
and
dec
sub
inc
shl
outsl
stos
jle
adc
loopne
fstpt
stos
arpl
adc
xchg
stos
lock
call
sub
push
cmp
cmp
dec
adc
rcrl
or
jns
subb
mov
lds
lret
mov
push
dec
das
or
sbb
push
adc
fisubrs
cli
shr
and
outsb
mov
sahf
add
je
lret
or
jbe
xchg
cmpsl
jno
scas
mov
push
jbe
push
adc
imul
inc
mov
adc
jb
push
jnp
jno
stos
push
mov
mov
inc
xchg
scas
jg
test
mov
stos
dec
and
lcall
stc
ja
lahf
and
add
mov
sbb
sub
es
cmp
jne
cmpsb
pusha
cmp
jmp
mov
sbb
cmp
hlt
lods
es
idiv
pop
or
xchg
jp
clc
dec
lret
sbb
add
push
pop
jp
xor
cs
into
out
pavgw
add
fsubrp
pop
push
mov
dec
sysret
sub
addb
fidivrs
pop
test
rcrl
in
pop
jp
and
data16
aam
add
or
push
jecxz
pop
unpckhps
xchg
inc
mov
mov
jae
push
pushf
ljmp
and
jg
test
fcoml
mov
xchg
outsb
dec
inc
loop
push
popa
mov
scas
push
outsb
or
into
cmp
mov
into
mov
loop
mov
cwtl
sarb
les
pop
pushaw
push
aad
pop
jle
sub
dec
or
dec
lods
mov
and
push
outsb
add
ljmp
xchg
out
stos
push
decb
and
orb
push
scas
cmpsb
adc
push
and
fnsave
outsb
and
mov
or
adc
or
jns
and
ljmp
dec
and
scas
xchg
negb
push
push
ja
jge
repz
jle
outsb
les
xor
push
imul
sbb
fisubrs
xchg
lds
and
rclb
sub
orb
push
jle
push
cli
push
or
xor
fimull
xchg
leave
mov
int
test
shrb
lock
adc
xchg
sub
and
in
jno
xor
bnd
pop
mov
push
std
call
shrb
aam
loopne
test
ja
and
cmpsl
test
xchg
bound
adc
push
cmp
data16
iret
divb
test
push
lcall
stos
sub
or
es
sbb
shlb
push
inc
mov
xor
push
pop
jle
ficoms
jbe
or
adc
sub
or
cmp
fnsave
jno
scas
movsb
jae
jns
int3
dec
jne
sbb
inc
pop
xor
inc
mov
cs
cli
jb
outsb
jle
add
std
xor
cs
rcr
jbe
adc
mov
popa
add
imul
cli
push
xchg
push
push
aaa
xor
es
sbb
ret
jo
and
repz
adc
ficoms
mov
push
sub
scas
pop
mov
adc
mov
xor
test
stos
lcall
sbb
push
push
and
pop
push
push
outsb
push
iret
ss
fidivrs
mov
test
jae
imul
pop
ret
jle
test
cwtl
popf
sarb
inc
stos
pop
out
adc
mov
pop
lcall
sub
or
test
xorb
pop
adc
pop
push
pop
dec
xlat
stos
insl
sub
fnstsw
adc
out
fcom
pop
testb
push
sub
cmp
jns,pt
scas
push
dec
jbe
jmp
repnz
je
cs
cmc
cmp
ljmp
lcallw
loopne
scas
pop
adc
xchg
mov
int
push
dec
cs
xor
add
jle
in
pop
ss
mov
xor
mov
and
mov
and
fistl
sbbb
sbb
test
sub
lcall
inc
shlb
sub
push
mov
dec
enter
sub
scas
js
lcall
mov
cltd
xchg
pop
mov
mov
out
adc
fwait
adc
nop
fisttpll
adc
stos
xchg
repnz
jp
jns
mov
push
loop
mov
xor
outsb
dec
push
cmpsb
and
inc
shlb
mov
push
lcall
pop
or
out
repnz
inc
or
sub
or
popa
cwtl
ljmp
adc
xor
pop
scas
pmulhuw
out
mov
sbb
scas
clc
pop
push
pop
in
pop
cltd
sbb
aas
mov
lcall
pop
lds
repnz
push
sti
dec
or
shr
xchg
or
imul
in
ljmp
dec
ljmp
aaa
loope
mov
mov
push
jae
les
scas
ljmp
outsb
cli
add
mov
push
xchg
jle
dec
inc
pop
data16
outsb
xor
mov
sub
lret
lock
and
pusha
pop
inc
and
jbe
jle
repnz
or
mov
or
mov
cmp
sub
or
jno
xchg
ss
mov
push
mov
mov
pop
sub
pop
mov
ret
sbb
or
inc
sbb
test
push
jp
dec
xchg
add
xchg
add
bound
push
lods
sbb
xchg
dec
mov
push
xchg
dec
push
out
es
xlat
into
jp
mov
iret
ficoml
fisttpl
in
and
mov
es
cmc
stc
das
and
idiv
push
arpl
mov
rcll
insb
mov
push
sub
xor
pusha
inc
insb
ret
hlt
push
jg
sahf
mov
scas
pop
cmp
jbe
sbb
icebp
aam
adc
stos
mov
adc
add
cmpsb
shrb
jbe
mov
sbb
dec
push
scas
cmp
adc
mov
adc
mov
pop
fidivl
and
and
aaa
or
push
and
push
pusha
push
sahf
cmpsb
inc
out
xor
sub
sbb
xor
outsb
adc
in
call
imul
psrad
push
inc
cs
dec
mov
push
data16
mov
sub
inc
mov
push
imul
and
scas
pop
es
ljmp
std
out
test
mov
or
sub
movsl
push
push
out
test
xor
cmpsb
mov
and
in
scas
loop
fstl
add
push
leave
negb
shlb
mov
jno
ljmp
cltd
or
xchg
nop
mov
jbe
or
rcrl
in
pop
and
mov
and
jb
imul
cs
inc
jno
and
into
adc
scas
inc
scas
mov
xchg
jbe
sbb
cmc
mov
adc
add
lcall
cwtl
and
pop
cmpsb
mov
push
xchg
sbb
clc
imul
mov
push
xchg
push
or
mov
inc
push
outsb
jb
cmp
sub
pop
mov
sub
adc
scas
int3
mov
pop
push
or
cmpsb
cs
xchg
outsb
repz
push
das
test
add
fisubs
xor
stc
fstpl
adc
pushw
xor
cli
stos
push
push
ljmp
out
mulb
push
pop
push
pop
dec
sbb
incb
bound
ret
push
outsb
add
rcll
or
das
lahf
es
pop
mov
mov
mov
push
adc
dec
dec
mov
push
jl
mov
sar
jle
outsl
and
scas
pop
push
inc
jnp
push
or
stc
scas
loop
xchg
sahf
mov
int
inc
pusha
sbb
pusha
popf
lds
add
imul
ja
mov
xchg
rcll
cmpsb
ret
and
notb
push
rolb
add
add
scas
xchg
push
and
xchg
mov
fdivl
out
mov
dec
cmpsl
in
jb
xor
cmp
mov
scas
adc
jns
jbe
push
jne
push
pop
or
outsl
mov
lahf
mov
int3
leave
pop
mov
nop
cmpsb
adc
call
pushf
sbb
mov
mov
es
data16
ret
inc
push
in
adcb
cs
pop
loop
pop
push
shr
cli
xchg
cmp
outsb
repnz
jns
and
jns
or
dec
inc
lcall
pop
loopne
push
sub
out
adc
mov
xchg
mov
inc
mov
xor
fdivrl
xorb
add
sub
nop
in
rclb
mov
pop
push
push
adc
scas
out
cmp
mov
aaa
add
ss
test
jnp
push
inc
xor
fdiv
mov
out
sub
add
add
out
sahf
xchg
gs
stos
ljmp
addb
xchg
xchg
lcall
adc
push
inc
xor
sbb
cmpsb
mov
rorl
shrb
scas
xchg
pop
xchg
pop
add
outsb
inc
and
adc
push
push
fidivs
sbb
mov
adc
push
outsb
clc
rcrb
xchg
nop
mov
add
mov
push
pop
push
ss
jbe
test
push
cmp
xor
mov
hlt
xor
cs
test
xchg
push
outsb
sbb
adc
int
cmpsb
scas
jecxz
loop
orb
in
or
bound
xchg
xor
aas
xor
jmp
outsl
inc
mov
or
loopne
and
lahf
addr16
push
jb
sub
loope
rclb
mov
push
adc
dec
mov
pop
mov
push
icebp
sub
shlb
jno
jp
fcoms
es
loop
xchg
cmpsb
scas
sarl
and
ds
jno
xor
in
ss
test
not
pop
out
jbe
cmp
es
subb
decb
ficompl
push
std
mov
xchg
popa
xor
bound
sub
add
and
adc
test
sub
imul
inc
lds
lea
mov
adc
stc
jno
adc
iret
fldenv
jle
mov
and
or
out
rcrb
andb
or
push
mov
es
movsl
rclb
aaa
ds
sub
adc
fidivrs
push
and
scas
imul
pop
and
dec
mov
dec
inc
adc
sbb
mov
lcall
or
repnz
mov
movsl
xor
xchg
jb
jle
jle
xchg
mov
and
cs
mov
cld
shlb
pop
mov
adc
orl
testb
stos
push
sub
xchg
out
adc
push
push
data16
pop
and
cli
pusha
dec
dec
das
scas
mov
imul
or
sarb
and
or
xor
movsl
or
movsl
lret
jge
es
shrb
lock
into
inc
sbb
push
cltd
fnstsw
or
ljmp
and
cs
and
loope
je
arpl
daa
or
pop
mov
add
sub
cmp
and
or
push
bound
mov
test
sarb
and
push
fimull
in
or
gs
xor
cmpsb
mov
cld
sahf
push
pop
in
cmpsb
arpl
addb
adc
arpl
test
std
and
in
mov
cmpsb
and
and
adc
adc
or
loop
sbb
pop
data16
mov
rcrl
xor
or
outsb
xchg
dec
jo
cmp
jnp
and
shl
out
pop
cmp
stc
sub
fmulp
cld
push
and
xor
push
add
cwtl
xor
xchg
jle
ss
sub
repnz
mov
test
push
ljmp
ret
and
fstl
jl
adc
pop
adc
insb
aam
fdivp
mov
lods
adc
mov
mov
pushl
xor
jne
cmpsb
mov
aas
outsb
push
or
push
mov
fidivrs
cwtl
cmpsb
jns
push
sub
adc
mov
int
loop
rorb
outsl
xlat
pop
xor
jle
mov
xchg
push
loop
fiadds
sbb
scas
adc
stc
jbe
jae
test
add
push
cld
xchg
testb
pop
fstl
jp
stos
xor
lods
sbb
fsubrs
into
scas
push
dec
jp
aas
xor
sahf
les
cs
push
es
imul
sub
out
push
adc
push
data16
cs
adc
jns
pop
out
popa
arpl
cmp
dec
sbb
cs
mov
dec
push
fimuls
xchg
pushf
xor
stc
sahf
testb
ds
psrld
test
or
xchg
and
pop
sahf
mov
notl
and
lods
jns
stc
sub
loope
cmp
pop
adc
test
jns
sub
dec
out
scas
lds
mov
xchg
or
push
push
inc
sbb
and
data16
adc
scas
insl
leave
sbb
xor
push
loopne
add
xor
cltd
xchg
movsl
pop
popa
int
bound
xchg
or
and
jb
out
std
sbb
aam
mov
int
ljmp
ror
cmc
sahf
stos
das
fsubs
orb
sub
sub
mov
mov
test
nop
inc
xchg
add
cs
inc
repnz
rclb
test
js
push
add
rolb
fs
ja
loop
idiv
adc
or
pop
outsb
cs
in
cmp
shrl
scas
push
or
jno
inc
dec
in
jmp
rcrb
xchg
add
mov
dec
push
mov
push
jae
pop
std
mov
dec
pop
bswap
dec
jle
mov
lea
add
inc
mov
movsb
jnp
mov
push
out
adc
pop
outsb
sbb
cli
push
leave
xchg
sahf
call
mov
sub
sub
cs
adc
push
inc
idivl
adc
push
fcom
adc
ljmp
pop
xor
jns
push
mov
xchg
jno,pt
es
cld
or
cld
shll
std
xchg
js
jns
mov
scas
cmp
aam
scas
mov
shll
and
push
movl
or
jg
xor
pop
rcr
arpl
mov
out
push
loope
fcmovne
fsubr
ds
fnsave
sahf
pop
xchg
cs
xchg
mov
mov
pop
cli
orb
scas
ljmp
pop
sbb
ss
sahf
fildl
or
push
lcall
jle
push
push
lahf
xor
ss
jbe
aas
cwtl
mov
and
idiv
sbb
ljmp
mov
fsubrs
xor
mov
or
scas
pop
jle
adc
xchg
cs
iret
aad
sbb
stos
sti
daa
test
sub
mov
pop
mov
fisttpll
cmp
xchg
or
adc
sub
adc
sbb
dec
dec
adc
push
pop
mov
and
rcrb
sbb
out
pusha
das
dec
sub
movsb
inc
xchg
or
or
iret
sbb
cs
xchg
or
mov
jno
call
shr
sub
push
negb
adc
push
inc
and
adc
test
cli
jbe
dec
arpl
arpl
push
cwtl
cs
in
dec
jno
loop
pop
jecxz
cs
mov
js
adc
dec
push
enter
jp
mov
pop
push
xor
aaa
shlb
push
sub
cmpsb
repnz
imul
sbb
in
jle
adc
sbbl
iret
sti
push
lahf
cmc
popa
or
add
jl
scas
jle
jns
mov
arpl
xchg
or
cltd
out
jno
or
pop
mov
in
and
xor
or
adc
add
sub
andl
fimull
mov
hlt
xchg
loope
sbb
mov
outsb
push
sbb
js
xchg
and
cmpsb
sub
sahf
loope
nop
fiadds
push
shufps
scas
ljmp
mov
mov
xchg
gs
and
ja
jo
sbb
clc
stos
scas
jnp
fidivrl
and
lcall
inc
loop
mov
push
mov
push
xchg
mov
or
jb
and
sub
loop,pt
ficoml
mov
sahf
pop
in
pop
or
out
or
sarl
scas
or
pop
or
ljmp
adc
jno
jb
outsb
sahf
xor
scas
imul
int
ss
jbe
out
sub
ljmp
or
jle
imul
ss
lock
adc
and
dec
add
data16
out
loop
push
repnz
adc
clc
sbb
dec
js,pt
xorb
push
adc
jp
in
fidivl
cs
stos
loop
repnz
pop
cmp
add
ds
pop
lock
xchg
push
cs
sbb
dec
push
ss
out
loop
and
popa
adc
mov
fst
and
test
outsb
xchg
and
lahf
out
pop
cltd
cmpsb
sbb
lods
stc
fcoml
and
mov
xchg
pop
add
addl
jp
rclb
xchg
sub
fdivs
mov
int3
mov
push
jle
imul
popf
sub
push
dec
push
popaw
fisubrl
stc
and
push
inc
and
imull
sub
xor
cli
leave
fiaddl
sub
iret
imul
adc
out
adc
fstp
cli
jno
fst
add
test
rcll
cltd
pop
push
jg
mov
and
sub
xlat
test
jp
not
loope
mov
in
out
cmpsb
mov
or
shrl
out
sti
xlat
cmpb
xchg
xor
data16
test
popa
lock
pop
mov
mov
aas
inc
insb
scas
stc
push
xchg
ljmp
dec
stos
mov
push
pop
mov
adc
add
lcall
push
sarb
add
inc
stc
scas
xchg
lds
popa
jb
sbb
pop
ret
xor
jbe
aas
inc
gs
push
lock
cmc
jnp
jle
dec
adc
es
ret
fisubl
sti
insl
add
jne
push
clc
das
shl
cmpsb
scas
mov
or
add
orb
jb
iret
push
xchg
and
scas
ret
push
mov
adc
data16
add
push
push
mov
jp
mov
push
or
mulb
rcrb
xchg
sbb
and
mov
cs
push
or
xchg
sub
popa
jae
cmpsb
pusha
or
dec
jp
xchg
into
scas
push
add
jle
dec
stos
push
pop
div
outsb
push
add
push
jne
mov
scas
and
xchg
xor
push
push
sub
mov
sub
xchg
outsb
push
stc
ljmp
adc
xchg
jno
jnp
test
pop
xchg
leave
dec
add
dec
push
jle
ljmp
jmp
push
and
push
cltd
mov
sbb
inc
loop
cli
or
enter
jle
ss
jb
inc
outsb
sarb
scas
mov
or
cmp
jbe
adc
or
jge
jle
mov
sbb
adc
adc
das
xchg
loopne
in
xchg
aam
ret
inc
or
push
not
push
push
iret
cmp
and
xchg
xchg
stc
and
mov
sbb
rorb
std
mov
lea
lcall
out
jbe
outsb
lds
sbb
and
out
mov
movsl
insl
loopne
out
mov
imul
dec
out
cwtl
mov
ret
ret
cmp
inc
ficomps
push
xor
ficomps
xchg
pop
or
push
into
xchg
imul
shlb
push
je
clc
into
inc
scas
jmp
or
ret
pusha
jle
xchg
push
cld
cltd
stc
das
adc
and
mov
sub
jbe
mov
xchg
stc
ss
fsubs
movsb
xchg
jp
or
adc
push
insb
sub
jp
aaa
push
pushf
push
stc
shll
das
jmp
and
xor
imul
imul
push
cmc
push
mov
adc
jno
push
xor
or
push
mov
adc
inc
fisttps
adc
sbb
fadds
sbb
xor
iret
push
cmp
pop
mov
xchg
jecxz
xchg
insb
sbb
or
push
xor
or
add
or
ret
mov
cmp
out
push
sbb
ja
xchg
outsb
push
mulb
sub
or
jle
lcall
sbb
ljmp
or
jns
pop
adc
out
jbe
and
std
push
add
int3
pushf
or
lret
notl
mov
test
dec
dec
lods
ficompl
adc
movsl
shlb
mov
insl
lret
xchg
orl
into
inc
push
sub
dec
mov
cmp
inc
out
or
mov
les
popf
int3
and
stos
lret
mov
pop
and
les
int
out
mov
lcall
jno
and
jne
out
sahf
popa
xorb
push
loop
shr
dec
fwait
jmp
xor
push
inc
pop
fdivr
cwtl
scas
dec
cs
lret
xchg
jp
or
into
or
sbb
int
cmp
mov
int3
ljmp
add
mov
push
mov
loop
jne
test
mov
stos
nop
fiaddl
es
repnz
and
add
and
cli
aam
push
fimull
or
push
sti
or
mov
jbe
mov
bound
sbb
xchg
push
sub
lahf
ror
cs
sbb
fdivrp
hlt
int
push
mov
fst
or
scas
mov
or
mov
addr16
loop
and
bound
pop
es
mov
push
adc
push
mov
inc
faddl
adc
sbb
outsb
adc
xchg
negb
xor
xchg
jle
adc
inc
out
popa
add
jno
rclb
es
scas
sbb
cmp
push
mov
sahf
and
jbe
pop
stos
cmp
cs
jbe
sub
aam
xor
xchg
dec
dec
ficompl
sbb
xor
aas
jno
lcall
sub
movsb
pop
jle
push
adc
push
dec
sahf
fists
jns
cli
subl
sub
aam
loopne
add
adc
and
sub
call
aam
out
jp
pop
adc
and
aam
fs
addr16
xor
mov
call
scas
push
mov
imul
pop
mov
push
mov
cmp
push
or
push
cmp
pop
dec
das
roll
inc
xchg
and
repnz
pop
push
out
and
mov
xor
push
mov
sbb
jp
outsb
outsb
loope
mov
mov
fcomps
into
mov
insl
cmp
adc
pop
and
ficoml
push
cmp
adc
xor
dec
aaa
push
sbb
and
sub
mov
xor
or
inc
sub
imul
sbb
shlb
jle
jge
adc
xlat
xchg
sub
and
or
stc
push
fisubl
push
hlt
adc
insb
shrb
jp
sbb
sahf
lcall
cmp
xchg
adc
jae
imul
push
jecxz
sbb
push
out
repz
lcall
pusha
cli
pusha
add
or
shll
pop
xor
fdivr
xor
sub
dec
and
push
xor
fisubrl
inc
push
jb
jbe,pn
or
push
testb
xchg
in
mulb
or
xchg
pand
shr
push
push
loopne
mov
xchg
fistpll
mov
push
out
xchg
sub
xchg
pusha
lods
pop
icebp
adc
cmpb
cmp
mov
popa
test
rcrb
or
leave
mov
nop
std
xor
cs
loope
add
push
push
push
xchg
fidivs
mov
aam
lods
xchg
fwait
push
inc
out
lds
and
mov
outsb
stos
dec
imul
insb
mov
repnz
sahf
mov
cmc
and
and
outsb
ret
into
mov
std
adc
pop
sub
data16
shrb
fbstp
push
out
adc
push
lret
dec
cs
std
xchg
sub
test
push
push
push
cwtl
pop
sub
adc
sbb
imul
mov
fimuls
xor
popa
push
adc
and
mov
push
std
pop
jbe
int
psrad
outsb
mov
mov
sbb
lock
sbb
notb
adc
fcoms
aaa
xchg
jle
bound
mov
push
inc
ror
adc
add
leave
dec
dec
mov
xor
sub
push
loop
push
jle
mov
scas
mov
and
popa
sub
dec
dec
xchg
sahf
xchg
xor
imul
in
or
jne
shl
or
les
and
or
pop
outsb
aad
or
push
test
in
es
jle,pn
call
mov
jns
and
pop
mov
adc
or
ljmp
mov
shrb
pop
imul
inc
ljmp
int
loop
xchg
mov
adc
fidivl
xorb
scas
pop
clc
lcall
push
or
inc
ss
mov
es
pop
popf
out
mov
rolb
mov
loop
out
into
out
pop
jno
jbe
sbb
es
outsl
xlat
cwtl
mov
lcall
aad
ss
aam
push
jl
adc
mov
jnp
imul
push
mov
les
test
lds
or
push
sbb
pop
jo
inc
push
pop
push
mov
inc
int
mov
cmpsb
pop
and
stc
jb
sbb
into
dec
push
mov
fstpl
das
sub
dec
add
jo
testb
loop
adc
xchg
inc
push
jnp
addl
xchg
lds
movsl
adc
stc
adc
sbb
push
int
pop
popf
mov
push
xchg
pop
and
outsb
rcl
add
idivb
dec
pop
mov
out
outsb
jb
in
xchg
sub
and
dec
mov
mov
jp
adc
cmpsb
and
cld
in
rcrb
pushf
pop
push
and
adc
xchg
int
mov
push
push
and
sub
divb
fidivs
loop
xchg
aam
fcompl
in
mov
cmp
mov
mov
out
lcall
out
cli
mov
or
or
ljmp
std
add
sub
sub
sbb
mov
or
dec
add
jle
jbe
mov
mov
cs
into
inc
add
push
stc
sahf
xchg
xchg
leave
lds
cmp
shr
jle
jb
pop
sbb
imulb
xchg
es
test
mov
cmp
fisubrs
xor
adc
das
xchg
scas
add
and
jno
push
fstp
sub
and
decb
add
push
setl
mov
lret
pop
sub
sbb
xchg
ds
ljmp
jae
or
xchg
call
jb
cmpsb
insl
pushf
dec
adc
push
push
cld
or
sub
ss
sahf
aam
sahf
or
fisubrs
mulb
dec
fisttpll
jb
and
imul
jmp
out
ja
inc
test
ljmp
jnp
imul
negl
xchg
test
mov
mov
jb
insl
lods
mov
sbb
repnz
into
adc
push
xor
mov
mov
lods
add
sbb
fisubrs
mov
loop
push
push
mov
cmp
and
js
mov
cmpsb
iret
or
sub
lcall
ficoml
lret
cs
xor
ret
ljmp
xor
sti
push
scas
ficoms
stos
mov
adc
lcall
adc
or
jno
xchg
mov
dec
rorl
mov
push
nop
xchg
jp
jbe
xchg
stos
xchg
pop
push
push
or
dec
cmp
jns
mov
scas
mov
cmpsb
cmpsb
add
roll
cmp
jge
xchg
mov
xchg
inc
lock
or
dec
clc
stc
ljmp
mov
xor
rcl
pushf
or
pop
pop
push
movsl
push
shlb
adc
jae
data16
xor
or
out
sub
lahf
sub
adc
ret
push
rcpps
push
out
ret
inc
xchg
mov
arpl
imul
enter
mov
iret
xchg
stc
in
adc
sbb
rol
sub
mov
les
or
sub
xchg
mov
aam
pop
or
out
jae
and
push
or
nop
inc
xchg
dec
fildll
test
popa
ljmp
and
add
mov
shlb
sahf
out
mov
mulb
out
pop
out
or
dec
xchg
xchg
mov
movsl
out
and
xchg
stc
out
mov
push
out
xchg
mov
xchg
stc
clc
xlat
add
lods
fistpll
cmpsb
fwait
jbe
outsb
rcl
mov
pop
scas
rorl
xchg
jg
and
and
jb
sahf
fldenv
mov
adc
cld
in
mov
scas
mov
stos
mov
sub
fst
arpl
shl
lock
les
jmp
scas
xchg
dec
cmpsl
cmpb
cmpsl
xchg
sub
pop
loopne
and
add
sbb
pop
push
jle
push
lock
mov
sbb
scas
shll
sbb
sahf
out
and
pushf
jle
test
xchg
xchg
adcb
cmpsl
stos
add
lahf
movl
nop
mov
fucom
xchg
xor
mov
outsb
and
mov
adc
subl
xchg
and
test
lock
test
xchg
clc
add
pushl
add
mov
xchg
fwait
mov
or
out
mov
mov
cmp
cmp
push
push
out
xorb
enter
sahf
mov
mov
pop
mov
cwtl
add
sub
inc
sub
mov
stos
repnz
push
stos
inc
icebp
add
push
cmpsb
repnz
outsl
in
enter
stc
cmp
mov
xchg
out
inc
jmp
mov
xchg
sbb
jg
dec
je
daa
mov
xchg
loope
pcmpeqd
cmpb
mov
in
mov
pop
les
or
mov
pop
add
pop
out
cwtl
jmp
jecxz
pop
mov
push
fisubl
sub
ss
pusha
xor
mov
data16
cs
adc
mulb
out
mov
js
sub
add
mov
or
pop
sbb
sbb
jb
push
cs
xorb
imul
in
push
mov
sbb
push
repnz
jns
xor
or
mov
cmpsb
pop
jle
xchg
jp
cltd
pop
jmp
inc
mov
repnz
sub
stc
dec
shlb
xchg
cmp
testb
sub
xor
and
repz
xchg
mov
cmp
ljmp
mov
mov
sbb
out
xchg
sub
cmpsl
mov
cld
stos
or
pop
sub
pop
lds
or
adc
fisubrl
push
mov
cmpsb
fidivrs
pop
in
aaa
push
push
ss
dec
fmul
mov
aam
adc
fidivs
lret
mov
fbld
andb
mulb
gs
loop
push
fbstp
mov
out
xchg
in
movsb
mov
push
sub
jnp
pop
and
mov
and
add
mov
lret
sahf
bound
repz
test
cli
pop
xchg
add
incb
sahf
movsl
leave
cmpsb
pusha
mov
rclb
sbb
mov
mov
fidivrs
or
mov
jno
sbb
inc
test
dec
std
or
sbb
xchg
daa
scas
sub
mov
in
aam
notl
xchg
popf
push
and
xor
sti
mov
nop
divb
sbb
xchg
sbb
es
mov
pop
mov
xlat
or
jge
mov
jmp
imul
jp
roll
sbb
pop
out
bound
cwtl
outsb
jl
xchg
and
sbb
push
out
rcrb
pop
pop
sahf
stc
testl
mov
pop
push
pop
xor
xchg
orl
push
xor
rol
push
jge
cmpsb
je
dec
pop
push
mov
ss
ret
stos
icebp
fdivp
push
mov
sub
inc
pop
jno
push
scas
mov
xor
push
ss
rolb
push
mov
jg
nop
mov
sbb
sbb
ja
mov
xchg
jmp
insb
jp
loop
mov
mov
mov
sahf
js
mov
adc
aad
mov
cltd
movsl
cmpsb
push
jp
bound
sti
fs
or
jg
es
repz
std
mov
cmp
lods
push
mov
mov
out
mov
sarl
cmp
pop
mov
enter
repnz
cmpsl
popf
jle
inc
fnstenv
sub
pop
mov
loopne
xrelease
jae,pt
add
rorb
testb
xchg
aas
leave
jbe
mov
add
mov
xchg
adc
stos
xor
sub
sub
bound
jecxz
fst
push
push
push
scas
icebp
dec
xor
and
xor
ss
loop
sbb
sbb
jb
fcmovu
mov
xchg
jle
subb
push
repnz
stos
scas
scas
push
int
daa
in
lcall
stos
adc
push
sahf
bound
bnd
and
or
xor
ss
adc
negb
inc
adc
mul
or
xchg
add
adc
imull
shrl
fiadds
mov
popf
lcall
jno
mov
mov
in
lods
pop
or
push
mov
cmc
cmpsb
addr16
mov
stc
sbbb
loope
scas
mov
sub
mov
mov
cli
push
xchg
sub
iret
and
fisubs
aas
outsb
ds
scas
cmc
pop
cmpsb
xor
stos
testb
cli
push
into
jle
sbb
shrb
std
loop
mov
xchg
orb
sbb
mov
cmp
repnz
shll
mov
push
mov
lret
jne
xor
pop
dec
ret
mov
jns
jb
ret
cs
jns
and
bound
lods
push
push
lods
fimull
xor
lcall
sub
push
popa
mov
out
pop
and
jb
push
inc
data16
mov
adc
imul
cs
je
loope
out
ljmp
or
mov
test
sub
jns
imul
imul
jb
mov
xchg
and
stc
inc
mov
stos
push
sbb
add
xor
push
cwtl
scas
push
insb
pop
cmpsb
mov
mov
aas
xchg
sub
sub
pop
push
ss
or
dec
pop
pop
push
add
sub
loop
bound
int
repnz
inc
push
xchg
ss
ficompl
scas
dec
fdiv
sub
sub
lahf
test
jle
push
and
es
outsb
jb
cli
dec
pop
push
lcall
xchg
sbb
adc
sbb
push
jbe
dec
adc
mov
rol
lcall
pop
lcall
es
push
pop
push
mov
sub
repnz
adc
push
dec
ficomps
ljmpw
sbb
sub
jmp
ds
iret
inc
mov
adc
lcall
adc
and
cltd
pop
adc
add
and
or
xlat
add
pop
adc
jne
in
mov
cmpsb
lcall
jp
es
stos
mov
cltd
lcall
pop
add
mov
push
scas
jecxz
and
lahf
inc
shrl
sub
mov
pop
pop
or
pop
testb
mov
mov
cs
mov
repnz
push
out
scas
outsb
ficoms
dec
jbe
jle
push
jle
lds
out
sub
sti
ror
push
add
jle
insl
xor
lea
jnp
dec
dec
and
push
pop
sub
scas
mov
loop
sarb
mov
scas
xchg
sbbb
xor
nop
repnz
sub
aad
pop
mov
imul
jle
xor
inc
data16
popf
adc
lods
xchg
xchg
xchg
dec
sub
jmpw
loope
mov
dec
sbb
cs
cmpsl
pop
repnz
jle
adc
mov
inc
imulb
gs
push
add
or
or
dec
push
mov
in
sbb
mov
inc
xchg
lock
xchg
or
scas
cmp
into
sbb
push
dec
aam
bound
lret
or
std
mov
jp
sbb
or
mov
jns
jbe
sub
sbb
push
iret
iret
scas
push
or
scas
das
scas
sub
and
jb
out
adc
push
and
stos
fmull
push
mov
push
and
ficompl
scas
sub
mov
sbb
nop
add
cmp
or
scas
push
push
or
idivb
xchg
sahf
cs
and
adc
cld
or
cmp
iret
adc
or
loopne
pop
pushf
mov
mov
xchg
xchg
adc
leave
jle
jb
mov
outsb
popa
cmp
add
adc
and
mov
adc
push
xchg
mov
adc
inc
xlat
std
stc
inc
cmp
push
push
mov
gs
xchg
push
inc
jb
sub
or
and
adc
mov
push
or
adc
lahf
mov
ds
pop
popa
leave
jle
dec
aam
mul
scas
and
repnz
addr16
aaa
xor
adc
sbb
cs
mov
jae
mov
call
push
sahf
ljmp
pop
and
and
push
xchg
push
sahf
mov
stc
stos
ljmp
iret
fisttpll
cmpsb
jns
push
jle
jns
sahf
pop
push
or
pop
cmpsb
sbb
adcb
outsb
sbb
data16
inc
jbe
movsb
shld
push
jmp
mov
stc
xor
negb
jns
les
es
or
mov
repnz
mov
adc
scas
push
mov
stc
push
fisubrl
adc
jbe
rclb
push
out
pusha
in
pushf
pop
pop
dec
outsb
and
rorb
in
xchg
into
out
mov
fimull
cli
std
mov
test
scas
adc
cmp
push
push
aam
rorb
inc
or
dec
cld
sbb
andb
scas
lahf
sbb
mov
lods
mov
adc
push
fisttpll
xor
push
push
sub
in
stos
sbb
xchg
push
inc
push
pop
out
and
push
pop
mov
jp
les
add
ss
pop
jmp
out
push
popa
pop
cli
push
and
cmp
xchg
push
adc
sub
pop
adc
xchg
orb
push
push
scas
into
fsubl
outsb
jns
bound
pop
mov
scas
dec
out
or
jle
repnz
iret
stos
xchg
push
pop
call
imul
pop
inc
jno
jae
push
sarb
stos
aam
and
and
xchg
sbb
popf
push
test
or
sbb
pop
mov
stc
push
pop
call
or
and
push
adc
into
mov
push
dec
leave
outsb
sbb
jge
es
and
aaa
outsb
dec
push
mov
pop
and
and
sub
cmpsb
add
pop
or
jp
shl
fstp
dec
cltd
xchg
xchg
pop
jno
bound
jb
or
adc
cld
pusha
push
shll
mov
mov
out
push
inc
push
int3
iret
cmp
outsb
jle
xchg
pushl
test
cmp
outsl
popl
leave
adc
sub
jg
outsb
jl
xchg
mov
es
iret
out
scas
and
cltd
test
pop
jp
ja
jb
mov
sbb
push
push
sub
push
orb
pop
rorb
sbb
ret
or
jno
jp
xchg
adc
or
pop
ss
push
or
push
in
inc
xchg
frstor
mov
sbb
inc
push
xor
lcall
jbe
adc
dec
xor
mov
or
xlat
ficoms
bnd
push
mov
and
mov
movsl
iret
movsl
bound
sub
imulb
negl
fisubrl
std
movsb
mov
ficomps
repnz
icebp
clc
sub
cmpsb
outsb
pop
mov
xchg
xor
pop
rcrb
data16
stc
ss
push
outsb
fisubrs
push
adc
sbb
or
fdivl
repz
test
dec
add
lret
fldcw
mov
cmp
mov
outsb
lret
sbb
mov
mov
xchg
adc
bound
rcrb
cmp
sahf
rcr
or
jle
mov
pop
shll
outsb
lcall
mov
orb
push
stc
fwait
dec
sti
adc
sbb
mov
lret
pop
pushf
dec
pop
enter
xor
push
jae
push
mov
pushf
mov
xlat
test
sub
xchg
fstpl
add
and
push
push
pop
sbb
js
push
hlt
loop
fldenv
push
insl
sub
sub
dec
xchg
mov
repnz
sub
push
negb
inc
adc
inc
test
sbb
scas
mov
and
xor
dec
dec
mov
pop
sub
mov
push
xorl
in
xchg
adc
dec
pop
and
mov
xchg
push
loop
cmp
push
mov
jb
psubd
dec
es
pop
xchg
shrl
lods
lock
push
mov
or
fisubrl
xchg
xchg
rcrb
int
or
call
cltd
xor
lcall
add
inc
sub
hlt
outsb
adc
mov
in
int
inc
mov
out
repnz
adc
dec
fdivl
data16
jb
pop
lods
adc
push
into
jnp
outsb
jbe
jmp
lcall
jl
rolb
xchg
es
mov
sub
stc
jl
repnz
adc
xchg
jb
js
hlt
imul
and
fimull
ljmp
js
jmp
sbb
mov
fcom
jne
imul
xor
cmp
adc
push
jns
loop
or
imul
jmp
mov
nop
cmp
jbe
js
iret
mov
sub
scas
jae,pn
sub
test
neg
nop
or
psubsw
add
fildl
faddp
jp
or
mov
lds
lods
mov
and
and
mov
mov
into
sti
sub
fildll
addb
add
push
adc
scas
lret
sub
xchg
push
sub
arpl
int3
jo
jb
wrmsr
jle
sarl
and
adc
sub
loop
lahf
arpl
jb
mov
das
das
or
xlat
pop
and
sub
loopne
cmpsl
cmp
shr
out
and
stc
xchg
ret
psrad
ret
pop
inc
das
ret
sbb
xor
test
and
repnz
fisubrs
push
pop
fisubl
pop
lock
pop
es
cmpsb
fisubrs
add
int
mov
jns
repnz
or
cmp
cli
shrl
xor
push
sub
int
or
and
mov
adc
push
scas
mov
stc
pop
mov
shr
jae
fisubl
jae
insl
xchg
aam
dec
mov
push
xchg
push
and
negb
push
jno
mov
push
mov
pop
int
jb
shr
adc
add
push
test
cli
es
scas
out
dec
test
mov
imulb
push
push
xchg
jno
xor
stos
movsl
test
mov
push
inc
fadds
xchg
xchg
xor
jl
sub
and
leave
outsb
add
lock
fstl
stos
sub
fs
imul
dec
dec
pop
scas
sahf
mov
rcll
insb
fisubl
mov
and
or
jns
gs
rcr
in
sbb
fcoms
inc
imul
jle
in
pop
hlt
push
fisubrl
inc
mov
outsb
repnz
push
out
cltd
sub
mov
gs
out
movsl
cs
leave
in
add
and
sahf
popa
data16
scas
in
fcom
mov
stos
mov
ret
mov
lods
ss
or
sarb
pop
jg
mov
repnz
pop
xlat
outsl
pop
xlat
xlat
out
test
jp
sub
xchg
imul
stc
push
adc
scas
sbb
lcall
push
mov
cli
dec
pop
stos
dec
mov
cmpsb
rcll
and
aaa
test
xor
sbb
or
cs
add
loopne,pt
testb
adc
sbb
add
mov
std
cltd
mov
outsb
mov
in
pop
jbe
les
push
leave
cltd
jp
jle
nop
scas
repnz
adc
xchg
movsb
push
leave
sub
shlb
add
bnd
inc
sti
xor
pop
pop
push
mov
sub
out
jne
lds
ljmp
sub
mulb
sub
ret
cs
lahf
stos
addb
inc
into
repnz
in
dec
add
movsl
sub
cmp
sbbb
xor
in
mov
scas
pushf
inc
sub
or
sub
or
iret
or
sbb
scas
xchg
ja
or
push
dec
sub
sub
fmull
push
add
addr16
sbb
or
scas
push
adc
push
add
in
sub
ljmp
sbb
xor
mov
mov
xchg
jle
add
cld
lea
in
add
ss
push
and
push
neg
inc
outsl
xchg
sbb
cltd
scas
jge
sbb
loop
rorb
xor
stos
pop
repnz
rcrb
mov
push
lahf
dec
push
outsb
jne
add
bound
dec
and
out
outsb
cmpsb
sahf
adc
sbb
cld
arpl
ss
push
mov
push
ds
popf
call
xchg
std
cmpsb
xchg
enter
ss
xor
leave
in
stos
jb
pop
pop
xchg
adc
pop
bound
sbb
nop
xchg
sahf
and
push
cs
sbb
test
dec
mov
sub
jno
movsb
dec
outsl
and
cli
out
incb
adc
jle
sub
outsb
sub
cltd
mov
sbbl
dec
and
leave
dec
sbb
scas
ja
pop
xchg
scas
sahf
into
push
mov
fnstcw
inc
outsb
pop
push
repnz
push
or
push
ret
fisubs
mov
mov
and
sahf
xchg
pop
dec
out
cmp
dec
inc
adc
adc
leave
xchg
int3
cmp
xor
inc
scas
mov
notb
fidivl
jnp
xor
jns
and
jno
imul
push
xchg
dec
popa
mov
or
add
sub
cmp
push
shll
jbe
lret
sub
push
andl
push
pop
jp
adc
mov
mov
cmp
das
sub
adc
jle
imul
aaa
lea
mov
and
sbb
mov
out
lock
jp
test
dec
fisubl
scas
sub
fcmovbe
mov
outsb
inc
popa
stos
add
push
es
adc
shlb
es
pop
xchg
outsb
push
aam
push
lret
andb
mov
lods
sbbb
in
movb
xchg
mov
mov
sub
sub
xlat
adc
dec
iret
fnstsw
sub
add
dec
push
test
outsb
or
mov
bound
mov
sub
mov
jmp
aad
jns
sub
jg
push
inc
mov
push
mov
or
scas
out
sarb
outsb
push
repnz
adc
xchg
xchg
fs
dec
xchg
jp
sbb
or
mov
movsl
scas
cli
hlt
inc
push
fiaddl
xor
adc
ja
push
ljmp
xor
xchg
sbb
fisubrs
pop
jb
dec
mov
mov
add
lret
push
fcomp
push
ss
outsb
sub
sahf
push
int
out
xchg
adc
jb
push
lock
inc
pop
int3
scas
sub
push
cli
xor
fidivrs
push
sarb
mov
or
mov
imul
inc
test
sbb
xor
xchg
cmp
dec
mov
add
dec
and
cpuid
out
xor
and
xor
ja
cmp
push
lret
pop
adc
xchg
mov
or
scas
sbb
loop
or
dec
pop
mov
cmp
js
lcall
add
cli
cmp
add
test
pusha
ja
dec
popa
push
push
mov
lea
out
arpl
push
dec
loop
ljmp
sbb
mov
inc
incl
lds
outsb
sbb
mov
stos
jp
push
inc
sbb
xchg
xor
sahf
jno
lcall
ss
jmp
pop
or
xchg
or
sbb
cld
mov
sbb
lock
push
and
lcall
in
push
mov
xchg
adc
sbb
pop
pop
sub
jge
inc
push
scas
fwait
fs
adc
push
sahf
ficomps
or
inc
pop
leave
fsubrs
lcall
rcr
jae
xchg
push
sahf
add
sbb
int
xor
mov
and
inc
mov
adc
std
mov
cltd
push
push
test
jns
ljmp
cs
notb
shll
in
scas
push
or
and
insb
dec
push
adc
push
mov
out
fmuls
add
mov
jnp
or
jne
ljmp
gs
sahf
jbe
adc
roll
xchg
add
pop
dec
outsb
ss
adc
pop
loop
scas
adc
xchg
sbb
dec
out
jle
ficomps
das
inc
movaps
inc
scas
mov
lcall
cmp
push
adc
inc
iret
pop
fiaddl
jbe
int3
shrb
es
adc
fimull
push
add
jle
aad
add
inc
out
xchg
sub
scas
pop
sbb
pop
rcrb
adc
sub
mov
mov
jge
es
inc
sub
dec
inc
sub
mov
rclb
sub
mov
fdivrp
fs
cmp
sbb
mov
idiv
adc
decb
sub
dec
popf
xchg
and
jle
pop
jno
pop
pop
cmp
push
outsb
cli
fbstp
dec
sub
jp
or
sub
stos
and
repnz
push
jnp
push
es
pop
pop
das
fs
xchg
in
repz
sarb
int
imulb
cwtl
dec
mov
sbb
jmp
or
outsl
and
jb
xlat
sub
popa
sahf
push
xchg
ljmp
cmc
repnz
dec
fdivr
push
xchg
push
es
pushf
jno
jp
jl
cs
inc
dec
sbb
jns
mov
stc
and
cmp
popa
imulb
xchg
mov
in
push
ljmp
xlat
stos
notb
or
or
cmpsb
push
push
sub
nop
add
xchg
pusha
inc
xchg
xchg
and
push
fstl
repnz
pop
mov
adc
and
pop
adc
iret
out
and
js
out
cli
and
ljmp
aas
dec
sbb
xchg
fidivrs
mov
xor
xchg
sbb
pop
aas
push
push
repnz
sub
dec
fidivs
test
lods
jns
sbb
fwait
mov
sub
push
stos
dec
push
pop
sbb
xlat
mov
test
mov
stos
and
or
test
or
or
in
mov
sub
jle
mov
in
push
and
adc
inc
data16
push
and
or
mov
aas
pop
cs
loope
or
mov
ret
and
jle
vmwrite
idiv
imul
xchg
pop
cli
idivb
sahf
pop
xchg
push
cmc
pop
or
cwtl
mull
xor
cmpsb
stc
inc
mov
ret
xchg
shll
xor
loop
aad
lret
fnsave
jle
or
push
repz
cmpsb
shll
cmp
add
jbe
push
out
dec
int3
push
xchg
notb
sbb
clc
fwait
popf
jge
popa
or
lcall
jp
aam
xor
and
fidivrl
arpl
das
js
cwtl
xchg
fidivl
adc
loop
sub
lods
xlat
add
out
cmp
pop
cwtl
cltd
mov
scas
jno
pop
mov
push
jl
stc
dec
push
sub
push
stos
xchg
clc
mov
inc
out
jb
popa
fimull
pusha
xchg
push
fs
or
adc
aaa
fwait
shlb
insb
and
push
or
mov
mov
xchg
and
out
fiadds
push
and
cmp
idiv
popl
repnz
out
mov
push
sbb
lds
jle
mov
xor
push
int
cli
idivb
fcomp
rolb
sub
xor
sbb
out
xchg
jle
imul
mov
push
enter
pop
adc
push
stos
push
push
rorb
outsb
scas
pop
xor
cmp
sbb
popf
xchg
adc
jle
sub
inc
inc
test
cmp
gs
xchg
dec
adc
sbb
lock
xchg
xlat
fs
std
pop
clc
nop
lahf
popa
repnz
and
adc
xchg
xor
xchg
mulb
xor
push
jno
loop
xchg
daa
mov
add
mov
xchg
jno
cmc
pusha
or
mov
sbb
mov
jp
lea
cltd
lcall
rcrb
mov
dec
gs
stc
or
xchg
mov
inc
adc
insb
lret
fistpll
sub
xor
pop
in
push
mov
pushw
loopne
repnz
jmp
scas
cmp
jb
es
jmp
les
xchg
mov
test
test
roll
jge
mov
scas
or
inc
push
jno
shrb
ljmp
pop
icebp
movsb
cmp
adc
push
cwtl
adc
lret
lcall
iret
pushf
outsb
sbb
test
inc
out
clc
ja
popa
cmp
adc
arpl
iret
lret
adc
pop
add
inc
mov
outsb
push
add
pop
add
nop
std
xor
out
sub
or
sbb
and
cld
icebp
testb
ficoml
push
sbb
push
arpl
xor
pop
mov
xchg
push
dec
in
push
mov
sub
pop
in
dec
ret
lret
hlt
and
jmp
lock
sbb
sbb
cmpsb
stos
idiv
and
add
mov
add
jne
adc
mov
fs
lret
outsl
cwtl
dec
adc
adc
sub
xor
rorb
imul
scas
push
lahf
scas
or
jp
push
into
and
pop
or
pusha
dec
pop
xchg
push
sbb
sbb
mov
lds
mov
imul
mov
dec
adc
or
xor
push
lcall
push
in
stc
xchg
andb
pop
lea
inc
scas
outsb
xchg
test
jp
aas
sbb
mov
adc
cli
or
ret
ljmp
and
outsb
push
imul
mov
fsts
stos
mov
jmp
sahf
inc
jge
push
fs
cltd
sbb
and
inc
xchg
cs
adc
mov
cmp
mov
lret
aam
cli
dec
das
mov
or
push
js
add
mov
mov
subb
les
cmp
jle
hlt
bound
inc
push
cmp
lock
cmpsb
jle
adc
int3
test
mov
xor
xchg
add
out
fwait
rcrb
mov
mov
xor
rcll
popf
fisubrs
fldcw
lock
add
or
in
inc
or
or
xor
add
push
mov
push
je
insb
sub
adc
push
ret
mov
cmpb
lcall
out
jle
out
sub
dec
insb
das
xchg
cmpsb
pop
ficoml
jb
pop
popf
mov
movsl
pop
mov
les
xchg
mov
xchg
cmp
cmp
aad
jb
mov
sub
mov
dec
jmp
ljmp
test
mov
adc
test
negb
xor
jecxz
lea
popf
pop
or
pop
andb
jp
jo
popf
or
cmp
mov
cmp
adc
sbb
popf
dec
push
dec
xor
call
inc
stos
sub
test
je
jb
push
lcall
repnz
lahf
data16
push
jge
out
xor
int
xchg
in
int3
in
mov
push
sub
mov
add
mov
mov
mov
mov
ss
in
outsb
mov
inc
cmp
imul
lock
movsb
in
out
jb
in
loop
mov
in
sbb
add
out
mov
lcall
outsl
add
push
test
test
mov
and
pushf
xlat
es
pop
mov
push
sbb
sub
sub
in
sahf
push
outsl
mov
addb
mov
repnz
xchg
repnz
xor
mov
mov
iret
mov
in
inc
and
cs
int3
outsb
xchg
and
lds
xor
call
push
pop
popl
inc
stc
sub
mov
iret
add
mov
test
sbb
cwtl
sbb
jns
mov
bound
add
das
mov
jle
dec
sub
fisubrl
pop
fidivs
push
jno
and
inc
ljmp
mov
mov
sub
sbbb
pop
lret
lods
sub
xchg
mov
lods
xchg
inc
enter
adc
jp
or
lret
xor
sbb
jle
mov
xchg
andb
sub
sbb
icebp
rcrl
or
cli
vpermilps
aas
cltd
xchg
pop
fstpt
jbe
repz
imul
ficompl
jns
push
mov
inc
xor
sbb
es
outsb
or
pop
xchg
out
rclb
setb
scas
cltd
push
jle
dec
inc
or
and
outsb
idivb
pusha
dec
leave
addl
push
and
inc
lock
jle
cmp
sub
movsl
stos
lfs
stc
out
loop
insb
cmpsl
jmp
sbb
rclb
dec
jns
add
scas
iret
mov
jp
push
sub
out
out
shl
xor
lcall
or
dec
outsb
push
imulb
mov
mov
push
hlt
es
out
xor
or
push
dec
sub
shrb
xor
outsb
sahf
sbb
jp
dec
lcall
sub
pop
in
movsl
jbe
ret
es
mov
xor
negb
in
sub
xlat
mov
pop
inc
jp
out
repz
ret
cmpsb
pop
or
cltd
push
out
or
jno
outsb
sub
stc
data16
fsubl
xchg
sahf
mov
sahf
sbb
adc
rcrl
repnz
outsb
out
adc
mov
or
push
sub
cwtl
pop
jae
or
nop
mov
cwtl
pop
jecxz
mov
mov
sub
in
push
clc
repnz
cmp
adc
sbb
mov
adc
sbb
jb
mov
pop
decb
dec
adc
bnd
and
pop
cmp
adc
push
stos
out
mov
scas
xor
sub
pop
or
xchg
mov
and
dec
hlt
xor
add
add
mov
fisubrl
cli
push
cmpsb
sub
inc
dec
cld
rcrb
fdivrp
mov
ret
lds
adc
dec
test
sbb
lahf
dec
push
aas
xchg
adc
mov
add
js
xchg
ror
and
adc
pop
outsb
mov
mov
cli
jp
nop
out
outsb
push
xchg
std
xchg
lock
add
pop
adc
sahf
ss
and
jno
sub
mov
xor
and
lcall
and
mov
pop
aas
arpl
inc
pop
adc
jb
xor
adc
xchg
mov
push
popa
mov
repnz
and
inc
xchg
inc
stos
xor
es
lahf
inc
sub
adc
mov
cli
fisubs
ss
push
cmp
es
scas
xchg
stos
nop
jb
push
scas
popa
cltd
cli
not
jnp
inc
pop
es
dec
inc
push
hlt
or
sub
cmp
mov
xchg
push
jp
push
fidivs
sub
dec
insb
mov
add
scas
insb
sarl
push
pop
ficoml
xchg
ss
movhlps
jle
jge
dec
or
push
inc
sbb
xchg
loop
xchg
pop
push
dec
xchg
cs
cmovg
out
jbe
inc
xor
scas
sbb
fstpl
xor
and
mov
xchg
cltd
jb
lea
jns
scas
push
fsts
sub
pop
cmpsb
es
rolb
int3
sub
lcall
dec
mov
out
ret
or
mov
lcall
fisubrl
call
xor
xor
jle
in
and
sbb
mov
jns
xchg
mov
iret
lcall
adc
pop
out
sahf
bound
push
cmp
stc
inc
jns
pop
cmp
imul
scas
cld
push
cmpsb
push
testb
and
sub
jb
aas
scas
jne
dec
jbe
push
mov
sahf
or
push
std
push
sbb
jg
and
call
pop
push
pop
outsb
pop
xor
jecxz
mov
scas
jle
lcall
repnz
outsl
inc
inc
pop
sbb
lock
mov
mov
or
sbb
xchg
imul
ljmp
and
stc
and
jg
sahf
cs
mov
xchg
pop
push
mov
mov
call
jge
sbb
shll
into
sbb
fmuls
data16
imul
repnz
push
xchg
shlb
sti
cs
xchg
adc
and
int
sbb
push
ss
scas
lds
scas
add
cs
cs
decl
xchg
daa
push
jno
xchg
cmc
or
push
push
push
xor
pusha
add
movsl
xchg
scas
leave
xlat
push
push
not
lcall
adc
cs
cmpsb
testb
and
jmp
mov
repz
push
ret
outsb
mov
pop
push
and
daa
sbb
cmp
cmp
push
sub
ret
into
sub
push
into
outsb
in
frstor
clc
in
xchg
xor
rcr
das
jns
push
sub
jg
push
jo
and
ror
push
jl
lcall
add
xchg
sarl
orl
pop
call
imul
subb
mov
or
adc
int
mov
xor
outsb
mov
jbe
test
or
push
add
xor
push
shll
sub
and
xchg
imulb
adc
stos
das
xchg
cltd
and
pop
jns
sub
repnz
push
movsl
outsb
push
stos
push
into
sub
mov
inc
std
int
std
ficoms
nop
fnstsw
lods
push
mov
loop
je
xchg
mov
lcall
push
adc
outsb
adc
add
test
and
or
sub
pushf
inc
ds
push
sbb
pop
xor
out
inc
pop
ror
adc
cld
loopne
push
out
les
xchg
mov
mov
xor
les
or
seta
jp
sbb
push
test
and
adc
jmp
int3
cwtl
shlb
push
repnz
jns
mul
and
push
xor
outsb
mov
xchg
cmpsb
jp
lds
or
and
fidivs
fnstsw
jecxz
loop
data16
pop
xor
sub
fiadds
push
jns
or
sahf
testb
jno
outsb
out
sbb
push
and
jae
mov
sub
into
ficoms
fdivrp
mov
into
mov
lock
sahf
sbb
shlb
jl
xchg
aaa
test
das
pop
popf
in
cmpsb
add
jp
jns
and
push
loop
xchg
es
pop
sub
ja
sub
adc
xchg
ret
es
fmulp
jno
aad
scas
stc
fs
push
cli
fistpl
adc
sbb
xchg
mov
xchg
push
lea
mov
xor
inc
cmp
push
shlb
inc
int
es
jle
mov
rorb
sub
mov
mov
pop
inc
imul
imul
and
xor
and
mov
jb
push
inc
loop
std
fidivrs
cmpsb
mov
fdivr
sarb
mov
and
rorb
stc
or
enter
adc
in
adc
and
bound
or
popl
nop
in
adc
mov
rcrb
frstor
mov
xchg
std
rol
push
jl
cli
push
inc
push
xchg
xor
inc
push
and
into
imul
das
lahf
movsl
pop
mov
mov
addr16
outsb
cs
lretw
in
gs
xlat
sub
jecxz
or
test
sub
xor
xorb
sub
xor
jle
dec
push
sbb
jns
outsb
xor
jnp
push
fwait
data16
sbb
movsb
xchg
push
scas
imul
mov
sub
or
mov
push
jno
test
push
mov
add
xor
popa
mov
andb
push
xlat
mov
sbb
mov
and
and
lcall
out
sbb
cs
push
lods
dec
push
xchg
movsb
pop
pop
xchg
pop
sbb
pop
xor
jle
cli
negb
repnz
arpl
xchg
test
cld
test
fsts
and
pop
push
dec
bound
mov
and
or
sub
mov
ss
shl
out
es
push
adc
jns
sub
push
jp
add
imul
icebp
out
fimull
shrb
xor
clc
xor
cmc
repnz
dec
cmpsb
jp
fisubs
and
in
xchg
xchg
bound
es
cmp
mov
idivb
sbb
loop
shlb
push
lods
sub
pop
jecxz
stos
xchg
movsl
sbb
call
sub
ja
bound
adc
jb
leave
jl
sbb
or
repnz
in
xor
out
push
pop
push
sub
or
shlb
daa
and
inc
enter
xchg
push
shrb
setp
mov
push
fsubrl
out
mov
xor
dec
jno
pop
cmpl
loopne
test
sbb
xchg
jp
adc
ror
jge
jp
xchg
cmp
out
ljmp
lods
shrb
sahf
mov
xchg
pop
call
mov
scas
outsb
sbb
sub
inc
ret
sbb
cmpsb
xchg
lcall
repnz
xchg
jbe
sub
test
xor
outsb
mov
shll
rclb
js
insl
pop
cmp
adc
loop
and
fs
cmpsb
ficoml
push
jbe
xor
push
and
mov
imul
xor
std
sahf
mov
mov
pusha
xchg
shl
jle
and
jbe
and
outsb
imul
jb
push
xor
dec
adc
jbe
jnp
and
negb
test
mov
mov
adc
sub
xor
dec
fsubrs
addb
sub
pop
jno
inc
cli
leave
imul
xchg
dec
xchg
jle
aad
inc
push
sti
jae
xchg
jb
push
add
push
jno
shlb
fiaddl
pop
out
inc
push
mov
iret
cmp
mov
or
repnz
xor
movsb
stc
ficoms
and
xor
pop
js
repnz
xor
fiaddl
je
sti
jno
sub
and
or
ljmp
fimuls
mov
adc
movb
loop
push
dec
ret
mov
out
es
or
icebp
lret
pop
jno
sub
mov
jb
mov
bound
push
fsubp
jne
xchg
mov
and
add
xchg
pop
ds
sub
jns
loop
stos
push
mov
sahf
cmpsb
subb
enter
repnz
aam
loop
xchg
scas
sub
and
dec
jbe
and
adc
sbb
mull
bound
jno
mov
out
fidivrl
repz
pop
xor
stos
inc
ficompl
xchg
push
xchg
xchg
adc
or
adc
sbbb
sbb
in
mov
rolb
pusha
sub
fsubr
addr16
sbb
xor
push
orb
push
xor
pop
inc
and
bound
or
imul
in
test
cwtl
jmp
lock
bound
movsl
insb
mov
cmpsb
push
cmp
push
xor
jle
ja
add
andb
loope
and
fldl
test
scas
addl
or
fdivr
and
das
dec
push
lahf
lcall
sahf
pop
fldt
adc
loop
stos
xor
xchg
sub
cmp
es
pop
lods
out
icebp
and
jno
out
pop
cltd
repnz
aam
pop
loope
loopne
jb
cmpsb
and
fstpl
lret
inc
cwtl
out
bnd
inc
fimull
pop
mov
int
outsb
push
xlat
das
stos
push
xor
push
xor
cs
jecxz
decb
xchg
or
pop
sahf
dec
in
adc
push
fbld
sub
std
adc
jge
inc
pop
mov
jae
xor
movsl
adc
fisubrs
inc
sub
push
stos
fisubrl
mov
fsubrs
aas
push
in
movsl
out
jno
push
imul
outsb
xlat
lahf
in
mov
push
cmp
insb
push
testl
fidivl
adc
push
inc
sub
dec
mov
mov
cmp
adc
dec
pop
lcall
std
mov
pop
lods
out
mov
data16
es
jbe
repnz
stos
pop
ds
sub
push
sbb
into
xchg
scas
mov
jb
adc
sahf
out
jno
das
data16
push
ucomiss
push
repnz
xchg
shrl
xchg
lret
push
out
lret
pop
rcll
mov
call
or
data16
xor
push
ja
mov
sbb
jb
cltd
mov
or
dec
stc
pop
dec
ret
jae
or
sub
int
push
xor
adc
icebp
in
icebp
inc
fs
sub
arpl
es
inc
xor
pop
and
jle
dec
pusha
std
stos
inc
mov
push
inc
xchg
imul
mov
rcrb
fldl
push
xlat
mov
mov
push
sahf
sbb
loopne
sub
add
sub
pop
insb
cli
dec
jb
int3
and
fiaddl
sti
mov
pop
xor
movsl
xchg
pop
pop
loop
jbe
rorb
aas
xlat
push
ret
std
xor
xor
cltd
add
push
and
xchg
leave
bound
and
mov
push
nop
push
idivl
shl
sub
cmpsb
adc
pop
jbe
pop
lods
incl
xchg
xlat
mov
cmp
es
mov
xchg
cmpsb
sub
sub
mov
shrb
and
adc
push
std
xor
push
and
shlb
pop
xchg
inc
shr
xchg
or
jecxz
outsb
mov
sbb
inc
or
ss
mov
cwtl
int3
sub
sub
sbb
fildl
jp
scas
mov
jbe
cmp
movsl
sub
call
sbb
jns
mov
and
lahf
stc
mov
sbbl
and
ljmp
sbb
dec
xchg
or
push
mov
adc
xchg
dec
fimuls
mov
jecxz
scas
xchg
push
rclb
out
or
mov
xor
add
push
mov
ja
mov
mov
sahf
pop
or
test
xor
pop
pusha
lcall
add
cs
pop
xor
add
clc
test
adc
mov
cli
xor
pop
jmp
dec
loop
pop
ss
shrl
cld
cmpsl
xchg
test
es
lret
jno
mov
push
push
cmp
pop
cli
insb
cmp
jb
sbb
push
push
jle
ss
xchg
and
xor
adc
mov
mov
inc
lea
push
imul
sti
mov
fwait
or
scas
nop
mov
xor
mov
jno
imul
or
rsm
jp
and
and
lcall
scas
mulb
add
stos
mov
push
movsb
loop
jbe
movsb
push
add
imul
pusha
jp
stos
out
insb
sub
cmp
pop
dec
push
add
out
outsb
push
sbb
aaa
testl
dec
pop
sbb
ss
dec
repz
pop
push
sbb
stos
xchg
es
mov
adc
fstpl
bound
stc
clc
leave
mov
xor
fistps
mov
dec
mov
repnz
jbe
loop
xchg
sub
movsb
adc
cmp
lock
push
adc
adc
movsl
daa
mov
sub
movsl
jp
mov
push
ljmp
cmp
adc
lret
shlb
out
es
pop
sub
xchg
les
dec
xor
lcall
mov
je
nop
stos
jb
test
xor
push
aad
adc
popa
and
push
aas
mov
or
sahf
push
fbld
sbb
pop
push
mov
scas
mov
push
and
sub
loope
outsb
inc
fidivl
or
and
adc
jle
add
sbb
outsb
add
push
out
jle
in
jns
negb
xchg
fdivrl
jno
mov
mov
shrl
lret
cmp
push
add
jbe
jp
push
jnp
dec
push
xor
cmp
dec
mov
xchg
or
jne
mov
cmp
push
push
push
ret
shrb
es
xchg
push
push
fwait
push
insb
out
and
cli
pandn
dec
or
jno
mov
adc
mov
outsb
call
push
int
jns
pop
lcall
cmp
fwait
jl
push
dec
push
test
jle
addl
rorb
xchg
pushf
mov
dec
adc
or
jb
rcll
inc
sbb
xchg
xor
and
push
cmpsl
lock
or
mov
data16
cld
push
pop
xchg
rorb
pop
sub
push
dec
cld
or
xchg
add
scas
das
jno
mov
dec
sahf
xchg
pop
ss
mov
jmp
xor
movsw
into
imul
adc
fisubrl
inc
mov
mov
in
push
jnp
ja
pop
dec
push
adc
fwait
cltd
xor
into
push
call
adc
pop
pop
sub
fwait
sbb
push
cli
dec
mov
cmpsb
out
add
add
je
out
sub
xlat
lahf
and
imul
mov
enter
int
sbb
cs
mov
jns
pop
jnp
jae
pop
adc
cmpsb
in
out
lcall
das
int
inc
rcl
adc
inc
or
in
dec
dec
int
out
sbb
jmp
sbb
push
rcr
adc
imulb
xorb
and
adc
fidivs
push
cld
sbb
push
cmc
cltd
sarb
dec
repnz
jle
outsb
dec
mov
sbb
pop
stos
mov
dec
das
pop
xchg
mov
nop
out
shlb
ja
xchg
test
pop
and
mov
rcl
mov
jl
and
inc
ss
or
ljmp
push
popa
loop
xor
add
push
rorb
imulb
jp
movsl
or
shr
xor
scas
mov
popa
rcl
sarl
lods
push
cmp
mov
mov
es
scas
bound
push
cmpsb
pop
rorb
ljmp
fmuls
fimull
shll
sub
add
cmp
adc
lods
cli
sahf
stos
push
mov
mov
outsb
and
jb
or
push
jns
ljmp
jo
push
rorl
jbe
ficomps
sbb
xchg
fidivs
into
or
sbb
push
cmpsb
push
outsb
mov
stos
xor
cs
sbb
jmp
jbe
cwtl
cmp
add
out
cs
jae
sbb
testb
cld
xchg
rol
std
inc
xchg
stos
pop
cmpsl
bound
mov
int
jbe
stc
out
repnz
xchg
push
scas
sub
imul
push
jbe
pop
sub
and
stc
or
sbb
push
sahf
xor
push
sbb
cmpsb
pusha
mov
jle
inc
xor
pop
xchg
imul
insb
or
pop
push
push
add
stc
xchg
adc
jo
bnd
push
xchg
sbb
cmp
sbb
add
sbb
and
add
lods
adc
or
loop
fisttpll
mov
roll
pop
pop
mov
repnz
and
xchg
pop
enter
orl
fisubs
jno
pop
or
mov
jbe
sub
bound
out
cmp
sbb
mov
mov
scas
adc
dec
sahf
xor
es
jbe
mov
and
push
pop
push
jb
adc
or
popa
addb
popa
dec
xchg
ss
insb
or
inc
xchg
xchg
or
mov
rorb
add
outsb
mov
sub
sbb
push
xchg
or
and
and
mov
mov
imull
push
popa
repnz
push
xor
push
int
or
jp
orl
xchg
push
stc
sahf
imul
mov
jno
jns
adcl
les
or
dec
and
or
xchg
mov
mov
xchg
shlb
ret
mov
push
pop
pop
xchg
xchg
mov
sub
jno
or
jae
mov
in
shlb
or
outsb
jbe
ss
js
shlb
stos
push
cmp
loope
push
push
push
setb
or
testb
test
cltd
rcl
shrb
int
cmpsb
sub
adc
adc
clc
xchg
pop
inc
jnp
call
stos
jns
loop
test
xchg
pop
inc
jb
push
jae
push
mov
mov
cmp
das
or
mov
dec
xchg
mov
lahf
outsb
int3
scas
lds
mov
xchg
dec
out
and
adc
xchg
xchg
cli
mov
call
ss
imul
push
jne
add
mov
push
sti
or
js
in
sbb
sub
lods
fdivl
xor
repnz
test
outsb
pop
jbe
fnstsw
in
xor
xchg
sbb
or
lcall
fcmovnb
pop
cmpsb
mov
xchg
sub
fnstsw
dec
rolb
mov
in
adc
push
negb
push
push
and
add
int
scas
call
lods
xor
and
repnz
cmp
jno
mov
iret
movaps
fistpl
jnp
cli
push
mov
arpl
xlat
sbb
adc
or
movsb
iret
mov
scas
pop
cltd
outsb
xor
movsl
xchg
lods
push
outsb
sbb
mov
popa
dec
push
cs
dec
adc
or
mov
adc
sub
push
dec
mov
dec
pop
jle
rolb
sbb
push
incb
out
out
cmp
sub
arpl
insb
push
sbb
sbb
mov
xchg
pop
out
lods
pop
rcl
push
xchg
add
mov
adc
popa
movsb
pop
pop
or
add
or
dec
push
add
xchg
pop
cmp
sub
fimuls
pusha
int3
push
and
lcall
aad
jb
or
xorl
outsl
jmp
loope
adc
fucomp
mov
mov
out
and
int3
fidivrl
cwtl
adc
fisubrl
sub
push
sub
xorb
popa
ljmp
and
and
imulb
xchg
stos
xor
cmp
jae
stos
push
sbb
mov
jns
outsb
nop
loopne
mov
out
add
sbb
and
sbb
or
adc
das
pusha
mov
mov
cmp
adc
xor
and
dec
or
lret
cmp
jae
fsubrl
adc
test
jp
sub
push
popf
jb
mov
push
std
cmpsb
xor
or
and
stc
sbb
psraw
mov
jle
add
shl
xchg
dec
outsb
cmp
mov
inc
divb
test
fwait
xchg
inc
fidivl
cli
out
cmp
jo
adc
and
stc
shlb
adc
jp
inc
scas
and
loope
sahf
pusha
sbbl
jno
repnz
sub
push
cmp
adc
dec
dec
hlt
and
out
xor
mov
xchg
push
test
sbb
xchg
push
pop
adc
jb
test
rcrl
shlb
adc
push
and
sbbl
cwtl
pop
mov
inc
xor
push
sub
mov
mov
emms
xlat
std
mov
shlb
sbb
mov
sbb
cmpsb
repnz
jmp
add
loope
sbb
ss
int3
add
pop
stos
jp
loop
jmp
push
fcomi
out
bound
sahf
mov
out
lret
xor
pop
lcall
push
xchg
and
adc
add
xor
mov
mov
insb
pushf
adc
lahf
scas
imul
fistps
push
xchg
adc
and
fstp
jp
xchg
sub
mov
or
scas
sahf
out
pop
filds
loope
repz
scas
mov
pusha
sahf
imul
outsb
hlt
es
pop
add
inc
sub
stc
repnz
mov
mov
or
and
or
out
sub
mov
push
stos
aam
data16
inc
loopne
ficoms
inc
sbb
outsb
adc
test
xor
push
push
inc
pop
add
and
stc
mov
pop
or
push
push
sub
rcrl
xchg
cmp
sub
cli
adc
jno
fiadds
and
and
out
out
mov
int
pop
sub
pop
dec
lret
dec
pop
rclb
or
stos
jns
sbb
sti
test
subb
lahf
imul
mov
dec
stos
mov
call
iret
sub
push
imul
cwtl
and
pop
mov
in
push
pop
mov
pop
outsl
rol
add
xor
or
aas
sbb
push
mov
bnd
add
mov
sbb
mov
ss
mov
mov
add
shlb
rclb
mov
fidivl
mov
sub
repnz
mov
lds
xchg
jae
adc
outsb
int
mov
std
in
xchg
lock
jmp
dec
ficoms
and
xor
scas
repnz
mov
std
add
outsb
ja
adc
in
mov
or
pop
hlt
or
cmp
sbb
movsl
push
mov
mov
pop
jae
jb,pn
pop
dec
mov
and
jp
loop
es
jno
mov
stos
incl
cmp
in
lcall
push
add
pop
push
mov
out
sub
dec
lods
xor
pop
mov
mov
sahf
sub
add
sbbb
cmp
and
mov
adc
push
scas
xor
or
mov
icebp
mov
pop
and
xchg
rcrl
add
ss
or
lods
icebp
cmp
adc
outsb
xchg
dec
pop
and
push
or
dec
loop
jp
xor
leave
sub
and
inc
push
iret
push
outsb
or
shlb
pop
ret
mov
in
and
aam
jae
ljmp
jno
cli
jae
xchg
adc
push
push
adc
jle
cli
cltd
repnz
add
inc
scas
push
imul
sbb
inc
mov
ljmp
push
iret
lcall
push
cmp
pop
mov
es
ret
lret
data16
scas
stos
mov
call
int
push
call
int
data16
or
cmpsb
and
nop
jbe
sub
cmpsb
adc
ficomps
push
and
push
mov
push
sbb
or
xchg
push
xchg
push
dec
leave
mov
inc
leave
repnz
outsb
loop
push
test
data16
push
jle
sbb
cmpsb
mov
jno
xor
je
ds
and
mov
and
push
adc
scas
xchg
fstl
imul
cmpsl
sub
cmp
mov
and
or
cmpsl
fldcw
add
fsubp
fisubrs
sahf
cmc
ljmp
outsb
into
xor
inc
push
loop
xchg
and
repnz
test
test
xchg
sarb
or
ljmp
int3
sbb
xlat
mov
scas
ss
xor
cmp
mov
or
pop
jno
push
shrl
mov
dec
data16
push
mov
ret
or
add
pop
imul
into
sar
enter
aas
xor
mov
or
add
leave
stc
mov
loop
mulb
cltd
sbb
xor
mov
dec
mov
out
push
mov
and
js
lahf
stos
sbb
bound
or
xor
sbb
cmpsb
xchg
cmp
push
adc
dec
mov
or
xor
cs
test
jle
loop
inc
jecxz
pop
in
pop
sbb
shrb
ja
lds
cmp
mov
and
divb
xchg
scas
mov
adc
pop
push
out
xchg
sub
arpl
dec
cltd
dec
cmp
mov
ja
imul
hlt
ja
or
pop
xchg
push
sub
loop
clc
popa
in
loop
pop
pop
push
jle
inc
leave
push
or
shr
push
bswap
addb
xchg
xchg
sub
mov
loop
imul
xchg
or
mov
or
jg
dec
and
mov
dec
loop
pop
pop
sub
ja
cmp
and
leave
mov
int
gs
push
dec
mov
xor
mov
pop
out
push
hlt
or
push
mov
bound
ljmp
movsl
cs
push
jb
adc
cmp
adc
cmp
mov
and
mov
mov
mov
sbb
ret
jnp
mov
push
cmp
not
adc
xor
mov
sbb
and
outsb
push
lea
es
or
dec
rorb
lret
push
dec
cmpps
repz
test
xchg
push
sbb
cmp
aas
repnz
add
mov
fsubs
pop
push
out
adc
or
jmp
jb
sbb
push
lea
cmpsl
jp
leave
lcall
sbb
aam
sub
and
stc
sbb
xchg
cwtl
loop
inc
lcall
sub
cwtl
enter
adc
jno
es
inc
push
or
xor
stc
mov
data16
sbb
inc
xchg
imul
jp
and
fcmovbe
mov
outsb
sbb
sub
xchg
push
pop
shll
lods
push
push
sbb
xchg
push
mov
scas
sub
aaa
mov
xor
outsb
jge
jb
fimull
bound
sub
and
in
cmp
sahf
in
cmpsb
mov
ficoms
xor
adc
insb
fcompl
sbb
movsl
nop
add
aam
pop
leave
imul
mov
xor
subb
aam
or
mov
xchg
mov
pop
adc
je
push
jno
pop
inc
shrb
pop
and
outsb
jne
ljmp
rcr
or
sub
pop
and
std
stc
jle
leave
sub
bound
loop
cmp
ficompl
rclb
in
mov
adc
sub
xor
mov
dec
fisttps
cmc
aam
push
mov
aam
and
aam
imul
sbb
jmp
dec
jle
shlb
repnz
push
int
sahf
scas
lret
cmp
xchg
notb
stos
mov
mov
xchg
cmpsb
loop
mov
repnz
jg
scas
jmp
push
cmp
cmp
mov
and
stc
xor
jb
mov
xchg
ficompl
and
popf
fbstp
or
jmp
into
adc
add
push
jle
js
pushf
jb
loope
mov
add
sub
dec
int
pop
sub
adc
mov
dec
push
bound
adc
repz
fmul
inc
outsb
sbb
mov
scas
mulb
shlb
mov
xchg
stos
xor
cmp
movsb
sahf
iret
pop
push
cmpsb
fimull
testb
test
sbb
and
sub
daa
lods
cmp
jbe
ss
xor
arpl
fs
dec
out
ficomps
jle
xor
mov
repnz
cmpsb
push
aam
frstor
cmp
push
scas
jmp
jp
pop
push
dec
push
cmpsl
xor
xor
jns
scas
pop
or
mov
dec
pop
stos
sbb
ss
popf
sub
jmp
jne
stos
and
mov
in
popa
jbe
out
pop
jno
imul
xchg
inc
xchg
stos
xchg
mov
test
or
adc
mov
xchg
popf
jbe
jb
mov
xor
xchg
mov
adc
sub
jp,pn
imul
popw
pop
push
jge
popa
fldt
mov
hlt
add
pop
or
pop
push
imul
ret
ret
cmc
gs
sbb
jle
call
testl
or
xchg
loop
lahf
mov
test
imul
es
pop
adc
mov
sub
dec
shlb
dec
and
stc
push
cli
notb
and
inc
xchg
lcall
cmp
mov
std
repnz
xchg
sbb
and
mov
out
sbb
add
jne
adc
orb
pop
ljmp
rclb
out
int
and
xchg
shr
lcall
or
push
sub
or
xor
dec
adc
stc
and
add
or
pop
sub
mov
outsb
or
ljmp
leave
scas
lcall
jp
jl
sbb
pop
gs
cs
push
and
push
adc
pop
ss
mov
cs
aaa
test
sub
xchg
fidivrl
pusha
lret
aam
scas
mov
outsl
mov
cs
push
pop
mov
imul
mov
pop
jns
add
dec
pop
lcall
inc
push
xor
push
int
mov
lock
or
ljmp
cli
lds
xor
sbb
js
scas
jae
cld
xchg
repnz
out
dec
lods
mov
movsl
outsb
sub
xor
cwtl
cmc
push
dec
out
mov
sub
mov
jb
std
jbe
call
ljmp
mov
into
in
push
jae
test
inc
in
scas
sbb
in
xor
push
addr16
out
jp
sub
adc
cwtl
xor
pop
je
lcall
sbb
xchg
dec
lea
cmc
sbb
lcall
sbb
ds
xchg
divb
or
fiaddl
cli
cmpsb
sub
mov
es
ss
outsl
push
fiaddl
popf
mov
dec
out
mov
xchg
adc
add
push
xlat
sbb
aam
sub
push
ret
scas
push
popa
push
repnz
and
push
mov
loopne
push
mov
jp
ljmp
pop
dec
dec
pop
nop
mov
mov
out
pop
push
insl
adc
sbb
cs
inc
mov
outsb
ficompl
or
sti
jae
insl
xchg
cmp
cmp
dec
pop
jle
fisubs
push
jb
cli
xchg
orb
popf
shrl
pop
mov
adc
shlb
mov
or
adc
lcall
insb
fldl
adc
mov
clc
arpl
out
adc
push
inc
push
insl
scas
mov
push
test
add
pusha
shl
ljmp
and
lcall
clc
or
aaa
mov
daa
es
pop
stos
jno
nop
sbb
jb
xchg
mov
sbb
rorb
sbbb
enterw
push
std
fiaddl
push
sahf
testb
sbb
xchg
xchg
and
inc
cmpsb
pop
popa
test
cs
sbb
inc
mov
arpl
push
sbb
in
jle
add
jmp
jae
pop
mov
orb
pop
outsb
and
xchg
adc
ljmp
sahf
scas
fisttps
jmp
jmp
rorb
xchg
ds
jle
pop
mov
or
lcall
inc
push
xchg
push
xchg
or
cltd
out
sbb
sbb
fs
dec
imulb
and
push
and
sbb
out
movsb
xchg
add
mulb
mov
and
jns
nop
out
sbb
mov
mov
and
pop
mov
ss
cmc
sbb
int
loop
sbb
outsb
dec
adc
test
or
loop
scas
sbbb
mov
adc
pop
adc
hlt
or
out
jg
jp
fimuls
sub
and
cwtl
pop
sbb
popa
daa
push
xor
pop
lret
scas
add
lcall
mov
or
sbb
pop
jae
add
pop
stos
sub
cld
jle
jns
out
sub
push
cli
into
les
das
je
dec
setle
das
cmpsl
xor
fsubs
scas
and
mov
push
push
push
sbb
mov
push
or
out
jbe
scas
scas
or
mov
xor
jp
sub
or
mov
popa
ret
mov
xor
adc
movsl
shlb
push
jno
sbb
cld
push
jne
rolb
jg
or
adc
mov
jle
rclb
and
push
sbb
mov
outsb
jecxz
mov
xor
cmp
fwait
and
fmuls
cs
pop
fwait
popa
test
push
xchg
jb
push
arpl
test
es
out
or
pop
aam
xchg
rcrb
xor
mov
aas
ss
sbb
mov
adc
or
pop
push
out
jb
sbb
sub
cmp
imul
out
pop
add
xor
pop
jb
pop
aam
das
rcr
push
dec
xchg
sbb
stos
jnp
mov
cmpsl
mov
mov
push
inc
in
leave
sbbb
sbb
and
stos
push
jp
mov
pop
inc
pop
rcrl
icebp
cltd
or
aas
xchg
sahf
sub
sbb
pop
adc
movsb
insb
xor
pop
push
shrb
mov
rcll
and
fs
stos
arpl
pop
sub
cli
inc
sbb
or
add
rolb
mov
pop
cmp
xor
push
cltd
mov
popl
out
mov
cli
orb
push
push
mov
sub
sbb
scas
ret
in
fsubr
loop
sbbl
and
jle
mov
ljmp
mov
mov
leave
jne
xor
test
and
push
data16
incb
rorb
or
out
fistpll
hlt
cmp
cmpsb
pop
movsl
sahf
and
jbe
sub
ljmp
xor
push
or
std
or
or
xor
cs
shr
ja
xchg
jnp
enter
push
mov
popa
js
adc
cmovle
loop
scas
data16
inc
pop
mov
and
pop
je
pop
cmpsb
mov
or
jle
aam
sub
xlat
or
out
pop
xor
sbb
repnz
dec
push
adc
push
jno
push
pop
dec
data16
stos
xchg
jb
mov
pop
gs
sar
outsb
pop
sub
out
push
add
xlat
fdivp
and
and
out
xchg
dec
jle
xchg
popf
std
movl
in
cmpsl
xor
push
sub
pop
xor
push
dec
lcall
fstpl
repnz
sbb
push
scas
mov
insl
sub
negb
dec
outsb
fs
sbb
loop
mov
xchg
rcr
or
fs
pop
mov
test
movsl
shrb
in
ljmp
jno
and
jmp
ja
sbb
mov
pop
lock
add
and
ja
and
jno
pop
imul
pop
sub
gs
divl
adc
lret
adcb
shrb
jbe
push
xchg
out
push
sbb
mov
inc
movsl
mov
js
xlat
push
dec
push
int3
not
push
fwait
ja
loope
mov
nop
push
scas
gs
out
pop
loope
std
push
mov
ljmp
sarl
lea
and
in
fisubrs
mov
popa
push
es
sub
cmp
out
sub
and
dec
and
pop
and
hlt
mov
push
bound
xchg
data16
and
popa
out
sbb
bound
aam
out
sbb
vlddqu
dec
push
jmp
adc
cs
fs
xor
jb
push
push
bound
sub
push
or
das
loopne
rcrb
xor
cld
cmp
mov
fisubs
movsl
les
outsl
push
enter
mov
jb
stos
pop
mov
cli
mov
add
pop
pop
outsb
inc
pusha
movsl
insb
pop
in
addr16
and
or
inc
dec
mov
jp
pop
jo
dec
mov
xchg
sub
inc
rclb
jp
movsb
movsl
bound
testb
sbb
popf
std
inc
cltd
xchg
xchg
repz
cmc
loop
pusha
jecxz
mov
mov
das
popa
xchg
cltd
mov
shlb
xchg
push
sbb
popf
mov
movsl
repnz
sahf
pop
das
or
scas
mov
fimuls
jbe
cld
jne
ds
outsb
lds
xchg
xor
and
push
mov
das
xor
jb
outsl
cs
adc
hlt
push
lock
and
repnz
mov
pop
xchg
add
mov
sbb
loop
call
jp
fisubs
or
xchg
leave
dec
jns
sub
test
jecxz
js
dec
sbb
xor
xchg
mov
lcall
mov
jl
or
into
repz
repz
lcall
jae
iret
inc
push
out
pop
and
or
inc
inc
push
mov
push
push
mov
push
data16
xchg
movsl
outsb
pop
xor
jb
and
cltd
or
arpl
sbb
int
mov
xchg
sahf
outsb
push
jp
into
repz
scas
push
outsb
push
cltd
jle
xchg
cmp
ja,pn
add
enter
fimuls
ficoms
lcall
push
inc
push
jp
lods
adc
scas
and
cltd
pop
push
dec
bnd
mov
jno
es
jp
ja
jne
push
negb
sub
mov
jp
push
push
cmp
mov
or
push
mov
pop
cmpsb
push
enter
outsb
cltd
lcall
fisubrs
mov
cmp
leave
pop
cli
add
sbb
out
into
lret
scas
mov
mov
aaa
lcall
adc
aas
mov
jbe
jno
mov
and
push
sbb
mov
jae
imul
bound
xchg
test
inc
lcall
jl
xor
or
xchg
data16
mov
out
sarb
jb
test
jmp
test
rcrl
movsl
jbe
lods
xchg
cmp
sahf
lfs
in
int3
xadd
lahf
out
sub
mov
scas
ret
setae
lret
repnz
push
and
push
inc
sub
adc
imul
negb
shll
or
push
mov
outsb
xchg
out
pop
sub
mov
iret
std
inc
faddp
loope
mov
imul
loop
pop
cli
rcrl
pop
ss
pop
jl
sub
das
loopne
movsb
lret
jae
imul
out
push
ljmp
sub
mov
cmp
jmp
mov
xorb
out
mov
scas
fstpt
pop
testb
rorl
stos
and
inc
aam
add
jle
clc
add
shrl
or
mov
inc
call
stos
rcrb
adc
add
push
lea
outsb
push
sbb
out
xor
jge
jo
xchg
cmc
imul
fidivrl
push
cmpsb
sub
sbb
mov
into
sahf
cmpsl
or
out
inc
sub
in
xor
outsb
testb
fwait
xor
scas
push
outsb
and
jbe
inc
adc
push
and
int
ror
sub
push
inc
mov
xchg
cmpsb
movsb
push
adc
in
scas
sub
dec
outsb
xor
adc
dec
push
mov
rcl
or
or
sbb
loope
mov
inc
sahf
mov
scas
loope
or
adc
push
sbb
xor
and
lcall
dec
insb
xchg
test
pop
sbb
pop
or
pop
cmp
lds
pushf
pop
outsb
xor
in
stos
mov
stos
stos
xchg
sub
stc
lds
pop
add
adc
jp
data16
shrl
add
push
outsb
sub
loop
push
inc
lahf
sub
sub
mov
inc
data16
push
mov
es
xchg
int3
pop
jb
ss
mov
test
popa
xchg
imulb
dec
pop
aam
or
sbb
adc
dec
or
outsb
pop
scas
iret
jbe
inc
adc
scas
push
sbb
cli
movsl
mov
es
dec
cvtdq2ps
mov
xor
sahf
adc
jmp
jle
adc
lds
or
ss
mov
pop
ficoms
into
shlb
xor
call
cmp
lods
push
pop
test
loop
or
cmp
dec
pusha
sub
mov
xchg
jbe
add
jmp
or
sbb
ficoml
dec
iret
sete
rorb
arpl
push
cs
loop
ja
sbb
scas
cmpb
cmp
sub
scas
mov
xchg
mov
sbbb
push
addr16
push
aad
sbb
adcl
out
push
ss
push
lcall
xor
push
adc
add
xor
sub
jb
sbb
sahf
shlb
cmc
inc
ljmp
xor
push
ficoms
xor
push
es
and
cs
adc
out
outsb
sbbb
rorb
stos
xor
mov
mov
push
popa
jbe
repnz
xor
adc
aam
bound
mov
ds
stos
jne
adc
add
movsl
es
aas
sub
and
out
lds
push
bound
push
mov
dec
and
stc
outsb
push
mov
adc
into
xor
add
dec
or
lds
mov
pop
loope
pop
dec
loope
mov
cmp
rcrl
jmp
add
rcrb
or
and
stc
push
cmp
sbb
aam
dec
sbbl
sbb
jg
adc
rorb
sub
cltd
mov
pop
imul
fisubs
mov
jle
sahf
loop,pt
scas
sub
sub
loop
enter
mov
push
outsl
ss
push
push
lods
push
jle
mov
and
mov
add
scas
xor
call
jno
bound
jno
jns
pop
adc
sti
sahf
aad
std
pop
loope
add
fisttpll
add
push
jg
shrb
dec
jae
dec
xor
push
push
shrl
scas
sub
add
sbb
rclb
xchg
sub
push
push
and
shlb
loopne
cltd
out
cltd
jb
adc
adc
subb
scas
sbb
jno
dec
dec
push
or
pusha
fst
xchg
adc
repnz
add
sbb
mov
loop
cs
in
cmp
mov
scas
cmp
outsb
cli
and
loopne
std
mov
xchg
adc
addr16
jecxz
mov
push
shlb
js
adc
insl
or
int
add
cmpsb
pop
mov
cmp
cld
xor
sub
and
push
pop
enter
aaa
jo
cltd
xchg
adc
arpl
pusha
xchg
cmp
das
and
mov
stc
imul
imul
loop
loop
inc
int
es
popa
stc
repnz
mov
adc
cmp
movsl
sub
push
mov
jbe
rcrl
cli
adc
bswap
mov
stc
std
pop
jno
add
and
jo
xor
sub
or
xchg
out
cltd
sub
or
mov
loop
scas
stc
or
inc
push
mov
jbe
push
xchg
fnsave
and
push
sbb
scas
mov
ficompl
icebp
push
pop
xchg
sbb
xchg
inc
push
jbe
data16
pushf
xchg
fmulp
push
jne
sub
popf
push
cmp
mov
push
dec
sub
jno
or
adc
and
push
mov
stc
adc
xchg
cli
jp
xchg
jle
js
and
adc
push
sbb
or
shl
sbb
cs
sbb
das
jmpw
push
dec
pop
arpl
orb
test
xchg
dec
test
or
xor
push
cmpsb
adc
pop
mov
je
sub
adc
out
jp
mov
push
or
xchg
rclb
int
push
pushf
and
xchg
fisubrl
daa
test
data16
repz
jae
jae
dec
daa
loop
scas
stos
xchg
or
into
shll
je
jb
mov
mov
dec
xorl
sbb
xchg
mov
aas
test
push
imul
fucomp
in
push
scas
push
jns
push
push
pop
inc
xchg
lods
inc
cmp
fsubrp
push
rolb
push
jp
sub
shrb
pop
test
div
push
dec
dec
arpl
xchg
std
es
or
dec
xchg
push
test
into
loop
stos
jb
sub
rorb
fisubrl
jbe
push
pushf
ss
into
xor
and
push
out
divb
mov
pop
cmp
sub
push
outsb
cmp
sahf
mov
ljmp
jns
and
jnp
mov
xor
pop
test
or
xlat
jb
dec
scas
cld
in
or
stos
scas
xor
ss
jmp
jl
shl
outsb
mov
push
arpl
cmp
aas
out
test
mov
aaa
jo
loope
xor
mov
aas
push
jbe
mov
lds
rorb
ljmp
add
jle
insb
out
adc
push
adc
adc
and
jp
loop
xor
add
push
ret
dec
push
lods
gs
out
outsb
xchg
ffree
ljmp
mov
rolb
stc
in
xor
mov
push
add
xchg
stc
in
adc
pop
test
lret
mov
sub
push
lea
divb
imul
jae
sub
cltd
sub
cmpsl
sahf
sub
lods
loope
aam
sub
jle
and
scas
mov
sub
push
jae
adc
push
into
fdivrs
jb
cs
sbb
in
popa
mov
mov
lcall
cltd
jno
sbb
pop
push
inc
add
push
sbb
pop
and
aaa
lods
outsb
cs
cltd
ficoml
outsb
sbb
and
insb
and
sub
cs
or
xchg
sbb
or
mov
mov
cld
pop
cmpsb
scas
imul
jp
dec
mov
or
mov
es
push
sub
xorb
xorb
hlt
test
bound
push
scas
jle
xlat
xchg
adc
mov
dec
adcb
cmp
fsubrs
push
adc
testb
pop
fldenv
or
or
ss
cmp
jns
imul
or
es
mov
sbb
jno
push
mov
cld
pop
bound
jbe
jno
dec
repz
push
jle
push
pop
cmc
jp
jl
pop
dec
popa
lcall
iret
mov
pop
cmp
push
push
sbb
rolb
sbb
mov
sahf
repz
scas
mov
jae
ret
leave
hlt
push
movsl
out
sub
xchg
out
pop
enter
int
push
nop/reserved
sbb
outsl
loopne
mov
lea
loop
in
pop
pop
cld
popf
jb
hlt
xor
arpl
mov
jbe
test
mov
in
inc
inc
mov
shrb
imul
orl
inc
jb
cmp
sub
mov
cltd
mov
xor
sub
push
jb
stos
neg
jp
iret
mov
clc
ss
dec
imul
jle
cmp
neg
jns
jle
push
sbb
ss
shll
jle
xor
sarb
iret
push
mov
mov
push
out
lods
lea
mov
dec
inc
push
adc
fisubrl
sbb
jle
mov
fisubrs
popa
push
jbe
pop
cmp
mov
imul
sbb
xchg
dec
cltd
and
leave
dec
jmp
ficompl
sub
mov
pop
testl
or
xor
sbb
cltd
or
push
and
jp
push
jo
add
arpl
xchg
frstor
movsl
addb
cmp
out
sub
sub
in
jmp
mov
stos
pusha
gs
ss
push
jp
and
int
scas
xor
xchg
mov
mov
pop
jg
sbb
out
rorb
and
out
mov
out
cmp
aad
push
adc
aas
outsb
mov
xchg
push
pop
xor
jbe
mov
repnz
es
push
into
jg
jbe
push
stos
pop
dec
mov
mov
sbbb
es
sub
loopne
andl
cmc
or
pop
ds
scas
xchg
jne
push
xchg
repnz
jno
stos
jno
arpl
jb
movaps
lods
mov
ja
inc
outsb
push
push
outsb
push
adc
fadds
mov
lcall
call
adc
lret
pop
mov
mov
testb
pop
and
adc
or
jg
push
jle
jle
jns
xchg
dec
je
loop
and
cs
ss
mov
es
imul
lret
push
cmpsb
popf
or
clc
mov
and
lahf
loopne
aad
jg
mov
add
ss
cmpsl
jno
mov
pop
das
dec
cmp
cltd
hlt
aam
int
pop
dec
mov
fistpll
test
scas
and
add
add
in
testl
sbb
inc
jp
sbb
jp
in
pop
sub
addr16
jecxz
outsl
xchg
push
push
lret
adc
sub
in
xor
enter
mov
pop
mov
push
mov
dec
sbb
mov
push
inc
jns
or
enter
movsl
push
cmpsb
fmulp
add
sti
fnstsw
cmp
mov
mov
pop
cmp
cs
mov
cmpsl
jb
cwtl
in
fidivs
jge
psubsb
cs
sbb
repnz
pop
adc
outsb
adc
es
scas
imul
xchg
out
arpl
push
sub
inc
cmpsb
sbb
scas
add
outsb
add
sarb
xor
push
sub
or
push
ss
setbe
imul
pop
push
notb
push
in
sub
push
or
pop
jb
or
psrlw
cmpsb
cmp
xor
stc
adc
adcl
mov
jo
sub
mov
pushf
push
mov
ss
dec
dec
push
stc
andb
mov
loop
loope
dec
lret
pusha
or
push
mov
ja
sbb
cmp
aaa
mov
pop
mov
aaa
stc
mov
call
add
jno
out
push
xchg
xlat
aad
push
jae
jns
adc
inc
push
pop
jle
popa
add
fadds
mov
xchg
push
cmpsb
or
ljmp
sub
scas
in
jnp
ds
cmp
mov
adc
stos
outsb
push
loop
sar
stc
cs
sub
jne
dec
cwtl
mov
sub
rcr
and
jp
ss
lcall
repnz
lock
jecxz
into
scas
scas
xor
frstor
test
cld
pop
inc
push
pop
mov
les
loop
xchg
xor
inc
scas
es
adc
fcmovbe
jns
push
adc
add
mov
dec
xchg
mov
in
sbb
out
shlb
mov
out
xchg
les
shl
pop
in
push
and
adc
movsb
sahf
shlb
add
lahf
fnsave
or
scas
hlt
mov
stos
popa
aad
mov
shlb
cltd
stc
cltd
cmp
jg
add
push
insb
or
inc
push
mov
loopne
rclb
mov
adc
jb
out
mov
out
xchg
xchg
mov
rclb
sahf
xchg
cmpsb
aaa
out
scas
test
mov
push
add
les
push
call
testb
mov
lcall
fstp
adc
jns
fidivl
sub
mov
insl
sub
rol
cmp
scas
imul
jle
or
fidivrl
mov
sbb
adc
adc
mov
sbb
mov
push
in
loope
mov
mov
movsb
loopne
outsb
push
test
jp
pop
push
mov
insb
inc
mov
dec
xor
dec
out
loop
jno
testl
data16
push
add
shrl
shrb
push
add
inc
xchg
mov
bnd
jno
movb
adc
cmc
test
dec
xor
out
mov
jl
dec
or
cmovo
xor
xchg
sahf
add
ja
test
or
xorb
cmpsb
mov
dec
call
pop
aas
jle
mov
and
push
mov
pop
sub
adc
adc
mov
das
jo
xlat
cli
xor
push
fnstenv
mov
sub
xchg
mov
mov
pop
movsl
repnz
dec
scas
mov
jnp
sbb
xchg
je
mov
lret
or
cmpsb
in
sbb
mov
sbb
push
stos
or
fildll
fisubs
ja
stos
loop
je
xor
or
xchg
xchg
loopne
sahf
jnp
xchg
pop
fldl2e
dec
lds
in
jmp
cmp
dec
fs
add
out
mov
sahf
xchg
xchg
mov
stos
adc
fimull
out
orb
pop
outsb
sub
xchg
sbb
cmp
jbe
jecxz
sbb
jno
fisubrl
mov
mov
inc
sub
xchg
ja
pop
cmp
mov
pop
jbe
popa
mov
out
pop
ljmp
inc
pop
mov
inc
ljmp
dec
fucomp
leave
sbb
and
cld
ud2
das
rcll
in
dec
xchg
mov
sti
mov
loop,pn
mov
jle
add
das
mov
loop
mov
mov
std
mov
cltd
push
rorb
dec
out
or
dec
popf
cmc
addr16
mov
es
or
inc
dec
scas
jbe
fidivrl
es
pop
sbb
push
push
lods
out
adc
push
xor
cmp
xchg
dec
xor
sahf
inc
mov
push
and
xchg
mov
xchg
fstpt
std
cmp
out
jle
inc
into
mov
sahf
mov
push
dec
push
lret
add
add
adc
leave
push
adc
and
sbb
rcl
cs
xor
fsubp
es
leave
stc
xchg
and
sahf
mov
clc
jae
fmuls
subl
gs
pusha
xor
sarb
push
sbb
dec
cmpsb
lret
push
push
adc
and
adc
fiaddl
sahf
aaa
icebp
shrb
cmp
shl
int
lcall
mov
hlt
sbb
into
xchg
push
jl
stc
aam
jle
mov
aas
enter
out
and
xor
push
xchg
out
pusha
or
add
mov
mov
push
data16
jbe
pop
fisubrl
jne
lret
jp
pushw
sub
xchg
das
ret
stos
sbb
cmp
leave
jp
sbb
stc
pop
xchg
sbb
lret
in
xchg
outsl
adc
aad
testb
sub
cli
loope
ss
lahf
sub
sbb
inc
shr
dec
pop
jle
stc
mov
pop
jge
movsl
xchg
loop
adc
and
pusha
push
xchg
rcl
sub
xor
mov
add
xchg
adc
and
lods
into
sbb
out
outsb
popa
mov
push
fildl
mov
sub
repz
popa
rcll
push
aad
pop
leave
jb
and
adc
pop
out
xlat
or
je
xor
push
push
pop
mov
cs
sbb
push
jbe
pop
inc
and
sahf
scas
clc
add
push
pop
scas
das
out
repnz
push
loope
xor
dec
cmpsl
or
negl
mov
shrb
xor
shl
into
mov
movsl
adc
scas
push
loop
rolb
add
notb
mov
lret
mov
xchg
sbb
inc
push
aas
xchg
not
lcall
shll
push
push
outsb
dec
pop
dec
sub
pushf
inc
addr16
das
js
push
adc
pop
xchg
insb
cmpsl
or
out
push
mov
popf
xchg
cmp
mov
cli
out
lahf
push
dec
adc
sub
sbb
int
loop
es
gs
dec
and
js
push
shll
push
xchg
cs
in
or
sbb
mov
bound
sub
add
movb
xchg
in
cmp
lea
pop
bound
jle
insl
rcr
sub
sbb
cmp
xchg
leave
or
lcall
xor
rorb
cli
pop
add
xchg
and
push
int3
pusha
scas
dec
pushf
and
xchg
and
bnd
dec
sub
mov
jne
popa
adc
push
lret
mov
scas
lods
popa
xchg
ss
sbb
pop
pop
push
arpl
mov
sbb
in
xchg
push
xor
sbb
jbe
xchg
out
push
fidivs
or
mov
sbb
loop
pop
cmp
testl
bound
rorb
adc
push
jb
imul
xchg
ss
inc
loop
push
jl
push
pop
jb
sbbb
dec
rorb
ss
rclb
sbb
cmp
push
mov
adc
in
popa
mov
cmc
rclb
lcall
and
scas
add
stc
mov
mov
and
pop
pop
adc
ljmp
push
push
xor
mov
push
fs
sub
in
pop
ret
bound
loop
insl
ds
or
push
push
and
jno
mov
sub
sbb
push
cmp
testl
std
imulb
push
jae
push
sub
loopne
mov
imul
xor
jns
pop
push
sub
xor
jle
popa
jle
xor
rcrb
sbb
jns
and
cs
push
dec
sub
pmulhw
xchg
xlat
pop
into
clc
orb
sub
pop
adc
gs
sub
mov
adc
dec
packsswb
mov
out
scas
push
and
ljmp
inc
and
sub
daa
cli
cmpsl
ja
jge
xor
in
cmpsb
notb
jns
test
dec
add
mov
sbb
sbb
sub
fdivr
leave
stc
lahf
outsb
jge
push
push
xchg
stos
add
pop
xchg
add
jge
xchg
push
out
nop
mov
mov
mov
mov
cli
mov
mov
lret
div
xchg
mov
sti
mov
sbb
jns
repnz
cmp
test
adc
sbb
adc
cmp
and
or
add
cmpsl
ljmp
fsub
dec
jl
jo
scas
sbb
or
pop
stc
jbe
inc
mov
out
dec
pop
push
ss
sbb
imulb
sbbb
inc
sahf
fimuls
or
and
cs
adc
sub
repnz
adc
push
pop
xchg
or
mov
divb
ss
push
loop
xchg
mull
out
push
jle
or
bnd
sub
in
or
dec
pop
mulb
jg
mov
shll
repnz
cs
xor
jp
dec
sub
les
or
adc
mov
leave
shr
lods
test
cmpsl
adc
adc
and
sbb
repz
out
mov
adc
pop
hlt
cmp
scas
lcall
push
ja
xor
or
and
pop
andb
stc
adc
pop
cs
cmp
jp
cmp
aaa
mov
sarb
testb
ljmp
dec
sahf
xor
cmp
and
xor
stos
shrd
xor
rcr
lock
pop
cltd
out
pop
jle
sub
xor
fimull
cs
ficomps
or
jne
out
push
push
dec
movsl
or
gs
dec
cmp
xor
push
cmp
icebp
out
rclb
fiaddl
data16
decb
orb
and
sbb
lea
aam
mov
pop
xchg
ljmp
dec
jle
push
bound
sub
sahf
add
cli
addr16
sbb
cmpsb
ja
jbe
ret
jmp
lods
outsb
ret
add
fidivs
xchg
scas
xor
jp
and
and
jmp
mov
mov
xor
mov
jp
fs
mov
push
adc
sarb
imul
sbb
out
xchg
out
and
sub
add
lea
cmpsb
sub
adc
mov
mov
push
out
sub
and
ds
fcomps
fisubs
aam
mov
sbb
adc
jbe
xor
push
stos
and
push
pushf
or
pop
and
jno
pop
push
je
mov
cmp
mov
fmull
outsb
mov
push
mov
add
jp
cs
adc
cmpsl
fisubrs
shl
jp
jmp
sub
push
adc
pop
leave
xchg
inc
adc
cld
js
int
inc
iret
cmovb
ss
dec
fidivrl
call
bound
mov
sahf
sahf
into
lcall
loop
sub
mov
leave
mov
cmp
push
ljmp
xchg
adc
xor
cli
adc
push
ljmp
push
stc
jle
into
cmpsb
xchg
sbb
sahf
shrb
push
push
orb
ss
and
cmp
fistpl
fs
add
sub
fidivrs
add
push
inc
sbb
mov
scas
and
aad
bound
add
andl
push
xchg
pop
idiv
ret
movb
shl
push
push
pop
movsl
jo
nop
pop
ficomps
andb
cmpsl
jno
outsb
pop
rclb
xchg
push
outsl
ficomps
cs
jbe
cmp
xchg
cmp
into
lods
or
movd
lock
cmpsb
outsb
push
push
stos
out
in
mov
cmp
mov
out
cmp
outsb
rcrb
decl
imul
adc
mov
push
in
scas
and
push
shlb
outsb
add
pop
sahf
push
push
mov
cmpsb
repnz
orps
mov
leave
jp
js
pop
rolb
shll
cs
mov
std
pop
sub
aaa
sbb
fidivs
stos
pop
test
jp
add
xor
dec
xchg
push
pop
mov
add
sti
push
mov
push
dec
sti
and
and
dec
push
cli
lcall
sub
push
pop
jge
mov
cs
mov
sbb
xchg
jle
and
out
jb
dec
and
les
cmc
shr
outsb
dec
adc
pop
mov
sub
cmp
jmp
bound
adc
inc
imul
repnz
adc
mov
jle
cmpsb
xchg
pop
lcall
outsb
mov
xor
push
jp
pop
int
pop
cmp
nop
loopne
and
xlat
addr16
int3
bound
jle
movsl
fcmovb
pop
inc
mov
outsb
xor
fs
push
or
nop
xor
push
or
and
jb
sub
into
mov
into
xor
cli
add
out
cltd
push
xchg
push
repnz
cmpsb
mov
push
xor
sub
adc
xchg
out
cmp
pop
pminub
inc
sbb
sbb
and
pushf
jbe
mov
out
lcall
inc
xchg
arpl
cwtl
aam
aas
cmpsl
jne
add
popa
add
imul
adc
les
xor
dec
xor
sbb
or
xor
cmp
sahf
or
cltd
xor
jno
cli
loop
scas
xor
push
and
sub
xchg
push
dec
jle
fmulp
jbe
mov
dec
or
push
adc
das
jns
stc
sbb
fistpll
pop
sbb
ljmp
scas
jb
sbb
adc
dec
jbe
lock
sub
aaa
mov
scas
pop
ss
fstpl
mov
add
cwtl
and
in
cs
out
movmskps
outsb
sub
bound
pop
xor
adc
sar
push
xchg
in
movsl
inc
loop
scas
pop
adc
clc
scas
je
mov
mov
shl
scas
mov
xchg
inc
push
or
into
cmpsb
repnz
or
dec
cmp
scas
pop
xchg
outsb
inc
inc
sub
movsl
sub
mov
or
xchg
sub
dec
adc
adc
ljmp
inc
xchg
adc
push
xor
cmc
test
xchg
ds
add
ss
and
jp,pn
ja
ficompl
in
pop
xchg
fisttpll
cs
push
fmull
out
scas
sbb
jmp
cmp
cmp
stc
add
and
sbb
dec
inc
test
leave
loop
lcall
daa
std
sub
ljmp
adc
pop
or
push
jbe,pn
cltd
arpl
outsb
or
sub
sub
in
orl
in
jp
imul
out
fsubrs
sahf
adc
add
adc
xchg
xor
jns
and
in
jl
idivb
adc
int
cmpsb
add
jbe
add
sbb
xor
xchg
push
add
dec
inc
cmp
ss
subb
stc
cs
cmp
add
xchg
int3
pop
fisubs
mov
arpl
gs
xor
sub
jle
lret
jle
cmp
cmpl
and
and
fnstsw
andb
and
xchg
xor
scas
jp
xchg
sub
mov
bound
scas
cmp
xor
scas
adc
jb
jge
jbe
sub
mov
inc
popf
push
xchg
icebp
jb
out
cmp
lods
pop
xor
ret
decl
pop
pop
lods
fistpl
jle
icebp
not
xchg
lock
fs
adc
xchg
in
sbb
jne
adc
stc
and
imul
xchg
in
in
jb
jno
pop
mov
cli
xchg
mov
mov
jnp
adc
jne
cmp
or
stc
addb
out
xor
fisubl
das
push
adc
mov
mov
mov
shlb
shll
sub
push
lcall
sahf
mov
or
fisubrs
sbb
or
rclb
xchg
xor
jge
fnsave
loop
in
adc
jbe
neg
scas
add
sub
int3
sbb
push
andb
adc
fisttpll
out
sub
es
or
bsr
cmpsb
das
mov
movsb
mov
dec
sbb
jb
inc
inc
lds
and
dec
mov
adc
pop
fcmovbe
mov
xor
mov
fwait
jl
std
xchg
pop
mov
inc
pop
inc
dec
xchg
cltd
or
adc
nop
orl
push
outsb
and
jle
or
in
push
sub
mov
push
mov
xchg
sub
dec
push
adc
aas
ficomps
test
xor
push
push
pop
cwtl
mov
cltd
out
repz
xchg
cwtl
call
adc
bound
daa
imul
lretw
out
push
xor
pop
dec
mov
jb
push
hlt
xor
jle
push
jp
push
adc
adc
rorl
adc
or
xchg
outsb
fiaddl
xchg
bnd
pop
lock
shlb
sbb
cs
aaa
scas
pop
xorb
inc
test
stos
daa
push
sbb
or
pusha
insb
xchg
cmpsb
lock
scas
sbb
pop
mov
jecxz
roll
and
or
xchg
rclb
cmpsb
dec
inc
scas
fimuls
and
addr16
fwait
cltd
push
jns
and
ljmp
iret
push
mov
mov
lret
push
sbb
pop
dec
lcall
or
jno
sbb
inc
rclb
cli
stc
jb
orb
mov
mov
xchg
pop
cmpsb
mov
adc
fisubs
out
dec
cltd
lods
iret
lock
scas
xor
loop
out
outsb
pop
cmp
push
mov
repz
sub
or
jb
iret
ds
cmp
xchg
xchg
pop
adc
out
jecxz
cli
loope
mov
cmpsb
adc
pop
das
xchg
or
or
push
aad
push
push
push
jl
scas
sbb
push
es
xchg
mov
adc
std
pop
or
xor
add
and
std
xlat
stos
shr
cli
mov
xor
pushw
fadds
scas
sbb
or
je
pop
pop
pop
jb
mov
pop
out
hlt
inc
mov
ror
jnp
scas
repnz
xchg
es
push
std
cmpsb
pop
fsubl
into
inc
in
fildll
loop
out
mov
mov
push
mov
mov
inc
mov
cmp
es
jbe
aad
out
push
ucomiss
mov
jne
xchg
out
andb
add
ss
popa
mov
pop
shrb
sbb
dec
jmp
push
data16
and
mov
cmc
fiaddl
push
jo
out
adc
cmp
jb
push
ret
sbb
push
in
jle
mov
scas
je
mov
test
out
sahf
inc
in
xchg
inc
jp
sbb
dec
in
add
stos
insb
inc
addr16
or
and
scas
xor
push
xchg
scas
jl
lds
jmp
pop
mov
jle
out
mov
gs
push
xchg
mov
lcall
mov
xchg
nop
jge,pn
outsb
or
mov
ljmp
cwtl
cmp
cmp
das
push
xor
or
inc
shl
push
pushf
xchg
push
mov
in
in
adc
mov
dec
lret
jae
xor
push
or
pop
scas
and
in
cmc
sub
ljmp
xor
adc
jae
xlat
mov
out
mov
xor
ss
rol
or
outsb
int
xor
lcall
jbe
sbb
imulb
or
dec
sub
scas
repnz
ficoml
adc
popa
and
fadd
pop
das
or
push
and
adc
cmp
mov
xchg
xchg
pop
inc
add
arpl
mov
scas
and
push
into
dec
jmp
jb
adc
arpl
adc
adc
dec
dec
jle
cmc
mov
ficomps
popa
push
out
pop
repnz
aam
je
or
das
jno
mulb
movsb
sahf
add
inc
push
lods
jb
aaa
or
and
adc
lahf
movsl
adc
fwait
jle
fidivl
mov
push
jo
add
mov
sbb
aaa
pop
hlt
imulb
push
imul
ljmp
dec
mov
scas
mov
adc
push
pop
jbe
sbb
dec
jno
lcall
clc
cwtl
movsl
lcall
sbb
cs
sti
leave
pushf
push
loopne
test
ret
pop
jl
adc
push
lcall
adc
xorb
xchg
call
stos
aam
pop
jb
sub
dec
fiaddl
mov
out
out
not
je
jle
or
add
jo
sahf
sbbl
aam
push
or
fists
pop
and
fisubrs
xor
outsb
out
loope
and
aas
mov
cmpsb
jno
jbe
movsl
jno
mov
or
sub
sbb
fisubl
nop
cmp
push
ss
xchg
xor
push
push
or
sbb
xchg
add
adc
sbbb
pop
outsl
mov
push
add
inc
push
mov
mov
repz
fwait
jne
ljmp
jno
sahf
jp
jns
sbb
scas
push
adc
push
popf
in
in
shll
rorb
adc
or
push
bound
cmp
cmpsl
test
outsb
lcall
adc
mov
xor
dec
sub
bound
push
mov
push
or
xchg
inc
push
and
pop
aam
xchg
push
add
out
fcmovnbe
dec
jg
xchg
repnz
fisubl
dec
jbe
xchg
sbb
push
push
out
aam
dec
add
push
xor
stc
fstpl
push
xchg
ficoml
lds
fucomp
jae
lcall
or
push
mov
bound
jl
xor
pop
push
mov
pop
cmp
push
cld
xchg
xor
mov
ljmp
mov
jle
xor
sub
leave
out
fiadds
mov
xor
rorb
pop
popa
sub
insb
jns
sahf
dec
xchg
cmpsb
pop
loop,pt
lcall
jle
sbb
and
std
and
dec
jmp
pop
add
divb
xor
es
pop
cli
sub
movsb
cli
adc
cmc
dec
shr
stos
push
mov
test
test
and
es
xor
mov
adc
sbb
lcall
rclb
mov
arpl
and
add
imulb
lcall
adc
sbb
cli
jb
adc
scas
jb
data16
jl
adc
push
cmpsl
pop
call
popa
sarl
sub
movsl
mov
push
imul
add
rolb
sbb
mov
and
dec
push
movsl
jbe
add
adc
das
pop
popf
or
cli
mov
and
sbb
outsb
out
fbstp
lret
and
pop
cmpsl
jb
push
mov
dec
aam
sbb
sub
mov
push
stos
in
xchg
pop
add
adc
push
mov
in
dec
cmp
xor
xchg
clc
dec
adc
adc
sbb
sahf
jmp
bound
and
cmpsb
jle
pop
push
aam
lods
movzbl
stos
adc
fdivl
sub
and
xchg
push
mov
mov
sahf
xor
scas
xchg
adc
push
or
adc
sub
xchg
out
adc
mov
lods
cmp
decb
jb
rcr
mov
mov
mov
or
or
jle
pop
cmpsb
adc
jbe
shlb
push
jp
adc
into
insb
sbb
xchg
and
or
das
enter
mov
mov
iret
mov
jg
adc
mov
aam
push
and
adc
dec
mov
push
movsb
data16
iret
es
xlat
outsl
push
lods
bnd
shll
incb
jge
ror
jbe
mov
fnsave
push
dec
scas
adc
fcoml
adc
test
xchg
jae
jp
outsb
inc
fiaddl
sbb
pop
std
testb
ret
stc
or
idivl
xchg
and
mov
orb
call
mov
addr16
xor
sbb
push
iret
std
scas
inc
add
test
adc
mov
adc
add
xchg
xor
clc
pop
mov
sub
out
adc
push
and
test
ljmp
decb
stc
pop
xor
add
push
jle
pop
add
cli
bndstx
mov
jno
mov
mov
rorl
rclb
xchg
mov
pop
sub
add
sub
mov
push
dec
push
push
into
xchg
xchg
jne
push
pop
push
fs
or
cmpl
cld
adc
cwtl
jo
cs
jns
and
mov
dec
or
push
cli
and
jb
push
into
pushw
adc
lret
push
pop
cmpsb
hlt
push
adc
ss
lods
adc
and
or
leave
or
xchg
push
adc
movl
popf
xchg
mov
sti
out
out
repnz
cwtl
scas
sar
xor
dec
lret
and
sub
or
sub
fiadds
add
ret
fiaddl
fcoml
pmulhuw
push
sahf
push
xor
lcall
mov
xor
jb
and
mov
pop
adc
sub
jbe
and
js
imul
negb
push
arpl
and
aad
ljmp
loope
mov
std
xor
adc
jb
outsb
and
ljmp
rcr
xor
sub
stos
cwtl
into
add
rol
push
es
push
data16
lcall
outsb
rcrb
and
int3
outsl
cmp
push
insb
xchg
cmp
push
ljmp
jmp
out
aas
fistps
push
mov
fisubs
outsb
xchg
sub
push
add
out
mov
negb
in
fwait
xorb
jmp
enter
lds
mov
dec
push
jp
jle
inc
xchg
adc
imul
dec
cmp
jle
inc
ss
sub
or
pusha
cmp
push
dec
add
stos
jp
inc
xchg
ljmp
cmp
cs
mov
push
and
xchg
decb
loope
and
or
cmpsb
ror
push
xchg
mov
jnp
insl
int
sub
inc
jbe
cmpsl
shrb
mov
mov
sub
in
dec
sarl
ljmp
push
push
and
jb
adcb
repnz
xchg
cld
test
push
stc
loopne
push
adc
push
xchg
and
scas
sti
adc
add
outsb
pop
mov
loop
cmpsb
push
in
fcmovu
pop
or
pop
pop
pop
pop
jp
add
cmc
or
mov
mov
mov
aas
mov
jb
mov
jecxz
sub
cltd
insb
jno
bound
popf
push
mov
scas
pushl
cmp
xchg
test
lcall
mov
dec
popf
es
add
dec
mov
stc
into
scas
dec
mov
sbbb
mov
sub
pop
sub
cmp
jne
mov
lcall
xor
push
cmpsl
or
inc
scas
pop
mov
or
mov
push
adc
iret
jnp
ss
sbb
xacquire
or
jbe
jg
scas
push
fdivrs
stos
mov
xchg
notb
faddl
pop
push
xchg
mov
adc
cwtl
dec
add
pop
sbb
je
out
mov
loopne
pop
stos
pop
ljmp
inc
cmp
sbb
andb
lods
subps
pushf
push
int3
hlt
dec
shr
push
add
xor
movsb
fstl
xchg
jne
or
popf
mov
cltd
out
xor
sarl
and
mov
fucomp
xor
loop
decb
cmp
inc
sub
push
iret
and
cmp
inc
bound
lret
fbstp
out
sbb
push
into
sub
adc
xor
cwtl
lea
stc
push
mov
push
jp
fisttpll
push
rorb
div
out
jbe
loope
shld
mov
adc
data16
scas
jmp
or
sub
fistpl
add
jb
sub
fisubs
push
xor
leave
sbb
push
sarb
jo
movsl
jb
mov
popa
add
push
mov
gs
jle
push
push
mov
sarb
cli
push
adc
mov
cmp
pop
sbb
aam
mov
inc
mov
lea
dec
xchg
or
sub
scas
in
arpl
mov
ss
out
mov
dec
negb
xchg
rcrb
cmp
popf
pop
notl
and
jmp
cmp
push
push
mov
out
or
mov
test
cmp
sub
lcall
ja
rolb
pop
mov
pop
jp
push
mov
mov
fnsave
sbb
adc
out
inc
bound
sub
push
dec
inc
xor
sbb
ljmp
fiaddl
mov
xchg
addr16
sbb
and
add
sbb
xchg
mov
push
or
popf
push
push
xor
cmp
adc
cli
xchg
mov
lods
cmp
es
ficoms
paddd
sbb
bound
es
jle
and
mov
xchg
mov
jle
in
test
sahf
lods
cmp
sbb
adc
jbe
sbb
push
fcmovu
int3
jmp
mov
adc
shl
popf
bound
aaa
pop
scas
out
and
xchg
xchg
es
push
adcb
mov
fs
in
test
jno
mov
and
mov
dec
ljmp
data16
fidivrs
xor
sbb
fs
arpl
pop
popa
xor
adcb
add
inc
dec
sbb
sub
dec
xchg
jle
std
pop
cmpsb
mov
test
mov
fildl
mov
mov
lds
inc
sub
xchg
ficoml
movsl
or
cmpsl
xchg
imul
leave
movsb
out
pop
xlat
jae
pop
mov
cmp
xchg
test
lret
adc
jle
and
or
scas
jb
jle
es
cmpsb
inc
sbb
cmpsb
arpl
popa
push
and
push
pop
push
sbb
sbb
adc
das
cmp
out
xor
or
push
push
dec
ljmp
push
mov
jle
lahf
sahf
mov
or
push
bound
dec
dec
xor
sbb
in
adc
negl
test
outsb
out
testb
or
mov
ljmp
cs
push
sub
mov
adc
and
adc
sub
stos
or
mov
or
ret
dec
imul
outsb
sub
mov
sub
sbb
dec
push
and
fisubrl
xchg
jno
push
xchg
adc
jns
bound
sti
xor
std
clc
adc
sahf
jmp
cmp
out
adcb
in
lahf
imul
hlt
xor
push
test
adc
out
cld
pop
sub
outsb
test
jp
push
adc
push
or
push
push
and
pop
inc
sub
push
mov
adc
adc
adc
jle
sahf
push
sub
xchg
mov
adc
sub
pop
fwait
lods
pop
cs
dec
aaa
outsl
es
aaa
xor
scas
movsl
fldl
and
sbb
cmpsb
xor
stos
push
xchg
sub
jns
sbb
pop
fisubrs
and
push
adc
scas
or
jno
sub
mov
fcmovbe
pop
xchg
sbbb
iret
shrl
mov
jle
testl
fidivrl
cmp
inc
push
or
and
xchg
idivb
and
dec
or
imul
stos
out
pop
or
cmp
ljmp
sbb
dec
push
xchg
mov
fdivrl
sbb
push
rol
nop
sub
jns
cs
sahf
mov
and
stc
imul
lds
adc
sub
push
adc
movsl
cmp
or
movsl
sar
push
rcll
and
push
and
lds
lock
notb
es
stc
mov
cmp
and
ss
and
test
scas
fimull
mov
push
push
sbb
xchg
push
rorb
or
out
shll
or
scas
insb
inc
push
jp
sahf
xchg
or
out
pop
pop
lods
push
repz
int
fiadds
push
mov
int3
push
out
push
xor
sub
mov
fsubs
xorl
ficoml
dec
sbb
fcoms
data16
jo
and
xchg
popa
movsb
ljmp
inc
inc
sub
loop
or
jnp
ret
sbb
rcrb
mov
pop
popf
pop
call
xchg
stos
push
mov
push
into
xchg
lcall
adc
xor
bound
es
dec
test
outsb
mov
mov
push
and
mov
adc
pushf
notb
rcl
sub
aas
cs
push
mov
ljmp
aam
pop
or
cmpsb
jb
push
mov
pop
push
xchg
push
push
dec
add
sahf
out
lahf
mov
loope
outsb
cmpsb
and
lock
or
and
pop
ret
cli
push
jp
adc
or
inc
cmpsl
xor
push
mov
aam
sahf
outsb
into
cmp
data16
imul
repz
scas
imulb
popa
push
data16
cs
notb
adc
mov
mov
and
and
or
pop
add
sbb
pusha
stc
sub
cmp
push
lcall
es
not
push
mov
adc
notb
mov
popa
push
push
pushl
pop
scas
into
jle
add
in
push
jle
xchg
cs
out
and
push
push
sbb
sbb
mov
mov
push
xchg
mov
or
sbb
push
cmpsb
mov
pop
xor
mov
outsb
out
dec
or
fadd
xchg
lds
scas
fisubrs
sbb
sub
xor
sahf
mov
nop
pop
mov
sub
xchg
lods
pop
iret
ljmp
nop
pop
xchg
xchg
lret
lret
mov
mov
and
cli
pop
xor
xor
lret
enter
and
mov
scas
pop
add
test
or
pop
test
jle
ud1
mov
jmp
mov
mov
xor
or
and
mov
cmpsb
xchg
cli
mov
dec
push
add
or
dec
xor
sahf
divb
xchg
jle
adc
adc
push
add
jb
dec
xor
sbb
test
dec
pop
xchg
data16
sub
add
add
pop
pop
insb
cmp
push
adc
repnz
adc
mov
sbb
push
outsb
pop
inc
push
call
movsl
in
loopne
sbb
es
push
sbbb
xor
push
clc
out
ficoml
add
stc
xchg
xor
jbe
das
ja
pop
scas
imul
ss
pushf
out
inc
popf
shlb
stos
popa
mov
pop
sub
and
sbb
or
fs
jp
movlps
inc
lcall
inc
push
or
movsl
mov
push
outsb
sub
add
xchg
notb
and
push
xchg
push
pusha
add
das
sti
xchg
pop
je
call
into
sub
push
sub
pop
push
sbb
jnp
testb
inc
cmp
out
adc
stc
push
jno
adc
pop
testl
sub
or
pop
or
sub
push
repnz
xor
ljmp
ss
leave
fucom
xchg
cmp
shll
pop
push
imul
shlb
sub
test
imul
push
dec
and
sahf
sbb
xlat
das
xor
scas
push
jp
ja
xchg
pop
adc
and
xor
pop
sahf
or
outsb
xchg
lds
sub
out
jmp
dec
dec
push
idiv
or
mov
scas
push
and
mov
clc
or
repnz
mulb
pop
mov
mov
pop
fisubrl
es
popa
aas
sbb
adc
push
loope
sub
lea
fisttpll
imulb
stc
jb
addr16
scas
and
stos
scas
sbb
lds
fsubrl
mov
pushf
ficoml
jp
in
repnz
cs
popa
pop
xor
lock
mov
int
jle
bound
dec
xchg
mov
into
dec
push
pop
loop
sbb
cmp
pop
fsubrp
adcb
into
push
mov
jl
and
stos
outsb
psubd
mov
scas
popa
outsb
pop
js
cmpsb
inc
jae
push
movsl
push
xchg
jbe
ljmp
mov
sub
pop
push
dec
push
fcmovu
es
sbb
aam
push
aam
int3
dec
mov
cmpsb
or
cli
xor
shlb
mov
fmulp
sub
or
test
fisubs
out
push
sub
inc
xor
sub
and
stos
cmp
inc
jns
cmpsb
loop
xchg
sub
jno
add
adc
pop
in
dec
fcmovnbe
js
sub
pop
xor
and
fsubrp
cmp
push
mov
xchg
mov
subl
sub
clc
push
int3
sbb
or
in
rcr
gs
scas
sbb
and
es
adc
roll
int
mov
cmp
jb
inc
inc
lods
pop
loopne
negb
arpl
fabs
int3
imul
data16
lret
outsb
mov
hlt
fstp
and
push
loop
sbbb
fidivs
cs
fisubrl
sub
je
int
lcall
loop
push
enter
popa
xor
ljmp
ficomps
mov
or
stos
mov
mov
push
push
insb
xchg
jmp
pop
mov
inc
sbb
or
or
sub
pop
enter
cltd
movsl
rcll
jle
adc
out
xor
adc
stos
cwtl
stos
pop
stos
imul
movsl
sti
movsl
addr16
ret
or
in
dec
adc
xchg
out
sub
out
add
adc
dec
jbe
lea
ljmp
call
movsl
jle
loopne
scas
in
adc
inc
jmp
mulb
movsl
sub
jno
cmpsb
push
cwtl
mov
cmpsl
fimuls
mov
pushf
mov
cld
cmp
js
imul
ret
jne
in
outsb
or
popf
cli
xchg
sbb
sbb
mov
pop
sub
lock
push
in
jl
push
adc
mov
scas
xlat
and
add
out
push
movb
data16
stos
cs
dec
clc
and
lcall
clc
jae
popa
std
jle
rcll
mov
jno
adc
or
fimull
sbb
fidivrs
pop
movsb
push
sbbl
add
sbb
sub
xchg
xor
popa
addr16
xchg
sub
lds
out
aaa
jae
cmpsb
and
bound
or
out
or
lret
sbb
mov
adc
scas
sub
jle
add
data16
nop
xor
lcall
sbb
cmp
adc
sub
outsl
inc
hlt
push
xor
jb
jno
jbe
push
sahf
stos
mov
mov
or
xor
push
add
into
cmp
fdivr
jmp
inc
arpl
inc
cmp
mov
adc
push
xchg
roll
out
fcoml
jo
pop
pusha
repz
push
add
and
ljmp
pop
ss
sbb
or
or
xor
sub
popa
jl
clc
loop
jo
mov
push
push
imul
pop
mov
sbb
sahf
xor
popa
adc
lret
mov
push
das
xchg
adc
dec
push
push
mov
imul
pop
inc
xchg
roll
pop
push
aam
bound
jle
and
pop
shlb
popa
pop
addb
ror
and
ljmp
pop
scas
or
jno
xchg
outsb
jb
xor
lret
ficompl
push
ja
cmp
adc
fimuls
push
aaa
push
inc
sahf
push
xchg
xor
imul
loop
ss
or
ds
push
cmpsl
or
dec
sahf
clc
pop
mov
lcall
sub
push
pusha
and
notb
add
fwait
push
or
lods
adc
cltd
stc
pop
cmpb
popa
ja
lds
shll
push
adc
mov
or
ret
adc
mov
adc
mov
stc
dec
jl
adcb
sbb
fisubrs
adc
test
cmc
add
mov
scas
shlb
pop
lock
sbb
cmp
jae
pop
and
adc
adc
adc
push
imulb
dec
pop
loop
das
sub
xchg
out
sbb
mov
scas
pop
or
push
insb
stc
cmp
adc
fisubl
cs
icebp
or
icebp
lds
push
lret
push
mov
les
fdivp
lcall
sub
test
adc
movsl
jl
fnstenv
mov
leave
sub
jb
arpl
pop
push
js
andb
or
push
test
fcmovb
push
sub
jns
es
xor
ljmp
or
lahf
jnp
mov
adc
xchg
fisubs
jns
or
ret
mov
push
inc
mov
mov
fnstenv
sub
ja
cmc
pop
jge
jle
outsb
rclb
pop
test
push
ss
mov
push
xchg
sbb
ljmp
scas
cmpb
and
sub
jle
mov
add
aaa
test
push
and
int
cmpsb
pushf
mov
pop
inc
out
aaa
decb
sub
mov
jmp
nop
jnp
xchg
jbe
repz
scas
push
jle
mov
mov
pop
fs
gs
imul
lcall
jg
xor
dec
mov
pop
stos
sbb
sbb
out
clc
aam
int
push
xchg
dec
mov
fucom
and
push
bound
inc
or
and
jp
sub
adc
push
xlat
pusha
into
pop
scas
outsb
scas
mov
ss
push
sub
jle
sarl
mov
icebp
jecxz
xchg
cli
or
setae
scas
inc
stos
clc
loop
pushw
mov
in
and
cmp
movsb
ljmp
add
test
push
imul
ljmp
inc
push
outsb
adc
icebp
push
and
cli
or
scas
push
test
shl
sbb
scas
shlb
adc
and
xchg
fcmovbe
sti
es
arpl
aas
cld
cmp
jnp
lcall
adcl
push
shlb
cs
ja
outsb
rol
test
jnp
sahf
push
imul
sahf
or
adc
jnp
and
mov
jmp
adc
imul
inc
pop
add
bound
jp
and
inc
loop
adc
data16
or
stc
rolb
mov
out
bound
adc
aaa
scas
mul
sub
add
add
fwait
add
push
popf
push
push
cmpb
xor
mov
jp
sbb
cmp
je
out
xchg
sub
or
shl
mov
test
decl
jns
xchg
scas
loop
xchg
add
push
fimull
repnz
cltd
std
mov
pop
inc
mov
sahf
jns
icebp
sahf
mov
nop
addr16
mov
push
inc
sub
shlb
jb
ss
fsts
into
imul
push
mov
sbb
in
xor
aaa
or
stos
pop
sub
and
xchg
or
pop
and
leave
push
sbb
in
add
insb
leave
mov
lcall
outsb
loop
mov
int3
fistl
addl
fisttpll
xchg
xor
dec
xchg
cmp
mov
cmpl
sub
pop
push
adc
mov
inc
sti
repnz
sbb
push
xor
add
xchg
es
push
mov
lret
cs
push
mov
add
pop
fisubrs
sub
cs
aaa
pop
stos
xor
mov
adc
push
into
lock
cmpsb
loope
xor
jmp
and
adc
xlat
pop
rolb
stc
negb
jbe
lods
hlt
xchg
sahf
adc
ds
or
stos
xchg
xchg
int
push
adc
adc
xchg
out
enter
push
shll
and
fimuls
mov
mov
pop
mov
jg
imul
xchg
stc
mov
pop
adc
jnp
hlt
ss
jo
test
pop
call
push
adc
adc
push
sbb
cmpsb
loopne
fidivl
das
inc
outsb
push
fildll
jle
movsl
xchg
push
sbb
out
jb
jle
xchg
leave
sbb
xchg
es
jbe
pusha
aaa
push
lahf
sbb
sbb
push
sub
push
out
jle
push
cmc
cli
into
sub
sahf
or
xchg
fldz
loop
lock
add
sbbl
adc
outsb
popf
inc
xor
or
dec
cmpsl
push
repnz
sub
mov
loop
cmp
outsb
xor
push
outsb
repnz
ja
adc
jae
or
subl
cs
shll
out
test
pop
hlt
pop
adc
std
jle
add
jp
rol
adc
cmpsb
pop
dec
ficomps
mov
jbe
pop
sbb
pop
sub
sti
pushf
dec
scas
ljmp
idivl
test
xchg
xchg
lcall
adc
xchg
divl
popaw
loopne
push
fstps
mov
sub
add
sub
push
and
cli
loop
push
jno
data16
arpl
jle
mov
mov
ljmp
ss
dec
scas
cwtl
jle
je
push
adc
push
jle
xchg
ficompl
mov
mov
outsb
cs
sub
adc
mov
and
and
dec
push
adc
add
stc
sub
mov
clc
imul
push
xchg
cmpsb
and
rolb
rorl
sub
pop
dec
jecxz
sub
push
jle
push
icebp
push
lcall
jne
cli
dec
sub
push
int
inc
xor
push
dec
rol
or
cmp
xor
das
pop
stos
cmpsb
sub
add
enter
adc
add
push
or
mov
lret
or
dec
popf
gs
popf
stos
data16
adc
or
fdivr
pushf
adc
outsb
aam
mov
inc
jnp
popa
lea
pop
loop
sub
xchg
jo
or
jp
jge
jbe
push
and
in
out
mov
adc
push
outsl
into
xor
out
das
mov
ljmp
mov
dec
mov
xor
inc
push
das
adc
outsb
mov
push
ljmp
imulb
cli
pushf
shll
jg
dec
lcall
mov
sbb
or
mov
dec
mov
fimuls
out
mov
jbe
sub
std
int
xchg
sbb
ljmp
push
add
mov
cs
jmp
xchg
sub
lcall
notb
mov
aam
mov
pop
pop
sub
cld
lds
pop
es
notl
inc
rcr
sahf
je
fimuls
hlt
jle
data16
xchg
ss
es
outsl
xlat
sbb
xchg
xchg
sbbb
out
pop
in
into
loop
notb
mov
or
jns
stos
push
popa
enter
sub
jb
fcompl
mov
or
stos
push
and
pop
pop
mov
out
sub
shlb
push
mov
xor
int
and
and
xorb
push
outsl
movsl
mov
xor
inc
sbb
leave
pop
or
dec
int
and
pop
test
jl
pop
add
icebp
inc
das
cmpb
mov
loop
sbb
int3
into
adc
push
sbb
out
out
dec
in
dec
outsb
sub
sbb
pop
cmovbe
sub
jno
or
jp
xor
jbe
sarb
xchg
nop
sbb
pop
push
adc
in
repnz
in
push
sub
aad
nop
mov
cli
loopne
out
data16
scas
rolb
mov
gs
xchg
push
dec
mov
call
pusha
out
stc
push
add
mov
ljmp
nop
sbb
fldt
mov
clc
add
or
push
movsl
ss
pop
scas
pop
sbb
aas
push
jb
shll
stos
push
aam
inc
pop
xchg
out
inc
mov
pusha
jle
movsl
repz
movsb
movsl
mov
mov
sbb
xor
push
push
ljmp
inc
popa
out
rcr
push
sub
jbe
into
pop
push
loop
out
imul
xchg
shlb
test
xlat
pop
sub
push
jle
scas
subb
or
test
nop
mov
std
ss
inc
sub
sbb
adc
data16
inc
cli
sbb
push
mov
pusha
cltd
notl
adc
and
mov
xchg
popa
test
xor
cmp
bound
stc
push
add
add
fmuls
push
jmp
jbe
and
rclb
add
adc
and
or
jb
mov
jp
lods
xor
sbb
mov
jo
stos
ss
insl
scas
sbb
outsb
adc
push
or
addr16
data16
cmpsb
outsb
stos
mov
mov
sbb
mov
mov
cmp
subl
push
repz
push
popa
xor
and
fisubrl
out
std
adc
bound
push
or
adc
add
stos
push
adc
das
dec
lret
test
or
jle
cli
push
cmpsl
not
add
push
and
jg
add
out
pop
push
stc
inc
mov
and
sbb
xchg
lcall
frstor
cmp
push
sbb
arpl
bound
nop
push
xor
add
ficoms
add
inc
hlt
shrl
and
hlt
lahf
xchg
fstl
std
xchg
stos
jle
hlt
cmpsb
and
xchg
push
and
mov
std
jp
jle
stc
popa
loope
jb
ror
pop
sub
mov
push
dec
jae
dec
push
push
lcall
jnp
ficomps
sub
int
rolb
sahf
lcall
outsl
cmp
outsl
subb
and
push
jg
push
push
and
out
repnz
push
xor
or
ljmp
xchg
repnz
mov
xchg
and
mov
mov
lock
loopne
pop
sub
adc
mov
xor
shrb
adc
jb
inc
outsb
stos
jno,pn
jp
ljmp
jge
rorb
cmp
data16
mov
es
ficompl
and
shl
fisubrs
fdiv
sbb
in
xor
push
clc
leave
ficoms
testb
pop
fistps
jne
sbb
lcall
dec
call
addr16
mov
sub
out
lds
jp,pn
sbb
ds
cmp
xchg
mov
idivb
or
lcall
jecxz
dec
imul
je
aam
int3
scas
shlb
mov
or
int
sahf
push
adc
leave
mov
scas
outsl
les
jb
xchg
jge
push
clc
out
pushf
loopne
out
mov
push
mov
add
fwait
xor
mov
out
inc
mov
xchg
stc
shlb
adc
inc
cwtl
popa
sub
jle
dec
pop
push
out
pop
push
out
push
pop
sub
jb
mov
mov
adc
sbb
test
jns
rorb
in
sahf
sub
in
xor
out
cmc
rolb
mov
push
inc
jbe
sub
mov
mov
xor
outsb
stos
pop
pusha
push
dec
push
or
fcmovbe
mov
aam
add
out
jbe
push
shlb
rcll
xchg
cltd
push
rol
mov
cmp
data16
pop
out
enter
and
call
movaps
subb
mov
xchg
xchg
jmp
cs
mov
pop
andl
adc
test
scas
cmpsl
movsl
adc
pop
push
or
adc
xchg
loop
adc
iret
inc
push
jl
bound
test
push
or
ret
test
jmp
mov
sub
paddd
in
int
scas
loop
adc
jbe
adc
push
sbb
popa
jb
out
sub
jbe
data16
movsl
lret
cmp
sbb
add
mov
iret
bound
cmpsb
xor
sub
push
fdiv
adc
jbe
sbb
gs
push
outsb
fistpl
mov
in
jge
sub
cmp
push
out
mov
repnz
std
pop
ja
sbb
aam
adc
push
cmp
jns
jb
pop
mov
mov
adc
es
jno
jbe
ficompl
loop
xor
mov
lahf
sahf
fcoms
cmp
enter
mov
adc
push
sbb
test
sarl
xchg
sub
popa
cmp
stos
adc
hlt
push
ss
push
and
fiaddl
fsubs
lahf
test
shl
cs
sub
inc
pop
push
and
test
mov
or
sbb
cld
out
loopw
pop
mov
jns
adc
lcall
sbb
stc
inc
sahf
fs
add
pop
ja
imul
push
imul
jg
pop
scas
jbe
outsb
stc
jp
jno
mov
jae
imul
and
push
or
das
mov
loop
cli
jp
jne
data16
push
aas
out
mov
adc
out
repnz
and
pop
sbb
bound
or
fwait
vmovd
subb
pop
add
mov
push
jnp
loop
jnp
jne
inc
dec
jbe
mov
andb
jp
and
ds
and
xor
cmp
data16
cli
insb
jno
or
push
jbe
sub
bound
scas
xchg
or
push
xchg
sbb
push
lret
int3
jae
xchg
sahf
out
mov
jg
repnz
sahf
add
loopne
lcall
pop
mov
push
adc
dec
rolb
fdivrp
les
dec
shrb
sub
and
stc
adc
mov
insb
jle
jg
or
push
cmp
jp
mov
lds
mov
pop
cmp
add
shll
push
pop
stc
adc
sub
cmp
int
lock
fadds
out
cli
jb
adc
and
adc
dec
push
movsl
push
jge
sub
push
loope
imul
or
or
jns
push
mov
push
and
pop
xchg
pop
test
add
sbb
and
mov
cmpps
gs
push
jmp
sub
imul
out
push
adc
pop
shl
or
imul
or
mov
jb
and
fnstsw
or
xor
clc
jle
xchg
outsb
popf
mov
scas
subb
push
popl
mov
xor
int3
fidivrs
mov
es
movsb
and
notb
jbe
cmpsb
jmp
mov
insl
lds
xchg
stc
dec
stos
sahf
xchg
xchg
sub
mov
add
jp
adc
mov
out
sub
jle
enter
inc
aam
shll
add
pop
ss
mov
mov
sbb
pop
inc
push
fimuls
and
fcmovnb
movsl
mov
orb
stc
push
jae
sbb
or
and
stos
shlb
enter
cs
cmp
imulb
sarb
sbb
xor
push
ret
cmpsb
pop
push
mov
and
aad
jmp
sbb
xchg
iret
jb
ljmp
arpl
push
or
into
inc
xchg
scas
movsl
test
mov
xlat
clc
and
and
ret
pop
inc
shlb
and
and
dec
push
or
jp
jb
out
fnstcw
xchg
imul
loop
xor
ss
pop
scas
mul
imul
popa
add
add
shlb
or
fucom
or
push
in
es
mov
loopne
ss
jp
mov
pop
push
sub
scas
mov
fstpl
les
sahf
adc
mov
push
loope
outsb
adc
xchg
sub
and
fimull
outsb
push
iret
inc
push
es
cmp
negb
lcall
fidivrl
dec
scas
lret
outsb
or
sub
mov
add
adc
loope
and
xchg
ficomps
mov
decb
into
es
adc
sub
test
xor
in
mov
sbb
stos
pop
push
push
bound
mov
xor
adc
inc
mov
inc
and
out
popa
adc
push
sub
int
jb
or
pop
cmpsb
push
adc
ss
xchg
sbb
scas
mov
mov
push
int
and
insb
clc
repz
pop
add
das
shlb
jle
out
stc
add
out
jge
data16
adc
cmpsl
int
outsb
push
mov
sbb
inc
sub
mov
jp
push
iret
out
push
repnz
jae
and
xchg
cli
test
jns
mov
sbb
adc
or
sahf
push
ficomps
fdiv
sbb
cli
push
xor
popf
sbb
sbb
loope
adc
or
xlat
rcl
and
xor
nop
sahf
cs
ss
data16
cmp
mov
mov
scas
cmpsl
mov
dec
xor
cli
mov
in
mov
xchg
or
ret
add
mov
sub
push
out
test
jp
jb
push
mov
ljmp
out
scas
imull
outsb
and
testb
dec
and
sbb
lcall
adc
push
jle
jmp
cli
cs
push
ds
push
bound
pop
dec
or
mov
mov
aam
pop
adc
adc
pop
xlat
pop
push
xchg
es
fnstsw
mov
cmovne
aas
test
xchg
inc
jge
mov
or
in
or
push
outsb
arpl
push
mov
mov
adc
inc
cs
or
pop
cmp
mov
or
sbb
outsb
push
cltd
mov
xchg
mov
ficompl
cmpsl
push
add
ss
scas
add
mov
jb
sub
sbb
cmp
push
mov
outsb
lret
inc
xor
inc
mov
sbb
push
es
dec
repnz
imul
cld
sbb
lock
mov
inc
decb
lcall
scas
out
cmpsb
fs
aaa
push
xlat
rorb
push
incb
ds
jle
xchg
mov
or
or
push
stos
arpl
pop
movsl
sbb
mov
mov
stos
sbb
cli
nop
or
dec
ljmp
ds
jp
xor
icebp
int
push
mov
adc
sub
ss
das
pop
jp
lcall
pop
sub
push
fidivs
xor
aam
bound
and
clc
or
mov
mov
sbb
xchg
jno
scas
mov
sub
sub
mov
inc
add
xchg
push
and
add
jae
jns
jno
pop
imul
jle
inc
orb
xlat
dec
push
mulb
and
mov
mov
cs
scas
sub
fisubrl
repnz
stc
sub
mov
stos
jb
cli
xor
push
dec
jbe
push
jno
adc
jno
pop
push
mov
or
ss
sbb
xchg
test
cmc
iret
ficomps
adc
add
scas
fidivrs
out
sbb
testl
stc
stc
mov
sbb
popf
dec
jle
nop
sub
fisttpl
or
cs
sbb
mov
mov
scas
dec
popa
ret
mov
sbb
push
cmp
aam
je
bound
xor
adc
push
int
test
push
cmpsl
or
cmp
push
push
jns
sub
ljmp
jbe
es
loope
jp
jae
or
insb
mov
scas
pop
mov
push
andb
cmpsb
das
mov
adc
bswap
mov
ljmp
je
out
bound
push
repnz
jle
fidivrs
cli
fcomp
es
dec
inc
scas
jbe
adc
pop
test
adcl
dec
popf
xchg
fmuls
mov
sahf
jge
into
push
aas
daa
jnp
mov
mov
int
sub
xchg
pop
mov
inc
or
outsl
out
arpl
sbb
ss
sbb
mov
jne
scas
jno
xchg
adc
push
data16
xor
imul
push
cli
jno
push
popa
sbb
push
and
lods
ret
jno
cli
ja
jne
mov
mov
xchg
popf
adc
push
std
sub
sub
out
adcb
idivb
mov
imul
int3
mov
inc
fcomps
push
out
mov
adc
repnz
cwtl
xor
push
hlt
and
idiv
loop
stos
popa
push
cmpsb
xchg
lea
clc
jle
dec
rcl
loop
push
idivb
pop
adc
push
mov
xchg
push
nop
out
xchg
adc
cmp
dec
leave
inc
in
pop
dec
push
sbb
push
adc
pop
push
adc
xchg
stc
punpcklwd
push
jne
ds
scas
push
scas
adc
loop
pop
iret
outsb
out
add
inc
imul
dec
cmpsb
push
inc
cmp
sbb
into
mov
data16
xchg
jp
xchg
jecxz
sub
jbe
xor
jo
mov
cwtl
mov
ljmp
ficoms
push
mov
push
or
mov
cmpsb
xchg
cltd
dec
jg
loope
push
push
gs
mov
in
adc
push
inc
in
push
pop
jb
xchg
ss
je
stc
sub
inc
ljmp
repnz
loope
mov
xchg
xor
cmc
or
and
and
add
and
outsb
jbe
and
jle
pop
insb
mov
idivb
mov
xchg
jo
push
int3
es
popa
mov
pushf
std
loop
and
es
fildll
ss
insl
or
inc
insb
or
outsb
sbb
cmc
cli
sahf
add
repnz
adc
sarb
popf
xor
shrl
or
xor
ss
nop
push
sbb
xchg
bound
adc
jle
and
adc
mov
dec
xchg
sub
sbb
bound
dec
xchg
xchg
mov
mov
or
jp
sub
ficompl
adc
or
int
stos
leave
jle
incb
jp
jno
push
test
ds
lret
gs
shlb
ret
ficompl
push
push
into
pop
or
dec
mov
pop
es
out
dec
mov
rcll
or
arpl
xor
add
mov
xor
sbb
mov
iret
mov
add
adcb
call
or
popa
int
and
sub
test
xor
ss
stos
sbb
push
push
shrb
or
jge
js
lock
add
or
adc
ss
adc
push
or
lret
and
aad
mov
xor
out
pushf
popf
xor
mov
and
outsb
test
imulb
xor
scas
mov
xchg
push
movsb
ficompl
ja
pop
pushf
lret
dec
movsb
ficompl
adc
mov
in
rorl
out
insl
mov
mov
and
xor
mov
fwait
dec
loop
sub
push
scas
push
jg
push
and
iret
and
mov
scas
mov
pcmpgtd
movd
and
mov
pop
das
pop
ret
sub
dec
lods
insl
adc
sti
clc
push
stos
push
xlat
hlt
jae
mov
push
stos
enter
adc
cs
rorl
rclb
jns
push
push
adc
or
into
push
or
or
push
repnz
sbb
xlat
add
sub
pop
xor
sub
jp
fisubl
mov
mov
dec
mov
sahf
sbb
or
cmp
cwtl
int
es
sbb
sbb
cmp
ljmp
push
fistpll
xchg
setnp
jbe
into
test
pop
and
pop
mov
insb
lea
mov
mov
push
aas
pop
loope
mov
sub
mov
xor
adc
scas
or
imul
bound
nop
inc
dec
stc
xlat
fcompl
push
andb
jb
fmuls
gs
push
ss
mov
outsb
int
jb
sahf
pop
out
adc
mov
xchg
fisubrs
dec
in
or
bound
sub
std
push
sub
repnz
out
es
sub
and
popa
push
out
aaa
lcall
stos
jno
mov
pop
ss
test
sub
mov
jb
mov
cltd
add
xor
cltd
movsb
imul
pop
or
push
pop
xor
push
push
inc
out
push
xor
and
adc
pusha
jb
scas
add
jle
mov
push
cwtl
in
push
and
cs
popf
xor
jge
loope
add
rol
or
cmp
ljmp
negl
jbe
test
frstor
pop
es
mov
cmp
pop
mov
mov
sbb
cs
pop
mov
sub
rolb
movlps
mov
bound
fisubrl
mov
cmpsb
movsl
mov
cmp
adc
jbe
cld
popf
lods
ljmp
cmp
cs
mov
adc
jae
inc
nop
ret
bound
div
jbe
cmpsb
inc
or
and
pop
push
mov
stc
jle
imul
ficompl
stos
push
inc
pop
loop
in
inc
sbb
sahf
stos
stc
and
popf
cmp
xchg
fisubs
stos
jmp
add
xor
or
sar
outsb
and
jno
test
and
push
popf
pop
arpl
push
cli
pusha
fisubs
mov
xchg
arpl
and
repz
frstpm(287
insb
scas
adc
cs
stc
xchg
cmpsb
add
sub
pushw
sub
sarb
or
sti
pop
popf
and
dec
lods
xor
sbb
xchg
movsl
es
xchg
mov
or
jbe
and
cltd
push
adc
dec
and
and
out
push
nop
dec
sbb
ss
das
sub
fcompl
add
fiaddl
xchg
stos
jo
sbb
scas
cs
push
movsl
pop
and
ljmp
data16
cmp
lret
push
jno
roll
or
sub
out
stos
or
sbb
and
sti
cmovle
push
stc
pop
stos
fs
dec
push
add
ljmp
popf
sub
dec
arpl
clc
arpl
push
mov
push
flds
jns
pop
rcl
jp
test
addr16
in
push
popf
push
addb
fisubrl
mov
adc
lcall
add
jne
sbb
outsb
adc
inc
scas
cmpsl
sub
push
mov
mov
jae
mov
xchg
add
mov
cld
push
fisubrl
pop
inc
lret
ljmp
in
ljmp
sahf
add
out
gs
adc
hlt
xor
loop
mov
push
jecxz
fimull
inc
jb
stos
bswap
add
negb
pop
mov
mov
inc
adc
negl
bound
setle
std
loop
add
mov
mov
faddp
test
jmp
jle
lock
out
scas
adc
lcall
add
int
xchg
ficomps
repnz
imul
into
ja
sub
leave
sub
sub
jbe
call
into
cltd
sahf
xchg
pop
xorl
push
shlb
movsb
dec
sahf
xchg
and
sbb
add
fisubrs
sbb
leave
push
mov
shlb
dec
add
ds
test
jmp
clc
pop
xchg
ljmp
outsb
arpl
cltd
or
andb
push
call
lcall
jle
mov
cmp
fimull
repnz
push
stos
mov
cmpsb
dec
jecxz
mov
hlt
rorl
pop
sub
pop
cli
or
and
scas
mov
jnp
push
xchg
adc
fbstp
mov
push
lahf
push
xchg
add
enter
sub
in
and
shr
or
xor
out
push
sbb
push
inc
gs
outsb
mov
movsl
lcall
inc
jp
xchg
arpl
gs
push
loop
mov
push
movsb
xor
inc
stc
stos
xchg
mov
fstl
std
dec
sahf
and
mov
or
xor
xchg
das
je
sbb
ljmp
push
in
cmp
loop
push
push
mov
adc
pushf
pop
pop
inc
lret
dec
adc
inc
adc
or
mov
push
ficomps
out
jp
cmpsb
or
rclb
hlt
rclb
std
outsb
fidivrs
out
lds
add
pop
mov
xor
and
stos
icebp
test
imul
xor
out
test
outsb
aaa
add
test
loope
pop
popf
es
xchg
sub
dec
fstps
pop
xchg
cmpsb
pop
cs
cli
or
and
push
out
pop
dec
inc
sub
bound
sbb
push
mov
cmp
or
jbe
mov
or
jno
adc
jle
js
fbld
setae
loopne
and
sub
das
jnp
scas
inc
xchg
adc
adc
int
out
push
mov
jb
rcrb
int
mov
andb
cmpsb
outsb
sub
lock
in
cmp
fsubl
scas
rcl
sub
jmp
packuswb
inc
insb
icebp
push
push
push
fsubl
rcl
nop
push
mov
ret
aad
fisubrl
scas
ss
xor
outsl
jmp
jne
lahf
mov
sub
test
inc
jnp
sbb
cwtl
adc
cmp
loop
nop
adc
loopne
hlt
data16
lock
sahf
das
xor
fidivl
mov
ss
or
jno
mov
pop
ds
fs
push
sub
push
scas
sarb
jns
xchg
jns
es
sarl
push
out
data16
or
sbb
incb
push
pop
shr
shlb
loop
mov
popa
jae
jb
or
in
subb
stos
mov
pop
adc
ficoml
stc
mov
orps
push
pop
or
sbb
cld
jle
xchg
mov
xchg
jl
pop
imul
mov
push
inc
imul
es
repnz
xchg
insb
in
cmpsb
push
mov
push
jle
xchg
frstor
rcl
dec
sub
ret
hlt
les
inc
out
sbb
adc
test
aas
mov
or
iret
and
sbb
loop
and
popf
adc
lods
dec
jne
push
mov
adc
xchg
jno
mov
sbb
mov
cmp
adc
out
pop
mov
mov
sub
loop
cmp
sbb
mov
jle
mov
xchg
scas
jo
vmread
dec
inc
push
outsb
rcll
jno
jle
adcl
pop
sub
sahf
add
mov
outsb
imul
fwait
jle
mov
xchg
and
or
loop
popa
xchg
stos
xchg
fs
cmp
sbb
lret
push
bound
cld
sbb
fs
fldl
mov
sub
push
bound
and
jp
stc
rclb
xor
push
mov
or
arpl
add
mov
jae
push
or
popa
sub
divb
xor
or
push
rcr
jp
push
test
pop
cmp
or
mov
cwtl
scas
pop
nop
dec
sub
mov
jns
bound
cmp
jg
inc
fsubp
mov
mov
or
and
push
pop
or
push
push
mov
incb
pop
ss
jb
les
je
popa
out
xor
sbb
and
mov
repz
jb
mov
rcr
sub
dec
dec
push
cli
call
sbb
xlat
ret
movsb
dec
test
sub
decb
adcb
ficompl
xor
push
ljmp
xchg
adc
adc
mov
adc
cmc
sbb
cmp
aaa
lea
outsl
std
es
dec
sub
repnz
mov
aam
push
sub
pop
es
out
mov
mov
xor
outsb
xor
xor
mov
mov
cli
mov
and
add
idiv
stos
pusha
or
ljmp
push
inc
in
cmc
shlb
std
sub
es
clc
rolb
inc
int3
and
in
in
xchg
push
mov
mov
jno
outsb
sub
push
ficompl
and
sbb
mov
push
test
inc
loope
fmuls
jbe
movsl
and
dec
loop
addr16
out
jb
xchg
push
clc
es
sub
imul
xchg
mov
data16
pop
orb
sbb
jle
push
test
dec
lcall
notb
sub
mov
dec
dec
inc
rcrb
outsb
out
rcll
scas
es
leave
xor
je
subb
sbb
push
xchg
push
rcrl
jbe
or
pop
adc
iret
sti
iret
lea
das
je
ja
popa
push
push
jmp
mov
repnz
outsb
push
out
rorb
cltd
into
xchg
push
aaa
leave
pop
push
pop
xchg
sbb
xchg
and
es
mov
rorb
ljmp
mull
and
imul
arpl
pop
inc
xchg
lock
outsb
loop
pop
repnz
pop
mov
xor
and
sub
adc
loop
scas
jnp
push
xchg
jno
sub
movsl
stc
popa
jmp
or
add
out
aad
and
mov
push
push
push
int
jp
sub
cmp
std
fstl
sahf
xor
imul
sub
inc
sbb
imulb
out
popa
xor
cmpsl
fstl
retw
cltd
testb
es
mov
sbb
push
dec
out
jecxz
andb
loopne
outsb
xor
repnz
jbe
dec
pusha
fdivrp
sbb
hlt
dec
aas
rclb
mov
into
jmp
sbb
and
sub
in
negb
mov
lcall
outsb
stos
imul
mov
add
jmp
mov
push
xor
pop
sbb
dec
ljmp
dec
hlt
push
fimuls
sbb
cli
pop
or
inc
in
jmp
dec
lock
or
jo
sbb
push
in
jle
lret
divb
clc
xor
cmp
mov
mov
lret
jae
imul
inc
dec
mov
out
push
out
cs
rclb
push
jle
in
movsl
imulb
shll
lcall
loope
int
std
push
cli
jo
scas
in
stos
repnz
push
sbb
xor
sub
wbinvd
je
fisubs
jbe
loopne
cltd
push
push
pop
push
inc
lcall
or
adc
data16
inc
xlat
das
cmpsb
scas
and
jp
inc
notb
ljmp
or
ds
sar
in
mov
sbb
pop
lock
mov
shll
add
in
push
mov
das
dec
xor
fdiv
arpl
push
dec
push
out
scas
ds
sbb
test
add
aad
sahf
sbb
xchg
jnp
wbinvd
adc
loop
jle
and
ss
imul
adc
xchg
je
mulb
push
iret
dec
decb
xor
cmp
push
lods
pop
movsl
inc
addl
adc
es
adc
jp
les
adc
mov
mov
xchg
sbb
gs
in
rorb
fwait
sub
adcb
pop
jmp
pop
pop
sub
push
or
xchg
movsb
jae
mov
push
mov
or
fidivrl
movsb
leave
mov
adc
testb
push
push
imul
mov
jle
push
int3
push
push
es
testb
loop
adc
and
sub
imul
mov
sbb
sbb
xor
xlat
lcall
ljmp
outsb
inc
xor
fiadds
loop
pop
jne
sub
fwait
adc
mov
pop
sbb
je
adc
mov
dec
pusha
push
imul
js
push
jno
jno
ja
inc
lds
and
pop
jle
dec
ljmp
nop
cmpsb
xchg
cs
inc
sbb
fstl
fdivrs
pop
in
outsb
sub
incl
xchg
ficomps
sbb
xchg
decb
or
inc
or
scas
jo
scas
cmp
repnz
add
leave
lcall
data16
out
jge
fisubrs
minps
jle
mov
imul
pusha
sbb
xorb
int
shlb
xchg
push
sahf
adc
and
jbe
decb
jno
inc
pushf
loope
pushf
add
out
xchg
xchg
popf
jp
xor
fisubs
shr
dec
pushl
push
lcall
mov
sbb
sub
repz
pop
test
and
fnstsw
mov
mov
rcr
cmp
cmp
jp
pop
mov
push
dec
sub
shll
les
pop
mov
or
push
xchg
jb
sbb
pop
mov
ret
fimuls
push
mov
or
mov
out
idivb
push
inc
lahf
sub
ljmp
or
mov
jb
xor
xor
shlb
sub
movsl
lcall
mov
cltd
ss
clc
popf
xchg
cmpsb
jne
stos
push
test
push
pop
das
or
inc
add
add
inc
jnp
adc
jge
mov
repz
jo
or
into
iret
mov
das
cmp
out
and
cmp
cmpb
pop
adc
in
cltd
pop
pop
and
out
mov
mov
adc
stos
dec
jns
push
jno
cmp
and
in
add
push
scas
call
pop
push
shl
fwait
outsb
sub
and
shlb
mov
imul
xor
inc
clc
sbb
jle
cs
and
pop
dec
outsb
xchg
cs
mov
jb
es
imul
lea
mov
outsb
and
fbstp
jae
test
sub
cltd
adc
repnz
and
sub
ljmp
xchg
ljmp
test
mov
mov
data16
jmp
mov
sbb
into
or
stc
xchg
sub
outsb
and
dec
ss
stos
jns
mov
jno
ja
mov
or
sbb
data16
or
lea
or
rcl
shlb
push
jb
inc
push
ljmp
dec
and
push
mov
pop
pop
rorl
mov
dec
cli
add
adc
rcl
dec
pop
imulb
and
cli
inc
push
push
jb
sub
xchg
mov
push
jo
and
adc
mov
ljmp
test
inc
dec
jno
mov
fs
add
mov
xchg
jle
dec
bound
sbb
jp
adc
lcall
pop
dec
bound
inc
idiv
adc
sete
stc
lock
in
outsb
pusha
jle
sti
lret
adc
ficoml
adc
out
push
aaa
xchg
xor
push
scas
or
cmp
inc
sub
adc
push
in
loope
test
sub
adc
orl
xchg
sahf
scas
nopl
cmp
xchg
mov
dec
pop
fidivl
adc
xor
adc
dec
es
mov
stos
arpl
aaa
push
inc
sbb
cli
pop
or
rorb
scas
xlat
je
jge
mov
push
pop
jle
in
jp
or
and
inc
mov
scas
js
pop
jmp
stos
rcr
fsubrp
and
fdivl
loope
outsb
cs
xchg
test
inc
jns
and
push
pop
cli
or
sub
stos
xor
or
loop
xchg
xchg
sbb
es
test
sti
adc
sub
and
outsb
rolb
sbb
sahf
push
clc
insb
cwtl
arpl
pusha
pop
pusha
xchg
addr16
jle
jp
ljmp
sub
bound
lods
mov
or
comiss
idivl
push
out
mov
pop
stos
fmuls
xlat
adc
xchg
test
imul
ja
cltd
sub
sbb
sarl
fdivp
xchg
mov
imul
and
out
out
push
jbe
decb
mov
adc
out
repnz
cltd
adc
cs
sbb
adc
imul
add
shlb
movsb
push
mov
adc
cbtw
dec
xchg
push
ss
das
loope
pop
mov
cs
fdivs
adc
pop
and
pushf
push
nop
mov
xchg
shlb
notb
push
xchg
pop
cs
push
or
scas
out
and
ds
mov
into
cmp
cli
adc
jae
mov
lds
adc
adc
mov
push
addr16
or
sbb
cmp
out
outsb
inc
mov
cli
adc
sub
jb
fisubs
jle
outsb
push
push
cmpsb
negb
shlb
js
and
jg
cld
stos
pop
inc
xor
xchg
push
das
cmc
std
sub
sub
jp
xor
addr16
add
cs
xchg
sub
pusha
dec
cmp
lret
mov
std
sub
pop
cli
sbb
fs
push
loop
inc
pop
adc
repz
push
jns
out
cmp
mov
inc
sub
pop
es
mov
jmp
xor
xor
pop
fdivl
es
pop
push
test
push
xchg
xchg
outsl
adc
out
and
adc
enter
es
or
outsb
cli
jge
arpl
adc
xchg
in
out
and
sub
adc
and
stc
add
sub
repnz
loope
sbb
mov
in
into
mov
das
pop
xchg
or
cltd
sub
mov
push
mov
sub
test
xor
pusha
pop
repnz
test
and
scas
lret
in
push
adc
std
out
dec
jbe
stos
or
inc
adc
mov
xor
mov
sbb
ficoml
xchg
xchg
cltd
mov
sub
cmpsb
lods
stc
xor
xlat
cmp
sbb
push
fidivs
dec
jle
adc
mov
xchg
out
sbb
es
xlat
mov
pop
add
xor
push
sahf
test
out
ss
push
pmulhw
jle
dec
sub
es
pop
sub
mov
adcb
pop
push
into
outsl
push
and
fisubrl
repnz
sahf
adc
sbb
fcmovbe
insb
rcl
add
inc
push
xchg
out
and
adcb
ljmp
xchg
lcall
pop
xchg
sub
int3
jb
dec
xor
clc
or
iret
int
test
jl
inc
xchg
into
jge
jno
xchg
sbb
stc
or
dec
ret
sbb
xor
mov
in
jg
sahf
lahf
repnz
pop
sub
xor
adc
mov
inc
sbb
pop
sahf
ljmp
cli
imul
jno
jbe
outsl
pmuludq
cli
mov
push
out
dec
sub
mov
sbb
das
inc
adc
loopne
xchg
ljmp
fnstenv
sub
jecxz
push
dec
arpl
push
push
popa
out
cli
mov
xchg
fcmovb
sub
addr16
add
ss
jecxz
or
jbe
into
fwait
sub
sub
ja
sbb
push
scas
mov
std
jg
lods
or
adcl
adc
insl
xchg
inc
adc
jns
sub
scas
jbe
push
clc
jl
fisubs
lahf
dec
xchg
add
int
cmpsb
mov
mov
xor
in
xchg
stos
lcall
adc
sub
sti
mov
out
test
dec
pop
jp
stc
dec
nop
pop
and
es
push
adc
sub
repz
dec
xchg
sbb
scas
fsubrs
mov
enter
shrb
mov
or
push
jle
adc
cmp
and
mov
mov
test
je
push
cmp
jne
adc
mov
repz
or
mov
push
rcll
scas
je
out
xlat
mov
test
jmp
out
pop
sahf
xchg
nop
dec
je
push
stos
push
ficoml
shlb
scas
into
outsb
sbb
shlb
and
or
lahf
inc
ja
pop
dec
out
loopne
sbb
adc
push
bnd
fisubrs
mov
nop
mov
mov
aam
push
aaa
mov
adc
int
outsb
hlt
adc
xchg
and
lcall
imul
push
notl
or
loop
pop
dec
cli
mov
jg
push
or
adc
out
xchg
lea
push
sarb
adc
pop
loop
pop
push
xchg
mov
loop
cld
test
jbe
mov
fisubrl
dec
scas
xor
lret
adc
scas
divl
cmc
adc
fisubrs
ficoms
lcall
push
push
repnz
push
fidivl
movsb
push
mov
stc
xchg
mov
push
mov
fdivs
adc
lcall
xor
pushf
xchg
adc
cltd
push
imul
jnp
jne
jno
mov
xchg
xor
or
adc
scas
and
mov
cmpsb
fldenv
mov
push
iret
jb
push
int3
cs
xchg
jbe
sbb
ss
pusha
mov
notb
jp
jge
and
xlat
mov
sbb
xchg
mov
xor
outsl
loop
cmpsb
jmp
cs
pop
and
mov
jbe
pop
cli
xor
aaa
in
pop
rorl
pop
push
jle
ficoms
seto
cmp
or
xor
jp
push
mov
adc
add
jbe
jnp
mov
sbb
sub
push
ficomps
adc
popa
int
push
mov
clc
int
sub
push
stos
jl
jle
pusha
aaa
imul
jbe
shll
aaa
sub
mov
jns
out
sbb
cmp
in
mov
movsl
add
movsl
repnz
pop
lcall
addr16
repnz
in
in
push
leave
sub
lds
or
lret
das
sub
orb
push
nop
mov
sub
sbb
xor
xor
std
adc
mov
pop
stc
sbb
ficoml
dec
or
push
call
xchg
cmp
leave
pop
mov
or
outsb
mov
mov
cmp
xor
rorb
ret
nop
add
ficoml
or
sbb
mov
dec
mov
pop
add
push
loope
test
notb
fiadds
dec
imul
xchg
and
pause
loop
stos
pop
inc
sbb
out
dec
in
and
shl
jbe
sbb
and
jb
notb
ss
leave
sahf
mov
pop
jge
pop
shrb
push
xchg
xor
mov
shlb
aam
or
cli
pop
in
sub
and
mov
jp,pt
dec
iret
mov
xor
loopne
imul
or
jno
add
sub
and
mov
sahf
push
xor
testb
es
fucom
leave
adc
lcall
pop
mov
mov
pop
cmp
push
sbb
in
mov
dec
shr
jle
dec
cld
and
adc
pop
nopl
cmpsb
sub
mov
shrl
repnz
cs
cltd
push
push
cmpsb
test
dec
adc
push
cmp
mov
cvtps2pd
dec
test
sub
pop
adc
jl
or
lcall
jb
data16
mov
pop
mulb
sahf
movb
jmp
mov
push
pop
cmp
scas
adc
jno
fisubrs
jp
imul
push
push
lock
cli
and
sub
fbstp
shr
add
dec
jge
mov
es
and
rorl
push
push
jbe
stos
add
int
ljmp
inc
inc
jle
movsl
sub
cmpsb
cmp
mov
mov
ficoml
xor
sahf
and
js
push
and
or
sub
xchg
rolb
or
and
adc
sub
sbb
push
pop
jae
addr16
enter
push
push
inc
adc
mov
push
mov
dec
fnstsw
xchg
test
sub
dec
sub
or
pop
adcb
inc
xor
adc
shlb
jge
sbb
lock
cmp
aam
scas
std
test
std
hlt
test
push
mov
or
imul
push
sbb
xor
shlb
lock
jo
lea
call
in
or
xor
pop
sbb
in
or
ljmp
jp
adc
outsl
xchg
jno
js
or
loop
jb
jns
pop
push
mov
sub
jg
and
cwtl
arpl
es
push
cli
fimull
outsl
movsl
outsb
leave
int
sub
push
xor
int
xchg
shll
sub
jno
mov
ljmp
xor
push
pop
shrb
adc
xchg
ljmp
or
fs
imul
test
rorl
out
pop
sahf
pop
sub
xor
mov
push
push
mov
sbb
pop
jmp
and
loope
add
jbe
outsb
or
test
cltd
mov
sub
xor
dec
js
push
mulb
leave
xor
pop
sahf
stos
push
adc
int
out
data16
popl
inc
imulb
fdivs
call
and
inc
push
jo
mov
mov
jbe
out
jnp
and
ds
pop
sbb
adc
fimuls
lret
xor
and
pop
pop
je
testb
lock
push
jne
in
jecxz
adc
lcall
jbe
sub
leave
pop
pop
sub
jl
sbb
int
mov
mov
xchg
jp
xor
pop
pushf
fidivs
dec
out
jle
push
and
pop
addl
and
push
jg
adc
sub
arpl
xchg
mov
sar
mov
out
addb
cli
loop
fcoms
cmpsb
std
and
jp
push
xorb
ljmp
outsb
mov
push
call
push
sbb
adc
push
push
cmc
sahf
es
push
cld
mov
cmpsb
or
jno
out
add
push
shlb
sbbb
sub
mov
jmp
lds
shlb
cmpsb
push
sub
adc
lock
and
fcompl
scas
nop
add
daa
in
push
inc
xchg
mov
test
push
sub
and
into
mov
es
int
incb
sbb
or
das
push
in
int
cmpsb
xor
adc
testl
ror
or
push
loop
fbstp
test
jp
lret
into
mov
xor
cmp
lock
or
imull
stos
or
sub
adc
add
jle
scas
in
jle
dec
ret
push
clc
cmpsb
push
stos
outsb
jne
and
push
dec
jg
mov
adc
jns
and
pop
push
inc
negb
adc
negb
dec
int
and
add
and
or
inc
jp
push
push
aam
jbe
cli
push
testb
or
and
cmp
stos
or
jns
mov
sbb
mov
daa
xor
or
shlb
scas
adc
rcll
or
mov
pop
sub
ljmp
js
xor
dec
push
iret
sub
push
fdivl
push
pop
add
mov
in
dec
xchg
adc
or
and
fdivrs
push
and
sarb
out
mov
jb
push
int
loop
js
test
nop
out
mov
cmpsb
outsb
jb
xchg
adc
adc
aam
loop
cmp
insb
lcall
push
popf
iret
movsb
cltd
jle
cltd
lea
xchg
inc
xor
cmp
psubb
fimull
cli
push
adc
adc
add
xchg
imul
bound
jne,pn
ficoml
sub
adc
rcrb
sahf
xchg
sub
int
dec
arpl
arpl
push
prefetch
or
pop
incb
scas
sub
push
es
adc
sbb
pop
mov
push
repnz
stc
scas
push
push
es
sbb
inc
into
xor
ficompl
lds
ljmp
adc
popa
dec
mov
cs
ljmp
push
jle
push
sahf
adc
rcr
mov
mov
pop
sub
jnp
push
sub
lcall
xorb
or
jle
add
jae
mov
mov
pop
test
ficoml
fadd
bnd
divb
imul
add
fidivl
jp
pop
xor
insb
push
imul
into
xor
jb
in
sbb
notl
and
clc
xchg
clc
insb
loope
or
repz
dec
push
and
sub
mov
leave
and
xor
and
cmp
push
loop
outsl
shlb
jns
stos
inc
jno
xor
dec
stos
leave
inc
fadd
sbb
shr
mov
jne
adc
jle
inc
pop
push
xchg
popa
scas
cli
xchg
fs
or
mov
imul
and
rcll
cmpsb
jb
mov
ljmp
mov
xchg
mov
idivb
inc
ss
sub
shll
bound
out
or
in
les
sbb
jle
mov
cmp
adcl
xor
push
mov
lods
cmp
sbb
fidivs
sbb
sahf
push
add
jb
sub
popl
scas
dec
scas
int
aas
fisubs
xor
inc
add
mov
xchg
add
or
sarb
jno
imulb
or
or
sub
jne
push
sbb
out
or
xchg
dec
fs
pop
sahf
push
adcb
push
shl
jp
fiaddl
sahf
mov
push
inc
bound
shl
loop
rorb
aas
shlb
imul
adcb
scas
into
mov
test
push
test
xor
daa
push
ss
fimuls
pop
xor
movsl
out
and
adc
adc
sub
hlt
adc
sub
stc
push
sbb
int
sahf
and
lds
loop
lcall
jbe
pusha
nop
data16
jle
add
adc
rcll
pop
fldenv
pop
adcb
loop
adc
inc
pop
sub
dec
cmp
cmpb
dec
out
andps
es
seto
cmp
push
xchg
adc
je
out
mov
or
mov
adc
jns
scas
pop
pop
out
jle
mov
dec
xorb
call
and
adc
stc
subb
sahf
mov
shrb
push
repnz
sbb
popf
jb
jp
addr16
mov
push
call
loop
stos
sbb
outsb
or
adc
jle
aam
fimull
inc
sub
push
push
pop
lds
sub
push
pop
dec
imul
pop
adc
push
in
ljmp
cmp
scas
cmpsb
push
ss
aam
adc
push
cs
jp
fmul
xor
into
xor
push
xchg
adc
pop
loop
cmpsb
adc
pcmpgtd
adc
sub
sub
push
movsb
mov
jb
cmp
mov
cltd
in
and
push
ds
or
movsl
mov
aaa
jns
push
jae
enter
cld
push
call
jl
mov
pop
ficompl
push
test
notb
push
scas
es
jo
adc
sbb
mov
repz
xchg
xor
or
or
scas
mov
stc
call
dec
test
lret
outsl
mov
pop
cmpsb
repnz
sbb
shrb
push
inc
out
xchg
mov
jp
push
sbb
mov
xor
sbb
mov
rcll
test
arpl
mov
cmp
mov
movb
pop
lea
mov
popf
cmpsb
push
and
jle
adc
sub
ficoms
add
jp
xchg
mov
ficoml
outsb
push
dec
jecxz
adc
in
or
or
scas
sub
pop
sub
jle
cmp
data16
xor
sub
hlt
or
or
pushw
jle
outsb
and
stos
repnz
imul
cmpsb
loop
into
lods
cmpsb
ret
cwtl
jle
decb
mov
insb
add
mov
aam
push
dec
arpl
adc
out
jae
stc
xchg
ret
sbb
push
call
scas
push
lcall
or
xorb
mov
bnd
out
xchg
in
pop
js
push
mov
mov
lret
pushl
shrl
ret
int3
std
leave
or
xchg
hlt
mov
xor
jne
gs
mov
jb
bound
jo
cs
xchg
or
add
movsl
jl
inc
mov
sbb
jp
arpl
pop
xchg
xchg
push
mov
or
adc
dec
divb
sbb
mov
pop
sahf
nopl
push
push
sub
dec
pop
out
sbb
add
sbb
pop
or
push
adc
aam
mov
out
cli
xor
dec
or
sbb
push
subb
dec
jne
pop
test
sarb
imul
imul
xor
sahf
push
notb
int
xchg
inc
out
fidivrs
inc
xor
adc
xchg
cs
sbb
and
lcall
shlb
sub
es
jmp
xchg
lahf
jp
jbe
xchg
adc
and
data16
fcmovbe
xchg
loop,pn
lds
data16
jb
cmp
rcrb
lds
pop
push
adc
or
ret
xchg
jo
sub
inc
xor
sar
mov
movsl
add
mov
cs
xchg
jns
test
fstpl
test
and
dec
rcl
dec
stos
mov
xchg
lds
add
jb
sbb
bnd
jbe
pop
xchg
push
mov
or
dec
xor
mov
push
bound
imul
dec
arpl
imul
inc
push
push
add
inc
xor
and
xor
cmp
mov
cld
mov
push
inc
gs
syscall
push
das
xchg
mov
shl
data16
hlt
adcb
push
push
adc
xchg
jle
cmpsb
mov
outsb
push
aas
xor
adc
out
pop
sbb
fs
lea
loopne
outsb
ljmp
push
sbb
sahf
outsb
rcl
enter
pop
mov
fnstsw
xchg
push
outsl
xchg
pop
in
jns
jbe
je
mov
pop
imul
mov
jle
lcall
mov
xchg
mov
adc
rolb
aad
sub
cmp
mov
fdivrl
loopne
and
mov
xor
sub
daa
stos
jle
aas
xchg
push
dec
jecxz
sbb
xchg
ficomps
stos
push
subb
push
cmpl
or
enter
push
push
jle
repz
out
jp
cli
push
pop
xor
shrb
das
inc
dec
bound
das
push
mov
fidivrl
and
dec
adc
pop
push
push
push
mov
cmp
add
push
inc
scas
sub
dec
fs
scas
cld
fstpt
nop
push
loope
and
xchg
sub
cmpsb
push
stos
es
mov
push
clc
pop
inc
shlb
pop
shrl
pop
ljmp
sub
js
mov
mov
mov
mov
push
jbe
dec
pop
test
mov
mov
lods
mov
scas
notb
adc
popf
fisttps
pop
push
stos
push
sub
mov
pop
mull
incb
outsl
pop
inc
xor
mov
mov
pop
add
jge
insb
test
sar
scas
imul
mov
jl
scas
ja
fcoml
pushf
mov
add
stc
rorl
sub
push
inc
loop
sahf
pop
or
jbe
xor
scas
or
pop
into
jbe
iret
js
dec
or
push
push
outsb
ljmp
xchg
pop
and
lock
aam
repnz
into
in
sub
and
mov
out
dec
add
push
push
or
sub
sbb
sbb
dec
mov
push
push
xchg
scas
push
inc
aam
cli
stc
arpl
mov
pop
iret
sub
jp
sub
mov
cltd
scas
jns
push
dec
xchg
adc
ror
push
rolb
in
add
imul
mov
jae
mov
push
mov
xchg
rcll
cltd
scas
data16
add
stc
outsb
jne
shrl
jne
js
sub
adc
sbb
xchg
jle
lcall
aaa
mov
push
ljmp
or
inc
push
and
xchg
push
scas
push
mov
jns
sbb
jnp
push
out
and
jb
lahf
dec
inc
jmp
sarb
shlb
add
frstor
loop
lea
adc
lahf
arpl
cltd
xor
push
sti
sub
mov
sbb
test
and
push
push
push
loopne
negb
dec
mov
push
jp
cs
xorb
push
insl
notb
int
ret
pop
jp
call
dec
fcmovbe
sbb
and
xor
mov
adc
repnz
adc
adc
or
jle
loope
mov
jp
popf
sbb
jle
outsb
jg
cli
adc
adc
sahf
mov
ss
outsb
adc
push
and
sub
call
jl
fst
add
cwtl
xor
cli
mov
jb
mov
dec
icebp
adc
aas
xchg
dec
push
hlt
je
inc
mov
aas
xchg
add
and
mov
adc
fnsave
cltd
adc
lret
jno
dec
fldenv
adc
iret
iret
cmpsb
push
inc
pop
jle
push
sbb
scas
sbb
enter
pop
or
leave
sbb
push
add
push
xchg
push
das
enter
mov
bound
outsl
ret
nop
jmp
arpl
incb
leave
mov
or
ficomps
es
popa
add
out
adc
aam
sbb
xchg
mov
sub
out
sub
outsb
lcall
outsb
data16
and
iret
scas
lcall
and
mulb
mov
int3
enterw
mov
inc
lcall
pusha
jns
mov
mov
xor
pop
sbb
lcall
sar
jns
adc
mov
and
movsl
cli
shll
jae
popa
lea
sbb
or
stos
mov
and
add
pop
xchg
es
push
insb
mov
insb
xchg
outsb
or
push
into
add
mov
nopl
xor
push
cmp
jb
movb
pop
jns
add
inc
xchg
jmp
outsl
jg
repnz
push
xor
jb
das
and
jbe
arpl
dec
push
stos
xchg
adc
push
jb
stc
bound
jle
gs
mov
push
sub
out
pop
bnd
sti
imul
enter
sub
ss
shr
xchg
sbb
out
dec
xor
xor
sbb
lret
fmull
pop
and
xor
dec
push
sbb
idivb
stos
pop
xor
scas
js
jp
add
cwtl
jge
stc
pop
jbe
stos
loopne
xor
mov
sbb
mov
add
inc
dec
orb
das
jnp
push
fisubs
mov
int
mov
adc
dec
mov
xchg
outsb
imulb
mov
fldl
jns
mov
mov
ficomps
adc
outsb
mov
arpl
fadds
push
js
pop
sbb
adc
push
stos
shlb
xor
cmpsb
jp
xchg
mov
push
gs
mov
outsb
js
pop
in
shll
cli
adc
btsl
push
xchg
or
pop
out
mov
xchg
pop
rolb
adc
aas
stc
jecxz
popf
sbb
add
inc
lcall
incb
pop
subl
pop
sub
fidivs
mov
pop
popa
push
scas
pop
xor
fsub
dec
aas
cmpsb
push
push
adcb
xor
std
in
dec
jae
loop
mov
and
push
adc
push
jmp
repnz
scas
xor
shll
add
pop
or
mov
or
enter
mov
mov
sbb
push
loopne
sub
cltd
xor
jge
decb
push
ret
mov
cli
scas
or
ficoml
pusha
jbe
dec
cld
push
cmpsb
or
add
inc
out
popa
sbb
push
and
sub
mov
cmpsb
mov
test
dec
sub
movsl
xchg
mov
lcall
ss
push
negb
xchg
or
dec
xlat
jne
jle
movsl
testb
jb
pop
outsb
sbb
adc
cmc
cmp
ljmpw
mov
inc
sub
jbe
jle
push
lds
out
stc
loope
outsb
mov
jns
sub
repz
sti
test
pop
fiaddl
mov
cltd
and
nop
subl
jbe
jnp
aad
adc
faddl
adc
add
mov
add
lods
stc
inc
mov
mov
scas
out
mov
movl
mov
cld
and
scas
xor
adc
lods
xchg
push
pop
xor
and
out
cmp
iret
add
mov
fwait
in
mov
sahf
lea
lock
stos
xchg
sbb
push
imul
push
xchg
out
stos
sub
stc
mov
fstl
pop
pop
repnz
xor
and
fmuls
sub
aad
push
sub
sahf
movsb
lcall
ficomps
bound
xchg
pop
xchg
cltd
sbb
mov
push
fdiv
mov
xchg
jb
mov
xor
push
xchg
add
dec
mov
dec
sub
rcl
mov
movb
insb
jbe
mov
repz
mov
aaa
jle
jmp
shll
adcb
xchg
sub
xorl
jp
or
push
mov
push
cmpsb
adc
adc
adc
fadds
mov
out
ds
pop
and
jg
lea
push
ja
sahf
xchg
xchg
lds
mov
or
movsb
pusha
int
popa
and
xchg
xchg
lret
gs
or
xor
mov
adc
inc
out
std
or
or
test
cmp
sub
inc
adc
mov
or
scas
adc
pop
loope
jp
jmp
xor
xor
mov
decl
pop
pop
clc
jnp
sbbl
jae
push
adc
xchg
sub
addr16
xchg
mov
push
imul
xor
sahf
orps
pop
leave
shrb
add
js
sub
mov
in
sarb
pop
and
dec
sub
push
ljmp
imul
jb
mov
sbb
sub
push
mov
or
inc
jno
sahf
mov
xchg
mov
push
mov
inc
outsb
mov
cltd
loop
clc
push
sahf
bound
cmovg
and
sahf
repz
stc
mov
sub
rclb
rorb
and
lcall
or
pushf
push
pop
jns
push
push
mov
add
xor
sbb
and
mov
adc
dec
mov
divl
mov
xchg
push
idivb
lods
cld
push
outsb
das
fiadds
movsl
push
push
ret
push
mov
xchg
mov
sub
sti
mov
and
cmp
mov
fisubs
rcl
into
or
ret
jae
inc
jnp
test
adc
mov
lcall
cmovle
sub
or
in
decl
loope
clc
jno
jp
pop
inc
decl
sahf
dec
mov
push
adc
mulb
loopne
and
data16
or
jle
aad
scas
mov
push
or
add
cmp
xlat
shl
scas
cltd
scas
or
loope
data16
leave
sbb
push
jecxz
iret
sub
jge
bound
pop
sub
sub
jle
cmpsl
aas
jg
sbbb
mov
sub
lcall
jg
xor
push
cmpsb
mov
out
jp
rorb
adc
add
jno
rorb
sub
or
js
sub
push
movsb
pop
arpl
xchg
jbe
scas
cmpl
push
rolb
push
xchg
pop
mov
loopne
sub
xor
sub
cmp
adc
adc
shlb
push
add
pop
sbb
mov
outsb
push
pusha
sub
pusha
add
out
mov
pop
and
adc
fstpl
insb
pusha
or
push
xchg
xor
and
adc
out
xor
add
push
jns
addb
jmp
push
jle
mov
push
pop
mov
aas
xor
cmp
or
xchg
imul
sub
loop
scas
stos
pop
dec
bound
xchg
in
ficoml
insb
jle
add
mov
test
cltd
mov
push
pop
pop
imul
jne
data16
adc
repz
pop
daa
push
xor
repnz
pop
add
jb
cmp
push
pop
xchg
dec
push
mov
inc
jns
cmpsb
rclb
pop
push
dec
jg
xchg
xor
dec
add
cwtl
mov
cmc
into
adc
rcrb
push
int
cmp
popf
imul
sub
sub
outsb
std
mov
push
or
and
inc
or
in
sub
adc
mov
ljmp
loope
adc
sarl
cmp
jecxz
pop
jns
sub
inc
sub
sub
push
data16
lcall
rep
xchg
pop
jns
adcb
mov
negb
in
mov
out
in
cs
cmp
cltd
inc
cli
scas
loop
mov
mov
es
test
pop
adc
lret
cltd
int
or
jno
jb
jmp
int3
mov
add
xchg
pop
es
push
push
mov
adc
rcll
orb
adc
shrb
xlat
sbb
or
sbb
ss
pop
xchg
lock
mov
mov
cwtl
sbb
fsubrs
push
lds
mov
std
jns
imul
stos
std
das
movsl
or
das
xlat
jno
mov
imul
sub
sbb
sub
sbb
push
adc
insl
lods
mov
sbb
sub
or
cmp
pop
bound
cmpsb
scas
sti
push
mov
jp
in
push
scas
and
push
outsl
add
leave
ljmp
cli
das
pusha
xor
scas
add
gs
adc
push
test
and
loopne
stc
jle
subl
sub
jbe
data16
jl
loopnew
std
add
mov
out
loop
sbb
ficoms
or
ljmp
mov
das
aas
std
repnz
mov
and
mov
or
xchg
ret
cmp
inc
jl
or
add
jno
mov
jp
push
es
pushf
or
mov
pop
jp
stos
adc
push
sub
scas
out
call
lcall
bound
push
nop
scas
dec
and
pop
jbe
or
clc
push
mov
iret
push
xchg
jbe
stos
push
test
rcrb
lods
cmpsb
jo
mov
lea
push
jae
xchg
cmpsb
xchg
xchg
lds
xchg
push
jbe
pusha
sbb
repnz
xchg
lea
out
adc
mov
xor
movsl
add
jno
es
jns
xor
sbb
mov
xor
jle
mov
out
and
fstpl
outsb
mov
scas
shrb
sbb
mov
push
fidivs
imul
outsb
into
or
adc
add
sub
aas
adc
scas
stc
adcb
cmovae
add
ss
pop
xlat
sbb
rcll
jbe
jle
icebp
push
inc
xor
rolb
data16
adc
rcrb
inc
mov
jg
pop
mov
insb
scas
jmp
xchg
pop
es
sub
push
inc
es
mov
fiadds
or
mov
pop
filds
push
mov
push
adc
jno
scas
adc
add
dec
repnz
negb
lds
push
add
cmp
dec
cmp
dec
sub
push
out
loope
bound
jno
outsb
xlat
push
push
aam
push
outsb
sahf
adc
jbe
cs
cmp
mov
nop
xor
repnz
xor
pop
push
ficoms
movsl
add
or
mov
jns
sub
data16
ljmp
adc
es
shlb
jno
ss
cli
jno
imul
inc
push
mov
shl
push
sbb
outsb
sub
xchg
inc
jne
adc
jns
jp
cmovo
mov
and
or
pop
sbb
push
sub
mov
adc
sbbl
mov
jns
and
outsb
ret
sub
shrb
notb
sbb
lods
add
jle
xchg
mov
jp
bound
mov
fs
ja
stos
fisttpll
out
into
lds
inc
add
mov
push
test
psubusb
jl
or
push
aam
push
mov
xor
lock
adc
out
adc
mov
notb
decb
pop
mov
int3
lret
stos
cli
jl
popa
stc
out
fistpl
popf
cmp
sub
mov
jns
mov
jg
push
mov
and
jbe
sarb
inc
xchg
subb
adc
push
scas
xchg
stos
cmpsb
mov
in
sbb
adc
pop
mov
pop
inc
mov
test
adcl
lcall
loop
mov
fs
mov
ficompl
pop
pop
cmp
int3
pop
push
adc
pop
cmp
rcll
xor
cmpsb
into
mov
pop
lret
dec
bound
mov
push
cmpsb
mov
mov
and
hlt
enter
outsb
and
push
mov
push
lcall
notb
cmpsb
xchg
sbb
je
xchg
int3
jns
aad
lcall
mov
mov
xor
scas
idiv
popa
adcl
cmpsb
and
push
popf
ljmp
int
xor
cmp
arpl
xchg
imul
dec
mov
or
push
adc
aas
outsb
adc
and
rcrb
mov
xorb
dec
int
push
outsb
or
lods
push
fimull
gs
mov
push
fisubs
out
and
shrb
push
mov
push
stc
and
xchg
and
xor
dec
dec
scas
orb
inc
or
push
adc
xor
inc
ja
inc
jno
mov
or
outsb
stos
pop
std
adc
rcrb
cmpb
aam
xchg
adc
mov
push
cmp
push
push
push
out
push
jle
dec
into
sbb
inc
dec
xor
jb
fidivrs
outsb
xchg
lea
push
or
push
mov
into
jl
rorb
das
adc
mov
xchg
mov
data16
loopne
into
or
push
sub
ficoml
xor
lcall
push
ljmp
xor
repnz
inc
rclb
jns
pop
mov
les
push
jae
xchg
or
push
xor
and
scas
pop
hlt
outsb
inc
inc
stos
jo
jno
fsubp
imul
push
mov
mov
adc
mov
dec
dec
xchg
cmpsb
xor
orb
cs
inc
inc
push
outsb
xchg
push
sub
jg
mov
xor
aad
ljmp
cmpsl
hlt
clc
rclb
in
rcrb
mov
xchg
cli
mov
test
inc
cmpsl
mov
pop
cli
sbb
sbb
cmpsb
pop
psubd
jle
dec
pusha
jnp
lods
bnd
dec
arpl
shr
pop
or
lret
icebp
int
divb
shlb
xchg
and
rclb
or
or
out
popa
mov
jle
mov
scas
in
ror
pop
test
adc
shrb
sahf
pop
push
push
out
lahf
cmpsb
sub
xor
imul
outsb
cmp
es
push
add
pop
loopne
fisttpl
and
push
jle
movsbl
sahf
mov
jp
adc
sbb
rclb
stos
fidivl
pusha
cmp
xor
cmp
adc
mov
jae
imul
lock
cltd
lret
fisubrl
pop
push
push
sbb
mov
xor
data16
out
bound
outsb
push
es
adc
out
dec
jae
push
or
jp
jbe
les
push
push
and
pop
stos
sub
adc
in
cs
loope
push
jb
push
scas
mov
sahf
push
sti
xchg
dec
shr
xor
aas
movsbl
jle
imul
outsb
pop
mov
sbb
sbb
add
add
dec
adc
push
testb
sbb
fidivl
jns
shlb
jp
scas
add
push
dec
cmp
outsb
jbe
sbb
xchg
jae
dec
xchg
mov
sub
testl
lds
dec
and
mov
in
rcl
ficoms
xchg
cmp
push
rorb
stos
xor
push
xchg
jb
pop
or
ss
std
mov
bound
push
mov
adc
roll
cmc
mov
and
add
jno
in
or
push
push
int
jb
lcall
int
fimull
xchg
jle
pop
dec
adc
xor
cmp
addr16
fcmovb
push
out
sub
push
xchg
repnz
sub
out
scas
ds
xchg
jns
addb
or
cmp
imul
pop
std
call
xchg
jle
scas
or
loop
insb
mov
mov
and
imul
and
inc
push
add
dec
sub
adc
or
add
movl
pop
lods
inc
push
adc
sti
pop
popf
imul
mov
into
repz
add
jbe
imul
sbb
les
mov
stos
mov
push
dec
iret
in
add
mov
js
adc
mov
jle
and
ret
mov
xchg
xor
or
rcrl
inc
xchg
shlb
pop
xor
out
je
mov
dec
outsb
push
mov
mov
je
mov
pop
sub
push
sub
push
lods
ss
dec
fildl
xchg
xchg
sub
inc
mov
xchg
sub
cld
es
inc
cltd
push
mov
in
mov
scas
mov
fisttpl
or
jecxz
push
popa
fldenv
mov
push
fldt
sub
xchg
jae
imul
or
cli
jb
std
in
std
outsb
loope
aas
fisubrl
sub
out
sub
add
jo
jns
stos
loop
rcl
xchg
push
jmp
xor
shll
jp
mov
push
mov
adc
mov
daa
adc
inc
loop
rcrb
jle
jle
jbe
jp
loopne
sub
lret
mov
and
ficomps
pop
hlt
push
push
sbb
and
scas
in
and
xor
or
xchg
cmpsl
adc
push
pop
mov
pusha
jnp
inc
mov
adc
push
jns
sub
in
mov
movsl
add
push
je
push
sbb
add
mov
sub
jne
inc
out
lahf
sub
mov
push
inc
sub
stc
cmpsb
loope
rcrl
ret
mov
sbb
addb
and
iret
ret
repnz
xor
pop
sbb
jb
loop
arpl
push
inc
sub
into
push
push
jp
into
or
jb
mov
test
sub
xor
mov
xchg
mov
cmpsl
iret
test
stos
shrb
push
out
jle
push
leave
repnz
incb
ss
push
cli
xchg
mov
mov
fimuls
frstor
in
add
mov
push
adc
int3
shlb
sub
bound
out
dec
xchg
push
push
push
cmpsb
cld
jecxz
jl
fstpl
push
xchg
cmpsb
push
mov
xchg
adc
or
retw
imul
cmpsb
sub
jle
sbb
mov
popf
xchg
loopne
push
mov
or
and
or
mov
ss
pop
lcall
push
or
sbb
movsl
sbb
add
dec
or
jmp
push
mov
fidivrl
roll
hlt
sub
movsl
dec
sahf
sbb
push
push
out
cli
lcall
sub
sub
xor
stc
jl
leave
fstpl
out
or
sbb
mov
cmp
add
sub
dec
out
and
pop
ret
mov
fs
dec
ficomps
jle
mov
push
add
pop
push
or
pop
arpl
neg
sbb
dec
push
push
stos
scas
out
adc
int
pop
scas
jmp
adc
or
loop
test
cs
into
and
das
xor
int
ficomps
mov
popa
int
push
jo
cli
outsb
sbb
movsl
and
ficoms
adc
and
and
cltd
mov
pop
inc
push
dec
pusha
sub
ljmp
sub
sbb
inc
fs
aas
scas
sbb
fcmovne
dec
xor
iret
and
stc
cltd
stos
xor
push
sbb
mov
or
dec
jp
mov
scas
leave
mov
sub
leave
and
inc
add
cmp
push
vpshld
xchg
or
icebp
fbstp
sbb
sbb
sbb
or
stc
mov
call
mov
out
movsl
xchg
jge
xchg
das
outsb
cmp
inc
ljmp
cs
pop
or
push
rcr
mov
jp
dec
or
es
xor
jno
xchg
arpl
fisubs
and
xor
push
sbb
iret
pop
jp
sub
test
mov
xor
inc
jb
push
das
cmpsb
add
cli
xchg
pop
add
iret
adc
scas
xchg
adc
mov
dec
add
bound
push
adc
iret
or
sahf
and
xor
pop
cwtl
sbb
adc
adc
jno
push
jae
pop
jbe
jbe
or
dec
and
rclb
sbb
pop
repnz
mov
push
lcallw
mov
mov
mov
lea
mov
pop
dec
test
jbe
ficomps
push
jmp
sub
jle
nop
jb
pop
push
mov
push
pop
add
popf
cli
jns
push
push
push
scas
fmul
push
cmc
loop
das
or
xor
dec
sub
and
mov
subb
push
adc
iret
mov
fs
fnstcw
or
vmovaps
add
shl
push
dec
shlb
xor
mul
jle
push
cs
sbb
int
mov
es
fisubrl
subb
jp
adc
pop
nop
jne
leave
inc
ljmp
std
push
movsl
es
inc
or
call
xchg
push
dec
cli
fdivp
pop
pushf
push
jecxz
out
or
jp
xchg
out
in
pop
ss
pop
fcmovbe
cmpsb
mov
outsb
sub
movsl
mov
fs
and
out
loope
cmpsb
sbb
push
iret
dec
shlb
data16
arpl
push
cmpsb
fisubl
fsts
and
rcrb
push
lcall
xchg
bound
imul
leave
scas
fucomip
in
int
fs
jns
scas
repnz
and
mov
adc
pop
mov
ss
sbb
lock
scas
cmp
mov
test
push
push
mov
test
sub
sub
push
pop
mov
sbb
jg
jp
push
mov
sub
mulps
fwait
push
ret
out
jne
fidivs
cli
fcomps
or
jle
dec
jns
push
add
xor
scas
xlat
lret
mov
sbb
int
stos
rorb
into
rorb
add
pusha
mov
and
movsl
mov
xchg
push
insb
push
pop
sub
lcall
dec
xor
or
pusha
adcb
dec
pop
adc
xlat
pop
push
and
cmpsb
daa
mov
xor
jne
and
sbb
stc
shl
inc
es
mov
sbb
sbb
or
les
mov
out
push
xchg
sbb
push
pop
or
lahf
sbb
stc
aam
out
push
lods
xchg
xor
and
out
mov
jae
lret
xor
outsb
bound
stos
mov
xchg
out
out
cmpsb
or
dec
int3
bnd
mov
sbb
or
add
or
xchg
cmp
xchg
lock
push
inc
mov
cmpsb
inc
push
int3
aaa
leave
or
xchg
leave
scas
jl
adc
mov
jo
push
or
sahf
dec
sbb
or
mov
xlat
jmp
or
adc
sar
fcom
movsl
mov
popa
xor
loop
cs
movsl
mov
sub
push
test
fdivl
or
mov
jmp
push
loop
das
cli
push
cli
jle
push
or
in
into
test
dec
sbb
xor
lahf
or
jb
in
test
arpl
sbb
xchg
push
jbe
ljmp
pop
sarb
xor
and
inc
stos
cmp
or
and
inc
jno
dec
pusha
repnz
ss
scas
sub
jno
sahf
negb
bound
fiadds
mov
or
xchg
pop
xchg
lcall
pop
push
push
pop
pop
mov
jno
fcomps
int3
dec
sbb
mov
stos
jmp
ficomps
sub
in
adc
or
add
mov
push
popa
adc
push
adc
and
push
xor
pop
push
pmulhuw
push
push
lahf
and
xor
cmp
insb
scas
sub
loopne
jb
sub
pop
or
dec
mov
cmpsb
lods
cmpsb
aam
pop
mov
lret
rclb
sbb
pop
dec
mov
push
ret
pop
or
sbb
jns
sub
adcl
sarl
add
dec
dec
and
popa
leave
ficompl
cmp
stos
push
xor
inc
je
dec
cmp
movsl
out
mov
bound
push
jle
into
shl
ficoms
xor
pop
movsb
xchg
dec
movsl
jg
or
push
dec
push
sub
adc
in
in
pop
xor
push
push
cmp
out
sbb
shlb
and
mov
mov
sbb
lea
imul
dec
pop
push
out
adc
in
bound
insb
and
outsl
pop
or
pop
pop
incb
insb
and
xor
inc
xor
xor
push
popf
adc
xor
les
push
enter
sar
loop
mov
sahf
adc
cmp
push
sbb
out
bound
out
sahf
mov
cmpsb
es
repnz
push
jp
jb
ficompl
and
fidivrl
sub
sahf
fwait
dec
mov
dec
sub
mov
push
shlb
pop
cmp
mov
jl
and
push
push
mov
push
fsts
or
adc
push
rorb
aam
inc
adc
xor
mov
push
loop
enter
cli
adc
sbb
cwtl
or
repnz
pushf
xchg
cli
shufps
jg
sub
fs
das
xor
nopl
add
cmpsb
test
fisttpl
loop
je
pop
and
push
data16
fidivrs
movl
sbb
mov
add
jbe
pop
es
push
dec
jg
stc
in
pop
sub
xchg
dec
subl
jle
xor
das
sub
pop
sub
jge
sbb
outsb
movsl
push
inc
ret
scas
jle,pn
jle
in
fistl
stc
jle
add
aam
mov
push
push
push
shl
decb
mov
and
pop
mov
inc
and
xor
sbb
push
scas
inc
rcrb
sub
xchg
jp
iretw
int
sbb
clc
fdiv
push
inc
push
mov
add
je
in
scas
out
scas
in
or
xchg
sahf
rcll
ss
aam
or
jae
cltd
scas
sbb
inc
or
cmp
mov
xor
add
or
add
inc
dec
stos
cmp
fisubs
or
add
cmp
push
xor
out
pop
adc
imul
cmp
dec
mov
stos
bound
sub
xor
pop
mov
push
push
lret
xor
subb
sbb
push
or
jp
jno
adc
pop
push
push
xchg
push
scas
jno
loop
mov
sub
push
xchg
sbb
fimull
xor
ret
out
mulb
mov
sub
outsb
sbb
xchg
loope
mulps
sub
ss
inc
imul
push
sbb
bound
lahf
cwtl
sar
scas
mov
push
shrb
sub
add
xchg
daa
push
out
shrb
cmc
out
mov
dec
xor
test
daa
push
dec
pop
or
cmpsl
push
jg
aad
mov
dec
in
dec
sub
aam
pop
clc
jp
lret
dec
stos
xchg
jl
jnp
push
inc
cs
outsb
push
dec
dec
cmp
mov
sub
xchg
and
push
push
fbld
fadds
lret
or
sub
pop
and
jb
and
in
ss
orb
jle
movsb
lret
lret
mov
pusha
subl
push
jbe
jle
adc
dec
ss
js
call
sbb
stos
fisubrl
scas
lcall
and
push
mov
xchg
jp
mov
sub
adc
xchg
call
dec
mov
jmp
fwait
ljmp
add
lcall
lea
or
aam
mov
or
loope
xchg
xchg
mov
orb
fstpt
aad
repnz
aaa
out
jbe
outsb
mov
dec
jno
add
out
mull
fisubrl
sbb
mov
jb
sub
rdtsc
mov
adc
or
dec
outsb
lcall
sub
shrb
lcall
cmp
sarb
jg,pn
cmp
mov
mov
call
pop
movsl
sbb
addr16
mov
das
lcall
les
or
xchg
insl
sbb
rcl
fistps
add
fwait
xchg
xor
scas
stos
sbb
jbe
shl
and
sub
mov
push
push
cmp
xrelease
pop
and
add
test
and
sbb
cmp
add
jae
fisubrl
xor
and
inc
mov
jle
mov
dec
push
mov
xchg
imul
cmpsb
and
sub
xchg
scas
in
or
scas
adc
or
ja
lds
or
stos
aaa
std
pop
mov
jb
cmp
mov
xor
sub
out
scas
mov
clc
push
iret
stc
mov
movb
add
mov
mov
pusha
gs
jle
call
sbb
push
imul
mov
fidivrl
sub
add
adc
mov
push
fstl
scas
sub
lds
xor
mov
fsub
fisubl
ret
out
add
hlt
jecxz
addb
mov
lcall
cwtl
mov
arpl
sbb
jle
inc
mov
adc
mov
or
xchg
mov
push
sbb
jle
xchg
lfs
popf
jnp
jnp
scas
shll
jp
mov
mov
lds
xchg
jp
add
cli
jbe
xlat
js
cwtl
out
pop
les
in
mov
iret
aaa
mov
xchg
xlat
mov
and
sub
sarb
data16
pop
mov
jbe
notb
or
push
xor
xor
push
in
arpl
cmp
pop
add
jle
xlat
leave
or
pop
xor
ljmp
pop
adc
pop
pmaxsw
ss
into
push
xchg
sbb
sbb
sub
jle
mov
fidivrs
out
in
or
mov
mov
inc
in
lods
adc
jecxz
xor
insb
cmpsl
stos
pop
sub
sub
xchg
bound
shlb
out
push
cli
xchg
cmp
adc
fcoml
aam
inc
push
outsb
ss
outsb
sub
in
and
jmp
cmp
mov
mov
imul
inc
jnp
and
rorb
push
shl
push
jae
xor
sbb
and
int
scas
mov
adc
data16
and
fs
sub
add
pop
or
mov
stos
or
dec
push
ss
cli
mov
push
adc
negl
mov
xor
ss
jle
or
and
mov
mov
cmpsb
add
ret
imul
aam
lea
adc
lahf
imul
dec
sub
or
lret
adc
cmpsb
les
jle
in
cmp
inc
cmpl
scas
bound
jbe
es
xor
push
fsubl
sbb
jle
push
sub
and
sti
enter
pop
out
popf
pop
in
mov
adc
jp
sbb
in
cmp
iret
fisubs
cs
mov
sahf
xchg
stos
add
xor
or
push
rorb
aam
push
pop
push
dec
sbbb
pop
push
rorb
jp
push
test
dec
mov
xchg
lret
test
out
sub
outsb
int
push
or
paddb
in
loop
xor
mov
inc
jne
pop
icebp
cmp
dec
shrb
or
xchg
pop
std
outsb
dec
ja
cmpsl
imul
jp
dec
sahf
or
fisubl
pop
and
ds
fsubrp
pop
jb
dec
out
push
loop
fisubrl
adc
mov
inc
ja
sub
dec
sahf
adc
push
mul
mov
es
mov
lcall
xor
adc
mov
lods
add
sub
and
nop
cltd
bound
push
stos
psllw
adc
mov
push
mov
xchg
push
mov
pop
xor
test
xchg
mov
xor
sub
push
cmp
dec
xchg
lcall
fxch
adc
and
lcall
and
ja
push
xchg
cmp
cltd
test
mov
xor
sub
xchg
ss
out
lret
movsl
cmpsb
or
push
cmp
pop
push
bound
jb
cmp
lock
ljmp
cmp
sbb
lret
or
dec
pop
dec
xor
xor
jae
and
cmpsl
cmp
loop
jae
imul
mov
lds
jb
data16
stos
aam
rclb
sub
add
pop
mov
mov
int3
dec
test
mov
jbe
mov
aas
shr
fisubs
push
lcall
xor
lock
sub
sub
ljmp
mov
sarl
jno
shrb
add
jle
push
out
push
ljmp
loop
xchg
scas
mov
mov
xor
inc
js
fbstp
stos
push
push
js
mov
push
pop
pop
cmp
ds
pop
sarb
adc
or
jp
adc
xor
jb,pn
pop
xchg
or
scas
inc
dec
pop
push
pop
inc
pop
aad
sbb
loop
xchg
dec
pop
ss
add
es
lret
repnz
movsb
xchg
dec
imul
sub
push
cltd
adc
loopne
push
sub
push
sbb
mov
cmpsl
push
gs
ljmp
jno
inc
cli
data16
fcmovnbe
mov
shrb
adc
mov
fcoml
ror
es
pop
popa
and
push
test
sbb
lods
add
scas
sbb
mov
leave
lret
popa
push
es
sbb
rolb
inc
sbb
sub
ljmp
inc
or
sbb
outsl
and
and
or
push
push
cltd
ficompl
push
or
mov
fcoml
jns
adc
dec
inc
sub
or
xor
sub
mov
push
jae
fisubrs
scas
xlat
ss
ss
aam
loop
cmpsl
sbb
jae
test
ret
xor
pop
rcrl
or
and
lahf
jg,pn
fnsave
and
scas
out
movsl
ficompl
aad
popa
pop
pop
dec
mov
outsb
mov
lcall
dec
icebp
sahf
jle
bound
data16
daa
loop
loope
jmp
or
sub
stc
adc
test
jmp
jbe
push
jns
jb
mov
adc
sbbb
scas
xor
sbb
pop
pop
push
and
into
outsl
out
mov
loop
mov
jle
cmc
xchg
pop
into
sti
int
jp
sub
xor
mov
stos
sub
sbb
jp
lods
push
stos
mov
push
ja
push
mov
scas
dec
cmp
je
dec
out
cmp
stos
xchg
xchg
or
pop
jae
jp
int
mov
push
or
cmpsb
sub
adc
lret
mov
adc
cld
or
mov
into
or
xor
cs
loope
mov
mov
loop
fsubrs
jle
imul
dec
lahf
out
mov
sbb
in
outsb
inc
push
cwtl
jbe
push
frstor
stc
sub
sub
mov
and
jmp
pop
push
mov
push
sbbl
xchg
es
out
jbe
cltd
mov
popf
cmp
jno
jb
dec
mov
push
scas
pop
mov
add
xor
out
fisttpl
xorb
cmp
lahf
imul
jae
test
fdiv
adcb
mov
clc
fstpl
and
or
into
xorb
inc
test
and
xchg
xchg
outsb
hlt
lcallw
add
mov
movsl
ljmp
inc
cs
and
pusha
movsl
sub
out
aas
inc
cmp
imul
mov
nop
es
inc
jp
sbb
ljmp
and
add
cs
lret
enter
lcall
adc
mov
cmpsl
xor
rcrb
insl
stc
pop
push
mov
sbb
aam
push
push
test
push
hlt
cmp
lods
fisubrl
or
cmpsb
push
stc
ss
sbb
lcall
dec
or
out
xchg
xchg
push
pop
pop
mov
mov
shl
push
loop
pop
or
add
jbe
dec
out
jb
mov
mov
movsl
mov
and
in
fdivrs
fs
imul
and
xor
xchg
adc
xchg
scas
xchg
outsb
sub
pop
bound
adc
dec
jae
rclb
inc
nop
cmp
popw
mov
add
dec
mov
push
leave
jbe
incb
and
xlat
mov
scas
adc
add
loopne
popf
mov
sahf
pusha
pop
xsavec
adc
adc
jp
inc
rolb
xorb
shrb
loopne
scas
jle
imul
sarb
adc
lods
scas
inc
outsb
push
jae
sbb
cmp
mov
push
sbb
ss
mov
stos
imul
cld
lods
pop
mov
push
pop
xor
push
outsb
jno
xchg
imul
dec
repnz
adc
mov
pushf
pmaxub
scas
jbe
repnz
test
and
mov
sahf
or
outsb
pop
sub
or
inc
pusha
mov
cld
jns
cli
jae
dec
adc
mov
sbb
or
push
ljmp
sbb
sbb
mov
dec
mov
sub
jmp
mov
ljmp
mov
pop
jbe
and
sub
stc
fs
test
cs
ss
pop
jo
mov
mov
inc
mov
sti
xor
test
adc
out
and
xchg
sub
stc
dec
fcompl
ficoml
data16
jb
sub
call
mov
jecxz
dec
or
ss
mov
cwtl
xchg
jmp
mov
inc
xor
outsb
lcall
push
es
push
jbe
das
out
push
test
xor
clc
lds
xor
mov
lods
xchg
mov
in
pop
mov
sbb
mov
add
jge
pop
adc
push
jno
loop
inc
mov
js
or
in
push
mov
data16
jmp
dec
icebp
push
mov
ss
jbe
sbb
cltd
inc
jb
bound
fisubl
fsubrs
inc
push
enter
dec
mov
sub
fimull
add
jbe
ds
lods
stos
jge
mov
and
cmc
push
or
lcall
lock
mov
jb
inc
test
jns
mov
jl
jae
jnp
push
ljmp
addb
jmp
mov
repnz
repnz
and
sbb
lret
test
pop
or
mov
xor
rcl
mov
xchg
pop
mov
pop
outsb
xchg
jbe
lcall
xor
cli
sahf
shrb
aam
repnz
jl
adc
mov
pop
cmp
rclb
sub
xchg
iret
int
adc
or
adc
mov
dec
mov
call
xchg
arpl
out
jno
dec
sbb
rcrb
inc
mov
bound
into
and
mov
push
inc
popa
stos
xchg
leave
int3
cmpsb
cli
jno
out
sub
xchg
push
das
pop
mov
add
outsl
aas
clc
andl
imul
mov
and
push
xchg
push
into
and
pop
in
adc
inc
xchg
nop
add
dec
adc
sbb
sub
or
add
xchg
lds
lret
cmp
imul
add
add
js
cmp
and
adc
shll
rolb
mov
call
jo
adc
outsb
xchg
adc
jno
cmp
ss
add
outsb
or
or
outsb
mov
add
aam
into
push
fisubrl
sbbl
jbe
jbe
sub
adc
in
and
movq
or
lcall
cmpsb
fidivrl
mov
xor
cmp
int3
pop
jno
push
push
fstpt
jp
in
sub
out
outsl
jp
jle
repnz
push
jbe
lcall
xchg
fsts
ljmp
push
mov
adc
clc
or
pop
push
pop
push
inc
xor
clc
xchg
adc
xor
or
sbb
scas
push
push
data16
jne
lods
inc
xor
prefetch
outsb
push
sub
sahf
sarb
xor
fimull
cmpsb
lock
pop
scas
and
push
addr16
pop
mov
mov
and
dec
xlat
jle
sbb
add
outsb
push
push
subb
push
lcall
cli
xchg
ss
xchg
jp
sbb
xor
jbe
cltd
push
data16
loop
std
movsl
xchg
lods
arpl
xchg
or
lcall
dec
fisubrl
xor
imul
mov
stos
dec
xor
popa
jns
ficoml
test
in
mov
mov
jno
sbb
sub
adc
jp
cmpsb
xor
faddp
mov
adc
and
bound
lea
mov
sub
std
loop
dec
or
push
mov
scas
push
push
bound
adc
sahf
jp
in
xor
sub
and
adc
cwtl
push
popa
push
rorl
lcall
jle
push
pxor
mov
ljmp
mov
sbb
push
fadds
fdivrs
pop
mov
cmp
test
inc
sub
mov
add
xlat
cmp
repnz
shrl
ljmp
mov
sub
shrb
add
xor
in
fisubrs
ss
sarl
jo
or
pop
idivb
xchg
cld
cmpsb
add
dec
xor
adcb
das
loope
lcall
dec
aam
pop
or
mov
dec
sub
and
cli
lret
adc
lcall
stos
ds
dec
jl
mov
ss
orl
idivb
jb
inc
push
loop
jge
xchg
or
push
add
mov
mov
ret
mov
and
nop
fsubrs
adc
cmp
shlb
mov
pushf
and
dec
es
jle
cmpsb
add
call
pop
mov
arpl
sbb
fisubs
push
test
lcall
adc
call
loopne
stc
jbe
and
cltd
sbb
adc
nop
mov
pop
out
adc
cmpsb
subb
xor
adc
inc
pop
mov
out
push
out
cmp
testb
stc
sub
mov
sbbl
dec
sbb
loop
mov
push
cmp
sub
pop
xchg
repnz
stc
jns
out
mov
iret
ret
jne
aaa
dec
in
imul
cmpsl
pop
xor
test
and
fsubr
clc
ljmp
stos
or
and
xchg
rcrl
add
push
mov
mov
out
xchg
repnz
push
lods
loop
jp
and
das
enter
sub
test
push
test
sub
push
push
sub
push
adc
rclb
cli
sub
add
aas
adc
mov
or
push
mov
sub
shl
out
pop
and
pop
daa
and
sahf
or
jno
push
pop
lcall
cmp
push
shrl
cld
setae
or
push
lock
xchg
jb
add
mov
pop
mov
scas
into
in
or
mov
jb,pn
imulb
pop
jns
ficoml
scas
sti
cmp
or
sbb
xchg
out
mov
xor
sub
inc
sbb
jne
and
addr16
adc
das
push
push
es
or
movsl
xor
repnz
lods
add
scas
icebp
sub
in
mov
cmpsl
mov
cmpsl
jbe
mov
pop
adc
push
pop
pop
dec
in
adc
gs
xchg
sub
mov
sahf
pop
and
inc
cwtl
scas
or
and
jb
mov
push
mov
or
lcall
fwait
cmpsb
and
into
ljmp
adc
push
popf
sub
pcmpgtd
or
sbb
push
add
sub
and
push
pop
outsb
scas
add
push
sub
pusha
ja
repnz
stos
pop
aad
jbe
mov
popa
jno
notb
sahf
test
rcr
mov
or
prefetchwt1
add
and
imul
mov
adc
and
arpl
mov
ljmp
mov
jbe
mov
add
xchg
ficompl
cs
or
cmp
and
pop
icebp
jp
cmpsb
xchg
push
jmp
mov
xchg
lret
push
mov
cmpsb
popa
inc
push
xor
and
pop
adc
pop
repnz
xchg
mov
dec
sub
pop
lcall
adc
cs
mov
into
or
repnz
adc
pop
sub
add
or
xchg
add
mov
mov
xchg
xchg
iret
and
out
cli
das
adc
fisubrl
nop
jg
cmpsb
jbe
pop
cmpsb
pop
sarl
rorb
out
bound
mov
or
lds
jb
lcall
adcb
mov
mov
xlat
dec
push
test
out
jne
xchg
or
inc
inc
or
ficompl
push
xchg
jmp
sbb
jne
jp
jno
adc
ss
popa
add
bound
dec
data16
push
out
xchg
mov
and
sub
paddsb
ficompl
fdivl
dec
xlat
call
jns
push
pop
jmp
or
add
pop
mov
mov
lods
test
fimull
lcall
jmp
and
mov
sbbb
or
loop
insl
stos
ror
sbb
lods
cmpsb
popf
test
aam
adc
call
scas
push
cmpb
or
icebp
sbb
push
push
add
push
stos
push
mov
dec
xchg
pop
popl
cs
sub
rclb
xchg
lret
or
and
insb
inc
mov
sbb
fcmove
aad
jbe
stos
pop
ss
dec
xchg
and
sub
sub
adc
or
mov
xor
subb
dec
mov
push
mov
leave
es
push
mov
and
pop
mov
notb
add
and
mov
sub
mov
scas
cmp
ss
mov
and
push
pop
xor
jns
jb
pop
std
mov
popf
in
hlt
xchg
sbb
mov
std
pop
xchg
fcmovne
in
pop
inc
pusha
jecxz
adc
push
push
rorl
push
pop
ljmp
out
mov
adc
sbb
bound
mov
mov
sbb
inc
xor
insb
add
jle
je
mov
cmpsb
fmul
sbb
cli
outsb
gs
dec
mov
out
mov
std
out
inc
cltd
or
mov
sub
ret
stos
jp
pop
orb
push
push
rcrb
adc
push
xchg
stc
push
scas
repnz
movsl
notb
das
pusha
sub
les
rorb
subb
push
cvttps2pi
mov
push
and
inc
jbe
pop
jae
pop
xor
push
mov
ja
mov
cmp
push
or
pop
andb
or
shlb
lds
xchg
sbb
and
adc
imul
xchg
pop
movl
ret
push
adc
pop
jle
cwtl
pop
xor
xchg
sub
push
popf
push
xchg
ljmp
mov
test
mov
out
loop
dec
cltd
sbb
bound
push
rcrl
repnz
adc
xchg
in
call
xchg
addb
stos
sbb
xchg
mov
mov
icebp
es
xrstors
xor
pusha
pop
pop
inc
imul
fs
xchg
push
dec
pop
jne
dec
xor
fildll
sub
xor
std
popf
outsb
push
xchg
adc
sbb
cmpsl
sub
mov
push
push
sub
shrb
inc
popl
pop
push
pop
mov
scas
sbb
cmpsb
loope
xor
stc
push
pop
es
cmp
xchg
outsb
data16
into
imul
jnp
pop
xchg
data16
adc
adc
arpl
push
push
dec
xor
push
push
push
ficoml
pop
sub
scas
in
test
test
out
les
popa
xchg
sub
push
cmp
xchg
stos
dec
jp,pn
cli
shlb
push
mulb
cmpsb
jle
jmp
jle
dec
sbb
sub
or
imul
pop
notb
push
or
add
xor
in
shlb
bnd
push
mov
xor
pop
push
xor
jle
test
and
and
shlb
sar
dec
aam
data16
pop
push
out
loop
bound
es
stos
push
in
jb
xlat
or
loope
imul
pop
xchg
pop
jle
add
sarl
fimuls
sbb
enter
pop
popf
and
mov
dec
jne
bound
pop
cs
xchg
push
xor
jb
and
bound
cmc
jns
add
nop
cmpsl
inc
xchg
xchg
bswap
push
scas
xor
dec
paddsw
testb
and
push
sahf
xor
sub
sub
mov
push
fimull
mov
shr
incb
lret
push
push
sahf
mov
xor
adc
loop
aad
and
mov
cmpsb
pop
scas
sbb
and
and
jp
mov
ds
scas
push
push
loopne
jp
notb
int
pop
repnz
adc
je
mov
sbb
and
adc
nop
negl
cltd
mov
mov
adc
ljmp
jmp
cmpl
repnz
std
push
xchg
xor
sub
scas
mov
popf
xor
leave
lcall
sbb
jle
inc
mov
inc
xchg
out
mov
push
data16
mov
test
mov
add
push
mov
rcrb
dec
dec
ljmpw
add
into
jbe
and
sub
sbb
rorb
adc
adc
cmpsb
dec
sub
mov
and
dec
das
cmp
out
call
sbb
or
lahf
ljmp
add
jp
sub
mov
lock
std
fildll
mov
je
aad
out
add
push
pop
sub
and
and
mov
ss
sbb
push
sbb
test
and
cmp
out
into
xchg
push
pop
loopne
or
ljmp
sbb
out
mov
mov
mov
fstl
jbe
jp
pop
les
push
int
divb
xchg
scas
mov
cmpsl
sbb
test
and
and
clc
out
pushf
in
jmp
pop
jg
pop
divb
enter
jp
mov
fidivs
push
loopne
outsb
xchg
cmp
pop
mov
lods
mov
push
inc
enter
lcall
push
stos
int3
mov
es
add
pop
imul
sub
call
es
les
sbb
in
xor
xlat
scas
and
fstl
cmp
fistps
push
out
or
addr16
pop
and
adc
out
or
rorl
outsb
es
int
ja
xchg
fisubrs
pop
sbb
or
or
imul
out
push
xchg
fiaddl
pop
gs
push
dec
jnp
push
dec
in
push
mov
and
mov
incb
or
imul
sub
push
mov
push
stc
fidivl
or
imul
mov
sbb
stos
mov
call
mov
lods
jae
sub
mov
and
in
and
ss
sub
jp
subb
xor
jle
mov
call
rcr
mov
imul
pop
xchg
jbe
lods
mov
xor
popa
js
pop
mov
jo
lcall
sub
mov
movsl
jno
sahf
push
push
sbb
sbb
and
push
fidivl
jnp
popa
repnz
fldl
adc
les
sub
push
mov
xchg
fidivrs
fadd
xchg
inc
mov
pop
sbb
scas
xor
fimull
or
jp
sbb
shrb
jb
scas
in
scas
loop
mov
out
es
test
sbb
es
out
mov
les
out
cmp
dec
mov
neg
or
mov
push
mov
pop
rcll
or
push
out
rorb
psllq
subb
add
or
es
sub
insl
inc
jbe
mov
and
js
into
sahf
lcall
add
mov
pop
mov
lods
aaa
stos
and
dec
and
and
jp
pop
inc
xchg
repnz
pushw
push
hlt
xor
and
test
push
mov
sub
mov
sarb
xchg
bound
dec
xor
push
sub
cmp
dec
stc
ds
std
push
push
jbe
adc
cmpsb
lods
orb
lcall
jmp
adc
mov
mov
arpl
cwtl
adc
or
xor
jle
xor
es
cmpsb
stc
xor
cmp
enter
inc
imul
fidivs
inc
fisttpll
sahf
push
std
add
sbb
lcall
bound
sbb
mov
out
jns
and
pop
fdivrs
sub
pop
add
mov
cli
xchg
push
call
loop
lods
jbe
shrb
fisubrl
push
ret
sub
sbbb
ljmp
mov
push
les
imul
push
cmp
inc
adc
jae
notl
inc
inc
adc
mov
adc
lcallw
test
sahf
mov
or
loop
leave
or
jle
outsb
jno
push
popa
dec
incb
push
int
sbb
mov
fcomi
and
push
push
jbe
ja
sub
sub
or
or
jae
stc
inc
pop
lcall
mov
lock
adc
jns
add
pop
inc
scas
jo
fisubrl
stos
mov
mov
pop
outsb
bound
push
shrb
dec
les
rcrb
or
ficoml
sub
imul
push
push
shrb
fst
mov
es
jbe
imul
jbe
aam
cli
lock
fwait
mov
xchg
pop
xchg
mov
jb
clc
inc
insl
es
es
test
and
add
sub
pop
repnz
jle
mov
adc
push
or
inc
dec
mov
pop
bound
cmovs
or
sbb
out
scas
rorb
outsb
or
sarl
jle
and
mov
sbb
sub
jl
xor
bound
lcall
shll
mov
fidivrl
cmp
psubw
aas
mov
negl
push
sub
dec
jp
mov
jbe
or
xchg
jb
push
adc
stos
std
and
push
jp
sbb
adc
fs
pop
push
and
das
dec
std
mov
push
jle
rolb
in
stc
push
mov
sub
stos
out
into
adc
xchg
bound
jns
sub
push
sahf
mov
pop
scas
jb
push
sbbb
pop
out
shlb
or
iret
hlt
stc
cmp
out
cmpsl
bound
sbb
pop
xor
push
cmp
mov
jnp
mov
xchg
mov
pushf
jb
in
clc
pop
and
outsb
sbb
and
sbb
sub
jbe
inc
sbb
or
jno
jns
loop
pop
push
sbb
cmpsl
jbe
pusha
and
aaa
push
add
into
loopne
sti
clc
pop
pop
int3
push
test
and
sbb
mov
push
fsubrp
add
stos
adcb
inc
push
push
push
jg
mov
popf
jge
adc
xchg
mov
xor
sarb
cmp
lock
xchg
repnz
push
push
iret
and
xchg
stos
jnp
push
xor
and
mov
xchg
loope
adc
cmp
out
lahf
test
push
lahf
sub
stc
ficompl
lcall
xchg
jge
mov
fldl
sarb
push
xchg
lret
in
jns
xchg
push
clc
pop
inc
popf
inc
mov
pop
dec
cs
inc
stc
fsub
popa
mov
xor
xchg
andb
xchg
in
lahf
sub
insb
xchg
enter
orb
sbb
scas
xchg
sub
mov
pop
clc
jle
dec
bound
fidivrs
push
insb
push
outsb
xorl
shrb
xchg
sahf
jle
loope
mov
push
adc
cmc
roll
imul
pop
ljmp
push
push
cli
sub
es
je
imulb
dec
pop
inc
sbb
daa
sub
xor
dec
add
and
lret
and
int
push
mov
dec
sub
push
loope
adc
lds
jbe
sub
stos
sahf
mov
xchg
xchg
mov
adc
shll
jns
inc
dec
scas
xchg
scas
xchg
dec
or
push
push
stc
insb
std
test
and
sahf
xchg
mov
in
dec
push
or
push
sub
shlb
adc
push
lcall
cmp
sub
push
or
push
add
mov
stos
addr16
push
in
test
incb
shlb
add
data16
cltd
fisubl
fmull
out
lahf
stc
sbb
dec
push
and
lcall
and
and
sub
loop
pop
outsb
mov
inc
shlb
push
adc
mov
or
or
divb
jg
cli
adc
adc
mov
cwtl
lret
push
fmulp
loope
jbe
sub
lret
adc
jb
sub
cmpsl
mov
repnz
adcb
adc
gs
dec
mov
scas
or
je
xlat
loop
sub
ss
test
push
ds
scas
movsb
sahf
xchg
mov
and
ja
dec
jns
and
jle
cmpsb
or
test
adc
pop
mov
test
cmp
sahf
adc
hlt
push
jnp
imul
lcall
loop
pop
outsb
es
sub
fistps
mov
and
fmul
xchg
push
pop
negb
mov
pop
sbb
push
imul
scas
jns
pop
fimull
fidivs
pushw
jb
movsb
or
mov
stos
xchg
inc
adc
inc
jae
shlb
jae
lods
jmp
addl
jbe
xchg
sbb
mov
dec
sbb
out
push
add
notb
ljmp
jno
add
push
mov
ss
mov
push
ds
fidivrl
push
jle
push
mov
sbb
shrl
loop
push
pop
std
sarb
sub
mov
mov
push
mov
push
lret
shlb
and
pop
pop
sahf
jb
push
and
stos
out
outsb
add
jp,pt
dec
add
jle
xor
sbb
xchg
out
es
scas
mov
sbb
mov
mov
adc
stos
adc
arpl
lret
adc
test
xchg
ss
into
push
sbb
push
add
sbb
pop
loop
cli
ljmp
kmovb
ljmp
jle
loop
push
int3
xchg
scas
and
repz
arpl
sbb
inc
stc
inc
and
or
shrb
ret
or
xor
and
xor
dec
mov
xor
lcall
mov
loopne
xchg
push
int
xorb
pop
push
or
testb
imul
stos
push
pushf
sar
pop
mov
in
in
add
or
push
mov
stos
jno
jno
imul
sbb
cmp
shlb
int3
lods
fiadds
in
inc
sub
cmpsb
cmp
cmp
es
loopne
aaa
jno
cmpsb
pop
sub
and
out
jne
push
leave
stos
push
xchg
aas
add
xor
aam
xchg
dec
pop
sbb
push
or
fimuls
and
and
jb
mov
mov
arpl
mov
jnp
mov
imul
stos
xchg
lahf
push
pop
insb
stc
xchg
push
jle
cmp
and
outsb
cmpsb
imul
stc
notb
push
xor
js
sbb
and
fidivl
decb
ja
ficoms
adcb
sbb
xchg
decb
mov
popa
push
push
xchg
pop
or
xor
push
adc
jo
or
movb
ds
fcoms
pop
bnd
or
mov
pop
adc
push
iret
sbb
or
icebp
mov
mov
mov
mov
dec
mov
dec
add
mov
je
push
jg
fsubs
out
fidivrs
lods
sub
loop
frstor
or
adc
pop
mov
repnz
cltd
or
jle
push
cmpsb
sbb
daa
cmp
sbb
ret
push
test
or
sbb
push
inc
std
ljmp
and
sti
push
push
lea
data16
pop
call
leave
ljmp
pop
fisubrl
loop
adc
cltd
jle
sbb
sbb
or
push
jl
das
push
in
push
arpl
push
and
pop
sbb
mov
inc
into
mov
nopl
xor
push
lcall
arpl
bound
sahf
roll
imulb
cmp
push
cmpsb
cmp
shlb
mov
mov
add
aad
cli
loop
out
push
and
outsb
mov
decb
out
push
cmpsb
inc
xchg
shrb
mov
xor
jbe
or
dec
pop
push
adc
data16
xchg
repz
jp
repnz
rcrl
pop
idivb
and
shll
xor
stos
imulb
push
adc
xor
pop
outsb
mov
xor
xchg
inc
leave
repnz
movsl
xor
es
negl
hlt
jge
sub
paddusw
or
adc
sbb
ret
push
dec
call
push
fsubs
scas
jb
imul
ss
shlb
sub
adc
rcrb
push
sbb
clc
insl
pop
push
and
out
and
addr16
jle
outsl
into
sbb
lcall
xchg
mov
push
sub
mov
cmp
mov
pop
xchg
outsb
sub
adc
cwtl
arpl
and
push
sbb
jge
das
in
subb
popf
sub
rcrb
sbb
fcomps
jb
loop
and
add
sbb
data16
test
sub
inc
mov
push
lret
cmp
ret
push
dec
sbb
or
mov
mov
jno
stos
pop
in
adc
fwait
pop
std
jb
aam
sarl
pop
cmp
or
sub
cltd
std
add
push
mov
push
cs
jbe
add
out
inc
xchg
and
cmpsb
mov
aam
into
jno
dec
stos
clc
ficomps
ljmp
fisttpll
ficoms
stos
or
testb
fcmovb
mov
jb
push
fsub
or
xchg
sub
xchg
mov
and
stc
jmp
sbb
jno
push
fcoms
jb
jns
and
lcall
pop
test
pop
int3
jp
out
jle
mov
orl
stos
imul
push
sbb
int3
push
sbb
xchg
stc
int
and
and
dec
sub
mov
into
add
subb
vmovups
lret
push
mov
bound
iret
dec
xchg
sub
loop
mov
mov
mov
repnz
mov
or
adc
push
and
loop
cmp
xchg
mov
es
push
sub
adc
adc
add
faddp
push
xor
jle
outsb
push
mov
sahf
adc
xor
daa
std
cli
pop
dec
cltd
adc
filds
notl
ljmp
out
pop
int
push
inc
test
sahf
xor
xchg
sbb
std
mov
push
fsubrs
mov
or
inc
addr16
push
aad
sbb
xor
dec
jp
add
cvtps2pd
sub
ret
loope
lea
lds
xchg
fidivrs
sub
gs
sbb
sub
and
push
daa
and
jns
sbb
fmull
jecxz
test
mov
bound
mov
mov
jp
add
lcall
pusha
aam
lahf
movsl
mov
dec
std
loop
push
or
push
pop
xor
xor
ljmp
cld
adc
scas
fstl
mov
shrl
lods
xor
xlat
add
jno
pop
imul
inc
insb
shrb
daa
xor
out
lret
loopne
iret
stc
sbb
ss
repnz
push
lea
or
cs
outsb
cltd
inc
lods
test
cmpsb
or
push
sub
into
movsl
push
or
jns
outsb
jae
lods
mov
fucomp
sub
pop
add
stc
sbb
in
mov
out
fisttpll
mov
lods
dec
ljmp
repnz
pop
sbb
js
clc
imul
repz
test
push
push
mov
fcmovbe
int3
or
notl
sbb
bound
xor
aas
mov
pop
rorb
mov
xchg
mov
xor
lods
andb
sbb
xchg
jne
or
xor
push
mov
out
mov
inc
popa
mov
xchg
dec
mov
sahf
adc
adc
stos
fildll
data16
sub
cld
outsb
cs
sbb
xchg
adc
bound
lea
push
popa
int3
push
loop
mov
sahf
cmp
xchg
out
pop
xchg
loop
push
cs
cli
ljmp
cmp
out
or
push
push
sbb
out
mov
jp
cmp
mov
pop
fnsave
dec
xchg
ss
iret
movsl
stos
push
sub
xlat
shl
xchg
adc
lcall
popa
not
cli
jp
cld
sahf
cmp
sbb
ss
inc
das
add
inc
sbb
jp
out
aad
fcoml
cs
xor
and
push
sbb
in
pop
mov
adc
xchg
adc
fs
fidivl
outsb
push
push
xchg
xor
or
hlt
out
sub
int
push
out
jne
fidivrl
jb,pt
add
or
imul
fnstenv
xor
outsb
dec
xchg
push
sbb
and
fisubs
into
pop
add
repz
xorb
aas
sbbl
test
int
ficompl
cmpsb
inc
ljmp
into
and
sbb
mov
xchg
dec
fwait
mov
xor
sub
fidivs
ja
call
and
xchg
push
lock
clc
cmpsb
jge
jp,pn
repnz
aam
bound
and
leave
std
sub
add
or
and
imul
pusha
push
adc
jo
scas
cltd
ss
fidivl
pop
push
or
xchg
test
stos
sub
or
push
dec
xchg
rcll
push
adc
dec
popa
fdivrp
scas
test
xchg
sbb
dec
xor
push
xchg
fimull
pop
int3
jbe
mov
iret
daa
sbb
xchg
sub
scas
testb
outsb
push
push
sbb
mov
push
jnp
sub
scas
mov
xor
jns
es
jns
out
pop
cli
cmpsb
sub
sub
nop
dec
sahf
sub
notb
cli
sbb
xor
movsl
push
cmpsb
adc
sub
sub
shr
cltd
and
test
out
int
rcrb
dec
xchg
rolb
pusha
ljmp
sbb
push
jle
jp
popa
rcl
mov
leave
aad
sbb
ds
aas
fs
xchg
adc
jge
push
add
ja
pop
add
ja
push
cmpsb
or
push
mov
fidivs
and
adc
shrl
cmpsb
and
sub
mov
adc
fisubl
mov
sbb
notb
sbb
popl
out
es
jl
sub
dec
push
mov
mov
xor
sbb
cmp
xchg
or
push
dec
neg
or
out
das
inc
sbb
or
push
mov
fldl
dec
mov
xor
sub
push
sub
lret
add
xor
sub
push
push
sub
adc
imulb
lods
loop
ss
xor
push
adc
dec
pop
adc
bound
shl
fiadds
pop
or
xchg
cmp
sub
add
push
data16
xor
outsb
push
hlt
test
adc
loopne
mov
sbb
pop
out
or
mov
jbe
out
into
in
ret
out
push
jbe
aam
jecxz
inc
dec
cltd
loop
loop
push
shrl
iret
es
in
and
call
dec
mov
stc
or
fsubp
outsb
xorb
adc
ret
out
or
xchg
mov
loop
mov
stos
xor
push
stos
sahf
dec
or
jbe
lock
mov
nop
and
xchg
sub
jno
or
mov
add
mov
fsubs
dec
push
sub
jbe
jl
push
mov
jbe
mov
adc
sbb
xchg
or
push
and
mov
mov
or
sti
out
lds
and
jbe
inc
scas
sub
adc
cli
bound
ja
xor
arpl
mov
lds
mov
imulb
inc
xchg
mov
xchg
ss
xchg
repnz
bound
and
push
cmpsb
outsb
adc
test
adc
xor
xor
inc
subb
mov
lods
call
or
int
stc
fucomp
mov
fs
pop
adc
lret
mov
scas
push
jb
ds
loope
mov
ljmp
or
and
test
popa
sub
push
sbb
cmpsl
or
test
xor
mov
sbb
jle
adc
mul
sbb
push
push
lock
shlb
or
pop
enter
test
xor
outsb
idivb
push
inc
scas
hlt
lods
cmp
into
lret
stc
cmpsb
sahf
shlb
adcb
xor
sbb
lret
leave
sahf
lcall
jno
or
pop
enter
adc
dec
add
pop
inc
and
popf
sub
and
push
or
jge
adc
mov
rolb
in
sub
dec
idiv
fisubs
jbe
xor
sub
jns
mov
xor
imul
push
push
mov
int
jbe
outsl
jg
mov
sub
dec
data16
and
push
mov
scas
out
xchg
pmulhuw
sub
dec
cmp
and
mov
push
xchg
cmpsl
loop
pop
pop
ss
inc
pop
shlb
mov
sub
or
cs
sti
lods
xlat
add
inc
nop
cmpsl
mov
sub
or
xor
or
popf
popf
sub
sarb
repnz
out
jno
push
arpl
fisubrl
push
iret
out
push
outsl
daa
stc
xchg
jle
out
scas
pop
scas
andl
pop
aaa
dec
jbe
xchg
mov
jbe
es
loopne
add
push
lods
int
mov
dec
dec
pushw
mov
jbe
dec
mov
jp
es
push
andl
test
mov
out
jmp
rcrb
repnz
stc
decl
test
adcb
push
pop
mov
push
popl
cs
inc
and
popf
jnp
movsl
adc
lcall
cmp
fwait
sub
pop
addr16
dec
pop
dec
cmc
out
or
xor
pop
cwtl
cmp
movl
adc
push
mov
jno
jnp
enter
pop
stc
jmp
dec
jp
sub
cmp
and
rorb
call
sub
gs
divb
push
bound
xchg
fdivrl
orb
xchg
lea
push
push
pop
xor
bound
loop
data16
sub
sbb
movaps
out
and
or
test
jbe
push
aas
pop
out
jns
stc
mov
sbb
xchg
xchg
mov
push
lcall
adc
push
repnz
mov
ror
push
repnz
call
or
test
push
outsb
add
adc
or
incl
cld
movsl
fcmovb
andl
push
pop
adc
cmp
pop
add
mov
imul
xor
and
in
test
mov
movsl
jbe
sbb
adc
push
sub
mov
rcrl
lcall
mov
out
lock
xor
outsb
and
das
adc
sbb
ficoms
sar
mov
repnz
lds
sbb
sub
js
push
mov
mov
lods
stos
int3
sbb
mov
dec
xchg
inc
mov
mov
mov
add
mov
lcall
test
adc
adc
xor
stos
sbb
pop
int3
pop
bound
scas
jp
adc
xchg
cld
push
sub
mov
push
push
sub
push
xchg
sbb
push
pop
pop
xor
fisubs
add
inc
dec
and
lods
std
mov
out
into
ret
or
scas
scas
mov
push
and
and
ss
pop
clc
or
pop
xor
shlb
push
fcmovbe
and
push
jmp
imul
sar
pmulhw
pop
adcb
xchg
pushf
shrl
bnd
inc
mov
dec
sahf
mov
stos
test
mov
repnz
stos
jae
push
xchg
push
data16
enter
pop
les
cltd
mov
xor
loop
scas
pop
or
sti
jne
xchg
or
xchg
fucomp
mov
xchg
sarl
push
push
and
sub
rorb
sub
push
pop
es
xor
sbb
mov
push
add
addb
and
push
push
push
shlb
xor
sbb
mov
push
sahf
lcall
das
lea
sar
mov
sub
adc
jbe
into
or
or
fisubl
adc
and
pushf
dec
sub
add
aaa
push
lret
and
adc
sbb
adc
test
push
adc
nop
push
sbb
fcoms
xchg
inc
sbb
data16
push
cmpsb
add
out
stos
les
or
jns
bound
jle
jnp
xor
sub
push
rcl
out
fdiv
popa
in
data16
imul
or
fdivs
xor
xchg
push
push
pop
mov
cmp
enter
cs
xchg
out
sahf
repnz
rcrb
test
or
push
xchg
or
push
xor
and
les
jge
mov
adc
sub
mov
inc
xchg
jle
xchg
and
dec
sub
scas
mov
sub
add
jp,pn
lcall
sbb
stos
aam
adcb
push
je
jp
push
cli
testb
mov
push
sub
mov
push
out
push
sti
jle
jp
add
dec
movsl
loop
push
adc
and
xchg
jp
out
out
push
mov
push
adc
cmp
xchg
je
push
add
popa
cmpsb
rcrb
push
add
xchg
xchg
cli
cmc
sub
sbb
mov
sub
cs
mov
pusha
mov
lcall
ss
fisubs
stc
and
and
mov
stos
push
push
push
sbb
mov
out
push
pop
imul
cli
mov
jb
rorb
rcll
mov
push
shrb
inc
cmc
jle
cmp
call
notb
cltd
cmpsb
mov
clc
jp
push
push
sahf
mov
test
out
scas
push
sub
xchg
push
pop
int
cli
push
inc
outsb
xor
scas
ret
cltd
xchg
mov
lods
scas
mov
es
and
mov
cmpsb
dec
gs
mov
push
xor
sar
out
in
adc
and
test
loop
es
adc
mulb
push
mov
adc
pop
and
sub
call
movsb
pop
fstpt
push
pop
adc
bound
outsb
out
dec
std
push
cmp
and
push
sub
lcall
adc
scas
fidivrl
mov
xchg
xor
incl
sub
adc
mov
push
cmpsb
cli
cmp
std
lock
ljmp
sbb
dec
ja
outsb
or
push
int
loop
ss
neg
inc
out
lds
or
cmp
jb
and
jle
jns
sahf
push
jge
aaa
mov
jp
shll
pop
jmp
push
pop
sahf
xchg
and
es
int
jle,pt
xor
xor
lds
and
jle
lds
jp
cmpsb
popa
cmpsl
xchg
jae
lods
push
jecxz
or
fldt
out
inc
dec
je
ret
insl
sub
jbe
jbe
lahf
in
cli
push
sbb
jae
imul
mov
sbbb
push
add
jbe
sbb
outsb
adc
dec
adc
jle
int
xor
jo
cs
mov
mov
fisubrs
imul
jnp
mov
bound
ret
xchg
push
je
scas
sbbb
mov
mov
es
negl
arpl
sbb
jbe
sarb
sti
std
loop
orl
shrl
add
ja
shlb
push
loop,pn
aas
or
jo
pop
test
or
arpl
inc
sbb
frstor
xor
sbb
imul
and
pop
rcrl
jns
jmp
add
add
dec
push
cmp
cli
dec
add
jb
lret
dec
out
push
mov
in
pop
dec
gs
mov
fisubrl
imul
pop
into
popa
adc
repnz
sbb
data16
in
mov
shll
cmp
adc
dec
dec
cld
and
call
jb
push
cltd
std
popf
push
and
scas
std
xchg
imul
and
or
jp
pop
outsl
repnz
fisubl
pop
lret
sub
or
push
cli
loop
popa
xchg
jb
outsb
or
sbb
test
cmpsl
imul
insb
rcr
inc
scas
sahf
jbe
outsb
lock
adc
sbb
and
bound
mov
ror
cmc
aam
dec
aas
xor
repnz
push
sbb
jb
pusha
sti
or
mov
outsb
add
jns
test
hlt
jmp
sbb
adc
shlb
jge
or
cmp
or
ret
fiaddl
in
out
movq
xor
push
mov
fmull
cmp
mov
inc
add
notb
or
mov
dec
and
sbb
inc
pop
sub
and
pop
lret
or
outsb
je
jb
es
sbb
repnz
enter
mov
jle
lret
out
push
xor
jne
cmp
xchg
shrl
shrb
and
push
push
ljmp
adc
cmpnltps
adc
xchg
or
xor
cli
shl
or
adc
add
xor
push
cli
jbe
mov
sbb
scas
cld
loop
push
adc
in
mov
jg
push
xchg
or
pop
sbb
pop
jb
imul
iret
out
push
push
out
pop
stos
push
or
lret
mov
xchg
sub
ljmp
mov
rorb
push
repnz
mov
mov
mov
outsb
or
xchg
mov
loop
das
int
mov
sub
out
les
js
addb
pop
dec
jns
ss
sbb
mov
sbb
lods
adc
mov
sub
incl
push
adc
and
jbe
inc
xor
add
jae
pop
inc
or
and
ljmp
sub
scas
pop
ficoms
xchg
clc
dec
imul
repnz
cld
adc
leave
jbe
and
and
std
dec
inc
cmp
jle
xor
push
mov
popf
jge
dec
loop
adc
sbb
cmp
mov
stc
mov
jp
in
mov
loop
sti
xchg
sbb
movl
push
loopne
sbb
sbb
mov
stc
insb
daa
and
push
push
dec
cmp
sub
mov
cwtl
push
fiadds
repnz
test
jns
out
stc
pop
out
mov
ss
nop
std
add
and
outsb
rcr
fdivp
xchg
ljmp
jae
inc
out
jp
dec
xchg
outsb
sbb
lds
xchg
orb
movsl
jecxz
adc
outsb
fs
mov
inc
movsl
mov
mov
xchg
add
outsb
aaa
add
test
push
and
xor
lcall
jle
stos
cli
popf
or
popa
in
xchg
shll
adc
pop
sahf
and
xchg
shlb
push
push
jnp
pop
or
jecxz
jle
pop
and
adc
aam
imul
ficoml
mov
push
imul
mov
or
arpl
pop
dec
xchg
xor
fsubrs
gs
mov
jno
jp
out
repz
add
and
xor
jle
fdivl
sbb
jno
mov
bound
push
push
aam
stc
adc
subb
jb
dec
fstpl
push
in
popf
mov
xchg
or
je
push
push
out
sub
dec
push
mov
arpl
add
jmp
scas
push
test
sub
push
sbb
pop
scas
or
fwait
adc
mov
xchg
or
jb
mov
xchg
push
hlt
data16
jle
imul
pop
loopne
add
pop
mov
sub
mov
add
xor
ljmp
push
outsl
shrl
popa
orb
push
jno
jnp
pop
int
ss
and
inc
sahf
sub
mov
mov
push
outsb
es
jp
adc
push
mov
mov
xchg
push
mov
push
xchg
repnz
dec
add
mov
xchg
push
jno
push
enter
shrb
jle
mov
mov
sub
arpl
xchg
sbb
scas
push
xchg
cs
cld
rorb
adc
pop
adc
jle
pop
jge
or
jnp
sub
xchg
fisubs
roll
insb
or
xor
mov
mov
inc
sbb
xor
and
push
add
pushf
hlt
push
pop
call
mov
and
pop
pop
dec
push
xor
mov
inc
adc
into
stos
or
push
clc
jle
data16
out
lds
cmp
push
shrl
push
ss
mov
movsl
push
mov
loop
add
test
xor
push
push
aaa
shlb
outsb
cmp
mov
jns
sbb
dec
es
adc
and
lcall
into
repz
movsl
shlb
sar
sub
imul
insb
xorb
std
xor
pop
outsb
lcall
inc
sub
outsb
add
xor
insl
mov
push
clc
test
dec
sbb
jge
pop
outsb
popf
loop,pt
push
icebp
movsl
mov
inc
mov
push
scas
push
cltd
pop
fiaddl
aas
inc
cmp
or
and
ret
scas
sub
test
cli
repnz
xchg
sbb
in
mov
push
xchg
sbbl
lret
outsl
push
lds
call
and
mov
sbb
or
cltd
sub
and
movsb
sbb
stc
out
or
fs
out
mov
aaa
push
popa
negb
repnz
aad
and
or
out
ret
fsubl
std
idiv
movsl
jle
sbb
loope
push
dec
cli
scas
xchg
aam
add
mov
sub
or
into
pop
and
stc
cli
pop
pop
or
inc
ss
push
push
adc
out
neg
mov
xchg
push
rcll
jg
fimull
aam
adc
movsl
add
mov
xchg
loop
sbb
imul
xchg
push
out
stc
cmpsb
sbb
imul
xor
dec
xor
loop
out
jb
mov
pop
xchg
negb
cld
sbb
mov
ljmp
test
cmp
xchg
jb
inc
rcl
cmpsb
hlt
jb
push
add
ret
subb
lcall
jmp
scas
outsl
scas
push
sub
mov
sub
push
sbbb
lods
adc
rcll
push
cltd
sbb
jge
mov
popf
pop
bound
adc
cli
mov
sbb
push
pusha
outsl
pop
fmuls
xchg
push
jp
not
jmp
jmp
popf
repnz
pop
xor
mov
cmpsl
jne
sbb
pop
jl
xchg
sub
aaa
adc
and
fisubrl
pushw
mov
mov
or
out
fistps
daa
and
adc
cmpsb
pop
cmp
cs
into
and
cmc
push
repz
push
mov
scas
push
add
pop
test
lea
pop
cmpsb
es
loopne
in
xor
jns
popa
push
sub
adc
push
sahf
es
or
push
dec
adc
and
mov
xchg
pop
stc
add
gs
push
repnz
lret
push
lds
and
pop
adc
adc
sub
xor
cwtl
into
dec
pop
int
jle
mov
rcr
into
push
cvtpi2ps
push
adc
sub
dec
cmp
cmp
imul
cmp
or
pushw
mov
jb
insl
mov
push
cmp
cli
ljmp
pop
or
aam
adc
stos
pop
iret
inc
or
mov
out
inc
fs
sbb
mov
xchg
repnz
jle
daa
arpl
mov
inc
jle
mov
ss
data16
dec
daa
push
mov
push
push
lret
aad
out
and
and
jbe
xor
ds
mov
mov
xchg
mov
les
repnz
aam
sbb
sub
sub
scas
sub
sbb
scas
sub
jl
icebp
jmp
mov
push
lcall
mov
cwtl
nop
je
jae
pop
das
aaa
scas
lea
idiv
in
mov
inc
icebp
mov
pop
data16
xchg
fidivs
rep
popf
pop
mov
jae
inc
sub
push
pop
fldenv
mov
pusha
and
xor
sbb
mov
or
out
jo
mov
and
fimuls
out
mov
mov
repnz
or
xor
push
rorb
or
hlt
lret
inc
xor
pop
mov
cs
mov
mov
pop
inc
imul
jae
push
out
scas
mov
das
mov
cli
int3
push
aas
mov
add
outsb
sbb
push
dec
push
test
ror
iret
jb
loop
sbb
stc
mov
lcall
ljmp
enter
fldl
mov
ja
add
int
adc
and
outsb
mov
adc
mov
cmp
shll
xchg
rorb
cli
ljmp
cmc
mov
ja
adc
push
cs
mov
mov
sub
cmp
sbb
adc
je
mov
add
and
lahf
lcall
leave
int3
lahf
fidivs
bound
pop
or
movsl
xchg
pop
data16
sbb
stos
rclb
lahf
adc
es
sbb
or
nop
or
and
jne
pop
push
mov
inc
popf
imulb
lds
and
imul
mov
mov
xchg
add
push
gs
push
jle
jno
cmpsb
and
out
in
jbe
shlb
push
and
lcall
loop
stos
iret
xchg
push
cmpsb
pop
push
jbe
jb
mov
push
loopne
push
scas
mov
jno
cli
bound
xchg
inc
or
sbb
and
mov
mov
loope
outsb
and
movsb
cmc
and
mov
pop
mov
sub
out
cs
outsb
adc
jp
mov
cmpsb
data16
jle
test
imul
or
ljmp
ficompl
cmp
push
mov
or
dec
sbb
sahf
mov
pop
scas
or
lds
data16
mov
bound
andl
mov
or
mov
mov
addr16
push
scas
adc
and
jp
loop
dec
xchg
adc
dec
xor
xchg
bnd
sbb
fstpt
setb
push
push
push
and
stc
iret
stos
stos
xcrypt-ctr
cmpsl
sbb
out
and
orb
push
insb
pop
scas
dec
xor
out
js
and
cmpsb
leave
sbb
subb
test
sahf
pop
cmpsl
xchg
shrl
negb
jno
jbe
add
shl
or
in
mov
in
ret
or
cs
fimuls
inc
mul
jb
aas
in
lock
pop
lret
xchg
adc
imul
fimuls
or
cmpsb
loop
xor
out
xchg
sahf
mov
push
add
cli
repnz
adc
xor
scas
shl
adc
xor
loope
mov
mov
fwait
out
push
lock
leave
ror
xchg
std
sbbl
ljmp
sbb
rolb
aaa
popa
in
or
dec
xchg
mov
cmc
fldl
cmpsl
in
mov
xchg
xchg
clc
sarl
sbb
out
mov
stos
es
not
inc
pop
rorb
stos
xchg
mov
movsl
xor
sub
cmpsl
add
outsb
fmulp
movsl
mov
xchg
hlt
popa
xor
push
adc
or
push
xchg
mov
push
mov
pop
and
or
jb
or
lea
xchg
mov
mov
sbb
adc
sub
test
mov
sahf
rclb
xor
ljmp
sub
xchg
jno
ficoms
xor
iretw
jle
xchg
repnz
pop
aad
sub
mov
xor
and
dec
out
jae
dec
inc
jle
jp
divb
sub
jbe
xchg
xchg
mov
stc
pop
push
cmp
loop
aaa
push
pop
out
or
shrl
pushf
and
adc
sbb
dec
es
xchg
imul
mov
ficoms
push
insb
out
push
push
adc
xchg
or
jp
mov
or
jae
popa
mov
pusha
inc
push
popf
pop
decb
mov
and
adc
jno
push
cmpsb
imulb
repnz
sub
xchg
sub
sbb
inc
jle
sub
pop
mov
cmpsb
cs
mov
iret
popf
mov
cmpsl
fisubrl
js
mov
or
jne
push
dec
repnz
scas
jae
dec
outsl
and
xor
mov
stc
rcll
jp
add
push
jno
stos
jnp
push
cli
xchg
sbb
pop
xor
sarb
sbb
or
scas
push
mov
pop
mov
xchg
adc
mov
adc
mov
push
mov
and
lods
test
imul
jne
shlb
int
jp
mov
dec
jp
imul
aas
mov
fisttpll
lcall
mov
stc
movsl
xchg
jns
test
and
fidivs
jbe
jecxz
imul
jne
ljmp
push
clc
push
push
jp
shr
fdivs
mov
add
and
pop
xchg
pop
fmuls
push
xor
adc
xor
push
adc
sub
jle
jbe
mov
add
adc
sahf
pop
xchg
jp
insl
adc
adc
nop
push
ficoml
lods
dec
sbb
adc
stc
loop
jne
pop
push
shrb
inc
pushl
lahf
mov
sub
mov
xchg
cwtl
ja
addb
scas
int
inc
adc
imul
scas
push
mov
sbb
mov
movsb
mov
cs
adc
cli
lcall
movsl
and
and
push
es
repnz
mov
sbb
push
sub
int3
negb
stos
pop
cltd
out
jge
repnz
and
pop
xchg
imul
jne
or
xor
dec
adc
cmpsb
scas
in
xchg
xchg
scas
mov
mov
xor
inc
xor
adc
outsb
data16
bnd
fcomp
mov
iret
lahf
imul
stc
and
sbb
lcall
outsb
inc
adcl
sbb
sbb
or
insb
fisubs
jbe
adc
cmpsl
pop
adc
pop
mov
cs
fdivrl
pop
push
push
pop
push
jmp
mov
mov
cmpsl
cli
xor
mov
bound
lock
add
divb
es
test
xchg
adc
sub
mov
outsb
add
in
test
std
std
xchg
jns
addb
or
es
movsl
xor
and
mov
insl
notb
into
lods
sub
sbb
adc
adc
fstpl
sub
pop
stos
xchg
push
out
xor
fisubrs
cmpsb
cmp
fwait
mov
mov
sub
mov
or
dec
push
inc
jp
inc
mov
nop
push
push
mov
mov
cli
or
and
jb
add
sbb
mov
mov
fcmovnu
loop
push
ds
cs
andb
imul
jle
mov
sahf
sub
movsl
lcall
jbe
mov
pop
adc
fidivl
notb
or
mov
cmp
adcl
rclb
jb
sbbb
xor
movsl
and
cltd
gs
inc
pop
adc
mov
lock
and
or
lock
cmp
mov
sub
addr16
fsubp
seto
lcall
or
cs
dec
scas
pop
xchg
mov
movsb
test
mov
jbe
repz
sahf
adc
pop
sub
shlb
fimull
mov
adc
push
mov
xor
jbe
repnz
cmpsl
mov
xor
adc
push
cltd
xchg
ss
pop
out
test
popa
daa
sub
iret
dec
inc
cli
pop
scas
int
sub
add
xchg
les
scas
push
lret
icebp
sbb
push
rcrb
add
mov
sti
stos
loope
adc
and
mull
jbe
jp
inc
jns
pop
lcall
or
in
pop
push
mov
or
aaa
add
jne
cltd
pop
jmp
mov
mov
loop
add
pop
cltd
stos
nop
pop
loop
sbb
mov
inc
sbb
xor
lcall
mov
jle
or
inc
mov
mov
test
adc
pusha
inc
rcrb
lock
jp
lcall
sbb
inc
bound
test
shll
cmpl
mov
cli
dec
movsb
pop
pusha
push
mov
repnz
xchg
mov
cmpb
data16
jmp
push
loopne
jae
sbb
mov
adc
lret
stc
mov
call
out
xchg
and
mov
pop
mov
pop
mov
popf
sub
decb
mov
push
pop
jb
ss
and
pop
mov
mov
mov
xchg
mov
loopne
and
leave
popf
lret
sbb
mov
jb
ds
pusha
jb
stc
sub
mov
sub
loop
and
sbb
or
jbe
js
xchg
push
popf
cmpsb
addr16
push
mov
test
stc
fwait
xor
scas
xchg
fwait
sti
sub
mov
leave
lods
icebp
push
jb
xchg
jmp
lds
and
loope
mov
sti
ds
adc
jmp
fldenv
cmp
insl
js
cwtl
movsl
cmpsb
arpl
push
mov
xor
addr16
ret
mov
xchg
sahf
arpl
xchg
and
repnz
add
sbb
jb
cmp
push
nop
lcall
mov
jmp
pusha
push
mov
jmp
xchg
pop
cmp
jbe
stos
rcrb
mov
fsubrl
pop
cli
xor
ret
inc
imul
pop
rolb
xor
jbe
mov
leave
mov
and
and
mov
das
xchg
insl
and
and
es
je
sbb
xorl
pmulhuw
adc
sahf
scas
stc
gs
jbe
scas
add
mov
sbb
in
repnz
dec
repnz
xchg
sbb
mov
inc
loop
dec
mov
sbb
inc
or
cmpsb
sahf
mov
xchg
xchg
adc
imul
insb
sub
push
lea
sbb
cmp
cs
jle
fcmovbe
pop
dec
jae
and
stc
les
ljmp
mov
sub
cmpsb
or
push
nop
addb
adc
or
and
add
adcb
dec
and
shrb
fisttpll
ds
loop
mov
es
xchg
xorb
xchg
mov
sbb
xchg
mov
pop
adc
cs
iret
mov
push
imul
scas
xor
pop
jp
stos
mov
cmp
mov
mov
and
mov
lcall
test
adc
ljmp
sahf
call
ss
sbb
dec
adc
lds
sbb
addr16
jb
stos
push
push
lcall
add
jo
stc
inc
push
xchg
jb
push
ljmp
dec
aam
inc
iret
test
aaa
pop
lret
push
adc
fs
out
mov
lahf
push
loop
push
stos
mov
pop
popf
test
xchg
paddd
and
call
stos
jae
into
cli
sbb
xchg
adc
add
jle
mov
push
fimuls
movsl
and
cmp
lcall
mov
and
scas
jg
ss
outsb
out
xchg
stc
jb
out
or
movsb
and
dec
out
call
push
push
loop
inc
aam
cmp
xorb
rorl
mov
mov
scas
pop
xor
insb
mov
sub
jp
or
stc
xor
jbe
cmc
xchg
mov
jge
inc
push
dec
xchg
ret
pop
addr16
jns
xchg
dec
dec
aam
stos
jb
loop
mov
call
lcall
bound
push
sbb
add
or
out
mov
xchg
xor
sbb
gs
mov
jle
and
test
pop
sbb
and
push
cs
cli
xchg
xor
sbb
jp
ss
pop
repnz
xlat
adc
lret
sahf
mov
shll
pushf
std
mov
inc
out
out
test
mov
sbb
mov
push
out
into
movsl
push
mov
dec
lea
mov
sbb
repnz
hlt
ss
es
xchg
mov
adc
scas
xchg
push
leave
out
cs
adc
pop
stc
imul
sub
out
lock
inc
sub
xor
adc
ljmp
movsl
xchg
or
lcall
adcb
push
sub
into
cltd
pop
add
or
shrb
mov
adc
mov
push
cmpsb
adc
sahf
shrb
fcoms
pop
aam
xor
dec
shll
pushf
sub
adc
ljmp
movsl
icebp
scas
or
out
outsb
and
orl
jne
push
fs
dec
sub
xor
xchg
maskmovq
negl
shlb
outsb
or
test
es
and
mov
in
stos
out
stos
mov
cmp
push
jp
je
push
adcl
rorb
adc
ror
cmpsb
inc
xor
lcall
sub
jae
push
sahf
sub
cmp
lods
pop
mov
push
sbb
push
scas
bound
mov
repz
push
push
add
pop
pushf
lods
leave
movsl
mov
mov
xor
push
mov
ja
orb
movsl
push
pop
xchg
mov
push
fistl
inc
mov
xor
jle
xor
sbb
js
addr16
pop
or
pusha
jp
push
inc
push
xchg
push
cmpsb
inc
jp
pop
sbb
jno
jle
push
pop
mov
pop
fisubs
adc
icebp
outsb
mov
cmp
dec
int
decb
sbb
jb
xor
inc
call
add
enter
out
repnz
lods
jle
push
mov
mov
sbb
loop
ret
xchg
aad
bound
pop
inc
test
xor
jnp
pop
cmpsb
adc
sub
jae
repnz
adc
xor
dec
lods
cli
and
or
in
mov
xor
push
sbb
out
arpl
jle
ficompl
loopne
cli
jl
or
mov
mov
seta
cmp
lock
mov
lahf
xchg
push
mov
into
ret
lods
xor
mov
cmc
mov
xchg
movsl
daa
mov
mov
mov
stc
and
push
cs
test
dec
mov
xor
mov
stc
lret
mov
in
ss
out
enter
xor
out
cli
stc
mov
or
fldl
push
orl
mov
pop
stc
sbb
pop
push
sub
lods
push
mov
adc
jle
cmp
das
bound
cmpsb
add
bound
lods
outsb
cmp
push
jae
mov
repz
jnp
imul
cmpsb
push
rorb
outsb
xchg
pop
shll
jl
jle
ja
sub
and
mull
push
mov
in
add
push
cs
push
loop
jmp
mov
xchg
sbb
adc
jo
mov
cmp
xchg
xor
adc
ficoml
outsb
or
cs
idivb
sub
mov
repz
shr
bound
mov
stc
cmpsb
or
pop
sub
idivb
push
ret
or
pop
adc
test
scas
sbb
jl,pn
sub
xor
cli
pop
int
pop
movsb
cmpsb
pop
loope
rolb
imulb
movsl
scas
sub
mov
in
adcb
fisubrl
outsl
sahf
test
mov
cmp
adc
cli
add
sub
and
and
and
adc
inc
nop
sbb
cmpsb
scas
inc
adc
inc
pop
dec
outsb
jns
jle
mov
mov
inc
lret
cmp
lcall
jae
mov
xor
sbbb
shl
push
outsb
sar
xor
push
dec
ljmp
mov
sbb
inc
nop
scas
mov
orb
jle
adc
dec
push
xchg
adc
bound
sub
clc
out
lret
jg
ds
mov
outsb
out
ljmp
cli
cmpb
add
out
lcall
cli
mov
in
sub
xchg
cmp
mov
and
mov
push
andl
test
mov
adc
stos
bound
jo
cltd
adc
xor
mov
xchg
std
stc
popa
and
ficompl
aaa
dec
repz
mov
es
les
ljmp
cmp
out
fwait
lds
or
bound
push
lea
xor
stos
xor
push
sahf
mov
or
push
pop
mov
pop
xchg
pusha
lret
popf
aam
popa
sbb
ret
outsb
les
jp
adc
mov
shl
shrb
pop
sub
dec
cld
cmp
ljmp
insb
daa
mov
sub
xlat
leave
jb
adc
rorl
data16
out
movsb
es
dec
push
cs
sub
jp
and
and
cld
pop
inc
and
mov
pop
add
and
stos
pusha
jne
jmp
test
and
jg
lock
push
popf
cli
out
push
scas
mov
sbb
adc
sbb
jl
data16
stos
or
sub
adc
fstl
ss
rcrb
loopne
mov
inc
adc
mov
out
jbe
cli
xor
sbb
cmpsb
cmpsb
and
adc
mov
sub
lret
inc
mov
add
addr16
scas
and
int
pop
jbe
cmc
push
adc
in
pop
push
cmp
sub
aas
movsl
sub
scas
pop
cmp
sbb
adc
push
mov
add
dec
cmpsb
mov
notb
inc
ucomisd
sbb
insb
aaa
inc
xor
xchg
xchg
paddw
imul
or
nop
cli
mov
shlb
mov
and
mov
or
cmp
inc
pop
ss
iret
repnz
das
aad
adc
sbb
push
movsl
rorb
arpl
xchg
push
sbb
pop
loop
aam
xchg
jns,pt
jbe
pop
rcrl
loopne
mov
inc
push
stos
dec
insb
neg
push
mov
xor
pop
popf
or
andb
data16
inc
out
add
inc
cmpsb
ljmp
test
xor
int3
jno
ret
imul
fs
xor
push
push
pusha
pop
jp
loop
lock
push
fcomi
stos
stc
in
roll
or
inc
movsl
adc
inc
outsb
and
pusha
ljmp
and
repnz
pop
stos
stc
cli
jge
scas
adc
lds
lds
or
mov
push
inc
pop
xchg
adc
ss
sub
sbb
data16
stos
cmpsb
pop
lds
jno
jp
inc
shrl
das
std
in
xchg
xor
es
cmp
pop
arpl
adc
push
fwait
dec
mov
sti
mov
xor
int
vandnps
adc
adcb
and
test
ljmp
jbe
jle
mov
js
imul
loop
test
pop
push
xchg
push
push
pop
adc
xor
cmp
push
mov
sub
pop
push
xor
bound
stos
scas
sbb
test
into
or
cmc
sbb
mov
sarb
nop
addb
adc
push
inc
xor
and
mov
out
pop
pusha
cmp
jne
sub
loopne
sbb
mov
cmpsb
testb
pop
push
orb
pop
sub
loope
cmpsb
and
xchg
sub
sbbb
orb
or
mov
ret
adc
iret
je
jb
jp
lcall
pop
out
mov
jns
jb
mov
popa
push
push
bound
xchg
xchg
jp
add
mov
fmuls
sbb
add
cli
es
or
xchg
imul
mov
push
cmp
mov
mov
sub
ficomps
outsb
outsl
rorl
in
int
leave
push
sahf
adc
jle
xchg
mov
mov
cmp
push
shl
shlb
stos
dec
push
jb
sub
xlat
stos
and
push
add
jle,pn
xor
sub
sub
xchg
out
lods
jbe
jle
and
jbe
int
adc
xor
mov
mov
adc
mov
stos
and
sbb
cltd
or
lcall
adc
rorl
lret
fimull
push
jno
sahf
push
adc
data16
or
ss
imulb
out
sub
stos
and
mov
ljmp
mov
dec
xor
push
popf
lds
xchg
jp
jbe
mov
inc
mov
rorb
in
push
repnz
sbb
inc
das
adc
iret
and
xchg
idivb
push
push
pop
mov
push
push
push
push
jl
lcall
or
push
mov
or
call
pop
xchg
cs
dec
push
out
xor
xchg
fstl
pop
repnz
push
inc
and
lcall
sti
sbb
mov
or
scas
adc
sbb
dec
bound
fisubrs
dec
in
cli
inc
jns
push
pop
xchg
ljmp
push
xchg
and
lret
jnp
xchg
xlat
rorb
lret
pop
aaa
mov
scas
loopne
sub
sbb
aas
cmp
test
into
fbstp
cmpsb
sub
jle
inc
jle
repnz
pop
leave
jb
imul
js
rcrl
in
mov
mov
ss
push
ds
push
rorl
push
mov
mov
dec
jno
or
push
jmp
push
sub
rcrl
fcmovbe
mov
jbe
jnp
add
fisubrl
clc
ja
int
das
clc
popw
subb
insb
fiaddl
push
pop
mov
mov
sahf
pop
mov
out
shlb
xor
push
pushw
xchg
add
push
dec
subb
dec
pop
shl
sbb
xor
fidivl
mov
xchg
cmpsb
jbe
iret
xor
mov
pop
adc
and
aam
sbb
xor
mov
bound
push
int
repnz
xor
scas
sub
sahf
rorb
jmp
adc
xchg
movzbl
arpl
sti
pop
or
lods
pop
xor
inc
and
fs
pop
test
rclb
imul
fimuls
test
pop
or
lret
dec
rcll
in
std
add
imul
stc
mov
or
jno
pop
popa
xorb
push
fcmovu
outsl
scas
ljmp
mov
pop
add
push
xor
or
cmp
es
dec
into
sbb
and
leave
orl
addr16
scas
mov
scas
jns
sbb
jl
wbinvd
mov
loop
pop
outsb
and
xchg
adc
mov
inc
or
shrb
ss
pop
sbb
out
jae
mov
xchg
mov
jp
aas
lahf
jle
sbb
sbb
mov
dec
sbb
push
outsb
das
xor
cld
jne
and
pop
mov
mov
and
ss
stos
push
xchg
scas
push
cmp
dec
add
mov
test
jp
push
ficomps
das
jmp
pop
dec
lods
outsb
adc
fcoml
pop
cwtl
inc
imul
jle
and
inc
faddl
mov
loope
out
jecxz
or
sbb
jp
jns
and
int
adc
in
push
and
cs
pop
jp
das
sbbb
popl
push
xchg
jle
xor
cli
and
dec
loope
es
mov
sub
dec
repz
insb
jbe
imul
adc
inc
jle
and
mov
pop
out
push
mov
cli
in
mov
push
pop
dec
and
sbb
fs
mov
ret
test
in
add
adc
sub
sahf
fstpl
mov
sbb
outsl
cli
sbb
or
push
adc
mov
mov
pop
push
ss
inc
xchg
aaa
mov
or
cwtl
movsb
adc
sub
add
scas
int3
jno
stc
dec
cmpsb
repnz
cli
adc
shlb
rclb
dec
rorl
add
ja
imulb
jbe
mov
nop
add
sub
cld
inc
add
fcmovne
and
mov
sbb
adcb
push
ficompl
out
xchg
sbb
or
jno
mov
push
mov
pop
les
loop
movsl
lret
mov
push
in
sub
loopne
fcmovb
sahf
cli
xor
loop
or
lret
sbb
lock
sahf
push
jle
repnz
adc
test
jp
xchg
or
sbb
arpl
add
insb
ret
imul
jb
add
iret
xorb
sub
and
cmp
stos
push
es
push
jno
bound
xor
mov
arpl
addr16
int
jb
sub
cmpsb
pop
and
int
and
push
mov
outsb
xchg
roll
nop
xor
ss
sbb
jns
jle
in
cli
out
aad
stos
ss
xchg
paddd
rcrb
jns
imul
jp
push
outsb
out
aam
stos
adc
xor
fisubs
cmp
mov
pop
push
lcall
imul
jns
std
jge
add
lret
cs
test
loop
push
mov
dec
and
and
or
and
jle
inc
fidivrs
push
sub
shll
sti
popf
iret
or
inc
pusha
mov
mov
js
sub
gs
stos
out
and
cld
push
add
adc
sub
loop
shr
jle
mov
dec
mov
sub
xchg
adc
jbe
repnz
scas
xchg
stos
adc
inc
xor
xchg
outsb
xchg
pop
xor
adc
jb
sbb
push
sbb
cs
sarb
lods
and
inc
fidivs
push
sub
sub
jle
fnstenv
pop
push
in
shlb
pop
rcrl
arpl
xchg
subl
stc
push
xchg
arpl
sahf
fists
data16
and
inc
cltd
das
dec
lea
rclb
ljmp
js
push
xor
mov
mov
data16
or
adc
sub
adc
test
lock
mov
vmovapd
test
jbe
imul
push
sbb
mov
push
das
dec
outsb
dec
jle
add
sub
add
int3
xlat
data16
pop
or
bound
cmpsb
pop
xchg
arpl
push
sbb
fdivrs
dec
pop
add
ljmp
push
andb
push
fimuls
das
fst
cli
int
bound
push
xchg
pop
subl
outsb
add
jp
inc
pusha
jbe
xchg
adc
sub
or
or
in
push
test
pusha
aas
mov
sbb
and
xchg
sbb
ds
mov
aaa
lds
push
cs
scas
and
xor
das
sbb
and
clc
rcl
ds
out
clc
lcall
rorl
mov
mov
roll
inc
and
call
outsb
popf
push
in
sub
jg
outsb
gs
popa
cmpsl
addr16
jae
popa
push
sub
pop
repnz
scas
cmp
clc
push
lods
bound
ljmp
rolb
stc
mov
pop
pop
ss
fprem1
xchg
mov
sub
decb
adc
add
or
xorb
data16
xchg
repz
nop
ljmp
lcall
sub
add
movsl
into
xor
or
sub
inc
ss
mov
scas
mov
dec
notb
sbb
ficoml
mov
jb
sbb
sbb
insb
jle
cs
mov
push
dec
jns
scas
sub
inc
sub
scas
adc
xor
jbe
xor
rcr
sti
popa
sbb
push
pop
mov
push
mov
repnz
fldl
pop
loop
sbb
mov
dec
pop
adcb
les
les
es
mov
call
pop
mov
repnz
call
xchg
repnz
negb
pop
or
jmp
stc
jle
pop
jns
sahf
push
lods
ja
mov
xchg
in
pop
sbb
adc
repnz
push
push
hlt
shrb
cmp
xchg
ss
xchg
cmp
jmp
xchg
push
ljmp
push
sub
sbb
sbb
pop
icebp
cs
das
out
loop
dec
xor
cmp
cmp
stos
add
data16
shl
dec
popa
lock
leave
repnz
jmp
jle
push
cltd
sahf
in
scas
jecxz
ljmp
dec
sarb
push
ljmp
sub
in
dec
addr16
lea
cmpsl
xchg
test
cli
or
push
push
cmp
cmpsb
xchg
jbe
jnp
adc
bound
sbb
pandn
pcmpgtb
mov
jbe
ss
int
stos
push
mov
scas
xchg
insb
je
arpl
adc
cli
into
fisubs
sub
cmp
push
push
lock
pop
ss
cli
ljmp
aaa
mov
mov
xlat
sahf
scas
mov
loop
pushf
int
loopne
or
jb
dec
sbb
mov
cmp
jle
mov
or
or
and
fistps
xchg
ljmp
push
cli
in
movsl
xchg
bnd
sbb
mov
jno
adc
xor
add
xchg
mov
push
clc
mov
test
jnp
push
les
fildl
lcall
pop
shrb
into
pop
jb
xchg
repnz
repz
push
inc
push
push
push
push
or
jns
push
test
lcall
repnz
cmpsl
outsb
dec
imul
and
out
ljmp
or
sub
pop
mov
out
out
ret
xchg
pop
xchg
movsl
push
lock
loope
imul
adc
xchg
push
xchg
or
shrb
cmp
or
out
adc
lahf
and
leave
xchg
jle
jl
nop
jbe
sbb
es
push
sub
inc
and
push
push
and
mov
add
push
sub
nop
mov
cmpsb
add
stos
xchg
imulb
orb
nop
push
push
or
add
and
jns
ds
dec
cs
cli
pop
xorb
scas
or
xchg
sbb
ss
push
push
xor
mov
adc
enter
out
and
xor
dec
xlat
shlb
sbb
pop
lds
imul
rorl
push
jle
or
push
rorl
movb
scas
mov
scas
in
dec
sbb
xlat
and
push
aam
into
out
mov
or
xchg
xchg
adc
cmc
out
jle
push
dec
and
stos
jp
xchg
bound
test
cltd
and
mov
lcall
das
inc
dec
into
test
loop
mov
shrb
mov
push
xor
push
outsb
xchg
pop
fstl
fdivr
jbe
and
sbb
cld
out
xor
push
dec
jno
sub
or
mov
imul
xchg
shrl
xlat
into
fstps
and
es
sub
cvtps2pi
push
imul
lods
data16
hlt
mov
cmpsb
lock
xchg
es
jb
out
push
jle
test
mov
sub
sarb
mov
int
stc
jbe
aas
dec
movsl
or
push
stos
shrb
xchg
sbb
sahf
sub
cmp
stos
outsb
pop
xchg
leave
or
out
in
addl
jbe
pop
push
cmpsb
bound
mov
das
hlt
sqrtps
push
sbb
scas
cmpb
dec
or
xlat
out
push
and
enter
dec
mov
mov
lret
imul
stos
push
dec
and
pop
dec
pusha
add
adc
push
add
dec
movsb
mov
xlat
mov
jp
add
mov
sbb
xchg
push
xlat
xchg
fcmove
jae
or
inc
sub
lds
sub
mov
push
xor
rorl
stos
pop
xlat
ss
add
dec
adc
or
push
das
add
and
mov
insl
lcall
xor
and
lcall
pop
in
rolb
and
sahf
shl
push
or
bound
jge
jp
negb
adc
mov
xchg
es
out
cs
sub
push
jb
fistps
test
xchg
xlat
add
je
popa
sahf
or
imul
push
cmp
sbb
add
inc
push
mov
inc
xchg
mov
lcall
sbb
sbb
or
jle
std
jle
jns
es
fucomip
mov
iret
ret
mov
sub
pushf
jne
pop
lock
xchg
push
lock
dec
jp
push
jbe
push
stos
test
cmp
push
sub
sbb
push
pop
shlb
lods
jne
mov
in
cli
andb
adc
sub
dec
or
xor
xchg
and
int3
cltd
push
push
and
pop
leave
jbe
pushw
cmp
cmpsb
rolb
mov
stc
bound
mov
out
int3
test
jno
push
push
push
mov
imulb
js
sbb
push
adc
test
inc
xchg
xchg
test
je
repnz
movsl
mov
push
into
scas
sub
jle
int3
arpl
in
mov
shrl
mov
out
setno
or
and
pusha
lcall
imul
mov
scas
or
ficoml
mov
or
es
pop
mov
mov
mov
and
jns
xlat
movsl
push
movsl
cmpsb
xor
jmp
sub
outsl
push
or
pop
pop
sub
jne
js
sub
sarl
xchg
mov
ss
ret
inc
xor
mov
je
sbb
sub
pop
fimuls
cmpsb
ret
add
cmp
cmpsb
push
stos
fidivl
jp
pop
cmpsb
repnz
dec
repnz
mov
mov
xchg
data16
jp
push
pop
mov
scas
dec
aaa
sar
cmpsb
ljmp
mov
mov
out
test
add
mov
jp
sub
xor
mov
jle
push
scas
pop
das
out
outsb
pop
xchg
out
sahf
idiv
mov
mov
cmpsb
and
pop
loope
es
sbb
lahf
iret
leave
sub
mov
cmpl
pushf
jmp
pop
cmpsb
jl
and
sub
xor
enter
xchg
lods
sahf
push
jb
mov
paddsw
jl,pn
ljmp
push
mov
sbb
add
stos
fmul
in
lahf
push
lods
lds
push
cmp
xor
cs
sub
xor
pushf
add
stos
into
mov
push
and
loop
nop
mov
outsl
jnp
incb
xchg
adc
adc
jp
sub
add
mov
repnz
int
stos
js
push
pop
adc
or
xchg
call
jle
sub
mov
fnstsw
jb
or
loop
dec
shlb
xchg
mov
iret
rorb
mov
xchg
faddl
adc
cmovp
mov
or
push
jb
popa
push
sub
neg
stos
es
adc
aam
sub
push
bound
or
cmpsb
mov
addr16
sub
cmove
jmp
mov
test
movsl
rorb
inc
popf
sbb
xchg
push
fdivp
or
cmp
fistps
mov
rol
or
mov
add
popa
mov
xchg
mov
and
lcall
sbb
shrb
jle
dec
imul
out
testb
pop
movsl
mov
das
enter
cltd
jp
push
jb
insb
xor
push
xor
sbb
and
int3
in
out
push
int3
dec
inc
out
jge
xchg
inc
push
cs
mov
fst
in
cld
mov
fistpl
add
adc
cmpsb
popl
in
adc
rcll
push
into
jno
jns
jle
scas
mov
push
sbb
cmp
and
jbe
adc
inc
adc
js
push
in
adc
push
xchg
sbbl
adc
xchg
or
mov
scas
mov
jl
push
scas
xor
xor
test
movsl
jns
pop
fisubs
cs
jne
or
push
pop
pop
push
or
adc
jno
out
imul
ficoml
pop
fsubs
push
mov
pop
mov
pop
lds
and
push
and
loop
push
dec
sbb
push
repnz
mov
in
xchg
and
xchg
and
loop
xchg
loopne
leave
bound
mov
jp
inc
lcall
push
sub
xor
push
lea
jl
stos
and
adc
push
data16
je
dec
xor
adc
add
outsb
bound
rorl
nop
sbb
push
xor
in
lcall
fmulp
pushf
pop
cmp
jbe
rolb
movsl
add
cli
fidivl
and
lcall
adc
or
fdivr
jbe
xor
pop
pop
xchg
jg
inc
iret
cmp
data16
push
mov
lods
jge
dec
push
xchg
sub
push
out
test
pop
out
sahf
adc
push
mov
push
cmpsb
ljmp
push
shlb
loope
sbb
dec
push
ficompl
or
push
adc
pop
int
xchg
push
pop
mov
bound
sbb
cmp
lcall
xor
mov
mov
push
and
iret
repnz
das
cmpsb
jbe
bound
mov
movsl
push
push
and
ficomps
push
imul
jp
push
jb
pop
xor
jb
mov
push
outsb
scas
push
xor
pop
int
push
sub
je
popf
call
xor
testl
sub
pop
jno
aas
test
test
stc
hlt
pop
pop
sub
jbe
or
or
sbb
dec
cmp
push
jp
cmp
imul
cwtl
mov
out
mov
jecxz
pusha
sbb
push
inc
xchg
xchg
and
push
popa
notb
adc
stos
loop
mov
rcl
cmpsb
into
mov
loope
pop
add
push
jg
cmp
jg
push
dec
mov
incb
and
loop
imul
pop
mov
stc
out
or
out
and
shlb
das
mov
mov
es
push
out
xchg
orb
pop
and
sbb
fidivrs
xor
jmp
insl
cmp
stos
dec
push
scas
push
and
es
daa
jbe
jo
or
ret
scas
adc
jno
push
jb
imul
enter
aaa
out
inc
inc
xor
outsb
sub
add
adc
aad
xchg
jae
ss
scas
mov
dec
jb,pn
or
loopne
adcb
sarb
push
xor
call
jle
in
mov
sbb
ljmp
cwtl
mov
ret
sub
push
push
xchg
cli
data16
add
mov
push
mov
sub
xor
push
xchg
bound
push
push
repnz
pushl
iret
jno
orb
movsl
push
xor
sub
pop
push
test
or
das
push
pusha
or
sub
mov
sahf
jno
sub
cmp
cmpsl
fists
mov
xor
outsb
data16
adc
push
das
outsb
or
push
xor
mov
test
sbb
adc
imul
or
adc
rcl
adc
jge
jle
ficomps
in
mov
or
cli
pop
pop
xchg
xchg
jle
jecxz
push
mov
sub
pop
pushf
ds
pop
jle
daa
test
stos
mov
xchg
add
popf
scas
pop
les
mov
push
ljmp
cmpsb
push
mov
and
fdivrs
push
jbe
push
pop
push
movsb
and
jno
sub
lret
cmp
shr
mov
mov
test
push
push
jl
or
dec
pusha
fisubrl
add
loopne
mov
lea
sub
test
jle
push
sbb
xchg
ss
jns
adc
adc
sub
arpl
movups
cltd
push
jp
jno
sbb
xchg
int
ss
imul
xchg
fisttpll
xchg
aaa
ds
cmpsb
shrl
lods
popf
mov
inc
jle
sbb
sbb
out
pushf
mov
push
sub
push
adc
jns
push
idiv
outsb
and
cmpb
or
scas
push
add
in
sub
jl
out
nop
out
push
fcmovb
xor
pop
push
xchg
stc
cmpsb
fimuls
sbb
sbbb
push
push
or
ret
jp
sbb
imul
jmp
das
sbbl
or
out
loop
xor
jle
cmp
push
push
aaa
pop
mov
push
add
hlt
sub
test
daa
jmp
sub
out
das
add
xchg
fimuls
cld
xchg
repz
sub
push
and
push
pusha
je
mov
inc
jne
out
xor
dec
and
rorb
mov
sbb
dec
adc
xchg
push
sub
jbe
fstp
inc
push
loop
add
or
jbe
mov
ret
stos
jne
push
sbb
cmpsb
jns
fiaddl
es
mov
push
outsb
mov
mov
and
jp
push
fdivrp
iret
sarb
add
outsb
sbb
sbb
push
adc
stos
cmp
test
repnz
xor
pop
xchg
jp
outsb
jbe
sbb
push
aaa
dec
sub
testb
jp
jle
stos
xchg
mov
push
or
add
jp
sub
push
scas
inc
add
sbb
mov
adc
es
push
int3
dec
mov
add
push
dec
arpl
repnz
jbe
jne
mov
xchg
ljmp
imul
adc
adc
sub
call
push
ds
out
cmp
inc
sub
fadds
push
pop
inc
ja
mov
xor
cmpsb
mov
test
push
scas
mov
iret
or
imul
push
xor
mov
mov
adc
jae
jg
pop
cmpsb
sub
jg
loopne
or
es
scas
xor
adc
inc
fisttpll
loop
adc
jno
and
jnp
divb
sub
sub
inc
jae
ja
and
in
loop
imul
cld
sbbb
fnsave
adc
in
loop
xlat
inc
sbb
and
notb
adc
out
rcrb
sub
push
and
or
dec
mov
jecxz
pop
jle
scas
std
out
sti
pop
jp
adc
sti
pop
int
push
xor
clc
jns
sahf
or
jno
pop
sub
mov
movsl
test
out
sub
sbb
push
rcll
cs
mov
out
xor
outsb
dec
imul
cmpsb
mov
pop
and
lret
sub
xchg
scas
loopne
int3
xchg
xchg
sub
push
push
out
repnz
shll
fcmovb
sahf
pop
pop
scas
and
adc
pop
jmp
cmp
testb
fisubrl
jo
rclb
movsl
push
or
mov
add
ds
sub
and
mov
mov
sti
pop
pop
and
sbb
mov
and
xorb
push
sub
mov
inc
sub
inc
stc
std
sbb
mov
out
and
pop
bound
mov
push
pop
adc
cwtl
dec
or
sbb
mov
loope
pop
mov
xor
push
mov
xor
or
xor
adc
int
mov
pop
gs
mov
jge
fbstp
pop
inc
push
pop
jnp
arpl
or
push
add
sub
insl
imull
stc
mov
out
and
push
sahf
data16
lods
dec
pop
or
or
lods
ja
test
cmp
outsb
fldt
cmp
and
mov
cmpsb
insb
xor
push
push
sbb
push
and
ss
dec
and
sbb
jno
sbb
jne
adc
cli
int
xchg
inc
adc
pop
repnz
in
cli
imul
and
xchg
push
jmp
xchg
add
xchg
add
or
xchg
cld
popa
outsb
stc
mov
add
cmpsb
jecxz
rcll
sub
rorl
rcrb
cli
add
inc
push
lcall
cmp
arpl
push
test
jbe
jg
fisttpll
push
xchg
or
stos
dec
dec
stc
rorb
and
xlat
or
sbb
jb
popa
and
and
sub
loop
test
imul
stc
loope
lcall
je
xchg
mov
push
cmpsb
mov
xchg
cltd
adc
ss
enter
push
rcl
stc
jns
xchg
shlb
or
inc
jle
and
sbb
and
shlb
push
adc
xor
xor
push
xchg
or
cmp
sbb
test
in
jecxz
push
das
adcl
cmp
popf
mov
jb
out
sub
das
xor
dec
fstpl
lret
cltd
jns
bound
imulb
out
cmpsb
mov
mov
dec
imul
es
and
jecxz
into
add
push
xor
imulb
insb
sub
insb
pop
sub
sbb
fidivs
fs
mov
jle
jbe
out
xor
out
int3
leave
and
pushf
push
out
push
stos
adcb
es
xchg
mov
xor
push
xor
mov
fstpt
cmp
adc
call
mov
mov
cwtl
lcall
xchg
and
adc
cli
push
dec
loope
cli
jns
stc
outsb
sub
sub
mov
mov
xor
fcmovbe
add
rolb
clc
or
in
mov
fstpl
sbb
fiaddl
insb
jbe
jae
push
jge
mov
pop
xor
dec
int
adc
sbb
and
es
decl
int
xor
lahf
cmpsl
push
aaa
ljmp
mov
out
jge
and
push
push
je
adc
mov
and
push
xor
cli
repnz
mov
sar
in
mov
add
nop
dec
sbb
pop
int3
cs
pop
or
add
aad
mov
in
ficoml
sbb
mov
xchg
loop
ss
cmova
push
orb
scas
jno
cs
push
or
pop
arpl
xchg
and
add
sahf
or
push
push
andb
and
dec
loope
shr
sbb
add
out
or
cmpsb
dec
sbb
mov
imul
imul
ljmp
mov
dec
out
pop
push
out
lret
outsb
add
adc
jmp
data16
ljmp
push
adc
push
out
jno
jae
and
cmpsl
and
popf
sar
ds
adc
mov
mov
fimull
inc
popf
cmpb
sub
repz
xchg
fsubrs
sbb
fidivs
push
add
pop
cmp
jbe
or
out
imul
lods
outsb
stos
mov
xchg
stc
stc
push
adc
lcall
push
pop
lret
add
movsl
shl
adc
mov
push
divl
iret
imul
mov
fisttpll
add
ret
pop
and
ljmp
mov
sub
adc
es
cli
fsubrs
es
iret
xchg
sub
mov
fiadds
sbb
or
scas
push
dec
scas
adc
ljmp
sbbb
popa
pop
xchg
sub
out
xchg
sub
jbe
inc
adc
pop
popf
mov
adcl
sub
dec
cli
xorl
or
fidivrl
jno
or
sbb
movsl
out
outsb
sbb
fcmovu
inc
lea
inc
xor
dec
sahf
out
jle
sar
cmpsb
ljmp
inc
insl
popl
daa
adc
loop
push
test
push
or
adc
scas
xchg
repz
mov
daa
xor
mov
nop
imul
add
inc
mov
fimuls
fsub
sbb
imul
and
scas
xor
adc
and
lea
jle
inc
and
out
pop
lods
push
fs
popa
mov
push
mov
mulb
xchg
add
mov
or
and
push
pop
pop
outsb
std
gs
fldl
jae
mov
ljmp
jp
js
xorl
and
out
repnz
jle
jno
push
icebp
mov
dec
jno
mov
jno
push
xchg
int
out
shlb
xlat
dec
mov
jle
fstl
jo
dec
jp
sahf
adc
mov
movsb
imul
data16
cli
add
ret
test
test
pop
stos
mov
and
cltd
adc
sbb
dec
xor
arpl
mov
and
xchg
mov
xor
push
xor
push
fidivs
or
movnti
push
and
or
outsb
mov
daa
jb
pop
movsl
adc
andl
popa
jnp
pop
sbb
pop
sbb
lcall
fmulp
stos
push
xchg
jbe
data16
add
pop
cli
pusha
mov
outsb
push
or
sub
cmp
push
mov
das
cmp
aam
sub
or
add
scas
mov
push
leave
mov
pop
sub
mov
scas
and
lret
nop
aaa
jns
jp
push
insl
xchg
movsb
push
push
adc
ljmp
jmp
mov
bound
and
mul
add
test
stos
repnz
mov
in
repnz
cltd
sub
xlat
test
xchg
in
out
push
push
xor
adc
cmpsb
pusha
xor
sbb
inc
bound
and
sahf
jle
jbe
stos
pop
push
popf
sbb
add
sub
ss
mov
dec
int
jo
rcr
cmpsl
testb
out
push
jb
data16
outsb
mov
in
push
scas
and
and
sub
popf
add
adc
sub
push
neg
sub
fistl
stc
es
bound
mov
inc
lea
mov
sbb
bound
push
cmc
xchg
daa
inc
jb
adc
push
test
cs
repnz
xor
jno
jbe
sahf
ja
gs
lods
inc
inc
push
in
decl
dec
lds
pop
movsl
lret
aam
rclb
push
adc
out
ret
nop
bound
scas
pop
sub
sahf
xor
ds
sbbl
iret
or
cmp
mov
stc
xchg
adc
mov
jb
xor
and
jle
and
cli
fimull
adc
push
xchg
or
andb
adc
lock
movsl
mov
loopne,pt
repnz
xchg
jle
jle
jbe
jne
and
xchg
cmp
int
not
aaa
adc
push
or
jmp
sbb
adc
ret
into
daa
fimuls
sub
adc
sbb
sub
dec
dec
mov
rorl
in
mov
ficoms
scas
dec
arpl
popf
mov
out
cmp
lret
jae
push
sbbb
movsl
push
int
ljmp
bound
xchg
inc
das
scas
and
inc
fstl
mov
xor
repnz
pop
sahf
jb
stc
push
pop
and
imul
dec
pop
add
scas
cmp
push
sbb
in
mov
sbb
scas
and
sbb
inc
adc
cmp
jb
data16
adcb
jp
stos
arpl
push
push
lcall
xor
sub
dec
shrl
cli
imul
add
pop
xorl
psrld
sub
sbbb
or
jp
mov
mov
cwtl
es
dec
scas
mov
stos
sub
cli
data16
xchg
std
push
aaa
in
in
cmp
out
imul
jp
or
cwtl
stos
pop
aaa
addl
ja
xchg
add
cmpsb
mov
ljmp
es
test
or
inc
fists
lods
dec
or
and
adc
pop
add
jnp
or
int3
push
adc
xor
bound
pop
test
sarl
push
or
jl
mov
stos
into
ficompl
ret
mov
aas
addr16
dec
and
scas
adc
mov
pop
or
stc
fdivl
adc
scas
mov
dec
bound
mov
pop
jns
mov
cs
mov
adc
rorb
push
jle
xor
jbe
push
mov
ret
cmpl
cltd
stc
and
std
push
negb
dec
leave
and
push
sub
out
ljmp
xchg
cmpsb
fs
loop
pop
ljmp
aaa
mov
bound
sbb
jg
cwtl
packuswb
cmp
xchg
fimuls
les
pop
dec
sub
mov
cmc
scas
movsb
std
or
xchg
sbb
bsr
adc
je
push
lods
jne
cltd
int
in
or
adc
adc
cmpsb
outsb
rcrb
dec
sbb
sbb
inc
fwait
or
jle
fstl
iret
xor
cltd
ljmp
push
mov
xor
ljmp
push
std
xor
jno
sub
adc
push
pop
popf
mov
cmp
rorb
and
add
sub
push
lret
fists
movsl
push
ljmp
sbb
dec
lods
stc
insl
sbb
out
cmpsb
mov
pop
adcb
ret
jns
xor
cli
xor
mov
decb
xor
mov
cmp
cmp
enter
mov
fbld
sbb
mov
loop
xlat
adc
adc
pop
cs
xchg
push
dec
push
scas
cmpsl
das
daa
scas
sbb
sbb
and
push
pop
cs
cld
stc
mov
stos
mov
ljmp
push
scas
dec
adc
or
fmuls
cli
xchg
rorl
add
fnsave
and
sbb
out
lcall
jbe
aam
push
jae
int3
jns
add
jmp
daa
add
pop
push
mov
and
clc
stos
and
xchg
ret
jmp
cmpsb
ss
inc
jne
mov
ret
iret
ficomps
out
add
dec
test
add
scas
mov
out
data16
pushf
cs
das
loopne
out
scas
push
mov
pop
and
sahf
ljmp
ficompl
add
dec
dec
daa
sub
sub
not
adc
cmpsb
fimull
dec
pop
or
sahf
enter
negb
pop
loop
adc
cmp
sub
aaa
sbb
loope
push
movaps
leave
imul
sbb
stc
insb
in
ljmp
jle
scas
dec
jno
scas
mov
push
fcmovu
pop
sbb
das
and
cli
sahf
jo
and
pop
xchg
mov
es
xchg
cltd
sbb
shrb
and
ficomps
jl
xchg
out
adc
and
xor
xor
outsb
mov
inc
repnz
adc
jae
aam
dec
scas
pop
sbb
fmull
pop
jnp
xchg
sub
cld
das
adc
jb
ds
mov
psrlw
int
mov
pop
sub
fsubrs
stos
push
bound
clc
xor
frstor
add
mov
sub
sbb
cs
add
push
jbe
xor
lret
cs
add
push
lahf
jo
fsubp
jns
lods
push
mov
outsb
sub
sbb
push
jl
push
or
mov
ljmp
es
rorb
das
les
bound
pop
repnz
jp
sbb
out
repnz
int3
popa
or
aas
lock
mov
stc
mov
pop
add
inc
cld
cmp
ret
imul
cmpsb
data16
bound
and
sub
push
roll
or
inc
dec
sub
or
repnz
add
ficoms
dec
push
cld
or
out
stos
loope
and
jl
xchg
fsubrs
mov
popa
sub
or
cmpsb
pusha
push
imul
shlb
scas
rcrb
sub
pusha
or
or
dec
sub
mov
repnz
mov
push
dec
fs
scas
cli
lret
or
jbe
mov
sbb
jmp
dec
lcall
test
xchg
xlat
and
add
cmpsb
jle
inc
jge
jb
pop
sahf
divb
and
int
cmp
xchg
out
xchg
stc
test
es
int
pcmpeqb
jle
data16
push
dec
incb
rcrb
and
inc
jb
sub
pusha
sub
pop
push
pop
cmp
repnz
lcall
add
add
cltd
stc
es
lret
pop
sub
cmp
xchg
popa
faddl
ss
xchg
push
pop
je
arpl
jae
push
push
or
cltd
out
cmp
add
subb
fcoms
rcll
add
pusha
insb
mov
mov
and
add
push
dec
cs
dec
jl
inc
add
imul
mov
outsb
outsb
movsl
cmp
jnp
es
popa
movsb
bound
xchg
stc
mov
add
out
mov
xlat
int3
push
out
imul
ljmp
popa
outsl
sub
push
enter
sub
xchg
out
lret
pop
push
popf
pop
sarl
cmp
adc
jle
jle
adc
xor
clc
jp
andb
lahf
jbe
in
mov
or
xchg
push
push
sbb
out
xchg
shlb
push
adc
outsl
es
repz
push
mov
fsubr
add
stos
bound
push
sbb
push
scas
dec
xchg
pop
push
dec
mov
push
call
push
xchg
and
aaa
insl
pusha
js
mov
into
push
pop
divb
push
mov
movsl
rclb
imul
notb
push
xor
dec
push
mov
stos
cmp
sbb
hlt
cmp
mov
push
out
outsb
stos
movsl
jbe
push
imul
sbb
mov
bound
mov
std
mov
push
xchg
shlb
ss
data16
inc
pop
icebp
xchg
fdiv
mull
lock
cs
les
daa
rcl
push
fisubrs
mov
pop
inc
push
push
pop
aas
imul
fsubs
jle
in
jb
mov
fidivl
dec
mov
in
lret
scas
xor
out
repnz
fadd
aas
scas
jge
sbb
and
push
xor
bound
mov
mov
stos
shlb
sahf
pop
push
dec
orb
jns
sub
cld
mov
scas
stc
out
dec
loop
mov
fidivs
push
leave
not
loopne
xor
adc
jle
lods
jns
cmpsb
ss
jns,pt
push
lret
pop
push
sbb
push
inc
or
dec
shll
sarb
test
xor
scas
push
and
and
jno
jb
push
out
imul
adc
fwait
mov
ss
fisttps
loop
mov
push
std
bnd
imul
xchg
repnz
fimull
mov
mov
stos
and
xor
mov
imul
loope
shl
sub
pop
xchg
repz
push
push
push
or
aaa
and
nop
push
fisubrl
xchg
sar
mov
xchg
lods
or
dec
jb
cmp
loop
sub
shll
fld
push
cmpsb
mov
push
push
xchg
push
mov
adc
sub
jns
inc
fabs
aam
les
int3
cld
repnz
mov
push
xor
data16
dec
pop
mov
scas
lock
cs
mov
shlb
push
mov
or
lcall
adc
mov
add
push
test
cmpsb
vdivss
aas
rclb
adc
jbe
mov
pop
mov
adc
sbb
mov
add
mov
cli
push
pushf
sbb
pop
fisttpl
jmp
mov
adc
xchg
or
mov
or
stos
sub
add
ss
out
sarl
xchg
fisubrs
push
lods
data16
jp
popa
movsb
and
jb
push
std
mov
xchg
pushf
or
sub
push
add
sahf
jno
bound
push
lock
push
mov
aad
inc
inc
out
outsb
or
popa
sahf
xor
sbb
jne
and
das
xor
shrb
and
push
pop
lods
push
jb
push
jg
scas
into
jl
fucomp
xchg
mov
fiadds
movsl
xchg
sahf
adc
inc
fisubrs
add
ss
jns
push
into
iret
cmc
push
das
dec
cmp
jae
jp
fisttpll
push
adc
push
pop
outsb
push
mov
dec
xorb
cmpb
sbb
and
out
inc
push
mov
rcrl
rcll
and
aas
in
leave
popf
sub
cli
pop
shlb
push
push
adc
push
sub
sahf
mov
xchg
movsl
bound
sbb
pop
xchg
testb
and
decl
sub
adc
mov
jbe
push
mov
es
pop
mov
movsb
sub
inc
mov
stc
sbb
and
pop
jbe
push
lret
and
or
sbb
hlt
or
mov
pop
mov
cmpsb
ficoml
fldt
lahf
pop
leave
xor
js
sahf
mov
pop
cmp
pop
popa
inc
jbe
in
mov
pop
push
clc
and
and
jle
lcall
adc
mov
mov
nop
inc
mov
shr
repnz
arpl
das
dec
cmpsb
sbb
mov
mov
jecxz
xor
sbb
sarl
pushf
push
mov
mov
mov
nop
mov
out
arpl
sarl
mov
cmp
cmp
mov
cmp
mov
xor
fisubrs
mov
imul
dec
jns
sub
jp
mov
jbe
xchg
push
cmp
and
pop
cmp
adc
sbb
xchg
and
inc
lahf
push
jbe
lock
xchg
mov
add
scas
ss
xlat
iret
out
sahf
lea
outsb
push
dec
lret
mov
in
xor
or
mov
in
fcomps
sub
ret
pop
stos
and
aaa
adc
fstpl
adc
cmp
mov
adc
sbb
aaa
jns
add
mov
dec
push
add
inc
adc
or
cli
movsb
imul
dec
push
push
cmpsb
adc
add
fs
dec
pop
xchg
xchg
stc
mov
movsl
repnz
bound
push
js
aad
mov
data16
inc
cmpsb
ljmp
adc
or
cmpsb
lahf
inc
inc
outsb
inc
mov
push
pop
adc
push
clc
test
pop
rclb
xor
mov
and
cmp
sbb
aas
aas
dec
push
mov
push
adc
push
jmp
cli
loopne
ficompl
divl
mov
xor
scas
xchg
mov
leave
mov
sbb
add
in
sub
aam
push
cmp
andl
sub
outsb
popf
movsl
mov
hlt
push
imul
movsl
loop
xor
dec
jno
ficompl
push
jmp
add
or
imul
xor
xor
shll
scas
sahf
sbb
mov
xorb
xchg
xor
inc
sbb
idiv
mov
out
dec
cli
xor
pop
shrb
jmp
add
adc
dec
movsl
roll
jl
xchg
loop
outsl
repz
lret
mov
fimull
push
mov
daa
push
gs
stc
jp
sub
test
push
notl
lret
movsl
push
mov
cmp
mov
add
push
xor
push
sahf
mov
xlat
pop
jmp
inc
bound
fwait
gs
add
fidivrl
cmc
insb
jl
lcall
leave
push
loopne
outsb
xchg
out
push
dec
push
sbb
fcoml
inc
adc
jno
bound
mov
stos
mov
pop
xor
pop
je
fwait
cmpsl
adc
cli
dec
scas
out
sub
test
xchg
imul
inc
jmp
mov
xchg
outsb
cmc
sar
adc
push
pop
inc
or
and
cmp
rorl
or
jle
bnd
xor
cs
repnz
inc
and
sub
mov
imul
out
sbb
popa
or
pop
push
dec
jmp
es
mov
sub
jae
mov
iret
push
data16
adc
in
rcrl
outsb
xchg
outsb
xchg
rorl
lret
outsb
mov
xchg
jns
sahf
mov
cld
dec
xchg
aam
out
scas
push
popl
lods
adc
out
inc
adc
mov
xchg
fistpll
sarb
negb
mov
jbe
jg
sbb
xchg
add
mov
and
lahf
jno
sub
or
pop
test
cmp
xor
scas
int3
frstor
inc
outsb
insl
jne
pop
dec
sbb
cs
loopne
iret
push
push
xorb
imul
jb
dec
cmp
cs
enter
jb
dec
mov
pusha
xor
mov
test
inc
daa
push
mov
dec
es
xorb
push
das
out
jb
sarl
xchg
or
jo
adc
mov
pop
mov
sahf
xor
roll
mov
pop
sbb
mov
ficoms
das
jno
sbb
add
xor
mov
jns
push
cmc
loop
out
push
das
inc
jmp
iret
ret
mov
xchg
sub
scas
cltd
sub
sub
in
or
pop
adc
scas
xor
cmovle
outsb
out
stos
sbbb
das
int
jb
outsb
iret
shll
mov
in
sub
nop
mov
and
dec
fimull
loop
mov
and
adc
adc
arpl
sbb
push
int
xchg
cmpsb
mov
push
mov
and
pop
jne
out
pop
cmpsb
xchg
adc
push
out
push
push
adc
imul
outsb
aas
mov
outsb
xor
adc
sbb
popa
ljmp
jno
cli
stos
mov
mov
jmp
xchg
push
sbb
sub
fnsave
dec
pop
bound
repnz
adc
push
cmp
sub
mov
sbb
jno
add
mov
push
inc
jle
sub
popa
sub
add
loop
imul
cld
pop
clc
mov
mov
scas
pop
in
push
push
int
mov
sub
and
adc
mov
jo
cli
push
cwtl
mov
mov
xchg
pop
aaa
loop
fcompl
imul
xchg
leave
mov
mov
aaa
sbb
imul
sbb
and
mov
cmpsb
jle
sbb
mov
jp
mov
sti
call
shrl
mov
and
jp
rcrb
in
sub
jb
scas
jno
mov
lret
jb
sahf
arpl
xchg
cmp
mov
cmpsl
movsl
push
sahf
mov
adc
inc
pop
jp
cmp
jge
test
push
or
stc
arpl
push
mov
es
jno
fimuls
sahf
push
ss
popl
mov
outsb
xchg
jae
push
out
and
add
leave
mov
push
dec
jp
pop
and
movsl
jbe
bound
xchg
sub
lcall
leave
xor
fucomip
mov
fs
addr16
adcb
push
adc
adc
xchg
xor
scas
adc
es
enter
push
cmp
cmpsb
dec
cwtl
xchg
and
adc
testb
push
repz
push
test
push
fstps
imul
stos
push
sub
flds
cli
jp
jbe
sahf
repnz
xchg
xchg
or
call
aam
push
arpl
jg
dec
ds
sbb
lcall
pop
push
sub
dec
adc
xchg
aaa
adc
push
scas
pop
stos
clc
int3
es
outsb
ds
pop
mov
xor
scas
jae
add
sbb
fidivs
orb
sub
jbe
ljmp
adc
cld
popa
fistpl
xchg
adcb
data16
mov
push
loope
mov
sbb
cli
and
or
xchg
xor
out
fisubl
sahf
ss
mov
sbb
je
lcall
push
mov
push
or
inc
mov
scas
movsb
xor
xor
and
push
stc
bound
int3
mov
pop
bnd
std
jle
cmpsl
push
cmpsb
movsl
lcall
adc
pop
arpl
shll
aaa
lcall
and
leave
cmpsb
fistpll
push
popa
add
or
sub
push
loop
push
xor
rep
sbb
adc
xor
push
fiadds
fcmove
sbb
push
ss
pop
scas
adc
mov
es
dec
lcall
scas
rolb
dec
shll
xchg
cli
mov
jno
jbe
push
aam
nop
push
xor
push
mov
jno
cli
test
out
push
das
inc
in
push
jp
cltd
ficomps
pop
push
or
cmpsb
les
adc
std
lods
mov
push
adc
sbb
sbb
es
pop
xor
scas
dec
in
notb
int3
dec
lcallw
inc
fcmovbe
rcl
xor
popa
cli
sbb
xchg
subb
lods
bound
sbb
push
addb
jle
call
lods
push
out
repnz
jmp
push
mov
sbb
push
sbb
inc
bound
out
or
inc
and
mov
mov
mov
sbb
mov
out
xchg
mov
imul
push
je
ficoms
inc
insb
outsb
lds
add
in
xchg
sub
pop
addr16
sub
jbe
sbb
dec
sti
push
pop
adc
fcomps
popf
fiadds
jb
pushw
adc
sub
or
lds
cmp
fimull
std
adc
adc
push
mov
lods
sub
mov
movsb
rorb
xor
dec
shrl
cltd
and
mov
sbb
xchg
xchg
cli
xchg
adc
or
daa
sahf
jl
cmp
fcoms
mov
sahf
lea
or
scas
sub
xchg
rcr
int
xchg
adc
cmc
push
mov
dec
pop
push
sbb
xchg
or
adc
ljmp
mov
adc
xchg
mov
push
addr16
out
inc
adc
inc
dec
mov
dec
pop
cmpsb
push
scas
dec
daa
es
cs
test
rorb
cmp
sub
push
mov
fcomps
mov
push
daa
lods
arpl
mov
sar
mov
pop
xchg
mov
xor
jg
test
cmp
jbe
std
jp
test
and
xchg
cli
dec
leave
mov
mov
out
fcoms
into
mov
pop
jp
outsb
loopne
scas
add
cltd
jmp
icebp
sub
mov
loopne
mov
std
rclb
ss
dec
push
push
sahf
pop
ljmp
imul
int3
cmp
pop
dec
fimull
or
pop
push
sub
add
pop
lods
outsb
mov
nop
sbb
and
cmp
fisubs
mov
and
push
out
addl
test
and
jbe
or
sbb
sbb
mov
sub
fdiv
mov
pop
sahf
or
xchg
push
mov
ljmp
test
push
pop
imul
push
pop
int
xchg
movsl
push
sub
xlat
pop
jle
jl
push
xchg
xor
out
out
dec
imul
loopne
adcb
sub
or
repnz
jae
sbb
sub
sbb
adc
scas
xor
sub
mov
sbb
rorb
enter
mov
push
ret
scas
sub
loope
sub
mov
add
rcr
mov
cmpsb
lret
fcomps
and
dec
nop
scas
frstor
push
shrl
ror
sbb
jbe
repnz
cmp
cs
insb
daa
jecxz
dec
pop
add
pop
jo
outsb
jle
ljmp
jns
mov
add
mov
movsl
jne
sti
out
cmp
arpl
sbb
pop
xorb
and
xor
das
or
cmp
adc
mov
push
add
push
pop
stos
and
or
mov
adc
sub
mov
jp
mov
cmpsl
or
adcb
pop
rcrb
xor
push
cltd
and
mov
push
je
pop
dec
mov
sahf
push
in
rorb
leave
roll
in
xchg
and
shlb
and
xor
jp
fisttpll
hlt
fsubrs
pop
cmp
or
ja
mov
out
mov
orl
ljmp
push
jnp
outsb
test
jle
sbb
push
insb
cmp
push
xchg
scas
mov
sbb
mov
cmp
testl
add
dec
push
xor
cli
adc
filds
lods
xor
adc
push
jp
les
imul
jno
jae
jae
dec
aam
loop
pop
mov
es
push
cli
jle
js
mov
scas
or
sub
pop
mov
shl
mov
fdivrl
mov
shrb
xor
cmpsl
jns
repnz
push
imul
bound
push
dec
ja
ja
xor
outsb
testl
mov
lods
push
rorl
repz
rorl
xor
stos
lcall
or
adc
out
js
pop
jb
pop
xor
outsb
loopne
lret
fmul
mov
push
pop
nop
pop
scas
mov
cli
scas
loop
and
adc
mov
push
sbb
xchg
xchg
xchg
fistps
int3
lcall
sub
outsb
cmpsb
ja
push
pop
aaa
pop
stos
sti
jge
nop
jb
clc
repz
pop
fwait
out
mov
icebp
loop
cmp
andb
cmp
sub
cmc
or
shrb
push
scas
cmp
pop
jge
sahf
stos
sahf
adc
std
out
testb
negl
fstp
mov
dec
jnp
repnz
scas
pop
push
and
add
and
inc
std
jbe
fstl
es
push
xlat
imul
push
push
or
xor
fistpll
mov
adc
je
ljmp
cmpsb
or
orps
xor
xchg
cwtl
ds
adc
mov
insb
cmp
add
lret
add
sbb
outsl
sbb
cmpsb
sbb
fisubl
ljmp
adc
repz
jbe
das
xchg
mov
pop
jecxz
cwtl
xchg
testb
add
xor
sub
sub
aas
and
add
loop
jb
inc
sbb
push
mov
cli
aaa
and
inc
pop
push
nop
sub
jo
stos
test
loope
adc
xchg
mov
outsb
sub
add
push
idivb
aad
pop
roll
xchg
aam
aam
int
sbb
push
xor
push
in
xchg
outsb
movsb
pop
pop
insb
in
imul
dec
fcomip
push
jbe
mov
cmpb
sub
lret
adc
mov
sub
or
movsl
repnz
push
sub
jae
sbb
pop
loopne
pushf
inc
out
rorb
stc
and
call
add
negb
inc
stc
jp
aas
fwait
in
mov
xor
cltd
push
xchg
bound
adc
fwait
mov
sbb
sub
and
cltd
loop
xchg
fiaddl
add
cmp
sub
cmpb
push
mov
lcall
cmp
adc
pusha
stc
adc
sbb
test
inc
stos
pop
fucomp
mov
xlat
in
int
cwtl
add
cmpsl
data16
xor
stos
xchg
push
adc
lods
jns
add
out
and
loop
test
iret
std
jecxz
push
mov
add
push
xor
out
push
xorb
cli
mov
dec
xchg
test
sbb
mov
fisubrl
cmp
inc
in
iretw
lods
cs
decb
ss
cs
adc
outsb
sahf
hlt
sub
outsb
push
xchg
mov
ss
sub
scas
movsl
inc
aaa
jns
and
mov
sub
adc
in
ret
xchg
pop
add
leave
add
push
bound
adc
or
fstl
mov
int
inc
jae
decb
jne
imul
inc
stc
cld
lahf
pusha
sbb
add
or
sbb
jle
add
in
bound
cmp
outsb
ss
sub
stc
add
js
sub
dec
sub
sbb
mov
sbb
sarl
cli
outsb
jno
loop
jb
rcr
sbb
push
xchg
dec
push
lcall
push
ror
push
cli
push
fadds
adc
maxps
sahf
push
push
fisubrs
jle
dec
popf
loopne
xchg
ss
lea
dec
rcll
and
scas
test
sub
mov
scas
dec
adc
mov
mov
dec
push
out
in
or
pushf
daa
test
pop
iret
sub
jbe
lock
or
in
pushw
xchg
cmp
sub
push
jno
sahf
or
popa
mov
cld
dec
std
cli
bound
jbe
push
xchg
jbe
int3
aam
push
push
push
sub
int
and
lods
jb
in
jp
mov
jmp
rorl
data16
out
sub
cli
sub
ss
out
sub
adc
in
or
mov
jne
xor
jnp
gs
sub
outsb
pop
jp
mov
sbb
push
xchg
int
or
out
vpmadcsswd
or
sub
xchg
push
push
bound
cmc
pop
mov
outsb
push
pop
int3
pop
cmpsl
decb
subb
ret
or
cld
cs
add
in
lods
push
xor
push
repnz
pop
mov
jne
xchg
pop
dec
and
push
push
sub
sbb
adc
add
inc
sti
or
xchg
jecxz
or
xor
es
add
movsl
loopne
in
stc
xchg
fistps
or
ss
outsl
in
and
sbb
cmpb
int3
outsb
sbb
rcr
or
int
xchg
or
scas
and
loop
dec
adc
das
jp
xchg
call
push
repnz
idivb
imul
pop
loope
aam
fcoml
cli
or
adc
lret
pop
aaa
mov
popf
mov
pop
xchg
outsb
cld
leave
filds
jbe
xchg
stos
mov
movsl
sbbl
jecxz
insb
mov
sub
push
mov
mov
ljmp
das
pop
loope
imull
bound
xchg
scas
jle
mov
mov
jb
xchg
cs
adc
sub
shrb
lcall
jle
cli
cmp
not
inc
int
xchg
outsb
es
bound
pushl
pop
dec
push
mov
scas
push
bound
ficomps
pop
insl
insl
js
xor
and
or
xor
jno
loop
dec
nop
cs
pop
push
sub
out
push
push
sub
push
loopne
idivb
pop
cmp
sar
cld
lds
and
xor
mov
inc
push
movsb
push
cs
aas
mov
fidivs
lds
cmp
and
sub
outsb
pop
mov
lcall
push
mov
pop
stos
dec
pusha
mov
jb
or
sub
enter
dec
push
cs
push
sub
das
dec
and
dec
sbb
mov
jb
ficomps
into
ja
xchg
lds
cmp
scas
xchg
xchg
jns
bound
movsl
test
out
loop
pop
cltd
xchg
stos
xchg
push
pop
add
out
pusha
cmp
sub
iret
sub
mov
and
and
push
hlt
adc
mov
xlat
test
push
push
sbb
xor
sbb
mov
pop
in
repz
mov
shrb
xchg
sub
xor
dec
ficomps
psadbw
lea
and
adc
xchg
jnp
sub
stc
sbb
mov
pop
cmp
ss
inc
push
into
jo
or
mov
loope
stos
pop
pop
and
int
mov
mov
arpl
jns
mov
dec
pop
push
jg
push
mov
out
aam
or
jp
bound
out
jle
push
cli
mov
out
in
pop
ret
nop
in
mov
sub
sub
push
push
jg
or
or
jl
mov
xor
mov
sub
mov
add
sbb
jns,pn
ljmp
or
sub
out
sub
push
mov
push
je
mov
popa
lcall
xchg
inc
orl
jp
push
mov
cmpsb
shlb
dec
xchg
rorb
sahf
inc
xor
es
sbb
std
sub
adc
cmp
jp
inc
test
lcall
xchg
pop
sbbl
adc
sbb
dec
outsl
mov
add
iret
cmp
loope
push
adc
insb
dec
outsl
data16
pusha
pop
push
mov
repnz
iret
xchg
push
sbb
fimuls
sahf
cld
test
or
xchg
or
jbe
sahf
sbb
mov
jno
mov
lods
pop
stos
push
jbe
pop
cmc
inc
les
cli
std
cmpsb
rclb
pop
lods
loopne
or
test
inc
in
and
mov
data16
shrb
pop
test
xor
adc
pop
icebp
adc
dec
arpl
lea
and
xchg
frstor
mov
outsl
enter
pop
xor
push
nop
jbe
inc
out
mov
mov
push
imulb
mov
inc
mov
xlat
stos
clc
cs
mov
xchg
ja
into
mov
or
sub
ljmp
mov
sbb
xchg
adc
fcmovbe
data16
xchg
sbb
push
je
outsb
imul
xchg
rorb
push
fs
xchg
pop
clc
mov
repnz
out
stos
xchg
pop
mov
stos
xchg
add
inc
shrl
jle
push
push
sub
pop
sahf
sub
mov
xlat
jp
jae
jb
call
pop
sbb
cmp
scas
outsb
mov
icebp
push
push
push
push
stc
sti
ret
loope
les
push
nop
sub
and
cmp
mov
imul
xchg
and
push
dec
lods
or
addb
sbb
mov
or
add
jle
stos
movb
stos
mov
ds
push
fdivl
aam
jle
stos
fstpt
fwait
push
adc
ror
into
jg
lahf
int
sbb
add
adc
lods
sub
lcall
orb
jns
sahf
and
push
cmp
push
mov
mov
aaa
jns
xor
mov
cwtl
push
cmpsb
push
mov
push
add
jmp
sub
xchg
and
mov
hlt
jp
cld
test
xchg
jb
pop
or
mov
popa
sahf
push
jp
arpl
cli
outsb
ljmp
and
shll
or
sbb
xchg
adc
lods
fimuls
add
xor
in
push
in
cld
jle
pop
adc
rclb
cli
jb,pn
aam
fiaddl
or
pop
lods
divb
sub
es
pop
jbe
xlat
adc
mov
cmpsb
mov
inc
or
popf
in
pop
xor
ss
je
data16
jb
push
imulb
hlt
push
cli
outsb
fidivrs
sub
mov
int3
arpl
xchg
sub
adc
cmp
mov
add
mov
jno
xchg
pop
push
lret
pop
xchg
adc
into
or
xchg
mov
jle
stos
adc
rcll
or
out
pop
xchg
dec
xchg
sub
or
sub
ds
push
fistl
mov
inc
sbb
sar
xor
sbb
xchg
xchg
dec
or
add
add
call
outsb
in
lcall
jns
cli
movsb
jnp
aad
stos
sub
repnz
push
jb
mov
out
dec
mov
mov
xchg
mov
loopne
mov
and
stc
cmp
dec
sub
dec
jle
sub
mov
enter
arpl
not
cmpsb
or
mov
xorl
repz
inc
push
push
jno
or
jbe
add
rcl
enter
sub
lock
pop
pop
push
lret
xchg
xor
repnz
shlb
cmpsb
sarl
push
lea
inc
xor
adc
aam
out
call
and
lcall
cs
push
loopne
call
mov
scas
mov
xor
jnp
mov
jp
ja
dec
dec
mov
xchg
mov
scas
cmp
negb
mov
dec
lods
into
movsl
jle
jle
push
jle
shrb
data16
sub
or
adc
rolb
movsl
xchg
je
mov
sysret
loop
sub
jge
inc
imul
xchg
cli
mov
sti
pop
push
stc
mov
aas
pop
into
adc
mov
mov
jecxz
jle
mov
cld
test
sub
pop
shrl
insb
inc
lock
outsl
stos
mov
mov
sub
sub
add
mov
dec
cmp
adc
or
mov
push
xor
add
nop
std
arpl
dec
fwait
outsb
mov
mov
mov
idivb
push
pop
inc
data16
jno
adc
icebp
mov
mov
xchg
mov
xchg
and
cld
pop
jp
scas
adc
and
mov
dec
outsb
int
pop
cmpsb
and
mov
into
push
adc
loop
adc
xchg
push
or
ljmp
or
adc
lcall
lret
mov
sub
push
mov
cmpsb
add
aas
in
push
cmp
mov
out
adc
xchg
xor
xor
fisubs
stc
cmp
insb
scas
push
or
jecxz
das
dec
push
xchg
push
inc
bound
int3
ss
mov
push
mov
lods
xchg
cmp
cli
jae
dec
gs
ss
pop
clc
out
and
lcall
and
iret
cli
push
fs
jno
sub
iret
loopne
loop
iret
fst
jbe
cmp
in
js
fldcw
xchg
mov
mov
lcall
and
outsb
xchg
es
push
sub
push
rcrb
add
jbe
push
dec
adc
push
insb
and
adc
in
fbstp
push
xchg
cs
and
inc
jbe
pop
popf
fisubs
in
adc
inc
into
or
xor
fdiv
dec
fcmovu
in
inc
insb
repnz
jmp
inc
pop
stc
sahf
je
push
push
push
ficompl
adc
push
sub
mov
push
xor
lcall
dec
pop
xlat
std
push
xor
jmp
and
rorb
inc
jns
sub
sbb
stos
addr16
xchg
int3
popf
push
repnz
out
and
loop
jne
ljmp
imul
xchg
mov
ret
mov
mov
test
popa
cmpsb
mov
pop
out
shrb
mov
adc
push
and
ljmp
ja
scas
fmuls
push
adc
jp
imulb
pop
adcb
sub
xor
stos
adc
incb
test
adc
push
sbbb
ss
rol
pop
out
insb
sub
sub
push
adc
sbb
mov
in
into
xchg
sub
mov
hlt
jp
ljmp
das
push
mov
adc
adc
jle
pop
shlb
shlb
and
lds
inc
call
sbb
xor
xor
into
fbld
mov
mov
in
stos
stc
outsb
push
test
pop
fistps
into
xor
fisubrs
scas
movsb
rcrb
mov
pushf
xchg
pop
add
test
mov
sahf
aas
adc
paddq
ljmp
mov
out
push
and
xchg
pop
mov
adc
loope
jl
dec
cltd
rclb
mov
push
add
push
and
lahf
ds
testb
or
pop
pop
fisubrl
es
mov
push
std
jge
or
mov
or
and
dec
sbb
lcall
or
dec
dec
and
arpl
mov
ss
rcrl
inc
mov
xor
imulb
jp
andb
loop
lcall
sub
add
adc
insb
scas
je
pop
stos
in
push
add
pop
stc
cmpsb
jle
push
incb
ljmp
dec
push
jno
scas
xchg
inc
shll
cmpsb
sub
xchg
adc
sbb
and
mov
push
push
adc
dec
xor
dec
or
push
push
lcall
add
pusha
sub
outsb
pop
dec
xor
rolb
stos
sbb
push
add
out
xor
loop
testl
insb
sub
shl
or
loopne
push
pop
push
andb
xchg
adc
or
arpl
test
mov
push
push
xchg
mov
or
add
ret
fidivs
cmp
es
pop
adc
pop
aad
sub
xchg
xchg
scas
cmp
in
pop
dec
adc
stc
bswap
in
rorb
sub
in
push
cltd
jbe
andb
sbb
sarl
cmc
adc
mov
test
sub
sub
jb
mov
iret
mov
mov
jmp
jle
push
cmp
push
push
mov
in
stc
adc
pop
and
out
add
roll
cwtl
std
out
cmp
adc
and
and
dec
xchg
sbb
mov
push
xorb
jb
adc
aam
clc
push
inc
in
sbb
push
sub
pop
adc
stos
push
test
lods
jge
outsl
aam
into
jp
scas
mov
jp,pn
push
pop
sub
sbb
cmp
nop
aaa
xchg
xor
stos
cs
js
and
xor
stc
ficoml
pusha
or
lahf
mov
aad
inc
imul
cmc
scas
sti
lret
and
sub
mov
push
aaa
xchg
and
mov
and
mov
fmulp
or
out
test
outsb
fidivs
sub
loopne
arpl
stos
jp
mov
jmp
pop
les
cld
push
add
mov
mov
sbb
jno
adc
int3
imul
movsb
or
adc
cwtl
into
lods
xchg
stc
or
data16
je
stos
js
dec
cmp
and
or
mov
or
push
xbegin
fnstsw
jns
jle
xchg
and
xor
enter
in
pop
inc
repnz
sbb
xchg
sub
test
gs
ss
data16
clc
rorb
adc
fwait
push
inc
movsb
imul
mov
dec
sub
mov
jnp
or
imul
pop
push
mov
or
pop
adc
loop
pop
imul
push
push
push
xor
mulb
int
push
outsb
push
xchg
outsb
sub
add
xchg
fidivrs
fisubl
incb
stos
push
in
inc
mov
push
adc
scas
addr16
mov
jle
subl
repnz
pop
lcall
sbb
push
ret
outsl
loopne
imul
push
cli
push
sahf
inc
aam
scas
int
fidivrl
sbb
add
jle
or
sub
push
out
push
and
cmc
imul
test
push
sbb
cmpsb
jns
sub
stos
push
adc
dec
pop
and
out
jp
push
jg
loope
loopne
mov
cmp
push
loop
xor
sub
adc
mov
mov
xor
decb
jle
scas
mov
jle
mov
ljmp
sbb
sub
scas
fwait
popa
cli
mov
fidivl
adc
cmc
xchg
sub
or
push
dec
mov
stos
clc
or
xchg
push
xlat
and
mov
sahf
loop
push
scas
stc
or
imul
imul
andb
les
mov
adc
loope
jno
or
xor
adc
rcll
repnz
mov
loop
out
mov
mov
pop
addl
cmp
lods
jle
es
or
xor
jecxz
xor
fisubl
rorb
push
imul
and
inc
adc
data16
add
cltd
jp
xchg
iret
jge
mov
xor
adc
stc
cs
push
push
rcrl
in
adc
xor
fiadds
lret
pop
pop
repnz
test
pop
sub
repnz
outsb
xchg
mulb
or
jle
cli
push
fs
mov
hlt
lock
mulb
in
sub
mov
aam
pop
scas
sub
jbe
rclb
xor
imul
sub
push
mov
pop
inc
cld
mov
ficompl
sub
lods
or
je
or
jns
push
dec
adc
test
frstor
repnz
push
cmp
adc
ljmp
arpl
mov
jae
push
movsl
pop
adc
popl
jle
mov
rdmsr
mov
loop
data16
scas
mov
dec
fidivs
in
js
sahf
inc
add
or
fmull
inc
adc
adc
adc
jmp
add
pusha
mov
pop
cld
pop
sbb
cmp
add
xchg
hlt
call
in
sbb
adc
outsb
mov
fisubrl
inc
mov
out
mov
mov
dec
out
pop
cmp
pop
divb
push
sbb
xchg
jns
cli
pop
push
mov
xchg
or
int3
push
adcl
data16
ljmp
xlat
out
rolb
pop
sbb
ret
and
xor
and
es
data16
push
scas
outsb
mov
cmp
or
enter
pop
jb
sbb
outsb
mov
xchg
and
sub
push
xchg
mov
mov
stos
mov
xor
daa
sub
sahf
push
cmpsb
or
loop
stos
shl
xchg
push
stos
sbb
js
fsts
and
mov
faddp
scas
inc
mov
mov
sahf
push
mov
je
adc
imul
out
jns
mov
dec
adc
scas
rolb
imul
imul
xorl
cld
stos
mov
aas
xchg
xchg
outsb
pop
cwtl
loop
ss
fimuls
add
push
stc
xor
lret
test
jp
pop
in
jle
into
xor
cli
lret
ficoms
testb
xchg
insb
in
shr
sub
dec
scas
xchg
adc
mov
mov
scas
push
popf
push
push
aam
adc
lea
es
pop
or
mov
pop
mov
stos
push
or
jle
outsb
lcall
push
mov
xor
add
mov
push
sbb
dec
imul
js
jle
inc
dec
pop
pop
push
xchg
sub
sbb
mov
or
xor
xorb
xor
sub
loop
lea
add
pop
rcll
aaa
cs
dec
lock
mov
or
xor
and
inc
xchg
push
xchg
cmp
push
imul
adc
shrb
pop
xor
cmpsb
leave
scas
sahf
mov
loop
and
adcb
subb
jle
jb
jbe
cmpsb
cmpsl
mov
push
out
jmp
je
pop
sbb
data16
inc
xor
iret
and
movsb
les
push
push
pop
dec
xchg
xchg
popa
mov
mov
sub
mov
or
lds
mov
fldt
cmpsb
in
sub
or
and
sub
jne
rclb
mov
xchg
scas
xor
jp
test
push
or
mov
inc
arpl
push
mov
arpl
adc
or
inc
stc
jno
lcall
xchg
mov
jno
push
pop
adc
aad
dec
pop
mov
sub
in
mov
loop
jns
push
push
shll
sub
aam
shl
sbb
or
es
out
xor
lgdtl
nop
push
xchg
cltd
mov
xlat
shll
mov
rorl
pop
add
rcrl
push
mov
pop
or
rcr
cli
and
mov
out
mov
shll
xchg
bound
notb
and
out
and
shll
and
jbe
mov
sbb
xchg
cmp
scas
out
and
jle
repnz
xor
xchg
jbe
or
xchg
loope
aam
add
pop
std
imul
push
dec
pop
adc
push
push
rcrl
rclb
das
mov
dec
push
push
pop
or
inc
add
mov
dec
addr16
push
arpl
jbe
sub
jb
mov
pop
push
test
stos
ss
popa
mov
icebp
push
outsl
jp
test
jp
push
cmp
mov
dec
shrl
xchg
bound
mov
mov
xchg
icebp
jne
test
push
xor
xor
fnstenv
bound
pop
in
out
pop
das
mov
addb
insb
sbb
jnp
popa
mov
iret
mov
outsb
xchg
lods
sbb
lods
cltd
rcrb
sbb
jb
inc
das
stos
lret
mov
or
mov
out
or
sbb
lret
ficoms
fimull
shrl
repnz
mov
or
sub
out
push
cmpsb
inc
push
jb
push
xor
stc
imul
outsb
push
jb
pop
scas
pop
jle
out
xor
sbb
cmpxchg
or
loope
xor
push
or
and
scas
push
push
test
push
push
cwtl
jle
xchg
out
push
loope
push
fsubrl
test
mov
movsl
idiv
movsl
jg
leave
mov
fisubrs
or
les
or
iret
loop
fcmovbe
stos
hlt
imul
test
pop
popf
ss
sahf
add
add
ds
xor
arpl
dec
jp
and
push
pop
ljmp
mov
mov
xor
mov
cmp
sub
push
ja
cmp
xchg
sbb
add
adc
outsl
bound
es
dec
sub
cmp
stos
es
imul
jl
pop
pop
cmpsb
or
movsl
cmp
cs
cmpsb
xor
in
push
dec
or
rcrl
mov
leave
iret
loope
sbb
pop
add
loop,pn
mov
scas
add
adc
imul
ds
jmp
into
mov
jb
imulb
fldl
into
jp
push
cs
arpl
cs
xor
xor
push
lahf
cmp
pop
negb
repnz
arpl
pop
aaa
jbe
loop
dec
sbb
test
repnz
sbb
mov
push
inc
scas
sbb
fcmovnbe
pop
push
adc
sahf
stos
cmp
adc
bound
mov
call
jae
jge
lret
push
outsb
ljmp
add
push
mov
xor
mov
in
push
xor
sub
add
popf
push
nop
or
fisubrs
sar
adc
fdivrl
adc
js
nop
aas
push
lret
and
daa
out
mov
test
lods
jb
mov
inc
sbb
mov
stos
or
sbb
lret
add
push
lds
icebp
push
scas
or
sub
xchg
dec
xchg
in
mov
pushf
aas
add
cmp
in
and
inc
in
mov
and
int
bound
imul
fiaddl
push
push
rcll
js
inc
sahf
jb
jp
subb
scas
push
sbb
sbb
popa
mov
outsl
int
sub
int3
xor
testb
push
jbe
xchg
movsl
pushf
adc
call
or
cmp
scas
in
addl
nop
pop
in
sub
jb
rcrb
pop
clc
outsb
ja
mov
mov
or
daa
cmpsb
cmc
and
out
addr16
add
sub
mov
inc
adc
outsb
lahf
pop
std
test
out
xor
mulb
dec
cmp
push
xor
sbb
test
dec
xchg
or
mov
mov
lock
cmp
sbb
std
fimull
scas
lods
xlat
cltd
fimull
test
cmp
fidivs
cld
mov
nop
push
jmp
cmp
xchg
cli
xor
jle
pop
and
push
dec
sbb
out
push
cli
adc
pop
jp
add
ss
or
aaa
xor
xlat
movsl
jae
in
sub
out
mov
and
aam
add
jle
sbb
sub
sub
inc
fldl
dec
and
repnz
ficoml
and
out
mov
sub
sub
out
xchg
cmp
es
xlat
shrb
ss
jbe
mov
push
sub
push
outsb
add
cmpsb
push
jmp
push
xor
push
mov
jle
scas
stc
loope
mov
cld
inc
xchg
lahf
cltd
or
cmpsb
xor
mov
std
loope
mov
lods
lret
dec
jmp
fidivs
fldcw
push
mov
dec
out
data16
je
add
mov
lret
mov
cs
cmpsb
sbb
sbb
push
repz
xchg
jg
jb
scas
xchg
das
orb
sub
adc
cmpb
jns
sahf
cwtl
test
pop
inc
adc
sub
push
xchg
push
mov
sbb
bound
sub
pusha
sub
in
jbe
push
call
out
movsl
popa
lods
sbb
dec
sub
sahf
xor
jle
and
outsb
mov
rcrl
lret
ss
xchg
pop
packssdw
lcall
ret
xor
pop
dec
jne
arpl
jg
and
jl
out
repnz
fisubrs
inc
in
insb
gs
orb
stos
idiv
jp
cmp
mov
sbb
fnsave
loopne
fs
and
loopne
cmpsl
mov
push
mov
cmpsl
push
fisubrl
scas
xchg
sub
cwtl
push
mov
pop
mov
push
sub
and
nop
outsb
cmp
pop
jbe
xchg
aaa
dec
in
inc
loope
and
and
mov
mov
pop
sub
xchg
loop
sub
sub
adc
and
fsub
ret
shlb
xor
inc
hlt
outsb
push
nop
push
jp
repnz
outsb
push
sub
dec
sbbb
loop
rcl
mov
rclb
adc
stos
lahf
movsb
push
mov
orb
jle
xor
das
test
movsb
cmpsl
adc
cmp
mov
xlat
inc
push
sti
lcall
or
xchg
sbb
sbb
cld
pop
sarb
test
test
jle
test
jle
sub
paddw
jle
cmc
adc
imul
movsl
add
cs
pop
push
push
scas
or
fisubl
pop
push
push
call
push
push
out
mov
cli
mov
adc
pop
push
imul
sahf
lcall
xchg
imul
orb
fnsave
dec
inc
xchg
neg
bound
add
or
jo
mov
xchg
push
fst
adc
out
jno
or
xor
fiadds
adc
sub
xor
cli
jnp
out
and
fcoml
es
dec
and
jo
test
ficoml
lock
lods
mov
stc
pop
sbb
loop
sti
xchg
test
sbb
stc
cli
adc
inc
sbb
or
jl
push
jmp
mov
jnp
and
xor
es
stos
and
adc
sub
xor
cmc
repnz
sarb
loopne
xor
sub
add
mov
adc
in
inc
or
test
or
sub
push
sbb
cmpsb
sbb
xlat
cli
clc
pop
push
fmull
loop
sub
inc
repnz
mov
fxch
pop
lods
xor
ficoml
mov
outsb
mov
adc
std
jbe
cmp
push
cmp
inc
adc
pop
stos
bound
cs
pop
fisubrl
cwtl
sbb
andl
cs
ja
fcoms
pop
sub
dec
lea
into
unpckhps
sub
xchg
repnz
stos
xor
std
ss
push
cs
aaa
cli
sub
push
xor
mov
sub
sarl
stos
xchg
loop
push
sub
stos
dec
bound
dec
adc
dec
jb
mov
push
xchg
push
int
fdivrs
pop
push
pop
fs
ljmp
es
rorl
test
push
xor
sbb
push
out
sub
pop
repnz
and
xor
out
ficoms
je
pop
nop
shll
popf
and
imul
imul
pop
adc
xor
bound
addr16
push
mov
jp,pn
mov
sub
push
js
or
xor
push
push
sub
bswap
loope
pop
ss
rcll
inc
mov
outsb
mov
movsl
fisubl
mov
aas
pop
or
stos
and
mov
push
mov
cwtl
pop
sbb
lret
jno
outsl
stc
es
ja
xchg
repnz
js
inc
mov
and
sti
out
cli
mov
adcl
jle
xchg
mov
xchg
mov
push
lock
push
dec
jecxz
mov
sahf
or
add
daa
insb
imul
mov
push
negb
and
fimuls
add
mov
push
push
es
xor
jmp
or
hlt
push
lods
xchg
iret
push
jbe
int
push
and
clc
push
adc
aam
mov
xor
out
jp
mov
and
push
ljmp
adc
faddp
pop
push
push
jns
fsubrp
jb
lret
out
lods
sbb
sbb
dec
mov
cwtl
jae
into
lret
add
mov
adc
out
push
push
add
mov
add
ljmp
add
out
out
sbb
aad
aam
inc
sbb
outsl
push
adc
ds
loopne
sub
sbb
testb
dec
scas
push
scas
enter
jp
lods
stos
adc
add
jb
sub
aaa
lods
in
int
ljmp
test
dec
les
adc
sbb
mov
and
sub
aad
jae
ja
mov
repnz
jnp
loope
or
mov
cli
mov
out
repnz
pop
push
xchg
inc
dec
pop
adc
stos
and
sbb
cmp
ss
mov
xchg
scas
stos
cli
xchg
mov
lods
pop
js
shrb
subb
adc
sub
or
inc
inc
lock
inc
bound
or
pfrcpit2
xor
cmpsb
mov
inc
data16
fidivl
xor
lea
and
sarb
loop
out
adc
aas
mull
pop
pop
jp
inc
roll
mov
jbe
repz
aad
sahf
or
mov
jle
mov
and
loop
clc
fidivs
sub
fwait
cmp
mov
pop
pushf
ficompl
nop
sub
jbe
mov
in
lcall
mov
sbb
cmp
in
hlt
push
popa
mov
push
dec
loop
xchg
or
sbb
xlat
pop
pop
rcll
jae
shlb
je
push
stos
xor
or
push
insb
or
mov
or
or
ljmp
pop
or
sub
adc
lahf
enter
outsl
sub
mov
dec
es
push
out
lret
adc
xchg
or
mov
and
or
sub
pushf
xchg
cmp
pop
fstpl
xor
je
pop
or
or
fimuls
outsb
imul
mov
shrl
stos
jbe
imul
sub
int
lcall
int
sub
jp
outsb
mov
popa
mov
jle
push
mov
pop
mov
fisubrl
lcall
imul
and
filds
push
arpl
and
lods
push
pop
imul
pop
in
cli
or
das
xchg
popa
stos
or
out
jno
jle
mov
sub
gs
jle
in
xchg
push
or
adc
mov
das
sbb
fmulp
add
jp
adc
add
jmp
addr16
jo
fs
test
cs
mov
inc
fnsave
nop
dec
ret
pop
xor
lcall
xchg
int
sbb
test
lds
pop
data16
and
xor
or
test
jae
imul
mov
jno
push
fwait
or
push
arpl
shrl
imul
adc
pusha
and
int
call
adc
cli
loop
imul
pop
push
sahf
sbb
xchg
out
ja
jle
test
cli
jb
pop
shrb
jbe
push
in
cmpsb
rclb
mov
xchg
adc
push
sub
sbb
jbe,pn
xlat
xchg
pop
mov
stos
xor
sub
cmp
pop
call
mov
cmp
cli
data16
pop
dec
push
ret
idivb
lahf
pop
cli
mov
ljmp
es
push
push
xchg
sbb
pop
push
pop
pop
jmp
shlb
jb
lods
fisubs
pop
ss
es
pop
stos
add
out
or
adc
and
jns
sahf
ljmp
xchg
or
mov
jecxz
insb
and
stc
inc
adc
mov
leave
xchg
loopne
adc
scas
pop
test
dec
imul
outsb
outsb
add
scas
ljmp
and
xchg
popa
adc
ficompl
mov
cmp
mov
xorb
imul
push
test
mov
sahf
icebp
rolb
insb
int
jle
jo
shlb
fdivl
jo
out
and
repnz
sub
add
dec
lcall
pop
leave
clc
sahf
mov
mov
sbb
cli
adc
jbe
or
push
xor
mov
lods
out
and
xchg
mov
jbe
bound
xchg
mov
insb
and
out
dec
jecxz
jb
jle
outsb
adc
data16
sbb
bound
and
and
pop
fildll
push
js
cli
or
adc
data16
xor
sbb
pop
mov
cs
movsl
shlb
sbb
bound
add
loop
xchg
adc
cltd
push
and
jb
outsb
fidivrs
mov
ds
dec
mov
sbb
lret
pop
push
mov
cmpsl
pusha
mov
fsubl
inc
ficoms
decb
adc
dec
sbbl
adc
push
adc
scas
push
and
cli
sub
mov
sub
out
push
add
mov
stos
aas
loop
mov
mov
xchg
xchg
adc
or
dec
pop
subb
outsb
mov
and
sbb
sbb
roll
jno
ss
imul
repnz
sub
xchg
gs
out
push
loope
push
int3
xor
inc
scas
xor
xchg
adc
sahf
fnstenv
ljmp
test
xchg
push
and
mov
lds
pushf
or
add
aam
sar
sub
push
std
or
inc
outsb
jb
aaa
cltd
lahf
popa
xchg
xchg
xor
pop
mov
mov
cs
loop
jns
push
xor
lds
inc
sub
push
inc
jb
scas
xorb
xchg
jno
sub
fstl
daa
or
push
in
or
and
xorb
xor
mov
lret
xchg
sub
sar
push
les
dec
jbe
and
loopne
lds
and
cmp
pop
xchg
xchg
ss
sahf
lret
jns
or
mov
sbb
cmpsb
jle
add
push
les
lahf
lods
std
dec
add
data16
jbe
dec
lds
popf
mov
leave
sub
scas
movsl
mov
fisubs
xchg
push
imul
rclb
and
jnp
adc
ss
repnz
sub
inc
lods
out
push
push
dec
sbb
jmp
mov
call
mov
std
pop
in
jmp
fistpll
and
mov
loop
add
movsl
push
or
push
ljmp
out
add
stos
sahf
movsl
mov
or
push
adc
iret
ja
push
and
scas
cmpsb
mov
sbb
loope
rcl
out
pop
popl
imul
into
jp
or
mov
lcall
sbb
push
pop
add
mov
push
mov
mov
aad
and
imul
test
outsb
mov
lods
mov
outsb
sub
idivb
jb
cmpsl
inc
imul
pop
loope
and
mov
fmul
cmpsl
gs
pop
mov
push
nop
xchg
mov
push
cmc
mov
dec
dec
mov
push
mov
outsb
push
das
xchg
sahf
dec
out
mov
pop
or
sbb
or
sub
jl
decb
orb
mov
int3
jmp
divb
or
xchg
mov
dec
cmp
or
test
sub
and
scas
lcall
lret
pop
movsl
mov
popf
pop
bound
sub
add
scas
jg
out
xor
stc
pop
add
test
mov
and
and
sub
sti
cltd
sub
decb
lds
test
pop
cmp
ficoml
mov
jp
or
out
adc
cli
push
rorb
add
jae
push
pop
ficompl
mov
mov
repnz
jl
jo
pushf
cli
push
adc
cmp
jae
jns
pop
xor
imul
xor
dec
jne
aad
mov
scas
sbb
imul
cli
jp
mov
pop
pop
jae
push
aaa
xchg
adc
jbe
and
jge
fisubrl
push
cmpsb
addb
mov
aaa
pop
dec
in
js
xlat
scas
scas
scas
xor
outsb
or
or
insb
callw
xlat
fisubrs
mov
rcrb
pop
roll
ja
cmc
xor
into
pop
sahf
add
dec
jle
and
push
stc
sti
sub
int
xlat
dec
adc
mov
scas
sbb
or
xchg
inc
loop
xor
add
add
outsb
outsb
jae
sbb
lods
xchg
das
jns
xchg
ljmp
push
data16
out
sub
or
jle
and
or
xor
scas
out
jge
cmpsb
fidivs
scas
fcoms
mov
xor
fwait
test
jle
sub
jle
inc
es
jle
mov
sub
push
rclb
xchg
adc
push
mov
pop
sbb
sahf
sbb
scas
sbb
adc
and
outsb
mov
cmpsb
jno
and
xchg
dec
push
adc
sbb
psrlq
inc
rol
jp
mov
data16
add
mov
es
inc
inc
mov
ret
push
lods
adc
jno
fisubs
into
mov
xchg
lret
inc
fbld
fstpl
push
bound
xor
and
pop
data16
es
sbb
pop
lods
rcl
sub
and
jnp
lahf
scas
fcmove
test
and
push
jge
xchg
mov
cmpsb
sbb
stos
idivl
hlt
jb
pusha
stos
mov
adc
lret
in
mov
leave
adc
xchg
int
bound
push
sbb
xchg
sub
dec
stos
and
or
dec
cmp
mov
xor
sbb
jge
jp
mov
das
in
roll
push
stos
sbb
add
jmp
xchg
in
jbe
repz
es
sbb
stos
cwtl
dec
test
adc
push
scas
lret
cld
inc
or
fisubrl
jnp
enter
pop
lcall
jl
loope
cli
enter
mov
pop
sbb
ja
ficomps
repnz
or
movsb
mov
ljmp
cmpsb
or
jecxz
ljmp
cmp
enter
xchg
sub
pop
adc
cmpsb
sub
dec
sbb
mov
add
arpl
xor
out
cmovns
mov
pop
pop
push
mov
int
sub
adc
push
mov
mov
xor
cmp
dec
nop
cmpsl
pminub
outsb
stos
inc
pop
add
bound
xchg
cli
jle
mov
xor
jb
pop
sub
stos
or
xchg
sub
sbb
int
movsl
sbb
pop
or
dec
pop
pop
xorb
push
pop
clc
mov
push
inc
push
stos
push
jmp
bound
mov
push
mov
push
sbb
adc
adc
mov
pop
div
adc
jl
xchg
add
mov
mov
ss
push
stos
into
mov
shrb
pop
rorl
hlt
mov
rol
xor
aas
push
sbb
xchg
cmp
lds
push
add
pop
decb
xchg
mov
gs
sbb
and
xchg
sub
xchg
imul
fisubrs
push
dec
xchg
and
sub
outsl
outsb
pop
fdivs
pop
movsb
bound
push
fcoms
xor
and
out
mov
xchg
push
add
stos
ljmp
sbb
and
xlat
sbb
test
or
adc
jle
add
scas
and
xchg
cs
jns
push
call
adc
fisubl
jnp
test
pusha
cs
iret
in
sub
sbb
imul
or
sbb
sub
pop
loopne
insb
dec
hlt
push
dec
xor
adc
test
push
pusha
lcall
jp
push
shll
xchg
arpl
jbe
jno
sub
jo,pn
or
jl
les
dec
jmp
xchg
xchg
out
or
popa
ljmp
loop
das
adc
push
movsl
call
xchg
push
xchg
jo
jno
pop
push
pop
daa
mov
std
sbb
xor
pop
inc
push
and
jle
push
mov
or
jno
scas
in
scas
and
push
movlps
sbb
inc
sbb
fs
jecxz
cltd
dec
dec
jns
jle
inc
loop
ficomps
or
lret
mov
mov
fcmovu
data16
push
jb
push
fstpt
aas
scas
fwait
cmp
mov
shl
stos
out
mov
jmp
lahf
or
bound
ss
push
pop
xchg
scas
stos
sub
pop
mov
pop
sub
add
call
push
inc
dec
test
inc
adc
dec
loop
out
push
test
shll
cltd
movsl
mov
mov
adc
mov
inc
add
loopne
dec
adc
push
jle
scas
in
ficoms
jle
or
jbe
xor
pop
ret
mov
and
mov
lds
ficoml
dec
pop
lret
push
push
cli
push
push
stc
sub
test
jb
cli
xor
repnz
movsl
out
sbb
es
ja
out
adc
cli
movb
loop
fsubrs
or
adc
bound
loope
add
aaa
mov
add
adc
sub
je
adc
pop
and
and
lds
jb
scas
push
xor
jbe
bound
jnp
imulb
add
dec
push
jp
outsb
mov
daa
xlat
or
inc
mov
in
cbtw
mov
push
nop
sub
pop
rorb
jge
add
adc
imul
sahf
sbb
leave
gs
into
nopl
push
xor
cld
leave
insb
sbb
xor
xchg
out
dec
pop
das
sahf
add
idivb
jp
inc
stos
aaa
test
imulb
inc
jnp
push
or
adc
or
jmp
jno
dec
adcb
push
data16
dec
dec
mov
or
jbe
imul
es
mov
xchg
loop
push
lea
sbb
or
test
push
stos
test
dec
imulb
sarb
mov
or
pop
cmp
arpl
jno
ja
and
xor
das
sahf
lret
mov
inc
andb
cmp
push
in
jle
jge
pop
test
jecxz
push
cltd
jb
lods
fcmovbe
lods
xlat
mull
sub
fisubrs
out
les
jno
pop
lahf
insb
mov
or
sub
xor
adc
call
stos
idivb
sub
mov
pop
pop
fisubs
pop
frstor
adc
or
out
mov
sti
inc
movsb
push
test
jle
int
ss
push
xlat
mov
xor
shrl
in
pop
adc
fcmove
and
and
lahf
push
scas
imul
jns
arpl
fs
push
sub
jmp
addb
movsl
je
pop
stos
push
popf
outsl
dec
jle
outsb
xchg
jp
push
pusha
cmpsb
xor
cs
mov
xor
push
test
pop
es
jg
cli
xor
xor
punpckhbw
or
loope
push
pop
stc
adc
xchg
sub
imul
xchg
addr16
push
inc
in
dec
cmpsl
sbb
call
shll
xchg
sahf
push
negl
loopne
ja
shl
sub
xor
jb
leave
xor
data16
pop
jns
lret
notb
ret
push
cli
dec
or
mov
jnp
scas
add
and
dec
arpl
jp
hlt
adc
jns
or
lret
sub
xor
aam
mov
xor
mov
xor
fstpl
sub
scas
jmp
je
jbe
outsb
ficoms
or
lock
bound
and
test
adc
pop
fidivrl
pop
mov
cwtl
push
les
pop
xor
inc
sub
pop
popf
xchg
or
xchg
pop
outsb
stc
pop
aaa
adc
mov
nop
lcall
push
scas
jb
rcr
testb
cltd
out
popl
push
jp
cltd
adc
movsl
andl
push
stc
repnz
scas
push
lcall
jb
fwait
test
in
shlb
movb
ljmp
insl
leave
mov
xor
push
mov
ret
fdivl
mov
fisttpl
or
push
sti
sub
leave
scas
mov
or
out
in
sti
lret
mov
inc
fcomip
loope
jp
sahf
adc
rcrl
add
cmpsb
out
lahf
into
and
push
orb
imul
data16
push
das
xchg
lods
inc
out
xchg
xchg
and
imul
jle
cltd
lcall
shll
iret
cmc
push
stc
out
jge
xor
or
mov
xchg
sbb
mov
dec
push
xchg
shr
loop
stc
adc
push
movd
jns
jns
mov
jnp
add
push
repnz
or
mov
sub
test
jne
fmull
sbb
jbe
fdivrs
inc
cli
pop
push
loop
ss
sbb
sahf
imul
xor
sbb
push
add
jb
ljmp
push
pop
sbb
incl
mov
jno
sbb
arpl
int3
jbe
pop
repnz
push
push
ja
adc
in
inc
out
fists
xor
inc
scas
jmp
ljmp
sahf
sub
adc
out
or
push
repz
and
addr16
imul
inc
sahf
jle
lods
xchg
mov
jae
pop
sub
pop
rol
xlat
pop
insl
pop
ljmp
aam
sbb
xchg
push
daa
push
add
into
add
imul
pop
adc
push
dec
icebp
ret
jno
mov
in
bound
add
out
fisubs
movsl
jbe
ss
adc
push
xchg
mov
push
dec
push
repnz
pop
std
xor
xchg
popa
xchg
or
negb
push
mov
das
jmp
adc
inc
push
xorb
outsb
xchg
pop
into
ja
into
cmpsb
out
sub
xchg
std
std
xor
jbe
fdivs
pop
cmp
push
sub
stos
mov
inc
xor
ret
xor
xor
stos
sbb
mov
jle
jb
repz
arpl
ss
push
or
push
xchg
cs
pop
jns
sbb
sub
xchg
sbb
mov
scas
jge
popf
inc
loop
xchg
testl
add
aad
xchg
sbb
imulb
pushf
mov
arpl
imul
push
mov
test
sbbl
ret
jbe
sahf
testl
mov
pop
gs
push
mov
das
stos
scas
xchg
scas
push
or
fists
lods
es
jbe
out
les
movsb
mov
ret
scas
add
xchg
xchg
inc
xor
mov
test
ss
mov
sbb
mov
mov
inc
push
outsb
ss
push
ss
test
out
hlt
mov
fistpll
test
ss
mov
js
sub
inc
fstpt
sub
rorb
loopne
ss
mov
sbb
mov
mov
inc
push
outsb
ss
push
ss
fnstenv
sbb
mov
fistpll
test
fs
lock
pmulhw
stc
push
loope
notb
in
add
add
stos
push
loope
cmpsb
mov
jle
mov
ljmp
jmp
pop
outsb
push
inc
push
ljmp
data16
mov
loopne
scas
dec
add
sbb
loop
out
jp
push
push
xchg
cmpsb
mov
cli
xchg
shlb
xor
lret
loop
repnz
into
xchg
stos
sbb
fimuls
xlat
imulb
push
inc
out
push
inc
aam
and
push
mov
jl
jmp
sbb
mov
adc
lds
cwtl
push
loop
fldt
mov
inc
xchg
movsl
popa
stc
bound
xchg
dec
cmp
out
nop
lahf
xor
dec
sub
push
adc
repnz
arpl
jb
ret
icebp
or
jmp
jb
add
push
or
mov
ret
push
in
sbb
jb
or
sub
clc
cltd
rclb
repnz
adc
scas
jge
push
outsb
test
sbb
push
out
sub
or
inc
addr16
mov
popa
adc
mov
mov
fisttpl
xor
xchg
iret
int3
push
out
xchg
pop
fsubrs
lcall
pop
mov
mov
and
pop
xchg
out
loopne
fnsave
js
stc
loopne
push
ja
push
loopne
inc
sahf
and
and
pop
ljmp
stos
lods
inc
push
notb
xchg
adc
sbb
xchg
gs
lods
and
aaa
nop
in
jp
shl
mov
sub
popf
and
mov
mov
mov
test
repnz
cmpsb
out
xchg
iret
sbb
imul
icebp
repnz
sarl
xchg
push
cmp
or
pop
pop
or
idivb
pop
mov
cmp
jb
fists
lret
into
mov
adc
or
mov
pop
and
push
in
inc
mov
subb
jbe
int
xlat
jne
loopne
hlt
rcl
sbb
mov
jo
clc
loopne
mov
adc
xor
sbb
fbstp
or
mov
movb
movsb
loopne
mov
dec
cmp
jle
sbb
and
out
cld
mov
sbb
out
pop
loopne
xor
jne
jl
test
sub
out
cmpsb
mov
outsb
or
adc
fists
lahf
shrl
adc
jno
mov
mov
mov
mov
ss
push
sbb
sbb
loop
pop
jo
mov
push
jbe
testb
cs
sbb
cwtl
xchg
sub
cmp
pop
sbb
add
cs
sbb
bound
int
cli
xchg
out
ficoml
nop
and
inc
movsl
xor
push
lods
cs
fmulp
push
repnz
sub
sub
xor
shl
cmp
popa
movsb
dec
fldt
lods
imul
movsb
jnp
dec
subb
sub
sbb
or
testb
shr
aaa
mov
or
lock
rcl
sbb
inc
aad
lock
add
sbb
into
jno
xor
pop
sbb
mov
int3
push
sbb
xchg
repnz
sbb
or
out
int3
test
inc
ja
cmp
aad
es
cmp
clc
repz
in
out
adc
push
add
and
icebp
inc
loope
add
pop
adc
enter
testb
and
pop
jo
mov
and
sbb
xor
adcl
mov
push
imul
push
imul
push
pop
push
out
push
loop
fisubl
into
pop
rcl
rcrb
mov
insl
inc
rcll
adc
sbb
and
sub
xlat
pop
daa
jmp
popf
cmpsb
bound
sbb
jmp
or
sub
sbb
inc
js
sbb
jo
adc
jns
sub
pop
xor
test
or
xor
sbb
push
and
sub
xor
push
adc
push
sbb
test
arpl
sub
xchg
or
adc
sbb
and
xor
mov
adc
sbb
lahf
or
sub
sub
mov
adc
rcrl
and
pop
lock
popf
pop
xor
and
push
cs
push
sbb
std
sub
mov
push
cmpsl
inc
mov
loope
stos
push
lea
mov
jbe
pop
jbe
push
jbe
dec
push
cs
jl
mov
cmc
xor
jbe
lahf
in
xchg
or
lock
jbe
bound
cmpsl
out
push
add
inc
mov
out
jp
xor
push
jp
xor
jbe
divb
out
jbe
out
stc
fidivs
jbe
into
jbe
jbe
out
push
jbe
cmpsb
icebp
adc
bound
adc
jle
and
mov
lods
sbb
add
stc
test
adc
mov
adc
loop
jb
inc
in
sahf
mov
and
or
loopne
stos
shl
mov
pusha
je
pop
in
mov
daa
je
pop
in
mov
push
ljmp
fisubrl
cmp
or
or
cmpsl
push
push
sub
and
jo
outsb
adc
aas
adc
enter
push
push
js
jb
lcall
inc
xchg
popf
add
js
adc
and
cmpsl
push
fcoms
mov
pop
jnp
outsb
mov
xor
lods
ret
sub
shrl
stc
mov
loop
loopne
jl
in
lret
sbb
sbb
sub
std
js
ja
xor
cwtl
jl
or
pop
mov
adc
or
or
xor
jns
adc
push
adc
adc
adc
cmpsb
in
cmp
mov
repnz
xor
lret
pop
stc
push
ret
sub
test
pop
je
aad
and
adc
and
and
hlt
jns
and
xchg
add
jbe
mov
sub
lret
xchg
ffreep
push
daa
fisubs
xchg
cli
xor
jns
fbstp
fwait
out
outsb
mov
mov
jl
je
stos
stos
sub
iret
push
arpl
jns
and
jle
push
add
mov
mov
rclb
movsl
loop
xchg
aas
mov
xchg
fistpll
jne
jb
xor
sbb
in
sbb
cmpsb
push
stos
test
adc
ja
xor
adc
bound
pop
push
jbe
add
push
jp
jnp
xlat
adc
jle
add
xchg
test
popf
out
popf
in
and
push
or
jl
fistpll
sbb
add
fmuls
test
sbb
add
ja
mov
jne
out
or
push
dec
and
or
push
cmpsb
sarl
loop
sub
mov
xchg
ljmp
xor
add
test
sub
mov
xchg
mov
sub
sub
mov
or
ds
std
xor
lods
xchg
pop
rorb
out
stos
inc
jp
jo
and
std
push
aaa
mov
jns
xor
or
mov
mov
xor
sbb
jmp
stos
lcall
lahf
sbb
int3
fcmovnbe
inc
loop
mov
cmpsl
sbb
xor
mov
push
dec
cmp
lcall
outsb
stos
mov
cmc
sbb
xchg
mov
icebp
push
or
setbe
xlat
sub
add
adc
xchg
lea
rcrb
ret
out
xor
jmp
sub
jne
cli
push
out
lret
cmp
xchg
scas
jb
push
nop
fbstp
into
push
cmp
jecxz
mov
testl
mov
dec
mov
sbb
jbe
mov
adc
popf
jnp
mov
xchg
xchg
and
in
jmp
cmp
xchg
pop
clc
daa
mov
enter
lea
jb
xor
cmpsl
fisttpll
sbb
adc
sbb
xor
cmp
mull
xor
inc
and
scas
lock
lock
fisttps
lea
and
into
hlt
push
ja
popf
push
cmc
mov
mov
addr16
push
pop
popa
push
test
mov
xchg
sti
xchg
mov
clc
aaa
mov
rorb
iret
mov
pop
xchg
mov
aad
xor
sub
inc
sub
loop
mov
out
dec
outsb
mov
in
dec
in
xchg
sub
outsb
dec
cltd
out
add
rclb
loopne
adc
aad
bts
mov
lahf
and
nop
sub
mov
sbb
dec
mov
dec
mov
adc
jae
cmp
fwait
loop
shl
cmp
sbb
clc
arpl
lret
cwtl
out
out
test
mov
rcll
push
leave
frstor
mov
bound
out
ds
stc
notl
adc
mulb
daa
leave
inc
movsl
push
and
cmc
push
pop
or
sbb
push
jb
scas
jecxz
pop
sahf
inc
ret
shlb
aas
outsb
addr16
fisubrs
movsl
lcall
iret
jb
gs
cmpsb
jle
inc
out
test
xchg
das
push
cmp
ljmp
addb
ljmp
scas
fadd
xlat
js
out
in
fbstp
adc
xlat
subl
dec
add
stc
out
lahf
jbe
ljmp
mov
sbb
loopne
loop
pop
mov
lea
scas
in
and
insl
enter
xchg
pop
int
jnp
loope
sbb
fs
decb
testl
xor
mov
jle
nop
push
sub
adc
xor
inc
jae
xor
xor
push
push
mov
fldl
xchg
movsb
mov
data16
xchg
sbb
ljmp
jg
xchg
pop
sbb
sti
sub
xchg
xchg
dec
mov
xor
adc
pop
jns
or
dec
aad
decl
mov
pop
jbe
xchg
aaa
push
iret
sbb
xor
push
cmpsl
repnz
call
into
sbb
repnz
cmc
jo
cwtl
push
lea
push
push
mov
jbe
sbb
outsb
fwait
dec
dec
insb
xchg
jb
js
loope
sbb
fldt
sbb
mov
pop
inc
mov
xchg
push
rorb
mov
xchg
mov
sbb
mov
sahf
imulb
popf
push
xor
mov
mov
pop
out
popl
jbe
loop
sbb
shrb
out
imul
add
add
xor
scas
fs
sbb
out
sbb
dec
cmp
int
or
push
ds
or
cmpsl
mov
std
sahf
adc
push
dec
js
mov
cmpb
push
cwtl
add
xchg
sub
sub
in
xor
shll
outsb
jb
and
dec
cli
mov
push
pop
sbb
mov
xchg
int
cmp
out
out
xchg
push
pushf
call
push
xor
mov
stos
pop
arpl
jg
xchg
sbbb
cwtl
cmp
lahf
or
mov
sbb
cmp
pop
add
xor
pop
mov
fnstenv
adc
cmp
adc
icebp
sbb
mov
jo
loopne
movsb
fnstsw
addr16
pop
frstor
xor
popa
push
lahf
int
push
cmc
outsb
mov
push
xchg
jae
jmp
popf
es
and
cmp
inc
call
jp
fmuls
dec
mov
xchg
daa
loopne
sarl
jns
insb
loopne
xchg
xor
or
xchg
test
push
mov
daa
call
sahf
notl
ficoms
stos
test
sub
push
xor
mov
loopne
lock
adc
xor
pop
movsb
jbe
lods
insl
sub
sub
xchg
adc
leave
add
xor
add
popf
cmpsl
leave
or
xor
mov
push
cmpsb
std
inc
std
lahf
in
or
sbb
adcl
or
sbb
adc
or
sbb
addr16
or
rcrl
pop
pop
mov
lahf
inc
sbb
sub
pop
mov
pop
test
inc
insl
and
xchg
jne
and
daa
pop
jno
sub
mov
lea
xchg
fsubs
js
sbb
jnp
sahf
arpl
out
cli
adc
sub
imul
jp
aaa
xlat
mov
inc
xor
pop
xchg
pop
cmc
ja
pushf
push
shlb
mov
lods
xor
mov
mov
xor
lods
stos
mov
sbb
lret
ss
mov
lahf
test
mov
shlb
xor
idivb
mov
sub
cmpsl
mov
xchg
mov
nop
push
ror
mov
mov
fwait
push
ja
push
jns
cs
or
xchg
lds
dec
mov
xor
xor
insl
and
pop
lret
enter
dec
out
ss
loop
out
lret
xlat
pop
popl
rolb
fs
cli
cmp
nop
and
mov
fsubrs
lods
xor
sub
andps
xorl
xor
pop
pop
adc
cli
data16
pop
adc
je
cmc
jns
mov
or
push
icebp
adc
xor
add
push
cmpsl
mov
cli
stc
dec
in
add
aaa
sub
xor
es
aaa
and
pop
mov
mov
das
xor
sub
testl
ljmp
test
iret
and
xor
mov
pop
int
ja
rclb
das
xchg
adc
es
daa
je
inc
shlb
filds
daa
lret
fisubs
cs
push
movsl
xor
movsl
test
dec
loopne
mov
js
fmull
add
add
movsl
ret
xlat
xlat
cmpsl
jge
mov
lahf
jge
adc
sub
jp
lock
in
push
andb
xchg
push
pop
ljmp
out
mov
lcall
and
stos
mov
call
pop
out
cmpsl
shrb
push
adc
lret
and
inc
negl
or
inc
inc
out
mov
pop
cli
xchg
jge
inc
adc
sbb
out
jo
bound
cmp
add
and
out
mov
cmp
or
sub
push
hlt
popa
std
adc
shr
cmpsb
inc
sbbl
das
xchg
add
add
jno
jne
xchg
inc
scas
popa
cmpsl
cmp
or
je
mov
dec
pusha
xchg
xchg
jl
aas
adc
dec
dec
cmpsl
les
and
sbb
inc
or
cmp
lret
daa
xor
in
lea
fcmovnbe
inc
pop
xor
dec
fisubs
jl
mov
call
leave
push
data16
xor
push
add
xchg
jecxz
add
jne
popa
hlt
stos
xor
sub
pushf
mov
mov
and
dec
in
pop
add
inc
cmp
loopne
aas
or
mov
hlt
jbe,pt
push
inc
arpl
movsb
cmpsl
mov
mov
frstor
xchg
aas
cmp
add
shll
lret
loop
xchg
lock
push
push
mov
arpl
xorl
arpl
inc
in
movb
std
sbb
icebp
xchg
loop
shll
inc
iret
lods
xchg
mov
xor
and
out
dec
jecxz
repnz
aam
push
scas
xor
enter
xchg
mov
leave
fdivrp
push
popf
mov
xor
push
aas
scas
sbb
mov
inc
fisttps
mov
sti
xor
sub
stos
int3
out
push
aas
mov
mov
pop
fwait
mov
inc
fs
out
and
inc
addr16
ret
jo
mov
cmpsl
adc
repnz
movsl
mov
jp
andb
inc
outsb
cmp
pop
xchg
mov
cmpsl
mov
sub
add
add
gs
push
aas
loopne
pop
xor
in
insl
loope
out
sub
cmpb
add
jecxz
sub
stos
scas
xchg
mov
ds
scas
adc
adc
jns
sub
ss
cmp
xchg
aad
or
bound
test
mov
popa
push
xchg
cmpsl
sub
test
call
push
cld
stc
dec
mov
icebp
xchg
push
xchg
and
rclb
shl
in
lret
cmp
inc
loopne
sbb
inc
out
test
cli
xor
andb
mov
decl
and
sbb
js
addr16
dec
popa
and
shll
orb
inc
js
xchg
ficomps
orl
and
sub
and
xchg
loop
adc
jp
shlb
dec
push
mov
or
inc
das
fsubs
or
in
cmp
or
lret
sub
lcall
sub
jno
pop
pop
sbb
mov
jle
repnz
jns
in
insl
xchg
sbb
xchg
jne
test
adc
out
or
pop
div
enter
test
enter
pop
rorl
mov
popf
and
xchg
sbb
fimuls
pop
pop
arpl
push
add
adc
adc
push
es
lahf
add
add
dec
mov
mov
cmpsl
inc
inc
pop
das
jp
imulb
lea
jnp
cmp
xchg
push
dec
popa
push
inc
inc
lahf
cmp
and
cmpsb
cmp
shll
adc
popf
es
pop
sbb
xchg
cmp
adc
sbb
mov
push
lcall
and
mov
sahf
jne
xchg
mov
outsb
sbb
xchg
mov
icebp
xchg
iret
fs
cmp
notb
into
xchg
mov
adc
sbb
test
and
cmp
cmc
addl
ljmp
jp
in
rcl
in
add
xchg
sub
fcom
loope
adc
adc
stc
sub
push
cmp
jo
xchg
adc
mov
es
fistpll
in
int
xor
outsl
mov
and
jge
adc
xchg
cmpsl
cmp
lret
pop
out
std
std
loopne
push
jae
sub
stos
lret
push
icebp
mov
jp
fs
in
lods
shll
add
sub
out
dec
out
adcb
pusha
lock
add
adc
ja
mov
sub
stos
mov
xchg
mov
sbb
es
insl
jl
sahf
mov
ljmp
repz
or
dec
dec
fmull
cmp
sub
add
mov
icebp
xchg
psubw
push
sbb
rcrb
jmp
mov
adc
mov
and
insb
pop
rorb
and
es
xor
jl
cmp
cmc
jne
jle
jb
jae
int3
mov
jmp
pushf
movl
lea
call
call
cmp
stc
cmp
pushf
add
pushf
call
pushf
lea
jne
pusha
movb
movb
pushl
stos
pushl
pushf
lea
jmp
imul
gs
xor
cs
insb
add
and
mov
out
sub
data16
jecxz
sbb
shrb
or
ja
lea
add
adc
sbb
mov
jns
mov
sub
jl
pop
xor
mov
pop
cmpsl
dec
lock
int
add
inc
fidivl
cwtl
xorb
imul
cmp
outsl
sbb
notb
lret
mov
sub
mov
js
pop
inc
cmc
int3
ljmp
jbe
jns
ja
outsb
in
imul
mov
sub
aaa
popl
jmp
mov
add
clc
mov
pusha
movb
pushf
test
pushf
lea
je
stc
jns
add
clc
cmp
pushf
call
pop
lea
loop
sbb
fnstcw
mov
int3
dec
cmp
insl
pushf
aas
mov
cmp
xchg
fstps
ror
inc
testb
pop
ljmp
out
dec
cmc
sbbl
out
mov
mov
xchg
mov
and
test
mov
push
cmpsb
add
jl
mov
jle
shlb
xor
jo
jecxz
pop
fistps
push
sbb
jg
sub
push
mov
andl
jbe
dec
out
xchg
sbb
mov
dec
pop
mov
add
push
repz
repz
leave
dec
in
mov
scas
repz
mov
and
lret
xor
push
rorl
dec
int3
dec
int
enter
js
mov
mov
movb
pusha
lea
ja
call
call
mov
stc
mov
cmc
cmpb
pusha
push
lea
jne
lea
sub
inc
shld
dec
mov
jmp
inc
adc
mov
ret
data16
mov
clc
lcall
movsl
mov
xor
xor
pop
push
adc
not
push
es
pop
cmc
and
sub
jle
mov
cmc
mov
mov
sub
popf
lret
aas
mov
and
xchg
mov
push
xchg
ss
imul
inc
filds
lock
or
pushf
xor
sbb
cmpsb
repz
inc
in
popa
pop
push
std
mov
push
out
fcom
popa
loopne
add
mov
div
xchg
xor
cmp
sbb
mov
lds
in
and
movsl
and
and
fs
call
ja
pusha
lea
jae
bt
jmp
mov
movb
lea
je
movsbw
bswap
mov
lea
pusha
pop
movzwl
pushf
call
mov
movb
lea
jmp
and
mov
add
inc
jecxz
and
jno
inc
es
movsl
xchg
adc
js
lock
xchg
aaa
mov
movsl
cmp
xchg
cmp
pusha
fcomps
dec
lret
dec
movl
into
into
into
push
popf
and
jmp
add
xchg
xchg
add
inc
repz
enter
inc
fnstcw
mov
in
lea
lds
ljmp
movsb
dec
ret
icebp
jl
mov
sbb
pop
add
movsb
cmp
and
loope
sahf
cmp
lcall
pop
mov
and
xor
and
pop
fsts
dec
int
rcll
sub
pop
adc
repz
movb
add
out
test
test
jno
enter
mov
aas
loopne
cld
fcoml
test
dec
cld
push
sbb
mov
ljmp
cmp
adc
movsb
and
pop
std
aaa
add
cmp
xor
mov
scas
sub
enter
mov
ljmp
lods
fdivl
fnstenv
jle
bnd
test
outsb
or
bound
aad
cmp
push
rcrb
push
cmc
or
into
cltd
push
stos
imul
add
jmp
xchg
xlat
imul
std
popf
push
out
nop
or
xchg
jge
jnp
jae
int3
cmp
xchg
sbb
jmp
seta
lods
stc
movb
test
cmc
sub
call
cmp
not
lea
movzbw
lea
lahf
not
push
mov
jmp
dec
pop
xor
mov
lret
movsb
dec
in
xor
jae
stos
inc
jecxz
inc
xorl
iret
adcl
cmp
sub
xlat
xlat
dec
sbb
cmp
sbb
dec
ret
aas
sarl
ss
popa
test
or
or
lea
ja
pushf
lea
mov
push
push
pusha
mov
not
movzbw
mov
movsbl
mov
movsbl
pushf
call
test
call
test
and
push
cmpsb
inc
loopne
sub
popa
call
movsl
cmp
inc
lock
ss
mov
xchg
lods
inc
cmpsb
inc
jmp
xchg
dec
test
and
aas
push
and
imul
xor
test
subl
jmp
cld
jl
jb
outsb
icebp
jno
gs
jno
nop
or
bt
add
clc
cmp
movzwl
push
xor
bsr
inc
mov
clc
add
cmc
push
call
or
jb
mov
lds
dec
icebp
xchg
xor
outsl
or
rcrb
adc
das
cli
pop
mov
pop
pop
sub
cmp
sub
sbb
and
inc
fsubl
add
mov
scas
xor
and
xchg
mov
mov
gs
mov
shlb
mov
divb
clc
ret
sub
es
adc
mov
mov
ret
lods
inc
fstpl
push
sbb
sbb
sahf
xor
loop
xchg
aaa
pop
jmp
repnz
dec
jecxz
push
jns
cltd
adc
add
jg
mov
lea
fstps
xor
pop
sbb
jne
sbb
xchg
js
mov
scas
push
fmuls
inc
ret
inc
roll
jge
lods
jp
push
call
jne
mov
jmp
pusha
pusha
xchg
lea
jne
dec
stc
clc
cmp
shl
not
pushf
lea
jnp
setg
lods
clc
sub
pusha
pushf
neg
push
ror
bt
neg
clc
stc
bt
stc
rol
pushf
pushf
pushf
pushf
lea
call
clc
cmp
call
leave
xchg
mov
mov
inc
ljmp
inc
fdivl
scas
dec
ret
dec
clc
dec
andb
cmp
fwait
arpl
in
fdivs
push
lret
outsl
cmp
hlt
xlat
std
xor
in
mov
mov
mov
les
mov
lock
add
pushf
mov
sti
gs
lea
sbb
sub
fs
push
dec
jno
pop
fbstp
xchg
outsb
xchg
test
jb
inc
dec
jl
out
cmp
jb
imul
out
push
jecxz
pop
adc
xchg
punpckldq
add
and
mov
ljmp
push
push
ss
sub
mov
lret
popf
xor
addb
pop
pop
push
cld
xlat
jnp
jecxz
xchg
cmp
arpl
popf
xor
cmp
xchg
pop
add
mov
adc
adc
movsl
pop
lahf
inc
movsbl
aaa
inc
push
jge
sub
sarl
daa
pop
add
jnp
mov
push
shlb
lock
push
loope
push
shlb
rorl
inc
ret
inc
ret
aas
mov
sbb
and
lea
mov
aaa
shll
and
aaa
cmp
sbb
sbb
das
and
sarl
pop
sub
shll
shrl
cmp
sbb
cmp
das
and
sarl
and
shrl
and
cmp
shll
add
push
movb
call
or
int
and
jb
mov
or
or
jp
cmpsl
sbb
pop
repz
sbb
ja
jae
mov
hlt
lea
adc
push
jo
ret
ret
sbb
ljmp
out
loop
inc
js
in
sbb
push
es
push
or
jbe
out
jp
ret
je
sub
jle
xchg
or
cli
je
jbe
es
mov
int
rep
mov
mov
pushf
lea
jmp
push
movw
dec
cmc
movb
stc
pusha
rol
jmp
pushf
call
pushf
mov
setl
inc
pusha
mov
mov
lea
call
jmp
imul
out
sbb
jg
and
sarb
popf
pusha
fs
mov
fdivrl
mov
pop
jo
jle
je
sahf
mov
fmull
test
cmp
mov
xor
sbb
lahf
jg
das
lret
or
sbb
ret
addr16
dec
sbbb
jbe
add
nop
dec
gs
stc
xchg
xor
or
lea
sti
lahf
lcall
sbb
enter
dec
mov
xchg
jge
gs
cwtl
pusha
negl
cwtl
xor
inc
sbb
lret
fs
ret
bound
shrl
jle
push
clc
jl
aad
push
outsl
popf
and
push
xchg
pop
mov
test
mov
and
pop
xchg
sbb
push
add
and
xchg
iret
mov
mov
mov
aaa
mov
test
sub
loope,pt
fildl
xchg
addl
cmp
xchg
xor
cmp
out
in
fmul
jae
jne
icebp
jno
int
mov
sbbl
std
jne
sbb
jbe
call
push
leave
divl
or
push
add
jno
push
in
cmc
mov
leave
sbb
shll
and
movsb
filds
popf
cmp
movsb
je
sbb
jae
int3
push
sti
inc
sub
mov
inc
sbb
pop
pop
fwait
stc
rcrl
outsl
push
xchg
jmp
jge
aad
mov
sbb
cmp
and
std
popf
push
out
test
mov
xchg
adc
hlt
outsl
cmp
clc
mov
pop
adc
les
rorb
negb
stos
inc
in
or
cmp
adc
add
sbb
add
sbb
popf
cmp
stos
xchg
xchg
cmp
adc
dec
aam
sbb
ja
push
in
inc
or
pusha
fsubrs
out
data16
je
mov
out
xchg
test
mov
jnp
lcall
in
mov
hlt
add
mov
pop
stos
sub
add
xchg
xor
cmpsl
mov
sahf
pushf
icebp
adc
jns
xchg
std
xchg
cmp
aas
ja
sub
mov
daa
stos
jne
push
push
adc
pop
mov
jnp
jmp
insl
imul
mov
in
popw
test
test
adc
cwtl
push
xchg
addb
bound
aad
or
adc
test
cmp
sub
movsl
sub
mov
icebp
mov
lcall
jne
lret
test
test
cmp
xchg
add
test
leave
dec
adc
jmp
test
test
jae
sub
pushf
adc
adc
es
cmp
cmp
shll
nop
cmp
mov
aad
sbb
shl
ret
dec
xor
icebp
dec
dec
loopne
je
mov
mov
lret
dec
jbe
pop
mov
sarl
jns
push
shll
int
lds
icebp
jns
pop
test
stos
xchg
into
jl
lock
lahf
int
mov
sbb
xchg
stos
xchg
das
pop
or
jecxz
imul
adc
sub
daa
lret
push
scas
ljmp
dec
ret
fidivrl
xor
pop
or
test
aam
pop
fcmovnb
xor
fndisi(8087
movsl
sar
jne
mov
mov
pushf
repz
cmp
jae
cs
ret
sbb
mov
lock
int3
cli
push
addr16
loop
icebp
sbb
mov
mov
add
adc
std
cmp
mov
sbb
push
lea
iret
push
rolb
sbb
negl
aam
sbb
mov
dec
test
pop
xor
adc
or
cmp
shlb
pop
aaa
adc
and
add
mov
dec
lock
das
sbb
jbe
jg
or
mov
mov
das
scas
fdivrl
loopne
fdivrs
jmp
xor
xchg
pop
push
int
std
jb
or
ss
cwtl
cmp
jp
mov
das
int3
mov
movsb
xor
add
mov
ficomps
or
scas
push
aam
faddl
push
or
jbe
aas
call
insl
mov
outsl
push
jge
mov
mov
lret
dec
js
rcrl
int
pusha
dec
sarb
sbb
out
mov
pop
xchg
les
into
xor
and
popa
dec
fistpl
mov
dec
fistpll
jecxz
or
outsb
imul
push
adc
push
adc
add
xchg
xor
mov
or
mov
mov
mov
bound
mov
adc
add
pop
adc
fs
insb
out
outsb
cmp
jo
adc
fistpl
mov
xchg
stos
or
pusha
sub
divl
arpl
stc
sarl
mov
sti
jle
sub
mov
aad
sub
data16
pop
mov
cmpsl
dec
int
jp
cmp
jp
add
shll
stc
or
xor
lret
js
repz
dec
jns
dec
jmp
jle
into
pusha
fisttpll
data16
sub
hlt
push
fcoml
mov
out
jg
icebp
mov
mov
pop
sti
jl
sub
add
or
mov
dec
mov
test
xchg
lods
cmpsl
dec
loope,pt
movsbl
xchg
adc
xchg
pusha
scas
aaa
out
loop
imul
add
lods
dec
and
ds
xchg
pop
sub
adc
and
dec
shll
fcmovb
push
rcl
ja
out
jno
insl
cmp
adc
mov
mov
imul
movsl
mov
inc
jg
add
sbb
add
popf
gs
mov
stos
daa
repnz
mov
movsl
and
and
lock
lock
loope
lret
add
cmp
xchg
adc
test
push
cltd
xchg
xor
pop
inc
pop
fs
notl
cmp
outsl
adc
scas
dec
jge
faddl
inc
inc
fidivs
sbb
jns
xor
cmpsl
lahf
xlat
jp
add
inc
lret
daa
loope
inc
loope
xchg
les
js
push
cmp
ret
in
or
cmc
cwtl
sbbb
popf
or
in
imul
sbb
imul
inc
sbb
xor
or
dec
jl
sbb
mov
rclb
mov
sbb
into
xor
mov
les
adc
notb
out
push
cmp
data16
shll
into
jb
xchg
sbb
or
js
leave
inc
cmpsl
adc
or
sub
mov
jecxz
and
sub
data16
mov
int3
jle
int
fs
rclb
pop
adc
scas
cmp
sbb
xchg
jae
jbe
loop
fsubl
jo
cltd
push
aaa
inc
cmc
cld
xchg
negl
sub
popf
and
pushf
xchg
mov
inc
push
not
pushf
inc
lea
pusha
jmp
pop
xchg
mov
cmp
jnp
scas
dec
repnz
xor
jo
stos
inc
movb
jle
ja
mul
mov
push
xor
jge
neg
ljmp
scas
fdivl
lcall
test
jg
jnp
aaa
rol
out
rcrb
fmull
xor
pop
mull
sbb
xchg
ret
andl
push
lret
dec
int3
dec
les
in
push
mov
dec
int
pusha
lea
jae
mov
mov
mov
jmp
push
mov
lea
movsbw
pop
bswap
movsbw
pushf
jmp
lea
je
cmp
cmp
pushf
movb
add
pusha
cmp
pushf
pushf
pushf
lea
jb
pushf
mov
pushf
call
jns
mov
cs
popw
cmpsb
and
cmp
out
ret
push
xchg
xor
push
mov
clc
xchg
fnstenv
mov
inc
pop
ljmp
sub
in
add
jle
xchg
mov
scas
mov
xchg
mov
int3
push
out
out
imul
inc
and
in
rorb
mov
pushf
pushl
pushl
ret
clc
ret
test
mov
jbe
mov
pop
fnstenv
mov
in
mov
test
fdivl
les
cltd
xor
jb
stos
inc
jecxz
incl
in
insl
lock
jns
jl
adc
fmuls
insl
out
scas
fidivrs
loopne
jmp
add
jecxz
dec
push
test
aad
adc
dec
int3
insb
lock
dec
aas
cs
dec
test
movsl
jp
lret
lods
xor
test
fdivrp
jg
fdivrs
insb
or
adc
fwait
push
mov
jbe
adc
idiv
mov
lea
jmp
call
mov
and
pusha
jmp
add
pushl
movzwl
rcl
mov
test
pushf
jmp
pusha
pushf
push
adc
jmp
pop
loop
fmuls
or
mov
inc
xlat
push
pop
push
add
outsl
xchg
aaa
pop
pushf
cli
push
xlat
js
mov
mov
mov
sbb
cs
push
lock
iret
push
das
or
out
and
or
fldenv
pusha
cmp
int3
xchg
test
cmp
ficoml
rorb
aas
les
mov
sub
adc
and
lea
movw
setp
movl
pushf
call
add
bt
cmp
movzwl
btr
sub
bts
mov
pusha
test
add
test
mov
jmp
mov
push
push
pop
bswap
mov
movw
bswap
movzbw
mov
mov
pushl
pushf
pushl
ret
pop
loop
dec
loop
push
mov
sbb
or
xchg
dec
lds
inc
es
push
dec
pop
inc
or
inc
add
and
adc
pusha
and
fcompl
fisttps
loopne
movb
mov
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
cmpsb
aam
fimull
pop
sahf
inc
fnstsw
sub
jl
cmc
fxch
mov
pop
test
push
hlt
scas
inc
loope
pop
mov
aam
mov
cmc
xchg
cmp
adc
cmpl
inc
shr
nop
dec
outsb
xchg
cmp
jne
mov
xor
dec
inc
out
lcall
inc
fistpll
add
cmp
dec
jl
add
rcl
xor
cmpsl
gs
pusha
clc
cmpsb
nop
inc
dec
xor
sti
lcall
bound
and
ret
pop
std
jnp
pusha
xor
sahf
xchg
ret
pop
imull
stc
xchg
adc
jg
pushf
inc
pop
mov
into
enter
add
sbb
adc
push
cmp
mov
and
pusha
fcompl
daa
adc
in
sbb
in
test
push
hlt
in
popaw
add
or
insb
pop
cmp
sti
in
aam
popf
sbb
int
es
in
fistpll
adc
out
out
pop
std
les
aas
push
and
inc
and
dec
jmp
enter
ljmp
xor
loop
inc
pop
lcall
inc
push
lcall
andb
jnp
inc
out
push
dec
std
sahf
add
add
or
dec
mov
cmp
add
mov
pop
xchg
cmp
push
into
inc
jbe
loope
in
movsb
fildl
test
add
pop
add
sbb
adc
mov
dec
mov
inc
add
pusha
dec
dec
jl
movb
pushl
pushl
lea
jmp
mov
adc
call
mov
and
mov
out
xchg
aaa
fnstcw
mov
pusha
pop
int3
divb
sbb
add
pushf
int3
arpl
aaa
push
xorl
arpl
cmpsl
inc
xor
push
pop
push
xlat
lahf
cmp
push
jno
lret
mov
cmpsb
inc
cs
lret
rorb
mov
push
rolb
enter
mov
inc
push
call
setae
xchg
adc
or
mov
jl
cmp
fmull
pop
cli
sahf
ss
inc
adc
mov
int3
jno
push
cwtl
inc
inc
sti
fs
imul
lcall
mov
out
mov
add
and
js
mov
lock
repz
jle
xchg
cmc
lcall
mov
inc
clc
sub
push
stos
mov
mov
add
cli
jnp
mov
mov
loopne
or
test
sub
adc
dec
enter
dec
leave
xchg
jbe
xchg
cmpsl
push
push
out
out
cmp
movb
pushf
pushf
mov
lea
ja
sar
sub
call
xchg
fisttpll
test
mov
xlat
outsb
adc
ret
bound
aaa
scas
out
outsb
out
add
iret
cmpsb
cmp
inc
adc
sub
xchg
pop
ss
pop
cwtl
shlb
sbb
mov
lods
inc
xor
lock
add
je
jl
imul
out
lret
out
int3
inc
jno
call
jne
scas
sbb
fcomps
mov
push
movsb
movsl
mov
jo
jne
mov
push
insb
aaa
data16
dec
sbb
xchg
iret
je
das
pop
jg
ljmp
xchg
pop
dec
jmp
fstpl
xor
out
enter
jnp
lahf
cmp
cmc
mov
roll
stos
lcall
sub
or
jg
fadds
inc
xor
int
pop
sarl
fucomip
fwait
xlat
xchg
mov
jb
daa
jne
rcl
or
cmc
sti
cs
sub
lret
and
sbb
fdivs
mov
cmpsb
inc
repz
xchg
push
or
lds
sarl
insb
pop
dec
js
push
rcll
sti
xchg
dec
jp
sub
loopne
aas
insl
int3
jle
xchg
arpl
push
xchg
daa
jnp
ss
in
nop
xor
xor
es
mov
mov
test
or
call
pminub
mov
lea
popw
lods
dec
jecxz
sbb
int3
outsb
lock
mov
mov
add
call
scas
inc
test
mov
rclb
sbbb
pop
dec
pusha
mov
push
xor
test
dec
fistl
test
xor
test
mov
fwait
enter
jns
inc
popf
push
fiadds
fldl
call
movsb
shrl
int3
ret
add
mov
xor
push
movsl
test
inc
lcall
pop
cltd
push
repnz
pop
insb
and
sub
cmp
jnp
decb
int
lret
add
pop
aas
xor
pop
fnstsw
fcoms
mov
int3
cmpl
add
pop
je
jns
das
lock
aam
jmp
mov
adc
adc
inc
ficomps
dec
stc
push
mov
inc
fbstp
push
test
test
mov
test
jge
aad
mov
enter
rolb
ret
ds
push
fbstp
cmp
call
aam
inc
fisttps
cld
adcb
movsb
outsl
mov
gs
jecxz
ja
aam
push
mov
shll
mov
mov
fwait
inc
sub
jbe
inc
fcompl
mov
je
int3
outsl
pminub
iret
fcom
jno
sbb
js
jns
sbb
lret
in
pop
imul
cmpsl
inc
jl
fbstp
push
push
stos
xchg
adc
aaa
scas
daa
loope
insb
jno
cmp
movsb
inc
jmp
idivb
pushf
popf
or
or
push
bound
add
mov
push
hlt
std
mov
jp
push
nop
cmp
xor
inc
cmp
test
pop
mov
sti
adc
ja
jo
imul
ljmp
loop,pt
cld
sub
inc
jmp
add
enter
push
int3
test
lock
push
mov
or
lcall
add
out
test
das
fistpll
fwait
dec
inc
loop
lods
fidivrl
or
sarb
add
fnstenv
sbb
xchg
cmp
fwait
std
sahf
inc
mov
xor
mov
test
xchg
ja
or
rclb
and
leave
pushf
adc
test
inc
pop
pop
push
mov
rorb
in
in
test
int3
loop
inc
int
sarb
and
xchg
pop
fwait
sbb
and
ljmp
or
cmp
or
add
add
and
jae
cmc
call
adc
add
popa
add
push
clc
mov
push
stos
jbe
xor
rorb
mov
cmpsb
dec
ljmp
sbb
mov
jg
mov
inc
daa
and
mov
and
dec
pop
cs
cmp
ss
lods
xor
push
mov
addb
pushf
jmp
pusha
pusha
inc
lea
pushf
push
pusha
mov
lea
call
jmp
cmp
stc
sub
pushf
pushf
lea
call
jmp
mov
lea
jb
call
pushf
mov
pusha
push
bt
cmp
pushf
lea
jb
jmp
inc
adc
loop
and
fwait
aas
loop
and
arpl
mov
xchg
mov
rcrl
cs
and
cmp
sbb
mov
sbbb
xchg
pop
and
jb
xchg
mov
mov
pop
movsb
inc
mov
lods
sub
stos
sbb
mov
orps
jle
jmp
fs
jne
bswap
lahf
mov
pusha
pusha
pushf
lea
jmp
mov
and
movsl
dec
out
and
or
fidivrs
cmp
test
add
pop
pop
pusha
sub
inc
mulb
inc
xor
cmp
out
mov
lock
cmp
movsl
sub
mov
adc
pushf
mov
mov
call
pusha
pushf
stos
pushf
pushl
push
lea
jmp
call
lea
movzbw
pushf
movzwl
pusha
lea
pusha
lea
bswap
movzbw
pushf
bswap
mov
call
lods
pushl
movw
sub
test
cmp
mov
neg
stc
pusha
push
ror
cmc
cmp
stc
neg
pushf
pushl
rol
jmp
repnz
pushf
lea
jne
bts
mov
stc
push
sub
bsf
lea
movb
cmp
sub
clc
clc
cmc
bt
pushl
popl
call
call
test
and
stos
inc
sarl
rcrb
hlt
or
ret
mov
stos
dec
loope
adc
ljmp
jl
sbb
xchg
ret
push
or
shll
fsts
mov
pop
pop
mov
cmp
loope
adc
xchg
dec
shll
aaa
fstpt
ret
jnp
iret
addr16
mov
stc
in
or
call
rclb
jg
das
int
int
sbb
xlat
gs
in
cmp
jg
xor
push
mov
repz
cmp
subb
mov
lods
mov
or
adc
cmp
cmp
insl
or
das
lods
addr16
icebp
jp
jl
jp
subb
mov
push
sbb
dec
call
mov
push
icebp
pop
xor
cmp
jmp
dec
dec
shll
mov
enter
int
scas
push
stc
jle
enter
adc
lds
arpl
addr16
push
cmc
popf
aas
ret
inc
gs
icebp
in
or
ret
sti
lcall
stc
cmp
push
xlat
stos
bound
in
or
mov
jmp
add
mov
in
movb
cmp
or
xchg
adc
push
mov
xchg
cmp
inc
ficoms
and
call
int
jmp
mov
mov
call
shr
mov
and
neg
mov
stc
xchg
jmp
or
adc
mov
mov
add
movsl
shll
sti
push
repz
cmp
das
test
jbe
xor
add
mov
sub
sahf
jo
xchg
xor
sbb
insl
in
in
insb
ljmp
mov
clc
shl
mov
stc
cmpb
pusha
pushf
lea
jne
and
sub
dec
bt
not
shl
mov
sbb
shl
add
seto
shl
mov
pushf
clc
test
lea
jl
je
cmp
cmc
sub
jmp
jmp
pushf
lea
jb
bt
pushf
call
pop
shl
mov
cmp
cmp
pusha
pushf
cmpb
pushl
pushf
lea
jne
shrd
stc
sub
bts
aaa
mov
stc
add
pushf
pusha
lea
jmp
sub
pushf
pushf
rep
not
mov
pushf
mov
movb
lea
jmp
setg
mov
lea
mov
not
mov
pusha
pusha
pushf
movw
lea
jmp
pushf
push
pushf
lea
jne
movzbw
cwtl
setl
mov
push
mov
lea
jmp
pushf
pushf
movl
movb
lea
je
push
push
lea
jmp
mov
pushf
pushl
popl
mov
pushl
ret
xchg
push
pusha
pushf
movl
push
movl
mov
mov
lea
jmp
movl
movw
jmp
mov
movsbw
movzbl
call
push
movw
shr
mov
push
jmp
push
fldcw
mov
mov
iret
insb
adc
enter
hlt
pop
push
xchg
fnstsw
in
cmp
outsl
or
movsl
daa
add
rolb
push
movl
outsb
adc
fiaddl
ljmp
mov
pop
jns
repz
push
jno
mov
push
out
mov
leave
arpl
mov
ret
pop
fisttps
and
jp
mov
jmp
sub
push
pushf
add
iret
lret
loope
or
je
fidivs
jb
or
loopne
sub
fnstcw
jbe
ficoml
mov
mov
test
fsts
filds
cmp
xor
sbb
mov
cli
jle
xor
inc
cld
mov
insb
and
sbb
adc
inc
call
addl
hlt
ja
jnp
es
data16
mov
dec
push
pusha
pusha
mov
pushf
movl
pushf
pushf
mov
movl
push
lea
jmp
fisttpl
ds
lret
imul
ds
and
gs
popf
and
adc
into
push
sbb
mov
loope
mov
and
das
nop
out
xor
arpl
jmp
jge
and
pushl
lods
inc
sub
xlat
xchg
lods
jae
xor
mov
xchg
pop
xor
jmp
rcll
mov
pop
mov
mov
aaa
mov
mov
in
push
push
sub
lock
bswap
movb
movb
not
lea
push
pushf
mov
setns
call
inc
adc
jmp
inc
fidivrl
mov
data16
dec
icebp
mov
scas
dec
sbb
xchg
add
addr16
adcb
push
out
das
shrl
cltd
pop
pmulhw
mov
push
push
scas
frstor
cmpsb
or
bnd
xlat
aaa
stos
add
outsb
jmp
ficoms
dec
sbb
pop
jns
loopne
mov
jmp
mov
lds
popf
sbb
dec
cmpsb
or
mov
add
loopne
pop
mov
push
fcomps
jge
mov
mov
cmc
enter
inc
sti
xchg
pop
clc
xchg
das
test
jns
mov
in
cwtl
cli
mov
or
pop
jmp
add
cwtl
xor
mov
or
or
cli
jnp
les
mov
scas
ljmp
mov
int3
sahf
jb
xchg
dec
out
mov
mov
aaa
stos
add
and
inc
enter
inc
cs
xchg
sub
bound
dec
out
shll
mov
push
jge,pn
mov
les
jg
test
sub
out
callw
outsl
imul
or
cltd
imul
or
pop
andl
push
jle
insl
data16
push
push
sbb
sbb
pop
pushf
sbb
xor
movsl
fldl
sti
add
cmp
je
or
inc
and
xchg
lea
ja
call
neg
mov
clc
ror
bt
bt
neg
pushl
rol
jmp
push
call
pushf
mov
call
pushf
movl
jmp
push
adc
mov
mov
cmc
xchg
xor
jno
ljmp
mov
lds
lock
cmp
and
fcmovnb
jnp
dec
ljmp
xchg
cs
adc
lcall
jg
sub
pop
jp
fidivl
cmp
lock
jmp
push
repnz
xchg
xor
cld
jae
iret
lcall
mov
fadds
cmpsl
or
inc
les
mov
mov
adc
popf
sbb
out
not
movsbw
pop
push
movl
push
push
pushl
ret
cmp
call
roll
mov
movsl
adc
loopne
roll
or
pop
or
ds
adc
std
mov
sub
cmp
fiaddl
lret
adc
in
xchg
push
cmp
test
push
jmp
movl
movb
pushf
jmp
pusha
lea
jb
call
push
adc
mov
call
clc
xchg
xor
jae
mov
icebp
jo
icebp
pop
lahf
push
and
xor
mov
ret
mov
loopne
xlat
sub
lea
inc
cmc
loope
lahf
pop
icebp
mov
mov
jb
insb
ljmp
jecxz,pt
loope
jmp
add
and
jge
ret
lahf
sbb
fnstcw
pushf
pop
rcrl
arpl
mov
test
adc
lahf
int
rorl
jnp
orl
push
fsubrp
mov
pop
mov
into
inc
dec
enter
mov
lods
js
jg
inc
jge
xchg
nop
inc
incl
pusha
pusha
mov
movzbw
pushf
pop
lea
pushf
movw
movl
pushf
mov
mov
mov
pushf
pushl
ret
jmp
je
or
mov
mov
add
pop
lea
push
stc
outsb
jne
nop
xor
popf
pop
leave
aas
jecxz
dec
rolb
divb
call
arpl
xchg
pop
call
dec
mov
rcrl
jmp
inc
inc
std
mov
mov
xchg
dec
lock
sub
test
shll
dec
pop
and
jp
cmp
sti
jb
push
xchg
xor
and
call
bt
pusha
cmp
movw
lea
jae
bt
cmc
cmp
call
not
shl
sub
xchg
pop
pushf
pushl
setge
pop
mov
movw
pushf
mov
pushf
mov
movw
jmp
pop
movsbl
pop
movzbw
mov
pushf
mov
pushf
mov
not
pusha
lea
pushf
mov
pushf
mov
jmp
pop
xchg
out
mov
cmp
jne
mov
in
mov
enter
inc
mov
push
out
pusha
dec
inc
cmpsl
xor
push
outsl
cs
cmp
or
mov
loope
mov
leave
xchg
rcl
jmp
xor
or
or
rclb
pop
filds
pushf
movl
pusha
movl
push
pushl
lea
jmp
out
xor
mov
bound
movsl
ja
in
outsl
shrl
sub
in
xor
lret
jecxz
rcrl
clc
sahf
cmp
outsl
push
movsl
inc
in
pop
mov
stos
inc
cmp
push
jns
adc
sub
mov
jp
push
or
push
outsl
adc
sub
push
jae
lods
and
mov
and
rclb
cmp
and
es
popf
push
mov
jb
jbe
outsb
in
loopw
in
loop
sub
cmp
mov
jne
movsb
out
loopne
out
pop
sub
shlb
or
pop
sub
push
dec
dec
push
out
mov
sub
mov
pop
daa
sbb
sahf
out
inc
adc
mov
mov
andl
imul
adc
dec
push
sub
ljmp
into
dec
ds
mov
aam
pop
dec
and
xchg
pop
mov
dec
mov
lea
adc
cmpb
hlt
insl
mov
jne
pop
std
push
aaa
lds
aam
sbb
push
scas
push
xor
jge
push
hlt
xchg
push
push
push
adc
jno
jae
xor
mov
outsl
xor
xchg
aas
into
adc
lea
or
jo
push
inc
nop
xchg
jge
xor
inc
pop
push
cmc
dec
cmp
jne
pop
fs
and
sbb
jge
mov
push
lock
imul
push
insl
xchg
leave
xchg
imul
andl
stos
mov
sbb
lahf
push
call
jae
sub
int
out
iret
push
dec
in
hlt
push
jg
js
bound
pop
faddl
dec
aad
jge
mov
es
or
adc
lock
mov
mov
out
xchg
popa
ss
repnz
imul
lods
sbb
das
sub
xchg
jae
mov
cmp
cmp
frstor
pop
test
mov
into
insb
pop
aas
into
cmp
push
push
out
push
cltd
sub
test
mov
pop
loop
sbb
pop
inc
pusha
lea
in
xchg
ljmp
out
push
nop
or
nop
ja
ja
mov
adcl
lret
ret
fidivrl
xchg
fldenv
sbb
mov
xchg
int
data16
sbb
mov
pop
jle
fs
test
insl
imul
jge
sarb
xor
adc
dec
out
mov
jno
stc
sbb
fldt
popa
cltd
jne
mov
push
mov
ds
loope
pop
push
mov
outsb
xor
dec
sbb
xor
scas
adc
icebp
outsb
xor
adc
lds
xchg
pop
hlt
fucom
and
js
pop
jmp
insl
out
push
xchg
ds
clc
jecxz
imul
pusha
jae
imul
cmp
aam
pop
and
adcb
add
jnp
jne
arpl
insl
inc
hlt
adcl
mov
push
xor
adc
mov
mov
mov
inc
cwtl
sbb
outsl
sahf
xor
int3
mov
sbb
in
sub
out
xchg
rcrl
aaa
cmp
sbb
or
push
lock
push
mov
hlt
sbb
std
dec
push
mov
gs
das
in
and
lock
fwait
das
int
lahf
pop
out
lods
lea
loopne
pusha
int
sbb
fstpt
popf
or
lea
fsubrl
dec
jge
int
lahf
mov
call
cli
loopne
lods
lea
pushf
dec
cmp
jb
jne
movsl
out
xchg
fisubrs
adc
mov
lea
sbb
std
outsb
xchg
out
push
int
iret
push
mov
orl
fimull
insl
jg
lods
into
mov
int
dec
leave
xor
sahf
mov
fmuls
push
mov
mov
dec
out
addr16
cmp
mov
out
int3
outsb
std
xchg
pop
push
arpl
outsl
aas
sbb
movsb
popf
insl
fisubs
mov
fwait
mov
fbstp
fcompp
jle
and
jne
enter
mov
xchg
xchg
sbb
fs
outsb
je
jne
fwait
int
pop
ficomps
push
lock
push
iret
lods
jg
xchg
xchg
mov
mov
fistpll
dec
jp
jb
std
jg
dec
dec
cmp
mov
dec
jo
icebp
bswap
fistps
dec
mov
jg
adc
fisubl
in
mov
pop
jmp
xlat
or
sbbl
sbb
sbb
xor
pop
jle
xlat
mov
fistl
loop
lea
loopne
xorb
cmp
push
jno
popf
pop
sahf
std
sahf
cmpsb
scas
push
scas
jno
fldt
dec
cmc
aas
ja
out
dec
cmp
js
frstor
in
lea
dec
repnz
in
lea
sub
outsb
mov
icebp
mov
rcll
js
rorl
scas
sbb
lea
rclb
and
or
fildll
jo
xchg
lahf
mov
jle
pop
ljmp
xlat
pop
xchg
pop
out
adc
in
mov
dec
dec
js
out
into
sub
notl
aas
dec
adcl
mov
mov
adc
jnp
pop
insb
insl
sarb
aas
push
push
sahf
sub
in
push
jge
jecxz
into
cwtl
fisubs
mov
mov
or
jge
jecxz
adc
movsl
test
push
cmp
xor
cmpsl
lock
dec
inc
jo
and
xchg
nop
fdivs
sarb
fcoms
movsb
mov
fisubrs
gs
shrl
and
jmp
sti
mov
cmpsl
sbb
mov
in
xor
fdivrl
cld
push
adc
leave
dec
rorb
inc
sti
outsl
sub
sub
push
push
in
adcb
rorl
dec
call
inc
cmp
scas
mov
pushf
mov
daa
jo
add
pusha
push
aaa
jmp
adc
adc
ja
js
push
aaa
cmp
outsl
fsubrs
push
out
cmp
pop
orl
xchg
fwait
and
imul
in
in
cli
jno
mov
inc
mov
test
xor
mov
outsl
xchg
pop
push
js
lret
xor
sub
jb
cmp
pop
lcall
jae
outsb
dec
jge
xchg
sub
xchg
hlt
ret
sub
insl
loope
rorb
xor
decb
xor
sahf
repz
mov
out
cwtl
xchg
mov
rolb
mov
jb
jo
sub
pop
rcl
loopne
mov
add
xchg
xchg
bnd
and
ja
adc
in
mov
and
jno
std
arpl
js
pop
fstpl
mov
sbb
dec
dec
add
pop
push
mov
imul
cmp
clc
test
push
jp
insb
je
in
clc
mov
xchg
mov
ss
dec
adc
int
into
cmp
dec
xchg
in
sarb
fidivl
insl
xor
lods
inc
dec
dec
mov
mov
dec
lcall
mov
insl
push
insl
pop
mov
gs
in
adc
insl
hlt
scas
push
cmp
outsl
mov
jno
call
mov
or
mov
lea
mov
stc
push
mov
or
mov
arpl
dec
ds
mov
xor
lock
push
sbb
lahf
sub
insl
out
adcl
jg
mov
lea
sahf
dec
or
xorb
insl
rorl
xchg
fistps
dec
outsb
sbb
pop
mov
sahf
push
into
repnz
int
inc
popf
mov
int
loopne
insl
das
outsl
mov
loopne
push
jb
jno
insl
lahf
scas
push
cmp
dec
push
das
push
rclb
push
fstpl
int
push
loopne
out
xchg
push
push
mov
bound
insl
inc
push
push
jae
in
mov
das
mov
mov
out
push
into
and
mov
push
call
int
into
inc
insl
xchg
imul
shlb
push
outsb
shll
int
dec
fmulp
fistpll
or
and
sub
mov
pop
add
push
out
push
in
arpl
iret
lea
call
jb
jno
jno
pop
frstor
lea
push
lea
jecxz
jae
in
lea
lahf
dec
lea
sbb
mov
inc
rcl
lock
jo
scas
lea
fucomp
lea
das
lea
xor
int3
fnstsw
jge
int
outsb
xchg
and
pop
jb
pop
lea
popf
xor
int
xchg
in
outsb
sub
push
fists
push
lea
int
and
int
cmp
push
popf
mov
mov
push
outsb
jae
int
rcll
lock
int
xchg
or
int
dec
mov
xlat
lea
loopne
xchg
shrb
insl
sarl
in
jb
push
insl
outsb
scas
int
dec
mov
dec
arpl
sbb
mov
je
jnp
lock
hlt
outsb
dec
int
cmp
jns
cltd
push
mov
aam
into
icebp
sbb
iret
scas
std
adc
test
mov
fcoms
jg
adc
push
push
push
popa
lds
popf
inc
pusha
js
xor
adc
mov
gs
lods
popf
lea
jnp
arpl
lods
dec
test
adc
inc
jecxz
xor
sub
bound
mov
aam
add
arpl
aas
mov
xchg
test
inc
fcomi
xchg
pushf
lock
push
mov
add
xor
mov
mov
in
inc
push
xchg
mov
ja
in
test
pop
pop
and
or
lock
adc
inc
out
adc
mov
repz
pop
xchg
mov
jge
mov
cwtl
cwtl
xchg
xchg
arpl
inc
ljmp
fnstenv
aad
xchg
rorl
out
insl
xchg
jmp
outsl
fsubrl
out
je
jns
pop
inc
jnp
sub
scas
push
out
mov
xchg
mov
int
mov
sbbl
mov
push
lea
popf
sub
ret
mov
mov
fisttps
idivl
sub
in
dec
xchg
je
insb
mov
ds
dec
xorl
popa
inc
dec
ds
push
jecxz
out
mov
lcall
lods
sbb
sub
push
push
hlt
add
dec
das
mov
pop
jb
out
xor
ja
insl
sbb
add
outsl
mov
test
or
cmp
add
int
push
inc
bound
jmp
fst
jp
adc
pop
xor
push
dec
push
cmpsb
hlt
and
pop
sub
mov
out
dec
jne
outsl
jge
dec
cld
out
dec
mov
cmp
jp
shll
jae
call
stos
dec
xchg
int
push
sub
push
adc
and
testb
out
jle
jmp
bound
es
fs
adc
add
rorl
xor
mov
je
mov
out
mov
xor
pop
pop
imul
mov
neg
jle
frstor
shld
lahf
imul
and
outsb
and
dec
pushf
icebp
xchg
into
push
in
imul
out
fs
int3
popf
add
inc
jmp
dec
xchg
dec
mov
ss
dec
lea
jae
sbb
test
inc
scas
xchg
cmp
mov
jne
mov
ds
push
hlt
fistl
mov
insl
pop
out
cmc
xor
notl
jno
mov
lods
stos
fwait
inc
in
or
inc
or
adc
mov
rol
ret
sbb
pop
hlt
sbb
cmp
xchg
mov
mov
hlt
iret
and
push
add
push
mov
sub
nop
aam
cli
fnstenv
dec
jg
subb
ffree
inc
sbb
repnz
mov
dec
sbb
push
out
movsb
xlat
pop
lock
dec
int
mov
sbb
in
xchg
stc
jno
ficompl
pop
js
fnstsw
mov
push
or
cmp
jecxz
and
into
fidivrs
rcrb
std
and
stos
jnp
data16
sahf
hlt
mov
lock
mov
lcall
jp
pop
xchg
in
sbb
out
push
mov
adc
xor
dec
adc
int
adc
push
out
mov
cltd
hlt
sarb
jecxz
jge
icebp
push
jp
push
gs
pop
cmp
movsl
popa
ret
movsb
stos
push
aaa
hlt
sub
add
jno
cwtl
pop
add
std
mov
xor
data16
sub
push
push
fwait
repz
scas
addr16
int
mov
popa
ja
pop
xor
pusha
add
subl
in
jg
mov
int
sahf
lock
loope
push
cwtl
xor
xchg
testl
fabs
xchg
lea
cmpsl
ret
sbb
xchg
bswap
loop
adc
stos
xchg
xor
jmp
xchg
in
cli
int
fld
iret
aaa
into
sbbl
mov
sub
arpl
jmp
int
or
into
test
std
stos
jbe
sarb
mov
pop
lock
xchg
or
arpl
stos
or
mov
insl
adc
movsl
adc
hlt
lea
ja
push
xor
hlt
lock
mov
ret
mov
jg
shrb
add
push
jbe
out
test
fs
cwtl
nop
push
xchg
test
lea
hlt
inc
into
push
out
shrb
dec
push
pop
add
out
push
repnz
push
sub
pop
into
pop
push
dec
push
sub
nop
lahf
inc
or
test
pop
mov
stos
into
xchg
int
fldl
jecxz
ljmp
pop
div
pop
insl
jae
ja
and
dec
pop
jo
je
jns
in
mov
jno
push
inc
jae
jp
or
hlt
push
cld
fs
sbb
adc
xor
mov
jns
pusha
adc
sub
out
xor
add
sahf
pop
dec
mov
jge
and
pop
adc
sbb
cmpl
int
imul
lcall
mov
mov
fsubrs
dec
mov
jle
mov
rcll
loopne
lcall
mov
lea
fsubs
cmpsl
xchg
xor
je
dec
movsb
inc
lods
xor
sub
push
adc
push
dec
cmpb
mov
push
jns
pop
sub
icebp
xor
add
jns
lock
or
popl
dec
sbbl
mov
lods
pop
jge
xorb
jnp
repz
sbb
jb
inc
or
xchg
mov
xchg
loop
bound
cmp
pushf
in
push
fs
sahf
push
xor
cmp
lods
fidivrs
xchg
insb
out
adc
xchg
out
insl
ficoms
nop
dec
xchg
gs
sbb
fdivrl
mov
jnp
mov
adc
adc
xor
mov
jne
jno
lods
mov
cwtl
cmp
in
jmp
in
pop
pushf
sub
lahf
xchg
sarl
and
insb
ljmp
mov
push
pushf
out
popf
mov
cwtl
sahf
mov
mov
pop
mov
in
mov
shrl
xor
test
movb
in
negl
shl
xchg
and
lods
sahf
inc
fsubrp
pop
cmpsl
loopne
add
mov
mov
dec
pusha
insl
daa
pop
aam
addl
test
push
mov
push
dec
dec
jl
add
hlt
sti
into
xor
jle
xchg
ljmp
loopne
push
ds
pop
hlt
sbb
data16
lods
cwtl
adc
pop
sub
sbb
shll
pop
arpl
fadd
mov
fnstcw
lock
mov
xor
leave
push
je
into
mov
cmpsl
jcxz
pop
mov
jb
mov
mov
pop
adc
jae
or
add
push
lock
inc
dec
js
imul
jo
in
call
test
test
sarl
pop
cwtl
or
xchg
xchg
popaw
mov
or
sub
mov
je
push
jae
mov
xchg
out
testl
mov
or
aam
rorb
xchg
xor
sub
mov
shlb
mov
scas
push
dec
xor
add
xchg
fprem
pop
clc
std
push
and
ret
jmp
imul
pusha
orl
push
jno
fucom
jle
xchg
lock
xchg
in
mov
lret
cmp
rol
stos
out
mov
popf
ret
sub
push
jp
repz
imul
in
xchg
insl
xchg
js
mov
mov
daa
test
sar
inc
loopne
cwtl
int3
fsub
rcrb
xlat
xor
js
dec
lock
mov
xor
jbe
outsb
cmp
sub
hlt
add
jb
fadd
push
cwtl
aaa
loopne
int
mov
mov
mov
and
mov
int
ret
xchg
pop
and
pop
push
fbld
dec
icebp
dec
mov
and
mov
add
sbb
ss
test
jl
mov
push
xchg
pop
fistpl
jns
mov
icebp
push
rep
loope
xor
sahf
ret
jle
mov
inc
fcoml
aam
pop
imul
inc
aad
out
adc
in
jb
hlt
int3
push
xchg
pop
out
xchg
xor
arpl
sbb
jns
out
inc
push
xchg
incl
adc
test
test
mov
out
add
test
dec
xor
jge
mov
push
xchg
insl
repz
cmpsb
xchg
lock
scas
lock
mov
cmpsl
fcmovb
and
adc
pop
pop
sbb
mov
test
movsl
xchg
popa
and
mov
xchg
sar
test
in
cmc
pushf
les
call
sbb
mov
or
popa
pop
xor
out
movsl
testl
daa
adc
sub
ss
shlb
and
es
movsb
xchg
movsb
lock
pop
das
push
aas
dec
adcl
fimuls
test
lds
sbb
adc
push
pop
loope
cmp
sub
mov
in
xor
inc
sbb
add
cld
mov
adc
xchg
and
jbe
sub
lret
sub
mov
lahf
movsl
bound
movsb
hlt
mov
imul
dec
push
cmp
sbb
movsl
push
sbb
movsb
sub
jno
dec
push
fsubrl
sbb
dec
cmp
push
std
dec
je
mov
dec
call
rcrl
movsl
pop
outsl
mov
xor
jns
into
xchg
testl
arpl
dec
push
out
inc
pop
sub
cmc
aad
sub
jne
jae
lock
stc
inc
mov
gs
fisubl
scas
pop
out
cmc
jae
dec
add
fsubl
xorb
jmp
dec
sub
outsl
std
fcomps
push
popa
jae
cmp
adc
subl
bound
adc
jmp
fwait
jnp
sbb
push
dec
pushf
mov
ja
aam
mov
int
jns
repnz
pop
push
mov
add
dec
mov
rolb
outsb
and
xchg
inc
scas
test
repz
cltd
push
mov
sub
jl
out
pop
movsl
xor
pop
testb
jmp
xor
sub
inc
int
out
sti
jg
iret
lea
push
jb
popf
pop
arpl
insl
mov
xor
jae
ret
fmull
sub
fisttpl
pusha
int
xchg
ja
gs
jcxz
inc
sbb
mov
mov
jnp
pop
sub
jg
imul
and
and
xchg
imul
test
push
iret
mov
stos
jge
es
shll
imul
and
mov
cmp
xor
imul
clts
mov
cmp
daa
push
pop
push
popa
icebp
push
std
imul
inc
jp
push
subl
mov
divl
fistl
pop
pop
aas
dec
flds
inc
mov
ljmp
add
loop
jg
jns
push
push
dec
out
add
hlt
bound
push
xor
jg
stos
addr16
sahf
push
add
xor
mov
insl
out
lods
xor
pusha
sub
mov
pop
lods
lock
and
hlt
ds
dec
cmpsl
push
js
lods
xorb
pop
cmp
cwtl
inc
push
test
and
xor
sub
int
push
call
adc
sub
lea
xchg
add
dec
mov
fisubrs
inc
sub
jno
bound
mov
fbstp
std
sub
pop
mov
mov
dec
sub
out
popf
sahf
xchg
mov
pop
and
and
xchg
push
cmpb
lahf
dec
xchg
cmc
mov
outsl
lret
cmp
in
pop
mov
stos
dec
mov
push
sub
fisubrl
pop
jb
or
fidivs
stos
adc
mov
mov
in
push
lods
mov
loopne
je
mov
aad
sahf
mov
insl
pusha
cli
lock
inc
mov
int
and
les
dec
mov
into
ret
dec
fistps
hlt
mov
jge
adc
push
jb
in
ss
jne
clc
adc
and
add
mov
arpl
lret
pop
addr16
xchg
sbb
lods
cwtl
pop
jl
and
sub
lods
sti
mov
xchg
dec
lds
push
out
push
adcl
mov
ret
arpl
jno
push
mov
push
aam
fwait
int
outsb
mov
mov
aad
pop
mov
insl
lret
jb
loope
jnp
ja
pop
lds
xchg
or
add
xchg
sahf
lods
data16
push
inc
ss
scas
pop
enter
sahf
stos
cmp
int3
inc
imul
and
inc
and
gs
and
negl
fs
xchg
cmp
enter
into
sahf
or
imul
test
jecxz
mov
mov
mov
dec
adc
push
sub
insb
in
dec
pop
sbb
jbe
arpl
outsl
into
enter
sti
jp
pop
adc
sbb
inc
call
jae
pop
in
cmovne
xor
lcall
in
into
scas
test
nop
cmovge
shlb
inc
adc
mov
in
lods
pop
cli
dec
iret
lock
mov
clc
mov
sarl
lahf
sub
xchg
fcomps
xchg
divb
jbe
int
xor
out
test
inc
add
lea
inc
and
imul
mov
std
cmpsb
icebp
push
add
xor
loop
ds
into
cld
test
in
mov
lahf
cli
sbb
add
outsl
aaa
jae
popa
loope
stos
push
stos
xor
xchg
jno
jae
mov
dec
or
lahf
lods
xor
xchg
or
or
inc
xor
or
inc
ffree
iret
in
test
aam
bound
nop
push
xor
aas
gs
jge
dec
and
push
out
insb
cmp
cs
lcall
pop
pop
or
cltd
ror
ja
wrmsr
test
insl
notl
jo
xor
adc
outsb
and
bound
std
or
jmp
cmp
outsb
shrb
mov
mov
add
pop
xor
out
add
jns
out
pop
sub
add
sahf
into
lock
push
test
je
outsl
cmpsl
lcall
lcall
orl
out
incl
loope
test
hlt
cs
rcl
push
hlt
aam
push
sahf
fmul
xor
jns
sar
push
pop
mov
or
xor
es
cli
pushf
dec
push
fwait
test
iret
cld
push
inc
or
imul
leave
push
loopne
imul
subl
pop
pop
pushf
outsb
xor
and
jne
or
fsubl
dec
inc
push
and
mov
pusha
icebp
ficompl
mov
rcrl
aaa
mov
sub
cmp
and
sti
dec
fiaddl
sub
fcompl
mov
loop
jo
js
sub
jb
cmp
and
pop
push
aam
cwtl
orl
dec
cmp
sysexit
add
mov
jns
outsb
mov
lret
mov
scas
dec
fmul
jle
fidivl
notl
mov
xor
scas
mov
push
lods
stos
popa
and
pop
bound
or
lods
dec
orb
sbb
std
jle
fimuls
stos
xchg
cmpsl
jae
and
test
mov
loop
push
push
fst
push
or
fsubrs
pusha
sbb
jnp
jge
sub
sub
mov
repz
adc
fstpl
insl
insb
imul
add
in
in
popa
ret
fidivs
into
aaa
adc
sbb
stc
lcall
out
imul
in
push
jecxz
xor
push
push
pop
mov
into
cwtl
cmp
je
sub
push
inc
mov
and
jnp
test
xchg
pop
jno
add
shl
int
fdivrl
sti
and
fcoms
xor
push
add
mov
cmpl
xchg
imul
jmp
mov
rcr
fbstp
push
addr16
loopne
shlb
lock
lahf
leave
filds
std
mov
shr
push
jmp
mov
mov
hlt
mov
add
ret
loope
imul
pop
lock
xchg
xor
flds
aas
jae
mov
mov
xlat
cmp
sub
ja
fnsave
ficoms
cltd
imul
cmp
lahf
dec
aas
pop
cld
dec
push
enter
sbb
sbb
cwtl
mov
jecxz
rolb
push
push
adc
scas
add
ret
xchg
push
movsl
aad
shll
jg
mov
inc
gs
int3
stc
sbb
and
fldl
jo
js
scas
xchg
in
adc
or
cli
ja
bound
jb
outsb
pusha
test
push
jno
add
mov
ret
push
jbe
stc
pushf
push
ror
jge
mov
mov
jge
je
dec
nop
jo
dec
js
push
adc
xor
out
xchg
or
or
and
xor
lea
mov
mov
push
pusha
pop
out
push
les
scas
popa
lret
outsl
test
jb
call
adc
cmp
or
les
neg
data16
adc
sahf
fwait
cmp
rcl
lds
adc
or
les
lods
jo
sbb
sub
into
scas
daa
push
mov
jb
stos
lock
sub
xor
pop
xor
enter
push
neg
push
out
xchg
adc
and
or
xor
das
push
push
out
push
idivb
add
adc
dec
out
sbb
inc
sbb
pop
test
and
cmp
pop
inc
lret
dec
jae
ja
fsubl
mov
out
mov
movsl
mov
cmp
mov
std
cmp
adc
mov
cmc
mov
and
dec
out
fidivl
enter
push
jae
loope
jl
cmp
mov
xor
or
scas
scas
xchg
push
jne
cmc
out
mov
scas
pop
je
mov
std
int3
lea
mov
orl
ret
jno
iret
stos
filds
adc
jbe
sbb
sbb
jl
and
pop
xor
pusha
scas
mov
pop
fisubs
repnz
cmp
movsl
lock
mov
dec
sbb
sbbl
push
mov
or
sbb
imul
inc
lahf
lret
push
ret
out
mov
dec
xor
mov
stos
lahf
or
pop
jnp
xor
pop
addr16
shrl
adc
cmp
pushf
sub
sbb
lret
and
mov
jl
mov
outsb
xlat
cmpsb
lock
mov
pop
and
add
insl
jnp
aad
lahf
xchg
call
mov
push
jns
sub
xchg
bound
mov
in
jb
and
lahf
adc
push
hlt
lock
jg
rolb
xlat
xor
rorl
xchg
rolb
cmp
std
out
push
lock
inc
and
mov
js
jmp
pop
xor
fsubs
mov
jmp
std
frstor
lcall
xor
mov
fisubrl
shrb
std
mov
scas
cmp
aad
outsl
ds
push
cltd
and
mov
and
pushf
test
lds
pop
std
pop
xchg
mov
push
out
fwait
xchg
in
pop
dec
nop
cmp
xchg
mov
mov
imul
push
mov
repz
hlt
xor
cmp
imul
adc
jnp
cmp
push
mov
repnz
repnz
lret
cmpsb
xchg
fisubrs
sahf
ret
nop
movsb
lea
fists
dec
inc
pop
jl
sahf
sbb
jne
popf
sbb
pop
fisttpl
xor
or
sub
xor
pop
into
xchg
inc
insl
sub
xchg
fsubr
iret
add
jg
lahf
xor
dec
out
in
icebp
js
lret
aad
lock
fstpt
lret
mov
xchg
mov
pop
cmp
inc
jmp
xchg
cld
cltd
add
stos
insb
mov
shl
cli
pop
sbb
xchg
fbld
lods
mov
int
dec
int
inc
pop
in
movsb
dec
ret
sahf
out
cmpsb
inc
and
or
dec
lods
push
mov
xchg
sbb
dec
jge
pop
xlat
dec
lods
iret
adcl
into
jmp
push
movsb
and
movsb
or
lea
inc
jg
xchg
xor
iret
pop
xor
fdivs
push
push
push
lds
hlt
and
jb
push
pop
sub
push
or
ds
cmpsb
iret
mov
out
push
in
out
lret
mov
mov
repnz
movsl
cmp
add
aas
add
xchg
and
push
rorl
orl
cmp
push
int3
jg
popa
mov
xchg
cmp
xchg
mov
jae
icebp
cmp
sub
cltd
lods
addr16
sub
fcomi
add
pop
mov
bound
adc
jae
or
pop
out
pop
mov
and
pop
ds
push
hlt
push
add
sub
cmpsb
xor
adc
rcrb
je
dec
aad
push
dec
int
jle
mov
mov
ds
cld
push
popa
add
mov
clc
sub
decl
mov
pop
imul
icebp
repnz
inc
xor
dec
mov
addr16
xchg
daa
std
bound
mov
or
hlt
or
arpl
mov
aam
pop
pop
push
adc
cmp
jle
mov
movsl
or
xor
push
cmp
push
mov
out
iret
cltd
outsb
sub
pushf
je
leave
rclb
xchg
aas
and
insl
arpl
sub
inc
jne
mov
xor
lret
in
push
cs
jbe
xchg
mov
jl
fistpl
xor
xchg
pop
lock
push
mov
xor
in
stos
adc
mov
dec
pop
sbb
or
jno
pop
mov
sbb
repnz
aaa
jge
jnp
mov
out
das
int
mov
out
test
push
xchg
pusha
in
mov
sub
push
xchg
shll
xor
push
pop
and
or
pop
cld
xor
mov
mov
shl
icebp
fidivrl
test
pop
hlt
mov
sub
push
std
add
lcall
jae
lahf
scas
adc
and
outsl
jecxz
popa
lock
call
xor
xchg
sbb
std
out
cld
mov
push
jmp
cmp
pusha
lods
addr16
dec
loopne
loope
daa
mov
or
loope
dec
mov
xchg
sbbl
cmp
xor
nop
mov
je
repz
push
add
aam
rorl
popa
lods
cmp
push
jno
je
sbb
pop
push
jns
hlt
xor
lods
pop
lea
jl
arpl
loope
aaa
pushf
jl
jecxz
das
dec
cltd
lock
fsubrs
stc
mov
ds
mov
inc
add
jmp
and
dec
leave
inc
lock
xchg
or
inc
in
mov
jmp
jge
dec
add
fdivr
xchg
push
mov
mov
xchg
xor
sub
orl
or
mov
push
mov
lock
arpl
jg
lock
shlb
or
outsl
adc
lahf
xor
push
loop
or
test
hlt
frstor
xor
jnp
out
arpl
push
movswl
leave
xchg
sbb
cltd
sbb
movsl
inc
or
pop
push
and
push
pop
add
not
mov
in
mov
ret
push
xor
lock
sub
mov
int
and
mov
xchg
mov
or
or
clc
push
movsb
dec
inc
dec
push
xchg
mov
cli
ljmp
std
sub
and
jg
sahf
adc
jae
aaa
add
mov
adc
imul
cmc
mov
popa
popf
xchg
push
insl
mov
rol
jae
xor
pop
imul
bswap
in
adc
jae
xchg
shl
and
xchg
fildll
mov
das
xchg
jae
mov
ja
mov
xlat
or
lea
adc
and
dec
inc
clc
mov
adc
xor
movsl
inc
je
pop
dec
push
std
dec
lock
cmp
cmp
lret
ror
loop
mov
fwait
dec
jmp
push
dec
cwtl
sub
push
adc
les
shrl
cwtl
pop
push
cmp
nop
mov
or
rorl
fiaddl
imul
xchg
hlt
cmpsb
in
ja
into
adc
ljmp
pop
push
fsubrl
loope
cmp
dec
fdivs
push
insl
fisubrs
loopne
into
cwtl
shl
sets
inc
jecxz
mov
fisubrl
mov
pop
sbb
imul
iret
or
adc
scas
xchg
mov
cwtl
out
push
jb
push
repnz
and
lea
arpl
mov
mov
push
loopne
push
mov
cmp
xchg
lock
jl
ja
inc
sub
inc
and
inc
push
ret
push
push
in
cld
pop
pushf
enter
repnz
decb
adc
add
and
add
xor
pop
lock
xor
pusha
cmc
cmp
test
into
jnp
movsl
fnstenv
nop
or
mov
fimuls
push
int3
lods
sbb
sub
mov
cmp
xchg
popf
imul
push
cmc
rcrb
call
and
outsb
jne
sbb
mov
xlat
lock
test
popa
sahf
das
repnz
add
lret
data16
mov
mov
lock
mov
add
pop
imul
dec
loope
das
in
into
mov
int
mov
lods
orb
outsb
in
iret
sbb
pushf
sbb
pop
xchg
out
or
ret
adc
cld
jmp
cwtl
xor
or
addl
push
cmp
mov
push
lea
adc
mov
push
or
test
pop
push
fsubrs
sub
fstpl
mov
add
mov
push
or
jg
stos
adc
sahf
sahf
in
lods
add
aaa
fs
rorb
push
push
les
hlt
arpl
outsl
nop
lret
dec
int
das
aas
notb
mov
std
loope
faddl
dec
nop
sub
jl
sbb
xchg
xor
in
inc
push
addr16
xlat
notb
adc
add
or
jge
or
and
in
hlt
xchg
dec
xchg
shll
lea
jno
mov
adc
sbb
push
cs
inc
jge
or
push
aaa
cmp
mov
fs
mov
in
dec
dec
push
add
call
loopne
cmpsb
lods
pop
or
mov
repnz
stos
xlat
adc
mov
or
jae
enter
hlt
mov
pop
mov
pop
out
sbb
pop
in
hlt
adc
and
jge
stos
enter
hlt
test
mov
xor
dec
scas
xor
in
test
sbb
int
out
pop
sti
lcall
hlt
jl
leave
shl
mov
mov
hlt
inc
add
xchg
adc
dec
sbb
iret
mov
aaa
adc
sarb
out
insl
ret
jl
xor
stc
sbb
xchg
out
leave
lock
adc
push
mov
xchg
push
add
pop
xor
in
std
and
lock
cmp
sti
shlb
mov
rcrb
mov
xor
out
mov
lahf
fsubrs
xchg
fstps
dec
out
lcall
cmp
dec
mov
lock
adc
hlt
pop
push
pop
xchg
mov
arpl
into
lock
lods
aad
dec
out
shlb
pop
jbe
mov
out
xor
shl
push
dec
andl
add
pop
cwtl
test
stos
mov
cmpl
repnz
xlat
push
out
fdivrs
mov
sbb
pop
xchg
cmpsb
scas
ss
hlt
mul
push
ljmp
dec
outsb
lods
in
jb
and
push
mov
std
push
gs
ror
lock
push
jb
aad
or
dec
inc
sahf
out
jecxz
insl
sub
imul
xor
mov
nop
sbb
stos
in
stc
faddl
lcall
cmpsl
mov
inc
mov
outsl
sbb
lock
jns
xchg
xor
clc
mov
hlt
cmp
xchg
dec
xchg
aas
mov
xchg
pop
add
xor
push
mov
ss
or
dec
pop
sub
inc
popa
into
mov
loopne
outsl
dec
and
in
sub
jno
mov
bound
mov
nop
mov
adc
call
lret
push
or
dec
pop
movsb
iret
out
mov
clc
int3
fwait
mov
scas
push
enter
jge
push
jo
into
lret
adc
pushf
lock
and
fcoml
fucom
xor
lods
mov
dec
pop
scas
in
pop
inc
popa
xchg
cmp
pop
push
cmp
lcall
push
aam
mov
insl
popf
mov
mov
leave
in
push
adc
sub
dec
mov
test
insl
cmp
dec
inc
cli
pusha
in
movsl
rcrl
inc
gs
into
adc
int
mov
mov
xor
adc
int
or
negb
dec
into
dec
je
pop
pop
repz
icebp
push
test
arpl
lea
out
dec
int
or
mov
outsb
addr16
push
insl
dec
jp
mov
cmp
lea
rorl
push
mov
jge
scas
dec
in
push
scas
jno
fisttpl
cmp
dec
xchg
aam
das
in
outsb
pop
push
out
gs
or
xchg
std
inc
adc
outsb
int
insl
pop
sete
dec
popl
lock
fwait
sub
subl
int
jmp
sar
sbb
punpcklwd
or
sbb
fwait
pop
and
lods
pop
int
scas
nop
mov
push
rolb
insl
jo
dec
out
push
std
push
idivl
aas
dec
xor
pop
lcall
psrad
scas
iret
push
cmp
push
out
push
pushl
jno
add
add
push
pop
movd
sti
fwait
pop
int
pop
popf
xlat
jo
dec
pop
xor
bound
mov
orps
xchg
fbstp
in
insl
lcall
out
xchg
jge
dec
mov
into
rcll
iret
mov
jg
xlat
pop
jle
xchg
dec
setg
mov
jno
shrl
and
fimuls
loopne
int
pop
xchg
nop
jno
popa
sbb
leave
in
mov
adc
ficoms
dec
out
xchg
push
scas
push
das
mov
rcl
outsb
sbb
and
pop
lock
call
out
fisubs
ficomps
pop
mov
bound
ficoms
mov
gs
jle
fisttpll
stc
std
sbb
outsl
out
sarb
divl
fisttps
loopne
dec
js
stc
push
insl
or
jno
inc
aam
inc
dec
mov
gs
lret
shr
mov
push
out
adc
out
call
xchg
adc
scas
cmp
pop
scas
lret
cwtl
push
decl
dec
out
dec
iret
ds
push
inc
xchg
dec
stos
jns
and
mov
fdivp
cmc
aad
nop
movsb
adc
pop
int3
daa
jp
outsb
dec
adc
cwtl
xor
test
test
push
ret
cmpsb
addl
and
and
push
inc
mov
daa
pop
ret
icebp
xor
mov
cmpsl
push
jbe
movsl
jle
and
xor
pop
or
pushf
repz
sub
push
in
adc
in
jge
pop
or
hlt
movsl
mov
jnp
xor
adc
jp
roll
and
xor
or
or
or
sbb
test
dec
popa
subb
mov
mov
aam
lock
sbb
mov
mov
adc
lret
aad
inc
cs
ret
xchg
paddusw
and
adc
mov
jae
inc
test
push
fwait
xchg
pop
movsl
xchg
into
and
out
mov
lods
hlt
or
pop
daa
inc
mov
sbb
or
xchg
outsb
andb
subl
iret
lods
test
hlt
daa
cmpsb
dec
add
popf
pop
in
mov
movsl
inc
sarl
std
cs
ret
dec
stos
or
mov
sub
cmp
sbb
jae
ljmp
xchg
xor
cmp
jne
test
sbb
or
jb
jb
aas
hlt
jmp
lock
xor
out
inc
arpl
xor
add
push
inc
and
cs
adc
cld
add
in
pop
pop
out
in
pop
push
pop
ret
sbb
or
mov
lcall
rclb
rol
xlat
cmpsb
sub
cmc
iret
jl
inc
cltd
stos
jo
cwtl
push
sbb
sti
adc
stos
mov
mov
fdiv
xor
push
fwait
dec
pop
and
cmp
jae
cmpsl
ret
inc
ljmp
push
xor
leave
sbb
inc
into
in
xchg
iret
xchg
cltd
push
adc
mov
fcomps
mov
xor
add
outsl
addb
sbb
mov
pop
dec
lock
into
icebp
pop
lock
dec
jae
or
iret
xor
mov
jle
jbe
mov
in
dec
cmp
mov
sahf
xor
sbb
jno
mov
mov
dec
pop
inc
out
adc
aas
lret
jae
hlt
jo
push
pop
dec
push
mov
jae
pop
push
mov
notl
fsubs
mov
push
enter
inc
adc
jne
imul
jae
dec
or
ss
insl
in
stos
out
mov
push
lcall
push
jo
xor
notb
push
enter
adc
dec
xchg
pop
mov
mov
sbb
dec
lods
cwtl
loopne
sub
dec
out
mov
icebp
mov
or
inc
scas
mov
mov
xchg
je
fcmovbe
dec
addr16
hlt
push
ja
and
aad
std
ss
out
jecxz
pop
pop
mov
int
int
popa
push
aas
lods
ds
rep
and
fldl
sbb
sub
mov
sbb
adc
popa
mov
mov
pop
add
dec
pop
jnp
fistps
imull
sub
or
lods
insl
mov
lods
xor
jecxz
int
adc
ljmp
and
sbb
in
sbb
in
insl
mov
lea
dec
in
icebp
outsl
lea
push
icebp
xor
lea
leave
icebp
dec
stc
dec
iret
mov
xor
int
int
pop
nop
lea
push
pop
or
aas
mov
lods
frstor
lret
lea
stos
xchg
in
shlb
xor
icebp
jmp
jne
ret
iret
jo
int
pop
sbb
push
insl
into
loopne
lea
ss
ret
sbb
out
outsl
lea
fisttps
int
inc
ja
in
insl
lcall
push
in
test
pop
int
loop
int
lods
jo
push
lret
xchg
outsl
pop
dec
xchg
pop
mov
shrl
or
rcrl
jecxz
outsl
insl
and
jne
repnz
scas
rcr
int
icebp
sbb
icebp
das
jne
jg
pop
lret
jg
out
cmpsb
or
xchg
outsb
mov
gs
push
pop
scas
nop
insl
lods
lret
mov
cmpsb
std
xchg
fnsave
xlat
mov
push
decb
lea
xchg
lods
aas
pop
fisttpl
divb
fidivs
xor
adc
jne
shrl
in
cmp
imul
lods
rcrl
cmp
mov
mov
sahf
dec
sbb
jg
insl
dec
mov
jno
popa
and
jge
lock
ds
andl
pop
int
cs
das
aas
js
jbe
stc
insl
fnstsw
rcrl
insl
mov
ror
lods
in
outsb
xor
popf
int
pop
icebp
lcall
push
aas
cltd
xorb
out
out
lea
pop
jno
shll
cs
xchg
bound
sbb
pop
int
cmp
or
in
stc
insl
and
ficomps
mov
sbb
jb
jg
movntq
out
ds
hlt
sub
push
jno
pop
push
aaa
cmc
sub
gs
loope
js
xorl
cmp
push
add
out
jno
das
test
pop
aaa
jg
mov
clc
sub
insl
js
pop
lret
pop
hlt
or
nop
out
imul
es
movsl
dec
add
jne
mov
and
loope
repz
sub
or
test
jae
jae
cs
and
lcall
or
bound
mov
subb
xchg
jnp
xlat
lcall
sub
jecxz
sahf
dec
outsb
out
sbb
lods
and
lea
mov
sti
or
add
sbb
lds
scas
adcb
test
outsl
jae
xor
jae
push
and
icebp
xor
std
adcl
bound
shl
lahf
ret
add
push
lds
jbe
inc
lahf
jg
xchg
jns
mov
sbbb
mov
jmp
out
addl
mov
jp
lcall
ljmp
repnz
push
mov
ret
dec
inc
in
mov
dec
dec
in
push
sbb
lock
push
je
lods
xor
es
lret
shrl
std
sbb
lock
aad
sub
pop
stos
lret
repnz
outsb
dec
into
hlt
sbb
pop
int3
sub
sub
insb
hlt
dec
repz
inc
add
sbb
pop
out
loopne
push
repnz
outsl
mov
or
nop
inc
arpl
mov
imul
sti
jne
cli
mov
and
and
je
lods
adc
xor
arpl
pop
push
jno
out
push
enter
cmp
test
les
jno
inc
sbb
ficomps
jp
cmp
js
sahf
mov
inc
jb
cli
das
xor
aam
mov
xchg
hlt
out
or
frstor
cli
jno
dec
stos
icebp
jbe
pop
dec
gs
in
mov
ret
adc
jbe
or
hlt
mov
cmp
decl
lock
out
lret
loope
scas
mull
cmp
add
aam
movsb
into
fbld
lea
jg
xchg
movsl
sbb
jp
fucomi
xchg
lods
sbb
mov
sti
fndisi(8087
cmp
inc
in
ss
mov
adc
push
mov
dec
cmp
pop
adcl
jmp
lock
push
shlb
ja
adc
jo
ret
mov
ja
addr16
sbb
lret
lock
fcomip
xor
sbb
and
sbb
push
fwait
out
lods
xchg
xor
ljmp
dec
push
pop
fistpl
xor
dec
jmp
mov
lret
jmp
je
adc
add
test
cli
cmpsb
cmp
jp
inc
push
inc
mov
pop
inc
sti
and
fdiv
mov
cs
test
add
lahf
push
add
xor
into
pop
adc
outsl
adc
jl
xor
sahf
mov
out
int3
lcall
jae
xor
or
idivb
dec
cltd
sub
jae
sahf
add
popf
mov
xchg
adc
je
jmp
push
jge
xor
popf
daa
lahf
jne
es
pop
xor
movsl
dec
push
pop
mov
cmp
js
in
cwtl
std
sub
xchg
enter
insl
sbb
xor
cwtl
inc
xor
lds
pop
or
bound
xchg
pop
rcll
clc
cli
pop
sub
imul
repz
inc
lock
jbe
ficoms
mov
xchg
inc
xchg
adc
jecxz
mov
aam
and
adc
lret
inc
lcall
cmp
mov
bound
sub
iret
or
shlb
loopne
jl
insl
push
cmp
sub
jo
jnp
mov
icebp
xchg
sub
pop
mov
jno
out
lods
xor
test
sahf
jns
dec
icebp
dec
mov
and
hlt
jns
mov
push
insl
pop
dec
mov
adc
cs
adc
dec
mov
pusha
add
or
jb
sub
stos
lock
pop
in
mov
fisubrs
jne
pop
clc
adc
out
rcrb
inc
sti
mov
lcall
les
sahf
repnz
pop
nop
sub
ja
mov
in
fcomps
and
movsl
jno
mov
out
jle
faddp
jmp
lock
inc
sub
lahf
ds
xchg
gs
cwtl
xchg
out
xchg
xor
arpl
push
jg
dec
dec
dec
lock
daa
fldenv
add
mov
dec
pop
pushf
cltd
mov
sbb
stos
lock
add
pushf
pusha
out
loopne
jg
pop
jp
adc
inc
sbb
mov
dec
push
mov
rcll
lods
int3
lret
xor
cwtl
pop
add
in
sbb
push
lock
loopne
outsl
loope
test
sbb
xlat
lcall
stos
loope
mov
lea
mov
dec
gs
fisubl
sbb
sbb
pop
add
stos
cli
lea
mov
push
pop
jmp
push
fidivl
cmc
and
adc
adc
mov
add
int
ret
xchg
inc
cltd
hlt
pop
dec
das
ss
arpl
movsb
mov
xchg
push
cwtl
sbb
notl
add
cmp
adc
add
mov
adc
inc
rclb
jg
mov
pop
fwait
dec
push
loope
int3
inc
ss
and
pushf
aaa
hlt
fisttps
and
xchg
ficompl
popf
lret
arpl
popa
mov
insb
xchg
lods
mov
mov
shl
setns
cmp
cs
push
mov
inc
pop
xor
int3
push
in
cmp
jbe
out
out
rorb
and
imul
or
mov
push
sbb
sarb
cwtl
nop
xor
in
push
sub
pop
lods
jae
jnp
test
jl
insb
push
mov
out
aaa
data16
lahf
cltd
inc
pop
jno
dec
rorl
add
cwtd
movsb
jns
xlat
scas
mov
inc
lcall
cmp
stos
hlt
int
out
jno
dec
imul
icebp
in
mov
sub
push
cmpsl
cli
cmp
lock
in
or
pop
sbb
movsl
and
je
ss
push
inc
adc
sub
adc
xchg
imul
aam
inc
xchg
xor
inc
jle
mov
popf
mov
jns
in
call
xchg
xorb
into
push
shrb
cmp
xchg
inc
mov
jo
aam
hlt
adc
movsb
fs
lcall
push
push
cmp
mov
clc
mov
push
jb
jae
fcomi
fiaddl
pusha
sti
mov
jp
jp
jg
dec
dec
lock
pop
pusha
pop
inc
jge
imul
sub
clc
dec
lds
mov
add
push
lret
daa
push
pop
lock
cwtl
adcb
push
xchg
nop
ret
fs
sub
dec
int3
add
hlt
xchg
dec
outsb
dec
mov
enter
dec
cmp
imul
insl
hlt
mov
scas
stc
push
das
sub
jo
arpl
jae
dec
cmpsl
sub
stc
orl
in
int3
mov
mov
and
add
xchg
xor
test
decb
push
call
push
or
pop
int
push
and
fwait
cmpsb
rcll
into
push
repz
dec
aas
andb
xchg
mov
rorb
jne
xlat
setns
enter
fs
mov
je
mov
or
aaa
psadbw
out
add
cmp
jmp
pushf
mov
pop
out
push
pushf
push
jmp
add
dec
out
pop
and
ja
lcall
sub
push
or
xor
xor
int
mov
insb
into
dec
loopne
nop
rclb
lock
movsb
mov
cwtl
sbb
call
clc
ret
xor
nop
mov
fcmovu
jg
clc
mov
sbb
dec
bound
out
push
scas
inc
adc
decl
jg
pusha
les
push
inc
mov
jae
sbb
sub
cmpl
popa
dec
jb
repnz
sub
adc
cld
jmp
add
inc
fld
fsubrs
jge
pusha
mov
adc
xor
or
out
mov
ret
pop
es
jecxz
icebp
mov
adc
pop
test
rcr
call
pop
fxtract
adc
push
andl
xchg
cmp
ret
shrl
jecxz
xchg
pop
aas
test
arpl
xor
inc
cmp
out
mov
clc
inc
mov
outsb
add
ja
jmp
sub
sbb
dec
xchg
jge
push
cld
push
movsb
mov
and
data16
add
sahf
dec
xchg
cwtl
fsubrl
js
data16
jecxz
ss
sub
fmuls
xchg
fsubp
leave
xchg
sti
pop
pop
mov
fwait
mov
popf
lea
sbb
mov
cmp
insl
fistps
sbb
dec
scas
xor
push
cmp
lock
push
cmp
xchg
push
and
movzbl
or
push
out
push
mov
cld
add
adcl
je
mov
out
das
clc
lret
pop
lods
add
add
jb
push
fiaddl
loop
xchg
rcl
or
lock
aaa
pop
xchg
xlat
adc
add
dec
mov
push
sub
sbb
push
mov
sbb
orw
enter
out
push
pop
xor
jmp
add
fnstcw
pop
cmpsl
popa
push
lock
pop
push
popa
movsb
jno
pushl
inc
mov
dec
mov
hlt
mov
dec
arpl
scas
std
dec
jp
sbb
xchg
mov
jle
jo
mov
cmp
std
adc
adc
inc
cmp
in
stos
cmc
inc
mov
lods
mov
and
sbb
add
das
lods
sbb
addr16
dec
lret
cmp
subb
dec
sub
pop
push
push
pusha
imul
mov
adc
int
inc
add
mov
fidivrs
push
stos
cwtl
sti
jge
aas
in
out
rcrl
inc
stos
add
xor
aas
fwait
aas
scas
cmpsb
cmp
dec
sbb
pop
or
sbb
or
fwait
aaa
xchg
xchg
mov
hlt
test
jbe
ds
arpl
fstps
ret
xchg
mov
mov
sbb
dec
int
out
mov
pop
lahf
loope
add
repz
jle
jl
cmp
dec
cltd
lock
mov
mov
cltd
pop
or
xor
cmpsb
adc
out
xor
or
mov
pushf
sub
mov
mov
mov
cs
out
cli
mov
cmpsb
loope
std
pusha
orl
movsl
inc
mov
fcomi
in
mov
jbe
subl
xchg
push
jge
loope
out
mov
int
push
mov
outsl
xor
std
xlat
sbb
data16
neg
and
mov
sbb
out
addb
dec
jb
dec
xor
sub
roll
sub
push
jmp
popa
test
cmp
adc
push
lods
hlt
roll
sub
ja
pop
add
jnp
jp
pop
out
inc
xchg
mov
jae
iret
cld
addb
out
jno
daa
inc
mov
loop
daa
fwait
loope
jle
insl
outsb
hlt
arpl
loopne
jns
mov
inc
push
decb
xchg
addb
fdivs
jno
xor
in
jmp
je
out
xchg
std
pop
or
into
imul
xchg
sub
mov
dec
lret
iret
gs
push
pop
ret
shld
pushf
pop
into
dec
mov
adc
pop
ds
adc
inc
push
xchg
jle
aad
cmp
imul
std
mulb
popf
fs
pop
xor
fisubs
sahf
or
inc
jb
inc
jb
pop
cs
mov
xor
out
fisttpl
xchg
icebp
hlt
pop
shrl
jge
lock
and
sbb
dec
cmp
out
stos
rolb
add
lcall
add
ja
std
sub
or
sbb
cltd
lea
hlt
out
inc
movsl
add
mov
gs
sarb
arpl
and
retw
xor
in
ss
push
jge
std
into
jae
mov
jle
mov
xchg
dec
in
stc
into
pop
sub
pushf
cltd
adc
mov
pop
adc
or
ljmp
jmp
into
addr16
je
xor
jae
push
push
mov
and
or
dec
in
cmp
testl
lods
xchg
mov
add
lcall
jmp
fsubrp
adc
ret
loop
sti
jb
mov
daa
jnp
cwtl
cmp
xchg
sbb
dec
int
pop
jp
iret
shl
scas
sbb
imull
cmpsl
sub
mov
push
push
fadds
jno
mov
mov
push
sbb
lea
out
out
or
fs
test
popf
fildll
push
sarb
mov
mov
jns
mov
or
or
jns
test
dec
leave
push
xor
ja
shrb
and
xchg
dec
mov
aam
or
mov
mov
mov
xchg
pop
and
bound
hlt
sbb
das
mov
mov
fistps
jne
ja
or
cmpsl
in
push
stc
push
hlt
and
xchg
dec
hlt
xchg
es
leave
cmp
mov
sbb
add
hlt
and
pop
cmpsb
pop
inc
dec
push
ficoml
add
pop
inc
js
jno
push
add
jge
je
push
pop
xchg
inc
int
icebp
dec
sahf
add
daa
and
push
jge
add
xchg
lock
outsl
lods
and
lret
int
popf
cwtl
leave
sub
xchg
xchg
outsl
enter
adc
lods
push
or
inc
cltd
sub
pop
and
loope
mov
sbb
jecxz
jns
bound
pop
pop
test
dec
sbb
cmpsb
fimuls
imul
xchg
cmp
hlt
xchg
inc
push
cmp
orl
push
push
loop
cmpsl
cmp
or
shl
fdivrs
imul
or
xchg
lret
stos
adc
gs
jl
int
push
or
test
mov
adc
add
cltd
dec
cwtl
cmp
push
jnp
inc
hlt
cli
add
outsb
xchg
in
cs
ja
push
pusha
js
push
loopne
mov
sbb
xchg
jno
hlt
add
inc
push
adc
fstps
mov
aam
pop
gs
imul
js
jb
stos
adc
or
out
push
add
mov
aas
xchg
popf
sub
test
fstps
cltd
and
iret
push
lock
add
pop
popa
aaa
jbe
adc
xchg
jge
data16
mov
scas
and
imul
std
fs
jns
pop
mov
dec
jne
cmp
mov
shll
cmp
xor
jae
sub
insl
and
pop
jno
lock
adc
loopne
mov
inc
inc
out
mov
outsl
mov
mov
push
arpl
nop
or
rorb
int
sbb
and
cmp
repnz
repnz
jp
popa
out
int3
divl
in
aas
dec
sti
sub
xor
lahf
out
and
xor
pop
cmc
loop
popa
pusha
sub
lods
bound
ja
push
pop
sahf
xor
add
gs
mov
cltd
das
mov
xor
fstps
popa
mov
lock
xchg
fnsave
ret
lcall
jno
hlt
jne
push
jno
sahf
cmp
mov
mov
lahf
jns
sbb
adc
jmp
nop
jmp
push
pop
sub
sub
xchg
aaa
fnstcw
je
repz
push
arpl
jns
arpl
fs
gs
dec
lret
cwtl
mov
push
mov
sbb
dec
mov
adc
enter
cld
mov
jae
call
fidivrl
in
outsl
in
mov
lea
pop
or
into
mov
mov
int
call
push
inc
inc
popa
jae
sbb
dec
jnp
cmp
xor
into
mov
add
stos
gs
fwait
lret
mov
xchg
xor
sub
fldl
xor
push
add
push
mov
js
je
and
adc
fmul
int3
hlt
ss
adc
cmc
inc
pop
sbb
cs
xor
xchg
fiadds
mov
out
or
and
les
adc
mov
jbe
and
jae
jo
xor
mov
ret
jl
xor
repz
jo
hlt
push
mov
fcomi
loop
push
ja
es
fistl
jle
xchg
fwait
das
shrd
call
into
lock
pop
lock
mov
jge
jo
scas
dec
popa
inc
jecxz
mull
clc
pop
scas
inc
xor
andl
daa
cmpsb
aam
out
push
mov
jp
cltd
rorl
out
andb
icebp
inc
popf
mov
clc
lahf
dec
out
call
incb
xchg
and
adc
rcrb
push
xor
dec
xchg
loope
test
lock
mov
inc
lret
xor
mov
loop
cmp
pop
inc
or
sbb
sub
xor
lods
mov
sahf
mull
or
push
adc
nop
testb
push
pop
cmp
dec
in
clc
int3
push
mov
push
dec
imul
pop
lea
shl
out
cwtl
inc
mov
arpl
pop
hlt
lcall
repz
hlt
ficompl
into
pushl
jge
mov
scas
push
sub
mov
cmpsl
mov
mov
ret
js
sbb
dec
test
push
pop
hlt
cmp
jnp
sub
loopne
pop
pushf
mov
mov
xchg
outsb
dec
test
xor
fnstsw
fsubr
jbe
push
cmp
loope
cmpsb
jno
lods
aad
mov
iret
adc
mov
mov
loopne
imul
mov
mov
jns
sub
add
out
insl
xchg
int
lods
leave
ja
nop
pop
dec
enter
and
clc
sbb
mov
push
xchg
gs
imul
loop
sti
xchg
cld
scas
push
int3
dec
mov
lock
mov
cld
mov
add
xchg
clc
test
aad
push
mov
mov
inc
and
hlt
test
push
jp
add
adc
add
xor
jae
inc
sub
notb
stc
add
stos
icebp
fcoml
hlt
sub
pop
inc
mov
xor
mov
nop
jae
pushf
or
mov
scas
mov
and
inc
push
jge
xchg
push
test
int3
popa
dec
mov
aas
xor
cmp
pop
mov
sub
xchg
cmp
out
hlt
adcb
jns
xchg
je
mov
sub
sarl
and
dec
sahf
out
adc
repz
push
jbe
cld
inc
lcall
stos
jg
lods
xor
int3
xor
pop
dec
dec
inc
fwait
pushf
mov
xchg
int
stos
xchg
lock
add
lret
jl
sahf
lods
pop
call
filds
or
jp
jecxz
mov
adc
lock
inc
jae
lock
xchg
fisubrs
sub
jg
adc
xchg
cmc
sti
adc
mov
add
addr16
aam
rcrl
hlt
clc
mov
and
jp
pop
mov
push
fmull
lock
push
stos
jb
push
loop
lods
jb
pop
lea
std
outsl
pop
divl
fs
lods
adc
movsb
leave
std
xchg
dec
mov
lods
ficoml
xchg
xor
pop
std
mov
mov
cltd
arpl
xor
aam
xchg
jg
pushf
xchg
xchg
gs
adc
adc
push
xchg
arpl
shll
mov
call
std
into
insl
rcll
dec
add
jecxz
lock
pusha
and
add
int3
mov
scas
and
mov
js
popa
sahf
mov
pop
sbb
xchg
decb
cmpsl
sub
dec
sahf
lock
mov
out
mov
push
mov
iret
std
data16
movsl
dec
adc
jp
xor
popf
jbe
sbbb
mov
hlt
int
or
push
out
lods
arpl
xchg
fistps
test
cmovb
or
mov
sahf
or
cmp
or
pop
adc
fdivl
and
sub
jnp
add
cmc
test
stos
mov
jns
xchg
ret
rolb
adc
pop
movsl
pushf
loopne
and
xor
xchg
dec
rol
out
push
xor
out
inc
test
and
in
push
fsub
loope
into
pop
or
cwtl
xor
cld
lea
cmp
insb
lret
lods
jae
movsl
ds
push
ds
push
cmp
adc
jle
pop
inc
pop
pop
sub
sbb
dec
jle
sub
in
jno
out
call
adc
pop
xlat
ss
sbb
icebp
dec
mov
fldcw
insb
inc
cmc
test
add
dec
out
out
mov
xor
adc
call
jl
scas
mov
cmc
stos
add
sahf
ficoms
fsubl
sbb
outsb
inc
mov
dec
je
mov
adc
mov
or
shl
adc
jecxz
push
adc
sbb
jle
sbb
lea
rcll
jne
pushf
push
imul
andl
jns
cmpsl
test
mov
loopne
xchg
lock
mov
mov
lock
xchg
out
mov
xorl
iret
xchg
movsl
mov
sbb
mov
jp
cli
push
enter
sahf
mov
repz
lahf
test
insl
rcrl
xchg
into
cmp
shrl
jle
sbb
out
push
push
jle
popa
movsb
insl
cwtl
and
into
out
sub
std
jge
push
popa
or
daa
les
into
movsb
dec
push
lods
mov
popf
into
push
sub
bound
xorb
mov
mov
mov
in
xor
cmp
insl
outsl
fbstp
mov
std
push
push
fstl
stos
pop
dec
inc
inc
jae
or
push
xchg
jbe
ss
out
insl
loope
xchg
lahf
call
push
in
lret
out
jno
out
sbbb
lods
push
xchg
repz
mov
fldl
mov
push
push
adc
dec
out
xlat
lret
minps
popf
test
loope
and
mov
adc
jae
inc
punpcklbw
jl
stos
out
push
jl
push
mov
test
dec
cmp
fsubs
repz
push
sub
hlt
xchg
ret
mov
inc
lahf
scas
aad
popa
push
clc
mov
and
insl
pop
lahf
or
jge
insl
lcall
pop
mov
imul
hlt
repnz
or
bts
mov
fwait
stc
imul
test
sub
scas
mov
test
push
cmp
sbb
loop
push
out
std
or
pop
jo
enter
mov
jbe
loope
stos
call
call
jno
ljmp
ja
aas
xor
pop
stos
push
insb
leave
hlt
cmpsb
xchg
xchg
iret
xchg
dec
mov
adc
xor
push
mov
jmp
sbb
fdivrs
dec
pop
out
mov
ss
mov
cmp
cli
jae
fstps
add
pop
cmp
pop
fwait
repnz
lret
in
xchg
mul
jb
pop
lret
das
push
out
mov
ds
fwait
push
or
movsl
xor
fisubl
lcall
xchg
xchg
xchg
xlat
mov
in
call
in
sarl
hlt
jecxz
ljmp
fstl
int3
lock
je
xlat
pop
jae
je
cmp
lock
add
ljmp
xor
mov
xlat
sbb
jle
clc
jns
lock
icebp
inc
testb
scas
dec
jp
daa
in
add
mov
add
dec
xchg
lods
fcmovb
pop
jmp
sbb
push
sbb
imul
mov
shr
mov
loop
pop
pop
pop
fwait
jp
mov
push
sbb
inc
loopne
mov
lcall
dec
sti
icebp
push
aam
ret
shlb
xlat
ret
hlt
jge
out
sbb
and
icebp
push
dec
mov
insl
cmp
sbb
xor
arpl
adc
inc
loop
arpl
rcrl
enter
add
jg
pop
popf
fldenv
scas
mov
or
push
popa
xchg
mov
mov
stos
jecxz
sub
jl
dec
ficoml
fdiv
xchg
lods
stos
sahf
xor
add
mov
lods
push
jl
jle
sub
jb
std
jmp
stos
fsubl
ljmp
popa
out
in
fwait
xor
lret
dec
data16
lcall
enter
xchg
ss
push
cmp
or
fdivrs
pop
inc
call
outsb
xchg
sub
jbe
and
mov
out
loope
sti
mov
jmp
enter
xor
and
pushf
sti
dec
addb
cmp
mov
xchg
and
push
lods
hlt
scas
push
or
daa
jge
popf
repz
jecxz
scas
hlt
and
aas
lods
cwtl
jo
out
gs
movsb
ret
mov
jnp
rorb
xchg
xchg
into
and
hlt
lret
cmp
or
jp
sub
in
out
icebp
fsubl
jmp
push
in
dec
iret
aad
mov
cmpsb
add
nop
out
out
pusha
or
inc
loope
pop
mov
or
aad
popf
push
pop
jne
jno
adc
mov
xchg
pop
cmp
shlb
dec
les
mov
in
pusha
dec
dec
push
out
les
popa
in
lock
xchg
leave
aas
popa
xchg
jno
pop
shlb
shl
test
repz
cld
and
enter
cmp
fistl
mov
das
dec
or
jb
pop
sub
mov
or
out
push
jg
cli
out
nop
xor
gs
movsb
jp
aam
or
xchg
push
dec
rcr
mov
or
jmp
arpl
nop
mov
xchg
shrb
xor
pop
fistpll
sub
cs
mov
adc
and
cmp
add
fnsave
leave
xchg
push
jo
out
lock
sbb
mov
push
inc
xlat
shlb
mov
test
xor
aad
daa
adc
and
fstpl
mov
mov
enter
jbe
dec
aad
aas
test
and
jb
xchg
pop
test
pop
sbb
outsl
lods
jo
mov
pop
mov
jae
adc
mov
movsl
lock
pop
xchg
jb
inc
dec
subl
mov
pop
mov
and
pop
push
lock
adc
cmp
stos
repz
lods
jae
movsb
int
in
rcll
pop
jno
lds
cld
jns
into
mov
hlt
xor
fsubs
mov
scas
mov
lock
shl
pop
orl
stos
mov
loope
insl
push
push
out
xor
scas
dec
and
shrl
test
imul
pop
push
lods
daa
push
jp
int3
dec
imul
lea
std
fldcw
jecxz
or
shll
arpl
adc
lods
jp
test
xor
xchg
out
subl
and
fidivrl
add
cwtl
popfw
popf
jo
int
jge
fnstsw
gs
sub
int
in
int
fimull
imul
and
mov
xchg
cmp
cmc
mov
push
ror
int
adc
dec
pop
fmulp
inc
sbb
lea
nop
lods
and
or
insl
fiaddl
pop
push
test
lea
call
jne
adc
outsb
lea
dec
and
in
test
in
shll
icebp
lea
push
and
xchg
cmp
sbb
into
xor
negl
out
in
jno
push
sbb
pop
stos
into
xchg
les
lods
sbb
xchg
xchg
lea
push
cmc
jo
dec
data16
sub
mov
adc
cmp
jg
sub
mov
bound
push
jbe
push
and
adc
insl
das
sbb
mov
popf
xchg
pop
push
mov
out
insl
fldl
fs
inc
in
dec
dec
jle
ret
jg
or
iret
shl
pop
addr16
outsl
pop
and
insl
jbe
rcl
fisttps
pop
in
setnp
dec
fistps
lods
int
push
adc
sub
and
ja
add
insl
sub
pop
lods
andb
and
out
fwait
fnstsw
xchg
outsl
adcl
outsl
pop
mov
xchg
push
mov
dec
jge
cmp
fnstsw
pop
scas
jae
pop
jle
pop
jle
push
or
adc
pop
outsl
fistpll
in
scas
pop
cmp
xchg
pop
fiadds
aad
mov
add
nop
frstor
sbb
out
lahf
loopne
inc
inc
jae
cwtl
imul
inc
ficomps
out
and
cmpsb
dec
pop
ss
pop
in
push
adc
jle
unpckhps
jns
mov
fisttps
aam
hlt
nop
xor
lock
xlat
ds
lea
xchg
loope
mov
adc
pusha
cmp
imul
bnd
lret
mov
sbb
xor
fildl
xchg
pop
sbb
xor
bnd
mov
fwait
test
lock
cwtl
das
mov
hlt
xchg
xchg
jae
add
or
iret
ds
jnp
xchg
mov
cs
inc
jmp
into
xchg
push
inc
adcb
xor
add
pusha
xor
adc
int
mov
insb
cmp
lea
ret
dec
out
daa
jle
mov
dec
xchg
out
jg
fdivl
sbb
cmp
call
lock
nop
cs
xor
xor
mull
xor
scas
jnp
mov
jmp
rcr
sub
call
push
jo
test
sub
or
mov
je
stos
cmc
xchg
out
xchg
stc
xlat
stos
xchg
jle
adc
inc
dec
cmp
jne
xor
push
lock
int3
lcall
pop
dec
add
adcl
sbb
pop
lods
push
mov
mov
dec
mov
xchg
daa
xor
mov
pop
lret
mov
jno
sbb
into
xor
addr16
sarb
hlt
dec
ds
lock
movsb
jbe
xor
jnp
test
mov
loopne
jo
jge
dec
stos
adc
and
xor
inc
cmp
hlt
pop
mov
call
insw
push
dec
pop
push
stc
into
sub
and
dec
jno
clc
mov
add
shrl
xchg
xchg
mov
movsl
cmc
movsb
loop
addr16
ja
stos
jnp
subb
hlt
scas
paddusw
xchg
sarb
and
add
sub
jno
cmp
lock
lods
jb
sbb
sbb
aam
arpl
mov
imul
mov
sub
xlat
mov
push
faddl
inc
scas
dec
mov
mov
jbe
xor
or
xchg
jp
sbb
jo
lock
xor
mov
cmp
jg
mov
xchg
jp
loopne
mov
push
mov
and
mov
mov
push
dec
lea
push
jo
sbb
lahf
test
xchg
sbb
dec
mov
or
hlt
cmpsl
or
add
push
adc
xor
or
pusha
stc
adc
cmp
jo
mov
mov
bound
movsl
int
mov
std
mov
cld
push
lret
pop
sub
mov
jnp
dec
call
mov
flds
xchg
cmp
loop
lods
fdivrs
sbb
nop
test
dec
push
xor
in
andb
and
dec
adc
dec
lret
dec
sub
pop
xor
popa
pop
sub
sbb
or
mov
pop
adc
adc
nop
pusha
stos
xor
in
outsb
test
xchg
dec
push
jb
cltd
movsl
outsl
pop
cli
insl
out
mov
push
xchg
daa
push
add
inc
cmp
pop
push
insl
int
into
add
add
cltd
std
lock
sbb
mov
sbb
xor
pop
dec
pop
jae
or
lock
jb
lods
sub
cmpsl
dec
test
dec
xor
push
hlt
andl
nop
cmp
push
push
out
ds
outsb
push
mov
push
cmc
popa
and
mov
aad
repnz
popf
hlt
jmp
fimull
mov
int
cwtl
and
popa
push
mov
mov
jnp
mov
jno
ds
cmpl
popa
pop
mov
mov
lahf
subl
cmp
lods
fcompl
xchg
subb
xor
imul
sub
xor
nop
and
aam
popa
into
pusha
hlt
je
pop
ds
fwait
sbb
pop
jno
into
sub
or
leave
lods
daa
or
and
outsl
and
test
xchg
dec
lahf
dec
cmp
sub
repnz
push
adc
jl
xchg
xchg
repz
in
sti
stos
popa
out
loopw
mov
push
fwait
test
cld
or
pushf
aam
sub
std
sbb
lock
scas
int
daa
in
loop
xlat
sub
lcall
imul
jno
das
fneni(8087
push
push
dec
sahf
mov
adc
pusha
imul
adc
sahf
popf
aas
xor
test
ja
jne
stc
inc
sbb
sbb
bound
stc
jmp
dec
mov
xor
sbb
fidivrl
push
xchg
or
push
call
in
pop
rorb
mov
inc
sbb
and
inc
stos
or
push
mov
aad
lock
ss
stos
mov
push
lret
sarb
clc
mov
jge
push
and
out
mov
lret
and
mov
shl
movsl
das
cmpsb
fbld
push
daa
ja
dec
push
lret
loop
or
mov
mov
sub
lahf
sub
and
pop
xor
inc
dec
dec
cmp
imul
cld
sahf
dec
cli
push
sahf
lock
popf
jl
push
addr16
push
call
and
sbb
sbb
int
imul
scas
insl
inc
sbb
xchg
xchg
iret
shr
dec
mov
arpl
cmpsb
xor
out
cmp
xor
inc
or
mov
mov
addb
lock
stos
push
jg
mov
inc
adc
les
popa
cmp
mov
adc
jns
enter
jle
test
les
clc
xlat
or
hlt
outsb
sbbb
push
lock
inc
dec
test
or
inc
popf
je
push
dec
push
fidivrl
jno
lahf
jb
es
enter
mul
cmp
repz
add
jae
hlt
or
jp
hlt
xor
bound
shll
sub
jp
mov
aad
ds
pop
mov
lock
jne
je
cmp
xchg
notb
or
mov
dec
movsl
jmp
int
cld
dec
into
sub
lock
adc
sahf
cmp
cmp
mov
subb
int
outsb
pop
jle
add
leave
mov
shrl
stos
pop
mov
mov
cmpsb
fsubp
aam
xorb
lock
sbb
jp
test
push
jno
add
inc
rdtsc
cwtl
mov
fildll
je,pn
inc
push
xchg
jge
push
or
in
sub
push
cmp
test
stos
adc
addr16
leave
lods
jae
or
xchg
cwtl
stos
cmc
adcb
push
inc
xlat
rcr
out
adc
push
cltd
popf
dec
pushf
inc
or
fistl
jecxz
rol
orb
fnsave
or
xabort
lret
mov
inc
inc
jl
push
scas
jp
out
in
xor
movsl
mov
mov
pusha
ret
scas
inc
dec
adcl
xor
pop
or
in
mov
enter
andb
dec
cltd
inc
mov
add
mov
sub
stos
cs
lock
cmpb
cmpsb
mov
imul
std
out
jns
lret
adc
outsl
adc
imul
lret
fdivrs
outsl
les
inc
xchg
and
or
ja
pop
mov
leave
or
jne
gs
insb
xchg
pop
mov
mov
mov
jbe
mov
aam
lret
xchg
cmp
mov
nop
aaa
xchg
loopne
jg
xchg
and
in
fisubrs
in
sbb
daa
cmp
cmp
mov
xchg
xchg
fstps
add
mov
fwait
pop
bound
test
cmp
scas
jno
sbb
in
dec
loopne
xor
es
scas
out
int
cmpsl
or
sbb
mov
fcomps
mov
popa
dec
sbb
pop
push
lret
mov
lcall
lock
fs
test
sub
enter
rclb
or
add
dec
xchg
les
fnsetpm(287
xchg
xchg
fstpt
xchg
jg
icebp
sti
mov
scas
jno
in
cmc
movsl
inc
xchg
rorb
std
add
dec
mov
jnp
aad
lods
xchg
dec
inc
arpl
mov
iret
lods
xchg
push
leave
inc
cmpsb
fldl
lock
jecxz
push
mov
cmp
xchg
jmp
lock
jp
lret
pop
xchg
sti
mov
jno
test
pop
push
pop
cwtl
aam
cmp
out
fisubrs
stos
push
into
and
adc
rcl
lret
add
mov
add
xor
arpl
hlt
dec
das
cmc
dec
pop
sub
xor
xchg
gs
add
mov
test
xchg
out
popf
mov
fidivl
mov
les
lods
mov
insl
jbe
push
ret
mov
adc
iret
adc
jle
pop
pop
imul
das
xor
cmpsl
jmp
shlb
cltd
gs
sbb
loop
sbb
lock
xchg
and
lcall
mov
dec
push
ja
pop
mov
jae
out
fmuls
inc
aas
cli
cmp
sub
cwtl
xchg
pop
xchg
pop
push
pop
pusha
dec
push
ja
out
test
test
cli
pusha
rcll
xchg
pop
cmpw
sub
jmp
loopne
adc
cmp
jno
mov
mov
or
push
pop
mov
mov
jle
xchg
pop
add
mov
ds
adc
sbb
sahf
jb
cmp
sbb
mov
icebp
xor
pop
dec
pop
and
clc
push
mov
jbe
xchg
outsl
cwtl
dec
pop
in
jns
pop
rol
jae
pop
aad
or
adc
pop
lock
cld
or
xchg
dec
inc
jno
scas
repnz
lds
xchg
mov
jno
lock
cmp
das
dec
mov
fisttpll
mov
lds
inc
lods
popf
test
cwtl
test
pusha
jne
push
lahf
mov
pop
jp
lret
fistpll
pop
push
das
popf
and
dec
cmc
push
imul
or
popa
stos
jbe
adcl
mov
jne
cwtl
fbstp
xchg
cwtl
hlt
negl
dec
xor
push
rol
jo
push
add
gs
mov
sbb
aam
inc
adc
rclb
mov
xchg
stos
fadds
sti
rorb
xchg
jns
sbb
jno
sti
mov
jno
inc
outsb
push
fdivs
jbe
adc
inc
stc
jb
mov
dec
rorb
lds
jns
cmp
sub
test
scas
out
inc
inc
jmp
mov
jecxz
inc
mov
push
shrb
mov
sub
cmpsb
je
sahf
jl
pop
mov
mov
fwait
out
test
in
fcoml
cmc
cmc
das
sbb
cmp
sub
gs
in
sub
mov
sbb
jb
dec
cmpsb
dec
outsb
ljmp
jae
mov
movsb
pop
aas
sub
lret
xchg
push
push
cmp
std
dec
inc
in
sub
xor
out
das
mov
mov
pop
push
jl
add
sbb
pop
xchg
inc
nop
aaa
into
mov
jg
icebp
pop
dec
dec
xchg
mov
and
push
add
xchg
xchg
stos
xor
adc
or
fmull
mov
mov
call
mov
sub
dec
adc
push
adc
shlb
out
movsl
mov
xchg
ja
and
add
jp
adc
lock
cmp
pop
xchg
into
dec
aad
jecxz
or
pop
rcll
dec
test
insl
daa
jo
ljmp
aam
jb
xor
lea
mov
into
or
jmp
lds
sbb
popa
movsl
dec
out
pop
xor
stc
pop
sub
pop
dec
jle
lea
push
les
jns
sti
jo
movsb
xchg
push
add
xchg
or
xchg
scas
sbb
int3
sbb
inc
xor
jecxz
stos
jno
lods
sbb
add
icebp
jns
lock
ret
ljmp
imul
push
pop
into
mov
into
mov
jne
jnp
adc
jne
pop
rclb
pop
mov
call
rcrl
js
aas
xchg
dec
enter
pushf
jp
nop
push
fs
xchg
xchg
shll
and
mov
mov
jns
push
or
or
fsts
rep
hlt
and
xchg
jmp
fisttps
jbe
inc
add
mov
cltd
inc
lock
jb
mov
jns
mov
dec
mov
inc
add
jnp
mov
mov
hlt
xchg
je
sbb
mov
js
in
into
cs
mov
mov
pop
fists
sub
adcl
or
pushf
or
test
neg
push
push
sahf
push
mov
add
call
lahf
test
or
imul
divl
sbb
cld
add
ljmp
jae
lods
imul
jae
ja
popf
lret
lods
rolb
in
cld
fisttpll
fisttpl
hlt
ficomps
into
cwtl
fisubrl
mov
inc
mov
and
xor
stos
mov
cli
dec
push
test
sbb
inc
xor
sub
xor
es
inc
ds
adc
in
lods
out
cmp
fimuls
xchg
stos
fcompl
sbbl
or
outsb
lods
stos
sarb
push
call
inc
out
enter
mov
mov
arpl
call
mov
xor
lock
arpl
cmp
lret
hlt
xchg
jae
popa
out
pusha
scas
fimull
loope
cwtl
adc
pop
mov
inc
cltd
jge
xor
test
push
mov
adc
push
jp
or
int3
xchg
lods
mov
shlb
mov
mov
cmp
add
hlt
sbb
sub
ret
mov
pop
and
inc
xchg
pushf
xchg
je
lock
xchg
out
les
jge
adc
or
decl
or
xchg
out
pop
xchg
sub
cmp
mov
in
fldt
mov
mov
lods
xlat
jb
xchg
pop
dec
xchg
out
imul
pop
jmp
jecxz
dec
mov
stc
rcrb
sbb
and
mov
cmp
das
loop
pop
mov
stc
std
pop
sti
xchg
push
adc
hlt
cmpsb
cmp
ja
lods
movsb
inc
loopne
sub
push
push
jp
mov
popf
scas
mov
xlat
xchg
cs
lock
mov
cwtl
rcrb
dec
rcrl
pop
ja
jno
in
sub
sub
std
icebp
inc
mov
leave
out
fsts
cmp
fcomps
sbb
xor
jno
inc
test
and
test
mov
push
dec
out
scas
mov
ds
dec
xchg
in
rcr
imul
fmul
adc
mov
mov
scas
imul
hlt
add
std
ret
push
pop
icebp
mov
popf
dec
mov
xor
loope
jecxz
stc
inc
jns
inc
dec
in
inc
sbb
sbb
mov
arpl
mov
push
or
ret
mov
push
imul
mov
mov
mov
clc
inc
mov
scas
add
ret
or
or
or
adc
push
dec
and
mov
test
cwtl
imul
out
xlat
jne
test
repz
cmpsb
and
and
adc
pop
repz
stos
scas
cwtl
jnp
cmp
or
mov
push
ja
mov
int
pusha
jg
jecxz
insl
sbb
divl
int3
out
push
jg,pn
into
mov
icebp
jge
out
sub
xchg
daa
les
nop
jg
xorb
xor
and
std
pop
push
mov
push
and
inc
push
pop
push
lret
iret
shr
cmp
movsb
lret
dec
mov
xchg
mov
push
int3
mov
jg
rolb
out
xor
push
xchg
mov
shlb
lock
xchg
lret
scas
jg
js
movsb
push
xchg
in
and
jnp
xor
lock
xchg
mov
xorl
inc
loope
xor
jp
and
rorb
lret
push
jae
mov
xchg
mov
dec
movsl
clc
push
or
ret
cltd
cld
and
or
popf
movsl
inc
push
add
cmpsl
lret
lods
mov
add
repz
pop
fcmovnb
xchg
or
loope
cwtl
mov
pusha
aaa
push
popf
leave
ret
fsts
int3
fldt
mov
dec
sbb
dec
pop
out
inc
ss
xlat
lea
or
movsl
shlb
add
mov
outsl
cwtl
mov
addr16
shlb
cmp
xor
imul
xor
lret
xchg
cmpsb
outsl
push
sub
sub
ror
scas
jecxz
je
and
xchg
push
sub
es
jb
inc
outsb
add
jbe
jb
sbb
xor
insb
pop
shr
jmp
sbb
inc
pop
dec
xchg
test
movsl
cltd
fcoms
jbe
rolb
mov
aaa
repz
outsl
xor
scas
adc
jg
mov
hlt
in
add
jp
sbb
xchg
cmpsb
push
lahf
imul
pop
push
mov
inc
int
jns
push
stc
popf
xchg
sahf
jbe
or
iret
xchg
mov
aaa
iret
loope
out
test
insl
push
xchg
or
sbb
inc
mov
orl
jecxz
and
pop
aam
fsubrl
xchg
cmpsb
idiv
jmp
shrl
ljmp
xchg
push
mov
gs
sub
ret
mov
or
sbbb
stos
xor
jo
in
pop
ret
xchg
and
add
imul
cmp
xchg
dec
loope
pop
jg
frstor
xchg
nop
or
cmp
dec
or
adc
push
sub
cmc
sub
test
xchg
mov
sti
cmp
into
mov
imul
inc
push
lahf
push
add
jge
movb
clc
lods
in
mov
push
add
aas
inc
cmpsl
popl
and
jbe
xor
dec
xchg
insl
rclb
mov
dec
dec
sbb
sub
insb
push
arpl
std
dec
popf
adc
ja
lock
mov
inc
add
sbb
add
sti
adc
loope
dec
dec
push
mov
and
xchg
imul
jmp
insb
xor
lods
iret
cwtl
push
enter
mov
stc
xor
jl
js
rcr
mov
aas
daa
dec
cmpsb
sbbl
outsl
imul
adc
cmp
mov
mov
push
pusha
and
jns
test
sbb
mov
pop
flds
dec
stos
jns
mov
pop
clc
enter
fnstenv
iret
push
lock
and
push
in
fucom
decb
jp
or
outsb
mov
mov
inc
mov
popa
inc
lock
jg
sub
das
sbb
sbb
je
rolb
cmp
push
hlt
mov
push
gs
mov
imul
fsts
and
pop
dec
mov
stos
xor
test
pop
imul
jmp
inc
inc
dec
out
ret
repz
insl
or
outsb
jge
jno
std
loop
decl
cmpsb
aaa
fwait
ret
aas
gs
cmp
in
test
pushf
repnz
stc
stos
paddusw
push
mov
mov
jl
cmpsb
and
cmp
add
fildll
jp
movsl
add
mov
movsl
cwtl
pop
lods
pop
js
cmp
gs
mov
cmc
sbb
mov
xchg
cmp
sbb
in
lock
lahf
aaa
das
mov
mov
fnstsw
or
sub
aas
jae
push
mov
out
adcb
jns
lock
or
cmpsb
sub
subb
fs
mov
lahf
lock
loope
xor
pop
push
mov
sbb
push
arpl
jle
movsl
lock
aas
hlt
incb
adcb
dec
js
mov
fucomi
pop
lods
xchg
xchg
sub
push
faddp
into
popa
out
aam
cmpsb
jmp
mov
mov
insb
lock
or
cmp
and
pop
sub
jp
sbb
dec
jmp
xchg
bound
mov
hlt
jle
popa
into
push
repz
sub
loope
movsl
movsb
int
xchg
and
sub
pop
ret
push
popf
pop
pop
lock
mov
mov
jnp
adc
or
stos
xchg
add
outsl
imul
outsl
pop
and
mov
mov
hlt
repz
dec
mov
pop
jo
xchg
cmp
pop
hlt
or
mov
sub
scas
or
jae
push
sbb
cmp
jmp
lea
lret
dec
stos
mov
in
lea
mov
push
pushf
push
cwtl
std
push
js
jns
pop
sahf
rcrl
pop
xchg
ljmp
hlt
adc
or
daa
push
cli
sub
adcl
jnp
icebp
pop
into
shrl
into
movsl
or
xchg
dec
dec
lcall
loope
pop
lock
jno
xchg
sbbl
inc
jb
pop
inc
sti
jns
movsb
push
mov
push
adc
inc
jae
pop
push
cmp
hlt
mov
mov
fsubl
pop
jae
cwtl
mov
je
test
sbb
cmp
and
das
mov
nop
sbb
jb
data16
or
lock
cmp
fwait
data16
fs
inc
adc
rorb
adc
pop
adc
subl
lret
filds
pusha
nop
cmp
cmp
test
and
pop
cltd
lock
xchg
xchg
xchg
imul
incb
jae
lret
jno
add
mov
cmp
and
cmpsl
lahf
into
jle
aaa
mov
and
ss
cmp
sub
jnp
add
test
pop
sbb
mov
scas
mov
stos
outsl
lock
cmp
push
insb
sub
mov
pop
pusha
pop
xchg
loope
xor
xchg
mov
pop
fisubrs
and
push
and
add
jno
aas
hlt
lods
enter
mov
mov
pusha
push
pushf
in
jae
xchg
ds
orl
xor
fwait
movsl
sbb
hlt
or
lock
enter
adc
lret
mov
out
xlat
inc
aam
sbb
popf
pop
in
ret
mov
jae
lret
cmpsb
gs
hlt
enter
dec
lock
mov
xor
or
jns
and
dec
jmp
xor
sub
xchg
test
mov
lods
and
movsb
sti
ret
mov
mov
push
mov
ja
pusha
cmp
pop
lcall
fstl
jne
je
lock
mov
subl
imulb
test
push
orl
lret
cmpsb
stc
pop
mov
jecxz
xor
fidivrl
adc
pop
test
pop
das
lock
fbld
xchg
xchg
inc
cwtl
cmp
sbb
test
cmpsb
stos
mov
jno
or
maxps
inc
push
dec
hlt
outsb
mov
jp
jo
dec
adc
mov
cmp
pusha
mov
inc
movsb
pop
outsl
jno
pusha
fisubs
movsl
fsubr
lcall
incl
std
sub
lods
divb
data16
arpl
jb
add
dec
xchg
push
pop
enter
clc
mov
pop
hlt
adc
das
stos
pop
jecxz
jb
xchg
dec
xor
sbb
jmp
mov
stc
movsb
push
cli
sahf
xchg
sub
jae
jmp
lock
push
pop
or
pusha
push
jmp
outsl
dec
cmpsl
outsb
add
xor
pop
hlt
mov
xchg
xchg
pop
setbe
mov
aas
push
mov
dec
mov
mov
js
movsl
jle
cmp
xchg
mov
or
clc
and
mov
xchg
fstpl
sbbl
push
mov
mov
std
or
bound
sub
pop
arpl
shrl
fcoml
xchg
into
pop
hlt
imul
mov
int
loope
sbb
std
dec
mov
cmp
jle
mov
pop
xchg
into
lock
and
imul
jp
test
inc
cmp
dec
add
test
jbe
xchg
test
jno
push
add
adc
popf
cmpsb
lret
push
xchg
xor
mov
pop
jno
nop
mov
nop
and
loope
adc
jnp
xchg
cmp
xchg
sub
jb
gs
xor
aas
or
rcr
cltd
mov
into
rorl
inc
dec
mov
or
push
out
lds
gs
and
or
mov
nop
jge
jmp
scas
xor
pop
sub
xchg
and
mov
mov
cltd
push
lods
pop
pop
lret
push
sub
or
or
mov
xchg
or
imul
iret
add
rcrb
and
inc
mov
pop
push
addr16
cmc
add
xchg
and
xchg
jle
ror
pop
loopne
mov
popf
shll
jge
dec
lcall
fisttpl
mov
mov
std
mov
int
cmp
lock
aam
enter
cwtl
sar
cmp
fxtract
pop
xor
adc
mov
icebp
sahf
out
out
cmpsl
jle
push
push
and
and
pop
in
pop
int
pop
jo
jns
call
pop
aas
in
lods
push
sahf
inc
mov
sbb
imul
dec
push
fcomip
mov
mov
pusha
inc
jle
ss
and
fidivs
xor
dec
sti
out
jg
test
inc
loopne
mov
xchg
jnp
fcmovnb
mov
mov
push
loopne
xchg
xor
mov
pop
out
ss
sbb
hlt
shrb
out
movsl
addr16
iret
pushf
stos
ret
xchg
pop
into
into
out
lock
or
scas
xchg
cmpsb
or
into
cli
movsb
mov
dec
movsl
inc
xchg
mov
adc
orb
jb
inc
lock
push
aaa
xorb
aas
add
lret
adc
dec
icebp
mov
leave
pop
aam
in
jg
xchg
sti
fimuls
dec
data16
outsb
jb
mov
and
push
jecxz
inc
aaa
sarb
add
into
mov
or
mov
pop
nop
add
xlat
push
jbe
fcoms
gs
hlt
add
scas
jl
ret
popa
fs
cmp
hlt
push
data16
mov
mov
xor
cmp
jle
aam
cmpsl
popa
sub
es
jl
jl
out
mov
push
adc
xchg
xlat
mov
add
cwtl
mov
inc
mov
fmuls
in
dec
pusha
push
mov
jmp
jne
mov
and
jp
adc
pop
fiadds
popl
jg
or
sbb
xchg
rorl
je
sahf
pushf
fistpl
lock
fistps
inc
mov
fisttpl
jb
xor
push
into
mov
add
sub
mov
push
js
xor
mov
jmp
aam
loopne
mov
cmp
das
inc
cli
inc
dec
xor
jmp
les
sub
stc
subl
dec
jp
xor
pop
into
stos
inc
cwtl
pusha
mov
or
mov
iret
dec
in
xchg
or
int
sbb
lods
cli
les
push
in
daa
sub
cmp
jg
xchg
les
icebp
fnstsw
xchg
inc
dec
pushf
xor
mov
loopne
insb
insb
sub
push
xchg
dec
lock
stos
mov
adc
lret
pushf
adcb
mov
stc
mov
sub
xor
or
pop
xchg
jecxz
in
int
insl
jmp
in
lahf
sahf
dec
ss
mov
mov
loope
fs
testb
fwait
repnz
mov
clc
xchg
inc
sbb
ret
dec
cmp
jle
aas
imul
pop
mov
pushf
push
js
dec
pop
xor
arpl
push
mov
adc
nop
or
dec
js
test
xchg
dec
nop
mov
mov
into
mov
sahf
xor
dec
js
lock
lock
popf
or
in
cmc
hlt
sub
xchg
adc
mov
xchg
lock
out
adc
jge
add
sub
xor
pop
jbe
adc
adc
push
jbe
dec
jecxz
ror
hlt
xchg
rolb
xor
stos
jnp
int3
xor
pop
xchg
loop
loopne
ja
stos
sarb
inc
lods
insb
adcb
mov
cmc
aas
mov
pop
insl
cmp
cld
gs
mov
aad
pop
mov
or
in
xor
jns
jecxz
aad
loopne
lods
xchg
es
pushf
inc
enter
add
or
xor
xor
adc
pop
int
je
mov
push
les
mov
fwait
push
cmp
fdivs
lret
and
adc
push
ficoms
hlt
cltd
adc
or
xor
scas
pop
add
lcall
subb
popa
repnz
fnstcw
sbb
insl
mov
lods
mov
xchg
in
insl
dec
dec
pusha
or
jae
jge
ds
fimuls
and
andb
insl
int
icebp
fiaddl
rcrl
lods
insl
fucomp
loope
push
adc
lods
add
outsb
frstor
or
insl
jmp
push
cmp
out
cmp
mov
dec
cmpsb
movsb
outsl
out
sub
icebp
mov
iret
pop
iret
inc
or
lea
push
jecxz
mov
lods
push
mov
push
push
clc
out
mov
or
jle
jo
lods
inc
aam
in
lods
push
int
sub
sbb
sub
pop
adc
rorl
nop
mov
stos
sahf
cmp
cmp
xchg
or
push
jg
or
test
addl
int
add
pop
out
sahf
lcall
dec
jbe
sar
jne
xor
subb
aad
jle
stc
pop
jecxz
sbb
push
out
mov
mov
int3
mov
scas
aas
push
fwait
cmp
pop
icebp
lea
xor
std
pop
fcomip
int
dec
out
dec
lcall
xlat
push
sbb
push
mov
pop
cmp
lahf
subb
push
int
mov
jb
scas
xchg
in
mov
cld
hlt
mov
in
outsl
lea
fnstsw
in
mov
popf
ja
sbb
pop
push
shlb
pop
shlb
into
inc
cmpb
frstor
popf
popf
mov
xor
nopl
mov
mov
push
jle
xchg
or
xchg
push
push
mov
nop
xor
cwtl
mov
int
lea
nop
lock
dec
outsb
fs
arpl
mov
fimuls
outsb
adc
lcall
out
in
in
jb
mov
push
jnp
xchg
jnp
into
jo
xor
insl
ds
hlt
into
scas
cmp
mov
enter
sti
mov
xchg
test
and
js
pusha
in
test
imul
rcll
adc
pop
push
push
test
int
jbe
mov
fucomi
xor
push
xchg
jge
and
sahf
cli
loope
aas
sub
out
mov
movmskps
push
lret
push
dec
lock
sub
dec
jp
mov
loope
pop
mov
ficoms
xor
jno
hlt
mov
dec
add
xor
adc
shlb
xchg
mov
adc
jge
cmc
test
cwtl
adc
lods
xchg
pop
es
in
hlt
mov
sbb
popa
dec
push
xchg
sti
pop
sub
stc
stos
test
xor
push
xchg
sarl
push
leave
xchg
sbb
orb
add
sti
add
pop
mov
iret
jg
sti
cld
mov
sub
dec
adc
push
xlat
mov
and
shlb
std
data16
xabort
dec
hlt
jae
idivb
shll
jno
dec
jns
aaa
je
pop
xchg
ja
xor
inc
xor
in
jae
sub
lock
xchg
adc
inc
je
lret
push
hlt
xor
push
imul
push
int
std
fmuls
mov
loope
mov
add
cmp
lock
add
insb
sub
mov
dec
imul
lahf
cmp
ret
lock
mov
add
xchg
sti
daa
add
loope
xlat
cmp
mov
sbb
inc
mov
sbb
cltd
jge
pop
stos
std
lret
jae
dec
adc
sub
jmp
out
dec
jne
push
lock
stos
lods
clc
int
pop
out
inc
push
adc
das
ja
shr
adc
jg
lret
sub
xor
cmpsl
fists
test
cwtl
cmp
push
iret
pop
stos
or
sub
jno
hlt
data16
mov
xchg
sub
jbe
xor
fildll
cwtl
rorl
loope
lret
xor
push
nop
lret
jae
push
cmc
loope
daa
mov
les
jno
mov
rol
gs
and
ja,pt
lock
cld
stc
pcmpeqb
mov
cli
nop
lock
push
cltd
jae
mov
xchg
jne
leave
xchg
cwtl
inc
popf
pusha
in
das
dec
mov
es
dec
in
nop
outsl
xchg
aas
leave
pop
mov
test
sub
jle
ss
pop
imul
movsl
and
adc
aas
push
stos
cmp
enter
push
mov
scas
or
xor
jae
jecxz
pop
cmc
pop
and
orb
adc
mov
dec
dec
je
aam
and
sub
and
adc
dec
out
cmc
or
jecxz
push
dec
jp
adcb
addl
add
lock
in
hlt
filds
int3
mov
jge
sbb
js
pop
pop
call
mov
imul
int3
lods
scas
insb
push
sbb
lock
imul
cmpsl
arpl
aaa
pop
or
aas
xchg
push
sub
adc
jo
movsb
scas
lret
lcall
mov
pop
mov
sarl
pushf
sbb
outsb
dec
mov
cmpsb
inc
xor
add
mov
ja
outsl
xor
xchg
lock
stc
aad
xlat
dec
fisubs
or
xchg
lods
sti
int
add
mov
mov
jge
sbb
into
xchg
push
gs
mov
inc
insb
dec
inc
rclb
lods
mov
adc
gs
sbb
sahf
lret
push
push
push
sahf
rorl
dec
fadd
cltd
insb
jae
sub
xor
fs
in
push
jp
int
adc
incb
jge
and
push
dec
movl
and
fstps
adc
ror
hlt
xor
sti
mov
jae
inc
jp
mov
pusha
cmp
in
jg
int
data16
and
jg
mov
push
sbb
cld
popf
lcall
adc
cltd
add
push
xchg
in
mov
popa
xchg
or
ret
adc
lcall
jae
mov
icebp
xor
mov
insl
hlt
aam
and
loopne
adc
dec
loope
rcll
popf
cli
call
mov
shlb
ret
mov
aas
jge
pop
int
lret
adc
push
or
addr16
dec
jns
orl
sub
lods
xor
dec
push
stc
scas
hlt
jl
stos
fists
lock
popf
xor
mov
sub
and
jp
lea
xchg
or
or
dec
xlat
ret
arpl
pop
test
and
fdivrp
jmp
arpl
or
in
stos
push
shll
xchg
das
aaa
shr
mov
cli
cli
jne
lea
pop
jg
adc
sahf
jae
popa
out
mov
lret
stos
leave
mov
dec
in
jecxz
dec
push
int
mov
scas
into
xchg
pusha
dec
lahf
out
jne
or
push
adc
mov
jle
pop
scas
sbb
inc
iret
loop
and
sahf
pop
mov
into
lods
imul
jno
jb
fidivrs
pop
sbb
stos
mov
or
xlat
loop
in
dec
sti
cltd
addl
aad
xlat
sub
xor
aad
jmp
inc
or
insl
mov
les
jp
mov
and
fnsave
mov
mov
mov
fwait
dec
lret
fs
xor
sub
stos
add
jg
sbb
mov
xchg
push
push
out
lock
movsb
xor
xor
repz
pusha
xchg
lods
mov
rcl
loope
dec
pushf
sub
lea
dec
push
sahf
shll
cmpsl
mov
and
aaa
inc
lock
dec
sbb
adc
test
mov
leave
cmpsl
push
push
xor
xor
xlat
dec
out
xor
outsb
jo
inc
pop
dec
xchg
lock
jecxz
xchg
setl
push
js
aad
mov
cmp
cwtl
mov
push
sahf
cmp
xor
imul
adc
or
negb
xlat
cs
out
xchg
push
popa
outsb
hlt
and
sub
mov
loope
cmpsb
fiadds
out
je
std
sub
mov
inc
insl
pop
fwait
push
mov
add
pop
jmp
fldl
sti
sahf
cmpl
imul
fcomps
push
dec
inc
out
les
pop
pushf
sub
xchg
and
xorl
cmp
arpl
dec
jne
aas
imul
cmpsb
inc
cmp
pop
test
cmp
xchg
sub
iret
data16
cmpsl
xor
dec
into
movsl
jle
xchg
xchg
je
int
cwtl
jmp
std
lahf
jg
loop
add
push
and
mov
fcomps
adcl
jmp
fists
jmp
cwtl
push
inc
popf
jb
int
jle
scas
push
and
cmp
mov
cmpl
pop
out
mov
xor
outsb
inc
push
mov
dec
sahf
lcall
xchg
outsl
push
sbb
mov
bound
icebp
ds
aam
dec
mov
mov
mov
mov
stc
jge
pop
jo
in
es
inc
jecxz
adc
pop
cmp
icebp
movsb
xchg
inc
cmpsb
les
pop
dec
add
cltd
adc
pop
movsl
cmp
loopne
pusha
sbb
cmp
mov
lcall
cmp
insl
pushf
mov
aaa
jae
scas
mov
jp
or
into
aam
mov
sbb
out
insb
ffreep
inc
stos
jmp
cltd
cmp
lods
pop
loopne
push
mov
push
mov
and
ds
out
stos
mov
jnp
adc
mov
stos
scas
in
xchg
or
xchg
dec
js
jno
clc
dec
out
mov
sahf
lock
mov
cmc
pop
jo
jmp
sti
xchg
add
mov
mov
addb
popf
pop
cmp
xchg
pop
cwtl
push
and
push
dec
scas
push
jo
fs
add
les
lret
push
inc
mov
and
add
or
xchg
cmp
pop
or
inc
icebp
xchg
cmc
movsb
sub
aaa
fstpt
int
imul
stos
dec
add
or
popa
push
fs
mov
lods
gs
in
cltd
and
clc
fmulp
negl
jg
fcmove
lock
sbb
shld
pusha
fsubrs
out
arpl
mov
xchg
imul
inc
lret
xchg
xlat
or
ljmp
in
push
adcb
jecxz
sbb
jecxz
pusha
mov
gs
data16
mov
pop
inc
outsb
mov
bound
inc
popa
lock
xchg
sbb
xor
push
dec
shrl
xchg
jo
cmp
into
dec
das
sub
nop
mov
ret
sahf
neg
push
push
pop
int
inc
into
imul
push
into
scas
xchg
sbb
or
cwtl
lcall
insb
movsb
mov
lret
dec
lock
adc
gs
int3
cli
pop
mov
addl
loope
xor
fwait
rcrl
jp
or
push
and
mov
lcall
sti
sub
or
ss
xchg
cmpsb
ljmp
jne
into
and
xchg
jp
fmulp
cmp
movsb
rcrb
adc
cmp
cmp
adc
std
pop
leave
xchg
jb
in
push
movsl
sbb
lret
lea
jns
mov
xchg
bound
iret
jbe
pop
stos
xchg
pop
sar
or
jno
mov
and
loope
push
inc
iret
mov
test
mov
insl
negb
jp
xchg
or
into
xlat
pop
repz
adc
xor
insl
jl
gs
shl
inc
fidivs
jle
gs
cmp
je
and
lds
in
pop
ds
bound
in
test
pop
lret
repz
mov
dec
enter
outsb
scas
sti
mov
xor
xor
or
std
out
xchg
dec
movsl
hlt
pop
lcall
push
and
sbb
and
inc
lret
jecxz
mov
mov
xchg
push
cmpsl
cmp
lods
cmc
mov
sub
and
sub
fsub
sub
jae
add
mov
pop
mov
mov
das
inc
ret
mov
sub
push
mov
mov
movsb
cwtl
fidivrs
iret
gs
scas
sbbl
jp
add
je
nop
sub
movsl
lea
lret
dec
mov
jno
add
mulb
int3
xchg
cmp
negl
cwtl
xchg
mov
scas
and
es
adcl
or
jnp
xchg
ja
outsb
arpl
xor
dec
call
fucomip
in
aaa
dec
sbb
hlt
scas
xor
dec
pop
or
or
xchg
jmp
cwtl
mov
sub
pop
mov
pop
inc
xchg
lock
pushf
dec
push
pop
hlt
xchg
and
xor
data16
push
dec
jp
mov
xchg
jbe
iret
xlat
addr16
into
sar
mov
or
inc
add
push
cmp
jo
inc
xchg
push
lds
arpl
ror
cmp
aam
repnz
scas
xor
adcb
test
jp
sahf
daa
pop
loope
push
push
mov
inc
dec
insl
jp
jp
push
lds
mov
jg
mov
dec
dec
dec
jbe
mov
cli
pop
or
lret
cs
mov
dec
mov
add
pop
aam
xor
jbe
fadds
andl
cld
lock
aaa
fldl
imulb
outsl
test
ds
pop
test
mov
push
xor
in
xchg
pop
scas
gs
sub
cmc
push
pop
mov
test
cmp
vmwrite
cmp
jb
leave
push
cmp
jecxz
xchg
dec
sub
and
inc
out
test
shll
loope
lcall
sbb
hlt
rclb
out
and
fmuls
sub
out
or
push
das
lock
std
xlat
and
pop
inc
shr
mov
fidivrs
aaa
sbb
push
or
or
mov
f2xm1
out
jae
imul
dec
mov
enter
sahf
data16
push
push
mov
xchg
push
dec
push
wrmsr
push
lods
sub
adc
popa
or
jns
jge
push
enter
dec
inc
mov
into
xchg
int3
cmp
cli
sarl
jnp
imul
adc
xchg
pop
mov
xchg
cmp
xor
sub
xchg
mov
jbe
and
fnsave
push
mov
mov
enter
pop
adc
mov
inc
or
adc
inc
pop
pop
inc
cli
mov
rcrb
repz
jns
lock
popf
shlb
xor
sahf
outsl
mov
mov
xor
pop
sti
shrl
sbb
pop
mov
cltd
sysret
loope
mov
int3
fidivs
and
xor
cmpsl
in
lods
les
xor
nop
scas
dec
pusha
mov
sub
rcl
jns
pushf
dec
jmp
jmp
lret
mov
gs
nop
mov
jo
rolb
mov
add
dec
jno
testb
mov
jmp
fidivs
push
stc
push
cmp
stc
out
jmp
daa
enter
push
adc
xchg
ret
push
out
nop
sub
add
dec
loope
pop
and
pop
sbb
mov
xor
sub
dec
scas
daa
int
jecxz
outsl
mov
xchg
insl
test
call
mov
adc
pop
sbb
cmpsl
stos
add
cmp
add
sahf
xchg
ret
mov
loopne
test
lret
mov
insb
icebp
pop
mov
xchg
push
stos
scas
pop
hlt
enter
adc
adc
xchg
imul
js
cltd
ds
je
fiaddl
push
jg
je
jl
pop
fiadds
mov
aad
mov
mov
sbb
push
lahf
jnp
add
aad
rorl
jb
outsl
movsb
scas
dec
out
lods
pop
in
cltd
aad
daa
push
jae
jne
pop
mov
xlat
shll
addb
sub
cmp
jge
and
fwait
pop
pop
movsb
loope
xlat
and
or
shl
push
sahf
xlat
add
cmp
test
fxch
xchg
into
jb
repz
cmp
gs
pop
add
cmp
cmpsl
mov
and
and
xchg
pop
inc
sub
ja
mov
sbb
xchg
popa
ja
hlt
cli
sahf
cmp
shlb
jmp
push
inc
repz
js
dec
icebp
mov
push
pusha
adc
in
popf
sbbl
pushf
test
xchg
pushf
lock
jp
pop
fldenv
cmpsl
js
lock
sbb
xor
pop
ja
mov
movsl
pop
push
popa
push
fwait
out
pop
std
out
xor
push
movsl
lock
pusha
sar
and
int
lock
lahf
pop
jne
arpl
fdivrs
xchg
or
inc
mov
daa
fbld
inc
sbb
pop
movsb
popa
pop
lods
repz
adc
cmpsl
mov
add
xchg
into
bound
inc
push
loop
pop
push
or
ja
int
or
sahf
xor
mov
fwait
loop
pop
ja
outsb
jnp
mov
sti
ret
dec
push
mov
pop
sbb
sahf
lock
dec
sub
xchg
sub
fnstsw
pop
rolb
hlt
movsl
mov
stos
lock
lcall
notl
shr
xor
dec
adc
xchg
aas
les
cld
movsl
stos
jp
pop
push
andb
cmp
sbbb
out
jle
in
test
rolb
pop
or
in
xor
cld
outsl
fbstp
cmp
arpl
add
jae
stc
das
cmp
hlt
stos
es
mov
pop
repz
movsl
jecxz
loopne
jo
mov
dec
call
mov
dec
xchg
out
cmpsb
pop
mov
ljmp
fadd
arpl
repz
sbb
popa
hlt
mov
push
push
and
inc
and
int
out
es
adc
xchg
jmp
jle
mov
imul
aad
icebp
outsl
lret
iret
sub
jbe
pop
scas
sbb
dec
pusha
lock
xor
movsb
push
out
sub
mov
mov
sahf
cmp
inc
xchg
cwtl
and
int
dec
or
mov
mov
hlt
mov
xor
sub
nop
jnp
test
jp
addr16
lods
jl
insl
stos
mov
out
lret
pop
out
jp
shl
in
pop
pop
xor
xchg
sub
jae
dec
out
pushf
xchg
jb
lea
dec
out
arpl
push
push
jbe
rcl
std
ret
add
movsl
call
jbe
cmp
mov
fdivrs
bound
test
sti
in
aam
js
adc
nop
ja
mov
fs
fwait
and
je
adc
add
xor
in
and
jbe
ret
stos
or
pop
sti
out
dec
int
out
lods
lock
push
and
and
sub
push
cmp
stc
lods
fildl
pushl
hlt
pusha
jge
lock
push
cmpb
mov
mov
jp
das
xlat
and
jle
setne
inc
jo
sbb
repnz
enter
outsl
mov
xchg
jo
add
stos
push
stos
push
lods
jle
jne
cmpsl
mov
mov
cmp
sahf
out
in
sti
out
cmp
cs
rep
lea
jne
lret
inc
inc
pop
hlt
ret
je
cmp
xorl
cwtl
lcall
iret
jmp
and
outsl
aam
jnp
xor
lods
arpl
sub
xchg
mov
es
arpl
mov
test
or
dec
pop
or
popa
out
xor
add
adc
xchg
push
in
pop
in
ret
mov
mov
les
mov
cs
pop
mov
lea
bnd
mov
jp
dec
sbb
push
frstor
xlat
data16
jne
loope
cmpsb
push
lret
xchg
push
or
imul
cltd
dec
dec
cmp
fs
je
lcall
cmpb
mov
ret
push
lods
dec
lret
xor
das
int
xchg
lock
mov
xor
leave
cs
lret
loop
xor
repnz
mov
mov
cld
mov
incl
mov
pop
stos
insb
cmp
les
mov
outsl
sub
fcmovbe
pop
popf
inc
cld
shlb
mov
xor
jle
inc
fildll
inc
dec
mov
sub
lret
mov
mov
cmp
fwait
jle
lret
and
call
imul
stos
and
jp
imul
lock
cs
clc
in
push
sbb
mov
adc
jno
sub
xchg
jge
mov
out
data16
je
mov
jae
jbe
icebp
fwait
mov
push
xor
push
pop
ss
les
stos
xchg
dec
out
sbb
jmp
cmp
hlt
subl
inc
into
jo
dec
sub
mov
fucomp
push
xor
pop
jb
xchg
loope
cmp
insl
out
popf
inc
aad
fidivrs
out
push
lock
test
fs
outsb
cmpsb
dec
cmp
nop
xor
clc
fcmovne
iret
pop
or
mov
dec
mov
jecxz
mov
dec
xchg
add
shll
push
inc
mov
leave
fisubs
jo
bound
xor
jle
insl
add
sub
int
pop
sub
mov
iret
movsb
call
and
dec
pop
push
adc
aam
jecxz
negb
das
pushf
mov
dec
inc
fisttpl
fwait
or
int
je
data16
or
sub
sbb
and
out
push
rdpmc
push
movsl
lock
int
cmpl
push
iret
ret
xchg
outsb
stos
jno
xor
pop
jmp
dec
loope
and
pop
and
ret
repnz
mov
mov
push
test
adc
xchg
mov
push
out
xchg
dec
lock
sub
aad
jnp
mov
outsl
mov
adc
sbb
mov
push
cmpsb
lock
imul
pop
rcll
loopne
pusha
outsb
shrl
aad
bswap
stc
push
or
or
inc
out
jns
hlt
enter
xchg
cltd
xor
jns
inc
jno
cmp
xchg
push
xchg
in
cmp
cmp
cmp
dec
aam
mov
ja
loope
push
add
sbb
push
incb
addb
lret
pop
imul
pushl
insl
or
adc
lods
insl
inc
or
cmp
lea
in
mov
test
jle
fists
or
shrb
jge
sub
mov
int
pop
rorl
pop
mov
lods
pop
sbb
xchg
dec
push
imul
push
mov
adc
adcb
std
aad
lods
or
dec
pop
pop
cmp
cwtl
daa
fistps
lea
push
scas
mov
lods
dec
and
subb
inc
dec
imul
mov
adc
lods
insl
addb
xor
push
ficoms
insl
jae
popa
icebp
outsb
pop
sbb
mov
es
lahf
add
outsl
sarl
mov
sbb
push
ja
movsl
mov
jo
sbb
jg
xchg
dec
mov
pop
or
mov
sarl
inc
insl
adc
lods
mov
pop
insl
xor
sub
push
pusha
xor
clc
mov
sbb
push
sahf
popf
mov
adc
add
cmpsb
and
into
mov
out
or
insl
icebp
outsb
in
lahf
fwait
sub
out
push
mov
xor
cmp
pop
push
mov
pop
sahf
in
das
pop
std
xlat
and
sub
mov
xlat
jg
sub
adc
pop
dec
fisubrs
lock
mov
fisttpll
dec
fisttpll
sbb
or
lahf
push
sbb
xor
pop
jne
mov
shrl
cmp
inc
iret
js
shr
int
scas
in
jg
push
lea
dec
or
cmp
mov
jle
ja
loop
iret
int
jo
lahf
into
mov
xchg
popf
insl
inc
xorb
js
stc
int
nop
mov
push
insl
xor
test
lock
push
jge
pop
shrb
cltd
into
outsl
lea
mov
ret
jae
jns
xor
lea
push
nop
dec
lds
jns
sbb
jbe
das
xchg
push
insl
das
xchg
jp
insb
stos
sub
jae
push
xchg
pop
test
stos
xchg
stos
mov
adcb
cmp
xchg
sbb
fistpll
pop
lea
arpl
loopne
lcall
shr
rcrl
pop
sub
cmp
roll
jno
hlt
inc
cli
xor
jmp
sti
jmp
popa
std
hlt
das
scas
loopne
bound
adc
dec
lret
and
cmp
xchg
and
popf
pushf
enter
push
xchg
inc
gs
adc
rorl
out
sbb
inc
xchg
jl
or
push
dec
cwtl
xlat
dec
shl
or
punpckldq
movsl
lcall
jbe
out
jno
jmp
rcr
and
push
outsl
fdiv
xor
add
mov
stos
pop
adc
sbb
mov
push
daa
js
fdivr
es
dec
popf
mov
xchg
add
pop
out
adc
out
fs
aas
fdivs
ret
mov
test
pop
pop
andb
mov
shll
mov
cwtl
mov
sbb
inc
popa
push
lock
mov
jo
cmp
pop
rcrl
lods
push
xor
out
es
in
lock
dec
ljmp
mov
jp
out
test
push
xor
stc
clc
sub
mov
iret
ret
sahf
hlt
add
std
les
ret
test
push
or
add
inc
jno
push
test
test
inc
int
pushf
movsb
hlt
xor
push
xchg
out
inc
push
cmp
jo
rorl
mov
add
xchg
out
jb
mov
mov
jge
mov
xchg
movsb
jg
push
outsl
xchg
mov
fistl
and
fs
hlt
movsl
pop
dec
jno
out
mov
idivb
sub
lahf
mov
js
mov
sub
cmp
pop
cmpsb
inc
test
xlat
hlt
and
dec
faddp
jg
lods
daa
jge
les
ficoms
mov
outsl
sarb
cmp
lea
dec
out
cltd
mov
jl
mov
int
popl
dec
arpl
lret
les
imul
rcll
adc
sub
mov
imul
inc
inc
jg
mov
repnz
loopne
aas
inc
insl
push
pop
sub
pop
icebp
lock
aas
insl
sahf
push
dec
andl
loope
in
or
or
xlat
and
aad
xchg
or
mov
dec
fbld
imul
cwtl
clc
xor
pop
and
or
jae
pop
jl
sbbb
sub
mov
sub
push
jae
dec
add
jns
sbb
lcall
loope
sub
fs
lock
sub
mov
daa
daa
test
movsb
mov
scas
mov
out
add
imul
in
movsb
lock
pop
iret
scas
jno
mov
outsl
and
fiaddl
push
divps
repz
xor
shll
sub
dec
xchg
pop
and
lea
and
and
sbb
sahf
inc
cmpsl
adc
negb
je
shlb
loope
jle
lock
fwait
jne
fsubs
pop
fsts
push
out
sbb
adc
push
testl
pop
aaa
outsb
jg
xchg
dec
into
stc
jge
lret
out
xor
sub
movsb
loopne
jno
cmpb
aaa
out
adc
scas
adcb
test
repnz
xor
xor
test
jecxz
xchg
cmp
jb
and
in
scas
mov
mov
lock
stc
sub
nop
mov
jne
test
dec
or
out
push
and
shlb
pop
or
fdivr
in
xchg
mov
jmp
cwtl
in
inc
xor
cs
cmp
adc
push
aaa
in
push
sbb
dec
dec
and
mov
push
or
pop
adc
mov
jle
je
jae
pop
add
mov
ret
and
or
jg
push
push
pop
sbb
sbb
fstpt
into
stos
sbb
arpl
push
sbb
sti
xchg
pushf
add
icebp
movsl
jae
ret
cmp
dec
outsb
clc
sbb
sbb
xchg
inc
in
pop
hlt
push
mov
pop
jp
push
into
inc
insb
cmp
dec
fisubrl
imulb
sbb
test
jecxz
mov
xor
mov
mov
xchg
icebp
negb
jno
pop
mov
adc
push
jmp
popa
popa
lock
lahf
js
xchg
int
inc
call
into
pushw
lcall
dec
callw
dec
push
xchg
pop
test
imul
nop
cmp
je
cmpl
mov
push
sub
xchg
xor
inc
mov
lahf
jno
mov
push
gs
lahf
mov
loope
cwtl
testb
pushf
dec
test
and
hlt
xchg
xlat
dec
jle
ja
mov
fistps
out
and
inc
pop
outsb
xor
popa
out
jg
or
pop
add
mov
mov
mov
cmpsb
mov
outsl
outsb
cli
into
sub
into
ss
ljmp
push
stos
lods
push
testl
pop
jno
cmp
xchg
and
sbb
fidivrs
cmp
or
cmp
cltd
dec
push
test
pop
shr
or
out
hlt
popa
xchg
jg
mov
fists
xchg
ret
add
es
jb
pop
test
sub
lret
xor
rorb
jl
cmpsl
or
lea
inc
xchg
fiaddl
pop
aaa
insb
stos
cwtl
stos
ret
into
cld
mov
subl
stc
or
stos
lods
gs
cmp
mov
test
mov
pop
sub
xor
pop
xor
clc
lahf
mov
out
mov
mov
cmp
pop
movsb
clc
mov
mov
je
jae
push
and
cmp
scas
pushf
mov
aas
jno
int3
sub
inc
out
or
out
mov
ret
dec
cmp
jae
dec
mov
nop
imul
test
push
push
ja
jp
pop
mov
xor
subl
sbb
cmp
jo
sub
jmp
mov
sahf
inc
pop
sub
loope
jae
jge
dec
insb
xor
aas
mov
push
xor
insl
jo
sub
cli
scas
fwait
in
mov
hlt
inc
add
mov
loope
lods
mov
xor
insl
mov
in
mov
push
test
mov
out
jns
adc
pop
stc
mov
mov
push
ret
outsb
pop
jne
ret
pusha
call
xchg
mov
leave
push
stos
rcr
jmp
pop
or
jge
lock
mov
outsl
mov
pop
sti
add
sbb
push
fwait
in
jle
sub
aas
cmp
mov
gs
push
rorl
hlt
fmull
add
into
repnz
adc
jle
dec
movsl
pusha
jae
mov
push
sbb
dec
ret
int
lret
mov
sub
out
add
insl
xor
pop
add
in
cmp
mov
mov
add
mov
stos
sbbl
pop
pusha
stos
mov
ficoms
lcall
xor
sbb
xchg
pop
or
ss
lock
lcall
add
mov
stos
push
sub
call
or
jge
lods
inc
xchg
and
and
add
leave
loope
test
cmp
incb
fwait
xor
jle
mov
nop
inc
dec
lret
in
pop
push
fdivrs
add
aad
add
aad
or
decb
adc
dec
sbbl
cwtl
and
pop
cmp
push
nop
gs
push
push
cmp
pop
pop
mov
mov
and
pop
lock
insl
push
out
inc
sbb
push
sub
movsb
sub
sub
mov
hlt
daa
jnp
sbb
mov
shrl
movsl
xor
nop
clc
bound
jbe
push
int3
and
mov
xor
inc
cmp
mov
xlat
pop
pop
ja
xchg
pusha
dec
or
push
jo
punpckldq
test
mov
cli
cmp
mov
and
ret
stos
mov
subl
jnp
jb
sub
or
into
sub
jge
pop
lea
int
push
roll
imul
repz
loope
pop
into
xchg
sarb
cmpsb
cmpb
je
xchg
mov
fwait
cmp
scas
out
sbb
fsubs
pushf
sarb
rorb
jmp
add
jo
insl
stos
fiadds
jae
mov
pop
movsb
aad
jle
cld
cmpsb
cwtl
cmp
lock
push
cmp
lock
push
add
inc
or
jo
push
out
popa
cmpsl
xor
pop
hlt
xchg
push
es
jb
push
mov
insl
repz
mov
loope
lret
xlat
pop
push
hlt
lods
push
jmp
shl
mov
cmpsb
lret
je,pt
xor
bound
cmp
or
adc
imul
aam
push
sbb
xchg
sahf
cwtl
add
lds
scas
xchg
or
lret
push
aas
lea
mov
pop
add
daa
cltd
push
xchg
adc
fs
jbe
xchg
aad
ss
lods
sub
lock
jne
imul
js
cmp
lock
xlat
lcall
mov
sbb
and
jmp
into
mov
sbb
movb
xchg
scas
push
mov
jne
ficoml
jo
mov
dec
js
in
dec
push
cwtl
inc
mov
dec
adc
xor
pop
dec
sbb
jae
aad
hlt
mov
div
jns
call
insl
fmuls
xchg
mov
clc
les
out
push
push
push
inc
push
xchg
popa
outsl
xor
mov
aaa
inc
or
in
cltd
push
sbb
pop
xor
loope
and
xchg
inc
push
stc
jg
out
arpl
test
mov
shl
xchg
scas
pop
ljmp
and
jg
lea
mov
mov
xor
sahf
pop
jns
hlt
push
pop
dec
cmp
xchg
or
push
bound
popl
ret
adc
paddb
incl
sbb
fadd
mov
mov
jecxz
cmpsl
cltd
lock
xor
jbe
frstor
cmc
test
out
jno
jno
cmpsb
inc
iret
fcmovu
inc
sub
jbe
and
push
sbb
mov
cwtl
adc
out
subb
std
lret
repnz
fiadds
push
shr
imul
leave
and
fstpl
mov
jns
jmp
loope
out
push
mov
inc
pop
mov
hlt
je
pop
sbbb
xchg
lock
jo
out
jno
testb
movsl
xchg
out
out
out
jno
icebp
mov
bnd
pop
mov
push
adc
dec
pop
nop
and
mov
mov
xchg
pop
xchg
sarl
pushf
cmpsl
incl
dec
movsl
pop
popa
add
icebp
jno
jle
push
mov
sub
out
out
out
test
mov
mov
sub
lds
fwait
jns
sub
cmp
scas
lock
ficoml
jge
insb
aaa
sbb
int3
jno
xchg
ret
adc
loope
mov
call
cmp
pop
nop
scas
adc
pop
inc
aad
jle
daa
sub
mov
mov
je
cwtl
leave
xorl
jb
loope
fildl
mov
push
mov
arpl
into
or
add
pushf
push
jae
and
fdiv
jecxz
jno
xor
pushf
push
or
inc
or
hlt
int3
xor
cmp
pop
jne
jns
loopne
dec
push
mov
xor
fildll
adc
xchg
or
mov
adc
cmp
loope
test
push
sub
mov
cmc
lcall
pop
jle
out
mov
fldenv
dec
jno
push
cmpsb
jb
cmp
out
js
mov
cmp
sbb
repnz
inc
fstl
shrl
mov
push
mov
mov
mov
in
test
cld
ret
gs
sub
ret
out
xchg
adc
das
cltd
cmp
hlt
test
mov
add
loop
xchg
mov
pop
inc
or
sahf
cli
bt
push
adc
and
aad
sbb
data16
cmp
push
shlb
sub
popa
aas
push
xor
mov
pop
pop
sub
push
out
fisubl
mov
sahf
cmpsb
jo
popa
clc
fdiv
push
jnp
dec
sub
adc
add
sub
pop
insl
rorb
out
xchg
push
xlat
inc
sbb
xor
flds
stos
popa
jns
jp
xchg
cmpl
push
dec
inc
stos
pop
mov
fistpll
and
hlt
ret
jmp
inc
imul
out
jmp
jge
cmpl
shrb
adcl
popa
or
imul
xchg
jge
sbb
sbb
mov
add
lods
outsl
pop
xchg
xor
repz
pushf
lock
dec
das
stos
pop
mov
add
insl
cwtl
mov
ret
lcall
icebp
cwtl
push
dec
faddl
outsl
mov
dec
push
cltd
dec
insl
mov
add
insb
jbe
clc
stc
into
bound
add
nop
jb
mov
cmp
cld
or
pop
aas
arpl
pop
pop
cld
call
lcall
sub
sahf
cmovl
hlt
jmp
mov
jno
sahf
xor
movsl
int
mov
into
cmp
aas
inc
out
xchg
popf
pop
mov
fmul
inc
or
lea
repnz
inc
ret
mov
adc
inc
or
mull
clc
pop
dec
lock
adc
hlt
cmc
and
pop
xor
mov
mov
insl
mov
xor
add
cmpsb
pop
push
mov
ljmp
aas
mov
fucomp
mov
stc
outsb
lods
lock
std
fbstp
loopne
sbb
lret
iret
jns
mov
dec
js
cld
and
xchg
ljmp
sub
lock
xor
out
xchg
mov
f2xm1
test
cmp
push
aam
mov
xchg
xor
int
clc
mov
push
aam
sub
loope
push
dec
xor
inc
adc
iret
inc
mov
pop
xchg
in
push
jo
out
jns
xchg
fistpll
xchg
in
addb
nop
int
dec
int
out
mov
daa
mov
jge
inc
bnd
pop
addr16
negb
fsubr
or
ds
out
dec
mov
jg
cmpsb
sub
js
adc
icebp
add
fidivrl
lea
xlat
sahf
mov
sub
or
fucomp
into
xchg
popf
scas
jno
mov
and
data16
or
push
mov
in
inc
cli
jmp
add
push
sbb
hlt
js
and
lahf
push
jge
std
and
push
mov
sub
xor
mov
fdivp
mov
outsb
inc
lea
push
push
push
das
mov
push
mov
mov
push
scas
mov
pop
ret
int
out
test
or
mov
orb
enter
xlat
mov
or
jmp
lret
lcall
push
lea
xor
test
int3
sub
cmp
jne
loopne
adc
loope
sbb
jmp
mov
icebp
cmp
into
push
scas
jg
std
hlt
cmc
pop
stos
jae
stc
cltd
in
cmp
cld
and
pop
fadds
out
mov
imul
pop
dec
mov
hlt
mov
ret
push
mov
js
stos
ja
jmp
mov
pusha
lods
out
scas
lods
scas
cmp
mov
int
or
add
mov
lock
addr16
pusha
xlat
sbb
scas
std
imul
jp
mov
dec
pop
repz
fists
mov
sub
lcall
std
pop
out
cmpsb
sahf
fwait
mov
bound
adc
jb
jae
int3
mov
push
scas
lods
loope
stos
jle
jge
jnp
xchg
cmpsb
and
hlt
sub
loop
dec
sub
lea
mov
or
add
lods
mov
or
jno
push
call
xor
push
cwtl
pop
test
enter
gs
xchg
sahf
dec
cmp
popf
in
pusha
xor
rcrl
les
pop
sbb
outsb
xchg
bnd
data16
dec
out
aam
lock
fwait
push
imul
xchg
out
jno
mov
test
adc
test
nop
fmuls
mov
dec
sbb
test
nop
or
pop
dec
mov
lds
dec
or
incl
cmp
mov
mov
cmpsl
jg
out
out
in
popf
ret
mov
cmc
or
shl
cli
push
xchg
out
pop
fidivrs
and
xchg
xchg
adc
lahf
sti
mov
fs
sbb
dec
test
or
mov
dec
cmp
fildll
int
sahf
shll
cmpsb
jge
pop
insb
mov
das
out
enter
mov
or
mov
rol
mov
mov
or
or
xor
jne
cmp
or
shlb
data16
and
inc
insl
dec
inc
popa
lock
and
sub
fistpll
lret
lods
pushf
push
iret
pop
fnsave
xchg
mov
pop
mov
stos
data16
lea
adc
dec
daa
loop
mov
cmpsb
ret
jp
aas
mov
mov
jmp
xor
test
repz
lock
and
ja
dec
bswap
adc
adc
hlt
repnz
orl
inc
movsb
mov
xor
mov
mov
test
push
or
jo
jae
adc
pusha
test
mov
jmp
pop
int
aaa
fdivrl
mov
jae
movsb
jno
dec
xchg
aam
nop
and
jmp
xor
ja
or
jmp
dec
pop
icebp
push
adc
and
lcall
sub
fs
xchg
gs
int3
ja
dec
les
xchg
sub
or
daa
jge
mov
jp
push
push
or
outsb
xchg
sub
push
push
cli
loope
add
les
arpl
mov
sarl
arpl
adc
out
or
xor
xchg
divb
outsl
cmp
nop
adc
cltd
icebp
movsb
xor
jp
mov
and
outsl
popf
pop
sub
insb
push
add
lods
push
addr16
pop
test
ja
dec
inc
aaa
mov
popf
in
mov
stc
out
and
enter
and
push
psubusb
repz
testl
xor
mov
push
xchg
shrb
inc
mov
xchg
ret
call
out
and
movsb
jg,pt
iret
xchg
test
shll
or
outsb
jp
outsb
neg
mov
or
mov
sbb
push
shl
leave
sub
das
sub
mov
outsb
insl
imul
inc
loop
aaa
mov
push
lods
int
cmp
push
xchg
or
fildll
add
push
inc
int
dec
data16
ds
fidivrl
popa
pop
pusha
hlt
out
push
clc
rcrl
cld
push
or
push
sahf
loopne
scas
test
sbb
insl
sub
jne
sbb
sub
int
das
fadds
pop
andb
and
data16
cmp
pop
aam
xlat
cmpsb
jle
cmc
loopne
icebp
pop
test
scas
push
xchg
pop
dec
insl
loopne
xor
pop
or
insl
pop
jle
adcb
pusha
lcall
xor
push
pusha
cltd
dec
push
int
mov
dec
lea
pop
in
aaa
lods
insl
jne
lods
das
mov
dec
mov
mov
push
adc
lods
shll
pop
outsl
fsubp
popa
push
je
out
dec
jg
icebp
int
mov
rorl
scas
int
pop
sbb
idivl
push
jbe
mov
xchg
mov
xchg
fnstsw
loop
xchg
mov
int
mov
mov
out
popa
jg
jmp
pop
mov
mov
push
ss
bound
push
mov
sahf
repz
lea
mov
pop
int
into
mov
dec
xchg
in
jno
adc
sbb
pop
jge
nop
ds
pop
mov
pop
mov
pop
ds
push
jge
in
jg
dec
push
push
out
nop
lea
lea
incl
xchg
fidivrl
int
shlb
movsl
lea
lea
insl
push
pushf
mov
insl
scas
fstpl
outsb
adcb
jae
adc
in
fmuls
jo
nop
sahf
jbe
f2xm1
in
sub
pop
pop
xlat
lea
cmp
fsubp
int
outsb
aas
jo
in
sub
or
pusha
mov
in
adc
mov
jns
push
jns
push
inc
hlt
xchg
and
in
loop
sub
xor
lret
loopne
dec
sahf
movsb
test
xor
push
sub
pop
out
imul
mov
ja
inc
sub
incl
pop
in
hlt
outsl
dec
out
rorb
cld
lock
xlat
shll
jnp
dec
ret
stc
popa
xchg
xchg
arpl
fsub
xchg
mov
dec
mov
xchg
jae
and
push
push
push
cmp
js
cwtl
dec
mov
call
clc
insl
or
push
push
and
mov
leave
mov
subb
lock
fwait
pop
mov
daa
push
jge
test
sub
aaa
inc
sub
and
mov
movsl
jge
enter
call
shr
jo
mov
xchg
cmp
cli
cs
sub
and
and
sub
test
leave
data16
popf
pop
shlb
mov
pusha
xor
cmp
outsl
jle
adc
movsl
out
jnp
or
mov
dec
daa
adc
push
shll
mov
jecxz
jae
push
jo
sub
out
inc
sbb
adc
xchg
loope
stc
jbe
lock
push
dec
jo
xchg
push
sbb
push
fs
and
push
mov
and
orb
inc
sub
inc
sbb
jecxz
xchg
xchg
mov
lret
mov
lock
and
cwtl
inc
rcll
push
hlt
sbb
add
stos
into
imul
sarl
popa
mov
insl
lock
lods
mov
repz
xor
lods
sti
pop
sbb
outsl
dec
jge
notb
insb
inc
mov
popa
and
xchg
push
add
dec
mov
lret
and
sahf
loop
test
mov
mov
leave
andl
adc
mov
inc
push
out
hlt
ds
mov
inc
gs
cltd
mov
dec
popf
cmp
mov
jmp
hlt
pushf
xacquire
xchg
lods
outsl
out
sbb
push
push
sub
pop
jae
push
cltd
popfw
jle
cmpsb
cltd
lcall
mov
fimuls
sahf
xchg
das
mov
adc
test
or
xchg
je
das
jb
data16
xor
movsl
sahf
adc
mov
popf
inc
add
mov
ljmp
add
sbb
enter
std
sbb
jns
push
dec
repnz
jae
xchg
sub
rclb
mov
pop
pop
mov
mov
inc
imul
push
fdivs
push
cmpsb
js
inc
out
decb
out
sbb
in
shl
add
loope
sahf
mov
or
icebp
push
dec
out
mov
or
cs
testb
and
lods
cmp
push
pop
dec
cmp
lock
lcall
xor
aam
les
out
rcll
or
adc
sub
pop
test
inc
push
fsubs
mov
mov
cmpsb
inc
aad
sub
cmpsl
inc
dec
push
add
insl
lock
pop
push
cmpsb
and
jae
js
test
xchg
aad
into
mov
je
pop
sub
cmp
push
out
lahf
mov
cld
jb
outsl
jmp
xchg
sarl
sub
xorb
dec
or
mov
ret
mov
cld
mov
mov
xchg
adc
dec
pop
out
inc
sub
push
enter
pushf
lcall
and
mov
stos
fiadds
sarb
mov
mov
jns
xchg
fnstenv
pop
ret
scas
sbb
mov
dec
fimull
out
sub
sub
negl
and
outsb
jbe
outsl
mov
xchg
mov
fisubs
and
jge
push
nop
adc
cmp
icebp
push
jnp
movsl
lahf
inc
in
subb
je
in
jnp
icebp
adc
loop
jne
xlat
jecxz
cmp
int3
out
test
mov
aas
or
lret
pusha
add
test
outsb
dec
sub
xchg
imul
sbb
mov
and
xchg
or
pop
cltd
xor
ss
out
inc
mov
jns
add
imul
ret
jae
ss
je
rorb
aad
mov
test
xor
out
bound
loope
in
loop
mov
loopne
mov
xchg
in
dec
ror
pop
pop
push
mov
fisttpll
dec
or
bound
loope
es
je
mov
cmc
jb
cmc
call
adc
push
out
cs
std
movsb
mov
add
addr16
lock
add
or
pop
aas
and
add
mov
cmp
pusha
out
call
pop
nopl
loopne
and
cwtl
mov
mov
pop
xchg
mov
out
dec
out
call
mov
xor
stos
lcall
mov
or
in
cwtl
mov
in
mov
gs
or
arpl
das
fildl
sbb
inc
inc
sbb
mov
inc
or
jns
lock
jmp
push
cmp
cmc
jmp
dec
gs
add
push
sub
jnp
adc
das
mov
add
jbe
xor
add
mov
stc
hlt
aas
shrb
xchg
int3
mov
out
jb
sbb
mov
mov
fwait
aas
inc
push
stos
lock
add
mov
push
adc
xrelease
inc
or
sarb
pop
lods
ret
mov
test
leave
mov
lds
cmp
out
and
jb
push
stos
sahf
jbe
inc
mov
stos
incb
jp
cld
adc
lea
xor
pusha
outsb
cmpsb
iret
je
mov
inc
or
repnz
into
mov
ljmp
movsl
fisttps
mov
cli
or
aaa
je
dec
int
in
fnsave
add
ljmp
inc
push
cmpsb
jae
jmp
adcl
push
js
add
pusha
xor
lods
push
or
inc
lret
inc
xor
stos
ds
jne
jo
popf
pusha
outsb
insb
xchg
inc
jno
fs
dec
cwtl
jo
scas
mov
cmp
js
outsb
leave
mov
in
dec
push
and
lock
mov
js
and
xchg
add
jno
imul
shlb
mov
stc
popf
enter
xadd
pop
mov
xchg
fstpt
jns
pop
cwtl
cmp
and
shll
sub
lret
and
xor
mov
repnz
mov
dec
jge
mov
ret
lods
pop
pop
push
or
add
mov
inc
mov
test
xor
sub
pop
inc
and
pop
mov
xchg
xor
int
out
cmp
xchg
push
inc
test
add
lock
mov
fisubl
fstpt
hlt
nop
cltd
jmp
mov
adc
hlt
and
cs
insl
fwait
ret
adc
jmp
xor
mov
movzwl
dec
rcr
mov
dec
out
mov
or
stos
inc
stc
dec
cmp
xor
cwtl
test
jb
je
fs
push
dec
out
add
mov
jns
and
mov
movsb
push
jmp
ds
adc
test
loop
popf
pop
push
jae
fbld
dec
jo
hlt
cmc
jno
sub
xorb
rolb
dec
dec
or
popf
fidivrl
test
and
test
scas
sbb
xchg
je
adc
xor
ja
sarb
xchg
into
insl
into
lcall
lock
enter
call
or
adc
add
xchg
cmp
dec
adc
aam
sub
fnstenv
push
int3
jmp
sbb
inc
add
push
mov
pop
push
jle
jmp
mov
mov
sti
add
mov
cmp
pop
fsubs
fwait
loope
nop
adc
mov
ret
test
icebp
jno
pop
xor
xchg
jmp
test
and
jns
mov
cltd
mov
test
jl
xchg
jle
scas
cmp
aas
jb
sti
push
sub
in
and
pop
sbb
push
xor
clc
int3
and
out
lcall
in
mov
subb
and
xchg
push
lds
dec
xchg
lock
jmp
push
faddl
rorb
sub
cmp
push
xor
dec
xor
mov
pushf
test
adc
into
jno
add
jmp
cmp
sub
or
sub
dec
outsl
je
aaa
push
push
sbb
pop
insb
lret
xchg
pushl
arpl
jno
in
pop
dec
xchg
dec
in
or
and
lock
je
data16
test
hlt
pop
std
or
or
mov
mov
sbbb
lea
mov
xchg
and
stos
jmp
pop
lret
dec
subl
ds
icebp
push
leave
les
dec
inc
sub
sbb
or
xor
sub
enter
xchg
sbb
push
movsl
cwtl
pop
dec
inc
sbb
mov
xor
mov
xchg
mov
jecxz
aam
xor
ss
fsubs
fs
mov
mov
sub
jl
iret
pushl
cmpsl
sub
cmp
dec
out
jnp
ffree
cmp
pop
lock
push
scas
hlt
fwait
movsb
sti
pop
lods
mov
inc
es
mov
fildl
repnz
cld
fwait
in
sbb
dec
popf
xchg
out
ficompl
add
and
lds
cmp
inc
dec
subb
adc
les
cltd
fs
dec
pop
mov
emms
popa
or
aam
and
mov
movsl
jns
es
xor
pop
cltd
xor
pop
xor
testb
sarb
mov
mov
stos
cmpsb
mov
test
bound
inc
jle
add
in
lcall
push
inc
into
movsb
cmp
dec
cltd
or
daa
pop
add
xchg
add
or
mov
xor
icebp
cmp
adc
xchg
or
sahf
pop
push
fisubrs
lret
xchg
mov
scas
inc
hlt
std
js
stos
adc
xor
int
test
cmpsb
loope
xor
push
mov
hlt
lock
jg
into
int
mov
pop
fwait
lahf
bswap
add
addr16
lock
shrb
jb
xchg
dec
mov
adc
mov
adc
out
jne
imul
inc
lcall
lret
sbb
mov
out
stos
inc
addr16
mov
repz
cli
lahf
adc
inc
mov
jmp
fdivs
pop
sub
inc
test
insl
push
stc
inc
scas
lret
mov
jle
jne
into
jg
faddl
jge
test
sub
pop
cli
insb
mov
sarl
xor
scas
cld
mov
lock
sub
fldl
adc
jno
push
push
xor
push
fs
pop
decl
test
xchg
lcall
xlat
pminsw
xor
push
mov
outsl
dec
cmp
dec
push
rcrl
inc
push
jnp
adc
lods
jle
cld
inc
sub
iret
mov
out
test
lock
jns
lcall
imul
and
mov
lret
cmpsl
adc
mov
xor
cltd
xor
cmpsl
jmp
push
sti
nop
popf
hlt
and
ret
pushf
cld
sbb
lcall
xchg
adc
movsl
push
fadds
sahf
cs
shll
dec
cmc
xchg
sub
les
mov
fiadds
jp,pt
sti
bound
outsb
mov
aam
and
cmp
sbb
jo
lock
popf
sti
or
daa
and
imul
mov
stc
mov
add
xor
hlt
addr16
js
cltd
and
xor
popa
push
dec
jo
repz
scas
xlat
mov
out
xor
mov
nop
int
mov
xchg
sahf
xor
pop
addr16
loope
dec
rcr
stos
push
adc
stos
mov
adc
daa
cmc
into
pop
cmp
inc
stos
sbb
mov
repz
or
add
lret
scas
mov
sub
sbb
jle
sbb
adc
popa
xor
cmp
adc
pop
and
cwtl
cmpsb
jo
sub
mov
or
cld
or
mov
mov
lret
jge
outsb
subb
jbe
cmp
xchg
mov
into
std
jno
btr
pop
xchg
xor
loop
cmp
hlt
sbb
aam
lcall
sbb
sub
outsl
dec
mov
push
push
push
les
dec
dec
lock
xorl
mov
or
mov
dec
js
jno
pushf
sahf
jmp
aam
shr
add
xor
lods
mov
pop
cwtl
mov
test
js
test
cs
xchg
pop
test
es
jae
idiv
cld
lret
sbb
or
mov
sub
flds
jmp
jae
adc
sub
es
scas
test
stos
cmp
loope
xchg
ljmp
dec
push
mov
mov
push
sahf
in
or
repz
movsb
or
cmp
cs
movl
mov
xor
pop
push
push
or
jge
xor
mov
mov
je
ljmp
adc
sub
cmp
xchg
push
push
or
sub
inc
pop
mov
dec
pushl
cli
ret
aaa
adc
inc
loope
mov
mov
cmp
pop
dec
push
sbb
mov
sub
pop
dec
pop
cmp
dec
jo
xor
pop
dec
aam
xchg
je
and
cmp
sbb
sub
loop
add
dec
add
outsl
adc
and
bound
dec
xor
xor
xchg
fsubrl
cmp
in
orl
jge
jns
push
pop
fcoml
pushf
insb
xchg
cmp
idivb
xor
jo
std
dec
jmp
sbb
pushf
dec
pop
cmp
sub
cld
sbb
cmp
mov
insl
hlt
jno
scas
inc
pop
loope
imul
in
inc
in
jmp
xchg
fisubrl
add
mov
dec
dec
xchg
cwtl
mov
mov
jecxz
mov
push
movsb
inc
jne
adc
pop
and
or
or
cmp
in
cmpsl
mov
call
add
loope
sub
inc
jle
push
dec
or
adc
gs
lods
push
mov
xlat
xor
loope
adc
push
xor
xor
adc
push
jb
pop
fucomip
test
popl
jae
pushf
das
jge
sbb
std
movsb
mov
xor
fs
lcall
jl
push
pop
push
push
int
icebp
mov
inc
push
push
clc
lock
push
add
sti
sbb
daa
call
mov
sbb
movsl
push
and
popa
pop
in
push
add
mov
xor
adc
imul
scas
ret
lock
test
xchg
sahf
mov
and
and
loop
incl
adc
out
int
dec
das
pop
jno
test
xor
pop
jmp
dec
stos
mov
hlt
leave
sbb
mov
mov
outsb
sti
aad
cmp
rcll
jne
push
pop
jle
es
mov
sahf
mov
addr16
xor
cltd
cmp
jle
stos
and
das
mov
cld
repnz
push
push
pop
lods
cmp
fidivrs
jg
xor
sti
dec
inc
cltd
inc
or
les
fs
imul
sbb
or
setle
sbb
mov
test
jmp
mov
add
jae
int
or
jecxz
push
mov
and
push
popa
popa
sub
mov
loope
sub
rorl
xor
dec
mov
push
insl
scas
test
in
jmp
pop
mov
add
sbb
or
push
clc
pop
nop
ljmp
push
push
ficoms
cwtl
hlt
and
out
lock
cmpsl
mov
push
cmp
push
pop
xchg
push
xchg
xchg
xor
push
out
cltd
inc
sbb
xchg
jge
inc
sub
cmp
or
sbb
inc
loope
fimuls
out
fs
int3
je
cld
pop
in
jp
push
js
ret
shrl
add
ss
pop
cmp
sbb
out
aad
jmp
xchg
repnz
imul
jae
inc
dec
out
imul
mov
dec
je
je
inc
dec
mov
clc
cmp
sub
lea
cmp
adc
cmpsl
lret
xchg
test
xor
std
add
cld
and
scas
jae
cmpsl
mov
jb
ret
jno
stos
mov
lods
dec
xchg
data16
fwait
bound
stc
subb
pop
or
std
sub
lock
cmp
xor
push
outsl
lahf
aas
xchg
mov
push
cwtl
cmp
fcom
dec
inc
mov
push
pop
mov
sahf
addl
and
xchg
inc
xor
pop
out
add
mov
xlat
cmpsl
movl
icebp
inc
iret
lock
hlt
rcll
sub
ja
sbb
push
popa
cmp
jl
cwtl
mov
sub
xchg
test
fldl
push
aad
and
lock
jnp
pop
pushf
dec
pop
pop
and
lret
inc
int
sub
fs
movsl
hlt
mov
mov
sub
xor
jmp
or
xor
outsl
es
hlt
mov
lret
gs
jo
popa
fildll
test
or
test
dec
aam
inc
mov
jmp
stos
or
ret
and
popf
out
push
push
int
call
imul
dec
push
add
pusha
fcoml
mov
hlt
std
popa
ret
push
sarl
jmp
loopne
dec
mov
stos
lcall
loopne
and
out
sbb
mov
mov
mov
clc
adcb
mov
jmp
xchg
lds
addr16
jbe
stc
addr16
sbb
push
sbb
mov
cmp
sahf
add
aad
sbb
in
cmp
icebp
mov
mov
sbb
or
push
mov
sahf
mov
cmc
sbb
int
xor
pop
ret
xchg
loop
sub
lahf
mov
cltd
aas
cwtl
aas
or
and
push
or
inc
and
push
jns
push
add
mov
push
fdivrs
push
insl
scas
stc
dec
fucom
out
hlt
aas
sub
outsl
fdivrl
sub
mov
stos
inc
xchg
or
fldt
popa
sbb
adc
cmp
inc
xlat
pop
jge
mov
hlt
test
lea
cltd
cwtl
ljmp
fldpi
sbb
jns
cmp
cmp
dec
sub
jno
xchg
push
int3
loope
enter
sbb
loopne
clc
lods
cmp
and
jmp
clc
add
cmc
cmp
add
pop
ljmp
ss
lods
dec
cmc
arpl
mov
sbb
into
out
push
jecxz
dec
add
out
mov
mov
test
lahf
xchg
hlt
jmp
inc
sub
sub
mov
pop
pop
in
ljmp
xorps
pusha
mov
lea
sbb
mov
popa
mov
aaa
and
inc
cmc
inc
inc
fwait
insb
gs
sub
inc
pop
lret
dec
xor
pop
ja
xor
push
fwait
dec
imul
ja
dec
je
pop
sbb
out
and
pop
in
ret
and
shl
jno
bound
in
leave
jae
hlt
xchg
cld
out
lds
testb
cltd
std
push
push
lahf
dec
jg
sbbb
pop
mov
and
jne
inc
jp
cwtl
dec
sub
xor
xor
lret
dec
lea
aam
inc
hlt
rcl
rorb
dec
pusha
sub
fisttps
adc
out
sbb
mov
sub
and
rorb
out
or
or
out
add
mov
movsb
jno
dec
cmp
cmp
or
xchg
dec
mov
add
repz
jno
sub
xchg
dec
mov
enter
pop
pusha
repnz
cmp
push
call
pop
inc
test
cmp
cwtl
pop
in
mov
pop
xchg
xlat
ja
vpshufd
mov
outsl
jge
fstl
push
xor
fcmovnb
lds
out
mov
mov
add
sbb
out
sbb
push
pop
push
inc
pop
mov
cmpl
pushw
sar
mov
add
rolb
int3
cmpxchg
ljmp
mov
sbb
fiadds
stos
das
int
mov
lret
bswap
dec
ss
fdiv
test
xchg
lock
pop
movsb
shlb
xchg
in
lahf
or
mov
dec
aas
cmpsl
pusha
push
sub
mov
enter
rcrb
addr16
in
cmp
aaa
outsb
pop
push
xor
mov
stos
inc
cmp
arpl
rcrb
pop
mov
adcl
fdivrs
pusha
icebp
jl
movsl
xchg
and
push
dec
push
pushl
aaa
xchg
sub
add
jg
push
pushf
jbe
pop
push
je
ja
stos
clc
jg
mov
push
dec
dec
gs
adc
out
push
mov
push
mov
je
inc
push
hlt
xor
testb
xchg
lds
loopne
shlb
sbb
aaa
pusha
je
adc
pop
xchg
cmpb
jmp
arpl
mov
push
xor
rcrl
xor
xlat
pop
rcll
sub
jmp
std
sbb
add
mov
mov
sub
sub
andb
int
call
arpl
js
dec
push
iret
dec
xor
call
mov
inc
push
xchg
out
dec
sqrtps
hlt
inc
push
xchg
out
inc
aas
sbb
cmp
ret
enter
out
push
insl
dec
lea
inc
dec
cmp
pop
push
movsl
inc
daa
xor
movsb
xchg
iret
dec
outsl
mov
and
ss
and
push
test
xor
into
mov
pop
stos
or
ds
rcrb
ss
pusha
cli
push
dec
inc
mov
cmp
lock
out
push
test
testl
pop
dec
or
push
cmp
mov
pop
cmp
mov
and
add
push
sahf
aaa
fsubr
cmc
aam
jmp
add
push
outsb
hlt
aam
jecxz
push
ja
out
mov
int
xchg
ret
mov
rcl
add
and
scas
mov
js
pop
fwait
std
fs
adcw
or
mov
clc
xchg
mov
ret
sbb
mov
repz
adc
mov
test
mov
adc
hlt
mov
dec
mov
sub
xchg
sbb
lret
and
inc
mov
hlt
subl
mov
xchg
dec
adc
subl
mov
cmp
or
dec
movsl
ret
inc
inc
popa
adc
ss
cmp
rcrb
hlt
fs
dec
dec
out
adc
fldl
outsb
push
mov
ffree
jp
aaa
pop
lock
repz
stos
cmp
or
out
add
fistl
mov
jbe
in
xchg
mov
xor
fstl
lock
cmp
jg
in
pop
sub
hlt
or
xchg
subl
jno
sbb
leave
lods
daa
pop
inc
mov
dec
in
pop
sub
sbb
stos
push
in
adc
cld
lock
jbe
inc
adc
fiadds
jno
xlat
xchg
repnz
inc
pop
shll
loope
arpl
sti
icebp
mov
or
jp
dec
jmp
out
mov
add
or
shl
ds
mov
iret
in
jo,pt
icebp
test
mov
adc
les
sub
jp
adc
es
jp
mov
sub
loope
add
push
xor
and
cld
adc
cmp
adc
cmp
data16
fistpl
pop
hlt
inc
xor
nop
xor
lea
bnd
movsb
pushl
cmpsl
add
xor
scas
push
sbb
gs
hlt
sub
stos
in
inc
es
and
lods
mov
mov
sbb
into
pop
jnp
cwtl
aam
outsl
ljmp
sbb
mov
add
or
dec
lea
add
sub
pop
lock
dec
cli
pop
call
adc
test
mov
sub
mov
sbb
xchg
and
or
and
les
sbb
jno
mov
xchg
daa
jb
adc
pop
jle
dec
jno
mov
cltd
int
popa
lea
jno
xor
jns
enter
orl
sbb
mov
lock
pop
mul
mov
xchg
mov
inc
cmpsl
jecxz
hlt
mov
lret
sbb
inc
in
xor
jbe
mov
incl
aam
pushf
jne
cli
and
jmp
jge
sbb
in
into
scas
loope
mov
call
dec
mov
xor
mov
fdivrl
add
into
xchg
mov
mov
stc
mov
add
or
out
rorl
mov
or
dec
dec
jle
insb
mov
xchg
mov
out
pop
sub
adc
or
fs
sahf
mov
loop
popa
xor
inc
lock
sbb
mov
sub
dec
clc
dec
mov
aad
xor
push
xchg
mov
dec
mov
or
loopne
std
cmp
ljmp
imul
sub
jmp
xchg
and
into
xor
data16
pop
inc
or
cmpsl
cmpsb
jmp
push
jb
mov
stos
sahf
out
add
mov
adc
lahf
mov
imul
inc
mov
xchg
jo
lcall
sahf
aaa
test
stos
testb
stc
jae
adc
xchg
xchg
mov
pop
xchg
lods
pushf
test
mov
and
mov
adc
jge
sbb
cld
ja
add
repnz
push
push
sti
shlb
push
daa
or
push
lcall
xor
pop
or
add
ret
test
ret
out
pop
sub
pop
push
arpl
pop
jl
rclb
jae
adc
stc
sbb
pop
lret
jo
dec
push
insl
hlt
addr16
pop
lcall
nop
add
lea
sti
mov
arpl
jge
xchg
subb
imul
jo
mov
shrl
push
mov
mov
jae
hlt
shrl
xchg
inc
dec
xlat
negl
arpl
and
or
rolb
rcll
jg
xor
rcl
xchg
jno
clc
adcb
add
push
cld
lock
imul
imul
in
add
jns
inc
xchg
push
lea
dec
cmpsl
mov
scas
sahf
push
fs
insl
xlat
movsl
cmpsb
aas
mov
lahf
sub
imul
divl
out
shlb
mov
test
js
ffree
out
push
jge
ds
sahf
mov
cwtl
ljmp
dec
push
aam
xor
into
clc
and
and
idiv
push
lret
cmp
push
xchg
dec
lods
pusha
stos
aad
jno
and
not
aas
lods
sub
sub
add
lret
push
ret
sbb
lock
testl
scas
sub
push
ds
gs
lahf
lods
push
xchg
xor
add
nop
mov
xchg
int3
push
xchg
and
lcall
inc
addr16
sti
cmp
inc
movsl
fidivrs
adcb
popf
or
repnz
dec
mov
pop
fidivrl
or
sbb
pushf
add
ja
lea
push
xchg
lock
stos
mov
push
cmp
aam
cwtl
pop
dec
pop
hlt
xor
and
sarb
xchg
lea
fs
pop
fmuls
xchg
mov
mov
xchg
xchg
dec
cltd
mov
add
mov
cmp
ret
push
js
mov
adc
xor
clc
es
sub
mov
jns
push
mull
push
out
cmp
cmp
pop
lock
int
and
push
sub
add
lock
xor
aam
mov
inc
arpl
cwtl
cld
shl
cld
mov
lret
adc
mov
xlat
cmp
mov
in
xor
adcl
stc
je
nop
dec
aam
or
ficoml
xchg
lea
cld
mov
out
sbb
jae
lcall
inc
pop
imul
fnsave
mov
jns
les
insl
pop
dec
enter
cwtl
adc
or
popf
fdivs
jmp
or
xor
outsb
push
pop
fs
inc
les
jle
mov
adc
xchg
cmp
out
stos
push
dec
out
sub
cmp
mov
push
inc
stos
and
xorl
into
jae
mov
fbld
fcmove
in
add
dec
stos
mov
notl
cmp
inc
call
sahf
hlt
test
xor
cmp
xchg
es
sbb
or
adc
out
mov
pop
imul
jle
into
cwtl
lock
dec
pxor
js
mov
inc
outsl
cltd
mov
hlt
dec
push
cli
fistl
xchg
inc
and
mov
out
mov
jae
push
jnp
or
outsb
incb
aam
jg
sub
or
jo
mov
or
push
bsr
icebp
add
outsl
popf
jmp
es
scas
movsb
and
call
mov
jge
jmp
jg
dec
fs
pusha
test
movsl
dec
sub
clc
scas
es
lock
xlat
sub
pop
mov
dec
push
mov
clc
cmp
ljmp
xchg
pop
les
sub
adc
test
or
push
jmp
dec
out
mov
ret
mov
xchg
arpl
insb
ficompl
cmp
xchg
jge
pop
fisubrs
imul
bswap
daa
adc
adc
pop
mov
adc
aaa
xchg
inc
imul
mov
push
std
cs
xchg
xor
mov
pop
inc
daa
mov
int3
dec
ret
pop
ss
add
sub
push
pushf
push
jns
mov
adc
das
xchg
xor
push
inc
push
mov
sub
mov
pop
jo
lret
xchg
cmc
sbb
std
jbe
out
jno
add
int
cld
sub
out
enter
call
adc
fbstp
mov
test
test
shll
leave
repnz
or
cmpsl
xor
jno
mov
xchg
adc
mov
inc
movsb
sub
lret
push
aad
and
hlt
mov
or
mov
jmp
inc
dec
pop
enter
addl
cmpsb
insl
scas
stos
enter
xchg
test
jae
arpl
cld
scas
jne
std
scas
pop
out
in
inc
je
mov
jbe
aaa
lret
into
xor
jecxz
arpl
dec
sub
push
jge
lock
out
shlb
sbb
lahf
pop
cwtl
sub
jae
sub
shr
push
es
test
outsl
dec
xlat
mov
mov
out
test
loope
pop
jns
cwtl
std
shr
cmp
pusha
jmp
test
sbb
xchg
pop
test
fisubrl
cmp
mov
adcb
sbb
shlb
cmp
dec
in
xchg
jb
fisttps
mov
xchg
fstps
mov
cltd
ja
pusha
outsb
cmp
fs
push
scas
push
add
mov
push
lock
jo
dec
mov
push
mov
sbb
mov
out
insb
nop
push
sub
inc
pop
mov
mov
sbb
es
inc
pop
lahf
rcl
mov
flds
xor
scas
cmp
and
pop
sahf
inc
mov
or
scas
mov
inc
pusha
loope
dec
cmpl
paddb
dec
out
push
lock
dec
and
popf
cmp
sbb
outsl
inc
sbb
inc
fnstcw
ret
inc
movsl
fs
pop
test
mov
stos
or
sbb
adc
sub
cs
push
aam
lock
add
mov
mov
shll
cmc
jns
fildl
mov
xchg
and
inc
push
cwtl
movsb
mov
push
iret
xor
xchg
ret
fldl
insl
hlt
or
stc
clc
xchg
jb
rcrl
adc
cmp
sub
lea
test
enter
outsb
dec
popf
push
in
popa
dec
pushf
popf
xor
pusha
adc
hlt
sbb
xlat
jns
test
or
stos
add
cmpsb
pop
hlt
inc
mov
fldenv
jp
lock
test
push
add
xor
jg
aaa
sbb
jno
pop
sahf
jae
lea
jecxz
dec
jmp
xor
insl
sub
sub
popl
stos
ret
jns
mov
idivb
jp
inc
dec
ficoml
out
xchg
movsb
sbb
xor
mov
cld
or
fldl
xor
pop
test
mov
cld
das
mov
aas
imul
xchg
arpl
mov
jp
scas
hlt
lods
add
jne
in
outsl
stos
mov
pop
mov
das
lea
in
mov
cmpsb
fidivrs
test
testl
dec
xchg
hlt
mov
call
int3
cld
cltd
pushf
pop
imul
mov
sarb
and
mov
inc
sub
and
lea
andl
aaa
hlt
jne
sub
jno
mov
mov
bound
xor
ret
into
lcall
cltd
mov
mov
leave
les
int3
xchg
loope
cmpsb
adc
popf
pop
push
enter
out
nop
add
add
hlt
sahf
inc
dec
rorl
imul
xchg
adc
clc
mov
loop
and
hlt
fs
out
outsb
mov
inc
mov
or
inc
mov
ja
adc
mov
cmp
mov
hlt
popa
insl
push
mov
push
inc
loope
jecxz
pop
inc
push
jbe
scas
jo
loope
xchg
jno
dec
cmpsb
jp
lods
out
dec
pop
xor
sub
pop
xchg
rorl
jg
push
std
or
xlat
mov
clc
stos
cmc
mov
mov
insl
dec
test
pop
fucomp
gs
jmp
xchg
fldl
stos
adc
add
pop
arpl
enter
xchg
xor
and
scas
xlat
pop
lret
fnsave
icebp
in
outsl
in
and
xchg
adc
jl
fstpl
sub
inc
jno
adc
and
outsb
arpl
adcl
shll
dec
mov
push
js
sbb
cmp
js
xchg
sbb
rclb
daa
xchg
xor
dec
insl
adc
outsl
aaa
shrl
arpl
aad
psubd
hlt
arpl
hlt
enter
xchg
or
xchg
cmp
pop
loope
dec
xor
or
in
xchg
mov
fwait
xchg
and
pop
dec
mov
xor
jno
push
movsb
inc
in
dec
jo
mov
pusha
lds
filds
daa
test
outsb
int3
cmp
into
xchg
or
cmpb
inc
jbe
jb
mov
lock
stos
mov
add
lods
push
mov
divl
and
xchg
les
xor
cmpsw
add
and
or
adc
lret
adc
add
test
push
sub
in
jne
xchg
cmpsb
outsl
pop
decl
push
jge
sbb
mov
pop
call
inc
rep
adc
xchg
lcall
out
jne
or
mov
jge
push
mov
add
loop
xor
jb
out
push
ja
mov
std
jns
addb
clc
mov
jnp
push
aaa
adc
and
loopne
push
fbstp
movsb
xor
push
and
add
dec
test
into
or
testb
or
mov
arpl
pop
jl
push
mov
std
mov
insl
cmp
fildll
leave
das
inc
jb
jno
hlt
mov
pop
and
jb
dec
lds
jl
pusha
outsb
push
adc
stos
and
jae
xchg
push
xor
sub
mov
vcvttss2si
cld
dec
subl
fstl
lods
aas
jne
dec
adc
dec
dec
imul
cmp
pusha
adc
gs
lock
insb
lods
insl
mov
xchg
aaa
mov
push
mov
pop
or
lret
clc
jp
xor
dec
fiadds
loope
sarb
movsl
mov
out
dec
pop
lods
ret
pop
outsb
pop
sbb
pop
movsl
jae
outsl
xchg
mov
dec
or
jge
lock
bnd
lret
or
fstps
mov
mov
arpl
nop
popa
cmp
jg,pt
scas
das
lock
dec
mov
jecxz
push
push
add
inc
add
je
or
leave
movsb
and
fadds
mov
xchg
shlb
push
inc
xchg
frstor
dec
jns
cltd
xchg
in
xor
out
lds
ljmp
popf
into
lahf
shlb
lock
adcl
imul
sbbl
jmp
push
xor
jo
push
mov
lret
and
or
mov
add
imulb
adc
lea
sbb
outsl
xchg
call
aam
inc
add
pusha
add
adc
push
ss
pop
test
pop
sub
aam
dec
icebp
icebp
lods
pushf
fdivrl
sti
insb
into
dec
cmp
add
lcall
fwait
imull
mov
lea
sub
mov
in
je
push
push
cmpsl
movsb
push
xchg
cmp
push
orl
je
mov
adc
jmp
xchg
int
hlt
test
sti
rcr
and
pop
scas
lock
cmpsl
inc
pslld
xchg
inc
xor
jno
jnp
ljmp
push
push
lds
mov
adc
sbb
mov
imul
ret
jbe
and
or
shll
dec
xor
ret
call
fwait
jns
jmp
push
addb
fstps
or
ja
xchg
test
lret
push
rolb
pop
scas
dec
sub
mov
icebp
jo
hlt
adc
push
pop
push
mov
cmp
test
adc
insb
int
sub
jmp
loope
push
aaa
fs
test
jne
cld
push
lret
mov
stc
scas
add
loop
pop
test
push
dec
mov
lock
and
aam
call
xchg
stc
jle
jo
cmp
scas
mov
cwtl
mov
out
push
ds
jg
ja
push
cmpsl
hlt
jae
sbb
aad
inc
xchg
sbb
mov
mov
pusha
mov
inc
shld
sub
cmp
mov
mov
sbb
cmp
lock
sbb
popf
jmp
test
xchg
pop
dec
lds
and
iret
inc
scas
sub
inc
in
cmp
sub
pop
int
sbb
loop
into
xlat
mov
vphaddubq
subb
mov
fbstp
insl
inc
mov
mov
fdiv
mov
pop
aas
mov
cmpsl
mov
jo
test
loop
sbb
mov
lock
mov
xor
cltd
inc
std
or
push
fbstp
push
pop
lock
notb
lea
shrb
pop
mov
shlb
int
mov
and
push
jmp
pop
loope
rolb
fstl
pmaxsw
push
xor
mov
cmp
pop
mov
jae
sub
lret
mov
rorl
dec
push
sub
add
daa
sbb
loope
cwtl
fstps
xchg
pop
daa
cmpsl
loop
aaa
mov
stos
xchg
push
inc
push
pop
aas
xchg
pop
nop
xchg
or
mov
aad
mov
push
lcall
jo
cmp
push
cltd
sub
imul
shll
inc
mov
popf
rcrb
aas
jbe
ja
mov
push
sbb
xchg
jno
loope
loopne
or
mov
jmp
sbb
push
test
scas
mov
mov
xor
pop
jp
je
in
stc
dec
lock
inc
frstor
jno
shlb
sub
fimuls
les
inc
or
mov
aam
lock
xor
jo
sti
das
enter
sbb
sub
lods
lahf
and
xor
xchg
addr16
movsl
sub
inc
adc
adc
ret
mov
out
pop
mov
or
ffreep
add
jnp
xor
xlat
jo
xor
mov
cwtl
push
lock
mov
xor
add
jne
push
and
push
jnp
nop
or
jb
jp
pop
ss
subb
lret
or
add
aad
cmpsl
das
xlat
push
xchg
jmp
mov
lock
jle
aam
movsb
stos
jp
jns
dec
mov
out
insb
xor
mov
fidivl
add
insl
stos
adc
mov
sub
jmp
dec
inc
push
in
sbb
pop
inc
jns
gs
jg
inc
imul
std
dec
aam
movsb
rcrl
pop
cmpsl
xor
aam
add
fdivl
ss
mov
cmp
pop
pop
jle
push
mov
pop
jg
cmp
sub
scas
hlt
push
dec
jo
add
sbb
jno
aas
test
mov
inc
popl
inc
sub
dec
xor
sbb
cmp
cmp
roll
outsb
movsb
sub
or
inc
hlt
and
test
lcall
xchg
lods
mov
mov
cmp
xchg
jmp
push
idiv
xchg
cltd
mov
mov
pushf
call
jno
xor
int3
mov
jo
into
push
adc
jno
popa
outsb
xor
mov
test
sub
in
movsb
cmp
push
and
adc
push
cmpsb
filds
in
push
inc
fwait
aam
mov
pop
push
call
mov
cwtl
out
jmp
cmpsl
sbbl
repnz
jne
into
push
mov
fsubs
cmpsl
popa
cltd
mov
fcmovnu
dec
mov
pop
rcrb
clc
xchg
pop
insb
js
jecxz
pop
xlat
test
fisttpll
ret
lret
sbb
std
and
adc
add
push
je
nop
dec
and
mov
insl
cmc
outsb
lea
mov
dec
aad
cs
int
sub
outsl
cmpsl
int
push
pop
xchg
insl
icebp
out
int
pop
sahf
jge
push
add
ret
lods
gs
mov
push
in
fiaddl
shrb
in
push
mov
mov
es
pop
int
xchg
push
adc
push
insl
not
push
lock
jne
outsb
dec
mov
insl
mov
out
sub
insl
daa
sbb
icebp
lcall
outsb
xchg
jecxz
int
mov
jp
jg
inc
pop
lods
push
xchg
jle
fsub
xchg
pop
mov
cmpsb
xor
jo
jle
cld
insl
pop
add
jb
xchg
loop
arpl
out
fidivs
scas
jne
inc
outsb
mov
outsl
xor
mov
xchg
outsl
iret
xchg
pop
pop
lea
insl
inc
scas
jle
das
data16
pop
pop
fldl
or
sub
mov
out
jbe
flds
sbb
mov
int
call
xor
mov
pop
jae
into
shll
xchg
xlat
popf
push
adcb
outsl
aas
cmp
xchg
pop
dec
bound
int
xchg
dec
outsl
push
dec
jo
cmc
pop
rclb
shr
dec
mov
sub
lods
out
out
pop
lea
lea
out
out
pop
dec
pop
enter
and
dec
fcompl
int
outsl
out
nop
mov
lea
sbbl
mov
addb
add
movsl
or
push
pop
mov
mov
in
cltd
subb
dec
sarl
pop
shlb
outsb
int
cwtl
mov
push
mov
xchg
insl
push
jg
sbb
dec
jb
mov
pop
jg
adc
js
insb
xor
iret
jg
lods
out
rorl
push
push
fnsave
je
lock
jne
mov
insl
lea
fstl
outsb
fists
pop
sub
jnp
and
lock
arpl
or
sub
push
bound
dec
loopne
sub
in
dec
out
pop
mov
cld
or
pop
lret
movsl
mov
cwtl
stos
dec
popa
gs
xor
cmove
push
pop
dec
je
or
jecxz
xlat
mov
cltd
popa
pushl
dec
dec
pop
nop
test
cmc
stos
xor
dec
into
jns
cmp
fwait
mov
cmpsb
into
mov
mov
ja
int3
add
es
cmp
mov
mov
pop
popf
outsb
xor
pop
adc
dec
lea
daa
pop
push
inc
xor
push
mov
mov
pop
fmull
gs
lcall
cmpsb
sub
nop
sub
xlat
or
pop
fwait
movsl
or
jnp
and
cmp
xor
add
dec
loope
int3
loopne
loope
arpl
pop
movsl
sub
popa
insl
lock
iret
movl
mov
mov
or
xor
stos
xchg
adc
leave
shufps
dec
mov
cmp
mov
mov
enter
pop
outsl
leave
lret
xchg
mov
scas
add
sbb
arpl
xor
add
mov
pop
stos
stos
and
shrl
in
add
jns
mov
dec
ret
test
pop
mov
and
mov
mov
push
sub
scas
fcoms
push
aam
and
test
push
adc
repnz
push
dec
loopne
mov
jecxz
daa
pop
pop
or
imul
repz
add
rcr
adc
jmp
out
sbb
jno
adc
stos
xchg
lahf
jg
push
sbb
stos
mov
jae
imul
add
test
sbb
pop
jle
in
movsl
or
scas
inc
jg,pn
pop
fbld
movsl
dec
push
jo
pop
stos
sub
loope
dec
pop
cltd
mov
dec
mov
jo
dec
mov
sub
loopne
stc
sti
rol
jecxz
xor
xor
imul
cmp
lret
dec
sbb
and
aaa
jge
mov
insb
jecxz
pusha
or
add
push
cltd
inc
pop
xchg
pop
push
movsl
rcll
lock
sti
push
xor
xchg
mov
dec
push
mov
repnz
lock
fisttpll
cmp
adc
out
jg
lds
js
add
rsqrtps
ss
push
sarl
icebp
dec
test
dec
shrl
outsl
je
push
insl
sub
xchg
sbb
mov
imul
sbb
pop
jge
pop
mov
jb
jle
mov
push
lret
jnp
lahf
xchg
jl
ljmp
std
sahf
loopne
adc
pop
sarl
mov
cmc
xor
mov
sub
mov
pop
mov
ror
aam
daa
aad
jge
inc
sbbl
xchg
hlt
ret
adc
decl
xchg
cld
pop
push
outsb
mov
out
pop
dec
pop
jae
hlt
in
inc
lock
jne
push
cmc
fnstsw
push
add
dec
lock
adc
adc
pusha
mov
test
mov
xor
imul
pop
out
imul
jo
jge
dec
mov
add
add
pop
sub
jb
stos
xor
movsl
push
dec
pop
fistl
adc
aaa
xchg
sbb
fisubs
aaa
xchg
dec
fwait
push
addl
jle
mov
out
jno
xchg
lods
shl
cs
xchg
mov
cwtl
imul
int
orb
dec
xor
out
mov
popa
aam
mov
cmc
ficoml
mov
pop
jecxz
or
mov
xchg
push
in
popa
jge
int3
test
frstor
lea
stc
test
add
jno
cs
rcrw
sub
imul
dec
lock
jmp
push
mov
mov
and
and
cli
adc
sbb
xor
movsl
push
int
push
mov
jnp
scas
loopne
jl
mov
dec
push
dec
ficompl
lock
push
sbb
sti
or
popa
push
dec
call
cltd
xchg
push
mov
movsb
inc
pop
mov
xchg
xchg
into
cltd
sahf
sbb
mov
mov
pop
jo
xor
test
add
xchg
aaa
push
nop
pop
mov
cmp
or
and
mov
lret
sbb
fnstsw
push
jp
jae
les
xchg
adc
sub
push
sub
xor
inc
inc
out
push
cmp
mov
loop
sbb
es
dec
pop
push
xor
stos
inc
push
cld
dec
mov
lcall
mov
xchg
jmp
dec
sahf
insl
xor
mov
stc
nop
movsl
fsubrl
dec
jb
popf
push
mov
inc
jno
fidivs
push
lock
add
bound
mov
nop
loope
test
xchg
push
dec
dec
pop
xchg
adc
divl
add
jg
shrb
into
lret
xor
jg
jno
pop
outsb
push
shlb
test
jns
xchg
aaa
add
xchg
loope
in
mov
xor
mov
cmc
ja
cmc
rclb
enter
call
movsl
hlt
push
rorb
scas
cwtl
dec
lret
inc
int
mov
cmpxchg
inc
rorb
mov
lock
ljmp
push
dec
pusha
iret
lret
mov
arpl
xor
mov
add
jle
rorl
mov
filds
push
scas
mov
xchg
xchg
xchg
sub
loopne
sbb
popa
mov
std
into
in
dec
mov
fcoml
fldt
jnp
sbb
ds
pop
int
lret
repz
andl
in
mov
jmp
out
js
xchg
aad
or
in
or
outsl
mov
sub
push
ss
xor
adc
dec
push
les
or
loopne
fcomps
sbb
loope
aaa
out
inc
cwtl
pop
mov
inc
mul
jnp
jl
adc
lock
push
sub
inc
xor
xchg
xchg
push
push
hlt
imul
inc
jae
or
push
and
add
dec
mov
jbe
xchg
jl
lods
mov
in
add
enter
hlt
sub
into
in
pop
adc
xchg
mov
push
mov
xchg
add
pop
mov
jle
push
xchg
icebp
sub
jecxz
pop
inc
jno
mov
push
xor
dec
addr16
inc
mov
aaa
scas
mov
enter
and
pop
push
out
pushf
les
lock
iret
cmp
dec
adc
loope
adc
adc
fisubrs
dec
sbb
int
mov
push
movl
test
in
movsb
sub
push
hlt
test
cmp
mov
testl
mov
and
hlt
mov
xor
jnp
push
pop
mov
dec
sahf
lock
xlat
add
mov
icebp
outsb
jne
mov
std
or
push
push
pop
jne
jnp
and
pusha
mov
pop
mov
xchg
in
lcall
fcmovu
push
xchg
mov
out
push
mov
inc
cmp
pop
push
sub
xor
xchg
das
sub
arpl
mov
or
cmc
push
fs
jno
aaa
xor
icebp
scas
arpl
movsl
jbe
push
mov
lock
adc
stos
adc
sub
enter
imul
aas
sbb
lcall
das
dec
lret
sbb
insl
movsl
jb
fcomps
shrb
or
mov
cmp
mov
mov
hlt
adc
add
test
jbe
lock
fbld
sub
add
adc
aam
mov
pop
adc
push
pop
outsl
sub
ds
mov
cld
xchg
data16
negb
dec
cmp
pusha
mov
jmp
and
add
rcll
pusha
js
cmpsl
out
mov
hlt
stc
mov
orb
dec
fsub
adc
cmpps
mov
pop
stc
add
jle
mov
outsb
or
mov
scas
and
jae
mov
out
push
ja
jo
push
push
pop
cmp
mov
ror
xchg
sub
sbb
mov
sbb
and
or
fnstcw
add
pop
xchg
xchg
cld
jne
xor
push
addl
loop
pop
je
sub
sbb
mov
xchg
lods
dec
mov
inc
das
addr16
movsl
hlt
rorb
xchg
push
sbb
xor
push
enter
mov
movsb
jno
jb
lock
xchg
cmpsl
and
inc
xchg
fsubrp
xchg
out
push
int
and
inc
mov
mov
leave
mov
fistpl
xchg
add
dec
push
push
out
loopne
psubw
and
mov
xor
xchg
and
call
adc
xchg
das
jns
jns
xlat
pop
sbb
jl
mov
hlt
inc
pop
das
nop
and
inc
nop
and
xchg
lock
in
fcoml
inc
pusha
pop
movsl
into
lock
shlb
test
clc
xor
lock
mov
cmpsl
jl
fsub
jle
jmp
jo
pop
cltd
mov
and
lret
subl
cmp
mov
adc
lods
nop
mov
aas
and
cli
or
dec
mov
pop
jmp
ja
jbe
into
stos
sub
loope
xchg
sub
lock
xchg
insl
lods
int3
sbb
pop
sub
sbb
cltd
lock
fwait
mov
push
pop
and
cmc
lret
pop
xor
cmp
out
or
icebp
or
add
push
popf
hlt
orl
push
into
pop
test
inc
pushf
dec
cwtl
cmp
sub
pop
sub
mov
in
inc
sbb
out
mov
jbe
jo
out
push
cltd
stos
xor
sub
shlb
pop
hlt
xor
and
mov
sub
sahf
jmp
arpl
xchg
mov
sti
shll
test
cs
dec
and
adc
inc
fwait
popa
xchg
dec
adc
cmpsl
rcrl
movsl
and
cmp
adc
add
fsubl
fldt
and
in
in
popf
and
arpl
push
adc
dec
mov
fnstsw
pop
scas
mov
popf
sahf
js
cltd
xchg
imul
xchg
cmpl
repz
sbb
adc
ss
test
cmp
pop
push
cmp
sahf
adc
pop
push
jecxz
push
dec
push
mov
add
test
sahf
and
cmp
mov
jbe
je
adc
out
add
pusha
arpl
fldt
push
xchg
jle
daa
ret
bound
into
dec
in
mov
int
out
shlb
jp
cmp
xor
mov
jecxz
add
mov
clc
fcmovnb
dec
or
loope
xchg
loop
loope
or
mov
cmp
daa
out
xchg
jl
mov
sub
and
xabort
andb
pop
out
sub
sbb
mov
lock
pop
jge
mov
das
lods
xor
out
stc
xchg
out
out
rcrb
dec
ret
jb
xchg
and
scas
lret
push
out
cmp
mov
mov
outsb
ss
xchg
aad
xor
mov
jle
fwait
call
inc
jno
cmpsl
scas
xchg
dec
nop
aas
mov
xchg
cs
loop
cld
sub
xor
jbe
cmpsl
xor
add
test
pusha
bound
outsb
mov
icebp
lahf
out
outsl
sbb
push
jg
xor
insl
lock
mov
in
adc
lods
int
pop
mov
lea
dec
sub
mov
lock
repz
movsl
in
xchg
cmp
popf
adc
and
out
imull
cmc
jecxz
xor
stc
popf
xchg
xor
data16
ss
push
push
hlt
or
dec
testb
mov
call
and
out
fnstsw
stos
ljmp
arpl
dec
xchg
int
mov
mov
jns
clc
lahf
xchg
aaa
xor
lret
popa
sahf
cli
cmpsl
stc
bound
ss
mov
sub
push
loopne
lret
out
pop
cwtl
xor
cmp
or
dec
sub
ds
into
mov
jp
aaa
mov
pop
nop
jbe
add
lock
xchg
subb
or
mov
cmp
lods
mov
inc
aad
or
inc
jg
xor
clc
rcrl
xor
loope
sti
lahf
sti
push
push
into
cwtl
adc
jo
insl
ret
mov
push
lret
add
adcb
aam
dec
adc
sahf
repnz
xchg
push
movsl
cli
js
jns
lods
dec
ret
insl
push
jg
roll
xor
imul
and
fwait
mov
cltd
sub
push
sbb
loope
sahf
xchg
push
inc
outsl
inc
adc
out
sub
jae
jmp
jge
pop
popa
aas
sub
pushf
inc
int
int
mov
jns
scas
mov
imul
cltd
mov
cmpsb
dec
aad
xchg
xchg
hlt
ja
xor
lcall
jns
mov
stos
xchg
gs
push
pop
enter
sub
add
cmpsl
and
lock
hlt
fists
inc
test
inc
cmp
pop
xchg
inc
cmpsl
pop
or
xor
adc
jge
insb
loopne
sbb
add
mov
mov
xlat
movsb
jb
faddl
scas
iret
lea
dec
pop
fcompl
js
loop
dec
pop
cld
jp
xchg
gs
fmull
test
inc
fidivs
sti
push
mov
daa
push
mov
dec
xor
pop
jmp
arpl
scas
jo
cld
fsub
jmp
xor
stos
push
hlt
pop
fcmovnu
cwtl
xchg
jp
xor
rcll
aas
test
xchg
repnz
rcrb
mov
movsl
lcall
xor
loope
push
pop
pop
fisttps
test
in
cli
loope
fisubs
or
lock
int3
bound
sbb
mov
das
dec
lcall
mov
pop
or
add
push
mov
insb
push
xchg
arpl
sub
dec
xlat
hlt
int3
stos
aad
mov
fimull
loopne
imul
mov
mov
dec
jae
jbe
sbb
push
cltd
stc
adc
out
jns
in
aad
out
inc
stos
mov
jnp
lods
leave
add
mov
dec
and
rclb
leave
inc
or
stos
dec
adc
std
mov
fwait
stos
adc
mov
mov
scas
iret
push
fdivrs
inc
cs
jae
inc
fbld
push
mov
xlat
ds
std
je
jl
sbb
lret
dec
xchg
xor
in
sub
hlt
gs
lret
or
lcall
cmpsb
jns
shrb
and
aas
jp
fbld
jb
ljmp
inc
movsb
clc
and
pop
mov
scas
call
inc
das
out
cli
test
mov
inc
fisttpll
inc
adc
sub
test
pushf
sub
adcl
pop
fcomps
int3
lea
in
std
out
iret
and
xchg
aas
dec
fs
push
insl
lcall
jb
dec
sub
xor
jbe
or
mov
push
loopne
out
in
cmc
scas
bound
and
lock
lods
pop
fcmovb
mov
mov
imul
jbe
lods
push
mov
enter
div
test
adc
inc
jno
pop
aad
fstps
sarl
mov
mov
push
fisttps
js
mov
push
xor
lea
in
pop
loope
sbb
xchg
dec
mov
aad
jmp
lcall
fmulp
pop
xchg
lea
test
adc
mov
xlat
imul
dec
xor
adc
cmp
and
dec
sbb
je
jo
scas
aam
and
xchg
xor
rolb
popa
jo
pop
pop
dec
int
jecxz
push
pop
mov
xlat
arpl
and
into
repz
jg
es
mov
mov
cmc
lods
pushf
fsubrs
inc
mov
mov
pop
rcll
adc
push
aam
into
xchg
cwtl
dec
xchg
jl
xor
and
aas
cmc
and
sbb
push
ss
mov
pusha
sub
jbe
jae
cmpsl
push
cwtl
pop
fisttps
rcl
repz
idivl
and
push
fisubs
outsl
pop
push
sbbl
pop
xor
lock
lret
pop
pop
orb
movsl
mov
dec
ss
cs
mov
loop
or
add
inc
mov
sahf
jae
pop
aam
inc
xor
dec
sahf
bound
jno
cmp
cmp
fisubl
xchg
aas
mov
popf
ret
out
cwtl
jp
xorb
gs
scas
mov
push
mov
decb
fsts
mov
xor
outsb
fs
adc
xchg
push
xor
jae
loopne
sub
ljmp
ds
jb
push
pop
jno
int
xorb
lock
sbb
jmp
lock
adc
xor
inc
adc
jg
inc
loope
dec
outsb
pop
add
int
es
push
lock
sbb
sbb
mov
push
jge
decl
xchg
jg
inc
ret
nop
cmp
lock
arpl
pop
cmpb
adc
mov
aas
cmp
aad
or
push
mov
mov
std
shlb
inc
jl
sub
sub
out
pop
adc
dec
mov
mov
adc
fidivl
pop
scas
push
lds
aaa
jmp
dec
xchg
les
pop
pop
mov
jbe
ja
test
icebp
jl
jbe
inc
push
imul
out
dec
xor
jmp
pushf
jge
jae
cmp
scas
lock
xchg
addw
in
cli
gs
ret
push
outsb
repnz
mov
jae
test
jae
sbb
mov
test
xchg
adc
out
roll
xor
in
mov
jb
push
aas
jmp
and
pop
leave
xor
cmp
pop
jmp
test
jecxz
nop
stos
mov
mov
and
nop
lock
cld
pop
xor
pop
frstor
hlt
lea
jge,pt
or
cld
pop
push
xor
dec
jmp
xchg
arpl
rcrl
mov
push
mov
mov
xor
loop
add
inc
pop
lahf
out
out
stos
repz
push
sub
in
stos
out
pop
loopne
mov
rclb
repz
das
addr16
inc
xchg
mov
loop
pop
iret
xor
fsubr
inc
or
repnz
jge
lcall
xchg
das
sbb
pop
data16
fstpt
dec
cwtl
mov
call
jmp
adc
sub
push
imul
push
xor
cmp
add
fstl
sbbl
push
fs
jno
movsb
push
hlt
fcmovu
outsl
and
pop
push
dec
push
inc
pop
cli
ss
jmp
loope
xor
inc
sub
mov
push
call
add
mov
inc
cmpsb
pushf
fimuls
push
loopne
and
sub
sub
scas
pop
xor
stos
mov
aad
scas
gs
mov
fildll
sbb
mov
push
leave
mov
les
push
inc
push
dec
fsubl
mov
stos
iret
push
inc
lock
pop
lret
orb
jle
hlt
add
sar
cmp
cwtl
enter
in
lock
cltd
repz
mov
rol
sbb
sbb
dec
xchg
and
and
jnp
inc
mov
es
imul
test
insl
mov
mov
add
add
test
sub
or
jmp
mov
sahf
jg
daa
icebp
lods
dec
xchg
arpl
les
les
aad
das
cltd
cmp
in
les
adc
pop
inc
movsw
hlt
int3
dec
mov
mov
gs
hlt
add
jp
sub
inc
out
xchg
sbb
fwait
sahf
cmp
shl
stc
mov
mul
push
push
aam
loope
fwait
rep
dec
ret
xchg
xor
and
xchg
fistps
cli
or
mov
mov
jg
lock
jnp
dec
out
sbbb
ljmp
xor
out
mov
push
ljmp
lret
sub
adc
aaa
loope
push
mov
stos
test
lahf
inc
jb
popf
or
lret
pop
mov
and
jbe
inc
popa
lock
cld
ljmp
jne
lock
mov
movsl
mov
shll
leave
neg
jo
mov
dec
lret
pop
adc
enter
pop
mov
xor
lea
in
jl
movsb
dec
lcall
les
push
cmp
je
pusha
in
adc
scas
jno
sub
lock
fldenv
xor
hlt
jo
push
out
xorl
add
add
push
ss
out
shrl
xchg
into
xor
inc
push
push
data16
xchg
lock
xor
sahf
add
push
sub
xchg
clc
cmp
dec
mov
fmuls
mov
and
loope
shll
add
test
jnp
adc
or
cltd
mov
pop
sahf
cmp
leave
dec
inc
jmp
subl
mov
jmp
mov
data16
out
adc
push
fidivs
insl
sti
push
lods
jp
add
into
jae
jmp
sub
add
iret
mov
jmp
scas
jnp
push
pop
out
ss
movsl
sbb
lret
xchg
roll
cwtl
nop
aad
jp
scas
popf
xor
cmpsb
mov
idivl
dec
add
sub
ret
lods
mov
push
jo
pop
jecxz
fdivs
clc
pop
in
mov
sub
push
movsl
movsb
lret
das
pop
jbe
sarb
ret
cltd
jl
push
cmpsl
pop
inc
and
insl
testl
pop
and
mov
into
aaa
mov
int3
into
mov
sti
push
hlt
iret
push
inc
cwtl
dec
outsb
into
test
jecxz
mov
mov
leave
es
xlat
insl
xor
push
popa
mov
data16
rcrb
lods
or
idivl
stos
and
negl
jns
mov
mov
inc
xor
adc
xchg
add
xor
push
lock
inc
aas
lds
push
inc
cmpsl
scas
ja
lock
pop
cwtl
push
dec
loope
pop
xchg
div
jns
push
lock
icebp
sti
hlt
mov
and
inc
cltd
pop
shrl
adc
aam
pop
inc
leave
mov
and
inc
sahf
mov
outsl
pop
addr16
dec
outsb
xor
dec
mov
nop
lock
lea
sub
and
xor
loopne
push
xchg
test
loopne
sbb
add
mov
test
mov
or
lock
xchg
sub
xchg
fadd
or
cltd
mov
aaa
mov
lret
push
pop
into
fwait
or
jp
jb
and
outsl
shl
and
sub
jb
push
or
jno
sbb
xor
lods
mov
mov
insb
pop
fnstenv
outsl
cmp
pop
insb
jle
pop
test
popa
or
mov
jbe
and
out
mov
mov
test
lea
inc
push
pop
outsl
jo
es
popa
out
in
fwait
les
mov
mov
cmp
mov
hlt
int
bound
shr
add
xor
or
pop
lock
pop
and
dec
push
lret
jns
pop
jge
addr16
and
inc
cwtl
mov
insb
popa
xchg
cli
out
adc
add
out
lods
cmpsl
out
push
pavgw
insb
inc
and
pop
scas
cwtl
pop
out
inc
sbbl
dec
fcomi
test
push
push
push
mov
pop
dec
sub
pop
xlat
cmp
inc
adc
adc
clc
loop
or
fdivrs
data16
adc
hlt
data16
inc
jecxz
jne
aas
sub
jp
push
loopne
jl
pop
or
mov
xorb
mov
add
rorb
pop
inc
daa
ret
mov
into
repz
std
mov
rcr
inc
pop
lock
inc
mov
jno
into
adc
push
add
fidivrs
push
push
sub
and
mov
negl
push
mov
mov
xchg
aam
test
arpl
in
test
shl
xchg
cmp
in
lcall
ss
jmp
inc
mov
dec
cwtl
mov
mov
cmp
jno
mov
js
fisubs
mov
mov
cmc
sti
fldl
mov
mov
insl
pusha
jb
jo
test
movsl
sbbl
jo
out
xchg
addr16
rorb
lea
fisttps
xchg
pop
push
in
arpl
push
es
les
or
loope
ja
mov
mov
clc
call
dec
popf
dec
jo
xor
add
add
dec
push
push
popa
dec
sbb
lock
jae
mov
sbb
add
jb
ficoms
lea
stc
outsl
or
jns
push
jle
mov
ret
adc
cmpsl
dec
pop
out
test
or
mov
sahf
test
out
sub
cltd
dec
xorb
pop
mov
mov
mov
pop
or
cmp
pushf
fcomps
mov
push
aad
inc
lock
xor
jo
adc
movsb
aaa
faddp
mov
mov
enter
push
jp
lock
mov
dec
vmwrite
mov
and
test
xor
push
adc
inc
in
or
mov
sbb
sti
push
aaa
in
sub
lcall
xchg
pop
popa
mov
xchg
or
insb
pop
loopne
in
fucomip
in
imul
adc
inc
mov
adc
mov
pop
sahf
mov
push
daa
inc
popa
lock
call
addr16
test
mov
pop
sub
lods
xor
movsb
loop
test
je
sbb
jp
jae
int
or
fstps
jbe
push
pop
fdivl
dec
call
test
je
push
mov
add
mov
cmp
fldt
nop
fdivr
jmp
or
xor
ret
or
mov
hlt
bound
jecxz
jo
add
jb
test
mov
pop
fsts
lret
test
shlb
fs
sub
sub
repnz
out
imul
lcall
hlt
push
jno
xor
into
fisubs
mov
jp
stos
rcll
mov
shrb
sub
dec
movsl
xorl
cmpsb
sahf
out
jl
dec
jno
hlt
xor
jb
push
stc
add
jne
daa
jns
jge
ret
stc
lock
loopne
jbe
inc
xor
ret
dec
icebp
inc
insb
outsb
popa
loope
cmp
in
jg
jo
in
in
outsb
stc
je
dec
into
mov
insl
hlt
add
mov
dec
fcoml
or
mov
pop
jnp
pop
je
sahf
inc
or
test
es
dec
call
jb
mov
lods
out
sub
sti
sti
push
jns
cmp
inc
sbb
ret
orb
xchg
ds
loop
std
clc
adc
test
pop
or
aad
xchg
xchg
add
pop
loope
setne
jb
mov
js
mov
jmp
push
cmp
sub
testl
inc
jl
mov
mov
and
push
push
lahf
cmp
xor
fists
mov
mov
add
add
mov
xchg
out
test
les
adc
cmp
cmp
div
lods
out
xchg
xchg
imul
push
push
sbb
xchg
cmp
mov
xor
nop
lret
lret
adcl
cmp
mov
cmpsl
popa
dec
lret
movsb
repz
xlat
icebp
push
add
fdivs
xlat
arpl
cmp
negb
hlt
sarl
push
out
adc
cmc
loopne
jb
shr
bound
push
push
sbb
addl
or
rcll
push
cmpsb
loopne
dec
icebp
mov
shr
push
nop
jne
push
pop
jno
sub
fmull
xor
and
cmp
sub
das
mov
loope
shlb
xlat
xor
push
sar
sbb
sbb
push
sub
xchg
adc
stc
cmc
dec
into
dec
xchg
cmp
ret
xchg
in
jae
xchg
invd
push
mov
ror
pop
lock
mov
mov
push
std
sub
cmpsl
hlt
mov
mov
dec
dec
insb
mov
xchg
jle
adc
jl
nop
lock
sti
aas
adc
hlt
lret
ret
lds
loopne
ss
dec
rol
subl
mov
sbb
jae
xor
xchg
jnp
stos
je
push
and
pop
std
and
sub
lds
pop
add
sbb
hlt
and
mov
sub
out
int
hlt
std
pushf
xchg
mov
fs
aaa
sbb
pop
insl
push
mov
xchg
ficoml
mov
leave
lock
mov
addr16
mov
lret
frstor
fsubs
ljmp
fcomi
sub
insb
pop
cmp
sbb
mov
sub
xchg
jae
ret
out
inc
sub
mov
cmp
imul
push
lock
adc
test
fnstcw
lods
int
push
pop
cwtl
sbb
push
js
dec
lods
mov
sbb
clc
push
fistpll
insl
sub
test
in
pop
sub
and
sbb
ficoms
mulb
call
inc
inc
push
arpl
jb
mov
dec
mov
or
int
jle
cld
sbb
cmp
fiadds
repz
sbbl
lahf
mulb
cmp
mov
sub
push
fcmovnb
dec
inc
and
xchg
inc
in
mov
dec
push
addr16
mov
insb
mov
into
scas
cmp
xchg
call
aam
and
sbb
xchg
lock
loop
mov
sub
scas
lds
mov
std
jae
xor
sub
pusha
xchg
xchg
in
jo
cmp
jno
inc
add
mov
bound
inc
imul
sbb
insb
cmpsb
or
out
test
jno
xor
pop
cmc
jmp
mov
sbbl
mulb
lcall
mov
push
mov
aam
dec
adc
repz
inc
je
push
jmp
sbb
adc
push
outsl
in
mov
sahf
fnstenv
xor
jecxz
or
xor
lret
add
lds
aad
frstor
xor
js
fs
clc
cld
paddd
inc
ljmp
xor
cwtl
jbe
bound
adc
inc
jae
nop
in
pop
and
sub
stc
or
and
xchg
lock
std
xchg
sbb
out
cmp
and
fimuls
popf
jg
mov
std
xchg
mov
jge
lds
leave
enter
call
stos
sub
or
andl
xor
test
aad
mov
mov
data16
dec
imul
pop
adc
loope
xor
out
out
or
push
dec
lds
jae
loopne
cltd
xchg
fistpl
jge
push
int3
test
mov
adc
cltd
lea
push
out
adc
inc
fnstsw
pop
push
clc
pop
fsubs
jae
cmc
aam
push
mov
sub
sbb
xchg
lock
push
ret
cwtl
movsb
jmp
fisubl
movsb
sahf
mov
pop
jo
lret
in
lret
sub
push
and
enter
lods
clc
jno
jns
or
cmp
add
fdivrl
and
adc
and
out
mov
xchg
fwait
sub
jecxz
mov
ds
push
cmp
icebp
rclb
xor
cltd
stos
sub
xchg
xor
ficompl
cmp
test
sbb
sub
jns
cmpsl
iret
fld
das
inc
jp
ss
ljmp
push
mov
cmpsb
fnsave
jbe
lcall
fisttps
mov
outsl
clc
sbb
and
inc
cs
outsl
outsl
xchg
xor
and
xchg
sahf
shrl
cmp
adc
stos
mov
sbb
scas
push
mov
into
aaa
sbb
div
ret
mov
xchg
ffree
jle
cmp
lock
jae
std
xchg
lods
inc
jb
push
stos
xor
adc
xchg
xchg
bound
sub
jno
lock
inc
int
push
dec
push
loope
std
jae
pop
push
jmp
jmp
icebp
pop
sub
pop
push
jecxz
xchg
mov
fs
lret
mov
jl
popa
sbb
or
dec
scas
jmp
inc
ret
rclb
ds
out
clc
mov
bnd
insl
lret
jge
push
dec
add
dec
xchg
and
mov
arpl
repz
jo
loopne
lock
lret
xor
stos
scas
aaa
xchg
hlt
sub
repnz
out
outsl
scas
std
data16
out
push
or
pop
jne
mov
outsl
pop
add
int3
push
jo
sbb
into
push
lock
xor
repz
xchg
es
js
cwtl
cltd
leave
push
test
add
inc
xchg
add
mov
lock
movsl
jns
inc
sub
jns
hlt
push
scas
xor
lock
mov
xchg
into
bound
lods
adc
jno
stc
lods
out
inc
rol
call
hlt
fcmovbe
rcrl
pop
mov
cmpsl
inc
push
mov
pop
sarl
jne
sub
in
fldcw
outsl
push
mov
movsb
es
mov
and
dec
xchg
sbb
ss
movsb
sbb
sub
pop
nop
push
gs
or
pop
pushf
sbbl
icebp
imul
xor
sbb
xchg
dec
lock
outsb
and
mov
add
or
or
lret
adc
cmp
popf
cmp
out
xchg
lock
push
pshufw
popf
adc
dec
hlt
scas
adc
sbb
ret
lea
inc
test
sbb
add
jecxz
xchg
cld
sub
jbe
and
inc
sbb
pop
hlt
add
cmp
jbe
pop
cwtl
cmp
out
jbe
pop
xor
push
stc
sub
and
push
and
jno
stos
lock
mov
lock
xchg
or
add
push
lret
dec
cwtl
push
mov
xchg
jp
call
push
xor
and
mov
pop
stos
mov
inc
sbb
loope
mov
iret
or
out
lods
mov
loope
pushf
loop
lock
stos
xchg
hlt
out
ds
insl
lock
mov
inc
sub
inc
cltd
or
cmp
sbb
inc
or
pushf
adcb
or
fs
mov
jae
sahf
aad
xchg
add
sbb
inc
adc
out
inc
push
cwtl
mov
pop
lcall
subl
addb
inc
xor
lret
xchg
lea
cli
fildll
adc
inc
mov
mov
mov
iret
test
test
mov
xor
cltd
mov
mov
jne
into
xor
add
enter
stc
sub
add
sub
aaa
mov
clc
ficomps
xchg
xor
xchg
popf
ja
out
inc
int
std
dec
and
jns
out
enter
test
or
ss
rcrb
clc
arpl
outsl
lea
mov
dec
outsl
or
stc
out
inc
pusha
into
jbe
lods
dec
cmp
jge
pop
ror
dec
jg
xorl
dec
repnz
loope
sbb
and
push
aad
sbb
jnp
fwait
in
jge
fisttpl
xchg
popa
test
lods
mov
rorl
mov
arpl
adc
cmp
dec
aam
pop
inc
push
fldl2t
mov
jno
ret
xor
add
icebp
xor
aaa
cltd
addr16
std
rcl
pop
pushf
out
pop
inc
and
sbb
push
test
sub
lods
lea
hlt
mov
xchg
loope
aaa
scas
jp
aas
mov
les
into
push
jns
jge
sub
stos
fistpl
adc
push
mov
lock
xchg
andb
cmc
mov
loop
and
loopne
out
cmp
mov
pusha
and
dec
icebp
jb
insl
out
gs
jbe
lods
popa
out
mov
ror
dec
push
mov
and
add
aas
cltd
xor
push
jno
lds
lock
mov
and
pop
out
fidivl
out
and
dec
mov
outsb
lock
cmc
mov
call
xchg
jae
lea
cltd
mov
mov
add
cmc
aad
mov
aaa
jb
out
out
cmpb
movb
xor
pop
jg
mov
push
sub
sub
inc
sub
add
mov
push
aaa
sarb
nop
mov
pop
push
xchg
cmp
fidivs
dec
jmp
adc
bound
mov
les
pop
in
sub
int3
ret
dec
jb
jle
loope
jmp
pop
xchg
cmp
push
pop
out
push
mov
xlat
cmp
rcll
test
es
out
das
test
popa
hlt
cld
insb
mov
xor
test
mov
mov
jno
iret
jge
mov
pop
adc
in
and
lret
adcl
jne
fcoml
cwtl
insl
push
cwtl
mov
mov
je
das
xor
test
push
jl
dec
jp
inc
mov
out
xor
cwtl
add
jg
add
mov
lods
inc
add
mov
pop
sbb
add
lcall
jge
or
push
add
xchg
xchg
xchg
pop
mov
jo
lock
fs
sti
pushf
dec
xchg
lret
stos
jb
mov
cmpsl
xchg
leave
loopne
inc
mov
push
cmp
lods
insb
pusha
dec
pop
rdmsr
xchg
dec
movsb
cld
inc
shlb
lcall
ficompl
dec
lret
or
inc
pop
xchg
shll
mov
push
in
xor
fstpl
jbe
or
xor
cmp
popf
popf
fdivrs
cwtl
xor
pop
ss
push
cmp
repnz
mov
sub
loope
push
pop
and
jle
daa
mov
dec
outsl
jno
lods
xchg
not
pop
pop
mov
rcrl
dec
push
xchg
mov
add
fldt
xchg
ja
andl
shl
outsl
popf
or
fwait
jno
ret
stc
mov
daa
sub
push
cld
add
pop
xor
push
pop
mov
les
xor
and
xor
adc
lods
movsb
pop
jge
xchg
push
clc
sub
movntq
test
xchg
lahf
arpl
les
jg
pop
mov
sbb
popf
jmp
adc
aad
push
popa
dec
xor
and
push
daa
js
pop
adc
inc
jnp
dec
aad
cmp
ret
cmpsl
into
or
lds
pop
icebp
scas
fsubl
out
jbe
add
mov
jl
add
mov
fsubrl
jle
jae
out
imul
mov
xlat
divb
mov
cltd
iret
pop
rorl
into
stos
pop
xchg
jecxz
movsl
xor
pop
dec
cmp
cmp
sbb
mov
jno
mov
mov
test
inc
dec
loop
imul
inc
lock
or
push
andl
retw
mov
lds
out
push
insl
sbb
in
push
mov
ds
pop
ss
mov
inc
mov
hlt
int
jo
clc
cmp
mov
lret
jns
jns
outsb
push
aam
push
aaa
xor
xor
inc
dec
fcompl
push
enter
xor
push
pop
mov
sbb
adcb
fsub
dec
push
cmp
jns
sub
lock
mov
mov
or
addr16
call
push
lea
push
daa
jmp
int3
popa
outsb
int
daa
test
outsb
scas
jb
mov
adc
push
push
sbb
jg
imulb
cmp
icebp
pop
es
lea
hlt
arpl
sub
xchg
outsb
mov
std
cli
pushf
mov
mov
sbb
cmp
pop
sub
jecxz
scas
push
inc
pushf
inc
jo
ror
sbb
xchg
sub
pop
into
xor
xchg
jmp
cltd
je,pt
jae
sbb
cli
test
inc
jmp
test
cltd
insl
push
das
std
or
rcl
add
aam
jne
adc
push
mov
cmp
and
sub
mov
into
lock
call
push
inc
loope
add
loope
adc
lea
or
in
cmp
pop
jns
sub
push
push
mov
es
sbb
mov
dec
in
push
test
sub
xor
dec
rolb
fsubrs
ret
outsb
adc
cmp
outsb
ret
mov
mov
out
icebp
daa
push
cmp
pop
and
ret
dec
jg
insl
fisubs
out
or
inc
sub
sbb
mov
outsl
cltd
fidivs
add
and
in
jle
imul
push
xchg
adc
xchg
stc
daa
adc
jns
jae
sub
cmp
js
mov
lea
inc
jbe
dec
or
inc
ds
lods
xor
xor
jge
cmp
dec
push
mov
cwtl
mov
into
enter
push
popa
push
in
addr16
sub
adc
push
icebp
xor
in
rorb
test
pop
adc
hlt
mov
std
lock
dec
fisttps
jo
sub
adc
xor
insb
sbb
ja
sub
xchg
outsl
inc
mov
mov
or
pop
jo
les
adc
mov
xchg
mov
adc
cmp
lret
cltd
ss
mov
mov
ja
fistl
xor
js
ret
bnd
ficoml
sbb
push
jg
pusha
nop
push
in
subb
mov
je
push
xor
pop
insb
sbb
adc
popa
cmc
xchg
adc
lock
xchg
mov
pushf
pop
jl
inc
add
jae
ret
jnp
and
enter
jo
ret
fs
add
or
pusha
bound
outsl
enter
mov
fidivl
test
roll
sub
int
rcrl
cmp
cwtl
in
cmp
mov
je
xlat
or
push
push
pusha
cld
imulb
sbb
jno
fwait
or
pop
in
mov
fcoml
out
xchg
cltd
pop
aad
push
sub
dec
sbbl
mov
or
hlt
cmp
cld
dec
cmp
xorb
ss
stos
sarl
inc
mov
inc
mov
and
fxch
in
pop
roll
sbb
lea
sbb
aam
decb
add
cwtl
mov
dec
add
mov
jb
xchg
cmc
add
and
hlt
mov
popa
je
imul
cwtl
test
sbb
lea
je
filds
cmp
adc
cmp
loop
out
fwait
cwtl
xor
xlat
sub
jbe
adc
pop
sub
mov
xlat
daa
and
call
or
cmp
jmp
repnz
dec
mov
push
xor
jg
push
push
or
loope
xor
scas
repnz
dec
xchg
outsl
or
push
arpl
shll
mov
adc
mov
ljmp
jns
out
inc
jecxz
insl
and
push
adc
mov
int
dec
je
outsl
xor
xchg
pop
iret
jns
push
addr16
sub
aaa
mov
jnp
outsb
sub
leave
sub
lahf
lods
hlt
pop
mov
jnp
or
dec
mov
xor
lock
lock
addr16
test
fsubrs
xlat
lcall
mov
aaa
fs
mov
push
push
mov
rol
adc
xchg
xor
lret
and
pop
leave
ss
je
xor
jo
shll
lahf
push
push
mov
hlt
push
pusha
pop
adc
adc
out
push
lea
lds
into
and
arpl
dec
loop
sti
sbb
pop
lock
and
cmp
movsl
std
mov
sub
lods
loopne
push
cmpsb
enter
dec
jp
rorb
out
lea
fiadds
sbb
scas
push
out
xchg
cltd
inc
leave
push
aad
test
push
mov
mov
mov
int
lea
dec
in
popf
mov
arpl
push
call
dec
int
xor
std
xchg
in
push
insb
adc
aad
fisubrl
xchg
mov
lods
dec
mov
push
dec
mov
xchg
pop
push
cmp
jg
push
xor
leave
xchg
inc
or
lret
jns
lret
mov
loop,pt
and
lods
dec
jp
jae
test
enter
inc
inc
xchg
pusha
inc
xor
xchg
lret
dec
inc
lret
dec
in
mov
jge
fs
fucom
pushf
sub
push
into
aaa
into
stos
lock
adc
out
xchg
leave
out
add
jmp
xchg
mov
xchg
jnp
or
sbb
dec
in
addr16
inc
out
test
push
fstpt
jp
out
lea
inc
je
add
test
and
inc
sbb
fsub
jb
das
dec
dec
or
mov
xor
dec
pop
lea
sub
xor
cltd
mov
fs
sub
fcoml
jbe
jmp
int
mov
stos
test
xorl
and
and
aad
jmp
sbb
mov
popa
scas
inc
outsb
stos
jno
jae
cltd
jg
daa
std
movsb
popa
popa
lock
sbb
xchg
sbb
jns
hlt
mov
sbb
cmpsb
fbstp
stos
jb,pt
sub
fdivs
inc
xor
mov
jnp
or
rcll
sbb
subl
jle
push
pop
jg
cmp
xchg
add
lods
xor
ja
jae
mov
dec
cmp
inc
clc
xchg
iret
mov
jnp
jge
lods
xchg
mov
mov
xchg
insl
out
jo
add
shl
shlb
cwtl
and
sbb
add
mov
out
or
in
mov
and
jo
fwait
bound
pop
testl
jo
push
dec
outsl
out
mov
mov
cltd
hlt
cmp
adc
cld
push
scas
mov
in
add
or
gs
add
push
xchg
nop
shl
jbe
push
lock
xchg
pop
or
repz
cwtl
mov
and
lret
dec
sbb
fimuls
stos
lods
cli
insl
mov
ss
mov
sti
jae
lock
pop
out
leave
popa
scas
andb
mov
dec
mov
shrb
sti
sbb
cmp
or
loopne
xchg
lock
jb
outsb
pop
arpl
lods
pop
pop
push
xlat
cmp
adc
ficompl
popf
pushf
jge
popa
add
add
jecxz
sub
pop
push
inc
jmp
stos
sbbl
js
movsb
scas
xchg
mov
mov
pop
mov
adc
jnp
ret
popa
mov
cmc
mov
push
mov
stos
inc
mov
gs
lret
xchg
jbe
push
test
mov
push
imul
xchg
les
mov
sub
dec
xor
pop
insl
rcll
mov
dec
push
test
sbb
imul
ret
loop
faddl
lock
mov
stc
push
enter
mov
loopne
dec
cltd
insb
stc
xor
outsl
pop
jp
fmul
xor
mov
push
sarb
flds
flds
mov
cmpsb
and
aaa
pop
cmpsl
jecxz
into
sahf
out
adc
or
cmp
adc
xchg
sbb
jecxz
mov
test
lock
pop
nop
jbe
and
pop
rolb
aad
xor
add
lcall
cmpsl
in
pop
and
inc
cwtl
xor
fisubl
pop
aam
push
into
dec
and
fcoml
iret
fs
cmp
test
lods
add
lea
lock
leave
aaa
rcrb
dec
pop
cltd
or
mov
cli
push
mov
xorl
dec
pop
add
hlt
push
into
clc
lods
jo
stos
test
push
mov
xlat
sbb
gs
push
sbb
mov
xchg
and
test
shll
gs
dec
jp
sub
push
aad
dec
repz
call
fstl
in
jns
jno
insl
int3
pop
pusha
adc
subl
popf
hlt
dec
pusha
lock
call
jle
jbe
in
sub
adcl
aam
adc
push
mov
add
pop
cmp
loope
push
loopne
ds
lret
xchg
loop
adc
lods
xor
lret
or
hlt
insb
cmp
and
or
inc
or
dec
push
fcoml
cld
jge
jbe
add
pop
lock
roll
jno
xor
lods
and
imul
fdiv
push
pushf
js
inc
jecxz
out
xchg
imul
mov
sbb
and
dec
ret
and
cmpsl
cmc
dec
sub
cmp
sbb
adcl
clc
push
ljmp
sub
cmpb
mov
outsb
popf
inc
aaa
iret
pop
xor
loope
nop
ss
push
out
popa
sub
mov
xor
popa
cmp
jl
sbb
leave
or
mov
xchg
aas
add
dec
inc
hlt
or
inc
xchg
jecxz
cltd
test
jbe
repnz
xchg
ror
push
push
inc
in
imul
adc
cmp
scas
cli
stos
iret
cmp
les
mov
sbb
sub
jle
mov
mov
jge
mull
rcll
cmp
inc
outsb
sahf
jnp
jns
rep
movsb
push
ss
lahf
sub
xchg
imull
popfw
jle
test
addb
adc
mov
lock
das
imul
jbe
scas
dec
mov
push
dec
push
cmpsb
or
mov
mov
arpl
dec
dec
and
shlb
push
or
xchg
jp
loopne
mov
dec
xchg
pop
hlt
adc
xchg
cmp
xor
je
mov
test
sbb
mov
test
xor
insb
inc
xrelease
push
sbb
cld
pop
iret
push
out
je
repz
jae
or
fs
or
push
jmp
movsb
call
lock
js
cmp
cmpsb
outsl
xor
jns
fcom
loopne
add
fsubrl
push
and
xchg
lock
pop
in
xor
subl
ss
dec
cmp
or
leave
lea
cwtl
inc
jl
mov
iret
sbb
adc
test
and
mov
iret
jmp
jmp
sahf
or
movsb
pop
in
hlt
cmp
add
mov
fcomps
inc
dec
out
cld
xlat
rcrl
fisubs
xchg
jb
imul
ret
jmp
mov
push
jg
add
dec
test
clc
lahf
das
test
and
dec
lea
addr16
inc
push
xchg
scas
push
cmp
fsubs
xor
jmp
mov
and
leave
and
adc
lock
add
inc
in
cmpsb
or
inc
xchg
jae
xchg
out
aad
jns
and
leave
xchg
aam
inc
repz
iret
jge
dec
push
sbb
sbb
dec
push
scas
xor
mov
dec
push
jp
cmp
test
push
pop
ds
sahf
lea
add
test
ss
inc
or
xor
xchg
cwtl
ljmp
lcall
jns
mov
inc
in
mov
pop
push
jb
xchg
pop
ja
mov
jno
pushf
dec
out
dec
in
test
inc
test
out
xor
jno
mov
cmp
jae
daa
out
ss
xchg
nop
leave
fisubrl
mov
pushf
aas
push
push
push
hlt
adc
popa
cmp
inc
or
xchg
cltd
in
mov
in
xor
leave
and
inc
je
or
mov
inc
sbb
sbb
outsl
mov
sbb
or
jno
add
push
fisubs
and
or
xor
xchg
xchg
jg
js
sub
pop
sbb
out
out
int
ja
mov
in
lret
lods
sbb
leave
xchg
add
jbe
xor
popa
adc
or
dec
sbb
add
insb
movsl
nop
test
int3
mov
ret
es
push
mov
pop
movsb
out
cltd
cmp
nop
dec
out
pop
and
andb
sbb
pop
rcrl
lods
and
cwtl
adc
call
push
das
pushw
xor
cmp
stc
mov
stos
ja
xchg
xchg
gs
loope
imul
dec
sub
xor
popf
outsb
scas
jmp
cmp
push
push
add
pop
mov
mov
test
pusha
aaa
popa
stos
sbb
repnz
add
sahf
test
or
cs
lods
stos
cwtl
mov
nop
jno
xchg
mov
notb
push
jnp
popa
xchg
inc
jl
push
insb
add
sub
sub
dec
sahf
or
andb
inc
or
cmp
lret
stos
add
dec
dec
addb
testl
mov
dec
xlat
push
mov
sbb
out
xchg
mov
jl
push
cmc
into
mov
pop
mov
nop
xor
mov
pop
push
std
mov
sub
dec
loope
test
or
xchg
or
and
pop
cmp
push
push
mov
cmp
aaa
inc
cmpsl
stc
cli
adc
add
push
lock
and
cli
int3
push
aad
shrb
sbb
and
jle
cld
iret
lret
jg
mov
mov
xlat
jle
dec
inc
inc
push
xor
jg
jbe
mov
pop
xchg
xor
scas
inc
sti
lret
fiadds
sbb
cmp
stos
xchg
lods
pop
sti
pop
xchg
pop
xor
jns
mov
pop
or
imul
dec
inc
mov
pop
jae
rcrl
cld
push
mov
jno
lret
aad
mov
sbb
lcall
mov
jns
sahf
test
fcoms
popf
test
enter
fldt
outsb
pusha
add
xor
int
pop
imul
ffree
cltd
sti
in
pop
lock
mov
inc
mov
int
into
lcall
push
mov
or
mov
hlt
xor
sub
mov
movsb
aaa
jg
xchg
pop
aaa
xchg
xor
xchg
js
cwtl
jg
push
push
insl
lods
and
stos
and
loop
out
mov
mov
sub
mov
lock
push
jns
out
pushf
cwtl
jno
mov
daa
call
loop
pop
stos
enter
pop
pusha
mov
ja
out
jmp
stos
sub
dec
xchg
mov
outsb
xor
mov
into
and
or
gs
insl
test
lea
sub
xchg
lock
inc
mov
push
xchg
cmp
sbb
push
fimuls
push
and
and
test
js
loop
mov
mov
mov
insl
fsubl
push
mov
lock
int3
loop
jno
sahf
les
push
into
in
insb
push
or
adcb
pop
xor
stos
sahf
xchg
sbbl
mov
xchg
jle
sub
test
hlt
push
js
hlt
push
in
bound
dec
inc
mov
es
out
int3
leave
mov
fcmovb
scas
jns
in
or
bound
xor
scas
push
xchg
mov
hlt
loop
and
lock
mov
test
pop
pusha
jge
add
mov
inc
rcrl
cmp
std
adc
jno
pop
ror
shrl
hlt
aaa
inc
or
hlt
add
sti
icebp
mov
jp
pop
mov
sub
into
xor
xchg
or
ja
js
call
scas
clc
stos
movsl
jp
sbb
cmc
out
mov
repnz
fwait
aaa
or
mov
cmp
pop
sub
lret
push
lods
lock
xor
repz
or
into
xchg
das
cwtl
jmp
imul
and
xchg
or
jno
lret
out
dec
mov
mov
jno
fsubr
inc
scas
pop
sub
jl
cmp
pop
movsl
iret
fsubrl
cmp
lock
mov
cwtl
inc
pop
cs
push
and
fcoml
jbe
movsl
pushf
aad
xor
test
and
sti
mov
mov
shrl
cs
mov
movsl
xchg
jno
or
lahf
lahf
aaa
rep
lret
jecxz
mov
orl
sub
out
add
loope
xlat
mov
mov
out
movsl
mov
add
or
stos
cltd
ret
pop
lea
sarb
mov
insl
cmpb
cmc
jl
fldl
mov
insl
adc
jno
nop
push
lcall
jno
adc
mov
add
inc
ds
adc
mov
pop
divb
mov
and
jbe
sbb
pop
leave
lds
jg,pn
lret
ljmp
jns
movsl
pop
cmp
push
lea
icebp
and
push
sub
out
stos
dec
mov
adc
cli
mov
pop
iret
jp
push
inc
sbb
jbe
push
lock
inc
push
cmp
in
cs
xchg
jno
push
xchg
pushf
enter
xor
repz
std
adc
push
addr16
cmp
inc
xlat
xor
adc
fildll
test
popf
mov
mov
jnp
insb
aam
sahf
jp
jp
ss
imul
shr
enter
mov
sbb
jmp
or
test
lock
cmp
mov
aaa
testl
push
out
mov
jb
rcrb
and
mov
pusha
cmp
jp
cmp
lock
das
dec
xchg
jecxz
adcl
fldl
enter
cli
mov
cmp
sar
push
call
pop
loope
cmpsb
or
push
push
mov
stc
inc
ret
mov
xor
pop
inc
push
cwtl
pusha
lods
loopne
dec
mov
scas
add
pop
sbb
or
out
sti
pop
ja
int3
ss
pushf
mov
aad
xchg
jb
cmp
sbb
dec
jp
aad
repnz
dec
ret
jp
dec
xchg
std
outsb
in
notb
dec
jno
fnstsw
inc
inc
nop
jl
rorl
scas
adc
lock
pop
sbb
inc
xchg
mov
dec
imul
pop
mov
pop
andl
pusha
push
pop
das
push
xchg
add
sub
sbb
ret
sub
jae
lret
jecxz
and
movsl
and
cltd
push
popa
std
popf
pop
jae
int
xchg
dec
mov
dec
jmp
mov
mov
int
xor
push
pop
inc
ret
inc
neg
dec
mov
loopne
push
int3
rcll
xchg
pop
out
imul
sub
enter
fistpll
lds
mov
jae
fildll
xor
scas
outsb
mov
sbb
pop
insl
lods
js
mov
out
xlat
mov
xor
mov
pop
or
cld
and
and
mov
mov
cld
lcall
dec
cmp
mov
cld
std
sti
lds
jg
shr
jp
mov
fwait
lret
adc
fwait
lock
jbe
dec
jae
xor
mov
orl
into
xor
inc
js
iret
add
and
add
adc
adc
push
stos
and
jecxz
jbe
fimull
add
int
lds
dec
sahf
lahf
mov
filds
out
pop
push
lock
cltd
call
and
and
scas
and
pop
out
fsubrs
cwtl
ret
pop
int
lock
mov
out
mov
pop
dec
sub
test
jbe
inc
rol
push
add
sub
cmpb
lods
clc
movsb
xchg
dec
inc
or
js
out
fstp
rcrb
cmpsb
dec
jns
xor
sbb
xchg
repnz
pop
sub
push
hlt
dec
cld
jmp
push
cmp
inc
inc
mov
jae
adc
adc
iret
push
aad
adc
mov
lock
gs
lock
push
in
xor
and
jle
ret
hlt
and
xchg
int
or
iret
ljmp
push
cmp
push
stos
out
stc
lcall
lock
pop
hlt
mov
sbb
or
push
push
fstl
jbe
je
adc
and
push
loopne
pop
jmp
xchg
outsl
push
pop
adc
mov
pop
out
jae
stos
sub
inc
jne
and
xchg
and
mov
jg
insl
mov
mov
stos
dec
lock
cmp
xor
lret
das
fimull
cmpsb
into
hlt
push
push
adc
scas
rcrb
mov
int
mov
mov
sahf
mov
jl
pop
xchg
jmp
out
xchg
lock
scas
aas
out
pop
int
jmp
cwtl
outsb
pop
decl
xor
mov
dec
and
push
or
push
cwtl
lock
xchg
fisubs
idivb
cmp
or
jp
push
mov
add
sti
sbb
insb
push
test
icebp
ret
push
sub
test
mov
subl
int
fisttpll
mov
xchg
pop
cmp
xchg
into
add
push
pop
pusha
sbb
dec
or
push
fstpt
movsl
lahf
cld
xchg
xchg
pop
lds
leave
and
in
push
imul
fisubl
scas
push
lock
mulb
shll
sub
loope
jnp
test
femms
dec
cmp
mov
xchg
mov
sbb
lcall
and
loope
cli
inc
aaa
scas
lea
int
mov
hlt
lock
fwait
mov
insl
mov
test
dec
test
pop
adc
sbb
xlat
daa
es
pop
in
out
mov
mov
je
inc
fbld
xor
into
imul
inc
mov
in
push
ss
or
pop
loope
imul
hlt
scas
cltd
mov
adc
dec
jge
mov
sbb
jmp
sub
sub
call
xchg
cwtl
mov
lock
addr16
inc
jmp
popa
int3
popf
and
push
out
mov
leave
lea
xor
hlt
leave
cmp
insl
test
movsl
xlat
dec
xor
mov
test
sbb
lods
jnp
pop
jge
push
sub
mov
pop
or
aas
cmp
lret
sbb
testl
push
call
fidivrs
mov
push
xchg
js
dec
ljmp
jmp
push
fcoms
mov
daa
cs
and
dec
int3
in
or
insl
mov
scas
jb
xchg
rol
mov
test
cmp
lcall
or
xor
fwait
mov
push
hlt
adc
data16
dec
xchg
pop
in
popa
popa
xchg
inc
hlt
mov
fldt
adc
cmp
mov
cwtl
test
dec
sub
add
push
lret
cli
dec
mov
pop
dec
jl
dec
mov
dec
cmp
enter
lret
jp
lods
das
lds
scas
sbb
popa
mov
jg
jno
push
push
ret
xor
fildll
pusha
fbld
insl
xchg
les
out
test
data16
mov
cli
push
hlt
movsl
cmpsl
ds
pop
ja
add
pushf
shl
cmp
adc
rorb
xor
jmp
or
jp
das
inc
les
rep
mov
jne
clc
int3
scas
stc
mov
jp
mov
ret
shlb
cmpsb
sahf
inc
cli
pusha
sbb
pop
lods
jle,pt
ficoms
jp
mov
xchg
xor
inc
lahf
pop
stc
xlat
int3
cmpsl
adc
xchg
cmp
xchg
jb
dec
mov
test
out
bound
mov
cli
cmp
fistpl
inc
jno
js
push
jnp
xchg
outsl
inc
xchg
inc
jp
mov
aad
adc
rcrl
cmp
xor
xchg
test
test
push
aaa
add
stos
loope
add
cmp
into
xchg
out
cmp
mov
dec
fcmovb
test
ljmp
xchg
stc
jns
sub
jmp
hlt
jge
loopne
lcall
icebp
das
adc
imul
jp
mov
pop
repz
xchg
into
adc
or
inc
mov
cmp
sbb
inc
add
rolb
and
notl
stos
cmpsl
cwtl
dec
jp
dec
into
dec
push
jo
test
imul
call
xchg
adc
push
or
outsl
adc
mov
in
inc
push
pop
sub
mov
mov
xchg
cli
inc
pop
filds
jb
outsl
ds
into
sbb
aam
loope
or
int3
fldcw
stos
cmpsb
test
mov
jnp
mov
test
cli
stos
pop
mov
dec
hlt
inc
and
scas
lock
pop
mov
roll
lret
out
test
jbe
xor
je
xor
cld
mov
cmp
jo
lahf
ficoml
into
dec
push
clc
leave
mov
aas
popa
pushf
lea
std
fistpl
xchg
scas
sub
inc
cld
mov
xor
cmpsb
mov
sub
inc
adc
push
push
repz
and
mov
or
xor
sti
lods
push
sub
mov
sbb
pop
inc
ljmp
dec
int3
call
lea
mov
in
mov
loop
lock
lcall
movsb
fucomip
lcall
syscall
adc
sub
lock
inc
pop
xchg
sbb
pop
shlb
movsl
mov
enter
fcoms
hlt
mov
jecxz
cmpsb
test
shr
add
test
cmpsl
andb
mov
dec
xor
mov
xchg
mov
repnz
jecxz
mov
xor
adc
dec
jns
hlt
push
xchg
or
mov
fstl
push
stc
adc
or
into
cltd
scas
out
mov
loope
arpl
cmp
cmp
inc
add
dec
mov
pushf
add
ret
outsl
dec
test
gs
jbe
pop
dec
repz
pop
add
mov
or
mov
inc
into
int3
das
fmull
cmp
sbb
inc
add
rcrl
cmpsb
cmp
lcall
add
and
fildll
sub
int3
negl
pop
jle
jmp
mov
pop
mov
sub
jecxz
xor
shlb
stc
dec
add
add
insb
test
add
popf
roll
push
icebp
popa
jl
int3
jo
sti
lock
shl
cld
dec
dec
repz
ret
dec
mov
ret
call
sbb
out
mov
ret
lock
mov
mov
push
dec
nop
sbb
cmpsl
das
mov
sub
pop
in
xor
sbb
cmp
xchg
arpl
movsl
mov
jecxz
lods
dec
xchg
les
mov
enter
cmp
push
push
jb
ja
hlt
cmp
pushf
xor
push
mov
inc
ss
or
sub
and
adc
je
je
push
push
pop
fdivrl
pop
cwtl
add
jmp
pusha
test
shr
les
push
or
into
jns
rol
inc
add
cmp
adc
inc
imul
add
add
jmp
push
fistps
xchg
mov
and
dec
jge
mov
mov
pop
jo
hlt
aam
cli
shll
or
cwtl
int3
call
cmp
test
inc
cmp
sahf
lock
enter
pop
popf
outsl
jo
pop
add
mov
push
mov
es
test
andb
dec
push
cld
lods
sbb
mov
rcll
xchg
push
pop
inc
rclb
dec
adc
in
ljmp
fs
int
ficompl
cli
sbb
dec
data16
scas
insl
int
cltd
mov
dec
dec
lahf
dec
fcoml
dec
lock
jge
rcrb
imul
bnd
mov
std
pop
bound
in
aaa
insl
lea
js
shrb
pop
sti
pop
pop
push
adc
dec
dec
insl
push
jo
sbb
jne
test
insl
jg
mov
outsl
fisubrl
lea
rorl
imul
fsubrp
push
shr
insl
adcl
jge
sbb
add
int
outsl
shlb
shrb
fsubrp
leave
push
iret
rcr
sbb
mov
pop
jg
pusha
popa
lea
rorl
scas
mov
adc
es
jb
outsb
push
je
jle
xchg
and
dec
outsb
pop
pusha
in
pop
xor
sbbb
out
scas
sahf
jbe
ror
orl
repz
int
loope
mov
scas
addr16
stc
icebp
xchg
mov
push
mov
aad
push
loope
xchg
orb
in
popa
sbb
lods
bound
mov
mov
mov
adc
jle
jnp
mov
push
mov
xchg
push
ja
shrb
fistps
int
loopne
pop
pop
lock
fstl
pop
int
negl
inc
outsl
incl
fst
fstpl
xchg
fdivs
out
outsl
jle,pt
lock
sti
stos
lods
idiv
aad
fcompl
mov
int
icebp
sub
pop
lea
mov
jno
adc
mov
lea
or
dec
repnz
sbb
int
jb,pn
int
lea
xor
dec
popf
adc
int
fwait
mov
repz
lahf
fimuls
mov
cltd
mov
mov
rcrb
leave
cld
cmp
mov
into
sbb
clc
add
in
hlt
cs
mov
jge
addr16
arpl
push
jmp
loope
loopne
ret
push
jns
xchg
dec
stos
shlb
cmp
leave
mov
lock
and
add
mov
out
fcmovnu
adc
imul
cwtl
add
push
shll
mov
dec
mov
dec
fnstcw
icebp
push
jecxz
adc
push
xor
bound
daa
iret
scas
add
add
adc
or
xor
adc
js
pand
sbb
jge
inc
int3
pop
inc
hlt
ret
add
aam
cmp
mov
add
mov
pop
ljmp
push
cwtl
inc
jno
stos
hlt
outsl
inc
aad
popf
sub
es
add
movsl
repnz
lcall
pop
add
imul
test
jp
xchg
pop
es
mov
push
jno
fistps
pop
mov
push
sbb
fcompl
outsb
xor
add
test
imul
inc
push
loopne
push
mov
inc
nop
dec
js
inc
test
lock
fiadds
sbb
sub
fbld
inc
mov
sbb
adc
adc
or
xor
xlat
shlb
ret
test
ljmp
sub
popf
int
or
mov
sbb
popl
movsl
mov
cmp
inc
jnp
neg
xchg
inc
mov
jbe
jl
leave
jl
lock
xor
pop
sbb
das
lahf
cmp
scas
pop
sbb
sub
sub
mov
push
cltd
lcall
repz
je
out
stos
mov
adc
imul
fstpl
sbbl
hlt
adc
inc
add
outsl
jns
jecxz
dec
add
mov
clc
add
xor
jbe
orl
adc
stc
nop
inc
out
data16
lds
dec
xchg
inc
push
mov
mov
adc
pop
pushf
sbb
out
out
lods
lret
ret
dec
mov
scas
inc
mov
std
arpl
popf
pop
add
and
xor
inc
in
sub
pop
push
mov
int3
out
jbe
sbb
or
sub
cmp
or
mov
xchg
xchg
outsl
call
mov
das
xor
jecxz
js
aas
out
pushf
movsl
sbb
pop
cmpsb
push
in
mov
out
sub
pop
xchg
dec
sti
mov
xlat
mov
out
and
xchg
cmp
xchg
xor
loop
cmp
ret
inc
push
sahf
cs
mov
or
mov
aaa
int3
or
loope
shlb
sub
aam
and
call
push
push
stos
xchg
addr16
jecxz
xchg
popa
out
shrd
add
movsl
imul
cld
xor
xor
xchg
rol
mov
je
lds
fisttpll
leave
and
dec
mov
jns
xchg
mov
pop
fdivrs
imul
jp
insl
pop
lahf
test
jo
mov
xchg
mov
add
mov
in
jnp
xchg
sbb
out
fstpl
push
pushl
outsl
and
inc
mov
jb
jge
xor
addr16
xchg
and
lock
dec
aas
xchg
sub
mov
or
js
pop
pop
insb
hlt
push
out
dec
test
or
sub
add
dec
dec
stc
mov
push
pop
mov
mov
out
mov
xor
stos
xchg
js
jns
repz
gs
mov
add
scas
mov
sub
into
ret
cli
push
mov
pop
or
dec
dec
scas
mov
xchg
sub
xchg
dec
shll
sbb
lcall
cmp
pop
inc
aad
sub
push
fisttpl
jae
jne
std
cmp
push
sbb
xchg
push
mov
jns
testl
jge
dec
add
jbe
jb
lods
xchg
int3
ret
mov
adc
loopne
loop
add
push
or
jo
hlt
int
push
out
cmc
ret
loopne
or
pop
push
out
adc
rcr
sub
or
or
cmp
dec
dec
jo
cmp
cmp
sbb
movsb
lret
lcall
adc
xor
jno
cmp
ret
jp
or
pop
dec
repz
push
and
int3
daa
cmp
fmuls
js
ret
adc
mov
out
hlt
xchg
mov
out
mov
js
or
xchg
shrb
jae
xor
push
inc
add
xchg
testl
mov
xor
inc
and
scas
or
test
dec
mov
mov
lret
mov
jmp
sub
inc
cmp
push
mov
hlt
or
fisttpll
xor
imul
jnp
mov
mov
stos
inc
mov
bound
sbb
cltd
mov
or
outsb
ds
fs
punpcklwd
mov
dec
mov
out
movsb
loop
lcall
outsb
test
out
lock
in
mov
xchg
pop
pop
jo
aaa
fsubs
push
jo
dec
stos
shll
sbb
dec
scas
mov
lock
inc
lcall
pop
imul
push
jge
rol
out
jno
sub
dec
lea
loope
mov
call
nop
dec
jecxz
in
mov
push
jno
or
imul
push
stc
add
es
or
subl
test
aaa
cmpsl
scas
and
std
jmp
jg
sti
dec
or
inc
mov
add
lock
inc
jl
adc
ret
je
push
jp
sbb
inc
movsb
mov
xchg
push
inc
jp
orl
jge
cmpsl
aam
fnstsw
test
ret
xchg
xchg
scas
cmp
jmp
jo
or
frstor
add
xchg
adc
dec
sub
mov
jecxz
push
daa
je
xor
xchg
push
into
adc
popf
fs
jp
xor
pop
fstp
pusha
jge
lea
push
jns
andl
add
inc
mov
xor
sbb
dec
mov
sbb
loope
das
jo
rolb
add
mov
inc
adc
jno
dec
ds
into
sbb
vcvtpd2psx
or
dec
inc
ljmp
push
loopne
cmp
xchg
inc
gs
jp
iret
lock
xor
mov
xchg
and
iret
mov
or
rcrb
add
push
dec
fdivl
fs
int
push
ss
pop
mov
dec
xchg
cmp
push
dec
push
sti
xor
xchg
jno
jb
test
das
pop
fnsave
xchg
jbe
jno
mov
xor
mov
pushf
je
outsb
push
outsl
sub
idivb
pop
imul
ds
and
ljmp
pop
mov
cltd
jnp
mov
jge
inc
cmpsb
push
mov
sbb
or
dec
jo
push
enter
xor
push
int
add
lret
lods
dec
cwtl
xor
les
gs
add
adc
pop
jmp
mov
fucomp
int
inc
xchg
insl
mov
dec
fdivl
and
insb
or
pop
aad
jl
gs
fmuls
scas
cmp
sti
cmp
jo
mov
and
mov
mov
ljmp
pop
gs
sub
out
xor
gs
ss
cmovge
cmp
loopne
lods
cltd
sbb
addl
stos
into
xor
push
inc
jle
and
xchg
sti
mov
and
mov
fsts
imul
loopne
ret
push
bound
jnp
stc
cld
jmp
mov
sahf
xor
idiv
lea
shrb
fpatan
sbb
jbe
into
xlat
fucomp
out
sub
cs
add
lahf
xchg
pop
push
jecxz
fimuls
jne
insl
lea
mov
ret
pop
mov
inc
in
pop
xchg
fnsave
push
cmp
xor
xor
mov
sub
icebp
push
inc
add
jmp
aaa
outsb
xor
movsl
adc
iret
sarb
xchg
or
es
xlat
inc
out
gs
sub
lahf
mov
int
jb
jno
mov
mov
sub
jo
add
mov
jecxz
inc
test
sub
fs
stos
stc
jnp
fxch
je
movsl
mov
clc
mov
mov
push
loopne
rorb
inc
mov
out
sbb
fstl
int
adc
push
pop
bound
dec
jno
loopne
jecxz
adc
adc
xlat
fsubs
cmc
mov
pop
jo
cmp
fucom
mov
dec
xchg
add
test
mov
pop
lahf
mov
mov
adc
fwait
testb
xchg
int
xor
sarl
mov
adc
rolb
inc
xchg
lds
pop
xor
gs
rorb
icebp
xchg
xchg
in
loopne
mov
and
ljmp
pop
in
mov
push
fwait
aas
imul
fdivrl
jb
jae
sbb
xchg
mov
pop
mov
sbb
insl
popa
inc
mov
and
loopne
test
hlt
jg
mov
shr
outsb
jecxz
inc
and
mov
ror
push
sbb
jns
push
adc
lds
cmpsb
frstor
rcrb
daa
push
ja
data16
xchg
sahf
push
inc
jmp
pop
into
mov
clc
jge
stos
cmp
xchg
lcallw
lahf
push
lods
add
push
inc
das
outsl
aad
add
sub
xor
gs
mov
pop
inc
fstpl
imul
xchg
es
mov
pusha
pop
xlat
cmp
push
fs
adc
loop
pop
stc
aaa
dec
push
xor
jge
dec
inc
jns
jo,pn
insb
int
loop
pop
pop
xchg
orl
movsl
addr16
jmp
ss
lea
std
cmp
testb
mov
aad
sub
daa
xchg
cltd
sbb
iret
outsb
nop
push
dec
divb
dec
dec
das
lds
ljmp
js
pop
xchg
gs
sub
stos
mov
push
push
xchg
insb
push
adc
push
in
fucomp
push
inc
iret
into
cmp
outsb
push
mov
std
rorb
ds
mov
xchg
push
cmp
out
adc
and
push
ss
jns
fldt
xchg
cmp
add
mov
xor
int
clc
xor
gs
jge
cmp
loope
decb
rcr
dec
fisttpll
xchg
mov
jecxz
iret
jne
es
dec
sub
push
mov
loopne
or
daa
and
test
and
icebp
imul
test
lds
leave
das
push
and
ss
clc
push
inc
or
push
cmp
rcr
cmpsl
add
das
adc
ljmp
jb
jl
and
inc
pop
adc
xchg
out
push
jne
add
jecxz
push
mov
jle
xchg
jp
mov
in
js
push
into
lock
sub
fs
dec
das
lcall
cmp
lock
cltd
repnz
cmp
push
leave
ss
gs
fnstsw
cmp
jle
mov
popa
or
push
mov
mov
mov
xchg
das
push
or
dec
nop
xlat
sbb
cmp
jg
dec
sarl
sbbb
into
loopne
int
test
dec
cmp
repnz
cmpsb
js
sbb
out
aad
aas
cwtl
pop
aam
cmp
push
fildl
xchg
rorl
sbb
jns
sbb
pop
insl
add
xor
dec
push
sbb
incb
push
fstl
and
test
xchg
scas
pop
and
mov
testb
orb
lcall
scas
rolb
aam
es
loope
sbb
xor
inc
ficoml
loopne
sbb
outsl
cli
pop
pop
repz
jmp
mov
push
pextrw
xor
into
mov
lods
add
gs
adc
inc
movsb
mov
dec
jnp
sub
ret
mov
xchg
xchg
adc
mov
dec
jne
fisubrs
push
cmp
mov
push
dec
jo
testb
hlt
rorb
cs
cmp
xchg
inc
sbb
jl
jb
dec
sbb
xor
lods
lock
enter
jge
lret
mov
adc
mov
cmp
jo
cltd
sub
mov
or
hlt
add
out
aas
mov
jnp
pop
push
jg
dec
insl
push
xorb
mov
jge
fsubs
and
ret
sub
ds
mov
sbb
outsb
cmpsl
jo
jae
sub
or
ljmpw
inc
pop
loopne
into
adc
push
sub
mov
fadd
inc
mov
xor
mov
sub
sub
insb
loopne
sahf
loope
mov
xor
xchg
xlat
loopne
or
xchg
and
jl
stos
mov
int
jp
aam
push
popf
loopne
sub
lods
ljmp
loopne
push
cltd
es
jne
mov
sub
into
fdivrs
dec
pop
es
xchg
out
and
jle
pop
mov
sub
lods
xchg
pop
jmp
mov
dec
lods
sub
xor
and
sbb
push
xchg
lret
int
mov
loopne
mov
or
mov
mov
or
aam
inc
into
pop
int3
insb
cmp
lea
out
vorps
popa
add
sub
xor
and
xchg
pop
out
push
xchg
cmp
sub
mov
push
dec
ret
pop
out
icebp
jo
mov
mov
repz
sahf
fnsave
inc
decb
jbe
sub
mov
push
inc
inc
add
sbb
pop
aad
imul
pop
inc
xor
xor
mov
in
jno
and
pop
push
ss
mov
fnsave
push
lds
jmp
dec
fcompl
inc
xchg
cmpsb
cmp
mov
cmp
dec
add
testb
mov
jnp
add
das
jo
push
lret
sbb
xchg
ss
jo
xchg
push
xchg
test
faddl
testl
ret
cmc
xor
or
outsl
xchg
lcall
stos
and
nop
or
push
test
dec
mov
rcll
mov
pop
pop
xor
sub
outsb
loopne
dec
imul
dec
fstp
mov
mov
pop
xchg
stc
dec
xchg
rorl
adc
addr16
push
fiaddl
adc
je
shrl
lock
data16
sub
xchg
pop
xor
pop
inc
push
mov
movsb
mov
int
jmp
enter
add
jno
les
nop
loopnew
arpl
pop
adc
sbb
xchg
imul
rcll
sub
mov
cli
pop
cmp
mov
adc
or
cmp
and
es
repnz
adc
aam
push
xor
sahf
cmpb
fidivl
adc
iretw
jp
outsb
lods
mov
sub
aas
aam
push
popf
jnp
mov
fstl
mov
fnsave
and
inc
sbb
mov
push
push
jg
cmp
pop
loopne
cmp
jo
out
push
fnstsw
mov
movsb
lahf
sbb
sarb
sbb
mov
jmp
inc
dec
roll
js
cmp
dec
dec
es
cmp
outsb
mov
push
and
shl
repz
sub
cli
leave
push
cmp
pop
cmpsb
xchg
sub
movsl
js
pop
scas
mov
cmpsl
pop
lods
mov
mov
int
push
push
jle
dec
cmp
or
push
addl
and
das
mov
dec
or
xchg
or
popa
xor
dec
mov
cmpsl
pop
lods
sub
cmpsl
out
sub
dec
nop
and
mov
sub
repnz
and
inc
add
insb
iret
push
adc
mov
xchg
push
mull
clc
dec
lahf
xor
jg
mov
imul
sub
and
enter
ss
int
aas
dec
int3
movsb
push
shl
inc
push
or
mov
fdivr
test
xchg
cmpsl
into
enter
cltd
xor
xor
mov
scas
inc
lret
mov
rcll
cs
sub
lcall
pop
pushf
in
sbb
shrb
push
ret
loopne
xor
sbb
adc
xor
mov
ljmp
add
lahf
mov
jae
roll
sti
cmp
push
dec
sbb
lock
inc
push
xchg
push
and
xchg
mov
je
gs
xchg
inc
xor
xor
mov
xchg
and
jmp
sbbl
xor
test
xchg
jno
clc
outsb
pop
aam
sahf
pop
fldl
mov
mov
xor
cmp
add
fimull
leave
cmp
fst
ret
mov
in
aam
xlat
loopne
mov
xchg
fimull
outsl
or
jo
iret
sub
xchg
int3
push
pop
jo
lock
int
mov
mov
lcall
pop
jg
xor
movsl
inc
or
push
push
xor
clc
enter
pop
and
push
inc
sub
or
dec
lcall
addb
sub
outsb
test
xor
jmp
mov
imul
sbb
cmp
in
call
popa
int3
sub
xchg
andps
dec
xchg
inc
mov
cmp
sub
shrl
inc
idiv
pusha
into
loop
cwtl
fldt
outsb
mov
test
and
mov
es
mov
loopne
cmp
stc
out
imul
dec
or
test
jne
xlat
mov
outsl
mov
cmp
ja
ret
popa
fisttps
nop
iret
push
test
into
cmp
xor
xor
inc
jo
jne
ret
cmp
xchg
pop
mov
ss
push
cmp
sub
adc
sub
mov
or
and
mov
sti
fstl
scas
or
mov
sub
cli
lret
repnz
push
test
rcll
sbb
dec
xorb
push
xchg
push
iret
xchg
dec
shl
push
and
rcl
sub
pushf
ljmp
lret
inc
ret
xor
pop
xchg
mov
xor
xchg
inc
dec
testl
scas
mov
sub
sub
dec
insl
dec
sbb
dec
fstps
push
push
lds
dec
test
jne
sub
mov
test
dec
lods
add
divl
mov
int
xor
clc
push
mov
sub
xchg
xchg
outsb
add
mov
inc
repz
mov
sbb
jmp
cmp
insl
hlt
cmpsl
pop
mov
dec
sysenter
adc
in
aas
push
sbb
test
cltd
pop
or
insl
dec
lods
addr16
or
ds
mov
outsb
int
or
jno
pop
jmp
mov
dec
popf
add
jb
jmp
mov
xor
lea
jnp
popa
push
pop
xor
push
lret
cld
imul
shrb
clc
jne
inc
mov
sub
shll
orb
dec
iret
cld
adc
popa
dec
fwait
xchg
xchg
sbb
out
pop
int
inc
cmp
sub
jge
enter
xor
roll
add
cmp
sbb
fnstsw
out
mov
push
lahf
out
shll
adc
int3
sbb
sbb
xor
inc
cltd
dec
or
sbb
mov
jl
jo
sbb
pop
xor
rcr
inc
cmc
popa
shrl
push
add
shll
pop
adc
push
push
sub
cltd
cmp
dec
pop
das
inc
xchg
inc
xlat
push
iret
add
inc
orb
push
push
bound
xchg
imul
add
std
bound
adc
cmp
mov
clc
aaa
inc
mov
xchg
sti
int
push
push
mov
int
outsb
jle
fcoml
jnp
sbb
mov
mov
mov
push
imul
lret
mov
push
dec
push
jae
pop
imul
and
loopne
cld
shll
lahf
int
jbe
jle
dec
pop
ret
xchg
push
outsb
and
and
push
mov
inc
loope
daa
and
aam
in
cmp
inc
mov
scas
cmp
cmp
xlat
inc
insb
push
xlat
mov
and
and
jnp
and
push
inc
inc
aaa
jge
sub
mov
insb
int
pop
push
in
dec
repnz
dec
in
dec
dec
or
xchg
inc
stos
jecxz
rorb
push
cmp
scas
into
sti
fstpl
sub
dec
and
cmp
fiaddl
jae
sub
inc
rcrl
icebp
sbb
sub
aam
rclb
fisttpll
in
test
leave
stos
imul
fwait
sub
or
pop
cmpsl
add
jno
in
push
fsubp
cmp
aas
ljmp
iret
test
push
inc
jns
nop
pop
divl
fcmovbe
mov
xchg
int3
pusha
sub
insl
pushf
iret
push
inc
adc
jbe
xchg
jg
sahf
dec
jg
mov
xchg
inc
outsl
icebp
jbe
sbb
and
mov
and
pushf
insb
push
xchg
loopne
pop
lea
loope
cmp
mov
insb
loopne
xchg
in
inc
jge
ljmp
and
sub
mov
inc
jo
adc
lea
cmp
lahf
add
and
pop
cmpsl
dec
aaa
or
sub
adc
or
xchg
imul
fbld
push
js
neg
jbe
jge
jae
lcall
in
add
jns
cmp
xorb
iret
mov
xchg
xor
sbb
arpl
push
add
sub
mov
jne
movsl
rclb
lds
dec
sub
std
lock
mov
cmp
xor
mov
testl
jo
mov
popf
lcall
mov
cltd
push
jmp
cltd
hlt
inc
push
xchg
cmp
jo
mov
push
out
pushf
imul
mov
stos
and
jle
stos
mov
xor
aas
jnp
mov
inc
aad
dec
cmc
loopne
xchg
push
notb
data16
ss
adc
push
cmp
dec
xor
orl
pop
dec
loop
iret
xor
std
mov
hlt
mov
aas
dec
aaa
pop
push
cmp
repnz
pop
push
sub
mov
mov
cmp
xchg
jge
loopne
sbb
dec
xchg
or
pop
cmp
jnp
ljmp
mov
sbb
sub
dec
push
or
mov
stc
fcoms
loop
ja
mov
dec
dec
inc
jno
scas
add
xchg
ss
push
mov
jae
cmc
push
orb
jmp
fimull
out
sbb
rcr
dec
leave
gs
and
mov
icebp
rol
pusha
movsb
call
dec
lret
dec
pop
push
pop
clc
aas
leave
inc
stc
loope
xchg
addb
inc
out
in
mov
mov
sti
pop
stc
dec
pop
sub
fwait
xchg
test
xor
sub
sub
inc
iret
mov
enter
and
jno
in
repz
std
in
jo
add
mov
xchg
fidivrs
stos
dec
mov
test
pop
insl
mov
push
and
in
ret
out
je
inc
dec
dec
adc
lret
dec
dec
pop
mov
xor
mov
mov
mov
mov
sub
mov
mov
sub
jo
sbb
and
iret
mov
xor
test
rclb
cltd
pop
sub
aad
fs
jge
mov
sbbl
xor
pop
adc
push
shlb
adcl
cli
jns
xor
mov
dec
mov
fcmovb
push
dec
adc
test
pop
inc
sbb
jg
sbb
fsubs
loope
lea
iret
mov
mov
or
ja
jae
push
std
stos
sub
sti
call
das
fistpll
inc
push
movsl
push
mov
xchg
roll
add
incl
insb
ja
ret
pop
ds
dec
sbb
cmp
mov
mov
pop
sahf
mov
xor
pop
lret
fisubrs
out
xchg
popa
push
xchg
iret
sbb
pop
mov
inc
dec
orb
sub
inc
push
dec
aad
scas
cmp
dec
push
xor
and
pop
cmc
cld
test
lret
popf
dec
sbb
cli
cltd
pop
testb
inc
fs
dec
push
fisubs
sarl
aaa
and
mov
ret
adc
push
dec
or
mov
mov
sub
dec
jl
push
scas
leave
mov
iret
out
jno
jle
orl
inc
movsl
cli
xchg
fwait
mov
ss
jae
mov
pop
jno
xchg
adc
dec
popa
idiv
sub
into
cld
int
fwait
xor
push
lcall
fs
mov
arpl
cwtl
push
arpl
xor
jl
cli
das
xor
dec
fisttps
rcrb
in
shrb
ret
nop
lods
xchg
out
jle
bound
mov
push
nop
push
add
add
mov
push
faddl
into
inc
in
dec
mov
or
inc
cs
imul
lcall
and
aad
push
dec
fisubl
push
fisttpl
je
cmp
dec
test
pop
push
cmp
pusha
shll
out
push
mov
jae
stos
xchg
insl
push
mov
fdivs
or
or
cmpsb
and
icebp
addr16
push
mov
loopne
and
push
popf
mov
dec
add
jmp
cmovns
mov
out
and
popf
dec
xor
xchg
jne
cwtl
push
add
push
inc
jo
daa
pop
cltd
jno
mov
mov
cmp
repnz
dec
mov
gs
adc
inc
outsl
ljmp
fisubrs
popf
pop
add
add
rclb
push
ds
mov
aaa
stos
xor
sbb
jnp
andb
das
xlat
add
add
dec
xor
lods
rcrb
sub
adc
mov
test
dec
and
inc
flds
and
int
loope
lahf
stos
mov
xchg
pop
add
sub
and
in
mov
xor
sbb
pop
inc
xor
dec
gs
xchg
cmpl
push
pop
cmp
and
inc
fnstenv
cmp
dec
rcll
dec
hlt
push
dec
dec
in
push
arpl
push
jb
mov
iret
push
int3
test
lret
mov
cmpxchg
push
add
in
sarb
aas
cld
fbstp
popa
xchg
testl
fidivrl
scas
outsb
inc
and
iret
aam
push
jl
dec
add
and
dec
incb
add
mov
fistpl
or
rolb
xchg
add
adc
push
xor
sbb
lea
dec
out
xor
sar
hlt
lret
sub
shl
inc
enter
pusha
lcall
adc
add
lods
push
or
adc
nop
sar
or
inc
and
imul
je
lock
jmp
fimuls
jo
jmp
fldcw
mov
and
adc
ds
dec
xor
sahf
test
dec
rcr
mov
movsl
ret
xchg
mov
fisttpll
das
xor
dec
pop
mov
insl
inc
dec
mov
pop
jmp
fbld
or
xor
mov
cli
popf
push
in
push
aaa
xchg
xchg
stc
mov
mov
sarb
mov
fs
into
outsb
stos
cmp
mov
mov
jno
or
xchg
xchg
cltd
daa
dec
stos
cmc
pop
inc
movsb
push
shl
xchg
push
pop
cli
into
arpl
sar
sarl
push
dec
int
test
sbb
mov
push
in
adc
cmp
repz
cmp
push
icebp
in
je
and
xor
mov
repnz
mov
dec
fadd
dec
mov
mov
add
or
rcl
orb
xchg
cmp
cwtl
mov
ja
pop
sbb
cli
xchg
push
fwait
leave
push
lcall
mov
fdivs
frstor
into
pop
dec
or
fnstsw
imul
movsb
arpl
stc
fstpl
scas
stc
dec
faddl
lret
dec
enter
dec
sub
cmp
in
jo
push
lds
call
subb
clc
push
pop
mov
adc
mov
dec
push
call
inc
pop
rcr
mov
push
add
push
inc
pop
mov
aad
pop
int
mov
sbb
mov
lock
sub
lods
fcoml
adc
aad
rolb
or
cmp
out
outsb
jno
pop
out
jge
test
cmpsl
std
cmp
test
pop
in
dec
iret
mov
rcll
cmp
cld
mov
inc
jmp
sbb
dec
or
add
out
fld
inc
inc
lahf
iret
addr16
jno
and
push
mov
in
xchg
imul
cwtl
es
out
into
adc
xor
clc
ret
popf
sub
repnz
out
inc
mov
xchg
mov
adcb
push
mov
pop
dec
loopne
xchg
ds
sbb
addb
dec
cmc
adc
pop
jle
scas
fldcw
icebp
dec
adc
int3
inc
mov
imul
cmp
cmp
cmp
mov
cmp
dec
and
insb
cmp
mov
xchg
jnp
pop
pop
arpl
daa
mov
xor
nop
push
cmp
cs
cmp
sbb
add
enter
jne
movsb
call
or
shl
loopne
ss
pusha
mov
mov
in
and
pop
and
loope
lret
push
decb
cltd
int
mulb
jge
popf
pop
or
cmp
int
mov
ja
sbb
mov
push
int
hlt
or
adc
insb
jmp
pop
jne
insb
jle
imul
test
sub
push
dec
add
sbb
loope
xchg
sub
pop
jle
mulb
xchg
call
nop
lods
mull
inc
sti
cmp
imul
adc
mov
dec
data16
loope
dec
imul
fisttpl
sbb
adc
mov
lods
movsl
mov
pop
shl
jae
insl
inc
inc
jb
mov
xor
stos
lret
dec
push
mov
dec
pop
dec
xchg
lock
ret
bound
leave
pop
int3
pop
jns
stos
out
ja
or
nop
imul
roll
dec
leave
dec
jge
inc
add
cltd
xchg
mov
or
lock
pop
mov
xor
pop
lock
push
pop
mov
popa
stos
movb
jnp
jle
pop
pop
out
sarl
xorl
jne
scas
int
sbb
adc
jne
sbb
dec
sbbb
call
cwtl
push
jns
ret
rolb
popf
lods
pop
int
adc
movsb
data16
cmpsb
push
insl
dec
mov
jnp
push
sarl
icebp
dec
hlt
loopne
xchg
in
jge
dec
popa
out
rcrb
enter
xor
push
jno
movb
and
dec
int
and
insl
mov
xchg
test
mov
inc
mov
cltd
popf
push
jl
sub
pusha
cltd
comiss
dec
and
push
rorb
inc
mov
insl
call
xchg
lret
or
ret
lds
out
mov
fbld
mov
mov
jo
jnp
fisttpl
xor
aaa
xchg
jl
dec
aaa
arpl
sbb
jns
sahf
dec
sbb
adc
jge
outsb
scas
int
pop
and
je
mov
xchg
popa
jnp
lods
and
mov
movb
cmpsb
push
cmp
push
lret
outsb
enter
out
cld
divb
mov
xchg
inc
sarl
pop
mov
add
loop
ret
movsb
lods
mov
outsl
out
arpl
vhsubps
push
mov
xor
jnp
hlt
stos
xorl
fidivrs
sbb
data16
push
inc
hlt
sub
aas
iret
push
xchg
aaa
outsl
xchg
push
dec
scas
loop
inc
mov
sub
pop
mov
pop
pop
clc
xchg
lea
inc
pop
sub
inc
fnstcw
pop
je
int
orb
fldcw
loope
fldcw
jecxz
dec
out
int3
je
call
lea
out
mov
xchg
xor
out
jno
outsb
outsl
mov
dec
pop
mov
and
mov
and
push
into
negl
jae
stos
mov
mov
sti
fs
xchg
cli
jne
sbb
cmc
jp
fisttpll
push
out
push
repz
les
dec
push
lock
mov
rcll
aaa
aas
xorl
aaa
mov
xchg
int
ret
std
sahf
xchg
jmp
pop
out
lock
arpl
push
mov
push
fstpl
movsl
inc
push
mov
jl
iret
movsl
sub
shlb
jo,pt
movsl
imul
shrb
dec
mov
pusha
pop
mov
pop
out
out
pusha
inc
mov
aad
mov
mov
mov
xchg
xchg
ret
ljmp
pop
pop
mov
rcll
inc
bound
mov
int
jae
ret
mov
mov
mov
or
push
or
sahf
movsb
push
pop
lock
test
inc
shlb
push
inc
in
jp
stos
pop
fldcw
pop
sbb
mov
outsl
pop
std
jno
mov
imul
mov
xor
mov
lea
push
in
ror
dec
adcl
ret
lret
adc
or
dec
xchg
orl
push
iret
sbb
mov
pop
dec
xor
sbb
scas
mov
jmp
cmp
mov
out
sub
inc
pop
inc
mov
add
cmp
xor
push
dec
outsb
sbb
ret
lret
pop
mov
test
adc
mov
push
andl
inc
fsubrp
cmp
nop
les
insl
jle
std
xchg
inc
popl
imul
jg
adc
je
mov
aad
nop
out
cmp
push
push
lock
and
mov
inc
adc
mov
sbb
out
pop
pusha
jb
pop
ja
outsb
fs
lods
imul
mov
push
jne
aad
out
push
mov
insl
mov
push
jno
out
xchg
xchg
pop
in
and
push
xor
jno
sbb
fbstp
fbstp
jg
insl
pop
lea
aaa
popf
hlt
lods
xlat
pop
lock
add
push
movb
mov
xor
cmp
cs
lock
mov
or
ja
mov
fsubrs
jge
push
inc
aad
push
cli
mov
add
in
jg
jns
stos
lea
mov
out
ja
lret
lret
repnz
mov
pop
sub
mov
jle
mov
das
jl
test
mov
mov
lea
xchg
std
mov
in
inc
mov
xchg
loop
cmp
dec
leave
out
jno
mov
shl
xchg
in
aam
xchg
mov
test
xchg
cmpl
pop
xor
popf
into
mov
jae
dec
xlat
out
inc
jb
cmpsl
aas
push
scas
fdivrs
ficoml
xor
mov
fnsave
mov
std
jb
push
or
push
iret
in
and
je
inc
and
fwait
jecxz
jmp
ljmp
fstps
addr16
js
loopne
push
out
inc
push
push
lret
xchg
jp
xchg
sbb
arpl
in
inc
pop
xchg
hlt
and
pop
scas
popf
das
cmc
aam
out
mov
sub
jne
jno
cmp
or
mov
push
dec
sbb
mov
arpl
lock
pop
push
add
xchg
cmpsb
lock
adc
test
push
sahf
mov
sarl
popf
xor
xchg
iret
mov
pop
xchg
popa
jmp
sbb
mov
decb
fdiv
out
movsl
pop
fcmovnb
inc
pop
mov
ret
pop
enter
pop
out
inc
orb
mov
push
int
jge
xor
push
in
xchg
and
pop
adc
dec
cmp
push
mov
shll
test
dec
lea
loopne
pop
push
aaa
or
je
jne
cmc
bound
int3
pop
fidivrs
add
adcl
lock
sub
mov
jl
mov
and
into
popa
out
push
sub
outsl
dec
cmp
lcall
push
inc
xchg
cs
and
mov
aam
mov
jecxz
adc
int
jge
pop
push
jo
inc
rcr
out
scas
lock
mov
scas
push
cmc
dec
lds
mov
and
es
sub
add
cmc
xor
jae
mov
dec
xor
push
pop
mov
testb
cmp
js
jp
seta
lds
add
ret
stos
inc
ds
lret
inc
inc
adc
es
pop
xchg
jno
pop
lret
xlat
lret
jno
sahf
int3
push
movaps
mov
clc
xchg
jle
out
je
push
push
sub
xchg
mov
test
push
scas
add
fnstenv
push
repnz
lea
sbb
push
jle
sahf
push
mov
dec
daa
mov
jnp
xchg
hlt
mov
lock
xor
popa
hlt
std
push
adc
xchg
out
jl
loope
pop
stos
lock
and
jne
or
test
xchg
fisubrl
push
inc
xchg
jmp
mov
int3
pusha
loope
enter
sub
ss
int
cmpsl
or
mov
cmp
push
and
add
cltd
stos
decl
and
sti
iret
pop
rep
mov
mov
xor
rcll
jb
mov
mov
les
pop
mov
mov
pop
stos
hlt
int3
dec
sub
outsb
adc
out
ds
add
jb
lea
xor
insl
dec
fwait
test
in
adcl
fnstsw
sbbb
sbb
sub
fldz
jb
pop
clc
sbb
inc
push
test
mov
cmp
test
push
jne
pop
loop
inc
mov
cmp
pop
bound
andl
fwait
xchg
and
jl
out
imul
xor
hlt
push
lahf
loope
sbb
cmp
hlt
push
push
clc
mov
aad
popa
pop
fwait
lock
loop
outsb
outsl
mov
jno
out
ret
push
test
dec
imul
sbb
jns
sahf
je
cmpsb
fwait
repnz
xchg
stc
aaa
filds
add
mov
iret
stos
ficoms
enter
and
jae
out
pop
lret
hlt
insb
cmp
dec
enter
push
inc
jle
mov
subl
fidivs
lods
sub
rorl
mov
stos
mov
aad
jns
out
jbe
jno
loopne
cld
inc
aam
or
hlt
into
lods
fistpl
bound
push
cs
aaa
push
fmull
mov
out
mov
daa
into
mov
mov
sarb
jae
clc
lods
mov
adc
and
cmp
adc
std
add
fwait
pop
pop
adc
pop
jl
mov
add
nop
jbe
adc
lock
sub
dec
sbb
inc
mov
cltd
cmp
jne
movsl
dec
inc
or
out
enter
outsb
xchg
jge
xchg
adcb
popf
pop
mov
movsb
or
in
mov
jecxz
mov
sahf
jle
xchg
test
lahf
or
int
hlt
out
inc
push
pop
shrl
push
enter
out
out
out
hlt
xchg
xor
cmp
sahf
mov
pop
loope
negb
add
notl
add
rolb
das
inc
jb
cmp
lcall
repnz
jno
mov
cmp
mov
stos
xchg
mov
nop
and
push
push
and
xorb
scas
jns
sub
pop
mov
pop
xchg
hlt
dec
and
outsb
push
dec
mov
and
hlt
stc
repnz
fs
mov
repnz
xor
gs
sub
inc
test
cmp
jne
jno
push
das
ret
pop
mov
push
inc
lret
jg
push
std
lock
cli
sbb
rorl
out
ds
and
nop
pusha
sbb
mov
cmp
popa
sti
mov
outsb
loopne
cwtl
aas
ret
cmpsl
and
rorb
int
lea
imul
les
sti
and
dec
jae
outsb
sbb
out
fisttpl
xor
and
push
push
or
pop
dec
inc
xor
dec
clc
jle
dec
int
int
mov
add
repz
mov
pop
dec
lds
nop
sarl
hlt
mov
dec
outsb
cltd
dec
push
adcb
xor
dec
xchg
sahf
sbb
inc
jb
in
dec
pop
dec
les
sbb
push
mov
dec
push
adc
mov
lahf
mov
lea
mov
adc
imul
sub
mov
xchg
outsl
dec
mov
push
imul
sbb
aam
dec
int
push
dec
sub
movsl
mov
dec
lahf
mov
mov
dec
insb
dec
lret
mov
dec
in
insl
jl
aas
dec
xor
mov
mov
lds
jno
add
fmuls
cwtl
in
jns
fnsave
add
add
fbstp
pop
xor
adc
lods
mov
mov
push
lods
fistpl
cld
pop
add
sub
loope
or
and
sahf
leave
test
das
rorl
add
adc
frstor
clc
loop
into
dec
xchg
xor
out
jmp
inc
les
xchg
mov
sbb
ret
lea
dec
lret
xor
xchg
or
popf
sbb
js
scas
imul
push
sbb
cmpsb
jo
loop
dec
xor
inc
mov
dec
out
or
fisttpl
imul
mov
in
mov
mov
or
dec
testb
sub
test
stos
and
jbe
sbb
rcl
push
inc
clc
or
push
gs
jae
dec
and
adc
fwait
shr
lock
jge
call
std
loopne
dec
cmpsl
stos
cmp
leave
stos
pop
or
adc
dec
pop
push
sbb
sub
sbb
in
xor
xor
pop
mov
mov
push
mov
sbb
xchg
jp
pop
pushl
xchg
dec
mov
push
mov
jns
fwait
es
mov
mov
cwtl
pop
jne
std
jmp
cmpsl
or
rcrb
xchg
rorl
push
clc
inc
xchg
sbb
sbb
jnp
cmp
mov
data16
adc
inc
add
les
xchg
cs
dec
repz
dec
xor
mov
sbb
mov
dec
cmp
sbb
dec
les
adc
dec
mov
jbe
pop
in
mov
pop
mov
and
push
insb
bnd
xchg
loopne
or
ds
lods
mov
sbb
jno
shl
int
jge
push
loopne
xchg
and
loop
inc
and
xchg
mov
jns
test
bound
xchg
push
out
jmp
pop
loop
cltd
mov
mov
and
aad
and
test
sti
sbb
cmp
dec
pop
ss
inc
mov
dec
push
popa
mov
adc
popf
dec
adc
push
pop
push
ja
mov
test
movsl
push
fdivrl
movsb
sub
mov
dec
mov
add
ficompl
out
or
mov
xor
into
leave
vdivps
aaa
cli
jns
mov
sbb
mov
lcall
mov
pushf
pop
dec
lods
rolb
lcall
outsb
ret
dec
daa
or
in
mov
clc
js
and
test
add
into
cwtl
fwait
adc
lcall
pop
mov
cs
dec
test
xchg
insb
sti
fbstp
loope
es
fisubrl
out
fucomi
lock
or
mov
jp
into
add
dec
jbe
mov
lods
xchg
stos
cltd
or
out
or
cmp
lock
sbb
and
jecxz
push
dec
dec
in
jae
call
loope
mov
mov
mov
hlt
xchg
mov
shll
or
push
aas
bound
jb
mov
sbb
into
push
sbb
outsl
pop
test
jmp
lock
pop
fstpl
xchg
iret
into
adc
cmp
mov
add
ds
xchg
xchg
into
call
jo
shll
sub
xor
lds
out
lods
test
lret
fsubr
cmp
rolb
lret
clc
outsb
push
out
dec
addr16
sbb
jnp
mov
jne
inc
sbb
jp
outsl
hlt
ss
adc
push
out
cmp
mov
nop
je
sahf
mov
pop
ret
gs
lret
testb
mov
ret
hlt
add
jmp
out
adcb
cmp
mov
scas
fs
iret
or
dec
jp
sub
dec
imul
pop
jbe
outsb
pop
adc
mov
inc
or
inc
push
imul
into
push
dec
mov
shlb
mov
fldt
push
sub
mov
mov
xchg
test
mov
add
daa
mov
mov
mov
fdivrl
fistpll
mov
call
dec
xor
stos
stos
sbb
icebp
lock
jg
push
in
pop
cmp
leave
dec
dec
lods
xlat
push
xchg
jnp
imul
adc
imul
push
pop
inc
shlb
inc
xchg
cmpsb
arpl
int
cmp
pop
pop
and
fnstsw
gs
dec
aaa
lcall
pushf
into
push
add
sti
dec
daa
add
fwait
cmp
addb
iret
lods
push
dec
cmp
in
inc
pop
dec
stos
call
and
mov
cmpl
fsubs
jecxz
pop
dec
cmp
mov
mov
pop
dec
xor
rcr
inc
cwtl
pop
lea
pop
in
lock
aam
push
cltd
std
cmp
fbstp
dec
and
mov
dec
xchg
add
iret
test
xor
pop
mov
inc
dec
sub
es
shl
pop
xor
mov
in
push
ss
cmp
aas
pop
in
dec
rcll
adc
fwait
xor
dec
pop
pop
dec
inc
mov
lds
jecxz
outsb
outsl
and
mov
movsl
xor
adc
mov
jo
cmpsb
addl
test
mov
orb
pop
fnstenv
add
arpl
popl
loope
enter
xchg
sarb
notl
dec
addr16
sbb
in
out
int
push
add
push
je
ljmp
push
inc
cs
push
dec
test
mov
or
xchg
test
dec
outsl
add
fsubs
imul
xlat
mov
mov
sub
pushf
lahf
xorb
xor
imul
dec
sarb
roll
push
pop
js
shlb
dec
xor
dec
inc
dec
pushf
aad
xor
mov
adc
push
test
rorb
dec
adc
cmp
mov
xor
stos
popf
dec
cmpl
mov
dec
pop
mov
adc
sub
outsl
xor
test
push
dec
sub
roll
dec
shlb
push
lods
sbb
push
test
cmp
cld
call
cmp
cmc
cwtl
jg
push
inc
sub
add
dec
dec
push
dec
aas
fistl
add
push
xchg
sbb
add
mov
in
pop
rcrb
roll
and
lds
dec
stc
fs
adcl
cmc
inc
inc
sbb
dec
testl
push
cs
sahf
sub
lcall
mov
imul
or
mov
cmp
sbb
dec
lds
lcall
es
stc
dec
dec
or
popf
icebp
adc
scas
pop
mov
test
daa
addb
imul
pop
or
lret
and
loopne
sub
inc
fwait
jle
mov
mulb
and
test
jnp
pop
popa
or
push
push
xor
push
in
push
aam
mov
loopne
repz
jo
push
jmp
das
gs
stos
imul
outsb
out
mov
lret
dec
nop
pop
test
mov
sbb
int3
orl
inc
push
lds
push
or
sub
into
popa
iret
and
xchg
dec
xor
clc
jg
push
cmpb
inc
cwtl
les
imul
test
loopne
ds
xchg
out
test
push
push
xlat
arpl
dec
inc
dec
cmp
stc
adc
adc
imul
dec
push
cmp
rorb
repnz
adc
jmp
xor
shl
jp
push
jno
jge
fcmove
gs
insl
jecxz
dec
xchg
pop
rol
mul
push
dec
cmp
pop
int
fwait
sub
mov
dec
and
ds
xchg
mov
jg
mov
mov
jle
dec
in
mov
stc
push
fimuls
and
dec
dec
pop
and
mov
cmp
mov
clc
mov
sbb
leave
sbb
add
dec
xor
xor
test
xor
lods
decb
add
cs
inc
orl
jbe
movsl
dec
inc
mov
sub
xor
or
int3
dec
and
icebp
aam
test
pop
mov
cmp
jo
into
or
movsl
pop
mov
jmp
adcb
das
dec
xor
dec
popf
das
dec
insl
mov
add
adc
lods
lea
ljmp
xchg
mov
adc
sub
inc
jle
mov
push
loopne
xchg
adc
int
lret
sub
lcall
pop
jle
dec
xor
adcb
inc
pop
dec
fbstp
je
dec
adc
dec
lcall
aaa
inc
push
movsl
push
jno
in
pop
cmp
mov
jge
add
xchg
dec
push
mov
lret
dec
fldcw
and
push
fstpl
jmp
pushf
mov
and
scas
testl
fdiv
xor
loop
aam
push
sbb
not
dec
xor
sarb
inc
add
dec
test
out
and
xchg
mov
les
ss
nop
xor
adc
mov
sbb
and
jb
mov
es
sbb
push
lock
mov
adcl
mov
inc
dec
ds
mov
dec
sbb
pop
mov
lea
shlb
push
xor
xchg
out
or
mov
lea
mov
mov
and
dec
fiadds
out
xlat
dec
fldenv
fnsave
movb
lcall
ret
test
popf
in
iret
mov
push
dec
dec
sbb
mov
movsl
dec
loope
fnstcw
iret
xor
sarb
nop
push
call
mov
daa
mov
out
div
fimull
clc
push
push
dec
dec
je
push
sbb
loope
mov
call
out
leave
ret
jl
jp
pop
arpl
repnz
es
shl
jecxz
mov
xor
dec
scas
loope
mov
mov
push
xor
popa
andb
dec
popf
imul
scas
dec
dec
aas
cmp
inc
cmc
jp
xlat
cmp
push
push
dec
fstps
mov
outsl
add
stos
dec
mov
out
or
imul
push
or
cwtl
xchg
aad
leave
dec
clc
test
mov
xor
inc
dec
arpl
xchg
inc
dec
add
repnz
push
mov
pop
dec
test
sbb
dec
idiv
repnz
push
dec
fs
jp
movsl
dec
xchg
jmp
push
mov
lea
pop
sub
out
mov
stc
fcmovu
push
test
dec
sti
fnstcw
and
out
dec
imul
fimuls
test
pushf
inc
jae
add
stc
call
sub
aas
mov
mov
push
scas
leave
jmp
xor
mov
lods
std
out
push
insl
xchg
cmp
test
fistps
imul
f2xm1
inc
insl
hlt
mov
sub
insb
cli
add
fnstenv
insl
popf
leave
sub
pop
pushf
cli
dec
xchg
int
push
cmpsb
hlt
sbb
mov
xor
mov
into
jae
incb
dec
imul
mov
sub
out
inc
je
cwtl
mov
inc
add
or
inc
sub
xchg
andl
movsb
add
adc
subb
les
addl
mov
inc
out
js
jbe
stc
aad
sbb
outsl
ds
inc
adc
mov
jo
push
sub
xlat
push
cmc
sub
cmp
out
das
aas
cwtl
pop
sbb
adc
lods
stc
stos
pop
loop
lock
sub
shrb
sahf
stos
cmp
cmp
dec
push
in
add
outsb
jp
imul
jnp
sub
mov
cmc
cs
xchg
inc
loopne
xor
inc
ljmp
cmpsb
pop
xor
lock
neg
das
and
jge
dec
add
or
jo
adc
xchg
lcall
test
daa
ljmp
xchg
cmc
bound
repz
mov
lock
popa
mov
shl
sti
inc
out
out
sbb
fadds
sbb
adc
gs
add
pop
loop
in
push
into
hlt
jmp
dec
cmp
popf
in
in
pop
out
int3
nop
jns
and
ror
hlt
aam
stos
pop
out
cmp
cmpsl
xor
cmp
mov
push
push
mov
subb
mov
xchg
or
jno
mov
sbb
hlt
ret
stos
ss
mov
negb
inc
cmp
inc
lds
xchg
loopne
sub
jae
lock
and
nop
cli
add
js
incb
dec
mov
imulb
pop
and
push
jae
mov
xchg
sbb
xor
lods
cwtl
and
outsb
iret
out
xchg
in
xchg
stos
jmp
into
cld
cmp
dec
sti
icebp
inc
shll
insl
fmull
add
mov
es
inc
pop
lret
or
pop
jne
lock
aam
mov
mov
mov
pmaddwd
push
cmp
xchg
jbe
sbb
test
scas
out
ret
cli
xlat
jecxz
pusha
hlt
scas
into
dec
int
xchg
xchg
insl
dec
inc
jae
jns
sub
sarb
dec
inc
xchg
rorl
mov
mov
mov
mov
dec
add
cmpsl
or
test
lods
push
outsb
adc
inc
xchg
bswap
lods
icebp
imul
and
outsb
out
cmp
or
lods
cmp
or
cmpb
or
jbe
shrl
int3
aam
dec
call
xchg
mov
adc
inc
jbe
jne
xor
adc
loop
seta
inc
insl
xorb
pop
mov
pop
lods
push
fnsave
adc
add
test
pop
jae
cwtl
add
xor
xor
sbb
bound
inc
insb
out
lahf
orb
fistps
rolb
test
sbb
lods
iret
dec
or
push
adc
lret
and
lods
ret
mov
lea
into
and
test
pop
push
lods
je
jle
push
cmp
outsb
xchg
popf
xchg
adcb
and
jmp
or
adc
sub
push
sub
jno
push
mov
cs
adc
xor
std
hlt
inc
adc
or
push
mov
lahf
cs
pop
inc
aaa
push
and
ret
pusha
gs
or
dec
adc
aad
dec
jb
jbe
xchg
imull
jae
jp
test
jge
outsb
jecxz
sarl
inc
cmpsl
jo
arpl
loope
push
lret
dec
and
movsl
sub
scas
jp
out
push
sbb
pop
xchg
pop
jbe
dec
jns
cld
ja
dec
and
adc
pop
rcll
mov
push
lods
hlt
push
data16
mov
scas
mov
lea
lret
popa
mov
and
mov
mov
adc
mov
gs
mov
jnp
ljmp
cmp
lcall
xchg
lea
jb
jbe
stos
rcr
mov
xor
sub
dec
jno
jp
out
repnz
or
sbb
mov
jge
adc
repz
push
call
pop
pushf
addb
int
or
mov
and
push
jg
lock
push
mov
fwait
or
icebp
sbb
dec
daa
lods
pop
dec
mov
add
sub
in
popf
mov
ds
jg
mov
mov
adc
mov
shrb
mov
dec
sti
jp
cmp
mov
mov
jo
test
jge
fidivs
push
dec
dec
mulb
adc
pop
arpl
das
push
and
lea
inc
add
sbbl
or
hlt
fs
inc
scas
out
push
jge
das
xchg
lahf
repnz
hlt
xchg
enter
mov
xchg
les
test
mov
cmp
arpl
mov
pop
aas
sub
pop
lcall
ret
and
enter
mov
sub
inc
xor
add
scas
pop
add
jp
add
mov
jnp
xor
insb
dec
lea
dec
les
sbb
inc
inc
cmpsl
and
sbb
jge
lcall
gs
add
xorb
push
cmp
addr16
mov
sbb
stos
fsubrp
and
jp
imulb
push
rclb
jno
sbb
xchg
ja
insb
dec
xor
test
jge
dec
testl
add
push
jb
frstor
and
mov
jle
adc
cs
jp
push
fwait
popf
pushl
jnp
loopne
mov
out
int3
movsl
mov
gs
int
cmp
push
adc
push
scas
call
xchg
cmp
imul
rcll
mov
out
lock
adcb
pop
bound
sub
rcr
pop
imul
add
pop
stos
xchg
lock
lds
in
and
add
aam
shl
push
sahf
jp
daa
xchg
cs
mov
sbb
inc
imul
lods
pop
dec
jmp
inc
xor
jae
dec
orl
jnp
subl
cmp
std
pusha
aad
xor
xchg
jl
fwait
cmpsb
jmp
pop
scas
add
rorl
push
imul
leave
push
mov
pop
das
cwtl
or
cmp
xor
mov
pop
ja
sub
popf
jle
jge
pop
aaa
or
mov
sar
jmp
push
movsl
mov
aad
jns
mov
mov
mov
inc
arpl
mov
clc
stc
pop
inc
mov
push
pop
inc
hlt
out
add
or
insl
mov
outsb
sbb
jns
imul
imul
fdivp
out
enter
push
test
je
or
loope
inc
mov
movsl
out
inc
sti
jp
jo
lret
sub
push
mov
jae
and
jge
add
push
in
hlt
sub
push
mov
ss
fildll
mov
lock
mov
add
aam
ss
imul
mov
mov
pop
fmull
adcl
push
push
popf
mov
nop
sarl
or
or
lods
push
outsl
mov
pop
jae
dec
enter
jg
mov
rcrb
jbe
jns
aam
cmp
enter
xchg
jne
cmp
push
imul
icebp
outsb
sti
outsl
mov
push
inc
into
pop
out
shrb
cmc
daa
shrb
pusha
ja
dec
dec
out
sbb
inc
push
lret
icebp
xchg
xchg
loop
shlb
or
out
scas
jge
es
test
jmp
push
add
cltd
int
rcll
fstl
out
mov
jle
push
jle
mov
arpl
lock
stos
loopne
pop
clc
sbb
jmp
test
data16
out
shl
imul
stos
cltd
daa
xchg
sbb
and
je
mov
cmpsb
sub
mov
in
cwtl
outsl
sub
pop
xchg
mov
xor
jo
into
filds
jnp
add
movsl
pop
push
inc
mov
xchg
push
lods
lock
repz
jg
movsb
mov
mov
jge
orl
mov
xor
hlt
push
mov
int3
lods
sarb
loop
clc
das
sar
je
cmp
cmp
lods
into
leave
daa
pop
hlt
mov
mov
jge
cmp
mov
into
stos
loopne
fiaddl
std
orl
out
stos
cld
inc
mov
jmp
les
mov
in
pop
and
js
adcl
jecxz
mov
lret
hlt
popf
out
mov
xor
loopne
jno
fsubl
call
mov
decb
fisubl
movsb
or
leave
lret
scas
add
jmp
ret
daa
mov
shlb
pop
repnz
out
scas
ds
scas
mov
sub
xchg
or
xchg
fcompl
outsb
or
pop
notb
mov
jmp
gs
in
adc
dec
addb
in
insl
xchg
cs
mov
xor
nop
std
mov
pop
xchg
inc
mov
pop
pop
fsubr
push
data16
ltr
mov
mov
mov
xlat
push
shlb
inc
mov
xchg
pop
push
pop
ja
sub
xchg
pop
mov
xchg
aam
test
push
jge
int
inc
imul
lea
sahf
stos
pusha
dec
in
cwtl
icebp
mov
stos
pop
push
cmpsb
dec
adc
push
movsb
and
jg
int
mull
sbb
js
push
pop
repz
nop
cmp
fs
loopne
into
mov
inc
push
jo
or
adc
xchg
sarb
insl
stos
dec
jb
add
inc
jno,pn
in
out
xchg
dec
cmpsb
mov
les
dec
and
add
ficompl
dec
popf
data16
movsl
out
mov
jb
or
pop
or
xchg
lea
xchg
pop
push
pop
jecxz
push
pop
cmc
xor
test
inc
mov
ljmp
sbbb
adc
lret
rolb
shrb
adc
lea
mov
push
insl
es
rcll
ss
data16
mov
into
pop
mov
jg
pop
imul
les
pop
jmp
into
insl
dec
pop
pop
popf
iret
cmp
dec
pop
insb
push
int3
or
adc
orl
imul
inc
ss
shlb
sbb
mov
jb
das
lret
out
loopne
ret
rclb
pop
xor
mov
int
fistps
int
jg
das
addr16
les
dec
push
sub
inc
pop
inc
jg
jp
pop
insb
popa
lret
xor
stos
test
push
xor
add
mov
lock
das
push
in
fnstsw
mov
cld
mov
mov
dec
dec
jg
ret
adc
dec
inc
nop
pop
or
aad
pop
xor
rcll
adc
jbe
aad
rclb
cltd
xchg
pop
jge
dec
imul
inc
jb
cmp
insl
inc
loope
rorb
out
ljmp
jbe
mov
adc
cmpb
xchg
push
dec
jbe
shll
jmp
fwait
push
dec
ror
inc
pop
imul
xchg
call
lcall
dec
mov
xchg
mov
dec
std
mov
jg
push
sub
xchg
lock
ss
dec
xchg
js
mov
jmp
dec
sub
rorb
push
inc
inc
inc
cmp
xlat
or
das
int
mov
cld
or
xor
pop
dec
sub
rolb
jge
testl
dec
jecxz
jbe
mov
negb
cmovle
adc
add
cmp
lcall
fisubs
sub
or
fldt
jo
loope
lea
dec
and
fsubs
push
jae
paddq
pop
dec
lds
jns
mov
pop
rcr
cmpsl
pop
out
push
dec
push
push
mov
into
mov
lock
pop
leave
push
cmc
dec
mov
mov
mov
adc
dec
insl
js
ja
cmp
test
xchg
sub
jle
push
and
add
fcmovb
mov
add
pop
test
mov
xchg
dec
adc
dec
jg
pop
repnz
testl
into
pop
sbb
cvtpi2ps
call
push
fs
pushf
lods
xchg
sub
lock
dec
sbb
outsb
pop
insb
adc
enter
dec
push
out
cmpsl
int
inc
add
dec
inc
cltd
in
pop
fwait
loope
loopne
aad
sahf
mov
jl
imul
add
shrl
idiv
dec
or
hlt
lcall
es
loopne
xchg
repnz
push
pushf
inc
sub
cmp
sub
popf
int
push
mov
out
imul
iret
dec
and
mov
jb
stc
jp
and
push
push
mov
mov
or
xor
lds
gs
jnp
push
or
cs
or
xchg
push
pusha
pop
xlat
mov
clc
insl
ds
pushf
test
mov
push
mov
cwtl
sbb
push
jne
jl
shll
xor
call
add
addb
push
push
int
aas
mov
enter
outsl
test
pop
xor
add
mov
popa
paddsb
push
xchg
fmuls
fsts
mov
push
push
push
push
mov
mov
dec
aam
jle
push
push
or
xchg
or
insb
into
xor
frstor
xchg
dec
sub
dec
test
cmp
sbb
pop
imul
mov
cmp
mov
jbe
imul
hlt
lret
push
test
loopne
imul
inc
lcall
ficomps
push
sbb
daa
out
int
lcall
or
hlt
mov
mov
dec
xchg
dec
push
pop
mov
mov
pop
add
xor
ret
ljmp
dec
xor
incb
ja
xchg
dec
mov
int3
adc
or
dec
dec
pop
or
pop
cmp
loopne
mov
dec
outsl
inc
mov
dec
xchg
xor
ljmp
cltd
pushw
fstl
push
dec
movsb
scas
xchg
lret
mov
popf
jne
frstor
jg
xor
inc
cmp
dec
pop
pop
cmp
cs
push
and
mov
xchg
insl
leave
shlb
dec
in
imul
pop
enter
out
adc
add
cmp
cs
sbb
mov
sub
outsl
push
mov
dec
inc
inc
fwait
adc
push
test
or
push
pusha
dec
sbb
jl
insl
lahf
into
mov
push
jbe
stos
pop
shl
cwtl
lret
loope
js
push
inc
outsl
in
lock
pop
dec
mov
fs
dec
sub
mov
out
roll
jno
mov
pop
add
pop
pop
and
hlt
fmull
cmp
sub
lds
insl
inc
pop
clc
dec
jno
out
int
sub
das
add
and
js
or
fstpl
dec
rol
xchg
insl
cmp
pmulhw
aaa
leave
cld
imul
fistpll
push
mov
push
push
mov
jecxz
dec
push
rorb
dec
sub
scas
inc
lret
popf
in
fisttps
insb
xchg
push
xchg
xchg
mov
dec
fstps
jb
push
mov
dec
das
stos
pop
daa
xchg
mov
fs
dec
xchg
adc
sub
mov
scas
mov
add
dec
imul
fnstsw
jno
je
pop
push
out
mov
orb
jmp
jbe
stos
std
cli
ror
pop
hlt
scas
fidivrl
push
xor
call
push
xchg
mov
cs
or
outsb
fldl
fidivrl
loope
xchg
jae
fnstcw
imul
mov
push
and
mov
ficoml
push
sub
jge
rorl
dec
in
aaa
fisttpll
rorb
xchg
lds
pop
scas
xor
pop
cmp
cmc
fstl
mov
mov
dec
mov
mov
and
ljmp
rcll
scas
frstor
into
lahf
xorb
mov
dec
nop
ret
shll
jae
adc
test
cld
sbb
mov
add
sti
lea
aad
adc
lret
xchg
lcall
scas
cmp
in
movsb
out
xchg
dec
cmp
xlat
dec
xchg
cmp
or
jg
sub
pop
insb
xor
mov
sub
fwait
outsb
and
pop
or
mov
or
pusha
mov
insl
lahf
push
int
hlt
dec
loop
lods
jbe
stos
std
or
and
scas
scas
dec
mov
adc
inc
mov
pop
add
cmp
ret
fldcw
pusha
repnz
imul
xor
das
push
xchg
jge
mov
mov
in
cltd
hlt
dec
add
shrl
lds
dec
fwait
bound
inc
pop
test
mov
lret
pop
dec
jecxz
mov
jge
push
pop
dec
cmc
push
xor
roll
xchg
dec
lahf
in
cmpl
clc
leave
jns
push
mov
adc
push
jp
movsb
stos
sbb
ficoms
pop
adc
push
mov
rolb
inc
pusha
dec
addr16
mov
pop
sti
cli
pop
sub
push
pop
dec
dec
sbb
lcall
push
add
push
jbe
add
cmp
test
xor
pop
outsb
xchg
mov
out
scas
fldl
rcrb
stos
fxch
dec
push
cmc
or
push
mov
push
mov
insb
scas
hlt
popa
xchg
and
outsl
jbe
ljmp
hlt
mov
mov
outsb
clc
lea
leave
loope
rorl
mov
ljmp
xchg
mov
out
std
push
pop
icebp
pop
fmul
and
jno
xchg
sbb
xor
pop
insl
mov
mov
adc
push
out
add
pop
fcoml
out
setg
mov
push
sbb
xor
loopne
ja
cmc
ficoms
stos
pop
inc
sti
lahf
into
nop
mov
add
insl
pop
pop
mov
test
push
xor
out
faddl
fnsave
cli
push
dec
mov
and
push
push
fisttpl
jb
push
dec
aam
mov
fsubrs
mov
push
fdivr
loop
mov
pop
lods
and
out
dec
fstpl
dec
and
jno
adc
mov
xchg
push
jbe
lahf
push
scas
or
dec
and
cmp
rorb
xchg
je
std
pop
fldl
stos
jo
inc
push
sbb
stc
insl
push
mov
dec
sbb
pop
dec
shlb
sub
cli
gs
mov
hlt
ret
insb
dec
ds
loopne
lock
push
pop
jne
sub
bswap
scas
and
pop
inc
pop
int
dec
gs
xchg
xchg
push
roll
push
and
test
dec
push
jmp
lds
popa
cmp
pop
aas
lahf
mull
xlat
aam
lea
push
jge
push
fstl
dec
mov
nop
add
das
insl
push
mov
dec
ds
fbstp
add
xor
pop
shrb
loop
rclb
call
mov
aam
xor
testb
das
sbb
notl
stos
and
repnz
pop
cmc
lcall
cmp
dec
shrl
data16
dec
add
ret
adc
pushf
insb
adc
mov
imul
dec
dec
mov
mov
pop
dec
push
fists
roll
dec
sbb
stc
pop
mov
inc
fists
jbe
insb
aad
jecxz
inc
pop
xchg
fimull
push
popf
push
testl
mov
add
adc
dec
xchg
xor
inc
sbb
dec
stc
push
aad
lods
mov
pop
push
pop
adc
cmp
nop
lods
dec
fldenv
cmp
shll
cmpsb
jl
rorb
inc
adc
sbb
fcomps
mov
dec
adc
sub
sub
iret
popf
xchg
or
and
sbb
fimuls
or
sbb
int
sbb
dec
sub
orb
xor
mov
cmp
pusha
push
pop
sbb
inc
and
mov
js
cmp
xchg
subb
mov
xor
pop
adc
into
xor
icebp
mov
push
sub
sub
push
std
sbb
loopne
lds
mov
aaa
popf
push
hlt
and
in
and
xchg
push
xchg
dec
dec
test
imul
cmp
loopne
adc
or
sub
call
iret
andps
or
mov
mov
leave
cmp
push
mov
nopl
adc
push
scas
xor
jp
icebp
push
into
imul
jo
sbb
nop
std
imul
xchg
lds
pop
mov
xchg
insb
dec
sbb
in
popa
je
repnz
jb
adc
les
pop
cmp
std
in
or
xchg
out
sbb
out
xchg
sub
lea
xor
out
sbb
adc
dec
mov
int
stos
adc
test
dec
sub
popf
push
inc
sbb
sbb
push
pusha
cltd
xchg
push
cmpsb
inc
push
push
out
pop
test
int
fnsave
sub
sti
xor
cmp
push
loopne
test
inc
inc
pop
rorl
fwait
jo
das
push
pop
cmp
test
adc
xchg
xchg
pop
inc
adc
enter
cltd
loopne
lock
xor
imul
xchg
xor
cmp
fidivrl
lahf
jg
cs
and
mov
cmp
mov
lret
int
xor
jle
jle
ljmp
into
inc
outsl
jmp
or
rcr
push
movsb
mov
call
jmp
lret
push
lock
xor
jge
mov
in
xchg
mov
mull
cmpsl
adc
dec
jmp
mov
dec
repz
xchg
cmp
add
outsb
popf
cmp
pop
rcrl
dec
iret
inc
rolb
repnz
push
iret
and
inc
and
xchg
mov
lock
pushf
lea
jmp
pusha
pushl
mov
pushf
movb
movw
pushl
lea
jmp
lret
addb
add
and
adc
add
add
add
adc
push
sbb
adc
add
pop
add
in
pop
push
jmp
pminub
mov
lret
sahf
inc
enter
aas
or
jbe
into
xor
add
adc
fstpt
popa
add
inc
inc
enter
lea
rorl
dec
enter
rclb
lock
lea
jne
pusha
cmc
mov
call
rorl
jp
mov
enter
inc
movb
adc
enter
and
pop
mov
mov
adc
xlat
lea
jns
or
push
mov
or
mov
fnstenv
outsl
sahf
mov
pushf
pusha
lea
jae
test
sub
push
jmp
push
sbb
shlb
lahf
aas
fdivs
lods
dec
in
xchg
sub
push
int
jae
push
mov
dec
mov
mov
idiv
int3
imul
jl
xlat
jno
mov
inc
cmc
loope
out
and
push
lea
cwtl
adc
cltd
mov
jecxz
mulb
push
and
push
icebp
mov
imul
mov
mulb
xchg
pop
sbb
ret
inc
testb
adc
sub
testb
mov
mov
or
xor
xor
je
mov
lods
test
out
aas
cmc
decl
xchg
push
movl
call
int3
popf
push
push
movl
mov
mov
jmp
pusha
sub
mov
fidivrs
mov
clc
xchg
cmp
jp
je
sar
dec
pop
jmp
js
jnp
sbb
jbe
jnp
stos
inc
call
jmp
cs
pop
loope
pop
pop
int
xchg
cli
push
loop
jne
adc
shrl
popa
push
mov
lock
sbb
imul
fdivrl
xlat
jo
outsl
lock
out
frstor
pop
in
sub
in
mov
cmp
dec
xchg
shrb
bt
movb
pushf
pushf
neg
mov
mov
mov
jmp
stc
bt
pusha
cmp
sub
lea
jmp
pusha
clc
or
pushf
lea
je
bts
bt
shld
add
shl
inc
sub
movzbw
clc
bsr
shr
shl
mov
bsf
cmc
shr
add
movsbw
ror
sar
add
add
bsf
xor
mov
bt
shr
jmp
jmp
movl
pushf
jmp
aas
or
pop
jmp
sbb
inc
and
pop
mov
dec
add
or
sbb
xchg
sbb
pop
loopne
call
call
jbe
lock
sbb
mov
push
out
lods
sbbb
aam
push
andb
gs
pop
xlat
dec
aam
rclb
test
mov
jmp
mov
and
aam
adc
lret
push
ret
icebp
add
inc
pop
and
push
mov
repnz
mov
leave
adc
lea
mov
out
imul
mov
xchg
pop
add
cs
jecxz
pop
cmp
push
int
stos
dec
sbb
into
cwtl
push
cs
pop
lods
push
pop
push
in
jae
into
mov
sub
add
adc
scas
dec
loop
cwtl
das
mov
adc
or
mov
add
ljmp
pop
stc
lcall
push
icebp
mov
push
mov
push
pushl
sub
sub
loopne
fistpl
push
fcoms
sti
mov
lds
ljmp
sbb
sub
bound
lods
xor
sbb
jno
adc
mov
outsb
shrb
mov
out
mov
fs
fs
xor
add
sub
addb
fistps
std
lcall
jno
xchg
notl
jbe
stc
jnp
sbb
je
arpl
fcoms
push
into
push
rorl
cmp
out
js
sbb
push
sbb
add
call
xor
jmp
movw
pushl
lea
jae
bswap
pushf
mov
movzbl
mov
movsbw
bswap
mov
pushf
push
lea
jmp
cmp
call
xor
outsb
mov
dec
out
pop
rcrl
cmp
jne
rolb
inc
scas
movsb
push
fdivrl
and
adc
pop
add
test
sahf
mov
push
push
icebp
mov
xchg
pop
adc
pop
xchg
push
push
fadds
cmc
mov
test
enter
adc
cvtps2pi
mov
inc
ficoms
imul
test
mov
test
xchg
test
jnp
popa
mov
ljmp
leave
dec
ror
mov
outsw
mov
popa
push
lahf
inc
ficoml
sbb
jno
mov
pop
flds
mov
repnz
das
lret
cmpsl
inc
loope
incb
lods
jecxz
je
mov
pop
and
imul
mov
mov
test
jmp
mov
cmc
lcall
jb
sbb
xor
sbb
push
clc
es
scas
je
mov
dec
leave
inc
rolb
ss
scas
jp
mov
sbb
cmc
jmp
push
call
pusha
jmp
jmp
or
jae
mov
xchg
mov
lret
outsb
adc
in
sbb
es
popl
in
movl
mov
jmp
cs
mov
push
sbb
mov
insl
gs
test
xchg
jl
popf
adc
adc
cmpsl
cld
and
ss
dec
add
sub
push
out
mov
jno
rorb
push
lret
dec
lret
dec
enter
jp
add
mov
xchg
inc
call
lock
iret
outsb
or
sbb
sub
jl
dec
pop
jne
push
imulb
jmp
dec
cs
sub
movsl
ds
bnd
inc
cmc
jecxz
movsb
cmp
loope
dec
rclb
dec
lret
push
sahf
mov
sub
dec
jo
and
lds
xchg
xor
imul
or
pop
cmp
insb
sbb
std
jnp
dec
or
xchg
jge
clc
cwtl
xor
adc
clc
jb
movsl
rcl
stos
sbb
aad
into
jo
and
decl
enter
pop
cmp
fadds
stos
and
adc
cmpsb
jno
stos
fwait
call
inc
xor
pusha
and
inc
cmp
int
aad
lcall
push
xor
push
lret
xor
mov
pop
mov
fisttpll
mov
xchg
mov
pop
sbb
cmp
fcmovnu
dec
sub
flds
mov
mov
cmpxchg
and
ret
andb
jno
pop
dec
cmp
fwait
xchg
scas
pop
rcrb
push
mov
push
cmp
popf
aaa
and
add
rcll
fstpt
fwait
stos
jle
push
add
sub
mov
mov
repnz
xchg
jle
and
leave
sub
mov
push
pushf
jae
jo,pt
ljmp
aad
xorl
rorb
pop
icebp
nop
js
loopne
adc
jne
aad
pop
sub
mov
icebp
loope
lods
xchg
clc
cmc
or
push
fiadds
fdivrl
movsl
mov
and
in
cwtl
lret
jae
shll
push
out
sbb
adc
inc
mov
mov
test
fistpll
fsubl
sub
pop
ficoml
push
movl
add
lahf
ds
jb
cmpsl
jb
and
popf
xor
inc
call
out
fcomp
sbb
sbb
jmp
daa
mov
lcall
inc
imul
rcrb
test
nop
sub
ss
lcall
inc
std
fwait
cmp
and
push
dec
mov
sub
call
popf
rdtsc
nop
push
pushl
pushl
mov
movl
call
lea
jne
jmp
jmp
pusha
mov
cmpb
pusha
lea
jns
pusha
movl
lea
jne
lea
shr
mov
test
cmp
add
clc
pushf
bt
movzwl
btr
clc
btr
ror
mov
pushf
clc
pusha
bt
add
test
push
test
pushf
mov
push
clc
pushf
test
jmp
rcl
bt
mov
stc
cmp
and
jmp
inc
adc
xor
mov
xchg
or
xor
fnstenv
push
rorb
fidivrl
lods
dec
jmp
daa
movb
sub
push
or
ds
xor
movsb
inc
jae
xchg
or
xlat
jae
les
jae
push
jnp
aad
in
mov
cmp
dec
out
mov
cmp
je
cmp
xchg
xchg
adc
fnstsw
mov
lret
mov
out
sbb
jo
push
mov
mov
dec
jmp
lock
sub
mov
and
mov
repz
les
fwait
mov
mov
icebp
pop
inc
xchg
mov
iret
mov
add
ss
xor
xchg
pop
test
cld
xchg
push
out
ret
add
jmp
gs
cmp
shlb
pop
adc
aam
int
into
push
rcrb
push
sbb
xchg
iret
add
jg
std
jmp
pushf
lea
je
pushf
clc
pushf
sub
clc
mov
test
xchg
stc
clc
mov
pushl
pushf
lea
jne
cmp
sub
pusha
lea
jne
bt
clc
bt
cmp
sub
jmp
add
inc
or
mov
bt
cmc
stc
sub
cmc
rol
push
jmp
call
pushf
mov
movb
pushf
pushl
pushl
lea
jmp
lea
ja
pusha
call
mov
mov
pushf
popl
call
call
jmp
movb
pushf
mov
call
jns
btr
shrd
aas
mov
bt
add
pushf
mov
pusha
mov
jmp
movsbl
setno
lea
mov
jmp
mov
push
push
mov
pusha
push
movb
lea
jmp
pushf
mov
pushl
lea
jmp
not
lea
push
mov
call
pushl
popl
mov
movb
mov
lea
jmp
test
pushf
not
push
stc
movw
test
and
call
pushf
pushf
repz
popl
mov
mov
pushf
mov
push
pushf
mov
pushf
pushf
mov
call
push
mov
mov
call
jmp
movb
sub
call
mov
movb
lea
jmp
pushf
mov
call
clc
cmc
mov
cmc
sub
jmp
sbb
and
cmp
mov
clc
sub
call
movb
mov
movw
lea
jmp
bts
mov
pusha
mov
bt
pushf
add
pushf
movb
push
movw
lea
jmp
js
mov
push
btc
mov
test
add
pusha
pushl
jmp
call
or
add
neg
btr
shl
add
mov
not
lea
setno
dec
bt
add
setp
movzbw
movzbl
movzbw
push
inc
pop
mov
cmp
clc
neg
cmp
add
jmp
call
shrd
bswap
rcr
mov
sbb
shr
mov
call
pushf
mov
movl
jmp
mov
jle
cmp
test
cmp
add
pusha
pushf
pushf
popl
push
call
mov
jmp
movb
mov
call
repz
push
call
movw
mov
lea
jo
push
pushf
call
call
shr
mov
jmp
mov
mov
pushf
mov
mov
call
pushf
mov
movb
movw
mov
movb
pushl
pushf
mov
jmp
mov
mov
mov
call
pushf
jmp
pusha
mov
push
pushf
mov
lea
jmp
or
push
mov
lea
pushf
bsf
mov
shl
shr
mov
mov
cmp
add
push
cmp
clc
bt
shld
pusha
pushl
mov
pushf
call
jmp
push
pushl
xchg
jmp
pushf
call
sar
movzbl
jmp
pusha
repz
popl
jmp
lea
jne
pushf
push
mov
push
pusha
movb
pushf
lea
jmp
bt
shl
pushf
pushl
movb
mov
pusha
pushl
pushf
popl
movb
lea
jbe
push
pusha
pushl
popl
mov
push
lea
jmp
mov
pushl
lea
jmp
call
pusha
mov
push
lea
jmp
pusha
movb
mul
pushl
mov
mov
call
call
stc
call
mov
push
pusha
call
mov
jmp
adc
mov
pushf
call
lea
call
call
and
pushf
add
shl
mov
jmp
jmp
dec
clc
call
mov
mov
lea
push
pushf
popl
pusha
mov
push
lea
js
not
movzbl
mov
movsbw
movsbw
lea
jmp
pushf
popl
call
mov
push
mov
pusha
mov
pushf
mov
pusha
call
or
bts
movzbw
mov
bsr
mov
shrd
dec
add
dec
adc
sub
not
cmc
mov
pusha
cmc
shl
stc
shr
sub
jg
pusha
bt
or
test
clc
jmp
add
mov
clc
cmc
add
push
mov
push
lea
jmp
mov
pushf
add
pushl
lea
jmp
xadd
xor
xadd
xchg
mov
cmc
ror
add
mov
cmp
test
clc
push
sub
pushf
shl
push
pusha
movb
jmp
mov
pushf
movw
pushf
pushf
pushl
ret
movl
pushf
popl
pushl
pushl
popl
pushl
lea
jmp
pushl
popl
movb
pushf
lea
jmp
jmp
div
call
jmp
mov
jmp
pushl
popl
movw
pushl
pushf
push
lea
jmp
cmp
cmc
pushf
mov
stc
bt
sub
mov
mov
push
pusha
lea
jmp
pushf
call
mov
jmp
pusha
mov
push
mov
push
pushf
jmp
inc
jmp
pushf
mov
push
mov
mov
pushf
pusha
push
lea
jmp
call
shrd
rdtsc
aaa
mov
btc
test
clc
mov
cmp
cmp
cmp
test
not
test
jmp
test
cmp
not
pusha
stc
not
stc
test
call
add
movl
pushf
lea
jmp
mov
jmp
pushl
pushf
mov
push
jmp
call
lea
jbe
pushf
pushf
pushl
popl
movb
lea
jmp
pushf
lea
pushf
mov
cwtl
lea
movsbl
call
pushl
mov
pushl
popl
movb
mov
lea
jmp
push
cmc
add
mov
movb
push
pushl
lea
jmp
pushf
rep
xor
shld
bsf
mov
movsbw
sub
cmp
mov
call
jmp
pusha
jmp
rol
pushf
dec
test
not
clc
sub
add
not
shr
rcr
sub
shl
rol
sub
movzbl
cmp
pushf
pusha
cmp
mov
clc
movb
pushf
movb
or
call
movl
jmp
cwtl
mov
dec
add
mov
bswap
push
mov
stc
cmc
cmp
clc
add
pushf
pusha
jmp
jmp
mov
jmp
shld
bsr
aad
and
mov
jmp
push
pushf
repz
popl
pusha
call
push
cld
mov
movzbw
movsbw
call
call
lea
setle
pop
pushf
movb
push
pushf
lea
jmp
rol
movzbl
shr
das
mov
jmp
or
movsbw
sub
not
movzbl
cmp
xor
pushf
rol
xor
and
or
rcl
mov
pusha
mov
call
pushf
mov
jmp
ror
shl
sar
mov
setb
sar
cmc
add
pushf
lea
jb
mov
push
jmp
jmp
pusha
pusha
mov
push
mov
lea
jns
pusha
pushf
mov
pusha
movb
push
pushf
mov
jmp
add
pushf
pushf
sub
jmp
pushf
popl
jmp
push
pushl
popl
mov
pushf
pushf
lea
jmp
jmp
mov
pusha
pushl
lea
cpuid
cmp
pushf
pushf
cmp
sub
cmp
test
cmc
cmpl
jmp
mov
mov
call
xor
clc
pusha
bt
mov
test
test
stc
sub
pushf
cmp
sub
lea
jp
pushf
mov
pusha
pushl
lea
jmp
call
jmp
mov
pushf
pushl
pusha
push
lea
jmp
or
sub
btc
bswap
mov
cmp
push
call
rcr
mov
movsbw
pushf
mov
jmp
jmp
sub
push
add
pusha
jmp
push
push
mov
jmp
pushf
mov
push
pushf
pushf
push
lea
jmp
pushf
repz
popl
push
mov
call
cmc
jmp
push
repz
popl
jmp
push
jmp
inc
call
mov
pushf
movw
movb
mov
lea
jmp
pushl
popl
pushf
lea
jmp
mov
pusha
movw
lea
jmp
movb
pushf
mov
pushf
pushf
push
lea
jmp
jmp
call
pushf
push
mov
jmp
pushf
pushf
mov
pushf
pushf
popl
jmp
mov
pushf
pushf
mov
pushf
mov
jmp
add
jg
stc
cmc
add
jns
mov
pushf
push
movb
pushf
lea
jmp
jmp
pushf
mov
pusha
pushf
mov
mov
pushl
mov
mov
push
call
jmp
call
sub
clc
shr
pushf
pusha
lea
jge
push
mov
jmp
lea
mov
cmc
pushf
cmp
add
pushf
lea
jmp
mov
push
push
pushf
lea
jmp
xor
aad
bsr
aam
notl
btr
mov
cmp
cmp
sub
bt
stc
and
call
mov
mov
mov
lea
jmp
pushf
popl
pushl
pushl
popl
push
pushf
lea
jmp
jmp
pushf
call
pushl
popl
pusha
lea
jmp
mov
pushf
movb
movw
lea
jmp
mov
pusha
lea
jmp
jmp
xor
movb
call
stc
sub
stc
pusha
sub
jmp
rol
pusha
xor
lea
jno
test
clc
mov
cmp
push
stc
clc
sub
pusha
mov
call
jmp
call
xadd
neg
mov
cmc
pusha
btr
mov
mov
stc
clc
add
jbe
add
push
pusha
push
mov
pushl
push
pushl
lea
jmp
mov
push
lea
jo
push
mov
jmp
push
mov
mov
jmp
pushl
popl
pushf
pushf
pushf
lea
jmp
shrd
pushf
call
sub
clc
bt
sub
pushl
jmp
bsf
btc
rol
or
mov
pushf
sub
add
mov
cmc
add
call
stc
test
sar
mov
rol
bt
setbe
mov
jmp
jmp
pusha
pushf
bt
pushf
add
jmp
mov
mov
pushl
pushl
push
lea
jmp
jmp
pushl
mov
push
pushf
movb
pushf
lea
jmp
push
mov
push
mov
push
call
pushf
popl
jmp
mov
movb
pushl
pushf
lea
jmp
sbb
btc
mov
bsf
bswap
mov
xor
bts
movzbw
mov
aas
mov
shl
call
test
sub
pusha
jmp
pushl
popl
pushf
lea
jmp
not
movb
rol
stc
xor
jmp
pushf
mov
mov
pushf
push
jmp
mov
mov
lea
jmp
sub
and
dec
not
mov
shl
shl
stc
mov
bt
pusha
pusha
test
add
movb
pushf
pushl
mov
mov
movw
pushl
lea
jmp
mov
pusha
pushf
lea
jmp
decl
call
mov
call
rol
pushf
jmp
jmp
mov
jmp
jmp
jmp
mov
pushf
pushf
pushf
lea
jmp
rol
sbb
shld
movzbl
ror
rcr
xor
not
bswap
movzbw
dec
btr
btc
not
call
pusha
mov
jmp
push
sub
pusha
shl
call
test
std
pushl
popf
pushf
pushf
lea
jmp
call
pusha
push
pushl
mov
push
pushl
mov
mov
mov
call
mov
pusha
mov
pushf
push
mov
mov
lea
mov
jmp
mov
pushf
mov
lea
jmp
jmp
pusha
cmc
add
pushf
pushf
mov
pushf
popl
pushf
call
jmp
pusha
push
call
pushf
mov
pushf
pusha
push
lea
jmp
pushf
mov
mov
pushf
movw
lea
jmp
mov
call
dec
test
mov
test
bt
test
cmp
add
pushf
movw
pushf
lea
jmp
call
cmp
cmp
cmc
sub
call
pusha
pushl
mov
mov
pushf
push
pushf
lea
jmp
mov
pushf
movb
mov
pushf
lea
jmp
pusha
xor
mov
pushf
pushl
inc
push
pushl
jmp
pusha
movw
pushl
jmp
pushf
popl
pushf
push
pushl
popl
pushf
pushl
pusha
lea
jmp
jmp
call
jmp
jmp
cmc
mov
pushf
add
pushf
pusha
pushf
pushl
lea
jmp
push
jmp
seta
mov
push
mov
push
lea
jmp
jmp
movb
mov
push
call
push
mov
pushf
lea
js
pusha
pushf
mov
mov
jmp
mov
pusha
call
mov
lea
ja
push
mov
pushl
mov
jmp
repz
popl
call
cmc
push
jmp
push
cmp
clc
add
jmp
pushf
mov
pushl
mov
pushf
pushl
lea
jmp
pushf
jmp
pushf
popl
jmp
movsbw
dec
mov
jmp
mov
pushl
call
mov
pushl
pusha
mov
pusha
movw
pushf
pushf
mov
push
call
cmc
call
clc
test
cbtw
test
cwtl
clc
clc
sub
jmp
bt
clc
pushl
pushf
clc
add
pusha
pushl
popf
movb
push
lea
jmp
mov
pushf
mov
mov
pushf
lea
jmp
bsr
cltd
bswap
mov
add
stc
shl
mov
cmp
add
push
pushl
mov
pusha
pushl
lea
jmp
jmp
test
cmc
mov
add
jle
add
pushf
mov
lea
jmp
pushf
popl
push
call
call
jmp
lea
jne
jmp
mov
pushf
mov
pushf
pushl
mov
pushf
call
bt
add
pushf
pushl
pushf
lea
jmp
pushf
mov
pushf
mov
pushl
mov
call
rcr
mov
cmp
sub
call
mov
call
mov
call
pusha
mov
jmp
add
rol
sbb
jmp
mov
mov
call
call
mov
pushf
jmp
movsbl
lea
push
mov
mov
lea
jae
push
push
mov
lea
jno
mov
pusha
movb
lea
jmp
call
dec
pusha
test
not
cmc
sub
bt
clc
add
push
jmp
dec
movb
movb
jmp
call
mov
pushl
push
lea
jmp
call
or
mov
rcl
mov
cmc
pushf
add
pushf
call
mov
pushl
pushf
pushf
mov
pushf
mov
pushf
pushl
pushf
mov
pushf
mov
pushf
movb
mov
pushf
jmp
cld
mov
std
mov
pusha
cld
pushl
call
call
push
cmp
not
jmp
pushf
push
mov
push
mov
mov
call
pushf
pushl
mov
call
mov
jmp
pushl
popl
pushf
mov
push
mov
lea
jmp
push
movb
mov
pushl
pushl
pushl
jmp
call
mov
mov
movw
pushf
mov
movl
call
mov
add
pusha
lea
jo
push
mov
pushf
mov
pushf
movb
pushl
push
lea
jmp
pushf
pushf
mov
mov
mov
movb
lea
jmp
mov
dec
clc
clc
cmc
sub
clc
push
pushf
not
call
call
stc
sub
cmc
and
pushf
pushf
mov
jmp
push
bt
test
sub
movb
pushf
mov
pusha
lea
jmp
test
add
pushf
mov
push
pushl
pushl
mov
mov
pushf
movb
lea
jmp
push
mov
push
pusha
pushf
lea
jmp
pusha
sub
test
pusha
stc
cmc
shl
movb
push
jmp
call
movb
mov
pushf
lea
jmp
movb
pushl
popl
pusha
lea
jmp
call
add
add
mov
pushl
mov
movb
pushf
mov
mov
pushl
mov
lea
jmp
test
xor
call
pusha
mov
call
pushf
pusha
push
xchg
pushf
push
push
call
stc
add
pusha
lea
jmp
call
pusha
cld
mov
not
mov
cld
pushf
movb
pusha
cld
pushf
rep
add
mov
shld
sub
mov
stc
cmp
pushl
popf
mov
movw
mov
movb
lea
jmp
jmp
pushl
popl
pushf
lea
jmp
pushl
popl
pushf
mov
movb
push
lea
jmp
mov
jmp
pusha
lea
bsf
aad
shr
lea
rol
sub
xor
lea
bsr
shld
or
btr
and
rcr
sub
call
mov
push
push
mov
mov
mov
movw
lea
js
push
pusha
mov
mov
pushf
lea
jmp
jmp
jmp
call
cmp
cmc
cmp
mov
or
test
mov
clc
clc
sub
pushf
test
shr
jmp
xor
rcr
mov
jmp
jmp
mov
call
mov
pushf
jmp
rol
movsbw
mov
cmc
test
clc
test
pushl
popf
mov
pushl
ret
call
mov
movb
mov
mov
push
mov
pushl
mov
jmp
repz
call
bsf
lea
clc
stc
pusha
cmp
mov
pusha
movb
jmp
call
mov
jmp
sub
pusha
movw
lea
jge
xchg
jmp
push
call
and
bt
cmp
movzbl
bsr
btr
add
rcr
stc
push
jmp
jmp
call
mov
jmp
pushf
popl
pushl
pusha
jmp
mov
pushf
jmp
pushf
repz
popl
pushf
mov
call
push
pusha
mov
movb
movb
lea
jmp
movl
movw
pusha
jmp
mov
jmp
mov
pushf
call
cmc
push
pushf
add
push
mov
pushl
mov
pushl
lea
jmp
push
sub
mov
mov
call
sbb
and
rol
movzbl
cmp
cmp
stc
add
jmp
mov
call
mov
movw
call
mov
call
pushf
pushf
popl
movw
mov
pushf
push
pushl
popl
pusha
push
pushf
lea
jmp
jmp
add
pushl
jmp
mov
pushf
pusha
mov
call
mov
push
mov
jmp
mov
movb
push
pushl
ret
movzbl
mov
stc
add
pusha
push
lea
jmp
or
cmp
mov
cmc
push
xor
pusha
jmp
call
push
mov
mov
push
pushf
lea
jmp
pushf
mov
lea
jbe
push
pushf
pushf
popl
jmp
call
pushl
pushf
mov
pushl
jmp
pushf
sub
push
jmp
pusha
jmp
pusha
mov
call
mov
pusha
call
pushl
mov
call
mov
pushl
push
pusha
pushf
lea
jmp
sub
test
cmp
stc
pushf
sub
push
cwtl
cmc
clc
test
stc
sub
mov
call
pushf
mov
mov
pushf
pushf
call
pushl
pusha
movb
pushl
popl
push
pushf
lea
jmp
pushf
mov
mov
pushl
mov
pushf
lea
jmp
call
jmp
mov
pushl
mov
mov
jmp
add
sub
rcl
rol
bt
bsr
xor
btc
rol
clc
clc
rol
movzbw
bsr
and
rcl
movzbl
movsbw
mov
pusha
stc
push
add
jmp
pushf
std
pop
mov
mov
lea
call
mov
mov
movw
pusha
jmp
push
pushl
pusha
mov
mov
lea
jmp
shr
mov
test
pushf
call
add
push
pushf
popl
push
pusha
movl
pushl
popl
push
movb
movb
pushf
lea
jmp
jmp
jmp
call
push
pushf
pushf
popl
movb
pushf
pusha
jmp
call
mov
pushf
mov
pushf
mov
jmp
pushf
push
jmp
jmp
mov
movw
call
movzbl
inc
bt
cmc
mov
pusha
mov
call
inc
mov
call
mov
movb
movb
lea
jmp
not
mov
clc
stc
clc
pushf
add
movw
lea
jmp
jmp
pusha
push
call
repz
popl
mov
pushf
jmp
call
clc
bt
sub
stc
movb
shr
pushl
mov
jmp
push
movb
pusha
mov
movw
pushf
pushf
lea
jmp
lea
jne
pusha
mov
pusha
push
lea
jmp
jbe
pushf
mov
lea
jne
pushf
pusha
pushl
mov
mov
pushf
movl
lea
jmp
stc
jmp
pusha
pushf
pushf
mov
call
jmp
test
cmp
call
call
cmp
pushf
pushf
xor
clc
movw
bt
rol
sub
jns
cmc
sub
push
movw
pushf
not
test
xor
pushf
test
mov
clc
movw
pushl
pushl
sub
clc
jmp
mov
pushl
pushf
push
movb
lea
jmp
mov
mov
lea
jmp
push
pusha
pusha
repz
popl
movb
mov
or
inc
clc
mov
bt
dec
mov
add
btc
xor
btr
mov
btc
movzbw
add
pop
mov
shl
btc
clc
xchg
cmp
mov
neg
test
xchg
add
bts
pushl
shr
movsbw
bt
push
or
rcl
bts
mov
xadd
shld
neg
sub
adc
rol
not
bswap
add
test
inc
pushf
bsf
lea
movzbw
or
or
and
sub
dec
mov
pusha
mov
shr
bt
add
add
bt
and
movzbl
mov
btr
jmp
stc
mov
and
bsr
bt
mov
xchg
shrd
clc
mov
pusha
mov
xchg
aas
aas
dec
mov
shld
call
pushl
popl
pushf
lea
jmp
movb
mov
pusha
push
push
lea
jmp
pushl
pushl
popl
push
push
pusha
lea
jmp
pushl
call
mov
mov
mov
push
call
mov
movb
cmp
sub
jmp
push
mov
pushf
jmp
pusha
mov
pusha
repz
popl
movb
mov
jmp
mov
pushf
pushf
movl
mov
lea
jmp
push
mov
mov
pushl
push
pushf
mov
mov
pushf
movb
pushl
lea
jmp
call
call
stc
jmp
pusha
mov
mov
pushl
lea
jmp
push
movw
pushf
mov
movb
pusha
call
mov
mov
mov
call
lea
jne
btc
mov
bsr
mov
stc
cmp
cmp
and
jmp
or
neg
mov
stc
shr
mov
test
pushf
sub
jae
sub
cmc
call
mov
push
mov
pusha
push
mov
call
clc
inc
mov
pushl
xor
aas
cmp
lcall
xor
call
mov
call
aas
mov
jle
mov
call
cmp
mov
pushl
mov
call
cmp
push
xor
mov
jmp
inc
mov
inc
and
inc
and
ljmp
and
decl
inc
mov
jmp
aas
mov
ljmp
inc
mov
decl
inc
mov
ljmp
cmp
mov
incl
mov
pushl
mov
call
jl
mov
in
cmp
mov
ljmp
inc
mov
pushl
xor
ljmp
and
inc
and
call
mov
decl
mov
pushl
ljmp
and
jmp
cmp
lcall
mov
inc
and
lcall
mov
jmp
cmp
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
call
cmp
mov
call
aas
mov
cmp
sub
call
and
call
mov
cmp
aas
mov
cmp
aas
mov
cmp
aas
mov
cmp
aas
mov
cmp
aas
mov
cmp
cmp
decl
mov
jmp
xor
call
and
jmp
xor
incl
sub
clc
inc
mov
jmp
sub
mov
incl
mov
inc
inc
mov
incl
inc
mov
call
mov
decl
and
call
cmp
inc
and
aas
cmp
inc
and
call
xor
incl
mov
jmp
inc
mov
call
mov
call
ljmp
inc
mov
jmp
mov
fldenv
mov
jle
mov
call
mov
inc
inc
mov
decl
mov
incl
mov
pushl
and
call
mov
incl
mov
call
mov
call
cmp
and
call
inc
mov
inc
and
jmp
sub
decl
mov
aas
cmp
incl
mov
incl
mov
pushl
inc
mov
pushl
jge
mov
lcall
and
call
sub
aas
cmp
call
mov
pushl
mov
call
cmp
mov
jmp
dec
add
and
clc
sub
jmp
lahf
mov
call
sar
xor
mov
cmc
add
clc
cmc
test
add
push
rol
pusha
dec
call
mov
jmp
pushl
jmp
pushf
jmp
btr
call
not
mov
movzbw
pushf
mov
call
cmc
sub
jmp
pushf
call
mov
shl
mov
xor
mov
neg
setb
mov
test
clc
sub
call
mov
push
pushl
movw
pushf
lea
jmp
mov
pusha
lea
jmp
jmp
pushf
xor
movzbl
movsbw
lea
shl
xor
cmc
pusha
not
rcr
rol
and
movsbw
sub
pusha
xor
sbb
not
and
xor
rcr
mov
bt
pushf
bt
add
call
jmp
pushf
call
mov
movl
pushf
pushf
lea
jmp
call
call
cmp
mov
clc
sub
clc
add
push
mov
call
inc
test
and
mov
adc
xor
mov
push
call
lea
jnp
pusha
mov
pushl
lea
jmp
jmp
mov
pushl
call
pushf
mov
push
jmp
mov
pushf
push
movb
lea
jmp
jmp
pushf
pushf
pusha
repz
popl
pusha
jmp
movl
movl
mov
call
pushf
popl
jmp
stc
sub
pusha
pusha
lea
jne
call
shl
movzbw
cmp
mov
pusha
call
mov
pusha
pushf
call
pushf
call
shr
cmp
rdtsc
cmp
clc
pusha
sub
pushf
jmp
bswap
bswap
inc
rol
mov
cmc
add
call
divl
pusha
mov
pushl
jmp
movb
push
mov
jmp
mov
pushf
popl
push
jmp
mov
pushf
pushl
pusha
push
lea
jmp
pushf
cmp
stc
not
bt
movb
call
pushf
popl
pushl
mov
push
call
mov
pushf
call
jmp
sub
btc
shrd
and
mov
test
lahf
das
mov
push
sub
cmc
call
repz
pushf
jmp
jmp
push
movw
pusha
repz
popl
movb
pushf
mov
pushf
call
mov
pushl
mov
mov
pushf
lea
jmp
push
mov
pusha
pushf
pushl
ret
lea
jne
setnp
xorb
jmp
pushf
jmp
pushf
popl
pushf
pushl
popl
pushl
lea
jmp
stc
xor
call
pusha
pusha
call
pushf
push
repz
popl
pushl
jmp
movzbw
lea
call
push
mov
mov
push
movb
lea
jmp
test
xchg
mov
test
mov
call
call
jmp
pushf
shl
ror
mov
sub
jge
cmc
stc
add
cmc
test
cmc
shrd
push
mov
jmp
push
pusha
mov
movw
pusha
pushl
ret
push
mov
not
call
push
lea
lea
jge
mov
push
pushf
mov
pusha
lea
jmp
