push
lret
cwtl
add
sti
outsl
jno
adc
xlat
rclb
sbbb
sub
sbb
jnp
xchg
dec
mov
inc
fists
or
cmpsl
or
test
scas
arpl
std
cs
cltd
fnstcw
hlt
dec
imul
mov
sti
cmp
fwait
aam
nop
loop
sbb
xchg
push
bound
scas
int
inc
pushf
or
adc
jne
sbb
iret
xchg
or
mov
dec
out
add
jns
xchg
cld
shll
adc
jnp
cmpsl
cld
inc
mov
mov
dec
push
nop
mov
into
ficompl
sub
andl
mov
inc
stc
stc
stos
push
pop
and
lahf
mov
rclb
out
and
mov
aas
out
sahf
dec
push
push
inc
inc
mov
lret
lods
mov
out
cmc
je
sub
mov
js
sets
push
lea
mov
lea
clc
bt
movsbw
call
lea
jne
call
push
adc
xor
add
jbe
adc
test
cmpsl
adc
add
mov
adc
sub
sti
push
scas
outsb
xchg
dec
sbb
xchg
in
pop
add
cmp
push
mov
out
mov
or
jnp
and
mov
cwtl
pop
sub
test
adc
xchg
cltd
dec
push
fildll
adc
push
mov
andl
fstpl
ja
ret
xchg
inc
pushf
pushf
sti
jb
sbb
mov
mov
pop
lods
xor
jnp
dec
hlt
movsb
std
std
xchg
xchg
fistpll
or
sbb
adc
mov
aas
jbe
xor
adc
lahf
lea
data16
fnstcw
mov
cmp
ja
jmp
dec
add
aad
jge
mov
mov
mov
inc
rolb
adc
cld
or
lods
roll
xchg
cwtl
cmp
mov
mov
sar
sub
es
shll
dec
mov
xor
cmp
mov
das
cmp
faddl
pop
test
dec
push
xor
sub
or
jg
outsb
cmp
inc
mov
sub
test
push
push
or
decb
jne
sub
cmp
dec
jg
stc
sub
inc
cmp
dec
lods
xor
aad
loop
iret
cmpsl
in
inc
xchg
out
inc
lock
xchg
jg
cltd
push
or
lret
dec
ret
pop
cmpb
add
cmc
clc
mov
pusha
clc
pushf
clc
test
pushf
mov
lea
je
stc
stc
add
stc
pushf
clc
cmp
movb
lea
jb
test
jmp
dec
sub
sub
dec
not
out
mov
ror
xor
fiadds
hlt
cmp
push
and
push
xor
xor
jno
rcrb
lods
lds
and
ret
jg
pop
je
sti
adc
push
fwait
mov
xor
or
push
lock
ret
xchg
sub
add
cmp
pop
aad
stos
push
je
add
je
pop
sahf
lds
jg
lods
call
or
mov
xchg
loope
pusha
pop
stc
sbb
scas
test
movl
call
call
mov
shl
sar
sar
add
mov
lea
shld
shr
pusha
rcl
mov
btr
pop
sub
add
movzbw
mov
lea
pusha
call
pusha
pusha
mov
inc
movl
pushf
movb
lea
jmp
cmc
or
jne
pushf
lea
jne
bsf
setge
neg
mov
jo
or
pushf
call
push
lock
std
std
out
insl
xchg
mov
ret
jl
sbb
daa
outsb
icebp
pushf
mov
pop
ss
inc
lahf
dec
or
rcrl
dec
dec
and
aam
pop
ret
add
jecxz
sub
ja
mov
add
scas
add
and
in
xchg
push
lods
je
cmpsb
stc
pop
adc
push
loopne
jmp
sbb
dec
lea
je
test
cmp
pushf
push
push
lea
jne
pushf
pusha
inc
movw
lea
ja
inc
push
movb
push
mov
lea
jmp
call
std
ds
sub
or
arpl
int3
pop
and
rorb
aaa
dec
dec
aas
fwait
inc
clc
mov
add
ja
sbb
ja
xor
out
jp
fstl
dec
dec
cld
fsts
push
aas
fistpll
adc
lcall
ss
xchg
aam
dec
or
repnz
je
cld
mov
mov
mov
into
pushf
scas
cmp
sbb
mov
xor
dec
pop
xchg
std
push
push
hlt
jg
mov
add
mov
xchg
and
jp
mov
pop
sbb
fimull
cltd
xchg
jb
out
lock
stos
sbb
mov
add
loope
mov
or
lds
rclb
pusha
xchg
andb
and
sbb
stc
insb
aaa
pusha
xchg
stos
test
stc
hlt
mov
test
lcall
imul
cmpl
push
dec
mov
dec
mov
gs
xchg
xchg
add
mov
testl
xchg
enter
in
in
mov
iret
or
arpl
popf
lods
inc
mov
mov
lods
test
inc
dec
insb
lret
out
inc
gs
rcll
cwtl
cltd
adc
push
lea
stc
mov
xchg
xchg
test
jno
xchg
pop
mov
jmp
out
push
jl
imul
cmp
addr16
jmp
rcr
shlb
push
pop
inc
cmp
mov
xchg
and
ret
push
pop
or
gs
mov
sbb
stos
stos
subb
xchg
mov
mov
push
popf
aam
cmp
jno
loope
add
mov
rcll
inc
sbb
adc
rolb
leave
cltd
push
pop
aam
add
lods
es
mov
ljmp
leave
call
fdivp
movsl
mov
addr16
stc
mov
push
add
and
in
aad
mov
es
pop
stos
mov
insb
les
in
sbb
add
orb
cmp
fmul
push
xor
sahf
stos
shll
rolb
mov
fstpl
movsl
or
mov
mov
test
push
movsl
rcl
clc
les
ljmp
sub
mov
mov
sbb
pop
or
cmpsl
mov
lret
jmp
push
ds
shrl
mov
int
daa
insb
mov
jge
jge
mov
leave
jecxz
jmp
mov
popf
xchg
push
cmpsb
insb
sahf
cltd
inc
or
lcall
insb
mov
dec
imul
in
mov
or
sbb
jae
pop
jecxz
inc
xchg
and
mov
repz
fsubrs
pop
lcall
mov
add
jp
sahf
xchg
add
pop
mov
es
sub
push
ljmp
in
pushf
jmp
fsts
mov
repz
movsb
pop
mov
loop
and
adc
cmp
mov
fisttpll
test
dec
sub
xchg
insb
mov
in
lea
pop
dec
add
jmp
leave
cwtl
shrb
xchg
mov
in
lahf
push
arpl
sub
jmp
fwait
imul
xor
xlat
clc
ret
cmp
cmp
pop
ja
sub
mov
lret
lcall
push
icebp
addr16
xchg
rol
test
stc
cs
les
xchg
loope
lcall
mov
sub
jo
les
lods
mov
jbe,pt
inc
xchg
mov
mov
test
stc
pushf
mov
icebp
inc
popa
mov
movsb
mov
stc
pop
mov
ds
fiaddl
push
adc
dec
dec
pop
imul
insb
stos
out
in
stos
xchg
mov
lret
mov
addr16
inc
mov
cs
lahf
and
cwtl
cmpsl
ret
ja
fisttpll
repnz
cltd
mov
inc
in
cmp
jp
mov
lods
sarb
push
scas
mov
mov
ficoml
push
loope
mov
mov
mov
enter
add
rclb
mov
mov
jle
stos
js
pop
push
cmpsl
add
sbb
sbb
mov
mov
aad
mov
dec
test
inc
test
iret
insb
pop
mov
pop
pop
addr16
cli
ss
jmp
add
movsl
lods
rcr
dec
imul
push
daa
mov
lcall
jmp
or
xor
out
xchg
jecxz
pop
mov
insb
aas
fldenv
loopne
xor
sub
mov
repnz
pop
mov
insb
leave
mov
test
ds
js
rclb
lret
sbb
aad
movsb
loope
leave
popf
xor
cmp
imul
pop
xor
test
int
jae
mov
cmp
dec
lcall
fwait
mov
xchg
add
mov
mov
jnp
inc
and
pop
xchg
enter
lods
xchg
add
test
clc
data16
arpl
ss
lahf
mov
fld
sub
ss
xor
outsb
mov
cwtl
mov
shrl
int
cmpsl
pop
add
leave
jecxz
mov
push
repnz
shlb
sbb
mov
mov
sbb
and
mov
push
mov
int3
xor
stos
jbe
in
pop
push
sub
sbb
hlt
xchg
sahf
lea
cmp
pop
leave
test
movsl
sub
je
push
mov
mov
mov
mov
mov
stc
ss
xchg
mov
adc
imul
repz
and
insb
test
scas
push
in
mov
fsubl
sub
and
cli
sti
popf
pop
aaa
fnstenv
xor
lock
sarb
icebp
mov
jb
add
stos
sub
pop
lret
adc
repnz
mov
into
xchg
push
movsl
stc
mov
lods
sti
shl
arpl
inc
daa
rcr
test
lock
inc
fxam
insb
jmp
fidivs
xor
cmp
int
inc
sub
xchg
add
insb
notb
mov
mov
push
jl
xchg
fistpll
push
sbbl
cmp
cmp
cmp
xor
mov
sbb
sbbl
pop
sahf
pop
adc
push
cmp
mov
mov
cltd
xchg
insb
xor
cmp
dec
adc
fisubrs
mov
add
push
add
fwait
cltd
shrb
cmc
lea
mov
test
ss
shll
mov
inc
mov
popf
in
mov
stos
and
in
dec
js
fcoml
mov
mov
sarb
rorl
popa
mov
jnp
cwtl
jmp
push
vandpd
pop
shr
outsb
ret
pop
stos
jle
das
add
mov
insb
xor
imul
dec
push
sarb
jg
pop
xor
popa
jge
dec
jns
sub
cmp
shll
and
cmp
stos
repz
gs
pop
mov
push
xchg
lret
xor
popf
adc
mov
mov
les
ja
jl
jne
xor
fcomp
gs
pusha
ret
shrb
les
insb
sub
pop
lods
cmp
mov
leave
pop
mov
and
subb
or
or
data16
xchg
sbb
push
mov
sub
stos
fidivl
nop
and
push
jp
xor
out
dec
and
jmp
pop
mov
stc
insb
dec
jecxz
jmp
mov
in
sarl
mov
mov
sbb
mov
imul
pushf
mov
mov
cmp
mov
bound
pop
fdivl
test
lea
push
lds
push
sti
xchg
inc
mov
out
fisttpll
sub
pop
pusha
sub
and
out
fldl
cmp
push
mov
aaa
fsts
pop
sbb
inc
sub
add
arpl
inc
lcall
xchg
fcompl
js
inc
lret
loop
fsubrl
pushf
sub
or
iret
sahf
jmp
ret
test
popf
cmp
out
fldenv
push
sub
jg
cmp
sub
xchg
rcrl
xor
inc
mov
insb
das
cmp
std
stc
ja
xchg
pop
mov
pop
cmp
mov
mov
mov
mov
and
add
mov
push
sbb
movsb
jg
stc
mov
decw
stos
push
fcompl
xor
fwait
or
mov
push
fistps
fdivs
or
sub
lea
insb
xchg
adc
push
cs
mov
lret
fld
rcll
inc
fisttpl
mov
jnp
xchg
imul
mov
xchg
movsb
insb
std
test
test
inc
test
inc
or
pushf
ljmp
cmp
cmp
test
add
rorl
pop
repnz
mov
or
push
jle
jmp
lea
inc
cwtl
lods
lahf
movsb
dec
lods
inc
cmp
icebp
xchg
out
inc
mov
inc
mov
add
add
lahf
shrl
fcoms
lea
mov
lcall
insb
lcall
sub
sbb
outsb
mov
cmp
sbb
cmp
dec
push
sbb
cmp
mov
jmp
ljmp
adc
and
add
mov
popa
mov
jno
xchg
repz
rcll
lcall
xchg
cli
lods
out
ret
pop
into
cwtl
inc
insb
sbb
insl
inc
in
sbb
loop
xchg
imul
into
xchg
push
and
scas
xchg
jnp,pn
add
and
sub
lods
shll
pushf
mov
addr16
mov
dec
sub
into
or
ja
lahf
scas
add
cmpsb
lods
insl
jmp
mov
pop
js
movsl
and
insb
insl
fcomi
test
mov
jg
and
or
imul
stos
insb
imul
in
addl
rorl
stos
loop
jecxz
test
and
inc
xor
add
fld
pop
mov
add
jge
mov
lahf
iret
test
sbb
push
mov
lods
test
iret
mov
adc
cmpsl
popa
stos
xor
inc
inc
mov
insb
ja
imull
imul
movsl
hlt
lods
mov
and
into
test
cmp
add
in
nop
ret
pop
pop
and
jl
mov
xchg
cmp
mov
cmp
mov
imul
cld
lods
dec
stos
fnstenv
xchg
pop
jp
push
lea
pop
cmpsl
gs
mov
insb
mov
mov
push
jne
iret
sub
xchg
mov
push
sbb
push
fimuls
xor
sub
stos
cmp
push
pop
sbb
shll
ds
clc
cltd
aaa
in
test
or
push
cmpsb
aam
and
sarb
xchg
cli
fsubrl
bound
pusha
out
js
add
cs
out
cmp
pop
or
in
iret
enter
test
lods
jb
push
jnp
pop
dec
fs
pop
dec
mov
dec
in
push
cmp
int3
mov
decb
sub
pop
outsl
loopne
pop
inc
push
or
xchg
lret
push
je
push
das
cmpb
xchg
sub
mov
cmpsw
jp
lods
adc
dec
out
jecxz
and
add
inc
sub
es
enter
pop
jecxz
lret
inc
xor
push
aad
out
insb
mov
jnp
cmc
addr16
mov
adc
pushf
push
pop
lret
mov
stos
push
jo
dec
test
int3
sbb
xor
mov
inc
pop
popa
loope
xchg
mov
pop
pop
leave
insb
movb
and
lds
ds
and
push
bound
cmp
cmpsl
sbb
push
test
jae
ret
cmpb
push
inc
fsubrs
jle
sub
xor
iret
and
xchg
in
cmp
std
sbb
fsubl
mov
mov
insl
inc
dec
call
pop
xchg
mov
imul
cwtl
mov
jl
adc
shrl
xchg
mov
and
pushf
cmpsb
mov
inc
in
dec
and
test
jp
popf
cmp
jb
fwait
push
jge
data16
pop
or
ret
adc
sub
fcmovb
add
xor
sub
movsb
sub
int3
pop
loopne
lahf
xchg
cld
popf
test
mov
sub
xchg
mov
pop
stos
or
daa
sbb
mov
outsb
dec
fwait
in
lahf
imul
gs
mov
or
out
hlt
inc
call
call
stos
movl
negl
dec
add
push
mov
push
jle
pop
adc
jle
popa
mov
lret
and
fwait
add
mov
les
negl
int3
cmpsb
inc
cmp
jl
int3
test
mov
jle
and
mov
les
stc
pop
and
jmp
jl
sti
mov
mov
popf
push
xchg
cmp
cltd
cmp
pusha
jmp
test
stos
cmp
loop
movsl
jb
cwtl
scas
adc
stos
push
push
sub
dec
hlt
dec
mov
iret
imul
lea
rclb
fsubrs
mov
pop
mov
cmp
test
mov
mov
cmp
sbb
ss
mov
in
test
sbb
sbb
pop
in
fwait
test
sbb
lods
jbe
cmp
ret
aad
dec
lea
lea
adc
sbb
pop
repz
loop
stc
mov
je
movsb
insb
dec
in
bound
in
cmc
xor
repz
jp
and
int3
push
fdivl
xchg
jecxz
ret
outsl
in
mov
lods
iret
dec
movsl
adc
fwait
xor
and
lahf
jo
popf
jmp
cmp
rol
movsb
adc
fwait
mov
mov
pusha
jmp
mov
pusha
mov
pop
adc
imul
imul
push
xor
mov
stc
mov
adc
sbb
mov
cwtl
push
mov
outsb
pop
mov
aas
popa
rcrb
sbb
push
nop
push
jne
cmp
cmp
data16
and
lahf
rol
shlb
and
inc
popa
out
mov
dec
ror
test
pop
shrb
aad
aam
xor
mov
mov
test
jmp
lods
adc
push
lock
mov
push
sub
inc
and
sti
jl
push
outsl
or
push
mov
push
aaa
les
arpl
or
movsb
roll
inc
sub
xor
sbb
dec
dec
loopne
gs
jb
cmp
mov
insb
shrb
cmp
push
add
loope
mov
add
and
push
push
add
add
and
in
imul
insb
pop
je
inc
dec
cmp
roll
lret
pop
repz
jns,pt
pushf
pop
add
jp
cmp
fnsave
dec
sub
outsl
ds
insl
scas
inc
imul
lods
push
mov
enter
mov
or
loopne
movsl
fisubs
jl
mov
mov
stc
add
cmc
fwait
sahf
xchg
fistl
scas
les
lret
cmp
and
in
cmovbe
pop
mov
sbb
jb,pn
icebp
sub
lods
subl
jae
scas
popf
jp
std
ret
sbb
insb
idivl
cwtl
sub
mov
jmp
stos
cmp
fnsave
fdivrs
idivl
in
jne
shl
pop
lcall
sub
popf
mov
cmpl
add
adc
mov
xchg
into
mov
xor
daa
push
sub
sbb
imul
and
sbb
inc
int3
ja
push
jge
mov
in
addl
in
stc
nop
jmp
lahf
xchg
jo
or
in
stos
sub
push
bound
lods
test
inc
sub
mov
rolb
jl
bound
test
mov
jb
mov
mov
fsts
xchg
insb
sub
repnz
xor
sub
movsl
pop
sbb
pop
cmpsl
lea
jp
insb
xchg
dec
in
and
add
scas
cltd
mov
imul
sub
scas
flds
loope
or
cwtl
fmuls
mov
leave
adcl
inc
lret
jo
jp
push
jmp
dec
mov
es
adc
cltd
dec
jae
test
stos
cmp
mov
pop
sbb
fcomi
push
mov
adc
jge
mov
add
rcrl
push
sub
push
sbb
xchg
or
sbb
int
or
cltd
lods
mov
das
mov
les
addb
insb
jb
cmp
push
pop
gs
loope
mulb
sbb
sbb
mov
shl
dec
pop
xchg
xchg
sti
lds
push
add
and
cli
pop
jge
xchg
pop
dec
rcr
ds
dec
call
cli
dec
sbb
leave
repz
sahf
enter
fwait
sub
mov
pop
pop
mov
push
mov
xchg
push
fildll
inc
push
sub
adc
xchg
sti
outsb
popa
sub
mov
mov
stos
cltd
sub
std
popf
imul
push
xchg
in
lahf
das
test
call
xchg
loop
push
scas
and
repnz
movsb
das
pop
mov
pop
rcr
fwait
mov
ljmp
aaa
push
stos
inc
movsb
cmp
les
sub
sub
inc
test
outsb
xor
inc
ret
sbb
adc
stc
movsl
adc
scas
lcall
ljmp
stos
loopne
push
icebp
lret
lea
lcall
mov
sbb
pop
cltd
cmp
cmp
push
jl
sub
sub
pop
popf
adc
int
mov
cltd
jb
push
lock
sbbl
cmc
ss
dec
ret
test
lcall
stos
mov
test
cltd
test
sbb
jo
lods
icebp
stos
xor
pop
mov
ret
out
cmp
mov
sub
adc
loope
cmp
mov
xchg
movsb
fistpl
outsb
push
addr16
cmp
pop
mov
cmp
add
sbb
lahf
inc
push
jl
pop
mov
sub
add
vpunpcklwd
sbb
and
ud2
cmpsl
push
mov
or
jle
imul
xchg
movsl
fnstenv
mov
mov
inc
pop
mov
mov
cli
lahf
leave
sbb
pop
stc
testb
sti
mov
sbb
sbb
push
adc
xor
test
cmp
das
daa
movsl
test
pushf
add
out
dec
sbb
in
push
mov
cwtl
xor
mov
lock
lds
cwtl
fwait
xor
repz
cmc
inc
fwait
xor
jb
or
fstpl
clc
dec
scas
xor
daa
ja
sub
mov
mov
jge
cltd
jecxz
push
mov
popa
in
sub
mov
leave
dec
mov
movsl
stos
mov
lahf
in
or
das
out
mov
rcll
jae
xor
cltd
sub
xchg
xlat
mov
xor
dec
sti
pop
sbb
add
adc
clc
xchg
in
and
fwait
add
lea
or
cmpsb
outsl
cltd
or
in
mov
popf
mov
popa
pop
and
mov
adc
fcmovbe
call
xchg
addr16
inc
cmc
mov
div
clc
sti
cltd
mov
std
inc
jmp
arpl
jge
mov
mov
test
scas
sbb
xchg
fldenv
xchg
enter
mov
adc
setns
leave
xchg
psubusw
cwtl
sbb
lea
bound
sbb
mov
loopne
cltd
int
adc
stos
loope
cmp
fstpt
scas
mov
cltd
lock
inc
xchg
xchg
jno
pop
push
popf
mov
mov
sarl
mov
pushf
sub
dec
repnz
cmp
inc
mov
cmp
movsl
popf
imul
xchg
popf
fwait
cmc
pop
lods
xchg
lahf
lcall
rcrb
dec
cmp
sbb
icebp
push
stc
movsb
xchg
lretw
and
mov
loope
hlt
jbe
mov
sub
xlat
scas
sbb
pushf
cmc
push
loopne
sar
or
nop
test
xor
cmp
push
add
mov
mov
cmp
xchg
cmp
jnp
mov
pop
add
lods
icebp
pusha
icebp
push
lods
add
pop
push
popf
insl
sbb
loope
cltd
stos
rorl
pop
cmp
adc
in
fnstcw
pusha
sub
dec
dec
inc
cltd
mov
test
xchg
sbb
mov
in
mov
repz
pusha
mov
xchg
sub
hlt
call
lret
loop
popf
mov
pop
sbb
or
mul
rorl
fists
mov
stos
cwtl
jle
cmp
jnp
lea
mov
insb
dec
mov
cltd
cmp
xchg
fwait
daa
fisttpl
pop
insl
sbb
cmp
dec
cltd
inc
inc
out
addl
leave
push
cltd
adc
jae
and
popf
pop
out
or
lret
stos
inc
cmp
add
fistpl
mov
lods
add
push
cltd
fdivr
adc
adc
dec
lahf
dec
adc
fcomps
or
enter
mov
inc
pusha
jmp
popf
cltd
xorb
mov
cltd
lods
mov
adc
cmp
sub
fldenv
data16
mov
jg
adc
and
test
xor
xchg
sahf
cld
aam
mov
hlt
or
cwtl
ss
cmpsb
xor
ficompl
adc
lcall
or
fmuls
mov
mov
dec
mov
or
sbb
pop
xor
jo
dec
leave
fiadds
xor
insl
xchg
iret
cltd
mov
arpl
push
add
mov
test
mov
insb
sbb
or
cltd
dec
jbe
or
cltd
fsubs
stos
xchg
jl
jae
loope
ss
add
add
jp
mov
jnp
or
jae
xchg
movb
inc
out
fwait
pusha
push
push
stc
fmul
push
mov
shrl
pop
cmp
popa
out
inc
adc
mov
xlat
pop
dec
test
jmp
cwtl
cltd
pop
call
xorl
fstpl
lret
std
mov
inc
pop
lcall
mov
mov
jbe
push
aas
cli
mov
jle
js
or
mov
and
fmuls
pop
int3
pop
pop
cli
fwait
mov
and
std
cltd
sarb
repz
adc
outsb
ja
push
not
mov
into
scas
xchg
ret
call
das
cmp
cltd
push
sbb
inc
je
out
cltd
or
xor
or
int3
jno
push
dec
sub
lock
sub
data16
or
outsb
mov
rcrb
daa
mov
test
gs
fnstenv
in
cltd
dec
and
pop
clc
mull
call
cltd
inc
or
cld
mov
test
out
jne
cltd
cmp
cmpsl
and
mov
jae
das
cltd
into
sub
or
adc
push
adc
ficoms
or
cli
mov
push
mov
test
bound
sub
xlat
cli
mov
lahf
sbb
jge
adc
int3
cltd
fiadds
icebp
jle
inc
xchg
std
fsts
inc
test
fwait
testb
movsb
sub
sub
jo
out
push
pop
xchg
es
push
jns
cltd
inc
test
in
mov
sahf
nop
cltd
shl
adc
nop
cmpsl
pop
lock
jnp
push
fdivr
pop
mov
adc
jb
sbbl
nop
jnp
outsl
shrl
mov
sbb
push
jmp
push
out
js
cltd
adcb
sbb
mov
cltd
out
mov
test
mov
bswap
shlb
hlt
test
ljmp
sbb
adc
xlat
push
inc
aam
cmp
or
in
icebp
jae
mov
fldcw
push
lock
inc
pop
jns
pushf
cltd
test
adc
add
daa
cmovae
xchg
mov
scas
call
jl
test
mov
hlt
nop
scas
xor
jle
xchg
fwait
mov
in
inc
mov
sbb
scas
sub
or
push
addb
add
add
lea
shl
sbb
jne
xor
subb
pop
add
add
pop
test
pushf
js
adc
xchg
jbe
fwait
add
cwtl
or
mov
adc
xor
adc
shll
adc
and
test
xchg
inc
sahf
insl
inc
shrb
ds
mov
pop
aam
or
stos
and
sbb
daa
loope
adc
mov
leave
push
testl
adc
leave
repz
stos
stos
adc
cmpsl
dec
insb
inc
call
pop
repnz
lret
ret
push
loopne
loope
jmp
gs
jp
jl
dec
jp
insb
add
push
sub
mov
xchg
mov
mov
sub
fwait
cmpsb
pushf
xchg
repz
movsb
lods
iret
or
lahf
and
loope
cmp
loop
sbb
sub
or
mov
ret
insb
out
hlt
lcall
dec
mov
mov
fimuls
dec
mov
iret
les
stos
add
shrl
ret
inc
mov
inc
or
testl
sub
rorl
movsl
arpl
mov
in
cltd
or
popa
fildl
cltd
adc
stos
adc
push
fildl
jp
jns
cltd
dec
dec
neg
jecxz
rcl
cmpsl
pushf
inc
pop
pop
add
mov
jb
lods
push
daa
test
sbb
inc
fldl
js
cltd
nop
mov
out
fs
lahf
cltd
lock
ffreep
cli
sbb
cltd
inc
scas
pop
test
cmc
cmpsl
jg
dec
lea
clc
jbe
cltd
pushf
movsl
mov
or
test
std
cmp
lahf
aam
adc
repz
and
jae
jnp
mov
pop
jl
cltd
sahf
push
pop
mov
fwait
mov
xchg
xor
pop
mov
dec
jge
xor
xor
popw
jns
push
pop
in
cmc
add
fstpl
fsubs
pop
fwait
and
scas
movsb
pop
sub
push
mov
ja
sub
lret
outsl
and
add
insb
jge
cltd
jmp
je
mov
xor
push
jb
add
xor
rclb
rcrb
addr16
adc
shll
lcall
movsl
jle
cltd
sbb
filds
int3
push
scas
loope
rolb
sub
and
clc
fwait
or
cmp
cltd
cmp
call
pop
jns
cltd
mov
mov
gs
jne
mov
fmuls
add
call
ret
sub
lahf
cli
xor
std
mov
push
fs
push
addr16
mov
cmp
pop
mov
xchg
in
loopne
repz
pop
lds
pop
cltd
inc
inc
mov
or
cli
mov
cltd
into
in
or
lock
cltd
inc
fs
cwtd
jno
mov
popa
lahf
out
ss
fcomps
mov
dec
jge
clc
aam
cmpsb
mov
and
rorl
mov
xor
decl
sub
adc
lcall
xchg
or
lcall
out
push
sub
mov
jb
std
cltd
mov
xchg
cmp
int
neg
aaa
ljmp
cltd
pop
push
fcomp
mov
sub
adc
adc
push
sub
jne
in
cltd
rcrl
sbb
cmp
lds
lock
insl
aas
clc
xchg
movsl
data16
mov
cltd
rcrl
cmpsl
mov
scas
push
divb
mov
mov
cmp
lcall
mov
cltd
cwtl
sub
mov
fistpll
lahf
mov
scas
sbb
or
in
pop
xchg
gs
test
adc
sbb
aas
mov
or
jno
cli
dec
push
shlb
cmp
fstpt
cmp
mov
xor
inc
pop
mov
rcll
adc
xchg
xor
fwait
jg
sub
sbb
push
mov
in
pop
push
cltd
cmp
jbe
ja
cmpsl
outsl
pushf
imulb
insl
mov
push
mov
cmpsb
scas
aam
ret
dec
xchg
mov
mov
mov
or
fisubs
lcall
test
mov
pop
mov
dec
mov
xchg
cmp
cltd
inc
push
dec
mov
dec
aam
loopne
test
inc
iret
jo
mov
lods
in
lcall
mov
stc
mov
ljmp
dec
lahf
mov
inc
sbb
add
shlb
arpl
mov
ret
sti
bound
ljmp
push
or
cltd
cmp
pop
dec
outsl
call
std
pushl
mov
cltd
lret
fwait
xchg
iret
loope
in
cltd
popf
jp
incl
mov
ja
lock
mov
int3
cmpsl
sbbl
imul
push
lods
adc
push
dec
adc
pushf
ret
cltd
popf
jae
pop
or
mov
outsb
xchg
adc
repnz
push
cltd
sti
cmc
leave
popa
xlat
imul
shrb
jb
lea
dec
pop
mov
cmpsl
sub
jne
les
in
xchg
mov
pop
pushf
pop
sahf
pop
mov
cltd
xchg
pusha
inc
jmp
mov
out
lcall
fwait
pop
jns
xor
lcall
insb
sub
sbb
sbb
push
jp
push
adc
cmpsb
mov
cmpl
repz
jne
cltd
movsl
test
mov
cs
jl
mov
sub
test
cltd
cmpsb
add
hlt
out
fidivrl
call
sbb
pop
lcall
fstps
mov
icebp
int
je
cli
ds
push
push
orb
cmp
or
in
mov
adc
shlb
push
lcall
pushf
dec
sub
call
xchg
das
cmp
push
stc
mov
adc
out
cmpsl
movsb
outsl
in
xor
pop
cltd
jp
mov
jbe
sahf
cltd
jo
mull
lahf
cmp
les
mov
rcl
negl
mov
pop
scas
pop
lds
mov
call
sub
fcmovnbe
cld
lahf
xor
jle
ljmp
mov
test
pushf
jb
cmpsl
xchg
sar
ret
xchg
stos
loop
cltd
sbb
sbb
push
lds
gs
cmpsb
pushf
jmp
jo
cltd
sbb
call
or
outsb
lcall
adc
mov
cltd
push
lahf
dec
inc
push
xlat
mov
dec
ret
and
cwtl
cmp
mov
jbe
lret
mov
pop
cltd
outsb
mov
cltd
fdivrs
xchg
stos
mov
adc
xchg
cmpsl
outsb
push
mov
cmp
lcall
cmp
fsub
cltd
cmc
sbb
cltd
mov
int3
xor
and
sar
jecxz
adc
aas
fnstsw
shrb
fldcw
mov
jg
or
jp
fisubl
rclb
iret
cltd
icebp
inc
jne
jg
cltd
pop
std
gs
sub
ret
cmp
jecxz
mov
cmpsb
xchg
inc
sbb
or
sub
mov
insl
xor
jl
add
inc
cltd
mov
adc
sub
inc
das
adc
mov
pop
adc
loopne
mov
cltd
cmpsl
popf
mov
and
jge
fs
xor
cltd
dec
mov
inc
xchg
fwait
test
scas
jns
mov
cltd
xchg
addr16
add
and
or
mov
sbbb
push
adc
or
in
gs
lret
mov
and
clc
cltd
movsl
out
pop
movsb
push
adc
xchg
cltd
push
filds
lret
pop
add
cltd
jmp
xchg
jb
cltd
and
adc
pop
addr16
sub
inc
adc
cltd
jnp
in
xchg
pop
movl
rol
xchg
insb
cltd
adc
mov
in
leave
sbb
xchg
daa
cwtl
mov
cmp
or
push
rorb
xor
add
ss
fmull
push
add
enter
cltd
movsb
jp
les
dec
cltd
leave
cwtl
dec
pop
inc
mov
cltd
arpl
test
pop
cltd
repnz
mov
sub
xchg
cltd
jmp
in
mov
test
mov
lret
jb
push
push
sbb
mov
out
push
mov
jae
fwait
jg
testb
rcll
sub
lea
daa
xor
ss
cmpsb
cmp
mov
fisubrl
add
ficompl
shl
mov
movsl
or
push
inc
cltd
sbb
jp
dec
dec
xor
adc
mov
inc
in
mov
cltd
jns
push
icebp
adc
insb
add
ss
stos
fwait
push
ret
aas
adc
and
in
les
sbb
push
xchg
cmp
xchg
or
rcrb
lcall
xchg
cmp
or
fld
js
or
cmp
sub
inc
mov
std
sbbl
xor
add
add
pop
jmp
sahf
jl
out
adc
test
add
mov
addr16
pop
fwait
xchg
cli
xchg
in
pop
mov
movsl
jg
jns
mov
jmp
cmp
pushf
cltd
adc
cltd
cmpsl
in
pop
into
jbe
cmp
cltd
add
xchg
cmp
sub
and
dec
iret
es
jg
dec
jmp
sub
test
push
mov
and
lea
fnstenv
test
mov
push
pop
sub
shrb
dec
popf
jbe
scas
int3
push
lcall
mov
xchg
mov
in
push
sti
push
fstl
out
pop
xor
dec
jns
mov
lods
lea
sahf
repnz
les
push
fiadds
stos
mov
das
test
cltd
mov
xchg
clc
insb
rorl
repz
fwait
xchg
push
and
push
mov
ret
inc
call
dec
or
sarb
sub
jp
push
xchg
push
shll
hlt
mov
sbbl
loop
stc
inc
sbb
add
xor
movsl
push
mov
adc
mov
insl
add
adc
lcall
or
adc
push
imul
gs
mov
push
fstl
adc
mov
push
in
repz
pop
jge
push
xchg
pushf
out
inc
mov
mov
push
inc
les
iret
imul
dec
fwait
xor
dec
xchg
dec
pop
arpl
movsl
mov
fs
xor
and
inc
cs
arpl
pop
popf
mov
fwait
mov
dec
negl
leave
mov
insb
xor
hlt
mulb
sarl
cmpl
jae
mov
xchg
lds
mov
lcall
ret
mov
mov
xchg
pushf
add
js
fwait
shrl
call
inc
rcrl
jmp
dec
insb
insl
pop
cmp
inc
and
lret
mov
cmp
arpl
sarb
mov
and
and
mov
aaa
or
xor
nop
mov
mov
lret
aad
or
push
insb
add
and
push
mov
dec
add
mov
adc
cmpsb
cmpsl
cmp
popa
pushf
inc
cltd
sub
lods
hlt
bound
mov
dec
into
lea
fwait
lcall
sub
int3
mov
jnp
hlt
stc
or
sub
mov
cli
sub
std
adc
daa
scas
cltd
insl
and
cmpl
aaa
or
adc
pusha
xor
push
jbe
mov
insb
push
xor
inc
xchg
fwait
inc
sbb
cmp
in
loop
cltd
iret
jmp
cltd
push
pop
adc
jg
cltd
inc
pop
imul
cli
insb
add
cltd
or
outsl
ljmp
bnd
xchg
pop
lea
stc
sbb
lcall
cltd
loopne
cmp
cltd
sub
sub
xor
rolb
sub
ret
sub
sti
cs
int3
push
into
cltd
shlb
aas
mov
cltd
sub
and
inc
fs
mov
stos
test
lret
xchg
cltd
mov
popl
jne
test
mov
insb
inc
cwtl
pop
cmp
fisttps
and
mov
push
jnp
imul
or
movsb
sbb
sbb
fiaddl
mov
mov
es
push
mov
xorl
mov
add
xchg
jge
insb
cltd
movsb
mov
jmp
cltd
push
fstpt
mov
fidivs
hlt
rcll
out
lcall
shrl
cltd
leave
loopne
jne
add
adc
gs
sbb
mov
or
jge
scas
popa
cltd
mov
xor
in
in
mov
pop
sbb
xor
sahf
pusha
fwait
mov
pop
pop
sub
lds
lret
cmp
cmp
orl
or
cltd
lods
pop
clc
mov
imul
xor
push
ss
in
out
jge
adc
test
jb
cmpsl
outsl
jmp
mov
hlt
dec
cltd
pop
iret
mov
inc
jg
cltd
add
outsb
dec
insl
pop
addl
rcrl
push
sub
cli
std
cltd
flds
imul
aaa
sarl
lcall
in
adc
aas
mov
inc
xor
imul
sbb
mov
cltd
rcrb
xor
fisttpll
dec
rcrb
xor
and
sti
sbb
ficomps
pop
dec
test
cltd
aam
mov
fwait
inc
jns
lahf
xor
les
or
lcall
outsl
cltd
sbb
iret
loop
aad
cmpsl
les
lahf
adc
cltd
sbb
add
xchg
fisubs
xchg
push
stos
mov
pop
jne
cmc
jb
stos
mov
dec
pushl
sti
xchg
mov
xchg
mov
jo
cmpsl
adc
pop
sarb
imul
mov
inc
xchg
pushf
out
cltd
and
into
cltd
mov
pop
pop
xchg
or
ret
lcall
or
mov
add
adc
cltd
xor
cmp
or
sbb
mov
jecxz
jns
imul
xchg
sub
cltd
mov
pop
sub
ja
ret
cltd
dec
xchg
popa
mov
cltd
add
jl
cmp
sarl
add
sbb
sbb
inc
pop
sbb
cltd
xor
inc
push
mov
rcl
ret
lods
lcall
cltd
lock
addr16
jnp
pop
cltd
pop
push
insb
js
jle
es
xor
repnz
cltd
xchg
mov
push
dec
cltd
cwtl
in
dec
shl
cli
sahf
addr16
jge
fcmovnbe
fmull
cmp
mov
pop
mov
push
and
adc
push
jle
cmc
xchg
add
pop
push
ficompl
fcomp
stos
pop
jg
push
arpl
jmp
mov
dec
pop
loop
inc
pushf
pop
mov
sub
clc
gs
pop
cltd
pop
jg
scas
sbb
popf
lahf
cltd
sahf
test
mov
mov
leave
cmp
cmpsl
adc
call
mov
jae
or
cmp
xchg
in
pop
ja
in
int
cltd
xor
lcall
mov
pop
jp
jno
pushf
mov
adc
xchg
shll
ja
sub
stc
cltd
pop
jnp
stos
rcl
xchg
cltd
push
pop
jb
in
cmpsb
aad
push
cltd
cld
adc
mov
mov
and
imul
mov
dec
in
es
fiadds
jno
dec
fstps
bound
mov
stos
jmp
cwtl
push
js
adc
test
inc
cltd
cmpsl
xchg
or
xchg
cltd
idivl
xor
add
jmp
cltd
xorl
fcmovu
imul
cltd
mov
sahf
or
dec
jg
lahf
xchg
loopne
roll
lock
rorb
cli
lods
cltd
jne
fwait
jno
xor
std
stos
cmpl
mov
cmpl
or
test
scas
xor
jg
fwait
sub
jb
outsb
cltd
sub
pop
or
cli
xor
insl
jbe
das
cltd
pusha
mov
sbb
mov
std
aam
inc
or
in
jne
pop
out
lcall
jmp
andb
xchg
adc
push
cmpsl
cmpsb
dec
shl
cmpsl
pop
pusha
mov
dec
adc
pop
stos
mov
ficoml
inc
cmp
jbe
mov
push
pop
and
in
leave
std
cltd
add
fabs
pop
iret
cmp
sbb
cltd
scas
push
cmpsl
out
inc
popf
pop
mov
cmp
push
int
dec
xlat
jg
lock
cmp
lcall
int
sub
in
rol
push
lret
or
jmp
xchg
addb
out
and
cltd
popf
pop
mov
inc
jmp
incb
push
lcall
ficompl
aad
xchg
cltd
jb
ljmp
cmp
adc
mov
mov
mov
popf
sbb
cmp
or
pop
movsl
outsl
or
pop
sub
in
jno
fdiv
dec
test
js
mov
cltd
cmp
xchg
mov
jg
test
push
daa
pushf
out
mov
cltd
sbbb
fdivl
cmp
fdivs
aad
repz
loopne
outsl
cltd
xchg
mov
and
inc
hlt
std
addr16
add
mov
inc
mov
jne
lods
sti
stc
or
dec
add
es
xchg
daa
sbb
mov
scas
push
in
stc
fwait
out
outsb
push
xchg
lds
sub
cltd
filds
in
out
cmp
add
add
frstor
out
or
pushf
jb
cltd
je
push
ljmp
cmp
inc
add
dec
jae
stos
and
pop
lods
in
mov
es
ja
clc
cltd
push
addl
aam
cwtl
add
cmp
mov
loop
xor
dec
shll
andb
dec
sub
add
add
mov
ljmp
lods
int
movsb
lock
adc
cltd
rcrb
adc
into
mov
cltd
cmpsl
fsubs
mov
pop
xor
push
xlat
mov
cs
mov
sbb
fstpl
mov
cltd
fcom
andl
xchg
lods
mov
iret
dec
jns
andb
mov
gs
jp
dec
lret
cmp
jae
and
dec
repnz
incl
adc
mov
sbb
sbb
dec
mov
inc
mov
xchg
outsb
pop
xor
cltd
in
cmp
pusha
xchg
test
popa
mov
cltd
sub
and
cltd
je
lods
adc
sbb
das
push
lcall
pop
dec
mov
cli
jle
jl
ss
cltd
lahf
mov
add
loop
dec
bound
and
cltd
mov
mov
bound
daa
mov
fwait
jno
mov
push
xor
xor
mov
hlt
jge
pop
adc
mov
mov
cltd
stos
jecxz
jne
inc
fcoms
dec
cltd
cmp
sarb
push
or
mull
insb
add
sbb
mov
popf
xor
xor
cltd
mov
js
nop
cltd
xchg
fildl
jmp
inc
popf
xchg
fstpl
cltd
pop
dec
out
pop
jle
push
cltd
lret
sbb
sbbl
dec
xor
mov
mov
sub
and
fwait
push
jo
pop
xor
out
cmp
push
enter
popf
dec
jg
push
mov
lods
push
vdivss
mov
push
pop
and
shlb
pop
pop
insb
jecxz
mov
push
cltd
aas
enter
popa
insb
pop
or
fwait
stos
adc
lock
pop
push
fcmovnb
jle
in
dec
sbb
xor
dec
sub
in
pushf
stos
mov
ret
add
lahf
pop
incl
or
or
and
adc
stos
push
aaa
leave
mov
sub
in
cltd
stos
cmpsl
mov
mov
cli
cltd
push
daa
add
int3
stos
idivb
mov
pop
or
cld
adcl
aad
aas
test
out
bound
cli
mov
js
or
jecxz
or
pop
xchg
in
cltd
mov
loopne
push
jae
cmpsb
cmpsl
and
pop
sarb
lret
cltd
mov
lret
cltd
mov
das
and
inc
add
cmp
sbb
outsl
lahf
outsb
stc
clc
andl
roll
cli
lcall
xchg
pop
pop
cmp
xor
adc
inc
ja
cltd
sbb
addr16
jmp
and
push
insb
lcall
stos
iret
add
sahf
push
rorl
mov
add
daa
pop
ljmp
cmpsb
rcl
fs
fisubs
cltd
aas
je
mov
cltd
cmp
orb
mov
cltd
push
mov
daa
cld
cltd
aad
ret
cmp
pop
scas
lahf
int3
mov
mov
sbbb
ja
add
pop
sub
sbb
mov
loopne
int
aad
xor
jne
sahf
cmp
andb
cmp
mov
iret
imul
xchg
stc
into
mov
cltd
repnz
int3
or
mov
fisttpl
pop
loop
pop
outsb
setns
cmp
mov
test
dec
aam
adc
pop
lods
sarb
lea
insb
inc
rcrl
cld
sub
fwait
daa
push
in
pushf
or
insb
add
push
mov
adc
hlt
sarl
push
and
sbb
add
push
sbb
or
xchg
jmp
mov
jge
xor
leave
div
fadd
pop
push
xor
adc
das
js
int
rcrb
mov
out
in
lods
cmp
imul
lea
cltd
popa
imul
in
stos
sarb
adc
sbb
jno
mov
pop
test
push
cmp
cmp
cmp
xlat
insb
dec
test
jecxz
insl
or
adc
sbb
and
mov
sub
rorb
mov
jmp
dec
dec
sub
in
lock
dec
sub
sub
mov
in
test
xorb
iret
icebp
pop
lret
push
loop
mov
movsb
lahf
dec
pop
aam
inc
insb
into
or
cmp
mov
sub
notl
adc
inc
arpl
fsts
mov
gs
gs
les
cmp
add
lcall
lret
fidivrs
sub
jns
pop
sbb
jmp
lahf
popa
and
or
sub
push
cmp
cltd
mov
mov
push
cltd
or
and
pop
xchg
lds
push
mov
into
cltd
adc
mov
jp
cmpsl
jo
shll
mov
mov
jnp
popf
lods
sub
pop
aad
jge
inc
es
lcall
mov
adc
jge
lcall
cmp
gs
int
cmpsb
divl
cltd
xchg
cmpsl
jmp
ds
mov
jnp
or
test
pop
lret
inc
stos
popf
adc
fidivl
cmc
xchg
sbb
js
mov
testl
flds
test
rcr
pop
dec
jb
pop
loop
aas
outsb
add
mov
cltd
and
sahf
pop
fcompl
pop
shlb
mov
roll
mov
cltd
jmp
fisubrs
xor
adc
xchg
or
cwtl
movsb
jns
jmp
push
xchg
js
mov
push
mov
xchg
dec
icebp
cmp
in
cltd
push
cli
pushf
lahf
cmpsl
pusha
rcr
pop
mov
dec
cltd
hlt
mov
scas
and
rorl
loopne
jecxz
shr
add
dec
adc
fwait
or
pusha
push
mov
shll
hlt
push
sbb
clc
pushf
push
xor
xlat
int
loopw
loopne
fmuls
cmpl
ror
sbb
jmp
incb
lods
cmp
mov
popf
cltd
ds
imul
gs
push
mov
jg
cs
or
cltd
popa
sar
cmp
cltd
sahf
mov
mov
adc
fwait
add
add
bound
mov
cltd
mov
cmp
lock
out
mov
inc
cltd
mov
lahf
pop
sub
add
mov
cmpsl
mov
pop
cltd
and
cmp
imul
insb
iret
lret
mov
or
nop
cmpsl
or
lahf
cmpsl
out
into
jl
iret
lcall
cltd
mov
aam
std
cltd
cmc
scas
xchg
sbb
rclb
inc
mov
movsb
aad
js
add
xor
pop
ja
hlt
xor
cmpb
dec
dec
fdivrs
and
test
or
jecxz
sbb
adc
pop
push
jns
cltd
dec
jle
aas
mov
pop
cltd
xchg
data16
cltd
or
test
pop
cltd
pop
push
push
out
mov
sbb
xchg
in
pop
adc
jbe
mov
lret
sahf
lahf
imul
dec
cltd
sub
jl
rcrb
push
paddusb
out
mov
lahf
cltd
dec
lcall
cli
lret
dec
xchg
notb
lock
aad
sbb
inc
fistps
mov
or
shlb
mov
push
jb
cmpl
xchg
in
pusha
cmp
mov
pop
stc
mov
mulb
jg
mov
sbb
cltd
jne
out
sub
bound
fwait
inc
in
repz
cli
dec
mov
mov
dec
add
xchg
ret
mov
or
pop
pushf
inc
push
ret
bound
sbb
imulb
shrl
sub
xchg
xchg
ss
cltd
push
jp
pop
mov
cmp
lahf
stc
mov
and
or
cltd
inc
rcll
adc
inc
adc
js
fdivrp
iret
leave
add
cltd
in
nop
push
or
lods
sbb
or
and
in
mov
std
push
xchg
cli
popa
xor
sbb
add
pop
repz
push
test
xchg
push
xchg
imul
push
sbb
inc
fidivrl
cltd
int
adc
cmp
sbb
popf
stos
sub
cmp
xor
jae
lea
dec
push
mov
pop
mov
mov
aas
test
in
xor
cmpsb
push
or
mov
cltd
cmp
push
negl
xorl
mov
pop
fwait
shrb
out
cld
xchg
mov
repz
js
por
mov
mov
mov
ss
lea
lcall
shl
movsl
pop
adc
mov
xchg
pop
aas
repnz
dec
or
lods
sub
sahf
jmp
mov
pop
shll
cs
sbb
filds
mov
lahf
icebp
insb
psadbw
popa
ret
cmp
or
inc
test
inc
mov
orb
and
jnp
mov
lods
push
mov
cmc
out
loopne
mov
lea
fwait
imul
cltd
test
imul
stc
jl
and
inc
test
ror
mov
dec
lret
mov
test
fwait
int
orl
cmpsl
adc
imul
leave
in
pop
push
movsl
dec
aad
mov
inc
mov
jno
lock
and
fildll
shlb
bound
sbb
mov
aas
in
cmp
pop
pop
movsl
in
and
push
mov
lock
mov
sarb
or
mov
or
jg
mov
pop
cmpsb
mov
sbb
cmp
lods
sub
pop
jo
and
mov
sbbb
mov
pop
call
repnz
in
push
xchg
cmpsb
in
sub
js
sub
or
out
test
cmp
sub
pop
in
mov
aas
shlb
loope
sub
cmpl
add
lods
mov
out
sbb
mov
leave
push
or
icebp
push
mov
sbb
imul
adc
cli
insl
in
mov
nop
cltd
or
lcall
mov
jge
aad
jnp
mov
cmpsl
rclb
dec
pop
out
dec
adc
fnsave
lcall
fs
pusha
lcall
cmpsl
mov
js
xor
shrb
push
mov
push
mov
or
rclb
aad
xor
xchg
mov
sti
sub
pop
lcall
insb
xchg
sub
cmp
push
jne
and
into
cmpsb
rorb
or
cmp
lds
dec
les
mov
adc
movsb
jno
hlt
jp
lods
push
adcb
mov
ja
js
mov
sbb
out
repz
fidivrs
es
sbb
inc
sbbl
out
scas
push
in
pop
xchg
jbe
fidivrl
dec
lret
enter
loope
sub
shrb
clc
fmull
and
stc
movsb
test
cmp
lods
sti
mov
pop
sti
sbb
lret
sbb
ljmp
js
add
in
ficoml
xchg
jg
pop
mov
add
dec
mov
push
repnz
mov
pushf
jbe
mov
fcomps
inc
aas
inc
mov
stos
xchg
popf
fwait
mov
insb
adc
xchg
bound
lods
imul
pop
adc
push
push
adc
push
popa
cs
lcall
add
call
pop
jmp
out
or
mov
shr
lods
mov
clc
out
add
adc
dec
mov
or
and
push
and
sbb
mov
insb
push
xor
mov
dec
mov
push
lds
add
ds
arpl
int3
hlt
mov
mov
dec
cwtl
mov
jbe
icebp
or
xchg
lcall
add
aas
es
ficompl
adc
inc
sbb
arpl
mov
shr
leave
ret
sbbb
jl
mov
ret
add
lcall
sti
sub
jge
lds
add
push
push
cmpsb
aam
dec
icebp
mov
mov
jmp
add
pop
sub
add
xchg
adc
sub
inc
stos
ret
lret
fisubs
mov
aas
sbb
push
pop
cmp
adc
push
scas
mov
ja
jecxz
ret
es
stc
popf
stc
iret
xchg
cmc
stos
lcall
sbb
push
adc
fwait
cltd
cmp
and
jle
xchg
jne
and
pop
cltd
add
sbb
cltd
add
sub
mov
add
push
negb
jnp
inc
mov
sbb
mov
inc
cltd
dec
std
xchg
fwait
daa
les
out
cltd
inc
scas
jmp
jne
popa
scas
mov
incl
das
push
inc
cmpsl
sub
iret
je
ss
mov
rcll
jo
lcall
cltd
incb
insl
testl
sbb
in
push
ljmp
jne
leave
cmpsl
push
xor
cmp
sbb
add
popa
hlt
out
add
fwait
add
clc
pop
idivl
cltd
int3
xchg
mov
cltd
rcrb
dec
sub
jbe
xchg
adc
push
xor
cmp
xchg
cltd
scas
mov
inc
mov
or
pop
mov
mov
cs
popf
jo
cltd
lret
ret
mov
stos
in
popa
and
loopne
fwait
pop
aam
lahf
pop
xchg
cmp
fwait
jb
pop
adc
push
js
popa
lcall
cltd
out
roll
fisttpl
rolb
mov
lock
imul
dec
inc
mov
ss
mov
dec
xchg
rclb
sbb
dec
inc
cltd
pop
outsb
js
jns
enter
cltd
lods
push
ret
sbb
xchg
cltd
lret
push
aam
cmp
adcb
xchg
iret
lret
mov
cltd
lahf
lret
adc
xorl
jg
shll
jecxz
jmp
stos
je
bndstx
insb
in
inc
pop
lods
xchg
imul
aaa
lret
test
insb
adc
cmpsb
add
das
inc
les
mov
icebp
mov
pop
mov
aaa
mov
push
mov
popa
rclb
cmp
stos
xorl
mov
or
push
icebp
insb
mov
and
push
mov
mov
fisttps
add
addr16
int3
mov
test
sub
or
bound
mov
hlt
jg
out
mov
sbb
jno
stos
inc
dec
insb
mov
jmp
pop
cmp
pop
scas
sbb
mov
sub
data16
pop
jge
fwait
mov
inc
dec
or
adcb
pop
stos
xchg
test
je
lods
mov
dec
pop
push
lods
movsb
or
mov
das
jne
mov
or
pop
jge
imul
xchg
cs
mov
and
push
push
imul
loop
jmp
stos
jmp
data16
mov
pushf
icebp
push
arpl
sbb
mov
cmp
movsb
sub
mov
push
rclb
negl
aad
loop
xor
aaa
xchg
inc
hlt
cmp
fiadds
les
lcall
jne
repnz
xor
fisttps
test
xchg
pop
jns
into
adc
add
fistl
clc
cmpl
xchg
data16
imul
aaa
sbb
sbb
lods
mov
repz
jp
fsubrs
add
js
push
sbb
inc
stc
iret
scas
stos
insb
int3
xsha1
cmpsb
int
sbbb
sarb
cmc
orb
sarb
xlat
pop
fbld
push
add
insb
arpl
mov
mov
cmp
frstor
bound
cmp
add
mov
push
fldcw
popf
rorb
add
lods
jbe
nop
imul
sbb
sbb
ret
mulb
stos
sbb
jl
lea
inc
loop
and
leave
adc
pop
fdivrl
xchg
rep
test
inc
sbb
or
out
mov
add
sahf
enter
and
and
mov
insb
push
jnp
enter
mov
push
rorl
fbstp
pop
test
pushf
jb
sub
pushf
fldl
xor
inc
lds
shrb
xor
leave
cmp
lret
push
xchg
aam
pushf
jae
in
rcll
sbb
out
jno
mov
imul
stos
mov
cmpsb
mov
jmp
xor
icebp
lds
cmp
xor
jnp
sbb
cwtl
jge
fnstenv
lods
ficoms
into
lcall
nop
insb
icebp
lahf
stos
push
aaa
sbb
dec
stc
arpl
popa
mov
popa
xchg
sbb
movhlps
mov
les
and
je
lods
push
mov
lock
movsl
sub
or
in
cltd
inc
imul
add
lcall
scas
imul
mov
in
mov
shl
nop
pushf
test
push
lcall
stos
cltd
and
mov
add
fdivr
sti
loop
adcl
int3
xor
adc
pop
jo
cmp
jg
cltd
mov
cmc
fidivrl
int3
pop
popa
mov
roll
sahf
stos
into
sub
lcall
les
clc
out
xchg
lods
lock
mov
imul
cmc
push
xchg
cltd
int3
adc
pop
cltd
sahf
mov
mov
call
sbb
in
subb
pop
sahf
add
test
jns
jecxz
jnp
and
adc
aad
mov
ret
lcall
addr16
aaa
and
fcmovnb
push
dec
ud1
xchg
cltd
lret
int
testb
xor
cs
and
in
dec
jns
push
rcll
pop
lcall
jle
cltd
imul
pop
mov
test
dec
fldenv
cltd
cmpsb
dec
push
je
dec
test
cltd
rorl
add
insb
sub
aad
xchg
enter
mov
dec
sbb
rcrl
scas
push
jne
into
jp
inc
out
jl
xchg
xor
loope
cltd
cmp
lret
cltd
pushf
sub
pop
hlt
lahf
xor
retw
sbb
mov
jmp
div
lret
fistps
andb
fidivl
fisubrs
mov
fwait
in
ficoml
inc
xor
jmp
xor
xor
push
loope
xchg
cmc
pop
cwtl
sbb
inc
push
cltd
icebp
ds
and
pusha
cltd
jg
cli
in
pop
fucom
inc
fwait
sbb
dec
pop
lahf
lods
mov
mov
cltd
lock
jbe
popf
xchg
mov
sti
loope
sbb
fmulp
sbb
mov
fstpl
paddusb
and
cmp
fwait
mov
in
cli
loopne
arpl
and
ret
fldenv
push
cltd
loopne
sahf
inc
mov
cmp
leave
and
out
pop
pop
sbb
adc
idivb
cwtl
addr16
cltd
pop
mov
andl
ss
jle
scas
mov
add
lods
or
cltd
xchg
mov
mov
insb
adc
pop
cltd
lods
push
xor
pop
orb
cltd
pop
push
sti
pushw
jecxz
cmp
jge
fldcw
lds
repnz
sti
sbb
cmp
repz
or
icebp
cmpsl
cld
cmc
gs
cmp
lock
inc
pop
cmpsl
out
jae
data16
or
add
es
mov
push
imul
rcll
cltd
push
mov
push
and
dec
mov
dec
ljmp
es
xchg
sub
in
mov
or
xchg
and
adc
cltd
inc
addl
cmp
cltd
mov
scas
push
or
or
les
jno
push
mov
adc
into
pop
stos
dec
lcall
push
cltd
and
or
inc
lahf
std
mov
sub
cmp
outsl
xchg
lock
cli
mov
loop
sbb
in
push
pop
lahf
inc
lret
pop
outsb
dec
pop
into
mov
dec
sub
sub
jg
pop
mov
cltd
mov
in
out
fcoml
stos
pop
iret
stc
fs
cltd
xchg
xchg
push
addl
add
push
adc
inc
add
addr16
jge
mov
lcall
cltd
test
or
sbb
jnp
rcrl
iret
sbb
mov
lcall
cmp
out
push
fisubrl
mov
movsb
push
xchg
jne
aaa
lahf
nop
fimuls
lods
rclb
mov
dec
xchg
insb
and
adc
scas
cltd
daa
jne
push
xchg
es
stc
mov
mov
into
jae
sbb
gs
out
mov
cmp
pop
fsubl
push
in
pushl
cmpb
sub
fisttpl
mov
popa
push
xchg
cltd
mov
into
cmp
mov
cltd
ficoms
jnp
ret
cltd
inc
fadds
out
jmp
cltd
mov
test
lds
jecxz
rcrw
or
rcrl
and
mov
sub
fisttpll
andl
adc
xchg
or
mov
pop
test
ds
cltd
ret
adc
xchg
addr16
mov
xor
add
pcmpeqd
icebp
mov
aas
sbb
dec
jne
daa
cltd
sbb
std
adc
and
stos
shrb
aaa
xchg
stc
cltd
pop
mov
and
mov
add
cltd
pop
lcall
cltd
shrl
mov
add
in
mov
sarb
and
mov
out
sbb
cmp
lcall
addr16
add
leave
das
mov
mov
sbb
mov
inc
mov
lock
or
roll
add
cmp
mov
repz
mov
cltd
pop
lahf
test
stos
add
negb
push
scas
and
mov
dec
imul
or
lcall
cwtl
or
pmulhw
aaa
xchg
bound
int
repz
dec
xor
stc
xchg
inc
or
jne
xchg
ret
adc
repz
adc
pop
cmp
enter
lds
mov
sbb
ds
pop
jae
notl
cltd
loop
or
rorb
in
mov
xor
lcall
xor
leave
aas
aaa
into
cmpsl
adc
fs
mov
fadd
sub
jno
ds
gs
jmp
fstl
fidivl
or
dec
aam
fwait
mov
sub
inc
adc
jmp
ud0
xchg
cltd
add
pop
cmp
xchg
fucompp
cltd
xlat
js
mov
cltd
and
mov
mov
das
cmpsl
push
stc
mov
or
pop
adc
lds
cltd
add
ret
lcall
call
push
test
adc
push
push
jmp
ficomps
movsb
cmp
out
outsl
and
leave
sahf
mov
aas
ljmp
daa
mov
xor
push
ss
or
cli
cmpsl
cltd
dec
test
mov
adc
cltd
dec
outsl
fisubl
jp
cltd
pop
pop
mov
mov
scas
jecxz
dec
add
shlb
mov
ja
xchg
test
adc
dec
movsl
dec
cltd
push
jle
out
rclb
mov
and
cltd
adc
sub
push
fdivr
mov
cs
ljmp
dec
data16
rcrb
or
and
test
cmpsl
mov
cmp
inc
lahf
push
aaa
ja
sahf
loopne
stc
push
roll
out
test
cltd
sub
test
mov
xchg
lcall
xor
adc
fmull
jecxz
loope
cltd
fwait
push
cmp
mov
xlat
pop
ficompl
sbb
sub
cltd
dec
jnp
push
data16
mov
jae
std
pop
int
pushf
mov
inc
sbb
or
add
cltd
dec
pop
jmp
xor
popf
insl
adc
dec
repz
cmpb
sbb
jle
xchg
xor
rcrl
cltd
hlt
bound
pop
fdivrp
out
mov
rcrl
adc
dec
xchg
xor
mov
lcall
adc
xchg
sub
inc
fwait
push
dec
cmp
sub
pop
cltd
cmp
out
fnstsw
xor
adc
aam
dec
inc
jnp
mov
and
sbb
fldcw
cltd
add
xchg
lahf
rcll
push
fptan
imul
dec
adc
mov
popa
sub
lret
fwait
js
mov
gs
inc
mov
sbb
mov
or
mov
adc
fbld
dec
inc
insb
pop
or
jno
adc
cmp
lret
sub
lods
mov
cltd
repz
jno
cltd
sbb
xlat
mov
inc
mov
inc
pusha
sbb
mov
mov
xchg
subl
imul
lds
mov
insb
sbb
mov
incl
jno
sub
mov
jns
repz
iret
ljmp
mov
sub
mulb
adc
add
addl
xlat
negb
or
shl
dec
icebp
insb
out
mov
mov
mov
xor
stos
dec
test
ljmp
cmp
cmpsb
push
jle
imul
ret
cmp
pushf
and
pop
leave
mov
cmp
fldcw
push
jne
mov
aad
jmp
loop
pop
imul
pop
adc
push
inc
push
mov
pop
add
test
ljmp
push
loop
xchg
lods
std
int
aaa
lcall
cmpsb
insb
data16
hlt
xchg
leave
sbb
mov
pop
xorl
cmp
stos
sub
dec
xor
and
popf
je
stos
pop
xor
pop
inc
jbe
cltd
out
ljmp
mov
pop
cltd
inc
or
dec
mov
into
ficompl
cltd
pop
data16
incb
xor
imul
sbb
sub
mov
xor
sbb
fwait
shrb
sub
cmpsl
shll
out
cmp
jo
jg
inc
jns
fnsave
pop
cltd
nopl
cmp
jecxz
scas
and
out
pop
adc
dec
dec
daa
and
sbb
mov
popa
sub
inc
and
in
cltd
loope
push
xlat
mov
sbb
int
mov
jbe
lods
or
dec
and
fistpl
adc
lahf
scas
push
imul
rcl
mov
push
fsub
cmp
incl
adc
cmp
loop
cltd
mov
inc
mov
mov
cltd
jmpw
pop
das
adc
pop
sbb
mov
pop
pusha
add
insl
push
jmp
lret
mov
jle
mov
dec
ret
add
js
pop
daa
xor
inc
cltd
lea
push
push
mov
movsb
in
ret
repz
pop
insb
cltd
inc
lods
and
cmp
jge
sbbl
cltd
jg
mov
int3
cltd
xchg
lock
pop
dec
xchg
adc
inc
repnz
cltd
sbb
cmpsl
lahf
push
mov
loopne
fsubl
sub
cltd
dec
popf
jae
or
mov
pop
enter
xchg
dec
fwait
push
xchg
in
jno
lcall
sbb
nop
std
pop
jnp
stc
pop
pop
inc
mov
inc
mov
pop
jp
xchg
lods
jb
pusha
je
add
inc
scas
mov
pop
cmc
cmpsl
loop
adc
fdivrs
mov
dec
cld
stc
mov
pop
shll
sub
testl
cltd
loope
jl
cmpsl
mov
or
sahf
icebp
lcall
fcomps
push
xor
sub
js
clc
out
xor
sbb
jns
imul
fwait
loope
lods
jno
inc
rcrl
imul
xchg
push
rcl
adc
cs
xor
jbe
test
dec
in
ret
cltd
data16
inc
cltd
push
xor
mov
lods
cltd
fcoms
jp
cltd
lret
pop
cmpsb
imul
fucomi
cltd
or
mov
push
aad
out
push
jl
mov
fwait
repnz
arpl
adc
cltd
js
pusha
push
sub
xchg
pushf
cltd
fcoml
add
inc
mov
inc
and
jg
xchg
sub
sub
adc
pop
sbb
je
jnp
cltd
int3
pop
jae
xor
dec
sub
inc
dec
dec
jge
mov
scas
int3
and
mov
cltd
cmp
adc
push
mov
cltd
out
sub
jae
es
adc
outsl
cltd
insl
dec
pushf
jb
sub
fwait
aaa
mov
stc
jg
sbb
mov
sbb
dec
cwtl
mov
cltd
mov
addr16
loope
cmp
push
jb
adc
mov
and
in
clc
call
movsl
inc
xor
call
mov
cltd
push
cmp
fstpl
ja
cltd
pop
mov
std
push
cmpsl
shrb
add
push
fnsave
cltd
push
push
jecxz
test
imul
adc
fstl
mov
dec
sbb
into
in
mov
push
inc
push
cltd
push
fcompl
mov
push
imul
aas
cltd
fiadds
xchg
mov
sub
je
add
cltd
lcallw
dec
xchg
cltd
es
mov
mov
sbb
mov
mov
and
mov
and
lods
adc
mov
ds
cwtl
test
xchg
std
cltd
push
fadd
xorb
bound
mov
push
pop
insb
or
out
push
rcrl
and
idiv
mov
mov
popf
inc
sbb
add
cmp
inc
push
scas
popf
out
push
in
cs
push
jge,pt
cltd
xor
out
ss
mov
sbb
sbb
cmp
test
mov
iret
sarb
push
xchg
sbb
xor
les
pop
push
iret
cmp
shl
fwait
sub
pop
popa
xlat
jb
xchg
mov
lahf
sarb
testb
cs
ljmp
mov
and
jg
cmpsb
cltd
fists
mov
rcrb
lcall
add
xchg
cltd
outsl
jbe
or
lahf
and
dec
xor
cs
xor
pop
cltd
sub
adc
fwait
inc
iret
mov
fsubrs
idivb
adc
nop
pop
loopne
xchg
push
mov
loop
ja
push
out
lea
stos
add
shr
push
sbb
jecxz
orb
cwtl
adc
aad
mov
sbb
fldt
fcompl
mov
pop
mov
sub
xchg
lcall
sub
sub
xor
mov
cltd
movsb
add
sahf
or
ljmp
xchg
pop
stos
xchg
aam
hlt
xor
lcall
rclb
sbb
sbb
ja
outsb
iret
jns
ss
xor
lcall
into
cltd
dec
test
sbb
mov
gs
cmc
rcrb
inc
cltd
scas
mov
mov
fwait
adc
add
pusha
cmpsl
sbb
sub
lcall
or
sub
add
cltd
mov
nop
push
test
mov
sub
clc
ret
fwait
movq
cmp
mov
lcall
negb
test
mov
add
sarb
sbbl
add
rolb
mov
aaa
lods
push
test
repnz
xchg
lock
mov
pop
je
cld
mov
outsb
pop
js
cmp
xchg
mov
sbb
sub
shl
and
jge
int3
xchg
test
jnp
mov
cltd
push
clc
xor
adc
imul
inc
jns
sbb
bound
cltd
fsubr
dec
push
xchg
or
push
push
inc
shl
xchg
lcall
jg
roll
push
sub
mov
js
mov
cltd
jp
sub
mov
leave
cmpsl
popf
inc
jne
inc
daa
jb
arpl
std
jle
jmp
jo
cltd
aaa
dec
and
push
adcb
jp
repz
loop
pop
sub
cmpl
fcomps
adc
or
mov
sbb
mov
sbb
push
pop
dec
xlat
lahf
mov
shl
test
fsubrs
scas
repz
stc
jns
fisubs
sub
fwait
in
inc
xchg
xor
jb
mov
mov
fcmovbe
cltd
adc
cmc
inc
mov
jns
and
popa
bound
xor
cmpsl
dec
xor
xchg
jae
sub
dec
mov
mov
lods
and
mov
sbb
xchg
test
pop
cltd
bound
jg
lods
push
in
scas
dec
lock
call
shlb
sbbl
fcompl
add
test
adc
push
sub
pop
retw
setns
dec
es
dec
test
cltd
loope
cmp
inc
test
cltd
insb
dec
lret
loope
or
jae
aam
xchg
xchg
pop
cmp
pop
cmp
lea
mov
add
scas
cltd
mov
fdivs
outsl
adc
pop
mov
pop
outsb
mov
aad
arpl
cltd
lret
bound
adc
cmp
sbb
adc
scas
jmp
xchg
aad
loop
test
add
ss
mul
pop
fnstenv
jb
mov
nop
pop
les
fwait
insb
imul
xchg
xchg
rclb
mov
add
aad
xchg
lods
sub
cmp
adc
push
ficompl
daa
sbb
aaa
inc
rcrb
mov
scas
mov
fnstsw
rorb
jo
pop
stos
test
sub
mov
mov
jle
jmp
dec
xor
imul
push
cmp
dec
mov
push
scas
mov
xchg
dec
aam
xchg
push
xlat
je
inc
jo
xchg
jmp
and
mov
es
sub
shl
fwait
cmp
mov
out
enter
and
int
mov
aam
mov
das
pusha
sub
inc
push
dec
das
movsl
mov
jecxz
test
adc
mov
cmp
repz
mov
mov
rcrl
mov
pop
iret
cmp
movups
mov
mov
insb
or
lcall
sahf
repz
adc
daa
dec
aaa
sub
fdiv
xchg
hlt
jb
mov
dec
cmpsb
lds
stos
clc
mov
mov
aas
out
jg
loopne
stos
imul
pop
mov
mov
mov
into
dec
jne
rorl
stos
out
push
xor
fwait
dec
push
inc
insb
fwait
cli
in
cmp
inc
mov
mov
mov
add
sbb
sub
jno
aaa
lcall
mov
shrl
test
shrb
sub
push
sbb
sub
and
adc
imul
push
inc
push
sub
sbb
fstps
out
stos
lcall
hlt
or
xchg
out
scas
stos
test
test
dec
xchg
lea
push
mov
push
lcall
loope
insl
cltd
sbb
gs
stc
aaa
mov
ljmp
or
aaa
jge
and
pushf
pushf
js
cld
add
xor
jnp
xchg
imul
mov
adc
loope
push
mov
sbb
xchg
addr16
mov
inc
add
sub
cmp
bnd
jmp
inc
sbb
adc
sbb
jnp
arpl
push
icebp
ljmp
rorl
mov
pushf
cmp
fisubs
sub
jl
push
adc
cmp
cmpsb
inc
jmp
lcall
stos
dec
or
sub
jmp
mov
jecxz
pop
insb
ja,pt
mov
pop
notb
cli
or
dec
add
add
mov
jl
addr16
gs
test
mov
xor
out
cmp
imul
test
and
popf
push
fyl2xp1
ret
xchg
adc
pop
sbb
stos
mov
jg
push
pop
and
mov
or
cmp
inc
notb
je
dec
cltd
adc
pusha
sti
pop
imul
mov
sbb
push
mov
insb
rorb
sub
jmp
and
in
jbe
push
xor
popa
sbb
inc
mov
cmp
imul
in
sub
dec
jp
mov
scas
fiaddl
and
push
loop
inc
xor
cmp
dec
or
enter
cmp
test
filds
insb
ret
js
repz
sub
mov
lds
mov
js
mov
test
imul
into
int
and
or
loopne
add
fst
mov
mov
mov
loope
or
mov
mov
lods
fsubl
mov
leave
pop
test
daa
out
mov
out
mov
pop
out
mov
ret
leave
cmp
jecxz
jb
jmp
out
xchg
in
std
inc
xor
cmp
insb
xchg
gs
mov
pop
cmc
stos
testb
mov
pop
xchg
leave
mov
cmp
inc
or
cltd
mov
inc
dec
std
mov
push
cmpsl
cmc
lcall
cltd
fwait
and
xchg
arpl
sub
xlat
dec
push
or
aad
mov
aas
xchg
cltd
rcrb
clc
test
lret
cs
jecxz
ljmp
cltd
mov
cltd
iret
cmpl
push
jl
sbb
mov
mov
mov
inc
bound
xchg
mov
lahf
ljmp
inc
popf
xchg
jb
pushf
mov
xchg
cmpsl
pop
cmp
pop
arpl
nop
test
add
mov
ss
cltd
mov
addb
or
in
loop
cltd
add
jl
cltd
lret
xchg
out
icebp
jecxz
push
or
outsb
push
mov
pop
cltd
je
sub
sub
dec
cmp
push
jno
cltd
dec
jle
aaa
sbb
mov
adc
aam
cs
cltd
inc
xor
mov
xor
pop
cltd
jns
test
cltd
cmp
pop
ret
data16
inc
mov
sub
lcall
lret
xchg
lods
inc
push
cltd
and
xor
fwait
and
stos
mov
jge
sub
or
test
aaa
fldl
sti
xor
mov
cmp
out
add
add
popl
jge
sarb
xor
cltd
pop
repnz
ja
cld
xor
inc
push
aaa
mov
pop
fwait
xor
adc
sbb
in
cltd
ret
mov
shrb
mov
jecxz
inc
test
imul
mov
shll
push
cmc
mov
adc
push
imul
cmc
sbb
adc
or
enter
das
sbb
push
xchg
cltd
int
or
lret
and
and
xor
sbb
mov
xchg
scas
cmp
loope
aam
lcall
cltd
push
inc
dec
mov
mov
aam
jmp
add
pop
and
jnp
or
fsts
scas
mov
jbe
test
cwtl
jne
cltd
inc
leave
and
cmp
popa
fwait
sbb
pop
fs
stc
jle
cmpsl
adc
fisubrl
xor
and
in
jae
popf
mov
jmp
jb
loop
sbb
incl
dec
dec
sbb
loopne
jge
mov
gs
das
xlat
cltd
lods
sbb
enter
test
std
rclb
rcrl
jl
sbb
cltd
pop
inc
push
xor
jno
add
sub
dec
or
cmp
test
movl
push
pushf
or
cltd
sarl
xlat
xorl
fs
adc
mov
rorl
sbb
xlat
cmp
jnp
cmp
scas
inc
jb
or
icebp
or
mov
ret
adc
adc
jmp
pop
add
xchg
jmp
inc
hlt
cltd
sbb
and
mov
sbb
lcall
mov
pop
aam
stos
inc
sbb
mov
movsb
cltd
mov
or
inc
add
cltd
and
idivb
or
popf
cltd
stos
loope
loop
test
out
fldl
dec
pusha
adc
sbb
fsubl
lods
jge
cltd
popa
aad
fistl
sub
cltd
xchg
cmp
sbb
or
ljmp
mov
xchg
cltd
adc
mov
lods
adc
push
dec
push
cltd
cli
pop
dec
iret
cmc
loope
sub
mov
cmp
push
sbb
xor
nop
andb
push
iret
and
add
sbb
clc
rcr
pop
push
lcall
cltd
jmp
addr16
es
cltd
leave
or
aaa
jo
les
pop
xor
outsl
popa
aad
ds
lcall
scas
aad
nop
sub
std
repz
ljmp
mov
cltd
lret
insb
mov
push
cltd
ljmp
scas
scas
push
lds
mov
fst
jmp
in
xor
sub
jmp
add
sub
icebp
pop
repz
fstpt
lahf
sbb
add
add
orb
sti
cltd
and
mov
pop
xor
bound
rcrb
loop
stos
stc
lret
fwait
xchg
xor
sub
cmc
cltd
mov
add
sub
fs
dec
je
xchg
xor
xor
test
sti
lcall
imul
mov
jbe
sbb
cltd
xor
adc
ret
push
adc
popa
add
aaa
jge
out
and
push
std
or
mov
xchg
jns
cltd
xor
hlt
test
cltd
mov
scas
punpckhwd
push
dec
or
cltd
das
int
fidivl
xlat
lods
mov
lcall
cltd
adc
fisubs
mov
dec
in
pop
lret
sub
sbb
or
inc
roll
data16
enter
lret
lcall
aad
pop
sbb
xor
mov
cltd
fldt
push
sarb
out
test
sbb
adc
cmpsl
cmp
rcrl
fistps
mov
push
xor
fsubrl
scas
stos
mov
jp
push
in
bound
sarl
fidivs
fisubl
cltd
mov
ret
cs
lret
inc
push
push
cltd
pop
daa
fbld
mov
pop
sahf
out
push
aas
cltd
jno
mov
cmp
mov
cltd
std
mov
into
jne
xor
sbb
mov
in
rcrb
pop
sub
mov
push
das
xor
jecxz
sbb
mov
push
addr16
xchg
ds
sbb
popf
lcall
cmp
insb
xlat
cmpsb
jge
addb
dec
leave
fmuls
movsl
xchg
mov
hlt
sarb
lods
imul
add
push
aas
clc
or
push
ss
and
iret
gs
insb
stc
shlb
push
dec
mov
jne
pusha
mov
bound
cltd
mov
lea
adc
sbb
add
inc
rclb
mov
bound
scas
js
pop
lea
cmpsl
mov
fistps
out
cltd
mov
add
dec
cltd
mov
adc
lret
xchg
sbb
jbe
sub
mov
or
leave
push
outsl
push
pop
cmp
sbbb
imul
mov
ret
fisubrs
inc
mov
addl
mov
cmpsb
inc
cltd
push
xchg
mov
iret
inc
and
pop
mov
lcall
sbb
inc
add
ds
shr
cld
outsb
push
jbe
cltd
mov
subb
dec
cmc
clc
sbb
mov
xchg
push
cltd
pop
mov
aas
mov
or
mov
mov
dec
cltd
xor
jecxz
mov
mov
inc
sbb
movsb
jns
bound
ja
insb
sbb
lret
mov
pop
pop
push
shll
addr16
out
outsl
imul
push
jbe
pusha
push
jle
cltd
inc
xor
sbb
out
add
cltd
inc
loop
stc
test
pop
orb
cmp
lahf
pop
cltd
out
icebp
xor
cltd
jae
movsb
in
add
addr16
shrb
mov
js
js
dec
and
mov
and
and
xor
cmp
mov
sbb
xlat
mov
cmpsl
cltd
nop
lds
pop
lds
aaa
fdivrs
insb
gs
sbb
stos
out
pop
test
imul
inc
mov
mov
lahf
ljmp
push
fs
xchg
sub
push
and
outsb
xchg
pop
lock
add
jmp
mov
lret
cmp
pop
sbb
inc
insb
mov
cmc
pop
imul
push
insb
shrl
xlat
subb
js
push
shl
and
pushf
mov
movsb
push
imul
leave
push
mov
sti
outsl
push
scas
push
loope
aad
jp
lret
les
dec
mov
sub
aad
inc
cltd
loop
jecxz
add
push
fcompl
adc
push
mov
mov
test
pop
push
lahf
in
lcall
xchg
xchg
je
xor
dec
and
mov
inc
dec
test
es
mov
jne
fs
shll
aaa
dec
sub
mov
mov
rcl
cs
test
fdivs
aas
push
push
dec
pop
ljmp
push
in
cmp
sti
dec
lret
mov
mul
call
outsb
cmc
shrb
jnp
rolb
sub
or
je
bnd
lcall
mov
stos
pushf
jl
pop
loop
sub
adc
mov
cmp
cltd
xor
divb
cltd
dec
fcmovnb
and
xchg
lods
cltd
ret
subb
popf
out
pop
adc
and
daa
lcall
jae
dec
cmp
pop
insb
cwtl
pop
fdivl
scas
pusha
jp
pop
iret
or
loope
lock
mov
loop
sbb
icebp
cltd
ljmp
das
xchg
push
add
daa
cmp
cmc
repz
out
sub
cltd
imul
xchg
fsubrs
and
mov
cltd
aad
cltd
mov
iret
movsb
hlt
insl
add
ucomiss
mov
mov
aaa
pop
pop
rol
cld
out
or
mov
xchg
dec
lahf
movsb
stos
mov
inc
sbb
fcoms
dec
sub
icebp
adc
repnz
sub
xlat
xor
cltd
cmp
mov
fs
cltd
jae
into
xor
rcrl
adc
sbbb
sbb
xor
xor
cltd
dec
dec
pop
lods
jle
push
cltd
fwait
and
jp
fisubrs
cmp
imul
xor
mov
es
lea
inc
pop
jecxz
cltd
dec
ret
xor
in
add
pop
jle
mov
rcrl
mov
stos
les
shlb
add
scas
push
inc
jns
dec
xor
fstpl
fistpl
mov
fs
jo
add
mov
or
jp
xchg
and
enter
sbb
or
rcll
icebp
xchg
lret
inc
outsw
cltd
dec
movsl
jg
lret
gs
xlat
hlt
adc
jo
aam
imul
enter
lea
adc
shlb
cltd
xor
xor
add
pop
test
jle
jns
pop
cmp
push
sbb
cltd
fnsave
adc
cmp
sbb
mov
sahf
jmp
ss
fsubl
pop
inc
es
and
cmp
cmp
jae
cltd
in
xchg
bound
inc
or
pop
sub
push
fdivrl
fwait
imul
sti
stc
fwait
push
cmpsb
lea
roll
and
ja
incl
adc
std
mov
sbb
pusha
sbb
inc
lods
cltd
shll
test
cltd
outsb
mov
sbb
jp
cltd
xchg
xor
xor
sub
scas
cltd
enter
xchg
cltd
mov
je
pop
inc
or
inc
test
into
lods
push
inc
cltd
mov
adc
cltd
das
in
fcomps
add
dec
cmp
jo
or
decl
adc
ret
mov
imul
mov
fstpt
sbb
mov
cltd
jns
add
test
push
mov
mov
sub
ja
push
xor
pop
sub
push
scas
dec
mov
fwait
or
setns
jno
movsb
xor
mov
pop
pop
test
aad
and
cld
push
sbb
andb
cltd
aas
rclb
out
add
pop
loop
dec
cltd
stc
jo
fidivrl
jp
lahf
dec
adc
push
jle
into
ret
mov
popf
sbb
cli
xor
fidivrl
sub
leave
cltd
out
mov
inc
or
std
xchg
mov
cmpsl
cwtl
push
add
push
das
test
enter
cmp
sarb
and
je
push
mov
in
push
fwait
lea
mov
dec
mov
cmp
pop
cltd
xchg
mov
cltd
push
mov
movsl
pop
test
and
jecxz
aad
cltd
or
fcompl
inc
push
cltd
push
push
and
cltd
orb
fsts
xchg
ljmp
cmp
out
pop
mov
inc
push
push
test
cmp
push
xor
adc
out
aad
push
sbb
es
les
xor
cmp
cltd
scas
and
dec
int
in
push
sbb
pop
pop
fsubrl
clc
cltd
lea
inc
cwtd
or
mov
mov
mov
cltd
pop
sub
or
fdiv
iret
cmp
test
cltd
lods
push
lret
out
jp
pusha
call
add
adc
pop
add
pop
cmp
cltd
out
dec
aam
xchg
mov
mov
int3
repnz
jbe
sarb
xor
cltd
adc
xchg
jecxz
cmpsl
adcb
add
sti
inc
and
lahf
aas
outsl
xor
mov
in
fwait
lea
in
xor
push
mov
push
dec
fstpl
sub
jg
xor
stos
inc
xor
push
fistps
sbb
stc
pusha
lret
or
or
cld
aad
cmpsb
sub
add
cltd
loopne
lods
xor
sbb
pop
movsb
cltd
pop
pushf
cmp
popf
daa
scas
dec
mov
push
cmpsl
and
push
out
ficompl
xchg
sahf
pop
sbb
repz
adc
bound
cli
ja
xchg
imul
mov
aam
push
out
or
jnp
dec
mov
xlat
inc
push
jbe
cld
cmp
repnz
gs
fucomi
mov
cmp
insl
faddp
inc
mov
mov
js
sbb
pop
jbe
lea
mov
sbb
pop
fdivrs
adc
lods
add
jbe
push
out
loope
mov
js
stos
inc
mov
cltd
test
mov
cltd
inc
rcrb
or
fwait
push
stc
mov
xor
cwtd
test
xchg
pop
loop
or
pop
mov
stc
arpl
jne
xor
inc
pusha
sbb
call
ds
xor
psubsw
lcall
jmp
jecxz
jle
fxtract
dec
add
adc
mov
das
es
mov
fldenv
test
or
cltd
bnd
out
sub
cs
cmpsl
push
lret
inc
sub
sub
adc
sbb
fwait
mov
int
dec
pop
pushf
cltd
sbb
dec
lret
lahf
repnz
scas
xchg
aad
pop
dec
popa
jp
ret
ss
loop
sub
and
xor
fistpl
cltd
negb
mov
stos
and
or
repnz
cmpsl
rorb
push
cltd
sub
ret
daa
xchg
mov
inc
mov
push
sub
and
sub
sbb
imul
and
xchg
in
and
xor
cmp
pop
pop
dec
jbe
movsb
data16
shll
mov
fwait
imulb
sbb
movsl
pop
mov
cltd
aad
jg
sub
cltd
xchg
daa
mov
rcrb
pop
movsb
imul
cltd
mov
cwtl
insb
mov
mov
clc
cltd
jnp
fs
xlat
sar
xor
cltd
scas
imul
int
into
push
xchg
jle
rcrl
pusha
in
cltd
cmpb
call
iret
fucomi
cmp
clc
loopne
fyl2xp1
pop
jge
cld
faddl
mov
mov
adc
les
lahf
das
aad
xlat
add
lock
pop
cltd
mov
mov
xchg
cltd
fistps
test
lahf
push
pop
arpl
filds
iret
loop
push
movsb
mov
aad
pop
jns
xchg
mov
cmp
push
cmpsl
inc
addr16
jp
out
mov
je
aam
push
nop
cltd
fdivs
sub
cltd
mov
sbb
cmpsl
jle
jg
sbb
mov
xchg
xlat
out
jne
inc
lods
adc
pop
xor
test
dec
lret
dec
popa
xor
cltd
int
addr16
mov
arpl
xlat
lcall
popf
pop
sbb
loopne
js
fwait
mov
xor
lods
jp
adc
cmp
ss
aaa
xchg
xchg
cltd
imul
pop
cltd
dec
mov
or
into
or
addl
mov
mov
adc
aas
je
pop
pushf
sub
sbb
sbb
adc
pop
mov
adc
sbb
outsb
lret
test
and
pop
pusha
cltd
and
or
test
pop
xor
scas
loopne
icebp
jns
test
ret
inc
sub
pop
movsl
or
cltd
scas
repz
xor
push
cltd
popf
push
sub
stos
stc
xor
fwait
sbb
xor
pop
fs
xchg
sub
fldenv
xrelease
xchg
or
mov
test
icebp
in
lahf
mov
pusha
add
sbb
pop
cmp
jns
popa
jb
sub
lret
xchg
pushf
sbb
cmpsl
mov
scas
es
in
sbb
xchg
ljmp
add
aad
inc
inc
in
pop
mov
xchg
push
ret
shrb
cltd
aam
lcall
ljmp
fisubl
cltd
cmovg
dec
xor
lds
xchg
push
cmp
gs
and
and
fwait
inc
pop
push
push
push
loope
jns
jmp
fstps
das
sub
cltd
xor
xchg
mov
mov
adc
nop
or
sbb
jns
mov
cltd
sbb
aad
neg
cltd
pop
enter
xchg
hlt
loopne
fwait
cmp
sahf
jnp
xor
daa
fists
push
popf
out
or
ret
cltd
aad
mov
arpl
insl
mov
aas
push
xor
stos
jae
movsl
sbbb
cltd
cli
jbe
ja
mov
es
sbb
shlb
lcall
cltd
lahf
cwtl
int3
iret
ss
shlb
cltd
mov
insl
jb
fwait
jl
jp
or
pop
stc
xchg
cmpsb
cs
adc
mov
test
nop
jbe
cltd
and
mov
cltd
push
adc
inc
cltd
call
addl
lock
adc
out
lahf
mov
cltd
mov
cmpb
fwait
out
mov
jp
mov
jp
aam
mov
xchg
sub
dec
sub
jo
daa
pop
cltd
sub
mov
add
movsl
cmp
jns
and
fsubrl
cmp
push
mov
push
dec
cltd
mov
data16
fistps
cltd
aad
sub
pop
adc
js
pop
insl
sahf
mov
mov
fldenv
jge
inc
fwait
test
pop
inc
enter
popfw
in
jo
jmp
es
repnz
cmp
inc
stc
add
rcll
dec
dec
outsb
xor
xlat
fnstsw
mov
insl
bound
hlt
rclb
dec
and
cmpsl
mov
jle
mov
int3
inc
icebp
dec
insl
jp
clc
mov
inc
test
cmp
shll
sub
sbb
cltd
jno
lcall
andl
popf
pop
mov
dec
test
push
ljmp
loop
cltd
inc
and
enter
push
mov
add
dec
inc
push
mov
cmp
int3
jle
mov
lret
mov
xchg
sbb
and
fbstp
sbb
repnz
adc
mov
cltd
jno
add
adc
mov
cltd
lret
push
jb
lcall
repz
lahf
jo
pop
adc
pop
cli
xchg
jae
mov
xchg
imulb
cltd
addb
xor
fstps
mov
xor
popf
mov
lods
lret
cltd
xor
mov
or
pop
xchg
jae
mov
cmpsb
jb
fsubl
cltd
jbe
push
cmp
fwait
xchg
xorl
movsb
shll
jae
hlt
daa
std
cltd
jp
or
test
sbb
rcll
shlb
mov
outsb
mov
ss
cltd
sbb
in
dec
stos
insl
or
int
adc
sbb
pop
pop
cmp
mov
lcall
shlb
ficomps
push
pop
mov
mov
aad
aam
push
pop
loop
xchg
stos
sti
cld
cltd
fistl
ficomps
mov
cmp
mov
lods
cltd
dec
cmp
out
xchg
aad
aam
cltd
adc
add
jmp
clc
cltd
push
sbb
xchg
daa
aaa
arpl
mov
jb
lret
lret
or
cltd
mov
ja
fistpl
sbb
adc
and
pop
sbb
cld
cmp
lock
cmpsl
lahf
or
mov
ljmp
and
lcall
pop
mov
pop
imul
adc
sub
inc
pusha
inc
lret
pop
mov
jns
cltd
and
inc
mov
int
jl
dec
add
cltd
pop
pop
add
cltd
and
sbb
xor
je
cmpl
lock
mov
jmp
xchg
sub
mov
add
cmp
mov
stc
repz
or
sarl
clc
inc
xor
jecxz
dec
sub
int3
cmp
mov
repnz
mov
xor
add
gs
test
ljmp
test
jno
stos
adc
std
sub
pop
imul
adc
push
gs
lods
or
sar
test
mov
mov
insb
push
repz
jnp
leave
sarb
sbb
mov
or
push
sub
insb
aam
aas
add
inc
push
or
mov
sbb
sbb
mov
std
push
repz
add
lret
test
enter
push
subl
hlt
mov
cmp
sahf
add
in
in
sbb
push
dec
out
sub
push
lret
push
stos
or
fimull
stos
mov
mov
sub
imul
inc
lahf
das
inc
mov
mov
scas
and
pop
fwait
add
out
jns
rcr
mov
in
mov
mov
adc
in
pushf
add
cltd
int3
push
xchg
out
pop
aas
mull
inc
int3
shll
mov
push
xchg
aaa
dec
out
sarb
stos
and
fldl
lock
sarb
loope
out
pop
fwait
insb
neg
repz
outsb
mov
cli
pop
scas
cmpsb
paddsw
incb
xor
cmpsl
shll
xchg
jge
add
fimuls
aad
jecxz
stos
mov
leave
pop
ficoml
std
movsl
fistl
jp
loope
ljmp
cmp
shlb
int3
mov
rcrb
push
aas
push
mov
cmp
cmp
cld
push
or
adc
aaa
push
stos
movsb
sbb
scas
aas
xchg
adc
ret
pop
lret
sub
movsb
insb
lock
mov
mov
xchg
sti
imul
fisubrl
push
mov
aam
stos
pop
test
mov
mov
mov
inc
mov
mov
mov
inc
push
popf
fs
je
outsl
call
xchg
and
stc
jns
pop
mov
fcoml
out
arpl
aad
aaa
lods
xor
mov
mov
in
sub
mov
shr
test
sub
nop
mov
call
out
sti
test
jecxz
xchg
rolb
daa
push
fsts
andb
test
mov
push
xor
xchg
leave
mov
pop
and
adc
and
repz
lea
or
pop
rorb
test
jo
inc
mov
mov
shl
adc
sbb
loopne
sbb
cs
jecxz
mov
inc
add
stc
test
ret
stos
or
mov
stos
sub
push
test
daa
leave
inc
mov
sub
sub
pop
push
imul
popa
stos
cmp
jg
aas
mov
add
cmp
xor
sbb
inc
jnp
adc
paddusw
sbb
push
jp
aaa
and
lret
icebp
xor
pop
mov
sub
or
loope
in
insb
pop
sbb
repz
into
cmp
insb
add
fdivl
pop
pop
pop
sub
iret
stos
aam
cli
cmp
cmpsb
popf
add
test
push
sarb
out
jno
test
insb
stc
lahf
popf
add
add
mov
inc
mov
inc
sub
inc
mov
inc
icebp
inc
sub
out
pop
sub
push
pop
inc
mov
xchg
cmpsl
xchg
hlt
outsl
push
in
pop
subl
jmp
mov
pop
mov
mov
pop
jle
cmp
mov
sarb
mov
sbb
pop
sbb
cmp
and
and
push
or
and
insb
mov
test
jno
mov
xchg
xor
sbb
fisttpll
outsl
sti
ret
mov
cltd
sub
sub
push
push
int3
int3
mov
or
sahf
mov
xor
fwait
mov
jp
bound
stos
add
fidivs
fldt
setbe
les
inc
cwtl
fidivrs
xor
lret
std
repnz
push
mov
add
repz
movsl
inc
xor
bsr
or
mov
ret
lods
test
out
gs
cmp
dec
fldl
jmp
dec
mov
push
push
inc
sub
push
mov
pop
lods
mov
stc
or
inc
sahf
or
aas
mov
add
cmp
lods
push
imul
dec
sti
dec
mov
cmp
imul
into
lock
and
push
cmp
ret
xchg
sbb
push
dec
int3
cltd
jmp
rcll
mov
sub
imulb
pop
test
cmp
cld
and
scas
mov
aam
sub
mov
xchg
insb
cwtl
lods
push
scas
out
xchg
shr
fisttpl
pop
xor
xchg
push
mov
sti
clc
push
mov
xchg
xor
push
sbb
inc
push
lret
inc
cld
lcall
sub
inc
bound
mov
fcompl
inc
in
pop
sbb
int3
and
xchg
pop
push
and
scas
test
lret
daa
lods
sbb
jge
lret
adc
in
and
push
adc
sub
xchg
adc
dec
cmc
and
loop
jmp
mov
mov
xor
pop
sbb
js
scas
lods
cwtl
sbb
push
cld
sti
mov
fcomip
mov
sbbl
mov
les
aas
xor
jp
test
sbb
lods
ds
sub
jl
add
das
shlb
cmp
cmp
cmpsl
and
test
add
mov
loope
push
pop
mov
pushf
cmp
in
and
les
andl
insb
dec
and
stos
sub
rorb
cmp
xor
pushf
aam
mov
jle
mov
scas
pop
inc
inc
lret
adc
scas
inc
pop
mov
jmp
stos
das
cmp
mov
jecxz
outsb
sub
gs
jno
dec
sub
mov
mov
out
rcrb
insb
push
add
cs
pop
enter
or
pop
stos
push
ficoms
adc
push
scas
sbb
arpl
aam
scas
mov
dec
mov
pop
aaa
pop
outsb
out
cmpsl
in
popf
inc
xor
mov
push
pop
mov
in
sbb
add
mov
adc
dec
pop
fnstenv
addr16
nop
mov
insl
bound
hlt
dec
cltd
push
push
pop
add
and
aad
pop
testb
or
in
xchg
cltd
mov
jp
fwait
push
jb
loop
cld
add
mov
cltd
push
jle
in
or
cltd
or
insl
hlt
shrl
lods
in
jg
es
rcrl
dec
mov
jge
ret
or
pop
cltd
enter
pop
std
repz
ret
inc
cmpsb
mov
mov
sbb
mov
test
fwait
xchg
cmp
jl
enter
jmp
push
jp
cli
xchg
lsl
or
fwait
int3
in
add
loop
xchg
jnp
cltd
dec
and
cmp
lock
pop
cmp
fnstsw
adcl
mov
or
cltd
lcall
addr16
pop
cltd
inc
pop
add
nop
jl
and
add
mov
dec
test
lcall
or
nop
adc
lcall
cltd
mov
fldcw
pop
inc
adc
push
pop
out
xor
pusha
test
loope
shll
and
mov
lods
ret
add
mov
es
inc
cmpsb
cltd
movsl
or
pop
dec
jg
jno
xchg
cltd
jnp
add
jge
call
mov
das
cltd
outsl
pop
sahf
mov
cltd
jo
call
jg
adc
cld
cmp
cltd
rcrl
insb
daa
fstp
fs
cltd
aas
push
adc
repnz
lock
mov
mov
xlat
cmp
cmp
add
stc
fsts
lcall
inc
inc
xor
ret
pop
pusha
sbb
int
repnz
lcall
jle
js
icebp
dec
mov
cmp
fiadds
ret
shlb
jne
adc
daa
pusha
cmpsl
pop
pop
cld
push
mov
mov
fwait
movsl
pop
inc
scas
test
pop
stos
lahf
shl
shll
pop
stos
cltd
dec
push
in
or
mov
jge
sub
mov
xchg
or
ret
dec
jnp
xor
pop
xchg
pop
or
pop
fistpl
push
sbb
xor
lock
out
mov
cltd
and
jge
jns
in
xchg
cmp
mov
or
xor
jmp
cltd
cmp
mov
inc
inc
arpl
scas
push
fldl
out
addr16
xchg
cltd
in
sbb
dec
lret
repz
dec
out
mov
push
push
xchg
cltd
push
push
ret
sub
sbb
pop
mov
mov
scas
push
sub
and
cltd
rclb
and
push
nop
dec
mov
ret
lock
cmpsl
inc
or
xor
jl
loopne
fwait
or
cmp
push
sbb
push
cltd
push
es
jns
adc
xor
ss
inc
lock
sub
lods
shll
sbb
xor
aaa
cltd
adc
xor
ds
rcrl
push
inc
in
cltd
test
stos
test
cltd
sub
add
cltd
push
enter
repnz
es
ljmp
fisttpl
pop
aad
jl
iret
or
or
fdivrp
fdivrl
push
xchg
cltd
stc
pop
shrb
jo
fwait
rcrb
xchg
cmpsl
push
scas
fists
mov
cltd
inc
int3
popa
inc
mov
mov
lahf
sub
mov
in
pop
insb
xchg
mov
es
inc
mov
pop
mov
fwait
adc
adc
cltd
cld
cmp
je
lcall
pop
sahf
cmpb
out
push
data16
mov
jg
jne
cltd
in
stos
aas
out
xchg
out
lahf
mov
jp
cltd
dec
cmpsl
adc
dec
arpl
adc
jp
scas
adc
out
mov
pop
xchg
cmc
fistpl
lahf
cwtl
add
push
js
lret
cmp
fisubs
adc
mov
mov
mov
int
scas
lods
jp
cltd
jne
div
les
or
imul
stos
push
stos
addr16
add
cmp
dec
or
xlat
jbe
cmc
mov
or
mov
popf
lods
inc
outsb
pop
es
hlt
cmpsb
rcl
fdivr
sub
push
pushf
cmc
std
dec
add
adc
mov
stc
cmp
push
and
sbb
mov
lretw
pop
iret
loope
push
and
fcoms
xor
mov
sbb
jb
cltd
mov
cmpsl
fnstcw
stos
cwtl
pop
xchg
daa
adc
mov
mov
cmp
stos
fiaddl
mov
push
les
sub
xchg
in
das
pop
mov
fwait
int
sarb
mov
in
adc
add
dec
ss
cld
cltd
mov
jecxz
fs
mov
sbb
mov
mov
cltd
cmpsl
movsl
nop
test
push
aas
mov
mov
test
cmc
sbb
xor
fistps
lahf
dec
test
addr16
xor
xchg
mov
push
jae
sti
push
pop
fwait
out
or
sub
outsb
fwait
xor
aas
repz
and
mov
mov
inc
mov
lcall
cltd
test
stc
std
mov
int
pushf
sbb
cltd
sti
mov
sub
sbb
inc
jno,pt
inc
stos
test
cmpsl
in
cwtl
stc
push
into
cmp
cltd
inc
call
jb
xchg
test
xchg
lcall
lcall
fwait
outsl
xchg
shlb
mov
adc
popa
cmpsl
repz
sbb
xchg
jmp
adc
push
mov
cltd
scas
sahf
bound
mov
cltd
xchg
sub
call
add
push
shlb
scas
jbe
test
mov
and
sbb
or
xchg
and
push
jge
lahf
pop
and
push
mov
and
fdivs
cltd
sub
cmc
cmp
divl
punpckhbw
xchg
jmp
mov
push
cltd
loope
mov
add
divl
pushf
call
lahf
sub
add
cltd
loope
sub
jl
fwait
push
mov
jo
lea
cltd
adc
dec
inc
sbb
mov
repz
cmp
cltd
ret
jo
push
dec
push
cltd
imul
xor
insb
mov
cltd
addr16
test
rcrl
cltd
jae
inc
add
push
xor
in
test
lock
sbb
mov
call
icebp
test
mov
lahf
not
lcall
out
xchg
mov
push
fidivl
dec
mov
sub
push
clc
lcall
negb
or
in
sbb
shl
sub
and
popl
jns
adc
jb
xchg
sub
shlb
dec
repz
lcall
popa
jo
mov
mov
fcompl
pop
out
jo
call
jbe
ret
ljmp
cltd
dec
mov
inc
arpl
fdivrl
sbb
inc
mov
push
xchg
ss
into
insl
cltd
cmp
push
out
xor
fidivrs
cltd
or
dec
xchg
xchg
fwait
lret
call
loopne
xor
shll
adc
adc
push
jl
push
cmpsb
fisubl
cli
sbb
sti
out
popf
xor
mov
sub
add
cmpsl
loope
dec
addr16
les
int
cltd
mov
insl
push
fistpl
jp
mov
fdivs
xlat
sar
ss
xor
or
xlat
in
stos
pop
jge
mov
and
gs
mov
xor
jecxz
roll
cmp
pop
cmp
mov
jecxz
sbb
jecxz
sbbb
sbb
sbb
and
adc
hlt
cmc
aad
adc
xchg
xchg
lret
jmp
pop
jg
stc
cmp
or
cmp
aad
shr
ds
sub
push
outsb
push
push
adc
mov
dec
subb
or
inc
repz
ret
sbb
or
mov
push
mov
stc
fadds
std
pusha
cmp
push
les
faddl
mov
mov
cmpsb
push
mov
mulb
push
mov
mov
test
dec
imul
scas
insb
repnz
mov
daa
stos
pop
jns
out
dec
and
in
movsl
les
test
fcompl
adc
push
aas
jecxz
jp
in
dec
dec
mov
xor
mov
add
shrd
sbb
shrl
int3
adc
xor
aaa
pop
mov
sar
xchg
lahf
mov
cmp
mov
fsubrs
lock
sub
mov
imul
fchs
xchg
jmp
lods
sbb
insb
add
divb
cltd
mov
adc
insl
add
mov
pushf
sbb
sbb
pop
cmc
push
mov
inc
lahf
lods
add
outsb
jmp
push
mov
mov
or
jge
fnsave
inc
call
mov
jno
jecxz
xchg
xchg
lds
xor
pop
fnstsw
sbb
xor
cmc
sarl
lcall
std
insl
aas
mov
scas
xchg
push
and
xor
add
lahf
mov
mov
jns
mov
pushf
test
push
xor
aam
aas
mov
add
fincstp
lds
jbe
fwait
mov
arpl
jl
bts
test
pop
mov
cmp
fldenv
sbb
loop
in
sbb
cmpsl
rcrl
dec
lcall
or
notl
pop
xabort
or
ret
cltd
nop
mov
mov
mov
stos
sub
jle
stc
jae
mov
bound
push
out
push
add
xchg
bound
cmpsl
and
cld
dec
leave
mov
push
data16
iret
cltd
cmp
push
rclb
popa
aaa
add
fsubl
xlat
rcll
or
call
sub
fnsave
bnd
popf
push
test
push
push
mov
stos
popf
out
sub
rclb
inc
enter
cltd
test
jl
mov
xchg
arpl
fdivl
gs
push
inc
pushf
insb
shrl
cs
aad
inc
mov
and
xchg
sub
daa
push
push
or
adc
mov
xor
ds
cmp
xchg
mov
push
add
push
insb
out
push
xchg
and
call
mov
inc
cs
or
dec
xchg
mov
push
gs
jne
xor
js
data16
fisttpll
mov
sub
enter
xchg
gs
int3
repz
pop
stos
mov
xor
rorl
push
jb
pop
push
pop
jecxz
das
in
daa
sbb
subb
dec
lods
push
and
dec
cmpsb
xchg
add
or
sarb
out
aas
je
stc
es
cwtl
push
mov
push
call
jno
in
push
jp
add
stos
arpl
in
or
shrb
mov
std
lods
mov
inc
test
hlt
out
lods
out
pop
sub
cmc
stos
xchg
andl
insb
cmpb
in
or
cltd
jne
mov
movsb
aas
cltd
inc
pop
jns
jnp
push
adc
cltd
ret
sbb
cltd
jne
out
add
clc
lods
ljmp
fcomp
xsave
jle
test
or
cltd
loope
in
jmp
cltd
and
adc
mov
cmpsl
push
cltd
cmc
xor
lea
adc
mov
loope
test
jno
sbb
mov
cltd
cmp
mov
roll
ret
push
aaa
outsl
jge
xor
or
push
lret
das
cltd
mov
js
xchg
outsb
in
fwait
cltd
popa
cmp
xchg
cltd
pushw
fiadds
mov
rcrb
jno
add
insl
pop
test
cmpsb
cltd
xor
lcall
xchg
inc
mov
or
xchg
movsl
mov
repz
cltd
dec
mov
or
mov
inc
shll
std
fs
lea
dec
add
test
push
das
cltd
xor
lea
jne
push
cltd
xchg
xor
stos
sbb
loope
cmp
sbb
ret
js
jno
cltd
mov
bound
push
cmp
stos
inc
insb
xchg
fcoms
out
mov
pop
jnp
lcall
pop
enter
jg
adc
add
cli
mov
insb
jecxz
sub
pop
or
push
shrl
lds
mov
popa
xor
sub
mov
cmp
loop
xor
xor
mov
nop
mov
aaa
jmp
inc
mov
sbbl
imul
shrl
xchg
daa
mov
add
adc
out
dec
sahf
mov
cs
mov
mov
mov
xchg
test
out
adc
icebp
add
pop
test
fmuls
adc
mov
lods
or
sub
cmc
jle
movsl
mov
stc
hlt
fldcw
loope
mov
popf
mov
mov
jb
mov
push
push
mov
clc
das
sahf
push
dec
xorb
pop
pusha
popf
cmp
xchg
lods
cmovg
decl
cmpsl
jbe
mov
sbb
pop
stos
push
fimull
mov
and
or
sar
or
stc
cli
rclb
and
mov
adc
mov
outsl
sti
pushf
or
mov
jnp
insb
repz
cmp
push
popf
jns
mov
adc
mov
dec
cmp
movsl
jmp
rcrl
mov
les
movsl
shr
sbb
adc
leave
cs
inc
push
sub
push
stos
icebp
add
ljmp
repnz
mov
out
or
pop
dec
imul
mov
pop
mov
cli
mov
jge
mov
cltd
sub
cld
ret
pop
cmp
ror
jp
and
call
insb
mov
cmpsl
cli
outsl
dec
jle
cli
cmp
aad
sbb
push
add
insb
aaa
cmpsl
cld
out
lahf
daa
pop
cmp
lea
das
testb
cltd
cmp
arpl
cltd
xor
or
add
fwait
imul
mov
mov
adc
mov
or
pop
fimull
lcall
sbb
movsb
jo
in
push
sub
rclb
mov
fwait
out
int
or
sbb
stos
sbb
sbb
cltd
push
sub
les
inc
cltd
inc
fldenv
popa
cs
arpl
adc
jbe
roll
lods
lcall
cltd
xchg
add
dec
mov
lahf
mov
sti
mov
or
ret
add
shrl
and
add
sahf
cli
and
dec
out
jbe
xchg
pushf
fsubl
and
cltd
dec
nop
sub
imul
push
fwait
out
movaps
bound
mov
cltd
clc
pushf
pop
es
dec
sub
mov
aaa
jl
jo
jmp
lcall
jp
lock
cltd
js
mov
rorl
xlat
cltd
in
push
cmp
mov
mov
rcr
lcall
pop
movsl
sub
mov
cmp
jecxz
roll
xchg
or
imul
fs
mov
stos
pop
js
cltd
push
cwtl
sbb
and
pop
cltd
xchg
mov
imul
sub
cltd
gs
mov
mov
dec
loopne
dec
insb
sbb
insl
in
dec
jae
int3
mov
shlb
adc
in
mov
and
das
xor
pop
mov
push
js
bound
cltd
xchg
push
xchg
mov
dec
mov
lds
dec
cmc
in
or
lahf
xor
lret
push
cltd
pusha
pop
sbb
jl
out
add
leave
cltd
mov
in
dec
sbb
fistps
adc
ja
add
lahf
or
mov
or
imul
pop
push
jo
ret
rorl
cltd
add
lret
es
and
hlt
cli
jp
dec
stos
mov
xchg
test
pop
fdivl
dec
fs
and
test
std
cltd
out
adc
mov
sbb
jbe
jb
outsl
mov
scas
cmp
inc
div
stc
mov
mov
andb
cld
fs
xchg
dec
div
fwait
mov
orb
push
mov
test
xor
jb
inc
lahf
pop
jae
mov
mov
or
pop
xor
xor
jb
cli
cmpsl
or
movd
aam
or
push
repz
negl
mov
icebp
test
xor
fistl
xorl
cltd
sbb
clc
cltd
cs
push
mov
inc
jge
sbb
sbb
fwait
rcrl
fcom
jmp
xchg
pop
xchg
or
fs
aad
and
dec
xor
sbb
pop
push
cltd
in
roll
scas
jge
cmpl
mov
push
imul
sbb
xor
jp
cltd
or
mov
out
aam
pop
stos
lahf
les
insl
or
mov
stos
sub
jecxz
ficompl
jmp
push
loop
fistl
dec
jge
lods
or
jp
ljmp
loopne
jne
pusha
test
mov
or
orb
add
mov
jge
cltd
push
mov
clc
ss
or
jmp
sub
cmp
lds
jbe
cltd
fs
movsb
pop
pop
shrb
mov
push
cltd
out
fimuls
jecxz
jae
cltd
js
enter
inc
rcrb
iret
movsl
mov
jmp
mov
int
leave
push
cmpsb
cltd
ljmp
dec
adc
cwtl
sub
mov
imul
dec
xchg
push
data16
xchg
leave
push
fmull
das
cltd
sbb
inc
cmp
fisubs
push
mov
sbb
sahf
mov
fwait
inc
sbb
test
adc
cltd
cmp
dec
pop
into
xchg
jno
push
cltd
or
sub
shlb
addr16
popf
into
dec
imul
stos
mov
cltd
cmp
insb
lds
call
sbb
cltd
mov
dec
loop
lea
jno
push
dec
xchg
or
cmp
xlat
outsb
pop
popf
cltd
in
xchg
fcmovbe
insb
jae
fwait
movsl
je
adc
test
push
cltd
jge
in
test
sub
test
sub
popa
mov
inc
lahf
xor
repnz
cli
repz
jns
inc
pop
mov
xchg
cltd
cmp
jmp
jle
mov
aas
icebp
mov
fscale
lret
xchg
sub
cltd
push
sbb
push
addr16
stos
cmp
mov
add
sahf
xor
add
movsb
rclb
sbb
mov
nop
or
lds
and
cltd
lock
mov
cmp
je
out
dec
cltd
nop
jge
jb
adc
fs
xor
push
cmc
in
pop
ret
fwait
add
cmpsb
push
shlb
pop
dec
push
mov
lcall
shrd
push
jnp
pop
adc
ret
cwtl
cmp
dec
mov
xchg
cltd
imul
lcall
push
sub
gs
lds
sub
sbb
addr16
jo
or
xchg
cli
movsl
pop
jbe
pop
loope
sub
and
cmp
repnz
dec
cltd
loop
lods
out
aaa
cmpsb
pushf
cltd
mov
inc
scas
pop
pop
out
bound
push
test
in
mov
jle
std
nop
aas
cltd
inc
aad
pop
mov
sti
sbb
out
xor
insl
lret
lret
cltd
sbb
mov
cltd
sub
xor
aas
je
in
cltd
add
insl
lret
les
add
adc
and
jo
cltd
cmc
push
mov
cmpsl
jmp
mov
mov
or
in
loop
jae
and
lahf
pop
lds
inc
scas
adc
push
in
bound
inc
or
mov
arpl
mov
in
lcall
imul
lods
cltd
inc
adc
cltd
cmp
and
or
repnz
mov
call
or
pop
mov
or
ret
push
into
or
push
lahf
out
xchg
sub
cltd
push
cmpsb
rcr
pop
cmc
mov
inc
movsl
sbb
adc
in
mov
push
in
push
aam
adcl
pop
add
mov
jp
sbb
pop
jbe
cltd
dec
sub
stc
lret
cltd
movsl
outsl
lock
test
loope
mov
dec
adc
adc
push
leave
cltd
mov
scas
out
test
mov
leave
call
cld
xor
es
mov
jecxz
push
pop
jnp
pop
mov
test
aam
inc
cmp
and
ret
fwait
sbb
out
in
lahf
ss
movsl
rcll
jg
pop
fwait
mov
outsb
sahf
mov
aad
mov
ret
cmpsl
sahf
fs
pop
add
or
rcl
cltd
fisubl
int3
mov
lcall
das
push
iret
vpmaxsw
mov
sub
mov
hlt
lcall
cltd
pop
loopne
add
mov
add
xchg
push
cltd
call
sbb
in
inc
sbb
push
fistpll
scas
cld
int
imul
dec
cltd
inc
jecxz
repz
loope
and
jno
fwait
xor
and
cmp
mov
stc
adc
mov
jp
dec
loop
jecxz
fimull
cmp
addr16
lahf
stos
pop
fs
fisttpll
call
out
mov
dec
adc
test
pop
setns
lods
cltd
pop
paddd
ljmp
orl
jle
popf
cltd
loope
loop
lock
mov
cltd
in
std
hlt
sub
bound
push
xchg
pop
lahf
mov
jnp
lds
lret
cwtl
push
or
mov
je
adc
pop
cltd
ljmp
in
dec
call
cltd
je
mov
cltd
jnp
fistps
and
pop
lea
fcompl
inc
mov
fwait
push
lcall
outsl
push
hlt
cmp
or
push
int
pushf
jno
cmp
stc
cmp
imul
ja
jmp
add
loopne
and
mov
or
cltd
fdivrl
in
outsb
js
daa
mov
xchg
cltd
jo
and
push
cltd
int
sub
insb
adc
pop
mov
lcall
mov
in
cltd
stos
inc
cmp
cltd
loop
mul
test
jb
cltd
xor
inc
mov
xlat
sbb
sbb
stc
jns
and
cltd
xor
adc
lods
cltd
fistpl
cltd
ja
cmpsl
jns
push
sub
cld
add
pop
lret
jl
xchg
filds
push
push
fstpl
mov
push
arpl
add
pop
mov
mov
jo
addr16
or
sahf
in
int3
cmp
sub
es
push
mov
adc
adc
cltd
push
mov
adc
imul
testl
shrl
lds
cld
cmpsl
sub
cli
xor
xchg
lds
rcll
popf
and
popf
dec
cltd
sahf
mov
cmpsl
or
jns
movsb
outsl
ficomps
xchg
out
out
jge
cltd
adc
and
inc
jle
cltd
out
xchg
mov
xchg
or
mov
enter
rcrb
push
mov
iret
and
mov
shlb
mov
ljmp
lret
cltd
and
movsl
pop
sbbb
pop
inc
andl
xchg
pop
mov
mov
pop
lcall
cmp
mov
out
scas
ljmp
fcmove
popa
jmp
cwtl
test
addr16
inc
insl
cltd
jmp
outsl
push
out
mov
mov
popa
sti
and
mov
cwtl
popf
insl
push
cmp
cmp
pop
inc
sub
popa
sbb
jp
fs
push
mov
mov
into
jp
inc
jp
push
cltd
sub
fwait
mov
cltd
ret
sub
outsb
daa
inc
mov
stc
xlat
cmp
cltd
sbb
out
mov
pop
fcoms
lcall
or
mov
pusha
cltd
adc
mov
pop
rcl
in
jns
cltd
mov
stos
ljmp
outsb
push
stos
cli
lahf
out
fisttpl
movsl
inc
mov
rcll
fisttps
mov
mov
mov
sbb
pop
pushf
xrelease
sbb
cltd
movsl
sarb
test
out
ss
sbb
add
andb
xor
add
jl
cmp
mov
mov
jbe
jns
dec
popf
xchg
and
mov
push
cltd
sub
mov
pop
pop
fcompl
or
sbb
popf
leave
lret
sahf
fcomps
in
inc
inc
lcall
cltd
in
arpl
cltd
aaa
sub
dec
repz
adc
mov
sti
jae
lea
shlb
mov
mov
pop
int
mov
jl
sbb
sti
xchg
popf
loopne
popa
push
jmp
lcall
mov
mov
or
ja
pop
cltd
ljmp
lods
ss
or
fxch
sub
ja
dec
and
pop
mov
sahf
sub
cltd
jae
sub
gs
cmp
insl
outsl
add
mov
adc
scas
mov
jns
cltd
call
sub
aad
jo
addr16
cltd
xor
adc
out
lret
xor
cltd
outsl
fcmovb
fstpt
movsl
and
cltd
enter
ja
pop
scas
xor
adc
dec
adc
and
loop
in
mov
outsb
adc
xor
ds
mov
and
movsl
les
adc
jmp
mov
sbb
les
shlb
lods
mov
rcrl
jl
cwtl
insl
mov
sti
fwait
xor
and
fwait
xor
jns
mov
pop
cwtl
jo
cmc
cltd
fucomi
sub
inc
add
cltd
pop
addr16
mov
popf
sbb
faddl
xchg
pop
sbb
dec
adc
or
pusha
andl
adc
lcall
imul
mov
mov
xor
adcl
aad
push
lods
adc
or
aaa
or
or
out
push
mov
bound
jo
mov
cltd
pop
sbbb
mov
cltd
xorb
movb
sub
push
cltd
jge
test
cmp
inc
out
cmpsl
sbb
movsb
mov
fwait
push
xchg
adc
xchg
sbb
jg
jo
cmpsl
pop
adc
inc
subb
adc
jb
mov
inc
cmp
pop
push
sub
test
pop
ret
xor
pop
lcall
aad
ljmp
cltd
fwait
mov
mov
mov
jns
fcmovbe
add
aad
bound
dec
sub
add
popl
rolb
sbb
int3
and
cmc
scas
or
cmp
lcall
rcrl
fdiv
cltd
stos
pop
jg
jnp
data16
cltd
fidivs
in
xchg
dec
jp
jp
sbb
mov
stos
je
test
mov
sbb
lret
push
pop
in
push
je
dec
xor
hlt
and
sti
push
xchg
loope
imul
int3
stos
xlat
add
lahf
and
adc
jns
cltd
add
lods
jmp
lahf
inc
jmp
cmp
int
xchg
dec
pop
inc
test
insl
cltd
add
movsb
xchg
ficoms
and
cltd
out
mov
cltd
mov
insl
adc
mov
jecxz
pop
push
lret
push
cltd
sbb
mov
push
cltd
xor
outsl
jecxz
fildl
roll
cmp
sbb
test
jns
lock
cltd
pop
mov
pop
dec
push
jno
psrlw
inc
cmp
stos
mov
push
in
inc
sbb
push
mov
fisttps
pop
add
nop
in
imull
mov
rcrb
sarb
sbb
or
jne
xchg
pusha
cltd
int3
sbb
ret
lds
outsl
xor
jns
repnz
mov
inc
adcb
push
cltd
sbb
inc
call
pop
iret
or
repz
cltd
xor
lds
fbstp
test
cmpsl
out
or
scas
mov
cltd
jge
xchg
nopl
jp
sub
xchg
adc
mov
lds
mov
mov
add
popf
ja
lods
movsl
xchg
mul
fimull
pusha
and
aas
jp
scas
rorl
nop
sbb
sahf
mov
cmpsl
lods
inc
add
pop
aad
pop
and
cltd
jns
sub
dec
fwait
lret
imul
mov
inc
in
sahf
add
or
add
cltd
xlat
out
xor
ret
scas
cmc
mov
push
dec
cwtl
jae
in
cltd
push
les
and
gs
add
mov
xchg
xlat
sbb
cmpsb
jno
lcall
pop
dec
lcall
mov
mov
mov
fstpl
cltd
hlt
xchg
cmp
sub
mov
or
inc
inc
xchg
lcall
cld
xor
mov
cltd
dec
push
push
pop
jecxz
pusha
cltd
cmpsb
in
gs
and
sub
fimull
dec
jl
mov
mov
dec
ljmp
rcrb
std
add
jo
xchg
and
fmul
es
dec
iret
sub
pop
int
jmp
fwait
loopne
ret
sarb
pop
push
xchg
mov
cltd
mov
mov
jl
shl
adc
inc
fwait
push
nop
mov
pop
ret
lea
mov
js
lahf
mov
and
ret
aaa
xchg
cltd
sbb
add
js
jns
jl
std
xor
pop
push
pop
ss
adc
test
cltd
push
cmp
pop
cwtd
mov
popf
hlt
notl
rcrb
mov
leave
cmp
mov
add
lahf
sub
add
arpl
pop
cltd
jbe
dec
sahf
rcrl
push
xlat
test
pop
or
std
cltd
inc
dec
add
jbe
xchg
and
xchg
dec
rcrb
dec
pop
movsb
or
pop
cmp
xchg
fists
loopne
shrb
jg
cmpsl
add
xor
popf
inc
mov
cmp
fs
cltd
hlt
push
lret
fstl
es
mov
mov
jo
cltd
pop
inc
or
inc
rorb
cmpl
push
cltd
push
mov
aam
lods
and
or
ret
and
xchg
sarl
jne
mov
cltd
cmp
cmpb
int
mov
sti
add
pop
xchg
push
cltd
and
in
push
mov
clc
insb
js
sub
cmp
pop
add
daa
xor
lea
xchg
cltd
cmc
push
sbb
adc
cmp
out
idivl
cltd
test
arpl
stc
sahf
decb
lcall
pop
subb
adc
mov
inc
iret
cmp
arpl
cltd
xor
mov
cltd
clc
xchg
and
or
inc
scas
cmp
loopne
jo
pusha
ss
sbb
pop
enter
cltd
xchg
pop
mov
lea
imul
pop
fnstsw
add
mov
xor
sti
mov
and
lcall
bound
mov
jmp
imul
clc
arpl
loop
shl
pop
pusha
lcall
cltd
xor
fidivl
pop
jns
cltd
push
daa
leave
mov
pop
lahf
sahf
mov
xchg
repnz
outsb
cltd
lds
movsl
ffreep
out
pop
cltd
sbb
ret
add
adc
out
xchg
je
stos
dec
mov
dec
imul
cltd
jmp
shlb
cltd
cmpsl
add
xchg
jecxz
or
mov
fildll
imul
mov
push
sub
adc
or
hlt
scas
out
pop
jg
mov
sbb
pushf
movsl
inc
mov
inc
mov
lret
mov
cmc
or
mov
cwtl
aas
test
push
mov
sbb
pop
xchg
jae
inc
mov
jmp
mov
mov
push
push
xor
int
cld
sahf
xor
fwait
dec
enter
pop
sbb
sbb
cltd
repnz
fistl
std
les
cmp
rcr
jbe
mov
and
mov
jl
aad
ret
sub
mov
pop
mov
stc
sbb
inc
jmp
in
mov
popf
pop
mov
sbb
jbe
lret
pop
xchg
cltd
add
xchg
xchg
cmp
sub
jge
xchg
dec
lcall
jns
bnd
cmc
cltd
gs
aas
lfs
sbb
mov
lds
cltd
orb
dec
cmpsl
gs
int
sbb
imul
push
push
add
jne
jns
inc
out
xor
jp
addr16
cltd
pop
fldcw
inc
cltd
xchg
adc
inc
addr16
adc
daa
xor
or
mov
rcrl
cltd
lahf
outsl
fs
push
sub
gs
sbb
sub
loope
es
outsb
stos
sbb
mov
pop
loop
js
dec
sbb
pop
xor
dec
cltd
cwtl
add
jmp
outsb
test
xchg
movsl
shlb
lret
mov
repnz
adc
pusha
jp
out
ret
insl
das
mov
sbb
in
sub
cltd
add
xchg
sbb
lds
pop
shrl
sbb
pop
cmpsl
pushf
out
adc
lcall
mov
jmp
js
cwtl
ret
imull
sub
mov
and
psubd
call
inc
dec
rclb
mov
cltd
sub
inc
cmpsb
cmpl
sbb
sbb
std
cltd
out
cs
test
lahf
xor
or
int3
mov
mov
pop
cltd
and
test
rcll
arpl
rorl
jl
pop
inc
fstps
cmp
xor
cmpsl
jge
cltd
insb
inc
push
jno
mov
out
mov
sti
adc
hlt
or
sahf
dec
mov
xor
xchg
cltd
mov
sub
cltd
xor
unpckhps
mov
mov
cltd
sti
sbb
gs
cli
lock
xor
pop
push
push
lea
dec
iret
mov
aaa
cmp
insb
dec
outsl
cmpsl
daa
cltd
inc
int3
fstps
cltd
inc
push
ret
inc
js
jp
cmpsl
adc
xchg
out
push
xchg
jnp
cltd
pop
and
popf
popa
jnp
push
cltd
jb
mov
push
cltd
test
es
fdivs
pop
cwtd
ret
loope
xor
cltd
and
xchg
dec
ss
cmpsl
and
lock
lods
incb
int
mov
cli
sbb
sbb
ja
dec
cltd
fldl
in
mov
sbb
stos
pop
lods
subl
cmp
push
ss
lea
leave
sbb
mov
xchg
adc
pop
mov
cltd
repnz
addr16
sub
mov
jae
mov
and
enter
testb
pop
outsl
cltd
mov
xlat
xchg
sbb
jle
cli
cmp
mov
jbe
fnstcw
push
subl
lahf
sahf
cmp
cmp
in
clc
aam
adc
cltd
mov
ror
cltd
xchg
lret
cmp
ss
cltd
ljmp
cmp
jo
sbb
xchg
lods
jl
in
jns
cltd
xchg
cwtl
ret
cmc
mov
test
jno
repz
les
add
or
sub
insb
mov
jnp
mov
pop
incb
mov
inc
mov
mov
push
inc
pushf
mov
psrlw
scas
pop
sbb
cs
push
xlat
enter
or
sahf
pop
inc
jno
mov
jge
adc
mov
adc
sbb
add
sub
and
cwtl
mov
mov
enter
sub
pop
dec
inc
jl
push
ficomps
sub
pushf
loopne
inc
adc
mov
rcrb
clc
in
xor
mov
mov
dec
jne
into
std
or
push
add
movsb
xchg
cmp
jecxz
outsb
shrb
cmpsb
push
mov
and
cmpsl
aas
push
jmp
outsb
imul
inc
push
add
jbe
push
mov
rcrl
idivl
and
sbb
dec
inc
shl
dec
xlat
imull
pop
and
pop
inc
inc
movsl
dec
jle
loope
mov
mov
mov
jg
popf
jbe
xchg
push
sub
subb
lcall
insb
in
mov
jl
mov
push
mov
in
add
test
sbbl
into
and
imul
lret
xorl
nop
stc
xchg
ret
xor
mov
inc
xchg
dec
sbb
mov
pop
xor
push
add
pop
push
mov
sbb
int
shrb
adcl
ss
stc
mov
or
xchg
jmp
inc
rolb
imul
rcrl
std
out
idivb
adc
shrb
push
pop
aam
cmp
sti
cmp
fcomps
stos
push
insb
cmpsb
inc
cld
mov
sub
out
lahf
mov
and
out
mov
lcall
dec
push
adc
cmp
aaa
repz
fwait
mov
test
ja
xor
xchg
mov
cmp
sarl
test
mov
nop
jecxz
cmp
or
mov
out
push
mov
xor
sbb
sarb
mov
sbb
stos
xchg
push
shlb
adc
xchg
pushf
lcall
fsubs
es
mov
lret
addr16
cmp
mov
pop
add
push
adc
xor
mov
jl
insb
xor
push
sbb
or
mov
leave
imul
ret
repnz
lret
stos
movsb
push
sub
test
loopne
fwait
mov
fwait
daa
std
jae
mov
mov
adc
mov
mov
cli
in
mov
push
sti
mov
test
and
or
pop
repz
lahf
lea
stos
cmp
test
popf
cli
rcl
mov
lods
jns
xor
sub
cmpsl
jle
mov
sbb
rorb
push
dec
push
add
sbbl
and
inc
negb
pop
outsl
js
iret
stos
icebp
sbb
lods
push
into
shrb
dec
icebp
add
cs
push
push
stos
ret
fisubs
inc
lcall
sub
nop
adc
iret
repnz
pop
xor
stos
gs
out
xchg
mov
repz
mov
mov
pop
mov
sbb
xchg
decb
lahf
fildll
mov
dec
shlb
add
call
mov
mov
out
ficoml
mov
dec
pop
pusha
mov
int
xchg
add
and
mov
cmpsl
lds
and
sbb
cli
sbb
sahf
push
stos
mov
mov
push
and
mov
dec
sub
push
add
insl
inc
insl
in
mov
xor
into
push
mov
ja
das
xor
das
enter
sub
insb
cmc
jg
sti
enter
fstpt
fildll
repz
mov
jne
mov
les
xor
inc
push
add
add
mov
insb
movsl
push
dec
mov
lcall
and
push
fisubrs
mov
sbb
outsl
push
push
repz
scas
sub
test
cltd
lds
bound
mov
movsb
add
pop
mov
push
xorb
test
push
nop
push
pusha
clc
mov
xchg
mov
imul
mov
and
int3
cmp
xorb
loope
orb
and
aad
fsubr
pop
xlat
in
aas
test
sahf
dec
jae
dec
jle
adcl
jbe
repz
add
ret
int
loop
cld
dec
jns
and
adcb
jnp
cmp
testl
jnp
mov
dec
sub
sbb
mov
adc
cltd
add
mov
cmp
cltd
mov
cmp
mov
mov
dec
cmp
add
cmp
lret
xchg
adc
fimuls
mov
pop
divb
pop
enter
push
xor
je
mov
outsb
nop
and
cltd
push
popa
mov
mov
jmp
or
mov
cld
lret
fcmovbe
and
in
fs
or
mov
inc
add
rcrl
xor
jbe
dec
fs
xchg
jg
or
mov
pusha
push
fdivr
cltd
mov
add
pop
das
bound
mov
fnstenv
fisubl
xor
push
cltd
xchg
cmp
aaa
popf
cltd
mov
xchg
roll
mov
xchg
push
cltd
add
dec
aas
push
bound
in
out
adc
adc
fwait
sarb
xchg
lds
cmp
lcall
or
lcall
sbbl
stos
pop
pop
pop
jge
or
fwait
repz
mov
cmp
push
sub
inc
iret
cmp
les
lcall
cltd
pop
push
loop
imul
paddusb
xchg
bound
lea
fst
enter
cltd
out
mov
mov
push
sbb
sub
hlt
stos
bound
push
cltd
pushf
loopne
adc
cltd
mov
jp
stc
cltd
cmp
in
jns
out
mov
push
popf
dec
leave
mov
daa
mov
sbbl
inc
adc
addr16
mov
pushf
daa
sub
pop
test
pop
lcall
pop
push
lcall
cltd
jnp
das
out
shlb
cltd
ret
and
fs
xchg
negb
sub
mov
or
cltd
dec
imul
bound
mov
div
js
push
lods
mov
jmp
sbb
adc
cltd
repz
adc
dec
lods
cltd
mov
nop
sahf
cmpsl
xchg
cmp
rorl
pop
push
adc
cltd
xchg
icebp
repnz
xor
sbbl
jb
cltd
mov
cmp
sbb
xchg
inc
cmpsb
cmpsl
inc
mov
rcrl
daa
lea
jp
clc
mov
inc
lock
adc
cltd
pop
repz
cmpsl
out
xchg
hlt
mov
cltd
testb
xor
xchg
repz
into
push
or
jg
lahf
subb
mov
mov
dec
test
cltd
mov
sarl
adc
js
ss
addb
xor
test
jecxz
xchg
pop
mov
cltd
aas
sti
adc
test
addr16
inc
sbb
push
flds
add
lock
sub
adc
nop
lods
mov
cltd
in
jo
xchg
icebp
add
fcoml
mov
xchg
cmp
and
fmull
test
push
out
sub
rcrb
nop
popa
lahf
enter
sbb
dec
sub
xchg
inc
cltd
mov
dec
mov
sub
xor
cwtl
cltd
clc
sahf
loopne
and
hlt
add
out
loope
cltd
lods
sahf
fildl
shlb
push
aam
sbb
mov
test
mov
cmp
jle
mov
jbe
movsb
pop
dec
test
cmpsl
xor
sahf
sub
cli
int3
mov
adc
lods
cltd
push
outsb
jns
ljmp
fcmovu
inc
lcall
or
dec
or
lahf
je
test
mov
cltd
push
aaa
addr16
xchg
test
xchg
clc
sbb
stos
imul
mov
sub
cltd
clc
adcl
or
sbb
addr16
mov
inc
test
call
divb
cltd
loopne
dec
push
cltd
jno
lret
xchg
inc
outsl
in
movsl
dec
cltd
push
fldt
mov
jae
cmpl
push
sub
loop
ret
mov
jp
or
adc
std
scas
fisubs
xchg
mov
mov
cmp
lsl
fidivrl
cmc
xchg
push
ljmp
xchg
mov
fisubrs
adc
enter
sub
mov
ficompl
adc
mov
cwtl
cmpsb
lds
add
cltd
push
into
inc
mov
jno
push
dec
pop
fwait
xor
add
xorb
and
fimull
mov
sbb
and
cltd
xchg
dec
ja
stos
cmp
sti
cltd
loope
aas
jb
xor
mov
cltd
xchg
mov
sbb
fiadds
cmpsb
repnz
imul
cltd
in
fnstsw
inc
pop
rcrl
mulb
cltd
in
and
aas
js
pusha
popa
xor
xchg
mov
mov
sbb
lods
pop
aad
cltd
test
ds
adc
mov
sbb
pop
mov
aaa
sbb
xor
sbb
les
sbb
outsb
cmpsl
add
pop
mov
mov
test
mov
jp
cltd
shr
xchg
mov
sahf
mov
adc
mov
cmp
bound
aas
fwait
popf
out
cli
push
imul
add
int
aaa
cmpsb
fwait
cmp
cltd
les
js
cltd
lret
out
mov
xchg
cltd
iret
fmull
enter
mov
rorl
pop
mov
clc
cmpsb
sub
xor
dec
push
mov
and
fwait
pushf
lcall
pop
int
mov
fwait
adc
xchg
sbb
addr16
cltd
jno
dec
ljmp
popf
mov
inc
ret
packuswb
pop
std
insl
cltd
or
in
imulb
xchg
lcall
add
jl
mov
cltd
jno
fsubs
pop
xor
or
cltd
ss
js
cltd
aas
inc
mov
ret
in
jecxz
mov
cltd
dec
dec
jle
pop
jmp
mov
sub
fldcw
in
test
sbb
push
lcall
aam
dec
lcall
cmp
andb
jge
and
cltd
shlb
mov
or
insb
cltd
mov
arpl
leave
cmp
out
jp
or
lret
loope
xor
sub
out
das
pop
cltd
js
dec
cmp
mov
inc
popf
aam
jbe
insl
bound
mov
sbbb
cli
pop
into
pop
je
lcall
push
cltd
jbe
push
mov
add
cmp
sub
cltd
mov
rcrl
sbb
and
and
or
leave
dec
fistpl
loope,pn
stc
cmpsl
cmp
cltd
ja
adc
stos
lahf
dec
imul
lcall
cltd
xchg
outsb
sahf
addr16
cmp
stc
loope
jno
mov
int3
fwait
and
push
jl
shlb
int
imul
or
pop
sbb
mov
movsb
ljmp
or
fidivrl
dec
push
aaa
pop
adc
ret
movsl
pop
gs
stos
add
dec
mov
cmp
out
out
lods
movsb
xchg
bound
mov
mov
mov
lds
sub
popa
adc
in
add
sti
inc
mov
dec
xorb
punpckhdq
nop
stos
mov
lods
cs
int
lods
mov
adc
mov
cmp
popf
repz
xchg
xor
aaa
or
add
mov
imul
mov
insb
and
inc
mov
lods
cmp
push
ds
addr16
and
int3
push
push
enter
pop
pop
push
dec
popf
frstor
nop
lret
xor
ret
insb
sbb
xchg
mov
push
lods
out
sub
inc
insb
pop
nop
pushf
xchg
push
sti
xchg
cli
leave
and
shrl
cmpsb
push
popa
jno
sbb
nop
sub
adc
popf
xor
subl
push
dec
jg
inc
in
adc
bound
addb
xchg
mov
jg
shl
pop
rolb
ljmp
movsl
dec
xchg
jmp
push
in
inc
shll
jmp
mov
push
jb
mov
clc
dec
sbbl
arpl
sub
mov
insb
pop
mov
pop
movsb
sbb
mov
push
popa
push
mov
icebp
inc
xor
in
xchg
imul
fmuls
pop
addr16
subb
push
mov
xchg
inc
jne
and
pop
pushf
out
or
xchg
fwait
mov
inc
dec
loope
cmp
cli
mov
dec
mov
idivb
insb
stos
add
fwait
push
cmp
push
sub
shl
and
cmp
out
lcall
mov
mov
or
xchg
fld
mov
or
xchg
cmp
cmpsl
cltd
adc
add
ret
imul
cmpsl
insb
hlt
sbb
sbb
lods
popf
adc
stos
movsl
aaa
jecxz
stos
push
scas
mov
sbb
scas
fndisi(8087
adc
sarl
ljmp
add
cwtl
mov
loop
mov
jmp
mov
jle
cmp
fcoml
sub
jg
mov
pushf
mov
jp
fidivrs
mov
lahf
addr16
pushf
sbb
xchg
jb
push
mov
in
imul
mov
ret
shr
out
cltd
add
into
sub
mov
and
sub
sbb
cs
test
aas
inc
dec
es
add
jmp
sub
jg
mul
fwait
cmpsl
lods
xchg
popa
in
mov
hlt
jns
adc
cld
adc
mov
filds
mov
lea
clc
pop
lods
push
jle
stos
insb
call
xchg
push
in
cmc
sahf
pop
push
xor
cmp
and
test
jb
sbb
out
fadd
xor
xchg
lret
cmp
pop
or
sbb
jp
das
shlb
mov
test
icebp
rclb
jle
mov
out
cmp
fldcw
cmp
sub
pushf
adc
pop
arpl
lcall
loope
dec
push
mov
mov
stos
xor
fstl
push
xor
mov
cltd
insl
sti
incl
adc
dec
out
mov
out
or
cmpsl
hlt
sti
lahf
stos
mov
dec
mov
outsl
mov
js
add
gs
imul
cmp
pushf
pushf
lcall
and
mov
and
jmp
cmp
mov
dec
push
in
loop
push
pop
dec
movsl
dec
inc
cmpsb
pusha
pop
stos
sub
push
cmp
dec
jp
push
push
push
cmp
cmp
in
add
test
lret
sub
ftst
lock
sub
in
add
insl
stos
mov
jb
mov
clc
jne
test
jl
popf
mov
popa
insb
jecxz
sub
cmp
mov
xchg
cld
xor
xor
jge
adc
fwait
lods
insl
cmc
loope
xchg
lods
movsb
fwait
push
stos
mov
cmp
xor
sbb
rolb
and
rolb
xchg
mov
xchg
imul
out
xchg
or
cmp
out
das
or
loopne
leave
std
scas
xor
idivb
xor
lods
and
push
into
or
ljmp
mov
or
pop
fcoms
xor
popf
pop
imul
loope
cmpsb
mov
push
xchg
dec
test
sahf
sti
mov
mov
sti
inc
mov
push
in
sahf
jns
push
xor
stos
lods
inc
lahf
mov
dec
xor
cwtl
insb
inc
lods
leave
scas
add
adc
dec
xchg
mov
lods
pushf
call
xlat
sbb
cmpsb
inc
in
mov
enter
repz
lret
add
int
jae
cltd
data16
or
lret
inc
aam
test
imul
lods
adc
pop
stos
cmpsl
rcrl
pop
sbb
push
cmp
mov
mov
cmc
negb
mov
insb
add
test
xor
dec
les
add
imul
inc
gs
sub
insb
outsl
add
stc
js
out
cli
add
mov
jne
lods
jmp
insb
mov
mov
push
xchg
adc
jp
mov
pop
adc
inc
add
outsl
sbb
cmc
lods
fidivl
popf
movlhps
insb
pop
stos
sub
lret
enter
xchg
xchg
popa
inc
mov
lea
push
jle
icebp
add
and
adc
insb
icebp
mov
outsl
fdivr
push
je
add
dec
dec
and
ret
nop
jecxz
stos
call
dec
lahf
adc
je
aas
cmp
dec
mov
test
insl
imul
sbb
cli
ds
add
push
mov
mov
push
stos
push
adc
jmp
stc
dec
inc
cld
add
cmp
cmp
int
inc
cmp
mov
lret
add
daa
lods
jnp
out
xor
push
xor
es
sub
fwait
sbb
ret
push
xchg
cmp
imul
mov
cld
test
dec
cmp
stos
cltd
mov
and
scas
add
or
stos
inc
adc
or
push
clc
addr16
enter
loope
or
cltd
adc
sbb
push
repz
cltd
sub
inc
mov
cltd
jge
shl
lea
cltd
pop
aaa
fcmovu
mov
adc
mov
xchg
jmp
mov
ja
xor
cltd
mov
je
cltd
int
popf
push
sub
cltd
repnz
stos
rcll
dec
pop
mov
jae
lods
sahf
cltd
popa
mov
std
xor
loopne
insl
pop
lcall
xchg
inc
insb
xor
aad
ror
aaa
lcall
cmpsl
jnp
cmc
aad
adc
and
mov
lahf
xchg
sub
and
sahf
sbb
lahf
ss
ds
add
cmp
sub
movsl
or
cltd
add
ficoml
pop
fsts
add
pop
cmp
orb
mov
push
cltd
aam
add
cltd
mov
sbb
shll
outsb
cltd
push
test
movsb
addr16
xchg
repz
ja
sbb
mov
cmp
mov
cmpsb
fwait
adc
outsl
mov
jne
xor
iret
adc
mov
sbb
subl
mov
add
cltd
outsl
adc
outsb
fmulp
lea
daa
inc
xchg
push
cmp
ss
lods
hlt
shr
cltd
mov
aaa
push
cltd
lods
jo
jne
jnp
sub
rcrl
xor
dec
jge
xorps
sahf
leave
mov
stos
push
lcall
and
mov
daa
xlat
and
pusha
loopne
pop
pop
in
xlat
and
sbb
lcall
inc
loopnew
dec
and
fcomps
inc
cltd
push
sbb
inc
cltd
adc
je
jb
mov
mov
loop
insb
xchg
push
popf
cvtdq2ps
push
movsb
cltd
test
scas
sub
xchg
mov
jge
mov
not
and
cltd
subb
cltd
mov
inc
cmp
fadds
bound
mov
or
cld
xor
add
add
stc
xchg
inc
rorb
mov
subb
push
shrl
sbb
mov
insb
pop
imul
sub
cmc
jmp
mov
or
add
cltd
sub
xchg
jno
or
inc
mov
mov
fwait
or
inc
pop
sub
pop
stos
jae,pt
jbe
cltd
sbb
push
push
mov
les
push
cwtl
je
mov
push
ss
cmp
aad
icebp
push
fwait
xchg
mov
jecxz
xlat
aam
cmp
lret
cltd
dec
enter
movsl
push
cmc
cltd
mov
jmp
icebp
je
sar
cltd
scas
pop
push
in
push
out
cltd
sub
mov
jecxz
sbb
cmp
pop
cltd
xor
xchg
loopne
ja
je
mov
lods
xor
push
aaa
jns
jg
jp
fldt
mov
arpl
push
pop
or
cmpsw
add
out
insl
sbb
jns
clc
cltd
mov
es
cltd
mov
cmp
cltd
push
je
hlt
cmp
in
fcomps
lock
mov
ja
pusha
adc
aam
mov
fwait
adc
adc
xor
cltd
mov
mov
jb
cltd
and
ja
inc
mov
cltd
jg
jno
ds
das
int
and
mov
cli
stos
xor
cltd
jge
sub
insb
cltd
cmp
xor
cltd
inc
fwait
pusha
add
push
sti
inc
and
jl
mov
adc
sub
xchg
push
pop
cltd
insl
loop
sbb
cltd
lahf
in
adc
subb
cld
sub
push
sbb
nop
inc
sbb
test
or
fs
rclb
ss
xlat
fdivrl
rcll
cltd
arpl
scas
cltd
adc
jb
inc
mov
gs
sbb
cmpsl
mov
pop
lock
daa
xor
dec
pop
lahf
stos
aas
call
adc
aad
cmpsl
fwait
dec
enter
fnsave
cld
cmpsl
dec
or
cmpsb
sbb
rcrb
sub
data16
aaa
rcrl
push
mov
negb
cltd
iret
push
dec
mov
in
xor
nop
pop
fdivrl
hlt
icebp
mov
mov
add
mov
je
pop
fcompl
mov
out
mov
xchg
xlat
cltd
add
sbb
cmp
cmpsb
xchg
xor
add
adc
nop
push
jge
pop
cltd
cmp
shl
adc
dec
aas
add
dec
dec
cmpsl
in
jne
pusha
xchg
mov
fildll
fwait
xchg
insb
out
mov
pop
xlat
leave
sbb
out
cltd
je
sbb
jbe
inc
cmp
mov
mov
push
add
push
cltd
rclb
popa
xor
out
subl
cltd
dec
mov
xor
jb
outsb
lcall
andl
mov
pop
jne
push
inc
cmpsl
pop
inc
cmp
jge
pop
cltd
sub
dec
adc
and
bound
push
adc
mov
push
sub
fsts
pop
cli
xchg
rcl
adc
mov
imul
push
cltd
ret
fisubrl
xchg
dec
jl
xchg
sbb
loopne
icebp
pusha
mov
insb
mov
sbb
mov
xorb
sbb
frstor
negb
sub
xor
adc
cltd
int3
jl
pop
push
lret
jne
mov
insl
inc
aaa
leave
sub
into
mov
jl
std
outsl
loope
stos
pop
push
cmp
inc
cltd
inc
repnz
adcl
pop
lods
pop
mov
mov
push
xchg
push
or
roll
lcall
cmp
jae
pmaxub
cltd
test
ljmp
xor
dec
dec
fidivs
es
add
cld
leave
cmp
lods
pop
adc
pushf
lahf
stos
std
cltd
int3
outsl
leave
test
dec
inc
nop
shrl
jg
xchg
insl
mov
push
sbb
sbb
mov
cltd
subb
jl
scas
sahf
cltd
push
jp
ret
inc
aad
push
cltd
push
push
adc
dec
cmpsb
test
ds
lods
lahf
mov
push
cltd
popf
dec
test
cltd
lahf
gs
add
cmp
mov
pop
add
add
jp
push
enter
aad
cmp
jo
jl
fdivrs
sbb
fistl
pushf
int3
aas
dec
lcall
stos
mov
push
or
or
lcall
or
aaa
cltd
fadd
test
mov
inc
cmp
jno
xchg
pop
push
enter
lahf
mov
pushf
cmp
and
stos
mov
ja
push
incl
mov
jne
sbb
mov
imul
adcl
stc
fwait
push
and
or
stos
cmp
outsb
mov
mov
add
push
pop
push
mov
pop
lret
jge
dec
leave
mov
fistpl
push
mov
cltd
mov
rcrb
jmp
outsb
mov
push
lret
punpcklwd
mov
insb
pop
bound
cltd
adc
pop
test
pusha
cltd
scas
out
and
sbb
cltd
sbb
aad
insb
addl
ffree
or
outsb
gs
outsb
imul
adc
sahf
in
ret
mov
movsl
xor
push
pushf
adc
pop
mov
xchg
mov
mov
sub
push
pop
loopne
xchg
or
shll
push
adc
jg
mov
jle
adc
mov
jge
fistl
add
add
loop
add
sub
outsl
lret
das
lods
push
mov
gs
pop
and
adc
lods
mov
sarl
jo
pop
shlb
cmp
push
sub
nop
fiaddl
aad
ss
divl
mov
add
movsl
pop
lds
mov
cmp
sbb
jmp
sbb
in
adc
inc
dec
cltd
cli
popa
repz
jae
mov
mov
fwait
stc
lahf
icebp
mov
cmc
fwait
inc
dec
xor
cmp
test
adc
ret
cli
sbb
jmp
jmp
pop
in
movsl
cltd
jnp
fildll
cltd
arpl
insl
or
jne
lods
jnp
jae
int3
cltd
addr16
leave
lahf
add
xor
cmp
inc
xchg
rolb
mov
sub
inc
jecxz
imul
cmp
aad
ja
sbb
jb
sub
and
aad
js
aas
mov
adc
pop
pop
insb
mov
cmp
enter
xor
paddsb
jecxz
popa
sub
fistpll
xor
fdivrs
sbb
push
and
push
mov
xchg
mov
fwait
lods
jl
dec
nop
and
mov
jnp
idivl
lcall
repnz
jne
jns
or
arpl
inc
xchg
in
scas
out
sbb
lods
push
rolb
aam
cmp
and
or
dec
xor
test
je
out
sahf
addb
jge
add
jb
ljmp
xchg
fnstenv
std
jge
iret
mov
ds
dec
cltd
inc
mov
das
pop
je
test
mov
sbb
sahf
sub
sub
das
getsec
stos
dec
push
addr16
fs
mov
mov
lret
frstor
stos
xchg
jne
xor
fdivl
mov
jae
lods
mov
jp
adc
push
push
pop
mov
test
mov
jl
cmc
or
test
stos
in
mov
js
aad
loop
cmpsl
sub
andnps
sti
sar
push
push
inc
bound
mov
hlt
js
or
inc
wrmsr
pushf
push
lock
mov
xor
adc
xor
popf
ja
mov
popa
rolb
jno
adc
dec
lret
or
push
std
push
jnp
cltd
aas
icebp
mov
inc
sti
rcl
cltd
xor
add
mov
stc
outsb
sbbl
jne
push
fwait
sbb
mov
sub
mov
lret
dec
jge
cmpsl
insb
rorl
call
dec
cltd
push
fwait
dec
cmpsb
ret
ja
js
and
cmp
cmp
test
and
jne
mov
cmpsl
adcl
nop
mov
jnp
rolb
and
test
ret
das
inc
add
dec
jp
cltd
mov
inc
les
movsl
loop
into
clc
out
xor
jbe
cwtl
mov
imul
pop
sub
cltd
sbbl
cltd
or
or
sub
fwait
jecxz
cmpsl
inc
test
xchg
lahf
rdpmc
imul
mov
insl
dec
xorb
imul
xchg
pop
lahf
or
jge
mov
aaa
jg
jmp
jbe
std
sub
jo
push
adc
scas
cmpl
ficompl
mov
adc
mov
pop
das
xchg
jl
mov
cltd
push
shl
fcoml
imul
mov
sub
popf
enter
aaa
test
inc
shll
call
int3
dec
or
mov
je
sub
inc
fwait
js
in
bound
mov
cltd
dec
lds
mov
pop
sbbb
cmpsl
fcomps
sub
push
xor
cmpsl
inc
and
push
jae
cltd
insb
stos
ret
mov
or
cmpsb
ror
mov
xchg
rcr
and
or
das
cltd
jae
sbb
into
mov
cltd
add
mov
js
out
push
xlat
push
mov
cltd
mov
lods
ret
lahf
dec
mov
and
lcall
fldl
pusha
adc
cltd
scas
cli
ret
fstps
fs
jb
cltd
fsub
pop
mov
jle
cltd
push
cmp
push
mov
cltd
mov
sbb
mov
cwtl
mov
mov
stos
lods
push
pop
sbb
fs
nop
scas
bound
pop
pop
rclb
ss
xchg
mov
jl
test
mov
dec
cltd
lret
insb
std
in
adc
fwait
cltd
ds
mov
and
insl
cs
jl
mov
in
aad
lea
out
in
fwait
punpcklbw
or
cltd
cmp
mov
stos
les
ja
cltd
or
aam
sub
push
das
push
sbb
cltd
lret
in
aad
inc
jge
cmpsb
push
mov
sbb
subl
and
bound
push
lcall
push
mov
imul
cmc
pop
aas
mov
stos
leave
mov
in
adc
lahf
shr
sub
cmp
cwtl
xor
jns
dec
push
mov
pop
jecxz
movsb
aad
fsubrl
lcall
cltd
outsb
iret
ret
in
pusha
shll
ds
out
cltd
xor
cmpsl
cld
sbb
push
stc
scas
daa
inc
out
cltd
fmulp
sub
loope
sti
pop
gs
pop
push
ds
lock
push
sbb
sub
and
in
rclb
jbe
sbb
mov
cltd
mov
or
sahf
mov
pop
lcall
mov
or
mov
cltd
sbbb
fs
mov
jle
stos
cltd
insb
dec
dec
xchg
nop
loopne
xchg
addb
shlb
cmp
loope
mov
andl
bound
jmp
scas
outsb
cmp
iret
and
aas
jb
xchg
inc
arpl
fbld
sbb
shll
push
test
out
sub
lods
lahf
xorl
jbe
cmp
into
mov
jmp
jp
mov
sbb
sbb
fwait
mov
mov
inc
or
cltd
lahf
jg
call
rcll
loope
insb
imul
cwtl
cmp
icebp
fistps
cltd
aad
mov
sbb
xchg
push
ljmp
mov
stos
xchg
push
das
faddl
pop
das
popf
aad
adc
lea
mov
std
mov
pop
xlat
out
test
xor
fcompl
jg
insl
enter
push
shrb
dec
cltd
xor
pop
arpl
mov
pop
js
test
das
setns
sti
cmp
fwait
cmp
mov
jns
rcrb
shlb
adc
lods
push
fwait
cltd
pop
sub
insl
movsb
into
sub
sub
nop
cltd
cmp
lfs
andl
jae
std
xor
add
jne
pop
push
cltd
jmp
jg
mov
ds
xlat
sbb
lds
popf
pusha
xchg
xor
jecxz
jmp
jo
mov
test
push
jl
imul
cli
xor
rcrb
in
punpckldq
push
sbb
int
popf
jb
inc
cmp
cli
decb
mov
xor
sbb
lahf
aas
rorb
movsl
clc
sub
mov
jns
shrb
pop
sarb
cmp
xor
sub
lods
insl
stc
fcmovu
push
mov
and
mov
sbbl
insb
xchg
xchg
enter
testb
xor
and
fdivl
mov
data16
xor
icebp
or
je
mov
jl
pop
lret
in
and
sarb
popf
add
movsb
aad
xchg
mov
mov
ds
mov
cld
push
mov
inc
adc
dec
sbb
or
inc
stos
popa
sti
leave
in
mov
fldenv
jns
mov
add
xchg
pop
and
mov
aaa
out
sti
ja
jbe
lret
sub
mov
push
lods
xor
les
sub
incb
sbb
push
and
push
dec
cmp
mov
pop
or
cmp
cmpl
aaa
mov
notb
cltd
out
cmc
ljmp
mov
push
cld
cmp
jb
ret
pop
xor
pusha
sub
xchg
addr16
add
adc
mov
scas
mov
adc
inc
or
stos
push
aaa
inc
mov
mov
sbb
pop
jg
jbe
lods
shl
push
lods
xlat
and
push
imul
adc
ds
or
stc
lock
jnp
push
ror
adc
xchg
push
sbb
pop
push
xor
lret
jne
mov
mov
adc
or
aam
xor
aaa
stos
sub
cmp
mov
stc
test
shrl
dec
rcr
stos
int
jecxz
push
dec
fldenv
test
mov
push
pushf
xchg
and
cmp
bound
stos
ljmp
mov
insb
adc
sbb
and
push
push
cmp
shll
adc
scas
insb
out
into
dec
xor
out
hlt
lods
inc
aas
les
pop
mov
push
fistpl
push
sbb
in
enter
jle
in
pop
add
mov
sti
xchg
and
shlb
lcall
cmp
push
movntq
inc
or
aas
test
faddl
test
addr16
mov
subl
stos
loope
sub
inc
mov
add
xchg
dec
scas
pop
jmp
int3
sbb
xor
dec
mov
std
and
stos
dec
mov
mov
add
call
lret
jae
aam
sbb
cmp
pop
je
cwtl
aaa
mov
cltd
mov
adc
mov
cli
jmp
cmp
loope
cmp
sub
pop
jnp
mov
push
xchg
popf
lcall
rorb
sbb
out
jbe
cmpsl
pushf
jl
cwtl
add
mov
std
xchg
push
xchg
mov
jecxz
mov
out
sub
sbb
mov
sub
dec
rcrb
push
enter
push
mov
insb
imul
dec
jb
mov
adc
jo
ja
pushf
test
xchg
jle
test
in
push
fidivl
sarl
mov
mov
ds
lods
and
mov
mov
xchg
or
mov
add
inc
ja
test
pop
pop
mov
xchg
pop
loope
xchg
adc
mov
lock
into
dec
stc
mov
lods
add
sbb
rorb
insl
mov
aas
inc
dec
out
push
mov
inc
rcrl
xchg
or
fstpl
std
pop
cli
cltd
into
inc
or
movsb
add
cmovge
xor
jp
cmc
insl
sub
cltd
iret
daa
pop
aam
jmp
pusha
out
imul
mov
jmp
insb
cltd
or
dec
push
pusha
popa
js
mov
inc
in
lret
mov
bound
fwait
mov
adc
cltd
sbb
jne
inc
fdivl
repz
ficoms
fstl
jmp
cltd
imul
test
or
xchg
aam
mov
jp
xchg
mov
jmp
pop
or
fdivs
stc
out
push
jnp
add
cmp
cwtl
mov
pop
rol
adc
add
add
cmpsl
push
int
jnp
cli
lods
pusha
sub
out
shll
mov
cmp
add
les
add
nop
insl
cltd
cld
mov
sbb
mov
shr
inc
pop
mov
outsl
imul
sbb
sub
dec
leave
mov
cmp
imul
cmpsl
pop
xor
pop
cltd
scas
sub
jae
stc
mov
or
lock
cltd
es
aam
cltd
cs
push
mov
mov
cmpsl
shrl
fwait
das
jne
insb
aam
cltd
jg
add
cltd
test
push
js
stc
adc
cmpsl
frstor
xor
cltd
sbb
pop
ss
cltd
mov
sar
cs
les
lock
cltd
push
jne
nop
push
pop
mov
cmp
push
insb
add
out
xorb
repnz
sbb
cltd
jae
test
into
add
xchg
ret
cmp
cmpsl
and
or
adc
fwait
cld
testb
iret
cmp
mov
cltd
mov
xchg
cli
adc
dec
cmpsl
adc
push
mov
cmp
outsb
mov
inc
dec
fildll
jo
sbb
or
das
adc
push
std
lds
cltd
jp
cmpsb
stos
popa
aaa
cltd
fists
out
out
xor
stos
xchg
stc
push
sbb
imul
cltd
push
lret
fwait
inc
pusha
adc
push
or
addb
shll
xor
pop
xchg
push
sub
mov
and
cmpsb
pop
test
adc
loop
cmp
sub
sbb
stc
sbb
adc
lcall
movsb
in
arpl
loopne
push
jns
data16
cltd
mov
jno
or
or
jp
jge
jo
dec
fwait
pop
adc
inc
lods
arpl
xchg
xor
outsb
mov
rclb
adc
jecxz
stos
xchg
push
cli
mov
and
xchg
ss
in
shll
fcomps
sbb
fistps
ja
pop
cmpsb
push
mov
xchg
ss
mov
cltd
imul
cltd
inc
push
fisubrs
xchg
sub
cltd
and
bound
cltd
push
jne
ss
sub
lret
inc
cltd
mov
cmp
ret
mov
out
jmp
lret
fidivrl
adc
ficomps
dec
popa
arpl
cltd
fcompl
aas
nop
pop
mov
sbb
lcall
add
mov
mov
cmpsb
mov
ret
lock
add
int
push
push
or
and
jle
imul
pop
popl
jno
rorl
sbb
fidivrl
movsl
kaddw
cltd
je
pop
dec
mov
sbb
cmp
xchg
sbb
in
test
lcall
cli
and
inc
bound
pusha
mov
mov
pop
sbb
cltd
jbe
loop
cmp
lcall
fisubrs
cltd
daa
jg
push
dec
insl
ret
add
push
cltd
les
add
cmpsl
or
test
adc
xchg
push
and
hlt
push
cltd
cmp
lea
repnz
test
push
fistpl
or
and
mov
imul
testb
std
push
or
mov
dec
cltd
insl
out
sub
cltd
das
mov
dec
push
stos
add
test
and
sbb
shl
mov
mov
jbe
add
pop
scas
adc
stos
mov
cltd
daa
mov
cmpsl
jle
xchg
cltd
pop
jno
fimull
cwtl
clc
cltd
adc
cmp
push
and
add
jp
mov
repnz
add
pop
ljmp
insb
adc
jge
mov
mov
shlb
mov
ficompl
xchg
leave
insb
cltd
jp
dec
idivb
adc
aaa
in
mov
pusha
sbb
repz
stos
inc
ljmp
int
xor
ret
mov
stc
or
sub
in
addr16
test
aaa
mov
cmp
sbb
jge
aaa
cmp
mov
in
pop
test
pop
ret
xchg
std
jns
xchg
outsb
fs
pop
cmp
psubusb
cmp
cltd
pop
leave
inc
outsb
jo
cltd
add
xchg
adc
loop
jle
sbb
inc
push
mov
xchg
mov
push
ret
decb
mov
jg
mov
dec
cltd
mov
xchg
jb
scas
xor
jg
push
fwait
or
js
loope
cltd
cli
cmp
in
and
aad
lcall
jg
or
fmuls
outsb
mov
cltd
out
fcomip
push
out
push
cmpsl
cltd
insb
es
in
mov
lahf
daa
or
sub
mov
mov
into
dec
adc
fiadds
sub
jmp
adc
and
dec
in
or
pop
push
cltd
ss
insb
adc
jp
mov
mov
inc
pop
xor
cltd
hlt
movsl
cs
add
cltd
lods
mov
pop
mov
mov
cltd
pushf
mov
icebp
stc
nop
dec
inc
sbb
rclb
cltd
js
lea
and
into
cltd
xor
jns
dec
out
xor
iret
mov
out
call
pop
cmpsb
fistpl
scas
lahf
xchg
mov
dec
mov
fcoms
test
adc
aad
inc
mov
push
rclb
imul
mov
lea
int3
mov
movsl
mov
mov
or
fildl
lods
pop
scas
dec
cltd
pusha
sub
cltd
push
sbb
pop
pop
adc
cltd
scas
jne
dec
mov
arpl
xchg
or
jle
cltd
inc
mov
jg
xchg
dec
addr16
inc
test
cld
sbbl
stos
add
clc
mov
cwtl
mov
ret
aas
jecxz
int3
es
adc
je
bnd
in
mov
movsb
xchg
mov
out
push
shrl
add
jns
nop
adc
test
jmp
inc
rcl
mov
hlt
pop
incl
mov
mov
mov
sbb
popf
xchg
stos
aaa
mov
int3
cmc
pop
pop
sub
adc
ret
out
push
mov
test
shll
inc
sbb
cmp
lahf
pop
jmp
adc
add
popaw
js
lret
imul
sbb
or
cltd
mov
xor
test
iret
aaa
fwait
int3
jge
and
insl
cmc
xor
sbb
aad
inc
hlt
aam
mov
dec
mov
rolb
es
xor
add
jb
jnp
negb
ficoml
cltd
pushf
push
nop
cld
and
cltd
lds
add
push
sbb
fldcw
and
std
jle
fcomi
cltd
adc
pop
push
push
jge
cltd
or
lods
leave
subl
cmpsl
mov
fcomps
ljmp
stc
cmpsb
pop
xor
dec
or
mov
mov
cltd
jmp
pop
mov
or
cmpsl
jecxz
inc
push
fidivrl
dec
bound
dec
nop
pushf
cltd
mov
sbb
in
imul
inc
pop
je
leave
pop
mov
or
sti
mov
mov
fistpl
fs
mov
and
aad
popf
bound
sbb
mov
adc
mov
shrb
or
mov
nop
iret
inc
jb
cltd
sti
sbb
std
cltd
shll
fwait
clc
fwait
dec
adc
adc
lcall
les
cwtl
lcall
mov
mov
cltd
cmp
sti
rcr
outsb
add
xor
mov
pop
mov
insl
xchg
stos
mov
les
ror
lods
mov
lret
test
mov
sbb
std
cltd
mov
fistl
or
push
aaa
loope
sbb
or
inc
fisubrs
inc
test
pusha
leave
insb
das
xor
cmp
mov
xor
inc
rclb
je
cmp
scas
mov
insb
lods
nop
and
lcall
repz
movsl
push
nop
xor
cli
aad
jecxz
scas
push
scas
mov
dec
jp
inc
jmp
dec
cmp
outsb
mov
inc
bound
adc
mov
jne
cmpsl
mov
sbb
outsb
sbb
movsl
in
jo
outsb
xlat
pop
lock
mov
cmp
inc
lret
bound
and
push
ret
pop
dec
cli
sbb
push
in
mov
daa
pop
xlat
insb
add
push
loop
push
jg
dec
test
insl
cmp
push
rclb
push
cld
loopne
dec
mov
mov
sub
leave
stos
sbb
movsb
sbb
pop
inc
cmc
sub
cld
mov
fxch
dec
outsb
nop
sub
fwait
ret
shrb
aam
push
pop
cmp
or
sub
mov
cmp
push
push
scas
insb
dec
sub
inc
sub
xchg
push
sbb
mov
pop
outsl
mov
push
fiaddl
jmp
xchg
fstl
pop
insb
and
addr16
mov
and
mov
mov
popa
cltd
rcrl
insb
sbb
or
mov
pop
nop
movsb
or
sarb
lds
idiv
and
or
push
and
xor
adc
cmpsb
fcmovnu
call
insb
fwait
imul
dec
insb
jle
inc
inc
cmpl
add
push
cwtl
mov
sahf
ret
adc
sbb
pushf
and
or
adc
out
sub
lcall
andb
insb
cli
jp
or
icebp
scas
insb
int3
loopne
inc
push
sbb
fsubs
xor
mov
loope
sbb
sbb
xchg
imul
lods
clc
inc
pop
xchg
pop
les
mov
pop
pop
pop
pop
stos
das
imul
push
aaa
out
mulb
push
mov
mov
test
cmp
inc
push
xor
cmp
xchg
sub
shlb
mov
push
sub
xchg
in
mov
push
fcomps
adc
inc
cmp
xchg
mov
pop
mov
add
lods
shrl
fsubl
dec
jecxz
inc
push
jmp
mov
xor
insb
adc
mov
jecxz
jp
lcall
pushf
test
jbe
push
fwait
arpl
loope
imul
lea
sub
popf
add
pop
and
push
sbbb
xchg
dec
cmp
xor
xor
in
insl
sub
cmc
pop
jecxz
arpl
jg
cmp
cli
imul
inc
mov
pop
cmpsb
fincstp
mov
mov
aad
rcl
jp
sub
push
test
dec
or
iret
mov
inc
jb
adc
sbb
aam
aas
mov
add
out
ficoml
scas
fstl
pop
push
ficoms
sti
mov
fsubrs
out
jecxz
pusha
push
sub
inc
and
cmpsl
mov
cli
dec
dec
lcall
jecxz
stos
sub
fucomp
and
dec
jnp
lock
andl
and
cld
push
cltd
add
xchg
add
pop
lea
leave
rcll
add
cmp
push
adc
sti
inc
xchg
cmc
cmovl
mov
xchg
in
mov
push
mov
push
das
into
cmp
mov
les
mov
xchg
mov
jno
sbb
mov
fsubr
mov
sti
adcl
adc
add
xor
jno
lea
lods
jle
or
dec
subl
loopne
imul
jg
stos
pushf
add
subl
pop
lock
ljmp
ficompl
adc
sahf
push
stos
xchg
xor
test
sbb
popa
ror
and
daa
int3
dec
add
mov
ss
or
movsl
mov
cmp
mov
pop
cli
std
mov
xchg
scas
xchg
imul
mov
out
or
mov
dec
push
mov
in
sbb
inc
shl
adc
or
incb
in
cmpl
hlt
inc
jb
aas
clc
jmp
jle
xchg
xor
stos
std
dec
lock
imul
pusha
loope
mov
mov
sti
mov
outsl
sbb
jp
insb
imull
loopne
sahf
mov
popf
outsb
sbb
imul
mov
jb
mov
mov
xor
push
movsb
xchg
jg
jne
mov
sbb
imul
xor
insl
add
add
mov
imul
mov
popf
mov
jecxz
pop
out
fisubl
es
call
mov
out
push
xchg
out
xchg
ffreep
and
jno
jbe
aam
lret
xchg
add
cltd
bound
push
fsubrp
sbb
daa
jecxz
or
loope
inc
mov
sbb
xor
or
fstl
call
xchg
cld
repz
and
jle
xchg
or
call
jne
push
std
out
lea
mov
cmc
stos
int3
sbb
mov
daa
pusha
cltd
jecxz
fs
mov
mov
fwait
idivl
pop
test
cltd
cs
loope
fucom
xor
xlat
sbb
xchg
xchg
imul
pop
jbe
cmp
sbb
negl
mov
inc
xor
mov
adc
pop
adc
jecxz
std
adc
out
jge
leave
pop
movsb
inc
inc
lahf
and
cmc
pop
aad
push
pushf
and
clc
es
cltd
mov
xor
adc
adcl
and
arpl
lods
mov
lahf
dec
pop
imul
add
cmc
sbb
icebp
push
rclb
adc
and
cmpsl
xchg
mov
cli
repnz
cmpl
fsubs
mov
popa
xchg
mov
cmp
inc
xor
mov
fnstsw
mov
and
sahf
mov
add
mov
jp
lcall
rolb
aaa
call
loopne
test
mov
loope
aam
cltd
lods
lahf
add
notl
xor
and
stos
adc
movsl
arpl
sti
cwtd
cli
mov
pusha
lock
push
dec
cmpsl
clc
aad
repnz
cli
xor
hlt
mov
pop
negl
xorb
xor
rcrl
mov
lcall
test
cltd
in
dec
dec
mov
stos
mov
mov
add
fwait
test
jb
jecxz
adc
stos
les
punpckhwd
add
sahf
in
fwait
mov
xchg
and
xor
fcomi
lret
mov
xchg
ror
inc
mov
shll
mov
ja
sbb
lahf
lds
dec
js
pop
dec
lea
jg
jo
gs
mov
pusha
test
aad
mov
sbb
xor
test
xor
jmp
xchg
xchg
fistl
aam
cltd
aaa
das
fs
div
cltd
int3
add
mov
test
mov
cmpsl
enter
negl
mov
fs
or
xchg
subl
inc
int
repnz
cltd
fiaddl
loop
mov
icebp
push
pop
cmp
imul
int3
cld
cltd
out
add
pavgw
mov
js
cmpsl
mov
xchg
push
fwait
adc
and
cmp
aad
sbb
imul
rcrl
mov
in
adc
setp
fwait
data16
imul
sbb
cmp
push
xchg
daa
cltd
hlt
test
test
mov
inc
int3
adc
cmp
sti
sub
push
mov
sbb
cmpsb
mov
xorb
in
fstpl
dec
ficoms
lds
in
jp
js
mov
add
scas
jbe
loopne
lcall
xor
push
pop
sbb
les
jp
jne
cmp
and
sub
add
ds
cltd
push
out
mov
push
aas
add
mov
inc
push
sub
nop
mov
cltd
jle
xor
adc
sbbb
insb
mov
lock
inc
loope
dec
cwtl
cltd
stos
ja
in
dec
lods
scas
inc
cltd
jnp
xor
xchg
imul
and
lcall
cltd
cld
out
inc
aaa
and
repz
lcall
and
mov
dec
add
xor
aam
ds
ret
and
insb
ss
mov
lds
sub
shll
pop
jp
mov
lcall
cltd
fs
mov
std
xorps
mov
fadds
and
mov
test
mov
repnz
jge
mov
push
adc
fwait
mov
sbb
or
or
pushf
xlat
push
movsb
xor
dec
loop
mov
mov
add
repnz
or
fistps
pop
pop
inc
or
fstps
mov
mov
test
in
pop
add
repnz
mov
scas
sub
pop
in
lahf
les
popf
cli
jne
or
nop
test
insb
mov
std
lcall
mulb
jbe
stos
adc
dec
and
mov
jmp
repz
sub
mov
jp
aam
jl
sarl
and
push
std
lods
inc
pop
mov
mov
sbbb
cmp
jb
dec
popf
xchg
rcr
out
inc
push
popf
pop
insb
push
adc
out
aad
push
sbbl
cmp
cltd
lods
cmpsb
cmp
xor
mov
jge
hlt
lock
mov
xor
lea
lods
mov
lcall
ljmp
cltd
test
add
pop
and
loope
and
dec
rorl
cmpsl
ret
cltd
ds
ljmp
xor
out
xlat
out
cltd
xchg
push
mov
jnp
jle
lahf
or
lcall
loope
bound
xlat
and
pop
lahf
add
xchg
stos
cmp
cmp
jmp
mov
lret
dec
sub
push
cltd
mov
xchg
repz
dec
and
push
adc
pop
lods
xchg
cltd
mov
pop
or
mov
cmpsl
arpl
lret
cltd
xor
push
pop
xor
in
mov
mov
lods
inc
loop
cltd
aaa
dec
push
mov
in
leave
ret
dec
add
xlat
clc
mov
dec
in
or
cltd
nop
pop
test
aam
cltd
dec
cmp
inc
or
mov
push
cltd
xchg
jmp
ljmp
pop
lods
push
repnz
out
or
lods
lcall
add
fwait
mov
subl
jnp
mov
fsub
or
dec
loop
lcall
jns
cmp
adc
xorl
mov
leave
xchg
xchg
adc
cmpsl
arpl
sbb
stc
movsb
outsb
xchg
jb
cltd
jb
stc
pop
add
rcrb
add
mov
adc
sub
adcl
test
pop
xchg
push
pop
fwait
mov
pop
lcall
fs
inc
lods
movsb
rolb
mov
push
xchg
insb
shll
cwtl
push
into
orb
cmp
mov
sbbl
insl
jae
cltd
sbb
aam
flds
sbbb
pop
notb
jbe
bound
and
jne
insb
shl
stc
lock
sbb
xchg
jge
inc
daa
push
das
mov
cltd
out
mov
cltd
pop
sbb
sub
stc
aad
addr16
loop
mov
cs
pop
inc
jns
adc
add
cltd
inc
mov
into
sbb
jb
cs
out
fmul
imul
fwait
addb
jl
sbbl
mov
inc
pop
lcall
insl
lods
fstps
mov
in
inc
fwait
xor
mov
faddl
jp
dec
pop
popf
xchg
rcrb
adc
sub
into
mov
pop
xchg
and
inc
or
icebp
add
pop
xchg
mov
inc
xchg
pop
mov
pop
mov
lret
jns
pop
les
cltd
stc
icebp
cs
push
push
in
ret
sti
sub
stos
or
dec
sahf
mov
pushl
js
jp
xor
xor
xchg
or
popa
mov
cltd
jg
sbb
or
jne
cltd
cmp
int3
pop
mov
push
push
mov
out
hlt
clc
pop
add
mov
loope
pop
cltd
xor
ficomps
cltd
cwtl
subl
xchg
in
mov
cmp
lcall
cmp
xchg
pop
cmc
cmp
lret
stos
lret
cltd
mov
paddw
adc
jle
jno
pusha
insl
pop
data16
cmp
jo
cmpsl
pop
or
sbb
xor
xor
lahf
push
xchg
mov
pause
sub
push
dec
adc
sub
test
jne
xchg
jmp
sbb
iret
push
inc
movsb
dec
cltd
rcll
addb
mull
insl
mov
cltd
cld
sbb
adc
cmpsl
fcompl
xor
pop
inc
cwtl
jnp
fwait
loope
cmpb
leave
inc
mov
int
ja
shl
pop
pop
popf
lret
xchg
out
sbb
pop
ss
popf
push
add
and
xor
movsl
and
lcallw
stc
pop
imul
repnz
xor
sbb
pop
mov
sbb
pop
add
daa
pop
jnp
leave
loopne
sbb
sbb
ficomps
fwait
pop
sahf
inc
mov
push
ss
and
shll
sbb
cld
cmp
cltd
lcall
and
add
pop
add
xchg
pop
cltd
jecxz
pop
addr16
dec
mov
rclb
pushf
and
pusha
jge
stos
in
aam
dec
cltd
not
jecxz,pn
mov
xchg
sbb
xlat
out
fwait
movb
sarl
cmc
cltd
mov
dec
jg
int3
cltd
sbb
outsb
add
out
mov
icebp
push
addr16
and
orl
pop
xchg
sub
jnp
cltd
sarb
movsb
cwtl
movb
pop
lahf
cmp
loopne
aaa
and
nop
loope
into
cwtd
call
mov
push
cli
fimuls
fsubr
stos
pop
pop
in
lods
ret
xor
out
jp
addr16
test
mov
sbb
pop
xchg
jnp
stos
rcrl
std
adc
ret
das
lahf
adc
lcall
push
cmp
movl
jecxz
inc
sbb
stos
mov
scas
xor
mov
mov
gs
cltd
and
add
xor
mov
out
push
sub
xchg
cltd
push
or
mov
cltd
cmp
mov
push
fwait
insb
pop
es
xorb
fimull
in
fwait
sti
mov
int3
mov
pop
andl
fwait
cwtl
stos
push
ljmp
cltd
iret
dec
sbb
pop
lcall
cmp
std
lret
jo
loop
sti
jg
rcl
lahf
mov
xor
inc
aam
out
inc
lahf
cmp
jge
push
mov
cli
xchg
cs
xchg
inc
repz
jl
push
sub
in
orb
div
in
stos
adc
cmpsl
int
mov
push
jb
lea
lcall
pusha
adc
push
lcall
enter
inc
das
out
loopne
add
mov
inc
rcrb
or
cmpsl
adc
xor
xor
popf
dec
or
test
fisttpll
out
dec
pushf
lret
js
sbb
xor
cmp
fs
and
ret
stos
test
xrelease
loopne
dec
dec
xchg
sub
fsubrl
fiaddl
lea
cltd
dec
or
nop
fiadds
pushf
mov
mov
movsl
sub
mov
jnp
mov
in
xchg
xor
cltd
clc
out
lods
pop
jle
cwtl
mov
scas
inc
dec
cld
andl
loope
xchg
jns
lods
lcall
mov
add
mov
mov
call
mov
addr16
mov
pop
mov
fwait
pop
cmp
xor
pop
mov
stos
adc
jle
cmpsl
std
adc
iret
loope
lcall
push
pop
cltd
mov
cld
cmpsl
into
aad
jae
sbb
jecxz
lahf
mov
cltd
push
jne
sub
nop
push
mov
mov
or
jo
lret
push
and
or
incl
and
arpl
movsl
dec
mov
sbb
and
outsl
xchg
subb
std
popf
cld
push
adc
inc
cltd
mov
lods
icebp
ljmp
lcall
fildl
xchg
cs
mov
mov
iret
and
lret
das
mov
dec
data16
in
sbb
sub
stos
mov
popa
lods
sahf
push
jge
push
pop
pop
imul
sub
cwtd
ret
scas
xchg
addr16
or
jne
movsl
lcall
cltd
outsl
mov
xor
dec
pop
cld
sub
sahf
cltd
mov
sub
push
lock
xchg
cltd
push
fcoms
sub
out
lcall
popf
cmpsl
cwtl
cmpsl
pop
cltd
es
fistps
imul
jle
add
mov
rol
mov
imul
xor
cltd
subb
orb
ret
xorl
mov
push
in
mov
mov
testl
rcrl
fldl
cltd
ret
pushf
push
rcrb
js
rcrl
scas
mov
imul
pop
cltd
xor
addr16
mov
fwait
inc
imul
push
mov
out
das
push
inc
into
stos
push
arpl
int
lds
jp
xchg
xor
dec
mul
ret
cli
jecxz
out
aaa
neg
rcrb
inc
in
jecxz
jle
push
out
or
push
jle
cmovg
and
out
sbb
mov
add
sbb
xchg
ret
aas
sub
hlt
or
inc
cmpsb
mov
and
lods
in
fnstenv
jo
jl
cmp
lahf
and
dec
mov
lret
lahf
imul
cmp
cmp
repnz
into
jbe
pushf
test
repnz
add
xlat
aam
leave
sub
out
sbb
xchg
ja
xchg
and
cmc
stos
or
xchg
enter
dec
cltd
ljmp
fdivl
pop
test
cltd
inc
push
ja
fistpl
xchg
cld
aam
inc
mov
inc
cltd
daa
fldt
pmovmskb
ss
shrb
imul
in
inc
pushf
add
push
sub
pop
lea
mov
dec
cwtl
cli
rcr
add
das
orl
inc
popa
lcall
cltd
cmp
sbb
pusha
jmp
jle
jge
sub
ljmp
loop
mov
fnstcw
shll
push
xchg
lods
in
and
and
cltd
and
xchg
adcl
add
lahf
popf
shll
or
adc
jg
cltd
ss
push
mov
lahf
inc
cltd
out
mov
out
sub
movsb
loop
dec
xchg
dec
aaa
sbbb
into
xchg
ficompl
mov
sbb
cmpsb
ljmp
mov
dec
mov
cltd
cmpl
adc
repz
loop
jp
mov
out
mov
fstpl
out
cltd
in
out
inc
cmpsl
jae
cltd
sub
xor
push
cltd
pop
in
popf
popa
or
ud0
lods
cmp
mov
inc
mov
cmpsl
push
cltd
leave
mov
xor
or
mov
cltd
das
ret
out
jno
cltd
sbb
enter
cmp
lahf
and
mov
addl
cmp
and
out
jne
inc
stc
add
hlt
add
add
test
cltd
outsb
jecxz
dec
imul
dec
jne
xor
cmpsl
cltd
cwtl
mov
ficoms
pop
psubd
mov
into
in
inc
sub
popf
out
negl
faddl
cltd
or
pop
dec
cmc
mov
pop
cltd
iret
dec
mov
into
cs
cltd
test
cmp
cltd
fidivs
lea
xchg
rcr
insb
cltd
pop
mov
sub
sub
inc
push
cmp
out
sbb
cmp
fwait
insb
push
arpl
wrmsr
cltd
jp
push
cld
pushf
or
cltd
mul
movsl
or
sub
mov
rol
ljmp
or
xchg
cltd
dec
cmpsl
ficoms
icebp
mov
repz
or
sub
xor
cwtl
mov
lods
rcl
jae
scas
fbstp
negb
cwtl
lds
mov
daa
jmp
test
pop
adc
cltd
jb
fwait
addr16
adc
cli
aam
movsl
sbb
rolb
insl
repz
jmp
push
mov
cltd
push
inc
arpl
and
std
lea
lods
mov
pop
shll
shrb
out
cmpsl
adc
jp
pop
test
cmpsl
sub
cmp
cltd
sbb
clc
orl
cltd
xchg
repz
pop
or
pop
fs
mov
orb
mov
push
cltd
push
and
cmc
xor
cwtl
fistps
inc
mov
or
std
dec
pop
jecxz
into
aad
jle
pop
mov
pop
and
xchg
idivl
popa
mov
jmp
jl
jb
testl
lods
loope
fwait
lea
in
xchg
iret
jle
clc
rcrl
mov
mov
outsl
xchg
cltd
insl
push
in
in
js
cltd
adc
inc
xor
and
stos
push
ret
test
sub
cmp
cltd
and
add
jp
cltd
leave
inc
fisubrl
test
ret
xchg
push
mov
adc
mov
inc
rcrb
in
xchg
movsb
cltd
arpl
rorb
or
adc
jmp
mov
adc
jbe
xorps
in
fwait
inc
push
mov
pop
mov
ljmp
mov
cld
push
jl
cltd
pushl
call
cltd
fildl
aaa
sub
sub
and
inc
fwait
xchg
das
cltd
iret
sub
pop
jmp
jecxz
jno
cltd
xchg
out
scas
adc
inc
mov
stos
sbb
push
cltd
sub
xchg
xchg
invd
cmp
cltd
js
notl
ds
arpl
mov
loopne
mov
add
sahf
ds
aam
sbb
ficompl
cltd
js
pop
aas
ljmp
cmp
sti
cltd
sbb
sub
jle
pop
aad
icebp
push
cwtl
sbb
out
and
xchg
iret
dec
or
stc
fwait
aad
mov
cltd
pop
lcall
scas
sub
xchg
cmp
cmp
jle
in
cmpl
pop
inc
hlt
sub
push
rcll
cwtl
fcompl
mov
cltd
out
addb
jmp
imull
push
in
or
sbb
mov
mov
sbb
jmp
andb
fwait
cltd
stos
gs
imul
push
mov
cmp
jne
mov
ds
lcall
ss
and
jmp
xor
adc
loope
lcall
cmp
shlb
cld
push
jnp
enter
or
in
divb
cli
mov
and
jle
inc
fwait
xchg
pop
scas
insb
stos
push
fsts
test
sub
mov
rcrl
inc
cltd
fcoms
and
js
sbb
cltd
and
repnz
das
leave
cmp
cltd
xchg
jbe
pop
xor
jl
enter
or
mov
aaa
inc
push
mov
add
lea
xchg
sub
and
xor
mov
fwait
test
sbb
ffreep
paddb
push
cmpsb
push
xor
or
cltd
adc
sbb
stc
jmp
rcl
cmp
adc
mov
fmulp
icebp
push
sub
dec
mov
xchg
xchg
dec
sbb
jecxz
cmp
add
cltd
stos
mov
mov
cmp
pop
scas
mov
mov
fsubl
inc
jge
cltd
pop
xor
dec
cmpsl
lahf
movsb
xlat
mov
lcall
push
test
test
push
dec
in
and
pop
jns
push
scas
ds
loope
add
inc
ja
in
lock
je
jo
cmc
fs
xlat
sbb
xor
jp
scas
loope
test
cltd
cli
lahf
gs
cwtl
iret
push
jmp
sbbb
aad
add
cmp
into
nop
xchg
xchg
loop
inc
jnp
lret
fldcw
jb
sbb
mov
or
push
or
inc
lcall
lods
sbbb
gs
mov
xor
inc
push
test
xlat
stc
mov
ds
aas
cmp
cltd
pusha
es
cld
xchg
add
cltd
xor
ljmp
sahf
movsb
cltd
or
and
ud0
lahf
cs
fisubl
or
dec
ds
jnp
adc
jg
or
add
xlat
push
fcompl
das
mov
cltd
lcall
and
push
pop
mov
inc
lea
jp
cltd
fdivrl
jbe
in
jae
xchg
dec
inc
fistps
mov
andl
aam
lahf
sbb
fmull
iret
and
out
dec
pop
mov
mov
jle
cmpsl
mov
cmp
sbb
push
psrad
cltd
and
add
xlat
int3
test
sbb
lea
jns
insb
addb
mov
xor
in
and
jno
sub
lcall
jnp
ds
pop
popa
and
pop
cmc
xor
sbb
cwtl
cmp
inc
lock
xchg
or
cltd
sub
mov
cltd
loopne
mov
jno
les
mov
mov
dec
sub
lea
sti
mov
and
jbe
pop
fisubrs
lds
aam
add
iret
cltd
jl
shrb
cltd
dec
in
loopne
inc
mov
cltd
rcrl
sub
cltd
adcl
or
lahf
outsl
ret
xchg
mov
cmc
rcll
inc
aam
mov
hlt
fs
aad
inc
pop
rclb
fisubrl
mov
fwait
mov
mov
sbb
push
pusha
mov
cwtl
cmp
pushf
inc
rcrl
insb
inc
add
jbe
mov
test
rclb
lods
popf
jle
cmp
test
rcrb
leave
pop
push
ja
cmp
mov
in
shrb
cmp
pop
rolb
test
add
cld
popa
lea
dec
cmc
subl
cmp
inc
aam
pop
sbb
cltd
iret
int3
inc
jno
jnp
sub
dec
cmp
stc
fiadds
cltd
mov
push
mov
fimuls
push
xor
lea
mov
xor
pushf
sarl
lcall
pop
aam
push
insb
xchg
lret
and
out
stos
sub
adc
mov
push
xor
sbb
out
cltd
sub
sbb
mov
mov
fpatan
mov
pusha
sbb
adc
icebp
push
sti
outsb
pop
mov
out
imul
shll
aam
popf
int
xchg
icebp
movsb
icebp
inc
add
and
jb
test
inc
bound
xchg
and
inc
push
sub
mulb
nop
fldt
mov
sub
adc
stc
gs
dec
xlat
adc
and
mov
in
cltd
int3
and
mov
or
cmp
add
insb
adc
movl
or
dec
mov
mov
xlat
xchg
mov
lcall
lahf
cmp
push
cmp
sbb
cltd
movsb
popf
imul
and
lock
out
les
in
lret
mov
cmp
or
xchg
jo
movsl
jne
inc
rclb
out
icebp
pop
outsb
shufps
jle
mov
push
je
sbb
cltd
std
lret
in
fcmovne
jbe
cmpsl
cmpl
pop
add
mov
cltd
imul
pop
test
cltd
inc
lock
lods
mov
insl
rol
js
adc
jno
mov
sahf
ret
add
push
mov
or
push
jle
dec
movsb
sub
sbb
data16
or
cltd
lods
and
ficoms
pushf
cltd
nop
in
adc
shll
rcll
adcb
adc
ljmp
comiss
enter
lcall
jmp
mov
fisubs
mov
xlat
aaa
push
xor
push
inc
pop
cltd
test
mov
xchg
insl
push
cltd
add
dec
jne
in
push
int3
test
dec
sub
lock
cld
jb
or
imul
xchg
pop
sub
leave
push
imul
and
push
mov
popf
cmp
adc
ret
mov
aam
cmp
addr16
jb
jbe
pop
adc
popf
mov
sbb
xchg
cltd
lahf
fstpl
adc
add
jne
lahf
dec
aas
jb
pushf
jecxz
pop
fistps
jae
xor
pop
sbb
or
mov
mov
push
push
fwait
xor
push
fcomps
popa
scas
nop
xchg
cltd
push
xchg
lods
sbb
jp
pop
rorl
mov
jecxz
push
jo
stc
gs
push
adc
pop
fwait
pushf
cltd
outsl
loopne
fisttps
adc
ret
pop
test
dec
sbb
pop
test
lret
inc
test
inc
cmp
negb
ljmp
fwait
cmp
ret
fsubs
mov
and
andb
push
cmp
lcall
cwtl
aad
in
pop
add
dec
jg
push
mov
cltd
xor
mov
xchg
jp
scas
mov
cltd
adc
std
add
cmpsl
push
jmp
mov
push
int3
and
sub
add
sub
adc
ret
lods
sti
mov
scas
sbb
jns
cmp
gs
pusha
cmc
mov
ds
pop
pop
mov
bound
adcl
pop
mov
mov
ficompl
fwait
xchg
rorb
pop
fwait
jecxz
sbb
out
stos
ja
lods
cltd
dec
mov
cmp
jecxz
les
shlb
sbb
mov
dec
pop
scas
sub
enter
or
pop
sbb
cmpsl
add
mov
je
stos
sbb
pop
cwtl
mov
push
gs
fists
add
mov
sub
mov
mov
lahf
adc
sbb
push
leave
or
add
stc
outsl
or
arpl
mov
fwait
sbb
test
push
test
test
scas
arpl
inc
jne
ret
repz
cltd
and
jecxz
cltd
sub
fmul
push
or
add
sbb
movsl
ss
fdiv
mov
fwait
push
cli
push
pop
repnz
cmc
mov
test
cmpsl
shlb
mov
lahf
pop
mov
js
sbb
adc
cltd
ret
mov
xchg
pop
and
cld
icebp
inc
mov
fsub
jnp
in
push
mov
push
xor
cltd
sbb
or
adc
pop
jns
mov
in
dec
popa
or
pop
test
xchg
dec
int3
xor
mov
jmp
shll
mov
sbb
cltd
mov
inc
mov
stos
mov
js
xchg
sub
and
sbb
ss
ljmpw
negl
in
lcall
lods
mov
bound
mov
mov
scas
cltd
xor
test
cltd
imul
movsb
push
sbb
xchg
mov
push
out
mov
cld
cmp
sub
add
push
inc
movsb
sahf
cltd
xor
jle
jb
lds
hlt
clc
adc
pop
xchg
lcall
cltd
and
cmpsl
fisttpll
adc
rcrl
sbb
push
jnp
and
mov
pop
lcall
push
in
lret
sbbb
pop
iret
aas
cltd
sub
aam
jl
lock
sbb
mov
pop
divb
lcall
dec
push
movsl
mov
out
stc
int
jne
roll
sti
jp
cmpsl
fldpi
jbe
popa
cmp
mov
pop
adc
std
cwtl
jo
ds
mov
push
jae
xchg
fs
sub
test
outsb
mov
repz
nop
cwtl
addb
adc
xchg
or
aad
cwtl
rorl
outsb
and
in
or
mov
imul
push
inc
jle
pop
adc
sahf
fwait
nop
sbb
out
jno
mov
addr16
aam
inc
mov
inc
cli
rcrb
enter
mov
leave
mov
cltd
cld
rcr
pushl
xchg
xchg
cmpsl
and
and
das
push
mov
jae
cltd
mov
mov
sarl
cltd
xor
lds
xchg
cltd
movsl
int
xor
xchg
imul
mov
xchg
ja
aas
leave
push
stos
or
or
xor
pop
pop
inc
shl
adc
fimull
xchg
sti
cltd
cmp
cwtl
fcoml
dec
subl
daa
or
das
cltd
mov
inc
mov
cltd
jne
lock
pop
ja
mov
jp
pop
sbb
popl
scas
push
inc
sbb
and
cmp
xchg
add
lahf
loopne
mov
push
jl
xchg
jnp
pop
inc
les
test
dec
mov
inc
pop
push
iret
lcall
hlt
setne
cltd
dec
sub
loop
or
cmp
lock
ja
data16
les
add
lcall
push
mov
sbbl
daa
mov
xchg
popf
lahf
push
add
insl
mov
rorb
cmpsl
fwait
inc
decb
sti
cmp
mov
add
incl
mov
adc
xor
mov
addr16
test
fld
mov
adcl
lret
mov
push
cmp
inc
ret
xchg
xchg
icebp
or
bound
inc
adc
pop
dec
lea
mov
mov
mov
mov
sbb
rorb
fwait
sti
jno
cmp
loopne
std
cmpsl
push
adc
ficomps
cltd
jmp
or
xlat
popf
outsb
xor
pop
fildl
cwtl
imul
cmpsl
inc
ret
cmc
lea
lcall
out
mov
ror
adc
lahf
shufps
xor
push
push
cltd
mov
jo
cli
cltd
cmpsb
xor
cmp
hlt
push
in
pop
xchg
or
rcll
sti
push
add
data16
push
add
cltd
lea
jne
pop
scas
cltd
pop
mov
shl
lods
mov
xchg
pop
pop
gs
aad
stos
push
sbb
and
adc
xor
lods
jg
push
insb
mov
cltd
pushf
jno
lahf
shlb
rcll
into
pushf
mov
mov
push
mov
in
and
jl
jle
mov
fistpll
sub
ljmp
movsb
fstpl
sbb
cltd
jecxz
push
or
pop
stc
rcrb
data16
inc
idivl
gs
jnp
push
sbb
pmaxsw
sahf
push
add
test
jmp
lret
imul
test
int3
mov
xor
mov
xlat
push
pop
sbb
inc
into
cmc
push
int
cltd
inc
call
pop
clc
mov
pop
movsl
fwait
xchg
lds
or
pop
sti
stos
add
es
fldln2
and
xchg
cmpsl
push
or
out
ror
je
xchg
mov
repnz
sub
cltd
adc
push
add
cmp
stos
push
nop
in
cltd
sub
mov
inc
cltd
inc
or
outsb
rcrb
mov
sbb
cltd
gs
lret
dec
pop
pop
jns
add
stos
mov
sarb
mov
ret
xchg
dec
push
in
icebp
pop
cmp
out
and
mov
addr16
push
in
mov
orl
sbb
add
cwtl
mov
jp
jl
cmpsl
fldenv
sbb
stc
or
test
xor
pop
leave
negl
loopne
rcrl
mulb
push
xchg
lcall
sub
dec
hlt
mov
popf
ss
mov
push
xchg
lret
out
sub
inc
push
push
lds
or
shrl
mov
cmp
popl
popa
jo
cli
stos
sbb
in
dec
jo
mov
push
and
add
sub
imul
jne
push
pop
sbb
push
and
sbb
cltd
jne
iret
ss
cmpl
bound
pop
mov
push
cmp
rcrl
jl
ficoms
negl
aas
cmp
jno
popf
insb
mov
aam
imul
adc
push
xchg
mov
inc
rorb
jmp
shl
mov
imul
jle
out
ja
je
and
cmp
scas
mov
and
sbb
lcall
insb
or
adc
aad
inc
stc
or
push
adc
aaa
fidivrs
shll
rclb
mov
lods
inc
inc
sub
xchg
popf
pop
stc
loop
fwait
push
adcb
sbb
dec
push
inc
js
mov
mov
or
cmp
jl
dec
pop
loope
orb
scas
aas
addr16
inc
cmp
rorl
rcll
clc
jp
mov
adc
sbb
cmp
push
pop
sub
lret
bound
xlat
push
imul
cwtl
fdivl
in
xor
pop
sti
xchg
mov
daa
stos
dec
mov
cld
test
addl
and
add
scas
lods
push
test
and
movsb
cmp
insb
pop
xchg
aas
inc
cmovbe
pop
mov
jnp
fsubrl
rcrl
icebp
adc
ljmp
fmul
mov
pop
notl
in
push
and
pop
imul
outsb
outsl
cmp
aam
xchg
aaa
aam
sub
and
js
xor
popf
mov
fnstcw
add
mov
jns
adc
inc
cltd
add
or
sub
addr16
push
sbbl
lret
pop
push
sbb
fdivr
jbe
sub
xchg
in
adc
sub
push
mov
lock
repz
pop
jnp
pop
cmc
stos
jp
shr
test
cltd
lcall
repz
mov
lcall
pop
sub
pop
lds
sbb
lods
das
lods
cmp
dec
inc
push
mov
jo
subb
cmp
lds
leave
sbb
adc
repz
xchg
sub
jnp
mov
add
fiadds
sbb
xchg
mov
insl
test
push
adc
or
out
sub
cmpsb
into
xchg
movsl
lcall
or
mov
test
test
pop
je
mov
jge
cltd
fdivr
popf
mov
in
or
inc
movsl
lret
dec
fcmovb
inc
hlt
mov
outsl
adc
sbb
cltd
mov
inc
movsb
and
and
ss
mov
cltd
pop
scas
sbb
adc
lods
mov
mov
xlat
jb
jae
lret
sahf
fwait
in
cmp
cmc
lcall
xchg
xchg
subb
push
or
or
mov
and
inc
mov
int3
sbb
adc
fnstenv
add
jo
pop
push
sahf
pop
cli
sub
pop
cmp
xchg
adc
inc
push
lret
daa
fwait
xor
cmc
adc
jl
fs
js
mov
lahf
shrb
or
pop
xchg
stos
mov
mov
dec
fsubr
and
cmpsl
pop
push
test
pop
rol
cmpsb
add
mov
rcrl
mov
xor
mov
hlt
xchg
sarb
mov
fidivs
movsl
mov
icebp
mov
pusha
mov
lret
lcall
sub
sub
sub
xchg
pushf
lret
xchg
xlat
xor
xor
lahf
and
sar
adc
push
push
and
negl
fnstenv
inc
lcall
les
or
std
mov
inc
jle
push
sbb
mov
outsl
fbstp
and
shl
ds
and
cltd
outsl
mov
xor
mov
dec
pop
sbbl
push
divb
insb
cli
and
fwait
xchg
sbb
enter
mov
cltd
lods
insb
push
divl
pop
xchg
cltd
test
or
cltd
call
addr16
aad
nop
in
adc
sbbl
daa
in
popa
xchg
xchg
cltd
mov
dec
and
mov
mov
stc
fsts
sbb
lcall
int
xchg
iret
fcomi
std
mov
stos
fwait
mov
sahf
xlat
daa
adc
sbb
gs
loope
je
xchg
push
into
xchg
imul
ficompl
xchg
xor
movsl
out
xor
sub
aas
int
cltd
jecxz
aam
push
pop
rcrb
popa
inc
push
rcll
clc
cltd
jbe
fs
sbb
mov
dec
sahf
xchg
shll
cltd
mov
icebp
sub
sub
mov
xchg
int3
cmp
adc
das
call
hlt
or
pop
insl
int
cs
mov
lods
mov
cmpsl
xlat
mov
cmp
repnz
out
inc
pop
mov
fdivrs
loope
notl
pop
fstpt
cltd
cs
jecxz
out
xchg
xchg
adc
ret
jmp
cltd
xorl
push
cmpsl
xchg
push
fiadds
sahf
pop
cmpsl
xor
mov
cltd
or
popf
jb
mov
dec
pushf
xchg
ret
sbb
faddp
incb
inc
xchg
mov
dec
ret
rcll
ficomps
lcall
inc
xorl
push
add
rep
xor
mov
in
pop
in
popa
aad
xchg
cltd
dec
insb
inc
adc
stos
sbb
loopne
or
jne
shr
cltd
outsl
fmuls
sbb
jge
add
test
mov
push
repz
decb
cltd
sub
insb
add
shlb
xchg
rcl
push
rorb
std
fwait
pop
adc
jecxz
inc
and
lds
pop
repz
jecxz
jecxz
xchg
and
pushf
pop
adc
out
and
shl
push
std
outsl
dec
test
and
in
fstpl
push
pushl
cltd
and
xchg
xlat
inc
mov
lahf
pop
xorb
pop
fcmovb
bound
mov
xchg
gs
cmp
ret
fmull
push
push
out
dec
lds
cltd
sub
fbld
rcl
xor
cli
sub
push
mov
gs
add
outsb
xchg
or
cmp
into
dec
scas
xchg
bound
mov
cltd
rorb
adc
cltd
adc
jg
ret
jecxz
in
lcall
gs
arpl
and
sahf
imul
cltd
cmc
mov
insl
inc
cltd
and
adc
enter
aam
sub
dec
and
test
lods
jmp
pop
xor
push
mov
jno
cmc
insl
push
push
mov
test
movsl
xor
cltd
gs
inc
cltd
pop
hlt
and
mov
cmp
xchg
pop
mov
cmc
sbb
nop
leave
jg
cltd
cmp
cwtl
adc
or
sbb
xor
xor
scas
add
mov
jb
and
xchg
mov
pushf
popf
and
sbb
cltd
negb
jne
add
jmp
and
adc
pop
rcrb
add
cltd
lods
fnstcw
hlt
jge
aaa
in
imul
mov
js
repz
sub
movsb
pop
cmp
cld
andb
sbb
mov
cltd
push
pop
shll
xchg
imul
adcl
dec
dec
cmpsl
mov
out
hlt
xchg
cltd
add
jb
pushf
jne
data16
mov
cltd
je
xor
push
outsb
lcall
cltd
jge
std
clc
pop
jl
cmpsl
cmc
and
insl
fwait
mov
fldcw
cmpsl
mov
adc
mov
loope
pop
ret
jo
das
orb
jns
je,pn
mov
push
cltd
mov
in
push
lret
adc
pop
and
popf
fwait
push
scas
push
pop
repnz
sub
sbb
arpl
mov
jmp
outsb
mov
ret
ds
pop
cmp
popf
or
pop
jnp
and
add
jb
add
fwait
cs
push
inc
inc
mov
lods
int
push
lds
bound
or
or
mov
mov
dec
outsb
cltd
jae
repz
data16
cltd
repnz
xor
roll
cwtl
adc
push
mov
lret
push
pop
popa
xchg
cmpsl
notl
test
sarl
js
push
daa
icebp
loope
jge
xchg
fwait
and
scas
cmp
les
stos
mov
or
cltd
mov
xlat
mov
cltd
inc
movsb
push
stc
sub
dec
inc
cltd
xchg
push
xchg
subb
cltd
data16
lahf
outsl
sub
call
shl
sub
xchg
xlat
leave
push
mov
mov
xor
and
pop
rcr
push
scas
cltd
call
mov
xchg
cltd
or
decb
sub
out
cltd
dec
pop
std
ret
mov
arpl
inc
inc
enter
icebp
mov
mov
movsl
lcall
xorl
adc
push
out
jns
cmp
mov
cltd
test
push
fstpl
add
cmp
xor
test
push
cltd
pop
lds
adc
movsb
sub
fisttpl
jbe
pop
daa
sti
jnp
repz
aaa
inc
sbbl
cs
sbb
jnp
stos
pop
repnz
packuswb
inc
fcompl
mov
cltd
cld
rcr
xchg
pop
enter
nop
std
cmp
loope
mov
mov
popf
adc
or
xorb
adc
push
test
stos
shll
sarb
pushf
out
pop
xor
fsubl
mov
loop
dec
icebp
mov
lahf
push
lahf
cmpsl
out
outsb
lcall
or
addr16
adc
sbb
jo
outsb
cmp
cmc
xchg
insb
and
je
or
ret
aaa
pop
scas
or
jnp
mov
sbb
dec
xor
jg
mov
fsubs
jne
xor
cltd
xor
push
test
insb
cmp
loop
jno
xor
cltd
out
add
jo
cltd
pushf
fwait
pop
pop
xor
mov
test
sbb
decl
sbb
fbstp
cltd
jbe
pop
sbb
stc
mov
xchg
adc
cltd
push
loopne
push
or
cwtl
mov
sbb
add
mov
pop
cmpsb
cmc
pop
arpl
xchg
pusha
adc
fs
ret
je
jg
in
add
cs
rcr
pop
mov
xor
gs
jbe
es
jg
push
fchs
jge
in
xor
mov
dec
mov
or
pop
sbb
filds
add
subb
cmpl
test
sub
xchg
addr16
mov
nop
mov
lods
imul
xchg
fnstcw
push
pusha
pop
stos
dec
ficompl
cmp
mov
sahf
leave
jl
pop
inc
xor
cltd
xchg
rcrb
add
cltd
aas
cwtl
in
sbbl
mov
mov
xchg
insl
cltd
jmp
pop
dec
jmp
adc
cltd
fildll
mov
push
stc
push
insb
lahf
mov
push
std
shr
mov
sbb
ret
icebp
or
in
xchg
cltd
dec
push
sbb
xor
cli
in
add
jg
add
sub
jae
add
cltd
lock
rcr
xchg
mov
ljmp
sbb
push
inc
std
inc
sub
mov
test
jl
xchg
roll
nop
or
pop
inc
cltd
scas
xchg
or
fistps
pop
cmpsb
sbb
outsl
adc
mov
fdivr
cltd
and
push
mov
ret
pushf
adc
xchg
mov
jl
ss
mov
arpl
icebp
mov
cltd
cmc
bnd
and
fildll
jecxz
dec
lcall
fildll
in
jb
divl
and
dec
inc
push
cmpsl
pop
cmpsl
xchg
mov
pop
mov
mov
shr
cld
jno
adc
sahf
and
jb
cltd
xchg
out
icebp
mov
stos
push
in
or
insl
outsb
mov
shlb
sbb
enter
aad
mov
push
or
dec
push
movsl
jae
cmpsl
pop
adc
lcall
jp
xchg
add
mov
popf
fcmove
xchg
std
sbb
outsb
es
push
jb
insb
and
sbb
inc
pxor
pushf
mov
cltd
cmc
cmpsb
les
cli
and
mov
inc
pop
gs
cltd
cmpsl
mov
outsb
dec
lahf
sub
imul
icebp
lret
mov
es
popf
inc
mov
mov
xor
jns
cltd
nop
mov
pop
xchg
cltd
sub
dec
out
popf
roll
mov
push
cltd
jb
sub
fwait
lahf
xlat
adc
cmc
idivb
sbb
cltd
add
loopne
sub
ret
inc
clc
je
gs
enter
roll
cltd
ret
xchg
call
out
mov
push
cmpsl
imul
lcall
and
mov
and
fdivp
mov
and
rorl
aas
fs
rcrb
cwtl
cltd
enter
subl
insl
pushf
inc
daa
movsl
call
in
clc
aaa
mov
cmp
cmp
or
pop
add
mov
fsubr
push
loop
ficoml
sub
pop
inc
fsubl
sahf
cltd
mov
dec
and
cltd
mov
adc
negb
jle
jne
jg
cmpsl
sub
mov
xchg
sbb
mov
je
push
xchg
fcompl
and
push
fistpl
imul
daa
out
xchg
xchg
push
jp
cltd
mov
xchg
or
cltd
adc
adc
jmp
jns
cwtl
cltd
adc
fimull
or
scas
push
into
in
ret
js
ja
inc
mov
dec
sahf
adc
mov
cltd
mov
xchg
iret
cltd
sub
and
shll
ret
sbb
jns
movsb
test
xchg
fwait
repz
test
cltd
add
outsb
iret
les
int
pop
adc
pop
mov
cmp
jnp
sbb
mov
mov
ret
je
jmp
cltd
scas
xchg
push
cmpsb
rcrl
fistl
repz
mov
aad
pop
cld
lods
sbb
ret
pop
roll
inc
cld
cmp
int3
push
std
mov
cltd
mov
fmuls
adc
je
lahf
xchg
xor
lahf
jle
scas
jge
mov
shufps
addb
cli
enter
and
das
outsl
cmp
sub
add
rcrb
ds
cltd
mov
setnp
and
pop
mov
adc
test
inc
cltd
mov
lds
out
dec
cld
push
loopne
psllq
add
test
arpl
int
aad
dec
pop
sbb
push
fmuls
push
mov
cmp
std
pop
mov
mov
cltd
and
cmp
hlt
cltd
stc
ret
jns
cmp
popf
pop
movsb
xor
push
test
fsts
push
pop
mov
clc
arpl
cltd
mov
mov
pop
mov
cltd
pop
enter
pop
or
pop
push
rcrb
mov
pop
lahf
sub
inc
shrb
cld
push
shll
std
cltd
into
lods
out
sub
nop
inc
es
sub
cltd
dec
das
or
adc
add
inc
mov
cmp
and
cmpsl
lret
mov
in
mov
out
or
addr16
loopne
out
es
test
popa
pop
jns
dec
aas
into
in
cld
or
add
push
add
jecxz
fldenv
xchg
shll
push
adc
inc
out
lahf
hlt
jo
fs
imul
push
jg
imul
mov
fsts
fdiv
and
cltd
push
xchg
aaa
outsb
movsl
sbb
xor
lcall
stc
test
sbb
push
jb
pop
cltd
jae
xor
mov
outsb
cld
mov
mov
xchg
pop
sbb
fucomip
ret
stos
push
addl
dec
adc
jns
xchg
imul
inc
mov
insb
popf
mov
and
sbb
push
push
pop
adc
loop
jno
fwait
pop
push
scas
test
push
les
pop
lcall
loopne
xchg
sti
mov
jb
jge
inc
imul
inc
jge
out
roll
mov
movsb
mull
and
xor
ljmp
cmp
mov
rcr
cmp
stc
mov
and
cmp
jne
insb
pop
adc
mov
clc
cli
orl
pop
ss
outsb
in
insl
jle
pop
ret
rclb
push
cmc
test
cmp
xchg
xchg
mov
jb
shlb
push
cltd
fwait
mov
loop
jmp
movsb
push
sbb
jnp
shl
add
fadds
or
sub
shr
and
pop
and
into
xchg
ficoml
rorl
jae
imul
mov
jle
popf
push
sub
push
inc
aaa
ficoml
dec
lods
test
cmc
stos
scas
movsb
nop
cltd
test
dec
daa
mov
add
rcrb
pop
push
mov
sbb
push
cltd
clc
push
lret
cmp
aam
in
jnp
js
sti
cltd
insl
rcrb
jno
lahf
dec
test
dec
stos
test
cltd
inc
mov
dec
xchg
call
lods
andl
repz
int3
jle
test
daa
xor
das
inc
fstps
ficoml
xchg
dec
rorl
int
fsubrp
inc
jnp
and
push
lret
mov
shll
or
jns
xchg
int
and
cmpsl
xchg
cwtl
pop
scas
add
pop
cltd
mov
mov
subb
xor
cltd
pop
je
call
into
ljmp
cltd
mov
adc
fisubl
lcall
jmp
es
cltd
dec
xchg
stc
in
xor
xchg
cltd
arpl
push
out
lahf
stos
ss
cltd
mov
cltd
std
divb
loop
neg
pop
push
fwait
in
cmp
and
mov
cmp
xchg
leave
into
andb
cli
sbb
icebp
pop
imul
cs
push
adc
clc
pop
fwait
push
dec
in
je
or
jae
cltd
inc
mov
adc
cwtl
pop
adc
mov
cltd
cli
pop
pop
lock
sti
loope
outsb
cltd
dec
leave
mov
arpl
sub
cltd
mov
push
inc
cltd
scas
mov
cli
out
jmp
adc
push
pushf
and
jns
cmp
jne
dec
imul
push
cli
pop
sbb
or
popf
hlt
dec
pop
or
leave
cltd
jns
pushf
test
inc
shrl
sbb
jo
lahf
mov
mov
ja
daa
nop
or
hlt
mov
adc
adc
decb
lahf
mov
test
or
inc
sub
mov
push
pop
addr16
dec
scas
lock
push
jle
cltd
xchg
movb
lods
fidivl
enter
xchg
hlt
fwait
xor
sahf
sbb
cltd
push
dec
repz
cmp
xor
sbb
pop
scas
sbb
outsl
cltd
in
push
aaa
fsubl
cltd
inc
sub
lcall
push
cmpsl
mov
mov
cltd
mov
ljmp
addr16
push
icebp
xor
add
jnp
mov
ret
rclb
inc
cltd
loop
sbb
cltd
divl
xor
test
mov
push
les
and
mov
testb
inc
enter
loope
mov
cltd
adc
dec
mov
int
aam
inc
pop
pop
and
sbbb
fimull
daa
mov
call
jo
lcall
dec
clc
push
and
add
mov
cltd
out
mov
jecxz
mov
les
inc
cltd
insl
sbbl
push
lahf
xor
jp
rcrl
int3
mov
or
lcall
add
test
icebp
aas
fwait
stos
sub
push
push
cmc
ficompl
cmp
fnstcw
test
lcall
cli
scas
xor
or
imul
push
mov
mov
emms
jne
std
sahf
sub
sub
sbb
xchg
fistpl
adc
pop
cltd
mov
inc
shrb
inc
popf
cltd
mov
daa
push
inc
cltd
jle
into
call
cltd
jo
addr16
jge
out
test
ja
sbb
push
fidivs
mov
mov
inc
dec
sub
lret
negl
mov
add
call
loop
inc
mov
cltd
xchg
and
dec
cltd
je
adc
cltd
jno
jmp
pop
cltd
lret
xor
popf
movsl
jle
sub
insb
cltd
hlt
dec
xor
cmp
test
inc
movsl
jl
sbb
mov
addl
out
sti
pushf
imul
xchg
push
fwait
jnp
push
loop
sub
cltd
stos
push
jmp
cltd
jecxz
pop
xor
cltd
clc
mov
sbb
jbe
mov
add
addr16
iret
pop
ljmp
xchg
mov
out
lahf
clc
out
mov
inc
push
mov
sub
stos
popa
cmp
push
cltd
or
adc
fsubrs
inc
fwait
testl
jge
dec
test
cltd
adc
push
mov
xchg
repnz
arpl
cltd
out
xor
pop
jb
cmpl
jecxz
cltd
jbe
loope
jl
cltd
cld
jbe
push
test
jo
pop
sbb
fs
lcall
lock
ja
push
cltd
add
fsub
jl
shr
mov
sbb
loopne
test
lahf
insb
cltd
arpl
xchg
cltd
in
test
add
ja
add
dec
nop
push
xchg
inc
mov
sti
or
pop
cltd
mov
jae
pop
jbe
cltd
test
sub
xchg
or
and
jecxz
inc
jbe
cltd
push
push
nop
out
cmpsl
jb
lahf
pop
add
dec
or
cmpsb
ljmp
xor
push
sub
inc
mov
shrb
or
int
pop
int3
mov
jns
mov
jp
sbb
fldt
pop
dec
lcall
adc
dec
add
pop
adc
aaa
nop
lock
cmpsb
cltd
mov
pop
mov
cmp
and
dec
cwtl
stos
xchg
xchg
add
or
dec
jmp
xchg
jne
cmp
sbb
fcoml
sub
sarl
add
movsb
mov
lret
pop
xor
xchg
sub
mov
inc
jge
imul
cmp
sbbb
or
cmc
cltd
sti
cmpsb
ficomps
std
jns
cmp
stos
adc
rolb
lds
int3
dec
loope,pn
les
cmp
cltd
sub
dec
ficomps
mov
mov
mov
sbb
and
sbb
arpl
lret
jbe
push
cs
sub
outsb
test
add
dec
jae
aam
jno
cwtl
orl
pop
push
lcall
cltd
pop
or
clc
cltd
lcall
ja
mov
push
xor
and
and
insl
inc
mov
imul
insb
add
movl
inc
push
adc
pop
xorl
mov
pop
lahf
and
pushf
push
sti
test
mov
gs
stos
dec
push
dec
sbbb
lods
xlat
cli
cmp
rcrb
mov
imul
cmp
adc
aad
cmpsb
popa
sbb
loopne
call
xchg
inc
pushf
xlat
stc
cltd
stos
lcall
or
hlt
cli
pop
out
and
add
loopne
push
leave
sbb
mov
cltd
inc
inc
mov
out
mov
jbe
bound
inc
adc
sbb
xchg
cltd
xchg
clc
mov
xlat
les
push
call
outsl
pop
js
sbb
imul
jge
cltd
jmp
fistl
cltd
and
sbb
lods
jl
cmp
add
and
xchg
sbb
insb
mov
repz
dec
cwtl
cmpsl
enter
lcall
add
or
or
mov
cmp
fstpt
rcll
cltd
por
xor
testl
push
cmpsb
es
clc
mov
push
scas
ret
cltd
mov
stc
pushf
add
lea
jp
jg
adc
mov
ja
cwtl
adc
mov
mov
fidivl
cmp
shll
stos
jmp
xlat
lds
mov
pop
sbb
lahf
dec
sbb
cmp
inc
ljmp
divl
jne
jle
dec
mov
das
je
das
repnz
out
xor
mov
lcall
xchg
test
pusha
call
cmp
inc
std
inc
add
push
int3
cltd
stos
xchg
adc
icebp
popa
std
imulb
test
arpl
cltd
fs
inc
xchg
sbb
and
mov
mov
aam
jbe
mov
sbb
es
sbbl
push
shrl
fidivrs
sbb
mov
pop
pop
lret
adc
adc
test
cltd
in
push
repz
dec
cli
insl
push
or
test
mov
and
test
adc
lcall
sbb
cltd
adc
repz
iret
and
and
mov
cmpsl
out
sbb
cmpsl
jle
lahf
push
pop
sub
dec
pop
in
mov
adc
push
push
jbe
cltd
mov
mov
mov
mov
fs
lret
pop
dec
scas
cmp
shll
xor
mov
in
insl
or
lcallw
jno
xchg
jnp
out
push
push
xor
mov
iret
xor
dec
sahf
lahf
cltd
sbb
aaa
cltd
inc
ret
mov
pusha
cltd
out
xchg
call
push
jmp
inc
jo
fnstenv
icebp
int
push
aam
jnp
arpl
test
fxch
dec
push
fildl
sbbl
cltd
movl
enter
sub
dec
out
loope
push
jae
jge
pop
repnz
outsl
shll
mov
cwtl
jg
and
mov
addr16
cltd
lock
icebp
rcrl
and
cli
cmpsb
fnstsw
sahf
add
jo
cltd
outsb
shl
insl
mov
cmp
aam
cltd
faddp
xchg
sub
dec
mov
loope
bound
fwait
sete
popa
add
and
xchg
sub
aas
sbb
inc
cmc
aad
pop
mov
mov
xor
mov
lret
push
dec
out
cltd
in
or
inc
xor
repnz
jle
into
scas
or
shl
andb
push
or
mov
repnz
lcall
in
sub
fsubr
or
and
cwtl
rcrl
lods
ficomps
cmpb
in
inc
jns
jae
sub
xchg
push
stc
mov
call
and
cmp
pop
dec
cltd
out
bound
mov
rorl
and
add
push
cltd
dec
jnp
std
cwtl
sub
jne
inc
sub
add
pusha
cmpsb
push
cltd
xor
aad
mov
push
lea
mov
adc
sahf
ljmp
sbb
mov
or
out
aad
mov
addr16
negl
xchg
test
xlat
add
lcall
push
and
in
sbb
inc
mov
cltd
add
xor
cltd
outsl
test
aas
lret
sub
lods
cmp
mov
sahf
dec
lcall
or
call
mov
cmpb
and
loop
jp
push
ret
fcompl
add
push
cltd
lock
lret
stos
cli
mov
or
int
mov
pop
js
fadds
dec
aam
cmp
hlt
mov
sbb
pop
sub
xor
xchg
sarb
call
loopne
stos
mov
fwait
repz
popf
popa
stos
mov
jbe
dec
sbbl
push
pop
jecxz
pop
negl
mov
xor
nop
xchg
xchg
rcl
mov
mov
daa
mov
cltd
inc
jne
movsl
mulb
sbb
stos
sahf
mov
aas
add
mov
out
xchg
xor
cltd
lock
and
repz
lahf
pusha
add
fdivrs
cltd
push
icebp
stc
dec
inc
jge
inc
stos
jmp
mov
lahf
rcl
repnz
mov
sub
lds
push
sub
mov
loopne
dec
scas
icebp
or
xchg
insb
es
in
stc
lahf
sub
test
sbbl
add
cmp
sbb
lock
mov
fs
push
mov
enter
push
jecxz
mov
push
adc
lahf
pop
aad
jo
sub
stos
cltd
loop
cmp
mov
xor
cmp
loopne
cltd
push
arpl
cmp
jp
clc
iret
cltd
mov
adc
sub
cltd
xor
nopl
fwait
test
dec
jge
cli
enter
sahf
mov
cwtl
mov
jle
test
rorb
sub
mov
fsub
cltd
jl
add
lret
cltd
mov
in
jp
jae
dec
xchg
out
mov
loopne
xor
out
pushf
scas
push
cltd
mov
and
cltd
mov
lcall
xchg
pop
sub
xor
cltd
pop
mov
sub
fdivs
cltd
dec
xor
jmp
mov
out
or
cltd
sbb
inc
push
mov
xlat
cltd
jmp
jne
mov
aam
or
in
add
sbbl
in
iret
sub
fstl
shll
mov
mov
gs
lcall
loop
test
nop
pop
fnstsw
popf
lret
in
cmpl
jmp
loop
xor
insl
aam
aaa
mov
push
jbe
popf
lret
pop
mov
sub
inc
jl
negb
pop
jnp
aam
cmpsl
mov
jp
bound
sub
sub
xor
cltd
enter
in
subps
loopne
push
jns
cltd
xchg
int3
pop
test
adc
cmpsl
and
jns
shrl
pop
iret
es
in
scas
jns
in
and
add
cltd
imul
and
jnp
cltd
push
das
mov
sbb
pop
popa
leave
shl
les
popf
daa
sub
xchg
stos
jnp
sti
in
cltd
push
test
popf
sbb
and
xchg
mov
cltd
lods
shlb
sbb
mov
xchg
loope
or
loope
jle
lods
push
cli
pop
icebp
unpcklps
cltd
and
es
jecxz
sub
jnp
aad
cltd
sub
pop
mov
ror
jne
sbb
shl
pop
add
mov
dec
pop
cltd
and
adc
adc
push
in
rcll
rcrb
call
sbb
ficompl
xchg
adc
pop
xchg
divl
and
lods
sbb
add
cltd
add
and
mov
xor
xor
pushf
inc
pop
cmp
mov
pop
or
cmp
push
outsb
lcall
and
dec
iret
dec
int3
cmp
lret
mov
mov
pop
out
in
cmc
xchg
aaa
popf
ds
adc
dec
or
push
cmp
cltd
rorb
mov
mov
pop
push
or
rol
pop
sbb
cltd
fldt
cs
sub
xchg
xorl
inc
pop
cmc
xor
xor
sub
faddl
sbb
push
gs
cltd
cmp
cltd
movsb
mov
push
fwait
sub
sarb
out
jae
xchg
cltd
mov
ss
sbbl
cltd
int3
sub
jp
push
ljmp
xor
cltd
and
imul
cmpsl
mov
sub
out
fcmovu
test
cltd
stos
xor
cltd
ljmp
rcrb
mov
push
bound
xor
jns
mov
xchg
mov
sbb
lahf
or
jl
push
into
xchg
sbb
lahf
mov
mov
push
mov
mov
cmp
push
xchg
cs
jle
jecxz
fdivrl
cli
or
bound
cmp
stc
adcb
adc
inc
sub
mov
mov
lcall
in
aas
mov
push
lcall
stos
fwait
stos
lret
mov
popa
mov
sbb
pop
push
cltd
xor
dec
into
and
cltd
fwait
dec
ljmp
aad
xor
loopne
xchg
cmc
insl
lock
stc
xlat
mov
push
sbb
and
out
add
rcrb
test
cltd
inc
pop
sub
lds
adc
filds
lcall
int3
add
xchg
mov
cltd
inc
mov
es
cltd
inc
sarb
fwait
sub
inc
lods
lret
sub
outsb
mov
movsb
inc
leave
push
inc
push
push
fstp
xlat
mov
add
pop
je
pop
add
cmp
sbb
in
or
xchg
scas
cltd
or
sbb
negb
aaa
bound
push
pop
mov
xchg
test
push
jne
push
xchg
cmp
sub
add
sbb
fmuls
cltd
xchg
pop
and
loope
mov
push
dec
jo
sbb
fiadds
sbbb
adc
jge
mov
mov
lea
mov
or
mov
push
addr16
into
mov
lret
push
lret
jbe
cltd
pop
mov
xchg
and
mov
inc
sbb
sbb
add
mov
sub
ljmp
mov
mov
cltd
hlt
iret
jbe
jp
mov
dec
adc
push
mov
iret
cltd
jnp
call
lahf
arpl
sbb
adc
add
inc
xchg
lock
data16
scas
fwait
cltd
and
jmp
mov
stc
cltd
imul
push
in
cmpsl
aam
ss
sbb
repz
or
stos
aad
rol
lcall
mov
stos
sti
ja
xchg
jge
pop
es
jbe
mov
lea
dec
mov
seto
aam
or
shl
hlt
sub
cmc
or
mov
dec
mov
cltd
inc
jnp
push
shrl
rcrl
mov
xrelease
rcll
fisttps
mov
outsb
sbb
das
xor
cltd
ror
mov
mov
pop
icebp
mov
mov
cmpsl
sbb
jle
cmp
js
mov
sbb
lahf
push
lahf
nop
mov
adc
push
mov
inc
lods
nop
cltd
lods
ret
int3
xchg
andl
ss
in
xchg
sbb
cltd
sbb
and
pusha
lcall
cld
cltd
dec
clc
fisttpl
cltd
inc
sub
cltd
insl
pop
jle
fcompl
mov
mov
mov
and
sub
stos
push
xlat
cltd
test
loopne
mov
sbbb
pushf
sub
sbb
adc
cmp
ret
fiaddl
cmp
fidivs
sahf
data16
divl
dec
jae
jo
xlat
add
push
jnp
gs
add
xorb
mov
outsb
cltd
mov
out
in
or
cltd
gs
fcmovne
sub
mov
loopne
add
ret
jp
shl
test
mov
fmuls
mov
subb
xorb
mov
addr16
popf
xchg
add
imul
test
ds
jge
adc
lcall
shll
dec
sti
addb
xchg
pop
sub
xlat
inc
mov
xor
mov
cld
out
leave
pop
call
cltd
xlat
jnp
mov
or
insb
fwait
inc
push
xchg
push
scas
pop
and
cmpsl
in
sub
fsts
cmc
inc
add
out
mov
pop
inc
fwait
mov
xor
dec
mov
xchg
push
cltd
in
inc
addr16
jo
add
test
mov
mov
test
lcall
jb
mov
mov
mov
jmp
push
cmp
sub
popf
jns
mov
je
sbbl
inc
mov
cmpsb
xor
test
insb
inc
jge
outsl
iret
and
mov
pop
fnsave
jbe
mov
or
stos
lods
leave
cmc
mov
jmp
pop
mov
movnti
fisubl
xchg
cltd
pop
mov
repz
lahf
push
cltd
jecxz
jb
pop
jle
hlt
xor
add
pop
movsb
mov
cltd
xlat
xor
add
or
or
out
cltd
fists
mov
push
cltd
dec
adc
repnz
xchg
stos
pop
addl
cltd
mov
xchg
sbb
cltd
mov
mov
mov
push
pop
jge
cmpl
push
testb
adc
aaa
xchg
cmpsb
mov
xor
cltd
lcall
inc
cltd
push
adc
clc
xor
je
dec
or
xchg
push
negb
jg
mov
insl
sub
mov
mov
cmp
int
out
mov
cmpsl
push
repz
fnstcw
pop
les
mov
repnz
dec
adc
jmp
cltd
or
cltd
int
xlat
or
jp
add
cltd
adc
loopne
es
bound
fwait
xor
lcall
lcall
repz
adc
enter
add
pushf
loopne
cltd
and
das
hlt
add
lea
inc
mov
jle
enter
sbb
sbb
lds
mov
add
lcall
pop
in
loop,pn
test
cltd
mov
xorl
jge
insl
in
cmp
xor
sahf
sub
cltd
ret
stc
jmp
inc
add
jmp
bound
cmpsl
sbb
jns
lret
cltd
pop
push
out
in
shlb
mov
ret
xchg
icebp
add
jp
cltd
sbb
outsb
cmc
int3
inc
or
insl
xor
cltd
dec
adc
js
and
mov
iret
cmpsb
push
mov
adcb
mov
sar
pushf
loopne
mov
call
add
je
push
lds
cmpb
mov
pop
mov
cltd
addr16
cmp
stos
mov
cltd
sbb
test
mov
cltd
push
popa
dec
stos
jb
and
lods
xor
imull
leave
lret
jecxz
dec
cltd
xchg
jae
rcr
scas
test
ds
lcall
push
sahf
pop
add
lret
mov
add
jne
mov
ljmp
pop
pop
shll
inc
cltd
cmc
cld
mov
lods
cltd
aas
gs
pop
lods
sahf
fs
mov
imul
push
cltd
xchg
xchg
out
cmpsl
movsl
rcrl
das
dec
sub
sub
lret
mov
add
int3
daa
jp
fwait
jmp
insb
testl
mov
xor
push
dec
es
cltd
inc
mov
xor
rorl
jns
repz
sbb
std
adc
jle
test
cltd
mov
in
or
cltd
mov
addb
cmp
test
xor
outsl
cmpsb
add
std
and
repz
setns
lahf
mov
xor
adc
out
sbb
cwtl
fwait
inc
sbb
popf
and
dec
mov
lret
cltd
xchg
push
pop
mov
cmp
push
daa
shll
inc
adc
xchg
mov
mov
jbe
std
in
stos
or
divb
sbb
cltd
in
xchg
cli
jle
bound
jl
in
jnp
fidivl
fildl
arpl
xchg
mov
pusha
int3
test
jbe
fstpt
sbb
lcall
sbb
mov
cltd
or
cmp
in
in
xchg
pop
out
xchg
orl
outsb
cltd
push
nop
xchg
std
lock
mov
hlt
cltd
cwtl
xchg
inc
stos
mov
push
cltd
in
mov
mov
cs
dec
pop
mov
push
cmpsl
xchg
leave
sbb
jnp
into
mov
fabs
shrl
pop
cltd
jo
sub
mov
cltd
jnp
mov
cli
ficomps
and
outsb
dec
lahf
xor
out
daa
cmp
gs
pop
cli
lcall
shl
inc
cltd
iret
outsb
test
cmp
xchg
mov
adc
add
pusha
sub
test
xor
cltd
mov
mov
in
mov
inc
push
xor
cltd
cmp
mov
nop
sbb
out
mov
mov
inc
fdivrp
push
cmp
enter
movsl
mov
cltd
mov
daa
push
mov
sub
mov
cltd
in
sti
pop
sbb
push
lret
adc
cltd
rcl
sub
je
test
nop
push
pushf
sub
out
in
bound
mov
imul
es
jg
scas
mov
push
ss
sub
mov
push
insb
cwtl
jle
jl
or
adc
movsl
popw
inc
gs
jg
xchg
insl
mov
aad
dec
fcmovne
adc
xlat
icebp
sbb
out
push
js
lods
and
insl
pop
mov
pop
ds
mov
popf
inc
cmp
cwtl
jl
in
out
lock
push
mov
insb
aaa
out
push
jmp
lods
dec
xchg
mov
inc
mov
out
cmp
test
xchg
xchg
or
addr16
mov
dec
or
pushf
mov
sbb
je
or
out
mov
scas
inc
mov
ret
cs
pop
or
mov
subl
inc
jg
insb
cwtl
cmp
push
cltd
jmp
push
jb
cltd
jo
sbb
xchg
lret
sub
aam
testl
push
cltd
adc
mov
cmp
sbb
or
into
stos
loopne
inc
pop
sub
outsl
add
cltd
test
js
out
jbe
xchg
cltd
rorl
pop
xor
lock
or
fwait
sub
mov
xchg
int
cltd
mov
gs
clc
add
cltd
inc
or
sbb
loop
adc
and
cltd
dec
stos
cmp
xor
lods
xlat
mov
out
cmpsl
imul
jl
cltd
lret
stc
repnz
in
mov
imul
cli
cmpsl
cld
shlb
cmpsl
push
lock
fists
mov
int
mov
inc
adc
push
jbe
cmpb
test
cli
lds
lret
movsl
sbb
lahf
pop
push
pusha
jne
pop
or
popf
lret
fistl
test
pop
push
dec
push
jo
xor
iret
push
mov
ljmp
cmp
sbb
sbb
popf
or
cltd
xlat
insl
add
mov
repnz
les
dec
xor
or
scas
movsb
mov
mov
ret
popf
and
cmp
sbb
adc
xor
mov
push
mov
cmp
fnstcw
loop
mov
scas
sbb
and
sub
andl
sbb
pop
inc
cmc
cltd
xchg
mov
push
sahf
test
sub
jb
xchg
fwait
dec
in
xchg
repz
push
push
lahf
inc
dec
loopne
insb
fsts
adc
lods
test
add
mov
stos
aad
pop
mov
lds
cmp
and
popf
push
push
ficoml
jb
mov
pop
xchg
mov
in
adc
and
lahf
lret
out
cmpsl
aaa
adc
icebp
mov
sub
xor
jl
mov
stos
test
mov
insb
xor
popf
jns
adc
fstps
xchg
sbb
out
xor
fsubrs
in
add
jne
push
dec
sub
xchg
stos
outsl
mov
cltd
sub
dec
outsb
cmp
dec
scas
divb
cltd
pusha
ja
aam
cltd
das
dec
pushf
mov
cltd
insb
adc
lahf
shlb
cld
cltd
out
inc
imul
pop
es
jb
sub
mov
ds
adc
sbb
mov
xor
popw
loopne
xor
xchg
mov
orl
cltd
and
vpshaw
sub
mov
inc
inc
xor
in
pop
daa
cltd
pop
jmp
out
cltd
leave
pop
testl
lahf
orl
or
xchg
mov
out
mov
and
clc
pop
mov
inc
mov
cltd
sub
in
cltd
or
cltd
push
jg
add
pop
cs
sahf
cltd
add
aam
les
or
arpl
push
sbb
in
adc
ljmp
jmp
jg
inc
and
xchg
jne
and
cmpsl
cmpsl
push
pop
mov
push
ss
fldenv
lea
testb
sahf
fmull
xor
mov
aas
mov
xacquire
scas
xlat
ficoms
pop
cltd
push
cmp
rorb
into
mov
mov
or
xchg
icebp
sbb
dec
mov
mov
push
jns
inc
cli
imul
mov
daa
test
pop
xchg
mov
imul
xchg
ret
cltd
and
sar
cmpsb
std
push
mov
adc
mov
aad
sub
sbb
dec
and
jae
cmp
fistl
lahf
jg
xor
sbb
pop
mov
fwait
push
adc
ficompl
mov
push
movsb
ss
int
hlt
dec
out
cltd
pushf
mov
enter
fwait
cmp
shrl
mov
test
dec
negb
aam
stos
int3
push
stc
ja
xor
mov
stos
dec
shl
jle
inc
inc
mov
scas
popa
push
mov
add
movsb
pop
mov
imul
push
jns
push
add
fistpl
das
jno
cmova
mov
in
je
cwtl
int3
mov
pop
mov
shrb
imul
sbbb
sub
xchg
sti
pop
lcall
xchg
jnp
scas
lea
rcrb
loop
add
repnz
sar
test
add
out
jb
movsb
push
mov
lret
aaa
test
stc
inc
testb
insb
pop
adc
mov
loope
call
addr16
xor
rep
jno
loop
push
test
pop
sbb
pop
sub
test
mov
imul
xor
xchg
ret
xchg
mov
mov
cmp
in
cmpsb
sub
stc
inc
mov
push
add
or
cmpsl
fs
insb
adcl
stos
jne
and
rclb
jbe
dec
sub
sub
in
mov
rclb
push
repnz
stos
dec
pop
in
ljmp
fiaddl
aad
aad
mov
cmp
mov
lds
cltd
xchg
fidivs
push
cltd
jg
cmovl
sbb
jns
sarb
shrl
cltd
jle
icebp
clc
jecxz
xchg
int
push
jp
fwait
fs
data16
sbb
stos
xchg
mov
into
mov
xor
cld
cmpsl
xchg
movsl
js
mov
cmc
ljmp
int
rclb
or
and
add
mov
aas
cmpsl
mov
mov
and
sbb
out
jae
and
aas
jecxz
xor
sbb
imul
sbb
lods
enter
stos
loop
push
push
mov
fwait
rcr
inc
je
pop
cmp
movsb
pushf
or
lcall
mov
pop
push
dec
cltd
scas
mov
outsb
xchg
lock
jne
jle
push
jno
shrl
daa
andl
jmp
or
cltd
es
inc
inc
clc
sbb
cltd
push
and
adc
bound
xlat
std
cmp
xor
icebp
lahf
pop
jnp
mov
shll
dec
dec
inc
mov
xchg
fildl
cltd
les
fdivr
mov
sub
cmp
frstor
xor
lock
mov
or
popa
cltd
inc
mov
sub
cltd
out
xlat
sub
fistl
popa
dec
mov
cltd
pop
subb
fwait
sub
test
or
add
les
fs
sub
cltd
xor
fwait
lahf
sbb
scas
cwtl
push
fnstenv
dec
fsubrs
arpl
mov
sub
in
push
mov
aad
in
cwtl
sahf
les
cltd
repnz
xchg
fwait
sub
popa
je
pusha
leave
test
fcoml
cli
sbb
ret
jbe
mov
js
es
cltd
xor
push
bound
inc
sub
sahf
xor
mov
je
pop
mov
rcrl
test
sbb
pop
ss
dec
cltd
jnp
sub
rcr
mov
sti
out
jns
cmp
lcallw
dec
dec
lds
sbb
sbbb
inc
lods
call
push
rolb
ficoms
and
mov
imul
rorb
jno
rcrl
lods
push
sub
pop
push
pop
test
lods
sub
sarl
cmp
xchg
cmpsl
dec
test
shr
jp
cltd
sub
add
push
push
leave
cltd
enter
add
imul
sub
and
sti
jb
sub
rcrl
and
mov
bound
ds
sbb
push
inc
jl
in
mov
stc
gs
loopne
mov
in
shr
out
ss
cli
sbb
into
test
pop
add
ljmp
mov
lock
cltd
in
insb
ficomps
cltd
jbe
xchg
mov
insl
ficomps
into
jmp
mov
ret
cmp
cwtl
cltd
dec
inc
imul
imul
int
jecxz
fwait
aaa
jp
mov
hlt
fstps
iret
out
push
gs
cltd
adc
push
mov
cltd
mov
cmp
je
aam
push
sti
or
rcrb
sub
stc
test
inc
ds
adc
mov
ljmp
jge
mov
cltd
fstl
repz
cmpsl
shlb
pushf
test
push
icebp
adc
shl
mov
or
scas
in
pop
fcoms
mov
inc
push
cwtl
cltd
jne
les
cltd
push
mov
das
lea
in
adc
lahf
xor
scas
mov
jecxz
lcall
adc
mov
sbb
cmp
adc
sbb
push
adc
in
in
mov
inc
pop
jecxz
add
push
in
aas
mov
ret
andl
fucomip
rcrl
jb
add
das
sbbl
pop
cmp
sub
xor
or
dec
ret
or
mov
mov
xor
enter
dec
insb
push
in
add
cli
mov
mov
xchg
je
jbe
push
and
sbb
xlat
mov
popf
sub
icebp
mov
test
cmp
mov
xor
icebp
lahf
testl
jp
stos
fwait
mov
lds
ds
lcall
add
xchg
repnz
jbe
in
mov
xor
cmpsl
sbb
lea
push
icebp
das
cmpsb
test
data16
shl
loop
pop
sbb
push
aas
xchg
inc
adc
loopne
cmpsl
icebp
and
mov
dec
es
adc
not
jns
dec
cltd
pop
arpl
cmp
mov
in
jbe
cltd
jmp
loop
mov
push
fwait
aam
mov
shl
push
mov
cltd
nop
cmp
push
mov
sbb
adc
mov
cltd
mov
outsb
popa
mov
scas
pop
pop
sub
lds
cltd
and
and
repz
mov
sbb
cltd
jnp
jns
sbb
scas
fwait
push
addb
jmp
cmp
pusha
dec
sub
aad
cmpsl
test
insl
fwait
cltd
add
inc
or
jp
stos
lock
push
loopne
stc
iret
dec
les
data16
fidivrs
mov
aaa
dec
fsts
js
mov
mov
sbb
loope
push
fstpt
mov
cmp
xor
sbb
lcall
inc
dec
cs
fcmovnb
push
cltd
and
ret
fiadds
cld
sbb
stc
adcb
cltd
xchg
xchg
sub
mov
lock
lods
mov
sbb
int3
mov
outsl
mov
adc
out
mov
jg
jp
pop
rcrl
repnz
sti
mov
aad
sub
jnp
fwait
dec
or
add
bound
push
out
enter
popf
outsl
push
cmp
push
arpl
ss
jmp
pop
push
add
xchg
int3
insb
das
cltd
pop
xchg
subl
sbb
in
imul
mov
fbld
cmpsb
addr16
mov
jg
sti
loope
inc
cltd
adc
or
and
and
shll
cltd
cmp
mov
repnz
jne
and
and
fmuls
mov
jne
rcrb
pusha
or
leave
mov
in
cmp
xchg
dec
jns
cltd
imul
mov
mov
sbb
pushf
test
mov
imul
in
xchg
cltd
xor
out
adc
cmp
lock
cltd
dec
sbbb
les
cld
cltd
inc
jecxz
cmpsl
pop
pop
or
sbb
push
arpl
jne
mov
push
sti
sbb
rorb
orl
lods
xchg
mov
in
out
fimull
cltd
aam
lock
jno
shll
test
xor
push
test
inc
filds
adc
mov
sub
ds
adc
mov
mov
push
sub
cltd
ss
xchg
loopne
sbb
inc
or
cltd
cmp
rcrl
sbb
mov
push
jge
scas
or
mov
adcb
inc
jecxz
ja
cltd
adc
hlt
jbe
js
mov
dec
mov
xor
cltd
add
mov
cltd
inc
jge
adc
cmpsl
int
adc
outsb
loope
sbb
mov
ret
shlb
cld
popa
xor
notl
slwpcb
cmpsl
jmp
stos
mov
jle
xlat
add
icebp
icebp
push
push
add
sbb
data16
sbb
jnp
xchg
xchg
popf
popf
cmpsb
rol
fistpl
sub
xchg
jo
hlt
and
xor
cltd
insb
call
lea
cltd
shlb
loope
lahf
clc
cmp
aad
enter
scas
adc
pop
jg
or
dec
fwait
sbb
call
int3
dec
mov
outsl
sahf
add
cltd
popf
push
mov
cltd
xchg
in
cmc
push
fisubrl
rorl
int
mov
sbbb
fsubs
andb
mov
push
sub
push
addr16
sbb
arpl
mov
loop
je
rcll
mov
js
fsubs
lahf
ret
cmpsl
aas
cmp
pushf
sub
pop
jp
cltd
jg
insl
loop
es
cmpsl
aas
jbe
and
sbb
mov
sbb
cltd
insb
aam
call
cltd
jecxz
and
insl
bound
sbb
push
lcall
loopne
imul
rorl
mov
lret
lret
nop
fwait
or
incl
jmp
fnstenv
aaa
push
out
out
mov
lds
cmpsb
inc
cld
jo
repnz
fstpl
mov
stc
push
lcall
into
cltd
shrb
pop
popf
inc
mov
cmpsb
sbb
cltd
lsl
or
pop
out
loop
cmpsl
je
jo
mov
xor
push
cltd
and
pusha
mov
notl
jmp
jnp
inc
cltd
xor
out
cltd
xchg
mov
stos
jle
test
mov
mov
dec
and
cli
inc
adc
pop
cltd
test
jecxz
jg
bound
addr16
mov
loope
inc
in
dec
sbb
repz
push
cmpsl
lea
xor
ror
fisubrl
into
out
cltd
pop
in
data16
jl
cltd
imul
into
rcrl
cld
inc
dec
xchg
xor
sub
cltd
lret
jg
xchg
notl
call
jle
mov
cmp
fcoml
fistpl
bound
clc
push
enter
test
push
sbb
cltd
dec
add
xchg
aad
cltd
add
xchg
cltd
ljmp
ficompl
jl
dec
jnp
stos
aad
dec
cmp
pushf
pop
mov
std
and
sbb
mov
sub
xchg
cltd
in
es
and
xor
fdivl
xchg
cltd
das
inc
sahf
inc
add
push
mov
lods
daa
or
rcrl
pop
out
cltd
pop
xchg
sub
jnp
sti
push
lahf
icebp
out
mov
cwtl
mov
cmp
pop
cs
push
stos
pop
cltd
pop
and
rclb
push
fwait
push
ficompl
rcll
jge
cltd
xor
fdivrs
adc
push
cltd
xchg
pop
cltd
arpl
and
sahf
dec
cltd
pop
aam
call
lahf
popf
mov
mov
lods
daa
in
dec
add
push
ja
adc
cld
mov
outsl
sbb
in
pop
sbb
cmp
cltd
addr16
incb
sarl
xor
cmp
aad
lds
bound
dec
sbbb
mov
hlt
jmp
pop
xchg
cs
cmpsb
aad
ficoml
in
mov
mov
push
mov
mov
jge
push
push
cltd
ret
and
or
sahf
xchg
ja
pop
pop
test
mov
cltd
enter
push
iret
rcrb
or
cmpl
shll
mov
mov
shrb
in
xor
cs
push
jecxz
cltd
jo
call
adc
push
push
mov
shrl
fidivrl
jecxz
jnp
dec
cltd
adc
cltd
cli
inc
daa
loop
call
pop
inc
push
adc
iret
sub
and
or
push
xchg
mov
adc
and
int3
pop
pop
mov
das
std
xchg
pop
push
js
xchg
cltd
rcrb
jno
add
mov
sub
jmp
notl
insb
mov
stc
xor
nopl
mov
outsb
sbb
fnstsw
rorb
stos
cs
popf
cmp
cmpsb
test
sti
dec
add
xchg
fbld
fdivrl
xchg
inc
imul
mov
shll
test
pop
pop
out
pop
mov
mov
push
icebp
aam
and
jmp
jns
and
mov
mov
sbb
push
outsb
and
jnp
testb
ret
pop
jg
aas
xor
mov
shrb
cwtl
adc
inc
mull
leave
je
sub
lods
or
add
mov
in
inc
cmp
push
adc
in
lea
icebp
add
mov
xchg
call
and
out
xacquire
push
mov
mov
test
add
lahf
repnz
jecxz
iret
inc
and
loope
roll
sub
nop
dec
xchg
xchg
cwtl
rorl
xlat
ret
in
enter
jns
mov
stos
jmp
lods
jbe
mov
outsl
bound
jp
pop
cmpsb
fstps
sub
rcl
rol
sbb
and
sub
lcall
jbe
push
test
repnz
jle
or
lret
mov
lcall
popf
inc
imul
arpl
shrl
mov
sbb
popf
test
push
sbbl
or
or
aaa
pop
ljmp
push
outsw
daa
fidivs
pop
in
mov
imul
repz
cmp
mov
insb
in
in
les
cmpb
in
push
mov
or
rorb
js
add
push
xor
push
test
push
adc
call
jmp
jb
sub
dec
aad
jge
inc
loopne
stos
cmp
aam
mov
mov
popa
xchg
mov
xchg
jbe
xor
ja
cmp
fmul
pop
mov
loope
adc
or
mov
test
push
jecxz
push
lods
ja
jb
cwtl
push
lods
hlt
in
push
int3
mov
in
jbe
cmp
rclb
inc
xchg
rclb
mov
icebp
mov
aaa
dec
popa
and
sbb
sbb
int3
in
xchg
popa
push
insb
lret
aas
ds
push
pop
bound
mov
cmpl
push
sarl
in
imul
popf
xchg
fsubs
mulb
adc
dec
sbb
imul
and
or
push
push
sub
jne
aaa
lret
push
popf
outsb
icebp
add
fidivrs
mov
pop
les
pusha
test
out
mov
sti
cli
cmpsb
lods
cli
dec
stc
push
pop
add
imul
enter
cmp
js
fsts
push
cmpsl
incb
icebp
mov
sub
add
pop
mov
jge
sbb
hlt
sbb
divps
pop
dec
repnz
inc
rorl
aas
mov
and
or
sbb
adc
pop
cltd
dec
lods
add
jge
fst
push
sbb
call
adc
jmp
shll
cmpsl
lds
cltd
inc
pop
ja
popf
stos
outsb
mov
dec
nop
lcall
push
jb
lods
aam
sub
popa
xorb
fisubrl
xor
jge
jb
jp
or
sub
cmp
xchg
lods
test
pop
in
xchg
cltd
int3
test
or
cmp
inc
fwait
les
push
lcall
pop
push
lock
fidivrl
dec
fwait
lea
jp
negb
iret
clc
sub
xor
jbe
add
aaa
cmp
xchg
cltd
shl
out
outsl
mov
rcll
cltd
fnsave
cltd
jl
cmc
mov
shrl
push
mov
lahf
fwait
ret
imul
loopne
sahf
inc
inc
sub
dec
xchg
inc
insb
shll
pop
lcall
rcrb
xor
cltd
dec
test
sub
rcrl
mov
lcall
notb
out
je
setg
xor
adc
test
cmpsl
adc
jnp
cmp
imul
nop
and
cltd
xchg
das
pop
mov
nop
stos
cltd
jmp
jo
push
int3
lret
mov
push
adc
negb
mov
dec
mov
and
cli
push
cmpsb
xchg
or
cltd
mov
xchg
jb
cmc
dec
ja
loope
and
inc
fidivrs
repz
mov
xor
cmp
dec
push
jge
out
sbb
test
ret
cltd
pop
pop
enter
cld
push
add
fstps
dec
mov
pop
cltd
adc
jo
out
aaa
or
inc
inc
sbb
aam
mov
cltd
jle
shrl
mov
js
push
rorb
cltd
out
jle
pop
es
xchg
pop
call
scas
cmp
sbb
lcall
mov
push
arpl
lahf
or
sbb
sbbl
sub
lods
sbb
cltd
sbbb
scas
xlat
je
sti
outsb
cltd
inc
scas
or
jge
cltd
call
cwtl
mov
pop
jns
rcrl
sbbb
push
add
jo
mov
cmp
mov
xchg
out
int3
mov
adc
or
imul
cmp
cmc
outsb
lahf
jae
and
retw
cmp
pushf
addr16
xchg
mov
adc
cltd
ljmp
cli
lcall
cli
sbb
imul
pop
mov
pop
adcb
sub
inc
cmpsl
push
mov
outsb
cmpsl
cmp
punpckhbw
fstpl
fs
imul
insb
push
lcall
repnz
mov
pop
sbb
fidivrl
lahf
lods
or
jp
in
mov
sub
mov
adc
cmp
jmp
in
mov
icebp
xchg
jo
hlt
mov
leave
fwait
and
push
sub
jle
call
xor
adc
xchg
adc
stos
cltd
in
sub
push
mov
scas
mov
out
xchg
inc
xor
repnz
adc
into
lcall
insb
jmp
pop
scas
lahf
sbbl
cltd
and
dec
sub
imul
cltd
stos
add
adc
cmp
push
xor
outsl
xor
int
hlt
lcall
inc
sti
movsl
stos
mulb
addb
push
jns
mov
xchg
fs
and
stos
pop
jmp
cltd
or
fdivl
and
jl
mov
xlat
xchg
cmc
cltd
cs
jbe
lock
xchg
cmp
lcall
mov
aad
outsb
ja
vmwrite
popf
jecxz
inc
adc
jno
sbb
out
push
and
mov
xchg
aam
inc
push
ds
cltd
pusha
xchg
pushf
sbb
loopne
mov
sbbb
or
lock
js
stos
pop
dec
push
dec
cltd
lret
cmp
ret
jge
mov
lahf
iret
fwait
or
sub
mov
cmc
push
add
mov
enter
or
fwait
imul
jae
xchg
push
add
pop
rcll
jp
fwait
or
into
mov
clc
pop
test
cltd
jl
lods
sarb
aad
push
push
fsubl
cltd
push
repz
mov
fcomps
subb
movsb
sub
stos
jecxz
sbb
rolb
sahf
fsts
push
test
mov
fldcw
xchg
fs
mov
dec
movsl
enter
outsb
ss
lahf
or
sub
add
mov
cmp
cltd
cmp
cmp
push
movsl
and
dec
jae
xchg
rcr
loop
sub
push
xor
sub
and
inc
cltd
scas
adcl
pop
lcall
cmpsl
cs
aad
mov
push
data16
xor
jae
jmp
pop
das
jp
sub
cltd
mov
mov
push
cltd
imul
dec
sbb
sarl
fisubs
faddl
js
lcall
lcall
and
clc
jl
sahf
in
jp
popa
jb
lahf
pop
insb
popf
add
punpckhdq
out
sub
lahf
xor
in
mov
mov
push
ja
inc
shrb
xlat
scas
insb
sub
in
imul
and
negb
xor
out
stc
cltd
xchg
je
sti
pop
cmc
xchg
gs
mov
mov
and
jo
jp
mov
aam
or
jne
cltd
test
push
sub
fbstp
call
fisubs
adc
push
lods
mov
xchg
add
push
push
leave
jns
mov
adc
xabort
pop
insl
pop
cmp
cltd
push
jmp
imul
sub
stos
cli
ja
sahf
mov
enter
cltd
arpl
pop
fbld
xchg
stc
lea
jmp
js
fsubr
lock
pop
add
mov
lcall
push
lea
imul
adc
lea
cmpsl
xlat
imul
mov
test
scas
sub
popf
aaa
andl
negb
cltd
fcmove
fistps
push
outsb
cltd
insl
dec
inc
into
inc
pop
imul
leave
fistps
clc
pusha
mov
xor
dec
insb
mov
int3
vpcmpgtw
out
lret
iret
lahf
adc
mov
outsb
and
adc
cmpsl
fistpll
or
insb
in
fwait
test
cmp
adc
scas
cltd
into
pop
aad
or
jno
sti
mov
cltd
push
sahf
iret
mov
mov
xchg
sbb
mov
cltd
gs
subb
or
lcall
sahf
mov
sub
and
test
pushf
mov
insl
or
fidivl
cltd
loopne
pop
insb
out
xor
fwait
inc
mov
test
daa
imul
ret
xor
sbb
pop
test
bound
xor
mul
shrb
xchg
js
lea
jp
fidivl
mov
loopne
cltd
xchg
lods
test
das
int3
outsb
and
inc
ret
mov
cli
adc
xchg
out
outsl
rclb
or
out
push
rcrl
sahf
in
xchg
movsb
jg
xchg
andl
iret
cmp
or
sbb
cmc
outsb
ffreep
sub
xchg
lahf
pop
cld
mov
in
test
test
sub
std
xchg
lock
sbb
pop
lcall
movsl
sbb
popf
sbbl
pop
pop
and
sahf
fsubs
fwait
pushf
jle
lock
sahf
iret
insb
xchg
scas
movl
jns
sbb
sbb
pushf
xchg
inc
inc
outsl
ljmp
push
pop
sub
push
test
pop
mov
outsl
jbe
or
les
mov
cmc
inc
sub
push
mov
push
sub
push
and
mov
jge
xor
nop
movsb
jnp
bound
lds
jo
insb
fwait
cld
push
inc
fldt
pop
push
jecxz
mov
push
inc
imull
ret
in
lods
lods
aas
xchg
jl
addr16
mov
shrb
sub
xchg
pop
insb
mov
push
fisubl
clc
inc
insl
rorb
adc
push
imul
adc
ret
sub
pop
arpl
flds
pusha
int
insb
xchg
ret
push
das
loop
cmpsb
adc
xchg
lret
pop
sti
pop
ffree
insb
mov
stc
sub
adc
mov
inc
rcll
ljmp
lret
loopne
popf
jp
jmp
insb
out
sub
cmpsb
outsb
xor
int3
add
and
sti
aas
movsl
xor
cmpsl
loopne
dec
xchg
or
push
std
test
scas
cwtl
ljmp
hlt
rcll
push
aaa
hlt
or
insb
xor
adc
stc
repnz
inc
and
out
mov
xorl
mov
sub
push
scas
sbb
test
insb
pop
mov
push
jae
pusha
mov
int
mov
mov
stos
mov
sbb
or
loope
push
cltd
pop
add
stos
pop
pop
cltd
mov
cwtl
cli
rcll
or
and
lahf
lcall
or
popf
cltd
dec
aad
mov
cltd
ret
je
cmpsb
cli
pop
mov
cltd
jge
cmp
xchg
xor
stos
mov
test
sbb
cltd
mov
shll
or
cmpsb
iret
jl
ljmp
call
fwait
cmp
je
pop
sarl
mov
mov
sbb
push
out
cmpsl
sub
into
scas
mov
jns
sub
sbb
sbb
cltd
es
mov
add
mov
mov
iret
mov
std
sub
mov
in
mov
mov
sbb
mov
pop
sti
rcll
xchg
adc
xor
or
or
sbbl
outsl
inc
fcompl
xor
pop
add
pushf
dec
in
movsb
jns
popa
sub
mov
and
enter
sbb
mov
cltd
cmp
xchg
aas
lahf
inc
mov
cmp
mov
xor
add
les
sub
mov
or
xchg
xchg
sub
pop
enter
mov
or
inc
or
lahf
ja
imul
out
or
xlat
fnstcw
dec
insb
stos
fs
test
pop
pop
xchg
cmp
adc
fwait
ss
in
out
xchg
iret
cs
push
lods
addl
cltd
xor
aam
cltd
shlb
sbb
adc
arpl
mov
ror
and
lcall
repnz
cmp
lahf
sub
pop
cmp
inc
pop
cltd
pop
mov
out
cltd
and
jb
cmp
adc
jo
call
sahf
std
stos
or
cwtl
push
imul
jp
xchg
out
cltd
mov
or
xlat
push
js
mov
call
insl
pop
mov
cltd
data16
pop
in
mov
orb
movsb
clc
fs
stc
dec
popf
aam
or
cltd
push
or
int
cltd
sahf
add
push
lcall
repnz
pop
repz
jg
lret
cltd
sbb
cmp
cltd
cmp
lock
jge
cltd
decl
pop
inc
cmpb
lret
out
jmp
mov
cltd
lock
subl
shlb
mov
scas
mov
cltd
sub
scas
add
xchg
cltd
xlat
add
mov
stos
pushf
mov
lcall
jb
sub
sbb
lods
cltd
pop
shlb
adc
int
mov
stc
or
test
lcall
mov
mov
jo
xor
or
popf
mov
psubusw
ss
push
repz
jg
cltd
jge
jae
flds
pushf
push
push
mov
mov
arpl
dec
mov
movsl
push
or
mov
movsb
xchg
sbb
or
iret
dec
nop
sub
push
call
clc
sarb
jecxz
inc
daa
sub
mov
push
inc
popa
push
pop
cld
inc
stos
inc
sub
add
in
lea
popa
cltd
aas
imul
in
mov
in
stc
add
push
nop
popa
mov
dec
pop
sub
negl
lea
mov
arpl
stc
stos
in
mov
add
mov
gs
or
mov
push
fmuls
cwtl
in
imul
inc
push
daa
nop
pushf
rcrb
jnp
and
lods
orb
in
jg
test
in
aad
mov
dec
mov
sub
test
sarb
nop
xor
or
jecxz
add
cmp
add
or
movsl
das
mov
cmpsb
lods
popa
xchg
sbbl
insb
loope
lock
xchg
cmp
or
cwtl
add
imul
imul
jno
fnstcw
jecxz
fstpt
xchg
lcall
aas
aas
jmp
popf
imul
sub
fwait
xlat
mov
mov
ret
flds
mov
andl
loop
mov
mov
divl
jmp
outsb
mov
add
loope
inc
cli
cmp
and
pop
pop
sbb
pop
addr16
insl
inc
push
pop
inc
mov
push
xchg
incb
test
mov
xchg
cmp
push
fsub
ror
sub
test
lgdtl
push
add
sahf
xor
mov
daa
imull
stos
and
or
int
sahf
inc
xchg
jmp
jno
popf
clc
pop
cmpsl
mov
rolb
mulps
fwait
sbb
shrl
in
sbb
rorl
mov
cmp
jns
sbb
mov
cmpsb
dec
and
imul
xchg
push
pop
outsb
add
adc
push
andl
pop
insb
ficomps
cmp
stos
mov
popa
pop
stos
push
insb
scas
xchg
leave
icebp
imul
movsb
sbb
mov
push
xchg
rcrb
stos
adc
popf
xor
icebp
popf
out
leave
stos
push
bound
xchg
push
popa
and
sub
insb
arpl
sbb
pushf
jno
call
movsb
dec
pop
xchg
fs
add
sbb
fsubrs
push
lret
push
xchg
repnz
jbe
js
sub
ss
popf
nop
dec
jge
insb
insl
mov
ljmp
mov
pushf
mov
push
cmpsl
mov
lods
pop
stc
in
jecxz
in
xchg
test
mov
and
int3
insb
arpl
cltd
test
mov
rorb
pop
push
aad
loopne
dec
mov
add
jns
sti
in
nop
pop
adc
inc
push
icebp
xor
xchg
ja
push
sbb
not
inc
add
leave
mov
sbb
sub
insb
lock
jecxz
leave
fldenv
push
test
test
mov
out
xor
imul
int
fistps
les
out
nop
xchg
mov
insb
stc
ljmp
xchg
sti
loopne
mov
mov
xor
or
and
mov
push
lods
outsl
addr16
stc
shrb
rcrl
push
inc
and
stos
dec
andl
std
repz
push
jecxz
sub
xchg
push
mov
fldcw
rolb
mov
push
jge
imul
xchg
pop
pop
insb
rcll
outsb
les
stos
jae
add
dec
subl
adc
in
mov
mov
sbb
inc
cli
movsb
insb
push
jnp,pt
push
popa
jle
push
mov
add
jmp
pop
xchg
bound
push
hlt
test
inc
xchg
ja
push
ljmp
movsb
lods
test
test
es
push
add
mov
jne
ds
stos
jbe
in
out
and
xor
sub
mov
andl
call
xor
mov
pop
aaa
inc
mov
jae
sub
mov
sub
jl
push
mov
pop
push
and
mov
jno
cs
mov
pop
dec
sbb
pushf
cmp
adc
imul
push
mov
mov
ja
jne
popf
mov
fidivs
aaa
popa
xchg
insl
cltd
cld
push
sti
pop
repz
stos
xchg
push
adc
xchg
scas
mov
adc
cltd
jbe
insb
or
inc
xorl
mov
xchg
hlt
mov
test
psubq
jmp
and
xchg
sub
sbb
mov
cmp
andb
pop
adc
je
lahf
lret
mov
out
inc
cli
dec
jne
outsl
xchg
push
jb
cltd
iret
sub
scas
pop
cmpl
imul
mov
xor
adc
aaa
mov
and
push
mov
lock
in
fsubrl
and
sbbb
fildl
fwait
dec
push
stos
and
subb
daa
cmpsl
inc
cld
stos
sub
jnp
adc
cltd
push
int3
pop
mov
icebp
pop
cltd
push
push
lea
mov
cwtl
fwait
mov
clc
ret
sahf
and
push
inc
lcall
pop
cltd
dec
jo
jp
dec
lods
mov
push
cmp
test
or
ret
lock
sahf
cmpsl
xlat
pop
push
hlt
mov
cltd
push
pop
sub
mov
cltd
mul
xchg
lods
lret
sbbb
js
xor
lahf
jbe
lahf
lret
mov
addb
dec
jecxz
mov
scas
sub
incl
cltd
sub
pop
inc
mov
or
xchg
lcall
mov
dec
pop
mov
mov
es
sahf
mov
icebp
xlat
mov
sub
icebp
cmpl
aaa
stos
stos
mov
mov
mov
mov
sbb
imul
sbb
je
pusha
or
xchg
jbe
fadds
lahf
cmp
cmc
mov
jmp
jmp
mov
dec
xor
mov
js
adc
push
cmp
cltd
xor
in
mov
les
dec
add
mov
lahf
fs
cltd
mov
mov
rolw
sbbb
sarl
mov
and
stos
ss
into
mov
stos
in
in
mov
push
sbb
dec
cmp
loopne
mov
mov
cltd
sub
out
mov
icebp
mov
pop
mov
push
add
pop
loop
popf
jns
xor
add
sbb
sbb
cltd
loopne
test
sub
xchg
mov
and
jmp
xchg
popf
inc
lret
mov
push
ljmp
inc
mov
xlat
lock
cmp
mov
cltd
shlb
inc
imul
jne
mov
cltd
xchg
lock
pop
sbbb
add
fisubl
fwait
push
cmp
lds
fnstenv
cmp
lock
pop
divb
ficomps
adc
icebp
lcall
fwait
inc
mov
das
pop
fiaddl
stos
sbb
std
xchg
outsb
fnstsw
sarb
push
push
pop
es
add
dec
cmp
push
movl
rclb
dec
stos
enter
ror
cmp
push
fwait
stc
jg
push
je
jl
into
test
popa
cltd
pop
xchg
cmpsl
jle
mov
xor
adc
jb
push
jne
sub
mov
cmpsl
jg
movl
sub
insl
imul
repz
pop
inc
adc
and
enter
andb
loop
test
or
mov
dec
mov
xlat
cmp
jae
inc
dec
je
or
xor
frstor
xchg
mov
push
rcl
pushf
push
cltd
cmpsl
fcoms
add
mov
lcall
lcall
mov
add
inc
xor
insb
or
pop
into
adc
sub
xchg
cld
sbb
adc
test
or
es
sbb
mov
das
lock
push
pop
xchg
cmpsl
xor
fs
shrb
arpl
cmp
mov
lods
pop
imul
adc
xchg
fldcw
hlt
mov
repz
mulb
mov
inc
cmp
fimuls
repz
lods
int3
push
push
loopne
lahf
mov
mov
jl
cmpsb
lahf
popf
test
push
xchg
fldcw
test
lods
xchg
pop
cmpsl
andl
sbb
fwait
cmp
dec
push
and
adc
sahf
mov
shr
and
fldcw
add
jne
inc
cltd
and
sub
pop
rcrb
mov
lods
out
jno
push
scas
ds
push
cld
dec
inc
rcr
jno
test
ds
jle
aaa
sub
jg
insb
mov
popf
cltd
cmp
sahf
xchg
cwtl
mov
push
pop
leave
sub
sub
adc
popa
fadds
and
sarb
jecxz
popa
loope
stos
xor
lods
out
ret
stos
push
lcall
cmc
and
or
adc
add
std
insb
push
pusha
rolb
mov
imul
fadd
mov
xchg
cmp
sub
imul
jecxz
cs
or
push
mov
sub
imul
mov
fwait
mov
mov
insb
and
push
jns
insb
ljmp
sbb
cltd
fadd
push
movsb
add
inc
fimull
pop
ja
sti
cltd
dec
out
xchg
jo
outsb
cltd
jmp
cs
xchg
inc
cltd
insb
fdivs
xchg
cld
inc
fs
inc
ficomps
ds
adc
jae
inc
jnp
je
cltd
cmc
cmp
pop
mov
icebp
jecxz
dec
mov
cltd
lds
aaa
insl
mov
cwtd
ljmp
out
pop
sub
mov
mov
addr16
jbe
inc
in
xor
sub
jb
in
add
divl
movsb
and
bound
jae
mov
cltd
lock
sbb
sbb
andb
loop
mov
jo
sub
xor
out
pushf
mov
sbb
rorb
fwait
lret
mov
loope
outsl
and
and
cltd
xor
xor
cltd
dec
xor
test
fwait
lret
dec
bound
dec
jns
into
xor
push
leave
sbb
sbb
jp
jg
rolb
cltd
dec
sbb
dec
add
int3
cltd
mov
je
dec
cmc
test
xchg
cltd
push
adc
xor
shlb
cmpsl
stos
cli
cmp
iret
enter
push
cltd
push
or
cmp
sbb
pop
call
cltd
enter
mov
aam
jl
inc
xchg
mov
push
addl
mov
or
push
test
push
outsb
mov
stos
jbe
cltd
add
cltd
sbb
xor
sarl
inc
repz
out
inc
cmpsl
mov
fchs
movsb
ss
cmpsl
lods
xor
cld
fldt
lds
into
adc
scas
cltd
in
pop
cmc
add
pop
pop
imul
in
pop
xor
cltd
out
test
sbb
cltd
or
rorl
fcomps
jne
pop
clc
lret
xchg
fisttps
add
mov
psubsb
mov
aam
mov
mov
or
mov
cmp
cltd
or
sub
popf
dec
nop
mov
xor
cltd
ss
push
int
test
mov
xor
not
lcall
cltd
imul
test
cwtl
pop
rol
xchg
insl
lcall
or
jp
aas
cltd
aaa
lea
lds
push
insl
dec
cltd
movsl
jae
inc
mov
xchg
mov
lcall
scas
imul
frstor
push
fidivl
adc
mov
fcomps
inc
das
xchg
cmp
cltd
jge
fimull
pop
lea
mov
add
mov
jne
cltd
push
das
fs
test
mov
pop
and
xchg
sti
out
push
dec
jp
cltd
sbb
scas
adc
sbb
shll
aad
scas
mov
xor
pop
hlt
and
test
xchg
in
and
cltd
call
aaa
outsb
hlt
cltd
lcall
push
cltd
subl
cmpsb
xor
call
pop
xor
add
in
pop
cltd
and
lahf
std
in
andb
push
cltd
dec
imul
sub
mov
or
mov
adc
ljmp
out
clc
adc
int3
xlat
sti
and
xlat
xor
mov
dec
out
ds
mov
fcomps
and
push
mov
ror
sbb
loop
aam
cltd
bound
inc
and
add
dec
pop
xchg
cltd
dec
repnz
in
sbb
js
lods
into
mov
lcall
and
mov
add
roll
bndldx
lcall
inc
cltd
dec
push
pop
cmp
cltd
dec
lret
push
call
pop
test
xor
test
bound
in
mov
int3
adc
repz
mov
pop
movsl
push
inc
push
frstor
hlt
mov
ss
mov
sahf
mov
dec
mov
jle
ljmp
popf
fwait
rorb
dec
push
sahf
fwait
xlat
mov
inc
fiaddl
sti
notb
or
sahf
in
ret
repnz
mov
fwait
dec
pop
cwtl
dec
sarb
xlat
das
mov
or
stos
ss
fisubl
popf
pusha
mov
lahf
sbb
lahf
jecxz
ret
push
pop
inc
aas
ficoml
scas
push
orl
lcall
cmp
insb
xchg
mov
inc
shl
lock
mov
mov
mov
icebp
inc
lahf
hlt
or
out
dec
pop
fbld
inc
cltd
sar
test
pop
fwait
and
or
jne
jp
ja
dec
pop
cltd
mov
xchg
lea
jp
xorb
pop
push
imul
lahf
js
push
xchg
push
test
cmpl
bound
mov
in
stc
sub
je
jo
mov
lret
punpckldq
cltd
and
cmp
cld
sbb
fs
cltd
fstpt
xchg
cltd
dec
cli
loopne
out
add
jbe
add
lret
sbb
cmp
pushl
mov
out
sbb
clc
hlt
std
cltd
ja
lret
ds
nop
shlb
jmp
dec
outsl
lahf
cltd
add
and
cltd
scas
push
inc
fisttpll
jp
jnp
rcr
insl
xchg
inc
cltd
cmp
ja
xchg
mov
into
ljmp
pop
lahf
shll
sub
mov
in
int
cltd
repz
lods
inc
jge
jle
cmpsl
fs
mov
cltd
mov
jmp
call
sbb
imul
cltd
inc
mov
push
xchg
xchg
xor
and
cltd
filds
and
cmpsl
pushl
aaa
jne
inc
xchg
pop
push
das
loopne
jg
push
out
je
xchg
lea
outsl
adc
cltd
into
in
sub
lret
xchg
jno
add
cltd
sbb
adc
aam
stos
mov
std
xor
sbb
stos
cltd
push
push
add
mov
lcall
rorb
or
push
scas
mov
sbb
adc
jle
outsb
cltd
xchg
pushf
mov
mov
sbb
push
adc
cwtl
out
push
cs
out
leave
mov
add
decb
cltd
push
ja
push
xchg
pop
or
sbb
xchg
and
xlat
xor
test
mov
pop
push
lock
mov
loope
cltd
ljmp
push
cltd
xor
and
cltd
mov
test
repnz
inc
pushf
lds
bound
and
inc
jle
dec
popf
and
xchg
mov
mov
pop
sbb
mov
jmp
cmp
adc
hlt
mov
mov
cmpsb
sbb
loop
and
es
sbb
mov
cld
jnp
xchg
mov
notb
out
fisubrl
jb
cmc
int3
jmp
push
pop
jbe
mov
jae
and
jno
cmpsl
ljmp
rorb
mov
inc
and
push
inc
xchg
cltd
xchg
in
ss
dec
mov
aaa
mov
rcr
cli
sbb
mov
repz
mov
cltd
xchg
subl
sub
iret
movd
cmpsl
mov
lcall
clc
xchg
pop
subb
jmp
sbb
lret
pop
fs
jns
stos
and
mov
cmpsl
movsb
int
dec
cltd
cmp
or
add
cltd
add
cmp
xchg
add
push
mov
arpl
push
sbbb
pop
push
je
sbb
mov
jnp
testl
mov
fwait
jmp
jl
stc
xchg
ret
push
das
xchg
jb
sahf
insb
in
test
dec
dec
stos
dec
fidivrs
stos
inc
pop
test
xchg
gs
mov
sbb
scas
jecxz
jb
jp
jecxz
lods
inc
in
data16
test
jl
popf
pop
push
movsb
cmp
cli
mov
or
test
mov
push
ja
mov
pop
push
aam
sub
push
dec
arpl
mov
inc
addr16
xor
test
jo
insb
push
mov
push
mov
cmp
insb
enter
sbb
sarl
jnp
cltd
sbb
pop
imul
pop
adcb
sbbl
push
xchg
or
rcll
rcrb
sub
jmp
sub
popf
cmp
push
inc
xchg
cmpsl
sbb
mul
outsb
shrb
mov
cmp
jnp
call
mov
std
and
mov
add
cli
loop
pop
and
lcall
cmp
stc
inc
sti
xchg
xchg
les
jp
pop
xlat
cs
lock
int3
mov
fmulp
cmpsl
imul
std
xchg
cmp
pop
pop
push
lea
dec
pusha
sub
inc
mov
out
push
add
stc
xor
iret
add
dec
jmp
nop
popa
insb
mov
in
lds
add
pop
push
out
sub
adc
push
sbb
inc
adc
insb
mov
sti
repnz
imul
mov
flds
xchg
repnz
fnstenv
testl
mov
inc
fdivl
or
jo
addb
loope
mov
jb
scas
test
ja
sarb
imul
lcall
or
stos
mov
inc
xchg
movsl
mov
jb
push
sarb
push
lods
stos
in
cmpsb
and
les
imul
mov
jp
mov
test
jp
testl
decl
mov
adc
insb
jmp
pushf
or
push
inc
xchg
mov
mov
dec
push
mov
dec
cmp
ss
push
cmp
or
jle
sahf
hlt
and
and
cli
sbbb
mov
movsl
int
sbb
mov
popf
xchg
std
push
inc
inc
fiadds
push
movsb
pop
xor
out
cmp
inc
pop
loope
mov
mov
sub
cmp
orb
jle
dec
dec
jle
shrb
notb
jmp
fwait
sbb
inc
ror
stc
push
dec
cltd
pushf
call
nop
jg
idivl
loop
jno
mov
cmp
stos
scas
ret
add
inc
loopne
lret
mov
fwait
push
cli
and
sub
mov
cmpl
loope
mov
jo
cmpsl
cltd
jle
cmp
stos
ret
sbb
mov
or
mov
add
ret
mov
jbe
ljmp
aas
fistl
enter
inc
test
mov
push
out
lcall
fadds
jmp
incb
xlat
dec
jbe
cltd
ret
ret
and
cmp
mov
das
xchg
cmc
push
sbbl
pop
mov
out
jle
shrl
xchg
sub
cltd
pushf
ss
sub
xlat
test
and
es
cltd
inc
mov
sti
xchg
lock
jg
movsb
loope
xor
and
pop
fwait
jl
test
jp
or
shrl
jecxz
cltd
mov
pop
stos
push
sbb
popa
and
jge
cmp
cltd
mov
push
push
push
repnz
add
ret
jno
mov
push
fwait
popf
jnp
mov
sbbl
bound
push
inc
xchg
cltd
jp
mov
push
cltd
jbe
sbb
ficompl
push
lods
cltd
mov
lock
pop
popa
cltd
hlt
in
ja
mov
in
cltd
dec
les
andl
jle
cltd
push
inc
jge
or
push
iret
movl
push
mov
inc
pop
scas
sahf
aaa
mov
pop
mov
xor
stc
movsl
add
jle
sub
add
clc
cltd
ss
les
fdivs
andl
dec
cltd
xor
jl
cmpsl
pop
mov
add
lcall
xchg
jmp
int3
cltd
out
in
mov
cmpsl
mov
movsb
inc
ficomps
loope
repnz
cs
roll
jb
scas
jl
shll
push
sbb
jno
jecxz
sub
mov
cltd
pusha
stos
rcrl
test
jle
adc
sbb
xlat
mov
cltd
mov
xchg
add
mov
pop
addb
and
sbb
roll
mov
add
xchg
jmp
xor
sub
sbb
bswap
out
mov
test
or
sub
cltd
sbb
cmpsb
mov
add
js,pt
and
lahf
into
das
fistpl
pop
jno
daa
jl
mov
sub
sbb
fnstenv
push
or
dec
sub
lods
lcall
cltd
loop
push
out
xchg
negb
dec
pop
stos
mov
jecxz
ret
aas
outsl
adc
cltd
cmp
aad
call
mov
shll
push
rcll
pop
enter
cmp
pop
mov
cltd
xchg
pop
mov
jb
outsb
sbb
sub
and
adc
lcall
rcrb
or
aaa
mov
push
mov
nop
out
lahf
dec
mov
jp
mov
dec
test
outsb
mov
adc
mov
add
xchg
xchg
cltd
mov
outsw
out
mov
fildl
rcrb
ds
nop
out
pop
ljmp
cmpsl
fistpl
mov
push
inc
cltd
pop
push
push
jne
js
add
inc
dec
mov
cltd
cmp
jge
mov
outsb
stc
mov
xor
add
adc
xchg
out
push
cltd
push
testb
fldenv
pop
cmc
mov
js
sbb
outsl
cltd
mov
cld
jo
loop
cwtl
cltd
mov
out
dec
mov
stc
cmp
movsb
pop
mov
cmp
cmpsb
stos
in
cs
push
push
sbb
adc
in
rorb
mov
mov
push
mov
cltd
push
jmp
add
cltd
iret
jo
cmpsl
cmp
pop
ficompl
dec
inc
mov
loop
cltd
test
xchg
ja
jmp
push
into
repnz
aaa
pop
push
test
popf
movsb
mov
pop
xchg
sbb
push
movb
test
sbb
lret
jnp
lahf
jp
push
adc
inc
inc
xchg
cltd
mov
pop
xchg
mov
je
scas
fists
inc
rol
cmp
adc
mov
or
sbb
repz
xchg
add
sbb
aas
xchg
mov
push
or
mov
mov
xchg
hlt
cltd
add
dec
cmpsl
inc
fwait
into
dec
repz
adc
push
jnp
mov
cmpsl
cmp
fwait
push
sbb
cltd
sbb
in
inc
jmp
mov
sbb
rcrl
adc
lret
jge
loop
adc
mov
into
nop
cltd
sar
inc
cmc
push
xchg
jg
clc
sub
inc
cwtl
popa
inc
repz
daa
sub
stc
pop
or
and
dec
jb
repnz
test
lea
sub
je
or
xor
addr16
pop
adc
mov
sub
loop
sti
cltd
inc
sub
pop
inc
fs
dec
mov
ret
cltd
int
or
xchg
mov
incb
mov
lret
cli
mov
or
cltd
dec
add
cli
cmp
iret
xchg
push
push
mov
jl,pn
ss
pop
scas
rcll
nop
sbb
std
int
add
movsl
cmp
ja
cltd
pushf
mov
mov
cltd
mov
pop
and
inc
ret
xchg
push
dec
cmc
mov
call
cli
sti
inc
push
rcrl
cltd
or
push
sub
push
shll
xchg
in
sarl
out
lcall
cltd
pop
mov
mov
jbe
clc
gs
inc
pop
cwtd
xchg
popf
sub
adcb
je
rcrb
sbb
gs
test
dec
fwait
add
push
pop
cmp
aaa
cltd
shl
inc
lods
cmp
inc
jbe
out
adc
inc
popf
std
or
test
cltd
pop
test
mov
mov
add
xor
sbb
ja
loop
mov
xlat
adc
sahf
cli
dec
push
cltd
jb
cmp
jmp
mov
mov
imul
out
mov
mov
popa
xor
xor
cltd
outsb
rcrb
xchg
rcrl
inc
addr16
fdivrl
mov
fldenv
inc
sbb
push
in
cmpsb
inc
jmp
idivb
add
adc
dec
lret
out
cltd
popf
jnp
inc
pop
cmp
adc
xchg
sbb
jl
mov
xchg
test
mov
in
sbb
shlb
xchg
pushf
mov
xor
sub
mov
fs
shrl
leave
lcall
cmp
mov
push
pop
lods
adc
shl
or
fwait
xchg
xor
jp
jb
sub
sub
xrelease
aaa
negb
clc
cmp
jmp
jae
je
add
in
sbbb
or
inc
fildl
push
xchg
add
je
push
xlat
push
scas
lret
stc
cs
lods
cmp
mov
stos
jne
push
sbb
js
rorb
dec
add
mov
or
adc
movsl
fwait
leave
pop
dec
test
fxch
inc
mov
cmpsl
aam
loope
icebp
mov
das
enter
mov
push
stos
mov
pop
test
rorb
rclb
xchg
scas
or
xchg
fildl
or
inc
xchg
nop
cltd
insb
enter
in
sbbl
mov
jp
fidivl
sbb
jns
adc
pop
loopne
cltd
adc
arpl
add
mov
filds
cli
cmp
pop
mov
or
sbb
les
gs
or
out
or
das
add
enter
cmp
xchg
sub
jne
aam
gs
cltd
xchg
adc
sub
lahf
pop
cltd
les
cmp
lock
cltd
xchg
or
add
or
call
sbb
leave
sub
repnz
hlt
test
xchg
addb
xor
fptan
rcrb
pop
fcmovnb
dec
and
ja
fwait
add
xor
out
cltd
lods
mov
leave
mov
lret
pop
mov
je
mov
adc
xchg
mov
sbb
adc
rcll
mov
lahf
sbb
test
mov
and
xor
adc
into
lcall
ss
rolb
leave
adc
lea
fwait
xchg
scas
cltd
or
mov
test
es
int3
xchg
xchg
popa
adc
fstpt
add
icebp
in
xchg
push
setp
sti
cmpsb
cltd
test
xor
fs
ja
cltd
aam
std
outsl
dec
pop
lods
inc
divl
filds
cltd
cmp
mov
xlat
lret
cltd
insb
xorb
sbb
and
push
sbb
iret
lcall
fwait
stc
imul
je
aas
and
imul
cltd
sarb
sub
lcall
sbbl
sbb
enter
dec
jns
int
xchg
pop
or
xchg
pusha
pop
roll
clc
fwait
sub
fnstsw
lcall
sub
cli
cmpl
mov
aaa
and
xchg
mov
add
adc
cli
imul
inc
cmp
push
cltd
ss
or
and
cmp
jae
fwait
xor
out
lcall
inc
stos
jne
into
cltd
imul
pop
xor
pop
pop
adc
cltd
cld
dec
in
jno
xchg
mov
mov
mov
scas
popf
push
and
xorl
adc
js
jbe
sar
rcll
cltd
popa
xor
or
cltd
call
aaa
jo
cmpsl
roll
loopne
stos
jp
movsb
pusha
out
bndldx
cltd
xor
xchg
lds
sub
pop
or
int3
notl
pop
divb
cltd
push
cmp
loopne
paddq
dec
out
xor
fisubs
xchg
cmp
inc
sbbl
push
cmp
mov
jge
movsb
mov
sbb
lods
int3
sub
xor
data16
add
cltd
sub
pop
std
pop
cltd
insl
addr16
daa
lret
push
or
cltd
fdivs
pop
or
dec
outsl
xor
jl
dec
mov
ds
ficompl
jo
cltd
loope
sbb
adc
pop
cmpsl
inc
sbb
fwait
push
aad
rorb
mov
roll
dec
xor
xor
xchg
das
popf
xchg
push
imul
leave
inc
push
pop
int
and
repz
pop
fidivs
into
cltd
add
lods
and
scas
inc
pop
push
cltd
xchg
add
dec
out
jecxz
aad
popf
push
adc
fcmovnu
cltd
or
fwait
or
xchg
inc
iret
adcl
jo
push
jb
insl
jns
lods
fwait
and
rorl
pop
fucomip
adc
adc
repz
mov
mov
cltd
daa
pop
jo
xlat
out
mov
xchg
xchg
aam
outsl
sub
stos
inc
jge
and
pusha
cmp
dec
jmp
addb
rcr
movsl
mov
cmpsl
cmp
fsubs
jge
outsl
xchg
lcall
int
cltd
dec
test
fs
inc
scas
rcr
dec
mov
sub
lcall
lret
jb
cmp
mov
lcall
fwait
lret
push
xor
jp
add
cltd
in
xchg
mov
sbb
loope
aam
cltd
push
push
int3
lahf
repz
pop
sub
fwait
lret
popa
inc
fidivs
out
and
cltd
push
push
xor
push
int
mov
stos
xchg
sahf
fdecstp
dec
xor
cmpsl
mov
pop
rolb
fcompl
add
bound
push
mov
or
or
sub
cltd
push
in
aas
fistpl
cltd
xchg
adc
push
ja
addr16
cmpsl
cs
fistpll
ficompl
andl
test
je
dec
mov
mov
leave
repnz
add
pop
push
in
adc
repnz
xchg
cltd
push
push
call
cltd
or
sti
rol
sbb
sbb
lods
sbb
outsb
mov
jnp
stc
lcall
dec
lock
sub
jle
int
scas
lods
sbb
shl
lret
add
mov
dec
adc
jne
fdivl
shll
mov
rcrb
and
push
dec
pop
xchg
push
aad
cltd
movsl
lea
sub
fsqrt
push
xchg
jg
fwait
push
dec
inc
sub
adc
dec
mov
dec
jmp
daa
xor
pushf
xchg
sbb
mov
adc
xorl
les
fiadds
dec
xchg
cld
cwtl
adc
aad
and
lahf
add
add
cli
in
ljmp
cmpsl
orl
sbb
lahf
pop
hlt
js
sbb
ljmp
cwtl
orl
out
lcall
cs
outsl
lret
test
test
pop
jb
xor
rcl
imul
mov
icebp
inc
sahf
and
test
jl
and
enter
divb
cltd
std
jle
pop
nop
sbbb
cltd
lcall
jge
mov
repz
add
dec
inc
cltd
push
jnp
outsl
xor
cli
pop
test
icebp
cltd
out
push
or
dec
mov
cltd
mov
daa
add
inc
dec
int
rcl
cltd
leave
bound
sahf
dec
aad
nop
icebp
cltd
sub
or
shl
lods
inc
fwait
cmpl
leave
xchg
and
outsb
sbbl
ret
cltd
sbb
rcr
mov
mov
sbb
and
adc
into
cmp
xor
xor
dec
dec
fistpll
lret
test
push
repnz
inc
jmp
adc
lods
movsb
mov
mov
xor
pusha
push
xchg
cmp
ret
adc
enter
lcall
and
gs
sub
add
adc
cltd
dec
jge
sub
mov
cltd
das
andb
jmp
xor
mov
test
push
sbb
inc
cltd
movsl
adc
lret
mov
popf
mov
dec
xchg
cmp
xchg
inc
mov
xchg
xor
lods
dec
scas
cli
negb
lcall
je
cmpb
out
cltd
adc
cmpl
push
fstps
jmp
in
clc
add
push
cmpsl
pushl
dec
mov
lds
push
sub
int
mov
es
mov
and
popa
mov
or
xor
movsl
and
mov
xchg
sub
fstps
cs
pop
sbb
shlb
mov
pop
jnp
rolb
mov
cltd
adc
lds
cmp
jp
dec
rcll
cli
int
cltd
fnsave
add
mov
insb
push
push
notl
mov
push
pop
push
out
lret
cmp
mov
cwtl
or
das
loope
inc
and
lret
mov
fstp
pop
fs
fisubrs
das
push
add
dec
popf
repnz
inc
test
cmpsl
jbe
inc
or
pop
stos
push
xchg
xchg
and
cmp
push
notb
insb
xchg
or
repnz
push
lods
jmp
cltd
push
mov
push
shlb
cmp
lock
xorb
es
sub
or
setns
pop
imul
lods
xchg
xchg
jp
push
imul
mov
adc
inc
out
cmc
test
popf
mov
out
cltd
mov
cmp
cltd
cmpsl
sbb
jg
mov
pop
cmpsl
fwait
lahf
xlat
popf
imul
pushf
pop
scas
cltd
and
outsl
shl
mov
sub
and
imul
lret
jno
repz
jb
cs
xchg
xor
pusha
cltd
adc
enter
cli
pop
adc
adc
sti
and
cmp
xchg
pop
cmpsl
xor
test
inc
or
das
lods
add
dec
mov
jecxz
adc
add
and
jo
mov
repz
test
and
mov
cmpsl
add
sti
fstpt
shrl
inc
mov
out
ljmp
mov
xor
sbb
fcmovnb
loop
or
in
shll
gs
xchg
pop
nop
push
outsl
iret
shrl
out
sbb
fwait
and
cmc
outsb
test
push
je
in
imul
jecxz
xchg
mov
jge
int
lcall
push
aaa
ret
lcall
aad
adc
cltd
call
push
cltd
sub
xor
xchg
add
cltd
inc
or
jbe
shll
xchg
sub
popa
rcrl
scas
push
js
lcall
sbb
cltd
jg
in
and
ret
push
leave
lea
jbe
loop
adc
pop
sub
cltd
dec
aas
mov
cltd
or
or
sub
cltd
sbb
mov
nop
aad
lock
mov
lret
rcrl
pushf
call
cli
lahf
lcall
inc
mov
mov
xchg
add
cmp
cmpsl
int3
imul
fnstenv
or
xchg
or
arpl
dec
lds
sbb
lock
stc
leave
dec
cltd
subb
scas
sahf
xor
cltd
test
add
cltd
push
push
in
or
mov
enter
sbb
xor
bound
pop
cmpsl
dec
mov
sbbl
or
push
jno
fwait
adc
adc
data16
push
mov
cltd
pop
lret
xor
push
cmp
sub
sbb
xor
or
adc
sub
xor
aam
stos
jp
dec
negl
lret
cltd
mov
mov
sbb
dec
mov
jbe
cli
mov
jns
adc
push
pop
sbb
gs
or
pushf
icebp
int3
bound
test
fwait
dec
xchg
cld
in
outsb
push
lcall
pushf
jb
in
pop
or
xchg
xchg
cltd
add
mov
in
clc
dec
arpl
insl
cltd
jg
in
jmp
mov
lods
cltd
pop
fwait
test
cmpsl
add
or
pop
adc
popa
xor
fwait
cmc
fstl
sbbl
mov
cltd
push
cmc
sti
mov
ljmp
push
lret
in
jge
jl
cltd
lcall
xchg
shl
jecxz
sbb
ss
sbb
pop
and
xchg
cltd
aad
xchg
dec
lock
add
stc
dec
xchg
repz
mov
fwait
ss
dec
or
rorl
repnz
adc
cmpsl
mov
jg
dec
fcomps
ret
xor
cli
and
add
das
lods
mov
mov
stos
es
popf
cltd
pop
fwait
pop
dec
test
push
mov
push
and
aam
inc
lds
ljmp
rcrl
cmp
xchg
inc
mov
sub
sub
mov
or
mov
cmp
mov
test
push
int
ds
adc
lcall
mov
sbb
cltd
or
cmc
je
bound
mov
inc
dec
push
mov
jbe
sbb
mov
xchg
inc
pop
jecxz
cld
pop
cltd
or
adc
mov
or
popf
test
mov
sbb
pop
leave
pop
sbb
les
cltd
pop
sbb
iret
xor
push
dec
xor
or
inc
iret
int3
mov
test
or
pop
loop
fwait
mov
fmuls
outsl
cli
repz
cltd
sbb
pusha
stc
jnp
dec
jge
pop
xchg
push
or
sarl
sbb
divl
mov
push
cltd
sub
jnp
mov
mov
mov
mov
xchg
cmp
jns
mov
nop
pusha
jl
inc
negb
cltd
testb
int3
cltd
adc
mov
sbbb
xor
jb
xor
fwait
or
pop
dec
jne
popf
cmpsl
pop
jg
jge
pop
jp
in
sbb
pop
cltd
sahf
xor
fs
lods
mov
les
nop
pop
mov
sti
sbb
mov
stos
movl
shrb
dec
mov
fcmovb
cmpsl
or
xchg
xchg
and
inc
aad
add
inc
cmp
and
popl
mov
loope
adc
in
pop
xor
jns
popf
fcmove
and
jbe
pushf
jae
sbb
jle
nop
push
dec
lret
aam
push
inc
jb
push
cltd
ret
jns
push
jbe
cltd
mov
cmp
sbb
and
lds
mov
daa
pop
sub
jb
insb
push
inc
les
cmpsl
mov
xorl
sub
ret
mov
jmp
inc
loopne
mov
ja
mov
add
mov
jbe
cltd
jno
aaa
fstl
pop
inc
adc
sahf
dec
test
or
rcrl
scas
sbb
mov
cli
jbe
mov
inc
movsb
adc
cltd
pop
inc
push
in
testb
pop
aas
mov
xor
cltd
xor
lods
ds
mov
push
fistl
xchg
cltd
in
sub
pop
and
xchg
shll
jns
cltd
dec
lock
xchg
dec
cltd
add
stos
sbb
push
es
cltd
test
mov
fs
sub
dec
pop
mov
push
jp
cmp
les
imul
fwait
cld
inc
lock
aaa
sbb
test
jb
jnp
jl
or
mov
cmpsb
and
cltd
inc
mov
cld
xor
ja
test
es
mov
jecxz,pn
cwtl
adc
adc
rcr
push
push
sar
scas
inc
push
repz
into
stc
pop
in
cltd
xchg
lret
cltd
pushf
pop
mov
cmp
mov
fistps
dec
cmp
jb
cltd
lods
stc
inc
inc
dec
push
cltd
stos
xor
add
aad
jg
sbb
lods
xlat
nop
icebp
lock
pushl
cltd
dec
addr16
xor
jge
cltd
inc
dec
ret
in
sbb
sbb
cltd
pusha
xor
ret
sub
out
mov
mov
xor
test
lea
cmp
sbb
cltd
stos
leave
imul
incl
stos
lret
cli
push
add
imul
test
orl
cwtl
cltd
int
popa
xchg
call
jno
cltd
lods
test
insl
inc
xchg
rcrb
enter
cltd
push
lcall
stos
ljmp
jp
cltd
pop
rclb
dec
pop
andb
mov
adc
pop
sbb
mov
les
push
cmp
mov
sub
rolb
cmp
xor
adc
jmp
cltd
xor
add
mov
in
test
std
xor
xchg
jno
out
mov
mov
sub
cltd
xor
jecxz
cltd
sarb
inc
cmpsb
out
cltd
cmp
pop
cwtl
sub
and
cltd
insb
sbb
je
xor
push
cltd
int3
cmp
mov
lret
xlat
aaa
ljmp
cmpsb
and
rclb
pop
sub
cltd
shl
insb
and
aas
adc
cli
negb
sub
and
dec
mov
movsl
cltd
adc
mov
or
outsl
pusha
pop
movsl
rcll
sub
sub
rcll
test
push
or
mov
inc
cltd
jne
and
jp
mov
jge
out
movb
loop
insb
fnsave
mov
sbb
mov
lahf
mov
and
mov
jl
mov
call
adc
sbb
imul
dec
jns
pop
pop
pop
andl
push
dec
lcall
mov
mov
hlt
js
cltd
setno
lds
push
mov
inc
lcall
dec
add
sub
push
mov
movsb
dec
adc
insl
scas
push
adc
inc
cwtl
jmp
cmc
cltd
imul
cltd
xor
lcall
lea
les
cmpb
fwait
sbb
pop
dec
and
push
fsubp
jle
jp
sub
dec
aas
xchg
ret
cltd
das
add
and
push
idivb
aad
outsb
mov
subb
mov
pusha
push
xchg
pop
adc
jmp
in
sbb
sahf
cpuid
mov
cltd
outsb
xchg
test
mov
lcall
je
fidivs
jno
add
inc
es
or
in
test
mov
inc
scas
mov
jo
ja
mov
xlat
mov
pushf
sbb
mov
mov
lret
insl
pop
pop
push
mov
popa
cmp
adc
add
int3
add
pop
fnstcw
sti
mov
push
or
scas
cmp
daa
fwait
add
pop
int
fwait
repnz
xchg
jle
push
xchg
lcall
mov
cmc
je
stc
icebp
data16
adc
mov
push
test
sbb
cltd
jo
daa
les
in
cmc
mov
orl
fwait
add
je
gs
adc
bound
fidivrs
ret
jne
cltd
xor
loopne
inc
insb
or
cltd
andb
fcomps
sub
push
aad
lds
scas
add
rcrl
pop
and
lock
sub
mov
dec
cltd
and
cmp
fcomps
cltd
push
adcl
dec
pushf
icebp
sbb
lret
sbbl
cltd
xchg
pusha
into
add
mov
dec
and
negb
cltd
push
sahf
mov
je
adc
cltd
stc
jecxz
leave
test
pop
cltd
mov
jb,pt
rorl
cmpsl
lcall
push
cltd
xchg
push
add
shlb
stos
jno
cltd
aad
sbb
ret
loopne
sub
mov
cltd
cs
mov
jecxz
stos
jp
sub
mov
fimull
out
and
jo,pt
stos
enter
cltd
daa
aam
xor
push
in
pusha
lcall
in
cmpl
cltd
lret
jnp
out
pop
or
ret
cltd
xchg
stos
mov
addps
add
xchg
cltd
fs
in
movq
js
scas
mov
cltd
xor
mov
add
cwtl
jle
cmc
cmp
test
leave
jmp
cltd
sub
rol
aad
and
xor
cmp
push
push
cltd
out
push
movsl
aas
cmpsb
insl
inc
fwait
adc
pop
add
cwtl
dec
pop
sub
fmuls
xor
test
push
inc
jge
ret
cltd
cmp
mov
push
cltd
sbb
pop
test
cwtl
fnstenv
in
xchg
xchg
mov
lods
stc
movsl
cbtw
xchg
adc
push
lcall
add
movsl
ficoml
repz
cltd
xchg
popf
push
push
insb
xorl
nop
lahf
push
xor
xchg
negb
xlat
cs
test
jae
fists
jbe
loopne
fcoms
rcrl
push
add
sub
and
mov
in
icebp
xchg
and
stos
cmp
cmpsl
mov
push
cltd
push
lea
shl
imul
mov
dec
leavew
jnp
dec
mull
fcmovu
test
sbb
sbbl
cltd
mov
aas
and
cltd
andl
popf
cltd
and
xchg
lret
ja
fwait
iret
mov
fwait
or
and
xor
xchg
cmpsl
jb
enter
lret
sbb
aas
cltd
or
xchg
es
rclb
shlb
cmpsl
or
dec
sti
in
inc
inc
adc
adc
mov
cltd
xorb
out
cltd
dec
int3
aaa
scas
jo
xchg
xchg
add
xchg
fwait
movsb
aam
jmp
pusha
negl
mov
pushf
lods
sbb
mov
jp
add
push
cmp
test
ja
in
sub
shll
cmpsl
aam
clc
into
arpl
loope
pop
adc
and
movsl
and
pop
insb
jle
and
pop
jns
inc
les
notb
mov
mov
subl
hlt
sbbb
cmp
jl
ljmp
iret
xchg
enter
sarl
fstps
aaa
push
fwait
dec
add
sbb
adc
vphsubsw
mov
mov
arpl
fwait
adc
ficoms
shrb
pop
or
aad
int
dec
sbb
or
and
mov
mov
cltd
aad
loope
xchg
sub
lahf
cltd
mov
jp
mov
inc
mov
in
jae
add
or
cltd
popf
push
sub
jecxz
pop
cltd
fxam
adc
pop
outsb
sub
notl
enter
daa
hlt
sbb
xchg
xor
sub
sub
dec
inc
fcmovbe
jne
pusha
sbb
mov
pop
aad
or
std
pop
sub
cltd
dec
es
outsb
adc
add
push
pop
and
aad
push
lahf
jmp
mov
fsubs
cmp
mov
rcrl
pop
mov
cmp
push
fcoms
lock
mov
rcrb
sub
adc
pop
std
cmp
mull
inc
mov
pop
movsl
sub
add
insl
cltd
ret
push
sbb
cltd
repz
push
cltd
loop
mov
in
mov
xchg
xlat
lahf
out
cltd
jp
aaa
pop
or
call
mov
dec
push
mov
clc
pop
popf
xorl
ds
dec
lret
and
ja
in
int
jo
dec
repz
xchg
lahf
movsb
sub
push
ss
loop
pop
jge
adc
pop
or
or
js
nop
jo
push
dec
xchg
push
scas
sub
lcall
sbb
push
mov
fimull
pop
scas
jnp
insb
adc
cltd
leave
add
ds
inc
repnz
xchg
sbb
andl
cltd
test
jne
push
cmp
adc
movsl
pop
mov
dec
mov
cltd
pop
xchg
push
fistpll
push
cwtl
cltd
stos
and
jns
iret
insl
jge
xor
push
mov
jbe
cltd
pop
sbb
sub
sbb
cltd
popf
mov
ss
push
dec
xchg
mov
add
sbb
jno
ficompl
or
fstp
cltd
test
das
movsb
push
cltd
lock
xchg
mov
xor
repz
dec
xchg
mov
sub
icebp
in
mov
jae
cmpsl
jp
bound
mov
push
mov
leave
pop
fwait
inc
cld
stos
and
loop
sbb
xchg
mov
loopne
mov
rolb
lock
xor
cltd
ret
mov
cld
daa
ficompl
sub
cmpsl
dec
mov
inc
jo
push
lds
fistpl
aas
cltd
cmp
outsb
aam
xlat
sbb
stos
add
sub
mov
jnp
cltd
shlb
or
cmpsl
or
or
ss
mov
jl
mov
fstpt
jbe
cltd
aaa
lahf
mov
hlt
mov
xchg
adcl
or
push
fnstsw
add
sti
sbb
movsl
xlat
bound
mov
in
jp
ja
jb
jnp
rcr
stos
test
cltd
jne
pop
in
cmp
adc
movsl
fldcw
leave
sub
sub
cltd
stos
pop
fistpll
lea
inc
fimuls
lret
and
into
pop
cmp
addr16
xchg
insl
sub
and
cltd
xchg
shl
rcrb
or
cli
push
cwtl
mov
sbb
cltd
lock
enter
cltd
mov
sahf
pushf
cli
cltd
xor
mov
insb
add
jb
add
xchg
daa
dec
imul
cld
dec
aad
and
sub
xchg
cltd
nop
or
int
or
sahf
sahf
daa
jle
lcall
fimull
gs
mov
dec
dec
pop
xchg
cltd
addr16
mov
push
cltd
xchg
cmp
or
dec
popa
sbb
pop
pop
jae
cmp
imul
insl
pop
mov
push
jg
cltd
or
aaa
in
jns
mov
and
sbb
or
inc
pop
cltd
sub
push
test
mov
out
cmp
mov
jnp
or
cmc
and
ret
dec
scas
cltd
mov
adc
sbb
pop
aaa
out
cltd
mov
fs
mov
cwtl
add
cltd
movsb
jae
xor
cltd
lea
inc
shl
mov
adc
cltd
bnd
outsl
es
roll
sti
mov
mov
fsubrs
xchg
movsl
rcrb
movsb
inc
inc
or
cmove
mov
cltd
xor
repz
repz
addl
sbb
shlb
cmpsl
pop
jecxz
scas
or
xor
in
jp
ficoml
ret
mov
adc
bound
ret
jge
cltd
inc
lds
cltd
aam
ljmp
mov
mov
cltd
dec
jp
sub
es
jb
mov
fnsave
fsubrp
fisubrl
pop
xor
cltd
inc
mov
insb
inc
data16
lcall
test
push
pop
fwait
sub
inc
mov
sbb
mov
cmp
xchg
mov
jmp
scas
push
cltd
sbb
cmp
loopne
xor
out
lds
scas
and
mov
movsl
in
xor
cltd
loopne
pusha
and
addr16
cwtl
sbb
insb
jnp
lods
cltd
dec
aaa
xlat
in
or
xor
mov
cltd
pop
mov
cmp
sbb
subb
mov
out
dec
mov
jno
xchg
push
notb
push
nop
cwtl
dec
dec
cmc
cli
fs
test
lahf
imul
cmpsl
mov
fdivl
push
fwait
stos
gs
inc
leave
and
mov
jmp
rorl
push
aad
dec
loop
push
pop
cltd
out
adc
and
add
mov
adc
cltd
in
mov
xchg
cmpsl
jg
dec
daa
scas
fistl
xor
jb
in
cltd
aas
mov
aad
cltd
mov
adc
cltd
fdivs
aaa
jns
jo
or
push
cltd
mov
jecxz
mov
adcl
dec
bound
outsb
in
mov
jp
sub
jae
in
cltd
mov
xchg
inc
pop
sahf
mov
jb
cmc
sub
ret
cltd
jae
insl
out
inc
mov
jbe
and
push
or
pop
jmp
or
lcall
rcrb
push
add
sti
nop
or
mov
dec
inc
push
leave
jns
mov
arpl
iret
ja
push
fwait
jne
or
cmpb
mov
mov
in
sub
out
cltd
mov
movsb
push
nop
pushf
or
xchg
mov
lcall
pop
cltd
sub
lds
popf
mov
jecxz
pop
daa
lcall
xchg
cltd
ss
imul
ret
roll
stc
loopne
fcomp
or
mov
mov
movsb
mov
ja
xlat
test
pop
inc
or
lcall
into
cltd
lahf
sub
les
mov
subl
pop
push
pop
flds
push
cltd
jecxz
lret
dec
js
shl
mov
test
sub
sbb
push
stos
std
jb
push
cmp
cltd
sbb
mov
dec
cmpsl
sahf
sub
jne
int3
sahf
sti
stos
hlt
push
pop
aad
pop
fwait
xchg
or
inc
bound
lods
fildll
or
popf
pop
add
hlt
mov
adc
pop
subl
mov
out
sbb
xorl
iret
jbe
mov
cltd
shl
imul
xor
sub
lahf
lods
cmp
cwtl
lcall
sbb
add
adc
or
push
mov
xchg
fwait
leave
cmp
rcl
testl
dec
int
jge
std
jo
jae
and
push
fimull
xchg
cmpsb
and
xlat
sub
es
lahf
cmpsl
test
jnp
or
jb
inc
cmp
fcoms
and
aas
xchg
cwtd
outsl
xchg
inc
jbe
sbb
int3
mov
push
cltd
mov
dec
rorb
sahf
ljmp
add
stos
jg
inc
pusha
inc
loopne
and
rorl
rcrb
popf
sahf
dec
sbb
mov
xor
jle
rcrl
cltd
xor
add
adc
addb
cmpsl
ror
dec
cmp
in
push
sahf
push
aad
push
or
or
mov
xor
cltd
xchg
xor
push
dec
out
std
sbb
jb
mov
xchg
ficompl
xor
cltd
jno
jnp
lods
push
std
cmpsl
loope
sbb
loopne
mov
xor
imull
cmp
movsl
or
inc
push
xlat
sbb
daa
jae
enter
jg
andb
nop
fwait
outsb
bound
jmp
fists
stc
sbb
and
ret
arpl
lahf
pop
or
push
xchg
cld
shll
pusha
xlat
xchg
daa
ja
and
setg
repz
xchg
xor
stc
into
lcall
lods
jae
cmp
mov
popa
cltd
aam
jnp,pt
pop
jmpw
mov
rcrl
adc
fcmovnu
sbb
test
xchg
movsb
or
cmp
cmp
inc
adc
es
xchg
mov
add
push
jbe
imul
jmp
sbb
lcall
push
add
data16
shrb
adc
addl
ret
les
add
cmp
cli
test
push
inc
push
cmp
mov
cmp
sarb
inc
pop
sti
sti
jb
xor
mov
ret
mov
test
fiadds
xchg
sub
leave
dec
rorb
push
rolb
push
test
mov
enter
jno
mov
push
repnz
sbb
jmp
mov
push
inc
shll
testl
jecxz
dec
cmp
icebp
mov
mov
mov
arpl
stos
outsl
popa
nop
das
xchg
negb
neg
push
shll
stos
js
xchg
les
stos
sahf
jae
clc
bound
aad
xchg
and
into
es
cli
dec
aad
cmp
je
test
flds
or
cltd
pop
fisubrl
andl
aam
mov
adc
js
xor
jmp
push
fcomps
cltd
repnz
mov
cltd
sahf
add
mov
cltd
push
add
jns
leave
iret
das
push
or
cltd
mov
data16
adc
cltd
lods
pusha
mov
insb
add
cwtl
mov
stc
sbb
inc
aaa
or
push
cltd
sbb
add
cltd
adcb
pop
dec
stos
mov
orb
fwait
sbb
sbb
cltd
and
pop
gs
dec
cltd
mov
push
shll
out
aam
push
sbbl
dec
rorb
push
lds
stc
adc
xor
in
add
imul
fwait
stos
dec
add
adcb
bound
fbld
out
dec
fstpl
loope
mov
lcall
xchg
pop
cmpsl
rorl
std
sti
popa
push
jns
insb
jg
cltd
loop
mov
sbbb
lret
cltd
jne
lods
movsb
movsl
into
pop
xchg
cld
cmp
add
sbb
test
movsb
adc
divl
data16
incb
xchg
int3
sub
jecxz
icebp
or
push
ljmp
cltd
imul
hlt
push
iret
testb
dec
cmp
mov
dec
add
inc
sbb
stos
icebp
inc
clc
lcall
push
dec
test
fnsave
push
popf
mov
ret
scas
fs
sbb
lret
xchg
into
adc
lods
test
pop
jno
jnp
lahf
xchg
stos
sbb
insb
jb
imul
cltd
and
sbb
scas
dec
push
cltd
sub
inc
imul
push
cltd
add
xchg
push
std
icebp
pop
cltd
mov
mov
lret
jno
rol
jo
push
pop
xchg
popf
outsl
rclb
cltd
pop
scas
cmp
outsl
cmpsb
ljmp
push
mov
adc
sarl
in
xor
cltd
jne
push
scas
negl
dec
jge
and
sbb
pop
int3
lea
cltd
sbb
cmp
leave
jbe
xchg
cltd
sahf
jle
repnz
push
daa
lahf
mov
cmp
pop
xchg
cmp
adc
xor
cwtl
pop
ljmp
sbb
stc
xlat
lock
sbb
js
mov
hlt
or
mov
mov
pop
mov
lcall
sub
mov
fidivs
sbb
jnp
jg
jl
jb
negb
and
pop
lahf
mov
and
dec
cmp
loopne
lock
push
cltd
xchg
sbb
ret
aaa
cmp
scas
popf
xchg
jns
jno
xchg
aas
sahf
cs
xchg
xor
fsubl
aad
sahf
cmp
mov
cld
jl
pop
nop
ds
outsb
push
fwait
dec
or
mov
jmp
mov
xchg
inc
or
mov
les
push
cli
push
lret
cltd
push
mov
inc
dec
jbe
or
movsb
dec
stos
jecxz
cmp
pop
or
jle
add
pushf
ret
stc
imul
sbb
cli
inc
in
clc
jmp
movsl
cltd
push
dec
sbb
dec
jbe
sarb
cltd
out
into
in
xorl
mov
es
rcll
out
mov
xchg
pop
bound
arpl
in
repz
call
pop
cltd
mov
push
aaa
and
testl
iretw
fmull
mov
cltd
or
mov
fwait
test
aas
xchg
incb
popa
pop
jbe
loopnew
cmc
ficomps
cltd
aam
mov
and
cmp
sbb
cwtl
testb
jmp
sbbl
int
mov
fwait
lahf
andl
add
fistps
call
cltd
ficoms
or
js
setge
addb
inc
and
loop
cmpsl
and
push
cmpsl
xchg
popf
mov
fiaddl
or
jno
mov
movsl
jno
add
cltd
jge
mov
pop
cltd
cmp
inc
xor
std
addr16
stc
mov
lahf
mov
in
push
fucomp
cmpsl
mov
add
pushf
lea
stc
mov
or
adc
lcall
icebp
fldt
push
sbb
and
pop
adc
jbe
into
aad
xchg
fstps
dec
mov
cltd
fdivl
aad
xor
lods
sbb
dec
shll
add
mov
push
mov
test
mov
lahf
push
outsb
adc
cltd
int
fwait
out
ljmp
xchg
or
out
push
lret
and
jmp
mov
cltd
mov
mov
in
aas
icebp
dec
jb
insb
repnz
mov
push
fs
jmp
les
aaa
nop
dec
mov
push
lds
lea
negb
aam
out
xchg
add
insl
imul
jbe
xchg
mov
xchg
cltd
sbb
ud1
cltd
movsb
mov
xchg
jne
jnp
cltd
push
mov
mov
fisubrl
shll
jae
xchg
jp
xorl
cmp
pushl
fwait
sub
test
fwait
test
enter
les
into
cmp
in
xor
cmp
dec
xor
lret
pop
cmpsb
rcll
sbb
or
into
xchg
cltd
mov
enter
jl
lahf
lods
cmp
stos
mov
ret
int
in
out
lcall
adc
aaa
mov
cmc
sub
shll
mov
test
lahf
jbe
inc
sahf
add
cmp
mov
mov
pop
lcall
cmp
stc
or
shl
test
je
mov
jle
sub
add
xchg
sbbb
scas
sub
mov
int
dec
pop
mov
cltd
es
fwait
jnp
pop
mov
ja
inc
stc
add
inc
and
mov
sbb
iret
bound
cltd
push
inc
shlb
cmpsl
jnp
xchg
out
jns
pop
movsl
inc
cltd
adc
cmp
jbe
test
add
dec
inc
adc
frstor
dec
jg
daa
jecxz
fwait
js
xor
pop
jae
jns
xchg
scas
push
fists
add
sbb
out
stc
cmp
daa
out
gs
cltd
adc
loope
and
sbb
or
sahf
mov
cli
filds
dec
add
jo
data16
ret
repz
fcoms
ss
faddp
mov
inc
xlat
stc
je
arpl
lret
jge
adc
push
fmulp
aaa
cltd
dec
adc
test
push
lcall
test
cltd
outsl
out
cmpsl
mov
cmp
cltd
push
mov
mov
dec
mov
sbbb
push
cltd
aam
stos
imul
mov
cltd
rorb
push
dec
fwait
outsl
sbb
int3
movsl
cltd
cld
iret
cmp
imul
dec
and
cltd
jg
cmp
xor
nop
lret
arpl
push
jecxz
mov
js
cmc
adc
shll
imul
xchg
sbb
ss
sub
mov
test
test
jmp
pop
push
scas
or
pop
lcall
aam
ljmp
scas
clc
repnz
cltd
inc
aaa
stos
or
xor
cmp
jmp
je
cmpl
adc
daa
leave
pop
aas
fs
cltd
bound
pop
int3
fsubrl
rcrb
mov
xor
ss
mov
cltd
dec
add
fidivrl
xor
nop
cmpl
fiaddl
xlat
mov
loopne
mov
push
repz
push
push
popf
aad
jmp
adc
pusha
add
add
sbb
test
repnz
rcll
outsb
dec
cltd
adc
mov
sbb
mov
cltd
repz
inc
cmp
mov
mov
xchg
jmp
rorl
xchg
aaa
sub
cltd
push
push
xor
out
mov
leave
jo
sbb
dec
bound
jge
icebp
mov
cmp
movsb
adc
fwait
sub
mov
imul
mov
ret
dec
pop
sub
das
ficoms
xor
push
ja
mov
roll
shlb
mov
mov
orb
insb
insl
pushf
or
pop
sti
or
mov
mov
loope
cmp
jl
push
fwait
mov
push
mov
inc
sub
ficomps
gs
subb
test
outsl
xchg
les
das
inc
and
adc
push
les
inc
js
imul
dec
nop
jno
add
lods
xchg
std
inc
rorb
lcall
xchg
stc
fs
sbb
lds
in
push
cmp
loopne
aad
sub
sbb
sbb
js
push
mov
and
out
adc
stos
pusha
fnsave
xchg
cltd
aad
push
loope
adc
mov
dec
jo
enter
dec
xchg
sbbb
pop
push
cltd
xor
loop
arpl
sbb
cltd
jl
cmp
outsb
outsb
dec
cltd
and
pushf
icebp
insb
vmovss
aaa
call
cltd
adcl
dec
adcb
int3
cltd
push
pushf
jb
sub
lea
mov
call
mov
sbb
lret
mov
mov
ret
fldcw
jp
cltd
rolb
mov
lcall
jl
mov
cld
clc
loopne
sbb
ss
sub
or
mov
sti
jnp
mov
iret
xor
cltd
mov
outsl
addr16
add
imul
rorb
aad
add
cltd
shlb
xchg
inc
dec
imul
jle
push
std
pop
call
fwait
enter
sbb
dec
push
or
fwait
test
adc
push
sar
and
cltd
xor
xlat
xchg
popf
out
inc
test
filds
mov
dec
shr
fwait
lcall
add
shl
cmp
pop
cltd
cmp
addr16
cltd
les
dec
adc
insl
in
rsm
pushl
rcrl
or
shll
mov
jle
pop
pop
pop
es
mov
push
leave
pop
je
jns
jp
cltd
ljmp
inc
cltd
rcrl
test
stos
aas
jmp
mov
stc
push
test
in
cmpb
dec
jo
adc
lcall
popa
popf
out
mov
inc
shrl
das
cmpsb
cltd
cli
sbb
stos
cmc
call
mov
fst
inc
addr16
mov
add
gs
lods
sub
jo
mov
cmp
mov
sub
aas
cmpsb
dec
and
shr
jo
ficoml
sahf
inc
mov
cltd
fsts
pcmpgtd
call
int
dec
ljmp
sub
xchg
jbe
push
in
add
lcall
cltd
xchg
push
pop
movsl
jnp
cs
loopne
rcrl
loope
repz
lock
dec
pop
cltd
mov
insb
sbb
repnz
int3
call
fwait
cmp
sbb
push
pop
push
or
aad
sbb
push
add
push
lret
mov
vmwrite
cmp
cltd
sub
aaa
inc
daa
and
mov
cltd
jae
cmp
popa
negb
arpl
ljmp
stos
test
lcall
pushf
call
mov
repnz
leave
aaa
adc
outsb
addl
cmp
adc
cmp
in
je
mov
adc
or
jl
aam
jnp
cltd
pop
mov
lret
in
mov
stc
rorb
and
cltd
adc
push
js
xor
ljmp
xchg
test
mov
mov
mov
lea
cmovo
push
daa
xchg
cltd
jl
rcrl
pop
sbb
sahf
je
and
fwait
xor
dec
dec
subb
call
daa
loop
sbb
cmc
mov
jne
xor
mov
loopne
push
fstps
aas
mov
divb
out
aaa
cltd
loopne
mov
adc
cmc
cltd
in
insl
cmp
hlt
fistl
cmpsb
push
inc
lea
sbb
xor
jne
xor
stos
and
sub
xchg
mov
and
cmp
push
jno
mov
ss
pop
adc
cmp
fsubrl
push
xorb
movsb
jb
cltd
inc
mov
lret
in
adc
lahf
pop
mov
pop
fbld
add
jmp
movb
jno
int
cltd
inc
add
pop
rorl
mov
aaa
cmp
lcall
pop
push
mov
mov
mov
sahf
add
nop
lods
inc
fisubs
cmpsl
inc
cltd
call
hlt
jmp
bswap
jno
dec
and
mov
mov
cltd
es
lods
pop
shl
jb
cltd
hlt
mov
scas
pop
dec
mov
and
sub
inc
jb
lods
cmpsl
inc
pop
xchg
icebp
es
dec
shrl
xchg
fistps
pop
imul
cmp
lock
adc
test
aad
cltd
rclb
mov
jae
inc
dec
sbb
pop
or
or
adc
xor
enter
out
mov
cltd
dec
jb
lock
mov
push
push
icebp
lea
cltd
inc
mov
aaa
jg
lahf
je
mov
jmp
xchg
lcall
cltd
jle
jp
aas
outsl
jb
jge
cltd
fidivl
repz
fidivs
lahf
std
cmp
sub
jae
out
inc
jns
xchg
xor
cltd
add
cmp
data16
fldcw
lcall
add
adc
jne
cltd
push
inc
fwait
pop
test
movsb
or
dec
sbb
adc
xchg
cmpl
incb
hlt
push
xchg
ficompl
xchg
push
xor
stos
icebp
xchg
mov
pushf
cltd
in
loope
mov
lock
or
imul
and
fwait
pop
setns
ss
cwtl
add
inc
mov
jns
push
movsb
jp
mov
mov
rcl
fildl
sbb
and
mov
xchg
iret
pusha
scas
cmpsl
enter
push
mov
adc
pop
cmpb
xchg
mov
mov
cmp
adc
jecxz
xor
movsb
xchg
fsqrt
cmpsl
inc
iret
dec
push
jns
popa
add
clc
ss
sub
and
sbbl
jnp
cltd
adc
mov
mov
and
xchg
mov
xor
pop
lahf
adc
das
orl
add
jge
adc
xor
aam
and
jmp
lahf
mov
cltd
mov
adc
add
xor
dec
ret
lds
xchg
dec
fistl
cltd
and
jg
cltd
jb
dec
jo
xor
cltd
fs
pop
rcl
lea
dec
sub
sarl
mov
std
fwait
es
xlat
js
loope
xchg
add
stc
add
cmpb
adc
push
inc
jp
insl
adc
aad
fldt
dec
inc
xchg
lcall
cltd
loopne
rclb
fwait
xorb
jne
jp
jb
sub
rcrl
inc
sub
data16
lret
push
inc
jg
jne
mov
pop
popa
push
addr16
arpl
mov
cltd
outsb
lods
and
sbb
clc
fwait
adc
testl
out
pop
xor
mov
inc
push
sbb
lds
push
stos
xchg
jl
in
adc
sbb
in
adc
push
cmpsl
arpl
mov
sbb
stc
fs
inc
xchg
insl
cltd
fimuls
xchg
pushf
cltd
push
in
add
ret
cltd
roll
push
cltd
add
push
mov
gs
cltd
lock
xor
dec
push
cltd
mov
dec
loope
jb
cltd
xlat
mov
imul
inc
mov
out
clc
lcall
pop
add
nop
roll
in
aad
ffreep
adc
xchg
adc
leave
cmp
aam
inc
mov
fnsave
fs
add
dec
jns
xchg
inc
sahf
leave
adc
fwait
mov
js
push
lahf
in
sti
add
push
dec
cltd
dec
inc
mov
test
fwait
pmaddwd
cmp
and
cmp
push
xor
xor
lock
mov
jbe
sub
out
icebp
cltd
mov
inc
mov
dec
idivb
jp
rcrl
das
pop
aas
repnz
lods
out
sbb
aam
xchg
sbb
insb
arpl
sbb
push
lahf
sbb
cld
les
testl
shll
idivl
movsl
or
and
push
pushf
pop
jae
pop
sub
xor
aas
js
mov
mov
inc
cltd
icebp
negl
and
mov
xorb
lock
bound
mov
lahf
adcl
rcrb
pop
movsb
dec
sahf
cltd
push
add
sub
lahf
cmp
cltd
mov
enter
cltd
or
jmp
and
push
loope
cs
cld
add
adc
sbbb
aaa
push
cmp
test
lds
clc
dec
aas
cwtd
into
mov
daa
roll
insl
mov
repnz
in
fstl
popf
inc
lcall
push
cltd
cld
gs
cmp
outsb
inc
or
inc
mov
mov
mov
sbb
adc
insb
cltd
push
andl
mov
add
sbb
shl
pusha
jl
inc
stos
loope
imul
or
jmp
xor
pop
sbb
nop
push
push
lcall
cltd
adc
adc
sub
jae
notb
aas
cltd
jnp
shlb
jl
aam
jle
movsl
mov
cltd
and
out
push
sub
lret
jb
and
call
xchg
sbb
xchg
popa
cltd
testl
xchg
cltd
lea
daa
cltd
into
repnz
cltd
ret
mov
out
in
dec
cltd
jmp
mov
sub
es
fwait
inc
popf
in
lahf
and
xor
in
mov
dec
xchg
mov
cs
lcall
add
dec
outsb
popa
sbb
xor
aaa
fwait
iret
es
and
xchg
or
xor
pop
aas
fisttpll
test
cmpsl
cltd
fsubp
push
mov
sbb
xor
ret
lods
fwait
push
mov
pop
bound
out
ljmp
movsb
pop
lcall
cltd
jno
rep
jne
sbb
xchg
mov
and
lcall
cltd
lahf
inc
sub
cltd
jo
sbb
mov
popa
lahf
divl
stc
fmull
and
lahf
repnz
adc
subb
inc
test
hlt
push
insl
lcall
xorw
fs
je
insl
aas
cmpsl
shrl
stc
jo
movsb
movsl
and
clc
cmpsl
sub
inc
inc
mov
pushl
inc
cltd
pushf
mov
mov
leave
shlb
cmpb
inc
mov
pop
add
mov
rcll
pushl
mov
mov
cltd
call
inc
pop
xchg
adc
loope
xchg
stos
vhaddpd
pcmpeqd
cltd
repnz
and
fsubr
cltd
dec
test
rcl
mov
call
or
pop
dec
lea
pop
mov
cltd
pop
cmp
dec
mov
sbb
or
andl
adc
mov
mov
pop
scas
iret
in
cltd
cmp
add
dec
es
outsl
stc
lock
lea
add
cltd
loop
mov
adc
fnsave
rcrl
xchg
sub
push
push
pop
cmp
icebp
inc
push
outsl
cltd
roll
ret
inc
cltd
sbb
outsl
jle
dec
mov
pop
xor
cmp
xchg
sub
loop
xchg
daa
test
sbb
in
xchg
pop
cltd
dec
ret
xchg
pusha
push
fwait
jnp
insl
inc
add
ficomps
mov
mov
or
and
push
xor
cltd
lret
pop
aas
xor
mov
mov
push
jmp
ja
sub
adc
adc
mov
or
push
popf
jb
out
mov
cmpsl
sub
imul
ffreep
call
cli
jl
insb
adc
test
out
sub
dec
mov
sbbb
cltd
push
in
movsl
scas
pop
imul
xchg
jmp
sub
pop
mov
pop
ret
pop
test
pop
cmp
iret
adc
cmp
cwtl
xchg
cltd
popa
mov
adc
and
aam
lcall
jg
lahf
add
aam
push
into
add
addr16
push
lahf
xor
test
adc
shrl
adc
cltd
loop
jnp
jns
sti
int3
cmpsl
cli
or
xchg
popf
lcall
pop
mov
shl
sbbl
push
sbb
loope
sahf
cmpsb
cltd
adc
adcl
cltd
dec
mov
inc
sub
cltd
lds
push
push
push
lock
lods
fwait
es
pop
sub
xchg
mov
std
repnz
cltd
sub
sbb
ja
testl
mov
cmc
subb
cltd
sbb
fwait
cld
cltd
shll
iret
popa
cwtl
cwtd
out
mov
xchg
rol
sub
imulb
daa
repnz
cmp
outsl
cltd
lock
pop
sbb
test
mov
pop
inc
pop
mov
inc
cltd
sti
sbb
xchg
adc
dec
cltd
sbb
nop
push
pop
inc
iret
cltd
fwait
into
lods
jl
sub
shll
das
jmp
cltd
cli
addl
cltd
lret
xchg
in
dec
ds
sbb
iret
lcall
jecxz
jmp
and
scas
inc
aam
mov
jns
andl
lret
ror
jnp
cmpsl
loop
sti
mov
mov
jle
clc
mov
add
adc
lret
enter
xor
adc
aaa
jns
js
lcall
pop
dec
cwtl
cltd
pop
loope
push
lea
mov
call
mov
or
or
fcoms
pop
inc
mov
scas
jg
mov
fucomip
inc
jmp
xchg
cltd
fisubrl
movsb
sub
xor
imul
mov
mov
cltd
push
mov
pop
cwtl
sub
xlat
sbb
cmpsb
cltd
ret
mov
cltd
push
imul
popf
pop
test
pop
dec
aam
imul
inc
faddl
jae
and
adc
outsb
pop
dec
cltd
sub
and
cmpsb
repnz
sub
cltd
scas
push
inc
mov
movl
cmp
sub
adc
cmc
subl
fisttpl
xor
mov
push
cltd
or
mov
cwtl
sub
and
mov
mov
cltd
sub
push
in
mov
jmp
pop
sbb
lcall
cmpsl
lods
daa
pushf
cmp
cltd
add
push
in
cltd
adc
dec
and
pop
add
pop
pop
sub
ljmp
test
pop
or
addb
xchg
push
sbb
cltd
cmp
test
pop
rorl
adc
and
pop
fwait
das
js
mov
push
xorl
cmpsl
sbb
cli
and
and
cmp
ficomps
gs
mov
cltd
pusha
les
cmpb
adc
xchg
out
stos
stos
sbb
mov
cmpsl
out
push
scas
sub
loop
mov
dec
push
int
out
dec
out
cmp
icebp
cltd
xchg
adcl
sbb
cltd
pop
and
out
xchg
rorl
arpl
sub
in
sub
ficoms
lcall
and
sub
in
lcall
cltd
arpl
xor
bound
jb
adc
xchg
or
cltd
aaa
push
lods
push
outsb
cltd
je
rep
fsubl
rclb
sbb
push
dec
inc
xchg
fwait
imul
cltd
test
lret
out
dec
cltd
jno
incb
nop
inc
lahf
ficoms
sbb
sub
jnp
jae
xor
clc
sbb
js
dec
jno
cltd
jge
jnp
or
ret
cltd
rorb
aas
icebp
and
pop
push
fwait
xchg
sub
dec
in
add
pop
dec
cltd
and
aam
in
cltd
cli
mov
push
out
lods
insl
adc
xchg
lahf
jnp
cltd
loope
adc
cltd
xlat
push
in
mov
xor
stos
cmpsl
push
scas
out
es
push
and
lret
cltd
add
mov
cltd
clc
xchg
insb
mov
jnp
pop
cmc
aam
pop
cmpsl
movsb
push
sub
jmp
dec
xchg
das
cmpsl
pusha
xchg
fisttps
mov
call
cltd
cmp
adc
imul
iret
mov
sbb
dec
mov
push
iret
mov
fwait
stos
xchg
push
stc
mov
add
jp
cs
push
jnp
adc
lods
shrb
sub
lcall
jno
mov
pushf
push
inc
pop
hlt
add
inc
jmp
pop
mov
and
mov
or
mov
jns
mov
stos
lcall
jno
int3
pop
jae
add
aad
push
sbbl
and
xchg
lahf
lcall
xchg
rcrl
dec
daa
xor
cltd
into
jl
pop
mov
call
clc
or
cltd
andl
cltd
incl
lock
nop
outsb
daa
les
mov
cltd
dec
mov
fwait
iret
fwait
dec
mov
subl
or
cmp
xchg
int3
or
imul
insb
jp
aad
and
mov
lahf
and
stos
mov
xchg
cmp
xor
mov
popf
mov
insl
sbb
test
xchg
sbb
pop
cltd
mov
cld
fistpl
cmpsl
ja
adc
mov
mov
jge
fistps
mov
cltd
push
aaa
mov
scas
int
cltd
gs
mov
adc
sub
lcall
pop
jnp
xchg
mov
enter
popa
rorl
jp
jnp
into
adc
mov
dec
or
xchg
js
mov
retw
jbe
mov
loopne
testb
in
cltd
xor
repnz
flds
push
pop
xchg
lcall
ret
je
sahf
cmp
xor
xchg
cltd
sub
fnstcw
cltd
cmpsb
xor
cmp
ret
mov
stos
data16
cltd
pop
mov
mov
mov
lret
movsl
xor
addr16
cs
xchg
cld
push
hlt
cmpsl
cmpsl
dec
pusha
mov
push
cmp
arpl
jo
mov
andl
outsl
dec
cmpsl
dec
out
and
mov
aad
pop
adc
mov
cs
push
andl
ds
mov
es
lds
cmpb
sbb
out
mov
jle
into
movsl
push
and
nop
sub
pop
out
push
cmpsl
cmpsl
inc
jae
imul
mov
cmp
sub
std
cwtl
fistl
or
cmp
dec
pop
dec
stc
sub
xchg
dec
push
insb
add
pop
mov
repz
cwtl
jp
aad
and
cs
out
stos
cmpsb
pop
repz
test
fsubrs
push
leave
lcall
xorl
mov
in
mov
insb
mov
adc
stc
les
pop
iret
jle
push
shll
jo
jns
push
inc
pop
pop
push
lods
lcall
sub
push
add
es
inc
scas
ret
fiaddl
mov
mov
dec
cwtl
inc
ficomps
pop
test
imul
sub
aad
std
push
scas
mov
imul
xor
rol
push
sub
mov
stos
mov
js
outsl
mov
adc
ds
sbb
xor
sbb
lea
xchg
mov
mov
cltd
shrb
push
outsb
fnstsw
jmp
cmpsl
adc
push
push
cmp
adc
test
mov
fadds
stos
mov
mov
ja
lods
dec
xor
mov
insb
xchg
iret
pop
popa
divl
test
idivb
sarb
stc
adc
cmpsb
fcomps
push
mov
test
sbb
xchg
test
jle
subb
and
mov
cmp
or
pop
mov
pop
shrb
test
jl
into
or
insb
push
nop
xor
push
mov
int
out
mull
jno
xchg
xor
sti
xchg
and
rsm
pop
jecxz
jle
popa
enter
insb
jmp
nop
cmp
pushf
adc
out
lahf
rorb
hlt
popa
jmp
lods
mov
test
adc
sarl
push
add
or
pop
subl
mov
movsl
bound
sub
rcl
push
insb
popf
roll
add
dec
push
fnstcw
stos
mov
andl
xchg
lods
xchg
dec
test
lcall
sbb
ljmp
mov
into
in
adc
or
xchg
or
sbb
inc
and
xor
pushf
jle
roll
push
scas
mov
mov
inc
es
mov
stos
lcall
lahf
add
cmp
iret
or
add
jle
test
popl
mov
pop
cmp
jle
and
jbe
mov
xor
mov
xlat
cltd
dec
ljmp
cmpsl
mov
add
mov
xchg
dec
jle
inc
loop
fs
and
adc
xlat
cmp
mov
cltd
or
je
jae
jl
cmpsl
add
test
sbb
cltd
imul
sbbl
push
mov
cltd
icebp
sub
mov
push
or
xchg
ljmp
addr16
jo
mov
lods
fimull
sbb
sbb
ljmp
dec
add
push
mov
dec
cltd
je
xchg
cmp
xchg
cmp
fdivrs
cltd
sub
es
test
add
aam
int
stos
mov
mov
jmp
cmpb
adc
in
rcrb
dec
sub
outsb
fsts
outsl
loop
sbb
ret
inc
pop
jns
rcll
mulb
mov
stos
in
cltd
xor
inc
mov
dec
push
fwait
mov
fldl
mov
xchg
pop
push
cltd
or
dec
mov
cltd
shlb
or
add
or
leave
outsl
adc
xchg
xchg
cltd
add
dec
adc
inc
lahf
test
lds
in
cltd
pop
cmpsl
and
lcall
jae
and
xchg
cmpsl
cmpsl
movsl
xor
ja
adc
insl
sbb
nop
dec
pushf
lods
jnp
cltd
jae
fisttpll
jp
and
mov
lret
xchg
push
aas
cltd
mov
inc
cltd
loopne
push
repnz
rcrl
jmp
imul
push
call
clc
adc
mov
sub
out
clc
aam
xlat
je
mov
and
fstl
adc
cltd
mov
mov
fwait
pop
mov
call
jg
rolb
push
outsl
cmp
fcmovb
jp
push
out
jbe
cltd
push
repnz
adc
daa
roll
cmpsb
sbb
add
movsl
hlt
lcall
cltd
das
sbb
push
xchg
cltd
xchg
xor
mov
rcrl
sbb
stos
outsl
cltd
pusha
pop
push
cltd
mov
sbb
rolb
lcall
les
jns
cltd
sbb
jo
cltd
stos
cmp
pop
mov
pop
stos
pop
ss
addl
sbb
cltd
pop
xchg
pop
push
bound
in
pop
mov
fwait
mov
adc
jp
nop
cltd
addr16
xchg
mov
jmp
rcll
lret
insb
mov
sbbb
cli
jecxz
cltd
adc
pushf
int3
dec
sbb
cltd
xor
pop
add
mov
cltd
ja
enter
push
sub
xor
mov
hlt
cmpsl
shlb
fucomp
lods
jle
xchg
lahf
rol
movq
jmp
xor
psubd
and
pop
fdivs
sbb
repnz
cltd
and
adc
push
cmpsb
sub
mov
cld
pop
sarl
cltd
add
jle
sbb
in
jmp
cltd
add
xorl
fdiv
mov
in
cmpb
arpl
lret
inc
stc
sbb
inc
xchg
test
jl
xchg
mov
cltd
xchg
loop
adc
mov
cltd
stos
in
std
cmp
scas
cltd
sbb
mov
scas
out
or
mov
mov
and
fwait
jl
shr
das
and
fdivr
cltd
lret
fstps
mov
mov
jnp
aam
and
cmp
push
jl
cltd
nop
incl
iret
les
cltd
lahf
jecxz
jns
inc
loop
aaa
pop
je
into
mov
cltd
popa
repnz
push
mov
pop
push
inc
addl
in
lea
push
imul
cltd
test
mov
jmp
push
push
cltd
adc
cmp
fwait
clc
and
cs
inc
out
rol
xor
lea
cltd
addl
mov
cmpl
xchg
or
jo
cltd
std
add
pop
fld
in
cltd
mov
out
fidivrl
lods
out
and
add
lcall
mov
sbb
pop
add
jp
clc
mov
cltd
add
out
lret
and
sbb
rorl
add
subl
cltd
sbb
mov
lods
push
fisttpll
jb
cltd
sub
and
ret
mov
mov
cmc
cltd
jl
push
push
out
inc
inc
cltd
ficoms
push
repz
das
lahf
cmp
arpl
pop
mov
ja
adc
cmp
or
inc
ljmp
imul
shll
sbb
cmp
cltd
aam
xor
inc
jge
xchg
lahf
xchg
repz
xchg
movsl
push
cmp
mov
scas
addr16
stos
call
push
shll
sbb
fdivs
pop
dec
testl
inc
fwait
lret
cld
xor
ja
xor
adc
push
cld
xor
movsl
lcall
mov
adc
cltd
sub
fnstenv
insl
cltd
daa
in
mov
out
sbb
cltd
and
decl
xchg
sbb
jg
in
repnz
pop
xor
pushf
lret
fwait
push
jno
xor
movsb
cmp
fs
cltd
mov
test
cmp
mov
dec
mov
addps
jnp
mov
cltd
or
xor
popf
push
rcr
daa
jle
cltd
cmc
popa
jmp
xchg
shlb
arpl
loopne
sbb
and
mov
xor
popf
loopne
inc
dec
sbb
or
xor
cs
pop
fbld
add
sbb
aaa
gs
pop
test
ret
inc
fwait
ds
rcrb
push
mov
cltd
mov
mov
mov
pop
cmp
sbb
cltd
es
cmpsl
pop
cltd
js
lock
xchg
cltd
jmp
mov
cltd
push
jmp
mov
adc
add
cltd
and
rcrl
fs
xchg
ret
clc
mov
cltd
jbe
mov
jl
add
sbb
in
xchg
insb
cli
pop
pop
push
xchg
cltd
mov
test
mov
push
dec
mov
pushf
adc
sbb
fisttpl
xor
stc
les
lretw
cltd
dec
mov
sbb
pavgw
pop
mov
fcomps
fadds
or
add
or
out
jg
stos
or
iret
outsb
fwait
loopne
adcl
jns
rcrl
rclb
fisttpll
mov
dec
ljmp
cltd
xor
scas
fildl
jb
ficoml
popf
lcall
cmp
mov
pusha
jg
shr
xlat
xor
lcall
cltd
bound
clc
add
mov
push
sbb
icebp
xchg
not
push
sbb
lds
xor
sub
popa
sarl
cltd
push
lahf
repnz
pop
cmp
int3
sbbb
jno
sbb
cltd
inc
pop
dec
mov
cltd
push
xor
inc
es
imul
or
fists
lcall
lahf
jge
ret
cmpsb
in
sbb
dec
insb
nop
dec
shl
popf
rcrl
xor
push
push
out
fdivrl
outsl
sub
out
popa
call
adc
popf
ljmp
stos
dec
mov
xchg
das
xchg
fstpl
rorb
mov
aas
push
dec
addr16
pop
stc
lds
incl
std
push
lahf
mov
mov
mov
mov
stos
sbb
movups
pop
mov
adcb
inc
add
leave
pop
cmpsl
mov
lcall
cltd
pop
dec
jb
and
stos
dec
cmpsb
or
or
xorl
ret
cli
fstps
dec
add
cltd
dec
mov
inc
cmp
pop
cltd
fsts
mov
fwait
push
xor
pop
or
dec
mov
pusha
int
into
cltd
xor
enter
iret
mov
cmp
fmuls
out
sub
mov
cltd
xchg
fdivr
sub
sbb
jl
cmpsb
xchg
cltd
popa
adc
sub
jb
cltd
orb
cmp
jae
pop
mov
decb
ret
mov
inc
cltd
push
into
cmp
in
xchg
pop
les
pop
inc
sbbb
mov
in
fmull
cmpsl
pushf
pop
movsl
push
in
mov
xor
test
mov
sub
inc
movsl
dec
xorb
pop
into
or
lahf
dec
cld
xchg
push
fisubrl
add
cwtl
les
push
mov
lahf
cmc
mov
ja
test
push
pop
mov
in
add
push
jne
lods
hlt
sar
shufps
jl
inc
xor
cmc
or
or
les
push
inc
test
loop
sub
and
mov
xchg
xchg
pop
cmpsb
js
scas
cmp
into
dec
fwait
xor
mov
mov
jle
push
fsub
insb
dec
cltd
push
sub
jne
adc
lcall
sbb
jmp
pop
xchg
loope
jo
mov
enter
cltd
inc
mov
inc
sub
jecxz
or
ja
lods
jno
daa
subl
inc
cltd
adc
pop
mov
xor
out
cmp
xchg
and
inc
adc
sub
jnp
cltd
mov
adc
cltd
ljmp
popf
cltd
and
out
sti
push
ja
push
or
out
push
xchg
lcall
ret
sbb
jle
outsb
sub
bound
pop
in
adc
adc
sbb
sbb
je
lahf
xor
cs
arpl
pop
add
fisubs
mov
insb
xor
or
decb
sbb
fistpll
scas
cli
inc
mov
cltd
fidivl
mov
movsb
pop
repnz
lret
cltd
jae
stc
mov
fldt
lds
pop
outsl
pop
ja
cmp
ds
lret
cltd
pop
mov
pop
std
cmpsl
ja
add
in
lret
or
or
pop
enter
lcall
test
push
xchg
jns
cltd
or
xor
loop
push
pop
aam
adc
or
xor
insb
mov
adc
cltd
enter
inc
push
xchg
rclb
pop
mov
cltd
adc
dec
jl
cltd
dec
xor
aaa
lods
dec
sub
lcall
mov
fistpll
adc
fcmovb
lahf
adc
jle
hlt
gs
outsb
sbb
movsb
sti
cltd
shrl
in
repz
adc
or
fdivs
je
mov
mov
fistl
lock
shll
mov
cli
pop
xchg
aam
mov
xchg
fnstsw
mov
jge
and
sub
sub
call
cmp
lods
or
jge
sub
pusha
pop
sbb
incb
bound
sbb
cltd
loopne
sub
mov
xor
ljmp
dec
jmp
push
je
cltd
sub
push
jb
mov
ficomps
scas
xor
lods
lcall
or
lret
cltd
jge
sub
scas
mov
mov
jae
sbbb
xchg
rol
cltd
jl
in
jb
repz
cltd
jne
jmp
pop
sbb
pop
repnz
es
jno
mov
int
into
insb
xchg
xchg
lret
leave
lret
adc
mov
call
aad
insb
pop
test
pop
mov
push
or
and
negb
cmpsb
insb
clc
inc
les
mov
stc
mov
pop
push
aas
lock
test
push
xor
jb
adc
xor
push
cmp
jnp
sub
lea
je
sbb
jecxz
shlb
mov
sub
push
sub
ljmp
mov
fwait
iret
test
xor
fwait
lcall
cmp
fwait
jp
mov
fucomi
jmp
cltd
imul
pop
sub
stos
pop
stos
adc
test
and
sub
pop
cmp
and
bound
ljmp
cmp
mov
mov
xchg
fcompl
js
xor
lods
les
icebp
or
and
adc
aad
pop
pushf
inc
xchg
rep
fcomps
dec
dec
daa
pop
mov
adc
push
scas
repnz
xchg
push
rcrl
cld
adc
cltd
push
rolb
add
xor
jb
lcall
cld
pop
cmc
add
popa
cltd
inc
inc
outsl
fldl
xrelease
adc
xor
sub
sbb
insb
stc
adc
dec
std
cltd
cmp
push
fwait
shll
inc
lcall
rcl
pusha
sbb
mov
les
data16
sub
lcall
add
push
cltd
scas
daa
movsl
pop
cmp
and
incl
adc
loop
cltd
gs
mov
xlat
mov
mov
sbb
ror
pushf
pop
pop
shrb
inc
mov
or
insl
cltd
stos
add
jecxz
outsl
negb
add
inc
ds
dec
xor
xor
mov
cmpsl
pop
rorl
dec
aam
cltd
aas
js
loopne
daa
add
xchg
xchg
add
xlat
pop
lds
push
test
sbb
adc
and
add
xchg
jae
psubusb
mov
cltd
sub
add
xlat
mov
xor
jb
cmpsb
and
inc
dec
ret
out
fiaddl
cltd
xchg
les
lods
into
jecxz
dec
sbb
inc
adc
out
shrb
xchg
push
jne
movsb
inc
jge
mov
sub
insb
cltd
xchg
imul
inc
dec
and
mov
mov
lea
mov
inc
test
pop
jo
fsts
and
mov
and
les
stos
hlt
shll
sti
mov
test
inc
cltd
sbb
pop
jb
pop
and
and
shll
pop
cltd
es
jge
sahf
xlat
dec
xor
xor
adc
push
loopne
mov
cmp
popa
jne
sub
pop
sbb
sub
push
movsl
movsb
sti
lock
or
loop
sbb
lods
mov
mov
sbb
stos
or
inc
pop
pop
insb
mov
aaa
mov
jle
imul
mov
jno
mov
cmp
sahf
fadds
lret
mov
inc
hlt
test
push
mov
mov
popa
movsb
aas
push
loop
adc
call
inc
bound
mov
fucom
orb
lods
mov
and
leave
insb
pop
push
lds
hlt
pushf
rorl
xchg
or
adc
stos
cltd
imul
scas
and
aam
or
xor
cmp
xchg
insb
jecxz
and
mov
adc
aad
pop
adc
or
adc
dec
lret
insb
cmp
inc
test
test
push
cs
call
xchg
pusha
sbb
sarb
fwait
js
cmp
rolb
cmp
popa
sub
icebp
ret
test
lods
rolb
call
adc
imul
scas
push
lods
dec
sbb
movsl
leave
out
pop
inc
cld
mov
insb
fsts
iret
les
adc
jp
or
loopne
push
pop
and
jbe
popf
mov
push
adc
dec
mov
jp
xor
mov
test
sbb
lds
inc
push
push
sbb
lcall
push
mov
cltd
push
rcrb
push
ror
rcr
roll
insb
pop
inc
jge
mov
sbbl
pop
push
xchg
popa
sbbb
xchg
push
test
fldenv
std
pop
pop
loope
sub
insb
xor
jmp
sbb
outsb
and
popa
sub
xlat
scas
and
inc
lcall
sbb
cmp
outsb
xor
adc
dec
add
movsl
xlat
and
mov
int3
ret
in
test
aaa
rclb
xlat
dec
and
jl
mov
shll
pop
inc
and
mov
xrelease
mov
lock
sarl
lods
lcall
xlat
sub
and
iret
les
hlt
ljmp
lods
popa
sbb
jecxz
pop
lahf
jnp
lret
xchg
xchg
xchg
jl
cmp
mov
int
push
orl
mov
stos
lods
lock
pop
shrl
ljmp
mov
rcrb
test
cmc
inc
and
xchg
mov
sub
fwait
or
sarl
int
push
popa
mov
and
push
stc
mov
imul
jmp
ffree
and
xchg
popa
inc
cmp
or
movsb
push
xchg
fsub
push
pop
cmpsb
push
aas
fsts
popf
jle
popf
xchg
stos
sbb
pop
lahf
adc
fdivrs
adc
rcll
leave
push
orl
loope
mov
sub
flds
inc
nop
xor
rcrl
xor
mov
xor
int
cmpb
cmp
ja
andb
sti
xchg
mov
cmpsl
mov
lock
pop
in
xchg
xor
push
push
mov
push
cltd
xchg
jno
std
fs
rorb
pop
cmp
pop
iret
movsl
jno
dec
or
push
sub
mov
mov
clc
cltd
dec
das
orb
mov
mov
cltd
cmc
insb
mov
je
scas
fistpll
cmp
sub
add
imul
fdiv
cltd
scas
mov
ss
cmp
mov
mov
or
push
imul
fdivs
out
mov
mov
jp
push
xchg
cwtl
imul
cmp
or
rcrl
in
xchg
cltd
test
out
xchg
clc
add
lahf
pop
mov
add
insb
jbe
pop
fsubs
xchg
insl
xor
jl
pusha
ror
mov
push
pop
mov
cltd
cmp
enter
mov
mov
shrb
lock
movsl
pop
outsl
cltd
mov
cmpsb
add
jmp
arpl
mov
ds
fwait
mov
aas
das
stos
rorl
cmc
sbb
jo
movsb
mov
je
mov
out
mov
lahf
inc
stos
fsubrp
sub
add
adc
lcall
inc
shlb
mov
cmp
and
popf
dec
push
mov
lods
cltd
add
or
mov
stos
xchg
inc
cli
enter
popf
push
xchg
sub
loope
stos
sbb
add
cli
jp
jge
sbb
mov
mov
or
outsb
clc
mov
and
xor
imul
adc
lock
fs
fnsave
adc
mov
dec
cltd
aas
mov
gs
jp
jmp
rcrl
inc
and
aad
orl
test
std
andb
in
adc
mov
loopne
test
popf
dec
popa
dec
ljmp
and
sbb
jge
lcall
out
stos
push
mov
sub
lahf
ret
sub
into
jae
sub
movsb
mov
jne
test
xchg
sti
rol
fwait
decb
mov
add
xchg
popa
mov
rcr
scas
xor
xor
pop
pop
int
mov
ficoms
inc
fiadds
inc
inc
jb
cld
sbbb
bound
cmp
sahf
and
out
pop
xchg
jne
decl
fnstenv
arpl
out
imul
and
fistpl
iret
inc
fdivp
cmp
push
jecxz
popa
je
cmp
jns
dec
mov
test
dec
push
test
sarb
push
cld
mov
xorl
std
jbe
adc
cmpsb
stos
addl
and
or
retw
jno
lods
in
xchg
cwtl
aam
ret
or
cld
cli
mov
push
or
lock
xchg
mov
xor
icebp
mov
or
fidivrs
stos
insb
and
stos
addb
pop
stos
jo
imul
dec
mov
inc
or
jb
xor
xor
loop
push
push
pop
xchg
sbbl
dec
lds
clc
dec
or
aad
pop
insb
push
int3
push
bound
call
imul
push
sbb
xor
sahf
imul
push
push
push
out
xorb
mov
mov
adc
gs
dec
in
sti
inc
mov
add
sbb
test
push
neg
mov
pop
mov
in
inc
jae
insb
addr16
xchg
popf
xchg
imul
icebp
mov
les
adc
inc
test
addr16
jle
sbb
pop
insb
pop
mov
sub
inc
dec
cli
and
lcall
xor
insb
adc
mov
and
mov
add
imul
push
pushf
js
sub
mov
fcompl
cmp
xlat
dec
dec
sub
addr16
push
sbb
push
mov
mov
dec
out
mov
cwtl
and
add
in
mov
fisubrl
mov
fmuls
repz
sahf
adcb
or
and
repnz
fiadds
adc
sub
dec
mov
shl
imul
or
mov
mov
inc
xchg
bound
jno
xlat
or
or
mov
push
xor
das
sub
pop
insl
dec
pop
loopne
mov
xchg
mov
das
adc
sbb
push
das
xchg
dec
lret
add
mov
sub
stc
sahf
mov
mov
dec
jge
out
stos
push
or
fnsave
dec
sub
lods
sbb
out
lock
notl
fwait
pushf
js
push
cmp
adc
mov
in
mov
lahf
mov
in
push
push
xor
ss
out
dec
outsb
xchg
mov
aam
rol
in
jo
add
sbbb
mov
inc
icebp
ficoms
js
or
enter
lods
stos
sub
xchg
loopne
rcrl
insb
push
inc
loopne
je
popa
xchg
std
dec
jno
cmp
ja
add
mov
jmp
in
jo
fwait
push
ja
add
push
shlb
cmpsl
fstpl
rclb
xor
xor
jns
mov
outsb
cld
aad
xor
cltd
push
push
sub
add
cmpsl
cltd
popa
sub
sbb
out
xchg
cltd
push
nop
sbb
pop
rorl
andb
mov
or
mov
cmp
or
ja
xor
dec
hlt
cltd
sahf
fs
lods
inc
movsb
sbb
jne
clc
dec
cltd
ds
movsl
std
mov
pushf
push
push
subl
cltd
aad
scas
or
push
aaa
cli
ljmp
xchg
sbb
dec
adc
cltd
pop
cmpsb
shlb
cltd
jae
xor
cltd
rcrb
cmp
out
jne
cltd
movsb
pop
xchg
dec
xor
setb
dec
in
jnp
sbb
adc
cltd
ret
push
repz
les
cltd
jecxz
lds
push
inc
push
cltd
int3
adc
jne
mov
sbb
je
fimuls
mov
pop
and
sbb
adc
fwait
test
data16
mov
jnp
lcall
cs
jp
xor
xchg
cltd
decl
or
cltd
pop
jb
das
mov
xchg
pop
aad
mov
or
add
pop
out
popa
cltd
mov
nop
or
lock
icebp
ret
cltd
out
jb
push
xor
mov
dec
leave
ret
sbb
jae
inc
or
jno
gs
mov
icebp
loopne
sbb
popf
in
push
mov
cmp
gs
xchg
lds
mov
ljmp
sbb
ss
inc
xlat
popa
bound
in
and
add
xor
in
cltd
push
lahf
push
mov
push
or
cltd
inc
inc
mov
and
mov
jnp
mov
sub
add
fistps
cltd
imul
lods
and
push
mov
bound
xor
clc
outsl
popf
mov
xchg
inc
test
mov
outsb
arpl
inc
popa
ret
push
stos
fmull
repz
pop
fsts
cltd
in
in
cmp
fmul
les
xchg
cltd
call
cmp
mov
test
jge
cltd
movsb
and
lcall
roll
cmp
imul
cmpsb
sbb
jge
mov
sti
out
scas
sbb
mov
cltd
mov
fdiv
mov
jp
pop
jb
dec
cltd
push
and
std
cltd
xchg
in
xlat
in
cmp
mov
out
and
stos
fisttpll
cli
xchg
shl
imul
lds
mov
dec
mov
lods
push
cwtl
mov
shrl
and
and
sbb
mov
aam
fsubrp
add
arpl
sub
xchg
std
add
shr
cmpsl
fwait
and
push
sbb
notb
or
dec
adc
inc
inc
adc
jne
pcmpeqd
nop
fwait
rolb
jae
sub
push
dec
cltd
insb
mov
sarb
arpl
mov
cltd
sbb
scas
xor
movsl
popf
adc
stos
cmpsl
or
add
and
loope
push
repz
dec
cmp
push
cltd
daa
jl
sbb
cltd
iret
fstpt
mov
add
imul
repnz
call
jge
sbb
mov
call
inc
hlt
insl
mov
pop
pop
mov
cmp
bound
push
dec
cltd
sbb
mov
icebp
lods
xor
cmpsl
data16
add
pusha
push
cmpsb
filds
jecxz
xor
call
cli
mov
fidivrs
inc
xchg
cmpsb
cltd
or
test
jl
ljmp
in
cltd
push
jbe
and
cmc
xchg
rclb
outsb
pop
cltd
mov
pop
stos
cltd
dec
or
jp
push
and
cltd
xlat
cmpsb
outsb
cmpl
dec
daa
aam
or
int3
and
rcll
test
xor
bound
dec
cmpsb
xchg
nop
mov
leave
andl
in
stos
dec
mov
cmp
jns
and
xchg
sbb
lahf
xchg
clc
pop
sub
adc
mov
push
mov
rolb
pop
adc
shll
push
stos
xlat
sbb
dec
pop
xchg
mov
loopne
mov
sub
dec
testb
sbb
xor
lahf
or
mov
jg
jae
out
rclb
push
cwtl
pop
outsb
pusha
fwait
sbb
cld
push
fwait
lahf
push
pop
sahf
push
jecxz
jl
add
push
insb
lsl
cltd
sbb
test
cmpsl
lret
repnz
cwtl
pop
sysret
sub
mov
sbb
movsb
cltd
sarl
pop
arpl
jge
mov
cltd
lcall
xchg
adc
lcall
arpl
push
fwait
outsl
inc
je
and
fsincos
daa
lahf
add
lcall
sub
sbb
lea
adc
icebp
lock
pop
mov
push
dec
daa
sbb
faddl
or
pop
cltd
stos
nop
xchg
push
test
and
sti
out
push
fstps
cmp
fstl
aad
cltd
in
jmp
pushf
cmpsl
cli
push
cltd
cmp
out
and
data16
add
jnp
jmp
dec
xchg
aas
arpl
cltd
decl
clc
cltd
lods
push
jl
xorb
icebp
cltd
mov
jge
inc
cmpsl
out
mov
xchg
cltd
icebp
mov
aaa
mov
rolb
adc
pop
cmc
cli
movb
jns
xor
cmp
cmp
push
clc
sti
sarw
and
iret
sti
icebp
mov
pop
loop
outsl
into
jle
stos
cmpsb
sahf
sbb
mov
inc
xlat
sub
mov
pop
nop
es
push
push
sar
inc
subl
mov
js
or
outsb
rcrb
pop
jp
dec
cltd
lcall
nop
stos
jne
cmc
xor
insb
mov
lret
pop
cmp
cmpsl
jns
mov
dec
pop
lahf
lcall
cltd
mov
pushf
test
mov
loop
push
call
push
push
pop
fcompp
aas
aam
daa
lea
cltd
mov
sti
sbb
jo
push
imul
inc
aam
addr16
lret
test
add
push
sub
mov
inc
cs
in
adc
fs
mov
test
jns
in
sbb
cltd
sub
mov
mov
fmull
movsb
cltd
mov
xchg
rcrb
jb
xchg
cltd
adc
sbb
sub
faddl
jae
pop
push
jmp
cltd
std
loopne
mov
dec
pop
push
cltd
push
lahf
in
xlat
jp
cltd
xchg
mov
cltd
fldcw
mov
jne
xchg
icebp
lcall
enter
lret
push
push
outsb
cmpsb
push
bnd
inc
pop
pop
sub
js
xor
movsl
scas
subb
pop
cltd
lcall
insb
cltd
dec
sub
outsl
inc
popf
xlat
jecxz
sub
imul
xchg
jl
xchg
rcrb
stos
xor
cltd
bound
pop
leave
iret
cltd
jp
repnz
aas
lahf
push
mov
cmp
sub
sub
mov
or
add
or
cltd
sbb
sbb
inc
das
or
xor
push
fwait
add
mov
sti
mov
adc
cltd
sub
jne
pop
outsl
xchg
dec
bound
mov
or
xor
int
ret
ds
and
pop
jnp
cltd
mov
jecxz
lcall
out
outsl
xor
loope
nop
imul
adc
inc
cld
mov
aam
lea
add
fsub
rol
mov
pop
jae
lcall
push
outsb
jge
into
cmp
xchg
xchg
sbb
dec
sbb
fcomps
sti
or
mov
fadds
mov
adc
mov
mov
ljmp
pop
imul
pop
mov
pop
test
pop
int
jo
outsl
mov
cmpsl
sbb
xlat
bnd
cltd
sbb
sbb
push
xor
movsb
adc
adc
sub
pop
mov
daa
rcr
rcrb
cltd
push
push
adc
cltd
rol
scas
jbe
addl
add
not
shl
inc
cltd
cmp
mov
fwait
je
pop
dec
bound
andl
call
cltd
jnp
jne
and
adc
scas
inc
cltd
sbb
cltd
pop
add
je
aas
cmp
lahf
pop
pop
cli
outsb
arpl
inc
sub
push
jb
popf
and
xor
cmpl
adc
addl
test
cltd
jbe
loop
ror
sub
gs
push
hlt
lahf
fisubrs
pop
mov
fucomp
fs
stc
cltd
cmp
xchg
aaa
inc
lea
lret
les
sub
cltd
cmp
mov
popf
call
cld
test
push
cmp
lcall
cltd
sbb
adc
cltd
addr16
in
testl
jbe
xor
test
xorl
ret
out
or
ret
adc
mov
cmpb
jge
lret
fs
jo
outsl
hlt
add
pop
subb
cs
fidivl
inc
push
lea
xor
inc
leave
call
mov
adc
cmc
mov
out
adc
nop
incb
imul
cltd
inc
stos
add
adc
sarl
jg
stos
sub
lret
ds
out
in
jecxz
repnz
jb
out
push
data16
sub
and
jp
push
outsb
mov
test
sbb
shll
insl
or
aas
xor
popa
dec
pop
cmpsl
out
arpl
bound
sub
dec
scas
hlt
mov
icebp
jnp
rclb
lcall
call
xor
add
or
icebp
hlt
and
test
test
out
inc
sub
imul
or
lock
ljmp
add
xor
insb
and
push
inc
imul
sbb
out
xchg
adc
pop
push
sub
push
testl
mov
insb
dec
or
mov
pop
mov
out
das
mov
push
xchg
pop
xchg
leave
les
cltd
or
pop
push
outsb
sbb
cltd
addl
fisttpl
ss
insb
add
push
icebp
fwait
mov
push
mov
sbb
mov
insb
mov
mov
or
ret
or
jno
mov
jle
mov
out
shrl
lods
aam
fdivrs
shlb
insl
xchg
ficoml
mov
test
add
aaa
mov
les
pop
push
repz
xchg
jno
lret
insb
cli
cmp
push
es
and
arpl
pop
pushf
jmp
cmp
inc
out
sbb
imul
jp
sbb
or
xchg
add
push
cmp
cli
loop
push
push
jp
cld
dec
test
out
mov
jge
shr
push
adc
imul
xchg
je
xlat
cmp
js
cs
fwait
clc
insb
mov
jns
pop
cvtpi2ps
faddp
adc
xchg
mov
std
clc
cs
dec
cli
mov
leave
push
in
mov
and
push
mov
popf
xor
xchg
into
mov
mov
dec
and
stc
push
mov
aas
jo
and
sarl
dec
jno
push
scas
dec
fcmovnb
fs
cltd
nop
jl
repnz
pop
jnp
scas
or
sarl
inc
mov
jecxz
ret
les
inc
dec
inc
xchg
aas
pop
push
loop
es
inc
mov
push
push
mov
pop
jnp
adc
jmp
bound
push
cs
fs
mov
dec
push
int
loopne
pop
out
mov
aaa
fsubr
scas
mov
jno
std
fwait
imul
pop
mov
xor
sar
lods
sarl
movsl
sahf
mov
add
adc
lret
nop
mov
adc
jns
imul
shll
mov
fnsave
xchg
jnp
insb
lahf
sti
into
fs
cmp
xchg
mov
movsl
xor
pushf
in
sub
test
inc
jecxz
add
or
dec
mov
mov
sbb
scas
ds
das
rolb
push
bound
jl
lret
test
inc
into
push
aas
push
mov
xor
inc
in
loope
ljmp
push
popf
ds
sub
xchg
xchg
dec
das
ss
insl
xchg
imul
pop
cmp
cld
dec
mov
dec
lret
scas
aam
cmp
cmc
xchg
pop
jp
sub
or
lods
inc
scas
decb
or
adc
xchg
mov
jbe
in
clc
lret
imul
pop
inc
adc
sbb
add
insb
loope
pop
push
call
sub
push
sub
mov
sub
pop
imul
cs
jl
inc
adc
ret
pop
xor
push
push
imul
xor
leave
cmp
clc
test
pop
fwait
pop
scas
push
cmpsl
push
jge
out
test
popf
stc
inc
inc
bound
lahf
mov
ja
dec
lcall
mov
pop
test
push
sbb
leave
ja
incb
out
add
mov
jmp
pop
fsubl
push
je
mov
jecxz
lcall
js
mov
push
stos
xchg
sbb
es
push
mov
cld
sub
cmp
push
and
clc
mov
in
pusha
js
or
in
mov
aam
mov
shl
movsb
mov
hlt
and
inc
cs
inc
or
push
push
mov
mov
mov
test
mov
mov
rep
xchg
pop
and
adc
jo
and
mov
or
and
iret
orl
daa
inc
mul
xchg
mov
aaa
stc
mov
sbb
inc
sub
cmp
jnp
fldcw
outsl
inc
and
mov
inc
das
sbb
cltd
mov
sti
mov
push
movsb
pop
arpl
xchg
jmp
cmpsl
sbb
loope
or
and
or
mov
inc
xor
jnp
loopne
test
ret
and
cmpsl
shll
int3
fimuls
and
jns
cmp
push
and
mov
jbe
pop
shr
mov
pop
int
cltd
and
loope
xlat
imul
push
stos
inc
lcall
test
v4fnmaddss
cli
mov
je
cltd
pop
in
loop
int
leave
mov
gs
les
or
jge
es
cltd
pop
push
and
popf
and
pop
jno
jmp
lea
movsl
sbb
mov
in
adc
addr16
push
cld
cltd
mov
orl
adc
rcl
inc
fimuls
jnp
pushf
mov
push
push
hlt
mov
jecxz
out
pop
cltd
jbe
inc
xor
enter
jp
inc
mov
aaa
adc
test
lcall
adc
pop
mov
jno
mov
inc
and
fists
cli
ret
andl
cmpsl
pop
xor
mov
xor
or
pusha
mov
and
sbb
scas
sti
adc
pop
movsb
lahf
clc
fs
inc
xor
lcall
fstl
hlt
movsb
rcrl
jecxz
andl
dec
cltd
imul
mov
push
repz
pop
cltd
mov
and
mov
mov
clc
imul
add
add
jbe
xchg
stos
push
cltd
pop
leave
mov
xor
push
and
imul
cwtl
test
nop
cltd
je
arpl
in
inc
fimull
cltd
xchg
sub
mov
les
fidivs
cltd
sub
inc
mov
mov
ret
push
cmpsw
jns
cltd
pop
mov
cmc
inc
scas
or
lcall
dec
mov
add
fwait
push
faddl
push
leave
popa
fwait
xlat
mov
lret
pop
scas
inc
xchg
xchg
lcall
xor
push
xor
pop
pop
popa
adc
icebp
sbb
mov
xor
adc
xchg
data16
lahf
testl
lahf
lcall
aas
loope
mov
test
jge
add
pop
int
lahf
add
cmp
out
cltd
jle
imul
cmpsl
sbb
ljmp
inc
cltd
and
call
out
pop
orl
lcall
push
add
inc
sub
jp
cltd
les
add
fistpll
lcall
add
aaa
cmpsb
pop
pop
mov
aam
mov
mov
in
pop
iret
pop
fs
cwtl
adc
pusha
aas
fstp
lods
lods
push
or
cltd
push
push
pushf
test
sti
xlat
call
sub
sbb
pop
mov
inc
lcall
or
xlat
xor
adc
vcomisd
mov
popa
hlt
jle
jbe
lahf
insl
lods
lods
jp
movl
push
ja
mov
and
loope
leave
adc
adc
mov
jl
inc
pop
hlt
pop
pushf
add
sub
in
fstl
ds
cmp
mov
test
cltd
mov
aam
mov
sahf
clc
fidivs
iret
imul
xchg
adc
into
xlat
shll
cmp
jb
cltd
in
pop
xchg
popf
sub
addr16
cltd
out
xchg
pop
test
emms
int3
sub
dec
cltd
sbbb
rclb
inc
test
sub
pop
sbb
scas
lret
mov
or
insl
cltd
adc
add
mov
cltd
ss
xchg
fwait
mov
inc
setns
xor
ja
sub
insb
mov
and
in
ds
scas
jb
and
test
jg
mov
jno
xchg
mov
adc
inc
mov
int3
lahf
mov
fmul
sub
lcall
fstp
xor
dec
cmpsl
bound
fnstenv
mov
aas
loop
pop
arpl
jle
xchg
jns
xlat
sub
inc
xchg
mov
sbb
dec
fisubrs
add
jle
cltd
or
in
cmpsb
xchg
scas
jl
pop
lret
mov
jp
jge
icebp
loope
jb
cltd
pop
jae
lcall
mov
clc
mov
je
inc
pop
mov
repnz
fnstcw
test
rorb
pop
cltd
xchg
fnstenv
int
fdivs
dec
or
negb
xor
jo
data16
enter
lret
in
lahf
push
add
cmp
cli
pop
imul
cltd
in
xchg
bound
js
repz
cltd
mov
call
adc
jmp
and
cmpsl
xor
inc
sub
aas
push
jp
or
jns
hlt
shll
mov
mov
sub
aaa
cld
pop
cltd
jne
jp
fcoms
cwtl
fwait
mov
jle
jmp
adc
test
aaa
cltd
mov
pop
xor
cltd
lods
loop
push
inc
pop
ficompl
cmpsb
sbb
repz
xchg
lahf
adc
push
lret
inc
cltd
stos
rcr
mov
sbb
jae
xchg
nop
xlat
cmp
sub
rcl
jp,pn
test
sarb
pop
rcll
in
xor
cltd
notb
push
fsub
fwait
sti
xchg
cltd
mov
stos
aad
sbb
outsl
cltd
fmuls
int3
into
cltd
xor
xchg
xchg
mov
mov
cltd
add
addr16
dec
cmpsb
mov
or
mov
inc
pop
jg
xchg
lret
cltd
mov
shr
ret
cltd
pop
add
lahf
cltd
inc
mov
imul
lock
add
call
xchg
xchg
dec
mov
lcall
cltd
pop
xor
bound
inc
inc
cmpsl
xchg
push
xlat
sbb
cmp
add
cltd
sbb
int
and
adc
xor
mov
cwtl
sbb
call
mov
and
lcall
popf
jmp
sbb
out
mov
sahf
mov
sbb
das
out
push
adc
leave
mov
cmp
mov
in
lcall
imul
mov
iretw
cltd
lea
out
mov
push
inc
xchg
cltd
sub
ds
push
nop
xor
cmc
xchg
lock
leave
inc
lret
pop
movsb
and
fstpl
cmp
and
jb
fistps
roll
aad
and
jp
movb
cwtl
mov
bswap
fwait
js
pop
icebp
mov
jne
jbe
mov
rcrl
outsb
cltd
add
je
scas
inc
jns
das
lds
mov
sahf
adc
inc
cmp
cli
push
sbb
xchg
mov
pop
fwait
inc
lods
mov
xchg
outsl
mov
int
pop
iret
cltd
les
mov
ret
or
sub
cltd
inc
out
repz
icebp
sti
jmp
xlat
in
cmpsl
xor
idivl
fwait
lock
pop
sbb
cmpsl
repnz
jge
mov
cltd
pop
mov
push
dec
mov
adc
cwtl
fsubs
rcrl
mov
lcall
lret
and
mov
leave
cltd
dec
mov
xchg
fsubrp
or
fldl
or
cltd
and
add
fcoml
shlb
cltd
dec
inc
call
jbe
imul
icebp
dec
or
mov
rcl
add
cmp
movsb
or
mov
rorl
lods
out
fld
adcl
mov
pop
popf
cltd
lcall
stc
mov
dec
idivb
jno
fwait
repnz
adc
fldcw
rolb
clc
cmp
cltd
sti
xchg
pop
and
add
or
cltd
jle
sub
adc
in
jmp
shll
data16
mov
out
or
push
cltd
hlt
push
outsb
dec
push
pop
nop
pop
xor
popf
mov
xchg
and
cltd
sbb
out
dec
mov
fidivrl
scas
inc
or
sbb
adc
in
lock
and
xchg
cltd
into
mov
cltd
sbb
mov
test
or
sub
dec
cltd
lock
push
jp
cmp
mov
pushf
mov
sub
xchg
mov
out
jae
fs
test
sbb
mov
pop
mov
lahf
sahf
jne
sub
or
xor
jmp
cmp
insl
inc
rcl
negb
xor
cmp
aam
cltd
cmp
adc
adcb
cltd
xchg
outsl
lea
iret
push
dec
cltd
cmpl
clc
into
xchg
xchg
sbb
mov
fstps
fwait
or
sti
push
mov
or
in
lahf
fistpll
cmp
rcll
push
xchg
imul
fwait
out
rcrl
add
aam
cltd
jo
inc
ss
sub
jnp
add
xlat
inc
or
jo
lret
or
mov
inc
cld
movsl
lcall
jb
test
cmp
mov
fyl2x
push
push
cltd
sbb
or
stc
sub
jge
out
inc
cltd
fnstsw
mov
sub
lods
shr
gs
and
lea
cltd
aad
and
fdivs
mov
mov
cltd
adc
mov
xchg
sbb
stos
nop
dec
hlt
in
fwait
adc
cmpsb
int3
and
clc
sti
test
ret
and
sbb
push
enter
lea
insl
jno
cmp
lahf
repnz
push
and
lods
xchg
stos
push
out
sbb
adc
dec
mov
xchg
xor
and
cltd
out
dec
push
out
xor
aaa
lcall
mov
or
cltd
mov
movsl
push
mov
inc
jge
ret
mov
test
fcompl
test
cmpsl
jns
loope
mov
clc
adc
cltd
sti
mov
jnp
je
xchg
cltd
cli
scas
das
ret
imul
test
mov
adc
stos
cltd
loopne
mov
out
repz
aas
mov
cltd
std
sbb
inc
stos
push
jnp
js
mov
push
iret
nop
push
sbb
sub
loop
in
lock
push
popl
movsb
out
sbb
inc
lret
mov
into
popf
mov
mov
and
outsb
adc
imul
mov
inc
mov
pop
push
mov
adc
cmpsl
cmp
ficoml
cli
mov
stos
into
sarl
scas
sbb
lock
lock
lahf
cmp
mov
test
out
lahf
push
fistps
mov
rclb
insb
fstps
ret
push
fisttpll
jmp
mov
stos
jae
daa
stos
add
and
push
mov
dec
and
mov
mov
shr
push
push
mov
loop
test
push
lods
mov
fdivrl
dec
out
je
or
aas
outsl
stos
daa
popf
inc
bound
lea
js
das
out
mov
dec
mov
std
add
jae
mov
mov
push
cmp
mov
aas
shlb
std
mov
in
mov
in
xchg
mov
or
pop
push
mov
cmp
push
pop
data16
pop
or
das
push
or
les
push
in
in
mov
cltd
cwtl
and
imul
pop
mov
adc
scas
inc
enter
mov
stos
inc
add
out
jecxz
or
inc
xchg
pop
shrb
test
xchg
add
sti
xchg
das
xchg
aas
out
call
addr16
inc
mov
clc
inc
pop
push
mov
xlat
mov
mov
fcompl
sub
div
stc
push
loop
mov
pop
jg
fsubs
mov
rep
mov
adc
xchg
mov
daa
shrl
aad
add
jle
fwait
push
pop
cs
out
mov
mov
cmp
lcall
sbb
les
outsb
scas
icebp
inc
sub
pop
fstps
sbb
ficomps
inc
mov
in
ds
sub
pop
cltd
in
hlt
pop
popf
dec
push
push
jle
nop
cltd
fwait
jae
cmp
sbb
sub
jle
cltd
out
ljmp
js
fistpl
mov
dec
inc
mov
push
cmc
jge
or
je
cltd
testb
jecxz
mov
push
push
sub
pop
mov
jnp
cmp
mov
fstps
fwait
and
xchg
jb
test
dec
outsl
enter
lret
push
mov
mov
popf
xor
scas
ds
adc
bound
stos
mov
hlt
push
dec
sub
mov
and
cwtl
add
cmp
cltd
push
dec
xchg
mov
loopne
jnp
pop
lahf
es
add
jp
dec
mov
inc
jp
aas
lods
inc
ficoms
les
pop
sub
cltd
fdivrl
pusha
push
jge
xchg
jmp
push
sbb
cltd
dec
loop
adcl
sub
mov
cltd
in
adc
stc
fdivrs
lcall
cltd
ljmp
push
cltd
mov
jno
adc
sbb
in
cltd
fisubl
imul
mov
imul
bound
dec
jge
sub
mov
outsl
cltd
xor
add
dec
xor
and
cltd
test
mov
jecxz
popf
int
push
add
xchg
mov
repz
mov
push
inc
dec
mov
cltd
sub
test
and
push
sbb
and
iret
loope
or
mov
cltd
inc
sbb
or
rcrl
mov
sbb
push
test
cli
je
xor
adc
cmp
ja
xorb
loopne
xchg
insl
in
mov
and
shlb
fidivrl
jns
mov
xchg
stos
cltd
pop
int
pop
loop
notl
inc
xchg
lcall
cmp
hlt
push
into
inc
sub
stos
out
mov
inc
hlt
cltd
idivl
fst
pop
xchg
jge
push
fwait
mov
dec
xchg
cltd
inc
sub
gs
out
lahf
nop
add
cmp
leave
mov
sbb
nop
push
pop
jb
gs
add
pop
mov
xor
dec
cltd
cltd
jle
in
jg
loopne
flds
sub
xchg
xor
mov
popf
push
xchg
test
lds
cltd
imul
lahf
stc
out
or
push
addr16
fwait
add
add
shll
push
loope
movb
pushf
fwait
lcall
jo
out
fcoml
cmp
jecxz
lea
mov
aam
ja
out
sbbl
cmpsl
or
pop
stc
inc
cmp
cmpsb
les
out
imul
aas
mov
testl
inc
cltd
cmp
sbb
rol
vfrczss
shr
cltd
mov
inc
mov
test
adc
pop
cltd
sub
or
fistpl
rclb
cltd
loope
jb
mov
aam
jnp
cmp
imulb
jl
sbbb
adc
cltd
lret
scas
or
cltd
test
scas
adc
popf
mov
pop
pop
outsl
clc
push
adc
int
scas
jo
jb
mov
test
cltd
mov
sub
jbe
cltd
out
sti
add
xor
jb
nop
loope
pop
inc
sub
xchg
jmp
icebp
and
mov
mov
xchg
xchg
ja
jle
cltd
ret
lods
sbb
imul
pushf
pop
cmpsb
jl
sti
roll
loope
sub
xchg
cltd
mov
shlb
out
mov
cltd
add
or
lahf
mov
add
adc
test
jge
pop
sbb
cltd
or
lret
inc
cltd
push
stc
je
out
push
cltd
mov
out
pop
xor
inc
pop
adc
lcall
lock
mov
xor
fisubrl
pop
cmp
call
pop
inc
and
cltd
pusha
mov
sbb
jns
mov
cmp
subb
call
cltd
rcrb
shl
xor
data16
imul
jnp
cltd
nop
sub
loop
je
popf
pop
rcll
testb
adc
adc
sti
lahf
mov
fcoml
pop
dec
daa
or
lret
lds
sub
arpl
xchg
or
outsl
les
daa
cltd
add
stos
ret
mov
iret
mov
in
cmpsb
mov
sar
pop
lahf
and
xor
push
adc
lcall
sbb
and
xlat
dec
movsl
cmpl
and
mov
cltd
xor
mov
in
scas
cltd
sti
dec
fmuls
cmp
imul
adc
cltd
out
adcb
popf
xchg
cmp
lahf
inc
cltd
dec
push
in
cmp
bound
xchg
test
scas
cltd
daa
int
pop
adc
sub
mov
cmpsl
repnz
pop
mov
or
dec
mov
push
lret
aad
mov
push
cwtl
dec
clc
cld
cltd
sub
sbb
mov
inc
shll
pop
sbb
push
inc
std
mov
sbb
negb
xlat
mov
cltd
jg
lahf
xchg
out
jl
cltd
adcl
iret
fcmovbe
jmp
out
mov
icebp
lcall
fwait
stos
jno
mov
cltd
mov
ret
sub
mov
cltd
das
inc
push
push
jle
fcmovnbe
jb
psrld
lahf
out
ds
xchg
cmpsl
jp
push
popf
sbb
sbb
fisubrs
push
mov
push
cltd
int3
ljmp
fsubrs
ret
rcrb
aam
cmp
cltd
add
jle
dec
out
push
into
cltd
arpl
sti
mov
pop
add
mov
lcall
xchg
in
mov
cltd
jne
jmp
jb
les
iret
cwtl
xlat
lret
mov
inc
test
or
fcomps
dec
push
imul
test
int3
mov
shll
or
sbb
cmp
mov
cltd
adc
test
stos
jecxz
pop
mov
push
cltd
or
nop
insl
mov
jns
cltd
out
ss
jb
js
sub
mov
cltd
hlt
fs
pop
cltd
jne
arpl
in
ja
lahf
les
mov
xchg
push
movsl
aas
dec
jne
stc
push
cltd
push
mov
inc
sti
clc
ja
xlat
pushf
and
sbb
mov
pop
scas
leave
cltd
add
scas
es
pop
popf
cmp
xchg
pop
or
adc
dec
cltd
ljmp
mov
sub
mov
mov
push
lret
cld
dec
mov
or
icebp
and
xchg
call
pusha
jle
rcrb
cmp
comiss
lcall
stos
xor
push
faddl
repz
lock
pop
rcrl
icebp
pop
mov
jnp
cwtl
test
sbb
cmpsl
xchg
mov
adc
sbb
ljmp
mov
outsb
dec
movsb
lods
jp
movsl
fstpl
mov
stos
addr16
pop
stc
mov
cmp
sbb
push
mov
ret
and
mov
pop
push
jbe
fwait
xor
inc
arpl
es
mov
inc
cltd
ret
sub
and
dec
xchg
movsb
insb
inc
cmpsb
mov
aas
or
add
sbbb
jge
cmp
xorl
xor
lret
pop
lods
sbb
cltd
jo
push
in
mov
cltd
cmpsl
pop
adc
add
call
mov
insb
xor
test
jns
xchg
dec
and
sub
and
fwait
leave
push
mov
popf
and
mov
dec
or
mov
or
mov
lock
mov
dec
dec
xchg
sbb
cltd
push
hlt
xchg
int
dec
cli
mov
xor
pop
rorb
push
imul
pop
mov
jb
cltd
jge
pop
clc
pop
push
mov
lret
dec
mov
xchg
dec
xor
xchg
push
and
adc
xor
out
xor
lahf
imul
mov
lock
or
mov
lcall
data16
js
adc
push
leave
adc
cltd
push
dec
xor
dec
sbb
aam
pop
fisubl
push
sti
sarb
fistps
jmp
push
and
dec
sbb
outsb
push
fstps
into
mov
ficompl
rcrl
jo
leave
repnz
push
aad
rorl
fs
aaa
outsb
jmp
pop
out
add
adc
pop
nop
iret
into
lret
loopne
push
xchg
es
inc
enter
xor
fwait
inc
cltd
xor
fildl
int
mov
push
lret
cltd
ret
lcall
cltd
cs
xlat
fldt
adc
popf
inc
jmp
mov
add
mov
or
popf
lock
mov
dec
lcall
insb
rol
sbb
lcall
popa
out
jp
test
mov
popf
jnp
and
adc
sbb
mov
jno
sbb
dec
cltd
or
mov
cltd
pop
push
out
nop
push
adc
sbb
sub
repnz
or
insl
mov
mov
cltd
daa
jbe
pop
lcall
scas
inc
fimuls
inc
push
movsb
es
aaa
xor
lods
adc
cmp
insl
out
mov
rorb
inc
push
or
in
or
cmpsl
repnz
cmp
mov
push
cli
fwait
outsl
enter
sbb
iret
mov
sbb
jecxz
les
sub
jp
insl
lds
fldcw
aaa
xchg
repnz
scas
cmpsb
inc
xlat
ds
pop
mov
mov
and
xchg
in
or
cmpsb
in
fwait
test
lahf
pop
out
loop
add
roll
pop
lcall
cltd
jnp
xor
push
cltd
mov
xor
loopne
int
mov
cltd
mov
dec
xchg
mov
push
push
stos
mov
lea
add
outsb
call
es
in
ljmp
inc
sarl
fdivs
cli
fstps
inc
int3
adc
cltd
xchg
fdivl
enter
jle
add
lret
test
mov
js
lods
xor
imul
cltd
mov
ja
notb
xor
cltd
add
in
sbb
cltd
fsts
mov
inc
cltd
lds
push
stc
fistps
inc
pop
inc
jp
or
popf
xchg
jg
push
jecxz
lcall
xor
lret
test
add
inc
jge
popf
int3
xor
sub
mov
imul
push
in
pop
fldt
pop
cltd
cmp
cltd
and
jnp
and
dec
adc
cmc
xor
je
jl
cmp
cmpsb
sub
adc
aam
mov
das
mov
fcmove
popf
sub
fnstsw
clc
pushf
mov
insl
bound
lcall
ss
push
cmp
or
push
mov
fwait
data16
jns
dec
dec
call
and
leave
jle
stc
cmpsl
mov
call
jg
out
push
jmp
cltd
roll
mov
lahf
pop
insl
cmpsl
jp
or
jo
add
push
cmpsl
add
gs
inc
xchg
mov
or
mov
pop
adc
sub
sub
cltd
push
xchg
fxch
xchg
cltd
add
dec
repnz
cltd
mov
shlb
xchg
mov
mov
pop
iret
test
loope
and
mov
lcall
aam
sub
adc
push
insb
mov
dec
jb
fwait
cmp
jge
dec
mov
pop
jecxz
leave
clc
dec
rcrl
jmp
outsl
out
add
scas
imulb
imul
scas
or
enter
lahf
fwait
clc
pop
out
or
sbb
mov
mov
in
sub
int3
cltd
popa
adc
lock
xchg
repnz
adc
loopne
loope
icebp
cmp
test
adc
cltd
push
push
test
cmpsl
inc
jmp
lods
pop
roll
mov
out
cmpsl
shrl
add
sub
cltd
push
lock
cmpsl
sahf
nop
mov
rcll
sub
out
cwtl
dec
cmp
or
dec
aam
mov
sbb
or
mov
stos
lods
lock
scas
cltd
mov
stos
mov
sbb
cli
fwait
shrb
sbb
je
cmp
int
pop
cmp
dec
inc
cltd
mov
push
mov
adc
bound
lcall
cmp
popf
ret
scas
negl
sub
in
push
mov
mov
rclb
cwtl
fcmovu
adc
or
stos
fcmovb
add
xchg
xor
and
icebp
insb
inc
or
fstps
lcall
adc
in
mov
shll
outsl
setp
xchg
shlb
stos
fwait
jae
jge
icebp
loop
iret
popf
roll
lcall
cltd
add
insl
mov
push
add
aad
adc
loope
popf
dec
leave
into
xor
lret
mov
sub
sbb
jmp
loope
inc
pinsrw
xchg
ja
sbb
inc
clc
mov
adc
nop
mov
les
cltd
shr
out
scas
lea
cltd
and
sub
ficoml
add
mov
mov
pop
aam
jl
sahf
cltd
inc
pushf
dec
sbb
out
push
mov
cltd
pop
dec
in
dec
ret
adc
or
pusha
adc
cli
cmp
inc
mov
stc
push
adc
mov
and
mov
idivb
sbb
sub
ss
xor
add
pop
lahf
js
push
rcll
lods
add
cmp
iret
movsl
cltd
or
sub
mov
mov
fcom
shlb
and
sti
push
jnp
rcr
inc
sbb
mov
loop
cmp
dec
jo
inc
pop
cli
outsl
jp
xchg
add
adc
mov
push
insl
pushf
sub
jno
test
call
and
icebp
inc
inc
cltd
xchg
ljmp
inc
rorb
xchg
dec
pop
movsl
mov
rcrb
cld
cltd
push
icebp
dec
mov
mov
fidivs
pop
pop
stos
add
cltd
scas
or
arpl
mov
cmc
lea
cltd
cli
sbb
pop
mov
xchg
cmp
xchg
cwtl
ljmp
add
inc
mov
mov
xchg
and
mov
mov
mov
pop
jecxz
pop
call
shlb
inc
leave
test
popf
dec
nop
mov
sub
shr
xor
cld
fdiv
dec
xchg
ret
ss
sbb
sbbb
fstpl
sbb
cli
pop
cltd
fwait
add
jns
cmp
movsl
xchg
fists
call
mov
stc
cmp
test
xor
cmp
cltd
mov
cmp
enter
scas
add
cltd
jno
pop
inc
fisttps
lock
sub
mov
sbb
xchg
cmc
ret
jp
inc
cltd
movsl
xchg
or
jo
cmp
add
sbb
xor
xchg
inc
xchg
cltd
add
and
rcll
dec
stos
cwtl
inc
lcall
and
pop
jge
mov
cmc
sbb
es
stos
in
lcall
mov
orb
mov
imul
cltd
pop
jo
arpl
sbb
dec
lock
mov
cmpsl
pop
aas
jge
popa
cltd
sbb
shll
dec
xor
jecxz
sub
cltd
xchg
adc
lcall
lods
cltd
xchg
mov
xchg
push
mov
imul
and
sbb
fwait
adc
jmp
sbb
pop
sbb
adc
xor
cmp
subb
sub
cmp
lcall
mov
sahf
flds
nop
cltd
xor
push
fists
and
daa
enter
dec
mov
rcrl
popa
mov
dec
cld
or
xor
lret
cltd
mov
push
jmp
ljmp
inc
cltd
out
mov
leave
gs
push
or
cltd
mov
mov
inc
rcr
xor
inc
lahf
stc
xchg
jmp
in
sub
and
xchg
jae
cltd
aaa
add
mov
cltd
xor
adc
xchg
xor
cmp
inc
jns
mov
mov
adc
mov
gs
scas
fstps
ret
pop
push
popf
fs
cmp
imul
fildll
lock
lcall
xchg
cmp
or
sti
xchg
or
mov
stos
test
push
jae
jb
ficompl
ret
sub
shrb
mov
dec
cwtl
or
jae
dec
stos
or
repnz
jp
add
ljmp
in
cld
test
push
sbb
sub
xchg
dec
add
inc
push
popf
xchg
push
sbb
sbb
push
push
xchg
mov
or
aam
inc
jne
dec
ss
icebp
pslld
enter
fcmove
test
das
xchg
loope
or
cld
les
addr16
xchg
mov
fildll
mov
add
ja
or
push
mov
les
mov
dec
scas
cmc
lea
leave
push
cli
stc
dec
scas
movsl
dec
iret
insb
jbe
mov
ss
jge
mov
adc
cmpsl
pop
mov
or
sahf
insb
mov
nop
mov
mov
add
pop
dec
add
push
dec
fists
dec
push
mov
movhps
dec
js
imul
mov
outsb
xchg
loope
push
adcb
hlt
pop
jecxz
xorb
jae
cmpsl
cmp
movsl
inc
test
xchg
sbb
push
add
sbb
popf
jmp
ds
pop
flds
out
adc
jle
pushf
rorl
sbb
movsb
and
lea
mov
push
rcrl
out
leave
pop
or
sbbl
ss
mov
push
imul
imull
mov
cmp
cmc
lea
sarl
fwait
daa
and
inc
push
cwtl
out
adc
in
ret
test
ficomps
dec
orl
xchg
sub
mov
clc
jbe
scas
test
push
cmp
cmpsl
adc
addr16
push
mov
ds
test
outsl
bound
stc
loop
addr16
jp
fs
pop
cltd
fsubrs
lods
out
mov
insb
jno
push
push
xor
mov
xor
sbb
loop
aad
repz
jl
shrb
loop
ret
cmp
outsb
push
sbb
xchg
pcmpeqb
aam
in
fistl
mov
call
push
push
inc
jp
cmp
clc
std
jbe
add
imul
pushf
icebp
insb
cmpsb
push
mov
negl
push
lods
lret
push
insb
push
mov
stos
add
stos
mov
and
mov
les
testl
mov
lods
sbb
ret
xchg
fstpl
jmp
stos
les
sti
xor
dec
cmp
or
test
pop
and
xchg
jle
mov
xchg
dec
pop
push
mov
mov
cmp
lock
jl
lahf
pop
xchg
rep
dec
xchg
jbe
dec
cli
lahf
stc
push
in
xchg
scas
ja
outsl
cmp
mov
fwait
imul
stc
cmp
imul
fwait
mov
inc
jle
flds
jle
pop
adc
in
jbe
insl
out
mov
mov
ja
shrl
loopne
leave
insb
cli
mov
orl
jo
cltd
and
xchg
insl
mov
inc
shll
xchg
xor
insb
push
pop
inc
add
xchg
push
pusha
cltd
popa
std
push
out
ss
fwait
or
and
sbb
xor
mov
cwtl
sbb
mov
cmp
fisubrl
mov
lcall
lcall
or
pop
adc
cltd
pop
lock
ljmp
lret
sub
popf
loop
cmp
xor
cltd
iret
cmovb
ret
in
sarl
bound
out
popa
out
rclb
sub
cltd
test
xor
pushf
mov
dec
popf
out
jmp
pop
lret
sub
addr16
xor
push
mov
cltd
mov
xor
loopne
out
mov
mov
in
cmp
pop
fstps
add
shrb
aad
mov
adc
cmpsl
fwait
lock
add
or
jle
stc
ljmp
push
mov
push
sbb
enter
fst
cltd
xchg
mov
cltd
push
cmp
scas
inc
pop
cmp
cltd
je
mov
repnz
sbb
xor
and
jnp
cltd
stos
pusha
pop
sub
inc
mov
mov
loope
xchg
pop
repz
mov
cmpsl
popf
aaa
notb
es
jnp
cltd
adc
add
mov
mov
push
ljmp
int
add
inc
push
xchg
ffree
push
imulb
leave
imul
dec
inc
lret
inc
cs
pushf
push
inc
mov
jp
jns
popf
inc
imul
stos
imul
or
push
aam
mov
fstpt
movsb
in
lcall
lahf
pop
insb
jmp
xor
xlat
fwait
inc
push
sti
or
or
xor
aaa
out
sbb
fidivrs
lret
pop
mov
mov
push
js
push
mov
leave
dec
hlt
inc
mov
push
sub
mov
push
or
and
and
lret
mov
les
lock
inc
int
mov
insb
in
popf
push
pop
and
int3
or
ds
das
or
jge
nop
mov
imul
mov
insl
add
leave
push
xchg
xchg
das
shlb
sub
fstps
test
int
mov
out
mov
pop
xorb
xchg
jmp
jns
jmp
cmpb
js
dec
cmp
push
sahf
sub
jnp
sbb
add
and
out
or
aas
xor
sbb
mov
push
flds
aam
sub
clc
in
mov
jmp
and
mov
test
sti
sub
cmpsl
fsubrp
cmc
sub
lods
mov
adc
arpl
test
ret
jbe
mov
ret
and
scas
adc
sahf
mov
dec
test
andl
mov
fstps
repnz
fisubl
or
mov
adc
mov
fbstp
pop
push
leave
cltd
imul
mov
stos
das
cmp
jbe
nop
nop
stos
pop
jecxz
or
out
shrb
stos
mov
aam
test
test
stos
sub
sbb
mov
enter
jo,pt
test
sbb
adc
push
pushf
mov
arpl
xchg
in
stos
inc
jle
stos
inc
insb
push
pop
push
dec
mov
scas
out
mov
js
cmpsl
shll
inc
pop
enter
stos
ja
dec
cmpsb
cmp
sbb
imul
push
push
mov
pop
mov
push
or
mov
xchg
dec
jbe
sub
push
stos
mov
mov
loope
sub
cmc
inc
repnz
or
call
push
lods
sahf
popfw
fidivl
mov
loope
mov
stos
xchg
imul
mov
out
scas
movsb
xchg
test
jecxz
test
mov
negb
inc
imul
lods
sub
outsl
inc
sub
and
les
bound
insb
mov
movntps
pop
push
add
nop
xor
jne
popf
mov
cmp
inc
cmp
adc
cld
sub
stos
mov
jge
stos
mov
pusha
notb
sbb
push
pop
inc
sbbb
push
shl
pushf
dec
dec
or
inc
popf
inc
sbb
movsb
cld
and
mov
fsubs
xchg
sub
loope
and
test
dec
fcomi
or
cli
jbe
sub
pop
movsl
push
ds
fsubr
repz
mov
mov
push
in
shll
and
push
jle
ret
loop
lods
lods
pop
mov
jl
dec
mov
js
dec
out
mov
mov
mov
out
cmpb
and
imul
shl
out
outsb
or
inc
or
mov
dec
in
fwait
mov
subl
lods
sbb
mov
movsb
mov
and
xchg
add
sahf
shl
icebp
pop
jnp
movsb
push
add
adc
sbb
cmp
xor
or
and
dec
imulb
rcr
out
test
push
xor
dec
sub
pop
insl
rcrb
je
mov
pop
leave
lcall
or
insb
add
cmp
mov
push
sti
cltd
push
pushf
xchg
push
inc
adc
mov
sarb
and
adc
in
loope
cwtl
fwait
icebp
cmp
adc
std
cmp
pop
mov
aaa
mov
out
xchg
and
shr
mov
xchg
push
ficomps
push
pushf
jle
jl
testl
jecxz
mov
xor
cmp
fnsetpm(287
movsb
push
cld
sub
sub
push
push
push
insb
xchg
pop
push
mov
and
cmp
fsubs
aad
das
sub
sbb
add
push
xchg
lock
lret
test
and
insl
into
std
sub
stc
orl
fidivrs
adc
jmp
mov
es
clc
pop
test
leave
mov
outsb
test
dec
lods
test
mov
dec
scas
scas
data16
shrb
cmp
sbb
fsubs
or
pop
popf
lcall
rolb
jbe
popf
xchg
jmp
inc
sub
insb
loope
xlat
xor
bnd
jl
pop
push
push
rorb
pop
or
lods
loope
mov
fstl
insb
jecxz
xchg
push
and
insb
cmpsl
sbb
imul
add
mov
lahf
pop
shl
adc
ja
cmp
mov
cmp
sti
in
cwtl
leave
mov
mov
fldl
and
neg
pop
sub
push
lret
push
pop
xchg
mov
pop
and
aad
scas
fnstcw
xchg
mov
cmp
test
cmp
lds
or
or
and
jb
dec
insb
fnstcw
and
ss
imul
lods
sbbb
add
das
push
icebp
pop
mov
cmp
in
cmp
insb
sbb
jecxz
add
push
cmp
subl
push
dec
push
mov
lds
lods
aas
cmp
mov
lds
mov
int
mov
rcrb
leave
mov
push
jge
xchg
mov
dec
push
xchg
cmp
xor
out
inc
stc
test
adc
loopne
and
xorl
cmp
bound
inc
jno
outsl
sub
bound
pushf
pop
insb
test
mov
jae
pop
shl
pop
in
mov
ja
repz
cmp
out
dec
out
fimull
insb
cmp
in
sbb
jle
mov
mov
movsl
scas
mov
stos
push
mov
xor
repnz
outsb
popf
ljmp
push
iret
test
add
shl
dec
sbb
into
test
fcomps
pop
inc
idivb
add
mov
cmp
hlt
sbb
pop
jns
adc
cmp
cs
insl
addr16
mov
jmp
mov
leave
mov
mov
mov
sbb
cltd
inc
insb
ja
push
aaa
inc
cltd
add
mov
fcos
hlt
stos
imul
cmpps
lret
push
pop
sbb
cmpsl
sub
mov
pushf
call
jns
es
movsl
cmp
addb
insb
mov
fldcw
push
push
sub
jbe
iret
jb
xor
sahf
loop
fwait
dec
dec
mov
lret
test
aaa
cmp
stos
mov
inc
inc
cmp
pop
aas
call
mov
sbb
clc
adc
mov
aam
mov
mov
sub
fisttpl
out
mov
mov
mov
icebp
xor
jmp
test
cltd
push
outsb
adc
xchg
add
push
fsts
mov
adc
inc
shr
xor
ret
lods
jo
xor
rcll
in
loope
xchg
cmp
and
in
js
push
fst
inc
fistl
stos
inc
insb
pop
xor
ucomiss
rep
pop
lahf
mov
mov
sbb
adc
mov
xor
mov
bound
mov
xor
xor
jmp
jl
fadd
icebp
xlat
cmc
popa
aam
dec
lea
xor
jge
ljmp
cmc
scas
pop
jo
pop
push
adc
pop
lods
sbb
mov
mov
aad
cltd
test
mov
bound
mov
decb
les
jo
inc
fwait
sub
das
cli
xor
jb
mov
xor
jo
mov
out
bound
xchg
sbb
xor
mov
rolb
sbb
std
addb
nop
leave
dec
lret
outsl
popf
cltd
pop
das
shll
loope
imul
sbb
push
adc
fidivrl
cmpb
mov
sbb
mov
aas
push
nop
mov
outsb
fstpl
xor
imul
mov
jns
lock
lret
cltd
adc
xlat
popf
xor
loop
cmpsl
pusha
cmp
jbe
sbb
mov
adc
xchg
push
pop
addr16
sbb
inc
xchg
aad
cltd
nop
scas
imul
movd
fwait
lock
jge
sbb
leave
imul
cld
add
push
xchg
adc
push
inc
adc
cltd
std
or
jmp
xchg
fcmovbe
sbb
add
daa
xor
adc
adc
inc
inc
cmp
lods
or
cltd
sbb
jnp
cltd
push
cmp
jp
inc
cltd
pop
outsl
subl
and
out
clc
mov
hlt
cltd
dec
xor
je
mov
in
shr
call
scas
daa
push
or
lea
cmp
inc
lcall
push
pop
out
pop
sbb
mov
cltd
add
fnsave
aas
into
fwait
jb
mov
pusha
adc
mov
cltd
inc
mov
stos
jns
mov
pusha
cli
pop
push
mov
xchg
cltd
scas
outsb
shlb
push
jb
push
cltd
dec
lahf
or
cmpsl
pop
gs
fwait
and
mov
scas
jne
jb
cwtd
shrl
or
mov
add
sub
ljmp
lcall
cmp
adc
cltd
cld
scas
mov
dec
cltd
lret
loop
add
rol
adc
sub
stc
add
inc
xlat
lahf
xchg
xor
push
cmp
fiaddl
dec
hlt
stos
adc
pop
out
rorl
sti
pop
xor
push
in
aam
shr
mov
add
jnp
mov
jl
xchg
jmp
mov
ret
enter
cmp
imul
int
add
push
xchg
cmp
cltd
inc
adc
test
sub
fwait
test
pop
js
les
testl
cmpsl
aaa
pop
fnstcw
xchg
and
pop
cltd
mov
dec
mov
or
mov
sbb
jb
test
jnp
push
fadd
mov
and
sub
mov
adc
inc
sti
aam
enter
lock
inc
stos
into
jns
mov
fisubrl
lock
push
lea
xlat
xor
repnz
pushl
cmpl
and
repz
push
mov
cltd
xchg
jle
sbb
gs
cltd
lahf
sub
add
pop
dec
cmpsl
repz
mov
pop
dec
and
jl
add
push
pop
xor
clc
pop
cltd
out
dec
jp
mov
or
bound
pusha
mov
cs
xorb
negb
aad
jno
sbb
stos
cltd
lods
xor
xlat
cltd
call
dec
mov
insb
pop
pop
cltd
test
pop
push
jmp
mov
cmp
mov
outsl
sbb
in
sti
cltd
inc
cmp
jp
rorb
aad
push
push
sbb
outsl
std
sbb
aas
in
sbbl
and
jmp
imul
sti
dec
adc
lds
aaa
iret
jp
push
aaa
jg
lahf
adc
cmp
in
stos
cli
dec
jle
cmpsl
jae
roll
lret
sub
out
daa
in
bound
stc
testb
push
cmpsl
lods
cltd
add
pop
jg
fwait
out
pop
mov
jns
cltd
loop
insb
sub
cltd
icebp
or
dec
lods
cltd
push
lea
clc
jb
cmp
rclb
negl
cltd
das
mov
xchg
out
in
mov
fcoml
cltd
pushf
je
aam
outsb
cltd
mov
cli
ror
ljmp
call
testl
pop
fistps
sbb
repnz
or
dec
mov
sbb
and
sbbl
mov
in
icebp
out
pushf
pop
xchg
cltd
sarb
adc
inc
sbb
leave
adc
ret
mov
rorl
sub
cmp
adc
lcall
notl
mov
dec
in
test
mov
add
fs
lcall
jl
fisttps
lahf
push
cltd
and
push
pop
add
jp
jne
jge
cltd
imul
cmpsl
or
int3
fucompp
add
out
cltd
das
mov
or
or
popf
pop
pop
jbe
fidivs
cltd
inc
mov
sahf
inc
cmpsl
mov
frstor
fldenv
add
adc
xchg
xlat
push
in
cmpsl
arpl
mov
ds
cltd
add
fists
scas
add
inc
mov
mov
imul
jge
loopne
rcrl
rcll
pop
lods
cwtl
or
ficompl
imul
jo
fwait
stc
add
nop
cltd
xchg
inc
hlt
insb
ret
lcall
jmp
repz
stos
in
lcall
outsl
mov
cltd
scas
xchg
push
ljmp
dec
add
jp
xor
mov
mov
cltd
mov
pusha
aad
cltd
mov
in
jb
cltd
dec
call
int
cltd
jp
in
aaa
add
xor
mov
xchg
dec
fwait
xchg
mov
cmp
cmovne
dec
cmp
mov
xchg
lea
add
jge
xchg
adc
in
sub
mov
adc
push
outsb
add
imul
xchg
out
sub
ficoml
cli
test
out
enter
pop
mov
test
mov
dec
repz
pop
fldt
pop
add
lcall
frstor
loopne
mov
push
cltd
outsb
sub
lahf
lcall
imul
sub
cmp
and
icebp
mov
sbb
add
mov
lods
jb
cwtl
cltd
scas
stos
movsl
push
jmp
cld
dec
cltd
sbb
fistl
add
cmp
fld
lcall
xor
jmp
shll
cmp
cwtl
mov
std
xlat
inc
sub
dec
ds
sbb
sub
xchg
gs
cltd
dec
inc
push
sbbl
cld
rol
dec
orl
cltd
dec
cmpb
cwtl
sub
or
cltd
or
outsb
pop
add
out
cltd
push
aaa
ret
jne
popf
cltd
xchg
loopne
push
sbb
jno
fwait
adc
fs
ds
mov
add
pop
jecxz
leave
sub
push
in
lcall
ficompl
fcoml
mov
jo
mov
push
mov
jb
jecxz
inc
aas
cmp
je
mov
shr
lahf
lcall
fnstcw
mov
mov
lret
movsb
fwait
lcall
sbb
aam
cltd
sub
pop
mov
inc
mov
sub
lods
pop
cmc
dec
sbb
mov
test
fs
fisttps
cltd
cmpsb
jle
nop
test
lcall
add
sub
lret
dec
cli
jge
cltd
scas
inc
int
xor
inc
dec
pop
sbb
push
inc
cmpsl
push
adc
dec
sarl
ficoms
decl
xchg
jecxz
ss
aad
cmp
xor
mov
push
cld
sub
dec
movaps
xlat
sub
push
icebp
in
xchg
sub
jl
sub
jnp
arpl
jmp
mov
jmp
imul
out
cmc
cli
xchg
test
enter
cmp
sbb
pop
aas
sahf
push
cmp
out
jmp
div
rcrb
mov
mov
sbb
lods
insb
push
sbb
lods
lds
ds
rcrb
dec
pop
mov
leave
lods
sub
dec
inc
aas
mulb
mov
popa
ret
mov
inc
mov
pop
in
mov
mov
ljmp
xchg
dec
jecxz
sbb
xchg
jb
nop
insb
test
dec
shrb
mov
mov
lds
jns
insb
adc
les
xchg
out
lods
mov
popa
mov
jne
mov
push
jbe
icebp
lret
mov
fwait
in
outsl
popf
aam
jp
fdivl
sbb
scas
test
jecxz
dec
xor
xlat
adc
fcomps
mov
and
nop
enter
in
cwtl
cmc
pop
insb
out
das
sti
mov
or
inc
pusha
imul
jo
gs
or
lret
lahf
xor
pusha
push
scas
test
aad
push
stos
push
lea
lods
pop
inc
jns
popf
sub
or
hlt
sbb
pop
insb
adc
jg
pusha
out
mov
ljmp
stos
sbb
xlat
jge
inc
outsb
mov
into
in
pop
flds
leave
push
xchg
in
cmp
test
mov
into
lcall
insb
inc
fcompl
mov
mov
jge
fs
icebp
mov
pop
push
scas
iret
stos
jg
lods
and
dec
dec
sbb
mov
jmp
iret
lcall
ds
mov
xor
or
add
dec
addr16
push
add
out
mov
leave
jl
stc
incb
push
xchg
shr
pop
push
cmp
insl
lock
enter
fcomps
adc
sahf
imul
mov
and
jnp
jecxz
cmp
mov
inc
xchg
sub
dec
mov
and
rol
add
in
icebp
cmp
sar
mov
insb
sub
inc
leave
sub
loope
leave
pop
lods
push
insb
mov
cltd
mov
jo
cmp
mov
clc
aaa
inc
fs
repz
ss
adc
mov
cld
lcall
dec
mov
sub
rcll
and
cmp
pusha
fidivrl
sub
add
lret
addb
mov
sbb
inc
pop
cli
cmc
sbb
push
add
pop
push
rolb
sub
stos
cmp
push
les
mov
es
dec
sarb
in
mov
mov
cld
push
xchg
sbb
stos
mov
add
rolb
sbb
pop
out
inc
pop
sarl
dec
clc
xlat
movsb
lods
inc
sub
sbb
add
push
mov
mov
jle
inc
popf
and
mov
push
sub
imul
cmp
pop
cli
mov
bound
out
cmc
push
xor
mov
adc
cwtl
sbb
stc
stc
popf
dec
mov
aas
mov
push
cwtl
add
and
sbbb
sbb
xchg
push
xchg
pop
sbb
bound
push
and
shrl
mov
lock
inc
xchg
int3
jecxz
sbb
fwait
mov
mov
cmp
sub
xorl
sti
inc
sub
cli
sbb
mov
add
aaa
inc
sub
lcall
and
and
xor
leave
push
lds
cmp
sbb
mov
movsb
sub
in
cwtl
sti
imul
sbb
fisttpll
in
xchg
sbb
jge
mov
stc
fistpl
push
fwait
or
das
pop
loopne
mov
pop
shlb
lcall
mov
jp
dec
jb
mov
mov
pop
cwtl
in
jmp
or
jl
mov
shlb
sub
add
push
cmpsb
cmp
leave
and
test
or
stc
mov
ljmp
les
dec
mov
outsb
or
mov
jp
and
mov
xchg
pushf
xor
dec
sub
sbb
gs
mov
lret
shrl
jmp
mov
cmp
and
push
cltd
ja
xor
mov
pop
not
jmp
lahf
call
sub
mov
leave
pop
sbb
cmc
and
pop
and
pop
int3
push
jp
fwait
pop
pop
out
push
das
xor
mov
lea
mov
mov
lcall
lcall
std
sub
jp
mov
sub
and
sub
cmp
lcall
sub
outsb
lret
cmp
xchg
movsl
fxam
push
leave
and
stos
hlt
inc
int3
outsb
out
jns
movsl
sbb
fdivrp
mov
fidivrl
dec
cld
iret
mov
xor
fdivrl
movsl
and
cmp
and
subl
loop
shl
mov
insb
je
fsubl
loope
in
cmp
shrb
sub
sbb
sub
adc
popa
sub
lods
mov
jb
popa
stos
shlb
jns
out
sbb
mov
mov
mov
pop
mov
sbb
insl
out
push
pop
cmp
rcrl
xlat
ljmp
in
insl
leave
inc
jecxz
push
popf
repnz
and
push
mov
mov
jno,pn
sbb
pop
mov
stc
mov
pop
and
sbb
stos
leave
or
ret
xor
sub
mov
jo
adcl
dec
mov
shll
adc
ret
and
sub
jle
sbb
pop
lock
shlb
bnd
lea
ljmp
leave
cli
lahf
sti
cmp
cmpsl
cmp
mov
gs
es
fnstenv
bound
daa
mov
stos
outsl
jbe
push
dec
lock
fisttpll
lahf
jmp
aad
leave
leave
orb
mov
jp
gs
ljmp
pop
dec
ret
mov
fimull
and
leave
stc
mov
sbb
sbb
stos
xor
lcall
jno
lds
lahf
nop
jmp
dec
adc
add
mov
decl
lods
mov
shll
mov
stos
jge
loop
ljmp
popa
imul
mov
lcall
repnz
sbb
lahf
jp,pn
xor
xchg
popa
add
pop
nop
mov
scas
ljmp
add
test
pop
and
mov
ljmp
xor
rorl
fmull
fisubrs
ret
mov
fsubs
mov
ljmp
sub
ret
pop
xor
sbb
dec
pop
mov
cmp
inc
jp
sub
aas
xlat
xchg
push
cmp
sub
adc
push
lret
es
and
xorl
lahf
aam
cmp
leave
imul
mov
sbb
loope
dec
int3
fsts
pop
stc
leave
xor
das
aad
jb
fidivl
cmp
and
mov
icebp
repnz
jb
lret
rep
clc
loope
sbb
lcall
cwtl
jb
dec
in
inc
mov
cmp
and
inc
test
rcrl
dec
hlt
movsl
mov
add
and
into
mov
cmp
rorb
imul
xor
in
mov
mov
cmp
into
adc
adc
out
imul
adc
mov
mov
push
popf
ja
adcl
mov
hlt
or
cmp
jno
int
xchg
in
mov
mov
sub
push
clc
inc
jns
jns
imul
mov
cmpsl
or
fstpl
mov
jb
push
and
dec
jmp
and
popf
inc
imul
adc
fwait
add
pop
loope
test
and
dec
dec
push
enter
in
punpckldq
pushl
pop
mov
icebp
pop
sbb
pushf
xor
fisubl
loopne
iret
sub
sbb
sbb
stos
lds
aas
sub
lahf
test
mov
xchg
fwait
xor
inc
mov
lea
movsbl
sbb
testl
fstp
nop
inc
imul
mov
rcl
add
xor
jnp
aas
push
bound
mov
sbb
fiaddl
pop
cli
lods
mov
sub
das
push
repnz
inc
lahf
xor
cmp
daa
inc
sbb
loope
lods
mov
mov
out
jno
icebp
add
sbb
lret
rcr
aas
stc
lret
xchg
test
pop
sbb
fisubl
jb
sub
mov
pop
sbb
pop
das
cmp
leave
movsl
push
and
cmc
mov
add
popf
loope
mov
mov
popa
sub
xchg
sbb
mov
mov
lcall
dec
sbb
scas
sbb
inc
ljmp
ja
dec
jp
sub
movsl
fnstenv
add
mov
pop
mov
stos
arpl
sbb
mov
lret
les
shr
stc
cmpsl
lods
lea
push
dec
mov
push
cmp
sub
call
jp
dec
fwait
cmp
and
lret
jle
outsl
sbbl
enter
sub
pusha
pop
pop
or
or
mov
das
sbb
adc
push
aaa
cmp
stos
or
mov
xchg
and
sbb
inc
fwait
sub
mov
mov
dec
push
sbb
add
mov
movsb
fsubl
insl
mov
mov
mov
popf
pop
and
in
scas
and
jo
sbb
leave
add
mov
cmp
lret
xchg
push
cmp
dec
sbb
inc
mov
inc
pop
pop
sub
lods
and
dec
fstps
incl
sub
cmp
imul
sbb
jb
pop
shll
sbb
aad
movsb
jmp
loopw
mov
popf
stos
daa
xchg
dec
lods
insb
fnstcw
mov
insl
mov
lahf
lret
sarb
xor
outsb
pop
out
lea
mov
push
pop
cmp
fwait
mov
pop
lret
jl
sub
and
or
into
dec
lea
sub
dec
pushf
aam
pop
mov
add
push
stos
repz
sub
fcomps
sti
icebp
lahf
pop
loop
cmp
jnp
stos
fsubl
stos
jmp
xorb
stc
pop
lds
cmc
movsl
or
stos
push
jmp
mov
mov
aaa
mov
xorb
out
sbb
fisubrl
inc
es
fisubs
pop
or
cli
push
movl
dec
mov
fprem
fdivrl
pop
cmpl
pop
test
jne
inc
je
andb
cmp
stc
mov
or
shlb
sbb
mov
aaa
fdivs
add
jae
sub
and
xchg
xchg
fnstenv
mov
sub
sub
cltd
inc
lods
jnp
sahf
insb
push
cmp
push
int3
loop
or
mov
sahf
lret
enter
mov
pop
or
out
mov
mov
fisubl
into
jmp
icebp
call
sahf
lcall
add
ret
jns
inc
cwtl
iret
lret
sub
fstpl
xchg
fldcw
and
cmp
popf
hlt
cmp
ss
mov
cs
xchg
loopne
test
add
pop
leave
adc
imul
fwait
pusha
movsl
insb
int3
movb
pop
popf
cmp
jno
mov
add
mov
dec
ljmp
addl
dec
sbb
cld
das
mov
jns
add
jmp
or
mov
pop
inc
jbe
rorb
lcall
xor
shr
push
mov
aaa
lret
stos
test
pushf
mov
jp
mov
fstpl
jns
imul
mov
push
jbe
sub
mov
cmpsb
dec
clc
mov
mov
bound
push
hlt
cmp
sub
test
pop
push
aaa
jmp
scas
cmp
sub
pop
or
adc
cmp
push
scas
shlb
cltd
push
cltd
lahf
orb
test
out
daa
push
out
dec
leave
push
xor
hlt
sbb
mov
pop
xchg
sub
cmpsl
leave
jl
mov
lcall
jnp
fdivr
lods
ffreep
imul
jle
dec
rcl
pop
mov
inc
sbb
fsubrl
cmp
cmp
inc
andl
scas
lret
out
test
sub
ljmp
mov
popf
js
and
sbb
stos
rolb
sub
push
mov
pop
rcrl
mov
pushf
test
in
mov
adc
cmp
push
inc
loope
push
divl
lods
mov
sarb
mov
xchg
enter
leave
cmp
dec
pop
pop
call
fstps
sub
icebp
pop
divl
cmp
inc
push
fldcw
sub
movsl
or
lret
sbb
and
scas
jmp
jno
xor
or
hlt
ja
test
mov
adc
or
sub
je
pop
hlt
jmp
cld
sub
stos
xor
jb
stos
out
or
imul
popf
test
xor
rolb
sbb
jp
stos
addr16
mov
out
sub
test
rorb
jns
pushf
sbb
stos
arpl
out
fstps
rcll
stc
test
xchg
mov
mov
sub
and
xor
mov
imul
pop
mov
mov
mov
sbb
loop
lret
jbe
add
scas
addr16
dec
sbb
std
stos
cmpsb
sti
mov
shll
mov
dec
mov
push
or
add
push
aas
push
lcall
cmp
mov
xor
add
jne
test
mov
lcall
push
lahf
inc
xchg
jp
sbb
aam
adc
jns
mov
fwait
mov
or
dec
or
loope
stos
jb
cltd
and
push
ja
cli
jbe
lret
and
xchg
mov
push
outsb
mov
test
popf
sub
outsb
lea
adc
add
cli
jg
jmp
leave
mov
add
pushf
jp
inc
inc
ljmp
aaa
js
mov
sub
pop
xchg
ljmp
adc
ret
popa
mov
lcall
in
movsb
xor
push
stos
jno
dec
lret
int
dec
jge
sbb
nop
out
test
loope
lcall
jne
mov
xlat
bound
test
ret
xchg
push
inc
outsl
daa
mov
cmp
and
fwait
leave
cmp
stc
mov
jbe
out
ljmp
int3
cmp
lahf
pop
mov
jno
aas
push
sbb
cmp
lret
push
pop
inc
cmp
sbb
xor
lcall
pop
xor
sub
pop
in
sbb
mov
arpl
and
pop
fisubl
sbb
scas
or
dec
stos
cmp
dec
pop
pminub
stos
lds
add
adc
mov
imul
mov
int3
xor
cmpsl
mov
nop
mov
inc
sbb
mov
bound
leave
adc
jecxz
mov
jp
nop
scas
js
push
cmp
inc
mov
cmc
mov
and
popf
mov
in
jle
sub
jns
icebp
inc
fisubl
stos
adcb
sub
sbb
sahf
imul
push
dec
xchg
and
cmpsl
roll
sub
and
rorb
sti
adc
sti
stos
lds
xchg
mov
std
gs
mov
sub
mov
scas
xor
mov
pop
cli
icebp
cli
sbb
movsb
pop
mov
js
push
mov
cmp
inc
push
jnp
jo
loop
push
and
inc
adc
ficompl
jb
jp
jno
in
scas
adc
sti
mov
adc
mov
lods
xor
ret
imul
push
mov
fldl2t
mov
mov
push
ljmp
pop
push
push
mov
fistps
in
mov
cmp
imul
jmp
fildll
pop
ret
push
cmc
mov
ud0
loope
dec
pop
sbb
sbb
cmpsb
xor
pushf
add
loope
jmp
xchg
stos
std
mov
xor
sarb
mov
out
push
subb
aaa
es
mov
leave
and
das
mov
aad
cli
sbb
out
xor
and
aas
leave
cmp
and
and
inc
movsb
pop
pop
nop
fcmovbe
aas
lahf
fs
fwait
inc
bound
inc
inc
out
stc
xor
push
or
cwtl
xchg
outsl
sar
mov
in
cld
mov
add
and
xchg
push
fwait
and
sti
ljmp
cmp
pop
mov
arpl
jecxz
dec
es
mov
sub
inc
popf
mov
sbb
xor
jecxz
ret
sbb
mov
mov
and
mov
xorb
or
loop
fbld
sbb
inc
xor
inc
dec
lock
inc
dec
leave
imul
ljmp
jle
sbb
mov
cmp
sbbl
mov
push
imul
xchg
sub
add
loop
xor
sub
loope
mov
dec
mov
pop
mov
push
mov
iret
cmpsb
scas
out
and
mov
mov
popf
ret
aad
cmc
sbb
ret
addl
lea
cmp
shl
inc
sbb
jmp
jg
adc
stc
add
cmp
push
pop
jp
push
pop
push
mov
repz
xchg
mov
jge
fyl2xp1
popf
or
fidivl
sub
mov
pop
lret
mov
xchg
ret
jns
cmp
rcrb
loope
xor
inc
imul
jmp
lea
sub
lcall
push
lret
mov
dec
outsl
inc
ret
pop
adc
push
pop
mov
dec
cmp
bound
div
mov
jns
ret
xor
sub
popa
fwait
push
inc
int3
movsb
es
or
mov
cmp
sbb
xor
jp
mov
jmp
sbb
loope
pushf
xor
or
and
sbb
jno
sbb
inc
push
adc
mov
out
sbb
mov
mov
push
lcall
sub
loope
jb
ds
hlt
scas
aas
mov
xchg
or
pop
sub
or
push
dec
cmpb
aas
mov
fwait
mov
push
xchg
sub
cmpsl
add
hlt
cmp
mov
jae
fwait
ret
adcl
adc
xchg
add
test
jo
push
xchg
sbb
sbb
cmp
mov
cmpsl
sub
dec
xor
ljmp
mov
inc
or
jo
loope
pop
ret
mov
pop
insl
xor
adc
mov
jp
cmp
dec
push
xor
das
jle
jecxz
xchg
mov
loop
popf
psrad
mov
sub
dec
xor
loope
stos
fidivrl
mov
or
mov
mov
sbb
mov
mov
movsl
mov
cmpsl
mov
movsl
sbb
dec
cmp
pop
dec
mov
jmp
and
and
outsl
add
ljmp
sbb
dec
sbb
dec
das
outsl
xor
outsb
mov
mov
mov
pop
popf
lret
or
outsb
adc
cmp
push
add
mov
push
mov
int3
ret
jl
lret
out
out
and
mov
popf
xchg
fs
and
movsl
jp
addr16
rcr
imul
loope
xor
sub
cmp
mov
cmp
sbb
push
add
rcll
shr
ffree
cmc
sbb
stos
sbb
ljmp
mov
lods
inc
popf
inc
push
cmp
in
adc
iret
mov
stos
xchg
dec
sub
xchg
lahf
or
cmp
pop
fstp
ficompl
push
cmp
popf
xor
inc
sarb
push
inc
ja
hlt
lret
bound
jmp
testb
mov
adc
push
fucomp
cmp
orb
mov
pop
jmp
setnp
popl
stos
int3
mov
sbb
call
pop
lcall
inc
mov
pop
pop
and
lahf
mov
mov
fidivs
lret
jo
pop
xchg
std
adc
mov
inc
stos
pop
arpl
arpl
les
sbb
adc
push
lds
jp
jb
pop
cmpsb
test
sub
and
pop
lret
mov
jmp
rorl
in
in
sarl
sti
je
dec
imul
fs
int3
js
dec
xchg
mov
sbb
inc
mov
jb
aaa
clc
sbbb
sub
in
sti
clc
mov
sbb
push
std
jmp
cmpsl
stos
sub
sub
cmp
imul
xor
push
pop
sbb
jl
aas
mov
and
jnp
pop
lcall
inc
mov
mov
fstpl
stos
adc
scas
mov
adc
gs
xor
movsb
test
jb
lcall
mov
mov
sub
ret
jmp
cmp
add
push
sbb
sbb
pop
nop
xor
jno
mov
repz
aas
std
fsubrs
popf
out
sub
jp
mov
jp
rcr
cmpsl
mov
push
or
in
out
and
adc
popa
lods
sbb
rolb
sub
ja
lret
cmp
repz
es
scas
aas
or
cmp
iret
fdivr
mov
mov
push
sub
push
push
ror
jge
stos
add
movsl
movsl
cmp
rorb
loop
sti
lods
xchg
stc
stc
jns
pop
xlat
pop
add
lds
dec
loop
sub
xlat
sub
mov
xor
stos
loop
xchg
mov
or
pop
in
dec
adc
sbb
mov
shlb
sbb
sbb
loope
adc
jns
jno
xor
popf
jl
lcall
arpl
pushf
insl
mov
adc
pop
sub
xor
or
mov
out
test
rorb
jne
mov
std
call
sbb
cmp
lods
pusha
xor
popf
cmp
xchg
lcall
add
pop
sbb
pop
add
stos
sub
stos
push
rcl
dec
jl
mov
or
xor
mov
jp
jle
sub
mov
inc
stos
mov
mov
dec
clc
rorl
stos
scas
add
adc
ret
dec
shlb
xchg
gs
jp
scas
into
cmp
xor
sbbl
jecxz
or
xchg
push
push
imul
nopl
dec
aas
mov
dec
mulps
and
mov
icebp
mov
fldenv
out
aaa
and
and
jb
cli
dec
push
mov
mov
iret
adc
dec
sbb
mov
push
arpl
add
es
add
mov
xor
cli
test
inc
fcoml
jmp
pop
lcall
or
xchg
jae
cld
mov
cmp
fisttpl
out
add
lcall
mov
rcr
mov
jg
cld
pop
lcall
add
mov
xchg
cmp
dec
pop
mov
ljmp
leave
adcl
lea
sub
sub
inc
jl
cltd
dec
pop
clc
jno
or
rolb
cmc
and
fsqrt
mov
lret
mov
push
cmp
xchg
sbb
mov
sbb
test
sub
inc
mov
and
negl
aaa
leave
mov
popa
test
add
cwtl
fdivrl
cld
push
jno
stc
popf
inc
hlt
and
ljmp
sub
or
test
add
inc
push
jle
sub
pop
jns
pop
jne
mov
loope
cmp
ss
in
leave
dec
gs
mov
addr16
xorl
mov
fdivrl
mov
jbe
in
mov
xchg
push
push
inc
jno
shll
stc
or
adc
aam
shr
mov
insb
xor
popf
jns
xchg
in
sub
sub
fisubrs
pop
jle
cltd
inc
pop
stos
mov
lcall
ljmp
mov
stc
add
jnp
jae
mov
ljmp
mov
xchg
mov
add
lcall
or
mov
inc
aaa
clc
cmp
push
aas
dec
rcrb
sub
xchg
mov
popf
fidivs
rcrb
sbb
push
movsl
jg
orb
and
or
sub
loop
repz
daa
mov
mov
dec
sbb
stc
fwait
loopne
dec
pop
out
test
mov
es
rol
sbb
stc
lcall
dec
adc
push
nop
inc
push
pop
mov
gs
fsubrl
and
sti
and
inc
mov
sbb
sub
scas
imul
aas
rcrl
repz
cmp
lds
inc
push
sub
lea
aad
jp
inc
aaa
lret
stos
xchg
loop
ljmp
rcr
xchg
inc
pop
cld
dec
jl
das
imul
cmc
addr16
lea
shrl
mov
lcall
mov
pop
flds
aas
mov
pushf
pop
shrb
imul
stc
mov
imul
mov
int
jge
pop
notb
sbb
movsl
or
pop
xor
cmp
stos
lds
inc
or
pop
sbb
pop
pop
push
mov
xor
hlt
cmpsl
sti
sub
push
lea
retw
and
cmp
je
shr
xor
mov
lods
jg
loope
jbe
jnp
adc
cltd
gs
lret
popf
add
sbb
mov
cwtl
or
add
mov
cli
cwtl
jae
xor
ret
sbb
pop
xor
mov
jbe
test
sub
rcrl
inc
jno
sbb
icebp
sub
mov
adc
push
shl
jns
cmp
fabs
xchg
dec
pop
lret
pop
imul
pop
dec
movsb
leave
adc
movsl
mov
adc
mov
push
lret
mov
cmp
mov
lods
jecxz
mov
cmp
negb
dec
fnstcw
cmc
out
inc
mov
and
dec
cmp
push
push
xchg
cwtl
ljmp
fucomp
mov
lcall
mov
xchg
fldcw
subb
jmp
cmp
sti
jecxz
adc
cmp
dec
push
sbb
push
sub
dec
and
std
lret
sti
daa
repz
sbb
mov
mov
lahf
sbb
aas
aad
mov
lock
sub
divl
pop
repnz
mov
loop
fld
xchg
inc
scas
scas
pusha
aaa
push
mov
mov
ss
cmp
and
popa
sub
das
cmp
out
das
jecxz
mov
test
dec
insl
rcr
xchg
cmp
popa
jecxz
mov
cltd
aad
cld
or
push
fildll
sub
lcall
in
mov
cwtl
mov
and
mov
or
movsb
push
jb
cmp
sbb
inc
divl
stc
xor
cmpsb
stos
dec
xor
bound
dec
or
popf
aas
add
sbb
addb
xor
ret
mov
mov
test
mull
lret
popf
mov
cld
dec
repnz
cmp
lcall
pushf
add
push
add
mov
jnp
mov
add
sub
push
cltd
repnz
xchg
jp
jmp
notl
mov
das
data16
bound
stos
stos
add
adc
inc
mov
repnz
or
xchg
cmc
sbb
sbb
push
lahf
xchg
das
inc
test
mov
in
xchg
fsts
lock
cmp
jmp
pop
inc
push
adc
inc
inc
fildll
sti
cltd
xor
adc
mov
add
ret
pusha
push
rol
pop
adc
fnstenv
aas
push
sub
imul
sbb
shl
sbb
enter
cmc
pop
mov
icebp
xchg
sub
lcall
xchg
xor
sub
mov
lret
fisubs
push
or
loop
sbb
and
leave
mov
ds
test
dec
cmp
sahf
lds
jmp
divb
mov
sub
out
mov
fistl
mov
mov
bound
ss
cltd
jno
pop
das
idivl
loope
inc
pop
mov
lahf
xchg
fsubs
mov
repz
lods
pop
bound
push
lcall
cmp
test
push
gs
pop
lds
ljmp
dec
aaa
dec
mov
add
scas
aaa
push
sti
mov
daa
in
mov
imul
stos
inc
pop
inc
push
sbb
sbb
shll
sub
sbb
jns
dec
jmp
inc
dec
fcoms
cmpsl
mov
or
mov
hlt
in
xchg
pop
cmp
mov
aas
dec
or
jno
xlat
inc
mov
dec
lods
jne
and
mov
sahf
loopne
push
mov
cmp
out
push
ret
inc
mov
jnp
inc
filds
xor
cwtl
in
insl
subl
add
out
xchg
stc
xor
mov
sub
stos
inc
repnz
push
fwait
push
icebp
shlb
sbb
lret
mov
inc
xchg
sbb
cmp
pop
outsb
sbb
imull
or
xchg
popf
push
mov
inc
lret
jg
icebp
pop
xor
sbb
ljmp
sub
inc
cli
sbb
cli
and
sarl
xor
mov
stos
pop
and
sbb
lahf
xor
stc
push
icebp
or
popl
aas
xor
inc
lods
pop
les
mov
sub
cmp
or
or
ret
cmc
stc
loope
nop
pusha
repz
inc
cli
pop
xor
iret
shll
aad
mov
shlb
jb
dec
inc
out
mov
add
cmp
add
repz
out
inc
and
dec
jmp
push
dec
sub
inc
dec
sub
cmpsl
sub
imul
jns
xor
stc
push
movsb
stos
cmp
popf
arpl
fstl
scas
das
cmp
jmp
jecxz
bound
push
mov
sub
pop
pop
clc
mov
add
mov
std
insb
outsl
pop
push
pop
mov
leave
jl
lcall
cmp
push
jno
sti
adc
pop
xor
mov
gs
cmp
ljmp
aaa
idiv
mov
mov
jmp
test
add
push
or
or
sub
fwait
sbb
jmp
ja
adc
jge
shrb
xchg
adc
stos
mov
lods
adc
outsl
scas
dec
out
aaa
jnp
pushf
cs
jb
movsl
jns
fstps
dec
lds
or
loop
mov
icebp
dec
popf
xor
cmp
xchg
mov
add
inc
stc
leave
adcl
lds
inc
pop
push
mov
neg
shlb
mov
push
mov
push
xlat
sbb
and
push
push
clc
fstps
out
mov
sub
fdivp
sti
dec
cmp
jp
adc
xchg
sarl
mov
mov
daa
fdiv
leave
fcmovu
inc
lea
add
iret
push
lret
std
mov
int3
mov
aaa
mov
inc
movsl
es
dec
pop
push
stos
xchg
das
jg
jle
dec
xchg
sti
and
mov
add
popa
pop
fnstsw
lahf
iret
cmp
aas
cmc
mov
or
loop
cmp
arpl
or
sbb
xor
mov
xchg
sbb
fiaddl
cmp
inc
xor
fs
stos
xor
adc
pop
fildl
pop
inc
outsb
jp
xor
frstor
fdivrl
scas
jae
xchg
imul
test
pop
push
pop
pop
leave
xchg
stos
jns
add
xor
mov
daa
cmp
jle
stos
push
mov
xchg
jmp
pop
cmp
xor
dec
jns
cmp
sbb
or
pop
lock
test
popf
dec
mov
inc
test
lds
mov
mov
jp
add
jnp
ret
pop
out
xor
je
test
movsl
mov
shr
shrl
negl
and
in
xchg
lcall
in
dec
mov
adc
mov
in
pop
fiaddl
ja
or
fwait
adc
dec
mull
inc
clc
bound
jnp
test
dec
xchg
test
bound
sub
push
cmpb
fucomp
lahf
jnp
sti
sub
mov
pop
repnz
xor
loope
shrl
push
mov
stos
sbb
sbb
inc
repz
mov
enter
popa
sbb
inc
test
pushf
loop
add
pop
sub
pop
add
out
dec
pop
adcl
stos
jmp
push
sbb
lcallw
xchg
aad
sbb
imul
lcall
xor
sbb
ds
bound
popa
cmc
sub
add
xchg
in
popf
addr16
inc
stc
loope
cmp
push
fmuls
gs
movsl
into
xor
push
pop
jb
cmc
or
push
nop
aaa
adc
loope
mov
inc
jnp
lcall
add
mov
adc
mov
push
loope
outsl
loop
mov
fnstcw
out
ss
or
aas
xor
xchg
lret
lahf
sub
push
pusha
ret
mov
stos
inc
mov
aaa
js
cmpsl
and
mov
fsts
aaa
out
jmp
lret
sbb
loop
stos
repnz
sbb
sbbb
ljmp
leave
sti
movsl
add
xchg
ret
movsl
leave
and
cmp
dec
fsts
add
mov
fistps
shll
shlb
inc
stos
push
and
sub
in
repnz
jbe
lret
subb
sbb
ret
add
mov
test
ljmp
jmp
and
adcl
xor
cmp
push
push
lock
js
test
push
or
mov
cmpsl
cs
push
jnp
mov
jg
lods
cmpsl
cmp
fcoms
lahf
pop
out
mov
jecxz
aas
gs
nop
adc
stc
mov
insl
mov
ficompl
push
sbb
add
fcomps
loope
aas
gs
sbb
dec
pop
lcall
lds
sub
aad
xorb
or
sub
inc
pop
push
or
fdivl
inc
stos
icebp
mov
add
call
jb
inc
pop
roll
stos
add
mov
pop
push
test
cmpsb
mov
mov
cmc
out
or
cltd
ljmp
pop
xchg
xchg
pop
rclb
push
fwait
cmpsl
jmp
dec
fyl2x
ds
divb
pop
push
push
dec
xchg
cwtl
adc
sub
pop
fcompl
pop
xor
sbb
scas
xchg
pushf
push
adc
stc
fwait
aas
xor
cli
icebp
scas
inc
jp
push
xchg
dec
push
out
stc
rorl
bound
popa
stc
jp
sbb
jne
sbb
movsl
xor
xor
inc
push
sub
les
dec
jp
fstl
adc
xor
popf
jnp
sbb
addr16
dec
push
inc
stc
jno
push
add
sti
sub
add
aaa
pop
push
fidivs
sub
mov
jg
lock
mov
loopne
mov
pop
jl
sub
inc
sub
xchg
out
leave
or
inc
mov
add
jns
inc
clc
sbb
icebp
aad
pop
pop
jns
adc
js
fwait
das
mov
imul
jmp
lods
cmp
std
sub
sti
stc
push
pop
xor
sub
iret
sub
or
lcall
sbb
loop
inc
aad
cmpsb
mov
push
xchg
xlat
mov
lret
and
xor
in
aaa
mov
sub
std
cmp
sub
test
ljmp
or
fwait
movsl
add
aas
or
lock
cmc
jno
lahf
arpl
insb
push
pop
inc
jns
add
mov
imul
push
sbb
repz
sbb
or
pop
inc
fnstsw
popf
int3
shrl
insl
sbb
pop
enter
dec
stos
pop
sub
cmpb
sub
sti
shrl
adc
pop
xor
inc
aam
pop
mov
icebp
xchg
lock
dec
popf
mov
out
jmp
jge
icebp
adc
adc
pop
and
outsl
jb
popf
sub
push
arpl
stc
pop
mov
xchg
test
sbb
cld
sbb
popf
loope
cmp
lcall
sbb
dec
inc
lcall
adc
rcr
mov
icebp
sbb
rcr
hlt
fs
pop
cmp
aam
mov
push
add
lds
dec
jb
sbb
push
stos
cli
sub
icebp
lcall
das
mov
movsl
jb
cmc
mov
xchg
add
and
fwait
ds
sub
jmp
cli
insb
dec
cmp
cmpsb
and
jns
inc
jle
repz
lret
dec
pop
pop
dec
sub
mov
jmp
push
push
mov
jp
sbb
fwait
push
inc
mov
sbb
cmp
xchg
jns
mov
ret
ljmp
pop
xchg
jp
sub
jb
or
mov
dec
mov
stc
adc
mov
or
xor
fwait
mov
jne
fidivl
cwtl
dec
fs
adc
ficomps
rol
das
inc
xor
pusha
scas
es
inc
jp
push
aad
jl
inc
dec
adc
cmpb
add
sbb
popf
fucom
jno
cmp
lcall
add
test
push
sbb
jo
mov
xor
mov
dec
gs
lcall
imul
push
mov
cwtl
lret
cwtl
jns
dec
aaa
push
jmp
sahf
sub
and
add
notb
mov
sub
sbb
add
jns
xchg
mov
stc
stos
sbb
push
jmp
jae
dec
icebp
mov
push
cmc
mov
push
lods
loope
in
ljmp
xor
jmp
popf
pop
lcall
push
sti
cmp
negb
xchg
popf
push
ljmp
lret
xorb
pop
ja
stc
stos
mov
mov
and
xlat
mov
cmp
jmp
xor
fsts
mov
cmpsl
jbe
loopne
dec
mov
mov
repz
mov
ret
test
loopne
and
cmova
divl
es
xchg
pop
push
dec
je
ljmp
jp
dec
cli
cmp
inc
stc
or
sbb
shrl
repz
xchg
ja
stc
or
mov
lea
cltd
addr16
pop
cmp
and
mov
out
stc
mov
bound
or
push
clc
mov
mov
insl
mull
jae
xor
adc
jp
mov
imul
inc
push
into
jecxz
and
jle
popf
dec
insl
and
leave
push
lods
sarb
mov
or
leave
sbb
mov
mov
stc
fnstenv
ss
loope
fldl
adc
mov
push
sbb
loop
mov
test
and
aam
mov
mov
test
movsb
in
das
lahf
jp
mov
push
dec
pop
mov
test
mov
dec
inc
aaa
sarl
test
in
pushf
stos
dec
push
aaa
lcall
xchg
push
fwait
pop
mov
cmpsl
mov
adc
or
loope
or
movsb
leave
arpl
mov
pop
bound
ljmp
mov
pop
add
leave
sbbb
int
iret
jecxz
aas
ljmp
repnz
popa
popf
lock
xchg
leave
popa
mov
mov
mov
hlt
jecxz
mov
notb
or
stos
pop
cmpb
mov
cmp
pop
xor
stc
jns
pop
test
and
sbb
xor
inc
jo
ret
ss
rcrl
dec
pushf
loop
dec
adcl
std
sub
sub
mov
sbb
and
and
push
ficoms
out
loope
rcrb
inc
and
mov
jp
dec
popf
faddp
stos
ret
pusha
cli
stos
inc
dec
xchg
dec
hlt
jmp
xor
mov
jmp
sbb
adc
push
pop
popa
out
sub
or
das
inc
repnz
add
stos
pop
jecxz
test
cmpl
inc
je
sub
jnp
fmull
inc
ret
insb
pop
outsl
pop
push
push
inc
dec
inc
dec
jns
ljmp
fwait
push
loopne
rorb
fwait
xchg
test
cmp
leave
dec
cmpsl
ret
cwtl
xor
pushf
inc
mov
pop
fiaddl
rcr
and
js
xchg
lds
stc
sbb
lret
aas
nop
ret
add
mov
ficoms
scas
leave
push
mov
pop
ljmp
cmc
lcall
lcallw
push
stc
ds
enter
testl
imul
cmc
int3
inc
mov
test
jl
fwait
sbb
mov
mov
bt
push
shll
fmul
fwait
divb
in
sub
pop
ficoml
test
push
pop
xor
add
test
pop
movl
lcall
mov
hlt
mov
movsl
push
sbb
aaa
jno
push
push
mov
mov
mov
pop
setae
adcl
pushf
imul
lock
icebp
out
testl
fwait
sti
sub
sub
mov
push
lods
or
xchg
mov
movsb
repnz
repz
cmpsb
push
lcall
rcll
add
fisubl
loop
mov
shll
pushf
dec
fstpt
fsts
mov
data16
in
pop
ljmp
cmp
add
ret
add
or
jp
ljmp
sbb
fldl2e
mov
rcrb
clc
pushf
jae
dec
push
sbb
lea
shrb
bound
adc
lcall
sbb
lret
xor
fs
push
mov
cmp
sub
or
add
sub
aaa
mov
inc
mov
enter
xchg
push
cmp
jecxz
mov
stos
sbb
mov
lcall
shlb
xlat
dec
insl
out
push
mov
imul
aaa
mov
ljmp
pop
push
fwait
arpl
icebp
lret
aas
ret
inc
in
jns
cmp
cmp
mov
dec
xor
mov
imul
xor
sbb
push
xor
sbb
rorb
and
sbb
xor
xchg
nop
loope
aad
mov
sbb
movsl
lea
shrb
sbb
mov
dec
adc
ret
out
shlb
adc
push
pop
shll
xor
je
xlat
push
mov
adc
pop
popa
adc
xor
mov
mov
xchg
xor
leave
sbb
repnz
sbb
mov
ret
cld
add
mov
das
les
lret
inc
push
fstps
cmp
enter
inc
shl
sbb
cmpb
fisttpl
adc
in
rorl
inc
dec
ret
aam
dec
int
inc
movl
sarb
and
cld
push
dec
xchg
adc
push
adc
push
jp
push
push
jle
sub
call
mov
pop
jbe
leave
jge
popf
addr16
xor
jge
xchg
call
popf
inc
mov
lret
dec
rcr
jb
das
data16
mov
aam
dec
leave
inc
or
adc
jnp,pt
pushf
mov
inc
xor
cmp
fxtract
jecxz
dec
jl
lcall
adc
ret
adc
test
cltd
lock
fiaddl
and
jb
xor
dec
dec
sbb
jmp
push
fmull
add
pop
sub
cmp
arpl
cmp
and
loop,pt
into
ficoml
dec
repz
data16
hlt
jmp
mov
xor
mov
mov
or
icebp
popf
addr16
cwtl
clc
ds
xchg
mov
sbb
lea
addb
sarb
in
mov
xorb
jne
dec
sbb
mov
into
and
push
dec
sbb
mov
loope
dec
sub
jg
sub
cwtl
jno
mov
sbb
dec
or
sbb
or
cmpsb
das
stos
pop
stc
sbb
mov
shlb
test
add
mov
fisubl
addr16
jns
repz
mov
aas
lcall
xchg
sarb
popa
stc
loop
push
sbb
sti
dec
mov
shrb
push
dec
jne
jecxz
push
fs
mov
push
imull
cmpb
mov
dec
cld
jno
sub
and
decb
inc
pushf
adc
out
cmp
and
pop
jb
push
fwait
pop
xchg
mov
imull
outsl
fs
imul
fstpl
insb
stc
dec
dec
pushf
repnz
out
push
fidivrs
gs
cltd
dec
sahf
rcll
sbb
hlt
push
jle
xchg
popf
stc
lret
fdivrl
xor
xlat
dec
xchg
stc
cmp
push
jmp
imul
daa
hlt
and
xchg
mov
and
adcl
ljmp
testl
push
xor
push
push
adc
xlat
mov
pop
mov
imul
dec
cmp
mov
leave
leave
sbb
in
stos
dec
pop
adc
rcrl
imul
scas
jbe
dec
dec
xchg
or
sub
xchg
jle
or
xor
test
push
js
fwait
in
push
cmp
dec
mov
rolb
loope
stc
xor
mov
shlb
jo
icebp
insb
dec
aaa
js
fwait
lahf
cmc
cmp
jbe
in
fidivs
push
jno
fwait
add
lret
scas
push
out
stc
stos
cmp
jecxz
push
jle
sbb
dec
jnp
jl
out
stc
sub
je
stc
add
mov
xor
push
inc
dec
xchg
mov
mov
ss
sub
scas
cmp
lcall
push
dec
pop
inc
cmp
pop
jg
sbb
das
sub
imul
sub
imul
sub
stc
cmc
stc
sbb
sbb
jp
jns
inc
testl
adc
pop
cmp
dec
fwait
mov
imul
lcall
test
or
jns
push
inc
xchg
or
jmp
xlat
outsl
cmpsb
jl
push
lcall
push
mov
push
pushf
mov
clc
ret
adcl
jnp
lcall
cmp
xchg
cltd
popf
out
mov
cltd
mov
stos
cmp
lcall
fidivrs
repz
or
ret
sbb
mov
xchg
dec
cwtl
sbb
stos
pop
xlat
push
into
cmpsl
loope
xor
sahf
cmpsb
in
add
mov
scas
mov
dec
sub
lods
daa
scas
xchg
mov
jno
fistpl
int3
faddl
movsl
sbb
outsl
stc
lret
dec
aam
stc
pop
jno
rorl
sti
lods
in
push
bnd
jle
mov
or
and
imul
push
pop
lret
xlat
jb
mov
cmpsb
sub
sub
inc
push
inc
mov
lods
into
and
sub
jb
mov
mov
add
inc
in
lcall
add
sub
cltd
loope
xchg
mov
movsl
sar
fwait
sub
loopne
pop
cli
add
imul
lcall
inc
divl
das
pop
int
sub
popa
dec
sub
cmpb
jmp
sub
stos
rorb
call
inc
xchg
enter
mov
outsb
fwait
mov
dec
repz
sbbb
xor
lcall
ljmp
outsl
pushf
mov
mov
mov
arpl
mov
fdivs
cli
pop
cmpsl
push
test
pop
sub
test
mov
or
cld
mov
jecxz
in
addr16
push
cltd
test
aam
int3
cltd
data16
pop
cwtl
mov
pop
cltd
ret
jecxz
test
repnz
lcall
dec
cltd
jl
xchg
inc
adc
mov
mov
inc
lcall
adc
cltd
or
jg
aam
ficomps
mov
rcr
arpl
push
insb
and
daa
inc
scas
cltd
leave
sbbl
inc
push
cltd
xor
mov
movsb
cmpsl
inc
or
negb
fwait
scas
sbb
mov
dec
js
daa
jo
ds
xor
fcompl
fst
push
and
pop
cmpsl
push
cmpsb
shrl
rorb
in
pop
and
or
xlat
and
xor
push
fcmove
ja
fsts
gs
aad
mov
fwait
mov
mov
sbb
lret
cltd
push
leave
push
lea
fcmovu
sarb
aas
insl
cltd
out
loop
or
movsl
xor
pop
cltd
cmpsl
add
divl
stos
adc
adc
mov
sbb
aad
xchg
lods
add
jnp
cltd
dec
fs
and
push
jg
add
cs
pop
mov
mov
mov
ret
cltd
cmp
fsts
pinsrw
inc
popa
pmaddwd
ret
cltd
icebp
inc
movsl
pop
pop
addr16
stos
cltd
insl
mov
fadd
repnz
cltd
mov
mov
roll
mov
call
cltd
push
das
lret
and
sub
mov
pop
cltd
sbb
jne
cltd
shll
out
dec
fsubp
push
sbbb
mov
sbb
xchg
sbb
test
push
cltd
xor
push
push
movsl
cwtl
dec
xchg
add
imul
cltd
nop
push
out
iret
or
mov
cs
mov
cmpsl
sbb
aas
and
cltd
push
jge
push
mov
std
adc
mov
adc
pop
cmpsl
popa
gs
xchg
cltd
repz
mov
cli
push
xchg
ss
xchg
scas
fwait
cltd
mov
adc
call
clc
dec
adc
cltd
fsubrl
mov
scas
lahf
inc
imul
rorl
sbb
fstpt
push
out
mov
and
dec
mov
xchg
cmp
mov
stc
fdivl
leave
cltd
in
mov
add
xchg
or
xor
xchg
cltd
mov
and
call
rcrb
lcall
sahf
aad
push
pop
push
cmc
xchg
repnz
sbb
lret
mov
mov
mov
mov
lods
jbe
xchg
sbb
pop
xor
pop
mov
hlt
filds
leave
cltd
pop
jge,pt
jecxz
pop
jg
mov
sti
and
dec
aad
jle
sbb
add
add
jns
stos
pushf
dec
xchg
xchg
cwtl
sub
inc
outsb
fwait
lret
mov
adc
mov
cmp
cltd
pushf
loopne
pop
pusha
mov
mov
jp
xchg
sbb
mov
or
cltd
sub
mov
popf
jl
lock
call
cltd
and
sub
ret
mov
jb
dec
fstps
jmp
out
cltd
lcall
xlat
xor
push
ss
push
mull
cltd
int
or
cltd
pop
jp
jg
mov
adc
leave
mov
mov
cmpsl
inc
mov
pop
lcall
cltd
ficomps
cwtl
cltd
fidivrl
xor
add
cltd
xor
insl
push
scas
call
push
sbb
imul
cltd
ljmp
sub
cmpsb
mov
repz
add
mov
push
mov
pop
fbld
aad
add
enter
mov
pop
ficompl
leave
mov
lahf
subb
inc
dec
xor
add
mov
and
push
cltd
out
es
mov
sub
pop
les
lcall
out
loope
fildl
xor
or
dec
cltd
adc
mov
cltd
mov
sub
in
mov
test
mov
sub
fcomps
insb
jno
bound
mov
push
pop
pop
pop
mov
push
movsl
iret
xchg
sbbb
mov
cltd
xor
fisttpl
push
and
push
or
ret
lds
mov
mov
arpl
inc
out
push
negl
fsubs
mov
cltd
popf
sbb
negb
in
outsl
cmc
ret
lret
cltd
mov
pop
les
imul
cltd
js
and
lds
jns
sub
inc
mov
sub
sbb
xor
imul
pop
push
add
and
aaa
xor
lret
lods
cltd
adc
enter
insb
leave
or
pop
xchg
pop
push
popa
xchg
cltd
xchg
aas
or
out
loop
xlat
cltd
sub
adc
pushf
lods
mov
jecxz
stos
push
add
jg
mov
leave
repz
das
add
xchg
xchg
rcl
mov
nop
lcall
fwait
es
inc
sub
sbb
ret
pop
ficoml
std
inc
sti
shrl
loop,pn
aas
cmp
mov
fstps
sbb
int3
jmp
push
sbb
icebp
sbb
xchg
xor
mov
or
lcall
inc
cltd
divl
pop
mov
lret
xchg
push
add
mov
adc
mov
mov
mov
addr16
cmp
fiadds
jae
jg
andl
icebp
cltd
cmpsl
sbb
adcl
lods
cmp
loop
pop
push
insb
scas
bound
add
cltd
mov
mov
lahf
sbb
out
cs
and
out
lcall
cmp
xchg
fisubl
xor
in
cmp
ja
mov
cltd
stc
sbb
insb
test
jp
fwait
scas
jns
les
sti
inc
jl
cltd
jnp
add
in
fildll
hlt
addl
leave
ffreep
mov
imul
jecxz
push
and
ds
jge
cltd
movb
pop
pop
mov
cltd
xchg
jle
adc
repz
xchg
dec
daa
inc
out
rolb
shr
xor
fwait
js
repnz
jle
dec
in
xchg
sub
in
cmc
rcrb
inc
jecxz
or
push
je
or
dec
cli
ss
pop
and
aaa
dec
push
addr16
sub
es
sub
jecxz
and
lahf
subl
inc
sahf
jge
dec
jo
cltd
mov
sub
and
int3
ret
dec
aad
xchg
pop
sbb
dec
adc
ja
mov
or
lcall
xchg
mov
mov
cmp
adc
or
outsl
int
cltd
pop
loopne
notl
push
sbb
cltd
stos
aad
sub
xchg
xchg
adc
pop
lcall
mov
sub
lcall
cltd
inc
in
js
sbb
cltd
cmpsl
inc
lds
mov
movsl
or
jbe
arpl
cltd
in
and
xchg
cmpsl
push
cltd
jnp
pop
or
movsl
repnz
or
pop
scas
fcoml
aam
inc
leave
decb
push
cmp
in
inc
mov
mov
cmp
stos
dec
int3
aaa
cltd
mov
push
cmpsb
shlb
cmp
cltd
loopne
adc
jbe
xor
fwait
call
jnp
cltd
add
mov
ljmp
mov
fcomps
bound
add
mov
or
insb
adc
pop
xchg
dec
test
cltd
sbb
push
cli
cltd
pop
negl
loope
xor
sbb
mov
cmpsl
or
adc
lahf
fwait
cld
push
jl
insl
mov
jle
cltd
popf
mov
inc
mov
aas
scas
cmpsl
jo
scas
push
stc
mov
pop
mov
out
sbb
jns
xlat
push
inc
xchg
push
aam
jnp
rolb
push
dec
inc
movsl
ret
mov
push
jns
aam
cmp
rorb
and
ret
in
call
test
iret
push
cmpsl
lds
xor
out
ljmp
sbb
lret
lret
dec
ljmp
jmp
mov
pop
dec
xchg
sub
inc
xchg
repz
mov
lods
add
push
cli
hlt
xchg
sub
cmp
leave
pusha
data16
dec
mov
and
sti
adc
push
adc
inc
arpl
mov
sub
popf
enter
inc
data16
shrl
mov
mov
bnd
adc
in
push
rcll
sbb
sbb
sub
push
in
jo
cli
imul
jl
or
cmp
jl
inc
dec
aam
test
shl
insb
sti
push
xor
or
push
gs
jne
icebp
test
or
lcall
mov
mov
lods
push
test
sti
xor
mov
shlb
js
mov
sbb
mov
std
insb
lcall
popf
mov
test
mov
push
cmpsl
pop
ja
jg
aam
call
mov
ljmp
mov
popa
imul
or
ljmp
ja
and
push
pop
jmp
jmp
mov
mov
stc
aaa
lods
sbb
xchg
test
mov
pop
rolb
cmpsl
cltd
icebp
push
movsl
cmp
outsb
xor
xor
insb
add
scas
adc
shll
xor
inc
popa
cmp
mov
stos
iret
cmpsb
adc
inc
mov
addr16
and
mov
mov
cmp
jg
lds
add
push
inc
sbb
shl
mov
mov
insb
stos
into
mov
lea
adc
ljmp
push
int
push
and
xor
jb
lret
aad
outsl
xchg
shrb
sub
aas
pcmpeqb
sub
fisubrl
pop
stc
jae
pop
repz
sbb
stos
mov
sbb
movsb
push
jge
sbb
sbb
or
js
repz
je
loop
sahf
mov
ss
movsb
fisttpl
test
fisubrl
inc
mov
pop
fldcw
fistl
jecxz
push
sbb
fstpt
push
fcoms
jne
mov
push
or
pop
es
adc
inc
or
or
int
popf
mov
sub
gs
push
sti
stc
push
incb
pop
aam
jo
ret
fld
ljmp
lret
adc
pop
cmp
inc
inc
cli
enter
jl
sbb
sub
pop
incb
es
xchg
sub
stc
ss
fwait
mov
cli
sbb
xor
xchg
xchg
fistpl
aaa
inc
lcall
sub
pop
aad
pop
sbb
mov
cmp
icebp
mov
insb
lds
stc
inc
jb
xlat
mov
push
xchg
mov
decb
int3
pushf
scas
ds
mov
loopne
sub
in
adc
xor
sahf
insb
int3
lahf
cmpb
fwait
dec
sahf
stc
cmp
stc
lds
mov
pop
jmp
ficompl
sbb
lock
cmp
test
and
outsl
dec
cmp
push
add
lret
push
scas
and
adc
jcxz
stc
sub
fsubl
inc
and
push
dec
xchg
xor
sahf
mov
add
inc
xor
cli
imul
push
popw
insb
mov
pop
clc
sub
mov
and
add
aas
or
femms
in
cmp
call
dec
and
stc
sub
outsl
jmp
test
das
pop
mul
sbb
xor
iret
testb
xor
cmp
xchg
into
insb
mov
fldenv
mov
cmp
sahf
jle
mov
cmp
fisubrl
sub
rcrb
sub
lcall
lret
imul
sahf
sbb
dec
mov
pop
mov
cmc
mov
push
jmp
mov
sbb
push
negb
dec
cltd
cmp
jns
lds
aas
cmc
cltd
test
outsl
fwait
scas
in
and
dec
ljmp
jl
ret
fsubrs
cltd
push
out
pop
mov
inc
jno
pop
jle,pn
movsb
cmp
mov
daa
in
rorl
call
add
fs
pop
roll
mov
ss
sbb
jle
cltd
out
stc
div
out
push
popa
mull
xchg
imul
sbb
lods
mov
sti
pop
adc
fistl
sbb
and
test
sub
mov
and
out
sub
jno
fwait
int
dec
les
inc
pop
addl
or
dec
popf
lcall
dec
push
fwait
xlat
fwait
lods
fisubrs
lock
xor
jl
cltd
insl
in
cmp
jae
sub
aas
ficoml
cmpsl
push
in
mov
pop
push
dec
cltd
and
loop
sbbl
and
cmp
cmp
jg
sbb
jns
fcomps
out
xchg
xlat
inc
out
push
xlat
sbb
outsb
dec
mov
jnp
jns
xchg
fidivrl
mov
dec
pop
lds
xchg
in
cltd
cmp
lret
repnz
xchg
popf
das
aam
pusha
loopne
inc
xor
mov
mov
pop
gs
decl
arpl
sbb
sub
sbb
xchg
fcomps
push
sub
ficoml
mov
divb
pushf
dec
sbb
pop
ljmp
mov
jmp
cltd
inc
ds
pop
mov
dec
mov
jmp
repz
orl
popf
sarb
inc
outsl
pop
lock
les
in
xchg
sbb
pop
shr
insb
mov
loopew
testb
mov
stos
stos
jnp
mov
mov
adc
xor
lret
push
xor
add
xor
scas
sbb
int3
sbb
sar
into
insb
stc
test
cmp
ret
or
fdivrs
xlat
dec
nop
gs
incb
dec
popf
jmp
stc
push
adc
test
jo
cmc
popl
daa
ja
test
lock
jne
push
daa
insb
scas
icebp
aad
lds
dec
sti
pop
sbb
ljmp
or
cli
jmp
scas
jbe
sbb
or
sbb
fistl
or
lret
rcrb
test
push
sbb
dec
mov
cltd
fnstsw
cmp
enter
cmpsl
test
dec
pop
xchg
push
outsb
das
mov
test
mov
popa
and
inc
stc
insb
mov
jge
lret
in
cli
je
mov
xacquire
data16
rclb
adc
icebp
pop
lret
in
out
test
jne
rolb
lret
push
scas
jp
sahf
pushf
fsubs
sub
adc
pop
push
sbbl
in
mov
jbe
mov
push
mov
mov
cltd
fcomp
daa
or
add
lcall
adc
jle
lds
mov
pop
lahf
mov
js
nop
xor
cmpsl
sub
jmp
movsb
xor
xor
jbe
in
insb
bound
sbb
xchg
outsl
push
jle
leave
pop
test
lea
xor
cmp
cmp
out
stos
xor
or
hlt
or
mov
filds
mov
push
push
into
dec
les
cmp
inc
sub
cmp
cld
fldcw
stos
or
jecxz
add
test
push
fwait
mov
push
cltd
or
lcall
mov
xchg
scas
mov
lds
test
xor
andl
lret
push
pop
lret
sub
ja
imul
gs
test
mov
aaa
push
mov
aad
adc
insb
popf
xor
jecxz
xor
mov
cmc
xor
push
rorl
add
jl
roll
fsts
pop
and
or
shll
sub
rcrl
jbe
rcl
cmp
adc
jmp
out
stc
xor
or
push
push
pop
insb
imul
aam
sub
sub
stos
push
adc
adc
fwait
jbe
jb
mov
cltd
cmp
clc
mov
test
aad
mov
sub
xor
movl
test
lea
pop
int
shrl
cltd
mov
ret
xchg
movsl
cmpsl
rclb
stos
xchg
loope
icebp
lcall
jnp
les
mov
call
mov
push
dec
popf
dec
cmp
dec
scas
sbb
inc
cltd
inc
jb
test
shll
cltd
sub
or
and
or
popf
pop
pop
push
cltd
push
xor
adc
fwait
push
lcall
jbe
xchg
mov
cltd
jnp
xchg
xchg
icebp
cmp
fwait
push
lret
shrb
mov
lds
test
fs
ret
dec
or
stos
insb
inc
mov
inc
scas
aas
movl
push
mov
adc
repz
pop
mov
ljmp
int
adc
and
add
insl
sbb
rclb
xchg
mov
inc
mov
stc
mov
mov
inc
and
insl
pop
add
lcall
cltd
cmpsl
xchg
scas
or
cltd
fadd
test
test
inc
in
jle
inc
fdivrl
cltd
in
sub
mov
mov
cltd
push
call
pop
sub
jl
pop
sbb
push
bound
leave
and
call
xlat
scas
in
shll
or
in
leave
mov
push
fidivl
and
inc
lcall
mov
add
jb
push
mov
mov
pop
pop
cs
gs
cltd
sub
dec
mov
roll
stc
lcall
mov
outsb
ficompl
xor
sub
fwait
pusha
incl
and
xor
jbe
xchg
in
rol
inc
inc
cltd
pop
cwtl
adc
mov
ds
lahf
lock
negl
fcmovnb
fistps
inc
xchg
arpl
mov
xchg
pop
daa
pusha
scas
dec
cltd
mov
jecxz
pop
bound
xor
push
pop
loop
or
jg
cltd
mov
push
orl
testb
cmc
mov
inc
fisubrl
sti
xchg
in
fisubl
cltd
popa
cmp
mov
sub
addl
lods
push
push
sbb
cltd
ror
imul
faddp
cltd
jl
sbb
mov
into
lcall
mov
jb
call
sbb
or
cltd
lret
add
scas
xlat
stos
jae
sbb
pop
lahf
pusha
adc
sub
xchg
jg
outsb
fs
and
pop
mov
test
enter
rcl
movsl
or
xor
cltd
mov
ficoml
out
lea
std
roll
add
ljmp
inc
jg
pop
je
rcrb
cmpsb
xchg
adc
cli
dec
cmp
cltd
stc
pop
cwtl
sbb
shlb
cmpb
adc
mov
js
movsb
pop
xlat
dec
negb
ja
movsl
inc
cltd
and
mov
mov
cltd
fsqrt
cmpsl
push
jp
cltd
or
and
outsb
lahf
push
ljmp
lret
adc
lods
icebp
jecxz
cltd
xor
xlat
ret
jnp
mov
movsb
mov
inc
ficomps
lret
in
and
enter
iret
or
sbb
sbb
dec
mov
xor
inc
jae
cmp
inc
xchg
jnp
repnz
add
jmp
add
push
or
push
jo
outsb
cltd
inc
adc
mov
cltd
mov
cmc
stos
test
mov
fwait
mov
push
lea
call
mov
push
lock
lds
js
dec
ss
jecxz
sahf
sbb
fnstenv
inc
ss
pop
out
ja
or
inc
or
cmpsl
rcr
data16
jge
lds
pop
ficoms
pop
cltd
or
cmc
testb
pop
or
sbb
jmp
mov
loop
loop
xor
cltd
mov
or
adc
call
and
pop
ss
fstpl
sbb
inc
dec
iret
mov
mov
xchg
pop
icebp
shr
data16
leave
pop
mov
sub
push
cltd
ficompl
push
aam
adc
xchg
push
jmp
lret
mov
inc
loope
je
pop
mov
mov
cltd
movsl
daa
in
sarl
lret
jmp
bound
mov
ss
mov
and
mov
sbb
lds
into
in
inc
lea
lcall
or
stos
cltd
fs
cmpsb
cltd
fcompl
sub
jmp
mov
cmp
and
xor
cltd
andb
fstps
add
in
adc
mov
cltd
fstps
sub
cltd
mov
adc
fwait
dec
stos
scas
pusha
imul
mov
lahf
test
cld
jno
mov
lcall
jp
cltd
xor
mov
fwait
lahf
icebp
stos
push
dec
test
inc
fbstp
pop
mov
adc
pop
cwtl
pop
cmpl
push
lcall
sub
pop
cwtl
cmp
sub
movsb
cltd
mov
pop
cltd
notl
notb
jb
mov
mov
lcall
cltd
xor
sub
cwtd
stc
out
mov
into
test
cltd
cwtl
mov
adc
add
popf
aam
dec
in
rcrb
pusha
es
xchg
cltd
cwtl
sbb
pop
cltd
sahf
vcvtss2sd
mov
loopne
adc
ror
push
lret
shlb
flds
popf
bound
je
sub
out
mov
les
pop
fwait
mov
scas
jnp
add
push
lods
data16
mov
push
jg
adc
push
ret
ficoml
lea
cltd
outsb
cs
imul
pop
loopne
jecxz
cld
cmpsl
rcrl
nop
out
sub
lret
sti
mov
xchg
add
cmp
cltd
daa
cmp
out
jmp
rorl
aam
int3
push
push
cltd
pop
add
mov
lods
adc
push
cmpsl
cwtl
pop
inc
cmp
ret
pop
xor
push
cli
xchg
pop
lea
daa
cwtl
cmpsb
push
jne
lcall
xor
pop
cltd
out
sbb
andl
inc
cltd
sub
mov
lods
popf
dec
mov
adc
mov
dec
stos
cltd
xor
repnz
and
ret
adc
push
jae
orl
cwtl
clc
mov
out
fisubrs
sub
jg
call
std
repnz
fstl
mov
xor
sbb
or
rclb
jp
pushf
aas
jbe
jl
test
xlat
sbb
cmp
es
aaa
movsl
mov
xor
imul
xchg
mov
pop
iret
bound
adc
xchg
aaa
pop
leave
sbb
xor
call
mov
lcall
test
es
cltd
inc
cs
pop
mov
rol
jo
cli
pop
aad
adc
sbb
and
cmc
mov
fs
stos
fisubrs
cltd
cwtl
pushf
push
cmp
or
popf
dec
lea
lcall
addr16
jp
cmp
jge
pop
lcall
mov
das
mov
fcomp
sub
mov
xor
dec
cltd
inc
inc
mov
cltd
sbb
pop
mov
test
xchg
cltd
pop
mov
gs
int3
lret
out
fwait
push
dec
xchg
cmp
pop
stc
shrb
mov
or
lret
or
sub
fnstcw
cmp
cmp
stc
sbb
lret
shr
cltd
pushl
or
daa
sub
push
inc
int3
lahf
jl
in
fisttpl
ret
pop
cltd
sbb
adc
sub
aaa
inc
popa
pop
testl
fildl
sub
sbb
cltd
ljmp
repnz
push
inc
imul
cltd
addr16
mov
add
pop
mov
cs
cmp
sar
fwait
jge
fildll
jae
and
mov
mov
std
jecxz
andl
rorl
xor
cltd
xchg
mov
and
cltd
xlat
jno
arpl
inc
push
xchg
jle
dec
repz
jno
insb
cli
fcoms
jecxz
add
sbb
lods
cmp
mov
or
mov
pop
out
pop
xchg
and
pop
popf
subl
and
xchg
arpl
es
push
out
ret
icebp
shlb
cltd
fcoms
hlt
lcall
lahf
xchg
dec
or
jge
and
clc
sub
imul
mov
and
push
mov
mul
ret
movaps
into
rcrb
lret
shl
pusha
pop
clc
mov
stos
lcall
jle
adc
xchg
rcrb
cmpsb
insb
push
push
fbld
adc
aaa
xor
pop
pop
int
push
aas
push
push
das
std
das
pop
push
test
fsubr
sbb
ljmp
pop
repnz
out
and
jo
jnp
subb
cli
adc
jb,pt
push
cltd
test
pop
jae
les
cmp
in
xlat
xorb
pop
outsb
mov
int
sbb
dec
stos
push
lods
mov
xor
loop
cltd
mov
mov
cltd
and
roll
mov
fmuls
mov
sbb
outsl
jne
subl
cmpsl
shlb
xor
mov
lahf
jecxz
push
mov
lahf
dec
cmpb
cmp
dec
xlat
scas
or
xchg
lcall
ror
shll
int3
pop
dec
xor
cmpsl
push
push
andl
data16
dec
div
cmc
in
fxch
add
cltd
in
out
into
xchg
dec
pop
jbe
mov
xor
mov
add
and
mov
mov
and
cltd
fucomip
xchg
mov
adc
inc
inc
dec
fldt
cmpsb
loope
aaa
jns
pushf
mov
pop
dec
push
insl
add
out
mov
mov
and
cltd
xor
jo
cmpsl
insb
out
cltd
adc
inc
stos
or
dec
mov
jp
cltd
cli
mov
popa
push
rep
cli
inc
cltd
rcl
mov
push
sbb
cltd
outsl
gs
les
cmp
aad
mov
insl
fs
xchg
andb
lahf
mov
mov
sbb
popaw
fwait
sbb
lods
push
mov
enter
sbb
test
push
mull
sarl
push
nop
aam
cmc
push
lcall
mov
enter
testl
or
call
cwtl
shrl
mov
mov
pop
mov
popf
push
sbb
test
daa
stc
imul
imull
mov
sbb
insb
stos
jno
cmp
out
es
mov
insb
pop
out
or
mov
shlb
inc
stos
mov
jge
jnp
adc
mov
movsb
push
or
leave
push
inc
mov
ror
mov
adc
push
ret
aas
push
das
sbb
sbb
in
mov
mov
jnp
insb
jne
fimuls
push
cmp
inc
shl
push
push
sbb
push
in
mov
out
scas
and
jecxz
loope
pop
push
push
rcrb
push
ficoms
sbbb
xor
cmc
dec
jmp
jmp
adc
lods
cltd
test
ss
int
cwtl
loopne
and
imul
inc
movsl
add
xor
test
cmp
les
lods
pop
leave
cmpsb
fincstp
in
rol
sahf
loop
pop
mov
mov
xor
adc
rolb
subl
in
jp
mov
mov
sub
pop
push
ds
jp
sbb
and
xadd
push
mov
fisubrl
or
push
stos
mov
scas
insb
data16
mov
lcall
stos
mov
test
into
cli
imul
mov
and
ja
pop
test
sub
stos
sub
mov
mov
lods
movsl
mov
sti
or
lret
and
ds
nop
push
lds
ror
pushf
test
mov
test
mov
rcrb
vrsqrtps
push
dec
sbb
jns
xor
pop
xor
mov
adc
and
dec
push
mov
mov
fisttpl
fistpll
jecxz
pop
mov
fsts
xchg
mov
mov
sarb
push
test
sahf
lcall
mov
out
or
test
push
jns
xor
lock
inc
mov
leave
push
jne
imul
sahf
push
xor
inc
sahf
test
sarb
mov
mov
jns
xchg
mov
ret
mov
imul
xchg
inc
fcmovbe
pop
push
xlat
cwtl
inc
fucomip
sbb
mov
cli
mov
jecxz
pop
hlt
leave
push
insb
mov
push
lock
shlb
test
cltd
pushf
test
jp
push
xor
popf
push
dec
js
jl
push
cld
stos
xor
cmp
lcall
pop
and
lea
in
aas
mov
push
popf
mov
push
fs
movsl
and
mov
push
mov
cmpsb
cld
mov
stos
mov
je
adc
aas
pushf
scas
out
dec
fstpl
jle
or
scas
fsin
jecxz
pushf
js
int
hlt
insb
jl
das
sbb
outsb
in
or
cmp
xchg
les
popa
stos
fiaddl
mov
jo
rol
cmp
push
pop
lock
mov
jecxz
imul
mov
jae
imul
add
iret
insb
xlat
pop
mov
sti
sbb
mov
stos
inc
mov
inc
adc
lods
push
loope
and
pop
pop
mov
outsl
add
mov
and
pop
scas
cmp
fsubrl
iret
xor
push
xor
sbbl
sub
xchg
push
or
xor
xchg
aaa
or
jl
in
mov
sbb
pusha
lahf
insb
je
stos
inc
push
dec
inc
pushf
mov
dec
mov
lcall
lods
inc
in
sbb
imul
sub
push
pop
xor
mov
icebp
stos
les
notb
xchg
sub
aaa
cmpsl
cltd
fs
or
movsl
dec
sbb
cltd
dec
add
pop
cmpsb
sub
or
lcall
gs
lds
add
dec
push
ret
out
jge
cltd
das
inc
push
adc
xlat
testl
cltd
dec
lods
push
nop
mov
lds
and
adc
xchg
in
add
cltd
or
aam
push
call
xchg
pop
or
cltd
or
lods
scas
cwtl
lahf
inc
jne
mov
lret
mov
iret
repnz
adc
cmp
out
cltd
cwtl
mov
hlt
push
cltd
adc
mov
jp
cli
insb
popf
add
arpl
lahf
movsb
subb
je
cltd
mov
in
adc
in
into
jecxz
imul
addr16
hlt
mov
mov
and
nop
pop
je
adc
sti
ja
or
pop
push
cltd
adc
rcrb
cltd
sub
xchg
cltd
aad
pop
xlat
and
insl
push
cltd
pop
arpl
dec
jne
cltd
cmc
int3
mov
jl
dec
out
adcb
jns
insb
mov
xor
stos
cltd
sti
pusha
fcom
sbb
pop
sbb
jg
test
hlt
imul
rcrb
push
xadd
fsubp
outsb
out
aaa
xor
lahf
sbb
iret
fs
insl
lahf
cmp
into
fiaddl
fsubs
lahf
lcall
xorb
lock
ret
ficoms
pop
xor
lods
cmp
push
pop
fnstcw
shrl
sarb
cltd
pop
pop
fistpl
cltd
inc
add
orl
cmp
adc
mov
jp
test
and
cltd
inc
repz
xchg
pop
loop
mov
nop
pop
fs
add
adc
sbb
int
daa
popf
fwait
adc
in
xor
in
in
gs
xchg
cmp
stos
mov
aaa
aad
shrl
xor
loop
xchg
mov
add
insb
mov
cltd
push
ss
xchg
std
rclb
in
xchg
mov
mov
popf
insb
cmp
mov
sub
imul
pop
jo
cltd
push
inc
fsubl
and
in
addr16
xchg
nop
push
pop
ficomps
adc
mov
jbe
jnp
pop
adc
xorb
enter
sub
xchg
bound
lock
loope
mov
mov
jns
dec
nop
sub
jae
cmc
xor
or
clts
nop
cltd
xchg
sbb
cmp
shr
cltd
mov
dec
repnz
pop
push
rcrb
add
cwtl
push
lods
cli
dec
enter
decl
mov
shl
cmc
out
pop
addb
cltd
push
dec
pop
sbb
sub
mov
pop
mov
sbb
mov
xchg
or
cltd
leave
mov
xchg
cmpsb
cltd
and
test
mov
push
ja
pop
lods
push
outsl
in
jecxz
sub
test
cltd
ds
arpl
sti
adc
inc
jge
add
adc
cltd
fldt
adc
js
imul
xor
mov
fwait
sbb
mov
mov
adc
cltd
sbb
das
add
jo
ljmp
sahf
adc
adc
inc
sbb
cltd
ret
push
outsb
cmpsb
into
or
test
cltd
sub
inc
subl
or
icebp
push
loop
enter
jae
pop
push
call
fwait
movsb
dec
rcll
xchg
lret
stc
or
ret
sar
adc
push
dec
repz
mov
lds
cltd
imul
push
inc
mov
daa
pop
dec
bound
sub
loope
and
repz
lret
adc
mov
in
xlat
out
mov
jns
sti
mov
pushf
cltd
dec
jo
lods
imul
lcall
push
in
and
mov
mov
lcall
cmpsl
popf
inc
lret
sub
push
pushf
lock
es
out
test
lea
cmpsl
jne
push
roll
sub
iret
lcall
mov
loopne
or
js
cmp
cmc
pop
outsl
mov
jo
jle
into
xor
mov
adcl
lret
shl
inc
sbb
xchg
xchg
mov
mov
jmp
push
or
xchg
jb
cltd
xchg
mov
lcall
jg
mov
sarb
cltd
stc
mov
js
cltd
or
data16
cltd
fldlg2
sbb
mov
repz
mov
mov
xchg
mov
ror
in
std
mov
xchg
cld
adc
pop
shlb
sbb
mov
and
cs
xchg
or
imull
jg
lcall
mov
xor
lret
shll
sbb
das
aad
pop
jbe
lret
mov
movd
fstps
or
mov
cltd
lret
scas
fcompl
xor
sbb
popf
mov
cmc
mov
pop
stc
jns
xchg
jmp
push
fistl
ret
ficoml
push
adc
and
cltd
outsb
or
jle
cltd
dec
jecxz
loop
lea
lcall
inc
cltd
es
scas
sub
mov
cltd
mov
mov
cltd
lea
dec
jne
addr16
cli
lret
into
repnz
test
pushf
dec
cltd
xchg
mov
outsl
dec
aad
test
cli
xor
cmc
sub
jno
shrl
mov
hlt
pop
push
mov
xchg
mov
mov
addr16
mov
pop
mov
fwait
js
cltd
pushf
inc
mov
inc
je
mov
in
sub
outsl
iret
jno
cltd
fs
mov
cmpsl
jne
cltd
out
mov
pop
repnz
mov
pop
call
ret
mov
hlt
dec
rorl
cltd
xor
popf
xchg
xor
and
mov
pop
jmp
cltd
dec
loope
and
cltd
stos
xchg
lods
dec
lret
in
cltd
arpl
vcvttss2si
rorl
adc
loope
push
mov
mov
mov
fwait
add
lods
jmp
lret
add
loope
cltd
rorl
cli
repz
jp
out
lcall
xor
or
inc
sbb
cltd
pop
adc
push
push
cmp
fldt
insl
lahf
aad
mov
sarl
jge
rcll
es
lcall
test
repnz
or
mov
add
popf
pop
out
test
cltd
sbb
or
push
stos
mov
cmp
cmp
or
scas
nop
cs
test
pop
cltd
cmp
ret
shll
fucom
sahf
jle
cmp
inc
sbb
jb
jo
jecxz
lret
xchg
fiaddl
mov
add
cltd
es
out
shlb
or
mov
ror
push
pop
cltd
lcall
push
adc
cmp
xchg
push
mov
pop
xchg
test
repz
fnsave
mov
shll
cli
lods
outsb
mov
push
cwtl
imulb
mov
jge
dec
sub
xor
sahf
xchg
sub
sbb
mov
std
sbb
cli
jbe
movsl
leave
xchg
out
and
xchg
cmp
int3
stos
cmp
sbb
fldcw
mov
sbb
jae
lds
sahf
cmp
push
jns
push
inc
scas
xchg
leave
movsb
cmp
mov
fmuls
mov
push
push
mov
push
icebp
imul
adc
test
fdivrs
jle
test
lock
cwtl
shlb
stos
add
gs
lahf
mov
mov
push
icebp
in
rorl
sbb
mov
inc
lods
pop
jo
push
insb
push
push
rclb
cmp
inc
mov
mov
and
test
pop
out
xchg
je
jle
and
xchg
popf
mov
mov
outsl
mov
sub
outsb
fnstcw
add
lcall
mov
sarl
aad
xchg
addr16
xchg
out
and
jecxz
stos
sbbb
leave
dec
push
push
xchg
xchg
test
int
out
mov
xchg
and
or
rolb
sbb
or
or
inc
sbb
jmp
imul
mov
xchg
ficompl
outsl
mov
lcall
inc
dec
test
xlat
push
jns
cmp
mov
sub
shrb
aas
out
in
inc
das
xchg
sub
fwait
or
lods
xor
mov
and
dec
mov
scas
pop
into
cmp
mov
out
xor
fstl
inc
or
int3
hlt
push
mov
lahf
lds
add
sbb
frstor
jp
push
inc
and
xchg
fmuls
jecxz
inc
fnstenv
sbb
jecxz
lea
imul
add
jo
mov
mov
mov
sbb
leave
cli
icebp
cltd
stos
xchg
push
pop
sub
mov
xor
in
jl
cltd
push
popa
sarb
lods
mov
add
jmp
add
cmp
pushf
cmp
js
cmp
cltd
int3
mov
xchg
or
scas
sbb
sti
call
pushf
fcomps
cltd
or
xchg
outsl
dec
loopne
cltd
and
push
xor
es
hlt
icebp
popa
jmp
lds
push
out
dec
cmpsl
leave
xchg
jb
sahf
or
shl
fdivr
cltd
adc
cmp
loop
cltd
mov
inc
ss
lds
or
dec
cltd
add
push
ficomps
mov
loop
mov
inc
lret
cltd
rcll
sub
dec
loop
test
stos
rolb
cwtd
shll
cmp
sub
push
jecxz
adc
cmp
mov
xchg
xchg
cltd
pop
frstpm(287
mov
xchg
pop
jb
cltd
popf
out
xor
in
sub
das
cltd
in
pop
imul
inc
mov
nop
leave
sub
sahf
jle
or
lcall
mov
dec
adc
dec
into
jecxz
inc
enter
mov
or
sub
push
mov
jmp
or
cmp
pop
pop
roll
xchg
hlt
test
dec
mov
pusha
fidivs
imul
rclb
imul
mov
cwtl
ss
mov
xchg
loopne
test
jbe
mov
cmp
push
mov
mov
call
repnz
jl
dec
jno
aam
mov
insb
repnz
dec
cmp
sbbl
shl
cmp
or
stos
fwait
and
outsb
mov
mov
jecxz
mov
scas
push
inc
lds
xlat
test
ret
lods
popa
loop
adc
gs
lahf
push
lea
movsb
fstpt
adc
fisubrl
mov
clc
mov
push
fwait
jecxz
push
or
inc
imul
xchg
in
and
pop
mov
inc
jne
sbb
mov
cmp
cmp
cltd
pop
imul
dec
or
jmp
mov
scas
scas
aas
mov
aad
add
mov
lods
adcl
inc
in
fucomi
sbb
push
out
add
mov
insb
es
mov
xor
push
nop
int
cmp
clc
imul
xor
sub
push
jns
xchg
pop
cmp
mov
pop
xor
mov
cmp
mulb
aaa
xor
xor
movl
lret
jb
jmp
fwait
arpl
add
sbb
lea
jmp
jle
push
lret
xchg
popa
cld
cwtl
and
mov
sbb
pushf
js
mov
test
mov
add
add
insb
add
cli
push
inc
dec
dec
popf
xchg
sbb
and
cltd
add
aam
push
adc
das
rolb
mov
shll
ds
jb
add
shrb
sbbb
mov
outsl
outsb
sub
jl
mov
lahf
decl
gs
mov
int
jecxz
adc
jo
ljmp
push
fsubs
lret
ja
or
icebp
fwait
test
in
lcall
arpl
aam
dec
add
mov
ds
arpl
pop
aas
test
into
sahf
mov
in
stos
cmp
dec
leave
add
adc
pop
sub
aaa
mov
mov
cmp
sbb
cwtl
and
sti
jnp
in
in
mulb
pusha
inc
rolb
inc
pop
inc
loope
shll
sbb
lret
and
cmpb
cmp
scas
loop
je
call
pop
sarb
clc
insb
jne
jmp
mov
fcompl
repnz
testl
insb
cmp
sbb
sub
adc
lea
repnz
addr16
pop
rolb
pop
push
fdiv
icebp
push
mov
sub
or
daa
int
xchg
inc
popl
pop
scas
insb
or
jo
and
cltd
and
aam
fwait
stc
xor
shlb
test
or
lcall
inc
cmp
pop
adc
mov
or
cmc
call
jp
mov
out
jne
sub
jmp
idivb
and
cmpsl
pop
outsl
repnz
xor
dec
jbe
mov
mov
xorl
cltd
jmp
incb
inc
insl
ret
inc
fwait
sbb
dec
inc
add
aam
add
iret
pop
mov
cltd
mov
addr16
insl
or
cltd
mov
pop
mov
sbb
scas
arpl
add
js
enter
dec
pop
cmp
cltd
andl
inc
stos
mov
push
lcall
cltd
mov
outsl
mov
cltd
jb
adc
add
jge
mov
mov
lock
cmpsl
fs
pop
sub
cltd
mov
adc
cmp
js
ljmp
icebp
jmp
xchg
lcall
xchg
mov
lret
jnp
mov
mov
jp
ret
cltd
adc
jl
mov
cltd
xchg
addb
or
cltd
jbe
outsl
pop
ljmp
jnp
out
add
das
mov
jbe
test
bound
mov
les
mov
lcall
mov
mov
sarb
cmp
jge
jmp
lret
dec
ds
mov
std
push
cmpsl
jle
inc
shrb
pushf
and
push
stos
adc
in
mov
insb
sbb
mov
loopne
loopne
sub
bound
jno
fstps
call
pushf
pop
and
and
fcom
mov
aaa
fsubs
aaa
mov
jb
jne
mov
aam
repz
cmp
int
pop
sbb
imul
out
std
cmc
push
dec
or
jo
mov
stc
inc
sbb
mov
dec
repnz
mov
xor
lcall
in
inc
mov
fsubp
mov
adc
rolb
mov
hlt
push
rolb
pop
inc
xchg
scas
mov
inc
sbb
outsb
adc
sbb
xchg
push
xchg
push
push
rcrl
mov
push
js
sbb
ja
test
pop
out
fwait
nop
mov
pusha
aaa
dec
stos
cld
int3
jecxz
pop
mov
mov
call
lods
add
clc
sbb
sbb
inc
xchg
stos
jmp
insb
ret
cli
or
cmp
out
inc
test
decl
sbb
xchg
cld
mov
cmpsl
mov
ret
insb
stos
or
cmp
mov
mov
iret
push
push
cmp
cmp
or
mov
and
push
inc
xor
loop
repz
ds
lahf
mov
idivb
mov
repz
lcall
imull
mov
mov
jg
imul
mov
sahf
adc
fs
imul
insb
out
pop
pop
mov
mov
repz
fsub
mov
dec
ret
push
and
sbb
shrl
sub
ds
mov
aaa
imul
test
sahf
lods
cmp
sub
rcll
cwtl
dec
pop
inc
stos
mov
and
imul
scas
add
clc
lock
imul
mov
jle
cltd
inc
xchg
cld
mov
mov
cmp
inc
jae
cmpsl
pushf
cli
dec
mov
cltd
ficomps
push
out
cltd
add
pop
xor
pop
fidivrs
hlt
cmpsl
push
scas
scas
bound
cmp
out
repnz
fwait
xchg
xchg
outsb
gs
mov
cltd
jno
je
push
shll
mov
pop
jecxz
test
rorb
mov
jp
xlat
pop
mov
sbb
jb
push
cltd
xor
outsl
mov
movsb
dec
lahf
cltd
mov
cmovne
pop
jle
or
aad
lahf
in
scas
outsb
cmp
or
arpl
jns
lret
cltd
xor
inc
cltd
pushw
fsubrl
cmp
cli
cltd
push
sub
jg
scas
add
cmpsl
xchg
sbb
rcl
sbbb
sbb
stc
cltd
lret
hlt
ds
inc
xor
rorb
pusha
push
sahf
dec
xlat
lock
mov
push
jbe
fcomip
imul
sbb
xchg
shll
push
pushf
mov
add
inc
fcompl
movsb
cmp
rcrl
pop
sbb
cltd
jns
cwtl
jle
subb
cltd
stc
sub
or
xchg
cltd
dec
cmp
mov
dec
in
xchg
cltd
int
inc
or
dec
addr16
cltd
daa
mov
pop
and
leave
adc
lcall
push
out
lea
xchg
pop
popf
cmp
inc
movsl
bound
cmpsb
mov
jae
and
loope
adc
jle
into
dec
lcall
jns
loopne
leave
cmp
pop
pop
push
clc
int
arpl
pop
xchg
ds
dec
out
cmp
stos
stos
dec
mov
push
adc
std
lods
int
loope
dec
fwait
mov
fcmovbe
sub
push
pop
ja
cltd
sarb
cwtl
outsl
cmpsb
mov
cltd
xchg
mov
xchg
sub
lds
mov
cltd
cmp
clc
xchg
fimuls
stc
push
jbe
imul
sbb
daa
arpl
jle
lea
in
mov
sbb
mov
pop
add
cltd
lcall
cltd
sahf
mov
lahf
nop
hlt
mov
lds
or
dec
rol
fdivr
sbb
clc
cltd
or
dec
int
push
cltd
dec
cmpsb
scas
and
test
xchg
cltd
add
aas
je
dec
cld
lahf
cltd
mov
out
in
adcb
es
jbe
leave
mov
bound
cltd
iret
fisttpll
mov
jbe
icebp
cmp
mov
xor
sub
pop
jnp
sbb
dec
mov
popa
cmp
mov
pop
push
lds
mov
push
xchg
fs
mov
push
cmpsb
xchg
subl
loope
cli
inc
scas
dec
pushf
pop
les
cltd
ss
stos
call
cltd
leave
pop
insb
loop
mov
loope
out
arpl
mov
cltd
outsb
rclb
jmp
push
out
in
lcall
mulb
sub
mov
mov
sbb
jge
fwait
loop
xor
inc
aaa
scas
insl
inc
jle
dec
gs
mov
in
mov
aam
inc
jae
scas
and
out
cltd
mov
cltd
jo
pop
xchg
aaa
shlb
jmp
sbb
cltd
dec
sti
push
je
add
cmp
xchg
cltd
es
push
movsl
rolb
out
iret
int3
jne
jno
cltd
mov
rol
idivb
xor
sub
shlb
fcmovu
fwait
sti
aaa
mov
xchg
ss
fnstcw
cltd
xchg
movsl
xchg
and
xchg
scas
cltd
mov
sub
cltd
mov
or
mov
imul
arpl
ja
fidivl
fdivrl
mov
pop
popa
std
fwait
mov
pop
dec
push
cltd
es
out
arpl
or
jge
insl
cltd
push
popf
ss
jl
add
cltd
mov
sub
cltd
out
adc
repz
lock
jmp
add
cli
js
aam
sbb
add
imul
daa
loop
mov
shld
mov
test
jg
mov
dec
lcall
xchg
cltd
mov
pop
xor
push
xor
inc
dec
arpl
adc
iret
inc
cltd
mov
ret
fwait
jo
cs
push
pop
jns
xor
in
ret
cmp
inc
std
popf
je
cltd
inc
fwait
jmp
xchg
jl
cld
cltd
out
adc
xchg
fdivrs
and
cmc
cltd
addl
daa
dec
cltd
mov
pop
mov
cmpsl
mov
sbb
popf
push
lcall
mov
imul
shll
dec
xor
inc
cltd
inc
faddl
decl
and
cmp
dec
das
sbb
stc
cltd
js
mov
cmp
dec
loop
jno
xchg
sti
pop
fwait
push
adcl
cltd
div
mov
sbb
repnz
mov
cltd
mov
cmpsl
jle
fwait
sbb
in
jne
mov
mov
mov
int
jmp
in
pop
adc
cmp
arpl
sub
jp
je
or
ds
js
fwait
xchg
arpl
cmc
or
sub
rcll
adc
push
gs
lret
sub
push
aaa
cmp
xchg
mov
push
sub
pop
mov
fisubrs
gs
movsl
fstpl
push
adc
push
dec
pusha
pop
and
inc
mov
sbb
fs
idivb
lds
or
std
out
jecxz
adc
mov
cmp
cltd
test
in
cltd
mov
dec
push
jl
int
aam
stos
int
hlt
adc
mov
cltd
faddl
push
or
sbb
loopne
sbb
es
xchg
add
push
pushf
ja
push
jne
inc
out
or
cltd
es
mov
cltd
mov
pushf
add
cltd
sub
mov
mov
movsb
lcall
lcall
es
mov
cltd
mov
sub
popf
sets
pop
push
inc
out
aam
cltd
sub
sbb
fbld
sub
xchg
jb
lock
lahf
mov
push
gs
cltd
jecxz
sbb
pop
mov
cltd
jmp
sbb
fsubrl
xchg
shrl
add
jae
in
js
nop
sbb
inc
or
push
add
clc
cltd
call
cwtl
xor
loopne
cmpsl
addr16
or
xchg
cltd
out
dec
push
sbb
je
mov
shll
incl
lcall
xor
lahf
cmp
ds
mov
cmc
adc
inc
sbb
xchg
push
cmpsb
cmpsl
mov
fcmovb
and
aam
pop
add
in
scas
mov
rcll
inc
fldenv
cltd
dec
sub
xchg
or
cmp
insl
adc
sbb
mov
fimuls
sbb
bound
int
cmpsb
insl
mov
aas
mov
cltd
mov
or
push
cltd
add
test
loope
repz
jp,pn
add
mov
nop
push
or
adc
pop
xchg
sbbl
rolb
fwait
adc
in
push
pop
push
jp
jo
fcomps
inc
fmulp
clc
cltd
out
loop
mov
mov
jg
in
jne
negl
mov
adc
adc
fwait
sbbl
jns
ljmp
ret
mov
push
lcall
mov
cwtl
mov
jns
mov
or
push
push
pop
cltd
imul
jae
and
fxch
mov
jecxz
lock
dec
push
add
push
lcall
divl
rcrl
jp
or
jae
xchg
es
sub
movsb
push
pop
cltd
sub
aam
ss
lret
cwtl
mov
sbb
and
mov
dec
sahf
insl
cltd
xor
cltd
or
out
xor
mov
cltd
mov
int3
roll
cmp
imul
mov
push
xchg
sti
cltd
leave
cmp
mov
cltd
xlat
lahf
jbe
inc
xchg
rcrb
sub
dec
jp
mov
push
inc
stos
xor
sti
fldl
mov
mov
rcr
cltd
mov
xchg
addr16
iret
lret
fnstcw
mov
mov
sbb
cmp
cmpsl
shl
adcb
jns
imul
cwtd
aad
sub
cltd
in
mov
popf
rorb
push
mov
and
pusha
dec
cltd
pop
rorb
fnsave
mov
imul
inc
scas
and
inc
lea
aas
inc
push
incb
punpcklbw
xlat
pop
add
cltd
sbb
adc
jmp
daa
jecxz
call
or
andb
test
test
sbb
mov
shld
lret
xchg
test
cli
and
sub
or
mov
mov
mov
out
and
mov
xchg
inc
mov
les
out
jl
adc
aad
mov
push
imul
jl
mov
outsb
imul
mov
push
mov
roll
or
sbb
leave
lods
mov
into
insb
sbb
jle
mov
dec
lahf
and
push
cmc
popf
leave
movsb
xchg
push
mov
sti
xor
and
mov
icebp
insb
or
jp
repz
dec
mov
scas
int3
popa
repnz
mov
lods
xchg
push
mov
mov
scas
xor
push
jb
mov
gs
insb
pop
jle
or
xlat
jg
xchg
imul
lret
ss
add
xorl
mov
mov
mov
pop
pushf
jle
xlat
jne
insb
dec
aam
cmp
pop
shl
stos
mov
cmpsb
pop
jb
data16
fwait
out
ja
test
mov
add
das
popa
add
push
mov
mov
pop
cli
pop
cltd
sub
aaa
inc
jne
ftst
cltd
xchg
into
add
js
push
cltd
xor
inc
sbb
jo
xor
outsl
cmp
sahf
ja
out
lcall
outsb
pop
jle
fwait
in
fisubrl
movsb
pop
cltd
dec
adcb
mov
popa
cltd
and
mov
stos
dec
das
pop
fs
jo
andl
xor
aad
aaa
or
sbb
jg
mov
int3
fldt
rorl
mov
cltd
cmpps
jbe
mov
xchg
testl
or
xchg
ret
out
pusha
movsl
cmp
jo
dec
scas
mov
mov
sub
rcrb
outsb
mov
cltd
mov
call
int3
lahf
inc
out
test
xor
movsl
inc
je
mov
jl
aad
cmp
dec
outsl
fistps
fstl
test
lret
adc
cmp
pop
cmpsl
sub
sahf
fildll
mov
add
mov
test
inc
lret
xchg
mov
xchg
sub
xlat
icebp
test
pop
jo
mov
mov
or
and
sub
and
stc
ljmp
and
push
pop
jo
hlt
lcall
cmpsl
call
jp
push
lods
test
pop
or
dec
add
fidivrl
mov
shll
cwtl
je
jp
loop
insb
dec
test
lods
out
out
insl
xchg
stc
cltd
repnz
clc
xchg
fdivrl
stos
imul
test
roll
jb
xchg
dec
or
pop
negb
fwait
push
test
xor
jp
and
popa
jb
out
pop
cmp
out
lock
add
iret
mov
lea
fcmovnu
fstpt
jmp
outsl
ds
sbb
push
pop
pop
xlat
mov
dec
pop
mov
mov
aas
mov
add
fs
push
int3
aaa
jl
xor
insb
jmp
mov
push
or
dec
adc
cltd
push
shll
mov
shr
push
es
icebp
imul
cwtl
ja
popa
pop
push
jb
inc
mov
movsl
test
in
dec
rcr
rclb
shrb
jae
push
inc
sbb
add
pop
call
data16
cwtl
sbb
cmpsl
test
addb
out
add
sub
inc
push
les
nop
jnp
adc
lahf
cmp
xchg
clc
pop
movsl
cmp
jae
mov
shll
cli
mov
push
insb
add
or
pop
sub
jl
movsl
sub
and
idiv
push
stc
sbb
iret
popf
cmp
push
pop
cwtl
mov
mov
shrl
fists
mov
dec
shlb
notl
stos
push
es
jbe
jecxz
dec
adc
pop
roll
imul
pushf
fisubl
in
shrl
std
insb
testl
imul
jnp
lods
jbe
or
pop
movsl
insb
dec
xchg
fcmovbe
icebp
dec
mov
add
sbb
stc
mov
push
stos
and
lea
test
mov
out
cwtl
sbb
shrb
lock
xchg
dec
add
jl
xor
sub
mov
fcompl
dec
dec
xchg
adc
clc
pop
mov
cmpsl
pop
stc
sysexit
lock
popf
cltd
or
aas
addr16
movsl
daa
cltd
xchg
pop
xor
mov
xor
scas
mov
fstp
mov
in
add
jmp
mull
xchg
imul
in
fldenv
cltd
fadds
and
cmpsl
out
loope
cwtl
xchg
sbb
outsb
sub
push
repnz
and
dec
xchg
mov
fistpl
inc
or
call
sahf
xor
sub
cmpsl
mov
aam
inc
andb
mov
lahf
add
pop
mov
fldln2
fs
sbb
cmpsb
cwtl
jmp
add
sub
adc
out
xchg
inc
cltd
test
test
jg
sub
push
dec
cli
lret
cltd
shlb
int
ror
fnstsw
movsb
add
lret
sbb
lds
and
inc
mov
scas
sub
push
xchg
or
mov
sbb
mov
xchg
jb
scas
add
test
jmp
push
adc
mov
sbb
lcall
repz
or
adc
loopne
cltd
xchg
or
and
leave
cmpsb
ljmp
xchg
xor
je
or
shl
mov
stos
sbb
inc
pop
dec
mov
mov
ret
push
jnp
cmp
dec
test
pop
jge
sbb
icebp
xchg
push
jns
rol
fcoml
ds
adc
enter
ljmp
enter
mov
loop
test
push
idiv
aam
cltd
test
or
cltd
nop
cmp
mov
dec
shr
mov
es
imul
jnp
out
lahf
sbb
cmp
add
push
sub
xor
stos
or
insb
out
dec
xor
loope
mov
push
fsts
das
pushf
xor
jmp
or
pop
push
jae
sbbl
jmp
imul
mov
test
push
add
sbb
adc
mov
daa
sbb
lea
nop
sbb
mov
push
jne
pop
stos
add
outsl
jb
xor
mov
imul
xor
cli
jmp
rolb
ljmp
mov
aad
insb
test
push
adc
or
adc
xchg
int3
lods
add
and
arpl
xchg
xor
xchg
les
sub
dec
aam
sub
mov
subl
out
xchg
sbb
lods
mov
push
push
imul
and
pushf
cmp
mov
or
sub
jbe
pop
out
es
xor
in
sbb
jne
pushf
mov
mov
jne
sbb
aam
punpckhdq
sahf
adc
xchg
push
pushf
inc
jb
and
stc
inc
or
dec
dec
mov
bound
mov
dec
fwait
adc
cmp
sub
cs
inc
xchg
mov
js
dec
add
pop
pop
inc
inc
insl
jb
rol
sbb
jp
mov
sarl
inc
cmc
and
insl
jmp
mov
fisubrl
iret
into
cmp
push
push
ret
out
dec
shll
mov
pop
adc
lods
pop
and
sbb
xor
stos
cmp
xchg
cmp
clc
pop
mov
sub
loopne
test
pop
pop
adc
fisubs
cltd
repnz
xchg
lods
ret
cs
xlat
sub
push
cltd
lret
mov
xor
or
mov
stos
stc
inc
test
mov
mov
push
sub
inc
icebp
insl
rcl
push
popf
mov
bound
lods
sbbb
cmp
sti
pop
leave
mov
xor
imul
add
pop
pop
arpl
cmp
addl
push
push
add
adc
call
leave
pop
push
clc
push
cltd
mov
inc
dec
setns
cmp
xchg
addr16
cltd
adc
fildl
test
in
push
es
cltd
sbb
mov
adc
and
les
mov
aam
pop
hlt
mov
adc
lds
push
jl
cltd
rcll
lods
scas
xchg
mov
jo
xchg
in
cltd
push
cld
daa
dec
outsl
sub
movsb
fistpl
sub
pop
fcomp
cltd
dec
cmp
and
sbb
lds
jmp
leave
mov
xchg
sbb
jbe
ret
mov
cltd
aad
dec
cmp
movsl
lcall
sbb
fiaddl
int
or
xor
push
shl
push
cmp
sub
pop
cltd
call
lds
cltd
push
mov
push
cmpsb
adc
enter
mov
fwait
mov
mull
out
mov
and
dec
or
test
aad
pop
xor
pop
das
cltd
push
es
push
cltd
and
xlat
dec
shlb
aaa
inc
cltd
call
cmp
stc
push
ljmp
enter
push
out
cltd
mov
lahf
or
fwait
mull
inc
push
xor
orl
push
sub
push
or
je
lods
dec
lret
cld
mov
cltd
imull
mov
test
lods
xorl
ss
ja
das
xor
cltd
xor
mov
nop
cmp
in
or
pop
cltd
stos
mov
sbb
repz
icebp
sahf
in
mov
or
es
add
push
aaa
rcl
insb
cmp
and
cli
insl
roll
push
cltd
loop
mov
cltd
stos
movsb
ret
jnp
mov
dec
fwait
lret
add
adc
mov
cltd
pop
pop
mov
jmp
std
aam
das
sbb
dec
jmp
pop
cmpsl
lods
push
jg
xor
stos
and
jp
inc
cltd
push
mov
ret
iret
arpl
xchg
fwait
inc
ficompl
xchg
cltd
shl
sub
sahf
bound
sbb
int3
sbb
cmp
out
push
lcall
sahf
cltd
je
fcomps
cltd
mov
sub
test
mov
dec
xchg
mov
xchg
sub
psubsb
std
sbbl
bnd
pushf
cltd
out
mov
hlt
cltd
imul
rcrl
mov
cmpsl
test
dec
push
sub
push
mov
inc
not
sbb
mov
inc
pop
or
scas
pop
test
leave
cld
aas
out
adc
mov
rclb
aad
loop
inc
cmpsl
test
mov
aam
fwait
out
fstps
or
pop
jge
cltd
xchg
or
jbe
and
dec
sti
inc
or
es
cmp
clc
stos
xor
cmpsl
or
cltd
and
pop
insl
jecxz
mov
fistl
lcall
mov
xor
iret
testb
pop
lock
sbb
pop
movlps
movsl
lcall
mov
cltd
fistpll
jmp
dec
push
pop
xchg
jnp
cltd
test
arpl
cltd
xor
and
lcall
jg
daa
repnz
jl
cltd
inc
jbe
movsl
clc
or
jb
lcall
call
or
shlb
pop
icebp
jnp
lahf
call
rcrl
cltd
jne
test
out
inc
test
cmpsl
push
xchg
cltd
mov
sbb
sti
or
push
xchg
cltd
push
and
cltd
jp
cmp
sub
mov
pop
jne
sbb
sbb
test
stos
ja
push
cltd
push
popf
jb
insb
or
fists
xchg
mov
cli
fcomps
movsb
xchg
movsldup
lcall
add
cwtl
lods
lock
mov
mov
pop
xchg
xchg
mov
jmp
xchg
cltd
mov
sub
je
sbb
mov
xor
and
sbb
test
xchg
push
mov
mov
lret
les
xchg
jl
fisubrs
adcb
pop
nop
and
push
mov
mov
int3
adc
pop
insb
adc
sub
inc
ss
sub
xor
test
or
mov
sub
into
js
sbb
jo
lds
push
outsb
imul
mov
jb
xchg
leave
out
rcrl
mov
sahf
mov
ret
jo
fldcw
daa
inc
push
jae
pop
push
idivl
hlt
mov
sbb
xor
and
or
sub
or
aad
movsb
sbb
push
cmp
pop
cmpsl
js
shrl
push
adc
out
sbb
xchg
pop
push
hlt
mov
ret
jge
ficompl
lahf
icebp
add
sbb
mov
rorl
fistpl
pop
pop
mov
cltd
pop
inc
push
rorl
mov
jecxz
repnz
cltd
lcall
dec
jle
xchg
cs
dec
xor
inc
repnz
mov
push
pop
repz
dec
sbb
cmp
orb
ret
rorl
sti
lcall
stos
xchg
nop
jge
lahf
pop
xchg
aas
sub
mov
in
jl
mov
pop
daa
cmp
mov
movsb
cltd
mov
mov
push
ss
xchg
fcomi
test
insl
pop
cwtl
mov
cltd
adc
push
dec
mov
pop
cltd
jmp
adc
inc
ss
pop
or
rcll
xlat
out
and
lcall
jo
xor
push
jle
mov
repz
sbb
xor
ret
cltd
sub
hlt
test
jns
cmpsl
repnz
pop
mov
jmp
and
sbb
cltd
cmp
test
jl
lret
scas
mov
shrb
inc
aam
xchg
ret
mov
ds
cltd
and
push
fs
cltd
dec
cli
xchg
xorw
xlat
adc
stos
pop
imul
hlt
pop
jl
push
dec
xor
mov
push
cltd
dec
pop
dec
test
out
mov
cltd
jmp
dec
mov
cltd
mov
repnz
mov
lock
stos
lret
dec
xor
cltd
ret
sub
or
push
shrb
mov
cltd
mov
enter
add
xor
in
cltd
push
out
data16
push
dec
jp
mov
bound
cltd
dec
or
sub
mov
xor
or
push
dec
ljmp
filds
xchg
lcall
iret
cltd
dec
ljmp
adc
xchg
je
xor
cltd
push
repz
fnsave
cltd
cli
add
mov
push
cs
adc
jo
pop
iret
sbb
popf
cmc
and
fcmovnbe
or
std
ja
call
sbb
jp
int
jb
jne
daa
jo
or
push
cltd
pop
das
fcoms
adc
es
xchg
push
sbb
hlt
test
orl
mov
push
ror
aas
fsubl
enter
cmp
xor
adc
xor
push
push
fstpl
fsubrp
loope
icebp
or
nop
adc
outsb
add
lcall
andb
pop
sub
arpl
repz
sahf
adc
cwtl
push
and
in
push
aaa
sbb
xlat
lret
cltd
mov
push
popf
xor
sbb
rclb
cmp
jge
jns
test
xchg
pop
fcom
cltd
inc
add
xor
cmp
dec
les
add
inc
popa
mov
cltd
xorl
jg
cltd
mov
xor
int
sub
cltd
lret
sti
pop
sbb
lahf
pop
mov
ficoms
in
shll
pop
loope
js
cmp
pop
cltd
push
dec
sub
lods
pop
fsubrl
hlt
cltd
subl
scas
push
cmp
nop
dec
push
cmp
mov
add
sbb
xchg
jle
test
inc
xor
cmp
sahf
add
xor
push
sbb
out
cmpsb
ja
cltd
cs
out
jp
lahf
dec
and
pop
mov
call
xlat
cli
cwtl
negb
lahf
in
rcr
arpl
lcall
cltd
xlat
mov
xchg
popa
out
test
jne
pop
or
mov
rorl
in
sbb
push
xchg
sahf
mov
rcrl
sub
leave
cs
sub
dec
int3
mov
or
pop
adc
mov
setns
in
inc
les
inc
lcall
repz
mov
std
adc
mov
dec
out
addr16
jne
aas
xchg
jno
cmp
out
enter
cltd
int3
stc
out
or
mov
test
adc
aam
cltd
sti
shll
adc
cmc
loopne
shlb
cltd
subl
ja
and
cltd
ss
inc
adc
cltd
lahf
cmp
adc
or
leave
aad
js
negb
mov
mov
sbb
bound
arpl
xchg
cltd
xchg
mov
xchg
cmp
movsb
pushl
cltd
inc
dec
fsubrs
cltd
sub
xchg
data16
in
sahf
movb
decb
cmp
xor
jecxz
push
mov
xchg
mov
movsl
pushf
xor
inc
push
cltd
sbb
addr16
sub
rcrl
cmp
test
cltd
fsubl
xor
push
jl
subb
pop
rorb
in
repnz
push
lcall
mov
mov
mov
loope
and
aam
xchg
pop
mov
or
jl
jno
mov
stos
or
pop
in
mov
adc
jl
and
jo
pop
xchg
outsl
adc
sub
jle
in
int3
mov
data16
test
sbbb
lods
aam
shrb
imulb
test
adc
and
mov
xor
call
lcall
lahf
mov
ss
sbb
ret
push
jbe
mov
fisubl
sbbl
into
xor
dec
sahf
push
xor
mov
cmp
frstor
or
cmp
cltd
dec
repz
adc
outsl
fsts
notb
pusha
ja
mov
push
and
popf
cltd
sahf
fistpll
mov
push
sub
test
xor
dec
jne
adc
or
fwait
stc
dec
cmp
sarb
das
idivl
les
pop
and
cltd
cmp
dec
sar
cli
or
xchg
pusha
mov
in
out
add
mov
movups
pop
sub
iret
lret
cmp
adc
add
dec
mov
cltd
js
ss
lahf
aad
push
and
nop
out
cltd
cmpl
outsl
cltd
movb
cltd
repnz
jmp
xchg
cltd
dec
pop
into
outsb
jecxz
lods
in
cli
mov
or
or
stos
lcall
cwtl
cmc
push
ret
mov
mov
xlat
push
lcall
repz
mov
icebp
stos
mov
xor
cltd
in
stos
enter
cltd
cmc
scas
pop
jnp
jae
fstps
cmp
cmp
jno
adc
stos
push
or
jae
jbe
mov
out
and
sub
aaa
outsb
iret
adcl
sbb
cltd
lahf
pop
divl
enter
ljmp
cltd
jns
mov
sti
pop
cltd
xor
xorb
adc
dec
jnp
stos
shll
hlt
add
mov
fwait
pop
repnz
pop
subb
mov
xchg
outsb
push
ja
jle
jle
cltd
cmp
enter
pop
cmpsl
jg
cltd
inc
out
push
jecxz
data16
fwait
inc
dec
fwait
push
nop
pop
lahf
push
mov
xorl
cltd
inc
sub
test
ja
rcl
adc
jbe
aaa
dec
sub
jns
xchg
mov
inc
xchg
jge
xchg
pop
popf
cltd
testl
mov
cld
out
mov
dec
cltd
jae
pop
cmp
cmpsl
mov
popa
inc
lods
out
mov
fldcw
lahf
push
ljmp
mov
cltd
dec
mov
mov
push
cltd
mov
pusha
add
aas
cmc
add
dec
or
mov
stc
iret
mov
lret
ljmp
mov
xor
xor
arpl
test
sub
cltd
inc
push
push
sbb
and
mov
icebp
cltd
loop
imul
mov
adc
es
dec
mov
mov
fdivrl
mov
push
jp
bound
mov
adc
pop
sub
sbb
xor
scas
lea
arpl
mov
adc
cltd
jae
inc
cmp
cmpsb
cmc
cli
jb
cltd
cs
xchg
pop
add
jo
aad
dec
sbb
jbe
cltd
mov
sbb
cltd
xorb
and
cltd
sbb
rcrb
and
sbb
orl
fcomps
sub
cltd
in
clc
out
push
mov
shlb
negb
je
out
cltd
hlt
xchg
adc
mov
pop
lcall
aas
mov
jge
lods
fs
xor
ds
jb
add
push
mov
pop
or
adc
adcb
and
sbb
dec
iret
cltd
fdiv
int
pop
bound
jo
mov
push
cmp
cmp
mov
and
sbb
lcall
leave
or
adc
mov
inc
stos
mov
test
jns
aam
pop
and
lcall
push
adc
imul
das
sbb
shrl
faddl
add
push
push
in
mov
pop
test
mov
repz
or
shlb
pop
lods
pop
cmp
shrb
sarb
in
pop
xor
jl
or
test
push
fcomip
mov
add
or
pop
pop
test
out
jge
push
mov
push
or
mov
fsubr
push
or
lahf
or
popf
stc
mov
mov
add
movsb
mov
dec
out
mov
dec
and
mov
push
arpl
and
inc
into
mov
mov
cltd
push
dec
insb
adc
sbbl
pop
push
cmp
sbb
adc
clc
fidivrs
jae
popa
and
inc
jbe
jnp
int
or
mov
outsl
test
push
js
mov
push
lods
cmp
dec
xchg
gs
cmp
repz
dec
pop
adc
test
hlt
fwait
ljmp
xor
dec
aad
int
inc
cltd
jae
les
test
filds
fnstcw
sbb
mov
loope
xor
ljmp
add
or
cltd
iret
bnd
daa
adc
mov
sub
cltd
mov
scas
out
mov
les
xor
je
push
lret
nop
or
sub
push
xor
filds
dec
orw
lahf
insl
adc
lcall
aad
jb
orl
test
dec
xorb
sti
mov
mov
insl
xor
xchg
cmpsl
addr16
mov
lcall
loopne
pushf
xchg
js
push
inc
repz
cmpsl
out
lret
fisttpl
aad
ret
sbb
pop
das
cmpsl
cltd
imulb
or
and
aaa
inc
cltd
xchg
loop
leave
pop
mov
mov
pop
sub
pop
repz
leave
cltd
loopne
movsb
sub
push
push
xchg
lret
aad
icebp
lahf
mov
cmp
jg
jne
jecxz
jo
sub
cld
sbb
jae
push
insb
pop
lret
rorb
mov
mov
and
ds
mov
fidivl
aaa
lock
fldenv
rcr
inc
sub
stos
lds
popf
pop
ja
sahf
sbb
push
lea
lds
jle
imul
shll
movsb
sti
mov
out
push
and
mov
dec
pushf
mov
sbb
adc
add
jp
pushf
popa
or
lea
sub
rclb
inc
cltd
sahf
push
mov
cmp
lret
enter
bound
xchg
cmpsl
adc
mov
lods
add
add
pop
test
adc
fdivp
inc
pop
sub
mov
cltd
adc
pop
call
cmpsl
stc
jne
mov
cmp
pop
add
cltd
jg
xlat
mov
xor
adc
jge
js
fwait
xchg
xchg
pop
lcall
push
cltd
mov
test
dec
lods
loop
sub
jp
mov
adc
xor
xchg
setnp
xor
into
xchg
cltd
dec
stc
pop
outsb
stos
lock
xor
jmp
mov
lcall
setns
hlt
push
aam
test
adc
mov
fdivs
mov
cs
jae
outsl
mov
or
sbb
cltd
inc
or
and
adc
dec
pop
inc
cltd
push
xlat
pop
cwtl
rdmsr
es
cltd
or
enter
add
mov
xchg
rcrb
jbe
out
rcl
xor
sbb
dec
fwait
xchg
mov
stc
sub
adc
repnz
push
push
mov
bound
lcall
cltd
and
lods
xor
mov
pop
addr16
daa
cmp
ljmp
mov
dec
jb
jnp
out
pop
sbb
jbe
jp
mov
cltd
adc
inc
jge
adc
cmp
mov
mov
xchg
stos
pop
jbe
cltd
pusha
pushf
xchg
in
sarl
adc
popa
cltd
cmp
lcall
dec
mov
mov
imul
loope
ljmp
nop
adc
jecxz
test
inc
pop
dec
cmpsl
and
ret
je
fdiv
cltd
and
aad
push
jge
cltd
scas
or
mov
mov
dec
sub
pop
pushf
aas
js
pop
and
adc
andl
mov
mov
xchg
outsl
pop
ds
or
insb
fists
mov
adc
and
push
cltd
pop
pop
xor
and
popf
cmp
out
mov
lcall
push
inc
lcall
insb
adc
mov
and
lods
mov
cwtl
mov
xchg
fcmovbe
jl
mov
mov
flds
inc
xchg
das
leave
jne
rcll
mov
pop
add
int
dec
cltd
sbb
fs
jg
xchg
lahf
push
cmp
adc
mov
ret
pop
aaa
shr
cmp
imul
cltd
ljmp
mov
andl
std
dec
push
pop
cltd
xchg
mov
pop
jnp
adc
or
shll
insl
inc
icebp
rcrl
bound
xacquire
mov
int
scas
or
cltd
or
inc
push
repz
in
adc
fldenv
jge
es
mov
push
sbb
jno
pop
mov
nop
and
cmp
or
insb
mov
jle
mov
mov
mov
popf
pop
mov
addl
push
cltd
add
dec
cwtl
pop
mov
sbb
sbb
jecxz
pop
inc
push
cltd
jmp
xor
cltd
push
icebp
mov
sbbl
and
mov
xchg
or
mov
cmpsb
cmp
xchg
mov
aad
xchg
sub
push
cli
ds
pop
sub
push
push
pop
add
into
cwtl
cltd
rorl
fisubrs
cmpsl
lods
orl
mov
cltd
jg
adc
xchg
push
cltd
cmp
jbe
clc
fildll
pop
shl
adc
mov
lahf
test
pop
jp
fisubl
dec
push
fimull
cltd
jg
and
sbbb
dec
inc
pop
shl
cltd
sbb
daa
cmp
xchg
or
popf
js
dec
sbb
mov
fisubrl
and
adc
push
pusha
or
out
out
ret
ljmp
test
sbb
data16
add
lret
push
mov
xlat
in
ficompl
sti
cltd
shll
sbb
imul
mov
xchg
mov
sbb
cmp
ljmp
dec
push
or
stc
repnz
addr16
adc
add
cltd
in
adc
pop
cmp
pop
push
add
mov
aad
cltd
jge
push
js
pop
add
cltd
mov
and
popf
daa
imul
xor
jmp
jnp
pop
jmp
jns
mov
mov
cltd
movsb
sub
xchg
popa
fldcw
aas
cltd
je
lret
mov
jb
lahf
xchg
inc
cld
out
or
mov
insb
inc
aad
cltd
xchg
int3
subl
cld
xchg
push
roll
jbe
scas
sbb
out
push
fdiv
outsb
pop
mov
iret
scas
outsl
aam
cltd
gs
insl
fistpll
addl
daa
test
dec
cltd
push
arpl
cltd
cli
pop
jae
fs
cltd
pop
pop
les
out
out
add
lds
cs
pop
in
cld
cmpsl
push
adc
dec
fwait
jns
lretw
lret
lods
es
cwtl
cmp
adc
mov
daa
or
pop
or
sahf
cmpsl
ss
loope
in
xchg
pushf
or
sub
push
popf
addr16
leave
dec
cmp
out
sbb
in
dec
adcb
cltd
test
push
jb
cltd
mov
pusha
xlat
inc
aad
fdiv
cwtl
scas
je
jg
push
xchg
divb
inc
cltd
push
xchg
mov
cltd
mov
lods
or
subl
jge
jnp
or
es
popf
mov
jecxz
out
and
mov
insb
fsubrs
cmp
repnz
dec
cmpsl
loop
cmpsl
fcompl
test
cli
cltd
mov
xor
push
cltd
inc
xchg
in
ret
or
cltd
pushf
and
push
cltd
pop
xchg
in
loope
ret
cltd
mov
aaa
cmp
daa
xchg
les
adc
data16
movsl
jl
cltd
mov
jbe
stc
mov
jg
pop
cltd
aam
xor
cmpsl
or
lcall
xchg
jbe
cmpsl
rcrl
cltd
or
pop
cltd
mov
sbb
inc
sbb
jnp
cltd
fisttpll
shrl
test
dec
or
add
sti
xchg
mov
repnz
shlb
cltd
inc
pop
pop
or
lahf
jno
jnp
fcompl
cli
dec
lahf
js
and
aad
pop
cltd
arpl
inc
test
xlat
and
les
cmpsb
into
aaa
ficomps
int
fnstcw
pop
cltd
xor
xor
jecxz
lcall
adc
arpl
es
sub
lahf
jb
inc
cmp
mov
and
into
cltd
xor
mov
subb
cltd
bound
xchg
push
or
xchg
lods
shrl
or
into
arpl
mov
ds
and
lret
pusha
xor
mov
clc
mov
mov
push
push
sub
loop
dec
ds
subb
cltd
inc
ja
push
test
jno
cltd
nop
mov
jae
cwtl
cmpsl
push
negl
loope
sub
or
ja
push
inc
xor
mov
in
xor
or
pusha
jb
inc
pop
loopne
mov
std
push
mov
add
lahf
add
push
out
stos
mov
dec
adc
or
dec
shl
sbb
push
gs
scas
lcall
std
cltd
inc
jge
sub
aaa
cmc
dec
cltd
xlat
loope
and
inc
stos
jmp
cltd
das
in
or
sbb
jmp
mov
xor
push
mov
mov
dec
dec
push
cltd
cmp
imul
cltd
adc
xor
mov
jns
pop
xor
shrb
mov
int
sbb
cmpsb
bound
cltd
cmpl
adc
mov
or
shrb
sar
fisubrs
popa
imul
mov
mov
nop
ds
enter
arpl
mov
mov
mov
inc
bound
hlt
cltd
sub
xlat
mov
lahf
loop
popf
jns
lret
cmp
add
mov
mov
test
sbb
shrb
pop
movsl
and
cltd
int3
lock
loope
test
add
mov
and
sub
fwait
pop
insl
sbb
push
sarb
inc
fistpll
lea
mov
enter
lcall
adc
imul
fld
test
cli
or
test
adc
jle
loopne
push
jle
cltd
ss
pushf
jb
jae
lahf
test
fsubrl
test
mov
loop
fnstsw
arpl
test
int3
cld
mov
lea
xchg
xchg
out
sbb
ror
mov
daa
lret
push
cltd
cmp
mov
mov
xchg
pop
ficomps
push
rcrl
ficompl
ror
ss
fwait
std
mov
sar
add
fisubrs
mov
adc
sahf
mov
sbb
inc
push
or
shr
aaa
nop
sbb
sbb
and
mov
aam
lahf
aas
incw
fsubl
mov
lahf
shlb
in
pmaxub
mov
inc
or
dec
movsb
fwait
cli
xlat
sti
push
cmc
lock
fmuls
sub
dec
inc
jp
push
mov
test
pop
xchg
pushf
cltd
fsub
cmp
aad
pop
cmp
movsb
cltd
or
les
aas
xchg
imul
pushf
or
push
movsb
push
lcall
aaa
fistl
cltd
sbb
xchg
push
adc
in
mov
loop
sub
lahf
fildl
lock
mov
mov
sbb
push
xchg
sbb
imul
xor
jbe
fwait
push
jno
mov
mov
pop
rolb
js
sti
mov
out
lods
and
setns
xchg
jno
test
pop
push
std
mov
cltd
sbb
push
jae
fwait
enter
jg
ljmp
pop
xor
loopne
lds
jne
lock
or
in
cltd
les
sub
std
lahf
mov
xor
lcall
xchg
daa
lea
mov
fwait
dec
cmc
popa
nop
in
sahf
pop
xorb
shrb
stc
out
or
and
mov
mov
iret
mov
xchg
cltd
and
out
popf
push
sbb
dec
ret
cltd
test
fsubs
cltd
or
push
inc
jo
fwait
shr
clc
mov
adc
cltd
mov
inc
sti
aad
xchg
push
sub
dec
ds
jno
xchg
fnstenv
add
sbb
sub
stos
sbb
lds
inc
das
nop
dec
cltd
mov
mov
push
imul
insb
push
fisubs
addr16
adc
push
aam
dec
push
mov
add
mov
and
pop
push
lods
aad
pop
cltd
leave
mov
popa
cltd
push
cwtl
dec
and
into
out
lahf
lret
aam
test
cltd
iret
int
sub
in
cltd
adc
jmp
movsl
mov
lret
inc
mov
sbb
sbb
pop
icebp
cmp
cld
es
dec
ret
in
mov
insb
sbb
xchg
aam
movb
push
imul
rcrl
lcall
mov
stc
jp
fidivrl
xlat
ja
push
cltd
testl
pop
inc
mov
cmp
mov
icebp
or
stos
cltd
sbb
mov
and
sub
xchg
lcall
pop
in
mov
xchg
insb
jns
outsb
addr16
aam
xor
out
sbb
andl
inc
jmp
loope
dec
sub
mov
xlat
in
sbb
cmp
ss
dec
negb
and
push
js
daa
push
and
or
test
add
pop
imul
movsl
imul
je
cltd
or
rcrl
aad
mov
shlb
jne
sub
cmpsl
cmp
jge
daa
loope
jmp
or
adc
cmp
mov
std
sub
fs
xorb
movsl
cltd
pushf
sub
call
inc
jnp
stos
dec
pop
or
negl
mov
mov
mov
enter
xchg
iret
cli
push
scas
jg
mov
jb
xor
sub
cltd
aaa
mov
aam
pop
mov
cltd
int
mov
cltd
mov
xlat
xor
mov
cmp
jecxz
push
jae
rcrl
bound
out
xchg
int
jle
cltd
sbb
mov
mov
mov
mov
and
xchg
mov
shl
dec
mov
sub
out
and
mov
sbb
or
cltd
inc
fnstsw
out
jecxz
push
xchg
cltd
inc
jl
pop
pop
mov
cmpsb
andb
sbb
or
mov
in
and
fwait
sbbl
out
sub
mov
mov
lock
aaa
jbe
pop
popf
adc
push
int3
cltd
mov
leave
jg
out
cltd
jo
pop
dec
popl
jmp
js
pop
sub
mov
jnp
xchg
or
cltd
stos
sub
or
sbb
stos
incl
mov
popa
mov
xor
lahf
or
mov
fsubl
mov
push
or
cltd
and
mov
loope
xchg
aaa
cltd
jge
int
pop
mov
addb
sub
push
pop
rorl
mov
test
jge
jl
lahf
sbb
pushf
mov
cmpsl
stos
push
sahf
aad
inc
in
in
rorl
lods
shlb
sbb
scas
dec
fisttpll
fstpl
dec
mov
inc
or
imulb
addr16
push
mov
mov
pushf
lods
imul
andb
push
xchg
out
leave
dec
and
push
jo
dec
ret
cmp
subb
pop
dec
dec
mov
mov
inc
or
stc
insb
mov
mov
push
add
pop
stos
aad
cmp
mov
dec
xchg
xchg
popf
inc
mov
ret
shrb
adc
pop
rorb
add
notb
mov
fidivl
insl
cmp
mov
incb
inc
push
push
gs
pop
repz
adc
fists
fwait
push
sub
adc
adc
add
imul
mov
inc
push
xchg
cld
adc
jecxz
loop
mov
add
insl
and
xchg
test
test
shrb
cmp
and
mov
adc
insb
dec
repnz
mov
or
andl
test
lcall
push
lods
mov
dec
fidivrl
push
pop
mov
shl
neg
je
into
scas
out
mov
mov
and
es
inc
xor
lea
or
hlt
aas
push
mov
aam
test
sbbb
out
sbb
cmp
cs
into
push
popf
mov
dec
xchg
cmp
jmp
mov
rolb
movsl
call
cmp
out
mov
jle
int
or
shl
pop
cmpsl
mov
xchg
mov
lea
inc
fdivrs
pop
mov
inc
push
aas
bsr
and
xor
cmc
sub
mov
rcrb
jnp
sub
push
mov
sub
and
jl
mov
and
test
cltd
in
mov
push
pop
loope
xchg
mov
insb
mov
sbb
cmp
mov
cmp
lcall
xchg
push
mov
cmp
insl
outsb
push
xchg
xchg
popf
lods
xchg
imul
jnp
push
dec
inc
sbb
push
insb
adc
lds
cmp
pop
pop
sub
inc
add
loop
sarb
js
adc
push
xchg
into
xor
mov
aad
dec
add
outsl
add
lods
xchg
out
cli
jmp
inc
jp
flds
rcrb
sub
das
dec
pop
outsb
pop
andl
cmc
mov
fwait
lods
push
insb
fcomps
das
loop
pop
push
inc
xchg
int
aas
std
aas
iret
insb
or
dec
mov
int
adcl
movsl
out
stos
lds
push
ljmp
shll
jmp
push
add
jnp
addl
dec
sub
adc
jmp
sub
dec
add
fiadds
lcall
stc
and
pop
adc
inc
stc
movsl
xchg
jg
aam
aam
cli
add
lahf
std
sbb
jb
cltd
jge
rcll
cltd
pmulhuw
pop
cltd
sbb
pusha
or
repz
add
push
lcall
negb
call
push
rcrb
scas
cwtl
pop
or
lahf
scas
jo
cmp
lahf
add
mov
dec
sbbl
ret
sub
mov
out
fsubrl
or
imul
push
pop
cltd
sbb
push
inc
or
sbb
inc
or
rorl
stos
aam
pop
cli
shll
jno
push
fcomps
outsb
pop
jns
sti
mov
loopne
cld
mov
fwait
rclb
out
inc
sub
das
pop
lcall
add
loop
insb
jb
cmpsb
jl
aad
mov
sub
fldcw
dec
or
ljmp
xor
loopne
imul
cltd
stc
hlt
jnp
jae
cmpsl
add
leave
sbb
mov
jnp
cltd
or
hlt
push
outsb
cltd
jle
add
pop
xchg
push
adc
push
lcall
stos
cltd
jne
xorl
movsl
repnz
pop
dec
jge
icebp
add
mov
dec
dec
lahf
popf
iret
bnd
aaa
dec
mov
ds
xor
cltd
sbb
pop
mov
mov
sbb
out
cmp
ljmp
icebp
addr16
repz
stos
inc
push
stos
cs
jge
mov
adc
setb
insb
aad
call
mov
inc
fsts
cmp
aaa
test
add
cli
sbb
stc
lret
push
or
xor
xchg
jmp
xor
mov
adc
scas
mov
cli
xor
inc
cmp
imul
adc
sbb
popf
lahf
insb
mov
fldcw
out
fidivrl
lea
adc
in
data16
cs
cmp
icebp
mov
mov
test
fistpl
scas
pop
jne
push
xor
outsl
dec
stc
cltd
imul
pop
mov
test
int3
lcall
jp
push
push
pop
xor
stc
mov
popf
das
enter
xlat
cs
xchg
aam
xchg
repz
outsl
xor
push
dec
push
push
insb
js
sbb
mov
lds
pop
test
pop
mov
std
xor
enter
adc
inc
aas
inc
mov
in
insb
std
aaa
ljmp
jns
or
lods
and
cmp
aam
fnstenv
push
repz
add
pop
insb
xchg
mov
push
repnz
insb
cwtl
and
fiadds
mov
push
stc
fwait
insb
add
xchg
sub
fidivrs
cmp
cwtl
movsb
push
movsb
mov
les
loope
fdivs
shl
int
stos
push
jo
cmp
add
push
sub
mov
ja
shrl
dec
fwait
inc
push
addl
push
js
pop
fstpl
data16
loope
in
icebp
xchg
sbb
hlt
mov
inc
ljmp
sbb
test
cmpsl
dec
in
cmpsl
mov
mov
xlat
incb
and
inc
cltd
mov
push
xchg
adc
in
mov
fst
lods
insb
pop
loopne
inc
and
mov
call
fsubrl
mov
scas
sbb
mov
test
jle
leave
push
in
cmp
jge
cmp
les
xor
mov
adc
sar
stos
sub
add
addr16
adc
mov
lods
cmp
cwtl
xchg
pushf
mov
pop
stos
daa
mov
add
mov
fistpll
stos
fimull
push
mov
cli
adc
cmp
jmp
or
lahf
in
out
adc
fwait
stos
sbb
adc
push
fldenv
cltd
lods
lea
cli
jnp
cltd
inc
or
imul
lods
xchg
cmc
insb
dec
jge,pt
int
cwtl
cltd
scas
or
in
cmpsl
inc
ss
pop
lcall
inc
cltd
pusha
lock
or
inc
cltd
fadd
sbb
or
mov
inc
stc
mov
sbb
cmp
cltd
push
mov
jecxz
xlat
add
iret
mov
sbb
test
xor
dec
stc
ds
sbb
test
cmp
test
fimull
xchg
cltd
stos
pop
outsb
push
mov
aad
sbb
xor
scas
fwait
cltd
es
add
lcall
nop
ret
cmc
sbb
pop
repz
loope
fwait
push
pushf
subb
jge
inc
mov
xlat
stc
dec
mov
scas
mov
test
aad
xor
movsl
inc
pop
test
mov
pop
ss
ret
fwait
xchg
rorl
jnp
cltd
xor
mov
sbb
test
jbe
gs
stos
mov
stc
inc
ret
cltd
mov
mov
push
std
pop
cltd
cmp
imul
cltd
jg
test
inc
outsl
adc
out
sti
lea
jecxz
scas
cltd
daa
cwtl
xor
xor
fsubs
dec
push
rcr
cltd
dec
sbb
adc
xchg
or
adc
pop
rcll
mov
mov
cltd
sub
punpcklwd
stc
iret
cmp
cltd
incl
xchg
cltd
push
cmp
pop
or
mov
fistps
fisubs
idivb
or
sbbb
xchg
sub
cwtl
sarl
sti
jb
cltd
test
pop
pusha
or
fldenv
cltd
enter
mov
aad
test
fcom
jne
push
testb
rcrl
addb
adc
cmp
push
xlat
add
cltd
rcrl
hlt
mov
cmc
fidivs
adc
cltd
lods
push
in
out
iret
insl
je
or
or
arpl
add
cltd
xlat
daa
fwait
repnz
lret
out
mov
xor
cltd
mov
fwait
lret
pop
sub
std
push
mov
cmp
cltd
pop
scas
fdivr
sbb
loop
out
mov
inc
add
cltd
cmp
mov
js
lock
xchg
inc
mov
ds
xchg
jne
cmpsl
and
mov
nop
gs
aad
pushf
ret
inc
arpl
push
mov
jp
sbb
sbb
into
or
mov
mov
stos
xor
cmpl
fimuls
dec
test
mov
mov
push
xchg
pop
nop
fwait
adc
movlps
sbb
ljmp
mov
lret
cltd
mov
dec
fcomps
adc
cltd
add
inc
int3
cltd
jne
inc
mov
lcall
das
xchg
movsl
or
or
add
cltd
fnstenv
xor
cmp
or
jns
cltd
stos
rcr
outsb
xchg
bound
mov
cmpl
inc
inc
stos
add
clc
sbb
lret
adc
jg
mov
pop
cmp
fstps
dec
dec
push
cltd
push
pop
ja
arpl
leave
cmc
ret
in
cltd
mov
ljmp
loop
sub
sub
sbb
cmp
adc
lock
std
push
into
outsb
sbb
xor
call
test
xlat
lahf
mov
iret
cmp
cltd
add
mov
push
cltd
fsub
cmp
nop
dec
push
pop
push
mov
pop
repnz
in
xlat
mov
les
loopne
sub
sub
jb
sub
sub
cmp
or
mov
sbb
mov
pop
cltd
inc
sarb
stos
mov
mov
sbbb
add
dec
mov
sti
in
enter
mov
pushf
ja
fisttps
sbb
aam
inc
xlat
cmp
mov
lods
push
xchg
mov
and
or
cmpsl
sub
cltd
test
adc
mov
sbb
imul
jo
aam
out
inc
xchg
push
jbe
stos
lret
inc
cltd
mov
shr
push
stc
and
cltd
xor
sbb
nop
hlt
insl
mov
cltd
and
outsb
mov
push
push
or
loope
notb
xchg
bound
dec
fistps
in
mov
adc
xchg
bnd
stc
cmpsb
dec
mov
cltd
inc
or
push
shrb
cltd
mov
adc
mov
dec
lcall
sbb
and
les
push
addb
flds
cltd
and
iret
adc
mov
jge
push
cltd
loope
fldl2t
or
xor
cld
lcall
shlb
inc
mov
or
mov
mov
jmp
outsl
imull
jno
push
mov
mov
test
shr
mov
ficompl
daa
mov
icebp
fadds
jge
lds
lea
pop
cmp
inc
popf
jo
mov
lcall
push
inc
in
jne
out
add
adc
add
sbb
cmp
jbe
cli
xchg
mov
cltd
dec
add
ret
cltd
pop
mov
movsb
push
jg
cltd
ds
fdivs
cltd
jnp
testb
loop
cmp
xchg
cmc
inc
inc
xchg
pop
dec
call
aas
nop
rolb
sbb
daa
cltd
inc
in
pop
iret
mov
out
cmp
cltd
sbb
mov
cltd
mov
mov
or
fisttps
cmp
xchg
movsl
pop
cmp
repz
push
mov
adc
pop
push
daa
xor
cmp
stos
xchg
out
inc
cltd
mov
dec
adc
jmp
add
add
cltd
xor
inc
xchg
shrl
cltd
push
pusha
les
dec
out
je
xlat
lock
xchg
push
pushf
inc
mull
jmp
xor
test
add
fwait
das
or
arpl
push
mov
int
adc
dec
mov
inc
test
sub
stos
or
xchg
cmpsl
sbb
shrl
mov
test
addr16
adc
adc
stos
jbe
cltd
aam
loope
arpl
gs
dec
iret
push
mov
lea
cli
ret
movlps
arpl
lods
inc
or
cmpsb
pop
sahf
aam
stos
mov
leave
repz
jnp
pop
mov
push
jge
fimull
fdivl
or
loopne
mov
insb
jns
cltd
xchg
es
mov
xor
rorl
or
cmp
jle
jmp
adc
add
cmpsl
add
push
shrd
push
dec
cltd
inc
outsl
out
cli
mov
sub
xlat
xlat
icebp
cmp
out
dec
mov
jbe
mov
ret
lods
fmull
cmp
gs
push
or
cmp
cltd
int3
ja
xor
jg
and
xor
int3
cmp
pop
xchg
push
shl
lds
cltd
mov
sub
pop
fwait
popf
repz
sub
jmp
bound
or
ljmp
xchg
leave
add
mov
lds
lods
cltd
test
and
stos
out
push
cwtl
cltd
nop
idiv
in
mov
pop
cs
gs
lods
sbb
ficoml
mov
cltd
sub
popa
popl
cmp
jl
ja
dec
mov
xchg
scas
lods
pop
xchg
or
jae
sbb
inc
sahf
shl
sbbl
mov
cmp
and
or
mov
pop
or
notl
popa
adcb
mov
fidivrl
pusha
jnp
jecxz
xchg
and
add
test
andb
push
bound
mov
lea
mov
sub
and
dec
xchg
aad
stos
pop
rolb
xchg
out
jne
insb
test
bound
das
out
pop
or
pop
push
pop
and
mov
inc
repz
mov
rorb
cmpsb
test
std
repz
lock
mov
inc
xlat
cmp
mov
cmp
insl
insb
pop
dec
adc
test
add
sub
push
adc
cs
mov
fsubs
daa
jmp
rcrl
pop
icebp
stos
mov
add
dec
dec
pusha
sarb
shrl
lcall
test
sbb
fs
cltd
shlb
fnstenv
pop
les
lock
push
add
mov
xchg
in
cmp
push
sbb
lret
mov
stos
scas
xlat
lahf
mov
sub
sbb
cltd
inc
insl
aad
mov
push
mov
mov
pop
xlat
add
sub
es
shr
cs
mov
inc
add
shl
cmpsl
jns
into
push
dec
orl
cltd
aad
fstl
fisubl
cltd
dec
or
and
cmp
lock
mov
mov
mov
loop
shlb
in
jne
cmp
movsb
push
inc
adc
xor
es
mov
and
into
adc
rcr
sub
add
adc
jl
push
aad
popf
sbb
movsl
fcompl
jl
in
setns
loopne
repnz
lds
and
push
cmp
xor
mov
rorl
lcall
xchg
sub
jns
sub
sub
mov
and
mov
imul
cltd
jle
mov
mov
jb
fst
mov
xchg
dec
and
movb
pop
pushf
cmp
notl
iret
stos
scas
pop
push
cmp
repz
popf
inc
inc
push
mov
ds
xor
mov
in
rcrb
jp
xchg
pop
mov
pusha
mov
push
push
pop
jns
and
push
fstpt
cltd
rclb
movsl
int3
mov
add
mov
hlt
mov
mov
loope
inc
cltd
aas
inc
xor
or
cmp
cmc
ret
test
imul
mov
push
sahf
das
inc
sbb
jb
popf
aad
hlt
addl
push
lods
mov
xor
dec
daa
in
jne
cltd
pop
pop
add
test
inc
inc
jnp
mov
sti
test
xor
sbbb
xchg
adc
sbb
popf
loope
test
cltd
pusha
push
fcmovnb
or
cltd
add
adc
xchg
lahf
das
pusha
add
fwait
fdivrs
pop
mov
cwtl
mov
dec
das
cmpsb
cltd
mov
mov
push
xchg
xorb
cltd
sbb
mov
in
sbb
insb
mov
mov
rcll
cltd
xor
dec
sub
ret
mov
push
pop
mov
rcr
divb
lahf
test
mov
fcoms
lock
fisubrl
cs
scas
imull
sbb
push
test
pop
sahf
daa
mov
xor
sbb
sbb
xor
pop
fistpl
add
ficoml
rcll
xchg
subb
fs
sub
test
mov
push
lret
jo
mov
outsb
cmp
pop
xchg
jle
push
mov
add
clc
fdivrl
cmp
xor
lahf
leave
mov
sarl
inc
mov
cltd
push
loope
xchg
sub
es
sbb
mov
jae
mov
fnstcw
push
shlb
fucomi
xor
inc
mov
pusha
dec
icebp
ret
stos
movb
jo
jp
fwait
sti
xchg
test
fldcw
cltd
fadds
add
xchg
lock
pop
leave
cmp
test
mov
pop
in
add
push
mov
lcall
nop
aam
in
pop
sbb
mov
lcall
repz
adcb
jb
loope
inc
push
push
cs
jo
ffreep
or
movsb
andl
mov
xchg
lcall
mov
dec
pop
pop
sbb
cltd
icebp
mov
cwtl
cmpb
push
mov
nop
xor
sub
out
sub
fldenv
cmp
push
xchg
aam
jge
fs
lret
inc
or
subl
jmp
mov
pushf
pop
xchg
mov
sbbl
addb
shrb
scas
xor
imul
cmp
mov
push
sbb
pushf
pop
cmp
shrl
push
pop
or
addr16
jbe
pusha
sbb
lock
in
mov
mov
loope
sbb
jecxz
ret
lret
add
into
mov
xor
fs
and
gs
cmp
cltd
pop
push
mov
sub
rcll
jp
hlt
pushf
and
mov
mov
push
adc
imul
es
and
les
repz
xchg
rcl
sarl
movsl
ss
xchg
or
pushf
loopne
aad
xor
jno
iret
pop
xchg
lcall
mov
popf
mov
out
out
xchg
cltd
in
popa
or
xchg
in
rcrb
inc
cmc
or
cld
test
mov
adc
fistpl
imul
inc
dec
mov
addr16
cltd
pop
mov
jnp
cltd
push
lea
mov
cltd
dec
fsubs
out
jnp
cltd
fdivr
pop
add
sahf
mov
inc
sbb
and
jbe
cltd
add
xor
daa
cltd
or
pop
mov
mov
ljmp
xor
cltd
mov
xor
pusha
sub
mov
lock
jbe
mov
jbe
cmpsb
inc
push
mov
sbb
aam
cltd
mov
inc
int
sub
addr16
aaa
lcall
push
inc
mov
fwait
and
pop
or
inc
les
popa
add
icebp
or
lcall
dec
mov
stos
adc
loopne
je
mov
arpl
cltd
jmp
jno
stos
mov
jg
ret
lods
or
incl
push
pop
cmp
insb
xor
pop
push
out
into
rcrl
push
push
push
test
nop
sub
mov
xor
rcrb
xor
mov
outsb
sub
jnp
inc
lea
fldcw
sub
fwait
pop
inc
fisubs
loopne
mov
cltd
cmc
aas
push
mov
jl
and
cltd
sub
stmxcsr
push
adc
sbb
sti
and
mov
in
push
mov
sbbl
cmc
stos
push
loope
mov
das
mov
sahf
sbb
sub
pop
ja
loope
xor
mov
fisubl
fs
sbb
jne
cmp
jge
stos
jecxz
add
push
imul
xor
leave
mov
mov
push
movsl
fwait
stc
mov
lock
fcomps
dec
xchg
imul
xchg
xchg
jge
jmp
hlt
mov
add
dec
lret
pop
mov
mov
mov
jmp
insb
popf
mov
inc
sub
push
sbb
shrb
xlat
fcmovnb
mov
cltd
or
pop
aam
mov
cmpsl
inc
push
push
mov
cmp
cltd
jne
lea
xchg
cltd
xchg
mov
mov
popf
ret
hlt
mov
mov
add
pusha
sbb
cltd
lods
cmpsb
repnz
stos
lret
aaa
cltd
pop
rolb
movsb
lock
mov
movq
xor
or
mov
cltd
add
cmp
jnp
xchg
ss
addr16
repz
sarb
mov
pop
rol
cwtl
lcall
out
cltd
xor
flds
sub
xchg
ljmp
mov
inc
pop
sar
cltd
ds
cmpsb
imul
sub
cmp
ret
in
pop
xchg
adc
ss
mov
mov
aad
lcall
or
nop
test
sub
roll
insl
dec
leave
pop
jle
sbb
in
cltd
lret
cmp
repz
mov
push
cltd
int
add
mov
mov
ss
or
aad
inc
inc
cltd
add
sbb
cmc
cmpsl
xchg
push
sahf
mov
mov
lret
cmp
insb
ret
loopne
jg
and
xor
cmp
aaa
ja
push
xchg
mov
rcrl
mov
mov
add
daa
cltd
subl
mov
cltd
lock
cmp
js
aad
jbe
popf
xchg
xor
into
cwtl
fimuls
mov
into
loope
out
pop
and
insb
inc
pop
fnstcw
fs
cmp
add
orb
add
xchg
in
popf
and
ret
test
mov
fwait
inc
into
cmp
jge
popf
mov
dec
cltd
xor
faddl
aad
std
cltd
xchg
pop
fnsave
out
in
jns
fcmovb
or
in
cld
popf
jno
and
push
add
in
cmp
jae
lahf
aam
xor
insb
sahf
add
iret
test
lahf
nop
js
in
push
jb
cltd
add
daa
inc
inc
je
pop
sbb
push
mov
jl
lret
dec
add
scas
mov
lahf
jb
lock
out
jl
mov
mov
sbb
das
cltd
jae
inc
jp
test
mov
adc
mov
stc
enter
mov
mov
cltd
daa
xor
les
sub
shll
xchg
jbe
mov
sub
jns
mov
popf
outsl
mov
cmp
or
fwait
inc
sub
inc
pop
pop
loope
pop
fldcw
fs
adc
cli
inc
jbe
pop
popf
popf
decb
imul
rcll
movsb
lcall
lds
cmpsl
ss
jmp
pop
sti
scas
iret
aad
aam
sub
jno
call
ret
fisttpl
negl
lcall
icebp
mov
lahf
sub
shlb
mov
dec
cmc
dec
rclb
or
xor
xchg
xchg
shrl
dec
adc
cs
and
test
cltd
stc
adcb
or
js
mov
jmp
adc
jnp
pop
sbb
loope
dec
mov
xchg
jp
testl
daa
outsb
dec
push
cltd
add
or
and
xor
jmp
adc
fsubs
pop
inc
fldt
loop
mov
xlat
pushf
adc
stos
and
sbb
sub
mov
repz
outsb
ss
dec
and
mov
aas
lcall
push
sub
movsl
imul
lret
mov
fldcw
fimuls
add
fmuls
scas
cltd
aad
push
jnp
test
repnz
sub
xlat
xor
mov
cltd
jno
hlt
sub
subl
pushf
stos
jge
repz
enter
loope
xchg
inc
cltd
adcb
jb
adc
cli
add
outsl
sbb
xchg
repnz
mov
mov
lea
mov
sarb
sub
pop
ret
call
test
sbb
jle
xor
push
cltd
inc
dec
int3
sub
dec
stc
mov
notl
mov
xor
loope
mov
mov
and
pop
lock
push
sub
fidivl
in
cmp
mov
jp
pop
cltd
ror
inc
sub
arpl
aaa
in
mov
jg
jb
cltd
mov
loop
pop
xchg
bound
lods
xchg
cmpsl
inc
jb
stc
fistpll
jmp
movsb
cmp
lods
mov
sbb
loope
ds
inc
push
sub
adc
sbb
inc
aad
mov
sbb
or
pop
popf
adc
mov
data16
add
mov
call
dec
out
das
xor
shll
or
int
xchg
xchg
and
mov
and
addr16
fwait
nop
test
loope
mov
jbe
jp
cmpsb
loop
cmp
aas
fwait
pop
ret
hlt
fisttpl
pop
mov
mov
cltd
outsl
js
int
imul
inc
inc
pop
pushf
mov
xchg
hlt
mov
xor
mov
cltd
sbb
loope
mov
lock
add
sbb
popf
jbe
mov
pop
sub
rcll
leave
mov
scas
xor
lcall
push
mov
int3
stc
inc
sub
sti
jge
andb
jmp
adc
shll
mov
add
sub
add
adc
test
roll
sub
jbe
mov
pusha
aaa
jb
xlat
or
mov
push
sbb
or
mov
sbb
js
js
js
js
js
js
js
js
js
js
jp
or
loope
das
jp
addl
fisttps
xor
pop
xchg
pop
lods
pop
mov
pop
clc
pop
or
and
test
mov
adc
xor
in
out
aaa
js
sbb
fdivr
clc
pop
sbb
jge
mov
js
js
js
js
js
js
js
js
js
jp
adc
pop
jb
jp
sbbl
xchg
ss
inc
xchg
push
xchg
mov
or
jg
test
aam
ficoms
call
pop
es
insb
pop
jp
xchg
mov
fwait
mov
cmp
dec
and
jl
rorb
push
lea
lea
lea
mov
jge
sub
popf
pop
mov
aaa
inc
mov
xor
pushf
xor
xor
xor
xor
cmp
dec
xor
sbb
std
fcmovnb
xchg
mov
xor
add
push
xor
mov
mov
add
sahf
push
jb
or
in
int3
adc
add
out
hlt
adc
adc
push
pop
jo
lods
pop
mov
xor
and
xor
xchg
fwait
or
dec
jmp
adc
lea
lods
in
out
lea
or
mov
adc
adc
pop
in
push
sub
comiss
mov
adc
mov
sbb
push
jb
jp
orl
xchg
fildl
sbb
add
sub
or
decl
bound
jp
into
rcll
add
aam
rcrl
insl
aad
rolb
push
movsb
iret
add
xor
cwtl
aaa
ljmp
sbb
fsub
cmc
loopne
das
and
pusha
inc
pusha
pop
pusha
gs
in
or
sub
push
xor
sbb
fadds
cmp
mov
mov
jb
jp
add
out
adc
xchg
xchg
add
les
push
sbb
inc
sub
add
adc
dec
xchg
adcl
rorl
xor
pop
scas
pop
or
sbb
xor
ds
push
pop
pop
in
and
repz
or
loopne
and
pusha
outsb
in
frstor
fsubrs
clc
sbbl
dec
push
jb
jp
into
mov
pop
sbb
cmc
sub
cmp
dec
cwtl
pop
stos
insb
mov
dec
lea
pop
in
sub
mov
pusha
add
pusha
push
pusha
jbe
sbbl
sub
cmp
popf
or
adc
sarb
call
out
daa
dec
pop
inc
add
mov
pop
inc
insb
push
jp
add
cmp
or
xchg
movsb
xchg
mov
call
shll
mov
sub
loopne
cmp
jmp
sbb
or
xchg
sbbl
bswap
loope
xchg
shlb
shlb
xor
fidivrl
or
adc
outsb
rorl
out
sbb
popa
shr
testl
daa
xchg
xor
cmpl
repnz
in
stc
and
xor
std
gs
mov
sub
cmp
dec
push
pop
adc
pop
lea
add
xchg
mov
mov
inc
into
pop
xchg
mov
pop
fnsave
dec
mov
aaa
xorb
cs
sarb
rcrb
push
mov
stos
cmp
inc
jnp
fucomp
or
addr16
xchg
addr16
loope
sti
sub
daa
fisubs
mov
out
divl
jp
adcl
arpl
ficoml
cli
dec
add
pop
adc
sbb
and
sub
mov
mov
rcr
loope
scas
rol
xlat
cli
movb
sbb
and
pop
sbb
fsubrs
clc
xor
cmp
dec
lea
pop
aas
ds
js
js
jle
push
push
imul
xor
outsl
bound
or
bound
jecxz
pop
mov
xor
ja
add
push
add
jg
sbb
push
pop
cs
into
gs
fiadds
xchg
adc
pop
in
sub
sub
sbb
mov
into
sbb
fisubrs
outsb
sar
aam
adc
or
push
mov
aaa
add
mov
bound
pop
xor
js
xor
pop
aam
rcll
xor
out
loop
fs
or
sub
cmp
dec
jmp
push
xchg
shlb
stc
icebp
push
loope
xlat
sub
xor
shlb
xchg
mov
std
daa
dec
addr16
sub
add
sub
jle
adc
mov
mov
push
stos
cmpsl
adc
push
dec
and
ret
jb
lahf
stc
xchg
outsb
sub
insb
movsb
loope
int3
xchg
fdivr
mov
jl
lahf
jmp
add
aad
ror
xlat
dec
shlb
inc
jge
ss
sub
jg
mov
and
cmp
lds
push
shlb
or
sbb
mov
xor
and
imul
xor
shlb
loopne
lock
sbb
in
pop
jge
xorb
dec
mov
imul
inc
or
sbb
lret
fcom
clc
mull
popf
xchg
xor
push
jecxz
mov
and
pusha
or
pusha
sub
dec
pusha
push
pop
fisttps
and
push
adc
orl
adc
mov
ret
int3
data16
pop
popa
insb
insl
jl
mov
xchg
int3
sti
ret
xorb
stc
stos
xor
adc
lock
cmc
rcrb
jb
jle
mov
mov
jne
cmp
imul
bound
bound
mov
repnz
push
push
subb
cmp
sub
stos
shrl
fdivs
push
in
ret
adc
mov
ljmp
fimull
and
dec
daa
push
or
jge
sub
or
xor
and
arpl
jno
jns
and
int3
xchg
lcall
xor
sbb
sub
jns
orb
fsubl
test
jb
jp
adc
fnstcw
rclb
loope
pop
adc
stos
or
iret
dec
jle
and
adc
pop
notb
xor
into
into
aam
pop
mov
mov
add
sti
aad
adc
jp
add
out
and
push
icebp
sub
mov
mov
mov
js
jle
pop
dec
js
js
js
jle
nop
pop
dec
leave
cmp
dec
fstpl
cli
jl
lea
lea
out
orb
and
xchg
cwtl
xchg
les
sbb
and
andb
mov
cmp
fwait
scas
or
idivb
dec
pop
lds
xchg
mov
shrl
push
out
aaa
adc
pop
aad
les
ss
aaa
pop
aas
pop
inc
pop
dec
mov
adc
push
in
sbb
sti
mov
aad
gs
rorl
mov
imul
sbb
cmp
bound
jp
xor
mov
lods
xchg
sbb
mov
mov
mov
mov
pop
popa
push
imul
dec
mov
stc
cmp
jge
xorb
pop
sub
out
mov
aas
and
xor
adcb
pop
fidivl
inc
pop
popa
bound
cmpl
pop
aaa
mov
jno
xor
scas
icebp
call
pusha
xor
pusha
andb
ret
jp
mov
test
cmp
ljmp
mov
mov
xor
xor
xor
xor
xor
xor
xor
sub
loope
sub
cmp
js
js
js
jle
mov
xchg
adcb
xchg
mov
scas
push
ret
shlb
pusha
loop
ljmp
and
js
jle
sub
dec
lea
pop
lea
jp
lret
rcrl
sbb
testl
jns
lcall
or
jge
cli
sub
roll
data16
shll
aam
push
cmp
push
movsb
or
add
dec
or
lock
push
loope
pushl
xchg
cwtl
push
add
bound
pop
or
pop
jnp
xchg
les
adc
pop
std
notb
adc
xor
inc
cli
mov
mov
mov
fyl2x
sti
mov
add
xor
pop
pop
ficomps
push
sub
cmp
sub
cmp
dec
std
das
cmp
fnstenv
adc
enter
push
pushf
pop
sub
sbb
std
bound
or
insb
popa
jp
stos
lret
inc
lret
mov
dec
adc
out
and
loope
popf
pop
rcrl
psubw
sti
dec
outsb
mov
jno
adc
lahf
jo
insl
sti
ljmp
pop
flds
push
mov
or
xchg
push
jecxz
scas
adc
dec
stc
mov
outsb
cwtl
std
or
or
adc
mov
pop
popa
imul
test
leave
rcrb
fnstcw
and
pop
or
inc
popf
add
sbb
add
dec
add
jne
repnz
add
pop
push
icebp
std
or
rorl
sarl
fimuls
inc
jecxz
lods
movsl
adc
mov
or
sahf
cmpsl
pop
rcr
fnstenv
mov
push
cli
loop
lahf
adc
arpl
popl
lods
or
and
orl
fwait
inc
add
inc
sub
sbbb
cmp
sbb
add
or
mov
pop
call
bound
adc
mov
adc
mov
fld
sub
pusha
pop
out
add
add
nop
in
push
subl
push
push
aas
cmpsb
dec
pop
and
adc
inc
add
lcall
pop
or
lret
mov
inc
lret
fimuls
mov
mov
rolb
insb
bnd
or
mov
sarl
notl
adc
pop
mov
mov
cmc
stc
sbb
lods
sti
outsl
pop
scas
mov
inc
fwait
push
sub
adc
mov
xorb
cmp
dec
adc
adc
adc
pop
lret
lcall
or
xchg
or
push
pop
mov
add
out
push
jb
or
sbb
push
dec
rorl
out
lahf
xchg
iret
adc
jbe
loope
lahf
xor
stc
subl
or
packsswb
fstl
cld
pmovmskb
adc
int3
jae
jp
mov
in
repnz
mov
stos
movsl
add
sbb
daa
sub
or
adc
in
mov
inc
mov
xchg
mov
std
ss
test
repnz
add
mov
sub
adc
inc
scas
mov
stos
rcr
or
dec
mov
cbtw
test
cli
shlb
or
or
mov
jmp
rorb
out
xor
test
or
std
fldl2t
fsts
sti
push
cwtl
sbb
mov
mov
add
inc
mov
outsl
pop
mov
insb
mov
cmp
mov
fwait
or
or
cltd
bt
sbb
bt
add
push
mov
pusha
bt
call
jmp
add
inc
gs
outsl
fs
gs
imul
add
xchg
jmp
pushf
lea
call
pusha
movw
adc
pushf
lea
jae
push
push
lea
jne
pusha
stos
push
pushf
pushl
lea
jmp
mov
xor
sub
ss
dec
scas
cmp
das
hlt
sbb
aam
pop
je
xor
mov
add
rcr
mov
mov
enter
adc
pop
fwait
jmp
sbb
mov
or
adc
jo
hlt
test
gs
dec
mov
xchg
sub
stos
sahf
cmp
jb
mov
hlt
jo
xchg
mov
or
cli
arpl
stos
mov
les
shll
popa
mov
sbb
jmp
pushl
lea
jae
inc
dec
mov
stc
shl
mov
cmp
shl
mov
cmp
bt
sub
push
stc
push
bt
repnz
jmp
pusha
pusha
lea
call
push
pushl
mov
lea
jae
jmp
mov
jmp
push
mov
pusha
call
pusha
call
pusha
pushf
lea
jne
mov
jmp
fildll
shlb
or
and
ret
xchg
inc
inc
and
outsb
sub
test
sbb
lds
insl
push
mov
and
lret
dec
ficoms
push
adc
rcrb
inc
adc
inc
sub
add
outsb
cltd
push
add
mov
shrl
jns
decb
jge
sub
and
lock
jbe
jns
les
aaa
sub
stos
scas
jmp
and
stos
test
xor
sub
pushf
cmp
test
gs
in
sbb
inc
mov
cmpxchg
imul
mov
aad
push
adc
arpl
adc
push
adc
imul
mov
in
xchg
xor
dec
mov
lods
pop
xor
js
jnp
in
sub
jno
jl
mov
cmp
loopne
stc
incl
add
fs
jbe
sar
pushf
rcr
call
mov
push
mov
call
sbb
incl
or
sbb
and
int3
cmp
sub
scas
xor
or
jae
ficoms
jbe
push
or
inc
dec
fs
sub
push
mov
inc
aad
shrl
push
jns
adc
jg
jecxz
jno
and
sub
mov
je
stos
out
xchg
clc
das
cld
inc
jne
inc
sub
sub
lea
add
add
mov
xchg
adc
in
loopne
aaa
sub
lock
dec
les
dec
fdivs
push
jmp
xor
or
xor
loopne
xor
pop
stos
jmp
xchg
rcrl
inc
jb
jns
rcrb
fistpl
pop
notb
loop
pop
cltd
outsl
lret
cmc
xor
add
sbbb
addr16
je
pop
mov
call
dec
mov
and
dec
push
push
push
test
sub
and
mov
or
idivb
fldenv
sub
mov
cmovg
pop
fsubr
and
jnp
cmp
adc
jb
cmp
test
cmpb
call
xchg
jmp
je
pusha
mov
sete
movb
inc
jmp
call
call
subb
inc
sub
jle
testl
push
sbb
lods
jg
and
mov
pusha
adc
iret
clc
ficoms
fwait
mov
xor
inc
sub
movsl
mov
mov
cs
daa
mov
cmp
sbb
pop
inc
icebp
stc
ficoms
loopne
aas
scas
or
mov
lahf
adc
ljmp
xchg
inc
sub
arpl
cs
or
and
and
xchg
add
lcall
enter
stos
das
enter
test
and
or
ss
das
sub
adc
ror
dec
sub
cmp
pop
add
pop
pop
dec
xchg
lock
sbb
fs
mov
loope
cmp
rol
mov
nop
pop
push
jle
mov
mov
cmp
sti
mov
add
xor
lret
dec
xor
cvttps2pi
in
sub
sub
inc
or
sti
ret
adc
outsl
ficompl
cmp
incl
lret
pop
movsl
hlt
sbbl
test
inc
les
gs
shrl
or
xchg
mov
sub
mov
and
mov
push
mov
inc
lea
addb
sbbl
pop
dec
push
mov
rorb
negb
mov
mov
xchg
xor
inc
sbb
pop
or
cmp
pop
mov
test
push
xchg
adc
test
push
aas
xchg
lds
shl
sbb
add
leave
out
test
jp
movl
stc
sbb
aad
out
lea
call
pusha
call
call
call
mov
pushf
push
test
pushf
pushf
pushl
call
pushl
popl
push
push
pushl
movl
pushl
ret
inc
adc
sub
push
daa
and
jne
inc
or
test
popf
push
pop
add
inc
addr16
gs
daa
inc
cmc
outsl
push
in
push
adc
rorl
and
cmp
fwait
pop
lods
mov
stc
enter
sub
sub
mov
mov
jp
mov
dec
ret
gs
mov
movd
stc
jle
test
fs
push
fadds
cmp
sub
xor
lock
or
mov
decb
inc
sbb
cmp
std
mov
lret
mov
add
mov
mov
cld
ret
rorl
hlt
pop
jecxz
xor
mov
inc
inc
and
ret
stos
dec
jae
sbb
daa
mov
rcrb
lahf
mov
fnstenv
jl
icebp
push
ret
pop
inc
dec
mov
jo
fldl2t
pop
xchg
xchg
pop
mov
test
je
pop
add
adc
inc
sub
cmpsb
mov
xchg
fmull
ds
sub
xchg
iret
sti
cltd
adc
mov
enter
pusha
lods
insb
lret
sub
aas
ja
mov
adc
dec
in
scas
jo
cmp
sarl
dec
mov
rcll
sahf
xchg
imul
insb
mov
ret
cmpsb
or
push
mov
in
js
popf
lods
fdivr
mov
lods
fidivl
or
mov
aad
fisttps
mov
call
push
push
call
lea
ja
xor
setbe
sub
cmp
push
add
add
inc
mov
mov
cmc
mov
pusha
repnz
jmp
mov
or
ja
sub
lret
cld
fmull
sub
inc
push
es
dec
sbb
jb
daa
bound
test
inc
or
xchg
and
xor
push
push
cltd
jo
adc
rorb
cmc
xchg
loope
or
enter
mov
or
push
outsl
dec
mov
xor
xchg
sarb
bound
lods
insb
mov
aaa
or
shlb
mov
xchg
sub
jns,pn
xor
adc
enter
ljmp
ret
shr
sub
add
mov
inc
sub
movsl
inc
and
fs
sub
rcrb
and
push
dec
cmpsl
movsl
mov
sbb
leave
adc
pop
xlat
add
ss
imul
hlt
aas
mov
pop
pusha
jmp
lea
pushf
not
lea
movzwl
pop
pushf
mov
call
ror
and
sub
icebp
cmpl
push
out
sub
lods
or
sti
xchg
add
cmpsb
fcoms
fdiv
data16
sbb
inc
cltd
jnp
loop
outsl
push
scas
jo
lds
out
fisubrl
int3
pop
addr16
mov
xor
add
fisttpll
cli
movsb
es
dec
enter
mov
arpl
sub
cmp
je
out
insb
in
int3
and
sub
and
int3
lret
mov
mov
and
mov
jns
clc
aad
dec
das
add
stos
pop
pop
add
sub
fnstsw
das
and
jne
test
stos
pop
enter
jb
fisubrs
in
xlat
jg
stos
xchg
loopne
mov
hlt
mov
sub
inc
out
sub
jbe
data16
lcall
lret
sub
sub
out
adc
imul
sbb
xlat
add
mov
jecxz
fmul
repz
rcrb
jp
imul
cs
loop
sbb
lods
incb
adc
adc
jbe
xchg
daa
mov
mov
mov
mov
pop
pop
sti
jne
sub
xchg
pop
push
inc
jb
lret
movsl
adcl
sub
add
ret
sbb
cwtl
jbe
push
and
jge
add
jae
stos
sbb
push
xor
or
sub
cwtl
or
jecxz
cmp
jo
pushf
loope
in
lods
pop
es
idiv
add
or
adc
mov
push
pop
pop
mov
fnsave
dec
jb
adc
sub
jecxz
out
xchg
xchg
adc
addr16
mov
xor
aas
ficomps
pop
jp
das
sub
xor
push
mov
pushw
popfw
push
inc
jmp
call
mov
test
mov
test
stos
sub
es
in
out
cmp
call
mov
in
cmpsl
jne
movsl
bound
adc
cld
imul
inc
lea
jns
xchg
aam
into
mov
pop
pop
push
jns
stos
in
cli
test
mov
mov
pop
cld
std
int3
xchg
push
pushf
pop
popa
or
insl
pushf
or
xchg
jg
xchg
fs
add
and
out
mov
or
xchg
out
pxor
mov
jbe
sbb
ret
mov
xlat
cmpsb
add
in
pop
aaa
sub
add
movd
or
push
lret
cmp
outsl
push
adc
sahf
add
ret
xchg
mov
push
ja
cmp
lds
sub
pushf
aam
loopne
xchg
pop
or
in
movsb
jecxz
mov
insl
lcall
pop
ds
xorl
lcall
outsb
push
pusha
cmp
or
cli
cltd
inc
xor
pop
jne
sbb
mov
es
add
add
cmp
push
dec
test
and
cmp
jmp
lcall
call
push
xchg
sub
jecxz
push
stos
into
mov
mov
push
inc
ficomps
sbb
pushf
lcall
dec
lahf
cmp
or
push
out
push
or
je
sub
or
sbb
cli
or
mov
cmc
rolb
int3
lret
lods
dec
jmp
mov
fistl
xchg
push
mov
mov
sbb
out
jbe
cmp
or
pop
cmp
adc
xchg
jns
hlt
pop
stos
or
jns
or
ss
or
cmpsl
jo
pop
or
out
jo
mov
jg
push
mov
adc
imul
int3
pop
daa
xor
mov
inc
cmpsb
rolb
jecxz
cmpsl
adc
sub
aam
vpandn
dec
cmp
xor
jo
inc
mov
roll
out
dec
add
icebp
fldt
enter
popf
xchg
mulb
insb
dec
cmp
jae
stc
xor
sub
arpl
inc
jb
add
stc
add
cmp
call
fsubs
std
dec
div
icebp
mov
pop
ss
sub
cwtl
repz
ja
jmp
pop
aaa
je
dec
inc
mov
outsl
js
pop
pop
pop
call
push
enter
push
xchg
ret
mov
cmp
fdiv
push
push
std
stc
push
mov
inc
sahf
push
mov
cmpsb
scas
mov
jne
mov
inc
arpl
sub
ss
cmp
fwait
cmp
jge
push
push
cmp
cs
or
add
dec
les
aaa
popf
insl
adc
add
aad
cmp
or
ret
adc
addr16
hlt
mov
xor
mov
mov
push
aaa
adc
cld
dec
and
fsubl
in
adc
add
cmp
jb
sbb
xchg
and
cmp
dec
pop
sub
out
addr16
test
and
mov
cmp
mov
rol
sub
mov
adc
jmp
push
inc
mov
and
or
cmp
pushf
lea
je
rcl
shrd
clc
bts
add
movsbw
mov
jmp
xlat
sbb
cmp
or
mov
mov
xchg
mov
call
std
cmp
sarl
or
add
mov
pushf
sbb
pop
std
adc
dec
push
push
frstor
sub
out
inc
mov
cli
pop
inc
nop
popf
stc
inc
loope
sbb
sub
sub
lea
jae
pushf
mov
lea
jne
jnp
push
stos
pusha
pusha
pushf
lea
jmp
add
add
xchg
pop
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
add
add
add
mov
add
xor
jge
xchg
iret
loopne
jmp
dec
lret
cmp
sahf
mov
mov
mov
dec
sub
sahf
lock
dec
inc
cmpsl
lahf
mov
fs
jnp
xchg
lahf
in
xchg
pop
sub
mov
sub
push
xor
lret
into
adcb
jns
dec
mov
fldz
xchg
lcall
mov
test
or
out
std
fs
setne
xor
repnz
ja
outsl
stos
shlb
pop
mov
mov
fucomp
in
inc
lcall
or
xchg
add
push
shl
pop
cld
pop
push
xchg
or
push
mov
sbb
enter
nop
pop
pop
add
mov
ja
dec
adc
cmp
cmp
je
cltd
lods
mov
jae
repz
jns
push
rolb
out
cmp
xchg
add
mov
lods
cmp
insl
xchg
pop
adc
pop
jp
xor
je
bnd
cmpsb
xor
in
inc
or
fmul
enter
scas
xchg
cmp
scas
icebp
sti
or
pusha
out
jns
jne
cmp
mov
pop
pop
mov
scas
xchg
push
int
enter
popf
push
fcomp
iret
push
mov
dec
insb
pop
int3
and
je
mov
adc
push
inc
ljmp
bound
pusha
sbb
dec
nop
or
fsubs
jge
mov
xchg
iret
adc
jb
and
sub
inc
or
loopne
mov
mov
cld
pop
ja
cmpsb
xchg
js
mov
lcall
mov
mov
lea
adc
xor
push
pop
cmp
sub
pop
mov
add
jg
xchg
mov
stc
jne
push
stos
jno
out
and
push
adc
cmc
cs
jecxz
push
jae
ret
sub
mov
or
movsb
dec
gs
jnp
xchg
push
or
sti
mov
add
sbb
ds
inc
pop
lcall
dec
imul
cmp
or
cmp
and
cmp
stos
xchg
ror
sub
xor
hlt
mov
or
xchg
sub
lret
jmp
dec
fildll
popl
inc
lods
rcrw
bound
repz
jbe
scas
mov
filds
xchg
aad
jo
pop
dec
cmp
lods
adcl
movsb
or
testl
mov
push
fstps
pop
dec
aam
rcll
pushf
xor
cli
fdivp
fdivr
loopne
iret
ror
pop
mov
test
or
jbe
add
das
xchg
sub
mov
call
cli
sbb
test
pop
andl
in
sbb
or
push
mov
jns
idivl
hlt
cmp
aaa
sub
rorb
cli
mov
xor
jge
pusha
pop
jae
movsl
adc
mov
fstpl
ret
mov
inc
and
ret
scas
mov
cwtl
xchg
inc
xor
imul
cmp
out
in
jns
and
andb
movsb
push
shlb
sbb
or
xchg
xorl
sbb
and
es
outsb
xchg
xchg
sub
cmp
inc
pop
std
cmp
pop
adc
test
push
clc
sbb
dec
sub
inc
add
pop
mov
ficompl
xchg
dec
mov
mov
inc
pop
ret
sbb
lods
js
stos
sarl
rcrb
test
dec
push
cwtl
push
lods
out
jbe
inc
sub
data16
adc
les
sbb
les
pushf
dec
ss
pop
dec
ljmp
out
lret
sub
enter
adc
out
mov
fisttpl
incl
inc
jp
das
xor
adc
and
testb
fsts
push
subb
fsubp
add
xor
cmpsl
push
mov
icebp
iret
or
lods
aam
insb
xchg
cmp
mov
in
add
pop
xchg
fdivp
or
or
sub
and
push
pop
inc
out
insl
jne
fwait
clc
in
aas
lea
sub
jg
push
mov
fs
jo
stc
xor
xor
lcall
cmp
out
xchg
lahf
inc
popl
lock
mov
out
push
sub
adc
jb
rol
sti
push
pop
mov
mov
xor
dec
out
push
arpl
add
xlat
lahf
push
fimull
stc
inc
jne
inc
stos
rolb
fmuls
push
inc
in
outsl
xor
adc
push
dec
add
jns
adcl
je
add
movsl
je
jmp
dec
push
out
test
fiadds
lcall
mov
sbbl
fs
add
and
cmp
adc
sysexit
inc
jp
dec
mov
mov
sub
xor
clc
sub
cmp
cmpsb
outsl
xchg
hlt
add
push
and
dec
sbb
xchg
ret
ret
push
cmp
shl
mov
cmc
or
cmp
ret
outsl
cmc
mov
or
jnp
daa
xchg
shrb
jge
sub
outsl
lods
pop
push
clc
sub
out
or
es
negb
dec
shlb
cs
popa
jmp
sbb
sbb
stos
push
orb
mov
into
inc
inc
pushf
call
in
das
int
outsb
test
mov
loopne
mov
popf
mov
push
es
add
jg
fcompl
push
mov
cmp
push
add
xchg
dec
xchg
cmp
movsb
bound
jo
es
adc
cmp
shlw
add
mov
mov
jns
xchg
sub
sahf
cld
cwtl
fimull
xlat
xchg
mov
imul
dec
test
xchg
aas
jl
lahf
mov
addr16
pop
arpl
jp
mov
nop
fisubrs
inc
fcomps
arpl
cmp
lds
sbb
push
scas
mov
setnp
dec
aad
ret
mov
mov
xchg
test
push
pop
enter
lret
and
out
or
and
test
cmp
lock
or
sub
adc
mov
push
mov
cld
adc
fsub
sbb
daa
lods
imul
sub
call
mov
sub
sbb
mov
mov
mov
cmp
inc
pop
orl
shlb
out
nop
leave
pop
dec
cmpsb
fdivs
xchg
out
dec
push
into
inc
pop
xchg
sar
ja
add
jae
mov
adc
add
sub
das
push
xchg
jg
nop
stc
jge
or
cltd
xor
mov
cmp
cld
aam
lcall
sub
mov
incb
sahf
xchg
mov
aas
aad
inc
adc
movsb
xchg
mov
push
mov
mov
in
mov
into
test
add
sub
add
jae
push
out
cmpsl
mov
popa
sbb
push
fisubl
xchg
loopne
popf
jmp
aad
xlat
je
mov
cmp
ss
inc
xchg
cmpsl
fcompl
adc
arpl
mov
xchg
mov
ss
cmp
xor
dec
or
dec
das
fistpl
rclb
in
dec
pop
and
lahf
lcall
and
test
cld
jg
fisubrl
out
pop
or
add
lds
push
test
shlb
movsl
dec
lock
fnsave
pop
cmpsb
mov
cmp
scas
mov
sbb
mov
xchg
dec
cmpsb
shll
jge
cmp
rol
gs
rcll
xlat
mov
push
pop
outsb
out
mov
sbb
mov
push
push
push
dec
dec
sbb
pop
cs
sti
stos
mov
push
cwtl
lds
jae
mov
aas
pop
nop
pop
mov
inc
lock
test
xchg
mov
jl
cli
xchg
pop
xor
fisubrs
les
loop
nop
stos
adc
mov
in
sub
lods
int3
sbb
xor
sub
dec
dec
jb
cmp
fcomp
push
cmc
pop
mov
sub
movsb
or
push
jo
subl
xchg
jg
adc
sbb
clc
mov
dec
push
cmc
xchg
stos
jg
gs
push
ret
in
xlat
cli
dec
adc
ds
cmp
xchg
pop
dec
daa
mov
stos
fstpt
push
lea
fwait
fs
jo
mov
xchg
mov
stos
mov
clc
xor
mov
cli
jbe
xchg
mov
mov
in
xor
push
out
ret
lea
sbb
jno
in
int
jmp
les
mov
stos
aaa
lods
stc
cmp
mov
adc
mov
into
mov
lret
sub
imul
mov
mov
adc
xor
sub
cmp
lcall
out
dec
call
sub
mov
test
mov
mov
sbb
cmp
and
mov
lods
loopne
iret
sbbl
cld
icebp
xchg
cmp
mov
idiv
sbb
popf
mov
xchg
xchg
sbb
mov
mov
cmpsl
fdivr
stc
pusha
or
stc
sti
loop
fidivl
inc
enter
cwtl
cmp
xor
popf
sbb
mov
fsubl
loopne
mov
pop
xor
aam
cmp
dec
cli
sbb
sub
daa
rorb
lods
adc
mov
popf
stc
mov
lret
xchg
ficoms
iret
inc
lcall
fwait
xorb
cmp
sbb
xor
mov
cmp
ffreep
jmp
insl
sub
and
idivb
lahf
mov
mov
popf
pop
dec
out
xchg
sbb
lahf
enter
enter
das
ficomps
fadds
cld
test
gs
ss
cmpsl
cmpsl
mov
repz
xor
and
jae
cmp
jns
mov
mov
add
adc
fmull
unpckhps
mov
jbe
fidivrl
mov
mov
out
pop
sarl
aad
sbb
push
push
sub
jge
jmp
sub
fdivrs
and
es
jge
xor
scas
out
jae
pusha
jmp
lret
loop
out
test
and
or
insb
imul
and
ljmp
dec
loope
lea
cmpsl
mov
sti
pop
cmpsb
popf
xchg
and
xchg
sub
loope
daa
mov
js
andl
stos
cmpsl
test
sub
pop
cmp
popa
cli
add
je
dec
mov
bound
jp
mov
mov
data16
jp
push
int3
int
arpl
add
add
movb
call
pop
test
sub
or
and
jne
orb
ret
jns
inc
sbb
jnp
jns
jnp
daa
cltd
or
mov
inc
lock
dec
jecxz,pn
and
mov
push
movl
pushf
movl
call
pushf
lea
jne
pushf
pushf
mov
stos
push
pusha
lea
jmp
xorb
sub
or
jo
xlat
test
sub
pop
jge
xor
out
sbb
add
and
xchg
aaa
fdivp
pop
js
and
dec
cmpsl
inc
mov
and
xchg
sbbl
ficompl
sub
lcall
loope
lods
mov
cmpb
add
add
mov
lea
ja
pusha
sub
not
sbb
shl
lea
add
bsf
cmp
mov
call
out
dec
sub
or
xchg
shrb
rcrl
xor
test
jns
xor
aas
push
jns
loope
dec
and
andb
sarl
push
xacquire
imul
out
outsb
cmp
jbe
mov
or
and
es
xor
pushf
sbb
std
push
cmpl
pop
xor
push
leave
add
cli
lods
cmp
xchg
jecxz
icebp
jae
js
insl
int
adc
icebp
mov
push
fiaddl
les
inc
jns
scas
imul
orl
sahf
inc
je
enter
movsb
xchg
das
add
sub
insl
push
leave
in
xchg
sub
addb
cmpsl
jo,pt
int
jne
or
leave
push
push
filds
fbld
dec
lahf
xchg
inc
dec
in
jmp
pop
popa
out
repz
enter
add
dec
popl
in
sbb
test
sbb
mov
pop
adc
and
cmp
roll
sub
mov
xor
int3
andl
jp
and
add
shl
inc
add
pop
call
pushl
popl
mov
mov
pushl
ret
icebp
sbb
aas
das
enter
inc
movsb
in
imul
movsb
mov
xor
xor
or
xchg
mov
cld
cmpsl
inc
mov
test
iret
inc
sub
in
sub
mov
arpl
xor
sti
testb
push
iret
sti
xor
fnstsw
fnstsw
pushf
lea
jne
pusha
mov
movw
jmp
call
fidivrs
pop
sub
or
test
mov
add
mov
hlt
jb
push
bound
xchg
mov
pop
cwtl
sbb
repz
pop
xor
aas
jmp
add
mov
or
adc
movsb
sbb
inc
gs
test
cs
and
fbld
sbb
cmp
push
scas
shrl
insb
test
je
aaa
add
mov
cmc
xchg
gs
imul
sub
mov
cmpsl
test
xor
in
imul
in
fsubrl
in
xchg
xor
les
adc
inc
mov
fistps
dec
jl
dec
or
jecxz
lret
ret
fiaddl
mov
sub
or
xor
xchg
push
addr16
lds
xchg
bound
in
sub
pop
push
push
or
shll
in
shl
stos
sub
cmc
sbb
xor
jecxz
jns
jo
outsb
sub
popa
fimull
mov
ficoml
mov
or
xor
shl
inc
sub
or
pop
mov
lods
dec
inc
rcll
or
int
or
fbstp
sub
hlt
adc
pop
fldt
push
or
sub
imul
mov
push
lret
push
xor
insb
cmp
lcall
cmp
push
sbb
pop
stos
loop
jle
adc
shlb
or
sbb
push
push
fsubs
xchg
push
jg
arpl
push
push
pushl
pushl
popl
pushf
pusha
pushl
ret
dec
stc
shl
pusha
lods
stc
add
mov
clc
ror
bt
sub
mov
ror
jmp
bswap
lea
pop
pusha
pushl
pushl
ret
pusha
push
lea
je
clc
bt
pushf
sub
jmp
pop
pusha
mov
movb
push
pushl
ret
mov
or
xor
xorl
mov
stc
xor
add
lock
xchg
xor
or
fadds
cmpb
gs
cmpsl
fistps
fimuls
fldl
adcl
fisttps
ljmp
or
xchg
push
outsb
subl
pusha
mov
rorl
divl
jae
test
stc
mov
call
loopne
scas
daa
sub
jl
mov
inc
cmc
in
lahf
cmp
jge
jno
lock
stos
mov
roll
jmp
imul
nop
sub
mov
daa
push
dec
fucomip
mov
aad
into
in
jo
mov
cmp
sbb
out
sahf
dec
lds
decl
aaa
hlt
movsl
cmp
sbb
cmp
sub
cmp
push
push
push
cmp
push
cmpsb
xchg
stos
xchg
cmp
and
mov
push
add
pusha
lea
jne
jmp
sahf
push
push
je
cmpsl
lret
adc
and
daa
push
sub
pop
push
pop
leave
pop
adc
cmp
rclb
popf
clc
lcall
mov
mov
subb
arpl
sahf
dec
xchg
sahf
fnstcw
leave
dec
jp
lock
lods
mov
push
call
fwait
push
clc
inc
inc
mov
adc
gs
adcl
adc
push
jo
jge
movb
or
jp
ret
or
pop
stos
aam
inc
sbb
insb
sub
cmp
xchg
xor
mov
jg
pop
inc
les
test
fadd
mov
ds
jp
mov
xor
mull
addr16
dec
test
cltd
addr16
push
jno
xor
mov
add
in
mov
pop
dec
cs
xchg
jge
mov
lea
pop
les
mov
xlat
rcll
in
dec
cltd
sub
loopne
frstpm(287
adc
div
popf
loop
or
lret
mov
jg
dec
iret
mov
sbb
push
fistl
fwait
or
in
push
and
bound
cmp
inc
cs
jns
insl
arpl
fs
jne
cwtl
lahf
bswap
movb
movsbw
jmp
pusha
mov
lea
jb
pushf
pusha
pushl
movw
pushl
ret
lcall
cmpsl
jne
dec
lret
pop
test
stc
mov
mov
mov
jno
and
xor
xor
lret
adc
push
mov
scas
sbb
notb
push
iret
outsl
cmpsl
loop
dec
ret
sub
js
jb
loop
repnz
jae
pop
ljmp
ljmp
popf
aaa
mov
and
mov
inc
call
in
call
and
add
shr
push
mov
bt
jmp
ja
pushf
bt
add
call
fdivs
flds
out
mov
in
sub
ja
adc
loopne
fdivp
arpl
add
pop
imul
or
add
aaa
jb
sub
pop
or
das
lret
inc
addb
pop
dec
out
mov
jge
inc
test
cltd
cltd
jbe
pusha
out
pop
push
and
int3
mov
fmuls
ljmp
cs
pop
cltd
test
js
mov
shll
push
aad
mov
imull
push
in
stc
aad
jnp
lea
jne
lea
ror
rol
mov
push
push
add
test
cmp
pusha
pushf
movzwl
ror
clc
sub
movsbw
mov
test
stc
clc
stc
add
call
push
lea
call
pusha
lea
jae
jmp
inc
lea
cmp
sub
test
pushf
cmc
pushl
popl
bt
mov
clc
pushf
cmp
jmp
fisubrl
dec
and
or
xlat
adc
cmp
xchg
dec
fsts
push
lret
mov
enter
jg
das
adc
mov
ss
cmp
imull
and
pushf
cmp
push
js
orl
adc
stc
or
aam
mov
shll
dec
inc
mov
mov
sub
pop
repnz
in
pusha
jo
add
xor
mov
pop
push
add
or
xorl
dec
or
xlat
arpl
out
adc
fadds
xor
sub
aas
mov
adc
stos
mov
and
mov
rcrb
inc
and
xchg
mov
or
add
cs
push
jo
fldenv
rolb
das
mov
mov
lea
jmp
aam
adc
shlb
cmp
or
and
or
fdivrl
movsb
orl
sti
ss
das
in
jb
sahf
fsts
add
mov
jecxz
add
mov
mov
add
outsl
sub
mov
or
mov
pavgb
fstpl
dec
mov
js
sbb
xchg
arpl
inc
stos
push
iret
iret
jp
inc
aas
out
or
jle
pop
push
xchg
jo
mov
cs
and
or
inc
xchg
mov
jge
xchg
pop
cli
jmp
or
push
in
pop
push
stos
mov
add
adc
mov
pop
mov
add
stc
add
sti
jb
mov
dec
cld
push
jg
jne
call
test
mov
ret
adc
and
test
mov
mov
cs
ljmp
and
je
sbb
hlt
mov
dec
dec
addr16
sbb
outsb
rcll
xchg
sbb
pop
in
lret
jmp
adcl
cld
cmp
pop
cmp
pushf
sub
lea
mov
pop
mov
call
lahf
jge
and
or
inc
xor
ss
imul
mov
std
call
dec
push
in
les
lcall
out
cli
lock
mov
push
insb
dec
fldlg2
ds
and
inc
dec
mov
bound
push
inc
pusha
fs
sub
xchg
push
cld
cmp
jae
dec
mov
push
sbb
cmc
inc
sbb
sub
mov
imul
mov
aaa
jns
insb
subb
cmp
and
pop
dec
cmp
pop
jmp
adc
fs
lock
and
inc
adc
fwait
sbb
pop
jge
xchg
pop
movsl
xor
or
fcoml
pop
sbb
dec
gs
pop
xchg
imul
pop
into
push
aaa
mov
lea
imul
jne
out
sbb
cmp
testb
cmpl
js
ret
jg
leave
shlb
aas
xchg
mov
ret
repnz
loope
sub
rolb
rcrl
sub
cwtl
add
pop
stos
inc
mov
divl
shll
mov
lds
mov
add
cmpl
push
mov
adc
push
push
nop
pop
push
inc
in
roll
pushaw
hlt
sarb
push
pop
mov
std
cmp
lret
les
enter
xor
xorl
int
aaa
int3
jle
fcoms
and
jle
adc
mov
pusha
popf
inc
repz
out
repnz
push
outsl
lar
mov
call
add
add
add
add
add
add
enter
sti
pop
add
add
add
add
add
cltd
or
push
sti
pop
add
add
add
add
add
fildl
add
add
mov
add
add
add
sbb
sti
pop
add
mov
add
add
add
rcrb
pop
add
mov
add
add
add
or
pop
add
add
add
adc
and
pusha
mov
push
pushf
movb
pushl
pushl
ret
inc
jae
push
sub
bound
fs
inc
mov
jge
lods
cmpsb
mov
or
push
dec
mov
xlat
push
adc
vphaddubw
popa
cli
flds
lret
add
ret
sbb
pop
out
testl
test
iret
dec
lds
mov
cmpsb
cmp
push
push
sti
sub
stc
lret
cmp
inc
rorb
das
mov
js
shr
sbb
dec
arpl
and
mov
adc
cmc
stc
or
pushf
call
bt
cmp
pusha
jmp
lea
call
push
mov
mov
lea
jne
lea
bswap
mov
push
pusha
pushf
movb
lea
jmp
call
pusha
call
mov
setns
clc
mov
pusha
push
jmp
jmp
fmul
push
cs
aas
add
shrl
xor
aas
ret
jo
inc
or
push
xor
pop
xor
orb
adc
lock
aas
pop
lret
add
push
gs
dec
jne
inc
add
fs
call
call
xchg
mov
sbb
cld
mov
arpl
jle
adc
jae
insl
fsub
cwtl
loope
pop
push
push
add
sbb
add
inc
mov
inc
arpl
lock
push
imul
sahf
mov
cmp
repnz
cmp
pop
testb
pop
jb
pop
lret
loopne
icebp
sub
jmp
cmovp
jb
push
cmc
movl
inc
rolb
push
decl
mov
xlat
daa
add
inc
mov
movsl
sbb
or
pop
lods
jns
mov
movsb
sub
and
xor
subl
pop
stos
es
or
mov
and
scas
scas
lock
mov
jns
sahf
mov
out
mov
gs
jmp
ljmp
leave
ljmp
gs
push
xchg
pop
cmp
inc
movsl
sub
xor
dec
mov
mov
xor
sahf
ja
or
cld
mov
popf
stos
jge
jle
push
lcall
adc
mov
dec
cmp
dec
add
xchg
lock
ljmp
mov
pop
popa
jo
sub
movsb
jmp
movsb
cmp
mov
hlt
aad
addr16
dec
pop
cmp
hlt
or
addl
gs
popf
push
jb
jg
sub
pop
js
pop
stos
sub
sahf
dec
sub
sbbl
add
push
mov
call
push
mov
pushf
pushf
lea
movw
pushf
push
pushf
movl
jmp
movb
pushf
pushf
movl
jmp
movsbw
push
adc
shld
mov
call
cmp
pusha
setne
lea
lea
not
not
pushf
mov
mov
movb
push
lea
ja
jmp
clc
mov
bsf
add
mov
add
shl
bt
bswap
movl
and
mov
lea
jmp
xchg
sbb
or
subl
xchg
int
cltd
push
cld
lcall
fwait
push
call
inc
xor
pop
xlat
xchg
int3
subb
push
lahf
mov
mov
cs
ds
leave
mov
es
addr16
mov
std
xor
xchg
shl
mov
imul
inc
cs
mov
inc
cwtl
xor
mov
jmp
stc
push
cmp
movl
push
call
xor
sbb
or
jne
pop
mov
fdivr
jno
xor
and
push
jo
dec
jbe
rcr
or
inc
xor
cld
movsb
adc
add
xchg
fmuls
mov
clc
sbbb
test
mov
push
sub
add
ret
shl
sub
cmp
xor
jbe
je
xor
das
cltd
add
dec
clc
pushl
lea
jbe
mov
sub
sar
ror
sub
test
mov
btc
xor
jmp
pushl
or
push
pusha
pushl
call
leave
xchg
mov
sub
adc
scas
jle
repnz
jnp
lock
inc
stos
lret
dec
sub
mov
lods
jle
and
loopne
or
push
dec
adc
stos
test
inc
arpl
mov
jmp
push
xchg
aas
insl
scas
aam
nop
mov
and
jo
stos
pop
mov
out
mov
cs
jle
insb
cmp
xor
xor
out
ss
inc
and
daa
adc
gs
sti
test
mov
cmp
pop
pusha
jl
popa
jl
and
inc
pusha
mov
xchg
cmp
je
inc
sub
stc
pusha
pushf
pushl
popl
stc
cmp
push
push
call
movl
pusha
jmp
pushl
lea
call
push
call
bswap
push
cwtl
push
movzbw
movzbl
lea
call
ror
cmc
sub
cmc
call
not
pushf
not
mov
lea
push
mov
movsbw
mov
bswap
mov
pushl
mov
lea
jle
mov
not
pop
push
pusha
pushl
ret
setb
pushf
pushl
pushfw
popw
adc
mov
call
jae
pop
sbb
or
in
mov
cmpl
orl
xchg
add
and
inc
xor
jnp
popa
or
dec
fisttpll
outsl
pop
mov
dec
sbb
sub
and
sbb
fs
cmp
test
sahf
daa
push
mov
push
fildll
test
pop
sbb
or
inc
adc
mov
adc
sbb
mov
into
sti
cmp
fs
mov
insb
add
jle
sti
sub
adc
push
add
out
clc
mov
call
jge
addl
cmp
mov
mov
fldcw
popa
arpl
inc
adc
mov
vminss
cli
cmp
sub
into
je
or
fisubrs
and
lea
je
lea
lea
push
lea
movzwl
jmp
lea
jno
pusha
sub
pusha
rep
push
not
lea
pushf
mov
pushf
movb
lea
jmp
bt
cmp
jnp
pushf
push
lea
jae
push
shl
btc
mov
shrd
mov
pusha
mov
pusha
xor
jmp
call
lea
jne
movzbw
pusha
mov
mov
pushf
movw
push
lea
jmp
push
add
jmp
add
or
subl
dec
stc
cmc
jno
push
stc
sub
mov
jmp
add
add
and
cmp
daa
adc
mov
mov
dec
mov
xor
cmpsb
mov
mov
stc
cmp
push
imul
popf
xchg
mov
mov
jge
arpl
cs
pop
sub
jp
lcall
adc
mov
adc
pushf
add
movb
mov
lea
jmp
lea
call
stc
cmp
pushf
movb
lea
jae
cmc
cmp
pushf
jmp
lea
jae
pushf
lea
jmp
pushf
sub
mov
call
jmp
mov
not
bswap
mov
call
and
and
adc
push
icebp
dec
mov
xchg
push
or
fistpll
adc
pop
cmp
or
movl
mov
inc
sti
sbb
inc
cmp
xchg
pop
dec
pop
imul
lea
xchg
movsl
adc
call
xor
mov
pop
mov
push
pop
dec
push
jno
mov
test
lea
jle
jo
ja
sti
push
repz
icebp
pop
sub
ljmp
add
cmpsb
sbb
loope
movsl
movsb
pop
movb
inc
sub
add
dec
clc
movb
movw
lea
jmp
pushf
push
mov
movl
pushf
pusha
movl
push
movw
pushl
lea
jmp
push
add
movw
test
jmp
lea
ja
pushf
mov
imul
mov
add
pushf
lea
jmp
adc
adcl
test
fildll
xor
push
or
xor
jb
iret
mov
in
test
jne
sub
movb
pop
loopne
pop
mov
xchg
lret
xor
pop
movsl
test
inc
xchg
lods
mov
outsb
inc
clc
shrl
shl
cmpsb
negl
add
shrb
fcmove
movsb
xchg
mov
sub
test
mov
iret
ja
sti
add
pop
incb
call
or
or
dec
mov
mov
dec
mov
cmp
and
dec
push
cmp
sti
scas
outsl
adc
lea
test
jg
imul
ds
mov
mov
xor
push
inc
cwtl
xchg
mov
xlat
jno
sbb
icebp
pop
std
fistpll
mov
mov
dec
cmp
xchg
dec
ffreep
fcom
fcmovnb
cmp
cs
mov
lea
jae
test
and
lahf
add
in
int
dec
adc
dec
cmpsl
fadd
call
push
loopne
paddusb
test
mov
pop
stc
xor
xchg
inc
mov
mov
fstpt
ja
add
add
jp
push
or
push
lods
adc
xchg
pop
push
out
shr
sarb
mov
outsl
add
mov
rcrl
mov
aam
inc
push
and
inc
sbb
loop
xor
inc
dec
adc
ss
add
push
ficoml
ss
aaa
aas
adc
mov
repnz
adc
pop
push
iret
xchg
inc
in
lock
test
xchg
fstps
cmp
lcall
jmp
clc
je
jg
movsb
xchg
cmp
xchg
and
je
pushf
push
pusha
lea
jmp
jns
jne
sub
inc
mov
add
mov
pop
or
out
shlb
cmp
sub
fidivrs
xor
movsb
vorps
jne
dec
std
addl
loope
dec
xor
jge
aam
xor
xchg
ror
cmp
out
push
loope
jp
test
out
rcrb
sub
ljmp
cmpsb
das
in
pop
je
adc
test
xchg
jae
je
push
lea
je
jmp
btc
sub
add
not
mov
not
inc
mov
jmp
pusha
pusha
mov
pushf
mov
mov
mov
pushl
ret
mov
mov
lea
movsbl
lea
pusha
mov
push
push
movl
call
call
test
or
pusha
pushf
call
pusha
and
pushf
jmp
lea
je
jbe
btc
bsr
add
ror
sub
mov
not
shr
sub
sbb
mov
bsr
rcr
neg
add
movzbw
not
add
sar
mov
bt
push
shr
pushl
clc
call
notb
adc
or
pop
mov
popf
jnp
xchg
js
add
mov
xchg
push
xor
and
movsl
add
mov
test
jmp
ja
and
mov
mov
clc
imul
dec
lds
fs
je
clc
pusha
or
pusha
push
lea
je
sub
xor
test
btc
dec
mov
aam
lea
shl
shr
mov
adc
bsr
shr
adc
add
mov
call
lea
pusha
lea
pop
movzbw
mov
pushf
call
pushf
lea
call
call
add
stc
ror
stc
cmp
sub
call
pusha
jmp
mov
or
and
stos
cmp
imul
imul
mov
iret
in
sbb
push
lds
push
ds
dec
mov
cmp
out
clc
mov
ja,pn
push
scas
xor
dec
pop
mov
cwtl
call
mov
mov
fs
xchg
jge
sbb
mov
shrb
jp
loope
outsl
mov
mov
mov
xor
xor
sub
xchg
cmp
fisttps
loopne
mov
and
fwait
sbb
jl
stos
push
sbb
out
popa
pop
loopne
test
cmp
daa
add
lcall
addr16
lcall
jae
movl
push
stc
and
cmc
add
push
push
pushf
pushf
lea
jmp
lods
cli
sbb
sub
jmp
jae
scas
fcmovnb
inc
pop
jp
cmpsb
decl
inc
cmp
mov
loopne
mov
inc
mov
rclb
into
sbb
fnsave
vpandn
js
pushf
push
daa
cmp
ret
aad
mov
adc
or
push
insb
test
cmpsb
bound
test
jae
scas
jp
jno
push
fmuls
xchg
sub
sbb
ds
fstpl
fisttps
ljmp
mov
inc
add
cmc
test
cmp
repnz
jmp
xchg
push
sub
jae
js
dec
stos
jbe
movsl
out
loopne
inc
add
das
push
add
jg
jb
cltd
xchg
add
adc
adc
sahf
lods
add
inc
imul
dec
out
sub
cltd
addr16
lea
lds
push
lods
aad
and
or
pop
sbb
add
cmp
xchg
cli
xor
xchg
jl
push
mov
ja
adc
push
ret
jg
cmp
mov
add
mov
cmovp
push
les
jb
dec
shrb
ret
inc
mov
cmc
test
bt
pusha
cmpb
mov
push
lea
jne
inc
xor
aas
setle
btc
movzbw
mov
test
stc
adc
neg
add
mov
add
inc
mov
push
test
cmc
pushf
test
pushf
jmp
or
or
lds
mov
mov
cld
sub
dec
cmp
decl
adc
daa
xor
sub
cmp
sbb
mov
sub
adc
insb
pop
xlat
xor
dec
pop
cwtl
adc
scas
sub
mov
dec
dec
lret
jecxz
pop
xorl
cmp
push
lret
push
jne
sarb
dec
es
add
push
lret
fcompl
xchg
add
sbb
pop
frstor
pop
repz
sbb
push
sub
inc
loope
popw
shr
pop
aam
das
cmp
icebp
xchg
pop
sbbb
jne
pop
push
dec
push
mov
push
push
icebp
lea
jae
pusha
mov
inc
inc
pusha
not
mov
call
sbb
sbb
or
stc
test
xchg
xchg
fcoms
inc
shrd
jle
dec
sub
mov
xor
mov
mov
lcall
sbb
aas
lods
ret
xchg
mov
and
dec
outsb
adc
loope
cmpsl
xchg
pop
movsl
mov
in
enter
mov
je
mov
fstps
cmp
mov
das
or
or
mov
push
std
out
ret
sub
dec
or
in
push
int
loop
and
test
sub
jb
ret
jle
lock
subb
jns
mov
sbb
ds
je
imul
imul
cltd
sahf
mov
jp
mov
pusha
fldt
cmp
stos
lret
sbb
repz
sbb
ljmp
es
pushf
mov
lea
ja
push
mov
lea
call
pushf
pushf
adc
call
test
pushl
call
bt
cmc
xor
cmp
bt
call
jmp
clc
movzwl
pusha
sbb
mov
test
jmp
inc
jne
movsl
pop
sbb
movsl
pop
insl
jne
cmp
pop
aas
mov
test
mov
jb
sub
inc
xor
push
mov
inc
imul
js
enter
pop
xchg
aas
sub
jae
pop
cmc
xchg
mov
call
adc
xor
cmp
add
inc
gs
inc
add
movl
sgdtl
shld
pusha
movzbw
mov
call
lea
jb
call
push
cmp
add
movb
pusha
pusha
movw
lea
jmp
mov
pushf
call
mov
or
mov
ljmp
mov
test
xlat
into
pop
test
aad
pop
xchg
dec
call
add
out
shll
clc
mov
mov
xor
fst
les
add
fistps
sbbl
hlt
and
fisttpl
dec
decl
jp
or
or
push
ret
shrb
sub
add
lea
cmc
mov
cmp
fnsave
inc
xchg
sub
xorl
loopne
inc
int
movsb
mov
out
xchg
sarb
outsb
and
popa
sub
lea
out
push
hlt
inc
out
rclb
xchg
into
jae
jg
stos
mov
cmpsl
shrl
test
or
adc
fs
or
pushf
lea
je
mov
jmp
sbb
or
or
push
xchg
out
cmp
iret
cmp
fsubrl
xor
test
addl
orl
cmp
jae
mov
vpcmpeqb
std
cs
or
pop
stc
out
cltd
rcrb
lock
adc
enter
mov
xchg
out
mov
mov
push
and
push
and
push
pusha
mov
and
insl
xor
sbb
sub
out
and
jo
mov
repnz
ljmp
loopne
cwtl
repz
xchg
fsubs
lock
enter
push
hlt
add
and
add
xchg
mov
iret
xlat
pop
daa
leave
test
xor
ret
xchg
decl
cli
shl
push
popa
inc
ss
or
call
sbb
mov
loopne
pop
aaa
mov
adc
imul
mov
call
pop
lods
jmp
jb
push
inc
scas
adc
xlat
clc
pop
sub
cli
mov
dec
cmp
jno
dec
dec
fdivrl
cmp
push
iret
mov
pop
jle
xchg
gs
lock
iret
mov
insb
mov
adc
cmpsb
shrl
test
gs
cmp
sarl
or
loopne
cmp
std
mov
ljmp
fnstcw
in
cmp
push
lods
pop
add
add
cwtl
movl
adc
mov
mov
pushl
ret
pusha
pushf
lea
call
pusha
jmp
pusha
jmp
pusha
movl
pushf
pushl
movl
pusha
push
pushl
pushf
lea
jmp
pusha
repnz
pusha
jmp
mov
mov
push
pushl
pusha
pushl
ret
loop
xchg
pop
sub
xchg
add
stos
mov
imul
mov
fnstsw
sti
push
xchg
lret
dec
adc
int
into
inc
aaa
hlt
orb
int3
pushf
test
xor
addl
adc
jo
fistl
and
push
pop
outsl
mull
ss
lods
xchg
push
dec
out
jg
cli
inc
in
fldt
pop
mov
xchg
in
jno
or
push
insl
roll
iret
and
adc
sbb
out
xchg
pop
jbe
rclb
and
mov
movb
xchg
aam
incl
lds
jle
addl
add
push
pushf
call
setns
pusha
pop
movzbl
mov
not
movsbw
mov
lea
mov
pusha
movsbw
mov
pushf
bswap
lea
jns
pop
push
pushl
ret
add
pushl
cmp
test
call
xchg
jmp
out
push
push
sub
aam
popl
mov
scas
scas
cwtl
les
sbb
cwtl
mov
sahf
in
test
lock
fldenv
adc
mov
and
insl
sub
cmp
xorl
test
and
push
incb
into
jbe
push
iret
arpl
loope
adc
in
xor
dec
insb
adc
loop
imul
jecxz
push
push
sub
aam
jno
hlt
adc
pop
imul
add
or
lar
lret
sub
subl
pop
xchg
add
xor
dec
xor
jmp
sti
dec
out
pop
or
sbb
xchg
xor
mov
scas
cmp
popl
cmp
repnz
mov
std
sbb
popf
mov
inc
xor
and
sub
in
xor
jo
lods
lock
test
jecxz
jle
gs
aas
add
fadds
dec
rolb
cmp
push
xchg
jb
push
into
cmpsb
sbb
mov
push
mov
push
jnp
jg
xchg
mov
js
scas
loope
inc
and
sbb
call
push
mov
enter
aad
adc
mov
xchg
xchg
pop
in
fnstenv
push
leave
inc
inc
aad
adcl
jp
orb
fdivrp
fiadds
call
xchg
add
pusha
mov
outsl
jo
cmp
shlb
jns
xchg
aad
cwtl
ret
inc
inc
out
imul
mov
xor
push
dec
jecxz
icebp
mov
nop
push
inc
pop
pushf
and
loopne
mov
jae
add
or
sub
pop
enter
roll
add
sahf
js
push
arpl
mov
sbb
scas
and
pop
arpl
ficoms
sub
inc
rcll
sub
jbe
outsb
lock
and
mov
aam
mov
into
sti
jg
lods
ss
mov
push
sbb
les
jne
fwait
sbb
data16
push
insl
sbb
outsb
call
mov
sbb
mov
add
stos
js
daa
push
lods
mov
movl
push
pop
add
je
popf
cmp
pop
cmpsb
inc
sub
je
loope
push
cmp
cmp
pop
outsl
das
stos
gs
lea
inc
sbb
xchg
stos
mov
stos
sbb
es
and
icebp
cmp
cmp
mov
out
sbb
test
or
push
into
sub
jp
push
sarl
sarb
out
popf
pushl
repnz
fwait
or
fildll
out
pop
mov
movsb
cmp
or
pushf
mov
inc
xor
mov
jbe
inc
mov
and
pop
push
mov
enter
add
sbb
dec
movb
sub
add
inc
test
mov
sbb
xor
or
inc
or
dec
add
rclb
negb
add
cmpsl
xchg
xchg
push
pop
andl
xchg
xchg
xchg
or
fcoml
push
int3
out
rcrb
paddq
mov
stc
mov
xor
mov
mov
adc
ja
xchg
leave
mov
movsb
add
jge
push
pop
loopne
nop
in
movsl
add
stos
xor
call
adc
dec
cmp
in
data16
fdivp
in
mov
cmpl
scas
faddp
in
adcb
outsb
insb
xor
push
sub
sub
sti
je
add
sub
lods
iret
or
mov
inc
insl
lea
jne
pusha
push
mov
push
mov
movb
pushf
mov
call
add
add
or
and
mov
popa
mov
cmp
bound
test
aaa
push
and
cmpsl
add
pop
in
jmp
or
repz
aaa
or
or
cmpl
mov
pop
push
mov
ficoms
bound
cmp
cli
outsl
jo
mov
shll
pop
out
mov
stos
sti
dec
scas
outsb
stos
jb
or
inc
fidivl
mov
add
xlat
dec
xor
js
in
ja
inc
dec
cmp
out
push
ret
sbb
je
icebp
jmp
js
jge
add
or
outsb
cmp
sub
push
mov
pop
pop
jns
or
js
cmpsl
jns
add
cltd
enter
mov
aas
dec
or
mov
fwait
ljmp
std
add
or
fwait
mov
sub
pop
iret
cmp
jg
add
pop
sbb
xor
in
lcall
lret
push
pop
pop
js
xchg
cmc
test
jns
dec
or
add
and
jne
cli
cmpl
in
add
push
outsl
sbb
cmovl
movl
lock
dec
dec
fistl
xchg
loop
bound
jbe
jle
mov
mov
sbb
jae
jb
pusha
fwait
mov
enter
fstps
test
sti
pop
inc
push
adc
jg
loop
test
fiadds
bound
dec
cld
or
or
and
mov
aad
xor
cld
sbb
fimull
jp
sti
mov
in
lret
lods
xchg
daa
out
popf
adc
cmpsb
ljmp
into
xchg
inc
add
add
adc
adc
cmpsl
rol
pusha
sarb
adc
inc
orl
mov
push
mov
ret
stos
in
fstl
test
and
iret
cmp
mulb
mov
shr
cmp
insb
loopne
inc
test
movsb
lds
int
sub
jnp
cmp
loope
jnp
mov
lock
mov
push
jle
stc
out
out
adc
mov
add
xor
icebp
lea
jne
bswap
movzbw
cwtl
mov
pushf
lea
jmp
mov
add
or
mov
fistpll
clc
cmc
dec
xchg
data16
inc
dec
add
and
xor
int3
in
mov
jb
push
add
pop
xchg
push
ds
cmpb
movsl
add
lret
push
jns
xchg
gs
popf
xor
xchg
and
ficoml
fistpl
and
jecxz
pop
pop
movb
add
xor
aaa
cmp
or
xor
add
mov
jmp
mov
cmp
ret
sub
cmc
lock
jge
sub
xchg
loopne
jb
aaa
cmp
lret
xchg
add
mov
movsl
adc
xor
mov
out
ja
or
daa
mov
cmp
dec
sub
mov
mov
jp
sbb
push
enter
and
and
imul
ret
or
sahf
int
fadd
in
mov
push
sub
adc
lret
ds
mov
pop
cmp
test
data16
aas
mov
scas
jns
repnz
sub
rclb
mov
mov
or
sbbb
ret
mov
jl,pn
leave
ret
js
das
add
add
test
test
or
fcoms
sbb
push
adc
cwtl
les
fimull
push
loop
xchg
sbb
outsl
fisttpl
bound
ret
adc
insl
leave
adc
mov
push
or
mov
fcomp
add
and
jbe
cwtl
ljmp
pop
sub
es
or
or
sbbl
mov
lcall
aad
addr16
push
mov
outsb
xlat
xor
inc
sub
outsl
xchg
and
sbb
test
pop
je
icebp
insl
je
adc
xchg
pop
leave
icebp
jge
add
bound
pop
rcrl
jo
decl
sbb
movsb
push
pop
cmp
rcr
int3
mov
jo
dec
hlt
pop
pop
mov
mov
in
add
movsl
push
sbb
into
outsb
into
inc
inc
pushf
cmc
test
cmpb
pushf
call
sti
cli
sbb
sub
sbb
insb
lods
imulb
mov
push
in
loope
and
scas
mov
imul
and
push
sub
sub
movsl
xchg
push
mov
and
sbb
test
push
dec
pop
add
sub
mov
ror
leave
and
and
int
mov
cmp
and
call
jmp
xchg
add
mov
add
fidivl
add
stc
mov
sarb
dec
js
mov
aaa
outsl
int3
xchg
xchg
dec
fsubrl
jecxz
mov
jecxz
cltd
cltd
addr16
and
xor
ja
ret
xchg
cs
mov
push
call
lea
ja
seto
sar
stc
sbb
sub
shr
add
pushf
inc
rcl
mov
and
sbb
push
mov
pusha
bt
movb
add
jle
repnz
pusha
jmp
pushl
popl
movzbw
lea
jo
movsbw
push
jmp
push
adc
pushf
pushf
mov
lea
call
push
jmp
lret
cld
sub
sbb
cmpsl
jo
in
cmp
out
xor
dec
adc
adcb
push
inc
in
mov
sbb
sub
pop
aas
out
stos
xchg
mov
nop
add
mov
mov
rorl
enter
ja
insb
pushf
movw
mov
movl
movb
call
push
call
lea
ja
push
mov
add
lea
push
or
pushf
call
inc
fdivl
sti
sub
xor
out
xchg
das
inc
ret
mov
mov
sti
aam
add
insb
popf
fstl
and
jg
sub
inc
xchg
ja
inc
out
or
outsb
call
xchg
lahf
ljmp
add
push
int
fidivrl
lret
jmp
mov
cmp
mov
mov
scas
xchg
rorl
fsubrl
je
mov
add
mov
cmp
pusha
call
xor
sti
sub
popa
adc
push
or
xchg
adc
jmp
fcompp
iret
and
repnz
jno
and
xchg
fxch
xor
add
push
icebp
fistl
pop
mov
out
jmp
and
add
ljmp
dec
iret
dec
pusha
pushf
push
cwtl
test
pusha
inc
jnp
das
push
mov
or
ja
cmp
xchg
pop
pop
sbb
push
psubw
sbb
cmc
mov
xchg
loop
sub
loopne
lret
mov
out
jb
scas
cmpsb
inc
mov
cli
sub
push
testb
push
and
je
enter
mov
ret
fldl
iret
insb
add
add
movsb
mov
add
scas
in
dec
mov
pop
aam
pop
or
jnp
mov
cmp
pushf
int3
repnz
loope
inc
sub
cwtl
fcmovb
cmp
and
mov
lcall
mov
inc
outsl
push
pop
mov
push
mov
mov
lea
je
pushf
bt
clc
add
test
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
inc
aad
xor
mov
sbb
cmp
das
xor
or
add
cmp
pop
out
sub
outsb
mov
ret
ret
xlat
add
popa
je
push
outsb
cmp
roll
cld
es
addr16
fldl
movsl
cmc
adc
push
mov
jl
aam
xor
pop
lock
cli
outsl
mov
stc
sub
shr
push
rcrb
ljmp
test
rcrb
ja
dec
iret
jmp
sbb
add
jmp
fs
xchg
inc
add
cmp
out
icebp
inc
sbb
call
add
notl
cli
je
jp
xchg
inc
cld
les
lods
lea
and
dec
stos
test
shlb
xchg
shlb
pop
stc
loopne
addr16
out
outsl
clc
pop
imul
or
movsb
rcll
mov
pop
push
into
xchg
inc
pop
cld
mov
mov
aas
push
arpl
bound
pop
test
xchg
subl
cmpsb
xchg
andl
sti
inc
and
ret
pusha
push
out
jns
scas
sub
dec
add
decb
pushf
test
mov
push
mov
mov
dec
fcoms
out
adc
xchg
dec
mov
pop
jae
mov
repz
sahf
push
mov
dec
call
mov
jnp
mov
insb
pushf
lea
jne
or
shl
bts
mov
rol
sub
bswap
bts
sar
mov
stc
call
lea
jne
bswap
jmp
call
pop
pushf
push
movl
push
pusha
movl
pusha
push
movb
lea
jmp
test
cmp
jmp
push
imull
or
sub
adc
jl
lods
fstl
jns
fcmovnb
out
fstpt
adc
imul
iret
fsubp
sub
dec
out
xchg
inc
push
pop
dec
je
mov
and
insl
and
add
push
in
jle
call
sub
cmpsb
xor
mov
pop
aaa
lock
fldenv
push
sub
not
fld
aas
stc
sub
xor
pop
cmp
fnstenv
mov
mov
mov
ret
pushf
fdiv
jb
fisubrs
shll
mov
fistpll
lahf
lds
jb
lea
test
xchg
or
add
mov
dec
xchg
fwait
cmp
mov
mov
add
pop
dec
jns
inc
push
clc
mov
xchg
cld
dec
push
adc
stos
cmp
pop
push
push
pushf
daa
pop
xlat
notl
inc
in
xchg
pop
popf
xchg
movsl
or
daa
or
dec
xlat
mov
or
fimuls
lock
stc
sub
sub
pushl
pushl
popl
cmc
call
jmp
call
pusha
pushf
lea
push
jmp
push
jecxz
sub
mov
mov
movsb
mov
mov
push
sbb
movsb
std
enter
mov
adc
sbb
out
ja
and
addr16
jne
add
cmp
add
ds
rorl
stc
sub
xchg
mov
hlt
nop
xchg
imul
cmp
stos
add
jecxz
adc
mov
out
nop
insl
mov
stos
jp
pop
mov
jmp
adc
push
sbb
insl
clc
pop
insb
out
pop
pop
call
sub
in
dec
leave
xchg
nop
not
sti
pop
xor
inc
ret
pop
faddl
and
push
inc
sub
mov
ss
enter
mov
or
push
cmp
pop
push
in
ja
cmpsl
mov
ljmp
xchg
xor
xchg
mov
mov
cmpsb
or
add
rclb
std
mov
scas
inc
dec
mov
imul
scas
int3
dec
cltd
mov
add
sarl
mov
dec
add
lock
adc
sbb
dec
xor
xor
jns
lds
fdivrl
jecxz
adc
adc
inc
fwait
in
push
mov
sub
gs
add
dec
test
push
out
inc
fistpl
add
xchg
push
push
clc
scas
rcll
cmp
cmp
add
pusha
cmp
test
add
sbbl
add
cmc
cmp
cmp
push
lea
ja
mov
push
inc
lea
seto
mov
pusha
mov
inc
lea
push
xchg
sub
jmp
clc
xor
push
lea
call
call
pushf
xchg
bswap
sete
movzbw
pusha
mov
lea
bswap
lea
mov
push
call
ja
mov
pop
pusha
movzbl
mov
mov
lea
bswap
mov
bswap
pop
pusha
jmp
push
lock
std
std
mov
xchg
outsb
scas
mov
ret
jnp
rolb
lret
bsr
xor
pop
stos
ss
pop
lahf
pushf
jge
jl
in
or
out
cmp
pop
pop
into
add
loop
sub
test
std
xchg
mov
mov
inc
in
xchg
push
mov
push
cmc
out
ficomps
in
or
enter
aad
call
add
xor
sub
lcall
mov
sub
addr16
and
mov
mov
mov
jbe
dec
adc
fs
insl
xchg
test
mov
stos
push
fadd
fldt
jns
pop
cs
add
clc
or
lock
mov
jp
ficoms
test
and
pop
aad
push
ljmp
repz
cld
cmp
mov
ret
cmp
sub
insl
xor
out
or
or
push
cld
pop
jp
xchg
repnz
push
dec
jle
push
sub
pop
xchg
xchg
mov
cltd
jecxz
cmp
inc
lock
xor
sub
sub
jg
lds
pop
stos
xlat
push
icebp
inc
add
jp
mov
xchg
xchg
dec
jns
pop
pop
cmp
std
sub
xor
int
lods
lea
fists
fs
mov
mov
es
mov
dec
xchg
xor
shr
enter
mov
dec
pop
sarb
pusha
dec
arpl
fwait
pminub
inc
imul
icebp
xor
xor
loope
fcmovb
pop
in
notb
js
and
mov
repnz
arpl
sub
xchg
mov
pop
mov
movsb
cmp
outsl
lahf
loopne
std
cs
add
ret
jbe
mov
imul
cmp
mov
leave
dec
aas
fists
xor
jge
pop
xchg
das
pop
or
dec
add
mov
mov
orb
mov
dec
inc
dec
lds
sub
cmp
ds
adc
insb
xlat
fs
push
lea
jmp
lea
je
jmp
and
inc
icebp
sub
inc
xchg
push
out
cmovl
adc
mov
ljmp
jnp
jl
test
xor
dec
in
pop
and
push
ja
dec
shlb
xor
pusha
mov
stos
lock
addr16
push
add
mov
sbb
jl
mov
add
ror
inc
push
sbb
xchg
popa
scas
and
mov
inc
outsl
mov
stos
ss
mov
cmc
outsl
cwtl
and
scas
and
sub
pop
jmp
or
arpl
and
adc
scas
fimuls
jns
sbb
inc
aad
mov
psubw
loopne
dec
out
add
xchg
push
sub
or
or
repz
jnp
fdivrs
stc
mov
out
call
or
shr
cltd
jmp
mov
stc
pop
jl
sub
repz
hlt
lock
inc
xor
jnp
cmp
lret
or
mov
push
rol
sbb
hlt
lcall
pop
or
ja
adc
pop
ds
inc
and
in
add
dec
aam
sub
adc
negb
ret
out
aam
into
add
xor
fwait
mov
add
mov
jnp
and
sti
mov
stos
lret
stc
add
push
popa
je
inc
imul
jae
add
inc
and
out
movw
pushf
lea
call
pushf
mov
pushf
push
pushf
pusha
lea
jmp
lea
jne
jmp
push
lea
jne
call
add
clc
movb
ror
pusha
pushf
not
cmp
push
cmp
bt
mov
pushf
add
stc
stc
cmc
test
jmp
mov
bsf
bsf
sub
rol
shl
mov
pushf
clc
stc
sub
pusha
pushl
popl
pusha
mov
cmp
pushf
lea
ja
or
cmp
pusha
sub
movsbw
add
rcr
sub
add
cmp
shr
mov
mov
shr
not
pushf
mov
bt
repnz
jmp
movsbw
bswap
movzbw
movb
not
push
lea
pusha
pushf
lea
call
stc
shr
pusha
lea
jb
push
pushf
lea
je
jmp
cmp
stc
pushf
or
movb
lea
jne
rol
mov
call
stc
pusha
add
jmp
xor
sub
or
jmp
mov
pop
lret
xchg
pusha
pushf
aam
fdivl
mov
mov
aaa
test
jbe
adc
xchg
shlb
jnp
flds
mov
lret
lea
in
stos
mov
pop
push
leave
data16
mov
repnz
pusha
stos
jnp
insl
xor
inc
inc
pusha
dec
mov
xor
push
cmp
les
sbb
imul
fs
pusha
pushl
ret
cwtl
mov
bt
pusha
shl
pushf
lea
je
pusha
mov
mov
call
jmp
push
cld
push
out
sub
push
xchg
adc
xchg
jg
out
jle
insl
out
in
js
in
and
sbb
xchg
push
lret
sbb
js
shl
sbb
fptan
aam
push
dec
lods
dec
pop
sbb
stos
dec
cltd
xchg
jbe
dec
fsts
outsl
inc
add
aaa
sbb
sub
mov
sbb
mov
and
js
cmp
sub
stc
not
cmp
test
bt
sub
jp
xor
bt
clc
cmp
not
push
bt
bt
add
pushf
rol
pushl
clc
cmp
pushf
lea
not
mov
mov
pusha
pushl
call
int
in
sub
pop
jge
fldt
and
xcrypt-cfb
cmpsl
cmpsb
jno
stc
jne
push
jg
dec
cmpsb
sbb
ja
orl
cmp
jae
and
out
outsl
mov
sarb
sti
fldenv
xchg
ljmp
mov
and
jb
orb
and
out
test
xchg
mov
sub
int
in
enter
mov
int3
fwait
ret
in
je
test
hlt
xor
lods
daa
test
testb
pop
lahf
push
xchg
mov
mov
cwtl
mov
leave
xchg
push
fcompl
aaa
jne
dec
aas
dec
hlt
in
out
cmp
pusha
lea
je
pushf
stc
cmp
cmp
cmp
pushl
movb
mov
pushf
lea
je
pushf
pusha
pushf
lea
jmp
push
pushf
lea
jne
rcr
mov
pusha
clc
clc
add
call
cmp
push
jmp
ds
test
push
js
pop
pop
fildll
and
out
add
fldpi
jbe
iret
popf
cmpsb
push
push
in
push
sbb
pop
dec
enter
bound
jbe
sub
mov
inc
insl
lret
and
mov
add
mov
sub
test
mov
lcall
int3
daa
dec
xchg
mov
inc
inc
jne
sub
fptan
movsl
push
cmpsb
cmp
xchg
loope
jno
inc
lcall
sub
mov
or
dec
xor
jge
repnz
xchg
inc
mov
loopne
lret
movsl
cmp
sbb
loope
inc
sbb
jbe
sbb
test
pop
jle
inc
std
xor
sub
ss
aam
pop
jbe
mov
test
adc
shlb
aas
lret
sub
dec
lahf
fcoms
push
push
aam
repnz
mov
mov
xchg
jl
sbb
js
insl
sti
movsb
xchg
push
cmpsb
xchg
xchg
aad
sbb
xchg
or
das
ret
or
inc
scas
aaa
inc
xchg
in
fsubrs
inc
fnstenv
xlat
test
rcrl
xor
mov
xchg
xchg
cmc
mov
inc
ja
sti
mov
sbb
lret
or
and
xchg
loope
rep
jmp
movsl
inc
cmp
sar
xchg
jb
pop
lret
test
cwtl
in
ljmp
data16
std
jmp
shrl
imul
cli
jno
rorb
dec
cld
mov
je
cmp
fwait
mov
pop
or
fwait
push
loopne
into
ds
jmp
mov
pusha
fwait
pop
hlt
pop
pop
fmulp
push
icebp
mov
mov
loopne
xor
cmp
cmp
add
jmp
pop
addl
daa
push
stc
popa
arpl
xchg
sub
fdivrl
mov
repnz
adc
iret
out
push
ljmp
call
push
sub
sbb
call
mov
xor
cli
repnz
cmp
xorb
mov
mov
into
jl
imul
lahf
jl
in
sub
ror
sub
jnp
test
clc
shr
pusha
lea
je
push
adc
mov
pusha
lea
jmp
push
pusha
movl
push
lea
jmp
pushf
pushf
pushf
adc
pusha
call
jmp
pop
sbb
jmp
xchg
rorb
inc
rorb
lcall
lea
mul
jbe
cmpsl
lods
dec
xchg
int3
pop
xor
xchg
pop
aaa
repz
cmc
lds
and
add
inc
les
mov
jecxz
mov
mov
jns
mov
sahf
mov
xor
or
mov
call
sbb
jp
imul
mov
xchg
arpl
lcall
outsb
cmp
mov
adc
inc
adc
dec
rcr
faddp
xlat
lahf
lods
sti
fwait
pop
test
pop
ret
dec
popf
fiaddl
pushw
add
insb
xor
int3
pop
shr
bound
rorl
sbb
lds
dec
cmp
js
mull
fbstp
jp
aam
sbb
add
pusha
jl
jg
insl
sbb
ja
mov
andl
inc
insl
cmp
adc
lahf
lock
sub
sbb
popa
sub
xchg
pop
arpl
dec
in
and
mov
insb
cmc
bound
test
ret
xchg
lahf
jne
dec
pusha
pop
sub
sub
loopne
jo
or
repnz
bound
mov
imulb
out
add
push
scas
rclb
fstpt
outsb
loope
mov
mov
jbe
hlt
loop
pop
int3
test
push
and
arpl
leave
pop
and
pop
scas
dec
movsl
mov
xchg
jno
jmp
call
cmc
bswap
cmc
mov
cmp
cmp
cmpb
jmp
cmp
push
pushf
pushf
movb
lea
ja
push
push
imul
clc
call
pusha
mov
call
jmp
pushl
mov
mov
pushl
ret
push
dec
dec
push
inc
push
dec
cs
insb
add
xchg
add
call
mov
xchg
lea
pushf
not
pushl
movzwl
call
mov
movl
push
jmp
in
adc
cmc
sbb
mov
push
add
leave
mov
xlat
pop
mov
mov
and
adc
mov
aad
out
xor
popf
xor
jne,pn
nop
pop
stos
xor
mov
adc
dec
aad
mov
mov
fmuls
cli
or
ret
jge
ljmp
ja
rcl
fs
mov
mov
mov
into
or
inc
and
movzbw
movsbw
movzbw
not
movl
not
call
stc
ror
pusha
not
bt
call
cmp
jmp
movl
pusha
mov
call
mov
pushf
push
jmp
bswap
not
mov
pusha
pushf
mov
movzbl
call
jmp
push
repz
sub
push
and
cltd
inc
pop
pop
jnp
sarl
lret
sub
mov
repz
and
push
fcmovne
out
inc
in
lret
xor
out
sbb
or
lcall
repnz
pop
jle
add
aad
or
jg
mov
leave
jo
sub
mov
repz
sarl
jle
cli
arpl
push
gs
dec
sbb
jle
inc
fwait
adc
addb
addb
addb
fildl
adc
add
add
add
add
pop
adc
add
add
add
inc
inc
dec
xor
cs
insb
add
push
jne
sub
inc
jecxz
std
mov
xchg
popa
jg
cmp
cmp
loopne
mov
mov
popl
mov
mov
aas
lds
lcall
or
cmp
mov
cmp
or
jnp
mov
ljmp
mov
mov
or
js
movsl
ret
fstps
cmp
and
movb
push
pusha
movl
pushf
pushl
pusha
lea
jmp
pusha
push
lea
jb
pusha
pusha
pushf
pushl
ret
movb
movb
call
mov
sub
int
cmp
cmp
xor
and
jne
icebp
adc
dec
xchg
std
xchg
loopne
xchg
sub
iret
pusha
popa
dec
lcall
dec
cltd
rolb
xchg
sub
jmp
fs
jecxz
add
aas
mov
or
push
imul
add
mov
daa
adc
mov
daa
cltd
cld
rep
inc
inc
jmp
cmp
mov
outsl
inc
mov
out
ljmp
pop
mov
lahf
mov
adc
pusha
xlat
bound
sbb
scas
lret
sub
or
lcall
shlb
shlb
mul
lcall
test
addl
mov
out
pop
xchg
shll
scas
cltd
dec
gs
or
adc
cltd
aaa
add
inc
cltd
mov
mov
sbb
lods
inc
aaa
pop
add
sti
mov
xchg
pop
int
or
fcomps
pop
mov
fstps
jo
cmpsl
fnsave
pop
cltd
test
cltd
popf
jnp
jne
jo
faddp
and
adc
dec
inc
insb
cmpsl
add
mov
pop
jp
mov
les
adc
jmp
mov
lahf
out
mov
repnz
shl
pop
jmp
push
or
stos
ja
cwtl
or
cmpsl
shrb
dec
and
push
fistpl
dec
and
lahf
test
mov
pop
dec
popa
mov
xchg
fwait
cmp
mov
adc
ja
arpl
mov
and
push
xchg
roll
das
and
std
hlt
movsl
arpl
stc
popf
cs
clc
lahf
xchg
mov
and
adc
jmp
fldl2t
or
pop
adc
mov
xchg
cmp
inc
pop
imul
nop
lahf
push
and
adc
cwtl
mov
jmp
cwtl
jno
mov
xchg
addl
ror
push
sbb
xor
sbb
and
aas
daa
add
inc
and
xchg
jge
test
shll
fsts
cmp
js
fcos
mov
test
ds
sub
and
xor
in
mov
std
or
pop
fstps
adc
push
notb
imul
jmp
ja
pop
xchg
lods
test
jb
jns
pop
pop
sub
fcmovb
subb
xor
add
andb
mov
or
jae
imul
cmp
pop
push
inc
jle
xor
idiv
mov
mov
mov
clc
popa
mov
push
push
icebp
sub
xor
fisubrl
int
dec
sub
mov
js
hlt
in
imul
fstpl
adc
hlt
leave
sub
jne
or
fsubs
jge
jae
jns
xor
sbb
lock
or
or
mov
sbb
rcll
or
pusha
xchg
test
jmp
and
addr16
jl
mov
pminsw
out
dec
lcall
jmp
inc
inc
mov
je
pop
fmull
bound
mov
out
loope
inc
mov
fstps
cmc
push
popf
rcll
loop
pop
xor
dec
outsl
dec
orb
or
jle
xchg
fld
cmp
flds
fcmovnu
mov
jmp
test
stos
daa
arpl
sbbb
daa
xchg
mov
test
pop
jmp
imul
pop
xor
outsl
mov
jge
adc
lahf
cmp
fistpll
xor
mov
and
arpl
sbb
mov
xchg
mov
push
imul
mov
mov
fbstp
xor
ret
xchg
fsubrl
cld
ret
sbb
fsubl
pop
cmp
and
mov
mov
ljmp
xchg
fsubl
out
adc
cmp
sbb
inc
mov
ret
and
sbb
insb
sbb
out
and
imul
inc
cmpsb
jl
cmpsb
mov
inc
test
mov
dec
stos
test
sahf
jmp
mov
jae
aaa
push
lret
cli
rcrl
rcl
out
and
rorl
push
sub
lahf
lcall
dec
out
fstps
movlhps
inc
cltd
push
in
push
pop
daa
jae,pn
fwait
xor
push
outsb
or
test
sub
xchg
dec
lahf
daa
push
in
bound
jae
addr16
outsb
add
lahf
cmp
push
push
cltd
add
pushf
mov
jbe
cltd
clc
and
xchg
scas
mov
cltd
and
push
jg
sahf
in
pop
pop
dec
bnd
jns
mov
xchg
sbb
scas
lods
push
mov
inc
mov
rcll
mov
and
loope
push
mov
stos
cmc
mov
dec
lods
jge
mov
mov
push
outsb
stos
popf
push
pushf
int
jmp
mov
lcall
push
sub
or
push
imul
or
and
jne
xchg
sub
and
ss
sub
popf
add
mov
leave
fstps
orb
ret
xchg
mov
in
leave
loope
sbb
pop
aad
xor
mov
cltd
push
or
in
inc
sbb
inc
mov
in
loope
stos
and
xor
pop
insl
cmpsl
mov
cli
pop
call
mov
or
test
jns
dec
negb
in
push
pop
mov
cltd
push
fbld
cmp
mov
jl
cwtl
out
xchg
push
xchg
push
cltd
cmp
mov
sti
cmp
xor
loope
pop
mov
jno
cs
adc
repnz
push
insb
sbb
fwait
mov
mov
inc
add
add
or
into
stos
push
leave
hlt
dec
lahf
adc
pusha
imul
jns
cltd
lret
mov
shll
cmpsl
dec
shlb
loopne
adc
cmpsl
test
push
insl
stc
jbe
inc
mov
es
fwait
rclb
dec
cwtl
addr16
fldl
cltd
and
orl
fwait
inc
in
and
cmpsb
imul
dec
lret
mov
cli
hlt
addr16
pop
mov
pandn
imul
and
imul
jg
cmpsl
loope
pop
xchg
test
sbb
ds
data16
es
lret
xchg
cltd
pop
sbb
mov
les
or
xor
hlt
add
shrl
pop
cltd
mov
push
ret
int3
mov
cltd
xor
inc
dec
or
mov
cltd
aad
stos
mov
loope
das
sub
les
mov
out
test
leave
in
mov
or
inc
dec
rolb
fidivl
leave
jo,pn
cltd
push
push
dec
mov
mov
ror
jl
cltd
xor
jae
inc
fld
ficompl
jg
negl
shl
xor
fwait
in
clc
lret
adc
popf
xor
pop
push
fwait
jmp
insb
jbe
fcoml
cltd
xchg
jae
popa
add
add
jg
out
cltd
push
push
adc
cmp
add
pop
iret
push
hlt
sub
cltd
cmp
push
imul
mov
cli
xchg
cltd
pop
push
in
lcall
lahf
cs
lcall
or
sbbl
fwait
js
or
in
mul
sbb
sub
fwait
or
aam
push
adc
pop
sahf
adc
push
std
fwait
insb
iret
cmc
cmpsl
aaa
sub
push
into
movsl
xchg
cltd
jae
add
pop
es
roll
or
xor
lahf
push
add
cwtl
xchg
enter
int
es
inc
cltd
jo
sub
mov
and
popf
mov
inc
xor
lcall
adc
mov
in
push
in
rol
iret
mov
aam
ficompl
sbb
add
mov
jbe
jae
push
stos
mov
je
cmpsb
leave
push
jl
aad
sti
mov
rolb
rcrl
jns
fistpl
xchg
lret
pop
cli
mov
imul
out
jbe
ret
adc
outsb
push
aas
pop
jns
cltd
fs
ds
jg
mov
mov
fdivl
aas
out
jne
iret
js
rcrl
ljmp
inc
xor
sarl
cltd
pop
mov
js
mull
xchg
scas
cltd
movsl
shlb
cltd
outsl
xchg
fisttps
lret
lahf
mov
xor
mov
leave
xchg
pop
popf
or
jp
xchg
aas
fucomip
cmp
fdivrl
rcrb
pop
cltd
jae
rcrl
jns
mov
cmp
xchg
frstor
js
or
mov
das
sub
mov
and
daa
inc
cltd
enter
loop
scas
outsb
lahf
jb
cmp
jp
rclb
push
mov
or
outsl
daa
or
cltd
aad
lds
inc
or
cltd
mov
inc
lea
sti
and
push
pop
inc
pushf
pop
adc
xchg
in
lock
mov
stos
xor
pop
imul
aad
test
xchg
lcall
mov
lcallw
fwait
lods
ss
std
fs
jp
xorb
and
test
adc
push
nop
je
mov
cltd
jecxz
mov
mov
or
jne
jnp
stos
add
inc
pop
adc
test
cltd
mov
clc
push
cltd
xorl
jae
icebp
jmp
lret
mov
xchg
dec
push
mov
imul
sub
cmp
jno
sub
push
xchg
cwtl
add
jle
mov
fwait
inc
fcmove
in
xchg
lock
sbb
cmp
sbb
roll
ficompl
inc
sub
add
sub
jno
aad
fdivrs
cmp
pushf
shll
xor
and
cltd
test
imul
fdivl
lods
lcall
rorb
mov
out
insl
and
xchg
jne
rorb
lret
mov
cmp
xchg
add
ljmp
ret
out
add
mov
xlat
cmp
jl
sub
fnstsw
lcall
xor
hlt
stos
loope
sti
lods
cmpsl
xor
mov
pop
lret
out
scas
sbb
xchg
xchg
sbb
clc
gs
or
rcrb
mov
dec
and
dec
adc
xchg
xor
xchg
xlat
cltd
fildll
std
xchg
adcl
lcall
psubb
sbbl
or
xorl
jmp
scas
jns
hlt
fwait
cmp
call
lret
inc
fldcw
or
test
cmp
hlt
bnd
mov
ds
and
xchg
jmp
mov
sub
inc
leave
xchg
adc
inc
and
xchg
aas
xchg
inc
push
adc
xchg
dec
xchg
roll
dec
in
sbb
xor
scas
je
aad
sub
fwait
imul
es
and
sbb
xchg
or
enter
in
push
adc
pop
add
push
push
adc
fidivrl
rorb
test
aad
setge
stc
xor
or
mov
dec
sub
sub
add
sets
mov
jmp
pusha
push
movl
pushf
pushf
pushf
pushf
lea
jmp
loope
fsubrs
or
and
push
stos
mov
mov
jge
mov
cmp
mov
mov
in
js
and
pop
adc
and
sub
mov
repnz
sbb
imul
and
lea
repnz
jb
adc
and
xlat
sub
dec
sub
jne
nop
cmpsl
inc
sbb
into
ljmp
mov
shlb
out
and
jne
aas
in
xchg
dec
lcall
fistpl
lea
cmp
les
mov
push
inc
xchg
jg
sbb
mov
popa
jge
dec
pop
xor
fstl
mov
loop
nop
stos
out
dec
xchg
loope
dec
aaa
pop
jle
ret
stos
inc
subl
dec
imul
fdivs
add
loop
fldl
mov
fisttpll
cmp
mov
sub
xor
sbb
mov
pop
jge
push
mov
inc
repnz
mov
adc
cli
lods
int
pop
stos
push
cwtl
add
jge
int3
inc
ret
dec
jo
adc
lock
pusha
xchg
sbb
push
in
shrb
xor
out
add
mov
movsl
rcrb
out
jge
jae
xorb
icebp
push
call
mull
sub
xchg
shl
lods
sub
sbb
sbb
xorl
add
sbb
cmp
mov
rcll
out
test
and
ret
mov
sub
addr16
xlat
inc
test
in
sahf
cli
roll
gs
lea
or
test
mov
jb
add
mov
xlat
fst
and
aam
ret
movsb
jno
or
jo
mov
lea
jmp
pushf
pushl
lea
ja
push
imul
lea
jne
pushf
pusha
test
add
pusha
lea
jmp
lea
call
pushf
call
lret
aad
or
dec
sbb
xchg
mov
loope
ja
xchg
inc
movsl
mov
ret
int
cs
cmp
adc
dec
pop
mov
cwtl
pop
mov
movsb
or
mov
das
cmp
sbb
cmpsl
dec
mov
int
pop
and
out
je
mov
ret
lret
jmp
mov
add
mov
xchg
xchg
mov
insl
fstpt
repz
cmpl
cmpb
jmp
push
mov
aad
or
scas
jnp
test
cli
cld
sub
mov
mov
mov
inc
sub
push
pop
test
scas
fisttpll
ror
call
push
outsl
xor
mov
xor
cmp
stos
frstor
add
dec
rorl
rolb
jbe
sbb
test
mov
jp
sub
or
pop
sub
xor
push
or
lds
sbb
push
add
aad
pop
xor
jmp
or
pop
movsl
inc
insb
and
jbe
sub
pop
mov
lret
loopne
int3
aaa
std
cmp
push
arpl
stos
stos
adc
loope
mov
pop
fisubrl
jl
and
inc
pop
and
dec
mov
mov
add
stos
inc
je
pop
cwtl
mov
jmp
mov
sub
inc
roll
push
ds
jg
jge
loop
mov
mov
jbe
sub
sbb
aam
or
inc
jg
xchg
pop
mov
xchg
xlat
fs
outsb
adc
jge
lret
pop
push
xlat
test
out
push
mov
int3
dec
notl
outsb
shrl
rcll
and
sbb
lea
xchg
out
ljmp
scas
jmp
sti
insl
mov
jg
test
mov
movsl
add
pop
lock
and
xlat
fcoml
mov
out
mov
or
sub
sub
xor
xor
fimull
jge
imul
lods
inc
and
pusha
push
lea
jmp
cmp
fwait
shrl
or
add
shl
xchg
pop
push
cwtl
mov
sub
cmpsl
xchg
testb
lods
shll
aaa
mov
iret
mov
mov
out
and
aam
pop
lock
sub
mov
inc
hlt
lret
push
fisubrl
cmp
mov
push
sub
cld
pop
push
aaa
leave
sub
mov
scas
or
push
std
int
pop
pop
or
inc
daa
subl
inc
xor
test
xor
jbe
mov
pop
sbb
movsl
xor
cwtl
adc
xor
test
dec
loopne
pop
push
ret
jbe
aas
dec
das
mov
pop
sub
lahf
dec
mov
lods
dec
dec
push
lods
mov
rcr
into
clc
repz
xchg
xchg
popf
pop
sti
rol
call
cmp
and
call
mov
call
setns
jb
test
mov
dec
dec
mov
popf
int
add
jo
jmp
sub
mov
inc
mov
sub
or
cmpsb
sub
cwtl
popf
loope
fimull
dec
xor
xor
sub
sar
adc
dec
test
pop
int3
xchg
dec
repnz
or
xchg
sar
jae
out
jns
add
int
mov
mov
jno
aam
loop
addr16
inc
leave
mov
mov
inc
insl
outsl
leave
adc
jo
sub
xor
mov
testb
scas
adc
mov
and
aas
lahf
sbb
adc
add
nop
mov
add
out
stos
int3
mov
mov
inc
inc
fcmove
pop
jg
ja
imul
pop
js
cmp
jnp
iret
repnz
push
test
roll
xor
push
call
aam
inc
cs
hlt
sbb
das
push
rcr
movsl
sbb
ret
mov
movsb
mov
rorb
cli
xchg
rclb
or
cmp
je
scas
ja
cmp
cmp
dec
and
push
add
hlt
xor
sub
add
test
sbb
add
xchg
pusha
jns
mov
xorl
mov
inc
inc
mov
popf
adc
out
stos
hlt
andb
mov
test
or
inc
and
dec
mov
xor
add
pop
pop
loop
inc
mov
pushf
adc
scas
and
pop
enter
jnp
dec
pop
icebp
jne
add
or
out
xchg
and
push
xor
loope
vpshufd
or
push
jmp
mov
xchg
cmp
fisubrs
adc
lea
jne
bts
seta
mov
inc
shl
movsbl
pusha
sub
rcr
lea
cmc
clc
jmp
call
movb
cmp
pusha
jmp
cmp
mov
lea
jb
clc
cmp
jmp
push
lods
int
sub
fwait
mov
into
sahf
outsb
pop
mov
call
jge
jae
mov
insb
repnz
fsubrl
or
xor
push
popa
sbb
outsb
fsubp
fadds
sub
dec
ret
cmp
es
nop
pop
adc
icebp
pop
call
ljmp
data16
fnstenv
inc
mov
cmc
pushf
mov
orb
cmp
push
and
xor
ss
imul
jbe
sahf
push
ret
cmp
test
popa
xor
lret
push
push
push
jmp
and
push
dec
adc
xchg
adc
stc
or
mov
sub
push
cmp
ljmp
clc
pop
rorb
mov
sahf
sbb
mov
pop
outsl
sti
clc
inc
push
jmp
lea
ret
stos
lret
sub
mov
sub
push
out
lea
or
xor
cmpsl
xor
mov
adc
lcall
in
idivb
out
jb
jne
mov
sub
pop
dec
sub
cmp
mov
push
push
xchg
das
dec
sub
jb
fs
jp
xlat
mov
xchg
pushf
insb
insb
sub
shr
dec
xor
pop
push
cli
xchg
sub
fs
ret
test
and
insl
aad
cmp
in
add
aaa
ss
into
sub
pop
hlt
xchg
cmp
push
int
mulb
cmc
dec
rorb
sbb
pop
fistl
cld
inc
xor
sti
fwait
daa
xor
mov
and
lea
xchg
out
adc
jb
mov
push
mov
sub
pusha
mov
push
shrb
nop
in
iret
jae
aaa
add
pop
push
es
jl
mov
bound
test
iret
stos
mov
sarl
js
mov
andl
popf
test
mov
adc
xchg
pushf
inc
jae
test
push
dec
mov
and
xor
lea
mov
sti
push
adc
lods
xchg
inc
bswap
ds
mov
jp
jbe
and
aas
movsl
add
and
sub
add
fdivs
sub
insl
push
jle
loop
stos
mov
les
dec
xor
in
adc
orb
aaa
lds
sub
shrl
and
sub
sbbl
int
mov
ds
mov
movsl
ret
clc
sbbb
sub
mov
andb
jo
dec
cld
pop
enter
jbe
test
adc
fildl
and
jnp
aaa
mov
jge
sbb
sub
int3
shlb
or
mov
mov
repnz
push
push
sahf
test
mov
out
loop
loope
pop
and
jae
adc
push
push
xchg
xor
das
ja
adc
jo
mov
fildl
loop
pop
push
imul
sub
sub
dec
xchg
xchg
mov
sahf
mov
adc
pop
pusha
pusha
adc
movw
pushf
pushl
lea
jmp
pusha
cmc
pushf
or
pusha
pushf
pushl
lea
je
movsbw
lea
pushf
lea
lea
bswap
xchg
movzbl
mov
movzwl
movsbw
pusha
bswap
jmp
adc
call
lea
call
push
call
test
call
cmc
repnz
pushf
jmp
mov
pushfw
sar
cmp
mov
push
add
pushl
stc
ror
call
pusha
sub
pushl
cmp
pushl
popl
pushf
cmp
movb
movb
pushf
pushl
lea
ja
neg
pusha
shr
sub
sub
bsf
jmp
loope
inc
int3
sub
push
pop
sbb
in
scas
cld
sub
cmp
inc
stc
push
xchg
das
gs
push
jmp
mov
scas
sub
cs
orb
dec
xchg
ret
faddl
mov
adc
sub
dec
repnz
sub
loope
outsl
push
add
hlt
mov
fdivrs
in
inc
pop
xor
divl
fadds
and
adc
leave
js
cmp
inc
loopne
daa
movsb
mov
push
sbbb
sbb
je
sub
aam
pop
ja
add
xor
aaa
mov
add
ds
lret
sub
ljmp
dec
cli
out
movsb
gs
mov
lods
addr16
pop
cmc
mov
stc
mov
xchg
and
inc
adc
loope
pop
loop
enter
in
ss
stos
adc
push
xchg
sti
cmp
lret
stc
cmp
push
je
push
pop
sbbl
mov
dec
inc
sub
sub
and
cmp
lahf
les
enter
add
stc
push
mov
bt
pushf
stc
cmp
test
movw
call
xchg
sahf
repnz
hlt
out
dec
xor
xor
push
jecxz
test
ret
jmp
sub
adc
ret
movsb
out
arpl
jle
inc
outsb
or
or
add
xchg
data16
push
or
out
mov
add
test
ss
and
push
add
push
shrb
lods
mov
sub
sbb
cmp
fistps
in
xchg
sti
jae
fs
jne
ror
mov
call
pushl
lea
call
jmp
movsb
inc
cmp
pop
jne
gs
aas
mov
gs
pop
adc
or
pop
pop
jne
movsl
inc
cmp
sbb
gs
jne
pop
gs
adc
pop
aas
lea
jbe
push
lret
aam
subb
es
into
sub
push
cs
push
out
in
insb
sti
cli
adc
rolb
out
xor
adc
push
mov
stos
out
out
fmull
push
scas
xlat
or
sub
adc
lds
es
iret
clc
push
xchg
dec
xchg
loop
imul
in
loopne
lret
scas
mov
xor
dec
push
stos
leave
sub
js
dec
push
fdivl
into
stc
cltd
bound
lahf
das
pop
and
jns
xor
mov
mov
and
aam
add
stos
lea
xchg
mov
loopne
ficompl
mov
std
inc
xchg
stc
stc
call
pushf
movl
lea
jo
push
movl
push
lea
jmp
movb
pushf
pushl
popl
movw
pushl
ret
popf
cld
sbb
cmp
fmulp
cltd
pop
add
iret
and
fmulp
sbb
mov
pop
xor
leave
inc
in
dec
cmp
testb
xor
leave
push
icebp
sbb
or
rorb
leave
push
cmp
adc
push
fmulp
idivb
mov
xor
leave
xor
adc
rorb
gs
test
subb
leave
int
leave
popf
pop
pop
rcr
fmulp
aaa
dec
rclb
popf
cmpsb
cmc
iret
inc
xor
leave
lock
and
xor
leave
es
pop
mov
cmp
rcrb
leave
movsb
mov
dec
iret
xchg
sub
leave
sub
into
sbb
adc
leave
add
push
and
push
fmulp
lahf
fs
popf
ftst
xbegin
jno
mov
lods
inc
shlb
and
xchg
inc
shrb
leave
sbb
or
fmulp
movsb
mov
insb
rolb
leave
or
jbe
aam
fmulp
cmpsl
sbb
xchg
rcr
hlt
popa
mov
in
sbb
fdivs
fmulp
in
cmpsb
cmp
popf
and
cmp
fmulp
pop
adc
rorb
leave
or
popf
xchg
shrb
roll
pushf
popf
test
rolb
leave
icebp
insb
insl
les
jecxz
leave
in
fs
in
jno
sarb
fmulp
jmp
repnz
xor
leave
pop
mov
mov
jge
mov
das
fmulp
mov
dec
pop
sarb
inc
lcall
lock
fmul
cmp
xlat
popf
push
in
or
repz
xor
leave
loopne
dec
clc
popf
push
jbe
js
mov
push
popf
ja
iret
movsb
sbb
leave
xchg
dec
push
popf
mov
push
pop
test
xor
leave
ret
push
push
lcall
xor
leave
fsub
hlt
popfw
aad
shr
fmulp
test
sub
data16
cmp
mov
popf
cmp
fmulp
shll
xchg
popf
pushf
sbb
clc
xor
leave
out
test
lea
je
sets
bswap
setl
lea
lea
not
movsbw
movzwl
jmp
test
add
mov
mov
movb
lea
jmp
cld
pop
add
add
add
mov
add
add
add
add
add
add
add
add
pop
add
add
add
mov
add
mov
add
or
movl
or
add
add
add
add
cmp
clc
pusha
sub
add
clc
pusha
cmc
or
pushf
movl
lea
je
pushf
pusha
mov
movzbw
pop
mov
mov
cwtl
pusha
pop
pushf
lea
mov
movl
jmp
push
lea
je
call
mov
pushf
lods
pushl
pusha
bt
add
call
movl
jmp
lea
jne
not
movsbw
lea
movb
lea
not
push
bswap
lea
call
push
call
jmp
add
pushf
call
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
test
decl
mov
add
pushl
mov
movl
jmp
xlat
and
adc
push
sahf
inc
rorb
stc
xchg
sbbb
scas
out
inc
leave
adc
icebp
ja
jb
pusha
rorl
jb
out
movsb
negl
inc
xor
lcall
or
or
movsb
mov
inc
int
sbb
push
test
xor
or
lea
cmp
loope
push
fstps
stos
or
ljmp
inc
pop
int3
mov
pushf
les
adc
add
mov
mov
movl
pushf
push
pushl
popl
pushf
pushl
ret
add
dec
gs
popa
addr16
outsl
js
add
movl
jmp
jmp
add
add
jmp
movb
jmp
mov
or
xchg
fwait
jle
lods
fdivs
es
outsl
rcrb
sarl
fsts
insl
push
xchg
jnp
lods
int
mov
ljmp
push
inc
jo
pop
ljmp
fbstp
sub
sub
imulb
in
ljmp
push
push
pop
jg
jg
mov
mov
or
imul
add
mov
sbb
pop
sahf
fldcw
arpl
dec
inc
push
cmp
int3
sldt
cli
repz
fcompp
push
je
ja
ljmp
adc
rcrb
into
test
lcall
push
neg
daa
in
adc
xor
sahf
dec
inc
mov
and
xchg
out
jge
cwtl
cli
push
incl
orl
push
sbb
sbb
add
in
loope
dec
repz
or
movsb
dec
jl
sbb
jle
push
ret
and
mov
aaa
ja
cmpsl
jmp
in
notl
loop
pop
pop
jg
imul
fcoms
scas
outsb
lods
mov
data16
hlt
cmp
xchg
jmp
std
xor
pushf
not
pusha
mov
cmp
add
lea
jo
pusha
cmc
clc
rol
pushf
stc
jmp
lea
jne
lea
lahf
sets
setns
mov
pusha
movb
push
pushl
lea
jmp
call
pusha
push
jmp
or
into
ret
pushf
in
pop
data16
mov
xor
mov
rcll
cwtl
mov
sti
xor
cmp
lret
pop
xchg
xchg
loopne
dec
pushf
add
dec
subl
add
mov
inc
pop
aam
push
outsb
call
add
push
mov
shll
mov
rcrl
xor
lods
inc
inc
jbe
mov
jb
cmp
cmp
fisubs
push
inc
mov
dec
je
adc
mov
je
es
lret
aad
sbb
ret
cmp
iret
dec
mov
pop
dec
pop
xor
mov
xor
clc
insb
cwtl
push
aam
adc
jno
cs
jne
int3
rcrb
inc
jmp
lock
into
mov
imul
je
test
add
dec
int
and
ret
out
pop
sbb
lods
sti
cmp
dec
out
out
xorb
adc
mov
mov
jmp
lds
adc
mov
or
loop
sbb
jo
fldenv
xchg
aad
push
cmc
pushl
sub
pushf
lea
jmp
stc
clc
stc
rol
clc
cmc
cmc
cmp
jmp
cwtl
fsqrt
shrb
cld
fisubrl
jns
adc
adc
mov
mov
dec
mov
movsl
lea
add
sahf
mov
repnz
js
test
or
ret
jp
mov
inc
xchg
jmp
sbb
outsb
imulb
cmp
popa
adc
call
push
lods
mov
outsb
call
imul
int
mov
outsb
daa
jmp
inc
jl
repz
adc
jle
bound
jae
mov
pop
dec
lea
dec
xchg
ret
pushf
lock
repnz
inc
inc
push
dec
inc
inc
adc
outsb
out
out
repz
dec
pavgb
pop
mov
ret
test
out
rcll
mov
mov
imul
jecxz
xor
sbb
mov
mov
xlat
movsl
lahf
cwtl
call
pop
mov
cli
fdivr
mov
movl
xchg
xchg
addl
movsl
mov
xchg
jp
lods
rcll
int
inc
mov
adc
push
xor
lods
jbe
jmp
push
or
scas
cltd
mov
sub
rorl
dec
ret
lock
sub
es
cmc
sbb
loop
outsb
cmpsl
dec
das
xor
push
mov
fnstsw
cmpsb
sbb
aad
pop
jg
aas
ficomps
cmpsb
out
ljmp
dec
ljmp
pop
add
jp
sbb
dec
aaa
scas
ret
dec
shll
cltd
lret
sahf
popf
les
fsubl
xchg
pop
push
clc
mov
push
ret
fwait
adc
orl
jl,pn
inc
and
mov
lock
xlat
and
daa
bound
cld
mov
mov
xor
mov
cmp
decl
bsf
mov
cmc
stc
clc
call
jmp
test
shr
mov
clc
test
cmp
call
lea
jmp
repnz
push
mov
mov
shlb
pop
jns
in
or
ret
sbb
jns
cmp
jne
mov
jl
js
pop
aaa
ret
mov
and
sbb
xor
adc
fwait
xor
mov
push
xor
popa
call
lret
add
aaa
ljmp
jne
add
test
test
pop
popa
pop
add
adc
cmp
xchg
shrb
cmpsb
xchg
pop
int
lods
fadds
cwtl
notw
cmp
test
pop
pop
ret
jp
xchg
int3
push
loop
movsb
xor
cwtl
test
or
cmp
mov
dec
push
cmpsl
test
sub
cmp
cmpb
or
fidivs
test
and
inc
dec
sbb
es
xor
sub
mov
sahf
sub
cwtl
push
push
sbb
adc
cmpsb
mov
test
outsb
mov
lds
xchg
xor
out
into
cmp
cmp
push
push
stos
jne
shll
cmp
rcl
sub
cwtl
lea
movb
call
xchg
rcll
push
jg
ss
add
movsb
hlt
pop
cltd
xor
test
jbe
add
dec
xchg
pop
dec
adc
cs
push
adc
or
dec
or
pop
mov
cmp
cmp
push
mov
jl
lods
xchg
push
push
rcll
in
int3
out
inc
or
or
ret
notb
dec
into
pop
or
mov
gs
hlt
repz
sub
inc
and
pop
fiaddl
cmp
movw
lea
ja
clc
push
jmp
cli
dec
imul
inc
cld
mov
fldcw
sub
dec
frstor
popa
mov
xlat
jmp
shrb
test
push
sbb
loop
cmc
mov
sahf
cmp
mov
nopl
das
mov
push
xchg
pop
sbb
arpl
lcall
pop
pop
jns
or
mov
and
aas
cwtl
add
mov
pop
into
xor
aaa
sbb
stc
lock
insl
lahf
cwtl
and
fsubrs
popa
mov
movb
stos
rcll
and
jne
jmp
lea
jne
neg
sub
btr
mov
jmp
pusha
lea
je
pushf
pusha
clc
cmp
sub
jmp
xor
adc
mov
cmp
mov
stos
clc
pop
push
jns
mov
ret
repnz
js
repnz
mov
pop
mov
mov
pop
das
imul
pop
inc
ja
sub
add
outsl
clc
jmp
lahf
mov
mov
inc
and
or
pop
cltd
mov
sbb
movb
mov
vmovaps
lock
lock
stos
sbb
fnstenv
xchg
insl
into
push
mov
push
mov
data16
stos
fwait
out
push
out
push
xor
imul
and
inc
add
sub
adc
sbb
test
movsb
out
jns
jle
cmp
and
pop
dec
adc
and
sbb
inc
repz
xor
mov
loope
add
fstl
cmp
xchg
jns
xchg
in
aad
call
loope
jp
xchg
sti
cmp
sbb
add
movl
imul
call
inc
mov
ret
pop
cli
loop
int
inc
shlb
imul
and
cmp
push
add
inc
ret
mov
inc
pop
mov
xor
adc
dec
inc
ret
or
lret
xchg
jg
cmpsb
pop
cmpsl
pop
push
pusha
pushf
je
xchg
adc
outsl
stos
les
scas
mov
icebp
xor
xor
scas
push
imul
mov
or
adc
pop
pop
sub
test
dec
pushf
jbe
adc
fcoms
inc
cmp
jmp
mov
scas
xor
pop
adc
adc
bound
dec
call
test
fdivl
mov
jns
mov
js
popf
lret
mov
jl
lahf
in
mov
cs
addr16
pop
inc
adc
jno
in
sub
lret
mov
dec
jle
inc
inc
xchg
out
stos
push
popa
jo
mov
dec
pusha
mov
gs
cs
jns
cmp
adc
mov
and
in
push
push
xchg
dec
adc
dec
pop
js
cltd
cmp
imul
jg
pusha
setae
call
stos
mov
or
stos
sbb
jmp
fimuls
or
in
fmul
add
rcrb
inc
addr16
fidivrs
mov
and
js
and
loope
push
push
xorl
test
mov
bound
cmp
pop
sbb
xchg
xchg
pop
or
mov
xor
sub
mov
jp
lea
je
cmp
stc
clc
add
pushf
lea
jmp
jmp
cli
inc
fwait
mov
mov
test
rorb
movsl
push
es
test
xchg
jmp
add
divl
xor
pop
testl
lret
sbb
clc
fbld
ficoms
icebp
and
adc
popf
sbb
notl
loop
inc
fistps
push
inc
jno
iret
push
ljmp
test
mov
popaw
sub
sub
and
inc
and
adc
notl
xor
inc
pop
and
jmp
mov
aad
pop
mov
in
inc
jno
cmp
push
lret
or
out
mov
hlt
enter
rcl
jb
rclb
mov
das
sub
lea
leave
push
in
cld
repnz
adc
insl
dec
xlat
pop
mov
outsb
mov
push
es
or
cmp
mov
fwait
mov
lods
jmp
rcl
mov
xor
pop
pop
xchg
scas
jge
hlt
rcrb
aam
std
pop
fdivr
or
fs
push
inc
mov
test
cmp
adc
and
push
push
push
jno
das
sbb
and
and
testl
pop
test
mov
jne
xchg
fldl
test
jne
pop
aas
or
gs
pop
adc
or
pop
pop
jne
movsl
inc
cmp
sbb
gs
jne
pop
gs
adc
pop
aas
lea
pushf
movb
lea
jne
call
stc
ret
in
sub
mov
mov
aam
out
sti
fdivs
and
mov
in
jmp
jno
cs
and
lahf
add
xchg
iret
movsb
icebp
push
add
add
fisubs
xchg
mov
insl
sbb
adc
sti
cltd
mov
es
jmp
xor
cs
jge
ja
pop
cmp
and
sahf
or
stos
dec
sbb
jae
mov
jmp
inc
lea
stos
lret
sub
in
clc
push
loope
int3
leave
test
or
fstl
fldenv
xor
scas
iret
adc
lret
or
jnp
repnz
fsubr
cmp
mull
dec
and
add
mov
inc
add
outsb
pop
sahf
test
adc
and
mov
add
mov
mov
inc
push
cmp
mov
mov
or
les
or
push
loopne
enter
movsb
aad
lods
leave
sbb
sbb
cs
sti
and
rclb
add
dec
and
in
adc
shlb
xor
out
mov
ljmp
xor
pusha
ss
dec
mov
push
mov
push
sbbl
xchg
and
mov
fsubrl
sub
jnp
and
sbb
jg
mov
inc
test
add
jae
imul
inc
mov
pop
loope
jge
mov
mov
test
hlt
cmp
int
sti
daa
lds
sbb
jle
movb
clc
and
loope
jmp
pop
shll
dec
cmp
test
movsb
nop
add
jp
scas
jns
or
mov
rep
stc
test
jmp
xor
adc
jns
std
pop
cltd
js
xor
mov
and
shr
or
cmp
insb
data16
add
repnz
out
lods
arpl
dec
mov
mov
pop
movsb
sbb
cmp
pop
ss
lds
fs
mov
shlb
cmp
jmp
mov
shll
cmpsl
in
les
add
jno
ret
jmp
push
jecxz
cli
add
adc
sbb
fwait
mov
adc
jae
test
cmp
popl
imul
jae
flds
daa
push
pushw
xchg
ret
lds
jle
mov
fldenv
mov
cmp
je
mov
inc
pop
jl
pop
int
push
sbb
cld
addl
stos
cmp
adc
scas
jbe
and
mov
mov
aad
repnz
outsl
icebp
jp
stos
inc
pop
or
xchg
cmpsl
ss
mov
xor
adc
and
sahf
push
divb
add
mov
push
push
adc
push
xchg
mov
mov
call
add
xor
adc
in
mov
in
fsub
rcrb
xchg
push
ljmp
popf
xor
inc
int3
or
push
cmpsb
loope
and
pop
jmp
in
insl
sbb
fiaddl
gs
cmpsl
xchg
jecxz
movsl
mov
mov
test
outsb
cmp
mov
fnstenv
in
sbb
cs
loop
mov
jmp
or
in
mov
dec
sub
popa
pop
jno
cltd
and
cmpsl
mov
scas
sbbb
sarb
in
ret
push
jno
mov
sbb
movsb
mov
lds
addr16
sbb
ficompl
jno
pop
jecxz
mov
xor
loopne
cltd
sbb
jecxz
lahf
mov
xchg
movsl
leave
mov
mov
stos
pushf
pushf
mov
lea
jmp
adc
pushf
mov
lea
jae
pusha
push
call
jmp
test
add
cli
xchg
loope
sbb
inc
mov
out
ds
dec
das
dec
xor
jg
and
mov
inc
es
cmp
int
mov
pop
outsb
ds
pop
dec
cld
imul
xchg
and
jns
or
mov
add
dec
das
dec
mov
lret
pop
mov
std
xchg
es
fisubl
and
inc
dec
ljmp
stos
mov
or
addr16
pop
clc
in
fucom
xor
dec
xchg
pop
sbb
dec
roll
int
and
xor
insb
mov
imul
push
lret
xchg
ds
ljmp
test
ret
jb
lret
fs
lods
les
ret
icebp
ds
mov
lods
call
shlb
dec
test
mov
jmp
ja
mov
xchg
cld
cmpsl
inc
or
push
sbb
ja
inc
les
divl
fucomp
aas
std
inc
cltd
shl
mov
mov
sbb
push
mov
jg,pn
mov
nop
test
mov
sbb
aam
inc
iret
faddp
mov
push
pop
xor
les
lock
cltd
mov
stos
insl
push
es
and
push
add
pop
into
push
pop
andl
mov
hlt
jbe
daa
jo
test
aaa
in
pop
xor
pop
jns
dec
sub
jbe
push
sbb
jmp
fs
hlt
and
movq
call
pushf
cmc
mov
repnz
push
push
lea
jne
push
pushf
movsbw
lahf
movb
call
xchg
not
movzwl
call
sti
mov
mov
or
pop
lods
dec
adc
adc
pushf
xchg
xor
hlt
aam
testl
add
test
mov
subb
or
lret
and
pop
orb
rcrl
rcr
rolb
lods
pop
or
xchg
clc
arpl
sbb
mov
add
xor
xchg
jl
jg
dec
shr
test
push
jae
pop
clc
mov
jno
jno
sub
mov
pusha
movl
mov
pusha
movl
pushf
lea
jmp
sbb
cmp
adc
iret
outsb
lcall
add
iret
mov
xchg
ja
mov
ljmp
cmovno
pop
and
or
ds
xor
and
mov
xor
or
fisubs
icebp
daa
xlat
mov
cmp
pop
adc
mov
mov
pop
not
ficomps
repz
rcrb
testb
push
and
ret
mov
call
xchg
cld
int3
fstpl
add
fs
mov
jp
inc
and
lea
pusha
sete
movsbw
movl
bswap
setge
setge
lea
push
movl
movw
pushl
popl
pushf
pushf
pushl
ret
imul
cmp
push
lahf
sbb
scas
lcall
jecxz
movsl
or
mov
cmp
dec
mov
lods
push
test
push
les
pushf
pop
pop
xor
test
sbb
jb
aas
test
sbb
inc
inc
push
fwait
movsl
inc
mov
aaa
lahf
and
mov
shll
mov
adc
test
pushf
xchg
mov
or
leave
xchg
fnstenv
iret
test
test
test
clc
idivl
pushf
xchg
push
imul
mov
test
stc
int
mov
pop
adc
xchg
inc
xlat
sbb
test
pop
cltd
mov
lods
mov
jne
dec
test
pop
cmp
dec
xchg
push
insb
add
bsr
fldpi
sub
push
sub
ljmp
sti
out
jbe
inc
pop
mov
and
mov
pop
arpl
dec
xor
test
rolb
or
xor
data16
adc
push
loop
push
rorl
fsin
push
cltd
pop
xchg
mov
fdivrl
sbb
or
and
xchg
mov
mov
mov
mov
push
lahf
sub
lock
jmp
cmp
fwait
inc
mov
jb
or
mov
lods
sbb
xchg
cmc
push
and
movsl
lahf
mov
push
push
and
rorb
loop
cmp
cli
sbb
test
ret
mov
ja
mov
cli
xchg
xchg
cmp
mov
inc
sub
mov
jg
lcall
rcrl
xchg
fisubrl
xlat
rcrl
sbb
out
mov
mov
sub
int3
and
sbb
roll
push
sub
add
pop
sbb
sbb
cmp
ficoml
cwtl
movsl
in
push
sbb
inc
jbe
ja
xor
adc
cmp
inc
push
ret
and
dec
mov
ret
lds
push
pop
arpl
ftst
push
push
push
dec
adc
icebp
jns
addr16
ret
out
adc
mov
inc
pop
fidivs
fists
loopne
rcrl
fstps
sarl
loop
popf
jmp
leave
adc
jle
out
add
jp
je
or
sti
ret
inc
icebp
pop
cmpl
clc
add
or
jmp
cwtl
fcomip
mov
sub
test
icebp
lods
and
add
push
inc
sub
and
jge
sub
movsb
std
sub
roll
int
sbb
xchg
test
add
rclb
out
sub
test
dec
mov
icebp
mov
push
push
dec
and
sbb
mov
fyl2xp1
mov
adc
icebp
je
or
push
mov
into
in
sahf
cmc
dec
add
movsb
cwtl
idivl
stos
out
push
xchg
pop
jp
jge
mov
inc
mov
loopne
and
loope
pop
mov
inc
and
jmp
shll
pop
add
sbb
sar
rorl
mov
mov
jle
loope
pop
lods
je
adc
sahf
leave
push
mov
xchg
inc
push
cli
adc
mov
xchg
and
add
mov
loope
mov
leave
das
mov
mov
mov
loop
cld
lcall
addr16
cmp
mov
and
icebp
sbb
leave
movsb
stc
out
std
lcall
fildll
nop
fsubs
in
lcall
leave
lcall
test
int
adc
bound
orl
sbb
dec
jnp
jb
inc
lahf
test
cmp
and
test
gs
and
movsl
test
push
push
jo
outsl
stc
fistpl
lret
mov
mov
repz
sbb
fld
fwait
cmp
movsl
mov
aas
mov
sbb
sbb
push
xchg
popf
mov
fstps
sub
movsl
cmp
lods
pop
sbb
mov
mov
jge
leave
jecxz
in
movsl
sub
fistpll
pop
popf
mov
dec
hlt
mov
xchg
mov
sub
stos
xor
and
lods
gs
inc
mov
test
mov
or
push
add
movsl
dec
repnz
andb
cmpl
push
fmul
arpl
sarl
mov
cmp
subb
mov
nop
pop
dec
mov
stc
mov
mov
xor
sbb
inc
lods
and
int
popa
mov
mov
xor
cmp
xchg
mov
push
sub
pop
pop
loope
int
aas
mov
fstpl
sbb
dec
mov
fstps
test
add
repnz
sbb
and
mov
push
fcompl
mov
xchg
mov
leave
mov
insb
cmp
cmp
das
sbbl
pop
test
cmp
jl
inc
cmpsb
sub
pushf
lea
mov
mov
cmpsb
movsb
sub
cmp
fidivrl
scas
aad
jns
test
movsb
lods
xchg
xchg
mov
leave
cmp
inc
push
rclb
dec
out
std
test
sti
mov
dec
xchg
aam
push
or
in
push
xchg
fiadds
insb
daa
ret
mov
inc
mov
cmp
lcall
and
or
lret
inc
mov
xchg
xor
sbb
lahf
jnp
dec
lcall
test
xor
cmp
loope
and
dec
int3
mov
rol
xchg
fmuls
mov
cmp
jl
mov
pop
pop
sahf
push
dec
xchg
popf
pop
adc
aad
sbb
iret
ret
bound
inc
sbb
push
mov
sub
pop
inc
xor
xor
rol
mov
test
loopne
bound
sbb
test
aas
push
insl
jl
sbb
xchg
pop
imul
mov
adc
enter
popa
adc
lcall
jl
ljmp
jmp
adc
mov
lods
popf
mov
ds
xchg
ret
fldenv
inc
loope
push
inc
dec
ret
inc
sub
lcall
fwait
lret
dec
lcall
add
push
jb
jmp
dec
out
pop
xor
cld
mov
lahf
sbb
and
stos
pop
fcomps
mov
add
scas
push
xchg
test
mov
mov
scas
rcll
stos
lret
int
adc
jl
mov
mov
popa
xor
lods
leave
mov
pop
dec
dec
sbb
ficomps
out
test
lret
idivb
lea
mov
jne
fiadds
stos
rol
gs
adc
mov
mov
repz
mov
xor
push
popa
adc
or
inc
mov
clc
and
aas
push
int
mov
fucomp
sahf
test
outsl
les
jle
sahf
dec
jbe
push
pop
mov
loop,pn
repz
cmp
fisttps
sub
cmpb
mov
mov
imul
mov
rep
sbb
leave
test
aaa
stc
xlat
lret
mov
imul
push
xor
mov
sarb
xchg
inc
dec
mov
jns
ljmp
inc
fnstsw
inc
jb
imul
lods
loope
sbb
mov
lcall
mov
cli
mov
adc
cli
test
sahf
add
subl
cmp
leave
mov
cmp
mov
ret
mov
fwait
pop
outsb
mov
repz
cmpsb
xlat
add
cmp
pop
mov
sbb
cmp
mov
lahf
inc
push
push
jae
xor
fbstp
mov
sbb
lret
pop
shl
add
or
xlat
cmp
or
mov
fsubr
rclb
jl
stos
mov
mov
testl
mov
popa
mov
popf
js
fnstenv
or
ret
push
pop
cmp
ret
fsub
mov
pop
shll
lahf
lahf
shrl
insb
adc
imul
cmc
cmpsl
xor
mov
call
pop
cmc
cli
pop
pop
mov
sbb
add
or
loope
fnstenv
jl
icebp
mov
shll
push
push
pop
in
cmpsl
push
test
insl
cli
fidivl
sbb
jns
cmpsb
cmp
mov
popa
fiaddl
arpl
pop
fsubrs
ja
xor
jns
test
out
mov
xor
out
sarl
jae
xchg
imul
repnz
cmp
call
sbb
dec
mov
cmpb
jge
mov
clc
lret
ret
and
sub
sbb
loope
or
push
sbb
imul
stc
cmp
dec
mov
ret
push
cmpsl
lock
sub
les
test
cmp
mov
imul
jbe
lret
je
imul
jge
fsubrl
and
sub
das
leave
inc
adc
pop
inc
psadbw
mov
popf
fcomps
int
cld
jl
xor
out
push
lds
mov
lcall
push
push
sbb
faddl
aad
cltd
inc
sbb
mov
jecxz
lahf
sbb
sbb
fdivl
mov
cltd
ret
pushf
jb
inc
das
mov
adc
stc
stos
jne
movsb
or
mov
mov
mov
and
xchg
lcall
repz
stos
jmp
inc
mov
pop
fcomi
mov
decb
mov
lea
scas
std
xchg
cmp
or
jmp
nop
fldcw
ret
popf
leave
cmpsb
out
mov
push
shl
push
scas
xchg
inc
cmp
xchg
cld
xlat
dec
leave
cmp
pop
mov
push
mov
sbb
fld
sbb
push
shrl
sub
scas
pop
scas
push
pop
cld
add
les
imul
sbb
popa
mull
mov
lods
cmp
adc
xor
js
xchg
xchg
push
stc
adc
out
lcall
popf
mov
push
and
and
xchg
shrl
outsb
ror
jbe
aam
xchg
fmull
ds
or
aaa
mov
or
mov
jb
subb
repnz
pop
aas
pop
cmc
sub
mov
inc
mov
sarl
mov
fnstenv
mov
dec
addr16
lahf
pushf
sbb
cmp
sub
sub
test
sbb
and
sub
jb
pop
fcmovnbe
mov
fcoml
pushf
push
xchg
or
mov
cmp
out
hlt
loop
jmp
pushf
mov
jecxz
shll
mov
push
push
jb
and
lock
sub
test
sub
bound
shll
ja
daa
repnz
xchg
stos
sub
lea
imul
pusha
cltd
imul
xchg
adc
mov
aas
push
jmp
mov
sbb
mov
pop
xchg
pop
mov
add
mov
leave
fsubl
pop
test
das
push
stos
xor
stos
addb
mov
nop
fcompl
decl
sbb
ret
adcb
mov
aaa
cs
xor
mov
fstpt
in
jmp
dec
mov
fwait
nop
cmp
pop
lods
shll
mov
mov
xchg
out
faddl
cmp
sbb
stos
sbb
mov
mov
inc
mov
or
in
sar
sbb
stos
mov
popf
out
mov
mov
xchg
mov
mov
jle
test
lret
ficompl
gs
loop
inc
popa
mov
daa
test
cli
inc
jmp
andb
add
cmp
fcmovnb
ret
mov
aaa
leave
pop
gs
mov
stc
lcall
pop
cmp
fsubl
xor
pop
gs
inc
push
sbb
push
dec
push
inc
sub
push
gs
cmp
es
inc
repz
data16
sub
pop
mov
xchg
ja
loopne
inc
push
ljmp
scas
jecxz
lahf
stc
add
das
out
repz
dec
out
ds
ja
negb
sbb
leave
cwtl
sbb
stc
or
lock
test
flds
loope
sar
adc
cmp
sub
sahf
or
cmp
cmp
cmp
lods
popf
sub
test
sub
inc
sub
xor
imul
daa
loop
cwtl
rolb
dec
orb
daa
sarb
loop
pop
mov
adcb
dec
rcr
lcall
jmp
inc
pop
and
mov
shrb
lea
fdivs
jns
test
add
inc
mov
adc
cwtl
mov
pop
pop
sbb
cmp
je
mov
jae
int
and
frstor
xor
sub
jb
repnz
insl
jp
cmp
test
mov
jns
mov
hlt
test
jno
lods
popa
fdivl
enter
fisubrs
or
adc
cmp
jo
shlb
pop
pop
add
mov
mov
mov
ror
lahf
movsl
dec
imul
aad
sbb
stos
shlb
inc
dec
lahf
data16
sbb
add
mov
sbb
push
aas
jp
mov
sbbl
insb
nop
pop
aad
sahf
mov
push
and
inc
lods
xchg
ljmp
test
push
addr16
xchg
xchg
and
aam
pop
jmp
insb
xchg
mov
xchg
xchg
cmpsb
in
inc
leave
leave
push
imul
sub
insb
lret
push
insl
jae
fcomps
pop
mov
rcrb
gs
sub
js
cmp
rcrl
insb
fldlg2
mov
or
gs
push
sti
outsb
cmpsl
iret
pushf
insb
jp
fwait
lods
xor
push
repz
mov
mov
and
insb
pop
or
push
pop
dec
ret
insb
cmp
jb
popf
stos
inc
sbb
test
or
sarl
lret
in
cmpsb
in
lcall
mov
xchg
xor
mov
fistpl
dec
xchg
cltd
in
mov
sub
das
sbb
mov
mov
lret
sub
jecxz
jle
mov
pop
push
jae
mov
xchg
daa
in
repz
je
jae
stos
inc
push
cmc
push
mov
js
cmp
add
ret
and
mov
mov
jbe
xor
mov
inc
test
jge
fwait
pop
cmp
mov
pop
lods
fbld
jp
ret
stos
fcmovnu
repz
mov
mov
cmp
mov
xor
lahf
inc
loopne
inc
and
mov
jle
out
mov
jecxz
cmp
ror
jg
outsl
daa
stos
push
in
cli
cmp
imul
cmp
xor
negl
sarl
fnstenv
sbb
or
or
imul
test
loop
cmpsb
mov
imul
dec
lret
or
shlb
daa
cmp
sbb
adc
lret
adc
mov
mov
cs
stos
xor
add
fnstsw
dec
shr
sarb
cld
scas
std
orb
sbb
lods
push
xor
push
push
test
in
test
fld
push
add
sbb
stos
stos
pop
and
and
adc
jmp
jns
int
call
ljmp
xchg
ss
mov
test
movsl
push
pop
lods
xchg
add
dec
rolb
lods
and
inc
sub
mov
stc
jmp
in
cmp
sti
leave
loop
add
add
int3
pushf
jmp
fsincos
mov
cmpsl
inc
data16
push
stos
int
stos
cwtl
xor
into
xchg
in
aaa
test
sti
pop
lods
fnstcw
decb
mov
sub
in
and
ljmp
stos
cmc
cmp
xor
pop
sub
test
cmp
loope
sbb
inc
icebp
and
xchg
gs
mov
pusha
out
test
push
hlt
test
jmp
fs
dec
sbb
imul
mov
pusha
sub
inc
mov
test
or
push
jp
mov
loope
shll
js
lret
mov
lods
add
icebp
mov
fcmovnu
idivl
inc
jmp
mov
insb
mov
inc
xor
loope
popa
push
test
mov
inc
inc
mov
stos
push
mov
ret
cwtl
je
push
in
and
and
or
clc
movsl
adc
lock
inc
cmp
loop
sub
sahf
push
pop
cmp
push
fstps
push
xor
int3
inc
je
push
push
cmp
pop
aaa
mov
add
icebp
testb
add
push
test
sub
and
test
imul
pop
addl
add
ljmp
mov
and
insb
mov
mov
mov
stos
and
pop
lcall
adc
mov
pop
inc
stos
xor
xor
lock
mov
ljmp
push
mov
std
cmp
iret
stos
aaa
cmp
xor
xchg
jnp
test
push
mov
lcall
xchg
mov
repz
xor
std
pop
pop
stos
leave
cmp
mov
out
jle
sub
lcall
mov
aas
ds
jns
outsb
lret
adc
mov
sti
dec
lcall
pop
mov
iret
adcl
xchg
jp
cmc
jle
add
mov
shrl
sarl
push
inc
inc
sti
sarl
pop
xor
inc
stos
or
clc
jp
mov
jmp
outsl
jecxz
js
insl
pop
inc
sbb
push
mov
mov
stos
ss
lcall
push
scas
nop
inc
jle
mov
cwtl
nop
sub
inc
mov
das
sbb
push
rcrl
or
pop
rol
mov
test
add
loopne
jnp
push
fisubrs
loopne
sahf
mov
mov
adc
cmp
test
pop
xchg
es
insb
sub
add
das
dec
cmc
nop
fucomip
or
bound
xor
inc
jp
jmp
cmp
cmp
out
inc
xchg
cmp
add
sub
stos
sti
pop
rcrl
inc
or
jo
sarb
sbb
stos
jp
xor
mov
xchg
mov
cmp
das
adc
xchg
fwait
icebp
idivb
movsb
pop
test
cmpsl
pop
mov
cmp
popa
test
and
push
rorl
outsl
jae
loope
adc
aaa
xor
xchg
xchg
js
imul
mov
inc
pop
fdivrl
cmp
paddd
test
pop
jne
notl
mov
scas
mov
pop
into
inc
or
stc
lods
add
and
xchg
iret
test
add
fisubrl
sub
sarb
jecxz
sbb
adc
mov
int
adc
push
andl
add
cld
out
aaa
pop
in
stc
rcrb
xchg
push
cmp
push
dec
int3
out
push
pop
insl
popa
in
sbb
adc
push
push
pop
dec
push
add
fsubrs
jmp
test
adc
mov
pusha
inc
mov
in
mov
xchg
dec
scas
imul
pop
int
test
add
add
repnz
dec
jge
fiadds
and
mov
mov
sbb
push
pop
leave
mov
push
mov
call
jns
daa
cmpsb
es
dec
push
adc
sbb
faddl
stc
movsb
nop
push
xor
iret
xchg
test
push
stos
mov
cs
cmp
adc
sub
jp
stos
mov
cmp
fmuls
movsl
xor
stos
scas
push
dec
daa
pusha
xchg
mov
test
mov
imul
xor
fwait
loop
and
lahf
adc
sub
dec
js
push
xchg
test
adc
movsb
jp
add
imul
lahf
inc
add
mov
xchg
movsb
adc
cmpsb
lds
cvtps2pd
xchg
pop
mov
ret
mov
adc
rcrl
sbb
cmpsb
adc
mov
fisubl
pop
inc
lods
cmp
mov
daa
mov
mov
int3
loop
ret
push
push
mov
sub
mov
cs
fnstcw
cmp
aaa
or
pop
or
cmp
fs
enter
das
mov
stc
int3
roll
hlt
in
stos
outsl
add
dec
xor
jmp
add
dec
rcrl
loope
or
ret
dec
cs
mov
popa
cmp
cmpsl
add
shrl
dec
lods
lahf
fimuls
mov
arpl
sbb
mov
sbb
adc
leave
sub
jb
imul
bound
mul
pop
mov
in
cmpsb
fdivrl
sbb
push
leave
mov
inc
xchg
jne
cmpsb
imul
mov
lock
add
mov
push
jnp
mov
inc
mov
nopl
cld
jmp
cmpl
mov
cs
sbb
dec
fsubrs
dec
bound
xor
insb
inc
aas
addr16
scas
int3
mov
push
mov
cmp
adc
cmp
xor
ret
test
subl
aaa
mov
repz
inc
rcr
jmp
and
jno
movsb
test
pop
or
je
frstor
shll
test
test
mov
js
cmp
push
scas
stos
pop
dec
sub
in
xor
sarl
ficoms
mov
lret
in
inc
cmp
inc
int
pop
sbb
mov
push
popf
lods
pop
xchg
or
jecxz
aas
sbb
push
sbb
flds
mov
mov
sub
insl
fwait
push
cmpsl
push
cmc
repnz
fsub
inc
adc
sarl
gs
sbb
aaa
xchg
rclb
xchg
sbb
mov
add
adc
imul
sar
lds
mov
xor
fldt
xchg
shlb
ficoml
pop
push
xor
repz
inc
mov
repnz
dec
sub
popf
dec
xchg
iret
popf
mov
and
sarl
cmp
or
insb
popf
js
call
popa
jl
lahf
dec
add
out
push
decb
or
inc
or
adc
scas
fnstenv
sbb
mov
mov
das
out
ret
aas
aaa
test
sbb
jl
shlb
dec
test
jmp
icebp
sbb
idivl
insl
repz
cmp
mov
lahf
test
test
jecxz
call
bound
cwtl
or
sbb
lods
in
bound
popa
push
scas
mov
icebp
js
push
mov
pop
push
jae
dec
push
dec
push
fstl
in
inc
pushf
cltd
scas
nop
cmp
test
xchg
mov
js
stos
test
cltd
sti
sbb
movsl
lahf
sbb
popf
dec
and
mov
out
les
ds
push
shl
aas
imul
cmc
gs
in
mov
std
shll
mov
jns
pop
xchg
clc
push
cmp
mov
enter
add
push
in
insl
icebp
fisubrl
inc
fstpt
movsb
scas
sahf
add
mov
add
movsl
insb
mov
test
adc
push
xchg
push
leave
flds
sbb
and
sbb
lds
xchg
inc
inc
loopne
adc
dec
add
adc
imul
rcrl
inc
and
cmp
sbb
xchg
xor
lret
xor
lret
data16
jp
mov
cwtl
adcb
pop
imul
das
gs
jmp
sub
mov
imul
push
sub
pop
ficomps
rorl
jecxz
push
and
cmp
push
stos
sub
jecxz
mov
sbb
insb
notl
stos
movsb
add
stos
push
fcompl
mov
xlat
popa
xchg
sub
mov
dec
pushf
leave
push
testb
add
bound
cmp
fistpl
sbb
mov
push
xchg
sub
pop
repz
mov
jle
mov
es
lret
and
and
mov
fadds
mov
adc
loope
in
insb
mov
dec
sbb
xchg
stos
arpl
mov
mov
sbb
mov
add
mov
stos
or
fadd
xorl
mulb
inc
fisubl
sbb
rcrb
sub
icebp
cmp
gs
sbb
or
ret
mov
je
ds
sub
mov
in
mov
lods
dec
lahf
and
push
xchg
cmp
bound
or
stos
adc
mov
out
cmp
lcall
push
das
ret
add
adc
and
andb
iret
fsub
imul
inc
push
push
push
cs
push
fldenv
or
lods
xor
push
loope
inc
mov
es
sub
scas
pop
dec
add
arpl
jecxz
jae
dec
jmp
hlt
mov
push
jle
sbb
cmpsb
pop
popf
out
push
das
scas
dec
or
mov
mov
stos
xor
ss
mov
scas
dec
rcll
in
aas
xlat
sub
sbb
sub
mov
repz
pop
cmp
mov
bound
sub
pop
add
fwait
mov
adc
fdivs
ret
iret
imul
mov
fadd
mov
subb
mov
mov
pop
lods
inc
mov
inc
mov
xchg
lods
jnp
dec
cmc
add
dec
lods
lret
ljmp
lret
stos
lcall
sub
cmpsl
push
mov
sbb
aaa
sub
sbb
imul
shll
jmp
push
in
movsb
rcl
in
roll
ret
or
je
icebp
sub
jg
jae
inc
je
push
inc
rcrl
sbb
push
lcall
stos
sub
data16
mov
cmp
dec
cmp
fsubs
mov
fdivrs
lcall
xchg
iret
push
aas
sbb
pop
cmp
pop
fsubrs
sbb
sbb
pop
std
jno
xchg
pop
cmp
inc
data16
data16
mov
insl
fwait
jle
inc
jns
icebp
test
daa
fyl2xp1
bound
sbb
pop
mov
pop
mov
test
ds
rcll
push
insb
mov
cmpsl
or
jl
push
gs
mov
cmpb
push
mov
cmp
test
or
repz
movsb
mov
inc
or
leave
mov
test
out
sub
jp
jbe
mov
mov
mov
jno
rorl
push
fdivrs
or
imul
frstor
mov
lret
mov
loop
xchg
stc
pop
push
mov
dec
mov
loop
test
cmp
sub
cmc
sbb
arpl
sub
pop
mov
test
orb
ss
sbb
sub
cmp
add
jmp
pop
jno
mov
xlat
cmp
loop
aad
push
xchg
sub
add
adc
not
xor
mov
jmp
push
data16
sarb
sub
push
jmp
int3
lods
mov
lcall
rorl
imul
rcll
clc
mov
mov
dec
outsb
je
push
test
push
jp
pop
repz
and
shlb
push
sub
aas
addr16
inc
mov
xlat
clc
shrb
adc
push
push
xchg
sbb
aam
pop
mov
out
popa
pop
pop
gs
insb
lods
fildl
out
repz
mov
fstpl
lcall
pop
cmpsb
pushf
dec
rorl
test
sub
insb
lea
in
mov
pushf
xchg
gs
lds
sbb
stos
xchg
pop
adc
daa
into
jecxz
in
mov
sbb
das
rorl
popl
inc
pop
stc
test
ds
pop
cmp
rcrb
aaa
sbb
jmp
sar
and
nop
or
push
push
loope
xchg
scas
fnstenv
sub
dec
add
mov
insb
xchg
aaa
vpsrld
cmp
dec
leave
sahf
sub
fs
mov
xor
adc
pop
sub
outsb
pop
in
cmp
inc
mov
test
xchg
sbb
mov
leave
sbb
repnz
jb
and
rcl
xor
lret
sbb
shlb
jne
push
jp
and
xor
lods
test
in
add
loope
js
cmpsl
fsubl
insb
cmpsb
sub
rclb
sub
sub
rclb
xor
into
or
pop
sub
or
lods
data16
xchg
loope
xchg
dec
in
rorb
mov
adc
add
sbb
lods
leave
and
mov
add
sub
jns
stc
push
movsl
shrb
mov
inc
mov
popa
scas
jne
cwtl
test
dec
cmpsl
xchg
ret
js
mov
adc
dec
lcall
sti
jle
gs
jecxz
test
push
jno
rcll
cmp
xor
push
stos
stos
rorl
xchg
dec
sub
imul
shl
les
mov
pop
mov
xchg
scas
mov
pop
lods
mov
push
mov
cld
mov
fldt
iret
cmp
mov
jmp
int
lahf
fcoms
sbb
push
data16
imulb
test
inc
pop
and
popf
nop
push
xchg
mov
xchg
or
lods
sub
push
lret
xchg
nop
popa
and
cmpsl
fstps
insb
pop
out
mov
mulb
xchg
inc
mov
inc
in
adc
stc
inc
mov
test
adcb
or
dec
int3
push
dec
test
xor
fmull
data16
mov
aad
aas
pop
fmuls
repz
sub
cmc
loopne
icebp
rclb
insb
inc
pop
cmp
out
push
add
push
jp
cwtl
xor
sbb
movsl
gs
push
test
mov
ret
jmp
sti
ss
dec
add
adc
inc
scas
sar
xchg
mov
test
shr
scas
scas
sbb
gs
lods
dec
arpl
xor
sti
sahf
test
push
leave
mov
mov
ror
sbb
pop
mov
stos
push
popa
pop
mov
jle
in
push
mov
cli
adc
ret
dec
pop
sbb
fsubr
push
jb
mov
gs
mov
loope
dec
shll
lret
imul
fwait
in
sbb
aas
inc
scas
mov
adc
push
xchg
dec
addl
adc
mov
scas
lods
lcall
cmc
sbb
mov
xchg
mov
bound
or
and
sbb
cwtl
sbb
fbstp
sahf
outsl
scas
push
insb
cwtl
xchg
stc
movsl
mov
xchg
iret
cmp
jl
movsl
add
and
xchg
das
cmc
repnz
xor
add
sbb
push
xchg
xorl
in
sbb
mov
sbb
cwtl
push
stos
loope
dec
loope
fwait
adc
iret
test
into
fnstenv
push
pop
pop
xchg
mov
in
sbb
das
jl
mov
mov
or
stc
mov
lret
mov
sbb
cmp
adc
dec
inc
jecxz
mov
sti
dec
mov
mov
xchg
mov
movsl
cmc
push
lea
fnstcw
adc
outsl
out
push
xchg
imul
or
dec
gs
add
mov
stc
testl
add
push
push
lret
sub
xchg
outsb
push
and
push
xchg
pop
sbb
inc
mov
mov
aaa
ds
dec
jns
repz
test
pushf
mov
mov
cmp
and
xchg
decb
cmp
adc
add
loop
das
shll
mov
insb
mov
jp
std
or
ja
xor
mov
jmp
sbb
lds
xor
push
mov
mov
mov
xchg
fnstenv
inc
loope
test
sub
scas
pushf
mov
xor
push
xchg
adc
jp
push
in
mov
loopne
sbb
and
icebp
dec
xchg
gs
xchg
insb
mov
iret
addr16
push
test
pop
cs
mov
sbb
jg
les
inc
std
mov
cmp
into
jecxz
pop
add
or
mov
xor
jnp
xchg
movsb
cltd
test
sub
aaa
cld
js
mov
mov
jle
dec
adc
loope
lcall
cltd
fwait
lods
test
mov
mov
push
xchg
xor
inc
jb
lds
scas
mov
add
mov
push
jge
cli
iret
xlat
xor
popf
int3
mov
sti
out
xor
sub
adc
mov
sub
dec
test
stos
and
cmp
cmpsl
pop
adc
sub
xor
movsl
test
aas
fcomi
mov
negb
popa
inc
push
mov
ret
adc
ljmp
mov
lock
and
test
test
insb
stc
pop
shll
push
aam
shr
fsubs
lret
dec
fbld
inc
sub
repz
test
and
pop
mov
add
jbe
ss
cmpl
lcall
mov
mov
rcl
jl
sub
mov
leave
insb
popa
sub
test
pop
enter
ljmp
movsl
lcall
das
ljmp
cmc
fwait
scas
adc
stos
pushf
xchg
mov
andb
stc
icebp
or
xchg
push
sub
push
xchg
mov
and
fldl
sbbb
scas
cld
loope
xchg
outsl
and
add
dec
mov
jb
cmp
mov
inc
popf
fs
add
pop
scas
pop
outsl
in
push
push
xchg
xchg
sbb
aas
stos
hlt
test
inc
adc
xchg
xchg
bound
xor
xor
mov
outsl
rcrl
cmpsl
add
pop
mov
movups
prefetchnta
adc
fwait
xor
repnz
push
push
fcmovu
mov
dec
orb
add
es
xor
push
cmpsl
rorl
fsubrl
jecxz
xchg
loop
add
cwtl
pop
xchg
and
in
adc
mov
sbb
mov
scas
lret
test
syscall
jno
push
jno
inc
pop
test
cwtl
and
xchg
xchg
and
jp
aad
push
lds
mov
pushf
adcb
jecxz
pushf
pmullw
shll
mov
pop
xchg
dec
mov
mov
test
inc
cmp
pop
cmpsl
lods
pop
jmp
movsb
loop
mov
sbb
dec
aaa
scas
movsl
in
shll
push
xchg
push
sub
cmpsl
xor
lods
push
jecxz
movsl
fisttps
ret
mov
icebp
cld
jne
orb
sub
rolb
xchg
pushf
push
mov
ret
inc
movsb
sbb
xlat
mov
nop
int
mov
sbb
lahf
cmp
push
fimull
inc
loope
cmc
test
or
sbb
sti
bound
sub
cmpsl
in
mov
xor
mull
xchg
mov
dec
dec
and
mov
adc
inc
test
test
aas
xchg
aad
scas
adc
mov
out
push
xor
cmp
dec
add
jecxz
push
jmp
idiv
mov
enter
movsl
sub
in
xchg
cli
roll
xchg
mov
ficomps
stos
mov
aas
fs
fs
mov
sub
mov
xlat
xchg
cli
into
sti
pop
inc
cmp
jmp
daa
arpl
add
xor
xor
add
stos
test
repz
loop
faddl
lods
inc
andb
and
out
mov
icebp
out
sub
mov
pop
xor
lahf
fcompl
aam
insl
rcrl
stos
and
sbb
push
sahf
fsubs
ret
jecxz
xchg
xchg
jmp
test
pop
lods
add
shrl
jp
insl
int
push
in
sub
or
test
fcmove
lods
mov
pop
sbb
adc
aam
xchg
sti
or
bound
xchg
fisubl
xlat
addl
add
and
mov
je
into
cmpsb
and
lahf
push
lods
xchg
fwait
push
fstps
pushf
xchg
cmp
sbb
sti
sub
adc
mov
cmp
subl
adc
sbb
ljmp
shll
sbb
and
imull
xlat
mov
rcr
arpl
cmp
adc
cmp
mov
gs
and
scas
das
leave
repnz
mov
mov
jmp
xchg
push
jmp
mov
cmp
mov
add
fldenv
loope
bound
lret
cmp
dec
fmull
mov
aas
rcrl
and
or
aam
dec
sti
xor
pop
push
popa
into
push
and
pusha
mov
lds
fldt
roll
test
inc
mov
xchg
add
imul
imull
lea
add
sbb
mov
push
mov
mov
xchg
pushf
xor
out
popf
mov
adc
pop
sbb
rclb
pop
stos
pop
push
push
sti
cwtl
fldenv
dec
imul
jno
subb
push
testl
int3
sbb
dec
cs
sub
fnstenv
lods
jecxz
mov
ljmp
adc
rcrl
push
push
clc
sbb
xchg
lcall
cli
push
jge
xchg
rcrb
dec
cmp
and
lret
xchg
xchg
gs
bound
mov
movsl
and
mov
scas
cld
insb
mov
and
cmp
dec
dec
push
iret
sbb
adc
fidivrl
pop
divl
or
fiaddl
gs
sti
in
adc
xchg
pop
mov
sbb
sahf
pop
pop
push
mov
loope
xchg
push
push
sbb
xchg
push
pop
ret
sbb
dec
pushf
sahf
push
push
and
adc
leave
sub
dec
pop
push
push
mov
xchg
mov
xchg
icebp
sbb
sub
mov
xchg
inc
clc
mov
dec
fisubrl
xor
fxch
sbb
std
stc
jg
add
shll
xor
int
sub
std
mov
add
xchg
cli
mov
and
mov
movsb
inc
cmpsb
test
orb
cmp
sbb
movsb
adc
push
iretw
insb
cld
sarl
fwait
pop
iret
pop
test
icebp
pop
push
ret
push
sbb
mov
aaa
sub
mov
mov
inc
and
sub
mov
mov
outsb
sbb
fxch
pop
lret
adc
mov
xchg
lret
adc
mov
mov
mov
andl
iret
insl
stos
cwtl
xor
lods
and
andl
lahf
test
sub
xor
cmp
and
in
push
popf
lods
mov
sbb
aad
sbb
jecxz
inc
out
xor
pop
aam
out
repz
adc
cld
in
rorb
jge
test
in
js
adc
push
cmp
xor
loope
push
bound
add
sbb
es
and
dec
cmp
scas
sbb
xchg
xor
cmpsl
mov
fwait
push
das
mov
mov
jns
cmp
mov
stc
fwait
lea
adc
add
fwait
push
insl
mov
mov
in
js
lods
stc
push
mov
dec
mov
cmpsl
mov
mov
es
push
xor
ds
pop
shrd
loope
mov
mov
shrl
nopl
mov
adcl
adc
imul
scas
sbb
xchg
mov
insb
mov
mov
leave
and
sti
lcall
popf
push
ja
test
jg
xor
hlt
mov
pushf
cmp
out
sbb
flds
xchg
popa
inc
ret
daa
cwtl
inc
sbbl
cmp
mov
lret
test
cltd
pop
stos
and
mov
jnp
test
mov
cmc
enter
shrb
fcmove
mov
mov
in
push
pop
jmp
movsl
lret
fs
stos
jp
ss
subb
cmp
cmp
repz
mov
ds
cmp
push
seta
fmuls
mov
cwtl
pop
push
sbb
jge
fwait
js
xchg
loope
leave
pop
jmp
shll
sbb
pop
push
cmpsb
pop
stc
mov
mov
jmp
repnz
xor
scas
jno
stos
shrl
cmpsl
mov
fwait
mulb
mov
add
es
push
xor
icebp
and
dec
mov
mov
loope
and
mov
sbb
mov
xchg
int3
insb
subl
sub
xor
lods
fdivs
loope,pt
push
frstor
jp
loope
push
frstor
mov
loope
push
icebp
push
or
daa
out
jp
mov
popa
stc
stos
adc
cmp
xlat
rclb
mov
mov
cmpsb
mov
out
scas
std
icebp
cmpsb
push
sti
cmp
sub
jns
xchg
fsubl
stos
jl
pop
sbb
pop
jbe
jp
mov
test
pop
in
lret
ja
stos
dec
iret
loope
lahf
sysret
pop
inc
xor
push
mov
or
jbe
movsl
jo
xchg
mov
in
jmp
jmp
jmp
lock
push
mov
mov
sub
mov
loopne
sub
push
popa
mov
sarl
mov
loope,pt
push
frstor
mov
fxch
sbb
fnsave
mov
or
mov
out
or
push
pop
xor
mov
xchg
cmpsl
inc
psubd
and
jge
pop
mov
movl
imul
or
jb
sbb
pushf
lea
fistpll
sub
push
repz
and
jno
mov
setge
cmp
add
sub
into
jo
stos
add
lods
fdivrs
pop
push
insl
dec
push
bound
negb
pusha
cmp
call
dec
jnp
fnop
dec
ss
out
sbb
mov
mov
inc
divb
addr16
and
mov
lock
cltd
movsl
xchg
scas
cmpsl
adc
int
jge
mov
andb
cmp
lahf
mov
xchg
ss
xchg
stos
dec
out
popf
insl
mov
scas
call
mov
inc
add
xchg
mov
incl
xchg
pop
or
out
inc
and
lods
lret
mov
shrl
into
dec
out
jno
and
fwait
cwtl
sub
push
add
sbb
test
mov
xchg
inc
ja
fstps
ss
and
sub
test
mov
rcrl
sub
mov
sbb
lcall
sub
pushf
xchg
adc
popa
jmp
jg
jecxz
sbb
andb
lret
mov
imul
cmp
shl
add
stc
mov
int
subb
mov
jns
icebp
dec
in
lret
leave
lods
test
sub
dec
pop
inc
dec
mov
aam
js
ud1
addb
test
push
cmp
lods
sub
shll
cld
fisubs
shl
js
lahf
and
test
cld
ljmp
push
jmp
mov
lods
or
push
stos
cmc
jae
movsl
lahf
mov
lret
adc
mov
or
or
lods
push
adc
and
sbb
xlat
lods
shrl
jecxz
outsb
fisttpll
add
or
mov
leave
push
mov
imul
jl
xor
xchg
xor
enter
mov
aad
and
mov
sub
daa
stc
test
sub
and
outsl
mov
sbb
rorb
inc
cmp
int3
jmp
into
loope
push
movsl
rorb
dec
mov
lret
inc
subl
mov
cmp
sbbb
repnz
sbb
lock
je
mov
test
mov
outsb
ret
aad
test
cs
pop
cmp
fwait
sbb
and
mov
in
lret
mov
lcall
mov
cmpsl
xchg
sub
or
dec
fidivrl
lahf
mov
stos
in
lds
push
xchg
outsb
out
sbb
xchg
test
iret
cld
xor
xor
mov
cld
mov
popa
test
mov
fwait
jmp
iret
aaa
cmp
dec
outsb
jmp
repnz
test
and
out
xchg
out
lds
je
fwait
jo
dec
ss
mov
push
push
incb
lahf
rcrb
cmp
cmp
addl
xor
push
pop
inc
popa
or
aas
popf
rorb
push
leave
mov
xor
loop
pop
shll
adc
fcmove
xchg
fnstenv
cmpsl
test
mov
add
popf
loope
sbb
xor
test
jmp
mov
sbb
sub
sub
pop
pop
sbb
and
mov
dec
sub
repz
cld
mov
mov
sahf
int3
push
adcl
imull
mov
xor
push
mov
mov
or
jle
adc
and
out
and
orb
sub
movsl
or
adc
mov
sub
lcall
loope
lahf
mov
dec
pop
sbb
inc
cmc
push
movsbl
idiv
lcall
fidivrs
out
fidivrl
mov
mov
xchg
out
push
arpl
jmp
xchg
lahf
lods
lods
icebp
into
push
les
insl
stc
lds
out
mov
out
xchg
fildl
inc
fxsave
mov
xchg
fsubrl
jmp
adc
sti
shrl
data16
push
scas
xchg
xchg
in
add
add
pop
test
push
mov
add
ret
shrl
and
add
mov
mov
sbb
icebp
mov
test
ret
push
sbb
inc
leave
jmp
push
popf
inc
outsl
mov
mov
int
mov
jmp
sti
lahf
add
adc
mov
mov
xchg
test
in
mov
mov
out
sbb
test
dec
je
sti
inc
roll
scas
lods
rcrl
push
cmp
dec
lahf
sbb
mov
lods
adc
adcl
cwtl
jl
outsl
aaa
cltd
xor
sbb
mov
fwait
test
jecxz
cmpsl
cmpb
xchg
aad
int3
data16
pop
and
cmp
test
repz
pop
out
fwait
stc
pusha
sbb
mov
push
and
push
incb
jns
cmpsl
xchg
leave
xchg
mov
xor
xor
movsl
xor
movsl
cmp
shll
mov
xchg
scas
and
ret
sarl
jb
mov
mov
daa
lcall
mov
scas
fs
jbe
sbb
fldenv
aaa
mov
mov
movsl
cmp
movsb
scas
imul
add
jle
sub
xchg
mov
insb
and
pushf
rcrb
lods
lahf
cmp
dec
or
xlat
sub
pushf
sbb
adcb
mov
fisubrs
sahf
mov
test
fildll
lods
cmpsb
movsb
push
mov
push
add
insb
cmp
test
notl
sub
cmp
push
or
sbb
mov
movsb
mov
sbb
insb
lds
js
pop
pop
insb
fwait
in
sub
adc
mov
mov
mov
jo
ret
xchg
adc
fnstcw
xor
fcomp
xchg
fwait
add
mov
mov
stos
insb
push
cwtl
frstor
mov
inc
scas
jp
pop
xchg
fwait
lcall
jmp
and
cmp
mov
lret
jnp
vmovsd
jae
dec
mov
or
or
and
loope
mov
leave
push
mov
int3
jns
jno
fnsave
mov
stc
test
fistpl
mov
inc
cld
in
aad
cmp
test
subl
jmp
mov
inc
sarl
ds
cwtl
or
rol
sbb
push
mov
lds
xor
outsl
adc
add
adc
fisttpll
fwait
mov
mov
push
scas
adc
rcrb
fwait
xchg
std
ret
pop
shrl
cmc
dec
daa
push
push
stos
int3
and
xchg
popf
cmp
insb
adc
push
xlat
orb
fildl
fldt
stc
xchg
subl
outsb
and
std
test
inc
jb
adc
mov
leave
in
cmp
bound
pusha
es
outsb
lock
dec
repz
jns
lods
into
xchg
cmp
and
inc
adc
add
inc
and
adc
mov
imul
sbb
enter
andb
jo
jne
ds
inc
negl
movsb
pop
lods
lods
stos
mov
sti
adc
add
xor
int3
cltd
fsin
mov
scas
stc
ret
outsb
push
subb
sub
mov
push
loope
lret
inc
add
lods
mov
inc
xchg
repz
movsb
fwait
daa
mov
fidivrl
dec
in
ret
fldenv
scas
cmp
scas
lock
xor
sarb
jmp
in
loope
clc
pop
fwait
jle
fnsave
out
push
insb
xor
jmp
mov
mov
scas
jl
xor
mov
sub
mov
scas
jmp
stc
mov
lods
stos
test
daa
xor
test
inc
popa
inc
jmp
scas
sub
add
fisubrl
mov
mov
lret
stos
sbb
mov
xorb
push
mov
test
mov
push
rolb
adc
jle
mov
push
test
adc
pop
nop
lret
xchg
rcrb
scas
jg
lods
mov
negl
push
dec
and
test
jae
sarl
sti
or
lods
fidivs
std
aad
mov
stos
rorb
and
rolb
push
into
int3
xor
inc
sub
cmc
xchg
sti
push
nop
test
pop
mov
inc
jmp
mov
movsl
popf
mov
pop
mov
test
rcrl
mov
cmp
loope
xor
leave
ljmp
lock
imul
inc
dec
mov
test
lcall
mov
das
sbb
es
stc
cmp
mul
sub
push
xchg
jmp
in
and
repz
mov
sbb
fabs
or
out
pusha
push
mov
mov
insl
fldcw
fwait
or
outsb
out
sub
push
mov
inc
xchg
cmpsb
subb
push
mov
jp
sub
shr
mov
xorl
or
push
mov
xchg
std
mov
xor
shll
push
push
aaa
push
sarb
ret
dec
movsl
jp
subl
aad
and
mov
mov
cli
push
data16
push
lret
arpl
dec
or
add
push
mov
sub
jb
and
pop
outsl
test
idiv
fisttpl
stos
jns
mov
nop
lahf
lcall
mov
stos
popf
sub
scas
les
cmc
and
hlt
rcr
sarl
test
adc
aaa
fldt
pop
shrl
mov
xor
shll
pop
imulb
cmp
xor
mov
sub
pop
inc
and
test
pop
sbb
pop
pushf
dec
mov
outsb
mov
mov
pop
mov
jne
mov
xchg
sub
adc
dec
imul
jge
xlat
insl
iret
mov
pop
push
pop
cmp
rcr
and
mov
jg
jl
sub
dec
xor
fdivl
ljmp
or
movsl
shr
loop
gs
outsb
mov
divl
or
es
or
mov
pop
inc
movups
or
cli
fisttpl
or
fisubrl
inc
add
and
pop
ret
inc
cwtl
and
mov
stos
cwtl
mov
jg
test
lods
sbb
pop
and
xorl
test
lods
incl
lea
repz
push
lahf
push
xchg
std
fsubl
xchg
jb
cmp
jo
movsl
sub
stos
sbb
sub
sub
and
add
rorl
loope
pop
cwtl
adc
xor
lea
mov
arpl
loope
lock
jg
rcl
mov
mov
or
shr
pop
mov
and
lods
movsl
lcall
xchg
inc
ljmp
mov
inc
pop
rcrl
mov
push
test
adc
cs
xchg
mov
movsl
mov
inc
cli
mov
mov
sbb
mov
aas
inc
jl
pop
sbb
pop
cmp
sbb
push
jecxz
in
sarl
mov
call
sbb
mov
iret
pop
sbb
or
rcll
or
dec
lods
cmpb
push
push
out
pop
sbb
outsl
enter
add
add
mov
adc
sbb
bound
mov
test
cmp
jae
cmpsb
sub
jle
adc
and
jns
fwait
data16
lahf
insl
adc
add
andb
gs
pop
les
push
sti
mov
mov
test
inc
in
push
mov
test
fwait
dec
sbb
mov
jecxz
cmp
aas
lods
push
loope
push
out
mov
in
pop
add
mov
xchg
sbb
mov
jmp
fwait
test
test
xchg
aad
lock
cmp
loope
jo
popf
sar
fnstsw
dec
movsl
dec
mov
aas
xchg
sti
sub
insl
mov
cmpl
andb
sub
dec
sub
lods
sahf
add
fisubrs
fstpt
push
or
xchg
pop
shrl
sub
std
push
jp
mov
xchg
jp
xorb
xchg
push
cmc
scas
xor
mov
inc
rcll
jge
or
in
cmp
ja
jo
fwait
shr
bound
in
fwait
pop
or
repnz
das
mov
xchg
lcall
negl
daa
push
jno
mov
mov
addr16
cmp
loope
adcl
mov
xor
adc
push
xchg
lods
push
mov
push
mov
adc
rcrl
cmp
mov
lock
and
insb
or
jge
out
jmp
mov
imul
test
dec
push
rcrl
sub
bound
dec
fcmovu
push
stos
ss
push
add
add
sbbl
lods
imul
lods
cmp
fnstcw
or
nop
out
movsl
into
mov
mov
imul
enter
push
inc
dec
pushf
cmp
mov
mov
cmp
sub
cmp
mov
push
mov
xchg
add
ss
or
daa
xchg
xor
stc
ss
test
lods
fistpll
and
sbb
popf
xchg
cmp
sarb
and
mov
dec
cmp
out
fwait
jl
ret
mov
pop
outsb
mov
rol
sbb
push
or
shl
push
mov
pusha
xor
sub
mov
push
outsb
sub
inc
lahf
pop
adc
push
mov
and
mov
ret
inc
mov
cmpsl
xchg
jge
movsl
pop
enter
cli
pop
lcall
fxch
stos
leave
and
mov
jl
sbb
mov
decl
andb
sub
and
imul
fcomps
into
cmpsb
add
xchg
fisttpll
mov
jnp
mov
popf
push
scas
jle
lds
lahf
bound
fdivs
add
mov
or
call
xchg
jmp
mov
xor
arpl
jne
int
lods
dec
cmp
lret
cltd
adc
movsl
dec
push
les
mov
loopne
stc
add
call
mov
jle
mov
mov
stos
sbb
lcall
mov
sub
shrb
arpl
mov
pop
int3
test
mov
in
push
andl
test
xchg
cld
stos
adc
loope
mov
sbb
mov
stos
es
nop
sarl
mov
and
jg
fidivl
jno
aad
loope
cmpsl
jmp
shll
stc
stos
in
or
sti
sbb
lods
mov
and
mov
in
adc
mov
pop
fsubs
sub
xor
int3
push
cld
dec
lret
out
cmp
fnstenv
lret
sub
xchg
cltd
scas
movsl
or
adc
mov
cmc
mov
adc
in
into
xor
ret
sbb
lods
add
andl
jno
dec
xchg
adc
sbb
or
fildl
lcall
jno
mov
and
adc
cmpsb
jmp
mov
xchg
jns
sub
xchg
out
loope
cli
aaa
sbb
cmp
sub
dec
cmp
pop
popf
push
leave
insl
les
xor
jge
pop
inc
or
bound
add
or
and
sbb
dec
push
mov
dec
stos
inc
aad
fdiv
cmp
sahf
addr16
stc
xor
das
cmpsb
pinsrw
sub
push
jb
lcall
jnp
pop
leave
or
push
fcmovnb
sbb
fwait
std
add
loopne
or
inc
popf
in
lcall
aad
push
gs
mov
mov
sahf
pop
pop
mov
xchg
into
shl
movsl
scas
xor
lds
scas
push
lcall
push
dec
xlat
lods
sbb
scas
dec
mov
leave
stos
aad
xor
xchg
test
xor
lahf
sub
add
psrlw
add
ficompl
test
scas
icebp
mov
fmulp
and
int
mov
inc
shll
inc
cmp
dec
cmp
mov
cmpl
or
pop
fnsave
push
push
jle
xor
lret
repz
jp
xchg
pushf
mov
push
mov
lods
movsl
push
cmp
mov
cwtl
lcall
cmc
call
cmc
cs
lret
pop
mov
loope
sbb
insb
dec
cs
ret
flds
mov
sub
loopne
jns
inc
mov
cwtl
aas
aas
inc
dec
push
insl
pop
push
and
or
test
mov
sub
stc
push
sbb
jnp
sub
sub
shll
popf
insb
jns
add
rolb
movsb
pushf
mov
sbb
cmp
gs
mov
pop
mov
cmpsl
jle
out
out
push
jg
cmp
mov
push
test
lcall
std
ljmp
cli
fildll
xchg
loopne
jge
cmp
gs
shrl
mov
loop
xor
out
cmpsb
out
push
push
sar
adcb
pop
mov
push
mov
mov
sub
and
fsts
in
stos
lcall
push
push
push
push
dec
dec
aas
push
icebp
xor
stos
xchg
sahf
addr16
sub
das
dec
jl
je
setnp
mov
sbb
int
test
and
or
jb
dec
pop
flds
mov
cwtl
push
and
mov
lahf
int
adc
sbb
add
mov
popf
insb
sbb
mov
testl
jb
sub
cli
jnp
fcmovu
or
fisubs
adc
test
mov
sbb
lret
test
fistl
xchg
sub
pusha
int
push
push
dec
adc
cmp
outsl
cli
cmp
mov
inc
cmp
jmp
pop
jmp
outsb
pop
xchg
add
sarl
scas
lock
mov
mov
or
lret
push
lods
aas
sub
sub
out
adc
lods
lahf
cmp
add
pop
lret
xchg
sub
dec
xchg
mov
lahf
dec
xchg
jge
add
push
scas
sti
and
sub
and
bound
mov
fxch
test
fisttpl
sbb
jle
divl
add
push
sbb
imul
inc
xchg
inc
test
dec
and
mov
mov
add
mov
cmp
lods
mov
gs
nop
out
mov
cwtl
es
add
shl
pushf
and
sub
jp
and
das
ljmp
add
sub
fldenv
pop
cmp
in
movsb
fldt
and
icebp
mov
dec
int3
xchg
jae
xor
mov
shrb
sbb
subl
mov
push
cmp
sbb
lahf
shufps
and
outsb
shl
out
jae
gs
xchg
and
cmp
sub
cmp
jmp
sti
mov
inc
loop
dec
fnstsw
das
mov
fisubrl
lcall
pop
cmp
jmp
jmp
cmp
mov
cwtl
test
xor
movsb
sbb
inc
add
ljmp
outsb
das
or
or
stos
inc
add
jmp
fwait
bnd
sti
mov
in
insl
jg
sti
xchg
js
inc
lds
subl
inc
mov
sub
repnz
jb
push
lock
jmp
cwtl
xchg
pop
add
push
cs
inc
mov
in
repnz
mov
pop
pop
adc
ret
fwait
sbb
out
and
xchg
jp
pop
adc
scas
cmp
mov
les
xchg
adcb
push
mov
dec
rcrl
sub
or
jl
and
mov
xor
mov
mov
push
iret
in
jecxz
adc
or
xchg
pushf
sub
arpl
dec
out
sub
inc
adc
jnp
or
shrl
aaa
je
aas
adc
push
rcl
dec
mov
push
inc
lock
inc
addl
or
out
sub
imul
cmpsb
mov
rcll
mov
pop
pushf
movsl
insb
cmpb
push
cmp
inc
sqrtps
push
rcrb
inc
xchg
test
mov
jo
scas
inc
jmp
jge
int
cld
movsl
inc
inc
push
pop
push
dec
push
out
xor
mov
add
fxch
lea
scas
push
cmp
cmp
xor
push
mov
enter
mov
push
inc
adc
lods
cwtl
adc
test
pushf
push
fdivs
vmaxpd
mov
xor
pop
mov
adc
mov
cmp
out
xchg
lods
sub
xchg
cmp
mov
push
mov
push
add
xchg
loop
mov
popf
jp
imul
sbb
mov
mov
fisubrs
mov
xchg
iret
lret
mov
stos
outsl
sbb
cmp
inc
jns
mov
cmp
and
mov
mov
ret
mov
pop
inc
imul
icebp
push
stc
loope
cmpsl
mulb
push
lea
push
cmc
std
jle
dec
jmp
xchg
out
mov
xor
xor
fwait
and
pop
or
sbb
mov
call
rcll
lret
or
xchg
adc
mov
pop
xchg
pop
cmpsl
dec
test
and
sti
test
fnstcw
or
cmp
xor
popf
mov
or
xchg
stos
in
test
sahf
xchg
xchg
push
xlat
mov
or
fstpt
mov
push
test
xchg
pop
jp
jecxz
cmp
cmp
sub
rcr
sarb
add
insb
xlat
out
test
sbb
mov
das
push
orps
mov
or
jne
jecxz
cmpsb
dec
sbbb
sarl
or
rcll
stc
sub
jbe
addl
lahf
mov
sti
mov
pop
cmp
shr
add
add
pop
push
jnp
rcrb
sub
loope
fbstp
push
push
mov
push
jbe
repz
jmp
mul
pop
push
cmp
sbb
arpl
push
xchg
jns
cwtl
mov
mov
fstps
cmp
push
rcll
je
lret
mov
notb
jmp
loope
addr16
in
std
fisttpl
lret
outsb
insb
mov
mov
and
xchg
test
fcoml
push
test
push
xchg
sbb
mov
sub
les
fldcw
fcoml
stos
cmp
sbb
mov
push
fistl
and
mov
stos
cwtl
pop
mov
mov
scas
imul
sarl
and
mov
lret
incl
mov
sbb
sub
sub
xor
mov
rol
inc
js
ljmp
stc
jmp
xchg
scas
jae
ror
gs
and
mov
out
cs
cmp
sti
xor
cmp
sahf
xchg
xchg
sbb
cwtl
pop
jp
fistps
mov
xchg
mov
ss
and
subl
mov
cmp
mov
dec
sbb
test
lea
dec
mov
sti
cwtl
sbb
adcl
jge
mov
dec
outsb
dec
out
ret
mov
add
das
jg
jl
test
inc
push
roll
mov
push
pop
adc
sarl
xor
dec
or
fwait
outsb
pop
fsubr
or
insl
cmpsl
or
sti
insb
mov
lods
shll
out
in
fs
movsl
sub
push
mov
mov
inc
and
jns
loope
sahf
push
xchg
mov
mov
scas
lret
leave
aam
inc
mov
std
pmaxub
or
ds
mov
pop
dec
sub
xor
test
fldcw
push
movsb
sub
xchg
mov
subl
xlat
into
jl
pop
es
xorl
pusha
xor
in
int3
test
rcr
pop
mov
movsb
out
sti
fwait
xor
aaa
pop
jmp
push
aas
lcall
and
xchg
mov
dec
or
scas
push
ret
bound
icebp
sub
inc
xor
int3
cmpsb
repz
movsl
mov
or
add
test
ret
sbb
xchg
dec
jl
sbb
or
jbe
cs
pop
mov
fs
sahf
sbb
xchg
jmp
push
pop
rclb
mov
jmp
adc
pushf
cmp
rcpps
mov
jmp
ret
mov
pop
mov
mov
adc
outsl
cmc
shll
inc
test
out
mov
xchg
int3
test
cmp
and
xchg
push
fimull
and
int
shll
jp
push
int3
jb
imul
lods
test
stos
out
push
mov
jmp
fidivs
push
lds
push
inc
adc
mov
cmp
and
subb
adc
and
pop
add
and
xor
in
enter
and
insl
mov
pop
ja
mov
sbb
sbb
dec
xchg
enter
adc
xchg
xor
setbe
mov
pop
int3
in
jmp
jnp
sbb
push
dec
sbb
cmp
or
imul
dec
push
stc
gs
incb
mov
xlat
jmp
pusha
push
mov
jae
mov
mov
add
and
jns
jg
daa
jp
sbb
stos
jb
mov
mov
and
sub
pop
cmp
jo
xchg
or
lds
lcall
in
adc
imul
mov
loopne
push
hlt
mov
jne
mov
call
and
scas
or
scas
mov
xor
mov
outsb
cmpl
sbb
repnz
cwtl
adc
pop
jle
pop
test
xchg
mov
shrl
ljmp
arpl
inc
push
xor
nop
cld
jae
xchg
fists
mov
negl
enter
cmp
dec
fbld
lret
inc
add
push
mov
lods
mov
rol
cmpsb
xchg
rcr
test
movsl
fsubrl
add
stos
test
sahf
adc
mov
mov
push
leave
ret
add
or
inc
push
ds
nop
xchg
lahf
mov
push
sub
lods
mov
pushf
xchg
cmc
bound
ret
mov
insl
xchg
ror
lcall
lahf
xcrypt-cfb
cmpsl
and
mov
jmp
stos
push
out
pop
lods
jns
dec
movsb
inc
mov
mov
imul
ds
popa
sub
shrb
add
outsb
xchg
jae
sbb
fsubrs
fcmovne
cmp
movsl
ret
out
cmp
mov
mov
push
xor
xchg
or
cmc
mov
out
inc
imul
loop
loope
or
jecxz
inc
lahf
and
mov
and
fsubl
xlat
cwtl
mov
cmp
add
xchg
ja
lret
mov
pushf
push
mov
xchg
mov
xchg
mov
ss
in
cmpsl
sbb
sub
sbb
cmp
pushf
push
inc
push
ret
and
mov
cmp
fists
mov
fwait
es
mov
lds
pop
push
test
inc
mov
and
mov
xor
imul
pop
out
sbb
aad
push
push
dec
add
pop
jnp
add
pop
inc
hlt
jge
imul
sub
mov
mov
sub
rcrl
push
add
and
or
jl
mov
mov
movsl
neg
scas
mov
int3
fisttpl
test
mov
out
push
pop
mov
aas
mov
leave
fnstcw
cwtl
push
xchg
push
icebp
jge
test
cmp
sub
mov
sti
stos
or
cmp
or
mov
sbb
jge
mov
cwtl
and
movsb
repz
xor
test
jle
jmp
sarl
and
xchg
push
aaa
xor
int3
pushf
inc
mov
dec
out
xchg
rorl
ret
add
push
insb
mov
cmp
test
insl
ds
idiv
mov
pop
push
pop
ds
pop
lods
xlat
push
and
out
cmpl
test
popf
seta
mov
fiadds
jecxz
pop
dec
push
cmp
or
leave
push
xor
mov
mov
or
js
test
mov
ds
popa
xchg
pop
clc
add
movsb
aad
stos
xorl
loop
int3
sub
sarb
push
xor
inc
fwait
cmpsl
test
adc
and
insb
sub
psubsw
jg
or
jle
iret
sbb
lret
daa
mov
das
push
aaa
rcll
jmp
dec
adc
pusha
sub
mov
add
mov
lret
leave
stos
dec
std
inc
lret
insb
pop
xchg
xchg
jmp
leave
jmp
fs
mov
or
test
pop
jnp
lods
or
mov
mov
mov
mov
out
cmpsl
fwait
mov
stos
cwtl
pop
inc
movsb
mov
adc
roll
cld
es
add
js
pop
scas
leave
mov
adc
dec
and
movzwl
pop
and
jg
sub
xor
mov
pop
int3
or
add
gs
nop
test
rcrl
mov
sbb
sbb
pushf
cmpl
xchg
pushf
xchg
sbb
in
fmull
jecxz
cli
xchg
imul
pop
adc
fsubr
int3
aaa
stc
stos
sti
stos
mov
out
jg
jmp
jge
jp
push
lahf
jp
loopne
mov
stos
lds
shrd
mov
icebp
loope
pop
repz
mov
sbb
dec
insl
in
stos
push
rcr
das
jb
sub
sti
mov
fwait
test
lds
sahf
inc
filds
mov
jp
popf
mov
mov
dec
and
fwait
call
mov
or
xchg
lahf
jmp
mov
int
jmp
insl
daa
in
mov
clc
out
sbb
insl
loope
int3
xorl
dec
call
daa
in
and
xchg
fldcw
and
mov
sbb
mov
andl
or
insb
pop
fists
out
test
sti
leave
shlb
mov
bound
sbbl
stos
cmpsl
mov
inc
test
aas
jcxz
mov
cmp
inc
sub
adc
nop
adc
out
pop
jmp
adc
sarb
stos
mov
sub
xchg
sbb
aas
insl
subl
lods
test
lods
xchg
orb
push
jne
sar
sbb
push
sub
rcrl
add
pop
cld
inc
mov
xlat
push
out
sub
cmp
cmp
jno
lcall
sub
xor
fisubs
mov
push
xlat
sub
mov
adc
aad
mov
int3
mov
and
getsec
lods
mov
pusha
adc
xor
jecxz
xchg
lds
jbe
test
mov
and
sti
call
or
sbb
sub
jecxz
xchg
in
rcl
lret
jge
sbb
inc
pop
sbb
sub
sub
inc
pop
aam
sbbl
ss
sbb
push
mov
sbb
push
rcll
pushl
cmpl
jne
ds
inc
push
dec
clc
les
adc
mov
repnz
inc
out
ljmp
mov
mov
fucomp
or
movsl
jp
push
push
gs
cmp
int
scas
lahf
or
adcb
insl
loopne
jge
cmp
inc
adc
lahf
arpl
fnstcw
sarl
mov
cmpsb
outsb
repnz
icebp
out
into
mov
sub
jmp
pop
sbb
lods
outsb
sarl
scas
mov
stos
test
in
adc
xor
xchg
ret
cmp
xchg
ffree
shrl
hlt
adc
xchg
pop
xor
aas
lcall
jb,pn
and
imul
in
fwait
mov
pop
in
fsubl
xor
and
leave
xor
sbb
push
imul
and
jb
add
mov
push
add
push
jmp
sbbb
repz
shl
cmp
adc
lahf
lcall
sbb
xchg
test
in
jp
popa
outsb
add
arpl
std
inc
outsl
push
pop
pop
xorb
and
sub
mov
inc
sar
mov
cli
call
pushf
mov
cltd
movl
dec
rorl
push
mov
lods
jb
es
xchg
mov
add
or
adc
pop
mov
adc
or
adc
xchg
xor
pop
lock
push
fbld
out
sbb
inc
xlat
repnz
fucom
jno,pt
ss
mov
mov
leave
lcall
in
lods
fldcw
stc
jno
nop
inc
fmulp
jg
fwait
jne
and
mov
sbb
inc
lahf
scas
aaa
lods
xchg
fildll
adc
mov
sti
sub
sub
jecxz
push
imul
mov
in
xchg
mov
xchg
adc
imull
dec
fildll
or
xchg
push
fdivs
pop
int
lods
leave
inc
sahf
mov
mov
push
in
into
push
inc
xchg
lahf
cltd
and
loope
subl
mov
pushf
fs
aas
mov
fwait
push
popf
scas
sub
ret
jl
lods
std
loope
in
mov
fucom
dec
mov
dec
fwait
xlat
test
mov
and
sahf
sbb
jae
mov
or
mov
ds
xchg
mov
je
inc
cld
sbb
push
imul
insb
jbe
stc
cmp
into
pop
push
int
sti
stos
lds
fldenv
mov
ljmp
xchg
test
lock
dec
sar
scas
loope
adc
mov
and
loop
cltd
add
lea
sub
repnz
cmpsl
popf
jae
mov
and
repnz
pop
sbb
scas
pushf
nop
or
stos
subb
adc
or
push
ss
dec
shlb
ja
out
push
adc
add
faddp
lcall
jp
data16
jb
push
mov
mov
xchg
and
dec
jecxz
add
fisubrs
xor
test
mov
fnstenv
cmp
enter
sbb
xchg
mov
sub
mov
cmp
mov
push
mov
rcll
adc
jecxz
stos
and
or
pop
lret
and
inc
pop
jl
xor
sub
mov
andl
xor
xchg
mov
fwait
mov
sub
cmp
push
sub
adc
scas
stos
filds
int3
int3
xlat
in
pop
cltd
cmpsb
sarl
or
out
push
cltd
lcall
dec
sysenter
or
push
mov
jmp
push
push
xchg
mov
mov
or
sbb
fstpl
mov
xchg
sub
push
stos
stos
cs
popa
shrl
out
pushf
mov
inc
mov
mov
mov
push
and
add
movsb
aaa
cmp
pop
and
push
fidivrs
test
mov
sbb
pushf
xchg
js
mov
pop
scas
and
dec
sbb
or
push
lods
pop
inc
clc
inc
cmp
hlt
add
sbb
fsubrl
add
mov
add
or
scas
cmp
ss
clc
add
call
mov
pop
loope
out
or
mov
cld
or
push
add
aam
cld
fcmovnu
mov
testb
movzbl
mov
jg
rorl
lea
mov
out
cs
bound
movsb
sar
shll
xchg
mov
or
rcrl
cld
fists
les
cmp
xchg
add
in
mov
lret
clc
cmc
xlat
dec
pop
inc
loop
pop
pop
cmp
push
decb
shll
or
xchg
std
sbb
jo
mov
push
pusha
and
dec
sti
outsl
add
jns
push
mov
jae
push
fwait
lods
xor
push
int3
add
popl
pop
mov
push
scas
pop
mov
das
mov
cmp
push
fistpl
aas
fmuls
and
mov
cmp
sbb
daa
sbb
jp
mov
jnp
xchg
sub
test
js
jmp
and
dec
inc
or
fwait
mov
jge
mov
popf
push
lods
out
je
fucom
mov
and
je
cs
sub
movsb
xchg
test
pop
pop
and
and
sahf
xor
ja
inc
dec
mov
pop
cmp
out
dec
cmc
inc
push
fldenv
fbstp
dec
ds
push
adc
insl
mull
mov
lret
iret
dec
ss
fldcw
inc
mov
xchg
dec
out
es
mov
ds
das
lock
and
pop
or
leave
and
mov
loope
nop
lods
dec
dec
insl
das
dec
das
ds
jge
movsl
inc
loop
popf
stc
pop
pushf
add
or
punpckhbw
pop
aad
mov
pop
loope
fwait
sbb
sbb
xchg
xor
cmp
in
push
xorb
jnp
push
aaa
fcmovb
rorl
mov
icebp
add
subb
sub
daa
cli
push
out
push
aaa
movsb
loope
xchg
fst
and
stc
rcll
mov
out
sahf
inc
jp
adc
mov
sarl
leave
cmpsb
mov
loop
inc
ret
fcmove
insb
xchg
and
arpl
sub
mov
xor
lods
test
xchg
fnsave
insb
cmp
lret
adcl
std
mov
pop
or
insl
popf
orl
scas
jl
ja
lods
xchg
sbb
je
mov
sbb
mov
push
ds
sti
jno
or
mov
sahf
and
lds
or
cmp
fs
inc
aad
insl
fisubs
mov
xor
jl
mov
jge
rorb
push
or
sub
fwait
movsl
stc
pop
je
and
xlat
push
in
ljmp
scas
mov
rcll
inc
sbb
lret
dec
stos
mov
test
sub
mov
mov
mov
adcl
das
push
pop
pop
sti
leave
xchg
sbb
aad
pop
fisubs
popf
jl
idivl
inc
ds
cld
aam
push
movsl
dec
shll
test
dec
lds
and
xor
sub
scas
test
cmp
lcall
adc
int
pop
pop
push
push
movsb
xor
bsr
aam
cmp
ficompl
cmpsl
nop
sub
popa
and
sbb
dec
shl
and
mov
cmc
sub
push
aas
and
mov
jecxz
mov
or
adc
mov
fisttpl
lahf
repz
xorl
enter
push
xchg
push
push
cmpsb
sub
dec
ret
cltd
or
sbb
pop
jbe
sbb
sbb
lahf
sub
dec
sbb
fwait
xlat
scas
dec
mov
mov
jp
stos
mov
scas
leave
scas
xor
sub
leave
or
adc
xchg
or
lahf
inc
sbbl
scas
fwait
lock
mov
jl
xchg
pmaxub
dec
aam
sbb
pop
dec
push
sbb
aaa
fists
sbb
mov
xor
mov
ds
lods
arpl
lret
pop
jb
sbb
stos
daa
pop
push
jbe
mov
imul
mov
add
xchg
out
jno
and
jge
cmp
ret
cwtl
es
popf
movsb
xchg
xchg
outsl
inc
xchg
and
sub
popf
icebp
jb
mov
push
push
enter
cmp
imul
enter
mov
mov
popf
stc
into
js
call
shl
mov
mov
fisttpl
jp
loopne
fildll
shll
xor
push
and
cmp
movsb
cmp
mov
sbb
mov
adc
loop
shlb
ret
push
and
xchg
dec
ljmp
movl
xor
jnp
mov
in
mov
lret
ljmp
cmp
mov
cmp
popa
icebp
stos
add
adc
scas
push
and
xchg
fldenv
mov
stos
and
repnz
push
and
adc
jns
mov
nop
mov
fdivrp
mov
sti
mov
pop
out
sbb
lret
lods
bound
pop
repz
shlb
addr16
jge
sbb
sbb
lea
hlt
cli
dec
push
push
sarl
sub
dec
mov
push
push
daa
dec
sub
aas
jne
test
popa
push
lea
ds
aam
ja
sub
jb
gs
rcrl
stos
test
xor
cwtl
arpl
cmp
cmp
add
fldl
outsb
lods
xorb
out
fbstp
cmc
sub
jl
mov
mov
scas
inc
ja
xchg
ror
pop
jne
xchg
jl
dec
ret
mov
sarl
sbb
cmp
rcl
insb
aam
shrl
dec
scas
test
jp
popa
dec
xchg
and
cmpsl
pop
data16
cmp
std
mov
cmp
mov
xchg
aaa
dec
push
rcll
fidivrs
stos
out
ja
cmp
ja
mov
leave
push
mov
sub
mov
xchg
adc
loope
push
mov
nop
and
ret
lret
and
inc
lock
ljmp
inc
xchg
shrl
inc
mov
and
fwait
dec
aas
imul
push
popa
mov
adc
mov
sbb
sarb
pop
scas
and
mov
xchg
rcll
popa
add
mov
fdivrl
les
inc
iret
push
sarb
push
insl
push
ja
out
and
data16
pop
mov
test
fldcw
leave
push
push
sahf
or
mov
shrb
add
mov
loope
push
movsl
aaa
push
loop
push
insb
jl
xor
cmp
sbb
pop
add
add
sbb
xor
iret
mov
repnz
shrb
mov
and
xchg
sarl
decb
fiaddl
aad
dec
movsb
stc
mov
mov
stos
mov
sub
pop
out
mov
ss
loop
pop
std
mov
clc
sbb
push
addb
ret
enter
xor
shr
mov
ret
test
cmp
std
pop
push
mov
jnp
shrb
loope
test
inc
in
sub
aas
ss
jl
sub
js
iret
push
mov
push
pop
aaa
cmp
leave
fsubrl
sub
xchg
loopne
out
cmp
ficoml
int
out
and
push
cli
sub
mov
les
fdivs
sub
ds
rol
mov
imul
cli
fdivrp
xchg
in
rolb
cmp
test
mov
loop
sub
add
cmpsb
iret
and
sbbb
mov
jns
repnz
mov
push
inc
jb
hlt
xchg
ljmp
scas
mov
mov
jmp
pop
inc
sub
lcall
mov
adc
arpl
add
lahf
xchg
and
iret
hlt
dec
imull
lret
mov
into
mov
cmp
sar
cmp
add
pop
xchg
movsb
dec
fxch
inc
inc
mov
mov
addb
xor
movsl
mov
das
push
mov
mov
out
outsl
jge
fldt
popa
jle
push
push
movsl
adc
jae
test
call
mov
push
jbe
adc
outsb
int3
inc
enter
sbb
push
mov
pop
xchg
adc
jbe
dec
iret
idiv
cmp
mov
lock
sub
xchg
mov
add
jo
scas
mov
cmpsb
sub
jmp
xor
inc
call
cli
bts
sbb
xor
cmp
in
adc
into
mov
rorl
dec
fdivrs
scas
cwtl
mov
into
es
fisubrs
mov
mov
inc
xchg
pop
push
jecxz
test
pop
daa
push
xor
xchg
push
cld
adc
insb
mov
xor
pop
add
ficomps
xchg
js
in
js
pop
push
cmpsb
xor
stos
inc
mov
mov
scas
ror
sub
sub
cwtl
mov
xor
dec
sub
or
call
mov
jge
adc
sbb
flds
cmp
push
das
mov
mov
xor
pop
inc
arpl
jp
mov
mov
ret
mov
test
cmpsl
jge
scas
and
movsb
stos
mov
pop
pop
pop
aas
stos
inc
mov
js
or
movsl
movswl
rcr
ficoms
ljmp
inc
mov
sub
sub
scas
enter
test
push
dec
insl
addl
sub
inc
inc
mov
inc
and
cmpsb
lods
loope
stos
popf
aad
or
inc
flds
push
out
sbb
jmp
mov
imul
out
mov
mov
arpl
mov
icebp
add
mov
pop
jmp
sbb
and
fwait
adc
sub
cmp
lret
mov
xor
adc
sub
jge
push
lods
mov
adc
pop
xor
rclb
aam
jmp
and
sbb
push
sub
dec
popf
xchg
lret
lea
and
ljmp
ds
xor
cltd
inc
js
scas
and
or
aad
sub
dec
dec
adc
cmp
fimull
rol
insb
mov
repz
loope
jb
mov
and
cmp
dec
scas
add
mov
cmp
sbb
sbb
mov
nop
inc
test
jecxz
sbb
imul
mov
or
mov
fadds
out
int
dec
mov
imul
cmp
faddl
mov
push
xor
ffree
lds
mov
mov
cmovb
rolb
mov
hlt
loope
sub
popa
sysexit
sbb
sahf
pushf
jle
insl
popf
jo
jmp
lock
rorb
test
iret
mov
das
cmp
imul
sub
lds
aaa
lret
mov
enter
jo
aad
pop
ja
pop
xchg
xor
push
imul
into
movsl
ret
andb
mov
fadds
and
xchg
and
inc
sub
pop
and
cmc
gs
sbb
push
iret
xchg
test
push
lods
or
das
and
ret
push
lahf
cmc
adc
sti
cld
out
or
dec
push
popa
popa
push
imul
loop
or
jge
movsb
ss
subl
jo
xlat
out
lcall
mov
icebp
sub
insl
xchg
stc
out
push
sarl
jecxz
mov
or
mov
addr16
adc
mov
lahf
xchg
sbb
xchg
jl
sub
mov
pop
pusha
cs
adc
shl
cmp
push
jle
sbb
cbtw
or
adc
lret
pusha
outsb
data16
sbb
xchg
lret
push
mov
mov
lods
mov
movsl
test
clc
pushf
sbb
in
xchg
or
insl
mov
cmp
loope
fnstsw
imul
jp
dec
lcall
push
shl
adc
test
sub
mov
aaa
jmp
fnstenv
cmp
ljmp
lea
ds
pop
cwtl
pushf
xchg
in
xchg
scas
lahf
push
adc
and
mov
gs
xchg
mov
push
scas
xchg
add
jbe
push
mov
pop
rcrb
dec
xor
lods
xchg
mov
xchg
mov
cmp
jb
push
scas
mov
lcall
lods
cwtl
shl
mov
daa
push
push
scas
xlat
and
mov
andb
movsb
notl
pop
lcall
or
insb
rorl
sar
test
mov
mov
aad
dec
movsb
das
adc
movsb
inc
popf
popa
lock
lods
dec
dec
sbb
loopne
jecxz
fstpt
jp
pop
mov
das
dec
lea
inc
icebp
mov
sub
lods
popf
sbb
and
rorl
jge
mov
aaa
mov
mov
mov
ror
out
test
xor
fmuls
dec
lret
sbb
ret
daa
test
iret
adc
xchg
or
fmulp
out
inc
lods
in
stos
call
mov
repz
push
inc
sarb
stos
sbbl
push
in
lahf
mov
mov
nop
sub
scas
sub
adc
fldl
mov
push
test
jecxz
js
jnp
and
mov
popf
daa
or
fbld
fnstsw
jo
push
je
pop
and
out
popf
push
and
sub
sub
pop
popa
jge
fwait
insl
lret
test
sub
loop
pop
xchg
mov
fcomip
cmp
pop
insb
mov
xchg
mov
nop
stos
jge
mov
xchg
mov
test
and
xor
fxch
sub
add
xchg
rorl
sarb
sbb
insl
cmpsl
dec
insb
imul
lcall
ja
rclb
iret
mov
push
incl
mov
pop
jg
sub
inc
mov
popf
pushf
xchg
cmp
rcll
lret
mov
add
or
mov
lret
lret
xchg
or
leave
dec
or
lcall
xchg
je
pop
ret
mov
push
int
cmpsb
in
inc
sub
xor
jle
clc
sbb
les
es
ljmp
les
push
cmpsb
fldcw
sub
pop
mov
mov
out
sbb
adc
push
xchg
xor
lds
add
popa
ljmp
decl
inc
dec
hlt
and
jb
sbb
adc
cmp
adc
push
cmp
movsl
mov
js
mov
mov
dec
jge
cmp
out
call
mov
jmp
imul
lods
jnp
sub
cwtl
into
sbb
sarb
mov
or
test
sbb
into
lods
cmp
fnstsw
add
mov
jo
sub
mov
stos
push
mov
sub
inc
sbb
xor
pusha
push
insb
mov
jb
je
jbe
jo
adc
sub
nop
lcall
mov
mov
ds
mov
outsb
int
mov
test
lret
sti
test
stc
insb
popa
xchg
outsl
mulb
mov
rorb
mov
fs
sbb
imul
ret
pushf
cs
shrd
imul
stos
dec
shrl
into
fbstp
dec
push
cmp
nop
fisttpl
scas
cmp
shll
push
jge
pop
pushf
pop
mov
add
jecxz
lcall
mov
test
test
xor
inc
outsl
cvttps2pi
xlat
xchg
xchg
add
adc
jle
mov
es
push
insl
js
cltd
gs
xchg
xchg
pop
jge
and
jmp
lret
mov
xchg
fwait
movsb
mov
xchg
arpl
xchg
mov
adc
fists
cmpb
cmpsb
test
mov
stos
shrl
mov
test
adc
adcl
xchg
mov
shll
xor
inc
fwait
dec
and
popf
into
rcll
addl
daa
jecxz
push
mov
cmp
mov
lods
out
lds
mov
and
lcall
lods
xchg
cwtl
sbb
sahf
mov
stc
lcall
xchg
stc
andb
movsl
leave
sub
aad
mov
shll
popa
stos
movsb
inc
mov
leave
mov
fstps
sub
orl
mov
pop
mov
cmp
fisubl
out
add
jo
les
mov
push
lods
aad
in
pop
mov
sarl
mov
xchg
popf
popa
lret
out
mov
pop
add
cmpl
test
ret
mov
xor
leave
stos
fwait
ljmp
insb
sbb
xchg
jmp
imul
popf
push
sti
inc
nop
mov
inc
imul
cmpsl
sbb
loope
js
mov
call
movsl
ret
test
jg
test
mull
fldcw
punpcklbw
daa
cmp
xchg
loope
jle
aaa
ss
insb
inc
pushf
mov
sbb
or
repz
pop
nop
push
lds
jo
jbe
aas
loop
stos
shrl
lahf
or
leave
fsubr
mov
loope
push
adc
mov
pop
les
xor
and
cld
fistps
mov
mov
mov
pminub
or
sub
hlt
leave
xchg
mov
fbld
andb
test
nop
pop
lds
cmp
or
movsl
pushf
fs
ja
jecxz
sahf
mov
pop
stc
mov
or
or
repz
fdivl
movsl
insb
outsl
aaa
sub
xchg
popf
jecxz
mov
sbb
push
sbb
pop
xor
bswap
sub
movsl
inc
lcall
xor
cmp
andl
movsl
out
in
lar
scas
jae
ds
subl
mov
sbb
rcrb
shl
gs
jecxz
ds
lcall
sbb
aad
nop
pop
cmpsl
and
add
push
mov
out
int
aad
mov
xor
mov
dec
das
sbb
outsb
xor
push
or
sub
mov
xorb
mov
adc
mov
test
sbb
jnp
dec
mov
xor
rcrl
inc
and
pop
mov
cmp
push
mov
loop
push
insl
test
loopne
jg
jns
scas
push
and
sysexit
popf
mov
bound
push
xchg
testl
and
in
imul
test
push
sbbb
inc
adc
popl
out
adc
ret
sbb
aam
fstpl
inc
inc
fistpl
test
xchg
xor
mov
mov
adc
push
sub
hlt
and
sahf
faddl
xchg
idivl
bound
sbb
dec
inc
sbb
inc
fidivs
xchg
pop
xchg
sbb
scas
psubd
cmc
cwtl
adc
mov
cmpsl
jle
sbb
int
pushf
sbbl
mov
cmpsb
pop
loopne
lock
xlat
rcrb
dec
and
push
push
pop
test
adc
insl
rorb
push
adc
nop
orl
decl
mov
mov
xor
and
mov
dec
sbb
repz
pop
mov
xor
push
dec
daa
test
sarb
jp
mov
or
jmp
dec
fwait
xor
push
fnstcw
cmc
in
or
lcall
jge
mov
sbbb
dec
lods
and
inc
pop
or
and
sahf
pop
mov
lods
cmp
jmp
dec
rol
sbb
cld
test
adc
jb
and
fists
xchg
jp
jl
push
dec
aas
pusha
ljmp
addl
js
xchg
fsubs
arpl
xchg
mov
cmpb
lahf
mov
sub
mov
bound
dec
mov
push
test
fildll
xchg
mov
inc
sbb
cltd
dec
fwait
mov
ljmp
test
dec
sub
out
xor
stc
xchg
jns
push
repz
adc
in
adc
andl
fcoms
push
lods
es
xlat
das
std
das
dec
cs
mov
mov
sbb
leave
lds
add
push
dec
push
and
scas
loope
push
outsb
push
push
ret
sbb
mov
insb
push
push
loop
push
add
arpl
fmull
adc
pusha
lret
sti
je
outsb
lods
stos
fnstenv
jecxz
jnp
fnsave
cmp
or
mov
or
push
lods
in
sbb
jle
aam
arpl
xchg
int
rcrb
jecxz
outsb
cmp
pop
mov
add
sbb
inc
xor
cmp
cmp
inc
subl
mov
push
js
jno
iret
xchg
nop
loop
and
andl
insb
ja
sbb
pop
outsl
dec
inc
xchg
ss
sub
push
lea
jne
neg
mov
stc
bt
or
jmp
dec
jmp
cmp
or
fidivrl
sub
std
or
push
shrl
out
std
outsb
adc
repz
sbb
xor
inc
inc
sti
mov
andl
insb
mov
in
nop
outsb
aad
or
jb
xchg
out
and
rcrb
cmp
jp
stos
mov
outsl
and
addb
mov
ss
xor
mov
pop
insl
dec
pop
inc
imul
xchg
dec
push
pop
mov
add
subb
fisubrl
orl
jae
jle
gs
cmp
loop
push
int
mov
das
cs
loope
imul
std
ret
jecxz
stc
std
imul
fcomps
xlat
in
jle
pop
insb
pop
pop
cmpsb
jnp
xchg
mov
call
addl
dec
out
sarl
shrb
leave
pop
jmp
mov
fldt
xlat
fwait
dec
mov
jg
ja
adc
icebp
inc
cmpsb
stos
ds
mov
dec
inc
aad
pop
aad
inc
lock
fbstp
fiadds
stc
loopne
imulb
fistpll
xchg
mov
xor
lds
and
and
inc
imul
test
pop
xor
bound
mov
neg
fiadds
cwtl
xchg
das
push
dec
add
sahf
push
pop
repz
jle
out
and
push
xchg
adc
mov
jo
pop
jnp
nop
sbb
pop
aaa
and
scas
es
ficoms
pop
loop
inc
cmp
or
dec
pop
out
inc
insl
and
push
loope
nop
push
add
scas
cmp
cltd
test
xchg
adc
add
cmp
mov
andb
outsl
mov
in
or
shll
sub
arpl
lret
sti
shrl
test
pop
add
pop
push
pop
add
or
sbb
pop
cld
insl
adc
je
dec
cmp
inc
sbb
mov
into
sbb
into
jge
mov
iret
sahf
add
icebp
push
push
js
lds
sti
mov
lock
push
xchg
jmp
fs
jb
sbb
jle
sbb
movsl
and
pop
cmp
mov
push
xor
out
mov
mov
jbe
and
cld
mov
cmp
hlt
ljmp
xor
testb
adc
cmp
jo
cmc
sbb
and
sahf
xchg
cmp
push
xor
repz
sti
ja
adc
sub
cmp
das
push
lea
jne
movsbw
add
sub
shl
bsf
lahf
mov
add
rcr
add
stc
pushf
mov
clc
clc
test
mov
test
pusha
pushf
lea
je
test
test
pusha
jmp
xor
cmp
or
jns
xchg
and
sbb
inc
and
mov
mov
mov
mov
fistpll
dec
jns
movsl
pop
popa
mov
sbb
aam
cli
or
test
jnp
inc
inc
adc
fsubs
popf
lock
mov
adc
mov
loope
mov
cld
pop
push
insb
je
sub
decl
ljmp
loop
imul
dec
outsl
fs
gs
popa
outsb
fs
gs
add
loopne
dec
inc
clc
mov
bt
stc
pushf
cmp
pushf
pusha
lea
jb
bt
jmp
push
mov
pusha
movl
push
movl
pusha
lea
jmp
xchg
not
cmc
xchg
shld
adc
bsr
mov
rcl
bts
rcr
shld
mov
pop
cmc
inc
bts
mov
sub
inc
mov
pushf
sub
lea
setae
setge
pushf
lods
stc
test
add
rcl
ror
cmc
sub
clc
rcr
stc
ror
not
push
stos
lea
jns
pushf
pusha
mov
lea
pusha
movb
call
setne
mov
pusha
pushf
pushf
call
lea
call
pushf
cmp
cmc
sub
pushf
mov
push
movb
lea
jne
pushf
lea
call
pushf
movb
push
pushf
lea
jmp
bt
not
jmp
stos
and
dec
mov
popf
pop
mov
dec
xlat
cmpsb
adc
je
cs
adc
pushf
mov
cmp
xor
jmp
or
lods
xor
testl
inc
mov
shrl
fxch
hlt
nop
and
mov
and
cmp
and
outsb
stos
fnstenv
push
and
pusha
lea
jne
pushf
movb
movb
mov
push
lea
lea
jmp
shld
push
movsbl
btr
neg
mov
sbb
movsbw
cmp
push
test
bt
shl
setl
push
sar
xchg
movsbw
push
mov
bts
test
sar
test
push
not
push
stc
bts
push
setbe
mov
adc
sbb
xchg
stc
mov
and
mov
call
cmp
test
cmpb
pusha
call
sbb
xor
mov
jp
loopne
loope
adc
and
add
sti
sub
test
xor
lahf
stos
jmp
mov
ficoms
lods
cs
fisubrs
test
popa
ss
int
mov
shlb
add
shlb
cmp
sbb
aas
xor
cmpsb
aad
sub
xchg
popf
es
in
faddp
out
ret
adc
ja
add
mov
pop
loopne
cmp
mov
sub
loope
inc
sbb
fcmove
dec
cmpsl
shlb
repnz
fs
inc
in
jne
mov
jae
add
pop
jo
outsl
ret
sarl
fsubs
mov
adc
lret
pushf
movsl
mov
idivb
cmp
sub
pusha
pushf
rep
movsbw
lea
mov
mov
pushf
mov
mov
mov
lea
jmp
push
jl
sub
jle
movsl
jg
lds
and
add
inc
stos
fidivrl
dec
sbbl
orl
pop
dec
mov
div
push
repnz
insl
pop
sbb
pop
dec
adc
sbb
xor
adc
in
enter
lds
cs
xor
lret
add
pop
movzbw
bsr
mov
pushf
pusha
and
pusha
push
add
sub
cmp
cmc
cmc
add
pushf
dec
mov
lea
jne
bswap
cmc
mov
jmp
jo
outsl
xor
or
sbb
jo,pt
jp
nop
rorb
lcall
adc
inc
and
outsb
popa
das
out
bound
adc
jnp
pop
mov
inc
in
jge
gs
popa
xchg
sahf
or
je
stos
mov
push
cmpsb
insb
dec
pop
mov
daa
or
das
das
push
jmp
sbb
pop
pop
xor
push
cmp
jl
cmp
mov
imul
inc
iret
outsb
dec
or
lahf
mov
in
repnz
xlat
test
cmp
fwait
pop
jb
pop
mov
movb
pop
pop
lods
pop
mov
nop
into
int
adc
sub
dec
push
js
xor
or
fmull
aaa
jecxz
fldenv
and
mov
leave
in
mov
xorl
cmp
ret
or
lcall
mov
repz
and
stc
pop
push
add
push
mov
dec
mov
fildll
adc
insl
loop
push
aad
loop
ret
inc
or
sub
push
shrb
sti
or
mov
sbb
inc
stos
sub
xor
lret
lcall
aad
push
stos
push
sub
adc
addr16
sub
push
outsl
sub
pop
sbb
lock
cmp
into
daa
out
orl
lret
or
imul
push
or
iret
cli
gs
call
xor
or
fldt
mov
ja
mov
inc
pop
sbb
insb
pop
xchg
pop
cld
repz
mov
inc
push
xchg
push
mov
xchg
jmp
enter
mov
push
es
or
jg
cmp
sar
fiaddl
notl
cmp
add
dec
pop
pop
fstpt
and
sbb
jmp
lea
jb
jmp
lea
jae
call
push
xor
or
fucomi
pop
mov
xchg
sahf
jbe
sahf
push
out
cmpsb
pusha
loop
test
mov
mov
gs
gs
adc
add
iret
dec
xor
leave
lahf
sub
jnp
movsl
jmp
clc
pop
test
loopne
out
or
xchg
or
xchg
pop
push
shll
adcb
loope
daa
inc
inc
xchg
mov
inc
mov
aaa
daa
mov
out
or
add
test
or
lret
out
fdivrp
scas
lea
or
insl
cld
sbb
xor
aam
notb
lods
divl
test
push
sbbb
cmp
mov
mov
add
and
adc
xor
xor
or
stc
push
ja
push
mov
mov
push
xchg
xor
in
jle,pt
pop
daa
inc
xor
insl
pop
daa
aam
adc
sbb
push
int3
mov
out
test
xor
jb
outsl
cmpsl
and
fcmovnu
into
mov
add
popf
rorl
xlat
mov
mov
imul
xrelease
add
or
movsb
les
inc
xchg
and
fwait
js
lds
mov
cmpsl
test
rorl
test
fst
cmpb
loop
es
mov
xchg
push
and
or
icebp
inc
jb
fimuls
adc
xor
lods
test
xchg
rclb
in
push
in
lret
jbe
jecxz
sub
add
cli
cmp
scas
mov
add
neg
push
shl
mov
bsf
aaa
mov
daa
aad
bt
dec
sub
lea
btr
push
movsbl
not
aam
push
test
push
shld
call
push
add
das
sub
pop
and
aad
aaa
fstpl
xchg
call
jecxz
adcb
adc
call
call
push
inc
scas
int3
xchg
outsb
and
ret
pop
popf
inc
fnstcw
sub
pop
or
lds
std
rorl
movsl
cmp
cmp
fcmovu
movsb
shlb
mov
jb
daa
aam
insl
sub
push
dec
xor
dec
adc
cmp
mov
jmp
lahf
push
movsbw
movsbw
mov
movsbl
lea
call
or
and
sbbl
sub
pop
pop
jne
andl
sub
pop
jmp
xchg
call
lret
add
or
dec
dec
mov
scas
es
inc
and
jb
and
sbb
rcll
pop
dec
mov
cmp
cs
jle
and
mov
pop
xor
xor
cmp
ret
inc
add
negl
push
mov
jbe
pushf
pushl
mov
mov
bswap
movzbl
not
pop
pusha
pushf
mov
pushl
ret
pusha
call
call
jo
cld
sub
add
das
cwtl
mov
and
addr16
adc
cmp
push
mov
adc
leave
sbb
aam
aaa
js
lods
sub
nop
xor
jnp
xor
jno
std
jns
test
pop
jb
ret
dec
mov
je
fs
cmc
lret
jno
lret
xchg
subb
outsl
mov
call
dec
add
dec
fwait
dec
cmp
xchg
pop
fst
cwtl
jge
xchg
shrl
cmpsb
or
scas
subb
dec
jmp
les
sbb
int3
je
add
not
mov
mov
mov
lea
call
pushf
movb
jmp
fisubrl
sub
mov
call
dec
or
mov
inc
arpl
pop
mov
add
xchg
mov
enter
push
push
je
add
xchg
lret
fcoms
sub
push
ret
sub
pop
push
test
pushf
notl
mov
stc
clc
jecxz
dec
push
xchg
mov
fcomi
mov
stos
add
pushf
xchg
fnstsw
inc
inc
pop
sub
shlb
lea
jmp
mov
or
loopne
sbb
jns
inc
mov
push
je
push
test
aas
pop
scas
sub
call
hlt
jne
insl
rorl
inc
cmp
cwtl
mov
cs
xor
ret
mov
adc
cli
fisttps
ja
mov
lods
pop
inc
xchg
xor
in
xor
cmp
int
mov
test
addr16
test
mov
test
imul
adc
sub
fnsave
mov
movsl
sbb
pop
fimuls
jno
mov
loop
pop
sub
cvtps2pd
or
rclb
adc
lods
aas
sahf
sti
out
mov
add
dec
flds
jnp
inc
push
sbb
mov
push
lret
data16
fidivs
add
cmc
or
pushl
call
mov
lea
je
bt
cmp
clc
cmp
pusha
push
lea
je
cmc
clc
cmp
jmp
xchg
subb
push
pusha
lock
and
or
cmp
lds
outsb
movsl
mov
insb
fxch
aas
jl
add
fistl
fwait
stos
leave
pop
fidivrs
ss
insb
mov
xchg
jo
ss
mov
into
xor
fdivrp
xor
pop
movsl
sub
mov
jecxz
fldl
push
add
mov
in
rclb
mov
fdivr
fdivs
inc
add
addl
fcompl
stc
push
or
jmp
mov
lea
cmc
push
mov
clc
mov
clc
mov
ror
cmp
pusha
cmp
sub
test
pushf
not
test
push
add
jl
clc
xor
call
neg
add
bswap
pusha
not
sub
movzbw
shld
call
add
sub
or
out
jl
push
repnz
fwait
adc
mov
mov
pop
mov
repz
mov
dec
add
nop
mov
mov
fs
push
and
push
add
mov
mov
add
cmpsl
icebp
pop
mov
jge
je
sbb
movsl
mov
jge,pt
js
data16
jp
mov
sbb
aaa
mov
into
imull
or
jmp
inc
loope
sub
or
clc
in
sbb
stos
jne
ss
adcb
mov
fiadds
mov
cltd
cmp
nop
jle
mov
pusha
imul
mov
ds
jmp
add
out
cmp
call
jmp
adc
sub
or
push
in
or
xchg
cmp
imul
push
xor
sub
pop
and
mov
sub
int3
mov
popa
fsubs
movsb
mov
mov
push
add
pop
stc
jg
fstpt
or
mov
mov
out
ret
scas
fisubl
fnstenv
add
xor
adc
aam
enter
sub
mov
xchg
adc
add
mov
scas
push
movl
movw
push
lea
jmp
call
and
add
sub
rolb
lcall
jl
loopne
idiv
cmpsb
les
pop
lea
inc
mov
lods
pushl
jnp
dec
xchg
dec
ret
ds
lods
jle
cmp
push
fidivrs
cmpsb
cmp
stos
enter
std
mov
je
cmc
pusha
add
test
pusha
cmp
push
push
pushf
lea
jb
stc
bt
bt
cmp
pusha
mov
lea
jae
cmp
rcl
ror
mov
sub
mov
shrd
setl
shrd
mov
test
push
sub
movb
jmp
or
push
lea
je
lea
pusha
pop
jmp
movl
push
pushf
pushf
push
lea
jmp
js
xchg
sub
or
fdiv
add
ret
mov
jae
inc
ja
jle
les
push
cs
inc
out
iret
call
sub
dec
jecxz
clc
sub
bound
sub
jb
inc
adc
rorb
arpl
mov
loopne
mov
adc
jmp
mov
imul
push
inc
push
xor
cs
insb
add
inc
lahf
mov
mov
fwait
cltd
addr16
jae
cmc
popa
jno
push
out
add
mov
sbb
imul
cmc
jmp
mov
xor
pop
cmpsl
mov
lcall
mov
mov
in
jl
stc
jns
in
fwait
cmp
int
fwait
mov
mov
jno
and
jge
inc
imul
lock
lock
xor
jnp
push
stc
movsl
arpl
popf
sbb
pop
mov
xor
minps
orb
mov
in
jp
jge
or
arpl
test
aas
mov
mov
dec
or
jge
in
pusha
movsl
fwait
jmp
xchg
pop
stc
push
and
jecxz
push
jne
test
aas
sub
xor
or
shr
dec
ret
mov
loop
pop
insb
hlt
mov
mov
lret
dec
add
or
sbb
pop
cmpsl
jmp
popa
jmp
or
hlt
mov
bound
mov
jae
negl
ffreep
jg
mov
fldenv
rorb
jmp
or
repz
popa
shlb
out
mov
mov
jbe
xchg
jno
hlt
lcall
mov
cli
pop
jge
cmp
mov
pusha
pop
jns
push
mov
fstl
mov
fldenv
and
cli
inc
push
cltd
hlt
add
or
inc
or
loop
push
or
test
jg
jmp
mov
fstps
pop
sahf
aaa
pop
inc
cwtl
sub
shll
sub
add
push
lret
mov
mov
sbb
push
jmp
pop
pop
cmp
negb
jmp
mov
pop
jmp
mov
pop
jmp
jmp
xor
xchg
fidivl
frstor
sub
mov
cltd
cmpsb
xchg
mov
pop
shlb
push
sti
mov
mov
in
or
std
cmc
xchg
ja
cmp
fsts
sti
and
fistl
popf
push
fsubl
icebp
ja
mov
jne
orb
popa
sbb
ljmp
outsl
mulb
inc
xchg
inc
imul
stc
test
mov
stos
and
std
lods
sti
mov
xor
add
shll
jecxz
mov
sub
mov
jmp
dec
mov
stos
lods
xchg
shll
aas
leave
jmp
sbb
orb
ret
fnstcw
push
rorl
daa
inc
dec
sub
inc
inc
mov
jge
push
lret
sub
mov
mov
imul
jecxz
std
test
and
lret
mov
jno
psraw
pop
jns
sbb
or
sbb
data16
pop
inc
xchg
jecxz
or
popf
jecxz
popa
lods
cmp
inc
test
inc
mov
testb
push
adc
sub
dec
lahf
inc
cmp
imul
ja
mov
jg
mov
sbb
sbb
pop
imul
idivb
jp
bound
repnz
imul
inc
xchg
add
sti
rorl
jmp
arpl
popa
in
pushl
sub
addb
dec
and
xchg
mov
cmpsl
pop
inc
mov
mov
jp
sub
mov
insl
outsl
mov
mov
lods
mov
mov
lret
enter
mov
ljmp
adc
fistl
add
popf
stos
fwait
dec
inc
cs
mov
loope
and
xor
jmp
test
sub
loope
xor
xor
rcr
scas
lds
adc
mov
mov
mov
cmp
add
cmp
ret
cs
xchg
arpl
leave
jae
fldcw
jns
rorl
stos
imulb
pushf
stc
lcall
sahf
cwtl
ret
sub
fdivrl
loopne
add
ss
inc
mov
leave
cmpsl
mov
das
call
and
push
repnz
out
cmp
jmp
sub
aad
mov
pushf
popf
fwait
push
jnp
das
popf
fistpl
out
xchg
cmc
out
mov
mov
inc
inc
pop
fisubrs
and
dec
mov
sub
and
leave
stos
cmpl
lret
mov
ret
fstl
roll
lods
mov
sarl
loope
and
clc
ss
sbb
hlt
fld
jns
add
mov
jmp
xchg
or
jl
fwait
out
out
in
out
mov
mov
xchg
and
int3
scas
stos
sbb
bound
push
cmc
dec
leave
mov
jmp
sbb
add
mov
movsl
sbb
mov
mov
mov
mov
mov
mov
mov
lahf
stos
cmpsl
mov
fwait
popf
mov
rcrl
mov
fucomi
and
push
fldt
mov
sbb
pop
sbb
dec
jmp
loop
jmp
xchg
test
stc
push
mov
xor
out
cmpsl
fs
dec
outsl
sbb
mov
icebp
sbb
insl
jp
movsb
sbb
dec
push
pop
sbb
mov
and
inc
push
mov
mov
stos
fstpl
popa
mov
and
add
sub
mov
leave
shrl
mov
xor
xor
repnz
shrb
cli
cmc
or
or
sbb
sub
fwait
sbb
ficompl
pop
mov
mov
mov
loope
cmpl
movsb
popf
fsts
push
lret
stc
mov
mov
sbb
je
xchg
adc
jp
add
out
ljmp
cmp
jecxz
lahf
int
aaa
lret
push
inc
cltd
les
mov
mov
lock
mov
je
mov
lea
inc
lahf
out
xchg
sub
mov
pop
mov
lcall
sbb
movsb
outsl
inc
cltd
out
mov
jns
xchg
sbb
push
aam
push
pop
fsubl
pop
xor
jmp
mov
mov
neg
pop
and
jp
loopne
inc
js
sbb
les
and
mov
neg
cmpsl
lret
pop
fsubs
test
sub
dec
sbb
or
add
je
mov
push
or
and
cmpsl
test
mov
jp
fstps
pop
pop
cmp
or
push
lods
lea
cltd
out
les
sub
xor
rcr
popf
popf
cmp
mov
mov
jnp
lods
roll
mov
popa
aaa
mov
mov
mov
cmp
arpl
lahf
pop
dec
movl
mov
shll
and
jbe
sbb
push
cltd
imul
adc
cmpsb
push
adc
adc
xchg
sbb
pop
mov
call
dec
pop
xor
push
mov
les
mov
cltd
aas
je
adc
addr16
ret
hlt
rcl
cld
xor
pop
adc
test
sbbb
aas
xchg
mov
inc
jbe
mov
push
mov
and
mov
insb
jg
cmpsl
out
nop
ljmp
cltd
adc
and
cltd
pop
mov
cwtl
mov
mov
or
jecxz
sti
sbb
adc
lods
lahf
cmp
sahf
daa
rorb
xchg
inc
setns
dec
test
xlat
cmpsb
out
cltd
mov
cltd
int3
test
dec
cmc
or
fistps
dec
or
inc
dec
in
jp
cltd
add
pop
imul
shlb
dec
add
repz
add
outsl
jb
dec
cltd
mov
xchg
mov
es
pusha
stos
dec
inc
mov
cwtl
xor
xchg
cltd
mov
movsl
ret
sbb
shlb
sub
lods
lcall
jl
cmp
sub
cmp
xchg
sbb
ds
into
dec
lds
sub
mov
lods
add
stos
inc
fnstsw
mov
xor
fisttpll
fnstenv
add
std
cmp
stos
xor
jno
fwait
out
push
iret
fdivrp
jmp
movl
pusha
mov
lea
jmp
movl
pushf
pushf
push
push
mov
mov
mov
movw
pushl
ret
outsl
and
sub
push
fadds
jge
pop
test
sbb
mov
adc
movsb
xor
push
add
cs
sub
jle
inc
popf
push
jmp
push
lret
es
hlt
fwait
dec
cli
dec
cwtl
mov
fucomp
pop
jmp
adc
addr16
sbb
addb
add
movsl
out
lods
out
and
rorl
scas
inc
gs
call
shll
call
adc
cmp
mov
cmp
in
cltd
enter
xor
imul
je
xor
movsl
mov
mov
jno
add
dec
idivb
push
imull
scas
sub
xchg
pop
ljmp
inc
xchg
popa
insb
or
inc
or
cmp
das
in
xchg
lea
call
mov
test
repnz
mov
scas
into
mov
sub
jmp
pusha
test
jmp
call
push
lea
jae
bsr
xchg
mov
bts
pusha
mov
bswap
stc
mov
test
pushf
mov
pushf
sub
stc
repnz
jmp
mov
cmp
inc
clc
inc
mov
push
cmp
cmp
xchg
pushf
add
mov
test
call
hlt
adc
sub
into
cmp
lods
or
hlt
bound
sub
out
fstps
loop
push
xor
push
daa
fistps
jp
insl
in
out
insb
mov
push
popa
sbb
aad
pop
add
mov
mov
shlb
ljmp
mov
mov
push
xchg
hlt
in
lea
in
cmp
leave
incb
rclb
mov
leave
cmp
mov
roll
xor
mov
aam
dec
sbb
xchg
sub
sub
flds
in
mov
or
dec
mov
gs
mov
out
push
ret
mov
test
pop
jno
and
or
fucomip
iret
jg
sub
push
mov
fildl
xor
pop
or
sbb
jo
sub
push
mov
stos
lahf
fstpt
imul
iret
int3
out
push
test
or
fistpll
add
xchg
mov
clc
addb
mov
xlat
sbb
mov
xlat
sahf
stc
add
jo
int3
push
js
frstor
mov
add
push
and
ret
movsb
sub
xor
push
pushl
outsl
ret
aaa
xchg
xchg
sti
ss
sub
iret
pop
xchg
xchg
jb
stos
mov
mov
pusha
cmpl
rolb
imul
std
dec
test
push
stos
outsl
in
sbb
jnp
pop
aam
push
dec
out
mov
and
mov
sub
pop
sub
ss
pusha
push
les
fdivl
sub
and
imul
cs
ljmp
test
out
dec
gs
sub
inc
cwtl
cmp
stos
jb
jo
add
xor
cwtl
sub
mov
std
mov
lds
xchg
adc
mov
xchg
fldt
adc
jne
xlat
shl
inc
sbb
or
and
mov
mov
push
inc
add
bnd
mov
lds
xor
mov
lods
in
std
stos
xchg
clc
cltd
aam
mov
sub
cmp
insl
call
push
mov
dec
inc
cmp
loope
fnstsw
mov
pop
mov
add
mov
jmp
add
cmc
pop
pop
stc
and
and
pop
popf
pop
fnstenv
fsubs
lock
mov
or
das
dec
pop
add
add
cli
push
and
or
lret
lcall
xchg
fwait
popf
ret
call
test
xor
imul
aam
add
enter
pushaw
mov
mov
or
ret
scas
sub
or
push
jo
pop
sti
jb
mov
sbb
or
lods
xchg
lea
xor
cmp
pop
mov
sbb
loope
add
cltd
xorb
pushf
jl
push
movsb
xor
orl
jo
lret
stos
xchg
pop
cwtl
or
inc
cmp
jae
push
or
pop
insb
nop
push
in
adc
int
push
xchg
or
lock
out
mov
scas
rcl
out
pop
outsl
loop
sbb
mov
ja
xchg
cmc
push
push
pop
pop
sub
adc
cld
lods
xlat
mov
insb
jae
imul
mov
xor
pop
pop
loop
sbbb
lock
fwait
xchg
rcll
clc
btc
push
or
btc
inc
push
aas
push
bts
neg
setl
neg
mov
cmp
push
push
test
mov
lea
je
cmp
mov
sbb
sbb
lea
inc
add
inc
add
cmc
mov
pushf
jmp
jmp
mov
clc
movzwl
lea
sbb
mov
push
test
call
lea
jne
sar
bts
mov
neg
sub
call
pushl
pushl
push
inc
push
adc
mov
pushf
pushl
ret
pushf
lea
ja
shl
call
inc
not
test
push
adc
btr
bswap
mov
aad
sub
jmp
sub
xor
sub
add
aad
cld
rol
mov
in
cmpsb
popa
or
push
pop
es
ficoml
mov
mov
stos
xchg
fwait
jno
cli
push
ret
xor
movb
lahf
jp
jb
xchg
aad
lock
xchg
shlb
in
sbb
adc
lds
sub
mov
pushf
and
inc
mov
arpl
dec
test
lods
jp
cltd
nop
xchg
jmp
xor
mov
clc
arpl
loopne
cld
inc
jno
xchg
out
fdivs
daa
loop
lret
fldenv
push
pusha
dec
ljmp
shlb
in
ret
inc
pop
aam
mov
mov
pushl
lods
pushf
cmc
not
pushf
push
bt
rol
jmp
pushf
adc
mov
lea
jmp
movb
pushf
jmp
cmc
test
cmp
test
cmp
pushf
pusha
pushf
push
lea
jae
push
jmp
pusha
pushf
call
test
or
subb
cmp
clc
pushf
lret
mov
in
in
cmpsb
jo
sti
std
add
fidivrl
pop
test
je
mov
into
cltd
sub
hlt
mov
mov
sbb
mov
or
xchg
pusha
das
sbb
sub
ja
jg
inc
mov
xchg
enter
fidivl
inc
repnz
test
ret
dec
push
mov
adc
nop
fsubrl
and
and
or
pusha
imul
icebp
sbb
js
out
xor
ret
xorl
mov
add
cli
or
movsl
aad
pop
cs
mov
add
jp
inc
aaa
mov
push
jmp
mov
scas
add
cwtl
sub
jmp
loope
push
sub
aaa
push
mov
stos
xchg
mov
mov
cmpxchg
cs
popf
test
loope
jae
dec
mov
mov
sub
popf
pushf
cli
test
ficomps
xchg
mov
clc
push
inc
jnp
mov
push
mov
arpl
ret
gs
imull
fmuls
mov
movsb
mov
aas
icebp
xor
mov
jbe
xorl
push
pop
add
xor
jbe
cwtl
push
cmp
xor
sbb
mov
pop
and
mov
fcmovnb
push
shrl
cmp
arpl
and
pop
mov
push
int3
in
adc
test
adc
xor
sbb
jl
jne
inc
cli
js
jne
sbb
test
vmread
iret
incb
mov
mov
or
xchg
inc
and
jb
or
outsl
inc
push
icebp
add
xor
fisubrs
in
pop
stc
repz
pop
pop
jl
jns
shlb
xorb
xchg
in
bound
mov
jns
fucomip
or
lock
jp
mov
nop
das
es
sbb
lahf
ficompl
sarb
fsub
insl
or
pop
jp
adc
pop
aaa
fsub
and
pop
push
inc
fsubr
sti
push
dec
push
fists
cmp
in
push
loope
mov
jns
and
and
aam
xchg
pop
lods
adc
or
mov
rcr
mov
push
loope
stos
xlat
inc
jo
in
mov
fsubrp
jno
in
push
loop
ficoms
xor
sbb
jmp
enter
cmp
sbb
mov
aas
ftst
push
push
enter
movsl
out
xor
clc
aad
out
xchg
and
cmp
mov
int
mov
add
shll
movl
mov
mov
pop
jns
scas
outsb
push
jnp
jno
mov
or
adc
out
jae
js
cli
imul
xor
push
pusha
cmpb
pushf
jmp
pushf
cmp
jmp
mov
jge
sub
jg
int
xchg
xor
dec
pop
out
pusha
sahf
rcl
shrb
ss
lock
and
arpl
test
mov
out
dec
mov
out
jmp
test
cmc
bt
jmp
movsbw
rcl
and
mov
pusha
pushf
cmpb
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
push
pop
jae
sub
inc
and
hlt
push
jge
mov
arpl
ret
mov
outsb
push
shll
daa
adc
and
sub
push
cli
xor
lods
pop
int
xchg
or
jmp
jmp
es
dec
lds
add
and
sub
enter
decb
leave
push
and
ficompl
scas
and
stos
lahf
jg
sub
sti
pop
test
mov
cmc
cmpb
pusha
pushf
lea
jne
cmc
cmc
push
sub
push
push
pusha
pushl
lea
jmp
movl
push
call
ds
dec
adc
or
outsb
clc
push
addl
cmp
or
pop
lret
or
test
inc
imul
cmpb
mov
jle
jbe
add
pop
fsts
popa
inc
and
jae
sbb
inc
daa
push
ret
daa
icebp
push
dec
lds
sbbl
mov
mov
into
int
jg
cmpsl
lods
jmp
loopne
mov
out
add
push
pop
nop
stos
jbe
popf
or
test
enter
lret
jg
sub
sti
ss
int3
aas
or
mov
mov
mov
mov
insl
fnstcw
xlat
out
daa
push
jmp
sub
push
loopne
arpl
in
pop
xor
into
fistl
stc
in
cmp
sbb
mov
jbe
sbb
movsb
inc
hlt
dec
push
stc
test
xchg
lcall
mov
push
xor
int
jg
stc
notb
insb
add
movsb
hlt
gs
xchg
cmp
jmp
sub
sub
clc
or
xchg
scas
js
push
dec
ret
int3
pop
stos
sub
mov
stc
or
dec
xor
push
adcb
or
and
scas
stos
xchg
and
leave
dec
fistpl
inc
and
loope
pusha
mov
not
movzbl
jmp
pushf
pushf
mov
mov
pushf
pusha
mov
pushl
ret
pushf
repnz
pusha
movb
mov
lea
jne
bswap
sar
cmc
mov
ror
shrd
sub
cmc
mov
cmc
bt
jmp
sub
jmp
pushf
pushf
mov
push
pushf
pushl
pushf
lea
jmp
stos
pushf
pusha
lea
jmp
in
mov
adc
or
xchg
and
adc
shlb
mov
mov
lods
fucomp
sbb
movsl
jg
push
fsubrl
ret
pop
jae
add
mov
jno
jns
sahf
push
nop
push
es
sbb
cwtl
icebp
pusha
xchg
pop
xchg
mov
inc
mov
dec
lret
cltd
lret
xor
inc
adc
in
pop
sahf
dec
dec
xor
pop
mov
inc
xor
pop
pop
pop
jmp
cs
test
adc
into
popa
jmp
jp
daa
push
xchg
clc
cmpsl
adc
daa
and
push
push
add
test
xlat
xchg
cmpl
bswap
lea
js
push
pushf
pushf
lea
jmp
add
dec
outsl
popa
fs
imul
add
fs
je
pusha
mov
call
pushf
pop
mov
pusha
push
pushf
push
pushl
ret
sub
dec
movaps
dec
jmp
adc
sub
arpl
out
or
call
jno
jg
or
dec
cmp
lcall
iret
push
rcll
and
addr16
mov
and
stc
fsubp
lods
push
popf
push
or
repz
jae
or
into
cmpb
xor
adc
lds
in
jbe
push
adc
mov
pushf
mov
push
lea
jmp
setg
mov
bswap
lea
lea
push
mov
pusha
movsbw
jmp
movl
push
lea
jmp
call
mov
or
jbe
cwtl
inc
into
dec
sbb
js
orb
cmp
mov
into
repz
inc
mov
sarb
pop
lcall
fistps
push
repnz
cmpsb
push
gs
pop
dec
adc
jl
ljmp
mulb
stc
cmp
inc
sub
mov
lret
mov
inc
fs
jcxz
shrb
add
or
mov
push
push
jmp
inc
push
std
outsl
sbb
sbb
shll
out
mov
test
add
js
loope
orb
or
aam
popf
mov
mov
push
adc
out
and
subb
scas
mov
mov
aad
lock
xchg
clc
mov
mov
adc
or
cmpl
dec
mov
sbb
sti
std
or
cwtl
add
cld
scas
cmpsb
test
int
inc
subb
push
divl
sbb
mov
scas
popa
sub
or
sti
add
push
decl
pushl
pushf
pushl
ret
aam
dec
or
mov
mov
daa
xor
pop
imul
or
xor
pop
sbb
or
ja
testl
aam
push
cmp
cmp
jne
sbb
mov
xchg
dec
xlat
addr16
or
lods
cli
cmpsl
pop
cltd
cmpsl
jmp
and
stos
decl
or
fucomp
adc
jmp
jbe
xchg
or
leave
pop
xor
adc
jns
rep
sub
pop
push
ds
callw
icebp
xchg
and
inc
sub
sbbb
std
inc
ret
and
pop
je
bound
sti
xchg
lahf
mov
in
add
ja
or
pusha
pushl
lea
je
pushf
setl
pushf
lea
call
and
testb
clc
push
mov
mov
mov
xchg
mov
ljmp
lock
adc
jbe
add
xor
dec
test
dec
add
xor
mov
pop
sbb
mov
cli
test
cmp
sbb
js
addr16
mov
fstl
or
sahf
scas
scas
mov
or
lahf
ret
outsl
dec
shrl
cmpsl
aas
xchg
xchg
mov
call
jnp
pop
fldl
jne
mov
sbb
nop
sbb
xchg
jnp
cld
sbb
push
cmp
or
pop
mov
xchg
xchg
aas
sbb
test
stos
sub
sahf
lock
mov
jnp
add
popf
outsl
xlat
ds
cwtl
sbb
gs
shll
push
or
rcrb
and
arpl
cmpsb
fimull
or
rorb
lock
jmp
and
mov
loopne
into
std
fmull
ja
repz
jbe
inc
rorb
cmpsb
fidivrl
int
xor
push
cmp
sbb
insb
rcll
cs
push
sbb
push
push
xor
push
and
std
outsl
stc
arpl
dec
mov
pop
outsl
push
dec
movsl
jmp
mov
or
stos
pop
inc
mov
and
push
add
cmp
ja
addb
sub
push
push
sbb
aam
scas
sub
mov
stos
or
and
xchg
xchg
mov
xor
jmp
sub
outsb
les
add
mov
jg
or
sti
ret
add
out
scas
mov
jns
mov
xor
mov
and
idivl
movb
iret
repz
imul
pop
push
mov
cmp
dec
in
in
and
push
or
inc
rclb
lea
je
pusha
mov
cmc
pusha
sub
stc
call
cmp
fisttpll
sub
stos
sbb
loop
cmp
stc
cmc
lock
fstp
adc
sub
mov
xchg
pop
pushl
cmpsl
jmp
std
fs
jp
push
mov
cmp
cmp
loop
adc
add
fsubrs
or
sbb
ret
add
pop
pop
pop
xor
fs
inc
lods
dec
data16
lea
pushf
call
lea
call
pushf
push
lea
jne
not
movsbw
lea
bswap
mov
push
movb
pushf
lea
jmp
int3
popf
push
lea
jp
push
jmp
mov
orl
sbb
inc
xchg
in
push
mov
sub
outsb
std
mov
xchg
xor
scas
or
push
cmp
jnp
test
shlb
and
jae
faddl
lea
cli
xchg
sub
test
sti
insl
xchg
pop
subb
add
in
xor
fcompl
cmp
mov
lret
lods
mov
les
sbb
push
shll
je
outsb
sbb
lea
jae
cmc
cmp
test
sub
push
jmp
pushf
pushf
movl
push
jmp
cld
pop
add
add
add
mov
add
add
add
add
add
add
add
add
pop
add
add
add
mov
add
mov
add
or
movl
or
add
add
movl
pusha
pusha
push
lea
jmp
lds
or
or
int3
pop
cmp
mov
repz
jge
sbb
js
stos
fwait
adc
pop
lock
scas
ljmp
mov
jae
pop
dec
push
dec
jbe
push
outsl
mov
call
into
sbb
lret
fiaddl
clc
jb
mov
and
bound
out
mov
jmp
sti
ret
iret
fstpl
push
jge
mov
ret
pop
jae
movl
push
mov
pushf
mov
lea
jmp
mov
lea
je
call
cmp
or
jmp
dec
mov
ret
jns
and
mov
inc
inc
or
notl
cmpsb
aas
pushf
leave
pop
repnz
pop
lret
mov
sar
jae
push
aad
pop
sub
clc
mov
push
push
repnz
aad
cmp
cli
aaa
xchg
jp
mov
js
xchg
in
xor
in
lcall
add
xor
in
es
inc
lods
imulb
sbb
cmpsb
fstps
aas
frstor
ss
mov
in
ds
inc
arpl
fadds
pop
scas
xchg
fcomps
rorl
mov
out
cltd
or
outsb
fiadds
movsb
rcl
or
sub
lcall
sub
jno
loop
ljmp
aas
in
add
push
adc
cmpsb
jl
or
add
cs
cli
jbe
decb
jge
jmp
mov
mov
pminsw
dec
adc
jo
sahf
icebp
xchg
mov
adc
fwait
lret
es
or
mov
stos
mov
aas
inc
dec
sbb
pminsw
test
xor
mov
inc
adc
lret
adc
mov
cmp
lods
xchg
loop
jg
xlat
test
cmp
jne
aaa
xchg
or
test
test
into
xor
jg
adc
test
es
and
cmpsb
lock
dec
sub
pop
movsb
movsl
ds
scas
leave
fwait
jno
insl
js
scas
lret
pusha
cmp
mov
les
cld
fmull
dec
in
out
mov
jg
pop
jp
push
or
jo
lea
jmp
call
push
pusha
pushf
pushf
lea
call
pushf
call
movl
pusha
movl
push
pushf
pushf
mov
lea
jmp
aas
out
push
sub
cmp
cmp
add
subl
sub
cmp
notl
push
cmp
cli
mov
mov
push
cs
pop
jae
mov
add
add
into
stc
jae
ficompl
jns
pusha
xlat
mov
and
jl
mov
push
repnz
adc
push
inc
sub
in
jns
or
daa
dec
push
add
sti
insl
mov
jo
jp
je
mov
xor
gs
sbb
push
lret
push
ret
aaa
jne
push
ret
je
add
dec
in
into
or
lds
or
fstpl
test
aas
fildl
in
xor
in
ret
lods
mov
xchg
push
xchg
pop
insl
cli
inc
int
popa
insb
bound
jno
test
jno
fwait
mov
mov
xor
imul
sar
into
mov
mov
int3
push
push
mov
adc
in
lcall
jmp
movzbw
mov
btc
push
bts
add
clc
pushl
btr
add
pushf
mov
stc
pushl
call
push
mov
inc
pushf
call
mov
jg
pop
aas
test
rcrl
inc
lcall
mov
cwtl
push
fldenv
flds
mov
sahf
ficompl
sub
mov
leave
test
xchg
std
mov
int3
sbbl
repnz
repz
sub
arpl
out
popa
adc
add
dec
shrl
cli
stc
lods
sahf
pop
or
mov
cmp
fcoml
loop
lcall
jp
insl
pop
xor
add
popa
stos
mov
movsl
lcall
call
imul
sub
gs
cmpsb
cmp
lret
fisubrl
xor
pop
jno
or
jns
dec
ficomps
cli
xchg
imul
push
imul
inc
add
jecxz
mov
sar
fildll
test
xlat
stc
xor
dec
pop
fsubrs
lcall
stos
mov
cmp
into
pop
dec
and
lret
and
jmp
loop
stc
mov
mov
mov
cltd
xor
mov
ljmp
cli
or
dec
ret
or
pop
sbb
lret
jmp
cmpl
shll
inc
ljmp
inc
and
or
into
or
ret
shlb
dec
mov
mov
push
subb
popa
fnstenv
cmpsb
xchg
cmp
icebp
sub
push
inc
sub
sbb
stos
mov
subb
xchg
fs
stc
movsb
cltd
sarb
xchg
and
cltd
loope
mov
and
pop
rolb
push
mov
out
ljmp
xchg
lea
bound
jle
adc
mov
push
icebp
sub
xor
dec
test
mov
sarl
push
inc
xlat
sbb
stos
insb
cmp
fistps
movsb
jp
fldl
fstl
cwtl
cltd
adc
les
lods
icebp
add
push
mov
dec
insb
fs
mov
cwtl
je
test
gs
movsl
and
fldcw
in
imul
adc
js
stos
jno
jmp
or
pop
fwait
lods
mov
sbb
lahf
test
push
lea
push
inc
or
mov
inc
mov
lods
and
pop
pop
cmp
adc
sti
and
pop
or
mov
add
rcr
stos
mov
lcall
and
test
insb
xor
test
pop
test
mov
outsb
mov
cmp
sub
mov
fildl
cmpl
sbb
sbb
xchg
leave
add
xor
pushf
les
imul
jmp
insb
ss
adc
out
pushf
inc
cmp
fcom
imull
andl
inc
es
cmp
pop
xor
cld
pop
xchg
xchg
outsb
xchg
out
ljmp
ja
lods
xchg
lret
imul
mov
idivl
ficoml
or
es
mov
ds
lret
call
xchg
sub
lret
and
push
xchg
popf
outsb
add
sahf
insb
sbb
lods
inc
sbb
xor
jae
sub
sti
pushl
sub
in
aad
test
sub
rcrb
pop
mov
stos
shl
fsts
fwait
sbb
sub
es
stc
std
sbb
push
jle
test
lods
stos
frstor
inc
push
adc
in
stos
test
pop
test
sub
insb
and
cmp
mov
fwait
leave
push
and
rcl
ljmp
lods
mov
sbb
cwtl
leave
js
inc
cs
jp
xchg
inc
ret
mov
rol
jmp
lcall
adc
insl
les
js
stc
outsl
int
sbb
rcrl
sbb
dec
cmpsl
imul
and
pop
mov
xor
xor
xchg
or
jecxz
mov
stos
pop
jecxz
adc
sti
cwtl
and
lcall
cli
mov
fs
mov
cmp
lods
pusha
and
js
inc
sbb
adc
lahf
test
fstpl
ds
inc
add
cs
push
lcall
clc
mov
sbb
popf
sbb
push
xchg
or
and
sbb
push
cmp
mov
sbb
das
out
into
cs
xor
mov
inc
inc
dec
scas
push
mov
aam
pop
test
icebp
pop
pop
loop
stos
stc
sub
jge
les
push
xor
jp
sub
and
movsl
cltd
push
imul
lret
mov
and
sub
adc
mov
data16
cmp
imul
out
in
daa
cld
cmpsb
fdivs
movsl
lods
push
pusha
fisubs
push
cmp
mov
iret
in
dec
xor
pop
sbb
test
aaa
mov
cmp
add
xchg
popf
lcall
and
mov
movsl
mov
insb
inc
xor
jnp
dec
into
movsb
in
mov
mov
shrb
fadds
sbb
sarb
stos
xor
rdmsr
cmp
inc
xchg
fnstcw
push
cmp
loope
aas
sbb
xor
roll
jle
cmp
or
mov
lret
push
insb
incl
add
sbb
xchg
xchg
push
in
xor
push
in
icebp
arpl
je
cmp
mov
inc
adc
sub
mov
popf
push
lahf
dec
cmp
ret
insb
test
cwtl
or
fstpl
or
jnp
cmpl
push
xchg
test
pop
out
xor
mov
push
xchg
push
imul
mov
icebp
loope
loopne
popf
and
jp
shll
sbb
cmpsl
pop
mov
xchg
imul
adc
test
mov
dec
aad
ret
sbb
cli
test
pushf
xchg
imul
ret
test
pop
and
mov
mov
sub
cmp
inc
fstpt
lods
inc
push
push
lret
and
mov
jo
or
dec
test
xor
or
push
cmpl
rcrb
mov
stos
test
imul
lods
imul
add
mov
lahf
sbb
call
stos
mov
ret
inc
dec
shr
shll
and
xchg
sbb
pop
add
imul
sub
jecxz
xchg
outsb
loop
mov
jnp
enter
push
icebp
xor
mov
out
mov
mov
imul
loope
insb
add
in
lds
cmp
lea
das
pop
mov
test
stc
outsl
imul
sarb
xchg
std
pop
lahf
call
movsb
mov
fld1
pop
xlat
imul
cs
mov
xor
in
cmpsb
jl
pop
cmp
adc
sbb
insb
popa
pop
bound
sub
movsl
cmp
sti
clc
push
cmpsb
jbe
sub
lcall
cs
sahf
lret
mov
adc
sub
cmp
inc
icebp
xorl
push
inc
xchg
test
rolb
sub
mov
mov
xchg
mov
mov
leave
lea
mov
jp
push
sti
adc
ds
loope
sbb
cmp
orl
mov
testl
insl
cmpsl
mov
leave
mov
les
leave
stc
sbb
push
js
cmpsb
sbbl
xor
add
loopne
mov
mov
nop
or
clc
jg
das
pop
insl
mov
mov
sbb
inc
lcall
lds
les
push
jmp
xchg
test
cltd
sub
pushf
pushf
stc
ror
clc
cmc
pushf
pushw
popfw
jmp
pusha
movl
pushf
pushf
lea
jmp
pusha
movb
push
cwtl
mov
push
lea
jmp
lea
ja
pusha
movw
jmp
stc
pushf
or
pusha
jmp
cmp
sub
pushf
push
inc
lea
jl
call
call
pop
xchg
out
daa
or
and
lods
lcall
and
pop
ss
mov
sub
addr16
xor
mov
jns
cwtl
faddl
push
ret
mov
mov
sub
cmc
mov
sar
mov
push
aas
push
mov
imul
sti
shl
mov
aad
ficomps
cwtl
arpl
in
les
test
inc
std
ret
leave
jae
lock
sub
fidivl
adc
inc
scas
add
push
fwait
push
sti
popa
jnp
dec
jecxz
insb
mov
out
rcr
clc
or
enter
sbb
frstor
int3
in
out
cmp
rcll
pushf
push
insb
data16
mov
xchg
xchg
xchg
repnz
pop
in
dec
xchg
rolb
out
jmp
cmp
fwait
xorl
dec
ror
data16
clc
aad
sbbl
push
sbb
jns
xor
fidivrs
jge
fnstcw
xor
mov
mov
push
mov
outsl
iret
sbb
sub
les
jg
mov
daa
ja
loopne
jo
lret
leave
xor
sbb
lret
add
xchg
cmp
popf
shll
cmpsl
test
and
adc
dec
xor
xchg
sub
jns
fsubr
sub
daa
repz
out
or
mov
inc
or
mov
cmp
popf
imul
inc
mov
and
out
push
std
pop
dec
xchg
xor
xchg
imul
inc
add
ss
jnp
out
out
out
mov
stos
ja
fs
mov
arpl
sub
sbb
cmp
mov
jnp
sub
jb
mov
xchg
or
sub
pushf
std
aas
xlat
mov
in
xchg
mov
sti
cmc
xchg
cmovae
cwtl
jle
enter
adc
mov
push
lret
rcll
out
aad
sbb
test
xor
jb
and
test
pop
outsb
mov
ds
dec
sbb
call
fstpl
sub
cld
fsubl
or
dec
pop
jbe
inc
inc
cmp
mov
cmp
andb
push
mov
enter
pusha
test
nop
mov
adc
jp
and
adc
jl
pop
and
ffreep
pop
push
movsb
push
dec
jmp
mov
sbb
loopne
mov
and
mov
jmp
mov
cmpsl
mov
or
shlb
lds
shr
push
jl
jl
jg
add
clc
loope
mov
ljmp
nop
xor
leave
inc
mov
sbb
insb
mov
fidivrs
add
fwait
stos
or
testl
fcomps
xor
or
dec
mov
js
push
fisttpll
xchg
jecxz
sub
es
pop
negl
mov
imul
icebp
xor
xchg
in
xchg
push
pop
dec
pop
mov
xchg
xchg
push
test
adc
ja
jae
insl
pop
dec
aad
insl
jno
mov
insl
ljmp
aas
or
add
pop
lods
movl
add
jno
mov
int
and
sti
leave
aaa
ja
cli
inc
pop
cmp
vpsubw
fstpt
cmp
or
ficompl
call
jge
jg
xor
ds
enter
adc
push
xchg
lods
sbb
ret
outsl
cmp
sub
ljmp
pushf
gs
std
xchg
sub
fwait
mov
push
and
mov
addr16
add
iret
push
and
lret
push
cmp
repnz
jle
mov
jle
fidivs
mov
push
stc
inc
inc
mov
and
push
push
mov
shl
mov
shr
arpl
aad
out
movsb
mov
fsubrs
pop
and
aad
cmp
out
mov
pop
sbb
cmp
dec
cmp
xchg
mov
cmc
mov
sbb
pusha
shlb
scas
add
hlt
aad
mov
mov
aas
cmp
push
and
push
enter
push
ret
cs
outsb
adc
clc
or
or
jg
xor
sub
add
jbe
scas
stc
fnstcw
mov
mov
jmp
xor
das
sbb
lods
dec
enter
or
mov
inc
popa
dec
jno
jge
sbb
int3
adc
int3
cmc
xor
lcall
adc
stc
cmovp
push
or
pop
in
push
int
shll
inc
push
inc
push
loop
or
notl
mov
xchg
stos
aaa
inc
xchg
and
jp
jae
adc
ja
jmp
xor
mov
adc
xor
popf
pop
lahf
and
insb
imul
add
popa
adc
add
fstpt
mov
xor
add
dec
jg
jnp
sbb
xchg
shll
in
into
outsb
xor
jb
call
dec
push
out
sahf
test
daa
mov
imul
hlt
fistpl
fsubrl
out
cmp
xlat
out
pop
or
mov
sbb
inc
push
out
push
cmp
push
movsbl
xor
das
hlt
or
jmp
ret
mov
outsl
pop
hlt
jae
push
add
or
mov
clc
neg
int3
mov
mov
mov
adc
fstps
mov
insb
mov
push
nop
xchg
sub
cmp
xor
lret
lods
cli
push
dec
call
fisubl
push
cmpl
push
dec
jmp
sbb
dec
mov
xchg
jge
or
push
cli
das
insl
push
test
sub
xchg
and
sahf
inc
xchg
mov
data16
pop
or
fdivrl
jo
pop
mov
cmpsb
cmpsl
jne
inc
cs
pop
daa
and
ret
jnp
and
jmp
lea
lea
mov
push
jns
adc
mov
ret
js
call
rorl
out
sbb
push
cmp
mov
cs
mov
pop
loopne
dec
stos
xor
mov
sbb
xchg
in
shll
xchg
decl
jg
int3
mov
jae
pop
subb
xor
xchg
ja
addl
lret
frstor
and
cmc
inc
or
and
sub
xchg
iret
in
js
shll
divb
hlt
mov
fdivrs
push
insb
shrb
and
mov
pushf
mov
add
pop
pop
or
xor
dec
imul
clc
xlat
sbb
lahf
lea
and
adc
mov
dec
cmp
xor
sub
out
pop
xchg
pop
movsb
jo
and
push
pop
insb
ret
imul
push
xchg
push
cmc
mov
add
out
call
xor
mov
pop
cmp
fldcw
lock
dec
lret
test
xchg
jle
mov
loopne
pop
xchg
mov
repnz
add
xchg
pop
inc
xchg
adc
xchg
jns
sub
mov
pop
sub
adc
adc
stc
sbb
adc
cli
mov
lret
and
dec
cmp
repz
push
pusha
or
inc
dec
sbb
mov
push
stc
clc
clc
popa
lret
stc
inc
js
ret
leave
idivl
add
pop
push
cmp
fs
in
int3
test
xlat
xor
fistpll
les
stos
or
in
sub
and
xor
mov
repz
loopne
lret
call
bt
imul
clc
stc
call
xchg
adc
repnz
or
out
dec
pop
clc
and
lret
lcall
cmpsl
push
xor
in
ret
push
cltd
addb
in
sub
pop
mov
mov
cs
mov
lods
fldl
mov
pop
cli
sti
insb
shl
jmp
repz
pushf
mov
cmc
pusha
test
lea
jle
je
cmp
sub
stc
cmp
call
push
call
movb
movb
not
bt
mov
rol
call
movb
mov
movl
push
movb
push
lea
jmp
clc
mov
btr
ror
rol
bts
jmp
mov
bt
shr
mov
cmc
pusha
sub
pushf
mul
pusha
mov
mov
pushl
movb
mov
mov
pushf
call
movw
or
call
cmp
inc
inc
shld
mov
push
push
clc
cmp
add
jmp
call
jmp
cmc
rol
pusha
push
call
lea
jne
pushf
mov
mov
pushl
push
pushf
popl
pusha
pushf
mov
movw
pushl
popl
movb
lea
jmp
mov
clc
push
cmc
pushf
sub
pusha
clc
shl
call
stc
call
rol
movb
lea
jmp
push
pusha
xchg
call
shr
mov
sar
adc
rcr
mov
stc
add
jmp
rol
mov
call
rcl
sbb
mov
clc
push
movb
add
pushf
lea
jmp
lea
push
mov
movzbw
movsbw
push
mov
mov
push
pushf
repz
popl
cmc
rcr
push
bt
pushl
popl
pusha
pusha
movl
mov
rcl
jmp
pushf
popl
jmp
add
pushf
push
push
mov
pusha
push
pushl
lea
jmp
pusha
pushf
lea
push
lea
movsbw
bswap
push
pusha
lea
pushf
movzbw
mov
lea
jo
repz
stc
movzbl
btc
pushf
pushl
popl
call
pushf
pushf
pushl
xchg
push
jmp
pushf
mov
call
call
bswap
lea
mov
movsbw
pusha
movw
lea
push
lea
not
movzbw
push
mov
mov
jmp
call
jmp
pop
mov
pushf
call
pushl
popl
movw
pushf
lea
jmp
sbb
rol
jmp
rcl
movl
pushf
mov
cmc
pusha
pushf
rol
mov
movb
call
cmc
mov
bt
jmp
lea
jge
push
bswap
bswap
movzbl
push
mov
pusha
push
mov
mov
bswap
mov
push
bswap
jmp
jmp
xchg
clc
movb
pushf
rol
pushf
pushf
jmp
pushf
pushl
mov
pushf
sets
sets
setne
xchg
bswap
xchg
pushf
push
xchg
pop
pusha
mov
mov
lea
pushl
xchg
lea
lea
push
pushf
not
mov
mov
pusha
pushf
seto
xchg
xchg
not
repz
popl
rcl
movzbl
mov
pushl
popl
pushl
call
mov
pushf
push
mov
lea
jmp
pusha
call
mov
setle
cwtl
pusha
pushf
mov
pop
mov
push
setnp
xchg
mov
movsbl
mov
cwtl
mov
movsbw
pushf
mov
bswap
mov
mov
mov
movb
pushl
ret
and
mov
push
movb
mov
call
cltd
pushf
mov
setl
mov
jmp
test
test
add
stc
shrd
pusha
mov
call
clc
rol
jmp
call
pushf
call
pushf
popl
call
jmp
sub
movb
lea
jb
pusha
lea
jne
pusha
call
bsr
or
mov
rol
add
rcr
sete
rol
movsbw
bsf
neg
add
bt
xor
sub
bsf
shrd
add
not
inc
push
movzbw
inc
btr
sbb
pusha
mov
lea
jge
add
pusha
mov
pushf
pushl
lea
jmp
push
mov
mov
pusha
mov
jmp
jmp
sub
jmp
pusha
mov
push
pushf
pushf
pushl
lea
jmp
cwtl
clc
sub
pushl
pushf
call
pusha
shld
call
jmp
mov
pusha
mov
movw
mov
pusha
mov
mov
pushf
lea
jmp
call
lea
jne
movsbw
mov
add
btr
xorb
call
pushl
stc
stc
push
mov
pusha
mov
push
mov
pusha
jmp
rcr
xor
push
movzbw
mov
cmc
cmc
bt
call
push
inc
push
decl
movw
lea
jne
call
lea
jne
bt
sub
pushf
push
pusha
xchg
jmp
bsf
and
mov
bts
mov
mov
pusha
jmp
call
lea
push
mov
push
bswap
mov
call
jmp
mov
mov
mov
jmp
lahf
shl
cwtl
movsbw
mov
setbe
neg
ror
mov
clc
bt
add
call
mov
mov
jmp
pusha
repz
popl
lea
movsbl
pushf
btr
pushl
popl
rcl
bt
movl
jmp
cmc
rol
pushf
pushf
call
call
rcl
pushl
popl
call
push
pushl
mov
movb
pusha
movb
movb
lea
jmp
call
jmp
pushf
pushl
push
mov
pushf
call
sub
cmc
pusha
stc
add
call
pushf
lea
jl
pusha
pushl
popl
pusha
pushf
lea
jmp
lea
push
pusha
pusha
mov
not
mov
movsbl
pushl
push
repz
popl
bts
jmp
pushf
pusha
lea
jp
popl
pusha
mov
pushf
mov
lea
jmp
movsbw
lea
push
bswap
not
pusha
movzbw
mov
lea
lea
lea
movzbw
mov
movsbl
repz
popl
lea
ror
pushl
popl
cmc
movsbw
jmp
mov
xor
pusha
xchg
mov
jmp
rol
mov
jmp
call
pusha
mov
push
pushf
pushl
lea
jmp
mov
pusha
pushf
popl
call
movb
pushl
popl
push
pushf
pushl
pushl
lea
jmp
push
jmp
bswap
mov
stc
rol
pushf
call
mov
lea
ja
pushf
mov
pushf
push
jmp
sar
shl
mov
not
pusha
mov
cmp
push
test
jmp
mov
lea
jle
pushf
pushf
popl
push
pusha
pushf
pushl
popl
pushf
lea
jmp
pushf
inc
movzbl
push
or
pop
sub
movsbw
call
cmc
shrd
bts
mov
cmp
cmc
cmc
add
push
not
call
sub
jne
cmc
add
pushf
pusha
pusha
mov
pushf
lea
jge
pushf
pusha
mov
pusha
pushf
pushf
pushf
lea
jmp
movb
add
push
mov
cmc
rol
cmc
pushl
neg
cmp
movb
pusha
cmc
sub
stc
bt
cmc
add
clc
test
stc
mov
jmp
xchg
pushl
movsbw
mov
pop
push
movsbw
push
call
mov
mov
lea
ja
pusha
pushl
lea
jne
push
pusha
mov
bt
stc
bt
and
jmp
rol
setnp
dec
rcl
rol
add
cmp
sub
mov
push
clc
sub
stc
test
ror
mov
stc
mov
adc
shl
shrd
cmc
add
movzbw
bsr
ror
bsr
mov
sub
add
not
btr
ror
setg
inc
push
bswap
movsbw
btr
rol
movzbw
add
call
movl
jmp
push
jmp
jmp
bt
shr
call
inc
lea
xor
pop
pushl
and
not
bts
bts
neg
rcr
rcl
btc
sub
inc
pusha
rcr
stc
movzbl
bt
stc
pushf
test
mov
mov
stc
jmp
pushl
popl
push
clc
add
pushl
mov
pushl
popf
push
lea
jmp
pushf
jmp
pushf
mov
call
rol
jmp
test
call
push
jmp
sub
test
clc
stc
cmc
shr
pusha
mov
pushf
call
lea
push
pushf
mov
push
pushl
jmp
pusha
pushl
popl
mov
lea
jmp
sbb
das
rdtsc
mov
cmp
cmc
sub
movb
pusha
pushf
mov
movb
mov
mov
push
mov
pushl
lea
jmp
pushl
popl
pushl
pushf
lea
jmp
pushf
mov
movw
movw
pushf
call
not
clc
rol
seta
rol
rol
dec
dec
movzbw
not
inc
clc
cmc
neg
pushl
rcl
rcr
add
movsbw
mov
lea
jl
add
js
pushf
pushf
mov
pushf
pusha
movb
lea
jmp
stc
test
xadd
mov
jmp
inc
call
not
mov
jmp
call
mov
pusha
jmp
cmc
push
pusha
not
stc
sub
cmp
pushf
jmp
bswap
pushl
mov
mov
movb
call
push
mov
push
push
mov
jmp
call
pushl
popl
pusha
lea
jmp
add
mov
pushf
push
mov
pushf
pushf
lea
jmp
push
pushf
rol
pushf
pushl
mov
lea
jmp
bts
call
xchg
movzbw
movzbw
pushf
mov
call
cmp
pusha
cwtl
bt
mov
sub
shl
shl
mov
neg
stc
or
mov
cmc
add
mov
call
dec
mov
bt
mov
rol
movb
pushf
mov
pushl
lea
jmp
mov
mov
call
bt
movw
add
push
mov
pusha
mov
lea
jmp
cmc
setne
mov
test
sar
pusha
mov
clc
movw
bt
bt
sub
cmp
push
pushf
clc
shl
movl
pushf
mov
push
pushf
popl
push
push
mov
pushl
popl
pushf
pushf
lea
jmp
bt
pusha
jmp
mov
pushf
movsbw
mov
movzbl
call
cmp
movw
pusha
pusha
lea
ja
ror
mov
bsf
pushf
test
lea
ror
stc
aas
sub
aas
lea
test
cmp
neg
and
neg
shr
sub
call
pushf
call
inc
movb
pushf
call
xor
not
adc
mov
test
add
jmp
pusha
call
bt
rol
movzbl
stc
cmp
pusha
cmc
sub
movb
pushf
xor
jmp
pushl
push
rep
and
sar
mov
shl
rol
lea
jp
or
pop
pushf
bt
pushl
movb
pushl
popf
pushl
push
lea
jmp
jmp
push
mov
pushf
pushf
pusha
mov
lea
jmp
repz
popl
stc
btr
pushl
popl
not
ror
call
mov
jmp
mov
repz
not
pusha
call
lea
mov
adc
rcl
neg
mov
cmp
cmp
stc
cmp
add
jmp
sub
shl
btc
mov
not
rcl
rcl
bsf
add
cmc
sub
shl
clc
neg
sub
mov
push
call
mov
movw
bswap
lea
push
mov
call
bt
cmc
pushf
rol
movb
pusha
lea
jmp
pushf
pushf
popl
pushf
pushl
pushl
popl
mov
push
lea
jmp
mov
bt
clc
rol
call
push
jmp
call
mov
bt
rcr
mov
mov
clc
sub
call
cmp
test
or
neg
mov
call
push
pushl
popl
movw
pusha
lea
jmp
push
bt
stc
pushf
sub
pushf
call
stc
shl
push
shr
call
pushl
dec
lea
jno
rol
pushf
pushf
push
lea
jmp
pushf
popl
pusha
lea
jnp
popl
push
lea
jmp
jmp
movl
sets
btc
cmc
mov
bt
jmp
mov
add
btc
setle
mov
shl
and
jmp
adc
aam
adc
notl
or
fsts
or
dec
adc
sti
fstl
or
dec
adc
sti
data16
fcmovu
adc
divb
adc
mull
adc
fcmovu
adc
notl
or
or
adc
in
adc
or
and
or
sub
adc
shlb
or
inc
adc
lock
adc
in
adc
fcmovu
adc
adc
fadds
adc
out
adc
in
adc
or
cmp
adc
call
cmp
adc
call
cmp
adc
in
adc
or
push
adc
out
add
or
sub
or
push
adc
notb
adc
fmuls
or
out
or
push
adc
cld
stos
adc
in
adc
out
adc
push
adc
fsubp
adc
divb
adc
sti
fstl
or
jmp
or
fsts
or
jmp
adc
divb
adc
iret
repz
iret
repz
iret
repz
iret
repz
iret
repz
iret
repz
iret
repz
iret
repz
aad
adc
out
das
adc
sti
data16
cli
adc
fcomp
adc
out
adc
rclb
fadds
adc
fadd
adc
rorb
or
push
adc
adc
shlb
or
adcl
or
mov
adc
out
int3
adc
out
adc
xacquire
or
cmp
or
out
or
jmp
adc
notl
or
dec
adc
aad
adc
sti
data16
lock
adc
mull
adc
in
adc
mull
adc
adc
push
adc
sti
data16
fsubp
adc
dec
adc
out
adc
shlb
or
add
or
jmp
adc
dec
adc
fisttps
adc
xacquire
or
push
adc
fadds
adc
fadd
adc
ffreep
adc
fisubrs
or
jmp
adc
sar
adc
shlb
or
das
adc
rorb
or
insb
adc
lock
or
adcl
or
adc
or
jbe
or
push
adc
sti
jnp
or
adcl
or
cmpsl
adc
fisubrs
or
popf
adc
aad
adc
rorb
or
adc
xacquire
or
and
or
dec
adc
aad
adc
out
add
or
dec
adc
aam
adc
std
mov
adc
std
jmp
adc
call
cmp
adc
call
cmp
adc
call
push
adc
cmc
popa
adc
lock
adc
adc
dec
adc
out
das
adc
loopne
adc
aad
adc
sar
adc
cld
stos
adc
in
adc
dec
adc
out
adc
lock
or
dec
adc
sub
adc
notb
adc
cli
adc
cmc
popa
adc
out
data16
dec
adc
fmuls
or
repz
iret
repz
iret
repz
iret
repz
iret
repz
fcmovu
adc
iret
repz
iret
repz
lock
or
and
or
push
adc
notl
or
sub
or
js
or
adc
fadd
adc
adc
cli
adc
loopne
adc
sti
data16
sti
data16
sub
adc
cld
call
or
jae
or
xchg
adc
divb
adc
iret
repz
out
int3
adc
fldl
fiadds
adc
lock
or
and
or
std
adc
fcmovu
adc
std
jmp
adc
fldl
std
mov
adc
rclb
push
adc
in
adc
std
jmp
adc
out
data16
fisubrs
or
sub
adc
repz
adc
out
add
or
out
or
xchg
or
push
adc
fisttps
adc
std
mov
adc
notl
or
cmp
or
jae
movb
dec
call
or
shr
xor
mov
neg
das
das
pop
movzbw
shl
xchg
sbb
pop
mov
shr
popf
push
cltd
movzbw
mov
movzbw
push
jmp
test
pushl
popf
pushf
movb
lea
jmp
clc
add
push
call
rol
call
mov
cld
xchg
mov
pushf
mov
lea
std
cld
mov
movl
jmp
push
cmc
mov
movsbw
das
test
mov
movsbw
not
shrd
mov
jmp
jmp
rol
lea
rol
pushl
popl
pop
call
mov
pushf
pushf
movb
lea
jmp
call
btc
mov
clc
rol
call
add
push
pushf
lea
jmp
pusha
pushf
mov
movw
mov
lea
jmp
push
repz
popl
bswap
pushl
popl
jmp
call
pusha
mov
jmp
pushl
mov
push
push
pushf
mov
lea
js
push
pushf
xchg
movzbw
mov
mov
bswap
pushf
mov
jmp
mov
pusha
jmp
jmp
mov
mov
pushl
mov
push
pushf
pushf
lea
jmp
movsbw
bswap
mov
not
movsbl
call
mov
mov
pushl
pushf
mov
bswap
mov
not
mov
bswap
lea
push
bswap
pusha
pusha
mov
movsbw
lea
pushf
mov
jmp
pusha
mov
jmp
push
mov
movzbw
movsbl
movzbw
bswap
mov
jne
push
pop
push
repz
popl
btr
movsbl
jmp
pushf
popl
mov
pushl
push
pushf
pushl
popl
movb
mov
lea
jmp
lea
mov
mov
bswap
push
jmp
jmp
add
call
pushf
call
call
mov
pusha
mov
lea
jmp
clc
movb
or
pusha
cmc
xor
push
call
test
cmp
neg
stc
test
bt
sub
clc
mov
call
sub
cmc
jmp
repz
popl
call
cld
cld
cld
jmp
test
mov
call
pushl
popl
push
pushf
pushf
lea
jmp
mov
pusha
movb
movl
push
lea
jmp
pushf
call
add
call
or
movzww
call
call
pushf
popl
pusha
jmp
bt
rol
mov
jmp
sub
pushf
pushf
div
movl
mov
push
pushf
jmp
cmc
rol
push
cmc
sbb
xor
lea
movzbw
inc
inc
bt
rol
and
btr
shld
mov
clc
sub
jbe
sub
call
pushf
bt
sub
jmp
add
pushl
movb
jmp
add
add
mov
bswap
push
not
mov
mov
repz
pusha
pushl
popl
btr
btr
mov
movl
pop
cmc
rcl
movsbw
mov
call
ror
rcr
rcl
lea
lea
shld
movzbl
pusha
sar
mov
clc
stc
bswap
bt
add
movb
mov
mov
pusha
pushf
movw
mov
pushl
ret
call
jmp
dec
mov
rol
pusha
mov
movb
lea
jmp
xchg
bswap
lea
ja
push
pushf
pushl
mov
push
lea
lea
push
lea
bswap
pusha
mov
movzbl
movzbw
movsbw
movzbl
mov
lea
not
pushf
pop
repz
popl
pushf
pushl
lea
not
pushl
popl
rol
bt
movl
pop
jmp
call
jmp
shr
movsbw
xor
bswap
inc
bsf
setl
bt
pushf
and
adc
mov
clc
push
bt
jmp
mov
call
rol
push
mov
movb
lea
jmp
ror
push
pushf
cmc
add
test
pushf
clc
add
clc
clc
stc
clc
sub
pushl
jmp
mov
pusha
push
movsbl
pushl
mov
not
jmp
pushl
push
dec
stc
cmc
rol
push
mov
push
lea
jmp
mov
movb
mov
lea
jmp
pusha
jmp
movb
mov
call
jmp
pushf
mov
movb
mov
call
call
pusha
mov
call
mov
jmp
movb
jmp
pushf
mov
push
pushf
lea
jmp
call
call
pusha
mov
not
not
mov
lea
pusha
not
pop
repz
popl
lea
bt
ror
not
pushl
popl
movzbw
lea
movl
movsbw
stc
not
mov
pushf
pushl
rol
pushf
mov
dec
clc
jmp
pushf
movb
rol
push
push
movl
mov
lea
jmp
clc
rol
pushf
mov
push
lea
jmp
mov
jmp
sub
pushf
stc
cmpl
push
call
push
pushl
popl
pusha
lea
jmp
pusha
mov
lea
jo
push
pushf
mov
lea
bswap
push
jmp
sub
call
inc
xadd
ror
rol
mov
rcl
add
neg
or
mov
push
cmc
cmc
cmc
sub
pushf
shr
jmp
not
mov
push
lea
jmp
call
lea
pusha
mov
mov
pushl
push
repz
popl
bt
cmc
movsbw
not
pushl
popl
rcl
ror
rcl
btr
movl
clc
stc
movzbw
mov
bt
rol
call
push
movzbw
pushf
mov
movsbl
push
mov
not
movsbw
mov
movzbw
lea
push
jmp
setp
call
pushl
movsbl
movl
call
mov
pusha
pushf
movb
pushf
lea
jmp
call
pushf
pushl
popl
pushl
push
movb
lea
jmp
call
push
not
mov
push
movsbw
movzbl
not
mov
pusha
movzbw
repz
popl
pushf
pushl
clc
pushl
popl
rcl
movl
movzbw
jmp
jmp
movl
call
jmp
call
movb
mov
pusha
push
pushl
lea
jmp
inc
pusha
movb
pushf
lea
jmp
pushf
jmp
pusha
lea
jae
pushf
jmp
mov
push
pushf
push
pushl
lea
jmp
call
mov
pusha
push
pushf
push
lea
jmp
bsf
bsr
pushf
adc
mov
pushf
and
add
movb
call
mov
pushf
pushf
mov
lea
jmp
setb
ror
jmp
pushf
dec
cmc
jmp
jmp
jmp
call
mov
call
bt
rol
jmp
rcr
movsbw
rol
rol
mov
call
push
not
call
pushl
popl
rcl
movzbl
not
lea
push
stc
lea
mov
stc
rol
call
jmp
pusha
mov
pushf
xchg
pop
mov
bswap
mov
mov
pushf
lea
push
movzbw
call
cmp
shrd
mov
cmp
lea
jb
stc
sub
jmp
movb
pushf
popl
jmp
bt
rol
mov
pushf
pushf
lea
jmp
pusha
jmp
pusha
bt
and
pushf
cmc
cmp
push
push
pushf
lea
js
jne
bsf
rcl
xorb
setle
pop
pushf
pushf
push
lea
jmp
inc
pushf
cmc
xchg
stc
pusha
clc
cmc
rol
clc
mov
add
test
add
clc
pushf
pushf
cmp
sub
jmp
push
movb
dec
call
push
call
lea
cpuid
jmp
pushf
mov
call
mov
call
jmp
aad
sar
mov
call
push
clc
jmp
dec
jmp
pushf
mov
dec
cmc
push
cmc
rol
push
mov
movb
lea
jmp
pushf
pushf
popl
movl
pushl
popl
movb
pushl
mov
movb
lea
jmp
cmp
rcl
test
movzww
test
cmp
add
pushf
pushf
jmp
jmp
daa
mov
push
add
jmp
movsbw
bswap
push
bswap
mov
movb
pushl
jmp
pusha
push
lea
jne
pusha
inc
mov
jmp
dec
cmc
mov
pushf
rol
pushl
mov
pushf
mov
lea
jmp
jmp
mov
pusha
pushf
pushf
mov
pushf
pushf
lea
jmp
not
call
clc
and
jmp
push
pushf
popl
jmp
mov
push
mov
movzbw
bswap
call
inc
pushf
pushf
lea
jmp
pushf
push
dec
stc
rol
movb
mov
lea
jmp
lea
pushf
push
pushf
jmp
repz
popl
lea
pushf
btc
pushl
popl
movsbl
push
ror
mov
jmp
pushf
popl
call
pushf
pushl
popl
pushl
pusha
lea
jmp
pushf
lea
push
lea
movsbl
push
pusha
pusha
bswap
mov
movsbw
pushf
repz
popl
rol
push
push
pushl
popl
rcr
clc
movl
rcl
mov
cmc
call
pushf
popl
call
push
pushl
jmp
mov
movzbw
mov
pushf
pushl
mov
push
lea
jmp
push
jmp
movb
mov
call
mov
lea
push
movzbl
mov
lea
not
push
jmp
dec
push
mov
pushf
rol
pushf
lea
jmp
dec
mov
rol
pushf
lea
jmp
rol
jmp
clc
cmc
add
pushl
push
pushf
popl
pushf
jmp
cwtl
call
mov
pushf
mov
not
lea
bswap
movw
mov
mov
call
call
push
pushf
push
mov
pusha
lea
jmp
jmp
call
not
bswap
repz
popl
stc
mov
jmp
movb
movw
pushl
popl
mov
pushf
pushf
lea
jmp
inc
pusha
mov
clc
stc
test
sub
mov
call
rol
jmp
jmp
test
add
call
push
sub
jmp
aaa
shr
clc
mov
call
stc
rol
pushf
mov
call
call
cmp
push
pushl
lea
jne
btc
or
shl
xorb
lea
movsbw
pop
pushf
pusha
push
pushf
lea
jmp
cbtw
cmc
stc
pushf
cwtl
cmc
push
test
sub
push
jmp
movw
dec
pushf
bt
movl
rol
pushf
pushl
mov
mov
lea
jmp
jmp
xchg
pusha
mov
pop
push
lea
lea
mov
call
pushf
popl
mov
push
movb
lea
js
popl
pushf
pushf
lea
jmp
pusha
mov
jmp
mov
pop
mov
lea
jmp
repz
mov
pushl
bswap
btr
push
stc
ror
pusha
mov
movb
call
pushf
call
not
mov
pushf
mov
bt
and
push
call
pusha
mov
pushf
mov
jmp
jmp
stc
movl
call
call
mov
pushf
pushf
lea
jge
pusha
inc
pushl
push
push
lea
jmp
movb
lea
jnp
pusha
mov
pushf
call
rol
pushl
pushf
push
push
lea
jmp
test
pusha
add
pushf
mov
movb
call
mov
mov
mov
lea
mov
mov
movb
lea
jmp
call
lea
push
jmp
inc
movzbl
cmp
push
add
js
clc
add
cmc
rol
cmc
pushf
cmc
pushl
neg
pusha
sub
bt
bt
push
clc
add
cmp
mov
pushf
call
bswap
mov
not
push
jmp
mov
movb
push
lea
jmp
movsbw
movsbw
push
setns
cwtl
not
not
mov
pusha
jmp
test
stc
aaa
aaa
lea
test
cmc
test
call
movl
push
push
mov
clc
pushf
call
not
pushl
popl
cmc
movl
cmc
pop
bts
pushf
mov
cmc
jmp
push
push
call
pushf
pushf
jmp
pusha
mov
mov
pushf
mov
push
lea
jmp
movl
pushf
popl
pushf
call
neg
clc
clc
mov
mov
add
pusha
stc
mov
call
aaa
mov
cmc
cmc
mov
cmp
bt
push
call
movsbw
call
lea
movl
mov
movw
pushf
lea
jmp
sub
pusha
mov
push
pushf
lea
jmp
mov
call
mov
pusha
pushf
popl
mov
pushl
popl
mov
pusha
lea
jmp
call
pushl
popl
pushl
pushl
pushf
lea
jmp
movzbw
bswap
push
pushl
mov
mov
not
call
push
pusha
divl
jmp
pushf
lea
push
call
call
mov
pushf
call
not
bswap
mov
pushf
pushf
call
call
pushf
mov
call
pusha
push
mov
jmp
mov
jmp
sar
and
movzbl
pushf
push
sub
pushl
test
cmp
push
xor
pusha
not
cmp
mov
cmp
neg
cmc
cmc
sub
clc
bt
bt
clc
lea
call
mov
pushf
lea
jmp
jmp
push
jmp
pushl
popl
push
movb
pushf
lea
jmp
add
je
add
bt
clc
shrd
pusha
call
pushf
lea
ja
mov
pushf
pushf
pusha
lea
jmp
jmp
clc
rol
pushf
pushf
movb
dec
push
pushf
rol
pushf
lea
jmp
or
shl
or
mov
cmp
stc
add
pushf
call
not
jmp
pushf
mov
call
pushf
popl
movw
pushl
movl
pushl
popl
movw
lea
jmp
movsbw
mov
movzbw
mov
pop
pop
jmp
mov
mov
pusha
pusha
movsbw
pushf
popl
call
lea
je
pusha
mov
cmp
sub
cmp
call
jmp
movb
pusha
mov
pusha
mov
call
mov
pushl
call
pushf
mov
jmp
mov
repz
movzbl
pushl
stc
ror
push
rcl
rcr
rol
jmp
dec
call
jmp
mov
jmp
not
sbb
bsr
pop
stc
pusha
call
pusha
mov
pop
pusha
pushf
movzbw
mov
pushf
lea
push
movsbw
lea
bswap
push
call
jmp
stc
movsbw
mov
movb
rol
pushf
dec
movb
rol
pushf
pushf
pushf
push
lea
jmp
cmp
not
jmp
pushl
pushf
mov
pushf
push
lea
jmp
push
btr
movl
bswap
rol
rcl
call
clc
shl
pusha
pushf
mov
pushl
pushf
popl
pushf
pushl
pushl
popl
push
push
push
lea
jmp
rol
movb
pushf
lea
jmp
mov
push
lea
jmp
ror
movl
bswap
mov
pushl
call
lahf
movsbl
pushf
jmp
mov
push
mov
call
jmp
mov
pusha
mov
lea
jmp
pusha
pushf
jmp
mov
push
pushl
pushl
push
lea
jmp
call
movzbw
lea
mov
not
mov
movzbw
movzbw
call
jmp
lea
lea
push
lea
push
mov
movzbw
pusha
mov
not
repz
popl
movsbw
pushl
popl
bswap
pusha
movl
pop
movsbl
btc
mov
jmp
jmp
neg
shl
bts
mov
pusha
sub
pushf
jmp
shr
and
aas
cmp
mov
clc
shld
or
shr
mov
push
mov
pushf
pushl
call
jmp
mov
call
push
dec
clc
call
mov
jmp
call
push
pusha
mov
jmp
mov
cmc
call
clc
mov
shrd
mov
cmp
or
mov
call
lea
mov
bswap
push
not
lea
not
repz
not
rcl
clc
pushl
pushf
movl
movsbw
mov
clc
pusha
rol
call
dec
mov
clc
rol
pushl
pushf
pusha
push
lea
jmp
pushf
lea
jge
mov
push
pushf
popl
push
pusha
pushl
popl
mov
pushf
pushf
push
lea
jmp
push
bswap
pushf
not
mov
lea
call
aam
setge
mov
push
test
pushl
add
pusha
mov
jmp
mov
mov
mov
mov
movb
xchg
call
jmp
push
jmp
mov
push
pushf
pushl
pushl
ret
add
sub
notl
neg
movzbw
sbb
mov
cmp
sub
pusha
push
call
movl
movb
mov
mov
movl
pushl
ret
pushf
rol
pushf
dec
push
stc
stc
jmp
jmp
add
call
stc
mov
xchg
push
mov
cmp
call
mov
bt
sub
movb
pushl
mov
mov
pushf
inc
pushf
lea
jmp
mov
pushf
pushf
mov
pusha
call
rol
pushf
lea
jmp
bt
movzbl
bt
movzbw
push
shld
add
clc
pusha
jmp
call
push
call
btr
shrd
sub
or
mov
dec
pushf
rol
mov
clc
pushf
add
mov
mov
pushl
pusha
push
lea
jmp
mov
pusha
mov
jmp
bts
shl
lea
mov
clc
rol
inc
mov
stc
not
call
dec
cmc
jmp
push
mov
movl
push
lea
jmp
mov
pushl
jmp
pusha
movb
pusha
pushf
mov
push
pushf
mov
movw
pushf
mov
jmp
