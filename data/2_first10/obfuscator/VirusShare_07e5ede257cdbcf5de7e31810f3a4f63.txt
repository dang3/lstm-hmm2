fisubrs
add
inc
add
pop
dec
outsb
je
addr16
add
sbb
push
push
push
je
imul
out
iret
pop
add
clc
xor
push
or
repz
add
pushf
pop
push
dec
bound
arpl
rol
fidivs
pop
sbb
loop
jae
sbbl
insl
adc
jb
popa
arpl
cltd
or
pop
inc
add
in
sti
pop
fs
addl
jmp
insb
test
aas
or
leave
mov
xchg
fidivl
cs
adc
cmc
jl
lods
or
aas
or
and
inc
and
fnstcw
push
or
push
lea
jmp
in
sti
and
pshufw
in
mov
in
in
pop
pop
push
push
in
in
dec
dec
inc
inc
in
in
cmp
xor
in
in
xor
cwtl
in
in
xchg
nop
and
in
in
test
mov
in
adc
push
add
mov
pop
mov
call
sub
je
movzwl
fmull
fisttpl
ret
addr16
dec
inc
sahf
pushf
add
sar
hlt
cld
fldt
lock
hlt
mov
cmp
jne
push
stc
fldcw
add
push
sub
xor
mov
add
jmp
mov
mov
pop
mov
mov
rorb
add
push
lret
std
out
out
pop
or
inc
cmp
jne
mov
pushf
sub
jae
pop
js
cpuid
mov
or
in
rcl
and
add
push
push
sbb
mov
mov
out
dec
repz
lock
incb
jmp
mov
lahf
mov
add
adc
mov
insb
pop
and
into
mov
pop
pop
mov
mov
adc
outsl
jo
inc
adc
jl
dec
add
int3
pop
or
pop
push
in
loopne
mov
lock
decb
inc
push
pop
jo
pop
push
push
repz
mov
lret
add
paddsb
sbb
enter
jp
fadds
or
fisubrs
pop
or
add
push
add
cmp
jne
cmp
das
inc
pop
cmp
jne
mov
mov
xor
cmp
xor
jo
pop
pop
pop
lcall
hlt
or
aam
mov
mov
mov
loopne
jbe
add
fbstp
push
and
push
add
mov
aas
in
movhps
pop
push
cmpl
push
push
aas
in
les
add
dec
imul
sbb
out
sbbb
mov
add
sub
mov
sub
cld
dec
or
addr16
pop
roll
jmp
and
push
inc
add
jne
adc
addl
nop
xchg
fldenv
mov
pop
mov
dec
adc
fidivrl
push
push
add
cld
mov
test
je
xor
in
loope
inc
xlat
pusha
aam
orb
dec
enter
bound
sub
dec
xchg
negb
jge
push
lahf
push
pop
icebp
popf
out
inc
xchg
pushf
sbb
aas
call
xchg
cmp
sub
repz
mov
or
adc
pop
jecxz
pop
cmp
mov
imul
stos
lods
mov
jb
lcall
jo
ja
and
jae
or
lods
mov
inc
push
insb
cwtl
jbe
or
dec
jo
or
jne
pop
sub
mov
scas
jno
clc
addl
cmp
jne
push
pop
xchg
ja
mov
je
jno
inc
sub
xchg
pusha
push
inc
mov
fucomip
divl
mov
ret
mov
and
mov
cmp
loop
mov
loopne
lcall
sbb
pop
jmp
or
add
adc
or
jmp
jbe
ja
or
sbb
lahf
cmp
push
push
es
rolb
adc
in
out
setp
andl
pop
mov
js
ljmp
sbb
enter
inc
pop
pop
pop
roll
or
xchg
push
aaa
add
outsb
inc
add
test
insl
cmp
xor
lahf
div
inc
pusha
cs
not
mov
rorb
out
adc
inc
cmp
jg
mov
xor
rolb
push
pop
mov
cmp
fildl
inc
mov
out
leave
pop
outsl
ds
shrb
jne
add
shlb
lds
jo
fstl
mov
or
inc
or
or
cli
mov
into
add
out
iret
jne
into
push
sbb
rcrb
data16
cmp
or
pushf
outsl
xor
pop
pop
mov
sub
fwait
push
add
add
or
mov
adc
cmp
adc
sub
sub
rorb
test
mov
jbe
inc
push
xchg
jmp
stc
cltd
add
cld
cmp
jne
pop
jg
dec
jl
cmp
xorl
add
clc
inc
lock
adc
rcll
pop
cmpsl
dec
pop
in
dec
leave
lea
add
roll
shlb
shrb
push
jbe
rcrb
pop
test
add
mov
push
mov
pop
dec
test
je
pop
mov
or
aam
sbb
unpcklps
ja
jmp
fisubs
int
scas
push
mov
push
dec
push
push
les
fdivrp
xor
adc
add
cmpb
rclb
and
jbe
je
adc
push
mov
sub
mov
add
hlt
inc
cmp
jecxz
jne
movl
push
cld
sub
aaa
pop
js
adc
mov
shl
add
bound
pop
fs
lret
dec
negl
cmpsl
subb
ret
push
sub
in
pop
dec
test
scas
test
mov
loope
out
call
sbb
stos
mov
xlat
add
dec
mov
shl
inc
clc
jmp
or
mov
push
jne
fimuls
fcompl
inc
xor
cli
and
add
push
sub
jne
repz
sbb
cmp
pop
and
inc
pop
xlat
clc
cmp
add
and
adc
cmp
jecxz
dec
fdivs
test
jns
ret
cli
add
aas
nop
hlt
jmp
sub
sbb
mov
sbb
hlt
mov
adc
mov
sbb
cmp
push
mov
push
and
adc
fimuls
outsb
test
ret
sbb
push
or
sbb
add
mov
jnp
decb
xchg
pop
add
sub
lea
mov
cli
adc
movl
sub
shld
pcmpeqd
add
cld
int3
ljmp
add
jle
xor
ljmp
push
mov
add
or
insb
sar
stc
mov
fwait
or
ret
inc
push
push
push
add
lret
xor
cmp
sti
cltd
jmp
leave
sub
ret
sbb
lock
add
sub
jl
or
xor
jo
xchg
xor
add
add
les
out
fdivs
testb
and
mov
push
repnz
arpl
pop
daa
jle
inc
xor
pop
cmpsl
hlt
xor
xor
das
or
out
imul
movl
or
sub
xor
std
in
cmpb
sub
push
movl
dec
test
mov
xchg
or
test
fisttps
xor
cmp
xchg
cmp
aad
test
jp
in
sbb
mov
shlb
lea
shl
add
push
xor
mov
mov
or
mov
push
fistpl
jo
xor
mov
add
or
sbb
xchg
and
jo
add
loope
fcomps
loope
lret
and
divb
addb
nop
inc
aas
xchg
adc
inc
mov
fwait
ja
cmc
or
cmp
or
leave
push
call
and
cltd
scas
testb
pusha
lock
cmpl
repnz
inc
repnz
pop
es
sub
or
sbb
mov
jns
sbb
jecxz
movsb
test
sub
movsl
mov
dec
adc
inc
mov
loopne
hlt
fdivs
movsl
xor
pop
add
stos
add
mov
jae
xor
sub
addl
push
in
sar
roll
mov
enter
mov
xor
fsub
mov
lea
or
fs
push
adc
cmp
add
insl
inc
mov
pusha
or
mov
fsubrs
mov
or
jge
mov
cmp
dec
xor
cmp
out
add
mov
inc
int
mov
sbb
mov
stos
mov
cmp
sbb
lods
inc
fs
push
mov
or
insl
and
jbe
pop
je
cs
les
push
push
xchg
jmp
addb
mov
fdivs
adc
pop
dec
mov
or
mov
pop
adc
pop
fisubrs
clc
cltd
daa
shrb
aad
jmp
mov
jo
mov
push
mov
mov
and
shrb
xchg
imul
or
dec
jne
lahf
orb
shrb
ficomps
aad
push
mov
adc
push
mov
adc
or
je
clc
and
sbb
jle
inc
cld
adc
or
ret
and
add
and
addr16
ret
cmp
add
xor
mov
push
clc
jb
lcall
fsubs
in
rcll
mov
push
sub
sbb
lock
mov
cmp
jne
aaa
jmp
xchg
pop
sub
hlt
pop
or
ficompl
inc
insb
mov
pop
cmp
loope
xor
push
sub
inc
cld
test
inc
sarl
sbb
cltd
jg
sub
movsl
or
ljmp
push
insl
mov
or
pop
dec
push
and
and
inc
cld
pop
pop
add
mov
lock
add
gs
jne
out
bnd
or
into
jmp
adc
pop
clc
inc
ss
mov
mov
test
jne
cltd
or
sahf
decl
sbb
fwait
shrl
stos
push
add
or
enter
bound
test
pop
icebp
and
cmp
cmp
lock
pop
push
js
sub
ret
cmp
fldl
xor
stos
jle
dec
out
xor
push
lock
test
je
sub
push
addr16
add
or
lahf
jbe
cmp
or
jmp
push
repnz
pop
aaa
outsb
or
orb
or
test
sub
pop
pop
push
mov
cmp
xor
cmp
es
jge
loope
dec
js
mov
and
add
repz
adc
nop
mov
sub
out
cmp
push
je
orl
outsl
push
add
sbb
out
in
mov
xchg
add
inc
adc
or
aad
std
mov
lret
fwait
std
int
push
sub
mov
cltd
cmpsl
mov
sub
rcr
divps
cmp
jg
sub
add
negl
mov
sub
in
sub
xchg
and
mov
fdivs
fdivs
das
mov
add
les
mov
lds
push
shrl
push
movsl
sub
test
das
mov
lret
dec
add
pop
dec
jl
xor
jmp
sub
sub
sub
aaa
push
adc
scas
add
sbb
xor
adc
xor
add
sbb
les
jg
push
fcomps
add
add
push
mov
test
push
jge
cmp
mov
adc
lret
xchg
push
sbb
in
je
adc
lea
xor
test
jle
nop
call
fs
push
mov
sbb
add
dec
scas
out
push
adc
jnp
jno
or
ret
dec
sti
jg
mov
xor
mov
dec
inc
pop
dec
mov
sbb
ds
pop
subl
bound
sar
out
pushf
xor
out
mov
dec
stc
sbb
sbb
loopne
ret
xor
adc
dec
ret
inc
orb
or
sarl
test
jne
jnp
add
movaps
icebp
cmp
ja
mov
mov
jno
in
adc
push
pop
mov
ret
push
push
push
or
jne
sysret
or
xor
outsl
daa
call
lret
mov
mov
mov
incl
je
mov
sbb
ret
sub
inc
xor
mov
cmp
jg
add
mov
inc
repz
mov
push
and
leave
jmp
mov
jmp
mov
mov
push
outsl
add
sbb
ds
mov
xchg
cmp
ja
je
mov
stc
add
rep
xchg
inc
je
cld
lea
imul
xor
std
xor
cld
inc
sub
jge
lds
into
fwait
orw
insb
adc
movsb
fldcw
pop
pop
outsb
in
or
xchg
shlb
das
push
push
mov
jb
mov
arpl
call
jmp
rcll
jmp
lret
jno
mov
jmp
push
ret
cmp
out
pushf
add
add
pop
mov
in
ds
or
loopne
fcmovnbe
mov
adc
inc
cmp
mov
fcos
lcall
xlat
adc
jne
call
mov
test
adc
and
sbb
jmp
cmp
mov
mov
cli
mov
cmp
jbe
lret
mov
inc
inc
and
pop
hlt
out
mov
push
mov
shr
je
jb
sbb
fnstenv
out
add
inc
dec
mov
sbb
add
add
dec
jne
pushl
in
loop
push
adc
add
and
je
mov
cmp
jne
dec
je
mov
add
add
or
lcall
call
cmp
jne
shr
mov
loope
pop
adc
add
mov
lret
faddp
loopne
data16
stos
mov
fcmovnbe
test
stos
pop
pop
mov
enter
fstpt
int3
add
push
inc
pop
and
add
out
jae
je
and
je
pop
je
push
imul
dec
inc
pop
fidivs
add
sub
or
cmp
ja
lea
add
add
mov
mov
dec
je
sarb
jmp
inc
mov
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
fnstsw
je
andb
xchg
and
popa
add
rolb
pushf
add
jb
adc
xor
mov
into
loope
or
push
icebp
repz
sub
js
inc
stc
mov
sub
add
dec
je
fdivrl
orl
lea
fldt
call
pcmpeqb
mov
push
cmp
scas
and
lret
imul
push
cli
xchg
jge
mov
pop
push
cltd
xchg
xor
sbb
jmp
adc
fstp
fldt
fldz
mov
dec
mov
xchg
jg
aas
in
dec
mov
cli
or
pushf
or
ret
mov
adc
inc
repnz
sbb
imul
mov
add
mov
jb
jle
fistpl
es
test
out
sub
pop
iret
scas
cld
lret
add
leave
sbb
mov
iret
cld
jbe
imul
cmp
mov
mov
bound
aaa
jmp
filds
xlat
fadds
outsb
xor
xchg
push
or
mov
test
into
sbb
rorl
mov
push
pop
test
enter
call
push
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
incl
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
popf
imul
pop
js
inc
mov
stos
mov
cmp
or
mov
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
call
jg
inc
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
incl
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
jmp
repz
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
call
or
addl
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
pop
jmp
mov
popa
inc
pop
and
addr16
clc
push
daa
mov
subb
and
and
outsb
bound
xor
popl
xor
inc
jg
sub
clc
pop
jne
push
pop
and
popf
je
or
cmpb
dec
iret
hlt
movzwl
add
test
xor
into
mov
or
xor
leave
or
movl
push
pop
hlt
push
data16
add
loope
or
mov
sub
out
mov
aaa
jne
sar
aam
pop
aas
or
mov
sbb
adc
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
xchg
jmp
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
fildl
sub
jecxz
fldcw
call
jl
mov
xlat
mov
xor
mov
inc
rep
testl
lock
add
push
and
sbb
imul
pop
aaa
and
push
std
jnp
fsubs
shlb
popa
lock
jge
and
mov
pop
lods
mov
sub
add
outsl
clc
loopne
mov
or
push
cld
ret
test
cld
add
dec
fdivs
pop
shr
dec
rep
pop
xor
inc
jnp
rorb
add
jmp
mov
sbb
in
cmp
je
pop
mov
add
jae
shlb
push
push
mov
mov
push
sbb
jne
jne
add
mov
mov
mov
mov
sub
sub
lahf
pop
cmp
mov
xchg
jmp
stc
add
pushl
paddd
movd
and
jo
pusha
sar
push
cmp
mov
adc
inc
in
dec
decl
inc
mov
sbb
andb
fs
lock
xor
or
push
mov
push
dec
cld
or
mov
adc
or
ja
mov
adc
mov
jbe
xchg
repnz
lea
inc
push
sbb
and
mov
sub
setne
cmc
shl
jae
jnp
cmp
test
add
jnp
fisttps
mov
jg
fisubrs
cmp
push
jb
cmp
jne
push
or
push
mov
or
jo
xor
pop
fsubrl
js
xchg
and
xchg
orl
sbb
mov
pop
xor
push
mov
mov
cmp
xchg
dec
jle
jne
loope
loop
mov
sub
loop
shl
jg
add
test
push
add
repnz
je
pop
push
mov
ret
pop
add
sub
mov
pop
push
jge
fisttpll
pop
add
out
mov
les
sti
pop
shrl
xor
das
mov
add
rcl
addr16
es
or
mov
ss
pop
push
sub
dec
test
or
data16
mov
rorb
pop
loopne
pop
pop
je
push
rcrb
lock
push
push
sub
aas
push
scas
adc
xor
or
mov
mov
movl
or
mov
lock
push
frstor
lods
mov
mov
push
jle
adcl
mov
adc
push
clc
push
sbb
dec
scas
in
aas
jg
mov
jbe
pop
pop
out
cmpb
dec
or
loop
dec
in
push
call
enter
pop
push
pusha
push
push
cmp
pop
repnz
add
pop
iret
cs
add
sub
mov
or
jae
and
call
and
sbb
std
add
or
jne
movsbl
inc
inc
jmp
add
ljmp
sbb
jecxz
shlb
loope
fsub
nop
fsts
push
aas
loop
fdivrl
rorb
pusha
adc
xor
testl
and
cli
dec
ja
cmp
inc
adc
cld
icebp
stos
fwait
scas
pop
pusha
adc
je
xor
shl
adc
pop
mov
aas
or
cmp
cli
out
push
je
or
xor
sub
sub
adc
inc
sti
or
add
stos
mov
fwait
xor
cmc
enter
adc
cmp
push
lea
push
mov
pop
popa
jns
je
orl
jbe
ret
push
mov
cmp
adc
loope
sub
mov
call
mov
fucomi
pop
je
mov
add
inc
add
push
mov
add
mov
mov
adc
xor
test
inc
xchg
pop
sahf
or
je
dec
or
add
and
dec
and
andb
pop
roll
cld
add
lds
inc
mov
sahf
std
push
ret
sarl
mov
cmp
jne
divl
push
mov
inc
or
mov
sbb
je
jg
pushw
add
dec
jne
and
lds
roll
push
mov
sbb
push
xor
xchg
or
lahf
adc
cwtl
andb
push
sub
movups
out
and
adc
cmp
mov
es
arpl
sbb
add
pop
popf
jle
aas
cmpsb
movl
or
test
outsl
or
mov
inc
nop
call
push
push
mov
push
data16
and
stc
mov
pusha
sbb
lahf
loopne
nop
or
pusha
add
idivl
or
jbe
sbb
cmp
test
push
ss
pop
adc
adc
add
lea
add
mov
mov
adc
insl
jo
loop
xor
sbb
or
std
inc
loop
mov
add
je
cmp
fists
adc
push
sub
je
jmp
mov
jno
aas
sub
jb
je
jmp
cmp
cmp
fistps
inc
adc
jmp
sub
cmp
mov
dec
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
sbb
or
lret
call
or
pop
jle
adc
cwtl
inc
push
jg
push
sbb
je
push
es
test
inc
cmp
mov
push
inc
sbb
add
hlt
mov
jo
out
push
inc
sti
mov
push
cmp
cmpsb
push
sub
xchg
mov
adc
jno
or
or
aaa
scas
xor
cs
or
push
mov
mov
loope
lock
cmp
push
add
or
and
cmc
and
add
mov
inc
or
mov
and
mov
jbe
out
aam
sbb
les
lea
call
xor
adcb
test
mov
adc
ret
sub
sub
inc
adc
mov
mov
pushf
lock
cmp
arpl
add
rcrb
je
add
cmp
jg
movl
sbb
lock
cmp
adc
leave
pminsw
movb
adc
sub
ret
ds
mov
add
push
sbb
add
ss
pop
loopne
pop
js
jne
pop
pop
cmpsl
dec
imul
mov
dec
or
xor
insb
mov
add
std
sub
ret
mov
add
js
lock
test
adc
es
loopne
mov
jge
mov
mov
mov
jge
fisttpl
inc
adc
aas
sub
sbb
inc
outsl
das
rcrb
pop
sbb
pushl
add
mov
mov
or
pop
leave
call
ljmp
cmpw
cmp
cmp
mov
hlt
test
or
imulb
cmc
repz
xchg
xor
add
ds
pop
ret
mov
addb
push
adc
psrad
je
lods
mov
add
mov
add
insb
push
cmpl
push
inc
mov
outsb
fcoms
push
clc
ja
subb
inc
sbb
mov
out
mov
nop
daa
push
jne
ds
icebp
add
loop
or
xor
adc
jnp
icebp
push
inc
daa
pushf
sbb
inc
push
mov
mov
adc
jne
je
notb
fimull
jne
inc
adc
in
fwait
call
xchg
and
subps
jmp
mov
shll
lods
add
mov
inc
cs
scas
sub
adc
pop
cmpl
rorb
jl
lock
clc
daa
bound
mov
and
add
or
arpl
jp
jne
ss
inc
inc
jg
inc
inc
xor
mov
mulb
ret
dec
cld
pop
pop
pop
jmp
jbe
lret
pop
xchg
adc
xchg
call
or
and
add
and
les
pop
movw
js
ljmp
aas
js
enter
cwtl
mov
mov
pop
lock
stc
mov
ljmp
repz
cmpsl
outsb
scas
cmp
push
sahf
push
dec
inc
or
adc
and
inc
inc
in
mov
in
mov
and
add
cmp
les
jbe
clc
fdivrs
icebp
jmp
lea
cmp
popa
cmpsl
sub
mov
xor
subb
les
mov
and
fldl
fstpt
ljmp
pop
sbb
ret
jge
xor
loope
call
loop
or
outsb
xor
mov
je
lock
lcall
add
jae
mov
inc
add
jmp
imull
pusha
and
pop
pop
or
push
mov
mov
push
addr16
in
add
sarb
mov
sahf
std
push
fcoms
xlat
adc
scas
mov
pop
pop
out
pop
lds
cld
outsl
push
and
mov
cld
jp
cmp
jl
in
loopne
pusha
or
xchg
aas
loopne
movsb
xorb
ret
push
aas
mov
je
mov
and
ljmp
pop
and
cmp
insl
mov
adc
mov
sub
jo
out
popa
cmpl
je
cmp
mov
fdivrl
sub
inc
cld
add
mov
mov
fmuls
sub
sbb
dec
pusha
mov
lret
mov
popa
vaddss
jle
xor
mov
loopne
cmp
jmp
fwait
popa
jnp
dec
sub
add
cmp
fs
dec
jne
lahf
cmpb
ja
jge
hlt
loopne
cmp
pushl
add
dec
jmp
and
inc
pushf
jle
jmp
ss
add
pop
dec
jne
add
loopne
int3
and
cli
pop
and
pop
lea
jmp
cli
push
jle
sarl
mov
imul
shlb
add
push
shr
fnstcw
push
mov
pop
dec
dec
add
pop
mov
add
add
dec
adc
add
and
dec
shll
and
inc
pop
and
mov
adc
jg
rorb
jo
add
jmp
shr
aam
movsl
pop
inc
rclb
cmc
dec
mov
add
movsb
dec
jno
cmp
mov
adc
pop
adc
cmp
xchg
dec
inc
push
pop
mov
jnp
into
cmp
sbb
sub
dec
push
xor
jl
cmp
jge
sub
into
sbb
adc
push
data16
mov
adc
shr
in
test
push
adc
jmp
mov
sbb
jl
sbb
xchg
shll
sbb
adc
adc
mov
in
pop
adc
add
clc
dec
mov
adc
divl
inc
and
mov
mov
sub
or
loopne
clc
pop
mov
lret
jbe
jo
cmp
sub
mulb
cli
clc
cmp
and
mov
add
outsb
pop
sbb
push
das
mov
fs
inc
push
push
sub
aaa
das
in
push
cmp
cmp
call
mov
scas
mov
push
cmp
push
loopne
pop
jno
enter
xor
lock
jns
mov
sub
sbb
int3
mov
aaa
int3
mov
cmp
push
dec
push
das
int3
pop
pushl
mov
or
rorb
pop
out
xor
sub
push
jmp
in
add
add
cltd
add
mov
push
push
push
inc
add
fs
xor
jns
lods
mov
callw
cs
ja
push
cvtps2pd
or
adc
xchg
mov
mov
cmp
adc
mov
cmp
jge
pusha
clc
xor
ret
nop
pushf
lcall
pop
out
inc
xchg
sub
cmp
push
lods
add
pushf
jo
ja
dec
or
xchg
jle
push
lea
bound
not
sub
mov
les
nop
adc
fadds
mov
jg
push
cli
ret
sub
je
push
mov
sbb
adc
jl
push
mov
jb
adc
cmp
and
xor
iret
cmpsl
mov
push
test
sub
scas
push
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jl
imull
xchg
cmp
je
mov
js
mov
insl
add
cwtl
clc
jmp
adc
dec
lcall
out
jmp
push
mov
mov
les
outsl
scas
pusha
rcrl
cs
adc
cmp
pop
jmp
or
jbe
xor
and
pop
notl
lahf
mov
xor
pop
mov
call
call
pop
xor
fstpt
out
and
shrl
pop
test
push
mov
mov
adc
cmp
test
int3
jg
and
mov
pop
test
pop
das
xor
fdivrs
jmp
es
dec
sbb
aaa
sub
jmp
cmp
inc
add
lret
jmp
test
data16
jns
test
cmp
mov
mov
jmp
push
cmc
adc
xchg
pop
pop
adc
mov
out
andb
jl
mov
mov
lods
dec
clc
push
push
add
sarl
add
incl
jge
cltd
int3
inc
jle
mov
cmp
outsb
outsb
or
je
or
dec
or
pusha
outsb
push
je
pusha
adcb
adc
adc
and
and
xor
and
and
test
adc
lock
call
add
je
clc
or
pop
pop
jmp
fidivl
xlat
idivl
add
jns
xor
push
mov
ret
mov
in
adc
and
xchg
pop
out
add
jne
pop
lcall
cmp
push
cmp
adc
paddsw
fs
dec
movsl
popa
jge
pushf
mov
jmp
nop
daa
fistps
dec
jne
sub
inc
xor
icebp
jmp
cmpsl
std
adc
loope
sbb
les
cmp
cmp
divps
or
ja
sti
add
add
inc
ljmp
mov
icebp
mov
jo
add
jb
inc
mov
push
cmp
lock
inc
in
ret
or
dec
adc
popa
adc
in
mov
dec
nop
push
inc
cmp
mov
fdivrl
mov
aas
cmc
xchg
xchg
mov
mull
mov
lcall
icebp
sub
add
out
adc
pop
pop
ret
jle
popa
mov
dec
enter
xlat
pushl
addl
fst
loope
push
testl
dec
push
xchg
rorl
call
push
test
xchg
cmp
mov
jge
jg
mov
nop
jno,pt
incl
pop
mov
cmpsb
cmp
clc
movzbl
sub
inc
add
jo
push
push
sub
adc
cmp
loop
loopne
or
out
and
in
test
lock
andl
mov
or
cmp
push
in
sti
jle
jmp
imul
das
rol
scas
add
mov
sub
adc
or
rorb
jae
in
in
jmp
push
call
fildll
cmp
jge
mov
cltd
adc
fnstenv
lock
sbb
push
mov
rcrl
mov
into
mov
cmp
int3
inc
jae
sbb
ds
fisttps
adc
sbb
shrl
xlat
mov
cmp
insl
or
add
mov
hlt
add
jp
sbb
lods
add
dec
xchg
sbb
xor
mov
outsb
lea
shl
rolb
jne
shll
mov
sub
popf
sti
rclb
inc
scas
cld
xor
lock
jne
mov
cmp
inc
sbb
in
pop
roll
dec
mov
popa
movsb
jnp
sbb
mov
rorl
dec
mov
push
mov
incl
das
mov
push
fcomps
out
xor
cmp
bound
inc
jnp
push
jne
std
jmp
jl
add
pop
outsl
add
jnp
push
push
fdivr
sub
adc
loope
and
les
movb
movsb
test
mov
inc
adc
adc
pop
inc
js
xchg
aas
push
hlt
mov
ljmp
enter
cltd
push
push
lods
lock
or
or
mov
aad
sti
mov
pop
in
outsb
jae
push
xchg
lea
int3
pop
movb
adc
pushf
add
sbb
add
jmp
and
cmpsb
sub
mov
ljmp
inc
push
cmp
inc
xor
movsb
clc
adc
test
pop
in
imul
cld
inc
clc
push
sub
scas
jge
sbb
sbb
js
pop
jne
fdivrl
into
add
sti
add
xor
inc
das
in
pop
or
mov
mov
pop
xchg
sub
lea
shr
loope
subl
pop
jge
sub
cmpsb
rcrl
mov
inc
cmp
gs
inc
push
inc
jno
jne
stos
mov
sbb
andl
push
fs
mov
cmp
jnp
sti
cltd
or
jg
movb
ret
dec
push
push
loop
ss
mov
imul
dec
ss
cltd
pop
or
jmp
pusha
imul
gs
xor
cs
insb
or
ljmp
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
daa
scas
mov
movsb
push
fucomip
sarb
sti
addr16
movb
into
push
xchg
xchg
hlt
lock
add
cs
jp
add
ja
add
in
push
cmp
aaa
in
je
push
cmp
or
popa
xor
call
xchg
out
inc
sti
cmp
push
jmp
sub
and
push
add
push
repnz
adc
inc
xorl
aas
push
incb
movsl
mov
lds
aam
fildl
loope
int3
stc
mov
repz
sub
into
imul
push
jmp
push
inc
loope
repnz
add
in
in
je
inc
cmp
jne
fdivr
push
adc
cmp
sub
inc
ret
addl
andb
pop
sub
loopne
jb
je
das
ja
cwtl
leave
jo
ss
jae
jg
test
outsl
data16
popa
jb
data16
dec
pop
lret
insb
gs
aaa
mov
sub
jl
inc
cmp
inc
pop
addr16
and
adc
add
adc
adc
inc
add
js
shlb
es
xor
dec
xor
jnp
jne
das
in
jmp
cltd
xor
jmp
adc
push
mov
mov
pop
ss
jb
inc
addr16
dec
jecxz
fsubs
push
add
cmpb
or
imul
jns
ja
movsl
pcmpeqb
adc
cmp
inc
sar
ret
aad
jo
or
pusha
cmp
popa
adc
jne
xchg
xor
mov
pushl
mov
fucomp
mov
and
lods
sbb
mov
inc
in
push
cmp
jne
or
jmp
arpl
and
cmp
cmp
push
cwtl
stos
in
jmp
and
add
sub
repnz
push
or
sbb
add
xor
dec
mov
or
fwait
inc
mov
push
inc
and
pushf
ret
je
sbb
mov
push
cmpsb
test
adc
cmpsl
enter
inc
push
andb
cmp
jbe
shrl
mov
xor
push
and
cmp
push
cwtl
or
mov
add
cmp
lds
pusha
insb
mov
mov
xchg
fcomp
outsl
or
jnp
inc
ret
fnstenv
shll
mov
shlb
mov
lcall
mov
cmp
mov
dec
inc
cmp
ja
loopne
push
decl
pop
cmp
pop
add
pop
cld
ja
jnp
mov
or
lret
loopne
sbb
adc
sbb
and
lcall
add
and
dec
jnp
add
dec
pusha
rolb
fnstsw
cmp
jae
cmp
jb
or
dec
push
push
pop
roll
and
sbb
push
jbe
pop
add
cmp
lea
adc
ret
lock
xor
add
lock
scas
push
leave
rorb
cld
aam
add
cli
mov
inc
test
jg
pop
mov
subl
aas
repz
outsb
and
je
cmp
adc
mov
and
cmp
jne
mov
loop
jbe
ljmp
shl
or
mov
pop
lea
std
sub
mov
enter
inc
inc
mov
or
xorb
mov
or
movl
jbe
jae
mov
ret
xor
es
cli
xorb
sahf
jo
mov
daa
or
jb
inc
stos
or
xchg
je
add
pop
pop
sub
dec
adc
jge
cld
je
adc
lea
fisubrl
and
in
xor
xor
inc
push
and
xor
jle
mov
sbb
test
mov
dec
outsl
jmp
adc
mov
movsl
or
pop
cmp
mov
push
add
add
int
adcb
test
cwtl
pusha
repnz
xor
enter
loopne
inc
test
int3
in
pop
cmp
pop
sbb
sbb
test
pop
add
rolb
sahf
dec
mov
pop
xchg
aam
and
inc
cmp
mov
fsubl
cmpsb
jnp
mov
or
rorl
or
xchg
push
insb
cmp
imul
push
pop
lock
push
cmc
push
push
mov
mov
sbb
jle
push
sbb
add
push
jge
pop
lret
test
add
xchg
jbe
incl
inc
mov
cmpsl
sbb
mov
loopne
or
sarb
cmp
test
and
loopne
sbb
movb
mov
xchg
xor
rolb
js
mov
and
inc
bnd
inc
xor
dec
mov
adc
ret
inc
jns
ret
adc
mov
inc
loope
mov
in
pop
gs
ljmp
and
or
and
addr16
mov
sub
pop
sbb
ja
jl
xor
jmp
sub
mov
push
sbb
sbb
sarl
jl
cmpl
or
clc
loop
imul
out
jo
or
jmp
push
sub
mov
push
jmp
jg
jle
test
jne
mov
ret
in
test
rolb
ret
mov
mov
movsb
inc
shl
mov
sbb
jbe
popf
mov
mov
mov
jo,pt
or
dec
or
fldenv
out
sbbl
jle
mov
or
test
xchg
rolb
or
xchg
sbb
sbb
or
nop
dec
outsb
cmpsl
aad
fcoml
xchg
and
rcrb
test
pushf
js
jo
pushf
pushf
pushf
pushf
push
pushf
pushf
pushf
pop
push
push
dec
pushf
pushf
pushf
pushf
dec
inc
inc
cmp
pushf
pushf
pushf
cmp
sub
pushf
pushf
pushf
sub
sbb
pushf
pushf
pushf
sbb
or
pushf
pushf
pushf
or
cld
rorl
dec
inc
clc
hlt
lock
dec
dec
dec
dec
call
dec
dec
dec
fcom
ror
and
dec
enter
push
daa
daa
daa
daa
push
dec
dec
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
adc
daa
daa
daa
adc
add
xchg
daa
daa
add
sar
daa
daa
daa
mov
pop
lock
call
daa
loopne
fcom
daa
daa
daa
daa
ror
enter
daa
daa
sarb
mov
test
daa
daa
daa
daa
mov
mov
and
setl
mov
daa
daa
jl
je
daa
daa
daa
daa
insb
push
arpl
cld
pop
idiv
lods
jle
dec
add
or
xorb
mov
xor
hlt
shl
xorl
decl
ret
add
pusha
sbb
dec
cmp
sbb
lock
icebp
repnz
dec
dec
dec
repz
cmc
testb
dec
idiv
stc
cli
dec
dec
dec
dec
sti
cld
std
decb
dec
dec
jmp
loope
dec
dec
dec
dec
jecxz
in
dec
dec
dec
dec
out
jmp
dec
jmp
in
out
dec
dec
dec
dec
out
rcl
rorb
dec
dec
rcl
aad
dec
dec
dec
dec
xlat
fcomp
fimull
dec
dec
fcmovnu
fstp
dec
dec
dec
dec
ffreep
rol
dec
dec
dec
ret
dec
dec
dec
enter
dec
dec
dec
lret
int3
int
dec
dec
dec
dec
iret
mov
mov
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
mov
dec
mov
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
cmpsl
test
sbb
dec
fimuls
or
adc
mov
add
xchg
sbb
lods
pop
jp
add
add
and
pop
add
or
arpl
je
outsl
dec
push
mov
outsb
shlb
sar
dec
and
outsl
jb
nop
and
cmpsl
or
cs
adc
fisubl
clc
inc
dec
gs
jo
nop
xorb
fmuls
dec
gs
mov
data16
or
xchg
fcoml
or
outsb
mov
inc
jb
mov
scas
xor
add
movsb
jb
je
mov
mov
popa
insb
push
mov
leave
call
enter
mov
ret
or
sbb
push
ds
mov
decl
inc
inc
imul
outsl
nop
pushf
pushf
mov
push
popa
outsb
addr16
scas
mov
push
outsb
jbe
jb
insb
outsl
ja
imul
push
imul
or
test
push
push
leave
xchg
test
imul
xor
dec
jo
add
add
or
insl
jle
in
insl
mov
pop
scas
pop
add
push
rcll
xchg
scas
jns,pt
outsb
fs
or
movnti
or
mov
mov
add
mov
xchg
mov
popa
inc
cs
jae
faddp
mov
test
scas
scas
or
scas
add
push
je
insb
xchg
sbb
add
inc
inc
arpl
jae
push
adc
andb
jl
clc
cmp
jb
insb
push
jb
insb
jb
jbe
hlt
nop
aam
aam
sarl
push
inc
push
je
arpl
nop
xor
repnz
mov
popa
fidivs
inc
mov
ds
push
popa
jb
inc
sbb
imul
adc
adc
js
pop
addb
lea
outsb
out
and
push
jb
jns
mov
mov
and
cld
push
orb
adc
inc
push
stos
daa
or
mov
outsl
jg
inc
and
arpl
cmp
fbld
jle
add
aaa
xor
add
dec
invd
xchg
insb
jae
nop
int3
sub
nop
inc
cmp
add
pop
mov
pop
add
jbe
mov
push
xlat
fwait
icebp
pop
adc
jne
int3
add
sub
hlt
add
fs
das
movsb
sbb
out
aam
iret
repz
push
push
sbb
loopne
xor
jnp
sbb
push
loopne
adcb
negl
cmp
mov
add
sub
xor
sbb
out
push
and
sarb
jne
imul
and
call
push
sbb
ljmp
jp
xchg
shr
div
add
add
shlb
add
inc
xchg
lret
mov
mov
sahf
add
xlat
mov
sbb
shr
es
out
push
sub
pop
cli
cmp
pop
pop
mov
pop
inc
add
movsb
mov
xlat
add
push
push
cmp
ja
sub
test
jg
mov
fdivrl
mov
fildll
mov
add
sub
add
incb
jne
lcall
iret
inc
ds
inc
or
cltd
push
cld
mov
cmp
jbe
cmp
sarb
mov
cld
or
test
push
mov
decl
and
sti
je
movzbl
add
sub
pop
movsb
nop
push
inc
negl
lcall
adc
ret
sub
or
imul
cs
rorb
push
mov
push
or
pop
testl
arpl
or
test
add
into
add
out
jo
sbbl
dec
dec
arpl
sete
add
xchg
ljmp
das
ljmp
repz
cmpb
jbe
cmpsl
jge
mov
lds
dec
sub
add
mov
push
sub
inc
lcall
dec
das
pop
cltd
ret
lods
add
mov
in
insl
or
jne
sarb
fdiv
lods
aaa
aaa
divb
push
ret
mov
shl
icebp
out
mov
cmp
push
pop
mov
in
ljmp
adc
shll
add
cli
mov
ljmp
mov
sub
xor
push
outsb
cltd
loopne
repnz
add
sub
das
rorb
xor
sarb
jo
pushl
mov
mull
outsl
inc
mov
pop
fbld
inc
ljmp
xor
mov
enter
and
sub
fwait
lods
cmpsb
adc
mov
aas
lods
cmpl
insb
and
mov
pop
fadd
faddp
add
add
sub
add
rorl
fbld
inc
fdivr
mov
lods
inc
out
push
sub
rcrl
loope
jg
je
neg
ret
ffree
ffree
ffree
pop
aad
pop
mov
sub
add
mov
and
or
loopne
psrad
pop
daa
pop
into
lods
loope
cli
out
add
push
mov
xchg
and
andb
xor
icebp
add
push
pop
outsl
push
jns
xchg
cltd
aam
mov
cmp
test
mov
clc
sub
idivb
mov
mov
jl
dec
xchg
mov
sti
mov
mov
test
adcb
test
mov
andb
jb
mull
inc
popa
insb
jae
xor
in
pop
push
movb
repnz
jl
inc
js
xor
lret
cmp
mov
sub
inc
sbb
mov
push
dec
jecxz
push
sbb
xlat
es
test
les
cltd
push
xchg
js
add
fldt
fdiv
sti
mov
sbb
xchg
add
dec
ss
inc
pushl
xchg
addr16
inc
test
dec
ret
jbe
fiadds
xchg
pop
add
xchg
bound
pop
aaa
rolb
hlt
adc
out
xchg
aaa
jmp
and
rcl
mov
adc
xor
in
sub
lahf
push
shl
or
mov
pop
cmc
lds
incb
ja
sub
pop
das
hlt
jne
ja
hlt
adcb
xchg
nop
pop
imulb
dec
mov
js
insb
push
mov
stc
adc
dec
cld
inc
jae
pop
mov
sbb
pop
orb
fadds
fbld
notl
movsl
test
and
jle
dec
pop
bound
popf
cld
add
mov
xor
sub
je
fsts
lods
mov
ljmp
imul
jmp
pop
cmpsl
push
aas
push
call
mov
lea
sub
pushl
xor
cmp
cmp
inc
ds
enter
in
out
imul
dec
inc
cld
pop
jbe
lods
add
sbb
fwait
bound
dec
dec
inc
jno
aas
fs
jle
mov
negb
pop
imul
movsl
imul
xlat
pop
mov
fs
jne
dec
dec
push
jg
xor
fstps
cmpb
jne
bswap
jecxz
push
mov
lock
pop
dec
dec
cmpb
jne
push
or
mov
rorl
cmpb
inc
subl
divb
fildl
inc
pop
movsb
add
add
jae
dec
cmp
pop
or
cmp
add
outsb
or
inc
push
loopne
in
imul
pop
xchg
pop
pop
cmp
mov
lea
mov
jne,pn
out
xchg
insb
es
jmp
jg
cld
ss
push
pushf
push
push
push
pop
test
scas
add
gs
cmp
popa
jg
cmp
sub
push
ret
in
xchg
stos
adc
dec
push
outsl
hlt
int
in
je
cld
imull
adc
add
and
dec
shufps
adc
call
hlt
cmp
mov
add
adc
jl
sub
ret
inc
sbb
int
xor
mov
mov
into
push
inc
shll
cmc
or
jmp
popa
lret
dec
sub
push
cs
sub
mov
mov
sbb
xchg
sub
lret
push
sbb
sub
pop
ret
aas
ljmp
pop
aad
jae
nop
xchg
jmp
and
rorb
mov
outsl
inc
rcl
and
push
mov
cmp
cli
ljmp
add
int3
mov
or
mov
lcall
in
shlb
push
xchg
inc
cmp
sbb
inc
sahf
xchg
icebp
aam
std
fdivrs
rorl
cs
mov
pop
sub
jbe
sbb
pop
incl
lods
aam
mov
push
sbb
call
jne
lea
xchg
enter
mov
adc
rolb
cmp
xchg
subb
mov
insb
adc
test
lds
fcom
outsl
rorb
add
or
adc
mov
sbb
scas
push
pusha
jae
add
cmp
add
mov
and
push
and
mov
add
inc
xchg
sub
mov
or
add
sbb
shll
call
pop
lahf
jg
push
das
shrb
xchg
push
pop
adcb
jo
mov
je
clc
adc
into
push
mov
push
or
jne
mov
xchg
mov
mov
xchg
jmp
cmp
call
sub
in
scas
jne
subb
pop
or
hlt
and
lods
jmp
adc
sub
out
cmp
sub
sub
push
jnp
call
outsb
dec
pop
mov
shl
testb
out
or
lret
sarl
xchg
movsb
xchg
pop
mov
rep
sbb
cmpl
sub
pop
out
mov
sub
jmp
sub
jb
jmp
ja
imul
mov
add
and
jp
call
pop
pop
sub
sub
decl
cld
or
lret
sbb
xchg
ret
cmpsb
cltd
mov
and
mov
test
push
pop
cmpl
mov
lcall
jle
lahf
xlat
or
push
mov
outsl
mull
das
pop
sbbb
inc
or
fstpl
push
shr
scas
jb
jbe
fsubrs
rcll
lea
fsubl
dec
sbb
cmpsb
jb
jmp
cmc
xchg
sub
sbb
cmpsw
jge
push
dec
jmp
push
pop
outsb
in
cld
xchg
adc
hlt
mov
push
stos
sbb
outsb
mov
stc
push
jne
shrb
sbb
shlb
mov
aad
fiadds
cltd
std
jne
jmp
xor
inc
inc
lods
lods
and
inc
gs
jmp
mov
in
sub
cld
aas
and
or
call
pop
js
mov
add
dec
mov
cmp
ja
pushf
cltd
xchg
js
scas
jmp
push
mov
jecxz
dec
mov
cltd
cmp
stos
jo
ds
leave
sbb
lods
out
dec
mov
fldt
sub
mov
outsb
mov
inc
je
mov
mov
inc
je
mov
inc
je
mov
dec
je
dec
lock
mull
mov
ret
mov
push
jne
xchg
adc
mov
cmp
clc
es
pop
mov
xchg
mov
mov
dec
roll
jb
fs
xchg
ret
xor
hlt
hlt
push
les
mov
ljmp
and
xor
or
das
das
test
outsb
lods
cltd
push
or
and
mov
pop
out
shrb
jns
mov
pop
xchg
clc
out
dec
loop
fsubs
dec
and
mov
mov
sub
in
dec
cld
lea
pop
popa
xchg
xchg
jbe
dec
jl
pop
adc
add
jl
jmp
add
sbb
add
xchg
dec
cmp
mov
xchg
jne
pop
xlat
call
jge
pop
pop
sub
cmpsl
xchg
pop
push
xor
stos
or
push
dec
pushw
add
push
mov
notl
scas
cli
push
or
jo
loopne
xchg
push
mov
mov
test
add
mov
inc
dec
shlb
jg
or
jg
dec
mov
stos
cmp
jne
pop
pop
lahf
aam
add
xor
cs
sti
mov
js
hlt
mov
repnz
pushf
mov
aas
or
jne
lods
jge
jno
xor
pop
mov
xchg
shll
adc
jb
aaa
cmp
xor
repnz
je
jge
jle
push
sub
xor
fsubr
jg
jae
lea
mov
add
sub
adc
je
add
or
mov
add
jmp
pop
jb
sbb
in
pop
sahf
sbb
call
imul
jmp
xor
push
dec
jmp
leave
movsb
push
test
inc
dec
inc
dec
lods
or
fcomi
lret
jge,pt
push
adc
xchg
popa
dec
aam
mov
stc
std
jl
pop
aaa
lods
ss
dec
stos
cmpb
xor
push
outsl
sbb
stos
jmp
jmp
mov
loop
movlps
scas
jne
mov
inc
stos
pop
pop
inc
clc
dec
popf
mov
test
mov
cli
hlt
mov
inc
sub
jbe
sub
pop
insl
cmp
add
leave
mov
mov
mov
fwait
sub
cmp
insl
in
cli
adc
mov
mov
sub
push
fcomip
add
dec
pop
div
mov
inc
test
dec
je
dec
jne
sbb
sbb
stos
xor
jg
shr
adc
sti
add
je
inc
shrb
jne
pop
pop
test
jns
lock
or
repnz
scas
pop
add
lea
fdivp
sarb
je
inc
cmp
inc
inc
pop
add
orb
or
mov
subl
add
or
cmp
shlb
inc
add
and
and
adc
jbe
out
and
sub
inc
sub
sub
sub
sbb
and
sub
scas
sub
or
pop
out
repz
sub
xor
andl
fiadds
addb
jbe
jmp
jne
adc
es
and
adc
testl
sbb
or
xor
sub
xchg
imul
je
adc
or
cmp
inc
call
out
fabs
push
mov
cli
call
fldt
fstsw
fwait
mov
imull
testb
je
fidivl
jne
lea
mov
out
clc
fwait
mov
nop
shr
and
add
push
add
movsl
cmp
jge
jns
pushl
mov
or
or
cmpb
mov
and
dec
js
decb
and
pop
data16
fisttpll
or
leave
jmp
mov
add
faddl
je
notb
adc
ljmp
push
out
fisubl
pop
inc
xchg
push
adc
jae
fcoml
push
je
rorl
test
fisubs
sbb
pop
pusha
xchg
pop
or
or
jge
adc
jl
mov
push
inc
sub
mov
loopne
jae
dec
add
fbld
in
insl
or
jecxz
mov
lea
cmp
mov
pop
xchg
pop
xor
mov
sbb
xor
sub
pushf
and
jne
dec
cs
ja
jmp
mov
add
aas
and
out
push
inc
or
ljmp
enter
xor
pop
into
cmpb
divl
pop
jmp
rclb
mov
sbb
jecxz
shl
inc
pop
or
hlt
mov
push
jns
mov
fnclex
fldcw
cmpsb
ja
mov
dec
hlt
ds
lods
or
js
punpckhwd
or
pusha
jne
inc
sbb
cmp
icebp
je
and
fistpll
sub
pop
add
jg
push
clc
xlat
cwtl
jne
mov
sahf
add
movsl
ret
or
push
mov
pop
jg
xor
add
aas
jmp
fstpt
insb
test
add
adc
add
negl
inc
test
insl
and
push
int
cmp
jg
add
test
or
in
jbe
fimull
inc
jmp
aaa
add
negb
es
push
push
inc
imul
push
cmp
arpl
aaa
add
out
inc
xchg
not
shl
cvttps2pi
ret
sbb
rcll
pop
mov
sbb
push
pop
fists
add
or
ja
mov
add
sbb
push
xchg
cmpl
pop
xor
imul
test
add
push
fldl
inc
js
sub
test
fwait
pop
pop
adc
mov
xor
fwait
sahf
insl
adc
push
adc
adc
inc
or
or
mov
insl
xor
or
cmp
inc
stc
inc
fstpt
jae
movzwl
data16
add
shrb
mov
jmp
ret
call
adc
xchg
fildl
xor
lea
fwait
cmpsb
shlb
lret
movsb
dec
movsb
adc
mov
xor
std
sub
jne
add
fdivrs
hlt
lea
mov
das
sub
stc
popa
or
lret
push
cmp
idivl
and
call
pop
xchg
enter
loopne
mov
push
inc
fldcw
xor
div
test
jne
sbb
nop
add
xchg
add
mov
movsb
and
das
mov
sbb
in
pop
jp
pushf
or
lea
add
fdivrl
maskmovq
testl
ss
ja
outsl
adc
ja
push
sti
jno
js
adc
sarb
inc
ja
sbb
cmp
sub
inc
movsl
jmp
in
dec
jne
xor
dec
mov
dec
cltd
idiv
imul
lock
popf
add
sub
ds
pop
insl
ds
add
pop
ret
or
xor
jp
hlt
shll
in
push
daa
nop
cmp
in
sub
leave
jg
fidivl
dec
call
or
in
add
imul
inc
mov
addb
add
addl
inc
adc
jge
shl
lock
ja
call
data16
decw
shlb
imul
cmp
imul
fcoms
mov
mov
lcall
shrb
in
loopne
cmp
xchg
adc
dec
pop
cmp
sbb
mov
push
in
data16
or
dec
dec
push
imul
pushf
cmp
jb
jno
add
sbb
inc
jmp
inc
cmp
push
test
shrb
add
hlt
mov
mov
mov
xchg
nop
cmp
pop
xor
adc
cmp
pop
xchg
cld
mov
or
push
push
xchg
inc
test
lcall
sub
mov
xor
iret
sbb
lea
leave
and
or
cwtl
xor
hlt
push
and
cmp
adc
aas
inc
mov
mov
dec
push
jle
insb
popf
inc
sub
add
or
test
pop
mov
addb
xchg
add
popl
lahf
push
test
sub
push
adc
adc
push
sti
je
cwtl
cld
inc
fildl
jo
inc
hlt
xchg
in
add
xchg
sub
jo
add
jg
mov
lea
or
lahf
repnz
inc
in
add
outsl
jecxz
ds
lret
mov
in
jge
call
out
nop
pop
jecxz
scas
in
or
jne
pop
lea
mov
leave
movl
cltd
mov
jno
cmp
loopne
jns
adc
add
out
push
pop
mov
push
orb
call
mov
aam
insb
fldl
rclb
push
mov
push
dec
jne
outsb
pop
add
inc
and
or
add
xchg
dec
mov
lods
enter
cmpl
push
fdivs
sub
adc
pop
cli
jne
push
add
dec
shr
adc
pop
inc
in
arpl
mov
adc
jo
and
push
mov
test
insl
xor
in
punpcklwd
rcrl
addr16
xlat
in
xchg
sbb
scas
lret
jbe
in
out
xchg
and
hlt
jg
aad
in
lock
nop
loope
pop
enter
xor
xchg
shr
in
jne
dec
cmpb
jne
push
adc
loope
mov
dec
lret
dec
push
adc
jl
shr
jns
pop
add
or
cld
inc
add
or
mov
push
arpl
pop
pop
roll
enter
add
mov
lret
pop
incl
in
add
js
adc
sub
lock
or
jae
jmp
insb
cmc
dec
xor
movsb
adc
xchg
fidivs
negl
and
and
add
sub
jae
adc
and
dec
jne
jge
dec
lcall
pop
loop
cmpsb
faddp
lds
xchg
xchg
inc
pushl
push
or
or
out
or
or
add
add
add
or
xchg
add
ds
test
xchg
mov
jns
xchg
gs
seta
jge
loope
mov
jge
pop
inc
xchg
cli
or
and
icebp
push
clc
orb
icebp
mov
in
sub
xor
testl
adc
dec
push
lea
out
stc
dec
push
and
fcomps
test
scas
aam
xchg
aam
jp
js
dec
push
into
sbb
xor
xor
test
test
in
sbb
leave
mov
lcall
jg
aad
add
mov
sub
pop
xchg
mov
push
leave
sub
mov
das
xchg
call
inc
sub
inc
cmp
test
and
adc
pop
inc
movzbl
dec
ffree
inc
sarl
js
sub
je
jge
mov
popa
sbb
bound
pop
je
jmp
lods
hlt
js
nop
mov
fdiv
inc
mov
cwtl
sub
mov
pop
push
jns
mov
clc
jmp
jmp
in
xor
mov
pushl
cmp
cmovo
dec
push
jge
shl
aaa
pop
push
cmp
mov
mov
jmp
push
sbb
or
or
or
jle
mov
cmpsb
enter
adc
stos
lea
mov
xor
out
add
repnz
xchg
pushf
lret
sub
out
add
dec
pop
jmp
sub
ljmp
ds
jbe
aas
pop
addl
ror
adc
xchg
cmp
push
and
nop
add
lea
cmp
jae
fsts
out
jmp
and
xchg
push
sub
add
lret
and
cld
movb
push
push
push
or
out
jmp
mov
sbb
xchg
or
or
or
imul
mov
fldl
sbb
cmpb
mov
pop
pop
imul
test
jmp
leave
jmp
or
adc
sub
or
sti
in
pushf
xorb
je
dec
enter
and
leave
mov
sub
dec
or
push
jmp
sbb
out
data16
xchg
xchg
dec
cwtl
aam
mov
jmp
jnp
sahf
cli
inc
dec
das
push
dec
add
dec
adc
cmp
pminsw
clc
pop
xchg
add
dec
push
sub
divl
mov
ret
ja
or
mov
xchg
cmp
fstpl
imul
outsl
or
mov
je
sub
inc
pop
scas
pop
pop
out
adc
cmpl
in
mov
call
hlt
adc
jb
shll
pop
sbb
cltd
mov
jo
push
pop
adc
xor
xchg
and
or
push
pop
mov
ljmp
lock
adcl
inc
xor
sub
jae
jmp
adc
scas
movsl
int
sbb
test
sub
cmpsb
mov
xchg
xchg
sbb
xor
in
roll
dec
idivl
outsb
dec
movsl
enter
mov
leave
nop
arpl
dec
cmp
or
arpl
sbb
movsl
push
inc
les
jp
add
mov
sahf
sbb
add
lcall
cmpsl
push
mov
lock
mov
fwait
pop
in
pop
jo
test
in
cmp
mov
arpl
pop
and
notrack
sub
je
dec
pop
pop
add
sub
je
adc
fsubrp
sbb
push
push
and
push
inc
mov
sbb
fadd
pop
xor
aad
fdiv
sarl
mov
fs
mov
add
loop
jnp
jl
pop
pop
pop
and
or
push
push
mov
sbb
jmp
dec
aam
or
sahf
cmp
mov
fs
movsl
in
mov
push
jmp
in
movsl
mov
ret
push
xlat
cli
pop
call
add
jne
cmp
jg
cmp
daa
jne
mov
call
sub
add
add
shlb
out
jg
cmpl
jle
adc
pop
cld
jmp
in
cld
out
cmp
popf
gs
psubusb
inc
dec
roll
loopne
push
xor
jecxz
ret
sahf
and
add
xor
test
lock
add
xchg
lahf
mov
inc
imul
push
xorl
ds
loopne
jne
mov
lods
idivb
pop
jle
or
and
shl
lea
sbbl
outsb
xlat
add
jge
fdivr
out
xor
mov
cmp
jmp
hlt
lods
mov
test
in
push
jle
outsb
and
cmpsl
popf
outsb
sub
cmpsl
jb
cmp
into
add
fidivs
nop
lock
imulb
jb
test
cmp
push
lods
lock
push
test
jmp
cmp
shll
arpl
ss
repnz
lret
hlt
sbb
jmp
inc
mov
push
out
sub
push
mov
bnd
jge
add
fisttps
fsubrs
in
sbb
push
fstps
fmull
out
mov
cmp
cmpb
jle
and
fs
add
xchg
mov
add
or
add
ja
push
fldenv
sbb
or
add
leave
mov
popa
sahf
je
call
sbb
cmpsl
or
adc
xor
mov
or
in
and
sarl
add
scas
stos
pop
stos
fildl
fldcw
pop
fcmovnu
das
fbstp
fcoms
das
xor
xchg
repnz
out
jo
loop
dec
jp
add
stc
push
sub
out
sahf
fdivrs
mov
ret
mov
add
notl
or
clc
lret
push
dec
fisttpll
pop
dec
adc
shlb
out
inc
xchg
jmp
push
xchg
faddl
pop
add
pop
push
mov
and
int3
lcall
or
leave
int
mov
orl
xor
add
pop
inc
sbb
orl
jg
fs
add
push
test
test
mov
adc
or
mov
jne
add
add
rcll
push
add
pop
push
shlb
mov
movsl
int
flds
ficoml
push
cmp
nop
enter
into
and
into
dec
leave
mov
sub
and
insl
mov
in
adc
pop
lods
call
clc
inc
roll
dec
mov
movsb
sbb
outsl
push
cmp
ret
jne
dec
pop
insb
xorb
fsubs
fst
fcomps
mov
fsubrl
or
fs
loopne
jle
fstp
push
xor
lods
mov
push
jae
aas
add
sbb
mov
sub
jb
and
fmull
or
xchg
mov
mov
lret
fwait
das
leave
int
rcrl
mov
test
dec
pushf
mov
add
movsl
jne
pop
sbb
lock
das
mov
cltd
jb
xchg
pop
fprem
push
push
shll
addl
addb
adc
add
pop
lods
xor
movsl
inc
fiaddl
add
clc
mov
popa
dec
pop
imul
imul
testl
cmp
push
sbb
rolb
mov
jb
or
or
sub
and
pop
or
std
push
xchg
pop
pop
mov
movsb
stc
inc
lock
lock
push
xchg
movl
sar
jne
roll
sbb
pop
add
pop
push
xchg
push
test
fwait
outsl
xor
shlb
in
dec
call
fsubs
in
or
xchg
inc
sbbb
fldl
add
shll
fldt
jecxz
notb
push
jl
je
xchg
cmp
jo
mov
lea
into
ret
add
fwait
js
and
popa
movsb
cmp
addl
push
fnclex
inc
pop
mov
pop
out
mov
cmp
stos
test
addr16
cmp
mov
sti
aam
and
mov
popa
or
loopne
rolb
push
push
mov
loope
cmp
dec
adc
clc
cli
inc
mov
and
mov
push
push
cld
xor
or
adc
or
xor
xchg
shrb
andl
cmp
mov
add
or
adc
or
add
js
dec
or
repz
ljmp
mov
sub
je
sub
je
scas
lea
push
ret
dec
lcall
cltd
jle
mov
in
xchg
iret
cs
sbb
dec
cs
lods
cmp
ss
clc
push
icebp
pop
lock
mov
mov
jg
mov
fdivl
or
fisttpll
dec
mov
in
adc
jmp
mov
and
pslld
add
jmp
mov
pusha
xchg
cmp
jmp
push
xor
repnz
dec
jmp
in
in
loope
loopne
jle
jo
cmc
cmpsb
in
nop
or
mov
mov
incl
add
sub
xlat
scas
icebp
and
pop
sub
push
add
sti
out
cld
iret
scas
sbb
test
cld
call
cmpl
sbb
ljmp
rorb
dec
movsb
and
inc
out
add
fdivl
xchg
cmp
jmp
sub
es
mov
xor
lods
mov
inc
push
out
ficomps
mov
test
mov
sub
clc
scas
adc
mov
sub
inc
sbb
fnstsw
rolb
pop
cmpb
jl
sti
je,pn
mov
cld
jne
cltd
test
addb
and
je
xchg
add
and
pop
sbb
test
cs
loopne
cmp
out
or
hlt
push
mov
add
imul
enter
sub
pop
and
das
sbb
or
cwtl
xchg
add
push
sub
pop
dec
mov
push
xor
sbbb
adc
imul
rcrl
push
or
sbb
add
negl
dec
mov
loope
lahf
int
dec
mov
cmp
aas
cwtl
push
xor
adc
mov
adc
orb
inc
vmovntps
push
sbb
or
add
sahf
add
lea
stc
cld
test
inc
adc
rorb
sbbl
lcall
in
les
js
fstl
fsincos
andb
mov
rorl
jecxz
adc
ja
sub
sbb
or
arpl
and
xchg
clc
fwait
std
aaa
sbbl
jae
pop
ret
push
mov
push
or
arpl
clc
xchg
inc
mov
call
ljmp
cmp
jg
cmp
or
jne
sbb
and
nop
cwtd
mov
sbb
inc
movb
dec
mov
test
mov
pop
addr16
scas
subb
push
icebp
add
out
pop
push
sar
lret
push
adc
ljmp
mov
jo
or
sub
nop
and
push
or
arpl
cmp
mov
cmp
or
pop
test
lcall
cmp
mov
aaa
loopne
cld
loope
stc
and
popf
xchg
out
add
add
push
addb
push
or
xor
lock
clc
push
in
push
and
push
jb
mov
cwtl
insl
lock
inc
or
out
loopne
push
push
add
jge
inc
add
out
int3
repnz
add
test
xorb
xor
xchg
cli
roll
in
aas
int3
mov
into
pusha
clc
insl
jo
imul
xchg
mov
leave
pslld
cmp
je
jmp
xor
inc
lahf
lret
xchg
lret
xor
and
cmpsb
std
and
add
push
pop
or
or
mov
xor
inc
adc
mov
cmpsl
xor
add
mov
or
test
jnp
scas
call
pop
cld
cmpl
mov
dec
mov
add
push
loopne
sbb
mov
cmpsb
lock
push
or
mov
test
mov
xlat
jl
or
loopne
loopne
lcall
decb
sbb
mov
clc
sbb
and
mov
stc
jae
or
xchg
dec
sbb
mov
ror
add
out
or
test
mov
lea
js
imul
cs
repnz
mov
xchg
inc
mov
dec
push
imul
mov
mov
nop
test
mov
iret
cmp
or
sub
jne
lods
or
sbb
and
loop
push
addr16
aaa
int
cltd
das
xlat
hlt
add
mov
nop
scas
lock
inc
addr16
pop
pusha
call
xchg
addb
clc
or
cmp
pop
mov
insb
push
cmp
mov
adcl
cmp
dec
adc
adc
insb
mov
in
insl
xchg
mov
xchg
repz
scas
mov
test
add
push
adc
scas
outsl
mov
sbb
add
mov
adc
mov
and
js
xchg
nop
nop
adc
inc
aaa
xor
xor
fidivs
adc
xchg
orl
mov
mov
cltd
push
pusha
insb
dec
xchg
add
cmp
in
push
sub
mov
jl
mov
add
push
push
jmp
mov
cmpb
or
mov
adc
int3
mov
sbb
cmp
pusha
cwtl
cmp
dec
jle
hlt
outsl
hlt
jmp
mov
dec
jmp
dec
mov
and
aas
or
sar
shlb
add
inc
cmp
mov
add
adc
add
xchg
mov
ret
daa
add
cmp
mov
enter
sbb
out
xor
cmp
daa
dec
shll
adc
jle
adc
dec
adc
or
inc
and
mov
mov
pop
inc
cmp
jl
rorl
aaa
or
mov
jge
inc
daa
lock
xchg
aaa
inc
cmp
cmpl
imul
stc
or
hlt
jge
jl
push
cmp
jne
sbb
js
sbb
push
add
lods
adc
popl
pop
xor
jno
adc
aaa
in
push
xchg
jnp,pt
addl
cmp
add
insl
jg
add
popf
daa
or
or
mov
sarl
xchg
rolb
sbb
es
mov
mov
jns
push
adc
ret
sub
cmp
test
add
aas
in
inc
ja
mov
and
vmptrst
or
pop
or
cltd
pop
rorb
mov
and
adc
mov
enter
push
mov
mov
xor
xor
adc
inc
mov
mov
sub
pop
pop
ja
sbb
mov
aas
and
aad
sub
mov
jl
jecxz
xor
pop
jnp
inc
adc
jmp
mov
sbbb
addb
mov
and
inc
sahf
jge
sub
pop
sub
loopne
mov
pop
xor
cmpb
rclb
xchg
dec
and
aas
and
hlt
xchg
cwtl
stos
lock
push
add
inc
jb
jno
adc
mov
je
pusha
xchg
or
int3
push
pop
ret
jnp
sbb
clc
xor
add
sbb
mov
mov
lds
clc
and
sarb
bnd
inc
jo
cmp
pop
jns
sub
stos
push
push
cmpsb
hlt
adc
sbb
ret
pop
inc
test
sub
push
adc
lahf
add
daa
mov
sub
and
nop
rorl
popf
in
pop
add
fstps
pop
cmp
nop
push
addr16
hlt
test
stc
dec
pushf
imul
and
mov
pop
mov
ret
xchg
stos
mov
das
xor
dec
das
jge
in
push
mov
or
cmpsl
cmp
pop
inc
shl
decl
aaa
push
mov
sub
jb
inc
mov
inc
or
fmull
lret
jne
dec
fstl
jl
decb
jne
cld
clc
arpl
daa
clc
pop
ja
ljmp
setb
cmpsl
imul
mov
cmp
popf
cmpsl
push
add
add
sbb
dec
data16
enter
xor
adc
dec
xor
call
test
loopne
popa
mov
cmpsl
ja
in
jne
adc
add
mov
test
pop
incl
call
mov
xchg
ret
mov
mov
mov
outsl
popa
mov
mov
xchg
js
add
cmp
es
retw
daa
jno
mov
mov
mov
ja
cmpw
subl
or
sbb
or
jmp
ljmp
xchg
shlb
pop
fisubrl
add
outsl
sti
add
cmp
xor
dec
xor
stc
push
adc
test
movsb
pop
subps
jo
xlat
jb
pop
movsb
xor
mov
cs
xchg
call
mov
add
inc
sub
inc
in
call
or
jge
sub
stc
cs
jle
cs
outsb
nop
add
sbb
subb
mov
sbb
nop
pop
fdivl
mov
and
loopne
test
pop
mov
adc
fdivrs
ds
mov
jle
fwait
in
mov
nop
int3
inc
dec
push
nop
dec
les
int3
mov
or
nop
xchg
enter
insb
dec
test
inc
sarb
sbb
dec
fwait
les
ret
adc
in
mov
clc
mov
clc
pushl
cld
push
hlt
mov
cmp
loopne
pop
or
in
pushf
lock
mov
movsl
jbe
aam
inc
jle
mov
or
clts
insl
das
fs
add
scas
insl
add
fs
pop
fwait
dec
fistpl
insl
pop
jo
mov
push
sbb
and
pop
sbb
push
aas
cmp
pop
push
cmp
add
daa
add
in
or
mov
mov
aaa
inc
xchg
add
mov
rcrb
pushf
pusha
es
cli
cmp
add
nop
test
mov
pushf
adc
rolb
mov
mov
aad
and
loope
mov
rolb
stos
jecxz
fcoml
adc
iret
mov
or
push
mov
daa
mov
inc
or
data16
loopne
fsub
imul
std
pop
push
lods
int3
inc
push
lcall
mov
pop
or
sbb
adcl
jb
gs
jo
inc
pop
pusha
enter
gs
lock
out
add
mov
xchg
inc
add
inc
and
pop
push
add
out
mov
lahf
sahf
ljmp
inc
add
lods
nop
rclb
stos
xchg
pop
notb
jne
mov
loop
and
jne
jle
and
stos
daa
push
mov
lock
decb
and
fisubs
xor
lock
xor
dec
lea
scas
pop
pop
push
mov
ret
inc
xchg
or
xor
push
mov
jge
fwait
inc
adc
push
inc
gs
movsb
out
rcrl
xor
dec
mov
movl
jmp
je
lea
shrl
popf
dec
or
enter
add
push
push
sbb
jo
mov
push
or
push
sub
ds
cltd
ds
cmp
cltd
stos
scas
mov
sti
sbb
sbb
inc
add
or
test
cmc
inc
imul
xlat
add
mov
sbb
jge
mov
mov
pop
leave
mov
mov
outsl
sbb
imul
push
mov
fstps
cld
mov
mov
insl
mov
xchg
push
imul
int
pop
cwtl
mov
daa
mov
cmp
dec
adc
sbb
in
mov
aaa
insb
pop
adc
sahf
loope
pop
call
cmp
test
mov
int3
sub
and
mov
or
push
ret
fimull
xchg
ret
les
out
sbb
push
jmp
adc
jo
jge
test
jge
out
call
cmp
pop
fisubs
outsl
test
pusha
mov
sub
rcrb
xchg
ret
incl
fsubl
nop
mov
jb
push
or
decl
cmpl
or
inc
jo
stc
ret
dec
mov
mov
or
sbb
add
mov
xor
xchg
inc
or
add
lahf
mov
and
inc
dec
cmp
mov
or
or
pop
add
loope
std
daa
lods
sbb
pusha
sbb
in
push
ror
jg
dec
or
push
int
leave
dec
in
inc
xor
rorb
cs
ror
cmp
push
adc
adc
lods
lods
adc
pop
xor
inc
pushf
outsb
lret
push
js
sbb
popf
data16
clc
mov
repz
loopne,pn
fsubs
jns
rorb
enter
loopne
jns
repnz
jns
repz
test
jle
cwtl
push
movsb
nop
iret
repz
sub
adc
jae
repz
jo
push
jnp
pusha
push
mov
pop
mov
push
xor
adc
push
idivl
scas
sub
xchg
dec
pop
sbb
movsb
add
int
jl
or
out
in
pop
ds
test
or
push
cmp
pop
cld
mov
out
sub
cmp
out
in
in
push
js
jo
out
popf
in
xor
pushf
xor
mov
fsub
scas
aam
jnp
shrl
sti
pop
cmpsb
int3
xchg
ja
outsb
pop
enter
pop
sbb
in
mov
mov
loopne
jbe
mov
dec
sahf
xchg
ja
push
mov
leave
jae
mov
pushf
pop
cwtl
repnz
mov
adc
iret
leave
jae
int3
mov
jns
add
xor
pop
push
pop
jle
and
xchg
and
dec
add
xchg
adc
mov
cld
mov
pop
shrb
dec
sarl
cmpl
adc
pop
pop
cmp
jl
mov
mov
fadd
fimuls
cmpsl
jge
sub
pop
repnz
rol
or
sbb
add
adc
sbb
js
mov
shlb
sbbl
shrl
add
mov
mov
mov
cmpb
push
in
mov
mov
mov
lahf
lahf
xor
pop
jb
call
push
pop
enter
fadd
cwtl
push
imul
aam
jecxz
sarb
push
mov
add
jmp
adc
ljmp
xlat
and
gs
mov
pop
ret
dec
out
fcoms
rolb
mov
enter
loope
mov
call
pop
orb
subl
outsb
iret
ffreep
xchg
sbb
enter
pop
inc
into
xlat
and
js
mov
leave
mov
xchg
leave
adcl
das
inc
pop
add
lretw
xchg
add
insl
dec
push
imul
out
xor
sub
push
sarl
data16
cmpb
cmc
sbb
adc
mov
std
or
cmp
clc
xlat
loopne
popa
xchg
ret
leave
push
dec
sbb
pop
lret
adc
push
dec
add
adc
add
pop
mov
repnz
sbb
fninit
pop
lret
sbb
cmpsb
adc
cltd
inc
push
orb
add
int3
leave
xchg
or
mov
mov
or
addr16
push
adc
in
inc
int3
stos
nop
daa
daa
daa
pop
mov
mov
mov
jns
lret
test
mov
stos
xchg
add
ret
push
push
adc
push
push
mov
or
mov
mov
cmp
mov
push
cs
les
int3
lods
aam
dec
xor
and
mov
xor
and
mov
xchg
dec
hlt
sar
inc
dec
xor
add
enter
dec
sub
pop
adc
sub
xchg
dec
sahf
xchg
aam
leave
xor
mov
inc
fmull
push
dec
sub
xchg
dec
sub
push
lret
test
fcoms
push
outsl
insb
gs
jne
addr16
cs
inc
push
adc
mov
mov
movq
fs
jne
lret
das
pop
das
dec
jne
inc
imul
in
fldcw
pop
outsb
dec
jb
pop
outsl
jb
out
pop
stc
inc
insl
jo
inc
jb
insl
push
je
pop
push
insl
lahf
nop
and
inc
popa
je
and
in
fwait
jns
inc
outsl
outsl
insb
inc
jae
push
jb
adc
inc
jns
pop
nop
push
roll
test
fs
cmp
fimuls
sahf
aaa
aad
and
negl
sti
pop
in
adc
in
repnz
cld
iret
sbb
orb
sarb
sbbb
push
add
das
in
hlt
push
lock
lahf
out
sahf
jl
nop
int3
js
repz
and
push
enter
les
or
iret
aas
es
push
adc
dec
dec
stos
mov
nop
aam
pop
xor
js
or
rolb
shll
sarl
and
adc
mov
mov
add
test
inc
es
adc
fildl
add
cs
js
pop
inc
sti
mov
addr16
fadd
pop
testl
adc
pushf
dec
jbe
inc
roll
xchg
xchg
dec
adc
push
push
and
in
movsb
movsb
sbb
inc
mov
jns
jb
mov
int
pop
aam
or
popa
add
inc
jb
sbb
scas
inc
cs
je
adc
mov
insl
jo
xchg
add
leave
fcomp
cmp
aad
test
outsb
mov
jbe
idivb
jg
mov
movl
pusha
mov
arpl
xor
mov
inc
jge
xchg
pop
pop
adc
mov
outsl
in
xor
pop
jmp
jl
lods
pop
xchg
lahf
lret
leave
loope
xchg
mov
mov
pop
adc
sub
fsubrs
in
cmpsb
popa
and
pop
in
add
cmp
add
cmp
sub
daa
nop
add
xchg
xlat
or
nop
adc
xlat
rolb
xlat
jne
shlb
aad
fimull
cmp
aaa
and
sbb
pop
dec
es
sub
test
leave
mov
mov
dec
je
sbb
frstor
nop
es
shll
std
add
pcmpgtb
nop
rolb
pop
test
mov
sbb
clc
pop
stos
hlt
mov
dec
hlt
dec
hlt
shl
mov
xor
pop
shr
mov
addr16
sub
call
mov
out
mov
mov
jb
jae
loopne
nop
addr16
jecxz
adc
repnz
enter
sti
int3
or
add
pusha
cmp
rol
xor
fmul
nop
inc
shr
pop
mov
cmp
xchg
ficoml
rclb
mov
movsl
mov
shlb
in
push
popf
rclb
jmp
add
push
jp
je
adc
inc
or
adc
inc
fs
into
ficoml
scas
pop
aad
or
pmullw
mov
add
roll
roll
lods
mov
pushf
setg
dec
push
xor
mov
int3
adc
test
inc
ljmp
or
pushf
xchg
jne
dec
pop
flds
pop
ret
push
jmp
cmp
insl
adc
clc
lret
add
or
lret
ficomps
mov
cld
test
dec
or
inc
mov
or
push
add
andb
sub
jge
adc
push
sysexit
aam
ret
outsb
test
aam
mov
fists
adc
xchg
lea
add
and
push
lcall
popf
or
cmpl
imul
lea
clc
addb
add
movsb
fcomi
clc
mov
hlt
jge
xchg
pop
pop
adcl
inc
pop
and
mov
pop
xlat
sahf
jmp
inc
mov
cmpsl
dec
or
jge
cli
in
repz
dec
pop
lret
mov
sub
in
test
jae
sub
pop
push
insl
sub
lret
add
mov
cld
mov
roll
mov
pushf
testb
pusha
adc
or
sub
add
xor
inc
iret
jmp
sub
or
or
lods
xor
or
repnz
inc
and
add
add
adc
mov
adc
mov
pop
jb
mov
fcomps
jnp
fsubl
push
adc
int
mov
lea
adc
fs
ss
rorl
mov
call
or
mov
xchg
call
call
stc
or
or
push
pusha
xlat
mov
call
add
cwtl
pop
fs
cmp
and
mov
push
cmp
nop
mov
loopne
jo
cmp
jnp
dec
scas
pushf
enter
dec
dec
movsb
jmp
push
jge
jb
add
xchg
mov
adc
push
out
add
xchg
pusha
inc
daa
cmp
lahf
ss
decl
push
cmp
jns
mov
add
fldl2t
shll
dec
mov
incl
rcrl
mov
insb
xor
lcall
in
inc
add
ficoml
imul
adc
sbb
call
call
jbe
addr16
cmp
je
xchg
dec
roll
jne
push
xor
mov
inc
add
push
or
hlt
and
call
push
xor
jecxz
mov
and
sbb
mov
mov
cmc
dec
sbbl
sbb
leave
pop
dec
lds
nop
jns
add
popf
andb
sti
push
mov
mov
mov
and
inc
sbb
jo
cli
adc
cld
in
fstpl
ss
mov
es
lock
push
push
add
in
or
lock
fwait
xor
std
mov
in
lods
add
or
push
mov
inc
mov
andl
jo
jge
lea
clc
outsl
nop
jle
xor
aaa
jg
aaa
adcb
ss
addr16
pop
pop
test
cmp
ss
cltd
xor
adc
add
jecxz
sarl
ds
test
and
or
sarb
sbb
and
or
adc
or
xor
fistl
push
loope
push
mov
ret
xchg
push
inc
inc
sub
mov
test
cmp
inc
call
mov
cmp
femms
mov
pop
bound
cmpsb
push
inc
nop
xlat
xor
icebp
call
decl
mov
cmp
ja
in
stos
adc
mov
xchg
mov
aaa
insl
repnz
pop
push
add
daa
pushf
out
iret
ja
push
scas
leave
out
pop
mov
cmpb
sahf
cwtl
ror
mov
add
pop
mov
cs
mov
push
mov
xor
add
clc
push
rolb
fldcw
fisttpl
enter
in
js
inc
sbbb
pop
mov
add
sub
rcr
dec
repz
call
xor
fadds
cmp
dec
push
loopne
js
pop
ja
dec
xor
fmull
mov
loope
loopne
aaa
arpl
mov
aam
mov
repnz
rcl
shlb
mov
int3
cmp
jne
sar
mov
jge
or
enter
push
clc
ljmp
dec
je
jmp
xor
jb
and
mov
pop
or
test
out
jns
test
ljmp
in
rcrl
fs
idivb
out
out
pop
jns
out
sahf
imul
daa
jecxz
popf
cmpsl
stc
push
add
sbb
cmp
mov
add
cwtl
mov
mov
jecxz
flds
jae
mov
jb
mov
dec
xchg
fnsave
leave
mov
lods
shrl
mov
and
into
test
popf
test
and
movsb
test
dec
mov
arpl
xor
arpl
cwtl
jmp
arpl
aaa
xchg
dec
jbe
movl
in
sbb
dec
dec
ret
cmp
jb
sub
cmp
out
sub
call
test
add
ficoml
mov
xor
mov
enter
stos
jmp
jmp
cmp
mov
push
enter
xchg
jmp
jl
in
out
xor
inc
mov
ljmp
adc
inc
mov
aad
sbb
test
ljmp
push
push
push
and
dec
loopne
loopne
ljmp
ljmp
nop
aas
cmpsb
in
and
sahf
xlat
pop
sbb
jge
shl
lahf
out
sti
sbb
cmp
stc
sahf
out
in
inc
outsb
push
push
in
daa
loope
mov
rcr
in
in
fwait
xor
or
pop
dec
js
rorb
xor
cmp
les
test
cmp
insl
xor
lcall
and
stc
pusha
insl
in
loopne
mov
inc
fsubl
fdivl
add
dec
cwtl
fsubs
fdivs
and
mov
lods
pop
cmp
or
int
adcb
fdivr
insb
int3
filds
fnstenv
outsl
and
jbe
out
pop
in
in
or
sarl
iret
repz
insb
mov
xor
push
push
adc
and
xor
dec
out
and
imul
xor
xchg
shlb
xor
mov
aaa
and
inc
int3
xorl
mov
add
cmp
orl
popf
add
adc
test
test
les
es
movsb
and
mov
mov
jno
js
ret
pop
aaa
mov
cmp
xchg
popf
xchg
cmp
dec
and
xor
jbe
push
nop
jmp
inc
mov
mov
add
cmp
or
sbb
rol
adc
into
in
nop
orb
in
rorb
sbb
shll
jmp
pop
addb
sysenter
push
jg
xlat
inc
insl
jo
jns
add
mov
cwtl
addl
pop
inc
inc
addr16
and
leave
mov
add
inc
outsl
jne
adcl
outsb
arpl
insl
cmp
cltd
mov
xorl
fwait
popf
push
pop
xorl
sbb
add
outsb
pop
adc
or
leave
aas
push
outsb
imul
inc
arpl
dec
rol
scas
and
inc
iret
push
mov
mov
inc
jns
add
or
fs
popa
pusha
das
or
add
jb
ret
clc
js
fcompl
adc
or
pop
or
xchg
clc
call
push
xorb
push
and
loop
inc
sti
shrl
hlt
mov
dec
ds
push
or
jmp
lea
xchg
cmp
xchg
sbb
cld
stc
pushf
icebp
add
lcall
dec
push
fnsave
les
popa
add
xor
inc
mov
or
and
test
cld
cmp
xchg
push
or
sub
aad
repnz
std
dec
cmpsb
cmpsb
and
in
orb
adc
mov
std
sarb
mov
gs
pop
mov
or
cmp
add
adc
cs
xrelease
xor
rcl
inc
in
jno
icebp
dec
mov
push
rclb
ret
aad
push
insb
pop
inc
push
cmp
fmuls
xor
pop
add
mov
cmp
cli
jle
test
pushl
fdivl
jo
popa
xchg
dec
and
out
mov
mov
jg
xor
mov
lds
adc
push
and
jg
dec
xlat
sbb
cmp
xchg
jg
push
push
push
js
jge
fsubrl
cld
cmp
je
clc
adc
dec
and
xchg
add
pop
dec
jb
ss
int3
jle
mov
cmp
inc
dec
sarb
push
add
add
addb
mov
mov
xchg
int
push
or
adc
ret
xchg
pop
and
pop
pop
orl
cmpsb
std
mov
nop
adc
xor
inc
add
inc
rolb
or
push
mov
sbb
repz
cmc
subb
mov
int
sbb
jle
sbb
xchg
subb
add
jge
mov
or
popa
daa
lods
add
push
ret
cmp
jnp
lret
cmp
aaa
adc
movsb
bswap
call
pop
pop
iret
pop
dec
add
loopne
jp
nop
enter
pop
or
dec
push
rcl
test
mov
and
jns
dec
inc
sub
xchg
sti
cmp
outsb
pop
rol
setg
inc
mov
sbbb
fnstenv
loope
mulb
test
ret
cmc
sbb
negl
pop
jne
push
jo
or
ljmp
repz
rclb
or
mov
inc
testl
loope
sahf
enter
inc
mov
mov
mov
mov
push
fiaddl
xor
fnstsw
shrb
cmp
sbb
loopne
push
jns
inc
mov
jecxz
in
adc
push
push
aaa
sbb
insb
shll
mul
in
repnz
stos
shrd
scas
nop
xchg
in
in
xchg
xchg
xchg
xchg
push
mov
jmp
clc
or
leave
inc
cmp
nop
clc
pop
pushf
adc
cmp
out
xchg
jne
dec
das
add
out
push
stc
cmp
mov
xchg
xchg
mov
adc
pusha
cmp
scas
inc
inc
pop
xchg
inc
ja
stc
inc
movsb
stc
nop
pop
sbb
cmpb
insl
btsl
jg
cli
aaa
add
mov
and
imul
pusha
pusha
mov
xorl
or
xor
mov
dec
jo
outsb
mov
sti
daa
out
xor
jb
or
xchg
insb
insb
enter
stos
and
add
sarl
daa
les
add
iret
fwait
mov
cld
out
sbb
sbb
or
imul
enter
fimull
out
mov
aas
cmpsb
xor
sti
xchg
sub
fdivs
jne
arpl
add
std
ja
std
sbb
mov
adc
inc
or
mov
sub
jecxz
push
data16
test
cmp
push
pop
or
or
imul
dec
hlt
lock
xchg
out
and
mov
imulb
scas
js
fidivrl
pop
pop
push
pushw
add
sub
add
clts
inc
push
push
add
jne
fnsave
push
sbb
push
pop
jae
pop
imul
pop
xchg
movl
pop
sbb
pop
inc
insb
popa
adc
pop
xchg
outsl
xor
pop
add
sti
fs
int3
popf
jbe
push
mov
scas
rorb
enter
cmp
push
int
shr
dec
push
js
add
or
enter
cmovno
adc
cwtl
sub
mov
xorb
xor
std
dec
mov
cmovns
inc
fs
jo
fnsave
add
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
les
add
push
enter
add
cmp
adc
call
ss
mov
or
pcmpeqb
int
int3
push
push
mov
jnp
repz
sbb
data16
imulb
test
js
push
adcb
jl
mov
mov
push
push
sbb
cmp
mov
inc
sbb
lock
scas
pop
sbb
ljmp
xchg
mov
or
pop
add
aaa
pop
add
out
and
pop
lock
and
xor
call
xor
mov
clc
and
ss
mov
push
enter
mov
sbb
jl
sbb
push
pop
clc
es
les
pop
push
and
out
fwait
bound
xchg
push
out
inc
push
popa
mov
push
add
push
mov
push
pshufw
add
inc
dec
ja
jg
enter
pop
andb
es
push
pavgb
add
cld
or
inc
fnstsw
mulb
push
je
and
xor
inc
es
or
enter
inc
pop
add
je
push
leave
pop
leave
xchg
xor
inc
inc
cmp
in
int3
out
xchg
mov
sbb
jo
inc
test
adc
fsts
dec
add
and
out
push
enter
int3
cmp
div
sub
add
fs
repz
jl
adc
aas
push
push
dec
fs
out
or
push
sbb
inc
das
jmp
ret
test
dec
nop
loopne
adc
aas
adc
and
fcomip
dec
or
addr16
jb
jne
scas
push
push
add
inc
xchg
sbb
mov
push
push
dec
imul
std
inc
add
or
inc
or
adc
pusha
add
or
xchg
in
fmull
aam
test
dec
cmp
stc
ret
cmp
push
push
push
add
ljmp
in
mov
push
inc
clc
negl
ds
cmp
xrelease
test
into
lods
mov
sarb
into
fwait
sti
adc
imulb
or
cli
and
inc
pop
arpl
add
nop
add
dec
dec
xor
push
sub
sub
inc
inc
test
daa
icebp
mov
ret
clc
lock
dec
fmuls
mov
lar
das
cmc
jo
fldl
loopne
in
movb
insl
negl
adc
outsl
repz
idivl
push
jl
inc
xor
sbb
ret
inc
xlat
out
testl
push
mov
push
daa
jns
int3
aaa
add
adc
pop
dec
and
xchg
ret
mov
sbb
rol
jle
testb
mov
and
add
insb
flds
fisttpl
lret
clc
dec
pop
add
rorb
or
cmp
push
int3
in
or
xor
add
call
mov
xchg
sub
mov
mov
shll
or
or
or
inc
adc
pop
fldlg2
mov
clc
int3
push
enter
add
xchg
jg
loop
add
dec
and
pop
faddp
dec
ret
bound
incl
cwtl
sbb
cld
mov
jmp
ret
push
xchg
inc
sub
es
and
sbb
sub
add
fs
adc
inc
sti
xchg
loope
js
adc
or
sub
and
nop
add
or
xlat
push
pop
pushl
cmp
insl
scas
adc
mov
add
xor
andb
leave
inc
inc
dec
insl
push
loopne
aad
inc
addb
call
fcmovb
popa
xor
cwtl
or
scas
adcb
mov
into
and
dec
cmpl
adc
lock
sub
mov
shl
lea
or
pop
sbb
add
arpl
push
mov
rorb
xor
sbb
popf
add
sar
pop
jmp
adc
pop
jb
or
jp
arpl
dec
jl
into
xchg
les
ud2
inc
rorl
imul
mov
cli
inc
pop
adc
leave
rol
fiaddl
data16
and
adc
sbbl
mov
xchg
paddsb
add
addl
add
adc
push
mov
cli
repnz
leave
cld
rcl
daa
xor
mov
adc
adc
push
mov
ds
lahf
test
cmp
shl
mov
add
rcrb
inc
aas
es
add
jns
mov
sbb
fsub
pusha
xchg
jle
sbb
inc
cwtl
xor
xchg
lods
jmp
flds
sub
jg
dec
adc
rcll
lock
sbb
adcb
mov
xchg
push
out
and
add
test
std
mov
pop
repnz
push
or
push
add
add
push
sub
sbb
or
push
add
sbbb
mov
lods
incl
and
add
xlat
insb
inc
jne
test
stc
aam
push
dec
add
add
into
or
in
inc
inc
mov
mov
add
das
aaa
femms
and
arpl
and
mov
push
push
ret
adc
outsl
add
and
inc
mov
ljmp
fs
inc
or
dec
push
cmovno
shlb
sbb
fidivs
xor
xchg
inc
and
xor
and
and
sub
lods
or
test
hlt
sarb
jae
sbbb
loop
or
setno
add
pop
add
insb
add
xchg
das
cld
mov
inc
fnstcw
xor
scas
outsb
mov
imul
and
sbb
adcb
dec
push
or
pop
pop
or
cmpsb
pushl
js
cmp
jne
pusha
add
or
push
mov
jne
pusha
iret
and
jmp
and
inc
aam
enter
ret
nop
pop
pop
ret
push
clc
test
enter
es
add
aas
push
adc
out
das
fs
mov
xchg
adc
fmuls
pop
sbb
pusha
int
xchg
pusha
mov
testl
cmp
mov
rol
and
adc
sub
cmpsl
mov
je
adc
mov
lock
sub
sub
call
mov
sbb
stos
out
fmulp
mov
cmp
dec
jne
inc
mov
lahf
add
xor
adc
hlt
push
and
add
jmp
add
imul
cld
mov
les
mov
mov
push
mov
adc
sub
push
push
add
or
pop
js
pop
jno
mov
lds
cmp
pop
cmpxchg
or
aam
lret
xor
inc
dec
imul
scas
jo
sub
ja
in
pop
divl
dec
clc
roll
repz
adc
pop
and
mov
xor
add
push
mov
sub
sbb
push
sbb
into
inc
xor
shrl
cmp
pop
rcrl
sub
cmp
mov
lock
daa
jmp
cmp
call
xor
cmp
jne
fdivrs
js
cld
lock
pop
in
push
in
test
icebp
push
or
insb
jne
inc
shll
add
in
inc
in
mov
sbb
xlat
add
in
and
in
xor
je
and
xor
ret
mov
xor
jnp
pop
mov
lock
cmpb
sub
cld
adc
enter
aad
xchg
pop
and
rcr
ficoms
and
sub
push
cmovno
xor
movsb
lock
or
stos
add
xchg
mov
int3
mov
mov
int
sub
or
lret
les
push
push
add
xchg
push
sets
and
push
cmpsl
or
test
loop
push
sub
add
stos
jne
xor
xor
inc
cmp
mov
inc
sbb
push
cmp
push
push
push
push
push
push
push
cwtl
dec
jb
sub
fwait
pop
call
stos
lcall
mov
adc
xchg
sbb
cmp
out
add
ficoms
loopne
add
xchg
mov
adc
cld
or
lea
add
hlt
insb
stos
pushf
add
cld
adc
rorb
cmp
xlat
fcoml
jae
pop
add
or
and
repnz
sbb
jl
lahf
ds
push
and
call
in
rol
daa
test
shr
jne
jecxz
add
movsl
ret
lahf
sti
and
jl
sbb
call
test
fstpl
jne
xchg
dec
sbb
and
lock
ljmp
pop
stos
out
dec
sbb
inc
xor
popf
xor
jmp
je
and
push
or
pop
dec
movsb
lods
ret
dec
push
or
adc
js
aaa
jle
xor
mov
add
cwtl
xlat
add
das
mov
insb
mov
sbb
ret
add
bound
pop
clc
add
insl
add
sbb
mov
call
sub
lea
xlat
std
ret
push
xchg
or
out
scas
nop
jne
mov
push
sub
xlat
xor
pop
adc
popa
add
js
pop
leave
and
mov
pop
dec
push
add
enter
sbb
movsb
cmp
xchg
arpl
push
mov
loop
xor
loope
adc
dec
push
jnp
fisttps
out
jl
loop
jmp
push
pusha
addl
mov
out
push
lods
add
aad
sbb
sub
lds
sbb
mov
test
dec
sbb
mov
push
leave
add
pop
and
sbb
sub
lock
cmc
sbb
out
sbb
push
test
and
sbb
mov
fndisi(8087
or
xchg
cwtl
insl
adc
repz
xor
cmp
xchg
inc
or
ret
js
sbb
decl
inc
sbb
push
and
sbb
inc
jmp
fadd
mov
mov
idivb
or
add
sbb
jno
sub
push
xchg
and
movsl
fldcw
jne
or
add
and
sub
jecxz
leave
dec
sbb
gs
cmp
pop
pushf
arpl
sbb
arpl
push
in
hlt
sub
out
jno
lds
iret
testb
xor
cmpl
jle
cmp
jne
testb
orb
sbb
subb
mov
xor
sub
cmpsl
aad
nop
add
adc
mov
fildl
adc
dec
sub
xchg
sahf
mov
pop
sub
lret
ret
cmp
and
adc
xor
shlb
shr
lods
sub
and
and
sbb
imul
nop
inc
cmp
or
xchg
movb
mov
xchg
mov
movb
pop
imul
cmp
sub
enter
pop
and
and
sub
jmp
adc
push
fnstenv
mov
dec
adc
push
cltd
or
inc
ret
push
leave
je
popf
cmpb
nop
setbe
gs
add
les
fsubr
inc
adc
or
add
xorl
roll
imul
frstor
pop
cld
lock
dec
das
inc
fbld
sbb
negb
mov
dec
add
js
push
loopne
subb
fiaddl
dec
pusha
outsl
outsl
das
adc
je
jg
mov
jmp
dec
je
rorb
cwtl
shlb
out
add
and
mov
stos
sti
add
addl
pop
xor
jle
ret
sub
ja
xor
add
adc
adc
or
ret
aas
scas
add
enter
sbb
leave
fwait
das
repnz
movb
mov
mov
jp
adc
cmpsl
push
scas
push
lock
lcall
shll
mov
lock
add
pop
int
je
int3
xorl
or
mov
sub
sbb
inc
sbb
xor
dec
and
sbb
sbb
or
inc
fs
nop
and
out
xlat
push
jns
push
ficomps
xorl
jne
repz
sbb
push
sarl
in
jl
rorl
mov
popa
and
jne
add
adc
aam
rol
push
push
mov
or
and
nop
lret
jg
add
leave
fnstsw
inc
xchg
add
pop
xor
add
cmp
jne
mov
testb
inc
jge
sbb
jle
jnp
adc
sub
pop
adc
test
shrl
add
inc
dec
xor
lea
sbb
lea
add
ret
xchg
xchg
imul
pop
mov
or
rolb
jnp
lock
sub
add
xor
loopne
xor
cmpsl
and
cmp
dec
inc
loopne
pop
mov
mov
cmp
sbb
xchg
sbb
pop
pop
jbe
inc
rol
ret
push
repz
gs
insl
ret
jno
or
jae
fnsetpm(287
add
cmp
fidivl
mov
or
pop
daa
dec
clc
sub
sub
cmpl
xorb
add
add
clc
in
jbe
and
pop
mov
push
dec
xor
jecxz
add
ja
xchg
or
xchg
pop
pop
icebp
and
pop
add
lea
stc
lods
in
add
sub
out
mov
pop
loopne
daa
push
add
mov
fsubs
fsubr
or
xor
or
cmp
jne,pn
pop
xor
mov
dec
xor
data16
and
or
inc
pop
lea
cltd
push
push
mov
lock
add
dec
push
lret
jg
sbb
jo
cltd
push
lcall
sub
sub
adc
pop
cmp
xor
fcoms
mov
sti
outsl
dec
cs
cs
mov
shll
push
and
in
rol
sbb
mov
or
jmp
adc
mov
xor
mov
or
dec
loope
inc
sti
add
add
jbe
or
sbb
out
dec
pop
and
jmp
sbb
test
cltd
cmp
insl
es
jbe
add
out
mull
lret
stc
push
jo
fisubl
mov
inc
jecxz
shrb
mov
mov
push
out
mov
or
jo
movl
mov
iret
inc
mov
fsubs
outsl
mov
push
jne
repnz
push
mov
and
cmp
sub
aad
popf
push
callw
lock
inc
inc
pop
sub
sbb
or
mov
sbb
and
or
push
and
faddl
add
in
sub
mov
fiaddl
jne
mov
pop
or
sub
aam
jnp
clc
lods
add
popf
xchg
punpckhdq
addb
pusha
push
xchg
pushf
xchg
cmpsb
jmp
in
add
mov
push
enter
arpl
rcrl
pop
enter
enter
enter
scas
mov
or
adc
inc
fmull
mov
roll
add
mov
and
mov
sbb
jo
push
jnp
sub
cmp
mov
adc
sub
test
movsb
cmp
push
aad
test
add
into
add
cmpb
std
mov
or
dec
sar
fnstcw
or
push
add
sbb
sub
sbb
pop
inc
sbb
add
sbb
xchg
dec
rcrb
test
jae
mov
ljmp
inc
aad
xor
pop
out
xchg
jbe
das
adc
jge
data16
sarb
mov
outsl
sbb
adc
push
jmp
pusha
or
mov
or
jmp
test
fs
je
push
fmull
inc
xchg
lock
mov
icebp
mov
bound
sbb
jmp
daa
test
xor
pop
pushf
sub
pop
sbb
jo
sub
rorl
pop
or
es
fdivl
ret
pop
xor
add
mov
sub
jnp
jle
or
add
pop
push
addb
dec
mov
jp
sub
inc
pop
aaa
ud2
dec
add
pop
enter
adc
push
stc
and
xadd
fldt
or
cmp
sbb
sbb
sbb
fadds
ficoml
mov
clc
inc
int
mov
push
shrb
adc
ret
mov
mov
mov
xchg
out
add
js
stos
outsl
dec
je
inc
andb
cmp
or
inc
enter
lds
mov
jno
sbb
and
cmp
es
adc
and
xor
inc
test
int
lahf
aam
dec
push
daa
sbb
outsb
jle
mov
pop
mov
sub
mov
push
mov
jb
push
sub
les
loop
add
mov
push
insb
mov
rcll
fdivs
pop
jg
stos
dec
rcr
decb
inc
adc
lock
aam
inc
add
mov
sbb
add
popa
mov
negl
ret
sub
insl
add
test
outsl
mov
repz
cmp
sbb
inc
or
and
repz
das
inc
push
enter
stos
jl,pn
jne
clc
and
loopne
gs
popa
jmp
outsl
call
sub
je
push
adc
pop
add
add
add
or
fwait
xchg
push
add
addr16
jp
and
sub
addr16
xor
je
sub
push
hlt
pop
iret
inc
xor
add
inc
lock
jmp
push
inc
aaa
int3
bound
or
ds
dec
cmpl
rorl
roll
lea
out
in
push
dec
xor
call
orl
cmp
mov
pop
lods
sub
xor
jbe
and
jnp
xchg
inc
add
mov
pop
or
sub
xor
fadd
xor
shll
or
scas
cmp
mov
jae
lea
xor
pop
mov
pop
stos
adc
xor
adc
mov
push
cld
push
push
and
inc
fsts
jns
ja
insb
jp
adcl
mov
int
insb
aad
xchg
pop
adc
and
xchg
pop
and
add
out
adc
or
pop
xchg
lcall
add
ja
pusha
adc
das
pop
push
adc
add
jmp
mov
fwait
nop
cmp
xchg
sbb
sub
pop
shrl
pop
das
movsb
js
jns
xor
inc
xor
pushf
jmp
xor
das
cmpsl
push
dec
pop
dec
je
adc
std
mov
adc
sub
jnp
pop
xor
sarl
add
mov
into
fwait
dec
or
dec
jmp
es
mov
lret
push
xchg
cltd
sub
add
add
dec
pop
pop
sbb
sub
adc
sbb
sbb
push
dec
clc
xchg
jne
insb
je
mov
cmp
stos
jl
mov
addr16
jae
mov
pop
jmp
sbb
sub
mov
xor
jg
mov
outsl
add
movsb
and
in
pop
mov
mov
mov
or
rorl
addr16
inc
enter
in
push
mov
invd
rcrb
loope
dec
aas
push
push
xor
add
cmp
test
shr
mov
addr16
or
cmp
scas
mov
mov
mov
shrb
rol
out
test
or
xor
mov
pop
cmp
nop
shld
sub
fs
insl
aaa
test
jge
dec
mov
inc
and
ljmp
repnz
cmpb
dec
fistl
sbbb
mov
stc
aaa
clc
inc
aam
mov
mov
and
pop
cmp
leave
ss
push
pop
stc
push
xchg
fwait
movsb
dec
dec
popa
sub
xchg
ret
lret
sub
jo
lret
scas
mov
aam
popa
lock
push
div
mov
daa
mov
and
ret
and
aad
add
inc
xchg
xchg
into
or
setns
fwait
pushf
popf
sahf
xchg
xchg
xchg
xchg
lahf
addb
addl
xchg
aaa
js
mov
cmpsl
js
add
push
inc
pop
inc
inc
ljmp
cmp
ds
cmova
enter
mulb
mov
sbb
adc
test
push
inc
sbb
dec
dec
dec
inc
es
add
xor
data16
gs
mov
adc
cmp
testb
push
imul
nop
rolb
sti
inc
xchg
loopne
add
push
fbld
stos
call
jns
xor
fcomip
xor
clc
xor
data16
enter
sbb
pusha
dec
je
arpl
adc
psrad
sub
push
push
sub
imul
inc
dec
cmp
or
add
inc
movsl
adc
fistps
cmpsb
pusha
cs
jo
outsl
sbb
push
inc
popa
jae
add
or
je
sbb
or
pusha
outsb
add
mov
cmpsb
pusha
loopne
fcmovb
test
iret
or
int
lea
iret
bswap
insl
inc
insb
push
out
push
push
push
dec
outsl
jo
je
push
inc
or
sbb
or
jae
mov
sbb
mov
cs
adc
xor
imull
or
jnp
add
adc
lret
adc
mov
add
jne
jl
inc
fimull
test
bound
pop
cs
add
dec
jl
jp
ss
or
push
mov
nop
iret
jl
adc
cs
inc
imul
out
pop
outsl
jb
jae
es
adc
pop
pop
push
inc
jp
fisubs
sbb
pop
adc
mov
push
andps
pop
xchg
or
mov
sbb
inc
xor
sub
push
or
out
imull
data16
test
and
clc
adc
fsubrs
nop
and
scas
mov
push
pop
ds
repnz
loopne
cmpsl
cmp
push
mov
push
pop
pushf
jb
out
adcl
cltd
mov
jo
pushf
imulb
and
push
pop
lds
addb
lods
aaa
add
mov
push
add
jmp
sub
aas
out
std
mov
imul
inc
nop
shrb
and
jae
pusha
push
scas
sti
jmp
in
jl
push
add
dec
repz
add
dec
cmp
xor
rclb
pushf
cmp
lahf
mov
test
jp
mov
sub
add
idivl
pop
sbb
lds
pop
xchg
add
orl
or
add
push
xlat
mov
rcll
xchg
add
add
mov
cmp
adc
aas
pop
ds
mov
add
je
data16
pop
rcrl
push
dec
sbb
pop
hlt
push
push
ret
insl
fstpl
lahf
pop
sbb
add
add
pop
adc
scas
and
jmp
pop
mov
sub
add
pusha
aas
scas
out
adc
pop
shrb
test
shlb
inc
popa
mov
jae
pop
sbb
push
lret
sbb
push
movsl
mov
jnp
xchg
add
or
push
int3
mov
push
js
or
or
gs
repnz
add
pop
mov
push
inc
shll
imul
sub
fcomps
sbb
xchg
ret
sbb
fs
sub
ret
jns
jnp
inc
stos
dec
push
push
and
or
mov
es
sbb
rorb
frstor
out
or
sbb
iret
mov
mov
push
add
lock
push
jb
je
jae
lods
je
shll
xchg
pop
hlt
jne
jne
neg
sahf
fnstcw
paddusb
pop
lock
mov
pop
adc
adc
popl
add
enter
push
es
mov
dec
insb
orb
sbb
and
iret
repz
mov
xchg
mov
push
test
or
cmpsl
loope
mov
inc
sub
cmpsl
cmpsl
pop
inc
push
jbe
hlt
jp
jnp
mov
dec
mov
add
or
jge
push
xor
je
sbb
pop
and
inc
xchg
hlt
push
in
das
dec
rorb
or
push
mov
push
push
les
dec
insl
popa
addr16
popf
mull
fiaddl
dec
ds
cwtl
rcrb
mov
sub
mov
ret
nop
movsb
out
cltd
fmuls
or
mov
sub
sub
sahf
in
cmpb
inc
push
rolb
xor
mov
rorb
cmpl
inc
jl
ds
sub
push
jle
inc
pop
xchg
cmp
shll
aam
mov
shlb
jle
dec
push
pop
and
pop
insl
inc
xchg
out
ret
test
inc
je
loop
scas
insb
nop
xchg
ds
imul
and
mov
scas
sbb
fwait
jbe
jae
xchg
fwait
jo
jl
xor
lahf
in
mov
pop
cmpsb
jp
stos
shrb
xchg
lock
into
data16
add
xchg
inc
pop
orl
pop
sbb
mov
int
rolb
mov
push
rolb
or
outsl
outsb
pop
sub
iret
lds
cwtl
pop
mov
dec
jb
push
cmp
insb
mov
mov
add
or
ds
xchg
add
sub
mov
push
in
rcrl
repnz
mov
mov
in
adc
push
sub
ja
dec
pop
sbb
imul
jmp
jl
je
pop
xchg
shl
addr16
ret
nop
adc
push
adc
mov
dec
adc
xchg
jne
popa
outsb
nop
ds
mov
xor
rol
xor
inc
dec
jne
mov
inc
or
mov
lods
je
mov
xchg
and
es
and
pop
jle
mov
push
jge
repz
cwtl
jle
mov
mov
clc
jmp
sarb
xchg
and
outsw
jecxz
fidivl
aad
repz
fcoms
out
rorl
sub
addr16
xor
test
sub
push
adc
add
mov
adc
pusha
pusha
mov
popf
xchg
sub
push
adc
mov
roll
or
decl
rorl
jns
movsb
jg
mov
shrl
mov
dec
dec
sub
decl
in
mov
sete
lret
xor
shll
cmp
push
les
sbb
add
inc
mov
cmp
mull
dec
lods
sbb
pop
and
js
rolb
jmp
mov
dec
test
dec
sahf
nop
outsb
outsl
or
xlat
cmp
adc
je
add
adc
bound
cmp
leave
adc
push
xor
mov
xlat
sbb
inc
add
jecxz
dec
adc
mov
movl
push
insl
jbe
outsl
and
mov
gs
pop
dec
insb
imul
dec
decb
jbe
add
jb
insb
gs
pusha
scas
sarb
popa
insb
pop
cs
lret
and
push
imul
cld
cmp
insl
gs
pop
gs
insb
outsl
ja
outsb
setbe
jne
and
imul
and
rcll
or
orl
add
xlat
push
lods
mov
dec
insl
inc
dec
mov
data16
push
arpl
and
rorb
das
cmovae
push
jo
push
pop
imul
adc
mov
push
adc
mov
inc
je
inc
aam
mov
push
xchg
dec
mov
inc
add
popf
mov
cld
pusha
xchg
push
gs
or
sub
push
ljmp
xchg
imul
out
in
dec
outsb
popa
inc
pop
or
add
andl
mulps
outsl
je
lock
sub
adc
repz
mov
aaa
adc
adc
add
or
outsw
inc
push
xor
pushw
jg
loop
loope
pop
outsb
jne
pop
add
mov
bswap
mov
das
lahf
dec
xor
push
or
push
arpl
add
inc
xor
shrl
push
mov
cmp
or
mov
dec
or
xchg
fsubrl
or
nop
xor
fwait
jmp
pop
ret
push
mov
mov
xor
adcl
or
push
or
cltd
push
jg
adc
pop
pop
testl
mov
sbb
dec
inc
push
push
inc
push
add
inc
inc
inc
push
dec
push
xor
notl
dec
inc
dec
dec
arpl
in
cmovge
push
adc
inc
push
dec
dec
push
shr
pusha
mov
shlb
mov
or
popa
out
inc
inc
mov
adc
xor
xor
adc
inc
dec
inc
and
testb
xor
inc
dec
mov
stc
sbb
dec
push
dec
dec
mov
imul
push
das
sbb
mov
and
inc
inc
dec
push
mov
dec
inc
dec
push
out
push
dec
pop
push
repz
push
push
push
dec
push
inc
scas
lods
jecxz
jns
inc
dec
push
mov
add
scas
pop
xor
adc
mov
pop
jo
cmp
pop
dec
or
mov
inc
movsb
sub
adc
add
fwait
test
lods
cmpl
xor
rcrl
or
call
mov
and
nop
jle
ds
push
inc
mov
out
push
dec
adc
in
xchg
sbb
int3
mov
addl
mov
cmp
je
jne
call
iret
mov
lret
cmc
xchg
loop
shl
outsb
sub
cmp
mov
inc
mov
cld
and
cli
out
cmp
in
fbld
insb
and
jmp
or
adc
push
sbb
bound
popa
or
pop
sbb
mov
mov
leave
inc
cwtl
sub
push
or
push
xor
cwtl
push
add
dec
and
out
or
sub
or
enter
inc
sbb
je
imul
pop
adc
cwtl
xor
mov
inc
aam
add
mov
mov
adc
addl
push
adc
pop
rolb
sbb
lea
insb
jmp
jo
xor
jle
sahf
test
fiaddl
push
fcomp
jno
pop
div
imul
or
fildl
jmp
or
dec
or
add
add
dec
inc
shll
push
loop
xor
inc
popf
inc
cmp
dec
xor
in
mov
push
stos
mov
outsl
mov
dec
sbb
test
and
cmp
sub
or
rorl
outsb
aam
imul
cmpsl
pop
stc
out
sti
push
sub
mov
push
out
mov
inc
mov
sbb
mov
xorl
push
push
sub
cmp
mov
out
fnsave
push
das
xchg
neg
push
dec
push
jg
jp
mov
mov
ja
mov
fsub
add
inc
pop
sub
aam
cli
or
sahf
aam
inc
outsb
inc
sbb
fcmovnb
scas
jge
or
arpl
loope
das
pop
sbb
push
jb
les
imul
movb
push
mov
add
out
int3
pushf
or
inc
mov
cmp
or
enter
scas
push
int3
mov
jns
cmp
jg
push
add
adc
fstl
add
shlb
jns
jg
and
repnz
push
int3
dec
push
and
lock
insb
mov
clc
pop
add
xchg
push
cmpsl
mov
or
ja
pop
fcos
xchg
pop
jne
adc
inc
sbb
mov
inc
or
push
inc
cmp
shlb
mov
das
in
or
pusha
add
mov
mov
das
sbb
in
leave
lock
loopne
mov
lcall
pusha
cwtl
das
push
pop
or
cmpsb
rcrb
inc
sarb
and
mov
test
in
dec
addr16
shlb
outsb
pop
xchg
pop
sub
adc
nop
repnz
sbb
ja
pop
or
adc
add
aaa
cltd
stos
pushf
dec
cwtl
addb
add
cs
xor
lock
xchg
pushf
pop
sbb
pop
aam
inc
xchg
jnp
mov
add
sub
and
jg
das
test
xor
push
shlb
scas
push
xor
and
jmp
addr16
inc
sub
je
push
adc
sti
dec
pushf
add
in
pop
hlt
lock
sbb
and
push
or
mov
sbb
push
or
orl
cmp
nop
dec
mov
xlat
add
cmc
inc
nop
cmp
inc
mov
into
aaa
ja
mov
movl
xchg
lret
pushf
inc
push
cmp
jns
nop
xchg
ds
mov
add
xor
and
sub
adc
mov
loop
insl
sub
stos
adc
cmpsb
pop
and
add
outsl
enter
dec
fimuls
pop
push
adc
sbb
shlb
mov
bound
ret
mov
sbb
clc
and
mov
xor
add
push
push
jno
enter
test
ds
pop
fsubs
es
aam
or
roll
adc
or
sahf
mov
cmpsb
scas
daa
xorl
aam
rclb
jne
dec
jl
loopne
pop
add
test
mov
or
dec
cmp
jg
outsb
add
adc
pop
xchg
sbb
adc
roll
mov
popa
sub
jl
lret
pop
in
mov
dec
test
cmp
lret
movsb
xchg
pop
divb
or
jbe
fwait
dec
pop
std
xchg
jae
ljmp
movsb
ds
and
mov
cmp
je
mov
out
push
push
movsl
movsb
mov
nop
inc
iret
cmpsb
or
mov
sar
orps
aas
outsb
es
xlat
sbb
dec
xlat
dec
mov
mov
sar
xorl
and
orb
dec
jl
adc
push
fdivr
jnp
mov
sub
mov
not
and
mov
jo
cmp
je
or
jmp
and
or
inc
inc
hlt
into
cwtl
mov
cld
in
pop
insl
push
add
dec
push
add
sbb
hlt
or
jb
dec
mov
push
and
or
and
pushf
cmp
subb
sbb
adc
jb
cmp
pop
fcoml
cmp
dec
inc
repz
jnp
push
and
and
dec
and
add
sbbl
movsl
mov
adc
dec
add
sbb
aaa
divb
test
ds
jb
jl
mov
mov
cmp
jl
adc
les
inc
int
xor
xorb
mov
inc
in
pushf
in
popa
inc
and
in
jns
inc
mov
sbb
mov
sbb
push
loope
ret
cmp
cmc
daa
adc
push
repz
inc
das
jmp
dec
sbb
inc
sub
dec
aaa
fs
enter
and
ljmp
in
add
xlat
sub
scas
push
mov
f2xm1
push
movsb
stc
inc
sbb
sub
bswap
push
push
push
inc
test
xor
add
add
pop
hlt
xor
clc
test
shr
add
in
inc
cmp
icebp
imul
pushf
pop
lock
cs
ja
movsl
test
push
cmp
sbb
test
dec
lock
push
int
cmp
out
pop
push
mov
push
mov
add
mov
adc
dec
inc
dec
fdivrl
mov
ret
add
movsb
icebp
add
push
rcrb
call
fistpll
ret
shl
mov
xor
not
and
and
sub
pop
shrl
inc
cwtl
aas
fdivrl
mov
sbb
hlt
data16
fdivrs
pushf
pop
imul
sub
test
sub
ret
adc
lahf
add
xor
push
test
cmp
pop
push
jne
mov
xor
int3
push
or
or
repz
in
sbb
and
sub
xchg
and
lcall
xor
mov
in
fistps
fsub
and
pop
cmp
sbb
push
push
mov
lock
mov
pop
es
cmpsl
imul
fdivl
cmp
sub
dec
jmp
jns
arpl
fisubrl
pop
pushf
dec
ds
mov
add
xchg
sbb
ficompl
into
filds
push
inc
daa
or
adc
adc
sbb
stos
popa
mov
mov
xor
dec
sbb
inc
out
adc
mov
xor
adc
call
add
subps
sbb
push
adc
insb
jnp
add
cltd
mov
jg
test
xor
repz
and
mov
mov
faddl
mov
mov
add
dec
sub
xlat
push
sbb
push
mov
test
movsl
mov
lcall
pop
pop
out
pop
cld
or
jne
cmpl
or
sub
dec
inc
mov
add
pusha
add
je
cmp
xchg
movl
push
lea
loopne
test
mov
and
fistpl
cmp
and
or
jmp
in
iret
and
jecxz
adc
jecxz
mov
mov
jmp
jmp
test
add
adc
cmpl
push
mov
adc
or
insl
push
dec
inc
lods
push
testb
adc
cmp
cs
and
sbb
sarl
add
ds
ds
mov
lahf
inc
movzwl
lea
lock
pop
push
cmp
pop
movsb
push
cs
jmp
addr16
shlb
testl
push
imul
and
push
cmpl
fdivl
clc
orb
rorb
cmp
jl
fists
dec
das
dec
js
sub
movzwl
lea
or
and
imul
out
push
inc
test
outsb
notb
add
adc
cmpb
pop
mov
pop
push
push
addr16
std
int3
or
jns
ss
adc
sarl
sbb
dec
jmp
es
xor
js
mov
dec
cmp
sarb
sar
cmp
movups
add
scas
or
add
outsl
sub
xchg
or
add
add
push
lahf
push
je
push
push
icebp
xor
ret
dec
mov
and
inc
push
movsl
mov
dec
repz
jmp
rol
das
clc
bound
push
push
mov
push
cmpsl
mov
pop
add
sub
enter
call
das
nop
dec
adc
aaa
and
js
arpl
mov
add
jl
popf
daa
and
inc
pop
loopne
lock
hlt
add
xchg
push
cmp
xor
das
or
out
and
or
add
push
jo
test
pop
cwtl
cmpsb
shll
movl
push
pmaxub
rorb
xor
jle
cld
push
xchg
cmp
push
push
stos
imul
lods
jb
and
cmp
sbb
outsl
arpl
nop
lret
inc
sub
rolb
inc
mov
int3
pop
add
add
subl
movzbl
sbb
mov
roll
imul
gs
jmp
test
jle
cmp
jl
mov
xchg
nop
sahf
mov
or
cmp
clc
jle
orl
xchg
lods
xor
stc
jno
jge
popa
dec
jo
cmp
jp
push
ss
cli
dec
mov
add
sbb
fwait
push
addr16
js
push
sbb
pop
lret
adc
push
fcompl
in
nop
out
fdivs
mov
xchg
sbb
and
imul
pushf
les
popf
rorb
cs
jmp
mov
aad
push
test
loope
and
mov
mov
sbb
ret
fisubrs
push
jg
or
jl
push
cmp
sbb
dec
mov
xchg
jne
je
lcall
inc
dec
jne
cmp
xchg
add
call
pop
mov
cli
dec
mov
or
outsl
or
inc
push
repnz
add
sub
add
int
sbb
aam
mov
insb
and
enter
dec
cmp
mov
cmpb
enter
and
mov
xchg
es
pushf
lahf
jne
sbb
je
sahf
lods
mov
push
fwait
add
aaa
rcrb
or
ret
push
rclb
jbe
pop
pop
les
leave
sbb
ficomps
in
arpl
push
or
cwtl
cmpsl
adc
push
inc
aaa
mov
cmp
push
xlat
cmp
in
aas
fcmovb
xchg
jno
adc
out
insb
ljmp
and
adc
cmp
mov
scas
std
push
lret
xor
addl
push
cmp
jl
cmp
test
pop
or
sub
push
and
push
push
mov
push
outsl
add
aas
shl
push
pop
push
inc
jl
mov
ss
mov
outsb
xor
sbb
or
jmp
xor
notl
and
add
inc
sub
lahf
movb
dec
or
jle
lock
jmp
sti
xlat
jbe
push
add
jae
jmp
adc
or
adc
insb
pop
scas
test
xor
inc
pop
insl
test
and
jle
cmp
lret
scas
xor
or
mov
xchg
loopne
dec
adc
in
inc
rcl
fadds
jo
mov
out
arpl
negb
stos
adc
pop
rolb
jmp
jo
or
or
add
add
bound
adc
inc
nop
pusha
inc
and
inc
xor
add
lock
loope
movsb
lcall
in
outsb
cwtl
lea
cs
cwtl
xor
ret
mov
and
popa
movb
mov
test
add
dec
repz
mov
popa
test
lods
jle
dec
incl
jle
or
lcall
std
push
flds
fstl
jge
in
test
add
enter
fisubs
push
push
in
hlt
int3
push
push
jmp
in
cltd
lcall
clc
dec
lcall
loopne
inc
sbb
xor
lock
cmp
dec
movsl
loopne
lds
pop
or
push
add
lock
nop
or
shrb
sahf
fldenv
enter
fidivl
or
mov
mov
or
lods
data16
mov
ss
cs
test
mov
mov
add
xchg
add
dec
hlt
sub
fsubr
sub
inc
in
iret
aad
push
aad
lret
mov
jle
aad
in
aad
fcoml
lcall
movsl
push
xorb
xor
clc
fmuls
scas
std
mov
inc
and
pusha
nop
outsb
adc
cmpsb
cmp
and
mov
in
stc
push
inc
inc
sbb
test
or
dec
dec
dec
adc
out
xor
sbb
pop
nop
out
xchg
ss
je
push
adc
iret
inc
add
fs
je
mov
or
ljmp
xor
ss
or
cmp
je
cmp
add
or
es
je
sub
jmp
repnz
int3
shll
cld
add
jns
jb
jne
and
inc
dec
hlt
cli
push
shl
mov
loope
push
xor
adc
or
sub
pop
xor
enter
sbb
bound
ret
or
inc
push
int
pop
inc
sahf
jne
cmp
push
jecxz
enter
or
mov
ret
xchg
sbb
push
jecxz
sbb
testb
push
mov
adc
push
test
mov
pop
push
lock
pop
out
cmpsl
pop
ret
sub
push
iret
adc
cmp
mov
cmp
rorb
ret
mov
pop
add
orl
adc
mov
mov
add
or
je
add
movb
or
push
jo
add
add
xchg
shrl
jne
in
mov
pop
push
push
cmp
and
scas
push
inc
jns
daa
mov
mov
sahf
in
add
inc
hlt
mov
daa
stc
repnz
cwtl
inc
lock
sbb
xchg
enter
and
movsb
in
push
mov
add
popw
jl
xchg
sbb
imul
xlat
sbb
pop
fcmovbe
scas
sbb
or
cld
jbe
fs
dec
jne
xchg
test
add
js
fisubrl
xchg
push
mov
push
shr
sbb
lock
in
sar
jg
mov
add
or
sbb
stos
das
stc
aam
sbb
add
add
pop
jmp
or
into
clc
daa
sub
inc
add
xor
add
and
push
xchg
dec
and
les
in
jno
jne
pop
mov
xor
mov
dec
adc
scas
mov
push
rclb
loopne
pop
sub
or
roll
mov
das
xchg
adc
sarl
or
ja
cmp
adc
ja
xchg
mov
mov
sbb
inc
push
es
sbb
cwtl
popf
cmp
pushl
mov
xlat
pop
jne
out
mov
mov
cld
mov
and
call
orl
into
or
dec
movsl
and
mov
pop
jl
lods
xchg
push
test
aas
or
push
dec
jnp
and
out
and
add
mov
push
sti
sbb
xchg
lret
ja
push
adc
sbb
sbb
fs
pop
adc
sbbl
inc
rcrl
sub
mov
loopne
xor
push
push
cwtl
sub
imul
gs
das
add
rcrb
xchg
in
inc
or
cmp
and
mov
add
sbb
push
stc
mov
aam
push
inc
push
mov
in
fstpt
andb
ret
cmp
enter
cmp
pushf
sbb
sub
loop
and
cmpw
dec
outsl
mov
outsl
sbb
cmpl
push
and
pop
pop
jno
mov
in
cmp
popf
lods
xchg
xchg
orb
mov
inc
dec
sbb
popf
jecxz
imul
lds
jmp
test
and
loop
cmpsl
xor
lea
jns
pusha
ss
push
add
jno
add
pop
mov
add
mov
jmp
les
dec
aaa
ds
das
dec
mov
ds
add
inc
xchg
inc
add
daa
push
iret
mov
loopne
dec
daa
fiadds
inc
or
cmp
cmp
fcompl
push
sbb
popf
add
dec
jo
int
mov
rolb
sbb
or
xor
cwtl
lahf
inc
cmp
nop
nop
iret
addr16
and
jg
pop
xor
mov
sbb
sbb
pushf
fcomps
mov
mov
add
pop
outsb
sti
mov
inc
sub
push
and
and
dec
hlt
sub
xor
jecxz
out
adc
push
pushl
loopne
jns
js
xchg
dec
adc
mov
mov
mov
jmp
rcr
xor
rep
jl
and
inc
pop
and
clc
inc
sbb
adc
adc
jno
mov
movsb
mov
push
push
es
insb
insb
dec
inc
mov
je
and
or
push
push
mov
dec
sub
sbb
mov
shl
or
stos
decl
adc
pusha
es
daa
sub
mov
xchg
test
push
and
jle
loopne
push
xchg
dec
inc
andb
pop
mov
sub
data16
xchg
jp
test
sub
jmp
imul
xor
xorl
push
adc
call
xor
adc
in
dec
jae
aam
sub
pop
daa
fdivr
dec
fldcw
bound
je
or
jmp
or
push
or
cmp
pop
stc
es
je
cmp
nop
jecxz
or
loop,pn
enter
movsb
pop
ss
add
xor
add
fistpll
or
sbb
dec
or
inc
jb
or
push
mov
js
jl
cmpsl
cmp
lea
push
adc
cmp
sub
aaa
fsubs
xor
pop
lods
stc
cmp
sbb
xchg
ss
xor
faddl
pop
add
lock
mov
ret
jmp
add
ret
loopne
bound
movsl
or
call
cwtl
push
in
rorb
jge
clc
dec
and
jge
and
inc
je
inc
or
cmp
test
pop
sub
test
xchg
ja
dec
enter
test
sti
enter
sub
mov
aam
mov
mov
mov
sbb
loopne
enter
mov
adc
or
push
out
cmp
test
mov
out
dec
rcrl
sub
pop
mov
cmp
lcall
data16
mov
inc
repnz
sahf
pushf
adc
subl
sar
hlt
dec
xchg
mov
or
cli
ljmp
jns
adc
mov
pop
rolb
push
sbbl
inc
xchg
out
cmp
out
dec
cwtl
lds
imul
ret
mov
hlt
lea
and
fs
xchg
js
in
ficompl
xchg
or
aam
adc
mov
std
rorb
lret
xchg
adc
xchg
push
movsl
add
imul
mov
xchg
cmpsb
push
movsl
pusha
into
mov
jo
std
pop
je
and
addb
data16
add
popf
call
push
sub
and
xchg
shlb
loope
addr16
add
shlb
cmp
mov
lds
pop
pushf
std
inc
js
fbstp
xor
and
aas
push
sbb
lock
push
pop
fs
out
jo
xchg
ja
lcall
pusha
mov
getsec
adc
or
pop
loope
jbe
incl
and
jo
je
daa
js
in
adc
inc
lcall
adc
or
sbb
movsb
xor
dec
push
call
call
aas
xor
lret
cmp
jle
nop
rolb
inc
shl
push
mov
inc
xchg
stc
inc
adc
test
add
orb
xor
dec
or
jmp
addb
fs
sti
jno
adc
pop
dec
test
push
adc
adc
jbe
sub
adc
sbb
les
xor
sbb
and
ss
cwtl
call
js
pop
cmpl
sub
in
xchg
hlt
mov
insl
cmpb
inc
xchg
pop
jg
add
xor
inc
dec
popf
ret
scas
adc
pop
add
test
mov
aas
lahf
mov
jo
sub
or
or
orb
addr16
pop
in
pop
xchg
sub
mov
je
inc
sub
add
popa
inc
mov
or
jmp
loope
popl
cmpb
js
jo
jecxz
repnz
xchg
or
lret
mov
sub
xor
jbe
sbb
or
jae
or
push
sub
push
enter
shlb
add
mov
mov
mov
mov
dec
cmpsl
jge
sub
lods
bound
rcll
and
lods
adc
push
mov
into
inc
xor
add
pop
fisttpl
int
mov
shrb
or
pop
add
outsl
mov
jo
pusha
call
cmp
mov
fadd
dec
lea
hlt
ds
add
or
nop
mov
popl
or
sub
movl
orl
filds
mov
add
lret
cmpsl
lods
mov
pop
cmp
sbb
xor
inc
dec
or
inc
mov
shrb
xor
mov
adcb
jbe
pop
push
push
icebp
add
subb
rcrl
add
aam
out
add
imul
leave
clc
dec
mov
and
dec
jp
mov
jl
push
sub
xchg
shrb
idivb
dec
cli
fimull
add
adc
push
sbb
add
mov
mov
xchg
pop
add
xor
dec
add
out
jmp
decl
jecxz
inc
sbb
adc
lds
xor
add
fwait
dec
test
popa
jno
jg
xchg
enter
sub
cld
or
adc
inc
dec
or
pop
shlb
pop
testb
xchg
hlt
adc
pop
xchg
and
aaa
xchg
hlt
icebp
jmp
jo
mov
push
xlat
add
adc
pusha
pop
jmp
lock
mov
adc
mov
lods
pusha
pop
pushf
pop
pusha
or
or
push
loope
sub
nop
xchg
xchg
pop
xchg
mov
inc
or
add
test
or
shl
scas
jbe
ja
ja
mov
and
push
popf
es
clc
or
dec
in
inc
insb
mov
aas
dec
or
cmp
je
mov
or
fildl
adc
xchg
adc
out
xchg
sti
mov
shll
sahf
popf
pop
mov
or
xchg
push
cmp
lcall
sbb
pop
push
jg
jecxz
dec
adc
lock
ret
xchg
cmpsb
es
je
sub
and
and
pop
loopne
imul
je
test
inc
fiaddl
jne
out
xor
aad
dec
adc
movl
push
or
loopne
dec
pop
mov
bnd
sbb
and
add
add
and
or
jg
and
das
icebp
xor
sbb
and
sbb
sbb
outsl
nop
aaa
add
add
sbb
add
lds
test
inc
js
push
test
loope
cmpb
insb
call
aad
ret
pop
push
mov
mov
ljmp
jae
nop
xchg
mov
inc
sbb
es
scas
dec
ja
or
out
or
ret
rorb
ja
fistps
adcb
or
add
repz
xchg
movl
mov
adc
es
loop
cs
shll
and
push
mov
dec
mov
out
push
fmull
jo
out
or
sbb
addr16
or
test
and
add
ss
fistpl
int3
sub
push
or
int
pop
sub
adc
add
cmpsb
fiaddl
roll
pop
xor
movsl
fdivrs
cmpsl
hlt
cmp
arpl
cld
pusha
stos
add
lret
in
nop
add
je
scas
pop
ret
adc
dec
adc
cmp
and
insl
mov
iret
pop
fistps
mov
push
mov
clc
adc
fsubl
daa
sub
push
adc
jbe
push
inc
or
mov
push
jne
in
nop
mov
addr16
jo
js
push
mov
test
shll
cmp
jne
or
or
jbe
xchg
test
loope
repnz
or
inc
je
insl
sub
sub
sub
sub
adc
nop
pop
jmp
fucom
mov
fistps
cwtl
sbb
xor
and
jge
imul
jg
xor
push
adc
imul
mov
add
lret
mov
cmp
movl
sbb
in
jb
hlt
cwtl
sub
insl
mov
xor
imul
push
inc
pop
pusha
pop
adc
mov
jnp
js
or
loopne
lea
jmp
push
adc
add
push
push
mov
loope
xchg
loopne
adc
sbb
loopne
dec
arpl
xor
mov
decl
call
dec
add
stc
push
inc
xchg
mov
mov
jno
out
cmp
push
push
mov
adc
loope
ret
andl
pop
ret
sub
xchg
loopne
dec
cs
add
add
iret
ss
or
iret
out
outsl
add
sbb
or
sti
pop
nop
sub
xor
aas
sahf
mov
push
adc
dec
xchg
xor
inc
or
xor
or
inc
daa
fistpl
sbb
push
out
nop
dec
mov
sub
shlb
xlat
stos
mov
bswap
mov
mov
cld
cmp
loopne
ds
adc
cmpsl
sahf
in
out
mov
movb
lock
mov
leave
hlt
mov
lcall
movb
pop
test
add
into
out
sbbb
sbb
push
unpcklps
popf
cwtl
call
das
test
lods
xchg
lock
or
rclb
lods
imul
shrl
fcomip
cmpb
push
xchg
nop
inc
setle
sub
xchg
in
popa
popa
out
add
rorl
or
aaa
pop
mov
add
inc
mov
inc
sbb
nop
push
shlb
cmp
pushf
mov
cmpb
inc
imul
push
xchg
in
inc
sub
mov
pop
in
test
dec
js
sub
dec
add
shrl
and
pushf
jo
sbb
pop
lods
jmp
adc
mov
sti
sub
imul
test
pusha
mov
in
sbb
cmp
sub
jecxz
sub
clc
or
jge
and
sub
push
daa
fisttps
insl
pop
sbb
rcll
pop
mov
pop
scas
scas
push
cmpsb
ffree
fnstsw
arpl
popf
xor
mov
push
ljmp
sub
xchg
cmpsl
and
sub
inc
jo
ss
pop
jo
jmp
lea
cld
adc
loopne
sbb
in
jo
pop
lods
call
add
pop
or
clc
movb
fldlg2
dec
inc
mov
dec
mov
adc
and
call
imul
sbb
pushf
push
cld
or
and
push
xor
or
and
fldt
jg
movzwl
push
dec
sub
scas
sarl
ret
lods
loope
repz
lds
sbb
cmp
loope
pcmpeqd
dec
jmp
popa
xchg
add
mov
push
mov
imul
add
xchg
or
fadd
daa
mov
stc
std
dec
push
dec
xor
call
data16
sub
dec
xchg
fwait
jns
or
inc
leave
incl
dec
shlb
pop
dec
sbb
mov
add
rcr
mov
mov
sbb
pop
mov
pushf
mov
sbb
adc
das
adc
mov
jmp
mov
inc
or
rol
adc
loopne
add
adc
push
movsb
pop
fsub
sub
jmp
cmpb
mov
inc
mov
pop
pop
sbb
push
lret
mov
xchg
imul
sub
lret
or
mov
jne
mov
sub
mov
call
push
imul
sub
push
hlt
sbb
aas
aas
or
jle
sub
pop
ljmp
jae
adc
movl
aad
dec
out
add
insl
push
adc
cli
mov
loopne
fnsave
push
adc
pop
sbb
or
add
or
push
mov
inc
sub
in
clc
rclb
lahf
or
push
mov
adc
mov
or
or
xchg
lret
hlt
adc
mov
inc
pop
or
nop
mov
add
or
movsl
outsl
mov
push
sbb
stc
adc
ljmp
fsubl
dec
je
sub
je
sub
mov
mov
inc
or
je
or
je
jmp
adc
test
ret
dec
loop
xor
lods
sub
fstl
lock
in
push
jmp
mov
subl
xchg
mov
jmp
mov
or
bound
sub
xchg
xor
mov
fists
jge
jl
mov
bound
hlt
decl
stos
mov
data16
or
pop
mov
aas
xor
in
mov
out
add
mov
loope,pt
push
pop
mov
cmp
mov
mov
and
and
call
dec
inc
shlb
sbb
add
xor
jno
and
dec
cmp
sub
xchg
lahf
clc
test
cmp
inc
sbb
or
cmp
cmpsb
movl
inc
dec
loop
or
or
mov
outsb
push
adc
data16
ja
jae
inc
pop
mov
js
adcb
sub
or
mov
ret
lret
adc
aaa
cmpsl
jne
add
push
cmpb
inc
push
xor
xor
adc
jnp
sub
in
sahf
ja
ss
dec
ffree
pusha
or
pop
sbbb
int3
sub
adc
push
mov
inc
dec
inc
xor
push
mov
dec
or
xor
jmp
addr16
pop
test
pop
push
adc
sti
jnp
loop
adc
sbb
dec
movb
push
cltd
enter
add
sqrtps
dec
sub
jbe
adc
jno
adc
adc
jge
and
adc
inc
mov
jp
fstpl
inc
mov
data16
mov
jge
add
daa
push
push
leave
and
rorb
rcr
add
push
sub
ljmp
push
add
jno
or
or
push
shrl
cltd
mov
movb
sbb
adc
jl
mov
mov
test
stos
stc
jnp
lret
test
push
mov
cmp
sub
push
sbb
jle
inc
jo
mov
inc
and
push
test
es
add
in
add
pop
icebp
pop
mov
sub
cmp
movsl
mov
or
ds
test
pusha
jp
ljmp
mov
ret
sbb
xor
or
sarb
iret
dec
cmp
popf
lret
push
fs
insb
and
inc
adc
lods
je
fs
cmpsb
adc
cwtl
or
push
loop
aad
cmpsb
je
mov
pop
mov
les
push
and
sbb
dec
xor
fisubrl
out
push
dec
ja
jp
fdivs
jne
mov
mov
mov
loopne
push
stos
sub
fists
cmp
aad
jmp
or
add
fldenv
lods
inc
mov
stos
in
sbb
add
mov
sbb
or
mov
je
orl
sbb
push
pop
cmp
inc
inc
jg
mov
shlb
ret
out
or
lahf
test
loopne
push
call
add
sar
sbb
cmp
cmpsl
rcrb
mov
mov
clc
push
lea
inc
dec
enter
pop
and
sbb
enter
mov
push
nop
xorb
and
cwtl
mov
or
pop
add
push
ds
neg
sbb
inc
adc
dec
or
mov
call
loope
sub
lods
or
sub
push
xorl
inc
push
ss
pop
imul
push
in
jg
mov
jns
jo
je
nop
into
test
cmp
jo
sub
cmp
mov
jb
stos
dec
call
test
dec
xorb
mov
sub
lea
and
jg
jbe
mov
scas
add
mov
pop
and
sbb
jmp
mov
inc
daa
push
movsb
shlb
roll
add
sar
mov
test
mov
pop
notb
xchg
lods
adc
jmp
push
jmp
jmp
int3
loopne
and
mov
es
mov
movsb
xchg
hlt
mov
fisttpl
std
daa
pushf
js
inc
and
push
push
pop
and
nop
iret
mov
inc
jg
sbb
sbb
stos
xor
int3
in
imul
rorb
in
stc
shrb
add
sub
dec
and
sbb
imul
test
mov
dec
aas
in
js
pop
pop
mov
pop
jbe
mov
rclb
pop
dec
and
sub
dec
aad
fs
and
bound
mov
lea
xchg
adc
and
mov
add
push
movsb
stos
adc
push
nop
call
nop
lret
mov
and
or
mov
pop
movsb
cmp
xchg
fs
add
push
iret
xlat
lcall
ret
insl
push
dec
mov
push
pop
xchg
jl
arpl
fisubrl
jle
test
scas
pop
dec
pop
mov
ljmp
add
sbb
push
jmp
sbb
cmpsl
ret
fmull
pop
xchg
int
rep
jge
pop
test
lea
sub
or
ret
dec
aas
lods
xchg
pushf
add
mov
add
inc
xchg
out
pop
and
adc
rolb
inc
xor
jnp
out
or
pop
lret
pusha
mov
out
aam
clc
mov
cmp
fsubs
ja
fbstp
cmpsl
sbb
loop
push
mov
adc
movups
push
sbb
push
jo
xchg
int
fcompl
aas
lea
adc
mov
cmp
inc
jns
ja
or
les
ja
rorb
pusha
dec
nop
or
imul
jnp
and
inc
adc
js
mov
add
mov
inc
mov
dec
and
jno
add
adc
and
je
jmp
xchg
pop
mov
sbb
and
mov
lods
cmpb
mov
jno
inc
js
ret
out
mov
lock
adc
sbb
test
sbb
push
jge
testl
mov
lret
xchg
aas
scas
aam
sahf
cmp
and
orb
arpl
sar
inc
lea
pop
xlat
dec
cld
inc
call
and
roll
push
add
xchg
xor
inc
or
inc
or
mov
sub
stos
push
loop
mov
mulb
hlt
push
dec
sbb
shlb
mov
mov
mov
inc
mov
pop
push
cmpsl
sbb
popa
pop
add
faddl
fs
fadds
and
faddl
cltd
clc
sub
jl
popf
pusha
dec
add
xor
dec
out
clc
jmp
xchg
sbb
push
fcoms
mov
add
jmp
fmul
add
stc
inc
out
jmp
daa
fabs
int
mov
push
xchg
icebp
mov
adc
add
shlb
xor
mov
lea
pop
adc
testl
dec
sahf
add
add
add
jo
xchg
xchg
int3
scas
aam
adcl
lock
sub
jb
push
or
jbe
xor
mov
dec
pop
insb
or
add
adc
dec
mov
je
or
mov
sbb
xor
dec
lds
loop
and
xor
sub
or
cmpsl
push
pop
or
adc
hlt
add
fsubs
cmpsb
adc
imul
daa
hlt
mov
inc
sub
mov
sub
aad
test
pop
pop
or
sub
inc
cmpl
imul
test
push
in
or
insb
loopne
arpl
dec
mov
loop
xor
cmp
loope
sub
adc
xor
pusha
scas
or
adc
cmp
sub
pop
shlb
adc
aam
mov
test
sbbl
in
daa
and
and
adc
mov
mov
mov
imul
in
push
push
loop
and
cmp
xchg
or
es
push
roll
adc
aas
fimull
push
push
mov
push
xor
imul
ss
jns
dec
xor
pop
jo
xchg
push
mov
mov
loopne
inc
sbb
pusha
sub
sbb
jg
push
inc
addr16
fadds
ret
and
push
rolb
arpl
add
lock
mov
push
dec
call
xlat
adc
add
pop
sahf
arpl
add
mov
mov
ds
and
sub
cwtl
or
push
sub
sub
pop
mov
pop
or
inc
and
call
add
lds
jns,pt
pop
inc
inc
dec
aaa
and
xor
sti
mov
add
popf
push
inc
jmp
add
fisubrl
or
jne
popf
test
or
imul
mov
and
fsubrl
xchg
inc
xor
daa
or
stos
or
jne
clts
pusha
pop
incl
lret
mov
aam
jecxz
adc
ret
or
js
mov
adc
xor
add
jmp
data16
or
loopne
jmp
and
dec
mov
and
pop
add
jnp
mov
imul
or
lds
or
xchg
xor
cmp
or
ja
gs
push
stos
dec
mov
cmp
mov
pop
push
mov
imulb
sbb
cmpsb
mov
pop
pusha
sub
test
cmp
push
sub
sbb
shll
sbb
out
sub
out
xchg
xchg
inc
dec
mov
ret
and
stos
pop
lret
subl
push
jno
mov
or
cmp
pop
daa
xlat
notl
outsl
test
jo
add
in
cmp
sbb
adc
test
aaa
imul
ret
xor
insb
pop
rolb
jb
fisttpl
aaa
sub
push
and
cmp
dec
lcall
jae
mov
daa
add
adc
mov
pop
push
mov
mov
sub
adc
js
mov
pop
xchg
mov
jnp
data16
daa
mov
fbstp
push
push
adc
and
pop
test
sbb
cmp
inc
jecxz
addr16
jg
or
mov
push
cmovs
xorl
push
cld
or
sub
cmpsl
inc
push
nop
arpl
fidivl
mov
loopne
pop
subb
subb
cmpl
orl
add
and
int
mov
or
lods
inc
cltd
or
insb
pusha
je
xchg
push
mov
xchg
shrb
push
xchg
adc
shrb
out
pusha
je
mov
pop
push
cld
lahf
in
and
popa
dec
dec
mov
jg
push
cmp
shrb
jo
pusha
je
or
cmpsb
and
fdivrs
stos
pusha
notb
pop
dec
mov
xorb
movsb
addr16
sahf
fadds
stc
adc
mov
mov
aam
enter
ret
sarb
mov
add
mov
imul
adc
repnz
add
or
push
mov
push
cmpsb
in
imull
fbld
rcll
push
and
mov
sbb
nop
push
add
cmc
jle
fwait
mov
lock
mov
xor
int
aaa
cmp
stc
xchg
into
add
sub
stos
andb
jbe
and
mov
clc
or
mov
sub
cmp
inc
inc
inc
cs
xchg
lea
add
mov
jns
mov
push
or
inc
cli
push
dec
push
inc
inc
and
dec
mov
insb
mov
lret
lahf
ljmp
shrl
stc
xor
rol
push
push
leave
je
iret
mov
cmp
clc
jne
xchg
sarb
rcrb
hlt
push
cmp
mov
sahf
ja
adc
sub
or
ret
push
add
ja
mov
loopne
push
pop
and
push
add
jo
add
dec
mov
or
in
leave
jae
pop
fadd
push
rclb
sbb
sbb
mov
push
test
dec
inc
sbb
inc
push
imul
adc
push
sub
pop
push
popa
cmpsb
push
mov
aaa
cwtl
fstpl
fstpl
sbb
int3
mov
push
and
add
inc
add
cltd
mov
fmuls
sub
mov
xchg
cmp
add
add
push
mov
ljmp
add
sbb
add
jb
mov
push
mov
or
mov
mov
mov
or
add
ds
lcall
inc
inc
pop
test
pop
cmp
push
adc
orb
stos
or
xchg
stc
inc
jmp
jle
or
cld
mov
pushf
or
sub
inc
lret
or
sub
testl
cwtl
inc
sbb
ss
sbb
push
push
pop
jnp
push
pop
std
jge
and
rorb
addr16
iret
xchg
movsl
cmp
lock
xor
jp
xchg
dec
push
and
aas
fwait
adc
push
and
or
push
stos
jle
sub
sub
push
mov
and
dec
mov
cmp
xchg
push
je
jmp
inc
fildl
add
fidivs
dec
lock
or
rcr
adc
mov
adc
sbb
push
cmp
jne
repnz
iret
mov
sub
clc
add
popf
shl
and
pop
sub
add
mov
ret
inc
cld
nop
xchg
das
mov
scas
idivb
adcl
add
xchg
cmpl
cmp
lods
shlb
sub
adc
scas
cmpb
mov
push
add
mov
jl
ret
les
movl
je
cwtl
xchg
adc
out
xchg
rcrb
xchg
adc
or
lock
fldt
lret
mov
and
mov
in
cmpb
push
xchg
iret
test
or
cmp
pop
outsl
and
add
mov
add
into
imull
inc
pop
mov
jge
out
dec
repnz
mov
xchg
les
or
xorb
or
leave
cmp
fdivs
inc
push
adc
fildll
repnz
push
sets
add
add
mov
js
jle
mov
xchg
sbb
andb
mov
aam
mov
test
or
jle
xchg
pop
sub
inc
fs
xor
xchg
je
insl
fdivr
mov
sub
loopne
sbb
shrl
nop
mov
pop
call
pop
push
dec
inc
lea
adc
inc
cmp
or
cmpsb
dec
add
xchg
inc
leave
mov
jbe,pt
sbb
test
js
xchg
jl
add
lahf
sub
dec
pop
xor
je
addr16
cmp
or
addr16
mov
or
iret
sbb
push
mov
xchg
out
sub
lret
jge
pop
push
sub
call
xor
push
adc
popf
subb
and
xchg
mov
add
and
inc
xchg
lods
in
dec
sahf
gs
adc
leave
inc
loope
cmpsb
cld
enter
push
sbb
mov
pop
cmp
js
jg
sbb
mov
and
inc
inc
and
daa
sbb
dec
jo
sbb
in
mov
sub
or
cmp
mov
push
aaa
enter
sbb
test
lods
addb
sub
lcall
dec
dec
xchg
mov
add
insl
cmc
and
sahf
xorb
mov
or
fistpll
jae
xchg
lret
jmp
andb
or
cmpsl
cltd
out
sub
cld
cmp
jb
fistps
movsl
out
ret
add
push
lcall
push
int3
dec
or
mov
push
lods
in
add
lock
or
lcall
rcll
dec
leave
pop
adc
mov
mov
cltd
mov
dec
rclb
sbb
outsb
cmp
sbb
xchg
or
and
push
adc
push
sbb
or
add
mov
pop
stos
pop
and
add
sbbb
xorl
mov
test
add
repnz
inc
adcb
rcrl
add
inc
push
mov
add
movb
in
inc
add
pop
xchg
inc
pop
sbb
dec
enter
pop
sbb
subl
movsb
push
push
stos
xchg
jne
mov
jp
mov
dec
imul
fisubrl
les
jnp
ret
cmp
adc
call
mov
decb
cmp
adc
xor
jns
scas
lret
mov
push
sub
mov
dec
adc
cmc
cmpb
lea
mov
orl
or
sbb
push
movsl
inc
loope
dec
or
push
lock
pusha
repz
sbb
xor
cli
into
lret
push
lahf
arpl
insl
es
pushf
push
jnp
xorl
cmpl
stos
xchg
fistpl
jmp
sbb
mov
mov
and
dec
out
jp
shl
scas
sub
dec
je
push
rorb
dec
rolb
sub
pop
loopne
xchg
cmp
pushf
pop
mov
inc
outsb
jg
xchg
nop
xor
in
inc
sbb
scas
sub
jne
loope
les
fimull
popf
jo
adc
sbb
dec
fmull
push
sbb
push
or
or
mov
push
cmpsl
cmc
xchg
cmp
inc
pop
loope
mov
or
imul
lea
add
fwait
add
jmp
or
or
inc
fnstsw
lods
mov
lods
faddp
adc
cmp
jne
lock
adc
pusha
pop
sbb
loopne
js
mov
test
scas
inc
jge
push
mov
sub
xor
dec
andb
out
or
leave
mov
jg
into
out
pop
les
mov
inc
and
xor
lea
and
jnp
push
faddl
add
iret
push
mov
ja
push
daa
pop
adc
add
xchg
dec
nop
add
add
inc
data16
icebp
jmp
push
lds
add
rorl
push
lret
clc
push
push
adc
push
push
mov
rcrb
call
or
les
push
add
cltd
and
or
test
jmp
xchg
add
scas
push
jno
sbbl
addb
lcall
pop
add
movsb
sub
mov
nop
out
mov
mov
xchg
nop
and
insb
xor
sbb
mov
add
ds
mov
mov
mov
adc
ja
mov
adc
inc
addl
insb
gs
sub
mov
sub
pop
icebp
or
fcomi
mov
pop
je
je
pushf
sub
mov
popf
inc
pop
lcall
sub
arpl
inc
dec
sub
adc
movsl
push
into
das
or
mov
pop
add
adc
das
xchg
inc
aam
xor
in
movsb
ret
and
xchg
jmp
aaa
out
inc
sbb
mov
imul
leave
xchg
aaa
add
pop
jg
hlt
or
sub
in
xor
sar
scas
xor
mov
add
popa
aas
cltd
rorb
mov
aas
cmp
je
mov
inc
insb
sbb
fisubrl
mov
mov
mov
insb
xor
movb
add
lock
inc
in
out
daa
inc
pop
aas
xor
cmp
ljmp
adc
dec
aas
or
ret
aad
aam
jg
add
sbb
leave
or
arpl
cs
fcoms
jge
out
push
lock
movb
xchg
or
nop
adc
push
cwtl
dec
sbb
add
jmp
adc
cli
ds
bound
movl
jb
outsb
inc
cmpsl
push
enter
push
inc
adc
rolb
jo
xor
sbb
jle
and
adc
mov
mov
jno,pn
sub
movsb
mov
xchg
movsb
mov
inc
ja
std
add
clc
add
repz
mov
cmp
adc
out
nop
xor
repnz
cmp
xchg
lods
xor
fwait
add
ret
je
or
je
inc
pop
dec
je
and
adc
sub
pop
stc
insl
sub
and
je
add
and
and
mov
aas
lea
jmp
inc
add
lar
ret
arpl
lods
int3
ret
test
push
loope
clc
out
push
jmp
mov
daa
cmpsl
je
enter
mov
out
xchg
add
push
inc
lret
imul
pop
aaa
or
push
mov
loopne
es
xchg
push
fdivrs
insl
dec
dec
xor
dec
push
xchg
xlat
mov
adc
inc
aaa
adc
add
int3
add
icebp
jg
data16
sbb
mov
pop
lock
cmp
sub
aas
inc
inc
inc
xor
dec
mov
and
push
push
pop
cmp
sbb
pusha
aam
push
sbb
cmc
andl
insb
xchg
push
cmp
leave
ss
rorb
adc
in
mov
or
sbb
sub
insl
lods
outsb
sub
movsl
jmp
fwait
jnp
jo
mov
pop
jae
and
cwtl
adc
repz
add
mov
or
mov
daa
or
add
add
pop
mov
jmp
jns
or
aam
add
push
or
pop
xor
jo
cmp
insb
lock
les
dec
and
jmp
movnti
jl
cmp
sarb
mov
and
aaa
addr16
imul
je
and
aaa
and
ret
cmp
push
xchg
lahf
xchg
or
inc
adc
sub
xchg
movsb
ret
cmpl
into
mov
and
add
adc
fisubrl
add
xchg
cmpl
outsb
call
mov
add
sbb
invd
adc
add
pop
mov
sbb
movsb
out
sub
cmpl
cmp
shll
scas
pop
enter
xor
loopne
adc
out
add
rolb
repnz
jl
or
pushf
xchg
addl
adc
daa
test
in
or
push
push
push
mov
push
les
add
pop
test
push
in
outsb
jne
iret
imul
punpckhbw
mov
test
ret
popl
roll
sub
cmp
jbe
in
or
mov
nop
mov
dec
ret
dec
shrl
xor
mov
xchg
push
mov
lods
sti
lahf
mov
add
add
sbb
pop
mov
dec
mov
jne
or
add
inc
mov
fildl
or
cmp
jo
sub
ret
inc
cmpsb
aas
call
shl
mov
add
mov
mov
jnp
repz
in
jg
add
arpl
jg
dec
add
add
mov
pop
pop
shrb
cmp
adc
push
sbb
mov
or
divl
call
add
cmpl
jg
idivl
xchg
sub
inc
movb
push
jge
cli
mov
dec
or
rol
add
xor
imul
mov
and
insb
push
or
cmp
insb
sub
pop
jbe
dec
jns
push
cmp
pop
roll
in
insb
shlb
push
cs
mov
es
pop
ficomps
mov
into
add
dec
push
ja
adc
rcl
cmp
stos
outsl
and
add
icebp
sbbl
pop
mov
and
inc
pusha
mov
or
inc
mov
data16
mov
and
xchg
lods
add
sub
mov
xchg
cwtl
add
dec
lods
jp
js
dec
add
mov
add
xor
sub
fmull
shl
inc
jnp
xor
inc
adc
out
popf
sub
jb
and
les
sbb
push
clc
bound
das
sbb
in
clc
adc
test
test
pop
hlt
jge
fisubl
enter
push
sahf
jbe
or
cli
fistl
sub
int3
push
mov
pop
call
outsl
dec
aad
flds
add
stos
mov
pop
shrl
jl
mov
or
jl
mov
add
pop
imul
dec
mov
inc
cmp
jl
sbb
adc
js
imul
lock
cmp
push
xor
out
aad
add
adc
fld
out
dec
xor
mov
pushf
dec
adc
sbb
and
enter
outsb
jecxz
fisubl
orb
jmp
lret
je
xchg
inc
sbb
and
mov
cli
test
cmp
sbb
dec
aaa
xchg
push
ja
mov
or
dec
adc
or
adc
fiadds
mov
lret
jl
adc
sbb
leave
and
filds
sbbl
mov
or
mov
int
notb
push
xor
sub
fs
jae
sbb
adc
push
cmpb
pop
and
cwtl
dec
out
add
inc
or
clc
mov
ja
mov
ja
out
push
mov
sbb
ja
repz
add
clc
jbe
xchg
dec
push
sub
inc
or
xor
add
pop
mov
into
mov
jbe
push
xorl
pushf
push
lods
adc
xchg
pop
sbb
cs
pop
sbb
sub
out
jae
jae
push
roll
mov
or
sub
push
sbb
add
outsb
mov
mov
fsubl
jbe
pop
push
dec
pop
pusha
add
inc
lret
imul
jne
add
inc
xor
je
sub
sub
add
mov
inc
dec
roll
push
sub
and
lea
cmpsb
inc
ja
push
adc
pusha
rorl
jl
adc
into
test
or
sbb
psubb
mov
mov
sbb
test
add
push
inc
pop
jae
or
movsl
in
push
sub
xchg
mov
dec
dec
dec
sbb
mov
dec
xchg
cmp
ljmp
add
add
movsl
add
pusha
fimull
xchg
xor
ret
mov
mov
insb
cltd
inc
ds
xor
jne
in
imul
add
loop
movsb
lods
jge
mov
jl
xchg
adc
mov
pop
xor
sbb
xchg
add
push
cmp
add
xor
cmp
aaa
sbb
popf
aad
dec
jl
cmp
sbb
sbb
push
lds
ljmp
add
fdivrs
pop
mov
fiaddl
or
in
xchg
xchg
fcoml
sbb
pop
mov
and
loop
mov
xor
push
call
xchg
push
movsb
cs
mov
inc
shll
std
or
sarb
pop
inc
lret
and
push
dec
mov
mov
sbb
ret
psubsb
push
loop
pop
shll
add
scas
add
ja
add
pop
dec
subb
sub
sbb
push
subl
and
cmpl
cmp
xlat
fwait
xchg
and
pop
or
jb
iret
clc
cmp
bound
sbb
add
adc
xorl
cmp
mov
jmp
jl
pop
dec
jne
xchg
jg
cmpl
hlt
cltd
add
mov
mov
dec
or
sahf
jb
mov
jnp
mov
or
cmp
mov
push
cmp
idivb
loope
and
inc
and
jle
sub
and
scas
stos
lret
inc
sarb
scas
das
and
out
in
and
or
sub
es
daa
sub
rolb
dec
jl
inc
pop
scas
push
xchg
xor
lret
dec
inc
or
fcoml
andl
aam
ss
jmp
jg
mov
push
pop
jno
mov
aam
dec
jmp
mov
mov
je
inc
xlat
or
movsb
lods
mov
inc
inc
sbb
jle
test
or
testb
push
pop
fs
push
pop
fsubrs
bound
aaa
adc
out
xchg
das
cmc
in
xor
xor
add
ret
cltd
pop
pop
pusha
mov
popf
xor
mov
je
xchg
loopne
popf
add
pusha
out
mov
fimull
imul
andb
mov
add
mov
testl
sub
adc
or
jb
in
lea
iret
or
hlt
pop
incl
mov
push
jo
incl
cmp
test
les
add
sub
push
sbb
jns
xchg
jge
jmp
mov
xor
mov
enter
mov
cmpl
int3
ficoml
push
mov
pop
inc
or
imul
mov
and
pop
pop
jmp
add
mov
ljmp
inc
mov
xchg
lods
mov
mov
sbb
adc
cmc
add
push
fidivrl
cmpl
jns
frndint
pop
mov
inc
fdivs
add
jo
sbb
paddb
repz
into
sbb
pop
and
xchg
or
ds
adc
sbb
and
cmp
push
xor
andl
and
subl
mov
dec
adc
and
sarl
adc
mov
in
test
mov
push
mov
pop
subl
or
jmp
or
xlat
mov
scas
adc
cmpsb
test
adc
lea
and
in
pop
or
rorl
inc
in
add
dec
add
and
imul
lock
mov
fscale
mov
adc
loope
adc
inc
adc
or
scas
push
mov
cmp
ja
jle
sahf
fdivr
pop
xor
ficoml
add
sub
add
aas
pop
inc
cmp
jmp
lock
adc
pop
sbb
sbb
mov
test
insb
sub
and
popf
dec
pop
flds
mov
xchg
ljmp
out
mov
xor
dec
ljmp
shrl
jmp
cmp
sbb
push
adc
lret
push
lret
push
pop
adc
mov
xchg
das
xchg
mov
cli
je
dec
jne
xchg
push
into
dec
push
inc
into
mov
cltd
mov
push
mov
sub
testb
mov
push
loopne
inc
mov
popf
fsubl
pop
cmp
and
push
pushf
movsb
mov
cmp
test
cmp
and
sub
adc
push
push
arpl
mov
test
enter
cmp
dec
sub
inc
test
loop
mov
int3
dec
inc
cmp
lcall
xchg
mov
jmp
mov
test
mov
mov
dec
add
jnp
orb
push
xchg
cmp
push
inc
inc
nop
cmpsb
inc
rorl
call
push
mov
mov
jmp
mov
sbbl
xchg
push
sahf
cmpsl
pop
push
mov
into
cli
andb
pop
fsubl
jl
jle
imul
mov
pop
add
or
push
or
je
push
jae
add
xor
cmpsl
iret
int3
imul
loopne
gs
mov
and
loop
rcrb
divl
mov
adcb
sbb
sti
sub
dec
mov
rcl
int
dec
pop
jae
jo
dec
dec
aad
xor
or
rolb
sahf
push
mov
ja
sub
jne
or
cmpsb
out
fs
js
scas
nop
fcomp
lcall
pop
add
sbbl
cmpsl
adc
punpcklbw
movsl
imul
and
jmp
fnstenv
cmp
ss
int3
out
out
inc
sbb
jnp
dec
xor
loope
loope
add
mov
daa
dec
outsb
jg
inc
jo
and
out
int3
rol
mov
sbbb
add
pop
arpl
insb
add
imul
xchg
add
add
lds
dec
and
das
push
dec
decl
mov
jmp
add
sarb
sbb
mov
rclb
jp
sarl
xor
insl
sbb
cmp
les
mov
cmp
outsb
sub
imull
loope
jbe
int
xor
cmp
mov
or
insl
fdivl
or
sbb
mov
adc
push
sub
push
or
push
icebp
dec
add
add
iret
filds
out
cmp
inc
push
pinsrw
add
or
inc
mov
movb
or
cmp
push
mov
popa
cmp
aam
inc
cmc
pusha
stos
outsl
jno
pmullw
cmp
hlt
push
orw
insl
inc
repz
push
fisttpl
stos
push
call
mov
push
inc
jmp
jo
sbb
ret
pop
mov
mov
cmc
mov
test
xchg
adc
and
loopne
sbb
and
pop
into
out
cmp
push
addb
cs
sbb
add
mov
cmp
aaa
jmp
rclb
mov
je
imul
sbb
fildl
ja
adc
aam
cmpsl
bound
test
int3
cmp
insb
nop
xorl
ss
fsubs
pop
jne
cmp
mov
aam
test
adc
add
dec
mov
push
insb
adc
or
adc
je
xor
add
cld
add
xchg
add
cmp
adc
cld
jmp
jne
inc
jnp
js
sti
jae
lods
inc
insb
adc
xchg
loopnew
adc
xchg
or
xchg
in
or
sub
and
loop
or
push
pop
lcall
dec
cmp
fmull
mov
xchg
add
or
je
push
jp
sbb
sub
xor
pop
iret
pop
dec
fcompl
lret
test
clc
icebp
add
jb
inc
insl
jne
pop
prefetch
mov
mov
adc
mov
and
inc
jb
mov
jmp
sbb
pop
dec
xlat
sbb
pop
push
add
inc
enter
ja
adc
or
pop
sbbl
js
pop
test
xor
daa
out
sbb
arpl
add
add
push
xor
ret
inc
nop
adc
or
add
pop
pop
pushf
int3
add
push
sbb
push
sub
test
xchg
incl
inc
or
pop
pop
daa
in
jp
loopne
and
cmp
dec
pop
or
lods
or
sbb
jmp
pop
or
pop
pop
jmp
int3
cmc
or
mov
pop
sub
loop
daa
mov
lock
outsl
jno
pop
inc
out
loopne
mov
and
inc
adc
into
lock
test
aad
cmp
or
adc
pop
xchg
dec
movsl
or
shll
fisubl
dec
push
pushf
xchg
in
ret
dec
sbb
mov
add
adc
fisubrs
ret
push
sbb
and
lock
jo
pushf
and
xchg
adc
loopne
push
or
cmc
add
cltd
popa
cmp
shl
xor
call
in
add
loopne
add
nop
push
test
xchg
jae
int3
aas
out
inc
cld
loope
adc
addl
mov
sbb
mov
mov
cmp
shl
jle
decl
xor
test
xor
loopne
mov
adc
clc
add
stc
inc
nop
adc
iret
arpl
sbb
pop
adc
xchg
xchg
pusha
mov
pop
push
in
lea
and
xor
adc
into
lea
push
inc
ret
dec
das
add
cs
add
shll
push
mov
mov
stos
add
or
adc
inc
gs
mov
outsb
inc
or
mov
inc
stos
jbe
ret
sub
divl
cmpl
cmpsb
daa
lea
outsb
sbb
mov
test
mov
inc
sbb
enter
xchg
shll
pop
or
mov
dec
ret
je
pop
xor
test
ret
aam
pushf
ret
cmpl
cmc
add
jns
sahf
push
aas
int3
sti
es
jmp
mov
xchg
test
jne
cmovp
or
sbb
xchg
dec
test
add
mov
adc
sub
mulb
cmpb
fnstcw
ljmp
cs
pop
lods
scas
pop
xchg
and
add
push
push
test
and
xor
sub
adc
mov
jbe
jge
sbb
pop
inc
push
sbb
push
mul
sub
mov
mov
sbb
inc
std
and
sar
mov
imul
push
xchg
subb
mov
fisubrl
bound
notb
fstp
loopne
sub
or
or
in
sti
into
push
push
xchg
xor
lock
dec
push
cmp
jle
push
cmp
repz
or
push
sbb
shl
dec
and
cmp
add
jge
pop
cmp
sbb
popf
test
add
scas
shlb
cmc
mov
pop
test
pop
mov
add
jecxz
mov
sbb
and
jecxz
scas
lods
sbb
xchg
fs
jg
pop
je
inc
mov
or
xor
mov
pusha
push
jb
push
cmp
push
pop
cld
fidivrs
imul
cmp
pop
les
test
fnstenv
insl
daa
addl
imul
call
mov
sahf
inc
jp
sub
out
or
mov
adc
mov
add
jmp
in
negb
push
fidivrs
jecxz
cli
jge
sub
push
sbb
int
push
cmp
loope
lret
add
mov
cmp
sti
nop
cs
lret
mov
aad
insb
test
arpl
mov
lea
jnp
sub
sbb
mov
sub
and
mov
add
mov
adc
clc
mov
cmovns
test
inc
mov
je
sti
xchg
and
out
push
sub
cmp
sar
mov
imul
lock
shl
icebp
mov
jg
out
mov
test
stos
inc
jge
cmp
je
pop
shr
push
push
movzbl
shl
sub
lods
xor
or
lret
push
adc
or
in
or
mov
and
mov
js
imul
in
and
mov
mov
js
out
fdivl
jo
pop
sub
adc
inc
adc
add
sub
stos
push
mov
jbe
popf
pop
jo
or
nop
pop
cmp
xor
out
cli
pop
int3
icebp
jle
xchg
adc
mov
rolb
mov
pop
cmp
dec
mov
jl
adc
xchg
push
xchg
push
pop
int
mov
cli
sar
test
jp
fiaddl
or
inc
movb
add
sbb
cwtl
fwait
dec
push
cmc
rclb
pop
cs
inc
adc
rolb
or
mov
cltd
inc
adc
push
dec
jo
or
ss
ficoms
inc
pushf
in
bnd
xor
dec
sub
in
enter
mov
cmp
loopne
shll
ud0
ror
and
mov
int
clc
sub
jne
mov
inc
xor
addr16
lea
cmp
sbb
insl
add
sub
es
ret
cltd
add
fs
lret
aad
inc
mov
sahf
and
lods
in
frstor
addr16
push
push
mov
mov
mov
sar
jmp
xor
push
dec
je
test
loop
xchg
sbb
push
add
push
cmp
test
mov
push
pop
or
pop
or
cmp
je
mov
sbb
ljmp
jmp
dec
push
lods
and
rolb
lods
out
cmp
insb
je
repnz
push
add
insb
mov
push
push
adc
test
sbb
xchg
movswl
and
mov
push
jl
inc
call
inc
pop
loopne
pop
ficompl
or
add
pop
jmp
je
xchg
mov
dec
lock
das
sbb
insl
cmp
sub
sub
add
cmp
stos
outsl
cld
std
outsl
xchg
cltd
fisttps
pop
add
cs
xchg
add
pop
sbb
dec
or
aad
rclb
jno
xor
and
in
xor
out
test
sbb
sub
sub
out
inc
pop
shrb
xchg
dec
jle
cwtl
sub
mov
sbb
push
imul
cmp
nop
xchg
xor
cmp
pop
inc
add
jecxz
push
rorb
mov
inc
rorb
out
cmp
push
add
and
loope
xchg
xor
jecxz
mov
jmp
jl
fs
cmp
pop
pop
lcall
mov
sub
pop
jne
das
aas
fimull
pop
lcall
add
hlt
jp
pusha
rcrb
sbb
mov
or
push
push
xchg
adc
js
add
mov
sbb
sub
scas
xchg
subb
lea
push
fistl
pop
xor
icebp
sbb
xor
push
aaa
mov
xor
rorb
jmp
mov
dec
mov
jmp
sub
test
stos
pop
js
xor
push
xor
mov
and
cmc
rcr
inc
sbb
js
mov
mov
jp
add
sub
xchg
lahf
sbb
dec
pop
add
movsb
add
clc
xchg
push
je
xchg
dec
inc
or
enter
pushf
cli
out
dec
inc
or
es
jno
cld
and
adc
add
cmp
push
mov
icebp
es
pop
xor
movsb
movsb
imul
push
imul
adc
nop
sub
and
mov
fiadds
mov
hlt
mov
pop
add
add
add
in
add
cmp
cmpb
inc
push
pop
dec
push
test
cmp
mov
jp
subb
in
inc
inc
mov
jmp
dec
test
movb
inc
pushf
sti
push
in
mov
push
cli
xchg
roll
xchg
push
fimull
fistpll
cmp
je
mov
add
ret
rcll
sarl
sbb
fildl
add
add
lock
test
xchg
or
cmp
in
jge
shr
pop
sub
addr16
mov
add
sub
dec
mov
out
dec
loopne
inc
mov
inc
inc
stos
pop
mov
cld
inc
and
pop
or
add
clc
push
add
inc
cmp
stc
or
push
add
es
ret
loopne
rorb
or
loopne
inc
lret
fdivrl
sbb
push
inc
test
shll
pop
or
pop
aam
inc
sbbl
lods
xchg
sbb
mov
inc
in
dec
insb
jg
dec
mov
mov
inc
inc
jg
insb
lcall
pushf
sbb
lds
cmp
loopne
xchg
mov
filds
ss
pop
ret
in
pushf
loopne
mov
jl
mov
inc
or
cwtl
pop
jl
les
jle
cmpl
test
or
mov
push
cmp
jne
mov
or
cmp
outsl
stc
es
sbb
add
mov
inc
lea
add
mov
rolb
rolb
seta
orb
sbb
shl
or
push
push
hlt
mov
orl
mov
mov
add
dec
mov
jo
loop
out
jne
les
jmp
push
test
pop
in
sub
adc
gs
add
jg
cli
mov
sbb
add
or
insb
jne
lahf
es
dec
or
outsl
dec
pop
mov
jge
sbb
lret
jae
jo
xor
sbb
cli
pop
cs
or
mov
cmp
adc
mov
mov
mov
push
inc
add
je
push
mov
add
aaa
imul
pop
sar
push
or
inc
push
add
mov
xor
cmp
cmp
test
pushf
int3
stos
pop
or
sbb
mov
je
adc
xor
pusha
cli
lods
xchg
sub
inc
inc
mov
xor
and
fiaddl
or
xchg
adc
lock
xchg
aas
rorb
pop
mov
xor
inc
dec
lods
and
sub
jns
inc
hlt
add
jno
pop
es
dec
rclb
sahf
mov
xchg
dec
shl
dec
or
lea
icebp
out
lea
and
mov
mov
dec
sbb
adc
out
sub
addr16
hlt
and
rorb
xchg
pop
enter
mov
sub
sub
test
jge
cmpsb
inc
and
push
and
sbb
lret
or
mov
mov
test
ret
add
and
rolb
jne
add
je
inc
mov
les
xor
rcll
in
js
sub
and
in
in
cmp
xchg
stos
push
xchg
popa
xor
mov
rclb
mov
out
push
fs
push
xchg
jmp
repnz
mov
jmp
scas
sti
daa
lds
inc
cmp
popf
pop
addb
mov
leave
add
sbb
adc
sbb
mov
sub
or
loop
or
pop
popf
iret
sub
push
mov
sti
xlat
lcall
adc
cmp
fnstenv
js
std
xchg
loopw
decl
xlat
test
push
arpl
call
dec
mov
or
divb
jo
fs
lock
lock
push
add
sahf
or
add
xchg
sbb
xor
adc
cmp
pusha
add
pop
fidivl
lret
sub
jbe
jne
xorb
sar
or
sub
es
dec
xor
pop
inc
js
lret
sbb
inc
and
cmp
or
lds
rclb
jae
mov
cmp
out
mov
jmp
and
loopne
cmc
test
outsb
add
lea
rcrb
or
mov
int
jmp
mov
lahf
sub
adc
cmp
jae
test
or
sub
mov
or
addb
xchg
test
jmp
pop
int
dec
fdivr
rcr
and
cld
add
sub
push
dec
xor
sub
adc
jge
push
mov
mov
fadds
insb
call
push
or
cltd
push
shl
ds
ror
addb
lods
dec
cld
push
in
mov
aam
pop
sbb
or
xor
rcrl
mov
pop
add
popa
mov
or
push
pop
cs
jo
dec
jo
dec
inc
add
adc
jmp
dec
xor
insl
dec
call
pop
in
sbb
dec
imul
in
jne
xchg
in
scas
jge
sub
adc
out
bound
xor
or
sar
les
in
loopne
clc
lea
mov
test
lahf
cwtl
mov
xor
les
hlt
or
mov
mov
pop
or
inc
xchg
je
nop
pusha
add
inc
jo
je
adc
dec
add
push
add
das
lret
out
pop
rcl
or
cmp
rclb
pop
test
sbbl
sbb
test
or
les
xor
xchg
mov
loopne
add
out
adc
mov
adc
push
xchg
mov
add
mov
jo
ljmp
sub
or
shll
in
push
fsubs
shr
hlt
les
enter
xchg
insl
dec
jbe
mov
lea
sar
cmpsl
repnz
mov
lea
pop
lock
mov
jb
mov
add
loopne
out
sbb
call
arpl
test
lret
lcall
imul
lcall
push
ret
push
push
dec
inc
jmp
daa
movsl
pusha
enter
daa
adc
adc
push
push
sbb
mov
cmpb
add
inc
mov
sbb
inc
mov
ss
or
pop
out
adc
jo
xlat
xor
pop
mov
movl
add
push
push
cld
sub
sub
sub
and
xor
or
cmp
sbb
mov
and
out
mov
jmp
inc
les
cld
pop
add
or
or
int
cmp
xlat
leave
xchg
dec
enter
add
xchg
dec
adc
and
jb
or
aad
adc
adc
inc
popa
mov
lahf
je,pt
dec
jo
mov
inc
cli
hlt
test
or
adc
jo
push
push
rorl
pop
clc
adc
out
xchg
mov
sbb
jbe
jnp
dec
xor
ljmp
ret
or
cmp
ds
popf
fimull
aam
mov
mov
in
xor
push
aaa
imull
out
jge
xor
add
lret
lahf
mov
push
loopne
cmp
push
cmpsb
divb
cmp
nop
mov
jns
movsb
add
and
xchg
jne
divb
cli
dec
inc
inc
test
inc
sahf
ret
rorb
fbstp
mov
pop
dec
adc
add
stos
std
cmp
mov
mov
mov
inc
sbb
pop
push
ljmp
dec
add
mov
int
repz
test
test
push
adc
ljmp
lods
pop
aas
testl
sub
ret
mov
sub
cmp
stos
mov
sbb
mul
xor
fadds
es
ror
mov
mov
and
fcoml
out
fcom
or
lds
dec
fcoml
sbb
or
les
enter
xor
jns
add
sub
enter
loopne
sub
sub
mov
fnclex
popf
dec
fdivrs
incb
fstpl
adc
mov
add
add
sbb
adc
je
aam
xchg
or
sub
xchg
mov
lret
or
lahf
pop
dec
add
mov
push
add
subb
les
or
push
or
jmp
dec
cmpsb
and
sbb
je
inc
or
jbe
cld
sub
je
movsl
sub
stc
add
es
pop
mov
les
add
sub
pop
cwtl
inc
xchg
sbb
in
adc
or
movl
sub
sbb
lods
and
jg
and
imulb
rolb
mov
outsb
adc
test
popa
sbb
jle
or
call
inc
out
idivl
aas
xor
jne
sarb
and
jne
in
push
jmp
inc
fisubs
aaa
add
add
lahf
adc
pop
jmp
js
les
or
aaa
es
cmp
jne
mov
popa
xchg
dec
lods
add
sarb
inc
jp
idivl
dec
jl
push
call
mov
pushf
or
rorl
sbb
jns
push
cmove
imul
inc
adc
add
jle
fiaddl
jge
fdivl
dec
adc
cmp
mov
aad
jecxz
mov
adc
mov
mov
test
inc
sub
add
frstor
xor
pop
push
jb
ret
cmp
mov
inc
cwtl
ret
fwait
addr16
push
lock
xchg
adc
notb
lretw
mov
xchg
js
icebp
or
pop
jg
sub
clc
rcll
or
cli
inc
shr
lcall
add
dec
lcall
inc
add
add
add
jge
out
shr
int3
mov
mov
inc
or
cmp
cs
push
subl
add
mov
inc
les
fimuls
rcrb
cwtl
mov
or
xchg
adc
cltd
and
sub
das
je
adc
push
jmp
js
pop
mov
adc
sbb
sub
lea
lock
add
inc
push
lock
fcoms
mov
cmpsl
es
sti
and
mov
jge
out
push
pushf
sbb
movsb
pop
fsubr
decb
enter
scas
adc
aad
push
pop
rolb
stos
popf
or
outsb
cmpsb
pop
lock
nop
shlb
cld
sbb
flds
fadds
fistps
mov
cmp
cwtl
dec
jl
pusha
stos
cmpsl
sbb
jl
inc
and
xchg
xchg
sub
lods
icebp
div
dec
js
adc
dec
inc
out
xor
add
leave
test
dec
jb
enter
push
pop
leave
loopne
xchg
sahf
adc
cmp
cmovg
clc
inc
sbb
outsb
clc
nop
jecxz
push
mov
cmp
imul
or
dec
adc
adc
jmp
xchg
lock
pop
addr16
test
mov
orps
in
add
add
lock
pusha
xlat
push
pop
mov
sub
inc
and
or
ret
jge
mov
dec
lret
adc
inc
jl,pn
inc
loop
aas
dec
xchg
mov
inc
nop
sbb
sti
testl
mov
sarl
neg
add
mov
cmp
and
inc
jns
inc
adc
sbb
cmp
jl
jmp
inc
je
ret
ficompl
cmpsl
add
cmovp
or
cmp
push
or
test
in
add
outsb
or
popf
fmuls
add
mov
cltd
rolb
sub
push
outsb
mov
cmp
sub
mov
xchg
stos
mov
int3
rolb
rcrb
popa
or
sub
add
clc
adc
inc
sahf
popa
jo
push
cmp
je
ds
and
cmp
add
mov
cmp
aam
lds
mov
clc
insl
movsb
je
mov
pop
les
cwtl
cmp
outsl
jl
pop
jo
inc
js
jp
lcall
clc
push
jnp
popa
push
sbb
mov
in
push
xchg
jecxz
cmp
sbb
sub
push
cmp
ljmp
pop
add
sub
clc
out
nop
rorb
lret
mov
loopne
push
in
sarb
outsb
sub
jl
addr16
in
cmpb
jae
mov
jle
bound
or
in
xchg
cmpsb
imul
lock
js
sbb
mov
je
push
xor
mov
push
sub
push
sub
jle
inc
cmp
sarl
mov
adc
inc
pop
ja
push
or
and
sub
cmpsb
xor
aaa
push
lock
enter
and
mov
int3
or
push
call
into
aaa
sub
pop
adc
mov
inc
xor
dec
push
jne
lea
push
test
inc
lret
clc
addr16
daa
or
in
jge
push
adc
add
or
inc
stos
cwtl
test
lock
loop
lds
inc
shr
and
ja
lock
sbb
mov
hlt
pop
mov
push
loopne
ret
pop
xor
xorb
fdivl
rolb
in
jl
mov
scas
jo
jns
iret
rcll
int3
fsub
push
ret
imul
lcall
daa
pop
sub
lock
pop
inc
or
or
cmp
pop
dec
xor
fcoms
cmpsl
pusha
lock
loop
xor
das
dec
cmp
sub
or
dec
xor
jbe
sar
mov
xchg
or
dec
push
into
mov
sub
xchg
loopne
sbb
call
icebp
daa
test
xor
je
fldenv
xchg
mov
inc
ljmp
ret
jne
cmp
cwtl
bswap
inc
inc
fdivrl
cmp
xchg
cmp
aaa
mov
mov
lcall
shll
rclb
sub
lret
ror
mov
clc
and
push
mov
rcll
dec
mov
fcoml
js
mov
sbb
add
inc
adc
adc
mov
jns
sub
enter
push
dec
lods
imul
xchg
es
add
push
cmpsb
stos
cmp
js
jmp
xchg
inc
dec
xor
jl
jne
popa
into
xor
loope
mov
dec
adc
pop
ljmp
insl
movswl
add
test
fdivrl
sub
scas
lods
pop
out
and
adc
xor
aam
lea
cwtl
sbb
or
mov
dec
in
ret
sub
xchg
adc
lds
dec
and
jno
call
and
push
lret
xchg
in
daa
or
add
dec
mov
fsubr
adc
js
push
mov
rolb
repnz
shlb
jmp
inc
sub
push
mov
repz
jo
xchg
xor
push
sub
test
cmp
mov
nop
gs
push
rolb
in
cli
lahf
lods
fbstp
mov
mov
mov
or
arpl
je
clc
push
pop
ret
sub
loopne
push
push
inc
xlat
push
mov
pop
cwtl
and
adc
push
int
xor
lcall
push
paddq
xorl
dec
dec
mov
push
inc
adc
pop
mov
lea
add
lds
insl
aad
adc
jmp
xor
aaa
dec
aaa
ret
xlat
cs
nop
test
cld
cld
or
xchg
js
inc
jmp
xor
add
movsb
gs
pop
aaa
fwait
xchg
fwait
xchg
cmc
cmpl
shll
xchg
or
out
jnp
xor
rcrl
dec
movsl
pop
sbb
aaa
mov
pop
sbb
inc
loope
arpl
hlt
add
hlt
dec
clc
push
ret
cmp
or
add
movsl
cli
dec
shl
xor
or
push
incb
add
adc
incl
sub
add
mov
jl
call
mov
nop
sbb
add
mov
jge
scas
jle
scas
lock
jbe
inc
jbe
jg
jbe
imul
push
adc
dec
int3
inc
inc
push
in
xchg
mov
or
mov
push
cmp
arpl
iret
push
lcall
xchg
xlat
aaa
or
adc
sbb
out
add
jle
push
notl
loopne
xchg
fs
cmpb
pop
js
sahf
jno
mov
or
aas
push
shl
pop
adc
movnti
cmp
add
xor
sbb
xchg
jge
inc
jge
into
adc
mov
loop
cmpsl
cli
dec
jne
mov
sbb
mov
or
or
iret
in
inc
sub
mov
adc
fcomps
enter
inc
cld
mov
xor
imul
popa
mov
or
or
mov
pop
or
add
or
lahf
test
pop
jmp
add
xor
adc
cmp
sarl
xchg
fnstenv
jns
dec
xchg
ret
mov
or
xchg
add
mov
dec
aad
das
loopne
add
xorb
addr16
jmp
inc
add
loope
mov
enter
ffree
jbe
xchg
fnstsw
adc
popf
sbb
fsts
imul
cmp
shrl
cltd
fmull
jo
sub
mov
push
sub
push
fwait
and
add
mov
imul
mov
add
sar
add
jl
roll
sub
stc
inc
cs
cmp
push
std
inc
inc
ss
inc
adc
orl
add
cmp
out
inc
addr16
adcl
adc
mov
mov
insl
pusha
add
scas
mov
fmuls
jmp
pop
pushf
jmp
pop
sbb
arpl
enter
xchg
or
ljmp
dec
dec
or
adc
clc
or
or
adc
sub
mov
dec
sub
add
adc
sub
rclb
inc
out
movsl
mov
jb
add
or
pop
pop
je
dec
je
cld
xchg
push
fucomip
ds
add
inc
les
adc
mov
sub
idivb
adc
adc
push
movl
mov
mov
test
loopne
push
movb
dec
sbb
sahf
sub
or
add
jns
sbb
adc
or
jle
xchg
xor
push
jb
stos
jae
jge
and
lret
adc
cmp
lock
mov
cli
jae
imul
bnd
inc
movl
mov
xor
and
shl
cli
es
mov
pop
addb
add
mov
and
test
add
dec
popa
adc
pop
test
movsb
sar
mov
add
inc
das
outsl
adc
pushf
add
mov
and
sub
hlt
push
sbb
sub
mov
aas
mov
ror
mov
aas
shl
stos
or
or
push
cmp
test
adc
dec
push
push
or
movsl
sbb
lods
mov
imul
dec
push
mov
movsl
add
rolb
add
mov
adc
sub
cs
inc
add
mov
scas
mov
adc
push
repz
ja
sti
xor
repz
sbb
ficompl
sub
or
dec
shll
clc
in
pop
rcl
loopne
or
leave
sub
fmull
aam
outsb
outsb
sub
es
mov
notb
dec
enter
push
lret
lods
shll
int3
mov
jp
fcomp
cld
popa
cltd
pop
and
xor
jle
and
sub
push
insl
movsl
push
loopne
cs
xor
ret
enter
lock
sbb
or
or
or
mov
inc
clc
jge
mov
scas
clc
sub
sahf
lock
andb
add
jmp
rcrb
inc
in
jle
clc
mov
loopne
jno
sbb
fcmove
or
out
fidivrs
call
mov
call
and
adc
dec
mov
popl
outsb
adc
dec
aam
push
and
push
add
cmc
inc
stos
fwait
rorl
idivb
lea
and
push
or
aas
push
aam
pop
mov
inc
testb
cmp
jle
pop
adc
and
xchg
mov
lea
push
mov
add
mov
in
addl
mov
mov
inc
repz
or
call
pop
sub
arpl
jo
call
movsb
rclb
mov
pop
jb
mov
sahf
jo
inc
push
add
push
or
pop
dec
or
sbb
mov
enter
add
or
nop
fdivl
enter
dec
sbb
pop
jno
dec
cmpb
jp
shr
pop
jne
lods
mov
cmp
jge
mov
push
jge
mov
add
imul
xor
fistpll
orl
imul
mov
xchg
aam
and
aam
pop
mov
xchg
or
lods
adc
mov
pop
ficomps
and
or
fmuls
pop
xorl
push
xchg
jge
add
clc
add
add
scas
and
inc
adc
shl
shl
jp
int
js
or
add
mov
rclb
mov
fstpl
push
mov
jmp
mov
and
shll
cltd
out
gs
cmpsl
mov
clc
add
lcall
inc
shll
or
lods
push
cmp
inc
pop
fmuls
andl
cli
out
inc
lret
enter
movsl
lcall
push
xchg
les
inc
in
int3
add
daa
push
cmp
sbb
jo
mov
or
in
jbe
test
dec
sbb
pop
fcoml
xchg
rorb
mov
shll
mov
and
push
xor
ret
test
mov
pop
icebp
repnz
fiaddl
lcall
push
cmp
jo
cs
lock
mov
loopne
iret
push
xchg
jp
lahf
ja
sub
int3
jge
test
in
ja
pop
rcll
xchg
nop
inc
les
mov
or
xchg
xor
lret
xlat
loopne
cmp
test
movsb
jge
mov
add
mov
cmp
adc
dec
pushf
jb
fcomps
pop
or
xchg
inc
mov
test
cmp
add
sub
jns
aas
and
ss
pop
mov
test
ret
mov
cmp
add
mov
push
push
dec
js
mov
push
shl
ds
and
loopne
push
fcomps
ja
xchg
push
inc
sub
sub
pop
or
dec
inc
add
adc
test
mov
mov
push
js
jbe
addb
ja
sbb
cli
movswl
repnz
add
fsubr
pop
add
ficompl
sar
ret
pushf
push
inc
push
or
sti
cmp
sbb
mov
aad
lcall
inc
stos
js
dec
xlat
not
xchg
pop
mov
test
ret
fiaddl
cmp
adc
mov
ss
xchg
ret
in
push
push
and
sarl
cmpsb
mov
dec
std
std
out
adc
mov
mov
add
in
test
push
or
xchg
dec
movsb
lods
lcall
or
repnz
cwtl
fsubl
mov
clc
mov
push
into
andb
adc
dec
testl
cmp
jne
push
mov
ja
fadds
lock
push
push
mov
sbb
fildl
pusha
adc
ret
push
in
pop
cmp
add
rcr
ss
lods
cmp
rcrb
pusha
lcall
cmp
adc
push
je
cld
sarb
cmpsb
pop
mov
jb
lds
cmp
dec
mov
shlb
adc
add
jecxz
mov
js
inc
jge
cld
pop
daa
or
pop
or
push
add
mov
dec
sub
adc
and
push
cld
cli
neg
mov
mov
mov
lea
push
xor
cmp
cmp
aaa
xchg
sub
inc
test
imul
loope
test
add
dec
jl
pop
ja
aam
popa
mov
pop
cmpsl
call
lcall
orb
push
adc
and
and
jle
push
sub
sahf
inc
xchg
cmpl
int3
ltr
inc
pop
add
lock
or
aaa
or
data16
popf
ja
inc
add
xor
push
xor
popa
push
jo
mov
mov
cmp
and
sti
push
xor
push
out
cmp
decl
cmc
jle
cmp
jp
aad
or
sub
pop
es
mov
sbb
add
xchg
push
jmp
std
xchg
and
pop
lock
mov
in
pop
xor
jl
add
mov
in
push
loopne
std
out
xchg
mov
lods
push
call
adc
loopne
sahf
in
cmp
push
gs
push
sub
mov
jnp
ret
mov
js
sbb
sub
popf
loopne
push
add
inc
xor
stos
push
pop
dec
pop
adc
xchg
fisubrl
or
cmp
xor
decl
cld
nop
xor
jle
adc
pop
fcomps
inc
rorl
xchg
ret
add
pop
push
add
es
dec
jo
or
cs
pop
ljmp
cmp
or
and
xchg
xchg
jge
jo
adc
mov
repnz
mov
jl
scas
in
and
inc
push
dec
mov
cli
mov
test
loopne
jle
call
push
movsl
ret
cmp
or
or
mov
mov
dec
rorb
rol
push
lcall
push
inc
push
sub
cmp
jl
xor
fsubl
cwtl
pusha
test
stos
cltd
mov
dec
ljmp
sub
test
adcl
test
or
mov
xchg
bound
pusha
jae
insb
sbb
inc
cmp
pop
mov
call
xchg
bnd
jl
sbb
push
mov
mov
out
mov
mov
test
notl
and
add
jl
jp
fcomps
pop
cli
dec
adc
stc
add
jo
dec
mov
cmp
sub
jge
mov
aaa
push
pop
dec
inc
test
xor
ss
rolb
jl
pushf
lock
mov
clc
mov
sbb
xchg
ret
dec
lods
out
js
adc
lds
add
and
and
js
or
sbb
popa
jne
pop
cmp
cwtl
or
jle
mov
cs
clc
sub
lods
mov
cmp
and
mov
lock
add
mov
sti
outsb
add
arpl
gs
mov
mov
jno
fnstsw
jmp
inc
sub
repz
cmp
jb
lret
fdivr
xchg
adc
push
lea
inc
incb
lret
lock
rorl
sbb
ficoml
dec
cmp
sbb
fisubl
cld
jmp
lea
sub
das
scas
out
test
adc
and
dec
mov
jno
push
ds
mov
rcrl
mov
ds
js
hlt
pop
mov
jo
adc
notb
cs
and
adc
adc
inc
out
lahf
test
sahf
out
mov
sbb
add
mov
mov
push
pusha
sarb
adcb
sar
push
mov
adc
xchg
orb
mov
arpl
cmpsb
xchg
lock
dec
cs
pop
sti
xchg
cmpl
sub
jo
add
shlb
cmp
je
dec
jne
iret
dec
clc
mov
pop
adc
in
push
xchg
mov
push
dec
jb
or
inc
and
pop
adc
fildl
mov
aam
stos
int3
cmp
push
cmp
dec
into
cld
push
movsl
loopne
xchg
or
addr16
xlat
jb
cmpsb
dec
add
xchg
dec
addr16
lret
xor
fwait
cmp
sbb
pop
mov
loope
das
cmp
lret
mov
fmulp
rorb
dec
fiaddl
mov
push
adc
scas
mov
xchg
loop
in
cmp
inc
test
mov
mov
iret
jns
cmpl
inc
andl
in
xchg
adc
xchg
dec
ret
or
cmp
pushf
lahf
ljmp
int
insb
clc
jmp
mov
pop
mov
adc
cmp
push
dec
int
popa
dec
and
mov
sbb
inc
and
mov
fistl
mov
xor
or
addr16
pop
sub
das
add
cmp
mov
insb
lods
inc
hlt
mov
inc
dec
lcall
sbb
and
adc
cs
add
push
add
mov
add
dec
jl
out
adc
inc
pushf
and
les
xchg
cmp
lods
or
cmp
mov
ror
and
out
sbb
fidivl
imul
fistl
xchg
loopne
bndldx
jae
repz
inc
pop
push
rol
shlb
add
or
push
movsl
and
add
lret
lods
ljmp
std
push
mov
lea
and
das
adc
out
or
js
or
rclb
or
xchg
add
and
mov
pushf
sub
dec
inc
insb
jmp
dec
hlt
mov
push
cmp
loop
stc
fwait
pusha
into
ret
int3
inc
mov
out
and
gs
xchg
adc
or
add
push
jge
jl
negb
sub
sub
mov
je
mov
pop
dec
xchg
sbb
jmp
cmp
jnp
inc
dec
jl
add
add
add
mov
or
dec
cmp
sub
ljmp
popl
jge,pn
xchg
and
adc
and
sbb
pop
cmp
jbe
pop
push
cmp
cmp
js
mov
adc
orb
lods
jae
lret
dec
jl
mov
mov
mov
jno
xchg
dec
lea
mov
sub
dec
shl
out
mov
jp
push
push
sbb
cmp
mov
iret
push
mov
sbb
orb
push
and
fcmove
mov
sbb
scas
mov
pop
fdivl
pop
and
mov
and
loopne
dec
pop
in
ds
jo
mov
sbb
lds
movsb
sbb
xor
mov
jl
lcall
push
jge
cmp
clc
add
mov
lea
popf
mov
or
and
inc
cmp
call
les
dec
xor
ljmp
sub
jnp
jl
mov
jae
mov
sbb
adc
outsl
es
or
pop
sub
xchg
sbb
inc
jno
adc
xor
pop
inc
jmp
inc
or
cmp
aam
out
push
dec
mov
pop
lea
and
adc
pop
add
xor
mov
cwtl
jl
daa
inc
lret
and
les
lea
mov
adc
inc
mov
dec
testl
sti
cmc
mov
jg
jns
pop
lods
inc
jp
jne
xor
mov
cmp
mov
or
jmp
inc
inc
mov
and
or
xchg
jo
stos
je
subb
loope
in
nop
add
mov
add
xchg
lea
cmp
insl
cwtl
test
js
cmp
mov
sbb
jmp
out
jp
fimull
or
fstp
ret
lret
xchg
push
or
adc
loope
stos
icebp
adc
stos
push
and
push
xchg
xor
aad
mov
inc
cs
xor
repnz
test
lahf
hlt
aam
mov
dec
pop
pop
pop
xchg
add
ret
mov
xchg
fidivs
or
sub
push
sbb
lea
jo
mov
jo
push
or
mov
dec
das
xchg
dec
fldt
inc
dec
and
js
or
adc
repz
and
adc
lea
pusha
loope
pop
or
add
addr16
inc
jmp
adc
cmp
das
sub
mov
cmp
push
xchg
or
test
add
push
mov
inc
fmull
xor
and
mov
pop
out
jo
sbb
je
int
xchg
mov
xor
xchg
lock
cmc
outsl
inc
pop
daa
jmp
mov
and
cltd
xchg
adc
in
shll
ja
imul
popa
lds
xchg
adc
call
mov
xchg
sub
js
mov
dec
xor
sub
loopne
in
jae
cmp
sub
sbb
sbb
xchg
dec
fbstp
cmp
or
cmp
or
mov
push
jle
dec
push
pushf
jbe
shr
ffree
add
push
sub
popf
adc
ds
mov
dec
fadds
mulb
or
jmp
xchg
push
ror
imul
mov
ss
xor
pop
mov
xor
jo
ficomps
push
scas
dec
adc
inc
push
jnp
cmp
nop
adc
add
pop
inc
outsb
push
mov
inc
mov
mov
insb
inc
adc
xlat
sub
outsl
pusha
mov
cmp
test
or
imul
push
push
scas
out
jecxz
scas
lret
and
nopl
jnp
xor
sbb
add
dec
push
or
aam
or
jmp
cmp
dec
cld
dec
xor
adc
xchg
jo
and
push
movl
aas
xor
mov
jo
or
andl
and
int3
pop
jg
daa
mov
add
mov
xor
dec
push
daa
shrl
add
or
sahf
push
push
adc
call
ret
outsl
xorb
loop
sub
jp
add
push
cs
lcall
push
mov
xchg
inc
adcb
mov
pop
jecxz
mov
into
sub
cli
and
xor
pop
jb
pop
push
rcll
jle
daa
pop
push
and
sbb
in
aaa
mov
cmp
add
neg
inc
lcall
test
lock
ret
xor
je
test
push
and
inc
dec
fs
arpl
or
inc
dec
sub
dec
lock
jl
push
add
sub
pop
dec
or
insb
insb
push
cltd
mov
arpl
adc
stos
lea
adc
js
mov
adc
pushf
dec
push
subb
inc
adc
arpl
stos
call
pushf
add
inc
stos
shrb
je
in
imul
or
arpl
enter
cmp
push
lea
and
add
push
mov
push
test
popf
mov
aad
xlat
mov
orb
add
lock
arpl
add
add
movsl
cmp
mov
xchg
add
sbb
jl
popf
xor
in
testl
push
pushf
das
loopne
mov
lcall
mov
mov
sub
movl
inc
jo
lret
mov
rclb
outsb
movsb
pop
and
mov
cmp
and
jnp
push
dec
push
and
movb
inc
shll
cwtl
cmpb
xor
add
ja
pushf
xor
insb
adc
mov
inc
sbb
dec
dec
adc
mov
or
sahf
fadds
pushf
test
sbb
or
pushf
test
ljmp
jmp
xor
mov
dec
je
add
jmp
subl
jle
and
movsl
add
inc
inc
test
jo
inc
mov
sbb
jmp
mov
adc
dec
das
jb
add
add
test
cmp
ds
cmp
xor
mov
adc
push
push
loopne
insl
add
cmp
jno
jne
or
inc
ret
sarl
sub
shrl
orl
lea
push
inc
dec
jmp
popl
ret
sub
inc
sub
test
and
add
lds
lock
lret
sbb
sub
adc
sahf
adc
push
fsubl
test
lret
adc
adc
pop
xchg
cmpsb
popf
gs
cmpsb
dec
cmp
sub
adc
stc
adc
or
js
in
cmp
push
cmc
in
cltd
or
lock
fs
add
movsl
sub
ljmp
cmp
lock
jbe
cmp
test
cltd
movsl
repnz
inc
add
mov
xchg
je
rcrb
movsl
shrl
or
adc
add
add
push
dec
sub
lahf
or
adc
pop
fsubl
or
ja
jae
jle
aad
test
je
and
inc
or
cld
jns
lods
mov
push
outsl
or
imull
aaa
je
scas
mov
pop
fstpl
jl
stos
adc
sbb
and
push
dec
adc
js
or
das
mov
push
popf
arpl
psubsb
xchg
js
xchg
xchg
arpl
lret
add
mov
pop
and
adc
leave
add
xor
pushf
cmc
dec
pusha
insb
stos
xchg
push
inc
bound
cmp
je
mov
pop
or
mov
jno
fucomp
dec
je
add
jmp
cmp
inc
jbe
pop
inc
and
xor
fsubrl
xor
addb
sbb
sbb
or
inc
push
pushf
xor
hlt
mov
add
mov
pop
and
pop
mov
dec
push
imul
inc
ret
add
stos
inc
shrl
sub
and
pushf
adc
daa
and
cmpsl
push
sub
outsb
out
dec
mov
cmp
fwait
sub
mov
ret
add
je
adc
and
mov
jp
imul
xor
rclb
shlb
lea
mov
adc
out
mov
sub
test
ds
inc
fmull
fmull
mov
add
jp
jl
xchg
sub
lods
xchg
sbb
movsb
mov
daa
lret
in
inc
sub
mov
push
rorl
push
mov
jl
mov
cmc
push
pop
shr
xor
push
or
add
add
cmpsl
add
pop
mov
pop
mov
stos
rclb
jl
jae
loope
iret
jmp
xchg
dec
aam
arpl
cmpsl
pusha
incl
and
outsl
push
inc
pop
cmp
push
jl
sbb
push
mov
lea
cmp
sub
mov
lret
popa
call
push
mov
rolb
hlt
jb
sbb
mov
fidivl
addl
int
sub
sbb
cmp
sub
test
pusha
dec
jae
adc
mov
sub
divl
aam
mov
in
movsb
xlat
xchg
enter
aaa
and
dec
sub
mov
mov
mov
rol
add
dec
sar
or
stc
aaa
inc
cmp
pop
or
dec
lret
clc
les
mov
jne
adc
sbb
inc
ret
lea
lret
inc
pop
and
or
nop
test
jo
push
loopne
mov
push
inc
mov
add
dec
push
or
sub
cmp
fs
insb
sub
lock
push
jae
cmp
fs
mov
add
add
les
cmpb
hlt
ret
push
jne
pusha
or
pop
cmp
arpl
add
jns
div
add
jbe
mov
inc
add
add
sub
mov
clc
jg
mov
movzwl
xor
or
jp
rolb
lcall
dec
mov
xor
cmp
fcoml
inc
mov
sbb
hlt
xchg
pop
cs
jo
hlt
lock
rclb
hlt
aam
or
hlt
cwtl
dec
popf
jg
ja
int
pop
fcomip
lock
addb
or
popa
adcb
repnz
stos
cmp
shr
out
fcmovnu
jg
jno
sub
jbe
dec
cmp
mov
push
add
inc
loop
sbb
gs
mov
mov
insb
movsb
mov
xor
xchg
imul
loop
jno
aas
aam
inc
or
fadds
fs
testb
in
loope
jae
in
andb
cmp
add
cmp
sbb
inc
int
xlat
fisttps
adc
stos
lods
and
stos
fcomps
dec
call
in
dec
xchg
cltd
sub
push
arpl
xor
mov
xchg
mov
in
jbe
movl
inc
into
lcall
fldcw
lea
mov
jbe
jo
cmpsl
push
jp
ds
push
inc
fmuls
jnp
lods
outsb
ja
push
dec
jecxz
cld
fdivrl
jge
jl
add
sub
fnstcw
loope
rcrb
mov
xorb
sbb
mov
push
inc
adc
add
sbb
xlat
shlb
or
cmpl
xor
or
add
mov
pop
and
punpcklbw
add
cwtl
std
mov
pop
std
lea
mov
mov
test
dec
dec
and
jmp
fimull
enter
popf
xorl
xchg
cmp
xor
fnstsw
adc
inc
shrb
loope,pn
and
dec
out
cmp
lret
jne
push
cmp
cs
fistpll
mov
add
or
sub
rcll
cwtl
sub
jbe
pop
jecxz
test
cmp
lds
mov
xor
orl
ds
and
jle
jmp
repz
jge
std
ret
adc
cmp
dec
stc
and
jl
loopne
ficompl
mov
cmp
jmp
add
loop
add
aaa
andl
js
jecxz
pop
pop
ret
ret
loopne
test
sbb
push
mov
lock
push
les
push
das
lea
add
test
rorl
jns
cmpsl
jns
and
insb
inc
cmpsl
jns
cmpsl
gs
pop
pusha
push
add
fwait
jo
filds
lahf
insb
fstps
mov
or
dec
and
stc
or
mov
adc
shl
sti
add
sahf
cwtl
xchg
cld
filds
fmuls
adc
inc
fdivr
push
hlt
pusha
ljmpw
fldcw
les
mov
cmp
and
lock
xor
mov
js
xor
aam
out
cmp
fcoml
cld
and
imul
scas
aam
adc
mov
in
movsl
imul
push
mov
in
jo
loopne
in
mov
rclb
mov
loopne
mov
shlb
mov
inc
or
mov
pop
add
dec
jl
fprem
dec
dec
and
xchg
movsl
imul
js
cmp
aam
in
in
xor
sub
movntq
inc
or
in
jbe
jbe
sub
hlt
arpl
adc
call
mov
gs
ss
pusha
push
jp
sbb
pop
outsl
xchg
inc
es
and
js
sub
xor
mov
mov
sbb
test
push
mov
adc
arpl
repz
cmpsl
rcrb
arpl
and
xchg
arpl
fs
add
pop
dec
mov
sub
and
lods
and
mov
mov
test
in
adc
dec
add
aaa
or
gs
and
add
mov
inc
les
dec
inc
xor
inc
cli
inc
add
stos
lcall
inc
sbb
mov
pop
sub
aam
cmp
jne
daa
rolb
aad
cltd
xor
test
jne
dec
push
lret
dec
shr
add
in
sarl
and
push
cmp
sarl
push
push
dec
pusha
xor
int
inc
jo
cli
mov
sbbb
rcr
dec
mov
pusha
mov
xchg
into
in
loopne
shlb
test
cmpsl
or
push
stos
sbb
sbb
jns
add
pusha
in
push
mov
dec
sahf
add
ds
ret
shl
mov
sbb
das
fstl
imul
add
sbb
dec
xor
dec
fbld
into
xor
cmp
and
loopne
js
mov
into
fldcw
fnstenv
lahf
push
arpl
or
test
xor
bound
das
loopne
jle
loopne
jge
repnz
shrl
sub
push
es
fiadds
jmp
mov
shl
sub
or
xchg
push
mov
adc
adcb
add
cmp
mov
inc
imul
mov
lahf
add
sub
sbb
jns
inc
loopne
add
mov
push
sub
or
sub
and
mov
add
inc
push
sub
ja
inc
loopne
push
sub
jg
loop
sti
decl
cmpl
jl
mov
push
std
push
les
lcall
adc
push
or
push
shlb
imul
mov
js
add
cmpsb
std
out
enter
mov
add
add
mov
hlt
and
cmp
pusha
pop
lret
ficoms
or
shll
push
incb
xchg
mov
sbb
push
sub
fdivrs
lret
adc
sbb
add
add
je
adc
insb
push
nop
sub
sbb
in
rclb
shl
sbb
sub
pop
in
fisubrs
add
enter
adc
push
sub
add
sbb
xchg
xchg
pushf
enter
xor
je
or
xchg
stos
lods
ja
xor
imul
xor
in
aas
pop
in
scas
xchg
inc
inc
in
pop
mov
mov
add
test
repz
jnp
or
cmp
xor
xor
repz
sub
dec
dec
and
sbb
cmp
and
ljmp
and
push
pop
xchg
aaa
cmp
xchg
push
into
inc
and
sub
in
icebp
shl
or
fistps
or
add
neg
lea
rorl
mov
cmp
pop
add
inc
xlat
inc
stos
dec
into
loop
shrl
cld
int
shll
push
jo
xchg
test
hlt
in
mov
mov
cmp
push
pusha
sbb
adc
test
out
push
lea
add
inc
xchg
lods
les
sbb
mov
mov
pusha
sahf
dec
call
fnstcw
js
hlt
neg
and
jne
ret
rol
lods
in
dec
push
in
int
sub
jl
js
push
ja
cmp
fsubrl
cld
add
lock
or
mov
mov
push
sub
clc
add
add
and
dec
and
inc
cmpl
in
fdivrl
or
fsubrl
push
cltd
lcall
aas
mov
fnstenv
sub
or
xor
mov
adc
mov
mov
add
lea
popf
stos
add
pop
push
jb
mov
arpl
lret
lret
mov
adcl
ljmp
mov
pop
negb
or
dec
aam
push
add
in
add
adc
sahf
outsb
cmc
add
out
pop
aaa
in
enter
imul
pop
lret
pop
sti
inc
sub
jmp
or
cwtl
push
stos
sbb
mov
aaa
dec
adc
xor
aaa
jo
hlt
sub
add
xchg
stos
mov
dec
add
mov
pop
adc
stos
adc
imul
test
repz
add
das
lods
push
pop
or
cmp
jp
push
cli
push
aad
imul
je
jns
gs
xor
jae
lcall
jne
mov
shl
rcrb
scas
sub
inc
sbb
jo
or
jb
cmpsb
sahf
imul
ret
xchg
in
sub
and
mov
sub
pop
pusha
and
xlat
call
clc
loope
shlb
add
adc
stc
lock
cmp
adc
mov
add
sub
movsl
sbb
out
scas
clc
push
xor
adc
or
or
in
xchg
dec
dec
cs
mov
push
xor
mov
lods
loope
fldt
loopne
repz
sbb
pop
add
cmp
movsl
push
sbb
imul
rolb
sbbl
push
or
pop
add
and
xor
repz
or
insl
shll
cli
aaa
add
inc
test
mov
jnp
pop
dec
popa
call
mov
ret
xchg
or
mov
sbb
mov
rorl
clc
std
mov
mov
mov
pop
add
mov
or
jmp
pop
or
or
cmp
mov
add
push
ficomps
push
and
imul
out
mov
aad
fsub
inc
sub
xchg
sbb
jmp
sbbl
sbb
push
andl
adc
sbbb
into
andl
jno
add
mov
or
inc
sbb
cmp
sbb
inc
sti
add
call
cwtl
push
xchg
or
jp
ds
push
mov
sarl
dec
movzbl
shl
inc
js
xor
add
rorb
pop
int
mov
xor
dec
inc
sbb
inc
and
add
push
xor
add
sub
hlt
js
push
inc
add
pop
adc
ds
dec
mov
push
shrl
or
rorb
add
add
cmp
sarl
push
loope
pop
jmp
jg
and
cmp
je
or
push
inc
fld
push
and
cmp
aaa
add
pop
sub
aaa
stos
pop
mov
in
push
inc
add
inc
iret
jmp
jmp
mov
push
cli
add
cmp
test
sub
or
push
ja
mov
les
jp
push
adc
push
mov
lea
gs
in
lea
mov
leave
adc
xor
add
je
mov
leave
add
pop
icebp
je
icebp
call
mov
loope
and
in
into
mov
fs
inc
jg
dec
cs
and
pop
jl
cmp
inc
rolb
add
pop
rolb
push
inc
roll
push
sub
and
rolb
test
adc
push
lods
dec
loope
cmp
mov
sti
or
or
or
mov
ss
rolb
pop
shrl
orb
cld
push
je
inc
xor
or
out
leave
add
sub
sbb
adc
inc
popa
xchg
lock
ljmp
nop
nop
dec
adc
sbb
push
aad
adc
xchg
adc
adc
jnp
mov
add
cmp
stos
insl
leave
js
add
fisttpl
orb
xchg
daa
pop
pop
add
mov
arpl
rclb
cmp
fstps
test
test
inc
cmpl
inc
ja
sbb
pop
push
faddp
call
xor
movsl
xchg
lods
stc
dec
es
pop
mov
or
popa
xchg
mov
push
inc
subl
fs
cmp
mov
dec
sub
push
and
dec
mov
dec
push
pop
fisttpl
push
sbb
lds
mov
aaa
xor
inc
mov
mov
add
cmp
adc
bound
lock
or
cmpsb
mov
mov
cmp
sbb
and
sbb
pop
push
adc
sbb
cmp
push
addl
ffree
and
fs
inc
push
and
es
sub
lock
or
adc
and
push
adc
sbb
mov
cmp
jno
adc
jae
add
jl
scas
sub
inc
aam
inc
xchg
insb
or
or
add
test
add
add
sbb
pop
mov
add
adc
mov
push
fimuls
mov
inc
pop
sub
mov
push
scas
adc
pusha
pusha
jo
mov
fildl
cmp
xor
fcmovbe
and
inc
fwait
sub
test
cmp
and
sahf
add
call
adcl
xchg
mov
imul
fbld
out
jmp
add
sbb
into
loopne
push
inc
push
outsb
sbb
xor
push
fisubs
pop
and
xor
mov
cmp
ljmp
push
jle
mov
icebp
add
ja
in
test
cmp
adc
shl
dec
pusha
dec
loopne
adc
cmc
xchg
rcrl
and
push
inc
mov
sub
dec
and
fadds
sub
inc
cmp
orl
roll
ret
insb
int
loop
push
push
lods
mov
sub
push
jp
movzwl
mov
rorb
push
dec
repz
or
adc
adc
cli
loopne
xor
push
sti
mov
pop
xchg
vpmuludq
mov
or
aas
repz
test
push
add
inc
xchg
popf
insb
mov
add
adc
cmp
rol
inc
iret
pop
mov
pop
mov
outsb
adc
xor
push
xor
inc
andb
add
in
lods
daa
es
mov
dec
es
inc
inc
cmpsb
adc
mov
push
add
shrl
pop
mov
and
imul
test
jge
or
dec
loope
jb
fstl
pop
adc
inc
adc
dec
es
inc
repz
add
add
aaa
push
cli
into
cld
faddl
add
lock
cli
push
push
mov
inc
sbb
rorb
add
push
into
or
data16
int
sub
or
loope
enter
loope
and
jo
rorl
ja
xchg
sub
lods
xor
aam
mov
rclb
repz
inc
maskmovq
divl
xchg
iret
in
xchg
or
fsubs
pop
mov
adc
and
fsubrs
push
or
inc
or
aas
inc
movsl
adc
cmc
stos
inc
shr
out
or
mov
cmp
je
lock
or
dec
insl
and
repnz
mov
stos
add
adc
pop
xchg
add
add
pusha
xchg
adcl
fnsave
pusha
adc
lret
adc
je
pop
xor
ss
aad
jmp
xor
xchg
dec
enter
enter
cmp
xlat
int3
sahf
cmp
ja
or
pop
inc
pop
test
hlt
cmp
sarb
add
int3
test
jp
imul
add
add
xor
movsl
addb
lcall
add
dec
xchg
or
movsl
jo
sub
or
call
clc
hlt
mov
sbb
in
dec
push
cmc
push
dec
sbb
push
sub
pop
cmp
inc
mov
push
sbb
in
pop
sub
pop
xor
mov
push
pop
scas
pop
mov
outsl
outsb
mov
imul
dec
insl
jno
pop
loope
faddl
int
jl
roll
cmp
push
pop
mov
push
dec
je
pop
rorl
mov
pop
jae
pop
ds
nop
adc
cmp
sub
sub
sahf
pop
rolb
test
pop
sub
je
jmp
inc
push
addb
xor
xchg
pop
jmp
xchg
mov
enter
push
das
insl
or
mov
adc
inc
ljmp
nop
cmp
popf
or
xor
in
loopne
inc
lods
cmp
dec
mov
movsb
push
mov
dec
adc
cli
push
add
das
jno
xor
cmp
xchg
mov
addb
adc
pop
pop
roll
les
fistl
mov
out
dec
jbe
adc
add
mov
popf
loopne
decb
xlat
dec
pusha
and
sbb
insb
pop
insb
cmp
daa
sbb
push
jae
push
add
rcll
loop
test
cmpl
inc
mov
or
sub
repnz
jmp
test
es
into
movb
mov
sub
cltd
insl
fisttps
in
jmp
arpl
lock
loop
mov
adc
out
pop
shll
mov
pop
add
or
gs
jae
sbb
xchg
and
dec
inc
fwait
mov
ja
adc
mov
or
test
mov
bound
jmp
mov
pop
pop
lcall
or
push
mov
push
and
jmp
and
sub
xchg
aad
inc
cs
sub
push
jo
mov
inc
ret
pusha
push
adc
call
sbb
adc
pop
xor
sbb
lock
mov
fdivrl
test
sub
call
and
sbb
in
dec
and
xchg
mov
and
add
pushf
push
in
xchg
pop
sti
nop
daa
ret
or
mov
mov
mov
lods
movb
push
push
cmp
push
add
in
je
movzbl
inc
dec
pop
push
das
xorl
incl
rcrb
or
enter
cmp
lds
inc
fistps
and
sub
cs
inc
je
dec
lea
push
dec
imul
ja
jmp
pop
sbb
inc
ror
mov
push
lds
sub
mov
push
lret
imul
xor
pop
lock
fdivp
xor
dec
shll
dec
or
lea
xor
lcall
test
lock
inc
jns
je
enter
add
push
pop
jae
add
xchg
dec
cli
int
jge
push
lds
icebp
adc
and
test
or
add
inc
inc
jbe
add
ljmp
movsl
sub
jnp
xchg
dec
fldcw
push
cmp
dec
adc
cli
pop
ja
inc
add
les
pop
push
jne
in
pop
fisubrl
fistl
xchg
or
add
out
dec
adc
xorb
cmpsl
cmp
push
rcrb
pop
adc
pop
clc
and
or
push
dec
pop
cwtl
rol
sbb
push
and
out
adc
and
mov
lds
dec
subl
xor
xor
pop
lea
repnz
mov
lret
mov
jl
fdivrl
push
mov
aas
sub
jb
mov
es
fs
test
inc
xchg
imul
push
xchg
mov
mov
out
dec
popa
sub
nop
daa
sbb
lret
pusha
mov
push
xor
sub
jmp
outsb
out
les
push
xor
sbb
cmpsl
andl
repnz
push
mov
mov
arpl
cmpl
subl
ss
adc
pusha
cmp
xor
mov
inc
adc
inc
and
rorb
add
ljmp
mov
xchg
jns
or
sbb
cmp
jbe
pop
mov
inc
imul
sbb
add
jnp
je
add
dec
jae
cltd
pop
pop
fidivl
sub
mov
test
sbb
inc
in
push
sbb
sti
sbb
sbb
add
dec
je
add
cs
add
lret
inc
daa
cmp
or
mov
adc
sarb
push
dec
cltd
stc
push
sbb
mov
fsubl
or
or
mov
sbb
adc
add
fldl
or
rclb
push
movsl
mov
fimuls
add
les
jb
aam
sbb
sbbb
sbb
inc
inc
in
mov
fists
jl
dec
and
jle
or
lret
jns
pop
dec
cwtl
mov
add
imul
out
adc
icebp
rorb
sub
inc
xor
or
push
jae
mov
jae
es
es
and
lods
sbb
inc
add
mov
mov
jo
sub
flds
jl
clc
out
adc
adc
inc
rclb
out
and
pop
cmp
mov
ja
xor
mov
icebp
xchg
add
inc
call
and
sub
lahf
add
lea
add
adc
icebp
fidivrs
mov
dec
enter
or
adc
push
dec
sub
push
movsl
mov
es
jecxz
xchg
popa
pop
adc
push
test
inc
pop
sub
mov
mov
and
or
push
mov
icebp
xchg
aas
pushf
pusha
mov
inc
dec
xchg
dec
adcb
dec
add
jl
mov
pusha
sti
jle
xor
mov
aad
push
add
xchg
or
dec
xchg
sbb
daa
dec
loopne
push
cmp
ror
push
sub
sbb
loop
inc
cmp
shll
or
mov
pop
sbb
pop
cmpsb
nop
jbe
test
or
cmp
inc
fwait
adc
inc
arpl
leave
pop
pop
sbb
add
ds
and
sbb
dec
cmp
add
addl
mov
adc
pop
add
xchg
idivb
pop
adc
popf
adc
pop
and
cmp
inc
jb
cmpb
and
in
movsl
mov
imul
or
and
and
and
and
imul
jle
or
dec
or
add
js
xlat
inc
push
clc
push
dec
mov
test
popa
movb
sub
int3
xchg
mov
jge
pop
lods
add
fsubrs
mov
aad
dec
imul
jle
fs
mov
mov
adc
push
call
loopne
les
mov
icebp
dec
ret
jb
jge
hlt
into
lahf
fsubr
push
cmpsl
je
aaa
jle
fwait
push
dec
add
stc
cld
push
xchg
add
xor
sub
and
inc
popa
movsl
mov
clc
add
jo
repz
js
inc
adc
nop
sbb
dec
or
lcall
pop
fcoms
push
xchg
test
mov
imul
loopne
adc
call
inc
jle
push
jmp
insl
test
dec
scas
cmp
add
mov
adc
aas
fisttps
inc
inc
jl
pop
push
dec
push
or
in
inc
je
inc
sub
test
aad
into
test
leave
pusha
sbbl
mov
call
sbb
ds
add
inc
sbb
add
or
shrl
les
andl
mov
push
rolb
roll
shl
rolb
aam
adc
dec
jecxz
leave
clc
cmpb
cli
add
lcall
push
addr16
and
gs
das
sbb
mov
add
adc
add
push
mov
cmp
sub
cmp
int3
pop
cmc
sub
addr16
ja
loopne
push
mov
lock
push
adc
jns
jb
sub
mov
cmp
pop
cltd
mov
dec
or
dec
fimuls
out
xor
mov
push
iret
jae
insb
mov
push
dec
loopne
movsb
stos
js
jb
mov
rcrb
sbbl
sbb
sub
leave
add
dec
ficoml
mov
imul
and
rcl
add
xor
add
enter
mov
sub
pop
cld
dec
and
fadds
lods
inc
mov
add
mov
lods
and
outsl
or
mov
inc
push
and
ss
lcall
orb
in
out
push
ret
mov
inc
mov
test
pop
mov
xlat
xor
mov
fdivrl
add
mov
rcrl
mov
cmp
jle
addr16
xchg
cmpsb
mov
loopne
or
insb
jge
js
les
int3
jno
jbe
mov
sub
orb
push
out
jo
jo
mov
pop
mov
push
push
push
sbb
fiaddl
jecxz
push
cmpl
sub
push
push
sbb
incl
jne
inc
cmp
add
ljmp
es
iret
add
dec
mov
or
mov
inc
jecxz
clc
mov
inc
dec
xchg
jo
and
pop
enter
sub
movsb
and
jp
xchg
fildl
addr16
scas
mov
mov
sbb
cmp
cwtl
inc
push
jnp
movsb
leave
out
imul
adc
movsl
int3
mov
insl
cmpsl
test
push
add
sub
and
push
rolb
shlb
mov
adc
inc
add
rorl
add
fisttps
add
push
add
sub
insl
sub
cltd
sbb
push
dec
mov
jb
jmp
pop
xor
fcomps
call
jnp
sub
in
les
sub
mov
xchg
xor
jae
mov
xchg
aam
cmpsl
push
xchg
clc
cmp
ljmp
scas
or
and
dec
dec
xchg
mov
jns
xor
push
mov
push
data16
push
adc
add
adc
orps
in
adc
stos
cmp
mov
pop
les
leave
mov
cmp
add
call
cwtl
out
pop
push
xchg
xchg
jb
add
xchg
jb
add
and
je
push
sbb
fsts
xchg
mov
push
mov
push
xchg
mov
mov
popa
loopne
pop
and
mov
inc
sub
ds
mov
cmp
mov
mov
xchg
adc
adc
test
imul
test
add
add
daa
sub
xchg
jno
xor
dec
cld
icebp
adc
push
addr16
cli
lcall
jmp
pushw
push
push
xchg
fdivl
in
jecxz
scas
jge
adc
add
inc
cmp
popa
jb
cmc
push
adc
sub
cmp
inc
jne
mov
xchg
adc
or
pop
or
sbb
jge
mov
mov
add
adcl
push
fiaddl
inc
xorb
ret
sbb
cs
pop
shl
or
les
loope
pushf
mov
mov
movsb
mov
jo
add
xchg
movsb
cmp
and
mov
lahf
pusha
push
jne
pop
mov
adc
out
in
mov
dec
ret
adc
and
in
test
add
push
xor
xchg
notb
xchg
add
les
leave
lods
cld
mov
mov
sbbl
aas
sbb
popf
pop
dec
add
lock
fwait
mov
cmp
dec
mov
ja
lret
push
test
cmp
or
testb
dec
sbb
push
xchg
hlt
sub
xchg
test
das
ja
mov
dec
and
ja
decl
cmpl
inc
jbe
inc
xor
inc
sbb
mov
mov
lea
test
adc
dec
addl
add
sub
add
mov
adc
and
xor
or
add
add
push
pop
ljmp
sbb
rolb
ret
movl
subl
or
orl
mov
push
out
xor
or
call
xchg
les
in
mov
adc
ljmp
lea
pop
sub
mov
inc
push
jmp
jle
xor
xchg
cli
add
mov
addl
pop
pop
dec
or
jmp
ret
cltd
mov
xchg
xchg
push
xor
xor
clts
xchg
les
fistps
xor
xor
adc
or
fs
sub
xchg
jmp
adc
sbb
push
and
push
mov
into
jae
enter
push
pop
push
or
inc
es
mov
adc
or
push
cmp
movsb
fiaddl
add
outsl
fstpt
and
lret
and
in
lea
cmp
push
mov
aad
sbb
inc
cmp
mov
adc
lods
xorb
xor
ss
ret
imul
jl
add
mov
or
sbb
insl
dec
loopne
test
leave
mov
mov
dec
jnp
inc
pop
dec
das
aam
scas
add
adc
ss
push
mov
in
mov
mov
dec
cs
stos
pop
jb
outsl
bound
dec
rolb
repz
push
ret
add
mov
pop
push
sub
sbb
pop
andl
and
loopne
or
andb
sbb
jg
iret
pop
inc
cmp
dec
mov
cmp
mov
xchg
mov
push
fcoms
push
dec
sbb
xlat
adc
test
dec
stos
adc
iret
loopne
into
fwait
or
mov
jnp
jle
ss
add
adc
mov
push
fmuls
je
sub
dec
mov
in
insl
push
mov
ret
push
cmp
xor
dec
sti
xchg
jbe
and
or
rcrl
and
dec
inc
bswap
xchg
or
jmp
imul
int
je
push
ret
fwait
xchg
pop
mov
movsb
sbb
xchg
adc
xor
sub
and
cmpsb
lds
sbb
cmp
fidivrl
xchg
cmp
inc
push
push
adc
adc
and
push
sbb
fsts
test
ja
cmpl
xchg
or
and
xor
sarb
add
dec
es
push
sbb
rcll
bound
lds
scas
mov
and
mov
jb
or
and
adc
adc
mov
sbb
add
adc
dec
mov
jle
and
sub
inc
std
ss
dec
aam
and
jo
and
dec
in
xor
adc
mov
add
lret
in
loopne
in
in
es
stc
sbb
add
add
add
addr16
hlt
adc
mov
and
ja
sub
aad
call
add
outsb
mov
cmp
les
fcoml
pop
cmc
pop
mov
mov
lods
xchg
adc
or
mov
mov
and
jmp
or
sbb
je
movl
dec
xor
pop
les
add
add
cmp
pop
or
mov
or
xchg
loopne
push
or
adc
repz
aaa
mov
dec
xchg
cmp
inc
cwtl
mov
jle
or
or
mov
lahf
dec
push
leave
jne
sub
jnp
add
push
cmp
test
pop
add
ret
xchg
movsb
shll
ret
mov
fistps
cmp
jg
push
cld
cli
cmpsb
adc
add
jecxz
jo
inc
xor
shll
lahf
ret
in
pop
dec
mov
das
or
aad
aaa
pop
jl
and
sub
cmp
jg
sbb
sbb
adc
and
gs
adc
sbb
inc
imul
pop
jge
divl
add
fists
or
aam
add
inc
mov
adc
lea
push
jg
push
sbb
mov
aaa
and
sub
les
movsl
ss
loopne
addr16
mov
lods
add
cs
mov
mov
sbb
aas
jne
mov
or
jns
repz
push
xor
int3
cmp
and
push
sbb
and
enter
into
push
into
fistpll
lcall
sbb
push
sub
ret
je
sub
or
sub
sbb
add
push
dec
adc
movl
insl
adc
mov
jns
and
rorb
fwait
loop
aam
xchg
inc
xchg
or
cmp
jl
add
jl
filds
shl
add
mov
enter
jl
mov
adc
push
sbb
sbb
mov
sbb
xorb
or
mov
pop
jmp
cmp
cmpsb
pop
outsl
dec
and
out
add
adc
jne
push
inc
js
inc
dec
pop
lret
xchg
cmp
addr16
sbb
jecxz
into
mov
push
icebp
test
repz
mov
pushf
mov
or
push
or
or
lock
repnz
jae
sbb
outsl
pop
lock
nop
push
in
add
add
xchg
xchg
or
or
add
adc
add
and
sbb
loopne
inc
pop
cs
andl
jb
lock
sbb
xor
mov
data16
jb
mov
sbb
mov
pushf
adc
sahf
or
dec
pop
inc
in
mov
lret
cmpsl
lcall
fwait
xchg
and
or
ret
push
adc
or
sarb
fs
inc
push
stc
or
sbb
jle
gs
in
dec
dec
lea
dec
jmp
mov
adc
mov
mov
mov
hlt
fists
lahf
or
in
sbb
in
test
popf
pop
test
mov
outsb
sbb
pushl
sbb
rorl
add
rorl
or
dec
fadds
dec
sbb
test
sbb
cli
xchg
add
adc
xlat
sub
cs
and
clc
cs
mov
xor
shrl
lods
jo
inc
jl
sbb
xor
inc
dec
ficoml
jl
cmpl
sbb
add
mov
aam
add
sbb
cmp
das
les
jle
mov
lea
lods
sbb
inc
lods
scas
add
cmp
cwtl
mov
scas
push
fbstp
fidivl
pop
pop
xchg
push
clc
test
mov
xor
stos
xor
and
cmp
orb
sub
jmp
sbb
lods
mov
outsl
cwtl
push
sbb
xchg
sahf
jge
mov
loop
jae
jge
push
iret
cmpl
cmp
or
or
pop
ljmp
mov
xor
cmp
aas
jo
sbbb
imul
push
orb
mov
push
mov
sbb
jae
repnz
jne
inc
inc
push
adc
xor
or
inc
add
adc
rorl
add
adc
push
add
ljmp
sbb
sub
push
inc
repnz
inc
fcmovne
dec
or
sub
addr16
inc
push
or
sbb
mov
sbb
inc
and
mov
jbe
inc
sbb
push
add
shrb
xchg
rolb
adc
xor
mov
cwtl
xor
cmp
sub
push
inc
call
subl
push
idiv
lea
push
xchg
push
mov
xor
sub
and
sub
mov
xor
xor
fwait
add
or
add
sub
es
jo
dec
dec
add
sbb
xor
sub
dec
orb
fisttps
add
dec
push
mov
aaa
sub
add
dec
add
sub
data16
outsb
sub
mov
xor
pusha
lcall
les
rcrl
add
lods
test
mov
xor
jl
shrl
pop
jne
mov
mov
imul
hlt
pusha
jnp
ret
push
cld
or
scas
dec
fcmovb
or
enter
pushl
sub
mov
inc
or
rorb
cmp
inc
and
loopne
add
mov
or
sbb
insb
or
adc
daa
or
inc
or
inc
sbb
push
cwtl
pop
push
inc
jmp
mov
scas
adc
cltd
pop
xor
add
outsl
add
adc
subl
xchg
dec
lock
push
imul
lock
adc
xchg
mov
clc
mov
pop
stos
and
push
xor
mov
cld
jo
xor
xchg
cmp
adc
xorb
xlat
neg
push
xor
push
sbb
inc
pop
adc
inc
enter
cmp
xor
and
in
cmp
sbb
push
jo
mov
cmp
outsb
push
or
inc
xor
inc
and
push
xchg
negl
mov
inc
jbe
xor
lret
sbb
inc
cmp
push
sbb
cmp
lods
jnp
test
mov
xchg
jo
or
clc
add
imul
jp
jne
jmp
lahf
mov
cmp
arpl
or
jbe
fidivs
cld
dec
sbb
xor
add
jb
pop
daa
pop
push
ficoml
aad
add
test
cwtl
call
or
jge
sub
push
xchg
mov
orl
mov
jecxz
xchg
movsl
mov
mov
adc
imull
and
lcall
popf
jle
push
fadds
push
push
fwait
lcall
mov
mov
and
cmp
mov
mov
push
cwtl
push
or
sbb
jo
mov
scas
sub
mov
lock
popa
insl
mov
dec
or
push
js
mov
dec
lcall
das
pop
cmp
blci
mov
fmull
fildll
push
inc
sub
inc
adc
mov
pusha
adc
jne
stos
adc
pop
mov
push
pusha
push
movsl
sahf
push
cld
inc
dec
xor
xor
push
cmp
adc
jae
push
push
inc
pop
loop
mov
mov
mov
dec
cmp
cwtl
hlt
add
sub
add
adc
push
and
push
fwait
lods
fimuls
or
enter
je
dec
ss
inc
pop
adc
pop
add
mov
push
or
mov
inc
jb
mov
cmp
int3
jb
adcl
xorb
add
inc
in
add
add
adc
sbb
xchg
ljmp
rorb
stos
hlt
mov
xor
mov
ds
push
push
inc
xorb
inc
inc
imull
ds
add
std
xor
jns
imulb
jb
cmp
fisttps
jge
arpl
dec
and
sbb
cli
add
movsl
shll
or
adc
dec
cmp
sub
push
and
adc
icebp
dec
xchg
adc
adc
mov
inc
jmp
rolb
int3
div
mov
mov
mov
cmp
out
aaa
out
inc
fcomps
or
lea
jne
adc
cmp
enter
push
mov
jo
movb
push
call
roll
mov
lock
lcall
and
jo
mov
push
lahf
lret
mov
lock
and
and
sub
cmp
jbe
jno
sub
cmpb
out
and
inc
or
cwtl
sub
add
xor
and
and
orb
push
test
out
push
lea
inc
pop
lea
cmp
push
sub
ljmp
dec
hlt
pusha
sub
add
add
mov
jmp
cmp
imul
pop
lcall
push
xchg
pop
jae
je
mov
mov
sbb
fsubl
adc
repz
push
cmp
sub
push
push
or
int
adc
and
push
and
mov
loope
and
lret
test
sbb
inc
or
push
aaa
cmp
test
push
push
mov
jge
sbb
pop
pop
test
mov
mov
fistl
addb
jg
or
xchg
sub
and
rcll
andl
lods
xor
jmp
leave
add
jnp
imul
sub
sbb
jne
inc
adc
push
cmp
mov
orl
test
ds
cmp
data16
sub
push
inc
fadds
mov
lock
aam
pop
je
and
jns
add
cmp
lcall
inc
rcl
mov
int
sub
sbb
jecxz
lret
ret
insl
or
inc
cwtl
jecxz
iret
push
cwtl
nop
out
hlt
add
add
addr16
jns
or
jb
mov
add
jb
xor
or
add
scas
hlt
add
lock
in
sbb
add
movsb
dec
add
shl
and
inc
xchg
push
and
cmp
icebp
clc
mov
xchg
xchg
add
mov
push
shlb
inc
addl
jp
inc
lret
mov
adc
push
mov
cmpb
add
mov
xor
cltd
out
sbb
cmp
mov
movsb
das
aas
push
mov
jle
dec
adc
lock
test
mov
imul
inc
sbb
push
inc
xchg
mov
dec
loop
bound
das
sbb
xchg
test
or
cli
push
or
mov
lods
xor
xor
movmskps
jg
adc
rcll
jmp
sbb
inc
adcl
movhps
push
inc
jb
test
mov
stos
in
jb
pop
sbb
cmp
jno
rorb
xchg
cli
dec
and
out
stos
mov
or
bound
dec
inc
out
sarb
mov
addr16
mov
fsubs
lahf
adc
mov
inc
hlt
mov
xchg
sbb
stos
enter
fisttps
leave
push
filds
call
pushf
xchg
iret
mov
aas
adc
xchg
xchg
je
or
mov
dec
adc
sar
adc
cmpsb
add
jb
aaa
fldenv
pop
test
call
lock
mov
rorb
movsb
inc
mov
lcall
clc
inc
ret
insl
sahf
sbb
xor
add
int
sbb
push
dec
jl
jb
insb
popf
sbb
and
rcll
sbb
scas
add
push
subl
or
and
sub
fsubrs
popa
or
rcll
in
jnp
sub
push
scas
mov
mov
sub
inc
or
sbb
lret
iret
add
and
sub
xor
sti
sbb
and
loopne
fcoms
test
cmpsb
faddl
test
push
jmp
and
cltd
dec
sbb
add
aas
jo
stos
push
xor
jo
aas
es
xchg
push
mov
inc
mov
jae
mov
repnz
add
adc
or
jle
imul
mov
cld
cmp
jge
lods
sbbb
les
inc
adc
dec
in
fistl
mov
cld
jl
adc
lret
push
or
scas
pop
nop
dec
and
inc
leave
lret
ret
or
sbbb
fdivrs
stc
insb
mov
mov
test
lea
mov
cmp
rcll
xlat
mov
push
test
add
or
mov
ret
xchg
and
notb
nop
rolb
int3
enter
rolb
aaa
es
or
xor
rorl
cltd
adc
inc
mov
mov
add
or
push
add
cvttps2pi
in
nop
cld
add
mov
les
and
xor
push
fidivl
xchg
sarb
test
push
jle
cwtl
clc
stos
xchg
dec
cld
cld
jge
mov
addl
incl
xor
jbe
inc
dec
adc
clc
inc
cmp
jl
jae
fmuls
xchg
out
dec
shlb
add
daa
pop
push
mov
sbb
cwtl
lock
loope
or
add
insb
mov
or
dec
push
aam
loopne
test
idivb
mov
call
or
pusha
sub
loop
rclb
pop
fiaddl
mov
push
adc
cvttps2pi
jle
and
call
add
sub
insl
call
mov
sub
ds
pusha
in
push
adc
sbb
mov
daa
add
adc
dec
or
jmp
adc
ficoms
and
fsubs
aam
push
jle
mov
fadds
out
jge
data16
mov
call
fmuls
inc
jge
jge
movzbl
add
inc
inc
push
jl
inc
dec
jl
add
sahf
mov
pushf
shrb
jge
mov
aam
ret
shlb
add
and
outsb
add
jb
cmp
add
jns
js
lods
int3
inc
or
lock
xor
xlat
outsb
mov
lds
stos
and
pop
ja
and
xchg
jo
ret
xchg
mov
rol
sarb
leave
xor
pusha
adc
sets
xor
mov
mov
adc
nop
outsl
sbb
jne,pn
push
sub
cmp
call
inc
test
cmp
add
adc
mov
sbb
daa
insb
adc
inc
inc
adc
sar
push
cmp
add
inc
push
push
jecxz
ret
cwtl
sbb
clc
jg
jg
push
xchg
out
daa
lock
in
xchg
inc
xlat
mov
sub
sbb
and
loopne
pop
cmp
jae
inc
fidivs
cmp
jp
or
testb
inc
pop
push
out
popa
jb
xor
jne
xchg
shl
or
aam
cmpb
icebp
lea
push
lock
sub
aas
push
adc
into
sub
jecxz
mov
les
inc
clc
rorb
jo
test
jb
dec
adc
jb
jo
pop
xchg
add
orb
mov
xor
cmp
mov
cs
add
add
add
insb
test
rcrl
add
in
mov
jns
and
or
inc
xlat
or
or
push
adc
xor
data16
cmp
loop
test
mov
fsubl
add
mov
jge
xor
push
pop
loopne
and
sub
adc
lods
jmp
loop
jl
sbb
push
adc
js
push
jp
push
pop
push
addb
decl
sub
dec
dec
xchg
dec
pop
jmp
inc
adc
fcomps
push
fsubs
std
cltd
imul
mov
dec
adc
in
adc
dec
or
adc
push
cmp
xor
into
roll
dec
sub
cmp
ret
adc
push
push
aam
dec
or
or
clc
out
inc
das
roll
outsl
sbb
pushf
and
add
or
jb
xor
out
movsb
fmul
sarb
sub
dec
ret
cmp
mov
add
inc
call
dec
in
add
fbstp
push
xor
xor
repz
mov
sub
jne
fdivl
and
in
repz
add
mov
lock
ljmp
dec
jbe
enter
sbb
mov
fildll
ja
mov
sub
push
add
jbe
imull
or
and
mov
add
fwait
and
stos
daa
out
mov
xor
xor
cltd
or
enter
push
lds
adc
dec
js
fidivrs
orl
push
push
sarb
adc
loope
pop
mov
cmp
add
adc
xchg
es
push
test
cmpl
rcl
and
and
jmp
and
sbb
orl
ss
sbb
call
or
sub
js
push
mov
xor
popa
cmpsb
add
adc
loope
xchg
adc
inc
push
movsl
inc
aam
arpl
cmpsl
jle
popf
fs
push
inc
inc
cmp
or
test
mov
jmp
rcrb
push
lret
nop
fadd
lcall
xor
rolb
or
pop
repz
pushf
mov
sbb
sbb
mov
lcall
and
push
ficomps
outsb
pushf
sub
mov
mov
dec
or
and
jb
std
inc
cmp
jl
ret
and
or
mov
movsb
scas
xor
push
dec
inc
insb
and
in
fstps
mov
sbb
push
arpl
add
ficompl
lods
cmp
sub
fmull
fmuls
sub
jno
clc
or
sbb
ss
or
ret
inc
iret
add
lahf
cmpsb
les
and
or
imul
cmp
andb
push
push
push
mov
es
mov
andb
xor
push
nop
push
aad
loopne
sub
dec
add
cmp
sbb
xchg
jge
clc
roll
inc
or
dec
in
mov
mov
jo
and
inc
pop
call
xor
pop
inc
es
in
adc
add
xor
outsb
aaa
jge
andb
mov
mov
daa
test
call
inc
shll
sti
jg
insl
inc
dec
int
inc
ret
push
sub
adc
xor
into
clc
and
add
sbb
cmp
stos
fwait
outsl
loopne
mov
mov
enter
inc
mov
inc
jmp
adc
jge
mov
rcr
sub
sub
inc
loopne,pn
fs
inc
fsubs
xchg
aam
dec
inc
xchg
int3
bound
pop
dec
das
test
dec
enter
xchg
addr16
rol
loopne
dec
sub
mov
aaa
test
movsb
jnp
sub
push
push
xchg
dec
in
fadds
jno
orb
jno
inc
ret
inc
movsb
mov
sbb
insl
inc
call
pop
cwtl
push
leave
pop
mov
xchg
push
add
xchg
dec
insb
adc
and
shrb
fimuls
push
test
sbb
loopne
jns
jo
xor
xchg
and
bound
dec
jae
out
inc
push
cmp
sub
call
sarl
dec
cmp
sub
mov
subb
mov
das
jns
loop
fbstp
xlat
sahf
rcrl
fdivs
xor
fisubl
mov
test
adc
add
xchg
mov
jg
add
pop
or
pop
jno
add
adc
push
and
xor
hlt
jecxz
cmp
pop
sub
add
out
sub
loope
xor
ljmp
jle
xor
dec
xor
cmp
cmp
xlat
std
mov
sub
add
pop
test
xchg
mov
sub
dec
test
push
mov
movl
loopne
mov
es
loope
push
aam
adc
cmp
movsb
sub
inc
mov
test
inc
and
sti
add
je
adc
dec
pushf
cs
jno
push
and
push
inc
rcl
mov
imul
sub
add
out
mov
int
out
fiaddl
or
adc
test
inc
push
enter
push
pop
jmp
es
pop
dec
adc
lds
xlat
rorl
movb
add
add
adc
mov
sbb
mov
xchg
loope
push
inc
adc
and
or
cld
xchg
rcrb
mov
push
nop
stos
sbb
movsbl
xchg
bound
add
sbb
sahf
sbb
pop
jl
lea
mov
dec
inc
ja
mov
push
sbb
sub
cmpsb
add
clc
jne
testb
aaa
and
mov
add
adc
mov
mov
test
mov
inc
jl
test
cmp
sub
ds
xor
sar
or
ret
adc
mov
nop
clc
push
and
nop
xchg
inc
and
cmp
jne
in
sub
and
inc
dec
adc
adc
or
push
scas
or
ljmp
syscall
jns
inc
mov
mov
ds
or
dec
adc
fstps
leave
lea
rorb
mov
cmpsb
xchg
mov
xchg
repz
sbb
pusha
out
decb
sub
push
sbb
dec
xor
xor
cmc
inc
or
jle
cmp
jle
adc
xor
push
mov
cmp
fdivp
fcmovne
adc
or
lock
mov
or
cmp
out
push
jae
adc
cmp
sub
cmpl
aaa
mov
jl
pushf
dec
pop
decl
and
add
out
and
inc
popa
scas
cwtl
push
cmp
xchg
sti
test
imull
cmp
int
sbb
pusha
or
cmp
lods
test
cmp
test
mov
add
sbb
mov
mov
insb
mov
inc
cli
inc
add
in
leave
mov
jge
neg
add
shrb
or
mov
push
add
insl
jb
pop
inc
push
aas
inc
or
mov
out
cmp
jg
lret
sub
pushl
sub
std
or
push
daa
jle
push
xor
ret
add
jns
int
loope
sbb
add
pop
sbb
cmpsl
mov
adc
adc
addb
sbb
sub
dec
sbb
rcrl
lret
jnp
inc
inc
shlb
dec
arpl
ja
cs
or
inc
andl
cli
sahf
adc
enter
mov
in
fdivr
faddl
mov
mov
cli
pop
inc
pop
pop
addr16
add
shlb
dec
adc
sub
test
sbb
lods
xorl
mov
cmpsb
jecxz
add
movsb
dec
pop
sbb
add
pop
mov
or
lahf
cmp
xchg
dec
test
js
jl
or
outsb
mov
jge
negl
sbb
movsb
sub
loope
xchg
mov
jae
popf
jle
jecxz
inc
add
xor
repz
dec
inc
mov
movsl
sbb
dec
xchg
and
adc
mov
into
jl
pop
sbb
inc
cmp
in
repnz
inc
or
fwait
aas
push
add
popa
or
loope
fisubrl
call
or
jnp
ret
enter
xor
dec
jg
loop
mov
add
iret
call
inc
fstl
sbbl
cmpw
lahf
pop
roll
icebp
mov
aad
add
xchg
dec
imul
roll
inc
pop
out
jae
in
je
xor
imul
jbe
xor
loopne
hlt
and
push
fcomps
in
iret
xchg
or
xlat
addb
dec
mov
imul
ret
loop
in
or
mov
les
js
inc
mov
adc
test
adc
lock
decl
jl
push
jmp
or
arpl
imul
pop
outsl
lcall
and
cwtl
clc
or
int3
icebp
pusha
loope
mov
xchg
or
sti
aaa
insb
push
fwait
les
mov
int
add
add
jl
sub
mov
aam
popf
sbb
dec
cmpsb
inc
cmpsl
add
inc
outsl
rorl
bound
repnz
repz
popa
stos
dec
cltd
dec
cmp
dec
add
add
outsb
push
adc
ljmp
mov
add
sub
mov
sub
push
jae
fdivr
cmpl
lea
sub
pop
xchg
rcl
lcall
xchg
insb
lea
xchg
jmp
cmp
xor
jno
sub
mov
ficomps
sti
add
push
jge
cmc
inc
xchg
xor
incl
aad
lcall
add
xchg
add
aam
nop
add
mov
popf
add
adcb
adc
sti
es
mov
mov
add
or
cmp
xchg
or
lret
jo
mov
adc
into
idivb
push
xor
pop
push
ret
rolb
pop
lea
adc
adc
and
into
arpl
nop
or
mov
nop
mov
xchg
mov
add
pusha
add
outsl
shlb
addr16
pusha
sbbb
mov
loopne
shll
es
leave
or
add
sahf
or
pusha
fidivrs
fadds
fstps
push
bound
mov
jo
inc
add
sbb
add
sub
or
or
cmpsb
push
pop
shll
or
adc
push
push
fiadds
adc
and
cs
or
and
fidivrl
sub
and
sbb
fs
jmp
sub
sub
or
xor
mov
and
pop
or
pop
ficoms
adc
rcrb
sarb
lods
sub
hlt
mov
sti
adc
dec
icebp
inc
and
sub
jae
popf
cmp
and
cmp
cmp
jb
push
inc
fs
cs
jle
jns
outsl
pop
adc
fs
inc
cmp
add
or
fs
push
nop
in
loope
pusha
xor
dec
sub
rcrb
mov
shll
inc
mov
xchg
lret
xor
sbb
sub
push
adc
mov
push
sub
push
xchg
lcall
pusha
and
sub
insb
cmp
mov
adc
mov
cmpsl
pop
leave
fsubl
pop
test
inc
hlt
pushf
call
pop
sub
push
mov
pushf
jmp
and
iret
sbb
push
cmc
xchg
or
inc
pop
dec
loope
sbb
incl
js
mov
xor
jmp
mov
sbb
xchg
mov
and
out
push
adc
pop
pop
mov
outsl
push
sbbl
loop
out
sub
iret
jl
loope
jb
mov
movb
test
dec
cmp
call
xor
inc
ret
pusha
mov
movsl
das
sub
fs
xchg
loope
and
sub
sar
or
add
mov
or
mov
adc
call
cmc
mov
nop
sub
pop
rolb
push
or
cmpsb
mov
add
inc
stc
lea
or
xlat
inc
pushf
cmp
cmp
shl
inc
pop
xor
sub
decl
bound
push
push
movsbl
fsubr
jmp
lea
xor
cld
and
dec
call
inc
loopne
fsubs
into
push
jmp
test
mov
loop
push
test
lods
lods
ret
sub
int3
mov
sahf
ud0
or
loopne
adc
jecxz
inc
loopne
cmpb
add
jns
jge
clc
aaa
adc
jne
or
or
or
or
insb
fdivl
fisubl
pop
add
sbb
mov
mov
pusha
xchg
faddl
pusha
jno
jo
xlat
sahf
add
push
inc
push
dec
or
enter
loop
dec
scas
or
cmc
test
adc
cmp
adcb
sbb
push
cmpsl
cmpsb
test
push
shrl
ss
cmpsl
push
in
xlat
test
and
dec
aad
add
pop
pop
decl
xchg
mov
push
hlt
sahf
xchg
dec
fldl
sbb
les
incb
idiv
or
inc
pop
push
pusha
mov
add
mov
sbbb
xchg
pop
sahf
test
jne
sti
push
push
adc
xor
loop
inc
dec
fxch
cmp
jle
mov
push
arpl
aam
lock
out
mov
in
sub
pop
jg
add
and
add
jne
test
fsubl
sbb
ret
mov
cwtl
add
sub
inc
mov
push
xchg
sub
sub
adc
outsb
mov
push
lds
cs
arpl
in
mov
adc
pop
mov
inc
sub
in
mov
and
sub
mov
cmp
mov
stos
adc
xor
stc
pop
and
gs
mov
or
push
lea
jne
stos
pop
and
ret
sub
sbb
sub
jns
and
adc
adc
fcmovb
dec
adc
push
test
lret
mov
outsl
jecxz
repz
push
xchg
xchg
sub
imul
xchg
mov
repnz
push
popa
sbb
mov
sub
rclb
add
jge
jae
dec
ss
jge
or
add
inc
jo
je
mov
icebp
jge
inc
and
inc
sub
dec
and
cmpsb
xor
mov
ret
add
sbb
pop
add
add
cs
or
les
add
jb
inc
arpl
adc
push
mov
cs
sbb
imul
jbe
push
xchg
sub
pop
scas
inc
push
sbb
or
mov
sub
mov
stos
cmpsl
add
leave
jmp
inc
jmp
mov
add
mov
adc
insb
cmp
lret
jp
mov
or
repz
mov
jl
mov
loop
pop
lahf
inc
cld
icebp
jl
hlt
mov
mov
mov
movsl
and
cld
pop
push
inc
inc
rolb
adc
and
incl
pop
sbbl
cli
mov
psubsw
pop
xor
inc
fcomps
adc
fsubl
addl
xor
jp
fwait
pop
lea
pop
cmp
lods
sub
add
aad
das
fidivrl
test
push
xor
pop
or
sti
adc
inc
les
loope
lods
jno
test
cs
and
sbb
xchg
sahf
out
pop
movsb
hlt
out
movl
jno
iret
or
cmp
jl
dec
ret
jae
cltd
add
out
lret
aaa
fistl
xor
jl
ret
je
mov
testl
addr16
pushf
js
dec
imul
xchg
in
test
cmp
jnp
jnp
inc
loop
out
mov
gs
cmp
test
cli
push
lock
cmp
hlt
jo
push
adc
daa
push
lock
insl
push
incb
adc
clc
mov
push
sarb
into
jmp
outsb
sbb
mov
lcall
call
stc
addb
incb
addb
popa
xchg
cmc
mov
cmpb
ja
dec
dec
jbe
rorl
out
rcrb
dec
cmpb
sbb
adc
sub
mov
repz
enter
cmp
dec
mov
inc
inc
sti
push
rclb
push
in
inc
movsb
add
add
pop
sub
add
pusha
inc
jmp
dec
pop
cmp
push
aas
or
adc
xor
scas
or
iret
imul
out
push
stos
mov
pop
lret
ret
push
mov
jb
mov
fs
sub
push
movsl
sbb
in
jne
mov
shlb
pop
jmp
cld
jecxz
inc
or
call
call
aaa
shl
inc
xchg
mov
adc
roll
imul
and
inc
popa
loopne
push
dec
gs
aas
fisubs
loopne
ret
in
add
test
fdivs
or
clc
mov
nop
pop
clc
mov
sbb
imul
cmp
movsl
xchg
add
dec
add
add
enter
outsb
sbb
xchg
or
sbb
rorb
shr
cld
or
push
out
add
cltd
push
ds
sbbl
rorl
in
cmp
pop
jae
jp
xchg
sbb
push
sub
jae
jae
frstor
mov
into
mov
mov
int
in
addr16
xlat
leave
mov
cmc
pop
mov
aaa
mov
int
cmp
xor
sub
or
aaa
aaa
add
leave
clc
pop
enter
aas
fwait
fwait
fwait
in
and
cmp
shrl
push
andl
adc
std
mov
sub
int
outsb
mov
sub
mov
sahf
pop
xor
add
out
mov
lods
inc
push
xchg
and
out
add
pushf
fcmovnb
insl
dec
or
iret
orb
out
out
cmp
pop
and
or
fstps
add
inc
lea
ljmp
xchg
in
dec
mov
fcmovne
xor
nop
pop
sarb
out
fs
inc
sub
imul
xor
outsb
insb
lcall
js
push
or
out
testb
out
stos
push
mov
cltd
adc
out
out
inc
aaa
mov
ja
lock
je
out
out
roll
xorl
pop
adc
iret
out
int3
popf
add
scas
sub
out
mov
mov
or
push
stc
jmp
idivb
outsb
outsb
outsb
mov
push
and
cmpsl
xor
outsb
loopne
lds
loope
jno
arpl
xor
sub
mov
idivb
int
and
cmp
and
iret
pop
fidivrl
xor
imul
loopne
stos
shrb
shlb
fdivrl
pop
inc
adcb
and
jae
sti
fdiv
jecxz
adc
xor
int3
int
out
sub
test
add
add
out
dec
aaa
stos
call
fsubrl
dec
lods
or
or
out
mov
sbb
movsb
xchg
mov
faddl
daa
xor
rol
sub
arpl
jle
clc
fcoml
fsubrl
mov
mov
sbb
mov
mov
lret
sbb
sbb
out
xor
pop
rol
or
icebp
fwait
fwait
fwait
fwait
outsb
popa
push
aad
push
mov
in
ja
outsb
lahf
mov
or
dec
cmp
aaa
sub
out
lret
ss
outsb
outsb
outsb
push
movsb
aas
inc
repnz
int3
outsb
outsb
outsb
outsb
outsb
mov
loope
inc
insl
cmc
push
dec
int3
mov
or
test
idivb
outsl
dec
adc
adc
in
out
out
mov
in
sbb
dec
xorl
sbb
stos
jne
arpl
out
out
add
pop
dec
inc
pushf
and
mov
fcmovne
out
ret
mov
mov
dec
pusha
pop
push
inc
adc
insb
lahf
fwait
sub
icebp
jecxz
ret
mov
fcomi
dec
push
cmp
pop
mov
fmul
mov
outsb
outsb
clc
cwtl
jbe
pop
push
aas
adc
stc
popa
fcompl
mov
mov
xchg
sbb
inc
push
inc
xor
out
loope
jb
roll
mov
std
insb
cmp
nop
lret
lahf
ror
lods
add
stc
popw
adc
push
pop
add
mov
ficompl
lds
push
daa
pop
inc
xor
add
fcomp
shll
jl
out
out
popa
leave
jl
sbb
or
push
shl
out
mov
push
push
mov
sub
imul
out
push
test
mov
test
bound
adc
and
aaa
cmpsb
into
shll
insb
pop
jae
push
cli
or
xor
out
ja
ljmp
test
in
dec
sbb
sub
aaa
jnp
in
xchg
in
faddl
outsb
outsb
jb
or
adc
mov
mov
movsbl
dec
pop
dec
sbb
insl
ror
sub
fildll
cli
clc
in
cwtl
iret
testb
lret
sub
sub
out
add
mov
stos
aam
mov
out
cmc
jb
push
fadds
push
pop
adc
cmc
out
out
jne
mov
scas
mov
pop
dec
xchg
out
aas
xor
mov
decb
out
aad
jnp
push
iret
addr16
fwait
xchg
adc
xlat
ja
xor
lcall
push
pop
and
dec
in
out
cmp
rcr
int
sub
lret
jnp
sbb
push
cmp
sub
xchg
dec
int3
arpl
dec
and
push
out
add
mov
jle
inc
jnp
jb
cmp
lods
adc
push
repz
mov
push
sub
mov
jo
jb
dec
mulb
xchg
out
xchg
push
mov
push
xchg
or
and
mov
mov
mov
icebp
outsb
or
push
or
push
jg
data16
outsb
addr16
fwait
in
mov
dec
pop
xlat
mov
mov
out
cs
and
imul
je
and
inc
shlb
fsubl
pop
push
inc
cmpsb
push
arpl
fdivr
out
loope
cld
int
lcall
scas
in
das
sbb
cmp
lahf
incb
je
pop
movb
idivl
loop
leave
mov
xchg
jae
jae
or
adc
dec
inc
xor
gs
jae
shrl
ljmp
loope
pusha
sub
dec
or
stos
add
jae
mov
add
mov
jae
jle
cmc
out
repnz
jae
jae
push
and
xor
cmpsl
addl
jae
sub
jp
dec
fwait
lahf
int
sbb
test
inc
or
push
lcall
and
data16
sti
or
pusha
xor
addr16
into
xchg
push
int3
mov
push
jg
mov
or
or
in
dec
sbb
cltd
mov
outsb
outsb
xchg
lock
sbb
inc
aaa
sub
jge
outsb
outsb
aad
daa
xchg
out
xorb
inc
aaa
aaa
aaa
pop
mov
mov
add
aaa
aaa
aaa
mov
aas
mov
jmp
or
clc
fcoms
jnp
cmp
sub
sbb
mov
xchg
lcall
and
loop
out
out
xchg
add
dec
out
mov
lods
lahf
in
out
xchg
sbb
dec
cmp
outsl
fdivrl
cld
mov
push
jbe
cmp
fsts
or
movsl
inc
sub
mov
add
int
int
pop
sti
pusha
push
inc
test
icebp
mulb
inc
pushf
dec
pop
sub
iret
fdivrs
pop
cmpl
lret
mov
fwait
fwait
fwait
or
pop
movb
lods
adc
jno
outsb
outsb
outsb
outsb
pop
mov
mov
xchg
push
inc
pop
rcll
xor
lods
and
loope
sarl
mov
mov
jno
insb
cmp
fwait
lret
mov
out
enter
shlb
mov
jae
ror
pop
add
jmp
adc
jae
jecxz
daa
in
inc
xor
jae
jae
ret
and
popa
fidivrs
jae
dec
mov
or
pop
mov
jae
adc
cmp
jae
jae
out
xor
adc
sbb
je
jb
jae
pop
mov
in
pushf
add
mov
nop
sub
inc
push
lret
lea
push
adc
cmp
loope
jle
arpl
jle
sbb
xlat
enter
or
mov
fwait
fwait
fwait
cwtl
rsm
pop
dec
cmp
cld
insb
scas
dec
bound
push
js
aaa
ja
xor
cltd
ret
jae
pop
dec
cmp
push
or
fisttps
fmull
push
mov
cs
push
lret
out
mov
mov
fxch
inc
jb
pop
iret
xchg
fildl
outsb
cs
lret
pop
dec
shlb
das
leave
jne
outsb
mov
xchg
pop
push
inc
push
mov
repz
out
loope
cld
int
lcall
mov
das
cmp
push
test
leave
mov
je
pop
shrb
push
adc
push
aaa
pop
mov
xchg
or
lods
dec
loope
aaa
aaa
inc
xor
jae
jmp
and
fstl
outsl
ljmp
fldcw
sbb
push
mov
and
les
mov
mov
out
repnz
mov
aaa
pop
rclb
aas
xor
insb
and
ret
shl
mov
fmuls
test
rolb
loopne
jge
addr16
inc
cmpsb
push
jbe
in
int
push
or
xchg
sbb
fisttpl
fistps
mov
or
mov
or
fisubrs
xchg
call
or
out
neg
jmp
mov
mov
push
iret
out
out
fldl
sub
aad
ds
stos
pop
push
cmpsb
add
cmpsb
mov
lods
aaa
decl
pop
fisubs
xchg
sbb
jle
aaa
shrl
ds
jbe
adc
fwait
fwait
idivb
push
fdiv
sbb
notb
lds
push
mov
add
xor
mov
scas
xchg
sub
mov
sbb
out
out
rcr
jmp
int
mov
mov
out
imul
cmp
daa
pop
popa
push
iret
addr16
cmpsl
adc
jl
aas
sub
add
sub
popf
loopne
loop
out
cmp
aas
iret
out
pop
ja
mov
add
repz
mov
enter
out
jns
iret
lahf
jnp
add
lea
iret
repz
adc
add
addr16
add
in
lds
mov
dec
cmp
push
cmpsb
push
push
jns
cmp
cmp
jge
mov
add
dec
jg
iret
repz
mov
lods
add
cmc
iret
out
cmp
setae
xchg
xor
jno
add
shrb
ds
lahf
out
or
add
test
iret
repz
jb
and
aaa
mov
mov
jb
push
test
mov
ret
aaa
aaa
ds
or
or
ret
lods
fwait
jns
iret
lahf
ret
add
lahf
out
xrelease
sbb
add
push
stc
cmp
pop
dec
mov
popf
stc
cmp
icebp
roll
xor
sub
repz
roll
add
and
jns
imul
sahf
aas
mov
nop
add
jns
iret
add
xor
lahf
out
adc
add
in
rep
iret
repz
sti
sub
add
nop
leave
stc
repz
leave
sub
movsl
sbb
add
addr16
iret
out
in
decb
jge
repz
jns
nopl
add
mov
out
pop
xchg
and
push
addl
xchg
iret
out
cmp
pop
xor
jl
aas
pusha
add
insl
icebp
pop
vmwrite
test
dec
loopne
hlt
insb
cli
sbb
test
xchg
imul
cmc
pop
jl
add
or
pop
iret
int
cmp
fs
inc
fmull
int
clc
adc
rorl
fsubrl
or
xchg
arpl
mov
jae
incl
pop
cwtl
jns,pn
cwtl
mov
cli
sbb
sub
jmp
mov
test
xlat
ret
push
out
sbb
add
jo
movsl
ljmp
fwait
and
mov
mov
std
icebp
pop
inc
xchg
lahf
pop
iret
addr16
cmp
adcl
rcr
lret
and
loop
xchg
fnstenv
sub
xlat
out
add
mov
es
add
outsb
scas
addr16
xor
push
push
adc
jl
jg
fisttpl
cli
inc
adc
sub
cld
sub
js
in
pop
pop
in
dec
mov
daa
cmpsb
lret
xor
lcall
out
jmp
aad
xor
movsb
out
inc
shlb
popa
push
jle
sbb
pop
ds
add
add
lods
xor
lcall
int
lods
mov
mov
ljmp
inc
jge
or
mov
scas
les
push
ficompl
jecxz
xchg
das
or
loopne
sbb
mov
and
sar
jecxz
es
not
int3
and
jne
cmp
iret
sbb
cmp
aaa
sbb
iret
out
aad
mov
push
add
dec
jnp
and
jbe
mov
es
jle
dec
out
mov
and
cs
lock
jp
clc
daa
cmp
jl
sbb
sar
inc
gs
pop
idiv
lds
sub
imul
out
cmp
pop
popa
popa
cltd
pop
movsl
sbb
inc
insb
mov
push
cmp
push
sbb
lods
or
mov
jae
add
or
je
nop
hlt
mov
jae
sub
add
fs
loop
jae
sbb
jg
imul
cmc
iret
int
js
dec
push
pop
insb
sub
xchg
dec
mov
adc
divl
movsl
cmp
outsb
lock
insb
inc
popf
push
addr16
mov
mov
sbb
in
aaa
ficomps
call
repz
sub
add
mov
mov
call
das
sahf
dec
clc
fisubs
arpl
adc
sbb
push
push
cmpsb
fisubl
ret
out
out
call
outsl
into
inc
jbe
mov
mov
add
lahf
sbb
test
inc
daa
sbb
sub
cmp
fldl
hlt
dec
pop
aaa
aaa
aaa
aaa
inc
cltd
inc
jne
repnz
rcrl
mov
movsb
aam
mov
mov
aad
mov
mov
adc
cmp
mov
out
decb
and
pop
adcb
nop
popf
mov
fs
popf
test
mov
fwait
pop
pop
mov
or
mov
fdivrs
and
push
jmp
loope
push
into
fs
js
idiv
xchg
pop
inc
cmp
out
jbe
lret
pop
hlt
jmp
imul
jl
jge
iret
mov
add
scas
mov
inc
jg
pushf
cmpsl
jg
push
iret
int
int
movsl
or
inc
sarb
in
mov
xor
jmp
or
cwtl
pop
aaa
aaa
mov
loope
fwait
sbb
lcall
mov
aaa
clc
mov
add
add
fwait
fwait
fwait
popa
pop
cmc
mov
jecxz
popf
fwait
fwait
fwait
fwait
jp
in
add
cltd
cmp
in
sbb
lcall
fwait
outsb
das
int
ret
mov
push
push
and
pop
jnp
es
add
addr16
jae
popf
cwtl
add
outsl
pop
ret
fdiv
mov
cmp
mov
sbb
out
rclb
mov
jbe
int
shrl
jge
lahf
sub
jb
addb
or
fcmove
out
out
aaa
lret
jp
inc
inc
movsl
imul
and
adc
leave
ret
adc
ss
cmp
jne
xor
xor
jae
push
xor
insb
aam
adc
jae
loope
gs
fcmovnbe
fdivrl
xchg
jecxz
xchg
sbb
mov
fsubl
dec
shrl
sbb
arpl
add
std
dec
mov
jge
test
stos
dec
push
fdivrp
repz
pop
cmp
nop
jecxz
mov
mov
lret
sbb
addr16
enter
or
outsb
outsb
out
lcall
mov
out
das
icebp
out
incb
je
iret
out
out
xchg
test
lds
lock
es
mov
mov
arpl
decb
xchg
fstps
jae
mov
decb
sahf
push
outsl
xchg
int
in
dec
sti
pusha
push
dec
or
push
lock
jno
jmp
push
jmp
lock
pop
movsb
out
lods
mov
mov
inc
cld
jo
lahf
cmpsb
cmc
iret
js
and
cli
pushl
insb
je
dec
mov
notl
add
dec
jl
inc
mov
stos
imul
cmpsl
mov
dec
cs
out
in
shl
in
mov
add
mov
cs
nop
dec
mov
stos
pop
pusha
xchg
mov
int
jo
decb
aaa
inc
xor
test
dec
pushf
fwait
lea
pusha
int3
sub
jp
xchg
push
mov
cmp
add
jle
and
aaa
aaa
pop
cmp
jne
js,pn
shl
or
repz
push
out
das
bound
inc
inc
stos
sub
repnz
out
jae
sti
cmp
mov
pop
data16
inc
pop
sbb
jae
mov
test
mov
data16
push
out
out
in
push
in
jbe
lock
ja
or
jns
dec
jge
sub
aas
sub
pushf
xor
lock
add
ret
sti
push
mov
rclb
jbe
out
sbbb
inc
lcall
xlat
sbb
out
loope
int
mov
stc
fs
clc
gs
xchg
pop
pop
pop
lret
sahf
decb
fistl
insl
into
sti
in
fildll
adc
cmp
fsubrp
mov
test
sahf
lock
push
aaa
movsb
cmc
iret
iret
mov
pop
mov
mov
push
sbb
xrelease
lods
push
decb
mov
xchg
mov
mov
cmp
push
fwait
out
cmp
xor
aad
adc
int
xchg
out
mov
js
xchg
fistpl
cmpsb
testl
andb
test
ljmp
les
addr16
mov
idiv
inc
mov
push
shlb
add
lret
mov
jmp
or
push
sbb
inc
push
inc
cmp
stos
pushl
cld
or
rcr
sbb
xor
jp
xchg
movsb
mov
fisttpl
clc
push
ficoml
xor
dec
pop
push
fwait
test
out
or
jb
in
stos
mov
fwait
fwait
fwait
fwait
aam
lock
sub
inc
push
pusha
outsb
or
cmp
jl
cwtl
mov
icebp
jl
or
and
pop
push
xchg
mov
int3
testb
cs
int
sbb
sub
mov
add
adc
int
sbb
cmp
lcall
stos
out
cmp
or
add
xor
or
push
inc
movsb
mov
ljmp
cmp
and
ds
stos
xchg
pusha
and
mov
stos
or
xorb
sub
incb
add
stos
mov
pushf
stos
call
mov
scas
jae
inc
push
add
pop
movq
outsb
outsb
roll
repnz
movsb
insb
clc
aas
popa
jbe
out
idivb
pop
inc
bound
pop
cli
sbb
fldl
cmp
insl
fstl
inc
jno
aaa
push
jl
insl
into
cltd
or
out
rolb
arpl
jle
aaa
in
jmp
mov
cmp
pop
ficoms
sbb
or
mov
jge
cmpsb
sbb
insb
out
push
xchg
inc
mov
lock
bound
mov
hlt
adc
push
movsb
outsl
pop
or
in
addr16
outsl
jmp
leave
mov
cli
mov
in
aad
clc
adc
outsl
sahf
mov
add
fnstenv
sbb
dec
std
int
int
cwtl
xorl
pop
push
xchg
mov
outsl
fstl
or
adc
fdivrl
cmp
addr16
pusha
mov
mov
pop
pop
imul
dec
jns
arpl
negb
add
ljmp
push
js
fstl
dec
dec
shrb
sub
pop
add
aad
frstor
pop
hlt
pop
push
jns
sahf
mov
nop
addl
adc
imul
xor
xor
adc
xchg
cmc
test
dec
divl
aad
mov
lock
sub
mov
adcb
scas
mov
fldt
int
xchg
loopne
dec
test
insl
cmp
aaa
mov
jo
inc
es
xor
sub
add
stc
lret
xlat
mov
out
out
push
rorb
test
out
push
adc
fsubrl
pop
xchg
clc
insb
out
push
dec
pop
lock
push
mov
out
data16
xor
repnz
out
out
cld
pop
movl
jmp
out
push
dec
push
sarb
aaa
sti
mov
dec
je
mov
shll
jae
xchg
xchg
mov
loope
jae
jae
leave
loope
scas
dec
cld
daa
pop
aas
sub
inc
mov
fstpt
shrb
lock
ljmp
fldt
sbb
mov
sbb
fcomp
iret
out
add
add
xchg
sub
ja
andb
xchg
lahf
sub
mov
xchg
stos
and
cld
insb
outsb
outsb
jbe
es
sbb
xor
test
or
jnp
sti
call
pop
pusha
sub
push
mov
or
in
jae
add
and
test
cltd
pop
sti
add
scas
scas
cmp
ret
adc
or
jb
jo
mov
or
movsb
mov
adc
push
jae
jae
test
mov
or
pop
js
jae
jae
das
test
fs
jae
jae
pop
pop
xchg
and
insb
push
dec
mov
addr16
jnp
lods
push
imul
fnstcw
mov
cmp
adc
dec
shr
mov
inc
lahf
jbe
mov
subl
sbb
cmpsl
jmp
rcr
in
shl
mov
xor
pop
aam
pop
fmulp
addr16
sub
pop
xchg
jmp
xchg
std
mov
jno
inc
inc
pusha
shl
fbstp
sti
dec
divb
sbb
or
adc
sub
push
shlb
sti
jne
outsb
ds
aaa
mov
mov
hlt
lods
dec
cmpsl
jno
insb
outsb
jae
xchg
or
adc
mov
jle
outsl
add
jl
aaa
aaa
shlb
addr16
into
popf
and
inc
sbb
into
negb
xor
aaa
aaa
mov
or
pop
mov
mov
aaa
daa
pop
jno
dec
cmpsl
pop
in
jo
sahf
fwait
fwait
fwait
in
add
dec
xlat
sub
adc
pop
jle
enter
sbb
push
jae
pop
fdivrl
fistpll
mov
cmc
add
mov
push
outsl
push
ss
cwtl
nop
mov
mov
xor
test
pop
hlt
mov
out
mov
lds
cmc
mov
arpl
cmp
mov
sti
bound
mov
outsb
sbb
jg
test
jg
xchg
add
push
xchg
es
js
mov
imulb
stos
mov
mov
sbb
jl
and
lcall
andb
and
into
pop
rcl
fildll
lods
jmp
test
arpl
mov
jae
scas
push
dec
and
mov
adc
addr16
and
pop
mov
mov
mov
and
ljmp
cmp
sti
fadd
ret
and
pop
notb
xor
outsb
aaa
pop
pop
jecxz
in
test
cmpsl
mov
add
push
jl
rclb
je
aam
mov
mov
push
out
sub
fdiv
sahf
stc
into
push
xchg
jb
fcomip
mov
test
jl
je
adc
inc
fisubrl
cli
fdivrl
stc
and
aaa
call
outsb
jbe
subb
rorl
mov
xchg
push
push
jge
dec
in
adc
sbb
outsb
outsb
outsb
bound
cmpl
xchg
aam
outsb
outsb
outsb
xchg
jle
in
add
push
mov
nop
fists
ret
lret
repz
push
hlt
sahf
rolb
clc
mov
adc
outsb
outsb
jg
mov
push
mov
dec
sbb
outsb
outsb
outsb
outsb
xchg
in
cmpsb
push
sbb
int
adc
outsb
outsb
push
jg
sbb
mov
sub
fstps
testb
subb
flds
jae
inc
jecxz
pop
inc
pop
imul
mov
call
mov
es
int
int
mov
and
insb
xchg
test
push
mov
int
cli
jle
mov
pop
add
add
enter
mov
mov
mov
je
cmp
ret
out
insb
fildll
and
xor
in
out
sbb
mov
mov
pop
lcall
loope
movsb
dec
sbb
xchg
js
out
out
and
push
cmp
add
sahf
adc
mov
sub
aas
or
or
pop
fmull
jle
mov
jbe
or
js
aam
xor
xor
jae
cmp
pop
rolb
lcall
stc
insb
outsl
insl
stos
mov
aaa
aaa
aaa
aaa
mov
out
add
and
inc
or
mov
aaa
aaa
aaa
pushf
xchg
ljmp
inc
fsubrl
push
push
clc
mov
nop
xchg
jmp
inc
ror
xor
xchg
lret
push
cld
shlb
aam
cwtl
negb
jbe
mov
push
or
dec
jo
aas
shll
mov
movsl
or
shll
int
push
lock
sbb
mov
push
rcrb
dec
js
out
xor
mov
sub
lret
aas
fwait
fwait
lods
lret
into
stc
loop
test
mov
clc
push
loopne
rol
in
mov
push
or
cmp
jbe
mov
aaa
shll
inc
rcll
fnstcw
jno
daa
jge
cmp
testb
xchg
daa
in
sahf
pop
jae
jae
roll
push
pushf
clc
ret
ss
fstps
jbe
mov
outsb
mov
iret
das
sahf
outsb
mov
and
inc
mov
mov
outsb
and
in
mov
pop
in
mov
lock
mov
clc
mov
jl
mov
repnz
jle
jne
fcompl
or
fiaddl
in
cmpsb
mov
xabort
loop
sub
mov
ret
mov
pop
pop
dec
push
dec
test
push
loopne
mov
mov
push
stos
sbb
fistl
lock
adc
jbe
pop
outsb
aas
fwait
fwait
mov
jle
ret
xchg
loope
mov
jg
into
mov
sub
sbb
divb
mov
shlb
out
or
mov
jle
int
xchg
cmpsl
adc
iret
fs
fdivl
xor
imul
in
jae
int3
mov
dec
push
cwtl
fmul
mov
fwait
mov
aaa
pop
pop
push
fidivl
in
jmp
xchg
fwait
nop
mov
push
sub
loopne
push
cs
jl
aaa
aaa
fsubrl
cld
scas
stos
sbb
shrl
lods
fstpt
ljmp
cmp
aaa
mov
out
push
test
sbb
lret
jae
ret
sub
inc
mov
xor
pop
pop
loope
dec
inc
and
es
shll
aaa
aaa
xor
roll
aam
mov
or
ds
insl
jno
stos
jb
insb
mov
outsb
outsb
inc
in
lock
pop
jo
push
cld
imul
lods
loop
out
out
inc
or
sub
adc
out
mov
push
xchg
xchg
cmp
test
outsb
outsb
outsb
lahf
mov
addb
xchg
ss
and
outsb
outsb
outsb
cmp
repnz
fistpll
mov
or
cmp
mov
int
ficomps
push
fsubs
xchg
int
int
insb
ss
xchg
dec
cmp
mov
add
out
lahf
int
lret
test
xchg
inc
out
out
xchg
arpl
sbb
jbe
and
loop
out
out
lcall
fadd
in
sbb
mov
out
lock
cld
inc
sbb
outsl
sbbb
popa
mov
add
imul
je
je
mov
pop
repnz
pop
clc
mov
lods
jns
int
int
insb
cmpsl
pop
adc
xchg
mov
or
or
jl
mov
daa
mov
mov
jge
loope
cmp
pop
add
fcompl
jnp
mov
push
out
pop
shl
divb
pop
test
pushl
pushf
mull
aaa
sbb
repz
jp
push
in
dec
sbb
adc
fwait
fwait
rclb
mov
idivb
fwait
fwait
fwait
mov
lods
daa
xchg
enter
push
mov
jecxz
cmp
std
fcom
es
adc
lock
sub
push
push
lock
jns
mov
ror
bound
jmp
out
icebp
lods
jae
decl
xor
push
scas
mov
insb
jp
mov
rolb
in
addr16
punpckhbw
rorb
adc
mov
jno
lahf
int
jl
test
ljmp
fisttpl
outsb
daa
sub
add
out
enter
dec
lahf
hlt
flds
lahf
pop
es
xlat
add
push
lahf
int
cmovg
xlat
enter
aaa
push
faddl
cmc
ja
dec
pop
aaa
das
push
push
push
pop
cmp
addl
lret
aas
out
sub
aaa
cld
test
imul
or
and
ss
loop
pusha
fisttpll
iret
out
rolb
inc
jns
add
int3
mov
ficomps
test
push
xor
mov
mov
test
mov
sub
sahf
add
lahf
fwait
fwait
fwait
pop
pop
mov
frstor
push
pop
jl
outsb
andb
mov
cmp
xchg
fbstp
sti
inc
fsubr
stos
test
push
lea
mov
in
sahf
fiaddl
sbb
mov
jge
insl
sub
int
inc
shlb
nop
dec
bound
es
hlt
movsl
lahf
pop
or
loopne
data16
sbb
fdivrl
cmp
std
insb
hlt
ss
push
cwtl
ja
jbe
sub
mov
mov
mov
and
add
adc
mov
sbb
mov
divb
sub
pop
or
adc
and
sbb
mov
popl
inc
fwait
fwait
fwait
fwait
imul
jmp
subl
imul
jmp
hlt
push
xchg
mov
out
out
and
scas
mov
mov
xlat
iret
mov
sub
repz
jb
xchg
ljmp
loope
rcll
mov
rorl
jbe
test
loope
mov
xor
push
push
enter
fwait
fwait
fwait
fwait
sub
out
inc
mov
pop
les
insb
fwait
fwait
fwait
fwait
in
inc
pop
pop
mov
mov
mov
fwait
fwait
fwait
dec
in
jnp
mov
push
idiv
add
push
or
out
out
out
shlb
pop
cltd
idivb
out
out
or
pusha
xchg
mov
enter
jmp
adcb
jo
jbe
jb
inc
push
lcall
jge
ret
push
mov
inc
ret
test
fwait
fstpt
dec
test
cwtl
out
inc
cli
repnz
xchg
fwait
fwait
fwait
fwait
icebp
or
push
js
jns
addr16
aas
fwait
mov
in
or
push
fstpl
jne
int
sub
mov
mov
stos
testb
imul
fwait
fwait
fwait
loop
dec
repz
xor
cld
jbe
mov
pop
sbb
cmpsl
mov
xchg
out
xchg
aas
dec
fwait
fwait
fwait
fwait
adc
and
sub
pop
sahf
cmp
fisubrl
int
in
adc
test
rorl
xor
int
int
or
movsb
or
fiaddl
mov
out
or
jbe
in
pop
ss
sbb
lods
hlt
mov
shlb
push
jnp
fwait
fwait
fwait
cmp
xor
cmp
jb
int
int
push
sahf
sub
lock
rorl
aad
clc
xor
iret
int
idivl
adc
push
es
mov
jbe
lcall
popa
insb
inc
adc
sahf
ds
mov
ja
scas
sahf
mov
outsl
push
lahf
andb
inc
insb
mov
mov
jo
aaa
aaa
mov
insb
jne
imul
sbb
mov
adc
rorb
movsl
cmp
aaa
aaa
sahf
dec
dec
pop
clc
repnz
aaa
aaa
jl
mov
sar
push
cmc
push
jecxz
cmpsb
dec
aaa
aaa
aaa
aaa
mov
hlt
imul
cmp
sub
mov
push
mov
and
sbb
out
enter
fldenv
dec
jnp
ss
mov
or
ds
mov
fs
outsb
outsb
outsb
outsb
mov
shlb
nop
cs
aaa
mov
js
lock
mov
mov
mov
aaa
aaa
xchg
inc
and
push
aam
mov
pop
jg
test
rorl
arpl
jmp
cmp
jne
je
cmp
or
popl
jo
inc
stc
push
mov
fwait
fwait
fwait
fwait
xchg
lret
outsl
mov
sbb
ds
loop
sahf
adc
fcomi
out
pop
bound
push
pop
scas
cmp
and
fwait
fwait
jmp
dec
push
pop
ja
mov
xchg
outsb
outsb
outsb
outsb
mov
pop
dec
jl
mov
insb
outsb
mov
lcall
out
jne
adc
dec
bnd
cmpb
add
push
dec
xor
jne,pn
neg
jl
sbb
jge
fdivr
sbbl
add
gs
dec
pop
lods
mov
cmp
push
imul
sbb
stc
xor
in
out
and
jae
mov
imul
aaa
aaa
mov
pop
pop
lds
inc
jno
sbb
mov
adc
mov
or
adc
push
inc
pusha
aaa
mov
int
add
sbb
hlt
push
mov
ds
out
and
push
jbe
or
fcmovne
aam
cmp
addr16
inc
jecxz
mov
subb
adc
xchg
mov
jbe
or
imul
popl
push
inc
cli
outsb
outsb
outsb
outsb
or
jmp
daa
add
cs
or
adc
insb
fdiv
mov
roll
pop
scas
mov
idivb
xchg
mov
jecxz
clts
mov
jg
push
imul
test
fdivrl
aaa
mov
out
rorb
pop
bound
cli
divb
cmc
icebp
loopne
int3
xchg
repz
sbb
jl
outsb
outsb
or
out
arpl
dec
push
ficompl
push
or
loop
notb
in
fwait
fwait
fwait
or
leave
inc
mov
paddq
cld
sahf
adc
pop
sub
loopne
shrb
insb
repz
idivl
pop
hlt
adc
xchg
mov
stc
fstps
sub
shlb
mov
push
sbb
jbe
push
mov
sahf
jno
fdivs
jae
testw
or
inc
shlb
int
addr16
out
xchg
sub
lahf
test
fisubs
cmpsb
and
lret
outsb
out
xchg
jle
ss
mov
inc
rcll
or
out
xor
jae
jae
adc
jnp
cmp
insb
aam
mov
jae
jae
pushf
dec
jns
or
ficoms
int
jae
jae
mov
add
insb
out
pop
jecxz
cmpsb
das
call
out
xchg
loope
and
dec
ss
aaa
mov
test
pop
inc
stos
stos
xchg
mov
jle
and
cmp
add
inc
dec
scas
xchg
jae
jae
xchg
xchg
test
fdivrs
adc
jae
jae
push
dec
popa
mov
xchg
cmpsl
cli
cld
fdivrp
jae
jae
ret
xor
push
pop
mov
mov
jmp
loop
dec
adc
push
push
andl
adc
sub
shl
les
mov
inc
sahf
mov
jge
fisttps
inc
adc
jg
xchg
daa
popf
lahf
in
add
outsb
out
out
mov
pop
jns
pop
inc
scas
sub
lret
inc
stos
add
sti
fsubr
iret
sahf
shl
push
pop
sbb
imul
and
scas
bnd
jecxz
push
push
jl
dec
jb
pop
fwait
fwait
fwait
sub
xchg
add
fwait
fwait
fwait
fwait
jno
mov
jnp
outsl
and
xchg
cld
xor
fwait
jmp
ficoml
sbbb
push
leave
lds
mov
out
or
outsb
out
clc
fcoml
jnp
mov
ljmp
xor
orl
mov
mov
out
fstpl
cwtl
pop
adc
xlat
aaa
aaa
aaa
aaa
pop
imul
mov
sarl
ds
divl
sbb
pop
scas
addr16
mov
sbb
addr16
or
in
jle
int
int
int
mov
sbb
pop
push
shll
movsb
mov
dec
jae
mov
xor
mov
mov
jo
pop
push
pop
and
addb
aas
ret
pop
cmc
test
clc
jge
jbe
jge
outsb
test
hlt
and
mov
pop
je
lock
adc
push
inc
mov
fcompl
in
ja
mov
int
dec
push
xor
mov
repz
push
ss
cmp
inc
add
roll
jmp
push
movsl
aas
cmp
xchg
out
out
test
in
sti
dec
pop
xor
out
cmpb
dec
fildll
push
inc
mov
fldt
out
lret
pop
int
filds
sbb
scas
pop
mov
pusha
mov
int
ja
ficomps
xchg
test
or
xor
aaa
aaa
aaa
aaa
rclb
pop
shl
pop
mov
pop
ds
aaa
aaa
movsl
repnz
xor
sbb
inc
test
fwait
fwait
fwait
fwait
and
jo
push
test
jno
aaa
aas
fwait
sub
out
push
fiadds
fdivrl
cmpsb
rolb
lock
out
fnstcw
inc
mov
fsts
add
inc
pop
call
shlb
jae
push
mov
or
jl
notb
mov
imul
mov
int
add
adc
or
sahf
int
int
mov
jo
mov
mov
push
dec
fbld
cltd
clc
jne
push
add
mov
dec
vpaddd
cmp
iret
fnstsw
adcl
jge
jae
jae
push
lock
lret
lock
loop
push
cmpsl
mov
mov
les
imul
inc
sbb
sub
in
ret
mov
mov
into
outsb
jle
or
dec
aas
add
subb
cmp
int
int
jb
jl
stos
lea
cmp
push
out
int
int
lret
stos
xchg
stos
jbe
pop
bound
cmp
xchg
int
and
int
cmp
jg
sub
mov
jle
sub
int
outsb
outsb
outsb
out
loop
mov
bound
mov
jb
push
push
mov
mov
mov
dec
sub
enter
imulb
mov
int
dec
cli
dec
jne
sbb
inc
cli
lock
ret
fimuls
gs
cmp
push
inc
loopne
es
stos
lahf
int
outsl
scas
sub
jp
push
pop
jp
lods
out
out
imul
in
mov
in
push
out
out
xlat
das
mov
scas
jbe
imul
in
ror
rcrb
or
lahf
jbe
scas
or
sarl
cmc
test
std
insb
outsb
pop
or
and
cltd
bound
dec
iret
out
mulb
add
jb
sbb
test
inc
fcoml
insb
mov
or
mov
arpl
lods
jbe
cmp
push
std
adc
xor
js
mov
xchg
mov
pop
dec
testb
mov
sub
push
push
cltd
or
lock
fsub
mov
push
fs
sbb
hlt
mov
mov
aaa
mov
lea
jnp
dec
push
clc
fdivl
aaa
aaa
aaa
jmp
push
add
xor
adc
ss
mov
cmpsl
dec
push
fwait
fwait
fwait
fwait
out
lds
std
aaa
or
jg
arpl
outsb
outsb
xchg
xchg
iret
ljmp
pop
jge
outsb
outsb
js
repnz
popf
mov
or
out
sti
lcall
mov
mov
lock
sbb
shrb
fwait
fwait
aaa
mov
repz
mov
or
insb
ljmp
fcompl
mov
sbb
pop
cmpl
and
scas
ja
data16
add
ret
add
ljmp
lahf
int
pop
mov
scas
xchg
jbe
lods
sbb
cs
jecxz
lock
add
fdivrl
push
xchg
popa
sbb
test
adc
in
or
clc
sub
jne
cltd
jno
mov
clc
aad
xchg
sbb
fcompl
data16
fisubl
jne
and
ret
dec
fbstp
mov
outsl
dec
xor
pop
pop
stc
mov
mov
pop
jl
inc
out
add
fincstp
shlb
scas
adc
inc
or
sbb
dec
or
mov
ja
stos
clc
xchg
arpl
mov
in
data16
lods
adc
pop
push
cmpsb
loop
mov
test
adc
mov
or
outsb
aas
fwait
fwait
repnz
mov
push
outsb
adc
outsb
outsb
outsb
out
imul
mov
cmpsb
jo
xor
or
clc
cmp
sbb
adc
lahf
mov
orb
xor
sarb
mov
out
inc
fisubs
sti
data16
lret
and
jae
lea
mov
aad
stc
ret
add
and
into
ds
test
out
les
push
jb
outsb
outsb
outsb
outsb
clc
dec
rcrb
pop
xchg
push
jg
and
jl
sbb
roll
pop
xchg
cmp
clc
stos
sahf
das
inc
sub
out
loop
test
cmp
jle
popa
outsb
scas
clc
pop
mov
popf
shrb
push
add
mov
mov
mov
inc
aam
inc
pushf
push
add
mov
fs
sti
mov
mulb
mov
in
out
or
sti
xor
xlat
subb
cmpsb
push
int
and
xor
inc
mov
inc
aaa
mov
int
lods
push
repnz
cmpl
fdivrl
aaa
shlb
jne
inc
pop
jno
jae
cli
cld
in
clc
push
fucom
inc
cmpb
jns
data16
int
pop
mov
ficomps
outsb
sub
cmp
das
xchg
shrb
outsb
outsb
idivb
sbb
and
jl
imul
std
add
sar
sahf
sbb
iret
int
inc
mov
sbb
mov
icebp
shll
xchg
outsl
stos
jp
xchg
ss
mov
repz
or
cmpsl
jne
xor
xor
iret
idiv
sahf
mov
cmp
xchg
jae
jae
push
test
xor
das
repz
out
ret
subb
addr16
mov
mov
pop
xchg
sbb
mov
rorb
mov
incb
mov
out
cmp
push
push
pusha
aad
pushf
or
jbe
lahf
lahf
imul
and
push
mov
sti
or
and
gs
pop
je
enter
jae
mov
enter
xchg
sahf
jle
int
int
pop
inc
inc
andb
or
call
int
jbe
mov
fs
sub
outsb
mov
pop
hlt
pop
mov
cwtl
fiaddl
outsb
inc
dec
xchg
cmp
lock
mov
test
insb
fwait
dec
addr16
adc
mov
mov
cmc
les
mov
fistl
xor
sbb
clc
rcll
out
add
mov
jae
push
jge
cmp
inc
ja
mov
mov
pop
test
cmp
and
lahf
int
pop
inc
or
divl
jg
xor
gs
sub
clc
cltd
push
mov
mov
pop
mov
int
xor
inc
ret
or
cmp
fwait
stos
jle
lods
pusha
popa
push
dec
in
sbb
lock
fwait
fwait
fsubrl
mov
cmp
lahf
fwait
fwait
fwait
xor
adc
push
fcoms
fcompl
mov
xor
addr16
clc
mov
fdivrl
shl
jo
int3
je
push
add
fadd
sbb
add
int3
dec
test
xchg
jno
cmp
and
add
fldcw
enter
jl
je
push
push
push
inc
push
lret
and
shl
out
into
bound
jae
aaa
lock
dec
ror
or
mov
cli
dec
xorl
lahf
jnp
loop
xor
stos
jmp
ljmp
cmp
inc
das
out
outsb
outsb
out
cli
jbe
ret
jmp
mov
dec
outsb
outsb
outsb
outsb
repnz
mov
mov
out
and
out
or
popf
push
fwait
fwait
or
inc
sti
cwtl
pop
xlat
add
es
and
mull
mov
scas
push
mov
addr16
sbb
pop
out
mov
test
add
lahf
dec
lods
arpl
adc
es
lcall
jnp
mov
repz
lret
movl
mov
and
xchg
push
das
out
lahf
fldt
mov
and
jl
shrb
aam
dec
xchg
sub
xchg
test
mov
jl
adc
addr16
xchg
scas
call
cmp
aaa
mov
mov
or
repnz
adc
pop
aaa
aaa
aaa
aaa
or
or
jo
data16
aaa
aaa
aaa
mov
sti
or
xchg
cld
xor
rorb
xchg
jbe
sub
lods
jmp
clc
fisubrl
sar
addps
mov
popa
repz
bound
dec
repnz
jmp
out
jae
sti
mov
fwait
ja
push
ret
das
ret
jae
or
cmpb
adc
cmp
pop
inc
icebp
add
js
sbb
mov
into
add
mov
in
xchg
xchg
cmp
xchg
and
sti
mov
ds
aaa
cmpsb
pop
sub
rcrl
mov
jp
outsb
xchg
dec
cmp
popa
jp
or
outsb
outsb
outsb
outsb
and
movl
jbe
std
insb
ret
cmp
cltd
out
out
cmp
pop
add
jbe
sti
icebp
add
and
imul
mov
mov
std
shlb
mov
sahf
adc
outsl
out
mov
ret
movsb
js
out
cmpsb
sbb
outsb
lahf
and
loopne
inc
sub
jmp
insb
shl
std
insb
cld
and
xlat
es
xchg
sahf
xchg
dec
fisubs
loope
jae
lret
inc
test
leave
rcr
ss
jbe
jnp
and
in
push
jp
mov
sbb
xorl
icebp
hlt
sub
jb
cmp
mov
int
adc
aaa
aaa
lock
movsl
icebp
mov
push
cmpsb
lock
xor
testl
lahf
fistl
ljmp
es
xchg
dec
ss
lahf
int
idivb
cmp
and
add
insb
call
lea
push
adc
aaa
jle
shrl
fucomp
es
inc
data16
fwait
int
push
cmp
xchg
push
fsubl
in
lcall
mov
dec
and
add
push
mov
sti
fsubrl
aas
jbe
call
jae
jae
cltd
cltd
ds
insb
shrb
mov
ljmp
into
and
push
jle
insb
fisttps
sbb
bound
cmp
loopne
jbe
shrb
ret
pop
faddl
rolb
mov
jo
std
xor
and
das
add
data16
in
mov
add
jp
movsb
push
dec
ret
scas
loopne
lock
push
ss
sub
aad
mov
fcompl
push
sarb
ret
xchg
in
inc
clc
fldcw
hlt
loope
sbbl
mov
bound
cs
hlt
xchg
jo
pushf
jl
cmp
jb,pt
jo
shll
jb
push
clc
pusha
std
aad
lds
and
aam
loop
cli
adc
or
frstor
fists
ds
cmpsb
cltd
dec
push
cld
in
or
cmpl
sub
xchg
xchg
add
out
pop
or
nop
sub
or
mov
movsl
pop
push
and
mov
pop
ret
out
ljmp
scas
clc
xchg
sub
xorb
das
fs
outsb
outsb
outsb
push
jae
jle
pop
jmp
and
loop
insb
xchg
rorl
mov
pushf
mov
pop
jb
stos
fcmovne
int
sti
ret
in
lock
iret
ret
sbb
add
outsb
roll
popf
in
lcall
shrl
dec
push
cmp
lock
mov
lea
aam
dec
popf
fwait
mov
loope
pop
js
cmp
or
into
in
push
or
and
test
mov
in
xchg
push
push
loop
dec
cld
in
cmp
mov
mulb
das
gs
out
and
in
insb
decl
jecxz
faddl
jbe
cmp
mov
jns
cs
fnstenv
inc
test
rcr
cmp
outsb
outsb
outsb
mov
lock
push
out
and
insb
or
xor
xchg
gs
cmp
aaa
fnstenv
stc
iret
in
xchg
push
adc
jge
popf
fwait
mov
sarb
addr16
adc
adc
std
data16
das
int
int
addr16
insb
add
pop
or
and
jle
iret
clc
bound
sbb
pop
jecxz
into
add
lret
inc
out
fdivr
sbb
fcompl
fwait
or
hlt
ljmp
insl
aam
pusha
sbb
hlt
pushf
or
ss
aaa
push
cmpsb
jb
xchg
push
paddb
stos
shll
xor
sahf
test
pop
ds
ret
les
cmp
or
es
bsf
clc
jns
stos
iret
int
in
jbe
inc
or
add
sbb
push
xlat
popf
sub
cmpsl
adc
pop
sub
int
add
push
rcl
push
or
push
aas
or
xor
js
jp
mov
or
rcll
cwtl
jo
mov
aaa
adc
out
out
jb
ss
push
jb
cmp
push
leave
sub
mov
negb
outsb
outsb
mov
mov
decb
aas
fstpt
mov
fwait
mov
push
call
int
popf
insb
adc
dec
push
pop
jecxz
mov
into
das
outsl
jp
jl
addr16
test
lock
cmp
add
or
jo
lcall
or
inc
lahf
lea
es
jle
into
cmpb
sbb
adc
push
fsubrl
xchg
inc
push
divb
or
or
fdivl
rcr
mov
in
fwait
fwait
fwait
fwait
lret
cmp
loopne
xchg
pop
pop
stc
int
adc
fs
fs
lods
js
adc
int
int
lret
xchg
or
sub
inc
daa
push
testb
pushf
dec
inc
adc
fwait
fwait
fwait
fwait
add
inc
jg
stos
out
std
ds
fwait
sbb
and
jbe
xor
hlt
mov
xchg
aam
xchg
xchg
xorb
inc
jge
inc
test
inc
mov
rclb
mov
push
imul
test
add
hlt
push
fdivrl
mov
inc
jle
xlat
cli
adc
adc
sbb
jbe
jae
add
sub
insl
int
int
in
xorb
dec
fnsave
push
int
int
rcll
add
pusha
pop
lahf
int
int
jns
aas
int
add
lret
scas
pop
andb
xor
lcall
xor
adcb
lret
idivl
pop
dec
movsl
xlat
test
adc
mov
ret
inc
cmp
pop
push
sbb
inc
stos
push
outsb
fcmovne
addr16
or
inc
lock
or
aas
fwait
fwait
fwait
jge
lret
stos
lea
int
int
out
mov
ret
xchg
in
shr
xchg
sahf
int
jle
andb
lods
cmp
fcompl
dec
jb
subl
jae
add
pop
test
xor
jae
divl
push
cmp
cli
sbbb
iret
mov
lcall
pop
lret
loopne
push
adc
sahf
fwait
popa
out
fisubrl
cld
je
addr16
repz
xchg
push
mov
pushf
int3
pop
aaa
aaa
mov
ss
dec
sbb
stos
or
sti
lcall
push
sub
inc
or
addr16
sbb
adc
lcall
dec
mov
stc
sbb
sbb
ss
rolb
cs
mov
mov
jg
ss
push
test
dec
jmp
outsb
outsb
fistps
bound
cmc
lock
or
xor
insl
mov
mov
cmpsb
push
dec
lods
mov
add
xlat
cmpsb
xchg
shlb
cmp
sar
out
lret
mov
mov
jle
rcrb
sbb
or
jae
jge
dec
loopne
popf
mov
pop
cld
shlb
add
mov
and
inc
push
cld
and
jle
testl
call
out
cmp
and
scas
sub
stos
cmp
mov
in
das
jae
mov
loop
add
pop
push
mov
inc
das
mov
outsb
outsb
jg
push
add
out
fsts
mov
sbb
xchg
ja
mov
add
pop
scas
mov
int
int
and
adc
test
int
add
mov
bnd
sbb
dec
cmp
mov
pushl
ja
mov
scas
movsl
push
and
cmpsb
pop
mov
ljmp
in
adc
aaa
aaa
leave
push
mov
push
cmpsl
lods
loop
adc
ss
aaa
aaa
inc
pushf
cs
cmp
push
in
jae
jge
bound
add
fisubrs
mov
loop
and
pop
enter
push
or
mov
inc
imul
in
jp
fdivrl
inc
adc
call
pushf
pop
sub
inc
sbb
es
sti
f2xm1
jmp
cmc
popf
clc
mov
test
int
jl
xchg
movsl
ss
int
int
mov
enter
mov
jae
mov
ret
dec
push
js
jae
jae
std
test
xlat
pop
mov
enter
inc
jmp
mov
cld
sbb
ljmp
xchg
rolb
cmp
and
cmp
loope
out
mov
bound
in
xchg
fadds
mov
xchg
pusha
pop
test
lcall
mov
mov
push
dec
scas
cli
push
pop
push
add
cmc
cmp
pop
clc
insb
outsb
outsb
mov
sbb
adc
jae
ret
pop
sub
xorl
pop
ret
les
or
out
aaa
aaa
aaa
dec
xchg
faddp
sbb
cmp
cwtl
or
cmp
iret
mov
call
adc
adc
lock
jae
jae
insl
mov
jo
lds
push
cli
lahf
int
in
jp
clc
aas
fcmovnb
or
inc
jl
pusha
ds
aaa
mov
sbbb
push
push
fwait
fwait
sbb
pop
stos
jbe
inc
jle
ds
mov
jne
mov
pop
pop
or
loopne
xlat
loopne
cld
mov
aaa
aaa
mov
cmp
jb
stc
jmp
cmp
mov
into
mov
and
mov
add
fcomps
inc
lahf
int
int
cli
xchg
and
jp
xchg
push
movsb
xchg
aam
cmp
mov
icebp
sahf
or
ds
mov
or
in
or
popw
push
insb
shr
mov
mov
out
push
shrb
shll
in
or
aam
addr16
adc
mov
ret
loope
iret
mov
aam
iret
adc
ror
int
imull
clc
jle
ret
rorl
lahf
sub
fidivrl
cmp
cmc
pusha
aam
pop
jl
add
lret
add
pop
ljmp
mov
cmp
aaa
xor
test
cmp
lods
roll
lret
cmp
sbb
jg
adc
adc
mov
cld
cli
int3
dec
loope
fsubs
push
shl
mov
jb
sub
pop
mov
outsl
adc
imul
inc
stc
insl
jl
cli
andb
mov
ja
mov
pop
cmp
rol
fildll
pop
lock
mov
xor
aaa
aaa
aaa
out
cwtl
out
andb
fsubrl
ss
ss
jmp
rorl
fs
in
es
fwait
fwait
fwait
fwait
daa
sbb
jmp
and
jne
fwait
fwait
fwait
fwait
and
pop
rcl
iret
push
jo
push
popf
mov
sbbl
out
adc
cmpsb
xrelease
mov
nop
and
pop
out
mov
jp
mov
out
inc
js
outsb
and
xchg
movaps
cs
rcrb
cmpsb
enter
or
push
pop
outsb
outsb
outsb
outsb
or
or
icebp
hlt
pop
paddusb
ss
insb
outsb
outsb
outsb
fcmovne
jle
sahf
pop
sbb
shrb
cld
out
sbb
xlat
int3
jns
fistl
js
fsubr
loopne
xor
cwtl
push
cli
jecxz
xchg
out
fisttps
lret
int
sbb
mov
mov
movsb
ds
fwait
xlat
outsb
repnz
ds
in
out
inc
sub
mov
sbb
ljmp
cmpsl
insb
push
lcall
lcall
sbb
aas
fwait
and
rol
das
ret
mov
je
je
sub
xchg
std
fwait
fwait
fwait
cmp
cmpsl
jge
dec
jmp
cmp
cmp
cmp
loop
aaa
aaa
mov
sarb
cwtl
lcall
aaa
aaa
fnsave
and
mov
lahf
iret
mov
push
mov
mov
and
dec
pop
cmc
repnz
push
fdivs
xlat
vpaddusb
fsubrl
mov
cli
xchg
pop
je
mov
cli
push
mov
mov
sahf
lahf
out
mov
sub
stc
sub
repz
cmp
dec
mov
inc
shl
inc
nop
sti
pop
out
cmpsl
or
outsl
and
pop
mov
jmp
mov
adcb
dec
leave
clc
mov
push
ljmp
fcompl
push
lods
dec
adc
fwait
popa
cmp
outsb
jg
repz
fldcw
shll
mov
sbb
aas
iret
cmp
mov
out
jnp
xchg
je
pusha
shlb
push
stc
cmp
es
mov
sub
mov
out
gs
add
pop
jge
inc
add
or
add
fsub
xchg
aaa
aaa
aaa
fiaddl
and
cmc
xchg
mov
cmp
hlt
xchg
movsb
in
neg
fmull
enter
loopne
pop
pop
xchg
mov
aam
push
outsb
les
push
dec
sbb
ds
jecxz
cmp
and
test
test
cmp
mov
mov
mov
adc
push
or
jle
shll
int3
cmp
sub
mov
out
jnp
inc
xchg
lds
jp
sahf
or
sub
mov
fs
adcb
mov
mov
add
das
mov
dec
push
xchg
fmuls
int
int
push
pop
orb
mov
out
xchg
in
pop
clc
fnstcw
xor
sbb
insb
outsb
cs
lret
js
cmpsl
repz
inc
jle
mov
lods
movsl
psubb
xchg
xchg
clc
mov
sbb
scas
movsb
insb
outsb
outsb
cs
insb
pop
add
xchg
cs
push
pop
cmc
sbb
scas
jl
icebp
lea
adc
mov
adc
mov
jo
aaa
aas
pop
fstl
inc
out
xor
jo
xchg
mov
and
cld
push
sbb
jge
aaa
inc
fldt
jl
or
jge
scas
jp
xchg
push
mov
mov
int
mov
nop
fidivl
aaa
aaa
pop
mov
pop
mov
add
ret
cmp
add
mov
mov
mov
jae
aas
js
sbb
and
repnz
sub
stos
push
sub
pop
dec
call
xor
enter
outsb
test
jp
loope
bound
fcomip
push
sahf
jnp
mov
jbe
mov
inc
sbb
mov
clc
cmp
cmpsb
fimuls
pop
pop
test
push
adc
add
lods
mov
test
out
push
cmc
or
jmp
fucomip
dec
inc
dec
insb
cmp
aam
lock
mov
push
es
mov
or
hlt
jo
je
outsl
movsl
mov
push
jo
cmp
and
sahf
stos
sbb
mov
or
iret
aaa
aaa
aaa
aaa
push
pop
pop
rolb
dec
or
fcoml
jae
add
push
mov
sarb
iret
out
push
sbb
cmp
fwait
fwait
fwait
sub
stc
lods
in
jge
jns
xor
or
aas
fwait
inc
dec
rorb
adc
dec
fs
jno
ret
mov
cli
out
popa
ss
jp
jmp
clc
mov
mov
aas
andl
sub
aaa
mov
mov
add
inc
rorb
xor
sbb
mov
shlb
insb
inc
ja
jmp
inc
pop
mov
mov
aaa
sbb
push
cmp
add
aaa
push
bound
sti
call
adc
aaa
lret
je
xchg
icebp
push
cli
inc
scas
loopne
cmpb
inc
scas
pop
or
movsb
add
andb
push
notl
addr16
jae
sub
mov
pusha
aaa
mov
test
adc
sahf
aaa
aaa
aaa
aaa
scas
je
xor
mov
lahf
and
aaa
aaa
aaa
push
adc
dec
je
push
or
aaa
xchg
insb
dec
mov
rcrb
pop
cmp
mov
loopne
pop
rclb
rcl
xor
insb
outsb
outsb
fiaddl
pop
imul
hlt
fidivrl
loop
loopne
lock
mov
mov
mov
hlt
xor
jae
lahf
mov
xchg
sub
sbb
jae
movsb
and
movsb
shlb
mov
fdivl
mov
mov
sub
shll
pushf
xor
leave
test
cmp
and
mov
jae
test
test
daa
mov
xor
decb
or
mov
inc
xchg
bound
ljmp
outsb
push
lcall
mov
xchg
cmp
jle
loop
mov
add
insb
outsb
aas
fwait
dec
fwait
aas
push
and
xlat
shr
mov
test
mov
aam
fs
in
and
xchg
out
sbb
imul
sahf
int
int
das
inc
cld
test
or
xchg
in
outsb
pop
pop
mov
push
cmpb
outsb
dec
stos
rcrl
jecxz
inc
test
pop
mov
jl
aaa
xchg
sbb
xchg
pop
stc
into
shlb
nop
dec
pop
pop
xor
adcl
fiaddl
xor
sbb
dec
add
lcall
jmp
or
push
out
aaa
mov
mov
cmp
or
inc
lret
aaa
aaa
lahf
mov
imul
shll
lahf
mov
inc
or
pop
xlat
jecxz
dec
fildll
in
data16
adc
dec
mov
nop
and
pusha
jecxz
hlt
loope
pop
into
pushf
jl,pt
inc
xor
mov
xchg
fcmovu
sbb
adc
out
pop
incb
jns
jae
jle
outsb
xchg
ret
cmpsb
cltd
cmp
mov
arpl
insb
fsts
or
pop
insb
int
in
out
jbe
mov
fidivl
push
mov
ficomps
int
mov
or
or
fsubrp
mov
das
aad
test
push
sub
jno
cli
sub
jp
inc
pop
rcr
jge
sbb
repnz
out
mov
imul
mov
loopne
jae
and
ss
inc
sub
cli
mov
add
sub
testb
xor
fcoms
fiaddl
outsl
mov
or
fisubrs
pop
fwait
fwait
fwait
fwait
data16
ds
dec
add
shrb
or
fs
test
mov
push
lret
lods
cmp
push
pusha
pop
sarb
jb
mulb
xor
loopne
fwait
sub
insb
lods
jae
jae
inc
ljmp
clc
jae
jae
jae
cmp
je
pop
fistps
loopne
jae
jmp
sbb
mov
jle
dec
cld
adc
mov
faddp
ret
and
xor
cmpsb
fstps
mov
loop
iret
daa
in
push
es
cli
fwait
fwait
fwait
fwait
push
pop
and
push
push
cli
mov
dec
aaa
aaa
aas
fwait
push
xchg
test
xchg
rcll
clc
jo
clc
add
shlb
push
push
outsb
outsb
outsb
orl
sub
jae
and
cmp
mov
sub
jb
loop
jae
jae
mov
inc
shl
bound
lret
pop
mov
in
mov
imul
mov
mov
daa
fincstp
lock
jp
push
andb
jbe
lret
mov
rcl
push
push
int3
sub
dec
mov
or
xor
mov
mov
add
imul
inc
gs
pop
jbe
idivl
inc
and
mov
add
jecxz
jle
fwait
cmp
incl
leave
cmpsl
cld
rol
inc
pop
fmuls
aas
fistpll
in
mov
cli
mov
int
mov
addr16
loopne
sbb
ds
adc
mov
int
insl
in
cmp
adc
stos
cmpb
mov
out
xor
sub
popf
xchg
bound
inc
cmp
mov
pop
push
out
or
fsubl
fdivrp
add
lods
aas
mov
cli
arpl
into
mov
cmpsb
dec
sub
cltd
or
fisubs
scas
mov
dec
jp
cwtl
inc
sub
test
lahf
lods
sbb
arpl
pop
or
jge
fs
addr16
fs
or
dec
mov
dec
fsubrl
mov
sub
dec
add
mov
mov
push
lret
pop
jge
dec
inc
jmp
push
and
dec
inc
dec
inc
insl
out
adc
pop
mov
sub
mov
inc
clc
mov
mov
addb
fcmovne
enter
mov
cmpsl
and
outsb
outsb
outsb
mov
rcrb
adc
std
insb
outsb
addb
scas
xchg
test
mov
cmpb
insb
test
or
xchg
dec
loope
bound
cli
adc
sub
pop
test
mov
mov
jp
push
gs
jb
mov
sub
mov
inc
in
mov
adc
mov
cmpsb
outsl
mov
jae
mov
sti
cmp
lret
shr
xchg
mov
jae
daa
mov
xor
filds
lret
cmp
adc
int3
xchg
jno
fimull
and
and
inc
mov
sahf
rcrl
in
xor
fidivs
test
loopne
xlat
ror
cmpsb
adc
mov
xchg
idiv
insb
outsb
fcmove
cmp
rcll
xchg
in
imul
sarl
mov
aaa
data16
add
sahf
mov
add
mov
dec
lods
sub
mov
jmp
add
cld
movsl
inc
push
iret
xchg
pop
ret
jl
outsb
outsb
mov
sahf
test
lea
sbb
bound
in
fucomi
add
cld
loopne
xchg
xlat
addr16
cltd
cmp
ror
sahf
rcrb
mov
inc
pop
sbb
and
in
pop
scas
add
xor
sub
inc
adc
fiaddl
sub
jae
cmp
mov
sbb
cmpsl
mov
xor
movb
mov
mov
add
mov
ss
jae
jae
xchg
loope
lock
jbe
leave
aad
outsl
addr16
jae
add
test
int
in
mov
and
push
in
gs
int
int
cld
xchg
stc
ds
jge
sahf
inc
or
bound
or
adc
jae
jae
sbb
loopne
sub
clc
jae
jae
jnp
arpl
scas
pop
js
xor
jae
push
hlt
or
data16
inc
push
or
jae
mov
lods
out
insl
loopne
jae
dec
pusha
loop
sub
inc
mov
loop
dec
cmp
das
sub
cli
aas
fwait
mov
xchg
fmull
int
adc
loop
inc
push
pop
pop
test
call
cltd
lods
mov
jbe
mov
inc
sub
xor
add
mov
dec
adc
pop
sub
int
daa
lock
inc
inc
stos
xchg
es
es
je
and
push
mov
xor
cmpl
mov
cs
xor
mov
pop
sbb
pop
jnp
ljmp
in
ror
mov
mov
imul
inc
stc
imull
int
pop
arpl
sub
clc
incb
fwait
jmp
fcmovb
jns
cmp
outsb
mov
xor
fcomps
inc
sti
negb
and
outsb
outsb
outsb
outsb
push
cmp
or
notb
cmpsb
or
dec
fdiv
mov
lcall
fcmovb
jl
cli
fsts
mov
dec
and
mov
aas
stos
fdiv
and
pushf
mov
shll
fldcw
mov
xor
imul
ret
iret
out
sets
inc
into
inc
stos
cmp
jg
insb
inc
sub
stos
js
call
insb
pop
das
mov
sub
iret
dec
test
sub
add
pop
mov
jns
ficompl
pop
lock
shlb
repz
sub
jge
pop
movsl
es
push
lea
dec
aaa
pop
sbb
jae
dec
scas
xchg
insl
add
int
int
xchg
push
test
mov
mov
int
xor
or
lahf
enter
addr16
push
or
inc
adc
repnz
mov
cmp
pop
mov
mov
mov
popa
jle
xchg
imul
push
aam
push
xor
jle
mov
fimuls
fdivs
fwait
fwait
fwait
mov
icebp
cmp
bound
dec
aas
nop
mov
fldz
out
and
fcmovne
les
adc
es
fdiv
fstpt
or
ret
enter
sbbb
nop
cmp
xchg
and
push
pop
mov
test
jno
lock
fisttps
loop
jge
repz
xlat
shr
xchg
push
test
jl
mov
enter
fwait
or
cmp
dec
or
jmp
sti
movsb
mov
dec
pop
and
mov
push
mov
adcb
mov
fisttpl
cld
shlb
lds
sahf
fwait
fwait
adcl
or
mov
adc
sbb
out
jmp
es
clc
ljmp
js
lock
data16
jge
outsb
sbb
sbbb
and
sahf
mov
out
divb
mov
imul
xchg
jle,pt
ret
bound
sbb
ds
sub
in
add
cmp
js
test
sar
sub
popa
int
lahf
fwait
jae
test
leave
pop
push
push
int
int
aam
rdpmc
aas
les
xchg
int
int
cld
jecxz
shlb
pop
push
aas
rol
cli
popf
mov
or
cmp
push
lahf
int
sub
clc
mov
in
xchg
imul
inc
je
rcl
add
in
jae
pop
inc
testb
cs
dec
inc
mov
les
rcrb
iret
clc
jb
jmp
jl
outsb
pop
decb
mov
into
ljmp
fwait
fwait
fwait
jp
into
push
push
xor
jne
in
add
adc
loop
cmp
dec
jmp
fnstcw
pop
inc
sbb
jge
addr16
fnstcw
shll
cli
pop
inc
js
aaa
ja
or
dec
push
int
and
shl
orb
dec
popf
push
clc
push
push
sahf
adc
mov
xchg
adc
out
out
push
xor
lret
xor
jno
ror
out
inc
xchg
mov
push
testb
movsb
mov
out
ret
shlb
movb
js
and
xchg
adc
mov
add
std
insb
outsb
outsb
clc
push
or
add
mov
jle
pop
mov
and
xor
fistl
mov
or
aaa
dec
outsb
outsb
outsb
outsb
lea
mov
jo
sub
outsb
lahf
jg
xor
mov
jae
enter
mov
mov
and
push
pop
jecxz
jbe
or
cli
push
push
push
xor
fdivr
sti
loope
jnp
and
loopne
jo
sti
jns
ficompl
jp
out
testb
xchg
inc
adc
fildl
out
scas
test
xor
sarb
sbb
or
iret
sub
int
mov
loope
and
scas
ret
mov
or
gs
inc
jle
outsb
outsb
cs
add
push
pop
cmpsl
scas
mov
test
dec
jge
jnp
popa
int
lret
cmp
and
iret
mov
xchg
xchg
sahf
xchg
fldcw
orb
mov
call
pop
loopne
mov
cli
xchg
lock
pop
cmp
into
ss
aaa
aaa
cmp
rorl
xchg
lahf
test
jle
cmp
or
jnp
adc
aas
test
pop
adc
adc
jle
jp
or
inc
pop
jns
cmp
inc
push
rorb
adc
rolb
sub
int
cs
jnp
pop
or
subb
out
ret
rcll
and
jg
pop
jge
push
push
sarb
push
sbb
mov
mov
mov
jmp
add
pop
mov
int
cmp
in
mov
sub
pushf
fwait
add
repnz
test
lock
mov
aam
or
aaa
lahf
fwait
fwait
jle
mov
and
aaa
aaa
aaa
cmp
repnz
mov
sbb
lret
subl
test
mov
jecxz
insb
cld
push
jb
scas
jno
mov
and
sbb
into
test
cwtl
jnp
test
faddp
mov
aad
outsl
call
lods
mov
push
dec
repz
mov
mov
push
loop
and
leave
imulb
cmp
xchg
out
arpl
shll
pop
loope
insb
movsl
int
int
mov
repnz
cli
ds
int
std
inc
std
fwait
cmc
cmp
stos
notb
outsb
fstpl
test
popa
fwait
xor
jo
inc
mov
loop
jmp
lock
inc
mov
jae
jae
dec
adc
outsl
fmulp
pop
xchg
aad
jae
jae
dec
data16
ja
adc
push
ret
jnp
jae
ss
xchg
jne
xlat
mov
out
loop
sub
faddl
cmp
lret
in
pusha
popf
fcmovne
push
in
mov
aaa
aaa
push
cld
mov
mov
push
sti
loopne
add
cmp
popa
in
sub
fwait
dec
hlt
mov
addr16
repz
int
fbld
cmp
jle
ljmp
out
sbb
aaa
mov
in
mov
jne
push
xchg
test
push
cmp
push
jae
sti
cmp
mov
jl
imull
addr16
add
daa
aad
push
pop
cwtl
pushf
out
xchg
divb
inc
les
xor
mov
mov
mov
jecxz
adc
loop
and
clc
and
cs
cmp
xchg
mov
mov
add
mov
mov
jle
movsb
jne
divl
out
fdivrp
mov
sub
aaa
mov
jecxz
shr
push
mov
out
aaa
ds
aaa
aaa
push
enter
mov
sbb
adc
out
mov
divb
xchg
or
addr16
xor
dec
scas
push
pop
stos
mov
enter
aaa
push
outsb
outsb
outsb
outsb
shll
push
arpl
shll
xorb
sbb
iret
jns
sbb
outsb
outsb
outsb
mov
adc
out
divb
ljmp
mov
out
cmpl
es
out
in
push
pop
subl
fnstsw
jae
fdivrl
jae
cmp
sahf
mov
jae
std
inc
jle
imul
dec
inc
shll
ret
lea
jle
repz
jb
jae
and
xor
gs
mov
or
pop
jns
adc
and
ljmp
xor
insb
pop
ja
lds
in
and
or
fimull
lcall
bound
mov
insl
sbb
mov
lcall
cmp
dec
mov
push
hlt
cli
add
daa
add
cli
mov
mov
mov
pop
mov
rolb
jl
adc
inc
jecxz
jae
cmc
outsb
mov
out
insb
aas
fnstcw
mov
jbe
outsl
or
mov
clc
add
mov
lcall
out
push
aaa
cmovno
pop
jle
icebp
and
iret
add
call
and
fwait
jle
inc
fidivs
fsts
out
aaa
cmc
ds
dec
test
imull
mov
in
dec
or
fwait
mov
mov
lock
popl
sahf
fwait
mov
sub
out
mov
mov
ret
adc
out
jb
xor
jnp
jne
xorl
xchg
hlt
je
or
outsb
outsb
outsb
inc
xchg
idivb
int
fnstenv
aaa
hlt
mov
je
jae
aam
std
mov
cmpsl
inc
push
jecxz
and
jecxz
shll
mov
push
lods
in
sbb
adc
outsl
inc
sbb
cs
adc
clc
fs
xor
lods
mov
jae
jge
xor
dec
sub
add
out
lahf
push
fisubrs
add
stos
out
out
fldl
jno
cmpsb
push
dec
mov
shlb
iret
out
out
ret
pop
pushf
mov
out
pop
adc
in
test
xchg
gs
and
outsb
das
mov
data16
js
jmp
mov
jge
imul
sub
jb
sbbl
dec
mov
xor
cld
or
dec
inc
xor
sahf
inc
out
mov
hlt
sub
mov
push
mov
out
popf
lcall
and
cld
adc
sbb
cs
aaa
xchg
testb
vmovshdup
out
out
dec
cmp
ja
jno
pop
jmp
inc
nop
out
out
lock
std
jp
xchg
and
fildll
dec
out
scas
pop
rcrb
sbb
pcmpgtd
and
cld
fs
subb
cmp
jp
push
enter
jle
es
add
mov
rcr
lret
mov
out
sub
outsl
fcomps
pop
inc
testb
and
lcall
out
out
outsb
outsl
dec
cli
push
xchg
repnz
enter
out
ret
es
sbb
adc
aam
lret
int
inc
subl
jmp
in
pmaxsw
clc
in
movsl
and
ds
fwait
or
out
lods
adc
xchg
dec
pop
push
aaa
pop
cmp
mov
ljmp
cmp
in
xchg
push
pop
push
pop
pop
mov
enter
mov
ds
dec
mov
push
xchg
fdiv
fdivr
les
cmp
cmp
jecxz
fmull
test
aaa
mov
mov
data16
lock
or
aaa
aaa
rcr
xor
pop
gs
jns
sub
aaa
aaa
shll
add
outsb
das
hlt
mov
adc
loop
sti
insb
outsb
inc
scas
inc
sub
xor
and
out
cwtl
sbb
test
outsb
jp
jmp
xor
es
divb
icebp
bound
jae
iret
sub
mov
mov
je
addr16
add
aaa
cmc
incb
rcrl
jae
hlt
sahf
nop
xlat
out
out
adc
xor
fdivrl
add
dec
cltd
clc
fldenv
cli
add
xchg
test
int3
faddl
jae
out
inc
cmp
and
adc
mov
ds
loopne
cmp
push
and
mov
loopne
scas
jae
pop
outsb
shlb
ljmp
outsb
mov
dec
adc
mov
mov
das
and
jae
cld
xor
mov
mov
or
lock
jae
clc
jg
push
lods
aad
and
cmp
mov
xchg
ljmp
mov
ja
outsb
outsb
outsb
popa
jae
sbb
stc
int3
stos
divl
jl
lods
add
jns
cmp
movsl
aas
mov
mov
movsl
jmp
jl
adc
pop
out
mov
sub
cmp
out
xor
jnp
adc
adc
lock
les
in
lret
push
xor
sti
sub
mov
or
psllw
xchg
test
pop
loopne
ja
push
cmc
sub
ficoml
ss
xlat
imul
xlat
adc
mov
aas
fwait
xchg
sbb
nop
mov
fucomi
mov
inc
dec
shlb
cli
jo
jge
lcall
in
mov
mov
cmpl
aaa
push
into
dec
add
pop
pop
dec
es
xchg
test
aad
loop
adc
into
repnz
aam
insb
outsb
outsb
pop
shlb
lock
aaa
sub
cmp
push
std
adc
mov
dec
push
lea
dec
push
sahf
fdivrp
lcall
or
addr16
push
shl
std
mov
pop
push
dec
pop
cmc
and
mov
int
in
ret
add
adc
jp
mov
push
push
clc
jecxz
fdivrl
mov
rolb
int
in
add
cmc
push
and
add
scas
test
push
jb
cli
icebp
and
lret
fs
pusha
mov
mov
hlt
sarb
lds
mov
push
sbb
jg
jo
mov
mov
data16
shr
cmpsb
and
or
in
das
jmp
fiaddl
push
es
ss
fidivl
aaa
aaa
mov
test
push
mov
into
mov
jle
aaa
aaa
adc
imul
dec
mov
xchg
pushf
or
push
pop
das
jge
mov
cmp
mov
pop
or
out
push
lret
mov
shlb
push
roll
dec
inc
jp
fcomi
mov
addl
in
in
adc
fwait
fwait
fwait
add
rcrl
xchg
push
idivb
aas
loope
mov
fnstsw
xchg
xchg
rcrb
fdivr
arpl
and
add
inc
adc
fwait
fwait
or
sbb
in
cmp
mov
fiadds
testb
out
inc
xor
insl
movsb
das
or
mov
or
call
inc
test
add
dec
cmp
and
out
es
mov
insb
outsb
outsb
fsubrs
leave
mov
lock
fistl
push
mov
cmp
fwait
fwait
fwait
fwait
sub
sarb
push
rolb
sbb
sbb
cmpsb
clc
js
jle
mov
dec
iret
testl
cld
sub
add
mov
ret
push
pop
sbb
aaa
aaa
aaa
pusha
int3
dec
adc
mov
ret
xor
loope
push
std
push
push
jg
cmp
out
jae
pop
and
rorb
iret
mov
iret
fbld
jmp
dec
inc
test
das
scas
out
jge
aas
dec
pushf
inc
stos
adc
fimull
ret
pushf
add
cmp
in
jo
aaa
aaa
lods
shr
dec
mov
fwait
sbb
and
or
test
fwait
pop
inc
lea
testb
lock
sub
or
sub
js
dec
cld
outsb
je
dec
std
insb
outsb
inc
imull
cmp
mov
mov
cmp
or
mov
fiaddl
dec
xor
cmp
mov
test
cltd
push
mov
hlt
fisubrl
cmp
sub
ja
lret
mov
dec
in
out
test
pop
cwtl
and
fcomps
aaa
pop
cld
imul
incl
ds
aaa
xchg
xchg
jae
mulb
jnp
mov
sub
pop
sahf
add
jle
iret
insb
jne
jp
fmul
pusha
pop
div
lret
fstenv
cmp
sbb
inc
ljmp
mov
xlat
mov
mov
mov
fwait
fwait
fwait
fwait
adc
sub
daa
cli
push
andl
sbb
adc
sbb
jnp
ds
mov
sbb
fldt
rorb
mov
inc
nop
mov
jo
mov
mov
mov
loop
add
adc
sti
fnstcw
imul
test
xchg
out
jge
jae
pop
pop
pop
add
ret
les
aaa
aaa
movsb
add
fidivl
xor
sub
jle
aaa
lock
int
int
cmp
es
mov
lcall
pop
sub
mov
iret
in
addr16
lret
fisttpll
dec
movb
fsubrl
or
xor
cmpsb
inc
sar
fdiv
sbb
sub
mov
jnp
xor
jae
cwtl
scas
jg
mov
xor
or
call
popf
dec
add
mov
sti
sarb
sbb
pop
ljmp
in
icebp
push
sahf
fisttpl
or
dec
les
xchg
pop
lods
xlat
add
mov
cmc
dec
loopne
lret
push
dec
cwtl
out
out
orl
xchg
push
fs
push
cld
fsub
out
outsl
movb
popa
xchg
ljmp
repz
out
movsb
cmp
pop
mov
dec
fcomps
mov
xchg
aam
movsb
or
xor
jne
mov
inc
fisttpll
int
int
loop
clc
mov
xchg
mov
int
loopne
pushf
loop
int3
fcompl
filds
jae
lods
pop
sub
clc
mov
jno
jae
jae
not
or
rcrb
mov
pop
adc
mov
or
xor
fs
jb
out
mov
std
push
mov
pushf
or
scas
pop
sub
fdiv
mov
and
lods
lock
xchg
cwtl
xchg
and
cmpsl
adc
movsb
call
add
icebp
outsl
mov
mov
in
inc
adc
es
enter
nop
hlt
aaa
aaa
aaa
mov
dec
insb
cwtl
dec
fwait
or
pop
je
sti
cmp
pop
xchg
std
fs
push
pop
addr16
jae
lods
sbb
lahf
lds
xor
jg
jge
out
sbb
call
scas
inc
js
addb
mov
divb
and
mov
jge
or
sub
push
push
bound
pop
jae
loop
insb
jns
mov
repnz
adc
jae
sti
scas
scas
pushf
mov
iret
sbb
xchg
jle
lods
push
mov
fwait
fwait
fwait
fwait
push
xor
out
repz
mov
sbb
pop
ja
xchg
cmp
and
push
push
outsb
ss
aaa
aaa
jg
jl
fcmovnb
xchg
nop
mov
jl
mov
outsl
sbb
mov
mov
pop
and
fdivrs
sub
enter
stos
ljmp
int
out
out
sbbl
jmp
or
aas
push
int3
xchg
mov
or
lahf
sub
orb
je
adc
adc
ljmp
xor
push
jno
jp
mov
mov
setle
xchg
mov
cwtl
nop
dec
sahf
movsb
cwtl
pusha
outsb
outsb
outsb
outsb
xor
pop
cmp
daa
sbb
hlt
not
aad
notb
stc
or
and
iret
xchg
push
xchg
push
mov
jmp
loope
lock
shr
int
in
or
stos
enter
sti
test
int
add
xor
pop
cmpb
mov
out
or
js
cmp
adc
cwtl
jp
adc
insb
out
cli
enter
cli
into
mov
nop
sbb
pop
cmc
mov
inc
inc
daa
imulb
mov
faddp
ror
cmpsb
cwtl
lcall
mov
inc
test
out
out
stos
lods
fnsave
loopne
fstpt
out
out
pusha
sub
mov
cltd
dec
lock
push
pop
inc
mov
adc
movsl
popf
lods
lahf
int
mov
movsb
cmp
subb
clc
aaa
cmp
movd
and
outsb
outsb
push
or
pusha
pop
dec
jmp
out
mov
pop
arpl
lea
xchg
into
out
dec
cmc
sbb
or
lds
push
stos
mov
out
mov
shlb
leave
cmpsb
in
mov
fwait
sub
jne
sub
aad
les
xchg
inc
pop
daa
pop
lahf
in
inc
out
cmpsl
adc
mov
xchg
aaa
sahf
sbb
movsb
mov
fwait
popf
or
sub
es
dec
aas
cmp
push
bound
sahf
xor
lods
call
xor
mov
mov
jecxz
outsb
insb
push
mov
mov
aaa
mov
int
xchg
add
push
mov
lret
sti
dec
pop
aas
fwait
ds
xor
jle
dec
iret
int
push
mov
stos
mov
push
sbb
cli
insb
sbb
add
sub
cmp
ds
test
in
adc
sub
mov
jae
jae
jmp
ficoml
jmp
loopne
jae
shlb
xchg
mov
mov
pop
negl
adc
sarb
pushl
jecxz
out
lahf
test
fmul
fsubs
out
out
xor
hlt
push
icebp
add
cmpb
cltd
xchg
in
mov
mov
enter
int
shl
jb
js
push
jge
cmp
mov
std
mov
enter
out
testb
fdivl
dec
mov
sub
out
sbb
out
mov
xchg
out
mov
out
stc
cmp
push
in
pushf
xchg
xchg
jae
scas
mov
std
cmc
mov
out
icebp
mov
jae
fcomp
sbb
in
pop
push
or
adc
mov
add
fwait
fwait
jb
xchg
push
loopne
popa
aaa
jl
cmp
cmp
jbe
mov
aaa
aaa
aaa
mov
jbe
fldz
fimuls
jae
mov
jl
aam
rolb
jae
fisttpl
cli
or
lock
scas
test
jae
jnp
out
jo
inc
push
daa
cmp
icebp
aad
jmp
jae
cmp
std
in
js
rol
jae
repz
push
pop
sbb
mov
popf
mull
dec
push
data16
lods
mov
mov
iret
out
mov
mov
cwtl
pop
repnz
pop
adc
mov
pop
int3
xor
mov
sti
mov
mov
cmp
clc
xor
jl
cmp
aas
iret
push
fucomi
ljmp
addb
insb
outsb
insb
mov
jno
addr16
rolb
in
ret
pop
sbb
inc
adcb
lahf
sub
pusha
inc
aas
cmp
pushf
loop
outsb
outsb
outsb
mov
jne
adc
daa
aam
ret
pop
cwtl
and
nop
mov
aam
adc
ss
aaa
ja
push
pushf
mov
push
inc
ucomiss
lods
push
jg
push
cld
add
shl
outsb
fcmove
mov
movsl
sub
or
lea
mov
idivl
mov
cmp
jb
data16
out
orb
mov
jb
int
and
aam
out
and
inc
push
mov
xchg
dec
je
repz
mov
jmp
nop
inc
dec
imul
xchg
clc
enter
xor
mov
dec
push
addr16
cmp
mov
lcall
pushf
subb
push
or
adc
mov
or
enter
hlt
jmp
iret
negb
add
mov
mov
xchg
inc
ret
pusha
ficomps
clc
sahf
jmp
and
pop
ja
sbb
iret
lahf
pop
cmp
xchg
mov
nop
jne
outsb
outsb
outsb
mov
in
je
ljmp
out
mulb
push
adc
sbb
out
sbb
shlb
mov
scas
iret
mov
aad
or
popf
fwait
sbb
in
repz
inc
sbb
fwait
fwait
fwait
fwait
mov
data16
or
lahf
fwait
fwait
mov
or
cld
in
fwait
adc
mov
insb
outsb
lods
cmpb
inc
shlb
cmp
mov
xchg
jb
jae
test
fsubr
mov
inc
push
out
iret
xchg
dec
mov
popa
lahf
push
popl
push
cmp
xchg
stos
call
push
pop
enter
mov
mov
cmp
inc
pop
lret
push
rcrb
ffree
xchg
sahf
fwait
fwait
fwait
aas
add
inc
mov
std
dec
out
adc
or
shlb
sahf
jl
outsb
outsb
aas
push
in
insb
sbb
sbb
gs
lret
dec
test
push
mov
daa
inc
jno
sub
int
int3
xor
jae
add
es
aaa
or
xorl
mov
cmp
fimuls
aaa
aaa
aaa
aaa
jg
mov
mov
out
add
dec
cmp
dec
push
push
cmc
pop
sub
add
or
repnz
sub
std
insb
aas
mov
cwtl
movb
ja
add
inc
jl
aas
sbb
ljmp
mov
jl
out
int
in
cmovle
add
aam
divl
int
int
and
test
cmpsb
mov
add
pop
adc
mul
call
cmpsl
lea
xor
push
aaa
aaa
aaa
push
xchg
or
or
pop
cltd
fadd
mov
out
xchg
cmpsb
out
addr16
es
dec
mov
stos
vmovntps
nop
faddp
mov
fbld
pop
sub
cmp
adc
loop
popa
out
movsb
push
jle
mov
inc
int
insl
lret
lea
fwait
sub
fldcw
loope
fnstenv
out
aam
clc
push
cmp
cwtl
cli
mov
push
sbb
lea
fsubl
mov
adc
mov
xor
xlat
addr16
adc
addb
or
out
xchg
jle
pop
jge
inc
dec
movsb
mov
in
mov
cmp
test
or
dec
jnp
out
notb
dec
cwtl
in
cmc
lock
mov
int
fstpl
cmpsl
dec
inc
mov
test
loope
sbb
aaa
aaa
ds
repz
and
xlat
orl
popf
push
imul
out
mov
xor
cs
cmp
add
idivl
data16
jle
push
and
mov
sti
or
sbb
inc
iret
in
sub
push
outsb
ficoml
iret
jecxz
inc
and
push
jo
sahf
faddl
inc
scas
lea
pushf
and
int
inc
pop
jg
cld
push
sub
adc
and
outsb
into
inc
mov
mov
ja
aas
mov
scas
nop
cmp
ffree
int
int
push
movsl
xchg
adc
jle
sahf
aas
and
fdivp
in
mov
pop
pop
ret
out
fistl
mov
and
push
out
xor
test
sahf
mov
inc
rorb
cmp
shl
mov
or
xor
lock
jae
jae
cmp
xorb
mov
int
psubq
cmp
jge
dec
inc
das
cmp
ss
jmp
cmp
iret
int
in
jl
dec
mov
rcr
sarb
fwait
fwait
mov
loopne
bound
pusha
or
xor
and
ds
push
cmp
repnz
xchg
jno
cmpsb
aas
fldt
mov
push
test
ja
insb
dec
incb
sar
icebp
xchg
imul
fsubp
subb
cmp
mov
addr16
aaa
aaa
fcomip
xlat
es
addb
xchg
popa
and
push
in
add
mov
ljmp
xchg
cmp
adc
pop
and
cli
in
jnp
ds
dec
adc
dec
inc
mov
sbbl
aaa
push
std
xor
loope
push
xor
jns
or
sbb
mov
clc
stos
sahf
push
xor
adc
mov
movsl
stos
xor
xorb
pusha
cmp
add
push
jb
test
sbb
jp
lods
mov
mov
aas
cs
lods
jl
lock
dec
test
add
sub
lahf
in
mov
or
mov
jae
mov
decl
mov
xor
jp
cli
add
enter
stc
test
or
loopne
jo
inc
ja
mov
xchg
movsl
leave
scas
or
repz
adc
mov
mov
jl
fildl
rorb
hlt
or
sti
fcoml
mov
arpl
mov
fildll
mov
mov
dec
cmc
insb
lods
enter
fmull
cmp
xchg
lock
into
lods
je
and
es
xchg
xchg
xchg
dec
inc
jge
mov
or
sbbb
push
insb
sbb
dec
adc
cmp
push
jle
popf
jmp
push
sahf
insb
outsb
outsb
outsb
xchg
sub
mov
mov
das
aaa
cld
fsubl
mov
test
out
mov
lock
add
mov
cmp
jo
das
icebp
js
sub
xchg
fmuls
dec
or
inc
mov
je
inc
pushf
cmp
clc
xchg
jp
mov
stc
xchg
adc
clc
insb
pop
mov
in
out
out
imul
sub
hlt
adc
jae
rorl
lret
or
ret
and
xchg
mov
cli
insb
scas
js
xor
daa
pop
sbb
lock
test
mov
mov
jae
iret
out
bound
push
sub
addb
test
jae
push
push
adc
pop
hlt
xchg
and
ss
sub
fcompl
cs
aas
imul
jle
xchg
fwait
pop
rcr
rorb
adc
mov
das
or
lahf
fwait
fwait
dec
addr16
or
ds
pop
test
test
mov
or
cmp
and
mov
inc
mov
idivl
cmp
pop
lock
aam
addb
rolb
jbe
mov
cli
jo
int3
jmp
int
loope
out
inc
pop
sbbb
sahf
int
mov
and
js
cmp
ret
xchg
int
mov
shll
jp
adcb
clc
addr16
fbstp
jae
fcom
in
clc
or
loop
rdpmc
addr16
sarl
xor
out
mov
mov
ret
out
xchg
adc
aam
mov
mov
adc
in
mov
lret
mov
stos
push
or
mov
and
movsl
aam
nop
lcall
pusha
js
xchg
push
ss
loopne
je
aam
inc
gs
jae
sti
cld
adc
pop
pop
jns
loopne
in
or
call
fs
ds
adcl
cmp
lret
cli
pop
cmc
fcmovb
cmp
or
adc
adc
sbb
lods
cmp
cmpsb
loope
dec
adc
and
je
lret
cmp
aam
pop
pop
inc
jg
sbb
shlb
mov
push
pop
shlb
mov
jae
cmp
ljmp
xchg
mov
dec
dec
outsl
push
mov
mov
mov
shlb
mov
fwait
fwait
fwait
fwait
jge
cli
cmp
adc
push
lahf
fwait
fwait
mov
jmp
sub
int
int
fnsetpm(287
push
popa
push
mov
lcall
pop
shl
pop
ss
and
idiv
ds
push
gs
test
pop
dec
insb
movb
jmp
xchg
mov
mov
push
and
ds
jmp
fldcw
add
addr16
pop
icebp
add
sub
repz
out
sub
mov
loopne
idivb
int
int
aad
adc
inc
cmp
dec
int
into
xor
jp
mov
jae
inc
adc
or
xchg
mov
jae
movsl
jno
cmp
outsb
pop
pop
lcall
pop
push
dec
jnp
jge
outsb
jnp
sbb
rolb
push
lahf
jge
jl
push
mov
cmp
lock
jge
data16
add
sahf
les
icebp
push
rolb
jbe
lret
out
cltd
fwait
mov
scas
loop
xchg
cs
lret
int
add
ss
mov
jno
out
out
cmp
and
sbb
pop
pop
mov
mov
adc
lds
cmc
mov
inc
jb
sahf
add
sti
pusha
cmp
sbb
adc
jae
test
lret
mov
xor
repnz
push
stos
scas
packuswb
inc
dec
cmp
pusha
fcomp
inc
addl
ret
push
jl
lods
adc
repz
fsubl
push
and
pop
xchg
fnstcw
cmpsb
xchg
out
pop
pop
iret
testb
sub
aaa
pop
ja
jge
pop
add
fsubl
js
pop
out
mov
daa
xor
dec
adc
ljmp
fcomi
xchg
sarb
adc
cmp
mov
lock
outsb
lahf
fwait
lcall
inc
je
cmp
cli
out
sahf
cwtl
cmpsl
jge
dec
ror
out
jno
scas
outsb
shlb
call
or
cmp
mov
icebp
mov
dec
fsubrs
sbb
dec
ljmp
mov
mov
jo
nop
fcoml
cltd
jns
mov
add
cltd
cmpsw
icebp
loop
faddl
adc
dec
js
lret
notb
in
dec
xchg
push
cmp
int
pop
or
sbb
fisttpl
mov
int
push
mov
dec
dec
test
cmp
mov
fs
sahf
mov
ljmp
push
js
aam
sahf
mov
sbb
add
out
and
sbb
lock
lock
jl
mov
cmp
pmulhw
fisttps
mov
xor
jl
iret
out
mov
or
aaa
aaa
mov
shll
pop
xor
fdivs
cmp
ja
inc
jg
pop
outsl
repz
mov
fs
xchg
mov
adc
mov
pop
push
inc
add
lock
sti
outsb
outsb
outsb
sub
data16
cmp
test
pushf
xchg
and
in
pop
ds
mov
test
out
mov
dec
ret
pop
pop
xor
xchg
mov
mov
and
cmp
cmp
arpl
and
std
mov
mov
sub
pop
pop
popa
jge
add
ljmp
rorb
push
mov
cmp
lcall
add
mov
add
and
or
in
les
sbbb
jg
insl
mov
imul
dec
fst
daa
or
lock
in
mov
sbb
push
pushf
dec
ss
jp
outsb
cli
sub
sbb
xor
mov
hlt
insb
and
mov
sbb
out
out
pop
repnz
add
mov
out
arpl
and
inc
js
fcmovne
out
mov
mov
fimull
outsb
outsb
aas
fwait
aaa
pop
pop
mov
les
fdivrl
sub
dec
nop
adc
rcr
rcl
fsubl
mov
jmp
rol
jge
pop
out
test
cmp
mov
pusha
sbb
enter
mov
jbe
es
lock
dec
and
lock
fisttpl
and
mov
mov
push
push
adc
rolb
in
ds
cli
mov
push
mov
dec
clc
fsts
add
jmp
int
int
mov
jb
outsb
push
iret
scas
lahf
sahf
xchg
ljmp
outsb
outsb
outsb
das
je
push
jbe
or
fcmovnb
aaa
push
jl
push
adcb
lock
popa
push
rorl
ss
push
cmp
filds
test
pop
arpl
js
adc
mov
push
xchg
mov
mov
cmp
jno
cmp
mov
jle
out
fistpll
mov
xchg
mov
xchg
dec
es
and
repz
mov
push
cmp
cmp
unpcklps
aam
jae
push
push
push
fcom
push
addr16
popf
sub
in
jecxz
dec
je
xchg
out
rorl
icebp
lret
movsb
mov
into
dec
popf
or
adc
mov
cmc
stos
fnstsw
lahf
lock
imul
les
pop
dec
dec
pop
sub
cmpsb
push
inc
rorb
ret
xor
mov
enter
and
mov
fdivrl
js
mov
mov
vpshufhw
rol
jp
jle
jecxz
mov
lods
andb
outsb
outsb
cs
fwait
rcrl
mov
lods
loopne
test
sbb
inc
push
push
aaa
aaa
aaa
aaa
movsb
mov
pushf
mov
outsb
cwtl
push
sbb
nop
jp
jae
faddl
or
dec
das
lock
cmc
jb
cmp
mov
std
inc
cmp
insb
mov
addr16
cmp
cmpsb
rorl
sub
test
jle
fdivp
jp
jl
jecxz
push
arpl
push
scas
cli
add
sbb
ss
hlt
loope
cmp
mov
mov
fiadds
repnz
mov
mov
in
push
rorb
shlb
dec
cmp
int3
out
out
sub
and
cwtl
mov
lock
fmull
je
push
mov
fwait
insl
cmp
shr
xchg
test
sahf
fwait
fwait
fwait
adc
gs
cmp
lret
jo
cmpsb
out
adcl
das
sahf
fstpt
xor
clc
jae
sti
pop
push
and
sub
mov
in
jae
mov
inc
xor
sub
add
jl
and
in
aaa
mov
in
xor
es
pop
xchg
push
rclb
ret
scas
cli
jle
push
add
add
cmpsb
push
sbb
push
lret
loopew
out
daa
sub
dec
in
aas
or
testb
int3
stos
jg
xor
aaa
jl
outsb
sbb
dec
push
jnp
popf
and
jecxz
pop
outsb
outsb
ds
jg
inc
add
push
cld
sahf
sbb
mov
popa
lods
insl
cli
arpl
cmp
aaa
aaa
mov
jl
inc
add
mov
mov
cmp
mov
lahf
int
pop
push
data16
pop
add
inc
mov
aam
scas
in
or
int
testl
fidivl
test
sub
movl
sbb
out
hlt
loope
add
movsb
dec
lods
scas
lret
aam
int
int
sar
push
push
push
pop
sub
outsl
sbb
mov
int
jmp
rorb
test
lock
fcoms
adc
fwait
ljmp
stc
scas
mov
jl
repz
cmp
arpl
repnz
cmp
or
es
mov
mov
xchg
jns
outsb
orl
mov
add
jb
sbb
and
shl
movsl
jae
div
stos
or
sbb
insl
adc
jae
jae
es
sub
cli
mov
sbbb
push
ljmp
or
jae
movsl
es
mov
mov
mov
testb
daa
sbb
clc
xchg
out
fcoms
add
jbe
cld
or
call
int
cmp
push
stc
cmpsb
arpl
dec
push
aaa
lock
xchg
call
fwait
fwait
fwait
jnp
xor
mov
jle
in
lret
fwait
fwait
mov
push
inc
xor
sahf
je
cmp
subl
mov
addr16
paddsb
dec
mov
imul
stc
mov
gs
dec
and
lret
jecxz
jae
repz
das
cmp
jge
jb
test
addr16
lcall
lock
icebp
dec
js
adc
jbe
in
sub
push
pop
js
xchg
inc
dec
dec
test
inc
pop
out
adc
cld
mov
imul
push
xchg
loop
insb
push
and
jbe
add
lea
mov
sbb
enter
in
hlt
pop
in
adc
mov
aam
mov
mov
push
loope
cltd
xchg
cmp
out
mov
jp
and
mov
xchg
xchg
movsl
jmp
jb
js
cmp
ja
test
adc
aaa
jge
outsb
mov
outsb
adcl
sub
and
data16
push
dec
ljmp
ljmp
inc
and
jnp
or
cmpsb
aaa
aaa
cld
sbbl
imul
aaa
push
pusha
inc
dec
pop
stos
xchg
ret
scas
fwait
fcmovnbe
test
mov
jbe
adc
sub
cmp
fnsave
ds
pop
outsb
clc
push
insb
adc
xor
outsb
cs
ret
bound
pop
stos
cmp
mov
mov
or
je
fwait
out
cmp
out
mov
mov
mov
iret
sub
dec
xchg
jae
jae
cwtl
into
shll
popa
jle
jge
addr16
xchg
inc
in
sbb
mov
and
sbb
test
jg
xchg
pop
push
pop
mov
mov
fdivrl
pushf
pop
and
out
adc
mov
enter
aad
cmp
iret
divb
js
fdiv
cmpb
mov
fwait
fwait
fwait
fwait
mov
mulb
test
popf
int
lahf
inc
rcrl
sub
jnp
mov
xor
outsb
xchg
xchg
fwait
mov
rcrl
mov
je
pop
aas
fwait
fwait
jmp
add
icebp
sub
ss
adc
jle
pop
push
pop
dec
jg
movsb
xor
cs
outsb
push
stos
jecxz
ss
aaa
push
adc
outsb
or
or
push
sbb
fdivrl
mov
jle
mov
in
mov
dec
jo
call
iret
int
xor
roll
lock
jle
pop
sbb
testb
flds
mov
pop
lahf
lock
jle
mov
jp
int
in
movsl
and
cmp
sbb
adcb
push
aaa
mov
xchg
fistpll
mov
cmp
inc
ret
and
push
loop
nop
and
hlt
jno
mov
xchg
mulb
cmpl
hlt
mov
jae
fnstcw
in
push
rcrb
xor
jae
xor
cs
out
es
outsl
mov
cmp
inc
arpl
inc
clc
or
je
inc
jae
loopne
xor
pusha
fisttpll
adc
aaa
mov
add
test
fildl
dec
daa
iret
ficoml
clc
ds
and
mov
pop
sbb
mov
mov
mov
pop
inc
jg
repnz
inc
sub
xchg
push
jae
jge
out
xchg
mov
adc
mov
pop
ljmp
pop
and
xor
idivl
sbb
jl
mov
stos
sub
mov
out
pushf
xor
jae
or
js
insb
mov
inc
mov
jns
jecxz
fwait
fwait
fwait
sbb
sub
sub
adcb
rcrb
xchg
or
mov
outsb
out
clc
mov
lea
xchg
push
adc
and
adc
arpl
push
pushf
xor
pop
xor
add
push
mov
scas
out
out
cmp
hlt
sub
ljmp
out
out
lret
std
jbe
jo
add
push
sbb
pop
rol
push
jbe
mov
in
sbb
mov
lock
lret
icebp
or
lds
and
xchg
je
inc
enter
jae
push
dec
sti
adc
jmp
fdivl
daa
xor
bound
jae
sahf
pop
xor
scas
pushf
aaa
repz
addr16
jae
and
pop
dec
pop
stos
je
loopne
aaa
in
jnp
loopne
pop
aaa
aaa
mov
push
push
dec
js
gs
xorb
aaa
aaa
aaa
aaa
pop
test
adc
xchg
inc
mov
mov
fbld
lahf
add
mov
andl
fcompl
pop
jp
shr
pop
xor
dec
jo
mov
xchg
test
push
or
int
ret
sub
test
jge
jae
xor
mov
adc
and
mov
loop
lods
mov
aam
leave
fs
sbb
out
fwait
xchg
outsl
pop
lret
or
stos
xchg
dec
incl
jl
fsts
inc
mov
jne
pop
mov
out
orl
mov
pop
lock
mov
pop
nop
sub
addr16
xor
xor
adc
les
mov
jae
stos
and
sti
push
push
fwait
sbb
ret
mov
or
call
dec
roll
push
mov
or
jge
mov
int3
or
loopne
hlt
pop
lock
mov
add
jp
movsl
mov
push
cli
mov
ja
lret
aaa
cmp
mov
aas
inc
out
mov
dec
cmp
shrb
and
dec
lahf
int
add
pop
cmp
fwait
or
inc
cwtl
out
adc
js
shr
pop
repz
mov
xchg
ficoms
cmp
gs
jbe
mov
dec
lods
sub
hlt
sbb
mov
mov
xor
add
add
or
fcoml
fnstenv
aam
andb
fists
out
sti
insb
mov
pop
test
adc
lret
out
mov
sub
xchg
adc
test
bnd
iret
out
adc
repz
jnp
xchg
jae
jae
lahf
xchg
mov
lahf
movb
fmuls
mov
loopne
dec
out
ds
test
jle
outsb
clc
bound
pop
pusha
mov
ja
sub
jae
jae
add
into
adc
xchg
int
int
or
bound
xor
rclb
and
iret
int
out
or
andl
sti
pop
sti
dec
xchg
mov
and
jge
int3
outsl
outsb
insb
aad
inc
outsb
push
lock
dec
jne
lcall
int
in
pop
sub
sbb
xor
lahf
int
int
aaa
fstps
not
jne
out
out
out
lea
pop
rclb
out
out
nop
xchg
inc
pause
push
pop
mov
ret
int
aas
adc
lret
push
cltd
daa
imul
int
fstpl
cmc
lea
dec
adc
xchg
mov
add
rcll
add
jnp
cmpsb
fiaddl
cltd
sbb
mov
dec
xchg
loope
ret
jae
mov
sbb
out
jae
jae
cli
xchg
add
lcall
and
jae
jae
repz
js
int3
das
fdivp
imul
ret
fwait
lcall
sbb
sti
enter
int
xchg
sub
mov
jae
loopne
sub
imul
leave
ret
xorb
mov
repz
cmp
push
push
jp
push
mov
ds
fwait
fwait
and
jns
outsb
or
inc
push
push
lret
cmp
or
fcoml
arpl
loopne
pop
out
pop
into
aaa
fbstp
pop
dec
out
out
xchg
pop
addb
lret
std
pop
notb
out
and
adc
mov
out
or
mov
out
out
xchg
or
fwait
fwait
fwait
push
push
in
sbb
addr16
pop
jno
jbe
jp
pop
aas
fwait
test
repnz
mov
lods
lods
iret
repz
cs
pop
or
jle
imul
ljmp
sub
lods
js
cli
pop
ds
imul
and
push
inc
add
add
aad
cmc
mov
or
data16
ret
push
cmp
lods
dec
sbb
fcompl
push
mov
js
and
mov
outsl
adc
stc
mov
rorb
lret
mov
mov
or
mov
repnz
jbe
fs
mov
push
jp
movsl
jnp
jge
decb
fdivrl
jo
jg
add
pushf
inc
mov
call
pop
xor
test
and
lock
jbe
push
xor
icebp
pop
mov
addr16
test
adc
imul
test
ljmp
fdivrl
aaa
mov
xor
adc
test
adc
stc
out
cmp
cld
out
jbe
scas
jae
jae
pop
imul
stc
cmp
nop
aam
incb
loopne
int
addr16
mov
mov
lea
cmp
int
int
mov
sbb
fstl
int
int
dec
pop
jmp
arpl
pop
aas
loope
xchg
mov
push
cmp
loop
push
jae
aaa
mov
fcmovb
inc
ja
dec
out
idivb
cli
fisubs
cmp
jae
ror
mov
jbe
std
adc
pop
jae
jae
xorl
pop
stos
int3
out
daa
ds
pop
aam
mov
jmp
dec
jno
cmp
push
cmpsl
adc
jae
mov
cmp
push
push
mov
xchg
mov
sbb
inc
sub
mov
cmp
push
cwtl
shlb
mov
mov
push
lahf
or
push
mov
jae
rcll
je
pop
fchs
fdiv
andb
jae
jae
icebp
and
cld
fs
mov
cmp
mov
sbb
jmp
les
loopne
sbb
stos
lods
add
inc
add
push
sub
push
dec
cmp
xchg
mov
sbb
mov
add
or
scas
jbe
clc
ss
jle
aad
sbbb
xchg
rorb
outsb
mov
int3
and
or
mov
jmp
mov
inc
pushf
push
ffreep
sbbl
das
mov
nop
lea
cmp
xchg
out
pop
xchg
pop
dec
loopne
std
icebp
xchg
outsb
outsb
outsb
xchg
or
xor
test
cmc
and
mov
sub
insb
pop
icebp
inc
mov
add
lds
adc
jae
and
cmpsb
add
add
in
jae
jae
ja
sbb
nop
mov
pop
movsl
out
daa
jae
jae
sbb
mov
imul
and
aad
ror
mov
arpl
mov
push
cwtl
lahf
clc
sbb
lret
cmp
mov
data16
mov
outsb
outsb
outsb
inc
mov
aas
dec
cmp
adc
mov
int
je
bound
ss
mov
call
orb
adc
sbb
add
ljmp
xchg
dec
das
sbb
fdiv
mov
push
in
addr16
sub
mov
fdivrl
int3
pop
popa
shlb
outsb
cs
lock
push
mov
aas
vmwrite
jle
cld
insb
std
and
dec
rcl
push
cmp
sbb
dec
das
jge
std
insb
xchg
jg
lea
mov
xor
xchg
testb
dec
push
mov
add
dec
ds
shll
xchg
fcmovnb
iret
mov
test
xchg
add
int
int
ret
mov
fwait
cmp
dec
loope
adc
sub
int
mov
shl
xlat
mov
cmp
sub
jecxz
push
jns
movsl
setnp
sbb
fimull
fwait
fwait
mov
add
outsl
cs
and
pop
push
aas
leave
orb
into
jle
in
ja
sub
sbb
fcomip
pop
or
out
xchg
xchg
mov
imul
mov
loopne
out
jbe
test
aad
add
js
pusha
gs
aaa
addr16
fwait
fisttpl
sbb
push
lea
outsl
in
jae
lock
lahf
fwait
pop
loope
loop
mov
enter
and
aaa
sub
lods
push
test
shll
pop
inc
les
adc
cli
or
mov
dec
ficomps
mov
outsb
cs
clc
adc
xor
add
dec
and
outsb
mov
or
ds
xchg
insl
push
mov
and
xchg
iret
int
int
inc
enter
leave
stc
aad
nop
adc
aaa
aaa
mov
cmp
aad
cmp
or
sbb
push
stos
or
xchg
lahf
sbb
stos
icebp
fsubrl
mov
fcomi
cmp
es
dec
inc
jo
xor
hlt
and
addr16
lahf
fwait
std
pop
into
mov
mov
add
movsl
xlat
mov
fdivr
int
idivb
cmp
scas
ficoml
out
icebp
cmpsl
stos
hlt
mov
repz
je
push
sti
push
pop
sub
fdiv
icebp
xchg
add
out
into
daa
sbb
pop
bound
lea
mov
dec
test
imul
add
leave
jns
xor
and
cs
outsb
outsb
aas
cmpsl
adc
sub
outsb
outsb
rol
mov
xor
push
mov
inc
shr
inc
pop
movb
mov
push
mov
push
gs
mov
into
pop
mov
add
mov
std
xor
mov
mov
fisubrs
mov
or
push
xor
mov
mov
repnz
loop
in
imul
and
sbb
fdivrl
test
mov
outsb
pop
loopne
push
or
mov
xchg
adc
fistl
push
adc
xor
fmull
fdivr
sahf
in
xor
out
pop
push
loopne
loope
ja
cmp
pop
cmp
jo
fisubrs
or
pop
sahf
fistpl
out
jnp
and
les
mov
in
insb
leave
pop
imul
mov
pop
shrd
and
int
in
adc
stos
andnps
xchg
aaa
or
cmpsb
jle
lods
fnstcw
and
ljmp
aaa
aaa
aaa
and
ljmp
inc
cmp
mov
pop
movsl
jbe
mov
orb
movsb
push
inc
push
push
lods
iret
int
mov
ss
jecxz
mov
or
test
mov
pop
mov
aaa
mov
xor
pop
jo
fwait
out
dec
lahf
push
clc
and
cmc
jnp
insb
jne
mov
icebp
sub
mov
mov
adc
ss
fsubrs
jno
pop
dec
fimull
mov
mov
or
gs
mov
mov
mov
leave
or
inc
mov
or
cmp
icebp
loopne
mov
pop
and
lahf
in
test
outsb
das
aad
in
leave
dec
mov
lock
mov
cmp
xor
cmp
lock
jns
leave
add
hlt
mov
mov
jae
jae
xor
repz
data16
pop
loopew
out
pop
push
adc
lods
out
into
or
jmp
inc
lcall
mov
xor
dec
cmp
insb
adc
out
pop
xchg
leave
lods
dec
adc
in
test
out
lret
push
xchg
stos
fwait
fwait
fwait
fwait
ret
mov
scas
faddl
into
test
mov
push
adc
fcompl
mov
jge
push
mov
mov
lcall
sub
daa
mov
nop
mov
divb
dec
in
fdivrs
jbe
fwait
fcmovnb
push
xchg
add
stc
adc
xbegin
sbb
fwait
sbb
bnd
sbb
xchg
adc
inc
inc
pop
test
hlt
jne
pop
rcll
les
scas
pop
imul
mov
dec
or
outsb
outsb
outsb
outsb
jg
mov
shll
add
xchg
out
rolb
cmpsl
cmp
mov
or
idivl
outsb
outsb
outsb
shrl
test
inc
dec
push
aad
outsb
outsb
outsb
ja
push
push
fsubl
add
icebp
xchg
xchg
es
fimull
sbb
fimull
cs
cmp
negb
sbb
cld
sbb
pop
pop
xor
mov
stc
fwait
fwait
fwait
sbb
push
and
test
loope
jp
mov
mov
pop
or
cmpb
push
cld
sahf
ss
xor
mov
icebp
lret
enter
sti
add
add
cmp
je
clc
fprem1
cmpsb
push
sub
cmc
xchg
or
ds
in
rcrl
sub
jge
stos
adc
or
cli
jmp
aaa
aaa
aaa
aaa
mov
cmc
orl
icebp
lcall
and
stc
or
sub
sbb
cmp
aam
bnd
mov
aas
ja
mov
cmp
pusha
mov
mov
fistl
repnz
add
sub
js
call
sbb
xchg
enter
cmp
lcall
fwait
add
xor
jae
jae
jl
arpl
or
inc
loopne
enter
sub
jae
add
cld
sahf
push
insl
pop
mov
add
movsl
sahf
fidivs
int
mov
out
iret
in
jae
repz
sub
dec
in
lods
pop
xchg
jl
ss
mov
jne
aas
or
test
adc
mov
lods
inc
xor
jae
jae
xor
and
inc
out
popf
std
insb
or
dec
adcb
push
data16
mov
cs
cli
adc
xchg
inc
mov
lcall
pop
push
ret
jp
shlb
outsl
lahf
imul
fwait
xchg
test
in
sbb
jnp
std
insb
outsb
outsb
or
es
movl
push
in
lods
gs
add
and
or
jecxz
and
je
cmp
pop
mov
js
mov
dec
push
enter
popf
fwait
fwait
int3
adc
xchg
lods
push
mov
jle
mov
sub
mov
sarl
icebp
outsb
sbb
and
fwait
jle
mov
sub
scas
call
fwait
fwait
jnp
das
fisttps
popl
cmpsl
lcall
outsb
ret
jno
sbb
mov
fprem1
fwait
add
or
cli
in
lods
iret
int
mov
dec
and
adc
xor
out
stos
addb
in
in
mov
out
jns
inc
repz
sbb
ret
push
out
hlt
sarl
shrl
xchg
jg
mov
add
adc
push
ror
es
addr16
out
lret
sub
mov
jo
fdivrl
add
cs
sub
shr
xchg
push
cs
ret
aas
lcall
fldcw
outsb
outsb
shr
rorl
dec
mov
pop
outsb
outsb
outsb
push
nop
int
sar
or
push
loope
int
aas
fildl
dec
mov
pusha
xlat
mov
adc
int
rcr
inc
sub
or
or
adc
jle
data16
mov
fimull
or
sbb
xchg
movsb
hlt
es
cmp
xchg
add
ss
pop
loop
xchg
ret
gs
imul
jnp
jl
rsqrtps
jmp
jae
jae
xchg
jl
xchg
dec
loopne
js
decl
mov
les
sub
jne
into
fwait
clc
fnstcw
out
in
jno
lcall
mov
xor
sub
lock
or
out
stos
sbb
fcmovne
and
fnstsw
nop
jbe
sahf
int
dec
mov
jp
sub
xchg
pushf
les
enter
mov
jl
cmp
xchg
jae
jbe
mov
fs
or
jae
shrb
mov
add
jnp
jl
push
inc
cmc
mov
pushf
push
mov
and
shll
adc
sbb
inc
sub
popa
jbe
jmp
adc
push
and
inc
shl
out
mov
fdivl
cs
adcb
loopne
inc
sbb
out
out
sbb
jno
pop
scas
out
xorl
out
xchg
xlat
push
xchg
daa
or
xor
fwait
fwait
pop
xchg
dec
inc
ss
xchg
sub
jge
cmp
les
mov
mov
enter
in
dec
mov
mov
mov
outsb
pop
xlat
js
cmp
cld
mov
fildl
ss
mov
lcall
cs
sbb
ret
lret
mov
insb
outsb
outsb
mov
push
xor
xor
es
add
arpl
pop
mov
push
jp
inc
lods
xor
in
fiaddl
aam
jle
pop
outsl
test
push
mov
add
mov
pop
hlt
cmc
daa
dec
mov
das
xchg
ds
sahf
push
inc
leave
rorl
adc
icebp
cmpsl
mov
repnz
shll
mov
fidivrs
aaa
aaa
aaa
aaa
add
in
hlt
xchg
out
addr16
mov
icebp
loop
mov
sarb
fdivrl
aaa
fcomip
cmp
adc
mov
clc
fxch
pop
push
lcall
daa
loopne
jge
outsl
add
jle
das
mov
add
popa
xchg
in
jmp
lds
leave
xor
mov
cwtl
ds
js
xlat
adcb
xor
pop
push
jle
iret
out
pop
fdivs
movsb
xchg
sub
mov
loopne
sbb
call
aaa
aaa
pop
fisubrl
in
test
jnp
add
ret
mov
addr16
ror
test
subb
push
ror
cmp
push
mov
scas
aaa
inc
popa
mov
in
jae
jae
test
jno
cmc
in
or
fistps
cmp
ds
pop
xchg
dec
push
cli
and
inc
in
mov
inc
push
data16
outsb
outsb
sbb
ret
sahf
cmp
or
ss
mov
push
les
cmp
test
dec
xchg
adc
jae
add
shl
xor
or
sbb
lods
out
lret
pop
aas
test
jmp
outsb
inc
sbb
movsl
inc
repz
or
daa
jl
ss
stc
inc
nop
push
push
mov
fwait
push
jb
mov
aam
cmp
push
cld
insb
sahf
sub
mov
test
and
cmp
mov
pop
xchg
sbb
sub
inc
xchg
lods
in
xchg
or
xor
imulb
pop
mov
xchg
pop
sbb
fwait
fwait
fwait
fwait
or
adc
out
push
fwait
fwait
int
mov
push
xchg
xor
adc
dec
xor
js
lahf
int
pop
jo
pop
scas
xor
gs
loopne
cwtl
fwait
sbb
movsl
mov
add
std
pusha
xchg
ds
mulb
sub
bnd
test
mov
mov
rcrb
fwait
jmp
nop
mov
call
incb
add
es
test
in
addr16
inc
ror
sub
or
int
pop
in
int
insl
adc
int
int
lea
mov
fxtract
adc
and
dec
dec
enter
pop
aad
lds
aas
xchg
jle,pt
mov
sahf
sbb
cmp
fs
pushf
pop
filds
outsl
repnz
shll
fadds
loop
sbb
out
push
pop
pop
inc
lods
fmul
cmp
pusha
jae
mov
outsb
xchg
ss
popf
pop
nop
cmp
orb
in
fildl
loop
popa
hlt
test
outsb
add
cld
insb
outsb
lahf
sub
push
call
aad
out
out
dec
leave
sbb
sbb
cmp
inc
mov
hlt
clc
aas
xor
lret
jae
jae
xchg
cld
pop
inc
shlb
sbb
fsts
ljmp
cmc
mov
push
ss
aaa
lods
or
mov
ret
jns
jnp
adc
lea
xor
xchg
cmc
jl
pop
outsb
hlt
loope
iret
mov
sbb
ret
test
sub
push
mov
xchg
mov
out
mov
cmpsb
push
dec
scas
and
add
add
mov
insb
pop
push
iret
dec
add
cmpsb
ja
jecxz
leave
sti
out
mov
dec
leave
ficomps
mov
jae
jge
test
pushf
aaa
aaa
aaa
mov
sbb
sahf
pop
xchg
pop
cmc
add
inc
rclb
mov
cld
shrl
mov
mov
ljmp
mov
cmp
clc
ret
out
xchg
aaa
aaa
ja
sub
mov
fwait
adc
js
bound
pop
imul
fs
sar
je
notl
out
dec
shl
add
mov
mov
arpl
cmp
pop
sbb
jbe
loop
sti
adc
pop
addb
int
int
jnp
mov
lods
dec
adc
iret
int
int
mov
push
or
subb
cmc
ds
test
scas
bts
fmuls
mov
int3
andb
dec
lea
call
lahf
mov
fs
loop
inc
orl
push
inc
fists
dec
lcall
or
or
inc
jl
jecxz
push
test
stos
mov
call
daa
xor
call
sahf
aam
sbb
mov
mov
mov
push
mov
xor
lods
sub
mov
mov
dec
lods
xorb
sub
and
dec
sub
adc
cltd
xlat
sub
mov
pop
push
inc
insb
in
xchg
mov
jne
outsb
push
out
out
pushf
clc
xor
les
mov
out
or
pop
sub
dec
xchg
out
out
das
daa
mov
or
gs
inc
lret
cmp
pop
shll
rorb
fs
std
out
dec
push
loopne
sub
pop
mov
in
pop
iret
andb
mov
add
movsb
lahf
inc
movb
std
jg
nop
cmp
jmp
cli
mov
add
adc
jae
fwait
sbb
insb
jns
sbb
or
cmc
xchg
lds
fidivl
insb
add
into
int
mov
lcall
inc
cmpl
int
push
and
adc
lahf
scas
subl
fcompl
jbe
xor
data16
outsb
outsb
outsb
outsl
xchg
test
outsb
mov
xlat
ljmp
sub
dec
popf
out
mov
pop
mov
ss
loope
cmp
das
movsb
cmc
movsb
cmp
mov
fsubp
mov
sti
sahf
adc
xor
sbb
jle
cld
jle
das
sbb
ret
or
jb
mov
shlb
mov
push
dec
insb
jmp
hlt
lods
inc
lahf
mov
out
push
andb
cmpsl
ds
into
push
dec
fsts
sahf
int
dec
jecxz
pop
pop
mov
mov
icebp
rcrb
adc
mov
testl
adc
jle
lods
wbinvd
rcrb
inc
insl
and
mov
aaa
mov
mull
lahf
fistpl
fadds
xor
dec
xor
mov
ret
adc
js
shlb
lods
stos
cmp
movsb
mov
push
fwait
stos
ds
jno
pop
popf
cmp
in
adc
popf
cmp
jge
cmc
dec
sub
adcb
lock
jp
addb
jns
arpl
or
add
repz
loopne
jae
jae
inc
mov
fisubrs
repnz
dec
push
in
addr16
jae
sbb
frstor
cmc
jno
pop
inc
iret
int
out
sub
xor
xchg
jp
imul
push
shl
testb
or
pop
movsb
push
popa
imul
jae
leave
xorl
sbb
jl
outsb
scas
in
inc
sahf
adc
sub
sbb
ja
dec
sub
jg
pop
pop
cmp
ficompl
jae
sub
dec
mov
cmpsb
int
int
enter
jmp
jge
es
fdivrl
add
xlat
mov
aaa
and
mov
flds
dec
subb
stos
cwtl
and
sahf
fstpt
jbe,pn
dec
and
aaa
aaa
aaa
aaa
into
mov
aaa
mov
xor
ss
lods
inc
inc
mov
es
pop
rorb
inc
cmp
arpl
jge
and
sub
in
jle
mov
jb
or
sub
fdivl
and
aas
pop
sahf
pop
orb
aaa
mov
and
push
test
mov
cmp
dec
jmp
fsubl
mov
mov
inc
sbb
arpl
xchg
mov
imul
pop
icebp
dec
call
lcall
jbe
bound
add
lock
aaa
aaa
aaa
in
mov
cmpsb
pop
shlb
aaa
aaa
incb
mov
or
dec
ss
aaa
aaa
inc
test
push
xchg
ret
addr16
add
dec
js
mov
out
cmp
inc
in
cmpsl
dec
es
mov
lahf
out
out
inc
std
xlat
dec
pop
mov
ret
aaa
mov
orb
sti
fwait
je
or
lock
aaa
aaa
pop
add
test
push
mov
cmp
aaa
push
lock
cld
sarb
dec
adc
add
or
stc
push
repz
jle
mov
inc
lret
ret
dec
or
jns
add
loop
int3
rcrb
fcompl
sbb
adc
push
stc
pop
fwait
fwait
jecxz
test
mov
je
lea
or
sbb
push
fcomps
pop
jns
push
jecxz
out
out
inc
add
and
mov
out
out
push
in
and
inc
pop
ret
mov
out
lods
test
mov
aaa
pop
jecxz
cld
or
mov
inc
scas
ss
aaa
aaa
loope
mov
in
lods
dec
divb
and
rolb
js
pop
test
into
inc
push
add
cmpsb
and
inc
js
mov
loopne
mov
sbb
xchg
mov
fsub
insl
mov
cs
stos
adc
jge
lahf
in
pop
pusha
mov
mov
adc
xor
test
mov
ja
inc
or
and
push
loop
fs
loop
sbb
test
cwtl
pusha
or
int
addr16
addb
mov
cli
dec
bound
loop
jle
mov
aaa
out
pop
cmp
sbb
aad
jnp
inc
je
aas
fwait
sbb
xchg
imul
mov
es
sub
addr16
cmc
call
mov
int
repnz
lahf
fldt
adc
out
xchg
popa
ss
faddp
adc
outsb
out
mov
rorb
sbbb
aaa
imul
cmp
imul
fwait
fwait
cmp
xor
jl
pop
loop
mov
aas
add
sub
sahf
push
clc
loop
nop
xor
xchg
or
pop
sbb
mov
dec
cmp
add
fwait
fwait
stos
mov
fdivrs
push
andl
stos
sbb
pop
sbb
movsl
sub
aam
gs
mov
xchg
stos
mulb
pop
mov
jmp
jle
xchg
cli
jns
adc
fcmovnbe
inc
rsm
jne
int
in
hlt
jo
jecxz
cmp
les
outsb
mov
ja
push
pop
mov
sub
out
out
cmpl
mov
cmp
xor
out
out
stc
jbe
mov
imul
mov
int3
pop
and
add
jmp
mov
adc
das
test
out
fcomps
mov
daa
xor
jae
aad
add
add
lret
enter
jae
ds
pop
js
mov
lods
clc
mov
lods
add
mov
and
out
and
mov
mov
xor
insb
cmpsl
sub
mov
sub
cmp
inc
jne
and
sbbl
mov
les
in
insb
fs
ficoms
xchg
stc
or
mov
sahf
addr16
xchg
ds
sub
clc
stos
inc
outsb
int3
xchg
into
mov
inc
scas
sbb
fmull
mov
out
cmpps
outsb
fdivl
pop
in
frstor
pop
or
rclb
in
bound
std
js
imul
mov
adc
cmp
sub
repnz
pop
mov
stos
jmp
fimuls
mov
pop
fs
cld
jge
cmp
aaa
std
out
lea
orb
std
loope
fsub
lret
xchg
pop
jle
rcrl
scas
ds
sbb
movsb
negb
shlb
nop
mov
loope
aaa
mov
inc
mov
rol
push
jecxz
xlat
sbb
jo
or
inc
cli
cmp
mull
cmp
into
cmp
cli
cmp
mov
push
lret
mov
cwtl
movsb
mov
xor
xor
jbe
pop
dec
out
out
lods
aad
pop
sti
push
test
add
in
sti
insb
mov
or
xor
pop
scas
add
mov
xchg
lret
xor
ret
adc
fwait
fwait
fwait
xchg
in
mov
or
fwait
iret
idivb
lods
mov
shlb
or
mov
out
out
adc
dec
lret
call
out
mov
stc
pop
pop
insl
lods
inc
pop
push
iret
out
sub
xchg
push
lahf
pop
mov
lcall
adc
pop
lock
fbld
test
test
orb
ret
mov
mov
jbe
xchg
xchg
pushf
xor
mov
mov
dec
cmp
add
adc
pop
push
ss
aam
xchg
cmp
mov
fwait
fwait
fwait
or
push
js
jecxz
or
shll
ds
jbe
xchg
outsb
stos
les
ds
mov
adc
jno
shrb
xor
jbe
jae
jae
xor
mov
es
cmp
shl
aaa
mov
out
dec
movsl
xor
aaa
mov
inc
inc
pop
pop
cld
imul
into
arpl
mov
push
call
pop
mov
add
sbbl
jnp
in
inc
and
out
and
jmp
fmull
mov
loope
rcrl
inc
hlt
movsl
cmp
pop
cs
pushf
in
lock
in
in
hlt
fadd
xchg
mov
fstpt
daa
in
jg
lods
inc
bt
xor
bound
outsb
xchg
fcoml
orb
add
cmp
push
fistps
mov
in
jae
in
sub
fldt
pop
out
cld
adc
fwait
mov
aaa
imul
mov
sbb
pop
xchg
lret
lret
cmp
aas
imul
mov
loope
sub
js
or
test
sarl
mov
clc
inc
js
pusha
mov
cmc
repz
divps
mov
addr16
mov
dec
aas
cmp
aas
shlb
out
out
or
dec
xchg
xchg
or
icebp
addr16
lds
push
test
inc
xor
mov
and
icebp
pushf
and
mov
and
mov
call
int3
mov
sub
dec
cmp
pop
push
jns
add
jae
jl
sahf
je
sbb
loopne
nop
mov
push
fcomp
push
mov
xchg
movsb
and
mov
lea
fdivl
sbb
cmp
fcmovnbe
push
aas
adc
outsb
scas
lock
test
sarb
rorb
cmp
outsb
outsb
outsb
outsb
sub
pushf
cli
fcoml
dec
popa
jl
outsb
and
das
push
adc
pusha
push
fisubrl
mov
scas
cli
lret
addr16
mov
maxps
inc
xchg
outsb
jecxz
subb
loope
or
bound
aaa
ds
cmp
add
movsb
dec
hlt
sahf
and
shll
test
dec
fdivl
jb
fdivrl
push
mov
adc
faddl
or
fstpl
mov
flds
lcall
data16
mov
pop
cwtl
loope
fcompl
into
push
mov
pop
xchg
inc
hlt
ss
in
dec
out
jge
mov
jb
fdivr
out
sbb
sbb
cmp
add
fsub
add
cli
stos
int3
sbb
jnp
mov
xchg
or
test
sub
out
lahf
out
xor
cmp
pop
lahf
andl
lock
int
shll
cmpsl
push
ficompl
dec
sti
outsl
int
int
jp
sbbb
push
cmpsb
inc
adc
int
imul
movsl
xor
adc
rclb
mov
xchg
cwtl
out
lea
int
in
addr16
ds
scas
jmp
int
int
mov
std
and
sahf
iret
mov
mov
inc
outsb
outsb
outsb
xchg
movsb
stos
out
xor
test
mov
lahf
mov
std
insb
outsb
outsb
push
cmp
fistl
aaa
ja
movsb
xchg
xor
or
daa
jmp
fdivl
sub
test
cmc
aad
sub
scas
mov
fwait
fwait
fwait
fwait
dec
jbe
js
dec
xor
push
xor
and
call
add
mov
mov
mov
in
jb
or
mov
mov
das
xlat
nopl
mov
mov
xor
cmc
jge
jle
mov
sub
fstl
clc
add
add
mov
fst
popl
out
stos
jo
js
xor
iret
idivb
inc
mov
jmp
sbb
mov
add
enter
sbb
fsubl
pop
shlb
sub
jae
jae
fadds
leave
or
test
cli
inc
push
jae
jae
jb
push
adc
fidivl
mull
jae
mov
sbb
shrl
testb
rclb
jle
lock
iret
mov
adc
cmp
xchg
out
icebp
mov
pop
xor
xchg
shl
out
cmp
fistps
bnd
pop
lahf
dec
add
stos
fdivl
mov
insb
iret
push
xchg
mov
mov
pop
les
inc
add
xchg
out
out
xchg
xlat
fs
mov
out
out
scas
sbb
mov
lods
je
adc
out
outsb
push
xlat
adc
fsubrl
outsb
cli
orb
je
inc
clc
daa
sub
ret
xchg
lret
test
mov
jnp
push
dec
jbe
push
mov
ss
outsb
lahf
fwait
fwait
push
xchg
mov
es
bound
cld
insb
iret
add
cmp
inc
or
shl
stc
in
pop
xlat
pop
dec
jbe
lret
loopne
addr16
mov
xchg
popa
lods
sub
jae
shll
cld
lcall
pusha
ret
cmpb
jo
aaa
cmp
cmpb
out
xor
jp
mov
scas
pop
rcrb
pop
lods
lahf
in
mov
xor
cmpsl
mov
xor
mov
inc
je
push
ficompl
call
add
aam
fwait
in
mov
test
ss
sub
and
cltd
mov
fistl
xchg
push
push
sahf
add
lret
xchg
and
aaa
aaa
aaa
shrl
dec
arpl
test
or
aaa
aaa
aaa
mov
ret
pop
pop
adc
sti
enter
jl
push
or
jae
cltd
scas
test
fnsave
xchg
dec
or
sub
bound
mov
sub
imul
jmp
mov
decb
push
dec
mov
pop
push
mov
dec
xchg
jbe
addr16
stos
mov
inc
jnp
mov
lock
shll
sbb
out
imul
nop
shl
or
sbb
hlt
std
ror
roll
add
push
outsb
mov
push
sahf
xchg
and
jle
std
ret
pop
mov
pop
jmp
clc
insb
out
cmp
add
into
and
or
adc
lahf
rcrb
jo
cli
jb
jae
shll
mov
dec
xchg
enter
push
les
mov
jbe
jl
adc
add
pop
cli
add
je
sbb
jl
jae
pop
jmp
mov
in
out
adc
push
icebp
imul
dec
dec
jmp
shll
out
lahf
sarb
push
shrl
out
jp
out
clc
cmp
jbe
pop
insw
adc
sbb
rolb
int
or
push
loope
test
mov
out
nop
mov
flds
fdiv
cmp
or
sbbb
out
outsl
loope
mov
rolb
push
cli
mov
fdivrl
iret
outsb
in
movsb
and
sbb
fistl
cld
in
cli
js
push
adc
out
inc
cmpsl
push
gs
aaa
mov
sbb
mov
inc
loop
jo
cmp
adc
fsubrs
aam
clc
cmp
sbbb
pop
fdivs
ds
pop
outsb
cld
ljmp
mov
xor
bound
or
je
cmp
fdivrl
out
sbb
iret
bound
sar
jae
push
cmp
sub
sar
mov
cmp
xor
mov
ds
test
fistps
int
test
dec
in
outsb
lcall
mov
inc
add
out
iret
xchg
out
dec
ret
sti
into
out
scas
iret
push
lret
loopne
into
cli
jae
mov
jle
ss
out
in
and
out
divb
mov
dec
push
out
fsubl
out
out
nop
scas
pop
out
sub
cmc
cmpb
lahf
fcmovne
adc
mov
jbe
lds
fidivrl
sysenter
push
iret
or
or
and
push
or
xchg
pop
stc
jae
out
out
mov
mov
cmp
jnp
outsb
push
out
shlb
sbb
dec
scas
ficomps
jl
ljmp
pushf
cli
insb
outsb
pop
fiadds
fwait
neg
or
setg
out
sbb
aam
cmp
adc
add
jae
jae
rclb
dec
stos
jle
push
loope
lahf
in
jae
pop
adc
inc
test
addr16
pushf
aaa
aaa
aaa
mov
insb
dec
inc
insb
push
cli
xor
jl
cmpsl
cmp
aaa
sub
mov
fbstp
cmp
or
xchg
adc
jnp
cmp
call
out
or
pop
jle
jl
sbb
push
arpl
imul
lods
lahf
mov
mov
pop
mov
xor
jns
imul
mov
xor
popf
shlb
jae
ss
andl
shrl
xchg
jns
sarl
jae
jae
mov
std
or
jmp
aaa
add
and
leave
ss
xchg
ljmp
mov
scas
jo
xor
sarb
sub
outsl
mov
out
out
daa
test
mov
out
out
popf
daa
sbb
pop
adc
add
xor
mov
push
or
outsb
ss
dec
pop
aam
pop
push
mov
out
orl
cltd
popa
jae
ror
test
cli
aas
xchg
jnp
mov
xchg
ret
mov
loopne
xchg
mov
and
into
bound
sub
mov
mov
jmp
in
sbb
mov
ds
loop
jae
mov
dec
or
mov
scas
adc
dec
pop
pop
clc
push
out
aad
mov
fcmovne
jbe
mov
or
mov
aad
xchg
cmpsl
test
push
lahf
xor
gs
into
mov
outsl
jl
shlb
ss
mov
push
sbb
fwait
adc
push
adc
push
cmp
dec
icebp
mov
sbb
mov
pop
inc
adcl
xor
int
int
pop
pop
addl
into
push
xchg
xchg
popf
xor
mov
mov
push
cld
insb
outsb
dec
xlat
jnp
sbb
cltd
sub
jnp
jl
movsb
mov
cmp
mov
push
leave
pop
pusha
dec
shlb
pusha
inc
sbb
xchg
mov
adcb
out
out
test
dec
aas
jae
sub
sbb
out
cli
loope
int
enter
jge
cld
xlat
mov
xlat
shl
push
cmpsb
enter
cmc
or
out
idivb
in
test
push
lods
cmc
fstpl
cltd
inc
sbb
in
mov
mov
adc
pusha
loopne
outsb
mov
add
pusha
push
inc
mov
dec
sbb
outsb
outsb
outsb
cmp
xor
xlat
xchg
xchg
outsb
outsl
cmp
in
jae
jae
out
pushf
negl
xchg
mov
xchg
cmp
sahf
fwait
pop
in
incl
jmp
push
aad
mov
jle
xchg
pop
arpl
mov
mov
sbb
loopne
jge
and
sahf
jnp
std
push
scas
xor
pop
lods
iret
int
add
shl
mov
test
sahf
out
jbe
mov
or
sub
ficoml
sub
aaa
pop
std
push
jbe
push
mov
adc
fnsave
or
insb
outsb
mov
adc
daa
mov
inc
aaa
pusha
sub
enter
out
mov
hlt
loopne
in
nop
cli
fstps
lahf
jbe
aaa
aaa
mov
inc
cmp
sti
out
mov
bound
ss
pusha
loopne
repz
out
or
icebp
and
js
out
out
add
xchg
lods
xor
inc
out
test
out
sub
pusha
jg
adc
mov
lods
jp
push
repz
mov
mov
and
in
insl
movsl
cmc
mov
adc
push
int
lahf
fisttpl
arpl
jl
xor
xorb
jnp
ret
int3
es
xchg
dec
orb
mov
shl
int
mov
nop
stos
or
pop
pop
adc
or
dec
add
aaa
aaa
aaa
cmpsl
popf
xor
adc
sub
pop
ss
aaa
aaa
jp
not
lea
inc
xchg
and
sbb
inc
aam
or
scas
aaa
mov
clc
dec
jge
das
jecxz
out
shrb
fsubrl
cli
jge
sub
and
mov
iret
mulb
subb
mov
jbe
push
out
mov
aaa
loopne
scas
shlb
jge
outsb
outsb
in
dec
mov
xor
push
mov
movsl
mov
imul
jae
aad
pushf
cli
push
mov
jmp
jl
es
bound
rorb
adc
xchg
mov
popf
in
jae
scas
aas
stos
sbb
sbb
shll
jne
xor
mov
lock
jmp
loop
pop
cld
nop
mov
outsb
outsb
outsb
outsb
mov
and
stos
jmp
inc
xchg
xchg
jge
int
sub
fimuls
jae
dec
xchg
add
push
add
add
int
mov
shll
xor
mov
mov
mov
aaa
jp
in
xorl
xchg
ja
movsb
idiv
ljmp
outsb
cli
pop
subb
xor
out
std
add
inc
adc
sbb
aaa
aaa
push
mov
adc
aas
cli
xor
or
insb
xor
shl
inc
xchg
xor
jae
jae
xor
shr
cmp
loope
jae
jno
push
mov
fdivr
iret
cs
pushf
ret
inc
popf
cmp
jo
aam
insb
pop
push
testb
mov
adc
out
out
in
inc
int
mov
jns
aad
out
out
lret
daa
push
and
cwtl
cltd
mov
out
out
or
push
and
stos
add
fcmovne
loope
mov
ss
in
push
xor
push
imul
jae
cmpsb
xor
test
loopne
sahf
jae
jae
pop
jns
aad
repnz
jg
xchg
out
jnp
jae
xchg
dec
rclb
mov
in
loop
int3
test
mov
cld
cmp
add
int
int
mov
test
arpl
aaa
mov
fcoml
sub
pushf
loopne
mov
test
mov
mov
lahf
fisttpl
dec
movsb
xchg
icebp
pop
add
fsubl
inc
mov
sti
ss
sub
je
cmp
cmc
mov
loop
gs
inc
sbb
lock
sti
lret
mov
mov
int
in
int3
mov
push
sti
dec
pop
aad
or
int
int
mov
pop
jne
push
mov
push
int
int
lret
rolb
aas
xchg
aaa
aaa
mov
inc
push
xor
sub
pop
mov
subl
inc
and
pop
fcompl
adc
jg
sub
loop
dec
rclb
push
sahf
pop
or
aaa
or
shr
les
mov
push
stos
adc
mov
add
mull
adc
sti
jge
outsl
fiadds
sbb
mov
mov
test
out
jae
popf
movsb
sbb
fsts
ja
mov
aad
imul
subl
jnp
adc
cmp
ret
pop
iret
out
pop
push
xor
es
and
mov
mov
mov
or
dec
jecxz
and
xor
pop
sbb
mov
out
into
or
mov
fsubrl
mov
mov
mov
add
sbb
jge
mov
aaa
push
sar
mov
in
pop
mov
and
mov
jle
aaa
aaa
out
inc
ret
xor
xchg
fwait
cmp
add
in
es
mov
enter
mov
int3
jae
jae
dec
jbe
inc
and
bound
mov
fdivp
jl
ss
cli
icebp
and
jl
bound
and
fcomi
sub
sbb
push
fidivrs
push
btr
daa
pushf
push
jl
mov
subl
sahf
adc
je
cmpsb
xor
push
fisubs
ljmp
les
int
jne
adc
dec
or
aas
or
xchg
mov
cli
pop
lods
int3
mov
ljmp
push
sbb
jge
mov
jmp
stos
lret
ss
aaa
aaa
xchg
dec
mov
and
ja
sub
fdivrl
ds
std
popf
ja
insb
dec
xor
jne
cld
mov
mov
pop
push
fcoml
cmp
les
lea
adc
jne
push
mov
mov
mov
ljmp
std
adc
inc
mov
mov
stos
dec
rclb
jmp
push
xchg
sub
out
out
jne
or
test
xchg
mov
inc
mov
sti
pop
xchg
repz
xor
ljmp
ljmp
jge
pop
sahf
jp
and
ror
fwait
bound
cmp
push
leave
mov
adc
jge
stos
adc
mov
pop
mov
hlt
cmp
push
mov
sbb
pop
call
cmp
mov
sar
loopne
mov
dec
cmp
sarl
pop
call
pop
cld
call
jae
popl
xorb
outsb
test
pop
push
cmp
shrl
fldenv
xchg
lret
mov
loopne
cs
inc
mov
aad
xchg
mov
sub
sarl
and
fsub
mov
call
sbb
les
lock
xor
mov
enter
mov
jo
dec
aaa
aaa
adc
out
js
jle
aaa
push
mov
fimuls
int
add
and
push
stc
cmpsb
xor
jmp
jnp
out
lahf
ljmp
push
movsb
leave
div
pushf
ffreep
mov
cmpsb
xchg
sub
xchg
lods
sbb
inc
out
cmpsb
mov
inc
iret
xchg
movsl
sub
dec
mov
ret
dec
mov
jg
xor
dec
xchg
xor
shlb
leave
push
pusha
clc
ret
je
push
decl
inc
cmp
jb
xchg
inc
jle
fsub
jns
outsb
outsb
outsb
mov
jne
mov
insb
outsb
outsb
outsb
aam
loope
arpl
mov
jge
std
daa
movb
fs
jl
fistl
pop
xchg
inc
push
inc
lods
or
fdivrl
mov
mov
insl
adcb
jae
or
mov
xor
in
jg
mov
mov
dec
ret
bound
lock
pop
mov
shlb
loop
hlt
stos
mov
and
fdivrl
stc
adc
adc
push
and
jge
clc
mov
adc
pop
and
imul
lcall
push
sti
fs
xchg
mov
xor
jae
pandn
xor
imul
mov
jae
insl
movsb
mov
sbb
lea
cmp
mov
jp
and
shlb
jo
loop
mov
sahf
xchg
outsb
mov
cs
test
mov
in
jge
outsb
outsb
adc
xchg
adc
jle
in
xchg
mov
inc
ret
mov
fwait
fwait
cmp
push
repnz
enter
outsb
outsb
outsb
xlat
pop
sti
and
cmpsl
mov
mov
mov
jbe
call
ljmp
sbb
mov
rorl
gs
push
push
rol
mov
cmpl
dec
nop
shll
xchg
mov
stos
jmp
and
int
aas
add
adc
mov
stos
sbb
loop
int
int
stos
fbld
pop
or
cmc
cmp
into
int
scas
imul
ds
mov
daa
sbb
push
mov
lock
fnstcw
imul
sbbl
addl
mov
ret
jae
sbb
dec
loope
push
jae
shl
js
and
dec
bound
inc
aas
lods
out
mov
jnp
xchg
inc
outsl
dec
add
add
add
clc
mov
sti
sahf
inc
sub
inc
mov
inc
call
ljmp
mov
lahf
dec
mov
fdivrl
test
dec
test
out
or
in
addr16
psubb
insb
cli
ja
xchg
stos
ds
cmp
cmp
push
into
push
jl
outsb
or
xor
cltd
js
dec
inc
lret
rolb
sbb
mov
repnz
aaa
mov
sbb
pop
fistpll
ss
inc
and
fwait
sbb
cmp
addr16
pop
shr
les
loope
xor
mov
cmp
cmp
inc
pop
adcb
add
fisttpl
shl
jae
aaa
aaa
aaa
mov
cld
sbb
jge
push
cltd
mov
jmp
aaa
aaa
pop
and
dec
push
mov
cmc
fs
fistl
sahf
fwait
fwait
fwait
sub
leave
sub
mov
sbb
sbb
clc
sbb
test
aaa
aaa
aaa
aaa
pushf
and
ss
lret
sbb
in
and
divl
ss
fdivs
dec
adc
mov
loope
notl
sbb
adc
push
cli
xor
aad
fmulp
mov
int
mov
xchg
arpl
nop
aad
addb
int
aas
lret
mov
fwait
lcall
int
xor
mov
sar
add
movq
cmp
and
mov
fsubrs
pop
mov
adcl
outsl
movsl
cld
leave
sbb
into
sarb
hlt
jecxz
test
movsb
pushf
scas
out
gs
les
out
lods
push
mov
icebp
stc
sbb
or
jo
mov
lds
and
pusha
sbb
jp
cmp
jae
test
mov
aam
add
jae
push
das
loope
es
xchg
out
mov
mov
sbb
test
mov
xchg
out
jns
or
fnop
adc
push
mov
out
dec
sahf
or
cmc
je
jle
adc
pop
aam
hlt
scas
mov
pop
rcl
arpl
shl
mov
inc
sti
scas
cmp
mov
call
or
inc
ds
out
and
push
andb
clc
jl
or
clc
out
in
loope
xor
sbb
hlt
movsb
adc
and
xchg
xor
push
dec
das
adcb
fdivrs
imul
es
mov
js
add
pop
outsb
cs
pop
fsubr
inc
xchg
outsb
outsb
outsb
xor
repz
xchg
cmpsb
jno
pop
outsb
outsb
outsb
jmp
aad
jg
jno
xor
in
jae
jae
add
pushf
dec
mov
dec
cld
addr16
cltd
mov
fs
out
sbbb
and
ljmp
fcomi
pminub
js
lcall
insb
outsb
leave
aas
mov
fiaddl
mov
adc
movb
addb
fwait
mov
popa
adc
ret
aam
fwait
fwait
fwait
and
or
enter
call
shrl
xor
or
mov
add
fwait
or
xchg
mov
imul
xor
fwait
fwait
fwait
fwait
into
sbb
das
or
fwait
push
fisttpl
out
lods
fldt
sub
aaa
jl
sahf
stos
outsb
int
sbb
out
mov
mov
es
outsb
dec
ret
xor
movsl
mov
xor
jge
outsb
dec
jae
cmpsl
ja
mov
xchg
test
hlt
mov
loop
inc
ds
rolb
jns
and
in
sti
rcl
mov
cmp
push
adc
push
into
xor
add
into
add
popa
int
jae
ds
pushl
fisubrl
in
push
nop
int
addr16
lods
push
imul
jbe
imul
lahf
fistl
lods
xor
loopne
sbb
outsb
sbbb
into
int
push
pop
mov
iret
divb
cmp
mov
fildll
pop
mov
mov
jne
mov
es
xor
mov
stos
rolb
cs
jns
loop
int
dec
inc
cli
insb
outsb
cmp
sbbl
in
jecxz
pop
xchg
arpl
and
pop
fsubl
sub
mov
repnz
adc
out
out
lock
aam
mov
dec
out
out
loope
mov
push
adc
push
out
out
xorb
xorb
out
repnz
pop
mov
sub
dec
cwtl
jl
pop
popa
mov
add
fmull
and
jns
lahf
in
sbb
or
ja
stos
hlt
test
jle
mov
xor
xchg
sbb
xor
outsb
outsb
scas
cli
adc
adc
popf
bound
rorl
outsb
mov
lret
or
fstps
dec
or
push
scas
popf
aas
lods
clc
jle
andb
ljmp
pusha
fwait
fwait
fwait
stos
push
adc
das
and
mov
outsb
out
sbb
ficomps
jnp
inc
sahf
in
mov
xchg
ds
in
push
shll
jae
push
paddd
mov
rol
test
daa
jae
rcll
mov
sbb
sti
out
mov
mov
scas
insl
sbb
js
aaa
mov
clc
pushf
jp
mov
jp
scas
clc
sbb
or
mov
push
xor
cmc
insb
outsb
outsb
pop
jno
shr
and
mov
bound
mov
fisttpll
hlt
pop
xor
in
mov
cli
inc
xchg
jnp
fdivs
sbb
fnstcw
pop
scas
jle
clc
or
dec
jbe
aaa
pop
insl
lock
cmc
addr16
fs
sbb
jnp
cmp
jge
push
or
xchg
mov
jae
jae
pop
xchg
and
pop
ja
testl
rcrb
ret
jbe
xchg
int
or
bound
out
adcb
jne
mov
mov
sub
test
push
pushf
mov
sbb
loop
pop
rcrb
dec
push
aad
in
pop
mov
das
je
out
xchg
rolb
test
jae
negl
outsb
lcall
sbbl
icebp
push
test
fstl
fsubl
ss
loopne
xchg
push
sub
xchg
lret
dec
or
xchg
pop
pusha
fs
test
inc
adc
dec
movswl
inc
and
fdivrl
loopne
jecxz
pop
dec
cmp
mov
inc
sub
jae
out
ja
repnz
xchg
popl
mov
dec
jb
lcall
pop
lods
andl
int
mov
mov
loope
or
inc
pop
dec
sti
lret
int
std
xchg
jp
mov
mov
sbb
adc
jae
xchg
adc
lret
not
xchg
js
pminsw
mov
jmp
lahf
sbb
scas
sub
push
fs
iret
out
and
clc
cs
dec
fnstenv
pop
mov
fisttpl
sbb
les
sbbb
sbb
mov
fldenv
mov
jp
repz
ficoml
shlb
xor
test
sbb
sahf
clc
mov
fnstsw
outsb
outsb
std
imul
jmp
mov
cmp
push
popl
jmp
and
push
sub
mov
adc
sub
addr16
hlt
mov
cmp
les
fsub
xlat
dec
dec
sub
jp
xchg
incb
out
shl
addl
push
jo
pushf
inc
cmc
in
mov
ret
mov
mov
jmp
es
ror
lock
fsubrl
sub
and
jle
pop
subb
cmpsl
sub
ret
adc
cs
jmp
sub
outsb
lock
outsb
cmpl
addr16
mov
insl
add
call
push
dec
xchg
into
cmpsb
imul
jae
sti
test
push
mov
rorb
sbb
mov
lcall
movsb
andl
or
dec
scas
cmpl
or
jmp
fwait
pop
repz
adc
push
out
xorl
es
sub
incl
out
mov
mov
add
adc
out
out
shll
and
jb
iret
out
pushl
xor
cmpb
mov
jge
outsb
outsb
es
stc
mov
xchg
push
icebp
pop
lock
roll
jecxz
mov
jae
pusha
iret
int
push
mov
xchg
mov
rorl
mov
repnz
jae
loopne
sub
jl
dec
mov
scas
mov
mov
int
mov
dec
test
xchg
jmp
and
gs
imul
dec
add
aam
cmp
cli
inc
add
push
sti
mov
in
push
clc
mulb
dec
xchg
call
mov
es
int
push
cld
insb
jl
cli
sub
ret
sti
insl
hlt
imul
scas
mov
int
in
jae
sub
mov
and
or
aam
add
ret
aas
mov
ljmp
jne
iret
int
ljmp
pop
frstor
push
outsb
cli
fcoml
jp
jge
sub
mov
mull
sbb
in
dec
cmp
push
shlb
loop
lret
fisttps
cmp
out
aad
jno
push
mov
loopne
pop
ret
sub
adc
dec
cmc
dec
xor
and
outsb
outsb
sbbl
mov
xor
mov
cltd
ret
adc
outsb
mov
clc
xorb
insl
xchg
cmp
mov
add
mov
xchg
cmp
pop
into
repz
int
mov
sarl
cmp
enter
fwait
sbb
jle
cwtl
push
loop
xorl
adc
add
jle
mov
les
xor
sahf
int
int
xchg
shr
sti
cmp
movsl
fildl
out
clc
ds
leave
push
pop
jbe
mov
ja
pushf
jo
outsb
outsb
xchg
ss
lock
pop
xor
push
out
divb
sub
jge
bound
out
out
mov
mov
sub
fwait
out
in
out
out
or
push
js
mov
jbe
ret
and
jae
inc
xlat
std
add
adc
aam
imul
jae
jae
shlb
lods
cmpsl
inc
je
jne
addr16
mov
or
jae
mov
stos
lds
out
xor
loope
jae
or
jge
mov
mov
pop
adc
push
mov
mov
scas
rolb
lahf
add
cmp
mov
out
test
sarl
dec
jbe
in
xor
add
mov
test
shll
push
mov
in
xchg
cmp
int3
mov
xor
stc
sbb
iret
lods
rclb
arpl
add
clc
and
loopne
jae
sahf
scas
cli
jnp
pop
hlt
test
roll
lret
test
js
fs
dec
aad
xor
in
jmp
nop
push
fsubr
clc
fnstcw
lret
ss
mulb
mov
jl
inc
mov
jge
outsb
inc
movsl
cwtl
aad
push
std
test
and
jp
dec
dec
inc
mov
sbb
jge
fldl
sbb
cli
fildl
fdivrs
mov
xchg
mov
and
mov
jge
lret
ljmp
jle
mov
push
adc
adc
mov
repz
stos
out
mov
inc
sub
mulb
jle
or
out
mov
out
or
idivl
adc
dec
push
lds
insl
int
int
inc
or
sbb
mull
out
ror
int
int
jo
mov
iret
mov
int
icebp
cmp
xchg
jne
cmpsb
adc
js
iret
mov
xorb
cmp
lahf
jp
lret
mov
pop
test
arpl
pop
jbe
repz
cs
jmp
in
or
push
jnp
rolb
xor
aaa
aaa
dec
cld
xor
and
mov
and
cmp
or
or
mov
mov
cmp
and
stc
int
lahf
clc
xchg
ljmp
int
int
cmp
sbb
aad
movsl
lahf
int
lods
lods
jecxz
jbe
add
sahf
xor
push
test
js
les
mov
cmc
insb
outsb
outsb
push
fs
cwtl
out
mov
and
pop
mov
cs
pop
arpl
mov
jae
js
xlat
jle
icebp
and
jae
iret
out
negb
and
addb
inc
jno
xchg
js
addr16
lods
cmp
out
out
push
jl
nop
push
imul
fbld
push
outsl
adc
fs
add
cld
jbe
in
in
pop
repnz
orl
fwait
fwait
std
imul
cmp
mov
and
sti
mov
notl
andl
imul
ljmp
cmp
out
dec
adc
pop
dec
fdivp
std
insb
pop
ret
xchg
mov
push
sbb
mov
ret
push
push
cmpsb
push
adc
outsb
mov
jae
cmp
adc
mov
iret
inc
lahf
xchg
mov
push
fcompl
int
in
pop
lcall
icebp
sub
mov
inc
insb
movsl
testb
adc
jle
push
jbe
xchg
pop
or
test
pop
hlt
stc
fnstcw
jno
push
loope
sar
mov
loopne
push
data16
loopne
dec
mov
lds
inc
out
shlb
xchg
cs
outsb
jle
aaa
fldt
gs
lds
cmp
outsb
stc
cmp
push
ds
aaa
mov
jb
outsb
and
jae
lock
jb
cmpsb
mov
mov
adc
mov
int
unpckhps
cmp
sbb
inc
sbb
out
out
or
in
enter
in
sahf
jb
mov
out
out
dec
xchg
int
jge
xchg
sbb
cwtl
rclb
movsb
sub
cmp
ds
subb
mov
add
loopne
jae
xor
sti
jge
sbb
jbe
std
mov
mov
addr16
push
repnz
not
lds
pop
test
int
int
fsubl
push
pop
mov
push
int
int
pop
shll
xor
or
loope
lock
int3
rolb
out
xor
mov
and
cmc
adc
xor
sbb
jne
mov
out
xchg
adc
out
xor
inc
inc
arpl
xlat
orb
xchg
xchg
jo
and
pop
add
mov
and
xchg
pop
xor
fwait
adc
stc
cpuid
push
lock
mov
dec
cmp
jge
cmp
outsb
xchg
fwait
movsb
fnsave
lret
sbb
ss
fists
js
xchg
dec
xor
jecxz
sti
nop
add
lret
push
cld
hlt
sahf
lock
in
clc
adc
add
int
add
les
dec
in
pop
add
sti
jle
mov
test
adc
inc
cmp
jae
js
jne
enter
enter
out
scas
out
lock
push
or
out
adc
repnz
int
int
fiadds
outsl
je
inc
out
xor
mov
aaa
push
jae
popa
out
dec
pop
xchg
mov
mov
jge
cmp
mov
outsb
scas
mov
jae
adc
aam
mov
insb
outsb
outsb
outsb
lret
lea
outsb
nop
in
and
adc
pop
mov
pop
aam
addr16
stos
jle
jae
jae
cli
outsb
jbe,pt
sti
fbld
mov
dec
push
jb
repnz
xchg
adcb
push
nop
jb
sti
dec
mov
mov
or
in
jae
pop
hlt
aas
push
ret
push
popa
pop
mov
mov
int
jae
jno
push
mov
inc
shl
out
out
test
clc
loope
sbb
lcall
out
adc
out
adc
nop
pop
inc
pop
fcomps
or
push
fisubrl
mov
aas
or
xchg
mov
outsb
mov
xchg
fdivrp
xor
bnd
dec
inc
enter
cld
push
movsl
xor
es
aaa
jg
dec
push
push
push
dec
sub
outsb
clc
fdivrl
push
lret
mov
adc
xorl
dec
mov
fsubr
je
mov
ja
lods
rcrl
mov
jmp
scas
or
push
push
and
test
sbb
push
xchg
ficompl
fldt
fs
in
add
xor
lcall
fwait
test
aas
push
cmp
xor
loopne
fsubs
mov
mov
sbb
lret
xor
out
inc
sbb
xor
mov
outsb
outsb
jle
scas
dec
inc
xchg
pop
and
repz
adc
mov
test
push
mov
int
pop
lock
inc
loopne
bound
aaa
mov
outsb
mov
cmp
xchg
push
cwtl
repnz
jmp
fdivrl
aas
sub
sub
scas
inc
sar
mov
push
cmp
popf
cmpsl
nop
mov
dec
jecxz
dec
or
data16
jno
outsb
rcrb
mov
jl
adc
dec
loope
xor
jae
insb
fimuls
push
filds
mov
loopne
dec
and
lret
ds
sarb
fisubl
mov
or
addr16
sti
gs
mov
and
out
imul
scas
mov
mov
ret
into
out
out
je
pushf
mov
push
xor
movsb
ss
jbe
iret
in
jae
insb
cmpsb
or
cmp
pop
lods
popf
pop
pushf
fwait
or
mov
call
sub
aaa
push
jl
xchg
rcll
and
mov
and
pop
xchg
fwait
cmp
dec
imul
fisttpl
inc
bound
pop
ja
add
add
mov
xor
imul
mov
int3
mov
fwait
sub
inc
pop
iret
pop
hlt
inc
pop
or
int3
cmp
and
in
leave
clc
ds
ss
in
xor
int
xchg
stos
sub
mov
inc
or
int
xchg
stc
mov
das
cld
push
or
xchg
pop
aaa
jp
lds
bound
aaa
aaa
inc
jl
pop
mul
mov
ja
out
mov
jmp
nop
mov
dec
pop
sub
ss
xchg
adc
leave
rcrb
cmpsb
cmp
or
inc
jnp
data16
outsb
outsb
outsb
adc
stc
cmp
test
outsb
negl
outsb
outsb
outsb
jp
test
push
and
in
pop
jae
outsb
outsb
outsb
enter
mov
filds
outsb
sbb
xchg
mov
xchg
cmc
test
fisubrs
xchg
jbe
out
xor
dec
jnp
in
xchg
je
adc
jle
test
fdivrl
test
cmpsb
negl
and
jo
dec
dec
rolb
and
pop
mov
and
jbe
aam
fstps
sbb
adc
jae
xchg
sbb
ja,pn
pop
out
pop
sahf
xchg
daa
mov
dec
push
shlb
ret
into
repnz
shlb
jae
add
xor
pop
ds
jle
aaa
aaa
bound
vmovapd
lock
mov
hlt
dec
mov
cmpsl
aam
clc
mov
jg
and
sarl
sub
mov
xor
xchg
mov
fisubl
inc
jge
mov
jmp
sub
rcll
push
fisubs
push
ret
mov
jae
fnstenv
push
pop
stc
daa
add
mov
or
mov
out
out
clc
call
push
adc
jg
mov
fiaddl
fmul
int
int
imul
bound
dec
adc
inc
aas
hlt
lret
sub
fdivrl
popf
dec
movsl
jg
or
jae
jae
out
mov
adc
or
sub
jae
jae
lahf
out
daa
sub
mov
cwtl
push
repnz
dec
mov
fidivs
add
movsb
and
jp
fists
cs
push
push
call
outsb
cwtl
xchg
mov
or
leave
mov
data16
push
daa
lds
jb
orl
jae
pop
xor
cmpsb
je
jae
ret
pop
or
dec
cmp
jp
push
mov
xor
dec
mov
lods
add
mov
addr16
loope
cwtl
daa
inc
in
jb
or
pop
shlb
sbb
sbb
fldt
pusha
outsl
pop
sub
aad
lret
out
xor
dec
sub
mov
cmp
aas
stos
sub
ret
test
xor
outsl
int
int
dec
inc
jg
mov
out
gs
sub
lret
int
add
xchg
es
adc
push
cmp
out
out
cmc
pop
pushf
scas
pushf
les
sbb
sub
mov
pop
lods
fs
das
jbe
xchg
xchg
rcl
and
mov
pop
jns
or
mov
sti
lea
jns
icebp
adc
mov
mov
bound
fmuls
sbb
das
mov
pusha
ror
or
int
int
nop
and
push
xor
lahf
adc
and
roll
sub
fisubs
mov
mov
dec
pop
cmp
sahf
adc
aaa
aaa
aaa
fmuls
jecxz
bndstx
xchg
ret
and
fdivp
and
jb
pop
mov
push
pusha
mov
sub
push
jbe
add
fwait
fwait
fwait
scas
pop
xor
sub
adc
sbb
fwait
cmc
jle
movsb
sbb
sbb
ficoms
into
pop
jb
test
or
test
add
fwait
fistpl
out
inc
lret
jl
imul
xchg
sbb
push
jb
pop
ds
popf
jns
cmp
out
jp
mov
mov
in
dec
loope
jge
jmp
mov
call
cmp
fidivrs
sti
ds
push
sahf
mov
pop
insb
fbld
xchg
das
shll
inc
out
data16
mov
jnp
mov
insb
cmp
xlat
mov
dec
repz
pushf
daa
inc
push
int
int
rol
cld
loope
mov
mov
mov
int
or
leave
shll
fwait
fwait
or
push
pop
dec
xchg
jp
pusha
fwait
fwait
fwait
fwait
leave
push
mov
jge
or
std
or
jmp
out
out
xor
cmpsl
loop
js
lds
fwait
subb
xchg
aam
lods
lret
clc
mov
jne
icebp
jnp
pusha
mov
xchg
mov
rolb
fmull
out
pop
xchg
lcall
pop
pop
mov
lods
inc
pop
inc
jge
aaa
stc
fisubrl
test
js,pn
jmp
push
movsb
adc
icebp
out
std
int3
dec
xor
add
call
inc
push
faddp
pop
add
ja
sub
sahf
in
daa
mov
in
jbe
std
cmp
jl
repnz
out
mulb
les
push
sub
jbe
push
lcall
jo
xorb
xchg
push
adc
xor
push
or
addr16
pop
mov
outsl
shlb
fdivl
int
int
orl
or
aas
ss
cmc
ficoms
mov
int
push
pop
mov
cmp
mov
xchg
lds
sub
cmp
add
jp
push
clc
pop
hlt
and
fimull
in
fbstp
lea
ja
repnz
pusha
and
fucomi
fcmovnb
sbb
loop
xchg
xor
popa
push
lock
cs
movsb
loopne
mov
jl
fwait
int3
cmp
rorb
ficompl
jb
outsl
testl
ja
jecxz
ret
fsts
addr16
pop
push
roll
push
cmpsb
adc
daa
jne
xor
cmpb
adc
fisubl
aaa
imul
divb
push
inc
icebp
fnstsw
mov
xchg
aaa
cld
mov
je
loope
push
jmp
aad
jle
clc
push
mov
sbb
loop
mov
mov
jp
shl
fdivrl
in
pop
add
push
add
loope
paddq
sub
cld
lods
clc
and
je
popf
xor
inc
push
or
imul
cs
in
rclb
in
cld
lret
cmp
ja
xor
push
inc
dec
addl
add
sbb
cmp
cmp
test
push
in
scas
enter
lahf
fwait
sub
mov
xchg
adc
popa
xchg
loope
mov
xchg
insl
fcom
push
in
fwait
cli
gs
mulb
dec
iret
int
int
hlt
ljmp
xchg
add
xchg
fwait
stos
jle
or
stos
pop
cmc
shlb
aaa
pop
jge
mov
xor
icebp
pop
jl
sbbl
out
notl
js
dec
or
mov
adc
mov
xchg
xor
jo
jbe
jle
stos
mov
addr16
xor
sti
mov
repz
sbb
fsubrs
inc
xor
push
hlt
lret
cmc
frstor
jae
xor
mov
dec
adc
xchg
xor
mov
movsl
lahf
iret
ja
stos
in
or
pop
xlat
aaa
aas
fwait
mov
push
repnz
das
cmpsb
lods
scas
decl
das
inc
dec
test
jle
imul
push
aas
adc
cmpsb
mov
mov
jmp
out
fstpt
lock
sbb
cli
sar
add
push
lods
fwait
jl
mov
xchg
mov
xor
xor
dec
imul
je
mov
sbb
fwait
sbb
jnp
push
aas
add
cmp
ljmp
jmp
scas
push
lret
xor
inc
outsb
pop
out
mov
jbe
iret
pop
frstor
or
jb
jl
outsb
push
es
ficompl
adc
sbb
fwait
cmp
aam
aaa
mov
mov
xlat
hlt
push
and
int
divb
es
sbb
pop
or
inc
fldl
nop
cli
mov
sbb
aaa
aaa
mov
gs
jmp
clc
orl
ficoms
ret
fldl
fwait
fwait
fwait
lods
nop
inc
lea
mov
cmpsl
dec
out
fwait
fwait
fwait
fwait
mov
dec
mov
nop
pop
xor
lahf
pop
push
loop
sti
mov
or
or
les
sub
call
add
jno
fisttpl
lret
stc
mov
test
outsb
outsb
or
jno
or
outsb
outsb
outsb
pop
jae
int
movsb
xchg
aad
cmpsl
push
insl
loop
std
cmp
cmp
inc
adc
jg
mov
in
std
sub
cld
push
jbe
push
aaa
xor
xchg
mov
mov
mov
xor
inc
shl
out
sbb
data16
in
iret
xchg
out
sbb
jae
jae
clc
inc
or
adc
mov
mov
lea
aas
popf
dec
dec
lret
jge
je
mov
ds
aaa
mov
or
jp
repz
push
or
in
addr16
std
bound
xor
sub
adc
mov
mov
int
idivb
insb
inc
xchg
or
movsl
sahf
fwait
stos
push
pop
mov
rcrl
iret
push
jae
mov
xchg
je,pt
adc
aam
addb
fiaddl
out
pop
add
push
mov
jmp
hlt
xor
and
cmpl
jmp
loop
mov
ljmp
scas
clc
cmp
xlat
inc
and
test
xchg
mov
daa
out
add
scas
rolb
iret
out
mov
cwtl
push
cmp
les
fwait
fwait
popa
cmpsb
inc
dec
fnsave
push
pop
pop
cli
insb
outsb
test
jno
and
xorb
pop
negb
mov
into
inc
push
popf
xchg
insb
outsb
rol
lret
and
pop
lcall
pop
ss
and
push
mov
shlb
cmpsb
dec
andb
out
sub
xor
sbbb
testb
sti
cmc
je
loope
sub
pop
lock
not
ljmp
test
in
inc
cli
mov
xchg
int
push
sti
popf
mov
sbb
ss
insb
mov
lods
test
cmpsl
and
mov
jbe
xchg
out
mov
push
inc
sahf
subl
xchg
jo
setnp
addr16
pop
addb
int
aad
outsl
dec
insl
lock
aaa
or
repnz
int
fidivl
out
mov
mov
sti
lods
movsb
pop
in
or
addr16
jae
lcall
add
ljmp
popa
aaa
lock
mov
es
jp
sbb
dec
xchg
lea
fwait
pushf
jmp
dec
dec
mov
sub
in
push
pop
out
cmp
dec
add
clc
jecxz
testb
sbb
lcall
and
cmp
xchg
popa
mov
incl
xlat
outsb
outsb
outsb
outsb
pop
xor
into
test
popa
sub
mov
into
lahf
fisttpl
add
dec
fmuls
bound
mov
leave
cli
pop
sub
imul
mov
ret
and
cld
or
lds
call
outsb
cmp
ds
push
cmpsl
lock
fdivrl
outsb
pop
mov
adc
cld
mov
loopne
loopne
and
mov
adc
icebp
cmp
roll
outsl
add
fdivrl
add
mov
sarl
mov
paddb
and
lahf
mov
fdivs
aaa
mov
pop
lods
insb
ficoms
imul
ss
aaa
iret
or
xchg
or
push
fwait
fwait
fwait
or
pop
out
shrb
push
push
mov
fwait
fwait
in
jo
cmpsb
mov
inc
cmpsl
mov
out
mov
inc
sbb
add
loop
iret
out
mov
mov
push
jo
test
add
jo
mov
or
mov
inc
pop
fstps
sbb
mov
jmp
cmp
mov
cmpsb
xchg
in
bound
cmp
out
jae
insb
movsl
jecxz
push
push
add
outsb
aas
rolb
aam
scas
jnp
mov
mov
add
pushf
and
jbe
jbe
dec
std
daa
mov
lahf
xor
cmp
leave
sahf
movsb
or
std
out
xor
cli
sbb
mov
jmp
mov
cmp
clc
in
cmp
test
insb
push
icebp
xchg
pop
ret
fisubs
xor
in
inc
call
mov
xchg
shlb
shll
mov
adc
cld
mov
out
out
mov
mov
ret
and
aam
enter
jl
or
cli
or
lds
rolb
mov
fisttpl
adc
mov
mov
call
cmpsb
pop
insb
pop
or
out
cmp
push
aad
mov
in
mov
mov
and
mov
notb
cmp
push
mov
fwait
es
flds
xor
fwait
mov
fwait
or
aam
jmp
rcr
jae
pop
adc
test
mov
lock
dec
and
shrl
nop
subb
fistpll
jge
jae
mov
jnp
lret
mov
les
mov
aas
sarl
adc
outsl
xor
ret
adc
jmp
or
out
iret
push
mov
xchg
lcall
cmc
jnp
sahf
xchg
push
or
inc
cmp
or
dec
mov
sahf
cmc
lds
xchg
sub
aas
fwait
test
dec
xchg
cli
ficompl
mov
data16
mov
insb
aam
jb
xchg
pop
std
mov
and
jmp
xchg
lods
mov
mov
mov
pop
enter
mov
mov
ret
and
cli
ja
scas
mov
sbb
mulb
xchg
cmp
or
outsb
outsb
outsb
outsb
push
lahf
sbb
pop
loope
mov
mov
outsb
outsb
sarb
and
cmp
nop
and
pop
outsb
es
add
pop
in
jecxz
mov
jle
test
push
enter
pusha
jle
cli
sub
dec
cmp
sbb
mov
cmc
hlt
inc
push
cld
fiaddl
push
mov
cltd
dec
int3
and
pop
mov
pop
cmp
push
call
jmp
pop
pop
dec
insb
ds
insb
and
cs
cmpl
out
scas
outsb
dec
ja
inc
aas
fstpt
sub
pop
mov
cmpsb
mov
int
int
roll
ss
add
cmp
out
inc
cld
loop
add
sub
sbb
mull
subl
dec
addb
fucomip
push
sbb
fisubs
push
shrl
mov
jecxz
inc
mov
xchg
movsb
sbb
shl
std
insb
outsb
addr16
fists
outsl
jmp
lret
fildl
mov
dec
lcall
aad
std
xchg
xchg
adc
fwait
sbb
and
dec
cmp
jl
jge
cld
and
lret
mov
add
or
xchg
mov
lods
jo
sbb
fcmovne
idivb
mov
dec
mov
cmp
insb
aas
fwait
fwait
sarl
adc
xchg
or
jge
pop
cld
xchg
shl
js,pt
xchg
std
mov
mov
adc
sub
xchg
in
out
mov
loop
out
dec
into
lock
icebp
hlt
cmp
fisttpll
jnp
adc
out
out
repz
lcall
push
out
out
jge
stc
test
in
xchg
shlb
cmp
in
and
out
test
addr16
pop
sahf
ja
cs
xchg
mov
out
out
xchg
leave
inc
or
arpl
mov
fs
jmp
je
adc
push
repnz
mov
movsl
fwait
rcrl
mov
push
lea
jae
or
lahf
jne
stc
movsb
xchg
aaa
mov
add
and
mov
xchg
sub
ds
push
addr16
xor
cli
xchg
je
xor
outsb
cs
mov
in
adc
test
sahf
repnz
clc
insb
sub
pop
insb
movb
lahf
fcmovne
out
loopne
fcomps
mul
gs
out
jge
outsb
outsb
insb
and
int3
pop
or
jno
fcompl
inc
shll
adc
cwtl
mov
and
pop
and
dec
mov
iret
sti
int
or
push
orb
dec
out
lahf
int
int
sti
jp
pop
sahf
push
push
imul
jl
mov
mov
lock
es
out
aaa
aaa
aaa
aaa
cmp
sbb
fstpt
insb
pop
fdivrl
mov
mov
dec
movsb
fld
std
sti
fsubrl
add
sub
jae
adcl
lahf
je,pt
sahf
jae
jae
xchg
push
cmp
shl
dec
cmp
sbb
in
std
mov
adc
out
dec
lea
jle
aaa
aaa
movsb
popa
imul
cmp
pop
dec
lcall
loop
mov
cmp
cmp
mov
jge
call
fisubrl
loopw
sub
xor
aas
jbe
rcrb
aad
in
push
aas
dec
mov
fstps
add
je
inc
xor
int
inc
adc
xor
sub
mov
stc
pop
call
leave
jecxz
sub
cmc
ret
xor
hlt
sub
sbb
jae
jae
sti
pop
dec
jae
fmull
jae
pusha
jmp
es
push
loopne
ljmp
or
fldcw
arpl
add
or
sbb
clc
inc
fbstp
sub
das
outsb
outsb
rclb
icebp
mov
ja
lds
mov
mov
aaa
in
dec
inc
inc
divb
add
dec
adc
mov
iret
out
leave
adc
inc
dec
sub
push
mov
in
push
mov
out
sub
std
jbe
push
fbld
jae
pop
stos
cltd
xor
and
or
inc
pop
push
sbb
xchg
lods
loop
xlat
xchg
clc
sub
or
aaa
aaa
mov
in
mov
jp
xor
aaa
aaa
out
std
fisttpl
xchg
lahf
scas
mov
fdivrl
or
dec
add
jmp
outsb
cs
xor
enter
dec
daa
and
sub
jo
pop
xlat
push
clc
testl
fnstcw
mov
sarb
outsb
les
push
mov
loop
jle
outsb
outsb
outsb
adc
jns
sub
jge
hlt
cld
ljmp
push
mov
and
or
in
or
dec
cwtl
sahf
push
sahf
hlt
pop
shlb
add
xchg
fwait
stos
mov
mov
mov
fdiv
scas
ret
psrad
pusha
int
int
fldt
pop
movsb
mov
mov
sub
fnclex
fcoml
sbbl
push
xchg
sub
in
xor
insb
outsb
outsb
fcomip
xchg
cmp
fnstcw
xor
jno
push
jbe
test
sbb
in
lds
pop
push
outsl
mov
cmp
lcallw
imull
pop
mov
pop
push
popa
mov
repz
shlb
in
cmpsb
cmpsb
loop
insb
lahf
test
jle
dec
sahf
cltd
ljmp
xchg
or
sbb
icebp
pop
push
jmp
xchg
aaa
aaa
aaa
aaa
mov
xlat
xchg
addl
pop
js
dec
fcoms
aaa
cltd
aaa
pop
mov
or
std
cmpsl
sbb
scas
xor
cmp
dec
dec
mov
dec
mov
lahf
fwait
or
imul
mov
rolb
mov
pop
hlt
add
cmp
pop
mov
test
stos
data16
popa
pop
and
mov
fisubrl
movsb
test
sahf
cwtl
xor
iret
xor
ljmp
or
notb
cmpsl
mov
sub
loopne
iret
out
mov
cmp
ss
mov
sub
push
pusha
lods
outsl
scas
mov
out
dec
adcb
stos
mov
inc
movsl
pushl
push
mov
insb
mov
sti
lret
xchg
mov
or
out
outsl
cmp
push
sub
jne
ret
ficomps
mov
movsb
loopne
jb
loopne
cwtl
loope
in
pop
cli
popf
push
xchg
sub
sahf
int
jle
jae
stos
cmp
xchg
repnz
mov
rolb
lcall
cltd
mov
test
loopne
loopne
hlt
loop
in
stos
and
lea
out
mov
inc
out
mov
pusha
outsl
aam
fimull
mov
outsb
aam
imul
cs
ds
loope
ss
mov
std
lret
xchg
outsb
shlb
dec
sbb
push
icebp
std
add
mov
test
adc
push
icebp
pop
inc
movsb
xchg
mov
cltd
into
and
inc
and
push
add
imul
mov
mov
imul
cmp
hlt
popa
js
jae
fnstcw
or
imul
int
xor
movsl
inc
shl
in
mov
gs
ljmp
mov
pop
int3
push
adc
je
jae
shll
nop
add
ficomps
addr16
jae
out
das
push
push
or
mov
out
outsl
loopne
aad
call
mov
xchg
clc
adc
loopne
xchg
hlt
jnp
popf
shlb
pop
in
hlt
rolb
mov
js
jmp
fcomps
leave
jb
mov
push
scas
pop
and
pop
xchg
mov
pop
push
into
aaa
mov
jmp
mov
xorb
push
notl
aas
sub
pop
pop
fs
xor
cmp
pop
sbb
mov
mov
xchg
sbb
jge
fbstp
pop
jo
adc
xor
outsb
outsb
cli
jbe
jns
jo
les
mov
rolb
cmp
jg
sahf
std
sub
insb
outsb
lahf
cmp
inc
inc
sbb
jno
xchg
int
and
sbb
in
mov
mov
out
and
rcrb
cld
cmp
cld
dec
std
insb
cli
cmpsb
pushf
cld
mov
out
out
pushf
ficompl
bound
jae
cli
mov
xchg
xchg
mov
xor
imulb
and
ja
adc
push
adc
fwait
rorl
cmp
jbe
lock
hlt
shll
loope
push
sbb
iret
int
mov
les
fdivrl
mov
inc
or
aas
jno
push
cmc
repnz
mov
out
out
popf
jb
pop
fistl
vcvtpd2dq
out
mov
sbb
ljmp
sub
lods
push
pop
mov
das
jo
fnstenv
es
cmp
jp
cwtl
ds
fwait
fwait
mov
adc
pop
shrb
fwait
lret
data16
cld
and
xlat
test
in
outsb
outsb
cli
insb
into
inc
iret
lret
jg
pop
xchg
lock
cmc
insb
or
mov
fcompl
sbb
jge
inc
mov
clc
fsub
cmpl
sbb
xchg
stc
cwtl
test
in
addr16
pop
and
cli
in
fistps
inc
cmpsb
fwait
fwait
fwait
fwait
dec
push
push
cmp
outsb
lahf
fwait
fwait
or
xlat
fistpll
movsb
testl
sub
int3
cld
or
lret
aaa
aaa
cld
insb
or
mov
push
lods
addr16
cmp
sbb
add
stos
lcall
stc
xchg
lock
shll
and
scas
jp
addr16
lcall
hlt
fldenv
mov
and
xchg
mov
inc
shl
ss
clc
popf
inc
dec
fdivs
daa
or
divb
hlt
mov
mov
lock
add
subl
cmp
mov
out
fidivrl
gs
sbb
loop
inc
jae
inc
jl
add
in
movsb
testl
int
sbb
push
mull
cs
ret
dec
pop
mov
clc
adc
fldcw
hlt
mov
shrb
gs
adc
ss
rcrb
jle
jecxz
mov
fstps
es
pop
int
mov
loope
je
inc
or
sbb
fwait
cmp
lock
mov
scas
int
jmp
cmp
std
dec
stc
push
sub
repz
cmpsb
inc
sbb
fwait
ds
xchg
pop
pop
dec
add
cli
fadds
stc
mov
xor
mov
push
das
and
call
mov
dec
pop
adc
loopne
daa
and
jp
aaa
aaa
jb
dec
xor
mov
enter
fisubl
shl
mov
les
in
push
push
xor
mov
mov
stc
loop
rolb
mov
sub
test
loop
addr16
jp
aas
push
sbb
call
pop
push
cld
rcll
js
ja
in
and
outsb
cs
flds
fimull
adc
scas
mov
lock
lret
ret
mov
ljmp
pop
hlt
dec
or
aam
in
aas
fwait
fwait
adc
sti
xor
shrb
or
idivb
ret
adc
mov
mov
cltd
fcomi
subl
daa
and
std
inc
movsl
jge
outsb
pop
popa
cmp
jnp
sahf
aas
lods
and
xor
mov
outsb
outsb
outsb
outsb
adc
hlt
int
jp
and
shrl
mov
add
cmpsb
rorl
test
int
sbb
test
stc
mov
pop
pop
lret
and
clc
lcall
or
cmp
inc
mov
xchg
or
dec
out
pop
sub
add
push
sbb
cltd
push
fwait
mov
je
sbbl
idivb
inc
jnp
adc
fldenv
push
mull
out
out
pop
cmc
jae
aam
sbb
je
pop
add
iret
out
mov
dec
mov
xchg
gs
pop
cmpsb
lret
cmpb
jo
leave
jnp
sti
xor
jg
lahf
xchg
cli
xchg
fwait
mov
xor
or
inc
inc
jp
scas
into
out
mov
jae
or
pop
mov
mul
daa
jecxz
jae
or
inc
fnstcw
adc
ds
mov
mov
scas
pop
jb
lods
push
aad
push
enter
fwait
jns
mov
and
lock
insb
sbb
loopne
subb
fdivrl
and
scas
in
test
mov
in
notl
out
pop
push
mov
xchg
xchg
ljmp
imul
adc
jbe
jle
aas
sti
ds
insb
dec
mov
mov
mov
es
push
outsb
outsb
outsb
outsb
movsl
jb
inc
and
out
mov
mov
int3
mov
jnp
fcmovu
sbb
and
cli
fcomps
insl
fcomp
inc
sbb
jo
inc
pushf
fwait
rcll
in
sbb
clc
sub
negl
insb
add
mov
lds
pop
popf
push
add
scas
xlat
sub
mov
push
lcall
idiv
ret
xchg
mov
addps
divl
aaa
mov
cmp
inc
mov
mov
or
mov
mov
movsl
cmp
jae
push
bound
jle
adc
stos
out
jae
push
outsb
popf
dec
mov
mov
or
pop
sbb
xchg
jne
les
cmp
stc
stos
dec
mov
outsb
lahf
xchg
mov
mov
std
inc
add
scas
insb
outsb
outsb
outsb
push
loop
scas
cmp
loop
pop
ss
hlt
mov
stos
cld
mov
in
or
mov
xchg
sub
rclb
outsb
scas
cli
movsb
ss
roll
adc
outsb
dec
inc
lcall
fdivp
pop
cmp
lret
fdiv
mov
xor
mov
sbb
fsubrl
out
dec
push
sbbl
dec
ret
pop
mov
cmpsb
sti
pop
fcmovbe
cwtl
mov
add
push
and
sarb
jge
fdivl
leavew
out
mov
outsb
outsb
dec
mov
lahf
cld
mov
out
fstpl
jg
mov
inc
mov
mov
sbb
orl
lret
int
mov
outsl
mov
mov
cmc
repnz
leave
icebp
sbb
mov
xchg
enter
lahf
mov
cmpsb
es
out
mov
popa
or
mov
push
push
add
outsb
fwait
sbb
int
int
andb
adc
or
lret
cmpsl
lock
and
stc
dec
aas
fwait
fwait
sti
mov
inc
leave
out
mov
cmp
into
cli
cmp
addr16
daa
into
pop
cmpb
xor
jecxz
mov
push
std
pop
test
pushf
mov
arpl
aad
cmpsb
lods
xor
jae
outsb
out
notb
ret
test
inc
int
jecxz
int
int
or
fadds
add
adc
jle
int
test
pop
mov
dec
jno
mov
or
lea
lds
ret
mov
push
pusha
fisubl
push
ja
insb
vpmacsdd
or
movsb
test
aaa
pop
push
mov
scas
mov
sbb
cmp
dec
mov
icebp
out
or
cmp
sub
stos
mov
mov
popf
cmpb
mov
push
mov
fnstcw
and
and
xchg
cmpsb
mov
nop
test
inc
in
into
cs
in
in
cli
fnstcw
push
test
lods
adc
ficoml
jl
mov
jns
out
add
mov
cmpsb
mov
out
cmpb
int
icebp
or
bound
movsl
push
clc
aaa
jl
fwait
cltd
decl
cmc
sub
lret
outsl
cmp
aaa
aaa
or
pop
fs
cmp
cmp
daa
jl
push
jae
pop
in
cmp
aaa
aaa
push
mov
inc
xchg
cmp
mov
pop
into
sub
or
mov
clc
mov
shlb
divb
std
cmp
sub
aaa
aaa
aaa
mov
clc
lds
add
cli
inc
fistps
fwait
fwait
mov
mov
es
std
jb
lock
fwait
fwait
fwait
pop
mov
int3
dec
jle
inc
sbbl
fiadds
add
pop
pop
aaa
cwtl
ja
std
nop
sahf
fwait
add
cwtl
ret
insl
cmc
fcompl
cmp
pusha
es
aam
into
stos
mov
dec
fwait
mov
mov
shrl
xchg
cmpb
inc
cmp
sti
dec
pushf
mov
out
xchg
shrb
je
adc
push
cld
push
cmp
pop
sbb
add
mov
out
ds
mov
xchg
fdivrl
push
or
push
imulb
js
sarb
mov
mov
dec
cwtl
or
adc
fcompl
test
adc
xchg
nop
push
lods
jbe
outsb
adc
add
sub
nop
jge
shlb
addr16
adc
mov
ss
aaa
mov
outsl
icebp
xor
sti
fldz
cmc
lret
xlat
fisubl
xchg
cwtl
xchg
ljmp
in
fildl
and
dec
cmp
rcrb
hlt
ja
or
scas
stos
push
aaa
aaa
sub
inc
daa
mov
mov
mov
add
sahf
mov
js
cmp
pop
sarb
hlt
jecxz
mov
mov
out
sub
push
inc
insw
jae
iret
neg
jo
adc
or
lock
and
push
mov
out
aam
ja
js
adc
lahf
sbb
sbb
ficompl
dec
es
push
dec
xchg
icebp
and
pop
mov
mov
cmpsb
mov
cmp
or
repz
repz
xchg
jecxz
les
into
call
imulb
and
pop
ret
cmp
pop
xor
mov
fnstsw
cld
insb
add
push
pushl
mov
sti
cmpl
fmuls
lea
jb
push
fcmovne
jbe
pop
or
lods
xor
cmp
call
mov
aad
addr16
out
clc
mov
bswap
test
inc
popf
and
cs
cli
pop
pop
push
jl
test
test
mov
and
fbstp
gs
pusha
fcmovb
xor
leave
aaa
aaa
aaa
aaa
test
dec
jnp
add
xchg
xchg
xchg
js
out
sbb
sub
insb
lahf
push
xor
inc
pop
icebp
movsb
idivb
outsb
inc
scas
je
fadd
aaa
pop
push
jno
insl
into
aas
in
flds
call
or
jp
pop
ds
in
jae
mov
es
pop
shrl
fwait
fwait
fwait
sub
xchg
popa
gs
loop
mov
and
mov
out
push
add
out
shrb
ror
xor
clc
stos
inc
inc
or
fstpt
fs
jne
pop
addb
mov
loopne
fwait
xor
stc
and
call
sub
jnp
clc
xlat
fcompl
push
and
push
sub
mov
jbe
js
add
and
sbb
mov
add
out
mov
push
int
arpl
aad
call
cmc
rclb
lods
lock
mov
and
insl
cld
sbb
movsl
in
int
int
push
xchg
jmp
xor
sbb
iret
int
int
xchg
sbb
jmp
js
push
sub
mov
xor
pop
sbb
add
sub
pop
das
cld
jmp
sti
faddl
add
sahf
pop
loopne
mov
divl
fnsave
std
sbb
cld
mov
mov
pop
outsb
xlat
and
repz
dec
idivb
fwait
fwait
fwait
sbb
inc
dec
push
xchg
pop
aad
into
addb
adc
sbb
negb
sahf
jnp
sahf
mov
sub
or
mov
pop
xor
or
enter
sbb
mov
test
inc
sahf
rcrb
mov
aad
push
add
mov
mov
push
dec
ljmp
mov
jge
and
push
std
and
mov
sbb
inc
jmp
pop
sub
and
mov
push
daa
pop
movsl
enter
scas
insb
out
clc
fnstenv
mov
das
mull
pop
fimull
xor
cmpsl
jge
jle
add
ds
push
cmp
lcall
cld
jge
outsb
cs
fcoml
jl
pusha
stc
test
outsb
outsb
outsb
outsb
mov
dec
stos
cmpsb
xlat
ret
mov
mulb
hlt
insb
jmp
lcall
out
scas
sub
and
adc
sbb
outsb
outsb
outsb
outsb
xor
jmp
mov
sub
rcrb
push
push
dec
xor
inc
jbe
lods
push
cmc
push
icebp
leave
test
mov
rorb
enter
outsb
inc
ret
xchg
lret
pop
sub
out
jp
jle
adc
out
cld
sbb
cmp
lods
testl
dec
sbb
mov
lock
jno
es
cli
fisubl
ss
lock
cwtl
sbb
sti
pop
jle
out
lahf
popl
cmp
leave
or
jge
mov
icebp
test
fsubl
cwtl
mov
add
fidivrl
cmp
insb
jns
out
imul
xchg
jbe
leave
push
mov
sahf
lods
arpl
out
out
or
xor
adc
jae
out
in
in
sbb
call
sub
or
push
jae
jae
aaa
enter
inc
leave
loope
or
add
adcl
jae
daa
xchg
fmuls
in
aaa
aaa
aaa
aaa
lret
sti
mov
test
aaa
inc
inc
out
xchg
out
les
jl
jno
fiaddl
sahf
lret
mov
xor
and
jmp
add
test
dec
xlat
loopne
pop
push
movsb
iret
int
in
lcall
jae
fldenv
aas
sbb
jp
fcompl
jmp
or
push
movlps
cs
pop
adc
push
push
sbb
mov
shlb
fsub
adc
iret
test
mov
neg
stc
pop
nop
in
shlb
ljmp
es
out
insb
dec
in
jns
test
push
loopne
stos
dec
or
insb
outsb
adc
or
out
cli
add
jge,pn
sub
and
outsb
outsb
outsb
into
addr16
fldcw
out
adc
add
mov
and
repz
sbbb
xchg
outsb
outsb
outsb
outsb
pop
dec
std
dec
dec
mov
jle
je
pushf
cmpsb
mov
jmp
xchg
aas
or
adc
pop
mov
test
pusha
lds
rcr
sbb
adc
loop
cmp
cmp
pop
ljmp
cli
das
xor
outsb
outsb
outsb
outsb
scas
popf
cltd
adc
data16
pop
cld
insb
adc
in
andb
adc
ficoml
sahf
shl
jmp
mov
add
loope
sub
insb
lahf
out
dec
cli
cltd
jmp
xor
out
std
outsb
dec
data16
cmp
sbb
xor
aas
fistl
cmpsb
adc
std
add
jno
sub
cmp
pushf
aam
and
repnz
shrb
adc
enter
pop
lods
ficompl
fwait
fwait
fwait
sub
scas
jl
inc
pushf
push
or
mov
jge
dec
mov
addr16
loop
push
xchg
arpl
sbb
fcmovu
or
inc
out
fwait
mov
imul
cmp
hlt
pop
cmp
pop
hlt
or
stos
imul
xor
sbb
and
lret
adc
mov
ja,pn
divb
enter
lods
es
fsubrs
out
out
lods
xchg
mov
push
subl
fldt
ret
xchg
cmpb
xorb
push
jp
dec
ss
lret
sbb
xchg
enter
sbb
loopne
jl
inc
mov
lcall
pop
loop
pop
mov
inc
push
lret
mov
pop
movsl
jae
jno
test
fs
loope
cmp
pop
std
mov
push
xor
mov
jnp
fsubrl
negl
xor
mov
jae
dec
sbb
cmp
mov
mov
mov
sub
nop
sbb
mov
test
orl
test
mov
ret
sti
jge
add
mov
jae
mov
dec
ret
push
shrl
cmpsb
lahf
mov
push
mov
shll
out
inc
jbe
out
mov
inc
add
scas
mov
pop
fists
mov
push
ds
aaa
mov
adc
pop
cmp
les
or
in
mov
mov
inc
pop
outsl
or
dec
jle
mov
and
push
jle
jl
fdivr
mov
mov
popl
mov
jmp
or
insl
outsb
outsb
outsb
outsb
sbb
mov
push
jmp
test
outsb
scas
push
icebp
mov
xchg
jbe
scas
repnz
insb
push
fdivrs
mov
pushf
fwait
inc
add
out
pop
nop
lcall
aaa
aaa
aaa
sti
stos
push
dec
push
outsl
movsb
lock
aaa
aaa
aaa
leave
xlat
movsl
movb
ret
ss
pop
out
xlat
xor
out
fidivs
mov
mov
cmp
xchg
jae
popa
divb
shl
imul
pop
int
mov
jae
jae
arpl
ss
add
xor
jae
jae
xchg
imul
mov
ret
fdiv
mov
push
aad
mov
and
push
dec
xor
push
jne
mov
fsubrl
bound
bound
mov
lds
out
stos
into
add
push
es
out
notb
jbe
mov
movsl
out
out
cmpsl
data16
inc
cmp
int
mov
sti
xchg
out
pop
rorb
xchg
xorb
int
int
xor
je
aas
pop
imul
int
int
dec
or
rcrb
pop
insb
mov
cmp
imul
jne
in
call
pop
scas
clc
and
outsb
outsb
out
nop
adc
aaa
stos
add
int
int
in
mov
sub
pop
iret
mov
add
pop
lcall
pop
ret
lds
fsubrs
cmp
gs
in
mov
js
mov
adc
std
insb
outsb
xchg
clc
mov
fldcw
js
movsb
test
int
jmp
lods
jbe
shlb
int
ja
ret
inc
dec
movsb
in
dec
ret
fcompl
and
adc
test
aas
push
jecxz
mov
ret
mov
add
sti
rcrb
mov
mov
ljmp
aam
push
in
xchg
shlb
sbb
sub
or
outsb
outsb
jbe
add
into
mov
mov
push
and
cli
jg
sub
lock
imul
repz
pop
add
sbb
and
ss
cmp
jno
pop
jne
test
inc
clc
lret
and
scas
jge
and
mov
jmp
fdivrl
push
ret
repnz
mov
movsb
push
popfw
andb
mov
jge
or
cmp
jne
cmp
jae
outsl
ret
outsb
xor
ret
inc
mov
ja
inc
cmp
mov
imul
fdivl
pop
or
aaa
aaa
aaa
cmp
inc
pop
and
sbb
cmp
cmp
lds
jae
jae
fisubrs
or
xchg
mov
jle
mov
add
stc
xchg
je
mov
addr16
pop
fcoml
sbb
ret
jl
jo
adc
jecxz
mov
sbb
jl
sbb
das
outsl
orb
loopne
and
fdivr
cmpb
push
mov
pop
xchg
xchg
jp
lock
fcompl
rorl
xor
imul
fwait
and
movsl
outsl
call
negb
push
jbe
ss
cmp
insl
loop
cmp
mov
jmp
inc
mov
outsb
outsb
outsb
outsb
or
popf
sub
inc
mov
push
sbb
pop
ljmp
lods
sbb
mov
sub
scas
dec
dec
mov
jae
lock
cmp
push
andb
int
test
dec
cmp
loop
push
aaa
aas
fwait
fwait
jp
in
pop
je
call
clc
jge
aaa
or
outsl
sbb
fistl
cmp
outsb
outsb
outsb
out
ss
rcll
inc
pushl
xchg
insb
outsb
outsb
movsl
jp
insb
adc
jo
pop
icebp
fld
adc
jp
aas
fs
repnz
fmull
cmp
fwait
stos
sahf
mov
pop
xorl
fwait
fwait
fwait
into
jo
add
mov
outsl
dec
push
mov
push
std
mov
clc
bound
push
cmp
hlt
ror
cwtl
push
mov
jae
add
dec
jno
or
addr16
jae
sbb
out
adc
jmp
ljmp
xor
ja
roll
pop
js
out
outsb
fstpt
iret
mov
cld
orb
push
add
cmp
fstpt
in
addr16
xor
in
mov
jnp
rcrl
loopne
jbe
mov
xor
out
adc
stc
lods
sti
repz
fildl
int
int
pop
add
inc
shlb
int
lock
push
cmp
and
int
pop
aas
cmp
sahf
std
je
jmp
or
and
and
inc
sub
into
push
cmp
mov
ds
mov
cwtl
arpl
rorb
add
xor
jle
notl
fcmovbe
pop
push
or
xchg
inc
inc
clc
outsl
sbb
fsubrl
je
pop
sub
push
enter
mov
pushf
das
jle
daa
xchg
xchg
push
icebp
fdivl
sub
subb
jecxz
pop
pop
xchg
add
mov
xchg
fsub
jge
and
jno
mov
cmc
xor
sti
push
jle
pop
and
or
push
insb
cs
in
mov
adc
mov
sub
imul
cmp
out
or
imul
mov
mov
fmull
sbb
scas
sub
pop
or
xorb
fcompl
mov
cmpsb
xor
cld
jae
jae
mov
lock
cmc
push
sti
lods
fcoml
loope
push
pushf
jno
lods
stos
mov
fcompl
jl
popf
icebp
loop
sarb
add
in
push
and
lock
mulb
iret
int
or
clc
push
bound
call
xchg
out
xchg
lcall
int
int
in
hlt
add
int3
shll
push
adc
std
insl
lret
jae
rorl
ljmp
jl
mov
adc
aaa
mov
out
daa
cmpsb
in
push
inc
mov
and
aas
test
inc
mov
addr16
popf
cli
push
fdivrl
jl
ret
add
in
cmc
cmc
and
push
mov
adc
aam
ror
adc
movsb
xchg
bound
xlat
adc
add
movsl
insb
hlt
aam
cmovg
cmp
setg
int
shll
push
les
daa
or
fwait
fwait
fwait
scas
shl
je
xor
push
pop
jns,pt
cmc
fwait
fwait
fwait
fwait
xchg
movsb
xchg
outsl
xchg
adc
in
sbb
ja
adc
lahf
int
int
clc
cmp
ss
xchg
mov
movsb
ja
adc
loopne
shr
mov
lahf
in
outsl
call
sbb
popa
mov
bound
orb
aas
cli
idivb
rcll
add
dec
mov
adc
out
add
movsb
outsl
xlat
mov
gs
sbbl
inc
repz
push
pushf
out
xchg
cmp
mov
push
inc
xchg
outsb
nop
iret
mov
xchg
or
xor
pop
les
mov
ffree
pop
sub
test
inc
lahf
mov
add
or
hlt
js
jge
jmp
mov
dec
fsubs
insb
pop
push
lods
or
fistpll
ja
fwait
fwait
or
xor
sub
int
jo
enter
fwait
xchg
es
sbb
scas
add
movsb
xchg
add
clc
jle
mov
mov
rclb
out
xor
insb
rclb
push
es
push
stos
enter
mov
ljmp
in
mov
fcmovne
notb
push
fldt
aas
icebp
repz
or
jg
aam
fnstcw
jge
jge
insb
enter
ficoml
fcompl
sub
cld
xchg
pop
in
inc
in
ja
mov
dec
jecxz
dec
rolb
xor
jae
dec
call
mov
mov
xchg
out
idivb
in
out
out
rcrl
add
pop
push
push
imul
out
int
push
sub
mov
mov
sti
fsubl
dec
mov
lea
fsubr
fcompl
inc
xchg
out
cmpsb
cmp
std
and
clc
xchg
bound
cltd
mov
mov
pop
add
lock
ret
lods
jle
dec
cmp
mov
pop
sbb
sahf
pusha
stos
movsb
sbb
dec
jmp
mov
xchg
mov
arpl
cmc
push
rcrb
out
fdivl
xchg
out
mul
jnp
jne
push
popf
test
sbb
push
mov
movsl
loopne
int
int
or
shl
movb
dec
jp
insb
pop
es
jbe
jecxz
inc
iret
push
aas
add
insl
into
push
insl
inc
mov
pop
addr16
push
inc
shr
jmp
mov
or
dec
adc
out
mov
jae
and
cmp
jg
ja
andb
in
adc
lret
dec
push
cmpsl
in
push
mov
cmc
pop
mov
sub
sub
mov
and
movsb
das
aaa
cmp
aad
sub
loop
push
fdivrl
sub
adc
loop
inc
out
cmpsl
push
mov
scas
lods
jns
jl
pop
iret
mov
mov
out
out
jl
mov
sub
out
jecxz
leave
shll
mov
adc
cmp
pusha
fildl
sub
mov
pop
inc
movsb
ds
mov
pop
divl
sub
cs
popa
mov
cmp
jl
fs
or
test
mulb
mov
dec
jne
add
out
addl
shl
mov
mov
sub
pop
mov
hlt
frndint
insb
out
sub
sbb
cmp
dec
loope
xor
add
jle
adc
nop
pushf
lret
js
adc
jne
mov
rclb
fadds
push
jo
idivb
stos
add
out
cmp
adc
repnz
dec
adc
dec
int
and
mov
inc
bound
inc
cmpb
jmp
out
testb
sahf
mov
adc
inc
cwtl
out
out
mov
pushf
xchg
xchg
out
pop
jbe
aad
out
aad
push
cltd
mov
imul
in
popa
cmpsl
outsl
mov
aam
lock
sti
cwtl
mov
nop
and
das
sbb
xchg
lock
push
push
cli
add
sub
outsb
ja
cmp
pop
fcomp
cs
xchg
jae
jae
sbb
repnz
sbb
inc
xchg
adc
addr16
jae
and
adc
sti
mov
scas
ret
adc
mov
dec
enter
xchg
rorl
into
int
inc
out
mov
dec
pop
in
xchg
aas
stos
mov
jecxz
dec
les
ds
cmp
es
mov
insb
outsb
outsb
outsb
xchg
mov
int3
push
aad
push
jge
icebp
jecxz
push
sbb
loop
mov
outsb
outsb
aas
mov
jb
shlb
and
pop
lock
ljmp
pushf
jno
pop
gs
cli
pop
sbb
out
test
fwait
fwait
fwait
xchg
push
lods
and
adc
push
hlt
add
dec
xorb
out
pop
cld
pop
sbb
pop
xchg
int3
jmp
xchg
or
sbb
adc
aas
test
movsb
inc
cmp
push
outsb
outsb
outsb
outsb
jg
iret
cmp
sub
popf
pop
hlt
insb
outsb
dec
add
jns
cmp
or
mov
fisttpl
mov
cmp
pcmpeqd
cltd
mov
mov
stos
ret
mov
lret
jnp
outsb
scas
cli
flds
sub
xchg
aad
fbstp
sbb
jne
loopne
insb
sbb
add
mov
jbe
add
sahf
in
and
das
mov
divl
inc
fmuls
mov
dec
rcrl
scas
push
inc
mov
mov
lock
cld
push
mov
clc
xchg
cmp
fistpl
mov
ret
pusha
sarb
push
mul
adc
js
pushf
mov
xchg
ds
sub
int
mov
xor
arpl
call
into
aam
jle
mov
xor
rorl
je
cmp
lock
adc
or
fdiv
adc
mov
mov
fdiv
dec
aam
roll
ret
push
sahf
cs
ljmp
mov
add
inc
inc
stos
xor
pop
xchg
call
cli
add
pop
sbb
aas
inc
xchg
cmp
clc
dec
repnz
push
pop
cmp
leave
xchg
add
outsb
shll
push
insb
mov
fcomi
mov
sbb
mov
ja
jmp
add
loope
jle
int
push
mov
cmp
imul
jns
loop
popf
fwait
fwait
push
es
xchg
int
jae
insb
sub
sbb
cmp
push
es
inc
dec
fimull
je
repnz
sub
adc
mov
or
jns
mov
mov
idivb
loopne
outsb
cli
fnop
fwait
jb
ret
sbb
push
dec
ja
outsb
outsb
outsb
outsb
int3
cmp
mov
xor
test
cmp
jae
cld
gs
loopne
sarl
nop
mov
mov
popf
mov
inc
clc
shl
sti
insb
mov
xchg
inc
test
xchg
dec
lock
pop
data16
insl
movsb
add
pushf
hlt
rcll
lret
and
jnp
loopne
movsb
fcmovb
xor
int
addr16
mov
iret
mov
add
aaa
aaa
mov
sub
mov
push
rcll
cmp
adc
mov
popa
push
xor
jae
jge
push
insb
mov
aaa
mov
andl
ret
cmp
ds
push
push
enter
add
sub
cmp
inc
sbb
push
imul
xor
jns
cmp
mov
orb
jbe
cmp
mov
out
js
xchg
jg
in
je
cmp
aaa
aas
fwait
fwait
push
or
js
push
xchg
fdivrl
ret
rcll
popa
xchg
shrl
scas
cli
mov
ljmp
aas
pop
imul
and
mov
loopne
mov
xor
inc
xchg
adc
jle
aaa
cmp
fsubs
dec
ja
int
push
loop
iret
repnz
xor
sbb
int
add
or
loope
or
fstps
lcall
popf
xlat
outsb
outsb
das
icebp
lahf
mov
dec
pop
pusha
pop
jne
or
outsb
outsb
outsb
or
mov
pusha
pop
mov
or
std
insb
outsb
xchg
outsl
movsl
popa
push
mov
jl
das
inc
pop
aaa
aas
fwait
fwait
lods
push
leave
mov
jae
fdivrl
shll
shlb
ret
rcrb
in
jae
je
xchg
clc
sub
arpl
sub
insb
insb
dec
lock
adc
js
mov
aad
cmp
mov
jl
divb
inc
mov
imul
out
cmp
arpl
sub
mov
loope
jl
jb
popf
repnz
bound
loop
push
dec
out
divb
test
incl
aam
pop
jne
fistps
jo
adc
fdivrl
mov
dec
sbb
adc
enter
and
fsubrl
imul
adc
fistl
scas
imul
cld
insb
outsb
aas
les
bound
lock
fsubl
lods
lods
cli
push
in
in
aaa
aaa
aaa
aaa
mov
push
xlat
call
clc
push
cmp
aam
ret
dec
sahf
ficoml
pop
sbb
inc
add
nop
jp
ljmp
outsb
lahf
ss
test
push
xchg
sbb
jb
cmc
mov
mov
inc
sbbb
pop
repz
fwait
fcmovnu
and
xor
jecxz
or
adc
add
adc
xor
mov
cmpsb
push
mov
icebp
pop
std
lahf
dec
adc
dec
push
xchg
popa
fcompl
cltd
frndint
mov
addb
mov
jl
fdivr
mov
sbb
jae
jno
xchg
mov
das
sub
stos
loop
icebp
push
aam
rcll
xchg
push
ss
pop
cmp
jbe
sub
fcomip
lds
into
in
jb
mov
push
add
xchg
cmpsb
sub
insb
outsb
pop
sub
icebp
xchg
aaa
dec
lea
popa
icebp
fmuls
ds
mov
sahf
mov
dec
sbb
and
fwait
and
mov
aam
mov
pop
in
sarb
mov
inc
repnz
mov
cmp
jle
xlat
cmp
xorb
jae
adc
dec
aaa
sbb
scas
out
jae
jae
dec
cmpsb
loopne
xchg
std
jbe
in
pop
iret
out
fcmovne
cmp
int
sbb
cwtl
and
jle
push
test
stos
and
pushf
fwait
sbb
pop
adc
fwait
fwait
lods
cmp
xchg
inc
mov
mov
movl
hlt
mov
lds
fnstcw
mov
mov
jecxz
ds
add
out
test
push
jo
hlt
ss
mov
outsb
outsb
outsb
clc
mov
push
push
out
xchg
out
out
xorb
pop
nop
add
lahf
pop
dec
insb
out
out
loope,pn
int
pop
lret
xor
int
ja
addr16
addr16
scas
popa
out
sub
iret
inc
clc
dec
lock
outsb
outsb
js
mov
push
in
data16
mov
enter
lods
out
fwait
mov
dec
jns
bound
data16
in
daa
cmp
scas
or
mov
sbb
mov
idiv
dec
shll
cmpsb
pop
js
clc
ds
insb
loopne
inc
jecxz
sub
mov
cmp
popf
mov
sbb
shl
jae
std
mov
adc
outsb
xlat
les
insb
sub
xchg
imul
fdivr
insb
pop
mov
add
movsb
mov
test
pop
out
out
imull
insb
xchg
subl
lock
fdivr
add
dec
fnstcw
xor
fwait
movsl
ret
jae
jae
xchg
mov
jnp
fs
ljmp
jecxz
in
or
aaa
mov
mov
cmpsb
repnz
adc
pop
fs
outsb
clc
fnstenv
push
dec
cmp
push
mov
iret
scas
insb
jbe
adc
scas
sbb
cmp
jp
sahf
jb
test
jmp
or
jecxz
sarl
dec
sub
sub
mov
addb
cld
int3
divb
mov
arpl
push
aad
cltd
test
jbe
pop
pusha
dec
or
int
push
sbb
xlat
cmp
in
dec
orb
ds
je
test
fsubl
shlb
dec
push
in
out
out
loope
imul
das
lahf
pushf
dec
mov
xchg
out
out
inc
stc
cli
and
adc
test
jae
stos
enter
in
mov
dec
mov
loope
cmp
inc
loopne
jbe
iret
int
xchg
mov
sub
test
jle
outsb
fldl
stos
add
int
in
addr16
cmc
inc
xchg
pop
adc
rcll
int
sub
and
out
ss
aaa
mov
fisubl
movsl
jg
loop
clc
fwait
fwait
sbb
popf
pop
and
into
leave
icebp
ljmp
fwait
test
aaa
jnp
jbe
adc
push
sahf
xor
dec
xlat
fwait
fwait
fwait
fwait
dec
adc
ret
mov
inc
adc
cwtl
cltd
mov
push
clc
adc
imul
ss
aaa
mov
inc
loope
cmp
sub
repz
push
dec
cmpsb
in
cmc
fnstcw
xchg
mov
leave
add
imul
subb
imul
pop
les
xor
fs
ljmp
and
cmpsb
add
call
into
out
lret
sbb
lock
jl
in
sahf
or
mov
adc
call
xchg
std
pop
shl
pusha
dec
mov
sbb
filds
push
es
mov
mov
ss
fld
cld
sub
adc
fwait
sub
cld
test
jmp
xchg
pop
cld
sub
jl
mov
pop
psubb
xor
lods
mov
mov
addr16
and
sub
insb
cld
sbb
push
lahf
jbe
lahf
add
add
insb
faddl
adc
cmp
pop
push
iret
cmp
subl
out
jmp
int3
out
add
sahf
int
jg
pop
mov
pop
mov
ds
adc
call
xor
iret
int
outsl
jl
pop
xor
es
dec
rclb
adc
sub
xchg
push
int
int
cmp
dec
divl
xchg
xor
es
scas
mov
xor
jbe
ds
push
mov
out
notb
insl
clc
insl
push
sahf
clc
in
dec
data16
ds
mov
in
pop
jae
and
test
mov
insb
imull
sahf
fcmovne
cld
jmp
loopne
subl
jg
in
aaa
fdivrs
fwait
fwait
fwait
dec
inc
ret
push
outsb
int
and
jp
jge
adc
sbb
in
test
pop
inc
fs
call
pop
into
jecxz
mov
mov
std
icebp
inc
lock
cli
imul
mov
repnz
popa
or
shll
ficompl
iret
mov
add
fdivrl
mov
add
xor
mov
pushf
pushf
call
jo
and
or
cmp
dec
std
sub
test
mov
out
js
mov
and
repz
ret
outsb
and
js
sub
dec
mov
xchg
inc
pop
sahf
inc
mov
adc
sub
leave
cmc
fstps
int3
push
mov
and
notb
stos
cmp
out
fst
or
sub
cld
jae
jae
ljmp
jge
popa
imul
sti
fidivrl
pop
test
gs
mov
int
addl
jbe
icebp
cmp
mov
data16
je
cmpb
outsb
adc
adc
push
rolb
out
arpl
aas
sbb
mov
lods
and
lret
jp
mov
loop
test
mov
stos
xchg
les
and
add
pop
icebp
and
std
mov
xor
inc
sub
fsubl
sub
dec
clc
dec
ljmp
sub
pop
hlt
orb
or
int
pop
add
enter
cmpsb
stos
fwait
or
and
pop
and
inc
push
xor
or
mov
je
hlt
jnp
fwait
fwait
fwait
pop
cmp
stc
xor
or
sbb
cmp
fwait
and
pop
test
je
std
dec
lods
pusha
xchg
mov
pop
and
mov
call
adc
xchg
adc
push
repz
adc
lcall
call
data16
ret
call
outsl
js,pn
cmp
cld
pop
call
sti
insb
outsb
outsb
insb
arpl
adc
into
jbe
fcompl
fists
xorb
mov
je
or
or
lret
jo
ljmp
aam
test
mov
test
xor
push
mov
jle
pusha
jecxz
jne
push
fidivl
pop
insl
push
movsb
lods
and
push
repnz
and
jmp
out
cmp
sbbb
or
inc
jg
and
lcall
enter
mov
sub
in
xchg
cmc
inc
jmp
xchg
push
and
lods
lahf
int
orb
movsl
test
test
neg
fsubrl
adc
adc
xor
dec
insb
fwait
lahf
int
int
cmpsb
jecxz
pop
jg
mov
xchg
jl
mov
popfw
daa
inc
jp
les
cwtl
xchg
pop
js
mov
addb
out
pop
out
xchg
cltd
mov
idivb
fbstp
popf
xchg
les
iret
aam
int3
cli
jb,pt
mov
std
insb
outsb
add
dec
dec
and
stos
and
shl
or
xor
ds
sbbl
push
mov
mov
dec
shll
dec
mov
lret
dec
jae
shlb
iret
aam
push
sbb
fdivrl
sbb
shrb
sbbb
cli
cwtl
fcoms
jae
jae
mov
jo
sub
push
ds
clc
sub
ret
int
jae
into
pushf
inc
dec
mov
sahf
jae
fildll
jle
iret
int
jne
orl
scas
inc
outsl
push
sarl
jb
mov
inc
xchg
xchg
mov
fdivl
insl
in
insb
aaa
jno
repnz
into
pop
enter
clc
ret
nop
jb
inc
js
lret
out
xchg
pop
pop
nop
xor
inc
jle
ror
out
sub
mov
jge
loope
jae
sti
fwait
mov
mov
mov
sub
inc
push
jecxz
std
and
ds
pop
pop
movsb
aaa
aaa
aaa
aaa
and
inc
fstpt
cmp
sbb
leave
fwait
jp
aaa
or
cmp
mov
or
pop
mov
iret
out
pop
cmp
shr
jae
in
jo
sub
mov
addr16
out
lods
pop
fucomi
cmp
out
sub
add
adc
call
aas
fwait
mov
test
ds
ds
subb
les
add
mov
in
out
insb
arpl
hlt
mov
dec
jae
inc
inc
push
xchg
mov
mov
jns
push
out
lahf
jno
sub
inc
push
pop
add
xchg
test
in
out
mov
ret
mov
cmp
mov
in
adc
outsb
fsub
ret
push
movsb
les
loopne
outsb
aam
sbb
fcomi
cmpsl
sub
sbb
in
insb
jnp
leave
repnz
push
iret
int
lahf
subl
les
fdivl
push
aam
ds
insb
mov
in
xchg
sarl
sub
gs
stos
xor
mov
ds
sub
cmc
fsubl
test
aad
lahf
stc
les
adcb
outsb
mov
rorl
in
leave
jo
dec
and
outsb
pop
repnz
fldenv
insl
rcr
aaa
aaa
jl
mov
sub
cmp
aaa
aaa
mov
push
imulb
pop
repnz
arpl
mov
or
cltd
mov
jge
filds
in
aaa
adc
jne
jmp
mov
addr16
inc
dec
pop
mov
scas
xchg
jle
int
aas
pop
and
push
pop
rcrb
int
mov
inc
in
push
xchg
push
sti
aaa
mov
std
xchg
sub
xorb
das
lock
mov
mov
mov
fildll
cmpb
pop
test
dec
stos
sub
jae
pop
lock
or
imul
jmp
jae
jae
leave
push
test
repnz
fwait
aaa
mov
addr16
inc
xchg
dec
test
outsl
sahf
xchg
icebp
fdivrl
lcall
lds
hlt
hlt
cld
outsb
scas
clc
cmp
or
iret
outsl
cmp
cli
insb
outsb
jmp
push
or
cmp
movsb
sbb
out
push
xor
pop
sbb
outsb
outsb
rclb
jmp
mov
sti
addr16
push
xchg
jno
lahf
mov
fisttpl
mov
scas
jb
sbb
sbb
ss
adc
sub
cmp
xchg
jle
ja
es
loopne
xchg
pcmpeqd
sbb
mov
insb
mov
out
mulb
mov
lds
dec
das
test
pushf
int3
cmc
sti
fdivrl
xorl
stos
idivb
xchg
push
sub
jae
jae
push
push
scas
out
push
xchg
dec
mov
jae
adc
push
xchg
xor
pop
jl
and
lret
push
fxtract
outsb
jle
out
jbe
jle
sahf
stc
add
aas
lock
fcmovne
adc
cmp
jbe
add
in
sub
cmpsb
adc
sbb
inc
out
iret
int
ss
dec
jo
and
mov
mov
mov
mov
add
aam
push
mov
mov
rolb
hlt
sbb
fsubrs
int
add
cmp
int
js
add
les
int
xchg
aam
out
mov
out
clc
lock
inc
aaa
push
xchg
ljmp
fsubl
jae
xchg
jo
fdivp
lret
pop
push
loope
clc
mov
dec
outsl
fs
jle
test
and
and
addr16
mov
insb
out
inc
out
out
xchg
cmp
orl
js
out
out
shr
add
orb
out
inc
es
sub
and
dec
out
out
addr16
pop
xchg
or
mov
andb
cmpsb
add
cmpsl
pop
fdivp
lods
fs
cmp
jae
sbb
jge
insb
xor
data16
cwtl
ss
jge
push
mov
lret
sbb
divb
mov
std
insb
outsb
pop
cmpsb
jl
mov
push
mov
lret
sbb
sbb
and
add
out
mov
add
scas
adc
ret
adc
or
test
pop
push
ljmp
mov
mov
iret
in
mov
inc
mov
mov
hlt
sub
int
stc
jg
shrl
jae
jae
mov
mov
xor
adc
jecxz
rclb
push
sbb
pop
mov
cmp
test
sub
mov
mov
outsl
sub
xorb
enter
movsl
and
adc
out
ss
mov
mov
cmp
scas
cmp
add
sahf
pop
pop
jbe
test
push
test
in
jnp
cmp
mov
fwait
cmp
scas
fucomi
adc
int
int
xchg
sub
and
in
or
push
adc
mov
repnz
and
push
ror
testl
xchg
div
or
divl
test
aaa
mov
inc
sbb
pop
clc
out
mov
aad
call
aaa
js
popf
pop
inc
push
or
fwait
fwait
fwait
push
cmc
negb
ljmp
push
jnp
subb
xor
rcrl
clc
mov
sbb
fmull
mov
ret
dec
jnp
or
pushf
fs
test
jmp
fistl
rcrl
fs
out
out
xchg
inc
dec
adc
xlat
jmp
iret
out
inc
aaa
inc
aad
mov
test
add
popl
adc
out
jno
add
push
cltd
stos
movsl
mov
inc
mov
dec
cmp
rolb
lcall
bound
testb
loopne
ljmp
jl
sbb
mov
sub
xor
and
jb
idivb
xor
sub
sub
xchg
data16
out
out
push
mov
sbb
pop
cmp
adc
jae
iret
cmpl
add
jo
and
incb
mov
mov
cmpsb
insb
add
adc
fdivrs
clc
jnp
jbe
cmp
lcall
iret
push
push
popf
jae
sti
fmull
rol
adc
jg
pop
xchg
cmp
out
fbld
cmpsb
clc
mov
push
xchg
push
mov
out
fs
lods
xor
mov
out
push
aad
pop
test
outsb
outsb
outsb
outsb
dec
int3
fdivrl
jae
jl
push
dec
int3
test
sbb
pop
out
lcall
imul
test
cmp
das
ja
adc
mov
shll
les
out
adc
and
inc
test
and
lret
pusha
mov
outsb
lahf
mov
add
sbb
les
mov
neg
jp
pop
cli
dec
rcrb
lahf
fcmovne
out
scas
insb
jb
add
test
sbb
std
insb
outsb
in
inc
inc
cmp
xchg
stos
mov
mov
sbb
push
out
testb
addr16
sahf
cmp
addr16
out
jno
out
mov
sbb
sbb
cli
jge
lea
xor
jle
outsb
outsb
outsb
outsb
and
push
mov
test
out
mov
outsb
outsb
cltd
and
inc
cltd
inc
mov
hlt
subb
popf
mov
inc
push
cmc
fstps
nop
or
mov
dec
loop
testl
pushf
lds
jne
xchg
pushf
pop
mov
hlt
cs
loopne
mov
jo
dec
lea
xchg
jl
jnp
arpl
push
test
xchg
shll
mov
mov
pop
icebp
jae
jae
pop
ret
push
xchg
movsl
mov
xor
jae
gs
lahf
jbe
sub
int
mov
jns
mov
pop
mov
lods
aas
inc
out
popl
mov
adc
dec
int
stos
insl
int
es
sti
ss
add
mov
mov
pop
lock
addb
push
fsub
imul
rcl
sub
xor
push
gs
jb
cltd
fiaddl
lock
lea
js
jl
dec
gs
jge
adc
sti
dec
js
push
mov
dec
xchg
or
mov
in
sub
das
loop
fs
adc
pusha
jne
out
mov
xchg
xlat
push
fidivs
es
aam
fcmovne
out
lods
lcall
in
push
pop
inc
xchg
ds
fwait
and
inc
fisubl
cmp
mov
dec
sbb
mov
cmpsl
movsb
mov
mov
cmp
cld
loop
into
aad
jge
mov
out
dec
cmp
mov
cli
cli
jge
ret
mov
mov
imul
pop
popa
cmp
arpl
adc
int
in
notl
mov
fcmovne
out
push
loopne
mov
lods
out
lahf
int
add
xor
leave
mov
push
out
into
sbb
mov
push
out
ret
cmpsb
adc
aaa
pop
jl
out
or
loop
shrl
aaa
aaa
das
dec
wbinvd
pusha
add
xlat
ret
mov
aaa
aaa
aaa
bnd
and
jb
pop
imul
sbb
outsb
outsb
outsb
rcrb
xor
pushf
in
outsl
hlt
out
and
pop
inc
or
dec
inc
aas
add
mov
mov
sbb
lahf
int
js
aam
and
xchg
insl
add
pop
sub
cs
adc
mov
ss
fnsave
adc
mov
mov
mov
test
scas
sbb
inc
gs
mov
jge
fisttpl
fwait
push
jo
repnz
rol
addr16
inc
jmp
data16
vmread
cltd
add
adc
out
cli
fdivrl
rcrb
mov
xor
sbb
pushf
testb
pop
dec
mov
out
out
xchg
fsts
mov
cmp
clc
aaa
adc
out
out
pop
mov
pop
aam
and
mov
int3
mov
and
rclb
push
cld
jg
mov
pop
add
mov
rcrl
fwait
pop
push
incb
xchg
int
push
sub
add
and
add
pop
mov
stos
mov
clc
fdivrl
cli
ficompl
fwait
in
lods
push
sti
fsubrl
lods
ffreep
xchg
and
jae
inc
dec
sbb
js
repz
out
add
xchg
jp
inc
lahf
fbld
jae
jecxz
mov
xorl
add
icebp
jge
mov
xchg
repz
or
and
inc
cld
cmp
aaa
aam
std
pop
pop
jb
pop
and
and
pop
ljmp
shrb
sub
ds
fisttpl
in
addr16
cmpsl
into
xchg
fwait
xchg
or
jb
and
test
mov
int
mov
cmc
inc
sub
xor
fdivrl
shlb
jo
daa
loop
enter
fmull
xor
inc
mov
clc
jae
jae
lock
sbb
xor
into
pop
jae
jae
dec
sbb
push
push
push
mov
daa
adc
cmp
mov
ja
out
mov
jecxz
mov
repnz
icebp
fcom
cmp
add
pop
sub
aaa
mov
aam
popf
rcrl
pop
subl
ret
aaa
aaa
aaa
aaa
cmp
jo
lods
xchg
rcr
push
aaa
aaa
aaa
mov
cwtl
and
mov
hlt
cmpb
xor
cli
aas
mov
jge
cld
dec
push
fsubr
int3
js
or
imul
lahf
xchg
adc
xor
in
mov
mov
jmp
cli
rorl
jl
movsb
ret
outsl
add
pop
je
iret
in
sar
pushf
out
pop
inc
mov
and
mov
pop
imul
push
sub
or
es
jo
xor
aaa
aaa
aaa
mov
cmp
fdivs
jle
out
mov
xorl
pop
xchg
sbb
adc
enter
xor
out
add
test
sti
aaa
jb
sub
cmp
scas
mov
loope
addb
arpl
pop
addr16
stos
fiadds
out
dec
cli
lret
fldl
test
and
cld
dec
cli
and
push
dec
inc
adc
fdivl
int
dec
sub
sbb
ret
stos
push
fdivs
mov
mov
fimuls
jae
dec
add
pcmpgtw
push
inc
es
out
divb
ficompl
jo
out
out
lds
mov
adc
out
inc
mov
push
in
jae
push
or
addr16
push
aas
sahf
scas
ds
mov
jbe
int3
int
arpl
out
cmp
enter
add
into
cmpsl
dec
add
dec
je
adc
ljmp
shl
rcrb
fsub
pop
and
iret
int
mov
mov
rcll
or
fdivrl
adc
and
pusha
cmpsb
mov
faddl
push
scas
jae
push
je
in
test
xor
sbb
aam
mov
mov
ds
fdivrl
mov
hlt
fstpl
adc
sti
flds
enter
xchg
aad
mov
out
lahf
xor
call
pop
out
notl
out
pop
fsubs
xchg
mov
int
in
fwait
mov
in
mov
stos
fwait
repnz
push
add
lahf
int
xor
loope
and
inc
hlt
jmp
in
jae
sti
fmull
jp
mov
cmp
je
adc
push
rcr
jge
mov
jae
xor
adc
cmc
mov
push
test
lods
xor
cli
fnstcw
test
int
int
addr16
in
bound
out
stos
lahf
and
push
je
test
pop
adc
int
iret
out
inc
cli
sbb
cwtl
pop
mul
cmp
iret
int
lcall
enter
faddl
jle
inc
rol
and
jmp
mov
xlat
out
pushl
mov
dec
xchg
pop
mov
pop
mov
adc
cmpsb
fmuls
adc
inc
insb
sarl
loope
icebp
fcompl
and
dec
or
ja
cld
push
jo
inc
sbb
aam
int
sbb
mov
inc
popf
notl
int
sbb
repnz
int
int
lods
inc
ficompl
stos
and
cmpsl
jle
int
pop
into
xchg
andb
call
scas
clc
mov
rcr
in
imul
outsb
rcrb
mov
aas
mov
cli
andb
and
pop
mov
sti
insb
aas
fstpt
mov
mov
adc
fcmovnb
int
mov
mov
std
cld
pop
inc
int
insl
sahf
outsl
jmp
jmp
push
clc
dec
sbb
ret
and
pop
pop
cmp
cs
mov
cmp
xor
inc
arpl
mov
or
xchg
ret
pop
inc
xchg
icebp
mov
cli
push
lea
xlat
mov
fsubrs
xor
xchg
sahf
enter
jmp
clc
jbe
stos
testl
out
jg
sbb
pop
movl
jae
ror
and
popf
xchg
add
jae
jae
pop
or
mov
movd
jb
repnz
xor
andb
push
loopne
xlat
jns
sub
les
mov
inc
jle
pop
xor
sarb
xor
sbb
sbb
mov
sub
movsl
jbe
sub
aad
or
test
outsb
out
adc
clc
mov
cmp
addl
sub
xchg
in
repz
arpl
sahf
fwait
fwait
add
mov
xchg
push
lahf
int
in
lea
and
push
repz
add
aaa
mov
cmp
test
lahf
cli
int
inc
pop
enter
or
icebp
mov
jp
fdivrl
lahf
adc
sbbb
fadd
and
cs
in
out
fldl
out
stos
scas
stc
adc
dec
addr16
pop
out
clc
sti
lret
jae
in
xchg
sub
das
add
mov
iret
sbb
test
dec
or
iret
loopne
mov
outsb
mov
in
popf
fbstp
sti
add
inc
push
push
pushf
mov
jae
mov
add
sbb
aaa
mov
or
sarb
inc
xor
aaa
aaa
aaa
ds
daa
and
and
mov
mov
jbe
sbb
sahf
aas
cli
fsub
lahf
outsl
lcall
ret
mov
xchg
icebp
in
shlb
cmp
dec
push
mov
cmp
jle
int
push
or
gs
rorb
push
add
fwait
add
add
sub
sub
push
lahf
ret
xchg
lcall
fcompl
add
sub
jae
jae
lret
lret
insb
stc
jle
stos
test
jae
pop
add
jge
sbb
test
mov
cld
jns
mov
add
xchg
clc
insb
mov
jbe
in
dec
jecxz
repnz
jle
mov
sbb
jno
filds
clc
mov
movsb
lods
and
clc
loop
gs
outsb
adc
sahf
repz
fcmovne
jbe
std
xor
std
mov
xchg
jg
pop
push
ds
fwait
xor
sbb
shl
fs
cmpsb
int
mov
aaa
push
cmp
ljmp
ss
cmp
aaa
sub
addr16
movsb
cmc
jo
fdivp
jmp
and
out
in
mov
mov
out
inc
ret
sahf
or
sbb
out
mov
mov
repz
out
pop
arpl
imul
pop
pop
jle
jne
push
lahf
fwait
fwait
pop
sbb
inc
sbb
sbb
shlb
mov
push
test
sahf
ds
push
add
je
das
xchg
inc
add
inc
insl
out
cmp
cltd
shrb
je
xor
out
out
inc
mov
je
sub
sbb
or
pop
imul
push
scas
add
sub
sbb
out
out
push
rol
pushf
stos
jecxz
stc
pop
out
cmp
push
cwtl
push
gs
out
push
int
int
stos
xor
movb
xor
sahf
lea
adc
fistl
rolb
ss
dec
icebp
push
mov
add
lahf
fldt
dec
sbbb
sbb
test
mov
and
or
jbe
gs
push
or
dec
data16
inc
inc
outsl
xchg
lahf
fstpt
or
inc
ljmp
jl
outsb
outsb
outsb
outsb
test
jmp
pushf
fcmovnb
xchg
mov
outsb
outsb
outsb
outsb
out
cmp
mov
outsb
outsb
outsb
xchg
bound
mov
test
jmp
movsl
cmp
jle
mov
in
div
sar
inc
andl
in
bound
jecxz
cs
xchg
shlb
sub
loop
push
sub
xchg
or
fists
lret
adc
jl
nop
inc
mov
mov
jle
sub
pushf
cmp
sub
push
sub
ds
mov
adc
adc
push
xchg
sub
out
out
cmpsl
jne
pop
push
push
mov
sbb
icebp
js
jge
nop
int3
fiadds
push
movsb
mov
aad
aad
add
pop
jmp
mov
cmp
or
pushl
mov
loopne
cs
iret
jbe
cmp
je
inc
movsl
mov
mov
insl
lret
test
fcmovne
aam
push
subl
adc
shlb
push
mov
mov
loope
jp
xchg
gs
mov
jno
mov
loope
or
rolb
cld
sub
fnstenv
dec
mov
hlt
push
mov
add
stos
int3
push
shl
jae
jae
aam
lods
mov
sbb
iret
pop
pop
pop
adc
cld
jo
mov
xchg
fidivs
xor
sbb
dec
inc
xchg
shl
mov
int
int
xor
mov
stos
xor
rolb
xchg
pop
lock
inc
cmpsb
pop
fwait
sub
mov
out
cs
hlt
sbb
fcmovne
out
pop
adc
jo
mov
or
fwait
fwait
fwait
fwait
dec
cmp
loop
jo
and
fwait
fwait
fwait
fwait
push
js
jbe
mov
shll
outsb
cmp
inc
imull
fwait
fwait
fwait
fwait
jge
mov
push
stos
xlat
pop
aaa
ja
sahf
cwtl
and
sbb
iret
add
aaa
sub
sbb
ud1
addr16
out
ds
data16
mov
stos
test
or
addr16
xchg
mov
mov
mov
ret
jl
lods
daa
cltd
pop
test
dec
sub
mov
ja
aas
stos
jle
jl
cmp
loope
fnsave
mov
mov
stc
jmp
push
dec
jmp
repz
mov
roll
mov
scas
in
mov
dec
and
fs
jp
dec
icebp
sbb
das
add
pushf
jae
mov
mov
xor
jae
sub
das
js
push
mov
mov
jge
mov
out
fst
jmp
mov
cld
inc
pusha
enter
adc
testl
jno
outsl
mov
mov
insb
sbb
mov
inc
out
xor
rolb
bound
fdivs
cltd
xor
mov
jg
or
push
mov
fdiv
mov
ds
push
xchg
lahf
movb
test
fprem1
sbb
xlat
jno
inc
int
int
cmp
xchg
xorb
data16
int
dec
cmp
lret
in
out
imul
sub
push
andb
ret
dec
mov
inc
sub
ret
mov
test
fdivrl
call
or
jae
push
pop
stos
push
mov
cld
bswap
int
in
mov
repz
mov
or
xor
push
sub
jbe
sbbb
or
mov
in
xlat
sbb
sub
dec
loop
dec
pop
sbb
xor
mov
mov
adc
arpl
into
stc
jge
fwait
fwait
fwait
imul
cmpsb
clc
cld
ret
mov
mov
repz
xchg
gs
pop
or
dec
fdiv
jae
dec
shlb
adc
cmpsl
scas
xor
daa
lods
addr16
sbb
out
iret
insl
push
cmc
inc
fimuls
adc
test
out
popf
cmp
lret
sbb
inc
shll
xchg
rolb
cmp
iret
testb
test
orl
xor
fwait
fwait
fwait
jo
cmp
aam
gs
xor
cwtl
ja
cmp
fwait
mov
add
icebp
mov
xchg
fwait
sbb
cli
mov
mov
ficomps
int
in
add
or
push
rcll
push
dec
xchg
rorb
lcall
iret
or
test
stos
inc
fcoml
cld
scas
test
add
rolb
aaa
mov
test
push
js
clc
mov
aam
pop
jns
push
cmp
lahf
lods
in
lds
in
sbb
icebp
jnp
jne
push
push
mov
int
dec
or
lcall
lock
sub
push
pusha
sub
arpl
push
xchg
or
das
push
loopne
jle
cli
or
mov
xchg
mov
fldenv
bound
mov
fisubrl
adc
inc
inc
std
jle
mov
sbb
mov
sbb
in
bnd
test
jno
or
xchg
decb
mov
mov
add
and
les
sti
leave
test
pop
outsb
popa
into
rorb
or
jno
ds
pop
mov
movsb
ret
sahf
mov
fidivl
or
stc
fnstenv
push
push
mov
mov
prefetchnta
loop
adc
xlat
mov
and
fcmovbe
aaa
mov
int
lds
adc
mov
icebp
cwtl
dec
aaa
aaa
aaa
aaa
mov
and
mov
std
stc
or
aaa
xchg
sahf
cmp
xchg
pop
or
mov
or
cli
mov
jbe
jae
cmc
in
mov
mov
sbb
rolb
in
add
jg
adc
sbb
aaa
or
and
test
sbb
lds
mov
mov
aaa
aaa
aaa
aaa
repz
inc
frstor
fcoms
aaa
aaa
aaa
aaa
fwait
js
sub
dec
nop
or
aaa
aaa
aaa
aaa
in
sbb
dec
jnp
sti
jae
scas
cmc
sarl
aaa
push
or
fidivrs
ret
pop
aam
out
hlt
mov
pop
into
fnclex
adc
mov
popa
int
sbb
jb
sbb
sbb
xchg
outsl
lcall
or
cltd
sti
fnstcw
subl
inc
push
jle
sbb
mov
aam
test
sbb
mov
cltd
psubq
aaa
pop
dec
fadd
pop
lods
js
and
dec
lahf
in
sarl
mov
addr16
fdivl
repnz
jae,pn
cmp
sub
lock
xchg
fwait
mov
sarb
fwait
fwait
fwait
fwait
jle
pop
adc
ja
pop
cmp
sahf
out
xchg
andb
cmc
shlb
inc
scas
popf
rclb
xchg
jg
jle
xor
ljmp
les
hlt
mov
fistpl
inc
mov
fcompl
xchg
in
push
sub
mov
outsl
loop
nop
cmp
out
or
jmp
inc
ffree
xchg
or
pop
shlb
and
testb
aaa
aaa
aaa
imul
jmp
leave
jmp
fwait
or
aaa
xchg
loopne
call
push
inc
sbb
fwait
add
stos
fs
mov
lahf
jae
iret
testb
mov
inc
cwtl
push
rorb
jnp
sbb
mov
sbb
inc
mov
mov
into
mov
das
or
xchg
mov
pop
movsb
outsb
nop
mov
scas
movsl
fsubrl
jnp
out
xor
into
pop
in
insb
aam
mov
filds
mov
fidivl
cmp
adc
sti
cmp
stos
shrb
ror
cmp
inc
je
pop
orb
add
mov
jnp
outsb
sbb
mov
bound
adc
bound
mov
jbe
sbb
les
xchg
mov
je
jecxz
jle
movsl
jnp
fidivl
not
dec
or
scas
in
test
mov
dec
jbe
in
and
fstps
iret
sub
xor
xor
fwait
cmp
es
inc
ret
cmpsb
inc
pop
mov
jmp
js
mov
ret
scas
clc
push
cmp
pop
and
add
mov
adc
test
arpl
mov
daa
cmc
jne
fs
test
adc
fdivrl
jno
insb
pop
rolb
inc
shlb
pop
lock
clc
sub
test
repz
add
outsb
outsb
outsb
outsb
je
sbb
inc
or
inc
ss
lret
je
outsl
push
pop
hlt
mov
dec
outsb
outsb
outsb
outsb
lret
jecxz
xchg
inc
mov
outsb
sub
jnp
pusha
mov
fcomip
stc
mov
add
cmp
mov
mov
outsb
cs
xchg
or
addb
push
out
dec
clc
dec
int3
jl
mov
out
out
cmp
dec
in
nop
es
sbb
fidivrs
cwtl
nop
cmp
cmp
insb
push
jmp
sbbl
das
loop
pop
xor
aaa
aaa
aaa
dec
add
xor
jmp
aas
test
and
pop
jp
int
and
pop
jl
mov
sahf
or
dec
mov
jo
xor
pop
jp
push
sbb
cmp
add
imul
sahf
in
push
add
lea
fstpt
insb
dec
lods
adc
addr16
out
xchg
adc
cmp
adc
xorb
fwait
fwait
fwait
fwait
adc
out
and
movsl
inc
aam
popf
out
aas
fwait
fwait
fwait
dec
mov
stc
fs
insl
jge
std
insb
bound
xchg
push
cli
cmp
dec
loope
stos
lock
ss
lods
cmp
aaa
mov
out
gs
xchg
shlb
or
iret
out
in
sbb
sub
and
cwtl
push
lea
jae
mov
pop
xchg
jge
mov
aas
sbb
outsb
sbb
test
lock
mov
lods
push
shlb
dec
dec
mov
mov
adc
aaa
adcl
dec
call
mov
test
ds
push
sub
in
sub
aaa
aaa
aaa
sahf
adc
js
mov
fsubl
je
movsb
or
aas
mov
fprem
rcl
andb
or
fisttpl
clc
dec
mov
adc
pop
or
outsb
outsb
es
scas
lahf
xchg
in
xor
pop
insl
mov
outsb
outsb
adc
dec
cld
mov
sbb
movsb
or
fyl2x
movsl
mov
scas
mov
jle
xadd
xchg
mov
lods
jns
test
jle
cmovae
enter
push
int
lods
xchg
mov
add
push
xor
js
mov
pop
cmpb
push
add
push
push
push
xchg
test
jmp
mov
pop
adc
fclex
out
mov
imul
pop
xchg
jecxz
xorb
adc
clc
sub
or
cwtl
mov
sub
lods
insb
and
cmc
xchg
stos
cwtl
pushf
pop
std
insb
outsb
fisubl
out
adc
cmc
pop
lock
int
mov
fstl
mov
pop
dec
xchg
mov
out
out
mov
mov
xchg
adc
mov
pop
adc
add
cmp
bound
mov
pop
lock
sub
mov
cwtl
sar
mov
leave
pusha
jnp
faddp
aam
mov
push
mov
cmpsb
insb
push
clc
out
pop
adc
mulb
mov
shll
inc
cld
sub
or
lahf
int3
pop
out
fdivl
xchg
mov
add
call
push
lock
cmpb
scas
fadds
loopne
cmpsb
mov
test
mov
mov
fs
insb
adc
mov
clc
cmp
addr16
xor
cwtl
lret
test
jns
fisubs
fcmove
addr16
jp
cli
in
cmpsb
or
out
sbb
cmpsl
dec
daa
inc
loope
bound
ret
mov
dec
std
lahf
inc
mov
test
mov
mov
and
sti
mov
pop
add
into
cltd
ret
sub
sbb
gs
int
out
jle
iret
int3
jmp
cmp
addr16
xchg
push
jns
movsb
outsl
inc
jo
repz
adc
push
xchg
pop
or
scas
or
in
xlat
sub
cmpsl
mov
mov
int
roll
xchg
cmp
pop
mov
cltd
aad
aaa
aaa
aaa
sbb
pop
add
out
fmuls
mov
fdivrl
stos
mov
popa
popa
fst
stos
bound
jae
into
in
or
push
les
into
in
lea
push
in
hlt
xor
xor
pushf
mov
push
test
mov
imul
sti
iret
sub
sti
dec
cmp
ja
and
aas
filds
ret
leave
pushw
lds
pop
iret
int
mov
xlat
xchg
lods
outsl
aas
fwait
sub
add
jmp
cltd
mov
in
jle
mov
mov
clc
mov
addr16
notb
cmp
or
insb
outsb
outsb
adc
call
test
clc
ss
out
out
popf
lods
xlat
sahf
lods
stos
add
adc
sbb
adc
or
push
sbb
outsb
outsb
outsb
xchg
push
pop
les
mov
jns
mov
jecxz
std
insb
into
aaa
mov
dec
cli
lahf
dec
loope
cmc
scas
push
jle
shr
aaa
aaa
mov
out
inc
ljmp
roll
fnstcw
mov
or
lcall
pushf
pop
mov
ss
cmp
bound
aaa
push
pop
jb
push
ds
mov
insl
mov
icebp
std
or
mov
or
cmp
mov
push
stos
loope
ficoml
je
shrb
fsubl
shld
sti
push
xchg
lret
jno
pop
pushf
fimuls
xlat
addr16
imul
leave
mov
pop
sub
and
int3
fdivr
outsl
jecxz
sub
stc
enter
adc
inc
xor
mov
out
divb
mov
adc
out
arpl
xchg
out
hlt
dec
or
push
mov
inc
xchg
outsl
adc
mov
cmpsl
decb
jns
outsb
outsb
outsb
outsb
fildll
icebp
test
cmp
insb
data16
andb
aaa
mov
andb
and
movsb
inc
jecxz
out
dec
dec
clc
cld
test
push
js
cmpsb
iret
out
notb
mov
adc
test
out
inc
pop
pop
imul
adc
mov
out
in
mov
or
idivb
cld
stos
daa
dec
adc
into
push
xor
rclb
loop
and
addr16
jmp
outsb
outsb
outsb
out
gs
aas
push
ret
iret
testb
cmp
push
mov
jae
inc
les
jae
rcll
fmulp
cltd
lods
out
jecxz
aam
movsl
std
adc
lods
in
out
outsb
in
push
js
pop
push
xor
aaa
mov
xchg
fistps
sbb
push
add
pushf
rorb
sub
aaa
aaa
aaa
inc
stc
xlat
repz
scas
xor
scas
jns
ret
ss
test
xchg
pushf
in
xor
mov
cld
insb
out
clc
mov
movsb
aas
add
dec
inc
push
les
js
add
insb
je
mov
mov
stos
arpl
dec
repnz
stos
mov
lret
pop
scas
xor
cpuid
movsb
adc
add
xor
pop
insl
add
les
mov
out
pop
jmp
rolb
jae
enter
shr
mov
and
ss
out
xchg
pushf
sbb
xor
cmp
pop
sub
pop
das
test
lcall
fmul
int
int
sub
das
jne
push
es
ret
mov
int
int
loope
add
dec
sbb
jg
mov
out
scas
lock
mov
push
push
or
fxch
scas
jbe
cmp
or
mov
and
xlat
mov
vpcmpeqd
nop
shlb
out
jne
xchg
jnp
test
pushl
mov
ret
lock
adc
aaa
loopne
subl
call
imul
sti
push
cmpsb
gs
outsb
outsb
out
fiaddl
cltd
push
add
mov
cld
insb
push
je
mov
push
mov
faddp
mov
aaa
aaa
aaa
popa
scas
sub
mov
out
cmp
adc
inc
in
lock
orl
or
lahf
adc
push
mov
das
lret
adcl
jl
jnp
mov
or
fisttpll
iret
out
out
xchg
add
jmp
fdivr
push
adc
ja
rcr
mov
int
test
sbb
add
jp
ds
push
cwtl
mov
xchg
dec
rclb
mov
pushf
adc
ret
pop
cld
jo
pop
push
adc
sbb
jo
outsl
dec
je
pop
sbb
out
notb
mov
ret
xchg
iret
out
jge
pop
sub
sbb
ret
addl
les
jae
ret
retw
rcrl
or
loop
jae
ja
xor
mov
add
fisttpl
cltd
adc
mov
sub
push
aaa
aaa
push
cmp
ljmp
fs
inc
dec
push
sbb
push
jl
ss
aaa
addr16
fisttpll
mov
js
xchg
mov
cmp
sub
push
xchg
fcomi
add
loope
or
sub
int
inc
inc
mov
jns
fstp
out
push
push
or
or
sahf
push
push
sub
fcmovne
sub
xchg
xor
mov
dec
xor
outsb
outsb
aas
xchg
rorb
popa
sbb
inc
lret
fidivl
push
jge
or
and
sbb
sub
add
aaa
aaa
aaa
aas
push
lret
sub
mov
jge
xor
scas
aad
xor
fwait
or
cmpsl
pmuludq
cwtl
mov
std
insb
fidivrl
sbb
sbb
pusha
push
adc
adc
adc
push
add
mov
sarl
push
adc
add
fwait
add
rcll
jmp
into
ficoml
push
shlb
shlb
incb
clc
jp
aaa
mov
int
addr16
pusha
lahf
or
sbb
test
int
int
dec
jne
mov
mov
adc
cmp
int
int
mov
sub
mov
inc
stos
iret
int
jge
adc
gs
sbb
jae
dec
das
aad
imul
mov
fs
imul
push
ds
cmp
ds
insb
push
inc
imul
sarb
mov
xor
dec
mov
push
pop
out
jne
mov
mov
test
mov
iret
out
je
clc
sar
sub
cwtl
push
cmp
outsb
aas
fwait
fwait
ss
jns
addl
mov
dec
sub
daa
loope
iret
idivb
pop
in
add
dec
sahf
fwait
das
test
pop
jbe
pushl
pop
std
inc
fnstenv
adc
push
sbb
aaa
aaa
push
xor
xor
and
aaa
mov
sahf
mulb
cli
bound
ja
inc
out
out
out
mov
cmpsb
cmp
pop
and
cltd
decl
ljmp
cmc
jnp
ss
test
or
ss
fcoms
mov
mov
ret
les
mov
arpl
stos
push
stc
pop
and
in
imul
cli
jbe
lret
fwait
sub
dec
pop
pop
cs
push
lods
outsl
mov
fwait
data16
jne
jo
into
rcr
or
mov
add
into
mov
aas
dec
das
test
fdivrl
or
out
ja
mov
in
lret
clc
fnstcw
cld
jb
addr16
int
jmp
jecxz
mov
or
xchg
mov
int
mov
test
ss
aaa
aaa
aaa
aaa
movsb
xchg
iret
cmc
push
shlb
aaa
aaa
sub
daa
popa
mov
sti
jge
loope
iret
inc
test
mov
adc
and
xchg
sub
pop
add
xchg
pushl
pop
mov
neg
clc
push
or
rorl
decb
sub
enter
push
pop
hlt
mov
jecxz
bound
dec
ret
filds
int3
push
out
mov
mov
stc
add
lret
std
insb
inc
pop
cmp
test
pop
setl
push
lcall
or
xchg
out
into
sbb
pop
mov
inc
lahf
fwait
fwait
mov
inc
call
ret
int
push
roll
scas
popa
lds
int
pushf
pop
pop
leave
jnp
mov
movsb
out
out
sar
decl
adc
enter
lds
mov
sub
js
jae
jae
mov
fstl
lahf
push
xor
xor
mov
imul
lods
jae
into
jnp
aaa
aaa
aaa
aaa
das
sar
mov
movsl
cld
fdivrl
aaa
inc
pmulhuw
xlat
js
int
sti
fsubl
clc
dec
ja
jo
cwtl
adc
or
ret
push
in
mov
inc
dec
jp
sahf
pushf
nop
adc
lahf
int
sti
add
inc
fimuls
push
fwait
xor
ss
mov
insb
cmpsl
mov
insl
push
idiv
dec
and
fmull
stos
cmpsb
out
mov
int
dec
ljmp
inc
repnz
sarl
aaa
mov
int
push
cli
aas
sarl
bound
adc
aaa
aaa
aaa
adc
jbe
push
insb
adc
cli
xor
pop
aaa
repz
dec
mov
in
cmp
out
jno
cmp
aas
push
xchg
les
lahf
int
es
mull
pop
ljmp
inc
jb
push
adcb
inc
mov
mov
aam
adc
sbb
int
fcompl
mov
xchg
pop
inc
jb
push
mov
out
clc
ja
fistpll
xor
cli
xchg
ret
dec
sbb
outsb
ret
fsubrs
pop
mov
fmull
push
xor
jae
jecxz
clc
out
inc
js
test
ljmp
shlb
dec
idivl
push
bound
flds
mov
enter
outsb
adc
mov
xchg
adc
dec
sbb
in
out
mov
sbb
or
mov
adc
xor
jle
dec
mov
js
ret
push
ljmp
int
sbb
and
fwait
dec
cmc
cmp
xlat
and
das
mov
stc
or
xor
loopnew
sub
sbb
xlat
les
fists
imull
xchg
push
andb
fcmovnu
sbb
out
push
ret
repnz
adc
outsb
outsb
outsb
inc
aaa
fadds
xchg
out
xor
outsb
ret
jge
push
add
clc
cmpsl
mov
inc
loopne
jbe
jae
inc
loope
aaa
or
inc
push
mov
jae
jae
out
stos
out
xor
subb
jae
jae
push
loop
shrb
pop
cmpsl
mov
mov
push
pop
xchg
mov
dec
cmp
inc
mov
pop
call
sbb
xchg
push
mov
outsl
or
xchg
push
cmp
loopne
rcl
sbbb
sahf
in
sets
and
icebp
scas
or
ud1
fstl
in
iret
aad
cmp
mov
sub
enter
mov
divb
mov
call
out
imul
hlt
mov
aaa
mov
xor
dec
inc
loop
cli
ds
and
pusha
cld
mov
les
test
out
out
insb
xchg
cmp
jb
mov
out
mov
pop
pop
and
mov
lods
jns
out
out
sub
leave
arpl
mov
lahf
pop
ret
in
stos
fistpl
outsb
push
or
adc
push
xor
addr16
cld
sub
aas
add
and
pop
es
add
push
rcrb
sub
fwait
inc
xchg
iret
in
neg
test
pop
push
mov
stos
ds
sbb
adc
fcomps
jl
pop
out
clc
sbb
jge
test
or
and
push
mov
add
adc
in
fwait
fwait
stos
jle
icebp
mov
xor
fwait
fwait
inc
xor
shr
mov
mov
lret
aam
cmp
jno
sahf
decb
and
out
addb
jb
mov
push
inc
pop
dec
iret
aas
jle
xchg
or
es
dec
mov
sbb
scas
cli
insb
out
js
icebp
hlt
push
jp
mov
icebp
sbb
iret
push
sub
outsb
outsb
push
clc
insb
adc
sarb
clc
jge
leave
sub
jnp
pop
cmpsl
or
aam
adc
jae
xchg
ret
push
mov
sub
dec
lods
shrb
fmull
mov
call
mov
rolb
ja
pop
inc
pusha
mov
cs
jle
fisubrs
mov
je
jle
out
aas
bnd
mov
jb
test
jp
rolb
sbb
mov
int3
mov
rcr
das
test
dec
mov
fdivrl
or
icebp
jge
adc
sti
mov
andb
ss
mov
in
pop
mov
or
test
xor
or
xchg
ds
aaa
aaa
insb
cmp
sub
push
cld
fistps
sub
mov
cmp
je
mov
mov
dec
mov
xor
cmp
les
addr16
out
mov
push
popf
shrl
sbb
and
mov
orb
jo
sarb
es
xchg
push
inc
mov
lock
jle
sbb
dec
dec
xchg
bswap
insb
push
and
or
mov
loopne
jno
mov
pop
push
lret
inc
fadd
or
mov
cld
nop
xor
push
push
loopne
jl
xchg
test
xchg
shrb
movsb
lods
loopnew,pt
mov
inc
sbb
jecxz
adc
pop
mov
jge
leavew
das
inc
stc
test
pop
push
mov
data16
test
or
int
or
mov
jne
std
pop
inc
adc
int3
or
jne
ss
or
mov
sbb
les
adc
adc
shll
pop
sub
mov
movsl
adc
stos
xchg
rorl
mov
and
cmp
jns
fwait
fwait
fwait
dec
test
sbb
fs
adc
js
push
hlt
in
jnp
mov
sbb
clc
add
cmc
int
int
or
push
mov
int
int
mov
xchg
pop
fprem
sub
int
int
adc
daa
scas
and
inc
push
out
pop
xchg
pop
iret
int
jle
ja
jecxz
mov
adc
rcr
mov
and
int3
sub
or
movb
loope
out
out
aad
and
scas
xor
outsb
outsb
outsb
xchg
sub
add
popf
lret
jle
std
insb
fistl
pop
and
jae
mov
add
or
lcall
mov
xchg
jae
iret
les
sarb
filds
shlb
neg
sbb
fcmovbe
or
aaa
mov
test
out
in
mov
std
add
mov
loope
int
fs
xor
cmp
mov
inc
mov
imul
in
testl
insb
stos
add
lock
mov
fmull
lods
mov
in
testb
insb
sub
adc
out
out
and
filds
lds
jne
adcb
or
cmp
in
pop
icebp
mov
dec
xor
sar
sbb
in
mov
jo
sub
sub
mov
cld
mov
pop
sub
mov
jmp
aaa
aaa
aaa
aaa
std
call
lcall
inc
cmp
xlat
sbb
lods
aaa
icebp
idivb
stos
push
sbb
movsb
push
cmc
jmp
or
mov
insb
push
lcall
lea
fnstsw
fidivs
jae
test
or
imul
dec
clc
fdivrl
nop
hlt
or
lret
pop
cli
in
push
xchg
lock
adc
mov
aaa
aaa
aaa
xor
xor
les
aaa
aaa
je
xchg
add
inc
hlt
idivb
fwait
fwait
fwait
or
pusha
fs
fs
sub
fwait
int3
dec
xor
xor
jnp
jl
fmuls
shll
out
jae
cmp
push
clc
sbb
rclb
ss
fmull
ds
shl
inc
add
xor
jbe
jle
in
pop
pop
scas
insb
cwtl
push
cmp
push
push
jge
cmp
push
cmp
sbb
mov
and
sbb
xchg
mull
movsl
jae
xchg
jno
adc
outsb
cld
sub
test
mov
loope
sarl
fcomi
loopne
in
leave
mov
cltd
add
inc
or
adc
mov
outsb
pop
mov
shll
push
into
add
jl
or
jno
sub
cmp
dec
mov
push
cmp
cld
ret
mov
mov
arpl
xchg
push
or
dec
dec
cmp
mov
pop
addb
mov
lret
push
or
test
sti
js
outsb
js
iret
mulb
clc
xor
sbb
mov
outsb
outsb
lahf
xlat
mov
sahf
lret
jmp
push
lods
cmp
clc
insb
outsb
outsb
cmpsl
xor
inc
fdivp
dec
cmpsl
ja
jae
lret
mov
iret
cmp
les
jae
add
jmp
fistl
cmp
and
ret
jnp
cmp
addr16
xchg
jns
mov
insb
or
mov
insb
sti
xchg
hlt
jge
push
lret
jns
add
sub
iret
subb
pop
and
push
jg
aas
test
inc
adc
rorb
push
out
test
fistps
jmp
clc
pop
fstps
xchg
hlt
imul
push
dec
fs
pop
dec
add
sbb
push
dec
mov
std
test
int
pop
fists
setge
or
push
cmp
test
or
addr16
xlat
icebp
mov
aaa
jne
lock
jecxz
icebp
jmp
xchg
fwait
fwait
or
loopne
push
dec
ljmp
sub
test
add
xchg
mov
pop
ss
std
insb
bound
pop
xlat
pop
jo
sbb
mov
fwait
fwait
or
inc
pop
test
shlb
rorb
cmpsl
push
sub
loop
xchg
fdivrl
adc
aaa
jmp
sbb
inc
jae
jae
rorl
icebp
sbb
inc
cmp
aaa
mov
jne
and
cmp
sahf
popf
inc
dec
aad
aaa
aaa
aaa
inc
adc
mov
xor
ds
aaa
add
dec
negl
in
das
cmp
sub
in
pop
pop
mov
mov
aam
inc
pop
mov
inc
mov
jo
jbe
cli
insb
sub
in
std
push
sti
dec
lock
xchg
push
cmpsb
out
ret
mov
dec
cwtl
and
aad
out
pop
ror
xchg
jae
fs
pop
js
or
push
shlb
xor
lahf
fistpl
cmp
loopne
xor
mov
loopne
ret
movsl
xor
fcoms
mov
jbe
hlt
int
int
mov
push
pop
pop
xor
mov
int
push
inc
add
inc
ljmp
mov
fidivrs
and
or
out
mov
xchg
loopne
sub
out
cmp
in
mov
out
out
push
or
xor
mov
mov
mov
fwait
fwait
fwait
xchg
lods
js,pt
lock
xor
adc
fwait
fwait
fwait
fwait
push
push
dec
daa
push
mov
push
jl
popf
jp
xchg
rep
les
dec
jle
clc
jge
adc
loopne
cmp
cmp
ds
mov
data16
xor
and
mov
pop
lock
in
push
sub
ja
mov
adc
cmp
fstpt
jge
mov
in
xorb
lods
flds
out
por
mov
mov
les
or
loop
pop
mov
xor
cmp
mov
repnz
inc
aam
outsb
outsb
cs
ja
cmp
and
outsb
outsb
outsb
sbb
mov
lock
outsb
outsb
and
repnz
mov
push
mov
fisttpl
xchg
xor
out
pop
movsl
pop
xor
add
ret
in
mov
cmp
push
mov
jae
outsl
adc
aam
pop
cwtl
push
xor
jae
jae
loope
ds
shlb
addr16
andb
ret
arpl
pop
lock
dec
stos
inc
xchg
insl
push
ds
mov
inc
cmp
sarl
mov
fwait
fwait
mov
int3
jb
pop
sub
hlt
js
push
xor
xchg
mov
cmp
pusha
sbb
jae,pn
or
jbe
imul
aaa
mov
fsubrl
cmc
adc
xor
xchg
lods
pop
movsb
test
test
out
clc
int3
loop
inc
ss
ret
divb
je
movsb
inc
insb
outsb
outsb
outsb
dec
out
in
insb
fildll
nop
jb
xchg
mov
ljmp
xchg
ds
arpl
mov
xchg
push
lahf
int
int
inc
imul
sbb
adc
roll
mov
mov
lock
cmpsb
outsb
outsb
outsb
outsb
into
nop
push
and
stc
leave
dec
shl
push
outsb
outsb
jbe
add
cltd
es
aaa
addb
out
add
test
sbb
and
lahf
int
sahf
je
bound
jge
stos
mov
lock
mov
test
jb
inc
pop
adc
fsubl
imul
imul
lahf
in
cmp
jmp
xor
dec
xchg
ds
cltd
cmp
aaa
mov
out
sahf
push
lods
pop
mov
mov
sti
adc
stos
and
mov
ss
aaa
mov
or
cmp
adc
movsl
stc
push
jno
jg
xor
xor
jge
lods
fwait
hlt
add
sahf
in
js
dec
mov
shlb
ror
add
jb
add
into
pop
ds
int
pop
scas
outsb
nop
testb
mov
jl
mov
int
pop
test
mov
mov
fdivrl
adc
orps
cmp
cs
cmpsl
mov
and
add
sbb
adc
mov
and
js
inc
iret
jb
cmp
mov
push
adc
xor
movsl
stos
and
lret
add
sub
aaa
mov
sbb
cwtl
mov
rolb
jmp
outsl
jl
pop
cli
cmc
pop
movsb
aaa
lea
mov
fisubl
enter
mov
int3
mov
gs
test
adc
cmc
std
cmp
xchg
ret
dec
fwait
fwait
fwait
sub
pop
andb
push
int3
push
std
sbbb
jle
jmp
aaa
into
sub
mov
scas
iret
int3
cmp
xchg
or
jp
aaa
pavgw
out
mov
ret
mov
nop
mov
int
das
insb
lahf
inc
cs
in
dec
ret
js
ljmp
xorl
lods
adc
mov
cli
cmp
jmp
gs
xchg
mov
out
xor
push
add
jge
sub
sbb
fadd
fwait
fwait
or
das
cmpb
fiadds
dec
cmpsb
jl
adc
in
das
fwait
fwait
fwait
fwait
adc
mov
xor
fwait
fwait
out
out
jecxz
psllq
mov
inc
aam
dec
mov
movsb
dec
fisttpl
pop
out
mov
adc
push
movsb
les
fcmovne
out
mov
mov
sbb
iret
icebp
xchg
jne
adc
jp
roll
js
or
fwait
pop
loope
in
xchg
mov
std
gs
fwait
scas
inc
lock
hlt
mov
cmpsl
shlb
shll
or
bound
mov
inc
dec
adc
add
add
mov
int
es
hlt
push
insb
in
inc
lret
mov
stos
ret
aad
pop
xor
adc
dec
ret
bnd
out
push
std
mov
hlt
cmp
pop
jae
jae
pop
out
pusha
jl
das
pushf
adc
fldl
loopne
jae
lds
push
stos
dec
or
ffree
in
je
or
mov
push
fidivl
pusha
scas
test
fistl
loop
test
push
stos
pop
lock
aaa
aas
xor
or
sbb
fdivl
jp
xchg
movsl
xlat
into
mov
mov
shrb
fcmovne
les
pop
inc
sub
cmp
std
sahf
fwait
fwait
sar
inc
or
cmp
lods
mov
pop
jbe
fdivp
mov
xchg
cmp
adc
fidivrl
sti
push
xor
out
out
fmulp
inc
add
shlb
dec
pop
sbb
nop
adc
aad
call
jbe
outsb
or
and
sub
fnsave
jnp
xchg
aaa
sub
out
cmp
mov
stos
fildll
cs
add
movsb
add
out
out
jb
sahf
lds
sub
or
cltd
xchg
mov
insl
ljmp
fsubs
jae
loope
repnz
cwtl
testl
std
sub
test
sbb
out
adc
int
test
xor
fs
lahf
mov
hlt
sub
ret
mov
pop
push
inc
dec
mov
mov
dec
mov
js
cli
or
gs
insl
mov
mov
in
push
sub
or
test
out
testb
mov
sub
fcmovne
push
adc
sub
xor
icebp
insb
fwait
fwait
fwait
fwait
std
adc
mov
mov
repz
mov
mov
push
or
fwait
fwait
fwait
sahf
adc
lods
jnp
aad
movsb
jecxz
fwait
fwait
fwait
fwait
xor
jne
lods
stos
mov
ds
fwait
pop
aaa
pop
iret
pop
cli
call
pop
inc
push
in
les
push
movsb
cmp
fldcw
fdivr
adc
jg
sub
dec
ja
sub
cmp
mov
bnd
jmp
clc
fwait
aaa
aam
inc
sti
fcompl
loop
pusha
pop
jns
sbb
or
fcmove
int
jae
daa
js
mov
lock
or
mov
js
jb
fmuls
xchg
or
xlat
cmp
inc
shlb
jp
pop
push
clc
push
imul
mov
or
repnz
cmp
jl
sahf
xchg
mov
sub
jl
cmc
fnstenv
rcrb
les
pusha
pop
adc
xor
jo
cmpsl
ret
int
mov
mov
iret
jae
and
imul
push
ss
aaa
aaa
xor
ja
xchg
xorl
fnstenv
sbb
mov
jmp
jae
sub
addl
js
jge
jmp
or
shlb
mov
xchg
cmp
popf
es
pop
icebp
mov
sbb
cmp
int
or
outsb
js
inc
jp
cld
push
icebp
inc
xchg
xlat
and
out
xor
in
test
sub
out
test
push
or
pop
inc
adc
ja
ficoms
cld
lods
adc
mov
jnp
int
cmpb
ds
pusha
add
mov
fwait
inc
mov
mov
jo
ret
outsb
outsb
cli
xor
hlt
iret
mov
loop
cld
ret
inc
adc
jno
outsb
fisttpll
push
inc
jbe
mov
cmp
cmp
cmp
mov
insb
xor
int
andl
pop
or
popf
mov
sbbb
cmp
pushl
or
mov
cltd
adc
lods
insl
in
addr16
addr16
push
shl
std
stos
fmull
les
lahf
int
xchg
shrb
subl
into
mov
test
out
jge
outsb
outsb
mov
into
inc
sub
js
out
mov
test
out
lcall
out
filds
push
daa
out
imul
mov
mov
iret
out
out
adc
xor
mov
xchg
mov
insb
stos
add
aaa
stos
aaa
lds
xorb
aam
mov
data16
aaa
aaa
or
rcrb
adc
shlb
fnstcw
xchg
sbb
aaa
mov
mov
add
push
movsb
xor
aaa
arpl
inc
cmp
sbb
jae
sti
out
push
mov
xor
mov
jae
jae
pop
add
push
sti
les
xchg
jae
jae
mov
mov
sahf
jae
jae
scas
xchg
pusha
xchg
leave
dec
cmc
cmp
adc
cmc
loop
cli
push
xor
arpl
fs
fwait
fistl
clc
aad
xchg
adc
cmpsb
popa
xor
inc
in
daa
ds
xchg
and
clc
fstl
int
std
dec
cmp
rcl
push
inc
push
cmp
daa
inc
js
fnstcw
mov
or
fstps
les
test
xor
and
aam
cli
loop
fcmove
and
pop
push
and
idiv
test
inc
mov
mov
nop
add
rcl
dec
nop
out
jae
out
mov
inc
shr
inc
mov
jmp
sahf
stos
shrb
xor
push
rclb
fdivr
outsb
xlat
push
rol
adc
jne
call
dec
push
notb
push
loope
xor
cmc
ljmp
mov
add
fdivrs
ja
sbb
hlt
lds
ja
fdivrl
mov
xor
fsubl
and
xchg
cwtl
dec
addr16
in
addr16
cmp
lock
fmull
push
sub
pop
int
int
shlb
nop
in
aaa
mov
pop
xor
iret
int
push
shufps
sub
push
js
mov
adc
add
mov
nop
dec
or
aas
lret
and
out
and
pushf
data16
repnz
outsb
outsb
mov
loop
push
loope
and
imul
jecxz
data16
sti
jecxz
or
inc
lcall
dec
insb
push
icebp
mov
popa
jae
jae
bound
mov
xor
inc
and
js
lahf
in
add
sbb
iret
sub
test
dec
cld
sahf
fisttpl
or
es
cli
pusha
iret
out
sub
xchg
ja
por
adc
outsb
outsb
filds
lods
mov
cmp
scas
sbb
mov
loopne
insb
outsb
mov
addr16
out
fdivrl
mov
es
mov
cmc
insb
clc
fldpi
xchg
int3
test
fyl2x
pop
mov
insb
adcl
jp
mov
mov
push
inc
aaa
aaa
mov
bound
jg
ficompl
rdtsc
shlb
mov
jle
push
scas
sbb
push
cwtl
addr16
push
inc
cwtl
insl
add
mov
clc
rorb
mov
mov
fdivrl
fildl
in
push
outsl
or
push
data16
jae
jae
adc
leave
mov
lods
imul
push
clc
mov
add
mov
jge
ds
cmp
mov
sbb
or
iret
out
mov
mov
into
cmp
lahf
fwait
fwait
mov
push
dec
mov
add
out
sti
insb
shrl
inc
sahf
fisubrs
ljmp
addr16
addr16
pop
les
jp
sbb
lahf
adc
cmp
in
nop
pop
es
into
sub
aaa
aaa
aaa
jae
outsb
orb
iret
or
out
inc
aaa
aaa
aaa
aaa
pop
inc
pop
pop
and
leave
jl
idivl
mov
js
push
cmp
mov
hlt
call
arpl
mov
mov
not
cli
add
cli
addr16
xchg
shl
insb
ljmp
jle
ror
mov
jbe
push
shrb
sti
fcoml
mov
repz
jge
pop
ret
pop
bound
sbbb
out
fdivs
gs
in
cmp
xchg
loopne
jg
outsb
outsb
outsb
outsb
mov
sub
test
ss
outsb
push
inc
adc
aam
scas
cmp
add
sbb
dec
imul
lea
xchg
cmp
outsl
push
fidivl
fidivl
orb
insb
mov
jecxz
lods
fadds
out
aaa
aaa
aaa
aaa
add
rorl
sar
cmp
and
inc
and
lds
outsb
scas
push
push
enter
sahf
jb
lret
sub
test
outsb
outsb
outsb
shr
mov
or
cli
cs
push
test
mov
pop
xchg
sub
out
mov
push
rorl
pop
adc
outsb
and
pusha
fcomps
inc
repz
ret
sahf
imul
movsb
ds
inc
mov
sbbl
jo
mov
mov
mov
in
js
out
clc
movsb
jbe
and
in
xchg
mov
fsts
jb
jmp
pop
faddl
clc
int
jmp
outsl
movsl
jae
sti
fsts
insb
sub
mov
loop
jae
sbb
iret
add
xchg
and
dec
adc
loop
aad
sbb
loop
call
int
jg
push
mov
lret
and
int
int
imul
stc
jae
int
int
out
jmp
imul
or
lret
cltd
xor
and
pop
idiv
int
int
in
fcmovne
mov
mov
push
loope
lret
int
cli
iret
fistpl
aas
pop
fmuls
jae
jbe
xchg
out
test
jmp
cmp
sahf
dec
dec
rol
or
adc
in
sub
push
ds
dec
xor
jo
add
add
adc
iret
out
xchg
leave
repz
ds
jl
jle
les
mov
mov
cmp
jno
jnp
loopne
pop
popf
sub
hlt
sahf
push
add
or
dec
adc
mov
mov
fisubrs
out
fdivr
xchg
sbb
cwtl
xchg
ljmp
jl
fists
stc
cwtl
jae
cmc
movsl
cli
insb
outsb
pop
mov
lcall
clc
sbb
adc
cld
insb
mov
std
mov
ds
mov
adc
pop
aam
mov
sbb
xor
fcmovne
out
inc
lahf
xor
jle
xchg
or
inc
mov
mov
sbb
and
scas
rorb
dec
out
mov
int
rorl
dec
jmp
ficoms
cs
cmp
divb
test
scas
mov
lods
xor
mov
mov
pop
dec
ds
xchg
jb
les
adc
jb
clc
adc
sahf
nop
gs
or
adc
cmp
add
jae
xchg
cmc
test
cmp
fldt
loopne
sub
jne
sbb
jmp
jno
stos
js
xchg
idivb
jo
xchg
ds
lods
scas
push
into
in
sbb
add
in
inc
lret
xor
mov
adc
or
mov
push
jg
fs
jne
lea
cmp
into
test
xchg
sbb
mov
mov
push
repz
pop
and
in
inc
sub
ds
jb
aaa
inc
lock
inc
int
int
cmp
add
lahf
int
int
adc
jne
xchg
das
aam
pop
sbb
aaa
aaa
mov
fisubl
mov
add
or
aaa
push
dec
call
lret
dec
jmp
add
xchg
subb
fwait
cmp
dec
mov
mov
out
jl
leave
cmc
repnz
mov
inc
mov
xchg
or
aaa
mov
in
cmpsl
rol
int3
lret
mov
ss
aaa
push
dec
adc
hlt
jecxz
mov
out
inc
jle
aas
fstl
inc
out
sti
faddl
lcall
dec
nop
imul
dec
repz
icebp
pop
lock
sarb
sub
stc
mov
call
repnz
push
cmp
pop
mov
dec
rcrl
int3
outsb
pop
sbb
subb
lret
jmp
outsb
outsb
outsb
outsb
pop
sahf
dec
xor
int3
jo
js
inc
int3
xlat
out
enter
out
out
in
mov
loopne
fmul
lods
popf
int
xor
push
rorl
movsl
in
adc
int
xchg
cld
push
jle
jecxz
push
rcrb
inc
and
in
cmc
jns
cmp
and
add
stos
mov
pop
push
cmp
js
or
mov
aaa
aaa
aaa
cmp
pop
add
lret
mov
adc
inc
pop
xchg
cltd
pop
pop
hlt
xchg
jne
mov
xchg
adc
jmp
push
test
sub
inc
fdivrl
push
mov
or
bound
icebp
jge
outsb
pusha
sbb
iret
jp
push
cmp
inc
mov
or
push
mov
jae
jae
sub
addl
cmp
jnp
int
in
jae
test
pop
loop
mov
mov
adc
and
nop
test
mov
fdivs
xlat
adc
hlt
icebp
mov
fisttpl
mov
daa
cwtl
aad
in
jae
jae
and
jb
or
hlt
and
aaa
std
push
inc
insb
xchg
hlt
sub
mov
jle
sub
sbb
add
cld
push
pop
notl
outsb
outsb
outsb
outsb
pop
outsb
dec
mov
test
ljmp
fcompl
mov
inc
pop
jle
popf
cmp
out
idivb
jg
jo
xor
dec
pop
lcall
sbb
inc
das
jb
mov
sti
sbb
and
mov
aaa
mov
mov
stc
dec
fs
jb
loop
aaa
aaa
sub
xchg
pop
out
es
insl
sbb
lcall
addr16
dec
push
leave
std
cwtl
or
insb
scas
cs
lods
out
mov
jo
and
xor
pop
out
xor
fdivr
or
add
push
hlt
lahf
in
pavgw
jle
testb
out
out
iret
or
idivl
jmp
mov
push
out
cs
push
data16
popa
sahf
mov
out
xchg
adc
xchg
inc
lods
lods
mov
mov
mov
aas
fwait
mov
mov
stc
fdiv
sbb
jo
test
sarl
mov
jne
inc
push
or
dec
es
push
inc
xchg
and
adc
sbbb
inc
mov
and
test
fs
inc
sbb
pop
push
iret
mov
sahf
hlt
fsubl
lret
mov
push
pop
adc
lcall
out
xchg
dec
test
in
xor
and
mov
mov
pop
hlt
subb
mov
jae
pop
push
jb
push
fdiv
and
sbb
inc
inc
jle
hlt
arpl
lea
inc
enter
mov
dec
fcmovnb
dec
adc
test
lds
mov
jno
lcall
or
and
fsub
je
push
inc
in
addr16
outsb
mov
dec
push
mov
mov
iret
xchg
sahf
mov
sarb
pop
cld
jle
push
mov
ljmp
notb
fsubrl
test
or
mov
fwait
inc
mov
jbe
pop
stos
lods
fldt
ret
and
insb
out
cli
inc
lea
js
cld
mov
xor
out
popa
push
addr16
sbb
out
cmc
outsb
outsb
xlat
movb
dec
inc
popa
push
lods
int3
mov
outsb
adc
jo
popf
imul
cmc
inc
lahf
mov
adc
mov
mov
ja
idiv
xchg
loopne
add
mov
test
loope
jb
out
or
aam
shrb
in
cmp
arpl
in
inc
cmp
xor
mov
iret
out
call
mov
mov
or
dec
push
cli
cs
aaa
jbe
sbb
leave
loope
stos
pop
outsb
ds
aaa
jnp
cmpsl
push
xlat
sub
jb
adc
outsb
iret
int
inc
mov
adc
std
cli
xor
stc
mov
jmp
hlt
fwait
sub
orl
orps
pushf
nop
iret
int
pushf
add
int3
lret
dec
imul
cs
test
addr16
aas
and
xchg
in
outsb
outsb
pop
aam
cmp
inc
push
sbb
push
mov
outsb
outsb
push
jp
adc
test
pop
aaa
loop
iret
mov
xchg
js
inc
mov
xchg
xchg
cmp
ljmp
or
lcall
dec
clc
pusha
mov
or
adc
in
push
cmpsb
fisubrs
cld
in
mov
jecxz
stos
cmp
dec
mov
mov
lret
xchg
stos
test
pop
xor
scas
imul
and
les
clc
shll
std
insb
filds
int3
movsb
leave
test
int3
call
es
pop
rorl
subb
loop
cmp
pop
in
int
and
add
xor
fst
outsb
outsb
outsb
outsb
adcb
pop
xor
xor
cld
insb
outsb
mov
fmulp
sarl
pop
out
jae
jp
jge
pop
add
dec
mov
out
inc
xor
jbe
insb
xor
pushf
out
out
in
sti
jb
js
sbb
outsb
pop
aaa
mov
xchg
fiaddl
clc
pusha
mov
sahf
add
pop
add
testb
fisttpl
jl
adc
outsb
scas
clc
in
adc
or
mov
xlat
cli
daa
stos
imul
pop
cmpsb
dec
mov
cmp
out
dec
xchg
jnp
cli
xor
jae
mov
test
test
push
outsb
push
addr16
nop
pop
cmp
fdiv
push
ljmp
lret
subl
in
cmp
add
hlt
xchg
mov
inc
stos
iret
insb
push
and
rol
mov
jae
sub
iret
shll
mulb
out
out
stos
sarl
orb
sub
aaa
push
add
out
jmp
lods
inc
ret
dec
daa
lahf
cli
sbb
cmpsl
insb
sti
cmpsb
cmpsl
jl
aas
push
mov
lock
cs
fs
repz
mov
repnz
dec
add
sti
lret
int
jne
xchg
xchg
lods
cmpsb
shrl
lahf
in
addr16
jg
pop
push
pop
push
int3
sahf
repnz
push
jns
ja
mov
fidivs
aaa
mov
jecxz
fimuls
cli
int
int
in
mov
pop
mov
ljmp
sbb
push
mov
add
fisubs
out
adc
movb
cld
arpl
sbb
out
lcall
aaa
aaa
aaa
push
mov
dec
sub
fidivl
aaa
aaa
aaa
lds
cmp
addr16
xchg
in
adc
jle
imul
out
lahf
mov
pop
dec
lret
mov
jmp
cmp
loopne,pn
mov
stos
adc
out
scas
lahf
xor
int
enter
mov
out
sbb
nop
ja
movsl
adc
idivb
xor
jl
xchg
cmpsb
sub
iret
popa
ret
mov
fsubrl
scas
lret
jne
not
xchg
ret
lcall
fcoml
xor
out
out
test
inc
call
push
adc
jae
push
push
cld
pop
sbbl
pop
dec
shll
test
jae
add
lcall
push
or
fdivrl
mov
fwait
js
clc
test
fsts
and
dec
scas
xchg
adc
pushf
ljmp
mov
mov
push
aaa
aaa
aaa
aaa
pop
mov
and
inc
xchg
lahf
jne
ds
mov
pop
cmp
pop
xchg
jns
inc
lods
orb
xor
fcoms
jo
les
mov
ret
xlat
or
sbb
mov
pop
or
fsts
mov
sub
mov
xchg
das
inc
sub
pop
push
testl
adc
ds
clc
or
push
fdivp
hlt
pop
out
add
insb
outsb
pusha
in
repnz
cmpsb
and
cmc
xor
push
lahf
aam
add
ss
pop
out
jnp
out
mov
mov
mov
lds
xchg
inc
cmp
nop
pop
jge
daa
mov
mov
push
push
push
ss
ja
or
push
enter
mov
aaa
jbe
mov
aas
adc
aaa
aaa
fadd
je
push
mov
out
sti
jl
xor
addr16
inc
sbb
jae
adc
cs
push
pop
rol
add
lahf
filds
jmp
or
push
mov
jbe
mov
enter
lea
out
dec
aas
jmp
fidivl
mov
mov
cmp
pop
in
mov
outsb
jg
idivl
xor
and
roll
pop
xchg
inc
les
jp
das
sbb
sbb
pop
mov
mov
xor
push
sbb
into
ds
pop
and
cmp
idivb
and
push
lea
inc
jl
test
mov
out
movsb
cmp
in
rol
test
jne
out
out
push
sbb
aas
cltd
pop
dec
xor
iret
out
iret
in
pop
or
adc
popf
jg
mov
int
mov
stos
movb
lcall
test
adc
mov
mov
nop
outsl
xor
test
sub
and
fdivl
fs
je
mov
lods
add
clc
filds
adc
sbb
inc
addr16
stc
cmp
pop
dec
dec
cmp
cmpsb
inc
call
pop
lret
shl
out
out
shrb
xchg
movsb
jno
dec
in
dec
ret
out
out
xchg
sub
cmp
lahf
mov
xlat
aam
mov
nop
cmp
shlb
cmpsb
lahf
lods
imul
mov
and
iret
mov
xchg
fdivrs
int
cmc
pop
outsb
push
pushf
ss
fcomi
rolb
iret
test
insl
and
int3
loopne
aas
fwait
fwait
fwait
mov
cmp
pop
inc
sahf
push
out
jnp
rclb
mov
bound
movsl
pop
pop
mov
ret
iret
out
sub
mov
cs
adc
in
roll
xchg
push
push
aaa
nop
xor
iret
adc
loop
jg
lcall
das
lea
inc
or
xchg
xchg
shl
out
hlt
std
cmp
and
lods
out
fisttps
xchg
aad
add
out
imulb
cmp
sub
or
out
xchg
xor
mov
cmc
push
outsb
cs
sub
mov
rorb
cwtl
jo
fcompl
pushf
xor
movsl
sub
fprem
fdivl
rcll
mov
shrl
add
loope
push
loopne
push
ss
aaa
aaa
sti
cmc
xchg
mov
ficomps
fwait
fwait
cmp
cwtl
test
sbb
imul
push
sahf
inc
stos
fisttpll
ret
push
xchg
rol
loope
je
xchg
xchg
movsb
test
test
dec
and
fimuls
xchg
pop
sub
mov
rol
int
int
jl
jne
mov
or
aaa
add
sbb
in
mov
jp
jae
jle
std
out
jmp
pop
int
xor
lods
sbb
mov
fcmovu
jo
xchg
cmpsl
inc
xor
stc
gs
cli
push
xchg
loopne
shll
int
jl
sbb
adc
mov
int
adc
dec
jp
xor
inc
xor
int
lahf
fidivrl
dec
mov
sbb
mov
jle
int
mov
fcomi
std
fs
clc
enter
jbe
lods
in
int
mov
sbb
in
push
imul
lahf
and
sbbl
dec
xchg
jle
aaa
aaa
orb
xchg
lret
fwait
fwait
fwait
mov
push
pop
dec
and
insl
cmpsb
shll
std
sub
test
mov
ret
aaa
ja
jb
jle
mov
jecxz
fdivrl
aaa
adc
test
es
call
xor
cld
aam
imul
out
sub
or
jle
ds
out
sub
lcall
adc
lds
das
xor
mov
adc
and
mov
add
and
mov
data16
outsb
out
mov
sub
xor
xchg
mov
movsl
lock
push
scas
imul
andb
mov
dec
addb
int
xor
inc
xor
out
data16
push
ds
mov
inc
and
xor
mov
popf
pop
lock
jno
inc
xor
mov
nop
mov
out
insl
xor
jl
sbb
jae
jae
adc
fdivl
mov
or
loope
or
pop
arpl
fmull
std
inc
add
insb
outsb
mov
or
cmpsb
xor
ss
loop
aaa
mov
andb
out
daa
fsubl
xchg
cltd
adc
fmull
aas
pop
rcl
loopne
mov
jns
adc
sbb
outsb
out
or
add
xchg
loop,pt
and
add
inc
or
out
jle
push
enter
cmpsb
out
sbb
je
aaa
aaa
push
std
pop
xorl
movsb
add
xchg
stos
xchg
mov
cmp
cmp
or
ret
dec
fidivs
mov
lcall
aaa
aaa
aaa
out
addb
push
data16
fwait
fwait
sbb
add
in
or
lcall
out
ficomps
ss
sbb
addr16
test
dec
int
gs
gs
cmovge
lock
mov
int
int
xor
and
and
or
outsl
push
or
aad
mov
testb
mov
loope
sub
and
fsubl
clc
push
cs
test
mov
jo
pop
cld
orb
inc
js
sub
cmpsb
sbb
fs
mov
ljmp
insb
mov
out
in
addl
dec
pop
mov
out
daa
lock
jmp
inc
sar
jns
stos
ret
icebp
mov
push
aam
arpl
mov
or
je
mov
jbe
das
pop
inc
xchg
outsb
lock
mov
mov
mov
pop
repnz
addr16
ljmp
ret
int
dec
cli
div
adc
cwtl
push
dec
mov
iret
inc
push
movsl
sbb
je
out
out
outsl
cmp
push
out
sub
mov
ds
insb
fidivs
les
ds
aaa
pop
cld
sbb
mov
rcl
dec
sub
jecxz
outsb
cli
jbe
mov
xor
adc
push
mov
rcrl
xor
lea
rorb
push
pop
pop
add
ja
in
addr16
rolb
add
or
iret
cwtl
dec
fwait
fwait
lahf
int
into
xlat
xor
cmp
notl
fwait
fwait
fwait
jg
and
jnp
xchg
pop
popf
int
sbb
add
leave
test
xor
movsl
lahf
int
arpl
lret
jae
dec
ds
and
insb
imul
jae
ret
dec
jnp
fnstsw
test
int
xchg
xchg
bound
dec
scas
cli
jbe
pop
fwait
fwait
fwait
fwait
lods
and
pop
fnstenv
xor
or
and
jno
dec
xchg
jle
int
jp
push
cltd
imul
aas
jbe
mov
mov
jmp
push
adc
mov
outsb
xchg
lds
aas
fwait
fwait
fwait
es
ds
repnz
mov
lret
mov
fcompl
ds
mov
xchg
fidivl
mov
aad
fisubrs
mov
inc
pop
dec
sarl
cmpsl
clc
dec
dec
subb
sahf
pusha
je
hlt
xchg
fdivrl
push
mov
std
adc
fdivrl
cs
push
mov
mull
jge
push
sbb
cmp
cmp
lahf
enter
sbb
out
div
repnz
test
cmp
sub
dec
js
mov
lcall
aas
imul
ret
jnp
les
dec
mov
inc
fwait
fildl
jbe
xchg
dec
outsb
sub
shl
inc
xor
outsb
lahf
fwait
fwait
cmc
sbb
outsl
jg
lea
sti
insb
outsb
outsb
fisttpl
jmp
mov
or
cmc
jo
mov
push
or
sbb
cs
or
pop
push
pushf
xchg
sti
fnstcw
add
vmread
jmp
mov
fwait
sub
mov
sarl
add
jb
mov
add
stos
repz
testl
loopne
sub
jbe
cwtl
in
dec
js
and
xchg
fisttpl
and
xor
call
mov
sub
jae
sti
hlt
std
imul
inc
test
repz
stos
jle
hlt
fildll
pusha
push
pusha
jmp
arpl
out
lcall
sbb
stc
into
sub
out
add
movsl
mov
and
inc
pop
in
aad
test
pop
xchg
xor
cmc
add
push
adc
or
add
sahf
or
adc
mov
loopne
jae
dec
lea
rorb
push
int
aaa
aaa
mov
loop
xchg
push
leave
sub
sbb
push
and
mov
mov
lcall
xchg
dec
data16
mov
jae
out
into
push
xor
rcr
popa
jnp
or
rcrb
push
xchg
pop
push
in
and
and
add
fmul
in
cld
pop
aad
xchg
int
push
cmp
xor
cmp
mov
mov
aam
jae
leave
xchg
jmp
push
movsb
outsb
lahf
fcmovnu
into
mov
test
fiadds
jo
adcb
divb
fldl
and
in
out
out
push
mov
out
jp
cs
mov
lret
pop
shl
and
clc
ds
adc
cld
mov
cmp
jge
cli
and
ret
aaa
shlb
out
orb
and
lea
jo
out
out
cld
ds
data16
shrl
and
adc
out
dec
movb
or
add
outsb
jo
mov
jg
fdivl
pop
in
mov
xor
mov
js
jbe
and
ror
mov
icebp
out
icebp
int
adc
cmp
enter
mov
push
xor
andl
imul
inc
sbb
dec
pop
mul
pusha
mov
in
jae
cmp
cmp
pushf
jb
cmp
sahf
test
mov
fcompl
int
jae
lret
loope
mov
hlt
fwait
fwait
cmp
iret
xorl
mov
push
fwait
fwait
fwait
fwait
cli
or
lahf
dec
and
idivb
ds
lock
xchg
cltd
sbb
out
out
adc
bound
data16
push
out
enter
into
mov
mov
mov
cmp
sbb
dec
mov
inc
and
int
aas
test
sarb
xor
inc
mov
xchg
out
xchg
fdivr
insb
pop
sbb
popa
dec
dec
stos
mov
lea
clc
lock
xor
dec
clc
outsl
std
out
cmpsb
dec
push
lcall
fwait
int
cmc
push
mov
push
cmpsl
fwait
fwait
or
hlt
or
or
inc
ja
cli
gs
cmp
or
add
data16
cmp
fsubrs
and
aaa
aaa
mov
mov
ret
xchg
imul
adc
fwait
sbb
mov
xor
and
roll
jae,pt
iret
addr16
shll
mov
test
or
or
clc
call
cmp
fdivrl
jo
mov
adc
jmp
insl
popa
cmp
in
adc
nop
into
inc
ds
push
aad
test
outsb
jge
push
out
mov
movsl
dec
or
or
inc
cmp
add
fcoms
aaa
add
jae
mov
mov
sub
mov
push
mov
rcr
push
cmpsb
rcr
add
inc
push
ss
insb
inc
sbb
xchg
pop
icebp
push
lock
cld
jl
push
les
cmp
jae
jae
inc
add
sbb
mov
inc
lahf
in
dec
inc
pop
cs
bound
adc
ds
aam
bound
adc
fwait
fwait
sub
gs
aas
add
idivb
sbb
popa
inc
in
daa
addb
jbe
cmp
xchg
adc
mov
into
pop
mov
and
push
inc
sbb
adc
mov
outsl
dec
pop
cld
inc
or
and
mov
out
leave
dec
insb
dec
cmp
movsb
idivl
cmp
ds
add
sbb
ret
push
cli
adc
sbb
jne
aaa
aaa
mov
xchg
stos
sahf
jns
in
sbb
popf
push
xchg
sti
fnstcw
xchg
jne
iret
push
andl
popf
sub
jp
ds
fldenv
aaa
aaa
cld
sub
mov
dec
sahf
pop
adc
ds
andl
loopne
outsb
test
mov
fisubs
fdivr
xchg
in
and
stos
inc
scas
test
mov
popl
loop
lretw
add
dec
add
mov
pop
sbb
jle
popa
sub
iret
testb
ror
pop
imul
cmc
pop
movsb
sbb
in
cmpsl
icebp
fldz
pop
jns
or
clc
xchg
std
lahf
int
int
mov
loopne
mov
fwait
pop
cmpl
mov
popa
mov
std
fs
notb
movsb
js
dec
cmp
lock
rorl
pop
je
loop
add
push
imul
and
shlb
mov
in
sub
addr16
int
aas
fwait
test
les
imul
testb
cld
rcrb
mov
out
add
push
fstpl
sub
sbb
push
rcll
cmp
mov
xor
int
jg
pop
out
jne
shl
mov
scas
inc
inc
sub
xchg
and
mov
xlat
push
loop
div
rcrb
sahf
fst
mov
inc
pop
xchg
jle
fwait
cmp
add
mov
icebp
push
sarb
sub
insb
gs
sbb
pop
loop
mov
aaa
aaa
push
mov
cmp
xchg
mov
popa
cmp
and
mov
mov
xchg
xchg
lahf
jle
mov
loope
ret
fsubs
push
adc
out
or
sbb
pop
pop
sbb
in
push
shr
rcr
jb
mov
fwait
cmp
ret
sub
nop
sub
sahf
int
xor
cmp
mov
ficomps
int
int
fcmove
stos
sub
shl
add
int
lods
cmp
sbb
lret
cmp
xor
les
pop
fisubl
repnz
jno
outsb
xlat
in
cmp
enter
into
and
insb
cmpl
stc
sbb
add
inc
jns
pop
fcoml
mov
lret
daa
pop
push
imul
test
js
out
jbe
imul
lods
mov
push
psubb
pusha
mov
sbb
cmpps
arpl
sub
dec
popf
lock
int
int
adc
aaa
add
test
imul
aaa
mov
lahf
insb
fists
popf
int
push
add
cmpb
subb
aaa
push
cli
or
sub
hlt
daa
repz
iret
int
das
je
shl
or
adc
or
jle
or
clc
std
cmp
fcoml
mov
aaa
mov
loopne
add
dec
sub
inc
add
js
outsb
push
adc
xor
aam
fnstcw
mov
xchg
push
rorb
mov
and
adc
xchg
xchg
mov
and
lea
mov
cli
divb
loope
xchg
and
sub
xlat
out
xchg
loopne
cmp
sarb
jae
jae
inc
cltd
cs
xorb
mov
push
decl
dec
sub
movsb
lret
fnstsw
fiadds
hlt
movsl
cmp
inc
fsubl
pop
inc
pop
jl
ds
xchg
rcr
adc
aaa
aaa
aaa
aaa
aaa
sbb
jge
pop
ljmp
mov
sbb
add
daa
mov
jo
mov
sbb
repnz
ret
push
movsb
iret
mov
add
rcrb
std
insb
outsb
mov
fldenv
or
sbb
mov
rcl
ds
out
xchg
xor
repz
mov
mov
jbe
jl
filds
cmpb
out
out
dec
cwtl
add
mov
hlt
add
clc
jne
into
int
les
shrl
insl
fwait
dec
and
push
mov
ss
pop
pusha
leave
or
mov
jae
inc
push
loope
movsl
mov
xor
mov
aad
sti
aas
pop
sbb
push
dec
dec
dec
or
sbb
call
popa
mov
mov
cmc
subl
or
fstps
xor
jmp
test
enter
ds
fisubs
cmp
pop
mov
out
sti
scas
push
dec
mov
jo
pop
rolb
les
inc
shlb
mov
jb
out
out
xlat
js
sbbb
pop
lret
shlb
pop
mov
es
mov
pop
rclb
testb
je
addr16
sarb
stos
rcrb
push
sbbb
sbb
scas
aaa
fidivs
pop
aam
push
std
mov
pop
add
xor
fwait
lahf
int
cmc
orl
add
fwait
fwait
fwait
test
xchg
lock
push
push
loop
loope
in
fwait
fwait
fwait
add
push
stc
add
in
jl
sub
cmp
inc
nop
sbb
jl
jbe
cmpps
sbb
add
fadd
clc
fidivl
shlb
adc
and
rclb
xlat
aaa
ja
or
bound
mov
inc
mov
jg
fisubs
add
sbb
jbe
adc
insl
sahf
aam
hlt
xor
jmp
out
push
lock
call
sub
aas
cmc
push
add
cmp
jmp
cmp
lods
imul
pop
xchg
mov
repz
into
push
mov
sub
cmc
mov
mov
testb
jl
pushw
push
push
add
push
xor
ja
pushf
xchg
enter
in
ss
adc
in
cmpsl
cmp
mov
mov
cli
je
mov
mov
cmc
mov
aaa
cmp
sarb
lahf
xchg
mov
loop
and
fiaddl
mov
movb
jnp
pop
cwtl
inc
divl
cmp
mov
dec
iret
das
cltd
or
jae
lds
sbb
cmp
jle
or
mov
push
mov
das
jae
sti
fldenv
sub
mov
pop
loope
inc
lahf
in
and
mov
sahf
xor
insb
pop
cli
fidivs
lods
rorl
pop
add
sbb
inc
mov
mov
jle
mov
and
ret
or
push
lock
sub
fwait
fwait
fwait
sbb
cmp
test
sbb
mov
in
fidivrl
mov
jbe
notb
adc
in
mov
mov
aas
loopne
pop
dec
xchg
cmc
mov
xor
adc
outsb
outsb
outsb
mov
mov
outsl
out
cmp
sbb
outsb
outsb
outsb
outsb
je
push
push
pusha
jmp
mov
jl
outsb
outsb
push
data16
sbb
add
test
jge
js
ja
test
inc
jp
aaa
frstor
ret
mov
adc
adc
int
aas
adc
movsb
xor
xor
sub
sbb
out
test
xor
mov
push
mov
add
add
push
outsl
jle
xchg
jae
imul
jmp
ljmp
stc
enter
cmc
insl
cmp
inc
and
pushf
mov
or
ss
out
push
xchg
cli
sti
aaa
aaa
aaa
aaa
and
push
int
jae
mov
addr16
ret
mov
inc
cli
and
or
out
out
movsl
cmp
sub
mov
mov
lahf
xor
adc
outsl
mov
push
outsb
outsb
xchg
sub
lea
aaa
push
jge
shlb
sbb
sub
ret
sub
aaa
aaa
decb
or
fcmovb
aas
fwait
fwait
fwait
push
je
das
jns
xchg
out
dec
mov
jle
pop
dec
sbb
xchg
neg
push
imul
movsb
bound
out
test
pop
clc
xchg
fidivrs
or
pusha
dec
jnp
inc
jbe
lock
mov
int
ret
inc
dec
mov
lods
or
sbb
pusha
dec
mov
aaa
jno
dec
xor
movb
mov
mov
insl
aas
pop
psraw
xchg
aas
fs
cs
xadd
push
pushf
outsb
sahf
imulb
stos
clc
faddp
out
add
sub
mov
daa
dec
jns
mull
lods
push
addr16
in
fimuls
outsb
fcomip
cld
mov
xor
push
mov
cmp
aaa
aaa
push
les
cmp
loopne
jmp
movl
mov
inc
aad
push
pop
les
ds
fwait
fwait
mov
cmp
cmc
add
sbb
ret
aaa
cmp
idivl
mov
xorb
dec
repz
jnp
dec
pop
jecxz
loope
out
into
and
rcrl
pop
mov
int
in
jnp
rorb
pop
jnp
cs
jno
lret
iret
int
int
hlt
movsl
jl
ds
dec
sbb
test
lods
cs
fcoml
iret
imulb
cmp
in
imul
inc
xor
sbb
decb
cltd
hlt
repz
sarl
arpl
shlb
test
lret
lock
daa
std
push
inc
inc
mov
faddl
xlat
jl
mov
daa
call
sbb
and
rolb
cltd
cmpsb
mov
jae
in
xchg
sub
pop
jno
or
push
es
mov
icebp
fnstcw
test
in
in
dec
lock
clc
loope
insb
sahf
xor
out
cmpsb
xor
xchg
or
jl
pop
xor
hlt
hlt
push
fcomps
jecxz
cs
inc
scas
sub
cltd
clc
cmp
filds
jle
int
push
daa
jbe
std
mov
mov
jg
jl
aas
stos
inc
lcall
cmp
aas
fcmovnb
shr
dec
addr16
jae
out
mov
jg
mov
ds
pop
clc
cmp
imul
xchg
repnz
cmpsb
iret
movsl
dec
fidivl
pop
into
mov
lret
cwtl
push
iret
mov
jbe
bound
fsubl
aaa
stc
jge
mov
or
das
scas
lods
iret
xor
cmp
push
jl
adc
inc
aas
call
mov
aaa
aaa
loope
insl
out
and
fisttpll
sub
aaa
aaa
ja
cmc
jg
gs
mov
sti
fsubl
std
sub
sti
arpl
mov
jae
cmpb
pop
lahf
outsb
imul
stos
sbb
cmp
xor
sub
lahf
int
std
mov
adc
inc
cwtl
rolb
or
and
cmpsl
pop
cmpsb
out
or
cs
ss
pop
pop
hlt
test
add
fsubrl
or
call
jbe
int
int
test
out
jmp
mov
in
insb
clc
fsub
popa
or
iret
mov
scas
mov
xor
bnd
nop
adc
jge
loope
in
add
in
ds
mov
test
mov
mov
test
not
pop
and
jo
pop
or
sarb
add
add
aaa
mov
add
fcomps
jp
inc
cmpsl
in
js
mov
xchg
filds
lock
lcall
push
and
jge
into
mov
cltd
xchg
ds
mov
jl
stos
int
mov
in
sub
cmp
mov
push
xor
ret
and
orb
ret
pop
icebp
push
call
jo
jmp
icebp
fsubrl
sbb
sbb
rorl
sbb
add
mov
pop
hlt
dec
nop
cmp
daa
ret
out
sub
cmp
sub
mov
sub
out
pushf
loopne
clc
and
ret
daa
push
jge
mov
ljmp
rcll
aaa
aaa
xchg
lds
cmp
xchg
xor
insb
jl
fisttpl
int
in
aaa
xchg
bound
dec
scas
mov
int
stos
and
mov
insb
and
xlat
xor
dec
cmp
mov
mov
inc
fistps
loopne
jnp
cmpl
out
pusha
das
loopne
xor
fdiv
mov
jb
dec
dec
sbb
fsubl
fldl
mov
sub
ds
in
cmp
inc
adc
int
fists
out
push
cmp
orl
xor
loopne
xchg
imul
pop
sar
mov
mov
mov
clc
int
add
sbb
sub
jno
sbb
sbb
iret
ret
adc
jbe
push
mov
push
cld
inc
mov
mov
mov
lds
cmpsb
fld
clc
push
add
shlb
lods
out
dec
lret
ffreep
pop
push
fcomps
outsb
outsb
fistps
sbb
push
clc
loopne
inc
xor
fs
imulb
outsb
outsb
pop
mov
mov
addl
push
add
cmpsb
ret
mov
outsb
out
clc
pop
loope
fsts
push
dec
mov
es
sbb
out
push
daa
dec
sub
xor
mov
adc
or
pushf
shrb
xchg
add
cmp
jb
ret
int
int
xorb
insb
xchg
je
fcomp
jle
lahf
out
jno
pop
js,pn
pop
lods
outsb
cs
fnstcw
push
scas
push
loop
jmp
outsb
xorb
outsb
aas
xchg
ror
add
sbb
xor
test
dec
cmp
lock
jo
mov
pop
pusha
sbb
in
pop
mov
xchg
mov
sbb
add
push
fcomps
cwtl
insl
adc
xor
ljmp
pushf
add
out
les
rcll
mov
clc
mov
hlt
test
lods
add
fdivl
pop
mov
jne
dec
pop
jmp
fsub
cmp
popf
pop
inc
outsb
outsb
outsb
outsb
rolb
xchg
out
fdivl
movsl
mov
outsb
outsb
mov
nop
cmpsb
outsb
mov
dec
mov
or
dec
xchg
cmc
es
test
adc
mov
add
xchg
movsb
stos
sub
mov
push
addr16
mov
xor
pusha
sub
iret
mov
sbb
sbbb
aaa
jl
fxch
add
adc
lret
jp
aaa
adc
or
mov
lea
adc
xchg
loop
ja
pop
cmc
mov
out
mov
dec
xor
in
aaa
lock
xlat
pushf
clc
repz
int
nop
push
xorb
pop
xchg
cmp
shl
add
lret
ret
push
sbb
outsl
jl
addb
dec
hlt
andb
mov
ds
int
cld
jae
sbb
push
es
mov
imul
dec
cli
sbb
mov
inc
js
pusha
push
addl
mov
in
jnp
xor
enter
pop
adc
add
int
int
sbb
daa
adc
xor
lret
push
lahf
or
fwait
fwait
mov
enter
sbb
dec
xor
lods
ja
jns
dec
mov
pop
andb
jl
je
and
mov
aam
push
stos
mov
lahf
push
cmc
sub
mov
pop
repnz
ss
lock
cmp
mov
pop
xor
pop
push
lahf
mov
addr16
and
test
xor
mov
repz
imul
out
lods
insb
sbbb
cmp
addl
jge
and
cwtl
std
fdivrs
aas
or
inc
jmp
cld
into
inc
fcomi
xor
push
jl
sbb
iret
out
adc
xchg
dec
adc
xor
outsb
out
fwait
enter
movsb
aaa
sub
cmp
add
jge
or
sarb
in
es
push
xchg
dec
sbb
bswap
jp
test
addb
in
sti
push
repnz
fidivrl
mov
aaa
pop
std
cmpsb
mov
scas
push
sarl
mov
dec
in
aaa
aaa
aaa
orb
fst
pop
xchg
adc
in
cltd
xor
or
jae
jae
and
jle
out
call
pop
js
jae
xchg
repz
adc
and
fsubrl
test
mov
or
aaa
clc
dec
xchg
dec
mov
addr16
mov
xlat
ret
push
sahf
fwait
fwait
jle
outsb
pop
cld
xor
cmpsb
nop
inc
xchg
mov
sbb
push
sbb
fimull
or
test
daa
lret
loop
in
fucomi
sbb
sub
fdivrl
cli
jmp
jle
loop
fwait
xor
shll
fwait
fwait
fwait
sbb
and
filds
stc
pop
jb
mov
xchg
sub
out
cmp
pusha
fdivrl
idiv
ds
pop
xchg
mov
out
mov
fwait
fistpl
mov
or
inc
fwait
fwait
fwait
fwait
push
mov
add
int
subl
filds
test
jmp
and
mov
test
xor
add
cmovp
in
mov
les
ds
xchg
add
adc
dec
pop
pop
fwait
lock
fucomi
mov
adc
jbe
lock
fwait
fwait
push
pop
fidivrs
shlb
mov
cmp
aaa
sub
nop
out
in
jae
sti
arpl
sbb
xchg
movsl
jl
jl
fidivl
out
iret
mov
sub
shrb
out
out
inc
pop
mov
daa
xlat
adcl
sbb
xchg
push
or
xchg
rcrb
adc
mov
mov
dec
fwait
sbb
adc
insb
outsb
pop
inc
je
mov
ficoms
std
fnsave
adc
insl
gs
stc
jge
int
int
inc
mov
sbb
sbb
int
jp
xor
push
jecxz
xor
xlat
ljmp
fdivp
mov
out
and
dec
cmpb
xchg
add
pop
dec
iret
out
add
xor
dec
loopne
mov
add
push
pop
cmpb
lods
int3
push
ret
and
xchg
scas
test
fwait
fwait
inc
stos
notb
in
or
mov
into
pop
mov
rcrl
into
pop
in
cmpsl
divb
xchg
mov
in
sahf
dec
push
lea
push
dec
out
and
xchg
int
sub
arpl
fwait
cwtl
mov
inc
sbb
call
fwait
fwait
fwait
fwait
pop
ds
loope
in
test
js
outsb
lahf
inc
xchg
jno
iret
inc
andb
push
out
testb
mov
cmp
jae
addr16
push
cmpsl
xchg
or
sub
sub
jle
jb
adc
mov
cmc
scas
push
mov
repz
lret
loopne
jecxz
repnz
fdivrl
push
xchg
add
xor
insb
stc
sbb
dec
dec
lcall
adcl
ljmp
jmp
mov
mov
mov
adc
xchg
insb
clc
mov
dec
sahf
cmp
and
das
pop
icebp
and
mov
adcb
cmp
mov
negb
mov
push
popa
push
clc
cltd
sbb
jle
or
xchg
push
fdiv
mov
and
out
arpl
mov
fdivl
push
cmpsb
movsb
out
fstl
lock
clc
sub
lea
or
fcomps
hlt
std
xchg
adc
push
bound
dec
adc
mov
jge
pop
aaa
jg
in
mov
out
out
clc
xchg
add
inc
and
add
iret
out
out
or
xor
inc
adcb
jae
cltd
test
push
xchg
or
ds
test
stos
xor
pop
fistpl
or
faddl
pushf
es
inc
testl
jae
or
int
shll
dec
pushf
fwait
fwait
fwait
pop
push
lods
mov
jecxz
cmp
fwait
fwait
fwait
mov
nop
add
cmp
fwait
fwait
fwait
xchg
or
out
aas
mov
loopne
subb
jecxz
fbstp
jo
adcb
aaa
aaa
aaa
testb
mov
jo
fdiv
dec
cli
mov
jl
loope
out
pop
mov
into
lds
int3
sub
in
fadds
test
pop
divl
sbb
out
lahf
sbb
call
in
insb
cmp
jecxz
test
sub
xor
out
mov
cmp
mov
loop
sahf
jl
leave
aam
outsb
outsb
aas
fistl
sub
into
mov
cs
add
cmp
add
loop
or
cmp
repnz
loop
cmpsl
hlt
fcom
stc
scas
mov
jmp
and
jl
sub
jne
out
orb
mov
data16
cmpsl
pusha
int
out
cmp
xchg
lahf
inc
cmp
lahf
int
push
or
push
leave
into
outsl
movsl
loope
jbe
or
sub
sbb
les
add
bound
sbb
out
testb
adcl
or
out
jae
in
mov
cmpsl
dec
movsl
mov
lods
out
aam
mov
scas
call
clc
mov
jo
or
push
mov
mov
outsl
sbb
dec
shlb
iret
out
lea
bound
nop
inc
cmp
adc
add
cmp
xchg
and
xor
test
jg
cltd
and
or
pop
out
popa
enter
mov
sahf
fwait
fwait
scas
pop
sbb
ret
add
gs
ja
hlt
jns
sub
roll
repz
cmpb
dec
mov
aaa
mov
les
lcall
ss
aaa
shlw
in
push
sub
adc
inc
xchg
out
or
icebp
mov
adc
lods
test
loope
push
pop
push
fldcw
mov
fdivrl
inc
sbb
push
push
add
loope
or
pop
inc
add
mov
and
and
and
mov
pop
les
sub
subb
out
mov
in
addr16
add
clc
pusha
adc
jb
cmpb
mov
push
dec
lock
fdivl
jae
hlt
dec
pop
mov
icebp
das
clc
aaa
hlt
lea
jae
jle
imul
out
mov
fidivrl
in
jae
inc
pop
shrb
inc
xchg
popa
iret
test
push
clc
jle
iret
movsl
xchg
cmp
add
iret
cli
insb
test
cmp
fidivrs
xor
xchg
push
scas
xchg
cmp
mov
push
ret
and
pop
mov
stos
and
mov
dec
mov
in
xchg
cld
outsb
lahf
add
std
insb
outsb
outsb
or
mov
and
push
mov
stos
add
mov
fstps
cmp
clc
cwtl
jo
in
xor
shrb
out
push
lahf
fwait
fwait
fwait
call
hlt
mov
mov
mov
jle
int3
movsb
pop
fdivs
es
iret
idivb
ljmp
xor
mov
adc
outsb
push
inc
scas
loopne
outsb
and
jl
or
ret
shll
push
dec
jp
push
cmpsb
mov
inc
mov
mov
mov
faddl
and
fdivl
pop
mov
mov
jno
xor
xor
jnp
int
push
sbb
lahf
pop
in
daa
call
sub
sbb
sbb
mov
mov
cmp
rep
clc
outsb
cld
divb
mov
arpl
dec
lea
out
les
das
mov
out
out
jp
pusha
fmull
cmp
dec
aad
out
pop
aaa
jb
mov
pop
mov
sbb
dec
xchg
lret
xchg
jnp
test
inc
aam
insl
jg
cmp
shll
mov
jecxz
inc
ss
icebp
loope
sbb
popa
mov
jno
fldenv
or
jecxz
xchg
sub
movsb
out
push
cli
ds
aam
rorb
cmp
insl
popa
adc
adc
push
and
sub
sub
sub
movsbl
mov
sahf
insb
cmp
aas
dec
pop
xor
or
adc
aam
sbb
stos
mov
aas
roll
imulb
not
addr16
xchg
cmc
lods
stos
mov
push
stos
jae
sub
and
add
dec
mov
test
lcall
jbe
jne
fdivrl
aaa
aaa
and
jo
mov
dec
xchg
xor
or
cwtl
call
scas
inc
lods
stc
fsubl
jp
mov
push
mov
lds
mov
fwait
fwait
fwait
add
lds
sahf
mov
loopne
fwait
fwait
fwait
fwait
in
mov
cmpsl
dec
xchg
xlat
outsb
aas
fwait
fwait
xor
dec
inc
add
fidivrl
nop
ja
cmpl
repz
cmp
mov
push
mov
dec
fdivs
imul
int3
inc
mov
mov
mov
jno
pop
or
mov
jecxz
sub
cli
mov
mov
dec
jae
xor
xlat
pop
sbb
fdivrl
and
adc
fs
adc
fsubrl
imul
inc
adc
ss
adc
lahf
int
in
psubd
dec
pop
icebp
inc
in
pop
rorb
lahf
movsb
mov
in
fcoms
ss
outsb
outsb
outsb
outsb
andb
rcrb
add
or
outsb
outsb
in
fmuls
xchg
xor
jne
outsb
outsb
outsb
into
dec
rorl
lods
test
outsb
outsb
outsb
outsb
popa
dec
fs
pop
adc
push
js
outsb
outsb
push
stos
pop
aas
cmpsb
sbb
mov
push
jne
add
cmp
out
idivl
fwait
fwait
fwait
mov
dec
sub
in
lods
xor
popa
std
insb
outsb
outsb
xor
data16
mov
mov
stos
xchg
jle
sub
sahf
sbb
mov
out
addl
jge
mov
in
fs
xchg
loop
sub
or
or
pop
push
fisubrl
les
mov
inc
add
push
pop
xor
out
out
xor
icebp
mov
pop
in
jmp
xchg
outsb
pop
jbe
sbb
mov
or
mov
ds
mov
sti
xchg
fcmovnu
cmp
lret
jne
cltd
jmp
rol
ss
xchg
fwait
or
loope
fdivs
fwait
cmp
pop
or
das
jecxz
jbe
push
or
fwait
fwait
fwait
fwait
pop
mov
cmp
ret
mov
mov
lods
push
mov
dec
aas
jl
push
mov
out
mov
lea
mov
gs
sbb
sub
mov
jae
ss
je
pop
clc
loope
sbb
jae
jae
inc
mov
data16
pop
js
lods
leave
mov
shlb
pop
add
lock
ss
decl
pop
mov
sahf
jb
test
jecxz
insb
cmp
ja
jb
test
xchg
jnp
lahf
int
shrl
arpl
xlat
cmpsb
mov
and
aam
mov
pusha
imul
mov
inc
repnz
arpl
sbb
pusha
and
out
clc
jmp
xor
add
push
lods
and
mov
outsb
outsb
outsb
xchg
mov
dec
insl
jno
xchg
xor
insb
outsb
outsb
fdivr
sbb
lahf
xorl
lock
fiaddl
outsb
outsb
outsb
lahf
enter
mov
or
std
insb
lock
push
jnp
mov
sub
mov
push
cli
push
push
push
cmp
mov
dec
js
orb
pop
aas
adc
mov
sub
loope
popa
jge
cmc
lret
inc
xor
adc
aad
cvtpi2ps
subl
aam
cli
push
pusha
ret
in
adc
push
loopne
fs
fdivrl
into
iret
pop
mov
cs
ds
addr16
testb
add
mov
out
roll
mov
push
inc
into
push
loopne
xlat
adc
cmp
pop
add
sti
cs
call
pop
outsl
jae
mov
xchg
fldt
lcall
ss
push
outsb
outsb
aas
mov
inc
test
test
sub
xchg
mov
jle
shlb
pop
outsl
push
fstpl
jo
pop
dec
inc
push
frstor
addr16
fstps
lret
mov
mov
xchg
mov
jle
mov
inc
sub
jbe
jno
movl
sbb
loop
into
xchg
pop
pop
inc
push
imul
outsb
lods
sahf
popa
mov
xlat
sbb
pop
lock
sub
ss
sbbb
flds
clc
fldcw
aas
enter
jbe
ficompl
dec
mov
outsb
jne
sub
outsl
stc
fmull
lret
mov
sub
std
dec
imul
push
imul
negb
or
push
aam
cmp
out
xor
aas
pushf
scas
mov
mov
cld
mov
or
subl
inc
ret
sarl
addr16
dec
push
and
clc
mov
fnstenv
rcll
in
roll
jae
aad
jl
adc
icebp
push
mov
loop
jae
scas
loope
rcll
pop
sbb
icebp
mov
lods
cmp
jl
xchg
outsb
jge
pop
fld
out
mov
nop
lods
xlat
pop
lock
call
cmpsb
aas
movsb
dec
sahf
rol
call
out
pop
and
push
xor
and
int
add
dec
in
cmp
dec
jge
das
int
pusha
sbb
fnsave
idiv
fcoml
mov
aam
jbe
xchg
or
xchg
int
or
cs
sbb
mov
push
test
cmpsb
cmpsb
push
pop
leave
mov
in
repnz
dec
dec
lret
sahf
cmp
aaa
mov
ficoml
add
outsb
push
mov
sbb
aas
or
jns
push
loope
call
jl
mov
lods
imul
fwait
fwait
mov
rorb
xor
test
fiadds
aas
movsl
imul
leave
fwait
sbb
sub
nop
push
cmp
sbb
enter
push
adc
outsb
or
rcr
in
test
in
clc
and
push
push
mov
xchg
fdivrs
insl
andw
into
outsb
or
mov
int
aas
adc
mov
int
int
xor
pop
push
ret
adc
rorl
push
out
lods
iret
inc
pop
jp
sahf
sti
adc
repnz
out
dec
and
lods
scas
out
ret
fsin
shll
pop
mov
pop
mov
jae
mov
movsl
setno
cmp
mov
cli
pop
pop
cli
dec
call
aad
xchg
icebp
mov
and
adc
pushw
shrl
dec
aas
and
mov
sti
rolb
sbb
dec
jae
sahf
in
jae
popa
addr16
mov
jp
insb
aas
fildl
scas
xchg
jle
and
stos
ret
das
mov
insb
insl
les
cmp
pop
xor
imul
aas
dec
out
inc
std
mov
adc
rorb
mov
scas
xor
clc
fldcw
xor
inc
popf
push
out
pop
sub
insb
sbb
loop
mov
mov
sub
mov
jmp
int
fists
xor
das
cmp
sti
fdivrl
mov
jno
pop
mov
mov
int
add
sti
clc
cmp
lret
inc
mov
sbb
fcompl
xchg
jle
outsb
mov
inc
cwtl
pop
int
int
inc
sbb
jbe
inc
int
shrl
mov
jle
data16
inc
xchg
adc
adc
out
cmp
insb
lcall
add
movsl
shrb
je
fildll
popf
or
and
xchg
push
int
addr16
cmp
mov
mov
mov
jmp
dec
sub
cmc
push
dec
insl
shl
cmpl
pop
mov
shrb
lcall
int
and
pop
add
dec
cmpsb
aaa
aaa
aaa
aaa
hlt
ja
sub
mov
ss
shl
mov
adc
mov
aaa
lahf
inc
add
fsub
push
and
inc
iret
sub
jns
push
fcoml
daa
fidivs
cmp
call
xor
pop
or
sbb
rcr
mov
daa
out
inc
pushl
jno
fidivrl
stc
fwait
outsb
outsb
js
sbb
sbb
jecxz
mov
mov
adc
dec
icebp
add
dec
pushl
mov
outsl
aam
push
rcll
in
adc
sub
sbb
aaa
aaa
mov
fiaddl
sbb
xchg
sub
jmp
aas
adc
mov
mov
fcmove
lods
cmp
xorl
pop
cs
aam
fcmovnbe
shlb
sahf
pop
movsb
xlat
addr16
push
mov
push
dec
xchg
mov
negb
sub
xor
iret
out
xchg
push
mov
sub
xchg
mov
xchg
mov
jb
dec
push
cmpsl
repnz
fcomi
add
or
jnp
xor
xchg
aaa
aaa
aaa
lahf
mov
sub
cmp
add
jge
push
cmp
pop
in
dec
adc
fs
cld
add
fs
rcrb
pop
iret
mov
cli
pop
lock
mov
loop
mov
loop
mov
and
negb
jle
mov
into
xchg
clc
jae
jae
adc
mov
xchg
jno
shlb
jae
repz
pop
xlat
and
sti
pop
or
loopne
inc
out
cld
insb
or
cmp
clc
in
pop
pusha
mov
inc
nop
lret
xchg
fildl
adc
mov
shrl
sti
lock
or
and
cmp
jae
clc
add
sti
mov
jecxz
call
movsb
xor
iret
in
xorl
hlt
push
xor
add
fwait
aaa
aaa
aaa
mov
dec
in
ret
sub
cmp
fstpl
fdivrl
jmp
enter
insl
les
xor
add
xor
mov
int
mov
test
and
mov
mov
pushf
callw
fdivrl
sbb
jbe
cli
xchg
test
pop
dec
imul
repz
dec
outsl
cmpb
sahf
leave
scas
es
int
int
adc
lret
ljmp
cmp
iret
and
mov
or
xor
adc
scas
push
jl
sti
push
pop
inc
out
das
push
fnstenv
sti
fsts
pop
addr16
ljmp
jae
and
loop
sub
mov
sbb
push
mov
mov
dec
xchg
sbb
sbb
in
pusha
add
inc
mov
lock
sahf
fwait
mov
xor
call
call
xor
pop
pop
push
loop
inc
sub
ljmp
mov
test
shrl
imul
adc
test
pop
decb
and
mov
movd
xor
add
pop
stc
cmp
lock
test
movsl
cmp
inc
sub
sbb
icebp
movsl
mov
cmp
and
lcall
inc
cmp
lahf
or
addr16
push
inc
or
es
jmp
fiaddl
int
ret
test
add
rclb
fdivrl
in
push
inc
mov
xchg
popa
cld
add
pop
out
hlt
xchg
mov
cmpsl
int
data16
pop
pop
rorl
jae
add
movsb
push
icebp
popf
mov
divb
add
push
adc
cmp
mov
sub
and
jle
addr16
out
repz
not
ljmp
outsl
push
jl
inc
fwait
dec
dec
inc
inc
add
iret
int
subb
or
aaa
pop
cmp
cmp
les
inc
cmp
call
mov
mov
xchg
mov
aam
pop
outsb
outsb
outsb
outsb
stc
xchg
fimuls
mov
dec
hlt
push
clc
insb
and
xor
fstl
dec
loop
jo
sar
aad
das
adcl
adc
and
int
xchg
fsubr
pop
mov
jl
push
cmp
das
les
mov
mov
rol
filds
jmp
rcrb
jmp
fwait
pop
repz
xchg
adc
popa
mov
pop
or
inc
in
test
loope
jae
rcll
cmpsl
push
or
adc
loop
adc
cmp
imul
pusha
jecxz
into
add
mov
pop
leave
out
jne
push
sub
fstpl
shlb
inc
shlb
pop
sbb
js
mov
test
out
pop
fnsave
push
jle
pop
cmc
dec
mov
jb
cmpsl
jle
and
jg
clc
jp
std
insb
aam
shrl
mov
out
jl
mov
pop
xor
jae
xchg
lock
jmp
xchg
ret
jb
mov
fists
xchg
mov
add
cmc
mov
repnz
mov
xrstor
push
push
xchg
fcomi
mov
mov
and
sbb
nop
push
add
fmul
mov
int
das
pop
push
push
or
cmp
mov
dec
sbb
stos
aaa
mov
int
pop
dec
aad
sbb
loopne
sub
aaa
aaa
popa
setae
stos
in
bnd
inc
ds
cmp
pusha
jmp
dec
std
xor
aam
test
and
popf
jmp
fwait
or
push
pop
test
fsubl
jecxz
sbb
cli
jle
out
xchg
pop
in
adcl
iret
dec
mov
cmp
lock
ljmp
fwait
fwait
mov
fldt
dec
mov
sahf
fwait
mov
stc
ret
sub
jl
mov
mov
lret
push
mov
adc
scas
jecxz
int
int
ret
mov
sbb
xor
sbb
mov
fnstcw
pop
dec
test
jo
xor
dec
dec
leave
pop
pop
sti
pop
pop
cmp
lret
je
test
test
pusha
sbb
int
int
push
dec
mov
or
inc
call
xorl
push
cmc
mov
or
inc
push
ss
cmpsl
fdivrl
aaa
test
xchg
int3
repnz
mov
jae
sti
fdivrl
mov
xor
movsb
lahf
addr16
jae
adc
mov
adc
mov
daa
enter
adc
sub
mov
xor
mov
popa
jge
loope
mov
push
into
fdivl
or
adc
xchg
pop
mov
test
cmp
loop
mov
xor
pushf
mov
imul
imull
pusha
aaa
aaa
aaa
aaa
stc
ss
outsb
cmp
push
in
mov
add
lods
pop
mov
adc
mov
pop
cmp
or
addr16
mov
sbbb
jns
xor
notl
int
xor
or
lahf
finit
inc
dec
fnsave
js
xorb
push
adc
aam
es
out
lret
nop
je
icebp
mov
push
pop
idivl
inc
les
mov
fnsave
or
push
rcrb
or
lds
ja
out
xor
fistpll
bound
pop
aas
add
out
aam
jae
lock
es
push
pop
repz
mov
mov
mov
xchg
fisttpll
imul
out
mulb
xchg
mov
xchg
dec
mov
and
and
jae
jae
pop
movsl
mov
imul
jae
jae
lcall
xchg
xchg
pusha
add
fdivrl
add
push
fisubrl
inc
fisttps
sti
xchg
cwtl
je
sti
ljmp
xchg
jno
andb
js
icebp
dec
lret
aad
fdivrs
jle
in
mov
jbe
cmp
lahf
fwait
fwait
fwait
xchg
push
sub
cld
and
fstpt
xchg
pop
or
mov
jae
nop
or
rorb
mulb
outsl
lds
pop
out
pop
pop
iret
out
lret
xor
iret
stc
lods
pop
por
mov
sub
stos
adc
cmp
jle
aaa
ja
xchg
cmpb
cmc
push
xchg
jo
adc
dec
cmp
jae
inc
sbb
push
xchg
fadd
xchg
jae
fdiv
xor
mov
les
sbbl
jmp
aas
mov
jb
lret
or
sbb
clc
rorb
and
ds
mov
xor
cmpsl
jnp
mov
mov
pop
jae
stc
out
ficoms
cmp
cli
mov
dec
sub
jae
pop
pop
xor
icebp
shll
xchg
mov
jae
sbb
fnstsw
mov
fcmovnbe
clc
orb
lcall
inc
pushf
or
loopne
outsb
filds
pop
into
push
shr
pop
rorl
mov
std
insb
loope
sub
xchg
lahf
dec
data16
inc
movsl
scas
orb
fimuls
int
lahf
fwait
mov
ret
push
cs
inc
aaa
lods
mov
notb
scas
dec
and
adc
xor
fimuls
arpl
pop
ljmp
or
pop
hlt
ficompl
cmc
xchg
ds
lcall
push
cmpsl
fdivr
fldl
or
inc
les
neg
jno
pop
insb
out
out
mov
in
push
es
ds
roll
pop
mov
fstps
outsb
lods
pop
jns
pusha
jmp
aas
clc
enter
cwtl
shlb
xlat
push
int
int
push
sbb
outsb
movsb
push
in
xchg
adc
xchg
out
push
sbbb
inc
clc
jae
fstp
cmp
pop
lock
push
mov
push
cmp
jns
lods
pop
jne
add
insb
outsb
outsb
loop
pop
cs
push
cmp
mov
dec
cs
div
or
jmp
or
rcr
jne
and
push
mov
fdecstp
sbb
add
call
das
hlt
cwtl
outsl
jae
fstps
jp
add
jge
adc
shll
notl
pop
dec
call
sbb
aaa
fisubrl
inc
dec
movsb
jb
jne
cmp
pusha
add
mov
pop
push
or
add
mov
sub
lods
shrb
call
xor
rcrl
sbb
jnp
push
or
adc
xchg
in
daa
test
push
push
push
pop
cmpsb
or
xchg
ja
add
dec
jl
lahf
cwtl
stos
push
sub
loopne
addb
in
das
adc
sbb
jle
lods
movsl
mov
iret
cmpsb
lahf
int
lock
loopne
adc
outsb
aas
push
mov
xchg
cmp
add
cmp
dec
fcompl
xchg
dec
shr
pop
sbb
pop
dec
iret
scas
cld
mov
jo
aaa
aaa
mov
push
and
jne
mov
aaa
aaa
aaa
mov
jecxz
enter
xchg
movsb
iret
fistpll
cmpsb
jle
cmp
cmp
cwtl
xchg
fwait
jle
add
sbb
insb
mov
cwtl
dec
sbb
lahf
mov
xchg
fimuls
addr16
mov
fsubrs
adcl
out
inc
jecxz
mov
adc
sub
mov
rcrl
movsl
sub
fisttpl
int
in
jnp
push
mov
xchg
call
les
inc
inc
cmp
out
mov
iret
out
aas
cmpsl
jp
dec
out
mov
into
int
pop
pop
rcll
and
mov
int
int
sbb
fidivrl
cmp
add
mov
mov
mov
push
fmuls
sub
xchg
sbb
xchg
fwait
fwait
cmp
adc
xchg
and
fldt
fwait
fwait
dec
pusha
mov
in
lcall
aaa
pop
jl
outsl
lret
xchg
loope
dec
aam
sub
fstps
fdivrl
test
add
insb
sub
pop
jbe
movsb
addr16
dec
or
cmpsl
hlt
mov
aas
shll
or
or
xor
int
dec
xor
sti
inc
stos
add
jae
aam
subb
sbb
mov
jae
jae
and
lock
imul
jae
mov
pusha
out
jl
xchg
dec
es
jae
jae
shl
cmp
mov
test
addr16
jae
cmp
loope
adc
loop
mov
pushf
mov
loope
fdivrl
cmp
popf
es
in
ds
je
xor
or
sti
das
cmp
call
cwtl
andb
jae
das
inc
fldt
gs
push
jae
sbb
mov
call
push
adc
jae
jae
sub
mov
dec
into
enter
addr16
sarb
int3
dec
and
rolb
ss
loope
xchg
xor
xchg
dec
jg
ret
test
out
mov
or
test
loope
out
lret
mov
imul
add
aaa
aaa
aaa
jp
adc
xlat
das
lods
xor
ds
aaa
aaa
insl
xchg
mov
movsb
push
test
adc
or
repnz
add
aaa
mov
xchg
xor
jne
mov
jecxz
les
xchg
in
mov
je
dec
imul
or
adc
jno
dec
sub
out
jl
inc
pop
test
add
xor
out
mov
cmp
loopne
addr16
outsb
pop
pop
iret
outsb
pop
scas
test
sbb
xchg
mov
std
fnstcw
fadds
or
or
aaa
jno
mov
push
movsb
jae
sub
lds
pusha
pop
xor
insb
out
out
je
lock
fisubs
add
les
inc
fsub
and
outsb
jae
testl
push
sbb
addr16
add
sahf
cmc
shlb
repz
je
or
mov
mov
jnp
shlb
jl
in
xchg
push
ret
outsl
fldl
xchg
js
ds
ja
mov
adc
cmp
loopne
mov
out
mov
cs
popa
dec
jl
xor
or
mov
loope
pop
mov
orl
mov
jbe
movsl
in
mov
adcb
pop
sub
xchg
into
in
adc
stc
cs
es
int
int
sub
jns
lcall
xchg
addr16
push
push
push
lret
out
adc
shlb
fcomp
mov
fwait
fisttpl
fcmovnu
fldl
jb
mov
jge
cmpsl
sub
sti
push
sbb
adc
push
mov
jne
sbb
stc
and
pop
icebp
add
rcrb
rorb
test
hlt
sub
outsl
mov
mov
adc
jge
das
lret
or
gs
sub
cmp
iret
mov
cli
loop
sbb
enter
cmc
cwtl
dec
ret
das
ljmp
mov
fdivr
jb
jae
xchg
stos
push
clc
scas
fildl
xchg
and
sub
bt
js
lahf
fs
or
xor
lret
sub
add
pop
iret
lcall
mov
push
out
sbb
movsb
cwtl
fistps
adc
in
pop
sub
insl
call
mov
xchg
scas
std
mov
imul
mov
mov
rorl
cmp
ss
aaa
mov
jbe
or
enter
inc
adc
hlt
lods
pop
fnstcw
imul
mov
aas
xor
in
repnz
jnp
lret
and
push
xor
mov
jns
inc
cmp
arpl
es
mov
fbstp
cmp
out
mov
sti
lahf
and
sbb
pop
call
out
cmp
jb
inc
in
scas
mov
jae
aad
das
mov
arpl
out
lods
call
scas
or
mov
rcl
out
lahf
negl
xor
sub
mov
xlat
shr
shrb
mov
cmp
in
jmp
or
cmp
lahf
xchg
les
fdivrl
aaa
imull
xor
pop
idiv
hlt
fsts
inc
mov
cmp
shrw
ds
lds
mov
aaa
sub
addr16
aaa
aaa
aaa
aaa
nop
pusha
fisubl
out
mov
aaa
aaa
aaa
aaa
ffreep
pop
sahf
test
popf
and
inc
sti
jge
aaa
fidivl
pop
cwtl
xlat
mov
inc
in
mov
addr16
jae
lahf
jne
in
loop
sub
int
in
scas
jb
dec
push
ja
shll
hlt
xchg
cmp
or
sbb
or
out
pop
mov
xchg
cld
ret
pop
mov
or
cs
insb
decb
lcall
popf
scas
icebp
icebp
lock
rorl
sub
iret
add
imul
dec
leave
jle
mov
cmpsl
repz
ja
in
pusha
mov
fcomip
shrl
mov
cmp
insl
xchg
iret
icebp
push
sbb
outsb
outsb
outsb
outsb
cmp
fsub
xchg
lock
mov
mov
insb
outsb
outsb
outsb
test
xor
lock
ss
in
sbb
pop
cli
cmp
mov
fdivs
jae
or
adc
jb
fs
mov
cltd
jo
cmc
sti
insb
lahf
jno
mov
jb
and
out
out
or
lods
pushf
xchg
outsb
mov
xchg
clc
mov
popf
xchg
lods
mov
mov
push
pop
bound
push
push
movsl
or
add
xorb
out
nop
xchg
sbb
out
xor
push
mov
aad
scas
hlt
mov
fwait
movsb
loop
in
and
test
insb
out
clc
cmp
and
pop
out
rcll
cmp
ficompl
es
mov
in
fwait
fwait
fwait
int3
mov
out
lds
lods
fwait
fwait
fwait
fwait
xor
jecxz
xor
xchg
jecxz
push
imul
push
aaa
aaa
aaa
mov
test
pushf
outsl
ja
sbb
subl
jne
out
out
lods
dec
xchg
cs
int
pop
js
insb
mov
shlb
add
push
mov
les
or
into
jb
shlb
cmc
mov
in
adc
fs
mov
dec
or
adc
loope
xor
out
pop
add
dec
xchg
or
cmp
pop
jge
sub
dec
rorb
loope
sti
cltd
je
or
push
mov
mov
or
fwait
fisttpl
add
mov
fwait
aam
inc
cmpsb
mov
cmp
adc
jge
outsb
sub
shlb
jge
icebp
f2xm1
pop
pop
les
and
jge
jecxz
movb
scas
mov
add
and
in
fwait
fwait
fwait
mov
ja
fs
pusha
jo
scas
in
add
fwait
sahf
test
mov
inc
es
int
js
mov
test
pop
xchg
mov
int
int
mov
fisubrl
imul
mull
lods
fwait
clc
jmp
pop
iret
out
dec
mov
rorb
cmp
dec
in
pop
jl
pop
sbb
xor
jg
cwtl
adcl
pop
xchg
push
lret
mov
loop
les
cmpsl
sub
push
and
outsl
and
lahf
lods
and
sbb
lds
outsb
outsb
cs
jb
mov
cmp
pop
ficompl
insb
es
loop,pt
les
xchg
push
mov
repnz
jae
test
xchg
mov
shrb
aam
into
cli
test
adc
out
adc
notl
out
mov
push
or
inc
loop
jecxz
dec
add
outsb
add
and
data16
psubsw
pop
out
scas
add
mov
les
and
js
sahf
fwait
and
dec
mov
lcall
je
ljmp
ret
inc
loope
push
pop
testl
jg
inc
aam
xchg
push
test
pop
push
out
out
gs
rorb
out
push
push
rorl
bound
out
outsb
or
aas
fwait
fwait
fwait
jns
gs
xor
stc
jno
push
repz
push
add
jge
cli
andb
jg
mov
dec
or
clc
jmp
or
movsb
inc
lahf
int
lahf
and
adc
call
mov
insb
jns
pusha
cmp
fildll
lock
or
addr16
iret
push
push
or
pop
arpl
fisubl
sahf
cmc
mov
scas
and
or
xchg
mov
jge
jo
jae
adc
jo
adc
xchg
in
jae
jae
cld
cmp
out
cmp
or
mov
xchg
fnsave
into
fcomps
push
sub
mov
outsl
pop
cmpsb
push
ljmp
jbe
or
jb
push
nop
push
push
or
mov
iret
in
add
sbb
pop
or
out
out
aam
test
mov
cmp
out
out
repnz
cmpsl
lods
arpl
es
imul
hlt
pop
es
adc
stos
pop
aas
lods
inc
fiaddl
mul
out
out
loop
add
ud1
mov
outsb
xchg
iret
and
pop
mov
mov
ja
jge
stos
fwait
aas
aas
mov
or
outsb
outsb
lahf
fildl
shll
pop
pushf
daa
scas
out
dec
in
loop
jle
jl
jo
pop
or
jp
in
jae
sti
xchg
pop
jnp
and
mov
xorl
xorl
fimuls
pusha
orb
inc
loope
cmp
sub
xor
in
mov
int
inc
lea
ret
cmp
imul
push
sub
mov
jge
pusha
jbe
cmove
jb
fmull
icebp
dec
fisubrl
fsubrs
cmp
imull
sti
outsb
outsb
cs
adcb
push
js
repnz
pop
mov
mov
ret
or
loopne
pop
cmp
lock
das
mov
in
loope
icebp
fldenv
test
cld
mov
push
movsl
nop
dec
hlt
jnp
inc
mov
mov
lret
test
cmc
lock
mov
cmpsb
inc
mov
fcompl
test
pusha
xchg
aas
mov
xchg
mov
dec
jl,pt
sub
sbb
idivb
push
xchg
popf
add
sbb
inc
aas
fcmovne
out
outsb
stos
cmc
jbe
pop
lock
xchg
mov
loop
outsb
outsb
outsb
out
ljmp
adc
dec
pop
jle
ja
mov
sub
shrl
clc
xchg
push
push
addr16
test
cmp
xchg
fwait
fwait
fwait
fwait
je
xchg
jnp
je
stos
push
stc
mov
ds
fwait
fwait
ja
enter
mov
xor
hlt
insb
std
mov
pusha
add
dec
in
addr16
push
sub
enter
sahf
sahf
bound
int
int
subl
add
loopne
addr16
rcrb
insl
or
push
icebp
ja
add
jo
xor
add
fmull
in
pushf
add
xor
add
into
sahf
inc
jns
fisubrl
inc
mov
fstpl
repnz
push
mov
dec
mov
out
fsubp
pop
mov
inc
addr16
fdivrl
mov
mov
sub
int
nop
inc
mov
cmp
aam
aaa
push
ds
add
pop
xchg
jl
int
in
lret
mov
xor
adc
inc
sbb
push
dec
adc
addb
out
xor
inc
sub
ret
dec
aaa
mov
cmp
lock
hlt
dec
lds
mov
int
addr16
into
push
rol
cmp
and
mov
int
imul
or
into
sub
jl
and
push
sahf
int
popa
pusha
fisubrl
xchg
sub
adc
roll
imul
std
or
cmc
jne
fwait
mov
mov
test
pop
fs
out
and
ret
gs
push
das
shrb
aas
fisttpl
adc
test
cmp
lahf
imull
jbe
cli
clc
insb
outsb
xchg
divl
sub
jae
sti
fwait
adc
cmp
cmp
jae
jae
push
insb
adc
xchg
jae
jae
sarb
sahf
lods
rol
lret
arpl
xchg
jo
sub
or
pop
pop
iret
out
mov
rcrl
cltd
insb
outsb
outsb
outsb
lock
mov
lods
divb
adc
lock
push
mov
sbb
sub
push
xchg
mov
add
iret
repnz
mov
jb
jae
jo
cmpsl
xchg
lods
ret
es
aaa
mov
dec
test
add
jle
mov
pop
and
ret
shrb
aad
data16
insb
pop
sbb
sbb
push
inc
clc
les
mov
jbe
pop
inc
fs
cmp
xchg
jno
fimull
and
or
cld
push
dec
or
cmp
mov
fcompl
pop
cmp
inc
and
lds
xlat
imul
mov
mov
lock
xchg
jle
mov
pop
add
test
add
rcl
fiadds
jge
in
dec
mov
stos
jbe
cmp
test
adc
mov
lcall
pop
cli
jl
cs
adc
xchg
loope
orb
insb
enter
jae
and
push
sbb
test
sbb
jae
sub
hlt
iret
jbe
mov
dec
lret
insb
or
dec
rclb
imul
xchg
mov
mov
lods
pop
mov
xor
xchg
out
inc
out
add
cwtl
shlb
xchg
adc
jecxz
pop
mov
lahf
add
mov
aas
add
pusha
testl
iret
and
int
in
xchg
sbbb
cmc
sti
das
and
out
sub
int
int
push
in
fdivp
adc
xlat
xchg
dec
push
add
sbb
sahf
mov
xchg
inc
xor
fwait
sub
aad
insl
push
or
and
pop
jl
cmp
jnp
mov
jl
jbe
mov
stos
ret
jl
out
mov
aam
or
loope
call
adc
sub
in
or
xor
ljmp
push
add
ret
stc
cmp
iret
int
pop
sahf
jnp
sub
test
int
xchg
insb
outsb
outsb
outsb
hlt
mov
mov
xlat
sar
fcmovne
inc
inc
rcl
in
jns
fwait
fwait
fwait
fwait
or
cltd
pop
popf
pop
ss
and
cmp
lods
xor
cli
sub
out
mov
outsb
pop
clc
insb
outsb
sbb
in
gs
les
rorb
outsl
inc
mov
dec
jge
inc
inc
insl
push
out
idivb
xchg
fistpll
outsl
aam
out
or
outsb
jp
iret
push
pavgb
into
mov
mov
fldl
jl,pn
iret
mov
push
in
or
push
adc
lret
inc
mov
ss
ret
lock
sub
mov
dec
rcrl
jl
mull
dec
lock
xor
stc
adc
mov
lea
sub
jae
jle
xchg
mov
fisubrs
inc
gs
dec
jae
fidivrl
ja
jb
sti
jge
mov
std
mov
adcb
jae
int
push
mov
dec
adc
jae
add
nop
mov
fstps
pop
and
jbe
lahf
int
arpl
enter
mov
mov
dec
or
in
jns
jecxz
sub
leave
xchg
lock
ljmp
daa
outsl
fsubrl
cmp
mov
addr16
fldenv
adc
pop
out
es
pop
jg
xlat
das
loope
xchg
cmp
inc
ds
mov
in
insb
or
mov
cmp
inc
pop
inc
cmp
jmp
xlat
lahf
loop
jbe
dec
push
jg
fadds
cmp
add
adc
or
pop
ss
aaa
mov
mov
push
enter
gs
and
mov
enter
pop
lock
add
dec
ret
mov
int3
orl
xchg
sbb
inc
ds
fcompl
xchg
fisubl
jmp
cmp
pop
fdivrl
sub
mov
loop
movsb
jno
cltd
je
imul
loop
jnp
mov
std
insb
outsb
outsb
mov
fildll
add
fs
pop
hlt
mov
subb
dec
add
test
es
and
cmp
clc
jne
sbb
jle
aaa
in
dec
mov
and
add
fwait
fwait
fwait
jo
mov
push
loope
out
jecxz
sbb
fwait
fwait
fwait
add
adc
mov
cmp
fwait
fwait
fwait
stos
mov
cmc
fmull
pop
mov
adc
cmp
idivb
adc
clc
or
inc
mov
and
test
ds
mov
scas
test
xor
jae
pop
incl
shrl
test
cmp
insl
adcb
bswap
mov
xor
jp
push
pop
iret
jbe
pusha
js
fcomp
imul
imul
sbb
pushf
lds
xchg
inc
bound
iret
out
jo
xor
bnd
es
add
js
inc
inc
adc
orb
mov
cld
and
int3
mov
cmc
into
cmpl
clc
pop
sub
mov
idivb
sbb
stos
cld
mov
lcall
stc
cli
fdivrl
xor
push
pop
pop
mov
stos
adc
daa
call
shll
sbb
mov
or
xor
adc
or
outsb
mov
dec
shll
movsl
mov
setbe
mov
repnz
cmp
lret
mov
cmp
mov
das
fstpl
mov
jecxz
cmpb
push
aaa
stos
or
int
inc
call
imul
mov
mov
pop
lahf
inc
jae
push
bound
jle
in
sub
shrl
xchg
mov
aaa
mov
jmp
stos
pop
ljmp
dec
mov
fdivrl
aaa
inc
insl
inc
ret
imul
ss
scas
stos
cmp
fs
add
cmp
push
sbb
jae
mov
mov
jo
jae
jae
aas
inc
mov
divl
xor
cmpb
icebp
fwait
fwait
fwait
fwait
jecxz
scas
stos
xchg
mov
ret
dec
sahf
fwait
fwait
fwait
sub
ficoml
lods
arpl
add
std
pop
fsubrl
lock
shlb
mov
mov
xchg
fsubrl
mov
icebp
push
and
inc
sbb
sbb
fdivr
in
mulb
jmp
fisttps
pop
pop
dec
push
push
push
xchg
int
in
outsl
add
adc
out
adc
mov
fisttpll
iret
int
popf
mov
add
in
loopne
out
push
sub
inc
rorb
jg
fcompl
mov
mov
dec
inc
pop
pop
je
outsb
mov
das
push
xchg
loopne
je
xchg
or
cs
mov
xchg
lea
lds
sub
ja
xorl
cwtl
insb
pop
idiv
fdivl
mov
cmp
dec
or
push
sub
sub
das
jae
iret
out
stos
xlat
es
xor
mov
pop
rcl
inc
shlb
jno
jbe
and
mov
xor
lcall
shlb
mov
add
cld
push
jp
fnstenv
adc
push
ds
in
jae
add
mov
mov
fidivrs
sub
in
ljmp
fildl
pop
jne
mov
outsb
outsb
lahf
fwait
sub
in
in
enter
outsb
outsb
outsb
outsb
frstpm(287
xchg
outsb
outsb
outsb
outsb
dec
inc
mov
jle
insb
pop
into
jge
outsb
outsb
ss
mov
mov
iret
divb
fs
movsl
ds
es
fmul
dec
inc
les
or
test
movsl
lahf
int
sahf
rcll
sub
ds
jecxz
sar
cmp
icebp
in
and
or
sbb
adc
or
mov
testb
dec
pushf
ds
mov
pop
mov
fwait
fwait
fwait
inc
in
scas
daa
outsb
mov
jns
aas
fwait
fwait
icebp
xchg
cmpb
mov
test
mov
and
xor
jae
test
fiaddl
mov
ljmp
mov
xlat
inc
loope
mov
fnsetpm(287
push
mov
inc
gs
push
cmp
out
adc
hlt
je
cwtl
call
jns
mov
in
mov
mov
fidivl
or
aaa
aaa
aaa
aaa
jg
mov
and
mov
int
lock
mov
pop
adc
jae
jae
pop
adc
rorb
aaa
inc
cmp
out
out
fimull
aad
mov
jmp
mov
rolb
dec
insb
outsb
outsb
xchg
lret
outsl
outsb
lea
xlat
iret
divb
xor
sbb
jbe
mov
pop
dec
mov
jns
je
xchg
sahf
int
push
out
or
jae
daa
jl
hlt
xor
mov
aaa
mov
rolb
jle
nop
push
add
pop
adc
xchg
out
xor
pop
rolb
sbb
jbe
xchg
inc
clc
rclb
int
sbb
inc
mov
xchg
int
in
and
popa
ds
out
out
idivb
leave
cs
loop
dec
in
fidivrs
pushf
fistl
sahf
sbb
mov
int
in
mov
das
daa
inc
sahf
int3
mov
das
push
ljmp
mov
xchg
in
xchg
push
rolb
jae
push
in
loop
ljmp
test
aaa
aaa
mov
sahf
push
xor
leave
sarb
jp
in
clc
ds
aaa
sbb
xor
dec
pop
pop
mov
ljmp
rolb
inc
sub
ljmp
pop
lock
sti
aam
cwtl
inc
xor
or
fsubrl
jns
mov
sub
mov
lret
aad
pop
out
out
inc
adc
mov
loop
incb
cmp
loopne
add
fwait
pop
xchg
sub
jge
movb
insb
jge
cmp
dec
sub
loopne
mov
jmp
lock
outsb
outsb
outsb
outsb
test
pushf
xchg
pop
out
jo
aaa
jne
movsb
leave
std
insb
outsb
outsb
movb
aas
or
mov
mov
adc
dec
in
mov
jnp
add
dec
pop
push
mov
mov
xor
shl
mov
out
notb
ljmp
shl
pop
out
out
mov
cld
mov
xor
and
iret
out
ds
or
jae
insl
xchg
inc
dec
cmp
int
ss
ror
xor
icebp
push
push
jbe
jmp
pushf
int
inc
outsl
pop
insb
jmp
ds
fisttpl
lret
in
out
int3
adc
dec
pop
sti
pop
or
fwait
push
rorl
pop
jae
cmpsb
jbe,pt
cmpsl
scas
inc
mov
out
out
testb
test
push
out
out
add
hlt
ret
ret
mov
loopne
out
out
xchg
inc
adc
mov
xor
fisttpl
and
mov
xchg
ss
jl
mov
mov
loopne
or
icebp
sub
pop
icebp
or
repnz
or
adc
jo
cmp
clc
jb
jp
add
lods
out
pop
imulb
pop
into
orb
outsb
outsb
outsb
outsb
mov
pop
or
add
outsb
outsb
pushf
adc
inc
jo
rcrb
mov
ret
jae
cmp
mov
push
shl
mov
mov
jp
outsb
int3
adc
add
aam
sti
jge
imul
sbb
cmpsb
adc
mov
bound
jae
jae
mov
xchg
xchg
mov
or
inc
lods
sub
cmp
inc
pop
or
loope
mov
xor
test
fwait
fstpt
pop
mov
push
jl
lds
inc
add
fsubl
xlat
jp
loopne
fisubrs
adc
jae
jae
fidivs
jae
addr16
gs
dec
jae
rcrb
and
xchg
aam
shlb
dec
ret
mov
movb
imul
cmpsl
std
xor
idivb
sbb
fcoms
pop
out
out
cld
sarl
jae
mov
ss
out
jne
out
mov
or
xorb
sbb
outsl
mov
jle
and
dec
mov
cs
clc
lret
dec
mov
scas
or
repnz
shl
mov
fwait
fwait
fwait
or
mov
enter
mov
fwait
fwait
fwait
xor
cmp
test
js
lcall
pop
out
out
push
les
es
mov
pop
push
add
cli
mov
iret
cmpsl
iret
adc
inc
ljmp
divb
andb
sbb
out
and
add
xlat
fs
pusha
in
jg
fwait
fdiv
imull
push
xor
mov
aad
cmp
lods
or
xchg
pop
icebp
pop
arpl
out
pushf
xchg
sbb
add
fisubl
ficomps
add
movsb
into
push
into
int
pop
in
and
int
insl
xchg
mov
aam
cmp
mov
in
mov
loope
mull
insb
lahf
iret
lret
dec
or
pop
out
es
sahf
aaa
aaa
aaa
std
mov
adc
test
sbb
shrb
fidivs
mov
mov
mov
int
popa
push
xchg
arpl
adc
lods
in
insl
xchg
xchg
mov
aaa
or
pusha
sub
jne
cmp
imul
lock
shll
out
mov
inc
jbe
mov
cmp
push
gs
inc
jg
insl
sbb
or
aaa
aaa
aaa
mov
jbe
mov
aam
in
add
ss
pop
out
jns
pop
push
rorb
mov
jae
fdivrl
mov
in
jae
jae
mov
std
xor
sub
insb
add
int
xchg
inc
mov
rolb
fwait
mov
enter
pop
sbbb
fwait
adc
out
add
dec
xor
inc
sbb
int
jne
jne
fwait
mov
sub
mov
and
rep
mov
sbbl
divb
test
inc
inc
adcl
mov
lds
lds
mov
movsl
sub
fldenv
fwait
fwait
push
adc
jge
fwait
fwait
fwait
cwtl
ss
clc
jbe
andb
fwait
lret
test
inc
test
movsl
xor
mov
stos
in
pop
sbb
sub
pop
xchg
sbb
mov
pop
mov
out
insb
pop
hlt
mov
add
mul
adcl
call
mov
cli
int
in
in
gs
int
int
or
mov
mov
lock
jmp
adc
cs
popa
mov
std
or
daa
xchg
clc
jbe
ficoml
pushf
sbb
lods
outsb
jb
test
pop
clc
lret
push
pusha
xlat
sti
add
test
fwait
fwait
fwait
fwait
and
inc
xor
xor
aas
fwait
fwait
fwait
cld
in
movsl
jnp
daa
test
push
mov
push
inc
pop
ficomps
call
cld
sub
inc
jbe
loope
sahf
and
jmp
adc
or
fs
movsb
neg
cmp
add
xchg
xchg
sar
fwait
fwait
jge
xor
push
mov
fwait
sub
lds
jecxz
jb
pop
cmp
ds
cmp
pusha
fdivrl
xorb
xchg
and
sub
cmpsl
fsubs
xor
fwait
xchg
mov
cmp
cs
iret
sbb
jns
mov
orb
clc
insb
xchg
fsub
in
pop
fimull
out
out
or
fnstsw
imul
mov
sbb
and
lods
int
int
roll
xor
aam
insb
sbb
loop
cmp
leave
lret
aad
pop
mov
addr16
aam
imul
loopne
mov
add
add
mov
xchg
cmp
add
nop
cmp
mov
jae
push
pop
lahf
or
mov
jae
and
sarb
push
sbb
rolb
iret
sbb
iret
enter
lahf
int
xorb
add
xchg
icebp
insb
out
cli
sbb
adc
icebp
cmpsb
daa
push
xchg
lods
mov
lret
mov
inc
mov
sub
into
xor
subl
jg
jne
inc
or
bound
jge
jg
jnp
outsb
roll
or
lcall
rorl
dec
xchg
in
and
test
loop
inc
mov
fdiv
pop
mov
int3
dec
xlat
adc
out
and
jns
mov
aam
jae
jg
test
mov
jmp
or
ficoms
adc
in
inc
add
fadds
lds
sbb
loop
and
outsl
jecxz
rorb
cmp
in
xchg
adc
outsb
xchg
shll
loopne
pushf
add
cmc
push
adc
mov
cmpsb
in
dec
jne
test
mov
iret
out
adc
out
pop
mov
cmc
and
ss
aas
sti
pop
test
cmp
add
xchg
repnz
push
adc
mov
addr16
push
aas
jmp
lahf
int
push
or
mov
insb
stos
mov
fcompl
repz
mov
add
cltd
cs
mov
or
cmp
nop
cli
fsubrl
dec
xchg
js
out
imul
int
push
cwtl
xchg
scas
cmp
mov
ds
iret
fld
fimuls
mov
or
and
scas
sbb
or
cli
lahf
and
mov
lcall
pop
adc
pop
pushf
push
test
lods
fstpl
mov
push
jl
or
sahf
sbb
or
xchg
adc
pop
mov
mov
push
mov
xchg
cs
data16
cs
stc
fisubrl
mov
mov
push
fsubrp
pop
and
scas
xor
outsb
scas
clc
fabs
aas
mov
mov
mov
pusha
outsb
outsb
outsb
outsb
fs
icebp
jp
orb
xchg
and
jp
addr16
or
pop
inc
sub
loop
sti
or
scas
push
in
ljmp
mov
or
cld
mov
aas
clc
insb
outsb
lahf
outsb
or
es
dec
ds
inc
jae
out
ret
test
mov
in
test
fadds
fsubrs
sarb
fwait
mov
pop
jne
stc
das
mov
add
mov
out
pop
sub
in
sti
xlat
push
xorb
sbb
fnsave
jae
pop
xor
inc
std
and
dec
int
int
ret
add
icebp
and
sub
adc
mov
cld
dec
mov
idivb
sub
mov
icebp
jp
call
ror
inc
pusha
aas
jns
mov
xlat
jb
jae
jo
cmp
lock
jbe
dec
xchg
es
cltd
push
lods
out
test
int
and
std
fiaddl
jl
ret
lds
sub
jae
loope
nop
out
mov
notb
jnp
cmp
gs
dec
inc
push
dec
mov
outsb
outsb
scas
jp
jno
je
add
sbbl
int
mov
rorb
jmp
add
out
out
sub
adc
add
jbe
mov
inc
push
repnz
cmpsl
add
cld
or
add
je
pop
div
pop
mov
sbb
jns
sub
paddusb
mov
lods
movsb
in
repz
std
loopne
cmc
fdivrl
adcb
or
mov
xor
inc
fildl
jnp
mov
mov
ljmp
pop
mov
clc
pop
icebp
mov
push
scas
pop
mov
pop
out
mov
push
jle
psubusb
add
insb
push
push
and
sbb
or
cmc
dec
lahf
int
shll
mov
jmp
and
jp
hlt
and
mov
stos
mov
iret
divb
pushf
dec
inc
mov
sbb
adc
xor
jp
or
js
enter
add
icebp
xor
insb
divb
in
push
cmp
pop
pushf
mov
out
out
outsl
or
aas
sub
jl
jne
lret
jecxz
xlat
out
cs
pop
add
mov
cwtl
sti
fnstcw
stos
dec
adc
in
in
addr16
mov
xchg
ret
test
cmp
ret
int
jns
scas
xlat
or
push
in
or
dec
sbb
loop
push
mov
adc
cmp
xchg
or
sbbl
hlt
in
clc
jge
sbb
movsb
sub
adc
jne
fs
sbb
jb
andl
push
lahf
in
ja
pop
dec
pop
inc
out
adc
and
ret
jae
jae
dec
mov
mov
int3
jle
inc
pop
push
and
jb
aas
in
jecxz
cmp
insb
mov
test
lret
and
pop
decl
dec
ret
cli
pop
pop
lahf
int
dec
xchg
or
fldenv
insb
inc
jmp
adc
lahf
add
adc
aam
cmpsb
pop
ja
pop
pop
test
cmp
or
stos
cli
mov
jg
jae
mov
iret
adc
test
out
xor
jae
in
ja
stc
in
and
aaa
ja
test
hlt
pop
add
decb
mov
jmp
cmp
mov
leavew
adc
push
push
je
insl
cwtl
push
inc
daa
mov
sub
xchg
pop
mov
fmull
inc
test
out
int3
popa
outsb
aas
fucomi
clc
pop
inc
adc
jbe
inc
loop
aaa
sbb
idiv
jl
outsb
outsb
int
inc
shll
dec
push
push
in
lcall
test
and
push
in
sahf
fcmovnbe
cld
in
in
jmp
cmp
xor
mov
icebp
into
or
xchg
add
ror
mov
pop
fdivrp
mov
dec
jae
jae
mov
mov
popa
cltd
outsl
call
add
jne
cmp
jbe
std
jl
and
push
cmp
pop
mov
imul
jecxz
mov
ret
ja
xlat
cli
sbb
fmuls
ja
sbb
mov
inc
mov
daa
add
jb
int
in
pop
fdivr
arpl
inc
rcll
nop
inc
add
sub
xchg
repnz
sbb
cld
call
and
or
in
and
mov
adc
jns
lock
cmpl
hlt
xchg
in
sub
pop
pop
xor
dec
cmp
mov
jl
int
lahf
leave
mov
jmp
xor
iret
jp
cmp
aas
jle
pop
push
outsb
outsb
outsb
out
push
lret
insl
pop
jno
pop
das
fcomp
jmp
loop
xchg
fs
outsb
outsb
bound
mov
dec
mov
pusha
std
or
push
outsb
outsb
js
xor
les
mov
outsb
outsb
outsb
mov
and
loopne
xchg
clc
inc
in
pushf
mov
test
int
add
jecxz
pop
mov
test
fdivrl
lahf
sarl
mov
inc
push
andb
rcll
repz
cmp
cmc
sub
push
sar
scas
lock
loopne
loop
clc
pop
cld
iret
cmp
addr16
xchg
fdivrl
std
stos
pusha
jbe
out
clc
outsl
xor
clc
insb
cs
daa
call
mov
in
xor
dec
inc
mov
push
dec
jae
ret
pop
rol
in
sbb
shlb
jae
mov
and
mov
or
cmp
fstp
arpl
dec
xor
and
pusha
pop
cmp
inc
loopne
xchg
sub
fsubp
idivb
push
mov
cmp
adc
iret
mov
stos
into
dec
jbe
dec
cmp
out
cmp
cmp
inc
in
lods
or
out
out
pop
xchg
sbb
lods
or
out
scas
adc
in
pop
jne
mov
ds
cltd
outsb
outsb
iret
into
aaa
test
orb
or
outsb
ja
push
mov
adc
jmp
mov
sarb
and
fisttpl
repz
cmp
outsb
outsb
outsb
outsb
es
hlt
cmc
lcall
mov
xor
cmpsl
cmpsl
sub
aam
aaa
aad
mov
and
and
aaa
aaa
aaa
aaa
shl
int
in
pop
push
xor
mov
sbb
jo,pt
sub
imul
aaa
aaa
ja
mov
pop
mov
push
outsl
negb
adc
lret
enter
out
xchg
cltd
adc
ficoms
sub
in
mov
hlt
jae
shr
adcl
xor
in
ret
inc
jecxz
jae
or
adc
aad
mov
push
pop
inc
push
loope
testb
test
ret
rcll
adc
lds
mov
jl
clc
mov
lret
int
loopne
loopne
in
sbb
js
fdivl
or
std
mov
faddl
imul
mov
jae
jmp
sub
adc
roll
ja
dec
into
inc
movsb
cs
mov
out
push
jnp
xchg
jmp
int
int
std
mov
fsubr
test
fmul
adc
pop
inc
add
mov
insb
out
fmul
insb
lea
push
sub
xchg
lcall
and
or
iret
je
shlb
fs
mov
mov
push
aad
out
adc
dec
out
scas
push
push
sub
lods
divb
jae
or
fldcw
es
push
sub
inc
cmc
cmp
in
or
and
ds
mov
adc
loope
cmpsb
mov
mov
testl
icebp
out
mov
nop
testb
inc
imulb
or
mov
xchg
enter
iret
out
out
shlb
andb
pop
or
aas
push
add
gs
cmp
int
adc
jecxz
push
daa
rcl
sbb
push
or
fwait
or
pushf
xlat
xor
int
in
xchg
pop
insb
insl
adc
adc
mov
arpl
imul
stos
sahf
cli
dec
out
out
jno
mov
ljmp
out
push
mull
subb
fimull
sahf
cli
int3
cmp
xor
int
int
ja
mov
shl
cltd
inc
xor
es
mov
xor
aaa
pop
jge
ljmp
push
nop
push
sarb
aaa
add
imul
mov
ss
aaa
jnp
and
cmc
jle
std
out
xor
and
mov
pop
jl
jecxz
rclb
jp
mov
dec
aam
adc
into
cmp
aaa
mov
fnstsw
sbbl
es
call
aad
cwtl
cli
fidivrl
add
mov
mov
out
out
loop
sbb
ds
popa
mov
push
cmpsl
jno
inc
cmpb
sbb
and
sbb
push
or
jbe
xorl
outsb
imul
out
rolb
sub
mov
insb
es
pop
or
dec
out
aas
adc
jnp
ficompl
imul
jmp
xchg
xchg
or
adc
pop
jl
push
jl
int
sti
addr16
xor
sub
sbb
mov
pop
xchg
js
test
jae
jae
mov
and
adc
mov
lar
int
jae
mov
je
ja
jp
inc
mov
int
cmp
sbb
xchg
mov
inc
ds
mov
xor
xchg
jge
jg
sti
fdivrl
pop
subb
push
adc
jae
pop
xchg
movsl
jle
test
xchg
fisubrs
fbstp
cmp
add
xchg
inc
iret
out
mov
inc
rorb
jge
iret
int
pop
sub
xchg
out
push
jge
addr16
ss
cmp
jmp
dec
mov
mov
inc
rcl
test
jae
sti
push
fnstsw
add
repz
scas
mov
push
stos
push
aam
test
daa
test
mov
jmp
in
xchg
lcall
fcmovne
lods
es
divb
mov
in
addl
out
mov
popa
or
xchg
xor
adc
out
mov
mov
lret
out
pop
adc
dec
pusha
in
bound
fst
pop
pop
pop
loop
xchg
mov
mov
adc
jl
dec
idivl
cwtl
clc
shlb
push
mov
adc
jae
fdivrl
aaa
aaa
cmp
xor
es
lret
fmull
jnp
jmp
rorb
in
das
call
mov
out
leave
fadds
iret
int
cli
fwait
jp
sub
outsb
cs
cmpl
lds
imul
jbe
rclb
jl
mov
out
sahf
fs
loop
jns
pop
xor
mov
mov
mov
sbb
test
mov
movsb
jp
cli
loop
sub
lret
adc
loopne
movsl
xor
ds
outsl
jne
add
mov
stc
add
in
movb
lcall
pusha
push
jecxz
cs
stos
repnz
xor
cmc
mov
push
pop
mov
sub
js
outsb
sahf
sbb
sub
xor
lods
and
iret
out
lret
out
and
loopnew
or
daa
cmp
imul
data16
pop
dec
push
inc
test
jecxz
mov
pop
dec
jl
faddl
mov
fcomps
clc
adc
cld
or
and
out
mov
cmc
outsb
lahf
fwait
fwait
jl
mov
push
mov
mov
in
pop
sbb
mov
insb
fsub
out
jl
jbe
mov
repz
inc
clc
or
adc
pop
mov
dec
sbb
jae
ror
sub
lods
cmp
sbb
movsl
lods
and
push
orb
fcompl
hlt
mov
outsb
cmp
cmp
mov
or
inc
dec
int3
jg
ds
inc
test
fisubs
xor
mov
mov
sahf
fwait
mov
cwtl
cmp
xlat
mov
push
in
movsb
mov
movsb
dec
jo
xchg
aam
aam
call
stos
xchg
add
lods
pop
adc
pushf
shl
mov
jbe
inc
sbb
mov
pop
pop
ret
mov
push
jge
iret
rorb
jmp
mov
fsub
ljmp
daa
loop
shl
sub
push
jns
fs
push
xor
sub
fldt
out
xchg
jne
cmp
hlt
add
shll
cld
cmpsb
cs
mov
pusha
jp
aam
push
mov
lods
aaa
lret
out
ljmp
fs
das
test
pop
iret
insl
gs
inc
test
jno
pop
add
ret
out
mul
loope
cmp
jb
int3
dec
in
adc
out
fwait
out
mov
xor
and
cld
rolb
nop
ret
int
in
popa
mov
jp
sbb
jp
xchg
add
mov
loope
loopne
dec
loop
movsb
jge
or
jns
xchg
nop
js
cmpsl
jle
lods
cmp
stos
outsb
jno
push
icebp
out
data16
enter
mov
loope
lea
cli
sbb
push
sub
xchg
scas
xchg
sahf
test
cmp
add
mov
scas
ficoml
movsl
push
lea
testb
outsb
outsb
outsb
outsb
ret
sub
mov
jecxz
xor
outsb
outsb
outsb
outsb
xlat
pushf
or
in
jle
outsb
shlb
js
orb
std
mov
mov
mov
addr16
out
push
cmp
hlt
mov
scas
xor
pop
mov
pushf
ds
pxor
and
insb
loop
orl
jae
ss
mov
dec
je
dec
sbb
ljmp
cmp
fxch
es
das
ds
mov
mov
flds
jp
lock
scas
or
aaa
out
les
iret
out
dec
cmc
dec
clc
xchg
fdivrs
outsb
outsb
sahf
ss
dec
pop
loope
pushf
lea
sbb
dec
mov
xor
ss
jnp
mov
sub
xor
mov
outsb
dec
jo
cwtl
xorb
insb
dec
dec
mov
inc
lcall
mov
lock
addr16
and
aaa
rcr
outsb
rorb
pop
loope
sti
test
shlb
out
or
je
pmaddwd
std
rolb
cmp
popa
xchg
fcompl
jne
jl
push
insb
inc
pop
pop
sub
clc
into
clc
mov
and
mov
iret
gs
pop
into
and
sti
pushw
dec
pop
sti
fsubrl
xlat
jecxz
xchg
pop
mov
repnz
in
jae
lds
pop
orl
push
mov
lahf
ror
int
int
ljmp
testb
iret
or
dec
pop
cmp
inc
adc
shl
add
dec
popf
push
jae
aaa
mov
mov
pusha
loopne
aam
and
sub
stos
mov
out
mov
push
cltd
xchg
and
and
inc
call
sbbl
pop
mov
int3
aas
test
fldt
pop
scas
insb
pop
and
fstl
xchg
aas
jnp
mov
sub
mov
loop
mov
pop
lea
push
sub
das
mov
outsb
outsb
outsb
outsb
pushf
mov
jnp
sub
das
imul
pop
out
mov
sbbl
lods
dec
jp
pop
out
out
jno
repnz
loopne
adc
sahf
or
jne
mov
sub
fcoml
adc
fdivrl
mov
cmp
xchg
cs
jl
out
pop
lds
sahf
mov
mov
cmp
mov
sti
gs
push
adc
in
imul
out
jae
jae
insb
ret
int3
sub
nop
cmp
adc
mov
sbb
jge
out
and
les
xor
stos
stos
adc
outsb
js
mov
sub
cmp
data16
xchg
mov
loope
mov
imul
dec
loop
scas
ja
outsl
addl
enter
mov
xchg
push
sahf
fwait
fwait
sub
dec
fdivs
jo
ss
jge
push
push
dec
and
cmp
out
std
lock
jp
sub
out
mov
fdiv
inc
repz
or
add
cmc
into
xor
out
xchg
clc
cs
sub
jl
into
rcr
mov
pop
jo
sarb
inc
pop
push
roll
fsubl
push
pop
bound
adc
out
std
repz
test
cmp
outsb
lods
sbb
sub
outsb
push
out
sub
jnp
mov
outsl
fildll
outsb
outsb
movsl
push
cs
lret
pop
sti
dec
fldt
outsb
int3
rdtsc
lret
sahf
mov
aad
mov
test
push
add
and
mov
loope
pop
pusha
fcmovne
inc
shrb
fs
movsb
mov
int
repnz
in
repz
out
mov
es
pop
mov
test
jmp
inc
add
popa
decl
mov
imul
jmp
adc
adc
push
pop
pop
lock
mov
jmp
cmpb
sahf
scas
mov
pop
fisttps
fstps
cmpsb
cmpsb
jg
lock
loope
cmp
sti
jbe
and
out
sti
dec
cmp
stc
lahf
in
jae
sub
jns
bound
sbb
jae
xchg
jle
inc
jmp
neg
es
mov
dec
mov
fisttps
pop
and
jno
sarb
lock
mov
mov
jecxz
add
jo
and
dec
mov
call
jb
mov
rclb
jae
lea
stos
inc
add
adc
repz
lock
pop
loop
mov
cli
jge
xor
sub
sbb
fldcw
outsb
addr16
fdivl
outsb
lahf
shl
xchg
hlt
mov
imul
icebp
repnz
inc
cmc
aaa
aaa
aaa
aaa
xchg
mov
dec
and
lret
cmp
aaa
aaa
out
int
pop
gs
pop
mov
sti
fwait
pop
push
loope
out
in
andl
arpl
mov
add
ds
mov
pop
es
std
sahf
xor
insb
mov
cmp
psllw
inc
out
mov
sub
aaa
mov
jae
aaa
fimull
leave
inc
shrb
mov
ds
aaa
aaa
cli
scas
push
popa
sti
inc
dec
adc
fwait
or
jae
outsb
inc
out
sbb
insb
aam
cmp
insl
fisubl
and
addr16
jbe
rorb
fldcw
push
mov
sbb
add
leave
xchg
outsb
outsb
outsb
aas
imul
int
mov
push
push
shll
jge
mov
decb
dec
fs
int
in
shlb
dec
jg
cmc
daa
mov
add
inc
and
out
sets
add
icebp
mov
lods
iret
inc
lock
shlb
mov
cld
insb
outsb
outsb
shll
jne
xchg
inc
icebp
mov
test
pusha
rolb
aam
insb
outsb
outsb
cs
mov
cmpsl
xlat
pop
sarl
aaa
mov
std
je
and
xchg
ss
aaa
les
or
cmp
lret
fcomi
inc
sbb
in
orl
cli
sahf
fwait
fwait
orl
mov
xchg
movsl
out
testb
xor
push
pop
std
jbe
mov
out
fcmovnu
sti
xor
inc
loop
sub
pop
mov
fs
push
jbe
test
aaa
aaa
aaa
aaa
mov
into
push
mov
cmp
ds
cmp
std
es
das
pushf
xor
cli
cwtl
mov
rorb
daa
pop
fdivrs
ret
outsb
outsb
sbb
mov
jae
or
idivb
in
cmpsb
jmp
or
sub
out
out
dec
sub
stos
mov
sahf
call
pop
mov
or
ret
fwait
pop
pop
sahf
cmp
xchg
leave
daa
outsb
outsb
outsb
outsb
rolb
loopne
sbb
lret
movsl
pop
lock
sub
ficomps
jmp
daa
mov
mov
jp
pop
mov
fisubl
dec
fcomi
in
jl
aaa
icebp
nop
inc
mov
dec
loope
fsubp
or
imul
sub
jl
sbb
mov
inc
imul
test
fwait
fwait
fwait
xchg
roll
dec
add
popf
xor
mov
idivb
sbb
out
in
les
ds
add
and
aaa
push
cmp
in
ss
dec
aaa
or
stos
inc
hlt
insl
mov
inc
jecxz
jge
and
pushf
pop
cmc
add
aad
sub
outsb
outsb
mov
cmp
dec
and
cwtl
push
jmp
repz
repz
notb
push
ret
xor
js
hlt
xchg
rcr
es
fwait
fstpt
cmpsb
add
cltd
adc
xor
fwait
fwait
inc
sub
adc
cmc
imul
fwait
fwait
fwait
in
and
rcrl
insl
mov
fwait
jle
fwait
jecxz
add
inc
inc
mov
arpl
in
or
ret
dec
and
int
xorl
cmp
aas
test
add
mov
loopne
sahf
sbb
pop
mull
jne
lock
lcall
popl
fnstcw
cmc
filds
lret
mov
mov
int
push
stos
dec
sub
sbb
aaa
aaa
aaa
aaa
lods
dec
mull
push
xorl
xchg
jbe
add
aam
pop
icebp
and
push
and
scas
jae
mov
loop
push
scas
lock
in
sub
push
aad
lods
arpl
lock
cmp
fdivr
insb
loope
inc
jo
pusha
pop
push
xchg
ja
jae
mov
mov
or
add
stc
nop
sahf
push
mov
mov
inc
pop
mov
pusha
sbb
sub
fprem1
dec
xchg
mov
outsb
das
scas
ss
mov
rcll
pushl
jge
pop
out
push
les
lea
jae
int
aad
sub
nop
push
inc
jle
out
addr16
xchg
adc
push
popl
sub
sub
fcompl
mov
dec
rorl
jle
cmp
xchg
aaa
push
out
push
adc
int
in
addr16
dec
addr16
dec
mov
shl
out
iret
das
dec
sbb
pop
push
inc
les
sub
stos
iret
int
aaa
dec
xor
or
or
jmp
clc
jns
ds
mov
mov
insb
lods
dec
stc
rcrb
das
mov
ret
mov
ficompl
out
jl
add
aaa
ja
cmp
pushf
popa
insb
outsb
scas
clc
fcmovbe
insb
cmp
out
cmp
push
push
add
ret
out
push
mov
xchg
cmp
gs
das
ret
mov
jecxz
add
cs
aaa
fwait
out
inc
mov
xlat
aas
sbb
rcr
xor
pop
repz
jmp
xchg
xchg
fwait
out
repnz
inc
movsl
sub
inc
pop
andb
cmpb
add
push
ret
test
add
iret
or
dec
test
cmp
testl
ja
adc
in
cmpsb
push
lds
in
mov
addr16
iret
pusha
mov
in
gs
mov
add
pandn
inc
sahf
jno
sbb
addr16
sbb
scas
or
or
nop
shr
mov
addr16
inc
or
rorb
sahf
mov
jbe
mov
jnp
cmp
inc
inc
int3
push
rcl
jae
mov
mov
imul
pop
cmc
push
out
xchg
add
jle
pop
hlt
test
xor
mov
ljmp
push
dec
out
pushf
vcvtpd2dqy
cmp
cld
cmp
iret
sub
fwait
mov
adc
clc
pop
sub
stos
jmp
dec
cmp
jnp
ds
or
pop
add
sub
stos
dec
stos
out
mov
aaa
pop
arpl
leave
and
jge
sti
sahf
xlat
sbb
cmp
daa
sahf
mov
imul
dec
xchg
jge
add
xchg
rolb
pop
ja
mov
lahf
cmpsw
lods
in
mov
mov
cli
dec
xchg
lock
and
repz
jno
mov
mov
mov
test
mov
mov
sahf
dec
pop
test
test
mov
lahf
xor
int
int
fistps
xor
cli
lret
int
in
mov
inc
fstpl
loopne
inc
sub
hlt
bound
inc
icebp
inc
mov
dec
rcl
in
jae
aad
rorb
adc
pop
xorl
xchg
dec
sub
sbb
mov
xchg
aad
lahf
or
xchg
cmp
push
pop
mov
stos
jmp
out
cmpsb
add
inc
mov
or
jns
cwtl
stc
or
mov
icebp
jns
fcompl
xlat
and
stc
pop
jge
fwait
sbb
add
pop
int
pop
cltd
inc
sarb
aaa
aaa
out
enter
pop
pop
mov
enter
pop
fstl
cmc
in
fdivrl
outsb
movsl
xchg
clc
pop
jne,pt
sbb
jecxz
ret
mov
xchg
int3
orl
scas
clc
mov
rolb
pop
and
push
jl
icebp
insb
cwtl
jno
xchg
and
mov
ljmp
push
and
fs
test
iret
pop
das
lods
les
and
outsb
jg
das
cs
fistl
es
fwait
imul
sar
sti
dec
mov
xchg
lock
or
icebp
test
xor
or
in
int3
or
push
xchg
mov
std
jle
mov
and
mov
ds
test
adc
jle
sbb
or
push
cmp
ds
fiaddl
pop
int
int
add
test
mov
sub
lods
mov
int
adc
lock
ret
mov
xchg
xchg
jg
dec
mov
int
in
xor
test
pop
out
mov
mov
int
sti
or
scas
mov
adc
jge
clc
push
pop
ds
aaa
aaa
ja
inc
cli
xchg
or
push
or
mov
jae
jge
mov
jb
inc
xchg
insl
dec
mov
adc
scas
mov
into
xchg
ret
inc
int3
jnp
arpl
pop
ret
je
push
outsb
mov
pop
mov
notb
hlt
jle
xchg
or
xchg
or
out
jp
mov
pop
push
pushf
aas
push
push
out
loopne
jle
mov
mov
pop
sub
andb
mov
out
xchg
out
rcrb
mov
sar
lds
fdivrl
leave
pop
les
lcall
lock
push
dec
inc
pushf
iret
int
sub
jle
cmp
in
adc
xor
mov
cmp
cmp
cmpsl
data16
jae
mov
pop
mov
outsl
in
jae
jae
xlat
xor
xor
sti
add
addb
int
scas
das
pusha
nop
movsl
lods
pop
sarb
jnp
lahf
mov
and
clc
fcmove
es
lret
fdiv
push
hlt
mov
rol
out
sub
pop
loope
fdivrl
mov
in
stos
push
xchg
mov
call
mov
out
pop
loop
push
fdivrl
cmpsb
xchg
push
mov
jge
jns
jo
cmpsl
out
test
mov
call
jo
pusha
push
mov
js
les
inc
inc
pusha
in
jnp
ss
aaa
aaa
sub
imul
push
dec
add
jle
rorl
push
in
stos
mov
pushf
or
scas
jge
xor
out
mov
cmc
nop
mov
mov
stc
fstpt
fists
das
dec
inc
out
loop
xchg
enter
mov
push
cmpsl
test
aaa
aaa
aaa
sahf
adc
inc
adc
aaa
aaa
aaa
int3
cld
sbb
inc
mov
lock
push
scas
cmp
mov
dec
aam
insb
jo
dec
sbb
outsb
cs
fdivrl
jbe
jno
mov
cld
insb
outsb
outsb
cmp
test
sub
pop
aad
je
scas
imul
jae
lods
xchg
mov
ret
jge
add
scas
fimuls
ds
fcompl
stos
mov
cwtl
cli
dec
mov
mov
jae
mov
in
or
inc
jns
out
out
iret
xchg
popf
icebp
mul
add
mov
inc
ret
pushaw
jecxz
push
pop
cmp
outsb
mov
mov
ss
loopne
pop
fdivl
sub
scas
out
sar
jle
or
xor
dec
mov
or
dec
orl
add
lds
lea
or
addr16
lahf
int
cmpsl
aam
adc
aaa
mov
fcompl
dec
adc
mov
pushf
adc
out
cli
adcb
js
les
enter
mov
xor
lea
decl
clc
pop
adc
repnz
or
push
xor
in
push
xchg
mov
sarb
pop
ja
xchg
jns
jnp
pop
mov
pop
loopnew
push
mov
in
in
dec
inc
sbb
ljmp
out
test
dec
int
push
ret
out
out
xchg
xor
adc
push
and
or
inc
incb
lods
stc
test
fwait
jle
cmp
lcall
fwait
fwait
into
cmpsl
jnp
iret
addb
adc
popf
mov
inc
pop
ret
fsubr
es
divb
out
sub
cmp
repnz
jp
std
cld
sahf
add
es
les
test
cmp
dec
nop
jb
inc
jbe
pop
mov
add
movsb
js
push
adc
xchg
fwait
fwait
hlt
cmpsb
mov
sub
fucom
int3
fiadds
adc
popa
and
test
iret
out
and
adc
iret
int
das
scas
std
scas
data16
mov
pop
lret
outsb
rcl
lea
js
sbb
fs
push
in
jae
mov
mov
repz
addr16
sub
jo
xor
test
in
mov
subb
jne
adc
xor
ljmp
mov
and
insb
xor
mov
pop
mov
int3
bound
clc
cmp
js
cmp
lock
enter
mov
shlb
gs
adc
mov
xor
mov
sysenter
dec
sbb
jmp
mov
jl
lock
mov
push
sbb
in
dec
adc
inc
aas
fwait
arpl
jg
mov
aaa
aaa
ja
sti
add
push
inc
out
jae
sbb
fsubl
stos
es
fwait
or
mov
cmp
das
and
cld
icebp
es
add
or
pop
push
and
pop
pop
imul
addr16
jecxz
jae
jae
and
daa
imul
ljmp
sahf
std
dec
clc
aad
jl
xchg
fwait
jl
jbe
jl
mov
ljmp
xchg
out
pop
movsb
add
insb
push
popf
mov
pop
loopne
test
je
cli
ds
inc
mov
adcb
test
adc
or
mov
decb
cli
adcb
mov
fwait
outsb
adc
repnz
nop
mov
push
fcoml
add
fstpt
dec
int3
clc
xor
clc
push
cmp
fadds
xor
int
adcb
shrb
js
rcrb
xor
aaa
aaa
std
xchg
ds
rolb
jecxz
and
xlat
jnp
pop
cmpb
outsl
push
inc
ret
in
dec
sub
xchg
cmp
jp
test
iret
int
scas
call
push
cmp
clc
adc
enter
mov
mov
jg
jmp
aaa
ja
in
jecxz
pop
fwait
pop
mov
sub
jle
fldcw
pop
mov
cltd
lods
cmp
out
mov
popa
dec
call
or
out
push
mov
out
jb
mov
mov
aaa
cltd
push
jp
out
stos
addr16
pop
xchg
mov
lock
das
sbb
sub
xor
subb
fmull
pusha
iret
push
stc
inc
iret
lcall
lcall
js
test
bound
aaa
ja
pushf
adc
in
jb
push
std
testb
pop
cmpl
shlb
sbb
outsb
outsb
outsb
jle
mov
mov
repnz
test
insb
outsb
outsb
jae
std
sub
push
jp
mov
push
popf
lock
out
out
lret
adc
repnz
mov
and
out
jae
scas
fistpll
aam
dec
out
subb
mov
clc
xchg
inc
mov
in
dec
jl
outsb
lea
or
mov
out
push
jns
mov
mov
stc
int
adc
addr16
iret
incl
in
or
fwait
aaa
aaa
ja
je
aaa
xchg
cmp
dec
fisubrs
jl
xor
js
cld
cli
dec
cs
faddl
outsb
outsb
outsb
outsb
push
icebp
lcall
jno
gs
outsb
outsb
outsb
outsb
imul
les
cld
insb
outsb
cmp
popf
ds
popf
mov
xchg
pop
in
cwtl
stos
mov
mov
aas
gs
add
dec
jns
int
jno
ds
aaa
aaa
ficoms
lods
push
pop
xlat
mov
fwait
fwait
sbb
sbb
stos
rorb
push
out
mov
jp
ljmp
dec
pop
aam
out
pop
sbbl
mov
mov
cmpsl
aas
fldt
or
xchg
or
icebp
jno
mov
jge
fiaddl
out
fidivl
idivb
shll
das
inc
adc
cmpsl
int
int
lods
and
inc
mov
xchg
jg
imul
adc
xchg
mov
mov
or
stc
sub
sub
or
daa
sti
xchg
dec
rcl
xchg
adc
int
in
addr16
lret
sbb
mov
int
int
jne
cmpl
jecxz
in
xchg
adc
cmp
fdivrl
jno
fwait
ds
loopne
xchg
sbbb
negb
push
mov
fisttps
pop
aas
fdivr
or
out
and
das
enter
pop
fcomi
sbb
jo
add
in
in
fidivrl
rorb
cmp
pop
or
rep
fildll
adc
fcompl
sbb
jnp
dec
jecxz
push
adc
xor
jbe
in
jae
pop
xor
cmp
inc
sbb
push
push
out
mov
scas
xchg
out
clc
inc
out
scas
mov
int3
sbb
lock
cld
insb
mov
mov
call
outsb
sbb
dec
or
movsl
hlt
mov
fcmovbe
xchg
xchg
cmp
pop
mov
push
out
xchg
dec
add
pop
mov
iret
out
sbb
and
loop
rcl
mov
mov
fdivrl
in
push
adc
adcl
mov
jmp
bound
cmpsl
pop
sub
mov
xor
sti
sbb
xor
mov
mov
addr16
ljmp
insb
pusha
arpl
out
out
aad
inc
sbb
add
imul
cmp
lds
sbbl
outsb
outsb
outsb
cmpsl
mov
lcall
stos
adc
outsb
pop
pop
xchg
sub
pop
xorb
call
icebp
aam
pop
scas
out
out
push
pop
inc
popa
jnp
cwtl
mov
out
out
jg
sub
inc
lret
fld
lods
fwait
fldt
in
out
jns
pop
incb
fmuls
xchg
sub
int
or
divb
pop
cmp
pop
push
lahf
aam
sbb
iret
out
cmc
shll
push
push
inc
je
jb
jae
jg
sbb
sbb
mov
dec
repnz
sbb
sbb
lahf
fwait
sbb
mov
lods
jp
outsb
aas
test
adc
in
lea
xchg
mov
std
jno
sahf
push
mov
filds
bound
push
mov
add
rcr
jg
mov
int
xchg
fcoml
or
addr16
mov
push
push
aam
mov
sti
dec
xor
sub
call
rorl
popf
sub
fadd
pop
stos
pop
cmpb
xchg
daa
pop
jbe
stc
adc
mov
rorb
aad
in
or
call
out
out
decl
int3
iret
fisubs
lock
push
out
or
test
sbb
mulb
cmp
cmp
mov
out
out
pop
insl
std
adc
cmp
fcmovne
cmpb
push
mov
sbb
lock
incb
sbb
fsubrs
mov
add
jne
scas
outsb
cwtl
loopne
bound
xor
sahf
mov
lea
aaa
aaa
aaa
in
addr16
test
pop
mov
aam
pushl
aaa
aaa
aaa
loope
mov
popa
jp
pop
mov
aaa
aaa
aaa
xchg
cmpsb
add
loop
xor
push
arpl
mov
sub
inc
aas
fwait
std
in
sub
pop
pop
xor
aaa
aaa
add
stos
roll
out
testb
xor
mov
mov
or
fcmovne
out
cmpsb
cmpsb
scas
mov
add
lahf
fwait
fwait
fwait
jbe
cmc
pushf
sbb
in
outsb
outsb
outsb
xchg
adcb
into
subb
sub
pusha
ds
call
mov
sbb
dec
jb
cmp
cmp
lock
sahf
decb
fwait
fwait
fwait
mov
shlb
ds
fwait
push
dec
into
sbb
mov
aaa
aaa
aaa
jge
cmp
dec
mov
pop
dec
test
add
aaa
aaa
aaa
sub
xor
rclb
popf
xlat
sub
jo
mov
stos
xchg
insb
fwait
mov
cmc
add
mov
inc
push
fadds
mov
sar
shl
daa
scas
jge
mov
pop
insb
xchg
fidivl
pavgw
cs
cld
test
int3
jb
mov
dec
jno
inc
mov
insl
jbe
inc
outsl
jle
fwait
fwait
fwait
fwait
inc
mov
imul
mov
cld
fsubl
outsb
outsb
outsb
outsb
xchg
or
testl
mov
mov
ds
cmp
cwtl
testb
aad
lock
pop
arpl
xor
clc
fwait
fwait
fwait
pop
adc
out
fadds
sub
inc
jl
outsb
lahf
pop
rorl
in
cs
adc
repz
addl
mov
and
cld
lcall
pop
out
lods
xchg
aas
xor
fstpt
pop
push
dec
imulb
scas
fld1
mov
sbb
mov
insb
popf
add
fdiv
mov
xchg
sub
xchg
sub
stos
cwtl
xchg
add
call
fs
ljmp
xor
inc
cmp
daa
and
and
xchg
xchg
jne
scas
iret
int
dec
movsl
sbb
mov
pop
cld
in
adc
ss
dec
xor
subb
and
iret
aaa
aaa
aaa
aaa
in
lret
fnstsw
fidivrs
ljmp
add
fisubrs
add
inc
add
pop
dec
outsb
je
addr16
add
sbb
push
push
push
je
imul
out
iret
pop
add
clc
xor
push
or
repz
add
pushf
pop
push
dec
bound
arpl
rol
fidivs
pop
sbb
loop
jae
sbbl
insl
adc
jb
popa
arpl
cltd
or
pop
inc
add
in
sti
pop
fs
addl
jmp
insb
test
aas
or
leave
mov
xchg
fidivl
cs
adc
cmc
jl
lods
or
aas
or
and
inc
and
fnstcw
push
or
push
lea
jmp
in
sti
and
pshufw
in
mov
in
in
pop
pop
push
push
in
in
dec
dec
inc
inc
in
in
cmp
xor
in
in
xor
cwtl
in
in
xchg
nop
and
in
in
test
mov
in
adc
push
add
mov
pop
mov
call
sub
je
movzwl
fmull
fisttpl
ret
addr16
dec
inc
sahf
pushf
add
sar
hlt
cld
fldt
lock
hlt
mov
cmp
jne
push
stc
fldcw
add
push
sub
xor
mov
add
jmp
mov
mov
pop
mov
mov
rorb
add
push
lret
std
out
out
pop
or
inc
cmp
jne
mov
pushf
sub
jae
pop
js
cpuid
mov
or
in
rcl
and
add
push
push
sbb
mov
mov
out
dec
repz
lock
incb
jmp
mov
lahf
mov
add
adc
mov
insb
pop
and
into
mov
pop
pop
mov
mov
adc
outsl
jo
inc
adc
jl
dec
add
int3
pop
or
pop
push
in
loopne
mov
lock
decb
inc
push
pop
jo
pop
push
push
repz
mov
lret
add
paddsb
sbb
enter
jp
fadds
or
fisubrs
pop
or
add
push
add
cmp
jne
cmp
das
inc
pop
cmp
jne
mov
mov
xor
cmp
xor
jo
pop
pop
pop
lcall
hlt
or
aam
mov
mov
mov
loopne
jbe
add
fbstp
push
and
push
add
mov
aas
in
movhps
pop
push
cmpl
push
push
aas
in
les
add
dec
imul
sbb
out
sbbb
mov
add
sub
mov
sub
cld
dec
or
addr16
pop
roll
jmp
and
push
inc
add
jne
adc
addl
nop
xchg
fldenv
mov
pop
mov
dec
adc
fidivrl
push
push
add
cld
mov
test
je
xor
in
loope
inc
xlat
pusha
aam
orb
dec
enter
bound
sub
dec
xchg
negb
jge
push
lahf
push
pop
icebp
popf
out
inc
xchg
pushf
sbb
aas
call
xchg
cmp
sub
repz
mov
or
adc
pop
jecxz
pop
cmp
mov
imul
stos
lods
mov
jb
lcall
jo
ja
and
jae
or
lods
mov
inc
push
insb
cwtl
jbe
or
dec
jo
or
jne
pop
sub
mov
scas
jno
clc
addl
cmp
jne
push
pop
xchg
ja
mov
je
jno
inc
sub
xchg
pusha
push
inc
mov
fucomip
divl
mov
ret
mov
and
mov
cmp
loop
mov
loopne
lcall
sbb
pop
jmp
or
add
adc
or
jmp
jbe
ja
or
sbb
lahf
cmp
push
push
es
rolb
adc
in
out
setp
andl
pop
mov
js
ljmp
sbb
enter
inc
pop
pop
pop
roll
or
xchg
push
aaa
add
outsb
inc
add
test
insl
cmp
xor
lahf
div
inc
pusha
cs
not
mov
rorb
out
adc
inc
cmp
jg
mov
xor
rolb
push
pop
mov
cmp
fildl
inc
mov
out
leave
pop
outsl
ds
shrb
jne
add
shlb
lds
jo
fstl
mov
or
inc
or
or
cli
mov
into
add
out
iret
jne
into
push
sbb
rcrb
data16
cmp
or
pushf
outsl
xor
pop
pop
mov
sub
fwait
push
add
add
or
mov
adc
cmp
adc
sub
sub
rorb
test
mov
jbe
inc
push
xchg
jmp
stc
cltd
add
cld
cmp
jne
pop
jg
dec
jl
cmp
xorl
add
clc
inc
lock
adc
rcll
pop
cmpsl
dec
pop
in
dec
leave
lea
add
roll
shlb
shrb
push
jbe
rcrb
pop
test
add
mov
push
mov
pop
dec
test
je
pop
mov
or
aam
sbb
unpcklps
ja
jmp
fisubs
int
scas
push
mov
push
dec
push
push
les
fdivrp
xor
adc
add
cmpb
rclb
and
jbe
je
adc
push
mov
sub
mov
add
hlt
inc
cmp
jecxz
jne
movl
push
cld
sub
aaa
pop
js
adc
mov
shl
add
bound
pop
fs
lret
dec
negl
cmpsl
subb
ret
push
sub
in
pop
dec
test
scas
test
mov
loope
out
call
sbb
stos
mov
xlat
add
dec
mov
shl
inc
clc
jmp
or
mov
push
jne
fimuls
fcompl
inc
xor
cli
and
add
push
sub
jne
repz
sbb
cmp
pop
and
inc
pop
xlat
clc
cmp
add
and
adc
cmp
jecxz
dec
fdivs
test
jns
ret
cli
add
aas
nop
hlt
jmp
sub
sbb
mov
sbb
hlt
mov
adc
mov
sbb
cmp
push
mov
push
and
adc
fimuls
outsb
test
ret
sbb
push
or
sbb
add
mov
jnp
decb
xchg
pop
add
sub
lea
mov
cli
adc
movl
sub
shld
pcmpeqd
add
cld
int3
ljmp
add
jle
xor
ljmp
push
mov
add
or
insb
sar
stc
mov
fwait
or
ret
inc
push
push
push
add
lret
xor
cmp
sti
cltd
jmp
leave
sub
ret
sbb
lock
add
sub
jl
or
xor
jo
xchg
xor
add
add
les
out
fdivs
testb
and
mov
push
repnz
arpl
pop
daa
jle
inc
xor
pop
cmpsl
hlt
xor
xor
das
or
out
imul
movl
or
sub
xor
std
in
cmpb
sub
push
movl
dec
test
mov
xchg
or
test
fisttps
xor
cmp
xchg
cmp
aad
test
jp
in
sbb
mov
shlb
lea
shl
add
push
xor
mov
mov
or
mov
push
fistpl
jo
xor
mov
add
or
sbb
xchg
and
jo
add
loope
fcomps
loope
lret
and
divb
addb
nop
inc
aas
xchg
adc
inc
mov
fwait
ja
cmc
or
cmp
or
leave
push
call
and
cltd
scas
testb
pusha
lock
cmpl
repnz
inc
repnz
pop
es
sub
or
sbb
mov
jns
sbb
jecxz
movsb
test
sub
movsl
mov
dec
adc
inc
mov
loopne
hlt
fdivs
movsl
xor
pop
add
stos
add
mov
jae
xor
sub
addl
push
in
sar
roll
mov
enter
mov
xor
fsub
mov
lea
or
fs
push
adc
cmp
add
insl
inc
mov
pusha
or
mov
fsubrs
mov
or
jge
mov
cmp
dec
xor
cmp
out
add
mov
inc
int
mov
sbb
mov
stos
mov
cmp
sbb
lods
inc
fs
push
mov
or
insl
and
jbe
pop
je
cs
les
push
push
xchg
jmp
addb
mov
fdivs
adc
pop
dec
mov
or
mov
pop
adc
pop
fisubrs
clc
cltd
daa
shrb
aad
jmp
mov
jo
mov
push
mov
mov
and
shrb
xchg
imul
or
dec
jne
lahf
orb
shrb
ficomps
aad
push
mov
adc
push
mov
adc
or
je
clc
and
sbb
jle
inc
cld
adc
or
ret
and
add
and
addr16
ret
cmp
add
xor
mov
push
clc
jb
lcall
fsubs
in
rcll
mov
push
sub
sbb
lock
mov
cmp
jne
aaa
jmp
xchg
pop
sub
hlt
pop
or
ficompl
inc
insb
mov
pop
cmp
loope
xor
push
sub
inc
cld
test
inc
sarl
sbb
cltd
jg
sub
movsl
or
ljmp
push
insl
mov
or
pop
dec
push
and
and
inc
cld
pop
pop
add
mov
lock
add
gs
jne
out
bnd
or
into
jmp
adc
pop
clc
inc
ss
mov
mov
test
jne
cltd
or
sahf
decl
sbb
fwait
shrl
stos
push
add
or
enter
bound
test
pop
icebp
and
cmp
cmp
lock
pop
push
js
sub
ret
cmp
fldl
xor
stos
jle
dec
out
xor
push
lock
test
je
sub
push
addr16
add
or
lahf
jbe
cmp
or
jmp
push
repnz
pop
aaa
outsb
or
orb
or
test
sub
pop
pop
push
mov
cmp
xor
cmp
es
jge
loope
dec
js
mov
and
add
repz
adc
nop
mov
sub
out
cmp
push
je
orl
outsl
push
add
sbb
out
in
mov
xchg
add
inc
adc
or
aad
std
mov
lret
fwait
std
int
push
sub
mov
cltd
cmpsl
mov
sub
rcr
divps
cmp
jg
sub
add
negl
mov
sub
in
sub
xchg
and
mov
fdivs
fdivs
das
mov
add
les
mov
lds
push
shrl
push
movsl
sub
test
das
mov
lret
dec
add
pop
dec
jl
xor
jmp
sub
sub
sub
aaa
push
adc
scas
add
sbb
xor
adc
xor
add
sbb
les
jg
push
fcomps
add
add
push
mov
test
push
jge
cmp
mov
adc
lret
xchg
push
sbb
in
je
adc
lea
xor
test
jle
nop
call
fs
push
mov
sbb
add
dec
scas
out
push
adc
jnp
jno
or
ret
dec
sti
jg
mov
xor
mov
dec
inc
pop
dec
mov
sbb
ds
pop
subl
bound
sar
out
pushf
xor
out
mov
dec
stc
sbb
sbb
loopne
ret
xor
adc
dec
ret
inc
orb
or
sarl
test
jne
jnp
add
movaps
icebp
cmp
ja
mov
mov
jno
in
adc
push
pop
mov
ret
push
push
push
or
jne
sysret
or
xor
outsl
daa
call
lret
mov
mov
mov
incl
je
mov
sbb
ret
sub
inc
xor
mov
cmp
jg
add
mov
inc
repz
mov
push
and
leave
jmp
mov
jmp
mov
mov
push
outsl
add
sbb
ds
mov
xchg
cmp
ja
je
mov
stc
add
rep
xchg
inc
je
cld
lea
imul
xor
std
xor
cld
inc
sub
jge
lds
into
fwait
orw
insb
adc
movsb
fldcw
pop
pop
outsb
in
or
xchg
shlb
das
push
push
mov
jb
mov
arpl
call
jmp
rcll
jmp
lret
jno
mov
jmp
push
ret
cmp
out
pushf
add
add
pop
mov
in
ds
or
loopne
fcmovnbe
mov
adc
inc
cmp
mov
fcos
lcall
xlat
adc
jne
call
mov
test
adc
and
sbb
jmp
cmp
mov
mov
cli
mov
cmp
jbe
lret
mov
inc
inc
and
pop
hlt
out
mov
push
mov
shr
je
jb
sbb
fnstenv
out
add
inc
dec
mov
sbb
add
add
dec
jne
pushl
in
loop
push
adc
add
and
je
mov
cmp
jne
dec
je
mov
add
add
or
lcall
call
cmp
jne
shr
mov
loope
pop
adc
add
mov
lret
faddp
loopne
data16
stos
mov
fcmovnbe
test
stos
pop
pop
mov
enter
fstpt
int3
add
push
inc
pop
and
add
out
jae
je
and
je
pop
je
push
imul
dec
inc
pop
fidivs
add
sub
or
cmp
ja
lea
add
add
mov
mov
dec
je
sarb
jmp
inc
mov
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
fnstsw
je
andb
xchg
and
popa
add
rolb
pushf
add
jb
adc
xor
mov
into
loope
or
push
icebp
repz
sub
js
inc
stc
mov
sub
add
dec
je
fdivrl
orl
lea
fldt
call
pcmpeqb
mov
push
cmp
scas
and
lret
imul
push
cli
xchg
jge
mov
pop
push
cltd
xchg
xor
sbb
jmp
adc
fstp
fldt
fldz
mov
dec
mov
xchg
jg
aas
in
dec
mov
cli
or
pushf
or
ret
mov
adc
inc
repnz
sbb
imul
mov
add
mov
jb
jle
fistpl
es
test
out
sub
pop
iret
scas
cld
lret
add
leave
sbb
mov
iret
cld
jbe
imul
cmp
mov
mov
bound
aaa
jmp
filds
xlat
fadds
outsb
xor
xchg
push
or
mov
test
into
sbb
rorl
mov
push
pop
test
enter
call
push
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
incl
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
popf
imul
pop
js
inc
mov
stos
mov
cmp
or
mov
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
call
jg
inc
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
incl
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
jmp
repz
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
call
or
addl
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
pop
jmp
mov
popa
inc
pop
and
addr16
clc
push
daa
mov
subb
and
and
outsb
bound
xor
popl
xor
inc
jg
sub
clc
pop
jne
push
pop
and
popf
je
or
cmpb
dec
iret
hlt
movzwl
add
test
xor
into
mov
or
xor
leave
or
movl
push
pop
hlt
push
data16
add
loope
or
mov
sub
out
mov
aaa
jne
sar
aam
pop
aas
or
mov
sbb
adc
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
xchg
jmp
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
fildl
sub
jecxz
fldcw
call
jl
mov
xlat
mov
xor
mov
inc
rep
testl
lock
add
push
and
sbb
imul
pop
aaa
and
push
std
jnp
fsubs
shlb
popa
lock
jge
and
mov
pop
lods
mov
sub
add
outsl
clc
loopne
mov
or
push
cld
ret
test
cld
add
dec
fdivs
pop
shr
dec
rep
pop
xor
inc
jnp
rorb
add
jmp
mov
sbb
in
cmp
je
pop
mov
add
jae
shlb
push
push
mov
mov
push
sbb
jne
jne
add
mov
mov
mov
mov
sub
sub
lahf
pop
cmp
mov
xchg
jmp
stc
add
pushl
paddd
movd
and
jo
pusha
sar
push
cmp
mov
adc
inc
in
dec
decl
inc
mov
sbb
andb
fs
lock
xor
or
push
mov
push
dec
cld
or
mov
adc
or
ja
mov
adc
mov
jbe
xchg
repnz
lea
inc
push
sbb
and
mov
sub
setne
cmc
shl
jae
jnp
cmp
test
add
jnp
fisttps
mov
jg
fisubrs
cmp
push
jb
cmp
jne
push
or
push
mov
or
jo
xor
pop
fsubrl
js
xchg
and
xchg
orl
sbb
mov
pop
xor
push
mov
mov
cmp
xchg
dec
jle
jne
loope
loop
mov
sub
loop
shl
jg
add
test
push
add
repnz
je
pop
push
mov
ret
pop
add
sub
mov
pop
push
jge
fisttpll
pop
add
out
mov
les
sti
pop
shrl
xor
das
mov
add
rcl
addr16
es
or
mov
ss
pop
push
sub
dec
test
or
data16
mov
rorb
pop
loopne
pop
pop
je
push
rcrb
lock
push
push
sub
aas
push
scas
adc
xor
or
mov
mov
movl
or
mov
lock
push
frstor
lods
mov
mov
push
jle
adcl
mov
adc
push
clc
push
sbb
dec
scas
in
aas
jg
mov
jbe
pop
pop
out
cmpb
dec
or
loop
dec
in
push
call
enter
pop
push
pusha
push
push
cmp
pop
repnz
add
pop
iret
cs
add
sub
mov
or
jae
and
call
and
sbb
std
add
or
jne
movsbl
inc
inc
jmp
add
ljmp
sbb
jecxz
shlb
loope
fsub
nop
fsts
push
aas
loop
fdivrl
rorb
pusha
adc
xor
testl
and
cli
dec
ja
cmp
inc
adc
cld
icebp
stos
fwait
scas
pop
pusha
adc
je
xor
shl
adc
pop
mov
aas
or
cmp
cli
out
push
je
or
xor
sub
sub
adc
inc
sti
or
add
stos
mov
fwait
xor
cmc
enter
adc
cmp
push
lea
push
mov
pop
popa
jns
je
orl
jbe
ret
push
mov
cmp
adc
loope
sub
mov
call
mov
fucomi
pop
je
mov
add
inc
add
push
mov
add
mov
mov
adc
xor
test
inc
xchg
pop
sahf
or
je
dec
or
add
and
dec
and
andb
pop
roll
cld
add
lds
inc
mov
sahf
std
push
ret
sarl
mov
cmp
jne
divl
push
mov
inc
or
mov
sbb
je
jg
pushw
add
dec
jne
and
lds
roll
push
mov
sbb
push
xor
xchg
or
lahf
adc
cwtl
andb
push
sub
movups
out
and
adc
cmp
mov
es
arpl
sbb
add
pop
popf
jle
aas
cmpsb
movl
or
test
outsl
or
mov
inc
nop
call
push
push
mov
push
data16
and
stc
mov
pusha
sbb
lahf
loopne
nop
or
pusha
add
idivl
or
jbe
sbb
cmp
test
push
ss
pop
adc
adc
add
lea
add
mov
mov
adc
insl
jo
loop
xor
sbb
or
std
inc
loop
mov
add
je
cmp
fists
adc
push
sub
je
jmp
mov
jno
aas
sub
jb
je
jmp
cmp
cmp
fistps
inc
adc
jmp
sub
cmp
mov
dec
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
sbb
or
lret
call
or
pop
jle
adc
cwtl
inc
push
jg
push
sbb
je
push
es
test
inc
cmp
mov
push
inc
sbb
add
hlt
mov
jo
out
push
inc
sti
mov
push
cmp
cmpsb
push
sub
xchg
mov
adc
jno
or
or
aaa
scas
xor
cs
or
push
mov
mov
loope
lock
cmp
push
add
or
and
cmc
and
add
mov
inc
or
mov
and
mov
jbe
out
aam
sbb
les
lea
call
xor
adcb
test
mov
adc
ret
sub
sub
inc
adc
mov
mov
pushf
lock
cmp
arpl
add
rcrb
je
add
cmp
jg
movl
sbb
lock
cmp
adc
leave
pminsw
movb
adc
sub
ret
ds
mov
add
push
sbb
add
ss
pop
loopne
pop
js
jne
pop
pop
cmpsl
dec
imul
mov
dec
or
xor
insb
mov
add
std
sub
ret
mov
add
js
lock
test
adc
es
loopne
mov
jge
mov
mov
mov
jge
fisttpl
inc
adc
aas
sub
sbb
inc
outsl
das
rcrb
pop
sbb
pushl
add
mov
mov
or
pop
leave
call
ljmp
cmpw
cmp
cmp
mov
hlt
test
or
imulb
cmc
repz
xchg
xor
add
ds
pop
ret
mov
addb
push
adc
psrad
je
lods
mov
add
mov
add
insb
push
cmpl
push
inc
mov
outsb
fcoms
push
clc
ja
subb
inc
sbb
mov
out
mov
nop
daa
push
jne
ds
icebp
add
loop
or
xor
adc
jnp
icebp
push
inc
daa
pushf
sbb
inc
push
mov
mov
adc
jne
je
notb
fimull
jne
inc
adc
in
fwait
call
xchg
and
subps
jmp
mov
shll
lods
add
mov
inc
cs
scas
sub
adc
pop
cmpl
rorb
jl
lock
clc
daa
bound
mov
and
add
or
arpl
jp
jne
ss
inc
inc
jg
inc
inc
xor
mov
mulb
ret
dec
cld
pop
pop
pop
jmp
jbe
lret
pop
xchg
adc
xchg
call
or
and
add
and
les
pop
movw
js
ljmp
aas
js
enter
cwtl
mov
mov
pop
lock
stc
mov
ljmp
repz
cmpsl
outsb
scas
cmp
push
sahf
push
dec
inc
or
adc
and
inc
inc
in
mov
in
mov
and
add
cmp
les
jbe
clc
fdivrs
icebp
jmp
lea
cmp
popa
cmpsl
sub
mov
xor
subb
les
mov
and
fldl
fstpt
ljmp
pop
sbb
ret
jge
xor
loope
call
loop
or
outsb
xor
mov
je
lock
lcall
add
jae
mov
inc
add
jmp
imull
pusha
and
pop
pop
or
push
mov
mov
push
addr16
in
add
sarb
mov
sahf
std
push
fcoms
xlat
adc
scas
mov
pop
pop
out
pop
lds
cld
outsl
push
and
mov
cld
jp
cmp
jl
in
loopne
pusha
or
xchg
aas
loopne
movsb
xorb
ret
push
aas
mov
je
mov
and
ljmp
pop
and
cmp
insl
mov
adc
mov
sub
jo
out
popa
cmpl
je
cmp
mov
fdivrl
sub
inc
cld
add
mov
mov
fmuls
sub
sbb
dec
pusha
mov
lret
mov
popa
vaddss
jle
xor
mov
loopne
cmp
jmp
fwait
popa
jnp
dec
sub
add
cmp
fs
dec
jne
lahf
cmpb
ja
jge
hlt
loopne
cmp
pushl
add
dec
jmp
and
inc
pushf
jle
jmp
ss
add
pop
dec
jne
add
loopne
int3
and
cli
pop
and
pop
lea
jmp
cli
push
jle
sarl
mov
imul
shlb
add
push
shr
fnstcw
push
mov
pop
dec
dec
add
pop
mov
add
add
dec
adc
add
and
dec
shll
and
inc
pop
and
mov
adc
jg
rorb
jo
add
jmp
shr
aam
movsl
pop
inc
rclb
cmc
dec
mov
add
movsb
dec
jno
cmp
mov
adc
pop
adc
cmp
xchg
dec
inc
push
pop
mov
jnp
into
cmp
sbb
sub
dec
push
xor
jl
cmp
jge
sub
into
sbb
adc
push
data16
mov
adc
shr
in
test
push
adc
jmp
mov
sbb
jl
sbb
xchg
shll
sbb
adc
adc
mov
in
pop
adc
add
clc
dec
mov
adc
divl
inc
and
mov
mov
sub
or
loopne
clc
pop
mov
lret
jbe
jo
cmp
sub
mulb
cli
clc
cmp
and
mov
add
outsb
pop
sbb
push
das
mov
fs
inc
push
push
sub
aaa
das
in
push
cmp
cmp
call
mov
scas
mov
push
cmp
push
loopne
pop
jno
enter
xor
lock
jns
mov
sub
sbb
int3
mov
aaa
int3
mov
cmp
push
dec
push
das
int3
pop
pushl
mov
or
rorb
pop
out
xor
sub
push
jmp
in
add
add
cltd
add
mov
push
push
push
inc
add
fs
xor
jns
lods
mov
callw
cs
ja
push
cvtps2pd
or
adc
xchg
mov
mov
cmp
adc
mov
cmp
jge
pusha
clc
xor
ret
nop
pushf
lcall
pop
out
inc
xchg
sub
cmp
push
lods
add
pushf
jo
ja
dec
or
xchg
jle
push
lea
bound
not
sub
mov
les
nop
adc
fadds
mov
jg
push
cli
ret
sub
je
push
mov
sbb
adc
jl
push
mov
jb
adc
cmp
and
xor
iret
cmpsl
mov
push
test
sub
scas
push
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jl
imull
xchg
cmp
je
mov
js
mov
insl
add
cwtl
clc
jmp
adc
dec
lcall
out
jmp
push
mov
mov
les
outsl
scas
pusha
rcrl
cs
adc
cmp
pop
jmp
or
jbe
xor
and
pop
notl
lahf
mov
xor
pop
mov
call
call
pop
xor
fstpt
out
and
shrl
pop
test
push
mov
mov
adc
cmp
test
int3
jg
and
mov
pop
test
pop
das
xor
fdivrs
jmp
es
dec
sbb
aaa
sub
jmp
cmp
inc
add
lret
jmp
test
data16
jns
test
cmp
mov
mov
jmp
push
cmc
adc
xchg
pop
pop
adc
mov
out
andb
jl
mov
mov
lods
dec
clc
push
push
add
sarl
add
incl
jge
cltd
int3
inc
jle
mov
cmp
outsb
outsb
or
je
or
dec
or
pusha
outsb
push
je
pusha
adcb
adc
adc
and
and
xor
and
and
test
adc
lock
call
add
je
clc
or
pop
pop
jmp
fidivl
xlat
idivl
add
jns
xor
push
mov
ret
mov
in
adc
and
xchg
pop
out
add
jne
pop
lcall
cmp
push
cmp
adc
paddsw
fs
dec
movsl
popa
jge
pushf
mov
jmp
nop
daa
fistps
dec
jne
sub
inc
xor
icebp
jmp
cmpsl
std
adc
loope
sbb
les
cmp
cmp
divps
or
ja
sti
add
add
inc
ljmp
mov
icebp
mov
jo
add
jb
inc
mov
push
cmp
lock
inc
in
ret
or
dec
adc
popa
adc
in
mov
dec
nop
push
inc
cmp
mov
fdivrl
mov
aas
cmc
xchg
xchg
mov
mull
mov
lcall
icebp
sub
add
out
adc
pop
pop
ret
jle
popa
mov
dec
enter
xlat
pushl
addl
fst
loope
push
testl
dec
push
xchg
rorl
call
push
test
xchg
cmp
mov
jge
jg
mov
nop
jno,pt
incl
pop
mov
cmpsb
cmp
clc
movzbl
sub
inc
add
jo
push
push
sub
adc
cmp
loop
loopne
or
out
and
in
test
lock
andl
mov
or
cmp
push
in
sti
jle
jmp
imul
das
rol
scas
add
mov
sub
adc
or
rorb
jae
in
in
jmp
push
call
fildll
cmp
jge
mov
cltd
adc
fnstenv
lock
sbb
push
mov
rcrl
mov
into
mov
cmp
int3
inc
jae
sbb
ds
fisttps
adc
sbb
shrl
xlat
mov
cmp
insl
or
add
mov
hlt
add
jp
sbb
lods
add
dec
xchg
sbb
xor
mov
outsb
lea
shl
rolb
jne
shll
mov
sub
popf
sti
rclb
inc
scas
cld
xor
lock
jne
mov
cmp
inc
sbb
in
pop
roll
dec
mov
popa
movsb
jnp
sbb
mov
rorl
dec
mov
push
mov
incl
das
mov
push
fcomps
out
xor
cmp
bound
inc
jnp
push
jne
std
jmp
jl
add
pop
outsl
add
jnp
push
push
fdivr
sub
adc
loope
and
les
movb
movsb
test
mov
inc
adc
adc
pop
inc
js
xchg
aas
push
hlt
mov
ljmp
enter
cltd
push
push
lods
lock
or
or
mov
aad
sti
mov
pop
in
outsb
jae
push
xchg
lea
int3
pop
movb
adc
pushf
add
sbb
add
jmp
and
cmpsb
sub
mov
ljmp
inc
push
cmp
inc
xor
movsb
clc
adc
test
pop
in
imul
cld
inc
clc
push
sub
scas
jge
sbb
sbb
js
pop
jne
fdivrl
into
add
sti
add
xor
inc
das
in
pop
or
mov
mov
pop
xchg
sub
lea
shr
loope
subl
pop
jge
sub
cmpsb
rcrl
mov
inc
cmp
gs
inc
push
inc
jno
jne
stos
mov
sbb
andl
push
fs
mov
cmp
jnp
sti
cltd
or
jg
movb
ret
dec
push
push
loop
ss
mov
imul
dec
ss
cltd
pop
or
jmp
pusha
imul
gs
xor
cs
insb
or
ljmp
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
daa
scas
mov
movsb
push
fucomip
sarb
sti
addr16
movb
into
push
xchg
xchg
hlt
lock
add
cs
jp
add
ja
add
in
push
cmp
aaa
in
je
push
cmp
or
popa
xor
call
xchg
out
inc
sti
cmp
push
jmp
sub
and
push
add
push
repnz
adc
inc
xorl
aas
push
incb
movsl
mov
lds
aam
fildl
loope
int3
stc
mov
repz
sub
into
imul
push
jmp
push
inc
loope
repnz
add
in
in
je
inc
cmp
jne
fdivr
push
adc
cmp
sub
inc
ret
addl
andb
pop
sub
loopne
jb
je
das
ja
cwtl
leave
jo
ss
jae
jg
test
outsl
data16
popa
jb
data16
dec
pop
lret
insb
gs
aaa
mov
sub
jl
inc
cmp
inc
pop
addr16
and
adc
add
adc
adc
inc
add
js
shlb
es
xor
dec
xor
jnp
jne
das
in
jmp
cltd
xor
jmp
adc
push
mov
mov
pop
ss
jb
inc
addr16
dec
jecxz
fsubs
push
add
cmpb
or
imul
jns
ja
movsl
pcmpeqb
adc
cmp
inc
sar
ret
aad
jo
or
pusha
cmp
popa
adc
jne
xchg
xor
mov
pushl
mov
fucomp
mov
and
lods
sbb
mov
inc
in
push
cmp
jne
or
jmp
arpl
and
cmp
cmp
push
cwtl
stos
in
jmp
and
add
sub
repnz
push
or
sbb
add
xor
dec
mov
or
fwait
inc
mov
push
inc
and
pushf
ret
je
sbb
mov
push
cmpsb
test
adc
cmpsl
enter
inc
push
andb
cmp
jbe
shrl
mov
xor
push
and
cmp
push
cwtl
or
mov
add
cmp
lds
pusha
insb
mov
mov
xchg
fcomp
outsl
or
jnp
inc
ret
fnstenv
shll
mov
shlb
mov
lcall
mov
cmp
mov
dec
inc
cmp
ja
loopne
push
decl
pop
cmp
pop
add
pop
cld
ja
jnp
mov
or
lret
loopne
sbb
adc
sbb
and
lcall
add
and
dec
jnp
add
dec
pusha
rolb
fnstsw
cmp
jae
cmp
jb
or
dec
push
push
pop
roll
and
sbb
push
jbe
pop
add
cmp
lea
adc
ret
lock
xor
add
lock
scas
push
leave
rorb
cld
aam
add
cli
mov
inc
test
jg
pop
mov
subl
aas
repz
outsb
and
je
cmp
adc
mov
and
cmp
jne
mov
loop
jbe
ljmp
shl
or
mov
pop
lea
std
sub
mov
enter
inc
inc
mov
or
xorb
mov
or
movl
jbe
jae
mov
ret
xor
es
cli
xorb
sahf
jo
mov
daa
or
jb
inc
stos
or
xchg
je
add
pop
pop
sub
dec
adc
jge
cld
je
adc
lea
fisubrl
and
in
xor
xor
inc
push
and
xor
jle
mov
sbb
test
mov
dec
outsl
jmp
adc
mov
movsl
or
pop
cmp
mov
push
add
add
int
adcb
test
cwtl
pusha
repnz
xor
enter
loopne
inc
test
int3
in
pop
cmp
pop
sbb
sbb
test
pop
add
rolb
sahf
dec
mov
pop
xchg
aam
and
inc
cmp
mov
fsubl
cmpsb
jnp
mov
or
rorl
or
xchg
push
insb
cmp
imul
push
pop
lock
push
cmc
push
push
mov
mov
sbb
jle
push
sbb
add
push
jge
pop
lret
test
add
xchg
jbe
incl
inc
mov
cmpsl
sbb
mov
loopne
or
sarb
cmp
test
and
loopne
sbb
movb
mov
xchg
xor
rolb
js
mov
and
inc
bnd
inc
xor
dec
mov
adc
ret
inc
jns
ret
adc
mov
inc
loope
mov
in
pop
gs
ljmp
and
or
and
addr16
mov
sub
pop
sbb
ja
jl
xor
jmp
sub
mov
push
sbb
sbb
sarl
jl
cmpl
or
clc
loop
imul
out
jo
or
jmp
push
sub
mov
push
jmp
jg
jle
test
jne
mov
ret
in
test
rolb
ret
mov
mov
movsb
inc
shl
mov
sbb
jbe
popf
mov
mov
mov
jo,pt
or
dec
or
fldenv
out
sbbl
jle
mov
or
test
xchg
rolb
or
xchg
sbb
sbb
or
nop
dec
outsb
cmpsl
aad
fcoml
xchg
and
rcrb
test
pushf
js
jo
pushf
pushf
pushf
pushf
push
pushf
pushf
pushf
pop
push
push
dec
pushf
pushf
pushf
pushf
dec
inc
inc
cmp
pushf
pushf
pushf
cmp
sub
pushf
pushf
pushf
sub
sbb
pushf
pushf
pushf
sbb
or
pushf
pushf
pushf
or
cld
rorl
dec
inc
clc
hlt
lock
dec
dec
dec
dec
call
dec
dec
dec
fcom
ror
and
dec
enter
push
daa
daa
daa
daa
push
dec
dec
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
adc
daa
daa
daa
adc
add
xchg
daa
daa
add
sar
daa
daa
daa
mov
pop
lock
call
daa
loopne
fcom
daa
daa
daa
daa
ror
enter
daa
daa
sarb
mov
test
daa
daa
daa
daa
mov
mov
and
setl
mov
daa
daa
jl
je
daa
daa
daa
daa
insb
push
arpl
cld
pop
idiv
lods
jle
dec
add
or
xorb
mov
xor
hlt
shl
xorl
decl
ret
add
pusha
sbb
dec
cmp
sbb
lock
icebp
repnz
dec
dec
dec
repz
cmc
testb
dec
idiv
stc
cli
dec
dec
dec
dec
sti
cld
std
decb
dec
dec
jmp
loope
dec
dec
dec
dec
jecxz
in
dec
dec
dec
dec
out
jmp
dec
jmp
in
out
dec
dec
dec
dec
out
rcl
rorb
dec
dec
rcl
aad
dec
dec
dec
dec
xlat
fcomp
fimull
dec
dec
fcmovnu
fstp
dec
dec
dec
dec
ffreep
rol
dec
dec
dec
ret
dec
dec
dec
enter
dec
dec
dec
lret
int3
int
dec
dec
dec
dec
iret
mov
mov
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
mov
dec
mov
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
cmpsl
test
sbb
dec
fimuls
or
adc
mov
add
xchg
sbb
lods
pop
jp
add
add
and
pop
add
or
arpl
je
outsl
dec
push
mov
outsb
shlb
sar
dec
and
outsl
jb
nop
and
cmpsl
or
cs
adc
fisubl
clc
inc
dec
gs
jo
nop
xorb
fmuls
dec
gs
mov
data16
or
xchg
fcoml
or
outsb
mov
inc
jb
mov
scas
xor
add
movsb
jb
je
mov
mov
popa
insb
push
mov
leave
call
enter
mov
ret
or
sbb
push
ds
mov
decl
inc
inc
imul
outsl
nop
pushf
pushf
mov
push
popa
outsb
addr16
scas
mov
push
outsb
jbe
jb
insb
outsl
ja
imul
push
imul
or
test
push
push
leave
xchg
test
imul
xor
dec
jo
add
add
or
insl
jle
in
insl
mov
pop
scas
pop
add
push
rcll
xchg
scas
jns,pt
outsb
fs
or
movnti
or
mov
mov
add
mov
xchg
mov
popa
inc
cs
jae
faddp
mov
test
scas
scas
or
scas
add
push
je
insb
xchg
sbb
add
inc
inc
arpl
jae
push
adc
andb
jl
clc
cmp
jb
insb
push
jb
insb
jb
jbe
hlt
nop
aam
aam
sarl
push
inc
push
je
arpl
nop
xor
repnz
mov
popa
fidivs
inc
mov
ds
push
popa
jb
inc
sbb
imul
adc
adc
js
pop
addb
lea
outsb
out
and
push
jb
jns
mov
mov
and
cld
push
orb
adc
inc
push
stos
daa
or
mov
outsl
jg
inc
and
arpl
cmp
fbld
jle
add
aaa
xor
add
dec
invd
xchg
insb
jae
nop
int3
sub
nop
inc
cmp
add
pop
mov
pop
add
jbe
mov
push
xlat
fwait
icebp
pop
adc
jne
int3
add
sub
hlt
add
fs
das
movsb
sbb
out
aam
iret
repz
push
push
sbb
loopne
xor
jnp
sbb
push
loopne
adcb
negl
cmp
mov
add
sub
xor
sbb
out
push
and
sarb
jne
imul
and
call
push
sbb
ljmp
jp
xchg
shr
div
add
add
shlb
add
inc
xchg
lret
mov
mov
sahf
add
xlat
mov
sbb
shr
es
out
push
sub
pop
cli
cmp
pop
pop
mov
pop
inc
add
movsb
mov
xlat
add
push
push
cmp
ja
sub
test
jg
mov
fdivrl
mov
fildll
mov
add
sub
add
incb
jne
lcall
iret
inc
ds
inc
or
cltd
push
cld
mov
cmp
jbe
cmp
sarb
mov
cld
or
test
push
mov
decl
and
sti
je
movzbl
add
sub
pop
movsb
nop
push
inc
negl
lcall
adc
ret
sub
or
imul
cs
rorb
push
mov
push
or
pop
testl
arpl
or
test
add
into
add
out
jo
sbbl
dec
dec
arpl
sete
add
xchg
ljmp
das
ljmp
repz
cmpb
jbe
cmpsl
jge
mov
lds
dec
sub
add
mov
push
sub
inc
lcall
dec
das
pop
cltd
ret
lods
add
mov
in
insl
or
jne
sarb
fdiv
lods
aaa
aaa
divb
push
ret
mov
shl
icebp
out
mov
cmp
push
pop
mov
in
ljmp
adc
shll
add
cli
mov
ljmp
mov
sub
xor
push
outsb
cltd
loopne
repnz
add
sub
das
rorb
xor
sarb
jo
pushl
mov
mull
outsl
inc
mov
pop
fbld
inc
ljmp
xor
mov
enter
and
sub
fwait
lods
cmpsb
adc
mov
aas
lods
cmpl
insb
and
mov
pop
fadd
faddp
add
add
sub
add
rorl
fbld
inc
fdivr
mov
lods
inc
out
push
sub
rcrl
loope
jg
je
neg
ret
ffree
ffree
ffree
pop
aad
pop
mov
sub
add
mov
and
or
loopne
psrad
pop
daa
pop
into
lods
loope
cli
out
add
push
mov
xchg
and
andb
xor
icebp
add
push
pop
outsl
push
jns
xchg
cltd
aam
mov
cmp
test
mov
clc
sub
idivb
mov
mov
jl
dec
xchg
mov
sti
mov
mov
test
adcb
test
mov
andb
jb
mull
inc
popa
insb
jae
xor
in
pop
push
movb
repnz
jl
inc
js
xor
lret
cmp
mov
sub
inc
sbb
mov
push
dec
jecxz
push
sbb
xlat
es
test
les
cltd
push
xchg
js
add
fldt
fdiv
sti
mov
sbb
xchg
add
dec
ss
inc
pushl
xchg
addr16
inc
test
dec
ret
jbe
fiadds
xchg
pop
add
xchg
bound
pop
aaa
rolb
hlt
adc
out
xchg
aaa
jmp
and
rcl
mov
adc
xor
in
sub
lahf
push
shl
or
mov
pop
cmc
lds
incb
ja
sub
pop
das
hlt
jne
ja
hlt
adcb
xchg
nop
pop
imulb
dec
mov
js
insb
push
mov
stc
adc
dec
cld
inc
jae
pop
mov
sbb
pop
orb
fadds
fbld
notl
movsl
test
and
jle
dec
pop
bound
popf
cld
add
mov
xor
sub
je
fsts
lods
mov
ljmp
imul
jmp
pop
cmpsl
push
aas
push
call
mov
lea
sub
pushl
xor
cmp
cmp
inc
ds
enter
in
out
imul
dec
inc
cld
pop
jbe
lods
add
sbb
fwait
bound
dec
dec
inc
jno
aas
fs
jle
mov
negb
pop
imul
movsl
imul
xlat
pop
mov
fs
jne
dec
dec
push
jg
xor
fstps
cmpb
jne
bswap
jecxz
push
mov
lock
pop
dec
dec
cmpb
jne
push
or
mov
rorl
cmpb
inc
subl
divb
fildl
inc
pop
movsb
add
add
jae
dec
cmp
pop
or
cmp
add
outsb
or
inc
push
loopne
in
imul
pop
xchg
pop
pop
cmp
mov
lea
mov
jne,pn
out
xchg
insb
es
jmp
jg
cld
ss
push
pushf
push
push
push
pop
test
scas
add
gs
cmp
popa
jg
cmp
sub
push
ret
in
xchg
stos
adc
dec
push
outsl
hlt
int
in
je
cld
imull
adc
add
and
dec
shufps
adc
call
hlt
cmp
mov
add
adc
jl
sub
ret
inc
sbb
int
xor
mov
mov
into
push
inc
shll
cmc
or
jmp
popa
lret
dec
sub
push
cs
sub
mov
mov
sbb
xchg
sub
lret
push
sbb
sub
pop
ret
aas
ljmp
pop
aad
jae
nop
xchg
jmp
and
rorb
mov
outsl
inc
rcl
and
push
mov
cmp
cli
ljmp
add
int3
mov
or
mov
lcall
in
shlb
push
xchg
inc
cmp
sbb
inc
sahf
xchg
icebp
aam
std
fdivrs
rorl
cs
mov
pop
sub
jbe
sbb
pop
incl
lods
aam
mov
push
sbb
call
jne
lea
xchg
enter
mov
adc
rolb
cmp
xchg
subb
mov
insb
adc
test
lds
fcom
outsl
rorb
add
or
adc
mov
sbb
scas
push
pusha
jae
add
cmp
add
mov
and
push
and
mov
add
inc
xchg
sub
mov
or
add
sbb
shll
call
pop
lahf
jg
push
das
shrb
xchg
push
pop
adcb
jo
mov
je
clc
adc
into
push
mov
push
or
jne
mov
xchg
mov
mov
xchg
jmp
cmp
call
sub
in
scas
jne
subb
pop
or
hlt
and
lods
jmp
adc
sub
out
cmp
sub
sub
push
jnp
call
outsb
dec
pop
mov
shl
testb
out
or
lret
sarl
xchg
movsb
xchg
pop
mov
rep
sbb
cmpl
sub
pop
out
mov
sub
jmp
sub
jb
jmp
ja
imul
mov
add
and
jp
call
pop
pop
sub
sub
decl
cld
or
lret
sbb
xchg
ret
cmpsb
cltd
mov
and
mov
test
push
pop
cmpl
mov
lcall
jle
lahf
xlat
or
push
mov
outsl
mull
das
pop
sbbb
inc
or
fstpl
push
shr
scas
jb
jbe
fsubrs
rcll
lea
fsubl
dec
sbb
cmpsb
jb
jmp
cmc
xchg
sub
sbb
cmpsw
jge
push
dec
jmp
push
pop
outsb
in
cld
xchg
adc
hlt
mov
push
stos
sbb
outsb
mov
stc
push
jne
shrb
sbb
shlb
mov
aad
fiadds
cltd
std
jne
jmp
xor
inc
inc
lods
lods
and
inc
gs
jmp
mov
in
sub
cld
aas
and
or
call
pop
js
mov
add
dec
mov
cmp
ja
pushf
cltd
xchg
js
scas
jmp
push
mov
jecxz
dec
mov
cltd
cmp
stos
jo
ds
leave
sbb
lods
out
dec
mov
fldt
sub
mov
outsb
mov
inc
je
mov
mov
inc
je
mov
inc
je
mov
dec
je
dec
lock
mull
mov
ret
mov
push
jne
xchg
adc
mov
cmp
clc
es
pop
mov
xchg
mov
mov
dec
roll
jb
fs
xchg
ret
xor
hlt
hlt
push
les
mov
ljmp
and
xor
or
das
das
test
outsb
lods
cltd
push
or
and
mov
pop
out
shrb
jns
mov
pop
xchg
clc
out
dec
loop
fsubs
dec
and
mov
mov
sub
in
dec
cld
lea
pop
popa
xchg
xchg
jbe
dec
jl
pop
adc
add
jl
jmp
add
sbb
add
xchg
dec
cmp
mov
xchg
jne
pop
xlat
call
jge
pop
pop
sub
cmpsl
xchg
pop
push
xor
stos
or
push
dec
pushw
add
push
mov
notl
scas
cli
push
or
jo
loopne
xchg
push
mov
mov
test
add
mov
inc
dec
shlb
jg
or
jg
dec
mov
stos
cmp
jne
pop
pop
lahf
aam
add
xor
cs
sti
mov
js
hlt
mov
repnz
pushf
mov
aas
or
jne
lods
jge
jno
xor
pop
mov
xchg
shll
adc
jb
aaa
cmp
xor
repnz
je
jge
jle
push
sub
xor
fsubr
jg
jae
lea
mov
add
sub
adc
je
add
or
mov
add
jmp
pop
jb
sbb
in
pop
sahf
sbb
call
imul
jmp
xor
push
dec
jmp
leave
movsb
push
test
inc
dec
inc
dec
lods
or
fcomi
lret
jge,pt
push
adc
xchg
popa
dec
aam
mov
stc
std
jl
pop
aaa
lods
ss
dec
stos
cmpb
xor
push
outsl
sbb
stos
jmp
jmp
mov
loop
movlps
scas
jne
mov
inc
stos
pop
pop
inc
clc
dec
popf
mov
test
mov
cli
hlt
mov
inc
sub
jbe
sub
pop
insl
cmp
add
leave
mov
mov
mov
fwait
sub
cmp
insl
in
cli
adc
mov
mov
sub
push
fcomip
add
dec
pop
div
mov
inc
test
dec
je
dec
jne
sbb
sbb
stos
xor
jg
shr
adc
sti
add
je
inc
shrb
jne
pop
pop
test
jns
lock
or
repnz
scas
pop
add
lea
fdivp
sarb
je
inc
cmp
inc
inc
pop
add
orb
or
mov
subl
add
or
cmp
shlb
inc
add
and
and
adc
jbe
out
and
sub
inc
sub
sub
sub
sbb
and
sub
scas
sub
or
pop
out
repz
sub
xor
andl
fiadds
addb
jbe
jmp
jne
adc
es
and
adc
testl
sbb
or
xor
sub
xchg
imul
je
adc
or
cmp
inc
call
out
fabs
push
mov
cli
call
fldt
fstsw
fwait
mov
imull
testb
je
fidivl
jne
lea
mov
out
clc
fwait
mov
nop
shr
and
add
push
add
movsl
cmp
jge
jns
pushl
mov
or
or
cmpb
mov
and
dec
js
decb
and
pop
data16
fisttpll
or
leave
jmp
mov
add
faddl
je
notb
adc
ljmp
push
out
fisubl
pop
inc
xchg
push
adc
jae
fcoml
push
je
rorl
test
fisubs
sbb
pop
pusha
xchg
pop
or
or
jge
adc
jl
mov
push
inc
sub
mov
loopne
jae
dec
add
fbld
in
insl
or
jecxz
mov
lea
cmp
mov
pop
xchg
pop
xor
mov
sbb
xor
sub
pushf
and
jne
dec
cs
ja
jmp
mov
add
aas
and
out
push
inc
or
ljmp
enter
xor
pop
into
cmpb
divl
pop
jmp
rclb
mov
sbb
jecxz
shl
inc
pop
or
hlt
mov
push
jns
mov
fnclex
fldcw
cmpsb
ja
mov
dec
hlt
ds
lods
or
js
punpckhwd
or
pusha
jne
inc
sbb
cmp
icebp
je
and
fistpll
sub
pop
add
jg
push
clc
xlat
cwtl
jne
mov
sahf
add
movsl
ret
or
push
mov
pop
jg
xor
add
aas
jmp
fstpt
insb
test
add
adc
add
negl
inc
test
insl
and
push
int
cmp
jg
add
test
or
in
jbe
fimull
inc
jmp
aaa
add
negb
es
push
push
inc
imul
push
cmp
arpl
aaa
add
out
inc
xchg
not
shl
cvttps2pi
ret
sbb
rcll
pop
mov
sbb
push
pop
fists
add
or
ja
mov
add
sbb
push
xchg
cmpl
pop
xor
imul
test
add
push
fldl
inc
js
sub
test
fwait
pop
pop
adc
mov
xor
fwait
sahf
insl
adc
push
adc
adc
inc
or
or
mov
insl
xor
or
cmp
inc
stc
inc
fstpt
jae
movzwl
data16
add
shrb
mov
jmp
ret
call
adc
xchg
fildl
xor
lea
fwait
cmpsb
shlb
lret
movsb
dec
movsb
adc
mov
xor
std
sub
jne
add
fdivrs
hlt
lea
mov
das
sub
stc
popa
or
lret
push
cmp
idivl
and
call
pop
xchg
enter
loopne
mov
push
inc
fldcw
xor
div
test
jne
sbb
nop
add
xchg
add
mov
movsb
and
das
mov
sbb
in
pop
jp
pushf
or
lea
add
fdivrl
maskmovq
testl
ss
ja
outsl
adc
ja
push
sti
jno
js
adc
sarb
inc
ja
sbb
cmp
sub
inc
movsl
jmp
in
dec
jne
xor
dec
mov
dec
cltd
idiv
imul
lock
popf
add
sub
ds
pop
insl
ds
add
pop
ret
or
xor
jp
hlt
shll
in
push
daa
nop
cmp
in
sub
leave
jg
fidivl
dec
call
or
in
add
imul
inc
mov
addb
add
addl
inc
adc
jge
shl
lock
ja
call
data16
decw
shlb
imul
cmp
imul
fcoms
mov
mov
lcall
shrb
in
loopne
cmp
xchg
adc
dec
pop
cmp
sbb
mov
push
in
data16
or
dec
dec
push
imul
pushf
cmp
jb
jno
add
sbb
inc
jmp
inc
cmp
push
test
shrb
add
hlt
mov
mov
mov
xchg
nop
cmp
pop
xor
adc
cmp
pop
xchg
cld
mov
or
push
push
xchg
inc
test
lcall
sub
mov
xor
iret
sbb
lea
leave
and
or
cwtl
xor
hlt
push
and
cmp
adc
aas
inc
mov
mov
dec
push
jle
insb
popf
inc
sub
add
or
test
pop
mov
addb
xchg
add
popl
lahf
push
test
sub
push
adc
adc
push
sti
je
cwtl
cld
inc
fildl
jo
inc
hlt
xchg
in
add
xchg
sub
jo
add
jg
mov
lea
or
lahf
repnz
inc
in
add
outsl
jecxz
ds
lret
mov
in
jge
call
out
nop
pop
jecxz
scas
in
or
jne
pop
lea
mov
leave
movl
cltd
mov
jno
cmp
loopne
jns
adc
add
out
push
pop
mov
push
orb
call
mov
aam
insb
fldl
rclb
push
mov
push
dec
jne
outsb
pop
add
inc
and
or
add
xchg
dec
mov
lods
enter
cmpl
push
fdivs
sub
adc
pop
cli
jne
push
add
dec
shr
adc
pop
inc
in
arpl
mov
adc
jo
and
push
mov
test
insl
xor
in
punpcklwd
rcrl
addr16
xlat
in
xchg
sbb
scas
lret
jbe
in
out
xchg
and
hlt
jg
aad
in
lock
nop
loope
pop
enter
xor
xchg
shr
in
jne
dec
cmpb
jne
push
adc
loope
mov
dec
lret
dec
push
adc
jl
shr
jns
pop
add
or
cld
inc
add
or
mov
push
arpl
pop
pop
roll
enter
add
mov
lret
pop
incl
in
add
js
adc
sub
lock
or
jae
jmp
insb
cmc
dec
xor
movsb
adc
xchg
fidivs
negl
and
and
add
sub
jae
adc
and
dec
jne
jge
dec
lcall
pop
loop
cmpsb
faddp
lds
xchg
xchg
inc
pushl
push
or
or
out
or
or
add
add
add
or
xchg
add
ds
test
xchg
mov
jns
xchg
gs
seta
jge
loope
mov
jge
pop
inc
xchg
cli
or
and
icebp
push
clc
orb
icebp
mov
in
sub
xor
testl
adc
dec
push
lea
out
stc
dec
push
and
fcomps
test
scas
aam
xchg
aam
jp
js
dec
push
into
sbb
xor
xor
test
test
in
sbb
leave
mov
lcall
jg
aad
add
mov
sub
pop
xchg
mov
push
leave
sub
mov
das
xchg
call
inc
sub
inc
cmp
test
and
adc
pop
inc
movzbl
dec
ffree
inc
sarl
js
sub
je
jge
mov
popa
sbb
bound
pop
je
jmp
lods
hlt
js
nop
mov
fdiv
inc
mov
cwtl
sub
mov
pop
push
jns
mov
clc
jmp
jmp
in
xor
mov
pushl
cmp
cmovo
dec
push
jge
shl
aaa
pop
push
cmp
mov
mov
jmp
push
sbb
or
or
or
jle
mov
cmpsb
enter
adc
stos
lea
mov
xor
out
add
repnz
xchg
pushf
lret
sub
out
add
dec
pop
jmp
sub
ljmp
ds
jbe
aas
pop
addl
ror
adc
xchg
cmp
push
and
nop
add
lea
cmp
jae
fsts
out
jmp
and
xchg
push
sub
add
lret
and
cld
movb
push
push
push
or
out
jmp
mov
sbb
xchg
or
or
or
imul
mov
fldl
sbb
cmpb
mov
pop
pop
imul
test
jmp
leave
jmp
or
adc
sub
or
sti
in
pushf
xorb
je
dec
enter
and
leave
mov
sub
dec
or
push
jmp
sbb
out
data16
xchg
xchg
dec
cwtl
aam
mov
jmp
jnp
sahf
cli
inc
dec
das
push
dec
add
dec
adc
cmp
pminsw
clc
pop
xchg
add
dec
push
sub
divl
mov
ret
ja
or
mov
xchg
cmp
fstpl
imul
outsl
or
mov
je
sub
inc
pop
scas
pop
pop
out
adc
cmpl
in
mov
call
hlt
adc
jb
shll
pop
sbb
cltd
mov
jo
push
pop
adc
xor
xchg
and
or
push
pop
mov
ljmp
lock
adcl
inc
xor
sub
jae
jmp
adc
scas
movsl
int
sbb
test
sub
cmpsb
mov
xchg
xchg
sbb
xor
in
roll
dec
idivl
outsb
dec
movsl
enter
mov
leave
nop
arpl
dec
cmp
or
arpl
sbb
movsl
push
inc
les
jp
add
mov
sahf
sbb
add
lcall
cmpsl
push
mov
lock
mov
fwait
pop
in
pop
jo
test
in
cmp
mov
arpl
pop
and
notrack
sub
je
dec
pop
pop
add
sub
je
adc
fsubrp
sbb
push
push
and
push
inc
mov
sbb
fadd
pop
xor
aad
fdiv
sarl
mov
fs
mov
add
loop
jnp
jl
pop
pop
pop
and
or
push
push
mov
sbb
jmp
dec
aam
or
sahf
cmp
mov
fs
movsl
in
mov
push
jmp
in
movsl
mov
ret
push
xlat
cli
pop
call
add
jne
cmp
jg
cmp
daa
jne
mov
call
sub
add
add
shlb
out
jg
cmpl
jle
adc
pop
cld
jmp
in
cld
out
cmp
popf
gs
psubusb
inc
dec
roll
loopne
push
xor
jecxz
ret
sahf
and
add
xor
test
lock
add
xchg
lahf
mov
inc
imul
push
xorl
ds
loopne
jne
mov
lods
idivb
pop
jle
or
and
shl
lea
sbbl
outsb
xlat
add
jge
fdivr
out
xor
mov
cmp
jmp
hlt
lods
mov
test
in
push
jle
outsb
and
cmpsl
popf
outsb
sub
cmpsl
jb
cmp
into
add
fidivs
nop
lock
imulb
jb
test
cmp
push
lods
lock
push
test
jmp
cmp
shll
arpl
ss
repnz
lret
hlt
sbb
jmp
inc
mov
push
out
sub
push
mov
bnd
jge
add
fisttps
fsubrs
in
sbb
push
fstps
fmull
out
mov
cmp
cmpb
jle
and
fs
add
xchg
mov
add
or
add
ja
push
fldenv
sbb
or
add
leave
mov
popa
sahf
je
call
sbb
cmpsl
or
adc
xor
mov
or
in
and
sarl
add
scas
stos
pop
stos
fildl
fldcw
pop
fcmovnu
das
fbstp
fcoms
das
xor
xchg
repnz
out
jo
loop
dec
jp
add
stc
push
sub
out
sahf
fdivrs
mov
ret
mov
add
notl
or
clc
lret
push
dec
fisttpll
pop
dec
adc
shlb
out
inc
xchg
jmp
push
xchg
faddl
pop
add
pop
push
mov
and
int3
lcall
or
leave
int
mov
orl
xor
add
pop
inc
sbb
orl
jg
fs
add
push
test
test
mov
adc
or
mov
jne
add
add
rcll
push
add
pop
push
shlb
mov
movsl
int
flds
ficoml
push
cmp
nop
enter
into
and
into
dec
leave
mov
sub
and
insl
mov
in
adc
pop
lods
call
clc
inc
roll
dec
mov
movsb
sbb
outsl
push
cmp
ret
jne
dec
pop
insb
xorb
fsubs
fst
fcomps
mov
fsubrl
or
fs
loopne
jle
fstp
push
xor
lods
mov
push
jae
aas
add
sbb
mov
sub
jb
and
fmull
or
xchg
mov
mov
lret
fwait
das
leave
int
rcrl
mov
test
dec
pushf
mov
add
movsl
jne
pop
sbb
lock
das
mov
cltd
jb
xchg
pop
fprem
push
push
shll
addl
addb
adc
add
pop
lods
xor
movsl
inc
fiaddl
add
clc
mov
popa
dec
pop
imul
imul
testl
cmp
push
sbb
rolb
mov
jb
or
or
sub
and
pop
or
std
push
xchg
pop
pop
mov
movsb
stc
inc
lock
lock
push
xchg
movl
sar
jne
roll
sbb
pop
add
pop
push
xchg
push
test
fwait
outsl
xor
shlb
in
dec
call
fsubs
in
or
xchg
inc
sbbb
fldl
add
shll
fldt
jecxz
notb
push
jl
je
xchg
cmp
jo
mov
lea
into
ret
add
fwait
js
and
popa
movsb
cmp
addl
push
fnclex
inc
pop
mov
pop
out
mov
cmp
stos
test
addr16
cmp
mov
sti
aam
and
mov
popa
or
loopne
rolb
push
push
mov
loope
cmp
dec
adc
clc
cli
inc
mov
and
mov
push
push
cld
xor
or
adc
or
xor
xchg
shrb
andl
cmp
mov
add
or
adc
or
add
js
dec
or
repz
ljmp
mov
sub
je
sub
je
scas
lea
push
ret
dec
lcall
cltd
jle
mov
in
xchg
iret
cs
sbb
dec
cs
lods
cmp
ss
clc
push
icebp
pop
lock
mov
mov
jg
mov
fdivl
or
fisttpll
dec
mov
in
adc
jmp
mov
and
pslld
add
jmp
mov
pusha
xchg
cmp
jmp
push
xor
repnz
dec
jmp
in
in
loope
loopne
jle
jo
cmc
cmpsb
in
nop
or
mov
mov
incl
add
sub
xlat
scas
icebp
and
pop
sub
push
add
sti
out
cld
iret
scas
sbb
test
cld
call
cmpl
sbb
ljmp
rorb
dec
movsb
and
inc
out
add
fdivl
xchg
cmp
jmp
sub
es
mov
xor
lods
mov
inc
push
out
ficomps
mov
test
mov
sub
clc
scas
adc
mov
sub
inc
sbb
fnstsw
rolb
pop
cmpb
jl
sti
je,pn
mov
cld
jne
cltd
test
addb
and
je
xchg
add
and
pop
sbb
test
cs
loopne
cmp
out
or
hlt
push
mov
add
imul
enter
sub
pop
and
das
sbb
or
cwtl
xchg
add
push
sub
pop
dec
mov
push
xor
sbbb
adc
imul
rcrl
push
or
sbb
add
negl
dec
mov
loope
lahf
int
dec
mov
cmp
aas
cwtl
push
xor
adc
mov
adc
orb
inc
vmovntps
push
sbb
or
add
sahf
add
lea
stc
cld
test
inc
adc
rorb
sbbl
lcall
in
les
js
fstl
fsincos
andb
mov
rorl
jecxz
adc
ja
sub
sbb
or
arpl
and
xchg
clc
fwait
std
aaa
sbbl
jae
pop
ret
push
mov
push
or
arpl
clc
xchg
inc
mov
call
ljmp
cmp
jg
cmp
or
jne
sbb
and
nop
cwtd
mov
sbb
inc
movb
dec
mov
test
mov
pop
addr16
scas
subb
push
icebp
add
out
pop
push
sar
lret
push
adc
ljmp
mov
jo
or
sub
nop
and
push
or
arpl
cmp
mov
cmp
or
pop
test
lcall
cmp
mov
aaa
loopne
cld
loope
stc
and
popf
xchg
out
add
add
push
addb
push
or
xor
lock
clc
push
in
push
and
push
jb
mov
cwtl
insl
lock
inc
or
out
loopne
push
push
add
jge
inc
add
out
int3
repnz
add
test
xorb
xor
xchg
cli
roll
in
aas
int3
mov
into
pusha
clc
insl
jo
imul
xchg
mov
leave
pslld
cmp
je
jmp
xor
inc
lahf
lret
xchg
lret
xor
and
cmpsb
std
and
add
push
pop
or
or
mov
xor
inc
adc
mov
cmpsl
xor
add
mov
or
test
jnp
scas
call
pop
cld
cmpl
mov
dec
mov
add
push
loopne
sbb
mov
cmpsb
lock
push
or
mov
test
mov
xlat
jl
or
loopne
loopne
lcall
decb
sbb
mov
clc
sbb
and
mov
stc
jae
or
xchg
dec
sbb
mov
ror
add
out
or
test
mov
lea
js
imul
cs
repnz
mov
xchg
inc
mov
dec
push
imul
mov
mov
nop
test
mov
iret
cmp
or
sub
jne
lods
or
sbb
and
loop
push
addr16
aaa
int
cltd
das
xlat
hlt
add
mov
nop
scas
lock
inc
addr16
pop
pusha
call
xchg
addb
clc
or
cmp
pop
mov
insb
push
cmp
mov
adcl
cmp
dec
adc
adc
insb
mov
in
insl
xchg
mov
xchg
repz
scas
mov
test
add
push
adc
scas
outsl
mov
sbb
add
mov
adc
mov
and
js
xchg
nop
nop
adc
inc
aaa
xor
xor
fidivs
adc
xchg
orl
mov
mov
cltd
push
pusha
insb
dec
xchg
add
cmp
in
push
sub
mov
jl
mov
add
push
push
jmp
mov
cmpb
or
mov
adc
int3
mov
sbb
cmp
pusha
cwtl
cmp
dec
jle
hlt
outsl
hlt
jmp
mov
dec
jmp
dec
mov
and
aas
or
sar
shlb
add
inc
cmp
mov
add
adc
add
xchg
mov
ret
daa
add
cmp
mov
enter
sbb
out
xor
cmp
daa
dec
shll
adc
jle
adc
dec
adc
or
inc
and
mov
mov
pop
inc
cmp
jl
rorl
aaa
or
mov
jge
inc
daa
lock
xchg
aaa
inc
cmp
cmpl
imul
stc
or
hlt
jge
jl
push
cmp
jne
sbb
js
sbb
push
add
lods
adc
popl
pop
xor
jno
adc
aaa
in
push
xchg
jnp,pt
addl
cmp
add
insl
jg
add
popf
daa
or
or
mov
sarl
xchg
rolb
sbb
es
mov
mov
jns
push
adc
ret
sub
cmp
test
add
aas
in
inc
ja
mov
and
vmptrst
or
pop
or
cltd
pop
rorb
mov
and
adc
mov
enter
push
mov
mov
xor
xor
adc
inc
mov
mov
sub
pop
pop
ja
sbb
mov
aas
and
aad
sub
mov
jl
jecxz
xor
pop
jnp
inc
adc
jmp
mov
sbbb
addb
mov
and
inc
sahf
jge
sub
pop
sub
loopne
mov
pop
xor
cmpb
rclb
xchg
dec
and
aas
and
hlt
xchg
cwtl
stos
lock
push
add
inc
jb
jno
adc
mov
je
pusha
xchg
or
int3
push
pop
ret
jnp
sbb
clc
xor
add
sbb
mov
mov
lds
clc
and
sarb
bnd
inc
jo
cmp
pop
jns
sub
stos
push
push
cmpsb
hlt
adc
sbb
ret
pop
inc
test
sub
push
adc
lahf
add
daa
mov
sub
and
nop
rorl
popf
in
pop
add
fstps
pop
cmp
nop
push
addr16
hlt
test
stc
dec
pushf
imul
and
mov
pop
mov
ret
xchg
stos
mov
das
xor
dec
das
jge
in
push
mov
or
cmpsl
cmp
pop
inc
shl
decl
aaa
push
mov
sub
jb
inc
mov
inc
or
fmull
lret
jne
dec
fstl
jl
decb
jne
cld
clc
arpl
daa
clc
pop
ja
ljmp
setb
cmpsl
imul
mov
cmp
popf
cmpsl
push
add
add
sbb
dec
data16
enter
xor
adc
dec
xor
call
test
loopne
popa
mov
cmpsl
ja
in
jne
adc
add
mov
test
pop
incl
call
mov
xchg
ret
mov
mov
mov
outsl
popa
mov
mov
xchg
js
add
cmp
es
retw
daa
jno
mov
mov
mov
ja
cmpw
subl
or
sbb
or
jmp
ljmp
xchg
shlb
pop
fisubrl
add
outsl
sti
add
cmp
xor
dec
xor
stc
push
adc
test
movsb
pop
subps
jo
xlat
jb
pop
movsb
xor
mov
cs
xchg
call
mov
add
inc
sub
inc
in
call
or
jge
sub
stc
cs
jle
cs
outsb
nop
add
sbb
subb
mov
sbb
nop
pop
fdivl
mov
and
loopne
test
pop
mov
adc
fdivrs
ds
mov
jle
fwait
in
mov
nop
int3
inc
dec
push
nop
dec
les
int3
mov
or
nop
xchg
enter
insb
dec
test
inc
sarb
sbb
dec
fwait
les
ret
adc
in
mov
clc
mov
clc
pushl
cld
push
hlt
mov
cmp
loopne
pop
or
in
pushf
lock
mov
movsl
jbe
aam
inc
jle
mov
or
clts
insl
das
fs
add
scas
insl
add
fs
pop
fwait
dec
fistpl
insl
pop
jo
mov
push
sbb
and
pop
sbb
push
aas
cmp
pop
push
cmp
add
daa
add
in
or
mov
mov
aaa
inc
xchg
add
mov
rcrb
pushf
pusha
es
cli
cmp
add
nop
test
mov
pushf
adc
rolb
mov
mov
aad
and
loope
mov
rolb
stos
jecxz
fcoml
adc
iret
mov
or
push
mov
daa
mov
inc
or
data16
loopne
fsub
imul
std
pop
push
lods
int3
inc
push
lcall
mov
pop
or
sbb
adcl
jb
gs
jo
inc
pop
pusha
enter
gs
lock
out
add
mov
xchg
inc
add
inc
and
pop
push
add
out
mov
lahf
sahf
ljmp
inc
add
lods
nop
rclb
stos
xchg
pop
notb
jne
mov
loop
and
jne
jle
and
stos
daa
push
mov
lock
decb
and
fisubs
xor
lock
xor
dec
lea
scas
pop
pop
push
mov
ret
inc
xchg
or
xor
push
mov
jge
fwait
inc
adc
push
inc
gs
movsb
out
rcrl
xor
dec
mov
movl
jmp
je
lea
shrl
popf
dec
or
enter
add
push
push
sbb
jo
mov
push
or
push
sub
ds
cltd
ds
cmp
cltd
stos
scas
mov
sti
sbb
sbb
inc
add
or
test
cmc
inc
imul
xlat
add
mov
sbb
jge
mov
mov
pop
leave
mov
mov
outsl
sbb
imul
push
mov
fstps
cld
mov
mov
insl
mov
xchg
push
imul
int
pop
cwtl
mov
daa
mov
cmp
dec
adc
sbb
in
mov
aaa
insb
pop
adc
sahf
loope
pop
call
cmp
test
mov
int3
sub
and
mov
or
push
ret
fimull
xchg
ret
les
out
sbb
push
jmp
adc
jo
jge
test
jge
out
call
cmp
pop
fisubs
outsl
test
pusha
mov
sub
rcrb
xchg
ret
incl
fsubl
nop
mov
jb
push
or
decl
cmpl
or
inc
jo
stc
ret
dec
mov
mov
or
sbb
add
mov
xor
xchg
inc
or
add
lahf
mov
and
inc
dec
cmp
mov
or
or
pop
add
loope
std
daa
lods
sbb
pusha
sbb
in
push
ror
jg
dec
or
push
int
leave
dec
in
inc
xor
rorb
cs
ror
cmp
push
adc
adc
lods
lods
adc
pop
xor
inc
pushf
outsb
lret
push
js
sbb
popf
data16
clc
mov
repz
loopne,pn
fsubs
jns
rorb
enter
loopne
jns
repnz
jns
repz
test
jle
cwtl
push
movsb
nop
iret
repz
sub
adc
jae
repz
jo
push
jnp
pusha
push
mov
pop
mov
push
xor
adc
push
idivl
scas
sub
xchg
dec
pop
sbb
movsb
add
int
jl
or
out
in
pop
ds
test
or
push
cmp
pop
cld
mov
out
sub
cmp
out
in
in
push
js
jo
out
popf
in
xor
pushf
xor
mov
fsub
scas
aam
jnp
shrl
sti
pop
cmpsb
int3
xchg
ja
outsb
pop
enter
pop
sbb
in
mov
mov
loopne
jbe
mov
dec
sahf
xchg
ja
push
mov
leave
jae
mov
pushf
pop
cwtl
repnz
mov
adc
iret
leave
jae
int3
mov
jns
add
xor
pop
push
pop
jle
and
xchg
and
dec
add
xchg
adc
mov
cld
mov
pop
shrb
dec
sarl
cmpl
adc
pop
pop
cmp
jl
mov
mov
fadd
fimuls
cmpsl
jge
sub
pop
repnz
rol
or
sbb
add
adc
sbb
js
mov
shlb
sbbl
shrl
add
mov
mov
mov
cmpb
push
in
mov
mov
mov
lahf
lahf
xor
pop
jb
call
push
pop
enter
fadd
cwtl
push
imul
aam
jecxz
sarb
push
mov
add
jmp
adc
ljmp
xlat
and
gs
mov
pop
ret
dec
out
fcoms
rolb
mov
enter
loope
mov
call
pop
orb
subl
outsb
iret
ffreep
xchg
sbb
enter
pop
inc
into
xlat
and
js
mov
leave
mov
xchg
leave
adcl
das
inc
pop
add
lretw
xchg
add
insl
dec
push
imul
out
xor
sub
push
sarl
data16
cmpb
cmc
sbb
adc
mov
std
or
cmp
clc
xlat
loopne
popa
xchg
ret
leave
push
dec
sbb
pop
lret
adc
push
dec
add
adc
add
pop
mov
repnz
sbb
fninit
pop
lret
sbb
cmpsb
adc
cltd
inc
push
orb
add
int3
leave
xchg
or
mov
mov
or
addr16
push
adc
in
inc
int3
stos
nop
daa
daa
daa
pop
mov
mov
mov
jns
lret
test
mov
stos
xchg
add
ret
push
push
adc
push
push
mov
or
mov
mov
cmp
mov
push
cs
les
int3
lods
aam
dec
xor
and
mov
xor
and
mov
xchg
dec
hlt
sar
inc
dec
xor
add
enter
dec
sub
pop
adc
sub
xchg
dec
sahf
xchg
aam
leave
xor
mov
inc
fmull
push
dec
sub
xchg
dec
sub
push
lret
test
fcoms
push
outsl
insb
gs
jne
addr16
cs
inc
push
adc
mov
mov
movq
fs
jne
lret
das
pop
das
dec
jne
inc
imul
in
fldcw
pop
outsb
dec
jb
pop
outsl
jb
out
pop
stc
inc
insl
jo
inc
jb
insl
push
je
pop
push
insl
lahf
nop
and
inc
popa
je
and
in
fwait
jns
inc
outsl
outsl
insb
inc
jae
push
jb
adc
inc
jns
pop
nop
push
roll
test
fs
cmp
fimuls
sahf
aaa
aad
and
negl
sti
pop
in
adc
in
repnz
cld
iret
sbb
orb
sarb
sbbb
push
add
das
in
hlt
push
lock
lahf
out
sahf
jl
nop
int3
js
repz
and
push
enter
les
or
iret
aas
es
push
adc
dec
dec
stos
mov
nop
aam
pop
xor
js
or
rolb
shll
sarl
and
adc
mov
mov
add
test
inc
es
adc
fildl
add
cs
js
pop
inc
sti
mov
addr16
fadd
pop
testl
adc
pushf
dec
jbe
inc
roll
xchg
xchg
dec
adc
push
push
and
in
movsb
movsb
sbb
inc
mov
jns
jb
mov
int
pop
aam
or
popa
add
inc
jb
sbb
scas
inc
cs
je
adc
mov
insl
jo
xchg
add
leave
fcomp
cmp
aad
test
outsb
mov
jbe
idivb
jg
mov
movl
pusha
mov
arpl
xor
mov
inc
jge
xchg
pop
pop
adc
mov
outsl
in
xor
pop
jmp
jl
lods
pop
xchg
lahf
lret
leave
loope
xchg
mov
mov
pop
adc
sub
fsubrs
in
cmpsb
popa
and
pop
in
add
cmp
add
cmp
sub
daa
nop
add
xchg
xlat
or
nop
adc
xlat
rolb
xlat
jne
shlb
aad
fimull
cmp
aaa
and
sbb
pop
dec
es
sub
test
leave
mov
mov
dec
je
sbb
frstor
nop
es
shll
std
add
pcmpgtb
nop
rolb
pop
test
mov
sbb
clc
pop
stos
hlt
mov
dec
hlt
dec
hlt
shl
mov
xor
pop
shr
mov
addr16
sub
call
mov
out
mov
mov
jb
jae
loopne
nop
addr16
jecxz
adc
repnz
enter
sti
int3
or
add
pusha
cmp
rol
xor
fmul
nop
inc
shr
pop
mov
cmp
xchg
ficoml
rclb
mov
movsl
mov
shlb
in
push
popf
rclb
jmp
add
push
jp
je
adc
inc
or
adc
inc
fs
into
ficoml
scas
pop
aad
or
pmullw
mov
add
roll
roll
lods
mov
pushf
setg
dec
push
xor
mov
int3
adc
test
inc
ljmp
or
pushf
xchg
jne
dec
pop
flds
pop
ret
push
jmp
cmp
insl
adc
clc
lret
add
or
lret
ficomps
mov
cld
test
dec
or
inc
mov
or
push
add
andb
sub
jge
adc
push
sysexit
aam
ret
outsb
test
aam
mov
fists
adc
xchg
lea
add
and
push
lcall
popf
or
cmpl
imul
lea
clc
addb
add
movsb
fcomi
clc
mov
hlt
jge
xchg
pop
pop
adcl
inc
pop
and
mov
pop
xlat
sahf
jmp
inc
mov
cmpsl
dec
or
jge
cli
in
repz
dec
pop
lret
mov
sub
in
test
jae
sub
pop
push
insl
sub
lret
add
mov
cld
mov
roll
mov
pushf
testb
pusha
adc
or
sub
add
xor
inc
iret
jmp
sub
or
or
lods
xor
or
repnz
inc
and
add
add
adc
mov
adc
mov
pop
jb
mov
fcomps
jnp
fsubl
push
adc
int
mov
lea
adc
fs
ss
rorl
mov
call
or
mov
xchg
call
call
stc
or
or
push
pusha
xlat
mov
call
add
cwtl
pop
fs
cmp
and
mov
push
cmp
nop
mov
loopne
jo
cmp
jnp
dec
scas
pushf
enter
dec
dec
movsb
jmp
push
jge
jb
add
xchg
mov
adc
push
out
add
xchg
pusha
inc
daa
cmp
lahf
ss
decl
push
cmp
jns
mov
add
fldl2t
shll
dec
mov
incl
rcrl
mov
insb
xor
lcall
in
inc
add
ficoml
imul
adc
sbb
call
call
jbe
addr16
cmp
je
xchg
dec
roll
jne
push
xor
mov
inc
add
push
or
hlt
and
call
push
xor
jecxz
mov
and
sbb
mov
mov
cmc
dec
sbbl
sbb
leave
pop
dec
lds
nop
jns
add
popf
andb
sti
push
mov
mov
mov
and
inc
sbb
jo
cli
adc
cld
in
fstpl
ss
mov
es
lock
push
push
add
in
or
lock
fwait
xor
std
mov
in
lods
add
or
push
mov
inc
mov
andl
jo
jge
lea
clc
outsl
nop
jle
xor
aaa
jg
aaa
adcb
ss
addr16
pop
pop
test
cmp
ss
cltd
xor
adc
add
jecxz
sarl
ds
test
and
or
sarb
sbb
and
or
adc
or
xor
fistl
push
loope
push
mov
ret
xchg
push
inc
inc
sub
mov
test
cmp
inc
call
mov
cmp
femms
mov
pop
bound
cmpsb
push
inc
nop
xlat
xor
icebp
call
decl
mov
cmp
ja
in
stos
adc
mov
xchg
mov
aaa
insl
repnz
pop
push
add
daa
pushf
out
iret
ja
push
scas
leave
out
pop
mov
cmpb
sahf
cwtl
ror
mov
add
pop
mov
cs
mov
push
mov
xor
add
clc
push
rolb
fldcw
fisttpl
enter
in
js
inc
sbbb
pop
mov
add
sub
rcr
dec
repz
call
xor
fadds
cmp
dec
push
loopne
js
pop
ja
dec
xor
fmull
mov
loope
loopne
aaa
arpl
mov
aam
mov
repnz
rcl
shlb
mov
int3
cmp
jne
sar
mov
jge
or
enter
push
clc
ljmp
dec
je
jmp
xor
jb
and
mov
pop
or
test
out
jns
test
ljmp
in
rcrl
fs
idivb
out
out
pop
jns
out
sahf
imul
daa
jecxz
popf
cmpsl
stc
push
add
sbb
cmp
mov
add
cwtl
mov
mov
jecxz
flds
jae
mov
jb
mov
dec
xchg
fnsave
leave
mov
lods
shrl
mov
and
into
test
popf
test
and
movsb
test
dec
mov
arpl
xor
arpl
cwtl
jmp
arpl
aaa
xchg
dec
jbe
movl
in
sbb
dec
dec
ret
cmp
jb
sub
cmp
out
sub
call
test
add
ficoml
mov
xor
mov
enter
stos
jmp
jmp
cmp
mov
push
enter
xchg
jmp
jl
in
out
xor
inc
mov
ljmp
adc
inc
mov
aad
sbb
test
ljmp
push
push
push
and
dec
loopne
loopne
ljmp
ljmp
nop
aas
cmpsb
in
and
sahf
xlat
pop
sbb
jge
shl
lahf
out
sti
sbb
cmp
stc
sahf
out
in
inc
outsb
push
push
in
daa
loope
mov
rcr
in
in
fwait
xor
or
pop
dec
js
rorb
xor
cmp
les
test
cmp
insl
xor
lcall
and
stc
pusha
insl
in
loopne
mov
inc
fsubl
fdivl
add
dec
cwtl
fsubs
fdivs
and
mov
lods
pop
cmp
or
int
adcb
fdivr
insb
int3
filds
fnstenv
outsl
and
jbe
out
pop
in
in
or
sarl
iret
repz
insb
mov
xor
push
push
adc
and
xor
dec
out
and
imul
xor
xchg
shlb
xor
mov
aaa
and
inc
int3
xorl
mov
add
cmp
orl
popf
add
adc
test
test
les
es
movsb
and
mov
mov
jno
js
ret
pop
aaa
mov
cmp
xchg
popf
xchg
cmp
dec
and
xor
jbe
push
nop
jmp
inc
mov
mov
add
cmp
or
sbb
rol
adc
into
in
nop
orb
in
rorb
sbb
shll
jmp
pop
addb
sysenter
push
jg
xlat
inc
insl
jo
jns
add
mov
cwtl
addl
pop
inc
inc
addr16
and
leave
mov
add
inc
outsl
jne
adcl
outsb
arpl
insl
cmp
cltd
mov
xorl
fwait
popf
push
pop
xorl
sbb
add
outsb
pop
adc
or
leave
aas
push
outsb
imul
inc
arpl
dec
rol
scas
and
inc
iret
push
mov
mov
inc
jns
add
or
fs
popa
pusha
das
or
add
jb
ret
clc
js
fcompl
adc
or
pop
or
xchg
clc
call
push
xorb
push
and
loop
inc
sti
shrl
hlt
mov
dec
ds
push
or
jmp
lea
xchg
cmp
xchg
sbb
cld
stc
pushf
icebp
add
lcall
dec
push
fnsave
les
popa
add
xor
inc
mov
or
and
test
cld
cmp
xchg
push
or
sub
aad
repnz
std
dec
cmpsb
cmpsb
and
in
orb
adc
mov
std
sarb
mov
gs
pop
mov
or
cmp
add
adc
cs
xrelease
xor
rcl
inc
in
jno
icebp
dec
mov
push
rclb
ret
aad
push
insb
pop
inc
push
cmp
fmuls
xor
pop
add
mov
cmp
cli
jle
test
pushl
fdivl
jo
popa
xchg
dec
and
out
mov
mov
jg
xor
mov
lds
adc
push
and
jg
dec
xlat
sbb
cmp
xchg
jg
push
push
push
js
jge
fsubrl
cld
cmp
je
clc
adc
dec
and
xchg
add
pop
dec
jb
ss
int3
jle
mov
cmp
inc
dec
sarb
push
add
add
addb
mov
mov
xchg
int
push
or
adc
ret
xchg
pop
and
pop
pop
orl
cmpsb
std
mov
nop
adc
xor
inc
add
inc
rolb
or
push
mov
sbb
repz
cmc
subb
mov
int
sbb
jle
sbb
xchg
subb
add
jge
mov
or
popa
daa
lods
add
push
ret
cmp
jnp
lret
cmp
aaa
adc
movsb
bswap
call
pop
pop
iret
pop
dec
add
loopne
jp
nop
enter
pop
or
dec
push
rcl
test
mov
and
jns
dec
inc
sub
xchg
sti
cmp
outsb
pop
rol
setg
inc
mov
sbbb
fnstenv
loope
mulb
test
ret
cmc
sbb
negl
pop
jne
push
jo
or
ljmp
repz
rclb
or
mov
inc
testl
loope
sahf
enter
inc
mov
mov
mov
mov
push
fiaddl
xor
fnstsw
shrb
cmp
sbb
loopne
push
jns
inc
mov
jecxz
in
adc
push
push
aaa
sbb
insb
shll
mul
in
repnz
stos
shrd
scas
nop
xchg
in
in
xchg
xchg
xchg
xchg
push
mov
jmp
clc
or
leave
inc
cmp
nop
clc
pop
pushf
adc
cmp
out
xchg
jne
dec
das
add
out
push
stc
cmp
mov
xchg
xchg
mov
adc
pusha
cmp
scas
inc
inc
pop
xchg
inc
ja
stc
inc
movsb
stc
nop
pop
sbb
cmpb
insl
btsl
jg
cli
aaa
add
mov
and
imul
pusha
pusha
mov
xorl
or
xor
mov
dec
jo
outsb
mov
sti
daa
out
xor
jb
or
xchg
insb
insb
enter
stos
and
add
sarl
daa
les
add
iret
fwait
mov
cld
out
sbb
sbb
or
imul
enter
fimull
out
mov
aas
cmpsb
xor
sti
xchg
sub
fdivs
jne
arpl
add
std
ja
std
sbb
mov
adc
inc
or
mov
sub
jecxz
push
data16
test
cmp
push
pop
or
or
imul
dec
hlt
lock
xchg
out
and
mov
imulb
scas
js
fidivrl
pop
pop
push
pushw
add
sub
add
clts
inc
push
push
add
jne
fnsave
push
sbb
push
pop
jae
pop
imul
pop
xchg
movl
pop
sbb
pop
inc
insb
popa
adc
pop
xchg
outsl
xor
pop
add
sti
fs
int3
popf
jbe
push
mov
scas
rorb
enter
cmp
push
int
shr
dec
push
js
add
or
enter
cmovno
adc
cwtl
sub
mov
xorb
xor
std
dec
mov
cmovns
inc
fs
jo
fnsave
add
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
les
add
push
enter
add
cmp
adc
call
ss
mov
or
pcmpeqb
int
int3
push
push
mov
jnp
repz
sbb
data16
imulb
test
js
push
adcb
jl
mov
mov
push
push
sbb
cmp
mov
inc
sbb
lock
scas
pop
sbb
ljmp
xchg
mov
or
pop
add
aaa
pop
add
out
and
pop
lock
and
xor
call
xor
mov
clc
and
ss
mov
push
enter
mov
sbb
jl
sbb
push
pop
clc
es
les
pop
push
and
out
fwait
bound
xchg
push
out
inc
push
popa
mov
push
add
push
mov
push
pshufw
add
inc
dec
ja
jg
enter
pop
andb
es
push
pavgb
add
cld
or
inc
fnstsw
mulb
push
je
and
xor
inc
es
or
enter
inc
pop
add
je
push
leave
pop
leave
xchg
xor
inc
inc
cmp
in
int3
out
xchg
mov
sbb
jo
inc
test
adc
fsts
dec
add
and
out
push
enter
int3
cmp
div
sub
add
fs
repz
jl
adc
aas
push
push
dec
fs
out
or
push
sbb
inc
das
jmp
ret
test
dec
nop
loopne
adc
aas
adc
and
fcomip
dec
or
addr16
jb
jne
scas
push
push
add
inc
xchg
sbb
mov
push
push
dec
imul
std
inc
add
or
inc
or
adc
pusha
add
or
xchg
in
fmull
aam
test
dec
cmp
stc
ret
cmp
push
push
push
add
ljmp
in
mov
push
inc
clc
negl
ds
cmp
xrelease
test
into
lods
mov
sarb
into
fwait
sti
adc
imulb
or
cli
and
inc
pop
arpl
add
nop
add
dec
dec
xor
push
sub
sub
inc
inc
test
daa
icebp
mov
ret
clc
lock
dec
fmuls
mov
lar
das
cmc
jo
fldl
loopne
in
movb
insl
negl
adc
outsl
repz
idivl
push
jl
inc
xor
sbb
ret
inc
xlat
out
testl
push
mov
push
daa
jns
int3
aaa
add
adc
pop
dec
and
xchg
ret
mov
sbb
rol
jle
testb
mov
and
add
insb
flds
fisttpl
lret
clc
dec
pop
add
rorb
or
cmp
push
int3
in
or
xor
add
call
mov
xchg
sub
mov
mov
shll
or
or
or
inc
adc
pop
fldlg2
mov
clc
int3
push
enter
add
xchg
jg
loop
add
dec
and
pop
faddp
dec
ret
bound
incl
cwtl
sbb
cld
mov
jmp
ret
push
xchg
inc
sub
es
and
sbb
sub
add
fs
adc
inc
sti
xchg
loope
js
adc
or
sub
and
nop
add
or
xlat
push
pop
pushl
cmp
insl
scas
adc
mov
add
xor
andb
leave
inc
inc
dec
insl
push
loopne
aad
inc
addb
call
fcmovb
popa
xor
cwtl
or
scas
adcb
mov
into
and
dec
cmpl
adc
lock
sub
mov
shl
lea
or
pop
sbb
add
arpl
push
mov
rorb
xor
sbb
popf
add
sar
pop
jmp
adc
pop
jb
or
jp
arpl
dec
jl
into
xchg
les
ud2
inc
rorl
imul
mov
cli
inc
pop
adc
leave
rol
fiaddl
data16
and
adc
sbbl
mov
xchg
paddsb
add
addl
add
adc
push
mov
cli
repnz
leave
cld
rcl
daa
xor
mov
adc
adc
push
mov
ds
lahf
test
cmp
shl
mov
add
rcrb
inc
aas
es
add
jns
mov
sbb
fsub
pusha
xchg
jle
sbb
inc
cwtl
xor
xchg
lods
jmp
flds
sub
jg
dec
adc
rcll
lock
sbb
adcb
mov
xchg
push
out
and
add
test
std
mov
pop
repnz
push
or
push
add
add
push
sub
sbb
or
push
add
sbbb
mov
lods
incl
and
add
xlat
insb
inc
jne
test
stc
aam
push
dec
add
add
into
or
in
inc
inc
mov
mov
add
das
aaa
femms
and
arpl
and
mov
push
push
ret
adc
outsl
add
and
inc
mov
ljmp
fs
inc
or
dec
push
cmovno
shlb
sbb
fidivs
xor
xchg
inc
and
xor
and
and
sub
lods
or
test
hlt
sarb
jae
sbbb
loop
or
setno
add
pop
add
insb
add
xchg
das
cld
mov
inc
fnstcw
xor
scas
outsb
mov
imul
and
sbb
adcb
dec
push
or
pop
pop
or
cmpsb
pushl
js
cmp
jne
pusha
add
or
push
mov
jne
pusha
iret
and
jmp
and
inc
aam
enter
ret
nop
pop
pop
ret
push
clc
test
enter
es
add
aas
push
adc
out
das
fs
mov
xchg
adc
fmuls
pop
sbb
pusha
int
xchg
pusha
mov
testl
cmp
mov
rol
and
adc
sub
cmpsl
mov
je
adc
mov
lock
sub
sub
call
mov
sbb
stos
out
fmulp
mov
cmp
dec
jne
inc
mov
lahf
add
xor
adc
hlt
push
and
add
jmp
add
imul
cld
mov
les
mov
mov
push
mov
adc
sub
push
push
add
or
pop
js
pop
jno
mov
lds
cmp
pop
cmpxchg
or
aam
lret
xor
inc
dec
imul
scas
jo
sub
ja
in
pop
divl
dec
clc
roll
repz
adc
pop
and
mov
xor
add
push
mov
sub
sbb
push
sbb
into
inc
xor
shrl
cmp
pop
rcrl
sub
cmp
mov
lock
daa
jmp
cmp
call
xor
cmp
jne
fdivrs
js
cld
lock
pop
in
push
in
test
icebp
push
or
insb
jne
inc
shll
add
in
inc
in
mov
sbb
xlat
add
in
and
in
xor
je
and
xor
ret
mov
xor
jnp
pop
mov
lock
cmpb
sub
cld
adc
enter
aad
xchg
pop
and
rcr
ficoms
and
sub
push
cmovno
xor
movsb
lock
or
stos
add
xchg
mov
int3
mov
mov
int
sub
or
lret
les
push
push
add
xchg
push
sets
and
push
cmpsl
or
test
loop
push
sub
add
stos
jne
xor
xor
inc
cmp
mov
inc
sbb
push
cmp
push
push
push
push
push
push
push
cwtl
dec
jb
sub
fwait
pop
call
stos
lcall
mov
adc
xchg
sbb
cmp
out
add
ficoms
loopne
add
xchg
mov
adc
cld
or
lea
add
hlt
insb
stos
pushf
add
cld
adc
rorb
cmp
xlat
fcoml
jae
pop
add
or
and
repnz
sbb
jl
lahf
ds
push
and
call
in
rol
daa
test
shr
jne
jecxz
add
movsl
ret
lahf
sti
and
jl
sbb
call
test
fstpl
jne
xchg
dec
sbb
and
lock
ljmp
pop
stos
out
dec
sbb
inc
xor
popf
xor
jmp
je
and
push
or
pop
dec
movsb
lods
ret
dec
push
or
adc
js
aaa
jle
xor
mov
add
cwtl
xlat
add
das
mov
insb
mov
sbb
ret
add
bound
pop
clc
add
insl
add
sbb
mov
call
sub
lea
xlat
std
ret
push
xchg
or
out
scas
nop
jne
mov
push
sub
xlat
xor
pop
adc
popa
add
js
pop
leave
and
mov
pop
dec
push
add
enter
sbb
movsb
cmp
xchg
arpl
push
mov
loop
xor
loope
adc
dec
push
jnp
fisttps
out
jl
loop
jmp
push
pusha
addl
mov
out
push
lods
add
aad
sbb
sub
lds
sbb
mov
test
dec
sbb
mov
push
leave
add
pop
and
sbb
sub
lock
cmc
sbb
out
sbb
push
test
and
sbb
mov
fndisi(8087
or
xchg
cwtl
insl
adc
repz
xor
cmp
xchg
inc
or
ret
js
sbb
decl
inc
sbb
push
and
sbb
inc
jmp
fadd
mov
mov
idivb
or
add
sbb
jno
sub
push
xchg
and
movsl
fldcw
jne
or
add
and
sub
jecxz
leave
dec
sbb
gs
cmp
pop
pushf
arpl
sbb
arpl
push
in
hlt
sub
out
jno
lds
iret
testb
xor
cmpl
jle
cmp
jne
testb
orb
sbb
subb
mov
xor
sub
cmpsl
aad
nop
add
adc
mov
fildl
adc
dec
sub
xchg
sahf
mov
pop
sub
lret
ret
cmp
and
adc
xor
shlb
shr
lods
sub
and
and
sbb
imul
nop
inc
cmp
or
xchg
movb
mov
xchg
mov
movb
pop
imul
cmp
sub
enter
pop
and
and
sub
jmp
adc
push
fnstenv
mov
dec
adc
push
cltd
or
inc
ret
push
leave
je
popf
cmpb
nop
setbe
gs
add
les
fsubr
inc
adc
or
add
xorl
roll
imul
frstor
pop
cld
lock
dec
das
inc
fbld
sbb
negb
mov
dec
add
js
push
loopne
subb
fiaddl
dec
pusha
outsl
outsl
das
adc
je
jg
mov
jmp
dec
je
rorb
cwtl
shlb
out
add
and
mov
stos
sti
add
addl
pop
xor
jle
ret
sub
ja
xor
add
adc
adc
or
ret
aas
scas
add
enter
sbb
leave
fwait
das
repnz
movb
mov
mov
jp
adc
cmpsl
push
scas
push
lock
lcall
shll
mov
lock
add
pop
int
je
int3
xorl
or
mov
sub
sbb
inc
sbb
xor
dec
and
sbb
sbb
or
inc
fs
nop
and
out
xlat
push
jns
push
ficomps
xorl
jne
repz
sbb
push
sarl
in
jl
rorl
mov
popa
and
jne
add
adc
aam
rol
push
push
mov
or
and
nop
lret
jg
add
leave
fnstsw
inc
xchg
add
pop
xor
add
cmp
jne
mov
testb
inc
jge
sbb
jle
jnp
adc
sub
pop
adc
test
shrl
add
inc
dec
xor
lea
sbb
lea
add
ret
xchg
xchg
imul
pop
mov
or
rolb
jnp
lock
sub
add
xor
loopne
xor
cmpsl
and
cmp
dec
inc
loopne
pop
mov
mov
cmp
sbb
xchg
sbb
pop
pop
jbe
inc
rol
ret
push
repz
gs
insl
ret
jno
or
jae
fnsetpm(287
add
cmp
fidivl
mov
or
pop
daa
dec
clc
sub
sub
cmpl
xorb
add
add
clc
in
jbe
and
pop
mov
push
dec
xor
jecxz
add
ja
xchg
or
xchg
pop
pop
icebp
and
pop
add
lea
stc
lods
in
add
sub
out
mov
pop
loopne
daa
push
add
mov
fsubs
fsubr
or
xor
or
cmp
jne,pn
pop
xor
mov
dec
xor
data16
and
or
inc
pop
lea
cltd
push
push
mov
lock
add
dec
push
lret
jg
sbb
jo
cltd
push
lcall
sub
sub
adc
pop
cmp
xor
fcoms
mov
sti
outsl
dec
cs
cs
mov
shll
push
and
in
rol
sbb
mov
or
jmp
adc
mov
xor
mov
or
dec
loope
inc
sti
add
add
jbe
or
sbb
out
dec
pop
and
jmp
sbb
test
cltd
cmp
insl
es
jbe
add
out
mull
lret
stc
push
jo
fisubl
mov
inc
jecxz
shrb
mov
mov
push
out
mov
or
jo
movl
mov
iret
inc
mov
fsubs
outsl
mov
push
jne
repnz
push
mov
and
cmp
sub
aad
popf
push
callw
lock
inc
inc
pop
sub
sbb
or
mov
sbb
and
or
push
and
faddl
add
in
sub
mov
fiaddl
jne
mov
pop
or
sub
aam
jnp
clc
lods
add
popf
xchg
punpckhdq
addb
pusha
push
xchg
pushf
xchg
cmpsb
jmp
in
add
mov
push
enter
arpl
rcrl
pop
enter
enter
enter
scas
mov
or
adc
inc
fmull
mov
roll
add
mov
and
mov
sbb
jo
push
jnp
sub
cmp
mov
adc
sub
test
movsb
cmp
push
aad
test
add
into
add
cmpb
std
mov
or
dec
sar
fnstcw
or
push
add
sbb
sub
sbb
pop
inc
sbb
add
sbb
xchg
dec
rcrb
test
jae
mov
ljmp
inc
aad
xor
pop
out
xchg
jbe
das
adc
jge
data16
sarb
mov
outsl
sbb
adc
push
jmp
pusha
or
mov
or
jmp
test
fs
je
push
fmull
inc
xchg
lock
mov
icebp
mov
bound
sbb
jmp
daa
test
xor
pop
pushf
sub
pop
sbb
jo
sub
rorl
pop
or
es
fdivl
ret
pop
xor
add
mov
sub
jnp
jle
or
add
pop
push
addb
dec
mov
jp
sub
inc
pop
aaa
ud2
dec
add
pop
enter
adc
push
stc
and
xadd
fldt
or
cmp
sbb
sbb
sbb
fadds
ficoml
mov
clc
inc
int
mov
push
shrb
adc
ret
mov
mov
mov
xchg
out
add
js
stos
outsl
dec
je
inc
andb
cmp
or
inc
enter
lds
mov
jno
sbb
and
cmp
es
adc
and
xor
inc
test
int
lahf
aam
dec
push
daa
sbb
outsb
jle
mov
pop
mov
sub
mov
push
mov
jb
push
sub
les
loop
add
mov
push
insb
mov
rcll
fdivs
pop
jg
stos
dec
rcr
decb
inc
adc
lock
aam
inc
add
mov
sbb
add
popa
mov
negl
ret
sub
insl
add
test
outsl
mov
repz
cmp
sbb
inc
or
and
repz
das
inc
push
enter
stos
jl,pn
jne
clc
and
loopne
gs
popa
jmp
outsl
call
sub
je
push
adc
pop
add
add
add
or
fwait
xchg
push
add
addr16
jp
and
sub
addr16
xor
je
sub
push
hlt
pop
iret
inc
xor
add
inc
lock
jmp
push
inc
aaa
int3
bound
or
ds
dec
cmpl
rorl
roll
lea
out
in
push
dec
xor
call
orl
cmp
mov
pop
lods
sub
xor
jbe
and
jnp
xchg
inc
add
mov
pop
or
sub
xor
fadd
xor
shll
or
scas
cmp
mov
jae
lea
xor
pop
mov
pop
stos
adc
xor
adc
mov
push
cld
push
push
and
inc
fsts
jns
ja
insb
jp
adcl
mov
int
insb
aad
xchg
pop
adc
and
xchg
pop
and
add
out
adc
or
pop
xchg
lcall
add
ja
pusha
adc
das
pop
push
adc
add
jmp
mov
fwait
nop
cmp
xchg
sbb
sub
pop
shrl
pop
das
movsb
js
jns
xor
inc
xor
pushf
jmp
xor
das
cmpsl
push
dec
pop
dec
je
adc
std
mov
adc
sub
jnp
pop
xor
sarl
add
mov
into
fwait
dec
or
dec
jmp
es
mov
lret
push
xchg
cltd
sub
add
add
dec
pop
pop
sbb
sub
adc
sbb
sbb
push
dec
clc
xchg
jne
insb
je
mov
cmp
stos
jl
mov
addr16
jae
mov
pop
jmp
sbb
sub
mov
xor
jg
mov
outsl
add
movsb
and
in
pop
mov
mov
mov
or
rorl
addr16
inc
enter
in
push
mov
invd
rcrb
loope
dec
aas
push
push
xor
add
cmp
test
shr
mov
addr16
or
cmp
scas
mov
mov
mov
shrb
rol
out
test
or
xor
mov
pop
cmp
nop
shld
sub
fs
insl
aaa
test
jge
dec
mov
inc
and
ljmp
repnz
cmpb
dec
fistl
sbbb
mov
stc
aaa
clc
inc
aam
mov
mov
and
pop
cmp
leave
ss
push
pop
stc
push
xchg
fwait
movsb
dec
dec
popa
sub
xchg
ret
lret
sub
jo
lret
scas
mov
aam
popa
lock
push
div
mov
daa
mov
and
ret
and
aad
add
inc
xchg
xchg
into
or
setns
fwait
pushf
popf
sahf
xchg
xchg
xchg
xchg
lahf
addb
addl
xchg
aaa
js
mov
cmpsl
js
add
push
inc
pop
inc
inc
ljmp
cmp
ds
cmova
enter
mulb
mov
sbb
adc
test
push
inc
sbb
dec
dec
dec
inc
es
add
xor
data16
gs
mov
adc
cmp
testb
push
imul
nop
rolb
sti
inc
xchg
loopne
add
push
fbld
stos
call
jns
xor
fcomip
xor
clc
xor
data16
enter
sbb
pusha
dec
je
arpl
adc
psrad
sub
push
push
sub
imul
inc
dec
cmp
or
add
inc
movsl
adc
fistps
cmpsb
pusha
cs
jo
outsl
sbb
push
inc
popa
jae
add
or
je
sbb
or
pusha
outsb
add
mov
cmpsb
pusha
loopne
fcmovb
test
iret
or
int
lea
iret
bswap
insl
inc
insb
push
out
push
push
push
dec
outsl
jo
je
push
inc
or
sbb
or
jae
mov
sbb
mov
cs
adc
xor
imull
or
jnp
add
adc
lret
adc
mov
add
jne
jl
inc
fimull
test
bound
pop
cs
add
dec
jl
jp
ss
or
push
mov
nop
iret
jl
adc
cs
inc
imul
out
pop
outsl
jb
jae
es
adc
pop
pop
push
inc
jp
fisubs
sbb
pop
adc
mov
push
andps
pop
xchg
or
mov
sbb
inc
xor
sub
push
or
out
imull
data16
test
and
clc
adc
fsubrs
nop
and
scas
mov
push
pop
ds
repnz
loopne
cmpsl
cmp
push
mov
push
pop
pushf
jb
out
adcl
cltd
mov
jo
pushf
imulb
and
push
pop
lds
addb
lods
aaa
add
mov
push
add
jmp
sub
aas
out
std
mov
imul
inc
nop
shrb
and
jae
pusha
push
scas
sti
jmp
in
jl
push
add
dec
repz
add
dec
cmp
xor
rclb
pushf
cmp
lahf
mov
test
jp
mov
sub
add
idivl
pop
sbb
lds
pop
xchg
add
orl
or
add
push
xlat
mov
rcll
xchg
add
add
mov
cmp
adc
aas
pop
ds
mov
add
je
data16
pop
rcrl
push
dec
sbb
pop
hlt
push
push
ret
insl
fstpl
lahf
pop
sbb
add
add
pop
adc
scas
and
jmp
pop
mov
sub
add
pusha
aas
scas
out
adc
pop
shrb
test
shlb
inc
popa
mov
jae
pop
sbb
push
lret
sbb
push
movsl
mov
jnp
xchg
add
or
push
int3
mov
push
js
or
or
gs
repnz
add
pop
mov
push
inc
shll
imul
sub
fcomps
sbb
xchg
ret
sbb
fs
sub
ret
jns
jnp
inc
stos
dec
push
push
and
or
mov
es
sbb
rorb
frstor
out
or
sbb
iret
mov
mov
push
add
lock
push
jb
je
jae
lods
je
shll
xchg
pop
hlt
jne
jne
neg
sahf
fnstcw
paddusb
pop
lock
mov
pop
adc
adc
popl
add
enter
push
es
mov
dec
insb
orb
sbb
and
iret
repz
mov
xchg
mov
push
test
or
cmpsl
loope
mov
inc
sub
cmpsl
cmpsl
pop
inc
push
jbe
hlt
jp
jnp
mov
dec
mov
add
or
jge
push
xor
je
sbb
pop
and
inc
xchg
hlt
push
in
das
dec
rorb
or
push
mov
push
push
les
dec
insl
popa
addr16
popf
mull
fiaddl
dec
ds
cwtl
rcrb
mov
sub
mov
ret
nop
movsb
out
cltd
fmuls
or
mov
sub
sub
sahf
in
cmpb
inc
push
rolb
xor
mov
rorb
cmpl
inc
jl
ds
sub
push
jle
inc
pop
xchg
cmp
shll
aam
mov
shlb
jle
dec
push
pop
and
pop
insl
inc
xchg
out
ret
test
inc
je
loop
scas
insb
nop
xchg
ds
imul
and
mov
scas
sbb
fwait
jbe
jae
xchg
fwait
jo
jl
xor
lahf
in
mov
pop
cmpsb
jp
stos
shrb
xchg
lock
into
data16
add
xchg
inc
pop
orl
pop
sbb
mov
int
rolb
mov
push
rolb
or
outsl
outsb
pop
sub
iret
lds
cwtl
pop
mov
dec
jb
push
cmp
insb
mov
mov
add
or
ds
xchg
add
sub
mov
push
in
rcrl
repnz
mov
mov
in
adc
push
sub
ja
dec
pop
sbb
imul
jmp
jl
je
pop
xchg
shl
addr16
ret
nop
adc
push
adc
mov
dec
adc
xchg
jne
popa
outsb
nop
ds
mov
xor
rol
xor
inc
dec
jne
mov
inc
or
mov
lods
je
mov
xchg
and
es
and
pop
jle
mov
push
jge
repz
cwtl
jle
mov
mov
clc
jmp
sarb
xchg
and
outsw
jecxz
fidivl
aad
repz
fcoms
out
rorl
sub
addr16
xor
test
sub
push
adc
add
mov
adc
pusha
pusha
mov
popf
xchg
sub
push
adc
mov
roll
or
decl
rorl
jns
movsb
jg
mov
shrl
mov
dec
dec
sub
decl
in
mov
sete
lret
xor
shll
cmp
push
les
sbb
add
inc
mov
cmp
mull
dec
lods
sbb
pop
and
js
rolb
jmp
mov
dec
test
dec
sahf
nop
outsb
outsl
or
xlat
cmp
adc
je
add
adc
bound
cmp
leave
adc
push
xor
mov
xlat
sbb
inc
add
jecxz
dec
adc
mov
movl
push
insl
jbe
outsl
and
mov
gs
pop
dec
insb
imul
dec
decb
jbe
add
jb
insb
gs
pusha
scas
sarb
popa
insb
pop
cs
lret
and
push
imul
cld
cmp
insl
gs
pop
gs
insb
outsl
ja
outsb
setbe
jne
and
imul
and
rcll
or
orl
add
xlat
push
lods
mov
dec
insl
inc
dec
mov
data16
push
arpl
and
rorb
das
cmovae
push
jo
push
pop
imul
adc
mov
push
adc
mov
inc
je
inc
aam
mov
push
xchg
dec
mov
inc
add
popf
mov
cld
pusha
xchg
push
gs
or
sub
push
ljmp
xchg
imul
out
in
dec
outsb
popa
inc
pop
or
add
andl
mulps
outsl
je
lock
sub
adc
repz
mov
aaa
adc
adc
add
or
outsw
inc
push
xor
pushw
jg
loop
loope
pop
outsb
jne
pop
add
mov
bswap
mov
das
lahf
dec
xor
push
or
push
arpl
add
inc
xor
shrl
push
mov
cmp
or
mov
dec
or
xchg
fsubrl
or
nop
xor
fwait
jmp
pop
ret
push
mov
mov
xor
adcl
or
push
or
cltd
push
jg
adc
pop
pop
testl
mov
sbb
dec
inc
push
push
inc
push
add
inc
inc
inc
push
dec
push
xor
notl
dec
inc
dec
dec
arpl
in
cmovge
push
adc
inc
push
dec
dec
push
shr
pusha
mov
shlb
mov
or
popa
out
inc
inc
mov
adc
xor
xor
adc
inc
dec
inc
and
testb
xor
inc
dec
mov
stc
sbb
dec
push
dec
dec
mov
imul
push
das
sbb
mov
and
inc
inc
dec
push
mov
dec
inc
dec
push
out
push
dec
pop
push
repz
push
push
push
dec
push
inc
scas
lods
jecxz
jns
inc
dec
push
mov
add
scas
pop
xor
adc
mov
pop
jo
cmp
pop
dec
or
mov
inc
movsb
sub
adc
add
fwait
test
lods
cmpl
xor
rcrl
or
call
mov
and
nop
jle
ds
push
inc
mov
out
push
dec
adc
in
xchg
sbb
int3
mov
addl
mov
cmp
je
jne
call
iret
mov
lret
cmc
xchg
loop
shl
outsb
sub
cmp
mov
inc
mov
cld
and
cli
out
cmp
in
fbld
insb
and
jmp
or
adc
push
sbb
bound
popa
or
pop
sbb
mov
mov
leave
inc
cwtl
sub
push
or
push
xor
cwtl
push
add
dec
and
out
or
sub
or
enter
inc
sbb
je
imul
pop
adc
cwtl
xor
mov
inc
aam
add
mov
mov
adc
addl
push
adc
pop
rolb
sbb
lea
insb
jmp
jo
xor
jle
sahf
test
fiaddl
push
fcomp
jno
pop
div
imul
or
fildl
jmp
or
dec
or
add
add
dec
inc
shll
push
loop
xor
inc
popf
inc
cmp
dec
xor
in
mov
push
stos
mov
outsl
mov
dec
sbb
test
and
cmp
sub
or
rorl
outsb
aam
imul
cmpsl
pop
stc
out
sti
push
sub
mov
push
out
mov
inc
mov
sbb
mov
xorl
push
push
sub
cmp
mov
out
fnsave
push
das
xchg
neg
push
dec
push
jg
jp
mov
mov
ja
mov
fsub
add
inc
pop
sub
aam
cli
or
sahf
aam
inc
outsb
inc
sbb
fcmovnb
scas
jge
or
arpl
loope
das
pop
sbb
push
jb
les
imul
movb
push
mov
add
out
int3
pushf
or
inc
mov
cmp
or
enter
scas
push
int3
mov
jns
cmp
jg
push
add
adc
fstl
add
shlb
jns
jg
and
repnz
push
int3
dec
push
and
lock
insb
mov
clc
pop
add
xchg
push
cmpsl
mov
or
ja
pop
fcos
xchg
pop
jne
adc
inc
sbb
mov
inc
or
push
inc
cmp
shlb
mov
das
in
or
pusha
add
mov
mov
das
sbb
in
leave
lock
loopne
mov
lcall
pusha
cwtl
das
push
pop
or
cmpsb
rcrb
inc
sarb
and
mov
test
in
dec
addr16
shlb
outsb
pop
xchg
pop
sub
adc
nop
repnz
sbb
ja
pop
or
adc
add
aaa
cltd
stos
pushf
dec
cwtl
addb
add
cs
xor
lock
xchg
pushf
pop
sbb
pop
aam
inc
xchg
jnp
mov
add
sub
and
jg
das
test
xor
push
shlb
scas
push
xor
and
jmp
addr16
inc
sub
je
push
adc
sti
dec
pushf
add
in
pop
hlt
lock
sbb
and
push
or
mov
sbb
push
or
orl
cmp
nop
dec
mov
xlat
add
cmc
inc
nop
cmp
inc
mov
into
aaa
ja
mov
movl
xchg
lret
pushf
inc
push
cmp
jns
nop
xchg
ds
mov
add
xor
and
sub
adc
mov
loop
insl
sub
stos
adc
cmpsb
pop
and
add
outsl
enter
dec
fimuls
pop
push
adc
sbb
shlb
mov
bound
ret
mov
sbb
clc
and
mov
xor
add
push
push
jno
enter
test
ds
pop
fsubs
es
aam
or
roll
adc
or
sahf
mov
cmpsb
scas
daa
xorl
aam
rclb
jne
dec
jl
loopne
pop
add
test
mov
or
dec
cmp
jg
outsb
add
adc
pop
xchg
sbb
adc
roll
mov
popa
sub
jl
lret
pop
in
mov
dec
test
cmp
lret
movsb
xchg
pop
divb
or
jbe
fwait
dec
pop
std
xchg
jae
ljmp
movsb
ds
and
mov
cmp
je
mov
out
push
push
movsl
movsb
mov
nop
inc
iret
cmpsb
or
mov
sar
orps
aas
outsb
es
xlat
sbb
dec
xlat
dec
mov
mov
sar
xorl
and
orb
dec
jl
adc
push
fdivr
jnp
mov
sub
mov
not
and
mov
jo
cmp
je
or
jmp
and
or
inc
inc
hlt
into
cwtl
mov
cld
in
pop
insl
push
add
dec
push
add
sbb
hlt
or
jb
dec
mov
push
and
or
and
pushf
cmp
subb
sbb
adc
jb
cmp
pop
fcoml
cmp
dec
inc
repz
jnp
push
and
and
dec
and
add
sbbl
movsl
mov
adc
dec
add
sbb
aaa
divb
test
ds
jb
jl
mov
mov
cmp
jl
adc
les
inc
int
xor
xorb
mov
inc
in
pushf
in
popa
inc
and
in
jns
inc
mov
sbb
mov
sbb
push
loope
ret
cmp
cmc
daa
adc
push
repz
inc
das
jmp
dec
sbb
inc
sub
dec
aaa
fs
enter
and
ljmp
in
add
xlat
sub
scas
push
mov
f2xm1
push
movsb
stc
inc
sbb
sub
bswap
push
push
push
inc
test
xor
add
add
pop
hlt
xor
clc
test
shr
add
in
inc
cmp
icebp
imul
pushf
pop
lock
cs
ja
movsl
test
push
cmp
sbb
test
dec
lock
push
int
cmp
out
pop
push
mov
push
mov
add
mov
adc
dec
inc
dec
fdivrl
mov
ret
add
movsb
icebp
add
push
rcrb
call
fistpll
ret
shl
mov
xor
not
and
and
sub
pop
shrl
inc
cwtl
aas
fdivrl
mov
sbb
hlt
data16
fdivrs
pushf
pop
imul
sub
test
sub
ret
adc
lahf
add
xor
push
test
cmp
pop
push
jne
mov
xor
int3
push
or
or
repz
in
sbb
and
sub
xchg
and
lcall
xor
mov
in
fistps
fsub
and
pop
cmp
sbb
push
push
mov
lock
mov
pop
es
cmpsl
imul
fdivl
cmp
sub
dec
jmp
jns
arpl
fisubrl
pop
pushf
dec
ds
mov
add
xchg
sbb
ficompl
into
filds
push
inc
daa
or
adc
adc
sbb
stos
popa
mov
mov
xor
dec
sbb
inc
out
adc
mov
xor
adc
call
add
subps
sbb
push
adc
insb
jnp
add
cltd
mov
jg
test
xor
repz
and
mov
mov
faddl
mov
mov
add
dec
sub
xlat
push
sbb
push
mov
test
movsl
mov
lcall
pop
pop
out
pop
cld
or
jne
cmpl
or
sub
dec
inc
mov
add
pusha
add
je
cmp
xchg
movl
push
lea
loopne
test
mov
and
fistpl
cmp
and
or
jmp
in
iret
and
jecxz
adc
jecxz
mov
mov
jmp
jmp
test
add
adc
cmpl
push
mov
adc
or
insl
push
dec
inc
lods
push
testb
adc
cmp
cs
and
sbb
sarl
add
ds
ds
mov
lahf
inc
movzwl
lea
lock
pop
push
cmp
pop
movsb
push
cs
jmp
addr16
shlb
testl
push
imul
and
push
cmpl
fdivl
clc
orb
rorb
cmp
jl
fists
dec
das
dec
js
sub
movzwl
lea
or
and
imul
out
push
inc
test
outsb
notb
add
adc
cmpb
pop
mov
pop
push
push
addr16
std
int3
or
jns
ss
adc
sarl
sbb
dec
jmp
es
xor
js
mov
dec
cmp
sarb
sar
cmp
movups
add
scas
or
add
outsl
sub
xchg
or
add
add
push
lahf
push
je
push
push
icebp
xor
ret
dec
mov
and
inc
push
movsl
mov
dec
repz
jmp
rol
das
clc
bound
push
push
mov
push
cmpsl
mov
pop
add
sub
enter
call
das
nop
dec
adc
aaa
and
js
arpl
mov
add
jl
popf
daa
and
inc
pop
loopne
lock
hlt
add
xchg
push
cmp
xor
das
or
out
and
or
add
push
jo
test
pop
cwtl
cmpsb
shll
movl
push
pmaxub
rorb
xor
jle
cld
push
xchg
cmp
push
push
stos
imul
lods
jb
and
cmp
sbb
outsl
arpl
nop
lret
inc
sub
rolb
inc
mov
int3
pop
add
add
subl
movzbl
sbb
mov
roll
imul
gs
jmp
test
jle
cmp
jl
mov
xchg
nop
sahf
mov
or
cmp
clc
jle
orl
xchg
lods
xor
stc
jno
jge
popa
dec
jo
cmp
jp
push
ss
cli
dec
mov
add
sbb
fwait
push
addr16
js
push
sbb
pop
lret
adc
push
fcompl
in
nop
out
fdivs
mov
xchg
sbb
and
imul
pushf
les
popf
rorb
cs
jmp
mov
aad
push
test
loope
and
mov
mov
sbb
ret
fisubrs
push
jg
or
jl
push
cmp
sbb
dec
mov
xchg
jne
je
lcall
inc
dec
jne
cmp
xchg
add
call
pop
mov
cli
dec
mov
or
outsl
or
inc
push
repnz
add
sub
add
int
sbb
aam
mov
insb
and
enter
dec
cmp
mov
cmpb
enter
and
mov
xchg
es
pushf
lahf
jne
sbb
je
sahf
lods
mov
push
fwait
add
aaa
rcrb
or
ret
push
rclb
jbe
pop
pop
les
leave
sbb
ficomps
in
arpl
push
or
cwtl
cmpsl
adc
push
inc
aaa
mov
cmp
push
xlat
cmp
in
aas
fcmovb
xchg
jno
adc
out
insb
ljmp
and
adc
cmp
mov
scas
std
push
lret
xor
addl
push
cmp
jl
cmp
test
pop
or
sub
push
and
push
push
mov
push
outsl
add
aas
shl
push
pop
push
inc
jl
mov
ss
mov
outsb
xor
sbb
or
jmp
xor
notl
and
add
inc
sub
lahf
movb
dec
or
jle
lock
jmp
sti
xlat
jbe
push
add
jae
jmp
adc
or
adc
insb
pop
scas
test
xor
inc
pop
insl
test
and
jle
cmp
lret
scas
xor
or
mov
xchg
loopne
dec
adc
in
inc
rcl
fadds
jo
mov
out
arpl
negb
stos
adc
pop
rolb
jmp
jo
or
or
add
add
bound
adc
inc
nop
pusha
inc
and
inc
xor
add
lock
loope
movsb
lcall
in
outsb
cwtl
lea
cs
cwtl
xor
ret
mov
and
popa
movb
mov
test
add
dec
repz
mov
popa
test
lods
jle
dec
incl
jle
or
lcall
std
push
flds
fstl
jge
in
test
add
enter
fisubs
push
push
in
hlt
int3
push
push
jmp
in
cltd
lcall
clc
dec
lcall
loopne
inc
sbb
xor
lock
cmp
dec
movsl
loopne
lds
pop
or
push
add
lock
nop
or
shrb
sahf
fldenv
enter
fidivl
or
mov
mov
or
lods
data16
mov
ss
cs
test
mov
mov
add
xchg
add
dec
hlt
sub
fsubr
sub
inc
in
iret
aad
push
aad
lret
mov
jle
aad
in
aad
fcoml
lcall
movsl
push
xorb
xor
clc
fmuls
scas
std
mov
inc
and
pusha
nop
outsb
adc
cmpsb
cmp
and
mov
in
stc
push
inc
inc
sbb
test
or
dec
dec
dec
adc
out
xor
sbb
pop
nop
out
xchg
ss
je
push
adc
iret
inc
add
fs
je
mov
or
ljmp
xor
ss
or
cmp
je
cmp
add
or
es
je
sub
jmp
repnz
int3
shll
cld
add
jns
jb
jne
and
inc
dec
hlt
cli
push
shl
mov
loope
push
xor
adc
or
sub
pop
xor
enter
sbb
bound
ret
or
inc
push
int
pop
inc
sahf
jne
cmp
push
jecxz
enter
or
mov
ret
xchg
sbb
push
jecxz
sbb
testb
push
mov
adc
push
test
mov
pop
push
lock
pop
out
cmpsl
pop
ret
sub
push
iret
adc
cmp
mov
cmp
rorb
ret
mov
pop
add
orl
adc
mov
mov
add
or
je
add
movb
or
push
jo
add
add
xchg
shrl
jne
in
mov
pop
push
push
cmp
and
scas
push
inc
jns
daa
mov
mov
sahf
in
add
inc
hlt
mov
daa
stc
repnz
cwtl
inc
lock
sbb
xchg
enter
and
movsb
in
push
mov
add
popw
jl
xchg
sbb
imul
xlat
sbb
pop
fcmovbe
scas
sbb
or
cld
jbe
fs
dec
jne
xchg
test
add
js
fisubrl
xchg
push
mov
push
shr
sbb
lock
in
sar
jg
mov
add
or
sbb
stos
das
stc
aam
sbb
add
add
pop
jmp
or
into
clc
daa
sub
inc
add
xor
add
and
push
xchg
dec
and
les
in
jno
jne
pop
mov
xor
mov
dec
adc
scas
mov
push
rclb
loopne
pop
sub
or
roll
mov
das
xchg
adc
sarl
or
ja
cmp
adc
ja
xchg
mov
mov
sbb
inc
push
es
sbb
cwtl
popf
cmp
pushl
mov
xlat
pop
jne
out
mov
mov
cld
mov
and
call
orl
into
or
dec
movsl
and
mov
pop
jl
lods
xchg
push
test
aas
or
push
dec
jnp
and
out
and
add
mov
push
sti
sbb
xchg
lret
ja
push
adc
sbb
sbb
fs
pop
adc
sbbl
inc
rcrl
sub
mov
loopne
xor
push
push
cwtl
sub
imul
gs
das
add
rcrb
xchg
in
inc
or
cmp
and
mov
add
sbb
push
stc
mov
aam
push
inc
push
mov
in
fstpt
andb
ret
cmp
enter
cmp
pushf
sbb
sub
loop
and
cmpw
dec
outsl
mov
outsl
sbb
cmpl
push
and
pop
pop
jno
mov
in
cmp
popf
lods
xchg
xchg
orb
mov
inc
dec
sbb
popf
jecxz
imul
lds
jmp
test
and
loop
cmpsl
xor
lea
jns
pusha
ss
push
add
jno
add
pop
mov
add
mov
jmp
les
dec
aaa
ds
das
dec
mov
ds
add
inc
xchg
inc
add
daa
push
iret
mov
loopne
dec
daa
fiadds
inc
or
cmp
cmp
fcompl
push
sbb
popf
add
dec
jo
int
mov
rolb
sbb
or
xor
cwtl
lahf
inc
cmp
nop
nop
iret
addr16
and
jg
pop
xor
mov
sbb
sbb
pushf
fcomps
mov
mov
add
pop
outsb
sti
mov
inc
sub
push
and
and
dec
hlt
sub
xor
jecxz
out
adc
push
pushl
loopne
jns
js
xchg
dec
adc
mov
mov
mov
jmp
rcr
xor
rep
jl
and
inc
pop
and
clc
inc
sbb
adc
adc
jno
mov
movsb
mov
push
push
es
insb
insb
dec
inc
mov
je
and
or
push
push
mov
dec
sub
sbb
mov
shl
or
stos
decl
adc
pusha
es
daa
sub
mov
xchg
test
push
and
jle
loopne
push
xchg
dec
inc
andb
pop
mov
sub
data16
xchg
jp
test
sub
jmp
imul
xor
xorl
push
adc
call
xor
adc
in
dec
jae
aam
sub
pop
daa
fdivr
dec
fldcw
bound
je
or
jmp
or
push
or
cmp
pop
stc
es
je
cmp
nop
jecxz
or
loop,pn
enter
movsb
pop
ss
add
xor
add
fistpll
or
sbb
dec
or
inc
jb
or
push
mov
js
jl
cmpsl
cmp
lea
push
adc
cmp
sub
aaa
fsubs
xor
pop
lods
stc
cmp
sbb
xchg
ss
xor
faddl
pop
add
lock
mov
ret
jmp
add
ret
loopne
bound
movsl
or
call
cwtl
push
in
rorb
jge
clc
dec
and
jge
and
inc
je
inc
or
cmp
test
pop
sub
test
xchg
ja
dec
enter
test
sti
enter
sub
mov
aam
mov
mov
mov
sbb
loopne
enter
mov
adc
or
push
out
cmp
test
mov
out
dec
rcrl
sub
pop
mov
cmp
lcall
data16
mov
inc
repnz
sahf
pushf
adc
subl
sar
hlt
dec
xchg
mov
or
cli
ljmp
jns
adc
mov
pop
rolb
push
sbbl
inc
xchg
out
cmp
out
dec
cwtl
lds
imul
ret
mov
hlt
lea
and
fs
xchg
js
in
ficompl
xchg
or
aam
adc
mov
std
rorb
lret
xchg
adc
xchg
push
movsl
add
imul
mov
xchg
cmpsb
push
movsl
pusha
into
mov
jo
std
pop
je
and
addb
data16
add
popf
call
push
sub
and
xchg
shlb
loope
addr16
add
shlb
cmp
mov
lds
pop
pushf
std
inc
js
fbstp
xor
and
aas
push
sbb
lock
push
pop
fs
out
jo
xchg
ja
lcall
pusha
mov
getsec
adc
or
pop
loope
jbe
incl
and
jo
je
daa
js
in
adc
inc
lcall
adc
or
sbb
movsb
xor
dec
push
call
call
aas
xor
lret
cmp
jle
nop
rolb
inc
shl
push
mov
inc
xchg
stc
inc
adc
test
add
orb
xor
dec
or
jmp
addb
fs
sti
jno
adc
pop
dec
test
push
adc
adc
jbe
sub
adc
sbb
les
xor
sbb
and
ss
cwtl
call
js
pop
cmpl
sub
in
xchg
hlt
mov
insl
cmpb
inc
xchg
pop
jg
add
xor
inc
dec
popf
ret
scas
adc
pop
add
test
mov
aas
lahf
mov
jo
sub
or
or
orb
addr16
pop
in
pop
xchg
sub
mov
je
inc
sub
add
popa
inc
mov
or
jmp
loope
popl
cmpb
js
jo
jecxz
repnz
xchg
or
lret
mov
sub
xor
jbe
sbb
or
jae
or
push
sub
push
enter
shlb
add
mov
mov
mov
mov
dec
cmpsl
jge
sub
lods
bound
rcll
and
lods
adc
push
mov
into
inc
xor
add
pop
fisttpl
int
mov
shrb
or
pop
add
outsl
mov
jo
pusha
call
cmp
mov
fadd
dec
lea
hlt
ds
add
or
nop
mov
popl
or
sub
movl
orl
filds
mov
add
lret
cmpsl
lods
mov
pop
cmp
sbb
xor
inc
dec
or
inc
mov
shrb
xor
mov
adcb
jbe
pop
push
push
icebp
add
subb
rcrl
add
aam
out
add
imul
leave
clc
dec
mov
and
dec
jp
mov
jl
push
sub
xchg
shrb
idivb
dec
cli
fimull
add
adc
push
sbb
add
mov
mov
xchg
pop
add
xor
dec
add
out
jmp
decl
jecxz
inc
sbb
adc
lds
xor
add
fwait
dec
test
popa
jno
jg
xchg
enter
sub
cld
or
adc
inc
dec
or
pop
shlb
pop
testb
xchg
hlt
adc
pop
xchg
and
aaa
xchg
hlt
icebp
jmp
jo
mov
push
xlat
add
adc
pusha
pop
jmp
lock
mov
adc
mov
lods
pusha
pop
pushf
pop
pusha
or
or
push
loope
sub
nop
xchg
xchg
pop
xchg
mov
inc
or
add
test
or
shl
scas
jbe
ja
ja
mov
and
push
popf
es
clc
or
dec
in
inc
insb
mov
aas
dec
or
cmp
je
mov
or
fildl
adc
xchg
adc
out
xchg
sti
mov
shll
sahf
popf
pop
mov
or
xchg
push
cmp
lcall
sbb
pop
push
jg
jecxz
dec
adc
lock
ret
xchg
cmpsb
es
je
sub
and
and
pop
loopne
imul
je
test
inc
fiaddl
jne
out
xor
aad
dec
adc
movl
push
or
loopne
dec
pop
mov
bnd
sbb
and
add
add
and
or
jg
and
das
icebp
xor
sbb
and
sbb
sbb
outsl
nop
aaa
add
add
sbb
add
lds
test
inc
js
push
test
loope
cmpb
insb
call
aad
ret
pop
push
mov
mov
ljmp
jae
nop
xchg
mov
inc
sbb
es
scas
dec
ja
or
out
or
ret
rorb
ja
fistps
adcb
or
add
repz
xchg
movl
mov
adc
es
loop
cs
shll
and
push
mov
dec
mov
out
push
fmull
jo
out
or
sbb
addr16
or
test
and
add
ss
fistpl
int3
sub
push
or
int
pop
sub
adc
add
cmpsb
fiaddl
roll
pop
xor
movsl
fdivrs
cmpsl
hlt
cmp
arpl
cld
pusha
stos
add
lret
in
nop
add
je
scas
pop
ret
adc
dec
adc
cmp
and
insl
mov
iret
pop
fistps
mov
push
mov
clc
adc
fsubl
daa
sub
push
adc
jbe
push
inc
or
mov
push
jne
in
nop
mov
addr16
jo
js
push
mov
test
shll
cmp
jne
or
or
jbe
xchg
test
loope
repnz
or
inc
je
insl
sub
sub
sub
sub
adc
nop
pop
jmp
fucom
mov
fistps
cwtl
sbb
xor
and
jge
imul
jg
xor
push
adc
imul
mov
add
lret
mov
cmp
movl
sbb
in
jb
hlt
cwtl
sub
insl
mov
xor
imul
push
inc
pop
pusha
pop
adc
mov
jnp
js
or
loopne
lea
jmp
push
adc
add
push
push
mov
loope
xchg
loopne
adc
sbb
loopne
dec
arpl
xor
mov
decl
call
dec
add
stc
push
inc
xchg
mov
mov
jno
out
cmp
push
push
mov
adc
loope
ret
andl
pop
ret
sub
xchg
loopne
dec
cs
add
add
iret
ss
or
iret
out
outsl
add
sbb
or
sti
pop
nop
sub
xor
aas
sahf
mov
push
adc
dec
xchg
xor
inc
or
xor
or
inc
daa
fistpl
sbb
push
out
nop
dec
mov
sub
shlb
xlat
stos
mov
bswap
mov
mov
cld
cmp
loopne
ds
adc
cmpsl
sahf
in
out
mov
movb
lock
mov
leave
hlt
mov
lcall
movb
pop
test
add
into
out
sbbb
sbb
push
unpcklps
popf
cwtl
call
das
test
lods
xchg
lock
or
rclb
lods
imul
shrl
fcomip
cmpb
push
xchg
nop
inc
setle
sub
xchg
in
popa
popa
out
add
rorl
or
aaa
pop
mov
add
inc
mov
inc
sbb
nop
push
shlb
cmp
pushf
mov
cmpb
inc
imul
push
xchg
in
inc
sub
mov
pop
in
test
dec
js
sub
dec
add
shrl
and
pushf
jo
sbb
pop
lods
jmp
adc
mov
sti
sub
imul
test
pusha
mov
in
sbb
cmp
sub
jecxz
sub
clc
or
jge
and
sub
push
daa
fisttps
insl
pop
sbb
rcll
pop
mov
pop
scas
scas
push
cmpsb
ffree
fnstsw
arpl
popf
xor
mov
push
ljmp
sub
xchg
cmpsl
and
sub
inc
jo
ss
pop
jo
jmp
lea
cld
adc
loopne
sbb
in
jo
pop
lods
call
add
pop
or
clc
movb
fldlg2
dec
inc
mov
dec
mov
adc
and
call
imul
sbb
pushf
push
cld
or
and
push
xor
or
and
fldt
jg
movzwl
push
dec
sub
scas
sarl
ret
lods
loope
repz
lds
sbb
cmp
loope
pcmpeqd
dec
jmp
popa
xchg
add
mov
push
mov
imul
add
xchg
or
fadd
daa
mov
stc
std
dec
push
dec
xor
call
data16
sub
dec
xchg
fwait
jns
or
inc
leave
incl
dec
shlb
pop
dec
sbb
mov
add
rcr
mov
mov
sbb
pop
mov
pushf
mov
sbb
adc
das
adc
mov
jmp
mov
inc
or
rol
adc
loopne
add
adc
push
movsb
pop
fsub
sub
jmp
cmpb
mov
inc
mov
pop
pop
sbb
push
lret
mov
xchg
imul
sub
lret
or
mov
jne
mov
sub
mov
call
push
imul
sub
push
hlt
sbb
aas
aas
or
jle
sub
pop
ljmp
jae
adc
movl
aad
dec
out
add
insl
push
adc
cli
mov
loopne
fnsave
push
adc
pop
sbb
or
add
or
push
mov
inc
sub
in
clc
rclb
lahf
or
push
mov
adc
mov
or
or
xchg
lret
hlt
adc
mov
inc
pop
or
nop
mov
add
or
movsl
outsl
mov
push
sbb
stc
adc
ljmp
fsubl
dec
je
sub
je
sub
mov
mov
inc
or
je
or
je
jmp
adc
test
ret
dec
loop
xor
lods
sub
fstl
lock
in
push
jmp
mov
subl
xchg
mov
jmp
mov
or
bound
sub
xchg
xor
mov
fists
jge
jl
mov
bound
hlt
decl
stos
mov
data16
or
pop
mov
aas
xor
in
mov
out
add
mov
loope,pt
push
pop
mov
cmp
mov
mov
and
and
call
dec
inc
shlb
sbb
add
xor
jno
and
dec
cmp
sub
xchg
lahf
clc
test
cmp
inc
sbb
or
cmp
cmpsb
movl
inc
dec
loop
or
or
mov
outsb
push
adc
data16
ja
jae
inc
pop
mov
js
adcb
sub
or
mov
ret
lret
adc
aaa
cmpsl
jne
add
push
cmpb
inc
push
xor
xor
adc
jnp
sub
in
sahf
ja
ss
dec
ffree
pusha
or
pop
sbbb
int3
sub
adc
push
mov
inc
dec
inc
xor
push
mov
dec
or
xor
jmp
addr16
pop
test
pop
push
adc
sti
jnp
loop
adc
sbb
dec
movb
push
cltd
enter
add
sqrtps
dec
sub
jbe
adc
jno
adc
adc
jge
and
adc
inc
mov
jp
fstpl
inc
mov
data16
mov
jge
add
daa
push
push
leave
and
rorb
rcr
add
push
sub
ljmp
push
add
jno
or
or
push
shrl
cltd
mov
movb
sbb
adc
jl
mov
mov
test
stos
stc
jnp
lret
test
push
mov
cmp
sub
push
sbb
jle
inc
jo
mov
inc
and
push
test
es
add
in
add
pop
icebp
pop
mov
sub
cmp
movsl
mov
or
ds
test
pusha
jp
ljmp
mov
ret
sbb
xor
or
sarb
iret
dec
cmp
popf
lret
push
fs
insb
and
inc
adc
lods
je
fs
cmpsb
adc
cwtl
or
push
loop
aad
cmpsb
je
mov
pop
mov
les
push
and
sbb
dec
xor
fisubrl
out
push
dec
ja
jp
fdivs
jne
mov
mov
mov
loopne
push
stos
sub
fists
cmp
aad
jmp
or
add
fldenv
lods
inc
mov
stos
in
sbb
add
mov
sbb
or
mov
je
orl
sbb
push
pop
cmp
inc
inc
jg
mov
shlb
ret
out
or
lahf
test
loopne
push
call
add
sar
sbb
cmp
cmpsl
rcrb
mov
mov
clc
push
lea
inc
dec
enter
pop
and
sbb
enter
mov
push
nop
xorb
and
cwtl
mov
or
pop
add
push
ds
neg
sbb
inc
adc
dec
or
mov
call
loope
sub
lods
or
sub
push
xorl
inc
push
ss
pop
imul
push
in
jg
mov
jns
jo
je
nop
into
test
cmp
jo
sub
cmp
mov
jb
stos
dec
call
test
dec
xorb
mov
sub
lea
and
jg
jbe
mov
scas
add
mov
pop
and
sbb
jmp
mov
inc
daa
push
movsb
shlb
roll
add
sar
mov
test
mov
pop
notb
xchg
lods
adc
jmp
push
jmp
jmp
int3
loopne
and
mov
es
mov
movsb
xchg
hlt
mov
fisttpl
std
daa
pushf
js
inc
and
push
push
pop
and
nop
iret
mov
inc
jg
sbb
sbb
stos
xor
int3
in
imul
rorb
in
stc
shrb
add
sub
dec
and
sbb
imul
test
mov
dec
aas
in
js
pop
pop
mov
pop
jbe
mov
rclb
pop
dec
and
sub
dec
aad
fs
and
bound
mov
lea
xchg
adc
and
mov
add
push
movsb
stos
adc
push
nop
call
nop
lret
mov
and
or
mov
pop
movsb
cmp
xchg
fs
add
push
iret
xlat
lcall
ret
insl
push
dec
mov
push
pop
xchg
jl
arpl
fisubrl
jle
test
scas
pop
dec
pop
mov
ljmp
add
sbb
push
jmp
sbb
cmpsl
ret
fmull
pop
xchg
int
rep
jge
pop
test
lea
sub
or
ret
dec
aas
lods
xchg
pushf
add
mov
add
inc
xchg
out
pop
and
adc
rolb
inc
xor
jnp
out
or
pop
lret
pusha
mov
out
aam
clc
mov
cmp
fsubs
ja
fbstp
cmpsl
sbb
loop
push
mov
adc
movups
push
sbb
push
jo
xchg
int
fcompl
aas
lea
adc
mov
cmp
inc
jns
ja
or
les
ja
rorb
pusha
dec
nop
or
imul
jnp
and
inc
adc
js
mov
add
mov
inc
mov
dec
and
jno
add
adc
and
je
jmp
xchg
pop
mov
sbb
and
mov
lods
cmpb
mov
jno
inc
js
ret
out
mov
lock
adc
sbb
test
sbb
push
jge
testl
mov
lret
xchg
aas
scas
aam
sahf
cmp
and
orb
arpl
sar
inc
lea
pop
xlat
dec
cld
inc
call
and
roll
push
add
xchg
xor
inc
or
inc
or
mov
sub
stos
push
loop
mov
mulb
hlt
push
dec
sbb
shlb
mov
mov
mov
inc
mov
pop
push
cmpsl
sbb
popa
pop
add
faddl
fs
fadds
and
faddl
cltd
clc
sub
jl
popf
pusha
dec
add
xor
dec
out
clc
jmp
xchg
sbb
push
fcoms
mov
add
jmp
fmul
add
stc
inc
out
jmp
daa
fabs
int
mov
push
xchg
icebp
mov
adc
add
shlb
xor
mov
lea
pop
adc
testl
dec
sahf
add
add
add
jo
xchg
xchg
int3
scas
aam
adcl
lock
sub
jb
push
or
jbe
xor
mov
dec
pop
insb
or
add
adc
dec
mov
je
or
mov
sbb
xor
dec
lds
loop
and
xor
sub
or
cmpsl
push
pop
or
adc
hlt
add
fsubs
cmpsb
adc
imul
daa
hlt
mov
inc
sub
mov
sub
aad
test
pop
pop
or
sub
inc
cmpl
imul
test
push
in
or
insb
loopne
arpl
dec
mov
loop
xor
cmp
loope
sub
adc
xor
pusha
scas
or
adc
cmp
sub
pop
shlb
adc
aam
mov
test
sbbl
in
daa
and
and
adc
mov
mov
mov
imul
in
push
push
loop
and
cmp
xchg
or
es
push
roll
adc
aas
fimull
push
push
mov
push
xor
imul
ss
jns
dec
xor
pop
jo
xchg
push
mov
mov
loopne
inc
sbb
pusha
sub
sbb
jg
push
inc
addr16
fadds
ret
and
push
rolb
arpl
add
lock
mov
push
dec
call
xlat
adc
add
pop
sahf
arpl
add
mov
mov
ds
and
sub
cwtl
or
push
sub
sub
pop
mov
pop
or
inc
and
call
add
lds
jns,pt
pop
inc
inc
dec
aaa
and
xor
sti
mov
add
popf
push
inc
jmp
add
fisubrl
or
jne
popf
test
or
imul
mov
and
fsubrl
xchg
inc
xor
daa
or
stos
or
jne
clts
pusha
pop
incl
lret
mov
aam
jecxz
adc
ret
or
js
mov
adc
xor
add
jmp
data16
or
loopne
jmp
and
dec
mov
and
pop
add
jnp
mov
imul
or
lds
or
xchg
xor
cmp
or
ja
gs
push
stos
dec
mov
cmp
mov
pop
push
mov
imulb
sbb
cmpsb
mov
pop
pusha
sub
test
cmp
push
sub
sbb
shll
sbb
out
sub
out
xchg
xchg
inc
dec
mov
ret
and
stos
pop
lret
subl
push
jno
mov
or
cmp
pop
daa
xlat
notl
outsl
test
jo
add
in
cmp
sbb
adc
test
aaa
imul
ret
xor
insb
pop
rolb
jb
fisttpl
aaa
sub
push
and
cmp
dec
lcall
jae
mov
daa
add
adc
mov
pop
push
mov
mov
sub
adc
js
mov
pop
xchg
mov
jnp
data16
daa
mov
fbstp
push
push
adc
and
pop
test
sbb
cmp
inc
jecxz
addr16
jg
or
mov
push
cmovs
xorl
push
cld
or
sub
cmpsl
inc
push
nop
arpl
fidivl
mov
loopne
pop
subb
subb
cmpl
orl
add
and
int
mov
or
lods
inc
cltd
or
insb
pusha
je
xchg
push
mov
xchg
shrb
push
xchg
adc
shrb
out
pusha
je
mov
pop
push
cld
lahf
in
and
popa
dec
dec
mov
jg
push
cmp
shrb
jo
pusha
je
or
cmpsb
and
fdivrs
stos
pusha
notb
pop
dec
mov
xorb
movsb
addr16
sahf
fadds
stc
adc
mov
mov
aam
enter
ret
sarb
mov
add
mov
imul
adc
repnz
add
or
push
mov
push
cmpsb
in
imull
fbld
rcll
push
and
mov
sbb
nop
push
add
cmc
jle
fwait
mov
lock
mov
xor
int
aaa
cmp
stc
xchg
into
add
sub
stos
andb
jbe
and
mov
clc
or
mov
sub
cmp
inc
inc
inc
cs
xchg
lea
add
mov
jns
mov
push
or
inc
cli
push
dec
push
inc
inc
and
dec
mov
insb
mov
lret
lahf
ljmp
shrl
stc
xor
rol
push
push
leave
je
iret
mov
cmp
clc
jne
xchg
sarb
rcrb
hlt
push
cmp
mov
sahf
ja
adc
sub
or
ret
push
add
ja
mov
loopne
push
pop
and
push
add
jo
add
dec
mov
or
in
leave
jae
pop
fadd
push
rclb
sbb
sbb
mov
push
test
dec
inc
sbb
inc
push
imul
adc
push
sub
pop
push
popa
cmpsb
push
mov
aaa
cwtl
fstpl
fstpl
sbb
int3
mov
push
and
add
inc
add
cltd
mov
fmuls
sub
mov
xchg
cmp
add
add
push
mov
ljmp
add
sbb
add
jb
mov
push
mov
or
mov
mov
mov
or
add
ds
lcall
inc
inc
pop
test
pop
cmp
push
adc
orb
stos
or
xchg
stc
inc
jmp
jle
or
cld
mov
pushf
or
sub
inc
lret
or
sub
testl
cwtl
inc
sbb
ss
sbb
push
push
pop
jnp
push
pop
std
jge
and
rorb
addr16
iret
xchg
movsl
cmp
lock
xor
jp
xchg
dec
push
and
aas
fwait
adc
push
and
or
push
stos
jle
sub
sub
push
mov
and
dec
mov
cmp
xchg
push
je
jmp
inc
fildl
add
fidivs
dec
lock
or
rcr
adc
mov
adc
sbb
push
cmp
jne
repnz
iret
mov
sub
clc
add
popf
shl
and
pop
sub
add
mov
ret
inc
cld
nop
xchg
das
mov
scas
idivb
adcl
add
xchg
cmpl
cmp
lods
shlb
sub
adc
scas
cmpb
mov
push
add
mov
jl
ret
les
movl
je
cwtl
xchg
adc
out
xchg
rcrb
xchg
adc
or
lock
fldt
lret
mov
and
mov
in
cmpb
push
xchg
iret
test
or
cmp
pop
outsl
and
add
mov
add
into
imull
inc
pop
mov
jge
out
dec
repnz
mov
xchg
les
or
xorb
or
leave
cmp
fdivs
inc
push
adc
fildll
repnz
push
sets
add
add
mov
js
jle
mov
xchg
sbb
andb
mov
aam
mov
test
or
jle
xchg
pop
sub
inc
fs
xor
xchg
je
insl
fdivr
mov
sub
loopne
sbb
shrl
nop
mov
pop
call
pop
push
dec
inc
lea
adc
inc
cmp
or
cmpsb
dec
add
xchg
inc
leave
mov
jbe,pt
sbb
test
js
xchg
jl
add
lahf
sub
dec
pop
xor
je
addr16
cmp
or
addr16
mov
or
iret
sbb
push
mov
xchg
out
sub
lret
jge
pop
push
sub
call
xor
push
adc
popf
subb
and
xchg
mov
add
and
inc
xchg
lods
in
dec
sahf
gs
adc
leave
inc
loope
cmpsb
cld
enter
push
sbb
mov
pop
cmp
js
jg
sbb
mov
and
inc
inc
and
daa
sbb
dec
jo
sbb
in
mov
sub
or
cmp
mov
push
aaa
enter
sbb
test
lods
addb
sub
lcall
dec
dec
xchg
mov
add
insl
cmc
and
sahf
xorb
mov
or
fistpll
jae
xchg
lret
jmp
andb
or
cmpsl
cltd
out
sub
cld
cmp
jb
fistps
movsl
out
ret
add
push
lcall
push
int3
dec
or
mov
push
lods
in
add
lock
or
lcall
rcll
dec
leave
pop
adc
mov
mov
cltd
mov
dec
rclb
sbb
outsb
cmp
sbb
xchg
or
and
push
adc
push
sbb
or
add
mov
pop
stos
pop
and
add
sbbb
xorl
mov
test
add
repnz
inc
adcb
rcrl
add
inc
push
mov
add
movb
in
inc
add
pop
xchg
inc
pop
sbb
dec
enter
pop
sbb
subl
movsb
push
push
stos
xchg
jne
mov
jp
mov
dec
imul
fisubrl
les
jnp
ret
cmp
adc
call
mov
decb
cmp
adc
xor
jns
scas
lret
mov
push
sub
mov
dec
adc
cmc
cmpb
lea
mov
orl
or
sbb
push
movsl
inc
loope
dec
or
push
lock
pusha
repz
sbb
xor
cli
into
lret
push
lahf
arpl
insl
es
pushf
push
jnp
xorl
cmpl
stos
xchg
fistpl
jmp
sbb
mov
mov
and
dec
out
jp
shl
scas
sub
dec
je
push
rorb
dec
rolb
sub
pop
loopne
xchg
cmp
pushf
pop
mov
inc
outsb
jg
xchg
nop
xor
in
inc
sbb
scas
sub
jne
loope
les
fimull
popf
jo
adc
sbb
dec
fmull
push
sbb
push
or
or
mov
push
cmpsl
cmc
xchg
cmp
inc
pop
loope
mov
or
imul
lea
add
fwait
add
jmp
or
or
inc
fnstsw
lods
mov
lods
faddp
adc
cmp
jne
lock
adc
pusha
pop
sbb
loopne
js
mov
test
scas
inc
jge
push
mov
sub
xor
dec
andb
out
or
leave
mov
jg
into
out
pop
les
mov
inc
and
xor
lea
and
jnp
push
faddl
add
iret
push
mov
ja
push
daa
pop
adc
add
xchg
dec
nop
add
add
inc
data16
icebp
jmp
push
lds
add
rorl
push
lret
clc
push
push
adc
push
push
mov
rcrb
call
or
les
push
add
cltd
and
or
test
jmp
xchg
add
scas
push
jno
sbbl
addb
lcall
pop
add
movsb
sub
mov
nop
out
mov
mov
xchg
nop
and
insb
xor
sbb
mov
add
ds
mov
mov
mov
adc
ja
mov
adc
inc
addl
insb
gs
sub
mov
sub
pop
icebp
or
fcomi
mov
pop
je
je
pushf
sub
mov
popf
inc
pop
lcall
sub
arpl
inc
dec
sub
adc
movsl
push
into
das
or
mov
pop
add
adc
das
xchg
inc
aam
xor
in
movsb
ret
and
xchg
jmp
aaa
out
inc
sbb
mov
imul
leave
xchg
aaa
add
pop
jg
hlt
or
sub
in
xor
sar
scas
xor
mov
add
popa
aas
cltd
rorb
mov
aas
cmp
je
mov
inc
insb
sbb
fisubrl
mov
mov
mov
insb
xor
movb
add
lock
inc
in
out
daa
inc
pop
aas
xor
cmp
ljmp
adc
dec
aas
or
ret
aad
aam
jg
add
sbb
leave
or
arpl
cs
fcoms
jge
out
push
lock
movb
xchg
or
nop
adc
push
cwtl
dec
sbb
add
jmp
adc
cli
ds
bound
movl
jb
outsb
inc
cmpsl
push
enter
push
inc
adc
rolb
jo
xor
sbb
jle
and
adc
mov
mov
jno,pn
sub
movsb
mov
xchg
movsb
mov
inc
ja
std
add
clc
add
repz
mov
cmp
adc
out
nop
xor
repnz
cmp
xchg
lods
xor
fwait
add
ret
je
or
je
inc
pop
dec
je
and
adc
sub
pop
stc
insl
sub
and
je
add
and
and
mov
aas
lea
jmp
inc
add
lar
ret
arpl
lods
int3
ret
test
push
loope
clc
out
push
jmp
mov
daa
cmpsl
je
enter
mov
out
xchg
add
push
inc
lret
imul
pop
aaa
or
push
mov
loopne
es
xchg
push
fdivrs
insl
dec
dec
xor
dec
push
xchg
xlat
mov
adc
inc
aaa
adc
add
int3
add
icebp
jg
data16
sbb
mov
pop
lock
cmp
sub
aas
inc
inc
inc
xor
dec
mov
and
push
push
pop
cmp
sbb
pusha
aam
push
sbb
cmc
andl
insb
xchg
push
cmp
leave
ss
rorb
adc
in
mov
or
sbb
sub
insl
lods
outsb
sub
movsl
jmp
fwait
jnp
jo
mov
pop
jae
and
cwtl
adc
repz
add
mov
or
mov
daa
or
add
add
pop
mov
jmp
jns
or
aam
add
push
or
pop
xor
jo
cmp
insb
lock
les
dec
and
jmp
movnti
jl
cmp
sarb
mov
and
aaa
addr16
imul
je
and
aaa
and
ret
cmp
push
xchg
lahf
xchg
or
inc
adc
sub
xchg
movsb
ret
cmpl
into
mov
and
add
adc
fisubrl
add
xchg
cmpl
outsb
call
mov
add
sbb
invd
adc
add
pop
mov
sbb
movsb
out
sub
cmpl
cmp
shll
scas
pop
enter
xor
loopne
adc
out
add
rolb
repnz
jl
or
pushf
xchg
addl
adc
daa
test
in
or
push
push
push
mov
push
les
add
pop
test
push
in
outsb
jne
iret
imul
punpckhbw
mov
test
ret
popl
roll
sub
cmp
jbe
in
or
mov
nop
mov
dec
ret
dec
shrl
xor
mov
xchg
push
mov
lods
sti
lahf
mov
add
add
sbb
pop
mov
dec
mov
jne
or
add
inc
mov
fildl
or
cmp
jo
sub
ret
inc
cmpsb
aas
call
shl
mov
add
mov
mov
jnp
repz
in
jg
add
arpl
jg
dec
add
add
mov
pop
pop
shrb
cmp
adc
push
sbb
mov
or
divl
call
add
cmpl
jg
idivl
xchg
sub
inc
movb
push
jge
cli
mov
dec
or
rol
add
xor
imul
mov
and
insb
push
or
cmp
insb
sub
pop
jbe
dec
jns
push
cmp
pop
roll
in
insb
shlb
push
cs
mov
es
pop
ficomps
mov
into
add
dec
push
ja
adc
rcl
cmp
stos
outsl
and
add
icebp
sbbl
pop
mov
and
inc
pusha
mov
or
inc
mov
data16
mov
and
xchg
lods
add
sub
mov
xchg
cwtl
add
dec
lods
jp
js
dec
add
mov
add
xor
sub
fmull
shl
inc
jnp
xor
inc
adc
out
popf
sub
jb
and
les
sbb
push
clc
bound
das
sbb
in
clc
adc
test
test
pop
hlt
jge
fisubl
enter
push
sahf
jbe
or
cli
fistl
sub
int3
push
mov
pop
call
outsl
dec
aad
flds
add
stos
mov
pop
shrl
jl
mov
or
jl
mov
add
pop
imul
dec
mov
inc
cmp
jl
sbb
adc
js
imul
lock
cmp
push
xor
out
aad
add
adc
fld
out
dec
xor
mov
pushf
dec
adc
sbb
and
enter
outsb
jecxz
fisubl
orb
jmp
lret
je
xchg
inc
sbb
and
mov
cli
test
cmp
sbb
dec
aaa
xchg
push
ja
mov
or
dec
adc
or
adc
fiadds
mov
lret
jl
adc
sbb
leave
and
filds
sbbl
mov
or
mov
int
notb
push
xor
sub
fs
jae
sbb
adc
push
cmpb
pop
and
cwtl
dec
out
add
inc
or
clc
mov
ja
mov
ja
out
push
mov
sbb
ja
repz
add
clc
jbe
xchg
dec
push
sub
inc
or
xor
add
pop
mov
into
mov
jbe
push
xorl
pushf
push
lods
adc
xchg
pop
sbb
cs
pop
sbb
sub
out
jae
jae
push
roll
mov
or
sub
push
sbb
add
outsb
mov
mov
fsubl
jbe
pop
push
dec
pop
pusha
add
inc
lret
imul
jne
add
inc
xor
je
sub
sub
add
mov
inc
dec
roll
push
sub
and
lea
cmpsb
inc
ja
push
adc
pusha
rorl
jl
adc
into
test
or
sbb
psubb
mov
mov
sbb
test
add
push
inc
pop
jae
or
movsl
in
push
sub
xchg
mov
dec
dec
dec
sbb
mov
dec
xchg
cmp
ljmp
add
add
movsl
add
pusha
fimull
xchg
xor
ret
mov
mov
insb
cltd
inc
ds
xor
jne
in
imul
add
loop
movsb
lods
jge
mov
jl
xchg
adc
mov
pop
xor
sbb
xchg
add
push
cmp
add
xor
cmp
aaa
sbb
popf
aad
dec
jl
cmp
sbb
sbb
push
lds
ljmp
add
fdivrs
pop
mov
fiaddl
or
in
xchg
xchg
fcoml
sbb
pop
mov
and
loop
mov
xor
push
call
xchg
push
movsb
cs
mov
inc
shll
std
or
sarb
pop
inc
lret
and
push
dec
mov
mov
sbb
ret
psubsb
push
loop
pop
shll
add
scas
add
ja
add
pop
dec
subb
sub
sbb
push
subl
and
cmpl
cmp
xlat
fwait
xchg
and
pop
or
jb
iret
clc
cmp
bound
sbb
add
adc
xorl
cmp
mov
jmp
jl
pop
dec
jne
xchg
jg
cmpl
hlt
cltd
add
mov
mov
dec
or
sahf
jb
mov
jnp
mov
or
cmp
mov
push
cmp
idivb
loope
and
inc
and
jle
sub
and
scas
stos
lret
inc
sarb
scas
das
and
out
in
and
or
sub
es
daa
sub
rolb
dec
jl
inc
pop
scas
push
xchg
xor
lret
dec
inc
or
fcoml
andl
aam
ss
jmp
jg
mov
push
pop
jno
mov
aam
dec
jmp
mov
mov
je
inc
xlat
or
movsb
lods
mov
inc
inc
sbb
jle
test
or
testb
push
pop
fs
push
pop
fsubrs
bound
aaa
adc
out
xchg
das
cmc
in
xor
xor
add
ret
cltd
pop
pop
pusha
mov
popf
xor
mov
je
xchg
loopne
popf
add
pusha
out
mov
fimull
imul
andb
mov
add
mov
testl
sub
adc
or
jb
in
lea
iret
or
hlt
pop
incl
mov
push
jo
incl
cmp
test
les
add
sub
push
sbb
jns
xchg
jge
jmp
mov
xor
mov
enter
mov
cmpl
int3
ficoml
push
mov
pop
inc
or
imul
mov
and
pop
pop
jmp
add
mov
ljmp
inc
mov
xchg
lods
mov
mov
sbb
adc
cmc
add
push
fidivrl
cmpl
jns
frndint
pop
mov
inc
fdivs
add
jo
sbb
paddb
repz
into
sbb
pop
and
xchg
or
ds
adc
sbb
and
cmp
push
xor
andl
and
subl
mov
dec
adc
and
sarl
adc
mov
in
test
mov
push
mov
pop
subl
or
jmp
or
xlat
mov
scas
adc
cmpsb
test
adc
lea
and
in
pop
or
rorl
inc
in
add
dec
add
and
imul
lock
mov
fscale
mov
adc
loope
adc
inc
adc
or
scas
push
mov
cmp
ja
jle
sahf
fdivr
pop
xor
ficoml
add
sub
add
aas
pop
inc
cmp
jmp
lock
adc
pop
sbb
sbb
mov
test
insb
sub
and
popf
dec
pop
flds
mov
xchg
ljmp
out
mov
xor
dec
ljmp
shrl
jmp
cmp
sbb
push
adc
lret
push
lret
push
pop
adc
mov
xchg
das
xchg
mov
cli
je
dec
jne
xchg
push
into
dec
push
inc
into
mov
cltd
mov
push
mov
sub
testb
mov
push
loopne
inc
mov
popf
fsubl
pop
cmp
and
push
pushf
movsb
mov
cmp
test
cmp
and
sub
adc
push
push
arpl
mov
test
enter
cmp
dec
sub
inc
test
loop
mov
int3
dec
inc
cmp
lcall
xchg
mov
jmp
mov
test
mov
mov
dec
add
jnp
orb
push
xchg
cmp
push
inc
inc
nop
cmpsb
inc
rorl
call
push
mov
mov
jmp
mov
sbbl
xchg
push
sahf
cmpsl
pop
push
mov
into
cli
andb
pop
fsubl
jl
jle
imul
mov
pop
add
or
push
or
je
push
jae
add
xor
cmpsl
iret
int3
imul
loopne
gs
mov
and
loop
rcrb
divl
mov
adcb
sbb
sti
sub
dec
mov
rcl
int
dec
pop
jae
jo
dec
dec
aad
xor
or
rolb
sahf
push
mov
ja
sub
jne
or
cmpsb
out
fs
js
scas
nop
fcomp
lcall
pop
add
sbbl
cmpsl
adc
punpcklbw
movsl
imul
and
jmp
fnstenv
cmp
ss
int3
out
out
inc
sbb
jnp
dec
xor
loope
loope
add
mov
daa
dec
outsb
jg
inc
jo
and
out
int3
rol
mov
sbbb
add
pop
arpl
insb
add
imul
xchg
add
add
lds
dec
and
das
push
dec
decl
mov
jmp
add
sarb
sbb
mov
rclb
jp
sarl
xor
insl
sbb
cmp
les
mov
cmp
outsb
sub
imull
loope
jbe
int
xor
cmp
mov
or
insl
fdivl
or
sbb
mov
adc
push
sub
push
or
push
icebp
dec
add
add
iret
filds
out
cmp
inc
push
pinsrw
add
or
inc
mov
movb
or
cmp
push
mov
popa
cmp
aam
inc
cmc
pusha
stos
outsl
jno
pmullw
cmp
hlt
push
orw
insl
inc
repz
push
fisttpl
stos
push
call
mov
push
inc
jmp
jo
sbb
ret
pop
mov
mov
cmc
mov
test
xchg
adc
and
loopne
sbb
and
pop
into
out
cmp
push
addb
cs
sbb
add
mov
cmp
aaa
jmp
rclb
mov
je
imul
sbb
fildl
ja
adc
aam
cmpsl
bound
test
int3
cmp
insb
nop
xorl
ss
fsubs
pop
jne
cmp
mov
aam
test
adc
add
dec
mov
push
insb
adc
or
adc
je
xor
add
cld
add
xchg
add
cmp
adc
cld
jmp
jne
inc
jnp
js
sti
jae
lods
inc
insb
adc
xchg
loopnew
adc
xchg
or
xchg
in
or
sub
and
loop
or
push
pop
lcall
dec
cmp
fmull
mov
xchg
add
or
je
push
jp
sbb
sub
xor
pop
iret
pop
dec
fcompl
lret
test
clc
icebp
add
jb
inc
insl
jne
pop
prefetch
mov
mov
adc
mov
and
inc
jb
mov
jmp
sbb
pop
dec
xlat
sbb
pop
push
add
inc
enter
ja
adc
or
pop
sbbl
js
pop
test
xor
daa
out
sbb
arpl
add
add
push
xor
ret
inc
nop
adc
or
add
pop
pop
pushf
int3
add
push
sbb
push
sub
test
xchg
incl
inc
or
pop
pop
daa
in
jp
loopne
and
cmp
dec
pop
or
lods
or
sbb
jmp
pop
or
pop
pop
jmp
int3
cmc
or
mov
pop
sub
loop
daa
mov
lock
outsl
jno
pop
inc
out
loopne
mov
and
inc
adc
into
lock
test
aad
cmp
or
adc
pop
xchg
dec
movsl
or
shll
fisubl
dec
push
pushf
xchg
in
ret
dec
sbb
mov
add
adc
fisubrs
ret
push
sbb
and
lock
jo
pushf
and
xchg
adc
loopne
push
or
cmc
add
cltd
popa
cmp
shl
xor
call
in
add
loopne
add
nop
push
test
xchg
jae
int3
aas
out
inc
cld
loope
adc
addl
mov
sbb
mov
mov
cmp
shl
jle
decl
xor
test
xor
loopne
mov
adc
clc
add
stc
inc
nop
adc
iret
arpl
sbb
pop
adc
xchg
xchg
pusha
mov
pop
push
in
lea
and
xor
adc
into
lea
push
inc
ret
dec
das
add
cs
add
shll
push
mov
mov
stos
add
or
adc
inc
gs
mov
outsb
inc
or
mov
inc
stos
jbe
ret
sub
divl
cmpl
cmpsb
daa
lea
outsb
sbb
mov
test
mov
inc
sbb
enter
xchg
shll
pop
or
mov
dec
ret
je
pop
xor
test
ret
aam
pushf
ret
cmpl
cmc
add
jns
sahf
push
aas
int3
sti
es
jmp
mov
xchg
test
jne
cmovp
or
sbb
xchg
dec
test
add
mov
adc
sub
mulb
cmpb
fnstcw
ljmp
cs
pop
lods
scas
pop
xchg
and
add
push
push
test
and
xor
sub
adc
mov
jbe
jge
sbb
pop
inc
push
sbb
push
mul
sub
mov
mov
sbb
inc
std
and
sar
mov
imul
push
xchg
subb
mov
fisubrl
bound
notb
fstp
loopne
sub
or
or
in
sti
into
push
push
xchg
xor
lock
dec
push
cmp
jle
push
cmp
repz
or
push
sbb
shl
dec
and
cmp
add
jge
pop
cmp
sbb
popf
test
add
scas
shlb
cmc
mov
pop
test
pop
mov
add
jecxz
mov
sbb
and
jecxz
scas
lods
sbb
xchg
fs
jg
pop
je
inc
mov
or
xor
mov
pusha
push
jb
push
cmp
push
pop
cld
fidivrs
imul
cmp
pop
les
test
fnstenv
insl
daa
addl
imul
call
mov
sahf
inc
jp
sub
out
or
mov
adc
mov
add
jmp
in
negb
push
fidivrs
jecxz
cli
jge
sub
push
sbb
int
push
cmp
loope
lret
add
mov
cmp
sti
nop
cs
lret
mov
aad
insb
test
arpl
mov
lea
jnp
sub
sbb
mov
sub
and
mov
add
mov
adc
clc
mov
cmovns
test
inc
mov
je
sti
xchg
and
out
push
sub
cmp
sar
mov
imul
lock
shl
icebp
mov
jg
out
mov
test
stos
inc
jge
cmp
je
pop
shr
push
push
movzbl
shl
sub
lods
xor
or
lret
push
adc
or
in
or
mov
and
mov
js
imul
in
and
mov
mov
js
out
fdivl
jo
pop
sub
adc
inc
adc
add
sub
stos
push
mov
jbe
popf
pop
jo
or
nop
pop
cmp
xor
out
cli
pop
int3
icebp
jle
xchg
adc
mov
rolb
mov
pop
cmp
dec
mov
jl
adc
xchg
push
xchg
push
pop
int
mov
cli
sar
test
jp
fiaddl
or
inc
movb
add
sbb
cwtl
fwait
dec
push
cmc
rclb
pop
cs
inc
adc
rolb
or
mov
cltd
inc
adc
push
dec
jo
or
ss
ficoms
inc
pushf
in
bnd
xor
dec
sub
in
enter
mov
cmp
loopne
shll
ud0
ror
and
mov
int
clc
sub
jne
mov
inc
xor
addr16
lea
cmp
sbb
insl
add
sub
es
ret
cltd
add
fs
lret
aad
inc
mov
sahf
and
lods
in
frstor
addr16
push
push
mov
mov
mov
sar
jmp
xor
push
dec
je
test
loop
xchg
sbb
push
add
push
cmp
test
mov
push
pop
or
pop
or
cmp
je
mov
sbb
ljmp
jmp
dec
push
lods
and
rolb
lods
out
cmp
insb
je
repnz
push
add
insb
mov
push
push
adc
test
sbb
xchg
movswl
and
mov
push
jl
inc
call
inc
pop
loopne
pop
ficompl
or
add
pop
jmp
je
xchg
mov
dec
lock
das
sbb
insl
cmp
sub
sub
add
cmp
stos
outsl
cld
std
outsl
xchg
cltd
fisttps
pop
add
cs
xchg
add
pop
sbb
dec
or
aad
rclb
jno
xor
and
in
xor
out
test
sbb
sub
sub
out
inc
pop
shrb
xchg
dec
jle
cwtl
sub
mov
sbb
push
imul
cmp
nop
xchg
xor
cmp
pop
inc
add
jecxz
push
rorb
mov
inc
rorb
out
cmp
push
add
and
loope
xchg
xor
jecxz
mov
jmp
jl
fs
cmp
pop
pop
lcall
mov
sub
pop
jne
das
aas
fimull
pop
lcall
add
hlt
jp
pusha
rcrb
sbb
mov
or
push
push
xchg
adc
js
add
mov
sbb
sub
scas
xchg
subb
lea
push
fistl
pop
xor
icebp
sbb
xor
push
aaa
mov
xor
rorb
jmp
mov
dec
mov
jmp
sub
test
stos
pop
js
xor
push
xor
mov
and
cmc
rcr
inc
sbb
js
mov
mov
jp
add
sub
xchg
lahf
sbb
dec
pop
add
movsb
add
clc
xchg
push
je
xchg
dec
inc
or
enter
pushf
cli
out
dec
inc
or
es
jno
cld
and
adc
add
cmp
push
mov
icebp
es
pop
xor
movsb
movsb
imul
push
imul
adc
nop
sub
and
mov
fiadds
mov
hlt
mov
pop
add
add
add
in
add
cmp
cmpb
inc
push
pop
dec
push
test
cmp
mov
jp
subb
in
inc
inc
mov
jmp
dec
test
movb
inc
pushf
sti
push
in
mov
push
cli
xchg
roll
xchg
push
fimull
fistpll
cmp
je
mov
add
ret
rcll
sarl
sbb
fildl
add
add
lock
test
xchg
or
cmp
in
jge
shr
pop
sub
addr16
mov
add
sub
dec
mov
out
dec
loopne
inc
mov
inc
inc
stos
pop
mov
cld
inc
and
pop
or
add
clc
push
add
inc
cmp
stc
or
push
add
es
ret
loopne
rorb
or
loopne
inc
lret
fdivrl
sbb
push
inc
test
shll
pop
or
pop
aam
inc
sbbl
lods
xchg
sbb
mov
inc
in
dec
insb
jg
dec
mov
mov
inc
inc
jg
insb
lcall
pushf
sbb
lds
cmp
loopne
xchg
mov
filds
ss
pop
ret
in
pushf
loopne
mov
jl
mov
inc
or
cwtl
pop
jl
les
jle
cmpl
test
or
mov
push
cmp
jne
mov
or
cmp
outsl
stc
es
sbb
add
mov
inc
lea
add
mov
rolb
rolb
seta
orb
sbb
shl
or
push
push
hlt
mov
orl
mov
mov
add
dec
mov
jo
loop
out
jne
les
jmp
push
test
pop
in
sub
adc
gs
add
jg
cli
mov
sbb
add
or
insb
jne
lahf
es
dec
or
outsl
dec
pop
mov
jge
sbb
lret
jae
jo
xor
sbb
cli
pop
cs
or
mov
cmp
adc
mov
mov
mov
push
inc
add
je
push
mov
add
aaa
imul
pop
sar
push
or
inc
push
add
mov
xor
cmp
cmp
test
pushf
int3
stos
pop
or
sbb
mov
je
adc
xor
pusha
cli
lods
xchg
sub
inc
inc
mov
xor
and
fiaddl
or
xchg
adc
lock
xchg
aas
rorb
pop
mov
xor
inc
dec
lods
and
sub
jns
inc
hlt
add
jno
pop
es
dec
rclb
sahf
mov
xchg
dec
shl
dec
or
lea
icebp
out
lea
and
mov
mov
dec
sbb
adc
out
sub
addr16
hlt
and
rorb
xchg
pop
enter
mov
sub
sub
test
jge
cmpsb
inc
and
push
and
sbb
lret
or
mov
mov
test
ret
add
and
rolb
jne
add
je
inc
mov
les
xor
rcll
in
js
sub
and
in
in
cmp
xchg
stos
push
xchg
popa
xor
mov
rclb
mov
out
push
fs
push
xchg
jmp
repnz
mov
jmp
scas
sti
daa
lds
inc
cmp
popf
pop
addb
mov
leave
add
sbb
adc
sbb
mov
sub
or
loop
or
pop
popf
iret
sub
push
mov
sti
xlat
lcall
adc
cmp
fnstenv
js
std
xchg
loopw
decl
xlat
test
push
arpl
call
dec
mov
or
divb
jo
fs
lock
lock
push
add
sahf
or
add
xchg
sbb
xor
adc
cmp
pusha
add
pop
fidivl
lret
sub
jbe
jne
xorb
sar
or
sub
es
dec
xor
pop
inc
js
lret
sbb
inc
and
cmp
or
lds
rclb
jae
mov
cmp
out
mov
jmp
and
loopne
cmc
test
outsb
add
lea
rcrb
or
mov
int
jmp
mov
lahf
sub
adc
cmp
jae
test
or
sub
mov
or
addb
xchg
test
jmp
pop
int
dec
fdivr
rcr
and
cld
add
sub
push
dec
xor
sub
adc
jge
push
mov
mov
fadds
insb
call
push
or
cltd
push
shl
ds
ror
addb
lods
dec
cld
push
in
mov
aam
pop
sbb
or
xor
rcrl
mov
pop
add
popa
mov
or
push
pop
cs
jo
dec
jo
dec
inc
add
adc
jmp
dec
xor
insl
dec
call
pop
in
sbb
dec
imul
in
jne
xchg
in
scas
jge
sub
adc
out
bound
xor
or
sar
les
in
loopne
clc
lea
mov
test
lahf
cwtl
mov
xor
les
hlt
or
mov
mov
pop
or
inc
xchg
je
nop
pusha
add
inc
jo
je
adc
dec
add
push
add
das
lret
out
pop
rcl
or
cmp
rclb
pop
test
sbbl
sbb
test
or
les
xor
xchg
mov
loopne
add
out
adc
mov
adc
push
xchg
mov
add
mov
jo
ljmp
sub
or
shll
in
push
fsubs
shr
hlt
les
enter
xchg
insl
dec
jbe
mov
lea
sar
cmpsl
repnz
mov
lea
pop
lock
mov
jb
mov
add
loopne
out
sbb
call
arpl
test
lret
lcall
imul
lcall
push
ret
push
push
dec
inc
jmp
daa
movsl
pusha
enter
daa
adc
adc
push
push
sbb
mov
cmpb
add
inc
mov
sbb
inc
mov
ss
or
pop
out
adc
jo
xlat
xor
pop
mov
movl
add
push
push
cld
sub
sub
sub
and
xor
or
cmp
sbb
mov
and
out
mov
jmp
inc
les
cld
pop
add
or
or
int
cmp
xlat
leave
xchg
dec
enter
add
xchg
dec
adc
and
jb
or
aad
adc
adc
inc
popa
mov
lahf
je,pt
dec
jo
mov
inc
cli
hlt
test
or
adc
jo
push
push
rorl
pop
clc
adc
out
xchg
mov
sbb
jbe
jnp
dec
xor
ljmp
ret
or
cmp
ds
popf
fimull
aam
mov
mov
in
xor
push
aaa
imull
out
jge
xor
add
lret
lahf
mov
push
loopne
cmp
push
cmpsb
divb
cmp
nop
mov
jns
movsb
add
and
xchg
jne
divb
cli
dec
inc
inc
test
inc
sahf
ret
rorb
fbstp
mov
pop
dec
adc
add
stos
std
cmp
mov
mov
mov
inc
sbb
pop
push
ljmp
dec
add
mov
int
repz
test
test
push
adc
ljmp
lods
pop
aas
testl
sub
ret
mov
sub
cmp
stos
mov
sbb
mul
xor
fadds
es
ror
mov
mov
and
fcoml
out
fcom
or
lds
dec
fcoml
sbb
or
les
enter
xor
jns
add
sub
enter
loopne
sub
sub
mov
fnclex
popf
dec
fdivrs
incb
fstpl
adc
mov
add
add
sbb
adc
je
aam
xchg
or
sub
xchg
mov
lret
or
lahf
pop
dec
add
mov
push
add
subb
les
or
push
or
jmp
dec
cmpsb
and
sbb
je
inc
or
jbe
cld
sub
je
movsl
sub
stc
add
es
pop
mov
les
add
sub
pop
cwtl
inc
xchg
sbb
in
adc
or
movl
sub
sbb
lods
and
jg
and
imulb
rolb
mov
outsb
adc
test
popa
sbb
jle
or
call
inc
out
idivl
aas
xor
jne
sarb
and
jne
in
push
jmp
inc
fisubs
aaa
add
add
lahf
adc
pop
jmp
js
les
or
aaa
es
cmp
jne
mov
popa
xchg
dec
lods
add
sarb
inc
jp
idivl
dec
jl
push
call
mov
pushf
or
rorl
sbb
jns
push
cmove
imul
inc
adc
add
jle
fiaddl
jge
fdivl
dec
adc
cmp
mov
aad
jecxz
mov
adc
mov
mov
test
inc
sub
add
frstor
xor
pop
push
jb
ret
cmp
mov
inc
cwtl
ret
fwait
addr16
push
lock
xchg
adc
notb
lretw
mov
xchg
js
icebp
or
pop
jg
sub
clc
rcll
or
cli
inc
shr
lcall
add
dec
lcall
inc
add
add
add
jge
out
shr
int3
mov
mov
inc
or
cmp
cs
push
subl
add
mov
inc
les
fimuls
rcrb
cwtl
mov
or
xchg
adc
cltd
and
sub
das
je
adc
push
jmp
js
pop
mov
adc
sbb
sub
lea
lock
add
inc
push
lock
fcoms
mov
cmpsl
es
sti
and
mov
jge
out
push
pushf
sbb
movsb
pop
fsubr
decb
enter
scas
adc
aad
push
pop
rolb
stos
popf
or
outsb
cmpsb
pop
lock
nop
shlb
cld
sbb
flds
fadds
fistps
mov
cmp
cwtl
dec
jl
pusha
stos
cmpsl
sbb
jl
inc
and
xchg
xchg
sub
lods
icebp
div
dec
js
adc
dec
inc
out
xor
add
leave
test
dec
jb
enter
push
pop
leave
loopne
xchg
sahf
adc
cmp
cmovg
clc
inc
sbb
outsb
clc
nop
jecxz
push
mov
cmp
imul
or
dec
adc
adc
jmp
xchg
lock
pop
addr16
test
mov
orps
in
add
add
lock
pusha
xlat
push
pop
mov
sub
inc
and
or
ret
jge
mov
dec
lret
adc
inc
jl,pn
inc
loop
aas
dec
xchg
mov
inc
nop
sbb
sti
testl
mov
sarl
neg
add
mov
cmp
and
inc
jns
inc
adc
sbb
cmp
jl
jmp
inc
je
ret
ficompl
cmpsl
add
cmovp
or
cmp
push
or
test
in
add
outsb
or
popf
fmuls
add
mov
cltd
rolb
sub
push
outsb
mov
cmp
sub
mov
xchg
stos
mov
int3
rolb
rcrb
popa
or
sub
add
clc
adc
inc
sahf
popa
jo
push
cmp
je
ds
and
cmp
add
mov
cmp
aam
lds
mov
clc
insl
movsb
je
mov
pop
les
cwtl
cmp
outsl
jl
pop
jo
inc
js
jp
lcall
clc
push
jnp
popa
push
sbb
mov
in
push
xchg
jecxz
cmp
sbb
sub
push
cmp
ljmp
pop
add
sub
clc
out
nop
rorb
lret
mov
loopne
push
in
sarb
outsb
sub
jl
addr16
in
cmpb
jae
mov
jle
bound
or
in
xchg
cmpsb
imul
lock
js
sbb
mov
je
push
xor
mov
push
sub
push
sub
jle
inc
cmp
sarl
mov
adc
inc
pop
ja
push
or
and
sub
cmpsb
xor
aaa
push
lock
enter
and
mov
int3
or
push
call
into
aaa
sub
pop
adc
mov
inc
xor
dec
push
jne
lea
push
test
inc
lret
clc
addr16
daa
or
in
jge
push
adc
add
or
inc
stos
cwtl
test
lock
loop
lds
inc
shr
and
ja
lock
sbb
mov
hlt
pop
mov
push
loopne
ret
pop
xor
xorb
fdivl
rolb
in
jl
mov
scas
jo
jns
iret
rcll
int3
fsub
push
ret
imul
lcall
daa
pop
sub
lock
pop
inc
or
or
cmp
pop
dec
xor
fcoms
cmpsl
pusha
lock
loop
xor
das
dec
cmp
sub
or
dec
xor
jbe
sar
mov
xchg
or
dec
push
into
mov
sub
xchg
loopne
sbb
call
icebp
daa
test
xor
je
fldenv
xchg
mov
inc
ljmp
ret
jne
cmp
cwtl
bswap
inc
inc
fdivrl
cmp
xchg
cmp
aaa
mov
mov
lcall
shll
rclb
sub
lret
ror
mov
clc
and
push
mov
rcll
dec
mov
fcoml
js
mov
sbb
add
inc
adc
adc
mov
jns
sub
enter
push
dec
lods
imul
xchg
es
add
push
cmpsb
stos
cmp
js
jmp
xchg
inc
dec
xor
jl
jne
popa
into
xor
loope
mov
dec
adc
pop
ljmp
insl
movswl
add
test
fdivrl
sub
scas
lods
pop
out
and
adc
xor
aam
lea
cwtl
sbb
or
mov
dec
in
ret
sub
xchg
adc
lds
dec
and
jno
call
and
push
lret
xchg
in
daa
or
add
dec
mov
fsubr
adc
js
push
mov
rolb
repnz
shlb
jmp
inc
sub
push
mov
repz
jo
xchg
xor
push
sub
test
cmp
mov
nop
gs
push
rolb
in
cli
lahf
lods
fbstp
mov
mov
mov
or
arpl
je
clc
push
pop
ret
sub
loopne
push
push
inc
xlat
push
mov
pop
cwtl
and
adc
push
int
xor
lcall
push
paddq
xorl
dec
dec
mov
push
inc
adc
pop
mov
lea
add
lds
insl
aad
adc
jmp
xor
aaa
dec
aaa
ret
xlat
cs
nop
test
cld
cld
or
xchg
js
inc
jmp
xor
add
movsb
gs
pop
aaa
fwait
xchg
fwait
xchg
cmc
cmpl
shll
xchg
or
out
jnp
xor
rcrl
dec
movsl
pop
sbb
aaa
mov
pop
sbb
inc
loope
arpl
hlt
add
hlt
dec
clc
push
ret
cmp
or
add
movsl
cli
dec
shl
xor
or
push
incb
add
adc
incl
sub
add
mov
jl
call
mov
nop
sbb
add
mov
jge
scas
jle
scas
lock
jbe
inc
jbe
jg
jbe
imul
push
adc
dec
int3
inc
inc
push
in
xchg
mov
or
mov
push
cmp
arpl
iret
push
lcall
xchg
xlat
aaa
or
adc
sbb
out
add
jle
push
notl
loopne
xchg
fs
cmpb
pop
js
sahf
jno
mov
or
aas
push
shl
pop
adc
movnti
cmp
add
xor
sbb
xchg
jge
inc
jge
into
adc
mov
loop
cmpsl
cli
dec
jne
mov
sbb
mov
or
or
iret
in
inc
sub
mov
adc
fcomps
enter
inc
cld
mov
xor
imul
popa
mov
or
or
mov
pop
or
add
or
lahf
test
pop
jmp
add
xor
adc
cmp
sarl
xchg
fnstenv
jns
dec
xchg
ret
mov
or
xchg
add
mov
dec
aad
das
loopne
add
xorb
addr16
jmp
inc
add
loope
mov
enter
ffree
jbe
xchg
fnstsw
adc
popf
sbb
fsts
imul
cmp
shrl
cltd
fmull
jo
sub
mov
push
sub
push
fwait
and
add
mov
imul
mov
add
sar
add
jl
roll
sub
stc
inc
cs
cmp
push
std
inc
inc
ss
inc
adc
orl
add
cmp
out
inc
addr16
adcl
adc
mov
mov
insl
pusha
add
scas
mov
fmuls
jmp
pop
pushf
jmp
pop
sbb
arpl
enter
xchg
or
ljmp
dec
dec
or
adc
clc
or
or
adc
sub
mov
dec
sub
add
adc
sub
rclb
inc
out
movsl
mov
jb
add
or
pop
pop
je
dec
je
cld
xchg
push
fucomip
ds
add
inc
les
adc
mov
sub
idivb
adc
adc
push
movl
mov
mov
test
loopne
push
movb
dec
sbb
sahf
sub
or
add
jns
sbb
adc
or
jle
xchg
xor
push
jb
stos
jae
jge
and
lret
adc
cmp
lock
mov
cli
jae
imul
bnd
inc
movl
mov
xor
and
shl
cli
es
mov
pop
addb
add
mov
and
test
add
dec
popa
adc
pop
test
movsb
sar
mov
add
inc
das
outsl
adc
pushf
add
mov
and
sub
hlt
push
sbb
sub
mov
aas
mov
ror
mov
aas
shl
stos
or
or
push
cmp
test
adc
dec
push
push
or
movsl
sbb
lods
mov
imul
dec
push
mov
movsl
add
rolb
add
mov
adc
sub
cs
inc
add
mov
scas
mov
adc
push
repz
ja
sti
xor
repz
sbb
ficompl
sub
or
dec
shll
clc
in
pop
rcl
loopne
or
leave
sub
fmull
aam
outsb
outsb
sub
es
mov
notb
dec
enter
push
lret
lods
shll
int3
mov
jp
fcomp
cld
popa
cltd
pop
and
xor
jle
and
sub
push
insl
movsl
push
loopne
cs
xor
ret
enter
lock
sbb
or
or
or
mov
inc
clc
jge
mov
scas
clc
sub
sahf
lock
andb
add
jmp
rcrb
inc
in
jle
clc
mov
loopne
jno
sbb
fcmove
or
out
fidivrs
call
mov
call
and
adc
dec
mov
popl
outsb
adc
dec
aam
push
and
push
add
cmc
inc
stos
fwait
rorl
idivb
lea
and
push
or
aas
push
aam
pop
mov
inc
testb
cmp
jle
pop
adc
and
xchg
mov
lea
push
mov
add
mov
in
addl
mov
mov
inc
repz
or
call
pop
sub
arpl
jo
call
movsb
rclb
mov
pop
jb
mov
sahf
jo
inc
push
add
push
or
pop
dec
or
sbb
mov
enter
add
or
nop
fdivl
enter
dec
sbb
pop
jno
dec
cmpb
jp
shr
pop
jne
lods
mov
cmp
jge
mov
push
jge
mov
add
imul
xor
fistpll
orl
imul
mov
xchg
aam
and
aam
pop
mov
xchg
or
lods
adc
mov
pop
ficomps
and
or
fmuls
pop
xorl
push
xchg
jge
add
clc
add
add
scas
and
inc
adc
shl
shl
jp
int
js
or
add
mov
rclb
mov
fstpl
push
mov
jmp
mov
and
shll
cltd
out
gs
cmpsl
mov
clc
add
lcall
inc
shll
or
lods
push
cmp
inc
pop
fmuls
andl
cli
out
inc
lret
enter
movsl
lcall
push
xchg
les
inc
in
int3
add
daa
push
cmp
sbb
jo
mov
or
in
jbe
test
dec
sbb
pop
fcoml
xchg
rorb
mov
shll
mov
and
push
xor
ret
test
mov
pop
icebp
repnz
fiaddl
lcall
push
cmp
jo
cs
lock
mov
loopne
iret
push
xchg
jp
lahf
ja
sub
int3
jge
test
in
ja
pop
rcll
xchg
nop
inc
les
mov
or
xchg
xor
lret
xlat
loopne
cmp
test
movsb
jge
mov
add
mov
cmp
adc
dec
pushf
jb
fcomps
pop
or
xchg
inc
mov
test
cmp
add
sub
jns
aas
and
ss
pop
mov
test
ret
mov
cmp
add
mov
push
push
dec
js
mov
push
shl
ds
and
loopne
push
fcomps
ja
xchg
push
inc
sub
sub
pop
or
dec
inc
add
adc
test
mov
mov
push
js
jbe
addb
ja
sbb
cli
movswl
repnz
add
fsubr
pop
add
ficompl
sar
ret
pushf
push
inc
push
or
sti
cmp
sbb
mov
aad
lcall
inc
stos
js
dec
xlat
not
xchg
pop
mov
test
ret
fiaddl
cmp
adc
mov
ss
xchg
ret
in
push
push
and
sarl
cmpsb
mov
dec
std
std
out
adc
mov
mov
add
in
test
push
or
xchg
dec
movsb
lods
lcall
or
repnz
cwtl
fsubl
mov
clc
mov
push
into
andb
adc
dec
testl
cmp
jne
push
mov
ja
fadds
lock
push
push
mov
sbb
fildl
pusha
adc
ret
push
in
pop
cmp
add
rcr
ss
lods
cmp
rcrb
pusha
lcall
cmp
adc
push
je
cld
sarb
cmpsb
pop
mov
jb
lds
cmp
dec
mov
shlb
adc
add
jecxz
mov
js
inc
jge
cld
pop
daa
or
pop
or
push
add
mov
dec
sub
adc
and
push
cld
cli
neg
mov
mov
mov
lea
push
xor
cmp
cmp
aaa
xchg
sub
inc
test
imul
loope
test
add
dec
jl
pop
ja
aam
popa
mov
pop
cmpsl
call
lcall
orb
push
adc
and
and
jle
push
sub
sahf
inc
xchg
cmpl
int3
ltr
inc
pop
add
lock
or
aaa
or
data16
popf
ja
inc
add
xor
push
xor
popa
push
jo
mov
mov
cmp
and
sti
push
xor
push
out
cmp
decl
cmc
jle
cmp
jp
aad
or
sub
pop
es
mov
sbb
add
xchg
push
jmp
std
xchg
and
pop
lock
mov
in
pop
xor
jl
add
mov
in
push
loopne
std
out
xchg
mov
lods
push
call
adc
loopne
sahf
in
cmp
push
gs
push
sub
mov
jnp
ret
mov
js
sbb
sub
popf
loopne
push
add
inc
xor
stos
push
pop
dec
pop
adc
xchg
fisubrl
or
cmp
xor
decl
cld
nop
xor
jle
adc
pop
fcomps
inc
rorl
xchg
ret
add
pop
push
add
es
dec
jo
or
cs
pop
ljmp
cmp
or
and
xchg
xchg
jge
jo
adc
mov
repnz
mov
jl
scas
in
and
inc
push
dec
mov
cli
mov
test
loopne
jle
call
push
movsl
ret
cmp
or
or
mov
mov
dec
rorb
rol
push
lcall
push
inc
push
sub
cmp
jl
xor
fsubl
cwtl
pusha
test
stos
cltd
mov
dec
ljmp
sub
test
adcl
test
or
mov
xchg
bound
pusha
jae
insb
sbb
inc
cmp
pop
mov
call
xchg
bnd
jl
sbb
push
mov
mov
out
mov
mov
test
notl
and
add
jl
jp
fcomps
pop
cli
dec
adc
stc
add
jo
dec
mov
cmp
sub
jge
mov
aaa
push
pop
dec
inc
test
xor
ss
rolb
jl
pushf
lock
mov
clc
mov
sbb
xchg
ret
dec
lods
out
js
adc
lds
add
and
and
js
or
sbb
popa
jne
pop
cmp
cwtl
or
jle
mov
cs
clc
sub
lods
mov
cmp
and
mov
lock
add
mov
sti
outsb
add
arpl
gs
mov
mov
jno
fnstsw
jmp
inc
sub
repz
cmp
jb
lret
fdivr
xchg
adc
push
lea
inc
incb
lret
lock
rorl
sbb
ficoml
dec
cmp
sbb
fisubl
cld
jmp
lea
sub
das
scas
out
test
adc
and
dec
mov
jno
push
ds
mov
rcrl
mov
ds
js
hlt
pop
mov
jo
adc
notb
cs
and
adc
adc
inc
out
lahf
test
sahf
out
mov
sbb
add
mov
mov
push
pusha
sarb
adcb
sar
push
mov
adc
xchg
orb
mov
arpl
cmpsb
xchg
lock
dec
cs
pop
sti
xchg
cmpl
sub
jo
add
shlb
cmp
je
dec
jne
iret
dec
clc
mov
pop
adc
in
push
xchg
mov
push
dec
jb
or
inc
and
pop
adc
fildl
mov
aam
stos
int3
cmp
push
cmp
dec
into
cld
push
movsl
loopne
xchg
or
addr16
xlat
jb
cmpsb
dec
add
xchg
dec
addr16
lret
xor
fwait
cmp
sbb
pop
mov
loope
das
cmp
lret
mov
fmulp
rorb
dec
fiaddl
mov
push
adc
scas
mov
xchg
loop
in
cmp
inc
test
mov
mov
iret
jns
cmpl
inc
andl
in
xchg
adc
xchg
dec
ret
or
cmp
pushf
lahf
ljmp
int
insb
clc
jmp
mov
pop
mov
adc
cmp
push
dec
int
popa
dec
and
mov
sbb
inc
and
mov
fistl
mov
xor
or
addr16
pop
sub
das
add
cmp
mov
insb
lods
inc
hlt
mov
inc
dec
lcall
sbb
and
adc
cs
add
push
add
mov
add
dec
jl
out
adc
inc
pushf
and
les
xchg
cmp
lods
or
cmp
mov
ror
and
out
sbb
fidivl
imul
fistl
xchg
loopne
bndldx
jae
repz
inc
pop
push
rol
shlb
add
or
push
movsl
and
add
lret
lods
ljmp
std
push
mov
lea
and
das
adc
out
or
js
or
rclb
or
xchg
add
and
mov
pushf
sub
dec
inc
insb
jmp
dec
hlt
mov
push
cmp
loop
stc
fwait
pusha
into
ret
int3
inc
mov
out
and
gs
xchg
adc
or
add
push
jge
jl
negb
sub
sub
mov
je
mov
pop
dec
xchg
sbb
jmp
cmp
jnp
inc
dec
jl
add
add
add
mov
or
dec
cmp
sub
ljmp
popl
jge,pn
xchg
and
adc
and
sbb
pop
cmp
jbe
pop
push
cmp
cmp
js
mov
adc
orb
lods
jae
lret
dec
jl
mov
mov
mov
jno
xchg
dec
lea
mov
sub
dec
shl
out
mov
jp
push
push
sbb
cmp
mov
iret
push
mov
sbb
orb
push
and
fcmove
mov
sbb
scas
mov
pop
fdivl
pop
and
mov
and
loopne
dec
pop
in
ds
jo
mov
sbb
lds
movsb
sbb
xor
mov
jl
lcall
push
jge
cmp
clc
add
mov
lea
popf
mov
or
and
inc
cmp
call
les
dec
xor
ljmp
sub
jnp
jl
mov
jae
mov
sbb
adc
outsl
es
or
pop
sub
xchg
sbb
inc
jno
adc
xor
pop
inc
jmp
inc
or
cmp
aam
out
push
dec
mov
pop
lea
and
adc
pop
add
xor
mov
cwtl
jl
daa
inc
lret
and
les
lea
mov
adc
inc
mov
dec
testl
sti
cmc
mov
jg
jns
pop
lods
inc
jp
jne
xor
mov
cmp
mov
or
jmp
inc
inc
mov
and
or
xchg
jo
stos
je
subb
loope
in
nop
add
mov
add
xchg
lea
cmp
insl
cwtl
test
js
cmp
mov
sbb
jmp
out
jp
fimull
or
fstp
ret
lret
xchg
push
or
adc
loope
stos
icebp
adc
stos
push
and
push
xchg
xor
aad
mov
inc
cs
xor
repnz
test
lahf
hlt
aam
mov
dec
pop
pop
pop
xchg
add
ret
mov
xchg
fidivs
or
sub
push
sbb
lea
jo
mov
jo
push
or
mov
dec
das
xchg
dec
fldt
inc
dec
and
js
or
adc
repz
and
adc
lea
pusha
loope
pop
or
add
addr16
inc
jmp
adc
cmp
das
sub
mov
cmp
push
xchg
or
test
add
push
mov
inc
fmull
xor
and
mov
pop
out
jo
sbb
je
int
xchg
mov
xor
xchg
lock
cmc
outsl
inc
pop
daa
jmp
mov
and
cltd
xchg
adc
in
shll
ja
imul
popa
lds
xchg
adc
call
mov
xchg
sub
js
mov
dec
xor
sub
loopne
in
jae
cmp
sub
sbb
sbb
xchg
dec
fbstp
cmp
or
cmp
or
mov
push
jle
dec
push
pushf
jbe
shr
ffree
add
push
sub
popf
adc
ds
mov
dec
fadds
mulb
or
jmp
xchg
push
ror
imul
mov
ss
xor
pop
mov
xor
jo
ficomps
push
scas
dec
adc
inc
push
jnp
cmp
nop
adc
add
pop
inc
outsb
push
mov
inc
mov
mov
insb
inc
adc
xlat
sub
outsl
pusha
mov
cmp
test
or
imul
push
push
scas
out
jecxz
scas
lret
and
nopl
jnp
xor
sbb
add
dec
push
or
aam
or
jmp
cmp
dec
cld
dec
xor
adc
xchg
jo
and
push
movl
aas
xor
mov
jo
or
andl
and
int3
pop
jg
daa
mov
add
mov
xor
dec
push
daa
shrl
add
or
sahf
push
push
adc
call
ret
outsl
xorb
loop
sub
jp
add
push
cs
lcall
push
mov
xchg
inc
adcb
mov
pop
jecxz
mov
into
sub
cli
and
xor
pop
jb
pop
push
rcll
jle
daa
pop
push
and
sbb
in
aaa
mov
cmp
add
neg
inc
lcall
test
lock
ret
xor
je
test
push
and
inc
dec
fs
arpl
or
inc
dec
sub
dec
lock
jl
push
add
sub
pop
dec
or
insb
insb
push
cltd
mov
arpl
adc
stos
lea
adc
js
mov
adc
pushf
dec
push
subb
inc
adc
arpl
stos
call
pushf
add
inc
stos
shrb
je
in
imul
or
arpl
enter
cmp
push
lea
and
add
push
mov
push
test
popf
mov
aad
xlat
mov
orb
add
lock
arpl
add
add
movsl
cmp
mov
xchg
add
sbb
jl
popf
xor
in
testl
push
pushf
das
loopne
mov
lcall
mov
mov
sub
movl
inc
jo
lret
mov
rclb
outsb
movsb
pop
and
mov
cmp
and
jnp
push
dec
push
and
movb
inc
shll
cwtl
cmpb
xor
add
ja
pushf
xor
insb
adc
mov
inc
sbb
dec
dec
adc
mov
or
sahf
fadds
pushf
test
sbb
or
pushf
test
ljmp
jmp
xor
mov
dec
je
add
jmp
subl
jle
and
movsl
add
inc
inc
test
jo
inc
mov
sbb
jmp
mov
adc
dec
das
jb
add
add
test
cmp
ds
cmp
xor
mov
adc
push
push
loopne
insl
add
cmp
jno
jne
or
inc
ret
sarl
sub
shrl
orl
lea
push
inc
dec
jmp
popl
ret
sub
inc
sub
test
and
add
lds
lock
lret
sbb
sub
adc
sahf
adc
push
fsubl
test
lret
adc
adc
pop
xchg
cmpsb
popf
gs
cmpsb
dec
cmp
sub
adc
stc
adc
or
js
in
cmp
push
cmc
in
cltd
or
lock
fs
add
movsl
sub
ljmp
cmp
lock
jbe
cmp
test
cltd
movsl
repnz
inc
add
mov
xchg
je
rcrb
movsl
shrl
or
adc
add
add
push
dec
sub
lahf
or
adc
pop
fsubl
or
ja
jae
jle
aad
test
je
and
inc
or
cld
jns
lods
mov
push
outsl
or
imull
aaa
je
scas
mov
pop
fstpl
jl
stos
adc
sbb
and
push
dec
adc
js
or
das
mov
push
popf
arpl
psubsb
xchg
js
xchg
xchg
arpl
lret
add
mov
pop
and
adc
leave
add
xor
pushf
cmc
dec
pusha
insb
stos
xchg
push
inc
bound
cmp
je
mov
pop
or
mov
jno
fucomp
dec
je
add
jmp
cmp
inc
jbe
pop
inc
and
xor
fsubrl
xor
addb
sbb
sbb
or
inc
push
pushf
xor
hlt
mov
add
mov
pop
and
pop
mov
dec
push
imul
inc
ret
add
stos
inc
shrl
sub
and
pushf
adc
daa
and
cmpsl
push
sub
outsb
out
dec
mov
cmp
fwait
sub
mov
ret
add
je
adc
and
mov
jp
imul
xor
rclb
shlb
lea
mov
adc
out
mov
sub
test
ds
inc
fmull
fmull
mov
add
jp
jl
xchg
sub
lods
xchg
sbb
movsb
mov
daa
lret
in
inc
sub
mov
push
rorl
push
mov
jl
mov
cmc
push
pop
shr
xor
push
or
add
add
cmpsl
add
pop
mov
pop
mov
stos
rclb
jl
jae
loope
iret
jmp
xchg
dec
aam
arpl
cmpsl
pusha
incl
and
outsl
push
inc
pop
cmp
push
jl
sbb
push
mov
lea
cmp
sub
mov
lret
popa
call
push
mov
rolb
hlt
jb
sbb
mov
fidivl
addl
int
sub
sbb
cmp
sub
test
pusha
dec
jae
adc
mov
sub
divl
aam
mov
in
movsb
xlat
xchg
enter
aaa
and
dec
sub
mov
mov
mov
rol
add
dec
sar
or
stc
aaa
inc
cmp
pop
or
dec
lret
clc
les
mov
jne
adc
sbb
inc
ret
lea
lret
inc
pop
and
or
nop
test
jo
push
loopne
mov
push
inc
mov
add
dec
push
or
sub
cmp
fs
insb
sub
lock
push
jae
cmp
fs
mov
add
add
les
cmpb
hlt
ret
push
jne
pusha
or
pop
cmp
arpl
add
jns
div
add
jbe
mov
inc
add
add
sub
mov
clc
jg
mov
movzwl
xor
or
jp
rolb
lcall
dec
mov
xor
cmp
fcoml
inc
mov
sbb
hlt
xchg
pop
cs
jo
hlt
lock
rclb
hlt
aam
or
hlt
cwtl
dec
popf
jg
ja
int
pop
fcomip
lock
addb
or
popa
adcb
repnz
stos
cmp
shr
out
fcmovnu
jg
jno
sub
jbe
dec
cmp
mov
push
add
inc
loop
sbb
gs
mov
mov
insb
movsb
mov
xor
xchg
imul
loop
jno
aas
aam
inc
or
fadds
fs
testb
in
loope
jae
in
andb
cmp
add
cmp
sbb
inc
int
xlat
fisttps
adc
stos
lods
and
stos
fcomps
dec
call
in
dec
xchg
cltd
sub
push
arpl
xor
mov
xchg
mov
in
jbe
movl
inc
into
lcall
fldcw
lea
mov
jbe
jo
cmpsl
push
jp
ds
push
inc
fmuls
jnp
lods
outsb
ja
push
dec
jecxz
cld
fdivrl
jge
jl
add
sub
fnstcw
loope
rcrb
mov
xorb
sbb
mov
push
inc
adc
add
sbb
xlat
shlb
or
cmpl
xor
or
add
mov
pop
and
punpcklbw
add
cwtl
std
mov
pop
std
lea
mov
mov
test
dec
dec
and
jmp
fimull
enter
popf
xorl
xchg
cmp
xor
fnstsw
adc
inc
shrb
loope,pn
and
dec
out
cmp
lret
jne
push
cmp
cs
fistpll
mov
add
or
sub
rcll
cwtl
sub
jbe
pop
jecxz
test
cmp
lds
mov
xor
orl
ds
and
jle
jmp
repz
jge
std
ret
adc
cmp
dec
stc
and
jl
loopne
ficompl
mov
cmp
jmp
add
loop
add
aaa
andl
js
jecxz
pop
pop
ret
ret
loopne
test
sbb
push
mov
lock
push
les
push
das
lea
add
test
rorl
jns
cmpsl
jns
and
insb
inc
cmpsl
jns
cmpsl
gs
pop
pusha
push
add
fwait
jo
filds
lahf
insb
fstps
mov
or
dec
and
stc
or
mov
adc
shl
sti
add
sahf
cwtl
xchg
cld
filds
fmuls
adc
inc
fdivr
push
hlt
pusha
ljmpw
fldcw
les
mov
cmp
and
lock
xor
mov
js
xor
aam
out
cmp
fcoml
cld
and
imul
scas
aam
adc
mov
in
movsl
imul
push
mov
in
jo
loopne
in
mov
rclb
mov
loopne
mov
shlb
mov
inc
or
mov
pop
add
dec
jl
fprem
dec
dec
and
xchg
movsl
imul
js
cmp
aam
in
in
xor
sub
movntq
inc
or
in
jbe
jbe
sub
hlt
arpl
adc
call
mov
gs
ss
pusha
push
jp
sbb
pop
outsl
xchg
inc
es
and
js
sub
xor
mov
mov
sbb
test
push
mov
adc
arpl
repz
cmpsl
rcrb
arpl
and
xchg
arpl
fs
add
pop
dec
mov
sub
and
lods
and
mov
mov
test
in
adc
dec
add
aaa
or
gs
and
add
mov
inc
les
dec
inc
xor
inc
cli
inc
add
stos
lcall
inc
sbb
mov
pop
sub
aam
cmp
jne
daa
rolb
aad
cltd
xor
test
jne
dec
push
lret
dec
shr
add
in
sarl
and
push
cmp
sarl
push
push
dec
pusha
xor
int
inc
jo
cli
mov
sbbb
rcr
dec
mov
pusha
mov
xchg
into
in
loopne
shlb
test
cmpsl
or
push
stos
sbb
sbb
jns
add
pusha
in
push
mov
dec
sahf
add
ds
ret
shl
mov
sbb
das
fstl
imul
add
sbb
dec
xor
dec
fbld
into
xor
cmp
and
loopne
js
mov
into
fldcw
fnstenv
lahf
push
arpl
or
test
xor
bound
das
loopne
jle
loopne
jge
repnz
shrl
sub
push
es
fiadds
jmp
mov
shl
sub
or
xchg
push
mov
adc
adcb
add
cmp
mov
inc
imul
mov
lahf
add
sub
sbb
jns
inc
loopne
add
mov
push
sub
or
sub
and
mov
add
inc
push
sub
ja
inc
loopne
push
sub
jg
loop
sti
decl
cmpl
jl
mov
push
std
push
les
lcall
adc
push
or
push
shlb
imul
mov
js
add
cmpsb
std
out
enter
mov
add
add
mov
hlt
and
cmp
pusha
pop
lret
ficoms
or
shll
push
incb
xchg
mov
sbb
push
sub
fdivrs
lret
adc
sbb
add
add
je
adc
insb
push
nop
sub
sbb
in
rclb
shl
sbb
sub
pop
in
fisubrs
add
enter
adc
push
sub
add
sbb
xchg
xchg
pushf
enter
xor
je
or
xchg
stos
lods
ja
xor
imul
xor
in
aas
pop
in
scas
xchg
inc
inc
in
pop
mov
mov
add
test
repz
jnp
or
cmp
xor
xor
repz
sub
dec
dec
and
sbb
cmp
and
ljmp
and
push
pop
xchg
aaa
cmp
xchg
push
into
inc
and
sub
in
icebp
shl
or
fistps
or
add
neg
lea
rorl
mov
cmp
pop
add
inc
xlat
inc
stos
dec
into
loop
shrl
cld
int
shll
push
jo
xchg
test
hlt
in
mov
mov
cmp
push
pusha
sbb
adc
test
out
push
lea
add
inc
xchg
lods
les
sbb
mov
mov
pusha
sahf
dec
call
fnstcw
js
hlt
neg
and
jne
ret
rol
lods
in
dec
push
in
int
sub
jl
js
push
ja
cmp
fsubrl
cld
add
lock
or
mov
mov
push
sub
clc
add
add
and
dec
and
inc
cmpl
in
fdivrl
or
fsubrl
push
cltd
lcall
aas
mov
fnstenv
sub
or
xor
mov
adc
mov
mov
add
lea
popf
stos
add
pop
push
jb
mov
arpl
lret
lret
mov
adcl
ljmp
mov
pop
negb
or
dec
aam
push
add
in
add
adc
sahf
outsb
cmc
add
out
pop
aaa
in
enter
imul
pop
lret
pop
sti
inc
sub
jmp
or
cwtl
push
stos
sbb
mov
aaa
dec
adc
xor
aaa
jo
hlt
sub
add
xchg
stos
mov
dec
add
mov
pop
adc
stos
adc
imul
test
repz
add
das
lods
push
pop
or
cmp
jp
push
cli
push
aad
imul
je
jns
gs
xor
jae
lcall
jne
mov
shl
rcrb
scas
sub
inc
sbb
jo
or
jb
cmpsb
sahf
imul
ret
xchg
in
sub
and
mov
sub
pop
pusha
and
xlat
call
clc
loope
shlb
add
adc
stc
lock
cmp
adc
mov
add
sub
movsl
sbb
out
scas
clc
push
xor
adc
or
or
in
xchg
dec
dec
cs
mov
push
xor
mov
lods
loope
fldt
loopne
repz
sbb
pop
add
cmp
movsl
push
sbb
imul
rolb
sbbl
push
or
pop
add
and
xor
repz
or
insl
shll
cli
aaa
add
inc
test
mov
jnp
pop
dec
popa
call
mov
ret
xchg
or
mov
sbb
mov
rorl
clc
std
mov
mov
mov
pop
add
mov
or
jmp
pop
or
or
cmp
mov
add
push
ficomps
push
and
imul
out
mov
aad
fsub
inc
sub
xchg
sbb
jmp
sbbl
sbb
push
andl
adc
sbbb
into
andl
jno
add
mov
or
inc
sbb
cmp
sbb
inc
sti
add
call
cwtl
push
xchg
or
jp
ds
push
mov
sarl
dec
movzbl
shl
inc
js
xor
add
rorb
pop
int
mov
xor
dec
inc
sbb
inc
and
add
push
xor
add
sub
hlt
js
push
inc
add
pop
adc
ds
dec
mov
push
shrl
or
rorb
add
add
cmp
sarl
push
loope
pop
jmp
jg
and
cmp
je
or
push
inc
fld
push
and
cmp
aaa
add
pop
sub
aaa
stos
pop
mov
in
push
inc
add
inc
iret
jmp
jmp
mov
push
cli
add
cmp
test
sub
or
push
ja
mov
les
jp
push
adc
push
mov
lea
gs
in
lea
mov
leave
adc
xor
add
je
mov
leave
add
pop
icebp
je
icebp
call
mov
loope
and
in
into
mov
fs
inc
jg
dec
cs
and
pop
jl
cmp
inc
rolb
add
pop
rolb
push
inc
roll
push
sub
and
rolb
test
adc
push
lods
dec
loope
cmp
mov
sti
or
or
or
mov
ss
rolb
pop
shrl
orb
cld
push
je
inc
xor
or
out
leave
add
sub
sbb
adc
inc
popa
xchg
lock
ljmp
nop
nop
dec
adc
sbb
push
aad
adc
xchg
adc
adc
jnp
mov
add
cmp
stos
insl
leave
js
add
fisttpl
orb
xchg
daa
pop
pop
add
mov
arpl
rclb
cmp
fstps
test
test
inc
cmpl
inc
ja
sbb
pop
push
faddp
call
xor
movsl
xchg
lods
stc
dec
es
pop
mov
or
popa
xchg
mov
push
inc
subl
fs
cmp
mov
dec
sub
push
and
dec
mov
dec
push
pop
fisttpl
push
sbb
lds
mov
aaa
xor
inc
mov
mov
add
cmp
adc
bound
lock
or
cmpsb
mov
mov
cmp
sbb
and
sbb
pop
push
adc
sbb
cmp
push
addl
ffree
and
fs
inc
push
and
es
sub
lock
or
adc
and
push
adc
sbb
mov
cmp
jno
adc
jae
add
jl
scas
sub
inc
aam
inc
xchg
insb
or
or
add
test
add
add
sbb
pop
mov
add
adc
mov
push
fimuls
mov
inc
pop
sub
mov
push
scas
adc
pusha
pusha
jo
mov
fildl
cmp
xor
fcmovbe
and
inc
fwait
sub
test
cmp
and
sahf
add
call
adcl
xchg
mov
imul
fbld
out
jmp
add
sbb
into
loopne
push
inc
push
outsb
sbb
xor
push
fisubs
pop
and
xor
mov
cmp
ljmp
push
jle
mov
icebp
add
ja
in
test
cmp
adc
shl
dec
pusha
dec
loopne
adc
cmc
xchg
rcrl
and
push
inc
mov
sub
dec
and
fadds
sub
inc
cmp
orl
roll
ret
insb
int
loop
push
push
lods
mov
sub
push
jp
movzwl
mov
rorb
push
dec
repz
or
adc
adc
cli
loopne
xor
push
sti
mov
pop
xchg
vpmuludq
mov
or
aas
repz
test
push
add
inc
xchg
popf
insb
mov
add
adc
cmp
rol
inc
iret
pop
mov
pop
mov
outsb
adc
xor
push
xor
inc
andb
add
in
lods
daa
es
mov
dec
es
inc
inc
cmpsb
adc
mov
push
add
shrl
pop
mov
and
imul
test
jge
or
dec
loope
jb
fstl
pop
adc
inc
adc
dec
es
inc
repz
add
add
aaa
push
cli
into
cld
faddl
add
lock
cli
push
push
mov
inc
sbb
rorb
add
push
into
or
data16
int
sub
or
loope
enter
loope
and
jo
rorl
ja
xchg
sub
lods
xor
aam
mov
rclb
repz
inc
maskmovq
divl
xchg
iret
in
xchg
or
fsubs
pop
mov
adc
and
fsubrs
push
or
inc
or
aas
inc
movsl
adc
cmc
stos
inc
shr
out
or
mov
cmp
je
lock
or
dec
insl
and
repnz
mov
stos
add
adc
pop
xchg
add
add
pusha
xchg
adcl
fnsave
pusha
adc
lret
adc
je
pop
xor
ss
aad
jmp
xor
xchg
dec
enter
enter
cmp
xlat
int3
sahf
cmp
ja
or
pop
inc
pop
test
hlt
cmp
sarb
add
int3
test
jp
imul
add
add
xor
movsl
addb
lcall
add
dec
xchg
or
movsl
jo
sub
or
call
clc
hlt
mov
sbb
in
dec
push
cmc
push
dec
sbb
push
sub
pop
cmp
inc
mov
push
sbb
in
pop
sub
pop
xor
mov
push
pop
scas
pop
mov
outsl
outsb
mov
imul
dec
insl
jno
pop
loope
faddl
int
jl
roll
cmp
push
pop
mov
push
dec
je
pop
rorl
mov
pop
jae
pop
ds
nop
adc
cmp
sub
sub
sahf
pop
rolb
test
pop
sub
je
jmp
inc
push
addb
xor
xchg
pop
jmp
xchg
mov
enter
push
das
insl
or
mov
adc
inc
ljmp
nop
cmp
popf
or
xor
in
loopne
inc
lods
cmp
dec
mov
movsb
push
mov
dec
adc
cli
push
add
das
jno
xor
cmp
xchg
mov
addb
adc
pop
pop
roll
les
fistl
mov
out
dec
jbe
adc
add
mov
popf
loopne
decb
xlat
dec
pusha
and
sbb
insb
pop
insb
cmp
daa
sbb
push
jae
push
add
rcll
loop
test
cmpl
inc
mov
or
sub
repnz
jmp
test
es
into
movb
mov
sub
cltd
insl
fisttps
in
jmp
arpl
lock
loop
mov
adc
out
pop
shll
mov
pop
add
or
gs
jae
sbb
xchg
and
dec
inc
fwait
mov
ja
adc
mov
or
test
mov
bound
jmp
mov
pop
pop
lcall
or
push
mov
push
and
jmp
and
sub
xchg
aad
inc
cs
sub
push
jo
mov
inc
ret
pusha
push
adc
call
sbb
adc
pop
xor
sbb
lock
mov
fdivrl
test
sub
call
and
sbb
in
dec
and
xchg
mov
and
add
pushf
push
in
xchg
pop
sti
nop
daa
ret
or
mov
mov
mov
lods
movb
push
push
cmp
push
add
in
je
movzbl
inc
dec
pop
push
das
xorl
incl
rcrb
or
enter
cmp
lds
inc
fistps
and
sub
cs
inc
je
dec
lea
push
dec
imul
ja
jmp
pop
sbb
inc
ror
mov
push
lds
sub
mov
push
lret
imul
xor
pop
lock
fdivp
xor
dec
shll
dec
or
lea
xor
lcall
test
lock
inc
jns
je
enter
add
push
pop
jae
add
xchg
dec
cli
int
jge
push
lds
icebp
adc
and
test
or
add
inc
inc
jbe
add
ljmp
movsl
sub
jnp
xchg
dec
fldcw
push
cmp
dec
adc
cli
pop
ja
inc
add
les
pop
push
jne
in
pop
fisubrl
fistl
xchg
or
add
out
dec
adc
xorb
cmpsl
cmp
push
rcrb
pop
adc
pop
clc
and
or
push
dec
pop
cwtl
rol
sbb
push
and
out
adc
and
mov
lds
dec
subl
xor
xor
pop
lea
repnz
mov
lret
mov
jl
fdivrl
push
mov
aas
sub
jb
mov
es
fs
test
inc
xchg
imul
push
xchg
mov
mov
out
dec
popa
sub
nop
daa
sbb
lret
pusha
mov
push
xor
sub
jmp
outsb
out
les
push
xor
sbb
cmpsl
andl
repnz
push
mov
mov
arpl
cmpl
subl
ss
adc
pusha
cmp
xor
mov
inc
adc
inc
and
rorb
add
ljmp
mov
xchg
jns
or
sbb
cmp
jbe
pop
mov
inc
imul
sbb
add
jnp
je
add
dec
jae
cltd
pop
pop
fidivl
sub
mov
test
sbb
inc
in
push
sbb
sti
sbb
sbb
add
dec
je
add
cs
add
lret
inc
daa
cmp
or
mov
adc
sarb
push
dec
cltd
stc
push
sbb
mov
fsubl
or
or
mov
sbb
adc
add
fldl
or
rclb
push
movsl
mov
fimuls
add
les
jb
aam
sbb
sbbb
sbb
inc
inc
in
mov
fists
jl
dec
and
jle
or
lret
jns
pop
dec
cwtl
mov
add
imul
out
adc
icebp
rorb
sub
inc
xor
or
push
jae
mov
jae
es
es
and
lods
sbb
inc
add
mov
mov
jo
sub
flds
jl
clc
out
adc
adc
inc
rclb
out
and
pop
cmp
mov
ja
xor
mov
icebp
xchg
add
inc
call
and
sub
lahf
add
lea
add
adc
icebp
fidivrs
mov
dec
enter
or
adc
push
dec
sub
push
movsl
mov
es
jecxz
xchg
popa
pop
adc
push
test
inc
pop
sub
mov
mov
and
or
push
mov
icebp
xchg
aas
pushf
pusha
mov
inc
dec
xchg
dec
adcb
dec
add
jl
mov
pusha
sti
jle
xor
mov
aad
push
add
xchg
or
dec
xchg
sbb
daa
dec
loopne
push
cmp
ror
push
sub
sbb
loop
inc
cmp
shll
or
mov
pop
sbb
pop
cmpsb
nop
jbe
test
or
cmp
inc
fwait
adc
inc
arpl
leave
pop
pop
sbb
add
ds
and
sbb
dec
cmp
add
addl
mov
adc
pop
add
xchg
idivb
pop
adc
popf
adc
pop
and
cmp
inc
jb
cmpb
and
in
movsl
mov
imul
or
and
and
and
and
imul
jle
or
dec
or
add
js
xlat
inc
push
clc
push
dec
mov
test
popa
movb
sub
int3
xchg
mov
jge
pop
lods
add
fsubrs
mov
aad
dec
imul
jle
fs
mov
mov
adc
push
call
loopne
les
mov
icebp
dec
ret
jb
jge
hlt
into
lahf
fsubr
push
cmpsl
je
aaa
jle
fwait
push
dec
add
stc
cld
push
xchg
add
xor
sub
and
inc
popa
movsl
mov
clc
add
jo
repz
js
inc
adc
nop
sbb
dec
or
lcall
pop
fcoms
push
xchg
test
mov
imul
loopne
adc
call
inc
jle
push
jmp
insl
test
dec
scas
cmp
add
mov
adc
aas
fisttps
inc
inc
jl
pop
push
dec
push
or
in
inc
je
inc
sub
test
aad
into
test
leave
pusha
sbbl
mov
call
sbb
ds
add
inc
sbb
add
or
shrl
les
andl
mov
push
rolb
roll
shl
rolb
aam
adc
dec
jecxz
leave
clc
cmpb
cli
add
lcall
push
addr16
and
gs
das
sbb
mov
add
adc
add
push
mov
cmp
sub
cmp
int3
pop
cmc
sub
addr16
ja
loopne
push
mov
lock
push
adc
jns
jb
sub
mov
cmp
pop
cltd
mov
dec
or
dec
fimuls
out
xor
mov
push
iret
jae
insb
mov
push
dec
loopne
movsb
stos
js
jb
mov
rcrb
sbbl
sbb
sub
leave
add
dec
ficoml
mov
imul
and
rcl
add
xor
add
enter
mov
sub
pop
cld
dec
and
fadds
lods
inc
mov
add
mov
lods
and
outsl
or
mov
inc
push
and
ss
lcall
orb
in
out
push
ret
mov
inc
mov
test
pop
mov
xlat
xor
mov
fdivrl
add
mov
rcrl
mov
cmp
jle
addr16
xchg
cmpsb
mov
loopne
or
insb
jge
js
les
int3
jno
jbe
mov
sub
orb
push
out
jo
jo
mov
pop
mov
push
push
push
sbb
fiaddl
jecxz
push
cmpl
sub
push
push
sbb
incl
jne
inc
cmp
add
ljmp
es
iret
add
dec
mov
or
mov
inc
jecxz
clc
mov
inc
dec
xchg
jo
and
pop
enter
sub
movsb
and
jp
xchg
fildl
addr16
scas
mov
mov
sbb
cmp
cwtl
inc
push
jnp
movsb
leave
out
imul
adc
movsl
int3
mov
insl
cmpsl
test
push
add
sub
and
push
rolb
shlb
mov
adc
inc
add
rorl
add
fisttps
add
push
add
sub
insl
sub
cltd
sbb
push
dec
mov
jb
jmp
pop
xor
fcomps
call
jnp
sub
in
les
sub
mov
xchg
xor
jae
mov
xchg
aam
cmpsl
push
xchg
clc
cmp
ljmp
scas
or
and
dec
dec
xchg
mov
jns
xor
push
mov
push
data16
push
adc
add
adc
orps
in
adc
stos
cmp
mov
pop
les
leave
mov
cmp
add
call
cwtl
out
pop
push
xchg
xchg
jb
add
xchg
jb
add
and
je
push
sbb
fsts
xchg
mov
push
mov
push
xchg
mov
mov
popa
loopne
pop
and
mov
inc
sub
ds
mov
cmp
mov
mov
xchg
adc
adc
test
imul
test
add
add
daa
sub
xchg
jno
xor
dec
cld
icebp
adc
push
addr16
cli
lcall
jmp
pushw
push
push
xchg
fdivl
in
jecxz
scas
jge
adc
add
inc
cmp
popa
jb
cmc
push
adc
sub
cmp
inc
jne
mov
xchg
adc
or
pop
or
sbb
jge
mov
mov
add
adcl
push
fiaddl
inc
xorb
ret
sbb
cs
pop
shl
or
les
loope
pushf
mov
mov
movsb
mov
jo
add
xchg
movsb
cmp
and
mov
lahf
pusha
push
jne
pop
mov
adc
out
in
mov
dec
ret
adc
and
in
test
add
push
xor
xchg
notb
xchg
add
les
leave
lods
cld
mov
mov
sbbl
aas
sbb
popf
pop
dec
add
lock
fwait
mov
cmp
dec
mov
ja
lret
push
test
cmp
or
testb
dec
sbb
push
xchg
hlt
sub
xchg
test
das
ja
mov
dec
and
ja
decl
cmpl
inc
jbe
inc
xor
inc
sbb
mov
mov
lea
test
adc
dec
addl
add
sub
add
mov
adc
and
xor
or
add
add
push
pop
ljmp
sbb
rolb
ret
movl
subl
or
orl
mov
push
out
xor
or
call
xchg
les
in
mov
adc
ljmp
lea
pop
sub
mov
inc
push
jmp
jle
xor
xchg
cli
add
mov
addl
pop
pop
dec
or
jmp
ret
cltd
mov
xchg
xchg
push
xor
xor
clts
xchg
les
fistps
xor
xor
adc
or
fs
sub
xchg
jmp
adc
sbb
push
and
push
mov
into
jae
enter
push
pop
push
or
inc
es
mov
adc
or
push
cmp
movsb
fiaddl
add
outsl
fstpt
and
lret
and
in
lea
cmp
push
mov
aad
sbb
inc
cmp
mov
adc
lods
xorb
xor
ss
ret
imul
jl
add
mov
or
sbb
insl
dec
loopne
test
leave
mov
mov
dec
jnp
inc
pop
dec
das
aam
scas
add
adc
ss
push
mov
in
mov
mov
dec
cs
stos
pop
jb
outsl
bound
dec
rolb
repz
push
ret
add
mov
pop
push
sub
sbb
pop
andl
and
loopne
or
andb
sbb
jg
iret
pop
inc
cmp
dec
mov
cmp
mov
xchg
mov
push
fcoms
push
dec
sbb
xlat
adc
test
dec
stos
adc
iret
loopne
into
fwait
or
mov
jnp
jle
ss
add
adc
mov
push
fmuls
je
sub
dec
mov
in
insl
push
mov
ret
push
cmp
xor
dec
sti
xchg
jbe
and
or
rcrl
and
dec
inc
bswap
xchg
or
jmp
imul
int
je
push
ret
fwait
xchg
pop
mov
movsb
sbb
xchg
adc
xor
sub
and
cmpsb
lds
sbb
cmp
fidivrl
xchg
cmp
inc
push
push
adc
adc
and
push
sbb
fsts
test
ja
cmpl
xchg
or
and
xor
sarb
add
dec
es
push
sbb
rcll
bound
lds
scas
mov
and
mov
jb
or
and
adc
adc
mov
sbb
add
adc
dec
mov
jle
and
sub
inc
std
ss
dec
aam
and
jo
and
dec
in
xor
adc
mov
add
lret
in
loopne
in
in
es
stc
sbb
add
add
add
addr16
hlt
adc
mov
and
ja
sub
aad
call
add
outsb
mov
cmp
les
fcoml
pop
cmc
pop
mov
mov
lods
xchg
adc
or
mov
mov
and
jmp
or
sbb
je
movl
dec
xor
pop
les
add
add
cmp
pop
or
mov
or
xchg
loopne
push
or
adc
repz
aaa
mov
dec
xchg
cmp
inc
cwtl
mov
jle
or
or
mov
lahf
dec
push
leave
jne
sub
jnp
add
push
cmp
test
pop
add
ret
xchg
movsb
shll
ret
mov
fistps
cmp
jg
push
cld
cli
cmpsb
adc
add
jecxz
jo
inc
xor
shll
lahf
ret
in
pop
dec
mov
das
or
aad
aaa
pop
jl
and
sub
cmp
jg
sbb
sbb
adc
and
gs
adc
sbb
inc
imul
pop
jge
divl
add
fists
or
aam
add
inc
mov
adc
lea
push
jg
push
sbb
mov
aaa
and
sub
les
movsl
ss
loopne
addr16
mov
lods
add
cs
mov
mov
sbb
aas
jne
mov
or
jns
repz
push
xor
int3
cmp
and
push
sbb
and
enter
into
push
into
fistpll
lcall
sbb
push
sub
ret
je
sub
or
sub
sbb
add
push
dec
adc
movl
insl
adc
mov
jns
and
rorb
fwait
loop
aam
xchg
inc
xchg
or
cmp
jl
add
jl
filds
shl
add
mov
enter
jl
mov
adc
push
sbb
sbb
mov
sbb
xorb
or
mov
pop
jmp
cmp
cmpsb
pop
outsl
dec
and
out
add
adc
jne
push
inc
js
inc
dec
pop
lret
xchg
cmp
addr16
sbb
jecxz
into
mov
push
icebp
test
repz
mov
pushf
mov
or
push
or
or
lock
repnz
jae
sbb
outsl
pop
lock
nop
push
in
add
add
xchg
xchg
or
or
add
adc
add
and
sbb
loopne
inc
pop
cs
andl
jb
lock
sbb
xor
mov
data16
jb
mov
sbb
mov
pushf
adc
sahf
or
dec
pop
inc
in
mov
lret
cmpsl
lcall
fwait
xchg
and
or
ret
push
adc
or
sarb
fs
inc
push
stc
or
sbb
jle
gs
in
dec
dec
lea
dec
jmp
mov
adc
mov
mov
mov
hlt
fists
lahf
or
in
sbb
in
test
popf
pop
test
mov
outsb
sbb
pushl
sbb
rorl
add
rorl
or
dec
fadds
dec
sbb
test
sbb
cli
xchg
add
adc
xlat
sub
cs
and
clc
cs
mov
xor
shrl
lods
jo
inc
jl
sbb
xor
inc
dec
ficoml
jl
cmpl
sbb
add
mov
aam
add
sbb
cmp
das
les
jle
mov
lea
lods
sbb
inc
lods
scas
add
cmp
cwtl
mov
scas
push
fbstp
fidivl
pop
pop
xchg
push
clc
test
mov
xor
stos
xor
and
cmp
orb
sub
jmp
sbb
lods
mov
outsl
cwtl
push
sbb
xchg
sahf
jge
mov
loop
jae
jge
push
iret
cmpl
cmp
or
or
pop
ljmp
mov
xor
cmp
aas
jo
sbbb
imul
push
orb
mov
push
mov
sbb
jae
repnz
jne
inc
inc
push
adc
xor
or
inc
add
adc
rorl
add
adc
push
add
ljmp
sbb
sub
push
inc
repnz
inc
fcmovne
dec
or
sub
addr16
inc
push
or
sbb
mov
sbb
inc
and
mov
jbe
inc
sbb
push
add
shrb
xchg
rolb
adc
xor
mov
cwtl
xor
cmp
sub
push
inc
call
subl
push
idiv
lea
push
xchg
push
mov
xor
sub
and
sub
mov
xor
xor
fwait
add
or
add
sub
es
jo
dec
dec
add
sbb
xor
sub
dec
orb
fisttps
add
dec
push
mov
aaa
sub
add
dec
add
sub
data16
outsb
sub
mov
xor
pusha
lcall
les
rcrl
add
lods
test
mov
xor
jl
shrl
pop
jne
mov
mov
imul
hlt
pusha
jnp
ret
push
cld
or
scas
dec
fcmovb
or
enter
pushl
sub
mov
inc
or
rorb
cmp
inc
and
loopne
add
mov
or
sbb
insb
or
adc
daa
or
inc
or
inc
sbb
push
cwtl
pop
push
inc
jmp
mov
scas
adc
cltd
pop
xor
add
outsl
add
adc
subl
xchg
dec
lock
push
imul
lock
adc
xchg
mov
clc
mov
pop
stos
and
push
xor
mov
cld
jo
xor
xchg
cmp
adc
xorb
xlat
neg
push
xor
push
sbb
inc
pop
adc
inc
enter
cmp
xor
and
in
cmp
sbb
push
jo
mov
cmp
outsb
push
or
inc
xor
inc
and
push
xchg
negl
mov
inc
jbe
xor
lret
sbb
inc
cmp
push
sbb
cmp
lods
jnp
test
mov
xchg
jo
or
clc
add
imul
jp
jne
jmp
lahf
mov
cmp
arpl
or
jbe
fidivs
cld
dec
sbb
xor
add
jb
pop
daa
pop
push
ficoml
aad
add
test
cwtl
call
or
jge
sub
push
xchg
mov
orl
mov
jecxz
xchg
movsl
mov
mov
adc
imull
and
lcall
popf
jle
push
fadds
push
push
fwait
lcall
mov
mov
and
cmp
mov
mov
push
cwtl
push
or
sbb
jo
mov
scas
sub
mov
lock
popa
insl
mov
dec
or
push
js
mov
dec
lcall
das
pop
cmp
blci
mov
fmull
fildll
push
inc
sub
inc
adc
mov
pusha
adc
jne
stos
adc
pop
mov
push
pusha
push
movsl
sahf
push
cld
inc
dec
xor
xor
push
cmp
adc
jae
push
push
inc
pop
loop
mov
mov
mov
dec
cmp
cwtl
hlt
add
sub
add
adc
push
and
push
fwait
lods
fimuls
or
enter
je
dec
ss
inc
pop
adc
pop
add
mov
push
or
mov
inc
jb
mov
cmp
int3
jb
adcl
xorb
add
inc
in
add
add
adc
sbb
xchg
ljmp
rorb
stos
hlt
mov
xor
mov
ds
push
push
inc
xorb
inc
inc
imull
ds
add
std
xor
jns
imulb
jb
cmp
fisttps
jge
arpl
dec
and
sbb
cli
add
movsl
shll
or
adc
dec
cmp
sub
push
and
adc
icebp
dec
xchg
adc
adc
mov
inc
jmp
rolb
int3
div
mov
mov
mov
cmp
out
aaa
out
inc
fcomps
or
lea
jne
adc
cmp
enter
push
mov
jo
movb
push
call
roll
mov
lock
lcall
and
jo
mov
push
lahf
lret
mov
lock
and
and
sub
cmp
jbe
jno
sub
cmpb
out
and
inc
or
cwtl
sub
add
xor
and
and
orb
push
test
out
push
lea
inc
pop
lea
cmp
push
sub
ljmp
dec
hlt
pusha
sub
add
add
mov
jmp
cmp
imul
pop
lcall
push
xchg
pop
jae
je
mov
mov
sbb
fsubl
adc
repz
push
cmp
sub
push
push
or
int
adc
and
push
and
mov
loope
and
lret
test
sbb
inc
or
push
aaa
cmp
test
push
push
mov
jge
sbb
pop
pop
test
mov
mov
fistl
addb
jg
or
xchg
sub
and
rcll
andl
lods
xor
jmp
leave
add
jnp
imul
sub
sbb
jne
inc
adc
push
cmp
mov
orl
test
ds
cmp
data16
sub
push
inc
fadds
mov
lock
aam
pop
je
and
jns
add
cmp
lcall
inc
rcl
mov
int
sub
sbb
jecxz
lret
ret
insl
or
inc
cwtl
jecxz
iret
push
cwtl
nop
out
hlt
add
add
addr16
jns
or
jb
mov
add
jb
xor
or
add
scas
hlt
add
lock
in
sbb
add
movsb
dec
add
shl
and
inc
xchg
push
and
cmp
icebp
clc
mov
xchg
xchg
add
mov
push
shlb
inc
addl
jp
inc
lret
mov
adc
push
mov
cmpb
add
mov
xor
cltd
out
sbb
cmp
mov
movsb
das
aas
push
mov
jle
dec
adc
lock
test
mov
imul
inc
sbb
push
inc
xchg
mov
dec
loop
bound
das
sbb
xchg
test
or
cli
push
or
mov
lods
xor
xor
movmskps
jg
adc
rcll
jmp
sbb
inc
adcl
movhps
push
inc
jb
test
mov
stos
in
jb
pop
sbb
cmp
jno
rorb
xchg
cli
dec
and
out
stos
mov
or
bound
dec
inc
out
sarb
mov
addr16
mov
fsubs
lahf
adc
mov
inc
hlt
mov
xchg
sbb
stos
enter
fisttps
leave
push
filds
call
pushf
xchg
iret
mov
aas
adc
xchg
xchg
je
or
mov
dec
adc
sar
adc
cmpsb
add
jb
aaa
fldenv
pop
test
call
lock
mov
rorb
movsb
inc
mov
lcall
clc
inc
ret
insl
sahf
sbb
xor
add
int
sbb
push
dec
jl
jb
insb
popf
sbb
and
rcll
sbb
scas
add
push
subl
or
and
sub
fsubrs
popa
or
rcll
in
jnp
sub
push
scas
mov
mov
sub
inc
or
sbb
lret
iret
add
and
sub
xor
sti
sbb
and
loopne
fcoms
test
cmpsb
faddl
test
push
jmp
and
cltd
dec
sbb
add
aas
jo
stos
push
xor
jo
aas
es
xchg
push
mov
inc
mov
jae
mov
repnz
add
adc
or
jle
imul
mov
cld
cmp
jge
lods
sbbb
les
inc
adc
dec
in
fistl
mov
cld
jl
adc
lret
push
or
scas
pop
nop
dec
and
inc
leave
lret
ret
or
sbbb
fdivrs
stc
insb
mov
mov
test
lea
mov
cmp
rcll
xlat
mov
push
test
add
or
mov
ret
xchg
and
notb
nop
rolb
int3
enter
rolb
aaa
es
or
xor
rorl
cltd
adc
inc
mov
mov
add
or
push
add
cvttps2pi
in
nop
cld
add
mov
les
and
xor
push
fidivl
xchg
sarb
test
push
jle
cwtl
clc
stos
xchg
dec
cld
cld
jge
mov
addl
incl
xor
jbe
inc
dec
adc
clc
inc
cmp
jl
jae
fmuls
xchg
out
dec
shlb
add
daa
pop
push
mov
sbb
cwtl
lock
loope
or
add
insb
mov
or
dec
push
aam
loopne
test
idivb
mov
call
or
pusha
sub
loop
rclb
pop
fiaddl
mov
push
adc
cvttps2pi
jle
and
call
add
sub
insl
call
mov
sub
ds
pusha
in
push
adc
sbb
mov
daa
add
adc
dec
or
jmp
adc
ficoms
and
fsubs
aam
push
jle
mov
fadds
out
jge
data16
mov
call
fmuls
inc
jge
jge
movzbl
add
inc
inc
push
jl
inc
dec
jl
add
sahf
mov
pushf
shrb
jge
mov
aam
ret
shlb
add
and
outsb
add
jb
cmp
add
jns
js
lods
int3
inc
or
lock
xor
xlat
outsb
mov
lds
stos
and
pop
ja
and
xchg
jo
ret
xchg
mov
rol
sarb
leave
xor
pusha
adc
sets
xor
mov
mov
adc
nop
outsl
sbb
jne,pn
push
sub
cmp
call
inc
test
cmp
add
adc
mov
sbb
daa
insb
adc
inc
inc
adc
sar
push
cmp
add
inc
push
push
jecxz
ret
cwtl
sbb
clc
jg
jg
push
xchg
out
daa
lock
in
xchg
inc
xlat
mov
sub
sbb
and
loopne
pop
cmp
jae
inc
fidivs
cmp
jp
or
testb
inc
pop
push
out
popa
jb
xor
jne
xchg
shl
or
aam
cmpb
icebp
lea
push
lock
sub
aas
push
adc
into
sub
jecxz
mov
les
inc
clc
rorb
jo
test
jb
dec
adc
jb
jo
pop
xchg
add
orb
mov
xor
cmp
mov
cs
add
add
add
insb
test
rcrl
add
in
mov
jns
and
or
inc
xlat
or
or
push
adc
xor
data16
cmp
loop
test
mov
fsubl
add
mov
jge
xor
push
pop
loopne
and
sub
adc
lods
jmp
loop
jl
sbb
push
adc
js
push
jp
push
pop
push
addb
decl
sub
dec
dec
xchg
dec
pop
jmp
inc
adc
fcomps
push
fsubs
std
cltd
imul
mov
dec
adc
in
adc
dec
or
adc
push
cmp
xor
into
roll
dec
sub
cmp
ret
adc
push
push
aam
dec
or
or
clc
out
inc
das
roll
outsl
sbb
pushf
and
add
or
jb
xor
out
movsb
fmul
sarb
sub
dec
ret
cmp
mov
add
inc
call
dec
in
add
fbstp
push
xor
xor
repz
mov
sub
jne
fdivl
and
in
repz
add
mov
lock
ljmp
dec
jbe
enter
sbb
mov
fildll
ja
mov
sub
push
add
jbe
imull
or
and
mov
add
fwait
and
stos
daa
out
mov
xor
xor
cltd
or
enter
push
lds
adc
dec
js
fidivrs
orl
push
push
sarb
adc
loope
pop
mov
cmp
add
adc
xchg
es
push
test
cmpl
rcl
and
and
jmp
and
sbb
orl
ss
sbb
call
or
sub
js
push
mov
xor
popa
cmpsb
add
adc
loope
xchg
adc
inc
push
movsl
inc
aam
arpl
cmpsl
jle
popf
fs
push
inc
inc
cmp
or
test
mov
jmp
rcrb
push
lret
nop
fadd
lcall
xor
rolb
or
pop
repz
pushf
mov
sbb
sbb
mov
lcall
and
push
ficomps
outsb
pushf
sub
mov
mov
dec
or
and
jb
std
inc
cmp
jl
ret
and
or
mov
movsb
scas
xor
push
dec
inc
insb
and
in
fstps
mov
sbb
push
arpl
add
ficompl
lods
cmp
sub
fmull
fmuls
sub
jno
clc
or
sbb
ss
or
ret
inc
iret
add
lahf
cmpsb
les
and
or
imul
cmp
andb
push
push
push
mov
es
mov
andb
xor
push
nop
push
aad
loopne
sub
dec
add
cmp
sbb
xchg
jge
clc
roll
inc
or
dec
in
mov
mov
jo
and
inc
pop
call
xor
pop
inc
es
in
adc
add
xor
outsb
aaa
jge
andb
mov
mov
daa
test
call
inc
shll
sti
jg
insl
inc
dec
int
inc
ret
push
sub
adc
xor
into
clc
and
add
sbb
cmp
stos
fwait
outsl
loopne
mov
mov
enter
inc
mov
inc
jmp
adc
jge
mov
rcr
sub
sub
inc
loopne,pn
fs
inc
fsubs
xchg
aam
dec
inc
xchg
int3
bound
pop
dec
das
test
dec
enter
xchg
addr16
rol
loopne
dec
sub
mov
aaa
test
movsb
jnp
sub
push
push
xchg
dec
in
fadds
jno
orb
jno
inc
ret
inc
movsb
mov
sbb
insl
inc
call
pop
cwtl
push
leave
pop
mov
xchg
push
add
xchg
dec
insb
adc
and
shrb
fimuls
push
test
sbb
loopne
jns
jo
xor
xchg
and
bound
dec
jae
out
inc
push
cmp
sub
call
sarl
dec
cmp
sub
mov
subb
mov
das
jns
loop
fbstp
xlat
sahf
rcrl
fdivs
xor
fisubl
mov
test
adc
add
xchg
mov
jg
add
pop
or
pop
jno
add
adc
push
and
xor
hlt
jecxz
cmp
pop
sub
add
out
sub
loope
xor
ljmp
jle
xor
dec
xor
cmp
cmp
xlat
std
mov
sub
add
pop
test
xchg
mov
sub
dec
test
push
mov
movl
loopne
mov
es
loope
push
aam
adc
cmp
movsb
sub
inc
mov
test
inc
and
sti
add
je
adc
dec
pushf
cs
jno
push
and
push
inc
rcl
mov
imul
sub
add
out
mov
int
out
fiaddl
or
adc
test
inc
push
enter
push
pop
jmp
es
pop
dec
adc
lds
xlat
rorl
movb
add
add
adc
mov
sbb
mov
xchg
loope
push
inc
adc
and
or
cld
xchg
rcrb
mov
push
nop
stos
sbb
movsbl
xchg
bound
add
sbb
sahf
sbb
pop
jl
lea
mov
dec
inc
ja
mov
push
sbb
sub
cmpsb
add
clc
jne
testb
aaa
and
mov
add
adc
mov
mov
test
mov
inc
jl
test
cmp
sub
ds
xor
sar
or
ret
adc
mov
nop
clc
push
and
nop
xchg
inc
and
cmp
jne
in
sub
and
inc
dec
adc
adc
or
push
scas
or
ljmp
syscall
jns
inc
mov
mov
ds
or
dec
adc
fstps
leave
lea
rorb
mov
cmpsb
xchg
mov
xchg
repz
sbb
pusha
out
decb
sub
push
sbb
dec
xor
xor
cmc
inc
or
jle
cmp
jle
adc
xor
push
mov
cmp
fdivp
fcmovne
adc
or
lock
mov
or
cmp
out
push
jae
adc
cmp
sub
cmpl
aaa
mov
jl
pushf
dec
pop
decl
and
add
out
and
inc
popa
scas
cwtl
push
cmp
xchg
sti
test
imull
cmp
int
sbb
pusha
or
cmp
lods
test
cmp
test
mov
add
sbb
mov
mov
insb
mov
inc
cli
inc
add
in
leave
mov
jge
neg
add
shrb
or
mov
push
add
insl
jb
pop
inc
push
aas
inc
or
mov
out
cmp
jg
lret
sub
pushl
sub
std
or
push
daa
jle
push
xor
ret
add
jns
int
loope
sbb
add
pop
sbb
cmpsl
mov
adc
adc
addb
sbb
sub
dec
sbb
rcrl
lret
jnp
inc
inc
shlb
dec
arpl
ja
cs
or
inc
andl
cli
sahf
adc
enter
mov
in
fdivr
faddl
mov
mov
cli
pop
inc
pop
pop
addr16
add
shlb
dec
adc
sub
test
sbb
lods
xorl
mov
cmpsb
jecxz
add
movsb
dec
pop
sbb
add
pop
mov
or
lahf
cmp
xchg
dec
test
js
jl
or
outsb
mov
jge
negl
sbb
movsb
sub
loope
xchg
mov
jae
popf
jle
jecxz
inc
add
xor
repz
dec
inc
mov
movsl
sbb
dec
xchg
and
adc
mov
into
jl
pop
sbb
inc
cmp
in
repnz
inc
or
fwait
aas
push
add
popa
or
loope
fisubrl
call
or
jnp
ret
enter
xor
dec
jg
loop
mov
add
iret
call
inc
fstl
sbbl
cmpw
lahf
pop
roll
icebp
mov
aad
add
xchg
dec
imul
roll
inc
pop
out
jae
in
je
xor
imul
jbe
xor
loopne
hlt
and
push
fcomps
in
iret
xchg
or
xlat
addb
dec
mov
imul
ret
loop
in
or
mov
les
js
inc
mov
adc
test
adc
lock
decl
jl
push
jmp
or
arpl
imul
pop
outsl
lcall
and
cwtl
clc
or
int3
icebp
pusha
loope
mov
xchg
or
sti
aaa
insb
push
fwait
les
mov
int
add
add
jl
sub
mov
aam
popf
sbb
dec
cmpsb
inc
cmpsl
add
inc
outsl
rorl
bound
repnz
repz
popa
stos
dec
cltd
dec
cmp
dec
add
add
outsb
push
adc
ljmp
mov
add
sub
mov
sub
push
jae
fdivr
cmpl
lea
sub
pop
xchg
rcl
lcall
xchg
insb
lea
xchg
jmp
cmp
xor
jno
sub
mov
ficomps
sti
add
push
jge
cmc
inc
xchg
xor
incl
aad
lcall
add
xchg
add
aam
nop
add
mov
popf
add
adcb
adc
sti
es
mov
mov
add
or
cmp
xchg
or
lret
jo
mov
adc
into
idivb
push
xor
pop
push
ret
rolb
pop
lea
adc
adc
and
into
arpl
nop
or
mov
nop
mov
xchg
mov
add
pusha
add
outsl
shlb
addr16
pusha
sbbb
mov
loopne
shll
es
leave
or
add
sahf
or
pusha
fidivrs
fadds
fstps
push
bound
mov
jo
inc
add
sbb
add
sub
or
or
cmpsb
push
pop
shll
or
adc
push
push
fiadds
adc
and
cs
or
and
fidivrl
sub
and
sbb
fs
jmp
sub
sub
or
xor
mov
and
pop
or
pop
ficoms
adc
rcrb
sarb
lods
sub
hlt
mov
sti
adc
dec
icebp
inc
and
sub
jae
popf
cmp
and
cmp
cmp
jb
push
inc
fs
cs
jle
jns
outsl
pop
adc
fs
inc
cmp
add
or
fs
push
nop
in
loope
pusha
xor
dec
sub
rcrb
mov
shll
inc
mov
xchg
lret
xor
sbb
sub
push
adc
mov
push
sub
push
xchg
lcall
pusha
and
sub
insb
cmp
mov
adc
mov
cmpsl
pop
leave
fsubl
pop
test
inc
hlt
pushf
call
pop
sub
push
mov
pushf
jmp
and
iret
sbb
push
cmc
xchg
or
inc
pop
dec
loope
sbb
incl
js
mov
xor
jmp
mov
sbb
xchg
mov
and
out
push
adc
pop
pop
mov
outsl
push
sbbl
loop
out
sub
iret
jl
loope
jb
mov
movb
test
dec
cmp
call
xor
inc
ret
pusha
mov
movsl
das
sub
fs
xchg
loope
and
sub
sar
or
add
mov
or
mov
adc
call
cmc
mov
nop
sub
pop
rolb
push
or
cmpsb
mov
add
inc
stc
lea
or
xlat
inc
pushf
cmp
cmp
shl
inc
pop
xor
sub
decl
bound
push
push
movsbl
fsubr
jmp
lea
xor
cld
and
dec
call
inc
loopne
fsubs
into
push
jmp
test
mov
loop
push
test
lods
lods
ret
sub
int3
mov
sahf
ud0
or
loopne
adc
jecxz
inc
loopne
cmpb
add
jns
jge
clc
aaa
adc
jne
or
or
or
or
insb
fdivl
fisubl
pop
add
sbb
mov
mov
pusha
xchg
faddl
pusha
jno
jo
xlat
sahf
add
push
inc
push
dec
or
enter
loop
dec
scas
or
cmc
test
adc
cmp
adcb
sbb
push
cmpsl
cmpsb
test
push
shrl
ss
cmpsl
push
in
xlat
test
and
dec
aad
add
pop
pop
decl
xchg
mov
push
hlt
sahf
xchg
dec
fldl
sbb
les
incb
idiv
or
inc
pop
push
pusha
mov
add
mov
sbbb
xchg
pop
sahf
test
jne
sti
push
push
adc
xor
loop
inc
dec
fxch
cmp
jle
mov
push
arpl
aam
lock
out
mov
in
sub
pop
jg
add
and
add
jne
test
fsubl
sbb
ret
mov
cwtl
add
sub
inc
mov
push
xchg
sub
sub
adc
outsb
mov
push
lds
cs
arpl
in
mov
adc
pop
mov
inc
sub
in
mov
and
sub
mov
cmp
mov
stos
adc
xor
stc
pop
and
gs
mov
or
push
lea
jne
stos
pop
and
ret
sub
sbb
sub
jns
and
adc
adc
fcmovb
dec
adc
push
test
lret
mov
outsl
jecxz
repz
push
xchg
xchg
sub
imul
xchg
mov
repnz
push
popa
sbb
mov
sub
rclb
add
jge
jae
dec
ss
jge
or
add
inc
jo
je
mov
icebp
jge
inc
and
inc
sub
dec
and
cmpsb
xor
mov
ret
add
sbb
pop
add
add
cs
or
les
add
jb
inc
arpl
adc
push
mov
cs
sbb
imul
jbe
push
xchg
sub
pop
scas
inc
push
sbb
or
mov
sub
mov
stos
cmpsl
add
leave
jmp
inc
jmp
mov
add
mov
adc
insb
cmp
lret
jp
mov
or
repz
mov
jl
mov
loop
pop
lahf
inc
cld
icebp
jl
hlt
mov
mov
mov
movsl
and
cld
pop
push
inc
inc
rolb
adc
and
incl
pop
sbbl
cli
mov
psubsw
pop
xor
inc
fcomps
adc
fsubl
addl
xor
jp
fwait
pop
lea
pop
cmp
lods
sub
add
aad
das
fidivrl
test
push
xor
pop
or
sti
adc
inc
les
loope
lods
jno
test
cs
and
sbb
xchg
sahf
out
pop
movsb
hlt
out
movl
jno
iret
or
cmp
jl
dec
ret
jae
cltd
add
out
lret
aaa
fistl
xor
jl
ret
je
mov
testl
addr16
pushf
js
dec
imul
xchg
in
test
cmp
jnp
jnp
inc
loop
out
mov
gs
cmp
test
cli
push
lock
cmp
hlt
jo
push
adc
daa
push
lock
insl
push
incb
adc
clc
mov
push
sarb
into
jmp
outsb
sbb
mov
lcall
call
stc
addb
incb
addb
popa
xchg
cmc
mov
cmpb
ja
dec
dec
jbe
rorl
out
rcrb
dec
cmpb
sbb
adc
sub
mov
repz
enter
cmp
dec
mov
inc
inc
sti
push
rclb
push
in
inc
movsb
add
add
pop
sub
add
pusha
inc
jmp
dec
pop
cmp
push
aas
or
adc
xor
scas
or
iret
imul
out
push
stos
mov
pop
lret
ret
push
mov
jb
mov
fs
sub
push
movsl
sbb
in
jne
mov
shlb
pop
jmp
cld
jecxz
inc
or
call
call
aaa
shl
inc
xchg
mov
adc
roll
imul
and
inc
popa
loopne
push
dec
gs
aas
fisubs
loopne
ret
in
add
test
fdivs
or
clc
mov
nop
pop
clc
mov
sbb
imul
cmp
movsl
xchg
add
dec
add
add
enter
outsb
sbb
xchg
or
sbb
rorb
shr
cld
or
push
out
add
cltd
push
ds
sbbl
rorl
in
cmp
pop
jae
jp
xchg
sbb
push
sub
jae
jae
frstor
mov
into
mov
mov
int
in
addr16
xlat
leave
mov
cmc
pop
mov
aaa
mov
int
cmp
xor
sub
or
aaa
aaa
add
leave
clc
pop
enter
aas
fwait
fwait
fwait
in
and
cmp
shrl
push
andl
adc
std
mov
sub
int
outsb
mov
sub
mov
sahf
pop
xor
add
out
mov
lods
inc
push
xchg
and
out
add
pushf
fcmovnb
insl
dec
or
iret
orb
out
out
cmp
pop
and
or
fstps
add
inc
lea
ljmp
xchg
in
dec
mov
fcmovne
xor
nop
pop
sarb
out
fs
inc
sub
imul
xor
outsb
insb
lcall
js
push
or
out
testb
out
stos
push
mov
cltd
adc
out
out
inc
aaa
mov
ja
lock
je
out
out
roll
xorl
pop
adc
iret
out
int3
popf
add
scas
sub
out
mov
mov
or
push
stc
jmp
idivb
outsb
outsb
outsb
mov
push
and
cmpsl
xor
outsb
loopne
lds
loope
jno
arpl
xor
sub
mov
idivb
int
and
cmp
and
iret
pop
fidivrl
xor
imul
loopne
stos
shrb
shlb
fdivrl
pop
inc
adcb
and
jae
sti
fdiv
jecxz
adc
xor
int3
int
out
sub
test
add
add
out
dec
aaa
stos
call
fsubrl
dec
lods
or
or
out
mov
sbb
movsb
xchg
mov
faddl
daa
xor
rol
sub
arpl
jle
clc
fcoml
fsubrl
mov
mov
sbb
mov
mov
lret
sbb
sbb
out
xor
pop
rol
or
icebp
fwait
fwait
fwait
fwait
outsb
popa
push
aad
push
mov
in
ja
outsb
lahf
mov
or
dec
cmp
aaa
sub
out
lret
ss
outsb
outsb
outsb
push
movsb
aas
inc
repnz
int3
outsb
outsb
outsb
outsb
outsb
mov
loope
inc
insl
cmc
push
dec
int3
mov
or
test
idivb
outsl
dec
adc
adc
in
out
out
mov
in
sbb
dec
xorl
sbb
stos
jne
arpl
out
out
add
pop
dec
inc
pushf
and
mov
fcmovne
out
ret
mov
mov
dec
pusha
pop
push
inc
adc
insb
lahf
fwait
sub
icebp
jecxz
ret
mov
fcomi
dec
push
cmp
pop
mov
fmul
mov
outsb
outsb
clc
cwtl
jbe
pop
push
aas
adc
stc
popa
fcompl
mov
mov
xchg
sbb
inc
push
inc
xor
out
loope
jb
roll
mov
std
insb
cmp
nop
lret
lahf
ror
lods
add
stc
popw
adc
push
pop
add
mov
ficompl
lds
push
daa
pop
inc
xor
add
fcomp
shll
jl
out
out
popa
leave
jl
sbb
or
push
shl
out
mov
push
push
mov
sub
imul
out
push
test
mov
test
bound
adc
and
aaa
cmpsb
into
shll
insb
pop
jae
push
cli
or
xor
out
ja
ljmp
test
in
dec
sbb
sub
aaa
jnp
in
xchg
in
faddl
outsb
outsb
jb
or
adc
mov
mov
movsbl
dec
pop
dec
sbb
insl
ror
sub
fildll
cli
clc
in
cwtl
iret
testb
lret
sub
sub
out
add
mov
stos
aam
mov
out
cmc
jb
push
fadds
push
pop
adc
cmc
out
out
jne
mov
scas
mov
pop
dec
xchg
out
aas
xor
mov
decb
out
aad
jnp
push
iret
addr16
fwait
xchg
adc
xlat
ja
xor
lcall
push
pop
and
dec
in
out
cmp
rcr
int
sub
lret
jnp
sbb
push
cmp
sub
xchg
dec
int3
arpl
dec
and
push
out
add
mov
jle
inc
jnp
jb
cmp
lods
adc
push
repz
mov
push
sub
mov
jo
jb
dec
mulb
xchg
out
xchg
push
mov
push
xchg
or
and
mov
mov
mov
icebp
outsb
or
push
or
push
jg
data16
outsb
addr16
fwait
in
mov
dec
pop
xlat
mov
mov
out
cs
and
imul
je
and
inc
shlb
fsubl
pop
push
inc
cmpsb
push
arpl
fdivr
out
loope
cld
int
lcall
scas
in
das
sbb
cmp
lahf
incb
je
pop
movb
idivl
loop
leave
mov
xchg
jae
jae
or
adc
dec
inc
xor
gs
jae
shrl
ljmp
loope
pusha
sub
dec
or
stos
add
jae
mov
add
mov
jae
jle
cmc
out
repnz
jae
jae
push
and
xor
cmpsl
addl
jae
sub
jp
dec
fwait
lahf
int
sbb
test
inc
or
push
lcall
and
data16
sti
or
pusha
xor
addr16
into
xchg
push
int3
mov
push
jg
mov
or
or
in
dec
sbb
cltd
mov
outsb
outsb
xchg
lock
sbb
inc
aaa
sub
jge
outsb
outsb
aad
daa
xchg
out
xorb
inc
aaa
aaa
aaa
pop
mov
mov
add
aaa
aaa
aaa
mov
aas
mov
jmp
or
clc
fcoms
jnp
cmp
sub
sbb
mov
xchg
lcall
and
loop
out
out
xchg
add
dec
out
mov
lods
lahf
in
out
xchg
sbb
dec
cmp
outsl
fdivrl
cld
mov
push
jbe
cmp
fsts
or
movsl
inc
sub
mov
add
int
int
pop
sti
pusha
push
inc
test
icebp
mulb
inc
pushf
dec
pop
sub
iret
fdivrs
pop
cmpl
lret
mov
fwait
fwait
fwait
or
pop
movb
lods
adc
jno
outsb
outsb
outsb
outsb
pop
mov
mov
xchg
push
inc
pop
rcll
xor
lods
and
loope
sarl
mov
mov
jno
insb
cmp
fwait
lret
mov
out
enter
shlb
mov
jae
ror
pop
add
jmp
adc
jae
jecxz
daa
in
inc
xor
jae
jae
ret
and
popa
fidivrs
jae
dec
mov
or
pop
mov
jae
adc
cmp
jae
jae
out
xor
adc
sbb
je
jb
jae
pop
mov
in
pushf
add
mov
nop
sub
inc
push
lret
lea
push
adc
cmp
loope
jle
arpl
jle
sbb
xlat
enter
or
mov
fwait
fwait
fwait
cwtl
rsm
pop
dec
cmp
cld
insb
scas
dec
bound
push
js
aaa
ja
xor
cltd
ret
jae
pop
dec
cmp
push
or
fisttps
fmull
push
mov
cs
push
lret
out
mov
mov
fxch
inc
jb
pop
iret
xchg
fildl
outsb
cs
lret
pop
dec
shlb
das
leave
jne
outsb
mov
xchg
pop
push
inc
push
mov
repz
out
loope
cld
int
lcall
mov
das
cmp
push
test
leave
mov
je
pop
shrb
push
adc
push
aaa
pop
mov
xchg
or
lods
dec
loope
aaa
aaa
inc
xor
jae
jmp
and
fstl
outsl
ljmp
fldcw
sbb
push
mov
and
les
mov
mov
out
repnz
mov
aaa
pop
rclb
aas
xor
insb
and
ret
shl
mov
fmuls
test
rolb
loopne
jge
addr16
inc
cmpsb
push
jbe
in
int
push
or
xchg
sbb
fisttpl
fistps
mov
or
mov
or
fisubrs
xchg
call
or
out
neg
jmp
mov
mov
push
iret
out
out
fldl
sub
aad
ds
stos
pop
push
cmpsb
add
cmpsb
mov
lods
aaa
decl
pop
fisubs
xchg
sbb
jle
aaa
shrl
ds
jbe
adc
fwait
fwait
idivb
push
fdiv
sbb
notb
lds
push
mov
add
xor
mov
scas
xchg
sub
mov
sbb
out
out
rcr
jmp
int
mov
mov
out
imul
cmp
daa
pop
popa
push
iret
addr16
cmpsl
adc
jl
aas
sub
add
sub
popf
loopne
loop
out
cmp
aas
iret
out
pop
ja
mov
add
repz
mov
enter
out
jns
iret
lahf
jnp
add
lea
iret
repz
adc
add
addr16
add
in
lds
mov
dec
cmp
push
cmpsb
push
push
jns
cmp
cmp
jge
mov
add
dec
jg
iret
repz
mov
lods
add
cmc
iret
out
cmp
setae
xchg
xor
jno
add
shrb
ds
lahf
out
or
add
test
iret
repz
jb
and
aaa
mov
mov
jb
push
test
mov
ret
aaa
aaa
ds
or
or
ret
lods
fwait
jns
iret
lahf
ret
add
lahf
out
xrelease
sbb
add
push
stc
cmp
pop
dec
mov
popf
stc
cmp
icebp
roll
xor
sub
repz
roll
add
and
jns
imul
sahf
aas
mov
nop
add
jns
iret
add
xor
lahf
out
adc
add
in
rep
iret
repz
sti
sub
add
nop
leave
stc
repz
leave
sub
movsl
sbb
add
addr16
iret
out
in
decb
jge
repz
jns
nopl
add
mov
out
pop
xchg
and
push
addl
xchg
iret
out
cmp
pop
xor
jl
aas
pusha
add
insl
icebp
pop
vmwrite
test
dec
loopne
hlt
insb
cli
sbb
test
xchg
imul
cmc
pop
jl
add
or
pop
iret
int
cmp
fs
inc
fmull
int
clc
adc
rorl
fsubrl
or
xchg
arpl
mov
jae
incl
pop
cwtl
jns,pn
cwtl
mov
cli
sbb
sub
jmp
mov
test
xlat
ret
push
out
sbb
add
jo
movsl
ljmp
fwait
and
mov
mov
std
icebp
pop
inc
xchg
lahf
pop
iret
addr16
cmp
adcl
rcr
lret
and
loop
xchg
fnstenv
sub
xlat
out
add
mov
es
add
outsb
scas
addr16
xor
push
push
adc
jl
jg
fisttpl
cli
inc
adc
sub
cld
sub
js
in
pop
pop
in
dec
mov
daa
cmpsb
lret
xor
lcall
out
jmp
aad
xor
movsb
out
inc
shlb
popa
push
jle
sbb
pop
ds
add
add
lods
xor
lcall
int
lods
mov
mov
ljmp
inc
jge
or
mov
scas
les
push
ficompl
jecxz
xchg
das
or
loopne
sbb
mov
and
sar
jecxz
es
not
int3
and
jne
cmp
iret
sbb
cmp
aaa
sbb
iret
out
aad
mov
push
add
dec
jnp
and
jbe
mov
es
jle
dec
out
mov
and
cs
lock
jp
clc
daa
cmp
jl
sbb
sar
inc
gs
pop
idiv
lds
sub
imul
out
cmp
pop
popa
popa
cltd
pop
movsl
sbb
inc
insb
mov
push
cmp
push
sbb
lods
or
mov
jae
add
or
je
nop
hlt
mov
jae
sub
add
fs
loop
jae
sbb
jg
imul
cmc
iret
int
js
dec
push
pop
insb
sub
xchg
dec
mov
adc
divl
movsl
cmp
outsb
lock
insb
inc
popf
push
addr16
mov
mov
sbb
in
aaa
ficomps
call
repz
sub
add
mov
mov
call
das
sahf
dec
clc
fisubs
arpl
adc
sbb
push
push
cmpsb
fisubl
ret
out
out
call
outsl
into
inc
jbe
mov
mov
add
lahf
sbb
test
inc
daa
sbb
sub
cmp
fldl
hlt
dec
pop
aaa
aaa
aaa
aaa
inc
cltd
inc
jne
repnz
rcrl
mov
movsb
aam
mov
mov
aad
mov
mov
adc
cmp
mov
out
decb
and
pop
adcb
nop
popf
mov
fs
popf
test
mov
fwait
pop
pop
mov
or
mov
fdivrs
and
push
jmp
loope
push
into
fs
js
idiv
xchg
pop
inc
cmp
out
jbe
lret
pop
hlt
jmp
imul
jl
jge
iret
mov
add
scas
mov
inc
jg
pushf
cmpsl
jg
push
iret
int
int
movsl
or
inc
sarb
in
mov
xor
jmp
or
cwtl
pop
aaa
aaa
mov
loope
fwait
sbb
lcall
mov
aaa
clc
mov
add
add
fwait
fwait
fwait
popa
pop
cmc
mov
jecxz
popf
fwait
fwait
fwait
fwait
jp
in
add
cltd
cmp
in
sbb
lcall
fwait
outsb
das
int
ret
mov
push
push
and
pop
jnp
es
add
addr16
jae
popf
cwtl
add
outsl
pop
ret
fdiv
mov
cmp
mov
sbb
out
rclb
mov
jbe
int
shrl
jge
lahf
sub
jb
addb
or
fcmove
out
out
aaa
lret
jp
inc
inc
movsl
imul
and
adc
leave
ret
adc
ss
cmp
jne
xor
xor
jae
push
xor
insb
aam
adc
jae
loope
gs
fcmovnbe
fdivrl
xchg
jecxz
xchg
sbb
mov
fsubl
dec
shrl
sbb
arpl
add
std
dec
mov
jge
test
stos
dec
push
fdivrp
repz
pop
cmp
nop
jecxz
mov
mov
lret
sbb
addr16
enter
or
outsb
outsb
out
lcall
mov
out
das
icebp
out
incb
je
iret
out
out
xchg
test
lds
lock
es
mov
mov
arpl
decb
xchg
fstps
jae
mov
decb
sahf
push
outsl
xchg
int
in
dec
sti
pusha
push
dec
or
push
lock
jno
jmp
push
jmp
lock
pop
movsb
out
lods
mov
mov
inc
cld
jo
lahf
cmpsb
cmc
iret
js
and
cli
pushl
insb
je
dec
mov
notl
add
dec
jl
inc
mov
stos
imul
cmpsl
mov
dec
cs
out
in
shl
in
mov
add
mov
cs
nop
dec
mov
stos
pop
pusha
xchg
mov
int
jo
decb
aaa
inc
xor
test
dec
pushf
fwait
lea
pusha
int3
sub
jp
xchg
push
mov
cmp
add
jle
and
aaa
aaa
pop
cmp
jne
js,pn
shl
or
repz
push
out
das
bound
inc
inc
stos
sub
repnz
out
jae
sti
cmp
mov
pop
data16
inc
pop
sbb
jae
mov
test
mov
data16
push
out
out
in
push
in
jbe
lock
ja
or
jns
dec
jge
sub
aas
sub
pushf
xor
lock
add
ret
sti
push
mov
rclb
jbe
out
sbbb
inc
lcall
xlat
sbb
out
loope
int
mov
stc
fs
clc
gs
xchg
pop
pop
pop
lret
sahf
decb
fistl
insl
into
sti
in
fildll
adc
cmp
fsubrp
mov
test
sahf
lock
push
aaa
movsb
cmc
iret
iret
mov
pop
mov
mov
push
sbb
xrelease
lods
push
decb
mov
xchg
mov
mov
cmp
push
fwait
out
cmp
xor
aad
adc
int
xchg
out
mov
js
xchg
fistpl
cmpsb
testl
andb
test
ljmp
les
addr16
mov
idiv
inc
mov
push
shlb
add
lret
mov
jmp
or
push
sbb
inc
push
inc
cmp
stos
pushl
cld
or
rcr
sbb
xor
jp
xchg
movsb
mov
fisttpl
clc
push
ficoml
xor
dec
pop
push
fwait
test
out
or
jb
in
stos
mov
fwait
fwait
fwait
fwait
aam
lock
sub
inc
push
pusha
outsb
or
cmp
jl
cwtl
mov
icebp
jl
or
and
pop
push
xchg
mov
int3
testb
cs
int
sbb
sub
mov
add
adc
int
sbb
cmp
lcall
stos
out
cmp
or
add
xor
or
push
inc
movsb
mov
ljmp
cmp
and
ds
stos
xchg
pusha
and
mov
stos
or
xorb
sub
incb
add
stos
mov
pushf
stos
call
mov
scas
jae
inc
push
add
pop
movq
outsb
outsb
roll
repnz
movsb
insb
clc
aas
popa
jbe
out
idivb
pop
inc
bound
pop
cli
sbb
fldl
cmp
insl
fstl
inc
jno
aaa
push
jl
insl
into
cltd
or
out
rolb
arpl
jle
aaa
in
jmp
mov
cmp
pop
ficoms
sbb
or
mov
jge
cmpsb
sbb
insb
out
push
xchg
inc
mov
lock
bound
mov
hlt
adc
push
movsb
outsl
pop
or
in
addr16
outsl
jmp
leave
mov
cli
mov
in
aad
clc
adc
outsl
sahf
mov
add
fnstenv
sbb
dec
std
int
int
cwtl
xorl
pop
push
xchg
mov
outsl
fstl
or
adc
fdivrl
cmp
addr16
pusha
mov
mov
pop
pop
imul
dec
jns
arpl
negb
add
ljmp
push
js
fstl
dec
dec
shrb
sub
pop
add
aad
frstor
pop
hlt
pop
push
jns
sahf
mov
nop
addl
adc
imul
xor
xor
adc
xchg
cmc
test
dec
divl
aad
mov
lock
sub
mov
adcb
scas
mov
fldt
int
xchg
loopne
dec
test
insl
cmp
aaa
mov
jo
inc
es
xor
sub
add
stc
lret
xlat
mov
out
out
push
rorb
test
out
push
adc
fsubrl
pop
xchg
clc
insb
out
push
dec
pop
lock
push
mov
out
data16
xor
repnz
out
out
cld
pop
movl
jmp
out
push
dec
push
sarb
aaa
sti
mov
dec
je
mov
shll
jae
xchg
xchg
mov
loope
jae
jae
leave
loope
scas
dec
cld
daa
pop
aas
sub
inc
mov
fstpt
shrb
lock
ljmp
fldt
sbb
mov
sbb
fcomp
iret
out
add
add
xchg
sub
ja
andb
xchg
lahf
sub
mov
xchg
stos
and
cld
insb
outsb
outsb
jbe
es
sbb
xor
test
or
jnp
sti
call
pop
pusha
sub
push
mov
or
in
jae
add
and
test
cltd
pop
sti
add
scas
scas
cmp
ret
adc
or
jb
jo
mov
or
movsb
mov
adc
push
jae
jae
test
mov
or
pop
js
jae
jae
das
test
fs
jae
jae
pop
pop
xchg
and
insb
push
dec
mov
addr16
jnp
lods
push
imul
fnstcw
mov
cmp
adc
dec
shr
mov
inc
lahf
jbe
mov
subl
sbb
cmpsl
jmp
rcr
in
shl
mov
xor
pop
aam
pop
fmulp
addr16
sub
pop
xchg
jmp
xchg
std
mov
jno
inc
inc
pusha
shl
fbstp
sti
dec
divb
sbb
or
adc
sub
push
shlb
sti
jne
outsb
ds
aaa
mov
mov
hlt
lods
dec
cmpsl
jno
insb
outsb
jae
xchg
or
adc
mov
jle
outsl
add
jl
aaa
aaa
shlb
addr16
into
popf
and
inc
sbb
into
negb
xor
aaa
aaa
mov
or
pop
mov
mov
aaa
daa
pop
jno
dec
cmpsl
pop
in
jo
sahf
fwait
fwait
fwait
in
add
dec
xlat
sub
adc
pop
jle
enter
sbb
push
jae
pop
fdivrl
fistpll
mov
cmc
add
mov
push
outsl
push
ss
cwtl
nop
mov
mov
xor
test
pop
hlt
mov
out
mov
lds
cmc
mov
arpl
cmp
mov
sti
bound
mov
outsb
sbb
jg
test
jg
xchg
add
push
xchg
es
js
mov
imulb
stos
mov
mov
sbb
jl
and
lcall
andb
and
into
pop
rcl
fildll
lods
jmp
test
arpl
mov
jae
scas
push
dec
and
mov
adc
addr16
and
pop
mov
mov
mov
and
ljmp
cmp
sti
fadd
ret
and
pop
notb
xor
outsb
aaa
pop
pop
jecxz
in
test
cmpsl
mov
add
push
jl
rclb
je
aam
mov
mov
push
out
sub
fdiv
sahf
stc
into
push
xchg
jb
fcomip
mov
test
jl
je
adc
inc
fisubrl
cli
fdivrl
stc
and
aaa
call
outsb
jbe
subb
rorl
mov
xchg
push
push
jge
dec
in
adc
sbb
outsb
outsb
outsb
bound
cmpl
xchg
aam
outsb
outsb
outsb
xchg
jle
in
add
push
mov
nop
fists
ret
lret
repz
push
hlt
sahf
rolb
clc
mov
adc
outsb
outsb
jg
mov
push
mov
dec
sbb
outsb
outsb
outsb
outsb
xchg
in
cmpsb
push
sbb
int
adc
outsb
outsb
push
jg
sbb
mov
sub
fstps
testb
subb
flds
jae
inc
jecxz
pop
inc
pop
imul
mov
call
mov
es
int
int
mov
and
insb
xchg
test
push
mov
int
cli
jle
mov
pop
add
add
enter
mov
mov
mov
je
cmp
ret
out
insb
fildll
and
xor
in
out
sbb
mov
mov
pop
lcall
loope
movsb
dec
sbb
xchg
js
out
out
and
push
cmp
add
sahf
adc
mov
sub
aas
or
or
pop
fmull
jle
mov
jbe
or
js
aam
xor
xor
jae
cmp
pop
rolb
lcall
stc
insb
outsl
insl
stos
mov
aaa
aaa
aaa
aaa
mov
out
add
and
inc
or
mov
aaa
aaa
aaa
pushf
xchg
ljmp
inc
fsubrl
push
push
clc
mov
nop
xchg
jmp
inc
ror
xor
xchg
lret
push
cld
shlb
aam
cwtl
negb
jbe
mov
push
or
dec
jo
aas
shll
mov
movsl
or
shll
int
push
lock
sbb
mov
push
rcrb
dec
js
out
xor
mov
sub
lret
aas
fwait
fwait
lods
lret
into
stc
loop
test
mov
clc
push
loopne
rol
in
mov
push
or
cmp
jbe
mov
aaa
shll
inc
rcll
fnstcw
jno
daa
jge
cmp
testb
xchg
daa
in
sahf
pop
jae
jae
roll
push
pushf
clc
ret
ss
fstps
jbe
mov
outsb
mov
iret
das
sahf
outsb
mov
and
inc
mov
mov
outsb
and
in
mov
pop
in
mov
lock
mov
clc
mov
jl
mov
repnz
jle
jne
fcompl
or
fiaddl
in
cmpsb
mov
xabort
loop
sub
mov
ret
mov
pop
pop
dec
push
dec
test
push
loopne
mov
mov
push
stos
sbb
fistl
lock
adc
jbe
pop
outsb
aas
fwait
fwait
mov
jle
ret
xchg
loope
mov
jg
into
mov
sub
sbb
divb
mov
shlb
out
or
mov
jle
int
xchg
cmpsl
adc
iret
fs
fdivl
xor
imul
in
jae
int3
mov
dec
push
cwtl
fmul
mov
fwait
mov
aaa
pop
pop
push
fidivl
in
jmp
xchg
fwait
nop
mov
push
sub
loopne
push
cs
jl
aaa
aaa
fsubrl
cld
scas
stos
sbb
shrl
lods
fstpt
ljmp
cmp
aaa
mov
out
push
test
sbb
lret
jae
ret
sub
inc
mov
xor
pop
pop
loope
dec
inc
and
es
shll
aaa
aaa
xor
roll
aam
mov
or
ds
insl
jno
stos
jb
insb
mov
outsb
outsb
inc
in
lock
pop
jo
push
cld
imul
lods
loop
out
out
inc
or
sub
adc
out
mov
push
xchg
xchg
cmp
test
outsb
outsb
outsb
lahf
mov
addb
xchg
ss
and
outsb
outsb
outsb
cmp
repnz
fistpll
mov
or
cmp
mov
int
ficomps
push
fsubs
xchg
int
int
insb
ss
xchg
dec
cmp
mov
add
out
lahf
int
lret
test
xchg
inc
out
out
xchg
arpl
sbb
jbe
and
loop
out
out
lcall
fadd
in
sbb
mov
out
lock
cld
inc
sbb
outsl
sbbb
popa
mov
add
imul
je
je
mov
pop
repnz
pop
clc
mov
lods
jns
int
int
insb
cmpsl
pop
adc
xchg
mov
or
or
jl
mov
daa
mov
mov
jge
loope
cmp
pop
add
fcompl
jnp
mov
push
out
pop
shl
divb
pop
test
pushl
pushf
mull
aaa
sbb
repz
jp
push
in
dec
sbb
adc
fwait
fwait
rclb
mov
idivb
fwait
fwait
fwait
mov
lods
daa
xchg
enter
push
mov
jecxz
cmp
std
fcom
es
adc
lock
sub
push
push
lock
jns
mov
ror
bound
jmp
out
icebp
lods
jae
decl
xor
push
scas
mov
insb
jp
mov
rolb
in
addr16
punpckhbw
rorb
adc
mov
jno
lahf
int
jl
test
ljmp
fisttpl
outsb
daa
sub
add
out
enter
dec
lahf
hlt
flds
lahf
pop
es
xlat
add
push
lahf
int
cmovg
xlat
enter
aaa
push
faddl
cmc
ja
dec
pop
aaa
das
push
push
push
pop
cmp
addl
lret
aas
out
sub
aaa
cld
test
imul
or
and
ss
loop
pusha
fisttpll
iret
out
rolb
inc
jns
add
int3
mov
ficomps
test
push
xor
mov
mov
test
mov
sub
sahf
add
lahf
fwait
fwait
fwait
pop
pop
mov
frstor
push
pop
jl
outsb
andb
mov
cmp
xchg
fbstp
sti
inc
fsubr
stos
test
push
lea
mov
in
sahf
fiaddl
sbb
mov
jge
insl
sub
int
inc
shlb
nop
dec
bound
es
hlt
movsl
lahf
pop
or
loopne
data16
sbb
fdivrl
cmp
std
insb
hlt
ss
push
cwtl
ja
jbe
sub
mov
mov
mov
and
add
adc
mov
sbb
mov
divb
sub
pop
or
adc
and
sbb
mov
popl
inc
fwait
fwait
fwait
fwait
imul
jmp
subl
imul
jmp
hlt
push
xchg
mov
out
out
and
scas
mov
mov
xlat
iret
mov
sub
repz
jb
xchg
ljmp
loope
rcll
mov
rorl
jbe
test
loope
mov
xor
push
push
enter
fwait
fwait
fwait
fwait
sub
out
inc
mov
pop
les
insb
fwait
fwait
fwait
fwait
in
inc
pop
pop
mov
mov
mov
fwait
fwait
fwait
dec
in
jnp
mov
push
idiv
add
push
or
out
out
out
shlb
pop
cltd
idivb
out
out
or
pusha
xchg
mov
enter
jmp
adcb
jo
jbe
jb
inc
push
lcall
jge
ret
push
mov
inc
ret
test
fwait
fstpt
dec
test
cwtl
out
inc
cli
repnz
xchg
fwait
fwait
fwait
fwait
icebp
or
push
js
jns
addr16
aas
fwait
mov
in
or
push
fstpl
jne
int
sub
mov
mov
stos
testb
imul
fwait
fwait
fwait
loop
dec
repz
xor
cld
jbe
mov
pop
sbb
cmpsl
mov
xchg
out
xchg
aas
dec
fwait
fwait
fwait
fwait
adc
and
sub
pop
sahf
cmp
fisubrl
int
in
adc
test
rorl
xor
int
int
or
movsb
or
fiaddl
mov
out
or
jbe
in
pop
ss
sbb
lods
hlt
mov
shlb
push
jnp
fwait
fwait
fwait
cmp
xor
cmp
jb
int
int
push
sahf
sub
lock
rorl
aad
clc
xor
iret
int
idivl
adc
push
es
mov
jbe
lcall
popa
insb
inc
adc
sahf
ds
mov
ja
scas
sahf
mov
outsl
push
lahf
andb
inc
insb
mov
mov
jo
aaa
aaa
mov
insb
jne
imul
sbb
mov
adc
rorb
movsl
cmp
aaa
aaa
sahf
dec
dec
pop
clc
repnz
aaa
aaa
jl
mov
sar
push
cmc
push
jecxz
cmpsb
dec
aaa
aaa
aaa
aaa
mov
hlt
imul
cmp
sub
mov
push
mov
and
sbb
out
enter
fldenv
dec
jnp
ss
mov
or
ds
mov
fs
outsb
outsb
outsb
outsb
mov
shlb
nop
cs
aaa
mov
js
lock
mov
mov
mov
aaa
aaa
xchg
inc
and
push
aam
mov
pop
jg
test
rorl
arpl
jmp
cmp
jne
je
cmp
or
popl
jo
inc
stc
push
mov
fwait
fwait
fwait
fwait
xchg
lret
outsl
mov
sbb
ds
loop
sahf
adc
fcomi
out
pop
bound
push
pop
scas
cmp
and
fwait
fwait
jmp
dec
push
pop
ja
mov
xchg
outsb
outsb
outsb
outsb
mov
pop
dec
jl
mov
insb
outsb
mov
lcall
out
jne
adc
dec
bnd
cmpb
add
push
dec
xor
jne,pn
neg
jl
sbb
jge
fdivr
sbbl
add
gs
dec
pop
lods
mov
cmp
push
imul
sbb
stc
xor
in
out
and
jae
mov
imul
aaa
aaa
mov
pop
pop
lds
inc
jno
sbb
mov
adc
mov
or
adc
push
inc
pusha
aaa
mov
int
add
sbb
hlt
push
mov
ds
out
and
push
jbe
or
fcmovne
aam
cmp
addr16
inc
jecxz
mov
subb
adc
xchg
mov
jbe
or
imul
popl
push
inc
cli
outsb
outsb
outsb
outsb
or
jmp
daa
add
cs
or
adc
insb
fdiv
mov
roll
pop
scas
mov
idivb
xchg
mov
jecxz
clts
mov
jg
push
imul
test
fdivrl
aaa
mov
out
rorb
pop
bound
cli
divb
cmc
icebp
loopne
int3
xchg
repz
sbb
jl
outsb
outsb
or
out
arpl
dec
push
ficompl
push
or
loop
notb
in
fwait
fwait
fwait
or
leave
inc
mov
paddq
cld
sahf
adc
pop
sub
loopne
shrb
insb
repz
idivl
pop
hlt
adc
xchg
mov
stc
fstps
sub
shlb
mov
push
sbb
jbe
push
mov
sahf
jno
fdivs
jae
testw
or
inc
shlb
int
addr16
out
xchg
sub
lahf
test
fisubs
cmpsb
and
lret
outsb
out
xchg
jle
ss
mov
inc
rcll
or
out
xor
jae
jae
adc
jnp
cmp
insb
aam
mov
jae
jae
pushf
dec
jns
or
ficoms
int
jae
jae
mov
add
insb
out
pop
jecxz
cmpsb
das
call
out
xchg
loope
and
dec
ss
aaa
mov
test
pop
inc
stos
stos
xchg
mov
jle
and
cmp
add
inc
dec
scas
xchg
jae
jae
xchg
xchg
test
fdivrs
adc
jae
jae
push
dec
popa
mov
xchg
cmpsl
cli
cld
fdivrp
jae
jae
ret
xor
push
pop
mov
mov
jmp
loop
dec
adc
push
push
andl
adc
sub
shl
les
mov
inc
sahf
mov
jge
fisttps
inc
adc
jg
xchg
daa
popf
lahf
in
add
outsb
out
out
mov
pop
jns
pop
inc
scas
sub
lret
inc
stos
add
sti
fsubr
iret
sahf
shl
push
pop
sbb
imul
and
scas
bnd
jecxz
push
push
jl
dec
jb
pop
fwait
fwait
fwait
sub
xchg
add
fwait
fwait
fwait
fwait
jno
mov
jnp
outsl
and
xchg
cld
xor
fwait
jmp
ficoml
sbbb
push
leave
lds
mov
out
or
outsb
out
clc
fcoml
jnp
mov
ljmp
xor
orl
mov
mov
out
fstpl
cwtl
pop
adc
xlat
aaa
aaa
aaa
aaa
pop
imul
mov
sarl
ds
divl
sbb
pop
scas
addr16
mov
sbb
addr16
or
in
jle
int
int
int
mov
sbb
pop
push
shll
movsb
mov
dec
jae
mov
xor
mov
mov
jo
pop
push
pop
and
addb
aas
ret
pop
cmc
test
clc
jge
jbe
jge
outsb
test
hlt
and
mov
pop
je
lock
adc
push
inc
mov
fcompl
in
ja
mov
int
dec
push
xor
mov
repz
push
ss
cmp
inc
add
roll
jmp
push
movsl
aas
cmp
xchg
out
out
test
in
sti
dec
pop
xor
out
cmpb
dec
fildll
push
inc
mov
fldt
out
lret
pop
int
filds
sbb
scas
pop
mov
pusha
mov
int
ja
ficomps
xchg
test
or
xor
aaa
aaa
aaa
aaa
rclb
pop
shl
pop
mov
pop
ds
aaa
aaa
movsl
repnz
xor
sbb
inc
test
fwait
fwait
fwait
fwait
and
jo
push
test
jno
aaa
aas
fwait
sub
out
push
fiadds
fdivrl
cmpsb
rolb
lock
out
fnstcw
inc
mov
fsts
add
inc
pop
call
shlb
jae
push
mov
or
jl
notb
mov
imul
mov
int
add
adc
or
sahf
int
int
mov
jo
mov
mov
push
dec
fbld
cltd
clc
jne
push
add
mov
dec
vpaddd
cmp
iret
fnstsw
adcl
jge
jae
jae
push
lock
lret
lock
loop
push
cmpsl
mov
mov
les
imul
inc
sbb
sub
in
ret
mov
mov
into
outsb
jle
or
dec
aas
add
subb
cmp
int
int
jb
jl
stos
lea
cmp
push
out
int
int
lret
stos
xchg
stos
jbe
pop
bound
cmp
xchg
int
and
int
cmp
jg
sub
mov
jle
sub
int
outsb
outsb
outsb
out
loop
mov
bound
mov
jb
push
push
mov
mov
mov
dec
sub
enter
imulb
mov
int
dec
cli
dec
jne
sbb
inc
cli
lock
ret
fimuls
gs
cmp
push
inc
loopne
es
stos
lahf
int
outsl
scas
sub
jp
push
pop
jp
lods
out
out
imul
in
mov
in
push
out
out
xlat
das
mov
scas
jbe
imul
in
ror
rcrb
or
lahf
jbe
scas
or
sarl
cmc
test
std
insb
outsb
pop
or
and
cltd
bound
dec
iret
out
mulb
add
jb
sbb
test
inc
fcoml
insb
mov
or
mov
arpl
lods
jbe
cmp
push
std
adc
xor
js
mov
xchg
mov
pop
dec
testb
mov
sub
push
push
cltd
or
lock
fsub
mov
push
fs
sbb
hlt
mov
mov
aaa
mov
lea
jnp
dec
push
clc
fdivl
aaa
aaa
aaa
jmp
push
add
xor
adc
ss
mov
cmpsl
dec
push
fwait
fwait
fwait
fwait
out
lds
std
aaa
or
jg
arpl
outsb
outsb
xchg
xchg
iret
ljmp
pop
jge
outsb
outsb
js
repnz
popf
mov
or
out
sti
lcall
mov
mov
lock
sbb
shrb
fwait
fwait
aaa
mov
repz
mov
or
insb
ljmp
fcompl
mov
sbb
pop
cmpl
and
scas
ja
data16
add
ret
add
ljmp
lahf
int
pop
mov
scas
xchg
jbe
lods
sbb
cs
jecxz
lock
add
fdivrl
push
xchg
popa
sbb
test
adc
in
or
clc
sub
jne
cltd
jno
mov
clc
aad
xchg
sbb
fcompl
data16
fisubl
jne
and
ret
dec
fbstp
mov
outsl
dec
xor
pop
pop
stc
mov
mov
pop
jl
inc
out
add
fincstp
shlb
scas
adc
inc
or
sbb
dec
or
mov
ja
stos
clc
xchg
arpl
mov
in
data16
lods
adc
pop
push
cmpsb
loop
mov
test
adc
mov
or
outsb
aas
fwait
fwait
repnz
mov
push
outsb
adc
outsb
outsb
outsb
out
imul
mov
cmpsb
jo
xor
or
clc
cmp
sbb
adc
lahf
mov
orb
xor
sarb
mov
out
inc
fisubs
sti
data16
lret
and
jae
lea
mov
aad
stc
ret
add
and
into
ds
test
out
les
push
jb
outsb
outsb
outsb
outsb
clc
dec
rcrb
pop
xchg
push
jg
and
jl
sbb
roll
pop
xchg
cmp
clc
stos
sahf
das
inc
sub
out
loop
test
cmp
jle
popa
outsb
scas
clc
pop
mov
popf
shrb
push
add
mov
mov
mov
inc
aam
inc
pushf
push
add
mov
fs
sti
mov
mulb
mov
in
out
or
sti
xor
xlat
subb
cmpsb
push
int
and
xor
inc
mov
inc
aaa
mov
int
lods
push
repnz
cmpl
fdivrl
aaa
shlb
jne
inc
pop
jno
jae
cli
cld
in
clc
push
fucom
inc
cmpb
jns
data16
int
pop
mov
ficomps
outsb
sub
cmp
das
xchg
shrb
outsb
outsb
idivb
sbb
and
jl
imul
std
add
sar
sahf
sbb
iret
int
inc
mov
sbb
mov
icebp
shll
xchg
outsl
stos
jp
xchg
ss
mov
repz
or
cmpsl
jne
xor
xor
iret
idiv
sahf
mov
cmp
xchg
jae
jae
push
test
xor
das
repz
out
ret
subb
addr16
mov
mov
pop
xchg
sbb
mov
rorb
mov
incb
mov
out
cmp
push
push
pusha
aad
pushf
or
jbe
lahf
lahf
imul
and
push
mov
sti
or
and
gs
pop
je
enter
jae
mov
enter
xchg
sahf
jle
int
int
pop
inc
inc
andb
or
call
int
jbe
mov
fs
sub
outsb
mov
pop
hlt
pop
mov
cwtl
fiaddl
outsb
inc
dec
xchg
cmp
lock
mov
test
insb
fwait
dec
addr16
adc
mov
mov
cmc
les
mov
fistl
xor
sbb
clc
rcll
out
add
mov
jae
push
jge
cmp
inc
ja
mov
mov
pop
test
cmp
and
lahf
int
pop
inc
or
divl
jg
xor
gs
sub
clc
cltd
push
mov
mov
pop
mov
int
xor
inc
ret
or
cmp
fwait
stos
jle
lods
pusha
popa
push
dec
in
sbb
lock
fwait
fwait
fsubrl
mov
cmp
lahf
fwait
fwait
fwait
xor
adc
push
fcoms
fcompl
mov
xor
addr16
clc
mov
fdivrl
shl
jo
int3
je
push
add
fadd
sbb
add
int3
dec
test
xchg
jno
cmp
and
add
fldcw
enter
jl
je
push
push
push
inc
push
lret
and
shl
out
into
bound
jae
aaa
lock
dec
ror
or
mov
cli
dec
xorl
lahf
jnp
loop
xor
stos
jmp
ljmp
cmp
inc
das
out
outsb
outsb
out
cli
jbe
ret
jmp
mov
dec
outsb
outsb
outsb
outsb
repnz
mov
mov
out
and
out
or
popf
push
fwait
fwait
or
inc
sti
cwtl
pop
xlat
add
es
and
mull
mov
scas
push
mov
addr16
sbb
pop
out
mov
test
add
lahf
dec
lods
arpl
adc
es
lcall
jnp
mov
repz
lret
movl
mov
and
xchg
push
das
out
lahf
fldt
mov
and
jl
shrb
aam
dec
xchg
sub
xchg
test
mov
jl
adc
addr16
xchg
scas
call
cmp
aaa
mov
mov
or
repnz
adc
pop
aaa
aaa
aaa
aaa
or
or
jo
data16
aaa
aaa
aaa
mov
sti
or
xchg
cld
xor
rorb
xchg
jbe
sub
lods
jmp
clc
fisubrl
sar
addps
mov
popa
repz
bound
dec
repnz
jmp
out
jae
sti
mov
fwait
ja
push
ret
das
ret
jae
or
cmpb
adc
cmp
pop
inc
icebp
add
js
sbb
mov
into
add
mov
in
xchg
xchg
cmp
xchg
and
sti
mov
ds
aaa
cmpsb
pop
sub
rcrl
mov
jp
outsb
xchg
dec
cmp
popa
jp
or
outsb
outsb
outsb
outsb
and
movl
jbe
std
insb
ret
cmp
cltd
out
out
cmp
pop
add
jbe
sti
icebp
add
and
imul
mov
mov
std
shlb
mov
sahf
adc
outsl
out
mov
ret
movsb
js
out
cmpsb
sbb
outsb
lahf
and
loopne
inc
sub
jmp
insb
shl
std
insb
cld
and
xlat
es
xchg
sahf
xchg
dec
fisubs
loope
jae
lret
inc
test
leave
rcr
ss
jbe
jnp
and
in
push
jp
mov
sbb
xorl
icebp
hlt
sub
jb
cmp
mov
int
adc
aaa
aaa
lock
movsl
icebp
mov
push
cmpsb
lock
xor
testl
lahf
fistl
ljmp
es
xchg
dec
ss
lahf
int
idivb
cmp
and
add
insb
call
lea
push
adc
aaa
jle
shrl
fucomp
es
inc
data16
fwait
int
push
cmp
xchg
push
fsubl
in
lcall
mov
dec
and
add
push
mov
sti
fsubrl
aas
jbe
call
jae
jae
cltd
cltd
ds
insb
shrb
mov
ljmp
into
and
push
jle
insb
fisttps
sbb
bound
cmp
loopne
jbe
shrb
ret
pop
faddl
rolb
mov
jo
std
xor
and
das
add
data16
in
mov
add
jp
movsb
push
dec
ret
scas
loopne
lock
push
ss
sub
aad
mov
fcompl
push
sarb
ret
xchg
in
inc
clc
fldcw
hlt
loope
sbbl
mov
bound
cs
hlt
xchg
jo
pushf
jl
cmp
jb,pt
jo
shll
jb
push
clc
pusha
std
aad
lds
and
aam
loop
cli
adc
or
frstor
fists
ds
cmpsb
cltd
dec
push
cld
in
or
cmpl
sub
xchg
xchg
add
out
pop
or
nop
sub
or
mov
movsl
pop
push
and
mov
pop
ret
out
ljmp
scas
clc
xchg
sub
xorb
das
fs
outsb
outsb
outsb
push
jae
jle
pop
jmp
and
loop
insb
xchg
rorl
mov
pushf
mov
pop
jb
stos
fcmovne
int
sti
ret
in
lock
iret
ret
sbb
add
outsb
roll
popf
in
lcall
shrl
dec
push
cmp
lock
mov
lea
aam
dec
popf
fwait
mov
loope
pop
js
cmp
or
into
in
push
or
and
test
mov
in
xchg
push
push
loop
dec
cld
in
cmp
mov
mulb
das
gs
out
and
in
insb
decl
jecxz
faddl
jbe
cmp
mov
jns
cs
fnstenv
inc
test
rcr
cmp
outsb
outsb
outsb
mov
lock
push
out
and
insb
or
xor
xchg
gs
cmp
aaa
fnstenv
stc
iret
in
xchg
push
adc
jge
popf
fwait
mov
sarb
addr16
adc
adc
std
data16
das
int
int
addr16
insb
add
pop
or
and
jle
iret
clc
bound
sbb
pop
jecxz
into
add
lret
inc
out
fdivr
sbb
fcompl
fwait
or
hlt
ljmp
insl
aam
pusha
sbb
hlt
pushf
or
ss
aaa
push
cmpsb
jb
xchg
push
paddb
stos
shll
xor
sahf
test
pop
ds
ret
les
cmp
or
es
bsf
clc
jns
stos
iret
int
in
jbe
inc
or
add
sbb
push
xlat
popf
sub
cmpsl
adc
pop
sub
int
add
push
rcl
push
or
push
aas
or
xor
js
jp
mov
or
rcll
cwtl
jo
mov
aaa
adc
out
out
jb
ss
push
jb
cmp
push
leave
sub
mov
negb
outsb
outsb
mov
mov
decb
aas
fstpt
mov
fwait
mov
push
call
int
popf
insb
adc
dec
push
pop
jecxz
mov
into
das
outsl
jp
jl
addr16
test
lock
cmp
add
or
jo
lcall
or
inc
lahf
lea
es
jle
into
cmpb
sbb
adc
push
fsubrl
xchg
inc
push
divb
or
or
fdivl
rcr
mov
in
fwait
fwait
fwait
fwait
lret
cmp
loopne
xchg
pop
pop
stc
int
adc
fs
fs
lods
js
adc
int
int
lret
xchg
or
sub
inc
daa
push
testb
pushf
dec
inc
adc
fwait
fwait
fwait
fwait
add
inc
jg
stos
out
std
ds
fwait
sbb
and
jbe
xor
hlt
mov
xchg
aam
xchg
xchg
xorb
inc
jge
inc
test
inc
mov
rclb
mov
push
imul
test
add
hlt
push
fdivrl
mov
inc
jle
xlat
cli
adc
adc
sbb
jbe
jae
add
sub
insl
int
int
in
xorb
dec
fnsave
push
int
int
rcll
add
pusha
pop
lahf
int
int
jns
aas
int
add
lret
scas
pop
andb
xor
lcall
xor
adcb
lret
idivl
pop
dec
movsl
xlat
test
adc
mov
ret
inc
cmp
pop
push
sbb
inc
stos
push
outsb
fcmovne
addr16
or
inc
lock
or
aas
fwait
fwait
fwait
jge
lret
stos
lea
int
int
out
mov
ret
xchg
in
shr
xchg
sahf
int
jle
andb
lods
cmp
fcompl
dec
jb
subl
jae
add
pop
test
xor
jae
divl
push
cmp
cli
sbbb
iret
mov
lcall
pop
lret
loopne
push
adc
sahf
fwait
popa
out
fisubrl
cld
je
addr16
repz
xchg
push
mov
pushf
int3
pop
aaa
aaa
mov
ss
dec
sbb
stos
or
sti
lcall
push
sub
inc
or
addr16
sbb
adc
lcall
dec
mov
stc
sbb
sbb
ss
rolb
cs
mov
mov
jg
ss
push
test
dec
jmp
outsb
outsb
fistps
bound
cmc
lock
or
xor
insl
mov
mov
cmpsb
push
dec
lods
mov
add
xlat
cmpsb
xchg
shlb
cmp
sar
out
lret
mov
mov
jle
rcrb
sbb
or
jae
jge
dec
loopne
popf
mov
pop
cld
shlb
add
mov
and
inc
push
cld
and
jle
testl
call
out
cmp
and
scas
sub
stos
cmp
mov
in
das
jae
mov
loop
add
pop
push
mov
inc
das
mov
outsb
outsb
jg
push
add
out
fsts
mov
sbb
xchg
ja
mov
add
pop
scas
mov
int
int
and
adc
test
int
add
mov
bnd
sbb
dec
cmp
mov
pushl
ja
mov
scas
movsl
push
and
cmpsb
pop
mov
ljmp
in
adc
aaa
aaa
leave
push
mov
push
cmpsl
lods
loop
adc
ss
aaa
aaa
inc
pushf
cs
cmp
push
in
jae
jge
bound
add
fisubrs
mov
loop
and
pop
enter
push
or
mov
inc
imul
in
jp
fdivrl
inc
adc
call
pushf
pop
sub
inc
sbb
es
sti
f2xm1
jmp
cmc
popf
clc
mov
test
int
jl
xchg
movsl
ss
int
int
mov
enter
mov
jae
mov
ret
dec
push
js
jae
jae
std
test
xlat
pop
mov
enter
inc
jmp
mov
cld
sbb
ljmp
xchg
rolb
cmp
and
cmp
loope
out
mov
bound
in
xchg
fadds
mov
xchg
pusha
pop
test
lcall
mov
mov
push
dec
scas
cli
push
pop
push
add
cmc
cmp
pop
clc
insb
outsb
outsb
mov
sbb
adc
jae
ret
pop
sub
xorl
pop
ret
les
or
out
aaa
aaa
aaa
dec
xchg
faddp
sbb
cmp
cwtl
or
cmp
iret
mov
call
adc
adc
lock
jae
jae
insl
mov
jo
lds
push
cli
lahf
int
in
jp
clc
aas
fcmovnb
or
inc
jl
pusha
ds
aaa
mov
sbbb
push
push
fwait
fwait
sbb
pop
stos
jbe
inc
jle
ds
mov
jne
mov
pop
pop
or
loopne
xlat
loopne
cld
mov
aaa
aaa
mov
cmp
jb
stc
jmp
cmp
mov
into
mov
and
mov
add
fcomps
inc
lahf
int
int
cli
xchg
and
jp
xchg
push
movsb
xchg
aam
cmp
mov
icebp
sahf
or
ds
mov
or
in
or
popw
push
insb
shr
mov
mov
out
push
shrb
shll
in
or
aam
addr16
adc
mov
ret
loope
iret
mov
aam
iret
adc
ror
int
imull
clc
jle
ret
rorl
lahf
sub
fidivrl
cmp
cmc
pusha
aam
pop
jl
add
lret
add
pop
ljmp
mov
cmp
aaa
xor
test
cmp
lods
roll
lret
cmp
sbb
jg
adc
adc
mov
cld
cli
int3
dec
loope
fsubs
push
shl
mov
jb
sub
pop
mov
outsl
adc
imul
inc
stc
insl
jl
cli
andb
mov
ja
mov
pop
cmp
rol
fildll
pop
lock
mov
xor
aaa
aaa
aaa
out
cwtl
out
andb
fsubrl
ss
ss
jmp
rorl
fs
in
es
fwait
fwait
fwait
fwait
daa
sbb
jmp
and
jne
fwait
fwait
fwait
fwait
and
pop
rcl
iret
push
jo
push
popf
mov
sbbl
out
adc
cmpsb
xrelease
mov
nop
and
pop
out
mov
jp
mov
out
inc
js
outsb
and
xchg
movaps
cs
rcrb
cmpsb
enter
or
push
pop
outsb
outsb
outsb
outsb
or
or
icebp
hlt
pop
paddusb
ss
insb
outsb
outsb
outsb
fcmovne
jle
sahf
pop
sbb
shrb
cld
out
sbb
xlat
int3
jns
fistl
js
fsubr
loopne
xor
cwtl
push
cli
jecxz
xchg
out
fisttps
lret
int
sbb
mov
mov
movsb
ds
fwait
xlat
outsb
repnz
ds
in
out
inc
sub
mov
sbb
ljmp
cmpsl
insb
push
lcall
lcall
sbb
aas
fwait
and
rol
das
ret
mov
je
je
sub
xchg
std
fwait
fwait
fwait
cmp
cmpsl
jge
dec
jmp
cmp
cmp
cmp
loop
aaa
aaa
mov
sarb
cwtl
lcall
aaa
aaa
fnsave
and
mov
lahf
iret
mov
push
mov
mov
and
dec
pop
cmc
repnz
push
fdivs
xlat
vpaddusb
fsubrl
mov
cli
xchg
pop
je
mov
cli
push
mov
mov
sahf
lahf
out
mov
sub
stc
sub
repz
cmp
dec
mov
inc
shl
inc
nop
sti
pop
out
cmpsl
or
outsl
and
pop
mov
jmp
mov
adcb
dec
leave
clc
mov
push
ljmp
fcompl
push
lods
dec
adc
fwait
popa
cmp
outsb
jg
repz
fldcw
shll
mov
sbb
aas
iret
cmp
mov
out
jnp
xchg
je
pusha
shlb
push
stc
cmp
es
mov
sub
mov
out
gs
add
pop
jge
inc
add
or
add
fsub
xchg
aaa
aaa
aaa
fiaddl
and
cmc
xchg
mov
cmp
hlt
xchg
movsb
in
neg
fmull
enter
loopne
pop
pop
xchg
mov
aam
push
outsb
les
push
dec
sbb
ds
jecxz
cmp
and
test
test
cmp
mov
mov
mov
adc
push
or
jle
shll
int3
cmp
sub
mov
out
jnp
inc
xchg
lds
jp
sahf
or
sub
mov
fs
adcb
mov
mov
add
das
mov
dec
push
xchg
fmuls
int
int
push
pop
orb
mov
out
xchg
in
pop
clc
fnstcw
xor
sbb
insb
outsb
cs
lret
js
cmpsl
repz
inc
jle
mov
lods
movsl
psubb
xchg
xchg
clc
mov
sbb
scas
movsb
insb
outsb
outsb
cs
insb
pop
add
xchg
cs
push
pop
cmc
sbb
scas
jl
icebp
lea
adc
mov
adc
mov
jo
aaa
aas
pop
fstl
inc
out
xor
jo
xchg
mov
and
cld
push
sbb
jge
aaa
inc
fldt
jl
or
jge
scas
jp
xchg
push
mov
mov
int
mov
nop
fidivl
aaa
aaa
pop
mov
pop
mov
add
ret
cmp
add
mov
mov
mov
jae
aas
js
sbb
and
repnz
sub
stos
push
sub
pop
dec
call
xor
enter
outsb
test
jp
loope
bound
fcomip
push
sahf
jnp
mov
jbe
mov
inc
sbb
mov
clc
cmp
cmpsb
fimuls
pop
pop
test
push
adc
add
lods
mov
test
out
push
cmc
or
jmp
fucomip
dec
inc
dec
insb
cmp
aam
lock
mov
push
es
mov
or
hlt
jo
je
outsl
movsl
mov
push
jo
cmp
and
sahf
stos
sbb
mov
or
iret
aaa
aaa
aaa
aaa
push
pop
pop
rolb
dec
or
fcoml
jae
add
push
mov
sarb
iret
out
push
sbb
cmp
fwait
fwait
fwait
sub
stc
lods
in
jge
jns
xor
or
aas
fwait
inc
dec
rorb
adc
dec
fs
jno
ret
mov
cli
out
popa
ss
jp
jmp
clc
mov
mov
aas
andl
sub
aaa
mov
mov
add
inc
rorb
xor
sbb
mov
shlb
insb
inc
ja
jmp
inc
pop
mov
mov
aaa
sbb
push
cmp
add
aaa
push
bound
sti
call
adc
aaa
lret
je
xchg
icebp
push
cli
inc
scas
loopne
cmpb
inc
scas
pop
or
movsb
add
andb
push
notl
addr16
jae
sub
mov
pusha
aaa
mov
test
adc
sahf
aaa
aaa
aaa
aaa
scas
je
xor
mov
lahf
and
aaa
aaa
aaa
push
adc
dec
je
push
or
aaa
xchg
insb
dec
mov
rcrb
pop
cmp
mov
loopne
pop
rclb
rcl
xor
insb
outsb
outsb
fiaddl
pop
imul
hlt
fidivrl
loop
loopne
lock
mov
mov
mov
hlt
xor
jae
lahf
mov
xchg
sub
sbb
jae
movsb
and
movsb
shlb
mov
fdivl
mov
mov
sub
shll
pushf
xor
leave
test
cmp
and
mov
jae
test
test
daa
mov
xor
decb
or
mov
inc
xchg
bound
ljmp
outsb
push
lcall
mov
xchg
cmp
jle
loop
mov
add
insb
outsb
aas
fwait
dec
fwait
aas
push
and
xlat
shr
mov
test
mov
aam
fs
in
and
xchg
out
sbb
imul
sahf
int
int
das
inc
cld
test
or
xchg
in
outsb
pop
pop
mov
push
cmpb
outsb
dec
stos
rcrl
jecxz
inc
test
pop
mov
jl
aaa
xchg
sbb
xchg
pop
stc
into
shlb
nop
dec
pop
pop
xor
adcl
fiaddl
xor
sbb
dec
add
lcall
jmp
or
push
out
aaa
mov
mov
cmp
or
inc
lret
aaa
aaa
lahf
mov
imul
shll
lahf
mov
inc
or
pop
xlat
jecxz
dec
fildll
in
data16
adc
dec
mov
nop
and
pusha
jecxz
hlt
loope
pop
into
pushf
jl,pt
inc
xor
mov
xchg
fcmovu
sbb
adc
out
pop
incb
jns
jae
jle
outsb
xchg
ret
cmpsb
cltd
cmp
mov
arpl
insb
fsts
or
pop
insb
int
in
out
jbe
mov
fidivl
push
mov
ficomps
int
mov
or
or
fsubrp
mov
das
aad
test
push
sub
jno
cli
sub
jp
inc
pop
rcr
jge
sbb
repnz
out
mov
imul
mov
loopne
jae
and
ss
inc
sub
cli
mov
add
sub
testb
xor
fcoms
fiaddl
outsl
mov
or
fisubrs
pop
fwait
fwait
fwait
fwait
data16
ds
dec
add
shrb
or
fs
test
mov
push
lret
lods
cmp
push
pusha
pop
sarb
jb
mulb
xor
loopne
fwait
sub
insb
lods
jae
jae
inc
ljmp
clc
jae
jae
jae
cmp
je
pop
fistps
loopne
jae
jmp
sbb
mov
jle
dec
cld
adc
mov
faddp
ret
and
xor
cmpsb
fstps
mov
loop
iret
daa
in
push
es
cli
fwait
fwait
fwait
fwait
push
pop
and
push
push
cli
mov
dec
aaa
aaa
aas
fwait
push
xchg
test
xchg
rcll
clc
jo
clc
add
shlb
push
push
outsb
outsb
outsb
orl
sub
jae
and
cmp
mov
sub
jb
loop
jae
jae
mov
inc
shl
bound
lret
pop
mov
in
mov
imul
mov
mov
daa
fincstp
lock
jp
push
andb
jbe
lret
mov
rcl
push
push
int3
sub
dec
mov
or
xor
mov
mov
add
imul
inc
gs
pop
jbe
idivl
inc
and
mov
add
jecxz
jle
fwait
cmp
incl
leave
cmpsl
cld
rol
inc
pop
fmuls
aas
fistpll
in
mov
cli
mov
int
mov
addr16
loopne
sbb
ds
adc
mov
int
insl
in
cmp
adc
stos
cmpb
mov
out
xor
sub
popf
xchg
bound
inc
cmp
mov
pop
push
out
or
fsubl
fdivrp
add
lods
aas
mov
cli
arpl
into
mov
cmpsb
dec
sub
cltd
or
fisubs
scas
mov
dec
jp
cwtl
inc
sub
test
lahf
lods
sbb
arpl
pop
or
jge
fs
addr16
fs
or
dec
mov
dec
fsubrl
mov
sub
dec
add
mov
mov
push
lret
pop
jge
dec
inc
jmp
push
and
dec
inc
dec
inc
insl
out
adc
pop
mov
sub
mov
inc
clc
mov
mov
addb
fcmovne
enter
mov
cmpsl
and
outsb
outsb
outsb
mov
rcrb
adc
std
insb
outsb
addb
scas
xchg
test
mov
cmpb
insb
test
or
xchg
dec
loope
bound
cli
adc
sub
pop
test
mov
mov
jp
push
gs
jb
mov
sub
mov
inc
in
mov
adc
mov
cmpsb
outsl
mov
jae
mov
sti
cmp
lret
shr
xchg
mov
jae
daa
mov
xor
filds
lret
cmp
adc
int3
xchg
jno
fimull
and
and
inc
mov
sahf
rcrl
in
xor
fidivs
test
loopne
xlat
ror
cmpsb
adc
mov
xchg
idiv
insb
outsb
fcmove
cmp
rcll
xchg
in
imul
sarl
mov
aaa
data16
add
sahf
mov
add
mov
dec
lods
sub
mov
jmp
add
cld
movsl
inc
push
iret
xchg
pop
ret
jl
outsb
outsb
mov
sahf
test
lea
sbb
bound
in
fucomi
add
cld
loopne
xchg
xlat
addr16
cltd
cmp
ror
sahf
rcrb
mov
inc
pop
sbb
and
in
pop
scas
add
xor
sub
inc
adc
fiaddl
sub
jae
cmp
mov
sbb
cmpsl
mov
xor
movb
mov
mov
add
mov
ss
jae
jae
xchg
loope
lock
jbe
leave
aad
outsl
addr16
jae
add
test
int
in
mov
and
push
in
gs
int
int
cld
xchg
stc
ds
jge
sahf
inc
or
bound
or
adc
jae
jae
sbb
loopne
sub
clc
jae
jae
jnp
arpl
scas
pop
js
xor
jae
push
hlt
or
data16
inc
push
or
jae
mov
lods
out
insl
loopne
jae
dec
pusha
loop
sub
inc
mov
loop
dec
cmp
das
sub
cli
aas
fwait
mov
xchg
fmull
int
adc
loop
inc
push
pop
pop
test
call
cltd
lods
mov
jbe
mov
inc
sub
xor
add
mov
dec
adc
pop
sub
int
daa
lock
inc
inc
stos
xchg
es
es
je
and
push
mov
xor
cmpl
mov
cs
xor
mov
pop
sbb
pop
jnp
ljmp
in
ror
mov
mov
imul
inc
stc
imull
int
pop
arpl
sub
clc
incb
fwait
jmp
fcmovb
jns
cmp
outsb
mov
xor
fcomps
inc
sti
negb
and
outsb
outsb
outsb
outsb
push
cmp
or
notb
cmpsb
or
dec
fdiv
mov
lcall
fcmovb
jl
cli
fsts
mov
dec
and
mov
aas
stos
fdiv
and
pushf
mov
shll
fldcw
mov
xor
imul
ret
iret
out
sets
inc
into
inc
stos
cmp
jg
insb
inc
sub
stos
js
call
insb
pop
das
mov
sub
iret
dec
test
sub
add
pop
mov
jns
ficompl
pop
lock
shlb
repz
sub
jge
pop
movsl
es
push
lea
dec
aaa
pop
sbb
jae
dec
scas
xchg
insl
add
int
int
xchg
push
test
mov
mov
int
xor
or
lahf
enter
addr16
push
or
inc
adc
repnz
mov
cmp
pop
mov
mov
mov
popa
jle
xchg
imul
push
aam
push
xor
jle
mov
fimuls
fdivs
fwait
fwait
fwait
mov
icebp
cmp
bound
dec
aas
nop
mov
fldz
out
and
fcmovne
les
adc
es
fdiv
fstpt
or
ret
enter
sbbb
nop
cmp
xchg
and
push
pop
mov
test
jno
lock
fisttps
loop
jge
repz
xlat
shr
xchg
push
test
jl
mov
enter
fwait
or
cmp
dec
or
jmp
sti
movsb
mov
dec
pop
and
mov
push
mov
adcb
mov
fisttpl
cld
shlb
lds
sahf
fwait
fwait
adcl
or
mov
adc
sbb
out
jmp
es
clc
ljmp
js
lock
data16
jge
outsb
sbb
sbbb
and
sahf
mov
out
divb
mov
imul
xchg
jle,pt
ret
bound
sbb
ds
sub
in
add
cmp
js
test
sar
sub
popa
int
lahf
fwait
jae
test
leave
pop
push
push
int
int
aam
rdpmc
aas
les
xchg
int
int
cld
jecxz
shlb
pop
push
aas
rol
cli
popf
mov
or
cmp
push
lahf
int
sub
clc
mov
in
xchg
imul
inc
je
rcl
add
in
jae
pop
inc
testb
cs
dec
inc
mov
les
rcrb
iret
clc
jb
jmp
jl
outsb
pop
decb
mov
into
ljmp
fwait
fwait
fwait
jp
into
push
push
xor
jne
in
add
adc
loop
cmp
dec
jmp
fnstcw
pop
inc
sbb
jge
addr16
fnstcw
shll
cli
pop
inc
js
aaa
ja
or
dec
push
int
and
shl
orb
dec
popf
push
clc
push
push
sahf
adc
mov
xchg
adc
out
out
push
xor
lret
xor
jno
ror
out
inc
xchg
mov
push
testb
movsb
mov
out
ret
shlb
movb
js
and
xchg
adc
mov
add
std
insb
outsb
outsb
clc
push
or
add
mov
jle
pop
mov
and
xor
fistl
mov
or
aaa
dec
outsb
outsb
outsb
outsb
lea
mov
jo
sub
outsb
lahf
jg
xor
mov
jae
enter
mov
mov
and
push
pop
jecxz
jbe
or
cli
push
push
push
xor
fdivr
sti
loope
jnp
and
loopne
jo
sti
jns
ficompl
jp
out
testb
xchg
inc
adc
fildl
out
scas
test
xor
sarb
sbb
or
iret
sub
int
mov
loope
and
scas
ret
mov
or
gs
inc
jle
outsb
outsb
cs
add
push
pop
cmpsl
scas
mov
test
dec
jge
jnp
popa
int
lret
cmp
and
iret
mov
xchg
xchg
sahf
xchg
fldcw
orb
mov
call
pop
loopne
mov
cli
xchg
lock
pop
cmp
into
ss
aaa
aaa
cmp
rorl
xchg
lahf
test
jle
cmp
or
jnp
adc
aas
test
pop
adc
adc
jle
jp
or
inc
pop
jns
cmp
inc
push
rorb
adc
rolb
sub
int
cs
jnp
pop
or
subb
out
ret
rcll
and
jg
pop
jge
push
push
sarb
push
sbb
mov
mov
mov
jmp
add
pop
mov
int
cmp
in
mov
sub
pushf
fwait
add
repnz
test
lock
mov
aam
or
aaa
lahf
fwait
fwait
jle
mov
and
aaa
aaa
aaa
cmp
repnz
mov
sbb
lret
subl
test
mov
jecxz
insb
cld
push
jb
scas
jno
mov
and
sbb
into
test
cwtl
jnp
test
faddp
mov
aad
outsl
call
lods
mov
push
dec
repz
mov
mov
push
loop
and
leave
imulb
cmp
xchg
out
arpl
shll
pop
loope
insb
movsl
int
int
mov
repnz
cli
ds
int
std
inc
std
fwait
cmc
cmp
stos
notb
outsb
fstpl
test
popa
fwait
xor
jo
inc
mov
loop
jmp
lock
inc
mov
jae
jae
dec
adc
outsl
fmulp
pop
xchg
aad
jae
jae
dec
data16
ja
adc
push
ret
jnp
jae
ss
xchg
jne
xlat
mov
out
loop
sub
faddl
cmp
lret
in
pusha
popf
fcmovne
push
in
mov
aaa
aaa
push
cld
mov
mov
push
sti
loopne
add
cmp
popa
in
sub
fwait
dec
hlt
mov
addr16
repz
int
fbld
cmp
jle
ljmp
out
sbb
aaa
mov
in
mov
jne
push
xchg
test
push
cmp
push
jae
sti
cmp
mov
jl
imull
addr16
add
daa
aad
push
pop
cwtl
pushf
out
xchg
divb
inc
les
xor
mov
mov
mov
jecxz
adc
loop
and
clc
and
cs
cmp
xchg
mov
mov
add
mov
mov
jle
movsb
jne
divl
out
fdivrp
mov
sub
aaa
mov
jecxz
shr
push
mov
out
aaa
ds
aaa
aaa
push
enter
mov
sbb
adc
out
mov
divb
xchg
or
addr16
xor
dec
scas
push
pop
stos
mov
enter
aaa
push
outsb
outsb
outsb
outsb
shll
push
arpl
shll
xorb
sbb
iret
jns
sbb
outsb
outsb
outsb
mov
adc
out
divb
ljmp
mov
out
cmpl
es
out
in
push
pop
subl
fnstsw
jae
fdivrl
jae
cmp
sahf
mov
jae
std
inc
jle
imul
dec
inc
shll
ret
lea
jle
repz
jb
jae
and
xor
gs
mov
or
pop
jns
adc
and
ljmp
xor
insb
pop
ja
lds
in
and
or
fimull
lcall
bound
mov
insl
sbb
mov
lcall
cmp
dec
mov
push
hlt
cli
add
daa
add
cli
mov
mov
mov
pop
mov
rolb
jl
adc
inc
jecxz
jae
cmc
outsb
mov
out
insb
aas
fnstcw
mov
jbe
outsl
or
mov
clc
add
mov
lcall
out
push
aaa
cmovno
pop
jle
icebp
and
iret
add
call
and
fwait
jle
inc
fidivs
fsts
out
aaa
cmc
ds
dec
test
imull
mov
in
dec
or
fwait
mov
mov
lock
popl
sahf
fwait
mov
sub
out
mov
mov
ret
adc
out
jb
xor
jnp
jne
xorl
xchg
hlt
je
or
outsb
outsb
outsb
inc
xchg
idivb
int
fnstenv
aaa
hlt
mov
je
jae
aam
std
mov
cmpsl
inc
push
jecxz
and
jecxz
shll
mov
push
lods
in
sbb
adc
outsl
inc
sbb
cs
adc
clc
fs
xor
lods
mov
jae
jge
xor
dec
sub
add
out
lahf
push
fisubrs
add
stos
out
out
fldl
jno
cmpsb
push
dec
mov
shlb
iret
out
out
ret
pop
pushf
mov
out
pop
adc
in
test
xchg
gs
and
outsb
das
mov
data16
js
jmp
mov
jge
imul
sub
jb
sbbl
dec
mov
xor
cld
or
dec
inc
xor
sahf
inc
out
mov
hlt
sub
mov
push
mov
out
popf
lcall
and
cld
adc
sbb
cs
aaa
xchg
testb
vmovshdup
out
out
dec
cmp
ja
jno
pop
jmp
inc
nop
out
out
lock
std
jp
xchg
and
fildll
dec
out
scas
pop
rcrb
sbb
pcmpgtd
and
cld
fs
subb
cmp
jp
push
enter
jle
es
add
mov
rcr
lret
mov
out
sub
outsl
fcomps
pop
inc
testb
and
lcall
out
out
outsb
outsl
dec
cli
push
xchg
repnz
enter
out
ret
es
sbb
adc
aam
lret
int
inc
subl
jmp
in
pmaxsw
clc
in
movsl
and
ds
fwait
or
out
lods
adc
xchg
dec
pop
push
aaa
pop
cmp
mov
ljmp
cmp
in
xchg
push
pop
push
pop
pop
mov
enter
mov
ds
dec
mov
push
xchg
fdiv
fdivr
les
cmp
cmp
jecxz
fmull
test
aaa
mov
mov
data16
lock
or
aaa
aaa
rcr
xor
pop
gs
jns
sub
aaa
aaa
shll
add
outsb
das
hlt
mov
adc
loop
sti
insb
outsb
inc
scas
inc
sub
xor
and
out
cwtl
sbb
test
outsb
jp
jmp
xor
es
divb
icebp
bound
jae
iret
sub
mov
mov
je
addr16
add
aaa
cmc
incb
rcrl
jae
hlt
sahf
nop
xlat
out
out
adc
xor
fdivrl
add
dec
cltd
clc
fldenv
cli
add
xchg
test
int3
faddl
jae
out
inc
cmp
and
adc
mov
ds
loopne
cmp
push
and
mov
loopne
scas
jae
pop
outsb
shlb
ljmp
outsb
mov
dec
adc
mov
mov
das
and
jae
cld
xor
mov
mov
or
lock
jae
clc
jg
push
lods
aad
and
cmp
mov
xchg
ljmp
mov
ja
outsb
outsb
outsb
popa
jae
sbb
stc
int3
stos
divl
jl
lods
add
jns
cmp
movsl
aas
mov
mov
movsl
jmp
jl
adc
pop
out
mov
sub
cmp
out
xor
jnp
adc
adc
lock
les
in
lret
push
xor
sti
sub
mov
or
psllw
xchg
test
pop
loopne
ja
push
cmc
sub
ficoml
ss
xlat
imul
xlat
adc
mov
aas
fwait
xchg
sbb
nop
mov
fucomi
mov
inc
dec
shlb
cli
jo
jge
lcall
in
mov
mov
cmpl
aaa
push
into
dec
add
pop
pop
dec
es
xchg
test
aad
loop
adc
into
repnz
aam
insb
outsb
outsb
pop
shlb
lock
aaa
sub
cmp
push
std
adc
mov
dec
push
lea
dec
push
sahf
fdivrp
lcall
or
addr16
push
shl
std
mov
pop
push
dec
pop
cmc
and
mov
int
in
ret
add
adc
jp
mov
push
push
clc
jecxz
fdivrl
mov
rolb
int
in
add
cmc
push
and
add
scas
test
push
jb
cli
icebp
and
lret
fs
pusha
mov
mov
hlt
sarb
lds
mov
push
sbb
jg
jo
mov
mov
data16
shr
cmpsb
and
or
in
das
jmp
fiaddl
push
es
ss
fidivl
aaa
aaa
mov
test
push
mov
into
mov
jle
aaa
aaa
adc
imul
dec
mov
xchg
pushf
or
push
pop
das
jge
mov
cmp
mov
pop
or
out
push
lret
mov
shlb
push
roll
dec
inc
jp
fcomi
mov
addl
in
in
adc
fwait
fwait
fwait
add
rcrl
xchg
push
idivb
aas
loope
mov
fnstsw
xchg
xchg
rcrb
fdivr
arpl
and
add
inc
adc
fwait
fwait
or
sbb
in
cmp
mov
fiadds
testb
out
inc
xor
insl
movsb
das
or
mov
or
call
inc
test
add
dec
cmp
and
out
es
mov
insb
outsb
outsb
fsubrs
leave
mov
lock
fistl
push
mov
cmp
fwait
fwait
fwait
fwait
sub
sarb
push
rolb
sbb
sbb
cmpsb
clc
js
jle
mov
dec
iret
testl
cld
sub
add
mov
ret
push
pop
sbb
aaa
aaa
aaa
pusha
int3
dec
adc
mov
ret
xor
loope
push
std
push
push
jg
cmp
out
jae
pop
and
rorb
iret
mov
iret
fbld
jmp
dec
inc
test
das
scas
out
jge
aas
dec
pushf
inc
stos
adc
fimull
ret
pushf
add
cmp
in
jo
aaa
aaa
lods
shr
dec
mov
fwait
sbb
and
or
test
fwait
pop
inc
lea
testb
lock
sub
or
sub
js
dec
cld
outsb
je
dec
std
insb
outsb
inc
imull
cmp
mov
mov
cmp
or
mov
fiaddl
dec
xor
cmp
mov
test
cltd
push
mov
hlt
fisubrl
cmp
sub
ja
lret
mov
dec
in
out
test
pop
cwtl
and
fcomps
aaa
pop
cld
imul
incl
ds
aaa
xchg
xchg
jae
mulb
jnp
mov
sub
pop
sahf
add
jle
iret
insb
jne
jp
fmul
pusha
pop
div
lret
fstenv
cmp
sbb
inc
ljmp
mov
xlat
mov
mov
mov
fwait
fwait
fwait
fwait
adc
sub
daa
cli
push
andl
sbb
adc
sbb
jnp
ds
mov
sbb
fldt
rorb
mov
inc
nop
mov
jo
mov
mov
mov
loop
add
adc
sti
fnstcw
imul
test
xchg
out
jge
jae
pop
pop
pop
add
ret
les
aaa
aaa
movsb
add
fidivl
xor
sub
jle
aaa
lock
int
int
cmp
es
mov
lcall
pop
sub
mov
iret
in
addr16
lret
fisttpll
dec
movb
fsubrl
or
xor
cmpsb
inc
sar
fdiv
sbb
sub
mov
jnp
xor
jae
cwtl
scas
jg
mov
xor
or
call
popf
dec
add
mov
sti
sarb
sbb
pop
ljmp
in
icebp
push
sahf
fisttpl
or
dec
les
xchg
pop
lods
xlat
add
mov
cmc
dec
loopne
lret
push
dec
cwtl
out
out
orl
xchg
push
fs
push
cld
fsub
out
outsl
movb
popa
xchg
ljmp
repz
out
movsb
cmp
pop
mov
dec
fcomps
mov
xchg
aam
movsb
or
xor
jne
mov
inc
fisttpll
int
int
loop
clc
mov
xchg
mov
int
loopne
pushf
loop
int3
fcompl
filds
jae
lods
pop
sub
clc
mov
jno
jae
jae
not
or
rcrb
mov
pop
adc
mov
or
xor
fs
jb
out
mov
std
push
mov
pushf
or
scas
pop
sub
fdiv
mov
and
lods
lock
xchg
cwtl
xchg
and
cmpsl
adc
movsb
call
add
icebp
outsl
mov
mov
in
inc
adc
es
enter
nop
hlt
aaa
aaa
aaa
mov
dec
insb
cwtl
dec
fwait
or
pop
je
sti
cmp
pop
xchg
std
fs
push
pop
addr16
jae
lods
sbb
lahf
lds
xor
jg
jge
out
sbb
call
scas
inc
js
addb
mov
divb
and
mov
jge
or
sub
push
push
bound
pop
jae
loop
insb
jns
mov
repnz
adc
jae
sti
scas
scas
pushf
mov
iret
sbb
xchg
jle
lods
push
mov
fwait
fwait
fwait
fwait
push
xor
out
repz
mov
sbb
pop
ja
xchg
cmp
and
push
push
outsb
ss
aaa
aaa
jg
jl
fcmovnb
xchg
nop
mov
jl
mov
outsl
sbb
mov
mov
pop
and
fdivrs
sub
enter
stos
ljmp
int
out
out
sbbl
jmp
or
aas
push
int3
xchg
mov
or
lahf
sub
orb
je
adc
adc
ljmp
xor
push
jno
jp
mov
mov
setle
xchg
mov
cwtl
nop
dec
sahf
movsb
cwtl
pusha
outsb
outsb
outsb
outsb
xor
pop
cmp
daa
sbb
hlt
not
aad
notb
stc
or
and
iret
xchg
push
xchg
push
mov
jmp
loope
lock
shr
int
in
or
stos
enter
sti
test
int
add
xor
pop
cmpb
mov
out
or
js
cmp
adc
cwtl
jp
adc
insb
out
cli
enter
cli
into
mov
nop
sbb
pop
cmc
mov
inc
inc
daa
imulb
mov
faddp
ror
cmpsb
cwtl
lcall
mov
inc
test
out
out
stos
lods
fnsave
loopne
fstpt
out
out
pusha
sub
mov
cltd
dec
lock
push
pop
inc
mov
adc
movsl
popf
lods
lahf
int
mov
movsb
cmp
subb
clc
aaa
cmp
movd
and
outsb
outsb
push
or
pusha
pop
dec
jmp
out
mov
pop
arpl
lea
xchg
into
out
dec
cmc
sbb
or
lds
push
stos
mov
out
mov
shlb
leave
cmpsb
in
mov
fwait
sub
jne
sub
aad
les
xchg
inc
pop
daa
pop
lahf
in
inc
out
cmpsl
adc
mov
xchg
aaa
sahf
sbb
movsb
mov
fwait
popf
or
sub
es
dec
aas
cmp
push
bound
sahf
xor
lods
call
xor
mov
mov
jecxz
outsb
insb
push
mov
mov
aaa
mov
int
xchg
add
push
mov
lret
sti
dec
pop
aas
fwait
ds
xor
jle
dec
iret
int
push
mov
stos
mov
push
sbb
cli
insb
sbb
add
sub
cmp
ds
test
in
adc
sub
mov
jae
jae
jmp
ficoml
jmp
loopne
jae
shlb
xchg
mov
mov
pop
negl
adc
sarb
pushl
jecxz
out
lahf
test
fmul
fsubs
out
out
xor
hlt
push
icebp
add
cmpb
cltd
xchg
in
mov
mov
enter
int
shl
jb
js
push
jge
cmp
mov
std
mov
enter
out
testb
fdivl
dec
mov
sub
out
sbb
out
mov
xchg
out
mov
out
stc
cmp
push
in
pushf
xchg
xchg
jae
scas
mov
std
cmc
mov
out
icebp
mov
jae
fcomp
sbb
in
pop
push
or
adc
mov
add
fwait
fwait
jb
xchg
push
loopne
popa
aaa
jl
cmp
cmp
jbe
mov
aaa
aaa
aaa
mov
jbe
fldz
fimuls
jae
mov
jl
aam
rolb
jae
fisttpl
cli
or
lock
scas
test
jae
jnp
out
jo
inc
push
daa
cmp
icebp
aad
jmp
jae
cmp
std
in
js
rol
jae
repz
push
pop
sbb
mov
popf
mull
dec
push
data16
lods
mov
mov
iret
out
mov
mov
cwtl
pop
repnz
pop
adc
mov
pop
int3
xor
mov
sti
mov
mov
cmp
clc
xor
jl
cmp
aas
iret
push
fucomi
ljmp
addb
insb
outsb
insb
mov
jno
addr16
rolb
in
ret
pop
sbb
inc
adcb
lahf
sub
pusha
inc
aas
cmp
pushf
loop
outsb
outsb
outsb
mov
jne
adc
daa
aam
ret
pop
cwtl
and
nop
mov
aam
adc
ss
aaa
ja
push
pushf
mov
push
inc
ucomiss
lods
push
jg
push
cld
add
shl
outsb
fcmove
mov
movsl
sub
or
lea
mov
idivl
mov
cmp
jb
data16
out
orb
mov
jb
int
and
aam
out
and
inc
push
mov
xchg
dec
je
repz
mov
jmp
nop
inc
dec
imul
xchg
clc
enter
xor
mov
dec
push
addr16
cmp
mov
lcall
pushf
subb
push
or
adc
mov
or
enter
hlt
jmp
iret
negb
add
mov
mov
xchg
inc
ret
pusha
ficomps
clc
sahf
jmp
and
pop
ja
sbb
iret
lahf
pop
cmp
xchg
mov
nop
jne
outsb
outsb
outsb
mov
in
je
ljmp
out
mulb
push
adc
sbb
out
sbb
shlb
mov
scas
iret
mov
aad
or
popf
fwait
sbb
in
repz
inc
sbb
fwait
fwait
fwait
fwait
mov
data16
or
lahf
fwait
fwait
mov
or
cld
in
fwait
adc
mov
insb
outsb
lods
cmpb
inc
shlb
cmp
mov
xchg
jb
jae
test
fsubr
mov
inc
push
out
iret
xchg
dec
mov
popa
lahf
push
popl
push
cmp
xchg
stos
call
push
pop
enter
mov
mov
cmp
inc
pop
lret
push
rcrb
ffree
xchg
sahf
fwait
fwait
fwait
aas
add
inc
mov
std
dec
out
adc
or
shlb
sahf
jl
outsb
outsb
aas
push
in
insb
sbb
sbb
gs
lret
dec
test
push
mov
daa
inc
jno
sub
int
int3
xor
jae
add
es
aaa
or
xorl
mov
cmp
fimuls
aaa
aaa
aaa
aaa
jg
mov
mov
out
add
dec
cmp
dec
push
push
cmc
pop
sub
add
or
repnz
sub
std
insb
aas
mov
cwtl
movb
ja
add
inc
jl
aas
sbb
ljmp
mov
jl
out
int
in
cmovle
add
aam
divl
int
int
and
test
cmpsb
mov
add
pop
adc
mul
call
cmpsl
lea
xor
push
aaa
aaa
aaa
push
xchg
or
or
pop
cltd
fadd
mov
out
xchg
cmpsb
out
addr16
es
dec
mov
stos
vmovntps
nop
faddp
mov
fbld
pop
sub
cmp
adc
loop
popa
out
movsb
push
jle
mov
inc
int
insl
lret
lea
fwait
sub
fldcw
loope
fnstenv
out
aam
clc
push
cmp
cwtl
cli
mov
push
sbb
lea
fsubl
mov
adc
mov
xor
xlat
addr16
adc
addb
or
out
xchg
jle
pop
jge
inc
dec
movsb
mov
in
mov
cmp
test
or
dec
jnp
out
notb
dec
cwtl
in
cmc
lock
mov
int
fstpl
cmpsl
dec
inc
mov
test
loope
sbb
aaa
aaa
ds
repz
and
xlat
orl
popf
push
imul
out
mov
xor
cs
cmp
add
idivl
data16
jle
push
and
mov
sti
or
sbb
inc
iret
in
sub
push
outsb
ficoml
iret
jecxz
inc
and
push
jo
sahf
faddl
inc
scas
lea
pushf
and
int
inc
pop
jg
cld
push
sub
adc
and
outsb
into
inc
mov
mov
ja
aas
mov
scas
nop
cmp
ffree
int
int
push
movsl
xchg
adc
jle
sahf
aas
and
fdivp
in
mov
pop
pop
ret
out
fistl
mov
and
push
out
xor
test
sahf
mov
inc
rorb
cmp
shl
mov
or
xor
lock
jae
jae
cmp
xorb
mov
int
psubq
cmp
jge
dec
inc
das
cmp
ss
jmp
cmp
iret
int
in
jl
dec
mov
rcr
sarb
fwait
fwait
mov
loopne
bound
pusha
or
xor
and
ds
push
cmp
repnz
xchg
jno
cmpsb
aas
fldt
mov
push
test
ja
insb
dec
incb
sar
icebp
xchg
imul
fsubp
subb
cmp
mov
addr16
aaa
aaa
fcomip
xlat
es
addb
xchg
popa
and
push
in
add
mov
ljmp
xchg
cmp
adc
pop
and
cli
in
jnp
ds
dec
adc
dec
inc
mov
sbbl
aaa
push
std
xor
loope
push
xor
jns
or
sbb
mov
clc
stos
sahf
push
xor
adc
mov
movsl
stos
xor
xorb
pusha
cmp
add
push
jb
test
sbb
jp
lods
mov
mov
aas
cs
lods
jl
lock
dec
test
add
sub
lahf
in
mov
or
mov
jae
mov
decl
mov
xor
jp
cli
add
enter
stc
test
or
loopne
jo
inc
ja
mov
xchg
movsl
leave
scas
or
repz
adc
mov
mov
jl
fildl
rorb
hlt
or
sti
fcoml
mov
arpl
mov
fildll
mov
mov
dec
cmc
insb
lods
enter
fmull
cmp
xchg
lock
into
lods
je
and
es
xchg
xchg
xchg
dec
inc
jge
mov
or
sbbb
push
insb
sbb
dec
adc
cmp
push
jle
popf
jmp
push
sahf
insb
outsb
outsb
outsb
xchg
sub
mov
mov
das
aaa
cld
fsubl
mov
test
out
mov
lock
add
mov
cmp
jo
das
icebp
js
sub
xchg
fmuls
dec
or
inc
mov
je
inc
pushf
cmp
clc
xchg
jp
mov
stc
xchg
adc
clc
insb
pop
mov
in
out
out
imul
sub
hlt
adc
jae
rorl
lret
or
ret
and
xchg
mov
cli
insb
scas
js
xor
daa
pop
sbb
lock
test
mov
mov
jae
iret
out
bound
push
sub
addb
test
jae
push
push
adc
pop
hlt
xchg
and
ss
sub
fcompl
cs
aas
imul
jle
xchg
fwait
pop
rcr
rorb
adc
mov
das
or
lahf
fwait
fwait
dec
addr16
or
ds
pop
test
test
mov
or
cmp
and
mov
inc
mov
idivl
cmp
pop
lock
aam
addb
rolb
jbe
mov
cli
jo
int3
jmp
int
loope
out
inc
pop
sbbb
sahf
int
mov
and
js
cmp
ret
xchg
int
mov
shll
jp
adcb
clc
addr16
fbstp
jae
fcom
in
clc
or
loop
rdpmc
addr16
sarl
xor
out
mov
mov
ret
out
xchg
adc
aam
mov
mov
adc
in
mov
lret
mov
stos
push
or
mov
and
movsl
aam
nop
lcall
pusha
js
xchg
push
ss
loopne
je
aam
inc
gs
jae
sti
cld
adc
pop
pop
jns
loopne
in
or
call
fs
ds
adcl
cmp
lret
cli
pop
cmc
fcmovb
cmp
or
adc
adc
sbb
lods
cmp
cmpsb
loope
dec
adc
and
je
lret
cmp
aam
pop
pop
inc
jg
sbb
shlb
mov
push
pop
shlb
mov
jae
cmp
ljmp
xchg
mov
dec
dec
outsl
push
mov
mov
mov
shlb
mov
fwait
fwait
fwait
fwait
jge
cli
cmp
adc
push
lahf
fwait
fwait
mov
jmp
sub
int
int
fnsetpm(287
push
popa
push
mov
lcall
pop
shl
pop
ss
and
idiv
ds
push
gs
test
pop
dec
insb
movb
jmp
xchg
mov
mov
push
and
ds
jmp
fldcw
add
addr16
pop
icebp
add
sub
repz
out
sub
mov
loopne
idivb
int
int
aad
adc
inc
cmp
dec
int
into
xor
jp
mov
jae
inc
adc
or
xchg
mov
jae
movsl
jno
cmp
outsb
pop
pop
lcall
pop
push
dec
jnp
jge
outsb
jnp
sbb
rolb
push
lahf
jge
jl
push
mov
cmp
lock
jge
data16
add
sahf
les
icebp
push
rolb
jbe
lret
out
cltd
fwait
mov
scas
loop
xchg
cs
lret
int
add
ss
mov
jno
out
out
cmp
and
sbb
pop
pop
mov
mov
adc
lds
cmc
mov
inc
jb
sahf
add
sti
pusha
cmp
sbb
adc
jae
test
lret
mov
xor
repnz
push
stos
scas
packuswb
inc
dec
cmp
pusha
fcomp
inc
addl
ret
push
jl
lods
adc
repz
fsubl
push
and
pop
xchg
fnstcw
cmpsb
xchg
out
pop
pop
iret
testb
sub
aaa
pop
ja
jge
pop
add
fsubl
js
pop
out
mov
daa
xor
dec
adc
ljmp
fcomi
xchg
sarb
adc
cmp
mov
lock
outsb
lahf
fwait
lcall
inc
je
cmp
cli
out
sahf
cwtl
cmpsl
jge
dec
ror
out
jno
scas
outsb
shlb
call
or
cmp
mov
icebp
mov
dec
fsubrs
sbb
dec
ljmp
mov
mov
jo
nop
fcoml
cltd
jns
mov
add
cltd
cmpsw
icebp
loop
faddl
adc
dec
js
lret
notb
in
dec
xchg
push
cmp
int
pop
or
sbb
fisttpl
mov
int
push
mov
dec
dec
test
cmp
mov
fs
sahf
mov
ljmp
push
js
aam
sahf
mov
sbb
add
out
and
sbb
lock
lock
jl
mov
cmp
pmulhw
fisttps
mov
xor
jl
iret
out
mov
or
aaa
aaa
mov
shll
pop
xor
fdivs
cmp
ja
inc
jg
pop
outsl
repz
mov
fs
xchg
mov
adc
mov
pop
push
inc
add
lock
sti
outsb
outsb
outsb
sub
data16
cmp
test
pushf
xchg
and
in
pop
ds
mov
test
out
mov
dec
ret
pop
pop
xor
xchg
mov
mov
and
cmp
cmp
arpl
and
std
mov
mov
sub
pop
pop
popa
jge
add
ljmp
rorb
push
mov
cmp
lcall
add
mov
add
and
or
in
les
sbbb
jg
insl
mov
imul
dec
fst
daa
or
lock
in
mov
sbb
push
pushf
dec
ss
jp
outsb
cli
sub
sbb
xor
mov
hlt
insb
and
mov
sbb
out
out
pop
repnz
add
mov
out
arpl
and
inc
js
fcmovne
out
mov
mov
fimull
outsb
outsb
aas
fwait
aaa
pop
pop
mov
les
fdivrl
sub
dec
nop
adc
rcr
rcl
fsubl
mov
jmp
rol
jge
pop
out
test
cmp
mov
pusha
sbb
enter
mov
jbe
es
lock
dec
and
lock
fisttpl
and
mov
mov
push
push
adc
rolb
in
ds
cli
mov
push
mov
dec
clc
fsts
add
jmp
int
int
mov
jb
outsb
push
iret
scas
lahf
sahf
xchg
ljmp
outsb
outsb
outsb
das
je
push
jbe
or
fcmovnb
aaa
push
jl
push
adcb
lock
popa
push
rorl
ss
push
cmp
filds
test
pop
arpl
js
adc
mov
push
xchg
mov
mov
cmp
jno
cmp
mov
jle
out
fistpll
mov
xchg
mov
xchg
dec
es
and
repz
mov
push
cmp
cmp
unpcklps
aam
jae
push
push
push
fcom
push
addr16
popf
sub
in
jecxz
dec
je
xchg
out
rorl
icebp
lret
movsb
mov
into
dec
popf
or
adc
mov
cmc
stos
fnstsw
lahf
lock
imul
les
pop
dec
dec
pop
sub
cmpsb
push
inc
rorb
ret
xor
mov
enter
and
mov
fdivrl
js
mov
mov
vpshufhw
rol
jp
jle
jecxz
mov
lods
andb
outsb
outsb
cs
fwait
rcrl
mov
lods
loopne
test
sbb
inc
push
push
aaa
aaa
aaa
aaa
movsb
mov
pushf
mov
outsb
cwtl
push
sbb
nop
jp
jae
faddl
or
dec
das
lock
cmc
jb
cmp
mov
std
inc
cmp
insb
mov
addr16
cmp
cmpsb
rorl
sub
test
jle
fdivp
jp
jl
jecxz
push
arpl
push
scas
cli
add
sbb
ss
hlt
loope
cmp
mov
mov
fiadds
repnz
mov
mov
in
push
rorb
shlb
dec
cmp
int3
out
out
sub
and
cwtl
mov
lock
fmull
je
push
mov
fwait
insl
cmp
shr
xchg
test
sahf
fwait
fwait
fwait
adc
gs
cmp
lret
jo
cmpsb
out
adcl
das
sahf
fstpt
xor
clc
jae
sti
pop
push
and
sub
mov
in
jae
mov
inc
xor
sub
add
jl
and
in
aaa
mov
in
xor
es
pop
xchg
push
rclb
ret
scas
cli
jle
push
add
add
cmpsb
push
sbb
push
lret
loopew
out
daa
sub
dec
in
aas
or
testb
int3
stos
jg
xor
aaa
jl
outsb
sbb
dec
push
jnp
popf
and
jecxz
pop
outsb
outsb
ds
jg
inc
add
push
cld
sahf
sbb
mov
popa
lods
insl
cli
arpl
cmp
aaa
aaa
mov
jl
inc
add
mov
mov
cmp
mov
lahf
int
pop
push
data16
pop
add
inc
mov
aam
scas
in
or
int
testl
fidivl
test
sub
movl
sbb
out
hlt
loope
add
movsb
dec
lods
scas
lret
aam
int
int
sar
push
push
push
pop
sub
outsl
sbb
mov
int
jmp
rorb
test
lock
fcoms
adc
fwait
ljmp
stc
scas
mov
jl
repz
cmp
arpl
repnz
cmp
or
es
mov
mov
xchg
jns
outsb
orl
mov
add
jb
sbb
and
shl
movsl
jae
div
stos
or
sbb
insl
adc
jae
jae
es
sub
cli
mov
sbbb
push
ljmp
or
jae
movsl
es
mov
mov
mov
testb
daa
sbb
clc
xchg
out
fcoms
add
jbe
cld
or
call
int
cmp
push
stc
cmpsb
arpl
dec
push
aaa
lock
xchg
call
fwait
fwait
fwait
jnp
xor
mov
jle
in
lret
fwait
fwait
mov
push
inc
xor
sahf
je
cmp
subl
mov
addr16
paddsb
dec
mov
imul
stc
mov
gs
dec
and
lret
jecxz
jae
repz
das
cmp
jge
jb
test
addr16
lcall
lock
icebp
dec
js
adc
jbe
in
sub
push
pop
js
xchg
inc
dec
dec
test
inc
pop
out
adc
cld
mov
imul
push
xchg
loop
insb
push
and
jbe
add
lea
mov
sbb
enter
in
hlt
pop
in
adc
mov
aam
mov
mov
push
loope
cltd
xchg
cmp
out
mov
jp
and
mov
xchg
xchg
movsl
jmp
jb
js
cmp
ja
test
adc
aaa
jge
outsb
mov
outsb
adcl
sub
and
data16
push
dec
ljmp
ljmp
inc
and
jnp
or
cmpsb
aaa
aaa
cld
sbbl
imul
aaa
push
pusha
inc
dec
pop
stos
xchg
ret
scas
fwait
fcmovnbe
test
mov
jbe
adc
sub
cmp
fnsave
ds
pop
outsb
clc
push
insb
adc
xor
outsb
cs
ret
bound
pop
stos
cmp
mov
mov
or
je
fwait
out
cmp
out
mov
mov
mov
iret
sub
dec
xchg
jae
jae
cwtl
into
shll
popa
jle
jge
addr16
xchg
inc
in
sbb
mov
and
sbb
test
jg
xchg
pop
push
pop
mov
mov
fdivrl
pushf
pop
and
out
adc
mov
enter
aad
cmp
iret
divb
js
fdiv
cmpb
mov
fwait
fwait
fwait
fwait
mov
mulb
test
popf
int
lahf
inc
rcrl
sub
jnp
mov
xor
outsb
xchg
xchg
fwait
mov
rcrl
mov
je
pop
aas
fwait
fwait
jmp
add
icebp
sub
ss
adc
jle
pop
push
pop
dec
jg
movsb
xor
cs
outsb
push
stos
jecxz
ss
aaa
push
adc
outsb
or
or
push
sbb
fdivrl
mov
jle
mov
in
mov
dec
jo
call
iret
int
xor
roll
lock
jle
pop
sbb
testb
flds
mov
pop
lahf
lock
jle
mov
jp
int
in
movsl
and
cmp
sbb
adcb
push
aaa
mov
xchg
fistpll
mov
cmp
inc
ret
and
push
loop
nop
and
hlt
jno
mov
xchg
mulb
cmpl
hlt
mov
jae
fnstcw
in
push
rcrb
xor
jae
xor
cs
out
es
outsl
mov
cmp
inc
arpl
inc
clc
or
je
inc
jae
loopne
xor
pusha
fisttpll
adc
aaa
mov
add
test
fildl
dec
daa
iret
ficoml
clc
ds
and
mov
pop
sbb
mov
mov
mov
pop
inc
jg
repnz
inc
sub
xchg
push
jae
jge
out
xchg
mov
adc
mov
pop
ljmp
pop
and
xor
idivl
sbb
jl
mov
stos
sub
mov
out
pushf
xor
jae
or
js
insb
mov
inc
mov
jns
jecxz
fwait
fwait
fwait
sbb
sub
sub
adcb
rcrb
xchg
or
mov
outsb
out
clc
mov
lea
xchg
push
adc
and
adc
arpl
push
pushf
xor
pop
xor
add
push
mov
scas
out
out
cmp
hlt
sub
ljmp
out
out
lret
std
jbe
jo
add
push
sbb
pop
rol
push
jbe
mov
in
sbb
mov
lock
lret
icebp
or
lds
and
xchg
je
inc
enter
jae
push
dec
sti
adc
jmp
fdivl
daa
xor
bound
jae
sahf
pop
xor
scas
pushf
aaa
repz
addr16
jae
and
pop
dec
pop
stos
je
loopne
aaa
in
jnp
loopne
pop
aaa
aaa
mov
push
push
dec
js
gs
xorb
aaa
aaa
aaa
aaa
pop
test
adc
xchg
inc
mov
mov
fbld
lahf
add
mov
andl
fcompl
pop
jp
shr
pop
xor
dec
jo
mov
xchg
test
push
or
int
ret
sub
test
jge
jae
xor
mov
adc
and
mov
loop
lods
mov
aam
leave
fs
sbb
out
fwait
xchg
outsl
pop
lret
or
stos
xchg
dec
incl
jl
fsts
inc
mov
jne
pop
mov
out
orl
mov
pop
lock
mov
pop
nop
sub
addr16
xor
xor
adc
les
mov
jae
stos
and
sti
push
push
fwait
sbb
ret
mov
or
call
dec
roll
push
mov
or
jge
mov
int3
or
loopne
hlt
pop
lock
mov
add
jp
movsl
mov
push
cli
mov
ja
lret
aaa
cmp
mov
aas
inc
out
mov
dec
cmp
shrb
and
dec
lahf
int
add
pop
cmp
fwait
or
inc
cwtl
out
adc
js
shr
pop
repz
mov
xchg
ficoms
cmp
gs
jbe
mov
dec
lods
sub
hlt
sbb
mov
mov
xor
add
add
or
fcoml
fnstenv
aam
andb
fists
out
sti
insb
mov
pop
test
adc
lret
out
mov
sub
xchg
adc
test
bnd
iret
out
adc
repz
jnp
xchg
jae
jae
lahf
xchg
mov
lahf
movb
fmuls
mov
loopne
dec
out
ds
test
jle
outsb
clc
bound
pop
pusha
mov
ja
sub
jae
jae
add
into
adc
xchg
int
int
or
bound
xor
rclb
and
iret
int
out
or
andl
sti
pop
sti
dec
xchg
mov
and
jge
int3
outsl
outsb
insb
aad
inc
outsb
push
lock
dec
jne
lcall
int
in
pop
sub
sbb
xor
lahf
int
int
aaa
fstps
not
jne
out
out
out
lea
pop
rclb
out
out
nop
xchg
inc
pause
push
pop
mov
ret
int
aas
adc
lret
push
cltd
daa
imul
int
fstpl
cmc
lea
dec
adc
xchg
mov
add
rcll
add
jnp
cmpsb
fiaddl
cltd
sbb
mov
dec
xchg
loope
ret
jae
mov
sbb
out
jae
jae
cli
xchg
add
lcall
and
jae
jae
repz
js
int3
das
fdivp
imul
ret
fwait
lcall
sbb
sti
enter
int
xchg
sub
mov
jae
loopne
sub
imul
leave
ret
xorb
mov
repz
cmp
push
push
jp
push
mov
ds
fwait
fwait
and
jns
outsb
or
inc
push
push
lret
cmp
or
fcoml
arpl
loopne
pop
out
pop
into
aaa
fbstp
pop
dec
out
out
xchg
pop
addb
lret
std
pop
notb
out
and
adc
mov
out
or
mov
out
out
xchg
or
fwait
fwait
fwait
push
push
in
sbb
addr16
pop
jno
jbe
jp
pop
aas
fwait
test
repnz
mov
lods
lods
iret
repz
cs
pop
or
jle
imul
ljmp
sub
lods
js
cli
pop
ds
imul
and
push
inc
add
add
aad
cmc
mov
or
data16
ret
push
cmp
lods
dec
sbb
fcompl
push
mov
js
and
mov
outsl
adc
stc
mov
rorb
lret
mov
mov
or
mov
repnz
jbe
fs
mov
push
jp
movsl
jnp
jge
decb
fdivrl
jo
jg
add
pushf
inc
mov
call
pop
xor
test
and
lock
jbe
push
xor
icebp
pop
mov
addr16
test
adc
imul
test
ljmp
fdivrl
aaa
mov
xor
adc
test
adc
stc
out
cmp
cld
out
jbe
scas
jae
jae
pop
imul
stc
cmp
nop
aam
incb
loopne
int
addr16
mov
mov
lea
cmp
int
int
mov
sbb
fstl
int
int
dec
pop
jmp
arpl
pop
aas
loope
xchg
mov
push
cmp
loop
push
jae
aaa
mov
fcmovb
inc
ja
dec
out
idivb
cli
fisubs
cmp
jae
ror
mov
jbe
std
adc
pop
jae
jae
xorl
pop
stos
int3
out
daa
ds
pop
aam
mov
jmp
dec
jno
cmp
push
cmpsl
adc
jae
mov
cmp
push
push
mov
xchg
mov
sbb
inc
sub
mov
cmp
push
cwtl
shlb
mov
mov
push
lahf
or
push
mov
jae
rcll
je
pop
fchs
fdiv
andb
jae
jae
icebp
and
cld
fs
mov
cmp
mov
sbb
jmp
les
loopne
sbb
stos
lods
add
inc
add
push
sub
push
dec
cmp
xchg
mov
sbb
mov
add
or
scas
jbe
clc
ss
jle
aad
sbbb
xchg
rorb
outsb
mov
int3
and
or
mov
jmp
mov
inc
pushf
push
ffreep
sbbl
das
mov
nop
lea
cmp
xchg
out
pop
xchg
pop
dec
loopne
std
icebp
xchg
outsb
outsb
outsb
xchg
or
xor
test
cmc
and
mov
sub
insb
pop
icebp
inc
mov
add
lds
adc
jae
and
cmpsb
add
add
in
jae
jae
ja
sbb
nop
mov
pop
movsl
out
daa
jae
jae
sbb
mov
imul
and
aad
ror
mov
arpl
mov
push
cwtl
lahf
clc
sbb
lret
cmp
mov
data16
mov
outsb
outsb
outsb
inc
mov
aas
dec
cmp
adc
mov
int
je
bound
ss
mov
call
orb
adc
sbb
add
ljmp
xchg
dec
das
sbb
fdiv
mov
push
in
addr16
sub
mov
fdivrl
int3
pop
popa
shlb
outsb
cs
lock
push
mov
aas
vmwrite
jle
cld
insb
std
and
dec
rcl
push
cmp
sbb
dec
das
jge
std
insb
xchg
jg
lea
mov
xor
xchg
testb
dec
push
mov
add
dec
ds
shll
xchg
fcmovnb
iret
mov
test
xchg
add
int
int
ret
mov
fwait
cmp
dec
loope
adc
sub
int
mov
shl
xlat
mov
cmp
sub
jecxz
push
jns
movsl
setnp
sbb
fimull
fwait
fwait
mov
add
outsl
cs
and
pop
push
aas
leave
orb
into
jle
in
ja
sub
sbb
fcomip
pop
or
out
xchg
xchg
mov
imul
mov
loopne
out
jbe
test
aad
add
js
pusha
gs
aaa
addr16
fwait
fisttpl
sbb
push
lea
outsl
in
jae
lock
lahf
fwait
pop
loope
loop
mov
enter
and
aaa
sub
lods
push
test
shll
pop
inc
les
adc
cli
or
mov
dec
ficomps
mov
outsb
cs
clc
adc
xor
add
dec
and
outsb
mov
or
ds
xchg
insl
push
mov
and
xchg
iret
int
int
inc
enter
leave
stc
aad
nop
adc
aaa
aaa
mov
cmp
aad
cmp
or
sbb
push
stos
or
xchg
lahf
sbb
stos
icebp
fsubrl
mov
fcomi
cmp
es
dec
inc
jo
xor
hlt
and
addr16
lahf
fwait
std
pop
into
mov
mov
add
movsl
xlat
mov
fdivr
int
idivb
cmp
scas
ficoml
out
icebp
cmpsl
stos
hlt
mov
repz
je
push
sti
push
pop
sub
fdiv
icebp
xchg
add
out
into
daa
sbb
pop
bound
lea
mov
dec
test
imul
add
leave
jns
xor
and
cs
outsb
outsb
aas
cmpsl
adc
sub
outsb
outsb
rol
mov
xor
push
mov
inc
shr
inc
pop
movb
mov
push
mov
push
gs
mov
into
pop
mov
add
mov
std
xor
mov
mov
fisubrs
mov
or
push
xor
mov
mov
repnz
loop
in
imul
and
sbb
fdivrl
test
mov
outsb
pop
loopne
push
or
mov
xchg
adc
fistl
push
adc
xor
fmull
fdivr
sahf
in
xor
out
pop
push
loopne
loope
ja
cmp
pop
cmp
jo
fisubrs
or
pop
sahf
fistpl
out
jnp
and
les
mov
in
insb
leave
pop
imul
mov
pop
shrd
and
int
in
adc
stos
andnps
xchg
aaa
or
cmpsb
jle
lods
fnstcw
and
ljmp
aaa
aaa
aaa
and
ljmp
inc
cmp
mov
pop
movsl
jbe
mov
orb
movsb
push
inc
push
push
lods
iret
int
mov
ss
jecxz
mov
or
test
mov
pop
mov
aaa
mov
xor
pop
jo
fwait
out
dec
lahf
push
clc
and
cmc
jnp
insb
jne
mov
icebp
sub
mov
mov
adc
ss
fsubrs
jno
pop
dec
fimull
mov
mov
or
gs
mov
mov
mov
leave
or
inc
mov
or
cmp
icebp
loopne
mov
pop
and
lahf
in
test
outsb
das
aad
in
leave
dec
mov
lock
mov
cmp
xor
cmp
lock
jns
leave
add
hlt
mov
mov
jae
jae
xor
repz
data16
pop
loopew
out
pop
push
adc
lods
out
into
or
jmp
inc
lcall
mov
xor
dec
cmp
insb
adc
out
pop
xchg
leave
lods
dec
adc
in
test
out
lret
push
xchg
stos
fwait
fwait
fwait
fwait
ret
mov
scas
faddl
into
test
mov
push
adc
fcompl
mov
jge
push
mov
mov
lcall
sub
daa
mov
nop
mov
divb
dec
in
fdivrs
jbe
fwait
fcmovnb
push
xchg
add
stc
adc
xbegin
sbb
fwait
sbb
bnd
sbb
xchg
adc
inc
inc
pop
test
hlt
jne
pop
rcll
les
scas
pop
imul
mov
dec
or
outsb
outsb
outsb
outsb
jg
mov
shll
add
xchg
out
rolb
cmpsl
cmp
mov
or
idivl
outsb
outsb
outsb
shrl
test
inc
dec
push
aad
outsb
outsb
outsb
ja
push
push
fsubl
add
icebp
xchg
xchg
es
fimull
sbb
fimull
cs
cmp
negb
sbb
cld
sbb
pop
pop
xor
mov
stc
fwait
fwait
fwait
sbb
push
and
test
loope
jp
mov
mov
pop
or
cmpb
push
cld
sahf
ss
xor
mov
icebp
lret
enter
sti
add
add
cmp
je
clc
fprem1
cmpsb
push
sub
cmc
xchg
or
ds
in
rcrl
sub
jge
stos
adc
or
cli
jmp
aaa
aaa
aaa
aaa
mov
cmc
orl
icebp
lcall
and
stc
or
sub
sbb
cmp
aam
bnd
mov
aas
ja
mov
cmp
pusha
mov
mov
fistl
repnz
add
sub
js
call
sbb
xchg
enter
cmp
lcall
fwait
add
xor
jae
jae
jl
arpl
or
inc
loopne
enter
sub
jae
add
cld
sahf
push
insl
pop
mov
add
movsl
sahf
fidivs
int
mov
out
iret
in
jae
repz
sub
dec
in
lods
pop
xchg
jl
ss
mov
jne
aas
or
test
adc
mov
lods
inc
xor
jae
jae
xor
and
inc
out
popf
std
insb
or
dec
adcb
push
data16
mov
cs
cli
adc
xchg
inc
mov
lcall
pop
push
ret
jp
shlb
outsl
lahf
imul
fwait
xchg
test
in
sbb
jnp
std
insb
outsb
outsb
or
es
movl
push
in
lods
gs
add
and
or
jecxz
and
je
cmp
pop
mov
js
mov
dec
push
enter
popf
fwait
fwait
int3
adc
xchg
lods
push
mov
jle
mov
sub
mov
sarl
icebp
outsb
sbb
and
fwait
jle
mov
sub
scas
call
fwait
fwait
jnp
das
fisttps
popl
cmpsl
lcall
outsb
ret
jno
sbb
mov
fprem1
fwait
add
or
cli
in
lods
iret
int
mov
dec
and
adc
xor
out
stos
addb
in
in
mov
out
jns
inc
repz
sbb
ret
push
out
hlt
sarl
shrl
xchg
jg
mov
add
adc
push
ror
es
addr16
out
lret
sub
mov
jo
fdivrl
add
cs
sub
shr
xchg
push
cs
ret
aas
lcall
fldcw
outsb
outsb
shr
rorl
dec
mov
pop
outsb
outsb
outsb
push
nop
int
sar
or
push
loope
int
aas
fildl
dec
mov
pusha
xlat
mov
adc
int
rcr
inc
sub
or
or
adc
jle
data16
mov
fimull
or
sbb
xchg
movsb
hlt
es
cmp
xchg
add
ss
pop
loop
xchg
ret
gs
imul
jnp
jl
rsqrtps
jmp
jae
jae
xchg
jl
xchg
dec
loopne
js
decl
mov
les
sub
jne
into
fwait
clc
fnstcw
out
in
jno
lcall
mov
xor
sub
lock
or
out
stos
sbb
fcmovne
and
fnstsw
nop
jbe
sahf
int
dec
mov
jp
sub
xchg
pushf
les
enter
mov
jl
cmp
xchg
jae
jbe
mov
fs
or
jae
shrb
mov
add
jnp
jl
push
inc
cmc
mov
pushf
push
mov
and
shll
adc
sbb
inc
sub
popa
jbe
jmp
adc
push
and
inc
shl
out
mov
fdivl
cs
adcb
loopne
inc
sbb
out
out
sbb
jno
pop
scas
out
xorl
out
xchg
xlat
push
xchg
daa
or
xor
fwait
fwait
pop
xchg
dec
inc
ss
xchg
sub
jge
cmp
les
mov
mov
enter
in
dec
mov
mov
mov
outsb
pop
xlat
js
cmp
cld
mov
fildl
ss
mov
lcall
cs
sbb
ret
lret
mov
insb
outsb
outsb
mov
push
xor
xor
es
add
arpl
pop
mov
push
jp
inc
lods
xor
in
fiaddl
aam
jle
pop
outsl
test
push
mov
add
mov
pop
hlt
cmc
daa
dec
mov
das
xchg
ds
sahf
push
inc
leave
rorl
adc
icebp
cmpsl
mov
repnz
shll
mov
fidivrs
aaa
aaa
aaa
aaa
add
in
hlt
xchg
out
addr16
mov
icebp
loop
mov
sarb
fdivrl
aaa
fcomip
cmp
adc
mov
clc
fxch
pop
push
lcall
daa
loopne
jge
outsl
add
jle
das
mov
add
popa
xchg
in
jmp
lds
leave
xor
mov
cwtl
ds
js
xlat
adcb
xor
pop
push
jle
iret
out
pop
fdivs
movsb
xchg
sub
mov
loopne
sbb
call
aaa
aaa
pop
fisubrl
in
test
jnp
add
ret
mov
addr16
ror
test
subb
push
ror
cmp
push
mov
scas
aaa
inc
popa
mov
in
jae
jae
test
jno
cmc
in
or
fistps
cmp
ds
pop
xchg
dec
push
cli
and
inc
in
mov
inc
push
data16
outsb
outsb
sbb
ret
sahf
cmp
or
ss
mov
push
les
cmp
test
dec
xchg
adc
jae
add
shl
xor
or
sbb
lods
out
lret
pop
aas
test
jmp
outsb
inc
sbb
movsl
inc
repz
or
daa
jl
ss
stc
inc
nop
push
push
mov
fwait
push
jb
mov
aam
cmp
push
cld
insb
sahf
sub
mov
test
and
cmp
mov
pop
xchg
sbb
sub
inc
xchg
lods
in
xchg
or
xor
imulb
pop
mov
xchg
pop
sbb
fwait
fwait
fwait
fwait
or
adc
out
push
fwait
fwait
int
mov
push
xchg
xor
adc
dec
xor
js
lahf
int
pop
jo
pop
scas
xor
gs
loopne
cwtl
fwait
sbb
movsl
mov
add
std
pusha
xchg
ds
mulb
sub
bnd
test
mov
mov
rcrb
fwait
jmp
nop
mov
call
incb
add
es
test
in
addr16
inc
ror
sub
or
int
pop
in
int
insl
adc
int
int
lea
mov
fxtract
adc
and
dec
dec
enter
pop
aad
lds
aas
xchg
jle,pt
mov
sahf
sbb
cmp
fs
pushf
pop
filds
outsl
repnz
shll
fadds
loop
sbb
out
push
pop
pop
inc
lods
fmul
cmp
pusha
jae
mov
outsb
xchg
ss
popf
pop
nop
cmp
orb
in
fildl
loop
popa
hlt
test
outsb
add
cld
insb
outsb
lahf
sub
push
call
aad
out
out
dec
leave
sbb
sbb
cmp
inc
mov
hlt
clc
aas
xor
lret
jae
jae
xchg
cld
pop
inc
shlb
sbb
fsts
ljmp
cmc
mov
push
ss
aaa
lods
or
mov
ret
jns
jnp
adc
lea
xor
xchg
cmc
jl
pop
outsb
hlt
loope
iret
mov
sbb
ret
test
sub
push
mov
xchg
mov
out
mov
cmpsb
push
dec
scas
and
add
add
mov
insb
pop
push
iret
dec
add
cmpsb
ja
jecxz
leave
sti
out
mov
dec
leave
ficomps
mov
jae
jge
test
pushf
aaa
aaa
aaa
mov
sbb
sahf
pop
xchg
pop
cmc
add
inc
rclb
mov
cld
shrl
mov
mov
ljmp
mov
cmp
clc
ret
out
xchg
aaa
aaa
ja
sub
mov
fwait
adc
js
bound
pop
imul
fs
sar
je
notl
out
dec
shl
add
mov
mov
arpl
cmp
pop
sbb
jbe
loop
sti
adc
pop
addb
int
int
jnp
mov
lods
dec
adc
iret
int
int
mov
push
or
subb
cmc
ds
test
scas
bts
fmuls
mov
int3
andb
dec
lea
call
lahf
mov
fs
loop
inc
orl
push
inc
fists
dec
lcall
or
or
inc
jl
jecxz
push
test
stos
mov
call
daa
xor
call
sahf
aam
sbb
mov
mov
mov
push
mov
xor
lods
sub
mov
mov
dec
lods
xorb
sub
and
dec
sub
adc
cltd
xlat
sub
mov
pop
push
inc
insb
in
xchg
mov
jne
outsb
push
out
out
pushf
clc
xor
les
mov
out
or
pop
sub
dec
xchg
out
out
das
daa
mov
or
gs
inc
lret
cmp
pop
shll
rorb
fs
std
out
dec
push
loopne
sub
pop
mov
in
pop
iret
andb
mov
add
movsb
lahf
inc
movb
std
jg
nop
cmp
jmp
cli
mov
add
adc
jae
fwait
sbb
insb
jns
sbb
or
cmc
xchg
lds
fidivl
insb
add
into
int
mov
lcall
inc
cmpl
int
push
and
adc
lahf
scas
subl
fcompl
jbe
xor
data16
outsb
outsb
outsb
outsl
xchg
test
outsb
mov
xlat
ljmp
sub
dec
popf
out
mov
pop
mov
ss
loope
cmp
das
movsb
cmc
movsb
cmp
mov
fsubp
mov
sti
sahf
adc
xor
sbb
jle
cld
jle
das
sbb
ret
or
jb
mov
shlb
mov
push
dec
insb
jmp
hlt
lods
inc
lahf
mov
out
push
andb
cmpsl
ds
into
push
dec
fsts
sahf
int
dec
jecxz
pop
pop
mov
mov
icebp
rcrb
adc
mov
testl
adc
jle
lods
wbinvd
rcrb
inc
insl
and
mov
aaa
mov
mull
lahf
fistpl
fadds
xor
dec
xor
mov
ret
adc
js
shlb
lods
stos
cmp
movsb
mov
push
fwait
stos
ds
jno
pop
popf
cmp
in
adc
popf
cmp
jge
cmc
dec
sub
adcb
lock
jp
addb
jns
arpl
or
add
repz
loopne
jae
jae
inc
mov
fisubrs
repnz
dec
push
in
addr16
jae
sbb
frstor
cmc
jno
pop
inc
iret
int
out
sub
xor
xchg
jp
imul
push
shl
testb
or
pop
movsb
push
popa
imul
jae
leave
xorl
sbb
jl
outsb
scas
in
inc
sahf
adc
sub
sbb
ja
dec
sub
jg
pop
pop
cmp
ficompl
jae
sub
dec
mov
cmpsb
int
int
enter
jmp
jge
es
fdivrl
add
xlat
mov
aaa
and
mov
flds
dec
subb
stos
cwtl
and
sahf
fstpt
jbe,pn
dec
and
aaa
aaa
aaa
aaa
into
mov
aaa
mov
xor
ss
lods
inc
inc
mov
es
pop
rorb
inc
cmp
arpl
jge
and
sub
in
jle
mov
jb
or
sub
fdivl
and
aas
pop
sahf
pop
orb
aaa
mov
and
push
test
mov
cmp
dec
jmp
fsubl
mov
mov
inc
sbb
arpl
xchg
mov
imul
pop
icebp
dec
call
lcall
jbe
bound
add
lock
aaa
aaa
aaa
in
mov
cmpsb
pop
shlb
aaa
aaa
incb
mov
or
dec
ss
aaa
aaa
inc
test
push
xchg
ret
addr16
add
dec
js
mov
out
cmp
inc
in
cmpsl
dec
es
mov
lahf
out
out
inc
std
xlat
dec
pop
mov
ret
aaa
mov
orb
sti
fwait
je
or
lock
aaa
aaa
pop
add
test
push
mov
cmp
aaa
push
lock
cld
sarb
dec
adc
add
or
stc
push
repz
jle
mov
inc
lret
ret
dec
or
jns
add
loop
int3
rcrb
fcompl
sbb
adc
push
stc
pop
fwait
fwait
jecxz
test
mov
je
lea
or
sbb
push
fcomps
pop
jns
push
jecxz
out
out
inc
add
and
mov
out
out
push
in
and
inc
pop
ret
mov
out
lods
test
mov
aaa
pop
jecxz
cld
or
mov
inc
scas
ss
aaa
aaa
loope
mov
in
lods
dec
divb
and
rolb
js
pop
test
into
inc
push
add
cmpsb
and
inc
js
mov
loopne
mov
sbb
xchg
mov
fsub
insl
mov
cs
stos
adc
jge
lahf
in
pop
pusha
mov
mov
adc
xor
test
mov
ja
inc
or
and
push
loop
fs
loop
sbb
test
cwtl
pusha
or
int
addr16
addb
mov
cli
dec
bound
loop
jle
mov
aaa
out
pop
cmp
sbb
aad
jnp
inc
je
aas
fwait
sbb
xchg
imul
mov
es
sub
addr16
cmc
call
mov
int
repnz
lahf
fldt
adc
out
xchg
popa
ss
faddp
adc
outsb
out
mov
rorb
sbbb
aaa
imul
cmp
imul
fwait
fwait
cmp
xor
jl
pop
loop
mov
aas
add
sub
sahf
push
clc
loop
nop
xor
xchg
or
pop
sbb
mov
dec
cmp
add
fwait
fwait
stos
mov
fdivrs
push
andl
stos
sbb
pop
sbb
movsl
sub
aam
gs
mov
xchg
stos
mulb
pop
mov
jmp
jle
xchg
cli
jns
adc
fcmovnbe
inc
rsm
jne
int
in
hlt
jo
jecxz
cmp
les
outsb
mov
ja
push
pop
mov
sub
out
out
cmpl
mov
cmp
xor
out
out
stc
jbe
mov
imul
mov
int3
pop
and
add
jmp
mov
adc
das
test
out
fcomps
mov
daa
xor
jae
aad
add
add
lret
enter
jae
ds
pop
js
mov
lods
clc
mov
lods
add
mov
and
out
and
mov
mov
xor
insb
cmpsl
sub
mov
sub
cmp
inc
jne
and
sbbl
mov
les
in
insb
fs
ficoms
xchg
stc
or
mov
sahf
addr16
xchg
ds
sub
clc
stos
inc
outsb
int3
xchg
into
mov
inc
scas
sbb
fmull
mov
out
cmpps
outsb
fdivl
pop
in
frstor
pop
or
rclb
in
bound
std
js
imul
mov
adc
cmp
sub
repnz
pop
mov
stos
jmp
fimuls
mov
pop
fs
cld
jge
cmp
aaa
std
out
lea
orb
std
loope
fsub
lret
xchg
pop
jle
rcrl
scas
ds
sbb
movsb
negb
shlb
nop
mov
loope
aaa
mov
inc
mov
rol
push
jecxz
xlat
sbb
jo
or
inc
cli
cmp
mull
cmp
into
cmp
cli
cmp
mov
push
lret
mov
cwtl
movsb
mov
xor
xor
jbe
pop
dec
out
out
lods
aad
pop
sti
push
test
add
in
sti
insb
mov
or
xor
pop
scas
add
mov
xchg
lret
xor
ret
adc
fwait
fwait
fwait
xchg
in
mov
or
fwait
iret
idivb
lods
mov
shlb
or
mov
out
out
adc
dec
lret
call
out
mov
stc
pop
pop
insl
lods
inc
pop
push
iret
out
sub
xchg
push
lahf
pop
mov
lcall
adc
pop
lock
fbld
test
test
orb
ret
mov
mov
jbe
xchg
xchg
pushf
xor
mov
mov
dec
cmp
add
adc
pop
push
ss
aam
xchg
cmp
mov
fwait
fwait
fwait
or
push
js
jecxz
or
shll
ds
jbe
xchg
outsb
stos
les
ds
mov
adc
jno
shrb
xor
jbe
jae
jae
xor
mov
es
cmp
shl
aaa
mov
out
dec
movsl
xor
aaa
mov
inc
inc
pop
pop
cld
imul
into
arpl
mov
push
call
pop
mov
add
sbbl
jnp
in
inc
and
out
and
jmp
fmull
mov
loope
rcrl
inc
hlt
movsl
cmp
pop
cs
pushf
in
lock
in
in
hlt
fadd
xchg
mov
fstpt
daa
in
jg
lods
inc
bt
xor
bound
outsb
xchg
fcoml
orb
add
cmp
push
fistps
mov
in
jae
in
sub
fldt
pop
out
cld
adc
fwait
mov
aaa
imul
mov
sbb
pop
xchg
lret
lret
cmp
aas
imul
mov
loope
sub
js
or
test
sarl
mov
clc
inc
js
pusha
mov
cmc
repz
divps
mov
addr16
mov
dec
aas
cmp
aas
shlb
out
out
or
dec
xchg
xchg
or
icebp
addr16
lds
push
test
inc
xor
mov
and
icebp
pushf
and
mov
and
mov
call
int3
mov
sub
dec
cmp
pop
push
jns
add
jae
jl
sahf
je
sbb
loopne
nop
mov
push
fcomp
push
mov
xchg
movsb
and
mov
lea
fdivl
sbb
cmp
fcmovnbe
push
aas
adc
outsb
scas
lock
test
sarb
rorb
cmp
outsb
outsb
outsb
outsb
sub
pushf
cli
fcoml
dec
popa
jl
outsb
and
das
push
adc
pusha
push
fisubrl
mov
scas
cli
lret
addr16
mov
maxps
inc
xchg
outsb
jecxz
subb
loope
or
bound
aaa
ds
cmp
add
movsb
dec
hlt
sahf
and
shll
test
dec
fdivl
jb
fdivrl
push
mov
adc
faddl
or
fstpl
mov
flds
lcall
data16
mov
pop
cwtl
loope
fcompl
into
push
mov
pop
xchg
inc
hlt
ss
in
dec
out
jge
mov
jb
fdivr
out
sbb
sbb
cmp
add
fsub
add
cli
stos
int3
sbb
jnp
mov
xchg
or
test
sub
out
lahf
out
xor
cmp
pop
lahf
andl
lock
int
shll
cmpsl
push
ficompl
dec
sti
outsl
int
int
jp
sbbb
push
cmpsb
inc
adc
int
imul
movsl
xor
adc
rclb
mov
xchg
cwtl
out
lea
int
in
addr16
ds
scas
jmp
int
int
mov
std
and
sahf
iret
mov
mov
inc
outsb
outsb
outsb
xchg
movsb
stos
out
xor
test
mov
lahf
mov
std
insb
outsb
outsb
push
cmp
fistl
aaa
ja
movsb
xchg
xor
or
daa
jmp
fdivl
sub
test
cmc
aad
sub
scas
mov
fwait
fwait
fwait
fwait
dec
jbe
js
dec
xor
push
xor
and
call
add
mov
mov
mov
in
jb
or
mov
mov
das
xlat
nopl
mov
mov
xor
cmc
jge
jle
mov
sub
fstl
clc
add
add
mov
fst
popl
out
stos
jo
js
xor
iret
idivb
inc
mov
jmp
sbb
mov
add
enter
sbb
fsubl
pop
shlb
sub
jae
jae
fadds
leave
or
test
cli
inc
push
jae
jae
jb
push
adc
fidivl
mull
jae
mov
sbb
shrl
testb
rclb
jle
lock
iret
mov
adc
cmp
xchg
out
icebp
mov
pop
xor
xchg
shl
out
cmp
fistps
bnd
pop
lahf
dec
add
stos
fdivl
mov
insb
iret
push
xchg
mov
mov
pop
les
inc
add
xchg
out
out
xchg
xlat
fs
mov
out
out
scas
sbb
mov
lods
je
adc
out
outsb
push
xlat
adc
fsubrl
outsb
cli
orb
je
inc
clc
daa
sub
ret
xchg
lret
test
mov
jnp
push
dec
jbe
push
mov
ss
outsb
lahf
fwait
fwait
push
xchg
mov
es
bound
cld
insb
iret
add
cmp
inc
or
shl
stc
in
pop
xlat
pop
dec
jbe
lret
loopne
addr16
mov
xchg
popa
lods
sub
jae
shll
cld
lcall
pusha
ret
cmpb
jo
aaa
cmp
cmpb
out
xor
jp
mov
scas
pop
rcrb
pop
lods
lahf
in
mov
xor
cmpsl
mov
xor
mov
inc
je
push
ficompl
call
add
aam
fwait
in
mov
test
ss
sub
and
cltd
mov
fistl
xchg
push
push
sahf
add
lret
xchg
and
aaa
aaa
aaa
shrl
dec
arpl
test
or
aaa
aaa
aaa
mov
ret
pop
pop
adc
sti
enter
jl
push
or
jae
cltd
scas
test
fnsave
xchg
dec
or
sub
bound
mov
sub
imul
jmp
mov
decb
push
dec
mov
pop
push
mov
dec
xchg
jbe
addr16
stos
mov
inc
jnp
mov
lock
shll
sbb
out
imul
nop
shl
or
sbb
hlt
std
ror
roll
add
push
outsb
mov
push
sahf
xchg
and
jle
std
ret
pop
mov
pop
jmp
clc
insb
out
cmp
add
into
and
or
adc
lahf
rcrb
jo
cli
jb
jae
shll
mov
dec
xchg
enter
push
les
mov
jbe
jl
adc
add
pop
cli
add
je
sbb
jl
jae
pop
jmp
mov
in
out
adc
push
icebp
imul
dec
dec
jmp
shll
out
lahf
sarb
push
shrl
out
jp
out
clc
cmp
jbe
pop
insw
adc
sbb
rolb
int
or
push
loope
test
mov
out
nop
mov
flds
fdiv
cmp
or
sbbb
out
outsl
loope
mov
rolb
push
cli
mov
fdivrl
iret
outsb
in
movsb
and
sbb
fistl
cld
in
cli
js
push
adc
out
inc
cmpsl
push
gs
aaa
mov
sbb
mov
inc
loop
jo
cmp
adc
fsubrs
aam
clc
cmp
sbbb
pop
fdivs
ds
pop
outsb
cld
ljmp
mov
xor
bound
or
je
cmp
fdivrl
out
sbb
iret
bound
sar
jae
push
cmp
sub
sar
mov
cmp
xor
mov
ds
test
fistps
int
test
dec
in
outsb
lcall
mov
inc
add
out
iret
xchg
out
dec
ret
sti
into
out
scas
iret
push
lret
loopne
into
cli
jae
mov
jle
ss
out
in
and
out
divb
mov
dec
push
out
fsubl
out
out
nop
scas
pop
out
sub
cmc
cmpb
lahf
fcmovne
adc
mov
jbe
lds
fidivrl
sysenter
push
iret
or
or
and
push
or
xchg
pop
stc
jae
out
out
mov
mov
cmp
jnp
outsb
push
out
shlb
sbb
dec
scas
ficomps
jl
ljmp
pushf
cli
insb
outsb
pop
fiadds
fwait
neg
or
setg
out
sbb
aam
cmp
adc
add
jae
jae
rclb
dec
stos
jle
push
loope
lahf
in
jae
pop
adc
inc
test
addr16
pushf
aaa
aaa
aaa
mov
insb
dec
inc
insb
push
cli
xor
jl
cmpsl
cmp
aaa
sub
mov
fbstp
cmp
or
xchg
adc
jnp
cmp
call
out
or
pop
jle
jl
sbb
push
arpl
imul
lods
lahf
mov
mov
pop
mov
xor
jns
imul
mov
xor
popf
shlb
jae
ss
andl
shrl
xchg
jns
sarl
jae
jae
mov
std
or
jmp
aaa
add
and
leave
ss
xchg
ljmp
mov
scas
jo
xor
sarb
sub
outsl
mov
out
out
daa
test
mov
out
out
popf
daa
sbb
pop
adc
add
xor
mov
push
or
outsb
ss
dec
pop
aam
pop
push
mov
out
orl
cltd
popa
jae
ror
test
cli
aas
xchg
jnp
mov
xchg
ret
mov
loopne
xchg
mov
and
into
bound
sub
mov
mov
jmp
in
sbb
mov
ds
loop
jae
mov
dec
or
mov
scas
adc
dec
pop
pop
clc
push
out
aad
mov
fcmovne
jbe
mov
or
mov
aad
xchg
cmpsl
test
push
lahf
xor
gs
into
mov
outsl
jl
shlb
ss
mov
push
sbb
fwait
adc
push
adc
push
cmp
dec
icebp
mov
sbb
mov
pop
inc
adcl
xor
int
int
pop
pop
addl
into
push
xchg
xchg
popf
xor
mov
mov
push
cld
insb
outsb
dec
xlat
jnp
sbb
cltd
sub
jnp
jl
movsb
mov
cmp
mov
push
leave
pop
pusha
dec
shlb
pusha
inc
sbb
xchg
mov
adcb
out
out
test
dec
aas
jae
sub
sbb
out
cli
loope
int
enter
jge
cld
xlat
mov
xlat
shl
push
cmpsb
enter
cmc
or
out
idivb
in
test
push
lods
cmc
fstpl
cltd
inc
sbb
in
mov
mov
adc
pusha
loopne
outsb
mov
add
pusha
push
inc
mov
dec
sbb
outsb
outsb
outsb
cmp
xor
xlat
xchg
xchg
outsb
outsl
cmp
in
jae
jae
out
pushf
negl
xchg
mov
xchg
cmp
sahf
fwait
pop
in
incl
jmp
push
aad
mov
jle
xchg
pop
arpl
mov
mov
sbb
loopne
jge
and
sahf
jnp
std
push
scas
xor
pop
lods
iret
int
add
shl
mov
test
sahf
out
jbe
mov
or
sub
ficoml
sub
aaa
pop
std
push
jbe
push
mov
adc
fnsave
or
insb
outsb
mov
adc
daa
mov
inc
aaa
pusha
sub
enter
out
mov
hlt
loopne
in
nop
cli
fstps
lahf
jbe
aaa
aaa
mov
inc
cmp
sti
out
mov
bound
ss
pusha
loopne
repz
out
or
icebp
and
js
out
out
add
xchg
lods
xor
inc
out
test
out
sub
pusha
jg
adc
mov
lods
jp
push
repz
mov
mov
and
in
insl
movsl
cmc
mov
adc
push
int
lahf
fisttpl
arpl
jl
xor
xorb
jnp
ret
int3
es
xchg
dec
orb
mov
shl
int
mov
nop
stos
or
pop
pop
adc
or
dec
add
aaa
aaa
aaa
cmpsl
popf
xor
adc
sub
pop
ss
aaa
aaa
jp
not
lea
inc
xchg
and
sbb
inc
aam
or
scas
aaa
mov
clc
dec
jge
das
jecxz
out
shrb
fsubrl
cli
jge
sub
and
mov
iret
mulb
subb
mov
jbe
push
out
mov
aaa
loopne
scas
shlb
jge
outsb
outsb
in
dec
mov
xor
push
mov
movsl
mov
imul
jae
aad
pushf
cli
push
mov
jmp
jl
es
bound
rorb
adc
xchg
mov
popf
in
jae
scas
aas
stos
sbb
sbb
shll
jne
xor
mov
lock
jmp
loop
pop
cld
nop
mov
outsb
outsb
outsb
outsb
mov
and
stos
jmp
inc
xchg
xchg
jge
int
sub
fimuls
jae
dec
xchg
add
push
add
add
int
mov
shll
xor
mov
mov
mov
aaa
jp
in
xorl
xchg
ja
movsb
idiv
ljmp
outsb
cli
pop
subb
xor
out
std
add
inc
adc
sbb
aaa
aaa
push
mov
adc
aas
cli
xor
or
insb
xor
shl
inc
xchg
xor
jae
jae
xor
shr
cmp
loope
jae
jno
push
mov
fdivr
iret
cs
pushf
ret
inc
popf
cmp
jo
aam
insb
pop
push
testb
mov
adc
out
out
in
inc
int
mov
jns
aad
out
out
lret
daa
push
and
cwtl
cltd
mov
out
out
or
push
and
stos
add
fcmovne
loope
mov
ss
in
push
xor
push
imul
jae
cmpsb
xor
test
loopne
sahf
jae
jae
pop
jns
aad
repnz
jg
xchg
out
jnp
jae
xchg
dec
rclb
mov
in
loop
int3
test
mov
cld
cmp
add
int
int
mov
test
arpl
aaa
mov
fcoml
sub
pushf
loopne
mov
test
mov
mov
lahf
fisttpl
dec
movsb
xchg
icebp
pop
add
fsubl
inc
mov
sti
ss
sub
je
cmp
cmc
mov
loop
gs
inc
sbb
lock
sti
lret
mov
mov
int
in
int3
mov
push
sti
dec
pop
aad
or
int
int
mov
pop
jne
push
mov
push
int
int
lret
rolb
aas
xchg
aaa
aaa
mov
inc
push
xor
sub
pop
mov
subl
inc
and
pop
fcompl
adc
jg
sub
loop
dec
rclb
push
sahf
pop
or
aaa
or
shr
les
mov
push
stos
adc
mov
add
mull
adc
sti
jge
outsl
fiadds
sbb
mov
mov
test
out
jae
popf
movsb
sbb
fsts
ja
mov
aad
imul
subl
jnp
adc
cmp
ret
pop
iret
out
pop
push
xor
es
and
mov
mov
mov
or
dec
jecxz
and
xor
pop
sbb
mov
out
into
or
mov
fsubrl
mov
mov
mov
add
sbb
jge
mov
aaa
push
sar
mov
in
pop
mov
and
mov
jle
aaa
aaa
out
inc
ret
xor
xchg
fwait
cmp
add
in
es
mov
enter
mov
int3
jae
jae
dec
jbe
inc
and
bound
mov
fdivp
jl
ss
cli
icebp
and
jl
bound
and
fcomi
sub
sbb
push
fidivrs
push
btr
daa
pushf
push
jl
mov
subl
sahf
adc
je
cmpsb
xor
push
fisubs
ljmp
les
int
jne
adc
dec
or
aas
or
xchg
mov
cli
pop
lods
int3
mov
ljmp
push
sbb
jge
mov
jmp
stos
lret
ss
aaa
aaa
xchg
dec
mov
and
ja
sub
fdivrl
ds
std
popf
ja
insb
dec
xor
jne
cld
mov
mov
pop
push
fcoml
cmp
les
lea
adc
jne
push
mov
mov
mov
ljmp
std
adc
inc
mov
mov
stos
dec
rclb
jmp
push
xchg
sub
out
out
jne
or
test
xchg
mov
inc
mov
sti
pop
xchg
repz
xor
ljmp
ljmp
jge
pop
sahf
jp
and
ror
fwait
bound
cmp
push
leave
mov
adc
jge
stos
adc
mov
pop
mov
hlt
cmp
push
mov
sbb
pop
call
cmp
mov
sar
loopne
mov
dec
cmp
sarl
pop
call
pop
cld
call
jae
popl
xorb
outsb
test
pop
push
cmp
shrl
fldenv
xchg
lret
mov
loopne
cs
inc
mov
aad
xchg
mov
sub
sarl
and
fsub
mov
call
sbb
les
lock
xor
mov
enter
mov
jo
dec
aaa
aaa
adc
out
js
jle
aaa
push
mov
fimuls
int
add
and
push
stc
cmpsb
xor
jmp
jnp
out
lahf
ljmp
push
movsb
leave
div
pushf
ffreep
mov
cmpsb
xchg
sub
xchg
lods
sbb
inc
out
cmpsb
mov
inc
iret
xchg
movsl
sub
dec
mov
ret
dec
mov
jg
xor
dec
xchg
xor
shlb
leave
push
pusha
clc
ret
je
push
decl
inc
cmp
jb
xchg
inc
jle
fsub
jns
outsb
outsb
outsb
mov
jne
mov
insb
outsb
outsb
outsb
aam
loope
arpl
mov
jge
std
daa
movb
fs
jl
fistl
pop
xchg
inc
push
inc
lods
or
fdivrl
mov
mov
insl
adcb
jae
or
mov
xor
in
jg
mov
mov
dec
ret
bound
lock
pop
mov
shlb
loop
hlt
stos
mov
and
fdivrl
stc
adc
adc
push
and
jge
clc
mov
adc
pop
and
imul
lcall
push
sti
fs
xchg
mov
xor
jae
pandn
xor
imul
mov
jae
insl
movsb
mov
sbb
lea
cmp
mov
jp
and
shlb
jo
loop
mov
sahf
xchg
outsb
mov
cs
test
mov
in
jge
outsb
outsb
adc
xchg
adc
jle
in
xchg
mov
inc
ret
mov
fwait
fwait
cmp
push
repnz
enter
outsb
outsb
outsb
xlat
pop
sti
and
cmpsl
mov
mov
mov
jbe
call
ljmp
sbb
mov
rorl
gs
push
push
rol
mov
cmpl
dec
nop
shll
xchg
mov
stos
jmp
and
int
aas
add
adc
mov
stos
sbb
loop
int
int
stos
fbld
pop
or
cmc
cmp
into
int
scas
imul
ds
mov
daa
sbb
push
mov
lock
fnstcw
imul
sbbl
addl
mov
ret
jae
sbb
dec
loope
push
jae
shl
js
and
dec
bound
inc
aas
lods
out
mov
jnp
xchg
inc
outsl
dec
add
add
add
clc
mov
sti
sahf
inc
sub
inc
mov
inc
call
ljmp
mov
lahf
dec
mov
fdivrl
test
dec
test
out
or
in
addr16
psubb
insb
cli
ja
xchg
stos
ds
cmp
cmp
push
into
push
jl
outsb
or
xor
cltd
js
dec
inc
lret
rolb
sbb
mov
repnz
aaa
mov
sbb
pop
fistpll
ss
inc
and
fwait
sbb
cmp
addr16
pop
shr
les
loope
xor
mov
cmp
cmp
inc
pop
adcb
add
fisttpl
shl
jae
aaa
aaa
aaa
mov
cld
sbb
jge
push
cltd
mov
jmp
aaa
aaa
pop
and
dec
push
mov
cmc
fs
fistl
sahf
fwait
fwait
fwait
sub
leave
sub
mov
sbb
sbb
clc
sbb
test
aaa
aaa
aaa
aaa
pushf
and
ss
lret
sbb
in
and
divl
ss
fdivs
dec
adc
mov
loope
notl
sbb
adc
push
cli
xor
aad
fmulp
mov
int
mov
xchg
arpl
nop
aad
addb
int
aas
lret
mov
fwait
lcall
int
xor
mov
sar
add
movq
cmp
and
mov
fsubrs
pop
mov
adcl
outsl
movsl
cld
leave
sbb
into
sarb
hlt
jecxz
test
movsb
pushf
scas
out
gs
les
out
lods
push
mov
icebp
stc
sbb
or
jo
mov
lds
and
pusha
sbb
jp
cmp
jae
test
mov
aam
add
jae
push
das
loope
es
xchg
out
mov
mov
sbb
test
mov
xchg
out
jns
or
fnop
adc
push
mov
out
dec
sahf
or
cmc
je
jle
adc
pop
aam
hlt
scas
mov
pop
rcl
arpl
shl
mov
inc
sti
scas
cmp
mov
call
or
inc
ds
out
and
push
andb
clc
jl
or
clc
out
in
loope
xor
sbb
hlt
movsb
adc
and
xchg
xor
push
dec
das
adcb
fdivrs
imul
es
mov
js
add
pop
outsb
cs
pop
fsubr
inc
xchg
outsb
outsb
outsb
xor
repz
xchg
cmpsb
jno
pop
outsb
outsb
outsb
jmp
aad
jg
jno
xor
in
jae
jae
add
pushf
dec
mov
dec
cld
addr16
cltd
mov
fs
out
sbbb
and
ljmp
fcomi
pminub
js
lcall
insb
outsb
leave
aas
mov
fiaddl
mov
adc
movb
addb
fwait
mov
popa
adc
ret
aam
fwait
fwait
fwait
and
or
enter
call
shrl
xor
or
mov
add
fwait
or
xchg
mov
imul
xor
fwait
fwait
fwait
fwait
into
sbb
das
or
fwait
push
fisttpl
out
lods
fldt
sub
aaa
jl
sahf
stos
outsb
int
sbb
out
mov
mov
es
outsb
dec
ret
xor
movsl
mov
xor
jge
outsb
dec
jae
cmpsl
ja
mov
xchg
test
hlt
mov
loop
inc
ds
rolb
jns
and
in
sti
rcl
mov
cmp
push
adc
push
into
xor
add
into
add
popa
int
jae
ds
pushl
fisubrl
in
push
nop
int
addr16
lods
push
imul
jbe
imul
lahf
fistl
lods
xor
loopne
sbb
outsb
sbbb
into
int
push
pop
mov
iret
divb
cmp
mov
fildll
pop
mov
mov
jne
mov
es
xor
mov
stos
rolb
cs
jns
loop
int
dec
inc
cli
insb
outsb
cmp
sbbl
in
jecxz
pop
xchg
arpl
and
pop
fsubl
sub
mov
repnz
adc
out
out
lock
aam
mov
dec
out
out
loope
mov
push
adc
push
out
out
xorb
xorb
out
repnz
pop
mov
sub
dec
cwtl
jl
pop
popa
mov
add
fmull
and
jns
lahf
in
sbb
or
ja
stos
hlt
test
jle
mov
xor
xchg
sbb
xor
outsb
outsb
scas
cli
adc
adc
popf
bound
rorl
outsb
mov
lret
or
fstps
dec
or
push
scas
popf
aas
lods
clc
jle
andb
ljmp
pusha
fwait
fwait
fwait
stos
push
adc
das
and
mov
outsb
out
sbb
ficomps
jnp
inc
sahf
in
mov
xchg
ds
in
push
shll
jae
push
paddd
mov
rol
test
daa
jae
rcll
mov
sbb
sti
out
mov
mov
scas
insl
sbb
js
aaa
mov
clc
pushf
jp
mov
jp
scas
clc
sbb
or
mov
push
xor
cmc
insb
outsb
outsb
pop
jno
shr
and
mov
bound
mov
fisttpll
hlt
pop
xor
in
mov
cli
inc
xchg
jnp
fdivs
sbb
fnstcw
pop
scas
jle
clc
or
dec
jbe
aaa
pop
insl
lock
cmc
addr16
fs
sbb
jnp
cmp
jge
push
or
xchg
mov
jae
jae
pop
xchg
and
pop
ja
testl
rcrb
ret
jbe
xchg
int
or
bound
out
adcb
jne
mov
mov
sub
test
push
pushf
mov
sbb
loop
pop
rcrb
dec
push
aad
in
pop
mov
das
je
out
xchg
rolb
test
jae
negl
outsb
lcall
sbbl
icebp
push
test
fstl
fsubl
ss
loopne
xchg
push
sub
xchg
lret
dec
or
xchg
pop
pusha
fs
test
inc
adc
dec
movswl
inc
and
fdivrl
loopne
jecxz
pop
dec
cmp
mov
inc
sub
jae
out
ja
repnz
xchg
popl
mov
dec
jb
lcall
pop
lods
andl
int
mov
mov
loope
or
inc
pop
dec
sti
lret
int
std
xchg
jp
mov
mov
sbb
adc
jae
xchg
adc
lret
not
xchg
js
pminsw
mov
jmp
lahf
sbb
scas
sub
push
fs
iret
out
and
clc
cs
dec
fnstenv
pop
mov
fisttpl
sbb
les
sbbb
sbb
mov
fldenv
mov
jp
repz
ficoml
shlb
xor
test
sbb
sahf
clc
mov
fnstsw
outsb
outsb
std
imul
jmp
mov
cmp
push
popl
jmp
and
push
sub
mov
adc
sub
addr16
hlt
mov
cmp
les
fsub
xlat
dec
dec
sub
jp
xchg
incb
out
shl
addl
push
jo
pushf
inc
cmc
in
mov
ret
mov
mov
jmp
es
ror
lock
fsubrl
sub
and
jle
pop
subb
cmpsl
sub
ret
adc
cs
jmp
sub
outsb
lock
outsb
cmpl
addr16
mov
insl
add
call
push
dec
xchg
into
cmpsb
imul
jae
sti
test
push
mov
rorb
sbb
mov
lcall
movsb
andl
or
dec
scas
cmpl
or
jmp
fwait
pop
repz
adc
push
out
xorl
es
sub
incl
out
mov
mov
add
adc
out
out
shll
and
jb
iret
out
pushl
xor
cmpb
mov
jge
outsb
outsb
es
stc
mov
xchg
push
icebp
pop
lock
roll
jecxz
mov
jae
pusha
iret
int
push
mov
xchg
mov
rorl
mov
repnz
jae
loopne
sub
jl
dec
mov
scas
mov
mov
int
mov
dec
test
xchg
jmp
and
gs
imul
dec
add
aam
cmp
cli
inc
add
push
sti
mov
in
push
clc
mulb
dec
xchg
call
mov
es
int
push
cld
insb
jl
cli
sub
ret
sti
insl
hlt
imul
scas
mov
int
in
jae
sub
mov
and
or
aam
add
ret
aas
mov
ljmp
jne
iret
int
ljmp
pop
frstor
push
outsb
cli
fcoml
jp
jge
sub
mov
mull
sbb
in
dec
cmp
push
shlb
loop
lret
fisttps
cmp
out
aad
jno
push
mov
loopne
pop
ret
sub
adc
dec
cmc
dec
xor
and
outsb
outsb
sbbl
mov
xor
mov
cltd
ret
adc
outsb
mov
clc
xorb
insl
xchg
cmp
mov
add
mov
xchg
cmp
pop
into
repz
int
mov
sarl
cmp
enter
fwait
sbb
jle
cwtl
push
loop
xorl
adc
add
jle
mov
les
xor
sahf
int
int
xchg
shr
sti
cmp
movsl
fildl
out
clc
ds
leave
push
pop
jbe
mov
ja
pushf
jo
outsb
outsb
xchg
ss
lock
pop
xor
push
out
divb
sub
jge
bound
out
out
mov
mov
sub
fwait
out
in
out
out
or
push
js
mov
jbe
ret
and
jae
inc
xlat
std
add
adc
aam
imul
jae
jae
shlb
lods
cmpsl
inc
je
jne
addr16
mov
or
jae
mov
stos
lds
out
xor
loope
jae
or
jge
mov
mov
pop
adc
push
mov
mov
scas
rolb
lahf
add
cmp
mov
out
test
sarl
dec
jbe
in
xor
add
mov
test
shll
push
mov
in
xchg
cmp
int3
mov
xor
stc
sbb
iret
lods
rclb
arpl
add
clc
and
loopne
jae
sahf
scas
cli
jnp
pop
hlt
test
roll
lret
test
js
fs
dec
aad
xor
in
jmp
nop
push
fsubr
clc
fnstcw
lret
ss
mulb
mov
jl
inc
mov
jge
outsb
inc
movsl
cwtl
aad
push
std
test
and
jp
dec
dec
inc
mov
sbb
jge
fldl
sbb
cli
fildl
fdivrs
mov
xchg
mov
and
mov
jge
lret
ljmp
jle
mov
push
adc
adc
mov
repz
stos
out
mov
inc
sub
mulb
jle
or
out
mov
out
or
idivl
adc
dec
push
lds
insl
int
int
inc
or
sbb
mull
out
ror
int
int
jo
mov
iret
mov
int
icebp
cmp
xchg
jne
cmpsb
adc
js
iret
mov
xorb
cmp
lahf
jp
lret
mov
pop
test
arpl
pop
jbe
repz
cs
jmp
in
or
push
jnp
rolb
xor
aaa
aaa
dec
cld
xor
and
mov
and
cmp
or
or
mov
mov
cmp
and
stc
int
lahf
clc
xchg
ljmp
int
int
cmp
sbb
aad
movsl
lahf
int
lods
lods
jecxz
jbe
add
sahf
xor
push
test
js
les
mov
cmc
insb
outsb
outsb
push
fs
cwtl
out
mov
and
pop
mov
cs
pop
arpl
mov
jae
js
xlat
jle
icebp
and
jae
iret
out
negb
and
addb
inc
jno
xchg
js
addr16
lods
cmp
out
out
push
jl
nop
push
imul
fbld
push
outsl
adc
fs
add
cld
jbe
in
in
pop
repnz
orl
fwait
fwait
std
imul
cmp
mov
and
sti
mov
notl
andl
imul
ljmp
cmp
out
dec
adc
pop
dec
fdivp
std
insb
pop
ret
xchg
mov
push
sbb
mov
ret
push
push
cmpsb
push
adc
outsb
mov
jae
cmp
adc
mov
iret
inc
lahf
xchg
mov
push
fcompl
int
in
pop
lcall
icebp
sub
mov
inc
insb
movsl
testb
adc
jle
push
jbe
xchg
pop
or
test
pop
hlt
stc
fnstcw
jno
push
loope
sar
mov
loopne
push
data16
loopne
dec
mov
lds
inc
out
shlb
xchg
cs
outsb
jle
aaa
fldt
gs
lds
cmp
outsb
stc
cmp
push
ds
aaa
mov
jb
outsb
and
jae
lock
jb
cmpsb
mov
mov
adc
mov
int
unpckhps
cmp
sbb
inc
sbb
out
out
or
in
enter
in
sahf
jb
mov
out
out
dec
xchg
int
jge
xchg
sbb
cwtl
rclb
movsb
sub
cmp
ds
subb
mov
add
loopne
jae
xor
sti
jge
sbb
jbe
std
mov
mov
addr16
push
repnz
not
lds
pop
test
int
int
fsubl
push
pop
mov
push
int
int
pop
shll
xor
or
loope
lock
int3
rolb
out
xor
mov
and
cmc
adc
xor
sbb
jne
mov
out
xchg
adc
out
xor
inc
inc
arpl
xlat
orb
xchg
xchg
jo
and
pop
add
mov
and
xchg
pop
xor
fwait
adc
stc
cpuid
push
lock
mov
dec
cmp
jge
cmp
outsb
xchg
fwait
movsb
fnsave
lret
sbb
ss
fists
js
xchg
dec
xor
jecxz
sti
nop
add
lret
push
cld
hlt
sahf
lock
in
clc
adc
add
int
add
les
dec
in
pop
add
sti
jle
mov
test
adc
inc
cmp
jae
js
jne
enter
enter
out
scas
out
lock
push
or
out
adc
repnz
int
int
fiadds
outsl
je
inc
out
xor
mov
aaa
push
jae
popa
out
dec
pop
xchg
mov
mov
jge
cmp
mov
outsb
scas
mov
jae
adc
aam
mov
insb
outsb
outsb
outsb
lret
lea
outsb
nop
in
and
adc
pop
mov
pop
aam
addr16
stos
jle
jae
jae
cli
outsb
jbe,pt
sti
fbld
mov
dec
push
jb
repnz
xchg
adcb
push
nop
jb
sti
dec
mov
mov
or
in
jae
pop
hlt
aas
push
ret
push
popa
pop
mov
mov
int
jae
jno
push
mov
inc
shl
out
out
test
clc
loope
sbb
lcall
out
adc
out
adc
nop
pop
inc
pop
fcomps
or
push
fisubrl
mov
aas
or
xchg
mov
outsb
mov
xchg
fdivrp
xor
bnd
dec
inc
enter
cld
push
movsl
xor
es
aaa
jg
dec
push
push
push
dec
sub
outsb
clc
fdivrl
push
lret
mov
adc
xorl
dec
mov
fsubr
je
mov
ja
lods
rcrl
mov
jmp
scas
or
push
push
and
test
sbb
push
xchg
ficompl
fldt
fs
in
add
xor
lcall
fwait
test
aas
push
cmp
xor
loopne
fsubs
mov
mov
sbb
lret
xor
out
inc
sbb
xor
mov
outsb
outsb
jle
scas
dec
inc
xchg
pop
and
repz
adc
mov
test
push
mov
int
pop
lock
inc
loopne
bound
aaa
mov
outsb
mov
cmp
xchg
push
cwtl
repnz
jmp
fdivrl
aas
sub
sub
scas
inc
sar
mov
push
cmp
popf
cmpsl
nop
mov
dec
jecxz
dec
or
data16
jno
outsb
rcrb
mov
jl
adc
dec
loope
xor
jae
insb
fimuls
push
filds
mov
loopne
dec
and
lret
ds
sarb
fisubl
mov
or
addr16
sti
gs
mov
and
out
imul
scas
mov
mov
ret
into
out
out
je
pushf
mov
push
xor
movsb
ss
jbe
iret
in
jae
insb
cmpsb
or
cmp
pop
lods
popf
pop
pushf
fwait
or
mov
call
sub
aaa
push
jl
xchg
rcll
and
mov
and
pop
xchg
fwait
cmp
dec
imul
fisttpl
inc
bound
pop
ja
add
add
mov
xor
imul
mov
int3
mov
fwait
sub
inc
pop
iret
pop
hlt
inc
pop
or
int3
cmp
and
in
leave
clc
ds
ss
in
xor
int
xchg
stos
sub
mov
inc
or
int
xchg
stc
mov
das
cld
push
or
xchg
pop
aaa
jp
lds
bound
aaa
aaa
inc
jl
pop
mul
mov
ja
out
mov
jmp
nop
mov
dec
pop
sub
ss
xchg
adc
leave
rcrb
cmpsb
cmp
or
inc
jnp
data16
outsb
outsb
outsb
adc
stc
cmp
test
outsb
negl
outsb
outsb
outsb
jp
test
push
and
in
pop
jae
outsb
outsb
outsb
enter
mov
filds
outsb
sbb
xchg
mov
xchg
cmc
test
fisubrs
xchg
jbe
out
xor
dec
jnp
in
xchg
je
adc
jle
test
fdivrl
test
cmpsb
negl
and
jo
dec
dec
rolb
and
pop
mov
and
jbe
aam
fstps
sbb
adc
jae
xchg
sbb
ja,pn
pop
out
pop
sahf
xchg
daa
mov
dec
push
shlb
ret
into
repnz
shlb
jae
add
xor
pop
ds
jle
aaa
aaa
bound
vmovapd
lock
mov
hlt
dec
mov
cmpsl
aam
clc
mov
jg
and
sarl
sub
mov
xor
xchg
mov
fisubl
inc
jge
mov
jmp
sub
rcll
push
fisubs
push
ret
mov
jae
fnstenv
push
pop
stc
daa
add
mov
or
mov
out
out
clc
call
push
adc
jg
mov
fiaddl
fmul
int
int
imul
bound
dec
adc
inc
aas
hlt
lret
sub
fdivrl
popf
dec
movsl
jg
or
jae
jae
out
mov
adc
or
sub
jae
jae
lahf
out
daa
sub
mov
cwtl
push
repnz
dec
mov
fidivs
add
movsb
and
jp
fists
cs
push
push
call
outsb
cwtl
xchg
mov
or
leave
mov
data16
push
daa
lds
jb
orl
jae
pop
xor
cmpsb
je
jae
ret
pop
or
dec
cmp
jp
push
mov
xor
dec
mov
lods
add
mov
addr16
loope
cwtl
daa
inc
in
jb
or
pop
shlb
sbb
sbb
fldt
pusha
outsl
pop
sub
aad
lret
out
xor
dec
sub
mov
cmp
aas
stos
sub
ret
test
xor
outsl
int
int
dec
inc
jg
mov
out
gs
sub
lret
int
add
xchg
es
adc
push
cmp
out
out
cmc
pop
pushf
scas
pushf
les
sbb
sub
mov
pop
lods
fs
das
jbe
xchg
xchg
rcl
and
mov
pop
jns
or
mov
sti
lea
jns
icebp
adc
mov
mov
bound
fmuls
sbb
das
mov
pusha
ror
or
int
int
nop
and
push
xor
lahf
adc
and
roll
sub
fisubs
mov
mov
dec
pop
cmp
sahf
adc
aaa
aaa
aaa
fmuls
jecxz
bndstx
xchg
ret
and
fdivp
and
jb
pop
mov
push
pusha
mov
sub
push
jbe
add
fwait
fwait
fwait
scas
pop
xor
sub
adc
sbb
fwait
cmc
jle
movsb
sbb
sbb
ficoms
into
pop
jb
test
or
test
add
fwait
fistpl
out
inc
lret
jl
imul
xchg
sbb
push
jb
pop
ds
popf
jns
cmp
out
jp
mov
mov
in
dec
loope
jge
jmp
mov
call
cmp
fidivrs
sti
ds
push
sahf
mov
pop
insb
fbld
xchg
das
shll
inc
out
data16
mov
jnp
mov
insb
cmp
xlat
mov
dec
repz
pushf
daa
inc
push
int
int
rol
cld
loope
mov
mov
mov
int
or
leave
shll
fwait
fwait
or
push
pop
dec
xchg
jp
pusha
fwait
fwait
fwait
fwait
leave
push
mov
jge
or
std
or
jmp
out
out
xor
cmpsl
loop
js
lds
fwait
subb
xchg
aam
lods
lret
clc
mov
jne
icebp
jnp
pusha
mov
xchg
mov
rolb
fmull
out
pop
xchg
lcall
pop
pop
mov
lods
inc
pop
inc
jge
aaa
stc
fisubrl
test
js,pn
jmp
push
movsb
adc
icebp
out
std
int3
dec
xor
add
call
inc
push
faddp
pop
add
ja
sub
sahf
in
daa
mov
in
jbe
std
cmp
jl
repnz
out
mulb
les
push
sub
jbe
push
lcall
jo
xorb
xchg
push
adc
xor
push
or
addr16
pop
mov
outsl
shlb
fdivl
int
int
orl
or
aas
ss
cmc
ficoms
mov
int
push
pop
mov
cmp
mov
xchg
lds
sub
cmp
add
jp
push
clc
pop
hlt
and
fimull
in
fbstp
lea
ja
repnz
pusha
and
fucomi
fcmovnb
sbb
loop
xchg
xor
popa
push
lock
cs
movsb
loopne
mov
jl
fwait
int3
cmp
rorb
ficompl
jb
outsl
testl
ja
jecxz
ret
fsts
addr16
pop
push
roll
push
cmpsb
adc
daa
jne
xor
cmpb
adc
fisubl
aaa
imul
divb
push
inc
icebp
fnstsw
mov
xchg
aaa
cld
mov
je
loope
push
jmp
aad
jle
clc
push
mov
sbb
loop
mov
mov
jp
shl
fdivrl
in
pop
add
push
add
loope
paddq
sub
cld
lods
clc
and
je
popf
xor
inc
push
or
imul
cs
in
rclb
in
cld
lret
cmp
ja
xor
push
inc
dec
addl
add
sbb
cmp
cmp
test
push
in
scas
enter
lahf
fwait
sub
mov
xchg
adc
popa
xchg
loope
mov
xchg
insl
fcom
push
in
fwait
cli
gs
mulb
dec
iret
int
int
hlt
ljmp
xchg
add
xchg
fwait
stos
jle
or
stos
pop
cmc
shlb
aaa
pop
jge
mov
xor
icebp
pop
jl
sbbl
out
notl
js
dec
or
mov
adc
mov
xchg
xor
jo
jbe
jle
stos
mov
addr16
xor
sti
mov
repz
sbb
fsubrs
inc
xor
push
hlt
lret
cmc
frstor
jae
xor
mov
dec
adc
xchg
xor
mov
movsl
lahf
iret
ja
stos
in
or
pop
xlat
aaa
aas
fwait
mov
push
repnz
das
cmpsb
lods
scas
decl
das
inc
dec
test
jle
imul
push
aas
adc
cmpsb
mov
mov
jmp
out
fstpt
lock
sbb
cli
sar
add
push
lods
fwait
jl
mov
xchg
mov
xor
xor
dec
imul
je
mov
sbb
fwait
sbb
jnp
push
aas
add
cmp
ljmp
jmp
scas
push
lret
xor
inc
outsb
pop
out
mov
jbe
iret
pop
frstor
or
jb
jl
outsb
push
es
ficompl
adc
sbb
fwait
cmp
aam
aaa
mov
mov
xlat
hlt
push
and
int
divb
es
sbb
pop
or
inc
fldl
nop
cli
mov
sbb
aaa
aaa
mov
gs
jmp
clc
orl
ficoms
ret
fldl
fwait
fwait
fwait
lods
nop
inc
lea
mov
cmpsl
dec
out
fwait
fwait
fwait
fwait
mov
dec
mov
nop
pop
xor
lahf
pop
push
loop
sti
mov
or
or
les
sub
call
add
jno
fisttpl
lret
stc
mov
test
outsb
outsb
or
jno
or
outsb
outsb
outsb
pop
jae
int
movsb
xchg
aad
cmpsl
push
insl
loop
std
cmp
cmp
inc
adc
jg
mov
in
std
sub
cld
push
jbe
push
aaa
xor
xchg
mov
mov
mov
xor
inc
shl
out
sbb
data16
in
iret
xchg
out
sbb
jae
jae
clc
inc
or
adc
mov
mov
lea
aas
popf
dec
dec
lret
jge
je
mov
ds
aaa
mov
or
jp
repz
push
or
in
addr16
std
bound
xor
sub
adc
mov
mov
int
idivb
insb
inc
xchg
or
movsl
sahf
fwait
stos
push
pop
mov
rcrl
iret
push
jae
mov
xchg
je,pt
adc
aam
addb
fiaddl
out
pop
add
push
mov
jmp
hlt
xor
and
cmpl
jmp
loop
mov
ljmp
scas
clc
cmp
xlat
inc
and
test
xchg
mov
daa
out
add
scas
rolb
iret
out
mov
cwtl
push
cmp
les
fwait
fwait
popa
cmpsb
inc
dec
fnsave
push
pop
pop
cli
insb
outsb
test
jno
and
xorb
pop
negb
mov
into
inc
push
popf
xchg
insb
outsb
rol
lret
and
pop
lcall
pop
ss
and
push
mov
shlb
cmpsb
dec
andb
out
sub
xor
sbbb
testb
sti
cmc
je
loope
sub
pop
lock
not
ljmp
test
in
inc
cli
mov
xchg
int
push
sti
popf
mov
sbb
ss
insb
mov
lods
test
cmpsl
and
mov
jbe
xchg
out
mov
push
inc
sahf
subl
xchg
jo
setnp
addr16
pop
addb
int
aad
outsl
dec
insl
lock
aaa
or
repnz
int
fidivl
out
mov
mov
sti
lods
movsb
pop
in
or
addr16
jae
lcall
add
ljmp
popa
aaa
lock
mov
es
jp
sbb
dec
xchg
lea
fwait
pushf
jmp
dec
dec
mov
sub
in
push
pop
out
cmp
dec
add
clc
jecxz
testb
sbb
lcall
and
cmp
xchg
popa
mov
incl
xlat
outsb
outsb
outsb
outsb
pop
xor
into
test
popa
sub
mov
into
lahf
fisttpl
add
dec
fmuls
bound
mov
leave
cli
pop
sub
imul
mov
ret
and
cld
or
lds
call
outsb
cmp
ds
push
cmpsl
lock
fdivrl
outsb
pop
mov
adc
cld
mov
loopne
loopne
and
mov
adc
icebp
cmp
roll
outsl
add
fdivrl
add
mov
sarl
mov
paddb
and
lahf
mov
fdivs
aaa
mov
pop
lods
insb
ficoms
imul
ss
aaa
iret
or
xchg
or
push
fwait
fwait
fwait
or
pop
out
shrb
push
push
mov
fwait
fwait
in
jo
cmpsb
mov
inc
cmpsl
mov
out
mov
inc
sbb
add
loop
iret
out
mov
mov
push
jo
test
add
jo
mov
or
mov
inc
pop
fstps
sbb
mov
jmp
cmp
mov
cmpsb
xchg
in
bound
cmp
out
jae
insb
movsl
jecxz
push
push
add
outsb
aas
rolb
aam
scas
jnp
mov
mov
add
pushf
and
jbe
jbe
dec
std
daa
mov
lahf
xor
cmp
leave
sahf
movsb
or
std
out
xor
cli
sbb
mov
jmp
mov
cmp
clc
in
cmp
test
insb
push
icebp
xchg
pop
ret
fisubs
xor
in
inc
call
mov
xchg
shlb
shll
mov
adc
cld
mov
out
out
mov
mov
ret
and
aam
enter
jl
or
cli
or
lds
rolb
mov
fisttpl
adc
mov
mov
call
cmpsb
pop
insb
pop
or
out
cmp
push
aad
mov
in
mov
mov
and
mov
notb
cmp
push
mov
fwait
es
flds
xor
fwait
mov
fwait
or
aam
jmp
rcr
jae
pop
adc
test
mov
lock
dec
and
shrl
nop
subb
fistpll
jge
jae
mov
jnp
lret
mov
les
mov
aas
sarl
adc
outsl
xor
ret
adc
jmp
or
out
iret
push
mov
xchg
lcall
cmc
jnp
sahf
xchg
push
or
inc
cmp
or
dec
mov
sahf
cmc
lds
xchg
sub
aas
fwait
test
dec
xchg
cli
ficompl
mov
data16
mov
insb
aam
jb
xchg
pop
std
mov
and
jmp
xchg
lods
mov
mov
mov
pop
enter
mov
mov
ret
and
cli
ja
scas
mov
sbb
mulb
xchg
cmp
or
outsb
outsb
outsb
outsb
push
lahf
sbb
pop
loope
mov
mov
outsb
outsb
sarb
and
cmp
nop
and
pop
outsb
es
add
pop
in
jecxz
mov
jle
test
push
enter
pusha
jle
cli
sub
dec
cmp
sbb
mov
cmc
hlt
inc
push
cld
fiaddl
push
mov
cltd
dec
int3
and
pop
mov
pop
cmp
push
call
jmp
pop
pop
dec
insb
ds
insb
and
cs
cmpl
out
scas
outsb
dec
ja
inc
aas
fstpt
sub
pop
mov
cmpsb
mov
int
int
roll
ss
add
cmp
out
inc
cld
loop
add
sub
sbb
mull
subl
dec
addb
fucomip
push
sbb
fisubs
push
shrl
mov
jecxz
inc
mov
xchg
movsb
sbb
shl
std
insb
outsb
addr16
fists
outsl
jmp
lret
fildl
mov
dec
lcall
aad
std
xchg
xchg
adc
fwait
sbb
and
dec
cmp
jl
jge
cld
and
lret
mov
add
or
xchg
mov
lods
jo
sbb
fcmovne
idivb
mov
dec
mov
cmp
insb
aas
fwait
fwait
sarl
adc
xchg
or
jge
pop
cld
xchg
shl
js,pt
xchg
std
mov
mov
adc
sub
xchg
in
out
mov
loop
out
dec
into
lock
icebp
hlt
cmp
fisttpll
jnp
adc
out
out
repz
lcall
push
out
out
jge
stc
test
in
xchg
shlb
cmp
in
and
out
test
addr16
pop
sahf
ja
cs
xchg
mov
out
out
xchg
leave
inc
or
arpl
mov
fs
jmp
je
adc
push
repnz
mov
movsl
fwait
rcrl
mov
push
lea
jae
or
lahf
jne
stc
movsb
xchg
aaa
mov
add
and
mov
xchg
sub
ds
push
addr16
xor
cli
xchg
je
xor
outsb
cs
mov
in
adc
test
sahf
repnz
clc
insb
sub
pop
insb
movb
lahf
fcmovne
out
loopne
fcomps
mul
gs
out
jge
outsb
outsb
insb
and
int3
pop
or
jno
fcompl
inc
shll
adc
cwtl
mov
and
pop
and
dec
mov
iret
sti
int
or
push
orb
dec
out
lahf
int
int
sti
jp
pop
sahf
push
push
imul
jl
mov
mov
lock
es
out
aaa
aaa
aaa
aaa
cmp
sbb
fstpt
insb
pop
fdivrl
mov
mov
dec
movsb
fld
std
sti
fsubrl
add
sub
jae
adcl
lahf
je,pt
sahf
jae
jae
xchg
push
cmp
shl
dec
cmp
sbb
in
std
mov
adc
out
dec
lea
jle
aaa
aaa
movsb
popa
imul
cmp
pop
dec
lcall
loop
mov
cmp
cmp
mov
jge
call
fisubrl
loopw
sub
xor
aas
jbe
rcrb
aad
in
push
aas
dec
mov
fstps
add
je
inc
xor
int
inc
adc
xor
sub
mov
stc
pop
call
leave
jecxz
sub
cmc
ret
xor
hlt
sub
sbb
jae
jae
sti
pop
dec
jae
fmull
jae
pusha
jmp
es
push
loopne
ljmp
or
fldcw
arpl
add
or
sbb
clc
inc
fbstp
sub
das
outsb
outsb
rclb
icebp
mov
ja
lds
mov
mov
aaa
in
dec
inc
inc
divb
add
dec
adc
mov
iret
out
leave
adc
inc
dec
sub
push
mov
in
push
mov
out
sub
std
jbe
push
fbld
jae
pop
stos
cltd
xor
and
or
inc
pop
push
sbb
xchg
lods
loop
xlat
xchg
clc
sub
or
aaa
aaa
mov
in
mov
jp
xor
aaa
aaa
out
std
fisttpl
xchg
lahf
scas
mov
fdivrl
or
dec
add
jmp
outsb
cs
xor
enter
dec
daa
and
sub
jo
pop
xlat
push
clc
testl
fnstcw
mov
sarb
outsb
les
push
mov
loop
jle
outsb
outsb
outsb
adc
jns
sub
jge
hlt
cld
ljmp
push
mov
and
or
in
or
dec
cwtl
sahf
push
sahf
hlt
pop
shlb
add
xchg
fwait
stos
mov
mov
mov
fdiv
scas
ret
psrad
pusha
int
int
fldt
pop
movsb
mov
mov
sub
fnclex
fcoml
sbbl
push
xchg
sub
in
xor
insb
outsb
outsb
fcomip
xchg
cmp
fnstcw
xor
jno
push
jbe
test
sbb
in
lds
pop
push
outsl
mov
cmp
lcallw
imull
pop
mov
pop
push
popa
mov
repz
shlb
in
cmpsb
cmpsb
loop
insb
lahf
test
jle
dec
sahf
cltd
ljmp
xchg
or
sbb
icebp
pop
push
jmp
xchg
aaa
aaa
aaa
aaa
mov
xlat
xchg
addl
pop
js
dec
fcoms
aaa
cltd
aaa
pop
mov
or
std
cmpsl
sbb
scas
xor
cmp
dec
dec
mov
dec
mov
lahf
fwait
or
imul
mov
rolb
mov
pop
hlt
add
cmp
pop
mov
test
stos
data16
popa
pop
and
mov
fisubrl
movsb
test
sahf
cwtl
xor
iret
xor
ljmp
or
notb
cmpsl
mov
sub
loopne
iret
out
mov
cmp
ss
mov
sub
push
pusha
lods
outsl
scas
mov
out
dec
adcb
stos
mov
inc
movsl
pushl
push
mov
insb
mov
sti
lret
xchg
mov
or
out
outsl
cmp
push
sub
jne
ret
ficomps
mov
movsb
loopne
jb
loopne
cwtl
loope
in
pop
cli
popf
push
xchg
sub
sahf
int
jle
jae
stos
cmp
xchg
repnz
mov
rolb
lcall
cltd
mov
test
loopne
loopne
hlt
loop
in
stos
and
lea
out
mov
inc
out
mov
pusha
outsl
aam
fimull
mov
outsb
aam
imul
cs
ds
loope
ss
mov
std
lret
xchg
outsb
shlb
dec
sbb
push
icebp
std
add
mov
test
adc
push
icebp
pop
inc
movsb
xchg
mov
cltd
into
and
inc
and
push
add
imul
mov
mov
imul
cmp
hlt
popa
js
jae
fnstcw
or
imul
int
xor
movsl
inc
shl
in
mov
gs
ljmp
mov
pop
int3
push
adc
je
jae
shll
nop
add
ficomps
addr16
jae
out
das
push
push
or
mov
out
outsl
loopne
aad
call
mov
xchg
clc
adc
loopne
xchg
hlt
jnp
popf
shlb
pop
in
hlt
rolb
mov
js
jmp
fcomps
leave
jb
mov
push
scas
pop
and
pop
xchg
mov
pop
push
into
aaa
mov
jmp
mov
xorb
push
notl
aas
sub
pop
pop
fs
xor
cmp
pop
sbb
mov
mov
xchg
sbb
jge
fbstp
pop
jo
adc
xor
outsb
outsb
cli
jbe
jns
jo
les
mov
rolb
cmp
jg
sahf
std
sub
insb
outsb
lahf
cmp
inc
inc
sbb
jno
xchg
int
and
sbb
in
mov
mov
out
and
rcrb
cld
cmp
cld
dec
std
insb
cli
cmpsb
pushf
cld
mov
out
out
pushf
ficompl
bound
jae
cli
mov
xchg
xchg
mov
xor
imulb
and
ja
adc
push
adc
fwait
rorl
cmp
jbe
lock
hlt
shll
loope
push
sbb
iret
int
mov
les
fdivrl
mov
inc
or
aas
jno
push
cmc
repnz
mov
out
out
popf
jb
pop
fistl
vcvtpd2dq
out
mov
sbb
ljmp
sub
lods
push
pop
mov
das
jo
fnstenv
es
cmp
jp
cwtl
ds
fwait
fwait
mov
adc
pop
shrb
fwait
lret
data16
cld
and
xlat
test
in
outsb
outsb
cli
insb
into
inc
iret
lret
jg
pop
xchg
lock
cmc
insb
or
mov
fcompl
sbb
jge
inc
mov
clc
fsub
cmpl
sbb
xchg
stc
cwtl
test
in
addr16
pop
and
cli
in
fistps
inc
cmpsb
fwait
fwait
fwait
fwait
dec
push
push
cmp
outsb
lahf
fwait
fwait
or
xlat
fistpll
movsb
testl
sub
int3
cld
or
lret
aaa
aaa
cld
insb
or
mov
push
lods
addr16
cmp
sbb
add
stos
lcall
stc
xchg
lock
shll
and
scas
jp
addr16
lcall
hlt
fldenv
mov
and
xchg
mov
inc
shl
ss
clc
popf
inc
dec
fdivs
daa
or
divb
hlt
mov
mov
lock
add
subl
cmp
mov
out
fidivrl
gs
sbb
loop
inc
jae
inc
jl
add
in
movsb
testl
int
sbb
push
mull
cs
ret
dec
pop
mov
clc
adc
fldcw
hlt
mov
shrb
gs
adc
ss
rcrb
jle
jecxz
mov
fstps
es
pop
int
mov
loope
je
inc
or
sbb
fwait
cmp
lock
mov
scas
int
jmp
cmp
std
dec
stc
push
sub
repz
cmpsb
inc
sbb
fwait
ds
xchg
pop
pop
dec
add
cli
fadds
stc
mov
xor
mov
push
das
and
call
mov
dec
pop
adc
loopne
daa
and
jp
aaa
aaa
jb
dec
xor
mov
enter
fisubl
shl
mov
les
in
push
push
xor
mov
mov
stc
loop
rolb
mov
sub
test
loop
addr16
jp
aas
push
sbb
call
pop
push
cld
rcll
js
ja
in
and
outsb
cs
flds
fimull
adc
scas
mov
lock
lret
ret
mov
ljmp
pop
hlt
dec
or
aam
in
aas
fwait
fwait
adc
sti
xor
shrb
or
idivb
ret
adc
mov
mov
cltd
fcomi
subl
daa
and
std
inc
movsl
jge
outsb
pop
popa
cmp
jnp
sahf
aas
lods
and
xor
mov
outsb
outsb
outsb
outsb
adc
hlt
int
jp
and
shrl
mov
add
cmpsb
rorl
test
int
sbb
test
stc
mov
pop
pop
lret
and
clc
lcall
or
cmp
inc
mov
xchg
or
dec
out
pop
sub
add
push
sbb
cltd
push
fwait
mov
je
sbbl
idivb
inc
jnp
adc
fldenv
push
mull
out
out
pop
cmc
jae
aam
sbb
je
pop
add
iret
out
mov
dec
mov
xchg
gs
pop
cmpsb
lret
cmpb
jo
leave
jnp
sti
xor
jg
lahf
xchg
cli
xchg
fwait
mov
xor
or
inc
inc
jp
scas
into
out
mov
jae
or
pop
mov
mul
daa
jecxz
jae
or
inc
fnstcw
adc
ds
mov
mov
scas
pop
jb
lods
push
aad
push
enter
fwait
jns
mov
and
lock
insb
sbb
loopne
subb
fdivrl
and
scas
in
test
mov
in
notl
out
pop
push
mov
xchg
xchg
ljmp
imul
adc
jbe
jle
aas
sti
ds
insb
dec
mov
mov
mov
es
push
outsb
outsb
outsb
outsb
movsl
jb
inc
and
out
mov
mov
int3
mov
jnp
fcmovu
sbb
and
cli
fcomps
insl
fcomp
inc
sbb
jo
inc
pushf
fwait
rcll
in
sbb
clc
sub
negl
insb
add
mov
lds
pop
popf
push
add
scas
xlat
sub
mov
push
lcall
idiv
ret
xchg
mov
addps
divl
aaa
mov
cmp
inc
mov
mov
or
mov
mov
movsl
cmp
jae
push
bound
jle
adc
stos
out
jae
push
outsb
popf
dec
mov
mov
or
pop
sbb
xchg
jne
les
cmp
stc
stos
dec
mov
outsb
lahf
xchg
mov
mov
std
inc
add
scas
insb
outsb
outsb
outsb
push
loop
scas
cmp
loop
pop
ss
hlt
mov
stos
cld
mov
in
or
mov
xchg
sub
rclb
outsb
scas
cli
movsb
ss
roll
adc
outsb
dec
inc
lcall
fdivp
pop
cmp
lret
fdiv
mov
xor
mov
sbb
fsubrl
out
dec
push
sbbl
dec
ret
pop
mov
cmpsb
sti
pop
fcmovbe
cwtl
mov
add
push
and
sarb
jge
fdivl
leavew
out
mov
outsb
outsb
dec
mov
lahf
cld
mov
out
fstpl
jg
mov
inc
mov
mov
sbb
orl
lret
int
mov
outsl
mov
mov
cmc
repnz
leave
icebp
sbb
mov
xchg
enter
lahf
mov
cmpsb
es
out
mov
popa
or
mov
push
push
add
outsb
fwait
sbb
int
int
andb
adc
or
lret
cmpsl
lock
and
stc
dec
aas
fwait
fwait
sti
mov
inc
leave
out
mov
cmp
into
cli
cmp
addr16
daa
into
pop
cmpb
xor
jecxz
mov
push
std
pop
test
pushf
mov
arpl
aad
cmpsb
lods
xor
jae
outsb
out
notb
ret
test
inc
int
jecxz
int
int
or
fadds
add
adc
jle
int
test
pop
mov
dec
jno
mov
or
lea
lds
ret
mov
push
pusha
fisubl
push
ja
insb
vpmacsdd
or
movsb
test
aaa
pop
push
mov
scas
mov
sbb
cmp
dec
mov
icebp
out
or
cmp
sub
stos
mov
mov
popf
cmpb
mov
push
mov
fnstcw
and
and
xchg
cmpsb
mov
nop
test
inc
in
into
cs
in
in
cli
fnstcw
push
test
lods
adc
ficoml
jl
mov
jns
out
add
mov
cmpsb
mov
out
cmpb
int
icebp
or
bound
movsl
push
clc
aaa
jl
fwait
cltd
decl
cmc
sub
lret
outsl
cmp
aaa
aaa
or
pop
fs
cmp
cmp
daa
jl
push
jae
pop
in
cmp
aaa
aaa
push
mov
inc
xchg
cmp
mov
pop
into
sub
or
mov
clc
mov
shlb
divb
std
cmp
sub
aaa
aaa
aaa
mov
clc
lds
add
cli
inc
fistps
fwait
fwait
mov
mov
es
std
jb
lock
fwait
fwait
fwait
pop
mov
int3
dec
jle
inc
sbbl
fiadds
add
pop
pop
aaa
cwtl
ja
std
nop
sahf
fwait
add
cwtl
ret
insl
cmc
fcompl
cmp
pusha
es
aam
into
stos
mov
dec
fwait
mov
mov
shrl
xchg
cmpb
inc
cmp
sti
dec
pushf
mov
out
xchg
shrb
je
adc
push
cld
push
cmp
pop
sbb
add
mov
out
ds
mov
xchg
fdivrl
push
or
push
imulb
js
sarb
mov
mov
dec
cwtl
or
adc
fcompl
test
adc
xchg
nop
push
lods
jbe
outsb
adc
add
sub
nop
jge
shlb
addr16
adc
mov
ss
aaa
mov
outsl
icebp
xor
sti
fldz
cmc
lret
xlat
fisubl
xchg
cwtl
xchg
ljmp
in
fildl
and
dec
cmp
rcrb
hlt
ja
or
scas
stos
push
aaa
aaa
sub
inc
daa
mov
mov
mov
add
sahf
mov
js
cmp
pop
sarb
hlt
jecxz
mov
mov
out
sub
push
inc
insw
jae
iret
neg
jo
adc
or
lock
and
push
mov
out
aam
ja
js
adc
lahf
sbb
sbb
ficompl
dec
es
push
dec
xchg
icebp
and
pop
mov
mov
cmpsb
mov
cmp
or
repz
repz
xchg
jecxz
les
into
call
imulb
and
pop
ret
cmp
pop
xor
mov
fnstsw
cld
insb
add
push
pushl
mov
sti
cmpl
fmuls
lea
jb
push
fcmovne
jbe
pop
or
lods
xor
cmp
call
mov
aad
addr16
out
clc
mov
bswap
test
inc
popf
and
cs
cli
pop
pop
push
jl
test
test
mov
and
fbstp
gs
pusha
fcmovb
xor
leave
aaa
aaa
aaa
aaa
test
dec
jnp
add
xchg
xchg
xchg
js
out
sbb
sub
insb
lahf
push
xor
inc
pop
icebp
movsb
idivb
outsb
inc
scas
je
fadd
aaa
pop
push
jno
insl
into
aas
in
flds
call
or
jp
pop
ds
in
jae
mov
es
pop
shrl
fwait
fwait
fwait
sub
xchg
popa
gs
loop
mov
and
mov
out
push
add
out
shrb
ror
xor
clc
stos
inc
inc
or
fstpt
fs
jne
pop
addb
mov
loopne
fwait
xor
stc
and
call
sub
jnp
clc
xlat
fcompl
push
and
push
sub
mov
jbe
js
add
and
sbb
mov
add
out
mov
push
int
arpl
aad
call
cmc
rclb
lods
lock
mov
and
insl
cld
sbb
movsl
in
int
int
push
xchg
jmp
xor
sbb
iret
int
int
xchg
sbb
jmp
js
push
sub
mov
xor
pop
sbb
add
sub
pop
das
cld
jmp
sti
faddl
add
sahf
pop
loopne
mov
divl
fnsave
std
sbb
cld
mov
mov
pop
outsb
xlat
and
repz
dec
idivb
fwait
fwait
fwait
sbb
inc
dec
push
xchg
pop
aad
into
addb
adc
sbb
negb
sahf
jnp
sahf
mov
sub
or
mov
pop
xor
or
enter
sbb
mov
test
inc
sahf
rcrb
mov
aad
push
add
mov
mov
push
dec
ljmp
mov
jge
and
push
std
and
mov
sbb
inc
jmp
pop
sub
and
mov
push
daa
pop
movsl
enter
scas
insb
out
clc
fnstenv
mov
das
mull
pop
fimull
xor
cmpsl
jge
jle
add
ds
push
cmp
lcall
cld
jge
outsb
cs
fcoml
jl
pusha
stc
test
outsb
outsb
outsb
outsb
mov
dec
stos
cmpsb
xlat
ret
mov
mulb
hlt
insb
jmp
lcall
out
scas
sub
and
adc
sbb
outsb
outsb
outsb
outsb
xor
jmp
mov
sub
rcrb
push
push
dec
xor
inc
jbe
lods
push
cmc
push
icebp
leave
test
mov
rorb
enter
outsb
inc
ret
xchg
lret
pop
sub
out
jp
jle
adc
out
cld
sbb
cmp
lods
testl
dec
sbb
mov
lock
jno
es
cli
fisubl
ss
lock
cwtl
sbb
sti
pop
jle
out
lahf
popl
cmp
leave
or
jge
mov
icebp
test
fsubl
cwtl
mov
add
fidivrl
cmp
insb
jns
out
imul
xchg
jbe
leave
push
mov
sahf
lods
arpl
out
out
or
xor
adc
jae
out
in
in
sbb
call
sub
or
push
jae
jae
aaa
enter
inc
leave
loope
or
add
adcl
jae
daa
xchg
fmuls
in
aaa
aaa
aaa
aaa
lret
sti
mov
test
aaa
inc
inc
out
xchg
out
les
jl
jno
fiaddl
sahf
lret
mov
xor
and
jmp
add
test
dec
xlat
loopne
pop
push
movsb
iret
int
in
lcall
jae
fldenv
aas
sbb
jp
fcompl
jmp
or
push
movlps
cs
pop
adc
push
push
sbb
mov
shlb
fsub
adc
iret
test
mov
neg
stc
pop
nop
in
shlb
ljmp
es
out
insb
dec
in
jns
test
push
loopne
stos
dec
or
insb
outsb
adc
or
out
cli
add
jge,pn
sub
and
outsb
outsb
outsb
into
addr16
fldcw
out
adc
add
mov
and
repz
sbbb
xchg
outsb
outsb
outsb
outsb
pop
dec
std
dec
dec
mov
jle
je
pushf
cmpsb
mov
jmp
xchg
aas
or
adc
pop
mov
test
pusha
lds
rcr
sbb
adc
loop
cmp
cmp
pop
ljmp
cli
das
xor
outsb
outsb
outsb
outsb
scas
popf
cltd
adc
data16
pop
cld
insb
adc
in
andb
adc
ficoml
sahf
shl
jmp
mov
add
loope
sub
insb
lahf
out
dec
cli
cltd
jmp
xor
out
std
outsb
dec
data16
cmp
sbb
xor
aas
fistl
cmpsb
adc
std
add
jno
sub
cmp
pushf
aam
and
repnz
shrb
adc
enter
pop
lods
ficompl
fwait
fwait
fwait
sub
scas
jl
inc
pushf
push
or
mov
jge
dec
mov
addr16
loop
push
xchg
arpl
sbb
fcmovu
or
inc
out
fwait
mov
imul
cmp
hlt
pop
cmp
pop
hlt
or
stos
imul
xor
sbb
and
lret
adc
mov
ja,pn
divb
enter
lods
es
fsubrs
out
out
lods
xchg
mov
push
subl
fldt
ret
xchg
cmpb
xorb
push
jp
dec
ss
lret
sbb
xchg
enter
sbb
loopne
jl
inc
mov
lcall
pop
loop
pop
mov
inc
push
lret
mov
pop
movsl
jae
jno
test
fs
loope
cmp
pop
std
mov
push
xor
mov
jnp
fsubrl
negl
xor
mov
jae
dec
sbb
cmp
mov
mov
mov
sub
nop
sbb
mov
test
orl
test
mov
ret
sti
jge
add
mov
jae
mov
dec
ret
push
shrl
cmpsb
lahf
mov
push
mov
shll
out
inc
jbe
out
mov
inc
add
scas
mov
pop
fists
mov
push
ds
aaa
mov
adc
pop
cmp
les
or
in
mov
mov
inc
pop
outsl
or
dec
jle
mov
and
push
jle
jl
fdivr
mov
mov
popl
mov
jmp
or
insl
outsb
outsb
outsb
outsb
sbb
mov
push
jmp
test
outsb
scas
push
icebp
mov
xchg
jbe
scas
repnz
insb
push
fdivrs
mov
pushf
fwait
inc
add
out
pop
nop
lcall
aaa
aaa
aaa
sti
stos
push
dec
push
outsl
movsb
lock
aaa
aaa
aaa
leave
xlat
movsl
movb
ret
ss
pop
out
xlat
xor
out
fidivs
mov
mov
cmp
xchg
jae
popa
divb
shl
imul
pop
int
mov
jae
jae
arpl
ss
add
xor
jae
jae
xchg
imul
mov
ret
fdiv
mov
push
aad
mov
and
push
dec
xor
push
jne
mov
fsubrl
bound
bound
mov
lds
out
stos
into
add
push
es
out
notb
jbe
mov
movsl
out
out
cmpsl
data16
inc
cmp
int
mov
sti
xchg
out
pop
rorb
xchg
xorb
int
int
xor
je
aas
pop
imul
int
int
dec
or
rcrb
pop
insb
mov
cmp
imul
jne
in
call
pop
scas
clc
and
outsb
outsb
out
nop
adc
aaa
stos
add
int
int
in
mov
sub
pop
iret
mov
add
pop
lcall
pop
ret
lds
fsubrs
cmp
gs
in
mov
js
mov
adc
std
insb
outsb
xchg
clc
mov
fldcw
js
movsb
test
int
jmp
lods
jbe
shlb
int
ja
ret
inc
dec
movsb
in
dec
ret
fcompl
and
adc
test
aas
push
jecxz
mov
ret
mov
add
sti
rcrb
mov
mov
ljmp
aam
push
in
xchg
shlb
sbb
sub
or
outsb
outsb
jbe
add
into
mov
mov
push
and
cli
jg
sub
lock
imul
repz
pop
add
sbb
and
ss
cmp
jno
pop
jne
test
inc
clc
lret
and
scas
jge
and
mov
jmp
fdivrl
push
ret
repnz
mov
movsb
push
popfw
andb
mov
jge
or
cmp
jne
cmp
jae
outsl
ret
outsb
xor
ret
inc
mov
ja
inc
cmp
mov
imul
fdivl
pop
or
aaa
aaa
aaa
cmp
inc
pop
and
sbb
cmp
cmp
lds
jae
jae
fisubrs
or
xchg
mov
jle
mov
add
stc
xchg
je
mov
addr16
pop
fcoml
sbb
ret
jl
jo
adc
jecxz
mov
sbb
jl
sbb
das
outsl
orb
loopne
and
fdivr
cmpb
push
mov
pop
xchg
xchg
jp
lock
fcompl
rorl
xor
imul
fwait
and
movsl
outsl
call
negb
push
jbe
ss
cmp
insl
loop
cmp
mov
jmp
inc
mov
outsb
outsb
outsb
outsb
or
popf
sub
inc
mov
push
sbb
pop
ljmp
lods
sbb
mov
sub
scas
dec
dec
mov
jae
lock
cmp
push
andb
int
test
dec
cmp
loop
push
aaa
aas
fwait
fwait
jp
in
pop
je
call
clc
jge
aaa
or
outsl
sbb
fistl
cmp
outsb
outsb
outsb
out
ss
rcll
inc
pushl
xchg
insb
outsb
outsb
movsl
jp
insb
adc
jo
pop
icebp
fld
adc
jp
aas
fs
repnz
fmull
cmp
fwait
stos
sahf
mov
pop
xorl
fwait
fwait
fwait
into
jo
add
mov
outsl
dec
push
mov
push
std
mov
clc
bound
push
cmp
hlt
ror
cwtl
push
mov
jae
add
dec
jno
or
addr16
jae
sbb
out
adc
jmp
ljmp
xor
ja
roll
pop
js
out
outsb
fstpt
iret
mov
cld
orb
push
add
cmp
fstpt
in
addr16
xor
in
mov
jnp
rcrl
loopne
jbe
mov
xor
out
adc
stc
lods
sti
repz
fildl
int
int
pop
add
inc
shlb
int
lock
push
cmp
and
int
pop
aas
cmp
sahf
std
je
jmp
or
and
and
inc
sub
into
push
cmp
mov
ds
mov
cwtl
arpl
rorb
add
xor
jle
notl
fcmovbe
pop
push
or
xchg
inc
inc
clc
outsl
sbb
fsubrl
je
pop
sub
push
enter
mov
pushf
das
jle
daa
xchg
xchg
push
icebp
fdivl
sub
subb
jecxz
pop
pop
xchg
add
mov
xchg
fsub
jge
and
jno
mov
cmc
xor
sti
push
jle
pop
and
or
push
insb
cs
in
mov
adc
mov
sub
imul
cmp
out
or
imul
mov
mov
fmull
sbb
scas
sub
pop
or
xorb
fcompl
mov
cmpsb
xor
cld
jae
jae
mov
lock
cmc
push
sti
lods
fcoml
loope
push
pushf
jno
lods
stos
mov
fcompl
jl
popf
icebp
loop
sarb
add
in
push
and
lock
mulb
iret
int
or
clc
push
bound
call
xchg
out
xchg
lcall
int
int
in
hlt
add
int3
shll
push
adc
std
insl
lret
jae
rorl
ljmp
jl
mov
adc
aaa
mov
out
daa
cmpsb
in
push
inc
mov
and
aas
test
inc
mov
addr16
popf
cli
push
fdivrl
jl
ret
add
in
cmc
cmc
and
push
mov
adc
aam
ror
adc
movsb
xchg
bound
xlat
adc
add
movsl
insb
hlt
aam
cmovg
cmp
setg
int
shll
push
les
daa
or
fwait
fwait
fwait
scas
shl
je
xor
push
pop
jns,pt
cmc
fwait
fwait
fwait
fwait
xchg
movsb
xchg
outsl
xchg
adc
in
sbb
ja
adc
lahf
int
int
clc
cmp
ss
xchg
mov
movsb
ja
adc
loopne
shr
mov
lahf
in
outsl
call
sbb
popa
mov
bound
orb
aas
cli
idivb
rcll
add
dec
mov
adc
out
add
movsb
outsl
xlat
mov
gs
sbbl
inc
repz
push
pushf
out
xchg
cmp
mov
push
inc
xchg
outsb
nop
iret
mov
xchg
or
xor
pop
les
mov
ffree
pop
sub
test
inc
lahf
mov
add
or
hlt
js
jge
jmp
mov
dec
fsubs
insb
pop
push
lods
or
fistpll
ja
fwait
fwait
or
xor
sub
int
jo
enter
fwait
xchg
es
sbb
scas
add
movsb
xchg
add
clc
jle
mov
mov
rclb
out
xor
insb
rclb
push
es
push
stos
enter
mov
ljmp
in
mov
fcmovne
notb
push
fldt
aas
icebp
repz
or
jg
aam
fnstcw
jge
jge
insb
enter
ficoml
fcompl
sub
cld
xchg
pop
in
inc
in
ja
mov
dec
jecxz
dec
rolb
xor
jae
dec
call
mov
mov
xchg
out
idivb
in
out
out
rcrl
add
pop
push
push
imul
out
int
push
sub
mov
mov
sti
fsubl
dec
mov
lea
fsubr
fcompl
inc
xchg
out
cmpsb
cmp
std
and
clc
xchg
bound
cltd
mov
mov
pop
add
lock
ret
lods
jle
dec
cmp
mov
pop
sbb
sahf
pusha
stos
movsb
sbb
dec
jmp
mov
xchg
mov
arpl
cmc
push
rcrb
out
fdivl
xchg
out
mul
jnp
jne
push
popf
test
sbb
push
mov
movsl
loopne
int
int
or
shl
movb
dec
jp
insb
pop
es
jbe
jecxz
inc
iret
push
aas
add
insl
into
push
insl
inc
mov
pop
addr16
push
inc
shr
jmp
mov
or
dec
adc
out
mov
jae
and
cmp
jg
ja
andb
in
adc
lret
dec
push
cmpsl
in
push
mov
cmc
pop
mov
sub
sub
mov
and
movsb
das
aaa
cmp
aad
sub
loop
push
fdivrl
sub
adc
loop
inc
out
cmpsl
push
mov
scas
lods
jns
jl
pop
iret
mov
mov
out
out
jl
mov
sub
out
jecxz
leave
shll
mov
adc
cmp
pusha
fildl
sub
mov
pop
inc
movsb
ds
mov
pop
divl
sub
cs
popa
mov
cmp
jl
fs
or
test
mulb
mov
dec
jne
add
out
addl
shl
mov
mov
sub
pop
mov
hlt
frndint
insb
out
sub
sbb
cmp
dec
loope
xor
add
jle
adc
nop
pushf
lret
js
adc
jne
mov
rclb
fadds
push
jo
idivb
stos
add
out
cmp
adc
repnz
dec
adc
dec
int
and
mov
inc
bound
inc
cmpb
jmp
out
testb
sahf
mov
adc
inc
cwtl
out
out
mov
pushf
xchg
xchg
out
pop
jbe
aad
out
aad
push
cltd
mov
imul
in
popa
cmpsl
outsl
mov
aam
lock
sti
cwtl
mov
nop
and
das
sbb
xchg
lock
push
push
cli
add
sub
outsb
ja
cmp
pop
fcomp
cs
xchg
jae
jae
sbb
repnz
sbb
inc
xchg
adc
addr16
jae
and
adc
sti
mov
scas
ret
adc
mov
dec
enter
xchg
rorl
into
int
inc
out
mov
dec
pop
in
xchg
aas
stos
mov
jecxz
dec
les
ds
cmp
es
mov
insb
outsb
outsb
outsb
xchg
mov
int3
push
aad
push
jge
icebp
jecxz
push
sbb
loop
mov
outsb
outsb
aas
mov
jb
shlb
and
pop
lock
ljmp
pushf
jno
pop
gs
cli
pop
sbb
out
test
fwait
fwait
fwait
xchg
push
lods
and
adc
push
hlt
add
dec
xorb
out
pop
cld
pop
sbb
pop
xchg
int3
jmp
xchg
or
sbb
adc
aas
test
movsb
inc
cmp
push
outsb
outsb
outsb
outsb
jg
iret
cmp
sub
popf
pop
hlt
insb
outsb
dec
add
jns
cmp
or
mov
fisttpl
mov
cmp
pcmpeqd
cltd
mov
mov
stos
ret
mov
lret
jnp
outsb
scas
cli
flds
sub
xchg
aad
fbstp
sbb
jne
loopne
insb
sbb
add
mov
jbe
add
sahf
in
and
das
mov
divl
inc
fmuls
mov
dec
rcrl
scas
push
inc
mov
mov
lock
cld
push
mov
clc
xchg
cmp
fistpl
mov
ret
pusha
sarb
push
mul
adc
js
pushf
mov
xchg
ds
sub
int
mov
xor
arpl
call
into
aam
jle
mov
xor
rorl
je
cmp
lock
adc
or
fdiv
adc
mov
mov
fdiv
dec
aam
roll
ret
push
sahf
cs
ljmp
mov
add
inc
inc
stos
xor
pop
xchg
call
cli
add
pop
sbb
aas
inc
xchg
cmp
clc
dec
repnz
push
pop
cmp
leave
xchg
add
outsb
shll
push
insb
mov
fcomi
mov
sbb
mov
ja
jmp
add
loope
jle
int
push
mov
cmp
imul
jns
loop
popf
fwait
fwait
push
es
xchg
int
jae
insb
sub
sbb
cmp
push
es
inc
dec
fimull
je
repnz
sub
adc
mov
or
jns
mov
mov
idivb
loopne
outsb
cli
fnop
fwait
jb
ret
sbb
push
dec
ja
outsb
outsb
outsb
outsb
int3
cmp
mov
xor
test
cmp
jae
cld
gs
loopne
sarl
nop
mov
mov
popf
mov
inc
clc
shl
sti
insb
mov
xchg
inc
test
xchg
dec
lock
pop
data16
insl
movsb
add
pushf
hlt
rcll
lret
and
jnp
loopne
movsb
fcmovb
xor
int
addr16
mov
iret
mov
add
aaa
aaa
mov
sub
mov
push
rcll
cmp
adc
mov
popa
push
xor
jae
jge
push
insb
mov
aaa
mov
andl
ret
cmp
ds
push
push
enter
add
sub
cmp
inc
sbb
push
imul
xor
jns
cmp
mov
orb
jbe
cmp
mov
out
js
xchg
jg
in
je
cmp
aaa
aas
fwait
fwait
push
or
js
push
xchg
fdivrl
ret
rcll
popa
xchg
shrl
scas
cli
mov
ljmp
aas
pop
imul
and
mov
loopne
mov
xor
inc
xchg
adc
jle
aaa
cmp
fsubs
dec
ja
int
push
loop
iret
repnz
xor
sbb
int
add
or
loope
or
fstps
lcall
popf
xlat
outsb
outsb
das
icebp
lahf
mov
dec
pop
pusha
pop
jne
or
outsb
outsb
outsb
or
mov
pusha
pop
mov
or
std
insb
outsb
xchg
outsl
movsl
popa
push
mov
jl
das
inc
pop
aaa
aas
fwait
fwait
lods
push
leave
mov
jae
fdivrl
shll
shlb
ret
rcrb
in
jae
je
xchg
clc
sub
arpl
sub
insb
insb
dec
lock
adc
js
mov
aad
cmp
mov
jl
divb
inc
mov
imul
out
cmp
arpl
sub
mov
loope
jl
jb
popf
repnz
bound
loop
push
dec
out
divb
test
incl
aam
pop
jne
fistps
jo
adc
fdivrl
mov
dec
sbb
adc
enter
and
fsubrl
imul
adc
fistl
scas
imul
cld
insb
outsb
aas
les
bound
lock
fsubl
lods
lods
cli
push
in
in
aaa
aaa
aaa
aaa
mov
push
xlat
call
clc
push
cmp
aam
ret
dec
sahf
ficoml
pop
sbb
inc
add
nop
jp
ljmp
outsb
lahf
ss
test
push
xchg
sbb
jb
cmc
mov
mov
inc
sbbb
pop
repz
fwait
fcmovnu
and
xor
jecxz
or
adc
add
adc
xor
mov
cmpsb
push
mov
icebp
pop
std
lahf
dec
adc
dec
push
xchg
popa
fcompl
cltd
frndint
mov
addb
mov
jl
fdivr
mov
sbb
jae
jno
xchg
mov
das
sub
stos
loop
icebp
push
aam
rcll
xchg
push
ss
pop
cmp
jbe
sub
fcomip
lds
into
in
jb
mov
push
add
xchg
cmpsb
sub
insb
outsb
pop
sub
icebp
xchg
aaa
dec
lea
popa
icebp
fmuls
ds
mov
sahf
mov
dec
sbb
and
fwait
and
mov
aam
mov
pop
in
sarb
mov
inc
repnz
mov
cmp
jle
xlat
cmp
xorb
jae
adc
dec
aaa
sbb
scas
out
jae
jae
dec
cmpsb
loopne
xchg
std
jbe
in
pop
iret
out
fcmovne
cmp
int
sbb
cwtl
and
jle
push
test
stos
and
pushf
fwait
sbb
pop
adc
fwait
fwait
lods
cmp
xchg
inc
mov
mov
movl
hlt
mov
lds
fnstcw
mov
mov
jecxz
ds
add
out
test
push
jo
hlt
ss
mov
outsb
outsb
outsb
clc
mov
push
push
out
xchg
out
out
xorb
pop
nop
add
lahf
pop
dec
insb
out
out
loope,pn
int
pop
lret
xor
int
ja
addr16
addr16
scas
popa
out
sub
iret
inc
clc
dec
lock
outsb
outsb
js
mov
push
in
data16
mov
enter
lods
out
fwait
mov
dec
jns
bound
data16
in
daa
cmp
scas
or
mov
sbb
mov
idiv
dec
shll
cmpsb
pop
js
clc
ds
insb
loopne
inc
jecxz
sub
mov
cmp
popf
mov
sbb
shl
jae
std
mov
adc
outsb
xlat
les
insb
sub
xchg
imul
fdivr
insb
pop
mov
add
movsb
mov
test
pop
out
out
imull
insb
xchg
subl
lock
fdivr
add
dec
fnstcw
xor
fwait
movsl
ret
jae
jae
xchg
mov
jnp
fs
ljmp
jecxz
in
or
aaa
mov
mov
cmpsb
repnz
adc
pop
fs
outsb
clc
fnstenv
push
dec
cmp
push
mov
iret
scas
insb
jbe
adc
scas
sbb
cmp
jp
sahf
jb
test
jmp
or
jecxz
sarl
dec
sub
sub
mov
addb
cld
int3
divb
mov
arpl
push
aad
cltd
test
jbe
pop
pusha
dec
or
int
push
sbb
xlat
cmp
in
dec
orb
ds
je
test
fsubl
shlb
dec
push
in
out
out
loope
imul
das
lahf
pushf
dec
mov
xchg
out
out
inc
stc
cli
and
adc
test
jae
stos
enter
in
mov
dec
mov
loope
cmp
inc
loopne
jbe
iret
int
xchg
mov
sub
test
jle
outsb
fldl
stos
add
int
in
addr16
cmc
inc
xchg
pop
adc
rcll
int
sub
and
out
ss
aaa
mov
fisubl
movsl
jg
loop
clc
fwait
fwait
sbb
popf
pop
and
into
leave
icebp
ljmp
fwait
test
aaa
jnp
jbe
adc
push
sahf
xor
dec
xlat
fwait
fwait
fwait
fwait
dec
adc
ret
mov
inc
adc
cwtl
cltd
mov
push
clc
adc
imul
ss
aaa
mov
inc
loope
cmp
sub
repz
push
dec
cmpsb
in
cmc
fnstcw
xchg
mov
leave
add
imul
subb
imul
pop
les
xor
fs
ljmp
and
cmpsb
add
call
into
out
lret
sbb
lock
jl
in
sahf
or
mov
adc
call
xchg
std
pop
shl
pusha
dec
mov
sbb
filds
push
es
mov
mov
ss
fld
cld
sub
adc
fwait
sub
cld
test
jmp
xchg
pop
cld
sub
jl
mov
pop
psubb
xor
lods
mov
mov
addr16
and
sub
insb
cld
sbb
push
lahf
jbe
lahf
add
add
insb
faddl
adc
cmp
pop
push
iret
cmp
subl
out
jmp
int3
out
add
sahf
int
jg
pop
mov
pop
mov
ds
adc
call
xor
iret
int
outsl
jl
pop
xor
es
dec
rclb
adc
sub
xchg
push
int
int
cmp
dec
divl
xchg
xor
es
scas
mov
xor
jbe
ds
push
mov
out
notb
insl
clc
insl
push
sahf
clc
in
dec
data16
ds
mov
in
pop
jae
and
test
mov
insb
imull
sahf
fcmovne
cld
jmp
loopne
subl
jg
in
aaa
fdivrs
fwait
fwait
fwait
dec
inc
ret
push
outsb
int
and
jp
jge
adc
sbb
in
test
pop
inc
fs
call
pop
into
jecxz
mov
mov
std
icebp
inc
lock
cli
imul
mov
repnz
popa
or
shll
ficompl
iret
mov
add
fdivrl
mov
add
xor
mov
pushf
pushf
call
jo
and
or
cmp
dec
std
sub
test
mov
out
js
mov
and
repz
ret
outsb
and
js
sub
dec
mov
xchg
inc
pop
sahf
inc
mov
adc
sub
leave
cmc
fstps
int3
push
mov
and
notb
stos
cmp
out
fst
or
sub
cld
jae
jae
ljmp
jge
popa
imul
sti
fidivrl
pop
test
gs
mov
int
addl
jbe
icebp
cmp
mov
data16
je
cmpb
outsb
adc
adc
push
rolb
out
arpl
aas
sbb
mov
lods
and
lret
jp
mov
loop
test
mov
stos
xchg
les
and
add
pop
icebp
and
std
mov
xor
inc
sub
fsubl
sub
dec
clc
dec
ljmp
sub
pop
hlt
orb
or
int
pop
add
enter
cmpsb
stos
fwait
or
and
pop
and
inc
push
xor
or
mov
je
hlt
jnp
fwait
fwait
fwait
pop
cmp
stc
xor
or
sbb
cmp
fwait
and
pop
test
je
std
dec
lods
pusha
xchg
mov
pop
and
mov
call
adc
xchg
adc
push
repz
adc
lcall
call
data16
ret
call
outsl
js,pn
cmp
cld
pop
call
sti
insb
outsb
outsb
insb
arpl
adc
into
jbe
fcompl
fists
xorb
mov
je
or
or
lret
jo
ljmp
aam
test
mov
test
xor
push
mov
jle
pusha
jecxz
jne
push
fidivl
pop
insl
push
movsb
lods
and
push
repnz
and
jmp
out
cmp
sbbb
or
inc
jg
and
lcall
enter
mov
sub
in
xchg
cmc
inc
jmp
xchg
push
and
lods
lahf
int
orb
movsl
test
test
neg
fsubrl
adc
adc
xor
dec
insb
fwait
lahf
int
int
cmpsb
jecxz
pop
jg
mov
xchg
jl
mov
popfw
daa
inc
jp
les
cwtl
xchg
pop
js
mov
addb
out
pop
out
xchg
cltd
mov
idivb
fbstp
popf
xchg
les
iret
aam
int3
cli
jb,pt
mov
std
insb
outsb
add
dec
dec
and
stos
and
shl
or
xor
ds
sbbl
push
mov
mov
dec
shll
dec
mov
lret
dec
jae
shlb
iret
aam
push
sbb
fdivrl
sbb
shrb
sbbb
cli
cwtl
fcoms
jae
jae
mov
jo
sub
push
ds
clc
sub
ret
int
jae
into
pushf
inc
dec
mov
sahf
jae
fildll
jle
iret
int
jne
orl
scas
inc
outsl
push
sarl
jb
mov
inc
xchg
xchg
mov
fdivl
insl
in
insb
aaa
jno
repnz
into
pop
enter
clc
ret
nop
jb
inc
js
lret
out
xchg
pop
pop
nop
xor
inc
jle
ror
out
sub
mov
jge
loope
jae
sti
fwait
mov
mov
mov
sub
inc
push
jecxz
std
and
ds
pop
pop
movsb
aaa
aaa
aaa
aaa
and
inc
fstpt
cmp
sbb
leave
fwait
jp
aaa
or
cmp
mov
or
pop
mov
iret
out
pop
cmp
shr
jae
in
jo
sub
mov
addr16
out
lods
pop
fucomi
cmp
out
sub
add
adc
call
aas
fwait
mov
test
ds
ds
subb
les
add
mov
in
out
insb
arpl
hlt
mov
dec
jae
inc
inc
push
xchg
mov
mov
jns
push
out
lahf
jno
sub
inc
push
pop
add
xchg
test
in
out
mov
ret
mov
cmp
mov
in
adc
outsb
fsub
ret
push
movsb
les
loopne
outsb
aam
sbb
fcomi
cmpsl
sub
sbb
in
insb
jnp
leave
repnz
push
iret
int
lahf
subl
les
fdivl
push
aam
ds
insb
mov
in
xchg
sarl
sub
gs
stos
xor
mov
ds
sub
cmc
fsubl
test
aad
lahf
stc
les
adcb
outsb
mov
rorl
in
leave
jo
dec
and
outsb
pop
repnz
fldenv
insl
rcr
aaa
aaa
jl
mov
sub
cmp
aaa
aaa
mov
push
imulb
pop
repnz
arpl
mov
or
cltd
mov
jge
filds
in
aaa
adc
jne
jmp
mov
addr16
inc
dec
pop
mov
scas
xchg
jle
int
aas
pop
and
push
pop
rcrb
int
mov
inc
in
push
xchg
push
sti
aaa
mov
std
xchg
sub
xorb
das
lock
mov
mov
mov
fildll
cmpb
pop
test
dec
stos
sub
jae
pop
lock
or
imul
jmp
jae
jae
leave
push
test
repnz
fwait
aaa
mov
addr16
inc
xchg
dec
test
outsl
sahf
xchg
icebp
fdivrl
lcall
lds
hlt
hlt
cld
outsb
scas
clc
cmp
or
iret
outsl
cmp
cli
insb
outsb
jmp
push
or
cmp
movsb
sbb
out
push
xor
pop
sbb
outsb
outsb
rclb
jmp
mov
sti
addr16
push
xchg
jno
lahf
mov
fisttpl
mov
scas
jb
sbb
sbb
ss
adc
sub
cmp
xchg
jle
ja
es
loopne
xchg
pcmpeqd
sbb
mov
insb
mov
out
mulb
mov
lds
dec
das
test
pushf
int3
cmc
sti
fdivrl
xorl
stos
idivb
xchg
push
sub
jae
jae
push
push
scas
out
push
xchg
dec
mov
jae
adc
push
xchg
xor
pop
jl
and
lret
push
fxtract
outsb
jle
out
jbe
jle
sahf
stc
add
aas
lock
fcmovne
adc
cmp
jbe
add
in
sub
cmpsb
adc
sbb
inc
out
iret
int
ss
dec
jo
and
mov
mov
mov
mov
add
aam
push
mov
mov
rolb
hlt
sbb
fsubrs
int
add
cmp
int
js
add
les
int
xchg
aam
out
mov
out
clc
lock
inc
aaa
push
xchg
ljmp
fsubl
jae
xchg
jo
fdivp
lret
pop
push
loope
clc
mov
dec
outsl
fs
jle
test
and
and
addr16
mov
insb
out
inc
out
out
xchg
cmp
orl
js
out
out
shr
add
orb
out
inc
es
sub
and
dec
out
out
addr16
pop
xchg
or
mov
andb
cmpsb
add
cmpsl
pop
fdivp
lods
fs
cmp
jae
sbb
jge
insb
xor
data16
cwtl
ss
jge
push
mov
lret
sbb
divb
mov
std
insb
outsb
pop
cmpsb
jl
mov
push
mov
lret
sbb
sbb
and
add
out
mov
add
scas
adc
ret
adc
or
test
pop
push
ljmp
mov
mov
iret
in
mov
inc
mov
mov
hlt
sub
int
stc
jg
shrl
jae
jae
mov
mov
xor
adc
jecxz
rclb
push
sbb
pop
mov
cmp
test
sub
mov
mov
outsl
sub
xorb
enter
movsl
and
adc
out
ss
mov
mov
cmp
scas
cmp
add
sahf
pop
pop
jbe
test
push
test
in
jnp
cmp
mov
fwait
cmp
scas
fucomi
adc
int
int
xchg
sub
and
in
or
push
adc
mov
repnz
and
push
ror
testl
xchg
div
or
divl
test
aaa
mov
inc
sbb
pop
clc
out
mov
aad
call
aaa
js
popf
pop
inc
push
or
fwait
fwait
fwait
push
cmc
negb
ljmp
push
jnp
subb
xor
rcrl
clc
mov
sbb
fmull
mov
ret
dec
jnp
or
pushf
fs
test
jmp
fistl
rcrl
fs
out
out
xchg
inc
dec
adc
xlat
jmp
iret
out
inc
aaa
inc
aad
mov
test
add
popl
adc
out
jno
add
push
cltd
stos
movsl
mov
inc
mov
dec
cmp
rolb
lcall
bound
testb
loopne
ljmp
jl
sbb
mov
sub
xor
and
jb
idivb
xor
sub
sub
xchg
data16
out
out
push
mov
sbb
pop
cmp
adc
jae
iret
cmpl
add
jo
and
incb
mov
mov
cmpsb
insb
add
adc
fdivrs
clc
jnp
jbe
cmp
lcall
iret
push
push
popf
jae
sti
fmull
rol
adc
jg
pop
xchg
cmp
out
fbld
cmpsb
clc
mov
push
xchg
push
mov
out
fs
lods
xor
mov
out
push
aad
pop
test
outsb
outsb
outsb
outsb
dec
int3
fdivrl
jae
jl
push
dec
int3
test
sbb
pop
out
lcall
imul
test
cmp
das
ja
adc
mov
shll
les
out
adc
and
inc
test
and
lret
pusha
mov
outsb
lahf
mov
add
sbb
les
mov
neg
jp
pop
cli
dec
rcrb
lahf
fcmovne
out
scas
insb
jb
add
test
sbb
std
insb
outsb
in
inc
inc
cmp
xchg
stos
mov
mov
sbb
push
out
testb
addr16
sahf
cmp
addr16
out
jno
out
mov
sbb
sbb
cli
jge
lea
xor
jle
outsb
outsb
outsb
outsb
and
push
mov
test
out
mov
outsb
outsb
cltd
and
inc
cltd
inc
mov
hlt
subb
popf
mov
inc
push
cmc
fstps
nop
or
mov
dec
loop
testl
pushf
lds
jne
xchg
pushf
pop
mov
hlt
cs
loopne
mov
jo
dec
lea
xchg
jl
jnp
arpl
push
test
xchg
shll
mov
mov
pop
icebp
jae
jae
pop
ret
push
xchg
movsl
mov
xor
jae
gs
lahf
jbe
sub
int
mov
jns
mov
pop
mov
lods
aas
inc
out
popl
mov
adc
dec
int
stos
insl
int
es
sti
ss
add
mov
mov
pop
lock
addb
push
fsub
imul
rcl
sub
xor
push
gs
jb
cltd
fiaddl
lock
lea
js
jl
dec
gs
jge
adc
sti
dec
js
push
mov
dec
xchg
or
mov
in
sub
das
loop
fs
adc
pusha
jne
out
mov
xchg
xlat
push
fidivs
es
aam
fcmovne
out
lods
lcall
in
push
pop
inc
xchg
ds
fwait
and
inc
fisubl
cmp
mov
dec
sbb
mov
cmpsl
movsb
mov
mov
cmp
cld
loop
into
aad
jge
mov
out
dec
cmp
mov
cli
cli
jge
ret
mov
mov
imul
pop
popa
cmp
arpl
adc
int
in
notl
mov
fcmovne
out
push
loopne
mov
lods
out
lahf
int
add
xor
leave
mov
push
out
into
sbb
mov
push
out
ret
cmpsb
adc
aaa
pop
jl
out
or
loop
shrl
aaa
aaa
das
dec
wbinvd
pusha
add
xlat
ret
mov
aaa
aaa
aaa
bnd
and
jb
pop
imul
sbb
outsb
outsb
outsb
rcrb
xor
pushf
in
outsl
hlt
out
and
pop
inc
or
dec
inc
aas
add
mov
mov
sbb
lahf
int
js
aam
and
xchg
insl
add
pop
sub
cs
adc
mov
ss
fnsave
adc
mov
mov
mov
test
scas
sbb
inc
gs
mov
jge
fisttpl
fwait
push
jo
repnz
rol
addr16
inc
jmp
data16
vmread
cltd
add
adc
out
cli
fdivrl
rcrb
mov
xor
sbb
pushf
testb
pop
dec
mov
out
out
xchg
fsts
mov
cmp
clc
aaa
adc
out
out
pop
mov
pop
aam
and
mov
int3
mov
and
rclb
push
cld
jg
mov
pop
add
mov
rcrl
fwait
pop
push
incb
xchg
int
push
sub
add
and
add
pop
mov
stos
mov
clc
fdivrl
cli
ficompl
fwait
in
lods
push
sti
fsubrl
lods
ffreep
xchg
and
jae
inc
dec
sbb
js
repz
out
add
xchg
jp
inc
lahf
fbld
jae
jecxz
mov
xorl
add
icebp
jge
mov
xchg
repz
or
and
inc
cld
cmp
aaa
aam
std
pop
pop
jb
pop
and
and
pop
ljmp
shrb
sub
ds
fisttpl
in
addr16
cmpsl
into
xchg
fwait
xchg
or
jb
and
test
mov
int
mov
cmc
inc
sub
xor
fdivrl
shlb
jo
daa
loop
enter
fmull
xor
inc
mov
clc
jae
jae
lock
sbb
xor
into
pop
jae
jae
dec
sbb
push
push
push
mov
daa
adc
cmp
mov
ja
out
mov
jecxz
mov
repnz
icebp
fcom
cmp
add
pop
sub
aaa
mov
aam
popf
rcrl
pop
subl
ret
aaa
aaa
aaa
aaa
cmp
jo
lods
xchg
rcr
push
aaa
aaa
aaa
mov
cwtl
and
mov
hlt
cmpb
xor
cli
aas
mov
jge
cld
dec
push
fsubr
int3
js
or
imul
lahf
xchg
adc
xor
in
mov
mov
jmp
cli
rorl
jl
movsb
ret
outsl
add
pop
je
iret
in
sar
pushf
out
pop
inc
mov
and
mov
pop
imul
push
sub
or
es
jo
xor
aaa
aaa
aaa
mov
cmp
fdivs
jle
out
mov
xorl
pop
xchg
sbb
adc
enter
xor
out
add
test
sti
aaa
jb
sub
cmp
scas
mov
loope
addb
arpl
pop
addr16
stos
fiadds
out
dec
cli
lret
fldl
test
and
cld
dec
cli
and
push
dec
inc
adc
fdivl
int
dec
sub
sbb
ret
stos
push
fdivs
mov
mov
fimuls
jae
dec
add
pcmpgtw
push
inc
es
out
divb
ficompl
jo
out
out
lds
mov
adc
out
inc
mov
push
in
jae
push
or
addr16
push
aas
sahf
scas
ds
mov
jbe
int3
int
arpl
out
cmp
enter
add
into
cmpsl
dec
add
dec
je
adc
ljmp
shl
rcrb
fsub
pop
and
iret
int
mov
mov
rcll
or
fdivrl
adc
and
pusha
cmpsb
mov
faddl
push
scas
jae
push
je
in
test
xor
sbb
aam
mov
mov
ds
fdivrl
mov
hlt
fstpl
adc
sti
flds
enter
xchg
aad
mov
out
lahf
xor
call
pop
out
notl
out
pop
fsubs
xchg
mov
int
in
fwait
mov
in
mov
stos
fwait
repnz
push
add
lahf
int
xor
loope
and
inc
hlt
jmp
in
jae
sti
fmull
jp
mov
cmp
je
adc
push
rcr
jge
mov
jae
xor
adc
cmc
mov
push
test
lods
xor
cli
fnstcw
test
int
int
addr16
in
bound
out
stos
lahf
and
push
je
test
pop
adc
int
iret
out
inc
cli
sbb
cwtl
pop
mul
cmp
iret
int
lcall
enter
faddl
jle
inc
rol
and
jmp
mov
xlat
out
pushl
mov
dec
xchg
pop
mov
pop
mov
adc
cmpsb
fmuls
adc
inc
insb
sarl
loope
icebp
fcompl
and
dec
or
ja
cld
push
jo
inc
sbb
aam
int
sbb
mov
inc
popf
notl
int
sbb
repnz
int
int
lods
inc
ficompl
stos
and
cmpsl
jle
int
pop
into
xchg
andb
call
scas
clc
mov
rcr
in
imul
outsb
rcrb
mov
aas
mov
cli
andb
and
pop
mov
sti
insb
aas
fstpt
mov
mov
adc
fcmovnb
int
mov
mov
std
cld
pop
inc
int
insl
sahf
outsl
jmp
jmp
push
clc
dec
sbb
ret
and
pop
pop
cmp
cs
mov
cmp
xor
inc
arpl
mov
or
xchg
ret
pop
inc
xchg
icebp
mov
cli
push
lea
xlat
mov
fsubrs
xor
xchg
sahf
enter
jmp
clc
jbe
stos
testl
out
jg
sbb
pop
movl
jae
ror
and
popf
xchg
add
jae
jae
pop
or
mov
movd
jb
repnz
xor
andb
push
loopne
xlat
jns
sub
les
mov
inc
jle
pop
xor
sarb
xor
sbb
sbb
mov
sub
movsl
jbe
sub
aad
or
test
outsb
out
adc
clc
mov
cmp
addl
sub
xchg
in
repz
arpl
sahf
fwait
fwait
add
mov
xchg
push
lahf
int
in
lea
and
push
repz
add
aaa
mov
cmp
test
lahf
cli
int
inc
pop
enter
or
icebp
mov
jp
fdivrl
lahf
adc
sbbb
fadd
and
cs
in
out
fldl
out
stos
scas
stc
adc
dec
addr16
pop
out
clc
sti
lret
jae
in
xchg
sub
das
add
mov
iret
sbb
test
dec
or
iret
loopne
mov
outsb
mov
in
popf
fbstp
sti
add
inc
push
push
pushf
mov
jae
mov
add
sbb
aaa
mov
or
sarb
inc
xor
aaa
aaa
aaa
ds
daa
and
and
mov
mov
jbe
sbb
sahf
aas
cli
fsub
lahf
outsl
lcall
ret
mov
xchg
icebp
in
shlb
cmp
dec
push
mov
cmp
jle
int
push
or
gs
rorb
push
add
fwait
add
add
sub
sub
push
lahf
ret
xchg
lcall
fcompl
add
sub
jae
jae
lret
lret
insb
stc
jle
stos
test
jae
pop
add
jge
sbb
test
mov
cld
jns
mov
add
xchg
clc
insb
mov
jbe
in
dec
jecxz
repnz
jle
mov
sbb
jno
filds
clc
mov
movsb
lods
and
clc
loop
gs
outsb
adc
sahf
repz
fcmovne
jbe
std
xor
std
mov
xchg
jg
pop
push
ds
fwait
xor
sbb
shl
fs
cmpsb
int
mov
aaa
push
cmp
ljmp
ss
cmp
aaa
sub
addr16
movsb
cmc
jo
fdivp
jmp
and
out
in
mov
mov
out
inc
ret
sahf
or
sbb
out
mov
mov
repz
out
pop
arpl
imul
pop
pop
jle
jne
push
lahf
fwait
fwait
pop
sbb
inc
sbb
sbb
shlb
mov
push
test
sahf
ds
push
add
je
das
xchg
inc
add
inc
insl
out
cmp
cltd
shrb
je
xor
out
out
inc
mov
je
sub
sbb
or
pop
imul
push
scas
add
sub
sbb
out
out
push
rol
pushf
stos
jecxz
stc
pop
out
cmp
push
cwtl
push
gs
out
push
int
int
stos
xor
movb
xor
sahf
lea
adc
fistl
rolb
ss
dec
icebp
push
mov
add
lahf
fldt
dec
sbbb
sbb
test
mov
and
or
jbe
gs
push
or
dec
data16
inc
inc
outsl
xchg
lahf
fstpt
or
inc
ljmp
jl
outsb
outsb
outsb
outsb
test
jmp
pushf
fcmovnb
xchg
mov
outsb
outsb
outsb
outsb
out
cmp
mov
outsb
outsb
outsb
xchg
bound
mov
test
jmp
movsl
cmp
jle
mov
in
div
sar
inc
andl
in
bound
jecxz
cs
xchg
shlb
sub
loop
push
sub
xchg
or
fists
lret
adc
jl
nop
inc
mov
mov
jle
sub
pushf
cmp
sub
push
sub
ds
mov
adc
adc
push
xchg
sub
out
out
cmpsl
jne
pop
push
push
mov
sbb
icebp
js
jge
nop
int3
fiadds
push
movsb
mov
aad
aad
add
pop
jmp
mov
cmp
or
pushl
mov
loopne
cs
iret
jbe
cmp
je
inc
movsl
mov
mov
insl
lret
test
fcmovne
aam
push
subl
adc
shlb
push
mov
mov
loope
jp
xchg
gs
mov
jno
mov
loope
or
rolb
cld
sub
fnstenv
dec
mov
hlt
push
mov
add
stos
int3
push
shl
jae
jae
aam
lods
mov
sbb
iret
pop
pop
pop
adc
cld
jo
mov
xchg
fidivs
xor
sbb
dec
inc
xchg
shl
mov
int
int
xor
mov
stos
xor
rolb
xchg
pop
lock
inc
cmpsb
pop
fwait
sub
mov
out
cs
hlt
sbb
fcmovne
out
pop
adc
jo
mov
or
fwait
fwait
fwait
fwait
dec
cmp
loop
jo
and
fwait
fwait
fwait
fwait
push
js
jbe
mov
shll
outsb
cmp
inc
imull
fwait
fwait
fwait
fwait
jge
mov
push
stos
xlat
pop
aaa
ja
sahf
cwtl
and
sbb
iret
add
aaa
sub
sbb
ud1
addr16
out
ds
data16
mov
stos
test
or
addr16
xchg
mov
mov
mov
ret
jl
lods
daa
cltd
pop
test
dec
sub
mov
ja
aas
stos
jle
jl
cmp
loope
fnsave
mov
mov
stc
jmp
push
dec
jmp
repz
mov
roll
mov
scas
in
mov
dec
and
fs
jp
dec
icebp
sbb
das
add
pushf
jae
mov
mov
xor
jae
sub
das
js
push
mov
mov
jge
mov
out
fst
jmp
mov
cld
inc
pusha
enter
adc
testl
jno
outsl
mov
mov
insb
sbb
mov
inc
out
xor
rolb
bound
fdivs
cltd
xor
mov
jg
or
push
mov
fdiv
mov
ds
push
xchg
lahf
movb
test
fprem1
sbb
xlat
jno
inc
int
int
cmp
xchg
xorb
data16
int
dec
cmp
lret
in
out
imul
sub
push
andb
ret
dec
mov
inc
sub
ret
mov
test
fdivrl
call
or
jae
push
pop
stos
push
mov
cld
bswap
int
in
mov
repz
mov
or
xor
push
sub
jbe
sbbb
or
mov
in
xlat
sbb
sub
dec
loop
dec
pop
sbb
xor
mov
mov
adc
arpl
into
stc
jge
fwait
fwait
fwait
imul
cmpsb
clc
cld
ret
mov
mov
repz
xchg
gs
pop
or
dec
fdiv
jae
dec
shlb
adc
cmpsl
scas
xor
daa
lods
addr16
sbb
out
iret
insl
push
cmc
inc
fimuls
adc
test
out
popf
cmp
lret
sbb
inc
shll
xchg
rolb
cmp
iret
testb
test
orl
xor
fwait
fwait
fwait
jo
cmp
aam
gs
xor
cwtl
ja
cmp
fwait
mov
add
icebp
mov
xchg
fwait
sbb
cli
mov
mov
ficomps
int
in
add
or
push
rcll
push
dec
xchg
rorb
lcall
iret
or
test
stos
inc
fcoml
cld
scas
test
add
rolb
aaa
mov
test
push
js
clc
mov
aam
pop
jns
push
cmp
lahf
lods
in
lds
in
sbb
icebp
jnp
jne
push
push
mov
int
dec
or
lcall
lock
sub
push
pusha
sub
arpl
push
xchg
or
das
push
loopne
jle
cli
or
mov
xchg
mov
fldenv
bound
mov
fisubrl
adc
inc
inc
std
jle
mov
sbb
mov
sbb
in
bnd
test
jno
or
xchg
decb
mov
mov
add
and
les
sti
leave
test
pop
outsb
popa
into
rorb
or
jno
ds
pop
mov
movsb
ret
sahf
mov
fidivl
or
stc
fnstenv
push
push
mov
mov
prefetchnta
loop
adc
xlat
mov
and
fcmovbe
aaa
mov
int
lds
adc
mov
icebp
cwtl
dec
aaa
aaa
aaa
aaa
mov
and
mov
std
stc
or
aaa
xchg
sahf
cmp
xchg
pop
or
mov
or
cli
mov
jbe
jae
cmc
in
mov
mov
sbb
rolb
in
add
jg
adc
sbb
aaa
or
and
test
sbb
lds
mov
mov
aaa
aaa
aaa
aaa
repz
inc
frstor
fcoms
aaa
aaa
aaa
aaa
fwait
js
sub
dec
nop
or
aaa
aaa
aaa
aaa
in
sbb
dec
jnp
sti
jae
scas
cmc
sarl
aaa
push
or
fidivrs
ret
pop
aam
out
hlt
mov
pop
into
fnclex
adc
mov
popa
int
sbb
jb
sbb
sbb
xchg
outsl
lcall
or
cltd
sti
fnstcw
subl
inc
push
jle
sbb
mov
aam
test
sbb
mov
cltd
psubq
aaa
pop
dec
fadd
pop
lods
js
and
dec
lahf
in
sarl
mov
addr16
fdivl
repnz
jae,pn
cmp
sub
lock
xchg
fwait
mov
sarb
fwait
fwait
fwait
fwait
jle
pop
adc
ja
pop
cmp
sahf
out
xchg
andb
cmc
shlb
inc
scas
popf
rclb
xchg
jg
jle
xor
ljmp
les
hlt
mov
fistpl
inc
mov
fcompl
xchg
in
push
sub
mov
outsl
loop
nop
cmp
out
or
jmp
inc
ffree
xchg
or
pop
shlb
and
testb
aaa
aaa
aaa
imul
jmp
leave
jmp
fwait
or
aaa
xchg
loopne
call
push
inc
sbb
fwait
add
stos
fs
mov
lahf
jae
iret
testb
mov
inc
cwtl
push
rorb
jnp
sbb
mov
sbb
inc
mov
mov
into
mov
das
or
xchg
mov
pop
movsb
outsb
nop
mov
scas
movsl
fsubrl
jnp
out
xor
into
pop
in
insb
aam
mov
filds
mov
fidivl
cmp
adc
sti
cmp
stos
shrb
ror
cmp
inc
je
pop
orb
add
mov
jnp
outsb
sbb
mov
bound
adc
bound
mov
jbe
sbb
les
xchg
mov
je
jecxz
jle
movsl
jnp
fidivl
not
dec
or
scas
in
test
mov
dec
jbe
in
and
fstps
iret
sub
xor
xor
fwait
cmp
es
inc
ret
cmpsb
inc
pop
mov
jmp
js
mov
ret
scas
clc
push
cmp
pop
and
add
mov
adc
test
arpl
mov
daa
cmc
jne
fs
test
adc
fdivrl
jno
insb
pop
rolb
inc
shlb
pop
lock
clc
sub
test
repz
add
outsb
outsb
outsb
outsb
je
sbb
inc
or
inc
ss
lret
je
outsl
push
pop
hlt
mov
dec
outsb
outsb
outsb
outsb
lret
jecxz
xchg
inc
mov
outsb
sub
jnp
pusha
mov
fcomip
stc
mov
add
cmp
mov
mov
outsb
cs
xchg
or
addb
push
out
dec
clc
dec
int3
jl
mov
out
out
cmp
dec
in
nop
es
sbb
fidivrs
cwtl
nop
cmp
cmp
insb
push
jmp
sbbl
das
loop
pop
xor
aaa
aaa
aaa
dec
add
xor
jmp
aas
test
and
pop
jp
int
and
pop
jl
mov
sahf
or
dec
mov
jo
xor
pop
jp
push
sbb
cmp
add
imul
sahf
in
push
add
lea
fstpt
insb
dec
lods
adc
addr16
out
xchg
adc
cmp
adc
xorb
fwait
fwait
fwait
fwait
adc
out
and
movsl
inc
aam
popf
out
aas
fwait
fwait
fwait
dec
mov
stc
fs
insl
jge
std
insb
bound
xchg
push
cli
cmp
dec
loope
stos
lock
ss
lods
cmp
aaa
mov
out
gs
xchg
shlb
or
iret
out
in
sbb
sub
and
cwtl
push
lea
jae
mov
pop
xchg
jge
mov
aas
sbb
outsb
sbb
test
lock
mov
lods
push
shlb
dec
dec
mov
mov
adc
aaa
adcl
dec
call
mov
test
ds
push
sub
in
sub
aaa
aaa
aaa
sahf
adc
js
mov
fsubl
je
movsb
or
aas
mov
fprem
rcl
andb
or
fisttpl
clc
dec
mov
adc
pop
or
outsb
outsb
es
scas
lahf
xchg
in
xor
pop
insl
mov
outsb
outsb
adc
dec
cld
mov
sbb
movsb
or
fyl2x
movsl
mov
scas
mov
jle
xadd
xchg
mov
lods
jns
test
jle
cmovae
enter
push
int
lods
xchg
mov
add
push
xor
js
mov
pop
cmpb
push
add
push
push
push
xchg
test
jmp
mov
pop
adc
fclex
out
mov
imul
pop
xchg
jecxz
xorb
adc
clc
sub
or
cwtl
mov
sub
lods
insb
and
cmc
xchg
stos
cwtl
pushf
pop
std
insb
outsb
fisubl
out
adc
cmc
pop
lock
int
mov
fstl
mov
pop
dec
xchg
mov
out
out
mov
mov
xchg
adc
mov
pop
adc
add
cmp
bound
mov
pop
lock
sub
mov
cwtl
sar
mov
leave
pusha
jnp
faddp
aam
mov
push
mov
cmpsb
insb
push
clc
out
pop
adc
mulb
mov
shll
inc
cld
sub
or
lahf
int3
pop
out
fdivl
xchg
mov
add
call
push
lock
cmpb
scas
fadds
loopne
cmpsb
mov
test
mov
mov
fs
insb
adc
mov
clc
cmp
addr16
xor
cwtl
lret
test
jns
fisubs
fcmove
addr16
jp
cli
in
cmpsb
or
out
sbb
cmpsl
dec
daa
inc
loope
bound
ret
mov
dec
std
lahf
inc
mov
test
mov
mov
and
sti
mov
pop
add
into
cltd
ret
sub
sbb
gs
int
out
jle
iret
int3
jmp
cmp
addr16
xchg
push
jns
movsb
outsl
inc
jo
repz
adc
push
xchg
pop
or
scas
or
in
xlat
sub
cmpsl
mov
mov
int
roll
xchg
cmp
pop
mov
cltd
aad
aaa
aaa
aaa
sbb
pop
add
out
fmuls
mov
fdivrl
stos
mov
popa
popa
fst
stos
bound
jae
into
in
or
push
les
into
in
lea
push
in
hlt
xor
xor
pushf
mov
push
test
mov
imul
sti
iret
sub
sti
dec
cmp
ja
and
aas
filds
ret
leave
pushw
lds
pop
iret
int
mov
xlat
xchg
lods
outsl
aas
fwait
sub
add
jmp
cltd
mov
in
jle
mov
mov
clc
mov
addr16
notb
cmp
or
insb
outsb
outsb
adc
call
test
clc
ss
out
out
popf
lods
xlat
sahf
lods
stos
add
adc
sbb
adc
or
push
sbb
outsb
outsb
outsb
xchg
push
pop
les
mov
jns
mov
jecxz
std
insb
into
aaa
mov
dec
cli
lahf
dec
loope
cmc
scas
push
jle
shr
aaa
aaa
mov
out
inc
ljmp
roll
fnstcw
mov
or
lcall
pushf
pop
mov
ss
cmp
bound
aaa
push
pop
jb
push
ds
mov
insl
mov
icebp
std
or
mov
or
cmp
mov
push
stos
loope
ficoml
je
shrb
fsubl
shld
sti
push
xchg
lret
jno
pop
pushf
fimuls
xlat
addr16
imul
leave
mov
pop
sub
and
int3
fdivr
outsl
jecxz
sub
stc
enter
adc
inc
xor
mov
out
divb
mov
adc
out
arpl
xchg
out
hlt
dec
or
push
mov
inc
xchg
outsl
adc
mov
cmpsl
decb
jns
outsb
outsb
outsb
outsb
fildll
icebp
test
cmp
insb
data16
andb
aaa
mov
andb
and
movsb
inc
jecxz
out
dec
dec
clc
cld
test
push
js
cmpsb
iret
out
notb
mov
adc
test
out
inc
pop
pop
imul
adc
mov
out
in
mov
or
idivb
cld
stos
daa
dec
adc
into
push
xor
rclb
loop
and
addr16
jmp
outsb
outsb
outsb
out
gs
aas
push
ret
iret
testb
cmp
push
mov
jae
inc
les
jae
rcll
fmulp
cltd
lods
out
jecxz
aam
movsl
std
adc
lods
in
out
outsb
in
push
js
pop
push
xor
aaa
mov
xchg
fistps
sbb
push
add
pushf
rorb
sub
aaa
aaa
aaa
inc
stc
xlat
repz
scas
xor
scas
jns
ret
ss
test
xchg
pushf
in
xor
mov
cld
insb
out
clc
mov
movsb
aas
add
dec
inc
push
les
js
add
insb
je
mov
mov
stos
arpl
dec
repnz
stos
mov
lret
pop
scas
xor
cpuid
movsb
adc
add
xor
pop
insl
add
les
mov
out
pop
jmp
rolb
jae
enter
shr
mov
and
ss
out
xchg
pushf
sbb
xor
cmp
pop
sub
pop
das
test
lcall
fmul
int
int
sub
das
jne
push
es
ret
mov
int
int
loope
add
dec
sbb
jg
mov
out
scas
lock
mov
push
push
or
fxch
scas
jbe
cmp
or
mov
and
xlat
mov
vpcmpeqd
nop
shlb
out
jne
xchg
jnp
test
pushl
mov
ret
lock
adc
aaa
loopne
subl
call
imul
sti
push
cmpsb
gs
outsb
outsb
out
fiaddl
cltd
push
add
mov
cld
insb
push
je
mov
push
mov
faddp
mov
aaa
aaa
aaa
popa
scas
sub
mov
out
cmp
adc
inc
in
lock
orl
or
lahf
adc
push
mov
das
lret
adcl
jl
jnp
mov
or
fisttpll
iret
out
out
xchg
add
jmp
fdivr
push
adc
ja
rcr
mov
int
test
sbb
add
jp
ds
push
cwtl
mov
xchg
dec
rclb
mov
pushf
adc
ret
pop
cld
jo
pop
push
adc
sbb
jo
outsl
dec
je
pop
sbb
out
notb
mov
ret
xchg
iret
out
jge
pop
sub
sbb
ret
addl
les
jae
ret
retw
rcrl
or
loop
jae
ja
xor
mov
add
fisttpl
cltd
adc
mov
sub
push
aaa
aaa
push
cmp
ljmp
fs
inc
dec
push
sbb
push
jl
ss
aaa
addr16
fisttpll
mov
js
xchg
mov
cmp
sub
push
xchg
fcomi
add
loope
or
sub
int
inc
inc
mov
jns
fstp
out
push
push
or
or
sahf
push
push
sub
fcmovne
sub
xchg
xor
mov
dec
xor
outsb
outsb
aas
xchg
rorb
popa
sbb
inc
lret
fidivl
push
jge
or
and
sbb
sub
add
aaa
aaa
aaa
aas
push
lret
sub
mov
jge
xor
scas
aad
xor
fwait
or
cmpsl
pmuludq
cwtl
mov
std
insb
fidivrl
sbb
sbb
pusha
push
adc
adc
adc
push
add
mov
sarl
push
adc
add
fwait
add
rcll
jmp
into
ficoml
push
shlb
shlb
incb
clc
jp
aaa
mov
int
addr16
pusha
lahf
or
sbb
test
int
int
dec
jne
mov
mov
adc
cmp
int
int
mov
sub
mov
inc
stos
iret
int
jge
adc
gs
sbb
jae
dec
das
aad
imul
mov
fs
imul
push
ds
cmp
ds
insb
push
inc
imul
sarb
mov
xor
dec
mov
push
pop
out
jne
mov
mov
test
mov
iret
out
je
clc
sar
sub
cwtl
push
cmp
outsb
aas
fwait
fwait
ss
jns
addl
mov
dec
sub
daa
loope
iret
idivb
pop
in
add
dec
sahf
fwait
das
test
pop
jbe
pushl
pop
std
inc
fnstenv
adc
push
sbb
aaa
aaa
push
xor
xor
and
aaa
mov
sahf
mulb
cli
bound
ja
inc
out
out
out
mov
cmpsb
cmp
pop
and
cltd
decl
ljmp
cmc
jnp
ss
test
or
ss
fcoms
mov
mov
ret
les
mov
arpl
stos
push
stc
pop
and
in
imul
cli
jbe
lret
fwait
sub
dec
pop
pop
cs
push
lods
outsl
mov
fwait
data16
jne
jo
into
rcr
or
mov
add
into
mov
aas
dec
das
test
fdivrl
or
out
ja
mov
in
lret
clc
fnstcw
cld
jb
addr16
int
jmp
jecxz
mov
or
xchg
mov
int
mov
test
ss
aaa
aaa
aaa
aaa
movsb
xchg
iret
cmc
push
shlb
aaa
aaa
sub
daa
popa
mov
sti
jge
loope
iret
inc
test
mov
adc
and
xchg
sub
pop
add
xchg
pushl
pop
mov
neg
clc
push
or
rorl
decb
sub
enter
push
pop
hlt
mov
jecxz
bound
dec
ret
filds
int3
push
out
mov
mov
stc
add
lret
std
insb
inc
pop
cmp
test
pop
setl
push
lcall
or
xchg
out
into
sbb
pop
mov
inc
lahf
fwait
fwait
mov
inc
call
ret
int
push
roll
scas
popa
lds
int
pushf
pop
pop
leave
jnp
mov
movsb
out
out
sar
decl
adc
enter
lds
mov
sub
js
jae
jae
mov
fstl
lahf
push
xor
xor
mov
imul
lods
jae
into
jnp
aaa
aaa
aaa
aaa
das
sar
mov
movsl
cld
fdivrl
aaa
inc
pmulhuw
xlat
js
int
sti
fsubl
clc
dec
ja
jo
cwtl
adc
or
ret
push
in
mov
inc
dec
jp
sahf
pushf
nop
adc
lahf
int
sti
add
inc
fimuls
push
fwait
xor
ss
mov
insb
cmpsl
mov
insl
push
idiv
dec
and
fmull
stos
cmpsb
out
mov
int
dec
ljmp
inc
repnz
sarl
aaa
mov
int
push
cli
aas
sarl
bound
adc
aaa
aaa
aaa
adc
jbe
push
insb
adc
cli
xor
pop
aaa
repz
dec
mov
in
cmp
out
jno
cmp
aas
push
xchg
les
lahf
int
es
mull
pop
ljmp
inc
jb
push
adcb
inc
mov
mov
aam
adc
sbb
int
fcompl
mov
xchg
pop
inc
jb
push
mov
out
clc
ja
fistpll
xor
cli
xchg
ret
dec
sbb
outsb
ret
fsubrs
pop
mov
fmull
push
xor
jae
jecxz
clc
out
inc
js
test
ljmp
shlb
dec
idivl
push
bound
flds
mov
enter
outsb
adc
mov
xchg
adc
dec
sbb
in
out
mov
sbb
or
mov
adc
xor
jle
dec
mov
js
ret
push
ljmp
int
sbb
and
fwait
dec
cmc
cmp
xlat
and
das
mov
stc
or
xor
loopnew
sub
sbb
xlat
les
fists
imull
xchg
push
andb
fcmovnu
sbb
out
push
ret
repnz
adc
outsb
outsb
outsb
inc
aaa
fadds
xchg
out
xor
outsb
ret
jge
push
add
clc
cmpsl
mov
inc
loopne
jbe
jae
inc
loope
aaa
or
inc
push
mov
jae
jae
out
stos
out
xor
subb
jae
jae
push
loop
shrb
pop
cmpsl
mov
mov
push
pop
xchg
mov
dec
cmp
inc
mov
pop
call
sbb
xchg
push
mov
outsl
or
xchg
push
cmp
loopne
rcl
sbbb
sahf
in
sets
and
icebp
scas
or
ud1
fstl
in
iret
aad
cmp
mov
sub
enter
mov
divb
mov
call
out
imul
hlt
mov
aaa
mov
xor
dec
inc
loop
cli
ds
and
pusha
cld
mov
les
test
out
out
insb
xchg
cmp
jb
mov
out
mov
pop
pop
and
mov
lods
jns
out
out
sub
leave
arpl
mov
lahf
pop
ret
in
stos
fistpl
outsb
push
or
adc
push
xor
addr16
cld
sub
aas
add
and
pop
es
add
push
rcrb
sub
fwait
inc
xchg
iret
in
neg
test
pop
push
mov
stos
ds
sbb
adc
fcomps
jl
pop
out
clc
sbb
jge
test
or
and
push
mov
add
adc
in
fwait
fwait
stos
jle
icebp
mov
xor
fwait
fwait
inc
xor
shr
mov
mov
lret
aam
cmp
jno
sahf
decb
and
out
addb
jb
mov
push
inc
pop
dec
iret
aas
jle
xchg
or
es
dec
mov
sbb
scas
cli
insb
out
js
icebp
hlt
push
jp
mov
icebp
sbb
iret
push
sub
outsb
outsb
push
clc
insb
adc
sarb
clc
jge
leave
sub
jnp
pop
cmpsl
or
aam
adc
jae
xchg
ret
push
mov
sub
dec
lods
shrb
fmull
mov
call
mov
rolb
ja
pop
inc
pusha
mov
cs
jle
fisubrs
mov
je
jle
out
aas
bnd
mov
jb
test
jp
rolb
sbb
mov
int3
mov
rcr
das
test
dec
mov
fdivrl
or
icebp
jge
adc
sti
mov
andb
ss
mov
in
pop
mov
or
test
xor
or
xchg
ds
aaa
aaa
insb
cmp
sub
push
cld
fistps
sub
mov
cmp
je
mov
mov
dec
mov
xor
cmp
les
addr16
out
mov
push
popf
shrl
sbb
and
mov
orb
jo
sarb
es
xchg
push
inc
mov
lock
jle
sbb
dec
dec
xchg
bswap
insb
push
and
or
mov
loopne
jno
mov
pop
push
lret
inc
fadd
or
mov
cld
nop
xor
push
push
loopne
jl
xchg
test
xchg
shrb
movsb
lods
loopnew,pt
mov
inc
sbb
jecxz
adc
pop
mov
jge
leavew
das
inc
stc
test
pop
push
mov
data16
test
or
int
or
mov
jne
std
pop
inc
adc
int3
or
jne
ss
or
mov
sbb
les
adc
adc
shll
pop
sub
mov
movsl
adc
stos
xchg
rorl
mov
and
cmp
jns
fwait
fwait
fwait
dec
test
sbb
fs
adc
js
push
hlt
in
jnp
mov
sbb
clc
add
cmc
int
int
or
push
mov
int
int
mov
xchg
pop
fprem
sub
int
int
adc
daa
scas
and
inc
push
out
pop
xchg
pop
iret
int
jle
ja
jecxz
mov
adc
rcr
mov
and
int3
sub
or
movb
loope
out
out
aad
and
scas
xor
outsb
outsb
outsb
xchg
sub
add
popf
lret
jle
std
insb
fistl
pop
and
jae
mov
add
or
lcall
mov
xchg
jae
iret
les
sarb
filds
shlb
neg
sbb
fcmovbe
or
aaa
mov
test
out
in
mov
std
add
mov
loope
int
fs
xor
cmp
mov
inc
mov
imul
in
testl
insb
stos
add
lock
mov
fmull
lods
mov
in
testb
insb
sub
adc
out
out
and
filds
lds
jne
adcb
or
cmp
in
pop
icebp
mov
dec
xor
sar
sbb
in
mov
jo
sub
sub
mov
cld
mov
pop
sub
mov
jmp
aaa
aaa
aaa
aaa
std
call
lcall
inc
cmp
xlat
sbb
lods
aaa
icebp
idivb
stos
push
sbb
movsb
push
cmc
jmp
or
mov
insb
push
lcall
lea
fnstsw
fidivs
jae
test
or
imul
dec
clc
fdivrl
nop
hlt
or
lret
pop
cli
in
push
xchg
lock
adc
mov
aaa
aaa
aaa
xor
xor
les
aaa
aaa
je
xchg
add
inc
hlt
idivb
fwait
fwait
fwait
or
pusha
fs
fs
sub
fwait
int3
dec
xor
xor
jnp
jl
fmuls
shll
out
jae
cmp
push
clc
sbb
rclb
ss
fmull
ds
shl
inc
add
xor
jbe
jle
in
pop
pop
scas
insb
cwtl
push
cmp
push
push
jge
cmp
push
cmp
sbb
mov
and
sbb
xchg
mull
movsl
jae
xchg
jno
adc
outsb
cld
sub
test
mov
loope
sarl
fcomi
loopne
in
leave
mov
cltd
add
inc
or
adc
mov
outsb
pop
mov
shll
push
into
add
jl
or
jno
sub
cmp
dec
mov
push
cmp
cld
ret
mov
mov
arpl
xchg
push
or
dec
dec
cmp
mov
pop
addb
mov
lret
push
or
test
sti
js
outsb
js
iret
mulb
clc
xor
sbb
mov
outsb
outsb
lahf
xlat
mov
sahf
lret
jmp
push
lods
cmp
clc
insb
outsb
outsb
cmpsl
xor
inc
fdivp
dec
cmpsl
ja
jae
lret
mov
iret
cmp
les
jae
add
jmp
fistl
cmp
and
ret
jnp
cmp
addr16
xchg
jns
mov
insb
or
mov
insb
sti
xchg
hlt
jge
push
lret
jns
add
sub
iret
subb
pop
and
push
jg
aas
test
inc
adc
rorb
push
out
test
fistps
jmp
clc
pop
fstps
xchg
hlt
imul
push
dec
fs
pop
dec
add
sbb
push
dec
mov
std
test
int
pop
fists
setge
or
push
cmp
test
or
addr16
xlat
icebp
mov
aaa
jne
lock
jecxz
icebp
jmp
xchg
fwait
fwait
or
loopne
push
dec
ljmp
sub
test
add
xchg
mov
pop
ss
std
insb
bound
pop
xlat
pop
jo
sbb
mov
fwait
fwait
or
inc
pop
test
shlb
rorb
cmpsl
push
sub
loop
xchg
fdivrl
adc
aaa
jmp
sbb
inc
jae
jae
rorl
icebp
sbb
inc
cmp
aaa
mov
jne
and
cmp
sahf
popf
inc
dec
aad
aaa
aaa
aaa
inc
adc
mov
xor
ds
aaa
add
dec
negl
in
das
cmp
sub
in
pop
pop
mov
mov
aam
inc
pop
mov
inc
mov
jo
jbe
cli
insb
sub
in
std
push
sti
dec
lock
xchg
push
cmpsb
out
ret
mov
dec
cwtl
and
aad
out
pop
ror
xchg
jae
fs
pop
js
or
push
shlb
xor
lahf
fistpl
cmp
loopne
xor
mov
loopne
ret
movsl
xor
fcoms
mov
jbe
hlt
int
int
mov
push
pop
pop
xor
mov
int
push
inc
add
inc
ljmp
mov
fidivrs
and
or
out
mov
xchg
loopne
sub
out
cmp
in
mov
out
out
push
or
xor
mov
mov
mov
fwait
fwait
fwait
xchg
lods
js,pt
lock
xor
adc
fwait
fwait
fwait
fwait
push
push
dec
daa
push
mov
push
jl
popf
jp
xchg
rep
les
dec
jle
clc
jge
adc
loopne
cmp
cmp
ds
mov
data16
xor
and
mov
pop
lock
in
push
sub
ja
mov
adc
cmp
fstpt
jge
mov
in
xorb
lods
flds
out
por
mov
mov
les
or
loop
pop
mov
xor
cmp
mov
repnz
inc
aam
outsb
outsb
cs
ja
cmp
and
outsb
outsb
outsb
sbb
mov
lock
outsb
outsb
and
repnz
mov
push
mov
fisttpl
xchg
xor
out
pop
movsl
pop
xor
add
ret
in
mov
cmp
push
mov
jae
outsl
adc
aam
pop
cwtl
push
xor
jae
jae
loope
ds
shlb
addr16
andb
ret
arpl
pop
lock
dec
stos
inc
xchg
insl
push
ds
mov
inc
cmp
sarl
mov
fwait
fwait
mov
int3
jb
pop
sub
hlt
js
push
xor
xchg
mov
cmp
pusha
sbb
jae,pn
or
jbe
imul
aaa
mov
fsubrl
cmc
adc
xor
xchg
lods
pop
movsb
test
test
out
clc
int3
loop
inc
ss
ret
divb
je
movsb
inc
insb
outsb
outsb
outsb
dec
out
in
insb
fildll
nop
jb
xchg
mov
ljmp
xchg
ds
arpl
mov
xchg
push
lahf
int
int
inc
imul
sbb
adc
roll
mov
mov
lock
cmpsb
outsb
outsb
outsb
outsb
into
nop
push
and
stc
leave
dec
shl
push
outsb
outsb
jbe
add
cltd
es
aaa
addb
out
add
test
sbb
and
lahf
int
sahf
je
bound
jge
stos
mov
lock
mov
test
jb
inc
pop
adc
fsubl
imul
imul
lahf
in
cmp
jmp
xor
dec
xchg
ds
cltd
cmp
aaa
mov
out
sahf
push
lods
pop
mov
mov
sti
adc
stos
and
mov
ss
aaa
mov
or
cmp
adc
movsl
stc
push
jno
jg
xor
xor
jge
lods
fwait
hlt
add
sahf
in
js
dec
mov
shlb
ror
add
jb
add
into
pop
ds
int
pop
scas
outsb
nop
testb
mov
jl
mov
int
pop
test
mov
mov
fdivrl
adc
orps
cmp
cs
cmpsl
mov
and
add
sbb
adc
mov
and
js
inc
iret
jb
cmp
mov
push
adc
xor
movsl
stos
and
lret
add
sub
aaa
mov
sbb
cwtl
mov
rolb
jmp
outsl
jl
pop
cli
cmc
pop
movsb
aaa
lea
mov
fisubl
enter
mov
int3
mov
gs
test
adc
cmc
std
cmp
xchg
ret
dec
fwait
fwait
fwait
sub
pop
andb
push
int3
push
std
sbbb
jle
jmp
aaa
into
sub
mov
scas
iret
int3
cmp
xchg
or
jp
aaa
pavgw
out
mov
ret
mov
nop
mov
int
das
insb
lahf
inc
cs
in
dec
ret
js
ljmp
xorl
lods
adc
mov
cli
cmp
jmp
gs
xchg
mov
out
xor
push
add
jge
sub
sbb
fadd
fwait
fwait
or
das
cmpb
fiadds
dec
cmpsb
jl
adc
in
das
fwait
fwait
fwait
fwait
adc
mov
xor
fwait
fwait
out
out
jecxz
psllq
mov
inc
aam
dec
mov
movsb
dec
fisttpl
pop
out
mov
adc
push
movsb
les
fcmovne
out
mov
mov
sbb
iret
icebp
xchg
jne
adc
jp
roll
js
or
fwait
pop
loope
in
xchg
mov
std
gs
fwait
scas
inc
lock
hlt
mov
cmpsl
shlb
shll
or
bound
mov
inc
dec
adc
add
add
mov
int
es
hlt
push
insb
in
inc
lret
mov
stos
ret
aad
pop
xor
adc
dec
ret
bnd
out
push
std
mov
hlt
cmp
pop
jae
jae
pop
out
pusha
jl
das
pushf
adc
fldl
loopne
jae
lds
push
stos
dec
or
ffree
in
je
or
mov
push
fidivl
pusha
scas
test
fistl
loop
test
push
stos
pop
lock
aaa
aas
xor
or
sbb
fdivl
jp
xchg
movsl
xlat
into
mov
mov
shrb
fcmovne
les
pop
inc
sub
cmp
std
sahf
fwait
fwait
sar
inc
or
cmp
lods
mov
pop
jbe
fdivp
mov
xchg
cmp
adc
fidivrl
sti
push
xor
out
out
fmulp
inc
add
shlb
dec
pop
sbb
nop
adc
aad
call
jbe
outsb
or
and
sub
fnsave
jnp
xchg
aaa
sub
out
cmp
mov
stos
fildll
cs
add
movsb
add
out
out
jb
sahf
lds
sub
or
cltd
xchg
mov
insl
ljmp
fsubs
jae
loope
repnz
cwtl
testl
std
sub
test
sbb
out
adc
int
test
xor
fs
lahf
mov
hlt
sub
ret
mov
pop
push
inc
dec
mov
mov
dec
mov
js
cli
or
gs
insl
mov
mov
in
push
sub
or
test
out
testb
mov
sub
fcmovne
push
adc
sub
xor
icebp
insb
fwait
fwait
fwait
fwait
std
adc
mov
mov
repz
mov
mov
push
or
fwait
fwait
fwait
sahf
adc
lods
jnp
aad
movsb
jecxz
fwait
fwait
fwait
fwait
xor
jne
lods
stos
mov
ds
fwait
pop
aaa
pop
iret
pop
cli
call
pop
inc
push
in
les
push
movsb
cmp
fldcw
fdivr
adc
jg
sub
dec
ja
sub
cmp
mov
bnd
jmp
clc
fwait
aaa
aam
inc
sti
fcompl
loop
pusha
pop
jns
sbb
or
fcmove
int
jae
daa
js
mov
lock
or
mov
js
jb
fmuls
xchg
or
xlat
cmp
inc
shlb
jp
pop
push
clc
push
imul
mov
or
repnz
cmp
jl
sahf
xchg
mov
sub
jl
cmc
fnstenv
rcrb
les
pusha
pop
adc
xor
jo
cmpsl
ret
int
mov
mov
iret
jae
and
imul
push
ss
aaa
aaa
xor
ja
xchg
xorl
fnstenv
sbb
mov
jmp
jae
sub
addl
js
jge
jmp
or
shlb
mov
xchg
cmp
popf
es
pop
icebp
mov
sbb
cmp
int
or
outsb
js
inc
jp
cld
push
icebp
inc
xchg
xlat
and
out
xor
in
test
sub
out
test
push
or
pop
inc
adc
ja
ficoms
cld
lods
adc
mov
jnp
int
cmpb
ds
pusha
add
mov
fwait
inc
mov
mov
jo
ret
outsb
outsb
cli
xor
hlt
iret
mov
loop
cld
ret
inc
adc
jno
outsb
fisttpll
push
inc
jbe
mov
cmp
cmp
cmp
mov
insb
xor
int
andl
pop
or
popf
mov
sbbb
cmp
pushl
or
mov
cltd
adc
lods
insl
in
addr16
addr16
push
shl
std
stos
fmull
les
lahf
int
xchg
shrb
subl
into
mov
test
out
jge
outsb
outsb
mov
into
inc
sub
js
out
mov
test
out
lcall
out
filds
push
daa
out
imul
mov
mov
iret
out
out
adc
xor
mov
xchg
mov
insb
stos
add
aaa
stos
aaa
lds
xorb
aam
mov
data16
aaa
aaa
or
rcrb
adc
shlb
fnstcw
xchg
sbb
aaa
mov
mov
add
push
movsb
xor
aaa
arpl
inc
cmp
sbb
jae
sti
out
push
mov
xor
mov
jae
jae
pop
add
push
sti
les
xchg
jae
jae
mov
mov
sahf
jae
jae
scas
xchg
pusha
xchg
leave
dec
cmc
cmp
adc
cmc
loop
cli
push
xor
arpl
fs
fwait
fistl
clc
aad
xchg
adc
cmpsb
popa
xor
inc
in
daa
ds
xchg
and
clc
fstl
int
std
dec
cmp
rcl
push
inc
push
cmp
daa
inc
js
fnstcw
mov
or
fstps
les
test
xor
and
aam
cli
loop
fcmove
and
pop
push
and
idiv
test
inc
mov
mov
nop
add
rcl
dec
nop
out
jae
out
mov
inc
shr
inc
mov
jmp
sahf
stos
shrb
xor
push
rclb
fdivr
outsb
xlat
push
rol
adc
jne
call
dec
push
notb
push
loope
xor
cmc
ljmp
mov
add
fdivrs
ja
sbb
hlt
lds
ja
fdivrl
mov
xor
fsubl
and
xchg
cwtl
dec
addr16
in
addr16
cmp
lock
fmull
push
sub
pop
int
int
shlb
nop
in
aaa
mov
pop
xor
iret
int
push
shufps
sub
push
js
mov
adc
add
mov
nop
dec
or
aas
lret
and
out
and
pushf
data16
repnz
outsb
outsb
mov
loop
push
loope
and
imul
jecxz
data16
sti
jecxz
or
inc
lcall
dec
insb
push
icebp
mov
popa
jae
jae
bound
mov
xor
inc
and
js
lahf
in
add
sbb
iret
sub
test
dec
cld
sahf
fisttpl
or
es
cli
pusha
iret
out
sub
xchg
ja
por
adc
outsb
outsb
filds
lods
mov
cmp
scas
sbb
mov
loopne
insb
outsb
mov
addr16
out
fdivrl
mov
es
mov
cmc
insb
clc
fldpi
xchg
int3
test
fyl2x
pop
mov
insb
adcl
jp
mov
mov
push
inc
aaa
aaa
mov
bound
jg
ficompl
rdtsc
shlb
mov
jle
push
scas
sbb
push
cwtl
addr16
push
inc
cwtl
insl
add
mov
clc
rorb
mov
mov
fdivrl
fildl
in
push
outsl
or
push
data16
jae
jae
adc
leave
mov
lods
imul
push
clc
mov
add
mov
jge
ds
cmp
mov
sbb
or
iret
out
mov
mov
into
cmp
lahf
fwait
fwait
mov
push
dec
mov
add
out
sti
insb
shrl
inc
sahf
fisubrs
ljmp
addr16
addr16
pop
les
jp
sbb
lahf
adc
cmp
in
nop
pop
es
into
sub
aaa
aaa
aaa
jae
outsb
orb
iret
or
out
inc
aaa
aaa
aaa
aaa
pop
inc
pop
pop
and
leave
jl
idivl
mov
js
push
cmp
mov
hlt
call
arpl
mov
mov
not
cli
add
cli
addr16
xchg
shl
insb
ljmp
jle
ror
mov
jbe
push
shrb
sti
fcoml
mov
repz
jge
pop
ret
pop
bound
sbbb
out
fdivs
gs
in
cmp
xchg
loopne
jg
outsb
outsb
outsb
outsb
mov
sub
test
ss
outsb
push
inc
adc
aam
scas
cmp
add
sbb
dec
imul
lea
xchg
cmp
outsl
push
fidivl
fidivl
orb
insb
mov
jecxz
lods
fadds
out
aaa
aaa
aaa
aaa
add
rorl
sar
cmp
and
inc
and
lds
outsb
scas
push
push
enter
sahf
jb
lret
sub
test
outsb
outsb
outsb
shr
mov
or
cli
cs
push
test
mov
pop
xchg
sub
out
mov
push
rorl
pop
adc
outsb
and
pusha
fcomps
inc
repz
ret
sahf
imul
movsb
ds
inc
mov
sbbl
jo
mov
mov
mov
in
js
out
clc
movsb
jbe
and
in
xchg
mov
fsts
jb
jmp
pop
faddl
clc
int
jmp
outsl
movsl
jae
sti
fsts
insb
sub
mov
loop
jae
sbb
iret
add
xchg
and
dec
adc
loop
aad
sbb
loop
call
int
jg
push
mov
lret
and
int
int
imul
stc
jae
int
int
out
jmp
imul
or
lret
cltd
xor
and
pop
idiv
int
int
in
fcmovne
mov
mov
push
loope
lret
int
cli
iret
fistpl
aas
pop
fmuls
jae
jbe
xchg
out
test
jmp
cmp
sahf
dec
dec
rol
or
adc
in
sub
push
ds
dec
xor
jo
add
add
adc
iret
out
xchg
leave
repz
ds
jl
jle
les
mov
mov
cmp
jno
jnp
loopne
pop
popf
sub
hlt
sahf
push
add
or
dec
adc
mov
mov
fisubrs
out
fdivr
xchg
sbb
cwtl
xchg
ljmp
jl
fists
stc
cwtl
jae
cmc
movsl
cli
insb
outsb
pop
mov
lcall
clc
sbb
adc
cld
insb
mov
std
mov
ds
mov
adc
pop
aam
mov
sbb
xor
fcmovne
out
inc
lahf
xor
jle
xchg
or
inc
mov
mov
sbb
and
scas
rorb
dec
out
mov
int
rorl
dec
jmp
ficoms
cs
cmp
divb
test
scas
mov
lods
xor
mov
mov
pop
dec
ds
xchg
jb
les
adc
jb
clc
adc
sahf
nop
gs
or
adc
cmp
add
jae
xchg
cmc
test
cmp
fldt
loopne
sub
jne
sbb
jmp
jno
stos
js
xchg
idivb
jo
xchg
ds
lods
scas
push
into
in
sbb
add
in
inc
lret
xor
mov
adc
or
mov
push
jg
fs
jne
lea
cmp
into
test
xchg
sbb
mov
mov
push
repz
pop
and
in
inc
sub
ds
jb
aaa
inc
lock
inc
int
int
cmp
add
lahf
int
int
adc
jne
xchg
das
aam
pop
sbb
aaa
aaa
mov
fisubl
mov
add
or
aaa
push
dec
call
lret
dec
jmp
add
xchg
subb
fwait
cmp
dec
mov
mov
out
jl
leave
cmc
repnz
mov
inc
mov
xchg
or
aaa
mov
in
cmpsl
rol
int3
lret
mov
ss
aaa
push
dec
adc
hlt
jecxz
mov
out
inc
jle
aas
fstl
inc
out
sti
faddl
lcall
dec
nop
imul
dec
repz
icebp
pop
lock
sarb
sub
stc
mov
call
repnz
push
cmp
pop
mov
dec
rcrl
int3
outsb
pop
sbb
subb
lret
jmp
outsb
outsb
outsb
outsb
pop
sahf
dec
xor
int3
jo
js
inc
int3
xlat
out
enter
out
out
in
mov
loopne
fmul
lods
popf
int
xor
push
rorl
movsl
in
adc
int
xchg
cld
push
jle
jecxz
push
rcrb
inc
and
in
cmc
jns
cmp
and
add
stos
mov
pop
push
cmp
js
or
mov
aaa
aaa
aaa
cmp
pop
add
lret
mov
adc
inc
pop
xchg
cltd
pop
pop
hlt
xchg
jne
mov
xchg
adc
jmp
push
test
sub
inc
fdivrl
push
mov
or
bound
icebp
jge
outsb
pusha
sbb
iret
jp
push
cmp
inc
mov
or
push
mov
jae
jae
sub
addl
cmp
jnp
int
in
jae
test
pop
loop
mov
mov
adc
and
nop
test
mov
fdivs
xlat
adc
hlt
icebp
mov
fisttpl
mov
daa
cwtl
aad
in
jae
jae
and
jb
or
hlt
and
aaa
std
push
inc
insb
xchg
hlt
sub
mov
jle
sub
sbb
add
cld
push
pop
notl
outsb
outsb
outsb
outsb
pop
outsb
dec
mov
test
ljmp
fcompl
mov
inc
pop
jle
popf
cmp
out
idivb
jg
jo
xor
dec
pop
lcall
sbb
inc
das
jb
mov
sti
sbb
and
mov
aaa
mov
mov
stc
dec
fs
jb
loop
aaa
aaa
sub
xchg
pop
out
es
insl
sbb
lcall
addr16
dec
push
leave
std
cwtl
or
insb
scas
cs
lods
out
mov
jo
and
xor
pop
out
xor
fdivr
or
add
push
hlt
lahf
in
pavgw
jle
testb
out
out
iret
or
idivl
jmp
mov
push
out
cs
push
data16
popa
sahf
mov
out
xchg
adc
xchg
inc
lods
lods
mov
mov
mov
aas
fwait
mov
mov
stc
fdiv
sbb
jo
test
sarl
mov
jne
inc
push
or
dec
es
push
inc
xchg
and
adc
sbbb
inc
mov
and
test
fs
inc
sbb
pop
push
iret
mov
sahf
hlt
fsubl
lret
mov
push
pop
adc
lcall
out
xchg
dec
test
in
xor
and
mov
mov
pop
hlt
subb
mov
jae
pop
push
jb
push
fdiv
and
sbb
inc
inc
jle
hlt
arpl
lea
inc
enter
mov
dec
fcmovnb
dec
adc
test
lds
mov
jno
lcall
or
and
fsub
je
push
inc
in
addr16
outsb
mov
dec
push
mov
mov
iret
xchg
sahf
mov
sarb
pop
cld
jle
push
mov
ljmp
notb
fsubrl
test
or
mov
fwait
inc
mov
jbe
pop
stos
lods
fldt
ret
and
insb
out
cli
inc
lea
js
cld
mov
xor
out
popa
push
addr16
sbb
out
cmc
outsb
outsb
xlat
movb
dec
inc
popa
push
lods
int3
mov
outsb
adc
jo
popf
imul
cmc
inc
lahf
mov
adc
mov
mov
ja
idiv
xchg
loopne
add
mov
test
loope
jb
out
or
aam
shrb
in
cmp
arpl
in
inc
cmp
xor
mov
iret
out
call
mov
mov
or
dec
push
cli
cs
aaa
jbe
sbb
leave
loope
stos
pop
outsb
ds
aaa
jnp
cmpsl
push
xlat
sub
jb
adc
outsb
iret
int
inc
mov
adc
std
cli
xor
stc
mov
jmp
hlt
fwait
sub
orl
orps
pushf
nop
iret
int
pushf
add
int3
lret
dec
imul
cs
test
addr16
aas
and
xchg
in
outsb
outsb
pop
aam
cmp
inc
push
sbb
push
mov
outsb
outsb
push
jp
adc
test
pop
aaa
loop
iret
mov
xchg
js
inc
mov
xchg
xchg
cmp
ljmp
or
lcall
dec
clc
pusha
mov
or
adc
in
push
cmpsb
fisubrs
cld
in
mov
jecxz
stos
cmp
dec
mov
mov
lret
xchg
stos
test
pop
xor
scas
imul
and
les
clc
shll
std
insb
filds
int3
movsb
leave
test
int3
call
es
pop
rorl
subb
loop
cmp
pop
in
int
and
add
xor
fst
outsb
outsb
outsb
outsb
adcb
pop
xor
xor
cld
insb
outsb
mov
fmulp
sarl
pop
out
jae
jp
jge
pop
add
dec
mov
out
inc
xor
jbe
insb
xor
pushf
out
out
in
sti
jb
js
sbb
outsb
pop
aaa
mov
xchg
fiaddl
clc
pusha
mov
sahf
add
pop
add
testb
fisttpl
jl
adc
outsb
scas
clc
in
adc
or
mov
xlat
cli
daa
stos
imul
pop
cmpsb
dec
mov
cmp
out
dec
xchg
jnp
cli
xor
jae
mov
test
test
push
outsb
push
addr16
nop
pop
cmp
fdiv
push
ljmp
lret
subl
in
cmp
add
hlt
xchg
mov
inc
stos
iret
insb
push
and
rol
mov
jae
sub
iret
shll
mulb
out
out
stos
sarl
orb
sub
aaa
push
add
out
jmp
lods
inc
ret
dec
daa
lahf
cli
sbb
cmpsl
insb
sti
cmpsb
cmpsl
jl
aas
push
mov
lock
cs
fs
repz
mov
repnz
dec
add
sti
lret
int
jne
xchg
xchg
lods
cmpsb
shrl
lahf
in
addr16
jg
pop
push
pop
push
int3
sahf
repnz
push
jns
ja
mov
fidivs
aaa
mov
jecxz
fimuls
cli
int
int
in
mov
pop
mov
ljmp
sbb
push
mov
add
fisubs
out
adc
movb
cld
arpl
sbb
out
lcall
aaa
aaa
aaa
push
mov
dec
sub
fidivl
aaa
aaa
aaa
lds
cmp
addr16
xchg
in
adc
jle
imul
out
lahf
mov
pop
dec
lret
mov
jmp
cmp
loopne,pn
mov
stos
adc
out
scas
lahf
xor
int
enter
mov
out
sbb
nop
ja
movsl
adc
idivb
xor
jl
xchg
cmpsb
sub
iret
popa
ret
mov
fsubrl
scas
lret
jne
not
xchg
ret
lcall
fcoml
xor
out
out
test
inc
call
push
adc
jae
push
push
cld
pop
sbbl
pop
dec
shll
test
jae
add
lcall
push
or
fdivrl
mov
fwait
js
clc
test
fsts
and
dec
scas
xchg
adc
pushf
ljmp
mov
mov
push
aaa
aaa
aaa
aaa
pop
mov
and
inc
xchg
lahf
jne
ds
mov
pop
cmp
pop
xchg
jns
inc
lods
orb
xor
fcoms
jo
les
mov
ret
xlat
or
sbb
mov
pop
or
fsts
mov
sub
mov
xchg
das
inc
sub
pop
push
testl
adc
ds
clc
or
push
fdivp
hlt
pop
out
add
insb
outsb
pusha
in
repnz
cmpsb
and
cmc
xor
push
lahf
aam
add
ss
pop
out
jnp
out
mov
mov
mov
lds
xchg
inc
cmp
nop
pop
jge
daa
mov
mov
push
push
push
ss
ja
or
push
enter
mov
aaa
jbe
mov
aas
adc
aaa
aaa
fadd
je
push
mov
out
sti
jl
xor
addr16
inc
sbb
jae
adc
cs
push
pop
rol
add
lahf
filds
jmp
or
push
mov
jbe
mov
enter
lea
out
dec
aas
jmp
fidivl
mov
mov
cmp
pop
in
mov
outsb
jg
idivl
xor
and
roll
pop
xchg
inc
les
jp
das
sbb
sbb
pop
mov
mov
xor
push
sbb
into
ds
pop
and
cmp
idivb
and
push
lea
inc
jl
test
mov
out
movsb
cmp
in
rol
test
jne
out
out
push
sbb
aas
cltd
pop
dec
xor
iret
out
iret
in
pop
or
adc
popf
jg
mov
int
mov
stos
movb
lcall
test
adc
mov
mov
nop
outsl
xor
test
sub
and
fdivl
fs
je
mov
lods
add
clc
filds
adc
sbb
inc
addr16
stc
cmp
pop
dec
dec
cmp
cmpsb
inc
call
pop
lret
shl
out
out
shrb
xchg
movsb
jno
dec
in
dec
ret
out
out
xchg
sub
cmp
lahf
mov
xlat
aam
mov
nop
cmp
shlb
cmpsb
lahf
lods
imul
mov
and
iret
mov
xchg
fdivrs
int
cmc
pop
outsb
push
pushf
ss
fcomi
rolb
iret
test
insl
and
int3
loopne
aas
fwait
fwait
fwait
mov
cmp
pop
inc
sahf
push
out
jnp
rclb
mov
bound
movsl
pop
pop
mov
ret
iret
out
sub
mov
cs
adc
in
roll
xchg
push
push
aaa
nop
xor
iret
adc
loop
jg
lcall
das
lea
inc
or
xchg
xchg
shl
out
hlt
std
cmp
and
lods
out
fisttps
xchg
aad
add
out
imulb
cmp
sub
or
out
xchg
xor
mov
cmc
push
outsb
cs
sub
mov
rorb
cwtl
jo
fcompl
pushf
xor
movsl
sub
fprem
fdivl
rcll
mov
shrl
add
loope
push
loopne
push
ss
aaa
aaa
sti
cmc
xchg
mov
ficomps
fwait
fwait
cmp
cwtl
test
sbb
imul
push
sahf
inc
stos
fisttpll
ret
push
xchg
rol
loope
je
xchg
xchg
movsb
test
test
dec
and
fimuls
xchg
pop
sub
mov
rol
int
int
jl
jne
mov
or
aaa
add
sbb
in
mov
jp
jae
jle
std
out
jmp
pop
int
xor
lods
sbb
mov
fcmovu
jo
xchg
cmpsl
inc
xor
stc
gs
cli
push
xchg
loopne
shll
int
jl
sbb
adc
mov
int
adc
dec
jp
xor
inc
xor
int
lahf
fidivrl
dec
mov
sbb
mov
jle
int
mov
fcomi
std
fs
clc
enter
jbe
lods
in
int
mov
sbb
in
push
imul
lahf
and
sbbl
dec
xchg
jle
aaa
aaa
orb
xchg
lret
fwait
fwait
fwait
mov
push
pop
dec
and
insl
cmpsb
shll
std
sub
test
mov
ret
aaa
ja
jb
jle
mov
jecxz
fdivrl
aaa
adc
test
es
call
xor
cld
aam
imul
out
sub
or
jle
ds
out
sub
lcall
adc
lds
das
xor
mov
adc
and
mov
add
and
mov
data16
outsb
out
mov
sub
xor
xchg
mov
movsl
lock
push
scas
imul
andb
mov
dec
addb
int
xor
inc
xor
out
data16
push
ds
mov
inc
and
xor
mov
popf
pop
lock
jno
inc
xor
mov
nop
mov
out
insl
xor
jl
sbb
jae
jae
adc
fdivl
mov
or
loope
or
pop
arpl
fmull
std
inc
add
insb
outsb
mov
or
cmpsb
xor
ss
loop
aaa
mov
andb
out
daa
fsubl
xchg
cltd
adc
fmull
aas
pop
rcl
loopne
mov
jns
adc
sbb
outsb
out
or
add
xchg
loop,pt
and
add
inc
or
out
jle
push
enter
cmpsb
out
sbb
je
aaa
aaa
push
std
pop
xorl
movsb
add
xchg
stos
xchg
mov
cmp
cmp
or
ret
dec
fidivs
mov
lcall
aaa
aaa
aaa
out
addb
push
data16
fwait
fwait
sbb
add
in
or
lcall
out
ficomps
ss
sbb
addr16
test
dec
int
gs
gs
cmovge
lock
mov
int
int
xor
and
and
or
outsl
push
or
aad
mov
testb
mov
loope
sub
and
fsubl
clc
push
cs
test
mov
jo
pop
cld
orb
inc
js
sub
cmpsb
sbb
fs
mov
ljmp
insb
mov
out
in
addl
dec
pop
mov
out
daa
lock
jmp
inc
sar
jns
stos
ret
icebp
mov
push
aam
arpl
mov
or
je
mov
jbe
das
pop
inc
xchg
outsb
lock
mov
mov
mov
pop
repnz
addr16
ljmp
ret
int
dec
cli
div
adc
cwtl
push
dec
mov
iret
inc
push
movsl
sbb
je
out
out
outsl
cmp
push
out
sub
mov
ds
insb
fidivs
les
ds
aaa
pop
cld
sbb
mov
rcl
dec
sub
jecxz
outsb
cli
jbe
mov
xor
adc
push
mov
rcrl
xor
lea
rorb
push
pop
pop
add
ja
in
addr16
rolb
add
or
iret
cwtl
dec
fwait
fwait
lahf
int
into
xlat
xor
cmp
notl
fwait
fwait
fwait
jg
and
jnp
xchg
pop
popf
int
sbb
add
leave
test
xor
movsl
lahf
int
arpl
lret
jae
dec
ds
and
insb
imul
jae
ret
dec
jnp
fnstsw
test
int
xchg
xchg
bound
dec
scas
cli
jbe
pop
fwait
fwait
fwait
fwait
lods
and
pop
fnstenv
xor
or
and
jno
dec
xchg
jle
int
jp
push
cltd
imul
aas
jbe
mov
mov
jmp
push
adc
mov
outsb
xchg
lds
aas
fwait
fwait
fwait
es
ds
repnz
mov
lret
mov
fcompl
ds
mov
xchg
fidivl
mov
aad
fisubrs
mov
inc
pop
dec
sarl
cmpsl
clc
dec
dec
subb
sahf
pusha
je
hlt
xchg
fdivrl
push
mov
std
adc
fdivrl
cs
push
mov
mull
jge
push
sbb
cmp
cmp
lahf
enter
sbb
out
div
repnz
test
cmp
sub
dec
js
mov
lcall
aas
imul
ret
jnp
les
dec
mov
inc
fwait
fildl
jbe
xchg
dec
outsb
sub
shl
inc
xor
outsb
lahf
fwait
fwait
cmc
sbb
outsl
jg
lea
sti
insb
outsb
outsb
fisttpl
jmp
mov
or
cmc
jo
mov
push
or
sbb
cs
or
pop
push
pushf
xchg
sti
fnstcw
add
vmread
jmp
mov
fwait
sub
mov
sarl
add
jb
mov
add
stos
repz
testl
loopne
sub
jbe
cwtl
in
dec
js
and
xchg
fisttpl
and
xor
call
mov
sub
jae
sti
hlt
std
imul
inc
test
repz
stos
jle
hlt
fildll
pusha
push
pusha
jmp
arpl
out
lcall
sbb
stc
into
sub
out
add
movsl
mov
and
inc
pop
in
aad
test
pop
xchg
xor
cmc
add
push
adc
or
add
sahf
or
adc
mov
loopne
jae
dec
lea
rorb
push
int
aaa
aaa
mov
loop
xchg
push
leave
sub
sbb
push
and
mov
mov
lcall
xchg
dec
data16
mov
jae
out
into
push
xor
rcr
popa
jnp
or
rcrb
push
xchg
pop
push
in
and
and
add
fmul
in
cld
pop
aad
xchg
int
push
cmp
xor
cmp
mov
mov
aam
jae
leave
xchg
jmp
push
movsb
outsb
lahf
fcmovnu
into
mov
test
fiadds
jo
adcb
divb
fldl
and
in
out
out
push
mov
out
jp
cs
mov
lret
pop
shl
and
clc
ds
adc
cld
mov
cmp
jge
cli
and
ret
aaa
shlb
out
orb
and
lea
jo
out
out
cld
ds
data16
shrl
and
adc
out
dec
movb
or
add
outsb
jo
mov
jg
fdivl
pop
in
mov
xor
mov
js
jbe
and
ror
mov
icebp
out
icebp
int
adc
cmp
enter
mov
push
xor
andl
imul
inc
sbb
dec
pop
mul
pusha
mov
in
jae
cmp
cmp
pushf
jb
cmp
sahf
test
mov
fcompl
int
jae
lret
loope
mov
hlt
fwait
fwait
cmp
iret
xorl
mov
push
fwait
fwait
fwait
fwait
cli
or
lahf
dec
and
idivb
ds
lock
xchg
cltd
sbb
out
out
adc
bound
data16
push
out
enter
into
mov
mov
mov
cmp
sbb
dec
mov
inc
and
int
aas
test
sarb
xor
inc
mov
xchg
out
xchg
fdivr
insb
pop
sbb
popa
dec
dec
stos
mov
lea
clc
lock
xor
dec
clc
outsl
std
out
cmpsb
dec
push
lcall
fwait
int
cmc
push
mov
push
cmpsl
fwait
fwait
or
hlt
or
or
inc
ja
cli
gs
cmp
or
add
data16
cmp
fsubrs
and
aaa
aaa
mov
mov
ret
xchg
imul
adc
fwait
sbb
mov
xor
and
roll
jae,pt
iret
addr16
shll
mov
test
or
or
clc
call
cmp
fdivrl
jo
mov
adc
jmp
insl
popa
cmp
in
adc
nop
into
inc
ds
push
aad
test
outsb
jge
push
out
mov
movsl
dec
or
or
inc
cmp
add
fcoms
aaa
add
jae
mov
mov
sub
mov
push
mov
rcr
push
cmpsb
rcr
add
inc
push
ss
insb
inc
sbb
xchg
pop
icebp
push
lock
cld
jl
push
les
cmp
jae
jae
inc
add
sbb
mov
inc
lahf
in
dec
inc
pop
cs
bound
adc
ds
aam
bound
adc
fwait
fwait
sub
gs
aas
add
idivb
sbb
popa
inc
in
daa
addb
jbe
cmp
xchg
adc
mov
into
pop
mov
and
push
inc
sbb
adc
mov
outsl
dec
pop
cld
inc
or
and
mov
out
leave
dec
insb
dec
cmp
movsb
idivl
cmp
ds
add
sbb
ret
push
cli
adc
sbb
jne
aaa
aaa
mov
xchg
stos
sahf
jns
in
sbb
popf
push
xchg
sti
fnstcw
xchg
jne
iret
push
andl
popf
sub
jp
ds
fldenv
aaa
aaa
cld
sub
mov
dec
sahf
pop
adc
ds
andl
loopne
outsb
test
mov
fisubs
fdivr
xchg
in
and
stos
inc
scas
test
mov
popl
loop
lretw
add
dec
add
mov
pop
sbb
jle
popa
sub
iret
testb
ror
pop
imul
cmc
pop
movsb
sbb
in
cmpsl
icebp
fldz
pop
jns
or
clc
xchg
std
lahf
int
int
mov
loopne
mov
fwait
pop
cmpl
mov
popa
mov
std
fs
notb
movsb
js
dec
cmp
lock
rorl
pop
je
loop
add
push
imul
and
shlb
mov
in
sub
addr16
int
aas
fwait
test
les
imul
testb
cld
rcrb
mov
out
add
push
fstpl
sub
sbb
push
rcll
cmp
mov
xor
int
jg
pop
out
jne
shl
mov
scas
inc
inc
sub
xchg
and
mov
xlat
push
loop
div
rcrb
sahf
fst
mov
inc
pop
xchg
jle
fwait
cmp
add
mov
icebp
push
sarb
sub
insb
gs
sbb
pop
loop
mov
aaa
aaa
push
mov
cmp
xchg
mov
popa
cmp
and
mov
mov
xchg
xchg
lahf
jle
mov
loope
ret
fsubs
push
adc
out
or
sbb
pop
pop
sbb
in
push
shr
rcr
jb
mov
fwait
cmp
ret
sub
nop
sub
sahf
int
xor
cmp
mov
ficomps
int
int
fcmove
stos
sub
shl
add
int
lods
cmp
sbb
lret
cmp
xor
les
pop
fisubl
repnz
jno
outsb
xlat
in
cmp
enter
into
and
insb
cmpl
stc
sbb
add
inc
jns
pop
fcoml
mov
lret
daa
pop
push
imul
test
js
out
jbe
imul
lods
mov
push
psubb
pusha
mov
sbb
cmpps
arpl
sub
dec
popf
lock
int
int
adc
aaa
add
test
imul
aaa
mov
lahf
insb
fists
popf
int
push
add
cmpb
subb
aaa
push
cli
or
sub
hlt
daa
repz
iret
int
das
je
shl
or
adc
or
jle
or
clc
std
cmp
fcoml
mov
aaa
mov
loopne
add
dec
sub
inc
add
js
outsb
push
adc
xor
aam
fnstcw
mov
xchg
push
rorb
mov
and
adc
xchg
xchg
mov
and
lea
mov
cli
divb
loope
xchg
and
sub
xlat
out
xchg
loopne
cmp
sarb
jae
jae
inc
cltd
cs
xorb
mov
push
decl
dec
sub
movsb
lret
fnstsw
fiadds
hlt
movsl
cmp
inc
fsubl
pop
inc
pop
jl
ds
xchg
rcr
adc
aaa
aaa
aaa
aaa
aaa
sbb
jge
pop
ljmp
mov
sbb
add
daa
mov
jo
mov
sbb
repnz
ret
push
movsb
iret
mov
add
rcrb
std
insb
outsb
mov
fldenv
or
sbb
mov
rcl
ds
out
xchg
xor
repz
mov
mov
jbe
jl
filds
cmpb
out
out
dec
cwtl
add
mov
hlt
add
clc
jne
into
int
les
shrl
insl
fwait
dec
and
push
mov
ss
pop
pusha
leave
or
mov
jae
inc
push
loope
movsl
mov
xor
mov
aad
sti
aas
pop
sbb
push
dec
dec
dec
or
sbb
call
popa
mov
mov
cmc
subl
or
fstps
xor
jmp
test
enter
ds
fisubs
cmp
pop
mov
out
sti
scas
push
dec
mov
jo
pop
rolb
les
inc
shlb
mov
jb
out
out
xlat
js
sbbb
pop
lret
shlb
pop
mov
es
mov
pop
rclb
testb
je
addr16
sarb
stos
rcrb
push
sbbb
sbb
scas
aaa
fidivs
pop
aam
push
std
mov
pop
add
xor
fwait
lahf
int
cmc
orl
add
fwait
fwait
fwait
test
xchg
lock
push
push
loop
loope
in
fwait
fwait
fwait
add
push
stc
add
in
jl
sub
cmp
inc
nop
sbb
jl
jbe
cmpps
sbb
add
fadd
clc
fidivl
shlb
adc
and
rclb
xlat
aaa
ja
or
bound
mov
inc
mov
jg
fisubs
add
sbb
jbe
adc
insl
sahf
aam
hlt
xor
jmp
out
push
lock
call
sub
aas
cmc
push
add
cmp
jmp
cmp
lods
imul
pop
xchg
mov
repz
into
push
mov
sub
cmc
mov
mov
testb
jl
pushw
push
push
add
push
xor
ja
pushf
xchg
enter
in
ss
adc
in
cmpsl
cmp
mov
mov
cli
je
mov
mov
cmc
mov
aaa
cmp
sarb
lahf
xchg
mov
loop
and
fiaddl
mov
movb
jnp
pop
cwtl
inc
divl
cmp
mov
dec
iret
das
cltd
or
jae
lds
sbb
cmp
jle
or
mov
push
mov
das
jae
sti
fldenv
sub
mov
pop
loope
inc
lahf
in
and
mov
sahf
xor
insb
pop
cli
fidivs
lods
rorl
pop
add
sbb
inc
mov
mov
jle
mov
and
ret
or
push
lock
sub
fwait
fwait
fwait
sbb
cmp
test
sbb
mov
in
fidivrl
mov
jbe
notb
adc
in
mov
mov
aas
loopne
pop
dec
xchg
cmc
mov
xor
adc
outsb
outsb
outsb
mov
mov
outsl
out
cmp
sbb
outsb
outsb
outsb
outsb
je
push
push
pusha
jmp
mov
jl
outsb
outsb
push
data16
sbb
add
test
jge
js
ja
test
inc
jp
aaa
frstor
ret
mov
adc
adc
int
aas
adc
movsb
xor
xor
sub
sbb
out
test
xor
mov
push
mov
add
add
push
outsl
jle
xchg
jae
imul
jmp
ljmp
stc
enter
cmc
insl
cmp
inc
and
pushf
mov
or
ss
out
push
xchg
cli
sti
aaa
aaa
aaa
aaa
and
push
int
jae
mov
addr16
ret
mov
inc
cli
and
or
out
out
movsl
cmp
sub
mov
mov
lahf
xor
adc
outsl
mov
push
outsb
outsb
xchg
sub
lea
aaa
push
jge
shlb
sbb
sub
ret
sub
aaa
aaa
decb
or
fcmovb
aas
fwait
fwait
fwait
push
je
das
jns
xchg
out
dec
mov
jle
pop
dec
sbb
xchg
neg
push
imul
movsb
bound
out
test
pop
clc
xchg
fidivrs
or
pusha
dec
jnp
inc
jbe
lock
mov
int
ret
inc
dec
mov
lods
or
sbb
pusha
dec
mov
aaa
jno
dec
xor
movb
mov
mov
insl
aas
pop
psraw
xchg
aas
fs
cs
xadd
push
pushf
outsb
sahf
imulb
stos
clc
faddp
out
add
sub
mov
daa
dec
jns
mull
lods
push
addr16
in
fimuls
outsb
fcomip
cld
mov
xor
push
mov
cmp
aaa
aaa
push
les
cmp
loopne
jmp
movl
mov
inc
aad
push
pop
les
ds
fwait
fwait
mov
cmp
cmc
add
sbb
ret
aaa
cmp
idivl
mov
xorb
dec
repz
jnp
dec
pop
jecxz
loope
out
into
and
rcrl
pop
mov
int
in
jnp
rorb
pop
jnp
cs
jno
lret
iret
int
int
hlt
movsl
jl
ds
dec
sbb
test
lods
cs
fcoml
iret
imulb
cmp
in
imul
inc
xor
sbb
decb
cltd
hlt
repz
sarl
arpl
shlb
test
lret
lock
daa
std
push
inc
inc
mov
faddl
xlat
jl
mov
daa
call
sbb
and
rolb
cltd
cmpsb
mov
jae
in
xchg
sub
pop
jno
or
push
es
mov
icebp
fnstcw
test
in
in
dec
lock
clc
loope
insb
sahf
xor
out
cmpsb
xor
xchg
or
jl
pop
xor
hlt
hlt
push
fcomps
jecxz
cs
inc
scas
sub
cltd
clc
cmp
filds
jle
int
push
daa
jbe
std
mov
mov
jg
jl
aas
stos
inc
lcall
cmp
aas
fcmovnb
shr
dec
addr16
jae
out
mov
jg
mov
ds
pop
clc
cmp
imul
xchg
repnz
cmpsb
iret
movsl
dec
fidivl
pop
into
mov
lret
cwtl
push
iret
mov
jbe
bound
fsubl
aaa
stc
jge
mov
or
das
scas
lods
iret
xor
cmp
push
jl
adc
inc
aas
call
mov
aaa
aaa
loope
insl
out
and
fisttpll
sub
aaa
aaa
ja
cmc
jg
gs
mov
sti
fsubl
std
sub
sti
arpl
mov
jae
cmpb
pop
lahf
outsb
imul
stos
sbb
cmp
xor
sub
lahf
int
std
mov
adc
inc
cwtl
rolb
or
and
cmpsl
pop
cmpsb
out
or
cs
ss
pop
pop
hlt
test
add
fsubrl
or
call
jbe
int
int
test
out
jmp
mov
in
insb
clc
fsub
popa
or
iret
mov
scas
mov
xor
bnd
nop
adc
jge
loope
in
add
in
ds
mov
test
mov
mov
test
not
pop
and
jo
pop
or
sarb
add
add
aaa
mov
add
fcomps
jp
inc
cmpsl
in
js
mov
xchg
filds
lock
lcall
push
and
jge
into
mov
cltd
xchg
ds
mov
jl
stos
int
mov
in
sub
cmp
mov
push
xor
ret
and
orb
ret
pop
icebp
push
call
jo
jmp
icebp
fsubrl
sbb
sbb
rorl
sbb
add
mov
pop
hlt
dec
nop
cmp
daa
ret
out
sub
cmp
sub
mov
sub
out
pushf
loopne
clc
and
ret
daa
push
jge
mov
ljmp
rcll
aaa
aaa
xchg
lds
cmp
xchg
xor
insb
jl
fisttpl
int
in
aaa
xchg
bound
dec
scas
mov
int
stos
and
mov
insb
and
xlat
xor
dec
cmp
mov
mov
inc
fistps
loopne
jnp
cmpl
out
pusha
das
loopne
xor
fdiv
mov
jb
dec
dec
sbb
fsubl
fldl
mov
sub
ds
in
cmp
inc
adc
int
fists
out
push
cmp
orl
xor
loopne
xchg
imul
pop
sar
mov
mov
mov
clc
int
add
sbb
sub
jno
sbb
sbb
iret
ret
adc
jbe
push
mov
push
cld
inc
mov
mov
mov
lds
cmpsb
fld
clc
push
add
shlb
lods
out
dec
lret
ffreep
pop
push
fcomps
outsb
outsb
fistps
sbb
push
clc
loopne
inc
xor
fs
imulb
outsb
outsb
pop
mov
mov
addl
push
add
cmpsb
ret
mov
outsb
out
clc
pop
loope
fsts
push
dec
mov
es
sbb
out
push
daa
dec
sub
xor
mov
adc
or
pushf
shrb
xchg
add
cmp
jb
ret
int
int
xorb
insb
xchg
je
fcomp
jle
lahf
out
jno
pop
js,pn
pop
lods
outsb
cs
fnstcw
push
scas
push
loop
jmp
outsb
xorb
outsb
aas
xchg
ror
add
sbb
xor
test
dec
cmp
lock
jo
mov
pop
pusha
sbb
in
pop
mov
xchg
mov
sbb
add
push
fcomps
cwtl
insl
adc
xor
ljmp
pushf
add
out
les
rcll
mov
clc
mov
hlt
test
lods
add
fdivl
pop
mov
jne
dec
pop
jmp
fsub
cmp
popf
pop
inc
outsb
outsb
outsb
outsb
rolb
xchg
out
fdivl
movsl
mov
outsb
outsb
mov
nop
cmpsb
outsb
mov
dec
mov
or
dec
xchg
cmc
es
test
adc
mov
add
xchg
movsb
stos
sub
mov
push
addr16
mov
xor
pusha
sub
iret
mov
sbb
sbbb
aaa
jl
fxch
add
adc
lret
jp
aaa
adc
or
mov
lea
adc
xchg
loop
ja
pop
cmc
mov
out
mov
dec
xor
in
aaa
lock
xlat
pushf
clc
repz
int
nop
push
xorb
pop
xchg
cmp
shl
add
lret
ret
push
sbb
outsl
jl
addb
dec
hlt
andb
mov
ds
int
cld
jae
sbb
push
es
mov
imul
dec
cli
sbb
mov
inc
js
pusha
push
addl
mov
in
jnp
xor
enter
pop
adc
add
int
int
sbb
daa
adc
xor
lret
push
lahf
or
fwait
fwait
mov
enter
sbb
dec
xor
lods
ja
jns
dec
mov
pop
andb
jl
je
and
mov
aam
push
stos
mov
lahf
push
cmc
sub
mov
pop
repnz
ss
lock
cmp
mov
pop
xor
pop
push
lahf
mov
addr16
and
test
xor
mov
repz
imul
out
lods
insb
sbbb
cmp
addl
jge
and
cwtl
std
fdivrs
aas
or
inc
jmp
cld
into
inc
fcomi
xor
push
jl
sbb
iret
out
adc
xchg
dec
adc
xor
outsb
out
fwait
enter
movsb
aaa
sub
cmp
add
jge
or
sarb
in
es
push
xchg
dec
sbb
bswap
jp
test
addb
in
sti
push
repnz
fidivrl
mov
aaa
pop
std
cmpsb
mov
scas
push
sarl
mov
dec
in
aaa
aaa
aaa
orb
fst
pop
xchg
adc
in
cltd
xor
or
jae
jae
and
jle
out
call
pop
js
jae
xchg
repz
adc
and
fsubrl
test
mov
or
aaa
clc
dec
xchg
dec
mov
addr16
mov
xlat
ret
push
sahf
fwait
fwait
jle
outsb
pop
cld
xor
cmpsb
nop
inc
xchg
mov
sbb
push
sbb
fimull
or
test
daa
lret
loop
in
fucomi
sbb
sub
fdivrl
cli
jmp
jle
loop
fwait
xor
shll
fwait
fwait
fwait
sbb
and
filds
stc
pop
jb
mov
xchg
sub
out
cmp
pusha
fdivrl
idiv
ds
pop
xchg
mov
out
mov
fwait
fistpl
mov
or
inc
fwait
fwait
fwait
fwait
push
mov
add
int
subl
filds
test
jmp
and
mov
test
xor
add
cmovp
in
mov
les
ds
xchg
add
adc
dec
pop
pop
fwait
lock
fucomi
mov
adc
jbe
lock
fwait
fwait
push
pop
fidivrs
shlb
mov
cmp
aaa
sub
nop
out
in
jae
sti
arpl
sbb
xchg
movsl
jl
jl
fidivl
out
iret
mov
sub
shrb
out
out
inc
pop
mov
daa
xlat
adcl
sbb
xchg
push
or
xchg
rcrb
adc
mov
mov
dec
fwait
sbb
adc
insb
outsb
pop
inc
je
mov
ficoms
std
fnsave
adc
insl
gs
stc
jge
int
int
inc
mov
sbb
sbb
int
jp
xor
push
jecxz
xor
xlat
ljmp
fdivp
mov
out
and
dec
cmpb
xchg
add
pop
dec
iret
out
add
xor
dec
loopne
mov
add
push
pop
cmpb
lods
int3
push
ret
and
xchg
scas
test
fwait
fwait
inc
stos
notb
in
or
mov
into
pop
mov
rcrl
into
pop
in
cmpsl
divb
xchg
mov
in
sahf
dec
push
lea
push
dec
out
and
xchg
int
sub
arpl
fwait
cwtl
mov
inc
sbb
call
fwait
fwait
fwait
fwait
pop
ds
loope
in
test
js
outsb
lahf
inc
xchg
jno
iret
inc
andb
push
out
testb
mov
cmp
jae
addr16
push
cmpsl
xchg
or
sub
sub
jle
jb
adc
mov
cmc
scas
push
mov
repz
lret
loopne
jecxz
repnz
fdivrl
push
xchg
add
xor
insb
stc
sbb
dec
dec
lcall
adcl
ljmp
jmp
mov
mov
mov
adc
xchg
insb
clc
mov
dec
sahf
cmp
and
das
pop
icebp
and
mov
adcb
cmp
mov
negb
mov
push
popa
push
clc
cltd
sbb
jle
or
xchg
push
fdiv
mov
and
out
arpl
mov
fdivl
push
cmpsb
movsb
out
fstl
lock
clc
sub
lea
or
fcomps
hlt
std
xchg
adc
push
bound
dec
adc
mov
jge
pop
aaa
jg
in
mov
out
out
clc
xchg
add
inc
and
add
iret
out
out
or
xor
inc
adcb
jae
cltd
test
push
xchg
or
ds
test
stos
xor
pop
fistpl
or
faddl
pushf
es
inc
testl
jae
or
int
shll
dec
pushf
fwait
fwait
fwait
pop
push
lods
mov
jecxz
cmp
fwait
fwait
fwait
mov
nop
add
cmp
fwait
fwait
fwait
xchg
or
out
aas
mov
loopne
subb
jecxz
fbstp
jo
adcb
aaa
aaa
aaa
testb
mov
jo
fdiv
dec
cli
mov
jl
loope
out
pop
mov
into
lds
int3
sub
in
fadds
test
pop
divl
sbb
out
lahf
sbb
call
in
insb
cmp
jecxz
test
sub
xor
out
mov
cmp
mov
loop
sahf
jl
leave
aam
outsb
outsb
aas
fistl
sub
into
mov
cs
add
cmp
add
loop
or
cmp
repnz
loop
cmpsl
hlt
fcom
stc
scas
mov
jmp
and
jl
sub
jne
out
orb
mov
data16
cmpsl
pusha
int
out
cmp
xchg
lahf
inc
cmp
lahf
int
push
or
push
leave
into
outsl
movsl
loope
jbe
or
sub
sbb
les
add
bound
sbb
out
testb
adcl
or
out
jae
in
mov
cmpsl
dec
movsl
mov
lods
out
aam
mov
scas
call
clc
mov
jo
or
push
mov
mov
outsl
sbb
dec
shlb
iret
out
lea
bound
nop
inc
cmp
adc
add
cmp
xchg
and
xor
test
jg
cltd
and
or
pop
out
popa
enter
mov
sahf
fwait
fwait
scas
pop
sbb
ret
add
gs
ja
hlt
jns
sub
roll
repz
cmpb
dec
mov
aaa
mov
les
lcall
ss
aaa
shlw
in
push
sub
adc
inc
xchg
out
or
icebp
mov
adc
lods
test
loope
push
pop
push
fldcw
mov
fdivrl
inc
sbb
push
push
add
loope
or
pop
inc
add
mov
and
and
and
mov
pop
les
sub
subb
out
mov
in
addr16
add
clc
pusha
adc
jb
cmpb
mov
push
dec
lock
fdivl
jae
hlt
dec
pop
mov
icebp
das
clc
aaa
hlt
lea
jae
jle
imul
out
mov
fidivrl
in
jae
inc
pop
shrb
inc
xchg
popa
iret
test
push
clc
jle
iret
movsl
xchg
cmp
add
iret
cli
insb
test
cmp
fidivrs
xor
xchg
push
scas
xchg
cmp
mov
push
ret
and
pop
mov
stos
and
mov
dec
mov
in
xchg
cld
outsb
lahf
add
std
insb
outsb
outsb
or
mov
and
push
mov
stos
add
mov
fstps
cmp
clc
cwtl
jo
in
xor
shrb
out
push
lahf
fwait
fwait
fwait
call
hlt
mov
mov
mov
jle
int3
movsb
pop
fdivs
es
iret
idivb
ljmp
xor
mov
adc
outsb
push
inc
scas
loopne
outsb
and
jl
or
ret
shll
push
dec
jp
push
cmpsb
mov
inc
mov
mov
mov
faddl
and
fdivl
pop
mov
mov
jno
xor
xor
jnp
int
push
sbb
lahf
pop
in
daa
call
sub
sbb
sbb
mov
mov
cmp
rep
clc
outsb
cld
divb
mov
arpl
dec
lea
out
les
das
mov
out
out
jp
pusha
fmull
cmp
dec
aad
out
pop
aaa
jb
mov
pop
mov
sbb
dec
xchg
lret
xchg
jnp
test
inc
aam
insl
jg
cmp
shll
mov
jecxz
inc
ss
icebp
loope
sbb
popa
mov
jno
fldenv
or
jecxz
xchg
sub
movsb
out
push
cli
ds
aam
rorb
cmp
insl
popa
adc
adc
push
and
sub
sub
sub
movsbl
mov
sahf
insb
cmp
aas
dec
pop
xor
or
adc
aam
sbb
stos
mov
aas
roll
imulb
not
addr16
xchg
cmc
lods
stos
mov
push
stos
jae
sub
and
add
dec
mov
test
lcall
jbe
jne
fdivrl
aaa
aaa
and
jo
mov
dec
xchg
xor
or
cwtl
call
scas
inc
lods
stc
fsubl
jp
mov
push
mov
lds
mov
fwait
fwait
fwait
add
lds
sahf
mov
loopne
fwait
fwait
fwait
fwait
in
mov
cmpsl
dec
xchg
xlat
outsb
aas
fwait
fwait
xor
dec
inc
add
fidivrl
nop
ja
cmpl
repz
cmp
mov
push
mov
dec
fdivs
imul
int3
inc
mov
mov
mov
jno
pop
or
mov
jecxz
sub
cli
mov
mov
dec
jae
xor
xlat
pop
sbb
fdivrl
and
adc
fs
adc
fsubrl
imul
inc
adc
ss
adc
lahf
int
in
psubd
dec
pop
icebp
inc
in
pop
rorb
lahf
movsb
mov
in
fcoms
ss
outsb
outsb
outsb
outsb
andb
rcrb
add
or
outsb
outsb
in
fmuls
xchg
xor
jne
outsb
outsb
outsb
into
dec
rorl
lods
test
outsb
outsb
outsb
outsb
popa
dec
fs
pop
adc
push
js
outsb
outsb
push
stos
pop
aas
cmpsb
sbb
mov
push
jne
add
cmp
out
idivl
fwait
fwait
fwait
mov
dec
sub
in
lods
xor
popa
std
insb
outsb
outsb
xor
data16
mov
mov
stos
xchg
jle
sub
sahf
sbb
mov
out
addl
jge
mov
in
fs
xchg
loop
sub
or
or
pop
push
fisubrl
les
mov
inc
add
push
pop
xor
out
out
xor
icebp
mov
pop
in
jmp
xchg
outsb
pop
jbe
sbb
mov
or
mov
ds
mov
sti
xchg
fcmovnu
cmp
lret
jne
cltd
jmp
rol
ss
xchg
fwait
or
loope
fdivs
fwait
cmp
pop
or
das
jecxz
jbe
push
or
fwait
fwait
fwait
fwait
pop
mov
cmp
ret
mov
mov
lods
push
mov
dec
aas
jl
push
mov
out
mov
lea
mov
gs
sbb
sub
mov
jae
ss
je
pop
clc
loope
sbb
jae
jae
inc
mov
data16
pop
js
lods
leave
mov
shlb
pop
add
lock
ss
decl
pop
mov
sahf
jb
test
jecxz
insb
cmp
ja
jb
test
xchg
jnp
lahf
int
shrl
arpl
xlat
cmpsb
mov
and
aam
mov
pusha
imul
mov
inc
repnz
arpl
sbb
pusha
and
out
clc
jmp
xor
add
push
lods
and
mov
outsb
outsb
outsb
xchg
mov
dec
insl
jno
xchg
xor
insb
outsb
outsb
fdivr
sbb
lahf
xorl
lock
fiaddl
outsb
outsb
outsb
lahf
enter
mov
or
std
insb
lock
push
jnp
mov
sub
mov
push
cli
push
push
push
cmp
mov
dec
js
orb
pop
aas
adc
mov
sub
loope
popa
jge
cmc
lret
inc
xor
adc
aad
cvtpi2ps
subl
aam
cli
push
pusha
ret
in
adc
push
loopne
fs
fdivrl
into
iret
pop
mov
cs
ds
addr16
testb
add
mov
out
roll
mov
push
inc
into
push
loopne
xlat
adc
cmp
pop
add
sti
cs
call
pop
outsl
jae
mov
xchg
fldt
lcall
ss
push
outsb
outsb
aas
mov
inc
test
test
sub
xchg
mov
jle
shlb
pop
outsl
push
fstpl
jo
pop
dec
inc
push
frstor
addr16
fstps
lret
mov
mov
xchg
mov
jle
mov
inc
sub
jbe
jno
movl
sbb
loop
into
xchg
pop
pop
inc
push
imul
outsb
lods
sahf
popa
mov
xlat
sbb
pop
lock
sub
ss
sbbb
flds
clc
fldcw
aas
enter
jbe
ficompl
dec
mov
outsb
jne
sub
outsl
stc
fmull
lret
mov
sub
std
dec
imul
push
imul
negb
or
push
aam
cmp
out
xor
aas
pushf
scas
mov
mov
cld
mov
or
subl
inc
ret
sarl
addr16
dec
push
and
clc
mov
fnstenv
rcll
in
roll
jae
aad
jl
adc
icebp
push
mov
loop
jae
scas
loope
rcll
pop
sbb
icebp
mov
lods
cmp
jl
xchg
outsb
jge
pop
fld
out
mov
nop
lods
xlat
pop
lock
call
cmpsb
aas
movsb
dec
sahf
rol
call
out
pop
and
push
xor
and
int
add
dec
in
cmp
dec
jge
das
int
pusha
sbb
fnsave
idiv
fcoml
mov
aam
jbe
xchg
or
xchg
int
or
cs
sbb
mov
push
test
cmpsb
cmpsb
push
pop
leave
mov
in
repnz
dec
dec
lret
sahf
cmp
aaa
mov
ficoml
add
outsb
push
mov
sbb
aas
or
jns
push
loope
call
jl
mov
lods
imul
fwait
fwait
mov
rorb
xor
test
fiadds
aas
movsl
imul
leave
fwait
sbb
sub
nop
push
cmp
sbb
enter
push
adc
outsb
or
rcr
in
test
in
clc
and
push
push
mov
xchg
fdivrs
insl
andw
into
outsb
or
mov
int
aas
adc
mov
int
int
xor
pop
push
ret
adc
rorl
push
out
lods
iret
inc
pop
jp
sahf
sti
adc
repnz
out
dec
and
lods
scas
out
ret
fsin
shll
pop
mov
pop
mov
jae
mov
movsl
setno
cmp
mov
cli
pop
pop
cli
dec
call
aad
xchg
icebp
mov
and
adc
pushw
shrl
dec
aas
and
mov
sti
rolb
sbb
dec
jae
sahf
in
jae
popa
addr16
mov
jp
insb
aas
fildl
scas
xchg
jle
and
stos
ret
das
mov
insb
insl
les
cmp
pop
xor
imul
aas
dec
out
inc
std
mov
adc
rorb
mov
scas
xor
clc
fldcw
xor
inc
popf
push
out
pop
sub
insb
sbb
loop
mov
mov
sub
mov
jmp
int
fists
xor
das
cmp
sti
fdivrl
mov
jno
pop
mov
mov
int
add
sti
clc
cmp
lret
inc
mov
sbb
fcompl
xchg
jle
outsb
mov
inc
cwtl
pop
int
int
inc
sbb
jbe
inc
int
shrl
mov
jle
data16
inc
xchg
adc
adc
out
cmp
insb
lcall
add
movsl
shrb
je
fildll
popf
or
and
xchg
push
int
addr16
cmp
mov
mov
mov
jmp
dec
sub
cmc
push
dec
insl
shl
cmpl
pop
mov
shrb
lcall
int
and
pop
add
dec
cmpsb
aaa
aaa
aaa
aaa
hlt
ja
sub
mov
ss
shl
mov
adc
mov
aaa
lahf
inc
add
fsub
push
and
inc
iret
sub
jns
push
fcoml
daa
fidivs
cmp
call
xor
pop
or
sbb
rcr
mov
daa
out
inc
pushl
jno
fidivrl
stc
fwait
outsb
outsb
js
sbb
sbb
jecxz
mov
mov
adc
dec
icebp
add
dec
pushl
mov
outsl
aam
push
rcll
in
adc
sub
sbb
aaa
aaa
mov
fiaddl
sbb
xchg
sub
jmp
aas
adc
mov
mov
fcmove
lods
cmp
xorl
pop
cs
aam
fcmovnbe
shlb
sahf
pop
movsb
xlat
addr16
push
mov
push
dec
xchg
mov
negb
sub
xor
iret
out
xchg
push
mov
sub
xchg
mov
xchg
mov
jb
dec
push
cmpsl
repnz
fcomi
add
or
jnp
xor
xchg
aaa
aaa
aaa
lahf
mov
sub
cmp
add
jge
push
cmp
pop
in
dec
adc
fs
cld
add
fs
rcrb
pop
iret
mov
cli
pop
lock
mov
loop
mov
loop
mov
and
negb
jle
mov
into
xchg
clc
jae
jae
adc
mov
xchg
jno
shlb
jae
repz
pop
xlat
and
sti
pop
or
loopne
inc
out
cld
insb
or
cmp
clc
in
pop
pusha
mov
inc
nop
lret
xchg
fildl
adc
mov
shrl
sti
lock
or
and
cmp
jae
clc
add
sti
mov
jecxz
call
movsb
xor
iret
in
xorl
hlt
push
xor
add
fwait
aaa
aaa
aaa
mov
dec
in
ret
sub
cmp
fstpl
fdivrl
jmp
enter
insl
les
xor
add
xor
mov
int
mov
test
and
mov
mov
pushf
callw
fdivrl
sbb
jbe
cli
xchg
test
pop
dec
imul
repz
dec
outsl
cmpb
sahf
leave
scas
es
int
int
adc
lret
ljmp
cmp
iret
and
mov
or
xor
adc
scas
push
jl
sti
push
pop
inc
out
das
push
fnstenv
sti
fsts
pop
addr16
ljmp
jae
and
loop
sub
mov
sbb
push
mov
mov
dec
xchg
sbb
sbb
in
pusha
add
inc
mov
lock
sahf
fwait
mov
xor
call
call
xor
pop
pop
push
loop
inc
sub
ljmp
mov
test
shrl
imul
adc
test
pop
decb
and
mov
movd
xor
add
pop
stc
cmp
lock
test
movsl
cmp
inc
sub
sbb
icebp
movsl
mov
cmp
and
lcall
inc
cmp
lahf
or
addr16
push
inc
or
es
jmp
fiaddl
int
ret
test
add
rclb
fdivrl
in
push
inc
mov
xchg
popa
cld
add
pop
out
hlt
xchg
mov
cmpsl
int
data16
pop
pop
rorl
jae
add
movsb
push
icebp
popf
mov
divb
add
push
adc
cmp
mov
sub
and
jle
addr16
out
repz
not
ljmp
outsl
push
jl
inc
fwait
dec
dec
inc
inc
add
iret
int
subb
or
aaa
pop
cmp
cmp
les
inc
cmp
call
mov
mov
xchg
mov
aam
pop
outsb
outsb
outsb
outsb
stc
xchg
fimuls
mov
dec
hlt
push
clc
insb
and
xor
fstl
dec
loop
jo
sar
aad
das
adcl
adc
and
int
xchg
fsubr
pop
mov
jl
push
cmp
das
les
mov
mov
rol
filds
jmp
rcrb
jmp
fwait
pop
repz
xchg
adc
popa
mov
pop
or
inc
in
test
loope
jae
rcll
cmpsl
push
or
adc
loop
adc
cmp
imul
pusha
jecxz
into
add
mov
pop
leave
out
jne
push
sub
fstpl
shlb
inc
shlb
pop
sbb
js
mov
test
out
pop
fnsave
push
jle
pop
cmc
dec
mov
jb
cmpsl
jle
and
jg
clc
jp
std
insb
aam
shrl
mov
out
jl
mov
pop
xor
jae
xchg
lock
jmp
xchg
ret
jb
mov
fists
xchg
mov
add
cmc
mov
repnz
mov
xrstor
push
push
xchg
fcomi
mov
mov
and
sbb
nop
push
add
fmul
mov
int
das
pop
push
push
or
cmp
mov
dec
sbb
stos
aaa
mov
int
pop
dec
aad
sbb
loopne
sub
aaa
aaa
popa
setae
stos
in
bnd
inc
ds
cmp
pusha
jmp
dec
std
xor
aam
test
and
popf
jmp
fwait
or
push
pop
test
fsubl
jecxz
sbb
cli
jle
out
xchg
pop
in
adcl
iret
dec
mov
cmp
lock
ljmp
fwait
fwait
mov
fldt
dec
mov
sahf
fwait
mov
stc
ret
sub
jl
mov
mov
lret
push
mov
adc
scas
jecxz
int
int
ret
mov
sbb
xor
sbb
mov
fnstcw
pop
dec
test
jo
xor
dec
dec
leave
pop
pop
sti
pop
pop
cmp
lret
je
test
test
pusha
sbb
int
int
push
dec
mov
or
inc
call
xorl
push
cmc
mov
or
inc
push
ss
cmpsl
fdivrl
aaa
test
xchg
int3
repnz
mov
jae
sti
fdivrl
mov
xor
movsb
lahf
addr16
jae
adc
mov
adc
mov
daa
enter
adc
sub
mov
xor
mov
popa
jge
loope
mov
push
into
fdivl
or
adc
xchg
pop
mov
test
cmp
loop
mov
xor
pushf
mov
imul
imull
pusha
aaa
aaa
aaa
aaa
stc
ss
outsb
cmp
push
in
mov
add
lods
pop
mov
adc
mov
pop
cmp
or
addr16
mov
sbbb
jns
xor
notl
int
xor
or
lahf
finit
inc
dec
fnsave
js
xorb
push
adc
aam
es
out
lret
nop
je
icebp
mov
push
pop
idivl
inc
les
mov
fnsave
or
push
rcrb
or
lds
ja
out
xor
fistpll
bound
pop
aas
add
out
aam
jae
lock
es
push
pop
repz
mov
mov
mov
xchg
fisttpll
imul
out
mulb
xchg
mov
xchg
dec
mov
and
and
jae
jae
pop
movsl
mov
imul
jae
jae
lcall
xchg
xchg
pusha
add
fdivrl
add
push
fisubrl
inc
fisttps
sti
xchg
cwtl
je
sti
ljmp
xchg
jno
andb
js
icebp
dec
lret
aad
fdivrs
jle
in
mov
jbe
cmp
lahf
fwait
fwait
fwait
xchg
push
sub
cld
and
fstpt
xchg
pop
or
mov
jae
nop
or
rorb
mulb
outsl
lds
pop
out
pop
pop
iret
out
lret
xor
iret
stc
lods
pop
por
mov
sub
stos
adc
cmp
jle
aaa
ja
xchg
cmpb
cmc
push
xchg
jo
adc
dec
cmp
jae
inc
sbb
push
xchg
fadd
xchg
jae
fdiv
xor
mov
les
sbbl
jmp
aas
mov
jb
lret
or
sbb
clc
rorb
and
ds
mov
xor
cmpsl
jnp
mov
mov
pop
jae
stc
out
ficoms
cmp
cli
mov
dec
sub
jae
pop
pop
xor
icebp
shll
xchg
mov
jae
sbb
fnstsw
mov
fcmovnbe
clc
orb
lcall
inc
pushf
or
loopne
outsb
filds
pop
into
push
shr
pop
rorl
mov
std
insb
loope
sub
xchg
lahf
dec
data16
inc
movsl
scas
orb
fimuls
int
lahf
fwait
mov
ret
push
cs
inc
aaa
lods
mov
notb
scas
dec
and
adc
xor
fimuls
arpl
pop
ljmp
or
pop
hlt
ficompl
cmc
xchg
ds
lcall
push
cmpsl
fdivr
fldl
or
inc
les
neg
jno
pop
insb
out
out
mov
in
push
es
ds
roll
pop
mov
fstps
outsb
lods
pop
jns
pusha
jmp
aas
clc
enter
cwtl
shlb
xlat
push
int
int
push
sbb
outsb
movsb
push
in
xchg
adc
xchg
out
push
sbbb
inc
clc
jae
fstp
cmp
pop
lock
push
mov
push
cmp
jns
lods
pop
jne
add
insb
outsb
outsb
loop
pop
cs
push
cmp
mov
dec
cs
div
or
jmp
or
rcr
jne
and
push
mov
fdecstp
sbb
add
call
das
hlt
cwtl
outsl
jae
fstps
jp
add
jge
adc
shll
notl
pop
dec
call
sbb
aaa
fisubrl
inc
dec
movsb
jb
jne
cmp
pusha
add
mov
pop
push
or
add
mov
sub
lods
shrb
call
xor
rcrl
sbb
jnp
push
or
adc
xchg
in
daa
test
push
push
push
pop
cmpsb
or
xchg
ja
add
dec
jl
lahf
cwtl
stos
push
sub
loopne
addb
in
das
adc
sbb
jle
lods
movsl
mov
iret
cmpsb
lahf
int
lock
loopne
adc
outsb
aas
push
mov
xchg
cmp
add
cmp
dec
fcompl
xchg
dec
shr
pop
sbb
pop
dec
iret
scas
cld
mov
jo
aaa
aaa
mov
push
and
jne
mov
aaa
aaa
aaa
mov
jecxz
enter
xchg
movsb
iret
fistpll
cmpsb
jle
cmp
cmp
cwtl
xchg
fwait
jle
add
sbb
insb
mov
cwtl
dec
sbb
lahf
mov
xchg
fimuls
addr16
mov
fsubrs
adcl
out
inc
jecxz
mov
adc
sub
mov
rcrl
movsl
sub
fisttpl
int
in
jnp
push
mov
xchg
call
les
inc
inc
cmp
out
mov
iret
out
aas
cmpsl
jp
dec
out
mov
into
int
pop
pop
rcll
and
mov
int
int
sbb
fidivrl
cmp
add
mov
mov
mov
push
fmuls
sub
xchg
sbb
xchg
fwait
fwait
cmp
adc
xchg
and
fldt
fwait
fwait
dec
pusha
mov
in
lcall
aaa
pop
jl
outsl
lret
xchg
loope
dec
aam
sub
fstps
fdivrl
test
add
insb
sub
pop
jbe
movsb
addr16
dec
or
cmpsl
hlt
mov
aas
shll
or
or
xor
int
dec
xor
sti
inc
stos
add
jae
aam
subb
sbb
mov
jae
jae
and
lock
imul
jae
mov
pusha
out
jl
xchg
dec
es
jae
jae
shl
cmp
mov
test
addr16
jae
cmp
loope
adc
loop
mov
pushf
mov
loope
fdivrl
cmp
popf
es
in
ds
je
xor
or
sti
das
cmp
call
cwtl
andb
jae
das
inc
fldt
gs
push
jae
sbb
mov
call
push
adc
jae
jae
sub
mov
dec
into
enter
addr16
sarb
int3
dec
and
rolb
ss
loope
xchg
xor
xchg
dec
jg
ret
test
out
mov
or
test
loope
out
lret
mov
imul
add
aaa
aaa
aaa
jp
adc
xlat
das
lods
xor
ds
aaa
aaa
insl
xchg
mov
movsb
push
test
adc
or
repnz
add
aaa
mov
xchg
xor
jne
mov
jecxz
les
xchg
in
mov
je
dec
imul
or
adc
jno
dec
sub
out
jl
inc
pop
test
add
xor
out
mov
cmp
loopne
addr16
outsb
pop
pop
iret
outsb
pop
scas
test
sbb
xchg
mov
std
fnstcw
fadds
or
or
aaa
jno
mov
push
movsb
jae
sub
lds
pusha
pop
xor
insb
out
out
je
lock
fisubs
add
les
inc
fsub
and
outsb
jae
testl
push
sbb
addr16
add
sahf
cmc
shlb
repz
je
or
mov
mov
jnp
shlb
jl
in
xchg
push
ret
outsl
fldl
xchg
js
ds
ja
mov
adc
cmp
loopne
mov
out
mov
cs
popa
dec
jl
xor
or
mov
loope
pop
mov
orl
mov
jbe
movsl
in
mov
adcb
pop
sub
xchg
into
in
adc
stc
cs
es
int
int
sub
jns
lcall
xchg
addr16
push
push
push
lret
out
adc
shlb
fcomp
mov
fwait
fisttpl
fcmovnu
fldl
jb
mov
jge
cmpsl
sub
sti
push
sbb
adc
push
mov
jne
sbb
stc
and
pop
icebp
add
rcrb
rorb
test
hlt
sub
outsl
mov
mov
adc
jge
das
lret
or
gs
sub
cmp
iret
mov
cli
loop
sbb
enter
cmc
cwtl
dec
ret
das
ljmp
mov
fdivr
jb
jae
xchg
stos
push
clc
scas
fildl
xchg
and
sub
bt
js
lahf
fs
or
xor
lret
sub
add
pop
iret
lcall
mov
push
out
sbb
movsb
cwtl
fistps
adc
in
pop
sub
insl
call
mov
xchg
scas
std
mov
imul
mov
mov
rorl
cmp
ss
aaa
mov
jbe
or
enter
inc
adc
hlt
lods
pop
fnstcw
imul
mov
aas
xor
in
repnz
jnp
lret
and
push
xor
mov
jns
inc
cmp
arpl
es
mov
fbstp
cmp
out
mov
sti
lahf
and
sbb
pop
call
out
cmp
jb
inc
in
scas
mov
jae
aad
das
mov
arpl
out
lods
call
scas
or
mov
rcl
out
lahf
negl
xor
sub
mov
xlat
shr
shrb
mov
cmp
in
jmp
or
cmp
lahf
xchg
les
fdivrl
aaa
imull
xor
pop
idiv
hlt
fsts
inc
mov
cmp
shrw
ds
lds
mov
aaa
sub
addr16
aaa
aaa
aaa
aaa
nop
pusha
fisubl
out
mov
aaa
aaa
aaa
aaa
ffreep
pop
sahf
test
popf
and
inc
sti
jge
aaa
fidivl
pop
cwtl
xlat
mov
inc
in
mov
addr16
jae
lahf
jne
in
loop
sub
int
in
scas
jb
dec
push
ja
shll
hlt
xchg
cmp
or
sbb
or
out
pop
mov
xchg
cld
ret
pop
mov
or
cs
insb
decb
lcall
popf
scas
icebp
icebp
lock
rorl
sub
iret
add
imul
dec
leave
jle
mov
cmpsl
repz
ja
in
pusha
mov
fcomip
shrl
mov
cmp
insl
xchg
iret
icebp
push
sbb
outsb
outsb
outsb
outsb
cmp
fsub
xchg
lock
mov
mov
insb
outsb
outsb
outsb
test
xor
lock
ss
in
sbb
pop
cli
cmp
mov
fdivs
jae
or
adc
jb
fs
mov
cltd
jo
cmc
sti
insb
lahf
jno
mov
jb
and
out
out
or
lods
pushf
xchg
outsb
mov
xchg
clc
mov
popf
xchg
lods
mov
mov
push
pop
bound
push
push
movsl
or
add
xorb
out
nop
xchg
sbb
out
xor
push
mov
aad
scas
hlt
mov
fwait
movsb
loop
in
and
test
insb
out
clc
cmp
and
pop
out
rcll
cmp
ficompl
es
mov
in
fwait
fwait
fwait
int3
mov
out
lds
lods
fwait
fwait
fwait
fwait
xor
jecxz
xor
xchg
jecxz
push
imul
push
aaa
aaa
aaa
mov
test
pushf
outsl
ja
sbb
subl
jne
out
out
lods
dec
xchg
cs
int
pop
js
insb
mov
shlb
add
push
mov
les
or
into
jb
shlb
cmc
mov
in
adc
fs
mov
dec
or
adc
loope
xor
out
pop
add
dec
xchg
or
cmp
pop
jge
sub
dec
rorb
loope
sti
cltd
je
or
push
mov
mov
or
fwait
fisttpl
add
mov
fwait
aam
inc
cmpsb
mov
cmp
adc
jge
outsb
sub
shlb
jge
icebp
f2xm1
pop
pop
les
and
jge
jecxz
movb
scas
mov
add
and
in
fwait
fwait
fwait
mov
ja
fs
pusha
jo
scas
in
add
fwait
sahf
test
mov
inc
es
int
js
mov
test
pop
xchg
mov
int
int
mov
fisubrl
imul
mull
lods
fwait
clc
jmp
pop
iret
out
dec
mov
rorb
cmp
dec
in
pop
jl
pop
sbb
xor
jg
cwtl
adcl
pop
xchg
push
lret
mov
loop
les
cmpsl
sub
push
and
outsl
and
lahf
lods
and
sbb
lds
outsb
outsb
cs
jb
mov
cmp
pop
ficompl
insb
es
loop,pt
les
xchg
push
mov
repnz
jae
test
xchg
mov
shrb
aam
into
cli
test
adc
out
adc
notl
out
mov
push
or
inc
loop
jecxz
dec
add
outsb
add
and
data16
psubsw
pop
out
scas
add
mov
les
and
js
sahf
fwait
and
dec
mov
lcall
je
ljmp
ret
inc
loope
push
pop
testl
jg
inc
aam
xchg
push
test
pop
push
out
out
gs
rorb
out
push
push
rorl
bound
out
outsb
or
aas
fwait
fwait
fwait
jns
gs
xor
stc
jno
push
repz
push
add
jge
cli
andb
jg
mov
dec
or
clc
jmp
or
movsb
inc
lahf
int
lahf
and
adc
call
mov
insb
jns
pusha
cmp
fildll
lock
or
addr16
iret
push
push
or
pop
arpl
fisubl
sahf
cmc
mov
scas
and
or
xchg
mov
jge
jo
jae
adc
jo
adc
xchg
in
jae
jae
cld
cmp
out
cmp
or
mov
xchg
fnsave
into
fcomps
push
sub
mov
outsl
pop
cmpsb
push
ljmp
jbe
or
jb
push
nop
push
push
or
mov
iret
in
add
sbb
pop
or
out
out
aam
test
mov
cmp
out
out
repnz
cmpsl
lods
arpl
es
imul
hlt
pop
es
adc
stos
pop
aas
lods
inc
fiaddl
mul
out
out
loop
add
ud1
mov
outsb
xchg
iret
and
pop
mov
mov
ja
jge
stos
fwait
aas
aas
mov
or
outsb
outsb
lahf
fildl
shll
pop
pushf
daa
scas
out
dec
in
loop
jle
jl
jo
pop
or
jp
in
jae
sti
xchg
pop
jnp
and
mov
xorl
xorl
fimuls
pusha
orb
inc
loope
cmp
sub
xor
in
mov
int
inc
lea
ret
cmp
imul
push
sub
mov
jge
pusha
jbe
cmove
jb
fmull
icebp
dec
fisubrl
fsubrs
cmp
imull
sti
outsb
outsb
cs
adcb
push
js
repnz
pop
mov
mov
ret
or
loopne
pop
cmp
lock
das
mov
in
loope
icebp
fldenv
test
cld
mov
push
movsl
nop
dec
hlt
jnp
inc
mov
mov
lret
test
cmc
lock
mov
cmpsb
inc
mov
fcompl
test
pusha
xchg
aas
mov
xchg
mov
dec
jl,pt
sub
sbb
idivb
push
xchg
popf
add
sbb
inc
aas
fcmovne
out
outsb
stos
cmc
jbe
pop
lock
xchg
mov
loop
outsb
outsb
outsb
out
ljmp
adc
dec
pop
jle
ja
mov
sub
shrl
clc
xchg
push
push
addr16
test
cmp
xchg
fwait
fwait
fwait
fwait
je
xchg
jnp
je
stos
push
stc
mov
ds
fwait
fwait
ja
enter
mov
xor
hlt
insb
std
mov
pusha
add
dec
in
addr16
push
sub
enter
sahf
sahf
bound
int
int
subl
add
loopne
addr16
rcrb
insl
or
push
icebp
ja
add
jo
xor
add
fmull
in
pushf
add
xor
add
into
sahf
inc
jns
fisubrl
inc
mov
fstpl
repnz
push
mov
dec
mov
out
fsubp
pop
mov
inc
addr16
fdivrl
mov
mov
sub
int
nop
inc
mov
cmp
aam
aaa
push
ds
add
pop
xchg
jl
int
in
lret
mov
xor
adc
inc
sbb
push
dec
adc
addb
out
xor
inc
sub
ret
dec
aaa
mov
cmp
lock
hlt
dec
lds
mov
int
addr16
into
push
rol
cmp
and
mov
int
imul
or
into
sub
jl
and
push
sahf
int
popa
pusha
fisubrl
xchg
sub
adc
roll
imul
std
or
cmc
jne
fwait
mov
mov
test
pop
fs
out
and
ret
gs
push
das
shrb
aas
fisttpl
adc
test
cmp
lahf
imull
jbe
cli
clc
insb
outsb
xchg
divl
sub
jae
sti
fwait
adc
cmp
cmp
jae
jae
push
insb
adc
xchg
jae
jae
sarb
sahf
lods
rol
lret
arpl
xchg
jo
sub
or
pop
pop
iret
out
mov
rcrl
cltd
insb
outsb
outsb
outsb
lock
mov
lods
divb
adc
lock
push
mov
sbb
sub
push
xchg
mov
add
iret
repnz
mov
jb
jae
jo
cmpsl
xchg
lods
ret
es
aaa
mov
dec
test
add
jle
mov
pop
and
ret
shrb
aad
data16
insb
pop
sbb
sbb
push
inc
clc
les
mov
jbe
pop
inc
fs
cmp
xchg
jno
fimull
and
or
cld
push
dec
or
cmp
mov
fcompl
pop
cmp
inc
and
lds
xlat
imul
mov
mov
lock
xchg
jle
mov
pop
add
test
add
rcl
fiadds
jge
in
dec
mov
stos
jbe
cmp
test
adc
mov
lcall
pop
cli
jl
cs
adc
xchg
loope
orb
insb
enter
jae
and
push
sbb
test
sbb
jae
sub
hlt
iret
jbe
mov
dec
lret
insb
or
dec
rclb
imul
xchg
mov
mov
lods
pop
mov
xor
xchg
out
inc
out
add
cwtl
shlb
xchg
adc
jecxz
pop
mov
lahf
add
mov
aas
add
pusha
testl
iret
and
int
in
xchg
sbbb
cmc
sti
das
and
out
sub
int
int
push
in
fdivp
adc
xlat
xchg
dec
push
add
sbb
sahf
mov
xchg
inc
xor
fwait
sub
aad
insl
push
or
and
pop
jl
cmp
jnp
mov
jl
jbe
mov
stos
ret
jl
out
mov
aam
or
loope
call
adc
sub
in
or
xor
ljmp
push
add
ret
stc
cmp
iret
int
pop
sahf
jnp
sub
test
int
xchg
insb
outsb
outsb
outsb
hlt
mov
mov
xlat
sar
fcmovne
inc
inc
rcl
in
jns
fwait
fwait
fwait
fwait
or
cltd
pop
popf
pop
ss
and
cmp
lods
xor
cli
sub
out
mov
outsb
pop
clc
insb
outsb
sbb
in
gs
les
rorb
outsl
inc
mov
dec
jge
inc
inc
insl
push
out
idivb
xchg
fistpll
outsl
aam
out
or
outsb
jp
iret
push
pavgb
into
mov
mov
fldl
jl,pn
iret
mov
push
in
or
push
adc
lret
inc
mov
ss
ret
lock
sub
mov
dec
rcrl
jl
mull
dec
lock
xor
stc
adc
mov
lea
sub
jae
jle
xchg
mov
fisubrs
inc
gs
dec
jae
fidivrl
ja
jb
sti
jge
mov
std
mov
adcb
jae
int
push
mov
dec
adc
jae
add
nop
mov
fstps
pop
and
jbe
lahf
int
arpl
enter
mov
mov
dec
or
in
jns
jecxz
sub
leave
xchg
lock
ljmp
daa
outsl
fsubrl
cmp
mov
addr16
fldenv
adc
pop
out
es
pop
jg
xlat
das
loope
xchg
cmp
inc
ds
mov
in
insb
or
mov
cmp
inc
pop
inc
cmp
jmp
xlat
lahf
loop
jbe
dec
push
jg
fadds
cmp
add
adc
or
pop
ss
aaa
mov
mov
push
enter
gs
and
mov
enter
pop
lock
add
dec
ret
mov
int3
orl
xchg
sbb
inc
ds
fcompl
xchg
fisubl
jmp
cmp
pop
fdivrl
sub
mov
loop
movsb
jno
cltd
je
imul
loop
jnp
mov
std
insb
outsb
outsb
mov
fildll
add
fs
pop
hlt
mov
subb
dec
add
test
es
and
cmp
clc
jne
sbb
jle
aaa
in
dec
mov
and
add
fwait
fwait
fwait
jo
mov
push
loope
out
jecxz
sbb
fwait
fwait
fwait
add
adc
mov
cmp
fwait
fwait
fwait
stos
mov
cmc
fmull
pop
mov
adc
cmp
idivb
adc
clc
or
inc
mov
and
test
ds
mov
scas
test
xor
jae
pop
incl
shrl
test
cmp
insl
adcb
bswap
mov
xor
jp
push
pop
iret
jbe
pusha
js
fcomp
imul
imul
sbb
pushf
lds
xchg
inc
bound
iret
out
jo
xor
bnd
es
add
js
inc
inc
adc
orb
mov
cld
and
int3
mov
cmc
into
cmpl
clc
pop
sub
mov
idivb
sbb
stos
cld
mov
lcall
stc
cli
fdivrl
xor
push
pop
pop
mov
stos
adc
daa
call
shll
sbb
mov
or
xor
adc
or
outsb
mov
dec
shll
movsl
mov
setbe
mov
repnz
cmp
lret
mov
cmp
mov
das
fstpl
mov
jecxz
cmpb
push
aaa
stos
or
int
inc
call
imul
mov
mov
pop
lahf
inc
jae
push
bound
jle
in
sub
shrl
xchg
mov
aaa
mov
jmp
stos
pop
ljmp
dec
mov
fdivrl
aaa
inc
insl
inc
ret
imul
ss
scas
stos
cmp
fs
add
cmp
push
sbb
jae
mov
mov
jo
jae
jae
aas
inc
mov
divl
xor
cmpb
icebp
fwait
fwait
fwait
fwait
jecxz
scas
stos
xchg
mov
ret
dec
sahf
fwait
fwait
fwait
sub
ficoml
lods
arpl
add
std
pop
fsubrl
lock
shlb
mov
mov
xchg
fsubrl
mov
icebp
push
and
inc
sbb
sbb
fdivr
in
mulb
jmp
fisttps
pop
pop
dec
push
push
push
xchg
int
in
outsl
add
adc
out
adc
mov
fisttpll
iret
int
popf
mov
add
in
loopne
out
push
sub
inc
rorb
jg
fcompl
mov
mov
dec
inc
pop
pop
je
outsb
mov
das
push
xchg
loopne
je
xchg
or
cs
mov
xchg
lea
lds
sub
ja
xorl
cwtl
insb
pop
idiv
fdivl
mov
cmp
dec
or
push
sub
sub
das
jae
iret
out
stos
xlat
es
xor
mov
pop
rcl
inc
shlb
jno
jbe
and
mov
xor
lcall
shlb
mov
add
cld
push
jp
fnstenv
adc
push
ds
in
jae
add
mov
mov
fidivrs
sub
in
ljmp
fildl
pop
jne
mov
outsb
outsb
lahf
fwait
sub
in
in
enter
outsb
outsb
outsb
outsb
frstpm(287
xchg
outsb
outsb
outsb
outsb
dec
inc
mov
jle
insb
pop
into
jge
outsb
outsb
ss
mov
mov
iret
divb
fs
movsl
ds
es
fmul
dec
inc
les
or
test
movsl
lahf
int
sahf
rcll
sub
ds
jecxz
sar
cmp
icebp
in
and
or
sbb
adc
or
mov
testb
dec
pushf
ds
mov
pop
mov
fwait
fwait
fwait
inc
in
scas
daa
outsb
mov
jns
aas
fwait
fwait
icebp
xchg
cmpb
mov
test
mov
and
xor
jae
test
fiaddl
mov
ljmp
mov
xlat
inc
loope
mov
fnsetpm(287
push
mov
inc
gs
push
cmp
out
adc
hlt
je
cwtl
call
jns
mov
in
mov
mov
fidivl
or
aaa
aaa
aaa
aaa
jg
mov
and
mov
int
lock
mov
pop
adc
jae
jae
pop
adc
rorb
aaa
inc
cmp
out
out
fimull
aad
mov
jmp
mov
rolb
dec
insb
outsb
outsb
xchg
lret
outsl
outsb
lea
xlat
iret
divb
xor
sbb
jbe
mov
pop
dec
mov
jns
je
xchg
sahf
int
push
out
or
jae
daa
jl
hlt
xor
mov
aaa
mov
rolb
jle
nop
push
add
pop
adc
xchg
out
xor
pop
rolb
sbb
jbe
xchg
inc
clc
rclb
int
sbb
inc
mov
xchg
int
in
and
popa
ds
out
out
idivb
leave
cs
loop
dec
in
fidivrs
pushf
fistl
sahf
sbb
mov
int
in
mov
das
daa
inc
sahf
int3
mov
das
push
ljmp
mov
xchg
in
xchg
push
rolb
jae
push
in
loop
ljmp
test
aaa
aaa
mov
sahf
push
xor
leave
sarb
jp
in
clc
ds
aaa
sbb
xor
dec
pop
pop
mov
ljmp
rolb
inc
sub
ljmp
pop
lock
sti
aam
cwtl
inc
xor
or
fsubrl
jns
mov
sub
mov
lret
aad
pop
out
out
inc
adc
mov
loop
incb
cmp
loopne
add
fwait
pop
xchg
sub
jge
movb
insb
jge
cmp
dec
sub
loopne
mov
jmp
lock
outsb
outsb
outsb
outsb
test
pushf
xchg
pop
out
jo
aaa
jne
movsb
leave
std
insb
outsb
outsb
movb
aas
or
mov
mov
adc
dec
in
mov
jnp
add
dec
pop
push
mov
mov
xor
shl
mov
out
notb
ljmp
shl
pop
out
out
mov
cld
mov
xor
and
iret
out
ds
or
jae
insl
xchg
inc
dec
cmp
int
ss
ror
xor
icebp
push
push
jbe
jmp
pushf
int
inc
outsl
pop
insb
jmp
ds
fisttpl
lret
in
out
int3
adc
dec
pop
sti
pop
or
fwait
push
rorl
pop
jae
cmpsb
jbe,pt
cmpsl
scas
inc
mov
out
out
testb
test
push
out
out
add
hlt
ret
ret
mov
loopne
out
out
xchg
inc
adc
mov
xor
fisttpl
and
mov
xchg
ss
jl
mov
mov
loopne
or
icebp
sub
pop
icebp
or
repnz
or
adc
jo
cmp
clc
jb
jp
add
lods
out
pop
imulb
pop
into
orb
outsb
outsb
outsb
outsb
mov
pop
or
add
outsb
outsb
pushf
adc
inc
jo
rcrb
mov
ret
jae
cmp
mov
push
shl
mov
mov
jp
outsb
int3
adc
add
aam
sti
jge
imul
sbb
cmpsb
adc
mov
bound
jae
jae
mov
xchg
xchg
mov
or
inc
lods
sub
cmp
inc
pop
or
loope
mov
xor
test
fwait
fstpt
pop
mov
push
jl
lds
inc
add
fsubl
xlat
jp
loopne
fisubrs
adc
jae
jae
fidivs
jae
addr16
gs
dec
jae
rcrb
and
xchg
aam
shlb
dec
ret
mov
movb
imul
cmpsl
std
xor
idivb
sbb
fcoms
pop
out
out
cld
sarl
jae
mov
ss
out
jne
out
mov
or
xorb
sbb
outsl
mov
jle
and
dec
mov
cs
clc
lret
dec
mov
scas
or
repnz
shl
mov
fwait
fwait
fwait
or
mov
enter
mov
fwait
fwait
fwait
xor
cmp
test
js
lcall
pop
out
out
push
les
es
mov
pop
push
add
cli
mov
iret
cmpsl
iret
adc
inc
ljmp
divb
andb
sbb
out
and
add
xlat
fs
pusha
in
jg
fwait
fdiv
imull
push
xor
mov
aad
cmp
lods
or
xchg
pop
icebp
pop
arpl
out
pushf
xchg
sbb
add
fisubl
ficomps
add
movsb
into
push
into
int
pop
in
and
int
insl
xchg
mov
aam
cmp
mov
in
mov
loope
mull
insb
lahf
iret
lret
dec
or
pop
out
es
sahf
aaa
aaa
aaa
std
mov
adc
test
sbb
shrb
fidivs
mov
mov
mov
int
popa
push
xchg
arpl
adc
lods
in
insl
xchg
xchg
mov
aaa
or
pusha
sub
jne
cmp
imul
lock
shll
out
mov
inc
jbe
mov
cmp
push
gs
inc
jg
insl
sbb
or
aaa
aaa
aaa
mov
jbe
mov
aam
in
add
ss
pop
out
jns
pop
push
rorb
mov
jae
fdivrl
mov
in
jae
jae
mov
std
xor
sub
insb
add
int
xchg
inc
mov
rolb
fwait
mov
enter
pop
sbbb
fwait
adc
out
add
dec
xor
inc
sbb
int
jne
jne
fwait
mov
sub
mov
and
rep
mov
sbbl
divb
test
inc
inc
adcl
mov
lds
lds
mov
movsl
sub
fldenv
fwait
fwait
push
adc
jge
fwait
fwait
fwait
cwtl
ss
clc
jbe
andb
fwait
lret
test
inc
test
movsl
xor
mov
stos
in
pop
sbb
sub
pop
xchg
sbb
mov
pop
mov
out
insb
pop
hlt
mov
add
mul
adcl
call
mov
cli
int
in
in
gs
int
int
or
mov
mov
lock
jmp
adc
cs
popa
mov
std
or
daa
xchg
clc
jbe
ficoml
pushf
sbb
lods
outsb
jb
test
pop
clc
lret
push
pusha
xlat
sti
add
test
fwait
fwait
fwait
fwait
and
inc
xor
xor
aas
fwait
fwait
fwait
cld
in
movsl
jnp
daa
test
push
mov
push
inc
pop
ficomps
call
cld
sub
inc
jbe
loope
sahf
and
jmp
adc
or
fs
movsb
neg
cmp
add
xchg
xchg
sar
fwait
fwait
jge
xor
push
mov
fwait
sub
lds
jecxz
jb
pop
cmp
ds
cmp
pusha
fdivrl
xorb
xchg
and
sub
cmpsl
fsubs
xor
fwait
xchg
mov
cmp
cs
iret
sbb
jns
mov
orb
clc
insb
xchg
fsub
in
pop
fimull
out
out
or
fnstsw
imul
mov
sbb
and
lods
int
int
roll
xor
aam
insb
sbb
loop
cmp
leave
lret
aad
pop
mov
addr16
aam
imul
loopne
mov
add
add
mov
xchg
cmp
add
nop
cmp
mov
jae
push
pop
lahf
or
mov
jae
and
sarb
push
sbb
rolb
iret
sbb
iret
enter
lahf
int
xorb
add
xchg
icebp
insb
out
cli
sbb
adc
icebp
cmpsb
daa
push
xchg
lods
mov
lret
mov
inc
mov
sub
into
xor
subl
jg
jne
inc
or
bound
jge
jg
jnp
outsb
roll
or
lcall
rorl
dec
xchg
in
and
test
loop
inc
mov
fdiv
pop
mov
int3
dec
xlat
adc
out
and
jns
mov
aam
jae
jg
test
mov
jmp
or
ficoms
adc
in
inc
add
fadds
lds
sbb
loop
and
outsl
jecxz
rorb
cmp
in
xchg
adc
outsb
xchg
shll
loopne
pushf
add
cmc
push
adc
mov
cmpsb
in
dec
jne
test
mov
iret
out
adc
out
pop
mov
cmc
and
ss
aas
sti
pop
test
cmp
add
xchg
repnz
push
adc
mov
addr16
push
aas
jmp
lahf
int
push
or
mov
insb
stos
mov
fcompl
repz
mov
add
cltd
cs
mov
or
cmp
nop
cli
fsubrl
dec
xchg
js
out
imul
int
push
cwtl
xchg
scas
cmp
mov
ds
iret
fld
fimuls
mov
or
and
scas
sbb
or
cli
lahf
and
mov
lcall
pop
adc
pop
pushf
push
test
lods
fstpl
mov
push
jl
or
sahf
sbb
or
xchg
adc
pop
mov
mov
push
mov
xchg
cs
data16
cs
stc
fisubrl
mov
mov
push
fsubrp
pop
and
scas
xor
outsb
scas
clc
fabs
aas
mov
mov
mov
pusha
outsb
outsb
outsb
outsb
fs
icebp
jp
orb
xchg
and
jp
addr16
or
pop
inc
sub
loop
sti
or
scas
push
in
ljmp
mov
or
cld
mov
aas
clc
insb
outsb
lahf
outsb
or
es
dec
ds
inc
jae
out
ret
test
mov
in
test
fadds
fsubrs
sarb
fwait
mov
pop
jne
stc
das
mov
add
mov
out
pop
sub
in
sti
xlat
push
xorb
sbb
fnsave
jae
pop
xor
inc
std
and
dec
int
int
ret
add
icebp
and
sub
adc
mov
cld
dec
mov
idivb
sub
mov
icebp
jp
call
ror
inc
pusha
aas
jns
mov
xlat
jb
jae
jo
cmp
lock
jbe
dec
xchg
es
cltd
push
lods
out
test
int
and
std
fiaddl
jl
ret
lds
sub
jae
loope
nop
out
mov
notb
jnp
cmp
gs
dec
inc
push
dec
mov
outsb
outsb
scas
jp
jno
je
add
sbbl
int
mov
rorb
jmp
add
out
out
sub
adc
add
jbe
mov
inc
push
repnz
cmpsl
add
cld
or
add
je
pop
div
pop
mov
sbb
jns
sub
paddusb
mov
lods
movsb
in
repz
std
loopne
cmc
fdivrl
adcb
or
mov
xor
inc
fildl
jnp
mov
mov
ljmp
pop
mov
clc
pop
icebp
mov
push
scas
pop
mov
pop
out
mov
push
jle
psubusb
add
insb
push
push
and
sbb
or
cmc
dec
lahf
int
shll
mov
jmp
and
jp
hlt
and
mov
stos
mov
iret
divb
pushf
dec
inc
mov
sbb
adc
xor
jp
or
js
enter
add
icebp
xor
insb
divb
in
push
cmp
pop
pushf
mov
out
out
outsl
or
aas
sub
jl
jne
lret
jecxz
xlat
out
cs
pop
add
mov
cwtl
sti
fnstcw
stos
dec
adc
in
in
addr16
mov
xchg
ret
test
cmp
ret
int
jns
scas
xlat
or
push
in
or
dec
sbb
loop
push
mov
adc
cmp
xchg
or
sbbl
hlt
in
clc
jge
sbb
movsb
sub
adc
jne
fs
sbb
jb
andl
push
lahf
in
ja
pop
dec
pop
inc
out
adc
and
ret
jae
jae
dec
mov
mov
int3
jle
inc
pop
push
and
jb
aas
in
jecxz
cmp
insb
mov
test
lret
and
pop
decl
dec
ret
cli
pop
pop
lahf
int
dec
xchg
or
fldenv
insb
inc
jmp
adc
lahf
add
adc
aam
cmpsb
pop
ja
pop
pop
test
cmp
or
stos
cli
mov
jg
jae
mov
iret
adc
test
out
xor
jae
in
ja
stc
in
and
aaa
ja
test
hlt
pop
add
decb
mov
jmp
cmp
mov
leavew
adc
push
push
je
insl
cwtl
push
inc
daa
mov
sub
xchg
pop
mov
fmull
inc
test
out
int3
popa
outsb
aas
fucomi
clc
pop
inc
adc
jbe
inc
loop
aaa
sbb
idiv
jl
outsb
outsb
int
inc
shll
dec
push
push
in
lcall
test
and
push
in
sahf
fcmovnbe
cld
in
in
jmp
cmp
xor
mov
icebp
into
or
xchg
add
ror
mov
pop
fdivrp
mov
dec
jae
jae
mov
mov
popa
cltd
outsl
call
add
jne
cmp
jbe
std
jl
and
push
cmp
pop
mov
imul
jecxz
mov
ret
ja
xlat
cli
sbb
fmuls
ja
sbb
mov
inc
mov
daa
add
jb
int
in
pop
fdivr
arpl
inc
rcll
nop
inc
add
sub
xchg
repnz
sbb
cld
call
and
or
in
and
mov
adc
jns
lock
cmpl
hlt
xchg
in
sub
pop
pop
xor
dec
cmp
mov
jl
int
lahf
leave
mov
jmp
xor
iret
jp
cmp
aas
jle
pop
push
outsb
outsb
outsb
out
push
lret
insl
pop
jno
pop
das
fcomp
jmp
loop
xchg
fs
outsb
outsb
bound
mov
dec
mov
pusha
std
or
push
outsb
outsb
js
xor
les
mov
outsb
outsb
outsb
mov
and
loopne
xchg
clc
inc
in
pushf
mov
test
int
add
jecxz
pop
mov
test
fdivrl
lahf
sarl
mov
inc
push
andb
rcll
repz
cmp
cmc
sub
push
sar
scas
lock
loopne
loop
clc
pop
cld
iret
cmp
addr16
xchg
fdivrl
std
stos
pusha
jbe
out
clc
outsl
xor
clc
insb
cs
daa
call
mov
in
xor
dec
inc
mov
push
dec
jae
ret
pop
rol
in
sbb
shlb
jae
mov
and
mov
or
cmp
fstp
arpl
dec
xor
and
pusha
pop
cmp
inc
loopne
xchg
sub
fsubp
idivb
push
mov
cmp
adc
iret
mov
stos
into
dec
jbe
dec
cmp
out
cmp
cmp
inc
in
lods
or
out
out
pop
xchg
sbb
lods
or
out
scas
adc
in
pop
jne
mov
ds
cltd
outsb
outsb
iret
into
aaa
test
orb
or
outsb
ja
push
mov
adc
jmp
mov
sarb
and
fisttpl
repz
cmp
outsb
outsb
outsb
outsb
es
hlt
cmc
lcall
mov
xor
cmpsl
cmpsl
sub
aam
aaa
aad
mov
and
and
aaa
aaa
aaa
aaa
shl
int
in
pop
push
xor
mov
sbb
jo,pt
sub
imul
aaa
aaa
ja
mov
pop
mov
push
outsl
negb
adc
lret
enter
out
xchg
cltd
adc
ficoms
sub
in
mov
hlt
jae
shr
adcl
xor
in
ret
inc
jecxz
jae
or
adc
aad
mov
push
pop
inc
push
loope
testb
test
ret
rcll
adc
lds
mov
jl
clc
mov
lret
int
loopne
loopne
in
sbb
js
fdivl
or
std
mov
faddl
imul
mov
jae
jmp
sub
adc
roll
ja
dec
into
inc
movsb
cs
mov
out
push
jnp
xchg
jmp
int
int
std
mov
fsubr
test
fmul
adc
pop
inc
add
mov
insb
out
fmul
insb
lea
push
sub
xchg
lcall
and
or
iret
je
shlb
fs
mov
mov
push
aad
out
adc
dec
out
scas
push
push
sub
lods
divb
jae
or
fldcw
es
push
sub
inc
cmc
cmp
in
or
and
ds
mov
adc
loope
cmpsb
mov
mov
testl
icebp
out
mov
nop
testb
inc
imulb
or
mov
xchg
enter
iret
out
out
shlb
andb
pop
or
aas
push
add
gs
cmp
int
adc
jecxz
push
daa
rcl
sbb
push
or
fwait
or
pushf
xlat
xor
int
in
xchg
pop
insb
insl
adc
adc
mov
arpl
imul
stos
sahf
cli
dec
out
out
jno
mov
ljmp
out
push
mull
subb
fimull
sahf
cli
int3
cmp
xor
int
int
ja
mov
shl
cltd
inc
xor
es
mov
xor
aaa
pop
jge
ljmp
push
nop
push
sarb
aaa
add
imul
mov
ss
aaa
jnp
and
cmc
jle
std
out
xor
and
mov
pop
jl
jecxz
rclb
jp
mov
dec
aam
adc
into
cmp
aaa
mov
fnstsw
sbbl
es
call
aad
cwtl
cli
fidivrl
add
mov
mov
out
out
loop
sbb
ds
popa
mov
push
cmpsl
jno
inc
cmpb
sbb
and
sbb
push
or
jbe
xorl
outsb
imul
out
rolb
sub
mov
insb
es
pop
or
dec
out
aas
adc
jnp
ficompl
imul
jmp
xchg
xchg
or
adc
pop
jl
push
jl
int
sti
addr16
xor
sub
sbb
mov
pop
xchg
js
test
jae
jae
mov
and
adc
mov
lar
int
jae
mov
je
ja
jp
inc
mov
int
cmp
sbb
xchg
mov
inc
ds
mov
xor
xchg
jge
jg
sti
fdivrl
pop
subb
push
adc
jae
pop
xchg
movsl
jle
test
xchg
fisubrs
fbstp
cmp
add
xchg
inc
iret
out
mov
inc
rorb
jge
iret
int
pop
sub
xchg
out
push
jge
addr16
ss
cmp
jmp
dec
mov
mov
inc
rcl
test
jae
sti
push
fnstsw
add
repz
scas
mov
push
stos
push
aam
test
daa
test
mov
jmp
in
xchg
lcall
fcmovne
lods
es
divb
mov
in
addl
out
mov
popa
or
xchg
xor
adc
out
mov
mov
lret
out
pop
adc
dec
pusha
in
bound
fst
pop
pop
pop
loop
xchg
mov
mov
adc
jl
dec
idivl
cwtl
clc
shlb
push
mov
adc
jae
fdivrl
aaa
aaa
cmp
xor
es
lret
fmull
jnp
jmp
rorb
in
das
call
mov
out
leave
fadds
iret
int
cli
fwait
jp
sub
outsb
cs
cmpl
lds
imul
jbe
rclb
jl
mov
out
sahf
fs
loop
jns
pop
xor
mov
mov
mov
sbb
test
mov
movsb
jp
cli
loop
sub
lret
adc
loopne
movsl
xor
ds
outsl
jne
add
mov
stc
add
in
movb
lcall
pusha
push
jecxz
cs
stos
repnz
xor
cmc
mov
push
pop
mov
sub
js
outsb
sahf
sbb
sub
xor
lods
and
iret
out
lret
out
and
loopnew
or
daa
cmp
imul
data16
pop
dec
push
inc
test
jecxz
mov
pop
dec
jl
faddl
mov
fcomps
clc
adc
cld
or
and
out
mov
cmc
outsb
lahf
fwait
fwait
jl
mov
push
mov
mov
in
pop
sbb
mov
insb
fsub
out
jl
jbe
mov
repz
inc
clc
or
adc
pop
mov
dec
sbb
jae
ror
sub
lods
cmp
sbb
movsl
lods
and
push
orb
fcompl
hlt
mov
outsb
cmp
cmp
mov
or
inc
dec
int3
jg
ds
inc
test
fisubs
xor
mov
mov
sahf
fwait
mov
cwtl
cmp
xlat
mov
push
in
movsb
mov
movsb
dec
jo
xchg
aam
aam
call
stos
xchg
add
lods
pop
adc
pushf
shl
mov
jbe
inc
sbb
mov
pop
pop
ret
mov
push
jge
iret
rorb
jmp
mov
fsub
ljmp
daa
loop
shl
sub
push
jns
fs
push
xor
sub
fldt
out
xchg
jne
cmp
hlt
add
shll
cld
cmpsb
cs
mov
pusha
jp
aam
push
mov
lods
aaa
lret
out
ljmp
fs
das
test
pop
iret
insl
gs
inc
test
jno
pop
add
ret
out
mul
loope
cmp
jb
int3
dec
in
adc
out
fwait
out
mov
xor
and
cld
rolb
nop
ret
int
in
popa
mov
jp
sbb
jp
xchg
add
mov
loope
loopne
dec
loop
movsb
jge
or
jns
xchg
nop
js
cmpsl
jle
lods
cmp
stos
outsb
jno
push
icebp
out
data16
enter
mov
loope
lea
cli
sbb
push
sub
xchg
scas
xchg
sahf
test
cmp
add
mov
scas
ficoml
movsl
push
lea
testb
outsb
outsb
outsb
outsb
ret
sub
mov
jecxz
xor
outsb
outsb
outsb
outsb
xlat
pushf
or
in
jle
outsb
shlb
js
orb
std
mov
mov
mov
addr16
out
push
cmp
hlt
mov
scas
xor
pop
mov
pushf
ds
pxor
and
insb
loop
orl
jae
ss
mov
dec
je
dec
sbb
ljmp
cmp
fxch
es
das
ds
mov
mov
flds
jp
lock
scas
or
aaa
out
les
iret
out
dec
cmc
dec
clc
xchg
fdivrs
outsb
outsb
sahf
ss
dec
pop
loope
pushf
lea
sbb
dec
mov
xor
ss
jnp
mov
sub
xor
mov
outsb
dec
jo
cwtl
xorb
insb
dec
dec
mov
inc
lcall
mov
lock
addr16
and
aaa
rcr
outsb
rorb
pop
loope
sti
test
shlb
out
or
je
pmaddwd
std
rolb
cmp
popa
xchg
fcompl
jne
jl
push
insb
inc
pop
pop
sub
clc
into
clc
mov
and
mov
iret
gs
pop
into
and
sti
pushw
dec
pop
sti
fsubrl
xlat
jecxz
xchg
pop
mov
repnz
in
jae
lds
pop
orl
push
mov
lahf
ror
int
int
ljmp
testb
iret
or
dec
pop
cmp
inc
adc
shl
add
dec
popf
push
jae
aaa
mov
mov
pusha
loopne
aam
and
sub
stos
mov
out
mov
push
cltd
xchg
and
and
inc
call
sbbl
pop
mov
int3
aas
test
fldt
pop
scas
insb
pop
and
fstl
xchg
aas
jnp
mov
sub
mov
loop
mov
pop
lea
push
sub
das
mov
outsb
outsb
outsb
outsb
pushf
mov
jnp
sub
das
imul
pop
out
mov
sbbl
lods
dec
jp
pop
out
out
jno
repnz
loopne
adc
sahf
or
jne
mov
sub
fcoml
adc
fdivrl
mov
cmp
xchg
cs
jl
out
pop
lds
sahf
mov
mov
cmp
mov
sti
gs
push
adc
in
imul
out
jae
jae
insb
ret
int3
sub
nop
cmp
adc
mov
sbb
jge
out
and
les
xor
stos
stos
adc
outsb
js
mov
sub
cmp
data16
xchg
mov
loope
mov
imul
dec
loop
scas
ja
outsl
addl
enter
mov
xchg
push
sahf
fwait
fwait
sub
dec
fdivs
jo
ss
jge
push
push
dec
and
cmp
out
std
lock
jp
sub
out
mov
fdiv
inc
repz
or
add
cmc
into
xor
out
xchg
clc
cs
sub
jl
into
rcr
mov
pop
jo
sarb
inc
pop
push
roll
fsubl
push
pop
bound
adc
out
std
repz
test
cmp
outsb
lods
sbb
sub
outsb
push
out
sub
jnp
mov
outsl
fildll
outsb
outsb
movsl
push
cs
lret
pop
sti
dec
fldt
outsb
int3
rdtsc
lret
sahf
mov
aad
mov
test
push
add
and
mov
loope
pop
pusha
fcmovne
inc
shrb
fs
movsb
mov
int
repnz
in
repz
out
mov
es
pop
mov
test
jmp
inc
add
popa
decl
mov
imul
jmp
adc
adc
push
pop
pop
lock
mov
jmp
cmpb
sahf
scas
mov
pop
fisttps
fstps
cmpsb
cmpsb
jg
lock
loope
cmp
sti
jbe
and
out
sti
dec
cmp
stc
lahf
in
jae
sub
jns
bound
sbb
jae
xchg
jle
inc
jmp
neg
es
mov
dec
mov
fisttps
pop
and
jno
sarb
lock
mov
mov
jecxz
add
jo
and
dec
mov
call
jb
mov
rclb
jae
lea
stos
inc
add
adc
repz
lock
pop
loop
mov
cli
jge
xor
sub
sbb
fldcw
outsb
addr16
fdivl
outsb
lahf
shl
xchg
hlt
mov
imul
icebp
repnz
inc
cmc
aaa
aaa
aaa
aaa
xchg
mov
dec
and
lret
cmp
aaa
aaa
out
int
pop
gs
pop
mov
sti
fwait
pop
push
loope
out
in
andl
arpl
mov
add
ds
mov
pop
es
std
sahf
xor
insb
mov
cmp
psllw
inc
out
mov
sub
aaa
mov
jae
aaa
fimull
leave
inc
shrb
mov
ds
aaa
aaa
cli
scas
push
popa
sti
inc
dec
adc
fwait
or
jae
outsb
inc
out
sbb
insb
aam
cmp
insl
fisubl
and
addr16
jbe
rorb
fldcw
push
mov
sbb
add
leave
xchg
outsb
outsb
outsb
aas
imul
int
mov
push
push
shll
jge
mov
decb
dec
fs
int
in
shlb
dec
jg
cmc
daa
mov
add
inc
and
out
sets
add
icebp
mov
lods
iret
inc
lock
shlb
mov
cld
insb
outsb
outsb
shll
jne
xchg
inc
icebp
mov
test
pusha
rolb
aam
insb
outsb
outsb
cs
mov
cmpsl
xlat
pop
sarl
aaa
mov
std
je
and
xchg
ss
aaa
les
or
cmp
lret
fcomi
inc
sbb
in
orl
cli
sahf
fwait
fwait
orl
mov
xchg
movsl
out
testb
xor
push
pop
std
jbe
mov
out
fcmovnu
sti
xor
inc
loop
sub
pop
mov
fs
push
jbe
test
aaa
aaa
aaa
aaa
mov
into
push
mov
cmp
ds
cmp
std
es
das
pushf
xor
cli
cwtl
mov
rorb
daa
pop
fdivrs
ret
outsb
outsb
sbb
mov
jae
or
idivb
in
cmpsb
jmp
or
sub
out
out
dec
sub
stos
mov
sahf
call
pop
mov
or
ret
fwait
pop
pop
sahf
cmp
xchg
leave
daa
outsb
outsb
outsb
outsb
rolb
loopne
sbb
lret
movsl
pop
lock
sub
ficomps
jmp
daa
mov
mov
jp
pop
mov
fisubl
dec
fcomi
in
jl
aaa
icebp
nop
inc
mov
dec
loope
fsubp
or
imul
sub
jl
sbb
mov
inc
imul
test
fwait
fwait
fwait
xchg
roll
dec
add
popf
xor
mov
idivb
sbb
out
in
les
ds
add
and
aaa
push
cmp
in
ss
dec
aaa
or
stos
inc
hlt
insl
mov
inc
jecxz
jge
and
pushf
pop
cmc
add
aad
sub
outsb
outsb
mov
cmp
dec
and
cwtl
push
jmp
repz
repz
notb
push
ret
xor
js
hlt
xchg
rcr
es
fwait
fstpt
cmpsb
add
cltd
adc
xor
fwait
fwait
inc
sub
adc
cmc
imul
fwait
fwait
fwait
in
and
rcrl
insl
mov
fwait
jle
fwait
jecxz
add
inc
inc
mov
arpl
in
or
ret
dec
and
int
xorl
cmp
aas
test
add
mov
loopne
sahf
sbb
pop
mull
jne
lock
lcall
popl
fnstcw
cmc
filds
lret
mov
mov
int
push
stos
dec
sub
sbb
aaa
aaa
aaa
aaa
lods
dec
mull
push
xorl
xchg
jbe
add
aam
pop
icebp
and
push
and
scas
jae
mov
loop
push
scas
lock
in
sub
push
aad
lods
arpl
lock
cmp
fdivr
insb
loope
inc
jo
pusha
pop
push
xchg
ja
jae
mov
mov
or
add
stc
nop
sahf
push
mov
mov
inc
pop
mov
pusha
sbb
sub
fprem1
dec
xchg
mov
outsb
das
scas
ss
mov
rcll
pushl
jge
pop
out
push
les
lea
jae
int
aad
sub
nop
push
inc
jle
out
addr16
xchg
adc
push
popl
sub
sub
fcompl
mov
dec
rorl
jle
cmp
xchg
aaa
push
out
push
adc
int
in
addr16
dec
addr16
dec
mov
shl
out
iret
das
dec
sbb
pop
push
inc
les
sub
stos
iret
int
aaa
dec
xor
or
or
jmp
clc
jns
ds
mov
mov
insb
lods
dec
stc
rcrb
das
mov
ret
mov
ficompl
out
jl
add
aaa
ja
cmp
pushf
popa
insb
outsb
scas
clc
fcmovbe
insb
cmp
out
cmp
push
push
add
ret
out
push
mov
xchg
cmp
gs
das
ret
mov
jecxz
add
cs
aaa
fwait
out
inc
mov
xlat
aas
sbb
rcr
xor
pop
repz
jmp
xchg
xchg
fwait
out
repnz
inc
movsl
sub
inc
pop
andb
cmpb
add
push
ret
test
add
iret
or
dec
test
cmp
testl
ja
adc
in
cmpsb
push
lds
in
mov
addr16
iret
pusha
mov
in
gs
mov
add
pandn
inc
sahf
jno
sbb
addr16
sbb
scas
or
or
nop
shr
mov
addr16
inc
or
rorb
sahf
mov
jbe
mov
jnp
cmp
inc
inc
int3
push
rcl
jae
mov
mov
imul
pop
cmc
push
out
xchg
add
jle
pop
hlt
test
xor
mov
ljmp
push
dec
out
pushf
vcvtpd2dqy
cmp
cld
cmp
iret
sub
fwait
mov
adc
clc
pop
sub
stos
jmp
dec
cmp
jnp
ds
or
pop
add
sub
stos
dec
stos
out
mov
aaa
pop
arpl
leave
and
jge
sti
sahf
xlat
sbb
cmp
daa
sahf
mov
imul
dec
xchg
jge
add
xchg
rolb
pop
ja
mov
lahf
cmpsw
lods
in
mov
mov
cli
dec
xchg
lock
and
repz
jno
mov
mov
mov
test
mov
mov
sahf
dec
pop
test
test
mov
lahf
xor
int
int
fistps
xor
cli
lret
int
in
mov
inc
fstpl
loopne
inc
sub
hlt
bound
inc
icebp
inc
mov
dec
rcl
in
jae
aad
rorb
adc
pop
xorl
xchg
dec
sub
sbb
mov
xchg
aad
lahf
or
xchg
cmp
push
pop
mov
stos
jmp
out
cmpsb
add
inc
mov
or
jns
cwtl
stc
or
mov
icebp
jns
fcompl
xlat
and
stc
pop
jge
fwait
sbb
add
pop
int
pop
cltd
inc
sarb
aaa
aaa
out
enter
pop
pop
mov
enter
pop
fstl
cmc
in
fdivrl
outsb
movsl
xchg
clc
pop
jne,pt
sbb
jecxz
ret
mov
xchg
int3
orl
scas
clc
mov
rolb
pop
and
push
jl
icebp
insb
cwtl
jno
xchg
and
mov
ljmp
push
and
fs
test
iret
pop
das
lods
les
and
outsb
jg
das
cs
fistl
es
fwait
imul
sar
sti
dec
mov
xchg
lock
or
icebp
test
xor
or
in
int3
or
push
xchg
mov
std
jle
mov
and
mov
ds
test
adc
jle
sbb
or
push
cmp
ds
fiaddl
pop
int
int
add
test
mov
sub
lods
mov
int
adc
lock
ret
mov
xchg
xchg
jg
dec
mov
int
in
xor
test
pop
out
mov
mov
int
sti
or
scas
mov
adc
jge
clc
push
pop
ds
aaa
aaa
ja
inc
cli
xchg
or
push
or
mov
jae
jge
mov
jb
inc
xchg
insl
dec
mov
adc
scas
mov
into
xchg
ret
inc
int3
jnp
arpl
pop
ret
je
push
outsb
mov
pop
mov
notb
hlt
jle
xchg
or
xchg
or
out
jp
mov
pop
push
pushf
aas
push
push
out
loopne
jle
mov
mov
pop
sub
andb
mov
out
xchg
out
rcrb
mov
sar
lds
fdivrl
leave
pop
les
lcall
lock
push
dec
inc
pushf
iret
int
sub
jle
cmp
in
adc
xor
mov
cmp
cmp
cmpsl
data16
jae
mov
pop
mov
outsl
in
jae
jae
xlat
xor
xor
sti
add
addb
int
scas
das
pusha
nop
movsl
lods
pop
sarb
jnp
lahf
mov
and
clc
fcmove
es
lret
fdiv
push
hlt
mov
rol
out
sub
pop
loope
fdivrl
mov
in
stos
push
xchg
mov
call
mov
out
pop
loop
push
fdivrl
cmpsb
xchg
push
mov
jge
jns
jo
cmpsl
out
test
mov
call
jo
pusha
push
mov
js
les
inc
inc
pusha
in
jnp
ss
aaa
aaa
sub
imul
push
dec
add
jle
rorl
push
in
stos
mov
pushf
or
scas
jge
xor
out
mov
cmc
nop
mov
mov
stc
fstpt
fists
das
dec
inc
out
loop
xchg
enter
mov
push
cmpsl
test
aaa
aaa
aaa
sahf
adc
inc
adc
aaa
aaa
aaa
int3
cld
sbb
inc
mov
lock
push
scas
cmp
mov
dec
aam
insb
jo
dec
sbb
outsb
cs
fdivrl
jbe
jno
mov
cld
insb
outsb
outsb
cmp
test
sub
pop
aad
je
scas
imul
jae
lods
xchg
mov
ret
jge
add
scas
fimuls
ds
fcompl
stos
mov
cwtl
cli
dec
mov
mov
jae
mov
in
or
inc
jns
out
out
iret
xchg
popf
icebp
mul
add
mov
inc
ret
pushaw
jecxz
push
pop
cmp
outsb
mov
mov
ss
loopne
pop
fdivl
sub
scas
out
sar
jle
or
xor
dec
mov
or
dec
orl
add
lds
lea
or
addr16
lahf
int
cmpsl
aam
adc
aaa
mov
fcompl
dec
adc
mov
pushf
adc
out
cli
adcb
js
les
enter
mov
xor
lea
decl
clc
pop
adc
repnz
or
push
xor
in
push
xchg
mov
sarb
pop
ja
xchg
jns
jnp
pop
mov
pop
loopnew
push
mov
in
in
dec
inc
sbb
ljmp
out
test
dec
int
push
ret
out
out
xchg
xor
adc
push
and
or
inc
incb
lods
stc
test
fwait
jle
cmp
lcall
fwait
fwait
into
cmpsl
jnp
iret
addb
adc
popf
mov
inc
pop
ret
fsubr
es
divb
out
sub
cmp
repnz
jp
std
cld
sahf
add
es
les
test
cmp
dec
nop
jb
inc
jbe
pop
mov
add
movsb
js
push
adc
xchg
fwait
fwait
hlt
cmpsb
mov
sub
fucom
int3
fiadds
adc
popa
and
test
iret
out
and
adc
iret
int
das
scas
std
scas
data16
mov
pop
lret
outsb
rcl
lea
js
sbb
fs
push
in
jae
mov
mov
repz
addr16
sub
jo
xor
test
in
mov
subb
jne
adc
xor
ljmp
mov
and
insb
xor
mov
pop
mov
int3
bound
clc
cmp
js
cmp
lock
enter
mov
shlb
gs
adc
mov
xor
mov
sysenter
dec
sbb
jmp
mov
jl
lock
mov
push
sbb
in
dec
adc
inc
aas
fwait
arpl
jg
mov
aaa
aaa
ja
sti
add
push
inc
out
jae
sbb
fsubl
stos
es
fwait
or
mov
cmp
das
and
cld
icebp
es
add
or
pop
push
and
pop
pop
imul
addr16
jecxz
jae
jae
and
daa
imul
ljmp
sahf
std
dec
clc
aad
jl
xchg
fwait
jl
jbe
jl
mov
ljmp
xchg
out
pop
movsb
add
insb
push
popf
mov
pop
loopne
test
je
cli
ds
inc
mov
adcb
test
adc
or
mov
decb
cli
adcb
mov
fwait
outsb
adc
repnz
nop
mov
push
fcoml
add
fstpt
dec
int3
clc
xor
clc
push
cmp
fadds
xor
int
adcb
shrb
js
rcrb
xor
aaa
aaa
std
xchg
ds
rolb
jecxz
and
xlat
jnp
pop
cmpb
outsl
push
inc
ret
in
dec
sub
xchg
cmp
jp
test
iret
int
scas
call
push
cmp
clc
adc
enter
mov
mov
jg
jmp
aaa
ja
in
jecxz
pop
fwait
pop
mov
sub
jle
fldcw
pop
mov
cltd
lods
cmp
out
mov
popa
dec
call
or
out
push
mov
out
jb
mov
mov
aaa
cltd
push
jp
out
stos
addr16
pop
xchg
mov
lock
das
sbb
sub
xor
subb
fmull
pusha
iret
push
stc
inc
iret
lcall
lcall
js
test
bound
aaa
ja
pushf
adc
in
jb
push
std
testb
pop
cmpl
shlb
sbb
outsb
outsb
outsb
jle
mov
mov
repnz
test
insb
outsb
outsb
jae
std
sub
push
jp
mov
push
popf
lock
out
out
lret
adc
repnz
mov
and
out
jae
scas
fistpll
aam
dec
out
subb
mov
clc
xchg
inc
mov
in
dec
jl
outsb
lea
or
mov
out
push
jns
mov
mov
stc
int
adc
addr16
iret
incl
in
or
fwait
aaa
aaa
ja
je
aaa
xchg
cmp
dec
fisubrs
jl
xor
js
cld
cli
dec
cs
faddl
outsb
outsb
outsb
outsb
push
icebp
lcall
jno
gs
outsb
outsb
outsb
outsb
imul
les
cld
insb
outsb
cmp
popf
ds
popf
mov
xchg
pop
in
cwtl
stos
mov
mov
aas
gs
add
dec
jns
int
jno
ds
aaa
aaa
ficoms
lods
push
pop
xlat
mov
fwait
fwait
sbb
sbb
stos
rorb
push
out
mov
jp
ljmp
dec
pop
aam
out
pop
sbbl
mov
mov
cmpsl
aas
fldt
or
xchg
or
icebp
jno
mov
jge
fiaddl
out
fidivl
idivb
shll
das
inc
adc
cmpsl
int
int
lods
and
inc
mov
xchg
jg
imul
adc
xchg
mov
mov
or
stc
sub
sub
or
daa
sti
xchg
dec
rcl
xchg
adc
int
in
addr16
lret
sbb
mov
int
int
jne
cmpl
jecxz
in
xchg
adc
cmp
fdivrl
jno
fwait
ds
loopne
xchg
sbbb
negb
push
mov
fisttps
pop
aas
fdivr
or
out
and
das
enter
pop
fcomi
sbb
jo
add
in
in
fidivrl
rorb
cmp
pop
or
rep
fildll
adc
fcompl
sbb
jnp
dec
jecxz
push
adc
xor
jbe
in
jae
pop
xor
cmp
inc
sbb
push
push
out
mov
scas
xchg
out
clc
inc
out
scas
mov
int3
sbb
lock
cld
insb
mov
mov
call
outsb
sbb
dec
or
movsl
hlt
mov
fcmovbe
xchg
xchg
cmp
pop
mov
push
out
xchg
dec
add
pop
mov
iret
out
sbb
and
loop
rcl
mov
mov
fdivrl
in
push
adc
adcl
mov
jmp
bound
cmpsl
pop
sub
mov
xor
sti
sbb
xor
mov
mov
addr16
ljmp
insb
pusha
arpl
out
out
aad
inc
sbb
add
imul
cmp
lds
sbbl
outsb
outsb
outsb
cmpsl
mov
lcall
stos
adc
outsb
pop
pop
xchg
sub
pop
xorb
call
icebp
aam
pop
scas
out
out
push
pop
inc
popa
jnp
cwtl
mov
out
out
jg
sub
inc
lret
fld
lods
fwait
fldt
in
out
jns
pop
incb
fmuls
xchg
sub
int
or
divb
pop
cmp
pop
push
lahf
aam
sbb
iret
out
cmc
shll
push
push
inc
je
jb
jae
jg
sbb
sbb
mov
dec
repnz
sbb
sbb
lahf
fwait
sbb
mov
lods
jp
outsb
aas
test
adc
in
lea
xchg
mov
std
jno
sahf
push
mov
filds
bound
push
mov
add
rcr
jg
mov
int
xchg
fcoml
or
addr16
mov
push
push
aam
mov
sti
dec
xor
sub
call
rorl
popf
sub
fadd
pop
stos
pop
cmpb
xchg
daa
pop
jbe
stc
adc
mov
rorb
aad
in
or
call
out
out
decl
int3
iret
fisubs
lock
push
out
or
test
sbb
mulb
cmp
cmp
mov
out
out
pop
insl
std
adc
cmp
fcmovne
cmpb
push
mov
sbb
lock
incb
sbb
fsubrs
mov
add
jne
scas
outsb
cwtl
loopne
bound
xor
sahf
mov
lea
aaa
aaa
aaa
in
addr16
test
pop
mov
aam
pushl
aaa
aaa
aaa
loope
mov
popa
jp
pop
mov
aaa
aaa
aaa
xchg
cmpsb
add
loop
xor
push
arpl
mov
sub
inc
aas
fwait
std
in
sub
pop
pop
xor
aaa
aaa
add
stos
roll
out
testb
xor
mov
mov
or
fcmovne
out
cmpsb
cmpsb
scas
mov
add
lahf
fwait
fwait
fwait
jbe
cmc
pushf
sbb
in
outsb
outsb
outsb
xchg
adcb
into
subb
sub
pusha
ds
call
mov
sbb
dec
jb
cmp
cmp
lock
sahf
decb
fwait
fwait
fwait
mov
shlb
ds
fwait
push
dec
into
sbb
mov
aaa
aaa
aaa
jge
cmp
dec
mov
pop
dec
test
add
aaa
aaa
aaa
sub
xor
rclb
popf
xlat
sub
jo
mov
stos
xchg
insb
fwait
mov
cmc
add
mov
inc
push
fadds
mov
sar
shl
daa
scas
jge
mov
pop
insb
xchg
fidivl
pavgw
cs
cld
test
int3
jb
mov
dec
jno
inc
mov
insl
jbe
inc
outsl
jle
fwait
fwait
fwait
fwait
inc
mov
imul
mov
cld
fsubl
outsb
outsb
outsb
outsb
xchg
or
testl
mov
mov
ds
cmp
cwtl
testb
aad
lock
pop
arpl
xor
clc
fwait
fwait
fwait
pop
adc
out
fadds
sub
inc
jl
outsb
lahf
pop
rorl
in
cs
adc
repz
addl
mov
and
cld
lcall
pop
out
lods
xchg
aas
xor
fstpt
pop
push
dec
imulb
scas
fld1
mov
sbb
mov
insb
popf
add
fdiv
mov
xchg
sub
xchg
sub
stos
cwtl
xchg
add
call
fs
ljmp
xor
inc
cmp
daa
and
and
xchg
xchg
jne
scas
iret
int
dec
movsl
sbb
mov
pop
cld
in
adc
ss
dec
xor
subb
and
iret
aaa
aaa
aaa
aaa
in
lret
fnstsw
fidivrs
ljmp
add
pop
dec
pushaw
cmp
in
addr16
sbb
pop
or
nop
pop
pop
popf
adc
xor
cs
jge
mov
nop
test
sub
sti
lret
insb
outsb
outsb
outsb
ret
cmp
orl
mov
jae
shrl
andl
mov
mov
sbb
mov
adc
mov
arpl
js
rorb
int
in
adc
dec
inc
fs
inc
es
ljmp
xor
je
out
iret
inc
lahf
and
out
data16
fcompl
push
and
pop
jnp
push
jno
faddl
inc
jb
adc
push
icebp
adc
insb
pusha
pop
or
mov
pop
mov
sbb
aaa
aaa
aaa
mov
sahf
mov
dec
dec
pushf
add
jl
lods
push
sbb
in
mov
int
in
jae
fs
insl
dec
dec
cmpsb
popf
xchg
mov
iret
mov
rolb
and
rorl
test
xlat
scas
push
mov
test
js
fbstp
and
pop
out
add
icebp
testb
int3
push
in
push
or
adc
outsl
pop
cmpl
pop
jmp
hlt
push
jp
push
loop
add
out
mov
inc
push
out
in
mov
xor
add
mov
iret
out
mov
xor
shll
aaa
cld
jle
push
stc
push
pop
add
insb
cmp
lcall
jae
das
dec
xchg
int
push
fwait
mov
iret
jbe
mov
cmp
in
test
pusha
push
inc
pause
mov
adc
scas
outsb
pop
insb
outsb
outsb
lahf
lods
xchg
bound
cmpsl
add
sub
shll
imull
inc
sahf
fwait
fistpl
mov
movsb
mov
out
or
fwait
fwait
fwait
fwait
jno
mov
push
nop
adc
fwait
fwait
or
stos
nop
les
dec
jp
outsl
mov
int
lahf
fwait
xchg
pop
pop
sbb
arpl
popf
movsl
lahf
int
lcall
cli
insb
scas
cli
mov
cmpsb
push
xor
aaa
mov
sbb
push
inc
jnp
inc
pop
pop
scas
clc
and
xor
xor
adc
and
cmp
add
lds
jae
test
shlb
jae
jae
mov
jp
cli
jge
aam
lods
sbb
jae
inc
enter
lock
inc
sub
hlt
arpl
sbb
xor
mov
mov
mov
cmp
adc
cmp
push
xlat
push
testl
inc
pop
clc
jp
fldl
push
jl
cmp
loopne
ja
cmp
insb
mov
stos
lea
pop
mov
sahf
cmpsb
inc
fdivrl
rolb
aaa
pusha
jle
or
xchg
inc
repnz
mov
pop
clc
xchg
add
push
sbb
jg
xor
aaa
aaa
aaa
aaa
sbb
xor
mov
ds
inc
sbb
test
xchg
idivb
sbb
sti
fdivrl
in
dec
sub
add
jae
cmpsl
xchg
sbb
mov
addr16
dec
fwait
pop
sahf
cmp
push
and
inc
xchg
mov
scas
mov
xchg
inc
cld
out
pusha
test
fsubrl
outsb
fmul
aas
sbb
jae
jae
pop
push
rcr
stos
xor
aam
sarl
movsb
leave
sbb
or
outsb
mov
lea
ret
out
neg
cli
insb
jnp
and
pop
pop
sbb
outsb
aas
test
or
imul
mov
cltd
cmp
mov
imul
mov
sbb
mov
cmc
jle
dec
pop
push
cmp
and
push
cld
add
dec
outsb
ja
mov
mov
jae
adc
xchg
mov
mov
jae
push
pop
leave
xchg
cmp
rcrl
addr16
test
xor
pop
fldl
rolb
add
inc
mov
shr
mov
out
jmp
xchg
cmp
jbe
shrb
adc
out
adc
mov
xor
inc
aam
fisttpl
lock
jmp
mov
add
fiadds
fcompl
fprem1
clc
adc
jmp
cmpl
and
call
and
mov
pop
mov
in
mov
movsl
or
push
xchg
mov
les
rclb
cmp
aas
sub
or
in
ss
aaa
ja
test
jp
scas
out
xor
add
insl
jge
add
fs
push
repnz
ficompl
je
ds
mov
fwait
xchg
int3
and
inc
loope
push
fadds
dec
lods
lods
push
test
sbb
mov
sub
pop
int
jae
add
je
mov
xchg
ds
call
out
xor
out
sbb
imul
aad
stos
sti
loop
jecxz
cmp
jae
adc
sbb
xchg
mov
dec
push
jo
xchg
mov
testb
js
or
repnz
imul
jae
shll
push
inc
std
out
aas
and
dec
pop
hlt
push
sar
adc
inc
imul
sbb
add
mov
das
call
shlb
jbe
imul
push
mov
pop
hlt
adc
push
out
enter
cli
and
jp
add
hlt
inc
adcb
sub
mov
test
inc
shr
sbb
or
ds
mov
pop
xor
es
pop
int3
into
add
push
adcb
cmp
call
popa
mov
jae
push
xor
cmp
outsb
popa
adc
into
in
mov
jbe
jno
push
sti
outsb
outsb
lahf
lods
sti
add
test
addb
icebp
xchg
cld
nop
jp
inc
outsb
push
sahf
cli
pop
fwait
cmpsb
push
dec
leave
mov
jo
sub
cli
pop
mov
pop
int3
inc
xor
xlat
aam
popf
cmp
mov
outsb
outsb
or
cmp
repz
jb
cmp
hlt
or
inc
roll
shrl
mov
fcmovne
out
pop
add
test
test
mov
cld
mov
or
cmp
jmp
jo
sbb
lea
int
int
jmp
daa
lahf
push
cli
sub
int3
sbb
iret
int
int
sbb
outsb
jo
mov
and
lds
popf
jmp
cmp
adc
sub
insb
outsb
outsb
iret
punpckhwd
pop
xchg
fldenv
rclb
das
neg
inc
out
loop
loopne
ds
fcompl
dec
rolb
add
push
insb
loop
imul
insl
aaa
ret
or
push
int
in
mov
shl
repz
int
loopne
pop
outsl
popa
or
pushaw
jae
cmp
stos
popa
dec
inc
jge
daa
addr16
sti
cmp
shrb
xor
imul
push
adc
mov
js
and
ds
sub
out
imul
inc
bound
scas
stos
xchg
jne
pop
fidivs
hlt
ljmp
movsb
cmpsb
cmc
call
in
and
or
ss
bound
adc
jge
mulb
pushf
mov
mov
out
sahf
shr
les
jecxz
aad
push
jo
add
and
punpckldq
mov
in
xor
out
fists
clc
inc
je
dec
mov
out
out
dec
and
inc
lahf
cs
out
out
outsl
xchg
nop
or
aaa
nop
loope
jnp
loopne
and
jbe
inc
pop
push
adc
pop
push
mov
cmp
scas
aam
lahf
in
and
std
mov
nop
add
in
sub
aas
nop
js
repnz
aad
in
addr16
mov
adcb
mov
xlat
dec
inc
cwtl
push
push
sbb
test
pop
inc
jle
sbb
hlt
sti
dec
jp
ljmp
pop
in
out
jae
leave
shufps
cmp
mov
sbb
movsb
das
and
dec
cmpsb
pop
mov
aaa
mov
flds
cmp
aaa
aaa
dec
andb
outsl
jl
fcomps
outsw
loop
fcmovne
sahf
mov
mov
mov
pop
outsl
mov
cwtl
frstpm(287
cmp
xlat
or
add
mov
dec
inc
mov
inc
pop
stc
sbb
mov
xchg
mov
lock
outsb
aas
or
sbbb
xrelease
mov
je
test
xchg
cmp
fwait
cmp
push
lock
push
push
out
xchg
cli
ds
test
cltd
loopne
mov
aas
bound
dec
push
gs
mov
jl
jb
clc
sub
test
jae
push
xlat
insb
cmp
jae
icebp
or
inc
sbb
mov
mov
aaa
mov
test
in
out
and
sbb
scas
outsb
outsb
ds
je
das
daa
pop
ret
test
outsb
outsb
outsb
outsb
mov
mov
into
pop
mov
outsb
outsb
lds
incl
mov
or
js
ja
dec
or
ja
insb
cld
mov
sbb
scas
pop
mov
pop
popf
ficomps
movsb
inc
mov
ss
jno
or
lea
mov
mov
mov
int3
dec
sar
sbb
das
jnp
cmp
adc
mov
jae
jg
andb
lock
ds
cmp
xchg
lods
pop
mov
xor
ficomps
iret
out
mov
nop
jbe
xchg
and
add
shr
ret
dec
not
insb
xor
int
int
mov
pop
dec
int
in
int3
fs
xchg
cs
and
xchg
adc
mov
xchg
testb
pop
divl
enter
shl
fwait
cmp
sbb
mov
mov
icebp
sarb
adc
cwtl
inc
or
mov
mov
ss
inc
inc
mov
ss
jle
mov
loope
or
out
idivb
dec
mov
inc
push
mov
setle
mov
mov
fcompl
ficompl
jl
jecxz
cwtl
std
std
ljmp
xchg
mov
in
fdivrs
push
cmp
outsl
dec
jge
or
outsb
scas
jno
push
fdivrs
jbe
arpl
and
mov
pop
loopne
or
pop
cmp
inc
repz
jns
adc
nop
loopne
shll
aaa
aaa
aaa
dec
adc
dec
mov
add
cmp
icebp
sub
sahf
mov
test
mov
push
push
jp
aas
sbb
add
xchg
add
mov
dec
ficoml
imul
popf
xchg
testb
mov
outsl
pop
js
out
scas
test
xchg
je
inc
into
jae
xchg
out
aad
push
or
and
popa
cwtl
jmp
test
inc
ret
int
mov
inc
shrb
out
lahf
int
push
ror
ds
jge
iret
test
enter
or
push
mov
mov
mov
bound
rorb
idivl
mov
shlb
lods
popl
or
push
push
call
push
lods
loop
sbb
addb
movsb
aaa
cmc
or
sub
or
into
adc
inc
jae
sti
jge
mov
clc
push
clc
in
pusha
test
ret
jae
pop
xor
icebp
and
rcr
shl
dec
jbe
mov
shlb
mov
dec
addb
jle
and
or
test
adc
xchg
pop
test
negb
dec
adc
add
sbb
cmp
sahf
pop
sahf
jae
jae
sub
repnz
mov
addr16
repz
dec
lret
fcompl
sbb
cmpsl
hlt
es
movsb
mov
push
shl
adc
mov
push
pusha
pop
xor
loop
pop
repnz
shrb
mov
inc
mov
scas
call
icebp
fisubrl
mov
push
fdiv
adc
push
xchg
ret
movsl
jmp
pop
add
ss
dec
xchg
mov
jmp
pushf
cmp
sbb
test
jle
pop
cmp
xchg
iret
xor
pop
jne
mov
mov
adc
pop
rolb
xor
cmpb
cmpsb
xchg
push
mov
cs
push
cld
imul
insb
and
add
mov
mov
in
aam
iret
out
mulb
lods
jbe
in
stc
push
ja
jns
js
loopne
insb
jbe
daa
mov
pop
cmpsl
mov
loope
cmp
out
dec
jge
mov
test
mov
add
jmp
js
mov
pop
gs
mov
lock
mov
jle
mov
out
mov
dec
mov
rcrb
adc
fcompl
les
push
adc
je
mov
jae
jae
and
xor
pop
aam
rcrb
fadds
stos
cmpsl
ficoml
cmp
inc
jbe
in
and
fistl
mov
or
lods
and
outsb
outsb
outsb
lahf
push
jae
jbe
stos
ja
in
out
xor
outsb
outsb
outsb
addb
gs
jns
aaa
push
jl
mov
aad
ret
push
out
andl
idivl
lods
stc
popa
jp
and
aaa
aaa
aaa
pushf
repz
into
inc
ss
popaw
add
aaa
aaa
and
stc
push
adc
jae
cmp
stc
xchg
mov
cmpl
in
add
test
ss
cli
cmpxchg
mov
test
je
adc
in
xchg
aam
push
mov
out
out
test
mov
add
in
jae
out
and
inc
xchg
mov
mov
mov
cmp
jle
aaa
aaa
xor
sub
push
jmp
push
test
fwait
sbb
push
push
xchg
and
cmpsl
sahf
fwait
sbb
repnz
xor
xchg
sbb
xchg
cmc
sub
add
pop
int
iret
dec
les
and
mov
fdivrl
or
mov
test
in
aaa
pop
jmp
clc
popa
movsbl
jo
adc
movsb
xor
outsb
outsb
lock
scas
std
sbb
sbb
sti
test
insb
outsb
outsb
push
outsb
out
imul
lret
mov
test
outsb
xchg
xchg
test
fdiv
mov
xor
mov
cs
ljmp
clc
sbb
cmp
dec
jo
mov
mov
pop
inc
dec
shll
test
loopne
roll
mov
xor
xchg
insb
push
xchg
inc
pop
out
add
fdivrl
dec
mov
dec
adc
dec
je
js
lock
mov
cwtl
mov
aas
test
add
cs
pusha
mov
data16
add
jmp
fdivrp
test
test
cld
lods
paddusb
pop
icebp
mov
mov
push
pop
lock
fwait
jmp
rcrb
mov
sahf
fwait
fwait
add
push
push
int
ljmp
mov
fstpt
jecxz,pn
outsb
outsb
psubb
fldz
push
fcmovb
daa
fisttpl
mov
push
jl
lods
sar
sahf
xchg
jae
mov
cmp
sub
aaa
aaa
aam
dec
adc
popf
in
and
mov
dec
jg
sahf
mov
mov
int
stos
dec
rclb
out
inc
and
jge
dec
loopne
aaa
aaa
aaa
xchg
jbe
add
lret
push
out
faddl
js
test
xchg
fwait
fwait
fwait
mov
jb
xlat
cmp
cmp
push
jmp
jl
sbb
cli
mov
push
push
fcmovu
pushf
addr16
clc
mov
jae
or
adc
or
out
cmp
lahf
int
inc
xchg
scas
mov
mov
ss
push
ds
or
and
ss
xchg
cwtl
jg
cs
mov
jae
fbstp
pop
pushf
out
dec
addb
sbb
sbb
push
ljmp
nop
inc
add
sub
add
outsb
cmp
dec
and
dec
enter
insb
outsb
outsb
outsb
dec
out
aaa
and
ja
fwait
clc
sub
mov
sti
das
sub
int
pop
sbb
mov
lods
mov
int
int
cwtl
and
outsb
jl
das
lret
iret
and
int
cmpsb
in
ljmp
rolb
out
mov
idivb
in
leave
mov
sbb
out
mov
cld
scas
loop
mov
popa
mov
or
cmp
fdivrl
and
lock
dec
adc
and
fsubrl
loop
mov
sahf
dec
loope
hlt
addb
bound
mov
notb
mov
paddsw
jae
jae
out
xchg
negb
ret
or
filds
std
sahf
fwait
pop
or
ds
shlb
adc
xor
xlat
sarb
ljmp
jge
aam
sub
fsubs
movsb
jle
aaa
sbb
push
xchg
outsb
std
xchg
dec
cld
insb
inc
cmp
xchg
dec
aas
mov
ja
neg
in
adc
fnstenv
jnp
jle
mov
push
sbb
int
mov
adc
scas
stc
pop
jo
mov
test
pusha
push
or
fnstcw
int
xchg
mul
or
sub
loopne
sti
mov
fsubs
pop
dec
adc
test
mov
sbb
daa
dec
fisubs
cmp
cmc
mov
push
fldt
mov
ret
cmpsb
xchg
pop
test
cmp
fwait
sbb
dec
inc
pusha
popa
xchg
cli
and
dec
mov
jo
inc
roll
mov
mov
inc
push
jp
sub
dec
xchg
jne
stos
pop
or
loope
scas
clc
fnstenv
dec
adc
adc
jo
shlb
outsb
outsb
push
stos
fdivp
pushf
ljmp
outsb
outsb
outsb
outsb
mov
bound
imulb
outsb
outsb
mov
pop
in
jnp
test
sub
outsb
outsb
outsb
outsb
xor
dec
shrb
das
iret
dec
clc
insb
outsb
push
nop
xor
add
aam
cmp
stos
hlt
fstpl
jbe
inc
xor
fwait
pop
add
push
scas
test
lods
sub
adc
adc
std
add
cmp
xchg
ret
ljmp
jns
movsb
mov
push
ret
stos
dec
into
sbb
ss
andb
sub
jae
iret
imul
dec
mov
mov
je
push
add
pop
sub
nop
sub
cmp
cmpl
sahf
add
enter
fwait
fwait
fwait
cmp
add
pop
xor
sti
clc
jl
sahf
fwait
and
cli
loopne
cwtl
sbb
ja
jle
cli
clc
lret
or
jae
out
gs
out
fwait
mov
test
aam
jge
and
mov
divb
mov
jae
xlat
push
dec
or
hlt
jge
cld
test
fldt
loope
jae
pop
jne
xchg
cs
aaa
aaa
mov
sahf
dec
aad
mov
sbb
dec
addr16
or
xchg
loop
imulb
das
mov
adc
leave
cmp
xchg
into
insl
xor
pop
jbe
mov
les
int
aas
lea
jb
xor
out
addr16
sub
cmp
adc
xchg
add
pop
ret
xor
xchg
mov
cmp
jp
aad
enter
loopne
sub
scas
orl
out
mov
pop
es
mov
movsb
iret
out
stos
insl
out
ret
mov
into
xchg
inc
mov
sahf
fistl
fidivrs
dec
sarb
mov
dec
mov
clc
lret
pop
fistl
mov
xor
xchg
adc
fwait
jo
inc
addr16
add
dec
fdivrl
aaa
aaa
xchg
xchg
mov
mov
mov
fcoml
insb
fchs
and
jne
sti
sbb
push
fwait
sub
pop
and
loopne
jae
jmp
outsb
cwtl
les
pop
cwtl
lahf
mov
ficompl
and
mov
and
lock
mov
ret
out
out
add
xor
push
push
push
mov
dec
cmpsl
sahf
inc
and
add
jb
jnp
push
push
mov
popl
inc
iret
out
mov
or
fbstp
mov
aas
fistpl
out
daa
repz
loopne
fnstcw
jo
mov
adc
inc
push
dec
stc
sbb
out
mov
pop
mov
int
dec
mov
mov
fistl
or
mov
jae
out
cmpsl
xchg
push
pop
push
jae
lods
lcall
inc
ljmp
outsb
outsb
cli
sbb
in
xor
xchg
adc
loop
jp
cld
insb
mov
mov
jmp
lock
scas
push
mov
pop
mov
push
jl,pn
mov
dec
push
ljmp
dec
push
icebp
ss
ret
lret
es
mov
lods
jae
sub
dec
sub
sbb
push
insb
out
out
add
add
ja
nop
mov
daa
adc
test
inc
push
data16
jl
ja
rorb
lock
out
aad
hlt
and
into
scas
mov
sahf
out
dec
aaa
jne
fdivl
xchg
jge
pop
mov
psubsb
xchg
adc
mov
mov
les
inc
aaa
inc
or
mov
std
pop
mov
fiadds
lds
ds
test
scas
pop
fldl
cs
addr16
jbe
sahf
mov
adc
jp
sub
popa
mov
or
or
testl
jle
pop
sub
iret
out
subb
add
es
jge
outsb
outsb
fimull
and
cmp
ss
icebp
popf
jo
movsl
jl
mov
std
icebp
nop
inc
dec
test
mov
aaa
aaa
aaa
aaa
enter
sub
mov
cmp
xor
lock
add
jno
push
popf
jle
iret
int
int
dec
mov
push
pop
mov
fyl2x
inc
pop
push
ljmp
outsb
out
xchg
fs
out
or
mov
out
adc
test
aam
jo
lret
std
pop
addr16
test
mov
aaa
aaa
jl
inc
mov
jmp
cmpsl
push
movsb
int3
mov
jle
dec
xor
and
sti
jle
ret
testb
ret
add
bound
sub
cld
into
int3
or
sub
mov
sub
pop
xchg
ds
jae
repz
enter
cwtl
ds
push
incb
loop
arpl
cmpsb
fmul
push
xchg
jae
rorb
ret
pop
jl
outsl
push
pop
rcrb
jne
fidivl
int
in
mov
cmp
inc
sahf
repnz
ss
mov
jecxz
lds
lret
cmp
jle
mov
clc
test
add
push
jo
jge
hlt
adc
fstps
negl
cld
testl
lret
ljmp
int
int
xchg
xchg
aas
es
push
mov
int
shrl
cmp
dec
outsb
outsb
jg
cld
mov
push
pop
insb
dec
dec
loopne
jl
push
push
cltd
divb
lret
in
sarb
dec
pop
xor
pop
fwait
sub
push
sub
push
in
dec
push
pop
sub
adc
in
arpl
pop
add
neg
inc
rclb
sti
in
mov
je
shlb
insb
aaa
mov
movsl
sbb
sahf
add
repnz
mov
mov
leave
aas
lahf
adc
dec
popa
push
jecxz
cli
xchg
mov
stos
outsb
outsb
outsb
outsb
mov
loopne
movsl
ret
dec
mov
adc
xor
xchg
push
movsl
pop
shrl
mov
sub
ret
dec
push
push
and
xor
outsb
xchg
pop
mov
inc
clc
hlt
mov
jno
and
push
call
sbb
aaa
aaa
aaa
aaa
push
lahf
mov
cmpsb
aaa
aaa
aaa
aaa
sub
mov
popa
sbb
push
ss
cld
mov
cmp
jae
lcall
xchg
mov
cmp
jae
andl
sahf
jae
xchg
cmpsb
lea
adc
outsb
outsb
cli
cmp
cmp
mov
cli
outsb
outsb
outsb
outsb
cltd
int3
xor
mov
push
outsb
pop
jp
jns
jb
je
fisttps
in
repz
loope
jae
jae
es
mov
inc
sub
in
imul
push
jae
shrl
lahf
int
ret
lods
mov
pushf
std
push
cmp
lahf
fcmovne
or
popa
lea
sbb
int3
sub
lods
mov
mov
shlb
sub
add
jp
rorb
ret
and
fcompl
lods
aas
mov
sbb
mov
fmul
mov
mov
mov
stc
fsubrl
xchg
pop
sub
push
xchg
fwait
adc
xor
jecxz
gs
jne
mov
or
fcompl
movsl
pop
sbbb
cmp
popf
fcmovb
jle
int
sti
fnstenv
push
dec
mov
arpl
push
int
int
test
pushf
dec
pop
and
stos
iret
int
nop
sub
in
sbb
out
ret
pop
jle
mov
dec
rcrl
lcall
int3
mov
pop
addr16
into
int
sbb
mov
push
inc
cmp
xor
cli
dec
loopne
out
push
jp
scas
cmp
jecxz
es
cmp
fcmovne
mull
aam
in
fsubs
hlt
or
sbb
nop
mov
mov
ret
in
sub
fld
mov
mov
pop
out
push
iret
int
fidivrs
dec
out
inc
jae
sti
shlb
xor
inc
mov
rcrl
and
cwtl
or
add
out
push
fdivrl
mov
in
outsb
lcall
iret
inc
loopne
addr16
fsts
inc
mov
and
sub
icebp
pop
mov
fwait
push
fwait
fwait
fwait
fwait
or
mov
scas
les
fwait
fwait
mov
or
lahf
jecxz
inc
add
test
mov
mov
or
pushf
inc
lahf
fucomi
mov
rorb
test
jns
ja
fdivrs
insb
outsb
pop
sti
dec
mov
fldl
sbb
int3
cmp
in
icebp
shlb
lods
jns
enter
loopne
int3
push
jb
cwtl
push
das
sub
popa
sbb
xchg
sahf
mov
push
das
pop
test
es
shll
mov
dec
push
icebp
lds
loop
aam
negb
fs
mov
in
xchg
cli
test
add
sub
and
mov
outsb
mov
xor
movsl
loopne
xlat
push
lods
push
inc
jl
pop
lret
sbb
pop
int
pop
dec
push
stos
stc
data16
dec
mov
das
sbb
icebp
dec
push
sbb
subb
pop
fxch
fsub
enter
adc
inc
or
es
out
jae
jae
and
sub
push
arpl
daa
jbe
inc
out
mov
es
out
das
pop
mov
adc
mov
or
scas
sbb
fucomi
daa
lock
pushf
daa
cmp
jg
aas
fwait
fwait
fwait
sub
jl
add
mov
outsb
sahf
pop
aaa
mov
mov
idivl
inc
add
fcmovne
idivb
jge
cmp
clc
or
fwait
fwait
fwait
mov
cld
aaa
stc
sti
scas
loopne
mov
fisttpl
std
or
jl
icebp
shl
std
mov
sahf
fwait
vminsd
mov
dec
fistpll
out
lock
addl
ss
das
inc
and
sbb
fcoml
add
dec
lret
testb
hlt
mov
add
cli
test
sub
add
adc
lock
enter
test
scas
lea
pop
test
inc
push
push
push
aas
mov
je
arpl
cmp
cmp
cmp
mov
sahf
push
pop
mov
mov
fwait
fstpt
push
cwtl
xor
adc
push
and
outsb
aas
pop
pop
inc
in
outsl
push
mov
xor
outsb
outsb
outsb
lcall
xchg
jecxz
cmpl
pop
sbb
mov
jne
cs
sub
sti
not
or
mov
roll
jae
jae
sbb
test
data16
sbb
push
pop
shlb
and
jnp
out
jae
jle
pop
insb
cs
jbe
sub
xor
jae
jae
and
fisttpll
pop
iret
imul
xchg
mov
aas
aad
loop
jae
add
sub
jl
aaa
push
cmpsb
add
xor
fcoms
adcb
push
insb
jbe
fdivrl
pushf
aam
jbe
xchg
std
add
xchg
push
inc
jle
push
jns
sahf
pop
fwait
fwait
mov
test
adc
or
cmp
pop
mov
fldcw
push
push
mov
mov
aam
rcrb
sub
dec
cmp
in
shrl
lahf
les
cli
imul
or
aam
out
mov
pop
mov
test
jae
jae
mov
mov
jne
add
or
fs
inc
ret
mov
jae
test
dec
adc
loop
jae
cltd
aas
sti
andb
out
xchg
sub
pop
scas
adc
jae
dec
and
push
fwait
loop
dec
faddp
lcall
push
push
xor
in
sti
xchg
mov
test
pusha
mov
fwait
fwait
fwait
fwait
repz
outsl
fsubrl
arpl
add
or
fwait
lds
pop
cmp
insb
stos
pop
sarl
or
mov
add
ret
push
inc
in
xor
sub
jnp
ss
mov
cs
push
cmpsb
lret
jae
xlat
ss
ss
lcall
in
repnz
cmpb
fistl
add
dec
cmp
fisubrl
inc
out
outsb
outsb
outsb
mov
or
imul
xchg
mov
and
push
aas
fwait
fwait
fwait
xchg
and
addr16
adcb
leave
pushf
outsb
outsb
outsb
outsb
insb
lods
pop
add
cmp
sarl
jge
jge
bound
dec
push
lret
ss
aaa
aaa
in
ds
repnz
scas
jp
jle
pop
dec
mov
stos
icebp
add
outsb
push
inc
movsb
data16
nop
fstps
gs
or
outsb
outsb
outsb
outsb
pop
in
push
test
lds
xchg
fists
outsb
outsb
sbb
mov
rcll
dec
jae
sub
inc
fdivs
jbe
pop
mov
and
push
sbbl
dec
sarb
test
cmp
cmpsl
insb
push
sub
insl
gs
fs
or
stc
or
pop
sub
add
jp
fiaddl
cmc
xchg
pop
lock
insb
clc
mov
test
mov
mov
outsb
nop
cmpb
fcmovne
sub
mov
insb
cmp
test
fwait
fwait
inc
fsub
push
nop
push
or
mov
sbb
cmc
jnp
mov
bound
sbb
js
loope
loopne
stos
push
nop
mov
and
lock
fdivl
iret
fimuls
cmp
jb
pushf
fldl
mov
mov
or
je
fstpt
inc
aaa
fwait
dec
orl
mov
or
testl
mov
xor
aaa
sbb
hlt
mov
arpl
mov
sbb
pop
aad
mul
insl
dec
andl
pop
js
push
ffreep
ret
dec
rclb
scas
mov
pusha
inc
dec
mov
ret
bound
xor
push
imul
addr16
fdivrl
sub
ud2
mov
adc
subl
dec
jg
sti
js
int3
fnstenv
sbb
mov
aas
test
jae
stos
ds
mov
add
push
call
adc
mov
mov
arpl
add
fwait
pop
xor
push
fs
mov
int
pop
mov
mov
sub
or
stos
mov
mov
inc
into
int
lahf
adc
pushf
inc
cld
sub
mov
scas
or
push
es
loope
mov
jle
daa
lock
ror
and
or
loope
cli
mov
fmull
stos
out
inc
fcmovbe
push
cmp
sti
dec
nop
adc
push
es
into
int
aad
fisubl
outsb
jb
movsl
pop
icebp
ds
rorb
and
aaa
mov
push
ja
shl
xor
sub
push
sub
fnstcw
pop
adc
cmc
mov
jns
cmpsl
out
jno
push
mov
xchg
or
mov
lock
pop
push
or
pusha
xchg
mov
inc
add
mov
sub
fadds
pop
or
xor
popa
push
fwait
fwait
fwait
fwait
bound
dec
mov
shlb
sahf
fwait
fwait
or
enter
adc
loope
sub
push
jbe
into
in
add
mov
lods
out
fcomi
test
sub
shll
aaa
mov
loop
mov
ret
cmp
ja
cmp
aaa
aaa
aaa
sbb
cmp
or
ss
aaa
test
xchg
movsl
dec
cmc
aad
sti
inc
lret
bound
xchg
sub
popf
fildl
mov
test
leave
push
mov
into
in
pop
add
jbe
cwtl
stos
lret
outsb
clc
aam
sub
xlat
in
or
iret
or
out
insb
outsb
outsb
outsb
mov
scas
push
ret
push
out
fxtract
leave
cli
mov
cli
adc
jl
int
lahf
clc
lahf
pop
dec
or
inc
stos
add
int
lock
jne
adc
in
jbe
sub
int
int
jmp
sbb
hlt
negb
test
bound
jecxz
fsubrl
xchg
ror
lret
or
int
xchg
jle
sub
cmc
xor
mov
rcl
dec
push
ret
hlt
sub
push
loopne
xchg
jl
push
ffreep
shll
inc
call
push
cwtl
rorb
lds
in
inc
std
insb
outsb
pop
sub
inc
adc
repz
jle
or
mov
push
mov
lahf
in
jae
inc
or
inc
dec
add
shr
cmp
aaa
aaa
xor
out
jge
popf
xchg
scas
test
cmp
fdivp
stos
leave
shll
outsb
outsb
cmp
sbb
mov
out
and
mov
mov
fldcw
xchg
pop
enter
pop
and
cmovbe
dec
lea
in
addr16
and
es
rcrl
cmc
stc
jl
stos
sbb
jnp
addr16
jae
inc
repz
pop
inc
int
int
inc
jnp
insb
std
or
or
xchg
jns
mov
mov
pusha
in
sbb
fwait
je
hlt
insb
clc
div
into
mov
test
mov
int
test
mov
cmpsl
stc
push
cmp
jns
adc
pop
aam
pop
add
insb
cs
mov
lock
xchg
mov
xlat
fsts
int3
in
inc
loope
outsb
aas
fwait
xchg
pop
push
loop
dec
jbe
lea
mull
jmp
divb
fmull
nop
icebp
sahf
out
jecxz
scas
rcll
sub
push
mov
fs
shlb
and
orb
dec
jne
sahf
and
vmwrite
cmpsb
notl
arpl
lcall
add
push
dec
jo
jae
movl
ret
fcmovb
mov
xlat
jp
push
mov
out
out
add
testb
jb
and
aam
adc
jmp
fs
or
int
jne
pop
xchg
pushf
sub
xchg
sbb
int
int
push
mov
int
repz
cmpsl
rcr
fdivrl
dec
test
inc
cwtl
jle
fcmovu
fsubrl
jns
stos
dec
and
fxch
outsl
fs
cmp
outsl
mov
mov
mov
fst
mov
or
outsb
js
fcoml
xchg
hlt
cmp
mov
adc
leave
pop
cmp
or
and
adc
out
jle
add
sahf
cmp
ret
mov
sbb
jge
pop
iret
mov
adc
scas
cli
mov
movsl
outsl
gs
mov
pop
imul
cmp
or
jp
popf
sarb
mov
icebp
xorl
divl
scas
int3
xchg
jmp
dec
decb
adc
int
adc
pop
repz
mov
sbb
xor
popf
fcmovne
addb
sahf
fs
push
sbb
leave
lret
sbb
mov
sti
andb
pop
dec
mov
aam
gs
pop
xchg
xlat
loopne
mov
out
out
adc
pop
adc
imul
out
push
loop
add
push
pop
test
mov
inc
cmp
push
mov
mov
mov
fcmovne
loope
ret
or
sbb
sub
gs
jae
rcll
pop
xchg
mov
sbb
es
push
or
idivb
outsb
pop
adc
cmc
mov
sbb
stc
cmpsb
or
and
xchg
arpl
mov
cmp
cltd
ror
mov
jmp
inc
scas
inc
popa
or
dec
lret
mov
mov
mov
cmp
lcall
das
jle
mov
sbb
stos
es
add
cmp
or
dec
imul
jae
cmp
push
xor
in
movsb
addr16
jo
outsl
jnp
push
mov
pusha
insb
movsl
push
xchg
subb
mov
mov
lea
jo
pop
pop
out
mov
arpl
xchg
jno
out
stos
fwait
xor
enter
lahf
ret
testb
jo
or
fadds
sbb
es
incb
int
int
data16
jno
mov
mov
movsl
fucom
and
pop
fnstsw
push
cli
xchg
test
cmp
pop
cmp
fcompl
into
andb
cs
int
in
addr16
add
xor
xchg
clc
mov
aaa
jl,pn
int
int
fstpt
daa
mov
lahf
ds
popl
movsl
arpl
icebp
adc
shlb
mov
insl
or
imul
sbb
bound
mov
adc
cmp
push
or
cwtl
loop
adc
jmp
fdivrl
out
sahf
mov
xor
sub
leave
test
aam
cmpsb
mov
xchg
iret
in
int
int
xor
mov
lret
outsb
outsb
outsb
aas
mov
jnp
js
inc
add
loop
mov
xchg
in
mov
insb
or
sti
in
mov
and
imul
jae
out
jmp
push
or
mov
mov
fldl
jge
iret
negb
add
repnz
xchg
pop
jae
mov
loop
gs
inc
aas
lods
andl
je
pop
test
dec
jo
dec
xor
or
fldenv
or
outsl
test
int
popf
dec
pop
jae
jle
dec
int
pavgb
xor
or
int
int
jmp
mov
int3
or
lock
xchg
mov
ss
pop
in
sbb
outsl
push
adc
sti
fstps
inc
pop
in
xor
inc
fcmove
int
in
sub
sahf
imulb
jb
cmp
sub
das
mov
jle
mov
inc
fldenv
pushf
clc
movsb
in
in
into
xor
fdivrl
sub
incl
daa
inc
adc
es
dec
mov
dec
inc
cmp
pop
adc
mov
inc
push
into
fists
pop
nop
jbe
test
ret
sbb
push
and
les
add
add
stos
js
or
xchg
mov
ret
scas
test
jno
loope
test
ljmp
cmp
pop
mov
mov
jae
mov
lea
add
lret
sub
daa
idivb
sbb
mov
pusha
loope
mov
out
inc
popf
cmp
bound
aam
mov
add
xchg
pop
adc
out
fwait
popa
sbb
cli
mov
int
int
adc
aas
or
cmpsl
mov
aas
rcr
mov
jno
iret
int
and
mov
lea
jge
push
fsubrl
cli
jmp
adc
xchg
scas
test
add
hlt
mov
sar
in
fists
fbstp
jle
fiaddl
les
std
mov
sbb
jbe
mov
dec
in
std
out
int
jg
js
movl
int
push
aad
xchg
push
add
push
add
inc
adc
ss
pop
call
sbb
mov
push
cli
sbb
sub
imul
imulb
imul
cmc
cmp
pop
jmp
push
fstps
and
cmp
loopne
sbb
or
xchg
fwait
fwait
loopne
mov
adc
movsl
repz
add
lea
outsb
and
xor
mov
in
das
lods
das
addb
rorb
dec
jns
aaa
aaa
aaa
bound
add
fldt
lock
adc
jp
dec
mov
cmp
push
jno
pop
call
daa
lret
cmpsb
ljmp
cld
insb
inc
mov
xor
popf
mov
test
and
int
add
out
mov
clc
dec
cmp
or
fbstp
enter
cmc
stos
stos
inc
shll
sub
aaa
aaa
sbb
in
or
fwait
adc
mov
add
mov
dec
cli
lahf
cmpsb
lahf
inc
mov
std
pop
xor
pop
sbb
xchg
lock
xchg
and
and
aas
in
addr16
insb
outsb
inc
xchg
push
ret
imul
leave
lahf
int
int
push
sub
inc
nop
mov
jle
add
xchg
jbe
or
call
pusha
or
outsb
aas
add
mov
xorb
push
cld
insb
aas
mov
jg
stos
xor
adc
mov
adc
jp
out
cmpsl
aaa
aaa
mov
jo
cld
add
and
ds
jecxz
rorl
push
je
std
repz
loope
mov
test
sbb
jge
pushf
cmpsl
hlt
sub
sbb
out
outsl
mov
ds
outsb
and
dec
mov
pop
dec
or
mov
jecxz
pop
js
inc
adcb
icebp
divl
add
gs
mov
loop
sbb
fdiv
sbb
xor
cld
inc
sbb
shr
fcoml
inc
ds
ss
cmc
fs
jo
andl
mov
stc
idiv
sbb
rorb
sti
inc
pop
or
in
jne
ljmp
cmp
mov
shrb
lds
mov
les
js
les
insb
in
add
jp
pop
fisttpll
fidivrl
fsubs
aaa
push
or
adc
xor
jg
mov
inc
in
push
lret
and
aaa
cld
insb
popf
movsl
pop
mov
sbb
aaa
aaa
aaa
or
fistpl
mov
push
pop
imul
test
mov
adcb
pop
add
mov
xor
or
jge
fucomi
es
jecxz
enter
xor
push
out
pop
bound
les
cmpsb
cld
outsb
outsb
outsb
clc
push
mov
nop
movsb
orl
andb
outsb
outsb
dec
mov
xor
mov
jl
or
jb
or
jle
popf
cli
es
mov
xchg
ja
sub
sti
fld
dec
mov
push
cmp
add
int
pop
adc
mov
aad
mov
xchg
and
or
fcmovu
testl
cmpsl
std
stos
push
xor
jo
test
mov
lret
jno
adc
clc
insb
outsb
out
ss
call
iret
out
xchg
xchg
jno
jne
imul
jae
and
inc
inc
sbb
ljmp
scas
or
adc
jns
sub
out
out
or
mov
inc
aas
outsl
movsl
out
out
nop
jno
ds
stc
add
aad
loopne
and
loop
popf
lea
mov
js
dec
adc
jge
divb
adc
adc
xchg
add
sbbl
jmp
pop
cmp
xchg
enter
push
lahf
movsb
out
stos
or
loopne
fwait
fwait
sbb
inc
jno
sub
cmpsb
ds
jbe
ja
fnstcw
and
shlb
adc
mov
mov
cmc
fxtract
sbb
inc
sub
rorl
jp
dec
fimuls
fwait
fwait
sbb
fisttps
xor
sub
cmp
dec
cli
mov
into
pop
mov
cmp
int
int
aad
addr16
mov
inc
cmp
add
int
int
pop
sbb
jne
cmp
or
inc
lahf
int
int
cmp
fisttps
push
cmp
iret
pop
and
sbb
outsl
jle
aaa
aaa
cmp
and
inc
pusha
js
fdivrl
imull
iret
pop
out
popf
or
push
shr
inc
jnp
test
add
or
sub
out
xchg
xor
cmp
pop
pop
fwait
jbe
fwait
fwait
fwait
fwait
ss
lock
leave
cmp
adc
push
stos
fcompl
mov
stc
sbb
sahf
hlt
and
mov
pop
jmp
cmpb
jp
sub
lahf
xchg
fs
mov
pop
js
cmp
jae
js
in
pop
jae
add
pop
cmc
out
jbe
ss
jae
jae
mov
lahf
push
aad
sti
in
nop
jge
jae
xor
into
xor
out
out
es
inc
pop
pop
jmp
cs
bound
cld
push
sbb
inc
pminsw
vshufps
popf
fwait
sub
outsb
mov
out
mov
sub
adc
add
imulb
jecxz
out
mov
repz
iret
lods
mov
pop
nop
cmp
push
pop
inc
and
xor
iret
xchg
mov
xor
mov
int
pop
mov
int
add
sbbl
pop
or
movsl
jl
add
cmp
fcoml
sub
int
ror
hlt
sbb
xor
mov
cli
dec
add
sbb
nop
out
inc
push
outsb
jle
xchg
out
popa
push
bound
add
fistl
outsb
int
add
clc
inc
std
and
xchg
mov
clc
xchg
cs
sbb
loop
or
mov
cmp
push
popa
call
inc
hlt
test
insb
in
mov
jmp
inc
pop
sbb
mov
xor
mov
ja
popa
mov
sub
or
pop
mov
ja
sbb
jb
test
in
scas
adc
pushf
movsl
cmp
aas
mov
in
shlb
jge
psubb
je
or
test
outsb
outsb
outsb
cs
inc
xor
stc
aaa
popa
sub
jae
inc
insb
outsb
outsb
outsb
xchg
pop
sbbl
fdivl
mov
add
es
cmc
fldcw
mov
repnz
aaa
mov
add
arpl
push
shlb
mov
or
aaa
aaa
aaa
aaa
push
jb
ljmp
loop
jle
xchg
or
pop
roll
int
addr16
sub
clc
sahf
popa
add
jmp
push
mov
int
xchg
push
data16
adc
call
jns
mov
in
dec
inc
xchg
stos
jecxz
data16
mov
xchg
ret
out
enter
ss
out
out
pop
cmp
push
xor
pop
push
sbb
mov
or
mov
pop
scas
cwtl
int
mov
add
cmovae
clc
test
inc
pusha
aam
sub
iret
out
sbbb
rcl
add
jne
cmp
mov
dec
mov
mov
repnz
je
pusha
test
clc
push
cmp
pop
pop
adc
add
push
fldcw
adc
push
adc
hlt
subb
lahf
movsb
sahf
in
add
bound
popa
scas
outsb
imul
int
mov
lds
test
xchg
jl
pop
jmp
cs
pop
add
adc
jo,pn
dec
out
cli
ror
pop
add
or
or
outsb
pop
pop
xchg
cmp
mov
shll
mov
jbe
sub
aad
or
scas
pop
out
bound
hlt
popf
jbe
or
in
add
push
testb
inc
and
out
jbe
sub
iret
int3
sub
mov
int
mov
or
dec
sahf
xchg
int
and
stos
xchg
mov
mov
mov
mov
xchg
push
fdivrl
aaa
lods
push
arpl
insl
mov
sub
push
fs
sti
fsincos
jnp
repnz
xchg
push
int
in
addr16
push
cli
mov
shrb
mov
pop
test
imul
lea
repz
js
jae
sti
mov
sar
dec
inc
pusha
mov
sub
repnz
pop
cltd
sti
cmp
aas
dec
mov
jecxz
lods
jbe
in
addr16
sbb
mov
frstor
or
xchg
xchg
and
cld
sbb
jne
jge
inc
iret
sbb
push
jmp
icebp
dec
iret
push
xchg
or
sbb
aaa
mov
cmpsb
mov
push
bound
inc
jmp
aaa
aaa
addb
call
jle
iret
fs
imull
rol
xchg
insb
ror
sti
fcompl
push
pop
subl
jbe
loopne
addr16
cmp
push
outsb
aas
fcomi
jno
jl
dec
and
mov
jbe
aaa
aaa
aaa
jge
adc
aad
dec
push
sbb
lods
inc
inc
aaa
aaa
aaa
aaa
push
hlt
nop
adc
sbb
int
rorl
aaa
dec
rolb
ljmp
dec
clc
add
es
add
lahf
iret
mov
sbb
or
jne
mov
loop
pushf
hlt
lds
std
adc
add
fcmovne
out
out
jbe
xlat
adc
test
ljmp
fwait
fwait
enter
sbb
mov
cs
add
xor
insb
mov
xchg
jmp
out
divb
mov
and
je
jae
rcl
lret
fists
jae
imul
fadds
aas
lea
jae
test
ds
mov
adc
lods
movsb
dec
inc
adc
outsb
outsb
outsb
out
mov
cmpsl
or
jg
jge
mov
ja
dec
sub
mov
out
add
out
imul
xlat
bound
ljmp
xchg
cmp
clc
dec
jae
mov
clc
mov
orb
outsb
jbe
add
mov
repnz
or
out
repz
inc
mov
es
out
iret
out
out
inc
lret
mov
movsb
sub
xchg
stos
stos
jp
pop
mov
cmp
shlb
push
addr16
and
jl
mov
cmp
pop
aam
push
stos
mov
mov
inc
xor
mov
into
push
aam
sub
leave
es
jp
out
mov
andb
dec
cld
outsl
adc
push
je
stos
xchg
dec
inc
cmp
xor
test
jae
test
push
test
aas
shlb
mov
insb
in
add
int3
adc
inc
les
cmpsb
sysret
or
aam
sub
xchg
fdivrl
mov
add
outsb
clc
fadd
popf
test
push
jge
insb
outsb
outsb
outsb
mov
jl
jbe
jne
jne
std
mov
addr16
out
sub
aam
pop
mulb
dec
notb
inc
fidivrl
xor
add
jae
out
out
nop
pop
sub
in
cmp
out
out
out
icebp
inc
cmp
adc
pop
out
out
inc
inc
das
lret
xchg
in
mov
out
sub
clc
mov
fbld
jbe
sahf
pop
aas
fwait
cmpsb
sbb
push
call
loop
sti
mov
in
scas
sbb
jo
mov
ficoml
aam
sbb
jmp
pop
dec
ss
pop
and
ds
xor
dec
loopne
mov
push
lret
mov
call
sub
into
cli
add
push
daa
pop
loop
test
int
inc
pop
and
loopne
push
jg
xchg
leave
out
mov
sub
cmp
adc
out
iret
cld
adc
xor
cli
stos
sub
sub
aaa
aaa
mov
in
cli
outsb
cmp
adc
mov
stos
ds
xor
lock
inc
mov
fists
call
mov
xor
bound
mov
lret
jb
sub
xchg
hlt
mov
mov
mov
mov
mov
push
xchg
xlat
pop
sbb
aaa
push
orb
sub
pop
cmc
xchg
cmc
cld
ficompl
cmp
out
fsubrl
mov
jecxz
stos
sbb
push
add
shufps
les
mov
pop
mov
push
cmp
push
lods
popf
xor
cmp
clc
dec
mov
and
adc
movsb
outsb
outsb
outsb
outsb
je
pop
sub
ret
in
negb
test
scas
clc
sbb
sbb
inc
dec
dec
stos
iret
out
fmul
xchg
mov
rolb
loop
pop
insb
rorb
xor
lahf
add
out
testb
pusha
int3
add
arpl
lods
addr16
insb
imulb
sub
or
mov
mov
cmp
sub
fadds
daa
jge
cltd
dec
push
rclb
jecxz
mov
shl
mov
jnp
cmp
rep
int3
mov
jae
sub
inc
xchg
mov
das
mov
nop
adc
jge
add
ds
xor
adc
mov
lcall
aaa
push
andb
fildl
mov
sub
sub
lahf
adc
in
sbbb
inc
rcll
jmp
sub
add
or
fwait
fwait
fwait
pop
add
xchg
jl
sub
cmpl
fsts
into
inc
lahf
int
lahf
shlb
pop
mov
lcall
rorb
in
and
dec
mov
mov
mov
or
mov
dec
rorb
jae
sti
or
je
out
pop
and
push
mov
jae
mov
mov
mov
out
fwait
sar
sub
sub
les
icebp
mov
dec
lock
mov
shll
jmp
in
aam
icebp
cmpsb
mov
out
or
cltd
inc
add
insl
push
jge
outsb
pop
jne
jns
call
out
arpl
jmp
dec
cmp
and
mov
lcall
iret
int
je
xor
push
mov
cmp
lahf
or
mov
ret
jo
in
xchg
dec
mov
aaa
or
xchg
outsb
mov
dec
fwait
pop
movsl
fdivrl
fs
js
jae
jae
mov
testl
mov
mov
and
test
mov
or
sti
ljmp
pop
lods
jmp
mov
add
adc
out
xlat
dec
inc
ds
mov
mov
test
mov
and
adc
dec
loop
jo
dec
xchg
xor
repz
scas
je
mov
add
dec
sarl
jbe
cmp
scas
add
jae
pop
pop
mov
imul
adc
jle
dec
mov
cmp
and
cmpl
xor
loop
xchg
iret
cmc
cmpb
arpl
insb
cmpl
roll
dec
loopne
pop
xchg
cli
cmp
jmp
jae
push
add
jae
jne
push
jne
jmp
push
icebp
mov
aad
gs
filds
jae,pt
mov
dec
mov
fld
xor
mov
jae
lea
push
js
pop
loop
mov
into
sub
ficompl
fnstcw
ja
stos
jp
clc
push
mov
cmc
push
add
jae
lret
in
jae
outsl
inc
mov
dec
mov
or
iret
push
push
popa
sti
clc
aad
es
fsubrs
fsubl
mov
enter
adc
sbb
out
fmuls
fdivp
fnstenv
mov
pop
hlt
out
ds
fcmovb
push
xchg
jno
fmull
rorb
mov
or
data16
test
cmp
jecxz
rcrl
movsb
push
ja
lea
mov
ss
push
nop
add
lock
or
pop
je
outsb
out
clc
cmp
mov
sub
out
mov
sbb
jb
adc
movsl
mov
dec
mov
jmp
outsb
pop
sbb
leave
and
cmp
loop
mov
insb
outsb
mov
shlb
pop
insl
mov
mov
clc
fwait
mov
and
outsb
scas
cli
fnstenv
das
push
inc
push
jnp
stc
cmp
out
scas
jo
out
or
or
sbb
pop
xchg
sbb
fs
int
int
ss
inc
push
daa
cltd
fxtract
cli
or
int
int
mov
iret
cmpsb
movups
sub
loop
pop
or
mov
dec
aaa
aaa
aaa
aaa
cmpl
int
jb
jmp
aaa
aaa
aaa
aaa
push
dec
pop
cltd
xchg
addl
add
pop
mov
push
lea
cltd
mov
lods
dec
ja
push
js
pop
push
push
int
or
cs
outsb
outsb
pop
sbb
pop
and
imul
out
testb
scas
enter
pop
cmpsl
out
out
repz
dec
adc
and
out
fistps
outsb
xor
js
js
fsubrl
and
fwait
lret
inc
in
ror
out
xor
mov
es
jo
ds
les
loope
outsb
outsb
outsb
cmp
js
fadds
movsl
mov
push
sub
inc
dec
xchg
js
iret
out
insl
or
test
sub
pop
int
jae
jae
das
cs
xor
cwtl
cmpsb
bound
lods
repnz
out
int
aaa
enter
cmp
pop
loopne
daa
mov
or
aas
mov
adc
pop
pop
lock
or
bound
jo
mov
cmp
cmp
sub
sub
dec
cmp
xchg
scas
mov
out
dec
jg
add
std
cmc
fiadds
inc
sbb
push
cli
xchg
inc
push
out
add
testb
pop
mov
inc
addb
lret
out
out
daa
dec
movsb
std
xchg
imull
addb
inc
sbb
xor
nop
cmp
outsb
push
mov
call
mov
int
shlb
xor
pop
enter
aaa
aaa
aaa
aaa
in
lret
popf
roll
mov
push
inc
cmpsb
fildll
fwait
fwait
fwait
fwait
jl
sub
aaa
loope
insl
xor
mov
push
jl
mov
repnz
push
xchg
pop
mov
das
and
outsl
pop
icebp
mov
fsubl
xadd
outsb
stos
mov
fmull
lahf
xchg
sbb
mov
inc
jge
cmc
cmp
or
stc
jle
sahf
jne
adc
adc
xchg
or
fwait
sbb
and
adc
insb
inc
into
paddusb
fsubl
cmp
mov
mov
in
cmp
mov
sbb
xchg
mov
adc
int
ss
in
scas
aam
push
sahf
ror
out
xchg
lcall
pop
subl
mov
aas
pop
sub
je
loopne
and
mov
push
cmp
jae
xchg
movsb
mov
mulb
int
jae
add
imul
sahf
mov
int
and
cmp
jp
ficompl
jbe
jge
ds
stos
push
int
mov
test
ja
scas
cmp
fwait
fwait
mov
dec
jp
push
mov
std
xor
repz
and
jbe
std
rcr
aam
not
mov
ljmp
es
or
fsubl
dec
cmpl
cltd
jp
test
rorb
push
and
push
shrl
mov
cmp
rcr
imul
fs
xor
fs
fdivrl
andl
stos
sub
jmp
lods
jns
mov
jl
sub
out
pop
les
out
and
aas
fisttpl
mov
das
pushf
sti
jl
ret
sbb
sub
insb
outsb
outsb
iret
inc
pop
mov
xor
aaa
aaa
sbb
inc
daa
int
and
outsl
sbb
popf
and
out
sub
or
orb
mov
adc
int
out
out
loope
fbld
mov
int
addb
mov
jns
xor
int
int
mov
and
sbb
mov
mov
aam
or
mov
mov
jae
pushf
jle
cmp
dec
and
int
int
aam
cltd
mov
jle
ficomps
jge
adc
or
mov
dec
aam
mov
dec
inc
mov
jae
jae
popa
lock
and
adc
push
out
lahf
cmp
cli
loop
inc
xor
decb
les
cmpsb
icebp
push
sbb
stos
outsb
cmp
test
int
jae
into
in
rorb
jnp
jno
mov
jle
xchg
inc
shl
adc
fistpll
test
dec
clc
pop
enter
out
pop
or
xchg
xor
cmp
pop
ss
dec
insb
xchg
jle
sahf
int
and
jl
push
xchg
xchg
push
test
div
dec
xchg
mov
ret
fadd
mov
addl
cmp
popa
out
idivb
lods
mov
std
inc
out
mov
jge
mov
dec
push
inc
mov
fwait
sbbl
shrl
scas
popf
add
cli
insb
outsb
outsb
adc
fcmovne
sti
inc
enter
lea
jae
loopne
loope
dec
mov
cmpsb
cmp
push
fsin
pop
aas
pop
push
mov
lcall
mov
dec
and
xor
add
out
sub
es
fwait
fwait
fwait
fwait
pop
jecxz
mov
gs
add
jo
sahf
fwait
or
mov
sti
lret
jg
and
cmp
xchg
adc
and
subl
lahf
fwait
mov
sti
fdivl
loope
cmc
mov
int3
rcrb
inc
cltd
lret
insl
mov
daa
jmp
ss
pop
lahf
fistpl
sub
and
push
int3
fildll
outsb
xor
pop
or
mov
and
jge
mov
in
dec
jle
insl
sahf
loopne
add
jb
pusha
sub
and
fwait
iret
int
push
in
mov
repz
int3
sar
fistpl
rcr
out
xor
adc
fwait
popf
pop
mov
xchg
xor
sub
xorl
fdiv
add
sahf
jo
mov
inc
push
pop
pop
adc
jmp
push
mov
push
mov
xchg
outsb
outsb
lahf
fwait
inc
push
leave
nop
adc
test
es
xchg
push
out
jge
mov
push
bound
call
inc
xor
mov
cwtl
clc
arpl
mov
arpl
cltd
negb
dec
adc
pop
push
mov
jno
fcom
cltd
push
sahf
cld
test
in
xor
idivl
call
lahf
rcrb
pop
scas
sbb
test
outsb
jle
lods
dec
xchg
jmp
or
loopne
idiv
insb
pop
pusha
fwait
lock
mov
lahf
jae
out
pop
clc
push
popf
shlb
into
cli
andb
mov
or
jnp
pop
int
paddq
in
mov
pop
inc
iret
mov
aaa
push
mov
fwait
inc
int
iret
inc
je
mov
jb
outsb
outsb
scas
mov
fbld
std
jno
aaa
scas
dec
std
insb
outsb
jae
stos
mov
syscall
cmpsb
divb
in
pop
shll
pusha
adc
lahf
fwait
fwait
pop
adc
or
xchg
adc
inc
ljmp
xchg
inc
xor
test
jae
sbb
push
ss
dec
aaa
aaa
mov
sahf
mov
xchg
insb
repnz
daa
xchg
pop
lods
cmp
jle
nop
mov
lcall
sbb
cmpsl
mov
and
and
test
cmpb
stos
out
out
mov
jmp
lret
fcmovne
addr16
into
or
xchg
cmpsl
fwait
fwait
fwait
fwait
dec
jae
mov
pushf
imul
mov
lahf
fwait
fwait
adc
out
rcr
sub
das
dec
ret
outsb
outsb
outsb
outsb
mov
add
aaa
leave
sbb
ret
inc
jne
popf
addr16
push
xchg
mov
bswap
out
pop
shl
cmp
xchg
bound
dec
dec
pop
sbb
out
pop
aad
insl
popf
cld
mov
leave
xchg
fiadds
xlat
std
or
pop
xor
lea
rolb
scas
scas
pop
mov
ss
mov
stc
ret
mov
in
insb
test
cli
push
ds
loopne
imul
clc
and
jnp
enter
lds
outsb
outsb
outsb
outsb
nop
jg
call
mov
jl
mov
mov
std
mov
xchg
xchg
mov
ret
out
idivb
adc
in
dec
fst
fwait
fstpt
dec
clc
cmp
mov
imul
fwait
in
or
adc
mov
outsb
aas
fwait
je
fmuls
movsl
dec
jne
popa
mov
loopne
add
stos
dec
outsb
outsb
jle
lods
xor
or
leave
mov
f2xm1
sarl
mov
fdivs
fisubl
clc
push
rol
xorl
iret
int
int
mov
clc
lret
cld
adcl
aaa
aaa
mov
adc
push
shrl
outsb
pop
hlt
aas
or
jbe
add
aad
inc
outsb
aas
sbbb
pushf
inc
pop
mov
out
mov
stos
popf
jmp
pop
mov
cs
jnp
aaa
aaa
aaa
aaa
fsubs
popf
clc
pop
mov
jle
aaa
aaa
xor
sti
or
out
ljmp
mov
repnz
xchg
add
mov
ja
xor
out
out
push
add
jae
jno
popa
xchg
mov
jnp
push
pop
sbbl
andb
or
add
lahf
sahf
cmpsl
mov
cmpsb
aas
sub
mov
lods
inc
cwtl
or
notb
dec
push
outsb
outsb
outsb
int
sbb
mov
imul
mov
ror
pop
les
and
shrl
ss
aaa
mov
dec
in
pop
sub
mov
dec
hlt
pop
xchg
jo
jge
out
in
dec
dec
divb
jae
out
mov
in
imul
sti
iret
out
out
and
push
enter
sbbl
pop
inc
add
dec
fidivrs
in
sti
fcompl
lret
sahf
pop
fs
in
mov
les
mov
or
in
push
cmp
mov
pop
cmp
xor
insl
cmpsl
jecxz
inc
jp
push
jp
inc
sub
mov
dec
pop
sbb
xor
cmp
mov
insb
xchg
pop
repz
pop
stos
mov
repz
mov
jmp
pushf
aam
xchg
dec
jae
daa
cmpsb
cmpsl
jbe
arpl
push
mov
mov
int3
mov
test
mov
cli
and
fucomi
dec
inc
pop
subl
xchg
and
outsb
inc
out
loop
sub
cs
add
add
inc
shlb
paddw
cmp
inc
and
lock
ds
xor
or
inc
popf
in
outsb
outsb
outsb
clc
fistpll
scas
outsb
cmp
mov
orb
inc
jne
xor
pop
sbb
ja
mov
jno
clc
nop
sbb
xchg
or
fcmovne
divb
pop
jecxz
divl
xchg
push
sub
dec
lahf
fwait
mov
jo
pop
divl
adc
mov
es
cmpsb
pop
lahf
aas
out
and
fnstenv
ret
push
sbb
rolb
das
adc
cmc
and
or
inc
push
and
stos
xchg
jo
ret
addr16
fdivrs
inc
filds
shlb
fwait
cmp
call
inc
push
jl
aaa
cld
add
xchg
aaa
add
mov
ds
das
mov
push
int
cltd
in
or
lahf
fdivrl
adc
lcall
in
and
fnstcw
nop
push
ret
sbb
movsb
xchg
into
sub
outsb
scas
clc
jbe
call
sub
in
push
shlb
jae
shrl
in
arpl
icebp
insb
cs
rcrl
sahf
out
fcmovne
mulb
xchg
sub
xchg
mov
fwait
fwait
fwait
xchg
jmp
fdivl
data16
sbb
popf
fwait
cmc
jb
insl
popa
xchg
xchg
pop
arpl
fdivrl
aaa
popf
pop
inc
and
inc
cmp
cmp
fsubl
mov
std
arpl
lods
pop
dec
test
mov
mulb
mov
sahf
iret
or
movsb
sbbb
jbe
outsb
scas
clc
out
cltd
scas
lock
mov
outsb
out
pop
orb
jp
rcrl
jne
xchg
pop
cmp
sbb
adc
test
pop
xchg
icebp
inc
jecxz
inc
dec
in
add
adc
push
or
mov
int
dec
fbstp
out
ficoms
cs
test
iret
int
lahf
and
je
mov
inc
cli
jp
jo
js
iret
shlb
cmpl
hlt
mov
cmp
shlb
xor
fadd
iret
sub
or
sbb
mov
in
cmp
aas
sub
lock
mov
testl
add
nop
imul
popa
mov
mov
out
fstpl
fdivrs
sbb
int
inc
out
cmp
pop
addr16
aaa
mov
daa
push
les
jae
push
mov
fwait
jae
pop
cmp
push
lock
push
insl
in
pop
jl
addr16
sbb
mov
cmp
js
dec
stos
lock
cld
cwtl
and
lahf
int
pop
loop
aad
fadds
adc
push
inc
vcmpsd
call
sahf
int
or
sbb
shr
sahf
xor
lcall
aaa
mov
adc
negb
ret
ret
mov
rcr
and
sahf
test
fiadds
pop
cltd
push
cmp
dec
je
lock
jle
inc
dec
test
js
jo
outsb
outsb
out
push
mov
popa
rol
in
lods
xor
push
cwtl
add
cwtl
sub
in
imul
dec
pop
xchg
imul
xchg
es
mov
jle
mov
pop
jecxz
push
push
dec
cmp
inc
clc
clc
es
out
mov
jbe
dec
and
cmpsl
nop
lahf
repz
daa
jmp
fisubs
out
out
pop
mov
mov
scas
jg
test
out
add
xchg
or
cld
and
mov
jge
jge
jae
and
lock
notb
je
mov
xlat
sub
xor
pop
mov
divb
lods
sbb
shl
out
out
aam
xor
outsl
in
nop
pop
push
inc
or
test
loope
sarb
in
sbb
mov
mov
jo
outsl
mov
lds
stos
push
mov
push
pop
mov
mov
sub
mov
inc
push
movsb
adc
loop
push
jnp
jmp
fs
sbb
popa
dec
mov
bound
or
jg
xor
ljmp
out
fs
aaa
aaa
aaa
and
inc
clc
jecxz
xor
lock
jl
xor
enter
outsb
cs
mov
inc
in
repz
adc
ja
jp
outsb
sub
out
lahf
fcmovne
testb
divl
push
push
mov
popa
xchg
mov
insb
outsb
outsb
outsb
inc
int
in
mov
std
xchg
nop
cli
mov
data16
jno
aas
fcmovnu
andb
shll
add
clc
mov
loop
cld
insb
int3
scas
mov
push
cli
sub
outsb
je
fadds
add
aaa
aaa
aaa
and
jae
fnstenv
xchg
fnstsw
sub
aaa
test
push
test
aaa
in
lret
outsb
outsb
roll
and
loop
mov
outsb
outsb
outsb
outsb
shrl
pop
jb
pop
adc
out
imul
lret
js
add
sub
icebp
jp
aaa
aaa
aad
dec
dec
fs
adcl
inc
cmpb
mov
adc
sbb
out
dec
inc
es
jle
mov
jae
iret
mov
cli
fists
sbb
bnd
jae
imul
bound
test
rcll
cmp
mov
mov
mov
fwait
fcmovnu
in
rcrl
int3
int3
sbb
es
push
xor
icebp
loop
pop
pop
xor
mov
pop
lock
es
lahf
fcompp
and
imul
stc
dec
and
sub
add
jp,pn
aas
sub
adc
out
out
das
hlt
test
shrl
faddl
pop
out
popf
ret
in
mov
xchg
loope
dec
ljmp
ret
jbe
cmp
push
lahf
mov
jbe
lds
adcb
xchg
cmc
jno
adc
mov
xchg
adc
call
popa
scas
icebp
mov
mov
xchg
in
mov
ljmp
lock
divl
push
dec
popa
popf
in
divb
nop
pop
fs
fsubl
cltd
fisttpll
lock
aam
sbb
and
stos
fadd
pop
in
jno
fucomip
xchg
and
pop
ds
insb
lods
test
dec
pop
xchg
shrl
jb
cmc
cld
popa
jae
fdivl
dec
ss
into
in
mov
out
sbb
cmpsb
xchg
dec
mov
push
xchg
out
sub
jge
inc
dec
dec
cwtl
int
sbb
scas
adc
adc
int
int
push
push
mov
imul
iret
sbb
adc
mov
jb
cs
enter
movsb
mov
in
popf
fcmovnbe
mov
or
adc
add
sbb
js
js
les
jnp
scas
mov
jb
cmp
pop
sub
sub
icebp
push
dec
mov
xchg
cld
clc
fmul
or
movsb
fisttpl
aaa
mov
in
push
mov
orb
in
adc
mov
repnz
orl
mov
ljmp
orb
mov
inc
imul
mov
sbb
js
out
mov
es
adcb
testl
nop
pop
push
sahf
push
mov
mov
adc
les
mov
mov
cmp
pop
push
xorl
shlb
sar
repnz
stos
mov
ja
rcrb
loopne
xor
jae
xchg
jle
xchg
bound
aam
stc
test
jae
gs
mov
mov
mov
jae
mov
cmp
subb
xlat
outsl
jmp
jl
sbb
es
subb
cli
sti
fnstcw
in
xor
int3
daa
cwtl
es
call
test
cmp
outsl
fisttpll
scas
es
roll
inc
fnstsw
dec
sahf
loope
jne
sarl
push
jl
aaa
push
sahf
push
je
push
js
adc
add
add
push
icebp
jb
jbe
fidivl
jae
jae
cmp
pop
lods
cmpsl
leave
cmp
cmp
lret
lea
aaa
aaa
std
popf
pop
sti
push
dec
les
aam
rcl
js
aaa
stos
ljmp
adc
nop
sbb
lahf
in
mov
mov
je
pop
lock
mov
insb
dec
test
ss
out
mov
sub
int
ret
insb
cs
sbb
sub
mov
mov
sbb
add
xchg
shl
mov
fcoms
push
cld
mov
xchg
mov
int
in
mov
insb
mov
sbb
or
aaa
mov
add
adc
aam
sub
aaa
int
insb
prefetch
mov
pop
in
sub
sub
insb
ds
loope
pop
mov
arpl
mov
loop
cmc
adc
add
mov
xchg
test
incb
jae
jae
in
das
sahf
push
ljmp
addr16
fs
nop
push
fdivs
mov
notl
push
or
fwait
fwait
andb
add
shl
cmpl
aam
push
arpl
add
dec
inc
adc
fnstcw
ret
add
push
inc
addr16
loope
rorl
jo
sbb
dec
add
imul
out
mov
jg
outsl
xchg
push
xchg
mov
xchg
out
test
or
xor
adc
aaa
aaa
jge
rcll
pushf
or
arpl
dec
jg
cmp
into
or
sbb
xor
pop
sbbb
cmpsb
xor
mov
lret
out
xor
mov
fidivl
mov
sbb
lock
pop
sbb
xor
lock
fistpl
push
lret
loop
in
mov
je
in
dec
or
aaa
aaa
mov
dec
imul
dec
sahf
pop
aaa
aaa
aaa
aaa
add
pop
nop
sbb
mov
repz
mov
in
mov
jbe
cmp
jae
jae
jns
sub
setg
mov
out
fbstp
enter
imul
pop
iret
out
ja
bound
lahf
push
lcall
push
int3
add
orl
xchg
jp
mov
lods
add
outsb
outsb
outsb
outsb
mov
adc
fidivrs
inc
scas
std
jl
outsb
outsb
mov
shrb
xchg
mul
out
or
xor
outsb
lahf
fstpt
repz
push
or
mov
mov
mov
or
fildl
stos
repz
ds
cmp
jp
cmc
sub
fmul
fists
jmp
enter
or
cli
out
jp
shrb
sahf
jle
rorb
movb
mov
push
js
repz
or
sti
insb
pop
dec
insb
xchg
sbb
addr16
test
or
repz
fistl
enter
lahf
std
imul
cmp
jle
pop
jmp
adc
sbb
push
xchg
adc
cmp
fdivrl
pop
push
popf
inc
icebp
mov
lret
mov
sub
pop
movsl
rclb
push
stos
mov
aaa
ljmp
ljmp
hlt
jae
cmpb
pop
xchg
cmp
int
int
arpl
or
cmpsb
out
push
leave
out
mov
int
mov
aas
or
dec
iret
out
pop
dec
dec
xor
ret
or
popl
lock
and
test
out
sbbl
mov
pop
rorb
dec
mov
xchg
in
sub
jg
lock
fstps
fwait
fwait
fwait
fwait
dec
cwtl
xorb
bound
or
xor
ss
idivb
sub
dec
sbb
sbb
nop
inc
pop
push
xchg
pop
adc
mov
outsb
outsb
outsb
xor
mov
ds
fcompl
insb
outsb
cmpsb
repz
test
out
cli
ds
in
jnp
test
in
movsl
mov
xchg
cltd
mov
int
dec
rcl
sbb
jne
sbb
int
int
leave
cmc
mov
test
xchg
idivb
iret
int
int
test
daa
gs
or
sbb
xor
fs
cmp
ret
push
sahf
mov
fwait
cmpsl
jb
call
jle
or
xorb
rcll
jns
neg
adc
mov
mov
std
mov
mov
cmp
loope
bound
lods
mov
out
adc
popf
rcrl
dec
jb
fldenv
out
out
cmp
dec
jp
jno
sbb
iret
adcl
adc
out
jle
xor
frndint
insb
rolb
lret
jb
inc
fcmovnb
addr16
stc
sbb
xor
ret
dec
xor
fimull
mov
scas
call
je
outsb
aas
push
inc
mov
repnz
out
roll
jne
das
sahf
fwait
pushf
mov
inc
movsb
or
lock
push
mov
fistl
adc
les
push
dec
popa
dec
jl
mov
cmp
shr
pop
jb
add
repnz
inc
pop
adc
xchg
sbb
les
or
sub
aaa
aaa
mov
clc
andb
rolb
sbb
aaa
aaa
aaa
aaa
int3
popa
dec
sub
sub
jle
xor
stos
loope
fcmovu
pop
xlat
cmpsb
les
scas
cli
push
out
idivb
mov
mov
mov
fcompl
push
add
mov
inc
and
test
stos
push
add
xor
fbld
hlt
and
iret
xchg
pop
pop
in
jg
outsb
outsb
outsb
outsb
stc
iret
dec
adc
ficomps
ljmp
add
mov
addb
ss
aaa
aaa
aaa
in
es
mov
jg
loopne
aaa
aaa
aaa
cmc
lret
push
fimull
and
adc
ds
pandn
shlb
cmp
xchg
imul
push
adc
ret
clc
mov
out
repz
add
call
fisubrl
jmp
mov
jl
or
jmp
outsb
jle
int
test
lret
xchg
imul
enter
fwait
sub
mov
push
lds
dec
sahf
fwait
fwait
fwait
push
lock
cmpsb
aas
iret
sbb
pop
jmp
push
dec
xchg
and
dec
push
iret
sarb
cli
or
aaa
mov
or
pop
bound
ror
outsb
fmull
insb
jle
sbb
jno
sbb
pusha
repz
xor
pusha
push
std
jne
mov
sahf
jbe
nop
push
push
mov
sbb
enter
daa
lret
das
sub
cmp
shlb
lea
lods
movsl
xchg
mov
iret
out
fistpll
xor
mov
jne
or
and
out
in
jbe
add
mov
in
outsb
inc
rcrb
lret
jl
repz
outsb
sbb
jnp
int
fstpt
fcompl
and
nop
das
insb
popa
enter
mov
ja
repnz
jmp
mov
pop
sub
jae
sti
sub
push
cmp
in
xchg
jle
push
jle
in
addr16
add
mov
fidivrl
outsb
outsb
and
mov
push
sbbb
fwait
pop
mov
aaa
aaa
push
sub
mov
pop
fstpt
aaa
adc
jmp
movsl
lret
mov
pusha
ficompl
cmp
xlat
out
fnsave
xchg
shlb
dec
clc
pusha
sbbb
outsb
push
outsb
insb
sbb
decb
mov
lock
cs
bound
cmpsb
iret
sahf
ljmp
out
in
clc
clc
insl
test
fdivrl
out
cmpsl
bound
or
addr16
xchg
ret
pop
popf
in
add
lds
adc
les
mov
add
push
pusha
sbb
mov
int
cmp
nop
xor
addb
mov
test
aaa
aaa
cmovp
xchg
mov
andl
mov
insb
icebp
lahf
in
out
test
mov
mov
out
dec
iret
iret
xchg
cmp
push
dec
sbb
push
mov
fs
adc
fsubrs
stos
adc
mov
fstpt
adc
pop
add
std
rclb
aaa
aaa
pop
ljmp
js
dec
push
sbbb
ljmp
popf
jo
scas
fsubrl
mov
bound
test
cmpsl
push
or
jp
ret
clc
insb
int
dec
stos
repnz
arpl
pop
repnz
roll
je
mov
scas
pop
hlt
mov
cmp
fcoml
lock
pand
imul
cmp
pop
scas
jo
xor
jae
jae
push
mov
and
sub
or
jae
jae
cli
cmp
jecxz
push
sbb
mov
mov
adc
adc
pop
mov
sbb
mov
add
inc
pop
xlat
xchg
add
xchg
mov
iret
int
andb
dec
lock
xchg
mov
cmp
jae
fdivrl
dec
aas
rcrb
or
imul
ja
xchg
adc
cwtl
fdiv
cmp
clc
dec
mov
out
mov
jnp
and
jno
cmp
stc
out
out
stos
test
mov
cmpl
fcmovne
out
lcall
dec
int3
outsl
fbld
adc
inc
pushf
fwait
inc
mov
xchg
das
out
mov
mov
mov
cltd
dec
xor
ror
paddb
push
jl
rol
jae
jae
pusha
pop
loopne
sub
es
xchg
xor
jae
jae
nop
mov
sbb
lahf
outsb
outsb
stos
jae
fistpl
adc
test
pop
push
std
insb
outsb
outsb
mov
mov
cmpsl
iret
divb
mov
dec
sahf
xorl
mov
push
sahf
test
pop
in
lcall
arpl
mov
test
hlt
shll
sub
inc
movsb
loop
outsb
lret
aaa
ja
jmp
enter
jne
pop
cmp
fistpll
mov
fs
idiv
mov
and
rol
cmpsb
addb
sahf
pop
sbb
paddq
sbb
and
movsb
hlt
sahf
cli
jle
aaa
and
jge
sub
sti
cmp
adc
mov
pushf
adc
dec
int3
mov
mov
testb
and
jbe
adc
out
out
push
out
lods
jmp
lret
mov
fcmovne
out
fidivrl
mov
mov
insb
outsb
outsb
lahf
mov
jg,pn
pop
stc
dec
mov
divb
pop
mov
cmp
or
call
mov
hlt
mov
aad
cmc
test
subb
lods
aam
sub
sbb
enter
mov
inc
or
mov
outsb
sbb
push
hlt
fmulp
out
or
fnstcw
icebp
pop
xchg
pushf
sahf
test
ret
adc
cli
dec
push
mov
jp
dec
xor
and
or
dec
out
sbb
lods
rorl
mov
pop
or
xor
dec
mov
out
sub
rclb
mov
pop
insb
pop
lods
mov
shl
mov
mov
fwait
test
ret
outsl
sub
pop
xchg
hlt
mov
mov
push
icebp
xchg
cmp
pop
inc
cld
sub
lret
push
gs
fcompl
test
sbb
add
jae
jae
lea
pop
dec
cltd
fimull
insb
pop
scas
add
mov
mov
cmp
mov
call
fs
out
lods
mov
loop
in
push
xor
xor
mul
test
aaa
mov
jle
enter
lock
loopne
mov
inc
inc
inc
inc
popa
push
jp
jl
jg
mov
pushf
les
push
xchg
daa
sbb
adc
cli
fsts
or
mov
int
int
cli
xchg
or
std
pop
cli
pop
lahf
lds
int
mov
mov
jp
mov
xor
dec
addb
cmp
outsb
outsb
jg
and
push
cmp
mov
outsb
outsb
outsb
outsb
adc
lods
push
fwait
insl
aaa
mov
mov
test
cltd
mov
mov
add
outsl
data16
rclb
in
std
cmp
addr16
aas
push
xchg
mov
mov
pop
bound
dec
or
sahf
sub
out
sbb
xor
imul
arpl
iret
cmc
int3
shll
and
iret
mov
movsb
out
pop
xlat
cmp
addr16
sti
pop
pop
mov
fwait
mov
lahf
int
in
in
inc
jbe
je
and
lcall
mov
bound
nop
insl
leave
xor
add
pop
sub
sbb
xchg
lock
push
pop
xor
loope
cmpsb
push
mov
dec
mov
xlat
clc
out
mov
mov
jp
mov
xor
shrb
jmp
inc
jae
out
out
sub
xchg
orl
sti
jae
sub
and
push
popf
out
sahf
jnp
sbb
jae
test
mov
or
int
cmc
push
adc
jle
pushl
xchg
push
inc
xor
sub
fimull
mov
sbb
es
into
icebp
insb
outsb
outsb
push
push
sahf
aaa
dec
jmp
pop
sub
ljmp
mov
les
es
xchg
hlt
faddl
mov
mov
fisubl
cmp
fisttpl
mov
fdivrl
mov
hlt
pop
ss
cli
ret
fsts
mov
scas
icebp
add
push
cmpb
inc
rcrl
int
push
push
ret
stc
add
inc
jle
and
xchg
mov
sub
jns
ficoml
cmp
sub
jecxz
outsb
lahf
fwait
fwait
sbb
lret
or
push
adc
out
pusha
dec
or
outsb
outsb
push
hlt
xchg
add
outsb
rclb
pop
icebp
jnp
in
mov
fcoml
xor
mov
loopne
gs
or
lcall
xchg
dec
xor
xchg
mov
push
lods
xchg
pop
mov
sub
xor
mov
cmp
pop
loopne
jo
inc
mov
hlt
pop
mov
mov
fs
sti
fcompl
fs
inc
jl
pushf
cltd
xor
mov
inc
sub
mov
xchg
mov
jnp
xlat
into
sbb
or
xchg
hlt
mov
ss
adc
insl
jbe
popf
xchg
and
aas
inc
push
dec
in
ds
xor
iret
out
cmpsl
adc
out
rcl
lods
movsb
aad
mov
jae
add
lock
mov
call
or
js
lahf
push
dec
cmp
addr16
das
pop
cmp
xor
jno
loope
insb
scas
test
cmpsl
pop
sbb
les
loop
mov
inc
aad
push
test
xchg
in
pop
add
sti
fsub
fstpl
fsubl
xchg
nop
push
into
dec
lock
mov
mov
cmp
cmp
dec
jns
clc
and
push
ret
sbb
fwait
scas
jno
xlat
mov
inc
ds
push
out
ljmp
in
xor
xchg
sahf
shl
mov
aaa
mov
fwait
sahf
fwait
sub
cmp
xor
dec
adc
das
int
in
and
les
push
pop
lret
clc
adc
iret
out
mov
loop
lods
cmp
pop
out
out
cmpsl
shl
sar
mov
daa
enter
fistl
cmp
add
dec
lahf
int
aas
inc
cmp
call
outsl
dec
ret
fwait
sbb
mov
lea
fwait
fwait
jo
rcrl
jge
sub
inc
xchg
pop
idivb
mov
fprem
xchg
out
lret
pop
push
je
pop
in
mov
mov
mov
bound
aaa
aaa
aaa
aaa
mov
or
mov
cmp
aaa
aaa
sub
xchg
pop
rcl
shl
testl
push
push
mov
xlat
xchg
icebp
ljmp
data16
mov
dec
inc
inc
sbb
add
outsb
movl
sbb
sbb
int3
test
and
stc
ds
mov
hlt
jecxz
adc
fidivl
mov
jae
jae
aad
int3
push
test
enter
je
and
pop
jp
ficoml
sbbb
push
orb
and
push
cld
pop
mov
and
or
mov
test
or
pushl
aaa
aaa
aaa
sahf
adc
cmpsl
or
jnp
cmpl
aaa
adc
xor
jl
cmp
andl
adc
out
ss
push
mov
loopne
and
out
out
stos
xchg
pop
cmp
imul
jae
movsl
jnp
xor
in
mov
jae
jae
adc
out
mov
mov
sub
xchg
aad
movsb
jp
mov
jae
pop
lock
xchg
dec
jo
test
int
aaa
mov
dec
pop
mov
iret
jg
in
or
cli
fs
leave
popa
or
je
fwait
std
orb
loope
fdiv
sub
mov
out
out
xor
sbb
loopne
adc
test
add
jae
cwtl
xchg
test
mov
loope
mull
ret
fldt
sti
fmull
test
xor
and
mov
and
sub
rclb
out
push
jae
push
call
mov
fnstenv
jae
jae
divl
cli
dec
iret
jg
add
mov
fisttps
dec
scas
cmc
loopne
xchg
sbb
test
inc
popf
or
pop
push
mov
scas
xor
xor
out
inc
rcll
cmp
push
cs
or
dec
sbb
mov
xor
jl
adc
cld
inc
add
imul
fdivl
jae
xor
insb
mov
loope
test
jae
shl
and
push
andl
jae
pop
or
test
test
mov
aas
cmp
mov
enter
cmpb
mov
or
mov
fcoml
mov
and
test
adc
pop
pop
pop
insl
jmp
stos
pop
mov
push
scas
jae
repz
sarl
and
test
jae
add
add
cmc
sar
in
jb
inc
sarb
jb
and
ret
or
xor
int
int
inc
outsl
jecxz
mov
xorl
iret
int
or
call
xor
xchg
and
insb
pusha
cmp
fimull
and
faddl
inc
add
stc
pushf
mov
fcompl
lcall
mov
rcl
jae
jae
mov
xchg
lret
cs
xor
jae
insb
mov
pop
std
pop
xchg
jle
aaa
aaa
push
or
mov
push
notb
fwait
outsb
outsb
cs
dec
xchg
fidivrs
mov
out
out
iret
outsb
outsb
outsb
outsb
enter
dec
xor
add
outsb
outsb
outsb
test
cmp
sbb
insb
outsb
outsb
outsb
je
rorb
cmp
xchg
add
cmp
cli
add
pop
sub
das
loope
ja
dec
jmp
pop
shlb
push
dec
lcall
pop
inc
insb
fists
mov
aaa
std
insb
outsb
xor
aas
xchg
inc
cld
hlt
sbb
aaa
aaa
aaa
roll
inc
aad
or
push
mov
mov
jp
inc
sbb
pop
out
scas
jbe
and
outsl
sub
iret
out
aad
mov
jae
pop
inc
jp
pop
std
subb
xchg
and
orb
xor
pcmpgtd
fdivrl
adc
ret
ftst
jb
fsubl
mov
mov
lds
xlat
cmp
mov
mov
ror
xchg
pop
int3
into
mov
pop
jle
lock
out
pop
dec
mov
mov
mov
push
subb
icebp
add
add
inc
aam
test
mov
loope
fs
jb
subps
or
int3
int
cmp
pop
sub
pop
xchg
inc
mov
mov
xchg
into
leave
push
out
lahf
fwait
fwait
mov
and
sub
insb
sahf
pop
mov
jge
fdivr
xchg
pop
faddl
lods
xchg
enter
outsb
scas
adc
flds
inc
jbe
jle
testb
fmuls
mov
mov
add
aam
ljmp
mov
leave
adc
daa
mull
repz
mov
mov
adc
out
adc
int3
inc
mov
mov
dec
cmp
ret
inc
out
and
and
and
fcmovne
out
repnz
inc
sar
movb
cmp
ds
adc
rorl
xor
aaa
xchg
test
stc
pop
and
sub
dec
cmp
rol
pop
dec
dec
cmp
aaa
aaa
mov
xchg
and
bswap
jne
fdivrl
ret
xor
inc
inc
adc
lods
fwait
test
cli
lock
fdivl
sbb
fldenv
lahf
arpl
arpl
aaa
aaa
aaa
jp
and
sbb
out
test
and
adc
ret
scas
inc
sahf
adc
cmp
in
dec
loopne
movsl
jle
jno
fmuls
fistl
sbb
jg
ss
nop
xor
and
lods
inc
sub
adc
pop
inc
iret
out
out
lock
in
xchg
fdivs
mov
hlt
or
fdivrl
pop
adc
es
adc
jne
shlb
ss
aaa
mov
test
pushf
pop
lods
cmpsb
push
mov
js
jl
int
sub
stos
xchg
mov
xrelease
lock
in
mov
dec
xorl
popa
or
and
repnz
sub
je
push
mov
cmp
inc
lret
js
into
cli
fdivrl
nop
gs
or
mov
ret
push
sbb
fldt
and
repnz
pop
mov
daa
out
and
out
clc
pop
clc
nop
addr16
arpl
add
addl
insb
mov
pop
pop
loopne
jg
icebp
push
cltd
sub
or
xchg
jmp
aaa
jl
outsb
out
push
adc
outsl
push
xchg
mov
sahf
lea
loopne
or
dec
int
pushf
xor
aaa
sbb
jnp
mov
shlb
les
jle
push
out
cmpsl
decb
sti
test
xor
pop
cmp
imul
cmp
lock
outsb
adc
add
fwait
inc
arpl
subl
ror
cs
xlat
in
stos
fs
mov
push
fisubrs
jl
scas
fs
jl
mov
repnz
fwait
sbb
fdivrs
bnd
mov
push
inc
ljmp
mov
js
call
repz
cmpsb
jne
int
int
movsl
xor
sbb
jns
sub
ds
mov
clc
in
mov
jb
pop
lahf
and
hlt
and
push
mov
pop
aaa
jp
hlt
or
test
outsb
outsb
clc
sub
mov
repz
inc
cld
insb
outsb
mov
imul
adc
fmull
push
adc
and
lods
mov
xor
shll
cmpsl
pop
mov
dec
and
gs
test
mov
ror
jae
push
mov
out
cld
cmp
jae
jae
loop
jbe
xchg
stc
mov
dec
push
bound
rolb
popa
aaa
mov
int
push
aas
pop
popa
adc
xor
jle
ljmp
xchg
es
push
jl
aas
inc
or
pusha
mov
fdivrl
aaa
mov
or
jmp
je
dec
mov
jae
fidivs
fcoms
fdivrs
or
shlb
add
jo
pop
dec
ror
lods
test
nop
addr16
jae
or
push
ljmp
pop
or
xchg
js
lcall
mov
jle
jne
pushf
dec
test
ja
insb
je,pn
in
mov
addr16
sbb
das
aaa
aaa
aaa
xchg
jnp
mov
lods
adc
sbb
out
out
das
in
mov
add
ljmp
and
in
push
js
sub
pop
cld
insb
outsb
dec
xor
pop
mov
into
or
cmp
aaa
push
and
pop
mov
sti
hlt
loope
aad
imul
std
ret
jp
or
mov
aas
fildl
lcall
scas
pop
jo
cmc
mov
jge
int3
sub
xchg
xchg
xor
sbb
add
inc
repnz
lret
mov
test
aad
mov
mov
xchg
dec
push
fwait
jno
push
and
orb
test
sti
ds
cwtl
and
es
cmp
out
jae
pop
mov
push
cmp
out
out
adc
mov
inc
es
sahf
iret
out
out
shlb
enter
fmulp
adc
out
add
int
divl
dec
movsl
sti
arpl
test
movsb
shll
sti
and
daa
sub
pop
sbb
loopne
imul
cltd
hlt
mov
divb
push
out
and
outsb
mov
inc
inc
out
stc
aam
fadd
mov
out
xor
ljmp
out
push
int
jge
mov
sbb
out
mov
adc
sub
adc
notb
adc
push
cmp
or
js
aaa
aaa
dec
mov
iret
lods
into
lahf
fisttpl
clc
test
lret
mov
cld
push
ret
jne
or
in
out
aad
test
loope
rorb
and
jle
mov
inc
adc
or
fcomps
pop
mov
aad
jge
cmp
repz
sub
aaa
aaa
lret
adc
mov
jne
cmp
jo
ljmp
fwait
fwait
out
fstps
mov
mov
sub
jbe
mov
dec
xchg
pop
icebp
mov
adc
gs
mov
pop
into
xchg
dec
or
and
xchg
mov
call
aad
imul
movsb
insl
xchg
push
xor
push
mov
and
sti
adc
mov
ficompl
inc
cmp
out
and
aaa
test
jno
pop
ror
out
mov
mov
xchg
xor
inc
aam
scas
sbb
mov
cmc
nop
dec
incb
xor
jl
stos
insb
pusha
in
shlb
outsb
js
jo
pop
sbb
adc
jae
outsb
outsb
outsb
fbld
leave
je
mov
inc
insb
outsb
outsb
outsb
shlb
xchg
pop
clc
std
aad
inc
aaa
aaa
aaa
lods
fyl2xp1
lret
rolb
push
lods
int3
push
mov
sbb
sbb
jmp
paddsb
xchg
add
lods
fs
sbb
jmp
sbb
xor
push
ficompl
repnz
push
sub
fdivrl
loop
mov
in
mov
ljmp
inc
and
bound
aas
out
cmc
pushf
icebp
imul
mov
adc
outsb
jbe
pop
adc
mov
insb
dec
fmull
xor
mov
subb
lcall
or
xorl
out
lret
dec
xchg
jae
pop
js
in
mov
pop
jae,pn
jae
jns
adc
adc
and
in
jae
jge
sub
sbb
sti
pop
test
pop
test
xchg
clc
jnp
inc
pop
or
aaa
aaa
aaa
aaa
mov
subl
jno
sbb
clc
mov
dec
cmp
outsb
repnz
inc
cmp
clc
movsb
cmp
inc
sti
xchg
cmp
cmpsb
mov
pusha
push
xchg
int3
es
int
jae
push
daa
push
jb
les
xor
sub
mov
clc
cs
sbb
jmp
in
cmp
repz
dec
les
fnstcw
aaa
pop
js
xor
add
mov
lock
pop
ljmp
lea
sub
aaa
mov
sub
cmpb
insb
leave
inc
push
adc
jbe
dec
jl
fdivrl
aaa
lahf
xor
xchg
sar
fcoms
popa
push
jo
insb
cs
test
inc
jg
mov
adc
cli
fcoml
jge
cmpsb
hlt
xor
cmpsl
outsb
outsb
outsb
outsb
mov
dec
jno
and
xorl
and
int
sub
loop
xor
sbb
adc
push
int
int
jns
or
ret
rcrl
les
jmp
lahf
int
test
jbe
xchg
pop
mov
jo
cmc
test
xor
es
mov
test
out
fdivl
call
outsb
outsb
insb
mov
pop
rorb
fcompl
pop
add
and
dec
mov
fmul
cmc
or
cmp
add
lea
jae
xlat
aas
sub
xchg
and
and
sbb
addb
xor
dec
addr16
int
int
icebp
jno
scas
push
ds
pop
lods
lock
int
adc
pop
cwtl
les
push
and
out
lock
scas
mov
stos
hlt
push
loop
jge
cs
xchg
ja
rorl
insb
cmp
cmp
fucomi
mov
dec
addb
mov
fwait
xor
jae
test
xchg
cmp
les
mov
test
adc
clc
out
out
xorb
dec
scas
mov
rcll
in
push
out
push
push
fwait
insl
testb
inc
sub
inc
loop
mov
mov
call
mov
mov
ret
or
adc
lahf
or
push
test
cld
jnp
fwait
fwait
dec
cmc
bound
daa
cli
push
iret
push
mov
dec
sahf
movsb
lahf
les
sbb
jge
jae
sti
in
jo
andl
cmp
mov
into
sub
jge
cmp
rcl
addr16
inc
fnsave
rol
in
faddp
xor
mov
sbb
add
fdivrl
je
jns
popf
jle
xorl
pusha
dec
jge
insb
mov
imul
fdivrl
hlt
lcall
clc
insb
clc
in
mov
jmp
and
addr16
pop
repz
mov
push
jns
mov
dec
inc
shrb
cld
sti
xor
add
repnz
in
jnp
jae
mov
xor
xchg
stos
int
int
jbe
lea
adc
mov
int
int
and
pop
mov
ss
mov
xchg
adc
adc
inc
push
jle
inc
roll
mov
jno
ds
push
adc
jae
sti
in
jge
rol
addr16
push
fmulp
mov
fidivs
xchg
xor
int
sbb
mov
and
int
scas
aad
movsb
and
inc
mov
popa
movsl
ds
int
push
mov
and
sahf
aam
fwait
fwait
fwait
mov
dec
jno
sbb
int
add
sar
data16
repz
int
jbe
jmp
bnd
ltr
sahf
lahf
cwtl
jl
cld
sub
je
cmp
pop
cwtl
mov
sahf
in
xor
or
add
rorb
int3
ds
bound
push
js
mov
push
int3
xchg
jae
pusha
cld
scas
xor
inc
jo
int
jae
mov
cltd
addr16
stos
jae
int
int
bound
adc
jnp
in
xor
int
int
mov
loope
mov
int
int
fadds
comiss
inc
xchg
inc
xchg
sahf
fdivrl
lahf
mov
movsl
aam
mov
jg
clc
enter
inc
push
push
or
aaa
pop
lods
hlt
shrb
cmpl
aaa
aaa
aaa
insb
lret
cmc
fsubrl
daa
into
mov
aaa
xchg
es
dec
nop
pusha
push
adcb
jl
aaa
aaa
aaa
cltd
add
mov
cltd
sub
cmp
aaa
cwtl
inc
je
fs
clc
insb
outsb
clc
hlt
xchg
leave
mov
movsl
ret
out
mov
or
mov
out
out
pusha
nop
jnp
dec
inc
cmp
jmp
jg
out
incb
aad
and
jne
outsb
outsb
outsb
outsb
mov
pop
aas
scas
mov
or
jne
xchg
cmpsl
cmc
insb
outsb
vandpd
inc
repz
loope
lea
push
push
gs
loopne
mov
jmp
or
push
sub
sbb
ja
shll
out
cwtl
and
lock
jnp
mov
in
imul
fldt
popf
xor
loope
fucomi
outsb
scas
cli
jge
adc
and
mov
movsl
mov
push
mov
loopne
fucomp
sahf
mov
out
jle,pt
mov
out
push
test
inc
xor
fsubrp
add
adc
xor
bound
ret
mov
xorb
dec
add
mov
call
fisttpl
xor
mov
aad
mov
das
stos
sbb
aaa
ja
fimull
shr
adcb
ja
push
pop
lea
aaa
mov
add
gs
adc
aaa
xchg
daa
js
dec
clc
mov
outsb
pop
push
inc
scas
cmpsl
sub
push
or
pop
push
xor
outsb
outsb
xchg
repnz
gs
lock
test
mov
inc
mov
sbb
push
ds
sahf
jmp
cmpsb
inc
nop
loope
and
je
xchg
mov
add
mov
int
lret
imul
int
int
cmp
andb
inc
mov
and
push
adc
and
js
fisttpl
jmp
sub
sar
mov
sbb
jae
sti
pop
cmp
dec
jnp
rolb
scas
jae
out
jl
xor
mov
jae
jae
sub
movsl
int3
inc
lock
mov
ljmp
addr16
adc
jecxz
mov
jmp
sahf
pusha
push
pushf
push
mov
gs
int
fsubr
jmp
lea
aam
imul
cmp
jbe
push
push
rolb
je
lods
hlt
mov
pop
bound
cwtl
cld
xchg
pop
push
sub
cmpsb
icebp
adc
pop
out
divb
out
adc
fisubrl
out
test
in
mov
jo
xlat
addb
jl
inc
cmp
clc
mov
mov
cmp
fstps
je
mov
push
negb
js
or
sub
out
les
and
xor
into
jecxz
lahf
lods
iret
fs
insb
mov
push
jbe
call
outsb
scas
inc
adc
icebp
cmp
sahf
out
out
and
pusha
jmp
insl
ljmp
out
sbb
rorl
int
dec
inc
or
popf
int
int
ljmp
shrl
mov
adc
mov
add
mov
mov
test
pop
test
xor
fldenv
call
sbb
cmp
dec
mov
dec
mov
mov
cmp
fdivrl
xchg
test
mov
stos
xor
jae
jae
out
test
sbb
das
mov
jp
dec
fwait
push
adc
and
out
mov
int
addr16
dec
cmp
in
movb
jl
popf
sahf
mov
jl
shrl
enter
lahf
iret
in
mov
lahf
push
in
arpl
outsb
outsb
outsb
outsb
test
lcall
cmp
outsb
outsb
test
fxch
sbb
cmp
jge
outsb
xchg
fstp
mov
and
lret
pop
cmp
leave
add
ret
rcrb
and
add
jle
aas
adc
jp
inc
and
inc
loope
mov
jnp
push
mov
fmuls
ret
fdivrl
sub
in
xchg
lahf
mov
adc
ret
xchg
int
mov
clc
sahf
rcrl
and
push
iret
out
lods
stos
ss
push
ret
lahf
pop
push
iret
sbb
pop
and
mov
icebp
fwait
testb
cld
fdivrl
fildll
sbb
faddl
xor
xor
mov
push
mov
or
cwtl
bound
sbb
mov
sub
mov
jecxz
sti
dec
ficomps
push
lock
mov
fs
pop
lret
fstpt
fwait
fwait
pop
dec
test
jle
pop
sbb
shl
jb
stos
add
shrb
cmp
mulb
dec
xchg
fwait
movsl
adc
add
mov
pop
cmp
notl
lock
int
jae
mov
outsb
stos
fsubs
adc
pop
mov
mov
int
sbb
test
mov
add
xchg
sahf
mov
mov
sbb
push
inc
hlt
fstps
test
mov
adc
push
out
pop
cld
insb
outsb
fists
sub
repz
ret
sbb
pop
das
ds
mov
push
lods
inc
nop
andb
outsb
clc
mov
bound
arpl
xlat
out
fstpt
sub
mov
in
addr16
adcb
xchg
mov
cmpsl
int
int
out
push
pop
jg
xor
mov
int
insl
push
jp
cltd
jp
cmpps
lret
add
cli
decl
icebp
jnp
scas
clc
cmpb
or
jge
scas
inc
mov
daa
icebp
jae
test
xlat
push
stos
mov
iret
in
jae
cmp
pop
test
and
int3
jno
fstps
inc
cmpsb
push
dec
out
out
inc
cltd
cli
in
addr16
jae
inc
out
or
sub
cmc
inc
and
jle
in
in
or
insb
xchg
jns
nop
sahf
or
fcmove
inc
out
or
insb
mov
adc
mov
scas
jbe
aaa
aaa
pop
rcrb
ljmp
push
xor
jle
aaa
jecxz
or
push
xchg
cli
inc
andl
jecxz
inc
cld
sbb
jge
loope
or
dec
jb
push
sbb
cs
aam
icebp
mov
jns
push
ret
jecxz
clc
js
fistl
or
push
gs
hlt
inc
push
stos
jg
es
in
scas
xor
xor
aaa
mov
xchg
movsl
push
xchg
out
mov
orl
mov
jae
pop
ret
fcmovb
or
cmpl
jle
xchg
mov
push
insb
jne
or
fsubl
cs
icebp
xor
jno
xrelease
mov
push
or
mov
xchg
pusha
call
dec
sbb
lock
or
cmp
xchg
push
fnstsw
clc
xchg
pop
cmc
sbb
cmp
cmpsb
mov
xor
fcoml
mov
mov
cmp
lea
mov
mov
inc
roll
mov
test
mov
adcb
jp
insb
outsb
outsb
jb
pop
mov
gs
fbstp
sahf
sbb
pop
or
sar
insb
outsb
outsb
adc
mov
adc
mov
inc
loopne
push
inc
aaa
aaa
sbb
out
je
or
push
add
ss
aaa
aaa
filds
movsb
push
fldt
cmp
sub
adc
jge
outsb
lahf
aaa
or
push
stos
inc
rcl
idivb
add
into
les
imul
cmpsb
hlt
movsb
das
jecxz
loope
dec
incb
jecxz
adc
push
or
loope
shll
sti
insb
push
or
jg
out
andb
fs
dec
mov
outsb
jg
iret
daa
cmpl
push
shrl
mov
adc
aas
jnp
aaa
aaa
pop
cld
push
nop
je
stc
push
inc
clc
pop
jmp
clc
adc
add
sub
cs
lea
xor
call
add
jno
out
cltd
shlb
iret
mov
psrld
pop
xchg
push
out
outsl
jo
fwait
je
lahf
mov
js
xor
sbb
fisubs
jae
push
nop
inc
cmp
mov
iret
les
stos
outsl
sahf
stos
pop
sub
mov
mov
push
xchg
fwait
lods
cltd
hlt
add
outsl
loop
jae
ds
adc
popa
sahf
sbbl
aaa
aaa
mov
insb
arpl
push
jge
out
mov
adc
out
cli
and
dec
aad
mov
sub
lock
test
outsb
outsb
ret
mov
inc
roll
cwtl
pop
xor
and
jle
jno
sbb
fdivrl
dec
mov
add
xor
scas
jns
xchg
xor
pop
push
jg
rclb
pop
sbb
sar
fcompl
jne
mov
loop
cmpsb
test
sub
add
mov
out
iret
in
into
jns
or
inc
and
cmp
iret
pop
aam
dec
xchg
pusha
sar
cmpsb
out
idiv
lret
mov
mov
leave
push
xchg
scas
xchg
fwait
or
rcrb
inc
sarl
fwait
pop
dec
jae
pop
insl
mov
mov
adc
add
pop
mov
mov
cs
lods
inc
ret
dec
xchg
icebp
mov
aad
jne
mov
test
inc
xchg
push
ret
jnp
jne
imul
xchg
popf
sbb
or
in
cmp
outsb
outsb
outsb
mov
mov
and
jns
jae
frndint
fs
sbb
sbb
inc
shll
jae
inc
daa
mov
addr16
mov
in
nop
vaddsubpd
xchg
or
sub
jle
inc
xor
or
sbb
jae
jae
clc
adc
adc
popa
pusha
mulb
jae
push
adc
dec
call
int3
fdivp
and
test
jp
inc
mov
out
out
sarb
mov
out
out
adc
sub
stos
jbe
sahf
lret
out
out
aas
push
sub
mov
repnz
jns
and
xor
and
jae
iret
out
cli
xor
add
xor
addr16
rorb
adc
pop
inc
pop
mov
xor
xchg
fldenv
xor
xor
adc
xchg
rcrb
add
out
icebp
hlt
clc
fdivr
xchg
jne
and
cmp
xorb
xlat
outsb
scas
js
test
or
adc
outsb
outsb
outsb
test
popa
mov
sub
adc
fisttps
outsb
mov
sahf
cmpsb
xlat
test
lahf
xchg
iret
dec
vpunpckldq
fcmovb
push
into
int
std
fildl
pop
rorb
xchg
push
sub
push
fldt
ret
push
jns
cmc
fs
lret
dec
aas
fwait
dec
jle
loop
orl
int
int
mov
lret
xlat
xchg
stos
repz
int
dec
pop
jnp
daa
pop
adc
aas
fcmovnu
shr
mov
jnp
pushl
outsb
mov
or
out
ret
sbb
cld
insb
arpl
stos
dec
aaa
adc
adc
clc
out
stc
fsincos
sarb
pusha
pop
inc
xlat
out
out
sub
pop
lock
mov
mov
jmp
mull
xor
cmpsl
hlt
cmc
mov
jg
or
divb
adc
pop
fsubrl
insb
shlb
stos
cmpl
add
iret
out
sti
xchg
fcomip
iret
xchg
roll
in
xor
aaa
aaa
mov
sbb
imul
call
das
mov
mov
fdivrl
aaa
aaa
outsl
ret
inc
jmp
mov
pop
xor
psubq
xlat
sbb
lahf
inc
pop
aaa
out
push
xor
cmc
jge
lahf
test
dec
jnp
pop
pop
jae
pop
sahf
fcomi
mov
mov
rcrb
inc
mov
adc
jg
fwait
cli
insb
or
push
fwait
xchg
jo
fbstp
insb
outsb
outsb
shrd
sarb
sub
or
aas
icebp
lret
in
shl
iret
mov
jne
outsb
outsb
outsb
pop
push
and
ja
push
int
jge
outsb
das
test
pop
clc
cmp
mov
bswap
sbb
hlt
mov
loopne
rolb
int
mov
std
push
mov
dec
lock
int
pop
aam
mov
test
aaa
mov
shr
adc
in
sarl
js
push
push
lods
das
sub
clc
mov
movsb
add
push
adc
sahf
sub
inc
push
outsb
movsl
cmpsl
cmpl
dec
jb
iret
out
popa
jge
int
loope
das
iret
stos
add
insl
nop
xchg
gs
mov
insb
xor
or
aad
sub
fmull
cltd
jne
cltd
and
faddp
sti
ficomps
lret
mov
sti
add
cs
leave
pop
sbb
shll
aad
dec
dec
mov
sbb
cld
or
insl
mov
cld
and
shlb
orb
iret
int
popa
mov
cmc
adc
sub
leave
cmp
dec
arpl
aaa
cmp
insb
test
mov
arpl
xchg
gs
xor
insl
fbstp
sub
jmp
adc
insb
outsb
outsb
adc
inc
or
cld
cmp
stos
adc
sbb
decb
stos
dec
mov
mov
cmp
fistps
jmp
mul
ror
scas
jae
jnp
mov
pop
or
jnp
xchg
mov
loope
outsl
xor
test
or
mov
shll
and
inc
fistl
push
sarb
pop
or
loope,pt
and
cs
jmp
cmp
dec
jle
testb
sar
inc
adc
mov
imul
dec
shll
lods
push
sti
cli
fisubrs
cmp
mov
mov
hlt
push
jecxz
imul
cmp
and
jmp
mov
lret
repnz
scas
aas
fcomi
dec
inc
and
or
cmp
or
cltd
test
inc
dec
jg
rorb
addr16
fcmovnb
xchg
mov
fmull
lods
lcall
repz
fsubrs
cmp
in
jle
movsb
add
in
enter
nop
jmp
adc
fdivrl
lds
adc
aaa
lods
mov
push
test
mov
mov
sbb
dec
mulb
hlt
test
jge
mov
fldt
sahf
std
ret
cmpl
mov
jle
or
leave
lods
adc
hlt
gs
cmp
lahf
movb
mov
iret
int
dec
push
scas
cmp
cmpsb
stos
mov
lahf
fwait
cmp
push
fdiv
sbb
fwait
mov
xchg
jl
fsubp
mov
or
fs
push
push
pop
clc
popa
call
mov
enter
loopne
inc
movsb
dec
pushf
mov
mov
pop
dec
sahf
imul
int
daa
xchg
lock
leave
push
aad
and
cmp
insb
lahf
sbb
sub
out
lahf
bound
push
push
adc
aas
dec
jl
xor
fdivl
cmp
fiadds
push
pop
or
push
xor
aaa
aaa
aaa
push
xchg
scas
push
pop
dec
ret
insl
mov
jl
adc
aaa
aaa
aaa
pop
cld
call
mov
aaa
aaa
jecxz
out
in
jb
lret
lahf
xchg
ss
inc
mov
ret
and
int
in
stos
test
notl
pop
dec
xchg
jg
pop
int
int
xchg
popf
lods
shlb
lret
mov
fwait
iret
cmp
pop
xchg
pop
push
mov
subl
cltd
dec
xor
pop
dec
fcoml
dec
inc
pop
pop
mov
push
xorl
fnstcw
dec
inc
jge
gs
lds
jae
cmpsl
xor
xor
out
adcl
ret
in
aaa
aaa
jl
call
popf
addl
adc
mov
sti
inc
mov
aam
outsl
orl
nop
mov
mov
jl
or
push
sbb
push
jnp
outsb
outsb
bound
rcll
or
inc
test
icebp
jmp
mov
fdivrl
bound
les
shl
fdivl
pop
jp
jns
dec
addb
jg
mov
pop
ds
sub
sbb
dec
fimull
fwait
fwait
fwait
fwait
lret
inc
mov
movsb
test
mov
cmp
popf
and
inc
mov
fstpt
push
out
adc
fcomip
out
out
ljmp
stc
in
lock
rclb
psraw
dec
sbb
fldt
xchg
arpl
inc
or
loopne
cwtl
idiv
mov
shrb
mov
pusha
fwait
fwait
fwait
fwait
mov
jbe
sbb
int
or
divb
sub
fs
out
sbb
jbe
bound
push
or
jbe
add
das
cmp
xchg
xchg
push
outsl
insb
jae
pop
push
jno
jo
mov
iret
jp
push
xchg
rcl
jne
out
mov
mov
lahf
fwait
lret
jae
inc
sbb
pop
fisubrl
dec
jecxz
rcll
div
ss
aaa
aaa
mov
and
sub
xchg
inc
jl
fmuls
mov
jae
mov
test
fimull
out
pushf
int
int
aam
or
int3
fs
jo
int
int
inc
sub
arpl
lahf
int
push
insb
lret
jg
xor
fbstp
mov
aaa
aaa
popa
mov
fmuls
psubusw
lahf
outsb
outsb
outsb
outsb
cmp
sub
xor
test
outsb
outsb
stc
push
in
shll
mov
outsb
outsb
pop
ret
and
xchg
cmp
sti
insb
outsb
into
and
xchg
mov
adc
repnz
mov
pop
data16
es
arpl
push
cwtl
push
outsb
scas
mov
sbb
jmp
fistpll
xchg
stos
movsb
add
mov
pusha
outsb
outsb
pop
add
or
jbe
push
mov
outsb
outsb
xor
mov
mov
push
aaa
aaa
aaa
pop
inc
insl
sub
pop
repz
pop
inc
aaa
aaa
aaa
aaa
add
addr16
dec
fsubrl
xchg
inc
clc
add
mov
imul
jno
arpl
and
jle
stc
int3
xchg
lcall
mov
loope
and
and
xchg
bound
push
push
outsb
cli
jge
or
push
dec
test
push
jo
cwtl
jmp
js
outsb
push
out
sar
test
inc
pop
icebp
lcall
dec
jge
popa
test
cmpsb
jns
sub
lahf
int
cmpsl
push
pushf
dec
clc
xlat
xlat
out
lahf
fdivrp
inc
cmp
ret
sbb
test
mov
jg
xchg
fdivrl
es
xor
lret
out
mov
mov
mov
mov
inc
pop
adc
sub
push
sti
aaa
xor
jge
icebp
cmp
mov
sub
sahf
fildl
dec
mov
mov
mov
mov
fwait
imul
adcl
mov
inc
test
push
out
lods
mov
sahf
fucomi
ljmp
out
or
push
std
sbb
enter
fistpl
pop
and
sahf
nop
pop
jle
pop
pop
inc
lahf
or
das
imul
insb
in
cli
outsb
cli
push
lea
andl
jge
lret
push
aam
outsb
outsb
outsb
jbe
dec
xor
inc
loop
xchg
outsb
mov
incb
outsb
test
jecxz
repnz
movsb
mov
lcall
bound
or
mov
sti
loopne
sbb
fdivrl
xor
out
pop
sub
stos
ss
mov
fcoml
int3
in
push
mov
outsb
outsb
outsb
outsb
jle
jl
repnz
xchg
and
or
xlat
mov
rcl
xor
sub
icebp
fdivrl
test
lret
add
insb
stc
fwait
fstpt
xor
aaa
scas
cmp
test
int
lahf
fisubs
rcr
imul
mov
push
ds
sub
cmp
fcompl
ficompl
jne
push
jnp
cmc
fcompl
pop
outsb
ss
adc
mov
xor
sbb
mov
mov
adc
loope
inc
mov
mov
out
not
jne
rorb
lret
jo
pop
ficomps
sbb
lock
aas
adc
pop
mov
cwtl
bswap
add
jbe
jge
fwait
push
hlt
scas
and
bound
int3
xchg
cmp
aaa
nop
faddl
sub
std
insb
mov
jnp
sbb
xor
xor
add
inc
fsubs
push
xchg
lahf
out
fidivl
sbb
repnz
insb
and
outsb
outsb
outsb
outsb
dec
xchg
add
aad
cli
mov
fdivrl
jle
pop
test
cmc
and
jae
jae
std
das
loopne
sarb
addr16
test
in
fcmovb
out
sbb
push
mov
dec
jle
movsb
push
mov
jg
add
push
pop
cli
adc
or
lahf
dec
loopne
mov
roll
scas
mov
or
sub
fdivrl
adc
jns
cli
lods
cli
adc
clc
jae
sti
pop
cwtl
inc
pop
sbb
mov
lea
jae
jae
insb
add
mov
mull
jae
jae
ja
mov
movsl
gs
cld
dec
fxch
int
in
ret
push
scas
jp
fisubs
enter
out
iret
fwait
lock
mov
mov
push
faddl
cmpb
test
push
cs
add
fistps
cmp
mov
sti
fcompl
jge
arpl
ljmp
inc
ljmp
mov
dec
lcall
insb
outsb
outsb
adc
pusha
les
mov
pop
nop/reserved
jae
jae
or
iret
sti
movl
jae
mov
push
xor
movsl
xor
iret
sub
movsl
fadds
outsb
mov
jno
xchg
jb
sahf
ficoml
dec
loopne
adc
lahf
int
in
mov
clc
pop
nop
mov
loope
iret
out
pop
xor
loopne
fdiv
sbb
xchg
add
ljmp
ja
inc
cld
into
mov
push
cmp
dec
lahf
fwait
cli
add
xor
pop
aam
cmp
xor
xor
or
test
pop
push
test
sti
fmull
jecxz
mov
push
iretw
add
in
jae
push
stos
adc
out
scas
adc
xor
mov
sbb
int3
fs
add
mov
jno
pop
sub
or
pop
sbb
xchg
push
add
xor
or
mov
out
mov
mov
mov
add
outsb
pop
inc
fcmovbe
sub
gs
jg
mov
mov
xlat
repnz
mov
cmp
lods
or
pop
fistl
lock
mov
subl
fwait
fwait
outsl
aas
mov
icebp
dec
jo
ds
aad
jmp
arpl
xchg
adc
stos
cmp
int3
fwait
mov
inc
dec
sub
or
lock
aam
fwait
fwait
fwait
xchg
and
bound
fwait
fwait
fwait
jge
insb
hlt
fdivrs
out
fwait
fwait
fwait
repz
scas
mov
mov
xchg
cwtl
jbe
in
and
fwait
imul
int
int
dec
loop
lds
jns
pop
xor
setg
mov
adc
cs
push
mov
adc
inc
test
into
xchg
push
psubsw
xor
int
and
push
int3
or
push
mov
int
in
mov
shlb
or
cmc
dec
ds
aaa
aaa
xchg
sahf
mov
sbb
and
out
or
push
jmp
in
outsb
outsb
outsb
fildll
in
test
xor
or
mov
clc
fdiv
jnp
out
sahf
lock
pop
je
dec
mov
rcrb
or
cwtl
fwait
fwait
sbb
dec
js
mov
mov
movsb
aaa
jge
sahf
test
sahf
rclb
jb
jnp
cmp
sbb
xor
addr16
adc
es
fisubrs
icebp
or
lcall
xlat
mov
jae
sti
rolb
and
or
cmpsb
mov
jae
outsl
es
mov
mov
int
adcb
bound
pop
add
ret
adc
loop
insb
scas
xchg
cmp
push
mov
aam
out
mov
mov
es
call
mov
fs
ss
aas
cmc
adc
inc
stc
negb
inc
bound
or
movsb
insb
sub
sub
sbb
in
inc
push
mov
sub
out
es
fs
pop
pushf
lret
je
push
out
shrl
adc
mov
cli
lds
fnstenv
lret
shll
jo
jge
dec
outsl
lcall
jb
mov
pop
lret
mov
ljmp
fsubrl
sarb
push
cltd
ja
fwait
or
push
xchg
divb
xor
loope
dec
shl
push
fucomi
dec
xlat
rolb
mov
lods
mov
insb
outsb
lahf
fwait
xchg
mov
xor
and
mov
or
std
out
je
loope
push
lahf
fcomi
sbb
dec
pop
add
popa
sub
in
sbb
fsubl
pop
lock
cmp
xchg
or
icebp
mov
pop
inc
dec
data16
insb
pop
call
stos
into
mov
xor
mov
pop
shr
test
add
cmp
lds
mov
xor
mov
jbe
mov
mov
call
lea
call
cmp
pusha
mov
out
scas
pop
inc
clc
jecxz
std
mov
in
xor
pop
adc
jl
cmpsb
test
adc
xchg
push
dec
bound
inc
add
es
movsb
ss
vdivpd
sub
cmp
cmpsb
iret
out
imul
or
xchg
sbb
sahf
scas
dec
loope
pop
adc
mov
add
push
pop
or
mov
aas
fwait
cld
jae
dec
lahf
insb
sub
sbbb
cmp
insb
ja
inc
ltr
xorl
fstpt
add
addr16
dec
cmpsb
cmp
in
push
push
repnz
ret
inc
lahf
xchg
jmp
and
jbe
sub
jae
and
mov
ret
sahf
negl
xchg
push
mov
ret
xor
insb
mov
push
mov
jmp
in
fbld
popf
and
mov
ret
xchg
inc
pop
clc
gs
jecxz
mov
imul
xor
lods
out
mov
jbe
or
insl
inc
lock
mov
out
add
adcl
outsb
outsb
outsb
or
bound
pop
rcll
js
aaa
jl
jmp
mov
jge
push
shll
xchg
jo
dec
mov
xor
adc
out
xchg
add
fcmovne
idivb
sub
arpl
mov
cltd
sbb
inc
insb
outsb
aas
fwait
pushl
xor
test
mov
cmpsl
lock
inc
push
mov
out
xchg
repnz
pusha
pop
push
inc
jl
cmp
imul
sbb
out
addr16
rcll
in
pop
fadds
mov
adc
mov
xchg
out
xchg
in
ljmp
xchg
fcmovne
out
and
cmp
ljmp
addb
lahf
fwait
fwait
fwait
les
test
xor
test
adc
mov
mov
imul
out
clc
jae
adc
cmp
and
xchg
rcl
loope
inc
pushf
fistpl
lds
pop
cwtl
push
push
sti
pusha
cltd
call
jo
mov
mov
inc
ret
jae
or
mov
orb
jae
jae
push
shll
aad
jae
jae
pusha
mov
add
or
fisubs
mov
jae
fwait
mov
and
push
mov
int
pop
jno
test
adc
jbe
outsb
xor
aaa
aaa
aaa
adc
loop
mov
lods
nop
lahf
fwait
mov
inc
iret
jbe
je
les
dec
push
jge
add
cmpsb
rclb
daa
ds
cmpsb
enter
aaa
aaa
mov
clc
cmp
out
lea
sbb
pop
cwtd
loopne
aaa
aaa
aaa
js
jge
dec
js
dec
outsl
or
ss
aaa
mov
pop
mov
loopne
in
arpl
rcrb
adc
clc
mov
xchg
xchg
jecxz
repnz
adc
out
adc
fiaddl
push
jl
cmp
pop
adc
aas
jne
cld
xor
adc
push
int3
push
sbb
shrb
xor
pop
and
inc
adc
mov
cld
and
fiadds
lods
jae
and
push
adc
es
int
jne
lods
ret
mov
jp
int
in
adc
inc
cmp
and
sub
int
pushf
repnz
test
or
ds
jle
mov
stos
clc
cltd
jne
fwait
push
sti
iret
addr16
ss
mov
aaa
xor
sbb
test
imul
push
or
negb
out
mov
fidivl
loop
insb
pop
inc
sub
mov
call
lods
bound
subl
aaa
aaa
mov
cmp
pop
jg
mov
ret
sti
lret
cmp
mov
in
addr16
or
jmp
adc
enter
test
mov
lock
xor
fwait
fwait
fwait
lods
sbb
or
jbe
cwtl
aam
fwait
fwait
fwait
fwait
mov
mov
daa
pushf
fwait
fwait
fwait
sti
sub
dec
add
cmp
mov
cmp
roll
push
and
dec
mov
mov
sbb
pop
dec
notl
iret
insb
xchg
cmp
mov
sub
stc
mov
mov
clc
cmpsb
es
jae
jns
in
stos
fdiv
mov
cs
nop
jnp
xchg
out
stos
lahf
fimuls
es
xor
sub
out
out
dec
enter
mov
mov
adc
out
mov
xor
add
dec
push
mov
stos
in
adc
mov
int
pop
inc
fists
sahf
mov
in
sti
pop
adc
jb
xchg
cs
push
sbb
xchg
xorl
pop
cmc
mov
mov
mov
int
push
iret
addr16
pop
pop
mov
fidivrs
sbb
test
bound
mov
cli
fdiv
and
mov
pushf
xor
push
xchg
fidivrl
ss
aaa
or
push
scas
push
jns
js
imul
fisttps
insb
or
sbb
ljmp
movsb
push
xorb
jl
lods
xor
lock
mov
xor
xorl
loope
inc
cld
clc
inc
add
jno
jnp
push
aam
fldenv
bnd
in
fdivr
call
push
xor
pop
in
push
scas
push
sbb
clc
jg
icebp
mov
mov
jle
jnp
je
push
cmp
ss
sbb
lods
mov
out
out
dec
push
jle
fiadds
xchg
push
iret
out
les
mov
testb
dec
jl
jbe
sub
xchg
fadd
outsb
das
lock
mov
addr16
fidivrl
dec
outsb
outsb
outsb
outsb
xchg
xchg
ret
lfs
dec
xlat
rclb
mov
rolb
mov
filds
jb
loop
cmpsb
je
lcall
sub
ds
and
pop
in
push
popa
dec
mov
mov
shl
inc
or
int3
je
ss
aaa
aaa
jne
cmpsl
mov
pusha
in
out
fwait
fwait
cmp
les
push
inc
or
dec
inc
adc
mov
adc
int
pop
js
iret
jno
and
push
xchg
repnz
mov
pop
jae
sti
js
inc
inc
push
sub
dec
cmp
mov
sbb
insb
outsb
cs
or
insl
cld
or
sub
les
outsl
lret
mov
and
call
mov
sbb
das
lahf
sahf
inc
mov
add
or
nop
negb
adc
cld
push
ret
aaa
aaa
jl
into
lock
ret
dec
cld
sub
test
test
mov
data16
bound
ljmp
and
add
mov
cmpsl
test
cli
sbb
and
enter
cs
outsl
fdivrl
xchg
mov
outsb
jae
cmc
dec
xchg
mov
hlt
insb
addr16
push
or
or
inc
inc
hlt
xchg
mov
dec
ljmp
test
dec
mov
inc
xor
out
or
int
int
not
add
js
into
les
lahf
out
or
adc
and
and
fisubs
adc
out
out
mov
mov
and
jmp
out
shlb
mov
dec
dec
out
out
fidivrs
adc
inc
push
iret
cli
xor
mov
fs
outsb
xchg
cmp
ja
fcompl
sub
fstl
sbb
clc
fcompl
loopne
frstpm(287
jecxz
lahf
int
inc
rclb
sarl
cmp
jb
and
insb
repnz
pop
ljmp
mov
rorb
xor
outsb
pop
cld
push
sub
inc
lahf
rolb
pop
jl
lret
inc
xor
scas
lahf
mov
jl
scas
mov
icebp
push
nop
out
fwait
fwait
fwait
mov
and
pop
cli
cmp
xchg
fwait
mov
in
inc
ss
icebp
nop
inc
sti
faddl
scas
fwait
inc
sbb
int3
push
jae
or
icebp
mov
in
dec
fsubrl
xchg
xchg
outsb
scas
clc
flds
dec
rclb
sub
jbe
jge
rcll
mov
mov
out
out
push
mov
mov
adc
jae
jae
pop
push
adc
iret
xor
sbb
daa
lret
loopne
ds
ss
sti
pop
inc
jle
push
cmpsl
or
cmp
fistl
add
push
addr16
mov
in
aaa
jns
insb
sarb
jae
jae
mov
das
sar
ds
and
cs
out
mov
movsl
inc
into
jle
addr16
jae
movb
jp
lahf
int
in
push
aaa
pop
mov
mov
sub
cld
cmp
aaa
mov
out
push
jmp
cmp
inc
dec
aaa
lods
and
cld
das
mov
inc
je
dec
push
ja
aaa
aaa
jge
inc
imul
cmp
data16
fsubrs
jmp
scas
fsubl
pop
adc
push
fstp
pop
scas
push
mov
or
add
ss
insb
mov
es
outsb
add
ficomps
js
fidivrs
inc
dec
mull
cmp
xchg
jno
lahf
int
dec
push
pop
dec
mov
dec
or
push
jae
fdivrl
jecxz
xchg
jle
notl
in
cmc
mov
adc
and
scas
ljmp
mov
pop
cmp
mov
xor
pushf
jnp
loopne
xor
jl
outsb
and
add
call
outsb
outsb
sub
cmp
mov
test
outsb
outsb
out
rclb
mov
mov
push
sbb
sbb
and
inc
leave
clc
insb
scas
js
sbb
std
scas
mov
push
ss
cmp
and
push
adcb
push
ss
std
cmp
jg
aad
imul
out
or
add
hlt
arpl
bound
cmp
int
xor
pop
out
test
mov
xchg
stos
iret
xor
ror
add
adc
mov
mulb
bound
shl
adc
fstps
cmpsl
cmpl
subl
shll
mov
mov
loopne
daa
icebp
cmpb
faddl
loopne
mov
dec
dec
test
test
or
ds
dec
out
mov
adc
push
jo
enter
cmp
mov
in
iret
loop
or
insb
lods
imul
outsl
jbe
jp
xchg
mov
add
jb
pop
lea
jl
pop
js
push
mov
sti
cmp
iret
out
in
jmp
ljmp
scas
add
lcall
stc
ljmp
fdivs
adc
iret
mul
cs
sbb
sub
ss
xlat
pop
into
les
push
xor
ja
push
jnp
jge
mov
fwait
jmp
xlat
add
out
mov
aam
sbb
pop
aad
outsb
aas
dec
dec
jb
sub
fs
outsb
outsb
outsb
sbb
lcall
test
rcr
cld
scas
dec
or
sbb
or
in
mov
outsb
push
stos
inc
or
inc
xchg
push
jl
cltd
pop
sahf
out
out
jp
fcmovbe
iret
testb
outsb
outsb
scas
mov
es
loopne
aaa
inc
xchg
xchg
push
sub
fsin
hlt
mov
stos
mov
sub
mov
and
xchg
lret
inc
mov
pusha
cmpsl
sbb
adc
nop
mov
je
pop
aas
fwait
fwait
dec
mov
pop
adc
cmp
shlb
jge
sbb
pop
xor
iret
divb
mov
outsb
outsb
pop
cmp
push
mov
mov
testl
outsb
sbb
cmp
add
cmpb
in
adc
jno
pop
lock
mov
call
dec
pop
jmp
pushf
jno
inc
jge
sbb
test
inc
sub
mov
xlat
out
repz
jg
aas
lahf
aam
mov
ret
fdivl
jae
mov
lods
xchg
cs
xor
dec
call
sti
adcl
sbb
xchg
fwait
pop
in
enter
test
leave
fdiv
and
xchg
mov
mov
fcoml
dec
loope
lret
and
fdivl
mov
arpl
clc
sub
jno
imul
pop
pop
loop
mov
xor
cmc
jecxz
clc
in
jo
jge
aas
adc
cld
iret
cli
arpl
repnz
and
sbb
pushf
outsb
outsb
outsb
outsb
or
cmpsb
push
push
mov
into
ja
std
insb
outsb
or
sub
pop
insl
cmp
sbb
jae
jae
out
jmp
mov
push
rcrl
sbb
loope
addr16
mov
and
pop
pop
pop
imul
je
mov
xchg
sub
clc
add
mov
jmp
xchg
repz
fcmovnbe
sahf
addb
add
std
insb
outsb
mov
pop
mov
push
mov
idivb
push
rcrl
mov
lds
ror
cmp
in
push
mov
lds
cmp
dec
pop
aam
les
fistl
es
rcr
popa
outsl
aaa
mov
in
jmp
fsubrs
test
out
das
movsb
out
mov
aas
push
addl
cwtl
mov
jl
sub
maxps
data16
inc
mov
daa
clc
mov
adc
int
xor
fildl
lahf
int
inc
mov
in
mov
inc
hlt
sub
dec
or
hlt
mov
or
test
xor
or
fidivl
mov
enter
nop
fistpl
mov
xchg
stos
mov
pushf
fwait
shll
xorb
lock
jnp
cmpsl
mul
mov
insb
outsb
lahf
icebp
fxch
and
xor
outsl
std
pop
inc
cmp
sub
les
arpl
mov
mov
inc
ret
jle
dec
add
fcompl
bound
fdivr
sub
jecxz
add
jbe
sarl
out
adc
cltd
mov
or
sbb
int
mov
jb
mov
cld
xchg
mov
jp
imul
jae
adc
xor
mov
pop
mov
jae
dec
inc
pop
push
out
mov
jg
sbb
jae
jae
inc
mov
jns
sub
loope
je
popa
js
fistpl
push
out
xlat
ret
mov
call
iret
shlb
mov
aaa
aaa
ja
dec
push
xor
or
fnstsw
cmp
pop
mov
lds
mov
adc
dec
xor
outsb
xchg
ret
ret
cmp
outsb
outsb
jno
dec
inc
dec
aam
es
dec
mov
pop
jle
push
lahf
popa
adc
mov
xor
les
js,pt
mov
sub
push
sub
sbb
int
jnp
aas
ficomps
loop
rorb
mov
andb
lahf
int
push
jb
mov
sub
add
fwait
fwait
fwait
fwait
ja
rcl
cltd
addr16
xchg
imul
fwait
pop
adc
in
in
mov
jecxz
mov
xchg
or
jae
push
and
dec
mov
rclb
xchg
popa
push
ds
cmp
mov
mov
mov
int3
fidivrl
cmp
into
out
add
movsb
outsl
jecxz
lahf
fwait
sbb
cwtl
dec
mov
or
nop
loop
mov
cmp
xchg
nop
mov
cltd
insb
vcvtpd2dq
cmp
sbb
ret
jae
mov
xor
rclb
mov
and
adc
cmpsl
xorb
out
in
cmc
xchg
inc
pushf
xor
sub
sub
out
out
cmp
or
jb
outsb
outsb
outsb
pop
jp
xor
clc
enter
or
xlat
cld
insb
outsb
outsb
mov
jmp
cwtl
mov
mov
call
sub
push
xchg
mov
es
sbb
outsl
adc
outsb
outsb
mov
mov
orb
xchg
and
cltd
and
xchg
adc
out
jbe
cs
sub
push
ficoml
jecxz
jae
push
lcall
pop
movsb
pop
out
mov
lcall
mov
iret
out
dec
mulps
int
push
test
scas
iret
int
leave
test
sub
negb
lock
jne
mov
sbb
mov
push
sub
in
xchg
test
fcmovne
adc
scas
and
adc
jecxz
xor
cld
add
call
out
and
fmull
jnp
aas
bound
jbe
shll
fsubrl
push
aaa
pop
idivb
sub
clc
xchg
je
test
test
sahf
pop
dec
xorb
iret
int
dec
ds
js
sub
mov
fidivrl
pop
je
aad
lds
cli
in
arpl
loope
xchg
lahf
cmp
gs
sbb
xor
fcomps
out
cmc
add
jmp
push
insl
mov
loope
faddl
ret
sub
mov
jecxz
or
fstps
jecxz
out
ficoms
or
stos
insb
outsb
scas
clc
push
movsl
sub
inc
push
lahf
fsubl
xor
add
cwtl
push
jl
addr16
stc
cli
rcrl
xor
aaa
aaa
inc
sub
lcall
std
insl
sbb
call
push
xchg
lock
rorl
hlt
rcl
scas
sbb
or
push
jp
js
xor
push
daa
aaa
aaa
aaa
aaa
pop
jecxz
insb
dec
dec
inc
ja
jge
scas
mov
and
inc
test
cmp
xchg
stos
insl
aaa
aaa
mov
ret
test
sbb
jo
int3
pop
lds
pop
jmp
cmpsb
or
test
sub
in
mov
dec
push
outsl
cmpsl
inc
out
and
fisubs
test
sti
insb
cs
test
pop
lret
or
mov
fcompl
imul
les
cmpsb
mov
in
jns
fwait
mov
in
sbb
repnz
fwait
fwait
fwait
fwait
jnp
mov
lret
call
into
xor
gs
aad
imul
inc
jl
push
fcoms
push
mov
clc
insb
outsb
mov
inc
es
nop
jge
bound
jae
mov
sub
add
stc
fmulp
in
imul
lods
test
xlat
rolb
sbb
sbb
dec
hlt
aaa
aaa
aaa
mov
insb
repnz
test
jne
insl
and
cmp
sbb
out
repnz
dec
pusha
dec
dec
fidivrl
or
sub
xlat
out
mov
out
cltd
mov
daa
loope
pop
pop
jge
push
add
test
ret
fwait
fwait
into
jecxz
mov
outsl
insb
out
sub
mov
shl
scas
test
xchg
test
cmpb
out
out
movd
jecxz
leave
shll
sti
ds
out
push
jbe
adc
cmp
dec
jge
loopne
testl
mov
sbbb
fisubs
add
sub
sbb
push
and
stos
mov
add
xor
xor
cld
add
icebp
sbb
mov
sub
or
dec
pop
mov
jmp
std
fadds
push
inc
pop
sub
pushf
jl
cmpsb
jmp
mov
cmc
pushl
mov
test
outsl
xchg
out
xchg
in
insb
mov
clc
dec
mov
fnsave
xlat
sbb
mov
shlb
xor
pop
js
fsubl
mov
cld
mov
aas
mov
test
into
fwait
cmpsl
repz
pop
jmp
dec
adc
mov
add
mov
jge
insb
sbb
fildll
mov
mov
jecxz
call
test
pop
push
repnz
insb
push
dec
sub
sbb
and
mov
mov
mov
sub
mov
orl
call
stos
cmp
pop
loop
movsl
adc
aad
cmp
mov
cmp
xchg
call
sbb
inc
cwtl
sbb
les
imul
hlt
aas
xchg
xor
ret
ss
or
subb
cmp
xchg
push
ret
dec
inc
shrl
push
jl
lcall
jne
mov
push
gs
adc
jg
aad
js
mov
jno
sti
sub
jecxz
cmpsb
ja
push
notl
scas
push
mov
xchg
xchg
out
rcr
xchg
dec
enter
and
iret
mov
adc
pop
dec
sahf
push
imul
call
inc
xchg
fwait
sti
lahf
mov
cli
cmp
fldcw
popf
and
lock
pushl
pop
xchg
push
jb
dec
push
fsub
daa
lock
push
or
loope
aam
push
dec
cmp
pushl
nop
sbb
lret
mov
inc
out
test
sahf
es
icebp
jg
call
cli
sub
jbe
xor
ret
add
incl
sbb
fwait
enter
push
mov
jb
adc
lds
mov
xor
push
fdivr
decl
nop
jae
jge
lods
clc
mov
sub
mov
and
mov
ljmp
ret
cmp
xchg
dec
into
lcall
dec
rclb
in
push
jns
mov
clc
int
jmp
rorb
lods
push
cmp
cmp
popa
insb
cmpsl
xor
jmp
push
lret
pushf
add
in
pop
jno
pop
popf
mov
dec
cmp
xor
jne
in
adc
push
test
push
dec
shrl
aaa
cmpsb
test
cs
inc
jg
insb
out
mov
fadds
mov
int3
xchg
pusha
xchg
push
jg
decl
or
sub
clc
or
xor
popf
mov
into
inc
insl
xchg
ret
or
dec
cli
jmp
dec
dec
sbb
out
ds
sbb
decl
jb
out
xchg
fucomp
adc
lods
sub
in
mov
mov
nop
cmp
mov
jg
std
pushl
testb
rorb
shlb
mov
fadd
push
lret
pop
repz
bnd
scas
movsl
lahf
mov
add
mov
lcall
inc
loop
andb
jbe
jae
ret
pop
xor
leave
pop
ficomps
push
cli
and
jmp
loope
lds
lea
adc
stos
jno
in
pop
rcll
inc
cmc
js
sbb
push
outsl
cmp
or
jae
mov
add
push
mov
xor
xor
decl
invd
dec
mov
pushf
mov
jns
cld
dec
pop
sahf
inc
sub
sbb
jmp
cltd
xchg
or
jnp
shll
or
pop
dec
cltd
mov
je
or
and
pop
scas
outsb
jg
orb
inc
clc
pop
jge
aad
ds
adc
fildl
call
in
incb
jb
push
jmp
cmp
mov
cmpsb
call
arpl
imul
cmpsl
das
or
ror
ds
dec
dec
loopne
decl
cs
mov
add
add
mov
push
jne
enter
pop
cltd
xchg
jo
pop
pop
or
lods
inc
aas
in
ljmp
insl
mov
sbb
pop
inc
sbb
inc
mov
sbb
inc
scas
ljmp
xchg
cmpsl
push
xchg
and
outsl
inc
ss
mov
jmp
mov
pop
nop
outsl
ret
pop
into
jge
cmp
xchg
mov
in
clc
jmp
cmpsl
nop
lret
leave
fcos
movb
mov
add
mov
rol
ljmp
mov
dec
cltd
cld
mov
mov
sbb
rolb
or
in
imul
outsl
cli
ljmp
pop
jmp
out
sub
sbb
mov
cmp
dec
decl
cmp
xchg
je
cmp
loope
xchg
add
call
pushl
cmp
xor
loope
inc
movsl
adc
fists
aam
dec
jno
fistpl
xor
incl
sahf
add
repz
cs
cmp
ffree
push
mov
pushf
int3
jecxz
hlt
pop
jle
add
sub
mov
xor
mov
lcall
ficompl
mov
mov
lods
das
mov
mov
push
xchg
inc
cmpl
mov
dec
add
add
mov
jecxz
dec
xor
jns
dec
or
xor
testb
cmp
push
cmp
push
push
jb
pop
call
mov
mov
inc
in
cmp
pop
push
adcl
and
decl
pusha
jmp
sbb
push
test
fdivrl
inc
std
loope
mov
jb
push
inc
int3
aaa
ds
out
lcall
popa
mov
sub
stos
je
jp,pn
sub
inc
andb
xchg
imul
inc
movsb
sahf
jl
mov
inc
cmp
lcall
lahf
push
and
push
sub
out
pusha
out
mov
out
sub
push
arpl
push
mov
lahf
arpl
jne
mov
mov
std
ret
out
clc
pop
aas
adc
mov
in
adc
cmp
inc
mov
dec
lods
jmp
pop
loopne
sub
mov
xchg
inc
adc
add
mov
and
push
sahf
sbb
mov
push
ds
mov
jb
lea
aam
mov
sar
incl
xor
mov
mov
sahf
dec
push
xchg
lea
js
rcrb
dec
hlt
ja
call
jg
popf
insl
sbb
popf
mov
loop
xor
ffreep
aas
ret
sub
push
mov
test
lret
cltd
loope
repz
in
sub
call
cld
mov
xchg
mov
jbe
mov
loope
adc
cs
cmp
dec
repnz
idiv
gs
out
pop
aaa
fnstcw
in
mov
push
mov
sub
jmp
pop
push
xchg
psubd
iret
jecxz
decl
repnz
pop
mov
mov
pop
sarl
push
lds
cwtl
or
push
add
or
pop
imul
movsb
jg
pushf
pop
adc
fistl
ret
addr16
mov
enter
dec
adc
lcall
jmp
xor
dec
cli
das
cmp
call
jb
icebp
dec
push
out
scas
cmp
cmp
std
outsb
pop
lret
xchg
sbb
decl
or
dec
js
out
jmp
adc
cmp
fbld
dec
gs
pusha
pop
dec
mov
and
jnp
aam
addr16
pop
repnz
leave
push
xchg
pop
or
add
xchg
cmp
int3
mov
dec
xor
ljmp
movb
addr16
or
jmp
fdivl
push
or
rcll
adc
scas
clc
decl
inc
push
mov
js
out
adc
jne
out
aas
xor
cli
ljmp
push
add
testb
or
and
xchg
imul
pop
lcall
scas
xchg
test
sub
mov
rol
jg
lcall
decl
jl
or
ss
jns
fbstp
xchg
bound
sbb
ret
xchg
and
call
das
mov
jno
mov
jg
pushf
leave
loopne
sub
mov
pop
add
mov
repz
pop
adc
jp
xchg
test
shrb
popf
jl
rclb
int3
das
cmp
test
mov
incl
cmp
cmp
pop
inc
test
pop
idiv
push
in
pop
mov
pop
ret
pushf
lock
or
out
fcoml
cmpsb
mov
mov
xchg
inc
mov
jg
in
inc
scas
pop
adc
and
outsl
clc
pushl
add
adc
and
call
pushf
xchg
mov
push
mov
mov
push
push
mov
gs
clc
jns
test
in
jns
leave
je
pop
mov
fsts
adc
decl
mov
js
mov
mov
cmp
incl
bound
stos
cmp
mov
mov
pushf
jno
popa
xchg
mov
sub
fmuls
and
loopne
push
es
aad
js
aas
test
fldt
fldenv
inc
xor
and
arpl
mov
stos
sbb
jmp
pushl
ffree
mov
mov
push
fldcw
sbb
stos
dec
nop
in
int
decl
sti
test
mov
cmpsl
mov
xchg
lock
and
les
lcall
lods
mov
stos
mov
addl
lods
into
mov
js
push
ljmp
ss
pop
jnp
fwait
cltd
pop
scas
add
xlat
pslld
dec
xor
popl
mov
xchg
jp
sub
dec
pop
jmp
dec
pop
dec
lcall
ja
dec
push
mov
inc
inc
test
pop
mov
push
mov
cmp
iret
adc
adc
sti
mov
incb
inc
sub
mov
sbb
and
ret
or
incl
mov
mov
test
xchg
in
add
mov
xchg
mov
mov
inc
dec
jne
dec
lret
add
nop
inc
or
xchg
push
pop
insl
jp
push
adc
or
push
mov
aam
shll
dec
dec
dec
scas
inc
call
inc
clc
jne
leave
imul
sar
inc
mov
out
jbe
addl
rorb
push
pop
add
mov
jmp
test
add
add
xor
out
sti
xor
add
add
stc
cmp
ret
and
inc
test
adc
mov
add
cmc
pop
mov
xor
mov
inc
and
or
pop
push
xchg
outsb
sbb
daa
clc
dec
and
add
bound
divl
or
sbb
aam
push
push
negb
push
jg
xchg
xor
sub
push
push
push
xor
inc
jbe
and
mov
loopne
enter
adc
mov
in
mov
addl
loop
test
inc
adc
xor
mov
inc
add
pop
sub
pop
insb
fsubl
gs
int
out
fnstenv
mov
stc
and
imul
not
notb
cmp
sbb
enter
cmpsl
fnstenv
movsb
shlb
mov
fwait
mov
lock
add
cmp
jg
and
pop
roll
mov
cmpsl
setno
xchg
lods
xchg
xor
addr16
les
call
out
mov
xchg
sbb
push
inc
mov
cmpsl
adc
adc
pusha
enter
test
es
pop
jno
test
push
push
jno
fcmovnbe
xchg
icebp
push
pop
pop
pop
andb
nop
iret
fcoml
or
data16
insb
push
xor
call
mov
jo
mov
shl
xchg
das
xchg
jl
les
xchg
adc
push
dec
pop
fbstp
push
or
jle
xchg
mov
xchg
inc
call
lahf
mov
outsl
xchg
push
inc
push
outsb
jbe
dec
jo
push
jp
add
jno
dec
pop
dec
inc
fs
popa
imul
adc
and
enter
das
add
pop
xor
mov
push
add
fldt
ds
dec
pop
and
add
loopne
mov
jg
int3
enter
enter
fcomp
fxch
loopne
add
pop
out
mov
push
jne
je
insl
and
and
popa
je
xor
jmp
xor
xor
xor
ss
cmp
inc
inc
inc
sbb
xor
pop
inc
push
push
push
sbb
add
out
mov
jbe
ja
addb
iret
sbb
rolb
add
fsubrl
mov
jg
or
or
dec
out
int
add
and
arpl
jns
aam
in
hlt
cld
cmp
sarl
or
sbb
repz
repz
cmp
dec
iret
repz
push
pop
fs
je
cmp
repz
mov
rep
mov
int3
outsb
pop
cmp
aam
add
add
add
jae
gs
pushf
int3
mov
dec
hlt
test
inc
push
addps
inc
sahf
pushf
mov
imul
mov
mov
xor
aam
insl
bswap
xchg
daa
adc
mov
outsb
push
mov
rcrl
and
rol
or
push
sahf
ja
movsb
dec
lock
test
test
enter
cmp
out
adc
and
inc
iret
repz
push
pusha
insb
adcb
mov
add
adc
movsb
clc
ss
les
adcb
add
push
popa
push
addr16
sub
dec
dec
push
push
pop
adc
dec
rcrl
cmpb
addb
insb
popf
mov
addb
push
shl
fidivs
dec
rorb
jmp
adc
insb
mov
dec
and
push
out
push
lcall
dec
dec
jle
cmpsl
push
xor
lock
mov
jns
stc
mov
or
push
add
lahf
out
sahf
or
add
dec
jns
repz
and
push
cmp
mov
sahf
out
or
and
iret
cmp
scas
push
adc
repz
repz
out
sahf
out
dec
or
inc
sahf
out
sahf
adc
pop
nop
jns
out
add
push
mov
fiadds
lahf
out
pop
loopne
fistps
hlt
push
add
cmpsl
jge
dec
push
adc
jns
out
inc
push
pop
or
xlat
popf
jo
in
push
add
add
cmp
repz
xor
dec
iret
repz
andl
repz
lods
mov
iret
repz
clc
mov
push
out
sahf
cmpsl
mov
pushf
out
sahf
pop
out
jo
mov
ret
mov
mov
adc
mov
push
out
cmp
mov
xor
push
punpckldq
fldt
pop
ret
add
jle
add
ss
adc
sbb
nop
pop
pop
or
jbe
sbb
not
js
fimuls
in
sbb
pop
repz
das
add
rolb
push
insb
add
push
cmpb
addl
mov
out
add
or
and
inc
iret
repz
push
dec
std
push
stc
icebp
loope
lret
roll
out
clc
lock
sbbb
test
inc
xor
or
cmp
dec
inc
add
lcall
jg
mov
cs
jae
dec
mov
shrb
sbb
and
adc
das
out
pop
fbld
insb
pushf
pop
mov
outsl
lahf
pop
or
cmp
add
xor
or
cmp
pop
inc
aaa
testl
dec
mov
ja
call
adc
sub
sbb
daa
jmp
pop
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
add
xor
push
into
incb
shll
or
int
std
addb
mov
jle
inc
mov
lea
jge
loop
shrb
out
push
fisubs
loope
shrl
in
sbb
push
scas
outsb
sahf
pop
mov
insl
popf
pop
or
cmp
push
testb
cmp
add
lds
jp
inc
mov
mov
jns
inc
mov
sub
sbb
es
sub
sbb
and
in
aad
push
pop
cmpsb
xchg
push
test
gs
push
mov
in
fistpll
lds
push
inc
dec
push
dec
xor
pop
and
jae
push
mov
sbb
sbb
push
bound
mov
inc
sub
mov
push
sbb
push
and
mov
fldcw
data16
ss
andb
sbb
or
cltd
mov
push
sbb
cmpsb
push
mov
push
ss
inc
lock
aas
out
popa
dec
mov
xor
aas
lret
xchg
scas
out
aas
stos
adc
shl
aas
aas
cs
cmp
jmp
jnp
push
loope
pop
stos
jb
push
test
add
adc
cmp
lahf
or
daa
iret
adc
sbb
popf
add
and
jns
out
xor
and
sahf
out
sahf
adc
push
pop
push
adc
sbb
sub
cmp
jns
out
xor
and
sahf
out
sahf
push
movhps
and
jns
cmp
xor
out
sahf
out
pop
daa
cs
cmp
ss
aaa
jns,pt
sub
adc
fcmovne
cmp
adc
out
or
mov
daa
aaa
das
or
ja
ds
cmp
cmp
mov
push
xchg
aaa
repnz
jbe
pop
inc
cmpsb
insl
addr16
repz
jbe
xlat
inc
cs
push
iret
pop
xor
outsl
jns
out
jns
js
dec
pop
bound
arpl
adc
das
pop
lock
insl
daa
pop
aaa
adc
mov
aas
sbb
cmp
mov
rcr
pop
add
add
sub
add
add
push
pop
or
or
stos
test
add
add
add
add
add
add
add
jo
add
add
push
adc
pop
and
xor
cld
decl
and
rcll
bound
push
pop
sbb
cmpl
dec
ret
sub
jns
jbe
incl
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
inc
ret
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
lcall
clc
stc
cli
add
add
adc
decb
add
lahf
adc
push
pop
popa
jno
and
fwait
outsl
or
xchg
mov
lock
sbb
loope
icebp
imul
add
adc
aas
stos
jmp
adc
pop
push
inc
jg
mov
adc
sub
mov
mov
test
aaa
cmp
ja
ficoms
xor
xor
and
xchg
dec
add
ret
cli
cmp
mov
adc
push
out
cs
incb
jns
fs
pop
cmp
out
dec
mov
push
push
dec
scas
mov
outsl
push
mov
mull
push
inc
fsubl
mov
es
inc
adc
negl
push
add
or
or
cmp
jnp
sahf
add
adc
inc
into
insb
xchg
jnp
lods
push
mov
sti
movsb
out
scas
cld
imull
into
mov
data16
aas
fdivrl
cwtl
dec
das
in
mov
out
xor
cld
mov
out
divl
inc
scas
test
pop
es
ds
cmp
bound
lahf
clc
lahf
out
sub
loopne
inc
test
cmp
cld
ss
daa
popf
jnp
movsb
inc
push
mov
es
je
inc
jnp
repz
arpl
and
xor
push
movsl
neg
pushf
push
and
pushf
es
mov
popa
xor
jg
mov
mov
es
fdivrp
and
mov
je
push
iret
jnp
push
mov
pop
ss
fidivrs
sub
jl
es
cmp
hlt
and
add
faddl
sub
mov
pop
push
orl
pop
pop
and
ds
add
adcb
imul
addb
out
or
add
add
dec
add
add
mov
dec
inc
es
cmc
xchg
add
xchg
sbb
sub
jbe
jae
repz
cmp
add
outsb
je
scas
fst
scas
cs
add
ja
jb
adc
addr16
cs
dec
push
je
data16
mov
ss
and
faddp
aad
add
push
pop
add
fdivp
fisubrl
ds
inc
jo
inc
dec
imul
adc
jne
jo
pusha
fidivrl
pop
mov
jbe
sbb
sbb
adc
xlat
jp
into
pushw
aaa
mov
inc
inc
and
push
arpl
out
fimull
sub
jb
push
and
and
sub
addr16
cmpsl
inc
xlat
rcl
insl
add
jae
pop
pop
fisubs
push
arpl
jns
out
jge
mov
pop
outsb
ljmp
sub
mov
ja
imul
rcrb
sub
insl
jbe
data16
pop
aaa
jns
ja
and
outsl
lock
scas
xorl
jle
roll
and
adc
push
sbb
cmp
outsb
adc
push
sub
mov
imul
xchg
mov
je
push
xchg
jns
sub
je
ret
cmp
push
pop
cmp
or
sbb
insb
dec
adc
sbb
jb
aas
sbb
lods
arpl
cmpsl
fwait
pop
mov
cmp
pop
orl
scas
mov
mov
pop
ss
sbb
insb
push
data16
js
pop
iret
sbb
push
out
cmpsb
arpl
call
jmp
and
sbb
cli
push
imul
arpl
or
pop
sbb
push
ja
xchg
jnp
lahf
lock
jnp
jne
arpl
add
add
mov
jne
inc
ret
push
push
iret
push
push
push
stc
jns
pop
sbb
add
addl
mull
mov
in
fsubr
fisubrl
or
or
sbb
dec
mov
sbb
and
mov
fstpt
pop
repnz
sub
mov
js
out
sbb
sbb
adc
xchg
and
or
lahf
sbb
push
roll
lahf
outsb
addr16
jmp
add
ds
cmp
add
hlt
pop
jne
push
inc
outsb
bound
fmulp
cmp
adc
push
inc
jecxz
imul
cmp
das
ds
mov
adc
adc
jo
add
cmpsl
jo
fidivs
dec
mov
scas
mov
inc
and
and
lcall
getsec
add
pusha
test
daa
add
sub
add
sti
mov
fidivrs
cmp
jae
call
insb
mov
add
pop
push
and
movl
push
in
push
daa
xchg
subl
xchg
add
xor
xlat
xchg
ja
mov
cmp
sub
mov
jmp
js
xorl
jge
adc
data16
pop
lods
mov
add
mov
push
pop
cmp
fcmovnbe
add
add
add
add
subl
fildll
push
cwtl
adc
sbb
cmp
pop
push
mov
jg
daa
lock
in
jbe
cs
jecxz
fwait
push
lahf
jae
sbb
xor
test
outsl
shll
sub
mov
lds
jbe,pn
or
add
ljmp
and
or
push
mov
sub
pop
cmp
cmp
invd
insl
test
and
adc
mov
adc
clc
repz
sub
jno
aas
pop
je
adc
imul
ja
sub
stos
adc
and
lods
std
cli
das
xchg
loop
jne
add
or
mov
fwait
das
mov
test
xlat
jno
xlat
lcall
or
das
lret
mov
add
movsb
cmpsb
push
addr16
imul
pushl
test
push
add
addl
or
push
or
adc
pop
cmp
push
dec
pop
imul
pop
inc
pop
or
loopne
sti
outsl
sub
push
sbb
pop
icebp
imul
fwait
inc
lds
add
sub
scas
jae
jo,pt
xor
jo
mov
ja
pop
adc
add
scas
xor
sbb
or
pop
out
fldt
movsb
add
bound
add
jecxz
mov
mov
push
das
rorl
inc
mov
push
addl
popa
enter
add
push
roll
pop
stos
and
pop
push
test
fistpl
dec
mov
cmpsb
fisubrl
add
rcll
das
ds
ret
sub
stos
push
jg
mov
mov
out
repz
shlb
ret
adc
or
outsl
fstpt
ficoml
arpl
popa
and
mov
imul
mov
bound
outsb
pop
mov
scas
or
repnz
adc
outsb
ret
and
mov
push
adc
cli
push
fsubrl
jmp
xchg
outsl
xchg
xor
arpl
fisttps
pop
ret
xchg
adc
jb
xor
xor
cmp
sbb
push
arpl
mov
arpl
arpl
xchg
pop
aas
arpl
call
add
cmp
jns
jno
or
sub
pop
cs
adc
add
push
jns
and
pop
sarb
mov
int
adc
test
mov
sub
sub
js
adc
dec
adc
xchg
sub
push
or
addr16
inc
sbb
add
cmp
in
pop
popf
adc
adc
mov
adc
push
push
dec
jnp
xor
jae
addr16
inc
stc
adc
shrb
adcl
outsw
jae
notb
push
push
andb
gs
ds
mov
push
add
push
insb
gs
rol
and
fdivrl
inc
outsl
jb
mov
pushl
arpl
push
imul
jne
jb
jnp
push
fdiv
inc
js
gs
sti
int3
xor
push
adc
dec
cmpsw
insb
mov
push
gs
pop
popa
sub
insb
inc
imul
dec
xor
add
inc
mov
cmp
sub
push
imul
insb
outsl
bound
fdivs
arpl
lods
inc
insb
push
sbb
xlat
sbb
mov
jb
das
gs
loopne
or
push
jl
mov
inc
sbb
push
fisubrs
sbb
gs
js
mov
ret
push
push
jl
outsl
mov
add
push
jb
inc
fs
in
lahf
sbb
dec
outsl
fs
inc
inc
and
lods
and
ss
pop
xor
sbb
cs
mov
sbb
insb
push
popa
je
xchg
and
test
je
bound
out
subb
outsl
and
inc
pop
pop
push
or
daa
lods
xor
adcb
push
push
test
cs
jns
xchg
andl
add
ss
xchg
jae
and
outsl
pusha
pop
fisttpl
xchg
sbb
loope
insl
and
add
shl
jno
rorb
sbb
in
inc
gs
cs
adc
xchg
sub
outsl
insl
loop
push
cwtl
and
lea
pop
sbb
mov
inc
mov
insb
jae
dec
imull
jg
inc
stos
loop
pusha
popf
xchg
mov
xor
add
sbb
insb
inc
stos
inc
mov
fmuls
aas
xor
orl
cmc
dec
add
jbe
fs
lret
cmp
dec
outsb
push
lock
inc
push
movsb
mov
je
sbb
adc
sarl
adc
jns
dec
aad
sbb
fcmovb
mov
push
je
loop
das
leave
pop
mov
fs
outsb
inc
addb
shll
mov
push
enter
push
fadds
pop
cs
push
je
ja
fnstenv
adc
imul
nop
outsb
addr16
pop
btc
sub
and
dec
gs
pushf
or
rcl
daa
push
shlb
in
jl
push
sub
xchg
ret
mov
or
ret
clc
out
arpl
add
jns
scas
mov
inc
pushf
jae
out
lods
inc
add
punpckhwd
gs
imul
mov
inc
dec
inc
jns
popa
bound
and
mov
jae
cmp
iret
insb
jnp
add
cmp
or
cmp
push
mov
push
insb
popa
jns
and
lahf
dec
add
shrl
dec
push
or
lds
test
jb
inc
shrl
mov
jg
cmp
std
imul
adc
mov
pop
push
cmp
stos
push
mov
push
sub
cmp
dec
push
mov
xor
mov
adc
xor
inc
lret
sub
add
sbb
sbb
and
cmp
xchg
rcrl
leave
cltd
in
push
pushf
and
rcrb
jb
and
test
shlb
outsb
sub
cmp
xorl
inc
mov
bound
jecxz
movl
jge
push
addr16
xor
out
mov
imul
jp
pop
push
bound
nop
mov
sub
sub
leave
les
dec
in
and
and
adc
push
adc
into
pop
sbb
mov
mov
mov
lret
mov
and
jge
pop
bound
stos
or
loope
jae
xchg
add
sbb
pop
mov
and
insb
and
push
stos
ds
pop
scas
decl
bound
sub
fs
jl
pop
lahf
sbb
popa
mov
add
jns
mov
ljmp
inc
adc
sbb
inc
jne
popw
cmp
mov
sbb
cmpsl
jl
inc
xchg
loopne
fildll
pop
int
add
mov
sbb
mov
pop
xchg
loopne
nop
lea
fimuls
add
sbb
xchg
data16
cwtl
jge
cmp
adc
add
mov
shlb
sbb
iret
insl
fbstp
cmp
adc
imul
sahf
xor
inc
outsb
sbb
aad
mov
jbe
dec
fldt
daa
sbb
inc
dec
inc
inc
scas
or
mov
pusha
inc
inc
push
inc
adc
ljmp
push
dec
mov
scas
inc
push
pop
icebp
or
rcrb
xor
imul
mov
and
jb
mov
or
lahf
mov
cltd
xchg
jbe
pop
pop
dec
add
loope
cmpsb
push
add
and
es
jb
mov
daa
fmuls
ss
or
call
dec
xchg
and
add
add
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sarb
add
jle
add
