rolb
arpl
pushf
fdivrl
test
xor
int
mov
add
les
inc
in
sbb
rcll
lret
fwait
mov
push
add
cmp
jae
and
imul
out
cmp
mov
inc
and
repz
jb
out
inc
out
pushl
xchg
stos
daa
and
xchg
add
stc
andb
out
sub
fwait
loopne
popa
dec
mov
xor
dec
xchg
cmp
inc
jmp
xor
add
in
sub
xchg
xor
subb
mov
cli
or
mov
pop
jo
popa
add
mov
adc
test
adc
and
sub
inc
movsl
lret
pop
xchg
and
divb
mov
ss
cmp
push
mov
das
push
cmp
sbb
loope
add
popa
insb
inc
jb
add
mov
dec
push
jbe
or
popf
add
lock
stc
mov
sbb
xor
inc
add
fsub
mov
pop
inc
mov
mov
add
mov
push
xlat
es
lds
hlt
pop
add
cmpsb
add
xchg
dec
xchg
sbb
dec
lret
or
sub
push
inc
lds
xchg
push
shll
outsb
push
mov
and
xchg
xor
lea
jae
push
cmc
call
pusha
pushf
call
push
jmp
mov
outsl
dec
push
jbe
and
cld
jnp
aad
mov
and
mov
push
xor
gs
push
iret
call
jmp
pop
xchg
mov
cmpsl
xchg
lahf
and
lea
pop
nop
rcll
sbb
mov
jmp
out
ficomps
lahf
jecxz
and
les
mov
pop
mov
loop
cmpsl
cmp
call
pop
sub
mov
adc
mulb
in
sub
push
fildl
nop
mov
add
fs
imul
add
or
fs
ja
clc
clc
bt
bt
imul
stc
pushf
movb
stc
add
mov
lea
jmp
outsl
insb
xor
cs
insb
add
jbe
aaa
movb
imulb
jae
in
out
sub
add
pop
adc
in
repnz
xchg
jb
mov
or
mov
mov
inc
cmp
shl
push
cs
test
jne
xchg
ljmp
negb
cmp
and
pusha
pop
ret
addr16
mov
imul
hlt
mov
add
and
cmp
mov
imul
ffreep
inc
and
xchg
pushf
pushf
lea
ja
rol
cmp
sar
cmc
sub
bt
add
bsf
call
lea
call
pushf
pushf
call
pushf
lea
jae
jmp
cmp
mov
push
jbe
and
test
rol
and
inc
paddq
dec
call
scas
jne
sub
xchg
sbb
xchg
fdivrp
outsl
xchg
aaa
test
push
mov
dec
popf
sub
push
cmp
jns
mov
das
into
xchg
and
mov
popa
pop
rcl
xchg
dec
out
xchg
mov
fucomi
fldt
mov
filds
push
notl
mov
in
int
loop
dec
push
jbe
das
stos
cltd
sbb
mov
nop
arpl
xchg
insl
jb
jo
idiv
arpl
mov
sbb
push
fs
std
pusha
ficoml
and
sahf
daa
push
leave
sbbl
lcall
sbb
jge
mov
loope
fmull
push
or
les
in
sub
mov
fs
cmp
sub
inc
lret
js
mov
clc
popa
add
jo
mov
loopne
les
fcompp
dec
push
les
jbe
push
cwtl
dec
push
test
add
frstor
dec
xor
int
fwait
inc
mov
sar
shrb
sbbl
jb,pt
mov
jno
add
or
cmpsb
jns
inc
push
xor
mov
push
xor
xor
pop
sbb
stos
push
clc
mov
xor
jne
sub
imul
dec
cld
push
cs
pop
jp
dec
ljmp
add
test
add
sbb
push
out
and
cmp
add
add
add
out
sbb
pop
out
and
inc
test
add
icebp
sbb
fs
and
dec
test
add
sbb
insb
out
and
push
test
add
sbb
je
and
pop
test
add
sbb
jl
and
popa
test
add
out
and
imul
add
push
std
sbb
mov
and
jno
pop
add
push
add
pop
add
push
add
pop
add
aad
add
pop
add
mov
and
xchg
test
add
movsl
push
add
pop
add
sbb
mov
add
cmpsb
dec
push
jbe
inc
out
stc
mov
push
fldl
jle
mov
sti
xor
mov
mov
mov
dec
movsl
mov
inc
scas
push
dec
mov
jmp
pop
les
cltd
pusha
ss
lea
dec
mov
dec
xor
sbb
xor
aad
cs
sti
sbb
fisubrl
and
sub
xchg
jns
add
xor
pop
bound
xchg
pushf
or
movb
pushf
lea
jne
setns
bsr
mov
push
test
bt
or
call
call
jmp
aam
js
push
jbe
es
movb
cmp
int3
pop
mov
add
jge
and
es
sbb
icebp
lcall
inc
addr16
or
mov
sbbl
insb
or
sbb
add
and
and
push
jns
pop
cli
xchg
in
les
add
jmp
add
bound
jb
imul
movsl
xchg
and
rcrb
adc
ret
push
hlt
jb
mov
inc
ss
xor
movsb
dec
shrb
hlt
mov
dec
add
adc
lods
push
or
rclb
outsb
ja
mov
push
cmc
lock
addr16
hlt
xor
pushf
sbb
ss
popa
dec
mov
adc
xchg
dec
sub
sub
lods
test
sbb
mov
push
adc
dec
push
icebp
scas
xor
xor
push
ss
les
aas
sub
cmp
push
mov
lods
inc
daa
call
jbe
inc
mov
mov
in
stos
ss
mov
sub
sbbb
sbb
cmp
mov
mov
jbe
xlat
repz
pop
shlb
int
hlt
stos
push
into
sub
sub
out
and
daa
sahf
xchg
mov
jge
xchg
sbb
jmp
stos
push
sbb
arpl
in
repz
pushf
popf
and
or
mov
outsb
sub
push
jbe
bnd
mov
jmp
in
into
mov
std
ret
lcall
gs
mov
shlb
pop
std
xor
mov
xor
xor
clc
cmp
rcll
sub
mov
push
cltd
xor
flds
lret
jae
dec
xchg
push
ficoml
xor
dec
movsl
cltd
mov
das
mov
jl
leave
jle
cmpsb
pop
aad
dec
add
in
add
jl
adc
push
out
sub
cmp
scas
out
jno
bound
ret
and
mov
dec
ds
push
daa
mov
push
mov
add
sub
fldenv
test
lret
and
cwtl
sub
ss
mov
pop
out
fcmove
mov
mov
pop
mov
cmp
xor
ficompl
loop
lods
test
fdivl
mov
clc
bnd
add
jg
test
pop
scas
mov
pop
lods
pop
notl
je
fisttps
int
cltd
subb
jbe
in
bound
mov
or
hlt
xchg
sub
xchg
out
int3
cmp
push
push
jbe
lock
push
mov
or
fimull
test
aad
jl
fistl
orl
js
and
lock
bound
jg
push
fidivs
lret
aad
test
push
addr16
ja
stos
xchg
cmp
or
pushf
sub
ffreep
sub
test
push
mov
lock
stc
sub
cmc
cmc
stc
cmp
cmp
jmp
stos
sete
not
mov
mov
mov
mov
jmp
call
lods
test
test
neg
test
call
pop
push
adc
push
jbe
addb
and
mov
adc
test
jmp
sub
fsub
scas
popa
mov
enter
fdivrs
mov
fisttpll
and
push
or
push
mov
out
mov
inc
loop
dec
xchg
xor
add
xor
jb
loop
les
or
bound
insb
or
push
notl
push
push
jbe
jns
arpl
pop
jae
and
in
cltd
aas
and
loope
sub
xor
cli
roll
test
stc
mov
in
js
faddl
mov
mov
mov
stc
addr16
cmpl
jle
push
jbe
cmc
js
andb
pop
shll
mov
mov
push
mov
mov
pop
pop
les
push
sti
imul
mov
mov
imul
jo
rolb
inc
cmp
or
xchg
fmulp
sub
xchg
movsl
jbe
inc
adc
gs
sbb
sti
xor
mov
loopne
sub
je
scas
xchg
popf
inc
aas
pop
call
cmp
pop
cmp
jbe
hlt
jg
aad
xor
movl
cld
out
or
les
test
mov
in
aad
add
cmc
pop
divb
stos
push
push
dec
add
pushf
jmp
clc
add
clc
and
fs
cmp
cwtl
push
push
mov
lret
scas
push
add
std
xor
insb
into
mov
shll
addb
jnp
xlat
pushf
push
test
pusha
cli
leave
out
dec
mov
lods
xchg
xchg
mov
and
arpl
push
or
inc
pop
movsb
sub
lcall
int
push
mov
mov
cmpsb
lea
faddl
fisubrl
pushf
push
call
repz
push
sarb
jae
stc
jp
mov
inc
leave
mov
push
sbb
push
mov
lea
je
sbb
neg
stc
add
rcr
sub
inc
push
shr
add
btr
mov
test
push
stc
add
btc
btc
movzbw
add
test
seta
rcr
mov
test
stc
clc
shr
clc
push
push
cmp
pusha
mov
jmp
add
mov
xchg
sub
pop
mov
mov
dec
mov
add
xchg
push
loope
popa
and
loope
mov
mov
jp
pusha
mov
jge
cmc
and
iret
mov
repnz
inc
pop
mov
int
adcl
clc
adc
seta
fwait
or
sub
movsb
lret
push
cld
inc
iret
pop
or
inc
sub
push
lods
clc
scas
inc
fbld
xor
add
dec
adc
xor
mov
mov
sbbb
sarb
aad
jmp
int
push
and
jns
sub
mov
sti
pop
out
test
inc
mov
fnstenv
jb
pop
adc
cmp
mov
dec
jecxz
or
inc
notb
mov
pusha
das
mov
xor
xchg
sarb
push
cmc
mov
xlat
mov
mov
pop
push
dec
xor
cmpsb
aas
and
or
les
jbe
stc
int3
arpl
jns
mov
ficoms
pop
cltd
fisttpl
jmp
neg
lea
repnz
aas
mov
push
dec
aam
jne
shrl
int
mov
movsl
fs
add
pop
push
std
lods
pop
jo
jnp
scas
and
fstl
shl
ja
sub
pop
jno
enter
jecxz
call
pop
push
rcl
lods
cs
jbe
push
insb
test
sbb
orb
call
sbb
and
xchg
push
push
push
jbe
add
sbb
jbe
int3
fisubs
jp
shll
mov
or
pop
sbb
add
and
pop
cwtl
xor
cwtl
pop
loopne
out
aaa
jl
fwait
push
cli
ss
pop
xor
jl
xchg
outsb
jae
das
movsb
push
mov
and
jb
inc
fnsave
mov
ljmp
inc
pop
inc
fiadds
fstps
push
jbe
or
sbb
enter
cmp
daa
add
loopne
mov
push
es
cmp
jp
push
lahf
push
mov
stos
push
xchg
mov
int
aad
ret
leave
xchg
or
jo
push
aad
test
mov
sti
shrb
jmp
rorl
lock
fidivrl
pop
ljmp
jns
xchg
shrl
inc
cmpl
ret
gs
push
jbe
out
int
fistl
lods
sub
mov
in
adc
fdecstp
sbb
fsub
jnp
inc
scas
into
mulb
pusha
fildll
imul
daa
mov
cs
test
mov
in
orl
jg
or
jmp
popa
mov
add
stos
hlt
stos
daa
and
test
xor
mov
mov
cli
iret
pusha
stc
lcall
and
idivb
shld
shl
mov
clc
movb
pushl
call
insl
sub
pop
push
jbe
dec
daa
stos
inc
sbb
into
jns
xchg
pop
int3
jmp
mov
adc
lcall
cmp
jno
ss
es
fidivrs
lods
setl
scas
testb
push
add
movsb
dec
dec
add
dec
bound
push
and
mov
leave
xchg
push
sub
in
adc
outsl
cld
test
pusha
mov
pushf
call
into
lret
mov
jbe
cmp
and
sbb
push
call
inc
repnz
xor
jne
inc
fisttps
pop
sbbl
push
nop
out
ficoml
dec
mov
cmpsb
scas
and
add
cmp
sub
pop
icebp
inc
cmp
cwtl
leave
pop
adc
pop
fcomps
and
xor
or
cmp
mov
xchg
mov
outsl
and
cmpsb
sbb
add
movsl
jno
cmpsb
pop
int
aaa
push
shr
bt
cmp
jmp
stc
cmp
push
push
pusha
pushf
lea
jae
cmc
add
push
pusha
mov
mov
movb
pushf
push
lea
jmp
leave
addl
cmp
adc
aam
cli
cli
movsl
out
sub
ja
xor
jmp
add
xchg
hlt
icebp
shll
fbstp
subl
mov
test
insl
sbb
add
dec
mov
and
mov
mov
fs
out
outsl
sub
aas
dec
iret
xor
icebp
inc
mov
fsubr
dec
pop
lahf
mov
inc
sbb
outsb
lods
gs
jg
push
mov
gs
inc
sbb
xor
xchg
jns
mov
int3
popf
mov
push
sub
push
jbe
push
cmpl
mov
testb
jl
aam
stc
xchg
mov
in
sub
loope
adc
xchg
push
add
bound
std
push
lods
aas
and
inc
dec
clc
fmulp
sub
hlt
in
arpl
mov
xor
pop
hlt
loop
xchg
xlat
mov
out
in
xor
cmp
outsl
xor
lods
push
aad
dec
pop
push
jbe
iret
adc
movsb
xor
pop
adc
mov
popf
add
inc
lcall
sbb
aas
push
mov
repnz
sub
mov
hlt
ret
push
leave
mov
aad
outsb
insl
les
out
xchg
cmpsb
mov
outsl
int3
test
jecxz
rcll
in
sbb
push
fnstsw
subb
inc
shrb
outsb
lea
xor
mov
ror
cmp
mov
pushl
add
push
shr
movb
jmp
add
setle
btc
mov
test
pusha
clc
call
cwtl
push
adc
jbe
mov
test
out
loope
xchg
iret
inc
push
nop
push
int3
les
sub
ljmp
mov
mov
sbbb
pop
test
je
mov
dec
mov
jae
fstl
aaa
adc
mov
fstpl
test
sub
mov
bswap
movb
cwtl
movzbl
push
movzbw
not
not
push
lea
jmp
stc
icebp
mov
push
jbe
inc
adc
in
push
icebp
pushf
rep
insl
dec
xchg
push
add
data16
jb
out
and
bound
mov
xor
gs
adc
repnz
and
lods
xchg
das
lcall
or
in
and
out
lret
sub
es
inc
int
sbb
jbe
add
adc
dec
jmp
xchg
out
cmp
mov
add
shlb
dec
adc
and
je
push
pushf
pusha
pushl
mov
call
sbbb
add
lods
mov
leave
sbbb
popa
adc
addr16
ja
jle
imul
inc
push
mov
and
sbb
sar
ja
inc
jg
dec
xor
inc
mov
mov
lahf
pop
jb
jmp
insb
inc
stos
out
shlb
ja
push
out
and
mov
mov
fcompl
add
push
jbe
repz
push
xchg
lahf
push
bound
mov
or
cmpsb
insl
xor
orb
sub
in
je
ret
and
in
stos
sbbl
adc
jl
dec
push
push
jns
mov
rorl
js
dec
mov
aas
adc
mov
pop
push
jbe
mov
fisubs
arpl
aad
xor
popf
xor
aas
out
dec
mov
in
xchg
imul
and
mov
incl
dec
out
cmp
pop
aaa
and
cltd
loop
cmp
in
adc
sbb
pop
pushf
inc
ja
adc
cmc
les
ffree
xchg
ds
lcall
int
scas
pop
add
pop
aaa
lock
push
iret
xor
cmp
mov
out
in
ljmp
ja
dec
jmp
loopne
sub
test
xchg
adc
push
sub
adc
cld
mov
or
je
push
call
inc
cmpsb
pop
push
jbe
repnz
cmp
mov
lcall
lods
xchg
pop
fldt
in
mov
mov
inc
and
jno
sub
sub
pushf
in
das
mov
xor
inc
cmc
cmp
int
xor
movntq
out
stc
in
hlt
add
xor
cwtl
mull
shl
std
adcb
into
pop
adc
sbb
or
adc
sarb
imul
pop
out
sbb
sub
lods
imul
test
dec
adc
mov
fsubl
and
test
jo
push
and
mov
pop
dec
inc
adc
mov
mov
adc
mov
push
stc
xchg
icebp
adc
shrl
inc
push
in
xlat
xor
out
jmp
dec
mov
popf
int
jmp
sbbl
test
pop
in
fcoml
push
popl
or
mov
sub
sub
pushl
pushl
jmp
mov
pusha
call
pushf
mov
push
movl
call
lea
call
call
mov
lea
jae
cmp
pushf
jmp
ret
jnp
popa
push
jbe
nop
adc
lahf
lcall
inc
sbb
fisubs
sbb
or
loop
dec
scas
ds
adc
cs
mov
or
cmp
mov
push
mov
addr16
and
dec
movsl
jmp
mov
mov
push
dec
es
mov
shlb
pop
adc
xor
mov
js
in
xchg
or
or
mov
push
lods
mov
in
out
adc
scas
lret
sbb
arpl
adc
loop
push
jbe
jl
movb
sbb
call
out
cmpsb
xor
sbb
vcvtpd2psy
fld
sub
jp
xchg
mov
repz
xchg
pop
mov
mov
xlat
ds
mov
inc
and
mov
jnp
mov
cs
rorl
les
mov
xor
pop
mov
hlt
push
xchg
sbb
in
cwtl
or
cmc
adc
std
or
or
les
mov
in
jge,pt
enter
movsl
dec
cmpsl
jae
xchg
bsf
bts
mov
dec
mov
stc
ror
pushf
mov
bt
cmc
mov
stc
sub
clc
rol
push
call
sbb
mov
push
jbe
setp
dec
xlat
ds
dec
xor
inc
jmp
push
and
ret
loope
xchg
xchg
sbb
and
cmp
js
inc
dec
push
mov
fnstcw
xchg
xchg
mov
and
bound
mov
mov
pusha
aad
testl
or
mov
adc
es
addb
dec
sbb
xchg
lods
adc
outsb
push
jge
into
bound
loopne
or
lods
dec
cmp
or
loop
or
jecxz
fnstenv
and
iret
cmpsb
pop
movsl
cmp
filds
sub
adc
movsl
mov
lods
cmp
mov
into
inc
std
punpckhwd
pushf
pusha
or
push
scas
or
or
cmp
mov
mov
dec
sub
or
push
add
push
pop
cwtl
cmpl
add
mov
xchg
into
outsb
imul
pushf
add
pushf
pusha
mov
mov
lea
jmp
aas
jecxz
arpl
cmpsb
jno
scas
xchg
in
mov
mov
push
mov
lea
inc
push
daa
fiadds
mov
rorb
dec
repz
incl
popf
es
dec
or
imul
arpl
push
pop
into
and
repz
add
jne
lock
mov
sarb
cmp
cld
xorb
or
leave
xchg
mov
lds
lret
push
and
pusha
jmp
jp
jno
test
cmp
ret
jae
sub
pushf
lea
call
pusha
jmp
bt
jmp
rol
sub
movsbw
mov
bt
test
and
bt
stc
add
pusha
pushl
pusha
pushf
lea
jmp
clc
stc
or
jmp
cmp
jbe
mov
call
mov
sbb
mov
mov
testl
or
lods
outsb
cmp
jg
ss
mov
and
scas
lock
insl
mov
xor
aas
rclb
dec
push
ds
fists
repnz
pop
push
inc
repnz
mov
sub
mov
cld
fcompp
ss
or
sub
jno
es
jecxz
cmp
mov
or
std
mov
scas
push
mov
sub
outsl
scas
sub
add
rclb
stc
mov
push
mov
jmp
lock
stos
fs
jbe
pop
loopne
ds
das
sbb
push
stc
ljmp
repnz
push
dec
loopne
or
jmp
fdivrl
xchg
repnz
mov
cmc
loopne
rcrl
xchg
mov
in
add
jo
jns
insb
shrb
mov
cmc
sbb
mov
mov
stc
bnd
subl
nop
scas
divl
mov
mov
sub
adc
ficoml
lods
mov
punpckhdq
mov
xor
fs
sbb
and
cmpsb
sbb
in
push
out
push
jmp
call
je
out
gs
jbe
outsb
sbb
mov
leave
aaa
sbb
add
pop
sbb
in
fwait
jbe
fdivs
cli
lods
cmp
xchg
sbb
or
push
mov
ret
shrb
adc
pop
and
push
sbb
jbe
out
cmp
cmc
movsl
icebp
das
mov
dec
sti
lds
jl
dec
jno
out
outsb
andl
in
daa
mov
xor
cmp
faddl
ret
xor
out
pop
lock
repz
rorl
push
fldl
xchg
jne
ja
mov
pop
sbb
cmp
dec
inc
movb
pusha
pushl
call
push
xlat
mov
push
jbe
jne
xchg
in
dec
or
pop
inc
fimull
jecxz
pushf
jae
mov
fildll
jnp
cmc
imul
or
sbb
mov
std
test
mov
pushf
mov
inc
xor
outsb
dec
sarb
sahf
scas
cmpsl
jb
pop
xadd
dec
push
dec
or
mov
mov
inc
rcll
push
adc
sub
pop
je
adc
xor
fld
js
cmp
mov
cmp
pop
idivl
add
sbb
loope
hlt
cltd
bound
les
push
jbe
add
js
jl
pop
jns
ficoms
rcll
xchg
and
jbe
movsb
xor
cmpsb
loope
neg
arpl
outsl
cmp
push
out
lea
rolb
sbb
xor
mov
rolb
pop
sub
aam
and
jecxz
adc
mov
leave
dec
ret
pusha
in
or
cmp
repnz
push
jbe
arpl
jmp
mov
inc
add
fs
call
mov
ret
xchg
sbb
xor
ljmp
jb
sbb
or
rorb
jns
nop
fldenv
and
repnz
add
jge
mov
scas
cmp
cmp
sbb
pop
aas
sbb
cmp
pop
mov
jecxz
sub
in
out
push
stc
cmpsb
xchg
mov
xchg
add
pushf
mov
movsbw
pushl
bswap
mov
movzbl
call
jmp
mov
pusha
pusha
pushl
ret
lea
je
pusha
lea
jmp
jmp
push
xor
push
aad
aaa
sahf
insl
cli
add
icebp
out
leave
mov
push
mov
xor
mov
sbb
out
or
subb
cmp
mov
jno
mov
cmp
outsb
sahf
scas
cmpsl
andb
or
push
jbe
les
push
mov
sub
xor
pop
xchg
jl
and
inc
mov
jo
fsub
stos
or
je
jb
cld
pop
mov
stos
das
call
arpl
pop
cmpsb
jno
pop
lret
roll
fcmovbe
sub
mov
pop
or
mov
stos
push
in
nop
daa
pop
xchg
xor
add
data16
in
mov
fwait
pop
adc
cmp
daa
pushf
push
push
dec
mov
repz
in
add
push
or
dec
out
mov
shlb
push
push
xchg
xor
push
arpl
add
sahf
or
addr16
loop
mov
cld
push
cmp
dec
rcrl
fildl
pop
data16
inc
mov
fcoml
dec
inc
cmc
adc
jbe
dec
out
mov
xlat
js
mov
outsl
sahf
scas
or
sub
arpl
and
xchg
dec
roll
lret
movsl
push
fistpl
iret
out
sbb
dec
mov
es
xchg
xlat
jbe
je
andb
outsb
mov
movsb
and
xchg
orl
ljmp
out
sub
movsl
xorb
pop
loope
xorb
jg
sti
outsl
fstl
pushf
xorl
rcrl
int3
cs
xor
nop
fdivrl
rorb
lock
mov
popf
rcl
adc
out
cwtl
popf
xor
push
out
mov
ss
ss
scas
mov
insb
ret
cmp
shrb
loopne
ret
cmc
inc
add
sbbl
out
or
lds
or
mov
movb
pushf
movw
mov
pushl
ret
pushf
movl
pusha
pushf
movb
movw
lea
jmp
outsl
insb
gs
cs
insb
add
pop
push
jbe
popf
dec
sbb
popf
cmp
jle
add
xchg
out
es
xchg
sub
fs
into
cs
push
push
fistpll
mov
pop
pop
sti
push
mov
push
pop
mov
mov
cld
sti
mov
das
jo
js
jnp
xchg
sahf
dec
pop
pop
in
cmp
aaa
push
push
test
outsl
imul
fmuls
stos
out
je
sub
jmp
mov
loopne
fsubl
insb
cwtl
dec
lcall
dec
mov
call
addr16
es
xchg
adc
in
lea
je
bt
cmp
pusha
test
cmp
push
lea
jne
pusha
mov
pusha
inc
jmp
pusha
stos
push
mov
pushl
mov
lea
jmp
test
jbe
test
jge
out
mov
pop
push
cld
subl
outsl
push
leave
dec
push
stos
ss
add
pop
popa
mov
mov
sahf
push
or
bound
cmp
addr16
std
xor
xchg
pushf
jmp
xchg
jg
xor
xor
iret
hlt
mov
pop
fidivl
pop
sbb
mov
insl
and
cmp
test
out
out
pusha
cmpb
push
pusha
pushf
lea
jne
bswap
add
xor
stc
sbb
cwtl
cmc
mov
sub
add
inc
seta
mov
stc
test
call
aas
aaa
imull
fimull
int3
xchg
dec
aad
and
push
into
mov
xor
jmp
or
sub
jmp
addr16
mov
fistl
cwtl
fistl
push
or
inc
mov
xor
mov
pop
sahf
sbb
xchg
loope
scas
sbb
dec
cmp
add
into
sbb
shll
xchg
imul
rorb
push
repnz
adc
cld
mov
pop
lods
dec
xor
lods
fiaddl
jae
lds
lret
mov
insb
sub
xorl
into
xchg
dec
out
out
jecxz
nop
shlb
ret
and
mov
mov
out
push
test
aaa
into
and
shll
repnz
loop
mov
pop
sahf
and
xorl
push
adc
test
pop
push
adc
or
iret
xor
push
push
dec
call
aas
stc
mov
mov
arpl
dec
push
lret
inc
loope
imul
or
dec
dec
mov
idivl
push
adc
jbe
js
lcall
and
jno
pop
inc
int3
ds
lcall
and
jns
push
lock
adcb
fstps
cwtl
pop
imul
add
lods
push
scas
xor
clc
mov
insl
enter
negl
and
adc
scas
scas
xchg
in
lret
jno
mov
xor
ret
pop
in
jmp
loop
or
subb
gs
mov
cmc
pushf
inc
dec
add
addr16
iret
sbbb
or
xor
fs
lcall
xlat
inc
rcrb
xchg
jle
cmp
xchg
bound
jmp
pop
mov
jo
shrb
mov
push
iret
sbb
mull
pop
lahf
push
loop
push
push
xor
xor
fs
insb
add
pop
outsb
push
jbe
sti
mov
or
jb
mov
xchg
pop
and
fs
xchg
mov
or
pop
cmp
test
add
popa
addr16
out
in
int
dec
mov
xchg
fstl
dec
pop
rol
add
inc
stos
sub
pusha
out
jmp
dec
add
mov
leave
mov
test
xor
adc
aad
adc
movsl
xchg
test
ss
mov
bnd
xchg
push
or
xchg
jbe
inc
lock
push
leave
sbbb
xor
repnz
fisubrl
out
roll
sbb
loope
lds
lds
mov
inc
xchg
xchg
jp
addr16
sahf
add
dec
les
add
cmp
scas
sti
dec
push
repnz
xor
mov
idivl
adc
pushl
outsl
adc
vorps
push
test
mov
outsl
push
jbe
popa
sub
sub
push
pop
out
xor
dec
rorl
into
xor
clc
iret
xor
xchg
jb
fimuls
dec
cmc
fnstcw
fisubrs
out
rcll
es
ljmp
sub
int
mov
rclb
sub
mov
pop
ret
jns
mov
jae
and
inc
out
aad
aaa
cld
mov
gs
jo
sbb
jo
or
test
jbe
dec
lds
scas
and
lods
movd
shlb
clc
mov
sub
adc
je
sbb
jle
js
fdivrl
ss
jmp
addb
sarb
pop
repnz
cs
add
call
pop
rcrb
mov
fwait
cld
test
cli
pop
pop
jne
xchg
sbb
stos
ja
inc
and
lret
push
pop
add
stos
dec
cwtl
sbb
dec
pushl
pushl
ret
pushl
popl
pushl
push
pushf
pushl
ret
pushl
stc
call
cmp
jmp
mov
dec
jno
jbe
sbb
lock
lret
pop
lock
or
stc
pop
xor
ss
sbb
mov
fadd
mov
jb
mov
std
mov
insb
shl
mov
cmp
xchg
out
push
and
and
int
xor
cmp
mov
mov
inc
stc
hlt
mov
adc
mov
pop
jl
adc
lods
xor
call
push
sbb
jbe
and
jno
jbe
pushf
aas
stos
cmp
mov
sbbl
insl
js
data16
ljmp
test
mov
pushf
out
lahf
or
adc
bound
adcl
pop
aas
adc
inc
clc
mov
cld
or
adc
inc
and
stos
pop
cltd
pop
adc
mov
fsubl
mov
daa
mov
adc
xchg
or
xor
clc
cmp
mov
decb
jl
jle
lock
xor
imul
icebp
aam
outsl
jno
jbe
adc
pop
pop
sub
push
mov
xor
fadd
push
adc
ds
rolb
popa
movsb
mov
stos
das
jae
shrl
outsb
int
aaa
cmpsl
push
pop
or
leave
and
add
shlb
inc
lret
mov
jns
loope
rolb
lret
int
ljmp
mov
xchg
test
dec
pusha
loope
hlt
stos
dec
repnz
movl
pushl
lea
jne
not
movb
pushf
mov
call
mov
lea
je
jmp
insl
mov
push
jbe
imulb
and
mov
push
fidivs
inc
aam
cmc
aam
out
leave
cmpl
enter
mov
sbb
add
sti
sub
or
sti
das
negl
sub
insl
push
adc
jmp
add
pusha
add
mov
dec
xlat
push
iret
test
mov
add
mov
cltd
cmp
fcomps
test
mov
movsl
sub
pop
out
jae
ja
pop
push
mov
fcompl
jecxz
loop
mov
jo
or
sbb
jae
jbe
movsb
jmp
popa
loopne
sub
loopne
ret
fnstsw
adc
mov
sub
loope
inc
pop
or
xor
inc
int3
in
mov
push
cmp
cmp
xchg
xor
imul
mov
notl
repnz
mov
push
xchg
mov
xchg
cltd
adc
push
das
cli
sbb
jns
mov
mov
jno
xchg
test
aam
mulb
mov
jmp
mov
jbe
shll
test
sub
sbb
mov
pop
mov
xchg
xchg
inc
add
xchg
and
cmp
addr16
js
cwtl
dec
adc
lock
mov
push
pop
push
xor
xor
hlt
aad
xor
xchg
in
dec
addr16
scas
sbb
jg
pop
lds
jbe
addr16
inc
pop
cmpsb
jno
scas
repnz
push
aaa
jne
pop
aaa
sub
adc
xor
sbbl
xchg
inc
loop
cmp
call
jbe
fadds
cmp
push
jno
clc
and
lret
dec
les
fsts
xchg
dec
aaa
pop
sahf
loopne
jle
int
sub
imul
dec
sbb
into
imul
fnstsw
call
dec
xor
scas
dec
xchg
in
ja
dec
scas
lcall
fisttpl
mov
push
or
jno
jmp
iret
xor
jne
jbe
fwait
and
fs
fisubs
pop
cli
jno
mov
std
into
mov
int3
pop
test
xor
scas
stos
sarl
loope
in
add
mov
cld
add
cmc
push
lds
mov
mov
pushf
loopne
jecxz
cld
imul
movsb
std
mov
mov
call
mov
adc
rolb
and
sub
pop
adc
popf
cs
sub
stos
dec
mov
testb
xchg
in
mov
fiadds
jge
movsbw
bsf
rcr
bsf
add
pusha
sbb
seto
mov
stc
stc
call
push
outsl
sub
mov
jmp
dec
les
push
lods
sub
jbe
add
jbe
stos
ss
dec
jmp
inc
std
push
fwait
mov
and
push
call
cs
mov
push
hlt
push
push
jp
sub
idivb
dec
mov
inc
test
xchg
dec
gs
sub
jge
outsb
daa
loop
cmp
mov
lock
mov
leave
mov
xlat
cmp
testl
mov
repnz
push
insl
repnz
iret
and
adc
mov
test
mov
movb
dec
test
int3
pop
flds
or
outsl
clc
jbe
and
out
js
inc
inc
scas
mov
push
sbb
sbb
mov
mov
arpl
mov
repnz
pusha
add
adcb
inc
fstpl
pop
pop
sub
arpl
push
shll
jmp
in
sahf
addr16
pop
mov
push
push
fbstp
ja
jbe
jmp
adc
mov
inc
mov
jl
movsl
xchg
dec
fsts
out
faddl
std
js
fcoms
cwtl
repnz
xor
mov
push
sarb
daa
mov
pop
adc
push
dec
sub
icebp
jbe
dec
rep
out
mov
push
pop
out
shrb
sbb
add
jno
repnz
xchg
insb
sbb
test
popl
leave
nop
test
add
add
stos
arpl
test
lahf
mov
aas
cmp
sub
cmpsb
jbe
jbe
rol
inc
mov
lcall
mulb
cwtl
inc
fs
ret
push
negb
insb
test
inc
call
lods
cmp
xchg
add
mov
scas
mov
pop
aaa
or
xor
push
insb
ja
stos
out
cmp
popf
or
push
add
rcrb
and
jecxz
and
das
js
jbe
mov
call
inc
in
mov
test
push
test
xor
hlt
dec
data16
shll
test
mov
mov
mov
adc
icebp
mov
arpl
repnz
mov
je
mov
stos
lock
addr16
push
lds
insb
mov
test
nop
das
imul
sbb
mov
gs
mov
leave
stc
jle
inc
cmp
in
mov
mov
out
fstps
in
jl
mov
xlat
je
mov
lock
cmpsl
dec
mov
pop
movl
jmp
adc
into
popf
cmp
pop
adc
lods
pop
stos
pop
ss
fmuls
in
fildll
adc
or
lods
nop
dec
out
mov
sbb
outsl
mov
mov
lods
daa
mov
test
xchg
xlat
loop
cli
dec
fwait
incb
mov
push
dec
jecxz
xor
inc
mov
test
call
int3
aad
test
dec
scas
jno
les
push
pop
lahf
cmpsb
inc
nop
aas
rorb
lods
cmp
adc
inc
shlb
mov
bswap
call
jae
push
pusha
lea
jmp
ljmp
fnstenv
out
adc
push
fisubl
cmc
lods
jg
push
inc
pop
jne
mov
mov
rcl
cmpsb
out
lock
insl
aad
pop
rcrl
sbbl
into
shld
mov
push
aam
xor
in
lds
ret
cmp
xchg
inc
rcrl
fstl
out
dec
and
repnz
out
ret
sahf
inc
mov
pop
xor
add
inc
or
dec
sbb
out
ja
fdivrl
frstor
cld
aad
jo
xor
int
aas
hlt
or
repz
mov
faddl
push
xchg
sub
sub
lea
sub
dec
arpl
shl
cmp
cmp
scas
ret
aaa
fdivr
sarb
in
add
mov
aad
scas
dec
pop
mov
adc
mov
loope
gs
pusha
pushf
lea
jne
pushf
pusha
pushl
mov
stos
push
pushf
lea
jmp
mov
pushl
bswap
mov
jmp
cmp
jbe
dec
adc
movsb
pop
mov
lods
daa
push
lahf
pop
hlt
rolb
fisttpll
popa
or
aam
testl
push
mov
xor
inc
and
lahf
bound
mov
es
xchg
push
mov
fstpt
dec
int3
adc
stos
xchg
adc
test
ja
fnstcw
pop
aas
popf
sbb
outsb
jae
imull
es
sbb
or
sub
inc
xor
arpl
cmp
hlt
adc
xor
lcall
jbe
mov
pop
lcall
xorl
dec
pusha
sbb
fisubrs
lret
ljmp
sbb
call
popa
add
pop
pop
jmp
push
fldt
push
push
cmp
jns
mov
mov
movsl
mov
repnz
jae
les
adc
call
dec
add
popa
ja
out
out
call
in
inc
adc
arpl
fldl
or
adc
xchg
divl
jp
cmp
lret
call
inc
rcll
or
add
lods
cli
add
cmc
cmp
pusha
lea
je
pushf
pusha
cmp
jmp
addb
jbe
mov
jmp
in
sub
ret
fldt
subb
push
data16
mov
sub
pop
into
pop
add
mov
cmp
dec
mov
int3
outsl
jl
sbb
jmp
addr16
inc
fcoms
movsb
fwait
out
out
aad
rcrl
mov
sahf
xor
movsb
lcall
stc
shrb
rcrl
cltd
inc
mov
xor
push
lret
xor
mov
stos
out
push
icebp
lods
push
fsubrs
out
cmpsl
and
stos
aaa
loopne
es
pop
enter
mov
adc
aam
fidivl
lea
popf
xchg
push
adc
fs
inc
aas
aas
mov
sbb
mov
loop
xchg
add
pop
leave
icebp
mov
inc
int3
scas
inc
jnp
leave
int3
cwtl
sub
in
lea
fdiv
and
mov
cmp
roll
addr16
jge
cmpsb
inc
mov
and
sarl
cmpsb
xchg
in
or
push
mov
stos
test
ret
aad
adc
push
js
mov
mov
fmull
jns
add
cmpb
jecxz
push
daa
lock
xor
hlt
dec
sbb
shll
add
into
bswap
mov
bt
stc
sub
pushf
rep
jmp
hlt
rorl
pop
int3
jae
jno
lret
mov
movsl
xor
cmp
cmpsb
ss
popa
sbbl
and
pop
incl
sbb
adc
lods
cmp
mov
sbb
add
test
cmc
faddp
sub
insl
sub
test
scas
xchg
push
int3
js
push
adc
jbe
lds
fwait
lods
push
loopne
rol
sbb
jp
lea
inc
fabs
leave
aas
push
add
lret
dec
ret
jns
mov
lods
adc
int3
out
lock
add
fsubr
adc
mov
pop
orl
out
cmp
stos
add
xchg
push
jge
popa
push
and
adc
xchg
lds
movsl
lcall
pop
dec
pop
add
mov
add
testb
inc
cli
fwait
or
pop
push
aas
test
inc
sbb
xchg
jge
jbe
sub
scas
sub
mov
fisubrl
push
jecxz
or
cmp
filds
fsub
mov
add
sbb
push
dec
stos
cmpsl
add
mov
sbb
loope
mov
call
insl
and
hlt
cmp
jecxz
rorb
loop
xor
lahf
pop
dec
push
xchg
cmp
mov
xor
cwtl
sub
stos
cmp
vmovaps
pop
pusha
pop
mov
leave
push
lea
je
aam
shl
xor
sub
neg
mov
aam
neg
bts
rol
mov
bsf
shld
jmp
call
not
mov
dec
seto
inc
not
mov
push
movw
pushf
jmp
fstpt
jg
xchg
and
xor
dec
push
cmpsl
pop
add
test
mov
sbb
pusha
scas
rol
dec
aam
lock
pop
sbb
pop
rorl
in
cli
ljmp
das
call
cmovg
lds
bound
lock
lret
stc
scas
dec
mov
imul
aaa
cmp
jbe
xor
cmp
dec
jmp
into
mov
mov
fcmovbe
xchg
jmp
aaa
rcrb
jno
fcomip
fcoml
dec
mov
addr16
mov
and
mov
pop
scas
popa
push
outsb
popa
fidivl
push
fmull
pcmpgtd
pop
jbe
dec
fxtract
test
out
push
adc
sbb
jge
push
add
xor
pop
fldt
ds
add
test
test
ficompl
pushf
pushl
ret
sti
fcoms
xor
xor
xchg
or
jge
negb
leave
stos
aaa
cltd
or
mov
pop
out
in
rcrl
xchg
pop
fwait
cld
shlb
bound
pop
push
fisttps
mov
xchg
dec
lods
mov
and
fcoms
outsb
inc
push
fwait
dec
inc
mov
add
pushf
jb
and
pop
and
testb
mov
mov
shlb
add
sbb
cmp
imul
imul
test
xor
pushl
jmp
xchg
je
adcl
je
xchg
rorb
sbb
fisttps
test
jg
scas
out
jnp
scas
arpl
dec
xor
mov
jno
fwait
movsb
mov
dec
sbb
ret
push
fstl
lret
xchg
ds
int
adcb
xlat
sub
jo
ljmp
out
push
cmp
mov
mov
aam
add
mov
cltd
inc
sti
stc
loope
std
xchg
imul
out
cs
jl
bound
xor
fimuls
adc
adc
adc
xchg
inc
cmpsl
sti
ret
fisttps
fisttpll
inc
insb
insb
xchg
std
mov
jmp
cwtl
divl
push
jg
fnsave
adc
and
mov
mov
in
in
insl
inc
push
leave
ljmp
adc
pusha
add
mov
dec
cltd
pop
jl
insb
mov
sbb
sbb
push
in
xchg
push
lds
out
fisubs
pushf
daa
jnp
mov
mov
jle
addr16
ljmp
outsl
fwait
stos
sar
imul
push
bound
jle
cmp
lret
mov
mov
movl
adc
cmp
wrmsr
fistps
jmp
and
aad
dec
loope
pushf
pop
shlb
out
jbe
adcb
out
lock
movsl
xchg
xlat
cmp
test
ficompl
pop
ror
pushf
sbb
cmp
daa
pop
push
pop
pop
fidivs
push
adc
mov
inc
mov
mov
outsb
sub
xor
and
daa
pop
add
cmp
out
sub
jecxz
addr16
cmc
loop
add
repnz
mov
fcomps
popl
xor
mov
fdivrl
test
add
add
and
pushl
pushf
movw
add
bt
pushf
pushf
call
movl
movb
movb
lea
jmp
sarl
cmp
mov
jno
mov
xchg
mov
out
imul
loop
jge
out
cmp
fisttpll
outsl
insb
xchg
pop
hlt
ret
or
xor
push
jle
or
daa
mov
mov
dec
movsb
mov
adc
add
mov
mov
mov
mov
jg
jnp
lahf
push
dec
add
add
loop,pt
adcl
and
jg
sub
test
enter
shrl
shlb
sbb
jl
xchg
jo
mov
xlat
cmp
leave
jg,pn
jae
fildl
es
lret
int
mov
cld
jbe
fwait
mov
xor
mov
mov
imul
mov
rcl
lahf
ja
xor
mov
cmp
inc
stos
mov
pop
int
inc
sbb
stos
sbb
lcall
add
scas
ja
add
mov
adcl
cmp
or
push
jmp
add
ret
imul
pushf
lahf
imul
or
inc
mov
cmp
jns
flds
adc
ja
xor
push
xor
and
cmp
and
xor
dec
pop
jge
mov
xchg
cmp
pop
popf
out
xchg
push
out
in
scas
push
ljmp
mov
jae
aas
add
fisubrs
cld
leave
push
mov
xor
push
fdivrs
push
jbe
pop
xchg
cwtl
aaa
fisubrl
xchg
sbb
js
jae
pop
cs
adc
inc
and
scas
pop
xorb
insb
lods
je
scas
clc
mov
xor
or
pop
push
sub
sbb
xchg
sbb
push
sub
cmpsb
sub
dec
test
xchg
sub
push
mov
pop
fiadds
repnz
adc
test
lods
sub
sahf
inc
shlb
mov
jecxz
xor
repnz
leave
int3
jno
adc
ret
lods
clc
mov
add
sahf
addr16
inc
stos
sbbl
mov
xor
inc
stos
fs
xchg
repz
mov
fldt
add
dec
mov
and
add
mov
xchg
dec
divl
inc
imul
mov
movsbw
movzbw
call
xchg
loope
test
xchg
push
orl
test
fistpl
ljmp
sahf
pop
fldenv
add
mov
and
adc
mov
and
mov
andl
movsl
incb
loop
and
mov
inc
ja
sbb
outsl
jl
cmpsb
repnz
std
pushf
call
xchg
out
fcoml
mov
addr16
inc
sbb
bt
test
sub
pusha
pushf
lea
call
pushf
movb
jmp
xor
pop
ficomps
out
cmp
inc
jmp
xor
jo
add
sti
cwtl
inc
jnp
divb
mov
fwait
mov
enter
dec
cmpsl
loopne
inc
xchg
jb
rclb
mov
cmp
fcmovnb
xor
or
imul
mov
xchg
lods
xor
mov
mov
add
sbb
jnp
adc
jmp
lret
mov
or
pusha
testl
sub
test
inc
mov
cmp
mov
negl
loop
xlat
es
stos
jp
xor
pop
adc
out
cs
sbb
data16
xchg
inc
push
shll
mov
enter
cmp
fistl
pop
xor
sahf
scas
lret
lret
adc
lods
xchg
mov
ja
lods
or
mov
in
dec
in
mov
and
int
jnp
xchg
dec
push
mov
and
popf
add
pop
xor
sahf
jecxz
inc
icebp
push
in
leave
pop
rolb
aaa
jle
add
dec
pop
sbb
pop
fisttpll
sbb
jno
cmp
cld
sbb
mov
mov
mov
lcall
mov
testb
sub
mov
xchg
cld
cmpsl
xchg
mov
shrb
dec
xchg
jne
pop
lods
xchg
sbb
fdivr
mov
mov
add
add
aaa
popa
stos
cmpsb
inc
mov
test
jne
push
call
aas
xor
sbb
sarb
pop
loopne
int
mov
pop
mov
clc
rolb
aas
insb
add
sub
pop
and
je
lahf
sbb
jp
cwtl
inc
scas
cmp
ljmp
mov
add
je
add
movl
movl
movl
movb
lea
jmp
inc
in
mov
int
ret
xchg
dec
les
push
cmp
push
popf
mov
sbb
dec
add
mov
pop
adc
jbe
test
add
hlt
in
fcoms
xlat
or
cmp
cmpb
xor
jae
adc
inc
ret
gs
inc
sub
mov
and
xchg
mov
or
and
mov
mov
fidivrl
inc
insl
cmp
dec
mov
adc
mov
mov
cmpsb
mov
ficomps
in
add
int3
jnp
mov
add
jle
pushf
pop
lcall
inc
and
sub
bswap
cmpsb
cmp
cmp
xchg
inc
jmp
add
clc
lret
jl
xor
cli
filds
jp
aam
lretw
cmp
das
mov
scas
shrl
jno
pushf
stos
pusha
lea
jmp
add
stc
mov
mov
cmc
mov
pusha
repnz
pushf
lea
jne
setp
lahf
movb
bswap
cwtl
bswap
push
pusha
pushl
pop
pop
lea
pusha
jmp
jne
sub
jmp
loope
mov
xor
xchg
das
rcrb
leave
ret
xchg
hlt
xchg
addr16
in
jbe
test
jmp
dec
or
int3
inc
test
xor
fildll
pushf
lock
jge
out
and
cmp
pop
xor
mov
loop
or
ljmp
test
aaa
outsb
add
aaa
int3
jns
push
sbb
dec
rep
and
int
test
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
jbe
mov
xchg
gs
jg
in
or
or
fidivs
dec
out
insl
inc
sub
pushf
scas
fdivs
stc
push
dec
insl
scas
xor
pop
ret
sbb
out
push
or
adc
jl
aaa
mov
mov
sub
cmp
sbb
mov
sbb
out
and
mov
fadds
mov
std
and
xchg
pop
mov
call
jmp
movl
movsb
sbb
xor
mov
sarl
mov
sub
jns
in
scas
push
aad
pop
fsub
mov
pop
aas
divb
and
xor
inc
scas
test
push
imul
mov
pop
fstpt
jle
or
fnstenv
ror
lods
lea
jge
lahf
cmp
xchg
jo
ret
jmp
lds
fs
bt
add
jmp
jnp
xor
ret
pop
dec
leave
push
xchg
push
outsb
mov
std
bound
ja
fsub
inc
pushf
scas
jg
lods
sub
int
repnz
pop
dec
mov
xchg
sub
outsl
add
inc
sbb
sub
dec
int
sahf
push
inc
pop
mov
inc
hlt
repz
mov
repz
adc
divb
cmp
stos
xor
push
mov
add
jp
cwtl
cmp
inc
push
add
xor
ret
int3
mov
scas
sbbb
dec
popf
dec
stos
dec
movsl
pop
xor
cli
shrl
rcrb
mov
inc
addl
ja
test
je
popa
cltd
dec
divl
xchg
out
sbb
cmp
fistpll
aad
add
out
jbe
mov
pop
stos
into
push
cmp
dec
mov
fadd
push
sti
pusha
add
fs
adc
cmpsb
popa
mov
jbe
iret
pop
and
adc
inc
cltd
and
pop
mov
cmp
pop
jnp
adc
xchg
cmp
xlat
icebp
ss
mov
inc
add
inc
div
jne
insb
out
enter
adc
stc
fwait
testl
jne
mov
sarl
inc
pop
movsb
dec
pop
and
mov
hlt
jns
cmpl
xchg
arpl
sub
inc
xor
pop
and
movb
cwtl
push
cwtl
mov
call
xor
jbe
or
pop
stc
loopne
repnz
cs
mov
and
mov
movb
xchg
inc
lds
hlt
jne
shrl
dec
pop
mov
lods
in
dec
out
lods
shlb
mov
clc
add
jne
mov
mov
aam
sbb
and
push
leave
push
push
lods
les
mov
stos
xchg
negb
test
cwtl
icebp
subl
das
and
xchg
stc
hlt
mov
mov
pusha
stos
inc
sbb
lret
inc
adc
xchg
adc
fidivs
push
dec
jbe
in
pop
inc
cmpsl
push
movl
pushf
pushf
pushf
lea
jmp
mov
jbe
xor
test
fwait
dec
leave
test
mov
test
js
sbb
lods
adc
fsub
aas
shlb
mov
or
pushf
jecxz
and
outsl
hlt
lret
in
ret
xor
sub
inc
ret
test
insb
leave
xchg
sbb
rcr
xchg
outsb
jecxz
loope
hlt
dec
sarl
cmp
scas
jl
mov
mov
sbb
xchg
push
mov
push
jbe
push
rclb
andl
mov
fnsave
pop
sub
cmc
ret
rolb
inc
pusha
mov
jno
stos
add
adcb
mov
and
fwait
and
mov
test
fildll
sub
std
cmpsl
in
push
or
jae
dec
inc
and
mov
fcoms
xchg
lods
jp
xlat
lea
ret
loopne
cmp
push
inc
stos
ret
enter
arpl
cmc
lcall
int
aaa
cld
mov
inc
gs
mov
std
cmp
stc
jle
jb
lock
push
mov
pushf
movw
mov
bswap
movzbw
mov
seto
pusha
mov
push
mov
jmp
inc
push
fmull
sbb
add
lods
daa
ljmp
movsb
mov
cmc
xchg
or
cmpsl
sbb
bnd
into
pop
test
cmc
jmp
jmp
cmp
rcrl
push
cmp
jg
dec
mov
cmpsb
popf
push
insl
mov
loop
add
ds
xchg
jne
jmp
or
xchg
repz
and
pushf
jno
aam
dec
pop
sbb
jmp
outsb
insl
mov
sbb
push
xchg
aam
divb
fimull
and
sub
cmp
je
jnp
fs
cmp
fistpll
jmp
imull
push
or
mov
in
pop
ret
hlt
outsl
mov
inc
mov
inc
out
pop
fsub
into
test
sti
lret
cs
fcoms
mov
faddl
pop
adc
sbbl
ss
mov
sti
ficompl
mov
cmp
dec
mov
pusha
aad
push
test
xor
insb
sub
sub
add
mov
shll
popa
adc
jp
pusha
cmp
push
cld
lahf
ss
inc
shl
pop
jge
ja
lock
jnp
call
jge
pop
xor
lret
pusha
push
mov
dec
cwtl
mov
push
pop
test
movsl
jb
enter
adc
sbb
or
lret
sbb
push
inc
lea
jmp
mov
push
jbe
adc
xor
xor
out
inc
in
mov
mov
cli
xchg
jmp
push
pop
mov
jae
lahf
xchg
out
push
jne
jecxz
push
or
cmp
lods
aad
mov
cld
pop
imul
ficomps
cltd
in
xchg
inc
jns
lret
es
add
pop
push
repz
adc
inc
stc
in
lret
cmpl
stc
mov
push
xchg
xor
scas
ds
in
inc
push
stc
xor
lea
mov
cmc
fs
ja
call
mov
sub
jne
xchg
push
or
pop
xor
les
xchg
dec
arpl
xchg
push
jbe
xchg
popa
in
mov
out
sbb
loopne
notb
test
or
cmp
adc
pop
or
cmc
mov
pop
flds
pop
andl
pop
popf
mov
dec
adc
inc
inc
jle
xchg
mov
in
push
scas
daa
fidivrs
push
sub
mov
std
iret
push
push
and
inc
sbb
lcall
enter
xor
stos
mov
jmp
mov
mov
fldenv
push
das
or
insl
testb
xor
push
mov
fbstp
cmp
out
lea
and
fstps
lds
in
sbb
pop
fs
iret
cwtl
ret
add
mov
add
mov
and
push
mov
subl
insb
test
push
pop
call
mov
sbb
xchg
adc
cltd
dec
inc
out
pop
add
sbb
pop
push
xchg
lea
add
sbb
cli
adc
xor
in
push
adc
xchg
push
jbe
jbe
xor
adc
adc
xchg
lea
ret
xchg
shrb
mov
ret
push
jnp
xchg
mov
sahf
scas
sub
fadd
dec
lods
cmpsb
cli
mov
ljmp
inc
push
clc
dec
push
fldcw
lret
add
mov
arpl
mov
dec
shrl
pop
xchg
dec
enter
je
jb
lock
cwtl
sahf
scas
outsb
cmc
pop
sub
mov
imul
clc
xchg
jp
xchg
lret
loope
lea
xor
pop
xchg
dec
pop
inc
pop
xor
mov
into
xor
mov
fadds
lds
adc
repz
xchg
sub
pushf
or
push
jbe
jae
test
in
fwait
inc
stc
nop
pop
mov
xlat
xchg
ret
adc
dec
inc
pop
out
mov
push
aad
and
adc
lods
pop
repnz
aad
or
dec
ja
les
cmp
push
fistps
jecxz
fnstcw
orl
bound
sub
dec
lds
or
sub
mov
orb
lcall
gs
mov
ret
js
cmpsb
xchg
or
xor
push
mov
xchg
push
jbe
call
jecxz
dec
add
inc
dec
mov
hlt
test
fstpt
mov
imul
nop
repz
lods
add
pop
imul
addb
es
inc
sub
inc
push
cs
adc
lods
mov
faddl
cmp
ret
xchg
or
mov
inc
cmc
loop
or
scas
dec
or
pop
je
imull
aaa
testl
cltd
lock
dec
rcll
or
pop
mov
jmp
and
out
in
lret
jp
fsubs
push
out
add
testl
lock
ja
sub
and
fcmovnu
mov
sub
inc
cmp
cmpb
imul
sbb
imul
repnz
mov
jge
jbe
div
push
and
push
sbb
or
stos
mov
mov
sti
daa
xorb
outsb
push
test
jno
std
gs
dec
jp
clc
dec
add
negl
pusha
popf
jmp
les
roll
adc
into
insb
test
mov
pop
sbb
aad
push
pop
adc
stos
inc
sub
mov
xchg
insl
sub
ljmp
xchg
xchg
xchg
sbb
ljmp
dec
add
mov
cmpsl
jge
mov
mov
mov
adc
stc
or
in
in
test
or
xchg
jae
dec
and
inc
imul
xchg
out
push
cmc
inc
cmp
or
cwtl
dec
add
push
pop
jl
into
dec
les
sti
iret
out
loopne
mulb
movsbw
bswap
jmp
jecxz
fwait
xchg
push
jbe
xor
inc
jecxz
cmc
mov
aad
testb
fcmovbe
xchg
sub
mov
pop
fwait
cmp
loopne
dec
adc
lret
xchg
mov
mov
mov
push
push
fmull
mov
jp
jns
add
pop
adc
sbb
sbb
xor
cltd
push
sbb
imul
and
iret
imul
imul
movb
inc
cmpsb
xchg
push
mov
mov
ljmp
pop
loop
mov
add
pushf
inc
mov
push
jmp
xchg
and
xchg
push
jbe
pop
add
movsl
nop
jmp
gs
pop
mov
mov
sub
lock
inc
lcall
fisubs
mov
dec
clc
les
mov
movb
jne
movsb
cmp
jo
testb
mov
jp
dec
sub
cmpsb
dec
lods
arpl
xor
fwait
xchg
add
dec
mov
jmp
xchg
pushf
dec
adc
lea
xchg
push
jbe
cmp
mov
xchg
push
aas
testb
cmp
mov
push
sbb
fisubl
les
mov
dec
push
adc
dec
adc
jp
jle
sbb
push
out
sub
pop
jle
jl
xor
mov
xchg
lods
add
inc
and
pop
dec
sbb
dec
xchg
mov
bswap
not
pushl
lea
mov
jmp
pusha
lea
jne
pusha
lea
movb
mov
lahf
lea
pushf
mov
setno
setge
lea
pushf
lea
pusha
push
call
int
mov
loope
pop
testb
pop
sbb
es
test
lds
fdivrp
mov
jb
out
mov
add
push
mov
sbb
lea
les
jp
rol
icebp
out
mov
daa
pop
mov
xor
aad
aam
push
repz
nop
push
scas
and
xor
popa
and
in
idivl
mov
push
jbe
fimuls
scas
cs
rep
sub
or
subb
scas
inc
xor
jp
inc
push
popf
out
or
imull
lret
jp
sbb
addr16
mov
inc
pop
lret
aam
cmc
pop
scas
adc
dec
mov
mov
mov
es
pusha
ja
push
enter
testb
fidivs
xchg
hlt
pop
mov
add
push
rorl
adc
pop
jne
sub
ljmp
lret
mov
loop
hlt
shrl
js
mov
cmpsb
mov
pushl
movw
lea
je
clc
bt
add
push
lea
jmp
adc
jmp
or
mov
push
jbe
sbb
jle
int3
pop
ficoml
scas
push
test
movsl
sub
sub
arpl
cmp
sti
hlt
mov
scas
fstl
pop
xor
jp
inc
cld
fwait
push
add
jp
lret
cwtl
sbb
in
enter
call
dec
xor
adc
sub
pusha
pop
mov
sbb
jecxz
aaa
stos
out
out
rcrb
push
sbb
mov
inc
add
cmpb
sub
sub
mov
mov
aad
daa
movsb
sub
dec
inc
popa
imul
push
scas
lret
mov
lds
adc
arpl
sbb
and
std
scas
in
out
sbb
lds
jp
xor
mov
daa
subl
sub
pop
xchg
pop
pop
push
inc
outsl
xlat
push
add
cmp
mov
mov
sti
xchg
fsubrs
sbb
dec
scas
sti
xchg
mov
fs
pop
daa
pop
or
mov
push
xchg
add
ja
ljmp
mov
icebp
mov
mov
sbb
mov
xor
test
push
pusha
movb
movw
pushl
ret
xchg
fwait
push
jbe
mov
sti
jo
in
repnz
xchg
bound
incb
data16
lret
lcall
sub
rcrl
cltd
push
ret
movsb
std
push
xor
cld
mov
dec
mov
jbe
xor
insb
out
lea
cmp
cmp
into
sub
js
inc
in
cmp
or
test
jg
push
adc
inc
mulb
mov
lret
testb
pop
dec
pop
inc
lds
sbb
loopne
movsb
clc
outsb
cmp
mov
arpl
inc
mov
pop
pusha
test
push
pop
lds
aad
popf
add
and
mov
jno
adc
stos
xor
jle
xchg
sub
fdivrp
imull
cmp
lea
jb
test
pusha
movb
cmp
jmp
addr16
pop
pushf
push
jbe
leave
pusha
and
xchg
lock
jbe
je
mov
mov
jg
test
xchg
jnp
fsub
sbb
scas
gs
jno
xchg
jo
cmpsl
xrelease
xchg
or
xor
sub
pop
jge
sub
jbe
ljmp
stc
lahf
fsubs
cwtl
in
jge
in
sub
outsb
sbb
pop
sbb
adc
push
mov
cmp
xor
inc
es
add
addb
in
push
call
push
scas
dec
aad
inc
or
push
lock
cli
cmc
push
fdiv
test
jge
cli
ret
mov
gs
pop
addb
les
into
dec
or
stc
call
test
jmp
jecxz
into
inc
les
es
pop
jbe
dec
fnstsw
hlt
xchg
jle
orb
pop
stos
jnp
loope
mov
sbb
xor
lods
pushf
push
jbe
xor
stos
sbb
mov
out
stos
mov
fnstsw
lret
fwait
and
les
jecxz
inc
dec
lods
addr16
jns
ret
dec
mov
inc
sbb
fwait
in
or
out
mov
push
adc
adc
test
xor
push
in
test
adc
in
dec
jl
push
jmp
add
test
test
aam
imul
shlb
xor
hlt
xchg
cmp
outsb
push
les
jae
mov
lret
or
mov
pushf
push
jbe
setp
xchg
dec
jecxz
inc
mov
jp
notl
test
cmp
inc
out
js
add
les
inc
sahf
fidivrl
faddp
xor
outsl
cs
xor
insb
cmp
pop
pushf
cld
add
push
dec
add
mov
xchg
jge
push
xor
icebp
scas
cmp
pop
mov
inc
mov
jnp
adc
into
sub
repnz
fstl
outsl
cmp
push
paddq
ljmp
mov
jo
enter
push
lea
je
pushf
lea
jb
pusha
adc
pushf
lea
jmp
call
pushf
lea
jae
cmc
jmp
push
movl
pusha
lea
je
jmp
pusha
lea
js
ja
and
not
pushf
sub
bswap
shl
btr
btc
sub
add
shr
mov
and
pushf
cmc
mov
clc
stc
clc
pushf
repnz
call
pusha
pushf
lea
jae
pushf
jmp
dec
dec
inc
push
push
dec
xor
cs
dec
dec
add
mov
jmp
cwtl
xor
push
setno
aaa
or
mov
btr
neg
lahf
sub
mov
push
bsr
push
aas
dec
btr
and
push
not
sar
bsr
push
bsr
rol
mov
push
cmc
bt
call
mov
jbe
aad
jmp
loope
sbb
imul
adc
push
cli
ret
loope
cs
fidivs
mov
addl
fidivl
jmp
add
inc
xorb
pop
es
sub
jecxz
xchg
or
pop
and
fdivrs
push
cmc
out
add
fidivl
les
pop
and
sub
test
aas
shlb
mov
push
jbe
dec
incl
fcomi
pop
mov
into
popf
pop
call
test
repz
into
fstps
jmp
sbb
popf
sub
mov
pop
pop
jns
cmpsb
lea
mov
add
cmc
pop
test
imul
jp
int
ljmp
mov
rorl
mov
mov
sahf
inc
int3
sbb
jp
jo
jbe
dec
lds
ret
mov
imul
shlb
cmp
jp
cld
lret
pop
fildll
lods
inc
sbb
sbb
sub
and
aad
fldl
cmp
or
mov
outsb
mov
dec
xor
sahf
mov
enter
mull
mov
mov
stos
adc
pop
mov
sub
xor
popa
and
outsl
scas
push
loop
es
rorb
bswap
mov
movb
pushf
pushl
pushl
ret
inc
inc
jmp
sub
imul
pop
rolb
std
xlat
dec
cld
pop
mov
fldenv
jmp
dec
dec
or
inc
testb
in
push
sub
sti
ret
xor
pop
and
loopne
mov
dec
cmpl
mov
idivl
jns
cmp
in
xchg
sbb
shll
aaa
dec
push
or
in
jp
into
sub
adc
shrl
das
aam
mov
adc
pop
sbb
push
mov
ljmp
jne
shl
call
stc
jge
mov
pop
aam
push
stc
mov
mov
das
cmp
movsb
sti
ret
and
rcll
adc
sub
stc
jge
mov
loope
xor
push
addr16
fs
pop
pop
sbb
mov
push
out
and
scas
or
out
inc
add
rclb
insb
icebp
stos
add
iret
ljmp
inc
mov
stos
mov
stos
xchg
jl
jb
lock
push
mov
dec
shlb
out
adcl
cwtl
cld
fsubl
pop
enter
adc
xor
je
rcrb
gs
mov
std
mov
cltd
xchg
dec
add
dec
push
std
test
in
jmp
jb
rol
adc
repnz
push
insb
adc
push
jns
ljmp
rcrb
sbb
xor
mov
sarl
mov
xor
int3
or
pushf
cltd
dec
sti
push
mov
enter
mov
and
out
mov
mov
flds
in
imul
pop
jl
add
jbe
sbb
cli
mov
jmp
cmpsl
mov
loopne
mov
out
jecxz
loopne
lret
arpl
pop
sbb
lcall
xor
pop
lret
insb
push
add
jnp
adc
mov
pop
and
mov
fisttps
es
sbb
je
jge
mov
adc
pop
adc
cwtl
jnp
rclb
lret
push
dec
and
test
push
int
and
mov
or
pop
inc
pop
mov
sbb
decl
xchg
int
aaa
adc
cs
lea
ret
mov
push
push
mov
movb
lea
jmp
lea
jne
bswap
sbb
sub
pushf
xor
mov
test
add
clc
pushf
test
neg
mov
pusha
push
pushf
push
test
pushf
pushf
lea
je
push
push
sub
test
clc
push
pushf
cmp
jmp
aas
pop
xlat
mov
cld
mov
loop
sub
cmpsb
or
mov
or
sbb
icebp
xchg
push
cmp
pop
jns
loop
pop
mov
addb
fildl
jno
cmpsb
mov
fdivs
icebp
lcall
out
mov
mov
fld
pop
cmpsb
insl
in
test
cmpsl
sbb
xchg
aaa
loopne
pop
ljmp
mov
adc
insl
add
pop
adc
clc
cmp
add
mov
pop
add
pop
mov
add
pop
push
mov
add
add
out
sti
lea
jne
setbe
lahf
mov
pusha
pushl
pushf
pushf
lea
jmp
into
xchg
push
jbe
fisubl
jg
or
pop
inc
mov
test
mov
icebp
mov
jbe
adc
adc
xchg
or
punpcklbw
xor
lods
xor
out
xchg
dec
pop
in
dec
lret
and
jecxz
es
cmp
scas
stos
jns
xchg
jno
or
out
call
pop
sub
add
pushf
add
jmp
mov
inc
ret
movb
jmp
jmp
push
in
push
jbe
dec
sbb
push
leave
test
subl
cmp
cmp
inc
in
jle
push
add
and
scas
xor
cltd
push
sub
add
xchg
lods
add
pop
or
cmp
out
adc
pop
or
xchg
jne
xor
cmp
aaa
ficoms
cmp
out
cmp
cmp
xor
imul
cmp
adc
movsb
push
jbe
je
stos
jns
sbb
xor
add
ja
cmp
lahf
pop
jbe
push
add
ficoml
cmpsb
lahf
jl
loop
addb
cmp
aam
sbb
inc
movsb
icebp
xor
xchg
pop
add
fsubrs
cmc
push
push
cltd
xchg
movsb
push
push
icebp
imul
adc
popf
mov
hlt
inc
loopne
in
imul
daa
or
loop
and
mov
repz
cs
int
call
sti
mov
push
in
in
xor
mov
jo
push
mov
ljmp
jp
mov
adc
out
fwait
mov
adc
mov
jne
loope
gs
jno
add
xchg
mov
rcrl
sbb
or
inc
dec
sub
fwait
or
and
cwtl
xor
sbb
mov
pushf
cmc
xor
lea
ja
inc
jmp
pushf
movl
call
and
cld
cmpsb
push
jbe
scas
adc
sub
pop
mov
std
mov
fisubrl
mov
dec
xlat
pop
rcrb
inc
dec
push
xorl
fwait
imul
sub
loope
cltd
outsl
push
sbb
rcll
cli
xor
roll
xor
add
cs
popf
dec
xor
js
mov
push
lret
or
pop
pop
out
ja
and
cmp
ficoms
jp
fsubl
mov
or
cmpsl
jb
loopne
mov
lea
jae
call
inc
call
orl
jge
aaa
sub
daa
cmp
mov
sub
fwait
push
mov
add
xchg
loop
call
jge
cmp
pop
adc
push
xchg
loop
mov
cld
ljmp
fwait
mov
mov
fmul
pushf
adc
cmpsl
enter
cwtl
jnp
lods
push
daa
ret
xchg
jnp
sub
inc
add
mov
lods
sbb
add
pop
mov
mov
clc
ficompl
inc
fld
push
and
lods
inc
dec
dec
mov
clc
ljmp
fwait
pop
lods
cmpsl
and
inc
mov
push
push
pop
push
push
mov
pop
jns
xchg
mov
notb
hlt
xor
sbbb
call
adc
orl
push
push
push
mov
insl
pop
mov
push
mov
xchg
test
mov
ja
dec
addr16
cmpsl
mov
jnp
gs
mov
push
xchg
test
dec
clc
xor
or
push
imul
sbbb
cld
mov
cmpsl
jge
jmp
and
sub
lods
mov
sbb
mov
test
adc
movsl
jge
rcrl
mov
cmpsl
lods
imul
addr16
pop
jns
pop
stos
adc
nop
dec
insb
stc
pop
movsl
cmp
orb
lahf
mov
add
loope
imul
mov
inc
ljmp
ja
cmp
jne
or
lcall
xchg
sub
cld
jg
mov
mov
pop
dec
push
and
test
xchg
lock
push
jge
and
sbb
pushf
cmp
scas
data16
xor
mov
clc
mov
adc
cli
dec
dec
rclb
outsb
test
inc
jb
and
mov
xor
imul
fwait
pop
sbb
jno
xor
movsl
popf
inc
jno
add
js
fidivl
mov
shlb
dec
jge
or
mov
shrl
sub
mov
lods
sahf
movsl
pop
lahf
or
inc
mov
sbb
sub
lock
movsl
mulb
mov
mov
jmp
sbb
sbb
fwait
rcll
out
push
mov
mov
push
loop
xor
and
imul
xchg
mov
imul
sbb
pop
xchg
ficoml
add
jo
mov
test
pop
loopne
sbb
push
adc
xor
das
cwtl
sar
popa
stc
push
out
xor
mov
fmuls
jno
pop
mov
gs
ja
jns
repnz
popf
mov
js
mov
scas
or
push
js
mov
pop
jl
movsb
clc
lcall
and
gs
cmp
inc
push
push
push
jne
pop
pop
les
sbb
fistl
and
jo
cmp
out
cmpsl
cwtl
in
xor
jg
fwait
fwait
call
jge
xchg
outsl
push
sbb
xchg
mov
sub
imulb
pop
jge
fstps
shll
jecxz
stos
push
popa
mov
or
xchg
and
movsl
scas
gs
pop
pop
jo
leave
and
ljmp
or
mov
cwtl
in
jmp
adc
dec
or
lods
mov
cltd
bound
xchg
shrb
cld
sbb
sbb
jge
movsl
cmp
pushf
enter
das
sbb
sbb
mov
adc
mov
pop
andl
mov
mov
sub
sbb
cltd
lret
ja
popa
arpl
fisubl
sub
mov
push
mov
ficoml
and
inc
lods
cmp
mov
pop
adc
or
cmp
addr16
sub
lea
addb
fwait
jne
push
std
jge
ljmp
outsl
sub
xor
shlb
mov
inc
mov
and
mov
shlb
sub
clc
cmp
cmovns
dec
and
mov
jne
push
gs
sbb
popa
mov
jge
mov
scas
test
sub
push
into
nop
shlb
out
inc
add
cmpl
inc
das
ret
dec
and
dec
jns,pn
add
rorb
push
push
cltd
fwait
push
lret
dec
jns
or
leave
cltd
xor
add
out
and
cwtl
mov
imul
jns
nop
gs
push
cwtl
test
and
and
call
fcmovb
out
and
add
loopne
nop
push
imul
xor
pop
jp
and
scas
insl
sub
or
les
dec
nop
mov
dec
mov
dec
insl
sarl
insb
loopne
sbb
cwtl
ljmp
fwait
xchg
fldt
cmpsl
fldcw
ret
dec
fcomps
xchg
push
mov
mov
inc
xchg
cmp
cmpsb
gs
sub
xor
cmp
mov
fldenv
pop
aam
cltd
adc
push
jmp
inc
sbb
push
and
sarl
faddl
lods
lock
push
push
sarb
pop
jmp
mov
fwait
repnz
js
sar
arpl
inc
imul
pop
xor
test
pop
mov
pop
mov
mov
imul
repnz
shrb
jbe
pop
movsl
repnz
sbb
jns
out
xor
sub
stos
lret
fsubs
mov
test
sbb
mov
mov
adc
jg
clc
push
push
xor
cld
hlt
dec
pop
cmp
or
loopne
mov
mov
add
mov
xchg
mov
mov
push
pop
pusha
fsubs
mov
mov
or
imul
movsl
lahf
or
in
pop
mov
inc
or
sub
and
sahf
dec
les
jl
andb
inc
popa
and
pop
inc
inc
scas
sub
sub
adc
pop
mov
cltd
jns
cld
ljmp
dec
movb
mov
dec
jns
shlb
inc
push
es
cmpsl
cmpb
lock
add
cmc
pop
push
stos
sarl
mov
jns
lods
sbb
fwait
add
popa
enter
clc
pop
dec
mov
addr16
jns
cmp
fistps
les
shr
ds
clc
xor
call
fwait
xor
dec
mov
loopne
xor
gs
dec
scas
inc
inc
lcall
clc
mov
int3
sbb
mov
jmp
push
imul
in
stos
adc
inc
fiaddl
sub
gs
cltd
cli
out
shr
mov
fmull
sbb
jmp
pop
pushf
mov
test
dec
pop
or
add
push
mov
imul
push
add
pop
jo
mov
add
push
and
jno
lea
in
jae
negb
movsl
loop
and
or
and
mov
cwtl
fimull
scas
cmp
aad
dec
loop
sub
fiaddl
in
or
loopne
sub
mov
inc
xchg
add
sbb
and
xor
arpl
stc
add
xor
aas
inc
jne
push
push
jge
mov
jp
call
shrl
imul
inc
jecxz
or
cmp
pop
sub
fwait
inc
test
xchg
adc
imul
movsl
test
jmp
mov
popa
adc
dec
icebp
pop
push
mov
mov
flds
jne
inc
mov
push
test
mov
sbb
and
cltd
cwtl
int
mov
pop
rorl
and
cltd
mov
cmpl
or
adc
sub
xor
xor
mov
pushf
and
leave
js
shl
add
inc
jne
fsubrs
ds
pop
sbbb
sub
cmp
lods
mov
popa
and
test
xorb
or
mov
jnp
bound
daa
clc
pop
arpl
daa
pop
outsl
sub
popf
dec
insl
mov
cmpsl
ja
mov
mov
mov
movsl
xor
loopne
shrl
pop
lock
and
push
jg
mov
popa
jge
lret
xchg
dec
into
stos
mov
pusha
mov
sbb
dec
shlb
fadds
xor
xchg
mov
gs
pushl
push
sub
push
cwtl
inc
cwtl
test
inc
pop
sti
ds
cmp
fsubs
inc
sti
mov
mov
and
popa
das
jge
mov
pusha
stc
cmc
nop
mov
insl
inc
sub
dec
sbb
loope
jne
movsb
jns
and
cld
push
adc
push
jae
sub
lock
pop
lret
fnstenv
clc
fwait
ds
pop
in
xor
and
sbb
mov
mov
xchg
xchg
mov
xor
mov
shl
std
stc
enter
repnz
and
push
scas
xchg
dec
mov
push
fistl
cmp
push
cltd
int3
push
movb
mov
mov
int
adc
scas
mov
fwait
mov
clc
add
out
mov
mov
popa
xchg
lcall
sahf
dec
cmpsl
cmpsl
push
mov
and
loopne
inc
mov
dec
mov
out
loopne
mov
pop
imul
scas
addr16
stc
arpl
cmp
pushf
adc
into
inc
mov
fadd
pop
xchg
gs
cmp
stos
mov
adc
out
jge
dec
or
jnp
xchg
mov
sbbb
outsl
jae
cltd
scas
or
lcall
adc
cwtl
push
sub
sub
or
fwait
inc
popa
call
mov
cmp
pop
add
mov
lret
mov
push
adc
dec
dec
inc
cmp
cmp
test
lret
sahf
loop
add
jmp
mov
std
pop
cmp
add
ficompl
add
adc
push
cld
lcall
adc
mov
mov
or
lahf
lcall
pop
dec
push
call
or
mov
stos
dec
sbb
push
dec
jne
and
scas
dec
clc
mov
mov
lcall
dec
xorb
push
inc
mov
sbb
adcl
push
cmp
stos
pop
jns
and
sub
lret
and
cmp
loopne
mul
scas
dec
sub
gs
xor
cmp
jae
nop
sub
cld
mov
pop
andl
ja
adc
or
and
add
and
adcl
push
pop
icebp
push
mov
dec
lods
jg
enter
pop
push
sub
adc
inc
add
jo
lods
jb
scas
push
jns
pop
cmpsl
cmp
adc
pop
or
mov
movl
pop
sub
popf
add
jne
rorb
add
jge
scas
or
cmp
movsl
inc
or
push
xlat
fcom
pop
out
and
sub
sub
lods
enter
mov
scas
push
sub
loopne
scas
sbb
inc
out
enter
mov
dec
scas
mov
adc
adc
push
pop
pop
cli
fidivs
adc
stos
rclb
mov
movsl
fwait
mov
outsl
pop
gs
mull
pop
scas
mov
and
mov
daa
or
or
inc
scas
jecxz
mov
gs
aas
enter
shr
lods
inc
mov
push
ds
mov
test
inc
stos
mov
cmp
orb
sbb
mov
mov
pop
ret
sahf
fsubp
scas
jnp
pop
jae
addr16
xlat
arpl
rcrl
pop
test
mov
addr16
sbb
outsl
shlb
jae
xchg
push
aaa
sub
ret
cmpsl
popa
mov
sbb
or
ljmp
das
sub
cwtl
cmp
pop
mov
or
or
pop
pop
cmp
stc
in
std
sub
sub
and
mov
xchg
or
inc
cltd
shll
ja
outsl
int
xor
out
mov
jae
mov
push
xchg
adc
pop
mov
inc
pop
jae
push
outsl
sub
jns
mov
stos
addb
cmp
int3
dec
scas
aaa
mov
lret
rcrl
xlat
cmp
loopne
sbb
adc
inc
hlt
fwait
add
ja
repz
adc
cwtl
call
insb
call
jge
dec
push
jae
popf
outsl
add
push
push
stos
pusha
arpl
rcrb
pop
cmp
aaa
lret
outsl
shlb
jns
not
or
push
ljmp
cmpsl
sub
push
add
sbbb
or
pop
hlt
or
cmp
jg
enter
or
adc
inc
popa
fsubs
out
out
imul
inc
mov
arpl
rcrb
push
dec
mov
rcrl
aaa
or
aas
lret
out
test
andl
sub
xchg
fmul
dec
jo
lock
enter
pop
dec
adc
pop
ret
xchg
mov
push
mov
or
jne
dec
cmp
aad
fidivl
pop
cwtl
pop
cmp
jge
gs
sbb
pop
adcb
pushf
fists
pop
dec
les
imul
xor
dec
or
inc
mov
enter
cmp
lcall
pop
pop
cmp
addl
outsl
mov
mov
jnp
push
rcll
je
call
inc
jne
sbb
fstps
pushf
add
or
scas
out
lds
xor
adc
popa
add
add
stc
inc
cmpsl
mov
shrb
add
jo
decb
shlb
mov
jge
xorl
sub
dec
loopne
test
outsl
dec
shll
xchg
pop
adc
inc
fstpl
or
and
jno
xchg
sub
enter
mov
and
push
mov
pusha
insl
sub
nop
xor
and
in
insl
or
icebp
outsb
pop
or
and
fcoms
jnp
pop
dec
movsl
stos
test
mov
inc
or
sbb
pop
outsl
xor
pop
and
in
jno
jmp
es
ja
pop
test
fsubrs
dec
push
inc
jns
sub
sbb
scas
mov
or
popa
mov
jo,pt
dec
imul
sub
shll
dec
mov
fwait
jo
insb
rclb
jae
sub
and
pop
mov
mov
cmpsl
inc
popa
jno
add
or
fimuls
sbb
stc
dec
inc
sbb
daa
sbb
add
pusha
aaa
scas
mov
lock
clc
sub
xor
adc
ud2
test
dec
fldt
cmp
loopne
or
push
mov
movsl
arpl
mov
loopne
pop
add
mov
ds
and
out
imul
add
jnp
xor
mov
push
scas
pop
sbb
mov
mov
subl
xor
or
call
inc
popa
insl
out
ja
jae
bound
pop
sbb
lock
add
mov
jnp,pn
add
je
icebp
aam
fwait
adc
xchg
es
xchg
lret
lods
lds
push
mov
xchg
mov
arpl
cmpsl
dec
mov
popa
xchg
bound
or
sbb
movsb
lods
addr16
dec
scas
sbb
mov
fcoms
into
mov
cltd
sub
gs
xor
mov
cmpsl
cmp
lea
inc
in
mov
adc
push
or
mov
stos
test
fadd
add
inc
jnp
sub
sub
inc
mov
outsl
fcomps
jo
mov
mov
cmpsl
jo
mov
pop
or
xchg
jno
daa
pop
movsb
sbb
cwtl
rolb
xor
scas
ficoml
inc
imul
sbb
outsl
pop
sub
vdivpd
fs
mov
jge
mov
push
pushf
dec
outsl
js
cmpsl
jbe
jge
sub
push
aaa
test
out
pop
imull
sbb
fadds
pop
int3
cmp
mov
xchg
test
inc
and
aad
int
cmp
scas
adc
ss
mov
jne
cmp
sbb
jnp
push
shl
ffreep
dec
ret
pop
mov
or
lods
sub
xchg
push
imul
shrl
jmp
mov
and
mov
and
and
test
popa
nop
imul
adcb
pop
adc
adc
cmpb
je
adc
cmpsb
sbb
mov
sub
inc
addb
repz
mov
adc
fsubr
cmpb
andl
enter
push
imul
or
cmpsb
cs
push
insb
add
insl
test
adc
add
push
js
loop
ret
rcrl
pop
jae
cmp
cmpsl
pusha
scas
arpl
sub
popa
scas
imul
sbb
adc
xor
mov
mov
int
jns
or
into
imul
adc
xor
ljmp
pop
cld
les
jmp
arpl
pop
insb
cs
sbb
mov
mov
sbb
mov
dec
jae
mov
int3
cltd
mov
nop
add
stos
pop
dec
jbe
lcall
js
insl
or
outsl
mov
fadd
sti
adc
addr16
pop
mov
out
popa
adc
inc
test
aaa
pushf
and
push
sbb
inc
popa
testb
mov
js
lcall
and
push
popa
cmpsl
jns
sub
mov
out
pop
div
in
cli
outsb
inc
or
cmp
flds
lods
bound
jg
inc
daa
out
pop
scas
jo
mov
imul
scas
cmp
adc
mov
iret
dec
ds
and
mov
sbb
or
inc
sbb
les
cmp
pop
push
or
and
popa
cmp
cmpsl
xchg
push
repnz
sti
xchg
nop
js
popa
mov
inc
jp
call
fadd
popa
push
sub
outsl
xchg
ljmp
xor
jne
sti
test
lahf
jl
shll
mov
jb
inc
add
lcall
dec
scas
pop
clc
pop
dec
in
sahf
enter
adc
test
sub
dec
popf
mov
leave
shlb
imul
cmpxchg
jns
popf
push
mov
inc
imul
and
icebp
or
and
cmpsb
lcall
leave
push
xor
out
adc
lock
mov
inc
ljmp
push
xchg
in
inc
mov
mov
add
popa
call
sbb
push
mov
aas
stos
jp
test
and
lods
das
add
xor
addr16
in
xor
pop
and
scas
xor
fwait
popa
dec
js
jne
andb
leave
sub
negb
sub
or
add
mov
call
cmp
sbb
mov
and
sbb
push
inc
inc
mov
test
cmp
pop
sub
mov
pop
mov
pushf
aas
outsl
popa
pop
andb
test
cmp
lods
fs
loopne
popa
mov
mov
cltd
dec
lcall
sbb
push
aaa
sbb
dec
stc
cmp
mov
push
popa
data16
mov
cmp
mov
mov
mov
sub
scas
into
inc
loopne
movsl
or
jge
mov
scas
push
pop
fcompp
cmp
sbb
enter
leave
pushf
les
sbb
xor
mov
sbb
lds
push
cltd
adc
pop
xchg
lea
dec
dec
mov
and
inc
xchg
inc
ljmp
lods
sbb
mov
sub
pop
in
pop
xchg
sahf
sbb
repnz
jne
mov
sbb
mov
add
lods
imul
scas
out
inc
test
shll
mov
inc
inc
cmc
mov
iret
inc
fsts
fdivrl
or
int3
int3
push
sbb
push
pop
inc
popw
loopne
pop
push
xor
xor
nop
cmp
pop
add
inc
push
push
adc
fimull
pop
and
pop
rolb
sarl
or
jp
mov
push
cmp
repz
sub
fcoml
in
cmp
pop
xchg
cmp
dec
add
cmpsb
inc
xor
addr16
sahf
jno
pop
stos
or
insl
icebp
enter
aas
mov
outsl
jne
sbb
loopne
pop
mov
push
mov
lods
mov
imul
dec
sub
pop
lret
xchg
inc
mov
cltd
cmp
jl
cmp
addr16
ret
mov
imul
shr
and
and
pusha
scas
sub
stos
xor
aad
xchg
push
xchg
xor
or
and
pop
out
inc
dec
stos
add
inc
shll
cmpsl
xchg
rclb
push
xor
test
sbb
pop
roll
jno
pushf
stos
outsb
popa
cltd
out
dec
mov
inc
jnp
and
jne
mov
or
sub
jb
mov
out
or
dec
dec
loopne
inc
sahf
fstps
sub
sub
roll
mov
cmp
sub
popa
sub
pop
cmc
jmp
jae
dec
add
fsubrs
mov
dec
push
sbb
mov
mov
in
rorb
cltd
sub
mov
dec
jne
add
aas
dec
inc
pusha
dec
cmp
push
aas
cmp
les
movsl
pop
cmpsl
xlat
jl
jb
adc
test
mov
and
xor
and
dec
mov
cmp
shrl
cltd
scas
ret
je
pop
enter
mov
xor
lds
cmp
arpl
test
cmp
movsb
outsl
daa
push
in
test
insb
mov
insl
rolb
mov
aam
mov
and
cmpsl
cmp
jmp
pop
push
jbe
inc
sub
mulb
sub
sub
xchg
jb
lret
bound
bound
sbb
inc
cltd
addl
movsl
cwtl
aaa
push
enter
xchg
jbe
mov
mov
or
lea
les
inc
fcomps
icebp
sbb
rol
dec
xchg
imul
out
add
cmp
sbb
loope
sbb
adc
aam
mov
jno
in
lea
dec
movsl
nop
adc
loope
mov
inc
ret
pop
ja
ja
insl
mov
cmp
int
das
imul
push
pop
pop
cmpsl
xor
mov
and
movsl
jge
test
cs
mov
shrl
jne
jns
inc
inc
cmp
movsl
mov
or
mov
mov
ret
mov
pop
scas
dec
mov
sub
adc
cmp
push
mov
stos
and
jae
and
sbb
or
insl
jae
ljmp
adc
jp
jns
add
ficoms
push
inc
sahf
or
aas
fcoms
addr16
xchg
pop
sub
cmp
movsb
pop
insl
pop
movsl
mov
mov
jg
test
xchg
popa
rcr
add
js
and
add
jmp
sete
and
lods
push
or
pop
cmp
pop
xor
mov
xchg
loopne
pop
dec
jecxz
lods
popa
divb
sub
or
and
add
insb
adc
popa
fldcw
dec
mov
mov
js
adc
pop
int3
scas
test
push
imul
or
fsubr
insb
mov
jbe
jecxz
ret
ficoml
addb
std
dec
es
push
or
pop
test
stos
movsl
aam
addr16
cwtl
ljmp
nop
lds
add
or
or
pop
sbbl
stc
lock
loopne
enter
fwait
mov
or
sub
stc
mov
and
shll
and
cmc
pop
jbe
and
sbb
jnp
xorl
sbb
pop
daa
mov
movswl
jns
jnp
adc
shrl
jmp
lods
adc
lret
jecxz
sbb
or
aaa
inc
fs
test
rcrl
inc
fcomps
hlt
popa
clc
sbb
xchg
cmp
xor
in
test
psubusw
mov
popf
add
sub
cmc
or
dec
push
fwait
pop
outsl
pop
jmp
das
test
leave
sarb
push
mov
sub
fisubs
or
sub
mov
adc
mov
fwait
stos
inc
add
pusha
shll
xor
push
fwait
xor
mov
stos
daa
push
stos
and
mov
sub
and
lea
or
fwait
out
adcb
adc
sub
fnstenv
push
jae
mov
insl
mov
sbb
jl
and
outsl
neg
subb
clc
jbe
call
or
jne
iret
ss
outsb
scas
push
lahf
popf
cltd
xchg
inc
repz
mov
sarb
pushf
fs
sarb
mov
inc
mov
push
sub
sbb
jo
idivb
imul
mov
xchg
jmp
jp
push
test
sbb
mov
pusha
cltd
rclb
dec
lock
aaa
mov
cmp
loopne
adc
push
pusha
das
jns
js
push
mov
and
aam
pop
insl
sete
or
fbld
dec
cmp
dec
scas
cmc
js
jb
mov
mov
mov
push
loop
and
mov
pop
ds
jnp
addr16
mov
cmp
jnp
inc
inc
popa
sarb
test
dec
sbb
shll
sub
xor
aaa
mov
arpl
xchg
mov
jge
xor
cmp
mov
lods
mov
lahf
dec
xor
push
in
pop
icebp
pop
mov
xor
lea
test
test
scas
test
fwait
cltd
ret
and
sub
add
into
xchg
das
pop
or
pop
cmp
jl
sbb
insl
loopne
cmp
pop
dec
mov
pusha
inc
add
xchg
rorl
pop
daa
or
jno
lods
mov
xor
sbb
pop
or
and
push
sbb
movsl
pop
lods
scas
bound
mov
jg
dec
jle
mov
andb
jg
lock
fistpl
mov
adc
jge
or
xor
shll
mov
mov
push
jns
push
xchg
mov
and
lds
popa
mov
mov
movsl
std
jne
add
and
mov
push
rcll
cltd
add
bound
push
jne
mov
sbb
fwait
jo
imul
popa
inc
aaa
inc
jo
or
mov
movsl
ja
mov
addr16
pop
jae
out
jne
add
pop
mov
loopne
les
cmpsl
mov
jbe
sbb
lock
jno
cmp
pop
jp
aam
movb
cmp
pop
orl
into
ror
dec
jns
jnp
incl
jns
dec
mov
sbb
mov
sbb
loopne
and
cmpsl
jae
push
pop
or
pop
cmp
scas
dec
jge
xor
mov
pop
push
cmp
clc
cmp
mov
pushaw
gs
cmp
outsb
mov
add
sbb
and
sub
cmp
fsubs
outsl
sub
adc
jae
imul
dec
mov
das
dec
pop
or
jno
ret
lods
cmp
inc
in
sub
or
jno
imul
adc
fs
push
daa
fwait
shlb
jnp
mov
call
jnp
fwait
imul
jne,pt
dec
mov
add
mov
mov
jne
js
push
mov
cmpsl
inc
mov
lcall
xchg
adc
ljmp
add
cld
pop
movsb
inc
popa
sub
cmpsl
or
push
pop
popa
mov
xor
cmp
pop
test
ja
lods
and
pop
dec
mov
xor
fmuls
dec
and
rcrl
sub
mov
cmp
inc
jne
add
ret
push
mov
mov
sbb
push
or
jno
fwait
imul
adc
pop
andl
dec
inc
pop
sub
mov
fwait
pusha
xlat
mov
outsl
dec
adc
sbb
roll
cmp
sub
sbb
pop
fsubl
pusha
popa
stos
sub
js
fwait
cmp
in
das
mov
into
mov
mov
jns
inc
sbb
roll
inc
or
dec
and
jbe
inc
movsb
jne
bound
dec
mov
fisubrl
xchg
sub
pop
mov
push
int3
sub
loope
inc
inc
or
stc
mov
or
mov
js
dec
jb
sbb
outsl
ljmp
mov
xchg
inc
fldl
sbbl
fwait
or
inc
jns
cmp
xchg
and
or
xchg
cwtl
push
mov
mov
into
sbb
and
pusha
in
mov
adc
pop
inc
pop
add
inc
clc
movsl
mov
clc
pusha
cmp
xchg
lret
sub
insb
scas
aaa
mov
lods
sbb
pop
jl
movb
mov
xor
int3
mov
dec
adc
in
je
push
pop
popa
js
int
sbb
or
cs
cmp
mov
pushl
and
jl
mov
out
mov
xor
inc
enter
mov
push
scas
adc
or
xchg
inc
push
add
inc
cs
cmpsb
mov
lds
push
push
mov
loop
push
jns
add
sub
scas
ret
lods
inc
pop
mov
add
popf
jae
shlb
sub
or
adc
popa
xchg
shlb
cmpsb
dec
lea
stos
or
scas
adc
insl
add
jns
bound
mov
pop
mov
movsl
loop
test
mov
fadds
or
or
stos
shlb
cwtl
xchg
pop
test
fimull
pop
bnd
jge
mov
xor
lcall
add
xor
lods
jo
or
jae
xor
hlt
clc
test
sbb
dec
test
sar
ljmp
push
or
cltd
gs
das
shrb
call
mov
mov
in
cmpsl
mov
stos
ja
or
les
lods
addb
rcrl
ds
sbb
add
push
mov
popf
sub
daa
inc
and
sbbb
push
sbb
and
mov
mov
xor
js
iret
xor
pusha
mov
or
movsb
lods
sbb
sbb
daa
mov
jp
mov
jge
js
dec
call
outsl
jmp
sbb
stos
je
jne
dec
ja
and
imul
test
arpl
jne
in
dec
pop
stos
divb
cmpsl
sub
cld
enter
inc
sbb
inc
mov
mov
pop
sbb
xor
test
lds
lods
lahf
addb
lods
mov
or
ret
xchg
lock
inc
ficoml
pop
popa
jbe
push
leave
xor
cmpsl
cmp
jmp
dec
cmp
sub
push
adc
imul
gs
lret
fisubl
xor
cltd
cld
enter
or
lock
sbb
clc
shrl
mov
aad
sbb
movb
dec
dec
dec
fndisi(8087
enter
dec
jne
dec
pop
lret
mov
push
mov
stos
aas
movsl
pop
jg
pop
and
sbb
test
dec
xor
pop
cmp
lods
push
stc
fwait
sub
aam
sbb
sbb
popa
jg
pusha
jns
inc
sbb
jno
push
aad
xchg
add
dec
lds
int
lret
repz
dec
addr16
xchg
lods
call
cmc
xor
js
lods
lcall
add
mov
into
xor
stc
icebp
and
inc
cmp
pushf
dec
mov
cmp
popa
push
dec
add
jae
lea
insl
cld
xchg
jg
aas
inc
inc
hlt
fs
stos
idiv
inc
jge
inc
into
sbb
pop
adc
add
sub
lock
leave
movups
stc
rolb
aaa
sub
mov
pop
loopne
sub
sub
jmp
scas
mov
mov
sti
mov
cmp
leave
or
movsl
xchg
outsl
or
and
movl
mov
movsl
adc
fidivrs
gs
pop
int
or
sub
cmp
shrb
pop
adc
bound
ljmp
mov
jge
or
rol
fmull
pop
inc
call
cmpsl
int3
mov
addr16
in
jge
insl
addr16
sub
jne
or
jp
rclb
mov
mov
dec
adcb
insb
jp
test
cmp
and
push
inc
fldcw
jo
push
leave
xchg
arpl
mov
or
stos
mov
cmpsb
js
out
mov
inc
mov
insl
nop
push
stc
scas
sbb
adc
in
popa
hlt
sbb
lcall
push
movsl
in
addr16
push
orb
mov
icebp
rcrl
or
cmp
mov
movsb
sbb
cmp
mov
xor
add
dec
add
outsb
lods
pusha
cmp
repnz
xchg
dec
mov
mov
jge
xor
imul
or
dec
cmc
or
sbb
adc
dec
mov
fwait
aas
add
lock
jo
mov
fwait
dec
jo
lods
mov
aas
bound
pusha
int
jb
inc
dec
jo
mov
mov
sub
rol
lock
pop
test
mov
cmp
cmp
inc
push
xor
lods
add
movsl
sti
loop
add
in
push
xlat
shlb
mov
outsl
in
movsl
fdivs
sbb
dec
jno
lods
jb
xor
cmp
fldt
mov
add
push
jnp
jne
sbb
and
mov
movsl
pop
mov
and
mov
pop
mov
pop
leave
sub
cmp
das
mov
or
jno
sub
dec
inc
mov
adc
cmp
mov
cmpb
pop
stos
push
or
ljmp
lcall
pop
xor
cmp
mov
lods
outsw
int3
stos
scas
cmpsl
mov
adc
or
imul
mov
dec
mov
loopne
mov
in
adc
mov
inc
mov
aaa
sbb
fwait
sub
out
aas
sub
ret
inc
sub
stos
dec
fstps
xor
es
mov
pop
icebp
lods
and
stos
mov
sbbb
arpl
movsl
sub
int
push
fwait
mov
mov
or
push
mov
ljmp
adc
cmp
pusha
movsl
mov
imulb
dec
test
xchg
js
fstpl
dec
dec
sbb
stos
inc
inc
repnz
jmp
movsl
sbb
outsl
fsubrl
pop
adc
push
in
lret
mov
jae
xchg
ror
xorl
ljmp
fldenv
pusha
loop
add
mov
inc
inc
sahf
mov
dec
or
and
add
loop
test
jg
stos
hlt
and
shlb
xor
test
popa
into
and
popf
ljmp
stos
test
nop
subl
rcrb
cmp
cltd
add
or
jno
jae
adc
lock
ja
fstpl
pop
in
aaa
mov
imul
inc
add
aam
mov
pop
out
xchg
shll
shlb
aas
imul
fs
sub
jbe
cmc
pushf
sbb
and
dec
adc
inc
icebp
cmp
mov
adc
and
jns
call
pop
sbbb
adc
cs
pusha
sub
push
mov
mov
dec
jno
sub
mov
lret
mulb
ret
fwait
icebp
push
jns
sbb
outsl
test
push
cmp
or
dec
lahf
out
movsl
jnp
std
mov
cmp
mov
sub
push
xchg
aam
and
js
pop
cmpsl
call
dec
popa
jbe
or
mov
std
push
jp
push
add
mov
loop
cmp
mov
inc
clc
shrl
dec
sub
xor
dec
in
mov
int
sbb
jge
jns
push
pop
mov
rcrl
aas
xor
pop
or
outsl
mov
cmpsl
sarb
test
aaa
cmp
mov
or
mov
orl
outsb
shrl
sub
test
cmpl
and
iret
and
fwait
dec
and
pop
enter
insl
fnstenv
or
mov
push
mov
popa
lods
enter
popa
cmp
jbe
inc
gs
stos
shrb
jae
outsb
adc
mov
xchg
lcallw
int
pushf
jno
mov
pop
sbb
sub
outsl
mov
sub
addr16
mov
cltd
push
and
push
lret
cmp
mov
and
cmpsl
and
dec
nop
mov
cwtl
sub
dec
orb
dec
outsl
cmp
push
dec
pop
stos
addl
pop
adc
mov
gs
cmpb
les
dec
xor
jne
sti
sti
adc
and
jne
and
imul
inc
mov
mov
daa
xchg
adc
sbb
aaa
and
sti
inc
sbb
or
add
cltd
sbb
mov
pusha
aas
or
mov
push
xchg
or
dec
xor
mov
pop
sub
ficomps
adc
cmp
sti
pop
pop
mov
and
imul
sub
mov
imul
cmc
push
leave
mov
shrb
inc
subb
pop
sub
push
xor
movsl
pop
pusha
dec
loope
imull
mov
inc
fisubs
enter
jae
mov
inc
stc
sub
push
popl
mov
pop
in
xchg
jge
or
or
inc
jge
xchg
push
insb
pop
imul
jl
pop
jo
or
mov
sub
movsl
push
and
push
dec
shrb
jbe
sbb
daa
jecxz
sbb
dec
bound
clc
or
cmp
and
stos
or
pusha
loop
inc
mov
dec
fadds
mov
shlb
cltd
pop
adc
dec
lods
mov
enter
sbb
jb
sub
subb
test
pushf
mov
sarb
push
and
out
loopne
fnstcw
sub
adc
sub
sbb
fsubs
pushf
adc
pusha
sub
adc
fwait
xchg
mov
fwait
outsl
popa
jg
lret
and
mov
aaa
clc
int
push
inc
lock
push
popa
cltd
mov
mov
mov
inc
outsl
fnstcw
enter
or
iret
lcall
nop
push
inc
mov
shl
and
push
or
inc
sbb
jg
and
pushf
mov
push
and
subl
sbb
add
push
orl
xor
pop
testb
mov
cmpsl
mov
dec
fwait
ljmp
test
and
sub
sbb
es
xor
and
orb
pop
enter
sbb
sub
push
cld
and
or
scas
mov
enter
pop
push
aas
dec
xlat
and
test
sbb
xchg
lods
mov
je
cmp
inc
mov
or
add
nop
movsb
dec
mov
cmp
sbb
mov
into
cmp
mov
cltd
push
loope
sub
sub
push
or
dec
jp
in
pop
inc
push
fcomps
sub
and
lods
in
adcb
int3
fstps
inc
mov
stos
nop
lods
scas
jg
gs
xor
push
lock
cmpsl
es
jbe
add
mov
test
mov
outsl
mov
outsb
xorl
jecxz
enter
or
outsl
roll
push
dec
cmp
mov
popf
test
out
add
dec
insb
sub
cmpsl
out
sbb
loope
pop
push
mov
scas
movsl
and
pop
mov
push
or
jne
mov
in
insl
dec
fisttpl
popa
jle
jg
mov
jbe
sub
pusha
inc
mov
in
aam
inc
mov
fnstenv
mov
rorl
mov
and
inc
es
imul
imul
nop
sub
nop
lret
xor
loope
inc
jae
sbb
shld
test
mov
cmc
mov
pop
std
jae
pop
js
push
dec
subb
lock
xchg
xchg
fisubrl
in
jl
jo
jno
pop
pop
das
mov
jae
xchg
pop
mov
pop
cld
mov
popa
jo
pop
sub
cmp
push
push
push
mov
fcomi
xor
mov
fwait
lock
adc
stc
lcall
xor
push
mov
ljmp
rorl
mov
adc
jmp
aad
mov
mov
dec
lods
jnp
pop
hlt
movb
jge
mov
jbe
add
subl
mov
test
fsubp
xchg
pushf
fcoml
xchg
call
in
cli
cmp
jl
mov
add
push
hlt
insl
or
push
xchg
sub
stos
ja
mov
cltd
sarb
pop
arpl
push
pop
and
inc
fsubs
pop
jl
aaa
and
jbe
pop
int
ja
lock
lea
popa
sub
clc
aaa
test
cwtl
adc
push
popa
shl
adc
add
daa
stos
push
sarb
movsl
lods
jo
sub
cmp
ljmp
sbb
call
inc
arpl
dec
fsubl
out
cld
push
sahf
cs
mov
enter
xchg
cmpsb
stc
adc
adc
mov
pusha
fbstp
dec
je
sub
or
call
cmpsb
lret
dec
stos
push
mov
mov
sbb
jg
or
sub
mov
gs
lock
pop
dec
lahf
and
and
xchg
pop
das
xchg
loop
ja
cmp
mov
jbe
or
mov
sbb
imul
pusha
xchg
stos
shlb
sbb
adc
loopne
popa
cmpsl
push
dec
pop
invlpg
pop
and
sbb
mov
dec
dec
sub
arpl
pop
jmp
lahf
mov
insl
in
arpl
inc
lock
daa
arpl
loope
jae
cmp
lea
ret
mov
int
add
push
inc
or
nop
popf
rclb
lds
fisubrl
mov
or
ror
lock
leave
and
cmpsl
arpl
lock
jo
or
lahf
lds
mov
inc
mov
mov
cmc
stos
mov
and
sbb
arpl
cmpsl
dec
mov
fdivs
imul
and
mov
jne
xor
aaa
scas
adc
jb
in
ljmp
das
and
scas
inc
clc
and
ljmp
cmp
shlb
popf
mov
pop
pop
sti
movsl
jne
ss
rcr
cmp
sub
cmpsb
mov
es
or
lds
sub
fldenv
adc
and
cmp
inc
xchg
mov
inc
cmp
and
xor
pusha
arpl
mov
xor
outsl
stos
and
and
inc
int
scas
lods
adc
xor
or
inc
mov
roll
out
push
push
pop
add
add
fsub
in
mov
loopne
adc
test
xchg
insb
lods
pop
fnstenv
std
inc
imul
call
js
adc
lods
iret
ja
jo
mov
je
inc
xchg
cmc
cltd
adc
jnp
mov
or
pushf
pop
lea
push
mov
pop
mov
je
les
cmpsl
mov
sub
mov
sub
inc
movsl
pop
jmp
paddb
cmp
js
or
mov
jne
out
mov
outsl
push
inc
and
mov
icebp
adc
into
addl
inc
add
pusha
inc
jne
movsl
jmp
jge
int
push
inc
cmp
add
push
js
pop
shr
rclb
jne
mov
cmp
outsl
jns
dec
popa
cmpsl
push
shl
call
mov
lods
pop
clc
jp
in
test
pop
in
rcl
das
push
test
stos
icebp
lea
lock
cltd
inc
sbb
adc
test
pop
stos
nop
adc
lea
icebp
sub
sbb
adcb
test
mov
es
hlt
clc
sti
pusha
dec
cli
out
jnp
fwait
xchg
cwtl
mov
or
push
push
iret
jns
clc
mov
bound
inc
call
and
xor
ljmp
pop
lock
arpl
arpl
and
notl
repz
jmp
cmc
adc
aad
shlb
fdivp
lcall
jns
sub
rorl
scas
fdivrp
and
xor
add
scas
xor
rcrb
inc
sbbb
dec
sbb
nop
imul
in
push
mov
inc
imul
orl
lods
stos
lods
cmpsl
cltd
xchg
hlt
test
cld
sbb
out
pop
clc
lock
popa
daa
aam
jno
xor
mov
mov
cs
test
cmp
jns
cmpb
test
int
sbb
fsubl
inc
xor
jne
nop
cmp
push
aaa
cmpsl
cmp
push
ficomps
fidivrs
adc
sub
adc
loop
repz
jmp
push
mov
jbe
lds
dec
dec
or
inc
xor
ljmp
mov
sub
andb
lock
jno
movsl
arpl
out
stc
lods
hlt
ljmp
and
or
mov
dec
mov
subb
sbb
jns
popa
rcl
cmpsl
sbb
jne
shlb
pop
mov
pop
mov
nop
xorb
pop
or
xchg
pop
dec
fwait
inc
cmpsl
mov
add
mov
add
and
add
mov
jnp
stc
or
and
pop
jmp
daa
lock
loope
mov
pusha
scas
add
mov
cmp
cmp
push
nop
sbb
popa
stc
add
mov
xor
xor
jge
fidivs
popa
lock
jne
mov
loope
inc
inc
cmp
fildll
rcrl
outsl
lcall
mov
int
jp
dec
mov
cwtl
inc
mov
dec
insl
mov
arpl
addr16
movsl
leave
test
fildl
and
les
enter
mov
xor
xor
loopne
mov
popa
leave
or
icebp
int
push
enter
push
sbb
inc
popa
xor
inc
and
in
testl
or
call
outsl
cmpsl
mov
adc
fdivrs
call
xchg
leave
jae
dec
loopne
loopne
push
xchg
cwtl
outsl
xchg
jo
pop
pop
daa
aaa
test
cmp
clc
faddl
jo
movhps
aaa
dec
jp
push
loopne
imul
push
mov
stc
xchg
xor
stos
or
dec
xor
mov
inc
xor
dec
jo
popa
scas
fwait
push
cltd
in
andb
cmp
or
mov
jb
es
push
sbb
pop
mov
push
jne
xor
orb
cltd
lds
sbb
movsl
xor
sub
pop
push
sbb
outsl
arpl
mov
sub
stos
enter
mov
xor
jae
mov
insl
cmp
and
inc
mov
mov
subb
or
jo
sub
pmaxub
pop
push
cmpsl
jmp
outsl
fists
mov
sub
mov
push
movsb
lods
cmp
dec
push
outsl
call
loop
add
sub
insl
ror
pop
stos
shl
xchg
enter
fs
sbb
jne
dec
push
outsb
ja
push
vmread
adc
icebp
xor
adc
sarl
pushf
loope
lret
pop
addr16
aaa
and
dec
sub
lock
and
xor
scas
stos
xchg
fwait
popa
pusha
inc
adc
js
push
or
mov
inc
pusha
pop
jae
out
cltd
xchg
dec
sbb
xor
cmp
arpl
sahf
js
les
pop
mov
mov
rcrb
fstpl
mov
mov
mov
pop
enter
xrelease
mov
stos
sbb
push
int3
arpl
mov
add
or
shlb
insl
jne
pop
pop
pushf
movsl
pushf
jae
dec
or
adc
imul
add
xor
ret
or
jns
adc
dec
jno,pt
fistpl
test
out
inc
adc
in
or
lcall
and
jno
aas
pop
push
push
gs
aaa
add
pop
or
lods
mov
je
mov
addl
pop
cld
mov
mov
aam
cmp
mov
cmp
sbb
or
dec
pusha
sub
mov
aam
lahf
insl
loopne
sbb
lock
arpl
bound
push
call
xchg
movsl
or
rorl
mov
inc
stos
and
shlb
add
jmp
and
xorl
jne
loopne
xchg
xchg
orl
cmp
ljmp
outsl
jnp
rclb
notb
mov
shll
movsl
and
daa
sub
in
out
adc
jle
xor
mov
fisttpll
mov
sti
and
rorb
shlb
mov
pop
ja,pn
mov
ret
xorb
lret
scas
test
cmpsb
outsb
inc
loopne
or
or
adc
lret
fwait
call
out
or
jmp
cmp
movsb
lret
sub
test
xchg
call
hlt
aaa
and
add
xchg
pop
or
fistl
addr16
das
lock
jg
or
fcoms
in
cmp
pop
daa
enter
imul
daa
adc
stc
mov
and
scas
cmpl
jg
loop
test
pushf
sbb
pop
and
or
jmp
jl
addb
inc
stos
push
test
ljmp
inc
outsl
jmp
mov
mov
jns
inc
enter
fiaddl
fwait
adc
pop
popa
add
lods
push
pop
rclb
call
adc
aam
xorl
pop
pushf
jne
jp
pop
jge
cs
loopne
stos
test
adcb
imul
mov
mov
lock
mov
jnp
adcb
xor
lret
rcrb
mov
or
inc
jns
add
pop
mov
dec
cwtl
sub
aam
dec
xor
mov
bound
cmp
or
das
mov
shlb
push
jae
mov
hlt
leave
xchg
and
dec
or
and
jnp
cmp
mov
pop
inc
test
adc
enter
mov
adc
popa
orl
ret
loopne
mov
adc
shrl
adc
insl
aaa
inc
int3
sub
inc
lds
rcl
add
dec
out
or
arpl
mov
dec
pop
dec
nop
mov
leave
or
mov
jno
and
add
sbb
jns
shll
mov
cmp
loop
idivl
xor
cwtl
xchg
cmp
and
repnz
ljmp
or
xorb
data16
sbb
fnstsw
cmp
scas
jge
lock
inc
inc
push
push
xlat
push
or
or
sahf
mov
jl
lds
cmpsb
mov
sbb
jae
mov
add
cmp
cmp
dec
jno
cli
jo
push
stos
cmp
sub
sbb
outsl
popa
clc
lock
sarl
idiv
adc
pop
lock
xchg
xor
ror
sti
lods
gs
jmp
mov
jae
pop
imulb
mov
push
jae
pop
rorl
popa
pop
or
pushf
sbb
adc
stos
xchg
gs
sub
ljmp
inc
shlb
popa
mov
jno
cmpsl
pushf
cwtl
fisttpll
ficompl
sub
bound
jns
xor
sub
jae
fisubrs
pop
cltd
sbb
leave
xchg
jl
inc
dec
add
xchg
pushf
sub
xor
clc
jns
sbb
cwtl
mov
xor
test
fistpl
insl
js
movsl
into
ret
cltd
sub
int
cmp
mov
imul
and
jno
shl
jne
shrb
adc
popa
xor
sbb
jae
mov
sbb
rcrb
insl
out
push
fidivs
xor
in
shrl
inc
jns
je
shlb
das
icebp
mov
movsb
and
adc
stos
sub
jns
xor
inc
jae
inc
clc
pop
pushf
rorb
ljmp
test
fwait
mov
jae
clc
aaa
pop
add
jne
loopne
loope
mov
testb
push
mov
push
lea
mov
dec
icebp
mov
les
sahf
and
popa
test
jne
xor
jne
dec
cmpsl
lcall
adc
test
pop
jae
scas
mov
sub
pop
adc
push
pop
inc
mov
cmpsl
js
mov
jae
mov
test
outsl
jmp
adc
jecxz
push
pop
lret
jne
ds
fcompl
sub
sub
test
adc
cltd
aaa
push
mov
popf
shlb
add
pop
adc
test
andb
test
enter
shlb
mov
dec
scas
jne
xor
push
addr16
addr16
jnp
mov
xor
cmp
inc
movsb
push
std
pop
jo
sub
jo
jno
pushl
ss
sbb
mov
adc
jg
lods
sbb
inc
negl
out
popa
out
xchg
insl
push
call
and
jo
xor
push
jo
testl
test
xor
dec
push
dec
sub
and
popw
push
out
sbb
dec
dec
pushf
push
loope
push
sub
icebp
pop
iret
mov
push
jge
inc
mov
xor
clts
enter
or
pop
mov
pop
loop
lcall
and
and
xchg
pop
sbb
dec
call
jp
jne
hlt
mov
stc
inc
aam
dec
ret
pop
push
xor
add
insl
addb
ss
arpl
sbb
sti
or
inc
repnz
and
jmp
roll
imul
sti
lock
push
aam
cmp
push
ljmp
stos
leave
jle
mov
add
popf
jmp
or
add
jle
mov
adc
xchg
push
mov
rclb
dec
imul
out
sarb
sbb
scas
push
mulb
lock
fcmovu
cmp
out
lret
pusha
pop
jns
push
mul
lahf
jge
inc
push
ficompl
packssdw
push
gs
dec
sub
repnz
or
stos
add
fiadds
shrb
in
in
cmpb
loopne
pop
dec
ja
cmp
mov
sub
fisubs
dec
int3
addl
mov
insl
in
push
mov
inc
lock
or
adc
inc
into
fpatan
and
ja
mov
cmp
lret
jge
fdivr
stos
fwait
lods
jne
mov
sbb
mov
xrstor
mov
jmp
insl
and
inc
jnp
push
sbb
adc
aas
mov
mov
testl
dec
vminps
sbb
add
cmp
push
jo
adc
in
jae
das
mov
mov
insb
push
jne
and
pop
mov
sub
cmpsb
pop
sbb
addb
mov
fistpl
pop
popa
outsl
fisubs
ret
jbe
test
mov
js
cmp
cmp
int3
daa
in
inc
jnp
add
add
stos
insl
mov
stos
dec
sub
enter
ljmp
gs
jmp
ffreep
dec
sbb
cmpsl
xor
or
or
xchg
outsl
fcoml
and
fsubl
pushf
ja
dec
imul
cmp
scas
jle
inc
xor
jg
xchg
movsb
jnp
rolb
enter
sti
dec
ds
push
outsl
add
out
clc
notb
arpl
adc
xor
cwtl
mov
mov
imul
hlt
fadds
jnp
sbb
mov
inc
push
in
out
pop
mov
mov
mov
inc
sub
cmp
mov
aam
popa
sub
mul
dec
push
outsb
test
sub
cmpsl
or
mov
or
leave
xchg
inc
inc
fsub
inc
inc
add
insl
jns
pop
cwtl
pop
pusha
cwtl
sub
push
cmp
jo
jmp
push
and
imul
inc
jg
ja
sbb
jno
push
shrl
lahf
int
cmp
mov
pop
js
pop
cmpsb
push
and
jno
pushf
shlb
in
sub
xor
inc
rcrb
fcmovnu
cmc
inc
inc
push
pop
and
mov
fistps
loope
cmp
adc
mov
popa
cwtl
mov
and
pop
mov
roll
scas
adcl
mov
int
pop
js
mov
dec
stos
push
dec
icebp
xchg
cmpsb
aas
sub
pop
cltd
shlb
dec
cmp
mov
pop
ret
andl
stc
inc
dec
jns
cmp
pop
fs
push
pop
js
dec
imul
scas
shll
sub
jae
stos
cmp
push
fs
sbb
mov
inc
jae
dec
shlb
mov
data16
aas
jp
imul
mov
jl
inc
mov
or
mov
lea
outsl
nop
lods
cwtl
jb
inc
aam
cmp
jae
jg
lods
mov
pop
xor
sub
xchg
repnz
addr16
mov
sbb
pop
lret
test
mov
outsl
imul
pusha
insl
dec
or
cmp
loop
test
add
xchg
loopne
push
or
xchg
jnp
mov
data16
inc
icebp
cli
movsl
orb
dec
dec
movsl
bound
and
mov
scas
adc
out
add
mov
mov
add
jmp
mov
mov
cmp
mov
fwait
in
aam
mov
clc
jg
inc
outsb
fwait
and
dec
daa
inc
iret
sbb
inc
inc
push
sub
aaa
rorl
cmpsl
addr16
call
pop
insl
jae
pop
inc
mov
pushf
mov
in
out
sbb
lods
mov
scas
pop
inc
mov
mov
mov
lock
test
aam
ret
sar
add
xor
fisttps
pop
lds
xchg
xchg
aas
pop
fnsave
cmpsl
test
lods
jne
dec
rolb
jle
mov
jnp
adc
inc
and
mov
jmp
mov
push
in
outsl
mov
cli
xchg
stos
mov
cltd
jae
iret
jae
dec
mov
outsl
cmp
mov
jae
loope
lcall
es
dec
outsl
adc
add
jno
dec
mov
mov
inc
popa
inc
test
jnp
cld
shrb
inc
jo
mov
inc
add
adc
sbb
daa
inc
xor
push
es
dec
push
inc
not
cmp
inc
test
dec
aas
les
or
inc
cmp
imul
das
mov
cmpsl
lea
or
jns
lods
mov
add
cmpsl
loope
fimuls
dec
add
scas
sbb
mov
cmp
ret
aas
pop
cmp
jb
sbb
nop
fmul
lods
dec
lret
lods
out
dec
out
and
out
lods
mov
dec
fwait
dec
addr16
enter
sub
cmpsb
dec
mov
sub
mov
sbb
and
fsubrl
xor
outsl
push
sbb
lods
dec
stos
arpl
dec
jae
out
add
andb
movsl
out
stos
gs
daa
pop
imul
push
mov
cmp
scas
leave
inc
scas
movsl
jbe
sahf
test
leave
pop
aaa
dec
sbb
ret
jne
stos
mov
push
les
outsl
push
mov
loopne
adc
shll
push
in
fsubrl
jae
jmp
ja
mov
or
cltd
into
aam
cmp
lods
jbe
out
ja
or
add
fwait
mov
add
jmp
nop
lock
mov
sbb
imul
sar
or
cli
fcmovbe
jns
xorb
dec
xor
std
jne
mov
in
or
int3
push
mov
cmpsl
popa
xchg
mov
rorb
mov
jo
popf
sahf
test
cwtl
outsl
cmpb
int3
movsb
sti
sub
inc
jbe
cmp
ja
mov
jo
dec
cmp
pop
jl
in
arpl
inc
leave
enter
lock
sbb
pop
jns
push
sub
push
jae
jns
pop
or
in
inc
inc
jnp
add
popa
mov
test
adc
movsl
adc
push
cwtl
fcos
xchg
pop
in
popa
test
xor
or
pusha
ja
xchg
jp
dec
pop
sbb
nop
lock
dec
insl
pop
or
push
inc
jbe
push
js
dec
cmp
sub
pop
lret
scas
cmp
sub
cmpsb
fmul
jle
notb
add
dec
mov
mov
fimull
ja
imul
enter
stos
mov
fyl2xp1
sarl
mov
inc
pop
data16
lock
pop
icebp
je
mov
dec
mov
or
imul
add
imul
sub
mov
nop
inc
gs
add
push
dec
and
and
mov
pop
addr16
inc
and
dec
fildl
or
cmp
pop
lret
gs
insl
and
rcrb
inc
mov
sbb
stos
int
mov
xor
sub
scas
shlb
and
cmpsl
movb
sbb
gs
jnp
insl
out
dec
push
mov
data16
dec
cwtl
dec
cmp
jmp
push
stos
clc
jne
call
pop
in
or
inc
mov
jne
imul
adc
mov
js
adc
cltd
scas
gs
fildl
roll
ret
outsb
scas
push
sbb
enter
sbb
sub
jge
jno
mov
mov
data16
pusha
outsl
push
xchg
imul
xchg
ljmp
dec
insl
jbe
mov
sub
mov
xor
arpl
and
and
and
iret
jo
adc
lods
call
repz
jne
fs
adc
adc
mov
in
jns
xchg
dec
add
push
jle
mov
jns
aam
rorl
enter
push
mov
lods
insb
clc
dec
sub
inc
mov
outsl
dec
mov
mov
add
jns,pt
test
mov
insb
or
dec
mov
insb
lock
xchg
dec
enter
scas
pusha
test
and
pop
in
xchg
xor
popf
je
and
pop
and
mov
pop
test
lahf
jns
cwtl
inc
stos
pop
xchg
in
adc
inc
cwtl
cmpsl
ja
cmp
jg
pop
cmp
aaa
pushf
mov
mov
jns
push
cltd
leave
movq
movsl
sbb
mov
gs
xchg
notb
dec
xor
pop
jb
scas
ficoml
les
notl
mov
xchg
pop
mov
rclb
aaa
mov
sbb
jbe
inc
das
push
pop
pop
sub
pop
ret
mov
lret
xor
int
rol
jno
inc
jns
mov
dec
mov
imul
xchg
mov
imul
bound
sub
inc
pop
push
dec
mov
mov
sbb
clc
fcom
adcl
mov
pop
popa
mov
insl
sbb
outsl
mov
pop
xor
and
sahf
xchg
test
dec
mov
fwait
adc
out
js
inc
mov
shlb
fidivrl
dec
mov
call
sbb
xor
cmp
out
shrb
sarb
push
mov
jo
jecxz
jmp
insb
aam
xlat
scas
xor
mov
out
xor
mov
cld
mov
xchg
push
pusha
mov
and
outsl
xchg
jb
add
lods
sub
lret
movsl
add
jmp
lret
pop
pop
push
nop
inc
sbb
lods
mov
mov
nop
cmpsl
inc
sarl
mov
dec
pop
stc
inc
jno
or
adc
lods
jne
dec
pop
dec
scas
adc
jmp
enter
sub
jns
fwait
inc
decb
mov
dec
xchg
dec
fwait
push
mov
push
jae
sub
out
inc
movsl
mov
lods
sub
test
pop
adc
xchg
cmp
inc
adc
jns
test
stc
sub
fdivrl
and
mov
or
dec
sub
mov
lods
dec
lock
les
ret
cltd
or
test
pop
jp
rcl
fnstenv
xchg
mov
mov
or
pop
out
in
xor
mov
mov
lcall
add
add
pushf
push
scas
mov
pop
push
popa
cmpsb
enter
mov
loopne
push
mov
jne
clc
test
imul
pop
inc
lock
aam
gs
xchg
pushf
mov
xchg
stc
xlat
insl
jns
test
jle
cmp
mov
pop
mov
or
dec
pop
pusha
fwait
inc
stos
aam
and
call
cmpsl
cltd
dec
mov
add
and
cwtl
xor
adc
lret
sbb
mov
xor
fcom
lds
dec
aaa
or
test
mov
outsl
lcall
mov
jns
or
push
mov
mov
movsl
sbb
or
or
push
jae
push
jle
ficomps
jno
mov
push
cli
out
mov
mov
adc
jle
mov
fcomp
stos
push
adc
cwtl
or
lret
or
imul
sub
daa
lahf
mov
or
mov
movsl
fidivrl
pop
loopne
cmp
adc
arpl
dec
orb
mov
or
inc
jo
cmp
mov
adc
shlb
incb
mov
pusha
sub
cld
testb
hlt
stos
popa
pop
aaa
push
ja
ret
fcomps
xchg
pop
mov
jbe
mov
mov
or
mov
movsl
outsl
cmpsl
pop
adc
movsb
scas
loopne
mov
loop
gs
imul
dec
scas
add
add
dec
xor
add
mov
adc
hlt
mov
inc
rorl
jne
sbb
xchg
mov
out
mov
std
pop
daa
stos
and
out
adc
mov
jl
lea
addr16
popa
lea
aas
cmp
dec
inc
loop
mov
mov
mov
dec
imul
das
stc
sub
imul
dec
and
sub
mov
mov
daa
sub
imul
nop
sub
data16
mov
dec
pop
loopne
or
loop
pop
cmp
and
dec
add
dec
mov
sub
xchg
decl
push
nop
out
sub
mov
addr16
push
mov
lea
push
aaa
sbb
pop
rcrl
cmpsl
adc
mov
dec
jbe
mov
cmp
xor
dec
jo
and
dec
inc
sbb
dec
rol
mov
stos
cmp
adc
xchg
in
pusha
cwtl
scas
rcrb
lcall
das
dec
pop
insl
mov
pop
or
mov
pop
push
adc
push
and
and
dec
jle
push
insb
das
dec
popa
icebp
dec
shlb
scas
scas
sub
out
outsl
scas
je
mov
xchg
test
xor
out
out
sub
or
cld
into
pop
jo
nop
movsl
aad
add
pop
fstpt
cltd
popa
or
repz
inc
clc
and
lret
ror
add
push
faddl
fistpl
pop
enter
sbb
jl
jns
xor
dec
test
nop
mov
pop
jg
cmp
add
mov
loopne
test
fadd
arpl
and
iret
gs
sarb
jne
cmp
ja
xchg
aas
xchg
dec
jae
nop
mov
dec
lods
roll
push
aas
mov
stos
inc
data16
rclb
test
fucomi
inc
jne
or
cwtl
inc
cld
fimull
add
mov
fwait
into
adc
sub
insl
mov
test
xor
data16
mov
fyl2xp1
mov
test
in
stos
pop
xchg
movsb
popf
faddp
xchg
repz
xor
lret
aam
inc
stos
jo
sbb
insb
jae
adc
push
jae
xor
jp
pop
sahf
push
mov
sub
jae
lds
aas
cmpsl
pop
popa
test
out
mov
clc
xchg
mov
test
xor
mov
mov
add
pop
add
dec
jmp
xor
sub
stos
jns
cs
and
add
jae
sbbb
insb
pushf
mov
cmpsl
jp
popa
xor
push
jle
dec
lea
dec
das
mov
or
jns
clc
mov
adc
pop
sub
cld
sbb
jae
out
js
mov
xlat
sub
cmp
cs
pop
mov
push
js
lods
push
iret
push
mov
add
fmull
fcomp
sbb
mov
xor
pop
neg
jae
movsl
int3
pop
loop
gs
mov
mov
std
mov
fidivrl
imulb
dec
ret
imul
mov
mov
cmp
adc
mov
loopne
into
jns
movsl
or
dec
aad
add
in
cld
mov
dec
lods
roll
inc
aad
adc
dec
dec
imul
nop
cmp
xor
add
imulb
dec
sub
fcoms
jns
inc
jne
fwait
lret
aam
dec
jp
dec
xor
or
push
jp
jns
loop
dec
jno
push
or
fdivrs
stos
mov
dec
or
inc
mov
mov
inc
ror
cltd
jns
mov
add
pusha
out
xchg
out
fwait
cmp
xchg
fsubrl
add
shlb
cmp
and
jae
mov
fwait
lret
jns
mov
in
inc
rorb
shl
imul
push
cmpsl
inc
dec
mov
push
jne
push
sbb
add
or
mov
mov
sbb
adc
inc
rol
sti
mov
insl
cmpsb
enter
shrl
jne
pop
pop
cwtl
fcomps
cmc
pop
mov
or
mov
lock
push
out
mov
arpl
or
add
out
hlt
or
mov
or
push
adcl
sub
in
js
lods
jge
and
push
addr16
pop
mov
push
lods
xchg
nop
dec
cwtl
push
mov
mov
das
into
xor
xor
das
and
mov
cmp
movb
scas
push
cltd
jns
mov
push
jo
int
pusha
outsb
test
daa
cmpsb
adc
mov
cmc
rcrb
push
sahf
and
add
cmp
push
jno
inc
clc
jae
mov
decl
shlb
js
loope
loop
pop
jno
aad
hlt
shrb
cmc
pop
mov
mov
and
or
mov
cmp
inc
loope
pop
movsb
stos
popa
mov
or
pop
sbb
movsb
inc
push
cmp
dec
jne
outsb
dec
shl
jp
movsb
cwtl
int3
jb
cmpsl
cmp
jbe
fnstcw
push
data16
mov
cmpsl
clc
mov
movsl
shrb
sub
icebp
sahf
mov
push
lods
sbb
insb
loope
insb
pop
add
mov
pop
push
jbe
adc
dec
mov
inc
outsl
inc
push
jg
outsb
enter
sub
dec
dec
mov
or
cld
sbb
pushf
or
lds
sub
or
aam
rolb
int
lods
lret
mov
or
dec
gs
lcall
or
add
xor
dec
mulb
add
repz
dec
in
jno
insl
sbb
movsl
mov
inc
cmpl
loope
inc
inc
loope
mov
enter
ret
movsl
icebp
dec
xorb
es
ja
adc
stos
insb
aad
dec
xor
adc
and
sub
xchg
rorl
mov
imul
pop
call
insl
or
into
icebp
xor
fsubs
dec
sub
roll
inc
add
and
and
sub
or
cmp
add
mov
and
in
xor
sbb
pop
sar
mov
pop
pusha
fsub
push
movsb
dec
insb
dec
mov
and
aas
inc
mov
popa
ret
shll
mov
dec
or
add
inc
addr16
ljmp
push
sub
daa
inc
push
push
mov
mov
jno
sub
fxtract
int3
xchg
insb
pop
jne
fwait
inc
mov
lret
or
xchg
pop
shlb
mov
ficomps
fwait
add
icebp
mov
pop
mov
sbb
xchg
pop
or
fiadds
jge
pusha
xor
pop
movl
inc
nop
cmp
and
dec
push
sub
push
bnd
inc
jge
and
fs
cmovb
addb
cmp
mov
mov
jo
or
movsl
cwtl
and
popa
sarl
mov
mov
inc
cwtl
shlb
xor
in
pop
add
dec
cmpsb
movsl
mov
mov
fbld
das
pop
out
mov
and
jne
cmp
dec
push
xchg
jb
fsubrl
jns
fldt
jle
sbb
jne
movsl
pusha
cmpsb
jo
push
fwait
jb
jno
js
mov
out
add
pusha
add
sub
call
dec
cwtl
outsl
adc
repz
cmpsl
shl
push
pushf
dec
dec
inc
pusha
sbb
and
inc
std
and
call
pop
outsl
jne
dec
imul
movsl
popf
adc
js
test
rcl
adc
das
lock
mov
xchg
fcmovbe
mov
mov
dec
dec
or
mov
xor
add
in
test
dec
lods
and
lods
xor
lahf
xchg
pop
aad
mov
outsl
mov
adc
mov
imul
or
push
pop
inc
add
jecxz
in
loopne
or
pusha
mov
adc
mov
and
rolb
pop
fcomps
stos
inc
ret
les
outsl
rclb
push
cld
mov
imul
sbb
fs
imul
inc
mov
fcoms
sub
jno
jae
xchg
pop
inc
loop
fwait
sub
mov
daa
mov
xchg
aaa
loop
ja
jno
dec
js
lock
dec
mov
into
xor
daa
jae
sbb
gs
ja
mov
mov
fiadds
mov
pop
jne
sbb
call
xor
jns
push
dec
stos
movsl
lods
shll
inc
test
in
adc
fsub
imul
daa
pop
lock
sbb
movsl
mov
es
mov
shll
cli
int3
jne
rorb
fwait
push
je
fwait
mulb
mov
push
or
cs
mov
adc
pop
cmp
in
outsl
in
mov
pop
jnp
rorb
pop
dec
mov
aas
ja
adc
mov
mov
popa
or
pushf
loop
mov
scas
dec
sbb
xor
jl
daa
add
jo
arpl
test
sbb
adc
cmp
and
lock
test
jmp
lahf
clc
ljmp
mov
mul
xchg
icebp
lods
stos
xchg
xor
and
mov
sti
pop
movsb
dec
movsb
scas
shll
cmp
test
pushf
pop
test
push
xchg
cmp
int3
pop
push
xor
lret
aam
cwtl
xchg
fwait
mov
shlb
push
sbb
movsl
dec
ret
shll
sbb
pop
cmp
xchg
stc
mov
push
jmp
xchg
inc
stos
sub
cli
leave
jb
in
movb
or
sbb
mov
pop
sbb
lods
sbb
or
movsl
daa
addr16
lahf
lcallw
int3
push
add
sbb
dec
adc
sbb
lds
movsl
fistpl
bound
sbb
fwait
icebp
inc
jo
lret
mov
cwtl
mov
arpl
xor
mov
dec
xchg
adc
jle
push
xor
scas
adc
and
jno
sbb
jge
add
lahf
xchg
jae
mov
sbb
stos
in
ja
lods
mov
pop
fldt
sub
jns
int3
push
por
scas
leave
outsl
orl
jnp
jae
xchg
pop
rclb
add
xlat
cmp
pop
insl
dec
pop
sbb
add
jo
je
ja
dec
ror
shrl
sub
jle
adc
and
inc
add
pop
fnstcw
outsb
test
jg
push
cs
pop
push
jg
mov
inc
pop
or
jb
inc
pop
or
addr16
inc
dec
sub
iret
jae
icebp
outsl
sbb
imul
push
sbb
dec
dec
or
xchg
loopne
stos
xor
dec
pop
push
inc
inc
ret
mov
adc
fnstenv
dec
mov
xor
adc
add
cmpsb
jp
leave
cmp
shlb
xor
cmpsb
out
and
push
and
xlat
xor
jg
or
sbb
jmp
pop
cmpsb
icebp
stos
jno
outsb
cmp
fistpl
rep
mov
jnp
aas
inc
adc
push
fwait
mov
cmpsl
jge
loop
outsl
cmp
lods
cmp
test
sbb
jbe
rcr
jno
mov
push
imul
in
add
outsl
pushf
inc
sbbb
cld
loop
js
pop
inc
inc
cmp
pop
setnp
inc
and
cmp
adcb
sub
stos
sbb
mov
mov
call
subl
pop
mov
scas
out
fwait
fs
mov
dec
push
stos
jge
push
enter
cmc
imul
adc
xchg
movsl
aad
adcb
mov
mov
or
sub
and
or
bound
cmp
inc
inc
jle
outsl
les
stos
aas
push
fwait
dec
mov
enter
pop
mov
mov
xorb
mov
arpl
jnp
push
cmp
adc
dec
andb
push
mov
sti
mov
out
inc
inc
aaa
mov
xor
test
xor
or
scas
jae
xchg
pop
dec
mov
cli
jg
fdivrl
pushf
shll
push
push
inc
addr16
inc
and
add
jo
insl
pop
test
shlb
loope
mov
inc
sub
and
lock
outsl
mov
out
pop
lcall
movsl
pop
mov
ljmp
pop
cwtl
mov
mov
inc
aaa
or
cmp
call
inc
add
mov
scas
pusha
fldlg2
pop
xor
clc
imul
mov
jns
fwait
inc
mov
scas
jl
push
and
and
fdivl
push
adc
mov
js
std
enter
sahf
mov
fcmovne
sub
cmpsl
sub
sbb
rcl
rolb
movsb
sub
cmp
rolb
mov
test
mov
scas
mov
addr16
push
sub
dec
leave
mov
lods
decl
shr
jno
in
ds
and
or
nop
lods
sub
loop,pt
gs
fcomps
dec
add
fisubrl
mov
outsl
pop
push
out
mov
jle
sbb
outsb
roll
mov
and
fdivrs
imul
inc
arpl
int3
mov
sbb
mov
inc
sbb
test
inc
cli
mov
pushf
arpl
xor
push
pop
cmovs
mov
and
xchg
or
xchg
mov
or
arpl
stos
test
sub
loope
repz
addr16
add
pop
adc
dec
and
fisubs
sbb
jno
in
outsl
mov
add
sub
dec
cmp
and
js
cmpsb
xor
test
scas
in
pop
jbe
mov
mov
pop
scas
stos
cmp
outsb
nop
ljmp
pop
cmp
pushf
fsubrs
nop
fdivs
outsl
add
test
cmp
xor
movsl
mov
ja
dec
addb
cmp
in
jl
pusha
or
jb
pop
cmpsl
add
and
xor
bound
xchg
dec
repnz
addr16
mov
and
or
sti
mov
pusha
push
cmp
outsl
xchg
mov
inc
jle
mov
cwtl
loopne
in
mov
clc
inc
inc
or
mov
shrl
mov
out
mov
pop
adc
dec
enter
cmpsl
xor
jp
xor
lahf
sbb
scas
hlt
adc
cmp
scas
inc
mov
cmc
cmp
sub
mov
mov
clc
push
xlat
lods
incl
jno
popf
or
xor
ret
inc
mov
or
mov
or
mov
fsubrs
mov
daa
dec
inc
jnp
addr16
sbb
xchg
pushf
pop
mov
inc
mov
sub
das
xor
xchg
mov
dec
dec
inc
je
mov
sub
shlb
pushf
movsb
cmpsl
nop
sub
insl
adcb
lods
mov
daa
mov
cmp
or
testb
cmpsl
aam
and
idivb
cwtl
mov
pop
jecxz
mov
leave
cli
rolb
adc
sbb
cmpsl
dec
frstor
lods
cmp
mov
dec
lods
sbb
js
or
cmpsb
stos
jne
fwait
lahf
push
stos
movsl
jge
faddp
xor
push
mov
shll
cmp
inc
inc
sahf
fwait
out
loopne
in
stos
or
cld
sahf
outsl
mov
cltd
mov
cmp
pushf
cmp
jmp
mov
bound
xchg
pop
repnz
push
or
fcmovne
dec
test
sbb
dec
mov
out
xor
xor
lock
movsl
lds
fistpl
aas
daa
pop
rolb
rorb
mov
hlt
jg
loope
inc
inc
outsl
push
repz
mov
pop
stos
jno
ljmp
loope
and
popa
inc
push
loop
mov
scas
and
pop
fwait
pop
mov
and
sar
mov
lcall
jnp
cmpb
mov
and
pop
imul
lods
jge
push
mov
movsl
inc
pop
pusha
fsubrl
jne
mov
dec
inc
shlb
scas
fwait
loopne
enter
inc
pop
add
xchg
aas
pop
in
mov
cmp
add
dec
dec
pushf
sbb
scas
stos
loope
sbb
xchg
cli
mov
and
sub
cmp
dec
call
out
xchg
xchg
lahf
inc
stc
xor
adc
or
mov
jo
bound
pop
dec
adc
add
cmpsb
cli
daa
mov
lcall
outsl
push
inc
mov
pop
nop
test
dec
das
and
ficoml
inc
js
insb
mov
aam
xor
fisubl
inc
rcrb
popa
pop
aad
dec
leave
xor
inc
fildl
in
jns
sbb
fsubs
pop
cmc
pop
lods
jmp
inc
dec
mov
dec
mov
mov
and
inc
dec
mov
mov
mov
adcb
and
in
rol
loopne
shll
imul
add
lds
sti
ficompl
fsts
sarb
cmp
aaa
jbe
pushf
popf
cmpb
lods
rorb
inc
push
sbb
lcall
mov
pop
in
adc
mov
adc
lds
dec
je
adc
daa
popf
popa
jg
push
lcall
and
push
pushf
or
fwait
adc
in
cmpsb
lods
xor
pop
stos
jne
xor
data16
jbe
push
push
and
adc
fimull
mov
imul
dec
inc
push
arpl
push
test
call
adc
or
mov
dec
stos
shll
or
outsl
andl
dec
lods
dec
cmpsb
pop
pop
lcall
inc
mov
mov
jge
fwait
mov
or
cmp
jle
jo
sub
pop
adc
daa
mov
fmull
outsl
imul
lret
xor
arpl
adc
add
adc
xchg
inc
bound
inc
data16
js
imul
sbb
shlb
inc
lods
mov
scas
js
movsl
lods
mov
lcall
mov
sub
out
sub
arpl
or
movsb
push
aaa
sahf
or
fucomi
lods
aas
jmp
xor
and
data16
jae
pop
outsl
push
stc
adc
cmp
mov
pusha
fiaddl
jne
add
arpl
std
cmpsl
mov
ss
cld
stos
lahf
dec
aam
mov
dec
lods
stos
mov
cmpsl
push
mov
pop
dec
pusha
inc
mov
pop
or
repz
fidivs
xchg
cmp
or
xchg
cmpsb
lahf
cmpsl
add
test
sbb
fdivrs
shlb
pop
and
mov
cmp
sahf
rcrl
gs
jo
cmpsl
inc
or
jmp
inc
sub
scas
ss
int3
jmp
add
or
cmp
cmpsl
insb
inc
jne
popa
mov
and
test
orb
scas
cmp
cmp
insb
mov
push
inc
cmp
fwait
xchg
xor
popf
adc
sub
jo
lcall
movsl
xor
sti
pop
rorb
dec
pop
icebp
mov
mov
mov
xor
fwait
mov
mov
adc
pop
mov
js
sti
pop
testl
push
sub
das
sbbb
mov
cmp
push
leave
inc
mov
pop
sbb
cld
into
and
mov
sbb
push
cmp
jo
push
outsl
int
jle
push
pop
loope
xor
cmpsb
and
test
xor
lcall
insl
add
lcall
ja
stc
aam
fsts
inc
add
and
xadd
or
and
push
test
leave
test
sbb
add
inc
or
xlat
jne
jge
leave
ret
mov
jne
xor
xor
movsl
or
iret
xchg
adc
mov
or
stos
pop
mov
jbe
int3
sub
mov
pop
cmc
sub
or
pop
orl
and
flds
jae
stos
movsl
dec
inc
imul
loope
stos
enter
aaa
cmp
pop
mov
test
gs
mov
pop
int3
lock
cmp
sub
pop
sbb
inc
fstl
lret
mov
jge
or
mov
lods
pop
or
push
movsl
mov
dec
roll
repnz
ss
mov
mov
into
push
andb
shl
insb
int
call
xchg
push
and
pop
movsb
fwait
inc
inc
addb
push
stc
scas
lds
stos
mov
inc
inc
subb
idivb
push
stos
call
cmc
scas
rorb
stos
inc
sbb
les
sub
scas
adc
lret
or
stc
pop
sbb
xor
cmc
stos
dec
inc
ret
mov
push
popa
ljmp
jo
das
test
xchg
shl
call
mov
add
xor
add
mov
mov
jg
in
fdiv
cmp
stos
push
add
scas
dec
xor
aas
aaa
adc
pusha
lods
in
jl
cmp
jecxz
dec
clc
add
and
ror
jne
mov
mov
movsb
outsl
push
or
and
cwtl
push
mov
movsb
ds
pop
inc
mov
mov
nop
test
mov
scas
scas
das
push
pop
cmc
jbe
sbb
xor
cmp
fsubr
fwait
inc
aaa
sbb
scas
dec
enter
or
cmc
inc
mov
inc
lods
fsubp
sbb
mov
ds
nop
mov
cli
test
not
imul
sub
mov
jne
xchg
xchg
mov
xor
lock
lea
and
imul
enter
cmp
insl
mov
cmc
mov
shll
lods
lret
loopne
cmpsl
inc
cmp
or
addr16
stos
sbbb
nop
inc
testl
insb
mov
push
xorb
dec
sarl
lcall
pop
inc
mov
outsl
movsl
sub
fiadds
sbb
adc
loope
and
js
push
inc
or
in
aad
mov
gs
clc
jno
or
fsubrl
jno
sub
lods
shl
hlt
shll
fcoml
add
adc
js
jg
data16
inc
pop
sub
mov
or
ud0
xchg
int3
inc
lcall
test
cmpsl
sahf
and
pop
cld
mov
jle
xor
and
in
clc
pop
add
inc
adc
das
shrb
mov
dec
dec
mov
in
fcoml
sbb
rclb
inc
gs
xchg
lods
fxtract
call
hlt
clc
inc
push
cmpsl
jo
out
xchg
ficoml
clc
lods
inc
scas
aam
cmp
in
outsl
loope
sahf
in
jns
inc
stos
mov
aad
push
jnp
pushf
loopne
sub
jg
in
cmp
xor
xor
sbbl
fcom
sub
mov
test
movsb
push
add
stos
sbb
cmc
add
pop
dec
xchg
sub
mov
sti
hlt
mov
lea
adc
pop
out
cld
fcmovb
mov
mov
ror
scas
sbb
fcomps
pop
fdivr
sub
mov
test
jbe
jl
movsl
ljmp
mov
sub
or
mov
movl
loopne
pop
push
retw
aas
mov
lods
int3
aas
xor
xchg
int
repz
enter
pusha
subl
rolb
lock
inc
mov
xchg
pop
sub
rcl
jno
stos
subb
push
jns
lods
or
sub
sbbl
xchg
inc
adc
xor
pop
mov
adc
mov
in
sbb
sub
cmp
addr16
mov
xor
scas
fisubs
inc
xchg
out
call
shl
mov
loope
iret
clc
adc
lods
mov
jne
cmp
inc
imul
and
movl
inc
sub
add
sbb
stos
stos
cmp
inc
pop
push
dec
jb
mov
movsl
imul
add
stos
inc
inc
test
jmp
repnz
adc
jns
inc
movsl
cmpsb
orb
mov
call
xchg
xchg
cmp
out
movsb
inc
sub
repnz
stos
dec
add
adc
and
jns
cmp
movsl
jns
mov
mov
lret
push
iret
mov
mov
lods
mov
bound
mov
push
outsl
or
jp
rorb
orl
cmpsl
aas
das
stos
and
enter
rorb
popa
scas
rorb
push
daa
xor
and
subb
xor
enter
test
cmpsl
imul
cltd
lods
popa
inc
mov
addr16
xchg
int
loope
jae
andb
dec
add
movsl
xchg
bound
adcl
mov
jne
shll
add
sbbb
leave
movsb
cwtl
aaa
movsl
js
xor
inc
ds
aaa
inc
adc
loopne
xor
mov
stos
mov
test
cld
outsl
movsl
push
std
jno
jmp
int3
shrl
mov
int3
xchg
cmpsl
loopne
xchg
add
push
sahf
movsl
sbb
into
xor
jmp
scas
imul
stc
add
mov
rcrb
mov
in
dec
mov
mov
mov
rcrl
pop
jl
or
call
mov
fmulp
shrb
cmp
repz
mov
add
scas
xor
dec
add
and
jnp
lret
lock
inc
mov
jmp
sarb
or
mov
addr16
repnz
mov
cmp
sub
jno
imul
call
mov
mov
ljmp
dec
stos
aas
stos
add
sub
stos
jo
jae
das
xchg
jnp
rcrl
cmpsl
call
shl
cmp
aam
and
sbb
clc
sbb
outsl
call
dec
push
scas
ror
cmp
jnp
sub
jg
movsl
mov
sub
add
ljmp
pop
out
iret
inc
ficomps
popa
fcomps
shl
fimull
jnp
add
inc
sahf
outsl
mov
aas
imul
lret
pushf
aas
jnp
adc
arpl
push
inc
ficompl
outsl
pop
das
pop
pop
daa
or
lods
aaa
cmp
scas
ja
stos
aas
inc
pop
inc
jbe
aaa
cltd
stc
sub
cli
cli
hlt
es
add
adc
scas
int3
insb
aas
sub
xchg
arpl
in
jae
addr16
adc
nop
mov
aaa
arpl
push
stos
mov
cld
ds
mov
sbb
inc
jmp
xchg
daa
jle
lret
cmp
inc
push
pusha
and
inc
mov
call
sbb
lock
or
arpl
leave
push
fistpll
cltd
daa
outsl
shrl
pusha
cmp
mov
daa
sbb
call
mov
mov
test
test
ss
mov
out
clc
xor
clc
pop
daa
stos
inc
xor
mov
push
inc
call
jno
or
jb
lahf
jne
pushf
xchg
fmuls
mov
lds
mov
fs
jle
icebp
cmp
pop
xchg
jge
cwtl
and
insb
pop
push
cmp
xchg
push
test
iret
sub
xor
stos
gs
xor
jno
cmpsl
sbbb
add
sbb
addb
pusha
cs
sbb
movl
inc
daa
pop
xor
adc
loope
jbe
into
dec
test
test
jne
stos
jae
dec
push
sbb
mov
inc
gs
popa
pop
mov
cmpsb
shlb
loopne
push
or
popa
mov
xor
add
dec
jp
jae
out
imul
lods
jle
frstor
loop
popa
pop
lock
fwait
jmp
add
add
inc
or
push
add
lret
sub
inc
out
jg
sarb
aas
push
scas
ja
cmp
add
daa
in
fmuls
in
jne
lret
fstps
inc
or
cmpsb
mov
pusha
xor
rclb
mov
jg
fnstsw
mov
dec
das
pop
adc
pop
push
aaa
jae
cs
ja
stos
ficomps
jo
dec
pop
outsl
jae
lds
jg
push
mov
mov
fidivrs
sub
sub
fimull
cltd
stos
outsl
outsb
in
arpl
xchg
and
pop
inc
push
mov
pop
aaa
outsl
push
jne
inc
int
jmp
popa
rolb
in
rclb
lds
adc
adc
fistpl
in
clc
stos
cmp
stos
cltd
cltd
dec
or
sbbb
mov
je
hlt
jae
mov
rcrl
pop
cltd
push
add
inc
inc
pop
push
dec
cwtl
adc
test
or
xchg
mov
cmp
fldenv
loopne
jo
fisubs
inc
or
pop
popa
fwait
cmp
enter
into
icebp
mov
lret
mov
shll
fsubrl
sbb
shlb
dec
jg
jmp
scas
add
ds
pushf
add
push
push
stc
dec
aaa
pusha
push
imul
mov
sbb
enter
clc
dec
mov
pop
lahf
rcl
loopne
popa
inc
cmp
jne
pop
cmpsl
pcmpeqb
mov
mov
addps
fwait
mov
insb
adc
and
stos
xor
stc
mov
jnp
xchg
xor
lds
sub
cmp
jae
movsl
push
nop
adc
lock
addr16
stc
and
cmp
outsb
movsl
fcmovnu
js
inc
inc
xlat
inc
push
clc
jecxz
adc
cmp
push
outsl
and
cmpb
mov
lahf
xchg
or
imul
jns
jne
push
jae,pt
imul
mov
dec
dec
inc
scas
insl
mov
jbe
orl
pop
sbb
sti
sbb
pop
shlb
pop
pop
mov
xchg
movsl
adcl
add
xor
ret
gs
pop
cmc
dec
mov
or
dec
jne,pt
dec
mov
sbb
inc
push
arpl
mov
mov
jns
add
jo
andb
push
dec
inc
aas
gs
sbb
jae
or
mov
pusha
cwtl
jae
mov
jle
pusha
push
push
mov
cwtl
insl
stos
addr16
cmc
jns
rcrb
pop
cwtl
loope
stc
movsl
test
pop
dec
push
adc
sarb
dec
vpshuflw
lret
add
cltd
popa
add
movsl
and
scas
shlb
scas
sub
stos
mov
mov
jl
mov
cmp
dec
pop
add
push
mov
mov
imul
jmp
jge
sbb
dec
mov
inc
jno
sub
xchg
sub
push
adc
xor
mov
and
pusha
mov
shrl
push
xorb
ja
xor
mov
inc
pop
lods
push
adc
mov
jns
sub
xor
cmp
into
mov
roll
sub
adc
fcoml
push
out
movsb
arpl
pop
dec
mov
cmp
push
stc
popa
cmp
test
dec
sti
cmp
dec
sub
mov
out
adc
icebp
ror
cmpsl
pop
sub
cmpsl
lret
dec
js
inc
push
mov
aas
jp
fwait
in
mov
xchg
xchg
xchg
inc
call
push
inc
enter
jo
sub
les
jmp
mov
aaa
cli
push
loopne
push
pop
ljmp
mov
out
sbb
iret
sub
adc
sbb
hlt
push
sbb
sbb
arpl
cmp
cmc
int3
or
jg
add
or
pop
fwait
std
push
or
xchg
cmp
popa
leave
cmpsb
cmpsl
dec
sub
lret
fstl
cs
sbb
jg
mov
jo
ljmp
push
and
mov
add
and
dec
shlb
das
out
arpl
rcrb
inc
outsl
xchg
push
scas
mov
adc
gs
pusha
in
mov
stos
push
sbb
mov
push
inc
stos
stc
shl
inc
stos
xor
jns
andl
int3
jae
scas
sahf
je
rolb
xor
aad
jnp
hlt
addr16
ds
lds
mov
cmpl
mov
dec
es
or
nop
cmc
sbb
cmpsl
int3
pop
scas
aam
fwait
addr16
mov
stc
loopne
mov
inc
enter
cmp
loopne
sarl
pushf
cmp
sub
nop
lea
mov
leave
adc
sub
ss
ljmp
jo
push
cmpsl
sbb
call
xchg
jmp
and
sbb
mov
dec
insl
add
inc
and
pushf
xor
mov
stos
lahf
imul
inc
cli
mov
dec
mov
xor
mov
pop
mov
cmp
mov
lahf
mov
cs
fmul
cmp
pop
stos
cmpsl
das
push
shlb
xor
enter
test
and
push
in
fldt
jnp
dec
add
dec
jae
rolb
pop
xor
hlt
inc
repz
test
rcrb
leave
jns
mov
gs
lods
adc
or
and
dec
icebp
dec
push
in
stos
lcall
jecxz
sbb
sub
jg
in
jmp
movsl
inc
inc
outsb
mov
faddl
xchg
sub
jns
daa
in
fldenv
pop
mov
and
aam
test
mov
cmp
cmp
or
push
pop
sahf
dec
add
cmpsl
aaa
repnz
fdivl
cmp
mov
imul
es
jnp
dec
test
outsl
imul
lret
push
mov
stos
lahf
pop
xchg
push
dec
inc
mov
stos
test
dec
arpl
fidivrs
daa
pop
fs
stc
shr
xchg
dec
mov
fdivl
cmp
in
sahf
fisttpl
or
outsl
push
pop
push
adc
dec
loop
cmp
ljmp
in
cvttps2pi
in
lcall
fcomip
lea
into
push
or
inc
popf
sbb
test
jmp
xor
dec
scas
sahf
mov
pop
jp
jp
dec
call
pop
jne
nop
gs
inc
aad
sbb
jbe
and
xlat
outsl
mov
inc
scas
mov
push
pop
cmpsb
inc
pop
arpl
test
jg
mov
pop
insb
pusha
sub
mov
dec
xor
mov
in
inc
leave
clc
jp
scas
cmp
mov
dec
fwait
and
adc
lods
das
sub
mov
pop
add
int3
dec
pop
inc
jmp
cmpsl
cmpsb
enter
sbb
inc
inc
add
pusha
push
aam
xor
pop
mov
outsl
outsb
mov
mov
mov
ljmp
xchg
notb
sbb
outsb
sti
loopne
pop
or
jg
xchg
and
lds
jle
sti
repnz
stc
adcb
pop
js
mov
ss
outsb
enter
sbb
fcoms
cmp
xchg
cmp
cmpsl
mov
rcr
adc
cltd
imul
sub
imul
sbb
fsubl
shrl
mov
clc
in
ljmp
pop
inc
lock
and
inc
testl
sbb
shlb
call
add
mov
repnz
mov
cmpsl
adc
add
adc
xor
cmpsl
jg
adc
dec
or
enter
xor
lea
ljmp
jno
dec
inc
into
scas
mov
cmc
fiadds
es
popa
xchg
cwtl
loopne
loopne
dec
or
cmpsl
sar
jp
out
jae
jae
and
mov
imul
inc
pop
stos
xchg
or
sbb
and
sbb
add
pop
pop
jns
add
mov
jae
fmuls
sub
push
aad
push
int
or
cltd
and
sbb
mov
sbb
jbe
mov
xchg
sbb
mov
shll
repz
mov
roll
jno
dec
and
pop
mov
in
xchg
or
inc
inc
xor
jp
jge
dec
inc
mov
dec
sub
outsl
xchg
mov
pop
jge
inc
sbb
icebp
jp
push
mov
imul
pop
push
jg
push
popa
cli
mov
insb
sub
imul
xor
mov
movsb
add
ss
and
into
sbb
cmp
push
cmp
mov
movsl
xor
fldenv
pop
fildl
sbb
lahf
movsl
fidivrs
out
fisubs
mov
aas
and
test
mov
inc
enter
xchg
pop
mov
subb
lahf
mov
outsl
jnp
mov
pop
arpl
es
push
inc
fisubs
hlt
and
mov
push
cltd
push
lret
jmp
xor
in
push
ret
fsubrs
pop
rorb
loope
lret
pushf
jmp
shl
sarb
dec
outsl
xchg
or
jp
loopne
jne
pop
dec
sub
fimuls
and
mov
decl
jmp
or
or
inc
adc
mov
or
jae
movsb
pushf
movsl
fcom
shl
ljmp
jno
sub
sbb
add
mov
mov
inc
pop
cmpsb
and
and
xchg
add
imull
out
dec
ret
fwait
out
sub
fadds
or
adc
jne
mov
shll
les
push
pop
adc
clc
mov
inc
sbb
and
enter
mov
inc
pushf
test
inc
inc
xor
arpl
jb
pop
xor
jae
adc
push
sbbb
inc
flds
mov
scas
gs
push
mov
aas
sub
jns
jge
xlat
lods
mov
stos
mov
dec
and
jg
pop
push
cltd
mov
test
jo
and
or
xchg
mov
sbb
punpckhbw
jmp
js
xor
dec
inc
mov
fwait
cmp
jnp
xor
dec
loope
jle
push
stos
mov
inc
mov
adc
pop
loopne
rolb
push
xor
rolb
dec
stos
and
in
ret
mov
aaa
push
cmp
push
push
lock
mov
cmp
bound
and
jp
cmp
ja
imul
lds
inc
cmpsl
jl
pop
jns
inc
lods
fcompl
inc
stos
shrl
mov
push
sbb
pop
fwait
sbb
subb
dec
xchg
mov
movsl
stos
or
mov
enter
inc
fwait
xor
xor
mov
sub
add
cmpsl
idivl
or
jge
bound
and
mov
sub
into
enter
test
sbb
push
movsl
sti
loope
fwait
cmp
inc
stos
pop
push
icebp
push
dec
xchg
pop
cmpsb
mov
dec
outsl
subb
in
jmp
jo
ret
shlb
push
movsl
pop
and
js
stos
jne
pushf
fidivrs
mov
lea
xchg
cmp
mov
mov
xor
mov
outsb
or
mov
scas
pop
test
add
movsl
imul
gs
lods
adc
push
dec
pop
loopne
mov
arpl
dec
mov
pop
jns
test
test
jae
push
mov
fwait
into
je
xchg
push
or
out
add
rorb
cmp
mov
inc
pop
xchg
stos
push
sub
or
or
fwait
dec
sbb
mov
mov
pop
movsb
jne
je
lds
inc
xchg
pushf
add
cmp
pop
test
cld
lock
subb
pop
mov
aad
pop
jnp
test
cmp
mov
shl
pushf
pop
jle
lahf
ss
xchg
hlt
pop
mov
add
flds
fwait
negb
es
inc
adc
jne
inc
add
cs
xchg
imul
add
xor
mov
lret
sbb
pushf
fimuls
adc
jnp
ficoml
pusha
leave
mov
xor
or
cmpsl
notl
aad
lods
pusha
stc
lods
jae
es
test
xor
xchg
aas
scas
cmp
int3
in
xor
jne
mov
mov
cmp
mov
sbbb
popf
mov
lret
pop
and
jnp
push
xor
jae
stos
xchg
pushf
mov
popa
inc
pop
iret
jge
daa
sbb
sub
or
pop
scas
xlat
mov
aaa
jne
sub
insb
or
mov
xor
jns
jae
shll
ficoml
xchg
cmpsl
ljmp
scas
xor
mov
cmc
jno
or
cmp
mov
xchg
icebp
call
fsub
stc
fdivrp
andb
xor
inc
shlb
adc
lods
mov
push
push
lods
fs
rorb
inc
ret
adc
sub
stos
pop
xor
pop
imul
lds
xchg
lods
enter
in
cwtl
fsubl
fdivl
ret
mov
sbb
dec
xor
xchg
and
inc
add
pusha
push
js
inc
adc
mov
or
repz
pop
jmp
dec
icebp
js
pop
cmpsb
cmp
orb
and
test
mov
mov
and
jmp
pop
and
adc
pushf
inc
jae
fwait
pop
fdivrs
rcr
adc
arpl
pushl
or
xor
push
imul
outsl
jecxz
call
pop
jno
pop
add
pop
cmp
repz
jmp
push
mov
jns
jmp
and
sbb
scas
xchg
rcrl
push
fsin
push
loop
adc
pop
scas
push
xlat
or
mov
or
outsl
adc
cmpsl
inc
sub
in
in
lcall
outsb
int3
xchg
mov
stos
cmp
lret
mov
sub
fdivrs
cmp
call
sub
pop
pop
ficompl
and
ljmp
test
shrl
js
or
dec
cmp
scas
out
adc
das
inc
fdivrl
mov
sub
popf
cmp
jne
push
pop
bound
subb
aam
fwait
inc
and
dec
sbb
mov
cmp
and
inc
jmp
inc
mov
inc
inc
or
rol
rcrb
and
or
jno
mov
jg
stos
or
pop
mov
loope
pushf
dec
cmpb
adc
movsl
in
inc
xchg
call
and
int3
mov
jo
fwait
aas
inc
sbb
add
mov
and
xchg
xchg
andl
insl
sahf
arpl
adc
add
add
and
or
inc
and
adc
pusha
nop
push
jle
sbb
insl
lds
aaa
mov
mov
and
data16
pop
out
mov
and
cmp
movsl
sbb
pusha
bound
test
lods
sbb
sub
mov
nop
mov
cltd
xor
cld
loopne
inc
add
std
cmpsl
mov
fcoml
aaa
sti
mov
leave
sbb
sub
jns
jg
cmp
arpl
jge
ljmp
into
and
dec
cmpsl
jmp
jae
sbb
pop
ja
cmp
dec
les
jmp
pop
cmp
shlb
sbb
int3
pushf
stos
pop
stos
sahf
mov
les
mov
or
sub
and
loopne
shrb
cmpl
repz
loopne
ljmp
pushf
pop
out
out
jns
xor
xchg
jae
inc
lcall
stos
sub
ficompl
icebp
out
mov
sub
jns
dec
cmp
fidivrs
mov
mov
dec
add
jle
lcall
dec
jno
insl
cs
in
mov
call
cmp
lea
lock
test
push
push
lret
out
inc
and
adc
dec
imul
adc
inc
mov
das
call
or
mov
popf
cld
or
or
add
movsl
push
cmp
in
enter
add
sub
pushf
cmp
adc
inc
add
push
jp
imul
cmp
mov
cwtl
lock
stos
adc
xor
cld
pop
outsl
inc
mov
lahf
pop
add
jno
lds
rcrl
scas
mov
inc
loopne
lods
js
jl
sub
gs
mov
fwait
sti
lcall
or
outsl
xor
push
and
sbb
or
push
and
sub
and
fcmovbe
mov
cld
imul
cli
cmpsl
cmc
fsubl
lock
mov
stos
inc
scas
jns
xor
js
and
addr16
test
jne
rclb
mov
sbb
and
mov
pop
cmp
jb
xchg
jae
inc
xor
add
das
rorl
gs
sar
dec
sbb
mov
and
or
jl
mov
sahf
dec
hlt
out
loop
clc
ret
fsubrl
je
push
xor
scas
insb
ja
imul
rorl
inc
out
dec
xchg
test
stos
mov
scas
jne
movsl
stos
or
dec
lahf
pushf
ljmp
test
ljmp
cmp
inc
mov
mov
xor
push
in
xor
cld
enter
lods
cld
sub
hlt
sar
inc
push
sub
into
adc
mov
sub
xchg
dec
in
rolb
cltd
mov
outsb
jne
lods
test
dec
or
dec
xor
add
push
and
inc
inc
add
insb
mov
mov
xchg
insb
leave
xlat
scas
arpl
or
call
push
push
push
xchg
repnz
mov
cmp
pushl
adc
add
xchg
mov
push
push
mov
sub
jnp
pop
hlt
mov
stc
dec
xchg
xor
pop
outsl
mov
xor
pop
cmp
inc
pop
pusha
and
add
lret
movsl
popa
lcall
dec
sbb
sub
and
xor
les
ret
scas
jmp
or
rcrb
sbb
dec
rcrl
or
mov
cs
cmp
add
int3
pop
sub
mov
in
mov
pop
loop
jo
test
jbe
mov
out
push
fsubl
insb
in
mov
pop
popa
inc
and
rorb
mov
jno
icebp
jns
mov
jae
imul
sbb
cmp
or
stos
mov
movsl
add
sti
pop
popa
mov
rorb
sahf
mov
scas
mov
jae
add
push
inc
cmp
pop
inc
xchg
jge
xor
ss
aaa
shrb
jae
sbb
pop
jns
insl
pop
lods
xchg
or
jg
pop
cmp
test
sbb
cmpsl
pusha
xor
mov
mov
mov
and
and
movsl
popa
je
jne
movsb
jae
inc
lret
push
sub
daa
dec
and
or
ret
xor
cs
pop
ficoms
sub
xor
xchg
inc
push
jns
cli
popa
sub
adc
inc
imul
jecxz
lock
xor
lods
inc
outsl
outsl
fxch
sub
xor
mov
sti
pop
test
dec
insb
and
imul
inc
lret
and
gs
inc
faddl
and
ljmp
adc
push
das
addr16
inc
dec
fldcw
pop
mov
xor
popa
dec
add
es
fstps
jne
mov
dec
into
sub
imul
sbb
sarl
aas
pushf
les
imul
xlat
mov
cs
test
pop
jl
pop
out
popa
add
aas
repz
pop
sbb
loopne
ja
mov
inc
mov
movsb
mov
mov
stos
jecxz
mul
adc
xchg
popa
xchg
pusha
add
or
add
inc
mov
into
pop
cmpb
leave
mov
fwait
dec
ja
movsl
jmp
pop
movb
lea
cmp
pusha
aaa
in
pop
and
or
xor
pop
ja
xor
inc
js
aam
mov
jg,pt
sti
cmp
popa
sbb
mov
sahf
ret
jp
lcall
push
cmp
and
xor
add
pop
icebp
and
adc
push
cmp
adc
dec
push
cmp
js
xor
das
daa
int3
cmp
xchg
fnstcw
cmpl
shlb
xor
in
cmp
dec
xchg
dec
fmuls
and
jecxz
pop
aad
adc
jb
pop
cmp
jae
sbb
lret
outsl
stc
aad
aas
add
push
and
mov
addr16
lret
pop
es
mov
mov
loope
daa
and
or
sub
and
push
and
iret
mov
scas
add
scas
ja
mov
sub
mov
cmp
xchg
push
pop
and
cmp
addr16
filds
cmp
and
cmp
fnstsw
into
dec
out
cmp
xor
shrb
lahf
xor
dec
popf
lds
lods
lcall
out
lea
and
and
dec
stc
mov
incb
stc
rdpmc
or
pop
lock
jbe
and
sahf
arpl
jle
mov
sub
xor
inc
cmp
sbb
popf
pop
and
and
jns
cmp
push
pop
inc
mov
cmp
enter
loope
cmp
icebp
jp
jle
push
movsl
jbe
in
sub
add
inc
rorl
jbe
movsl
fsubrs
ret
pop
sti
rcl
dec
pop
mov
sti
out
aas
movsb
inc
sub
out
stc
push
add
sbb
subl
pop
jae
sub
push
sti
shlb
xchg
fsubs
inc
pop
fmuls
outsl
imul
dec
sub
xor
insl
ret
stc
push
stc
lcall
jb
insl
push
in
mov
sub
sub
push
mov
push
adc
cmpsl
inc
pop
leave
cli
jo
add
in
popa
mov
jle
rorb
mov
mov
xor
mov
test
imul
fs
fwait
int3
mov
lcall
loopne
imul
loope
mov
push
sub
outsl
lods
mov
rorl
clc
xchg
sub
data16
das
mov
mov
std
ret
mov
rsm
movsl
scas
add
icebp
cmpsb
fsts
pushf
sub
lods
cwtl
ret
pop
jp
mov
das
sbb
lods
popf
movsl
mov
adc
mov
sub
shrb
out
cmp
adc
dec
inc
dec
loopne
cmpsb
push
push
inc
mov
adc
or
fmul
mov
test
fbld
popa
mov
ret
das
and
pusha
push
outsb
inc
fyl2x
pop
mov
mov
xor
aaa
mov
in
sbb
xchg
loop
add
sbb
scas
ret
insl
pop
cmpsl
shl
mov
loope
mov
and
jecxz
mov
scas
cmp
movsb
and
je
adc
sub
push
out
daa
or
lods
add
pop
fiadds
or
cmp
cmpb
add
jmp
cs
or
dec
js
dec
sbb
mov
lds
cli
pop
adc
shlb
dec
movsb
dec
icebp
mov
mov
rcll
mov
es
cmp
inc
inc
movsl
and
jl
es
shrb
fs
sbb
and
out
prefetch
or
cmc
cmpsb
cld
adc
daa
mov
fdivrs
pusha
jp
sahf
sbb
jno
mov
adc
outsl
jae
dec
push
loope
ficomps
stc
addr16
cmpsl
inc
cmp
or
xchg
and
mov
jge
jae
int3
pushf
pop
xlat
test
lea
inc
mov
cmp
or
and
inc
sbb
or
push
and
fwait
add
fdivrl
add
dec
arpl
fisubs
mov
or
stos
lret
test
push
in
cld
arpl
mov
sbb
pop
mov
push
mov
inc
cmp
les
mov
lods
call
scas
dec
push
stos
popa
mov
adc
xchg
or
les
lods
test
add
pop
cs
push
loopne
dec
dec
clc
dec
das
mov
int3
jns
mov
fsubs
lods
mov
fidivrs
cltd
mov
push
pop
push
pop
orb
lret
in
xchg
iret
mov
cmp
add
cmp
enter
mov
mov
xlat
arpl
adc
pusha
jp
leave
dec
clc
movsl
mov
popa
inc
test
add
sbb
shlb
jns
mov
js
sbb
in
add
mov
fcomps
inc
cmpsl
sbb
jae
adc
pop
push
xchg
in
adc
aas
std
popa
or
scas
outsl
mov
lea
xor
inc
mov
andb
movsl
xchg
fwait
in
add
dec
xchg
lcall
push
outsl
cmp
cmc
push
pop
mov
jg
int
add
pop
jae
lret
cmpb
out
mov
scas
aas
pop
cmpb
test
mov
sbb
adc
pop
mov
push
sbb
dec
and
enter
sbb
xchg
inc
mov
adc
loop
addl
jb
insl
jg
pop
mov
cmpb
and
or
sar
setns
clc
gs
cmc
subb
pop
into
jno
sub
cmp
cwtl
xor
sub
rclb
int3
mov
inc
bound
jae
push
fsts
mov
scas
lods
sbb
rcl
pusha
mov
out
test
ss
sub
xor
mov
fdivrl
or
or
outsl
mov
xchg
ret
test
bndstx
mov
cwtl
fbld
daa
in
add
sbb
in
sub
aam
pop
jbe
cmp
lea
lock
jmp
sub
ret
dec
mov
mov
sbb
fsubs
adc
jne
adc
cmp
js
push
sbb
scas
in
mov
adc
sbb
insb
mov
mov
pop
fimuls
xchg
cmpsl
mov
mov
jno
pop
and
cld
mov
out
push
sti
cmp
inc
or
mov
push
xchg
inc
cmp
xor
std
nop
inc
imul
dec
sbb
addl
sar
popa
lods
arpl
clc
or
inc
lcall
cmp
push
sbb
pushf
inc
inc
pusha
mov
and
fsubs
pop
sbb
icebp
outsl
imul
mov
xor
sbb
xor
test
ja
aad
movsl
xchg
xchg
xchg
outsl
add
add
jo
jnp
inc
pop
push
fdivrs
imul
out
lods
test
jae
jb
cli
jae
dec
add
mov
push
dec
cli
and
pop
inc
jne
addl
gs
xlat
xor
scas
subl
jge
lahf
pop
push
scas
inc
outsl
cli
popf
icebp
cld
cmpsl
adc
aaa
and
ja
popa
int
stos
mov
sti
sar
imul
xchg
lock
xchg
ljmp
xchg
rclb
bound
or
fistpll
pop
lock
add
sub
ret
repnz
mov
cld
xchg
imulb
imul
inc
aaa
lods
mov
xchg
or
popa
out
sahf
in
sub
fwait
sbb
adc
loop
stc
and
dec
and
inc
mov
sbb
js
mov
aam
ljmp
pop
mov
inc
es
cmp
add
jno
scas
insl
gs
scas
pop
cltd
jnp
out
icebp
cmp
popa
inc
mov
fcmove
movsl
ja
popa
pop
push
push
imul
push
cltd
lods
jle
adc
imul
jp
jg
add
test
pop
int3
sbb
push
jecxz
jno
sub
sahf
mov
mov
leave
pusha
test
add
hlt
bound
mov
xor
mov
or
inc
pop
jge
add
gs
sahf
push
jo
ret
fdivrs
xor
inc
sub
xchg
sbb
pop
inc
add
jge
pop
add
movsl
add
jge
stos
scas
mov
les
jo
and
dec
cmp
loop
push
jae
or
inc
mov
mov
shlb
sbb
or
pusha
sub
bound
inc
cli
ljmp
aaa
popa
inc
leave
xlat
sbb
jae
mov
pop
sub
sbb
push
loopne
cmp
inc
dec
pop
xor
mov
or
daa
cmpsl
sub
xchg
sub
pusha
xor
cmpsb
mov
xor
mov
cs
arpl
push
sub
aas
sbb
sbb
or
fisttpl
mov
imul
mov
dec
call
cmp
lcall
sub
mov
aas
mov
jbe
add
aas
xor
jnp
loopne
push
and
inc
scas
shl
fldcw
test
jne
push
dec
sub
sbb
mov
int3
into
xor
das
data16
or
push
flds
adc
das
sbb
mov
xchg
repnz
dec
stos
arpl
movsl
fmul
arpl
mov
mov
aam
outsb
loopne
movsl
pushf
sar
sbb
sbb
cmp
movsl
popf
mov
stc
dec
xor
bound
ss
ss
gs
stos
mov
int3
test
or
movsb
test
aam
aas
inc
movsb
dec
push
es
outsl
scas
dec
movsb
movsl
inc
frstor
pusha
xorb
cli
out
shlb
loop
imul
jecxz
cmp
lahf
rorb
mov
aaa
push
outsl
mov
dec
jmp
jno
or
mov
jg
and
dec
jb
dec
adc
fs
loopne
mov
add
and
mov
mov
adc
popa
cmp
nop
dec
pop
mov
aaa
mov
or
stc
inc
dec
jo
fcompl
stc
cmp
or
inc
xor
xor
inc
leave
mov
adc
es
push
lds
push
rcll
test
faddl
sub
das
stos
test
dec
dec
jne
loop
lods
sahf
mov
in
xchg
leave
mov
shll
jo
sbb
mov
test
dec
push
sub
ret
loopne
dec
nop
cmp
push
ficoml
sub
xor
push
nop
add
mov
repnz
pop
inc
inc
cltd
xor
cltd
mov
jne
or
jmp
push
fdivs
pop
mov
hlt
jnp
mov
inc
pop
scas
jne
enter
stc
movsl
push
push
mov
movsl
adc
mov
movsb
push
scas
fistl
mov
das
xchg
and
loope
lahf
jl
sbb
lea
stc
stos
cwtl
jns
mov
adc
daa
lods
out
bound
in
mov
loopne
jl
fstps
in
mov
push
xchg
andb
loope
fwait
cmp
repnz
xchg
xor
js
pushf
mov
or
or
repz
xchg
jmp
mov
adc
dec
pop
stos
clc
arpl
mov
test
imul
in
adc
arpl
mov
pop
lret
adc
xchg
pop
mov
scas
dec
and
or
ljmp
xor
or
cwtl
in
and
pusha
mov
push
mov
lock
inc
inc
out
cltd
gs
inc
push
test
pop
sbb
stos
outsl
xchg
jbe
rcll
nop
ljmp
add
in
inc
jge
std
sbb
fidivs
ficomps
stos
cmp
mov
orb
cmc
cmp
sbb
dec
sbb
ja
lods
mov
mov
imul
das
imul
adcl
inc
cmp
add
rol
xor
cmp
pop
push
mov
lar
leave
pushf
mov
fisubl
fdivs
pusha
jne
sbb
maxps
loop
mov
xor
in
sbb
cmpsl
and
mov
sub
and
test
jno
in
dec
inc
enter
push
xor
jbe
cli
loopne
adc
or
pusha
enter
jp
or
mov
les
pop
popf
das
shlb
gs
adc
insl
fwait
jmp
test
js
pop
aaa
push
xchg
inc
inc
or
fadds
mov
sbbb
hlt
push
js
lock
push
mov
shrl
fwait
sub
movsl
test
cmp
sbb
and
xor
inc
mov
add
in
insl
sahf
xchg
fadd
adc
das
fsubs
cmpsl
mov
fwait
inc
mov
dec
jns
stc
mov
dec
fidivrl
jge
movsb
cmpsl
sbb
movsl
stos
clc
fisubrs
and
cmpsl
fs
pop
cmp
fldenv
scas
xchg
or
adc
add
mov
jle
shrb
pop
mov
cmp
sbb
scas
xchg
data16
push
cwtl
jbe
das
pop
cmpsl
push
jns
mov
pop
test
xor
outsl
ret
out
loop
repnz
loop
adc
or
mov
cmp
sbb
sbb
popf
cmp
mov
fmuls
rclb
cmp
cmp
lcall
jg
int3
mov
test
inc
pop
sbb
andl
add
lock
xor
stos
pop
mov
sbb
cmp
dec
cmp
rorl
sbb
stc
xchg
lahf
add
gs
sub
call
dec
adc
cwtl
cmp
stc
stos
dec
outsl
pop
cmpsl
mov
dec
flds
mov
nop
int3
pop
scas
cltd
out
scas
out
rcl
jno
icebp
test
out
lods
jbe
jo
fwait
and
pop
addr16
movsl
sbb
mov
lods
adc
push
inc
sti
adc
jge
mov
out
or
sub
cmpsl
pop
gs
loope
xchg
pop
scas
dec
ss
jno
repnz
movsl
push
cwtl
pop
mov
inc
push
pop
dec
jmp
fdivp
subl
test
bound
mov
push
aaa
xchg
inc
andl
or
cmp
push
and
inc
push
cmp
cltd
inc
fdivrs
sub
xchg
ds
sbb
sbb
inc
inc
cmc
lods
mov
fsubs
pop
pop
sub
test
mov
cmp
jmp
adc
in
ljmp
xchg
mov
cltd
je
add
imull
loope
cmp
inc
pop
pop
dec
ret
jno
xor
inc
sub
leave
pop
addr16
test
cmovne
lret
pop
out
jns
sub
pop
cmp
popf
aad
fdivs
and
pop
inc
lret
sbb
sub
pop
pop
fcmovnbe
jg
adc
pop
lods
ljmp
pop
push
xor
or
fbstp
or
xor
cld
adc
and
mov
not
sbb
cmp
sub
inc
in
notl
inc
scas
jnp
pop
inc
aad
cmp
out
xchg
pop
shll
add
adc
push
stos
addb
inc
movsl
jmp
pop
jle
jg
es
pop
adc
stos
in
mov
or
cmc
inc
jbe
fistpl
movsl
add
pop
cs
ljmp
popa
imul
dec
lock
inc
sbb
xorl
sbb
inc
xor
leave
sub
movsb
xor
jg
ljmp
clc
jg
jl
sbb
inc
dec
pop
cmpsl
scas
aas
add
jmp
add
dec
rolb
adcl
and
cmp
xchg
ljmp
push
xlat
test
ljmp
ds
stos
inc
mov
mov
enter
test
imull
mov
aam
inc
addr16
or
mov
mov
pop
jno
add
dec
cmc
lds
mov
daa
push
xchg
sub
mov
arpl
and
dec
lds
hlt
repnz
cmpsl
not
adc
pop
xor
cmp
fadds
stos
xor
sub
stc
mov
cmp
in
push
fwait
dec
jo
mov
and
cmpsb
inc
lds
js
fwait
out
inc
xor
rcrl
pushf
xorb
pop
imul
or
pop
movsb
in
cs
mov
mov
repnz
dec
pop
mov
scas
fwait
in
sarb
xor
add
sbb
pusha
ljmp
pop
jl
or
mov
mov
imul
imul
and
adc
pop
roll
cltd
daa
xchg
leave
cmp
jnp
test
xchg
pop
cmp
clc
dec
jle
call
ljmp
mov
and
lods
lret
sahf
dec
pop
fcompl
idivb
cmc
movsb
mov
int
jne
pop
mov
push
inc
inc
mov
in
pop
shl
lock
mov
shrb
outsb
sbb
add
pop
jae
mov
popa
inc
jbe
or
lcall
scas
stos
sub
xor
loopne
mov
jmp
inc
xchg
daa
mov
stc
cmpsb
add
cld
mov
add
cmpl
and
fldt
add
test
mov
and
push
ret
aam
hlt
cs
pop
mov
fwait
lods
cmp
stos
pop
js
lods
daa
lahf
jns
jno
mov
push
fadd
shl
aaa
lret
push
rorb
movsl
mov
ljmp
pop
push
jae
push
jns
inc
test
mov
inc
inc
loope
pop
sbb
cmpsl
lds
add
adc
adc
dec
push
fwait
movsl
idiv
hlt
dec
dec
popa
sub
push
sarl
inc
add
pop
lods
mov
pop
pop
rorb
cld
pop
lea
pusha
inc
clc
add
dec
ret
movsl
sbb
pop
inc
loopne
push
mov
cmp
cmp
or
test
movsl
rcrb
xchg
lret
mov
xor
dec
popf
push
jle
punpcklbw
push
jp
adc
pop
pop
ljmp
pop
addr16
js
xor
pop
mov
and
xor
js
enter
int3
or
insl
data16
cmpsb
adc
push
adc
inc
insl
stos
jne
mov
and
push
or
mov
xchg
out
pop
enter
int
add
lret
pop
sbb
inc
out
jo
imull
test
leave
sub
pop
pop
fmul
or
jno
mov
icebp
xchg
fistps
js
ja
inc
ja
rcrb
shll
inc
adc
lock
cmpsl
push
pop
jne
rorl
pop
jl
cmp
divb
push
pop
into
mov
lods
jecxz
cltd
push
test
mov
jne
sbb
adc
push
jmp
out
scas
insl
xor
outsl
mov
imul
sbb
inc
push
pop
mov
adc
mov
add
addr16
sub
mov
cmpsl
push
loop
dec
mov
sarl
mov
mov
jg
push
jno
xchg
clc
xor
pop
push
jno
pop
loopne
push
enter
xorb
cmpl
lods
aad
add
imul
negl
pop
sub
stos
push
lret
jbe
imul
lods
sbb
xorb
mov
mov
pop
test
sbb
dec
jne
add
enter
sbb
and
rcll
mov
push
push
icebp
xor
dec
xchg
movsl
mov
bound
test
dec
js
push
cltd
jne
insl
popa
and
add
bound
xchg
in
push
das
sbb
loopne
mov
adc
cmp
dec
mov
jae
pop
movsb
inc
fnstenv
mov
nop
out
xorb
pop
sub
lods
popf
mov
scas
cmp
dec
iret
imul
mov
sbb
and
push
xor
mov
andl
push
pop
adc
pop
nop
imul
test
popf
xor
jle
or
outsl
jmp
ja
loope
cmpb
out
mov
pop
out
or
push
jnp
sbb
push
into
mov
pop
aas
outsl
in
and
jns
add
loopne
stos
and
stos
dec
mov
inc
and
pop
clc
das
loop
stos
mov
inc
popf
scas
mov
movsl
cmp
test
lcall
pop
fwait
cmpsb
dec
mov
fstps
mov
sbb
stos
add
adc
mov
cmp
stos
ds
xor
imul
fistl
scas
pop
mov
xor
sbb
push
nop
mov
mov
inc
dec
push
pop
or
pushf
test
insl
pop
add
mov
mov
stos
fwait
add
stos
and
movsl
les
or
pop
lahf
mov
lcall
andb
cmp
popa
scas
mov
lds
lds
lret
pop
scas
pop
movsl
mov
jmp
popa
mov
imul
ljmp
add
stc
nop
adc
sub
scas
mov
push
pop
cmpsl
adc
jmp
xchg
jb
fs
aas
in
jno
cmpsl
ret
sub
sub
mov
push
lret
mov
movsl
sub
pusha
movsl
sub
nop
movsl
mov
mov
sub
inc
lahf
stc
xchg
int3
sub
jp
insl
stc
jno
sub
jl
inc
or
clc
sub
mov
repnz
fldcw
leave
jmp
lcall
ret
pop
jl
and
inc
insb
fwait
sahf
mov
scas
call
jbe
repz
cmp
sahf
pop
scas
cli
mov
xchg
scas
icebp
lods
scas
bound
mov
cmp
mov
adc
cmp
adcl
mov
test
lock
mov
lret
and
mov
xchg
add
scas
mov
push
test
test
loop
pushf
call
popa
out
shr
nop
mov
sub
xchg
popa
mov
pop
movsb
lret
or
mov
lods
mov
and
dec
push
scas
mov
lods
xor
push
scas
mov
adc
scas
loope
fnstsw
and
lcall
pop
xchg
in
addr16
mov
sbb
mov
scas
jns
mov
sub
scas
imul
pop
add
lock
clc
mov
lock
mov
data16
mov
dec
mov
sub
or
leave
sbb
xor
jo
hlt
scas
jno
inc
test
mov
popa
mov
cmp
mov
inc
shrb
jne
scas
test
mov
push
jae
imul
rcrl
mov
add
mov
and
stos
stos
scas
dec
push
stc
fwait
sub
push
insb
fwait
pop
inc
add
popf
stc
jb
or
or
add
ja
inc
cmp
mov
inc
pusha
jmp
xor
ja
mov
clc
rcr
mov
pusha
jge
rcrb
rcr
iret
fcoms
punpckhwd
pushf
mov
jae
imul
movl
push
lds
imul
sbb
nop
int3
inc
pop
stc
or
shlb
xor
popf
xor
shlb
test
cmp
cmpsb
hlt
cmpsb
mov
jae
mov
aas
inc
data16
mov
stc
xor
mov
adc
cmp
insl
or
mov
or
add
jge
jns
sub
in
pop
add
dec
lea
scas
daa
out
sbb
stos
sub
imul
xor
jnp
repnz
lods
cmpsl
add
dec
scas
jnp
pop
pop
mov
xchg
mov
dec
mov
lods
movsl
xor
xor
push
cmp
bnd
ljmp
les
mov
cmp
xchg
lods
mov
les
call
or
in
dec
inc
add
pop
jmp
mov
add
lock
cmp
pop
je
inc
dec
sub
lods
sbb
mov
cltd
add
xlat
in
xor
and
jmp
aad
sbb
push
jo
pusha
mov
push
fiadds
gs
inc
cmc
sbb
call
inc
call
in
out
loop
popa
and
push
pop
call
mov
jns
hlt
cli
mov
xorb
les
mov
sbb
pop
ficoml
xchg
or
mov
popa
jae
mov
inc
xor
subl
and
stos
clc
add
or
xor
adc
jo
scas
cmpsl
fwait
jnp
sub
leave
adc
std
xor
jle
stos
cmp
fsubrs
loopne
fcompl
decl
xor
stos
push
lods
push
mov
pop
sbb
mov
call
fidivs
cmp
cmp
addr16
lods
sbb
cmp
divb
test
adc
mov
mov
loope
sbbb
movb
loop
pop
mov
mov
enter
add
enter
stos
cmpsl
mov
dec
pop
stos
and
fwait
nop
inc
jns
pusha
mov
mov
adc
lea
sub
gs
mov
sarb
mov
xor
jnp
xor
mov
jmp
cwtl
ja
xchg
imul
and
imul
sarl
xchg
negb
clc
dec
inc
nop
dec
gs
clc
jmp
test
xchg
in
pop
icebp
aam
lock
sbb
lock
cmp
and
std
test
sbb
xorl
cld
stos
stos
xchg
cmpsl
pop
mov
jle
jb
sbb
cmp
add
inc
xor
or
enter
jle
pusha
mov
sbb
loop
fiadds
loope
popa
mov
and
cmp
jmp
loope
dec
push
lahf
aas
loope
loopne
leave
push
xchg
shr
jne
xor
mov
mov
int3
add
fwait
ds
cmp
mov
xor
popa
orb
jecxz
fdivs
mov
test
cmpsb
in
pop
dec
pop
mov
mov
stc
lods
jb
cmp
sarl
rcl
mov
mov
inc
or
aam
addr16
and
add
lods
adcb
call
fwait
push
out
test
xchg
lds
dec
sub
mov
sar
rclb
xor
push
mov
shrb
sbb
stc
cmpsl
imul
lock
cmp
insl
addr16
mov
adc
decl
dec
and
and
pop
test
pop
test
dec
sub
stc
or
mov
int3
cli
pop
mov
mov
lea
stos
inc
clc
pop
cmpsb
cmp
ret
inc
mov
xor
popa
sbb
es
das
mov
jns
rclb
shrb
mov
fldcw
xchg
aam
jge
xor
dec
pop
stos
lock
clc
add
sub
ss
add
popa
sub
inc
imul
dec
imul
rorl
pop
mov
add
or
mov
movsb
test
enter
sub
push
sub
and
jge
inc
jge
daa
fwait
mov
fcompl
adc
mov
mov
jne
repnz
lcall
push
idiv
imul
cmc
data16
jns
rolb
insb
push
dec
fidivs
xchg
cmp
fstpt
adc
movsl
popf
fildl
hlt
popf
mov
mov
and
out
test
pop
pop
or
mov
mov
hlt
shlb
jno
mov
push
mov
dec
pusha
mov
addb
cmp
enter
jecxz
and
xor
add
out
jnp
arpl
imul
in
cmp
dec
jmp
stc
pop
lahf
es
mov
push
jecxz
mov
and
sarb
sbb
mov
sbb
cmp
cmp
shll
pop
xor
shl
push
mov
mov
xor
pop
sub
scas
in
pop
cmc
adc
imul
pop
shrb
jmp
push
sbb
fsts
cmp
xor
sub
stos
mov
xor
lahf
mov
cmp
stos
pop
fdivp
sarb
test
in
xchg
add
imul
rorb
sbb
shl
lock
sbb
push
mov
mov
stos
xor
aas
arpl
cmp
cmp
lds
call
jne
shll
rolb
mov
xor
loope
lock
inc
xchg
mov
jge
pop
mov
cmp
fsubrs
push
cld
jno
xor
adc
loop
scas
popa
mov
inc
int3
test
pop
popa
imulb
add
out
enter
aaa
out
inc
and
pop
imul
cmpsl
mov
push
imul
xchg
mov
mov
fdivrl
dec
dec
pushf
push
jns
add
mov
push
out
dec
mov
pop
out
pop
mov
lea
adc
xor
fwait
aam
dec
outsl
stc
mov
or
js
test
inc
push
add
adc
gs
fimull
dec
sbb
cs
push
gs
push
pop
insl
jo
andb
popa
std
test
or
cmp
and
hlt
jno
dec
xor
mov
mov
push
inc
lods
lods
cmpsb
sub
xchg
or
cmp
cmp
jns
dec
cmp
fadd
movsb
clc
lock
imul
push
pusha
std
mov
cwtl
jge
cmp
dec
pop
addb
rolb
test
cmp
xor
test
or
cld
push
inc
sarl
lock
and
inc
sub
xor
popa
and
aad
sbb
out
sarl
xor
cmp
inc
aas
inc
rcrb
xor
mov
imul
sbb
leave
dec
cmp
js
inc
mov
inc
lea
cmp
or
and
or
mov
mov
gs
sub
inc
imul
fsubrs
adc
mov
sub
fsubl
rclb
add
fcompl
xchg
add
scas
sub
mov
or
cmp
mov
push
pop
movb
cmp
lods
ret
dec
mov
mov
push
cmp
aam
sbb
popf
and
into
flds
cmp
mov
sar
pop
lods
sbb
stos
pusha
mov
inc
inc
mov
fdivl
jns
and
sarl
mov
inc
pop
pop
mov
call
mov
mov
mov
decl
sub
cmp
loopne
add
enter
sbbl
les
xchg
mov
scas
imul
or
pop
int3
pop
test
mov
mov
jns
in
push
movsl
and
pop
xchg
lods
push
movsw
call
addr16
add
xor
mov
repz
test
pusha
xor
sub
stos
in
cmp
xor
stos
flds
mov
mov
ja
inc
fadd
imul
sub
push
ss
mov
jns
or
mov
daa
cmp
and
lret
add
and
add
imul
add
cmp
mov
sub
int3
jnp
inc
test
push
call
sbb
cs
push
scas
icebp
or
or
imul
outsb
cmp
cltd
cltd
cmp
movb
pushf
pushl
pushf
lea
jb
call
adc
call
cmp
fcomps
test
cmpsb
popa
cld
lea
cltd
stc
pushf
and
imull
sbb
call
outsb
mov
push
decb
clc
mov
insb
and
xchg
dec
loop
addb
repnz
cmc
stos
push
fnstenv
mov
adc
adc
sub
push
mov
dec
hlt
fdiv
fstl
mov
cs
push
jbe
les
lret
fisttps
mov
sbb
mov
jle
or
xchg
ret
mov
or
mov
jp
sbb
stos
sbb
pusha
mov
sbb
inc
mov
imul
insb
cmp
mov
mov
cmp
sub
nop
in
sbb
and
cmp
sub
out
push
mov
cmp
pop
adc
movsb
cmp
and
inc
pop
mov
sub
psubusb
jnp
mov
push
xor
pop
movsb
sub
push
jbe
jno
xchg
push
in
cmp
add
test
std
in
mov
add
frstor
xchg
inc
into
push
loope
loop
pop
sar
fistps
push
cmpsb
add
push
imul
aad
lret
sub
push
and
inc
push
adc
sub
leave
scas
dec
out
jae
jge
pop
jp
test
dec
and
aam
xchg
sub
mov
fcoml
fadd
sti
lods
push
jmp
dec
negl
inc
popf
sbb
push
cmpb
fsubrs
inc
mov
insb
imul
sahf
testl
add
xchg
test
popf
adcl
pop
push
repz
and
mov
dec
sub
and
mov
mov
gs
cmp
lcall
jne
push
shr
inc
cwtl
add
into
cmpsl
bound
fidivs
xchg
jle
sbb
mov
mov
lahf
add
xor
add
xor
and
xchg
adc
subl
and
sarl
jmp
sbb
nop
push
cmc
push
or
mov
add
jbe
ja
mov
add
mov
aas
push
movsl
bound
xchg
shlb
sti
pop
mov
scas
pop
add
aaa
hlt
push
mov
cld
cmc
dec
gs
or
fwait
inc
xlat
push
cmc
iret
fs
rcrl
push
pushf
fwait
or
jl
xor
mov
xchg
dec
adc
mov
lret
movsb
imul
pushf
jo
cmpsl
sarl
mov
lock
imul
sub
inc
pop
aam
push
and
fnsave
sahf
inc
int3
cmpb
insl
lcall
pop
cmp
decl
mov
filds
divb
add
jp
xchg
js
in
mov
ret
xchg
int3
pop
dec
mov
imul
sbb
imul
imul
int
xor
mov
sub
pop
and
fwait
xchg
pop
xchg
push
push
pop
ljmp
jnp
jmp
hlt
adc
jo
pop
js
jbe
inc
lcall
sti
cmc
push
js
jmp
jnp
jecxz
shrl
stos
ret
sbb
mov
repnz
cmp
in
xchg
repnz
xor
cmp
test
cltd
jl
xor
ljmp
lcall
add
popf
xor
outsb
inc
add
out
adc
sbb
cmp
sub
enter
mov
and
stos
xchg
dec
movsb
xor
in
imul
cmp
mov
nop
xor
rorb
sbb
lret
gs
inc
cwtl
imul
fstl
pushf
jae
loop
sti
jbe
dec
loop
out
bound
dec
jmp
aaa
pop
mov
cmpsl
dec
jne
jecxz
sbb
loopne
stc
push
fs
lahf
mov
xchg
xchg
push
pop
mov
inc
fwait
dec
pop
mov
cmp
pop
enter
sahf
mov
mov
xchg
fwait
xchg
push
lcall
xlat
sbbb
jl
out
ss
jns
ficoml
out
movsl
mov
mov
sub
jbe
jl
stos
adc
mov
dec
lods
dec
shll
loope
punpckhwd
fdivs
sbb
jnp
mov
imul
push
push
add
in
loope
xchg
mov
popa
mov
xchg
imul
mov
or
notl
cmp
dec
add
pop
pop
adc
int3
stos
mov
push
fdivs
sub
xchg
sub
mov
and
add
cmovge
in
xchg
into
out
jnp
imulb
and
imul
xor
cli
cs
jo
arpl
pusha
pop
les
icebp
dec
adc
pop
or
test
and
or
push
frstor
mov
imul
or
cmp
fsts
mov
mov
and
ficompl
push
pop
pop
inc
cli
adc
inc
cmp
push
xor
addr16
cltd
jae
aad
mov
iret
xchg
call
sarb
out
stos
test
stos
jge
sub
push
adc
cmp
repz
clc
or
push
and
xlat
inc
sti
ret
sub
shld
xchg
sbb
lea
mov
in
bswap
rclb
clc
insl
es
lods
les
mov
add
iret
sub
into
adc
adc
fcomip
repz
enter
mov
lahf
mov
inc
lock
jns
cmc
pop
add
sti
adc
sbb
cmp
pop
neg
dec
push
sbb
xchg
add
jge
mov
pop
jns
je
jo
loopne
lods
sbb
movl
mov
movsb
inc
sarl
push
cmp
fsts
and
xchg
jb
insl
inc
dec
lret
jge
dec
xlat
cwtl
outsb
push
fbstp
insb
pop
ds
mov
gs
aas
cli
lock
fcoml
divl
mov
xchg
icebp
sub
sub
mov
and
dec
inc
sbb
xchg
cmpsl
and
fnstenv
lret
pushf
lahf
add
sbb
pop
ja
movsl
les
popa
repz
sub
fldenv
ljmp
dec
and
mov
call
lahf
out
xchg
mov
push
clc
insl
mov
xchg
loope
daa
push
insl
sub
lcall
mov
add
mov
ficoml
in
ret
lcall
dec
sub
xchg
adc
pop
or
shrb
sub
adc
lret
pop
ss
jo
loopne
sti
mov
sbb
xchg
aas
cld
aad
lret
push
mov
das
sahf
or
fcoml
mov
adc
shrl
xlat
mov
jmp
jnp
cltd
mov
test
shr
lret
lret
mov
xchg
dec
sbb
mov
lret
out
pop
xchg
pop
jecxz
sbb
and
int
mov
test
in
lods
ljmp
into
sub
cmp
inc
jge
xchg
add
sbb
add
xor
repnz
mov
xor
aaa
lock
mov
fiaddl
std
push
fdivp
dec
lfs
test
repz
inc
insl
sbb
data16
push
push
sub
data16
or
sub
std
inc
mov
ret
in
mov
push
mov
mov
mov
mov
add
lock
mov
sahf
mov
arpl
xor
pop
mov
jne
or
add
pop
jne
cmp
je
dec
in
lock
xchg
inc
xorb
movsl
cltd
cmc
sbb
out
push
in
insl
push
xchg
cvttps2pi
xor
and
cmp
stos
add
outsb
inc
mov
movsl
dec
rclb
push
mov
bound
push
jle
rolb
jecxz
loop
sub
sbbb
mov
add
xchg
cli
mull
call
dec
mov
push
out
test
sbb
sbb
dec
cmp
jns
ret
cmp
mov
in
movsl
add
mov
push
lds
xchg
pusha
sbb
mov
cmp
inc
stos
pop
ret
fs
dec
or
fnstenv
outsb
xchg
cmpl
or
mov
addr16
pop
out
ds
sub
dec
sti
int3
mov
cmp
mov
add
xor
std
pop
dec
mov
add
jno
push
jge
mov
dec
bound
orb
repz
leave
test
ss
stos
xchg
or
mov
push
ret
xchg
pop
in
loope
in
jnp
stos
jno
pop
xor
jno
les
stos
xchg
clc
or
loop
test
bswap
xor
aas
cmp
shrl
sbbl
mov
inc
lret
std
fistl
jb
xor
dec
test
les
shlb
stos
aad
inc
cld
sahf
adc
in
mov
fcmovbe
mov
jmp
lret
cmpb
mov
pop
inc
std
subb
push
cs
lahf
xchg
stos
addr16
lcall
xlat
call
mov
es
mov
ds
flds
aad
sub
inc
or
jp
in
xchg
mov
add
sbb
pop
inc
test
negb
sub
mov
fistpl
arpl
adc
add
in
inc
int
outsl
sub
fisttpl
xor
hlt
out
mov
adcl
push
insl
lret
sbb
or
push
dec
or
lds
imulb
addr16
in
pop
jno
pop
inc
rcl
das
sbb
sbb
push
lods
leave
in
cmpsb
jge
faddl
jbe
into
mov
mov
lods
mov
test
pop
fcomps
sub
insb
and
jbe
inc
dec
ret
jg
sub
or
fcoms
out
notb
lds
aaa
lock
jge
shll
aad
sbb
aad
fcoms
divb
jno
lds
ret
ficomps
and
test
lret
pop
jo
in
cmc
push
or
inc
std
aam
mov
cmovo
inc
out
jno
movsb
adc
lea
call
pop
pop
and
test
xor
sahf
out
ja
out
in
jg
sub
pop
sbb
mov
out
cmpsl
hlt
mov
cwtl
fcomps
push
or
fxch
sahf
sub
shlb
mov
jmp
pop
xor
cmpsl
fs
adc
or
mov
sub
int3
popa
cmp
push
pop
pop
xor
shll
or
xchg
pushf
mov
inc
add
pushf
mov
dec
int
aas
cltd
cmc
pop
lods
push
lret
cmp
sbb
dec
stc
xor
or
mov
cltd
es
fs
test
jmp
shr
je
idivb
pop
lock
leave
sbb
jmp
dec
fistpll
ljmp
nop
cmp
in
les
mov
ds
outsb
outsl
adc
ret
es
in
iret
les
dec
loop
jae
sbb
inc
das
sub
outsb
sub
loope
les
jo
push
xchg
outsl
adc
push
popf
jne
sbb
add
jbe
pop
dec
jb
aad
pop
imull
aam
fistl
fwait
cmpsl
lds
imul
aam
or
inc
pop
cmpl
push
aam
out
xchg
icebp
xchg
jecxz
xchg
mov
ja
ja
lds
jmp
xor
nop
lret
cmpb
mov
sbb
pop
ss
xchg
or
and
pop
inc
xchg
mov
pop
lret
das
test
jle
or
or
imul
lahf
sbb
repnz
adc
nop
push
cltd
fildl
fbld
inc
xchg
pusha
or
sub
popf
loop
pop
push
cmp
shlb
push
mov
push
es
ffree
lds
aas
stc
rolb
xchg
cs
fwait
jbe
add
mov
and
xchg
je
movsl
je
notb
cmc
mov
ret
jl
out
icebp
hlt
mov
iret
xor
fisttpll
sub
bound
arpl
add
outsl
and
mov
fistpll
cwtl
subb
or
mov
pop
leave
jb
ret
loopne
lock
rorb
mov
in
mov
push
and
jo
add
je
xchg
or
cli
lock
cmp
mov
pop
rcrl
leave
sbb
and
adc
int
cmpsb
or
sbbb
cmp
xor
mov
mov
mov
cld
inc
mov
fldcw
adc
mov
daa
fadd
cmp
cwtl
inc
cmp
in
sbb
mov
movsb
pop
or
mov
dec
cmpsl
push
xchg
fldcw
shlb
popa
ljmp
idivl
inc
pop
shrb
xchg
cld
xor
xor
sub
inc
out
sbb
mov
cmp
jmp
xor
cmp
mov
lcall
les
fisubs
jne
loopne
push
adc
dec
rorb
subl
adc
or
jb
lahf
jl
dec
inc
mov
mov
scas
sti
jne
daa
lods
sbbb
cmp
cmp
sahf
mov
test
push
scas
jmp
add
or
mov
jns
push
mov
pop
mov
ljmp
dec
fdivl
sub
lret
mov
xchg
push
lods
shr
fwait
out
test
int
loope
xorl
jp
into
stos
test
out
mov
test
orl
loopne
dec
jl
push
aad
mov
lret
push
sarl
push
xor
out
or
and
bound
push
mov
pop
jecxz
mov
lret
or
mov
mov
mov
push
cmp
rol
shr
adc
mov
push
inc
cltd
xor
cltd
test
xor
fldcw
dec
push
cltd
jno
and
push
ficomps
adc
xchg
les
and
and
mov
pop
mov
push
dec
stc
or
push
or
xchg
xchg
jg
adc
add
mov
mov
xor
sub
cmp
mov
fwait
xor
jmp
sub
dec
js
test
fnstenv
jp
mov
sbb
scas
and
rcll
mov
sbbl
sub
shlb
dec
lods
bound
js
fcmovb
pop
mov
jp
ljmp
adcl
cmovae
ret
mov
idivl
cwtl
pop
pop
ret
xor
mov
dec
or
leave
ss
pop
stos
or
push
addl
cmp
dec
je
out
inc
fbstp
mov
cmpsl
sub
gs
dec
or
cmpsb
jg
ret
out
xor
jne
mov
add
cmpsb
stc
lods
jge
adc
push
push
fnsave
add
aam
daa
mov
repnz
je
lds
push
hlt
lods
je
nop
or
scas
imul
fstpl
mov
es
ficoms
movsl
pop
aas
enter
out
xlat
dec
rorl
adc
add
pop
sub
push
sub
iret
sub
pushf
pop
xlat
mov
iret
std
in
cmp
jge
shll
outsl
lcall
push
mov
out
lds
in
adc
fst
out
jo
in
lcall
ror
bound
ret
inc
xchg
in
mov
adc
pushf
add
jbe
pop
nop
stos
das
sub
jle
hlt
mov
jecxz
push
aam
add
es
dec
dec
cmpsl
pop
out
push
jmp
and
cmp
add
dec
mov
scas
pop
shrb
addr16
pop
ss
inc
out
idivl
in
mov
lock
loope
jae
test
dec
jno
xchg
imul
inc
popf
add
add
mov
cltd
cmp
mov
shlb
xor
jge
jne
shlb
popf
mov
mov
int3
xchg
xchg
out
xor
jbe
or
dec
adcb
add
loope
add
cmp
add
mov
paddq
pop
fadds
cmp
enter
xor
stc
rolb
clc
fists
pushf
inc
ds
in
jae
add
mov
push
adc
cmc
mov
fnsave
ror
test
imul
dec
xchg
enter
mov
fstp
pop
and
lahf
inc
xchg
jb
out
negb
jge
lds
adc
and
imul
cmp
movsb
jle
xor
fisttpl
sahf
adc
insl
es
sub
inc
mov
in
mov
pop
cmpb
mov
sbb
rorl
stc
les
add
mov
hlt
fwait
push
lret
popa
insl
sbb
stos
ret
add
xor
sub
shll
fldcw
lods
mov
dec
bound
xchg
adc
sbb
mov
pop
cltd
aaa
xor
or
stos
push
mov
sub
movsb
dec
or
xchg
dec
inc
cmp
cmpsl
and
popf
rcl
inc
stc
lret
mov
jmp
inc
sub
sub
pop
sub
outsl
ss
lcall
out
lds
push
inc
arpl
imul
add
fninit
cmp
inc
mov
and
push
hlt
pop
das
stos
arpl
jb
or
sarb
aad
shrb
ret
add
adc
sbb
cmpsb
sbbl
into
pop
inc
std
mov
divl
aam
cs
push
repnz
and
mov
in
ret
lea
test
mov
repz
daa
loopne
lea
in
les
mov
pushf
pop
xor
aad
jg
xor
jbe
xor
xchg
dec
add
lret
and
std
or
mov
xchg
dec
cld
test
mov
sbb
repnz
aad
xchg
lods
and
sahf
adc
dec
mov
hlt
lret
inc
sbb
xlat
mov
fists
in
outsb
sti
and
out
scas
sub
mov
jb
mov
dec
clc
cwtl
sbb
pop
int3
in
sub
jle
cmp
in
ret
outsl
subb
gs
and
jbe
aam
dec
and
and
int3
sbbb
xchg
jg
negb
dec
push
aam
fcompl
and
add
mov
outsb
addb
cmp
cli
push
xor
dec
daa
xchg
movsl
push
pop
push
shll
adcb
inc
add
aam
aas
enter
add
sbb
mov
daa
test
add
int
fisubrs
and
add
loopne
inc
sbb
arpl
out
cmp
jne
loopne
inc
cmpsb
clc
cmp
and
fs
cmpsb
pop
leave
movsb
cmp
mov
in
inc
mov
inc
cmp
jge
pop
xlat
push
jb
cwtl
and
inc
bound
insb
and
or
mov
cld
fdivs
adc
dec
push
imul
and
and
popf
mov
push
dec
addb
popf
je
aas
jb
ds
lds
clc
xor
pop
add
pop
jno
lret
xor
push
test
out
sub
fildl
lods
test
scas
xchg
jle
and
mov
fildll
mov
push
sub
push
iret
mov
mov
mov
mov
cmp
dec
and
mov
out
mov
mov
mov
leave
add
pusha
kaddb
jno
movsl
sbb
push
dec
inc
cmpsb
sbbl
or
push
lret
insb
lds
pop
dec
std
push
and
nop
das
xlat
xchg
aam
andps
mov
pusha
sbb
add
adc
sti
jae
mov
scas
dec
mov
mov
inc
ret
mov
and
adc
icebp
outsl
sub
std
jb
out
loope
mov
nop
aas
or
inc
mov
adc
push
sub
cmp
mov
rcrl
clc
dec
pusha
in
push
leave
inc
insl
fnsave
mov
mov
pop
pop
xor
jne
rcrl
inc
push
test
popf
inc
jg
jmp
and
hlt
adc
mov
pandn
inc
ret
mov
ffree
aas
fsubrs
mov
inc
ja
sbb
js
cmp
push
stc
in
dec
pop
and
jnp
sbb
test
mov
pushf
xor
push
repnz
popf
mov
mov
rolb
data16
movsl
and
lcall
js
cmp
dec
or
jns
mov
mov
mov
fildll
lods
sub
cmpsl
fs
test
sbb
pusha
aaa
in
out
aaa
push
shr
pop
mov
mov
sbb
xor
cmpl
mov
scas
fists
inc
test
imul
jno
jns
lea
or
lock
jp
movsl
dec
xlat
mov
out
mov
fstpl
idivb
cwtl
test
stos
cmp
lcall
lea
mov
or
add
push
inc
arpl
ret
pop
vcvtdq2pd
fmull
inc
add
ret
jmp
pop
xlat
dec
sbb
lods
pop
mov
jl
inc
cmp
fidivl
pop
hlt
pop
jecxz
add
js
stos
xorb
push
pushf
adc
mov
ss
fsubrl
push
cltd
or
rorb
push
mov
or
pop
testl
in
mov
ss
js
loopne
jno
adc
test
aad
pop
or
mov
pop
jb
mov
dec
sub
pushf
xchg
inc
add
jmp
lahf
mov
rcrl
lods
pusha
mov
fwait
jb
ljmp
push
jno
mov
nop
sub
outsb
fdiv
scas
xchg
jmp
push
jecxz
inc
or
pop
or
cmp
inc
pop
sub
mov
sbb
mov
call
sarb
movsl
test
out
pop
divl
cwtl
aaa
jb
pop
add
mov
jbe
pop
push
sbb
insb
gs
xlat
push
push
mov
xor
scas
leave
ds
and
bound
rolb
xor
scas
push
cltd
aad
cmp
cmp
shlb
stc
shrb
sbb
in
gs
mov
mov
scas
push
sub
adc
xchg
cli
pop
pcmpeqd
dec
lds
xchg
sbb
xlat
pop
mov
mov
sti
push
xor
sbb
dec
inc
sbb
inc
mov
add
out
jecxz
lods
add
adc
mov
lea
aam
push
incb
popa
loopne
out
cmpsl
rcrb
mov
enter
aad
outsb
xor
add
and
scas
push
sahf
sbb
mov
adc
xchg
dec
add
mov
sbb
mov
jmp
ljmp
arpl
adc
dec
lods
push
mov
imul
aas
not
lret
xchg
sahf
add
push
push
sbb
in
xchg
sbb
lret
imul
mov
push
and
mov
ds
xchg
nop
lock
fwait
jne
push
inc
adc
sbbl
jnp
mov
call
inc
cmc
lret
orl
xchg
mov
mov
dec
push
inc
mov
pop
ret
leave
xchg
dec
dec
movb
cmpsb
ret
sub
mov
aaa
js
jp
push
lea
jae
bt
test
test
cmp
pushf
call
cmp
pusha
lea
jae
bswap
lea
mov
sbb
shr
adc
dec
mov
bsr
mov
rcl
rol
mov
jne
test
bt
push
xor
jmp
mov
mov
jbe
and
sbb
add
inc
jmp
popf
push
push
mov
aaa
loopne
add
push
push
jo
subb
nop
rcll
xor
pusha
xor
popa
int
jnp
shlb
lock
cmc
push
and
popf
mov
pop
pop
sub
xor
inc
mov
pop
mov
out
mov
insl
push
cmp
shll
icebp
scas
adc
sub
stos
shlb
or
test
ljmp
xor
stos
and
insb
push
jbe
xchg
outsb
add
sub
ret
dec
fidivrl
pushf
mov
out
popf
fistps
mov
or
jae
leave
nop
cmp
test
lds
or
jnp
in
lret
sub
out
push
movsb
push
jle
xor
fcomi
mov
sbb
or
and
loop
sti
or
std
jle
xchg
test
test
pop
cmpsl
pushf
push
iret
nop
lea
push
inc
and
imul
jb
jnp
and
loope
mov
sbb
es
xor
fidivs
inc
jbe
adc
dec
movzwl
sub
btc
shl
mov
jmp
dec
add
insb
push
jbe
fs
mov
icebp
insb
or
nop
push
push
outsb
mov
cmp
iret
pop
jbe
lods
pop
data16
ds
clc
sbb
bound
adc
cwtl
xchg
iret
aas
cmpsb
repnz
sub
rcrb
pop
dec
add
es
mov
push
mov
sarl
loopne
lret
jmp
test
scas
inc
mov
out
imul
popa
add
dec
aam
jle
stc
insb
push
jbe
fwait
cmp
test
jno
mov
sub
inc
aad
lret
test
popa
add
cmp
insb
xchg
and
setp
fldcw
addr16
out
push
mov
lret
js
loope
xchg
out
lcall
popf
mov
push
lea
push
imul
mov
mov
xor
jl
or
push
inc
lods
cmpsl
cltd
jo
xor
inc
sbb
movsl
sbb
inc
pop
jge
sbb
inc
sub
mov
mov
pusha
cmpb
pushf
lea
jne
setnp
lahf
lahf
push
sub
neg
mov
and
adc
add
pushl
sbb
mov
clc
clc
clc
movb
test
push
jmp
neg
mov
shl
shr
dec
mov
bsr
add
btr
sar
add
call
add
inc
dec
push
dec
inc
inc
jb
insl
push
jb
addr16
inc
add
xchg
dec
insl
push
jbe
test
push
sbb
xchg
mov
test
sbb
ja
push
orl
movsl
sbb
xchg
imul
loop
inc
into
add
clc
out
repnz
imul
or
mov
push
cmpsb
and
or
and
or
push
and
mov
sub
xchg
jae
push
or
or
in
add
jb
jnp
imul
and
mov
cltd
jbe
jnp
jbe
out
fwait
arpl
ja
test
push
setge
ljmp
mov
scas
test
dec
in
dec
or
aam
xchg
xchg
dec
xor
inc
pop
movsb
adc
mov
mov
push
fs
add
jle
mov
mov
jmp
sub
mov
rcrl
imull
dec
add
push
push
sub
std
pushf
and
mov
adc
je
in
aaa
out
rclb
jle
and
imul
fdivrs
push
mov
add
jne
add
jnp
inc
test
add
insl
lods
je
xor
stos
pop
xor
pop
pop
nop
or
mov
mov
nop
nop
add
pushl
movb
lea
jmp
call
pushf
pusha
lea
jb
push
pushl
ret
aaa
dec
pshufw
shrl
insb
repz
loopne
inc
cmc
jb
rcr
nop
out
mov
xchg
je
ss
pop
adc
orb
sub
fldl
sub
jmp
mov
mov
add
pop
cmp
pop
xchg
call
sbb
cmp
fwait
aas
or
pop
aaa
ljmp
inc
into
xchg
jb
push
lcall
lea
lea
jle
push
call
aad
mov
push
jbe
cld
xchg
mov
mov
sub
stos
sub
aad
inc
jo
pop
lahf
std
ds
es
rclb
mov
stc
pop
into
xor
ret
mov
inc
jns
jne
mov
cmc
dec
jmp
dec
adc
cwtl
dec
arpl
mov
mov
aaa
sub
dec
jo
out
cmp
jp
xchg
cmp
xchg
mov
iret
addr16
in
cmpsl
pop
xor
or
sahf
dec
add
pusha
lea
jae
bt
clc
xor
jmp
xchg
sbb
jo
jbe
subb
add
pop
pushf
repz
push
or
mov
sub
addr16
xor
adc
hlt
pop
pop
fisttpll
pop
xor
ret
cmp
sbb
adc
cmp
jmp
push
sar
gs
mov
addr16
fidivrl
lcall
mov
sti
cmpb
push
mov
mov
push
mov
add
stc
test
out
out
and
jbe
sti
ret
out
inc
sbb
adc
mov
xor
jae
stos
jns
gs
pop
loop
in
xchg
mov
clc
ds
in
xlat
test
out
mov
add
sbb
or
add
add
add
add
popa
sbb
add
add
jo
sbb
add
add
in
add
add
add
sbb
add
add
add
nopl
add
add
inc
sbb
add
add
or
add
xchg
add
add
addb
add
add
add
add
add
sbb
adcb
mov
sbb
add
sbb
mov
sbb
add
add
aad
jo
push
jbe
push
int
lahf
push
pusha
sti
loop
loopne
sub
mov
push
or
xor
out
jae
pop
inc
loop
scas
jae
jle
or
test
sbb
pop
adc
jo
subl
movsl
pop
and
mov
inc
hlt
insb
adc
insl
adc
mov
sbb
insl
lock
cmc
mov
inc
fistl
leave
scas
and
push
fbstp
mov
cmp
jb
jbe
mov
jne
mov
mov
mov
insl
fbstp
dec
aas
dec
push
test
xor
cmp
xor
and
pop
inc
dec
mov
test
xchg
jmp
incb
pop
aam
sarb
xor
in
push
imul
pop
or
lret
pushf
pop
stc
or
outsl
nop
xchg
adc
sub
inc
sub
cli
xchg
repnz
lret
popf
dec
push
ror
mov
dec
fistpl
and
popf
inc
sti
sbb
notl
sahf
jb
jbe
cmp
jbe
call
outsl
ret
mov
pop
mov
xor
mov
sbb
mov
inc
inc
xchg
cmpb
clc
lret
ljmp
dec
in
incl
mov
dec
ja
leavew
dec
pop
mov
mov
add
pop
movl
xchg
arpl
xchg
cmp
out
mov
lahf
add
rorl
and
incl
ret
fs
jmp
bsr
bts
push
btc
mov
push
cmpb
mov
pushf
call
test
pushf
jmp
movb
add
jmp
mov
outsl
jae
jbe
rcrb
push
sbb
pop
frstor
and
aas
rclb
lret
xchg
fbld
jl
loope
repz
sahf
push
jno
pop
xor
sub
rorb
stos
and
add
cwtl
mov
hlt
cmp
out
gs
xchg
jbe
rclb
sub
and
ja
add
xchg
inc
cltd
push
test
ljmp
push
inc
mov
fmull
or
inc
xlat
scas
and
xlat
xor
or
test
sti
or
lea
stc
push
lahf
cmp
scas
outsb
rep
adc
imul
aam
int3
rcr
bound
cmp
and
in
jne
xchg
in
inc
rep
mov
cmp
jl
dec
add
ljmp
inc
fucomi
push
sub
ss
nop
cmp
pop
or
mov
jle
push
pop
popa
mov
mov
sbb
jae
add
sub
mov
cmp
stc
push
cmp
pusha
lea
ja
call
push
pushf
pushl
movl
jmp
and
es
jmp
add
je
insl
aam
das
sub
jns
scas
pop
sti
cld
mov
imull
jmp
pop
stc
gs
lods
addr16
cmp
mov
stos
pushf
inc
rclb
inc
lods
adc
lock
aam
repnz
lret
orb
jg
inc
repz
popa
bound
cmp
incl
mov
push
shrb
ror
call
adc
fwait
pop
jne
jbe
loopne
es
mov
pop
shll
jle
shrl
or
sarb
adc
push
jmp
bound
xchg
sbb
shlb
adc
inc
cld
push
jmp
sub
jle
pushf
jecxz
outsl
in
movsb
push
ljmp
std
fdivl
pop
adc
inc
or
push
dec
push
fdivs
adc
fs
je
bt
add
clc
pusha
cmc
clc
cmp
pushf
lea
jb
pusha
cmp
pusha
jmp
mov
jmp
cmp
mov
mov
xchg
sbb
imul
sub
into
push
dec
mov
out
int
push
push
fs
cmp
js
jle
into
arpl
cltd
or
lret
mov
in
mov
mov
xor
add
cmp
or
and
dec
repnz
adc
push
push
subl
out
scas
popa
mov
sub
lahf
scas
iret
test
or
xchg
push
jbe
jbe
test
shrb
mov
or
lcall
sub
adc
jb
lock
add
sub
mov
adc
sub
lods
ja
and
testl
mov
movsb
xchg
and
lret
scas
adc
in
into
push
adc
dec
cmpsl
mov
test
and
lea
sub
mov
xchg
sbb
push
inc
std
xorb
jg
pop
cld
inc
out
bound
rcrb
cmpsb
dec
loopne
push
jp
stos
mov
mov
clc
ja
jbe
mov
les
testb
and
mov
cmpsl
and
or
hlt
lods
insl
iret
or
roll
mov
pop
or
fwait
mov
xor
or
xchg
rcrb
sbbl
shll
and
int3
hlt
frstor
and
rorl
test
jmp
loop
adc
mov
push
add
inc
out
cwtl
cmp
xor
inc
test
addr16
inc
sub
mov
daa
hlt
insl
in
sub
mov
mov
cmp
js
jbe
lods
jg
xchg
push
ret
scas
or
mov
stos
enter
sbb
mov
rorb
out
sub
dec
jnp
lock
or
mov
add
xor
inc
rolb
inc
adc
insl
jnp
or
mov
cltd
mov
imul
aaa
outsl
push
mov
push
adc
fisubrl
adc
sbb
mov
je
fisubl
lock
and
shll
add
sub
in
xor
sbb
push
test
lret
xor
lret
in
ljmp
add
jbe
and
jne
mov
jb
mov
movsl
inc
shll
ss
popf
sahf
hlt
fadd
fimuls
loopne
les
xchg
repnz
jns
add
xchg
test
je
subl
ss
cmpsb
add
or
and
pop
test
mov
ret
in
inc
sbb
mov
adc
popa
incl
in
and
sahf
pop
sarb
outsl
lock
rclw
movsb
cmpsl
push
cmp
xor
pop
pop
xlat
jns
jbe
test
mov
mov
in
ds
fmul
xchg
jp
loope
sub
lock
and
cmc
hlt
dec
or
fdivl
cltd
jb
aam
icebp
out
xor
ret
andb
push
sub
sub
cmpsl
pop
jp
cltd
outsl
sub
loopne
mov
into
movsb
bound
sub
sub
push
and
rclb
fstl
lret
add
lods
adc
sti
cld
pop
pop
call
or
sub
int3
movsl
pop
inc
scas
pop
add
jbe
stos
or
dec
jmp
aas
cmp
iret
inc
fistpl
pop
sarl
pop
inc
fucom
call
clc
loop
sub
aas
stc
adc
mov
icebp
arpl
pushf
xchg
sarb
daa
pusha
mov
adc
push
dec
dec
mov
dec
aam
mov
mov
jae
loop
lcall
repz
jg
loope
inc
call
xchg
loopne
mov
jecxz
cld
fdivrl
jbe
mov
ja
cmpl
push
movsb
iret
int3
scas
cmp
hlt
shl
push
scas
cmp
xchg
jns
push
imul
push
fldl
pop
ficomps
jle
sti
arpl
add
mov
sub
mov
imul
adc
or
pop
mov
stos
out
mov
xor
pusha
lods
arpl
ret
sub
pop
mov
mov
pop
add
iret
sbbb
xchg
pop
sbb
bound
arpl
xor
inc
fwait
push
adc
inc
fstpt
cmp
iret
xchg
and
push
push
pushf
movl
pusha
jmp
pushf
pushl
mov
push
movb
push
pusha
pushl
ret
jmp
lea
mov
movl
movw
jmp
pushf
lea
jne
mov
call
arpl
jl
jbe
mov
sub
push
or
jae
pushw
nop
sub
movsl
repnz
in
cwtl
ret
pop
sub
dec
jmp
pushf
hlt
or
xor
sub
jns
push
or
outsl
cmp
cmp
inc
or
dec
jp
not
mov
lcall
jmp
sub
fiadds
xchg
ljmp
jne
mov
xchg
sbb
mov
call
mov
movsb
adc
dec
mov
inc
pop
subl
int
lods
or
mov
ret
dec
hlt
mov
rol
sar
mov
jmp
or
out
push
jbe
mov
outsb
icebp
test
xchg
push
sub
sbb
inc
loope
scas
xor
movsb
mov
sahf
fisttps
push
std
test
sbb
out
push
mov
cmpsl
mov
ss
sub
jg
dec
cmp
and
push
sti
sub
cs
pop
add
aas
add
out
inc
loope
cwtl
or
dec
push
js
sub
jmp
or
roll
jge
jae
das
into
push
and
xchg
inc
loopne
push
pop
xor
fdiv
lds
ja
fcompl
leave
lea
call
popf
push
adc
js
out
inc
pop
ss
int3
sahf
and
dec
xchg
addr16
adc
in
and
test
cli
insl
in
pop
sti
mov
rorl
ljmp
cmp
and
leave
adcb
out
shl
popa
inc
inc
mov
outsl
cmp
sbb
cmp
ds
pop
add
pop
pop
xor
bound
sbb
push
test
inc
lds
rolb
cmp
push
mov
pop
shlb
push
jbe
enter
test
push
mov
dec
inc
idivb
cs
xor
adc
sub
call
std
lcall
push
adc
gs
aas
dec
mov
cmp
shufps
cwtl
cmc
xor
enter
inc
lret
push
fstps
pop
or
in
ljmp
fs
in
scas
or
jno
clc
mov
add
nop
arpl
sbb
loope
in
scas
push
test
scas
push
xchg
jmp
jno
adc
mov
fnstsw
dec
enter
rorl
scas
hlt
scas
mov
jno
jne
xchg
push
mov
xchg
dec
dec
and
adc
ret
in
or
push
repz
inc
jmp
mov
test
jb
fdivrs
mov
cld
mov
and
not
push
shlb
pop
fadd
sbbb
popa
push
xlat
xchg
ja
jp
movsb
push
mov
cltd
push
xchg
cmp
push
fldt
clc
enter
cmp
jg
jbe
lret
mov
push
adc
int
outsl
ss
lock
pop
sbb
sahf
push
bound
out
cmp
adc
fadds
in
sbb
clc
xchg
push
std
mov
out
divb
andb
cmp
cli
fstpl
sub
jp
flds
push
xor
shrl
and
ret
fsubr
push
jnp
lea
mov
push
jbe
rcrb
imul
shrl
mov
mov
outsb
std
cmp
daa
xchg
pop
je
cs
mulb
add
jne
fists
jecxz
int3
lods
jg
jbe
cmc
nop
push
or
sti
and
inc
js
push
dec
adc
xchg
dec
pop
pop
mov
cld
cmpsl
inc
jmp
in
sub
xor
repnz
sbbb
xchg
and
lods
add
ficompl
and
mov
sbb
stc
push
dec
stos
xor
jl
add
mov
pop
mov
and
mov
mov
lahf
pop
loope
dec
scas
or
pop
mov
iret
sahf
sti
and
lea
test
loope
movsl
mov
dec
push
xchg
pop
mov
mov
fstps
pop
repz
xchg
add
mov
xchg
push
cmpsb
sbb
cmp
cmp
loope
xchg
popa
ds
mov
les
aad
push
and
push
pop
aad
dec
adc
cvttps2pi
mov
sar
mov
jmp
pop
adc
adcb
aaa
push
lods
inc
mov
sub
jecxz
lods
lret
lret
pop
rolb
mov
and
ret
add
ss
sbb
sahf
adc
sti
jg
add
add
or
jl
maskmovq
negl
pop
mov
inc
pop
clc
packuswb
cmp
movd
add
sbb
and
test
cmp
jne
shll
in
scas
fiaddl
rclb
das
test
sahf
scas
out
dec
js
pushf
std
ffree
ret
push
jbe
add
mov
sbb
into
pop
push
cs
mov
aad
inc
or
and
outsb
inc
in
xchg
pushfw
das
mov
fsub
xor
and
mov
loopne
nop
lcall
sbb
xchg
es
aas
lock
inc
fsub
jbe
xor
inc
and
lock
decb
popa
jle
ret
test
call
movsb
pop
pop
fldt
sbbb
out
or
pusha
cwtl
cmp
mov
mov
and
dec
add
sbbl
stos
popa
jle
call
dec
sbb
cmpl
arpl
insl
mov
inc
pop
ss
mov
mov
lea
dec
push
test
mov
push
mov
mov
and
imul
fadds
loopne
or
inc
ds
iret
repz
sub
nop
addr16
inc
loope
aaa
shlb
fbld
clc
ds
add
mov
bound
in
dec
lret
push
jne
les
jo
lahf
lcall
pop
add
cmpsl
test
xor
cld
cmc
add
mov
cld
stos
idivb
aam
sub
xor
outsb
inc
sbb
inc
ljmp
and
cmp
add
pop
sbb
adcb
jl
mov
sub
dec
mov
cs
enter
cmp
loopne
insb
pop
sbb
enter
adc
mov
lds
sbb
and
das
ret
sbb
movsl
call
mov
mov
jno
dec
pop
mov
js
les
jle
mov
aaa
xchg
jmp
lret
and
jae
mov
jo
dec
popa
xlat
jmp
popa
or
mov
fs
jnp
mov
xor
mov
out
jae
test
or
call
mov
call
in
lahf
adcb
pop
rclb
stos
xor
and
inc
add
movl
outsl
scas
dec
add
mov
imul
adc
push
rolb
sub
in
gs
push
js
hlt
cli
pop
xchg
out
fistps
aaa
scas
sub
loope
xchg
std
cmp
mov
pusha
add
inc
mov
shrb
inc
sub
jno
mov
pusha
push
inc
call
pop
jo
test
adc
jns
mov
lds
mov
mov
or
daa
jle
es
fucom
fldt
sub
pusha
mov
int
movsb
xchg
jb
dec
xchg
pop
testb
jle
xchg
lea
xor
push
sub
push
cli
mov
cmp
push
lods
aam
and
ret
jl
test
adc
inc
pop
sarb
subb
dec
mov
mov
push
push
add
fistpl
push
and
dec
cli
fnstenv
decb
addr16
inc
jmp
into
push
add
lahf
lods
push
ficoms
jo
xchg
sub
dec
and
lock
sbbl
and
pop
or
shrl
ljmp
lea
pop
or
stc
test
shlb
add
mov
fs
push
cmp
imul
sub
mov
pop
imul
add
call
outsb
push
es
inc
scas
dec
imul
mov
pop
stc
xchg
pop
adc
sbb
mov
sbb
lea
mov
shr
icebp
dec
jae
test
pop
iret
inc
sbb
in
xchg
mov
or
sbb
xchg
mov
jge
stos
fstps
fisttps
test
test
dec
out
je
mov
ja
push
or
jbe
push
or
dec
ret
cwtl
cmp
daa
fcoms
mov
sub
or
sub
and
add
jmp
xor
xchg
out
fsts
scas
sub
shlb
xchg
xchg
enter
mov
adc
pop
push
dec
pop
add
fwait
aam
push
sub
leave
loopne
and
stc
dec
jp
jne
jbe
xor
dec
fs
int
mov
or
inc
mov
loope
mov
sub
pop
mov
lahf
cmp
fdivrl
and
mov
sbbb
loop
sub
nop
inc
inc
lods
jo
test
bound
out
test
jp
mov
nop
inc
jno
insl
cmp
adc
pop
adc
jo
pop
ljmp
jl
je
fnstenv
arpl
add
or
nop
jp
sub
inc
fwait
lods
pop
cmc
xchg
adc
mov
mov
inc
inc
mov
mov
dec
xor
aas
fsts
ds
or
adc
adc
mov
orl
mov
pop
rclb
jno
ljmp
fsts
lods
pop
stos
xchg
adc
mov
xchg
jg
sbb
pusha
setbe
pushf
adcl
mov
push
adc
or
add
mov
push
leave
inc
ret
bound
les
arpl
inc
repz
shrb
mov
fmuls
inc
mov
jl
aaa
cmpsb
orb
andl
lahf
scas
aam
movl
xchg
aad
mov
mov
dec
call
xchg
or
dec
sbb
lcall
ja
mov
sub
enter
dec
stos
jbe
pop
or
adc
div
mov
addr16
sbb
insb
sub
sub
sub
xchg
into
jge
out
pop
cmc
mov
rorl
out
push
lea
mov
sub
mov
repz
ja
stos
sub
mov
aam
mov
cmp
shll
pop
or
jg
pop
mov
xchg
adc
push
xor
bnd
cltd
cs
js
ret
popa
add
xchg
and
stos
test
movl
pop
shll
jns
aam
mov
add
mov
test
xor
sbb
mov
sub
aas
fisubs
cwtl
sub
mov
daa
xchg
and
and
sti
mov
inc
jmp
rclb
jo
out
inc
or
bound
ds
mov
bound
and
loope
outsb
gs
int3
dec
mov
dec
out
imul
dec
not
cwtl
mov
add
shrl
mov
cmp
xchg
mov
lea
not
mov
pusha
pushl
pusha
mov
lea
call
pushf
call
je
jns
xchg
or
leave
inc
xsha256
cmpsb
xchg
adc
jno
mov
out
mov
push
jns
inc
pop
and
lahf
sbb
push
jne
push
loop
xchg
jns
ds
xchg
sbb
dec
das
pop
adc
lock
xor
jl
xchg
dec
arpl
imul
sub
fistps
loopne
dec
mov
out
fs
inc
imul
cmc
ss
outsl
dec
leave
mov
enter
xor
mov
pop
je
cmpsb
jb
adc
mov
mov
fnstcw
jle
mov
repnz
fdivs
sbb
and
clc
jae
pop
mov
jb
lea
shll
cmp
xor
add
xchg
testl
cmp
daa
cmp
add
lahf
and
mov
inc
sbb
mov
fwait
sbb
pop
pop
insl
pop
imul
cld
inc
out
mov
idivl
sti
jle
clc
adc
add
pop
sub
xchg
fildll
mov
mov
xchg
jno
mov
mov
xor
xchg
hlt
cmpsl
and
bnd
xor
jge
vcvttpd2dqx
mov
lods
fcomps
lcall
dec
sbb
adc
and
sbb
and
stos
cmp
fsubl
ret
cmp
inc
add
test
fdivrs
aam
and
or
inc
pop
mov
xchg
push
ficoml
movsb
adc
dec
rolb
push
cmpsl
pop
or
mov
jmp
das
rcll
sbb
inc
or
neg
xchg
jmp
inc
jecxz
pop
or
mov
mov
fisubrl
push
fsts
mov
jae
adcl
inc
mov
mov
cmc
jp
or
inc
sahf
out
xor
adc
xchg
ret
lock
xor
mov
adc
insl
push
mov
or
lret
push
sbb
cltd
ljmp
das
lret
mov
mov
cmp
lods
lret
jge
fistpll
stc
push
nop
lahf
scas
lret
movsl
ret
push
jbe
sbb
add
pop
jmp
jl
adc
dec
int3
mov
loop
push
prefetch
scas
push
addb
add
fsub
fsubl
xchg
mov
adcb
test
xchg
adcl
pop
out
adc
jb
inc
sbb
cs
add
jbe
movsl
fs
ds
loope
mov
lock
push
push
pop
aas
sbb
fwait
cmp
sahf
repz
pop
shrb
and
mov
testb
cmp
add
int
lret
div
pop
cmp
xchg
inc
insb
pop
ficomps
cmp
cmpl
dec
scas
lcall
adc
pop
lret
lds
mov
sbb
icebp
arpl
push
or
lods
icebp
cltd
adc
in
pushf
js
dec
fisttps
add
inc
mov
mov
outsl
dec
mov
into
aad
test
mov
test
xor
jne
ret
sbb
data16
push
int
and
jge
or
push
jbe
pop
in
xchg
repnz
pushf
divb
dec
mov
rcrl
imul
int
mov
mov
push
lds
push
xor
inc
dec
mov
stc
and
and
jne
call
add
add
inc
mov
rorl
subl
test
dec
xchg
lock
int3
sarl
lock
dec
mov
lock
lret
xchg
loop
pop
shll
cmp
mov
add
orl
sub
bt
jmp
mov
adc
push
es
dec
xchg
lock
or
push
shr
repnz
es
ljmp
sbb
inc
xchg
jnp
in
movsl
push
jne
xor
xchg
rcll
outsb
push
rclb
fdivl
push
popf
sti
insl
lret
lods
lods
xchg
out
enter
cli
repz
pushf
int
ret
lods
js
fs
jle
shlb
jl
jns
fstps
ljmp
jmp
mov
mov
jle
les
popf
sbb
mov
mov
mov
popf
jo
cld
daa
push
pop
lahf
nop
adc
jno
push
adc
sub
adc
ss
mov
push
add
adc
stc
cmpsl
adc
test
push
mov
jne
xor
jo
push
jae
mov
das
cwtl
pop
mov
jbe
jge
stos
and
xor
pushf
pushf
cmc
pushf
repnz
mov
lea
jne
sbb
test
mov
movsbw
neg
sub
xor
mov
push
lea
test
stc
stc
sub
pusha
clc
pushl
popl
bt
cmp
pusha
jmp
stc
pushf
stc
add
stc
stc
push
mov
sub
jp
test
pushf
pushl
lea
je
stc
jmp
sbb
fmuls
add
aam
adc
loop
shr
push
loop
jmp
out
xchg
cmp
sarl
jns
repz
in
out
into
rolb
pushf
or
fmull
dec
pop
or
iret
push
ret
sub
nop
inc
pop
or
into
test
outsb
add
xchg
repnz
aam
sub
push
shlb
xchg
push
pop
lock
popf
xor
jl
pop
sub
sub
es
adc
mov
loope
sub
icebp
xchg
call
movb
pushf
push
movl
call
mov
jbe
movsb
pop
out
jne
notl
test
cmpsb
inc
shrb
lret
pop
adc
mov
cmpsb
sub
sahf
loop
and
mov
insb
xchg
push
scas
sub
mov
sub
subb
mov
cs
test
or
mov
adc
repz
xchg
push
fsubr
inc
dec
sub
insb
cwtl
add
push
adc
lods
inc
outsb
xor
push
or
fiadds
lods
pop
or
loop
dec
out
and
cs
dec
inc
bound
addr16
sub
push
jbe
mov
mov
pop
dec
mov
sarb
inc
das
mov
test
pop
fucom
or
aaa
mov
lds
adcl
mov
loopne
mov
add
out
stos
pop
mov
enter
sti
fmuls
stos
shrb
dec
imul
xlat
mov
nop
cmc
xchg
inc
or
fstpt
int
push
into
push
rorb
call
lea
ja
pusha
clc
mov
movb
imul
cmc
clc
jmp
int3
jmp
mov
in
inc
fimuls
in
mov
or
fists
or
mov
sahf
xchg
icebp
sbb
js
sbb
push
js
pop
and
les
inc
ds
leave
add
outsl
add
jecxz
repz
cmpsb
jge
xchg
mov
push
cld
scas
insb
andb
addb
aam
pop
add
mov
sbb
dec
jmp
sub
jmp
jge
cmc
nop
push
jbe
ret
es
pop
sahf
push
cmp
inc
adc
daa
xor
fdivs
push
iret
cmpb
clc
mov
cmp
and
jnp
int3
bound
stos
lret
movsb
jae
push
mov
int3
aaa
push
stc
in
push
ljmp
test
dec
adc
xchg
divb
mov
push
lds
out
fmuls
push
fnstsw
and
mov
test
sbb
inc
sbb
mov
push
pop
mov
out
fnstenv
and
mov
nop
push
jbe
insb
sti
bound
movsb
jnp
int
out
cmp
mov
int3
cs
xchg
daa
in
mov
xor
cmp
and
sbb
int3
mov
cmp
iret
bound
popa
jbe
push
fnsave
mov
aaa
adc
cmp
mov
xor
push
loopne
and
cmpl
pusha
jge
xchg
push
jbe
stc
test
repnz
pusha
fstpt
mov
xlat
mov
mov
cmp
dec
jp
push
xchg
jmp
sbb
jl
jo
cli
push
pop
push
out
adc
jle
mov
mov
in
xor
jb
add
popa
jmp
cltd
das
inc
lcall
cmpsl
nop
rcrl
cwtl
das
shr
das
inc
repz
mov
mov
iret
lods
dec
mov
cli
sbb
adc
popa
adc
xchg
push
jbe
and
fiaddl
dec
shll
pusha
mov
out
mov
xchg
cmpsb
arpl
sbb
or
and
xor
push
inc
jbe
jns
dec
sbb
push
scas
loop
push
lcall
sub
jnp
mov
shrl
arpl
inc
icebp
dec
or
out
call
les
insb
lods
mov
xchg
pop
mov
cmp
add
nop
or
inc
and
add
mov
popf
aam
imul
jnp
xchg
push
jbe
mov
mov
out
xchg
cmp
ds
cmp
cmp
inc
out
push
mov
loope
int
dec
inc
divl
jl
ret
mov
push
jmp
mov
cld
mov
cmp
ficoml
pop
call
int3
lret
lret
lds
add
xor
sbb
sahf
and
cmp
mov
xchg
push
sbb
push
insl
mov
subb
dec
or
add
jno,pn
ja
or
mov
mov
test
loopne
fbld
popa
rorl
or
mov
and
mov
xor
mov
xor
repnz
jl
repnz
push
adc
imul
fmull
lret
xor
fbld
jmp
cmp
punpcklbw
loopnew
dec
imul
sub
jmp
hlt
pushf
lea
jmp
nop
lods
imul
cmp
lea
jg
leave
dec
adc
mov
ret
stc
enter
mov
ficoml
mov
iret
dec
cltd
jge
imul
stos
mov
push
or
or
xchg
loope
sub
faddp
lret
push
movsb
push
dec
pusha
movl
adc
xchg
xlat
push
xor
push
stc
inc
cmpsb
je
xchg
lcall
rcrb
push
pop
in
cwtl
nop
clc
pop
lods
stos
xchg
mov
jns
pop
jl
push
adc
push
sti
jo
das
or
adc
loope
setl
movb
lods
pushf
pushf
pushf
bt
rol
mov
movl
dec
call
push
hlt
aam
push
jbe
xor
sub
sti
add
mov
insl
addr16
loop
mov
scas
outsb
loope
push
aam
insb
rclb
xchg
pop
je
and
cmp
push
dec
stos
movsb
jnp
pop
pop
xor
popl
xchg
jb
xchg
sub
fiadds
outsl
push
icebp
mov
aam
push
test
stc
pop
dec
mov
fs
and
enter
bound
mov
sti
dec
adc
sti
push
adc
fiaddl
push
jbe
ja
lock
mov
xchg
in
lahf
cmp
cmp
mov
shrl
xchg
sti
mov
call
mov
cmpsl
push
pop
jle
adc
add
insb
pop
jge
and
pop
mov
or
subl
fwait
adc
gs
pop
xchg
inc
xlat
cmp
xchg
mov
dec
inc
inc
mov
rorl
xor
insb
inc
out
ror
out
pushf
xor
push
movsb
sub
mov
in
std
icebp
push
sub
mov
icebp
ret
in
push
and
push
jg
lds
iret
cmp
pusha
pushf
jmp
lods
leave
xchg
mov
loop
fs
jb
aam
mov
push
mov
jecxz
push
ret
sub
aas
xchg
loope
jnp
out
jne
in
jb
dec
mov
sub
call
imul
sbb
jmp
dec
clc
mov
push
mov
add
cmc
cli
movsl
mov
sub
out
dec
dec
out
sbb
cld
popf
push
jo
subb
inc
shr
or
sbb
lcall
jbe
sbb
mov
jmp
mov
out
dec
inc
mov
sub
into
pop
fnstsw
mov
fadd
xor
hlt
xlat
ret
sbb
mov
xlat
out
sbb
insl
cmp
stos
sbbb
leave
cmp
mov
shlb
arpl
shrb
or
adc
fiadds
jp
add
dec
adc
rorl
xchg
xor
push
mov
jbe
pop
push
mov
sarl
lea
es
dec
movsb
or
add
and
add
add
push
stos
or
aad
lods
dec
test
jmp
ds
mov
fisubrs
pop
mov
push
inc
xchg
hlt
pop
cmp
cmp
loopne
add
outsl
jb
repnz
pop
sti
cmpl
js
mov
mov
in
repz
dec
add
xchg
push
inc
pop
sbb
sub
mov
jno
outsl
push
loope
mov
dec
ficoms
sub
and
mov
mov
es
sbb
mov
xor
xchg
je
decb
fistps
leave
sbb
sti
mov
out
mov
nop
pop
add
mov
lods
popa
bnd
rcll
push
adc
add
push
ja
flds
push
jbe
dec
rcrb
jnp
int
adc
pushf
add
dec
leave
fldcw
push
popf
fistps
or
jne
jp
lea
test
dec
mov
out
cwtl
inc
fwait
mov
xor
aad
andb
mov
mov
std
xchg
clc
outsl
mov
cmpsl
or
jmp
fwait
push
sub
push
movb
jge
jmp
push
in
jbe
pop
inc
inc
cwtl
push
jbe
push
out
or
xchg
aam
stos
xor
adc
fcom
mov
test
out
xorl
jae
test
sbb
out
rcr
adc
orb
adc
aam
pop
jns
push
or
xchg
dec
fwait
popa
dec
push
pop
enter
inc
icebp
xchg
mov
insl
mov
push
and
cmc
push
mov
cmp
pushl
lea
ja
clc
jmp
add
ja
jae
jb
outsb
je
inc
add
and
sub
push
add
add
push
nop
pushf
movl
pushf
pusha
pushf
lea
jmp
sti
clc
mov
push
jbe
addb
cmc
jae
inc
and
adc
jl
insl
movsb
testl
push
mov
jmp
in
cmpsl
mov
arpl
sub
adc
or
xchg
das
out
jmp
inc
outsb
and
repnz
jg
in
push
call
enter
test
sbbb
mov
jns
cmp
xchg
push
mov
jo
dec
add
mov
out
rcll
and
xor
daa
stos
cltd
imul
mov
inc
out
shlb
jnp
mov
imul
mov
sub
mov
out
mov
cltd
flds
dec
and
jg
push
jbe
sub
imul
cmp
xchg
sub
loope
cmp
mov
rcr
lods
incl
sahf
sbb
test
fcoms
cmp
insb
icebp
pop
bound
pop
sbb
lods
inc
dec
pop
aam
lods
push
arpl
cmp
pop
mov
das
ss
rorl
add
scas
jne
sub
jl
ljmp
jbe
inc
sarb
repnz
lea
xor
adc
fiaddl
movsb
mov
mov
test
mov
adc
cltd
sub
pop
pushf
dec
sbb
test
ret
xor
scas
sub
cld
imul
icebp
out
sub
pop
adc
sbb
add
xlat
pop
xchg
xor
subl
out
out
xorb
jmpw
inc
aad
sti
mov
fldcw
pop
ja
insl
add
push
ja
icebp
mov
leave
scas
call
mov
jbe
xor
mov
cmc
and
pop
shr
mov
outsl
les
cmp
insl
shrb
cmp
shll
pop
mov
fisubrl
sub
jmp
js
aas
and
inc
in
xchg
cmp
fiadds
fs
fldcw
stc
sub
xor
jo
jmp
push
dec
adc
fdivs
mov
cmp
das
iret
lods
jo
cli
dec
or
inc
test
test
call
jp
sbb
bt
test
mov
pusha
lea
je
cmp
push
stc
pushf
sub
sub
js
cmp
pushf
call
sahf
fwait
pop
fwait
push
jbe
call
adc
loope
add
mov
jle
cmc
js
icebp
mov
test
jmp
jno
mov
adc
scas
dec
adc
stos
dec
cwtl
cld
jb
xchg
sbbb
arpl
fistpll
inc
test
mov
jl
lock
or
or
xchg
xor
inc
loopne
push
enter
in
ljmp
bound
lahf
fs
or
lcall
flds
mov
lea
cmpsb
cmpl
jbe
add
mov
stos
pop
fmuls
cmpsb
sti
rclb
dec
jecxz
dec
hlt
sbb
xor
lock
scas
lret
xor
push
cmp
fidivrs
jo
out
clc
psadbw
mov
pop
fdivs
fs
ret
mov
mov
sub
jo
fidivl
subb
sbb
sbb
sub
inc
push
sbb
jg
mov
or
jno
pop
and
xchg
arpl
mov
shll
icebp
xchg
push
imul
pusha
cmp
stc
clc
add
pushf
lea
jmp
call
stos
movl
lea
jmp
cld
hlt
mov
push
jbe
std
nop
inc
sbb
hlt
aaa
cmpsb
insl
or
xor
cmpsb
shl
scas
bswap
adc
xor
mov
dec
jmp
mov
add
out
outsl
push
sub
xor
sahf
pop
rorb
cmp
sbb
mov
cmp
sahf
adc
call
loope
and
mov
je
rclb
jge
inc
xor
xchg
inc
xchg
insb
jmp
xor
fdivl
or
pop
popf
push
jbe
leave
mov
lcall
fisttpl
test
sti
jp
loopne
nop
mov
xchg
dec
mov
rolb
sub
mov
pop
lahf
cmp
mov
xorps
mov
movsl
fwait
pop
rclb
push
xor
cmp
cmp
sub
daa
call
xor
mov
pop
inc
lods
inc
pop
movsb
lea
mov
mov
and
shrb
fcmovu
sub
cmpsb
popf
push
jbe
cmp
stos
insl
or
pop
fstpl
andb
pop
push
or
hlt
fists
xorl
daa
mov
jb
mov
subb
in
sub
int
mov
xor
rcrl
rcr
enter
mov
mov
mov
arpl
mov
push
cmp
xchg
sbb
xchg
sub
cmp
test
ret
push
push
xlat
orb
adc
es
push
sbb
stc
imul
pushf
add
pushf
pushl
movl
pushf
lea
jmp
pushf
pushl
lea
je
movsbl
jmp
ret
loopne
sahf
push
jbe
inc
decl
mov
mov
pop
inc
in
mov
or
dec
mov
imul
inc
sbbb
jecxz
test
es
ret
in
mov
add
inc
lret
xchg
in
and
test
inc
fadds
aam
mov
sbb
push
popf
fs
sub
jmp
jns
and
in
inc
cs
xchg
pop
cld
scas
jae
fadds
lock
xlat
int
movsl
pop
aaa
mov
or
jle
mov
dec
cwtl
push
cmpsl
outsb
jg
mov
xchg
cli
xorl
fldcw
dec
mov
add
insl
pop
mov
idivb
cmp
mov
or
cmp
mov
pop
push
fildll
xchg
dec
jge
and
call
dec
sub
sub
push
subl
and
cs
jbe
xchg
push
bound
fucom
push
cli
lds
sub
jge
push
clc
es
faddl
nop
fdivl
push
dec
es
daa
or
insb
push
mov
mov
pop
cmc
push
pop
popa
in
push
inc
jge
xor
jne
mov
pop
int
cmpsl
sub
push
mov
call
mov
sbb
mov
xor
loop
hlt
iret
jp
rcrl
test
xor
cmp
inc
ja
andb
cmp
loope
insb
out
xchg
mov
adc
dec
sbb
cmpb
movsb
jbe
mov
sbb
test
mov
mov
imul
mov
sti
pop
mov
sbb
dec
insb
push
sub
cmp
ss
das
andb
ficomps
sub
sbb
cmp
sub
stc
inc
push
daa
or
sbb
sub
test
fcompl
das
loop
push
loop
jbe
push
push
jae
icebp
xchg
mov
inc
into
mov
fists
add
add
in
stc
cmc
add
push
mov
pusha
pusha
lea
jmp
and
frstor
dec
leave
xchg
pop
mov
add
stos
outsl
pop
adc
dec
fcoms
aas
sub
stos
xor
mov
jle
and
xchg
sarb
push
xchg
sti
and
movsl
ds
clc
addr16
ds
xor
lret
sub
xchg
inc
or
fidivl
imul
mov
mov
mov
xchg
sbb
jmp
not
inc
call
mov
dec
mov
pop
out
and
or
xlat
mov
jg
fisubrl
scas
arpl
mov
lcall
aaa
inc
and
lock
or
adc
outsb
xor
shl
push
insb
pop
jbe
push
das
fisubrs
les
cmc
dec
movsb
push
push
shll
daa
add
mov
lcall
jbe
xchg
and
sbb
adc
fs
inc
sbbb
cmp
scas
push
pop
cld
xchg
sub
adc
push
add
outsl
hlt
jno
mov
xchg
jle
cmpsb
push
add
out
inc
pop
les
scas
repnz
lds
enter
push
fwait
or
sbb
add
mov
jp
adc
xor
push
xor
push
enter
cmc
repnz
xchg
xor
dec
push
in
mov
js
imul
xchg
loop
pop
loope
aas
mov
in
sti
push
jb
push
sahf
push
scas
jp
aam
cmpsb
add
mov
loope
repz
cmp
out
xchg
hlt
iret
jle
movsb
sbbb
cmp
in
fwait
dec
test
and
xor
orb
push
xchg
stc
cmp
add
mov
sbb
daa
jg
daa
adc
mov
jo
xor
mov
mov
cld
mov
aaa
clc
sbb
push
push
jae
xchg
dec
pop
cli
pusha
cmp
movw
stc
cmp
call
cmp
hlt
mov
add
in
lahf
cs
mov
mov
pop
enter
sbbb
mov
or
shrl
out
pop
pop
inc
fsubrp
icebp
gs
xor
fwait
pop
or
fsubs
mov
pop
lds
or
lea
ja
stc
mov
sub
sar
shld
add
stc
mov
sub
or
stc
test
mov
cmp
jmp
test
jbe
push
xchg
call
xchg
outsl
dec
dec
add
xchg
dec
or
jecxz
pop
inc
sub
cmc
lods
jae
mov
mov
cmp
icebp
jno
sbb
mov
cmp
movsl
dec
mov
call
pop
jp
add
sbb
push
in
push
xor
int
push
jbe
push
mov
pop
mov
gs
das
pop
jnp
jns
xchg
ret
cs
cli
inc
cmc
ss
cmp
jbe
aam
push
mov
repnz
pop
cmpsl
mov
push
inc
fimuls
mov
push
pop
loop
adc
adcb
mov
inc
cli
movsl
bound
movsl
push
jbe
lret
mov
jmp
les
xor
lea
mov
mov
mov
vmread
scas
mov
xchg
adc
lcall
in
jne
xchg
in
mov
scas
sti
loopne
ret
int3
cld
sti
loop
aaa
mov
xor
popf
xchg
or
test
or
xor
out
fmuls
xor
mov
push
mov
sub
add
pop
insb
and
mov
mov
lahf
sub
sbb
enter
lret
dec
shrb
pop
outsl
test
insl
xor
das
or
fwait
out
sbb
cmp
xlat
inc
and
mov
jae
push
cmp
jmp
rcr
cwtl
fildll
test
inc
icebp
out
cltd
jl
cld
xchg
add
xlat
adc
lock
push
pop
adc
mov
cld
mov
repz
dec
shll
shlb
shlb
jne
mov
mov
mov
cmp
or
xor
xor
pushl
ret
adc
pusha
jmp
push
lea
jne
movsbl
lahf
das
sub
sbb
mov
test
jmp
ret
movsl
push
jbe
lret
push
int
xchg
push
sub
dec
push
cmp
mov
jl
mov
jge
jno
jecxz
add
mov
es
in
sbbl
cmp
xor
stos
pinsrw
icebp
in
lods
cmpsb
push
jbe
out
mov
and
sbb
sbb
addr16
rorl
cmc
int3
dec
out
int
or
jne
es
stos
mov
addr16
push
cmpl
out
pop
jb
sbbl
lods
inc
push
fwait
mov
add
mov
out
jl
or
cmpb
es
adc
inc
xchg
jmp
mov
mov
fstl
mov
scas
dec
in
cmpsl
jg
rcrb
fiaddl
lods
out
stos
mov
outsl
push
shrl
imul
mov
stc
shlb
ret
cmpsb
push
jbe
xor
push
add
rclb
stos
jne
cmp
into
sbb
mov
fucom
sti
lea
xor
pop
addl
daa
dec
sbb
jg
dec
fnstenv
in
sub
mov
cmp
dec
test
or
dec
cli
sbb
cmc
pop
push
push
cmpsb
add
enter
sbb
fistl
lds
push
pusha
mov
mov
loop
push
jbe
gs
jg
mov
scas
xor
fs
push
gs
rcll
sub
fsubl
add
mov
in
jp
cmp
insb
out
je
insl
bound
xchg
jl
vpunpckhdq
and
ret
jbe
mov
jbe
sbb
dec
es
or
int
inc
push
mov
and
add
sbb
out
sbb
xor
add
in
adc
dec
add
loopne
divb
mov
mov
dec
mov
aaa
push
inc
cmp
ret
lea
call
push
push
pushl
lea
jmp
sbb
nop
cmpsl
push
jbe
sbb
inc
in
dec
call
jno
mov
push
pop
mov
and
loope
pop
sub
dec
fidivs
jno
jmp
popa
mov
imul
enter
inc
jl
lea
aas
call
test
inc
testl
jle
cmc
out
mov
cltd
shr
jecxz
test
les
lods
mov
inc
mov
jle
fidivrs
dec
outsb
inc
fadds
lcall
aad
daa
insb
jns
frstor
repnz
add
jbe
mov
dec
in
fcoms
pop
loopne
out
mov
mov
inc
fwait
mov
mov
xchg
mov
or
dec
xchg
mov
sub
movsl
cltd
hlt
movsl
in
out
push
imul
sub
scas
pusha
ja
or
and
adc
cmp
je
popf
inc
mov
mov
inc
cld
mov
outsl
ret
inc
xor
int3
ja
jmp
iret
inc
sbb
pushf
aaa
js
mov
adc
inc
daa
nop
xor
mov
test
add
pushf
movl
pusha
movl
pusha
pushl
pushf
push
lea
jmp
call
pop
pop
pop
stos
push
jbe
fs
mov
cmpsb
rcll
pop
jns
scas
pop
sbb
mov
les
xchg
sbb
cmp
enter
jp
andb
repz
fimull
push
or
mov
push
jmp
mov
adc
jno
ret
push
cmc
xchg
sub
fcomip
fnstenv
fisubrl
ficomps
pop
inc
push
cmp
outsl
or
je
scas
gs
jle
lret
cli
cmp
add
inc
ljmp
jbe
push
es
stos
or
mov
jnp
xlat
js
outsb
andb
mov
cmp
jbe
repnz
push
out
jp
or
outsb
mov
insl
js
push
int
dec
idivl
adc
out
xor
and
scas
dec
dec
out
cmp
mov
dec
ss
add
lock
xor
and
jg
pop
repz
scas
cmp
mov
ja
and
fsubr
jmp
sbb
mov
push
repz
lahf
pop
adc
test
addr16
mov
jl
clc
mov
and
cld
stc
in
xchg
xor
and
cwtl
dec
mov
cmp
dec
xchg
xor
push
nop
out
pop
aaa
repnz
xchg
outsb
pop
push
mov
lret
pushf
cmp
das
push
sbb
jecxz
outsl
enter
aad
jl
add
in
jo
stos
push
jbe
push
test
nop
pop
add
mov
push
xchg
popa
sahf
mov
add
insl
dec
jns
sub
lret
add
mov
lods
sub
dec
divb
push
sub
dec
loop
lahf
scas
add
test
stos
rorl
mov
adc
mov
add
outsb
jne
insb
jecxz
and
hlt
xchg
mull
jl
movsl
inc
test
mov
in
sbb
sub
dec
inc
ss
cmc
stc
pushl
cmc
pushf
lea
jns
cmc
cmp
call
mov
stc
stos
push
jbe
push
xor
dec
int
sub
test
bound
mov
xor
stos
pop
or
jg
lds
imul
pop
mov
xchg
cli
xchg
data16
jbe
jge
and
or
pop
and
imull
rcr
iret
popf
xor
pop
and
into
scas
and
stos
push
adc
mov
cltd
mov
pop
jecxz
sbb
stos
push
jbe
xchg
or
jbe
enter
fsubrl
cltd
movsl
cmp
xchg
sub
push
xor
mov
clc
and
insb
xorl
mov
jnp
addb
lods
sub
in
push
lods
cmp
add
hlt
mov
stos
movsl
stc
add
jl
add
scas
ss
andb
fldenv
cwtl
dec
mov
in
add
jne
je
pushf
setb
pushl
jmp
je
dec
lods
push
jbe
out
adc
or
outsb
and
inc
in
xchg
jp
shlb
ret
sbb
sub
dec
add
cs
mov
leave
adc
rorb
enter
jmp
push
lods
pop
iret
orb
popf
repz
iret
or
pop
gs
mov
push
lret
inc
sahf
xor
mov
pusha
mov
cmc
add
dec
addr16
cmp
xchg
sub
dec
mov
xor
out
mov
mov
loopne
add
stos
lods
inc
shlb
std
pushf
or
daa
push
add
inc
push
not
call
xor
arpl
jle
push
das
ljmp
cltd
mov
push
sbbl
sub
sbb
jo
cwtl
dec
mov
dec
rorl
ror
daa
mov
inc
add
hlt
add
cmpsb
or
iret
dec
ds
ret
mov
pop
lock
pop
cmp
lods
or
mov
pop
cwtl
add
and
push
adc
cli
xlat
cmp
add
sahf
aas
in
popf
push
ret
xor
pop
fadds
sub
adc
movsl
inc
jmp
mov
lods
push
jbe
sbb
jge
jnp
gs
xlat
pop
icebp
les
fsubl
mov
cmp
mov
stos
movsb
jge
fbstp
je
ljmp
jg
push
mov
rorl
sub
adc
cmpsl
stc
adc
inc
mov
outsb
rcrb
mov
pusha
iret
pop
sub
xchg
mov
jle
loopne
loope
jp
mov
sbb
add
mov
pop
adc
es
sarl
jbe
adc
pop
pop
mov
adc
into
xchg
inc
out
sbb
subb
cmp
adc
insb
in
cltd
lea
call
pusha
push
lea
jae
jmp
cmpsb
sub
scas
push
jbe
xchg
inc
mov
jns
jecxz
push
lods
pop
sub
lcall
pop
jmp
and
fdivrl
pop
adc
adc
xchg
mov
sbb
orb
push
aam
mov
sub
mov
popf
fs
dec
cmp
cmp
mov
cwtl
leave
dec
and
nop
leave
out
ja
mov
or
mov
bound
daa
addr16
jge
shll
and
imul
ss
inc
loop
loope
mov
outsl
add
adc
in
scas
push
jbe
sub
adc
xchg
mov
jg
xor
xchg
cmp
bound
fisubl
mov
icebp
and
pusha
mov
xor
es
xor
xchg
gs
inc
rcrl
int3
mov
fcom
out
cwtl
in
scas
std
push
xchg
lahf
pop
jno
mov
fstpl
les
jp
int3
sub
lahf
sub
shl
ret
mov
aas
cli
lret
mov
push
jbe
lods
jl
mov
in
push
popa
xor
pop
sbb
push
out
test
add
push
jbe
pop
cwtl
mov
jl
cmpl
jno
xchg
icebp
cmp
or
int3
sub
push
cmp
gs
ret
pop
mov
enter
int
mov
add
sbb
adcl
add
andl
lea
jge
jae
stc
sub
ja
push
pushl
pusha
lea
call
jmp
pop
xor
mov
jbe
popa
push
lret
dec
fwait
push
scas
jnp
mov
push
and
out
or
xchg
jbe
int3
imul
cwtl
sub
leave
inc
aam
and
popa
and
lods
test
adcb
mov
ficoms
jmp
and
inc
adc
in
cmp
push
ret
lds
sub
outsb
jecxz
pop
dec
loopne
in
rolb
pop
int3
add
test
push
mov
test
push
mov
push
in
cmp
fstl
jp
push
and
shlw
mov
rorb
or
lods
mov
mov
xor
or
push
add
aad
or
mov
xchg
inc
out
or
push
xlat
mov
shl
arpl
push
sub
shl
pushf
jmp
xor
mov
jbe
insl
dec
out
push
add
dec
mov
mov
int
lcall
push
arpl
and
in
dec
mov
out
pop
sbbl
xor
out
aad
adc
xor
hlt
nop
shlb
lds
pop
leave
jae,pn
push
aad
scas
mov
lahf
ret
fwait
loope
inc
mov
and
addr16
dec
jecxz
insl
stos
jno
inc
ficompl
mov
sbb
push
mov
xchg
sarb
adc
cwtl
cmp
movl
mov
jnp
loope
popl
cmpsl
mov
adc
cmp
lcall
and
insb
and
cmc
and
bound
mov
adc
sub
xor
out
push
or
testb
mov
mov
jg
jae
aad
pop
mov
sub
std
and
int
push
lea
jae
stc
cmc
xor
jmp
push
dec
or
push
jbe
jae
stc
test
pop
and
xor
aam
out
xchg
xchg
mov
in
push
scas
jb
mov
mov
gs
in
jmp
cmp
lock
push
jl
and
jno
or
push
dec
insl
dec
mov
test
enter
sbb
sbb
repnz
movsl
cmp
arpl
movsl
arpl
test
push
xor
jle
adc
mov
mov
pop
arpl
jne
pop
sub
call
loope
scas
gs
push
loope
push
movsl
addb
or
jbe
jle
je
xor
sbb
push
orb
mov
push
mov
add
jl
movsb
push
adc
mov
pop
aam
ss
xorb
push
sbb
mov
ret
jbe
add
mov
rorb
lret
aaa
lock
push
in
xchg
out
pop
and
pusha
lods
lods
test
add
mov
fldcw
cwtl
popa
pop
adc
mov
pop
push
stos
test
mov
or
lods
mov
cmc
test
cli
xchg
adc
jb
push
cs
sub
pop
stc
mov
gs
hlt
lds
sbb
pop
push
mov
icebp
imulb
adc
test
pop
push
call
lea
push
push
loop
sbb
mov
insl
loop
dec
in
dec
out
or
stos
jnp
test
lahf
pop
pop
data16
out
or
int3
mov
dec
adc
pop
imulb
jecxz
sub
ja
adc
and
mov
jno
addr16
jge
xlat
js
or
sti
es
add
and
pop
adc
mov
sub
fidivl
cwtl
lret
inc
mov
sub
sbb
push
lahf
daa
adc
in
ret
mov
xchg
xor
lcall
push
fldl
mov
cmp
or
jmp
mov
mov
mov
lea
call
push
jmp
mov
setne
movb
inc
pusha
pushf
mov
mov
mov
lea
push
lea
call
pushf
call
pushf
lea
ja
bt
shr
sub
sub
stc
jmp
rcll
rcrb
jl
loop
jl
stc
lea
xchg
or
adc
lds
into
xchg
xchg
out
mov
push
pop
mov
add
add
in
cmpsb
mov
and
daa
pop
sbb
mov
xor
push
cwtl
push
in
mov
xchg
dec
lds
push
jle
jmp
insl
add
sbb
adc
je
div
mov
frstor
cmp
and
jns
repz
add
dec
fwait
adc
mov
movsbw
mov
mov
pop
mov
jmp
addl
or
fisubl
imul
mov
loop
or
and
je
out
xchg
arpl
nop
sbb
pop
movsb
mov
cltd
cs
movsb
std
xor
jg
xor
mov
in
mov
xchg
cmpsl
and
pop
jl
js
inc
mov
mov
mov
bound
inc
insl
loope
sub
outsl
inc
pop
sbb
cmpsl
adc
rcrb
add
and
roll
xlat
mov
jecxz
pop
aam
or
jbe
ficompl
lret
adc
test
sbb
out
xor
jb
xchg
fsqrt
out
insb
add
fsubr
sarl
ja
clc
loopne
lock
mov
mov
ret
jecxz
pusha
lds
mov
add
push
dec
add
dec
push
popf
mov
sub
and
lock
adc
mov
mov
aas
and
push
jecxz
in
sub
ficomps
lods
mov
jbe
hlt
ja
insl
sub
inc
adc
add
xchg
push
fidivs
dec
in
hlt
sbb
mov
mov
pop
jmp
shll
or
or
movsl
test
jl
loopne
push
inc
inc
jns
cltd
cwtl
push
and
jl
call
lds
pushf
push
sbbl
cltd
mov
xchg
gs
or
int
or
jp
add
sbb
or
and
cs
mov
jecxz
or
ret
adc
in
dec
incl
cld
mov
jbe
sahf
imul
out
inc
fidivrl
adc
inc
mov
lcall
ja
or
xor
push
fucomip
jg
sbb
popa
popf
or
cwtl
dec
in
scas
fs
movsb
das
aad
hlt
or
mov
call
test
ds
add
int3
test
das
push
mov
push
clc
stos
lods
jg
xchg
jg
mov
repnz
enter
stos
and
jbe
les
mov
jbe
mov
je
int
out
sbbl
nop
addr16
out
rol
add
jp
aam
cmp
add
fsubrs
xchg
or
mov
in
cmp
cld
sbb
ret
aad
les
or
rcrl
stos
mov
add
sbb
test
lahf
or
sahf
jbe
jp
in
cmp
or
jle
push
lcall
xlat
nop
cmpsl
or
or
jae
int
nop
xor
adc
out
cltd
clc
and
or
pop
mov
sti
clc
loope
pop
pop
push
fdivs
das
out
sub
push
cmp
sahf
sbb
jge
fyl2x
and
cmp
add
ja
divl
rcr
lahf
scas
xchg
push
pop
lcall
push
xor
out
push
icebp
and
xchg
xor
add
ja
or
xchg
dec
imulb
scas
push
fcomi
sahf
pusha
ret
decl
xchg
mov
pop
mov
and
mov
xchg
addl
and
outsb
or
mov
imul
das
mov
mov
pop
push
mov
jne
sbb
mov
cmp
std
je
dec
es
and
fwait
repz
lock
xchg
inc
push
fldl
cmpsb
pop
ljmp
push
adc
leave
add
andl
fdivs
dec
mov
fistl
sbb
shr
fs
and
imul
xchg
cmp
xchg
loopne
jno
pop
push
jns
imul
popa
jle
mov
push
adc
test
sbb
sub
ret
outsb
xlat
mov
fs
add
sbb
out
xor
pop
push
lods
adcl
dec
xor
xor
orb
cmp
mov
push
out
mov
ja
jg
insl
or
mov
outsl
sub
mov
push
mov
je
adc
push
push
jmp
mov
mov
mov
fs
xchg
das
rorb
call
dec
xor
inc
es
iret
mov
mov
and
push
jne
ret
arpl
nop
mov
addr16
xchg
cltd
ljmp
dec
push
adc
test
fwait
inc
test
push
add
dec
or
add
sbb
leave
enter
into
push
cmp
ds
or
ja
int
int
pop
enter
or
in
jmp
sbb
jno
mov
sub
mov
shrb
adc
and
mov
arpl
sub
into
jle
stc
mov
cmp
or
fldt
lcall
add
cli
rorl
add
in
fcomi
mov
cmp
lahf
push
jp
rcr
sub
add
adc
mov
pushf
insb
or
dec
mov
xor
jecxz
xchg
popa
mov
add
out
lods
into
mov
jo
repnz
outsb
ret
xlat
negb
in
xchg
das
ficomps
sarl
jne
incl
fs
popa
and
scas
ja
mov
je
xchg
add
xor
fucom
pop
cltd
out
cwtl
clc
clc
loop
into
and
mov
je
push
mov
bound
and
sarb
fsubs
and
call
imul
test
imul
inc
pop
xchg
xchg
mov
pop
ljmp
or
outsb
push
test
sub
add
int
dec
push
xchg
mov
movw
movl
pushf
pushf
movb
movl
pushf
movb
pushf
lea
jmp
shl
scas
mov
faddl
es
imul
dec
or
in
out
cli
jno
jbe
sbb
nop
cmpsl
mov
ds
sub
ss
lods
cmp
out
mov
inc
rcrb
daa
xchg
in
lock
sbbb
imull
jns
add
cmp
push
pop
hlt
pop
push
ret
cmp
xchg
push
adc
test
inc
popa
pop
mov
push
adc
or
loopne
fs
fimuls
mov
sbb
lds
repz
decb
xchg
testb
je
pushf
sti
sub
mov
movb
rclb
push
addl
mov
push
push
xor
mov
shlb
xor
arpl
adcl
pushf
pushf
pushl
push
lea
ja
pusha
pushf
pushf
mov
call
hlt
cwtl
js
push
jbe
mov
and
mov
cli
xchg
or
bound
fidivs
pop
pushf
repz
jl
or
xchg
insl
js
popa
xor
pushf
xchg
ret
push
fnsave
scas
mov
sub
cwtl
loop
loop
ret
mov
sbb
scas
sti
inc
adc
fwait
js
add
push
mov
rclb
fs
push
fistpll
je
btr
add
shl
bsr
mov
clc
clc
add
test
jmp
mov
dec
and
or
mov
pop
enter
mov
or
lahf
mov
cltd
cmp
test
xchg
dec
stos
mov
outsl
and
sub
js
lret
les
push
xor
scas
stos
mov
jp
scas
imull
xchg
hlt
mov
pop
push
xchg
jecxz
stos
jne
and
sub
lret
cmp
outsl
popa
sbb
mov
push
jbe
insb
pop
mov
jo
stos
adc
xchg
test
xlat
cmp
jo
adc
cmp
ret
sbb
adc
fst
div
dec
enter
popf
mov
movsl
sub
dec
cmc
fildll
push
or
aam
push
rorl
xlat
pop
and
adc
hlt
nop
insl
sub
jno
xchg
fnstenvs
lahf
push
xchg
shll
adc
pop
rcl
and
nop
dec
fwait
testl
inc
into
sub
sub
jl
rolb
sbb
cmc
jno
ret
push
jb
mov
pop
je
leave
add
xchg
jmp
sbb
outsl
lret
jg
nop
pop
mov
pop
sub
fnsave
aaa
in
and
pop
pop
pop
popa
out
inc
stc
mov
fstpl
xor
sub
mov
shlb
test
inc
leave
sbbl
test
sub
popf
nop
fsub
add
fnstsw
jl
mov
or
mov
in
aas
das
and
lahf
push
jl
lahf
outsl
rorb
test
shrl
jp
and
cmp
sub
add
push
lret
lods
mov
pop
and
ret
xchg
fmull
mov
push
mov
repz
mov
or
pusha
sub
mov
aas
mov
cmp
cmp
adc
mov
inc
popf
fists
mov
sbb
lret
pusha
ffreep
ja
sub
bound
mov
dec
push
shlb
sbb
dec
clc
add
dec
test
cs
aas
repz
mov
mov
fwait
cmpsl
cltd
ret
mov
outsb
and
xchg
push
inc
scas
insb
out
ficompl
imul
pop
aam
sub
enter
push
fildl
testb
ja
rcll
fstps
in
mov
jge
fisttps
dec
jo
hlt
push
jmp
ficompl
inc
adc
mov
call
cltd
jbe
jl
scas
xorl
jne
lahf
scas
or
mov
ds
pusha
mov
test
xor
xorb
gs
push
add
add
orb
lret
sub
out
loope
icebp
ret
adc
jbe
push
or
adc
and
stc
xchg
sub
jns
rolb
loopne
cmc
jb
jle
sbb
mov
aaa
fcompl
xchg
adc
inc
frstor
xor
insl
cwtl
xor
mov
lds
jo
xchg
movsl
ds
xor
lds
test
rclb
sbb
xchg
mov
ds
jge
push
jnp
daa
push
or
movb
fistl
lds
into
dec
jo
shlb
das
inc
addr16
sub
cltd
jbe
and
adc
mov
iret
int3
xchg
adc
jp
imul
pop
pop
psrlq
fstpt
je
jle
and
das
lret
adc
subl
idivl
out
movsb
movsb
mov
sbb
mov
rcrb
mov
or
dec
sbb
fwait
mov
lods
and
and
sbb
dec
sbb
fwait
outsb
jge
movsl
in
lahf
lock
in
fldt
pop
cmp
arpl
lcall
popa
or
cltd
mov
into
stos
xor
mov
pop
mov
mul
in
imul
inc
or
sbb
pop
sbb
cwtl
fistps
cltd
imul
jmp
filds
mov
mov
jo
jmp
cmp
test
fmuls
jl
and
or
enter
mov
lods
mov
mov
fwait
mov
sahf
in
sbb
and
std
cmp
jmp
inc
in
in
mov
fildll
sbb
sbb
add
cmpb
lahf
clc
movsl
movsb
add
imul
lock
mov
add
pusha
fldt
test
imul
mov
sarl
inc
cmp
lret
jmp
pop
into
mov
mov
imul
mov
pop
in
fwait
push
decb
stos
mov
clc
and
jns
mov
fwait
pop
jmp
popa
xor
sub
sub
cmp
mov
sub
clc
mov
pusha
inc
jno
std
movsl
popa
cmp
sbb
enter
mov
lret
mov
in
mov
jno
push
sub
or
jnp
cmp
lods
sti
push
out
stc
test
xchg
add
testl
enter
jmp
in
movsl
ss
jne
xor
dec
cmpsb
mov
arpl
aam
push
outsl
daa
mov
sub
sub
rcrb
mov
jo
ret
imul
mov
xchg
sarb
mov
ja
sbb
popa
jns
fwait
cmp
das
ja
sbb
cmp
jmp
mov
scas
mov
movsl
rclb
cmp
dec
or
xor
movsl
mov
pop
mov
cltd
loop
xchg
xor
sub
pop
or
test
clc
adc
stos
mov
mov
xor
xchg
popa
xor
int
mov
lods
add
ds
mulb
les
lock
mov
movsl
sbb
test
int
pinsrw
cmp
stos
fs
fwait
pop
stc
test
pushf
or
dec
fsubrl
lret
nop
mov
jg
bound
dec
cmpsb
mov
mov
and
adcl
jg,pt
push
mov
sbb
and
fs
in
mov
loop
lods
mov
sbb
pop
pop
cmpsl
jecxz
mov
into
stos
dec
ret
stos
mov
jnp
and
fisubl
dec
and
sbb
jmp
es
mov
jge
push
mov
mov
adc
les
insl
bnd
jo
sub
inc
insl
stos
popa
arpl
sbb
sbb
test
test
cmp
stos
shrb
in
or
pop
sbb
rcr
cld
cmpsl
mov
push
xchg
and
sub
lock
jno
add
arpl
mov
mov
outsb
sbb
jecxz
jns
or
lds
mov
mov
xchg
mov
fimull
cltd
cltd
test
ja
mov
mov
outsl
gs
aas
call
mov
repz
mov
cmp
fstps
push
in
outsl
push
lcall
outsl
jge
cs
test
imul
mov
inc
dec
pop
mov
jne
mov
lcall
mov
cmp
sbb
gs
or
sbb
sbb
jns
xor
inc
inc
cmp
inc
push
fwait
mov
lock
push
stos
ds
sbb
adc
or
sub
scas
sbb
sub
fisttpll
pop
jne
scas
adc
mov
cmp
and
cmpsb
cmc
inc
int3
nop
dec
mov
xor
stos
mov
and
mov
jmp
and
lock
lods
cmp
imul
jnp
fwait
xchg
xor
inc
xor
cltd
jmp
mov
test
jl
jns
popa
cmp
inc
inc
inc
mov
stos
push
dec
jno
shrl
leave
cli
lock
xor
jmp
dec
jne
insb
dec
cld
xchg
inc
xor
call
pop
aaa
jge
mov
loopne
fadd
repnz
popa
mov
cmp
xor
inc
sub
mov
mov
jae
xor
pop
jmp
fwait
jmp
mov
pusha
pushf
subb
sbb
cld
mov
outsb
xor
and
mov
and
mov
into
jmp
cmp
popl
mov
cmp
lahf
fdivl
jne
clc
clc
xchg
movsb
imul
xor
xchg
movsb
pop
add
mov
addb
movsb
daa
rcrl
daa
pop
leave
mov
mov
push
jb
inc
inc
mov
pushl
xor
bound
rorb
gs
mov
lock
sub
lods
in
add
or
aas
sub
sub
andl
popa
and
lock
xchg
inc
xor
push
imul
sub
mov
or
cmp
test
inc
ds
imul
popf
popa
sahf
outsl
mov
icebp
add
aas
sbb
inc
mov
or
sub
cli
xor
mov
stos
dec
stos
xor
xchg
or
mov
sarb
mov
fwait
pusha
lret
xor
lret
fsubl
cmp
decl
aaa
enter
xchg
mov
cs
mov
jbe
cmp
mov
cmpsl
mov
sbb
sti
push
test
sti
stc
mov
mov
aaa
gs
das
and
cld
lock
js
jmp
xor
adc
mov
mov
push
xchg
jns
jmp
dec
inc
lds
mov
ljmp
pop
es
mov
rcl
gs
cli
dec
lock
fwait
cmpsb
mov
xchg
enter
sbb
cmpsl
mov
shr
movsl
inc
scas
sarb
cmpsl
loopne
lock
les
out
and
stos
fnstcw
pop
pop
mov
cmp
jae
test
repnz
inc
loopne
jp
jmp
xor
mov
sub
adc
pop
cmp
dec
xchg
mull
and
test
out
das
out
fsubrs
sbb
dec
push
adc
sub
das
add
sarb
jb
stos
sub
mov
and
mov
cmp
aam
cmp
adc
inc
les
stos
fimuls
pop
mov
lcall
cmp
cmp
call
sub
call
shrb
imul
in
mov
mov
inc
sub
mov
aam
subb
lods
dec
popa
mov
mov
mov
jns
daa
nop
pop
leave
cwtl
lock
add
gs
cmp
icebp
test
mov
jmp
jge
das
adc
dec
mov
mov
sbb
mov
pop
test
in
and
les
sti
ret
daa
mov
inc
add
dec
addr16
sbb
add
aam
push
insb
jmp
dec
es
fidivl
mov
push
fs
mov
ret
jnp
pop
sub
mov
push
xor
mov
and
jno
jmp
sbb
mov
mov
fs
sbb
lahf
into
and
dec
rolb
inc
test
cs
rcrb
lock
add
push
insb
inc
mov
adc
cs
dec
cmpsl
imul
jae
iret
mov
pop
sbb
popa
andb
push
and
mov
sbbl
sbb
push
and
pop
movsb
sub
mov
movsl
pop
cmp
inc
clc
dec
sbb
and
sub
jg
and
movsl
xchg
mov
sub
add
mov
and
pusha
and
lods
mov
lock
pop
xchg
push
mov
loopne
jne
jne
clc
scas
xchg
mov
test
mov
gs
test
and
in
sbb
sub
mov
pushf
dec
add
movsl
stc
mov
movsl
nop
dec
mov
and
aas
sbb
and
mov
mov
mov
stc
inc
sbb
pop
jp
sbb
xor
cmp
pop
adc
pop
imul
push
sub
fimuls
inc
push
push
pop
and
mov
into
sbb
add
sub
fiaddl
pusha
jl
jnp
inc
xlat
cmpsl
mov
and
test
jnp
mov
xchg
cli
rclb
rcll
cmp
lret
cmpsl
outsb
stos
dec
fwait
pop
fdivs
lret
push
mov
nop
mov
shrl
add
cmpsl
and
orb
cmpsl
sub
add
cmpsl
shrl
pop
sbb
cmpsl
and
mov
daa
push
cmpsl
pop
xchg
mov
out
or
rorb
jns
cmpsl
test
fnstcw
cmovne
and
aad
push
imul
and
cmpsl
add
cmpsl
imul
push
jae
or
cmp
mov
insl
clc
insl
cmp
sub
push
cltd
xor
mov
fwait
pushf
fmuls
outsl
ret
lock
arpl
loop
cmc
mov
popf
stos
call
sbb
jno
sar
sar
pop
lods
pop
inc
daa
dec
mov
sub
cmpsl
cmp
add
and
loopne
sbb
cmp
or
inc
push
lock
outsl
hlt
inc
xor
stc
mov
rcrl
mov
push
and
lret
lods
cmpsb
imul
push
test
inc
mov
adc
xor
lock
pop
js
daa
adc
mov
pop
dec
push
pop
imul
pop
lret
inc
inc
mov
icebp
jno
and
mov
lahf
mov
pop
or
cmp
int
or
jns
jmp
test
cmp
dec
mov
or
stc
inc
xor
inc
cmpl
inc
sarb
cmc
push
push
pop
stos
inc
inc
mov
mov
xor
inc
lock
jmp
mov
mov
mov
fwait
lods
mov
in
inc
daa
mov
mov
sbb
popa
stc
inc
add
imul
ss
imul
mov
jl
jb
test
sub
mov
inc
cmpsb
inc
and
jns
sbb
add
aam
rcrl
jno
test
dec
test
jmp
mov
adc
pop
loop
jae
mov
lahf
int
sub
rclb
mov
dec
jmp
push
xchg
pop
insl
jns
sbb
pop
cs
mov
jb
sti
subl
test
mov
sub
adc
push
pop
sub
imul
xor
mov
xor
sub
xchg
pushf
sub
test
push
cli
test
mov
xchg
ljmp
fidivrs
pop
or
es
mov
imul
call
aaa
cmp
add
or
mov
test
cmp
cmp
inc
clc
addl
inc
lods
mov
dec
adcb
mov
lret
iret
stc
mov
xchg
mov
leave
push
stos
sahf
inc
mov
testl
test
sbb
mov
sbb
int
mov
lods
gs
cmp
push
hlt
sbb
in
lods
into
jmp
lock
in
sbb
sub
lahf
sub
or
das
pop
mov
jae
lcall
and
inc
jl
sub
pop
stos
test
mov
adc
sub
stc
dec
inc
mov
stos
inc
popf
lods
cmpsl
aaa
push
inc
mov
popa
push
imul
add
fsubrs
insb
popf
add
jmp
cmpsb
sti
pop
loop
movsl
mov
mov
jbe
lods
mov
movsl
xor
sbb
insb
addr16
and
cld
cs
sbb
gs
and
les
popa
mov
dec
int3
les
xor
cmpsl
dec
arpl
inc
mov
mov
stc
movsl
aam
shrb
sub
mov
xchg
call
pop
imul
sub
movsl
mov
pop
mov
fwait
popf
test
fwait
or
repz
das
stc
mov
sub
test
movsl
sbb
mov
sbb
das
cmpsl
pop
and
pop
mov
into
lds
insb
jno
testl
add
ljmp
sahf
in
fldenv
inc
std
jnp
mov
stc
push
pop
shll
mov
jns
test
cmpsl
pop
pop
push
cmpsl
mov
mov
mov
pop
jno
test
and
adc
cmp
test
mov
inc
or
push
sbb
lea
lea
jbe
scas
and
add
addr16
leave
xchg
lea
loopne
mov
cmp
imul
mov
or
das
jecxz
fsubrs
jmp
xlat
sub
mov
inc
mov
jmp
jle
clc
pusha
lahf
test
in
xchg
pop
xor
xor
push
sbb
jp
lea
xchg
xchg
out
scas
and
lods
test
sarb
loope
sahf
mov
das
jecxz
ja
sti
adc
out
test
loope
stc
lahf
mov
add
pop
test
loope
sbb
fsts
sub
loope
loop
out
pop
sbb
test
icebp
push
and
xorb
adc
out
jo
cmp
cmc
inc
pop
push
lods
add
fnstsw
stc
div
mov
subb
arpl
inc
pop
subb
loope
inc
insb
mov
sti
sbb
pop
jp
notl
inc
fldl2t
bound
test
scas
xchg
inc
idivl
loope
int
loope
out
inc
adc
sar
sahf
fldenv
and
inc
aad
addr16
xchg
addr16
jmp
shrl
test
mov
and
sub
push
ret
insb
pop
jmp
out
sbbb
das
shl
mov
rcll
in
xchg
pop
shrl
ja
jo
cs
mov
mov
cmp
mov
sbb
aad
sbb
in
add
mov
mov
scas
and
inc
test
test
mov
int3
insb
dec
or
xchg
subb
leave
xchg
sub
loope
mov
sub
test
mov
mov
jmp
lret
dec
xchg
jno
pop
or
imul
shll
int
addr16
in
add
pop
inc
iret
inc
jg
mov
pop
fldt
in
test
insb
and
nop
jnp
mov
sbb
ret
push
test
popf
mov
aaa
flds
imul
mov
rclb
cmp
cmc
inc
sahf
enter
cmp
sbb
pop
sbb
fldl
pop
loopne
push
fcomps
loop
scas
and
add
or
ja
int3
insb
dec
lret
xor
xchg
sub
cmp
jecxz
inc
ds
test
mov
mov
mov
pop
dec
mov
mov
inc
mov
mov
das
cwtl
adc
ss
stc
xchg
aad
test
lock
pop
add
inc
ds
pop
and
test
movsb
aad
mov
xchg
les
sub
addb
lret
hlt
mov
out
push
pop
insl
sbb
mov
leave
sbb
and
insb
xor
rorb
cmpsl
cmp
mov
push
pop
ljmp
fadd
dec
mov
movsb
sub
mov
jnp
cmpsl
mov
mov
test
jl
sbb
and
mov
mov
stos
rorb
insb
dec
dec
sub
mov
call
decb
sub
les
lods
test
lods
cmpsl
cmpsl
mov
popa
cmp
jmp
dec
jne
dec
fbstp
and
xor
and
push
mov
popf
mov
and
cmpsl
sbb
leave
outsl
test
sub
les
sub
sub
add
rorb
xchg
sub
dec
popa
pop
cmp
lret
and
loop
dec
add
scas
jo
cld
sub
mov
lods
dec
pushf
mov
and
mov
test
push
lds
jno
lret
push
mov
pushf
mov
out
jns
cld
lds
cmp
push
mov
sti
jne
lds
inc
mov
sub
jecxz
gs
hlt
jnp
dec
aam
sub
sub
and
jge
pop
mov
cmc
pop
leave
push
and
and
arpl
xor
jbe
dec
aaa
addr16
int
sahf
dec
cltd
add
lret
or
pop
mov
daa
call
push
leave
scas
cmpsl
stos
movsb
mov
xchg
xchg
and
mov
add
and
push
inc
lock
jne
add
sbb
rclb
mov
lock
adc
movsl
mov
shlb
sahf
loope
movsl
stos
inc
mov
pop
and
sub
mov
ret
sahf
rorl
popa
jno
cmp
mov
int3
push
sub
inc
call
js
jmp
mov
cmpsl
and
fldenv
roll
test
cmpsl
push
repz
leave
stos
inc
mov
and
nop
mov
mov
sbb
js
and
out
loope
repz
adc
nop
or
lods
mov
loope
dec
mov
dec
mov
sbb
mov
scas
cmp
lods
mov
xor
pop
and
and
cs
test
movsl
mov
clc
scas
stc
shrb
cwtl
mov
aad
pushf
pop
ljmp
cli
mov
pusha
inc
add
inc
pop
push
test
ljmp
stos
jno
cwtl
push
mov
scas
pushf
in
stos
push
enter
lods
movsl
pushf
pop
test
repz
sub
mov
pop
inc
pop
push
rcrl
xor
pop
cmp
fldenv
xor
mov
stc
mov
test
mov
xchg
and
mov
mov
or
movsl
pushf
xorl
xor
push
movsb
push
pop
mov
cwtl
out
mov
imul
lcall
idivb
mov
jns
or
pusha
mov
xor
fcoml
mov
test
pop
pop
push
mov
pop
mov
mov
loope
lock
pop
sbb
dec
push
push
addr16
pop
nop
pop
mov
jecxz
mov
lods
inc
pop
out
push
test
out
pop
js
pop
out
add
xor
pop
or
jecxz
add
movsl
sub
mov
mov
push
addr16
push
dec
adc
jle
test
lods
mov
inc
mov
dec
clc
iret
pop
jle
pop
adc
pop
sbb
dec
fsubs
scas
test
scas
scas
arpl
testl
xor
lds
push
cmp
jle
inc
daa
test
xchg
sub
test
jle
or
jle
pop
test
test
sub
jle
fnstenv
jle
xor
test
stc
mov
xor
das
add
dec
rorb
jle
dec
mov
test
inc
sub
fdivr
das
add
pop
in
jmp
clc
test
rolb
sbb
into
or
lods
in
dec
pop
or
jp
mov
or
or
or
mov
jp
mov
or
jp
mov
or
jp
mov
add
or
mov
cmpsb
movb
stos
lods
stos
pop
xor
call
adc
pop
inc
adc
fnstenv
mov
outsb
and
xorb
es
fwait
and
imul
jnp
dec
xchg
dec
shlb
mov
loopne
inc
fimuls
mov
mov
push
fistpll
lcall
sub
dec
fiadds
dec
in
aam
gs
cld
sbb
lcall
mov
dec
in
mov
lock
jg
sbb
mov
and
push
adc
cmp
dec
cmp
into
sbb
lahf
imul
mov
add
inc
add
sub
movsl
inc
adcl
mov
inc
mov
imul
fidivl
adc
cmp
pusha
aas
mov
mov
cmpsb
icebp
and
stc
sahf
xor
xor
add
lea
les
imul
imul
es
ja
or
cmpsl
xchg
jmp
cli
cmp
pop
mov
jp
enter
test
mov
xor
sbb
movsb
jmp
fldenv
mov
mov
scas
cmp
adc
fldcw
fwait
pop
movsb
adc
adcb
imul
bound
xchg
clc
cmp
cmp
dec
xchg
cmp
pop
int3
cmp
mov
dec
jmp
inc
mov
sub
rclb
pop
adc
call
sub
lret
add
outsb
in
push
pushf
lea
mov
jmp
push
adc
imul
xchg
xchg
test
add
fwait
jge
out
inc
outsl
notl
pop
mov
cmp
leave
jb
lret
xchg
mov
dec
mov
push
jmp
orb
in
fwait
jno
cmp
inc
pop
xor
in
popa
push
stos
stc
loope
add
shrb
insb
enter
scas
push
scas
sub
lods
push
jae
es
mov
ret
cmp
cmc
mov
lods
test
ret
sbb
adc
bound
movsl
aaa
mov
lret
lock
mov
adc
cmp
ret
nop
sub
scas
push
mov
call
dec
cmp
icebp
mov
adc
inc
addb
insb
jb
jo
mov
jge
xor
mov
fstps
fistpll
inc
pop
xchg
fwait
cmp
stc
arpl
pusha
bound
dec
movsb
pop
jmp
mov
aad
mov
mov
lods
mov
mov
sbb
mov
mov
mov
cmp
cmp
sbb
mov
jns
cmp
push
hlt
xchg
loopne
xor
mov
ret
outsl
pop
mov
inc
movsb
das
fnstcw
xor
sbb
xchg
mov
sbb
rorl
mov
enter
cmp
mov
pop
shll
movsb
jno
cmpsb
pop
mov
inc
and
jmp
testb
jne
mov
sub
mov
addr16
sbb
lcall
cltd
mov
enter
and
mov
sub
fisubs
push
and
mov
xchg
data16
pop
sub
pop
pop
pop
sub
jge
jmp
mov
lods
ds
cwtl
push
jnp
stos
inc
push
sbb
xchg
cld
sub
sbb
jns
cmp
cmp
idivl
stos
or
inc
mov
mov
inc
filds
push
sbb
mov
sbb
or
loope
scas
mov
mov
jmp
ja
push
ret
cli
jno
mov
aad
scas
sti
popa
push
sbb
imul
mov
in
dec
mov
ljmp
push
or
pop
fimull
nop
push
lock
jbe
lea
dec
add
push
movsl
inc
aas
inc
jno
xchg
in
loop
test
popl
push
test
stos
pop
es
sub
cmp
into
in
aaa
mov
inc
leave
adcl
hlt
mov
cmp
hlt
inc
loopne
sbbb
stc
or
mov
mov
cli
push
sub
nop
push
mov
fldt
xor
mov
pop
test
les
cs
in
mov
cmp
cmpsl
pop
addr16
inc
jmp
or
pop
mov
pop
es
sbb
mov
stc
cmpsl
cs
mov
leave
mov
mov
cmpsl
leave
sub
adc
leave
divl
cmpsl
xchg
push
loopne
pop
pop
pop
pop
mov
out
jns
xchg
fcomps
or
cwtl
xchg
addl
call
stc
cmpsl
cs
addr16
popa
loope
jnp
into
jns
aad
es
jne
scas
cmp
sbb
sub
push
cmp
xor
add
movsl
mov
sub
movsl
mov
or
xchg
stos
in
push
out
lret
pushf
es
enter
cmp
push
inc
adc
ja
push
mov
mov
test
cmpsl
in
and
xor
mov
inc
mov
movsb
sti
addr16
cmp
shlb
push
and
and
gs
sub
iret
fsubrs
push
nop
dec
scas
xor
xorl
push
cmp
ds
or
push
mov
shl
dec
gs
das
ss
inc
mov
mov
inc
mov
pushf
es
and
cli
inc
aad
mov
gs
fbld
cs
aam
and
mov
and
shlb
adc
push
or
push
cmp
sub
loopne
mov
cmp
mov
lea
jbe
lea
mov
rorb
mov
ss
sbb
dec
and
stos
adc
xchg
sub
fwait
sbb
int3
aam
sub
inc
lcall
mov
push
imul
xor
pushf
mov
mov
mov
imul
int
push
sbb
sbb
cmc
jmp
pop
movb
dec
pop
cmp
jmp
lret
sbb
lcall
mov
imul
filds
mov
jno
ret
cmpsb
inc
xor
movsb
sub
or
and
in
xor
pop
mov
cmp
push
cmp
dec
mov
movsl
cmp
scas
cpuid
adc
gs
dec
mov
and
pop
jne
mov
mov
andl
pop
sbbb
out
int
fstl
adc
repz
int3
and
fistpll
dec
cmp
jmp
push
push
pop
fldenv
loopne
jmp
sub
xor
cltd
mov
xchg
addr16
push
in
pop
pop
xchg
inc
or
fbld
test
lret
movsl
imul
and
xorb
push
in
sub
lods
hlt
jne
shlb
insb
fld
push
or
fistpll
std
pop
lds
test
dec
lret
sbb
cmp
cmpsl
leave
pop
xor
ss
mov
lcall
cmc
inc
xor
mov
popa
bound
pop
xor
fwait
mov
pop
add
nop
mov
jns
xchg
pop
ds
stos
add
test
sbb
pusha
sbb
sbb
ja
pop
loopne
ds
pop
dec
pop
inc
jno
mov
xor
nop
mov
lret
pop
insl
or
pushf
push
fnsave
mov
pop
pop
mov
pop
daa
or
cmp
sbb
loopne
push
lea
test
mov
mov
imul
push
sahf
adc
xor
movsl
sbb
cwtl
or
push
sub
sbb
xchg
cmp
inc
imul
cmc
inc
lcall
out
add
ja
dec
gs
test
and
rorl
add
jl
and
lcall
fcompl
mov
scas
lods
ss
add
pushf
fbstp
pusha
jecxz,pt
xlat
in
test
inc
mov
cmpsl
pop
cmp
ret
out
pop
pop
test
adc
and
in
and
es
gs
call
sbb
mov
jmp
cmc
lcall
jmp
fisubrl
dec
nop
nop
inc
lds
fsubl
daa
inc
mov
mov
inc
inc
jl
dec
sub
outsb
addr16
jbe
sbb
inc
nop
xchg
dec
gs
or
xchg
dec
out
add
idiv
loop
pop
mov
push
fs
aad
and
es
testl
mov
mov
rcrl
cmp
mov
shrb
mov
mov
aas
xchg
jo
xor
mov
pushf
adc
rcr
mov
dec
mov
inc
daa
fwait
data16
mov
mov
xor
mov
pushf
adc
jno
mov
cmc
mov
test
add
dec
daa
mov
in
sbb
or
movsl
push
mov
rol
hlt
test
mov
mov
pop
jmp
jl
adc
fsubrs
js
mov
jmp
dec
lahf
dec
repz
mov
sbb
mov
mov
pop
xor
mov
fwait
ja
lods
mov
mov
mov
cmp
mov
fwait
in
inc
dec
movsl
cmpsb
and
inc
lods
movsl
pop
iret
cld
rcl
mov
sbb
pop
repz
sbb
adc
dec
into
push
popf
shr
movsl
ja
mov
xor
xchg
ret
xchg
xchg
cmp
mov
stos
cmp
pop
stos
xor
ret
add
mov
and
lods
inc
fwait
mov
sbb
sbb
lcall
hlt
insl
pop
cmp
xchg
mov
rclb
sbb
sub
mov
pusha
dec
icebp
sbb
mov
nop
mov
mov
mov
loop
cmp
and
sbb
or
push
pop
sahf
xor
loope
mov
push
fwait
jae
movsb
mov
lcall
mov
sbb
int
and
movsl
jmp
mov
fistpl
les
lock
je
imul
mov
and
inc
pop
ret
cld
cmp
jmp
xor
sbb
lods
jp
leave
jg
sahf
inc
push
xor
jae
xor
les
in
pop
int3
loope
sub
cmp
out
push
cmp
mov
lret
fstl
and
xlat
in
dec
and
leave
mov
push
mov
lock
test
jle
and
dec
push
popa
push
movsl
and
jmp
adc
mov
pushf
es
test
pop
movsb
jmp
stos
in
shll
sahf
pop
lret
sti
cmpl
mov
shlb
mov
sti
jmp
sbb
lods
outsl
or
add
cld
jp
mov
xchg
cwtl
mov
xor
jae
addr16
in
in
mov
pop
mov
stos
imul
jl
pushf
enter
fwait
add
pop
fildl
adc
outsl
push
xchg
lock
test
push
movsb
add
or
adc
mov
lds
cmp
scas
adc
pop
out
and
das
pop
add
stc
adc
mov
das
fsubrl
mov
into
daa
sub
dec
roll
movsb
push
cs
shrb
adc
cmp
sbb
mov
sub
ja
cmp
dec
and
lcall
pop
int
mov
fisubrl
les
inc
lock
adc
jle
add
das
pushf
mov
push
test
mov
sbb
xchg
mov
jg
lock
lock
rclb
pop
and
xchg
push
mov
pop
paddsb
test
sub
mov
lret
pop
xor
scas
xor
mov
jbe
imul
aaa
pop
test
rep
daa
cmp
shl
sti
pop
and
and
inc
fbld
into
lock
xor
das
mov
jmp
jnp
lret
and
xchg
jmp
jl
dec
mov
mov
jmp
data16
loop
sub
out
xchg
pop
sbb
xchg
mov
mov
flds
stos
test
test
fdivrs
mov
in
mov
adc
insl
cmpsb
mov
imul
mov
aaa
push
sti
in
sbb
inc
cmp
and
mov
jmp
or
test
pushl
dec
movsl
movsl
lock
add
cmp
std
data16
seto
add
fsubrl
add
popa
push
cmpsl
aad
popa
cmp
shrb
sbb
sbbl
and
mov
xchg
jl
xchg
imul
pop
int3
add
fdivl
dec
sbb
rcll
icebp
cmpsb
cs
out
cwtl
stos
mov
or
jge
push
inc
xchg
mov
fnstenv
dec
adc
cmp
cmc
mov
mov
test
push
inc
jmp
adc
fisubrl
ret
aam
mov
aaa
inc
and
and
daa
fcomp
xchg
mov
pop
mov
fwait
cmpsb
jmp
leave
mov
outsl
sub
mov
and
jmp
mov
mov
call
push
filds
or
push
popf
bound
stos
sbb
paddsb
push
dec
jno
loopne
inc
add
inc
icebp
jbe
hlt
mov
pop
lcall
sti
lcall
push
push
loopne
test
inc
pop
mov
jl
adc
mov
sbb
insb
cltd
mov
and
lods
mov
dec
jno
fmul
cmp
and
mov
je
cmpl
mov
mov
cmc
cmp
mov
loopne
xchg
jns
sbb
sub
push
xor
inc
xchg
or
lahf
cmp
into
or
sbb
lds
adc
dec
push
cmp
and
push
pushf
sub
pop
aad
cld
mov
int
jnp
in
push
or
sbb
pop
cmp
mov
jmp
add
jo
jmp
sbb
mov
out
add
notl
adc
jp
ss
popa
mov
push
mov
jp
loopne
fwait
mov
mov
pop
and
sarb
hlt
es
add
jb
jmp
enter
jae
insl
inc
mov
subb
mov
inc
mov
imul
adc
dec
mov
add
scas
pop
inc
divb
cmp
sbb
push
push
lcall
fsubr
mov
adcb
andl
jnp
mov
fldt
jp
mov
jp
gs
and
lock
mov
dec
adc
pop
dec
sarb
mov
cmp
pusha
and
mov
les
pop
nop
jmp
adc
aad
inc
dec
cltd
mov
fsubrs
outsl
out
jmp
mov
mov
iret
aam
mov
xor
fwait
cmp
loopne
mov
jl
mov
ja
sbb
sbb
mov
test
push
shll
xor
cmp
xchg
or
push
sub
cmp
sbb
mov
or
push
dec
inc
roll
adc
push
push
and
aam
js
fistl
test
test
mov
mov
jae
aam
pusha
jmp
sub
cli
loopne
mov
aaa
mov
jno
and
stos
test
adc
push
andb
rcrl
scas
test
mov
add
es
mov
js
lea
roll
mov
lcall
inc
pop
or
mov
mov
lock
mov
imul
rorb
xchg
jnp
mov
imul
add
scas
mov
test
aam
inc
dec
mov
and
movsl
lods
lods
loopne
fwait
leave
mov
les
movsb
mov
or
shrd
push
or
jns
lods
test
sub
and
inc
adc
movsb
sbb
lock
dec
xchg
in
fsubrl
cld
div
xor
xchg
pushf
imul
lds
mov
fwait
mov
flds
and
or
lods
xor
xchg
mov
fdivrs
bound
in
xchg
push
xchg
std
cmpsb
inc
dec
sub
adc
jmp
cli
dec
test
es
in
sbb
inc
int
mov
popl
and
cs
adc
xchg
mov
mov
jbe
dec
push
stos
ret
jmp
roll
mov
mov
call
pop
mov
movsl
adc
jecxz
jle
mov
loopne
jae
das
je
fdivs
or
jmp
js
adc
mov
add
and
jne
pushf
lahf
mov
pop
movsb
xorb
xor
inc
cmc
out
sbb
lcall
mov
scas
out
ss
js
loopne
mov
mov
xchg
leave
lahf
daa
sbb
push
xchg
pusha
ficomps
mov
cmc
popf
xor
push
mov
push
pop
and
cld
jmp
into
push
lahf
sbb
xor
adc
cmp
add
xor
dec
mov
in
or
lods
sub
test
sarb
push
nop
out
mov
je
scas
jp
add
scas
std
lahf
pop
sub
dec
insb
xchg
inc
inc
lea
pop
bound
push
or
inc
dec
imul
lahf
imul
xor
es
jmp
pop
cmc
stos
mov
scas
test
mov
sbb
mov
pop
popl
aas
daa
imul
scas
and
adc
outsl
jp
jne
xchg
dec
aaa
call
dec
lods
inc
mov
inc
insb
jg
inc
imul
test
mov
or
sub
jmp
push
stos
int
call
fwait
and
sub
xchg
lock
pop
and
stos
aad
sarl
lock
stos
leave
adc
and
sub
out
adc
lods
mov
repz
add
test
adc
and
adc
xchg
lds
jns
mov
cmpsl
mov
test
mov
in
sbb
daa
lahf
xor
mov
frstor
xlat
jp
adc
in
jg
jae
dec
in
shrb
fs
pop
or
cmpsb
popa
dec
adc
sbb
mov
enter
lock
mov
fnsave
data16
jp
sahf
stos
and
cmpsb
arpl
adc
pop
cmp
jmp
jne
add
test
xor
mov
fwait
ja
addr16
xchg
add
jae
aas
icebp
and
jmp
mov
lods
icebp
mov
push
inc
jmp
sbb
in
call
js
pop
or
std
mov
nop
test
add
mov
mov
inc
cltd
or
out
or
stos
or
test
dec
mov
in
out
mov
jnp
nop
aas
dec
inc
mov
sub
fwait
lock
mov
xchg
inc
pop
out
cltd
mov
fnstsw
nop
fiadds
pop
inc
add
xchg
add
cmp
out
into
add
call
call
and
jne
gs
stc
das
mov
adc
cmp
popf
lcall
stos
inc
cli
push
mov
pop
mov
dec
jne
fs
jbe
addr16
sub
fwait
scas
push
or
sbb
test
push
xor
rorl
fistpll
aad
and
ret
imul
add
shlb
loop
fwait
inc
mov
jo
lret
xchg
arpl
push
data16
aam
fdivs
mov
xor
loopne
shlb
push
lret
fdivl
int3
push
sbb
add
xchg
mov
aam
push
dec
mov
inc
and
jno
xor
mov
arpl
or
xor
hlt
aas
and
call
out
push
inc
push
pop
mov
aad
addr16
leave
aaa
ds
xor
mov
sbb
cmp
mov
fwait
add
mov
inc
dec
push
or
or
data16
or
push
xchg
popa
test
in
cli
ficomps
popa
lea
dec
sub
jae
add
ret
cmpsl
dec
jmp
insb
loope
adc
xchg
insb
pop
jb
mov
and
lahf
xorb
jmp
push
ds
stc
cli
movsl
inc
lods
movsb
dec
cmpsl
sub
hlt
mov
pop
pop
daa
iret
adc
mov
shrl
out
sub
sbb
mov
push
mov
rcr
pop
lods
mov
addl
pusha
std
popa
inc
mov
lods
addb
in
cmp
fiaddl
and
lcall
or
sub
xor
dec
lcall
mov
lods
lods
loopne
sarb
cld
in
test
mov
aaa
sub
mov
inc
in
pushf
adc
adc
adc
cmp
sub
adc
fisttps
outsl
xchg
mov
sub
xor
cmp
jns
cmp
in
movsl
push
mov
test
sahf
push
jo
xor
push
add
cmp
ds
mov
out
imul
fnstsw
pop
dec
jno
outsb
sbb
in
pop
jp
dec
pop
mov
out
gs
lret
sub
xchg
dec
xor
jp
jmp
loopne
jo
test
mov
es
movsl
fsubrl
gs
sub
shlb
mov
enter
fwait
mov
and
and
fldl
add
mov
jnp
pop
stos
cmpsb
in
mov
jmp
sub
movsb
mov
pop
xor
mov
pop
xchg
scas
arpl
in
movl
rcll
ja
mov
in
sbb
add
fdivs
and
loopne
and
xchg
imull
xchg
aad
aaa
fdivrs
stos
add
adc
jns
popa
jg
mov
cmp
pop
jns
call
or
mov
jl
imul
jmp
lods
inc
pushf
mov
call
mov
sbb
dec
push
fldcw
sti
ja
lcall
jl
xchg
in
cmp
dec
sbb
mov
cwtl
xchg
dec
push
imul
dec
mov
push
shlb
jle
into
pop
mov
xor
stos
pop
dec
pop
les
cmp
cmp
mov
loope
jmp
in
rcrb
rcrb
push
imul
mov
movsl
mov
rorb
dec
scas
xor
jle
ret
shll
sbb
sub
mov
mov
popa
cs
mov
xor
lods
mov
jno
xor
add
fsubl
and
lea
test
add
test
movsl
push
cmpl
imul
inc
jl
ja
mov
push
arpl
cs
inc
inc
scas
adcl
cmc
sub
sub
jns
cmpsb
jmp
jg
call
mov
and
rcrb
fwait
jge
sub
cwtl
cmp
ret
mull
shlb
push
jns
test
jns
jae
inc
into
or
push
and
fadd
and
cmpsb
shlb
mov
mov
or
mov
in
inc
xchg
mov
lcall
cmp
jmp
bound
gs
loope
mov
ret
xor
pop
cmp
pop
gs
jae
push
shrl
outsl
lret
ret
mov
shrb
mov
mov
inc
pop
mov
xchg
stos
add
xchg
xor
sub
les
inc
sub
mov
and
aas
dec
imul
push
and
sub
shl
inc
cmp
push
inc
pop
jge
les
jge
jp
mov
scas
jl
or
or
adcb
cwtl
inc
add
ret
movsl
sbb
xchg
rcr
dec
push
cld
rorb
andb
xor
into
pusha
movl
idivb
lods
dec
xchg
test
add
loop
call
lods
dec
stc
jmp
adc
pusha
mov
dec
cmpsl
insl
xchg
xchg
movsl
jge
mov
inc
jmp
cmpsl
xor
ret
mov
mov
repz
stc
fwait
mov
sbb
xor
dec
xchg
pavgb
push
push
mov
in
mov
mov
test
inc
mov
xchg
xor
repz
pop
sbb
out
sbb
mov
popa
sbb
jns
pop
pop
cmpsl
mov
test
scas
in
rolb
dec
fbstp
insb
inc
rsqrtps
mov
xchg
fldt
lods
addb
clc
cli
sub
enterw
or
clc
xchg
pop
test
mov
adc
sbb
fadds
pop
xor
mov
rolb
imul
jmp
mov
mov
out
popf
mov
leave
movsb
sbb
cmc
push
mov
xor
or
push
xchg
pop
test
lods
jno
mov
cwtl
sbb
mov
pop
nop
mov
mov
rolb
jno
addr16
jmp
scas
scas
and
push
test
test
cwtl
scas
cmp
cmc
or
leave
sub
das
js
das
xor
sub
lret
dec
xchg
jo
push
or
and
pusha
lods
scas
test
andl
jno
sub
jmp
daa
mov
pop
bound
subb
mov
stc
subl
leave
jmp
stc
xchg
pop
test
std
dec
xchg
shll
scas
pop
nop
cmp
ret
pop
andl
jno
sub
jmp
daa
cmpsb
pop
sbb
shrl
inc
mov
sub
mov
lock
xchg
pop
test
mov
xchg
and
push
mov
imul
xchg
push
push
clc
xchg
mov
mov
fstpl
lcall
fistpl
or
xchg
mov
xor
mov
cmp
adcl
mov
or
imul
insb
sbb
xor
sar
sahf
mov
or
mov
sahf
scas
and
cmp
dec
jmp
insl
xchg
mov
pop
fsubs
mov
mov
and
push
rcl
jno
mov
enter
cmp
push
subl
fcompl
jmp
xor
mov
cwtl
mov
lret
fldt
into
jmp
pop
push
in
jns
jmp
div
xor
in
add
add
or
mov
pop
call
pop
pop
movsl
inc
add
and
rorl
mov
icebp
pushf
mov
push
cwtl
xor
imul
imul
pop
adc
and
inc
mov
mov
mov
cli
xorl
mov
push
lods
imul
pop
mov
sub
mov
mov
inc
sub
test
jo
inc
dec
outsb
ljmpw
add
xor
imul
mov
mov
mov
xor
xor
inc
gs
mov
mov
fs
sub
popl
add
and
cmpb
sarb
dec
sub
test
mov
sbb
ja
inc
inc
cmp
dec
iret
pop
lret
or
inc
inc
adc
inc
jp
and
jle,pt
pusha
or
jg
push
mov
cmp
or
cmpsb
cwtl
es
lods
lret
mov
in
sbb
pop
cmp
jo
mov
pop
mov
ret
mov
sub
adc
mov
sbb
mov
das
cmp
and
stos
dec
int3
add
lods
xor
or
lods
push
enter
aas
icebp
mov
int3
lock
cmc
push
rcll
dec
pushl
jbe
push
imul
test
pop
pop
cmp
in
jp
and
jbe
jmp
mov
popa
mov
daa
cwtl
sub
and
outsb
idivl
js
rorl
ljmp
jg
ljmp
fsubs
sub
loopne
cmp
xchg
and
sub
cmpsl
ret
in
xchg
cwtl
mov
xlat
in
pop
pop
jnp,pt
test
mov
fsubl
or
pop
aaa
mov
xchg
jg
dec
xchg
pop
cmp
sub
ret
lock
jo
das
adc
mov
mov
xlat
sbb
ret
in
mov
subb
cmp
inc
js
loope
add
cmc
fmull
in
fcomps
bound
and
lods
stos
daa
enter
mov
shlb
lret
dec
add
and
gs
pop
sub
sub
pusha
or
lea
jne
mov
imul
outsl
test
and
mov
cmpsb
dec
xchg
pop
fcompl
cs
cmpsl
fs
popf
popa
pop
pop
movsl
mov
sbb
lods
jne
push
into
mov
jae
sbb
jmp
roll
push
shlb
cmpsb
xorb
test
mov
mov
jmp
cwtl
pop
outsl
jns
jecxz
ljmp
lcall
lds
popf
idiv
xchg
mov
add
sub
rolb
sbb
outsl
lcall
adcl
sub
mov
int
pop
adc
mov
cmp
mov
add
push
int3
fadds
dec
dec
rorb
jb,pt
arpl
ss
xlat
inc
popa
xor
in
movsl
xor
cmp
in
aad
in
bound
mov
scas
dec
icebp
imul
mov
in
push
xchg
mov
rol
fdivl
fs
cmp
jmp
inc
or
jns
mov
mov
pop
lds
fbld
mov
call
insl
enter
inc
adc
hlt
adc
xchg
imulb
cmp
aas
jns
jmp
dec
ret
cld
sahf
lds
or
arpl
imulb
sbb
scas
adc
cmp
sub
pop
test
adc
imul
push
cwtl
sbb
dec
jns
cmpsl
movsb
sub
xchg
imul
mov
shlb
loopne
jl
lods
and
sbb
stc
mov
mov
mov
mov
inc
test
xchg
or
ds
in
or
adc
cmp
sbb
ds
sub
push
push
sub
sahf
dec
mov
sub
loop
mov
ret
sub
inc
push
and
mov
cmp
jns
lods
loop
repnz
sbb
lock
outsb
mov
jle
stos
mov
cmp
adc
add
mov
in
xor
lock
lcall
ja
cmc
pop
movsb
gs
xchg
cmp
jne
dec
cmpsl
lock
lret
mov
ret
mov
mov
mov
jmp
xlat
das
mov
push
subb
lcall
popa
lock
es
pusha
mov
adc
sub
sub
pop
fsubrp
pusha
add
dec
outsb
bound
xchg
ret
cld
inc
fwait
cmp
sarb
fisubs
rcll
ret
sub
inc
and
fdivl
mov
mov
push
cs
gs
sbb
cltd
add
movsb
push
hlt
enter
jae
add
mov
loopne
inc
dec
mov
aaa
mov
cmp
test
test
movsl
subb
fwait
in
popa
xchg
sti
test
adc
mov
adc
inc
inc
mov
and
stos
push
mov
loop
mov
adc
xchg
push
into
ret
insl
pop
inc
mov
and
pop
push
lahf
pop
or
punpckhbw
lock
push
jecxz
in
mov
cmp
xor
jb
push
fnstcw
test
mov
jbe
xchg
lret
pop
int
add
aaa
fnstenv
movsb
addr16
and
inc
inc
add
inc
lcall
gs
mov
inc
mov
pop
into
mov
mov
and
mov
pop
mov
inc
push
fdivl
add
cmp
inc
addr16
inc
mov
xor
jecxz
gs
mov
int3
xchg
rclb
pusha
mov
imul
pusha
and
or
int
and
inc
sbb
inc
js
or
sbbl
ret
pop
movsl
frstor
adc
dec
jp
in
add
mov
mov
scas
cmpsb
out
rcrb
adc
jae
lods
daa
push
dec
or
add
inc
cltd
ja
xchg
cmpsl
mov
lds
ret
jnp
inc
loope
js
shll
test
sub
fisubrs
es
movsl
mov
mov
cmp
imul
and
gs
or
cmp
jns
xor
test
push
stc
stos
pop
and
jl
cmovns
les
xchg
fcompl
cmpsb
xchg
daa
rcll
dec
sahf
movsl
mov
mov
push
pop
imul
lods
xchg
fwait
test
in
xchg
adc
inc
xchg
push
lock
pop
inc
jmp
mov
sub
jae
mov
leave
enter
cmpsl
not
in
mov
test
les
mov
ret
imul
stos
pop
sub
or
push
adc
imul
das
dec
inc
pop
inc
in
pop
jbe
push
and
inc
lods
enter
data16
es
sbb
addb
and
inc
ds
adc
fldt
mov
lret
inc
ds
push
hlt
adc
imul
xor
mov
dec
jg
push
mov
fwait
dec
cmp
pop
push
push
adc
fstps
mov
in
push
mov
mov
and
lds
lds
push
imul
adc
sub
mov
loop
stos
hlt
push
xchg
imul
or
inc
mov
mov
inc
sbb
push
sahf
cmp
xlat
pop
loop
cltd
les
pop
lahf
adc
fwait
jns
movsl
inc
fldln2
sbb
mov
mov
push
dec
xor
inc
movsl
sbb
cs
mov
scas
adc
jmp
je
mov
cs
stos
jmp
dec
sbb
sarl
imul
insl
std
imul
test
adc
shrb
cwtl
jmp
mov
mov
push
popf
xlat
lret
ljmp
dec
and
je
cmp
dec
add
jmp
cmp
and
push
enter
xor
lret
into
sbb
push
dec
dec
rorb
push
xorb
ja
nop
jmp
and
insl
dec
pop
inc
xor
mov
inc
xchg
mov
or
loope
insl
inc
aad
aas
mov
fwait
cltd
inc
lods
xor
xchg
cmpsl
mov
adc
fwait
mov
imul
sub
pop
cmpl
mov
mov
les
jbe
xor
insb
push
sbb
sub
mov
mov
and
rol
xchg
shrl
add
mov
cmc
mov
lahf
jg
mov
adc
inc
cli
jne
lcall
jp
mov
lahf
mov
push
xchg
stos
test
pop
aad
pop
push
loop
mov
pushf
pop
in
out
mov
cmp
sub
daa
nop
mov
cmpsl
cs
les
or
sbb
push
push
mov
inc
stos
jb
stos
out
sbb
shll
jno
lods
test
inc
mov
roll
call
push
xor
add
xchg
add
data16
cmpsb
and
movsb
lret
and
pusha
add
je
mov
dec
aam
inc
in
mov
mov
mov
dec
jmp
test
xor
add
stos
mov
mov
hlt
adc
push
movsb
lock
jo
sub
sbb
push
mov
cmp
push
mov
push
pop
fwait
push
mov
adc
cs
dec
mov
pop
sub
pop
mov
pop
sbb
and
pop
lret
shlb
fwait
mov
loopne
iret
cmp
adc
jmp
cmc
pop
sub
mov
out
jle
adc
mov
sub
dec
dec
sbb
lcall
sub
fstpt
mov
or
ljmp
pushf
popa
sbb
aam
js
test
lret
sbb
mov
add
mov
lock
int3
sbb
cwtl
in
shlb
fsubrl
ljmp
jmp
push
dec
push
test
pop
les
jb
sub
pop
cmp
rcrl
inc
or
sbb
daa
pop
stos
stos
lods
mov
adc
mov
and
aas
and
scas
sti
xor
popa
scas
in
add
xor
stos
test
stos
xchg
jmp
clc
lock
mov
dec
xor
lds
mov
add
test
mov
mov
jbe
dec
sub
cmp
xor
cmp
mov
adc
cmp
mov
push
loopne
in
inc
lahf
adc
push
aam
jmp
pop
cli
mov
xchg
es
cmp
lods
stc
jnp
shll
push
jne
sbb
cmp
test
mov
mov
mov
xorb
and
les
mov
out
dec
pop
mov
jns
lahf
lods
mov
jae
sbb
sbb
fcoml
fmulp
mov
fidivl
jae
cmp
test
ret
inc
inc
scas
fcoms
dec
scas
stos
into
mov
xlat
mov
loopne
nop
ret
sub
xor
mov
pop
xorl
sub
sub
adc
lret
gs
out
lcall
jno
mov
push
mov
rolb
lret
test
iret
imul
bound
jp
adc
divl
sub
lods
enter
imul
push
and
dec
push
and
loopne
pop
mov
sub
xchg
cmp
or
fwait
aad
jmp
fisubs
mov
dec
les
ficoms
lea
loop
stos
dec
daa
mov
adc
cltd
pop
and
pop
cltd
inc
mov
mov
into
mov
hlt
jo
out
cmpl
ds
ss
mov
lods
ret
je
outsb
adc
push
jnp
cmp
adcb
int3
mov
shr
xchg
aaa
dec
sti
jno
call
add
inc
scas
inc
stos
mov
pop
add
xchg
add
ret
pop
bound
adc
daa
es
xchg
jge
inc
mov
ret
orl
sub
loop
mov
pop
imul
cmp
jbe
add
dec
ljmp
cmp
mov
sbbb
jae
iret
cmp
insl
mov
sub
push
pop
fxch
stos
movsl
mov
pop
xchg
out
sub
mov
ljmp
pop
das
cltd
pop
pop
xchg
cld
out
shrb
add
fdivl
pop
scas
popa
mov
push
leave
fildl
jno
dec
and
and
pop
incb
lods
cmp
and
adc
les
sbb
sbb
and
sub
lods
inc
inc
je
outsl
push
movb
jno
mov
test
pop
jb
pop
lret
cmp
fimull
aas
lahf
sbb
rclb
cmp
sbb
and
std
mov
lcall
xchg
dec
pop
js
test
je
cmp
jmp
iret
pop
jne
mov
cmp
test
test
adc
out
loopne
movsl
jo
aad
sbb
push
rcll
stos
xor
pop
pop
push
jb
sub
jmp
sub
rolb
scas
sub
cli
fdivrs
lods
mov
mov
ret
xchg
mov
dec
in
cli
repnz
rcrl
mov
bound
popf
push
pop
aas
sub
inc
mov
add
in
cmp
movsl
fcompl
lds
mov
in
cmp
les
push
out
mov
inc
outsb
dec
mov
mov
lea
sub
cmpsb
sbb
inc
mov
stc
add
jo
lahf
iret
mov
dec
ljmp
into
lret
outsl
mov
cmp
pop
test
shll
dec
in
inc
mov
mov
xor
call
mov
in
test
mov
fiadds
in
scas
mov
xor
dec
inc
mov
loop
pop
ret
cmp
into
inc
add
mov
jmp
dec
rorb
icebp
jecxz
jnp
pop
push
mov
bound
fwait
push
dec
sbbl
aam
js
js
pop
add
in
adc
jmp
stc
add
insb
pop
ja
in
mov
stos
add
lods
xchg
jle
jbe
xchg
xchg
mov
mov
pop
fdivp
cmp
mov
cmp
push
mov
pusha
stos
test
mov
mov
sub
jno
les
aas
cmp
dec
lret
or
popa
inc
mov
cmp
es
pop
push
fwait
dec
pusha
jle
xor
pop
xlat
or
and
dec
mov
dec
and
mov
jmp
pop
lock
cmpsb
cmp
movsb
sbb
aaa
mov
cmpsl
lahf
int
es
mov
lock
mov
and
adc
jo
pop
inc
mov
push
test
push
lock
dec
mov
ret
pop
dec
idivl
cmp
shlb
add
mov
mov
ret
fidivrl
nop
mov
cltd
mov
lods
mov
test
mull
stc
imul
fadd
sub
cmpsl
int
and
mov
inc
xchg
mov
notl
adc
xor
in
lcall
pop
in
popa
push
dec
testl
das
lods
sbb
rorl
jmp
pop
xchg
lods
cmp
pop
not
inc
mov
jno
cli
int3
lods
mov
xor
scas
jle
jb
jnp
pushf
dec
pop
clc
cmpsl
mov
scas
addr16
xchg
divl
jle
lret
in
push
sub
jne
imull
jp
mov
jb
rorb
lcall
mov
sbb
int3
cmpsb
sub
insl
les
jmp
cmp
pop
adc
test
test
rcr
aas
mov
daa
mov
inc
push
cmp
movsl
pmuludq
insl
movsb
aam
fidivrl
pop
les
inc
imul
mov
and
mov
sbb
stos
lahf
cli
push
testb
mov
dec
and
mov
int3
sub
inc
lret
or
movsl
lret
mov
dec
jmp
jg
push
cs
fwait
sbb
xchg
insl
hlt
std
inc
cmp
jno
sub
push
addr16
lock
and
sbb
lret
clc
xor
dec
sti
divb
sbb
mov
push
xor
sub
jmp
or
xor
mov
jo
sub
sub
jo
cmpsl
dec
mov
mov
sbb
mull
sti
in
movsl
push
sbb
xchg
pop
jp
pop
pop
mov
dec
pop
cmpsl
and
sbb
pmaddwd
andl
mov
sbb
lds
test
mov
subl
or
enter
push
jne
std
and
adcb
push
mov
push
fwait
mov
xor
mov
fucomi
inc
ret
sub
sbb
push
dec
imul
repz
lock
stos
mov
loopne
lcall
mov
pop
mov
mov
test
mov
lock
enter
and
jg
movl
das
mov
test
cld
mov
dec
cmpsb
in
inc
inc
lret
inc
mov
lock
dec
pop
lods
arpl
divl
sbb
scas
stc
pop
fistpl
push
lea
mov
das
jp
inc
scas
xchg
jno
jge
dec
popa
arpl
mov
cmpsl
sar
ja
pop
sub
adc
gs
scas
imul
sub
hlt
push
sbbl
xchg
or
cwtl
lret
mulb
fsubp
cmp
mov
and
and
scas
inc
xchg
mov
xor
inc
cmp
js
adc
cmpsb
js
insb
mulb
movsb
rcrb
sub
inc
xor
xchg
mov
dec
or
xor
inc
les
mov
rcll
inc
xorl
cmp
stos
add
movb
stc
xor
hlt
fisttpll
sbb
fisubl
subb
or
mov
jb
loope
mov
jmp
add
dec
fmull
mov
inc
inc
fidivrl
dec
jl
mov
pop
mov
jmp
fwait
xchg
lahf
rorb
das
dec
shll
cmp
popa
sbb
dec
sub
cmc
mov
loopne
fwait
pop
shr
or
sub
push
lods
push
xchg
ret
xchg
sbb
lds
call
xchg
inc
add
pop
sub
jmp
fnstsw
add
pop
das
xchg
lahf
in
scas
mov
push
loope
dec
sti
cwtl
sbb
test
push
inc
mov
mov
mov
mov
sub
mov
add
rolb
rclb
mov
mov
mov
push
movsb
mov
insl
push
es
lcall
rcrl
into
rclb
sub
xchg
fwait
xor
call
or
out
pop
pop
data16
imul
test
fsubs
stc
add
in
test
jno
ljmp
push
cld
pusha
dec
subl
inc
sbb
inc
imul
mov
and
add
sbb
popf
nop
push
in
sbb
mov
lahf
cmp
mov
pop
jmp
mov
daa
sub
adc
ja
fs
or
push
push
negl
push
les
dec
cmp
pop
mov
aaa
pop
mov
arpl
mov
paddb
jae
lods
sbb
inc
fwait
lahf
shlb
lcall
and
cmp
out
sub
xor
and
addr16
xchg
lcall
ficoms
call
cltd
lcall
inc
mov
dec
inc
js
mov
sbb
sub
cmpxchg
xchg
mov
mov
and
fs
lods
das
inc
jmp
pop
stos
js
xchg
pop
pusha
cwtl
mov
test
cmpsl
lds
dec
mov
and
xchg
dec
dec
cmpsl
xor
sub
popa
xor
les
jmp
inc
adc
pop
mov
lcall
mov
and
stos
xlat
test
xor
fcoms
sbb
rclb
imul
outsb
arpl
sbb
dec
dec
xchg
lods
loope
fstps
inc
xchg
ljmp
mov
roll
orl
movsb
mov
pop
sub
adc
stc
jbe
mov
sbb
stos
adc
jmp
mov
in
dec
sbb
fwait
mov
divl
fldl2t
fdivr
int3
adc
pop
and
fwait
and
sbb
lods
icebp
inc
jmp
inc
mov
out
push
xchg
push
mov
mov
imul
xchg
lahf
jnp
jmp
cmp
push
sbb
stos
sbb
xchg
cwtl
mov
inc
mov
out
cmpsl
sbbb
push
scas
or
ret
lds
and
mov
std
push
fstl
lea
popa
addr16
adc
fildll
outsb
xor
sbb
mov
scas
dec
inc
inc
out
mov
inc
pop
push
das
xchg
sub
popa
shufps
jg
add
mov
mov
pop
sbb
inc
ljmp
shrb
ja
cld
stos
dec
icebp
mov
rclb
pop
fwait
insb
xor
sub
xor
jno
fld
dec
mov
shll
push
popa
hlt
aam
xchg
jp
stos
inc
push
sti
scas
loopne
shrb
pop
jnp
xchg
cmpsb
jmp
cmpsb
xor
push
fstpl
fidivrs
mov
mov
mov
scas
lods
shlb
pop
cmpsl
sbb
stos
das
mov
and
dec
flds
aad
daa
inc
loopne
dec
imul
test
popa
ja
pushf
xchg
and
or
push
ja
push
rclb
cmp
mov
xchg
inc
aam
imul
aas
mov
add
mov
push
fidivrl
les
repnz
inc
lcall
movsl
jg
pusha
sbb
imul
adc
out
pop
mov
lahf
mov
dec
sahf
js
outsl
inc
jmp
mov
jl
cmp
adc
idivl
sbb
adc
xor
daa
lea
jnp
pop
mov
or
xchg
sub
jg
test
int3
mov
sbb
sub
mov
inc
push
gs
sbb
cmp
jge
stos
ficomps
adc
mov
lods
cmp
add
sahf
xchg
add
and
mov
lods
test
mov
dec
cmp
enter
adc
mov
in
mov
cs
lods
mov
lods
icebp
bound
out
add
imul
xchg
ja
cmpsl
add
push
and
adc
stc
mov
dec
icebp
inc
sub
popa
jmp
les
mov
push
mov
sbb
jae
fsubs
pop
scas
sbb
dec
cmp
xchg
es
insb
cmp
and
jmp
sti
cmpsb
cmp
lea
xor
xor
cmc
mov
xor
aaa
ljmp
lcall
mov
mov
das
push
insl
inc
adc
mov
push
xchg
mov
adc
push
xchg
daa
mov
inc
cmp
stos
xor
loope
mov
and
arpl
ja
movsl
shrb
xor
test
jo
mov
sbb
xor
sub
sbb
stc
sub
jns
pop
icebp
adc
stos
sbb
test
cs
dec
aaa
mov
jno
cmp
in
sbb
cli
pop
cmpsl
mov
in
sbbl
gs
jg
mov
addb
jo
sub
push
leave
mov
inc
lea
rcrb
xchg
test
inc
js
xchg
mov
movsl
pop
mov
mov
cmpsl
lahf
popa
mov
fidivrs
xorl
mov
jmp
add
test
cmc
in
daa
lods
xchg
lods
or
xchg
es
lods
inc
jmp
adc
inc
test
sbb
pop
dec
cmpsb
xchg
loopne
or
inc
shl
mov
push
jno
sbb
test
lock
in
mov
jne
dec
mov
cmp
push
push
mov
sbb
jb
cltd
stos
lcall
loopne
cmc
mov
scas
adc
loope
and
stos
push
test
or
ja
fcoml
lcall
and
cmpsl
in
mov
nop
sarb
xor
out
jno
push
cmp
ss
sbb
testl
pop
inc
out
fs
mov
ret
xchg
cmpsl
shlb
aaa
imul
xor
push
lock
rdpmc
mov
jb
mov
pop
mov
mov
cmp
clc
imul
lds
push
mov
jg
pop
inc
and
jmp
mov
stos
cli
dec
mov
mov
xor
test
cwtl
lea
aas
stc
sti
cld
cltd
pop
jmp
dec
test
cltd
mov
add
inc
jmp
in
mov
cmpsb
jmp
pop
aad
jp
dec
rcl
push
push
leave
jmp
mov
jmp
inc
movsl
cmp
scas
addl
lds
rcrl
sub
pop
sub
daa
xchg
testl
pop
pop
mov
or
xchg
jmp
sbb
adc
scas
jae
dec
lods
cmpsb
pop
xor
xchg
sahf
adc
mov
insl
outsl
sub
and
mov
mov
cmp
mov
inc
mov
mov
mov
mov
jmp
int3
ror
loopne
fldz
inc
inc
pushf
sarl
cs
stos
mov
xlat
sbb
jmp
inc
stos
or
rcr
sbb
fs
dec
movsl
stos
pop
inc
mov
pop
jmp
or
popf
or
push
fstp
sub
clc
mov
jl
fldt
test
mov
call
int
mov
pop
std
mov
loop
inc
and
mov
sbb
mov
rorb
cmp
jno
inc
popa
clc
in
sbb
sbb
movsb
or
xchg
sub
or
xchg
test
jge
ret
js
mov
cmp
ret
mov
imul
data16
fidivrl
mov
inc
fwait
push
enter
add
jae
sub
adc
outsl
push
jne
sti
pushf
leave
sbb
mov
movsl
xor
sbb
aaa
mov
movhps
scas
pop
sub
inc
inc
add
inc
dec
dec
ds
sub
jg
arpl
test
imul
pop
lret
shrb
negb
mov
mov
pusha
push
in
cmp
and
inc
push
addr16
outsl
jmp
or
pop
jg
inc
mov
loop
nop
fistpll
js
xor
adc
dec
arpl
xorb
cs
mov
and
dec
aas
inc
les
divb
pop
popa
lret
xchg
lods
mov
mov
test
mov
mov
aam
mov
inc
push
sbb
ja
inc
addr16
movsb
sahf
mov
lcall
jl
dec
int
sbb
sbb
pop
int3
inc
dec
push
andb
or
inc
shll
fbstp
sti
pop
dec
cmpsb
dec
adc
cmpl
push
mov
push
mov
shrb
mov
ds
int3
xchg
movsl
adc
call
sub
fwait
xor
stc
mov
sbb
clc
insl
add
push
imul
xlat
dec
popa
pop
iret
bound
cmp
pop
adc
cmp
aam
sbb
rolb
sub
sbb
rep
ror
mov
and
sub
jmp
inc
xor
scas
inc
mov
inc
mov
cmp
or
scas
test
pop
mov
or
daa
xchg
jle
cmp
lock
imul
dec
add
aam
scas
into
lcall
adc
or
inc
aas
test
int
and
mov
test
rol
das
stc
rclb
imul
dec
sti
iret
lods
and
gs
in
pop
and
in
jl
shl
shlb
inc
cmp
pop
into
pop
lcall
mov
add
scas
mov
mov
inc
mov
mov
pop
test
icebp
pop
and
xlat
adc
fwait
outsl
testl
sub
fisubrl
pop
loop
aaa
shll
stos
dec
jmp
mov
xchg
jge
jbe
push
loope
inc
mov
mov
cmp
shrl
adc
in
inc
out
dec
xor
stos
lea
and
das
imull
inc
or
pop
arpl
lret
leave
pop
xchg
xor
dec
pop
cli
sahf
xor
neg
mov
ljmp
inc
imul
mov
mov
flds
sub
or
cwtl
mov
lock
call
test
stos
xchg
test
stos
mov
xor
mov
mov
jnp
xor
and
mov
inc
inc
test
std
mov
xchg
sub
mov
jmp
push
mov
in
or
lock
mov
sub
clc
rcrb
les
xor
cld
xor
aam
mov
mov
jmp
xchg
push
pop
cmp
push
xchg
mov
sti
xchg
in
mov
fidivrs
jmp
rcrb
sub
scas
adc
mov
add
sbb
mov
and
mov
xchg
pop
mov
inc
or
sub
cmp
mov
ficoms
adcb
dec
cmp
or
sub
sarl
test
push
xor
sub
mov
and
test
jmp
push
jl
and
pop
fnstsw
loop
dec
aam
stos
into
mov
mov
cmp
mov
mov
xor
cmp
inc
jmp
and
add
testl
mov
mov
loop
loopne
pushf
push
or
stos
roll
fistpll
mov
sub
mov
mov
lods
sub
fisubrl
and
daa
dec
xchg
es
imul
mov
mov
ljmp
xchg
inc
imul
and
mov
stos
xor
data16
rcrl
mov
xchg
das
scas
test
decb
dec
sub
lret
sbb
test
and
in
rolb
test
inc
dec
xchg
imul
and
dec
mov
incb
cmp
es
jbe
pop
mov
scas
sbb
arpl
sub
mov
dec
jg
cltd
xchg
cwtl
inc
cmpsb
lahf
dec
fwait
xchg
mov
movsl
subb
packsswb
inc
js
imul
cmp
mov
sub
pop
popa
nop
sub
dec
popa
jl
or
sbb
and
mov
lods
sub
xchg
xor
aaa
mov
sub
lahf
mov
mov
xor
mov
jmp
lods
stos
xor
adc
das
aam
sub
push
and
inc
je
inc
sub
test
dec
sub
xchg
or
sbb
out
inc
test
fsubr
cwtl
stos
pop
movsb
inc
stos
fdecstp
push
int3
and
adc
enter
stos
lcall
icebp
aaa
jnp
adc
in
lret
inc
cmpsl
mov
fidivl
inc
test
mov
jbe
jge
mov
cmp
sbb
pop
mov
add
push
cmpsl
add
xchg
stos
lret
lret
call
sub
fnstenv
xchg
xchg
inc
pushf
ds
fnstsw
movsl
movsl
mov
pop
aaa
cmp
stos
push
mov
mov
xor
pop
adc
pop
cmc
das
dec
arpl
or
data16
pusha
push
mov
and
icebp
mov
mov
rorb
loop
rclb
pop
mov
outsl
ljmp
ret
popa
jb
mov
adc
imull
mov
sbb
imul
test
add
shrb
sbbl
mov
loope
push
imul
jns
popa
xor
enter
or
scas
add
bound
mov
dec
push
in
pop
dec
mov
pusha
lods
mov
adc
sbb
daa
cmp
daa
js
xor
dec
cmp
mov
and
mov
push
jo
jg
popa
sarl
popa
dec
aaa
mov
jmp
aaa
aad
adc
pop
lods
mov
stc
mov
push
pushf
pop
xlat
pop
xchg
jmp
movsl
mov
mov
inc
into
sub
sbb
mov
mov
mov
dec
cmp
lock
inc
inc
mov
arpl
test
mov
dec
cmp
inc
in
mov
jg
rolb
call
pop
xchg
movsl
xor
mov
addr16
push
dec
cs
test
dec
add
mov
and
push
in
repnz
or
outsl
sbb
gs
loop
mov
adc
popa
mov
je
jmp
mov
mov
cmp
popa
adc
jno
in
loope
sub
inc
pop
outsl
es
ja
jno
call
test
jmp
jbe
jno
outsl
jmp
pop
push
ffreep
out
stc
xchg
movsb
in
and
inc
xor
pusha
lock
add
cmpsl
sub
jns
call
fsts
mov
int
lods
xorl
pop
jo
loopne
xchg
ljmp
lret
jge
daa
and
xchg
mov
rorb
jmp
or
cmc
mov
mov
cmc
dec
jmp
movsl
or
add
dec
sub
cmpsb
push
mov
insb
pop
cmp
imul
xor
or
push
daa
cmp
xchg
cmp
sbb
daa
push
sahf
adc
xchg
jno
adcb
stc
cmpsl
ficomps
fstps
pop
sbb
es
rcll
push
ljmp
mov
cmpsl
inc
add
cld
inc
inc
push
push
jmp
ret
out
mov
add
hlt
lock
lcall
xor
out
mov
dec
lcall
in
and
mov
sbb
fcoms
xchg
in
lcall
loopne
jne
sahf
dec
adc
jmp
inc
shll
es
cmpsb
call
test
cmp
lock
or
ljmp
pop
outsb
dec
cmp
stos
cmpsl
in
xchg
xor
enter
fcmovbe
xchg
mov
mov
int
and
imul
push
test
xchg
scas
dec
jae
cwtl
out
addr16
mov
aaa
cmp
pop
and
or
stc
mov
jo
lcall
xor
es
jmp
dec
call
jmp
push
jp
mov
cmp
or
aas
test
mov
fisubl
popa
xor
stos
add
xlat
mov
test
mov
arpl
mov
ljmp
cwtl
adc
xor
pop
push
gs
mov
das
xor
mov
and
pop
xor
xchg
push
orb
aas
push
stc
mov
into
les
push
mov
stos
pop
cwtl
lret
and
imul
dec
mov
psubw
notl
mov
mov
pop
call
inc
into
inc
adc
gs
jl
call
hlt
test
in
add
fucomi
fs
mov
ficompl
loop
inc
pop
icebp
dec
lods
subb
aam
dec
imul
xor
mov
orl
lods
jo
or
imul
xchg
jns
nop
mov
push
cmp
xor
lods
sub
push
popa
xchg
int3
dec
shlb
fidivrl
loope
loope
shlb
test
add
cld
iret
imul
adc
ja
in
pop
adc
pusha
test
add
js
pop
aaa
add
push
ret
mov
stc
mov
xchg
jle
inc
push
cmp
test
dec
sar
jl
pop
inc
xchg
or
add
dec
push
inc
mov
movsl
shrl
inc
push
mov
or
dec
pop
mov
jae
push
cmp
and
test
sbb
ficompl
cmovae
aas
lds
movsl
lods
cmp
jne
inc
dec
adc
sbb
dec
and
cmp
flds
add
jnp
sbb
sub
push
imul
add
subb
or
sti
cwtl
push
lcall
and
aaa
and
movsl
mov
pop
pop
shlb
cmp
jno
lods
mov
mov
and
ljmp
mov
fwait
pop
push
inc
sub
pop
stc
daa
pop
sub
mov
and
pop
xor
lock
in
lods
inc
inc
sub
shlb
mov
xchg
pop
mov
loope
ds
cmp
mov
rolb
inc
jmp
fwait
sub
dec
sti
sbbl
aam
mov
inc
fdivr
lcall
test
jg
mov
cmp
enter
add
bound
dec
mov
dec
dec
push
out
lods
mov
andl
je
jns
mov
push
push
cmp
arpl
mov
push
pusha
sub
jne
mov
mov
enter
add
jmp
testl
mov
lods
adcb
mov
push
imul
mov
jno
adc
jb
and
jb
mov
and
stc
jl
sub
adc
mov
and
lea
mov
sbb
cmp
mov
loop
or
lods
fcoms
jmp
pop
lods
out
mov
enter
fwait
out
outsb
cmp
bound
mov
jno
xor
xchg
inc
hlt
sahf
leave
xor
in
xchg
fistps
mov
pop
mov
dec
cli
daa
pop
pop
sti
shrb
fs
fists
jle
stc
cmpsb
jmp
mov
push
mov
cmpsb
in
pop
cs
or
stc
call
mov
pop
cmp
inc
fldcw
ret
xchg
psrad
insl
shrb
sbb
and
xor
cltd
dec
dec
test
loopne
es
cmp
mov
xor
or
cmp
mov
imul
inc
mov
cli
cmp
gs
aas
mov
or
inc
fsub
dec
dec
outsl
cmp
and
stc
pop
xor
fcmovne
adc
xor
loop
push
ja
mov
andl
push
xor
fimull
in
jmp
aaa
fsub
mov
xor
add
fisubrl
sub
jns
shrl
xor
push
stos
sub
push
xor
inc
daa
push
cltd
stc
pop
in
nop
jns
movsb
les
les
inc
stc
cmpsb
fldcw
adc
sub
jns
mov
xor
cmp
pop
jne
inc
lds
cmovne
or
mov
imul
movsb
xor
dec
enter
incl
pop
fs
stc
lret
inc
sub
inc
jo
pop
push
dec
mov
add
mov
push
cmp
mov
jmp
sahf
xor
jb
and
lods
mov
cmp
jl
pop
cld
aam
stos
mov
subb
mov
aam
mov
inc
mov
push
and
sub
jmp
data16
mov
sub
dec
lcall
repnz
imul
dec
es
pop
sarb
xorb
int3
js
jg
loopne
sbb
ss
lret
mov
add
stos
push
lret
jmp
lea
lods
lahf
imul
fstpl
insl
xor
stos
jmp
sbb
test
sub
or
pop
mov
pop
repnz
sub
sbb
or
cmp
sbb
aam
cmpsb
sti
sub
or
mov
pop
sbb
lret
jnp
jne
add
and
cmp
lcall
pusha
inc
jmp
sbb
sbb
push
fidivs
cmpsb
or
or
cmp
mov
sub
icebp
popf
shlb
xchg
mov
sub
in
inc
popf
cmp
xor
cli
cmp
jne
add
pop
test
pop
test
mov
shrb
gs
cmpsb
sbb
insl
xor
xchg
push
mov
lock
inc
test
xchg
cltd
lea
sbb
rcr
in
test
adc
jge
mov
icebp
inc
inc
adc
xor
mov
lock
mov
scas
mov
mov
cmc
lds
rorl
sub
rclb
push
pop
adc
fwait
cmpb
rcl
es
fwait
je
add
fidivrs
insb
les
sub
movsl
cmp
adc
jge
ret
call
adc
fwait
inc
stc
jo
in
cmp
insl
fdivs
push
inc
aaa
inc
test
or
mov
test
pusha
pushf
lods
sahf
inc
sbb
pop
sti
push
in
inc
jge
in
push
inc
fdivrs
icebp
lods
lcall
clc
jne
out
cmp
f2xm1
popf
inc
arpl
and
repz
repz
sub
addl
rcrl
test
ljmp
xchg
fwait
andb
imul
test
js
add
and
cli
xor
setl
or
lods
sbb
lock
rep
lds
cmp
sti
xchg
adc
sub
mov
stos
lds
leave
sarl
mov
mov
sbb
clc
or
mov
mov
addr16
xor
jnp
test
jg
push
cmpsl
addr16
sahf
jmp
into
mov
jmp
mov
fs
mov
lock
xchg
lock
or
rclb
xor
mov
clc
xor
adc
cmp
addr16
rclb
mov
lret
push
repnz
dec
or
insb
out
push
dec
fwait
push
jmp
mov
ja
scas
pushf
movsb
out
loop
in
call
dec
sub
inc
lea
push
imul
aas
cmp
stc
fdiv
mov
shlb
cmpsl
cmp
ret
mov
sub
dec
pushf
adc
adc
test
scas
lea
sub
dec
adc
aam
icebp
sbb
pop
aam
add
jge
dec
pop
cmp
pushf
mov
scas
jmp
movsb
cmpsl
cs
mov
or
sbb
in
sbb
ja
mov
sti
sbb
cmp
sbb
int
aas
outsl
mov
imul
xlat
stos
inc
and
sbb
aad
jge
es
mov
push
in
fldenv
jns
insb
inc
ficompl
or
aam
inc
mov
rcrb
add
mov
ja
out
xlat
jae
lods
mov
cmp
cmpsb
out
rcrb
dec
xor
movsb
cmp
add
ficoms
xor
mov
mov
leave
mov
cmpsl
xchg
iret
dec
movb
daa
xchg
dec
or
pushf
out
add
stos
movsl
cmpsl
inc
dec
sbbl
inc
cmpsb
xor
cmpsl
xchg
dec
mov
stc
stos
testl
cmp
adc
stos
sti
les
in
into
adc
popa
in
mov
rcll
jmp
mov
test
mov
xor
inc
fcmovbe
xor
mov
and
push
dec
dec
and
pop
cmp
and
icebp
mov
push
and
pop
cmp
mov
cmp
call
mov
lahf
xchg
repz
cld
pop
les
mov
movsl
pop
mov
addl
mov
jmp
jmp
test
into
push
jne
mov
lcall
popf
xlat
jae
into
sub
in
or
jl
and
sbb
cmpsb
fs
iret
cmc
testl
das
rorl
sbb
jo
mov
mov
push
fs
mov
mov
and
pushf
pop
mov
add
mov
fcmovne
into
lea
inc
pop
xlat
or
fnstcw
pop
mov
loopne
pop
jno
popf
inc
mov
or
mov
mov
insl
lods
lock
mov
test
mov
icebp
lods
jns
aaa
lea
push
push
sub
mov
aaa
and
stc
mov
add
jno
add
leave
mov
insb
pop
mov
jecxz
andb
sbb
pop
xchg
sahf
adc
dec
stc
pop
mov
cmp
cmp
pop
inc
add
or
into
push
into
aas
jle
push
pop
ja
sub
adc
std
xchg
xorb
adc
xor
or
mov
mov
mov
dec
imul
jp
ja
pop
and
xchg
test
test
jae
add
jmp
outsb
das
mov
xorl
sub
adc
sbb
shl
int
fldt
jmp
mov
adc
sbb
jg
fwait
pusha
dec
arpl
mov
jmp
lock
xchg
andb
fcomps
jne
jb
loop
sbb
push
pusha
lods
lock
mov
dec
stos
notl
flds
add
pop
into
xchg
faddl
sbb
mov
or
loopne
dec
mov
lock
or
ss
dec
outsl
dec
sbb
inc
adc
stos
test
cmpl
push
inc
jge
sub
test
add
pop
movsb
push
xor
inc
jg
clc
or
adc
jl
nop
stos
jl
jae
dec
xor
ret
stc
mov
inc
jne
cmp
aad
mov
mov
sub
push
cmpsb
aaa
sub
pop
inc
inc
movsb
add
inc
test
pop
add
fsubrl
shr
fbld
push
dec
lods
rolb
jge
sub
stc
mov
das
sti
in
movsl
rcrb
aad
push
inc
icebp
cmp
movsl
and
dec
mov
ja
ds
mov
mov
push
xlat
mov
sub
or
or
sub
inc
orb
jne
mov
mov
popa
lods
jmp
test
orl
popf
out
sub
imul
icebp
stos
test
into
shlb
cmovae
subl
xchg
into
jp
inc
in
fldenv
fisttps
aaa
mov
test
dec
dec
stos
sbb
and
adc
pop
xor
into
dec
les
xor
mov
mov
mov
pop
arpl
cmpsl
pop
movsl
fisubs
sbb
cmpb
fdivrl
out
into
ret
pop
test
jae
test
xor
dec
mov
mov
rcl
push
mov
mov
cmp
push
or
mov
mov
pop
aam
pushf
and
loope
movsl
add
shrb
loope
jmp
push
push
dec
pop
and
jl
pop
enter
mov
scas
push
push
roll
call
stos
pop
push
sahf
in
pop
sub
cmp
insb
loope
jl
push
ja
mov
xchg
gs
movsb
cmp
aaa
mov
adc
aam
aaa
stc
lret
dec
or
mov
push
bt
cmp
mov
mov
cmp
xor
mov
mov
scas
pusha
jle
in
cmp
les
adc
mov
inc
mov
jg
sbb
repz
mov
lods
cmpl
jmp
xor
les
arpl
push
cmp
test
dec
pop
mov
insl
sti
or
cmp
mov
popa
pusha
outsb
lods
inc
arpl
sub
mov
sbbl
mov
pop
imul
ret
test
das
push
jp
xchg
stc
pop
mov
aad
outsb
pushf
and
push
test
sub
dec
scas
std
in
test
mov
pop
cld
ficompl
add
lcall
xor
lods
shrb
dec
lods
loopne
push
and
dec
sub
sti
and
jb
mov
pop
jg
mov
bound
pop
shlb
push
mov
lock
lods
mov
xor
mov
iret
xor
jecxz
mov
into
add
dec
lcall
mov
aaa
sub
adc
scas
stos
push
adc
inc
not
rorl
in
pop
lods
fsubrs
sbb
scas
jo
or
sub
lds
idivl
in
mov
add
sbb
mov
push
lret
xchg
shr
push
daa
mov
faddl
fdivs
sbb
xchg
repnz
adc
popf
sbb
or
pop
add
jmp
inc
sub
repz
insb
mov
ss
inc
cmp
imul
add
dec
sahf
push
mov
cmp
iret
dec
mov
enter
aaa
lahf
inc
jns
out
jmp
gs
push
xchg
aam
das
cld
jmp
js
xor
mov
xor
aas
xor
sub
xchg
jno
push
stos
imul
jmp
xchg
sarb
cmp
fwait
mov
cmp
dec
xchg
in
mov
cmp
in
xor
dec
rolb
insl
test
dec
inc
adc
fildl
xchg
insl
ss
das
scas
mov
stos
mov
mov
negb
ficoms
outsb
pop
mov
and
push
and
jge
fidivrl
movsb
test
or
inc
xlat
test
jmp
scas
repnz
cmpsb
insl
stos
inc
in
mov
fisttpll
sub
into
mov
mov
or
inc
or
movsl
ss
mov
testl
or
dec
scas
add
pop
movsb
arpl
inc
frstor
test
inc
or
lret
fldl
movb
push
inc
stc
rol
gs
xor
push
pop
movsl
das
sbb
mov
fstps
sub
popa
mov
mov
add
xor
mov
cmp
jb
lcall
and
nop
dec
xor
lret
cmp
mov
inc
push
aam
push
xor
sub
mov
rorl
lock
and
jg
fsubrl
jns
xor
pop
sbbb
pop
dec
cmpsl
into
js
sbb
jae
inc
movsl
dec
insl
ss
pop
out
jo
negb
loope
mov
add
lret
jae
push
aad
stos
test
outsb
jb
cld
dec
imul
mov
mov
mov
inc
cmp
imul
push
cmc
out
inc
insl
pop
xchg
les
xchg
cwtl
sub
mov
lock
daa
pop
sub
lcall
xchg
stc
jb
fs
jae
shlb
cld
sbb
adc
stos
sbb
mov
jge
inc
push
add
mov
out
xchg
and
icebp
call
dec
lock
sub
mov
cmpsl
mov
das
mov
arpl
push
pop
sub
or
cmp
arpl
lcall
sbb
adc
sbb
xor
pop
cs
xor
in
or
mov
shlb
mov
leave
xchg
add
in
mov
push
mov
xchg
mov
jmp
jl
in
rorl
sbb
iret
movsb
sub
mov
mov
or
test
inc
dec
cli
rclb
add
lahf
in
dec
cmp
fstpl
push
nop
je
mov
sbb
mov
sbb
cmpsl
es
pop
add
jo
mov
and
cmpsl
jmp
das
pop
inc
das
adc
movsl
mov
jbe
mov
or
mov
cwtl
rol
test
loope
mov
pop
dec
inc
lss
rcr
mov
push
cmpsb
mov
outsl
push
lcall
dec
stos
adc
inc
sbb
dec
xchg
test
mov
inc
mov
dec
jg
js
cmp
aas
dec
in
imul
jo
sbbb
or
fsubrp
movsl
push
mov
fists
es
fwait
pusha
xor
sbb
sub
inc
in
and
xor
lds
lea
jmp
and
xor
adc
test
test
lea
scas
out
icebp
cmp
xchg
cmp
xor
loope
in
mov
mov
dec
jns
push
jne
loop
push
mov
xchg
and
imul
mov
roll
mov
lods
mov
xor
sub
push
mov
sub
jmp
add
imul
xor
popa
js
cmc
cwtl
fnsave
sti
cs
cmp
sbb
mov
scas
xor
sbb
jmp
ja
ret
jg
mov
gs
add
mov
ljmp
cmp
jmp
loopne
cmpsb
loop
push
lea
or
subl
lods
cmpsb
in
xor
in
sbb
xor
add
shlb
shll
call
lret
pop
push
pusha
mov
mov
push
int3
lcall
stos
pop
xchg
cld
out
stos
inc
xchg
add
fs
add
push
les
and
into
mov
call
mov
jne
sub
sub
mov
stos
sahf
cmpsl
lret
sub
arpl
jo
and
rcl
inc
imul
lahf
mov
dec
dec
mov
dec
push
lret
jno
jnp
movsl
mov
jp
mov
loope
cli
push
scas
les
xchg
insl
xchg
push
mov
dec
mov
insb
jmp
pop
fbstp
sarl
ds
xchg
mov
sub
mov
mull
fwait
and
mulb
mov
or
push
push
mov
mov
sbb
sub
jbe
das
scas
adcb
jmp
fistpl
sbb
xchg
inc
jge
enter
sbb
mov
scas
outsl
rcll
fnstenv
add
out
std
xor
mov
mov
mov
loop,pn
ret
test
lds
gs
mov
movsb
bound
cmp
jmp
movsb
popf
jns
cmpsb
repnz
sub
sub
mov
scas
mov
lahf
sbb
mov
das
mov
ds
fidivl
xor
cmp
cmp
arpl
dec
nop
mov
adc
jne
cmp
je
ret
jnp
repz
aaa
aam
in
mov
cs
sub
scas
insb
pop
jge
mov
mov
push
xchg
lock
xchg
pop
push
add
lret
pop
push
ss
sbb
out
cmp
dec
stos
xchg
daa
mov
jae
loopne
xchg
sbb
inc
pop
loopne
add
lds
jae
pop
lret
jecxz
in
mov
mov
and
std
idivb
in
sbb
inc
adc
jp
sbb
mov
push
inc
js
and
subb
add
lods
and
insl
adc
pop
mov
mov
scas
fsubrs
jb
dec
outsb
cld
or
lcall
push
push
adc
jns
inc
add
sbb
mov
mov
xchg
mov
mov
jmp
scas
add
lret
fisubrs
leave
sbb
shl
push
xchg
xor
sub
sbb
lea
aam
cltd
popf
add
cmpsl
cmc
sub
mov
cmp
popa
dec
out
pop
push
pop
mov
add
in
dec
pop
cld
xchg
mov
in
mov
lods
add
pop
cmp
call
mov
mov
sbb
cmpsl
imul
and
push
mov
test
pop
mov
insl
cmp
fcomps
add
or
sub
mov
loope
inc
in
loope
xor
loop
add
sub
push
lret
inc
movsl
add
mov
mov
ficoml
jo
lret
loopne
dec
stc
mov
lret
or
jmp
lods
jns
inc
lods
xchg
mov
dec
mov
aam
xchg
sbb
cmpsb
mov
enter
stos
loopne
cltd
xchg
cld
ret
notb
outsl
pop
aaa
mov
test
cmp
leave
xchg
test
inc
and
lds
mov
mov
or
and
sub
sbb
mov
pusha
add
out
test
mov
dec
rorl
stos
aas
mov
lret
mov
sbb
aad
adc
inc
push
xchg
cmpsl
sbb
sub
and
cmp
sub
and
ljmp
jmp
jne
int
in
shrl
test
fidivrl
jne
or
xor
and
stos
pusha
sbb
mov
jnp
fidivs
test
sub
sbb
movsl
or
inc
jns
popf
cltd
cld
addl
mov
imul
mov
fldt
sbb
mov
fwait
insb
jg
ss
mov
pop
bound
and
insl
dec
jmp
pop
ljmp
into
jmp
je
fucomip
jo
ret
inc
xor
call
fwait
push
cmp
test
mov
or
mov
shll
jae
inc
pushf
les
dec
xor
mov
mov
mov
and
dec
push
cltd
std
cmp
fwait
les
shrb
sub
imul
or
cmp
mov
fiaddl
lea
cmp
fwait
sub
scas
mov
sahf
sbb
push
fidivl
jecxz
pop
mov
ficoms
mov
push
jge
push
pop
cmp
or
dec
jnp
stc
mov
push
dec
sub
xchg
imul
les
and
imul
or
jns
addb
and
sub
mov
add
adc
jne
mov
into
xchg
aas
fiadds
leave
pop
jae
jno
xor
shlb
arpl
in
xchg
sbb
sub
adc
adc
std
iret
je
test
cmpsl
mov
popa
rcrl
popa
mov
jge
sbb
lds
cmp
pusha
mov
mov
xor
push
cmp
or
mov
sbb
inc
in
jl
stos
stc
shlb
cmp
ja
sbb
dec
push
lock
lret
into
pop
xor
adc
test
mov
fwait
inc
cmpsb
loop
sub
dec
mov
pop
jo
outsl
ret
imul
add
xor
js
addl
stos
cmp
or
in
icebp
push
dec
jnp
in
inc
in
es
or
cs
mov
lods
test
cmpsl
bound
js
pop
enter
out
mov
fwait
mov
mov
lcall
jnp
xor
adcl
cmp
test
mov
dec
mov
ljmp
mov
arpl
test
dec
mov
add
cli
jne
mov
xchg
lods
add
sub
push
les
inc
nop
fwait
movsb
add
jb
adc
aad
xor
mov
fcomps
jno
jmp
addr16
xchg
push
mov
clc
popa
mov
fnstenv
mov
and
nop
fmulp
mov
pop
pop
repz
push
stos
jmp
imul
mov
mov
fwait
stos
mov
rcrb
andl
mov
mov
pop
push
shrl
mov
mov
ss
dec
jns
inc
jne
cmp
cld
mov
mov
movsl
into
push
or
push
cli
dec
jg
popf
sub
ror
jne
ljmp
inc
mov
dec
mov
mov
enter
lods
jmp
xor
mov
test
gs
xchg
in
enter
cwtl
mov
cli
xchg
push
lahf
inc
mov
shlb
and
jb
mov
jp
mov
push
add
and
cmpsl
xorl
sbb
push
mov
hlt
jp
jmp
popa
mov
pushf
jns
test
leave
mov
test
mov
mov
sub
mov
andb
repnz
sar
ljmp
test
xor
cmpb
push
and
cmp
jae
sub
les
mov
addr16
inc
mov
jge
pop
loope
psubsw
mov
and
cs
jmp
jne
inc
repz
push
test
fwait
or
adc
jge
sbb
std
adc
enter
push
stos
rcrl
push
cmp
pop
loope
add
negb
fldcw
add
mov
inc
fnstcw
dec
add
out
mov
mov
sahf
and
mov
bound
loope
dec
adc
lret
insb
stos
lods
mov
shlb
mov
push
mov
jl
jmp
and
push
ret
pop
and
cld
xor
dec
and
push
or
sub
fwait
test
nop
mov
icebp
mov
lods
popa
repnz
jmp
dec
xchg
mov
and
xchg
mov
pop
cwtl
mov
fmull
stos
sbb
dec
mov
push
mov
and
inc
fs
mov
lret
test
subl
cli
outsb
pop
mov
cmpsl
aas
ljmp
cld
cs
cmp
call
lea
bound
out
pop
and
jae
in
movsl
sbb
test
icebp
clc
popf
dec
lcall
das
and
lods
mov
outsl
push
push
pop
cmpsl
movsb
into
inc
add
fstpl
lock
mov
cmp
icebp
mull
push
add
sub
mov
push
pushf
pop
xchg
sub
std
loop
sbb
dec
xor
shrb
xchg
jae
in
jg
mov
call
dec
insb
in
or
jnp
or
push
jo
push
lds
sbb
aas
shrl
out
and
sahf
push
and
cwtl
sub
loope
popf
in
add
out
in
mov
sbb
xchg
mov
add
push
aam
and
mov
pop
es
mov
divl
rcrl
dec
xor
sub
xlat
sub
push
mov
mov
popf
sbb
rcr
rolb
mov
adc
dec
out
and
iret
and
incb
js
loopne
or
icebp
push
test
xchg
mov
inc
out
scas
cwtl
aam
xchg
mov
flds
jns
scas
loope
lods
mov
outsb
mov
cs
dec
jle
test
or
push
lods
add
push
jmp
or
andb
jo
gs
xchg
cmp
sub
aam
aas
notb
in
jne
lods
daa
rcrb
sar
mov
loopne
mov
mov
xor
mov
add
dec
icebp
loop
sub
mov
lahf
lahf
mov
mov
pusha
dec
jmp
push
aas
dec
aaa
and
sbb
sarb
mov
xor
pop
lahf
mov
nop
mov
sbb
dec
jg
pop
push
jns
test
daa
xchg
push
mov
call
jmp
sub
shl
inc
in
js
or
arpl
insb
cmp
cmpsl
and
rolb
mov
inc
jnp
sbb
dec
test
mov
in
scas
imul
rclb
inc
xlat
sti
mov
lods
inc
or
push
dec
jmp
push
inc
rolb
xor
leave
push
push
push
mov
add
sub
orl
push
inc
mov
add
pop
clc
cmpsl
test
fbld
mov
movsl
pop
loop
push
les
jmp
cmpsl
jns
jge
shrl
mov
and
popa
andl
cmp
and
test
cmpsl
addr16
or
call
mov
fsubr
dec
fbld
lods
or
ss
sub
nop
ss
mov
add
mov
fwait
cltd
mov
inc
in
adc
jns
cmp
and
mov
cmp
add
jp
aas
cmp
dec
jp
std
dec
mov
add
insl
int
repnz
push
pop
jo
cld
lock
out
in
shr
out
or
pop
mov
dec
mov
fwait
loop
jg
inc
jmp
stos
fwait
push
in
fcoml
inc
jae
leave
fnsave
cmp
aad
mov
jo
or
fdivrs
jne
push
push
insb
mov
and
stos
push
inc
jl
pusha
sub
inc
pop
adc
ret
enter
test
mov
iret
inc
jmp
sub
rolb
into
jo
xor
clc
lcall
insl
mov
xor
test
sub
or
aad
jle
inc
into
in
jge
xor
adc
cmc
add
movsl
fisttpl
aaa
inc
mov
and
call
sbbb
cmp
mov
and
jmp
divb
dec
addb
test
cmpsb
xchg
mov
cs
ret
add
test
cmp
cltd
pop
and
mov
ret
mov
cmp
in
pushf
out
loope
mov
sub
push
cmp
pop
aam
pop
subb
jg
sub
ret
pop
jb
insl
inc
mov
sbbb
dec
mov
or
jg
mov
push
test
dec
dec
or
icebp
sahf
dec
mov
jo
lret
fcmovne
fwait
jb
pop
fxch
xchg
pop
mov
mov
inc
maskmovq
testl
sub
or
add
sub
add
jo
jb
stos
inc
daa
adc
xor
sbb
mov
push
aad
mov
mov
popa
mov
mov
ds
js
inc
mov
sub
negb
int
xchg
jo
into
jecxz
mov
sbb
xorl
sbbl
inc
cmp
sub
daa
loopne
sbb
daa
push
mov
xchg
jno
scas
leave
ljmp
and
jge
loop
cmp
adc
adc
mov
push
iret
popa
add
sbb
in
popf
mov
popf
lds
push
pushf
dec
stos
pusha
lea
pop
int3
inc
ficompl
pop
mov
cmpsl
jne
clc
mov
cmp
pop
xor
and
out
mov
jmp
sub
test
out
in
mov
sub
cmpl
inc
push
inc
fcoms
inc
dec
mov
inc
and
popa
stc
movsl
fldt
test
mov
dec
jae
mov
shrb
aaa
jo
outsl
xlat
int3
outsl
lea
sub
aam
xor
add
dec
jle
leave
add
rcrb
mov
frstor
outsl
repz
hlt
mov
mov
or
lds
mov
xor
aam
rclb
sub
and
push
ud1
dec
xor
lea
pop
dec
int3
out
das
cwtl
sub
adc
mov
mov
push
push
inc
cmpsb
xchg
cmp
insb
notl
insb
repz
sub
pop
xorb
mov
movsl
inc
xchg
xorb
adc
idivl
jecxz
and
add
das
ljmp
add
inc
cmp
in
inc
sbb
stos
test
push
frstor
clc
gs
dec
pop
clc
cs
fwait
pop
xor
or
mov
jns
mov
scas
lahf
dec
rcrb
lcall
mov
call
jle
cld
call
popa
mov
adc
idivb
pop
cmp
test
lahf
test
inc
iret
mov
jae
imul
dec
int3
cmpsb
or
pushf
dec
sahf
sbb
mov
or
idivb
mov
xchg
fidivrs
pop
inc
ret
add
xor
rcll
stos
mov
push
push
jne
jmp
stos
aaa
jmp
div
jecxz
and
pop
loop
mov
xchg
cmp
in
add
push
jle
add
inc
mov
mov
add
sbb
repz
pop
jae
pop
loopne
mov
push
aaa
leave
sbb
add
mov
mov
inc
pshufw
mov
andb
fsubrp
daa
fstps
shr
mov
pop
daa
aas
or
mov
sbb
mov
ret
jle
xchg
inc
js
imul
rorb
shlb
sar
shr
lea
cmp
in
xor
lods
in
mov
sub
pop
sub
dec
test
lea
xchg
jno
push
pop
stos
mov
inc
jo
jae
lds
std
mov
inc
dec
shl
or
fwait
test
cmc
shr
hlt
xchg
jbe
cli
insl
pop
push
ljmp
imul
imul
inc
leave
aas
pop
push
push
or
push
inc
insl
mov
popa
loopne
sbb
repz
sbb
ret
fdivrl
mov
enter
fwait
mov
jno
pop
push
and
and
sti
jmp
dec
mov
and
cld
shrb
je
pusha
inc
jg
inc
inc
sbb
jmp
icebp
sbbb
jmp
enter
ja
mov
ja
test
mov
cmpl
movsl
scas
dec
cmpsl
movsl
repz
fbstp
fwait
jae
lret
inc
inc
cmp
mov
mov
aam
imul
ja
mov
jne
jl
lods
push
scas
inc
mov
stos
loop
xchg
mov
cld
imull
cmp
sbb
cmc
sub
addr16
add
sti
bswap
dec
pop
sbb
ljmp
gs
gs
jp
imul
sub
xlat
sbb
inc
les
mov
int3
mov
inc
pop
dec
push
xchg
cmp
inc
fsts
pop
fstpl
mov
lods
pop
mov
ret
scas
mov
mov
adc
add
arpl
divl
mov
in
pushf
loope
dec
loopne
lret
cmpb
lret
or
push
xor
mov
mov
fildll
add
mov
xor
sbb
cmp
stos
inc
idiv
lods
mov
add
movsl
xchg
stos
stc
insl
mov
in
fidivrs
orl
inc
es
mov
inc
push
ret
mov
les
add
orb
enter
ret
xlat
fiaddl
das
int
mov
outsb
cmp
mov
mov
cs
popf
mov
lcall
push
mov
test
xor
into
add
xor
jno
es
les
xchg
mov
xor
js
pop
or
jmp
pop
mov
cmp
sbb
cmpsb
sub
lods
test
mov
pop
leavew
loop
sbb
cmp
lds
test
pop
mov
pop
mov
xorb
stc
cld
xchg
push
fcomps
shr
loop
sub
daa
fucomip
mov
insl
test
fiaddl
in
sbb
into
stc
and
movsl
ds
stc
cmpsb
imul
dec
loop
adc
pop
sub
fisttpll
mov
push
mov
stos
sbb
pop
arpl
ret
inc
mov
movsb
sub
adc
xor
dec
inc
rcrl
addb
cmpsb
push
ret
call
push
lock
adcl
dec
or
mov
add
dec
enter
xchg
cli
push
add
mov
xor
mov
sarl
adc
jo
cmp
pusha
sub
idivl
movsb
aam
stos
sbb
push
nop
jo
cmp
dec
and
jg
rclb
shll
pop
lret
aas
mov
popa
sti
push
roll
lret
push
insb
rcr
inc
dec
popf
je
cmp
adc
lcall
xor
mov
mov
pop
ror
inc
push
cmpsl
daa
adc
in
push
imul
and
xchg
popa
insb
push
mov
dec
aaa
push
leave
mov
and
shrb
aaa
inc
js
stos
in
cmp
cmc
lock
inc
ret
insl
into
or
cli
pop
jbe
push
aam
insb
orb
pop
les
gs
xchg
mov
lcall
stos
push
xor
and
cmp
sbb
aas
das
stos
cvtdq2ps
test
xchg
leave
les
cmp
mov
insb
adc
testl
inc
jae
scas
jg
add
icebp
push
subb
or
aam
sbb
mov
ljmp
loop
and
jnp
test
sub
popa
push
inc
dec
or
xor
cmp
mov
dec
pop
dec
add
mov
or
push
inc
sub
lret
cmp
into
mov
inc
hlt
inc
lret
and
imul
es
sub
outsl
jnp
pop
aad
mov
movhps
pop
inc
into
jmp
dec
out
sbb
arpl
pushf
test
stos
cmp
into
es
cmp
mov
les
pop
cmp
adc
adc
jne
aam
stos
jnp
andb
popf
dec
xor
les
mov
neg
mov
mov
cmp
fidivrl
shll
imul
sub
scas
movsb
or
or
xchg
std
mov
xor
jae
movsb
mov
clc
adc
lahf
mov
dec
cmpsb
fnstcw
or
mulb
sub
mov
les
cmp
divl
movsl
push
xlat
jl
cmp
test
adc
ret
pop
xchg
xchg
or
mov
push
or
in
jge
jbe
xchg
imul
jne
aaa
stos
mov
push
push
imul
jmp
sub
test
das
pushf
and
cmp
mov
jl
sbb
imul
mov
push
mov
adc
jl
add
and
bound
pop
xchg
ret
xchg
cmc
jp
insb
push
or
dec
arpl
pop
jo
mov
notl
mov
mov
and
mov
add
mov
add
jl
jns
enter
imul
insl
shlb
addr16
lret
pop
inc
inc
jge
inc
adc
inc
movsl
push
ss
stos
mov
adc
pop
mull
pop
dec
pop
ret
sub
push
or
mov
sub
pop
aas
mov
ljmp
imul
cld
test
test
movsl
movsl
mov
dec
stos
and
movsl
pop
mov
rorl
push
fimuls
sub
loope
ja
bound
ja
mov
push
das
push
dec
ss
fists
sar
xchg
push
fwait
repz
movsb
and
pop
es
or
jno
dec
in
test
jns
lea
out
test
mov
sub
out
xor
jno
inc
out
mov
and
push
in
loope
in
and
jmp
or
or
inc
scas
xor
push
and
je
sbb
pop
push
fincstp
mov
out
pop
pop
mov
mov
nop
dec
sbb
push
iret
es
in
inc
aam
js
xor
mov
jmp
orb
stos
mov
fwait
wrmsr
jmp
test
cmp
pop
sub
mov
divb
sbb
mov
adc
iret
scas
push
inc
mov
ror
loope
and
pop
jecxz
pusha
dec
icebp
mov
mov
mov
mov
lret
sti
push
mov
pop
jns
sbb
push
out
imul
icebp
jne
outsl
add
inc
test
and
inc
outsl
insl
jbe
jo
mov
ljmp
jns
iret
popa
pop
sub
inc
mov
fisubl
cli
pop
xchg
sub
xchg
jne
mov
arpl
fimuls
fisttps
mov
dec
repz
inc
mov
mov
inc
call
ja
in
inc
xor
cmp
aaa
fs
imull
cs
leave
jl
mov
mov
add
jno
mov
in
push
add
outsb
jg
xlat
mov
xchg
jl
rol
mov
addl
jge
jmp
popf
mov
pop
jge
sbb
push
mov
leave
stos
xor
sub
mov
cmp
jp
adc
lds
scas
cmp
jmp
mov
mov
jns
inc
lcall
nop
repz
sub
pop
mov
cmp
stos
fistps
bound
ficoml
and
cmc
fcmovnbe
sbb
xchg
mov
repnz
push
inc
pusha
inc
popa
mov
and
adc
int
imul
stos
add
pop
dec
xchg
mov
xchg
mov
rol
sub
loope
test
cmpsl
cmp
mov
adc
mov
mov
mov
ret
rcrb
lret
or
insl
mov
mov
push
mov
mov
sbb
pop
mov
jne
xchg
mov
movsl
sbb
inc
pop
mov
jnp
les
mov
les
mov
xor
cmpsb
nop
push
ja
fisubrl
adc
pop
cmp
negl
mov
xor
cs
jae
les
sub
xor
and
insl
mov
jmp
xor
jg
mov
mov
adc
dec
pop
dec
adc
popf
mov
dec
cmpsb
lahf
mov
scas
inc
jb
pop
addb
in
mov
xchg
xor
dec
jmp
movsb
or
inc
leave
mov
out
cli
movsl
mov
sbb
loop
fisttpl
test
mov
mov
call
cwtl
je
loop
dec
ja
mov
pop
inc
scas
adcb
popa
pop
dec
dec
std
shrb
dec
sbb
mov
mov
and
sbb
movsl
cmpsl
xor
insl
ljmp
mov
pop
dec
xor
divb
lea
loopne
decl
and
fwait
cmpsl
sbb
jmp
inc
mov
movsb
push
push
stos
or
inc
loope
and
sbb
xchg
movsl
lret
fstps
dec
mov
sbb
dec
rcrb
divl
or
cmp
popa
bound
call
inc
adc
loopne
call
jg
dec
fldl
stc
insl
and
adc
mov
dec
lcall
add
loope
mov
jmp
or
lea
xchg
mov
sub
or
and
aam
mov
push
aas
and
inc
pop
arpl
aas
mov
popa
jae
mov
sub
push
xchg
lret
jne
scas
sub
lods
or
mov
and
shr
add
repz
dec
mov
shrb
mov
dec
into
xchg
mov
sub
dec
in
add
pop
xor
imul
lock
jne
jnp
addr16
pop
stc
mov
cld
push
dec
mov
push
xor
imul
xchg
mov
cmpsl
fistps
pop
xor
xor
ljmp
popl
test
imull
or
xor
cmp
dec
push
sbb
addb
lret
andl
mov
pop
inc
test
bound
and
mov
pop
mov
fstl
mul
add
or
inc
sti
mov
movsb
push
clc
adc
decb
sbb
leave
xchg
jmp
shlb
decl
jo
mov
inc
fisubs
pop
movsb
and
jae
or
mov
mov
iret
cs
inc
sbb
mov
mov
mov
sub
test
inc
pop
sub
int3
jo
popa
sub
repz
dec
and
lahf
xor
or
pop
int3
pop
or
arpl
loopne
jmp
mov
unpcklps
mov
cmpxchg
and
fbstp
mov
xor
xor
jno
jl
mov
sbb
lcall
mov
loopne
or
xor
das
test
stos
popf
jae
std
xchg
addl
mov
and
mov
mov
add
push
in
fsubrs
inc
jnp
idivl
cmpsb
xchg
movsb
es
sbb
lcall
jmp
xchg
ljmp
adc
arpl
mov
inc
fs
int3
jo
pop
out
fdiv
ss
popa
and
lret
lock
push
scas
neg
hlt
sub
insb
in
ljmp
sbb
mov
test
out
je
cli
pop
dec
sbb
xchg
or
icebp
in
jge
adc
in
inc
push
mov
mov
loope
stos
xlat
and
pop
popa
mov
int
out
pop
arpl
jecxz
and
test
aam
dec
addl
sbb
fistl
mov
cmc
xchg
mov
cmp
test
das
adc
mov
mov
imul
jle
addr16
incb
sub
test
mov
add
jle
leave
es
in
jle
adc
daa
push
gs
push
js
test
xchg
mov
stos
insl
add
sbb
xor
sub
cmp
inc
rcr
mov
mov
inc
mov
jns
push
sti
lock
xchg
pop
push
cmp
ss
gs
mov
fidivs
push
push
insl
sub
insb
mov
in
push
andl
cmc
icebp
xor
mov
std
inc
inc
lods
pop
mov
cli
mov
addr16
nop
popa
mov
mov
in
aaa
and
and
push
adc
pop
dec
push
push
shr
push
mov
mov
and
dec
sub
or
mov
cmp
xor
mov
add
inc
fs
sub
sub
ret
add
shll
jae
cs
test
les
mov
test
je
and
push
or
rol
mov
outsb
popa
push
lret
enter
stos
mov
js
mov
adc
xchg
xor
popf
jnp
stc
cmpsb
call
insb
dec
bound
lods
in
shl
dec
outsb
outsl
mov
aam
loop
negl
stos
xor
mov
mov
lock
lock
push
xchg
sbb
lahf
enter
es
ffreep
loope
mov
sbb
into
add
cmp
or
lock
daa
pop
sbb
and
inc
divl
aaa
push
lods
daa
mov
xchg
adc
and
sub
mov
subb
sub
and
lret
inc
imul
inc
popa
sub
pop
loope
out
std
cwtl
lods
divb
or
fstpl
cmc
mov
cmc
or
test
aas
lcall
out
ja
das
mov
scas
ror
fnstsw
out
lea
xor
lea
xor
xchg
sbb
fistpl
push
stos
push
loopne
sub
and
cwtl
sub
pop
xor
std
dec
clc
cmpsl
aas
sbb
sti
xchg
lock
into
arpl
jnp
inc
or
and
jb
push
js
sub
add
test
fs
popf
mov
dec
add
ja
jo
mull
mov
repnz
lea
pop
and
std
lods
cmp
sbb
cmpsb
sub
push
mov
shl
pop
cmpsl
xor
sbb
mov
mov
icebp
add
xchg
and
mov
or
cmpsb
or
mov
les
cmp
pusha
pop
and
sbb
in
pusha
and
les
std
push
ffreep
imul
jmp
sbb
sbb
ja
cmpsb
and
xlat
cmp
inc
adc
xor
ja
js
nop
movb
jno
mov
rcll
mov
mov
sub
popf
shrb
cli
xchg
inc
stos
and
in
and
mov
es
rclb
xorb
addr16
push
dec
cmpsb
pop
push
les
fwait
test
adc
mov
inc
lcall
mov
icebp
ja
mov
or
jae
cmp
inc
cmp
aam
sub
les
cmp
push
aaa
lds
arpl
xchg
stos
lea
cmc
jne
push
xchg
sahf
inc
jmp
mov
loope
inc
nop
and
fldenv
aaa
add
mov
stos
enter
ljmp
inc
data16
pop
pop
sub
das
mov
aas
jge
jmp
xor
xchg
dec
arpl
cmp
aam
icebp
pop
aaa
mov
and
lea
fwait
mov
scas
test
mov
mov
pop
lds
or
mov
ret
es
lods
lods
pop
scas
xlat
inc
sub
out
lret
in
mov
cli
mov
imul
iretw
ret
sub
lret
or
sbb
sbb
mov
data16
daa
pop
xlat
in
adc
dec
mov
cmp
inc
data16
lret
inc
pop
mov
xchg
popa
xor
inc
pushf
aas
mov
inc
inc
sub
in
push
lods
lods
xor
das
inc
pop
mov
popf
test
inc
inc
aam
and
and
idivb
ret
push
mov
jb
mov
sub
gs
adc
push
mov
inc
flds
mov
xchg
bound
test
jae
int
sbb
mov
inc
scas
adc
outsl
adc
lock
pop
mov
mov
or
mov
aad
xchg
jne
cmp
popf
repz
ds
mov
cmpsb
pop
mov
dec
or
mov
in
cld
dec
jae
and
cmpsl
loop
jmp
xorl
loope
std
fstps
mov
jmp
pop
and
loopne
pop
mov
add
pop
test
gs
xor
lahf
pop
in
or
out
test
movsl
dec
test
mov
sbb
aas
cld
push
cwtl
rcrb
adc
or
popa
scas
divl
or
and
jecxz
lcall
and
stos
mov
mov
shlb
inc
imul
xor
jns
lods
jns
in
lods
add
cmpsb
rep
and
or
xor
mov
sub
pop
cmp
mov
lock
lret
cmpsl
cmp
dec
orps
sub
sub
popa
mov
stos
mov
inc
sbb
sub
cmp
mov
sbbb
xor
push
popa
es
cmpsl
pop
inc
es
fnstenv
gs
push
jp
mov
push
mov
fnstsw
call
into
mov
adc
negl
sub
pop
inc
sbb
andb
int3
and
add
push
xchg
movsb
cltd
pop
lods
in
stos
jmp
sbb
mov
fimuls
mov
mov
je
cmp
ja
std
pop
pop
mov
movsl
or
push
jno
mov
mov
and
aam
pusha
int3
xor
pusha
xor
sub
add
xchg
lcall
mov
xorb
in
loop
mov
sbb
mov
in
popa
stc
cmc
lods
mov
jmp
add
xor
das
xchg
addr16
cmp
or
adc
imul
xor
xor
inc
stos
pusha
cmp
outsb
lods
ja
addr16
lcall
dec
push
mov
je
int
inc
aas
xchg
sub
mov
jmp
shlb
ret
push
inc
jne
enter
jmp
cmp
jl
mov
cmc
into
adc
xor
scas
cmpsl
and
popf
test
mov
cs
mov
fdivs
mov
mov
stc
xor
mov
or
popa
or
fstps
pop
xor
pop
rcrb
in
jns
fsubrs
cmp
sub
mov
add
inc
or
and
push
cmp
push
scas
push
and
push
das
mov
mov
call
sarl
sub
mov
and
loope
push
mov
mov
stc
jge
gs
gs
orb
mov
sub
sti
pop
xor
incb
fidivs
mov
add
push
jno
mov
jnp
inc
cwtl
or
mov
loope
xchg
sti
pusha
cmp
in
cmp
sarb
xor
cmp
leave
stos
movsb
push
sub
cmpsl
mov
fxch
fldl
cmp
into
add
or
pop
or
sub
aaa
jne
shrb
cmp
cmp
jle
sub
fdivrs
enter
stos
call
sub
push
push
dec
xor
inc
or
mov
or
test
or
push
jecxz
pop
addb
ror
mov
mov
mov
jecxz
adc
and
out
pop
mov
sbb
outsb
and
lea
sbb
mov
in
sbb
cmp
out
or
mov
aas
cmp
loop
aas
mov
test
in
sub
mov
mov
inc
push
mov
pop
and
ss
sahf
aad
cmpsl
or
mov
dec
divl
mov
out
inc
push
sub
dec
pop
outsl
sbb
mov
dec
mov
stos
lret
addb
push
xor
dec
cmpb
das
xchg
lods
xchg
and
mov
jae
in
inc
inc
sbb
movsl
scas
das
sub
cmpsl
imul
lods
ja
xor
call
jp
lods
stos
pop
xor
push
sub
test
pusha
cmp
mov
subb
stos
sbb
mov
or
mov
push
sbb
call
popa
xor
and
test
cmp
sti
pusha
gs
js
and
mov
jp
cmp
sub
jnp
movb
dec
shrb
mov
movb
fadds
mov
popa
icebp
sub
pop
dec
bound
mov
cmp
fadds
mov
or
std
add
push
int
sub
inc
movsl
mov
sbb
lods
mov
mov
test
pusha
inc
jno
xchg
push
mov
cs
add
adc
cmpsl
mov
and
and
insl
fimuls
nop
mov
fiadds
add
jnp
or
xchg
movzwl
sbb
aad
sar
push
loop
and
loopne
sbb
lods
js
testl
sbb
lahf
popf
in
mov
mov
mov
lcall
lret
loope
popa
popa
sar
cwtl
inc
mov
divl
mov
xchg
dec
les
mov
adc
pop
rol
into
adcl
push
sub
cmp
dec
cli
jmp
inc
push
mov
sbb
cs
or
jae
push
addb
stos
sti
lret
nop
mov
leave
mull
jae
arpl
push
adc
push
data16
jge
sub
sti
int3
sub
adc
popa
push
push
cmp
adc
test
or
in
sub
lcall
add
push
into
or
jbe
sbb
test
and
in
sub
add
sub
mov
or
mov
in
movsl
adc
notl
cld
jmp
int
popf
rorb
ds
les
int
data16
lcall
jne
scas
jmp
aad
sbb
in
shrb
pop
test
push
sub
std
les
mov
clc
cmp
lods
mov
cmp
das
sub
push
dec
orl
adc
inc
pop
add
jmp
mov
xor
jno
cmpsb
ja
outsb
outsw
test
adc
and
cmc
lret
mov
fldenv
cmpsb
leave
clc
lahf
in
xchg
sub
xchg
out
xor
fnstcw
in
test
in
xchg
lods
lds
sub
fsubrp
repz
js
movl
or
pop
mov
fwait
mov
push
push
fisubs
mov
jb
and
pop
mov
inc
mov
add
jno
inc
les
push
ja
dec
jnp
mov
mov
mov
mov
or
jns
sub
jae
mov
out
add
nop
mov
test
pop
es
or
orb
inc
push
xchg
call
mov
sub
mov
mov
xchg
mov
sub
icebp
mov
into
les
mov
mov
addr16
les
push
loop
pop
outsb
jmp
pop
sbb
mov
test
aad
inc
test
sub
test
mov
dec
inc
mov
dec
jg
call
mov
add
sbb
inc
inc
xchg
pop
lcall
das
sahf
adcb
jmp
cmpsl
lcall
xchg
pusha
jno
push
jno
outsl
gs
fwait
sbb
js
idivl
or
or
cmpsl
and
mov
mov
outsb
shlb
aaa
add
rol
dec
sub
cli
add
push
lds
push
add
pushf
xchg
insl
sbb
jne
mov
mov
mov
std
pop
jnp
cmpl
enter
lock
add
mov
jle
cmc
test
xor
mov
inc
or
inc
mov
mov
outsl
in
mov
sbb
cmpb
sbb
xor
dec
aaa
mov
icebp
sub
jmp
adc
das
mov
xor
mov
sbb
add
xchg
mov
fistl
push
cmpsb
pop
std
mov
mov
aam
jno
das
popa
sarb
or
add
mov
iret
imul
pushf
inc
stos
mov
mov
mov
out
in
mov
stc
adc
sub
imul
sub
and
dec
repz
mov
lds
mov
sbb
fwait
jae
fisttpll
mull
or
jo
cmpsb
xchg
cwtl
stos
push
test
mov
mov
mov
sbb
mov
sub
cld
sahf
fwait
cld
mov
pop
mov
test
cmp
dec
adc
pop
jge
and
ss
insl
pushf
mov
cld
aaa
nop
rolb
inc
out
push
sbb
or
or
xlat
sub
adc
adc
inc
cmpsb
jno
and
mov
pop
test
and
stos
mov
or
mov
iret
adc
aam
clc
inc
popf
push
leave
aas
cltd
into
mov
mov
cmp
pop
scas
loope
insl
jns
stos
xor
testb
arpl
ds
subb
ljmp
movsl
cmpsl
sbb
test
pop
pop
sub
jle
lcall
cmp
std
push
pop
insl
divl
sub
jae
mov
mov
mov
dec
cwtl
icebp
sbb
lods
dec
test
lock
cmp
xor
sub
sub
mov
pop
ret
cwtl
xor
call
dec
negl
stos
aam
rcrb
pop
cmp
enter
mov
lcall
mov
pop
inc
pop
sub
mov
gs
rolb
mov
cmp
sarb
dec
jl
addl
lcall
jmp
outsl
aam
ja
mov
adc
jno
cmp
sub
jge
in
or
gs
and
lds
shlb
mull
mov
add
call
sbb
int
pop
mov
jmp
mov
adc
int3
stc
in
subb
daa
fsubl
fisubs
sub
loop
test
lea
jmp
push
bound
shlb
lock
jmp
adc
xchg
sub
and
clc
jne
sbb
popa
cmp
repz
push
or
cmp
hlt
pop
aas
or
movsb
scas
test
mov
fldcw
cmpsl
push
sub
pop
fistpl
ja
and
adc
daa
mov
je
pop
sub
xchg
stos
cmp
andb
rcrl
and
cmpsl
mov
sar
cmp
push
xorl
xchg
lods
sbb
lea
fwait
les
scas
into
adc
daa
push
push
mov
mov
mov
and
mov
dec
dec
in
test
and
mov
mov
lods
cmpsb
ficompl
xor
aaa
popf
loop
inc
hlt
testl
movsl
jmp
lods
adc
cmp
sahf
mov
push
xchg
cmp
mov
sbb
sub
dec
xchg
movsl
stc
mov
sub
loop
cmp
dec
mov
mov
cvtps2pi
movsl
jmp
bound
lret
mov
loope
mov
sbb
test
mov
mov
xor
cmpsl
cmp
out
mov
mov
pop
pop
fistl
inc
mov
lods
mov
sub
gs
mov
dec
xor
inc
stos
outsl
pop
xchg
leave
jb
dec
in
sbb
lret
sub
sub
jl
inc
xchg
mov
mov
test
mov
sahf
lods
pop
lahf
cmp
out
clc
sbb
fdivp
push
jle
aad
stos
dec
jmp
aas
mov
daa
adc
push
cmp
stos
fcmovbe
cwtl
stos
movsb
jmp
jae
movsl
pop
adc
js
mov
mov
out
or
adc
shrl
leave
loop
jle
mov
xchg
lret
arpl
xor
fisubs
scas
icebp
mov
xchg
stos
and
mov
xchg
std
inc
test
mov
lods
mov
jge
add
lahf
xchg
test
scas
dec
insl
jg
shlb
not
std
int3
xor
ss
pusha
cwtl
and
xor
mov
mov
dec
hlt
shl
mov
pop
mov
ret
lods
mov
shrb
imul
lds
es
movsl
clc
mov
mov
and
jmp
add
mov
shlb
lret
aaa
lods
mov
lahf
push
mov
pop
mov
test
mov
mov
xlat
subb
lret
sti
pop
push
stos
xor
popa
push
inc
cmpsb
mov
call
mov
andl
push
mov
push
dec
and
cmpb
jmp
sub
jmp
ret
mov
imul
call
push
cld
lret
mov
mov
adc
popf
pop
daa
jl
jle
mov
das
mov
cld
enter
mulps
sub
lock
mov
and
cmp
jmp
jg
xor
push
mov
cmpsl
and
subl
dec
shufps
mov
push
rcrb
xor
sbb
sbb
pop
cmpsl
outsl
mov
ret
mov
in
in
lahf
and
addb
in
lret
jmp
sbb
into
arpl
sub
lock
popa
xchg
popa
mov
les
enter
xor
jge
lock
jmp
imul
fsubs
cmp
mov
mov
mov
mov
mov
push
sbb
movsl
mov
or
out
pusha
stos
push
stos
lods
mov
fwait
mov
dec
mov
mov
push
push
mov
sbb
push
pop
movsb
add
inc
mov
jmp
neg
js
sub
aam
mov
addb
add
dec
shll
ret
inc
and
adc
cwtl
add
daa
dec
and
sti
push
popa
xlat
dec
push
push
push
test
mov
cmpsb
mov
inc
mov
es
push
lahf
mov
jmp
aam
xchg
out
mull
pushf
std
mov
mov
xchg
mov
add
inc
sub
hlt
adc
bound
mov
xor
rolb
mov
jle
pop
sub
aam
mull
cmc
arpl
mov
xorb
mov
mull
push
cmc
mov
or
sub
mov
mov
loopne
mov
add
outsl
mov
insb
rol
mov
in
cmp
cmpsl
movsb
mov
xor
sbb
jo
addr16
dec
push
lds
pop
pop
mov
es
bound
pop
push
cmpsl
in
mov
mov
mov
dec
shl
andb
mov
inc
cmp
xor
stos
cmp
ja
push
jg
out
jmp
sub
outsl
leave
iret
aad
movsb
inc
mov
cmpsl
mov
pop
push
jmp
dec
jne
pop
sbb
lahf
add
sub
imul
mov
test
cmp
mov
das
sub
mov
test
jecxz
leave
das
mov
mov
sbb
cmpsb
and
sbb
testb
jmp
add
pop
mov
adc
xchg
cmpb
inc
add
dec
push
aam
inc
test
les
and
xchg
mov
mov
mov
mov
movsl
xchg
pop
int
fwait
das
and
stos
into
jmp
test
into
stc
jns
add
sub
mov
out
ficompl
and
mov
mov
push
push
in
cmpsl
mov
ljmp
xchg
xor
pop
sbb
or
into
push
pushf
test
mov
xor
jb
mov
gs
and
testl
jo
jmp
dec
outsl
leave
or
pop
dec
fwait
cli
add
scas
in
lds
add
sub
mov
sub
inc
scas
pop
imul
aas
movsl
imul
aad
dec
jmp
ljmp
pop
mov
shl
stos
push
jmp
imul
adcl
lods
xchg
mov
addr16
mov
popf
test
pusha
and
jmp
push
lods
mov
mov
cwtl
xchg
mov
lods
mov
test
lea
dec
mov
dec
not
pop
sti
pop
lods
dec
adc
mov
or
stos
cmp
sub
into
imul
imul
aas
sub
imull
das
sbb
inc
push
scas
pop
mov
js
jg
sbb
popa
sub
lods
mov
outsb
push
fwait
repnz
push
adc
insl
and
lahf
push
movsl
stos
fimuls
js
scas
loope
xor
pop
sub
mov
inc
cwtl
xor
sahf
shll
dec
xor
mov
in
ss
mov
pop
add
flds
inc
add
cs
xchg
xchg
hlt
fsubrl
cmpsl
icebp
and
rol
lods
or
sbb
lahf
mov
stc
in
scas
cmpsb
mov
call
pop
popf
outsl
lcall
dec
movsb
shlb
mov
enter
mov
xchg
sbb
and
mov
mov
pop
pop
lahf
filds
pop
dec
lods
xchg
in
inc
daa
dec
test
push
call
sbb
gs
mov
adcb
ss
out
inc
fmull
sub
mov
push
xchg
test
pusha
pop
fsubl
push
dec
sub
sti
inc
lock
cmp
push
rcrb
cmpsb
xchg
mov
inc
lock
pop
lods
stos
int
dec
mov
push
lea
cmpsl
lret
stos
dec
mov
mov
pop
push
cmp
inc
adc
jae
push
sub
stos
mov
clc
shl
sbbb
jmp
push
std
inc
inc
mov
insl
lods
mov
cmp
inc
sbb
sbbl
imul
jno
shl
sub
push
in
dec
lods
mov
add
inc
mov
adc
pushf
loopne
jmp
push
jecxz
fcmovnb
popa
push
xor
mov
and
orb
loope
add
cmp
test
cmpsb
xchg
pop
dec
mov
lcall
jmp
in
add
lock
mov
test
inc
repz
mov
divl
mov
sub
data16
fcmovb
testl
sbb
notl
pop
dec
cmp
inc
into
cmp
jmp
sub
dec
lds
fnop
mov
sbb
ja
call
and
and
outsl
mov
cmp
into
push
fimuls
push
cmpl
loope
ficoms
mov
mov
jmp
adc
inc
inc
divl
mov
and
xchg
lret
lret
jb
stos
jge
arpl
and
ss
and
jmp
stos
cmp
das
inc
rorb
and
shr
cmpsb
seta
adc
stos
add
mov
dec
sbb
mov
movsb
lods
shr
gs
orl
jns
mov
ja
pop
out
mov
mov
inc
add
mov
mov
cli
pop
cmp
adc
andl
insl
dec
adc
test
nopl
pop
push
std
stos
mov
andb
rcl
ret
xchg
mov
jg
fisubl
imul
mov
mov
into
mov
cltd
dec
stos
int
rcrl
clts
lahf
sbb
jne
gs
in
xchg
pop
inc
dec
cmp
adcl
push
adc
cwtl
rcll
xchg
xorl
xor
sub
sub
mov
movsl
sub
fmuls
dec
sub
aam
mov
jmp
adc
das
scas
das
in
out
and
push
sub
adc
cltd
data16
xchg
xchg
in
mov
dec
fmuls
imul
pop
lahf
inc
leave
out
mov
leave
loopne
in
inc
int
in
test
lret
inc
mov
mov
mov
sarl
test
sti
idivl
add
dec
imul
sub
cmp
push
xor
test
mov
fstl
fdiv
bound
sbb
adc
movb
jmp
and
rcrl
lods
xchg
xorb
inc
lods
mov
mov
in
cmp
lods
inc
stc
push
xchg
inc
cmc
fadd
rolb
inc
call
andb
or
into
stos
jmp
out
jle
mov
and
adc
jp
movsl
ds
pop
imul
jmp
fwait
pop
and
push
addr16
in
add
push
push
leave
test
sub
shlb
sbb
shrl
mov
std
sbb
in
fimull
outsb
xchg
and
xchg
mov
sbb
mov
xchg
inc
not
test
xchg
and
push
and
jne
jecxz
cmpl
pop
int3
in
cmp
sbb
dec
and
push
dec
enter
add
inc
out
pusha
lock
andb
in
sahf
bound
mov
sbb
testl
add
pushf
call
and
into
mov
aam
outsb
add
imull
aaa
cmp
mov
cwtl
pop
cmp
popa
push
add
inc
jl
ret
and
inc
mov
mov
jns
and
mov
add
mov
cmp
pushf
cmp
mov
xchg
dec
rcrl
cmp
cmp
arpl
call
jle
daa
sbbb
push
ja
xchg
jae
iret
insb
push
loope
call
mov
in
fdivs
fdiv
add
hlt
pop
push
fdivrl
dec
and
hlt
aam
notl
jmp
rorb
mov
push
mov
lcall
lea
dec
pop
pop
stos
mov
sbb
mov
cmp
mov
ret
int3
shlb
daa
jl
inc
call
mov
push
xor
adc
ds
pop
out
fisubl
stc
sub
mul
lret
mov
sbbb
mov
and
xlat
mov
or
xchg
mov
push
mov
jmp
xor
push
rolb
jl
inc
enter
pop
mov
jbe
mov
subb
lods
stc
pop
xchg
fnstcw
push
sbb
lea
outsb
mov
dec
pop
insl
les
xchg
dec
lds
lds
sub
mov
inc
push
stos
add
shlb
cwtl
fdiv
adc
sub
sub
cmp
add
xor
push
adc
movsb
push
push
shrb
cmpsl
dec
mov
mov
xchg
faddl
or
push
dec
mov
movsl
mov
insl
fcomps
mulb
sbb
mov
push
sbb
pop
xchg
cld
xchg
stos
rorl
sbb
inc
xchg
mov
pop
ret
jl
test
and
ret
mov
sarl
repnz
in
fldl
mov
add
loopne
pop
xchg
pop
xor
and
mov
mov
push
lea
mov
xlat
test
imul
push
xchg
and
xchg
push
shrb
les
cmp
rclb
pop
cmpsl
movsl
orb
jmp
fwait
dec
dec
jg
lret
push
push
rclb
and
mov
arpl
int
lock
movsl
push
sub
std
fsubrs
insb
sbb
ljmp
fsubrs
sub
push
and
mov
mov
sti
dec
xchg
loope
xchg
dec
lods
or
lcall
pop
stos
sahf
movsb
mov
mov
repz
mov
mov
lea
cmp
leave
lret
push
and
lods
jg
rcr
or
repz
mov
mov
in
aam
push
jnp
mov
sbb
xchg
insl
into
cmp
add
push
dec
popa
xchg
repz
jg
aad
jmp
fildll
mov
mov
lret
xchg
xor
push
pop
pushf
scas
lret
aad
xchg
mov
sbb
fimuls
and
mov
push
xchg
pop
dec
xchg
xchg
xchg
sub
xchg
mov
arpl
push
enter
pushf
push
daa
notl
dec
out
imul
fwait
out
sub
in
and
pusha
adc
jne
pop
mov
mov
out
inc
fwait
inc
sbb
mov
sub
test
add
adc
inc
mov
mov
shr
push
jmp
push
lds
push
subb
lods
mov
sarl
xchg
popa
arpl
mov
gs
sub
inc
in
mov
sub
pushf
dec
into
insb
mov
into
mov
ret
sbb
cmpl
jmp
stos
dec
push
mov
mov
pushf
mov
fsubrl
nop
lcall
jg
cmp
xchg
mov
sub
add
sbb
jb
mov
sbb
imul
sbb
arpl
mov
pop
xchg
jae
sbbl
adc
rorb
mov
add
mov
or
and
sub
sub
cltd
pop
cmpsl
and
sub
mov
sbb
mov
jmp
nop
jg
fsts
mov
fwait
clc
inc
mov
mov
dec
pop
je
add
inc
movaps
lods
jns
repnz
in
call
dec
mov
icebp
ja
push
jp
xchg
push
xchg
mov
popa
lret
mov
sbb
dec
vphaddbd
adc
sbb
lods
and
dec
shrl
or
lea
mov
les
fwait
sbb
cltd
mov
inc
mov
aaa
lcall
nop
inc
mov
mov
arpl
flds
sub
and
adc
xchg
not
and
btr
mov
xchg
ss
cwtl
push
rcrl
jno
ja
inc
add
sub
sbb
lea
pop
inc
in
lods
fcomps
dec
mov
mov
jnp
imull
and
xorb
sarl
testl
jmp
push
mov
mov
inc
mov
in
rorb
stc
jcxz
mov
ja
mov
ss
xor
sbb
mov
mov
call
xorb
jae
inc
in
jb
pushf
stos
stc
repnz
push
fisttps
inc
stos
aam
ljmp
xor
lcall
mov
sbb
xchg
xchg
ret
mov
adc
inc
popf
sbb
push
adc
mov
gs
es
mov
inc
movsl
fmul
lods
das
mov
out
pop
add
xlat
fistpll
mov
sahf
pop
xchg
loopne
sub
push
push
inc
aaa
ljmp
ja
clc
pop
mov
push
sub
lds
push
pop
fidivl
inc
adcl
jnp
pop
rcll
mov
adc
lret
jmp
in
gs
int
sarb
daa
scas
jmp
jne
adc
mov
xor
lcall
adc
xor
hlt
mov
arpl
mov
in
pop
lds
dec
cld
test
mov
shlb
add
sub
lds
mov
stos
add
mov
mov
cmp
adc
dec
test
push
push
loope
adc
mov
sbbb
xor
aas
lds
gs
mov
sub
jp
and
or
push
sub
dec
pop
stos
mov
lods
aas
adc
jns
inc
js
pop
inc
int3
mov
xchg
and
aas
mov
shrb
mov
loopne
hlt
dec
push
cmp
aas
data16
xor
fwait
lcall
leave
push
push
stos
mov
inc
imul
jl
sahf
mov
or
popf
mov
and
push
nop
adc
mov
push
inc
mov
dec
inc
jmp
test
movsl
movsb
add
and
xlat
inc
aaa
fsubp
mov
mov
lods
mov
sbb
adcb
leave
pop
xchg
xchg
pushf
fldenv
pop
cmp
dec
into
push
pop
dec
mov
sub
jmp
cmp
mov
cmpsb
xchg
adc
scas
jb
push
movsl
sub
pinsrw
inc
mov
mov
sbb
or
inc
xchg
fsts
mov
adc
pop
sub
in
ret
cmp
inc
les
cltd
add
mov
inc
popa
push
jp
mov
inc
xor
cmp
and
inc
data16
hlt
sbb
push
cwtl
stos
out
cmpsb
sti
sbb
add
adc
push
push
pop
jg
aaa
scas
sbb
icebp
inc
cmc
sarb
dec
adc
mov
nop
clc
dec
mov
lds
add
sbb
ljmp
dec
jmp
xchg
out
pusha
and
mov
adc
loope
test
cmp
in
adcb
mov
into
out
dec
xchg
ja
jmp
or
sahf
xchg
cwtl
adc
test
mov
test
subl
cmpsl
bound
mov
pop
popf
rolb
call
mov
xchg
mov
ds
orl
popa
cmp
mov
movb
jo
subl
inc
jno
xor
jmp
push
mov
in
jle
stos
sub
dec
in
es
mov
fadds
idivl
jmp
dec
xor
ds
dec
clc
dec
lock
pop
sbb
xor
cmp
and
push
jnp
mov
adc
cwtl
daa
pop
mov
mov
mov
and
lcall
push
stc
mov
cmp
fistpl
xor
test
imull
movb
das
lds
lods
mov
jmp
sub
jmp
jae
fidivs
cmp
push
inc
mov
lea
scas
jb
sahf
je
pop
mov
fwait
mov
stos
jmp
inc
xor
test
push
jl
mov
shll
sti
loop
mov
icebp
xchg
loope
loope
mov
mov
jbe
iret
xchg
mov
adc
jbe
push
and
pop
bound
jmp
jge
fcomip
push
inc
fldenv
mov
push
inc
inc
mov
push
mov
mull
cwtl
aam
sub
stos
and
shlb
lds
push
dec
push
or
and
daa
pop
sub
or
pop
sub
sbb
ljmp
inc
imul
jl
mov
sbb
gs
enter
fldt
imulb
dec
daa
insb
jg
sbb
test
rcrl
sub
jmp
out
clc
dec
loope
movsl
add
cmpsl
imul
dec
mov
arpl
shrb
hlt
and
cwtl
inc
or
and
push
or
pop
adc
shrl
repnz
push
shll
arpl
xchg
ds
clc
mov
cmp
mov
pushf
mov
gs
sahf
aaa
addr16
loop
sub
pop
outsl
lods
xor
jmp
cmp
jbe
js
orb
pop
cli
inc
test
dec
fistps
jbe
shrl
bound
cld
sbb
stos
mov
inc
sbb
mov
ret
cwtl
mov
lea
jg
xchg
stos
sti
cwtl
cmp
push
dec
imul
jnp
inc
sbb
arpl
clc
gs
and
filds
mov
xor
data16
fsubr
or
dec
fprem
inc
aas
jno
sub
pop
shlb
gs
mov
and
jns
test
add
add
adc
dec
mov
mov
xchg
test
and
or
das
loopne
in
aaa
fsubrl
mov
mov
lods
xchg
pop
pop
and
mov
sbb
das
push
dec
jp
call
negl
sub
pop
test
int3
imul
push
popa
cmp
push
xor
sbb
iret
xchg
out
stos
push
sub
and
sbbl
sbb
and
out
and
push
iret
repz
mov
mov
jg
jp
gs
xchg
sub
sbb
sbb
out
call
cmp
jecxz
add
test
repnz
aad
and
gs
inc
sub
rcl
jl
aam
mov
movsl
sarb
sub
ror
ljmp
add
mov
fldcw
xor
lds
lret
mov
stc
stos
loopne
fistps
add
lock
out
jge
addr16
inc
inc
sbb
cmpsb
cmp
stos
lods
xchg
cmp
sbb
test
inc
aaa
xchg
sbb
ss
pushf
mov
pop
push
mov
arpl
dec
leave
nop
xlat
sbb
or
test
add
mov
mov
mov
push
jae
or
stos
stos
nop
pop
push
sahf
jge
cmp
bound
mov
loopne
pop
or
daa
xor
jnp
or
mov
xchg
rclb
mov
rorb
sbb
sbb
roll
imull
dec
push
movsb
cmp
xchg
lock
jmp
xor
pop
push
inc
sbb
inc
stos
add
cs
inc
mov
jne
pop
stc
xchg
mov
xor
mov
pop
pop
imul
and
roll
stos
mov
popf
jp
cmc
arpl
ljmp
stc
xor
test
or
pop
and
push
loope
cwtl
push
cmp
imul
les
push
dec
dec
test
pop
cmovae
cmpsb
test
pushf
inc
mov
cmpsb
sbb
test
mov
mov
sbb
jmp
stos
cwtl
push
gs
mov
jle
mov
lods
cmpsl
sbb
add
cmp
mov
mov
adc
inc
lods
lcall
inc
sbb
sub
sub
or
dec
mov
popa
test
roll
scas
xorb
or
int3
shl
pusha
inc
sub
in
mov
repnz
xchg
xor
imul
jg
sbb
push
out
sbb
mov
dec
test
daa
cmpsb
xchg
cmpsl
inc
cwtl
dec
lahf
in
xor
hlt
adc
xor
aam
jo
mov
mov
sub
inc
dec
iret
fstpt
xchg
mov
mov
jnp
loop
lcall
outsb
gs
test
inc
int
aas
inc
lret
sbb
dec
mov
push
movsl
test
cwtl
stc
ss
fsubrl
dec
sub
into
and
lea
test
or
les
pop
cmc
jno
mov
inc
es
jo
cmp
pop
arpl
test
ljmp
dec
push
lods
pop
test
mov
inc
int
adc
faddp
pop
sbb
daa
or
pop
insb
das
imul
pop
inc
nop
fcomps
jnp
lcall
shrb
test
cmp
jo
inc
pop
cmp
mov
cli
fdivl
mov
sub
inc
cmpsb
insl
xchg
icebp
xorb
xchg
pop
cwtl
inc
mov
jae
mov
lret
sbb
std
aam
sbbb
jo
pop
les
cld
lods
cmp
popa
mov
jb
test
adc
leave
movsl
rcl
shl
jmp
and
dec
cmpsb
cmp
adcl
mov
jo
inc
test
ja
sbb
fs
pop
mov
stos
mov
jecxz
inc
mov
inc
mov
xchg
jne
shlb
rolb
scas
or
mov
sbb
jmp
cmp
jg
sub
mov
mov
mov
or
pop
pop
movsl
and
mov
dec
pop
sbb
push
pop
jmp
push
sub
sbb
sarb
cltd
stos
xchg
xchg
std
xchg
mov
pop
jecxz
mov
addb
fwait
add
mov
xchg
loope
mov
add
ret
aaa
sub
jl
into
and
aaa
push
add
dec
mov
jno
ja
mov
sarl
sub
dec
je
pop
jg
repnz
shlb
mov
jp
or
into
mov
loop
inc
fisttpl
shlb
icebp
inc
ror
dec
add
mov
add
sbb
pop
shll
stos
sbb
xor
xchg
ror
fmul
pop
and
fsub
mov
fidivrs
in
lods
push
push
arpl
pop
dec
nop
fwait
sub
mov
pop
mov
or
push
and
pop
or
iret
inc
out
or
pop
mov
dec
sbb
loopne
adc
add
jmp
sbb
and
sub
pop
mov
add
stc
inc
pushf
or
dec
add
xchg
xor
dec
int3
and
mov
stos
pop
and
xchg
movsl
mov
pop
adc
lret
rol
shrb
xchg
sub
fcoml
add
cwtl
ja
mov
dec
cmp
jmp
mov
cmc
je
jp
jae
dec
icebp
pop
pop
push
mov
iret
mov
dec
out
enter
pop
add
ret
sti
sub
mov
pop
push
jg
stos
popa
pop
lret
rcr
pop
pop
mov
mov
jbe
pop
sarw
jge
mov
stos
stos
inc
mov
adc
or
xor
add
fldl
mov
stc
sti
and
outsl
lcall
shrb
andl
aas
xchg
dec
and
jae
mov
xlat
into
jmp
cmpsb
inc
enter
shrb
push
xchg
subps
sti
fldenv
xchg
andb
ret
fwait
jb
outsl
mov
or
insl
xor
outsl
inc
add
cmpsb
stos
sti
inc
cmp
mov
xchg
sbb
mov
mov
lods
imul
mov
shll
enter
test
lea
cmpsl
insb
adc
pusha
ja
mov
mov
mov
lock
mov
xor
gs
inc
lret
sbb
sbb
loop
mov
and
ror
and
arpl
jbe
pop
test
jmp
fstpt
sbb
mov
out
dec
cwtl
adc
mov
inc
scas
mov
test
stos
loop
and
lods
aad
mov
fisubrs
cmp
or
dec
popl
arpl
das
nop
fnstenv
shrl
push
std
xor
mov
aad
sahf
cmp
push
dec
mov
mov
xchg
ror
dec
sti
cltd
stos
jmp
mov
sbb
insb
jge
jl
or
cli
jl
sarb
hlt
xorl
and
dec
js
add
cmc
sub
mov
aaa
sbb
fwait
jns
pcmpeqb
cmp
aaa
lea
mov
fwait
enter
jae
inc
inc
pop
mov
ja
stos
pop
movsl
cmp
outsl
sbb
out
testl
and
or
stos
in
pop
jmp
inc
sub
rcrb
dec
dec
lea
mov
aaa
add
mov
sbb
scas
in
mov
jle
fwait
cmpsl
daa
mov
arpl
xchg
stos
add
xchg
mov
jmp
mov
aas
rcrl
inc
imul
loope
inc
sub
popa
out
fs
mov
inc
mov
imul
lret
lret
mov
sti
outsl
inc
inc
aad
rcr
pop
mov
jecxz
stos
jnp
lock
cli
and
sbb
mov
sub
jns
test
fldt
aam
add
andb
mov
ljmp
dec
adc
testl
xorl
sbb
jae
out
aaa
cs
repz
cld
dec
loop
xchg
push
outsb
repnz
cmp
into
sub
addb
in
les
hlt
inc
fcmovnu
loop
mov
pop
hlt
inc
mov
xchg
imul
push
dec
push
mov
fcompl
push
int
mov
imul
cmpsb
adc
mov
pop
test
iret
movsl
leave
outsb
push
sub
xchg
out
mov
dec
mov
pop
cs
xorb
sti
stos
xchg
ficompl
jmp
adc
sbb
shrb
ficompl
xlat
cmpsb
popa
enter
shll
sbb
mov
movsl
adc
mov
fcmovnu
push
inc
arpl
and
fistpl
movsl
sti
dec
shlb
test
je
push
rcrl
or
jg
sub
fstps
das
xchg
cmp
sub
sbb
fldcw
movsb
jo
jl
lock
and
sbb
mov
mov
jmp
outsb
fldcw
shll
jmp
stos
sbb
roll
repnz
dec
hlt
jmp
jmp
xor
cmc
cmc
iret
push
jae
xor
ror
movsl
mov
sahf
inc
lock
adcl
cmp
sti
mov
and
cmp
das
adc
lret
sub
add
imul
sub
sub
inc
into
or
mov
xchg
lahf
ljmp
xchg
out
addl
jmp
mov
adc
cmp
dec
cmpsb
mov
mov
call
repz
mov
sub
or
xchg
inc
mov
mov
mov
dec
lea
sub
cmp
das
and
mov
dec
mov
mov
xchg
cli
push
jbe
mov
repz
imul
loop
imul
dec
xorl
dec
nop
aad
sub
cmp
dec
fildll
lahf
cltd
mov
loope
push
cmp
imul
aaa
xor
jmp
dec
sub
cmp
rorb
adc
ja
das
push
mov
cmp
jae
cli
pop
fwait
push
subb
loopne
xor
sbb
movsl
mov
sbb
push
push
test
ror
inc
test
outsl
mov
aam
push
and
and
inc
sbb
mov
mov
mov
sarb
call
mov
rorl
inc
mov
xchg
aad
jg
shll
mov
inc
cs
in
addr16
pop
bound
cmp
sub
xor
mov
adc
js
xchg
mov
sbb
dec
data16
inc
lea
and
jns
fcmovnbe
adc
popa
xchg
dec
shlb
lods
mov
and
jg
pop
mov
lahf
and
xchg
and
gs
rcr
mov
mov
xchg
ja
loop
into
lods
pop
scas
test
jae
stos
imul
and
add
jns
add
pop
mov
xchg
cld
test
jo
and
jno
cmp
xchg
aaa
test
push
mov
push
sub
stc
mov
xchg
cwtl
insl
jmp
andl
scas
inc
mov
popf
rorb
int3
adc
popa
xchg
jecxz
xchg
mov
sub
dec
push
les
inc
int
mov
add
sub
inc
in
push
jne
and
cmp
dec
mov
mov
enter
sub
jge
or
and
pusha
out
sbb
push
jnp
dec
or
popa
aam
jge
xor
add
inc
mov
mov
std
cmp
outsl
mov
fldln2
sbb
pop
call
stos
dec
fildll
inc
sbb
adc
dec
xchg
daa
movsb
push
sub
data16
bound
scas
shrb
push
mov
out
pushf
mov
or
test
and
or
mov
sbb
fcoml
cmp
aaa
mov
ret
mov
das
xchg
push
fsubs
stos
idivl
leave
pop
dec
mov
mov
aas
mov
mov
cltd
into
pop
cmp
cmp
pushl
adc
test
and
cwtl
in
int3
push
popa
lahf
lods
sub
mov
aam
sarb
lcall
test
and
mov
adc
mov
sub
test
test
div
mov
test
inc
inc
stos
pop
push
pop
mov
push
and
mov
add
js
add
mov
lods
or
fwait
movsb
pop
xchg
stc
fbld
lods
dec
sbb
jle
stos
pushf
mov
mov
jle
mov
cmp
sub
xchg
sahf
cmp
xor
das
aad
in
sub
and
pop
test
mov
pop
jmp
cld
push
push
out
js
sub
or
fldcw
adc
adc
fwait
sub
stc
mov
sarl
xchg
mov
adc
jbe
fsubrl
and
lret
pop
lock
pop
mov
ret
and
mov
and
ret
xor
aam
sti
or
jg
inc
ret
fisubrl
push
pop
in
cmp
and
andl
mov
stos
push
data16
pop
sbb
fs
arpl
xchg
sub
fdivrl
and
adc
lock
mov
dec
rol
cmpsb
popa
pop
jne
mov
mov
or
mov
mov
cltd
xor
lret
imul
iret
imul
pop
lret
iret
push
xor
dec
ret
outsb
sub
add
pusha
push
add
mov
dec
adc
pop
int
jnp
xor
fstl
mov
jns
mov
adcb
test
jo
shrl
lea
fwait
mov
and
dec
sub
mov
enter
or
inc
adc
mov
lods
aad
cmpsb
mov
add
pop
loop
xor
repz
push
inc
rolb
jl
aaa
arpl
lahf
sbb
sbb
fnstenv
lods
movsl
jno
mov
cmc
loope
dec
xor
adc
ret
movsl
adc
adc
and
daa
imul
inc
dec
jno
sub
gs
push
or
mov
mov
add
lcall
xchg
dec
mov
dec
xchg
sbb
mov
idivl
cmpsl
mov
mov
lods
fsubrs
cmp
cmpsb
adc
gs
cmc
adc
jge
dec
push
out
lods
pop
inc
push
stos
mov
jae
ret
jmp
icebp
cmp
push
pop
xchg
dec
mov
xor
into
in
dec
je
inc
lcall
mov
jmp
cmp
jmp
push
sub
mov
popa
cwtl
pop
gs
and
cs
sub
popl
mov
mov
add
mov
sbb
sbb
in
pop
mov
fildl
orb
and
jmp
cmp
lods
mov
test
leave
iret
mov
faddl
pop
jne,pt
icebp
addr16
lea
and
mov
loop
imul
sub
dec
mov
dec
es
xor
cmp
jl
mov
pop
ficoml
mov
sbb
lea
push
int
xor
outsb
mov
lahf
mov
mov
push
push
ljmp
scas
int
mov
ret
adc
jb
lods
in
imull
push
pop
loopne
aad
in
or
int3
add
sub
sbb
mov
adc
lods
mov
mov
outsb
sbb
mov
sub
push
adc
jnp
outsl
push
iret
jo
jmp
dec
enter
or
cmpsb
popf
dec
negb
jl
clc
mov
mov
repz
sarb
shlb
sub
xorb
inc
lods
jo
cmpsl
fwait
adc
cwtl
test
pop
jno
mov
sbb
dec
xor
and
loopne
jmp
loop
sub
call
dec
out
pop
cmp
gs
test
inc
adc
les
daa
xchg
mov
dec
in
rcrb
mov
rolb
push
xchg
jns
xor
lds
pusha
adc
sub
or
shrl
mov
ret
dec
cmpsl
fwait
rol
hlt
dec
or
arpl
push
arpl
cld
aas
adc
std
movb
xor
cmp
data16
and
loop
xchg
sub
inc
cmp
je
fldcw
xchg
xchg
cld
stos
xchg
std
fptan
push
mov
stc
call
jns
xchg
lock
test
jb
add
sbb
mov
rorb
and
sbb
and
orl
fld
and
mov
rcl
mov
nop
in
adc
les
mov
cmc
mov
inc
lcall
repnz
test
xor
mov
popf
dec
xchg
push
test
sti
scas
mov
dec
mov
lahf
mov
mov
jae
mov
imul
cmp
mov
pop
lahf
test
sub
mov
sub
add
xchg
sahf
jmp
shlb
ss
mov
mov
mov
xlat
stos
adc
sbb
fidivl
sbb
imul
mov
imul
push
data16
repnz
out
mov
mov
icebp
popf
and
mov
rcrb
inc
xor
shrb
mov
rolb
jmp
add
sbb
loop
test
push
xor
outsl
jnp
test
or
cmpsl
xchg
add
call
sbb
lds
enter
lods
inc
mov
mov
enter
mov
add
and
or
lock
mov
push
fcoml
mov
insl
push
mov
cmpb
clc
mov
sub
test
shlb
and
pop
jae
xor
je
inc
mov
fisttps
arpl
sbb
cmpsb
fildl
xor
fcoml
push
sbbb
arpl
push
mov
cmp
scas
mov
stos
jg
sbb
fucomp
imul
pop
mov
mov
cmp
das
pop
ja
popa
xchg
or
aaa
cld
scas
sbb
divl
inc
push
fistl
add
cmpsl
popf
cmpsb
and
ja
fstps
mov
sub
fwait
and
dec
push
fldcw
add
in
pop
fildl
mov
ds
and
dec
pop
inc
lea
adc
push
fwait
xchg
sbb
pop
test
mov
mov
out
xorb
pop
pop
xchg
or
divl
mov
popf
stos
add
pushf
std
out
stc
mov
fldcw
pop
pop
adc
sub
lods
test
lret
es
and
cmpsl
test
mov
and
mov
enter
test
mov
out
outsl
addl
xchg
mov
aaa
aam
fstp
test
clc
shlb
stos
or
int
outsb
fcmovbe
mov
jo
inc
cmp
adc
fwait
sbb
mov
movsl
std
int
mov
xor
dec
arpl
insl
jne
fstps
push
or
adc
or
cli
lock
dec
pop
sub
jns
cmpsb
imul
jae
or
cmc
push
insl
jmp
pusha
clc
fdivrs
adc
mov
aam
loop
fiadds
push
cmpsb
jns
pop
pop
and
mov
xor
popf
sbb
dec
xchg
xchg
xchg
sub
stos
dec
mov
imul
imul
addr16
shrb
rcrb
cmc
xor
mov
pop
and
inc
stc
lahf
mov
pop
dec
xchg
dec
mov
shll
mov
jno
push
jmp
cwtl
sbb
mov
mov
mov
lahf
cmp
pop
and
mov
stos
jne
test
add
push
cmpsb
push
mov
popf
sub
mov
pop
mov
stos
cmpsb
loopne
popf
jle
imul
inc
add
mov
inc
jl
mov
lods
sbb
adc
sbbl
mov
shrl
dec
loopne
push
fs
push
shll
or
pushf
jns
mov
aaa
repnz
xabort
stos
cmp
bound
mov
jnp
xor
push
rcrl
cmpsb
jno
stc
cmpsb
sbb
pop
xchg
mov
mov
pop
and
inc
mov
jmp
pop
lock
pop
fistpll
dec
xchg
adc
jnp
mov
pop
sbb
and
cld
out
mov
aad
leave
outsl
mov
imul
mov
fmul
aaa
xchg
jp
ret
and
mov
inc
jns
gs
mov
mov
aad
pop
lret
mov
or
ja
stos
push
fs
jne
jge
pusha
xor
xchg
sub
cwtl
or
dec
stos
xchg
punpckhbw
add
mov
lock
mov
dec
mov
mov
fs
or
push
dec
sbb
lahf
push
lods
sub
jp
xor
mov
and
pop
ss
mov
mov
daa
enter
mov
pop
dec
sti
aam
and
cmpl
insl
fwait
inc
xor
fisubl
jnp
fdivrl
or
sbb
mov
mov
or
pop
xor
dec
pop
mov
mov
aas
push
inc
lods
jno
inc
push
pop
sub
dec
jae
movsb
xor
adc
stos
mov
in
push
test
add
and
dec
and
sub
data16
and
and
sbb
dec
pop
stc
jl
and
push
jp
movl
rclb
imul
mov
fld
pop
ret
and
sbb
daa
stos
movq
cmpl
fwait
xchg
aaa
add
cmp
fwait
inc
popa
add
mov
pop
sbb
sub
fildl
dec
leave
pop
lds
dec
add
and
cmpsl
test
imul
sbb
jns
mov
cmp
inc
test
ficomps
movsb
stc
mov
pushf
les
bound
push
sbb
sbb
subb
dec
jmp
xchg
stos
mov
in
ljmp
into
jp
lods
aam
sbb
adc
cwtl
movsb
loop
jmp
out
add
xchg
fdivrs
icebp
pop
jne
out
test
mov
iret
pop
jmp
stos
cli
shrl
mov
daa
inc
es
pushf
int3
fisttpl
dec
sbb
popa
xor
dec
sbb
cmpsl
rorl
mov
js
add
sub
inc
mov
cltd
pop
xchg
mov
scas
xchg
mov
mov
xchg
push
mov
ret
pop
lcall
mov
cmp
xchg
sbb
aas
mov
mov
mov
aas
leave
sbb
xor
mov
and
sub
mov
test
das
xchg
mov
sub
fisubl
dec
movsl
cmc
pop
pop
cmp
in
xchg
lods
mov
jb
adc
push
arpl
iret
mov
inc
dec
ja
mov
js
sarb
aas
dec
xchg
sub
into
rcrb
or
arpl
cmp
test
lret
enter
and
add
sti
pop
jl
popa
test
mov
push
loope
cmpsl
sub
dec
enter
fwait
or
fsubl
dec
mov
adcl
outsb
stos
mov
loop
jns
ja
negb
mov
inc
rcl
cmp
mov
jns
or
xor
pop
cmp
sbb
xlat
dec
mov
xor
pop
adc
mov
inc
pop
xor
pop
cmpsb
shll
mov
in
pushf
or
arpl
adc
inc
sub
test
or
jge
aas
shrb
jno
mov
and
fimull
in
and
jmp
fsubp
ds
daa
mov
mov
adc
add
aaa
hlt
fadds
jl
xchg
lock
jmp
cmpsb
fisttpll
aam
inc
in
mov
push
inc
push
shll
cmp
pop
and
popf
pop
clc
mov
stos
mov
jno
cmp
mov
std
mov
mov
pushf
lods
mov
mov
notl
sbb
mov
mov
inc
std
pop
je
dec
and
out
shl
subl
xor
mov
mov
fisttpl
pop
xor
xchg
adc
popf
aaa
sbb
in
ret
js
dec
adc
outsb
notl
cli
pop
sbb
rol
jmp
mov
mov
cmovge
pop
add
sbb
push
aad
dec
int
xor
les
jp
mov
into
add
cmpsl
gs
adc
pop
push
stc
sbbb
mov
out
sub
pop
push
cmp
lods
pop
stos
outsl
iret
mov
mov
jns
scas
push
lock
into
mov
xor
cmp
adc
repz
xchg
xchg
mov
addr16
and
test
xchg
insb
addb
into
jmp
repnz
pop
mov
or
sbb
cs
mov
pop
add
sarl
sub
adc
cli
lahf
mov
popf
mov
jne
out
jg,pn
std
inc
xchg
aaa
mov
mov
mov
jmp
movsl
or
sub
xchg
stc
pop
sbb
inc
daa
and
pop
in
mov
lods
add
pusha
insb
inc
xlat
ljmp
cmp
sub
out
lods
into
push
sbb
lahf
or
mov
adc
arpl
or
dec
orb
and
dec
mov
ja
mov
inc
mov
xor
call
adc
insl
sahf
inc
mov
idivl
cmpsb
fld
xchg
fdivrs
dec
cmp
out
hlt
movsl
mov
pusha
into
mov
pop
int3
mov
mov
mov
sub
xchg
xor
mov
mov
out
pop
or
lea
mov
inc
cld
daa
stos
out
jo
cmpb
or
jge
sti
xchg
fists
dec
test
pop
orl
cltd
insb
xor
lcall
pop
mov
mov
add
ja
push
ja
lcall
dec
push
fnstcw
mov
or
call
lahf
mov
lods
jg
dec
mov
sub
push
repnz
sub
mov
pop
inc
ja,pn
and
jmp
fnstenv
mov
mov
ss
push
jle
dec
test
stc
outsl
or
jb
jge
xor
dec
cld
xor
loopne
xchg
call
mov
pop
jmp
xor
cmp
insl
xor
nop
xor
fs
xchg
mov
lds
sub
mov
jmp
xor
imul
mov
imul
movsb
ss
mov
movsb
js
rorl
cmp
jmp
aad
xchg
adc
imul
lcall
mov
cmc
or
insl
ja
pushf
ret
jno
cmp
or
call
movl
movsl
dec
cwtl
jno
ret
mov
stos
push
js
pop
mov
in
push
out
orl
sbb
pop
out
sbb
shrl
and
jmp
dec
jle
inc
popw
or
test
and
lods
outsl
das
ljmp
jp
cmpsl
fcomps
mov
jmp
pop
scas
testl
out
sub
mov
add
test
aad
mov
fmul
daa
subb
imul
stos
push
faddl
mov
dec
pop
mov
jo
movsl
aam
rcrb
mov
xchg
mov
push
stos
cmpsb
ficoml
popf
jmp
cmpsl
mov
cltd
and
add
daa
lods
dec
test
cmpb
xchg
aaa
aam
mov
testl
cs
push
dec
or
jns
pushf
cmp
mull
push
adcb
cli
cwtl
mov
xchg
jg
fdivr
sub
and
loopne
push
iret
rcrb
js
and
inc
jnp
mov
outsl
sbb
inc
imul
ljmp
je
and
add
sbb
sbb
cmp
divb
mov
jle
jne
push
or
mov
xchg
mov
das
mov
mov
dec
dec
test
ja
scas
xor
das
mov
xchg
imul
enter
ret
mov
sti
jge
xor
lods
lret
sub
inc
mov
and
pop
popf
stos
or
adc
and
sub
mov
lods
cmpsl
ja
int
lahf
test
mov
mov
lahf
xchg
or
push
call
movsl
or
mov
sarl
repz
stc
push
lret
lds
jo
imul
movsl
xor
leave
mov
mov
mov
jle
insl
popf
stc
jmp
sub
jnp
mov
cmpsb
sti
lahf
fisubrs
negl
fwait
jo,pn
push
arpl
mov
test
pop
jl
es
mov
cmpsl
sub
shl
data16
and
or
mov
loope
out
test
shrl
lods
movsb
shl
fdivrs
add
inc
or
pop
fwait
ljmp
mov
scas
movsl
and
mull
sub
adcl
movsw
xchg
arpl
lea
mov
fists
cmp
fstps
mov
shlb
cmp
sbb
jbe
ret
and
test
mov
xchg
lret
sub
aad
or
in
jae
push
lret
lahf
jo
cmp
in
sub
push
ret
daa
into
jmp
jmp
adc
mov
push
sub
adc
inc
popa
je
sbb
sbb
jg
adcb
jl
loope
fistpll
jne
mov
sbb
test
mov
dec
scas
fucomip
sub
push
stos
test
sti
pop
cmp
inc
stos
mov
mov
fdivl
and
inc
xorl
test
fs
adc
cmpsl
leave
mov
push
and
push
pop
push
xor
orb
pop
sbb
jmp
mov
and
inc
popa
sbb
ret
into
jns
imul
pop
inc
hlt
xor
fisttps
or
ss
lock
mov
rcrb
lods
test
cmp
jg
movsl
cmp
mov
or
mov
cli
pop
cmp
inc
enter
mov
xor
jle
fidivs
pop
loop
push
aam
js
sbb
test
push
xor
push
lret
add
pusha
iret
call
je
pusha
mov
mov
or
das
outsl
sub
lock
dec
out
testb
jb
aam
je
cmp
fwait
rorl
add
fsubrs
mov
and
sbbl
fsubp
and
divl
fisubl
iret
fnstenv
test
out
cmpsl
loop
mov
es
sbb
loopne
imulb
sti
cmp
loop
subl
mov
add
test
stc
mov
cli
xchg
jge
ja
sbb
mov
pushf
inc
das
or
mov
popf
or
xor
xchg
mov
out
dec
lret
xchg
ljmp
int
xchg
lods
fldenv
out
mov
cmp
and
pusha
jo
mov
push
sbb
aam
mov
pop
fbstp
add
dec
fcmovnb
push
pusha
xchg
push
pop
push
in
cmpsl
jmp
sbb
jmp
pushaw
push
xor
cmpsb
ds
mov
mov
or
adc
leave
jmp
jp
and
rorb
sbb
pop
rorl
je
out
sub
clc
push
addr16
mov
cmp
aaa
dec
mov
lods
fisubrs
lods
sub
mov
imul
loopne
adc
arpl
add
nop
push
fcmovb
pop
jae
xor
cmp
fdivs
lds
xor
inc
sbb
fcmovbe
cwtl
mov
add
sbb
jmp
adc
xor
or
mov
mov
push
lahf
adc
xor
pop
jb
xlat
jne
dec
mov
pop
pop
mov
cmpsl
ret
mov
adc
add
and
addr16
fs
jmp
aas
mov
push
xchg
imul
pop
mov
pop
cmp
pushw
mov
mov
outsl
div
cwtl
sbb
inc
sbb
test
mov
vpsrld
cmpsl
test
test
pushf
jmp
xor
popa
push
mov
lods
dec
loopne
mul
mov
xchg
test
mov
call
stos
imul
cmp
into
xchg
mov
inc
push
xlat
mov
jnp
mov
mov
subl
mov
loopne
adc
int
fwait
out
mov
das
xor
std
dec
mull
int3
lock
sub
or
fisttpl
add
fs
inc
mov
cld
iret
dec
sahf
in
stos
and
das
mov
mov
test
aaa
gs
and
lret
pushf
xchg
mov
bound
jo
ds
jge
mov
sbb
mov
shll
adc
sbb
push
cmp
mov
mov
jno
push
imull
inc
mov
adc
test
jae
jb
jp
test
xor
mov
jecxz
mov
ljmp
test
scas
inc
cmpsb
adc
loop
outsl
subb
jg
enter
lds
inc
stos
daa
xor
arpl
mov
addb
subb
mov
mov
xor
sub
cmp
cmp
leave
mov
fwait
mov
call
mov
cld
mov
test
push
test
shll
mov
imul
cmp
ss
mov
inc
dec
idivl
gs
mov
mov
xor
mov
sub
push
test
sbb
push
popa
inc
xchg
mov
jle
inc
or
xchg
jns
loopne
sub
adc
leave
dec
movsb
mov
or
lahf
mov
movl
mov
andl
rorb
nop
mov
add
mov
jo
inc
dec
lret
int
ja
cmp
pop
rclb
out
add
aaa
cmp
pop
arpl
add
popf
in
push
lea
lods
int3
cmp
jle
inc
mov
mov
adc
das
xor
not
mov
mov
sbb
push
leave
cmp
push
mov
ja
inc
jmp
movsl
test
in
pop
push
mov
add
int
pop
lods
imul
or
mov
push
sbb
add
mov
dec
sbb
test
sub
xchg
fcompl
inc
pop
jmp
aam
out
xchg
sub
add
fadds
inc
in
cmp
xchg
and
dec
fwait
push
jmp
or
lcall
loopne
dec
push
cmp
pop
jae
pop
aas
mov
sahf
in
cmpsl
subl
inc
ljmp
push
sub
add
push
iret
jp
sub
filds
xor
dec
ljmp
sub
popf
xor
cwtl
scas
sahf
cmp
in
cmpb
lret
outsl
cmpsl
xor
jg
ja
xchg
imul
ss
sub
sub
stos
andl
push
ja
mov
pop
inc
jmp
and
sbb
scas
pusha
negl
and
pop
jb
lea
push
pushf
inc
sbb
inc
lahf
mov
lret
cmpsl
test
adc
sub
sub
lcall
popf
insl
dec
int3
mov
test
push
mov
sub
repz
pop
enter
cmp
cmp
push
mov
inc
cmp
addr16
inc
inc
and
or
sbb
mov
jno
xorl
imul
imul
xchg
dec
push
lea
inc
inc
push
or
push
mull
pop
sti
das
pop
not
and
add
movsl
test
dec
xchg
rolb
rcll
dec
mov
mov
loopne
mov
icebp
mov
mov
cmp
xchg
pop
stos
sub
mov
xor
mov
xchg
imul
lea
xchg
test
test
inc
jg
jmp
xchg
or
sub
sbb
mov
push
lcall
in
arpl
fwait
mov
mov
sub
int
mov
movsb
pusha
jge
stos
push
add
jbe
je
lds
dec
faddl
lcall
std
push
inc
popf
test
adc
or
push
and
pop
ret
mov
sbb
cmpsl
cmp
inc
mov
mov
mov
dec
mov
sub
mov
lods
mov
scas
xchg
pop
cmpsb
jmp
adcl
lea
cmpsl
sbbl
pusha
inc
sahf
jns
xor
xchg
test
and
inc
icebp
test
loop
imul
lret
inc
jns
mov
xchg
jae
lods
push
stos
daa
mov
sub
inc
sub
mov
pop
sbb
stc
ljmp
int
add
adc
idiv
sbb
mov
pushw
xor
lods
mov
push
dec
aam
mov
adc
cmpb
movsl
xchg
mov
sub
cmpsb
lds
arpl
sbb
pop
add
sub
test
stc
adc
sub
cmp
xchg
loope
xor
sub
push
xor
lods
cmp
aas
shrb
mov
fwait
mov
mov
test
add
pop
ja
leave
push
xchg
mov
outsb
dec
subl
dec
lods
nop
rolb
stos
adc
imul
in
loopne
push
pop
outsb
mov
call
nop
sahf
imul
sbb
daa
test
das
or
adc
sub
sbb
mov
and
push
fsubrl
notl
inc
mov
sahf
mov
imul
mov
andl
outsl
pop
pop
sbb
in
mov
cmp
xchg
stc
repnz
mov
mov
leave
inc
xor
or
stos
aas
dec
testl
push
dec
cmp
inc
xchg
mov
and
mov
jmp
mov
lock
mov
pushf
fwait
jmp
jl
xor
mov
lock
mov
sub
int
fmulp
mov
aam
ret
sbb
jmp
in
outsl
push
add
popf
lods
gs
sti
xchg
push
dec
dec
jnp
sti
mov
ss
add
pop
sti
mov
mull
dec
lock
mov
sub
sub
mov
or
inc
aad
mov
cli
or
inc
mov
ret
pop
mov
shlb
inc
gs
movsl
cmpsb
sub
sub
pop
mov
mov
rclb
pop
dec
gs
and
mov
pop
rcrb
sbb
enter
cmpsb
jae
jne
cmpsb
insl
ds
or
sub
xchg
mov
jmp
cmpsl
addr16
xchg
lret
loopne
pop
dec
jmp
test
mov
scas
jmp
mov
mov
pop
das
mov
jl
xchg
sbbl
adcb
sbb
shlb
mov
lods
movsb
imul
negl
ror
add
jnp,pt
mov
movsl
mov
and
cmpsl
inc
imul
out
push
push
out
xchg
sub
mov
xor
lcall
jne
push
in
cmpsb
popf
cmpl
mov
add
lock
in
jnp
dec
shll
subb
mov
movsb
push
jbe
push
and
sbb
arpl
jle
arpl
inc
add
mov
xor
popf
inc
icebp
gs
popa
mov
pop
ljmp
sbb
lahf
xchg
fistl
scas
lds
or
cltd
sbbb
fwait
mov
dec
shrb
xor
movsl
mov
pop
dec
clc
push
aad
imul
out
fmull
testl
movsl
test
int3
rcrl
mov
cli
or
into
stc
shr
pop
jl
or
mov
inc
test
jbe
mov
push
lret
jmp
sub
enter
lea
hlt
mov
in
mov
xchg
jmp
lods
stos
xchg
adcb
adc
cld
cmp
adc
xor
jns
stos
lcall
jmp
imul
adcl
mov
mov
testl
pop
leave
add
imull
addr16
sub
mov
mov
dec
dec
aad
popf
jmp
mov
test
pop
mov
push
popa
ss
movsl
pusha
pop
and
movsb
imul
jl
mov
cmp
movsl
test
mov
lret
mov
dec
xor
add
stos
cli
in
mov
daa
cmp
cwtl
enter
lds
jns
in
stos
inc
adc
xchg
pop
ja
test
loopne
cmp
cmp
sbb
add
mov
dec
stos
sub
dec
mov
and
ret
aam
icebp
rcrb
xchg
xor
lods
inc
mov
mov
cmp
dec
jge
or
sahf
test
sub
dec
adcb
jp
jne
mov
xor
xor
addb
and
pop
imul
pop
loope
and
push
jle
mov
push
popa
gs
pushf
jmp
add
addr16
add
push
lret
out
cmp
xchg
push
mov
jmp
testl
push
mov
dec
xor
xchg
jae
pop
cmp
xchg
mull
imulb
mov
push
mov
and
lods
sti
xchg
inc
mov
or
jecxz
scas
inc
test
xor
cmp
jbe
mov
jnp
rcrb
mov
mov
lds
insb
popf
lret
and
mov
imull
push
xorb
adc
in
outsl
mov
dec
push
fisttpl
mov
add
mov
inc
push
jg
pop
inc
sub
cmc
ret
clc
mov
in
mov
mov
cld
pop
adc
xor
insb
js
cmp
cmp
mov
inc
mov
mov
cmpsb
lods
dec
fwait
push
mov
cmp
inc
mov
loopne
loope
jp
insl
inc
jae
mov
fists
xor
flds
sub
mov
adc
mov
popf
fbld
push
stos
xchg
push
pop
cmp
or
xlat
in
mov
xchg
aam
stos
xor
divb
divl
lret
repnz
das
mov
lods
xor
imul
shrb
push
sub
inc
sub
hlt
imul
inc
bound
je
daa
jmp
xor
testl
shr
outsl
in
sbb
push
cmpsl
xchg
sti
jp
test
inc
rol
adc
lret
cli
fisubs
cwtl
and
mov
cmp
fs
fwait
daa
xchg
stos
inc
cwtl
imul
dec
rcl
ljmp
lods
lds
cmpsb
popa
add
pop
fmuls
aam
jmp
das
xchg
aaa
cmp
inc
dec
in
inc
cmpsb
mov
lahf
jmp
or
lods
stos
aas
inc
jmp
jle
js
shr
repz
mov
and
addr16
imul
xchg
mov
fwait
mov
cmp
pop
repnz
mov
lret
aam
pushl
es
or
xor
xor
and
insl
push
lds
popa
in
popa
adc
cmpsl
cwtl
mov
repnz
jns
and
loopne
shll
mov
cmp
arpl
addb
mov
push
pop
stos
fwait
push
test
dec
adc
addr16
loope
out
sbb
into
rcrl
inc
fsts
sbb
push
loope
les
mov
insl
into
xchg
mov
mov
cli
sbb
jns
int3
or
fcomps
pop
mov
cltd
inc
in
xor
cmp
loopne
cmpsb
ss
stos
push
jns
stos
and
fwait
pop
pop
cli
fistpll
imul
rclb
cmpsl
and
pop
sub
psubusb
add
add
ja
sahf
mov
and
mov
mov
mov
mov
xchg
dec
lods
sbb
sbb
pop
lret
push
mov
adc
pop
fidivs
push
scas
movsl
adc
sbb
test
ss
cmpsb
mov
leave
xor
mov
mov
or
xor
or
mov
mov
mull
inc
pop
push
sub
xchg
xchg
es
popf
inc
gs
and
repz
inc
scas
lret
imul
inc
sub
push
inc
add
dec
and
mov
dec
inc
jmp
mov
cltd
pop
sbb
mov
jb
add
dec
cmp
outsl
lea
dec
adc
lods
ja
cmp
and
dec
xchg
sub
shlb
shrl
mov
jl
lods
stc
mov
in
push
pop
lods
aad
sarb
mov
xchg
jno
inc
mov
inc
dec
bound
insl
cmpsl
loop
xchg
test
sbb
fdivl
fwait
test
arpl
pop
ja
mov
fistl
dec
popf
sbb
mov
cs
stc
and
mov
mov
movsl
and
jne
sub
mov
pop
adc
outsl
xchg
int
mov
pop
loope
ss
mov
mov
mov
in
sbbl
sub
sub
inc
cld
lods
aad
pop
inc
mov
pusha
mov
lahf
pop
and
add
xor
je
jno
js
dec
pop
pop
negl
aaa
in
scas
mov
insb
repz
into
cmp
mov
gs
lds
fwait
es
jae
mov
icebp
repz
in
imul
int
mov
adc
insb
mov
jne
and
or
lds
push
xchg
loope
dec
call
add
mov
js
test
push
idivl
int
add
dec
mov
into
jbe
stos
adc
dec
push
dec
adc
les
cs
xchg
mov
and
loop
mov
xor
jmp
and
fwait
push
or
or
in
in
cmpb
aam
and
es
push
subl
or
stos
das
sbb
fsubl
mov
insl
mov
mov
int3
jns
inc
nop
fstpl
icebp
fwait
push
inc
sub
mov
dec
and
andb
scas
addr16
mov
pop
scas
xor
ss
ds
dec
rorb
sbb
mov
and
inc
mov
pop
dec
sbb
jg
lods
mov
addr16
dec
test
sahf
push
adc
insb
dec
ret
sbb
mov
rcrb
lds
or
fsubrs
jo
dec
mov
inc
sarb
mov
lcall
test
ja
pop
mov
xor
mov
lcall
lret
and
repnz
mov
std
pusha
data16
push
gs
fildl
adc
mov
mov
andb
fs
lahf
aas
push
jbe
inc
sbb
dec
cmpsl
dec
add
enter
jnp
test
bound
push
inc
test
call
mov
lods
popa
dec
push
dec
mov
jo
shlb
push
xchg
into
movsl
mov
mov
jl
sbb
andl
pop
jl
sahf
sub
dec
jne
push
lods
pop
lcall
adc
lods
shlb
mov
pop
jo
pop
inc
dec
mov
push
mov
insl
jno
nop
inc
lret
cs
inc
gs
and
lret
test
cmp
xrelease
cmp
lcall
dec
xchg
push
in
mov
out
inc
and
jo
daa
push
sub
mov
push
andl
rorb
in
mov
jmp
mov
push
aas
pop
xor
jecxz
pop
imul
sub
jne
lods
scas
cmp
inc
lret
push
icebp
sbb
jmp
test
test
popf
sub
xchg
es
or
shl
add
xor
pop
xlat
aad
mov
or
in
pop
movsl
iret
dec
lea
xchg
jno
in
jb
lahf
mov
out
jg
jbe
adc
repz
faddp
and
punpcklwd
jb
fistpll
and
gs
lret
dec
pop
repnz
push
popl
mov
mov
add
jle
inc
int
leave
ja
out
arpl
adc
xor
pop
mov
ret
mov
mov
inc
mov
mov
jg
gs
sbb
loop
negb
cmp
popa
nop
push
jmp
mov
mov
test
xorb
and
inc
addr16
jno
xor
sub
rorb
int3
nop
mov
imul
shrb
mov
xchg
sub
ss
mov
adc
push
xchg
mov
flds
cwtl
xor
loopne
xorb
xchg
int3
xchg
sbb
mov
scas
mov
notl
dec
imul
mov
mov
sbb
popa
and
mov
pop
lret
insl
add
sub
sbb
xchg
add
hlt
cmpsl
mov
push
ja
mov
insb
xor
mov
dec
dec
insl
add
jbe
aam
arpl
push
sub
pusha
push
or
addr16
lods
mov
mov
mov
scas
popa
jnp
stc
dec
inc
sbb
into
or
jle
lret
pushf
je
and
push
cltd
outsl
xlat
stc
adc
pushf
pop
xchg
iret
test
pop
ret
stc
arpl
jp
xchg
lcall
xchg
in
lds
sub
xchg
mov
or
shlb
test
and
outsb
shll
pop
jecxz
mov
dec
mov
push
jge
lret
push
stos
psubsw
mov
xchg
lods
cmp
pop
inc
dec
sbb
jmp
out
pusha
sahf
push
add
popf
push
daa
or
loope
sbb
aam
xor
xor
add
aas
aam
sarl
pop
mov
aaa
ja
int3
mov
xor
mov
daa
mov
inc
xchg
in
pop
jae
mov
imul
or
in
jno
sbb
mov
arpl
mov
push
pushf
dec
xchg
jb
cmp
mov
leave
or
stos
popa
add
popf
xor
stos
jbe
jge
xchg
push
lds
pop
insl
mov
test
test
pop
dec
imul
dec
roll
inc
out
out
sbb
jg
jg
push
fbstp
ror
scas
in
ja
cs
scas
js
jne
xlat
and
jmp
jbe
xor
cmp
dec
adc
cmpl
test
mov
sbb
push
ja
mov
imul
shlb
aaa
into
jmp
mov
fisttps
aas
dec
push
arpl
lcall
in
or
lods
decb
in
jns
movsb
xchg
mov
mov
pop
pop
arpl
rorl
xchg
fwait
mov
insl
adcb
lea
mov
push
xor
imul
pop
movsl
inc
shr
sbb
add
jge
mov
les
daa
mov
adc
mov
aas
test
lret
test
sub
fs
cltd
adc
leave
sahf
pop
ja
enter
add
les
je
rol
xchg
cmpsb
inc
movsb
mov
popa
lods
dec
lret
push
dec
jmp
das
pop
pop
icebp
imul
cwtl
pop
pop
mov
mov
stos
cmpsl
xcrypt-ctr
cmpsl
pop
jmp
or
arpl
sahf
pusha
cmpsl
xchg
sub
sbb
push
stos
or
add
mov
mov
mov
mov
addl
sar
mov
pop
andb
lock
push
sub
pop
decb
adcb
push
not
aaa
fcmovb
outsb
test
mov
jnp
popa
sub
jae
mov
inc
mov
or
xor
fwait
and
jns
repz
jecxz,pn
in
cmpsb
sysret
cmp
rorb
fcomps
sti
mov
jns
xchg
mov
fdivr
mov
jmp
mov
cwtl
inc
xchg
mov
push
sahf
mov
sbb
testl
cwtl
mov
jns
je
push
mov
xlat
jg
es
bound
out
das
test
lret
xor
jno
inc
and
int3
inc
rcrl
adc
imul
push
mov
aas
sub
aad
sbb
out
addr16
inc
and
scas
sahf
xor
cs
sbb
mov
jae,pt
jge
dec
inc
loopne
lret
adc
mull
cs
pusha
and
aas
inc
pop
push
daa
pop
or
imul
mov
jb
subl
fimuls
jmp
cmpsb
cltd
mov
xor
dec
shlb
xor
mov
aad
negl
mov
stos
mov
xor
neg
sub
insl
sub
gs
call
ja
popa
sti
mov
call
adcl
and
mov
sub
inc
shlb
xor
into
and
dec
xchg
and
mov
xor
xchg
clc
inc
cmp
pop
out
cmp
dec
ds
shlb
data16
jne
cmp
shrl
mov
push
push
ja
test
cmp
add
sahf
jmp
pop
mov
cmp
gs
cmp
testl
pushf
dec
mov
cmp
and
shrl
cmp
mov
xchg
xor
fwait
enter
dec
or
movsb
xor
mov
out
mov
rcr
add
push
mov
dec
inc
mov
mov
xchg
shll
push
aam
jmp
jo
dec
xor
cmp
lods
mov
xor
mov
mov
andb
testl
inc
mov
pop
decl
js
mov
scas
mov
jp
mov
push
sub
dec
mov
cmp
mov
pop
jno
add
push
fcmovne
jmp
lods
cmpb
xor
and
ljmp
mov
loop
shlb
pop
ret
cmpsb
sahf
test
mov
mov
divb
cs
fwait
add
lea
sbb
mov
aam
movsb
jae
ret
test
insb
inc
shll
xor
mov
push
cmp
push
mov
jbe
ret
shrb
fistl
lods
xchg
pushl
jnp
mov
inc
or
inc
fsubrl
ljmp
inc
cmp
jmp
cwtl
repz
push
test
ja
mov
inc
adc
dec
bound
jecxz
mov
sub
inc
push
add
mov
cmp
repnz
and
test
pushf
xchg
aam
aaa
leave
movsb
std
mov
mov
outsl
outsl
stos
or
push
pushf
inc
cwtl
decb
fwait
mov
nop
xchg
fisubs
push
cmove
add
cmpsb
outsb
out
push
stos
stos
mov
mov
mov
mov
xchg
xor
arpl
sbb
mov
mov
fidivrl
sbb
imul
and
lcall
out
notl
enter
mov
ret
xchg
js
out
pop
xor
pop
xchg
mov
cmp
jmp
inc
or
mov
arpl
dec
dec
sbb
push
add
xchg
xor
cltd
inc
mov
inc
inc
mov
enter
mov
sub
jg
sarl
insb
pushf
ds
sub
pop
test
mov
sbb
sub
je,pn
aas
out
cmpsb
and
ret
or
test
pop
ds
in
adc
mov
mov
outsb
imul
inc
jbe
out
inc
jae
lret
cmp
mov
sub
sub
dec
jns
cld
mov
lock
addl
xchg
push
rcll
lea
push
add
xor
xchg
mov
sbb
lret
fldenv
xchg
jb
bound
jnp
flds
inc
fmul
push
inc
outsl
cmpsl
in
stos
dec
popf
pop
add
dec
nop
mov
add
lea
xor
jmp
sahf
pop
mov
xchg
ja
inc
iret
xchg
pop
outsb
fdivp
sub
fcmovnu
out
lock
cmp
or
ja
adc
stos
push
test
pop
cmc
or
int3
cwtl
je
daa
pop
sub
xchg
fwait
into
pop
sbb
add
sbb
stos
cld
inc
jns
mov
xor
xchg
lahf
push
jbe
jecxz
iret
and
in
and
jns
mov
mov
mov
or
andl
addb
fimuls
js
imul
ljmp
scas
fimuls
std
je
cltd
lock
lcall
cmpsl
stos
add
push
sbb
and
xchg
dec
in
aam
inc
mov
pop
sarl
xor
push
arpl
int3
insl
mov
cmpsb
dec
jmp
ret
call
lods
inc
pop
loope
mov
lahf
mov
mov
sub
xor
lds
das
imul
in
arpl
jecxz
mov
popa
mov
sub
sbb
mov
or
push
adc
nop
add
push
xchg
insb
leave
xor
mov
sarb
movsl
popf
loop
mov
xor
shl
outsb
cmpsb
mov
lret
pop
inc
push
pusha
pop
pop
dec
stc
cwtl
mov
aaa
inc
fdivs
xor
lods
jnp
jae
jno
jns
cmp
daa
mov
dec
and
inc
call
loop
mov
lods
sarb
nop
aas
nop
mov
and
xor
popa
xor
dec
data16
dec
cmp
pop
popf
lods
push
pop
sub
inc
jbe
test
sbb
outsb
nop
jmp
mov
imul
xchg
xorl
mov
push
mov
jmp
or
sbb
int
repnz
movsb
lods
roll
enter
jb
test
push
addr16
das
sub
addr16
mov
call
jmp
ljmp
mov
rcrl
lret
es
push
into
mov
aas
popf
mov
sub
push
xor
call
lods
nop
mul
jl
fnstenv
imul
mov
jmp
mul
mov
cwtl
mov
in
sbb
aas
jmp
xchg
mov
negl
fcomip
or
lahf
push
push
xlat
in
inc
and
add
cli
cmpsb
xchg
jmp
shr
stos
and
test
aas
push
cmpsb
mov
ret
add
arpl
mov
fldcw
xor
lea
fimull
lahf
out
push
gs
push
sbb
mov
popf
cmp
sahf
fs
adc
cmp
test
sub
mulb
or
aas
stos
rorl
sub
in
dec
rorb
cltd
jo
inc
mov
cwtl
cmpsl
popf
adc
std
pop
mov
sub
pop
negl
movsb
bound
imul
pop
add
jle
mov
enter
dec
cwtl
xor
sub
flds
mov
ja
push
adc
xchg
jns
sbb
les
sub
lahf
push
mov
pop
jg
adc
call
cmp
mov
imul
std
xchg
jno
jae
xor
pop
mov
sub
xchg
testl
out
jmp
lret
inc
mov
xchg
mov
mov
test
stos
cli
lods
in
lret
dec
dec
sbb
mov
xchg
sbb
mov
pop
repz
jg
and
jle
mov
inc
jmp
stos
jb
rol
lcall
xor
mov
sub
int
cmp
gs
and
jmp
popa
imull
icebp
mov
dec
lcall
or
inc
ret
daa
movsl
jae
ljmp
push
lds
add
out
addr16
test
jns
jmp
mul
cwtl
jo
mov
xchg
mov
pop
pop
mov
cmp
ja
lcall
or
lcall
cmpb
pop
push
mov
movsb
push
lock
in
mov
cld
stos
lea
js
cmp
hlt
and
lock
lods
jns
push
dec
inc
and
dec
ljmp
std
test
adc
mov
cmp
imulb
test
sbb
fwait
repz
jg
popf
loopne
test
inc
cmp
test
and
in
lcall
pop
loope
push
push
fwait
stos
rolb
mov
cmpsl
loopne
sahf
test
js
scas
sub
scas
mov
fisubs
test
jbe
lcall
jmp
xor
outsl
cmp
and
inc
fstpl
mov
push
hlt
insl
cmp
jne
aad
gs
dec
push
xchg
cmp
xchg
jg
push
and
into
sbb
mov
mov
cmp
insb
mov
inc
fs
dec
cmp
mov
sub
loop
mov
mov
add
test
lods
fmull
mov
aaa
mov
inc
mov
dec
sub
sti
pop
xchg
push
mov
jne
jno
mov
enter
mov
lods
mov
jns
insl
sub
push
pop
jns
out
je
ffree
xchg
in
lods
push
sbb
shrb
sub
push
std
xor
scas
and
scas
add
int3
xchg
repz
bound
arpl
dec
lods
dec
shrb
pop
cmp
mov
dec
cmpsl
in
insb
dec
cmp
lcall
sbb
dec
jg
sbb
or
xchg
xchg
jg
ljmp
jp
adcb
add
not
leave
pop
xor
ja
dec
mov
test
mov
xlat
fwait
cmp
add
xchg
rclb
mov
jmp
loopne
push
sub
cld
lods
scas
rorl
mov
leave
and
sub
xchg
fmul
pusha
clc
inc
pop
push
mov
lahf
frstor
aas
lret
insb
sbb
std
adc
outsl
mov
aad
aas
pop
jl
mov
mov
mov
xchg
stc
cmp
or
mov
fucomi
not
cmp
mov
subb
mov
test
ljmp
cmp
fwait
jae
jle
mov
inc
roll
in
enter
and
sbb
add
mov
sahf
divl
sarb
mov
cmpsb
scas
mov
in
mov
dec
jmp
fsubrp
sbb
jmp
js
int3
mov
icebp
cmp
sub
cld
and
pop
sub
out
sub
mov
iret
and
adc
aaa
nop
mov
sahf
dec
jb
xchg
xchg
push
lea
pop
mov
mov
adc
enter
jp
sti
clc
dec
call
mov
ret
jmp
ljmp
pop
pop
dec
dec
or
adc
push
sahf
test
test
jmp
jae,pn
push
arpl
lcall
cmpsl
and
fistpll
test
xor
dec
inc
stc
push
xor
stos
and
sbb
xchg
cmpsb
xchg
pop
mov
xchg
or
stos
notb
movsl
jmp
popf
mov
xor
add
orb
lret
pop
lcall
pushf
test
out
mov
mov
pop
popa
int
pop
sahf
in
scas
or
mov
lahf
pop
scas
fwait
lds
in
jge
icebp
push
mov
aaa
sbb
jo
dec
or
cmc
jle
mov
sbb
adc
mov
add
cli
push
aad
insb
xor
inc
push
cmpsb
push
mov
in
iret
sub
pop
mov
sbb
mov
sub
fnsave
xchg
jb
mov
mov
mov
movsl
mov
lcall
or
fildll
ret
push
mov
call
xchg
test
push
pop
mov
mul
push
sbb
out
xchg
nop
popa
push
scas
add
iret
inc
insb
dec
pop
mov
out
sbb
into
mov
es
enter
ficoml
adc
mov
lcall
hlt
adc
mov
andl
lret
arpl
int3
jae
xchg
and
fisubs
scas
pop
imul
cmp
addr16
sbbb
ficoms
add
fidivrl
sbb
or
adc
dec
addr16
jmp
arpl
lock
mov
loopne
mov
xchg
adc
ret
inc
or
push
iret
jne
test
jmp
mov
mov
xchg
std
cmp
push
jg
sarl
inc
xor
outsb
or
sti
inc
rol
out
addl
movsb
lods
outsb
sub
push
ret
int3
add
lds
leave
pop
sahf
aam
cmc
dec
mov
mov
imul
mov
cmpsl
xchg
sub
sub
shr
mov
sbb
adc
imul
and
xchg
sub
in
pop
sbb
bound
adc
push
faddl
punpckhwd
test
movsb
in
mov
arpl
cli
or
lcall
mov
lea
fmul
xor
ds
dec
data16
and
inc
ret
pop
mov
sub
push
mov
jg
jnp
mov
jl
mov
popa
fnstenv
fidivl
jbe
sub
sub
into
or
dec
test
xchg
mov
push
add
insb
aad
add
insb
shlb
lcall
mov
loop
adcb
lret
mov
adc
inc
jmp
pop
out
test
insl
mov
jno
xchg
or
es
or
push
or
and
cmpsl
or
mov
push
dec
adc
aad
mov
xor
sbb
leave
pop
fbld
mov
aas
push
in
cmp
mov
stos
or
add
mov
and
or
adc
pop
xor
add
pop
sub
lahf
add
mov
cmp
sub
aas
add
inc
mov
mov
mov
ret
mov
adc
dec
leave
adc
int3
add
inc
mov
cwtl
orb
dec
add
js
dec
rorl
inc
mov
andb
negb
sub
dec
xor
jg
xor
iret
jnp
mov
es
ja
xor
push
add
sbb
addr16
movb
repnz
fistpll
das
inc
jmp
dec
aas
rcll
gs
jae
outsb
adc
shlb
popl
lret
fidivl
in
subb
test
push
xchg
in
iret
xor
ja
adc
mov
mov
ss
loope
pop
lods
mov
inc
mov
dec
mov
mov
lret
ret
aam
out
inc
cmp
and
std
jbe
jl
xor
divb
dec
jge
cmp
imul
lods
mov
lret
imul
mov
lds
cmp
adc
rclb
ret
cmc
mov
push
inc
pusha
in
push
cmp
mov
sub
insl
mov
pop
sbb
cmpsl
shlb
or
jmp
pop
sbb
cmpsl
lret
inc
dec
movsb
loop
mov
lret
fcoml
xlat
rorl
jmp
add
mov
lahf
or
invd
mov
stos
jno
int3
inc
dec
or
mov
imul
adc
stc
mov
pushf
mov
stc
arpl
sub
or
pushf
ss
pop
mov
out
or
mov
dec
xor
fs
adc
adc
pop
pop
lcall
xchg
cmpsb
mov
xor
mov
dec
mov
jl
adc
jecxz
loop
jns
jl
pushf
scas
mov
into
pop
test
sbb
pop
mov
stc
iret
sub
push
in
call
aam
sub
testb
inc
mov
jmp
lock
clc
and
add
mov
mov
xor
or
cmp
mov
rcrb
xchg
movb
fisubs
daa
icebp
js
cmp
mov
mov
mov
js
movsl
movsb
lret
aas
stos
fadds
in
mov
leave
adc
das
ret
inc
xchg
je
lock
xor
aam
sub
mov
cs
mov
fwait
mov
xor
in
cmpsb
mov
nop
add
push
xchg
rolb
push
mov
and
cs
pop
cmp
pop
inc
jbe
pop
jecxz
pop
add
jne
xchg
mov
pop
jno
mull
mov
sbb
arpl
aam
fdivp
enter
mov
and
imul
dec
jl
pop
leave
pusha
add
addr16
cmp
enter
loop
lods
loope
jmp
jmp
or
jmp
adc
sahf
and
rorb
mov
add
pop
inc
pop
scas
sub
test
sbb
mov
mov
pop
xchg
push
ror
xlat
loope
pop
mov
mov
inc
mov
lock
inc
jbe
mov
push
sarb
lock
mov
inc
jmp
inc
mov
add
cmp
sub
mov
cmp
js
imul
insl
cmp
xchg
mov
inc
sbb
iret
cmp
test
lret
and
sub
xchg
pop
ss
cmp
ss
and
js
adc
in
mov
imul
orb
mov
cmp
sahf
jne
mov
mov
or
xchg
call
jne
ds
mov
icebp
es
jmp
test
es
adc
mov
mov
jne
popf
sub
and
stos
loopne
or
xor
and
rolb
xor
and
iret
adc
and
xor
adc
arpl
jne
or
sbb
mov
xchg
mov
int
inc
jl
lock
outsb
fwait
dec
data16
popa
jmp
inc
lods
lock
scas
movsb
mov
leavew
mov
cmp
jno
pop
insb
sarl
push
in
aam
mov
mov
mov
sbb
mov
mov
inc
je
mov
fidivl
sub
fs
pop
nop
icebp
lea
aam
sub
xchg
dec
dec
dec
add
or
mov
cmpsl
xchg
mov
je
mov
pop
mov
and
jo
sub
and
dec
mov
dec
pop
mov
jns
cmp
inc
jnp
lock
jbe
push
test
cs
mov
sbb
sub
push
jnp
les
in
pop
scas
mov
es
mov
daa
incl
js
orb
stos
mov
push
sub
xor
add
loop
lds
mov
mov
test
fnstenv
xor
mov
mov
and
jle
cld
mov
pop
mov
mov
movsl
mov
loopne
or
ja
jne
xchg
idivl
and
mov
sbb
xchg
fldl2t
in
mov
and
jl
cmpb
mov
mov
lock
cmpsb
pop
orl
jne
inc
test
mov
cmp
jnp
push
adc
dec
mov
xor
and
testb
dec
into
lcall
jo
xor
bound
push
or
mov
arpl
aam
ret
fdivrp
add
stos
ret
pop
cmp
mov
adc
idiv
mov
sbb
movsb
pop
sbb
or
movsl
lret
in
mov
add
xor
inc
ljmp
movsb
pop
mov
push
cmpsl
js
ficoml
movsb
mov
or
inc
mov
pop
adc
rol
xorl
adc
leave
loopne
and
jmp
hlt
dec
js
in
leave
push
pop
mov
push
in
add
fistps
push
mov
call
adc
addr16
push
sub
icebp
dec
into
and
sbbb
sub
imul
loope
jno
xor
mov
jecxz
lock
sti
xor
enter
xor
push
mov
and
push
pop
movsb
mov
sub
mov
xchg
fcoms
mov
imul
stos
xchg
jecxz
dec
mov
inc
dec
xlat
test
pop
mov
test
add
pop
jne
add
in
mov
sub
arpl
sbb
insb
inc
les
test
mov
inc
iret
inc
into
gs
arpl
jno
pushf
cs
jmp
and
popf
addl
pop
adc
hlt
adc
xlat
imul
lods
inc
mov
mov
mov
fsubrl
jecxz
arpl
jbe
add
mov
cmpsl
mov
shll
ss
cmc
ret
loope
out
inc
mov
int3
push
lods
or
imul
mov
dec
push
sbb
clc
repnz
add
cmpsb
arpl
mov
dec
jbe
test
lea
jbe
jg
scas
pop
pushf
add
scas
mov
dec
pop
push
inc
movsb
repz
dec
fwait
pop
daa
inc
and
nop
das
mov
jbe
and
imul
add
mov
fisubs
call
test
lds
dec
and
popa
mov
mov
incb
ret
ss
jno
pop
aaa
into
shll
jb
test
mov
cmp
jmp
cvtps2pd
popf
fistl
ljmp
pop
mov
xor
inc
repz
pop
sub
lea
mov
movl
sbbb
nop
adc
out
jne
mov
mov
cmpsl
andb
loope
push
scas
dec
cmp
adc
test
jbe
dec
or
mov
adc
adc
and
into
inc
xchg
mov
cmp
inc
sub
sar
xor
jnp
cli
movsl
cmp
cmc
or
adc
iret
mov
pop
testl
cmp
sub
mul
xor
dec
mov
mov
andb
mov
xlat
jns
aam
popf
pop
lret
call
inc
testl
sbb
pop
nop
mov
mov
daa
mov
arpl
xchg
orb
cmp
push
stos
mov
outsl
nop
xchg
loopne
mov
dec
push
shl
shll
adc
cmp
mov
sbbl
dec
jne
imul
adc
pushf
xchg
xchg
jbe
push
sbb
lock
mov
jmp
sub
sbb
ss
movsb
aaa
notl
lahf
xor
sub
mov
xor
sbb
xchg
in
sub
or
pop
in
adc
xchg
test
stos
fstps
or
cmp
lock
cwtl
das
cmp
lods
dec
mov
jmp
adc
jmp
daa
inc
addr16
mov
xchg
ret
and
mov
iret
ds
ret
mov
mov
or
and
dec
mov
bnd
dec
jne
dec
adc
cmc
inc
xchg
inc
cmp
test
adc
pop
fcmovnbe
in
pusha
xchg
pop
leave
mov
pop
lahf
mov
push
pop
sbb
leave
loop
push
lret
mov
inc
inc
shlb
jp
aam
pop
push
jge
jp
mull
lcall
test
xchg
sbb
leave
into
inc
enter
sbbl
pop
outsl
les
sub
pop
mov
mov
pop
cmp
das
inc
sub
lods
ficompl
in
lods
push
or
xchg
lock
js
shrb
scas
sub
mov
sub
mov
cmp
mov
cld
sub
mov
pop
in
pop
cld
je
add
mov
pop
cmp
fidivrl
rcr
mov
push
push
movsl
lret
add
data16
cmp
mov
insb
movsl
dec
adc
or
fs
ficomps
fwait
iret
insl
aaa
leave
pusha
ss
cmp
fstl
mov
pusha
out
or
jns
in
sahf
testl
mull
lcall
mov
dec
orb
push
sub
add
xchg
int
mov
pop
je
cmpb
popl
sahf
test
pop
iret
cmp
xchg
adc
out
lret
and
test
out
cmp
lods
jns
inc
fcomps
mov
sarl
dec
popf
mov
dec
and
stc
jle
mov
push
aam
cs
loopne
leave
lea
imul
ret
leave
pop
pop
insb
scas
rcrl
aam
add
add
xor
aaa
mov
inc
int3
pop
or
push
clc
add
pushf
xchg
das
rolb
lret
rclb
and
les
mov
xchg
faddl
dec
test
hlt
test
adcl
push
mov
scas
xchg
dec
and
scas
jp
scas
mov
imul
push
subl
mov
mov
cmp
fnsave
and
dec
popf
pop
das
pop
mov
mov
mov
mov
and
je
xor
int
add
lret
push
stos
cwtl
stos
nop
mov
out
popa
pop
dec
test
outsb
sub
cmp
sub
loope
movsl
aad
test
mov
lea
cmovg
pop
test
hlt
sti
cmc
outsb
or
push
lret
mov
xor
jp
mov
clc
subl
aam
mov
mov
mov
mov
cli
and
mov
popa
cs
lea
or
inc
js
adc
or
mov
xchg
adc
shll
gs
mov
jmp
fidivs
mov
pusha
daa
add
push
sub
mov
xchg
es
jle
into
adc
daa
cmpsb
icebp
xchg
je
xlat
inc
mov
ret
dec
xchg
xchg
stos
sub
sbb
ljmp
orb
mov
push
sub
cmc
ret
scas
cmpsb
push
or
dec
sar
sub
insl
jb
sub
mov
test
cmp
sbb
pop
stc
cmpsb
xor
test
xchg
pop
mov
dec
inc
add
and
sub
jns
jmp
in
ljmp
lahf
mov
push
and
mov
jb
dec
shrd
popl
mov
daa
loop
mov
and
mov
push
and
scas
cmp
fucom
inc
jne
inc
xchg
cwtl
mov
dec
mov
push
movsl
dec
mov
testl
rorb
inc
lods
jns
test
pop
sbb
sahf
mov
cli
loop
jno
xchg
jmp
je
pushf
jne
xor
mov
mov
adc
mul
sbb
xchg
dec
dec
cmp
pop
popa
add
into
ss
in
lahf
sub
add
subl
lea
sbb
mov
mov
jge
pop
lock
cmp
arpl
les
cmp
push
stc
sarb
int3
mov
movsb
or
pop
push
xchg
mov
les
outsl
mov
mov
into
xchg
push
mov
insl
and
jge
push
ret
icebp
xchg
sahf
sahf
fnstenv
arpl
xchg
out
popf
sub
scas
jmp
call
mov
and
sub
mov
sbbb
mov
loopne
push
xor
pop
fisubrs
inc
mov
lods
aam
lods
xchg
cmpxchg
push
sti
mov
lahf
mov
enter
movsb
daa
leave
pop
shll
and
loope
jmp
lds
fsubrl
ja
test
sub
push
dec
mov
loopne
mov
shrb
sbb
push
popf
inc
fsubr
mov
andb
cmc
lds
fisubs
xchg
pop
mov
addr16
pop
adc
jmp
mov
and
aaa
test
jb
pushf
aam
fwait
inc
mov
dec
clc
lcall
mov
cmp
lods
adc
movsb
pop
xor
push
mov
jmp
mov
mulb
and
lret
mov
pop
mov
lret
jl
mov
xorb
inc
std
adc
adc
arpl
pusha
loop
pop
fstpt
notl
jae
imul
mov
iret
pop
adc
into
xchg
or
or
push
xor
cmp
mov
scas
lock
cmp
pop
push
cmp
cmp
mov
dec
xchg
xor
or
inc
mov
testl
insl
stos
xchg
xchg
stos
lock
das
add
cmpsl
jmp
xor
test
sets
notl
inc
mov
xor
cmp
dec
adc
ljmp
adc
pop
cmp
push
mov
stc
mov
fucomi
xchg
incb
out
jae
movsb
andb
cwtl
stc
in
stc
js
push
je
mov
movsl
lock
sub
mov
pop
out
test
inc
and
add
xchg
add
mov
mov
inc
xchg
test
test
push
cmp
addr16
adc
xor
icebp
shlb
push
lcall
and
xor
ljmp
mov
sub
pop
mov
pop
mov
subb
cs
scas
push
dec
or
jmp
dec
psrad
ja
adc
daa
and
xchg
mov
pmuludq
adc
cld
repnz
hlt
mov
adc
dec
cmc
lock
jg
dec
rorb
add
xchg
test
in
cmpsl
loope
pop
jl
xor
and
adc
cltd
in
cmpsl
in
dec
push
dec
pop
xor
cmpsl
cmpsl
cwtl
imull
aas
inc
test
cld
push
xchg
dec
sbb
lcall
rorb
cmp
pushf
adc
mov
into
dec
fwait
mov
addr16
rorb
daa
inc
mov
or
jge
es
pushf
mov
shlb
iret
pop
lock
stc
jle
pop
leave
inc
loope
enter
jmp
mov
mov
arpl
add
adc
mov
jbe
in
scas
pop
mov
mov
pop
faddl
and
test
nop
mov
pop
int
pop
popf
push
sbb
sbb
arpl
insl
cwtl
push
arpl
xor
dec
lock
inc
sbb
sti
pop
push
jle
mov
addr16
jne
movsb
and
scas
mov
sarl
in
ss
arpl
xchg
cmp
inc
repz
stc
mov
arpl
mov
inc
mov
mov
sub
sbb
or
dec
adc
bound
jg
lds
sbb
fwait
xchg
cmc
mov
jg
clc
pop
xlat
ja
out
pop
mov
orb
les
mov
jl
mov
mov
imul
add
loop
mov
sub
sub
in
mov
out
fs
mov
inc
fiadds
shrl
data16
pop
lcall
cmc
movsb
jg
dec
adc
inc
and
add
lods
into
int
das
sbb
pop
nop
cmp
adc
xchg
jecxz
push
into
mov
mov
xor
aas
inc
lret
sbb
out
lea
pop
xchg
mov
jno
popa
adc
int3
das
adcb
fsubr
leave
adc
and
mov
mov
clc
pop
inc
aam
aaa
jno
xchg
aas
sbb
mov
and
cmp
fmuls
push
cmp
lret
mulb
mov
fadd
push
mov
stc
enter
jecxz
jbe
cltd
rep
cmp
pushf
lea
dec
imul
pop
adcl
sbb
call
push
stos
fsubl
inc
aaa
inc
adc
notb
cmp
movsb
test
pop
pop
adc
pop
jg
repz
and
add
push
test
mov
cmpsl
sub
sbb
dec
call
dec
inc
lock
nop
lahf
sub
inc
dec
mov
jns
call
andl
cld
xchg
jo
mov
int3
mov
ja
sub
mov
pop
lods
inc
pop
pop
cmpsl
fisubrs
int3
add
fwait
pop
fists
lods
adc
push
arpl
incl
pop
fists
xchg
cmp
gs
enter
push
push
sub
nop
lahf
dec
lods
rclb
fstps
mov
cmpsb
pop
cld
idivl
cs
dec
mull
or
inc
in
mov
push
xchg
pop
icebp
in
or
mov
dec
lds
jge
stos
mov
ds
sbb
rcrl
in
movsl
in
jns
jmp
cmpsl
sahf
mov
push
popa
out
dec
and
mov
mov
loope
outsb
push
dec
ljmp
fstl
rol
ds
data16
sub
push
push
push
sub
lods
push
sar
cwtl
testl
nop
mov
cwtl
mov
mov
pop
inc
or
mov
jmp
fdivrl
aam
out
into
add
inc
inc
mov
mov
ret
pop
and
nop
test
test
icebp
lea
xchg
or
mov
out
out
and
addr16
leave
pop
cmp
test
shrl
js
mov
lods
mov
add
cmp
fildll
mov
push
fcmovnb
test
ja
stos
dec
loope
cmpsl
aaa
sub
jbe
xor
xlat
rol
sbb
leave
inc
cmpsb
jne
fwait
dec
and
aas
xor
sbb
inc
test
mov
push
shrl
mov
mov
icebp
jae
lds
inc
ret
sub
cmp
inc
nop
sbb
ja
xchg
shlb
pusha
std
adc
test
cmp
mov
cmp
iret
outsl
mov
mov
inc
cs
add
cmp
mov
dec
movsl
jmp
pop
xchg
in
jbe
test
nop
adc
adc
test
outsl
cmp
mov
js
call
imul
aam
dec
in
jae
into
dec
cli
ljmp
insl
testl
mov
mov
cmp
dec
and
jae
pop
xchg
and
xor
aaa
jnp
fimull
imul
insl
xchg
jns
es
addb
imull
pop
inc
fdiv
imul
inc
jns
leave
jns
neg
xor
test
cmp
pop
jnp
into
repnz
cli
xchg
test
xor
test
and
loope
xor
jne
add
jg
cmp
sub
cmp
dec
shrb
pop
cmp
jns
cmpsl
or
call
divb
inc
jmp
cmp
mov
int
dec
cld
mov
into
shrb
ja
sar
jg
out
lahf
mov
mov
mov
loop
adc
mov
add
adc
mov
icebp
mov
dec
lock
mov
cmp
loopne
inc
push
ds
cmp
lock
idivl
pop
mov
jno
js
rcll
mov
mov
cmpsl
jno
adc
orb
rorl
test
cld
inc
rolb
lret
imul
cmp
inc
repnz
test
shr
cmp
lods
and
fnstenv
mov
popa
int3
xor
jmp
cmp
cwtl
jbe
pop
or
inc
push
jl
lock
stos
ret
nop
and
or
pushf
sbb
popf
mov
js
mov
pop
jg
mov
jp
mov
mov
test
in
lods
mov
and
out
mov
xchg
and
mov
movsb
cmp
das
pusha
or
jmp
dec
lock
out
mov
sub
enter
jbe
mov
jl
mov
lret
out
std
jp
mov
pop
mov
adc
adc
lods
mov
movsb
mov
mov
add
scas
add
stos
ljmp
pop
shrb
cli
xchg
sub
and
flds
pop
sub
subb
and
add
daa
mov
andl
mov
call
call
xor
shrb
push
mov
jmp
ja
mov
mov
ret
and
sahf
test
dec
ja
jne
inc
add
mov
gs
mov
fwait
xor
fcoml
sub
and
lea
xchg
stc
sub
idivb
int
cmp
mov
aam
jnp
inc
mov
push
xchg
imul
xchg
xor
sub
rcrl
sbb
pop
mov
adc
mov
push
pop
pop
mov
shrb
mov
stc
test
mov
xchg
mov
mov
gs
add
dec
dec
leave
sbb
jne
insl
popa
ds
ficoms
mov
in
or
sub
adc
jne
sbb
and
stc
insl
jg
idivb
sub
sub
mov
addr16
test
cmp
mov
inc
gs
dec
push
test
lock
adc
mov
lds
test
jnp
test
dec
xchg
pop
adc
insl
mov
in
jnp
stos
ljmp
inc
std
stos
dec
mov
lahf
loop
inc
sbbl
in
out
adc
stc
fdivs
adc
mov
mov
pusha
fstpt
pop
aam
fwait
pop
mov
and
iret
popa
test
sub
arpl
or
pop
test
jb
lret
and
sub
add
xor
push
push
sbb
mov
cmpl
pop
aaa
mov
andb
out
or
cmc
push
or
icebp
cmc
lock
lret
loopne
lret
xchg
mov
or
sub
xchg
mov
xchg
stc
jmp
fcoml
mov
fmul
test
inc
stos
insb
mov
cmp
negl
mov
shr
or
mov
jp
cwtl
or
sbb
sub
cmpsb
dec
stos
mov
ljmp
jns
inc
out
pop
mov
inc
out
mov
push
mov
inc
mov
insb
pop
mov
mov
push
adc
mov
sub
imul
push
icebp
inc
lods
xchg
cmp
pop
mov
add
lods
stc
insl
enter
sub
inc
cmp
nop
scas
pushf
push
leave
aam
xchg
dec
and
jmp
sarb
movsb
aam
and
arpl
loope
sbb
movb
or
or
aam
sub
pop
cmp
mov
dec
pop
mov
pop
push
sbb
subb
mov
cmp
jbe
jl
les
push
daa
push
fisubrs
cld
push
push
lea
inc
scas
sub
in
push
inc
dec
inc
jmp
sub
xchg
vpmullw
imull
jne
jecxz
add
mov
movsl
leave
imul
pop
ja
je
leave
add
xor
mov
rclb
adc
insl
jbe
scas
dec
rorl
daa
das
in
mov
sbbl
push
jne
mov
shrd
add
sub
enter
jne
mov
cmpsb
sbb
xchg
mov
push
pop
in
aas
mov
xchg
mov
mov
pop
movsb
mov
mov
mov
popf
test
or
pop
orb
sarb
pop
jns
mov
jmp
pop
mul
lret
ret
cs
sbb
pop
aas
daa
push
inc
add
test
mov
mov
test
dec
ds
popa
xchg
or
pop
sbb
push
sti
jne
add
std
add
push
cmp
popf
xorb
mov
popa
mov
imul
nop
adc
das
mov
xchg
push
arpl
int3
movsl
lret
pushf
stos
and
mov
pop
mov
sub
mov
lock
ss
add
sbb
ljmp
adc
mov
mov
xlat
aam
addb
mov
mov
and
mov
or
mov
sub
ljmp
lock
jo
inc
pop
lds
adc
mov
popf
push
xchg
pop
sub
cs
popf
enter
mov
in
xchg
jg
mull
mov
mov
fcomip
or
jae
sbb
xorb
fdivp
into
jns
push
std
lock
ljmp
lds
testl
lret
inc
icebp
mov
lcall
sbb
sub
stos
cltd
jmp
sub
daa
test
fcmovb
pop
cmpsb
jno
pushf
faddl
and
mov
add
mov
inc
dec
mov
idiv
jbe
cli
outsb
xchg
mov
push
sub
cmc
pop
shll
jmp
pop
xor
sarl
push
mov
lods
jge
sarl
into
aam
cld
movsl
xor
sti
mov
das
inc
nop
mov
and
pop
fucomi
adc
dec
jnp
pushf
xor
pop
iret
xchg
call
test
fidivrl
inc
adc
das
jmp
or
ja
cmp
pop
loope
fsts
push
cwtl
dec
sarb
sbb
mov
test
xchg
push
movsl
pop
negl
inc
mov
cmc
add
lcall
addl
add
mov
ror
jl
push
xchg
adc
jmp
inc
loopne
sub
cmp
test
fimull
xorb
addr16
xchg
aaa
sbb
pop
in
mov
dec
jge
push
rolb
stos
add
ja
sub
pop
xor
inc
in
rclb
jnp
insl
dec
cmp
cmp
ret
mov
imul
and
sub
sahf
pop
shl
cmp
push
pushl
mov
loopne
xor
push
and
jmp
push
adc
imul
xchg
pushf
shll
or
xchg
scas
xor
mov
sbb
adc
jbe
sbb
push
push
jb
push
add
mov
loope
loopne
jo
popf
cmp
jne
mov
pop
sbb
test
dec
or
and
mov
adc
je
fwait
inc
push
mov
mov
mov
clc
sti
ret
jg
les
test
mov
inc
pop
and
sarb
pop
sbb
cmc
movsb
jbe
gs
movl
cmpb
add
cmpb
es
icebp
jmp
sarl
sub
jbe
sbb
xor
sbb
sub
xchg
and
sub
aam
stc
imul
push
test
imul
mov
jns
out
xchg
popa
or
jns
or
addr16
mov
mov
mov
pop
xor
lods
sbb
test
inc
mov
pop
mov
fwait
neg
scas
pop
lea
jbe
mov
test
mov
adc
mov
jns
sub
out
loope
xor
sbb
cmpsl
jp
cmpsl
mov
jp
push
mov
xchg
jae
push
and
adc
sub
push
insl
sbb
outsl
mov
test
or
mov
dec
adc
or
mov
cs
adc
and
jle
imull
movzwl
mov
sti
dec
loope
dec
add
push
arpl
pop
stos
jns
icebp
jne
xchg
stos
mov
mov
sti
cmpsb
lahf
fwait
xchg
test
mov
sub
pop
lods
sbb
dec
mov
inc
fs
scas
insl
xchg
mov
fmulp
sbb
and
or
enter
lret
out
mov
test
push
dec
pusha
rorl
inc
mov
movsl
xchg
je
jmp
mov
test
sbbb
add
aas
imul
mov
jp
movsl
hlt
ss
test
test
sahf
addr16
sub
sub
adc
insb
cmp
adc
rcll
ds
fildl
adc
iret
mov
inc
mov
insl
ds
jmp
stos
test
mov
movsl
mov
loopne
mov
in
cmp
sbb
sbb
or
fbld
bound
aaa
inc
pop
lea
ret
out
add
sbb
xchg
add
jnp
aam
pop
dec
jo
jl
arpl
stos
je
pop
cld
mov
fbld
fcoml
or
stos
mov
jle
xchg
fbld
stc
stc
mov
mov
into
sarb
pop
jb,pt
lds
sbb
mov
lods
xchg
dec
loope
cmp
pop
push
add
add
stc
mov
in
jmp
xchg
fsubs
mov
insl
sar
sbb
jns
cmp
push
add
imul
mov
das
cmc
jmp
jae
lret
out
xchg
sub
sub
push
stos
xchg
mov
pop
rcrb
xchg
inc
loop
inc
ss
cmp
dec
dec
xor
cs
add
jg
ss
push
rolb
mov
scas
shll
gs
dec
mov
xchg
add
subl
or
ljmp
xchg
mov
and
mov
or
pusha
xchg
mov
ret
xchg
mov
in
add
cld
lods
mov
lret
mov
adc
mov
mov
lods
pop
pop
cwtl
xor
lcall
lods
sub
pop
jmp
pusha
aaa
rcll
mov
mov
and
int
inc
lods
and
inc
mov
addr16
mov
xchg
mov
jmp
pop
xchg
xor
xorb
jnp
decb
je
xor
movsb
clc
xchg
inc
inc
pop
sub
aad
sbb
movsb
aas
cmp
cmp
jae
adc
dec
pop
mov
sarb
mov
mov
movsb
and
jmp
aas
imul
sub
cmpsl
jl
filds
push
inc
mov
pop
js
pop
xlat
cmpsl
faddl
outsb
shrb
mov
nop
int3
adc
and
push
mov
mov
inc
mov
popa
lods
jae
pop
test
les
adc
movsb
cmp
scas
ret
hlt
gs
or
jmp
insl
jae
scas
pop
cs
jmp
mov
pop
jnp
inc
jecxz
into
sbb
mov
cmp
xchg
fistpl
pushf
stos
sub
arpl
jnp
lret
lcall
cmp
jbe
bswap
push
popa
mov
jae
cli
push
shrl
pop
outsl
inc
mov
dec
and
insb
iret
shr
test
hlt
les
andb
jbe
jnp
jle
or
sbb
inc
fwait
outsl
loop
repz
pop
cmpsl
push
add
inc
pop
arpl
or
call
cmpsb
mov
push
cmp
xor
test
xor
inc
insb
sub
cmp
or
inc
out
into
sti
test
xchg
xchg
imul
cwtl
inc
inc
adc
lret
setne
call
mov
mov
aam
xor
cwtl
cwtl
jp
outsb
mov
notl
sbb
dec
inc
and
inc
xorb
out
jae
lock
jmp
lret
inc
sti
sub
mov
stos
rolb
imull
bound
stos
mov
and
xor
fisubrs
xor
or
mov
lahf
outsl
jns
stc
fisubrs
popf
xlat
mov
dec
pop
xchg
mov
sub
sbb
js
mov
push
dec
out
imul
xor
inc
and
mov
leave
mov
and
ret
loope
or
ret
cmp
mov
mov
adc
inc
add
sbb
mov
sbb
cmp
aas
mov
mov
imul
cli
test
pop
jle
inc
jno
sub
sbb
movsb
mov
jns
leave
adc
ds
push
subb
inc
dec
or
push
pop
mov
out
and
rcrl
test
push
iret
xchg
push
sub
hlt
mov
movsb
adc
pop
enter
mov
cmc
cmp
into
mov
sub
loope
mov
les
add
pop
stos
mov
sbb
shll
and
dec
pop
sbb
fisubrl
ret
push
jne
push
pop
stos
mov
cmp
jmp
test
mov
cmp
xchg
sbb
xchg
insb
sub
pop
cmp
jle
gs
rorb
xor
jmp
testb
popa
dec
lahf
mov
loop
lret
jae
iret
lock
push
fs
pusha
push
push
pop
aam
and
ficoml
mov
mov
push
lret
and
lds
pop
cmp
movsb
cli
je
cltd
push
mov
pop
call
jmp
add
cmp
enter
add
mov
or
add
push
arpl
cmpsb
lds
mov
and
aas
pop
bound
dec
in
cmpsl
fidivrs
inc
arpl
inc
repz
xchg
xor
or
jecxz
jp
mov
ja
fwait
cmpsl
inc
rol
imul
decl
pushf
cmc
daa
test
push
or
shll
addb
mov
data16
call
jnp
push
in
fidivs
add
mov
mov
ds
mov
xor
pop
pop
lret
and
cli
push
mov
fwait
xor
mov
sbb
in
movsb
js
in
cld
cmp
cs
mov
mov
xor
mov
outsl
inc
xchg
gs
mov
push
inc
lcall
shrb
mov
pusha
push
xchg
loope
in
push
stos
les
pushf
cmp
rol
or
pop
and
push
and
flds
mov
lahf
sahf
pop
mov
inc
sbb
popf
ret
das
push
mov
mov
pop
and
dec
fdiv
jmp
cmpsl
push
xor
mov
push
mov
aas
addb
pop
fldcw
popa
mov
and
and
enter
mov
jno
jbe
jnp
ss
mov
jmp
mov
push
fldenv
and
xor
xchg
inc
xor
add
jmp
sahf
test
jmp
imul
push
xchg
dec
xor
mov
xchg
inc
inc
cmpsb
fsubs
or
jbe
mov
cmp
pop
imul
add
push
push
add
mov
xchg
dec
mov
bound
push
imul
test
test
iret
push
mov
cmp
inc
lods
dec
in
jno
mov
pusha
inc
dec
inc
test
xchg
inc
xor
int3
or
hlt
notl
jmp
cmp
cmp
push
fbstp
xchg
shlb
push
add
inc
cmp
lahf
push
das
repnz
loop
mov
add
loopne
push
sub
stos
dec
test
xlat
xor
mov
insl
jmp
jnp
mov
dec
sub
into
and
lods
divl
rorl
and
jmp
fdivrs
mov
mov
xchg
arpl
cmp
jmp
stos
push
in
pop
insl
in
mov
and
sub
and
ret
mov
lods
mov
mov
popa
fdivp
pop
addr16
pop
sub
rolb
mov
dec
fwait
dec
mov
aas
add
ds
xor
aam
mov
push
arpl
stos
xorb
sub
sub
aad
insl
mov
pop
xchg
xor
xchg
mov
jno
ret
repz
or
ret
decb
sahf
jmp
cmp
sub
in
inc
adc
cmp
cmp
mov
mov
mov
push
xchg
stos
mov
subb
outsl
test
mov
mov
into
mov
push
mov
js
into
pop
jb
jmp
pop
jb
dec
test
sbb
test
enter
shl
dec
xchg
mov
dec
dec
sub
inc
test
inc
ja
xchg
xor
dec
push
lcall
lods
ss
rcl
repz
inc
aam
jle
push
andb
aas
push
xor
movsb
sbb
ja
cmp
mov
mov
and
cmp
cmp
cmp
jbe
jmp
movsb
jns
daa
add
add
fnsave
fsubrl
jl
repnz
loop
dec
add
sub
faddp
push
or
jmp
mov
fsubp
add
mov
sub
inc
cmp
mov
fcmovnbe
into
xchg
imulb
pop
pop
jnp
scas
mov
jp
rolb
scas
sbb
int3
mov
or
sub
into
addr16
pop
imul
push
mov
sub
enter
jge
stos
jl
pusha
sub
mov
fistpll
jmp
decl
mov
mov
mov
sti
xchg
aas
mov
mov
js
and
inc
imul
xor
cmp
in
ret
sarb
adc
lods
push
jns
xor
rcrb
cmc
hlt
mov
cwtl
stos
pushf
jns
int
add
xor
gs
and
adc
mov
cmp
mov
stos
xchg
add
mov
in
mov
lods
push
dec
jge
jnp
icebp
call
lcall
cs
add
xor
lods
adc
adc
in
add
call
or
cmp
loop
mov
outsl
dec
dec
sbb
or
dec
jecxz
push
negl
mov
mov
mov
sbb
fadds
push
and
sub
addr16
aas
push
test
loope
mov
jle
mov
cmp
mov
das
shll
mov
jmp
lods
and
mov
jne
leave
addr16
incb
ret
jg
push
adc
nop
add
xlat
fld
imul
jge
stos
sbb
pop
pop
add
test
xor
mov
enter
lds
into
mov
sub
or
adc
cmp
push
lahf
cmp
mov
cltd
arpl
popa
cmp
mov
mov
mov
cmp
sub
insl
sbb
sbb
jmp
out
xor
test
xor
addr16
cmpsb
dec
mov
ret
mov
fcmove
mov
insb
push
mov
inc
cmp
jmp
inc
leave
mov
adc
dec
iret
test
test
inc
jg
sarl
sub
test
sbb
sahf
xor
ret
mov
pop
daa
int3
push
outsl
shll
xor
subb
cs
add
cmpsl
outsl
popa
ret
xchg
xchg
mov
mov
dec
mov
lcall
aaa
fldcw
sti
pop
mov
push
cmp
bound
add
sub
fidivrs
mov
adc
push
movb
out
test
xorl
xor
lods
test
sbbb
mov
inc
xor
insl
jmp
xor
into
das
mov
inc
jb
jns
leave
jmp
sub
out
nop
dec
dec
inc
xchg
mov
xchg
fldenv
leave
mov
xor
shr
aad
xchg
leave
loope
popa
dec
sbbl
call
or
mov
dec
inc
pusha
adc
sbb
clc
je
mov
clc
inc
dec
jmp
mov
and
rcl
cmpsb
sbbl
mov
mov
cmpsb
enter
cmpsl
sub
push
jmp
lods
pop
shlb
pop
pop
jmp
inc
rol
dec
outsl
or
cmpsb
cmpsl
sbb
or
lahf
jnp
sar
in
test
popa
div
stos
ljmp
test
xorl
add
popa
mov
aaa
ss
mov
ret
add
insl
xchg
fsubrl
xchg
adc
addr16
xchg
sbb
adc
lret
cmp
icebp
shrb
test
insl
or
enter
add
in
xor
cmp
adc
cli
test
mov
icebp
les
movsb
test
jns
in
xorl
jg
arpl
xchg
cli
sub
jl
enter
pop
dec
stos
in
inc
push
mov
mov
enter
xor
dec
mov
adc
gs
sbb
jmp
addr16
pop
and
push
out
pusha
pop
jae
movsb
test
pop
jo
xor
pop
jp
gs
pop
loop
add
and
xchg
scas
scas
sahf
inc
sbb
or
inc
test
mov
shll
xor
cmp
pop
bound
rclb
or
cmc
aaa
repz
mov
mov
jnp
sub
mov
imul
pop
and
lea
loop
test
inc
mov
pop
in
sahf
cmpsl
xchg
push
lea
test
stos
push
addr16
push
cmp
sbb
mov
adc
mov
add
jp
push
ljmp
lret
rorb
pusha
push
negl
pop
aam
das
push
xchg
jnp
daa
test
xchg
dec
movsl
popa
xchg
lods
loope
xchg
rcrl
xchg
sub
cmpl
es
imul
mov
outsb
lea
xchg
mov
fmull
jmp
cmp
xchg
outsl
in
bound
lods
ss
aam
fidivrl
cmp
sbb
add
dec
sbb
jb
dec
sbb
and
sar
fwait
and
sub
adc
bound
mov
dec
add
and
ss
cmp
lahf
pop
hlt
lds
push
mov
jg
mov
sbb
push
xchg
int
sub
les
fucompp
mov
out
shl
lret
xor
icebp
lock
mov
mov
js
test
mov
inc
ds
or
dec
stc
gs
test
outsl
mov
push
adc
andb
test
push
lret
out
inc
or
fldt
mov
jnp
mov
ret
cmp
loope
sbb
adc
outsb
cmp
push
jle
or
lahf
daa
xchg
xchg
inc
mov
imulb
aas
sbb
sbb
lds
call
or
xchg
fidivl
or
cmpsl
rcrl
mov
pop
inc
arpl
sbb
leave
sahf
cwtl
inc
bound
inc
sbb
outsb
or
add
pop
mov
and
mov
push
subl
mov
ret
insl
in
cmpsl
addr16
mov
push
pop
sbb
xor
pop
push
daa
push
into
xchg
adc
fmuls
iret
mov
mov
outsl
shl
es
pop
rclb
xchg
mov
push
js
or
mov
arpl
test
jle
dec
adcb
in
fmulp
call
add
and
cmpsb
xchg
mov
xchg
scas
aaa
add
flds
movsb
fwait
or
jg
cmp
imul
aam
inc
lcall
jno
imul
lods
fdiv
insb
sub
xchg
popa
out
lods
inc
inc
addl
jae
sbb
scas
xchg
dec
ret
push
pop
adc
sbb
loop
mov
mov
dec
ficoms
lahf
outsb
push
jb
xchg
xchg
pop
data16
ret
mov
add
mov
jg
idivb
jle
sub
xchg
sbb
rol
jno
call
lcall
jmp
loop
lea
or
dec
mov
push
pop
daa
inc
sub
and
loope
cmp
insl
xor
movsb
cmp
clc
sahf
sub
lock
mov
inc
sub
lods
pop
cmpsl
aad
mov
mov
jb
shrl
out
and
pop
push
pop
call
cmpsb
icebp
ss
xchg
loop
cmp
imul
push
gs
stos
adc
jnp
ljmp
xchg
das
leave
jno
in
cmpsl
test
cmp
mov
test
or
adc
push
mov
mov
push
fimull
pop
shl
adc
dec
xor
popf
testl
ret
cli
fwait
inc
into
shl
int
inc
mull
lcall
in
lods
rolb
push
mov
pop
dec
sub
repz
dec
cmp
sub
dec
loope
jo
testb
pushf
ret
adc
movsb
popa
jbe
ja
rorl
push
xchg
jno
inc
add
add
jge
shll
sub
xor
adc
xor
sub
enter
lods
sahf
push
or
repz
push
imul
ja
and
std
xor
push
inc
ja
es
sbb
sarb
cmpsl
sbb
aaa
jb
mov
in
fsts
enter
xchg
bound
lea
mov
dec
sbb
fmull
les
icebp
mov
sub
outsl
loop
arpl
imul
cmp
fdivl
xchg
lods
inc
jb
cli
les
sub
mov
adc
mov
xor
and
mov
sbb
cli
lea
in
iret
add
push
mov
into
imul
lock
cmp
jae
inc
je
mov
adc
xor
movsl
xlat
and
inc
mov
xchg
mov
lock
xchg
jo
dec
and
mov
push
mov
out
mov
adc
sub
addr16
sub
and
and
mov
aaa
cs
int3
xchg
xchg
mov
in
popf
inc
jns
test
mov
test
add
inc
in
movsl
gs
shll
sub
mov
ljmp
repnz
push
xchg
inc
or
pop
xchg
or
stc
insl
jmp
stos
mov
sti
decb
adc
pop
or
sahf
or
cmc
mov
mov
and
mov
inc
jmp
cmp
xor
pop
sub
cmp
es
rcrb
xor
movb
pop
mov
stos
xchg
fcoms
mov
outsb
cmc
pop
movsb
addr16
inc
mov
pop
mov
mov
daa
jp
xor
sbb
add
movsl
dec
mov
int3
add
and
sbb
test
outsl
jp
int
inc
addr16
shrb
mov
out
mov
mov
sbb
xchg
jle
mov
xchg
mov
testb
rol
push
xchg
dec
add
sbb
div
lret
cwtl
jno
fdivrs
imul
jmp
or
loope
cs
add
dec
test
push
inc
mov
sub
xchg
sbb
xchg
std
movsb
sub
aas
dec
and
mov
negl
mov
mov
les
xchg
mov
cltd
test
sub
push
shrl
and
jo
testl
or
popf
mov
shlb
arpl
mov
and
imul
xchg
enter
pushf
adc
mov
mov
or
mov
hlt
mov
pop
mov
and
and
or
nop
jno
sub
imul
mov
add
cmpsb
fs
dec
jmp
dec
aam
out
into
sbb
inc
fs
jne
inc
push
jne
sub
adc
into
dec
mov
or
mulb
lahf
mov
inc
mov
subl
pop
and
mov
or
pop
addr16
pop
xor
push
inc
sbb
sahf
sub
out
mov
cmpsb
mov
addb
ret
mov
out
mov
lret
xchg
lcall
mov
or
xor
mov
jb
mov
loope
and
dec
addb
loope
push
in
xchg
xchg
dec
rorl
pusha
test
ljmp
sub
and
clc
filds
and
inc
aad
and
mov
cmpsl
sub
adc
lcall
rcrb
push
mov
pop
cmc
mov
ja
call
jb
push
test
shr
pop
inc
push
lea
cmp
xchg
in
das
mov
testl
nop
mov
popf
imul
sub
jg
into
icebp
aas
rol
push
mov
dec
popf
sbb
or
out
cmp
imul
jne
and
jmp
aas
das
in
xchg
stos
jns
bound
dec
mov
and
std
dec
mov
ficoml
add
ja
xor
mov
mov
lea
xor
cmpsl
mov
stc
jb
fstpt
jne
push
xchg
out
add
mulb
jmp
xchg
xchg
cltd
mov
xchg
xchg
out
ja
mov
inc
dec
insb
loop
popf
pop
data16
pop
mov
divl
jb
test
and
aam
sbb
lcall
xor
mov
inc
sbb
iret
repnz
ret
push
les
popa
ffreep
test
cmc
xor
mov
pop
pop
lea
lods
cmp
mov
or
in
cld
scas
loope
shrl
out
scas
in
add
stc
xchg
ret
popf
mov
jno
xchg
mov
test
xchg
push
inc
test
lds
dec
xorl
pop
sti
popf
dec
imul
sbb
push
add
pop
sti
aaa
add
mov
loope
pop
cs
movsl
in
inc
inc
pop
fs
pop
mov
daa
or
dec
xchg
lods
subb
mov
mov
in
sbb
leave
adc
out
aas
push
pop
lret
jb
notl
cli
cmpsl
mov
fbstp
jnp
and
sub
movsb
scas
mov
and
mov
sti
test
daa
sbb
aad
sub
cmp
daa
pop
push
das
stos
lcall
mov
sub
cmp
mov
mov
xor
cs
pop
lock
das
nop
mov
scas
cmp
test
nop
mov
and
xchg
gs
cmp
jp
cmp
out
dec
jp
mov
mov
pop
inc
mov
wrmsr
loope
cmp
das
xlat
cmp
and
das
add
mov
mov
mov
cmp
lock
push
das
sbb
into
sti
imul
in
xchg
cmpsb
pop
mov
xchg
lods
sbb
aaa
adc
mov
jmp
mov
mov
mov
mov
mov
test
rclb
and
addr16
add
ja
mov
shlb
pop
xor
and
adc
inc
bound
mov
push
pop
sub
mov
mov
push
pop
inc
pop
sub
cmp
and
das
sbb
mov
xchg
mov
pop
mov
sbb
mov
mov
xor
pop
push
and
in
stos
pop
test
lods
mov
inc
inc
out
in
inc
das
insb
mov
and
aaa
mov
imul
cs
adcl
in
mov
mov
cmp
mov
sarb
mov
xor
fistps
inc
push
test
cmp
xor
xor
js
sub
fisubs
adc
and
add
or
pop
popa
ja
inc
or
push
popf
sti
and
add
ja
std
rorl
xor
sub
inc
aaa
sahf
push
daa
fs
cmp
test
sbb
xor
aaa
xchg
add
pop
cmp
mov
std
fdivl
pusha
dec
lea
inc
inc
data16
push
enter
mov
xor
sub
and
pop
xchg
pop
loopne
add
shrb
stos
mov
insl
pop
push
pop
into
dec
andb
std
cmp
lods
ftst
mov
mov
pop
imul
pop
sahf
pop
das
and
sbb
lea
inc
sub
adc
test
cs
mov
jge
and
popa
orl
mov
and
lock
test
insl
lretw
adc
test
mov
outsl
jmp
pop
fsubrs
xchg
xchg
popf
or
cld
mov
imul
cmp
inc
cmp
fdivl
sbb
mov
jne
dec
je
and
decl
test
inc
in
pop
inc
and
push
mov
out
jbe
jae
cmp
mov
in
int
or
js
add
aad
dec
cmc
cmp
test
mov
je
jmp
mov
lods
clc
xor
mov
gs
add
xlat
in
mov
dec
add
je
cmpsl
mov
or
sbbb
and
pop
cmpsl
lret
fisubrl
mov
sub
loopne
mov
dec
lock
xchg
dec
pop
pop
fwait
andb
ret
sbb
insb
push
jp
mov
sbb
add
loopne
sub
xchg
xor
std
jmp
sub
ret
push
loope
jecxz
pop
std
aam
ss
xlat
pop
jno
test
jmp
addr16
bound
test
mov
and
jae
add
incl
pop
cmp
cmpsb
test
fldt
pushf
jle
aaa
arpl
xlat
xchg
hlt
fsub
lds
jge
xor
pushf
mov
add
lods
sub
shll
and
xor
cmp
adc
lds
cmp
dec
fstps
outsl
pop
inc
and
insl
aam
enter
icebp
xor
mov
mov
inc
into
sub
cli
out
cmpsl
outsl
leave
jns
shll
aam
push
sub
sbbl
outsl
mov
lds
nop
loope
sbb
idivl
jge
mov
lahf
cmp
notl
pop
das
jb
lods
aaa
test
out
xor
cmp
jno
pop
or
or
lods
cmpsl
loop
xchg
lahf
sbb
rcrb
pushf
popa
mov
dec
dec
jmp
push
test
gs
mov
popf
and
pop
pop
xchg
leave
xorb
jb
push
ficomps
stc
aam
inc
sub
or
stos
inc
daa
fisttps
cmp
jl
sbb
ja
dec
inc
movsb
scas
arpl
aas
push
rorb
and
std
pop
push
cmc
test
aaa
hlt
and
adc
mov
fnstsw
test
lods
stos
cmc
mov
mov
dec
mov
pop
cmpsb
shl
ljmp
mov
shll
dec
imul
sbb
jmp
and
ret
scas
inc
pop
or
gs
mov
rcrl
call
fsts
xchg
push
add
adc
jo
inc
sbb
es
pushf
and
mov
inc
mov
and
dec
xchg
mov
cmp
cli
add
insl
in
dec
pop
add
dec
aas
adc
dec
push
fucomp
add
dec
cmp
test
pop
pusha
sarb
in
idivb
inc
inc
jbe
push
arpl
push
xor
pop
xor
int
jno
sarl
xchg
sub
test
ds
or
jl
scas
sar
cmpsb
stos
ja,pt
out
dec
mov
push
jg
popf
call
arpl
and
xor
sub
cmpsl
jnp
cld
inc
test
mov
mov
xchg
adc
mov
inc
out
jp
xchg
inc
xchg
ret
mov
inc
inc
adc
fbstp
jp
popf
add
stc
adc
mov
roll
push
mov
test
pop
and
adc
sub
adc
adc
push
cld
imul
arpl
jnp
mov
mov
push
popa
mov
xor
push
sbb
ljmp
jno
inc
inc
rcr
mov
mov
pop
pushf
jmp
loopne
data16
lret
jge
mov
jno
aaa
mov
xchg
jge
xor
and
or
xchg
lret
test
jge
lods
adc
inc
add
cmp
jmp
mov
xchg
int3
leave
ret
stos
dec
fwait
rorl
and
popf
adc
icebp
int3
aas
mov
and
aad
inc
mov
out
sbb
bound
push
scas
and
cld
adc
imul
call
add
add
mov
cmc
cmp
in
inc
cmp
mov
shrl
fstl
cmpsb
jno
rep
ljmp
popf
or
pop
push
cmp
stc
jae
and
mov
scas
adc
add
jbe
and
arpl
in
stos
push
jne
and
out
stos
jecxz
popa
mov
pop
stos
pop
into
into
push
pop
cwtl
lods
scas
push
and
add
fmulp
adc
mov
and
pop
push
shlb
jmp
xor
dec
push
jmp
leave
inc
in
adc
dec
inc
inc
out
gs
add
inc
mov
push
enter
les
shlb
test
cmpsl
insb
xlat
cmc
gs
jb
xchg
dec
leave
sub
popf
jp
mov
shlb
xor
inc
mov
adc
pop
adc
mov
pop
cmpl
sbb
and
mov
adc
xchg
cmp
cmpsl
loop
xchg
cmp
or
jnp
pop
test
imul
xor
jae
sbb
sbb
arpl
mov
into
enter
or
hlt
dec
mov
pop
mov
cmp
dec
mov
dec
fcmovu
jne
mov
inc
lret
in
orl
negl
rcrb
pushf
test
popf
pop
das
and
pop
mov
test
sbb
pop
adc
cmp
call
pop
call
xor
ja
pop
mulb
inc
pop
jmp
and
pop
test
mov
push
cmp
pop
push
xchg
mov
punpckldq
cmp
pop
ret
jbe
adc
jle
stos
test
lret
shrb
pusha
pop
pop
sti
adc
pop
cmp
adc
in
mov
and
stos
pop
jecxz
outsb
shr
xchg
in
repnz
les
lds
inc
push
mov
insl
loopne
cmpsl
loope
xor
push
hlt
addr16
cmp
adc
mov
test
icebp
cmpb
mov
mov
fidivrs
mov
mov
or
stos
pop
sbb
xchg
dec
gs
pop
outsb
fisubs
dec
test
sbb
into
mov
insl
insl
arpl
movsb
mov
lret
sub
mov
loop
mov
adc
int
orb
mov
stc
les
mov
inc
outsb
aas
int3
push
cli
cmp
aad
pushf
in
stos
dec
lods
out
inc
push
arpl
and
movsb
jno
mov
lods
mull
mov
adc
cmpsb
jno
push
push
ffree
insl
dec
jne
xor
pop
iret
push
sub
cmp
mov
cmp
cmp
out
dec
inc
lods
and
sbbl
aam
mov
pop
lret
ja
cli
daa
repz
add
push
rorb
das
pop
imul
cmpxchg
push
push
xor
pop
ret
test
mov
mov
imul
mov
mov
test
test
fwait
hlt
sti
jg
dec
dec
in
addr16
dec
mov
dec
andl
xchg
pushf
ficompl
rcrl
dec
jmp
setle
test
outsl
dec
sahf
std
and
add
cmp
inc
jnp
stos
in
mov
test
pop
and
xchg
test
fxch
sti
arpl
pop
xor
outsl
jnp
pop
nop
pusha
dec
mov
inc
or
cmp
es
pushf
fisubs
sub
cmp
add
arpl
lock
push
sub
inc
dec
cmpsb
adc
rclb
jae
mov
es
cmp
inc
and
adc
test
push
test
push
fidivrs
mov
arpl
fistpl
mov
ror
lods
dec
mov
jno
mov
stc
jl
outsb
ret
fldl
dec
cwtl
push
sub
fcmovb
mov
and
out
fwait
xchg
sub
loop
xchg
pop
mov
push
sti
dec
cmpsl
xchg
fildl
shrb
scas
dec
fsts
mov
cld
icebp
sbb
popa
das
mov
test
mov
mov
lock
sub
and
call
cmp
pop
inc
add
and
lcall
xor
aam
rolb
pop
scas
shlb
test
or
push
lcall
jbe
push
cmp
sbb
ja
imul
cmp
sbb
sbb
aam
lret
call
pop
adc
sub
dec
in
add
jae
dec
sbb
inc
push
mov
inc
mov
cmp
leave
inc
jp
popf
sub
dec
mov
out
popa
xor
add
mov
pop
sub
adc
sbb
or
add
test
jo
adc
ljmp
loopne
lods
mov
or
xchg
or
xchg
lods
and
sbb
icebp
stc
test
popa
push
adc
jo
mov
loopne
cli
inc
inc
subl
adc
and
cmp
ret
xor
inc
je
out
in
stos
gs
inc
xchg
movsb
sbb
and
test
push
inc
mov
lods
pop
sub
mov
enter
adc
add
into
adc
outsl
xchg
aam
cmp
sub
pop
stos
das
inc
sbb
sub
adc
dec
enter
stos
ja
mov
fwait
jb
sub
lods
sbb
cmp
cmp
es
mov
dec
mov
sbb
shrl
mov
test
fsubp
sbb
fimuls
mul
test
pusha
xor
push
test
push
cmp
sbb
pop
mov
aad
aam
mov
add
ret
mov
sbb
stc
or
adc
bound
int
aas
mov
mov
dec
lahf
jp
in
loope
sbb
xchg
jae
push
ret
rorb
call
or
xchg
gs
aas
jns
imull
test
jno
pop
scas
rolb
dec
mov
rcrb
or
mov
mov
mov
into
test
cmpsl
fsubl
loope
push
and
push
pop
push
mov
scas
pop
push
addr16
clc
imul
dec
mov
nop
mov
xchg
and
or
add
push
nop
or
call
dec
js
daa
andb
dec
lahf
jmp
dec
xchg
gs
dec
or
jo
movsb
daa
clc
pop
loopne
pop
pop
nop
shlb
shrb
and
daa
jo
xchg
push
sbb
add
inc
jl
in
mov
call
mov
adc
adc
jge
cmpb
adc
xor
push
clc
xor
call
inc
sarb
xchg
in
sub
xchg
push
dec
inc
inc
pop
mov
dec
fdivs
pop
xchg
inc
inc
inc
and
cmp
mov
arpl
cmp
pop
rcrl
rcrl
dec
mov
addr16
je
ljmp
sbb
fldenv
loope
mov
dec
xchg
adc
test
mov
cmp
mov
sbb
mov
add
shl
movswl
shr
stos
scas
mov
out
inc
xor
repnz
pop
sub
into
xchg
lret
ja
imul
and
mov
adc
or
xor
xor
jmp
pop
cwtl
push
dec
pop
ljmp
and
push
jp
sahf
sbb
pop
adc
lds
cmp
xchg
xchg
adc
jnp
pop
xlat
pushf
pop
mov
or
dec
imull
lock
aaa
jmp
mov
cmpsb
mov
mov
test
pop
outsb
leave
loope
inc
xlat
mov
sub
mov
roll
adc
mov
and
test
mov
mov
pop
stc
jge
movsl
sub
mov
cmp
xor
cmpsl
mov
cmp
xchg
dec
movsl
pop
inc
cwtl
popa
daa
mov
push
shrb
sti
push
mov
nop
xor
dec
arpl
fcmovb
mov
lods
or
jne
aaa
sub
xchg
popf
mov
cmpsb
push
gs
xor
dec
add
mov
cmp
jnp
int
dec
insw
loop
sbb
stos
dec
sub
cmp
ss
mov
adc
and
cld
into
lea
xchg
test
jb
fdivr
pop
add
mov
push
xor
lods
shl
popa
fstl
mov
leave
dec
xchg
inc
adc
rcr
mov
xlat
inc
or
ss
xor
js
push
bnd
add
mov
gs
or
or
jmp
mov
xor
lock
ss
outsl
lret
std
cld
out
repz
pusha
inc
adc
jmp
dec
xchg
pop
lret
in
mov
out
push
mov
clc
insl
inc
int
mov
popf
lahf
leave
inc
jnp
shll
jno
fidivrs
cmp
pmulhw
stc
lret
inc
push
bound
xchg
mov
stos
pushf
je
dec
xchg
mov
mov
xchg
jecxz
or
mov
jo
mov
pop
sahf
xchg
lahf
sbb
xlat
stos
mov
jns
push
xchg
les
cmp
rolb
adc
mov
dec
pusha
adc
cmpsb
xor
dec
pop
iret
cwtl
test
pop
jp
mov
adc
dec
inc
pop
push
xchg
mov
imul
loop
push
sub
mov
mov
mov
ds
sbb
jecxz
push
hlt
int3
out
cli
mov
jmp
pop
lock
and
inc
lret
add
pushf
jmp
cmp
mov
add
leave
mov
pop
jbe
negb
mov
flds
jmp
idivl
pusha
add
icebp
dec
cs
imul
push
mov
out
mov
into
xchg
leave
shrl
hlt
pusha
inc
xor
pusha
xor
cmp
push
and
mov
in
sahf
mov
andb
push
in
jmp
jno
in
cmpb
je
pop
clc
or
dec
leave
jp
in
mov
roll
or
enter
pop
movsl
pop
mov
aas
mov
lods
arpl
stos
mov
mov
ret
dec
mov
mov
sbb
lret
mov
push
nop
stc
in
lea
xchg
jno
rcrb
cmp
int3
jb
test
jle
inc
mov
movsb
jl
addb
push
and
mov
xor
inc
jp
xor
leave
pushf
daa
pop
fsubl
xchg
add
and
jge
daa
into
aaa
leave
pop
jo
mov
xchg
stos
repnz
mov
xchg
jns
mov
cmpsb
sbb
outsl
sbb
jmp
into
mov
jns
fdivrs
adc
add
mov
imull
mov
sbb
adc
jo
mov
add
mov
imul
pop
xor
mov
inc
push
std
mov
sbb
mov
fldl
sbbb
movsb
mov
pop
sarb
iret
movsb
lahf
daa
and
cld
adc
push
cmpsb
popf
aas
fistl
fcmovnu
mov
pop
sbb
call
mov
jp
pop
lea
cld
dec
lods
xlat
sti
jbe
sub
andl
popa
cmc
xorl
stc
idivl
mov
mov
scas
and
and
lahf
inc
fwait
sbb
xchg
mov
pop
mov
push
leave
xor
gs
cmp
inc
insl
sbb
mov
aaa
sbb
or
mov
cmp
imul
dec
cmp
subb
lret
ja
push
sbb
pop
dec
ret
sbb
sub
leave
jmp
inc
pop
or
push
lret
mov
cmp
movsb
jne
lock
leave
inc
sbb
popf
add
or
mov
je
adc
loop
daa
lret
mov
mov
cmp
jmp
xchg
mov
mov
bound
rcrb
xor
lods
lock
xor
filds
or
adc
mov
mov
sbb
js
mov
inc
pop
xlat
dec
push
mov
stc
and
cmp
mov
out
jg
sub
test
push
in
push
imul
sub
xchg
pop
xchg
daa
adc
shr
xor
cli
mov
inc
mov
pushf
jmp
xlat
gs
mov
loope
ljmp
mov
jns
inc
jo
adc
add
inc
test
dec
outsl
inc
sahf
sub
jno
lret
shll
push
sarl
jns
cmp
mov
or
in
dec
cmc
les
sarb
sti
popf
mov
stos
push
mov
roll
fnstenv
sti
into
jmp
icebp
cwtl
inc
mov
js
shl
lcall
adc
imul
xor
pop
aam
sbbl
movsl
mov
sub
mov
lods
inc
cmp
push
pop
mov
mov
xor
dec
lods
pop
xchg
xor
xor
mov
push
xor
pop
cmp
addr16
stos
and
cmp
jne
mov
out
pop
subb
test
negb
mov
loopne
inc
jge
push
cmc
pop
mov
and
popf
insl
imul
cmpsb
fstps
adc
add
jmp
or
mov
dec
cmp
out
inc
push
push
xchg
test
jmp
add
jo
add
jp
adc
jns
ficoms
cmp
cwtl
jbe
loope
mov
add
mov
aam
jbe
cmp
sub
leave
lret
and
outsb
inc
jmp
lret
adc
xchg
mov
adc
inc
cmp
popa
fmuls
arpl
in
and
cmpb
stos
lret
mov
in
out
pop
cmpsl
xor
test
xchg
xchg
dec
xlat
pop
lods
xchg
aam
int3
pop
or
popf
shrb
scas
mov
push
or
mov
fidivrs
add
pop
into
nop
lret
inc
fs
js
call
cmpsl
divl
int3
mov
sub
jbe
lret
xor
stos
inc
cmp
popa
mov
mov
rorb
out
sbb
orl
push
sahf
mov
insl
aas
jge
clc
aad
and
sub
fwait
sbb
pop
es
push
les
pop
lods
in
adc
pop
inc
repnz
mov
sbb
cmpsb
jmp
push
pop
popa
in
and
dec
pop
pop
cmp
lock
outsb
insb
mov
outsl
popa
push
shrb
imul
xor
jmp
mov
push
mov
push
outsl
jbe
and
mov
pop
sub
cld
push
arpl
jmp
pop
push
lds
movsb
pushf
std
pop
cli
mov
movb
gs
test
insb
mov
mov
pop
mov
xor
xor
sub
pop
lock
mov
lods
add
xchg
loopne
mov
cmpl
aaa
jo
inc
icebp
fsubl
stc
mov
addl
aas
aaa
int
inc
icebp
jnp
jmp
adc
or
into
mov
jno
push
mov
popa
addr16
push
cmp
or
addr16
inc
jno
pop
ror
movsl
cmp
mov
jge
lret
ja
nop
jmp
dec
mov
push
mov
inc
or
clc
mov
push
pushf
lret
sub
les
cmp
fsubrp
lock
aaa
lods
mov
push
fmulp
inc
mov
pop
jge
cmp
ss
mov
inc
arpl
int3
pop
or
inc
mov
ret
jo
lods
mov
dec
into
xlat
mov
xchg
xor
inc
lods
fnsave
subl
and
lods
adc
arpl
hlt
sub
push
arpl
push
clc
cs
inc
mov
jmp
iret
mov
popf
stos
mov
push
pusha
fcmovb
test
sti
xchg
pop
sbb
xchg
lcall
lea
xchg
leave
adc
mov
imul
jmp
out
mov
ss
js
pop
push
cmpl
vunpckhps
jae
fadds
and
add
jno
mov
xchg
mov
sahf
fld
pop
cs
je
fidivrl
ja
push
sub
je
out
fsubrl
mov
pop
dec
pop
add
pop
xchg
cmp
aas
adc
sahf
inc
jb
push
or
mov
test
xchg
mov
mov
cmp
ret
ja
das
inc
cmp
stos
cmp
push
pop
sub
push
inc
adc
aaa
mov
jp
mov
rcrb
std
mov
sbb
stos
adc
mov
pop
pop
mov
mov
scas
ja
fstpt
push
dec
jb
jae
xchg
rcll
int
push
xor
in
stos
add
cmp
xor
pop
mov
adcb
mov
lods
in
loopne
stos
mov
cmc
into
xchg
pusha
jge
mov
call
mov
sub
sub
imul
in
sub
jnp
in
arpl
jmp
lods
mov
stos
pop
test
xchg
sbb
aas
sti
sbb
sub
leave
pop
cmp
dec
popf
jg
dec
les
lcall
inc
mov
inc
xchg
and
sarb
test
lock
lock
pop
mov
add
or
mov
dec
fwait
mov
xor
mov
shr
cltd
push
jmp
and
cli
lds
movsl
lret
sbb
mov
loop
pop
fdivrs
jle
sbb
xchg
jns
mov
call
lock
icebp
xor
fwait
push
cmp
stos
xor
mov
inc
mov
cmp
adc
inc
dec
pop
sub
sbb
pop
mov
daa
stos
pop
in
jle
in
jo
xchg
cmp
dec
mov
cwtl
mov
mov
stos
adcb
rorl
and
inc
dec
outsl
xchg
cs
mov
popf
sbb
mov
push
pop
mov
adcl
mov
pop
lret
xor
and
mov
mov
aaa
lret
or
adc
insl
xlat
stos
mov
aad
ljmp
pop
into
scas
es
sbb
mov
jle
test
xorl
rolb
jno
cmc
mov
dec
push
inc
push
mov
jns
mov
xchg
divl
jae
pop
ret
jno
xchg
pop
hlt
sub
in
xor
sub
arpl
mov
add
imul
sbb
cwtl
add
sbb
mov
in
xchg
mov
pop
pop
jp
stos
cmpl
mov
jb
cmpsb
inc
ja
mov
fcoml
in
and
std
mov
sti
repnz
jno
sbb
push
mov
xchg
ret
xor
call
adc
mov
out
sbb
pop
lods
mov
fimuls
dec
shll
inc
mov
aad
mov
xchg
fists
cmpsl
enter
cmpsl
mov
hlt
inc
pusha
icebp
fisubs
ret
jecxz
jae
iret
subl
test
cwtl
sub
inc
rcr
hlt
push
iret
mov
lods
lock
roll
jno
sti
xchg
push
mov
mov
lret
jns
aam
mov
xchg
call
mov
rcrb
and
add
ret
sbb
lahf
xor
lea
mov
jp
leave
lods
shll
outsl
jmp
sub
adc
mov
bound
inc
out
jo
push
scas
adc
mov
ja
mov
push
mov
add
cld
pop
push
cmp
xor
xchg
aam
xchg
xchg
mov
lds
and
icebp
fdivrs
das
push
popf
xchg
inc
popf
aaa
repz
lods
mov
in
ret
ret
sub
imul
or
movsb
jle
loopne
mov
sbb
fldenv
mov
pop
cmp
pop
call
xor
rol
lock
pop
loopne
and
or
xor
cmpsb
mov
les
js
cmp
mov
es
fwait
gs
cmpsb
cmc
adc
ja
aad
pop
jbe
fnsave
mov
xchg
test
insl
and
test
push
pop
cmp
sahf
gs
mov
mov
and
popa
push
or
cmp
in
in
lea
scas
jmp
mov
inc
and
imul
push
sbb
arpl
test
aad
call
push
loope
aaa
scas
das
mov
pop
push
test
nop
andl
jge
cwtl
jns
xchg
test
inc
mov
lock
cmp
imul
out
popf
sub
inc
mov
pushf
pop
xchg
pop
push
mov
and
mov
arpl
iret
jno
popa
cwtl
aam
out
dec
movsl
mov
scas
mov
loopne
cmpsl
lods
sbb
das
rorl
mov
mov
push
pop
jmp
outsl
std
imul
stos
out
push
addr16
fnstcw
flds
mov
push
rol
push
mov
sbb
mov
leave
pushf
pop
jae
test
cmpsb
loope
pop
imul
fadds
lret
push
fsubs
jp
iret
cmp
hlt
sbb
fwait
iret
xor
pop
mov
shlb
adc
inc
fiadds
push
add
xchg
clc
daa
mov
mov
xchg
imul
xchg
jno
test
pushf
push
and
stos
test
aam
adc
xchg
jae
shl
popa
add
jmp
out
mov
mov
shl
pop
dec
dec
xchg
mov
push
scas
mov
cmpsb
push
test
pop
dec
js
inc
xor
stc
add
pop
mov
arpl
inc
cmp
shlb
fldcw
pop
pop
xchg
pusha
jbe
fsubr
xchg
sti
bound
les
mov
mov
icebp
inc
adc
ret
outsl
jo
test
cmc
sbb
mov
fildl
pop
push
bound
push
and
cmp
loope
push
push
test
aaa
or
out
mov
sbb
cld
jns
xchg
inc
out
test
pop
mov
adc
insb
icebp
ja
jns
mov
cmpsb
sbb
xchg
test
shrl
stc
movsl
rorl
push
subb
sti
xchg
enter
inc
pusha
repnz
cmpsl
cmpsb
mov
jae
leave
cwtl
cmpb
jecxz
mov
sub
jnp
pusha
sbb
xchg
push
int3
aaa
mov
into
mov
pop
and
pop
das
daa
and
loop
and
lods
cmp
enter
add
and
ret
aaa
cwtl
xor
jo
int3
repz
sub
mov
inc
mov
icebp
jnp
adc
gs
mov
inc
mov
push
push
mov
pop
adc
xchg
daa
mov
pushf
mov
jns
jmp
dec
xor
shrl
rol
ljmp
adc
dec
aaa
sahf
dec
loope
testb
out
pop
sbbl
adc
mov
icebp
fwait
sub
test
mov
fs
arpl
std
and
data16
enter
ljmp
mov
adc
in
sub
mov
mov
negl
inc
call
push
repnz
mov
imull
xor
dec
cmp
loop
mov
imul
jl
or
lcall
dec
jmp
jmp
mov
call
pop
mov
pop
sub
mov
push
fimuls
cmp
dec
fcoml
andb
test
das
out
cwtl
jae
fsubl
mov
out
jg
ljmp
push
int
jbe
jnp
jg
leave
or
jmp
add
das
mov
rcrb
repnz
mov
inc
cs
pop
mov
js
inc
add
loope
addb
mov
outsl
incb
jl
call
jmp
out
outsb
fldt
inc
dec
fld
test
jnp
mov
fs
add
movsl
add
hlt
sub
jg
in
es
xor
inc
sti
loopne
out
mov
shll
mov
cmpl
xor
dec
fdivs
xchg
lret
out
ja
movsl
movsl
or
call
lea
test
sub
outsl
shlb
imul
pop
jg
xchg
mov
jns
jmp
sbb
add
adc
mov
lds
ficompl
sahf
stc
addl
stc
push
dec
mov
and
mov
test
test
gs
push
adc
test
mov
orl
cltd
sub
popa
xchg
jae
jg
mov
js
mov
pop
pop
cmpl
outsb
sbb
jecxz
xor
xchg
subl
sbb
xchg
cmc
call
popa
mov
adc
pop
jns
pop
adc
inc
and
mov
popf
data16
inc
lret
stc
pop
pop
mov
and
xor
repz
xor
iret
and
lcall
jno
fiadds
jmp
stc
mov
fwait
sbb
adc
shll
rclb
xchg
movsl
aam
repnz
mov
inc
cltd
movsl
mov
nop
cld
cmp
sub
mov
mov
scas
cmp
lea
leave
fsubrp
xchg
aad
stc
les
stos
int
sub
shlb
xchg
leave
lret
imul
aaa
cmp
jmp
or
lret
adc
cmpsl
and
mov
mov
xor
xchg
jg
ret
rorb
in
cmp
les
sub
negl
movsl
xor
arpl
inc
inc
fdivrp
mov
ds
pop
cltd
cmpsb
mov
sbb
gs
in
mov
jo
mov
divl
stos
sub
das
xchg
jg
aam
pop
pusha
push
imul
scas
das
inc
test
nop
mov
out
data16
xlat
push
es
sub
mov
mov
cmp
or
xor
sub
xchg
fidivrl
ja
push
add
and
xchg
mov
cmp
push
mov
cmp
sub
call
das
movsl
xor
and
lock
arpl
rcrl
mov
outsl
and
fs
xchg
sub
xchg
jp
push
ljmp
mov
inc
into
outsb
mov
jae
mov
mov
mov
pop
faddp
pop
je
xchg
push
fwait
cmp
sub
out
cmp
pop
fcoml
daa
sub
das
lret
jbe
dec
jae
test
addb
mov
cmp
rclb
mov
pop
sub
pop
fnstsw
jb
fidivrl
loopne
mov
scas
mov
sahf
and
cmpsb
es
inc
mov
in
out
xor
ljmp
test
xor
mov
mov
lea
inc
push
movsb
push
aad
sbb
sub
mov
xchg
cmp
sub
dec
jb
arpl
sub
mov
lea
adc
ljmp
data16
sub
inc
push
jno
add
mov
xchg
jb
fdivl
in
pop
and
ja
sbb
adc
mov
je
call
enter
lock
adc
cmpsb
lea
stos
mov
mov
xchg
scas
inc
into
cmc
setno
movsb
into
dec
mov
outsl
aad
xor
icebp
sbb
jbe
or
lea
fwait
sbb
lods
hlt
add
mov
imull
mov
xor
add
dec
xchg
addb
xchg
mov
lahf
mov
call
test
push
cltd
mov
and
lods
ret
in
xchg
fmull
dec
shr
pop
xor
mov
lods
mov
jno
lods
jns
movsb
nop
push
inc
inc
cwtl
dec
sbb
aad
or
mov
ljmp
leave
call
cmp
inc
shld
sub
mov
in
lock
adc
shlb
jo
jge
xor
sub
jno
dec
out
sub
push
sub
mov
push
mov
mov
lods
push
lods
mov
jle
lret
pop
inc
fidivrs
test
dec
subb
sub
dec
and
cmp
mov
dec
mov
cwtl
xor
lret
fildll
sarb
xchg
xchg
flds
mov
xor
mov
pop
dec
mov
popf
cmpsl
sbbl
xor
dec
stos
mov
jmp
xchg
mov
inc
movsb
dec
lret
test
jne
pop
into
cmp
or
pop
insb
sbb
aam
stos
call
xlat
mov
pop
xchg
jg
jp
fmul
jecxz
scas
mov
cmp
testl
lahf
lea
movsl
adc
or
std
dec
fldenv
dec
push
mov
test
xor
test
mov
dec
mov
jmp
jmp
cs
push
and
xchg
and
jp
cmp
imul
cmpsl
pop
jl
sbb
cmpb
inc
cmpps
mov
cmp
dec
mov
stos
cmp
dec
outsl
lods
add
push
mov
dec
cmp
adc
aad
fidivl
addb
into
insl
sbb
lcall
enter
cltd
adc
mov
arpl
aas
mov
cmp
sbb
daa
xor
pop
outsl
and
mov
mov
pop
xchg
sbb
lret
sbb
addr16
ja
or
mov
and
inc
xor
mov
mov
mov
mov
out
mov
jg
xor
pop
outsb
cmpl
es
jne
sbb
pop
or
testl
faddp
mov
push
jae
pop
mov
inc
mov
stc
pop
movsl
aad
xor
scas
loop
add
arpl
xorl
popf
bound
popa
sub
xchg
jle
pushf
adcl
sbb
stos
movsl
daa
mov
lahf
mov
fidivs
mov
adc
arpl
icebp
inc
sub
mov
in
pusha
push
imul
mov
xchg
inc
inc
and
std
repz
inc
mov
inc
cs
push
and
jge
sub
jg
popf
xchg
fldl
dec
test
outsl
push
mov
arpl
testl
jle
inc
pop
mov
repz
rorb
lcall
adc
loop
mov
xlat
pushf
push
and
mov
scas
outsl
dec
pushf
push
adc
dec
jge
xor
shlb
mov
test
mov
loop
mov
mov
cmp
addl
imul
xlat
idivb
out
pop
mov
xchg
ret
pop
cmp
jb
movsb
fdiv
jne
pop
jmp
xor
cmp
adc
add
xchg
imul
jge
sbbb
mov
xchg
mov
and
inc
rcrl
sub
push
sarl
sub
add
adc
mov
adc
scas
pop
stc
sahf
lock
leave
and
mov
enter
mov
sub
mov
dec
inc
mov
sbb
shrb
fst
pop
popf
shlb
pop
pop
outsl
mov
stos
adc
daa
add
and
dec
dec
in
mov
imul
and
cmc
sub
mov
cmp
inc
push
xchg
and
pop
xchg
int
dec
sbb
jl
dec
lock
lods
fsubr
sbb
mov
xor
jecxz
jno
sub
mov
mov
mov
lods
mov
sbb
lret
mov
scas
pop
mov
dec
jno
pop
xchg
mov
scas
mov
mov
dec
push
imul
lods
pop
out
adc
les
clc
jge
aam
and
mov
addr16
xchg
push
jp
addr16
adc
jmp
adc
addb
mov
adc
ss
stos
cmp
xor
adc
add
pop
mov
jge
pusha
outsb
or
negl
push
xchg
cmp
mov
mov
jp
sbb
mov
sub
stos
imul
mov
mov
mov
mov
ja
jne
mov
cwtl
imul
lds
sbb
mov
push
lock
add
lcall
popa
inc
outsl
pop
lea
nop
add
aaa
cmc
adc
mov
push
fnsave
lds
scas
pop
jmp
sbb
adc
pop
dec
mov
inc
add
xor
xchg
jle
popf
test
imul
iret
hlt
shll
jns
addr16
lcall
lea
pop
xchg
stc
sub
cwtl
sbb
mov
jle
dec
arpl
rolb
xchg
pop
xchg
jp
daa
pop
jp
out
mov
fsubrs
out
xorl
in
jmp
xor
jbe
sub
adc
loop
sub
loop
adc
sub
lret
pushl
lods
sbb
shll
sbb
faddp
pop
lahf
mov
dec
mov
adc
dec
mov
jge
sbb
pop
and
adc
pop
ret
ret
cli
sbb
add
dec
aam
les
push
sahf
xchg
test
icebp
gs
mov
out
mov
cwtl
fisubl
pushf
sub
shl
push
imul
and
pop
out
fdivrl
adc
xchg
in
mov
and
adc
mov
addl
inc
sub
adc
and
fisubrs
dec
fwait
mov
jge
mov
shll
in
xchg
mov
mov
mov
mov
ds
mov
pushf
dec
popa
sub
sarb
clc
sbb
insl
cmp
out
xor
sbb
addr16
loope
lods
mov
das
mov
gs
lcall
mov
add
imul
mov
pushf
push
cs
into
daa
jmp
mov
adc
cmp
flds
outsb
mov
andl
adc
ljmp
sbb
icebp
mov
or
fsubp
mov
das
adc
test
loope
mov
scas
jmp
jg
dec
icebp
dec
mov
mov
add
cmpsb
cmp
xorb
sbb
cmc
or
add
sub
push
add
pusha
mov
cmp
fwait
jmp
push
pushf
pop
es
les
test
mov
push
push
lods
push
insl
cli
movsl
cmpsl
adcl
loope
adc
test
popa
and
test
xor
mov
and
lods
sub
cmpsb
test
cwtl
xor
pop
lods
mov
inc
mov
int3
scas
shrb
shlb
and
lock
and
mov
mov
stos
test
push
fwait
cmpsl
fndisi(8087
and
shlb
mov
and
mov
imul
sub
pop
test
cli
sub
adc
add
mov
mov
test
daa
lret
mov
sub
and
lock
and
addr16
push
cmpsl
sub
scas
push
cmp
mov
sub
fistpl
iret
and
lock
and
jp
mov
stos
or
inc
cmp
cmp
sbb
into
mov
addr16
sbb
shlb
arpl
sti
push
stc
test
sub
inc
or
add
inc
push
push
into
inc
insl
addr16
and
mov
mov
insb
pop
repz
dec
mov
jno
and
cmp
sub
pop
pop
pop
sbb
test
mov
inc
notl
fsts
in
pop
add
and
in
into
scas
test
mov
fdivrs
sub
sub
inc
push
mov
imul
lock
fwait
addr16
push
mov
push
xchg
aas
stc
sbb
mov
push
mov
or
mov
clc
mov
fucompp
int3
add
outsl
mov
lods
jg
dec
out
dec
pop
testl
pop
sub
mov
stos
jns
xchg
popa
outsb
repnz
ret
icebp
or
pushf
mov
adc
orl
and
xorl
mov
std
les
and
cmpb
mov
add
push
jae
xchg
test
lock
out
cmpb
mov
jnp
dec
jb
jmp
daa
pop
mov
lock
shlb
dec
js
mov
xchg
jge
mov
pop
and
pop
gs
jmp
hlt
or
push
and
jbe
mov
stos
adc
stos
into
pop
jo
push
out
mov
sti
mov
add
stos
pop
push
loope
fsubl
shrl
imull
ret
movsl
jnp
fwait
xchg
pushf
push
push
push
sti
push
jae
je
cmc
inc
and
add
movsl
mov
movsl
aam
movsl
xor
mov
test
stos
inc
adc
in
stos
aad
and
push
push
or
stos
lock
imul
subb
leave
test
in
pop
cmc
dec
in
stos
or
mov
adc
mov
dec
and
push
in
dec
and
mov
lods
movsl
in
ds
rcrb
js
add
mov
outsl
cmp
stos
lods
imul
add
movsb
add
pop
jne
mov
mov
and
adc
rcll
aaa
jl
pop
pop
enter
popf
mov
inc
int
fistl
xchg
push
mov
adc
nop
lcall
jmp
dec
sbb
in
pop
adc
clc
pop
mov
sub
sbb
sbb
add
push
or
and
ficoml
jno
xor
xchg
mov
mov
add
testb
cmp
daa
mov
adcl
mov
or
test
ret
loope
or
mov
icebp
adc
and
mov
adc
and
fsubrs
ja
mov
int3
arpl
mov
test
adc
mov
push
movsl
ja
sbb
sbb
pop
aam
iret
sbb
jmp
pop
dec
and
jg
enter
movsl
pop
fiadds
sarb
and
push
sti
js
enter
mov
inc
push
mov
pushf
push
add
and
daa
add
ret
addr16
xchg
pop
jae
aam
sub
shrb
mov
sbb
jg
test
out
int
fisubrs
fsts
jo
or
push
xchg
fsts
popf
xchg
mov
mov
mov
dec
shll
and
in
mov
gs
lret
aam
inc
jg
and
lock
iret
hlt
imul
aam
into
mov
adc
ret
test
test
xor
mov
stc
lret
xchg
or
dec
mov
sbb
clc
inc
call
mov
jle
cmpxchg
test
sbb
mov
iret
sbb
scas
add
sbb
ud0
scas
into
adc
scas
shlb
scas
mov
divl
lret
subl
mov
and
mov
inc
and
cmp
inc
jmp
mov
xor
mov
insl
ficoms
mov
fs
mov
cmpb
adc
add
and
scas
lock
mov
or
jo
and
mov
frstor
and
mov
test
add
icebp
lret
test
imul
add
mov
cmp
mov
add
aam
xchg
imul
lret
test
in
sub
sbb
mov
daa
pop
stc
lret
push
test
daa
in
mov
lret
out
mov
mov
in
insl
pop
pop
imul
sti
and
inc
xchg
dec
mov
add
jmp
insb
mov
out
test
mov
pop
cmpsl
cmp
in
aas
jp
push
sub
stos
fstl
xchg
out
mov
mov
addr16
adc
and
int
jmp
mov
mov
mov
sbb
ret
xchg
cli
lahf
mov
lret
sbb
rsm
rcrl
shrb
inc
jb
add
in
or
lds
sub
fstl
sbb
test
outsb
mov
sub
rorb
mov
stc
lret
pop
push
fidivs
mov
xor
sti
out
mov
jmp
ret
xchg
popf
pop
xchg
stos
mov
mov
jmp
bound
xor
ret
sar
lret
mov
adc
dec
mov
push
adc
push
and
adc
rcr
pop
pop
xchg
cmp
subb
shrb
adc
dec
js
fisubs
or
lods
push
pop
std
sub
sbb
test
jp
jge
inc
pop
jmp
aam
cmp
and
jp
sahf
inc
shll
fildll
movntq
out
lods
inc
movsl
mov
and
lret
iret
dec
mov
fsubs
push
aas
xor
jl
outsl
jae
or
mov
stc
or
adc
lea
cmpsb
inc
test
pushf
fwait
mov
lock
cmp
rclb
ret
or
cld
xchg
loope
fwait
ja
pop
mov
add
xchg
sahf
lret
repnz
test
mull
pop
test
ja
pop
lds
jle
fwait
sub
sbbl
mov
test
inc
jmp
cmp
add
sub
or
push
imul
into
rcl
adc
roll
imul
sbb
ret
xor
add
stos
cwtl
in
sar
outsl
cmp
cmpsl
es
mov
push
inc
mov
xchg
jo
out
daa
jmp
push
loopne
movsl
add
fdivs
es
inc
stos
lcall
sub
testb
cltd
mov
jnp
fwait
mov
stos
pop
pop
or
mov
dec
mov
and
roll
ret
gs
cwtl
pop
popa
mov
cmp
sbb
and
int3
push
push
mov
mov
out
xlat
mov
cmp
lods
and
adc
jmp
pop
mov
icebp
popa
int3
inc
add
mov
aaa
push
mov
lcall
dec
mov
cmpsl
fidivrs
fcompl
inc
in
sbb
cmpsb
pusha
mov
sbb
popa
ljmp
sbb
sti
or
mov
in
mov
int
mov
dec
inc
dec
daa
inc
mov
adc
jns,pn
lahf
mov
jmp
xchg
and
dec
xorb
fcomi
loop
jl
or
inc
add
std
sbb
mov
lahf
mov
pop
icebp
into
shlb
lods
mov
fsts
lods
lahf
mov
inc
inc
xor
ficoms
add
inc
jb,pn
lds
sti
add
fwait
pop
mov
xchg
call
or
inc
int3
into
jl
pop
dec
sub
bound
pop
mov
arpl
xlat
out
sub
out
push
cmp
imul
cmp
jmp
loop
mov
cmp
inc
xchg
shlb
mov
in
pop
in
pop
adc
cmp
add
pop
icebp
jmp
sub
push
in
fisttps
insl
imul
outsl
orl
add
dec
mov
jge
mov
jns
fidivl
jns
push
jnp
jmp
mov
inc
pop
stos
adc
adc
shrb
xchg
adc
and
enter
test
into
cmp
cmp
cmpsb
xor
je
add
insl
inc
cmp
mov
jae
and
jno
cmpsb
ds
movsb
jo
daa
pusha
icebp
mov
faddp
cmp
rclb
mov
cmpsb
loopne
fcom
xchg
enter
iret
mov
inc
icebp
xchg
mov
int3
xorb
lcall
mov
or
mov
pop
jnp
lret
not
enter
or
test
call
inc
dec
lds
jle
adc
jo
dec
arpl
pop
and
fadds
popf
sub
pop
bound
mov
xchg
mov
inc
ficoms
mov
pop
push
dec
insb
push
inc
pop
mov
push
rolb
add
movsb
xor
mov
adc
push
movsb
cld
gs
and
test
pop
in
mov
ja
call
clc
je
outsb
jmp
mov
mov
int3
sbb
test
dec
lcall
loope
cli
movsb
and
and
scas
fdivrp
jnp
dec
mov
pop
out
mov
mov
pop
push
outsl
cld
int3
adc
je
or
out
add
outsl
repz
and
imul
shrb
mov
cmc
add
data16
mov
and
mov
loop
cmp
push
imul
mov
movsb
and
sub
and
imul
test
push
jecxz
inc
sub
lahf
movsl
mov
sti
les
mov
call
inc
bound
cmp
imul
jb
push
cmp
ss
imul
sbb
mov
outsl
cwtl
mov
and
mov
and
outsl
mov
and
and
outsl
jne
int3
and
lock
adc
pop
mov
and
adc
inc
leave
mov
imul
push
mov
pop
sub
ja
imul
add
cmp
cmpsb
lea
push
jno
mov
jl
int3
push
jecxz
inc
mov
or
ret
jge
mov
enter
call
sub
mov
inc
pop
loope
and
ja
rcr
xor
repz
push
mov
cmp
test
jg
dec
movsb
cmp
test
cwtl
cmpsl
das
xorb
aam
xor
rolb
gs
dec
mov
stos
sub
jb
mov
xchg
fwait
mov
xor
sbb
cmc
mov
mov
stc
dec
cltd
xchg
add
push
lret
mov
movsb
xor
stc
or
mov
xchg
xchg
mov
in
test
sbbl
cwtl
cli
mov
dec
in
stos
rorb
icebp
inc
cmp
add
and
pop
out
jnp
gs
or
xlat
fs
and
pop
lret
jns
pushf
push
imul
dec
test
and
inc
ds
rorl
stos
push
sub
mov
pop
mov
mov
movsb
daa
rcrl
sarb
add
sub
cld
call
push
fisubs
lods
dec
add
out
xchg
mov
cmp
add
scas
pop
xor
mov
int3
icebp
dec
jg
sbbl
push
test
lcall
es
les
pop
jmp
xchg
clc
pop
add
sub
pop
lret
pop
mov
movsl
xor
sarl
stos
jmp
lds
xor
or
mov
in
jmp
int3
push
mov
or
jl
clc
aam
in
out
stos
xchg
jmp
mov
inc
stos
dec
xor
and
negb
idivb
fmuls
test
xor
and
cmc
sub
adc
inc
add
test
ret
imul
xchg
mov
sub
mov
shrl
lahf
sub
into
out
stc
test
imul
dec
push
adc
into
dec
ss
fpatan
sbb
mov
adc
sub
sbb
adc
sti
or
popf
mov
mov
pop
popf
sub
push
pop
cmp
int3
cli
push
dec
scas
xchg
cmp
in
cmp
xor
and
adc
cmp
dec
xchg
xor
notb
mov
subb
or
inc
and
and
outsb
lret
call
mov
pushf
sub
ret
mov
jo
fwait
ret
dec
imul
repz
cmp
dec
decl
fadd
sahf
inc
xchg
pop
lods
adc
or
inc
jmp
imul
mov
pop
mov
jae
jo
negb
mov
das
mov
imull
mull
scas
int
dec
pop
push
xorl
loop
mov
push
leave
lahf
mov
sub
in
int
pop
jns
push
gs
pop
mov
out
mov
push
mov
lcall
add
mov
out
clc
mov
mov
xchg
mov
jg
mov
inc
and
xor
and
into
lcall
xor
cmp
int
or
and
jle
dec
dec
mov
call
mov
add
and
mov
in
mov
pop
aad
mov
repz
jns
mov
stos
mov
fistps
in
cmpsl
or
scas
daa
mov
mov
adc
and
mov
xlat
aad
inc
cmp
sub
pop
sbb
das
and
lcall
sub
popa
stos
adc
sub
je
inc
cmpsl
in
sub
sub
cmpsl
ja
mov
movsl
js
sub
or
and
mov
sub
popa
sbb
mov
jo
and
sub
nop
sti
stos
lahf
lahf
mov
cmpsb
aad
jnp
scas
mov
mov
sub
dec
jmp
jne
xchg
pop
or
cld
dec
pop
scas
sub
dec
add
sbb
insb
jg
xchg
xchg
jmp
mov
xchg
lret
sub
inc
aas
loop
xchg
lret
sub
xchg
lret
sub
int
dec
push
aad
das
movsl
subl
mov
rcrl
jae
nop
insl
in
imul
inc
adc
or
mov
inc
and
inc
pop
sub
ljmp
mov
cwtl
imul
cmc
xor
stos
sub
and
fs
mov
jge
pop
bnd
jecxz
jle
ficoms
insb
js
ds
pop
sahf
aas
xor
pop
or
aad
mov
mov
mov
call
mov
pushf
mov
pop
ss
push
das
rcll
cwtl
loope
add
jmp
pop
pop
inc
into
mov
mov
push
add
or
mov
mov
test
aaa
iret
and
dec
push
mov
sub
lret
pop
mov
xor
test
fwait
imul
or
mov
sbb
dec
divl
cmp
jmp
scas
xchg
or
add
loopne
das
jns
mov
mov
subb
mov
mov
shlb
and
jb
xor
xchg
xor
inc
lock
lods
ds
daa
mov
aam
mov
sbb
popa
cmpsb
push
pop
xor
inc
jg
mov
daa
lahf
std
dec
hlt
and
push
jo
lods
sub
imul
mov
mov
sbb
sbb
mov
dec
mull
movsb
or
cmpsb
mov
mov
imul
dec
sbb
cmp
mov
pop
pop
dec
jmp
mov
add
les
test
mov
push
pop
pop
and
in
fcoms
xor
aad
lods
sbb
sbb
lock
test
push
jmp
mov
imul
daa
push
stos
xchg
movsl
jne
mov
pop
jo
popa
ds
mov
daa
jns
or
mov
sbb
inc
aaa
dec
pushf
popa
xchg
jp
imul
adcb
jmp
dec
lret
sbb
jo
fcompl
call
and
sbb
or
mov
push
pusha
stos
inc
xor
bound
sub
push
shrb
fwait
xchg
mov
int
or
mov
daa
xor
mov
inc
stos
jg
cmp
stos
dec
pop
cmpsl
jmp
gs
insl
rolb
fcoms
cmpsl
sbb
mov
arpl
mov
imul
mov
pusha
lods
dec
sub
inc
cmp
add
mov
mov
popa
js
push
mov
adc
xlat
ret
jmp
xchg
bnd
bound
clc
mov
hlt
jns
int
xor
fmull
sub
insl
repnz
scas
lods
insl
adc
dec
inc
xor
lods
insl
mov
dec
mov
and
xchg
out
out
dec
and
mov
adc
mov
leave
iret
cmp
pop
out
loopne
loopne
fdivrp
or
test
jmp
dec
pusha
rcrl
push
or
fs
xchg
jg
mov
push
stos
inc
jb
mov
aaa
lcall
sbb
movsl
cmp
imul
call
add
xor
adc
xor
test
inc
nop
ljmp
lret
inc
dec
cmpsl
xlat
cli
sbb
les
andb
xchg
int
jbe
push
dec
dec
repz
inc
mov
rcrb
movsl
stos
frstor
ret
adc
cwtl
xchg
mov
mov
mov
stos
mov
cmpsl
lahf
dec
cwtl
sbb
xchg
adc
stc
cmp
scas
mov
pop
jmp
repnz
out
and
push
xchg
dec
mov
out
dec
cmc
xchg
sbb
push
xor
shll
scas
or
movsl
das
sbb
into
adc
mov
movl
popf
cmpsb
std
xor
call
sbb
sbb
rcrb
cmp
mov
movntps
mov
cmp
inc
mov
sub
leave
fnstsw
stos
imul
jns
sub
push
cmpsl
sti
pop
adc
in
lea
dec
stc
ja
jp
add
std
movsb
pop
adc
cwtl
jle
xchg
in
add
mov
rolb
call
jmp
lods
shll
sub
mov
jnp
xchg
flds
xorb
push
pop
loope
test
mov
aas
mov
lods
mov
outsl
xchg
orb
popa
fidivrs
in
sub
push
stos
popa
loop
mov
int
add
dec
push
dec
xchg
or
xorl
cmp
jmp
inc
mov
cmp
cmc
test
mov
shll
cmp
ret
xchg
mov
inc
and
stc
in
adc
lcall
lock
push
dec
xchg
and
mov
xor
pop
mov
loop
mov
mov
mov
or
lahf
jno
fwait
cmp
push
call
pop
dec
jg
push
and
jb
mov
jns
inc
fsubrs
outsb
div
dec
xchg
mov
neg
cmp
shrb
adc
fisttpl
aas
cmpsb
aaa
and
jbe
popf
cld
ss
jmp
xchg
mov
fistpll
jmp
cmp
mov
divb
mov
xor
lds
sub
lods
add
mov
fistpll
lcall
lock
jmp
or
aaa
inc
js
cmp
loope
fistpl
ljmp
shlb
jo
inc
daa
pop
pop
dec
and
push
lret
lods
sub
lods
mov
push
add
test
inc
adc
mov
and
movsl
mov
enter
or
add
xchg
cmp
mov
rol
cmp
jb
mov
mov
cmpsl
leave
popa
je
outsl
fwait
jmp
lcall
jno
push
xchg
pop
jge
movsl
cmp
and
adc
jo
or
mov
fs
adc
stc
add
jmp
fcmovnb
inc
dec
mov
fistpll
push
ret
lret
inc
xor
inc
xchg
mov
daa
out
cmp
xor
mov
pop
or
xchg
mov
hlt
mov
popf
push
xor
rcrl
xorps
sbb
jge
mov
sarb
mov
movsb
or
std
shrl
pop
insl
adc
pusha
pop
mov
cmp
fimuls
add
cld
mov
in
in
imul
test
cld
mov
pop
mov
popf
cmpb
popf
ret
outsl
in
sub
xchg
add
jmp
mov
insl
mov
mov
sbb
cmp
mov
xor
addl
call
ret
imul
cmp
pop
lret
jg
mov
pop
xchg
push
rolb
mov
jle
mov
hlt
fnstcw
lea
cs
call
dec
sub
and
mov
lods
leave
xor
mov
icebp
ficomps
pop
pop
add
push
shll
cmp
inc
push
sti
push
xor
fwait
jo
test
push
push
mov
cmpsl
inc
imul
sub
inc
sbb
mov
leave
mov
sarl
xchg
jmp
sub
insl
add
es
sahf
lods
inc
testl
out
shll
cmp
sub
mov
daa
xor
lods
mov
lahf
rcl
out
test
test
rcrl
mov
xor
call
sbb
cmp
sar
jl
inc
or
sahf
sub
sub
add
subl
mov
mov
mov
xchg
xchg
mov
mov
cmp
inc
movsb
addl
and
cmp
and
movsl
adc
call
enter
mov
jo
shl
ljmp
inc
popf
insl
xlat
cmp
sbb
add
xor
jmp
mov
sbb
xor
jb
jb
arpl
sub
aam
dec
je
add
inc
loope
cmp
int
movsl
stc
mov
push
ficompl
ds
loop
aam
out
movd
stos
add
cs
xchg
add
inc
sub
adc
inc
aam
dec
adc
shlb
sarb
mov
cmpsl
cmpsl
cmp
cmpsb
mov
mov
stos
xor
mov
inc
push
mov
outsb
xor
dec
sbb
test
xchg
xor
xlat
loop
fcompl
loope
mov
test
inc
lods
int3
or
popa
lods
xchg
add
inc
sub
and
cmpsl
idivl
lods
lock
stc
andl
scas
mov
das
scas
lods
popf
out
aaa
pop
push
inc
dec
sbb
inc
lret
and
or
cmp
mov
scas
xor
lods
mov
popf
jbe
repnz
mov
lds
sbb
jg
into
cmc
push
stos
lcall
popa
stc
mov
push
scas
es
fisttps
adc
aam
inc
push
les
bound
hlt
inc
push
iret
clc
into
push
daa
fidivrs
sbb
add
cmpb
int3
dec
insl
arpl
lock
aas
push
aaa
inc
cmp
mov
fwait
sar
int
fmull
cmpsb
pop
test
dec
pop
push
cmp
inc
mov
mov
sub
popa
push
ret
ds
mov
mov
lds
fs
mov
mov
add
lods
pushf
lea
pop
mov
rcll
sarl
ficomps
loop
mov
sahf
xchg
mov
stos
mov
sub
int
and
in
enter
pop
xchg
inc
rcrl
fucomip
les
mov
stos
push
popf
pop
movsl
iret
imul
sub
jo
ljmp
push
in
lods
xchg
out
movsl
mov
pop
rol
xchg
jg
ret
jle
cmp
pop
push
jmp
mov
outsl
mov
jno
fcmovb
sbbl
lods
aaa
cmc
sub
lahf
stc
mov
cmc
loop
outsl
mov
shlb
inc
add
roll
pop
xchg
dec
or
push
outsl
fisubrl
push
xor
lods
inc
ret
adc
add
xor
mov
xor
add
jmp
fwait
insb
call
imul
arpl
daa
mov
pop
leave
dec
pop
leave
stc
stos
invd
inc
subl
inc
xchg
pop
mov
repnz
dec
add
and
mov
push
add
dec
adc
jno
roll
pop
aam
fidivrs
mov
mov
rolb
test
add
inc
dec
mov
stos
in
cmp
movsb
fnstcw
iret
in
adc
out
push
loope
jl
cmp
shrb
rcl
test
xor
inc
aaa
frstor
icebp
lods
push
shrl
pusha
imul
fldt
sbb
jns
sbb
lock
cmp
jmp
nop
lock
mov
mov
addl
shll
lock
pop
sub
jnp
out
dec
test
fsts
push
jnp
mov
outsl
shr
int
test
test
xchg
leave
pop
sti
add
inc
mov
sbb
mov
and
jg
mov
inc
sub
push
xchg
xchg
adc
dec
jmp
fadd
shrb
inc
mov
or
in
jecxz
pop
mov
fldt
pop
ss
jl
pop
inc
sbb
ja
scas
push
lret
sub
dec
icebp
ja
pop
jns
shlb
mov
xor
cmp
incb
xor
fnsave
jo
push
xchg
xchg
cmp
int3
add
cs
adc
jecxz
mov
sbb
sbb
inc
dec
cmp
jno
jp
mov
cmp
in
lahf
mov
pop
ljmp
or
rcrb
add
cmp
mov
sub
xchg
jmp
loope
add
sbb
fidivl
add
or
mov
jg
mov
icebp
out
jns
les
xor
cmp
xchg
mov
xor
aas
xchg
add
sub
sbb
cmp
sub
inc
bound
push
int
mov
scas
loope
push
mov
xor
orb
imulb
movsl
movsl
out
imul
testb
fwait
jo
jp
pop
and
ja
inc
add
fnstenv
mov
arpl
das
into
pop
jp
fistps
sub
jns
ljmp
mov
sub
sar
cltd
inc
sbb
cmpsb
sub
sub
lods
push
xchg
ret
and
push
and
mov
and
mov
xorl
or
out
arpl
push
push
adc
xor
pop
pop
mov
jmp
fsts
xchg
inc
icebp
xchg
fstl
pusha
xchg
outsl
cs
in
sub
jns
cmpsb
xor
imul
mov
rol
mov
adc
mov
cmpsl
xchg
jmp
inc
adc
fcompl
lock
add
testl
jns
pop
cmpsb
adc
cwtl
inc
stos
jp
jns
mov
call
cmp
adc
and
das
icebp
pop
dec
mov
or
repz
ret
ss
fisubrs
mov
dec
es
sbb
frstor
pop
ja
adc
shll
rclb
xchg
pusha
outsl
cmp
addr16
pop
mov
stc
sub
fildll
xor
dec
push
sub
inc
xor
loop
lods
addr16
mov
std
out
or
sbb
pop
mov
cmp
rol
push
xor
or
mov
mov
sub
inc
lret
loope
xor
divps
or
fildl
sbb
sbbb
mov
jns
mov
pushf
sbb
leave
stc
test
push
cmp
sbb
cmc
jbe
fcmovb
leave
rcl
stos
jo
xor
movsl
in
popa
fdivl
clc
movsl
adcb
xchg
mov
add
mov
mov
add
and
sbbl
sahf
add
adc
out
mov
jne
mov
and
and
ss
mov
inc
xchg
insb
dec
std
scas
js
stc
mov
fstpt
push
scas
add
mov
xor
mov
popf
stc
aaa
in
push
aaa
imul
pop
out
pusha
pop
ret
sbb
aas
cmp
push
sbb
imul
js
lds
inc
cmp
rorb
in
adc
inc
pushf
xor
mov
imul
lret
dec
cld
sub
dec
mov
ret
movsb
pushf
dec
xchg
mov
sub
mov
push
inc
xlat
inc
pushf
lret
and
xor
mov
arpl
dec
jmp
imul
inc
push
repnz
outsl
in
popa
add
cmp
and
enter
les
xor
and
sub
cmp
pop
inc
ret
imul
fdivr
aaa
jno
das
push
cli
ret
xchg
mov
test
call
call
and
jmp
imul
outsb
mov
dec
aas
dec
push
mov
lret
xchg
pop
into
sub
adc
in
das
xor
mov
addr16
mov
das
or
test
cld
mov
xor
push
aam
inc
push
sbb
fcmove
mov
lret
jp
jg
into
mov
test
fwait
and
shlb
mov
inc
stos
fldenvs
mov
in
fcmovne
xor
lods
and
stos
sub
xlat
or
fs
pop
hlt
sub
pop
xchg
and
mov
js
mov
shrb
sub
fld1
push
cwtl
xor
jbe
and
subb
stos
hlt
mov
add
popf
stos
popf
xchg
jge
mov
loop
push
arpl
ret
jnp
gs
add
mov
mov
or
stos
popf
cwtl
push
loope
fs
pop
insl
jae
mov
test
mov
popf
test
push
or
das
pop
and
cld
pop
pushf
std
movsl
sahf
in
xor
stos
adc
sub
call
lods
daa
rcl
jno
pop
pop
les
sbb
aad
lods
aam
jno
dec
cmp
inc
fxch
xchg
inc
fs
lods
pop
cmpsb
jg
leave
nop
popl
xor
push
mov
push
mov
cwtl
mov
adc
je
mov
lds
jl
mov
imul
sbb
fisttpl
lahf
test
sbb
mov
inc
imul
stc
mov
std
mov
or
dec
and
sub
cmp
mov
test
sub
mov
mov
jmp
movsl
mov
mov
lock
cmpsl
inc
cmp
mov
pop
jle
fdivrl
test
imul
add
test
dec
inc
or
add
cmpsb
and
imul
or
fisubl
mov
xor
fimuls
pop
sarb
xchg
enter
and
cmc
sbb
adc
addr16
popa
mov
and
fsub
push
pop
daa
push
mov
test
inc
xor
sub
inc
cwtl
or
and
mov
adc
jle
mov
addr16
je
out
jae
shl
push
or
loopne
push
sbb
mov
push
inc
orb
mov
push
pusha
cmc
and
jecxz
das
adc
add
and
out
mov
dec
jmp
xchg
jmp
inc
sahf
pop
cwtl
mov
or
int
xor
nop
repz
add
xor
mov
add
fwait
das
push
in
adc
sbb
lret
fsubs
fiadds
inc
adc
jae
addl
test
add
std
into
lret
movsl
xchg
lret
nop
lds
xor
pop
mov
mov
inc
mov
aad
test
ret
fistpl
dec
push
mov
dec
push
and
ret
pop
push
aam
scas
jns
jmp
or
in
jne
jmp
jnp
pop
outsb
imul
mov
sti
mov
dec
push
fbstp
dec
lahf
mov
es
adc
mov
lea
fistl
mov
xor
mov
lods
out
dec
add
scas
pop
pop
imul
xchg
mov
pushf
data16
movsl
inc
sub
into
subb
push
daa
and
or
test
dec
lahf
iret
popf
mov
mov
pop
pop
fnsave
out
mov
in
fisttps
inc
flds
push
push
int3
add
testb
and
mov
cmc
xchg
bound
pop
cli
mov
pop
inc
adc
dec
inc
pushf
or
pop
fistpl
mov
ret
incl
mov
inc
imul
xor
cmpsl
cld
jmp
adc
adc
roll
inc
scas
ror
stos
mov
sbb
add
sarl
sub
inc
movsl
lods
mov
mov
dec
lock
mov
add
inc
mov
push
inc
test
cmp
test
out
pop
into
lahf
add
aas
inc
fsubl
push
inc
fcmovnb
mov
mov
lods
sbb
sub
mov
movsb
ds
inc
fisubs
test
xchg
jae
pop
fwait
imul
jb
shrb
int
jle
rclb
adcb
pop
xchg
sti
and
cmp
push
andl
mov
push
sbb
in
sub
aad
adc
dec
daa
push
mov
rclb
push
jmp
cs
ret
lret
subl
mov
sahf
inc
adc
jne
push
jmp
popa
es
es
jo
inc
push
sbb
es
xchg
iret
rcr
idivb
adc
jg
cmc
jae
sub
adc
push
mov
ja
test
daa
pop
sub
shrl
mov
arpl
inc
xor
and
enter
lods
popf
inc
jg
lret
cwtl
and
fstps
sbb
jge
cmp
ret
or
clc
fsub
mov
push
rcrl
jg
or
movsl
mov
mov
mov
pusha
scas
mov
mov
andb
mov
jo
pop
shl
push
movsb
js
mov
mov
jno
pushf
mov
cmpsb
ss
pushf
xor
mov
test
xor
fcomip
pop
sbb
ss
movsl
mov
push
loopne
pop
sub
cmpb
repnz
dec
mov
xchg
jmp
cmp
inc
mov
mov
enter
xor
je
out
ljmp
outsl
sub
notl
popf
mov
mov
ja
imul
out
fiaddl
aas
cmp
mov
cwtl
and
out
lcall
inc
push
movsb
pop
mov
xchg
xor
mov
sub
xor
cmp
sbb
or
mov
lock
sbb
cmpb
cmp
xchg
xchg
adc
shll
pop
sub
jl
cmp
in
ja
lahf
cmp
ficoms
sub
sbb
and
int
das
pop
aas
mov
pusha
and
mov
push
orl
ja
mov
js
pop
cli
inc
fs
fwait
lret
movsb
stc
stos
xchg
mov
popa
xor
mov
xchg
sti
mov
jl
test
fs
lcall
mov
inc
sarb
dec
xchg
dec
fs
test
sbbl
dec
jg
inc
push
lods
inc
mov
gs
push
int
enter
add
popf
jl
and
jmp
lock
das
inc
icebp
negb
xor
inc
ds
idivl
icebp
jne
testb
or
bound
mov
mov
ja
and
jb
daa
push
or
mov
pop
push
mov
push
pop
mov
dec
pop
mov
pop
cwtl
cwtl
mov
cwtl
lods
cwtl
mov
mov
pop
insb
into
fs
movsb
and
popa
dec
sub
popa
inc
jno
les
mov
pop
dec
adc
fidivs
inc
sti
iret
adc
pop
cmpsb
imul
cvtps2pi
dec
ljmp
mov
out
mov
cmp
arpl
adc
or
movl
movsl
xchg
sub
xchg
mov
mov
int3
or
xchg
fsts
mull
push
pop
movsl
cmp
and
mov
inc
fwait
xchg
sub
sbb
add
test
sub
or
dec
test
stos
popa
pop
sbbl
stos
add
outsl
movsb
jmp
in
les
xlat
rorb
stos
mov
lret
adc
pop
ss
jae
and
mov
fiadds
xor
xor
leave
jmp
cmpsb
mov
push
jo
adc
xor
xlat
mov
rcrl
fyl2x
lods
aaa
test
cwtl
out
rclb
shrl
lods
nop
and
mov
dec
loopne
pop
sub
lods
call
sub
loop
jno
jo
lret
or
mov
stc
cli
roll
popf
cmp
mov
pop
mov
push
jns
pusha
cmpsb
lods
rcll
stc
xor
das
cld
dec
mov
push
clc
pop
inc
pop
loopne
subl
inc
mov
movsb
enter
stos
shrb
lods
mov
mov
rcrl
data16
cmp
nop
add
popa
movsl
test
xchg
mov
fs
and
lcall
push
adc
pushf
sbb
fwait
mov
lods
loopne
adc
mov
jge
cld
dec
aaa
dec
mov
mov
xchg
inc
mov
add
push
jmp
push
dec
test
push
adc
popa
test
sbb
adc
subl
inc
adc
into
fmuls
push
test
pop
xchg
mov
adc
mov
mov
push
in
andl
cmpb
lret
test
mov
imul
data16
and
adc
xchg
insb
dec
and
push
loopne
cmc
inc
ljmp
push
sub
push
ret
insl
aad
in
push
outsl
sub
pop
adc
sbb
test
pop
push
dec
jmp
shlb
lret
jo
and
adc
lcall
mov
mov
mov
mov
das
or
mov
test
cmp
sub
inc
loop
cmp
pop
pop
jmp
sub
cmp
mov
mov
cmp
call
mov
rcl
stos
scas
xor
movsb
stos
xchg
jge
js
inc
lret
imul
dec
pop
dec
mov
sbb
test
ficompl
push
inc
or
les
mov
aaa
sbb
xchg
popa
xor
js
imul
popa
shll
sbb
mov
lret
inc
sbbl
lret
stos
lods
lahf
cmp
imul
mov
imulb
dec
sub
mov
shrl
push
cmp
inc
adc
cmp
mov
dec
aaa
addb
xlat
movsl
sub
fdivl
mov
cmp
arpl
leave
daa
adc
loop
mov
mov
mov
jbe
xchg
jno
pusha
pcmpgtb
stos
xchg
sbb
lods
adc
test
ja
daa
pusha
inc
mov
into
leave
data16
add
in
mov
test
out
cltd
and
adc
lcall
imul
push
clc
or
mov
and
adc
adc
imull
and
dec
lret
jo
out
fbld
xor
in
clc
xor
shl
or
and
shl
lods
push
add
stos
cmp
push
and
ljmp
inc
pop
shll
int
aaa
xlat
xlat
and
dec
cmpsb
pop
test
and
stos
add
mov
iret
jae
ficompl
inc
xchg
and
lcall
daa
jns
shl
out
sub
push
dec
cs
jp
mov
movsl
mull
jns
lret
mov
test
fstpt
and
rorl
lds
pusha
jb
dec
ret
call
cmp
jns
adc
arpl
mov
popf
jecxz
mov
ljmp
mov
lcall
fdivr
push
loope
imul
pop
in
push
cmpsl
lahf
test
leave
data16
push
testl
mov
xor
lods
jmp
jg
loope
and
stos
ja,pt
aam
cmp
gs
aas
sahf
lret
dec
sbb
cmpsb
adc
movsl
cltd
mov
cmp
cmp
stc
and
lds
stc
das
adc
dec
and
in
cmp
sarl
or
dec
push
test
ljmp
push
or
outsl
sub
xor
outsb
adc
cmpsb
mov
mov
imul
inc
mov
leave
inc
or
jnp
mov
jnp
add
mov
lock
pop
dec
and
std
popa
ficomps
pop
jmp
mov
lods
stos
int
pop
int
idivl
mov
imul
imul
cmp
loop
out
ja
jecxz
sbb
inc
mov
inc
xlat
mov
cmp
fwait
pop
and
sbb
addb
call
adc
push
scas
gs
js
je
pushf
mov
add
hlt
mov
loop
dec
jno
sbb
in
sub
int3
dec
cld
xor
bound
daa
xor
cmp
sub
test
push
xchg
sub
mov
imul
aaa
mov
mov
mov
push
into
lds
cmp
out
jbe
cld
inc
test
jg
dec
or
icebp
into
loopne
ror
push
mov
pop
fcomp
aaa
stc
out
jg
fidivl
out
mov
and
pusha
mov
adcb
mulb
in
xor
sbb
or
imul
and
in
cmpsl
mov
push
mov
or
test
inc
fmull
scas
ja
add
inc
test
test
xor
insb
add
mov
or
dec
push
lock
ds
xor
bound
popf
mov
aas
mov
shl
jae
and
loop
loop
fisubrs
pushf
in
dec
mov
lds
les
push
leave
ja
into
out
cmp
test
cmp
pop
mov
dec
add
inc
cli
inc
push
into
loope
sbb
mov
cs
stos
mov
test
push
and
mov
imul
lcall
adc
jmp
insl
stos
pop
inc
mov
mov
aas
pop
sub
lock
movsl
ret
imul
mov
std
lds
mov
mov
lahf
mov
and
mov
cwtl
sub
add
mov
sbb
fdivrl
mov
iret
out
ja
jmp
xor
mov
sub
dec
out
loopne
xchg
xor
pop
stos
mov
pop
popf
inc
pop
and
mov
or
mov
pop
lcall
dec
jmp
xchg
mov
les
loopne
lret
or
push
xchg
dec
pop
ret
in
push
scas
fidivs
aaa
les
ljmpw
inc
mov
mov
xchg
in
mov
push
test
mov
fdivrs
call
mov
stos
pop
das
imul
inc
out
stc
ret
stc
hlt
adc
jmp
push
sub
mov
fwait
ja
mov
sub
xor
lods
inc
cmp
add
mov
add
xchg
sbb
into
mov
imul
jge
stc
xor
lcall
inc
jmp
adc
ds
cmpsb
into
stos
xchg
or
cli
notl
inc
test
arpl
repnz
jmp
aam
fcomps
mov
in
inc
lret
push
dec
outsb
jecxz
cld
cmp
sbb
pop
into
lods
xchg
push
aaa
pop
repnz
jmp
das
ljmp
push
aam
jg
inc
pop
daa
inc
mov
mov
pop
ja
outsb
out
nop
sbb
inc
cmp
mov
push
data16
inc
mov
mov
jl
cmpxchg
aas
inc
push
andl
mov
sub
or
or
lea
lahf
aad
xchg
ja
icebp
pop
xchg
mov
jne
mov
stos
dec
adcb
sub
popa
jae
ja
into
in
pop
mov
lods
sub
mov
fdivrl
mov
mov
aas
add
imul
xlat
jb
xchg
dec
and
and
mov
lret
aam
push
jno
dec
mov
cwtl
in
mov
dec
mov
ss
cmpsl
jmp
jno
inc
dec
filds
sub
andb
aaa
and
cld
in
dec
imul
mov
push
dec
xchg
cmc
lods
imul
and
xor
adc
mov
jg
mov
jno
jl
mov
sub
jnp
mov
shrb
and
rsm
xchg
inc
mov
mov
icebp
jmp
jmp
dec
lahf
pop
inc
addl
mov
pop
mov
inc
imulb
add
not
loop
xor
xchg
sbb
sbb
divb
mov
mov
jae
jae
pop
xor
inc
sub
popl
inc
add
stc
adc
jecxz
lret
arpl
jmp
jmp
aam
cld
dec
sub
mov
decb
add
push
xor
jmp
in
divl
cli
sbb
and
daa
jg
bound
jne
xchg
inc
xchg
xor
dec
jae
or
sbb
mov
leave
mov
adc
pushf
cmp
pop
dec
mov
imul
arpl
jns
dec
mov
sub
xchg
lcall
dec
jmp
rorb
cmp
nop
dec
xchg
and
scas
mov
adc
or
aas
add
aaa
fdiv
xchg
mov
mov
inc
or
and
inc
mov
and
gs
jne
pop
das
dec
and
and
pop
lcall
test
lds
sub
xor
sub
mov
sub
mov
pop
and
and
and
inc
inc
aad
loope
test
fldenv
push
faddl
ror
loop
cmp
xor
jl
arpl
cli
inc
jmp
scas
jl
pop
sbb
push
test
fstpl
movsl
mov
lcall
adc
cmp
lods
jno
mov
adc
push
jae
xor
pop
cmpsb
or
push
jb
fidivrs
inc
mov
mov
or
xchg
inc
stc
xchg
mov
fsts
stc
cmp
mov
stc
imul
pop
sbb
sbb
mov
sub
mov
insl
mov
push
dec
pop
dec
mov
or
pop
lret
shll
imul
mov
cmp
scas
pop
call
in
fcom
dec
mov
call
cmp
mov
inc
arpl
mov
std
cmp
repnz
mov
cltd
xchg
pop
les
outsb
into
jle
insl
xchg
cli
jmp
les
popa
cmp
xor
jl
dec
xor
add
xor
enter
cmp
sub
enter
sub
mov
dec
hlt
inc
lcall
aaa
es
lret
in
aaa
andl
aas
insl
arpl
jmp
xor
xor
add
movsl
pop
xchg
mov
xchg
or
enter
das
xchg
rorb
cmpb
cltd
or
jns
mov
bound
mov
in
popa
jg
jb
jne
pop
and
and
notl
push
test
dec
lods
mov
inc
in
loopne
xchg
stos
pop
lock
mov
xor
das
inc
jae
outsl
and
insl
mov
mov
dec
lock
sarl
test
pop
xor
mov
or
insb
mov
mov
int3
sahf
dec
scas
addr16
lahf
mov
insl
adc
add
push
mov
xchg
ss
cmpsl
imul
arpl
add
or
jmp
pop
nop
mov
sbb
inc
xchg
xchg
add
fwait
jb
cs
sti
into
add
pop
cwtl
sbb
stc
pop
sbb
inc
fmulp
pop
sbb
adc
and
sbb
lcall
sbb
jge
or
jmp
dec
sub
push
mov
mov
sub
bound
jmp
mov
push
inc
into
push
cwtl
rorl
cmp
pop
test
fidivrs
inc
inc
loope
sbb
mov
enter
and
sahf
out
movsl
pop
adc
mov
adc
mov
shlb
cmp
leave
push
stos
dec
enter
faddl
into
adcl
mov
jne
mov
leave
mov
movsl
sbb
mov
inc
push
mov
xchg
leave
cmp
aas
jmp
adc
dec
mov
loopne
cs
lods
lcall
aas
inc
scas
lock
lock
jmp
je
cmp
mov
ss
jle
dec
mov
add
notl
xchg
dec
adc
sub
cmpsl
xchg
movsb
mov
and
dec
mov
xchg
xor
dec
gs
lods
push
ljmp
dec
imul
xor
je
loopne
inc
dec
aam
out
mov
jmp
push
rolb
cmp
and
jp
and
push
jg
and
mov
jno
pop
aad
inc
sbb
ret
mov
xchg
imul
addr16
or
fs
lock
jmp
stos
insb
inc
outsl
inc
jo
mov
arpl
jns
cmp
mov
sahf
pop
cmp
mov
clc
shlb
xor
jnp
sbb
add
xor
sbb
add
inc
loopne
lock
test
inc
jbe
lret
cmpsl
mov
and
out
jnp
stos
ror
fildll
rcr
jg
mov
loope
mov
xor
push
mov
in
dec
test
je
jae
orb
inc
stc
sub
adc
sub
dec
std
mov
cmp
lock
in
scas
mov
adc
cmpsb
xchg
stos
es
dec
icebp
je
push
shrl
lahf
lods
test
inc
dec
push
je
mov
mov
fs
jle
lds
arpl
in
idivb
in
and
pop
xchg
test
stos
lds
and
jp
xchg
mov
dec
mov
mov
sub
movsl
adc
add
jnp
and
mov
cld
xor
bts
test
cmpsb
xchg
xchg
jno
fadds
and
push
cmp
pop
mov
push
aas
cmp
inc
push
lret
push
fld
call
imul
jnp
iret
inc
data16
pop
rorb
cwtl
mov
mov
arpl
sub
mov
out
mull
popa
out
fisubrl
and
cwtl
xor
stos
test
jbe
sub
in
je
popf
mov
mov
notl
loope
pop
sbb
jb
bound
clc
loope
data16
arpl
push
aas
push
fbstp
mov
xor
fst
xchg
add
call
les
mov
xor
push
sbb
mov
sbb
mov
test
cmp
jecxz
add
mov
mov
jecxz
ret
jne
mov
push
inc
sbbl
xchg
adc
outsl
pop
stos
gs
icebp
jle
dec
adc
movsl
xlat
push
je
xorl
mov
into
cmpsl
pushf
testb
ret
fwait
ret
lret
inc
ja
xor
pop
jbe
ja
js
dec
test
call
sub
pop
iret
mov
adc
pushf
pushf
scas
lahf
xchg
imul
add
ret
imul
jno
loopne
and
adc
cmpsb
pop
push
xor
jmp
mov
popf
sub
test
lret
cmp
inc
rolb
cli
mov
or
std
pop
std
adc
cmpsl
mov
mov
jmp
adcl
and
mov
and
adc
jmp
mov
jmp
lret
mov
popa
lods
mov
mov
cmp
out
icebp
cmpsb
pop
lcall
dec
dec
icebp
testl
mov
inc
or
cs
cli
add
jne
scas
mov
pop
fiaddl
push
sbb
lahf
or
gs
repz
push
xchg
mov
int
std
arpl
sbb
jge
in
jb
push
xorl
mov
jmp
jne
mov
xchg
push
mov
xchg
ss
mov
dec
jp
mov
sub
inc
dec
fwait
jmp
cmp
mull
pop
xchg
out
mov
outsl
ret
add
fdivs
ret
dec
sbb
out
jge
cmp
adc
mov
xchg
jae
mov
arpl
pop
fdiv
loop
dec
mov
int3
xchg
test
inc
mov
or
xchg
mov
stos
orb
movsb
ret
outsl
fisubs
xchg
sbb
push
into
stos
push
rorl
lock
lods
inc
and
mov
sub
imul
dec
ror
adc
test
imul
dec
imul
jb
outsb
into
cmp
xor
mov
loopne
lret
xorb
hlt
icebp
adc
mov
mov
scas
in
mov
xor
and
sub
jns
mov
test
add
fwait
sub
fmuls
ss
insl
subb
pusha
or
mov
lds
cli
fs
loop
xchg
in
call
adc
jb
lods
xor
ficompl
jmp
pop
inc
test
mov
jmp
fcoml
cmpsb
in
loop
test
into
std
pop
push
jge
ss
nop
cld
or
inc
push
jl
jns
insl
push
dec
lock
mov
sbb
cmpsb
outsl
lcall
cmp
mov
sbb
inc
imul
or
repnz
cmpb
cmp
lock
dec
movsl
ja
jl
mov
das
aam
lea
popf
cmc
cmp
loop
aam
adcl
out
jl
outsl
nop
xor
sbb
nop
enter
outsl
test
mov
pushf
call
icebp
stos
aas
mov
mov
sub
pop
jp
sbb
sub
iret
outsb
xchg
add
adc
and
mov
mov
pop
adc
add
imul
inc
mov
jns
stos
inc
mov
cltd
sub
mov
stos
pop
push
movswl
lahf
push
loop
iret
adc
mov
cmpsb
icebp
xor
int
push
popa
xchg
push
dec
dec
dec
and
test
mov
inc
lret
loope
loop
jo
mov
pop
lret
sub
mul
ss
call
push
movsl
scas
roll
cmpb
xor
mov
xchg
jns
fnstcw
jmp
sahf
mov
ret
lahf
decl
lret
les
mov
loope
shrl
cmp
int3
sub
sbb
jle
inc
rclb
arpl
mov
ja
and
fistps
shlb
adcb
adc
sbb
jle
sub
mov
cwtl
sahf
repz
ja
mov
mov
xor
loopne
jno
cmp
push
inc
cmpsl
xor
cltd
mov
cmp
rclb
mov
mov
fistl
ja
jge
cmp
fldenv
sbbb
mov
inc
cmp
adc
cmpsl
inc
sbb
scas
dec
pop
jmp
lods
and
jo
mov
sbb
ficoms
insb
cmp
add
arpl
push
ror
cmp
jle
jmp
loop
scas
nop
dec
mov
popf
icebp
fwait
lds
fwait
xor
std
xchg
mov
mov
lods
shll
mov
and
cmpsb
and
mov
fildll
xchg
lods
jmp
imull
cmp
mov
sti
fstpl
clc
adc
mov
icebp
pop
mov
call
cmp
jg
cwtl
xor
cli
pop
or
roll
mov
cmp
rcrb
addr16
ds
es
into
jg
mov
push
push
mov
roll
lret
and
cmp
loope
popa
push
mov
outsl
xor
addb
push
and
int
push
test
mov
leave
pusha
mov
pop
mov
test
in
or
jns
push
push
inc
adc
cmpsl
mov
adc
add
imul
popf
iret
clc
enter
push
clc
fadds
pushf
pusha
inc
sub
push
pop
dec
ss
popf
in
push
inc
inc
mov
adc
adc
cmpsl
sub
jns
popf
out
and
xor
mov
mov
inc
inc
jle
sbb
mov
mov
mov
adc
and
mov
xor
push
jnp
popa
pop
fs
dec
out
mov
xor
lret
idivb
outsl
mov
xor
fbstp
push
pop
sti
add
scas
jge
xchg
mov
sub
test
and
inc
std
mov
and
mov
or
pop
mov
add
test
push
mov
mov
testl
pop
imul
out
xchg
aas
sbb
test
dec
in
stc
mov
jmp
sbbl
fists
sub
dec
and
fisubl
cmp
mov
and
cld
mov
mov
out
cmp
mov
lcall
add
pop
loop
push
aam
bound
push
cmp
push
cmpl
mov
dec
nop
and
mov
jl
into
call
dec
insl
mov
les
jle
lea
gs
cmp
push
jo
push
cltd
mov
sbb
jecxz
ja
push
into
lret
ss
sub
pop
fisubl
movsl
dec
test
ljmp
decl
aas
push
pop
jnp
dec
mov
int
movsb
push
popf
adc
push
xor
mov
call
call
jmp
push
inc
imul
cs
inc
xchg
or
mov
subl
int3
shlb
lods
jnp
lock
mov
adc
jmp
or
cmpsb
cmp
add
dec
add
add
fnsave
daa
sbb
in
ss
mov
repnz
popa
stos
and
in
faddp
mov
insl
call
aam
sbb
inc
sbb
enter
sub
sbb
in
ljmp
arpl
jle
or
and
push
popa
mov
mov
xor
fmull
cmp
insb
add
adc
mov
mov
pop
negl
stos
inc
mov
movsl
inc
pop
mov
mov
mov
pop
jmp
stos
push
in
mov
add
sti
xchg
sarb
inc
fisubrs
push
push
adc
and
or
mov
insl
stos
movsl
out
icebp
push
rol
test
subb
lock
jae
cmp
lcall
stos
getsec
pop
pop
test
test
inc
cmpsb
jmp
stc
xchg
mov
aam
scas
dec
test
pop
fmulp
cmp
push
mov
popa
in
mov
or
insl
imul
pop
mov
xchg
mov
jns
jecxz
push
imul
adc
jne
stc
sub
xor
mov
and
stos
jge
mov
movsb
inc
xchg
jmp
data16
pop
mov
sbb
jg
cwtl
and
sub
lea
loope
mov
rcl
inc
push
dec
xchg
xchg
pop
cmp
data16
popa
add
insl
sbbb
dec
mov
mov
cwtl
cmp
sbb
mov
pop
idivl
push
aas
aam
mov
pop
int
mov
mov
mov
daa
and
or
xor
and
std
pop
xchg
fwait
inc
je
cli
sbb
or
mov
inc
jmp
ficompl
cmp
movsb
movsb
mov
lods
sbb
xchg
push
mov
jge
mov
shll
lcall
mov
jmp
cmp
ja
pop
xlat
pop
repz
outsb
fbld
gs
sub
xor
xor
pushf
push
jns
pop
cmp
mov
int
sub
subb
or
imul
push
adc
addl
clc
mov
cmp
cwtl
ljmp
stc
jbe
shrl
lcall
icebp
loope
mov
xchg
pop
ja
inc
in
ret
jg
push
stc
push
test
cmp
scas
loope
mov
ret
sbb
clc
jnp
mov
dec
sub
popa
and
outsl
sbb
sub
sbb
shrb
inc
cmc
xor
mov
enter
std
daa
vsubss
cwtl
jmp
inc
les
scas
push
and
push
shll
repnz
cli
movsb
sub
dec
pop
inc
ret
cmp
mov
jnp
mov
push
mov
aaa
int3
gs
and
mov
clc
shrl
lock
subb
clc
cmp
sub
cmp
popa
les
jae
sbb
dec
lods
jge
adc
inc
jno
jl
fwait
adc
mov
dec
test
sar
jp
cli
pop
mov
daa
ret
test
arpl
repnz
jae
mov
int3
inc
mov
lods
xor
sub
mov
jg
cmp
ja
xor
and
jge
inc
stc
jmp
ficoms
dec
test
adc
mov
mulb
lods
mov
or
add
mov
push
insl
call
lret
pop
rcrb
xor
mov
fsubrs
jnp
movsl
stos
sbb
push
nop
test
movsb
dec
adc
adc
mov
push
mov
lds
push
mov
mov
mov
add
rcr
cli
call
into
les
nop
jmp
push
dec
mov
icebp
mov
test
daa
xor
add
cmc
pop
fcmove
imulb
loop
xchg
add
enter
add
into
enter
xchg
shlb
xchg
jno
inc
cmp
scas
mov
test
outsb
push
loope
scas
pop
dec
fisubs
pop
mov
xor
ss
dec
jmp
aas
jge
cmpsl
mov
jmp
dec
mov
jmp
xor
xor
sbb
mov
mov
mov
mov
cmp
push
fwait
xor
mov
xor
jmp
lcall
lea
inc
lock
jo
popa
and
mov
jg
xchg
push
int
jl
mov
adc
jmp
mov
dec
loop
scas
out
clc
mov
pop
call
addb
test
sbb
add
jno
insl
es
hlt
movzbl
mov
test
cmp
mov
pop
lahf
divb
cmp
jb
pop
mov
lods
fwait
ror
ja
inc
jne
jecxz
add
cmp
add
cmp
xchg
loop
adc
lea
xchg
mov
push
adc
or
cmpsb
sub
jg
xchg
hlt
jmp
movsb
addr16
or
jmpw
add
int
sub
cmpl
cmc
imul
push
rcrb
jns
cmp
mov
test
or
fiadds
or
mov
push
jle
mov
js
lahf
cmp
loopne
lcall
leave
addb
xchg
push
fcoml
stos
ret
xchg
adc
mov
xor
jb
xor
and
add
xor
add
mull
xor
push
pop
pop
cmp
sbb
dec
rcr
sub
in
daa
stc
inc
push
cwtl
pop
ljmp
xchg
push
inc
fincstp
sub
and
ljmp
mov
cmp
fimuls
das
or
push
add
fldt
cwtl
cld
lods
iret
mov
push
addl
jne
or
rcrl
xor
mov
xor
push
aam
movsb
jae
push
pop
nop
lds
cld
mov
mov
test
mov
inc
adc
aam
sbb
nop
jno
arpl
sub
in
adc
xor
test
xchg
jmp
xchg
cmp
sti
mov
dec
push
aaa
lock
xchg
xchg
ret
push
loope
lea
pop
loopne
into
xchg
pushf
mov
xlat
push
and
loop
push
test
mov
fdivp
in
push
sbb
pop
cmpsl
pop
dec
mov
in
inc
test
dec
xor
call
and
cld
hlt
mov
lods
leave
mov
sub
mov
mov
xor
jle
sbb
adc
jno
mov
adc
dec
aam
mov
or
inc
pop
lock
popf
mov
sub
inc
and
cmpsl
ljmp
ss
aas
lret
pop
sbb
arpl
cmpsb
mov
mov
sbb
aas
inc
stos
mov
dec
mov
or
sub
pop
gs
xor
mov
scas
outsl
leave
inc
filds
lret
div
or
aas
test
cmp
jg
test
mov
jl
mov
lods
jno
xchg
sbb
lea
imul
iret
gs
dec
dec
imul
shrb
cli
xchg
outsl
sub
sub
mov
dec
jmp
jno
push
push
lret
pop
push
lret
imul
shrb
inc
idiv
ja
clc
int3
call
push
jnp
aaa
adc
push
add
pop
dec
aas
sarb
mov
jl
stos
jae
mov
mov
fcomp
or
mov
inc
cmpsl
and
fisttpl
enter
jge
xor
lods
iret
sub
mov
jnp
cmc
jo
add
mov
xchg
cli
cmp
mov
repnz
mov
fs
decb
mov
popf
lcall
mov
cwtl
addb
pop
ret
mov
shrb
lea
leave
pushf
dec
inc
mov
xor
mov
mov
iret
test
call
scas
ss
mov
pop
cmp
mov
shrl
cmp
cmp
std
cmpsl
fs
cmp
fisubs
aam
pop
loope
and
movsl
test
jmp
xor
sub
mov
mov
divl
pushf
adc
into
sbb
mov
mov
or
gs
adc
scas
and
cmp
lods
dec
sbb
sahf
dec
mov
push
sub
jnp
fwait
mov
and
stos
fnstenv
call
outsb
sub
cmp
sub
sbb
xor
imul
loopne
cmc
addr16
adc
add
pop
mov
bound
cmpsl
pop
mov
in
call
push
cmp
push
pop
push
popf
cmc
mov
inc
imul
test
pop
cmp
ss
and
pop
les
jecxz
insl
movb
sub
cmpsl
push
jo
int3
jecxz
add
les
mov
jmp
push
mov
jne
leave
in
in
in
pop
leave
cmp
mov
pop
mov
inc
mov
nop
cmc
mov
cmpsl
sbb
and
in
inc
jae
inc
fdivrs
and
sarl
insl
jg
mov
cwtl
pop
shrl
pop
pop
inc
jg
jno
or
test
jmp
fistps
shll
dec
lods
pop
cmp
lret
pop
repnz
or
out
lcall
mov
icebp
outsl
mov
sub
into
xchg
xor
fwait
mov
jg
add
xchg
inc
inc
dec
popa
popa
adc
cmp
rclb
fidivrs
fmull
aad
cwtl
mov
int
sbb
add
ficoms
xor
pushf
fisttps
pop
add
sti
jbe
mov
ds
jmp
cwtl
in
int3
sahf
sti
sub
xchg
inc
cmp
imul
fs
subb
sbb
sti
orl
mov
jbe
int3
fnstenvs
popa
test
cld
lret
test
fwait
and
mov
rclb
dec
mov
movsl
aaa
jmp
add
pop
lods
inc
pop
cmova
test
mov
push
int3
loopne
sbb
mov
adc
add
pop
lret
pop
inc
enter
ret
or
popa
mov
pop
cmpsb
test
cmp
push
or
dec
jmp
daa
jl
subb
gs
jl
mov
mov
addl
jl
xor
or
xchg
mov
ja
dec
pop
push
loope
pop
mov
sbb
bound
push
inc
mov
loop
and
inc
adc
push
jae
lahf
cmpsl
scas
jmp
jg
mov
int3
inc
mov
inc
pop
dec
mov
push
push
xchg
aam
js
push
ja
lret
leave
outsb
xchg
xor
fs
stos
cmp
xchg
imul
sbb
jmp
adc
bound
mov
andb
fucomip
cs
pop
and
in
lds
push
xchg
xrelease
push
cmp
adc
or
xchg
cs
cltd
add
mov
push
cwtl
inc
enter
test
dec
sub
xchg
dec
sub
cld
clc
jne
pushf
stos
lock
mov
add
mov
push
rolb
mov
in
dec
mov
add
lds
add
cmpsb
mov
xor
mov
pop
rorb
int3
shlb
sbb
cs
fwait
and
cld
pushf
scas
jnp
int3
ret
cmp
inc
jle
int3
jmp
xor
xchg
imul
mov
sbb
jg
mov
jne
sbb
aaa
popa
stc
sbbl
push
xchg
sub
divb
sar
cmc
xchg
sub
mov
movsl
pushf
fisubrs
push
movsb
pusha
fisttpll
lcall
adc
inc
mov
ja
fstl
arpl
in
pushf
or
inc
shrb
ret
xlat
sub
mov
rcrl
push
push
jge
mov
enter
fwait
mov
mov
xor
lock
call
not
push
js
and
fwait
pop
sub
dec
outsb
mov
mov
xchg
nop
mulb
repz
add
and
cwtl
jno
add
outsl
cmpl
inc
aaa
icebp
fcmovb
repnz
mov
xor
mov
cmp
xchg
jns
cmpsl
shlb
push
fnstsw
test
mov
insb
fisubs
xor
mov
mov
outsb
xlat
mov
pushf
cmp
push
pop
jbe
scas
inc
sub
jo
mov
popa
sub
repz
adc
iret
test
fmull
xchg
xor
and
fstpl
hlt
push
sub
adc
and
insl
faddl
fstpl
pop
aam
xchg
add
mov
xchg
mov
jge
mov
fsave
imul
arpl
dec
xor
add
pop
mov
and
sbb
jbe
sbb
in
push
imul
add
jp
cs
outsl
enter
cltd
dec
push
jp
in
mov
in
js
mov
mov
add
xor
dec
cmp
nop
aaa
leave
xlat
sbb
pop
pop
dec
jne
imul
test
js
fimuls
push
lods
mov
cli
pop
faddl
fidivl
pop
xlat
dec
xchg
mov
adcl
in
fdivs
mov
jno
dec
sbb
jp
loope
cli
das
sub
test
cmp
mov
dec
xchg
test
lret
es
pushf
adc
or
shlb
ljmp
push
sahf
sub
stos
mov
jmp
lods
mov
and
lahf
mov
cmpl
pcmpgtw
iret
fistpl
lock
sbb
push
sub
dec
add
push
and
roll
xlat
bound
pop
fst
inc
loop
outsb
cmp
je
pop
jle
mov
xor
mov
icebp
dec
inc
fistl
pushf
adc
inc
in
bound
les
int
xchg
or
shll
sti
jmp
jae
add
mov
and
aam
fiadds
inc
push
aas
xor
mov
divb
pop
into
stos
xchg
jmp
dec
pop
daa
in
arpl
fsubs
jb
outsl
rcrl
add
jge
test
xchg
xor
pop
inc
fiadds
jbe
out
mov
pop
pop
xor
orb
aam
mov
mov
push
test
lock
xchg
pushf
xchg
cmpb
jnp
out
notl
popa
adc
sarl
xchg
sbb
popf
cmpsl
gs
mov
negb
lock
inc
orb
out
cmp
lods
outsb
sbb
les
sub
xchg
and
jmp
jg
xor
mov
jb
mov
in
lock
inc
inc
push
pop
and
call
and
cmc
add
inc
cmpsb
jg
adc
inc
scas
mov
repnz
inc
mov
mov
adc
ja
fsubl
popf
dec
lahf
popa
xchg
fsubrs
dec
mov
orl
mov
mov
and
mov
jl
pop
cmp
cmpsb
and
arpl
xchg
xchg
pop
fsubrp
push
jae
mov
mov
mov
jge
cmp
ljmp
enter
test
xchg
and
mov
adc
repnz
dec
lods
push
xor
jg
adcb
jmp
subl
cmp
push
sbbb
dec
jns
icebp
dec
into
sub
push
or
xor
stc
jmp
ret
and
mov
sub
and
das
or
xor
cmp
cmc
inc
or
mov
cmpsb
rcrb
gs
outsb
mov
div
add
mov
pop
lcall
pop
call
xchg
cmp
inc
scas
loope
leave
test
std
mov
loope
mull
mov
insl
jp
mov
das
dec
and
aas
inc
inc
mov
test
sbb
mov
cs
ja
imul
mov
cmp
loopne
xor
shlb
cmp
sub
je
or
cmpsl
ret
sub
push
imull
test
ret
jl
stc
inc
and
ret
sti
nop
sub
cmp
pop
push
fsts
fwait
jns
adc
cmpsl
addb
adc
loope
cld
jno
aam
popa
xorl
cmp
push
rcrb
into
pushf
test
stc
int
xor
iret
push
xor
mov
push
popa
stos
test
cmp
sbb
cmc
shl
je
xor
arpl
cmp
jmp
pop
mul
cld
cld
jne
inc
pop
ja
mov
pop
jmp
shrb
mov
lcall
push
dec
xor
loope
mov
aad
mov
shlb
mov
add
dec
cmp
mov
mov
and
or
arpl
push
adc
and
or
inc
sub
xor
add
fisubs
mov
mov
test
mov
fimull
or
lods
shrl
dec
dec
inc
mov
mov
pop
sbb
ljmp
cmp
jnp
add
mov
insl
out
sahf
adc
and
test
mov
mov
ljmp
hlt
aaa
and
test
push
inc
outsb
pop
pop
les
jg
adc
xchg
mov
adc
stos
dec
fcmovu
cli
xchg
rcrl
push
jecxz
outsb
bound
mov
cmpsl
jns
or
leave
stos
push
loopne
jge
or
sub
dec
imul
pusha
dec
and
mov
adcb
stc
push
insl
sub
pop
outsl
and
lds
xchg
pusha
add
fidivrs
pop
or
ficoml
stos
adc
aad
mov
lods
and
cmp
aad
mov
into
inc
push
sbb
in
xchg
lcall
adc
mov
inc
into
mov
or
jns
mov
cmp
inc
xchg
push
aam
lds
and
xor
xchg
mov
ret
call
jns,pt
adc
out
popf
push
mov
loope
daa
dec
adc
dec
cmp
pop
pop
popa
add
inc
cmp
stc
imull
sub
cli
sub
imul
mov
adc
aam
popa
fisttpll
dec
nop
push
lods
mov
dec
xchg
repnz
jns
jmp
cmp
fnstsw
cwtl
movb
pop
mov
clc
fidivrs
int
icebp
inc
xchg
jns
jb
cmp
dec
loop
test
and
lock
inc
sbb
sahf
mov
mov
inc
push
aam
ljmp
jae
jp
dec
outsb
sub
and
inc
les
shrb
into
sbbl
xor
loop
fsin
sbb
addr16
out
rolb
inc
outsl
jo
and
push
jle
or
inc
mov
pop
int
cmp
adc
dec
adc
or
mov
push
xchg
in
sub
fucom
fwait
and
idivb
hlt
mov
enter
dec
xor
push
sub
mov
mov
test
out
fwait
loopne
cmpsl
das
mov
inc
jns
dec
inc
push
push
dec
cwtl
push
nop
inc
in
sub
jmp
jo
stos
rcr
outsb
jne
clc
ljmp
leave
rcl
shrl
mov
pop
adc
lahf
stos
sbb
pop
iret
stos
sub
add
dec
sbb
adc
and
loop
xchg
js
rcrl
cmp
mov
mov
xchg
add
test
mov
dec
lods
xor
ljmp
pop
jg
inc
adc
cmpsl
xor
mov
pop
popl
lret
add
push
negl
fcompl
data16
cltd
ljmp
or
cmp
fsts
cmp
popf
es
pextrw
pushf
dec
xchg
pop
rcll
in
mov
loop
xchg
add
xchg
mov
leave
pop
test
ret
pop
mov
inc
push
movb
inc
popa
xchg
push
mov
mov
mov
lcall
mov
add
push
stos
rorb
inc
push
in
xchg
add
subb
out
in
and
push
mov
adc
mov
jno
addb
sbb
jne
mov
fwait
dec
inc
pop
daa
mov
mov
imull
addr16
cmp
test
test
xchg
cmpsl
xchg
jae
pop
dec
fsts
iret
push
aas
xchg
enter
mov
je
leave
stos
inc
or
lcall
aam
or
fwait
popa
or
sbb
cwtl
mov
loopew
sub
jecxz
sbb
loope
stos
adcb
arpl
and
mov
pushl
mov
call
jge
xchg
xor
jbe
jmp
inc
and
stos
cmpsl
popf
les
iret
adc
mov
xor
in
and
push
sub
adc
je
and
xor
cmp
sub
cmpb
push
jg
loopne
pop
mov
loope
bnd
loopne
sub
adc
fwait
push
jmp
mov
fsubrs
aaa
aam
loop
sub
mov
pop
mov
shll
dec
mov
jp
inc
fbld
sbb
sub
cmpsl
mov
out
gs
repnz
mov
push
sbbl
mov
cmp
pop
enter
lea
incl
mov
movsl
and
popf
js
pop
jmp
les
les
scas
add
xchg
mov
cwtl
aad
sti
ds
sti
mov
pop
arpl
mov
fbstp
xchg
push
outsl
sbb
cmp
xlat
iret
loope
into
adc
dec
aam
cmp
cs
mov
rclb
and
ja
into
mov
inc
xchg
dec
ret
jp
inc
pusha
inc
inc
pushf
pop
mov
jg
adc
sub
popf
arpl
ljmp
and
sub
les
jmp
aaa
push
iret
adc
mov
gs
sub
pop
pusha
addr16
shlb
cmp
push
rcll
bound
stos
fwait
inc
loop
adc
les
in
jnp
dec
frstor
imul
or
les
and
push
loopne
popf
insb
mov
adc
and
dec
int3
imul
insb
jo
int3
incl
or
xor
mov
and
or
arpl
jmp
push
test
mov
or
loop
lock
dec
mov
movsb
loope
cmp
pop
ja
test
int3
in
fucomi
xor
test
and
add
jmp
fdivs
loopne
sbb
cmp
xor
cmc
or
mov
cmp
jmp
movsl
gs
test
jns
xchg
mov
sub
rorb
ret
dec
cld
mov
mov
pop
test
xchg
xor
fwait
inc
lods
sub
lods
stos
cmpsb
jmp
daa
push
dec
fadds
addb
imul
das
gs
mov
jmp
pop
xchg
out
popa
mov
movsb
loopew
mov
mov
mov
push
out
xchg
mov
mov
mov
shr
nop
popf
xchg
aaa
jns
mov
sub
jne
mov
mov
stos
rclb
bound
xor
repz
fistpl
sbb
xor
div
sbb
lods
lock
in
jnp
and
jo
test
inc
xor
jb
loopne
sarl
push
rorl
inc
push
fdiv
pop
mov
ja
cmpsl
cld
sti
movsl
adcb
xchg
jae
ljmp
movsb
xchg
dec
dec
stos
stos
movsl
fs
and
dec
out
test
xchg
xchg
sub
adc
inc
sbb
pushf
mov
push
in
inc
add
and
inc
adc
pinsrw
push
insl
cmp
pop
and
icebp
xchg
mov
inc
test
scas
fwait
sbb
xchg
xlat
subb
push
sbb
addr16
mov
cwtl
push
xchg
mov
xor
xor
gs
outsl
je
cwtl
arpl
mov
aas
or
pop
not
arpl
jne
or
dec
fstps
in
jns
add
decl
and
int
pop
int
testb
mov
mov
out
jne
lahf
mov
repz
xchg
and
hlt
fisttpl
xchg
call
aad
repz
sarb
jge
jge
push
cmp
fs
cltd
xchg
jne
aaa
push
aaa
aam
jae
ja
dec
out
adcl
jns
sbb
je
adc
add
cmc
and
in
and
cli
mov
lods
pop
and
sarb
jbe
inc
out
fwait
stos
int
add
mov
pop
or
mov
inc
sbb
jmp
adc
sub
jae
and
mov
out
icebp
push
lock
xchg
and
inc
jg
mov
xor
mov
and
mov
xchg
lret
xor
call
mov
xchg
jo
pop
lods
iret
mov
cmp
jae
mov
shr
iret
scas
ret
and
movsb
push
cmc
lods
int3
xor
and
fistps
jp
mov
mov
mov
add
popa
ja
leave
pop
sbb
dec
pushf
out
inc
in
mov
subb
adc
mov
jl
test
nopl
scas
add
flds
or
adc
cmpsb
in
mov
inc
sahf
mov
push
cmp
daa
push
daa
leave
dec
into
out
out
das
outsb
ret
out
ret
arpl
stos
enter
fcoml
adcb
pop
push
test
pop
leave
iret
or
iret
jle
cs
mov
stos
mov
insl
int3
cmp
mov
jno
lret
in
mov
aaa
addb
push
inc
test
add
push
and
lods
call
pushf
mov
stc
ja
aam
outsl
cs
inc
icebp
inc
in
xor
inc
sbb
loop
xor
xor
push
sub
jno
jp
roll
jecxz
mov
mov
pushl
rep
test
movsl
mov
jmp
inc
decb
andb
aaa
test
sbb
movsl
inc
dec
mov
mov
ret
es
out
pop
mov
and
jle
mulb
push
cmp
inc
or
jle
xor
subb
jo
icebp
mov
or
and
icebp
xor
jno
call
imul
orl
mov
out
lods
mov
jl
xor
mov
outsl
clc
pusha
jmp
mov
mov
popf
sbbl
cmpsb
xor
adc
popf
loopne
and
sub
scas
shrb
xchg
push
ficomps
dec
push
enter
sbb
decb
xchg
insl
push
cmpsb
xchg
loope
or
mov
test
into
in
xor
lock
mov
xchg
mov
in
or
cmp
sub
in
out
out
cmp
call
cmpsb
stc
test
test
push
stos
mov
daa
mov
pop
pushf
jmp
mov
sahf
dec
scas
ljmp
jb
push
fnstcw
lock
jmp
sbb
shrb
mov
sarl
popa
cmp
into
push
sub
mov
sbb
mov
and
stos
jne
ret
in
xor
orb
or
cmp
xchg
xor
mov
or
mov
mov
push
movsl
arpl
testl
pop
into
inc
dec
mov
popf
dec
mov
xchg
mov
mov
sbb
dec
sub
inc
and
in
mov
jl
insb
out
cmp
test
pop
xor
mov
jmp
jns
mov
mov
mov
movsb
mov
out
or
xor
call
sbbb
inc
jae
cmc
aam
in
sti
ret
insl
call
pop
jae
add
pop
inc
pop
mov
rcrl
out
adc
jno
mov
pop
sub
popa
mov
push
push
xor
xor
es
stos
pushf
or
inc
inc
lea
mov
sub
int3
test
pop
push
sub
in
mov
ja
cwtl
into
fadd
mov
fisubs
cmp
stos
sub
mov
and
inc
push
cmp
jmp
cmc
mov
sub
cmp
mov
pop
test
sub
andl
les
mov
loop
xchg
cmp
jp
xchg
add
sahf
ret
fnstenv
int
adc
and
xor
mov
imul
fsubrp
jecxz
inc
lds
xchg
bound
loop
mov
shll
imul
xorl
clc
inc
popf
push
inc
dec
xor
cmp
loope
ja
cmp
cmp
popa
cs
stc
aaa
les
mov
xchg
repz
jno
inc
lds
push
xor
push
mov
popf
push
inc
jns
mov
mov
shlb
je
mov
movsb
leave
mov
aad
jmp
cmp
decb
mov
insl
lcall
in
push
cwtl
rcrl
das
or
dec
dec
sbb
lock
andl
and
cmp
xchg
leave
aaa
mov
fcomps
mov
aad
jo
and
pop
and
xor
faddl
mov
xor
std
insl
mov
sub
mov
arpl
mov
repnz
mov
call
shrb
and
xchg
ljmp
outsl
loope
pop
mov
imul
jge
push
cmp
pop
bound
iret
or
jg
outsl
cmp
sbb
mov
pop
lods
lret
xor
inc
stos
ds
loop
jmp
jl
xchg
icebp
aaa
das
pop
xor
fwait
cmp
ljmp
adc
sub
inc
mov
imul
lock
scas
jmp
dec
shll
jmp
cmp
fnstsw
test
push
add
fdivl
add
push
out
adc
cmp
pop
aaa
jb
or
dec
lret
add
into
mov
mov
jno
lea
lock
cmp
pusha
repnz
lods
or
or
and
aam
ss
cmpsl
stos
xor
inc
sbb
fldlg2
and
test
dec
lods
sub
int3
mov
mov
add
or
inc
push
lock
mov
fidivs
xor
cmp
jmp
or
push
mov
dec
ljmp
jmp
mov
out
mov
mov
sti
jo
dec
imul
sub
sub
inc
add
xor
ss
push
fwait
test
mov
sti
faddl
inc
jae
and
pop
sbb
mov
std
and
jmp
shll
aas
inc
icebp
fidivl
mull
mov
inc
ret
movsb
sbb
iret
mov
mov
jmp
jo
mov
rorb
or
sbb
jne
jmp
loope
loop
mov
pop
pop
dec
add
xor
mov
xchg
ficomps
mov
sub
movsl
or
jno
sub
in
arpl
mov
mov
adc
push
mov
outsl
push
or
or
mov
sbb
movsl
rcl
js
fldt
mov
int3
cmp
mov
mov
mov
nop
adc
sbb
cmp
mov
in
push
adc
inc
sbbl
mov
jmp
std
stc
push
sbbb
jnp
dec
xchg
sbb
out
mov
sbb
dec
std
pop
pop
or
sbb
fistps
sarl
jo
dec
inc
mov
xchg
imul
xor
mov
out
repnz
mov
out
or
mov
and
dec
ret
mov
jecxz
call
enter
xchg
stos
rcll
push
and
xchg
sub
ja
mov
test
mov
push
lcall
xlat
dec
xor
arpl
push
and
popa
jge
testl
xchg
sahf
push
mov
inc
push
enter
adc
add
cmpb
xchg
popf
jle
out
mov
hlt
adc
es
cmp
imul
mov
inc
pop
cmp
sub
lock
aam
fsubrl
imul
jge
sahf
xor
mov
outsb
test
subb
lcall
jns
addl
lock
lret
inc
pop
nop
dec
cmp
mov
pop
stos
pop
xlat
and
dec
subb
cmp
gs
dec
popa
or
mov
mov
shlb
inc
loop
adc
xchg
dec
sarb
gs
popa
mov
dec
fdivrl
pop
pop
xchg
test
dec
adc
lea
fnstenv
flds
inc
dec
xor
pop
sub
shl
dec
pop
add
idivb
fdivr
fldenv
addl
xchg
adc
arpl
lahf
outsl
or
fsubs
idiv
fs
das
pusha
imul
outsb
fisttps
adc
daa
inc
rcrb
push
pushf
pop
std
dec
pop
int3
adc
add
mov
xchg
or
sbb
loope
and
mov
pop
mov
lods
lds
js
add
xlat
dec
js
lock
adc
xor
pop
xlat
add
call
pushf
mov
lods
mov
fwait
stos
call
jne
push
adc
cwtl
cmpsl
test
fldt
pusha
movsb
sbb
in
dec
or
stos
gs
mov
rorb
ret
movsb
cmp
mov
or
mov
sbb
cmc
adc
sbb
stos
test
xchg
in
into
and
pop
int
mov
sub
pusha
mov
mov
xchg
mov
adc
mov
imul
stos
sbb
jne
stos
movsl
mov
int3
icebp
loope
or
fs
xchg
mov
mov
imul
nop
ds
push
mov
and
call
imul
jp
ret
add
cli
or
jmp
sbb
cltd
mov
sub
jmp
pop
andl
imulb
cmp
sub
jne
fisttpl
test
inc
lods
and
les
popa
divl
je
mov
mov
loop
xchg
inc
test
addb
imull
jge
pusha
sub
bound
cwtl
jg
jl
fsubs
or
repnz
cli
sub
arpl
aad
push
leave
ja
mov
xor
jmp
xor
out
jg
int
pop
fcom
cmc
xchg
xchg
das
es
adc
adc
jmp
add
xchg
and
mov
js
dec
xor
sarb
adc
clc
push
add
loop
sbb
sub
icebp
xchg
call
sti
inc
add
and
mov
xor
clc
mov
and
rorl
jl
ret
lahf
sbb
andb
mov
pop
mov
cmp
sahf
orb
shrl
and
sbb
cmpsl
xorb
push
mov
or
lods
stos
test
adc
in
imul
inc
sbb
mov
pop
frstor
test
je
mov
lahf
lods
xchg
stos
in
sti
popf
fiadds
pop
mov
not
and
lcall
fucompp
xor
add
aaa
iret
mov
sbbb
fcomps
mov
pop
cwtl
negl
sarb
cmp
out
lock
lds
shll
movsl
inc
mov
mov
sub
stos
dec
or
and
xchg
fldenv
xchg
les
mov
sbb
jmp
iret
das
inc
sbb
pop
int3
roll
repnz
dec
pusha
nop
jmp
mov
xlat
fs
cwtl
rclb
xchg
pop
dec
sti
cld
ret
xor
sbb
stos
fmuls
push
cli
outsl
add
test
inc
mov
xlat
mov
into
divb
dec
daa
push
es
sahf
lods
adcl
mov
jle
fadds
xchg
in
mov
jo
mov
adc
inc
in
aad
mov
aad
pop
sbb
stos
movsb
adc
or
dec
xchg
xor
add
xchg
in
mov
frstor
repz
mov
mov
and
jnp
lods
test
movsb
pop
test
push
cwtl
pop
pop
cmpb
mov
sub
adcb
test
nop
and
or
js
ss
stos
pusha
jle
jns
mov
pop
inc
mov
mov
cmpsb
jmp
pop
popa
stos
mov
pop
jne
inc
fisubrs
lea
js
mov
adc
mov
mov
in
mov
xlat
lret
shlb
inc
mov
call
adc
outsl
lret
insl
mov
or
inc
test
push
int
cmp
add
jmp
movsl
xor
imul
or
add
sub
stos
dec
mov
fadds
xor
inc
movsb
pop
sub
and
cmp
xchg
jne
inc
sbb
in
mov
ss
pop
mov
les
pop
mov
or
sbb
imul
push
testb
pusha
test
shlb
movsb
outsl
fisubrl
wrmsr
mov
mov
mov
sub
sub
sbb
sti
sub
sub
pop
out
aam
addr16
jbe
dec
movsl
cmp
sbb
jns
js
sub
stc
ret
jg
mov
jne
faddl
jmp
push
std
sar
arpl
insl
xor
stos
mull
inc
iret
dec
sbb
push
fwait
sbb
inc
divb
add
movsb
mov
jg
push
mov
incl
push
xor
aas
lods
outsb
cmp
imul
mov
push
pop
popa
cmp
ret
or
mulb
call
and
mov
je
adc
arpl
mov
or
mov
orb
mov
cmp
dec
mov
xor
cmp
mov
jmp
jg
mov
lret
cmpsl
pop
lds
mov
xor
xor
xchg
jnp
mov
rcrl
sbb
les
int3
mov
add
mov
push
icebp
arpl
xchg
pop
js
pop
push
pop
popf
jg
ljmp
pop
ror
sbb
stos
pushf
cmp
sub
stc
pop
test
scas
sbb
aaa
movsl
fists
xchg
jmp
lahf
lds
loop
cmpsl
add
enter
sbb
pop
dec
push
add
scas
and
ja
push
sub
outsb
mov
loope
fadd
pop
aad
mov
leave
jne
scas
mov
xchg
lahf
mov
cmpsb
push
add
aaa
mov
cmp
pop
repz
mov
jns
hlt
scas
adc
or
adc
xor
or
xor
and
push
xchg
pop
movsb
pop
cmp
and
mov
mov
adc
adc
gs
mov
cmp
pop
inc
insb
xchg
arpl
jl
dec
jae
add
ret
jmp
fcmovnb
aad
jns
pop
cmpsl
xchg
test
push
dec
imul
xorl
xchg
popa
ret
cli
test
fldl
filds
ret
xor
adc
test
xchg
cmp
xchg
sbb
mov
lds
or
xchg
add
ja
push
cld
les
sub
lds
jns
fidivs
fistpll
sbb
mov
fstpt
dec
in
cmp
loopne
jmp
jp
or
inc
mov
sbb
xchg
mov
mov
stos
mov
push
xchg
insl
fnstenv
mov
pop
xchg
clc
insl
loope
out
mov
icebp
not
movsb
ficoms
ret
jbe
mov
pop
subb
mov
push
mov
xchg
mov
mov
stc
jmp
movsb
mov
cwtl
pop
pop
sahf
loope
inc
mov
pop
popf
fincstp
inc
jmp
push
fadds
cmp
sti
out
lahf
add
push
jmp
and
xchg
mov
pop
push
inc
mov
inc
push
lcall
popf
outsb
pop
mov
loop
addb
int3
aaa
push
outsl
daa
mov
adc
jp
add
jmp
sub
rorb
adc
mov
sub
rcr
loop
imul
jne
xor
sahf
add
fwait
adc
pop
mov
testl
imul
xor
cwtl
cmc
or
sub
inc
jae
jno
pop
sub
ret
mov
outsb
jno
mov
in
loope
ret
cmp
and
inc
sbb
mov
mov
pop
and
mov
cmp
mov
push
cmpsb
fs
lods
jmp
pushf
fs
jbe
or
mov
mov
mov
ljmp
mov
jecxz
cmc
leave
inc
jl
stos
sub
inc
test
sub
addr16
sub
arpl
scas
imul
mov
in
jl
inc
std
sub
xor
inc
mov
pop
push
mov
mov
push
cmpsb
mov
mov
jmp
jmp
mov
stos
pop
imul
ss
cmp
mov
xlat
and
jle
test
lret
scas
repnz
imul
xchg
sub
cmp
or
mov
xchg
cmp
addr16
mov
ja
mov
rolb
mov
cs
sub
add
mov
jmp
leave
ljmp
add
dec
adc
or
inc
dec
cmp
jp
ja
dec
push
aad
movsl
mull
jmp
subb
sahf
test
loop
icebp
jno
roll
icebp
fstpl
xchg
lahf
cmpsl
popf
andb
jg
mov
fmuls
popa
inc
test
shll
sbb
fistpll
lods
inc
cmp
aaa
lahf
icebp
sbb
adc
andl
add
cli
or
cmpsb
push
cmp
or
call
icebp
leave
and
sbb
mov
mov
loop
inc
popa
cmp
mov
inc
cmp
dec
mov
mov
inc
pusha
xor
jle
rcrl
movsb
inc
ret
push
sub
and
xchg
jl
fadd
mov
cmpsb
jmp
push
cld
and
mov
inc
mov
jp
push
inc
mov
das
mov
mov
dec
pop
outsb
mov
dec
rorl
movsb
mov
jmp
rclb
pop
loope
mov
cmp
rolb
mov
mov
fcoms
inc
jnp
inc
inc
leave
popf
mov
pop
pop
mov
pop
fcmovbe
cmpsl
test
inc
mov
cmpsl
sub
popa
flds
jecxz
xchg
or
cwtl
adc
outsb
xchg
loop
xor
popf
inc
push
dec
mov
or
leave
mov
mov
movsb
add
sbb
in
bound
std
xor
fsubl
inc
jne
sbb
jno
sbb
sub
mov
cmpb
addr16
fnsave
stos
mov
xor
dec
inc
pop
stos
add
das
sub
pop
add
ja
inc
pop
test
insb
ret
mov
xchg
xchg
cmp
pop
fstps
out
mov
push
and
xor
sarl
inc
rorl
xchg
popa
or
or
icebp
cmpsb
mov
jmp
stc
add
ja
rcl
jno
add
mov
jp
aaa
add
aas
xor
and
xchg
pusha
jecxz
add
sub
ja
add
mov
daa
jo
xchg
sub
lret
jmp
rcrl
xor
push
gs
ja
dec
cmp
xchg
addr16
jmp
pop
inc
jmp
lods
mov
mov
call
ja
icebp
lods
in
imul
imul
cmp
cmpsb
dec
mov
fwait
pop
addr16
shlb
out
mov
cli
dec
dec
out
loope
nop
dec
dec
and
sbb
mov
pop
int3
pop
or
test
jl
mov
ficoms
push
mov
xor
shll
xor
lahf
add
adc
test
xchg
lods
pop
mov
push
fdivrl
mov
xor
bound
pop
jmp
inc
inc
mov
mov
mov
mov
movsl
faddl
cmpsl
popa
or
and
add
scas
sbb
cmpsl
inc
mov
fwait
mov
addb
push
faddp
sub
fidivrl
lods
mov
jmp
push
push
inc
addb
add
les
push
das
shrl
cmp
imul
dec
les
js
mov
mov
test
bound
push
ja
jp
popa
dec
dec
add
mov
or
xor
cmp
mov
and
or
subb
push
movsb
sbb
iret
sti
repz
stos
cmp
push
fbld
lret
jmp
mov
add
test
cmp
mov
adc
xlat
pop
addr16
data16
jbe
jo
sbb
stc
sbb
js
xor
pop
or
cli
daa
loope
lcall
movsl
mov
dec
push
or
xchg
jmp
pop
pop
lods
jg
push
mov
test
fwait
mov
aam
shr
mov
lcall
outsl
jae
sub
sbb
cmpsl
subb
adc
add
mov
inc
pop
popf
cmp
ret
les
daa
sbb
jo
movsl
test
pop
nop
sub
sbb
dec
jge
push
sbb
cli
repz
pushf
mov
fimuls
je
stc
xchg
stc
ds
aaa
mov
add
fldenv
push
in
out
shlb
or
cli
stc
mov
cmc
jmp
or
stc
je
jle
std
add
xchg
push
adc
scas
jmp
out
pop
loope
mov
fisttpll
jmp
jp
sub
lock
jp
mov
jno
cli
rolb
push
rcrb
pop
xchg
test
xor
scas
aaa
dec
pop
inc
sbb
pop
xor
movsl
jl
push
sarl
shlb
sub
loope
popa
pop
and
outsb
add
jne
test
pop
cli
sbb
and
ss
data16
in
jle
sub
lods
xchg
nop
jae
sub
loopne
cmc
sub
stos
pop
push
mov
stos
jo
lods
push
loop
inc
cs
movsl
jge
aam
push
inc
xchg
insl
xchg
mov
stos
adc
stos
dec
push
cwtl
aas
popf
dec
pop
popa
mul
mov
push
sub
mov
lret
jmp
mov
ret
add
ljmp
jo
mov
pop
and
pop
out
mov
sti
bound
in
movsl
loopne
mov
sti
push
imul
test
xor
add
cld
mov
pusha
movsb
push
inc
mov
std
mov
cmc
cmpsl
fwait
mov
cmp
and
ds
mov
add
fwait
cmp
xchg
mov
repz
jg
mov
in
scas
mov
jns
adc
inc
jmp
lcall
mov
sti
into
xor
mov
test
jbe
outsb
notb
fmul
in
stc
jb
cmp
fnstcw
xor
mov
pop
mov
adc
xor
clc
enter
fisubs
pop
dec
or
fnstenv
addr16
push
xor
and
lods
or
dec
psraw
popa
push
push
das
test
cmpxchg
adc
mov
pusha
icebp
enter
test
idivl
xchg
sbb
mov
fldt
movsb
add
insl
add
cmpsb
xchg
dec
xchg
in
lds
pop
ss
jmp
lret
or
bound
mov
sbb
cwtl
inc
dec
sbb
cs
sub
mov
rolb
xor
mov
leave
jae
mov
leave
jmp
mov
adc
or
arpl
sub
adc
xchg
mov
xchg
add
mov
leave
adc
in
sbbl
out
jle
adc
inc
call
mov
imul
mov
cmpsl
push
adc
dec
mov
leave
push
outsl
inc
mov
inc
xchg
cs
adc
aaa
sbbb
push
mov
push
xchg
pop
inc
xor
cmpsl
arpl
lret
jne
mov
test
rcll
adc
shr
add
test
int3
int
mov
fnstenv
into
js
inc
les
es
imul
dec
push
sarl
stos
inc
jp
lds
aam
loop
fsubl
and
into
mov
iret
pop
sbb
mov
fimuls
mov
mov
and
adc
das
insb
lods
adc
cmp
push
stc
jmp
sub
xlat
sub
sahf
addl
in
loope
lahf
stos
adc
pop
dec
mov
inc
mov
imul
shrl
clc
sub
loope
scas
rcrb
xchg
lods
inc
lock
shr
push
pushf
aaa
adcl
in
pop
or
call
cmp
sub
add
cld
shl
and
rorb
pop
dec
jnp
leave
mov
fnstcw
jmp
pusha
loope
adc
mov
neg
xchg
fdivrl
test
jo
faddl
pop
bound
daa
shlb
pop
jb
jg
xor
dec
gs
orb
xor
or
stos
iret
or
test
mov
sbb
mov
ret
mov
les
in
mov
cmp
pop
mov
push
xchg
popa
or
aas
inc
call
loopne
sub
add
mov
mov
xchg
xchg
or
aaa
mov
cli
xchg
popf
xchg
ss
push
iret
call
fisubrs
xchg
outsb
sbb
push
rcrb
xchg
sti
mov
pop
pop
daa
sahf
sbb
push
stos
adc
push
pop
cmp
cmpsl
push
mov
ficomps
xor
dec
and
xor
fisubs
clc
mov
mov
dec
mov
mov
sbb
arpl
mov
fiadds
insb
and
jmp
aaa
std
xor
or
test
aad
or
jg
pop
mov
leave
mov
lock
repnz
push
les
into
cmp
cmp
stos
je
xor
mov
fs
ja
push
mov
daa
cmp
adc
fadds
lods
pop
shrb
jae
sar
int3
bound
jmp
jecxz
test
sbb
dec
mov
popf
sub
xor
cmpsb
fistpl
mov
or
or
into
and
and
hlt
pop
xchg
jge
stc
jecxz
jns
inc
push
mov
sbb
fcom
enter
sahf
mulb
popf
out
ljmp
cli
jae
xlat
push
dec
mov
in
pop
shlb
inc
inc
mov
int
and
push
and
loope
aaa
xchg
jmp
les
inc
adc
pusha
pop
jmp
es
arpl
inc
push
push
test
pop
test
jno
mov
lret
cmp
sbb
and
push
jns
mov
iret
lcall
fs
js
in
fists
sbb
xor
je
add
les
es
cmp
xchg
push
jg
outsl
call
push
daa
mov
jo
xchg
jb
xchg
addr16
faddl
mov
adc
adcl
adcl
dec
or
das
cmp
ds
mov
icebp
push
lock
jg
out
xor
sbb
shrb
mov
xor
imul
fstl
or
cmp
in
pusha
inc
mov
gs
rcrb
jp
sbb
cmpsb
ficoms
je
jmp
add
pop
dec
or
sbb
test
nop
mov
add
push
mov
sub
mov
mov
sbb
lods
movsl
ret
dec
rorl
call
aam
out
add
mov
jnp
shl
mov
pop
cmp
mov
jg
push
sub
sub
fs
mov
incl
rcrl
xchg
call
sbb
fs
daa
stc
stos
adc
test
cmc
test
mov
loop
mov
pop
incb
mov
xchg
cmpb
stc
stos
stc
icebp
inc
xchg
cmp
jmp
in
popf
sub
add
outsl
and
cmp
in
jne
inc
jbe
int
in
cmp
lahf
add
dec
jmp
pop
test
mov
aad
faddl
xlat
iret
dec
fs
adc
mov
mov
pop
lahf
jge
mov
sub
pop
test
test
mov
jmp
sbb
xor
push
aad
push
fwait
mov
add
jb
in
dec
jecxz
flds
adc
add
push
punpcklwd
push
mov
mov
xchg
adc
and
adc
pop
cwtl
mov
ss
push
roll
xchg
mov
dec
test
shll
jg
data16
or
mov
repnz
stos
testb
mov
cmp
outsb
jns
jmp
das
inc
add
add
push
stos
bound
jns
jl
sahf
push
aam
pop
push
mov
sbb
aam
push
lock
shlb
adc
and
cmp
sub
sub
or
or
cmp
testb
stos
mov
jmp
out
add
cld
fisubrs
adc
dec
popf
xor
icebp
cld
int
loop
loop
sbb
sbb
gs
cmp
mov
push
xor
enter
sbb
xchg
xchg
inc
mov
out
out
outsb
or
fcoml
js
cmp
lods
jo
push
and
les
stos
mov
cmp
call
lods
or
pop
or
in
jecxz
mov
decl
mov
push
cmp
cmp
mov
jbe
cmp
in
pop
cmp
aam
aaa
inc
insb
imul
ljmp
xor
jns
mov
daa
xor
addr16
inc
sbb
sub
cmpsl
call
mov
pop
cmp
bound
inc
xchg
mov
jge
ja
pusha
subb
mov
jbe
xchg
mov
pushf
imul
into
int
cmp
xchg
aas
enter
mov
lock
shll
and
mov
aam
leave
push
jmp
mov
test
push
lret
mov
sub
sub
dec
mov
jmp
pop
jb
sub
adc
lret
mov
in
mov
in
sti
push
mov
push
jb
cmp
jno
arpl
jns
mov
mov
sub
jg
xchg
stc
sub
sbb
cmp
stos
test
and
push
and
insl
inc
nop
pop
lahf
dec
adc
lock
fwait
adc
stos
pop
fisttps
rolb
push
cmp
movsl
mov
popa
jmp
lahf
mov
loop
cmpsl
idivl
mov
mov
lds
and
mov
fdivrs
outsb
dec
dec
adc
outsl
mov
stc
bound
push
mov
subl
insl
jle
pop
push
je
sbb
data16
inc
lcall
xchg
add
jns
mov
lcall
movsl
sub
pop
jle
and
test
pushf
jb
xchg
in
adc
ret
xchg
call
leave
xor
inc
dec
pop
inc
xchg
xor
sub
cmp
stos
mov
xor
mov
call
sub
mov
fisubs
dec
repnz
mov
cmpsb
insl
pop
popa
and
push
pop
mull
icebp
push
mov
push
mov
insb
jg
jmp
and
mov
mov
or
cli
cltd
add
js
xchg
sub
or
xor
in
shll
movsl
mov
lock
je
insb
pop
stos
js
push
cmp
lock
and
roll
push
mov
rorl
fwait
in
fwait
mov
cmpsb
subb
dec
mov
stos
mov
imull
into
adc
push
sbb
adc
sub
incb
cmp
add
gs
int3
inc
lds
push
mov
faddl
rcl
sahf
push
call
mov
mov
shlb
popa
mov
mov
mov
mov
call
adc
push
fdiv
dec
rolb
and
fwait
mov
and
mov
cltd
push
stos
xchg
inc
lods
inc
pop
xchg
std
fildll
dec
pushf
call
lret
fisttps
mov
jmp
push
ficomps
test
sbb
jae
push
pop
push
gs
mov
mov
ljmp
stos
push
lret
movsl
adc
sahf
pop
ja
dec
jle
xchg
push
shll
iret
sub
or
push
add
sub
or
movsl
jb
jo
test
sub
and
ds
inc
jno
mov
jno
mov
aaa
popf
add
sub
arpl
xchg
xor
xor
aad
shlb
dec
frstor
add
jmp
mov
adc
sub
jg
test
data16
mov
jmp
aam
sbb
imul
mov
iret
stos
or
sarl
jo
sub
mov
loopne
mov
fadd
outsb
pop
mov
sub
imul
imul
mov
mov
xchg
aas
mov
xchg
movsl
cmp
mov
mov
mov
and
cmp
loopne
cmp
xor
jecxz
and
adc
add
push
rol
loop
in
mov
jbe
inc
jg
dec
call
fucomip
and
or
sbb
sub
lcall
loope
movsl
scas
popf
jmp
das
into
jb
mov
pop
lcall
sbb
mov
dec
imul
push
les
cmp
shr
repz
imul
gs
mov
out
je
jg
mov
mov
push
adc
pop
cmp
jp
xchg
sbb
mov
mov
mov
pop
test
out
aad
cli
fisubrs
js
out
ljmp
or
xor
cs
inc
inc
bsr
push
popa
fimull
lock
js
jp
mov
cmpsb
sub
mov
pop
mov
and
or
or
dec
mov
xchg
shrl
mov
mov
jge
lock
xchg
pop
popa
out
call
dec
nop
pop
mov
test
xor
mov
dec
dec
mov
lods
pop
movsl
push
js
or
adc
sbb
and
inc
sub
roll
xor
lcall
stos
rcll
mov
inc
test
mov
mov
clc
lock
adc
mov
push
mov
aaa
movsb
inc
cli
in
cmp
inc
jmp
add
jmp
test
hlt
test
jns
popa
fadd
push
iret
in
xchg
nop
add
cwtl
dec
inc
cmpsl
jmp
pop
mov
mulb
mov
stc
das
xchg
pop
fnstenv
imul
cmp
xorb
push
dec
xorl
rolb
test
mov
loope
xor
and
fmulp
sbb
stos
sbb
pop
bt
mov
mov
pushf
xchg
jnp
stos
mov
shll
test
movsb
and
mov
outsl
mov
mov
lods
fcompl
aas
add
das
pop
test
add
popf
in
mov
mov
cmpsl
ja
mov
lret
sbb
mov
dec
daa
ret
call
dec
daa
add
in
call
and
ffree
gs
inc
or
data16
sub
addr16
movsl
sbb
movsl
adc
movsl
sbb
movsl
adc
movsl
sbb
movsl
adc
movsl
sbb
movsl
sahf
cli
in
and
mov
movsl
fbld
daa
cmp
int3
and
arpl
mov
loope
lcall
movsl
cs
imul
pop
jp
imul
out
adc
adc
adc
bound
xlat
and
scas
or
icebp
pop
mov
test
pusha
mov
mov
xchg
push
sbb
xchg
inc
cmp
xor
ret
xchg
nop
and
sti
ret
jne
xor
stos
push
mov
inc
adc
arpl
fiaddl
xchg
xchg
cmp
pop
lea
mov
sub
mov
or
lcall
push
sbb
cmc
jle
mov
aam
push
jp
jle
add
and
pop
ffree
pop
insl
push
sbb
jne
jns
dec
xchg
std
mov
xor
out
inc
push
pop
jg
xchg
jns
adc
sub
faddl
mov
lret
push
popf
xchg
popf
xchg
stos
cmp
scas
leave
pop
cwtl
jno
cmp
cmp
mov
gs
or
xlat
or
mov
inc
mov
cmpsl
inc
adc
lahf
xchg
jmp
into
aas
add
rorl
mov
or
loope
mov
sbbl
cmp
das
mov
ret
fisttpl
hlt
mov
or
lcall
lods
sbb
push
cmp
dec
jnp
jge
mov
enter
cmp
sub
add
fimull
scas
inc
dec
cmp
movsl
stos
addb
neg
mov
ja
dec
je
sahf
ficomps
cmpsl
inc
lods
sbb
adc
mov
dec
popa
test
mov
icebp
jmp
xchg
xor
xchg
jge
fldt
dec
pop
cmpsl
mov
jmp
jle
inc
shlb
imul
xchg
aam
fmuls
sub
jo
cwtl
cmp
outsl
xchg
jle
rcl
push
jmp
sub
push
mov
rcll
movb
movsb
add
and
jl
push
ljmp
jo
es
mov
iret
mov
hlt
xchg
mov
ljmp
adc
fcmovb
test
cld
add
lea
mov
add
or
cmp
test
aad
fldenv
mov
cwtl
movsl
mov
sahf
pop
pop
pop
inc
push
cmpsl
test
pop
jne,pt
in
mov
xchg
and
mov
std
popf
cmp
das
stos
cs
cmpsl
xchg
imul
adc
cmpsb
test
jle
mov
xor
dec
pop
aam
gs
and
call
bnd
cmp
push
imul
shr
cmp
rorl
int3
dec
xchg
repz
jmp
cwtl
xchg
lret
push
stos
stos
cmpsb
ret
push
sahf
stos
inc
sbb
lods
roll
push
popa
cmp
mov
mov
cs
cmpsb
sti
cltd
movsl
fwait
inc
sahf
lret
adc
dec
movsb
test
test
jns
enter
stos
xor
push
outsb
jns
inc
jmp
aaa
cmp
cmpsl
sbb
scas
dec
add
sub
nop
cmp
scas
sub
into
push
mov
pop
leave
lds
mov
outsl
test
cmpsb
jecxz
mov
insl
shlb
shlb
lret
imul
scas
adc
gs
mov
mov
adc
fadds
sub
cli
cmp
fstps
xchg
jmp
inc
aad
xor
sbb
cwtl
push
sub
xchg
cs
aaa
fdivrl
pop
jmp
dec
jmp
mov
dec
cmc
pop
fwait
lods
out
std
shr
fildll
sbb
leave
out
aaa
jno
stos
int
lcall
jg
call
push
and
pop
mov
jmp
jge
jp
jbe
aam
data16
mov
pushf
sub
lods
pushf
shr
jo
outsb
stos
adc
lret
jecxz
add
fucomp
push
adc
sar
xor
nop
into
push
pop
sub
pop
cmp
push
cmpsl
fstpt
andb
sbb
sahf
mov
out
xor
jl
popa
unpcklps
pop
mov
jle
int3
ljmp
mov
or
pushf
ja
out
sbb
and
mov
dec
int
mov
jge
jne
mov
mov
cmc
inc
mov
dec
jmp
push
dec
into
mov
fwait
popa
dec
je
arpl
add
jbe
cmp
rcr
push
xor
mov
idivb
sub
js
adc
mov
int3
lds
mov
jmp
movsl
pop
sub
loope
mov
inc
mov
xchg
xchg
into
and
lock
mov
frstor
mov
ljmp
mov
test
mov
mov
pop
mov
movsl
mov
jl
sahf
sahf
cmp
das
mov
push
jmp
jle
and
lock
sub
mov
xchg
fwait
cmovs
adc
jnp
ss
or
pop
sbb
xlat
push
lcall
dec
push
mov
aad
add
mov
mov
dec
jno
jns
test
mov
leave
xor
and
push
sbb
fistl
jmp
xor
inc
mov
fwait
in
sub
clc
adc
ljmp
fisubrl
cmpsb
mov
mov
cmpb
out
es
rclb
and
arpl
pop
inc
dec
loop
mov
jb
cld
lods
jge
jno
mov
idiv
test
inc
push
bound
jg
ljmp
mov
sbb
pop
xchg
test
cmp
cmp
lahf
cltd
mov
cmpsl
xchg
dec
adc
jge
dec
outsb
addb
fwait
cmpsl
sub
clc
inc
xor
sbb
fstpl
fwait
daa
test
jg
mov
mov
aad
jmp
test
in
lods
je
mulb
aaa
mov
clc
dec
lret
fiadds
mov
cmp
les
fs
mov
pop
stos
in
adc
and
lods
outsl
inc
inc
or
mov
jnp
xchg
inc
sub
mov
pop
mov
sbb
test
sbb
inc
inc
mov
mov
xor
adc
mov
mov
adc
or
pop
jo
mov
into
adc
imul
ret
mov
aas
add
inc
in
and
push
or
incb
cmp
or
sub
mov
mov
movb
mov
lea
in
scas
mov
sti
and
and
outsb
sbb
fdivrs
mov
lahf
ret
cli
jmp
or
and
outsb
iret
dec
pop
cs
test
into
mull
aad
dec
or
mov
arpl
xchg
out
add
pop
aaa
inc
clc
mov
mov
mov
lods
adc
aad
daa
andnps
lcall
sarl
fnstcw
jmp
scas
into
les
adc
fdecstp
and
testl
iret
cld
push
jne
ljmp
shrl
xor
fwait
xchg
push
dec
mov
push
cmp
sub
xchg
out
and
add
pop
rcll
dec
push
mov
sbb
inc
arpl
sbb
sti
dec
sahf
push
aam
sbb
pop
mov
mov
mov
jmp
dec
mov
pop
hlt
out
push
cmp
mov
push
mov
loop
outsl
xchg
mov
inc
arpl
inc
mov
mov
aaa
xor
jmp
popf
andb
notl
push
pop
stc
or
enter
sub
push
dec
imul
notl
shlb
jmp
in
mov
or
mov
ds
add
adc
into
dec
bound
add
cld
jl
and
xor
dec
mov
in
movsl
jmp
icebp
lea
xchg
loope
mov
pop
fisubrl
inc
cmc
fldl
mov
shr
lea
icebp
adc
cltd
sub
push
add
icebp
popa
js
jae
dec
or
mov
push
mov
scas
push
movsl
fstpt
mov
or
xchg
push
jge
jecxz
jno
rol
xchg
dec
sub
mov
mov
sbb
int3
mov
inc
jle
inc
mov
mov
mov
jle
lret
lods
cmova
shll
lahf
ret
mov
xchg
std
into
sti
lahf
dec
pop
add
aad
add
adc
xlat
cmc
mov
inc
cs
push
outsl
jne
lods
sub
clc
add
pushf
add
mov
fsubp
lret
inc
sbb
push
mov
mov
movsb
mov
shr
je
add
lea
popf
les
mov
xchg
fbld
add
and
in
mov
jae
sbb
jg
dec
dec
xor
out
pop
iret
fcomps
call
ret
dec
mov
lods
cmp
lock
stos
pop
imul
js
cmpsb
call
aaa
ret
fsincos
fistpll
cmpsb
xor
or
inc
movb
fwait
sub
xor
in
testl
test
out
sbb
shlb
or
cli
pop
pop
inc
nop
adc
shrl
mov
aaa
enter
mov
xor
arpl
push
sub
jmp
push
mov
lds
int3
push
dec
jp
jge
lahf
fidivrs
mov
or
in
sbb
repnz
push
dec
mov
inc
jg
xchg
stos
adc
inc
sub
jmp
mov
push
inc
in
push
rolb
sbb
insb
jecxz
clc
xchg
inc
mov
fwait
mov
xor
pop
pushf
sbb
mov
cmp
outsl
imull
or
shrl
lcall
mov
mov
movsb
add
lods
pop
dec
imul
jnp
std
and
add
sbb
lret
out
jne
dec
test
mov
add
arpl
push
mov
stos
int3
lcall
arpl
ficompl
sbb
aas
and
jne
pop
rcrl
and
sti
testl
pop
xchg
mov
jae
sti
mov
gs
xor
sbbb
insl
and
and
cmp
xor
mov
imul
stos
or
jns
mov
mov
dec
xchg
dec
and
mov
jp
adc
repz
imul
inc
mov
jnp
pop
cmp
jg
aad
mov
jl
pop
xchg
jmp
test
pushf
cld
sub
icebp
mov
cmp
jo
test
jmp
jle
bound
loope
cs
mov
jp
mov
xchg
xor
xor
sbb
or
imul
mov
sub
xor
and
daa
push
mov
cmp
mov
and
sub
arpl
ss
pop
jmp
sub
ret
push
jb
add
and
sbb
xchg
xchg
mov
xchg
icebp
stos
sbbl
dec
mulb
inc
nop
xor
pusha
test
xchg
call
test
in
mov
enter
test
fdivs
fidivl
mov
mov
xor
loope
test
inc
mov
roll
sub
imul
inc
in
push
dec
je
mov
and
push
cmc
in
add
mov
imul
mov
icebp
mov
inc
add
test
and
push
stc
jne
subl
jmp
sbb
sub
das
lock
xor
mov
imul
mov
stc
test
icebp
mov
lods
or
gs
cwtl
or
das
lods
dec
movsb
dec
xchg
arpl
cmpsb
jne
out
cmpsl
sub
jbe
test
popa
or
add
jge
adc
xor
mov
arpl
xchg
mov
jmp
pop
or
add
leave
xchg
xor
aam
dec
mov
and
mov
mov
inc
pop
and
es
lods
pusha
jns
cmpsl
cwtl
fstl
scas
and
popa
pop
movsb
daa
dec
pop
adc
adc
jle
add
cli
outsl
jl
enter
mov
je
pop
inc
out
popa
shlb
cmp
into
in
mov
mov
fs
and
add
imul
mov
aaa
dec
xchg
lahf
pusha
cmp
sbb
rcr
lods
dec
xchg
cmpsl
aas
dec
leave
dec
popa
stos
int
cmp
sbb
test
jg
ret
jge
repnz
cmp
pop
mov
lahf
jp
addb
shr
jmp
jne
out
popa
cwtl
sbb
in
mov
mov
icebp
mov
idivl
into
call
les
lret
cmc
dec
aad
push
pop
lret
mov
gs
lcall
adc
mov
mov
push
clc
jno
mov
daa
pop
mov
jo
and
cmpsb
lds
rcl
popf
loopne
lea
dec
es
adcl
xchg
je
xchg
mov
test
stos
mov
shr
int3
ret
nop
inc
addr16
jle
pop
mov
leave
dec
push
stos
or
pusha
xchg
mov
or
and
rcll
xchg
add
loope
inc
icebp
jge
push
cmpsl
cmp
and
mov
adc
fnstcw
ja
loope
insl
cmpsb
push
jl
loopne
rorb
mov
pop
rolb
mov
ret
or
push
les
dec
lds
int3
jg
lcall
xor
jne
shrl
jmp
lock
test
or
out
jl
pop
ja
push
in
roll
ja
repz
sub
lds
jmp
mov
sbb
je
push
sub
icebp
or
int
cs
in
cmp
adc
or
mov
js
mov
mov
repz
sbb
add
rorb
shll
test
or
push
aam
outsb
add
mov
cmp
add
fdivrl
imul
shlb
out
imull
jb
dec
add
mov
daa
adc
jl
add
idivl
lret
mov
pusha
test
xchg
insb
lret
adc
mov
or
movsl
imul
push
jp
xchg
pop
mov
rolb
cmp
test
dec
dec
sub
adc
pop
cwtl
mov
out
or
mov
lcall
add
fisttpl
push
imul
xchg
jns
jmp
push
inc
dec
lea
andl
xchg
jne
push
fidivrl
fdivl
jmp
movsl
push
lock
mov
dec
into
mov
dec
shl
lods
fwait
mov
enter
xor
mov
sti
mov
xor
xchg
lcall
outsb
lock
and
cmp
inc
into
scas
aam
out
xor
stos
mov
lret
mov
and
in
pushf
or
xchg
mov
mov
and
inc
lds
shrl
pop
adc
gs
cmp
in
or
or
arpl
adc
dec
sub
popl
xchg
repnz
fimull
adc
jmp
stos
sahf
clc
mov
xchg
cmova
iret
sbb
dec
subb
sbb
mov
mov
in
push
sbbl
jmp
add
xchg
cmp
sub
fldl2e
cmpsl
andl
in
insb
aaa
jl
rcll
xchg
add
cmpb
mov
movsl
loope
add
lahf
xor
sbb
jns
add
xchg
orb
push
dec
bound
mov
inc
adc
ret
test
ja
cmp
add
pop
or
adc
adc
lcall
inc
bound
outsb
and
test
adc
push
and
aaa
lea
into
pop
xor
jne
push
stos
adc
mov
cmp
arpl
push
adcb
es
jg
inc
je
mov
dec
jle
bound
mov
jecxz
xor
sub
dec
insb
or
loopne
mov
into
jnp
mov
mov
pop
push
aam
mov
jae
nop
std
push
mov
fnstsw
jmp
jo
xchg
mov
movsl
adcb
pusha
sbb
cwtl
pop
mov
push
hlt
js
adc
dec
cmp
andb
sub
xchg
pop
inc
adc
xchg
outsl
cmp
sbb
data16
sbb
push
pusha
lock
in
int
loopne
jns
popa
dec
xor
shll
mov
sahf
cmp
ficomps
push
lret
mov
lods
leave
movsb
daa
sarl
call
sahf
ja
mov
lods
mov
movsb
and
test
inc
xchg
jge
sti
and
inc
add
inc
mov
lret
test
pop
dec
test
scas
mov
adc
add
addr16
mov
sahf
std
inc
adc
sbb
repz
jp
ror
or
call
cmp
stos
dec
fs
aam
adc
adc
popa
push
daa
cwtl
movsb
mov
stos
lods
cmp
pop
add
popf
test
lds
mov
andb
push
test
sub
fistpl
fwait
inc
hlt
jle
mov
lods
mov
mov
jbe
jae
enter
inc
mov
and
inc
sub
pop
das
lea
shll
xlat
xor
scas
subb
jnp
lahf
push
cmp
jmp
cmpsl
mov
mov
and
mov
pop
into
mov
pop
inc
imul
mov
pop
mov
mov
inc
jbe
mov
inc
mov
mov
and
xchg
mov
add
mov
ss
stos
notl
arpl
mov
mov
mov
push
jbe
mov
test
jmp
xor
and
test
sbb
push
jmp
add
jle
ret
jecxz
lods
or
notl
repz
sub
lds
pop
gs
sbb
out
stos
gs
adc
mov
popa
pusha
dec
call
fnstcw
mov
xor
sbb
lods
je
jae
mov
rorl
xor
inc
pop
je
adc
or
mov
mov
inc
or
mov
xchg
mov
adc
pusha
cmpsb
mov
pop
adc
add
or
scas
mov
lock
pop
push
xchg
or
push
sub
arpl
ljmp
cmp
sub
cmpsl
mov
imul
cli
and
rorb
sbb
push
mov
mov
jns
add
lcall
inc
sub
mov
push
xchg
in
push
sub
into
sbb
pushf
jmp
mov
cmp
sbb
jmp
sub
sub
add
push
or
repnz
pop
adc
or
jecxz
adc
clc
addr16
out
inc
and
imul
cmp
mov
ficomps
ja
addr16
test
mov
nop
mov
int3
adc
jae
pop
and
je
stc
xor
stos
jg
inc
in
jae
lods
pusha
mov
sahf
mov
test
pusha
adc
insl
lods
cmpsb
and
rcll
cmp
add
out
rclb
test
dec
call
out
xor
rorl
sbb
or
cs
inc
into
adc
into
xlat
shrl
mov
xor
dec
dec
into
jmp
dec
adc
push
test
cmp
and
aas
sti
fimuls
jno
sub
sahf
pop
fs
cmp
dec
andb
mov
jmp
stos
sbb
pop
test
enter
dec
or
push
add
mov
cmp
ds
sarl
daa
test
jae
pop
cmpsb
dec
cs
jge
dec
icebp
push
sub
sbb
xor
in
pop
sbb
clc
mov
and
add
cmp
mov
sbb
mov
fidivs
ja
add
in
fucompp
in
or
ret
fisttpl
lods
pop
jl
sub
mov
push
add
jo
pushf
lods
mov
add
loopne
mov
pop
xlat
mov
push
adc
sahf
arpl
fcomps
lea
sti
cmp
push
mov
rcrb
jmp
inc
sub
fwait
jmp
movsl
xchg
xchg
aaa
inc
cmp
dec
hlt
loop
outsl
mov
add
jmp
jo
icebp
pop
and
mov
addb
test
test
mov
scas
push
mov
fdivl
fwait
push
jge
jmp
xchg
sbbl
or
xchg
rcll
out
jne
fidivrl
divl
dec
mov
leave
adc
setb
pop
push
fcom
dec
shrl
in
negl
push
cmpsl
in
movsl
rcrb
adc
jno
les
mov
jo
add
lods
sbb
lahf
stos
add
in
xchg
shll
mov
lret
dec
enter
jmp
scas
insb
lea
mov
adc
mov
mov
jbe
add
cmpsl
xchg
mov
jbe
les
ret
jmp
or
in
add
cmp
lds
pop
jnp
lock
pop
mov
and
out
pop
stos
push
scas
pop
repnz
mov
cwtl
fimull
cmp
std
fbld
and
rcrl
mov
push
fbld
xchg
lret
rol
adc
lret
inc
pop
lea
icebp
lds
push
adc
ss
arpl
jge
jmp
movsb
enter
cltd
arpl
cltd
outsb
popa
sti
mov
cmp
mov
mov
pop
lcall
xchg
push
cwtl
sbb
adcb
jg
xchg
fnstcw
pop
imul
xchg
push
and
xor
test
int3
mov
xor
test
xchg
in
xchg
mov
add
movsl
sti
add
mov
mov
test
add
aas
dec
pop
pop
stos
lods
mov
sub
lret
lcall
pop
das
mov
test
jg
add
mov
cli
icebp
inc
mov
loope
jo
sbb
rol
dec
rcrl
push
mov
rorb
or
sbb
ljmp
icebp
std
out
outsl
mov
xor
mov
and
and
inc
sub
jns
sar
and
and
sahf
test
leave
movsl
mov
test
mov
jbe
std
pop
push
outsl
test
mov
mov
mov
inc
sub
pop
cltd
stc
mov
mov
dec
cld
xor
lods
mov
mov
sub
sbb
pop
cmpsl
es
adc
xchg
cmp
subb
mov
push
mov
pop
call
outsl
lock
movsl
mov
cwtl
dec
dec
mov
ret
fdivrs
mov
fcmovnb
dec
ret
dec
adc
add
xchg
stos
in
mov
in
xor
mov
mov
leave
cs
sbb
sahf
adc
mov
jo
pop
sub
int
inc
insb
ss
roll
ds
pop
mov
jnp
icebp
cs
in
mov
jle
mov
mov
pop
xlat
mov
cmovno
jno
fidivl
fildll
aam
mov
jbe
pop
mov
fwait
mov
mov
sub
mov
mov
and
movsl
stos
cmp
popf
xchg
lods
inc
mov
adc
cmpsl
mov
jbe
sbb
cmpsl
js
in
stos
fisubs
lret
jae
sahf
jp
cmpsl
outsb
push
ret
cmp
inc
ret
and
movsl
mov
mov
repz
inc
and
mov
xchg
cld
jg
das
sub
or
daa
mov
inc
test
sbb
movsl
cwtl
jmp
nop
jno
test
cld
jns
push
mov
jns
popa
stc
imul
rcrb
mov
lret
xchg
insb
sub
inc
test
mov
mov
inc
out
mov
lods
push
push
mov
inc
movsb
out
shr
adc
mov
inc
and
pushf
jb
mov
adc
cmp
lds
pop
dec
jno
cwtl
dec
jno
fildll
arpl
and
push
mov
insl
scas
mov
mov
test
aas
add
sub
outsl
stos
adc
dec
mov
nop
mov
movsl
mov
inc
fimuls
mov
mov
imul
mov
mov
fisubrs
mov
in
dec
mov
mov
fiadds
mov
push
cmp
ja
inc
ret
push
xor
and
iret
popf
mov
mov
pop
jb
sti
sbb
or
jmp
adc
xchg
mov
js
ss
inc
and
mov
sub
daa
outsl
cmpb
cmpsb
jno
mov
mov
mov
aad
jno
popa
inc
lods
and
sub
ficoms
xchg
or
mov
sbb
fdivl
cwtl
stos
push
jge
cmp
add
lahf
loope
push
aaa
push
popf
or
ds
push
arpl
decb
pop
sbb
les
pop
and
jae
mov
std
xor
stos
sub
aaa
push
test
cli
insb
and
fiadds
sub
adc
mov
mov
and
pop
int
xchg
test
pop
mov
mov
hlt
xchg
rorb
fidivl
cmp
sub
subl
xor
test
mov
push
test
ja
lahf
mov
mov
push
mov
fiaddl
lods
and
mov
icebp
add
adc
inc
mov
imul
inc
xor
mov
stos
shlb
cmp
dec
dec
mov
or
je
in
add
cmp
push
addr16
cmp
lock
lock
ss
mov
andb
jp
push
inc
jae
adc
mov
push
jo
shrb
daa
je
jb
and
jle
mov
jp
lods
jl
push
pop
jmp
jb
js
mov
mov
jb
dec
mov
inc
lods
dec
lcall
cmp
add
mov
les
into
inc
scas
adc
lahf
nop
add
imul
inc
test
out
ret
push
pop
jp,pn
movsl
imul
xchg
imul
arpl
xchg
pushf
cmp
leave
pop
cmp
xchg
jmp
xor
mov
repz
mov
xchg
cmp
test
dec
sbb
stos
add
shlb
imul
xor
push
gs
inc
imul
jno
in
or
fnstsw
jmp
xchg
sbb
mov
out
mov
xor
mov
sub
adc
inc
mov
adc
adc
xchg
icebp
pop
repz
push
enter
push
lods
stos
bound
xchg
vmovlps
leave
cld
stos
popf
lds
lcall
mov
lods
and
das
cmpsb
sub
pop
sub
sbb
mov
adc
cmpsl
jmp
jnp
fldt
push
leave
mov
mov
and
fwait
in
in
dec
and
inc
add
shll
ds
outsl
ret
enter
xchg
and
jmp
jmp
add
push
in
push
aaa
call
mov
or
fsubrl
imul
jmp
insb
sub
and
add
inc
adc
je
inc
jnp
nop
pop
dec
pop
insl
xchg
inc
ret
push
inc
shlb
movsl
insb
stc
xchg
sbb
mov
mov
int3
fwait
mov
lods
sbb
mov
test
sub
xor
push
imul
sbb
movsb
inc
pop
xchg
dec
sti
jns
leave
jae
movsb
cmc
mov
clc
in
mov
cmc
hlt
mov
mov
pop
repz
and
mov
dec
sahf
push
mov
popa
movl
ljmp
pop
xchg
or
inc
lret
icebp
das
and
popf
dec
iret
dec
push
ljmp
inc
cmp
sub
adc
pop
mov
call
jp
dec
test
pop
adc
gs
mov
test
lock
xchg
xchg
push
sbb
neg
mov
pop
and
jae
add
leave
or
shl
and
mov
sbb
mov
or
or
nop
cltd
gs
lahf
insl
mov
add
jge
dec
mov
ret
inc
mov
jl
inc
enter
insb
dec
cmovg
jmp
add
xor
lea
leave
adc
addb
mov
and
push
xor
jl
xor
and
mov
mov
mov
add
jle
call
inc
scas
mov
mov
sub
jnp
cmp
push
and
lock
mov
fdiv
and
jmp
jmp
dec
sbb
fisttpl
test
sarb
jg
scas
xchg
cmpsb
sub
int3
test
loop
sbbl
jne
mov
test
push
lahf
iret
sub
sarl
loop
mov
gs
imul
push
lahf
and
lock
jmp
mov
addr16
insb
or
mov
js
jne
nop
and
mov
and
mov
xor
clc
icebp
stos
sarb
mov
mov
jne
gs
xchg
inc
cli
mov
std
pushf
imul
cmp
mov
cltd
jmp
and
mov
test
sbb
jnp
enter
or
test
subl
in
sub
mov
xor
lods
ja
in
mov
adc
mov
sbbl
mov
vminss
and
rcr
mov
sub
push
adc
mov
sbb
cmpb
push
mov
push
jnp
test
sub
push
imul
add
mov
push
imulb
cmp
sarb
idivb
and
jns
lahf
mov
and
cmp
xor
xchg
scas
mov
push
mov
xor
adcl
and
loopne
icebp
pop
or
nop
sbb
sarl
pop
sub
lahf
inc
inc
test
pop
enter
mov
movsl
jo
mov
sarb
jl
mov
and
xchg
stc
test
gs
sub
sahf
cmp
mov
inc
cmpsb
pop
loop
mov
gs
and
loopne
test
bound
enter
jb
jg
xchg
fdivrl
inc
daa
and
out
adc
mov
mov
xor
mov
addr16
pushf
pushf
mov
pusha
and
pop
in
mov
push
in
cmp
in
stc
cmpl
cwtl
xchg
xchg
mov
mov
sbb
leave
mov
pusha
in
sub
jp
inc
and
mov
or
test
aam
mov
std
int3
mov
mov
movsl
mov
sub
add
addr16
mov
test
pop
jl
lcall
push
xor
mov
mov
adc
subb
mov
ret
inc
stos
mov
int
push
add
pop
insl
popa
push
gs
sub
jne
xor
mov
loope
mov
ret
sarl
add
sub
adc
cli
test
xchg
test
mov
lcall
stos
jmp
dec
mov
mov
add
pusha
sub
orl
enter
push
lahf
loope
inc
mov
lcall
jb
jns
outsl
mov
sbbl
sbb
mov
movsl
push
jnp
movb
imul
test
add
test
std
or
movsl
mov
xchg
lcall
std
and
mov
add
cmp
ret
movsl
and
mov
sbb
or
mov
clc
daa
shll
test
sbb
cmp
mov
mov
test
sbb
mov
inc
mov
xchg
mov
lods
test
out
dec
andl
jge
into
lcall
adc
dec
pusha
mov
sbb
pop
idivl
mov
int3
xor
add
mov
sahf
inc
push
pop
pushf
or
lds
mov
and
movb
adc
leave
push
sub
mov
lahf
out
lcall
flds
loope
dec
pushf
sbb
mov
loop
mov
pop
mov
sub
cmp
mov
or
mov
call
imul
movsl
and
test
pop
js
and
mov
and
test
pop
mov
mov
into
mov
and
fsubrl
mov
mov
mov
test
pop
movsl
mov
pop
sti
test
inc
aas
cli
mov
and
leave
jnp
test
pop
adc
mov
gs
mov
fldt
inc
test
push
pop
mov
ljmp
test
dec
cli
mov
mov
mov
lods
mov
and
cmpsl
aas
mov
cs
test
ficomps
jmp
popf
outsl
and
or
mov
mov
dec
adc
adc
int3
movsl
out
pop
jae,pt
pushf
and
sbb
add
es
add
test
mov
mov
adc
aas
push
jmp
mov
or
xchg
cld
xor
loopne
xchg
cmp
sub
mov
mov
das
or
cmp
cmp
mov
mov
jae
stc
pop
or
pusha
sarb
adc
mov
jl
loope
ja
sbb
push
jno
add
inc
andl
fdivs
sub
jle
popf
push
repz
jp
movsl
sbb
jbe
test
xor
popf
mov
push
mov
mov
data16
cmpsb
sbb
call
adc
lret
ret
loopne
cmpsb
and
fbld
jnp
add
mov
testl
xlat
fstpl
imul
adc
mov
dec
pop
gs
pop
lods
scas
pop
xchg
mov
pop
into
imul
sub
adc
dec
imul
call
roll
jno
mov
imul
outsl
cmpsb
loopne
dec
fmuls
dec
popf
and
mov
test
add
mov
sahf
jb
adc
and
jmp
inc
xchg
test
adc
out
mov
xor
jg
mov
into
sub
test
inc
ss
cmpsb
xchg
lods
arpl
sbb
les
push
movsb
xchg
jge
fdiv
push
add
or
fidivs
call
pop
scas
and
mov
pop
and
xchg
dec
xor
into
cmp
shrl
mov
addb
fildll
push
inc
mov
test
sbb
flds
enter
mov
xor
push
test
cmp
mov
add
movsb
jb
cmp
add
loopne
inc
enter
lahf
fnstenv
pop
pop
cli
cmp
rolb
pop
inc
xchg
pop
xor
xor
mov
call
push
bswap
sub
cmpxchg
int
push
lahf
sub
xchg
lods
sub
mov
out
icebp
fmull
cmpb
sbb
aam
push
or
mov
cmpsb
sub
lods
mov
mov
inc
push
into
mov
and
push
jmp
fsubrs
pop
adc
mov
mov
jmp
mov
cmc
mov
adc
stos
inc
add
mov
call
es
fldt
mov
stc
pop
repnz
push
mov
mov
xor
inc
xor
jmp
dec
test
outsb
les
loopne
sbb
mov
and
sbbl
jge
xchg
inc
mov
adc
xor
dec
lods
pusha
stos
subb
jo
leave
jae
xchg
mov
popf
push
push
inc
add
lods
pop
enter
pop
pop
jmp
call
dec
nop
dec
andl
lods
stos
mov
pop
adc
dec
inc
pop
sub
popa
aas
mov
les
push
vandnps
push
jnp
rcrb
push
jmp
sub
shr
shrb
or
mov
mov
andb
inc
lods
sbb
lcall
cmp
test
call
pop
popf
push
mov
loop
push
pop
lods
out
push
xchg
sbb
imul
add
jnp
jmp
lahf
aad
xor
addb
xor
jmp
add
int3
roll
stos
jae
mov
ljmp
add
cmc
fs
inc
gs
sbb
ja
cmpsb
pop
rcrb
mov
mov
lcall
mov
sub
outsb
rcrl
sbb
dec
fstps
in
mov
cmpsl
and
icebp
mov
pop
js
icebp
and
inc
lods
gs
pop
test
inc
mov
sub
test
inc
cmp
arpl
mov
arpl
xor
aaa
xchg
popa
icebp
mov
test
dec
pop
add
or
xchg
add
sbb
andb
iret
in
dec
xchg
fwait
mov
es
mov
cmc
xchg
cli
mov
test
pop
sub
pop
ljmp
jge
inc
into
nop
lods
imul
stc
push
mov
mov
mov
jmp
out
inc
pop
inc
into
es
mov
repz
or
inc
ja
jae
jo
mov
shlb
xor
lods
lcall
inc
push
loopne
and
xor
push
lock
call
xchg
lret
repnz
jne
cmp
addr16
popa
das
stc
nop
aaa
gs
faddl
daa
or
jge
dec
add
sti
mov
mov
repz
loopne
loopne
ret
sub
inc
mov
cmpsl
or
jns
mov
jmp
cmpsl
and
imul
repnz
mov
hlt
inc
adc
cmp
ja
or
sub
ret
sti
xchg
jne
push
jg
cltd
cmp
dec
pop
ja
test
sbb
fcom
sub
jle
flds
lods
fiaddl
push
outsb
mov
sbb
dec
mov
das
jnp
cmpsl
stos
xor
daa
nop
out
rol
jg
in
add
stos
xchg
movsb
test
loopne
mov
ljmp
gs
scas
lods
daa
cwtl
mov
pop
dec
pop
dec
mov
push
lahf
xchg
ja
adc
xchg
aas
jae
sbb
rcl
mov
mov
lods
adc
cmpsb
hlt
imul
mov
mov
lock
sub
fwait
sbb
in
adc
movsl
mov
movsl
sahf
test
inc
pop
arpl
shll
add
or
xor
add
lahf
popl
test
sub
inc
push
popf
dec
sbb
lcall
and
add
inc
and
test
mov
sub
inc
jns
arpl
cmpl
popf
repz
into
sub
rcrl
push
pop
inc
mov
insl
mov
pop
mov
ficompl
pop
lret
push
mov
push
pop
and
cmp
or
test
cmpsb
popf
cmp
jmp
push
inc
sub
push
pop
mov
faddl
rolb
jnp
les
dec
fldl
rdpmc
push
popf
inc
or
jno
sbb
fidivrl
fsin
sbb
xor
popa
xchg
cli
sti
mov
pushl
push
mov
movsb
out
push
push
dec
int3
dec
ja
fcoml
push
fisubrs
sbb
les
and
imul
sbb
or
jo
in
fmull
jb
mov
pusha
test
fistps
xor
or
or
aas
pusha
lods
push
or
pop
aas
xchg
push
push
cmp
in
lods
loop
and
push
cmpsb
mov
movsb
pop
jge
shrl
xor
mov
loope
jmp
les
idivl
xchg
pop
lock
mov
in
lock
loopne
cmp
mov
jno
mov
adc
movsl
mov
test
int3
fwait
inc
popf
js
aad
xchg
aas
aaa
mov
icebp
xor
xor
fldcw
ja
add
insb
push
or
xor
push
les
adc
cmp
cmp
mov
xor
sbb
divb
jne,pn
mov
dec
dec
fisubrs
mov
dec
popa
inc
inc
xchg
lea
cmpsb
repnz
mov
mov
icebp
leave
cmp
sbb
cmpsl
cwtl
fs
push
mov
loope
xor
push
adc
mul
dec
movsb
movsl
jmp
hlt
mov
jge
mov
mov
and
add
cmp
cmp
jnp
cmp
cmpsb
and
mov
inc
push
pop
rclb
sbb
pop
sub
xchg
lret
sub
mov
inc
in
mov
cmp
push
xor
arpl
jae
mov
sahf
mov
and
mov
pop
pop
sub
stos
stos
inc
and
inc
sbb
cmpsl
test
mov
ret
add
jne
pop
sbb
jns
or
sub
mov
sub
sbb
jl
cmpl
mov
das
cmp
mov
repz
cwtl
dec
xchg
std
add
fcoms
in
out
sub
aam
inc
xor
xlat
loopne
push
adc
arpl
subb
cmpsl
mov
and
aad
cmp
jo
push
pusha
mov
sahf
aas
daa
cmp
ljmp
jg
outsl
leave
mov
push
notl
mov
mov
pushf
xchg
pop
mov
das
test
cwtl
daa
add
adc
pop
loopne
arpl
pop
gs
imul
xchg
popa
add
push
pushf
movsl
ret
nop
mov
icebp
repz
add
xor
enter
sub
fildll
jg
xlat
inc
mov
lahf
ds
add
xor
cmc
mov
enter
sbb
arpl
lds
add
pop
xchg
inc
inc
pop
mov
push
lahf
push
arpl
sub
cmp
test
jg
sub
jmp
pusha
cmp
sbb
arpl
cmp
arpl
or
push
movsl
les
inc
mov
fs
les
pop
nop
and
pop
mov
mov
add
sub
inc
jb
popa
cmp
loop
sub
ret
lea
enter
and
mov
call
enter
mov
cltd
ds
xor
ljmp
test
jo
pop
inc
xchg
mov
or
adc
and
jno
pusha
test
sbb
inc
sbb
add
push
sub
shll
loop
jg
cmpsb
adc
fcmovnbe
imull
movsl
dec
dec
jge
faddl
adc
sub
jmp
adc
popa
insb
push
es
jno
mov
sub
jge
mull
adc
jo
and
je
sub
test
push
and
mov
xor
jecxz
scas
xor
sbb
ljmp
jnp
in
dec
mov
xor
gs
xor
leave
xor
add
in
stos
push
jl
mov
xchg
cmp
leave
pop
mov
fstpt
lods
inc
stos
gs
movsl
sub
pop
mov
jne
fnstenv
pop
repz
ljmp
ss
xchg
add
lock
loop
mov
xor
inc
dec
insl
adc
push
aas
push
xchg
cmpsl
add
pushf
ret
pop
lcall
mov
mov
stc
test
cmp
push
aam
lods
mul
fs
pop
inc
ret
pop
addb
cmpsl
mov
and
xchg
and
insl
xor
ja
jae
stos
add
adc
sbb
inc
push
fwait
mov
push
pop
std
dec
leave
ret
sbb
movsl
jp
adc
and
call
inc
sbb
rol
cltd
enter
arpl
cmp
cmp
int
sbb
fistps
mov
test
cmpsl
or
sbbl
test
rclb
pop
outsl
test
imul
movsl
lcall
jp
loopne
cmp
mov
movsb
pop
ja
repz
mov
stc
aaa
sub
movsl
cmp
mov
notl
jl
mov
arpl
mov
jne
fisubrl
xor
dec
push
lock
fbstp
sub
movsl
sahf
mov
decl
cmpsb
pop
gs
push
mov
ret
or
xor
call
mov
cmp
mov
dec
and
in
cmp
fscale
jnp
lods
inc
in
ret
hlt
aas
or
cmpsl
nop
cmp
mov
dec
insb
sub
test
dec
xor
mov
lods
inc
pop
addr16
mov
imul
jle
inc
jno
sarb
int3
into
icebp
bound
sti
in
les
add
pushf
lds
lcall
adc
jmp
fldt
arpl
fwait
pop
gs
inc
jp
xor
outsl
push
mov
mov
ds
push
mov
or
mov
xor
or
vpmulhw
inc
stc
ja
lods
mov
mov
mov
pop
inc
cmp
inc
push
xor
mov
mov
mov
sbb
orb
mov
pop
mov
jmp
popa
adc
xor
leave
sub
aam
test
lds
ret
outsb
push
jg
jmp
push
inc
ljmp
stos
mov
lods
xchg
mov
mov
popf
inc
push
inc
xchg
xchg
cmp
sub
rcrl
mov
jmp
or
mov
aas
les
js
std
push
rolb
loope
cmpsb
pop
cmp
je
pop
sub
sub
ja
clc
popa
mov
jmp
xor
inc
sub
inc
and
xchg
shrl
pop
mov
arpl
dec
jae
shlb
and
and
movsb
arpl
divb
js
mov
leave
sbb
pop
cld
jo
arpl
push
lret
lods
xchg
hlt
in
enter
mov
mov
xor
xor
hlt
cmc
cmp
adc
cwtl
testl
in
sub
scas
jno
pop
push
or
in
xchg
sub
mov
fiaddl
mull
insl
pop
mov
das
jns
xchg
mov
pop
mov
lahf
push
xor
mov
orb
jp
mov
cmc
or
jb
fcompl
sub
mov
mov
jg
cwtl
mov
xchg
mov
inc
mov
sub
dec
add
lret
sbb
ds
imul
inc
icebp
jo
mov
ret
mov
int3
outsl
stos
bound
xchg
lock
popa
dec
inc
pop
push
cmpsl
mov
scas
adcb
or
repnz
repnz
int3
in
dec
jo
push
xchg
mov
mov
sub
sub
inc
mov
int
jmp
jl
sbb
lcall
push
bound
adc
and
das
sub
lcall
xorl
pop
jnp
dec
add
in
mov
sbb
shll
call
notl
mov
cmpsb
shll
pop
imul
xor
and
push
push
mov
jecxz
or
rcrb
jmp
jle
mov
pop
push
in
mov
xchg
gs
mov
fcoml
icebp
pop
sbb
inc
adc
outsl
int
gs
loope
or
lahf
push
lock
adc
mov
cwtl
push
or
imul
daa
xor
movsl
xor
in
and
test
cmp
addr16
insb
mov
add
mov
gs
add
mov
adc
and
stos
inc
jmp
mov
aam
and
jg
fcompl
cmp
dec
pop
sbb
dec
jl
or
mov
sub
lock
mov
pop
loope
sub
sub
stc
mov
data16
ret
das
insb
loop
mov
mov
mov
call
movsl
pushf
pop
inc
jmp
into
stos
xor
adc
jns
pop
mov
dec
cmp
mov
fwait
xlat
insl
mov
jmp
mov
test
xchg
cli
pop
cmc
mov
cmp
inc
in
fsubrl
mov
add
inc
in
adc
repnz
xchg
mov
sbb
mov
sub
gs
mov
mov
sub
bound
or
sub
int3
cmc
lods
dec
loop
les
das
mov
cmp
bound
xor
and
std
enter
ds
xor
lock
or
push
lahf
test
add
loop
repnz
ret
std
mov
ss
mov
adc
pop
inc
jmp
jg
cwtl
call
push
test
sbb
jmp
sub
call
mov
mov
inc
jmp
popa
xor
loop
jno
or
dec
jne
call
mov
xchg
movsl
dec
sbb
rorb
push
mov
mov
adc
daa
xor
insl
jmp
aaa
xor
imul
pushf
loopne
sbb
call
icebp
and
add
loopne
mov
pop
jns
push
stos
adc
xchg
sub
xor
adc
jmp
fwait
nop
dec
pop
movsb
addr16
and
mov
rorb
inc
cld
mov
inc
pop
popf
outsl
out
jl
cmp
push
out
mov
adc
sub
mov
dec
push
xchg
sub
dec
out
push
push
mov
cld
popa
cmp
rcr
pop
in
call
dec
push
neg
pop
daa
les
imul
popa
and
test
divl
and
mov
dec
int3
mov
or
in
outsl
jl
pop
sti
rorl
mov
inc
fwait
aaa
cmpsb
loope
pop
sub
lahf
and
cmpsb
dec
pop
cmp
repz
mov
inc
popa
sbb
inc
jnp
ja
mov
inc
leave
pusha
ljmp
pop
cmpsl
cmp
push
scas
int
sarb
sbb
xor
adc
insl
fwait
js
inc
xchg
inc
add
cmpsl
stos
inc
mov
mov
aad
hlt
aas
cmc
cmp
dec
icebp
xlat
daa
sub
sbb
add
mov
dec
jnp
cmp
into
dec
pop
dec
pop
or
enter
xchg
mov
mov
jmp
fcoml
cmp
int
stos
adc
cltd
jmp
je
enter
das
fidivl
mov
sbb
inc
xor
movsb
and
cmpsb
popa
cmp
mov
imul
pop
loope
in
ficoml
dec
and
addr16
push
dec
das
mov
mov
mov
cli
stc
dec
dec
test
ds
dec
dec
movsb
popa
xchg
xor
dec
test
push
adc
pop
mov
test
sahf
cmp
mov
inc
push
mov
jg
test
sarl
hlt
mov
inc
push
dec
push
mov
mov
xor
xchg
test
das
pop
call
mov
js
jne
lret
mov
add
in
push
fidivrs
call
lcall
mov
add
inc
mov
lahf
rol
push
shl
mov
out
and
mov
js
mov
sahf
push
mov
add
dec
fnstenv
insb
mov
push
stos
repnz
lods
mov
dec
mov
shrb
outsl
xchg
inc
cwtl
mov
xchg
arpl
mov
lods
cwtl
iret
test
sub
sub
not
bound
loope
rcl
addb
lret
pop
push
jno
arpl
and
or
shll
dec
or
mov
adc
rcrb
push
push
push
mov
mov
push
xor
mov
xchg
jmp
cld
pop
mov
pop
push
pop
xor
mov
pusha
mov
mov
dec
mov
je
push
cmp
push
xor
mov
js
dec
aad
mov
cmpl
stos
pop
push
cwtl
pop
push
jle
mov
add
cmp
bound
cmp
adc
mov
nop
in
dec
cmpsb
jae
and
lcall
andl
dec
movsl
jnp
call
in
aad
push
or
enter
cmp
sub
pop
insb
add
mov
lock
and
or
decb
mov
adcl
in
mov
addl
imul
in
dec
fwait
jmp
inc
or
sbb
cmp
leave
and
sub
xchg
xchg
cmpsb
cwtl
mov
sahf
inc
dec
push
sarl
mov
mov
imul
jb
mov
push
test
arpl
mov
mov
mov
pop
and
add
push
iret
fsts
mov
movsb
lods
insl
push
mov
mov
mov
in
inc
push
daa
and
xor
jmp
jnp
sahf
push
je
mov
insl
jmp
call
test
push
inc
add
xchg
mov
mov
pop
sbb
scas
adc
mov
inc
mov
push
add
xchg
mov
pop
and
push
mov
push
sub
mov
sub
pop
xorl
push
dec
cmp
pop
js
test
mov
and
test
xchg
xchg
push
mov
lods
jae
movsb
mov
and
sbb
mov
pop
or
mov
inc
cs
or
mov
and
test
mov
mov
clc
inc
bound
add
or
bswap
mov
sarb
mov
popa
pop
mov
test
add
cs
xor
dec
push
jmp
stos
cmp
mov
xchg
les
mov
mov
out
ds
test
mov
dec
loope
in
push
addr16
push
arpl
sbb
or
pop
in
mov
sbb
leave
lret
sub
mov
cmp
xchg
nop
enter
movsb
and
daa
pop
icebp
mov
mov
fidivs
or
movsb
mov
les
mov
pop
jnp
rolb
mov
mov
jne
xchg
add
and
inc
or
lock
dec
push
mov
sbb
pop
add
pop
jne
and
inc
stos
pop
mov
xchg
or
cmc
sbb
pop
mov
out
mov
leave
xor
xor
cwtl
fs
cmp
mov
mov
roll
test
inc
scas
or
xor
aad
popf
mov
sub
jns
sub
jns
or
cmpsl
repz
in
bound
xchg
dec
sub
aas
stos
enter
pop
mov
sti
sti
movsl
or
xchg
xorl
cmp
jno
ss
and
jae
shr
ja
imul
cmpsb
js
test
add
cmp
xor
lock
scas
imul
loop
mov
lret
adc
mov
mov
mov
push
dec
aad
lea
adc
ficomps
arpl
adc
mov
mov
xor
mov
es
cmp
push
fwait
adc
add
rcrl
daa
jns
jle
mov
out
data16
dec
push
and
mov
shll
popa
adc
mov
popf
aam
jae
inc
xchg
jo
int
mov
add
and
cmp
xor
jns
arpl
or
movsb
jne
xorb
inc
aas
pop
int3
push
ret
push
imul
arpl
lds
inc
inc
pop
jne
lcall
inc
pop
lret
mov
into
call
or
add
dec
clc
mov
fwait
or
cmc
inc
lock
fdivrp
lret
sti
out
mov
xor
sub
sub
int3
shll
fwait
mov
outsl
sub
cmp
add
sub
mov
les
cmp
mov
mov
xor
daa
xchg
and
push
lds
inc
in
mov
xchg
add
lods
pop
stc
pop
rolb
pusha
mov
clc
ds
cmp
icebp
mov
imul
das
cmpxchg
jp
sub
in
and
scas
shll
inc
les
fistpl
jne
scas
imul
daa
shll
arpl
imul
pop
jnp
sahf
lods
sub
sbb
xchg
inc
mov
xor
mov
call
dec
cmpsb
jg
pop
out
inc
outsb
xor
mov
int
mov
cmpsb
leave
mov
xor
xor
imul
adc
push
aad
test
cmc
mov
dec
ds
ret
inc
mov
dec
mov
lods
pop
ja
mov
mov
ret
mov
popf
popa
je
jl
cmp
push
gs
mov
jg
mov
adc
cmp
jl
jns
pop
mov
insb
inc
inc
adc
or
dec
pusha
xlat
jmp
leave
cmpsl
pop
mov
jp
mov
loope
cmp
ret
mov
jmp
movsl
leave
mov
movsb
adc
movsl
mov
dec
xor
xor
call
mov
int3
rcrb
ror
and
sub
jne
or
pop
js
dec
jp
mov
cwtl
xor
loope
add
pop
pop
shlb
jl
push
mov
mov
call
daa
mov
ds
and
cld
clc
jp
pusha
mov
xchg
iret
stos
cld
out
push
frstor
mov
push
mov
mov
repnz
add
pop
test
push
mov
xchg
dec
inc
das
add
xchg
mov
leave
int3
test
imul
and
mov
lds
pop
sbb
inc
in
test
and
lcall
xchg
test
sub
adc
das
movsb
arpl
clc
lret
fsubrl
shlb
outsl
mov
test
mov
sub
hlt
adc
aam
fidivrl
mov
dec
mov
pushf
xchg
scas
out
stos
jmp
or
mov
test
mov
in
push
loope
loopne
pop
add
sbb
push
dec
int3
and
and
nop
mov
pop
cli
jmp
in
test
sti
je
sbb
popa
pop
fsts
mov
test
lahf
xchg
pop
flds
pop
and
mov
arpl
jecxz
stos
lods
pop
imul
jns
and
andb
insl
add
mov
pop
push
cltd
fwait
lods
or
daa
lods
fs
cmp
cwtl
shlb
sub
pop
inc
daa
cmp
jo
dec
popf
mov
dec
pop
clc
mov
test
loope
pop
lods
int3
pushf
testl
jl
popa
fwait
cld
nop
inc
arpl
lret
daa
inc
mov
int3
adc
gs
mov
push
push
cli
aad
mov
push
mov
inc
out
xchg
stos
mov
push
mov
inc
pop
mov
nop
imul
jmp
pop
addr16
add
in
rcll
mov
shrb
pop
gs
fcoml
gs
sar
sbb
xor
jge
mov
mov
and
pop
vaddsubps
mov
xchg
push
shl
dec
popa
jbe
enter
xor
pop
cmpsb
or
ret
sub
mov
jmp
gs
xor
in
mov
cmp
sub
xor
scas
in
out
adc
or
gs
xchg
jnp
mov
ljmp
push
insl
fwait
and
cld
mov
imull
mov
rorb
dec
cli
mov
inc
dec
and
xchg
nop
arpl
int3
ret
test
or
mov
fmull
mov
adc
out
scas
inc
mov
sbb
mov
clc
roll
subl
imul
mov
jns
lock
cmp
out
xor
inc
push
mov
mov
xchg
fdivs
sbb
jge
mov
push
dec
inc
lahf
std
addr16
cmp
stos
subl
sahf
movsl
mov
stos
les
mull
add
arpl
enter
lods
xchg
fisubs
lahf
push
sub
sbb
mov
insb
jmp
push
pushl
mov
mov
sbb
push
inc
fiadds
stos
into
enter
mov
push
lock
jg
ss
das
cmpsb
mov
insl
jae
mov
mov
push
xor
pop
push
fstps
popa
xor
mov
push
mov
mov
movsl
adc
movsl
and
movsl
xor
or
and
lock
dec
cmp
mov
mov
rorl
shrl
loope
test
sbb
mov
sbb
mov
movsb
sbb
push
movsb
sbb
mov
sbbb
mov
rcr
mov
daa
mov
sbb
xchg
adc
cmp
sbb
inc
sub
fidivs
fcoml
sub
lret
enter
sbb
popf
lret
inc
cmc
mov
sbbb
push
push
add
nop
cmc
push
test
add
jp
xchg
jecxz
and
call
xor
jmp
xchg
subl
jp
bound
movsl
dec
cmpsb
sub
xor
xor
or
mov
push
mov
inc
fld
pop
pop
mov
ret
jp
or
movsl
faddp
adc
jno
mov
jecxz
mull
push
rorl
adc
inc
and
mov
inc
ret
jl
jmp
test
ljmp
xor
scas
and
ret
sub
jae
push
shrl
lea
adc
dec
mov
sarb
ja
or
loopne
test
mov
aam
cmp
lcall
pop
push
les
pop
dec
jmp
aaa
arpl
pop
jnp
mov
test
sbb
into
or
fistpll
imul
lods
lcall
lret
stos
test
push
loop
add
inc
add
inc
fldt
cmp
out
scas
test
xchg
mov
sub
xor
push
hlt
jno
lea
addb
in
lock
dec
and
lret
jge
push
lea
mov
xchg
sarb
gs
lock
daa
movsl
add
mov
movsb
daa
nop
pop
cwtl
dec
scas
popa
mov
mov
mov
inc
inc
hlt
push
mov
push
xor
push
sub
pop
jecxz
push
punpckhbw
lods
mov
pusha
jg
and
lods
stos
call
aad
ror
pop
aas
hlt
jp
adc
jmp
push
into
fimuls
insb
int3
clc
jmp
imul
rol
jbe
adc
subl
xchg
or
clc
pop
inc
or
in
fsubrs
mov
and
lcall
loop
outsl
xchg
shlb
mov
mov
and
std
add
and
jmp
test
push
mov
fdivrs
xchg
push
push
loopne
jmp
adc
jae
testb
cs
adc
pusha
sub
into
ja
push
add
dec
or
insl
leave
dec
jle
lods
inc
pop
xor
lock
fisubs
test
lcall
dec
mov
ja
sub
outsb
inc
pop
ja
mov
pop
fldenv
mov
stos
push
loopne
rcrb
inc
push
adc
add
push
js
or
mov
lods
testl
clc
fs
and
mov
imul
mull
inc
les
jp
rcll
shl
xor
aam
lret
sbb
add
or
push
mov
hlt
aaa
push
dec
outsl
rol
les
pop
pop
mov
shll
xchg
and
add
repnz
xchg
or
popf
daa
mov
andb
ss
in
mov
rcrl
dec
sahf
aas
adc
push
and
adc
ret
sub
out
xor
outsl
cmp
xor
jae
pop
arpl
jns
popa
popf
lret
mov
jmp
sub
pop
cmp
arpl
test
bound
push
inc
inc
shrl
stos
gs
add
out
shrb
pop
lcall
aam
aam
test
push
add
loopne
jmp
iret
ret
insb
and
cmp
pop
aad
inc
iret
rolb
cmpsl
cmc
inc
dec
pop
xchg
lods
pop
scas
inc
and
hlt
adc
lds
cltd
sti
aaa
stos
nop
mov
fsubrs
cmpsb
dec
pop
and
in
jle
decb
xorl
std
pop
sbb
xchg
ret
inc
sbb
mov
and
mov
ret
es
cmp
lea
mov
mov
push
mov
inc
inc
dec
jle
or
std
mov
and
lds
cwtl
push
and
inc
or
popa
inc
xchg
jl
mov
scas
adc
sahf
in
push
adc
es
push
mov
jle
int
cmc
and
mov
mov
stos
sarl
add
ds
dec
addr16
lea
push
add
mov
and
stos
fldenv
iret
xchg
clc
jae
daa
xor
mov
mov
xchg
les
fidivrl
sbb
jge
xor
lcall
fs
sti
sbb
test
fcomps
fwait
stos
sub
mov
fdivrl
pop
lods
shlb
stos
jle
mov
inc
gs
xor
cwtl
adc
outsb
repnz
push
jno
and
pop
sub
cmp
jmp
imul
popa
ss
jmp
ja
mov
lock
add
fwait
fs
sub
loope
call
out
mov
pop
pop
shl
shrb
jl
cmp
xchg
jmp
and
push
test
call
mov
mov
and
fnsave
sbb
adc
mov
int3
mov
adcb
adc
mov
or
decl
hlt
push
sub
push
xchg
sahf
jo
or
aaa
add
push
mov
jne
mov
imul
or
aas
arpl
aas
add
push
xrelease
cmp
in
fldt
mov
push
stos
lods
mov
mov
push
into
pop
fmull
pushf
aam
xchg
and
jmp
push
fadds
xchg
jbe
movsb
les
gs
mov
enter
scas
mov
in
lcall
lret
xchg
movb
inc
jae
fwait
test
inc
inc
movsb
sbb
sbb
mov
dec
repz
notl
mov
pop
fimull
xor
cmpsb
bound
dec
test
imul
or
mov
inc
dec
dec
das
mov
adc
les
data16
adc
cmc
jbe
xor
je
mov
cltd
add
push
xchg
adc
rclb
les
xor
adc
lahf
sti
lcall
leave
push
jmp
fsubl
pop
jge
cmpsl
xor
pop
lret
xchg
pop
aam
adc
cltd
jge
inc
lret
mov
sti
jbe
fwait
cmpl
fsubl
xchg
scas
das
xor
aam
jg
adc
inc
ret
out
and
cmp
jnp
cmp
mov
mov
repz
test
adc
lea
cmp
aad
xchg
sti
jmp
sarl
push
xor
push
shrl
mov
aam
imul
imul
stc
pushf
pushf
inc
mov
aaa
and
lahf
das
bound
mov
inc
xor
pop
lea
cmpsl
popf
sub
aad
fcomp
and
pop
insb
cmp
lahf
add
mov
xchg
sbb
sub
jp
data16
lcall
insb
push
jnp
sbb
dec
dec
push
and
xchg
adc
scas
mov
cmp
and
sub
leave
scas
test
mov
call
daa
sbb
mov
mov
mov
cli
sbb
mov
and
inc
pop
rol
mov
sbb
test
jmp
daa
imul
mov
adc
xchg
jae
popa
lcall
xor
stos
adc
mov
enter
mov
xchg
pop
in
dec
sub
sub
mov
xchg
test
pop
adc
ffree
aas
sub
ljmp
aaa
xchg
andl
lret
cmp
outsl
fnstcw
fsubrl
push
movsb
jbe
sahf
test
add
pop
jmp
stos
dec
mov
sahf
push
sub
dec
adcl
adc
cmp
jne
ds
and
stos
xor
pop
adc
mov
repz
jge
ja
sub
mov
enter
xchg
or
enter
shrl
jo
cs
or
out
inc
cwtl
repz
pop
and
lods
push
adc
sub
daa
loope
mov
pop
inc
jb
stos
mov
inc
flds
test
inc
cmp
pushf
mov
aaa
jo
mov
push
les
xor
pop
out
pop
ds
push
out
push
cmp
mov
jmp
xor
mov
push
xor
mov
pop
add
sti
jecxz
or
pop
loopne
imul
int3
mov
arpl
cmp
fcmovnu
mov
rcll
xchg
mov
push
mov
and
cld
sbb
xchg
mov
pop
xor
mov
xchg
inc
lret
cwtl
call
movsl
mov
xor
cwtl
pop
fcoml
inc
stc
push
pop
adc
dec
test
adc
cmp
mov
mov
insb
test
lods
inc
dec
or
sub
jnp
test
sub
lahf
outsl
mov
leave
stos
push
sub
mov
jmp
mov
xor
lret
jb
cmp
mov
ret
sbb
fdivs
ret
enter
mov
jecxz
ret
fldpi
dec
fildll
push
loope
pop
xor
test
fnstsw
xor
mov
rorl
pusha
mov
pop
add
xchg
mov
and
jmp
jns
add
mov
imul
in
xchg
shll
pusha
mov
or
scas
adc
loop
sbb
stc
and
outsl
sbb
es
int3
mov
add
mov
mov
jmp
js
test
cmp
in
rolb
pop
aam
sbb
pop
push
ljmp
pop
sbb
mov
or
lahf
add
push
adc
inc
jmp
or
pop
and
add
or
movsl
inc
lods
dec
mov
arpl
icebp
lds
mov
jle
mov
in
mov
dec
mov
add
mov
or
addr16
mov
inc
test
mov
prefetch
jmp
cli
cmp
sub
outsl
lret
out
push
mov
pop
aam
pop
aad
rclb
add
adc
outsl
test
clc
iret
mov
pop
movsb
imul
lock
jnp
out
loope
cwtl
xor
mov
inc
mov
iret
scas
int3
push
xchg
jmp
leave
cmpsl
mov
lods
jg
das
jns
pop
pop
inc
loope
inc
push
cmpsl
hlt
aad
test
shl
jmp
dec
add
mov
mov
add
and
jmp
mov
fldcw
jne
inc
mov
sub
aas
cld
rorl
addr16
mov
cld
sub
mov
fildll
push
jnp
popf
jg
jne
or
jmp
cld
andb
out
and
xchg
and
stc
sub
xchg
imul
rcr
jns
adc
xchg
mov
pusha
les
xor
pop
stos
mov
imul
loope
cli
jle
stos
mov
jno
daa
mov
enter
in
xchg
pushf
lods
and
lahf
fwait
mov
mov
mov
xchg
and
push
or
cmp
jge
scas
add
aas
and
bound
mov
push
movb
inc
sti
jmp
xor
movsb
and
add
rol
jnp
fldt
hlt
imul
add
or
sub
mov
loope
add
mov
cs
mov
and
fnsave
pop
mov
mov
and
dec
or
scas
jnp
leave
and
and
shlb
gs
push
push
push
mov
call
xchg
pop
pop
dec
out
pop
and
inc
movsl
notl
sbb
inc
mov
push
aam
mov
dec
cwtl
mov
jae
adc
popa
daa
lock
add
je
jno
dec
addb
adc
mov
movsb
lcall
pop
pop
mull
jns,pn
aam
test
pop
fimull
lock
sub
scas
adc
movsl
sbb
sub
jno
jg
imul
mov
and
call
xchg
pop
lea
fwait
test
ror
or
ja
imul
jns
sbb
push
mov
loop
inc
jb
stos
in
call
shll
jmp
addb
addr16
pushf
adcb
test
jne
lock
inc
xor
fstpt
or
mov
imull
mov
xchg
gs
daa
sub
dec
lods
lea
nop
imul
scas
inc
movsl
inc
and
push
adc
or
mov
sub
aam
sbb
pop
add
out
inc
cmp
pop
adc
fdiv
jl
mov
push
jmp
mov
sahf
test
sub
cmpsl
pop
stos
je
adc
mov
sbb
mov
jno
jp
mov
bound
adc
lock
fwait
gs
jge
sub
and
adc
jb
cmpsl
popf
es
mov
es
mov
ja
jge
cmpsl
sub
not
imul
pop
js
in
mov
mov
sbb
or
test
mov
das
mov
cwtl
jg
and
rolb
or
inc
xor
dec
xor
insl
aam
std
sahf
adc
adc
push
and
add
or
aam
fwait
dec
inc
sbb
mov
dec
in
jl
mov
mov
jne
cmp
mov
aad
andb
cs
jmp
inc
stc
mov
cmp
call
mov
jmp
fwait
lods
and
cmp
jmp
xor
cmp
pop
cmp
dec
sub
mov
mov
xchg
gs
popa
aad
xor
stos
xchg
sbb
jp
stc
jbe
loop
cmpsb
and
mov
dec
enter
push
leave
inc
sbb
sarl
inc
lock
lds
jmp
mov
loopne
mov
xchg
std
idivl
lock
lock
loopne
inc
into
add
and
bound
mov
add
mov
adcb
fildl
jle
xchg
add
fldt
mov
mov
shlb
mov
fsubrp
sbb
xchg
inc
hlt
in
int3
in
inc
sub
sbb
xchg
lock
daa
lret
mov
xor
in
mov
xlat
movsl
lret
shll
notl
pop
mov
jnp
dec
adc
xor
sbb
stc
shl
sarb
adc
add
sbb
mov
xchg
mov
dec
gs
mov
lods
dec
lea
test
cmpsb
pop
shll
xor
int3
sub
cs
jb
scas
in
test
or
mov
lahf
movsl
mov
ret
mov
pop
xor
inc
inc
dec
rorl
leave
popa
adc
mov
adc
push
gs
cwtl
add
addb
xchg
mov
dec
bnd
dec
jae
sub
jns
mov
jmp
sbb
sub
sahf
sub
pop
xchg
xor
test
popa
into
adc
cmp
dec
xchg
loopne
loope
mov
xor
xor
mov
adc
sbb
mov
loopne
shll
sahf
iret
sti
sbb
sub
int3
sahf
popf
popf
bnd
cld
cld
and
jo
mov
arpl
fnstenv
lods
pop
cmpsl
popa
idivl
cltd
sub
nop
push
testl
pop
notl
mov
lods
push
xorl
das
aad
push
std
movl
out
jo
mov
shl
movsb
lock
sarb
les
sbb
jmp
negl
lock
sub
pop
sub
jne
pusha
push
das
aam
addb
ds
or
xchg
mov
outsl
cmc
and
sub
dec
fsqrt
jae
jnp
inc
fstps
ret
mov
daa
popa
sbb
lock
imul
mov
dec
iret
addr16
xorl
cmp
inc
iret
xor
push
or
pop
jo
cmpsb
or
mov
mov
out
sub
jb
sbb
mov
rcrb
movb
sub
rorl
sbb
lods
lock
out
lods
add
mov
dec
cmp
or
mov
adc
inc
shrb
xor
gs
cmp
push
dec
pop
test
push
pop
inc
andb
jne
adc
push
and
dec
gs
push
popf
xchg
and
pop
test
inc
sbb
xor
mov
into
inc
insb
sbb
add
lods
push
jl
jecxz
xchg
mov
stos
divl
popa
push
sbb
mov
sub
mov
loope
es
movsl
jne
bound
or
orb
ret
sub
icebp
add
sub
pushf
mov
insl
lods
add
sub
mov
cmp
into
fisubrs
jl
outsl
sub
lods
push
shr
int
xor
test
pop
aaa
scas
mov
das
bound
jbe
ror
fwait
pop
sub
popa
sbb
and
push
and
sbb
cli
push
mov
jno
or
mov
shrb
cmpsb
lods
fimuls
aas
lds
push
mov
mov
movsb
jmp
lahf
cmpsl
testl
xchg
adc
or
gs
sub
sub
enter
sti
pop
or
or
mov
pop
or
or
shl
push
xor
mov
push
imul
nop
int
jbe
pop
aas
std
mov
jmp
add
jb
pop
add
dec
dec
divl
lds
sub
sbb
xchg
and
sbb
icebp
cmpsb
push
jmp
add
pop
pop
sub
push
outsb
mov
jmp
ja
aaa
dec
pop
push
jns
nop
mov
mov
sarl
les
adc
mov
xor
sub
sahf
roll
mov
and
je
inc
int3
cmp
cwtl
sbb
mov
cld
and
loopne
xchg
mov
in
mov
push
in
in
movsl
jns
gs
jl
into
inc
outsl
movsl
mov
xlat
mov
dec
test
adc
mov
inc
loope
mov
adc
pop
adc
ss
int3
dec
call
push
frstor
add
shlb
imul
mov
pop
popf
repnz
mov
or
pop
cs
movsl
cmp
daa
mov
pop
jns
sbbl
mov
fiaddl
es
mov
daa
lock
xchg
ja
pop
sahf
jae
push
cwtl
jne
dec
cwtl
jg
inc
stos
add
insb
pop
aas
and
or
roll
mov
sbb
xchg
mov
test
test
lods
scas
xchg
dec
call
test
fwait
test
mov
or
repnz
cmp
and
xor
imul
leave
dec
lea
sub
adc
adc
xchg
fs
mov
push
mov
push
xlat
das
mov
xchg
lods
nop
mov
pop
jnp
iret
clc
mov
push
or
sub
shrb
push
lds
cmpb
sbb
cmpsb
push
push
sbb
and
cmp
xchg
dec
or
jl
shrb
jle
cmp
mov
addr16
pop
cmp
into
pop
sub
pop
inc
imul
imulb
xor
lcall
cs
test
leave
stos
or
push
mov
add
cmpsl
cmp
add
sbb
mov
and
fwait
les
sub
mov
insb
xor
push
jae
cmp
pop
loope
fidivrs
mov
pop
cmp
scas
jp
mov
shrl
lods
xor
and
divb
inc
ret
cmp
inc
gs
dec
pushf
mov
or
xchg
cmp
loop
pop
cmpsl
push
jl
mov
les
xchg
dec
rolb
push
lret
add
fisttpl
ja
cmp
jmp
cmpsb
xchg
icebp
divl
imul
nop
and
pop
xor
outsl
dec
test
aaa
mov
push
lods
jecxz
arpl
inc
cmp
fwait
dec
jmp
shl
or
xlat
cmp
fadds
cmp
or
or
scas
ljmp
pop
sbb
push
mov
leave
xlat
into
sti
test
fidivs
addr16
enter
mov
addl
mov
sub
test
cld
inc
mov
push
push
aaa
jl
sbb
sub
fildl
js
cmp
cmp
mov
bound
add
ss
jae
push
dec
jb
fidivl
in
sbb
pop
push
dec
pop
mov
add
pop
push
dec
xchg
lea
and
cld
stc
and
mov
mov
and
pushf
jae
outsl
loope
pop
jmp
jns
cmp
cmc
jae
loope
icebp
jmp
dec
int3
xchg
xor
pop
arpl
jp
cmpsb
xchg
push
sub
popf
nop
cmp
or
mov
mov
xor
pop
ss
or
pop
inc
outsb
and
js
insb
pop
jmp
sub
inc
inc
xchg
loopne
in
adc
mov
push
sub
aam
lods
lret
sub
and
lret
sub
test
cmp
pop
dec
testb
rorl
add
pushl
and
cmpl
sub
jge
mov
and
inc
cwtl
fcomps
and
inc
imul
sub
aam
add
clc
testb
mov
adc
sub
fs
dec
aad
pop
sarl
jae
xor
call
shlb
jne
repz
pop
imul
sub
into
int3
jns
shl
movsb
inc
jmp
fwait
jne
pop
rclb
jl
imull
or
test
mov
sbb
mov
pusha
stc
mov
cwtl
int3
pop
jno
pop
test
sub
shlb
daa
pop
inc
dec
jne
xor
jge
mov
imul
nop
and
icebp
pop
rcrb
mov
dec
jl
into
mov
cmc
aas
and
cmp
mov
fbstp
mov
xor
cwtl
cld
push
and
aas
pop
pop
pushf
sub
adc
add
int3
ss
in
lods
push
cwtl
mov
imull
daa
mov
test
inc
dec
and
sub
push
clc
sbbb
rorb
lret
popa
and
xchg
inc
aaa
jmp
cvtps2pd
mov
cmp
mov
popa
push
sbb
movsl
jns
gs
jo
cmp
lock
call
pop
lret
mov
adc
test
fists
cwtl
out
xor
arpl
jp
mov
lret
inc
adc
sbb
lods
cs
inc
xchg
adc
jg
dec
add
adc
push
pop
mov
aas
repnz
daa
dec
mov
lahf
xlat
mov
ss
stos
enter
push
pop
push
frstor
mov
daa
dec
jae
icebp
sbb
negl
lods
jmp
repz
test
test
sbb
mov
sub
jge
sarl
cmc
test
jmp
xchg
imul
lods
in
jge
mov
andb
and
sub
or
dec
inc
push
nop
in
mov
fwait
mov
and
pop
sub
outsl
mov
mov
iret
out
movb
jne
jg
cmp
lock
cli
push
push
inc
rorl
jmp
clc
in
jecxz
loope
das
inc
imul
or
stos
dec
mov
lods
jmp
inc
xchg
sub
popf
mov
mov
add
inc
mov
push
add
icebp
imul
cs
imul
sub
jnp
xor
push
fcomps
popa
jmp
cmc
push
fcomps
cmp
mov
pop
pop
push
shlb
add
xchg
dec
subb
mov
das
inc
pop
xor
inc
testl
mov
cmp
mov
stos
mov
aam
in
dec
or
mov
addr16
or
or
movsb
add
in
mov
pop
cmp
aam
xchg
adc
out
lahf
pop
sti
outsb
and
mov
push
adc
inc
push
add
jb
pushf
mov
nop
add
popf
mov
jnp
pop
dec
mov
sbb
cmp
mov
nop
cmp
push
test
mov
fsubrp
in
rol
xchg
lds
sti
push
mov
push
push
dec
movsb
xchg
test
mov
les
sbb
cmpsb
jmp
pop
mov
or
mov
xor
lods
dec
test
jns
mov
mov
and
test
lret
pop
movsb
jge
imul
mov
sub
in
adc
lea
movsl
shlb
or
xor
jmp
lret
mov
aad
cmp
ficomps
test
push
push
test
sbb
pushl
mov
out
mov
jne
xchg
int
xor
popa
pop
and
movsl
idiv
dec
mov
mov
mov
mov
dec
and
mov
leave
and
shlb
gs
dec
mov
jnp
and
push
aam
ds
inc
fstl
aam
adc
xchg
mov
mov
pop
push
iret
mov
rolb
test
jbe
fwait
in
ja
dec
dec
scas
test
dec
pusha
dec
mov
jnp
push
jmp
dec
test
mov
lock
scas
fwait
cmpsl
testl
pop
icebp
inc
push
lock
and
xor
sbb
xor
mov
xlat
cmp
inc
inc
xchg
subl
push
lahf
popa
out
adc
sub
mov
test
jl
test
mov
jmp
mov
xchg
fmul
mov
lods
popa
ljmp
or
shl
xchg
in
movsl
mov
add
aam
out
add
sahf
jnp
andb
jg
adc
inc
lods
imul
subl
imul
jmp
je
push
xchg
mov
imul
icebp
lock
mov
addb
lods
push
not
call
dec
les
in
call
enter
loope
jns
mov
mov
popf
repnz
mov
cmp
gs
mov
pop
mov
lock
add
lock
arpl
mov
inc
rol
in
data16
or
xchg
adc
addb
cld
rorb
mov
jp
or
pushf
or
popa
nop
test
cmpb
xchg
sti
lods
and
inc
icebp
push
adc
jmp
inc
and
rol
xchg
movsb
mov
or
stos
sub
cltd
push
or
pop
rcl
push
lahf
push
inc
jg
cmpsb
and
ja
jmp
outsl
aad
push
and
loope
inc
and
test
mov
jns
adc
loope
lcall
loop
shrl
ret
mov
out
out
push
inc
in
mov
stos
stos
nop
insl
jl
loop
push
and
jge
mov
pop
aas
xchg
add
sbb
cmp
insl
mov
sub
stos
push
enter
in
adc
lcall
stos
xchg
loope
sub
add
fdivp
stos
aam
je
fldcw
rol
out
push
aas
or
or
mov
loope
bswap
xchg
js
add
loop
jge
fdivrl
popa
pop
or
dec
call
stos
movsb
sub
xchg
mov
negl
inc
xor
dec
push
movsl
enter
dec
mov
ret
or
mov
cld
or
add
jmp
add
xchg
leave
imul
fmuls
push
mov
jge
mov
insb
xorl
dec
sbb
imul
mov
fistpll
xchg
mov
rclb
repz
div
loopne
jmp
pop
dec
int3
dec
ja
test
es
pop
mov
mov
mov
and
idiv
and
or
ljmp
outsl
xchg
ret
pushf
lods
scas
mov
mov
add
lea
les
aad
test
add
mov
mov
dec
push
mov
pop
sbb
aaa
fisubrs
imul
xor
dec
addr16
pop
ds
push
das
inc
fildl
gs
inc
mov
and
xor
inc
pop
xchg
ljmp
sahf
mov
aaa
mov
mov
push
ja
or
cmp
divl
fisubrs
hlt
xor
in
mov
inc
stos
clc
mov
shll
test
jns
lret
jbe
xchg
notl
and
fs
lea
jp
mov
dec
cmp
inc
lcall
inc
adc
xchg
das
mov
mov
out
xchg
sbb
fwait
lret
sub
xor
movsb
and
out
jmp
add
cmp
stos
sar
imul
push
jnp
sbbl
lods
or
cmp
mov
ret
cmp
repz
icebp
aad
lock
rolb
mul
xor
xor
xchg
int3
in
push
sub
scas
mov
adc
lcall
pop
mov
stos
fnstsw
lds
div
adc
xchg
sbb
test
movsl
pop
dec
mov
leave
inc
aam
fidivrs
jo
inc
aam
int
lret
test
xchg
daa
sub
push
popf
push
shlb
int3
cmp
cmp
adc
test
adc
inc
mov
add
add
sub
adc
rcrb
inc
nop
cmp
sti
mov
mov
stos
mov
xor
inc
push
lods
mov
ret
clc
sbb
std
cmp
xchg
pop
stos
ja
and
out
mov
xlat
test
mov
add
xor
pop
mov
mov
mov
cmp
mov
cs
int
cmp
popa
or
sbb
ss
aad
mov
sub
push
adcl
data16
mov
inc
scas
or
mov
lock
sub
sub
nop
cmp
pushf
cmp
push
ret
mov
xorb
pop
mov
movsb
xchg
stos
loop
and
and
sbb
fcomps
xor
mov
add
into
mov
sub
add
sti
lcall
dec
in
lret
sbb
bound
into
sbb
sbb
mov
fidivl
xchg
lods
push
or
add
xor
mulb
jo
push
dec
stc
add
jnp
stos
cmp
xor
ljmp
sub
movsb
sub
pop
mov
or
stos
mov
mov
lcall
lahf
stc
mov
jbe
out
xlat
leave
cmc
add
pop
fwait
pop
dec
and
sbb
mov
ror
cmp
rorb
xor
cmp
xchg
fbld
outsb
enter
or
dec
xchg
mov
pop
dec
cmp
dec
stos
sub
pop
pop
negb
cmp
pop
mov
push
lret
loopne
addl
or
and
mov
dec
pop
pop
mov
jb
cmpsl
bound
stos
dec
xchg
sub
add
pop
adc
fdivrs
adc
push
ret
mov
mov
inc
pop
adc
dec
jg
enter
sbb
pop
imul
jne
mov
push
js
xchg
bound
mov
sub
in
gs
cmpl
lret
sarb
fsubrl
inc
scas
inc
and
xor
cwtl
mov
lock
inc
mov
cwtl
cwtl
mov
xor
adc
mov
je
ja
adc
loope
ds
stc
frstor
mov
ja
pushf
loopne
pop
inc
or
sahf
loope
rcrb
jne
pop
adc
pop
xor
push
pop
sub
testl
and
pop
sub
arpl
jp
popa
add
lea
mov
mov
add
dec
icebp
mov
cmp
jnp
xor
stc
imul
aas
push
in
mov
sbb
insl
mov
add
mov
inc
cs
aad
cmp
mov
scas
mov
cmp
cmc
or
cwtl
dec
outsb
mov
scas
movsl
enter
in
pushf
dec
pop
cmp
scas
into
aad
inc
imul
mov
xchg
jg
mov
or
inc
cmp
mov
mov
sarb
jno
mov
daa
mov
xchg
arpl
rolb
xor
xchg
jb
jns
aaa
add
lcall
stos
mov
jnp
mov
xchg
cmp
movb
aaa
sbb
and
orb
test
adc
pop
dec
mov
ja
gs
outsl
jmp
pop
sub
dec
lods
cmp
and
clc
enter
xor
sub
inc
sbb
aam
inc
fwait
notl
popf
dec
pop
sub
mov
loope
aam
xchg
dec
popf
add
shrb
jp
cmp
pop
test
add
lahf
aaa
mov
lret
fs
scas
negb
mov
cwtl
cmc
mov
icebp
repz
lea
or
inc
mov
nop
pop
push
mov
into
je
rcrl
add
xchg
test
int
inc
cmp
sbb
in
lods
push
sub
dec
adc
pop
lret
test
orl
mov
stc
jg
inc
lret
push
and
ss
arpl
loopne
das
lods
cs
xchg
clc
sub
stos
movsl
aam
stc
test
push
cmp
ficoms
adc
rol
add
pushf
add
xor
cmpsl
mov
enter
or
movb
je
sub
jge
adc
lahf
jg
mov
iret
call
and
inc
inc
sti
inc
mov
test
mov
cmp
lods
jmp
into
ret
sbb
push
cmpb
das
out
nop
cmp
xor
test
repnz
nop
mov
sbb
daa
jge
mov
loopne
mov
sbb
push
fisttpl
test
daa
scas
xor
js
xchg
clc
movsb
aam
call
jp
adc
jmp
lds
dec
cmpsl
stos
mov
xchg
outsl
jb
dec
adc
xchg
cmpsl
inc
test
push
add
jg
mov
dec
shl
jae
sbb
out
in
push
outsl
nop
invd
shl
jns
sub
jecxz
addr16
sahf
mov
mov
xor
lret
scas
clc
rolb
jo
inc
stos
jmp
pop
aad
and
mov
mov
and
lcall
leave
stc
xor
shlb
and
mov
push
mov
mov
jg
mov
into
loope
enter
inc
stos
lods
adc
divl
adc
clc
adc
test
dec
std
and
mov
jecxz
mov
xor
mov
adc
sub
mov
iret
ja
sub
lcall
mov
sbb
cs
pop
pop
ret
add
dec
jne
outsl
jmp
andl
mov
jne
rcrb
test
cmpsl
leave
movsb
sbb
test
inc
test
lods
mov
in
subl
movsl
pop
iret
stos
gs
mov
add
aam
inc
and
lock
add
push
dec
pop
out
mov
scas
inc
aaa
inc
in
pop
ds
ljmp
jne
mov
imull
xchg
push
movsl
push
dec
imul
shrb
sbb
or
imul
xchg
stc
dec
jno
aaa
jge
shll
adc
push
iret
push
mov
adc
repnz
scas
movl
test
into
push
popf
inc
inc
sbb
add
lea
pop
cld
cmpsl
xor
stos
push
pop
sahf
es
ljmp
popa
sbb
push
cmp
pop
mov
call
jmp
fwait
mov
jmp
mov
test
xor
xchg
dec
push
sbb
ffreep
std
pop
mov
cmp
push
test
pop
aaa
lds
sub
ficoms
dec
das
cmp
lods
repz
sub
jle
pop
das
or
fsubl
ss
push
fnstsw
xchg
jno
jo
imul
stc
lret
or
mov
inc
stos
ret
popf
insl
js
rolb
push
xor
sub
dec
lret
xor
lret
pop
test
jns
sbb
mov
adc
in
xchg
iret
lock
jl
cmp
xor
sub
mov
pop
xchg
clc
adc
cmc
jnp
repz
das
add
imull
test
lea
shll
mov
and
jno
xor
sub
or
inc
cmpsb
inc
mov
cmpsl
imul
inc
inc
mov
rolb
dec
loope
cmpb
int
pushf
jnp
cmpsb
jae
imul
xchg
ja
popf
call
ret
dec
pusha
xor
mov
insl
fwait
das
test
adc
xor
orb
xor
dec
rclb
inc
sub
es
cmpsb
xor
mov
mov
test
xor
lret
mov
loopne
sub
mov
inc
pusha
jl
movl
mov
push
lcall
jnp
add
pop
pop
in
push
xor
xchg
lret
add
lods
mov
pop
push
and
test
in
xor
cli
xor
pop
mov
sti
add
stos
sub
jp
les
dec
je
add
cs
push
push
cs
sbb
decl
cs
add
repz
es
or
cmpsl
imul
popa
cmp
in
sub
pushf
xchg
mov
mov
push
mov
push
mov
and
out
fsubl
lds
dec
mov
inc
mov
popf
cs
test
clc
mov
xor
divl
fwait
jbe
out
test
dec
fwait
mov
push
sbb
cmpsl
out
push
pop
push
ljmp
movsb
gs
cmp
leave
pop
cmp
xor
jmp
sbb
insl
es
shlb
popa
pop
xor
inc
fidivl
sbb
fwait
xchg
loop
stos
adc
mov
mov
pop
mov
xor
pop
test
add
sahf
mov
cmp
mov
hlt
cmp
pop
mov
mov
inc
xchg
adc
ja
adc
mov
mov
mov
pop
mov
and
mov
sbb
mov
push
mov
pop
adc
sbb
xchg
push
sub
stos
mov
mov
stos
and
jmp
adc
lcall
jg
imul
mov
dec
daa
ljmp
push
push
ret
and
subb
lahf
add
mov
popa
jmp
jmp
fsubrs
pop
fwait
orl
jnp
inc
or
adc
inc
stos
je
and
les
lahf
mov
and
ja
loope
add
jg
xchg
sbb
stos
sar
sub
mov
stos
inc
mov
xor
cmpl
inc
cld
mov
pop
in
imul
mov
mov
mov
movsl
pop
xchg
sbb
dec
pop
mov
sbb
les
clc
sub
push
mov
push
dec
enter
sti
xor
div
ljmp
sbb
inc
jb
stos
stos
aas
negb
in
cmp
add
popa
push
mov
jno
aam
cmp
negb
out
addr16
inc
fnstenv
mov
add
mov
movsl
jl
sbb
lahf
sub
pushf
mov
movsb
movaps
jne
hlt
fs
pop
and
sbb
or
pop
notl
rcll
pop
mov
test
jmp
jno
popa
pop
gs
pop
sub
mov
adc
dec
lret
inc
inc
sbb
sar
pop
jno
jl
add
push
pop
daa
jno
cwtl
pop
es
mov
addr16
fsubrl
inc
cmp
xor
cmp
aas
shr
pushaw
test
jno
into
lods
pmulhw
push
pop
mov
popa
cmp
push
jns
cld
mov
mov
cmpsl
int
loopne
cld
mov
aam
cmp
xor
testb
sbb
and
movsl
rorl
mov
and
mov
xchg
movsl
rorl
cmp
stos
sub
add
sbb
dec
sbb
xor
jb
cs
xlat
mull
xchg
outsb
xor
stc
jae
les
pop
fcomps
mov
pop
sbb
mov
bound
xchg
dec
sub
les
add
movsl
int3
sbb
xor
push
jne
sbb
outsl
outsb
pusha
xchg
test
lahf
test
push
stos
ret
in
cwtl
aas
pusha
xor
pop
pop
jl
movsl
sub
rcr
gs
mov
xor
and
xchg
mov
mov
call
xchg
mov
jecxz
sti
xchg
and
sub
hlt
jno
add
out
sti
loop
les
mov
aas
dec
into
pop
mov
movsb
fdivs
pusha
cmc
jl
aam
imul
idiv
into
bound
sbb
pop
sub
sbb
aad
adc
test
pop
fwait
sub
addr16
enter
mov
test
dec
mov
mov
movsl
stc
xchg
mov
pop
test
rcrl
stos
les
fistpl
das
xchg
mov
icebp
ss
dec
cmp
lds
sub
repz
scas
rorb
loope
or
push
jp
ss
sub
sbb
and
pop
pop
sbb
xchg
cmc
cs
rorb
lcall
stc
push
pop
ss
lods
call
mov
sub
or
mov
cmp
or
lods
hlt
das
nop
inc
fs
inc
nop
daa
cmp
or
aaa
fs
movsb
sbb
nop
mov
sub
mov
cmpsl
pop
incl
xchg
insl
inc
or
test
mov
pop
mov
mov
or
repz
shrb
push
rcrb
push
enter
ret
cmp
ds
lret
jl
pop
mov
stc
sub
and
mov
mov
dec
repz
insb
aas
call
mov
dec
rcrb
or
pop
sbb
sarb
out
sub
sbb
mov
addr16
adc
sub
mov
popa
ljmp
pop
shrb
hlt
sbb
push
movl
or
mov
stc
sub
stos
inc
outsl
adc
rorb
movb
ror
xchg
pop
nop
lock
or
outsl
out
jmp
cmp
lcall
jno
lcall
daa
bound
jae
testl
aaa
stc
mov
aam
sub
mov
mov
push
jle
cmp
mov
xor
mov
xor
push
jno
ja
mov
loope
hlt
mov
jmp
or
popa
notl
add
cmp
int
mov
loope
or
xchg
mov
mov
jb
mov
push
inc
add
sti
cwtl
mov
adc
lock
push
arpl
sbb
push
cmp
testl
or
fs
pop
ret
subb
pop
mov
xchg
loop
ret
inc
stos
pop
fisubs
sub
mov
jno
in
push
xchg
inc
mov
xchg
test
dec
push
and
mov
cwtl
fcmovne
lock
or
cmp
into
or
dec
inc
jecxz
sub
call
call
ljmp
call
push
sub
mov
int
fsubl
pop
sbb
sbb
mov
scas
push
fimuls
outsb
xchg
sarb
ljmp
mov
adc
mulb
xchg
xchg
mov
mov
xchg
jge
pop
pushf
cmp
ret
leave
nop
mov
sub
sub
imul
gs
xor
icebp
xchg
int3
lahf
add
mov
mov
push
cwtl
add
sub
push
test
sub
clc
add
mov
xor
daa
inc
in
inc
scas
mov
ja
fwait
jae
xchg
or
shrl
and
sbb
jp
sarb
int3
rclb
into
push
mov
jecxz
mov
adc
push
test
sub
dec
cmp
popa
cmpsb
cmp
mov
push
loop
outsb
lahf
dec
movsl
mov
scas
or
icebp
dec
and
das
scas
add
mov
add
pop
fidivl
cmpxchg
xchg
sbb
lods
aam
insb
add
fcmovb
lds
jecxz
xchg
in
mov
das
out
xchg
lods
ret
xor
adc
and
insl
cmp
rorb
inc
iret
jno
add
mov
xchg
fcmovne
shrb
jo
test
cltd
fsts
push
pusha
int3
mov
aaa
aad
xchg
and
or
movsl
cmp
lods
imul
mul
shrb
lods
rolb
lcall
js
call
and
jo
xor
inc
mov
dec
cs
xchg
leave
xor
inc
sbb
daa
adc
cwtl
cmp
popa
sub
lods
push
enter
rol
mov
gs
mov
add
cs
shll
jmp
inc
sbb
adc
cmp
sbb
mov
mov
movsb
and
mov
sbb
vmovdqa
cmp
test
lea
pop
mov
xor
add
mov
mov
mov
jb
movsb
mov
pusha
nop
jmp
call
je
or
int
ljmp
add
mov
faddl
ljmp
scas
xchg
or
sbb
mov
mov
lret
stos
lods
jo
or
jge
jmp
jno
jg
fimull
jns
test
imul
jb
inc
sahf
push
jmp
mov
leave
aad
mov
mov
adc
add
jne
cltd
add
in
mov
sbb
push
movsl
ret
jo
mov
shrb
mov
jo
out
xchg
dec
and
lret
or
icebp
enter
pop
lcall
sbb
shl
lret
in
add
out
inc
int3
dec
or
jmp
adc
sbb
cmpsb
adc
lods
adc
cmpsl
test
enter
xchg
mov
and
xchg
jns
js
cmpsl
xor
addb
lahf
shrl
inc
inc
fwait
cmp
adc
xorb
insb
pop
fimuls
mov
les
aas
mov
gs
shrb
orb
bound
in
insl
insl
or
mov
inc
push
js
outsb
mov
call
fs
testl
mov
pop
xchg
imul
jno
push
in
inc
test
jmp
ret
es
imul
mov
or
pushl
das
mov
sub
movsl
inc
ret
das
adc
sub
mov
pop
out
jnp
mov
in
mov
dec
das
mov
dec
les
mov
jl
insl
mov
mov
xchg
test
sub
inc
stc
adc
inc
jae
call
test
pop
or
jge
mov
out
mov
add
lods
dec
inc
mov
dec
jnp
test
or
bound
addr16
and
xor
dec
fbld
int
jmp
inc
bswap
mov
cmpsb
ja
adc
out
jg
sub
gs
mov
and
fstps
mov
inc
dec
dec
test
fmull
test
jnp
aad
dec
pop
add
mov
jnp
jo
mov
cmp
adc
xchg
cmpsl
cmp
bound
mov
andb
fimull
faddl
jns
sti
testl
push
sub
and
movsb
jmp
movsl
stos
sub
jl
cmp
mov
or
mov
jl
into
fildl
frstor
jno
xchg
mov
adc
notl
in
gs
mov
or
cmpsb
sub
into
xor
cmp
arpl
into
cmp
stos
mov
ret
out
mov
pop
cs
sti
insl
jb
push
je
pusha
add
test
mov
mov
test
loop
jne
insl
and
xchg
xor
or
mov
push
xor
into
das
fwait
movsb
push
cmpsl
mov
jns
mov
leave
outsb
sub
dec
ja
fbld
jmp
mov
pusha
arpl
aas
icebp
lcall
cs
movsl
negl
fwait
ret
and
push
arpl
xchg
cmpsb
cmp
scas
mov
push
mov
xor
xchg
push
pop
mov
movsb
lods
insl
push
mov
jl
and
mov
and
imul
lods
mov
dec
lds
call
sbb
jmp
pop
mov
jnp
fwait
cs
test
pop
dec
call
or
outsb
mov
push
inc
outsb
sti
rcrb
and
in
stc
cmp
adc
and
sbbl
cmc
cmp
cmpsb
adcb
ret
xchg
jmp
mov
mov
xchg
cltd
sub
inc
xorb
data16
inc
adc
cmp
lods
or
fwait
dec
mov
add
dec
jmp
mov
cmpsb
enter
imul
addl
lea
push
imul
test
js
mov
rcll
mov
daa
icebp
imull
sbbb
loope
xor
lret
mov
loope
or
cmp
in
pop
pop
out
jg
pusha
mov
pop
jmp
in
pushf
mov
cmp
lds
insl
les
aam
aas
stos
and
test
cmp
push
loop
push
jno
rcrl
mov
inc
pop
and
mov
inc
cmpsl
cmpsl
ret
dec
cmp
inc
insl
rcll
inc
popf
into
jbe
lret
or
js
inc
sub
push
xor
push
push
aam
das
test
mov
cmpsl
lea
and
testl
jmp
loope
outsb
dec
push
jecxz
xor
and
xchg
enter
fwait
aam
xlat
stc
jmp
inc
into
mov
lret
int
lret
pop
and
adc
cs
iret
xchg
add
test
shlb
jbe
dec
pop
cmp
push
jno
es
fcoml
jl
popa
mov
dec
dec
xorl
cmpsb
jns,pn
daa
insl
cwtl
jae
xchg
dec
cmp
add
inc
mov
gs
aaa
movb
pop
inc
and
leave
or
add
in
andl
mov
aad
repz
mov
loope
sti
push
pop
ljmp
fs
xchg
jge
mov
stos
push
push
pop
xor
in
mov
dec
es
negl
pop
sbb
mov
sbb
cmp
pop
vshufpd
push
ret
mov
popf
adc
imul
lods
clc
dec
xchg
stos
lods
xchg
jge
lods
pop
mov
ss
cmp
int
pop
sub
sub
pop
nop
dec
aam
in
lods
sbb
pop
sarb
aaa
pop
rol
in
add
stos
and
inc
cmp
sub
mov
xor
cmpsl
ja
xchg
repnz
shll
imul
xlat
add
sahf
or
cwtl
cmp
xchg
out
rorl
fbstp
pop
mov
and
lods
lods
jg
test
pushl
mov
outsl
dec
mov
testb
jecxz
stc
mov
jp
push
stos
enter
into
mov
mov
mov
dec
jno
push
test
push
fwait
rcr
and
inc
sarb
addb
sub
popa
ret
fwait
sbb
inc
dec
adc
fstps
addl
aaa
jmp
jmp
dec
pop
mov
add
inc
sbb
cli
stos
fs
dec
loop
enter
sbb
cld
jg
xchg
cmpsl
movsl
adc
dec
mov
lahf
lods
mov
shlb
mov
jl
imul
bound
arpl
divl
icebp
call
mov
sbb
mov
pop
in
mull
pop
pop
inc
pop
adc
or
andl
mov
jmp
mov
movsl
inc
lret
adc
sarl
xlat
xchg
lds
pop
pop
fwait
sub
adc
mov
pop
pop
and
push
cmc
mov
mov
js
pop
cmp
mov
movsl
seta
iret
ds
xchg
fsubl
insl
aad
out
inc
lods
cmp
lods
mov
aaa
fidivrl
jmp
ror
jae
sub
stos
leave
cmpsl
fnstsw
cmpsb
cmp
and
adc
mov
mov
add
inc
sub
dec
lcall
data16
sub
jecxz
lret
xorb
xchg
cmp
inc
popf
push
inc
jbe
cmp
cmp
cli
pop
add
and
jl
jp
push
test
mov
dec
movsb
pop
jle
sub
xchg
inc
faddl
jmp
popa
push
dec
scas
inc
xchg
sbb
adc
sbb
mov
sbb
ljmp
sub
sbb
test
lahf
xor
lret
jae
inc
int3
push
lock
imul
loopew
dec
or
push
push
roll
mov
fs
pop
push
test
ja
sti
push
pusha
lock
lods
stos
pop
gs
ja
xchg
movb
fwait
inc
add
or
daa
imul
cmpsl
and
mov
scas
fnstcw
inc
fisubs
and
sbb
jmp
add
loop
dec
mov
mov
xor
sub
outsb
fsub
pop
ja
jns
push
fwait
movsb
sbb
fst
push
mov
aaa
arpl
mov
inc
cmp
mov
push
pop
dec
pop
add
scas
jge
or
into
ret
test
mov
dec
and
add
mov
in
out
aad
inc
outsl
test
dec
imul
int
incb
iretw
mov
mov
pusha
inc
xor
xor
adc
sub
nop
inc
ds
fsubs
cld
mov
imul
pop
jbe
in
movsl
pop
inc
xor
int3
jge
dec
add
jle
ljmp
jmp
insl
scas
dec
aas
rcll
xor
aaa
pop
pop
test
xor
pop
or
mov
test
shrl
loop
add
jmp
nop
mov
or
and
adc
lea
in
mov
jp
mov
jle
xchg
daa
sub
into
mov
or
pushf
into
popf
out
out
bound
push
loope
iret
fsts
inc
lcall
insb
pop
jae
mov
jge
inc
std
mov
fwait
mov
int3
sbb
pop
push
cmp
mov
push
xchg
sub
out
stc
jmp
lock
mov
shlb
sbb
adc
add
lret
shlb
cmp
loope
in
cmp
cmp
inc
inc
sarb
insl
pop
mov
lds
fcoml
pop
sub
dec
movsl
push
es
mov
ja
lods
imul
mov
mov
data16
shrb
fwait
test
pop
mov
iret
clc
stos
fstpt
neg
sarb
loop
sbbb
punpcklbw
push
stc
jge
add
mov
fsts
addr16
jmp
int
xchg
jl
or
mov
stos
bound
divl
dec
or
add
pop
int3
xor
aaa
insl
xor
in
andl
gs
mov
shlb
sbb
adc
jge
aam
adc
into
in
int
adc
cld
test
sbb
pop
mov
es
jmp
pop
mov
xlat
push
test
lock
pop
inc
sub
cmp
adc
pop
sub
mov
mov
insl
rorb
test
xor
or
imul
into
push
mov
jl
xor
mov
les
ja
or
pop
or
pop
cmp
test
cmp
sub
cmpsl
popa
ret
adc
push
mov
test
popa
xchg
inc
aad
call
dec
and
or
outsb
mov
mov
mov
ja
xor
mov
aam
mov
push
popf
adcl
mov
and
pushf
xchg
adc
xor
xchg
ficoml
pop
in
and
mov
ljmp
push
adc
add
xchg
je
stc
cs
push
les
ljmp
cli
pushf
outsb
mov
push
aam
cwtl
clc
jb
dec
ds
lea
mov
add
add
push
xchg
pushf
test
jns
sub
xlat
jge
sub
adcb
andb
add
and
add
mulb
push
rcll
mov
ljmp
jo
dec
iret
arpl
mov
mov
push
fdivrl
iret
mov
jmp
rcl
push
into
jecxz
mov
cmpl
das
push
fsubs
lret
add
and
nop
shll
pop
xor
push
aaa
jno
push
das
jge
ja
mov
adc
mov
hlt
fwait
test
stos
mov
adc
aaa
sbb
and
cmc
and
bound
cmp
mov
dec
xchg
mov
sub
cld
mov
fdivs
mov
mov
inc
add
push
pop
xlat
inc
into
mov
mov
rcll
and
and
rcrl
jns
popw
scas
pop
iret
mov
mov
sbb
adc
test
mov
dec
xchg
fstps
cmpsb
fstps
pop
sub
ljmp
mov
shrl
mov
sub
mov
inc
push
in
fmul
movsl
dec
or
in
and
scas
inc
sub
shll
sub
and
or
mov
mov
bound
sbb
rcll
lock
mov
enter
pop
mov
xchg
sub
cmp
repz
test
xor
shrb
push
mov
jmp
aam
call
dec
push
jmp
stos
push
push
popf
pop
mov
stos
sarb
ret
add
sbb
mov
and
sbb
xor
mov
jmp
fwait
lcall
testl
pop
push
mov
test
cmpsb
jle,pt
js
popa
adc
mov
enter
sbb
mov
mov
xor
add
push
stc
add
dec
adc
dec
sbb
push
fistpll
dec
mov
lds
jns
bound
xchg
negb
fisubrs
call
hlt
mov
pop
mov
mov
cmpsl
pop
pop
or
imul
inc
leave
sub
ror
neg
xor
pop
sub
pushf
push
mov
andl
imul
inc
nop
pop
mov
clc
sbb
cmpl
sub
mov
mov
lahf
inc
add
xor
idiv
pop
dec
push
add
add
les
mov
rcrb
scas
rclb
inc
push
mov
push
add
les
sub
mov
incl
adc
ljmp
cmp
popa
in
dec
mov
jne
pop
pop
sbb
sub
mov
ret
outsl
mov
or
fcmovnbe
xchg
cmp
mov
xchg
add
cli
jmp
loope
add
xchg
test
sub
mov
sbb
testl
lret
mov
aad
dec
sbb
mov
mov
aad
leave
xor
or
cld
adc
test
cmp
mov
cli
je
sti
xor
push
pop
adc
jge
pop
cmpl
jne
mov
mov
test
insb
dec
dec
cld
inc
aaa
cmpl
mov
jmp
cmp
mov
cwtl
mov
jne
fistpl
mov
scas
shlb
mov
push
pop
aam
dec
adc
push
addr16
jno
loop
test
popa
mov
adcl
fwait
outsl
mov
std
stos
mov
lret
sub
imul
aam
lcall
out
insl
dec
data16
popa
dec
lods
movsl
add
inc
adc
fstps
dec
cs
stos
pusha
pop
mov
mov
and
mov
mov
shrb
mov
xor
add
mov
mov
mov
xor
mov
out
cmp
lahf
mov
pusha
lret
scas
loope
mov
push
and
nop
clc
push
negl
mov
movsl
sbb
or
or
ret
jle
push
jecxz
mov
pop
mov
data16
xor
cli
jno
call
movsb
push
mov
mov
add
or
call
ret
push
cwtl
pop
or
push
cmp
mov
repnz
mov
into
inc
xchg
bound
sahf
gs
cmp
decb
pusha
mov
jbe
jge
pop
movsb
adc
addr16
dec
mov
sbb
or
mov
cli
push
aas
in
fwait
or
pushf
xor
mov
mov
lcall
shl
outsb
xor
and
dec
shr
mov
dec
stos
and
pop
push
sbb
sub
jbe
mov
bound
xor
mov
jns
push
xchg
jno
cmpsl
pop
insb
loope
cmpsl
adc
aaa
push
pushaw
fisubs
cmp
shrl
in
inc
shll
aad
mov
fwait
adc
inc
or
outsb
pop
inc
movsl
jae
shrb
jmp
call
sar
pop
repnz
popl
cmpsl
pop
movsl
mov
xor
jmp
outsl
cmpsl
or
stos
in
add
xor
testl
inc
cmp
out
outsl
into
scas
jbe
int
mov
stos
pushw
insb
jnp
in
movsb
mov
sub
cmp
rclb
add
add
add
push
cmp
pop
mov
add
sbb
lahf
jo
aam
jmp
int3
movb
lods
dec
lea
leave
loopne
pop
subl
daa
add
xchg
cmpsb
jmp
and
sbb
cmp
in
mov
jo
cmpb
bound
aaa
cmp
add
mov
cwtl
ss
in
pop
push
rcrl
es
clc
aam
shr
fistl
or
lods
lea
sbb
cs
shrl
mov
inc
loopne
mov
movsb
out
int
jmp
jo
adc
inc
push
sbb
pop
mov
scas
leave
cmp
inc
pop
dec
cwtl
mov
push
mov
repz
outsl
cmp
std
loop
call
jmp
cwtl
mov
xchg
cmp
add
int
cmp
ficoml
mov
mov
cmpsb
cmp
mov
sti
push
call
mov
fbstp
shlb
push
enter
jl
ds
cmp
gs
fistpl
shl
jge
cmp
fnsave
mov
sbb
push
dec
aas
les
lahf
mov
cmp
jecxz
imul
cmpb
hlt
jae
inc
movsb
mov
jecxz
inc
cmp
jb
xchg
dec
aaa
mov
out
jo
mov
mov
xchg
call
pop
or
in
cwtl
mov
adc
cwtl
iret
mov
mov
jg
xor
adc
arpl
dec
stos
ja
push
mov
leave
idiv
push
xor
outsl
cmp
inc
and
xchg
dec
cmpsb
or
pop
sub
cli
les
push
inc
add
cwtl
aaa
cmp
cmp
mov
inc
sub
lret
scas
and
mov
rclb
fwait
mov
cmp
or
mov
jae
mov
hlt
adc
mov
cmpl
cmp
xchg
scas
in
fiadds
cmp
fbld
int
cmpb
imul
dec
out
mov
aam
movsb
mov
pop
fsubrl
or
mov
inc
pop
lcall
xchg
or
mov
ds
xor
insl
cmp
mov
cmc
jecxz
or
mov
dec
cltd
pop
jae
leave
lahf
and
outsb
stc
fldcw
pop
subb
inc
imul
jmp
cltd
inc
stos
mov
push
scas
sti
pop
jne
and
in
mov
rol
flds
repz
mov
popf
gs
mov
xchg
cld
in
imul
pop
enter
add
push
mov
fsubl
mov
sbb
sub
in
mov
dec
gs
dec
xchg
call
adc
add
pop
aaa
cmpsb
fldcw
movsl
inc
mov
cmp
dec
add
inc
gs
cld
xchg
and
arpl
add
xchg
inc
pop
pop
mov
cmpb
test
sbb
or
and
cmpsb
fcmovne
pop
pusha
inc
mov
nop
inc
mov
jo
and
lea
mov
in
lock
push
push
pop
dec
aad
fcoml
pop
jg
push
inc
fimull
movsb
sub
pop
lock
les
scas
mov
sti
gs
imul
outsl
mov
adc
mov
sbb
pop
adc
mov
pop
cmp
or
xchg
les
xchg
pushf
xchg
xchg
movsb
sub
xchg
ret
inc
and
inc
lock
jne
repz
fidivrs
inc
lcall
arpl
fisttpll
test
xchg
movsl
or
mov
push
test
dec
mov
pop
mov
and
div
xchg
adc
xor
cmp
or
xchg
fcompl
stc
pop
mov
lds
mov
xchg
cmpsb
push
add
call
and
sbb
testl
call
jne
dec
mov
push
inc
lret
push
mov
sbb
popa
adcb
out
inc
movsl
cmpsb
cwtl
or
and
addb
test
lods
mov
cmpsl
aas
mov
pop
pop
jmp
insb
sub
hlt
pop
xor
cmc
push
xor
sbb
inc
mov
les
sbb
lcall
loope
daa
jne
loop
ret
ret
push
inc
inc
sbb
jmp
cmp
push
jae
mov
xchg
nop
loop
loopne
and
cs
jge
adc
push
mov
push
cmp
mov
idiv
mov
jmp
adc
sub
dec
mov
push
icebp
rcr
pop
ss
stos
and
jno
stos
inc
fs
testb
push
pusha
fstpl
leave
loop
jae
xchg
or
jb
sub
add
mov
sub
insl
movsl
xor
mov
imul
sbb
add
cld
movsb
jmp
mov
xchg
mov
cltd
pop
sub
jae,pt
jg
lret
or
outsb
inc
jl
and
adc
sbb
imul
ja
jle
in
aam
testl
xchg
cmp
xchg
inc
ja
push
adc
imul
mov
stos
test
stc
add
push
stc
push
int
cld
rclb
out
shll
lods
sarb
dec
xchg
cmp
jmp
mov
mov
xor
mov
test
mov
leave
inc
lret
stc
testl
xor
and
pop
mov
xor
add
out
dec
lods
cmpsb
push
xchg
mov
jns
jge
in
mov
mov
mov
mov
inc
cltd
or
xchg
movsl
mov
fnstenv
ljmp
mov
inc
in
and
and
std
lods
jg
cwtl
adc
mov
cmp
jmp
sbb
test
fsubrl
test
data16
movsw
jge
cli
mov
mov
mov
daa
mov
fsin
idivl
sbb
sub
xchg
std
jnp
fwait
jbe
pusha
adc
cli
and
push
add
push
and
inc
dec
xchg
adc
dec
jmp
sub
stos
mul
sbb
out
mov
jmp
mov
iret
mov
xchg
adc
repz
xchg
cmpsb
inc
std
fiaddl
aam
add
inc
pop
cmp
push
stos
dec
jns
inc
dec
mov
stos
shlb
add
add
xchg
int
dec
imul
add
stos
xchg
mov
xor
pushf
mov
inc
enter
ret
adc
jae
push
ja
enter
cmpsb
sub
mov
sbb
ja
sbb
bound
jmp
mov
loopne
dec
cmp
stos
daa
push
lock
dec
mov
jecxz
jmp
sar
pop
add
fcom
jbe
in
call
mov
adc
ror
pop
ret
mov
xor
pushf
outsb
cmp
shl
jb
addr16
gs
jg
xchg
aad
mov
pop
stos
stos
out
cmp
loope
jno
pop
xor
inc
jmp
jp
nop
cld
sub
lods
pop
ljmp
pop
mov
pop
in
rol
cmp
outsl
jmp
lret
inc
aam
das
jmp
pop
test
lock
pop
rorl
shr
and
mov
and
inc
rorl
sub
mov
cwtl
xor
mov
xor
test
dec
out
xchg
pop
rcl
adc
push
pop
imul
pushf
sub
jecxz
stos
imul
ljmp
into
dec
inc
stos
xchg
pop
mov
fwait
xor
and
movsl
dec
push
out
mov
es
iret
dec
xor
xchg
lret
orb
cmp
and
cwtl
inc
incb
push
call
pop
lcall
pop
adc
push
lcall
mov
mov
or
stc
sbb
lret
jle
ficoms
imul
stos
adc
stos
cmp
jg
scas
movsl
daa
lahf
inc
mov
pop
adc
stc
mov
mov
adc
push
fsubr
gs
nop
aaa
cmpsb
aaa
mov
push
mov
dec
inc
and
cs
aaa
mov
jmp
popf
cmp
test
mov
sbb
lds
adc
mov
cwtl
jne
icebp
sahf
sbb
mov
jp
adc
mov
mov
notl
adc
inc
jmp
jecxz
xchg
outsl
dec
out
mov
xor
scas
and
aam
dec
imul
imul
inc
push
test
jne
adc
movsl
repz
push
aas
xchg
push
and
cmp
mov
stc
sbb
mov
xor
leave
mov
imul
aaa
and
mov
dec
xchg
lock
gs
adc
or
adc
sub
pop
xchg
xor
mov
gs
lods
gs
sbb
jnp
popf
ja
fstl
enter
mov
sbb
cmp
imul
add
lods
cs
xor
lret
and
jbe
popf
push
stos
shr
rcll
xor
inc
lahf
or
jo
mov
jbe
shlb
push
add
call
jle
jne
pop
stos
loop
dec
data16
ret
frndint
cmp
or
push
outsl
data16
fadds
ficomps
scas
sbb
inc
or
enter
cmp
dec
test
and
push
imul
clc
mov
fcompl
or
jno
or
lcall
cmc
dec
jg
mov
leave
aam
lods
test
dec
mov
jmp
addl
cmpsb
mov
mov
xchg
test
in
push
lds
lods
aam
dec
les
dec
pop
jno
jo
clc
outsl
jmp
xchg
in
insl
lahf
out
add
sub
loop
filds
sbb
push
dec
outsl
sbb
push
jmp
sub
or
loope
fisubrs
dec
inc
rcrb
mov
in
inc
or
jge
aam
inc
jmp
outsb
xor
leave
lret
mov
fdivrl
lods
mov
push
xor
loopne
mov
add
repz
pop
movsl
call
and
in
mov
loopne
in
jno
inc
jmp
clc
inc
lcall
sbb
cmp
sbb
mov
popf
int
lock
sbb
imul
sub
sbb
jno
into
cmp
fwait
fs
mov
pop
xor
add
sub
cmp
pop
fcomip
inc
jmp
xor
mov
sbb
movsl
test
loop
inc
inc
sub
dec
cltd
sbb
arpl
scas
lcall
sbb
sub
mov
and
int3
inc
adc
lods
pop
scas
jo
cmp
adc
pop
adcb
push
xchg
fwait
pop
cmpsb
in
popf
inc
push
loopne
pop
sub
dec
mov
mov
pop
or
scas
jp
lock
cmovo
push
mov
cmp
mov
into
cmp
into
push
lock
push
xor
push
les
sub
pop
popf
out
inc
cmp
dec
push
leave
and
iretw
inc
push
mov
fsubrs
int
test
cmp
cmp
add
in
stos
aaa
mov
aaa
lock
add
fisubs
dec
call
or
and
mov
cwtl
orl
divb
jne
std
pushf
sbb
aaa
sbb
cmp
inc
jbe
push
push
jno
jge
or
pop
gs
movsl
jo
out
mov
pop
sti
cmp
loopne
stos
sbb
fs
inc
fsts
inc
pushf
ret
push
ror
sbb
pop
int3
lea
in
pop
leave
ret
mov
aas
idivb
imul
mov
sub
ja
test
mov
pop
test
xchg
or
xor
popa
add
adc
sbb
inc
jmp
lods
and
das
shrb
andl
sbbl
jmp
aad
xchg
data16
adc
mov
movsb
push
repz
jg
adc
jmp
mov
fnstsw
fisubrs
add
int3
sbb
fs
movsl
pop
push
mov
aam
test
jno
adc
add
inc
mov
push
pop
sub
xor
xor
mov
popa
lods
iret
jmp
std
fnsave
out
xor
test
or
mov
incl
aas
lcall
addl
int3
dec
test
lret
and
sub
ja
mov
out
test
mov
ret
stos
mov
idivl
pusha
aam
and
push
sub
xchg
dec
loop
aas
push
push
xor
jns
lahf
stc
outsl
mov
into
call
mov
dec
sub
sbb
aam
rorb
xor
adc
fiadds
jmp
pop
jmp
daa
fsubl
xor
test
iret
mov
cvtps2pi
ret
mov
lea
stc
jns
cmp
xchg
jo
sub
pusha
mov
fcomps
mov
or
lods
lods
out
int3
pop
cmp
cmp
idivb
stos
adc
mov
test
adc
sub
and
outsb
arpl
rcll
movsb
and
insb
sub
pop
dec
jbe
insb
gs
bound
dec
test
test
mov
xchg
add
and
daa
nop
inc
fsubrs
test
nop
adc
mov
mov
addr16
xchg
lds
add
pusha
ja
push
in
cmp
sbb
pop
test
shrb
inc
and
in
add
cmp
push
cmp
mov
adc
mov
jg
call
inc
cmpsl
mov
jae
mov
push
mov
clc
stos
rolb
add
mov
out
mov
add
adc
ret
xchg
xor
xchg
iret
sub
push
aaa
pushf
jp
xor
cmp
inc
mov
pop
fld
call
cmpsl
or
dec
xchg
inc
rolb
pop
push
mov
inc
xlat
xchg
mov
cmpsb
iret
pop
repz
jp
inc
mov
cmp
mov
ds
sti
push
fistl
test
inc
clc
jp
push
pop
pop
and
inc
stc
push
imul
imul
aam
mov
dec
fimuls
movsl
mov
clc
lock
pop
mov
xchg
adc
pop
je
mov
xor
pop
inc
mov
daa
lock
pop
adc
jno
mov
in
test
xchg
cmpb
sbb
mov
ds
push
das
mov
imul
add
pop
cmp
and
dec
into
dec
arpl
gs
cmpsl
pop
fldlg2
inc
mov
or
outsl
rcrb
shlb
sbb
int
push
gs
pop
subb
adc
adc
jo
cs
xchg
stos
jmp
sbb
mov
loope
stos
pop
cs
xchg
rolb
cld
mov
pop
cmp
and
sbb
test
pop
shl
inc
add
adc
or
jg,pn
divl
xchg
lods
test
mov
int
lods
sbb
mov
dec
cmpsl
test
fwait
sbb
push
cmpsb
and
adc
mov
jecxz
mov
dec
mov
jb
nop
xchg
cmpsb
add
push
ret
mov
js
adc
push
imul
sub
dec
arpl
mov
addr16
xor
loop
pop
mov
pop
shlb
xchg
mov
and
test
ja
sbb
sbb
imul
inc
mov
xor
sbb
mov
pop
pop
addr16
cmp
fstpt
sub
jp
arpl
dec
int3
inc
rcrl
icebp
inc
rorb
aaa
stos
sub
push
mov
mov
jmp
inc
fcomps
mov
cmc
sub
es
pop
and
and
ret
mov
jl
dec
and
dec
dec
sub
out
xchg
inc
sbb
adc
ss
adc
ss
ss
add
popa
test
adc
push
and
popa
mov
sbb
rcl
push
mov
jae
adc
pop
add
lahf
push
outsl
rclb
fsubr
jmp
fwait
pop
pop
into
xor
xor
xchg
jecxz
dec
mov
test
xchg
andl
pusha
fwait
or
sub
js
jb
mov
jb
in
addr16
test
pop
and
or
cmp
popa
test
jge
pop
push
mov
into
and
sub
test
sub
jnp
popa
subl
je
push
cmpsl
test
rorb
mov
repnz
dec
or
xor
bound
in
gs
inc
xchg
sub
ja
pop
call
ja
nop
adc
and
push
icebp
pop
sub
sbb
xchg
es
dec
aam
stos
orb
cmp
mov
push
xchg
mov
int3
ss
fisubl
stos
test
push
int
mov
ss
mov
pop
aaa
js
or
incb
cli
cs
test
xor
mov
jmp
popf
leave
mov
sub
push
leave
loop
imul
mov
fwait
cmp
jo
daa
pop
pop
js
pop
imul
xchg
dec
lret
in
push
mov
mov
cmpsb
push
xchg
sub
stos
jmp
lret
push
aad
aam
popa
popf
mov
mov
int
imul
xchg
aam
jl
shlb
ja
mov
fs
cmp
test
sub
stc
ja
shll
imul
mov
clc
rcr
scas
pushfw
dec
adc
gs
lock
movsb
gs
sub
xchg
or
sub
lcall
dec
jns
mov
mov
dec
fcomps
test
int
popa
and
mov
out
in
add
fstpt
hlt
cmp
outsb
jne
shrb
cld
mov
pop
pop
fwait
rcl
sti
and
ljmp
cmp
and
lret
in
adc
cld
ljmp
test
and
adc
nop
jae
mov
inc
mov
and
gs
ret
push
shrb
sub
pop
inc
mov
fmulp
scas
icebp
mov
loopne
nop
test
call
push
jnp
les
ficompl
mov
gs
stos
pop
call
in
dec
inc
mov
mov
pop
mov
les
mov
cmp
mov
adcb
test
jmp
loope
add
mov
call
jns
imul
dec
push
cmp
inc
aas
fldt
fiadds
sub
fs
daa
les
and
cld
pop
ja
mov
mov
adc
mov
xchg
mov
pop
inc
cmp
fcoml
es
arpl
dec
mov
mov
lret
sbb
fcoml
pop
imul
xor
lods
sbb
addr16
das
push
test
in
out
into
mov
jo
sub
inc
and
mov
jmp
incl
lahf
arpl
mov
insl
ja
adc
gs
pop
mov
dec
fidivrl
loop
mov
inc
push
sbb
pop
sbb
sbbl
in
lret
pushf
adc
repnz
mov
pop
repz
push
sbb
stos
clc
test
addr16
out
mov
lret
fdivl
pop
mov
adc
bound
stos
sbb
xor
cmp
ret
cwtl
shrb
stos
data16
faddl
jge
call
jno
dec
push
dec
out
mov
add
mov
mov
imul
loope
jnp
cmpsl
dec
mov
enter
stos
add
xchg
xorb
fdivl
jnp
push
movsb
das
mov
sarb
loope
cld
push
dec
mov
pop
mov
loope
add
lret
in
sub
sub
out
mov
dec
push
popa
jg
enter
popf
hlt
add
into
fsubrp
pop
push
gs
mov
movsl
loope
jnp
cmpsl
push
arpl
jno
or
mov
lea
jmp
lahf
jne
imul
pop
cld
out
out
lret
enter
mov
and
mov
adc
push
popa
sti
jl
adc
mov
test
mov
fidivs
cmp
xchg
adc
mov
subb
enter
mov
call
and
out
pop
clc
in
cmp
mov
mov
sub
pop
dec
nop
sbb
mov
mov
lea
lock
cmp
movsl
and
lods
mov
rorb
outsl
and
sbbl
lcall
dec
cmpsl
jno
shl
leave
push
xchg
sbb
ret
push
subb
and
fdivrl
stos
jb
xchg
push
ja
mov
push
sbb
mov
xchg
xor
mov
cmp
pop
sub
cmp
call
sbb
jge
ja
pop
in
push
inc
test
popf
or
lahf
mov
xchg
out
hlt
push
out
in
mov
pop
or
adc
inc
sub
stc
inc
push
js
test
mov
jne
push
jns
into
mov
push
inc
je
dec
mov
jno
inc
movsl
mov
pop
rcll
adc
mov
adc
mov
adc
add
movsb
dec
addr16
mov
inc
imul
sbb
adc
push
jno
jno
addr16
sahf
movsb
sub
mov
jge
rcrl
mov
imul
stc
shl
add
rol
sub
fdivl
inc
and
daa
xchg
cmp
out
out
jmp
and
rolb
movsb
and
popa
lock
push
pop
push
add
mov
xor
xchg
das
adc
adc
data16
inc
cmp
pop
stos
pop
mov
pop
les
mov
adc
ss
mov
daa
outsl
xor
cmp
test
mov
pop
pop
aad
test
mov
dec
stos
add
arpl
xchg
loope
dec
inc
or
lcall
or
sub
bound
inc
pop
dec
pop
mov
mov
nop
mov
stos
clc
or
push
sbb
stc
pop
xchg
test
xor
mov
push
imul
int3
mov
jo
pop
sbb
xchg
loop
clc
leave
das
add
xor
jmp
pop
inc
jo
ja
test
mov
dec
scas
mov
xor
test
mov
cmpsl
dec
clc
subl
movsl
mov
adc
dec
or
fs
loop
xor
push
pop
push
push
jo
mov
out
sub
mov
fdivs
dec
lock
daa
push
cmpsl
aas
inc
xor
and
mov
mov
cmpsb
aad
inc
sub
mov
sub
mov
shrl
mov
adc
frstor
sbb
and
ret
mov
fldcw
jnp
std
push
fs
jno
mov
repz
jnp
cmpsl
dec
shrl
mov
cmp
xor
movsb
das
dec
pop
andb
int3
cmp
sahf
imul
shr
mov
ret
mov
push
dec
pop
sbb
repz
jmp
push
out
jno
pop
std
inc
pop
sarb
or
enter
imul
jne
sub
cmpsl
loope
cmc
push
xlat
subb
mov
adc
push
cwtl
push
xor
inc
cmc
and
mov
inc
dec
inc
out
scas
dec
mov
andb
addr16
out
sub
cmpsb
inc
fdivp
pushf
ljmp
dec
gs
mov
mov
cmpsl
cld
stos
dec
or
sub
cmc
add
arpl
jl
push
sub
imul
test
aam
pop
jo
imull
dec
mov
push
in
mov
test
push
xor
insl
lea
stos
mov
insb
and
mov
xchg
shlb
fcoml
fwait
inc
ljmp
imul
jns
movsl
fbld
xor
jne
daa
jo
push
cmpsl
add
fisubs
dec
addr16
sub
clc
push
scas
test
enter
lret
xchg
imul
mov
rorl
xchg
push
adc
push
mov
out
jl
lret
insb
mov
lock
je
mov
out
pop
dec
and
dec
inc
mov
aas
push
mov
jmp
addr16
shlb
lock
jo
mov
mov
xor
mov
mov
push
pop
or
jmp
lock
rclb
popa
sbb
clc
mov
sbb
cmp
sub
xor
lock
jns
jmp
xchg
jl
cmp
pop
xor
mov
or
pop
test
lret
pop
cmc
mov
and
loop
lods
sub
adc
addr16
insb
jle
sarb
pop
addr16
imul
jne
mov
stos
in
je
sbb
dec
scas
inc
cmp
push
push
xor
mov
or
fistl
mov
fdivrs
dec
jmp
push
adc
ffree
in
mov
lds
and
add
push
sbb
cmp
out
aas
je
shlb
pop
aad
sbb
jb
daa
xlat
lods
jb
addr16
jb
xor
jg
movsl
outsb
sub
jb
test
out
les
loope
cwtl
dec
mov
mov
sbb
inc
pop
and
in
test
loop
adc
cmp
cli
pop
pop
pop
fs
stos
call
pop
mov
cmpl
int
aaa
jle
lods
sbb
xlat
jecxz
push
mov
jae
adc
sbb
lods
xchg
sub
pop
leave
lret
jbe
stos
sub
xor
mov
xor
movsb
jae
push
dec
fnstsw
jne
mov
fbstp
sub
add
cmp
aaa
ljmp
add
fsubrl
addr16
mov
je
sbb
mov
jb
fistpll
aad
mov
jp
loope
pop
shrb
or
shlb
xor
insb
gs
repnz
insb
jmp
dec
cltd
add
das
daa
cmpsb
mov
and
call
sbb
jecxz
mov
insb
cli
xchg
jle
repz
or
push
mov
lds
je
movsl
xor
mov
xchg
fisttpll
and
js
js
mov
sub
das
rcrl
jb
push
enter
sub
push
mov
add
fs
loop
xchg
lods
jecxz
xchg
out
pop
dec
adc
push
xchg
or
cmp
andl
cwtl
cmpsl
test
sbb
call
sbb
cwtl
lods
mov
jl
add
and
mov
jbe
xchg
int
in
mov
jbe
push
int3
xor
mov
sarl
in
int3
jns
jmp
and
mov
mov
lds
pop
dec
push
dec
movsb
das
shll
adc
mov
in
insb
and
cmp
jnp
inc
mov
push
pop
cmp
jns
jno
jge
and
add
fs
adc
dec
mov
or
movsl
jge
inc
jnp
mov
fs
das
loope
faddl
and
dec
push
mov
add
dec
xor
imul
call
stc
push
in
add
dec
gs
cmc
stos
and
jg
test
fsts
js
jae
dec
repz
pop
pop
icebp
pop
idiv
mov
andl
js
shll
push
add
data16
lods
les
mov
mov
cmp
mov
dec
nop
leave
lret
pop
cmp
mov
dec
xchg
in
pop
fimull
mov
lret
sub
or
js
out
push
mov
mov
or
pop
hlt
sbb
cmp
and
leave
jmp
mov
orl
xor
mov
dec
and
push
add
cmp
in
outsl
fcomi
jne
dec
pop
arpl
lods
push
sub
xor
fbld
cmp
jmp
lods
ds
sbb
scas
adc
fistps
rorb
add
fs
fs
call
lret
fs
fs
push
shlb
scas
call
mov
xor
daa
bound
icebp
bound
push
push
xor
xchg
in
jmp
xor
add
movsb
mov
push
ss
lahf
cmpsl
dec
push
adc
sbb
mov
push
fildll
cld
imul
and
ret
mov
jnp
clc
xor
and
pop
leave
push
inc
popa
addr16
fsubrl
xchg
sub
cmp
dec
jl
cmp
mov
inc
clc
xor
cmp
scas
shl
mov
in
mov
xlat
jp
pusha
imulb
mov
mov
jge
sub
enter
mov
push
mov
mov
pop
stc
sub
inc
lret
popa
mov
mov
insl
jge,pt
ret
mov
sbbb
mov
mov
movsb
fdivrl
pop
pushf
nop
cmpsl
movsl
mov
fwait
cmpsl
pop
out
bound
enter
sub
pop
scas
sub
into
add
sub
mov
and
adc
mov
push
xor
sub
push
pop
stos
je
push
hlt
dec
mov
jl
orb
ret
ret
test
jae
stos
mov
cmpsl
rclb
ret
pop
dec
sub
call
inc
sbb
and
or
inc
sub
xor
cmp
pop
push
jnp
jns
and
dec
loopew
pop
inc
jno
outsb
ja
and
fimull
inc
push
lds
inc
sub
mov
fs
mov
add
repz
jo
dec
jge
pusha
sarl
push
cld
loopne
call
daa
xor
mov
lods
mov
call
cmp
sub
dec
call
test
jns
int
mov
scas
loope
imul
mov
fs
fistl
movsb
imul
mov
inc
loope
add
mov
fcompl
and
xor
or
or
pop
pop
and
sub
mov
pop
lods
push
sub
call
daa
aad
js
and
mov
sbb
xorl
sub
rclb
mov
in
jge
xchg
push
push
imul
cmpsl
mov
dec
imul
xor
sbb
mov
jo
jns
js
daa
pop
pop
sub
add
mov
sti
xor
sub
or
mov
jge
lcall
loope
push
outsb
test
faddl
pop
xor
sub
cld
jg
inc
test
pop
pop
lock
pop
pop
cmp
dec
js
pop
jge
cmpb
mov
mov
mov
mov
dec
mov
call
test
mov
mov
mov
in
movsl
dec
enter
add
int3
cmp
push
nop
dec
and
xchg
mov
fdivl
mov
and
mov
movsl
es
inc
adc
negl
or
nop
mov
pop
push
pop
test
sub
push
test
mov
and
mov
pop
sbb
pop
lods
test
jl
stos
push
popa
and
stos
pop
push
sti
dec
cmp
sbb
xor
aas
dec
lods
lret
subb
test
lds
mov
fwait
jnp
lret
bound
test
cld
jmp
mov
xchg
and
and
and
loopne
into
or
test
mov
xchg
jb
inc
pop
xor
ret
jno
insl
das
lcall
dec
jnp
sahf
jae
loop
mov
push
movsb
addr16
movsl
mov
call
in
js
test
xorl
shll
xor
enter
push
jo
add
and
call
inc
or
lods
nop
dec
inc
xor
loope
cld
adc
push
and
jno
mov
mov
cwtl
mov
orl
leave
cld
ds
mov
mov
dec
rcr
jl
or
dec
loopne
sbb
inc
test
stos
in
xchg
pop
jns
shlb
mov
cmp
or
jmp
mov
adc
pop
scas
add
or
nop
mulb
mov
aam
jbe
cs
pop
lret
push
xchg
add
bswap
xchg
cmp
or
loope
inc
pushf
fsubrl
jp
movsl
mov
inc
inc
pop
push
mov
sub
xchg
in
inc
inc
fsubs
dec
sbb
dec
and
inc
mov
mov
test
mov
mov
das
lahf
out
add
jg
repz
mov
std
jo
lds
out
mov
test
jmp
stos
ret
push
andb
cmp
mov
xor
movsl
mov
inc
dec
or
xchg
inc
push
adc
aam
inc
das
pop
jne
in
xlat
rcl
popa
adc
mov
sub
loop
lds
xor
mov
shll
mov
stc
std
xlat
push
icebp
sbb
fisubl
inc
mov
in
or
icebp
mov
pop
int
and
pusha
xchg
pop
mov
lock
stos
pop
xlat
pop
es
fnstenv
hlt
push
repnz
xlat
xor
xchg
fs
push
adc
stc
cwtl
sarb
arpl
pop
mov
pop
movsl
lds
xlat
fidivrs
push
imul
pop
sbb
lahf
stos
imul
mov
adc
sbb
out
neg
cmp
pop
jmp
mov
sahf
es
cs
call
test
xchg
les
sbb
add
sub
push
cmp
mov
dec
in
mov
jg
xor
mov
inc
pop
pop
cmp
pop
mov
jl
outsl
stos
mov
sub
push
imul
mov
out
add
shlb
lods
inc
movsl
je
mov
pop
xchg
dec
scas
sbb
movsb
mov
mov
inc
sub
sub
scas
mov
test
leave
sub
and
and
fisttpll
ljmp
pop
cmp
cmpsl
das
dec
jne
cmp
pop
loopne
aad
jne
add
ja
mov
dec
pop
mov
pop
sub
cmpsb
test
cmp
inc
pop
sbb
test
bound
xchg
mov
mov
rorb
cmp
xchg
leave
push
enter
sub
or
xchg
inc
inc
gs
xor
lea
adc
push
shlb
xchg
mov
jp
sub
cmp
xchg
addr16
xchg
xchg
xchg
aam
dec
fsts
lods
outsb
popa
pop
shr
in
pop
stc
mov
fldcw
pop
inc
mov
test
scas
push
das
jmp
lock
mov
dec
and
dec
imulb
pop
imul
pusha
pop
and
mov
popa
xchg
pop
adc
cmp
aam
pop
pop
adc
pop
xchg
int3
jno
xchg
fmul
jl
sbb
xchg
bound
cmpsl
in
inc
xchg
push
pop
sahf
sbb
add
dec
rolb
pop
lods
add
cmpsb
bound
rorb
mov
mov
jnp
test
lcall
and
shrb
pop
push
push
add
push
cmp
mov
sar
std
gs
push
pop
jle
dec
mov
sub
movsl
pop
stos
push
sbbb
test
in
xchg
cmp
sarb
jmp
movsl
popa
in
pusha
test
popa
pop
lds
pop
jnp
lea
sbb
xor
shlb
fisubs
hlt
sbb
push
pop
out
sarl
push
push
flds
mov
and
mov
cmc
movsl
cmpsl
mov
std
scas
mov
xchg
cmp
fwait
dec
sbb
addr16
xchg
sahf
jno
repz
mov
xchg
push
mov
sbb
mov
rcrb
xchg
mov
xchg
je
mov
mov
call
sbbb
pop
cmp
lods
lret
ret
loop
sbb
sbb
lods
mov
cmp
xorb
add
pop
xchg
sbb
or
inc
cmp
icebp
addb
fwait
mov
mov
xchg
stos
int
cmpsb
cltd
test
xor
xchg
in
or
lret
popa
sub
jmp
xor
sub
jle
pop
popa
sbb
jnp
jle
or
lock
jmp
mov
mov
dec
gs
inc
xchg
add
push
adc
pop
cwtl
or
aas
jge
cmp
cmpsb
enter
push
mov
imul
push
mov
pop
insb
jge
inc
loopne
mov
xchg
push
repnz
in
xchg
sar
sub
mull
pop
in
mov
fadds
out
push
imul
mov
and
imul
mov
aam
pop
mov
or
mov
mov
inc
lea
push
sti
sbb
rol
repz
xchg
mov
ret
repz
mov
fwait
lret
push
sub
pop
test
lds
dec
mov
inc
pop
es
ss
jl
jno
sahf
lret
xor
ret
ret
inc
rorl
sti
es
or
nop
pop
popf
add
divl
loope
jge
rcrl
sbbl
lods
mov
lods
adc
rorb
stos
push
lret
cs
push
cmp
iret
lds
mov
ud1
xchg
pop
jae
pop
addb
lds
imul
inc
je
popa
jmp
mul
push
jb
mov
and
cmpl
cmpsb
pop
cmpsl
lods
dec
cltd
dec
mov
test
mov
and
pushf
push
lods
jmp
sbb
orb
pop
cmpsb
popf
push
xor
orb
pusha
and
cmpsb
sbb
test
sbb
dec
push
mov
cmpsl
ss
mov
jne
xchg
cld
push
pop
ja
insl
jne
push
xchg
mov
pop
fdivrs
aas
std
adc
in
xchg
jge
dec
pop
pop
adc
lcall
das
lods
dec
mov
into
lahf
out
xchg
dec
jae
popf
cwtl
mov
test
add
push
aaa
xchg
jno
add
cmc
movsl
sub
scas
ja
jle
sarb
mov
cmp
mov
mov
cld
jne
in
pop
aas
xlat
ds
mov
js
inc
jge
jp
cld
xchg
in
and
sbb
mov
test
sub
fisubs
pushf
sbb
xor
ja
pop
mov
popa
cmpsl
xchg
pop
hlt
adc
dec
mov
push
jle
lret
into
jg
dec
push
jmp
jae
xchg
jecxz
pop
inc
stos
cmp
sbb
or
xor
scas
cmpsb
fistl
sub
fwait
cmpsl
jmp
pushf
xchg
adc
pop
mov
xchg
cmp
test
lahf
cmc
mov
ja
and
inc
lods
ficoms
mov
sbb
cmp
cmp
mov
test
mov
cmp
inc
xchg
sub
mov
shrb
scas
inc
inc
adc
sbb
scas
adc
into
xor
mov
pop
pop
outsl
sub
xchg
fisttps
imul
adcl
adc
rcpps
jns
add
pop
sbb
das
mov
in
mov
scas
mov
and
orb
fwait
mov
aam
popf
mov
mov
xchg
jle
sarb
pop
cmp
inc
mov
and
mov
sub
xor
imul
stos
pop
mov
xor
adc
sbb
inc
push
sub
sub
fcmovb
js
xor
aam
in
ret
jae
popf
mov
sub
mov
mov
jle
push
xor
dec
fwait
cmpsb
xchg
test
fistps
int
sbb
lods
mov
lret
jns
xchg
cmp
lods
mov
add
insl
lahf
cmpsl
jnp,pt
mov
pop
cmp
cmp
subb
pushf
adc
scas
jb
je
testl
enter
push
fnstcw
pop
lea
or
and
andb
sbb
aad
mull
shll
sub
and
cwtl
adc
rcrb
push
xlat
sub
pop
xchg
mov
adc
mov
cmpsl
lahf
jg
mov
loop
fbld
sub
stos
and
sbb
sub
pusha
sub
test
jnp
cmpsw
push
cmp
mull
mov
mov
cltd
xchg
dec
dec
xchg
pop
sbb
addr16
or
testl
addr16
mov
pop
or
mov
mov
xlat
xor
dec
js
ror
mov
sub
xor
lods
jle
jge
add
test
push
sub
outsb
ljmp
in
stc
lods
inc
fistps
popf
scas
push
add
or
dec
add
bound
inc
lods
mov
shlb
arpl
mov
mov
adc
pop
lcall
mov
aam
jns
xchg
cwtl
cwtl
std
rclb
mov
sub
dec
mov
sub
mull
pop
jmp
dec
fimuls
mov
mov
mov
sbb
mov
or
inc
xchg
cmp
jle
fwait
jnp
cli
mov
popa
sub
cmc
adc
or
aaa
iret
bound
inc
or
xchg
pop
mov
or
and
rcrl
sbb
stos
cmp
and
xchg
arpl
stc
fidivrs
and
stos
xchg
shrb
loope
cmpsb
dec
sbb
jmp
insl
mov
test
ret
mov
mov
cs
shrl
cmpsl
inc
ret
outsl
add
adcl
stc
lahf
inc
mov
mov
cwtl
or
shl
xor
stos
lods
es
adc
mov
std
pop
mov
push
xchg
inc
jl
in
rclb
add
movsl
jge
repnz
arpl
addb
dec
test
push
add
stc
jae
inc
lret
jl
fisubrs
shll
mov
ret
fwait
pop
movl
jae
cmp
in
dec
divl
jb
pop
daa
cmpsb
sbb
fists
popf
lcall
cmp
cmp
cs
dec
loope
mov
add
hlt
fwait
adc
and
ret
inc
stos
movsb
or
mov
mov
sub
fcmovu
mov
aam
rorb
and
leave
mov
cmp
dec
pop
xchg
mov
fs
test
popa
push
mov
inc
int
xor
or
repz
dec
ret
sbb
mov
std
add
and
jns
or
fwait
mov
xchg
or
popa
lret
adc
sarb
loopne
xor
cmp
pop
xchg
mov
fcompl
adcb
xchg
push
adc
inc
xchg
jmp
mov
fwait
inc
loope
dec
daa
pusha
mov
arpl
mov
fisttpll
ja
fs
jg
add
or
pop
mov
leave
insl
fisttps
sbbl
cmpsl
lds
ja
sbb
cwtl
inc
hlt
sti
push
pop
repz
inc
rolb
das
lahf
dec
ret
sbb
std
sub
aad
cmc
filds
fists
lock
ret
mov
test
push
and
sarb
pop
pop
test
aad
sbb
mov
push
pushf
mov
push
ret
rolb
lods
inc
jno
call
push
stos
mov
rcr
or
in
mov
mov
or
scas
jg
jnp
insl
jle
sbb
cmp
add
loopne
adc
lods
jmp
lods
cmp
inc
in
pop
idivl
lock
dec
add
jb
iret
loope
inc
mov
sbbb
int
or
gs
lods
cmpsb
popf
mov
mov
sbbb
inc
frstor
sbb
les
and
pop
rcl
lods
popf
adc
fcoml
pop
mov
leave
aaa
test
loopne
add
dec
popa
jo
push
dec
mov
loope
cmp
fidivrs
rorl
fwait
lcall
pop
leave
cld
cmp
bound
mov
iret
aas
xchg
add
cmp
add
daa
out
fisubl
stc
mov
rcr
mov
jle
popw
fmul
adc
cmp
mov
mov
mov
cmpsb
mov
icebp
jno
mov
jmp
cmpsl
xchg
lahf
nop
mov
jecxz
lods
and
fisttpll
test
scas
movsb
jle
test
inc
lock
xor
mov
jae
inc
orl
push
pop
aaa
es
xchg
in
jne
sbb
jnp
pop
sbbb
mov
call
dec
push
push
xchg
pop
push
mov
gs
lock
outsl
sahf
loop
inc
outsl
xor
fdivp
mov
andl
inc
les
cmpsb
mov
mov
jge
mov
imul
sub
test
mov
push
in
jns
orl
mov
in
sbb
aas
add
push
pop
arpl
cmpsb
pop
addb
pop
testb
lret
dec
in
push
rcl
add
jmp
mov
mov
mov
test
adc
ja
sbb
pop
pop
stos
test
or
jns
loope
mov
xchg
daa
inc
adc
in
lods
daa
sahf
jns
xor
push
fidivl
xchg
or
testl
cmp
in
arpl
adc
outsl
test
mov
fcomi
and
mov
xor
sub
mov
jp
iret
lahf
or
int
inc
into
mov
js
mov
jno
or
dec
leave
les
add
loopne
sub
add
pop
adc
lcall
mov
pop
test
pop
cmc
jnp
les
ret
xor
inc
pop
imul
movsb
fdivrs
push
stos
fisubl
pop
stc
cmp
push
test
andl
stos
fldcw
movsb
mov
adc
jge
sarb
sbb
jns
or
decl
push
aam
sub
pop
or
call
fildl
fidivl
loopne
inc
or
int
push
inc
imul
aam
mov
ja
into
mov
adc
lret
in
fcomps
cmp
fstl
adc
or
jl
mov
cli
and
pop
fadds
les
imul
imul
orb
mov
adc
sub
outsb
mov
cwtl
movsb
ret
pop
lock
jg
cmp
mov
ljmp
and
mov
mov
xchg
mov
push
lock
shrb
add
push
jno
movsb
and
gs
dec
daa
jmp
add
pop
js
adc
jo
jp
sti
mov
add
jl
mov
call
mov
mov
mov
xchg
cmc
mov
add
jp
xchg
sbb
mov
mov
mov
clc
in
mov
fwait
insl
mov
xchg
inc
ficomps
cmp
mov
jge
push
pop
imul
cmpsb
in
adc
cmc
flds
xor
jo
mov
adc
and
lahf
es
gs
push
push
mov
test
andb
test
pop
movsb
mov
xchg
gs
or
pop
in
cmp
pop
mov
inc
cmpsb
mov
or
aaa
mov
or
insl
jno
add
inc
outsb
sub
add
or
mov
stos
push
adc
pop
shr
sub
les
je
sub
lods
inc
pop
aad
and
lahf
adc
mov
inc
outsl
aaa
xchg
mov
pop
mov
cmpb
mov
sti
movsb
mov
mov
mov
pop
lcall
mov
xchg
rol
into
pop
jmp
hlt
or
jno
stc
arpl
cmp
add
pop
mov
test
addr16
mov
ret
cmp
pop
xor
xor
push
lcall
fisubrs
fwait
or
mov
ljmp
mov
ret
mov
dec
mov
leave
test
icebp
sub
andb
dec
test
mov
movups
inc
stos
addr16
inc
xchg
mov
push
cmpsb
mov
mov
scas
ja
xor
lret
aas
stos
jle
inc
pop
cmp
jle
pushf
push
inc
mov
xor
sbb
mov
lcall
sbb
sub
ja
push
fs
fiaddl
sbb
jbe
jbe
mov
xchg
test
lods
dec
mov
mov
in
xchg
std
inc
adc
cwtl
mov
movsb
rcll
adc
mov
xor
jmp
cld
push
rolb
cli
xchg
inc
mov
fnstcw
adc
rclb
xor
push
mov
dec
mov
mov
pushf
loop
mov
mov
xchg
mov
pop
mov
out
rol
pop
push
add
inc
adc
mov
and
cmpsl
ret
cmp
or
or
inc
dec
in
stc
popa
push
mov
lcall
out
nop
cmp
sub
hlt
repz
sbb
inc
scas
test
xchg
mov
sbb
or
pop
or
push
adc
fsubrl
pushf
fsubrl
add
mov
or
mov
push
mov
out
cmp
mov
test
rclb
scas
add
ja
add
mov
cmc
scas
push
addr16
mov
subb
mov
ljmp
cmp
mov
jmp
cli
test
mov
adcb
add
inc
or
stos
pusha
cmpsl
int
mov
jmp
clc
lret
test
arpl
ret
add
stos
cmp
xchg
ret
xor
adc
aaa
addr16
inc
mov
add
lea
add
es
jmp
es
enter
adc
in
sub
dec
inc
in
test
lock
pop
jnp
cmc
stos
testl
cltd
dec
xor
sbb
fbstp
sub
xorb
shll
pop
inc
subb
sahf
sahf
add
imul
bound
push
int3
xor
push
mov
icebp
sbb
jno
cmp
adc
adc
sbb
out
mov
mov
xor
xor
dec
or
lock
nop
iret
inc
jmp
mov
dec
fwait
lret
aam
sub
mov
inc
xor
call
sub
iret
das
inc
dec
jno
sbb
loope
aaa
imul
subb
clc
cmpsl
mov
mov
xor
sbb
mov
movsl
in
call
ja
push
mov
or
mov
xchg
push
xor
dec
or
bound
mov
aam
icebp
popf
ss
jmp
inc
mov
imul
icebp
dec
or
popf
mov
jb
pushf
pop
jnp
dec
aam
mov
sarl
jg
hlt
mov
add
pop
movl
jmp
sub
push
insb
mov
iret
ret
sarl
fs
lods
xchg
aam
cmp
mov
gs
stc
mov
fbld
sub
fldenv
test
out
mov
rcrl
aaa
mov
inc
adc
imul
sub
shlb
mov
inc
iret
jns
cmp
addr16
ljmp
mov
ficoms
add
aad
push
lret
and
movsl
jecxz
and
or
aam
xchg
pop
and
mov
mov
lea
fsubl
pop
ja
mov
push
push
out
mov
pop
xor
cmpsl
mov
push
scas
xor
xchg
pop
stos
in
mov
outsl
mov
cmpsb
pop
push
xchg
rolb
or
or
adc
mov
xor
mov
mov
sbb
pop
in
push
leave
pop
or
dec
insl
test
mov
push
pop
add
xchg
adc
jne
or
push
lock
sub
test
stos
jno
jno
push
adc
lret
and
sub
lret
jmp
repnz
push
jo
push
pop
dec
sahf
sbb
sub
in
in
sti
fbld
and
stos
ja
popa
and
xchg
pop
lods
lret
xor
movsl
sbb
bound
cs
adc
dec
popa
in
add
lret
pop
mov
fsubl
push
adc
das
lods
and
fwait
mov
add
and
test
stos
mov
jmp
sub
test
ficomps
lret
jae
mov
daa
xor
sub
push
sub
sbb
fcoms
fcoms
pop
dec
fwait
in
popa
jmp
sbb
ret
jns
or
add
jno
pop
sub
inc
cmp
adc
mov
jl
movsl
pop
xchg
mov
xor
pop
push
clc
shrb
xorl
movsl
sti
jmp
sbb
outsb
sti
pop
divl
pop
dec
mov
arpl
mov
inc
xor
adc
sub
xchg
mov
mov
inc
adc
lods
je
dec
jg
push
mov
mov
sbb
pop
das
adc
inc
cmp
dec
mov
sarl
inc
rclb
int3
jmp
stos
and
mov
out
pop
add
mov
outsl
sub
mov
call
mov
xor
out
sahf
inc
jns
arpl
pop
leave
imul
mov
xchg
mov
push
fidivrs
jle
xor
jmp
inc
cmpsb
and
pop
shlb
pop
ja
push
mov
or
lcall
xchg
inc
popa
ds
mov
imulb
mov
inc
mov
mov
lods
pop
movsb
or
pop
imul
push
mov
sub
cmp
inc
xchg
in
out
inc
pop
mov
xchg
jae
cmpb
cwtl
push
arpl
jno
push
inc
jmp
push
xor
mov
stos
cmpsl
pop
scas
notb
imul
sbb
shl
inc
adcl
and
mov
das
sub
inc
outsl
or
jecxz
rcr
xchg
movsl
jmp
jbe
jo
movsl
mov
pop
cmp
cmpsl
lods
or
mov
movsb
dec
mov
int
sub
add
call
clc
inc
test
sahf
mov
fwait
mov
pop
leave
testb
sub
das
rcll
jb
mov
and
push
mov
cmp
out
mov
cmpsl
ret
mov
add
adc
pop
sub
mov
cmc
icebp
xchg
int3
nop
enter
mov
or
aam
popf
jl
int3
xchg
mov
ret
mov
jbe
jns
inc
pusha
xchg
cmpsb
and
movsl
leave
outsl
sbbb
ret
andb
jne
mov
nop
or
clc
cmp
mov
and
stc
xchg
xchg
fdivr
movsl
test
sub
in
fadd
popf
xchg
jae
jbe
and
dec
mov
imul
lea
insb
xor
adc
or
mov
sub
pop
pop
cmpsl
stos
xchg
jmp
jo
js
lahf
mov
mov
in
fadds
mov
push
xchg
popa
mov
xor
cmp
into
cmp
adc
xor
fcoms
loop
and
jl
ret
mov
dec
outsl
push
dec
shl
mov
imul
mov
push
aas
xchg
cmp
popf
dec
push
mov
jns
jmp
setbe
test
pop
xor
in
test
pop
into
sbb
enter
sbb
pop
mov
push
subb
cmp
sub
xorl
xor
nop
and
fnstcw
testb
mov
sub
xor
outsb
inc
adc
sarl
jns
add
pusha
fwait
cmp
pop
or
icebp
mov
aas
scas
add
arpl
in
pop
inc
leave
mov
insb
test
scas
mov
cmp
jle
ret
mov
mov
aam
lods
aad
loopne
pop
orl
cmpl
push
popa
aam
leave
lods
push
xlat
scas
test
xchg
test
aaa
xchg
shr
push
sbb
pushf
adc
mov
cmp
mov
jmp
push
inc
sub
sub
dec
aaa
mov
out
jge
push
xchg
push
fmuls
divl
cmp
jns
cs
aas
cmp
cmp
jecxz
mov
inc
dec
push
outsl
jmp
sbb
and
dec
or
dec
pusha
jl
scas
movsl
pop
jmp
inc
sub
push
mov
fwait
bound
mov
gs
movsb
call
faddl
popa
orl
cmp
ficomps
and
xor
daa
adc
mov
mov
les
xor
arpl
and
and
sub
lods
mov
mov
jns
enter
xchg
pop
idivl
add
pop
sbb
inc
pop
cmpsl
jae
inc
inc
inc
cmp
inc
xchg
and
or
mov
mov
and
sub
xor
popf
arpl
shlb
mov
lds
mov
into
andb
inc
and
push
xor
push
add
pop
insl
push
loopne
gs
fwait
jno
fcomps
mov
pop
jle
pushf
and
insl
inc
mov
test
pusha
sbb
pop
or
adc
cmp
mov
push
push
push
add
pushf
movsb
pushf
dec
rcrb
push
mov
jmp
inc
test
sub
inc
dec
and
rclb
and
fisubrl
rcrb
test
push
test
fcoml
and
fdivrl
sarb
cwtl
mov
inc
xchg
mov
sbb
sbb
mov
mov
movsl
push
xlat
test
arpl
cmc
and
xor
and
fsubrl
ja
mov
call
sbb
stos
int3
pop
addb
mov
jno
dec
jnp
and
mov
jns
lahf
xor
aam
mov
cmp
ljmp
and
lret
lock
dec
icebp
cmpsl
imul
mov
sbb
test
mov
subl
int3
cmp
dec
sbb
jle
jmp
cmp
sbb
pop
xchg
mov
test
in
jge
jmp
fcoms
xchg
cmp
test
ss
inc
add
call
in
pop
add
xor
leave
mov
pop
outsb
mov
pop
jge
mov
pop
jbe
sub
sub
mov
cmpsl
mov
jmp
outsb
outsl
shrl
xchg
jb
or
aaa
sti
xlat
push
dec
xchg
stos
addl
dec
arpl
sub
inc
cmp
cmp
popf
xchg
push
aad
icebp
test
js
call
in
inc
or
cmpsl
movsb
ljmp
test
int
cmp
jmp
insl
ror
sbb
mov
jle
mov
sbb
ja
les
pop
fdivrs
sub
xchg
adc
rclb
inc
js
push
jno
test
ret
inc
xor
sub
outsl
cmp
dec
sbb
cmp
lods
in
inc
xor
add
out
sub
dec
out
popa
aaa
mov
and
jge
lods
and
jecxz
ss
pop
push
cmpsl
mov
cli
xchg
mov
sub
popa
shll
push
dec
int
mov
push
jg
xlat
mov
into
scas
stc
push
mov
jecxz
mov
inc
push
lea
ror
cmp
inc
mov
mov
sub
out
adc
pop
mov
lahf
mov
aad
pushf
fisubs
sub
inc
and
jecxz
addr16
jae
test
xchg
mov
ljmp
gs
mov
test
mov
or
mov
mov
fstpt
and
fwait
push
inc
psubw
cmp
call
and
mov
mov
push
leave
or
add
sti
lds
xor
mov
out
iret
cwtl
add
push
ja
stos
fisubl
cmp
push
stos
xorb
adc
pusha
cli
cs
or
inc
sub
inc
inc
faddl
out
fstl
and
inc
xchg
and
cmpsl
popf
inc
orl
jno
inc
mov
cmp
call
xchg
gs
fcomps
dec
enter
mov
enter
outsb
ret
sub
mov
lcall
stc
push
push
lods
ret
mov
sti
jo
and
les
decl
shll
mov
mov
pop
lds
idivl
jno
subb
ret
and
cli
icebp
mov
std
nop
rolb
addb
mov
test
jmp
test
and
sub
lret
nop
xor
fsubrs
gs
lods
sbb
outsl
js
es
add
dec
scas
pop
cs
das
sub
enter
mov
sbb
sub
sbb
jge
sub
jae
mov
xor
push
adc
mov
jg
sti
mull
add
dec
outsl
stos
sub
mov
aad
ss
shrl
inc
mov
lahf
cmp
mov
mov
and
or
ret
cmpl
jmp
lahf
aas
mov
divl
xlat
or
jg
jns
aad
jns
ljmp
and
test
movsb
cmpl
and
ds
mov
rcr
xchg
add
into
cmpl
pop
xor
lods
cmp
mov
enter
in
pop
fstpl
lcall
push
faddp
ljmp
rcl
mov
imul
aaa
sbb
push
loopne
dec
or
xchg
popf
js
inc
sti
push
or
xchg
inc
notl
pushf
jmp
in
mov
movb
in
outsb
xor
push
frstor
popa
sbb
jmp
leave
shr
aam
mov
cmpsb
gs
mov
mov
repz
jl
aam
xor
adc
mov
and
cmp
ficoms
into
push
clc
dec
mov
stos
inc
jns
ss
mov
xchg
cmp
adc
shlb
mov
jo
jge
inc
push
mov
mov
lahf
cmp
lock
in
lahf
aaa
cmpsl
sub
lret
add
cs
pop
cmpsb
pop
sbb
arpl
push
je
loope
pop
test
lods
fimull
or
clc
lea
xchg
mov
vpaddsb
dec
popa
dec
je
add
pop
mov
jns
lds
cmc
or
push
xor
mov
subl
aad
pop
lods
jecxz
lods
sbb
mov
lds
out
in
scas
mov
loope
fldl
push
fnstcw
sub
jns
mov
insb
lea
sbb
pop
xchg
cltd
popa
scas
adc
in
fdivs
lahf
jle
mov
fwait
imull
addl
fisttpl
sbbl
or
sahf
fwait
pop
cmpl
stos
mov
mov
cmp
mov
ret
and
sbb
or
stos
or
pop
mov
add
rcll
xchg
in
inc
insb
shr
int
and
mov
cmp
das
inc
inc
xor
into
cmp
push
andnps
stos
out
push
lahf
mov
mov
adc
fsubs
xor
push
xchg
jbe
add
dec
stos
sub
out
mov
jecxz
xchg
shrl
js
inc
mov
mov
cmp
popf
cmp
test
stos
dec
idivl
in
movsl
mov
ret
xchg
js
call
cmpsb
jne
pop
test
xchg
jbe
jmp
add
aam
xor
fsubs
popf
jge
cmc
sbb
jbe
cmp
inc
xchg
pop
push
mov
testl
mov
jmp
and
in
xor
cmp
cmpb
and
pop
data16
popa
or
dec
daa
or
imul
fnstsw
out
and
sarb
stos
lods
aam
adc
mov
adc
lret
xorb
sub
mov
sbb
das
fmuls
aad
push
jae
sub
sbbb
das
in
inc
adc
mov
dec
push
push
pop
xchg
sar
pop
sub
outsl
jp
push
cmp
mov
lock
test
shlb
and
in
dec
sbb
dec
adcl
push
or
mov
fadd
ss
icebp
in
xchg
cmp
or
pop
pop
aas
into
scas
cmc
lcall
push
stc
ror
pop
jg
fwait
shl
int
adc
cmp
imul
push
insb
jbe
lret
or
aam
mov
call
mov
in
scas
aas
fwait
mov
inc
inc
mov
mov
dec
pop
lods
push
sbb
jo
movsl
cmp
mov
jns
loope
test
sub
out
jne
dec
stc
add
out
gs
jmp
or
stc
sub
test
xchg
into
mov
sbb
add
push
cmp
xor
fidivs
mov
dec
pop
pop
movsl
mov
mov
push
jge
push
jp
and
sub
and
clc
out
mov
adc
mov
dec
jge
das
dec
cmpsb
loope
aas
popa
subb
stos
push
jne
pop
stc
test
push
xor
mov
mov
nop
shlb
loope
mov
testl
jp
lods
and
inc
test
pop
mov
inc
ja
arpl
cmp
pop
loopne
and
sbb
test
jmp
in
sbb
cwtl
test
jbe
push
mov
xor
and
mov
jge
cmc
mov
pop
popf
aad
jbe
out
js
sbb
sbb
ficomps
and
movsl
js
fsts
pop
mov
cmp
fldenv
addr16
mov
leave
sbbl
inc
push
xor
inc
stos
cmp
sbb
add
loopne
cmp
bound
imul
dec
cwtl
jnp
lret
pusha
inc
scas
dec
test
andl
in
lret
rcl
sub
mov
add
leave
inc
mull
test
fdivs
fs
pop
sub
mov
movsb
sbb
mov
mov
sub
jmp
mov
xor
jle
cmpb
xor
rcrb
pop
pop
xor
pop
jo
jno
dec
arpl
pop
push
fs
xchg
andb
sbb
faddl
popa
pop
fbld
jl
imul
sub
xor
add
inc
xor
loopne
leave
into
mov
sbb
shll
adc
cmp
add
subb
push
adc
pushf
loope
add
jae
fists
shl
data16
icebp
imul
and
and
das
xor
mov
ret
enter
cmp
cli
into
outsb
cld
scas
jmp
jb
cmp
xchg
xor
push
cmp
aam
rcrb
movsb
jae
icebp
out
and
aas
lods
stos
mov
cmc
shlb
cmp
fwait
imull
mov
aam
je
cmp
xchg
mov
call
xlat
adc
out
adc
push
inc
pushf
fmul
lret
jmp
into
test
les
cmp
push
fnstsw
jns
into
lods
ret
ds
xchg
inc
lret
sub
stos
jo
and
xor
dec
lret
add
dec
lds
out
lods
push
in
lods
flds
jmp
add
std
pushf
sbb
sub
leave
scas
jp
adc
lods
and
stc
sti
sbb
gs
pop
jl
test
xlat
push
inc
sub
and
cmp
mov
sti
sbb
sub
popa
popa
fs
push
inc
arpl
daa
and
fwait
dec
sub
jle
and
mov
pop
ja
pop
mov
ja
mov
xor
imull
inc
adc
sahf
push
sbbb
and
clc
sub
shll
enter
mov
dec
stc
fadd
push
es
arpl
push
mov
jae
loopne
and
fwait
or
icebp
je,pt
sub
push
sbbl
pop
rcl
stc
mov
sbb
mov
push
insb
pop
mov
sub
les
sub
lret
inc
fdiv
mov
add
dec
out
mov
test
mov
jmp
scas
dec
cwtl
dec
or
and
jl
int
scas
andl
ret
loop
jle
push
in
into
dec
push
mov
add
lcall
or
or
xor
sahf
dec
ja
add
fcmovu
repz
jmp
push
mov
in
fiadds
lds
fnstenv
dec
push
push
pushf
int
repz
and
pop
mov
push
sbb
push
fcoms
mov
pop
and
or
testb
or
ret
push
sbbb
mov
push
cmc
loope
xchg
or
sub
jmp
xchg
mov
pop
adc
divl
insl
pop
popa
mov
push
jmp
icebp
fcomps
das
outsl
arpl
call
mov
test
pop
cmc
pop
pop
mov
xchg
shlb
rorl
pop
mov
adc
adc
imul
clc
jmp
pop
movsb
mov
pop
pop
sbb
popa
xchg
lods
lcall
lahf
jmp
jno
jp
cld
cwtl
xor
test
dec
mov
imul
inc
mov
fiadds
lcall
shrb
iret
mov
xchg
pop
test
arpl
les
sub
outsb
fcoml
icebp
cmp
xor
or
pop
into
xlat
push
mov
and
jmp
mov
pop
les
pop
mov
ret
mov
jl
xor
and
push
inc
xor
cmc
lock
and
jmp
arpl
movhps
daa
push
mov
stos
xchg
xchg
pushl
lea
nop
cmpsl
aam
jbe
adc
cmp
xor
mov
movl
pop
call
adc
gs
sbb
or
cmp
push
leave
gs
int
stos
add
lret
ss
imul
iret
lock
mov
xchg
movsl
mov
jmp
add
add
lds
sbb
mov
arpl
mov
or
roll
mov
push
mov
inc
shr
pop
mov
sarl
leave
mov
mov
inc
jo
orl
mov
or
stos
sarb
xor
xchg
ds
pop
cmpsl
mov
je
lods
inc
cmp
cltd
dec
rorb
stos
addb
cltd
stos
sub
sub
cmp
aaa
xchg
sti
hlt
sub
add
loopne
dec
pop
inc
sahf
push
gs
iret
cmp
mov
xor
and
icebp
loope
fwait
xchg
jmp
loopne
and
call
xchg
add
add
xchg
mov
bound
icebp
addr16
mov
push
jno
push
adc
in
rcll
mov
push
mov
cmp
in
sub
sub
or
mov
inc
pop
jnp
mov
movsb
les
rol
mov
push
rcl
loope
sar
and
cmp
dec
call
ret
ljmp
push
cmp
push
xchg
stc
mov
jmp
jmp
jnp
in
imul
cmc
inc
test
jns
jmp
fldcw
mov
push
je
cmpsb
pop
sbb
cmp
nop
cwtl
mov
in
sbb
in
mov
fists
push
lods
lea
or
lods
add
inc
in
leave
icebp
aaa
insl
or
inc
and
dec
repz
fldt
inc
stc
adc
lea
push
sbb
push
jp
fdivl
nop
xlat
push
cltd
pusha
stos
scas
stc
jmp
stos
lahf
stos
sahf
icebp
daa
stc
ja
cmp
insl
cmp
jmp
inc
jge
xor
dec
jae
sub
cmpsb
ljmp
sub
into
popf
stos
fwait
test
add
mov
jb
mov
dec
mov
pushf
les
lods
imul
icebp
xchg
jmp
xchg
push
shr
int
cmp
popa
xchg
mov
pop
push
xchg
outsl
gs
mov
data16
sub
jmp
mov
lahf
mov
ljmp
gs
pop
imull
subl
mov
add
pop
popa
imul
sbb
lahf
jns
dec
jl
jl
call
es
lds
xor
negb
or
mov
adc
faddl
push
dec
jns
xlat
mov
mov
adc
pop
sub
mov
mov
sub
push
daa
rol
xor
pop
adc
insl
lds
push
inc
cmp
lret
mov
and
stos
dec
leave
mov
bound
shlb
decl
jge
mov
outsl
or
xchg
sbb
or
sub
pop
xchg
jb
sbb
mov
flds
cmc
daa
jge
or
adc
lret
rcll
sbb
xor
aam
sbb
jge
lods
es
or
stc
lods
xchg
call
dec
fmul
push
mov
and
cmc
aas
icebp
pop
mov
out
or
cwtl
adc
test
dec
pop
nop
and
inc
sub
stc
ljmp
icebp
or
jo
xlat
outsl
dec
push
sbb
es
clc
out
test
stc
cwtl
add
fimull
push
arpl
or
mov
inc
cmpsb
mov
dec
sub
ljmp
dec
sahf
sub
rcrl
int
xor
popa
cwtl
and
pop
mov
mov
or
sti
or
movsb
or
or
rclb
dec
add
xlat
pop
and
std
test
and
lods
cmpsb
and
xor
mov
pop
aad
mov
shrl
jge,pn
pop
or
and
in
lcall
fdivl
push
mov
test
add
rorl
out
cmpsb
xchg
push
mov
mov
leave
pop
scas
cmpsl
popf
sub
adcl
add
pusha
xchg
and
roll
jbe
cli
popa
cltd
out
shll
inc
xchg
cmp
mov
data16
cmpsb
icebp
jecxz
sbb
mov
push
xchg
arpl
jecxz
imul
mov
rolb
dec
test
push
arpl
ljmp
popa
aaa
les
or
jo
pop
imul
and
push
pop
mov
stos
dec
movsl
mov
mov
or
lods
push
gs
mov
mov
test
sbb
into
and
inc
cmp
fsubrl
lods
dec
mov
stos
fcomp
sbb
into
pop
call
gs
aaa
dec
popf
popa
cmpsb
xchg
jl
shlb
inc
mov
inc
inc
inc
popa
pop
lods
inc
or
lods
ja
cmpsl
sbb
clc
scas
mov
sub
icebp
stc
ret
fsubrp
testb
jne
cmp
cmp
xchg
push
hlt
mov
cmp
hlt
mov
dec
mov
or
mov
mov
shll
sub
loopne
sbb
mov
mov
pop
int3
popa
xchg
adc
lcall
ret
sub
mov
mov
fwait
pop
mov
jge
mov
dec
sub
loope
pop
mov
fsubs
inc
sbb
sub
cmp
into
fsts
or
push
jl
cmp
xor
gs
xor
mov
jmp
in
aas
test
out
daa
lcall
jb
add
repz
addr16
cmpsl
push
fwait
icebp
inc
and
call
inc
aad
xchg
out
pushf
into
in
mov
dec
fs
lds
pop
or
xor
adc
imul
inc
fdivrl
rolb
sbb
dec
or
scas
jmp
xchg
cmp
add
fstps
movsb
dec
sbb
daa
push
arpl
arpl
stos
scas
notl
scas
rcll
push
mov
movsl
punpckhdq
mov
test
imul
es
mov
repnz
push
das
les
sub
or
jmp
xchg
dec
fwait
lret
inc
adcb
cmpsl
xchg
mov
mov
pop
stos
subb
inc
daa
push
inc
adc
xchg
mov
pop
mov
out
gs
fnstenv
imul
cmp
and
imul
sub
sbb
pop
lret
fcmovnb
xchg
in
lock
jmp
xchg
xchg
aam
jp
pusha
sbb
sahf
and
mov
and
push
lcall
and
dec
and
push
jmp
daa
dec
pop
fcomps
pop
enter
fs
mov
or
or
cmc
jp
cmpb
xchg
sub
jmp
pop
dec
out
into
idivl
test
test
cmpsb
pop
ror
xor
dec
mov
xchg
popa
dec
pop
mov
jns
pop
push
movsb
adc
or
aam
stc
stos
dec
lods
pop
sub
fnstenv
mov
add
sbb
dec
sbb
scas
inc
adc
or
adc
fists
scas
mov
inc
or
and
imull
sub
nop
sti
push
subb
stos
inc
negl
pop
mov
dec
sbb
push
pop
scas
and
into
js
insl
mov
rcrb
pop
test
inc
mov
dec
sub
mov
xchg
int
push
lea
fsubl
in
dec
inc
sbbb
add
stc
xchg
pop
hlt
cmp
adc
outsl
mov
or
or
mov
rcrb
shl
inc
mov
inc
lods
fldenv
nop
mov
xor
jmp
sahf
or
push
jb
jne
mov
inc
sub
cltd
mov
loope
scas
jmp
pop
mov
mov
push
insl
divl
and
jmp
es
sbb
pusha
push
inc
inc
mov
pusha
mov
or
sbb
sti
aam
idivl
pop
push
andb
cmp
mov
orl
xor
sbb
loop
mov
adc
push
pop
sahf
rclb
and
mov
mov
shlb
loop
jnp
mul
fsubp
dec
adc
push
ljmp
dec
imul
inc
jl
lock
lahf
sbb
mov
xchg
mov
mov
inc
jp
dec
testl
xor
mov
stos
lcall
and
test
adc
jno
test
pop
mov
dec
jg
ret
jmp
jmp
loope
sub
lahf
sub
jno
ret
lds
adc
mov
leave
rorl
xchg
inc
bound
inc
add
fwait
adc
mov
mov
scas
add
iret
mov
call
jp
push
sti
in
inc
test
cmpl
arpl
sub
inc
sbb
jmp
mov
in
into
mov
cmp
pop
cmc
jne
test
arpl
xchg
mov
inc
or
mov
call
jecxz
mov
test
iret
int
cmp
mov
mov
and
pop
jmp
shlb
shlb
xor
aam
cmp
cmp
lds
and
dec
cmpsl
imul
call
cmp
inc
push
and
xor
movsl
jmp
inc
inc
in
add
dec
enter
mov
clc
push
into
push
inc
xchg
pop
xor
push
sbb
fadd
xor
cmp
pop
and
and
ljmp
lds
sub
fwait
cmp
lods
add
fiadds
pop
pop
lret
lods
mov
test
push
stos
or
out
lahf
addl
imul
js
mov
imul
jecxz
cmp
pop
xchg
jne
mov
jmp
int3
in
pop
adc
jge
aas
lods
lds
add
xchg
pop
in
lret
shll
das
adc
xchg
sbb
mov
mov
mov
xchg
lret
stos
cmp
popa
add
fistps
inc
xor
movsl
int3
jmp
adc
or
sbb
or
aad
jne
mov
dec
fstp
call
test
mov
ret
inc
aas
mov
sbb
call
mov
mov
mov
pop
ret
and
ja
or
lret
or
pop
enter
dec
test
or
mov
dec
adc
call
rorb
jg
mov
dec
and
push
nop
adc
cmp
mov
inc
mov
dec
sub
xor
stos
inc
mov
cmp
xor
test
movsb
enter
ret
movsl
les
or
mov
in
in
push
jmp
cld
movsl
inc
jb
mov
fldcw
pop
push
movsl
pop
jo
mov
sbb
into
addr16
in
xor
xchg
call
gs
rol
and
or
mov
sub
and
movsl
mov
add
rorl
mov
push
sub
jb
sbb
cmpsl
pop
int3
testl
shrl
sub
or
push
jns
mov
mov
pop
popf
inc
rcrl
ljmp
test
cmp
iret
out
in
sbbl
jmp
data16
or
xchg
push
mov
test
daa
pop
sarb
sbb
xchg
mov
and
xor
aam
and
cmp
sbb
sahf
jno
sbb
movsl
pop
push
mov
cmpsl
loope
add
add
int3
jmp
mov
and
jnp
mov
clc
mov
call
xchg
mov
bound
add
jns
rcrl
add
jge
inc
repz
nop
testb
outsb
dec
add
test
fcmovnb
add
add
or
test
add
push
sub
push
shl
push
mov
lret
xor
mov
jno
out
push
mov
mov
mov
stc
out
fisttpl
sahf
es
lret
out
cmpsl
inc
adc
pop
jo
je
enter
mov
sbb
adc
and
cwtl
mov
mov
lods
fdivrs
jae
mov
or
cmp
in
inc
sbb
mov
pop
mov
xchg
adc
pop
add
mov
test
mov
aad
and
mov
adc
dec
into
repz
adc
aaa
jns
test
mov
mov
mov
lods
sarb
and
cmpsl
pop
ret
inc
xchg
jge
lret
mov
mov
adc
mov
sub
mov
cmp
rol
ret
loopne
jns
mov
mov
sti
arpl
int
daa
cli
and
shlb
scas
cmpsb
mov
mov
addr16
adc
repz
cmp
fidivl
xchg
add
cs
push
pusha
ret
or
fidivl
jo
jae
cmpsb
aam
lahf
subb
jmp
into
mov
ja
clc
jae
cmp
test
fsubl
pop
cmp
and
fucom
int3
repnz
mov
div
testb
sbb
loope
dec
scas
push
and
add
add
jae
pop
insl
jno
mov
sub
fsubrs
not
in
sbb
lds
loop
mov
popf
imul
movsl
sbb
bound
pop
or
add
push
push
or
xor
sti
lds
xchg
or
xlat
cltd
inc
mov
mov
stc
std
bnd
outsl
or
loope
sub
test
and
mov
outsl
pop
xor
and
sub
jle
idivl
lock
add
pop
adc
and
cmpsl
jmp
movsb
xchg
int3
push
fsubrl
ret
mov
fcmovb
add
xchg
mov
mov
jno
negb
stos
daa
sarb
call
xor
aaa
mov
cmp
mov
sbb
in
aas
mov
sbb
bts
pop
mov
test
or
sbb
adc
mov
movsb
mov
jo
cmp
pop
aam
insl
xor
icebp
jae
mov
popf
lahf
stos
clc
outsl
push
push
subb
rorl
fwait
jl
mov
lods
xchg
fisubrs
cmpsl
xor
iret
jg
shl
pop
xchg
mov
dec
inc
dec
ja
cmp
pop
sub
xor
mov
and
or
dec
xchg
mov
ljmp
dec
adc
js
or
test
fldenv
jb
sub
pop
dec
jmp
xchg
mov
andl
push
jbe
mov
push
inc
mov
ficompl
test
in
inc
push
cmp
movb
outsl
int
sub
or
inc
into
arpl
sahf
fisttpll
cmpsb
pop
aam
jns
imul
xchg
in
jp
sbb
mov
cmpsl
jae
into
lret
mov
mov
stc
mov
lret
outsl
cwtl
or
mov
aam
daa
lahf
jns
cmpsl
cs
cmc
inc
aad
cmp
xchg
insl
cltd
popa
ljmp
adc
jb
stc
sti
push
inc
pop
orl
ja
scas
stc
sbb
test
sti
stos
jne
mov
imul
dec
rcrb
adc
jp
jmp
mov
pop
dec
push
cmpsl
lock
add
jae
dec
cs
sbb
gs
push
mov
ret
push
aaa
test
mov
adc
repnz
jns
leave
faddl
adc
add
fsubrs
inc
pop
sbbb
xor
xor
es
mov
out
repnz
pop
inc
xchg
orl
pop
fwait
mov
lahf
jge
push
mov
mov
test
cmpsl
mov
pop
inc
into
pop
repz
mov
idiv
sbb
pusha
jle
lret
cmp
aam
pop
call
mov
icebp
fcomps
iret
lret
push
std
fwait
lret
pop
popf
stos
loop
or
jp
xchg
into
cmc
inc
aam
add
out
rclb
and
add
lcall
pop
loope
sbb
push
mov
cmpsl
test
test
mov
scas
adc
call
loop
stos
in
int
sbb
scas
inc
push
js
xor
rcrl
stc
scas
stc
jp
lods
mov
fbld
pop
insb
test
call
call
xchg
int3
leave
jmp
jbe
jl
jb
inc
push
push
and
in
cmpsb
mov
cmp
add
push
gs
jmp
push
jmp
lds
gs
cmp
test
and
lret
or
sub
push
mov
mov
adcb
pop
stc
xchg
sbb
andb
mov
mov
cmc
dec
mov
push
es
sub
aad
dec
or
mov
push
rcr
jo
and
lea
stos
popa
mov
lahf
push
mov
pop
ss
es
mov
stos
rcll
lds
push
js
and
mov
cmp
mov
lea
inc
jnp,pt
or
xlat
xchg
mov
sbb
sub
fisubl
dec
pushf
pop
mov
sahf
dec
xchg
pop
loope
dec
addr16
leave
pop
in
jo
sbb
jbe
mov
shl
dec
sbb
pop
daa
push
fdiv
mov
jg
aaa
ja
xchg
adc
stos
sub
test
movsb
repnz
mov
lcall
pushf
dec
or
call
jne
aas
imul
jmp
cmpsb
popa
and
iret
stos
cli
gs
mov
in
add
out
ficompl
mov
adc
cmpsl
pop
mov
lods
sahf
call
cmp
test
push
mov
xor
aaa
sarb
icebp
xchg
test
pop
test
rorb
lahf
jmp
in
adc
pop
mov
sbb
idiv
sub
push
dec
repnz
cmpsl
iret
insl
adc
repz
stc
scas
les
in
aas
or
jp
mov
decl
les
mov
movb
mov
aaa
push
add
cmpsb
and
gs
mov
jle
sbbb
mov
cmp
lods
mov
xchg
mov
out
mov
fwait
loope
sbb
pop
adc
lock
and
jnp
stos
adc
sbb
fsubs
call
xchg
or
dec
repnz
aaa
mov
inc
sti
std
push
or
flds
rclb
iret
bound
dec
mov
lcall
imul
movb
or
cmp
addb
sub
sbb
adc
popf
pusha
repnz
leave
add
jl
test
subl
out
adc
lods
mov
sbb
pop
pop
mov
xchg
pop
xor
sub
cmp
sbb
subl
pop
loopne
pop
mov
adc
cld
xchg
inc
pop
stos
vpunpcklwd
stos
dec
lods
shll
inc
inc
arpl
mov
shlb
rolb
push
aam
mov
xchg
inc
les
clc
test
or
insl
jnp
cmp
sbb
gs
int3
xorb
cmp
aad
loopne
jmp
lods
mov
enter
inc
sbb
sbb
mov
fdivrs
mov
or
sub
and
daa
sti
in
cmpsl
cmp
push
and
xor
pop
outsl
jae
xchg
mov
mov
outsl
fsubrs
lods
sub
adc
in
sti
dec
mov
mov
add
movsb
mov
sub
lods
xor
cmpsl
mov
push
pop
mov
scas
mov
pop
cmp
sar
js
add
sbb
call
and
addb
adc
mov
mov
mov
popa
fmul
pop
fildll
adc
sub
sar
inc
int3
sbb
leave
ret
pop
popf
ss
xor
mulb
stos
test
xchg
in
repz
xor
shll
xorb
mov
cld
test
loope
jmp
or
mov
add
call
dec
mov
xor
ss
and
pop
mov
push
mov
mov
cmp
movsl
or
jmp
pop
xchg
inc
inc
sub
fucom
insb
mov
pusha
mov
mov
popa
sbb
icebp
out
xor
es
cmpsl
sub
das
mull
sub
mov
nop
sti
cmp
jecxz
aas
outsb
pop
loop
loope
fadd
movsl
loop
mov
or
mov
adc
add
inc
imull
pop
adc
mov
xchg
arpl
popa
ret
sbb
stos
cmp
mov
xchg
sub
rol
mov
mov
pusha
fidivrs
in
pop
cwtl
pop
leave
aas
fmul
mov
stos
fisubs
or
cmp
hlt
fidivrl
pop
jbe
sub
mov
pop
jl
faddl
add
in
sbb
and
adc
mov
mov
mov
pop
stos
test
pop
mov
std
and
jge
jmp
scas
dec
dec
stc
inc
cld
xor
pop
sahf
fnstsw
aam
mov
pop
fisubs
aam
stc
test
push
sbb
pop
pop
xchg
gs
inc
addb
lret
sub
xor
cmc
adc
roll
and
sbb
sbb
aaa
sub
fidivrs
add
push
jb
lds
arpl
or
and
sub
mov
loope
cmpsl
xor
dec
dec
push
shll
adc
mov
push
pop
lcall
adc
fisttpll
lods
mov
jmp
sub
jmp
push
sub
mov
out
test
mov
jmp
imul
movsb
adc
das
gs
pop
lret
jnp
cmpsb
adc
xchg
lock
pop
pop
cwtl
pop
repnz
test
push
leave
jnp
mov
push
inc
xor
cltd
sbb
fidivs
mov
leave
sbb
mov
push
inc
dec
int3
lret
inc
fdivrs
les
lds
int3
in
mov
cwtl
cmp
mov
pop
lods
lret
rclb
imul
das
out
cmpsl
fwait
xor
aad
cmp
movsb
fiadds
xchg
add
mulb
add
pop
popf
xchg
mov
jmp
cmp
fcoml
pop
lret
or
das
addr16
mov
out
ljmp
xor
mov
jl
cli
xlat
int3
shl
pushf
shrl
fisttpl
out
jmp
mov
call
and
stos
jns
pop
xlat
cmp
xchg
mov
test
shr
out
jb
and
sarb
loop
add
and
push
pusha
cmp
mov
sub
sub
push
jo
inc
sti
push
mov
fisubrs
jbe
cmp
mov
xlat
cmp
sub
pushf
mov
mov
pusha
lods
outsl
jmp
arpl
shr
subb
iret
shl
sub
cwtl
and
loop
call
jo
push
sahf
push
stos
jp
mov
aaa
loope
int
cmp
leave
orb
leave
adc
push
in
mov
mov
mov
imul
push
les
sub
xchg
daa
sub
jmp
add
daa
pop
sbb
dec
lods
ret
push
aas
icebp
mov
add
stc
mov
mov
in
dec
mov
pop
lahf
movsb
xchg
cmpsb
lret
ja
pop
sbb
mov
lret
pop
scas
jl
dec
imul
pusha
pop
inc
cmpsb
loop
pusha
ret
cwtl
xor
add
and
stos
xor
dec
sub
scas
iret
or
orb
jne
roll
scas
testl
or
shrb
sub
icebp
jge
lret
daa
icebp
lcall
shl
mov
into
fsubrs
jl
fstps
loope
call
mull
and
mov
xor
mov
movsl
or
sar
and
subl
sbb
jmp
shlb
xchg
push
call
add
or
js
inc
sub
mov
nop
popaw
xorb
jmp
xor
mov
bound
icebp
fmull
mov
inc
mov
testb
push
loop
add
idiv
pushf
shl
xchg
ljmp
inc
sub
fidivrs
lds
js
cmp
add
dec
inc
and
popa
mov
fwait
mov
dec
mov
ret
sub
push
mov
iret
push
sub
push
add
hlt
pop
inc
sbb
sarl
push
daa
mov
jge
pop
pop
cmpsl
dec
fimuls
stc
push
or
mov
push
loope
push
test
cmpb
fs
pop
popa
pop
loope
sbb
popa
outsb
idiv
cwtl
dec
mov
sti
sbb
or
fisttpll
inc
sbb
xchg
xor
mov
mov
test
popa
cmc
insl
call
push
hlt
ret
lds
inc
lcall
adc
inc
movsb
sbb
inc
rol
mov
out
cmpsb
xorb
cmp
fwait
lds
sub
jne
mov
push
fldcw
es
sbb
fsubr
ror
dec
mov
jno
mov
addr16
inc
mov
divl
and
dec
into
inc
mov
or
sbb
dec
mov
cs
cmp
add
jge
gs
jge
out
rclb
pop
xchg
sbb
jo
test
addr16
jp
add
loopne
mov
sub
test
jl
mov
lods
dec
xor
pop
xor
jecxz
stos
sbb
xchg
leave
or
cmp
jmp
sbb
xchg
pop
cmp
xchg
les
xchg
sarb
enter
sbb
sbb
icebp
adc
es
test
sub
xchg
fidivl
out
push
pop
pop
in
repz
andl
mov
push
push
outsl
mov
adc
jmp
push
fisubs
stc
inc
movsb
aas
mov
cs
jo
sahf
pop
mov
fwait
push
insb
mov
mov
mov
out
cwtl
lods
ret
pop
xchg
push
pop
pushf
ljmp
data16
lock
dec
adc
cwtl
sub
inc
mov
andb
test
stos
add
add
xchg
sbb
cmp
rol
mov
pop
rcrb
sub
push
cmp
inc
in
push
mov
xchg
enter
int3
lock
xchg
mov
dec
mov
adc
add
cmp
mov
mov
dec
aam
int3
rolb
pop
lods
mov
xchg
sub
inc
les
cmp
jae
xor
lcall
lock
push
pusha
jecxz
cmc
sbbl
popf
sub
ja
dec
sbb
std
xor
and
or
call
dec
sub
arpl
jno
push
mov
push
cmp
pop
adc
imul
fisubrs
stos
rcll
divl
cs
and
push
mov
es
and
movsl
scas
stos
dec
cmp
test
push
or
pop
fidivrs
test
or
jns
mull
jno
jno
inc
and
cmp
ret
xchg
mov
test
mov
mov
das
mov
lods
outsl
jbe
push
add
shll
cmp
mov
adc
lahf
fcmovnb
dec
mov
sarb
add
test
or
sub
cli
pop
mov
sbb
cld
mov
mov
jp
pop
arpl
pop
and
stos
scas
cmp
iret
xchg
popf
mov
stos
jbe
test
ljmp
movsl
cmp
lret
lods
lret
fwait
ss
out
int3
outsl
roll
or
cmp
push
pop
mov
stos
mov
test
loopne
or
mov
sub
aaa
add
rol
cltd
test
scas
sbb
orb
testl
mov
add
dec
negl
sub
pop
out
mov
mov
lods
cld
test
or
sbb
bound
sub
cmp
loopw
dec
pushf
test
dec
repz
mov
int
pop
inc
gs
mov
adc
dec
xchg
insb
sbb
dec
mov
mov
and
jmp
movsl
jbe
gs
mov
mov
mov
mov
nop
pop
dec
cmp
cmp
sbb
outsb
xchg
mov
stos
lahf
xor
jb
fisttpll
cmp
pop
fnstenv
sbb
pop
mov
sub
sbb
jae
lock
in
pop
push
and
add
add
movsb
fdivl
dec
sub
mov
mov
and
orb
and
jge
jl
stos
loop
lahf
mov
enter
inc
push
mov
test
or
jge
bound
pop
push
mov
sub
pushf
and
call
jmp
add
sbbl
push
adc
and
xchg
fs
out
pusha
jnp
push
test
xchg
mov
fldcw
mov
xor
and
in
cwtl
xchg
cmpsl
imul
mov
mov
dec
mov
jmp
shl
nop
or
or
jmp
and
pop
sbb
icebp
into
pop
imul
cmp
pusha
cmc
cmp
mov
test
lods
pop
cltd
lock
mov
push
pop
sbb
xor
sbb
and
test
sub
outsb
mov
mov
inc
pushf
stos
or
adc
das
lods
sub
xor
and
push
mov
push
adc
lcall
neg
pop
cmp
xchg
dec
jmp
lds
xor
fwait
push
mov
and
sub
es
push
xor
bound
out
sbb
out
addr16
ljmp
sbb
mov
or
outsl
test
cmpsl
bound
jge
gs
cmp
and
push
inc
mov
mov
lock
daa
subb
xchg
fildl
jns
fs
add
int3
sub
cltd
mov
sub
mov
dec
arpl
adc
lea
fisttpll
inc
dec
ret
or
push
cltd
sbb
subb
lock
mov
imull
sub
popf
rcrb
enter
clc
cmp
mov
inc
mov
popa
psllq
inc
xlat
dec
mov
mov
inc
mov
cmp
mov
mov
ret
mov
push
mov
pop
jae
inc
fsubrl
cmpsb
inc
lods
sahf
shr
xor
addb
es
stc
les
mov
sahf
cli
mov
shlb
mov
mov
mov
sub
ljmp
in
or
repnz
addb
mov
mov
leave
imul
mov
cmc
in
test
fidivl
mov
jns
mov
out
cmp
jle
lock
jne
imul
inc
mov
fs
inc
popa
movsl
or
dec
sub
jb
xchg
cmp
add
pop
cmp
call
ret
mov
cmp
jecxz
frstor
orl
dec
push
pushf
dec
fwait
dec
dec
movsl
std
jns
cmc
mov
xor
pop
mov
lds
mov
push
sub
xlat
dec
fcompl
ret
mov
pop
mov
jle
call
mov
les
dec
cmp
mov
loopne
adc
imul
enter
test
aaa
roll
add
xor
cmpb
lods
inc
jp
inc
pushf
outsl
xchg
cmp
ljmp
aaa
in
loopne
test
insl
mov
inc
pop
imul
add
in
mov
leave
mov
cmp
push
and
scas
aaa
out
dec
adc
cmp
mov
idivl
sub
dec
repz
inc
scas
ss
fidivl
nop
inc
sub
cwtl
sub
xchg
es
and
enter
je
sbb
inc
push
stos
mov
mov
inc
adc
adc
popa
pop
in
inc
inc
xchg
sub
incb
push
repz
lcall
mov
addr16
cmpxchg
pop
ret
jbe
mov
mov
mov
scas
sbb
mov
arpl
call
lock
repz
rcrl
jae
jno
leave
mov
cmp
ret
ljmp
imul
push
in
mov
cmp
push
mov
inc
jno
jno
imul
cmp
decb
jb
or
push
test
enter
mov
imul
popa
mov
stos
mov
mov
mov
mov
sbb
add
lcall
adc
jmp
and
add
jbe
adc
pop
shlb
stos
les
xlat
xor
sbb
jno
mov
add
outsl
cmc
into
jns
es
sbb
outsb
push
jecxz
mov
inc
jns
enter
mov
fnstenv
and
mov
shll
adc
jbe
mov
sub
xor
mov
xor
in
gs
pop
cmp
or
jnp
inc
sub
ret
pop
mov
call
dec
insl
fcompl
rorb
lds
scas
imul
mov
add
sub
mov
jecxz
push
mov
call
popa
add
loop
inc
sub
fnstsw
lock
jns
bound
mov
cmp
mov
sarl
and
into
xor
xchg
mov
dec
out
lcall
ljmp
or
pop
in
fldl2t
xor
data16
mov
mov
mov
mov
fwait
push
jmp
pusha
mov
cmp
mov
das
jle
push
jae
bound
add
cmpsl
mov
daa
test
mov
es
in
in
mov
mov
enter
lds
pop
or
fildll
gs
inc
xchg
dec
stc
movsb
and
push
cld
addl
pop
jne
cmc
pop
mov
popf
push
mov
lock
mov
jge
cwtl
add
shr
add
mov
icebp
stos
cmpsl
imul
es
cmp
and
pop
jae
or
mov
stos
aaa
dec
icebp
cld
aad
jp
cmp
inc
xchg
cmp
mov
jno
loopne
pop
mov
mov
jecxz
gs
fadds
jmp
cmpsb
or
adc
dec
jl
cmpsl
cld
imul
inc
stc
ret
in
mov
sbb
iret
scas
dec
cmp
gs
inc
sub
inc
pop
daa
std
inc
stos
dec
cli
cmp
dec
and
test
dec
and
subl
jmp
test
lahf
jmp
inc
jns
inc
mov
in
fwait
scas
jns
in
lea
ds
popf
push
sub
fiaddl
inc
popf
jge
push
sbb
loope
xchg
pop
inc
cmpsl
pop
xchg
jae
addl
xchg
or
push
lock
mov
and
movsl
or
ja
sbb
inc
mov
push
jne
pop
jo
xchg
cmp
inc
or
jno
sub
cmp
or
test
adc
mov
shrb
cs
mov
cmp
sbbb
or
test
push
mov
mov
iret
push
sbb
out
hlt
cltd
cli
push
inc
or
dec
xchg
mov
in
stos
adc
mov
jmp
pushf
addl
push
or
pop
mov
push
cmp
pop
aaa
cs
popa
int3
or
fcoml
or
push
bound
jmp
imul
mov
sbb
repz
pop
sahf
xchg
cld
dec
jp
imul
imul
ror
adc
jns
lahf
pushf
push
push
and
push
or
lods
into
shl
fwait
mov
imul
inc
add
cmp
lret
dec
jno
dec
jnp
jmp
xchg
repz
imul
repnz
sti
mov
cmc
ljmp
bound
add
add
mov
or
sbb
mov
in
imul
dec
mov
mov
mov
and
or
cld
jl
and
movsb
jns
div
int3
push
jl
and
ljmp
mov
out
pop
sbb
pop
sti
jmp
loope
test
fs
lods
stos
jmp
mov
inc
sbb
xor
cmpsb
mov
mov
add
add
inc
imul
fisubl
pop
and
out
jno
mov
mov
mov
inc
dec
ret
dec
xorl
mov
mov
adc
cmpsl
jmp
ficomps
scas
mov
outsl
sti
adc
scas
push
int3
and
dec
xor
aaa
pop
push
lea
les
ss
sub
inc
jmp
and
in
data16
and
fs
in
arpl
jg
mov
mov
pop
add
mov
xorb
sbb
pusha
jnp
sti
dec
daa
sub
pop
adc
unpckhps
cmp
mov
ljmp
popa
mov
xchg
enter
cmpsl
outsl
ret
add
inc
mov
outsb
pop
xor
fcmovnb
xorl
cld
mov
stos
push
pop
mov
jnp
ljmp
add
gs
stos
test
adc
adc
and
sbb
mov
push
ret
jg
dec
inc
xorb
stos
pop
push
mov
xor
jne
mov
ja
test
mov
lds
cwtl
mov
jne
or
out
adc
ja
xchg
imul
pop
jecxz
rcrb
loopne
loope
push
fisubs
sub
mov
push
or
mov
inc
ljmp
in
pop
hlt
cmc
cld
ret
sub
xor
inc
mov
adc
inc
lea
mov
mov
jmp
xchg
sub
or
jno
cmp
jmp
mov
dec
sti
and
movsl
sbb
daa
sbb
es
cmp
jge
cmp
sub
cmpsl
imul
cmp
xor
test
in
lcall
jae
and
mov
fisubl
decb
sbb
mov
jle
sbb
mov
push
lcall
inc
push
and
insl
sbb
xchg
lcall
pop
or
dec
inc
cltd
lods
lcall
add
mov
int3
inc
cld
mov
xor
jmp
test
scas
inc
dec
sbb
xor
jb
xor
push
pop
jne
frstor
sub
xchg
mov
popf
mov
cmp
cmp
out
cmp
mov
inc
ja
jne
lret
sbb
mov
jae
movsl
pop
sbb
jns
in
mov
shrb
in
pop
stc
outsl
xor
mov
cwtl
adc
addr16
mov
movsl
xchg
imul
mov
stos
xchg
inc
pop
mov
mov
mov
push
sbb
mov
add
mov
jb
int
jmp
repz
test
or
mov
outsb
imul
pop
inc
aaa
loope
cmp
cmp
push
scas
pop
jg
cmpsb
mov
and
adc
cmp
sub
cmp
sub
jno
mov
cmp
and
jg
mov
add
sub
stos
cmp
jecxz
add
inc
outsb
scas
addr16
pusha
pop
jl
clc
sbb
pop
cmp
xchg
inc
dec
popf
inc
fldcw
sti
push
dec
mov
sub
out
pop
and
dec
lea
xor
mov
lods
in
mov
dec
cli
mov
mov
inc
ja
mov
or
sbb
ja
test
jmp
pop
lcall
cmp
adc
pop
mov
aas
insl
dec
imul
js
mov
adc
bound
sub
iret
cmc
dec
jle
outsl
hlt
mov
fistps
sub
push
lea
cld
cmp
jmp
clc
cld
mov
movsb
add
cmp
sbb
ret
mov
test
movsb
sub
int
gs
sbb
jge
ljmp
dec
or
and
xor
and
push
xor
mov
adc
ss
push
sbb
divl
sub
out
dec
dec
aas
test
sub
ljmp
push
mov
mov
out
popa
scas
test
lret
dec
xchg
mov
and
cmpl
loopne
xlat
loope
pop
mov
movsl
mov
push
mov
xor
pop
ja
shlb
mov
scas
adc
in
sbb
fcoms
xor
popa
jnp
pop
loop
cmp
jmp
data16
fidivs
cmp
xor
cmp
stos
divb
mov
jns
sub
stos
jmp
rcrb
imul
xor
int3
cltd
aam
lahf
pop
xor
fldenv
pop
shrl
pop
call
stos
pop
lret
pop
cmp
and
mov
jl
call
inc
mov
push
out
dec
xlat
dec
add
xor
call
or
stos
imul
pop
imul
xor
loope
sub
sbb
mov
call
inc
sub
bnd
mov
fs
icebp
dec
jmp
cmc
popa
ret
int
add
jmp
lret
inc
jmp
pop
adc
sbb
and
sbb
scas
xor
mov
mov
mov
sbb
inc
push
add
out
xchg
cmpb
stos
xor
and
jno
and
sbb
add
popa
sbb
add
imul
mov
adc
mov
fstps
out
les
pop
lds
sbb
or
arpl
movsl
pop
pop
adc
or
lret
cmpsb
loopne
mov
dec
or
and
inc
lahf
pusha
cmp
stos
add
mov
into
push
pop
cmp
mov
das
cli
hlt
jl
mov
inc
mov
aad
fisubrl
bound
pop
imul
dec
xchg
push
push
add
loope
lds
test
stos
jnp
or
aaa
dec
pop
js
add
and
mov
mov
xchg
scas
ret
imul
adc
xchg
test
xor
lds
scas
mov
movsb
mov
fidivrs
mov
pop
jg
sub
stos
shlb
mov
sbb
ror
push
inc
push
andl
and
inc
repz
push
call
xlat
mov
inc
pop
mov
subb
faddl
jae
lock
jne
pop
pop
lcall
mov
scas
mov
push
or
enter
insl
call
inc
sti
jg
fcmovne
pop
pop
push
jmp
pop
les
xor
xchg
dec
pushf
push
inc
test
xlat
jae
ss
sub
pop
int3
push
ret
sarl
leave
xchg
fs
mov
lcall
rcrb
sub
cmp
mov
jae
cmpsl
iret
push
enter
jmp
leave
sbb
jns
imul
jmp
sub
mov
call
orb
add
push
sub
jp
test
sbb
cmp
lods
push
pop
dec
jns
mov
inc
push
ret
xor
or
mov
adc
add
dec
sub
jl
cmp
imul
mov
es
cmc
dec
lds
inc
mov
cmp
sub
cmp
enter
rcrb
pop
sub
dec
mov
movb
pop
lahf
add
stos
pushf
lahf
mov
jb
mov
repnz
jle
fwait
cs
fnsave
mov
sub
mov
cmp
mov
sahf
and
lock
das
lds
add
push
arpl
push
clc
arpl
fwait
cmp
pop
stos
mov
mov
cmp
and
push
xor
test
mov
movsl
mov
sub
ja
mov
daa
divl
lcall
sbb
scas
or
inc
daa
gs
enter
pop
mov
sbb
xor
pop
lds
or
popf
stc
sbb
xor
movsb
test
mov
push
adc
mov
xchg
push
popa
adc
mov
inc
gs
add
jge
adc
pop
sub
fcmovnb
movb
or
in
movsl
stos
mov
sbbb
je
dec
inc
and
mov
test
adc
mov
in
adc
push
imul
repnz
add
xchg
loope
test
mov
test
lret
andb
xchg
pushf
lods
push
insl
mov
lcall
xchg
xstore-rng
cmpsl
add
cmp
sahf
push
jo
in
outsb
leave
movsb
stc
or
fildll
ret
in
adc
mov
sub
test
adc
cmpb
dec
pop
mov
adc
inc
lcall
out
scas
cmpb
jne
std
hlt
dec
fdivrs
inc
xor
repz
add
icebp
in
mov
stos
xor
xchg
xor
sbb
cmp
dec
lods
cmp
mov
rolb
popa
scas
orb
out
cs
xchg
xor
mov
pushf
mov
xor
cmp
jl
pushl
outsl
stc
xchg
imul
outsb
inc
push
addr16
out
or
hlt
mov
aas
imul
jmp
leave
shrb
cmpsb
subb
sub
pushf
pop
sub
mov
outsl
lea
cmpsl
rcrb
inc
out
cmpsl
into
mov
jmp
push
xor
and
cmpl
pusha
pop
aam
je
mov
adc
jo
dec
ficompl
sub
stos
inc
dec
ljmp
pop
push
xchg
inc
add
xor
pushf
jne
mov
dec
sub
popa
xchg
push
dec
sbbb
imul
into
fwait
int3
mov
movsl
push
adc
rcrl
int3
inc
or
push
decl
popa
add
or
push
aam
inc
jno
adc
gs
dec
stos
enter
mov
or
xchg
cmp
inc
pop
test
mov
andb
sub
ja
lcall
mov
arpl
sbb
into
add
lcall
orb
daa
loope
dec
jg
xchg
pusha
outsb
jmp
dec
jp
test
adc
sbb
push
dec
sbb
bound
jb
sbb
in
movsl
mov
loopne
xor
mov
jl
outsl
inc
inc
fldl
pop
test
in
mov
mov
sub
gs
push
into
movsl
test
icebp
stc
pusha
clc
enter
rol
pushf
lock
sbb
pop
imul
dec
movsb
inc
outsl
or
add
inc
fmuls
and
push
adc
insl
adc
fsubl
and
add
xchg
mov
outsb
aas
insl
ret
fdivrs
mov
mov
add
and
jmp
jne
xchg
shrb
imul
pop
pop
iret
dec
inc
sub
stos
mov
arpl
cmp
in
les
mov
mov
sbb
stos
or
dec
adc
sbb
push
test
add
inc
rorb
jl
mov
stos
add
lret
aas
jbe
add
jp
mov
jmp
mov
mov
xor
xor
mov
inc
pop
push
push
mov
sti
fcompl
xchg
jae
ss
pop
aaa
mov
ret
adc
pop
arpl
pop
dec
mov
adc
add
test
stos
jno
repnz
add
jmp
or
mov
movsb
jmp
insb
outsb
xchg
xchg
mov
call
mov
adc
stos
mov
hlt
mov
xor
mov
lret
out
insb
addr16
push
sbb
sub
sub
loopne
shl
cmp
into
mov
push
mov
cld
sbb
xchg
lahf
fdivl
adc
enter
sub
and
fcomps
xor
std
pop
dec
scas
adc
sar
mov
inc
push
mov
or
fldt
sbb
jge
jg
mov
jns
lcall
xchg
mov
aas
fs
mov
adc
jb
aas
sbb
call
sub
into
mov
loop
cmp
mov
pushf
sbb
ret
xor
and
inc
or
orl
or
mov
test
insb
pop
cmpsb
hlt
mov
ja
add
mov
insl
divl
inc
sbb
rol
popa
flds
cmp
add
enter
lahf
mov
fs
repnz
mov
mov
or
dec
mov
daa
jmp
inc
pop
jne
pushf
adc
repnz
aaa
gs
inc
mov
push
mov
mov
test
inc
push
dec
sbb
pop
push
cmp
int3
push
mov
lods
mov
sub
fdiv
insl
sbb
test
jb
into
sub
sub
push
hlt
sbb
mov
sub
add
adc
xor
gs
clc
jno
push
loopne
fwait
js
daa
xchg
ret
lcall
test
push
and
cmp
sbb
adcl
test
imul
inc
sbb
fucom
mov
ficompl
mov
sbb
insb
pushf
enter
jmp
mov
mov
mov
adcb
xchg
jmp
stos
loop
les
mov
cmp
cmp
in
sbb
dec
xchg
cltd
jmp
popa
mov
fistps
cmpsb
out
cmp
cs
repz
inc
imul
inc
stos
xchg
push
lahf
shr
and
mov
jne
lods
sbb
pusha
mov
jne
mov
sub
fsubrl
add
inc
out
outsl
pop
sarb
out
cmp
inc
test
fwait
dec
icebp
popa
push
repz
jge
pop
fcmovne
inc
sti
scas
repnz
sbb
adc
leave
out
xor
jnp
les
jno
push
stos
jno
lret
mull
gs
mov
mov
stc
jb
sub
ljmp
jns
inc
cld
xchg
cltd
stos
cmp
inc
hlt
popf
test
mov
fcomps
out
call
cmp
add
in
mov
movsl
imul
mov
sub
dec
lods
sarl
adc
std
pusha
pop
cmp
xchg
xor
or
aaa
repz
pusha
inc
ds
vpmadcsswd
stos
stos
mov
mov
cmpsl
or
daa
xchg
xchg
lods
push
movsb
scas
lods
mov
sbb
jle
cltd
fdivrs
mov
shlb
loop
xor
cmp
pushf
jge
adc
sub
gs
pop
mov
inc
pop
lds
out
cld
mov
inc
jae
mov
ss
call
jo
sub
lea
mov
stos
dec
sub
dec
popf
mov
shlb
hlt
mov
mov
int3
cmp
mov
mov
or
inc
sbb
pop
pop
enter
in
fdivrp
xor
jmp
push
jp
sub
add
cltd
arpl
les
jl
jg
and
push
pop
loop
push
xorb
inc
mov
xchg
xchg
sub
mov
cs
stos
add
movsb
jmp
sahf
in
inc
jmp
sti
add
shll
stc
stos
mov
mov
popf
adc
test
addb
add
scas
jmp
xlat
lahf
int
sub
scas
mov
push
inc
sarl
stos
mov
jmp
xchg
or
or
cmp
stc
adc
sub
push
and
sbb
jo
pop
cs
sub
test
inc
adc
pop
inc
or
mov
in
sbb
mov
scas
push
push
push
mov
mov
mov
inc
sbbl
pushf
jg
std
fnstenv
push
cmc
lds
lds
xchg
in
ss
add
sbb
pop
ja
cld
outsl
add
cmp
lods
imul
fisubs
jge
cmp
ret
sbb
gs
shrb
pop
aad
xor
dec
pop
sbb
call
enter
push
or
pop
pop
sub
ret
lock
f2xm1
jmp
popa
out
adc
xor
inc
fldenv
mov
mov
popa
mov
jae
pop
dec
jae
sub
sti
ficoms
cs
mov
adc
imul
cmp
cmpsb
addr16
and
add
push
sub
lock
cs
adc
adc
mull
cmp
mov
cmpsb
lods
push
mov
cwtl
add
mov
inc
inc
and
call
in
enter
popa
fwait
scas
pop
dec
xchg
andl
jo
into
mov
loopne
jmp
popa
adc
test
xchg
testl
sub
pop
aad
xor
test
or
popf
lahf
mov
test
cmp
push
lods
and
dec
fcoms
cmpsb
adc
jmp
dec
mov
loop
sub
cmp
or
and
xchg
xor
fstpl
push
std
adc
int
push
jl
js
in
push
xchg
adc
jno
mov
mov
sti
fiadds
inc
nop
dec
outsl
sub
push
dec
adc
ret
jg
dec
sub
inc
jne
mov
fsubp
push
fcoml
add
cwtl
mov
and
sti
inc
pushf
mov
inc
and
xchg
jmp
decl
jb
test
push
jp
and
push
mov
pop
orl
or
sub
jmp
fimull
popa
stc
and
pop
jg
xlat
cli
inc
jmp
pop
dec
aaa
out
xor
jp
fcomps
sbb
mov
mov
add
cmpl
aam
inc
cld
mov
sbb
mov
in
mov
jge
sub
imul
ss
lahf
popf
sub
sbb
inc
lcall
fnstenv
addr16
je
cmp
mov
stc
xor
mov
and
popf
pop
lods
xchg
mov
lods
ret
sbb
popf
ljmp
xchg
dec
ds
fidivrl
xor
sbb
xchg
inc
jb
mov
xchg
jb
nop
filds
movsb
push
xor
rcrl
and
or
lds
movsb
aam
mov
xchg
jns
mov
jns
gs
leave
pop
icebp
cld
loopne
mov
into
out
fimull
int
xchg
mov
mov
fbld
xchg
test
adc
test
push
stos
xor
into
rol
mov
pop
lea
jo
xchg
ja
xchg
mull
cmp
popa
mov
mov
fwait
dec
mov
leave
movsl
jecxz
sbb
imul
les
ret
mov
shlb
aaa
fs
or
adc
fidivrs
fisubrs
cmp
xchg
xor
ret
lahf
aad
int3
stc
fwait
test
xchg
mov
fdiv
test
mov
push
adc
adc
adc
jae
shlb
popf
push
andl
cwtl
and
sub
into
dec
ret
mov
addr16
pop
inc
xlat
jae
ja
sub
jae
mov
fxtract
divl
jmp
loope
push
shrl
jge
test
loopne
lahf
jns
leave
int3
pop
push
sub
ret
nop
jmp
subb
mov
pop
lahf
sbb
inc
add
push
push
popa
mov
sub
ret
aaa
jle
mov
cmpsl
mov
imull
adc
xchg
lret
jnp
sbb
xchg
bound
cli
ljmp
dec
in
pop
mov
je
sbb
push
mov
or
aaa
loop
mov
lret
mull
sbb
std
rcll
adc
call
xor
or
mov
cwtl
jg
jb
push
shll
shll
inc
jmp
aas
adc
cmp
loop
sub
jno
or
pushf
push
sbb
dec
jae
out
mov
lods
dec
pop
xchg
lahf
psubsw
in
cld
sbb
jp
popa
aad
mov
push
or
fldt
sub
sbb
in
in
mov
ljmp
jp
popa
stc
je
sub
lods
adc
jmp
mov
add
fldt
packsswb
lahf
pop
out
andb
pusha
andb
mov
loop
cmpl
popf
push
pop
mull
inc
stos
push
ja
jb
lods
push
adc
or
jecxz
inc
loopne
push
push
rcll
loopne
mov
scas
fldt
fstpt
mov
inc
and
andb
leave
cmpsb
fsubs
adc
addr16
ret
pop
lock
or
mov
loope
jmp
insb
fldenv
mov
mov
fldt
ja
xchg
fmull
inc
testl
cli
xlat
adc
push
jbe
jb
mov
sbb
shrb
jo
pop
lods
jae
stos
push
mul
xor
cmp
ret
push
pop
sub
lret
cmp
sahf
push
cmpsb
mov
mov
fsts
jecxz
icebp
xchg
ror
fcmovnu
adc
imul
xchg
inc
xchg
popf
xor
lcall
daa
add
push
aaa
add
or
es
scas
jg
xchg
stos
movl
arpl
sahf
adc
movsl
pop
inc
ficoml
ficomps
ds
mov
sbb
pop
fnsave
mov
mov
cmp
and
jno
fwait
jbe
jb
push
cmpsl
in
int3
int3
push
sbb
adc
push
mov
jge
insb
pop
stos
jg
adc
sub
lret
aad
xor
sbb
sahf
mull
and
lret
pop
sbbb
subps
xchg
jbe
or
dec
loop
shll
add
push
cmp
mov
adc
xchg
shll
push
cmp
pop
pop
sub
cmpsl
cmp
inc
inc
outsb
cmp
fsts
test
mov
push
xorl
rorb
dec
ret
jmp
inc
stos
inc
mov
lahf
pushf
jecxz
sbb
xchg
test
popa
and
out
dec
orl
lahf
into
sub
fsubrs
call
pop
pop
pop
test
in
pop
mov
int
cwtl
fcompl
mov
test
dec
cmp
outsl
or
inc
push
sub
push
jo
push
mov
inc
mov
dec
sbbl
jle
idivl
inc
pop
cmpsl
jo
inc
jno
out
pop
inc
push
sub
test
sbb
mov
add
cmp
sbb
fsubrs
mov
movsb
adcb
lds
xor
fisttpl
sar
or
jle
sbb
cmp
and
lcall
and
ret
add
jae
vpextrw
mov
fwait
mov
into
mov
out
addb
mov
sbb
int
jnp
cmp
mov
xor
mov
popa
or
stos
outsb
xor
lahf
jg
jmp
push
xchg
jmp
push
pop
mov
ret
add
or
stc
insb
mov
pop
mov
jl
and
gs
dec
push
jo
stos
icebp
mov
movsl
stos
test
mov
jo
adc
fcoml
insl
test
addr16
lea
and
addr16
pop
dec
jne
out
mov
cmp
xchg
sarl
es
es
mov
mov
adc
hlt
pushf
js
imul
dec
cmp
add
dec
xor
pop
or
pop
xlat
mov
jge
mov
lret
push
in
test
pop
mov
cmpsl
inc
subl
adc
add
cmpsl
loope
rorl
fadds
leave
push
xor
js
or
add
mov
mov
stos
jmp
inc
push
inc
out
mov
dec
sub
movsl
inc
scas
stos
add
or
or
mov
mov
jl
mov
daa
inc
and
iret
lret
sbb
pusha
pusha
test
inc
jae
lahf
jg
cmpsb
inc
pop
adc
mov
or
lahf
inc
lea
cmp
inc
addr16
pop
mov
push
lcall
shlb
jae
pop
jne
or
fsubr
in
mov
mov
aas
pop
nop
or
dec
in
adc
and
insl
dec
sahf
in
push
fwait
mov
cmpsb
popf
fwait
xchg
cmpsl
add
mov
outsl
pop
xchg
push
jmp
and
in
mov
jmp
scas
mov
les
rcrl
daa
icebp
popa
rolb
jae
push
mov
andl
lods
rcl
sbb
in
lock
call
pop
mov
add
testb
add
mov
dec
mov
adc
imul
adc
es
cwtl
adc
popa
mov
mov
imul
flds
mov
lahf
xchg
fmul
inc
push
or
lahf
ret
adc
sbb
inc
scas
lahf
jbe
in
xor
adc
xchg
sti
pusha
dec
pop
mov
loopne
loop
cmp
popa
fincstp
loope
pop
lds
adc
cmp
mov
inc
inc
jbe
lds
repz
cmpsb
test
fsub
mov
dec
xchg
xchg
pop
jns
sbb
roll
xor
aas
mov
mov
xchg
jae
jge
cmp
or
mov
mov
test
mov
adc
inc
test
lds
mov
xor
or
inc
jmp
xor
imul
fcoms
pop
loop
inc
add
cmp
test
imul
int3
fwait
mov
lret
fsubrp
xor
pop
inc
sbb
ret
into
push
adc
lock
xor
jae
xchg
call
mov
and
adc
sbb
mov
inc
xchg
sbb
mov
sti
into
std
jl
cmp
pop
dec
mov
or
mov
pop
popf
xchg
pop
sub
push
jge
jl
and
mov
stos
xor
mov
and
test
cmpsb
inc
loop
inc
icebp
mov
jns
and
sbb
mov
mov
loope
gs
pop
adc
inc
adc
xchg
aas
adc
xchg
insl
por
mov
dec
loope
ja
jl
shll
fdiv
push
jne
scas
dec
inc
cmp
sahf
dec
divb
jno
sbb
cmp
enter
loopne
mov
push
push
mov
adc
outsl
jle
gs
pop
jae
pop
gs
adc
sbb
cmp
xor
add
cmpsl
jmp
mov
mov
xor
sbb
dec
inc
lea
or
pop
sarl
add
lock
fsqrt
push
inc
cmpb
or
pop
mov
push
or
dec
pop
dec
push
cld
fmull
rorb
scas
xor
cmp
push
test
repnz
icebp
movsb
xor
cli
lods
pop
pop
pop
lock
mov
jge
popa
pop
stos
adc
mov
inc
mov
loop
xchg
pop
mov
xor
mov
popa
pop
ljmp
cmp
outsb
fadd
and
mov
lea
movsl
jmp
mov
in
dec
imul
pop
mov
sbb
sbb
jmp
sarl
icebp
pop
lret
clc
or
int
pop
iret
mov
push
mov
test
mov
push
inc
lahf
test
scas
lcall
lock
or
fwait
inc
inc
rclb
mov
rorb
fs
sbb
movsl
lcall
dec
mov
lock
js
aas
fimuls
call
lret
dec
or
mov
cld
addr16
imull
cltd
or
or
xchg
shlb
jae
fsubrs
and
mov
in
sub
add
fwait
inc
test
sbbl
jle
aaa
or
jns
jmp
stos
and
aas
pop
sbb
pop
mov
stos
adcl
gs
adc
jg
cmp
lcall
sub
ret
mov
sti
and
push
cmc
cmp
aad
fisubl
lret
sti
arpl
insb
jmp
push
iret
sub
in
xchg
sub
sbbl
mov
call
scas
or
or
sub
mov
sbb
je
pusha
xor
push
xor
sub
aad
inc
mov
inc
stos
sbb
adc
xchg
call
mov
sbb
pop
adc
mov
fwait
stos
add
incl
jno
lods
cmc
lret
mov
shll
sbb
jecxz
gs
movsl
add
loopne
push
icebp
jmp
adc
pop
cmp
push
xchg
mov
arpl
xor
dec
dec
int3
into
push
push
inc
lret
mov
lcall
mov
test
push
jae
jb
sbb
sahf
call
enter
push
mov
mov
push
iret
movsl
cli
pop
pop
popl
or
adc
mov
adc
lahf
mov
imul
mov
sub
adc
mov
das
mov
movsl
xor
insb
mov
lods
mov
inc
xor
daa
mov
dec
adc
inc
stos
mov
pusha
ret
mov
push
mov
inc
inc
xchg
adc
xlat
jbe
mov
jl
loop
test
lahf
mov
inc
cmpb
add
fwait
mov
or
sub
or
out
dec
mov
sbbl
cltd
fsubr
mov
addb
cmp
add
sub
arpl
xor
out
loop
sub
add
testb
add
call
scas
sub
aam
inc
mov
inc
or
mov
fsubrl
sti
lret
fiaddl
test
cmp
pop
cmp
movsl
mov
cmp
icebp
jns
add
decb
mov
inc
cld
shl
out
lods
imul
and
ljmp
sub
sti
sub
dec
and
sahf
cld
adc
pop
stos
jmp
mov
mov
sub
jecxz
inc
cmp
cmp
jg
test
js
sub
leave
push
dec
sbb
xor
dec
or
xchg
pop
mov
bswap
pop
sub
mov
notl
out
movsl
push
jmp
cmp
stc
mov
or
das
fisubs
aam
dec
or
push
or
test
jge
mov
jmp
inc
cmp
gs
jne
mov
pop
adc
pop
iret
popf
mov
jae
xchg
adc
loope
and
mov
cli
push
mov
pop
mov
adc
stos
stos
or
jle
pop
mov
xchg
cli
adc
notl
add
cs
pusha
jle
clc
mov
roll
icebp
or
mov
ja
stos
adc
inc
push
aaa
arpl
or
cmp
mov
mov
movsb
in
lods
ret
mov
subb
and
pop
mov
cmpsb
call
mov
movsb
fwait
push
push
or
test
jns
jl
jmp
jae
insl
mov
cmpsb
sub
push
pushf
dec
test
test
jl
ss
shl
xchg
cld
shlb
sbb
xlat
pop
lret
popa
cmpsl
xchg
sbb
jnp
pop
test
mov
stc
push
stos
hlt
or
jb
dec
fs
push
fiadds
mov
and
test
jae
pop
pop
mov
mov
pop
imul
dec
movsl
adc
insl
stc
shrl
stos
test
push
sub
pop
cmp
mov
dec
outsl
popf
jle
nop
or
stos
scas
je
stos
cmpsb
pop
aas
ror
mov
sbb
lahf
jnp
aas
out
cmpsl
dec
rorl
jmp
mov
in
sbb
cmp
jo
mov
xchg
lahf
es
lock
outsl
and
test
jg
inc
and
sarb
cs
xor
and
mov
mov
inc
movsb
and
rclb
lret
jns
out
subb
mov
lret
mov
lods
cmpsl
div
into
cwtl
mov
mov
stos
nop
pushf
xchg
adc
aad
sub
scas
data16
in
iret
sbb
dec
mov
movsl
push
jns
shlb
popa
mov
inc
sbb
stos
add
push
call
cltd
mov
xchg
fs
sbb
sub
insb
mov
adc
arpl
or
stos
lock
out
xor
in
add
fldcw
pop
mov
cs
mov
sbb
push
scas
fldt
shll
mov
mov
int
ret
je
sbb
add
inc
es
lahf
cmpsb
dec
fmulp
sub
cmp
mov
inc
cmp
jnp
dec
jg
inc
sub
mov
scas
enter
pop
sahf
sub
fiaddl
gs
sub
fstpl
pop
gs
pop
lea
sahf
dec
lods
push
fwait
sahf
pop
mov
mov
mov
cld
popf
jae
cli
add
and
mov
cs
repz
cmpsl
mov
cmp
add
and
cmp
mov
and
mov
xchg
in
push
inc
gs
popa
mov
or
dec
in
mov
dec
lahf
add
and
push
add
inc
pop
jp
xchg
scas
movsb
pop
adc
fs
ja
pop
cmp
cmp
mov
ds
in
ljmp
addr16
and
pop
and
daa
decb
or
fwait
mov
arpl
xchg
aad
jne
sub
js
shlb
ret
out
ljmp
mov
add
scas
pop
xor
scas
add
mov
sbb
cmpb
inc
lahf
add
inc
testl
add
mov
xlat
pushf
pop
scas
loope
xor
cmpsb
out
int3
xchg
sbb
enter
addr16
lock
mov
lods
fwait
in
jne
cmp
sbb
jae
pop
cmp
mov
sti
and
and
jno
xor
arpl
push
mov
addr16
xchg
adc
jle
divl
jne
sub
push
ss
fsubr
adc
xor
adc
inc
cli
mov
sbb
push
xchg
push
scas
xchg
lahf
sti
inc
xchg
sub
mov
inc
sub
sub
sub
mov
movsl
jmp
pusha
xchg
jg
das
les
nop
dec
pop
inc
add
fimuls
inc
xchg
filds
ficomps
es
aas
jle
pop
mov
insb
cmpsb
mov
mov
out
fwait
insl
mov
gs
aad
loop
pop
inc
pusha
mov
mov
add
push
or
test
ja
sahf
jne
push
stos
ja
mov
jne
or
frstor
arpl
loop
push
call
mov
insl
mov
mov
mov
cld
adc
dec
lcall
inc
adc
xchg
stos
cmp
pop
stc
popf
push
shrl
cld
mov
sbb
jo
sbb
es
jle
js
imul
or
repnz
bound
jns
aas
in
stc
push
data16
add
sbb
pop
ret
gs
xor
mov
and
fcomi
or
in
pushf
jp
into
fstpl
movsl
lock
mov
push
movsb
jg
xchg
insb
int
shlb
adc
adc
inc
jbe
fs
test
loopne
enter
cmpl
xor
das
push
add
imul
ret
sbb
mov
sub
jo
and
mov
pop
xor
cli
arpl
outsl
fs
out
insl
test
xchg
push
mov
jmp
jno
and
sti
imul
fiadds
adc
jecxz
adc
pop
jmp
and
mov
ds
inc
cld
xlat
es
movsl
test
mov
jne
or
lret
jg
stos
dec
xor
inc
cmpsb
sahf
cmp
outsl
xchg
shr
pusha
lret
lcall
cwtl
mov
addr16
cmp
roll
aaa
push
aad
pop
xlat
ss
fwait
cmpsb
icebp
add
mov
mov
addr16
mov
and
jle
shl
sbb
loopne
stos
xchg
xor
jmp
aaa
jns
push
and
cmpsl
shlb
pop
xchg
mov
and
cmp
lahf
rorb
and
pop
fwait
pushf
in
ficompl
ja
mov
js
xchg
outsl
mov
clc
mov
loope
push
xchg
jp
sbb
push
jmp
and
sub
rorb
in
scas
jne
test
in
mov
lock
inc
add
add
jmp
and
inc
and
xchg
pop
dec
push
mov
xor
stc
jns
fldcw
inc
mov
jmp
aad
popa
mov
pushf
int
test
test
aas
repz
adc
mov
cmp
jge
mov
ja
cmp
ret
jmp
mov
cmpsl
pushf
sbb
jno
cmp
in
or
loope
ljmp
inc
xchg
mov
daa
cmpsl
or
cmpsb
sub
dec
adc
jns
es
test
sbb
leave
and
into
push
addr16
lods
inc
mov
lods
sub
call
and
lock
inc
mov
imul
and
imul
xor
inc
cmpsl
jl
mov
mov
fidivl
aam
xchg
sub
stos
sbb
rorb
ljmp
xchg
adc
sbb
push
mov
jmp
daa
cmp
cmp
push
pop
xor
mov
xor
sub
andl
mov
fwait
not
pop
aam
pop
insl
stos
mov
enter
clc
lds
out
sti
leave
inc
xor
orl
cld
sub
xor
ljmp
orl
in
and
aam
fcompl
adc
loope
rep
pop
jmp
loope
lea
inc
xchg
and
scas
int3
cli
fisubrl
cmpsb
nop
shlb
mov
inc
jnp
dec
or
mov
push
lock
push
push
call
dec
mov
in
pop
jecxz
rcrl
xchg
jb
pop
scas
xlat
jmp
inc
ss
cmc
xchg
imul
out
fs
ret
xchg
in
push
mov
cmc
mov
xor
arpl
fwait
lds
mov
aaa
out
pop
clc
pop
mov
mov
ficoms
cmp
and
push
inc
ret
jmp
sub
pop
cmp
sub
jne
cmc
fwait
mov
xor
jae
jnp
notl
cmp
pop
mov
loope
jnp
adc
mov
push
sub
and
pop
arpl
enter
inc
dec
dec
cmp
xor
mov
sub
cmp
mov
and
xor
jecxz
pop
sub
xchg
jp
test
test
test
sub
test
sbb
in
mov
sbb
lods
sahf
xor
or
movsb
shr
pop
sbb
adc
push
pop
popa
cmc
rclb
jp
les
ja
dec
stos
loope
fistps
into
push
notl
push
pop
or
push
dec
testl
dec
add
pusha
arpl
pop
pusha
dec
push
popf
lcall
scas
xor
dec
imul
mov
shlb
mov
xchg
sub
nop
mov
jmp
mov
or
mov
mov
pop
cmp
dec
cmpsb
jae
sub
dec
dec
xor
arpl
outsl
xor
bound
adc
mov
sub
pop
jnp
mov
repz
adc
fidivl
fldenv
lret
aam
in
dec
popa
ss
lret
aam
orb
or
push
xchg
insl
das
and
stos
ficoms
sbb
lock
and
push
xchg
pop
rorb
xchg
movsl
aaa
lods
mov
xchg
fldcw
inc
imull
popa
sbb
jae
pop
adc
cmp
aam
xor
adc
lret
xor
ja
adcb
imul
loope
scas
and
or
shr
fs
inc
cmp
lret
jne
add
mov
xchg
dec
ja
or
insl
std
cld
sub
jnp
ljmp
and
xor
popa
xchg
and
int3
sub
mov
test
mov
jmp
mov
mov
jmp
scas
sbb
xor
outsl
jmp
clc
sbb
mov
jae
mov
jmp
mov
test
cmpsl
cvtdq2ps
mov
pop
outsl
jmp
mov
lds
dec
call
arpl
jg
imul
iret
clc
pop
or
rorl
fs
std
push
mov
pop
shlb
cmp
movsb
stos
ljmp
scas
and
jmp
mov
in
in
imul
jg
ljmp
sbb
inc
cmp
mov
add
lahf
adc
in
jb
sub
jb
mov
lret
movsb
loope
jne
repz
imul
jle
into
xchg
pop
mov
les
daa
in
je
cld
cmp
mull
test
inc
xor
test
sbbb
mov
paddsb
mov
and
xor
movsl
std
pop
clc
xor
jno
call
js
in
or
sbb
push
xchg
mov
shlb
and
jne
mov
xchg
sbb
jmp
adc
xor
mov
stos
pop
xchg
xchg
frstor
push
jo
es
cmpsl
nop
xor
cmc
pop
add
cmc
popf
iret
mov
lcall
xor
and
xor
dec
pusha
test
lahf
add
arpl
stos
sbb
add
pop
lret
std
xor
idivb
popa
lcall
enter
enter
mov
mov
mov
imul
leave
pop
into
jno
lock
bound
jns
pushf
jp
in
scas
mov
call
movsl
xchg
mov
pop
test
dec
insb
das
add
adc
inc
daa
inc
mov
lea
arpl
faddl
lds
mov
popf
jge
out
push
jg
fsubr
cmp
push
imul
pusha
popf
mov
imul
add
icebp
and
cmpsb
sbb
fidivrs
outsl
mov
rcrb
loop
gs
jecxz
addb
adc
in
adc
mov
or
jo
les
xchg
aaa
sub
mov
stos
inc
popf
sub
mov
shll
andb
jl
jne
mov
dec
add
out
dec
cmp
and
push
fimuls
scas
cwtl
negl
adc
movsl
push
lock
push
jge
jle
in
mov
cmpsb
fs
pop
mov
js
xchg
mov
cmpsb
pop
xor
aas
icebp
idivb
mov
bound
out
cwtl
insl
cmp
enter
mov
aas
cmp
imul
jns
subl
arpl
xor
sub
orw
movsl
push
test
leave
ljmp
add
ljmp
sub
add
mov
or
lds
push
bound
lds
mulb
out
arpl
sub
lds
sub
xor
out
adc
insl
comiss
xor
jl
jle
test
ret
xor
in
inc
cmc
mov
jae
xchg
cmp
sub
mov
mov
jae
inc
xor
stos
cmp
lret
jbe
inc
add
scas
outsl
loope
or
movsl
mov
adc
sbb
into
bound
mov
icebp
push
push
fcmovbe
in
xchg
into
imul
and
xor
mov
imul
in
add
mov
jnp
jb
movsb
fistpl
pop
xlat
sbb
es
push
xchg
jmp
nop
stc
call
push
mov
stos
addr16
mov
cmp
push
out
ret
or
jle
lods
adc
ja
and
loopne
mov
fnstenv
xlat
mov
jmp
iret
adc
add
shrb
stc
mov
das
lcall
pop
mov
pop
or
test
pop
in
pushf
sub
movsb
insb
rcl
push
std
loopne
mov
aaa
into
sub
fists
xchg
adc
xor
arpl
sahf
and
movsl
add
xchg
iret
sbb
push
sub
add
sbb
mov
mov
rclb
inc
pop
das
addr16
lcall
and
cmpsb
mov
mov
sub
in
in
lcall
adc
and
sbb
loopne
sub
mov
aaa
jg
jg
es
inc
addr16
mov
mov
mov
int
xor
mov
in
out
out
xor
inc
cmpsl
inc
mov
fcmovu
xchg
mov
add
arpl
pop
mov
lock
cmpsl
stos
lcall
int3
stc
mov
jnp
add
xchg
lea
xchg
pop
jae
xorb
ret
xor
cmp
imul
mov
and
lds
sub
pop
pop
sbb
fwait
xorb
aam
cmpsl
lds
out
test
jge
mov
sub
push
in
iret
jno
or
push
jmp
in
inc
pop
cmp
gs
adc
mov
xor
mov
sub
ljmp
jbe
in
xor
loop
fsubs
sti
lcall
or
pushf
push
test
cmp
lret
mov
inc
je
dec
sbb
popf
fwait
or
inc
cmp
movsb
mov
ds
sbb
jmp
aas
jb
xchg
sti
inc
jge
cmp
stos
dec
adc
cmc
insb
aaa
add
mov
pop
loop
aam
xchg
xlat
cwtl
cmp
test
push
push
cmp
les
push
adc
sarb
pop
daa
pop
mov
subl
sarb
fcoms
sub
push
and
gs
fidivrs
lods
leave
jmp
mov
into
popa
jae
pop
in
arpl
in
fcomps
hlt
arpl
xchg
jnp
idivl
and
push
xchg
fstps
loope
cmp
stc
fisubs
lods
xor
mov
xor
and
shlb
mov
andl
data16
cmpsb
xchg
imul
cs
mov
add
into
dec
xchg
inc
lahf
stc
xchg
nop
call
vfnmadd231pd
xchg
push
ja
push
and
cmp
cmp
rcrl
les
lret
mov
add
push
stos
lods
fsubrs
cltd
xor
or
xchg
lcall
and
test
and
mov
sub
fwait
lcall
pusha
pusha
cmpsb
loopne
sbb
xchg
out
xor
xor
inc
insb
je
jg
mov
stos
mov
xlat
inc
push
cmc
or
dec
add
mov
scas
inc
pop
js
adc
xor
sub
cmp
adc
jns
mov
int
cwtl
aam
neg
or
mov
mov
aam
lcall
adc
push
mov
push
cltd
paddsb
push
lods
push
mov
sub
fstpl
sub
js
jg
xor
imul
inc
out
ror
jo
pop
fisubs
xchg
dec
loope
pushf
ret
add
mov
or
fcomp
out
insb
add
mov
mov
mov
xchg
mov
lcall
sarb
pusha
dec
jne
call
xchg
loope
popa
into
lret
dec
jae
xor
aaa
or
push
mov
lods
sbb
mov
icebp
xchg
out
es
xchg
lret
in
jle
insl
push
add
loope
aaa
mov
testl
push
mov
mov
imul
xchg
mov
loop
test
inc
jo
jmp
imul
cmp
sub
jp
jg
push
cmp
fwait
arpl
divl
dec
mov
adc
mov
and
dec
in
sbbl
stos
bound
lea
adc
jo
ja
filds
dec
mov
inc
movsl
xchg
dec
xor
dec
ds
stc
loop
inc
in
add
mov
mov
sbb
mov
mov
and
scas
push
into
dec
and
test
lea
loopne
scas
lcall
cmp
cmc
icebp
cmp
jae
mov
scas
mov
adc
mov
inc
dec
test
push
ds
incl
out
xchg
inc
call
ljmp
pop
fdivrl
gs
xor
jle
out
xchg
mov
jmp
push
test
enter
gs
adc
add
ret
sub
pop
rcl
movsb
pop
insb
inc
leave
pop
sbb
cmp
std
aaa
js
adc
enter
add
sub
jbe
dec
idivl
or
push
push
pop
and
sbb
adc
xchg
stc
insl
inc
stos
sbb
cmp
pop
sarb
inc
xchg
mov
cmp
test
add
gs
pop
cli
push
jb
dec
into
imul
push
cmp
lds
add
jmp
adc
xor
int3
loope
rolb
mov
adc
sub
in
dec
addl
inc
xor
push
sub
mulb
repnz
xchg
inc
aam
mov
pop
sub
sbb
sub
ljmp
sub
push
jle
adc
xchg
pop
ret
and
lods
adc
mov
shlb
pushf
jmp
jg
daa
enter
push
jl
mov
jno
loop
insb
add
pop
push
cwtl
mov
inc
jmp
or
xchg
cmp
sbb
dec
dec
inc
mov
in
mov
out
imul
out
mov
scas
shlb
subl
popf
add
mov
stc
and
cs
test
gs
add
in
pop
dec
mov
sub
dec
mov
sbb
stos
mov
insl
sbb
gs
sub
dec
es
xchg
imul
cmpb
call
fiadds
sti
sbb
jmp
jne
jbe
fsubl
in
mov
adc
jo
call
fbstp
xorl
mov
cmpsl
es
idiv
xor
mov
aaa
test
mov
pop
inc
mov
loopne
lret
stos
imul
mov
js
mov
mov
pop
cmovno
dec
mov
lods
dec
cmp
in
xchg
xor
pusha
mov
mov
jno
test
into
lcall
cmp
scas
pop
adc
jb
add
pop
cmp
testl
pop
sti
dec
sbb
fdivp
je
cwtl
add
push
push
lods
jns
lods
mov
jmp
add
cmp
sub
cmp
jne
mov
fmuls
test
cmp
pushl
xor
movsl
scas
pop
lret
jmp
jbe
fcoms
inc
arpl
nop
cmp
jmp
xorb
lea
enter
inc
dec
push
test
dec
pushf
fbstp
pushf
jne
clc
jmp
xor
shrl
in
clc
lods
mov
pusha
pop
pop
sub
xchg
jno
inc
add
rep
mov
in
stos
stos
dec
andb
jno
pusha
in
mov
test
insl
jp
arpl
fisttpl
into
mov
or
sub
mov
out
and
and
xchg
xor
mov
xchg
adcb
dec
lret
jns
mov
push
xchg
mov
inc
rclb
add
adc
stc
sarl
aad
mov
cmp
xor
lret
jmp
mov
mov
jnp
shr
sub
les
mov
cwtl
adc
xchg
insl
cmpsl
pop
aas
pusha
movsl
mov
xchg
idiv
jle
jle,pn
push
mov
sbb
pop
out
pop
movsl
push
das
add
mov
mov
jmp
cmpsl
in
mov
pusha
cmp
sub
sahf
out
or
ja
insl
inc
mov
out
mov
idivl
mov
mov
shr
cmp
sbb
xchg
int
xchg
pop
sub
sub
imull
mov
jmp
pop
push
outsl
mov
bound
test
pop
push
sub
mov
lods
mov
aam
imul
aad
pop
sahf
push
xchg
mov
imul
xor
add
out
loopne
stc
mov
push
xlat
imul
push
aaa
idiv
je
fs
cmp
inc
add
mov
ds
push
mov
sti
std
cmp
outsb
test
pop
mov
dec
sub
notl
mov
insl
lret
add
daa
jnp
push
stos
jnp
adc
fbld
fiaddl
divl
in
sbb
jp
mov
dec
faddl
bound
pop
push
and
data16
push
rolb
stc
fwait
cmpsb
dec
sbb
arpl
movsl
sub
dec
xorb
stos
imul
out
cld
mov
jg
sub
arpl
rcl
pop
insl
xor
iret
dec
shrl
movsl
sahf
popa
push
sub
inc
and
pushf
sbb
fldcw
cmpsl
andl
das
pop
sbb
lret
sub
and
stos
push
inc
sub
mov
imul
movsl
stos
mov
pop
mov
mov
dec
cwtl
or
imul
adc
mov
or
ret
lea
push
test
dec
scas
mov
fs
jae
cmp
jo
sbb
mov
daa
or
mov
in
shll
lret
and
cmp
pop
mov
fcmovnu
mov
xchg
mov
dec
aaa
xchg
ss
ja
sbb
and
mov
outsb
inc
mov
mov
xor
jnp
or
arpl
ret
pop
mov
inc
dec
aad
in
push
jmp
into
gs
inc
pop
hlt
jmp
arpl
jg
mov
dec
mov
sub
cmp
scas
jp
jb
fisubrs
xchg
jle
add
push
mov
je
std
push
mov
clc
jno
cmpb
mov
mov
imul
inc
jae
scas
lret
xchg
mov
outsl
and
mull
test
push
sbb
and
idivb
stc
mov
or
adc
sub
fs
imulb
xor
test
inc
sbb
jne
rcr
jae
push
dec
jnp
dec
jmp
mov
mov
pop
dec
insl
idiv
cmpsl
jmp
repnz
jmp
clc
mov
fidivl
cmp
mov
jp
mov
mov
and
imul
add
jge
xchg
outsl
mov
inc
dec
jmp
std
out
scas
jmp
jnp
test
xor
scas
pop
loopne
les
addr16
mov
mov
dec
sub
les
movsl
iret
add
cmc
xor
pop
cld
gs
enter
mov
not
test
push
add
push
sahf
bound
xchg
xchg
clc
dec
dec
lahf
lods
lahf
stc
cmc
or
mov
testl
popa
mov
add
pusha
inc
pop
stc
xor
stos
xchg
or
xchg
mov
pop
arpl
mov
out
jno
leave
inc
fwait
mov
gs
mov
cmp
push
jge
sbb
ret
scas
into
or
lcall
dec
pop
cmp
rolb
int3
cmp
pop
inc
test
mov
inc
adcb
pop
pushf
lock
jbe
dec
jns
in
inc
dec
testl
mov
mov
jge
aaa
dec
je
pop
sbbb
test
mov
neg
sbb
mov
lret
inc
jmp
movsl
sbb
fdivs
call
test
mov
icebp
push
sbb
dec
loopne
aas
cmc
cmp
inc
or
or
xchg
shlb
ss
mov
push
lods
push
test
incl
jae
adc
push
pop
es
cli
filds
cmp
mov
add
jg
clc
pop
movl
and
or
or
cmp
mov
inc
mov
insb
sarl
setl
dec
shrb
sbb
mov
jp
aaa
stos
dec
mov
fs
ljmp
sub
outsl
xchg
test
add
ljmp
jns
cmovl
fdivrl
add
in
sub
iret
lret
movsb
mov
xchg
xor
ret
mov
lds
jmp
adc
rcl
pop
sbb
or
adc
mov
xchg
lcall
in
cmp
add
inc
mov
add
xor
out
mov
stos
and
push
insb
into
lds
iret
inc
cltd
in
jnp
pop
xor
dec
out
in
inc
xor
popf
test
mov
inc
jns
shr
sbb
ds
inc
sbb
gs
ljmp
or
mov
pop
leave
test
int
dec
cmp
jne
mov
mov
and
mov
arpl
push
imul
mov
mov
adc
dec
or
inc
pop
sbb
cltd
mov
mov
xor
dec
jg
cli
mov
pop
mov
mov
adcb
arpl
andb
das
sbb
insb
cmp
pop
inc
inc
jmp
or
ljmp
add
inc
sub
pusha
mov
dec
lock
mov
add
popa
icebp
inc
mov
in
mov
pusha
pop
test
lahf
in
sahf
dec
add
pop
fstpt
add
mov
xor
push
jnp
xchg
addr16
or
dec
cli
jno
ret
fwait
ljmp
mov
mov
test
dec
mov
xchg
xchg
adc
in
mov
mov
inc
jmp
lea
pop
sbb
cmpsl
lock
pop
pop
out
aas
fdivs
mov
or
dec
incb
fsubr
jnp
xorb
jne
sub
inc
imul
loop
daa
push
or
pusha
lcall
inc
add
nop
xor
xchg
hlt
stos
imul
bound
dec
out
aaa
cmp
popa
les
inc
aam
fcompl
nop
stos
adc
mov
shll
sbb
dec
pop
xchg
sahf
cmp
inc
mov
and
xorl
cmp
push
mov
pop
pusha
outsl
iret
inc
scas
mov
xor
lock
jecxz
xchg
fldenv
xchg
push
dec
mov
inc
stos
cmp
fwait
jno
mov
inc
add
sub
stos
int3
rorb
push
inc
mov
js
and
mov
sbb
push
pop
movsb
in
gs
cmp
pop
or
and
mov
mov
icebp
adc
mov
popa
dec
xchg
add
jbe
xor
push
popf
adc
xor
fwait
lods
xchg
lahf
and
lret
cmp
inc
inc
popa
pop
int
push
adc
mov
aas
sub
jge
mov
cli
bound
imul
xchg
or
mov
sahf
push
stc
test
call
movsl
popa
xchg
sbb
and
mov
sub
aaa
arpl
xchg
int
rclb
inc
pop
mov
inc
inc
mov
aaa
mov
es
orl
mov
pop
mov
dec
popf
adc
ret
sbb
mov
mov
mov
insb
lods
sbb
incl
test
sub
and
das
dec
sbb
xchg
incb
add
les
icebp
jb
pop
dec
mov
mov
cmp
pop
inc
jmp
cs
aam
adc
pop
cmp
lock
and
enter
and
jp
and
or
cmp
psllq
xchg
gs
test
jle
cmp
jne
inc
jae
xchg
dec
jbe
lods
jg
push
jnp
test
mov
std
stos
fnsave
std
rclb
mov
lcall
cmp
scas
xor
adc
push
loope
sub
das
mov
repz
ret
cmc
loope
sbb
in
xchg
pop
scas
pop
outsb
clc
out
inc
mov
adcb
pop
cmp
cmp
mov
mov
mov
sub
mov
or
aaa
enter
mov
mov
into
call
shll
add
mov
adc
push
divl
int
mov
sti
inc
mov
push
ficoms
pushf
and
mov
dec
jne
daa
scas
andl
ja
leave
dec
shl
adc
mov
adc
in
jno
inc
std
ret
cmp
and
cmpsl
xchg
sub
mov
sub
fldenv
out
push
mov
mov
mov
sub
mov
xor
idivl
adcl
call
aad
cmp
and
test
mov
outsb
pop
xchg
lret
mov
jmp
stos
pop
lock
sti
outsl
imul
sub
testb
mov
cmp
sbbb
in
add
lcall
or
jecxz
adc
js
fcmovbe
add
inc
daa
rep
mov
lods
mov
dec
cmpsb
adc
stos
adc
inc
add
add
xchg
cmpsl
mov
mov
push
cmpsl
mov
dec
mov
lahf
insb
xor
cli
and
mov
int3
orb
rol
lock
sbb
jae
stos
add
and
pop
and
scas
mov
inc
inc
mov
cmp
pop
dec
jmp
or
insl
aaa
jmp
xchg
nop
and
cld
scas
leave
aaa
mov
imul
mov
mov
test
repnz
mov
ret
xchg
pop
or
jno
sub
dec
dec
cwtl
fldenv
lods
mov
imull
imul
jae
inc
sbb
in
jp
jmp
outsl
adc
cmpsb
and
pop
dec
mov
je
sbb
xchg
jmp
out
jl
mov
lea
push
cmp
pop
pop
push
rolb
mov
mov
lock
fwait
add
cmp
movsl
inc
aam
mov
sub
in
cmpsl
push
xchg
dec
lods
mov
jmp
mov
and
mov
push
imul
mov
rolb
ljmp
and
add
cmp
iret
mov
inc
mov
and
or
inc
scas
pop
in
out
ret
fldt
jne
fcomps
sbb
flds
jl
push
jo
rolb
dec
xchg
int3
gs
mov
lea
je
orb
dec
mov
mov
and
call
andl
add
lahf
rclb
dec
in
test
inc
mov
or
inc
jbe
jg
inc
scas
add
aaa
stos
pop
je
mov
inc
insl
leave
pop
lea
dec
loop
push
xchg
xor
push
out
nop
push
fcompl
dec
addr16
mov
stos
mov
notl
inc
and
pop
inc
mov
add
add
xor
mov
xor
cmp
lcall
inc
pop
pop
add
cli
fs
into
outsb
pop
cmp
mov
push
mov
mov
jmp
fsubrs
in
pop
fwait
ret
rcrl
adc
inc
loope
sub
shl
out
lods
mov
jl
stc
ret
jmp
cmpsl
and
push
out
pop
cmp
lods
push
cmp
test
xor
adc
xchg
cmp
or
jmp
jge
loope
aas
mov
mov
xor
sub
aam
popf
insl
mov
test
fldenv
arpl
inc
pop
pop
shlb
enter
movsl
mov
cmp
push
sub
xor
dec
inc
cmp
lret
mov
mov
fisubl
das
sbb
mov
mov
add
orl
push
neg
ljmp
cmp
outsb
mov
jmp
faddl
pop
repnz
test
mov
inc
or
cmp
pop
push
mov
into
mov
and
je
mov
add
mov
insb
jl
mov
inc
es
sbb
shrl
jmp
mov
sbb
or
in
mov
cli
dec
mov
lods
mov
rcll
mov
mov
shlb
cld
lods
je
mov
mov
outsb
fidivrs
add
dec
adc
mov
fwait
mov
xlat
push
stos
xchg
dec
int
jg
or
stos
sar
arpl
les
lret
cmpsb
sbb
lods
jle
ret
pop
shl
jge
cmpsl
bswap
push
mov
mov
daa
dec
or
adc
stos
sti
xchg
xchg
xchg
sbb
add
xor
lds
jno
add
dec
inc
jae
or
stos
mov
stos
cmp
add
bnd
sub
cmpb
mov
lret
mov
int
ret
jmp
or
mov
cmp
mov
dec
aam
fisubl
or
lcall
enter
push
mov
push
shll
ja
inc
js
mov
push
clc
idivl
arpl
inc
les
gs
inc
or
mov
cld
mov
hlt
in
imul
inc
pop
arpl
dec
dec
gs
push
ret
xchg
sub
sub
scas
push
add
dec
add
jnp
jecxz
popa
push
popf
mov
pushf
js
movl
jnp
inc
clc
pop
mov
pop
push
inc
xor
bnd
pop
aas
add
fwait
sbb
inc
mov
mov
lds
push
fildll
jo
mov
and
cmc
ret
popl
push
inc
aad
sbb
mov
fwait
cmp
leave
jb
arpl
es
movl
jnp
mov
cmp
ficomps
adc
sbb
xorb
xor
jecxz
jge
pop
out
push
out
outsl
inc
sub
test
mov
cmp
lret
xor
cmp
std
mov
jle
dec
inc
sub
sub
inc
stos
or
aas
mov
ficoml
loope
loop
mov
xchg
or
dec
cmp
pop
dec
inc
stos
dec
es
subb
popa
xchg
add
push
aaa
in
pop
sbb
pop
cmpsl
stos
out
push
rcrb
fs
push
cmp
mov
mov
inc
and
flds
mov
cli
mov
fsubrs
adcl
scas
dec
sarl
mov
sub
mov
jb
inc
ret
jecxz
push
inc
pop
dec
add
mov
lret
pop
lods
mull
mov
inc
jae
in
pop
lcall
aas
mov
sbb
inc
in
js
inc
or
adc
adc
les
lahf
mov
leave
dec
aas
es
idivl
dec
pop
inc
in
out
subl
rol
dec
xchg
lcall
popf
andb
testl
sub
pushl
sbb
stos
cmp
dec
iret
lret
mov
fisttps
jp
jne
push
cmp
pop
jno
cmpsb
xchg
iret
jge
sub
insl
sub
test
push
jno
add
imul
arpl
loope
pop
push
stc
or
ds
lds
mov
lods
popa
daa
xchg
inc
and
jne
mov
pop
pusha
fdivs
sbb
nop
sub
xor
mov
lret
lret
test
ds
dec
lock
movsl
push
fwait
mov
test
shrl
lods
dec
adcl
shll
loopne
xor
push
pop
mov
mov
jmp
mov
mov
inc
lahf
pop
mov
or
das
mov
movsb
daa
mov
and
aad
mov
out
out
jp
pop
adc
jmp
sbb
stos
adc
aam
sbb
adc
push
fsubrl
add
pop
shlb
aaa
popa
jo
stos
mov
xchg
push
jae
dec
mov
mov
insl
xchg
push
and
lret
jle
sbb
cltd
cmpsl
mov
mov
pop
je
add
idivl
into
sbbb
xchg
inc
jmp
xchg
sbbl
mov
pop
and
sti
test
mov
pusha
insl
pop
mov
lret
xor
scas
sub
inc
mov
push
cmp
fisubrs
sub
cmp
mov
sbb
ret
mov
mov
enter
push
jl
mov
cmc
lods
jge
inc
or
dec
mov
sti
dec
sub
adc
sti
pop
lahf
pop
push
or
cwtl
pushf
lods
stos
mov
and
add
pop
adc
leave
loopne
xor
push
mov
dec
outsl
into
iret
inc
sahf
dec
scas
jmp
inc
ficoms
cmp
mov
loop
inc
shll
add
pushf
push
jne
ja
sub
cs
cmp
test
pop
out
arpl
add
and
sub
mov
fsubl
icebp
aad
orb
push
cmc
outsb
sub
xor
in
cmp
data16
nop
xchg
pushf
stos
scas
test
std
xor
mov
mov
lods
xchg
and
arpl
clc
sarl
dec
and
cmpsb
std
cmpb
adc
dec
cmp
stos
or
int3
jne
xor
in
mov
lock
std
pushf
mov
ficoms
mov
stc
and
push
xchg
test
push
les
dec
cmp
mov
sub
mov
and
push
xchg
arpl
sub
mov
loope
mov
sub
adc
out
imul
mov
in
cmp
jg
lret
lods
mov
scas
sbb
mov
negl
mov
sarl
add
inc
pop
adc
jmp
sub
dec
sub
dec
jmp
mov
cmpsb
pop
mov
mov
adc
rcrb
popf
and
dec
ficoms
stos
xor
mov
xchg
das
cmp
int3
and
stos
imul
nop
fimuls
test
inc
mov
arpl
sbb
in
push
cwtl
xchg
and
pop
adc
add
jno
pop
jb
clc
popa
cmpsb
xor
daa
dec
ja
test
mov
scas
cmp
mov
lcall
stos
sbb
hlt
shrl
in
scas
xchg
sbb
pop
jle
dec
inc
sbb
cmp
mov
xchg
push
popf
arpl
cmp
repz
sbb
fidivrs
shll
jno
hlt
jns
xor
inc
addb
dec
leave
daa
dec
lahf
aam
sbb
inc
fs
dec
iret
fdivrl
insl
outsl
dec
sub
ret
call
pop
inc
fidivs
loope
pop
repnz
notl
aaa
lock
in
fnstenv
dec
dec
lcall
mov
xchg
xchg
add
aam
or
mov
mov
nop
inc
or
fcoms
cmp
pop
cli
call
add
stos
out
mov
adc
hlt
ret
andb
stc
pop
repz
fmuls
jnp
mov
movsl
jb
mov
out
ja
xchg
dec
out
subb
and
push
hlt
xchg
ret
aam
push
movsl
ss
xchg
mov
insb
mov
dec
and
mov
aad
sub
xor
loop
pop
or
fimull
hlt
push
jnp
orl
js
sub
stos
pop
jge
xor
cmp
in
imul
mov
in
dec
sub
stc
daa
mov
xchg
mov
aas
and
sbb
xorl
test
mov
jb
lahf
sub
xor
sbb
mov
inc
call
ja
lea
subb
cltd
mov
or
jb
loopne
dec
push
push
aaa
mov
incl
cmp
or
mov
or
cmp
into
jns
shrl
mov
subb
mov
aaa
jg
enter
lahf
xchg
sahf
scas
pop
idiv
leave
xor
cmp
imul
xlat
mov
cmp
fiaddl
lods
push
push
or
or
pusha
je
mov
arpl
test
add
add
and
ljmp
icebp
sbb
sbb
sub
into
in
in
inc
mov
jnp
clc
xor
mov
push
xchg
ffreep
and
dec
andb
add
fwait
and
xchg
mov
repnz
add
ficomps
mov
xor
int
stc
mov
arpl
test
adc
adc
cmpsb
push
test
movsb
xrelease
sub
sarb
push
in
xlat
fstl
pop
stos
mov
lret
repz
mov
cld
and
xor
clc
inc
mov
sbb
outsl
jae
sbb
jmp
lds
stos
lea
adc
pop
mov
mov
jae
fnstcw
or
movsb
nop
and
adc
inc
push
scas
push
add
mov
lods
lock
jno
aam
or
mov
add
mov
jns
lcall
sbbl
cmc
lahf
mov
testl
test
rcrb
nop
hlt
aas
sub
popa
mov
enter
cmpsl
leave
cmpsb
push
sbb
xor
movsl
pop
lret
mov
into
ja
dec
cmp
sbbb
ret
aaa
ljmp
cmp
pop
sbb
retw
sbb
push
push
jge
mov
pop
mov
push
jo
xchg
xor
lret
clc
mov
xchg
jns
sub
and
add
sbb
out
mov
cld
ud0
dec
dec
xchg
jnp
les
pushf
into
mov
fdivp
jle
bound
jge
rcrl
movsl
test
xor
mov
jae
hlt
dec
pop
fwait
sub
mov
push
xstore-rng
cmpsl
xchg
daa
mov
push
cmp
sub
notl
outsb
mov
xchg
mov
clc
sar
mov
rorb
jae
arpl
gs
pop
lods
call
std
sbb
inc
xlat
lods
fsubl
mov
xchg
out
dec
push
or
dec
pushf
mov
test
out
loope
call
cmpb
out
pop
cld
nop
fidivrl
push
xchg
sub
push
xchg
lret
sbb
jo
mov
sub
inc
xchg
or
jg
repnz
ja
mov
es
cmp
inc
fld
lock
xchg
sbb
push
mov
lea
mov
pop
stc
sbb
xchg
jge
stos
xchg
loope
push
xchg
fsubr
sbb
ljmp
xor
inc
sbb
aad
std
inc
loop
jns
and
adc
cmp
or
xchg
sub
popa
mov
adc
cmp
leave
sahf
lret
lods
sbb
xchg
aas
inc
pop
mov
movsb
dec
pop
jmp
adc
pop
jne
repz
arpl
sti
shrl
cld
testb
jns
sti
stos
xorb
idivl
mov
int3
scas
xchg
adc
jo
cmp
xor
insb
mov
stc
mov
dec
sbb
ja
popf
ret
shll
mov
int
mov
in
sahf
movsl
mov
mov
mov
outsl
or
movb
aaa
pop
mov
outsb
imul
icebp
pop
sub
jmp
movsb
icebp
push
mull
dec
test
mov
pop
mov
mov
cmpsl
sbb
test
fbstp
xorl
jge
scas
sbb
add
mov
mov
cmp
aaa
mov
sbb
mov
into
in
call
adc
mov
lret
repz
fidivs
call
shrb
rclb
xor
cmpsb
in
pusha
fldenv
insb
outsl
push
pop
mov
clc
je
test
pop
mov
gs
sbb
pop
mov
push
xor
add
in
inc
nop
cmpb
sub
int
ljmp
or
xchg
push
pop
cmc
stos
inc
mov
sub
push
xchg
pop
aam
mov
sub
faddl
sub
repnz
jmp
cmp
mov
jg
das
sub
js
jl
xchg
add
push
dec
lret
xchg
pop
shrb
mov
ret
daa
daa
or
cmp
sub
xlat
popa
pop
daa
cmpsl
pop
mov
shrb
in
movsl
adc
xchg
xchg
rcr
imul
mov
mov
orb
inc
jbe
mov
mov
dec
movsl
popf
loopw
xchg
and
stc
or
dec
inc
test
iret
mov
or
push
inc
xchg
sub
ficoms
aam
adc
movb
movsl
cmp
mov
ja
cmpsl
lret
or
dec
xchg
dec
cmp
push
cmp
cmp
xor
movsb
arpl
aam
xorl
add
outsl
jae
mov
jne
inc
and
imul
jbe
movsl
js
in
mov
push
sub
fwait
rorl
sbb
mov
test
cmpl
adc
mov
scas
mov
roll
xor
imul
es
fsubs
pop
mov
dec
or
ret
dec
testb
and
icebp
rolb
adc
sub
scas
fistpl
mov
xchg
push
insb
pop
push
sub
and
test
inc
add
cmovne
add
test
sbb
dec
fwait
sub
xchg
jns
mov
sbb
mov
mov
movsl
xor
cmp
push
dec
fistpl
mov
aam
test
push
loope
out
nop
mov
and
fidivrl
test
ljmp
xchg
cmpsb
cmp
stos
imul
pop
inc
testb
mov
jecxz
pop
outsl
xor
push
ja
popa
xor
rcrl
jmp
mov
stos
inc
fisubrl
or
cmp
dec
lret
xor
xor
ret
stos
cmp
jne
dec
mov
mov
push
jg
pop
xchg
sbb
pop
push
inc
sbb
int3
or
add
jmp
add
jge
xor
aas
mov
or
outsb
rorl
cs
mov
inc
pop
xchg
inc
inc
into
cmpsb
cmp
insb
add
sub
push
jne
mov
mov
adc
xchg
and
loopne
sbb
loop
or
adc
mov
fsubrs
mov
add
dec
or
stos
mov
sub
je
xchg
aam
and
lahf
and
push
pushl
cwtl
fldt
mov
cmp
or
mov
xor
test
pushf
aam
inc
insb
add
sub
mov
cwtl
fnstsw
arpl
test
fstpl
jl
aad
inc
dec
sti
in
mov
imul
pop
inc
and
lcall
fimull
xor
mov
cmp
and
sub
lock
mov
mov
mov
jl
xchg
push
shlb
sub
and
xor
xchg
sub
and
jb
lds
inc
outsl
sbb
stos
mov
cs
sarl
jp
pop
push
jne
popf
pop
xchg
pop
or
or
jg
popa
or
jg
xchg
lret
pop
fadd
aas
ja
adc
clc
or
aam
inc
push
movsl
jp
movsl
sar
bnd
mov
stos
js
pop
mov
stos
ret
imul
gs
cwtl
ljmp
and
mov
push
add
mov
jmp
dec
je
aam
int3
push
pop
gs
sahf
stos
hlt
test
sub
sbb
and
test
stos
das
sbb
test
cs
mov
sbbl
mov
cmc
cmp
out
lcall
jmp
mov
stc
gs
xorl
push
jb
cs
pop
sub
cli
cmp
enter
imul
push
scas
mov
sub
mov
mov
mov
jns
aam
sbb
div
mov
stos
mov
shr
or
cmc
scas
addr16
pushf
rolb
xor
mov
fists
andl
xchg
mov
or
jmp
mov
imul
push
cli
xchg
aam
inc
and
cmp
pusha
enter
aas
adc
aam
mov
jge
xor
imull
js
dec
outsb
movsl
adc
sar
dec
movsl
push
cmp
cmp
mov
mov
icebp
and
xor
into
and
int3
mov
xchg
mov
dec
add
aam
in
dec
sbb
mov
aaa
xor
ficomps
lret
and
pop
test
jno
dec
or
sbb
jae
ss
ja
movsl
pushf
int
sarl
ja
sub
ret
daa
mov
push
loope
cli
gs
es
push
sub
in
and
add
sub
fdivrs
ss
mov
mov
push
addr16
imul
lock
aad
mov
inc
test
mov
push
mov
imul
mov
imul
insl
imul
xchg
enter
pop
lods
xor
into
cmp
jno
sub
jge
jno
loop
mov
out
adc
mov
jge
into
mov
mov
adc
adc
sub
pop
push
push
pop
and
pop
fs
cwtl
jg
adc
ret
shrl
inc
bound
inc
mov
gs
fimuls
shl
pop
fmul
and
mov
jo
mov
push
inc
in
or
sub
imul
pushf
mov
cmp
btc
dec
jo
ret
jno
mov
dec
rcll
das
mov
cmp
sahf
push
mov
fs
xchg
movsb
aas
out
test
cmpl
jb
sti
pop
mov
push
lcall
inc
and
and
in
lods
sarb
mov
mov
cmc
mov
cmp
jne
mov
cmpsl
lods
test
mov
rolb
mov
test
pop
imul
pop
scas
imul
add
jmp
mov
lahf
stos
out
stos
inc
imulb
inc
push
cwtl
pop
fnstcw
or
lock
sub
xchg
sbb
add
aaa
mov
mov
push
shl
mov
inc
xchg
push
inc
pop
fldcw
testl
sbb
dec
sbbl
bound
mov
mov
mov
and
xchg
mov
shl
ror
les
in
dec
enter
and
notb
fimuls
push
inc
push
shlb
into
es
pop
pushf
push
shlb
jo
dec
shll
mov
push
push
inc
push
xchg
gs
enter
push
push
mov
and
repz
xor
out
into
lock
add
add
xor
mov
inc
lock
clc
sub
mov
push
inc
orb
test
push
scas
jmp
mov
lock
mov
in
out
mov
enter
mov
cmpsb
or
mov
lahf
adc
es
lea
sub
cmp
pop
mov
lods
xchg
jge
sub
push
movsb
adc
jo
js
fdivs
ffree
cld
fdiv
into
inc
enter
inc
fwait
mov
lds
sub
and
and
sbb
add
cmpsl
repz
ds
push
sbb
xchg
test
aam
mov
add
pop
push
lock
lods
sub
test
test
xchg
and
jnp
out
push
es
cwtl
cwtl
pop
sub
dec
lcall
cmp
cmp
test
aam
xchg
sub
xchg
incl
scas
in
inc
data16
aas
stc
lret
cmpsb
jle
ffreep
icebp
stos
lahf
jl
int3
inc
inc
fwait
mov
sahf
int3
push
xor
movsl
adc
fistpll
arpl
bound
mov
lock
mov
add
mov
sbb
aam
gs
or
mov
fbld
subb
pop
push
test
mov
mov
jmp
add
mov
mov
movsl
mov
jno
mov
adc
insb
stos
mov
icebp
arpl
mov
pop
sub
xchg
mov
add
stos
testl
lods
fwait
gs
negl
mov
and
mov
mov
cmpsb
in
cmpsl
imull
bound
xor
pop
jns
mov
push
push
push
or
mov
lods
fdivp
rol
aam
lods
jmp
stos
sub
jp
cld
les
sbb
pop
loopne
sbb
mov
shl
pushf
mov
push
add
push
lods
test
mov
jno
or
push
mov
adc
shl
mov
jl
lods
mov
mov
add
sbb
mov
jae
mov
stos
cmpsb
xchg
sub
inc
jg
movsb
mov
shlb
scas
scas
mov
mov
jne
imul
mov
inc
psubq
jmp
mov
jae
cmpsl
jne
int
imul
dec
dec
mov
jmp
stos
mov
addb
mov
sub
mov
fs
scas
mov
sub
test
andl
mov
test
jns
shlb
andb
fnstenv
shrb
xor
scas
mov
popf
push
sub
mov
adc
dec
bound
popf
insb
inc
fsubs
xchg
aaa
rcl
xlat
movsb
arpl
lcall
push
lahf
aad
push
pop
sub
push
inc
inc
inc
clc
fcompl
sub
loope
pop
cmpsl
fwait
pushl
shll
imul
jne
inc
push
ds
jns
movsl
stos
stc
test
mov
push
push
cmpsb
test
dec
gs
mov
pop
hlt
push
gs
fdivl
mov
fcoml
jns
jnp
popf
and
pop
clc
pop
jns
stos
popa
pop
xchg
or
in
imul
jae
xchg
sarl
jmp
sbb
js
pop
adc
pop
loopne
in
int3
test
icebp
cmc
dec
ss
mov
jge
popa
mov
or
jge
and
into
les
pop
fistps
mov
pop
sub
test
sbb
jae
in
scas
ss
cmp
shlb
dec
repnz
dec
out
adc
scas
sti
lcall
sbb
jb
ret
inc
fwait
clc
fldenv
je
aad
lcall
push
or
or
out
daa
mov
cmpb
lods
dec
gs
cmpsb
pop
and
and
add
push
sbb
loopne
leave
in
pop
mov
cmp
shll
mov
jne
cmp
fdivrl
mov
xor
cmp
mov
stos
fisubs
outsl
iret
and
lret
xor
movsl
ss
into
cmp
jp
mov
lret
cmp
inc
call
xor
mov
cli
mov
push
and
dec
sbb
lock
int
je
popf
in
into
aad
pushf
push
jmp
adc
add
js
mov
sub
mov
es
fs
cmp
arpl
stos
mov
or
stos
lods
jmp
addl
push
rorl
ljmp
leave
andb
add
pushf
jnp
pushf
ljmp
pusha
xor
inc
mov
xor
cwtl
xor
cmp
xchg
or
aaa
mov
mov
sub
sbb
mov
daa
test
gs
mov
xor
ficompl
js
dec
inc
inc
xchg
lea
mov
imul
fwait
add
insb
pop
jb
sub
push
icebp
pusha
dec
pop
outsl
xor
lods
adc
mov
mov
pop
or
icebp
xchg
jge
cli
add
lcall
xchg
mov
mov
cmpsl
out
out
mov
sarb
out
or
mov
pop
cmpb
cmp
or
xchg
shrl
or
jge
bound
test
sti
adc
addb
pop
and
pop
data16
cmp
sbb
gs
callw
mov
add
test
cmp
fidivs
inc
imul
test
adc
aas
popf
outsl
add
adcl
test
sbb
inc
cmp
in
pop
dec
xchg
cli
jo
inc
adc
in
adc
mov
push
xchg
int3
outsl
cmp
dec
adc
cmp
lcall
pop
lock
mov
dec
hlt
les
sbb
fldlg2
negl
jae
jo
xorb
fstl
pop
mov
inc
push
push
ja
xor
pop
enter
jne
in
fmul
inc
mov
or
loop
add
repz
xchg
cmp
lahf
inc
sub
or
or
cld
mov
mov
adc
xor
push
inc
popa
jl
lds
lods
aam
jle
push
jmp
aam
pop
sub
mov
jns
frstor
pop
mov
sbbl
imul
xor
jp
jne
dec
push
das
mov
cmpsb
insl
adc
inc
xor
adc
or
arpl
idivb
mov
jmp
cmp
and
fdivp
icebp
outsl
push
xorl
or
lret
mov
cmp
aam
jmp
negl
pop
idivl
mov
aad
fildll
add
lret
popl
loop
hlt
js
shrl
push
jae
andl
shrb
mov
xlat
xchg
xchg
jne
lods
add
or
cmpsl
sub
mov
inc
sbb
mov
jno
jae
adc
push
pop
jns
and
mov
push
mov
in
push
ljmp
xorl
pop
sub
std
jbe
dec
sti
mov
xchg
sbb
lea
arpl
xchg
mov
sbb
and
popf
in
jge
orb
test
test
int3
mov
mov
push
xor
dec
or
add
mov
test
aas
mov
jno
daa
fs
cmp
inc
aam
pop
mov
pop
add
push
pop
bound
inc
lahf
push
sahf
ret
xchg
in
popa
sbb
popa
xor
imul
movsl
rcll
mov
xchg
sub
and
stos
jne
fdivl
xchg
inc
jge
mov
pop
push
fmul
lahf
add
dec
jno
imul
pop
stos
test
fbstp
mov
xchg
enter
xor
nop
lahf
fwait
test
leave
mov
pushf
mov
adc
sbb
cmpsl
pop
mov
inc
fwait
lock
xchg
cld
shll
jne
insb
mov
or
mov
push
fucom
lahf
nop
xchg
pop
mov
cmpl
dec
scas
and
addr16
pop
xor
int3
fmulp
es
inc
dec
mov
xchg
pop
sbb
sub
pop
cld
inc
roll
clc
lods
mov
add
stos
sbb
mov
or
xor
pusha
mov
jno
xchg
mov
aam
rcll
push
mov
and
xchg
enter
mov
mov
ja
ficoml
or
lcall
fildll
xor
test
lcall
cmp
dec
lahf
mov
or
outsl
arpl
imul
inc
dec
imul
mov
dec
bound
mov
jnp
inc
pop
pop
sbb
push
arpl
or
jne
dec
pop
sbb
cmp
icebp
mov
xchg
aas
inc
sti
or
insl
sub
add
out
bound
ficomps
sahf
dec
js
jp
jmp
xor
pop
int3
lea
clc
mov
push
aam
pop
cmpsl
subl
js
stos
subb
or
lods
dec
insb
fidivrs
jmp
divl
dec
inc
mov
out
xchg
jns
arpl
inc
or
jge
xor
inc
insb
dec
imul
shr
stos
in
xchg
jecxz
cmp
and
dec
and
nop
insb
mov
cmc
mov
mov
subb
leave
das
gs
mov
and
shll
xor
pop
imul
push
mov
std
mov
in
fadds
pop
mov
shlb
adcb
sahf
lds
std
sub
pop
mov
jbe
mov
pop
cmpsl
stc
mov
jno
fwait
inc
mov
cmp
icebp
les
ljmp
arpl
mov
outsb
and
or
sahf
pop
push
cs
icebp
xor
aam
adc
stc
sbb
mov
mov
test
cwtl
mov
xchg
mov
jb
imul
addr16
inc
jne
dec
bound
pop
enter
or
or
int3
adc
iret
ret
inc
adc
dec
pop
jo
mov
pop
inc
ret
imul
cmp
int3
push
shr
xor
bound
pop
in
pop
inc
daa
std
and
add
pop
int3
addl
and
aas
scas
mov
mov
cmp
in
sbbl
stos
icebp
sbb
pop
add
mov
mov
stc
js
add
mov
mov
imul
aad
cmp
jp
sahf
push
dec
lds
lods
fistpl
xchg
jle
rcrl
cmpsl
rcl
mov
fwait
adc
in
test
insl
pop
mov
aaa
aam
mov
fsubrp
dec
lds
mov
dec
lock
and
lret
add
std
mov
mov
sti
mov
sub
pop
push
adcl
cmpsb
arpl
mov
pop
cmpsb
shl
cmp
jl
dec
sahf
adc
push
rcrb
push
cmp
ss
dec
mov
mov
xchg
icebp
movsl
test
mov
pop
jne
xor
negl
lcall
fsubr
lock
dec
jb
push
mov
xchg
sub
ret
or
mov
xor
cs
mov
cmpsb
sbb
dec
or
mov
sahf
mov
jno
sub
cwtl
sbbl
test
scas
sti
scas
loopne
jns
xchg
and
add
insl
jecxz
jne
xchg
aaa
repz
inc
push
int
pop
dec
cli
mov
mov
fildll
cmpsl
mov
movb
lahf
add
jb
shl
out
insb
mov
pop
fwait
adcb
mov
add
test
cmp
jge
dec
fcompl
inc
cmc
add
push
xorb
pop
push
aaa
push
insl
jo
stos
xor
mov
mov
arpl
sbb
das
in
mov
jnp
push
add
dec
pushf
jns
movsl
ret
jns
les
xchg
mov
int
pop
outsl
cmp
inc
mov
sub
popf
jmp
cwtl
aam
xor
xor
push
mov
cmp
mov
or
xchg
add
inc
arpl
sti
inc
lock
inc
jge
mov
mov
mov
stc
sub
or
xor
lock
lods
cmpsb
inc
lea
jb
sti
pop
sub
fldt
inc
mov
mov
aaa
jns
aad
cmpsl
mov
nop
notl
vpmaddwd
fucom
aaa
fcomps
shlb
dec
out
nop
dec
jmp
sub
cmpsb
fnsave
stos
test
mov
xor
insl
popf
aas
jb
mov
jmp
ja
test
jmp
or
sbb
mov
cmp
mov
mov
in
addb
xchg
cmp
adc
fdivrl
cmp
xlat
sti
test
cmc
push
imul
sti
mov
in
lods
sbb
in
jl,pt
notl
mov
push
clc
ljmp
inc
loop
cmpsb
punpckhdq
mov
sbb
jmp
mov
outsl
pop
cmp
out
mov
fisubrs
jno
sbb
daa
adc
sbb
xchg
ja
es
stos
and
sbb
and
lret
negl
add
push
cli
jle
vcvttpd2dqy
cltd
pop
mov
je
test
cmpsb
addr16
gs
rol
pop
imul
mov
jg
es
cmp
pop
loop
mov
out
mov
push
arpl
call
mov
fsubs
cltd
popf
or
shrb
sbbb
das
fwait
adc
cwtl
mov
xchg
stc
add
jge
test
cmpsb
jmp
test
jae
cmp
lcall
cmpsl
leave
ja
cltd
push
sbb
sub
cmp
sahf
pushf
clc
andb
dec
sbb
jge
pushf
test
mov
lods
mov
sub
out
mov
scas
pop
das
test
fwait
adc
repz
js
push
xchg
mov
daa
das
sub
lods
mov
mov
pop
xchg
rcr
negb
in
cs
cwtl
jbe
push
sarl
inc
fadds
movsb
push
push
mov
mov
or
lret
mov
mov
repz
loop
xor
or
add
push
jle
adcl
cmc
lahf
scas
clc
xorl
gs
mov
xor
pop
and
dec
aaa
cmpsl
cmp
cwtl
jecxz
add
jp
push
movsl
cs
das
cli
jbe
int
add
push
lods
xchg
arpl
jl
jmp
mov
sbb
inc
jae
in
jl
mov
xchg
xchg
cwtl
push
mov
stc
arpl
stc
mov
shrl
loope
les
sarb
mov
jae
mov
mov
lds
daa
or
inc
dec
add
imul
push
cmp
cmp
sub
test
fwait
push
jns
xchg
pop
js
sub
inc
rcll
adc
addr16
lods
jo
xchg
cmpb
cmpl
out
inc
or
repnz
ja
int3
mov
mov
xchg
into
popa
dec
inc
insb
js
pushf
jmp
or
lea
ficompl
xchg
mov
xor
xchg
fidivl
mov
lret
in
call
lock
mov
mov
sbb
xchg
imul
test
jmp
mov
lahf
xchg
xchg
ds
cld
xchg
dec
pop
or
dec
pop
dec
xor
sti
dec
cmp
pop
leave
pop
pop
dec
dec
fdivrp
lock
and
test
dec
inc
imul
jno
mov
leave
movsb
pusha
pop
pop
xor
test
mov
xchg
or
and
mov
pop
cwtl
cmpsl
dec
cmp
cmp
mov
fwait
dec
jbe
add
cwtl
inc
iret
in
mov
call
js
repnz
xor
jp
sub
sub
mov
sbbb
data16
pop
iret
repz
jno
cmpsl
imul
sub
int3
jmp
dec
xchg
aam
test
lahf
mov
jp
mov
in
popa
not
mov
repnz
das
mov
in
sbb
add
mov
pushf
mov
xchg
cmpsl
mov
lods
jle
sbbl
push
adc
lea
test
arpl
ret
mov
sbb
popa
mov
aaa
xor
rcll
jnp
outsl
cmpsb
fwait
imull
inc
addl
push
xor
arpl
mov
repz
or
or
lock
push
mov
and
and
xchg
mov
sbb
cwtl
sub
clc
shrb
gs
add
ss
mul
into
lret
and
pop
sbb
mov
inc
decb
lcall
imul
sbb
mov
sbb
into
cli
jg
aad
rcr
push
mov
sbb
addr16
jmp
xor
dec
mov
xor
scas
je
adc
sbb
shl
inc
xor
mov
push
sbb
mov
inc
lock
stc
divl
push
bound
lahf
movsl
xchg
jno
call
leave
pop
scas
sbb
lock
sbb
cmp
idivl
ss
pop
fs
mov
push
loop
jge
inc
xor
jmp
mov
push
scas
xchg
gs
jnp
adc
lock
cmc
daa
mov
sub
adc
mull
sub
sbb
add
in
mov
adc
cli
pop
sbb
mov
cwtl
jmp
xor
push
icebp
stos
inc
in
mov
xlat
cmp
ljmp
stc
adc
and
bound
imul
mov
scas
rcrb
inc
or
push
pop
rolb
jne
mov
test
arpl
test
test
sbb
add
mov
ret
xchg
in
xor
int
pop
push
mov
in
sbb
adcb
jno
stos
lock
mov
and
imull
xchg
sub
add
lock
fs
ret
mov
adc
dec
push
rclb
mov
pop
mov
mov
mov
pop
imul
xchg
cltd
test
and
bound
cmp
inc
jae
jmp
lea
movsl
es
out
jge
adc
add
clc
sub
stos
insb
pop
jbe
shll
clc
lahf
lods
stos
outsl
jmp
mov
outsb
sbb
push
and
lea
mov
sbb
mov
popf
mov
jnp
fwait
pop
mov
lahf
mov
ret
jg
mov
lods
mov
cmpsl
sbb
rclb
lods
fsubrp
lds
pop
xor
sbb
push
adc
sbb
and
adc
adc
aas
or
push
inc
cmpb
xorb
pop
imul
insb
mov
and
jmp
movsb
adc
sti
xor
push
mov
mov
and
mov
sub
jnp
adcl
xchg
sbb
fnstenv
cmpsl
sub
loopne
mov
daa
dec
fisubrs
rcrb
mov
popf
mov
mov
push
or
push
mov
and
sbb
xchg
iret
mov
cmpsl
lea
sarb
dec
sti
sub
stos
in
add
fdecstp
dec
cltd
pop
popl
cmp
and
int
fbld
cmp
pusha
jp
js
adc
cmp
div
or
add
into
jns
inc
sub
test
fnstenv
push
jmp
xchg
pushf
mov
xor
inc
mov
pop
dec
das
cmpsl
add
pop
mov
jae
test
sub
jb
mov
nop
fildl
iret
test
fmulp
test
adc
sub
arpl
clc
data16
imul
jno
xchg
dec
lock
ja
and
inc
inc
mov
jne
inc
and
and
js
pusha
out
push
pop
mov
rorb
sbb
test
movsb
adc
sbb
sub
out
and
fdivs
fwait
loope
cmpsb
or
scas
movsl
lds
dec
mov
mov
jg
cwtl
pop
loop
xor
and
inc
adc
pop
xor
sub
and
pushf
pop
rcll
mov
dec
imul
push
lret
cmpsb
jge
mov
sbb
push
in
mov
jge
mov
fsubrs
into
dec
inc
es
mov
jmp
in
xorb
popa
das
xchg
inc
pop
ljmp
jl
mov
fisubrs
scas
mov
enter
cmp
shrb
outsl
test
imul
gs
lea
push
mov
shlb
movd
js
frstor
jnp
push
fcmovnu
arpl
mov
add
or
jo
or
dec
cmc
sti
lock
sbb
lret
dec
loope
jbe
or
js
pop
lods
cmpsb
dec
nop
mov
xor
scas
cmpb
imul
or
dec
sbb
fwait
lods
and
ss
outsl
dec
test
mov
arpl
insb
icebp
pop
inc
adc
and
arpl
push
int3
test
movsl
mov
jnp
pop
dec
mov
adc
into
dec
mov
push
and
movsb
push
xor
into
sbb
mov
fcomps
aaa
xor
sti
movsl
jg
sti
call
lea
inc
shrb
popa
fwait
inc
mov
in
rclb
test
scas
test
scas
mov
mov
cmpsb
lahf
mov
or
add
mov
adc
mov
imul
iret
pushf
add
sbb
adc
jnp
inc
test
mov
push
arpl
lahf
std
imul
mov
dec
fdivp
lahf
mov
xor
dec
xorb
add
fwait
roll
lds
stos
cmp
lods
pop
mov
xchg
cmp
mov
rclb
movsb
cmp
aaa
lods
insb
and
push
dec
mov
clc
dec
cmp
imul
mov
xchg
cwtl
imul
push
and
pop
and
lcall
cmp
xlat
roll
aaa
popf
stos
jbe
ljmp
push
and
les
xchg
add
test
xor
mov
dec
iret
mov
mov
rclb
pop
sub
iret
jecxz
add
arpl
push
or
loope
adc
mov
cmpsb
fimuls
aas
add
jle
ret
stos
imul
jo
inc
mov
or
pop
ljmp
rolb
call
mov
sarb
dec
push
jno
arpl
jae
mov
add
lea
mov
pop
cmp
addb
pop
jge
imulb
jo
cmp
outsw
xchg
aam
lock
mov
addb
adc
nop
xchg
pop
cmp
mov
shl
arpl
pushl
mov
dec
mov
xchg
mov
push
scas
leave
and
inc
pop
jns
mov
pushf
pandn
scas
test
imul
shll
popf
jge
mov
ret
stos
out
mov
js
repnz
push
add
cmc
inc
sti
inc
mov
adc
mov
sub
test
adc
nop
mov
nop
push
das
inc
lock
jmp
das
and
xor
jae
lock
imul
std
pop
aas
dec
push
push
mov
lcall
imul
or
and
pop
sub
jns
nop
and
sub
lock
dec
mov
lds
sub
popa
cmp
mov
outsl
dec
adc
and
and
jo
inc
out
dec
sbb
cli
dec
inc
xorb
cli
jno
jns
imul
mov
in
mov
adc
mov
dec
jmp
aam
or
sub
mov
xchg
outsb
add
leave
sbb
pusha
sub
sbb
mov
sbb
xor
inc
outsl
sbb
mov
xchg
outsl
inc
pop
fwait
daa
mov
sbb
movsl
imul
outsl
jmp
inc
test
sub
addr16
sub
add
jg
adc
int
mov
sub
mov
mov
dec
mov
mov
jae
add
mov
or
mov
inc
pop
aas
int
cwtl
sbb
cmp
adc
sahf
into
jae
mov
iret
dec
rolb
pop
lods
add
enter
jmp
rcrb
inc
jl
mov
adc
jmp
pop
std
scas
arpl
and
jae
inc
aad
cli
cmp
inc
xchg
lea
mov
call
mov
or
mov
pop
dec
fsubrl
inc
outsl
adc
movsb
test
mov
movsl
insb
xor
pop
xor
mov
push
test
dec
mov
and
test
xorl
cmp
int3
sbb
pop
jo
aas
insb
add
xchg
test
mov
lea
test
fists
pop
call
test
into
das
inc
and
cwtl
xchg
and
inc
movb
lock
lea
lret
call
mov
popa
push
movsl
xorl
cmp
popa
cmpl
lea
push
adc
mov
aad
stos
and
jmp
xchg
sbb
jo
dec
jne
mov
sub
addr16
cmpsl
xor
fldt
cmp
mov
mov
xchg
mov
fwait
dec
in
outsl
pop
aad
pop
sbb
aam
inc
push
mov
sahf
aaa
mov
cmp
or
lret
xchg
enter
sub
rcrb
neg
pop
aam
xchg
dec
lahf
or
push
pop
fisubl
pop
cmpsb
popa
push
inc
xor
das
stc
push
out
gs
popf
mov
inc
jmp
out
fisubs
ds
mov
sarl
dec
popa
fidivs
jl
xor
and
and
stos
pop
cmp
dec
inc
sbb
sahf
cmp
cmpsb
aas
out
push
stos
pop
shl
sub
outsb
jmp
std
imul
xchg
fiaddl
sub
cmp
movsl
push
mov
jp
mov
sbb
mov
movsl
pop
jns
sbbl
jns
inc
stos
sub
xchg
mov
cmpsl
xchg
pop
xor
cmpsb
popa
xchg
aas
fmul
aad
lcall
std
pop
and
ficomps
stos
add
adc
jecxz
cli
lahf
mov
stos
xchg
loopne
lret
fisubs
xchg
ss
and
dec
push
fwait
mov
jecxz
sbb
adc
es
loope
sub
mov
icebp
sbb
cwtl
sub
mov
xchg
push
into
out
aad
lods
mov
fwait
push
xchg
imul
es
lahf
mov
call
jl
mov
fnstsw
push
jecxz
inc
mov
xor
stos
lods
adc
cmp
scas
movsl
dec
pop
imul
ficomps
addr16
aad
or
cmp
popf
mov
es
mov
loopne
inc
loopne
cmpsb
stos
jmp
pop
pop
lret
sub
jle
loop
pop
scas
mov
jo
sbbb
cmpsb
into
mov
add
sbb
mov
sbb
hlt
mov
enter
pop
arpl
fbld
cmp
js
mov
xor
arpl
jno
pop
pop
mov
data16
loop
or
outsl
xor
push
mov
lods
xchg
stos
movsb
mov
filds
jl
mov
lea
icebp
movsb
sub
fists
mov
sbb
sbb
es
inc
sti
xchg
imul
rolb
fsubrs
dec
ja
mov
push
mov
sub
mov
or
divl
mov
ljmp
mov
or
inc
lret
or
sub
xlat
pop
push
daa
and
sbb
sbb
ret
or
cmp
pop
pop
mov
dec
in
xor
add
stc
pop
mov
or
inc
lock
jmp
int
push
gs
and
xchg
mov
mov
out
test
mov
scas
mov
sbb
mov
cs
mov
in
pushw
jb
dec
in
cmp
sub
mov
inc
pushf
mov
fsubl
add
inc
lods
sbb
in
cmpsl
sub
stos
cmp
pop
adc
and
sbb
lea
dec
fcomps
jo
inc
mov
lock
sub
sbb
adc
push
mov
mov
lahf
push
data16
pop
inc
fidivrs
cs
lds
movsl
test
es
cs
add
andb
rcll
lods
and
imul
rorb
data16
inc
dec
je
popf
cmp
pushf
mov
pop
imul
and
int3
jmp
mov
mov
and
les
add
mov
and
pusha
lods
xchg
fdivr
jge
aam
inc
arpl
xchg
adc
int
imul
and
and
inc
addb
ja
jg
mov
adc
adc
mov
or
mov
add
xchg
pop
dec
cwtl
jmp
rorb
sub
call
push
test
push
inc
push
adc
mov
subb
push
fdivl
inc
mov
mov
lock
test
lahf
mov
sbb
shlb
push
test
imul
inc
adc
mov
dec
imul
adc
sbb
ficoml
cmp
xor
mov
cmpsl
jae
cmp
icebp
mov
pop
outsl
mov
lds
adc
adc
clc
int3
movsl
lahf
fwait
xchg
test
xor
push
xorl
addb
cltd
aam
xchg
arpl
mov
and
loop
pop
mov
loopne
int3
sbb
or
cli
shrb
and
xchg
js
mov
call
push
adcl
out
add
dec
loopne
mov
xor
stc
sub
into
and
fwait
mov
psubq
call
scas
mov
sbb
mov
lock
sub
push
inc
mov
dec
mov
dec
call
push
push
pop
jbe
dec
stos
or
add
push
xor
shrl
inc
push
fbstp
insb
add
jbe
in
xchg
mov
lcall
popf
mov
mov
mov
cli
lret
dec
mov
stos
pop
inc
or
test
mov
push
mov
pop
stos
stos
pop
inc
jno
jecxz
pop
insb
popa
andb
nop
addb
icebp
mov
mov
adc
aas
lods
leave
into
ret
sub
mov
cmpb
sbbb
rclb
sub
mov
cmp
out
stos
scas
mov
js
dec
enter
lock
dec
mov
dec
and
jne
movb
stos
popf
cwtl
push
lcall
das
jg
mov
mov
jnp
hlt
loope
imul
jnp
mov
jne
cmp
imul
jmp
sbb
mov
xor
and
push
sub
scas
mov
das
pop
mov
and
stos
lods
inc
and
inc
fnstenv
mov
sub
inc
stos
push
mov
stos
mov
mov
stos
clc
mov
mov
add
jno
cwtl
mov
repnz
daa
gs
movsl
int3
dec
icebp
lahf
mov
mov
cmpsb
mov
testb
add
aaa
imul
inc
xchg
jne
repz
cmp
movsb
mov
rorb
jo
pop
cltd
cs
jo
jnp
mov
fdivl
add
jmp
push
or
movsb
movaps
add
jmp
nop
push
pop
mov
cmp
mov
clc
subb
cmp
jns
pop
cmp
mull
adc
mov
scas
dec
cmpb
jmp
scas
push
mov
pop
xchg
les
test
and
sbb
pop
cmp
mov
and
ja
test
and
mov
push
popa
mov
mov
ret
push
test
pop
mov
mov
ret
daa
cmp
xor
xor
repnz
cmc
arpl
push
adc
sub
pop
adc
mov
mov
shrl
mov
add
pushf
adc
fists
adc
int3
cmp
stos
fsubs
inc
jmp
popa
rcrb
pop
mov
lods
inc
daa
es
movsl
adc
lcall
jno
jae
push
test
push
adc
daa
loopne
or
mov
jl
pop
add
repz
mov
dec
dec
call
fidivl
ret
sti
lahf
jnp
cs
and
sbb
and
lcall
popl
mov
cwtl
insl
fistpl
mov
dec
dec
loope
std
cs
dec
scas
scas
pop
mov
into
cmpsb
pop
jo
adc
loopne
push
das
sbb
in
and
daa
cmc
es
push
cmc
lret
mov
jae
cmp
bound
wbinvd
andb
das
pop
jle
cmpsl
lea
pop
mov
movsl
test
mov
pop
add
popf
lods
lds
mov
cmpsl
mov
inc
mov
jp
mov
hlt
pusha
mov
int
inc
mov
jae
fwait
add
bound
dec
mov
mov
ss
dec
xchg
cmpsb
or
ret
sbb
cwtl
xor
and
pop
iret
imul
cmp
les
lret
or
movsb
rorb
sbb
pop
add
push
jmp
aad
aas
mov
clc
mov
mov
test
sub
imul
incl
mov
icebp
aas
add
pop
pop
xchg
imul
mov
push
xchg
dec
out
in
out
add
xor
negl
aam
push
xchg
dec
adc
test
outsb
movsb
jno
in
fs
dec
aam
pop
das
push
jbe
xchg
xchg
shrb
call
push
xchg
lock
jo
add
aam
call
in
movsl
adc
pusha
pushf
test
xchg
pop
inc
mov
jne
adc
leave
xchg
mov
fs
mov
in
mov
cwtl
add
cmp
shll
js
outsl
iret
jne
dec
jg
dec
and
rorb
es
into
imul
dec
push
push
adc
out
dec
jmp
shlb
mov
inc
in
dec
loop
sub
lret
cmp
push
aas
fnstcw
or
movsl
mov
fimull
mov
je
icebp
mov
loopne
in
jno
pop
add
pop
popa
movsb
xchg
test
mov
cmp
test
cmpsl
incl
mov
sar
js
iret
sub
icebp
push
js
and
inc
jmp
push
inc
jecxz
cmp
into
dec
fnstsw
shlb
xchg
mov
sarl
lock
testl
test
shrl
sbb
push
outsl
test
es
add
xchg
fwait
movsl
rclb
mov
cld
inc
movsb
mov
popa
movsb
test
dec
pop
cmpsl
mov
into
mov
insb
inc
push
mov
std
insl
jmp
dec
test
cld
inc
mov
imul
ss
imul
xor
pop
leave
cmp
mov
ss
dec
test
push
xor
mov
pop
lea
xchg
gs
jns
leave
gs
sbb
shlb
push
out
or
mov
in
jno
cld
aaa
or
cmp
add
imul
stc
sub
out
iret
jnp
jno
cmc
or
in
mov
js
pop
fidivl
adc
addr16
xchg
loope
in
or
icebp
int3
dec
ds
jno
xchg
xchg
inc
push
push
mov
stos
sub
sti
mov
adc
icebp
call
pop
sbb
dec
or
xchg
or
imul
xchg
xchg
pushf
mov
cmp
int3
mov
ss
not
xor
stos
sbbl
cmpl
jg
fnsave
imul
cltd
sbb
jb
fstps
push
fwait
pop
jmp
adc
sub
shlb
cld
stos
lods
dec
or
mov
andl
adc
mov
pushf
mov
aam
add
into
call
mov
lret
dec
jb
add
mov
jl
mov
aaa
fcmovnb
cli
imul
rcrb
add
jae
addr16
out
pusha
jmp
and
loope
pop
push
ss
pop
mov
dec
xor
adc
test
cmp
inc
cwtl
mov
mov
mov
xchg
mov
cld
or
jg
push
dec
jmp
lcall
dec
lock
mov
insl
loopne
shl
cmp
bound
adc
lcall
inc
xor
scas
das
mov
pop
or
cmp
mov
sub
sbb
mov
push
dec
mov
ljmp
mov
je
or
pop
xchg
pop
cmpb
push
les
shrb
pop
insl
cmpsl
jmp
push
xchg
dec
outsl
mov
stos
inc
and
and
enter
inc
lahf
lds
sbb
rcl
jns
testl
lcall
lea
cwtl
inc
xor
paddq
jmp
stos
jne
xor
insb
mov
add
adc
lods
cmp
jns
fwait
add
and
bound
sbb
dec
and
insb
xchg
cmp
push
nop
arpl
adc
adc
mov
pop
dec
cmp
clc
mov
push
add
sbb
pop
xchg
nop
loope
lds
idivb
adc
lods
dec
into
std
arpl
lahf
stc
xor
int3
xor
aas
add
push
mov
imul
inc
pusha
or
je
and
inc
jno
lds
sub
and
sub
mov
sarb
sbb
mov
stos
cmp
or
negb
and
adc
cmpsb
lea
mov
mov
jl
loope
or
lahf
cli
jns
cmc
clc
cmp
and
dec
jmp
mov
and
jmp
mov
cmp
dec
fsubrl
xor
adc
lds
aad
and
call
scas
sbb
call
addr16
notl
add
add
add
addr16
jl
call
shlb
add
loope
pop
jne
jg
sub
aaa
lods
add
js
aas
sub
jae
je
fnsave
xchg
dec
ss
pop
cwtl
xchg
push
shlb
je
into
inc
pop
mov
ljmp
or
cmp
xchg
and
add
fisubrs
push
popa
loop
sbb
shlb
fstpt
adc
bound
clc
adc
shlb
mov
mov
lods
mov
mov
jmp
cmpb
xchg
icebp
inc
mov
jns
enter
mov
or
sub
mov
rclb
jmp
aaa
stc
push
lock
icebp
stos
dec
jg
arpl
mov
mov
jae
lds
or
popf
push
inc
stc
scas
lret
xor
cltd
xchg
push
lods
mov
mov
jmp
pop
imul
inc
cmpsb
cmp
es
mov
jmp
pop
inc
shll
mov
and
testb
mov
jge
aam
jns
push
mov
nop
int3
scas
or
shrl
sub
sub
mov
repnz
bound
lahf
cmp
in
gs
fldenv
mov
sub
and
lahf
mov
test
mov
rcrb
mov
ljmp
mov
clc
jbe
not
lock
cmp
jmp
mov
cmpsl
cmp
xchg
stc
lret
mov
bound
fdivp
pop
mov
mov
mov
nop
push
lret
mov
fistl
into
mov
movsl
scas
loope
repnz
mov
mov
jae
shrl
pop
cmp
sub
mov
cs
or
xchg
mov
in
pop
jno
add
jle
xchg
ret
fsubs
cmp
stos
or
fwait
int
rcr
loope
out
cmp
and
mov
mov
jl
and
test
daa
mov
jmp
push
idivl
sub
shl
or
push
mov
mov
jp
push
outsl
imul
mov
jmp
sub
scas
push
out
sbb
dec
lods
jmp
lret
pop
es
mov
lds
xor
leave
adc
and
sbb
push
mov
dec
pop
mov
iret
or
movsl
mov
mov
inc
shll
inc
js
inc
jmp
aad
push
jo
dec
orb
mov
and
sar
pushf
lcall
push
mov
xchg
pusha
mov
cmp
sub
andl
test
dec
fisubl
subb
mov
sbb
lds
xchg
dec
aaa
aaa
out
repnz
dec
inc
mov
cmp
mov
aam
inc
push
imul
mov
popa
adc
pop
and
mov
cmp
enter
in
cld
cmp
outsl
sbb
addl
jg
jnp
inc
lds
cmp
test
mov
mov
stos
leave
xor
mov
imul
lock
shll
aaa
dec
gs
cmp
mov
pushf
pop
repz
pusha
xchg
pop
lods
lcall
mov
mov
stc
aad
mov
mov
mov
leave
pop
ror
test
test
fsubrl
fmuls
push
cmp
outsl
push
mov
lods
mov
xor
les
sbb
push
adc
jg
lods
notb
mov
fistpl
cmpsl
mov
fwait
and
push
mov
mov
stos
xchg
imul
xchg
les
inc
mov
scas
scas
inc
mov
lcall
ret
inc
pusha
subl
lods
inc
mov
mov
fdivrl
mov
scas
inc
out
mov
test
nop
push
call
lods
orb
mov
push
xchg
mov
repnz
and
test
jbe
inc
insb
addb
mov
dec
mov
and
mov
cs
test
adc
xchg
ret
dec
xchg
jmp
popa
and
sub
sbb
pushf
lods
dec
mov
test
test
stos
daa
xor
or
imul
cmpsl
cmpsb
nop
xor
jne
pop
loop
jns
mov
stos
mov
scas
lahf
sub
mov
push
push
dec
xchg
and
sub
aas
xchg
cs
jns
imul
add
jae
incb
push
ljmp
mov
es
jge
mov
mov
push
shll
mov
dec
movsb
ja
insb
shlb
dec
insl
notb
pop
stos
setge
into
sbb
inc
mov
mov
lret
cmp
inc
lods
jmp
popf
cmp
push
and
mov
push
and
scas
stos
mov
jo
mov
fwait
adc
pop
dec
xchg
or
push
and
lret
addr16
dec
ds
lods
inc
int3
lods
mov
inc
inc
mov
inc
stos
adc
jmp
stos
jno
loop
sub
inc
shrl
xchg
xchg
mov
ljmp
mov
mov
mov
mov
cmpsl
jno
sub
shl
loope
mov
cli
dec
addr16
dec
dec
adc
rcll
mov
lahf
sub
nop
call
adc
or
int3
insb
arpl
sbb
sbb
pop
xchg
and
aaa
gs
divl
inc
inc
movsl
sbb
in
lcall
inc
sahf
sbb
xor
mov
cwtl
scas
mov
jp
push
fldenv
push
cmp
test
push
test
xchg
je
dec
pop
int3
inc
enter
stos
pop
rclb
outsl
nop
pop
or
jne
cmc
leave
mov
outsb
idivl
ds
push
rol
sarl
sarb
jb
adc
cmc
icebp
mov
stos
pop
sahf
jmp
cmp
std
aad
mov
mov
dec
push
data16
pusha
dec
and
dec
mov
repz
adc
dec
test
mov
inc
loopne
sbb
pop
mov
pop
rorl
shrb
rolb
hlt
arpl
pop
shlb
in
test
stos
fdiv
sbb
sub
mov
xchg
mov
shll
cmpsb
adc
in
imul
iret
inc
scas
aad
and
arpl
mov
bound
mov
dec
pop
mov
test
cmp
mov
scas
and
sub
xor
push
stos
imul
stos
pop
sub
dec
insb
test
and
push
mov
shll
inc
jns
fdivl
pop
cld
mov
push
dec
xchg
sbbb
push
mov
adc
dec
ret
hlt
xchg
push
out
pop
ljmp
sahf
mov
lret
fnstenv
pop
dec
sub
test
test
sbb
les
fsubrs
push
adc
pop
arpl
sub
push
in
loop
lea
imulb
mov
out
shlb
jns
dec
or
mov
jge
ja
mov
sbb
mov
in
lock
jl
mov
push
mov
add
sub
push
cmpsb
clc
fidivl
in
dec
sbb
mov
and
cmp
adc
jno
pop
dec
inc
jle
mov
mull
idivl
shlb
push
adcl
clc
jae
inc
push
testl
mov
pop
or
fldl
mov
mov
std
dec
xorl
xchg
inc
push
adc
xchg
insl
jbe
iret
push
and
push
leave
mov
out
fstl
push
in
stos
ja
or
mov
mov
stos
out
xchg
jnp
mov
jle
popf
das
mov
pop
sub
loop
cmp
cmp
push
ret
sbb
sahf
mov
vpsrlw
adc
inc
pop
int
jo
push
cmpsb
or
mov
test
jp
roll
mov
fistpl
sbb
outsb
jns
stos
ljmp
sbb
mov
pop
das
push
jl
out
daa
inc
xchg
sahf
jl
test
jle
xor
cli
sub
push
mov
popa
push
lahf
mov
call
and
cmp
movsb
push
ja
adc
icebp
test
orl
mul
pop
sbb
rcr
outsl
jl
mov
insb
outsl
js
stos
xor
test
inc
sub
scas
fistl
pop
negb
cmp
shl
or
inc
and
push
scas
into
push
pop
add
lds
dec
int3
adc
icebp
xchg
ja
mov
mov
jns
imul
inc
insb
js
sbbl
shlb
shlb
cmp
push
aas
jns
sbb
sub
lret
cmc
mov
ljmp
pop
rorb
mov
out
jb
popa
test
lock
andb
je
mov
fwait
mov
pop
add
and
push
stos
jno
rcrb
stos
dec
xchg
repnz
cmp
fdivrl
pop
out
inc
out
adc
orb
aad
mov
mov
and
push
jo
es
fdivrl
inc
jmp
int3
test
int3
xchg
cmpb
xchg
mov
mov
and
add
scas
mov
outsl
int
mov
scas
xchg
mov
mov
jno
mov
lds
mov
or
cld
and
dec
and
adc
fs
stc
arpl
inc
cmp
lcall
xor
adc
das
cld
fnstcw
mov
fwait
inc
cmpsb
mov
into
cmp
aaa
mov
leave
or
mov
push
sub
fcompl
adc
pushf
fsubl
rclb
mov
mov
push
dec
pop
loope
jmp
mov
and
pop
ljmp
sub
loopne
imul
gs
push
shlb
xorb
test
jl
inc
pushf
push
shl
test
imul
test
ljmp
scas
call
imul
and
stc
push
inc
jmp
insb
daa
sub
sbb
gs
and
gs
sub
mov
imul
daa
mov
jbe
stos
mov
outsl
or
jge
icebp
cltd
pop
pop
and
stos
push
std
call
xorb
cwtl
and
clc
xchg
and
mov
pop
les
cld
push
and
sti
mov
and
xor
jne
clc
daa
pushf
lcall
lock
mov
adc
mov
bound
add
xor
fldenv
pop
and
adc
cli
mov
cltd
sbb
in
sbb
cmpsb
jnp
jg
mov
imul
icebp
fidivrl
mov
test
add
inc
enter
mov
mov
loopne
das
out
add
sub
lock
mov
lret
lods
ret
arpl
fstps
sub
add
movsl
jno
shlb
sub
push
imul
mov
cltd
adc
cltd
add
mov
lret
mov
enter
aad
pop
and
addr16
inc
and
lcall
or
pop
and
cmpsl
mov
inc
insl
dec
rolb
imul
or
into
into
loopne
add
sbb
je
lret
into
dec
add
dec
sti
test
mov
jp
lcall
stos
sub
cltd
stos
mov
test
pop
jnp
mov
shlb
cltd
test
into
out
cltd
lock
mov
lcall
pop
imul
inc
jns
out
mov
lds
scas
leave
int
mov
pop
out
sbb
test
popa
stos
icebp
adc
pop
push
pop
inc
inc
imul
sbb
movsb
mov
hlt
inc
adc
jp
out
shlb
xchg
testb
mov
pop
or
mov
mov
mov
sub
and
xchg
adc
pop
dec
bound
mov
pop
lock
inc
inc
sbb
jl
fs
mov
add
add
shll
push
pop
addr16
sbb
into
sub
pusha
andb
xchg
andl
adc
add
mov
aaa
mov
ja
inc
inc
nop
add
scas
cmp
and
gs
fsubrl
push
inc
inc
xor
les
or
ret
pop
test
test
popa
fwait
sbb
adc
ja
mov
pop
loop
mov
dec
stos
adc
test
mov
imul
addr16
cld
inc
mov
push
dec
icebp
push
mov
and
cmp
shlb
pop
inc
das
lcall
push
ja
adc
xorb
insl
xchg
and
shll
jnp
and
and
push
jecxz
xor
loopne
stos
cli
adc
mov
mov
and
fstpt
mov
dec
and
and
and
sbb
mov
cld
and
pusha
inc
dec
bound
push
inc
mov
rol
mov
sub
or
or
mov
push
in
popf
or
jo
sub
adc
shrb
push
or
xor
inc
xchg
nop
dec
ret
xchg
pop
pushf
fwait
bsf
mov
sub
pop
and
add
adc
jmp
lea
xor
and
test
shll
pop
xchg
sub
or
cmp
pop
mov
imul
pop
lock
pop
mov
inc
pop
dec
movsl
rcrl
leave
and
jmp
outsl
mov
cmp
dec
pop
pusha
pop
daa
or
inc
and
movsl
adc
fdivs
incl
jnp
dec
dec
cmp
adc
mov
test
jns
in
mov
cmp
test
cmp
call
xor
pusha
mov
xor
mov
mov
sbb
xchg
cmp
and
mov
test
adc
mov
sbb
mov
loopne
fmul
sbb
or
out
adc
cmc
test
addr16
test
jno
mov
and
jge
cmp
mov
mov
inc
and
inc
and
mov
nop
mov
dec
xchg
rcl
and
sub
mov
aaa
test
jo
loop
xor
pop
jp
shlb
dec
add
and
ror
clc
push
outsl
test
push
sbb
mov
mov
fadds
push
dec
rolb
push
cmc
inc
pushf
mov
mov
out
mov
mov
and
test
and
or
bound
repnz
pop
lock
mov
mov
and
cmp
dec
out
test
sub
gs
ja
mov
mov
jns
jnp
jle
inc
outsl
adc
push
adc
cmp
inc
arpl
sub
pop
test
test
shr
prefetch
jmp
inc
or
in
cmp
sbb
sbb
cmp
ja
and
push
pop
push
mov
inc
push
push
mov
lea
in
sub
dec
js
inc
cmp
pop
push
pop
fisttpl
mov
stc
and
pop
adcl
and
dec
cmc
mov
sahf
stos
fildll
psubsw
pop
pop
cmp
jno
sbb
fdivs
je
inc
cwtl
and
and
sub
adc
cmp
inc
shll
imul
fisttpl
inc
sbb
inc
cli
fadds
cmp
out
test
cld
xchg
leave
data16
or
mov
jns
rorb
rclb
loop
pop
shlb
stos
call
sub
and
inc
add
mov
or
fistpl
adc
inc
repz
inc
test
mov
aam
adc
pop
leave
stos
shll
icebp
test
jle
gs
ss
sub
cmpb
xor
cmp
inc
or
push
pop
sbb
mov
mov
mov
fdivrl
and
dec
sbb
sub
inc
or
dec
add
pop
and
stos
lock
inc
jae
push
push
add
gs
xor
xorb
xor
mov
add
gs
jne
aaa
and
dec
pop
jno
lds
test
cmp
imul
jle
mov
rol
dec
xchg
mov
sbb
ljmp
and
enter
outsl
cli
cmp
lret
out
sarl
test
dec
mov
inc
call
jo
inc
dec
inc
xchg
xor
or
jnp
cmp
cmp
push
inc
imul
rcrl
pop
jns
cmp
jle
icebp
mov
inc
mull
or
jo
stos
jno
test
inc
pop
sbb
inc
popa
mov
push
shrb
and
or
mov
stos
pop
inc
gs
mov
pop
mov
and
sarb
test
lcall
call
movsb
imul
sub
pop
fldenv
and
ret
aaa
add
mov
xchg
jmp
ret
mov
ss
shlb
dec
and
mov
cli
jno
mov
dec
and
add
jno
mov
cwtl
cmp
aas
and
ja
mov
test
inc
fdivrs
rclb
mov
mov
sbb
imul
and
lods
mov
mov
jp
mov
mov
xchg
inc
gs
push
gs
repz
inc
imul
mov
sbb
cmp
gs
mov
jp
and
loopne
test
cmp
and
push
movsl
pusha
jmp
jbe
mov
lea
loope
cltd
jne
bound
fmul
clc
mov
das
xor
xor
or
inc
mov
mov
movsl
mov
adc
test
cmc
or
push
aad
das
lds
mov
jl
insb
or
mov
mov
xor
fcoml
mov
cmp
xor
loope
cld
jne
gs
pop
in
arpl
sub
pop
imul
add
sub
jno
push
inc
and
shlb
test
and
imul
and
pusha
imul
mov
and
push
adc
sbb
dec
stc
gs
mov
cmp
test
xchg
xor
enter
subb
mov
leave
cwtl
adc
cmc
xchg
fxch
stos
lret
and
adc
pushl
and
insl
sub
mov
loope
mov
mov
cwtl
mov
fsts
mov
cmpsl
inc
xor
ret
and
shlb
shlb
and
push
pop
popa
push
pop
mov
xor
and
bound
pop
xlat
add
in
imul
loope
and
push
adc
fisubrl
sbbb
fstp
mov
inc
mov
and
add
and
test
adc
xchg
pop
js
and
cmc
int
mov
push
mov
stc
push
sbb
jmp
jecxz
cld
mov
dec
and
mov
pop
sti
dec
and
mov
sub
push
jno
mov
dec
and
cmpsb
mov
mov
jno
mov
dec
and
pop
mov
mov
pushf
js
xchg
sub
addr16
mov
imul
faddl
and
fidivrs
popf
test
mov
xlat
mov
test
pop
sbb
sarb
or
lret
leave
gs
mov
mov
shrb
into
push
inc
pop
push
mov
scas
test
sbb
nop
add
xlat
lods
dec
dec
push
push
pusha
test
mov
mov
jle
jns
and
adc
push
lock
test
outsl
dec
sbb
sub
or
shl
aaa
sbb
xor
and
cmp
sbb
jmp
and
shlb
jno
mov
dec
and
mov
pop
cmpsl
fmull
xor
lret
pop
cmp
jno,pn
mov
dec
and
mov
pop
lcall
dec
inc
jg
mov
lret
or
adc
inc
fcomps
jns
cmc
inc
mov
mov
sbbb
idivl
and
cmpb
inc
lret
inc
push
clc
pop
pusha
inc
pop
fildll
daa
and
mov
inc
mov
push
mov
arpl
add
push
mov
stos
mov
ret
lret
scas
lods
popa
std
jmp
sbb
add
jnp
fldenv
call
jne
cld
cli
add
push
loopne
dec
inc
test
fidivl
fs
inc
jl
pop
cmpb
add
sbb
call
and
add
sbb
test
in
imul
cmp
mov
testl
sbb
cli
mov
shrb
rolb
add
popf
movsl
pusha
mov
mov
out
jo
movsb
out
mov
test
mov
mov
call
push
imul
sub
push
test
mov
int
pop
gs
pop
or
shll
gs
or
popf
popf
scas
sub
insl
sub
outsl
pop
sbb
int
in
jne
imul
inc
pop
enter
sub
mov
inc
add
add
cmp
inc
mov
sub
inc
pop
out
int
mov
jae
sub
test
loope
xor
lock
adc
lock
dec
nop
sub
stos
and
imul
mov
pop
outsl
cmp
dec
nop
push
ja
call
js
jo
jo
mov
movsl
data16
mov
fisubrl
sub
repz
ret
cmp
jne
insl
and
rol
fnsave
inc
pushf
ss
in
pop
or
inc
sub
imul
pusha
and
das
push
push
nop
call
inc
or
and
mov
xor
in
ja
inc
shlb
or
lret
insb
mov
push
hlt
cmp
dec
jge
pop
adc
ljmp
dec
rorb
mov
inc
adc
mov
adc
jnp
add
out
dec
fstl
push
xchg
call
imul
mov
inc
jb
adc
sub
inc
dec
push
movsl
adc
pop
dec
subb
fmul
mov
and
jmp
cltd
mov
sub
adc
dec
gs
push
dec
pusha
out
mov
dec
dec
sub
jns
subl
mov
jns
je
add
and
dec
cld
nop
pop
popa
dec
push
pop
push
mov
fstpt
mov
jns
pop
and
jp
mov
movsl
test
xor
fmull
mov
imul
stos
add
sub
test
lock
cmc
jl
stos
adc
inc
sub
pop
fidivs
rclb
dec
and
or
push
negb
ljmp
inc
test
ficomps
sub
cltd
mov
inc
jg
pop
pop
xchg
mov
rcrb
cltd
and
push
call
cltd
loop
call
cltd
insb
call
sub
leave
jp
jge
ja
test
movd
add
or
add
icebp
jmp
or
imul
pushf
jns
jbe
mov
mov
hlt
jae
jmp
mov
int3
inc
gs
sub
push
mov
cmp
lret
mov
xchg
pop
test
adc
mov
test
adc
lods
lea
mov
jo
fsts
gs
dec
dec
popf
gs
push
loop
test
mov
lds
mov
push
dec
test
test
test
sbb
xchg
and
mov
ljmp
es
call
and
mov
lock
inc
jne
pop
pop
mov
inc
jnp
popf
mov
testl
cmp
push
pushf
pop
jmp
loopne
xor
shll
sub
inc
inc
test
popf
arpl
xor
push
mov
mov
inc
adc
mov
xorb
pusha
and
add
and
and
mov
test
jge
or
icebp
mov
clc
xchg
or
mov
cmp
repz
mov
sub
adc
pop
jae
test
or
std
sub
sbb
add
mov
push
outsb
fnclex
pop
pop
into
pop
push
push
into
call
imul
out
rorl
out
hlt
and
in
test
test
ret
aaa
bound
testl
add
int
ret
mov
fsts
inc
addr16
subb
jne
jmp
pop
addr16
jne
in
adc
pop
aad
clc
pop
lds
sub
mov
pop
sub
inc
lret
mull
repz
stc
mov
test
add
cld
das
and
enter
leave
gs
repnz
clc
mov
cltd
jne
mov
pop
insl
jno
cs
lods
xchg
cs
mov
stos
mov
jnp
or
sti
push
in
sub
mov
and
fsubl
push
jns
movl
test
xor
stos
jnp
movsb
in
imul
mov
imul
imul
shrb
inc
insl
add
rcrl
adc
pusha
push
sbb
test
jno
and
test
dec
popa
dec
cltd
inc
imul
mov
jnp
jp
imul
add
cmp
cltd
in
inc
nop
cld
push
addl
pop
daa
cmp
mov
inc
out
sub
add
dec
or
jge
pop
insl
mov
cli
test
sbb
cltd
gs
rolb
movsl
mov
movsb
and
jp
outsl
shlb
sti
dec
adc
mov
fstpt
lods
insb
popa
call
dec
and
push
pop
pop
cmp
push
imul
daa
inc
and
dec
fldt
cltd
repz
fldcw
testl
cmc
inc
inc
and
sub
inc
mov
ljmp
push
ljmp
jo
push
cmpsl
pop
dec
mov
idivl
das
jae
mov
pop
lea
nop
mov
and
jecxz
and
adc
insl
cmp
mov
and
fsts
lret
mov
test
aaa
popf
test
dec
and
and
mov
pushf
and
jge
mov
lret
xchg
cmp
inc
dec
mov
loope
imul
push
call
stos
mov
mov
pusha
mov
rorb
fisubl
sbb
xchg
movsl
dec
mov
jno
pop
imul
and
mov
test
xchg
cmp
in
fnstcw
pop
test
dec
pop
xchg
mov
push
and
pop
mov
mov
inc
mov
out
jmp
add
mov
mov
add
mov
dec
add
mov
test
pop
add
xchg
adc
test
imul
jno
cmpsb
sbb
lret
ror
hlt
out
sbb
cmp
dec
loope
adc
cmp
add
cli
imul
jne
cmp
pop
inc
inc
sub
inc
mov
mov
and
pop
bound
cwtl
sbb
push
popf
jno
mov
pop
mov
lcall
push
dec
xchg
lock
inc
pop
gs
loopne
pop
jbe
dec
mov
test
test
mov
inc
in
push
outsl
cmp
adc
subb
nop
and
and
pop
and
arpl
cld
inc
js
lea
sbb
xchg
movsl
sbb
shrl
dec
jle
mov
pop
inc
and
popf
mov
lcall
or
inc
repnz
and
xchg
stos
sbb
gs
sbb
fwait
adcl
push
add
push
add
jo
add
pop
add
fstps
add
add
add
or
adc
inc
cld
jecxz
cmc
mov
out
jmp
pop
cld
mov
scas
test
repnz
mov
subl
je
cmpsb
std
scas
and
mov
inc
aas
into
call
adc
mov
data16
movsl
in
in
push
in
jns
jecxz
movsb
cmp
pop
fs
bnd
roll
sbb
sbbl
mov
sbb
lock
shlb
xchg
adc
dec
punpcklbw
mov
lea
mov
pushf
lea
ja
sar
sar
pushf
sub
not
ror
dec
add
add
shl
mov
sub
shl
test
sar
mov
call
sbb
xlat
adcb
ds
shlb
lcall
push
add
les
icebp
int3
test
sbb
dec
loope
cmp
mov
clc
cmpsl
das
sbb
mov
outsb
mov
cmpsl
and
sub
orb
imul
ss
jmp
mov
setge
xor
shlb
pushf
mov
and
mov
jp
or
mov
push
faddl
mov
in
lret
aad
iret
lods
xor
jg
int
lret
in
pop
jae
jne
inc
shlb
ror
push
clc
mov
add
inc
lea
push
mov
push
xor
push
xchg
cmc
setge
push
mov
shr
clc
push
movsbl
rcl
shrd
or
mov
adc
sbb
bsr
mov
sub
rcr
rol
mov
clc
or
call
sub
jbe
mov
dec
fbstp
and
sub
and
fsub
pop
imul
mov
mov
xchg
xor
cmc
loopne
jbe
es
mov
jbe
data16
xchg
imul
or
jmp
nop
mov
push
sbb
test
fwait
sbb
mov
movsl
xor
adc
iret
adc
icebp
xchg
xchg
adc
inc
out
jecxz
ja
mov
out
cmp
push
jmp
lods
call
push
cltd
faddl
cltd
js
jle
fidivrs
mov
pop
das
or
mov
loope
pop
jb
stc
mov
xor
cmpb
bound
iret
and
in
mov
mov
dec
jae
jp
pop
mov
mov
in
lea
les
ljmp
lahf
pop
cmp
and
out
cltd
xor
mov
loope
sbb
and
repnz
pusha
call
pusha
pushf
xchg
mov
push
pushf
pushl
dec
pushl
call
aas
out
nop
test
cltd
and
mov
test
rolb
pop
iret
dec
leave
inc
mov
loope
mov
mov
or
aas
cmc
or
mov
lock
out
cwtl
push
push
arpl
mov
dec
dec
pop
cltd
clc
icebp
or
sub
out
ljmp
iret
mov
scas
popf
sub
mov
popl
mull
sbb
sub
lea
mull
mov
test
pop
or
xchg
cmp
sub
mov
xor
and
push
push
pop
hlt
ret
outsb
add
mov
stc
js
fidivl
loop
enter
xchg
loope
loopne
mov
lods
adc
test
es
int
pop
int
roll
dec
mov
addr16
shrl
popf
inc
outsl
sbb
fadds
jp
inc
mov
mov
cmp
fwait
jb
test
dec
pushf
fwait
xchg
adc
push
in
les
inc
in
clc
rclb
cmp
jmp
mov
cmp
xchg
cmp
xchg
outsb
sub
pop
inc
adc
push
aaa
mov
push
outsl
and
xchg
xor
lods
cs
rcrb
popf
test
mov
pop
fldt
pop
lcall
jmp
dec
into
xor
add
orl
inc
filds
jb
shll
or
ffreep
sub
das
cmp
pop
pop
loopne
dec
out
iret
addr16
adc
mov
int
xchg
inc
nop
insl
push
sbb
mov
xor
out
sub
sub
xor
push
fidivl
dec
pop
in
mov
pop
subl
push
ljmp
cmp
icebp
add
repnz
cmp
mov
aad
adc
and
imul
movsb
adcl
cmpsl
in
pop
xor
in
ljmp
fisubs
aas
sub
push
add
mov
in
mov
or
outsb
ficompl
jbe
jo
mov
or
cld
lods
jns
rorl
loopne
clc
aam
fwait
cmp
scas
dec
and
test
out
sbb
mov
rorb
jne
pop
dec
test
push
fsubr
xor
jmp
jnp
add
stos
push
mov
movsb
ja
jl
inc
sub
cmpsb
lea
and
lret
push
pop
pop
xor
mov
in
imul
pop
shlb
or
ljmp
dec
dec
inc
inc
push
push
xor
cs
insb
add
loopne
sets
pushl
pushl
lods
stc
neg
pushf
xor
movl
mov
pushf
push
inc
mov
ror
jmp
jmp
cmpb
jmp
pusha
mov
cmp
jmp
lea
ja
add
rcr
setns
adc
add
push
cmc
mov
bt
pusha
clc
cmc
cmp
jmp
addr16
xchg
lds
pop
adc
push
stc
xchg
cli
les
push
or
pop
rcll
in
out
mov
ret
push
inc
movsl
and
push
shlb
dec
cmpsb
and
and
cmpsb
pop
mov
xchg
dec
or
out
out
sti
cmp
sub
push
shlb
push
stc
jp
js
push
sub
mov
aad
orb
lret
scas
shl
mov
lea
test
push
shr
jmp
sub
jbe
and
xchg
or
pop
adc
mov
or
les
xchg
pop
adc
pop
fbld
jbe
mov
push
sbb
ret
out
decb
xor
pop
leave
mov
inc
stos
arpl
aas
gs
data16
ret
mov
cmp
inc
xchg
jb
inc
mov
cmp
inc
ret
data16
mov
mov
sbb
adc
lods
cmc
jae
push
dec
ret
xor
mov
mov
call
mov
mov
push
in
out
scas
pusha
mov
push
lea
jmp
leave
lea
push
jbe
sub
insl
enter
pop
shll
mov
mov
iret
mov
mov
addr16
fsubs
repnz
or
popf
ficomps
mov
sbb
pushf
jno
test
cmp
xlat
das
xchg
lock
outsb
and
adc
roll
mov
shlb
sbb
aas
out
mov
add
cmp
es
aam
xchg
jecxz
lret
push
scas
js
inc
inc
decb
jbe
xchg
adc
dec
leave
mov
fidivrs
mov
stos
aas
xchg
dec
cmp
push
jns
add
je
push
mov
insl
rcll
mov
scas
mov
lock
out
das
addr16
out
lret
xchg
jo
add
sub
test
out
inc
sub
push
aam
xchg
loope
fs
call
push
call
call
jbe
les
es
sbb
or
andb
cmpsb
arpl
jnp
leave
push
stos
cmp
jb
decb
cltd
fisubl
pop
stos
pop
enter
aad
sarl
jp
sbb
mov
adc
push
nop
mov
scas
push
push
into
mov
mov
sub
aas
cmc
bound
movsb
sarb
sbb
sub
ja
add
or
and
mov
pushf
fldenv
int3
push
pop
mov
jmp
cmpl
mov
out
sbbb
insl
or
mov
cmp
icebp
mov
ss
clc
xchg
fwait
outsl
push
fldenv
mov
jle
mov
ljmp
lahf
hlt
rol
jge
push
jbe
lock
es
mov
mov
push
mov
xchg
push
jge
imulb
lret
imul
jmp
xchg
mov
loop
or
mov
dec
arpl
out
add
jmp
test
lea
test
mul
mov
addb
mov
stc
dec
mov
movsl
rolb
xlat
jo
cmc
or
sti
outsl
sub
call
cmpsb
mov
xor
jmp
jmp
jp
in
mov
outsl
pop
fnstenv
add
and
sbb
pushf
push
fstpl
pop
call
lea
ja
not
inc
inc
jmp
jmp
jae
pushf
cmc
jmp
inc
inc
push
inc
push
dec
xor
cs
insb
add
mov
sbb
lods
adc
jle
test
adc
adc
add
mov
ftst
adc
pop
loope
int
in
test
out
mov
xor
clc
test
pop
std
or
shlb
xchg
jecxz
mov
scas
lds
in
decb
fs
push
xor
into
test
arpl
fdivr
outsb
nop
mov
cmp
mov
cmp
push
mov
or
push
aaa
lods
dec
mov
mov
push
addl
sbb
mov
ljmp
inc
adc
dec
cmp
xchg
bound
xor
sub
inc
repnz
call
jl
xchg
in
popf
xchg
cmp
aas
jle
or
mov
mov
repz
scas
xchg
pop
xor
push
mov
adc
xchg
mov
jge
or
nop
cmc
scas
push
jns
inc
mov
cwtl
dec
mov
jo
add
lock
call
inc
lcall
popf
xor
fcoml
add
push
jbe
setb
jl
fisubrs
mov
push
nop
dec
daa
fidivrl
nop
in
push
adc
and
lea
lods
sbb
rorl
outsl
cmc
or
or
fs
jns
stc
xchg
push
mov
push
pushf
sbbb
cmc
push
sbb
push
mov
add
xor
ror
shll
dec
sbb
jns
push
jbe
pop
out
dec
and
mov
cmp
ror
adc
mov
pop
sbb
adc
addr16
or
lahf
es
pop
roll
idiv
adc
cmpsl
cmp
sub
xchg
mov
and
jmp
or
ja
decl
pop
lret
push
in
pop
xor
jnp
fdivs
hlt
out
mov
and
test
cmp
mov
shlb
fidivrs
pop
sbb
xchg
fdivrs
adc
insl
and
test
jb
ljmp
out
push
mov
and
jl
and
sub
mov
dec
jl
mov
mov
sahf
adc
mov
stos
sti
icebp
or
sub
adc
xor
outsb
test
pop
xchg
push
out
adc
mov
cwtl
or
ficoml
mov
sub
sub
cmp
mov
cmp
cmpsl
faddl
stc
push
add
pop
sub
jl
into
cmp
sub
pop
cmp
or
imul
pop
and
inc
mov
stos
pop
mov
jl
jae
xor
aad
mov
inc
mov
xchg
inc
cmp
pop
insb
and
fidivrs
dec
std
rcrl
inc
imul
shlb
movsb
adc
arpl
rorl
fwait
adc
dec
out
enter
dec
jnp
bswap
bsf
sub
pushf
bt
and
aas
mov
rcr
pushf
shl
shld
mov
shld
seta
bsr
and
push
push
rol
bswap
aam
sub
cwtl
lea
pushf
pushf
pusha
mov
push
pushl
pushf
pushf
mov
lea
pushl
mov
jmp
imul
push
jbe
subl
fimuls
ret
add
inc
cmpsl
movsb
mov
bound
aaa
int
lock
or
mov
mov
mov
mov
lret
call
xor
in
leave
das
push
nop
mov
cmp
and
jg
mov
pop
enter
inc
push
push
nop
fnsave
incb
push
jbe
cs
or
imul
mov
push
jae
xor
push
jmp
nop
and
lds
negb
add
push
push
scas
fcmovu
repz
mov
or
inc
movsl
jnp
cld
mov
pop
sbb
sbb
mov
inc
xor
lahf
mov
es
xchg
inc
lds
adc
les
jne
and
sbb
in
dec
sti
jl
popw
add
sub
mov
fdivs
pushf
lea
ja
clc
stc
imul
push
pushf
cmp
jmp
arpl
fs
xor
cs
insb
add
mov
ret
ficomps
ror
mov
clc
cmc
pusha
cmpb
jmp
add
inc
gs
imul
inc
add
ret
cmc
cmc
test
pusha
cmpb
pushf
push
pushl
lea
jne
sar
rol
sub
call
pushf
movl
jmp
lea
jae
dec
inc
call
inc
btr
mov
pushf
clc
and
cmc
add
add
push
jmp
call
adc
lods
nop
push
jbe
das
mov
fldcw
pop
call
xor
jne
lds
stc
xchg
jge
aad
xor
test
adc
movsb
mov
xchg
mov
sarl
cld
sar
rcrb
dec
inc
repnz
adc
pop
push
negb
je
aaa
ljmp
lret
sub
add
mov
push
ds
lret
test
jb
mov
shrl
jecxz
lret
cltd
jb
cmc
inc
jmp
ljmp
loope
add
dec
add
jle
fisubrl
lds
loope
and
jno
adc
push
pop
mov
pop
or
into
stc
outsb
lahf
cld
xchg
test
mov
test
mov
dec
mov
and
mov
mov
sti
cwtl
inc
mov
call
lcall
adc
mov
push
mov
lods
cld
ret
push
pop
adc
jno
das
popf
sti
push
movb
std
pushf
xchg
lea
or
jg
iret
sbb
sahf
popa
adc
mov
jp
push
icebp
ficoms
stos
push
sti
or
cmpsl
xchg
in
mov
jmp
pop
dec
ja
fbld
scas
bound
pop
rclb
stos
pop
outsb
sub
mov
outsl
je
aam
rcrb
jns
pushf
pop
in
add
jg
fs
pop
icebp
out
les
in
leave
fsub
inc
xor
popa
adc
jbe
lods
lfs
packssdw
int3
mov
or
sub
sahf
lds
retw
cwtl
jno
cwtl
mov
imul
lea
scas
repnz
or
cmpb
call
les
mov
in
stos
cmp
test
xor
out
inc
pop
push
stc
ret
movsb
inc
dec
filds
mov
insl
and
sbb
push
out
mov
jns
mov
insb
iret
and
jl
xchg
cmp
adcl
xchg
add
add
lock
ljmp
lods
cld
jo
push
xchg
mov
push
les
add
mov
cmp
dec
add
add
aaa
adc
ja
adc
arpl
sarl
xchg
dec
iret
jl
stos
aas
adc
pop
loopne
das
cmpsl
inc
sti
les
and
xchg
lea
jb
test
call
pop
pushf
call
ror
call
mov
jbe
inc
test
mov
and
push
fnstsw
gs
push
aaa
psadbw
or
sub
stos
or
mov
or
mov
arpl
sub
or
jge
push
icebp
dec
inc
and
mov
jns
in
cmp
inc
jecxz
dec
div
push
xor
push
fists
mov
add
sbb
call
jge
cmp
mov
xchg
push
jbe
push
fnstsw
daa
sahf
sbb
and
lcall
xor
insb
add
lea
xor
push
sbb
ffreep
and
cmp
pop
test
es
xchg
js
pop
out
push
mov
int3
dec
xor
add
les
jne
dec
and
stos
out
in
push
js
cld
adc
outsl
adc
push
mov
sbb
je
ds
test
mov
xor
dec
adc
stos
dec
pushf
test
ret
loopne
bound
push
add
xchg
push
jbe
fnstsw
mov
hlt
mov
xor
dec
fs
shrb
xor
scas
imul
push
mov
mov
fmull
stos
dec
scas
mov
push
mov
lods
ds
jmp
nop
cmpsl
std
push
decl
loope
int
adc
add
insl
add
test
adc
js
mov
xor
mov
mov
sub
gs
jne
mov
shlb
in
bound
xchg
push
jbe
rcll
pushf
aas
stos
inc
sbb
cwtl
inc
sub
sub
mov
and
jmp
mov
cmp
insb
inc
popf
hlt
fsts
jno
lock
dec
mov
pop
ljmp
jl
adc
inc
cmp
add
hlt
lods
xchg
out
add
push
pop
in
dec
stc
dec
into
aas
cmc
lcall
sahf
adc
fnstenv
adc
insl
jecxz
push
jae
or
or
rorb
popf
mov
cmc
test
xchg
push
jbe
int3
arpl
roll
int3
jnp
cwtl
cmp
inc
and
dec
ljmp
in
test
movsb
ja
xchg
xor
mov
nop
push
popf
jl
lret
mov
jne
movsb
clc
mov
pop
xor
mov
dec
add
adc
jmp
xchg
xlat
push
ljmp
stos
outsl
loopne
ss
push
fldcw
popf
xlat
pop
cmp
fwait
lea
jbe
rcl
shl
shl
sub
shl
mov
rcl
mov
clc
add
bts
xchg
shr
movzbw
push
pushl
lea
mov
pusha
add
pop
pushf
mov
lea
jmp
sarl
adc
push
mov
test
cmp
jo
sahf
push
scas
mov
cmc
addr16
icebp
xor
mov
gs
cmp
jmp
lretw
or
clc
jge
scas
sbb
loopne
subl
adc
add
adc
sub
int
shrb
adc
xor
or
shlb
shr
xchg
xor
push
test
xchg
sub
xchg
push
arpl
ds
cmpsl
lea
jle
pusha
pusha
movl
push
pushl
movb
lea
jmp
je
das
cwtl
push
jbe
int
cmp
mov
xchg
cmc
out
pop
decb
into
xchg
loope
imul
dec
mov
test
hlt
stc
cmp
es
in
jo
mov
movsl
notb
dec
dec
les
in
rorl
int3
mov
push
cmpsl
test
mov
add
cmp
push
sbb
xor
fstps
insl
popa
outsb
int3
je
push
inc
sub
lods
sub
les
aas
stc
lods
jecxz
nop
sbb
or
test
leave
cli
jmp
ror
pushf
pushf
stc
pusha
mov
cmp
pushf
add
clc
stc
pushf
push
test
movw
lea
jp
jne
jmp
push
in
push
jbe
stos
adc
int3
pop
push
jno
mov
or
sub
movsl
push
scas
mov
fistps
sub
mov
add
and
push
roll
add
call
mov
adc
lea
popf
jl
aas
ja
and
mov
rcrl
push
fnsave
mov
cld
sub
cmp
ret
push
xlat
lock
sbb
adc
out
mov
pop
in
repnz
jl
ss
ret
ss
js
sub
jbe
and
mov
adc
mov
out
gs
cltd
xor
lods
movsb
push
jb
cmp
imul
sub
pop
sub
push
clc
add
aam
aas
cmpsl
or
out
int3
mov
scas
push
or
cmpsb
or
sahf
or
sub
das
and
xchg
dec
stos
ja
cmp
mov
fs
and
scas
mov
and
sahf
inc
cli
cmpsl
or
ficompl
mov
js
out
scas
jb
sub
mov
mov
sahf
sub
jbe
dec
cmpsl
xor
sbb
push
pop
jno
pop
cmc
cwtl
cmp
push
or
inc
cld
fistps
push
cmp
popf
adc
and
inc
add
lods
pop
push
addr16
lret
ljmp
jle
mov
mov
sahf
imul
daa
pop
cmp
in
cwtl
ret
pop
adc
dec
sbb
dec
mov
mov
les
insl
js
call
lret
cltd
push
jbe
dec
xchg
xor
stos
sub
lahf
fsubrl
sub
mov
rcl
mov
cmp
cmp
sbb
adc
and
ja
movsl
mov
xchg
sub
ret
divb
or
push
xor
jnp
rcll
fwait
push
jbe
add
dec
scas
xchg
sub
sub
ds
add
xchg
dec
xchg
push
inc
jnp
inc
in
jge
sahf
dec
and
cmp
mov
and
sub
and
xchg
outsb
add
add
icebp
sti
fnstsw
adc
sub
in
and
mov
adc
adc
insl
xchg
jbe
xchg
add
insb
adc
mov
movsl
inc
push
test
call
sub
movsb
lcall
aaa
push
mov
shlb
mov
sti
hlt
scas
sbb
pop
push
movsb
dec
mov
loope
mov
pop
aad
rorb
pop
dec
call
mov
jmp
loopne
jne
ljmp
xor
lret
sub
rclb
mov
out
mov
xchg
mov
shll
cltd
xchg
or
js
pusha
setae
aaa
popf
sub
cmp
ljmp
cmc
mov
ss
adc
js
je
jb
arpl
jae
pusha
lea
jne
shr
shld
xor
neg
sbb
mov
test
sbb
add
setg
mov
bt
test
pusha
pushl
call
add
loopne
jmp
add
lahf
fwait
push
jbe
add
js
mulb
lahf
xor
loopne
jg
repnz
pop
icebp
test
jb
sub
shlb
pop
or
mov
dec
and
daa
mov
imul
mov
into
dec
mov
lret
negb
outsb
jae
imulb
mov
jle
push
scas
and
in
clc
stos
shll
mov
lahf
pusha
icebp
or
popa
loope
stos
test
mov
imul
push
jbe
aam
pop
mov
cld
lahf
es
xor
inc
and
push
add
mov
frstor
mov
lds
mov
mov
add
pop
outsl
mov
or
insl
shlb
cmp
mov
gs
scas
lret
inc
push
in
das
pop
adc
mov
inc
mov
or
sbb
mov
testl
xor
in
xchg
jno
push
jbe
hlt
imul
fldt
pop
add
mov
dec
std
mov
cwtl
sbb
fbstp
cs
fs
orl
ret
xchg
and
test
sub
mov
jbe
dec
ret
shlb
xchg
xor
add
pop
fadds
xchg
dec
insb
loope
sahf
push
cld
xchg
pop
out
mov
lcall
mov
cmc
jp
mov
ret
popf
ret
lret
lods
xor
sub
jno
test
pushl
bt
cmp
call
shrd
movsbw
sub
shl
shr
inc
daa
mov
shl
clc
shl
pushl
add
pushf
cmc
mov
push
cmp
jmp
shr
test
push
jbe
push
in
mov
lret
sub
mov
sbb
out
xchg
jnp
scas
subb
xor
and
popa
addb
negl
lahf
adc
mov
gs
aad
jns
ljmp
pushf
pushf
lea
pop
and
or
cwtl
xor
mov
dec
in
pusha
mov
or
not
imul
aaa
or
fbld
ficompl
sub
dec
insb
loope
jae
jl
adc
sub
popa
jns
pop
repz
inc
mov
xchg
movsb
jp
int
cmp
shrl
mov
adc
mov
mov
mov
cmpsb
pop
adc
sub
dec
out
scas
inc
mov
sub
sbb
std
call
pop
sahf
push
jbe
imul
xchg
inc
cwtl
arpl
test
xlat
fdivs
repnz
leave
inc
jmp
xchg
loop
sahf
pop
in
stos
mov
xchg
push
jg
push
aad
scas
push
jb
jmp
inc
sbb
xchg
fwait
xchg
test
mov
je
push
gs
xor
fcomip
and
and
cmp
rcr
or
sbb
push
stos
fstps
sbb
sti
jno
lods
inc
fs
out
jno
inc
inc
adc
fcomps
inc
pusha
jge
xchg
test
mov
cmp
mov
add
popa
addr16
imul
dec
arpl
push
imul
ret
setno
pusha
bswap
lea
call
movsl
pop
sbb
mov
aam
adc
js
subb
push
mov
fstpl
scas
popa
jns
push
loope
scas
insb
mov
mov
aaa
icebp
or
and
xorb
adc
mov
repz
fisttps
xor
sbb
fisubrs
movsb
jmp
mov
push
pop
or
and
pop
popf
sti
adc
cmpsb
pop
inc
lahf
mov
pusha
mov
call
and
bt
mov
add
pusha
pushf
lea
jmp
sub
out
push
jbe
inc
sbb
sbb
cvttps2pi
dec
pop
sub
rcr
js
mov
insl
sbb
xchg
push
pop
lret
adc
xchg
sub
dec
pop
jmp
cltd
popa
xchg
fstp
mov
cmp
mov
int
andl
pop
scas
pop
pushf
cmpsb
mov
cmpsl
xor
cmp
scas
dec
das
jmp
call
test
dec
xor
iret
xchg
sbb
loopne
loopne
or
xchg
and
out
mov
jecxz
dec
clc
fnstcw
pusha
stos
pushf
movb
mov
lea
jmp
pushf
pushf
lea
je
jmp
or
test
test
pop
add
and
xchg
add
dec
cltd
rorl
mov
mov
push
inc
dec
or
pop
loopne
lds
cmp
insl
in
jle
dec
add
push
pop
xchg
mov
xor
in
xchg
jle
and
bound
jge
out
aad
lea
mov
fnstcw
pushf
and
adc
insb
mov
jo
mov
mov
pop
add
lock
enter
lock
pop
mov
sub
sbbl
shll
bound
xchg
push
out
jl
xchg
dec
cmp
push
negl
sti
sti
mov
adc
mov
jbe
lahf
adc
adc
lds
sub
bound
mov
push
movsb
rol
test
out
das
pusha
fnsave
mov
xor
outsb
leave
inc
mov
mov
lods
or
je
iret
push
push
sub
lahf
pushf
add
mov
cmpsb
popa
lods
dec
repnz
sub
xor
addb
arpl
movl
push
lea
jbe
pushf
pushl
movl
pusha
push
movb
mov
lea
jmp
push
jbe
mov
pop
ficompl
fbstp
std
mov
jg
inc
test
fisttps
mull
loope
movsl
aaa
dec
cmp
mov
jg
dec
mov
das
loope
pop
mov
sub
push
lea
rcl
ss
sub
shr
movsb
push
push
lds
inc
pop
rol
and
fwait
jne
mov
sbb
aam
lods
mov
mov
sahf
dec
jge
sbb
add
jmp
in
mov
jne
lahf
add
cwtl
pop
fidivrs
ret
sahf
pop
stos
dec
out
mov
gs
cs
add
ja
cltd
xchg
ljmp
int
jl
lcall
add
dec
push
fcompl
xchg
test
jg
mov
xor
fnsave
push
scas
jecxz
cmp
hlt
xor
add
xchg
push
push
cmp
hlt
mov
mov
push
lahf
pop
dec
lret
jge
sbb
mov
gs
mov
test
rol
and
push
lods
scas
sub
mov
pop
push
fstl
loope
cmpb
sbb
ret
jb
rol
js
mov
out
mov
ret
ljmp
adc
adc
in
insb
int
cwtl
adc
jbe
mov
out
ja
scas
push
xor
jle
pushf
imul
arpl
addr16
push
enter
lds
cmp
decb
subb
adcl
jo
mov
popf
in
loop
dec
cmp
add
lret
cmpsb
divb
mov
mov
pop
sbb
cmp
sbb
jo
sbbl
jne
xchg
data16
cmp
iret
mov
add
sub
fdivs
rolb
mov
mov
xor
or
or
adc
stos
xor
test
push
jbe
shll
hlt
xchg
push
sbb
xchg
or
movsl
cmp
outsb
mov
pop
lods
fsubp
mov
mov
jg
sahf
mov
jge
dec
pcmpeqb
sbb
jo
cmpsb
mov
mov
gs
xchg
gs
fistpll
sbb
sbb
cltd
mov
push
pop
cmpsb
xlat
mov
mov
mul
cmp
jle
loopne
add
movsl
or
pusha
mov
jp
sbb
dec
mov
jle
jo
lret
out
jle
outsl
popf
fwait
xor
xchg
sub
xchg
mov
divl
and
ljmp
cmpsb
inc
ret
xchg
inc
data16
stos
arpl
mov
mov
adc
into
in
sbb
aam
pop
push
popa
sub
sbb
in
inc
sar
fadds
inc
adc
or
inc
inc
loope
xchg
jnp
sti
xlat
mov
dec
and
aad
shll
xchg
inc
hlt
jns
mov
fnstsw
fnclex
xchg
dec
adc
dec
push
pushf
sub
lea
pusha
stc
pushf
or
pusha
mov
push
pushl
lea
je
bswap
bswap
push
call
or
std
movsl
push
jbe
jg
popf
cmp
xchg
pop
hlt
jbe
pop
lret
stos
test
push
mov
pop
repz
mov
shll
push
pop
mov
mov
mov
sub
sbb
sbb
stos
adc
aam
inc
jo
lahf
xchg
ljmp
xlat
lock
jae
sub
frstor
enter
or
nop
test
ficompl
mov
add
add
inc
and
sbb
push
lea
ja
jmp
pusha
lea
pushf
pushf
movb
movl
jmp
jmp
stos
dec
cmpsl
push
jbe
mov
notb
fisttps
movsb
dec
mov
and
std
rorb
jb
loope
xor
loop
xor
jp
rcr
fs
es
xchg
lods
xchg
mov
into
sbb
push
push
stos
sbb
in
iret
push
ret
jns
out
cld
dec
dec
lods
imul
jnp
mov
ja
enter
or
or
push
repz
sbb
lahf
mov
mov
inc
pop
fbld
int3
dec
scas
jno
jmp
adc
inc
scas
inc
push
rorl
popf
addb
adc
std
mov
je
fisubrl
in
repnz
icebp
mov
pop
nop
mov
inc
mov
dec
push
jg
loopne
lods
add
sahf
cs
pop
adc
mov
push
fidivl
daa
lea
jecxz
pushf
dec
lcall
xor
xchg
mov
or
fwait
dec
fnstsw
push
cmpsl
push
jbe
add
cmp
sub
lret
les
mov
ret
jno
loope
cmpsb
pop
test
in
loop
arpl
adcl
mov
negb
or
fs
xchg
repz
mov
rorb
sub
cmp
push
lcall
fdivrs
leave
mov
lcall
pop
push
lret
jecxz
and
popf
sbb
xchg
jmp
andl
or
divl
aad
imul
js
lock
jbe
pop
inc
lods
inc
bswap
pop
hlt
jae
insl
dec
xlat
insl
es
and
cltd
pop
xor
mov
pop
push
scas
jbe
dec
mov
pop
sbb
lods
xchg
inc
fwait
loope
fimuls
mov
adc
pop
and
loop
pusha
pop
mov
fidivl
sahf
xchg
out
dec
sub
mov
lds
add
les
and
push
dec
stc
idivb
mov
mov
sub
add
adc
push
jbe
out
mov
mov
or
dec
mov
call
and
cmp
shrb
daa
hlt
mov
stc
notl
mov
adc
push
cmpl
and
cs
loopne
or
dec
pop
adc
das
inc
push
mov
xor
test
inc
mov
lods
jl
scas
add
leave
cwtl
push
mov
test
loop
loop
or
lcall
pushf
mov
imul
stos
push
jbe
mov
aad
repz
test
push
jg
push
rcrl
je
idivb
xor
push
push
mov
push
bound
xchg
sub
fiaddl
pushf
add
xor
fidivs
inc
std
dec
cmpsb
add
rcr
mov
cwtl
stos
and
mov
jae
pop
sbb
aam
or
roll
adc
cmp
scas
test
ret
arpl
mov
loopne
clc
jno
lock
and
jmp
divb
loope
fisttps
mull
sti
test
ret
push
pop
pop
leave
xor
or
or
popa
test
out
push
test
icebp
cltd
xor
jp
xor
div
shlb
cmc
inc
sbb
shl
jp
mul
dec
xchg
cmc
aad
push
jbe
cmp
mov
std
sbb
xchg
adcl
xchg
out
leave
push
cmp
mov
lds
scas
or
test
xchg
mov
in
dec
xchg
push
mov
mov
push
sub
push
ret
cmp
mov
ja
std
int3
test
cmp
push
or
pop
xchg
dec
cmp
adc
js
int3
inc
add
repz
icebp
cmp
dec
push
lret
pop
or
nop
pop
and
add
inc
popa
lea
call
pushf
stc
sub
pushf
lea
jne
pusha
call
push
pushf
lea
jne
call
dec
sub
stos
push
jbe
gs
inc
mov
in
mov
loope
je
push
iret
mov
sti
xlat
dec
popf
inc
sub
rclb
sub
mov
inc
dec
jae
inc
add
push
push
push
js
push
or
orb
pop
mov
es
lret
xor
fmuls
clc
dec
dec
ljmp
aaa
les
mov
and
jb
les
imul
je
outsl
outsb
and
jb
jb
and
lret
mov
mov
in
insb
xor
mov
rcrl
add
popf
lcall
in
call
push
stos
inc
mov
xor
movsb
inc
in
test
lds
mov
fsts
adc
shl
in
jmp
xchg
das
out
sub
mov
mov
lds
jnp
lods
push
add
stc
mov
pushf
jno
push
movl
movb
pushf
pushf
pusha
lea
jmp
push
sub
stc
bt
clc
cmp
pusha
movw
movl
pushf
lea
ja
pusha
jmp
imul
lret
ja
lods
jo
into
dec
ficomps
insb
adc
stc
inc
fidivl
cwtl
fisubrs
std
les
or
int
push
ret
or
stos
fdivp
dec
insl
in
cmpl
push
pusha
jecxz
adc
add
inc
pop
add
call
or
data16
js
lcall
iret
insl
adc
sbbb
push
jbe
inc
movsl
sbb
orb
mov
pushf
pushf
inc
and
jp
xlat
mov
mov
dec
add
xorl
jecxz
ja
popf
sbb
repz
push
pop
sbb
mov
test
dec
inc
pop
cmp
xor
mov
or
cmp
add
out
inc
push
jmp
xor
push
sbbb
mov
inc
add
pop
mov
pushf
jg
fwait
inc
cs
jle
loopne
or
pop
push
outsb
and
icebp
or
jg
push
lods
push
jbe
mov
inc
ret
lret
lcall
push
fldcw
mov
push
imul
mov
pop
lret
loopne
push
cs
xor
mov
push
and
xor
lcall
pop
mov
lods
xor
cli
jg
movsl
insb
push
test
xor
rorl
pusha
mov
out
pop
cltd
push
insl
loop
fildl
rep
adc
xor
jne
inc
or
mov
jns
xchg
jmp
and
or
scas
push
adc
scas
push
jbe
insb
jbe
mov
mov
lock
cltd
and
cwtl
nop
pop
xchg
jae
jmp
mov
and
or
enter
fidivs
adc
push
lret
cmpl
cltd
pop
fnstsw
cmp
jle
pop
push
pop
sbb
or
push
shr
cmp
shll
rcrb
xchg
mov
into
addb
sbb
lea
call
jmp
jmp
ficomps
cmp
scas
insl
clc
inc
sti
insb
and
ss
push
pop
sub
lcall
inc
sub
sahf
icebp
xchg
setle
and
flds
inc
pop
adc
mov
test
mov
mov
cmc
iret
aam
movsb
jae
lcall
dec
mov
mov
mov
pop
lock
fstpt
push
std
xlat
push
mov
test
sbb
pusha
and
push
xchg
pusha
sbb
repnz
mov
and
shl
bswap
mov
jmp
pusha
neg
shr
mov
pushl
call
stos
movb
pushf
lea
jmp
call
lea
call
pusha
lea
jae
push
xor
mov
call
mov
jbe
sbbb
jne
xchg
mov
push
sub
rorb
mov
and
cmpsl
in
push
mov
scas
or
xchg
jmp
jb
sbb
popf
ss
shlb
xchg
test
mov
hlt
aad
dec
lock
data16
dec
cmp
jecxz
add
mov
mov
jbe
jge
mov
aad
aaa
lret
or
cmpsb
cmp
addr16
pop
out
ja
push
lods
test
loope
stos
pop
dec
out
es
jb
xor
insl
push
fildll
shlb
rcll
dec
lcall
cltd
das
inc
sahf
mov
adc
popf
push
mov
jmp
stos
es
mov
shr
push
add
sbb
cs
pushf
adc
lahf
js
mov
xchg
pop
mov
jbe
push
lds
push
movsb
pop
xor
sbb
push
dec
mov
loope
in
add
mov
and
lock
push
pop
jp
addr16
add
outsl
loopne
aas
jnp
mov
enter
adc
testb
push
mov
push
call
out
rcrb
mov
fwait
push
loope
inc
mov
cmpb
push
xchg
sub
mov
jbe
mov
shlb
push
fists
mov
adc
icebp
stos
jno
cmpsb
mov
aaa
aas
mov
in
mov
cmp
sarb
lret
inc
pop
adc
inc
and
js
cmp
or
in
xchg
xchg
insl
mov
cld
mov
movsb
xor
jbe
dec
imul
sub
mov
jbe
outsb
pop
mov
push
xchg
cmp
mov
lcall
jge
movsl
adc
adc
sahf
mov
in
mov
imul
jo
aam
adc
xchg
cmp
fstpl
add
xor
push
push
repnz
pop
inc
add
loope
push
fmuls
sbbb
cmp
test
adc
xchg
cmp
cmp
cwtl
out
dec
call
leave
mov
adc
popf
mov
mov
and
movsl
cwtl
cmp
in
cmp
add
mov
lcall
adc
loopne
and
ret
cmpsb
and
cmpsb
mov
ds
neg
sub
sbb
mov
fildl
mov
mov
jae
iret
pushf
jl
adc
mov
jbe
mov
lods
das
xchg
jg
std
sbb
fisubl
fsubrl
rcl
shrb
std
call
cld
imul
lds
or
sbbl
les
fsubrl
rcl
rcrb
push
pop
sbb
xchg
sbb
mov
add
mov
push
sbb
aad
pop
or
fidivs
lods
mov
rcl
rorb
or
loopne
push
stc
pop
add
add
cmp
pop
sub
and
outsb
xor
xor
xchg
sbb
call
mov
inc
or
insl
mov
cmp
adc
aad
test
xor
dec
jne
xor
or
repnz
inc
and
or
enter
adc
mov
mov
lea
mov
pop
pop
mov
je
add
cmpb
aam
mov
out
cmp
enter
xor
mov
cltd
pop
adc
fstl
sub
shrb
mov
jbe
mov
icebp
shlb
mov
lret
sub
lods
daa
cld
jge
push
nop
clc
scas
dec
jmp
sub
sahf
mov
cmp
pop
or
mov
sbb
push
mov
xor
cmpsb
cltd
pusha
dec
fnstsw
mov
jns
movsb
cmpsb
xchg
mov
dec
push
or
ret
pop
outsb
and
das
sti
adc
xchg
fistps
cmpl
das
sbb
mov
inc
cltd
pop
ror
pushf
stc
test
stc
add
clc
pushf
pushw
popfw
pusha
movb
jmp
cmp
cmp
push
mov
arpl
adcl
ss
xchg
js
movsl
push
pop
jne
jge
loope
repnz
call
xchg
jmp
fs
xchg
insl
xlat
fsubs
lods
daa
mov
mov
dec
adc
das
inc
fwait
pop
cmpsl
and
test
ret
popf
cwtl
imul
and
into
mov
aam
jl
jg
pop
dec
std
movsb
sbb
repz
out
mov
adc
and
mov
jne
and
nop
pusha
movw
mov
lea
jmp
out
scas
mov
jbe
adc
movsb
add
imul
lret
outsb
xadd
int
inc
mov
sub
mov
jnp
push
add
xchg
xchg
sub
mov
xor
pcmpgtw
scas
fdivs
icebp
push
aam
pop
sbb
dec
loopne
sbb
or
roll
insb
or
clc
movsl
add
pusha
rcrl
shl
arpl
mov
rcll
or
mov
jae
or
test
push
jbe
hlt
mov
movsl
push
pop
ds
pop
cmc
mov
mov
adc
mov
dec
rcl
push
ja
jecxz
scas
mov
push
xor
push
lcall
mov
push
mov
lahf
xlat
sub
movsb
dec
fisubs
mov
test
mov
mov
xor
xlat
push
leave
sahf
inc
mov
movb
push
xor
jns
mov
jmp
div
mov
push
jbe
pop
add
lds
pop
inc
int3
cmp
xchg
jae
push
in
inc
sub
and
cmpsb
cmp
cmp
xchg
std
fsts
hlt
pop
lcall
mov
push
mov
in
adc
movsb
cmp
testl
mov
ss
adc
subb
aad
inc
xchg
loopne
sti
cld
ret
out
test
sahf
or
pop
mov
xlat
stos
lret
mov
aaa
mov
out
pushl
dec
mov
jbe
or
and
bnd
dec
js
in
add
xrelease
xchg
dec
ret
fdivrs
pop
cli
and
mov
lcall
and
lahf
adc
sti
push
cmp
das
js
ret
xorl
cli
jne
out
mov
cmpsl
test
add
push
mov
lret
js
xchg
jmp
jecxz
pop
or
push
cs
dec
test
or
fs
addl
pop
jg
dec
outsl
push
mov
or
or
push
outsb
fcmovnbe
mov
mov
sub
loope
xor
dec
and
jae
loop
xorb
fstps
fsubs
jno
das
insb
pop
pusha
adc
xchg
lds
out
push
cmc
mov
dec
imul
test
inc
and
or
shl
pop
dec
push
pushf
movb
lea
jmp
movb
mov
movzbw
pushl
popl
mov
pushf
mov
movzbw
pusha
call
ret
mov
jbe
ret
scas
cs
sbb
sahf
daa
mov
xchg
sbb
pop
mov
push
mov
and
inc
sbbl
push
adc
cwtl
dec
scas
sti
fidivrs
dec
add
divb
or
data16
adc
nop
inc
inc
mov
xor
pop
inc
fdivrp
jo
lods
push
cmpl
outsl
dec
decl
xorb
fadd
sub
addb
xor
iret
jbe
pop
xorl
sbbb
jbe
sub
adc
xor
imul
mov
inc
add
xor
loope
and
mov
adc
pop
xor
lret
lcall
lret
lods
dec
inc
sub
imul
test
in
fwait
aas
cli
out
out
xchg
add
lods
clc
cmp
sarb
jp
mov
push
pop
shrb
loope
cltd
and
lods
lods
jl
jbe
mov
dec
out
ret
jbe
inc
sbb
add
mov
sbb
mov
pop
add
fs
aam
lods
jo
popa
icebp
cld
push
or
pop
push
push
rolb
inc
pop
aaa
xor
xorb
lock
pop
andl
or
mov
es
mov
and
insb
dec
rorb
and
loope
mov
enter
mov
jecxz
cmp
xchg
std
mov
fisttpll
mov
popa
fsubs
pop
mov
pop
pop
cltd
loope
or
pop
and
icebp
xchg
das
repnz
sarl
fcmovb
test
in
clc
jge
out
sahf
inc
push
mov
pusha
out
xor
movsb
in
mov
xor
jle
ret
sti
dec
or
mov
xchg
mov
lret
xchg
push
fcompl
jg
pop
rclb
pop
sub
add
jae
nop
das
adc
aam
mov
out
lods
mov
aad
aam
lret
nop
dec
mov
mov
jae
xor
out
in
into
sub
test
or
aaa
pop
pop
inc
sub
int3
inc
mov
mov
les
push
cltd
aas
push
push
xor
mov
cs
cwtl
xchg
lahf
rcll
push
ficompl
cmpsl
inc
bound
sub
imul
fbstp
push
fisttpll
or
test
addr16
ret
xor
and
out
arpl
neg
push
mov
shll
dec
sbb
xor
xchg
add
cltd
bound
loop
jae
mov
fists
loope
cmp
popa
and
pop
hlt
lea
mov
add
jne
cld
in
pop
bound
mov
xor
jns
sub
pop
lret
stos
sbb
pop
das
inc
popf
in
xchg
push
scas
mov
icebp
jp
add
lods
push
sbb
cmp
stos
push
aam
push
adc
bound
mov
test
xchg
in
fnsave
ss
sbb
aam
push
jbe
adc
stos
xchg
ja
sub
aam
shrl
out
xchg
dec
mov
test
mov
lods
mov
inc
rcrb
shrb
fwait
sbbb
xor
xor
lds
sbb
mov
sti
sbb
outsl
cmpsw
adc
mov
push
inc
and
xor
nop
inc
inc
out
xchg
rcll
arpl
mov
lahf
pop
lcall
sbb
lds
das
movsb
mov
scas
add
dec
sbb
push
adc
jecxz
inc
jmp
scas
outsb
mov
insl
pop
mov
add
sub
fstpl
pushl
inc
mov
cmp
test
sub
into
xchg
js
pop
mov
bound
mov
gs
sbb
fnstsw
mov
or
sbb
movsb
mov
bound
adc
and
add
mov
inc
add
into
gs
inc
ja
jmp
xor
sub
sbb
shrl
scas
inc
icebp
sbb
sbb
insb
xchg
cmp
aad
sbb
insb
mov
mulb
out
shrb
cs
test
jnp
dec
mov
mov
out
popa
inc
scas
insl
xchg
loope
pop
aad
lods
cmpsb
inc
dec
lock
inc
imul
fstps
mov
xor
testl
cmp
add
pop
sbb
sbbb
out
xchg
gs
push
outsb
inc
cs
aam
cmp
sub
into
add
lods
mov
and
repz
mov
lret
push
add
sub
insl
fwait
sbb
sbb
bound
je
stc
rorb
or
divl
pushf
inc
into
sub
cmpl
inc
mov
xchg
adc
mov
sbbb
je
and
adc
pop
sbb
xor
gs
mov
or
mov
out
lock
sbb
inc
mov
push
and
add
bswap
push
or
jnp
pop
retw
scas
mov
dec
push
stos
test
and
sahf
aas
push
mov
mov
outsb
cmp
dec
mov
and
pop
repz
inc
pushf
jbe
pusha
cmc
jbe
and
add
sbb
dec
mov
xchg
lea
or
xchg
cmpsb
jl
rclb
loope
pop
shr
btr
mov
pop
jecxz
mov
sbb
stos
or
es
xchg
stc
xchg
stos
add
and
roll
std
xor
negl
cmp
sub
insl
or
mov
xlat
fs
or
mov
and
sbb
mov
push
jbe
sbb
andb
data16
and
gs
xchg
ds
loopne
je
scas
ds
outsl
push
sar
jge
mov
outsb
fmuls
cwtl
sti
aaa
idivb
xchg
stos
iret
mov
movsb
lock
cmp
dec
mov
scas
shr
push
fsubrs
test
das
insl
mov
repz
sub
hlt
jg
popf
push
fistpl
xchg
sub
mov
adc
jbe
mov
jl
mov
jno
nop
and
add
imul
push
xor
mov
sbb
and
mov
in
adc
pop
imul
daa
jg
pop
xor
mov
lahf
dec
bound
dec
cs
ss
mov
shlb
ret
push
fimull
xchg
jge
inc
and
add
add
and
pushf
mov
pushf
pushl
ret
inc
sbb
mov
aas
rolb
lret
outsb
icebp
pusha
das
stos
and
xchg
add
mov
shlb
in
jmp
lret
inc
inc
adc
inc
cmp
fsub
or
call
imul
repnz
inc
pop
cmp
mov
daa
add
and
call
rorl
in
stos
das
fsubs
ljmp
inc
lahf
pop
or
insl
dec
test
mov
add
pusha
pushf
dec
mov
push
pushf
push
lea
jne
btr
setp
mov
pushf
bt
movb
call
cmp
pushf
push
pusha
mov
lea
je
clc
push
cmp
movb
lea
je
cmp
push
test
bt
cmp
call
sbb
rol
push
jbe
mov
out
or
mov
xchg
sub
push
leave
rcll
pop
jle
loope
std
scas
shrl
int
popl
dec
pop
in
push
xlat
ds
nop
dec
fmul
out
aaa
ljmp
addr16
shll
cmp
mov
or
mov
mov
mov
push
sub
data16
cmpsl
jg
dec
adc
push
decl
inc
pop
mov
xor
rorb
and
pop
mov
pushl
lea
jmp
lea
jmp
lea
ja
xor
sub
shld
pusha
inc
stc
sub
add
and
sbb
push
clc
mov
clc
sub
mov
pusha
cmc
call
push
call
or
ret
rclb
dec
in
cwtl
imull
mov
push
pop
pop
xorb
fstpt
jns
test
sub
orl
pop
in
test
sbb
mov
fwait
popa
mov
sbb
loop
out
xor
or
mov
fwait
jns
dec
mov
xchg
stos
add
mov
and
push
xchg
mov
pop
pop
and
mov
rcr
mov
push
jbe
push
insl
dec
xlat
xor
mov
jecxz
mov
sbb
jnp
ret
sbb
xchg
in
nop
repz
stc
subb
test
mov
loop
pause
dec
push
mov
outsl
data16
test
leave
and
adc
mov
pop
test
or
mov
or
ljmp
aad
xor
loope
and
rclb
aad
loop
adc
push
pop
mov
out
mov
add
fs
mov
push
fisttpll
mov
pop
in
pop
add
inc
fstl
cwtl
xor
fisttpl
xlat
sub
push
dec
mov
push
jbe
adc
test
push
orl
adc
xor
xchg
dec
mov
mov
daa
add
sbb
lret
fisttpl
enter
ret
pusha
stc
add
xor
fmull
or
imul
jb
mov
into
mov
test
pop
outsl
sub
lods
jne
lods
movsb
fs
and
fs
jle
lods
sub
fstpl
out
mov
fstpl
xor
dec
pop
or
aam
inc
xor
movsb
and
out
inc
fisttpll
adc
sti
cltd
add
push
xchg
clc
shll
cld
cmc
pop
sbb
movsb
push
fiadds
xchg
outsb
adc
pop
ljmp
lahf
jp
mov
ret
push
jbe
sbb
xchg
cltd
xor
xchg
jge
imul
stos
cmp
jg
jbe
pop
add
adcl
stos
jnp
test
pop
iret
inc
sbb
cmp
insb
xchg
sub
aaa
or
cltd
mov
add
xor
jmp
into
and
roll
mov
pop
dec
gs
inc
std
je
mov
jge
xor
sbbl
mov
adc
dec
je
negb
aad
rep
sub
mov
mov
cmp
int3
in
mov
adc
jns
add
test
cmp
or
lea
jno
je
clc
neg
xor
shld
add
not
xchg
sub
jae
sbb
movsbw
shr
shl
mov
or
jmp
push
lock
std
std
xchg
dec
ret
jle
xchg
shr
cs
pushf
mov
pop
or
pop
lock
jge
sbb
xor
inc
push
and
aam
pop
leave
add
loope
sub
fcoms
aaa
popf
xchg
xor
call
divb
mov
aam
cmc
fs
inc
pusha
enter
fiadds
addl
jbe
jb
sarl
jp
nop
sub
aad
shrb
mov
ffree
push
mov
pop
jo
add
dec
add
das
mov
xchg
scas
jne
sbb
xchg
call
adc
imul
inc
in
pop
pop
adc
nop
icebp
fisubl
insl
cs
cmp
pop
and
add
pop
pop
sti
mov
push
sub
jle
clc
mov
dec
mov
loope
out
popa
mov
pushf
nop
loope
ja
sar
std
cmp
or
faddl
sub
add
iret
loop
cmp
inc
int
mov
scas
mov
mov
jbe
cmp
lods
insl
lahf
inc
movsl
push
pop
js
ljmp
test
les
or
ljmp
les
xchg
jl
xchg
in
rorb
mov
push
push
mov
mov
cwtl
xchg
cmp
sub
in
aaa
xchg
push
and
test
fildll
dec
fdivl
les
cmc
call
call
mov
jbe
leave
inc
shufps
push
in
jo
mov
xchg
xchg
adc
into
xchg
sbbl
sbb
xor
icebp
or
cmp
sub
shl
xlat
js
mov
dec
loope
dec
adc
xor
and
xorb
sahf
and
push
aad
stos
outsb
adc
aaa
aaa
push
leave
hlt
lahf
inc
punpckhbw
xchg
add
dec
fildll
mov
jno
fstps
pushl
push
into
push
jbe
xchg
xlat
inc
in
xor
lea
xchg
pop
in
inc
cmp
xchg
shlb
cmc
into
mov
rcrb
fsubp
imul
mov
imul
mov
jns
pop
adc
fnstcw
jns
push
xchg
pop
sbb
dec
lahf
lods
xchg
pushf
or
adc
mov
xor
icebp
stos
in
xor
test
ret
rorl
adc
aas
popa
sbb
push
inc
and
not
movl
pop
lea
lea
jno
push
pusha
pushl
popl
pusha
pushf
push
pushl
pushl
ret
pusha
inc
mov
inc
pusha
sub
xchg
cmc
xchg
rol
mov
ror
rcr
mov
clc
test
stc
xchg
jmp
sti
adc
push
jbe
mov
insb
jecxz
or
xor
jle
iret
xchg
adc
insb
or
test
fisubl
add
mov
jg
dec
mov
adc
stos
xchg
add
mov
ficoms
adc
and
mov
test
cmp
add
fcoms
sbb
stos
mov
insl
adc
inc
ror
xchg
jbe
pop
sub
cmc
pushf
push
sub
jge
sti
pop
cmp
dec
aam
stos
sbb
ljmp
pop
mov
pusha
stc
mov
clc
repnz
push
pushf
call
pusha
adc
pusha
lea
jae
call
mov
push
mov
push
lea
ja
pusha
pushf
lea
jb
push
cmpb
pushl
pushf
jmp
adc
lods
push
jbe
and
pop
adc
aam
pop
icebp
xchg
sbb
dec
int
fdivp
lea
fnstenv
add
popf
cmp
sub
in
aad
imul
cwtl
cld
and
cmp
iret
inc
bound
fbstp
xor
into
jge
lea
mov
enter
and
stos
cmc
mov
mov
mov
movsb
dec
ficoml
inc
push
adc
pop
fs
leave
push
jbe
fiadds
mov
repz
mov
jle
cmp
sbb
fadds
test
pop
fidivrl
mov
jecxz
fsubrl
and
lret
pop
fsts
and
and
notb
inc
es
lea
lods
cltd
stos
ja
xchg
fstp
mov
xchg
pop
mov
scas
jne
popa
popa
or
adc
fidivrs
in
jp
andb
dec
aad
jle
cs
mov
fistps
inc
fcmovb
sub
xchg
sbb
sbb
imul
outsl
int3
sbb
xchg
scas
pop
dec
mov
repz
xchg
mov
xlat
out
pop
test
inc
dec
inc
adc
sub
int3
data16
mov
in
test
xchg
js
mov
cld
jae
inc
sbb
dec
and
aas
lcall
loope
xor
sbb
jmp
bound
test
xchg
push
leave
push
jbe
cli
leave
inc
lret
mov
loopne
and
cmpl
inc
sbb
cmp
loope
xor
pusha
pop
aam
ffree
je
pop
inc
adc
adc
jecxz
scas
mov
mov
cwtl
adc
repz
divl
cltd
sbb
lds
push
leave
jle
inc
pop
pop
pop
loopne
into
imul
mov
loope
das
out
pop
repnz
leave
push
jbe
inc
icebp
insb
out
xchg
mov
aad
imul
mov
mov
lock
in
pop
xchg
sub
loope
rol
and
gs
mov
outsl
jnp
cmp
mov
xchg
stos
leave
sbb
sub
or
adc
stos
imul
aaa
mov
mov
imul
js
std
mov
pop
notl
stos
add
and
pop
xor
hlt
or
mov
sbbb
or
test
ret
sbb
dec
pop
pushf
test
mov
jp
add
jbe
in
dec
leave
movsb
push
ret
out
data16
test
stc
mov
mov
out
pop
jne
or
test
repnz
push
inc
sub
jg
stc
inc
hlt
movsb
mov
rcrb
vminpd
vpmaxsb
dec
mov
data16
icebp
dec
pushf
adc
pop
push
xor
jb
and
push
fwait
cmp
mov
sbb
push
xlat
mov
in
inc
jl
fsubs
daa
in
push
jbe
adc
je
sahf
adc
xor
fnstsw
cmp
xchg
add
cmpsb
aam
xchg
lock
xchg
daa
clc
add
push
aas
ret
sbb
jecxz
sti
jo
out
push
jb
shlb
inc
jo
sahf
mov
call
jne
add
xlat
lea
cltd
mulb
xor
xor
sub
pop
dec
and
les
xrelease
sbb
nop
xor
lock
scas
cmp
test
fs
jne
pushf
movw
pushf
pushf
mov
pusha
mov
pushf
call
out
movl
popf
sbb
jp
test
lcall
or
mov
mov
popa
cmp
jp
pop
push
cltd
xchg
loopne
test
mov
xchg
mov
sbb
xchg
pop
movsb
adc
xchg
lret
mov
cwtl
pop
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
lods
int3
push
jbe
pop
jmp
loopne
push
mov
mov
cmp
jle
outsb
jmp
mov
push
stc
pop
adc
inc
aad
pop
out
mov
inc
xchg
sbb
jl
es
cld
popf
sbb
xchg
stc
sub
cmp
adc
dec
mov
leave
lahf
mov
cmpsb
mov
or
stos
mov
aam
mov
je
in
nop
add
loope
inc
xor
lods
mov
or
sub
js
mulb
sbb
and
mov
adc
jno
jnp
cmpb
call
jmp
pushf
mov
cmp
lea
pushf
pushl
ret
sub
mov
cmp
cmpsb
pop
or
ds
in
dec
xor
loope
lcall
loop
cltd
rcl
loope
in
push
inc
mov
xlat
scas
adc
mov
sub
imul
mov
jle
pop
mov
fdivrs
lods
push
mov
outsb
repz
inc
int
repnz
mov
add
dec
daa
jecxz
push
shrb
and
or
bound
xchg
icebp
mov
xlat
mov
push
sbb
imul
lcall
cmc
pusha
pusha
jmp
jmp
mov
jbe
mov
mov
and
adc
or
mov
xor
mov
divb
pop
add
push
xor
fcmovnb
jge
cli
pop
mov
jp
int3
sbb
jne
insb
int
pop
xchg
add
lret
loop
cmp
int
mov
fcmovbe
es
in
lret
cli
leave
inc
cltd
icebp
loope
sub
popf
ljmp
xor
adcb
mov
pop
cmc
ss
xchg
sbb
orl
into
addb
hlt
jge
mov
into
push
jbe
inc
rcrb
insl
xor
arpl
mov
xchg
jb
out
in
js
pop
jno
sbb
sbb
in
cmpsb
jge
xchg
xor
and
cmp
cmp
es
xchg
inc
repz
pop
xchg
adc
fdivrs
stos
jl
mov
mov
adc
pop
inc
in
stc
inc
cs
jno
bound
or
jne
cmp
sbb
mov
push
ficompl
or
popa
inc
add
lcall
pushl
xchg
push
push
ss
lret
mov
sub
jbe
lods
sbbb
and
pushl
sub
pusha
pushf
jmp
mov
pushf
bswap
movsbw
lahf
mov
pushl
not
movsbw
jmp
sti
divl
push
cmp
ret
xlat
dec
adc
pusha
filds
dec
fnsave
push
inc
out
xor
pop
push
push
pop
loope
mov
push
jmp
cmp
js
add
xor
sub
mov
int
push
or
adc
mov
inc
pushf
fidivrs
repz
popa
das
add
ret
ljmp
jbe
cmpsl
push
xchg
jb
mov
adcl
push
fcompl
xor
sub
loopne
push
hlt
iret
push
jbe
mov
movsl
or
out
push
rep
inc
sarb
push
jnp
mov
mov
aaa
mov
jmp
mov
mov
xor
xchg
inc
imul
insb
push
scas
mov
cwtl
pop
push
iret
sub
add
mov
mov
jb
mov
mov
mov
pusha
das
xchg
dec
movsl
dec
in
cmpsb
add
rcll
cmpsl
imul
loop
sarb
into
jno
push
lock
jecxz
and
jbe
jmp
cli
mov
stos
inc
es
xor
gs
push
jbe
mov
mov
les
xchg
inc
aam
jle
jl
mov
loop
rol
imul
mov
sahf
fsubp
inc
mov
mov
js
pop
and
inc
and
rcll
fistps
ret
jg
adc
jb
loopne
push
xlat
movsb
pop
push
sbb
aas
in
movsl
or
and
cli
xchg
jo
jle
enter
cmp
adcb
cmp
in
gs
xlat
xchg
lret
rclb
xchg
jmp
or
mov
sub
cli
incb
mov
mov
mov
js
repnz
ss
cs
and
test
arpl
stos
gs
aam
jnp
data16
outsb
mov
les
lods
int3
pop
decb
push
out
and
add
mov
xor
fwait
adc
mov
mov
xchg
ror
call
out
mov
push
lea
call
jmp
push
push
adc
push
jbe
popf
and
ss
ffreep
sbb
fstps
lock
imul
fs
xor
sti
arpl
jb
sub
out
lock
mov
fnstenv
ficoms
jns
or
xlat
bound
xor
push
xor
sub
mov
fimuls
int3
xor
push
insb
mov
test
mov
in
sahf
jns
repz
jmp
ret
push
jbe
lods
insb
push
ret
xlat
xchg
push
xchg
addb
mov
cmp
mov
ljmp
cmp
enter
inc
jmp
push
fwait
push
adc
mov
jae
lcall
ds
pop
mov
mov
jb
rolb
scas
sub
push
dec
jbe
xchg
dec
sbb
mov
cld
pushf
loope
pop
shlb
and
clc
pop
mov
cmova
iret
mov
xor
mov
lods
xchg
xchg
lods
push
adc
and
push
jmp
outsl
call
add
sub
aam
cmp
mov
ret
rcll
dec
mov
xlat
cmpsb
mov
push
and
push
subb
sbb
mov
std
push
inc
into
sub
lahf
dec
mov
iret
loopne
jo
insl
inc
pop
jp
f2xm1
push
push
push
jmp
mov
icebp
mov
outsb
xor
dec
jmp
add
mov
fcoms
add
cmpsl
push
mov
sbb
inc
sbb
shrb
insb
dec
shlb
movsl
pop
idivl
mov
push
push
shll
rcll
mov
test
cmp
pop
or
test
test
jl
shlb
sub
pushf
cmp
stos
ss
mov
jp
adc
leave
insb
imul
int3
jne
fs
or
or
stos
aad
jae
sbb
out
movsl
js
movsl
xchg
lock
nop
xchg
xor
pop
imul
rcll
jg
lret
sub
dec
jb
out
jno
fwait
adcb
pop
xchg
jo
xor
jbe
sbb
cld
pop
out
mov
mov
cltd
sbb
dec
pop
jl
mov
xor
movsb
lea
enter
jbe
and
jb
les
inc
loope
inc
jno
add
mov
push
add
iret
or
cmp
js
mov
test
iret
xchg
xor
rep
je
sbb
pop
jno
inc
loop
in
repnz
mov
adc
les
xchg
imul
push
adc
jmp
sub
mov
fbstp
cwtl
cwtl
test
repnz
pushf
lea
jne
movzbw
mov
seto
movb
pusha
lea
push
pushf
mov
not
jmp
pop
movzbw
movsbw
pop
bswap
pop
call
jmp
lea
ja
lahf
dec
test
hlt
mov
mov
push
lret
jbe
fmuls
or
inc
sbb
push
fs
sub
addr16
mov
cld
jo
mov
adc
mov
f2xm1
mov
jbe
sahf
dec
inc
test
cwtl
repnz
les
add
cmpb
dec
out
int
das
test
in
and
ret
sbb
add
daa
xchg
push
popa
xor
lcall
mov
pop
or
lock
dec
out
inc
ret
cmp
and
loopne
mov
push
scas
outsl
aad
jbe
sbb
jg
test
cmp
mov
or
sub
add
inc
mov
lahf
js
in
dec
or
push
xor
xchg
xor
mov
mov
in
lods
push
loopne
outsl
rolb
daa
push
add
inc
faddl
inc
xchg
imul
xchg
test
aaa
lock
jge
out
push
insl
out
sbb
mov
jl
gs
xor
imul
jl
adc
xor
sbb
bound
gs
test
addr16
lcall
scas
push
aam
push
jbe
push
inc
in
or
jl
stos
pop
rclb
subl
jecxz
xchg
jne
cwtl
adc
pop
movsl
loope
jle
xchg
mov
ss
fsubr
adc
daa
push
lahf
outsl
call
shl
test
mov
inc
inc
sbb
mov
icebp
bound
movsb
in
cmp
cwtl
push
mov
test
mov
out
clc
jno
movl
stos
mov
rorb
push
jbe
aam
adc
cld
sub
inc
shrl
xchg
pushf
and
sub
movb
jns
sbb
loop
and
mov
mov
insl
ret
cmp
int
pop
leave
and
ret
and
rolb
sbb
mov
ljmp
xchg
or
mov
and
xchg
jnp
jno
mov
stc
dec
sbb
inc
out
loopne
call
and
fcom
push
jbe
pop
mov
xchg
push
xorl
jb
inc
sbb
arpl
mov
adc
push
in
add
out
jg
cs
push
lods
inc
sahf
leave
push
scas
ret
sbb
inc
subb
add
lcall
jno
ja
adc
dec
gs
lret
insl
xor
mov
sbbl
add
adcl
fsts
mov
fnstcw
test
ja
int3
sub
pop
fimuls
jbe
outsb
std
enter
sub
pop
and
cmp
pop
mov
pop
jge
fidivrs
jecxz
out
mov
fsubrl
mov
push
mov
pop
imul
pop
xchg
adc
push
sub
jl
add
ja
jb
cmp
cmp
int
pop
adc
sub
int
mov
or
mov
mov
xchg
inc
and
ficoml
push
pushf
bound
push
jl
stos
sub
sbb
inc
lds
lods
jne
adc
fwait
xor
pop
clc
xchg
in
leave
movsb
arpl
push
jbe
nop
pop
shlb
fistpll
icebp
xchg
sti
stos
gs
xor
pop
in
mov
xchg
inc
int3
test
fcoml
mov
into
cmp
icebp
mov
addl
jge
inc
scas
sub
mull
call
fistl
pop
and
inc
arpl
cmp
mov
in
lahf
loop
dec
enter
cld
mov
loopne
sarb
pop
dec
add
aam
mov
nop
aas
cli
mov
stc
fiadds
lea
mov
xchg
orl
add
inc
js
jb
arpl
outsl
outsb
inc
js
add
clc
mov
push
jbe
dec
sbb
mov
mov
iret
mov
adc
pop
lcall
out
shrl
test
movsb
or
ret
push
lea
mull
icebp
int3
pop
xor
loope
xor
jge
ljmp
sub
lds
sbb
int
aas
pop
mov
es
jmp
mov
movsb
jns
mov
insl
sbb
icebp
andl
xchg
jo
fistpll
mov
cltd
push
cmp
cld
push
data16
or
outsb
aaa
mov
mov
add
in
mov
dec
add
lcall
or
jl
outsb
aad
cmpps
aad
out
push
fwait
std
jl
fsts
outsl
cwtl
jg
hlt
rcr
mov
mov
xchg
inc
pop
mov
xchg
icebp
push
movsl
in
lods
daa
ret
pop
or
push
pop
roll
scas
push
jp
fadds
call
and
arpl
in
mov
mov
jo
in
out
leave
push
dec
mov
xchg
mov
es
and
add
sbb
xor
xchg
sbb
insb
sub
push
jbe
lahf
inc
icebp
nop
pop
and
mov
xor
push
repz
adc
dec
pop
fwait
loope
mov
cwtl
test
and
cmp
jbe
mov
ljmp
jae
scas
pop
test
add
rorb
and
pop
or
mov
ret
lret
cmp
push
add
mov
inc
inc
ja
adcb
jns
pushl
pushf
adc
movw
pushl
ret
rorl
das
cli
popf
cmp
push
aam
into
orl
addr16
adc
insb
jb
adc
cwtl
daa
mov
int
je
mov
ljmp
jecxz
test
mov
outsb
mov
in
adc
jecxz
testl
pop
mov
cs
mov
aaa
xor
loope
adcl
xor
inc
cltd
sbb
and
xchg
jno
mov
push
lret
fcmovb
mov
adc
mov
pop
push
push
loope
pop
mov
xchg
fdivrl
je
paddusb
repnz
and
ret
fidivl
sbb
push
imul
incl
test
loope
adc
repnz
push
cmpsl
mov
nop
loopne
lods
or
cmpsl
mov
nop
repz
inc
stos
xchg
adc
mov
cmpsb
inc
imul
dec
enter
lret
sti
movsb
ret
push
movl
call
lret
fistl
mov
iret
jp
mov
sub
add
and
mov
mov
jmp
fs
shr
mov
sub
nop
or
sbb
bound
fstpt
push
out
add
jae
incb
aam
xor
rcrb
stos
mov
dec
cmpsb
xchg
adc
inc
movsb
les
cli
and
cmp
rorl
cs
dec
dec
add
pop
fnstsw
mov
fistpll
mov
mov
leave
andb
lods
or
inc
fstl
daa
push
popf
adc
mov
add
xor
pop
cli
xchg
fs
mov
sbb
cmp
ds
dec
sarb
xchg
lcall
mov
xchg
cmp
out
xchg
push
outsl
ja
scas
lds
sub
mov
and
push
jmp
cmp
call
dec
mov
mov
mov
or
test
cmpb
pushf
pop
in
in
fcoml
mov
hlt
pop
push
test
mov
fisubrl
inc
sub
mov
jo
pop
aaa
adc
test
push
in
repz
add
popa
pop
mov
xor
jle
push
or
pop
stos
mov
jle
or
out
push
jns
push
leave
mov
jmp
into
xor
mov
rolb
mov
and
xor
xor
adc
rcr
mov
or
push
rcll
or
roll
xlat
push
icebp
outsb
pushl
jnp
push
add
dec
dec
stos
xchg
push
jbe
jecxz
push
inc
fwait
xchg
test
push
loopne
lock
int
iret
fs
fs
sahf
scas
adc
in
inc
xchg
dec
sub
push
or
jmp
fwait
push
push
push
mov
pop
mov
jo
sahf
movsl
push
push
fidivrs
loope
sub
enter
sti
stos
dec
hlt
xchg
jbe
nop
and
jg
loope
clc
pop
add
pop
or
adc
fstl
in
fldcw
pop
add
inc
fsubrl
les
call
xchg
push
mov
push
or
lods
and
out
pop
sahf
mov
rcll
jg
add
inc
mov
inc
pop
mov
pop
xor
outsb
ret
push
cld
jne
or
insl
xchg
cmp
jecxz
and
mov
jmp
adc
cmc
ljmp
mov
sub
rorl
jo
arpl
xchg
sbb
mov
pop
or
in
inc
mov
loope
pop
outsl
xchg
push
sbbl
xor
pusha
mov
lea
jae
pusha
pushf
call
iret
int3
mov
push
jbe
out
aad
add
cltd
pop
mov
mov
mov
adc
mov
icebp
xchg
repnz
push
sti
inc
repnz
into
push
mov
fstpl
jg
fs
and
lods
dec
sarb
or
out
jmp
dec
push
xchg
xor
add
xchg
fistpl
mov
jmp
or
inc
aas
sbb
push
imul
leavew
dec
lahf
pop
cmp
cmp
pusha
out
xchg
fcoms
cmpsl
inc
mov
bound
bound
test
rorb
data16
testl
notl
xchg
jmp
sarl
adc
sbbb
and
outsl
push
mov
add
pop
mov
pop
dec
daa
enter
sbb
imul
out
inc
jg
xor
jae
ja
imul
and
xchg
mov
sub
pop
push
sti
divl
ss
xor
sahf
jno
add
adc
xor
jle
xor
es
and
cmpsb
dec
in
test
sub
sub
mov
out
push
sarb
cli
xor
mov
cmp
push
je
xchg
jp
xlat
jo
or
fwait
jecxz
hlt
and
imul
js
jl
mov
jg
mov
cmp
push
mov
sub
sbb
push
jbe
call
mov
mov
in
shrl
imul
xchg
xor
pop
shlb
aaa
pop
je
lods
jo
das
scas
xor
scas
fs
dec
test
jg
movsl
nop
and
insb
test
add
movsb
mov
xchg
sbb
jg
or
mov
cmp
mov
sbb
xorb
lahf
cmp
push
jb
pop
cmp
xchg
and
out
mov
call
xor
sbb
xchg
xchg
sahf
sbb
and
jl
pusha
lea
je
jmp
pusha
pusha
call
or
cmpsb
loopne
jbe
dec
pop
mov
and
dec
std
enter
imul
mov
adc
test
sbb
push
subl
xchg
ja
xor
jnp
popa
push
xchg
mov
adc
nop
cmp
stos
sub
add
cmpsb
cmp
test
sbb
out
sbb
loop
jbe
mov
test
lret
inc
mov
push
mov
inc
pop
jecxz
loope
push
daa
shrb
or
adc
sbb
xchg
mul
jb
mov
xchg
pop
repnz
xor
lcall
mov
pop
sub
sbb
test
imul
insl
inc
xchg
call
or
test
mov
repz
daa
aam
out
fisttpl
outsb
inc
loopne
sub
cmp
in
cmp
adc
stos
loope
jbe
sub
mov
fidivl
sbbb
xor
outsl
mov
pop
sbb
orl
fnstsw
into
in
adc
pop
xchg
xchg
mov
xor
das
push
scas
dec
xchg
lret
fs
inc
mov
and
test
iret
mov
and
ret
inc
in
mov
mov
mov
incb
sbb
enter
mov
not
pushf
dec
pushf
inc
pushl
setp
mov
movb
pusha
lea
call
call
mov
vandnps
sbb
jp
insb
pop
mov
pop
aad
in
xchg
jle
repz
ja
mov
ss
out
pop
push
leave
jg
int3
shr
xor
sahf
cmp
sub
inc
pop
add
ret
jns
pop
out
push
mov
push
ljmp
jno
fsubr
mov
jne
or
xor
adc
inc
mov
or
repz
mov
xchg
add
mov
sub
mov
aas
pop
mov
mov
iret
bsr
mov
cmc
sbb
adc
cmp
add
not
rol
mov
call
call
movb
movb
lea
jne
jmp
pushf
movl
mov
call
movl
pushf
pushf
movl
pusha
push
lea
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
mov
jbe
and
stc
push
pop
fisubl
mov
or
xchg
lahf
fwait
adc
jns
mov
in
mov
pop
call
and
imul
shlb
jmp
movsb
jg
cmpsl
pop
mov
sarl
insb
xorl
xchg
pop
or
enter
xchg
icebp
add
in
les
cmp
jne
and
xchg
sub
xor
xor
mov
fidivrs
mov
adcb
test
mov
jno
xchg
lea
jg
push
call
imul
clc
jmp
jo
hlt
in
jbe
mov
out
or
jmp
sbb
jle
ljmp
jmp
stc
ljmp
pop
leave
adc
sbb
and
push
push
adc
lahf
cltd
int
or
inc
test
jle
ror
mov
lods
xchg
adc
mov
inc
inc
add
movsl
jnp
pop
xor
in
jne
xchg
pop
and
push
sub
push
das
shrb
movb
pushl
popl
mov
pushf
pushl
ret
add
mov
xor
test
popa
add
sarl
sub
addr16
xor
stc
fsub
lods
insl
stc
mov
adc
sub
pusha
je
adc
push
sub
mov
data16
xchg
fs
inc
pop
xor
lea
add
fwait
push
cli
xor
inc
lret
xor
sub
push
dec
push
or
push
dec
mov
orb
jl
lret
leave
ds
jl
push
lahf
or
and
dec
mov
leave
sbbb
mov
add
jge
and
push
jbe
test
fidivrl
les
adc
dec
fbld
mov
inc
push
sub
cmp
pop
adc
mov
mov
mov
jns
lcall
sbb
jne
mov
jo
imul
dec
lods
push
xchg
std
xchg
jbe
sub
push
outsb
pop
jbe
lea
dec
or
outsb
xor
out
inc
inc
gs
xchg
add
addr16
jb
popa
je
dec
gs
js
add
rorb
push
jmp
xchg
movsbl
push
call
pop
fcompl
push
out
sahf
sbb
lcall
scas
mov
jecxz
fwait
rorl
push
and
inc
loop
jb
jns
xchg
int3
push
inc
stc
out
push
pop
in
outsl
inc
das
scas
out
sahf
nop
repnz
xchg
nop
pop
mov
daa
sbb
pusha
je
xchg
push
mov
arpl
fimuls
mov
insl
xchg
and
out
jbe
jns
mov
mov
rcrb
popf
add
cmpl
push
es
inc
clc
lods
roll
clc
gs
fs
ljmp
ret
sbb
loope
lahf
inc
movl
shrl
jb
loope
mov
repnz
mov
push
mov
xchg
pop
adc
inc
repnz
inc
fisttpll
fiadds
xchg
ds
xor
fcomps
cli
out
jbe
insl
lock
push
mov
scas
jbe
in
test
cmp
rcrb
pop
fdivrl
je
movsb
enter
push
aad
das
mov
mov
cltd
movsl
sahf
push
sbb
mov
out
scas
sub
sub
and
mov
xchg
mov
fmuls
pushf
mov
or
xlat
sahf
aaa
dec
mov
popa
lcall
push
cmp
push
daa
inc
sub
mov
sti
lcall
imul
push
add
pushl
lea
jmp
dec
call
inc
ror
ror
setns
shl
shl
jmp
and
movsl
call
scas
jle
push
mov
xor
push
in
pop
adc
ror
fists
or
mov
push
cmp
jno
pop
and
scas
gs
cmp
int
mov
jns
je
xchg
mov
rcrb
jmp
mov
xlat
xor
or
mov
pop
and
push
fistps
adc
ret
mov
cmp
bound
aam
xchg
push
dec
rolb
out
test
fcoms
gs
or
lret
xchg
divb
jl
outsb
addr16
cltd
sbb
push
mov
cmp
sub
sbbb
sar
cmp
jb
fdivrl
cmpsb
shrb
and
in
or
inc
nop
addr16
aaa
movl
test
cmp
stos
inc
xchg
scas
and
stos
ret
pop
cmp
lock
xchg
pusha
std
mov
idivl
jg
xchg
and
inc
scas
push
push
pminsw
repnz
je
lcall
mov
in
pop
pop
mov
enter
xchg
repz
add
and
lea
imul
push
sti
lods
nop
ljmp
inc
repnz
gs
push
addr16
imul
repz
cmp
fistl
stos
adc
mov
sar
popf
mov
repnz
push
std
pop
lods
xchg
xchg
or
inc
std
mov
and
mov
movsb
arpl
sbb
std
psadbw
pusha
add
mov
and
test
mov
inc
ljmp
andb
push
imul
xchg
outsb
pop
fs
xchg
inc
sub
inc
cltd
dec
test
scas
loop
dec
loopne
cmpsb
sahf
add
ljmp
adc
and
fiadds
insl
jo
or
add
cltd
or
adc
imul
and
pop
cmp
push
pop
xor
sub
sbb
sahf
cltd
jne
adc
push
jbe
ficoms
mov
inc
adc
jae
pop
mov
lea
push
rclb
push
popf
data16
add
or
fdivr
pop
aad
in
add
xchg
dec
mov
hlt
dec
mov
mov
jge
inc
jne
sahf
je
into
sbbl
jecxz
inc
aaa
cmpsb
add
in
cmp
cli
loope
adc
jl
and
test
out
aad
add
mov
mov
sbb
int3
sbbb
mov
adc
fistpl
das
ljmp
cmp
cmp
and
xchg
popf
pop
stc
aam
int3
imul
cmpsl
cmp
insb
mov
or
mov
pop
in
mov
ret
shrb
inc
mov
in
pusha
pop
insb
clc
outsl
shl
iret
mov
aas
fisttpl
mov
ficoms
cmp
xchg
test
jg
mov
dec
cltd
push
xor
clc
insl
nop
xor
mov
mov
mov
jae
cmp
lods
add
insb
adc
fidivs
cmp
lret
incb
in
push
jbe
mov
and
and
pop
sbb
movsl
sbbl
in
call
fisubrl
in
ja
test
aaa
getsec
shrb
out
cmp
lock
out
inc
mov
push
mulb
mov
sub
fistl
xchg
loop
mov
jmp
inc
insl
imul
shrl
testl
mov
or
jmp
ss
mov
xchg
test
push
jbe
lods
inc
sbb
loope
inc
bnd
rcrb
push
jo
mov
add
sbb
jae
mov
ds
jmp
mov
lds
test
sbbl
out
sub
scas
inc
pop
test
mov
adc
add
mov
sub
aaa
mov
ss
cltd
mov
jns
mov
mov
mov
inc
rcll
add
cli
push
xor
xchg
mov
pushf
push
jmp
addr16
shlb
push
jbe
push
popf
dec
mov
int
idivl
lods
addr16
fisttps
in
test
lods
nop
or
push
mov
loope
aas
std
xchg
jl
popf
add
jmp
shl
je
push
jns
stc
iret
leave
popf
add
adc
ret
pop
mov
cld
fadd
mov
mov
dec
sub
add
inc
and
daa
les
add
ret
xchg
movsl
cs
and
lea
je
pusha
push
lea
jmp
insb
imul
lds
scas
lds
xchg
pop
cmp
xor
pop
mov
add
add
adc
and
in
fiadds
jbe
out
pusha
fadds
pop
imul
inc
ffreep
pop
addr16
repnz
repnz
inc
and
movsl
sub
xor
jnp
scas
in
mov
push
mov
incb
data16
mov
idivb
into
inc
shlb
roll
lods
lret
inc
jle
testb
call
jbe
inc
or
jbe
rolb
jmp
mov
movsl
and
cmc
enter
hlt
and
fisttps
pop
ja
push
out
push
sub
test
jae
idivl
lret
lock
mov
cmp
cmc
mov
cmpsb
and
sbb
es
sbb
jbe
mov
xchg
or
push
lret
lock
cmp
push
push
dec
dec
dec
cs
push
push
add
movsb
xor
pusha
lea
jmp
test
loopne
sub
nop
dec
ljmp
and
popf
insb
fucomi
or
cmpsb
test
push
sub
pusha
add
pushf
jne
icebp
sbb
push
lahf
fstl
push
aaa
xlat
popf
adc
pusha
aas
xchg
cltd
fs
or
lea
inc
imul
and
push
insb
sub
sub
sub
clc
jmp
out
shll
cmp
sub
xchg
aas
sarl
mov
cltd
mov
es
decl
divl
cmp
je
add
int
loope
add
ja
icebp
xchg
dec
call
mov
sub
pushl
sub
lea
jne
pusha
lea
call
jmp
cwtl
jne
lock
jbe
scas
pop
adc
stos
inc
int3
imul
or
lahf
push
ds
mov
mov
outsl
add
cmp
lret
int3
scas
adc
popf
push
outsb
aad
sub
or
outsb
daa
push
aam
fimull
pop
stos
inc
push
lods
movsl
push
inc
popf
xchg
and
das
fdivrs
outsl
daa
sahf
cmp
or
dec
aas
inc
lcall
inc
mov
or
adc
mov
sahf
push
shrb
xor
iret
movb
push
call
lea
call
jmp
push
adc
lock
jbe
push
frstor
or
arpl
jno
fistpll
fcompl
orl
add
pop
outsl
pop
outsb
or
xchg
dec
enter
add
lret
jns
push
in
xchg
pop
cmc
movsl
lds
inc
or
pusha
ja
sub
push
sbb
pop
cmp
enter
cmpsb
ret
sahf
test
into
arpl
mov
fsubs
movl
ds
not
pop
push
pusha
pushl
ret
lret
ret
xor
jbe
repnz
gs
adc
inc
stc
pop
push
pop
pop
xor
xor
int3
or
rcrl
cmc
ret
jbe,pt
push
andl
icebp
push
jle
addr16
fwait
loopne
inc
adc
daa
push
leave
mov
sarl
out
dec
int3
sub
fisttpll
test
aam
es
rcrl
iret
xchg
imul
repnz
push
movsl
cs
mov
addl
jle
dec
call
mov
repnz
jbe
roll
mov
pop
imul
daa
mov
pmullw
scas
cltd
test
xchg
add
sar
arpl
push
iret
pushf
xchg
out
jge
adc
mov
dec
inc
div
inc
movsb
push
jmp
mov
push
xor
push
dec
adc
jge
pop
pop
mov
xchg
dec
lds
lcall
mov
mov
dec
out
das
ljmp
mov
int3
jmp
cmpsl
cld
cld
shr
jmp
lea
jae
mov
inc
not
call
or
out
push
jbe
sbbl
lret
out
int
fstps
add
cwtl
inc
test
ja
pop
int3
insl
mov
pop
sbbb
push
lcall
push
insl
mov
jne
jecxz
push
cld
outsl
out
sbb
cwtl
loop
adc
aas
mov
in
les
scas
cld
add
outsl
in
push
iret
test
lret
mov
addr16
add
pop
lret
inc
repz
jbe
add
xorl
mov
or
test
mov
scas
mov
out
aam
mov
mov
sub
mov
push
in
xchg
mov
dec
xchg
push
mov
pop
imul
movsb
lods
sbb
mov
mov
or
arpl
shlb
aam
rcr
jg
arpl
mov
and
jb
nop
gs
pop
lahf
test
dec
dec
dec
scas
mov
push
jbe
out
in
nop
or
mov
fistl
or
pusha
fldcw
jmp
mov
and
stos
push
xor
movsb
or
imul
mov
add
flds
add
and
xchg
mov
xor
fmul
int
sbb
leave
into
addl
test
loop
inc
fistpl
mov
stc
xchg
sbb
pop
inc
lcall
mov
lods
push
xlat
push
loopne
ficomps
insb
fbstp
cld
jg
div
mov
mov
aaa
xchg
lret
imul
jge
repz
jge
daa
out
jg
fwait
les
xlat
scas
cmp
pop
aaa
dec
loop
mov
xor
sub
xor
xor
or
mov
ret
ja
test
dec
add
pop
push
push
call
scas
inc
pop
test
arpl
popf
mov
push
stos
pop
inc
loopne
inc
lds
mov
into
jnp
in
lods
jge
adc
lock
lea
mov
loop
sub
ret
pop
cs
adc
out
pop
inc
lret
pop
pop
dec
gs
pop
or
cmp
ds
dec
push
mov
cli
movsl
pop
popa
sub
sbb
cmp
push
xchg
mulb
mov
mov
jmp
ljmp
inc
idivb
inc
sbb
das
inc
ret
mov
cmc
in
lock
fmuls
or
fs
mov
mov
mov
jbe
sub
sbb
pop
iret
inc
adc
push
fisubl
adc
mov
push
rcr
push
enter
mov
std
jp
addr16
mov
fs
loop
or
jge
fldt
arpl
pop
insb
xor
and
pushf
pop
rclb
ds
gs
loopne
xchg
cmp
cmp
aaa
or
jbe
sbb
fstl
sub
in
iret
mov
adc
or
outsb
jecxz
icebp
mov
cld
idivb
idivl
cmc
mov
push
jbe
call
pop
out
cmp
jbe
mov
mov
push
in
jge
inc
and
pop
je
sub
jmp
scas
hlt
push
arpl
mov
test
je
and
out
in
pop
xchg
call
jno
int3
nop
out
psubsb
sub
jnp
test
iret
sbb
jno
das
inc
mov
test
enter
arpl
imul
jge
jmp
and
pushf
mov
sub
cmc
add
call
pushf
call
paddsb
pusha
fldt
insl
sub
test
push
inc
xchg
fcmove
fidivl
ret
xlat
add
pop
fists
xchg
mov
inc
and
fsub
mull
mov
xchg
xchg
pop
inc
xchg
loop
xchg
lahf
add
insb
das
ficoml
push
lods
cmpsw
mov
jno
cs
inc
cmpsl
lods
addr16
test
popa
cmp
mov
xchg
imul
lahf
xor
lahf
cmp
imulb
xchg
cmp
dec
mov
or
and
jecxz
xchg
das
mov
mov
movsl
notb
mov
filds
mov
imul
mov
push
pop
sahf
inc
mov
call
sti
cld
mov
sub
out
js
or
iret
arpl
imul
sub
jle
movsl
xchg
mov
jecxz
movsl
pop
jb
xlat
sub
xlat
out
push
lea
mov
mov
xor
lret
aam
or
push
in
rcrl
jns
cmpsl
mov
or
or
jl
xchg
sub
popf
outsb
out
call
test
sub
scas
pushf
call
push
or
sub
push
in
out
pop
sub
idivb
push
cmp
lea
daa
ljmp
inc
add
insl
mov
in
rcrl
int3
cmp
and
lds
push
mov
mov
pop
fbstp
ljmp
popf
int
and
fistpll
cltd
ljmp
lea
ret
sbb
repz
push
jno
icebp
mov
pop
lock
sti
cwtl
adc
ja
insl
mov
push
sub
jg
jmp
push
repnz
add
sbb
into
jne
stos
or
pop
or
pop
push
leave
and
testl
nop
mov
sub
push
pop
jecxz
in
and
inc
cmp
sbb
sub
add
sub
imul
dec
cmpsl
jbe
shlb
add
rol
push
mov
clc
test
dec
enter
xchg
mov
mov
clc
push
jbe
xchg
or
mov
pop
incb
jo
xor
imul
movl
dec
aad
loope
mov
adc
fs
xor
out
sub
cmp
bswap
sets
lea
movsbw
lea
movzbl
jmp
mov
outsl
mov
test
test
notl
scas
stc
or
vpshaw
fistl
addr16
pop
or
pop
sub
and
movsb
pop
imul
xor
and
hlt
cmpsb
or
call
in
test
pop
test
or
sahf
sti
mov
mov
fwait
xchg
pop
pop
iret
pop
imulb
ljmp
outsl
mov
andb
sbb
push
mov
stc
cmpsb
daa
loopne
dec
sbb
dec
std
mov
aas
cmp
aam
push
jbe
mov
pop
sub
adc
push
push
bswap
ret
adc
stc
sar
cmp
pusha
insl
pop
enter
lds
xor
in
mov
jae
sbbb
lock
pop
inc
int
jp
push
sbb
pop
xchg
lret
mov
les
xchg
jbe
ljmp
push
sti
mov
lahf
adc
test
rorl
lcall
in
int
push
jbe
arpl
in
add
dec
adc
outsb
stc
lods
cmp
aam
cs
push
loop
cmp
loope
add
add
pop
jb
cmp
ficoml
xor
stos
das
xor
out
inc
jmp
push
addr16
filds
adc
pusha
jb
aas
out
pusha
fstpl
sbb
int3
lcall
int
cmp
jno
and
mov
loopne
mov
inc
shll
mov
cli
sbb
outsb
dec
clc
insl
push
jnp
rorl
daa
ret
lds
jae
mov
pushf
pushf
push
push
lea
jmp
pushf
pusha
lea
je
ja
seta
cmp
sub
bts
add
rcr
clc
not
mov
call
movb
movb
pusha
lea
jne
rol
cmp
mov
xor
sub
sub
jmp
mov
jbe
int
repz
loope
xlat
xchg
push
and
jg
dec
scas
jge
addr16
xchg
adc
loop
test
insb
aad
lret
push
sbb
int3
cmc
xchg
movsb
inc
dec
push
faddl
insb
aad
xor
push
jbe
cmp
sub
shll
fisubs
push
xadd
das
sbb
data16
fs
cli
xor
sbb
pop
sarb
pop
sbb
push
jbe
jne
jmp
loope
and
xchg
dec
out
sti
push
sbb
dec
mov
xlat
test
lods
sbb
adc
xor
insl
jle
sahf
pextrw
xchg
push
cmp
inc
adc
in
sbbb
lods
gs
mov
movb
sub
and
filds
pop
jb
lods
in
test
add
lods
add
xchg
add
xchg
sub
xchg
idivl
cmc
mov
and
push
fnstsw
inc
out
clc
gs
sub
pop
aam
outsl
imul
push
fldenv
aaa
mov
sbb
pop
mov
add
sbb
sub
scas
dec
icebp
out
lods
sti
push
jbe
adc
ret
mov
fidivrs
dec
adc
movsl
sbb
leave
loope
push
or
fldcw
fwait
push
daa
mov
outsl
lahf
xchg
jbe
lods
rolb
lcall
sarl
sub
xchg
xchg
clc
mov
push
push
sub
frstor
ret
cmp
das
test
adc
leave
test
xor
lea
jb
push
movb
movb
inc
movw
ror
cmc
pusha
cmc
test
add
pushf
std
mov
pushw
popfw
call
mov
jbe
ret
out
sbb
xchg
ljmp
rorb
movsb
inc
jecxz
dec
cmp
out
cmpsb
jnp
insl
or
cmp
push
mov
push
imul
repnz
or
jl
notb
mov
mov
popa
or
push
flds
xor
je
jmp
xor
push
repnz
fstps
in
fdivrl
ror
xor
xor
shrl
shrl
mov
add
fdivr
fldl
rcrl
call
pushf
adc
jmp
adc
xor
cld
jg
add
push
lea
and
int3
pop
cmp
or
push
stc
pop
gs
jg
adc
sub
mov
ss
mov
rclb
and
cmpsb
rorl
js
test
inc
push
repnz
int3
pop
push
jbe
or
cmc
pop
test
cmpb
test
shlb
sbb
std
movsl
xor
mov
pop
dec
push
fwait
les
adc
and
cmp
clc
fists
push
shll
adc
notl
sub
push
xlat
mov
xor
inc
js
je
xor
sbb
add
xrelease
icebp
adc
push
int3
mov
mov
push
jbe
gs
dec
fwait
push
loopne
push
fisttpl
push
repz
push
shrl
pop
and
mov
cmp
mov
icebp
xchg
dec
movsl
sti
xor
mov
int3
leave
and
mov
imul
arpl
addr16
mov
fptan
xchg
outsl
jae
push
fadd
jbe
sbb
pop
seto
das
xchg
push
jecxz
pop
mov
subl
popa
outsl
mov
pop
addr16
cld
insb
pop
pushf
sbbb
pop
dec
or
add
push
repz
or
movsl
xlat
gs
and
jecxz
fwait
jns
sbb
mov
stos
std
popa
pop
sub
mov
sub
mov
fistpl
push
and
lods
mov
mov
add
sbb
pop
popf
cmpsl
ficompl
lcall
mov
mov
movsl
or
jbe
cli
js
push
mov
mov
mov
jge
and
mov
stc
mov
xor
into
mov
fidivrs
ljmp
xor
mov
sbb
sbb
pop
inc
sbb
sbb
sbb
sbb
adc
cmp
shll
scas
sbb
sbb
xchg
call
and
cmpsl
sbb
and
pop
mov
fistl
arpl
jnp
mov
push
mov
pop
mov
popa
mov
imul
mov
or
nopl
pop
scas
sbb
sbb
daa
sbb
mov
aaa
cli
sbb
push
sbb
jae
ret
shl
sbb
cmpsl
sbb
lea
loop
sbb
xchg
xchg
and
rcrb
test
mov
adc
int3
imul
sbb
call
or
fwait
sbb
test
cmp
dec
cs
fistl
sbb
popf
cmp
into
movsl
cmp
jge
sbb
addr16
fdivl
popa
mov
jnp
or
dec
mov
mov
call
repnz
mov
add
adc
out
inc
cmp
imul
cmpsb
movsl
iret
or
js
mov
shr
jl
sub
pop
jp
push
push
lcall
mov
filds
inc
cmp
lea
mov
push
pop
xchg
xchg
cmp
mov
fwait
sbb
push
mov
jecxz
xchg
add
imul
push
out
sub
jp
add
pop
int
adc
jae
cmp
inc
call
xor
or
leave
das
frstor
push
adc
incl
adc
cli
ds
frstor
jns
fldt
adc
cs
xchg
cmp
sti
adc
lds
dec
mov
sub
or
addb
sbb
popa
mov
es
jl
test
and
out
bound
loopne
xchg
xor
or
push
push
xor
mov
mov
cmpsl
mov
sub
loop
inc
aaa
sub
fldenv
arpl
stc
rcl
mov
xchg
cld
repnz
pop
aas
or
fdivl
repz
pop
or
add
xor
imul
cltd
xor
dec
xor
sub
xchg
mov
jg
lds
sub
aad
gs
mov
xchg
mov
sub
mov
adc
inc
mov
mov
scas
xor
and
sub
mov
and
out
adcl
cld
in
inc
xchg
fimull
lret
pushf
hlt
add
push
mov
verw
sub
jae
push
cmp
sbb
ljmp
rcrb
clc
mov
xlat
data16
dec
push
dec
cmpsl
sub
adc
add
dec
flds
sub
and
call
jae
gs
and
sub
fisubs
rcrl
jnp
or
push
jno
xor
and
mov
jno
push
mov
jg
mov
bnd
mov
cmp
sarb
sub
xchg
movl
ss
loopne
inc
mov
fwait
cmp
sub
and
dec
adc
sub
roll
test
sbb
pushf
sti
adc
xor
pop
jo
int
movsl
inc
sbb
addl
ds
inc
je
push
movsl
or
jp
mov
push
les
push
sub
stos
nop
inc
dec
imul
sbb
mov
daa
xor
cmp
fcmove
inc
dec
std
gs
clc
int
fwait
cld
loop
in
test
mov
xor
or
mov
cwtl
fs
mov
adc
inc
pushf
pop
pop
mov
fsubl
cmpsb
adc
scas
push
or
dec
jno
lahf
adc
pop
sbb
cltd
daa
aas
fsubr
loop
mov
out
dec
cli
inc
bnd
or
call
and
sarb
cmp
and
ljmp
ret
or
enter
mov
lods
ret
fdiv
sbb
repnz
dec
mov
negb
dec
sub
xor
and
and
jmp
mov
dec
ljmp
push
or
scas
jle
sar
adc
dec
sub
fidivl
and
loopne
repnz
sarb
bound
into
imul
lea
enter
enter
add
sbb
add
cmp
sub
std
xchg
and
pop
push
addr16
pop
pop
xor
xor
and
xor
mov
mov
pop
mov
and
cmp
out
xor
hlt
xor
jns
imul
enter
orb
hlt
cmp
notb
jmp
imul
rcrb
cmp
daa
dec
test
hlt
arpl
inc
scas
cmp
mov
mov
ja
xorb
jns
fcompl
out
pop
add
inc
andb
or
pop
addr16
sbb
cmp
sbbb
hlt
xor
cld
mov
mov
test
mov
loop
orb
movsb
push
push
xor
popa
jo,pn
clc
ljmp
lret
dec
dec
sub
jg
nop
cmp
call
jp
lret
cmp
mov
add
push
mov
pop
nop
cmp
mov
incb
adcl
mov
cld
mov
cmp
xorb
inc
cltd
fnsave
and
daa
lret
xorl
dec
mov
adc
call
add
xchg
jno
cmp
pop
mov
loop
xor
or
ret
repnz
add
and
lock
mov
mov
jno
and
and
pop
mov
and
pop
xchg
int
mov
das
shlb
or
cmp
mov
popa
dec
xchg
sub
dec
ret
les
pop
mov
inc
sbbb
push
and
mov
and
xor
test
pop
jns
xor
add
sbb
pop
jl
inc
stc
in
add
add
inc
mov
adc
int3
add
push
fdivl
pop
shrb
repnz
mov
cmp
aad
mov
dec
pop
dec
movb
add
sbb
push
jne
mov
insb
pop
and
mov
ljmp
sbb
pusha
or
jo
fbstp
xchg
pop
bound
aad
sub
cltd
pop
les
aad
rcl
je
inc
and
dec
or
stos
pop
inc
int3
popa
nop
sub
add
and
stos
cmp
popa
or
fxch
bound
push
daa
stos
sbb
sbb
sbb
mov
pop
aas
cld
lret
imul
and
shrb
mov
sbb
popa
int3
jne
jae
add
stos
pop
mov
out
push
gs
sbb
mov
jnp
jns
fiadds
scas
xchg
test
fwait
imul
mov
pop
fs
imul
pop
bound
lcall
xchg
mov
or
outsl
pop
out
popa
sbb
popf
mov
bound
sbb
mov
pop
cld
loope
push
test
nop
jmp
rcrb
cmp
xor
fidivrs
in
test
leave
fstp
mov
pop
das
jge
xor
cmpsl
cmp
xor
sub
stos
sbb
popa
subb
mov
mov
stos
mov
popa
clc
sub
mov
fcomps
mov
and
stos
jns
imul
mov
into
dec
subl
cmp
and
push
inc
pop
mov
mov
sub
test
mov
lods
stos
stos
scas
inc
mov
test
xor
scas
dec
dec
adc
imul
mov
dec
addr16
dec
add
cld
cmp
cmp
dec
fs
lret
clc
dec
xor
mov
push
cld
je
lods
jns
mov
sub
pop
call
sub
add
push
into
push
pusha
imul
iret
sub
push
mov
add
sub
cmp
sub
lcall
js
fwait
push
jmp
mov
shrb
into
jl
mov
adc
imul
sbb
pushf
inc
movsl
and
pop
dec
mov
mov
fcom
jge
stc
xchg
mov
pop
enter
into
test
mov
mov
ja
sub
cmp
pop
ja
mov
jbe
daa
jecxz
bound
mov
popa
call
inc
pop
and
xor
mov
scas
inc
cmpsl
push
loopne
inc
subb
push
mov
sbb
xor
popa
push
nop
mov
and
mov
movsl
inc
popa
cmp
dec
mov
clc
push
stos
add
gs
int3
mov
nop
call
or
xchg
pusha
stos
lahf
inc
rcrb
sub
sbb
sbb
sti
bound
addr16
fstps
dec
sarl
mov
enter
ficomps
pop
fadds
daa
dec
pop
and
daa
mov
pop
cs
xchg
mov
mov
or
stos
test
popa
jg
xor
lds
js
inc
daa
ja
sbb
stos
sub
das
cmpsb
push
gs
stos
push
inc
or
sub
inc
gs
mov
sub
and
mov
sub
mov
pop
lock
mov
loopne
mov
sarb
push
sub
mov
gs
dec
imul
addr16
and
lods
mov
mov
sub
outsb
cmp
mov
mov
jns
mov
add
xchg
cmpsl
push
shrb
push
pop
inc
mov
cmp
test
leave
xchg
mov
flds
pusha
movsl
sbb
mov
mov
push
mov
cmp
mov
mov
dec
inc
test
and
mov
cmpsl
pop
repz
sbb
cmp
push
add
ja
jb
sbb
rclb
mov
mov
daa
cmpsl
mov
push
repz
adcb
fs
sub
mov
and
fnstcw
or
cltd
jo
sbb
cmpsl
mov
add
cwtl
and
cltd
mov
notl
in
test
cmp
lcall
adc
and
xchg
and
outsb
roll
mov
and
cmp
je
dec
out
sub
dec
mov
lcall
xor
and
cmpsl
pop
add
jl
jmp
rclb
and
xorl
pop
pop
and
cltd
bound
mov
loope
cltd
arpl
stos
mov
out
insb
inc
cmpsl
mov
jmp
xor
push
dec
pop
lods
movsl
cmp
loopne
arpl
and
pop
cli
adc
mov
call
dec
hlt
inc
sbb
jno
dec
in
mov
mov
das
cld
push
mov
mov
clc
cmpsl
jle
adc
movsb
neg
pop
adc
cltd
and
push
int
mov
xchg
cltd
xor
test
mov
jbe
mov
xor
sub
inc
sbb
fwait
pop
andb
inc
mov
fstpl
and
jp
mov
addr16
sbb
pop
jnp
mov
mov
lret
xchg
jp
cwtl
inc
push
fimuls
mov
adc
mov
sub
jmp
cmp
pop
sahf
jo
cltd
xchg
js
loope
call
rol
sbb
cmp
mov
adc
out
daa
cltd
jnp
js
pop
stos
cmp
mov
cltd
xchg
iret
pop
shll
jp
out
fs
cmpsl
cltd
and
and
cltd
jge
pop
cli
push
lds
sub
int3
or
adc
into
aad
pushf
and
cltd
in
jl
outsb
cmp
and
arpl
loope
fwait
or
xor
icebp
mov
and
sbb
xchg
jmp
out
mov
into
mov
cmpsb
gs
cmp
xchg
cltd
mov
mov
xor
xor
mov
lock
clc
std
out
repz
cwtl
inc
leave
ret
inc
cld
jmp
decl
out
negb
xor
out
xchg
xor
sbb
jge
lret
out
adc
loop
jge
mov
cmpb
push
sti
loop
call
mov
mov
dec
incb
xor
mov
sbb
nop
lea
fdivrp
jbe
pop
addr16
add
ret
loopne
inc
sbb
mov
lahf
cmp
addb
adc
shl
hlt
jge
cli
clc
and
and
push
jg
scas
pop
xor
lock
testb
cmp
call
das
loope
scas
inc
rorl
push
fdivrp
push
and
cmp
aas
gs
stos
gs
dec
pop
cmpsl
dec
pusha
mov
enter
add
mov
shl
daa
test
xor
pop
push
das
mov
sti
push
xchg
and
and
rcrl
call
sub
lds
sahf
stos
ret
dec
icebp
out
into
andb
pusha
stc
mov
lods
add
add
mov
mov
add
aam
fimull
arpl
les
ret
ficoml
sarl
mov
cmp
jmp
and
dec
dec
mov
and
out
dec
and
std
xchg
mov
ret
fiadds
xor
add
sbb
das
xor
sub
pop
ret
cmp
lret
daa
negl
scas
sub
into
mov
cld
js
sbb
int3
outsl
call
out
mov
ret
mov
repnz
les
imul
test
lret
loop
out
lock
pop
das
mov
je
and
in
loop
push
jns
pop
add
popa
xor
icebp
popa
mov
movsl
lock
les
push
in
stos
mov
push
or
call
lahf
add
cmp
mov
adc
pop
xchg
push
cmp
cmp
xor
aaa
popa
sbb
xlat
xchg
jecxz
mov
xor
imul
sub
decl
shlb
and
mov
pop
push
imul
xchg
xor
mulps
mov
adc
clc
lahf
das
xor
inc
ret
push
dec
jae
pop
movsb
jnp
aas
mov
ds
dec
les
scas
call
add
out
adc
inc
jne
sub
mov
xchg
inc
or
mov
cmc
or
inc
inc
cmpl
repz
int
mulb
aas
les
int
and
test
inc
push
mov
sbb
jle
leave
adc
push
test
xchg
fldl
inc
das
mov
iret
and
inc
insb
in
movsl
and
or
cli
jle
dec
mov
mov
and
mov
xor
cmc
je
adcl
xchg
mov
aaa
jle
adc
ss
xchg
dec
dec
ficompl
scas
cmp
add
jecxz,pn
dec
xor
adc
aaa
invd
ss
int3
pop
pop
add
push
cwtl
mov
add
sub
test
jmp
mov
popa
sbb
mov
inc
cmp
mov
pop
test
add
adc
xchg
or
enter
shll
mov
lea
jbe
add
cmpsb
add
mov
imul
movsl
lock
repz
mov
test
in
mov
sub
cmp
inc
dec
mov
inc
xor
fs
pop
mov
jne
fdivl
scas
icebp
test
test
out
loope
pop
jmp
mov
dec
sbb
outsb
mov
lret
inc
repz
popf
mov
fs
inc
mov
jb
add
xor
mov
clc
call
mov
fisubl
push
negl
cmpsb
out
and
lock
dec
push
push
imul
fiaddl
das
imul
pop
cld
inc
mov
popa
mov
inc
mov
add
testb
mov
mov
and
mov
lea
enter
dec
mov
pop
ljmp
arpl
pop
ljmp
push
sub
mov
divb
ljmp
ds
js
test
lock
or
mov
dec
lock
push
mov
push
dec
repz
push
pop
ftst
cmp
mov
sti
sti
clc
sub
stos
jae
je
push
mov
in
mov
call
shlb
add
shlb
push
or
mov
mov
sbb
mov
gs
shlb
sarl
sbb
mov
rcrb
imul
mov
inc
enter
fwait
xchg
mov
xabort
sbb
popa
popa
mov
dec
test
mov
xor
adc
adc
inc
bound
or
sti
daa
lahf
call
cli
mov
out
or
fimull
push
call
std
pop
sbb
adc
push
mov
jl
mov
sub
add
imul
loopne
pop
test
add
sti
dec
or
cltd
lock
xor
cltd
cmp
dec
sbb
xor
test
mov
jl
sahf
fcomp
sbb
lods
call
jg
aad
lods
test
pop
ljmp
dec
or
xorb
mov
shlb
adcb
stos
stos
shll
or
test
iret
in
mov
pusha
mov
sub
nop
mov
shrb
dec
cwtl
call
jne
fadds
popa
add
pop
mov
mov
ljmp
les
sbb
clc
outsb
dec
push
out
inc
mov
repnz
pop
mov
sub
test
mov
xchg
loope
decb
scas
dec
insb
inc
cmp
or
loopne
xor
sub
call
lock
in
cmp
orl
or
mov
and
fcoms
cld
add
in
stc
imul
imul
mov
mov
inc
stos
adc
adc
dec
jo
adc
adc
pop
mov
movsl
mov
push
leave
cmp
mov
out
push
test
cli
bnd
pop
xchg
lods
xor
xchg
imul
adc
mov
mov
sbb
and
pop
dec
fstpt
sub
sub
jl
mov
jae
jbe
adc
pop
lret
js
test
mov
out
popa
jae
insl
stc
sub
push
adc
add
add
pop
pop
dec
dec
jge
mov
or
cmpsl
dec
cmp
loopne
adc
sub
sbb
fisttpl
add
or
gs
push
add
pop
dec
add
loope
jae
loop
cs
xor
imul
pop
addr16
add
lret
scas
mov
insl
lret
cld
cmp
push
inc
mov
andb
inc
cmp
inc
rorb
add
jnp
xor
daa
mov
lock
lock
jecxz
add
add
mov
gs
std
fadd
mov
iret
pop
lcall
mov
mov
sub
loop
dec
xchg
xorb
mov
pop
call
mov
pop
sti
fs
xchg
mov
mov
pop
jo
inc
and
popa
cli
stc
cmp
sbb
adc
lret
in
jns
jns
sub
add
aaa
pop
or
mov
pop
popf
xor
stc
je
sub
inc
mov
gs
scas
xchg
pause
imul
rolb
adc
pop
dec
and
stos
sub
aam
or
fucomp
mov
addb
test
inc
mov
mov
pop
test
sbb
mov
stos
push
adc
gs
clc
dec
xchg
mov
mov
loope
popa
test
scas
lock
rolb
notb
in
mov
arpl
shrl
ja
ja
inc
mov
lret
mov
stos
and
dec
cmp
mov
nop
stos
lock
stos
xchg
push
jns
in
mov
mov
aaa
flds
aas
test
jecxz
bound
test
cli
lock
jmp
or
loop
xor
or
xor
sub
or
adc
sbb
or
mov
and
pop
push
xchg
rcll
sub
adc
sbb
lods
cmp
sbb
lahf
jb
out
insb
dec
ret
cld
jns
and
and
aaa
das
popl
mov
ljmp
mov
mov
or
ret
rcrb
sub
shl
stos
adc
xchg
and
popf
cmp
or
mov
fstpt
call
ja
in
pop
xor
sub
fsubrs
mov
mov
cmp
mov
shl
dec
mov
cmp
pop
pop
pop
cmp
mov
mov
imul
sub
stc
push
cmp
leave
inc
aas
into
cmp
aas
dec
daa
lret
and
sub
data16
repz
jae
dec
push
mov
daa
adc
mov
or
aam
inc
daa
add
inc
add
scas
adc
lock
enter
loope
xor
sub
sub
or
mov
jecxz
fadd
jge
jmp
outsl
jecxz
pop
push
imul
inc
mov
cmp
adc
push
scas
outsl
addr16
outsw
pop
sub
subb
xor
inc
aas
das
into
sub
call
pop
mov
sub
mov
xor
call
imul
enter
inc
bound
cmc
mov
inc
cmp
xor
outsb
pop
data16
xchg
xchg
fnsave
sbb
sub
mov
cmp
arpl
inc
jl
mov
rcrb
xchg
mov
outsl
cs
sub
out
and
add
mov
inc
sbb
pusha
add
ret
daa
insl
fadds
sarb
jp
lock
sub
das
pop
sub
shll
or
push
aam
movsl
push
fcmovne
aas
push
cmp
mov
mov
ret
and
push
test
data16
cmp
ljmp
xor
adc
movsl
mov
lahf
aad
mov
mov
bound
or
xor
xchg
les
jp
pop
mov
out
daa
sub
push
push
outsl
imul
jnp
or
inc
rol
ljmp
jnp
jp
push
cmp
inc
mov
stos
imul
daa
das
inc
and
ret
vphaddudq
pop
rcrl
test
add
aam
pop
add
xchg
test
sbb
adc
xchg
mov
dec
xorl
mov
and
and
xor
inc
xchg
repnz
fidivs
sarb
push
bound
xchg
imul
add
push
jle
nop
pop
add
add
jge
add
push
mov
in
sub
sub
add
mov
jbe
sbb
mov
test
sub
push
jae
sbbb
out
cwtl
imul
inc
pop
mov
dec
xor
jecxz
xor
call
jbe
or
add
int3
mov
jae
mov
stos
jge
fwait
jmp
mov
les
jae
pop
adc
adcb
and
mov
mov
sub
in
add
adc
adc
lock
clc
cmpsl
hlt
faddl
movsl
pop
pop
mov
mov
in
inc
xchg
push
and
xor
adc
add
loop
push
jge
hlt
xchg
call
dec
mov
out
xorl
xorb
decb
sbb
push
inc
stos
jno
out
sub
push
fcoml
jge
mov
sbb
xorl
and
push
dec
lock
repnz
pop
mov
add
lock
fisubs
mov
mov
fistpll
xchg
stos
inc
lret
xchg
xorb
pusha
push
jb
sahf
insb
jp
mov
mov
or
lock
bound
mov
loopne
idivb
adc
mov
mov
test
push
or
cmp
mov
dec
sub
inc
loop
mov
cmp
xor
scas
gs
cmp
dec
daa
test
mov
sub
mov
xchg
xchg
mov
or
xorb
popa
mov
xor
lds
iret
cmpl
cmp
outsb
mov
fwait
pop
and
pop
pop
pop
aad
sub
inc
mov
jge
mov
scas
fwait
xchg
cltd
cltd
inc
add
sbb
jbe
push
lds
cmp
jg
das
adc
fildll
inc
cmp
lahf
add
adc
adc
and
xchg
pop
jecxz
ret
push
mov
cmp
out
xor
test
in
fwait
xchg
sbb
adc
fdivl
int3
push
sbb
test
push
jb
jecxz
ja
xlat
pop
mov
stc
push
mov
mov
dec
and
out
add
inc
mov
inc
call
jmp
int
shr
neg
not
mov
stc
call
fstps
sbb
jnp
sub
outsl
loop
dec
gs
cmp
test
xchg
cmp
lcall
xchg
pop
dec
sub
cmpsb
pop
cmp
flds
les
push
sub
rcrl
and
repz
jl
cli
mov
jmp
ds
lods
leave
repnz
fistpl
mov
push
jbe
das
ret
out
adc
jge
es
loope
push
jne
cmp
repnz
mov
hlt
push
iret
stos
mov
inc
or
pusha
mov
enter
js
jge,pn
fistps
mov
ljmp
mov
push
in
jnp,pn
lret
xchg
mov
movsb
pop
push
adc
or
stos
sbbl
push
sbbl
inc
test
sub
cmp
jle
clc
test
out
xlat
iret
push
shll
fs
jae
stc
bt
xor
jmp
movsbl
mov
jmp
movl
pushf
movl
movb
lea
jmp
sub
mov
pop
call
das
cmpb
lahf
and
jnp
sbb
adc
mov
in
loope
int3
jecxz
iret
stc
data16
insb
xor
or
xchg
xchg
out
xor
or
fxch
or
outsl
fistpll
mov
fwait
xor
aas
cmc
push
icebp
cmc
orb
mov
jns
fiadds
es
add
mov
xchg
daa
add
xor
nop
xor
mov
mov
mov
sti
incl
add
je
outsl
fs
gs
imul
add
jbe
and
jle
add
push
fnsave
sub
lahf
mov
aaa
testb
cmp
fnstsw
mov
jecxz
pop
ds
sbb
mov
adc
fcmovnb
mov
clc
test
pop
push
mov
shlb
pushf
cmp
add
mov
cmp
lods
adc
and
outsb
daa
xchg
fcompl
jo
cmc
js
or
bound
andb
mov
push
cmp
ds
rcrl
push
jbe
lahf
es
iret
jle
mov
dec
add
xor
jne
bound
loope
adcl
inc
push
cwtl
rcrb
push
hlt
sbb
add
push
rep
mov
fnstenv
cmp
lods
shrl
adc
jl
scas
dec
hlt
lods
ds
std
stos
outsl
lock
ret
mov
jae
xor
mov
push
add
mov
add
pusha
mov
pushf
movb
pushl
ret
jmp
loop
jge
push
jbe
decl
test
mov
cmp
mov
push
sarl
adc
sbb
mov
push
add
sti
add
dec
icebp
inc
daa
xchg
mov
imul
cmpsl
mov
sbb
cld
mov
lahf
cmp
cmp
inc
sbb
rolb
lcall
dec
into
push
fcoml
inc
int3
mov
push
loope
and
inc
mov
out
test
nop
cmp
mov
inc
and
sbb
fistpll
pop
sbb
cmp
scas
aam
imul
adc
sahf
lret
or
xchg
movl
mov
dec
jmp
adc
jle
repz
push
stc
or
pop
lret
mov
mov
jmp
jmp
imul
mov
rcl
lret
and
xchg
sbb
xor
sub
imul
cltd
sub
inc
pop
fistps
add
fistps
mov
int3
add
ljmp
xchg
inc
lds
mov
and
mov
or
jle
mov
icebp
aad
sbb
and
mov
sub
cmp
mov
pop
mov
adc
das
jmp
fs
mov
lahf
jbe
shll
pop
divb
mov
insl
fsubs
xchg
jl
leave
adc
sub
leave
add
add
mov
jbe
mov
popl
cwtl
das
mov
mov
test
les
and
ss
sbb
xchg
sub
xchg
mov
push
stos
push
call
pop
dec
movsb
mov
aad
mov
pop
adc
or
jl
out
xchg
dec
mov
das
dec
adc
cld
mov
mov
testb
push
or
loope
lds
cmpsb
sbb
mov
push
jbe
push
stc
lods
sub
mov
or
orb
pop
lods
pop
clc
es
shlb
dec
das
xchg
xchg
jnp
sbb
std
sub
nop
jbe
cld
jg
mov
add
jge
push
jecxz
dec
push
add
notl
shlb
cmpsb
xor
cmpsl
outsb
sub
orb
sub
sbb
ss
rclb
add
and
mov
andl
push
jbe
mov
fisttpl
nop
dec
ret
out
insl
sbb
loop
in
jmp
xchg
jae
adc
adc
fstps
mov
int
dec
xor
ror
xchg
mov
idivb
in
pushl
sbb
and
loope
mov
aad
mov
in
lret
mov
xchg
repz
add
testl
inc
lahf
jge
addb
or
outsb
notl
mov
mov
ret
pusha
fdivrs
jne
ret
fiadds
insb
and
jb
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
out
cli
call
jbe
cmp
lods
and
test
mov
mov
rcrl
jbe
call
mov
adc
test
add
into
les
test
mov
pop
lds
jb
out
fstps
mov
mov
inc
das
cmp
ds
daa
mov
into
add
imul
xor
pop
clc
lret
test
or
hlt
pusha
test
add
pusha
test
sbb
outsb
push
test
es
dec
int
ret
insb
or
dec
clc
mov
and
lea
movl
not
bswap
movzbw
movsbl
lea
mov
movl
movw
push
jmp
mov
push
call
pusha
call
pusha
pusha
pushf
pushf
movl
pushf
lea
jmp
lea
and
addr16
mov
mov
push
ljmp
loopne
push
or
shl
leave
cwtl
sti
mov
dec
cmp
leave
or
hlt
ljmp
xchg
mov
xchg
popa
fistpl
pop
mov
pop
mov
jp
lods
ror
inc
xchg
push
mov
popa
sub
test
lcall
fnstsw
icebp
xchg
pusha
pusha
lea
call
pusha
adc
pusha
jmp
inc
scas
push
and
test
lret
pop
gs
xchg
stc
sahf
jp
and
loopne
cmp
xchg
push
adc
out
and
push
or
adc
and
pushf
jb
mov
lods
push
into
cli
push
imul
testl
push
insl
xchg
and
add
dec
mov
mov
xchg
mov
dec
jmp
pop
xorl
cmp
cld
inc
sbb
fmuls
mov
fidivl
mov
pop
jmp
daa
movsl
mov
movsl
push
scas
cmp
inc
dec
dec
xor
cs
insb
add
cmp
adc
mov
movb
movb
lea
jae
push
lea
jne
pushf
pushf
pusha
stos
pushf
lea
jmp
xor
lods
and
sarb
call
push
jne
jg
sub
mov
test
aad
out
xor
add
jl
fidivrs
mov
lret
test
imull
lcall
adc
mov
cmc
dec
repz
rolb
adc
fmul
jg
cld
add
xor
adcl
inc
sbb
cmp
inc
or
mov
lret
mov
jo
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
lock
mov
pusha
cmc
cmp
push
pushf
call
jmp
jbe
dec
sti
jbe
test
mov
dec
adc
pop
xchg
lds
jnp
inc
loope
loope
jmp
xor
push
int3
aam
dec
dec
sub
popa
jno
imul
add
xchg
xor
rcll
and
mov
push
lock
fnsave
mov
pushf
and
push
fcoml
and
aaa
pusha
lea
je
clc
setp
mov
btr
jmp
mov
bswap
mov
movzbw
pusha
mov
pushf
pushf
push
pushl
ret
rorl
das
cli
cltd
insb
add
jne
repz
adc
pushf
je
divl
and
ljmp
push
lcall
popf
jae
jno
jo
sbb
addr16
adc
rsqrtps
call
sub
add
das
cmpsl
mulb
nop
dec
imulb
mov
dec
mov
nop
pop
nop
cmp
pop
fistps
cmp
jbe
jae
jge
mov
setg
pushf
not
inc
not
not
call
push
movb
lea
jne
mov
pushf
push
pusha
pushfw
popw
adc
adc
pushf
cmp
mov
movb
movl
neg
jmp
jle
cmp
push
jbe
jmp
inc
call
cmp
push
cmpsl
testl
add
pop
jbe
cli
xchg
xchg
lahf
pop
or
gs
mov
js
cli
mov
jae
loopne
and
lret
cmpsb
cmp
test
adc
scas
mov
pop
divb
fbstp
push
sub
pushf
pop
lods
mov
push
outsl
insb
or
mov
std
outsb
sti
les
dec
adc
jecxz
cld
cmp
mov
mov
mov
push
xchg
pushl
rorl
jne
ret
jo
pop
mov
mov
jl
add
sahf
sahf
out
fs
push
dec
mov
sbb
push
nop
jns
xor
subb
push
hlt
rcrb
inc
cwtl
jnp
test
mov
jp
mov
push
aam
out
insl
aam
jae
int3
stos
pop
ja
in
mov
std
lods
jns
fdiv
or
bound
es
and
xchg
aad
adc
jmp
scas
push
shrb
jbe
pop
rolb
jmp
lds
push
adc
inc
int3
rcrl
aaa
jb
fldenv
mov
outsb
push
loopne
push
mov
push
std
mov
scas
or
fs
les
cmpsl
mov
push
and
mov
or
xchg
aas
and
push
adc
lods
and
jge
hlt
push
mov
mov
mov
push
aad
fbld
out
data16
mov
push
sarl
jg
inc
xchg
andb
cwtl
adc
cmp
test
adc
dec
stc
aaa
dec
movntps
repnz
xchg
xor
inc
sbb
or
sbb
ljmp
outsl
fnstsw
sub
mov
or
adc
sbb
call
lret
loop
cvtdq2ps
pop
rcr
and
sub
cmc
iret
pusha
cmc
repnz
push
dec
loope
mov
test
leave
mov
rcrb
repz
ljmp
cmpsl
pusha
inc
in
pusha
lea
je
cmp
test
push
cmp
cmp
pushf
pushl
ret
lea
lea
call
push
push
inc
push
xor
cs
insb
add
add
arpl
add
or
in
push
jbe
and
xchg
movsl
nop
repz
xor
sahf
out
pop
jp
inc
rcrb
pop
pop
jg
fsubp
sbb
pop
and
push
lahf
dec
xchg
les
and
or
xchg
and
sbb
jnp
dec
jns
xor
out
xchg
sub
cs
imul
push
out
inc
into
aaa
call
sbb
out
insl
cld
adc
and
popf
lcall
mov
movsb
imul
add
mov
mov
aas
add
sub
push
int
cld
rep
jnp
scas
pop
nop
in
enter
fnsave
push
jns
test
sahf
jecxz
movsb
roll
or
subb
lahf
jmp
lcall
push
add
xlat
sahf
inc
sbb
xchg
dec
push
in
or
sahf
daa
ds
call
pop
xor
in
push
in
jnp
mov
negb
insl
dec
mov
sbb
cli
cmp
aam
push
jbe
jb
mov
xchg
mov
sbb
stos
inc
mov
cmp
inc
sub
rorl
aas
lret
pop
pop
icebp
jb
into
mov
cmp
mov
jb
xchg
jmp
sub
outsb
push
pop
mov
test
mov
js
aam
idivl
test
cmp
pop
xor
mov
xor
bound
sub
int3
inc
inc
adc
sub
insb
dec
insb
repnz
testl
adc
outsb
push
or
xor
lods
ret
add
sub
sub
dec
jmp
jno
outsl
es
mov
sbb
jns
rcr
inc
ret
push
inc
imul
jg
push
scas
rclb
xor
cltd
xorl
sub
mov
pop
cmp
cld
gs
test
xchg
into
popa
int
mov
cmc
notb
sahf
adc
faddl
inc
or
repnz
scas
daa
cld
movsl
and
outsb
outsl
mov
lds
mov
or
int3
dec
inc
push
dec
inc
dec
xor
cs
insb
add
aaa
popl
test
movl
mov
call
mov
sub
cmpsb
and
das
fisubrs
int3
inc
adc
insl
sbb
lret
arpl
shrb
aas
icebp
scas
mov
xlat
add
out
mov
out
push
cmp
pop
fldenv
add
shlb
inc
cli
push
pop
hlt
test
neg
and
pop
jp
popf
lahf
stos
add
movsb
or
pop
pusha
pop
ret
in
out
pushf
inc
fisubrl
decb
add
add
test
push
jbe
jb
mov
test
inc
add
jle
out
adc
xchg
outsl
dec
int3
xchg
out
sbb
in
or
das
push
lods
pop
xor
sti
jb
repz
out
push
push
fsts
and
xchg
mov
lea
mov
inc
lret
ja
js
cs
int3
dec
popa
mov
mov
inc
push
sub
jge
mov
inc
aaa
cltd
sahf
imul
lods
hlt
call
imul
aad
imul
arpl
in
mov
push
fiadds
lea
jl
mov
not
pusha
stos
push
push
push
jmp
pushf
mov
movb
pushl
ret
stc
xchg
cs
jbe
fnsave
jbe
mov
test
out
pusha
or
and
out
jae
out
pop
pop
xor
add
movsb
aam
sub
aam
push
arpl
icebp
pop
movsb
inc
mov
mov
lahf
in
ss
pop
fisttps
mov
and
aaa
outsl
cmp
pop
lds
lds
js
outsb
inc
mov
rorb
pop
mov
js
shlb
or
incl
jbe
lods
xchg
popf
pop
daa
lret
andl
push
lods
movsl
je
jmp
cmp
hlt
pusha
lahf
inc
cmc
mov
fcom
push
jo
pop
out
pusha
push
sub
mov
inc
cs
insl
sbb
and
cwtl
cs
xchg
jb
flds
shll
push
js
add
stos
mov
stos
scas
sti
into
inc
pop
or
les
cmpsb
jg
jge
mov
mov
jbe
enter
and
rep
jmp
call
adc
lods
das
push
jbe
and
mov
mov
iret
mov
popf
jns
sbb
adc
and
cmp
ljmp
cmp
cmpsl
sbb
or
fcompl
mov
dec
mov
jns
add
xor
lcall
int3
and
add
scas
add
add
or
in
jb
enter
inc
imul
je
dec
xor
das
cli
jge
mov
rolb
push
pop
in
jne
mov
int3
sbb
std
cmc
cmpsb
add
sbb
in
out
ficompl
cwtl
ret
insb
fidivs
sbb
mov
pop
jns
pushf
push
aas
ds
lcall
xor
jb
lret
ret
enter
jg
mov
mov
sbb
jp
clc
std
cmp
add
les
sbb
cmp
and
push
out
test
or
imul
cmpsw
pop
cmp
inc
and
xor
mov
xor
inc
add
push
jbe
test
pop
int
lss
jne
adc
rorl
int
daa
les
movsl
shlb
in
stos
sub
in
jbe
pop
rol
inc
and
inc
xchg
cwtl
sub
cmp
pop
sahf
repnz
mov
stos
pop
vpmuludq
pop
pop
jp
push
shrb
inc
cmp
lods
mov
fcoms
loope
cli
fwait
push
xchg
dec
add
stc
push
mov
xchg
fstl
sbb
or
xlat
movsb
add
imul
rorb
int
inc
neg
jnp
rclb
pop
sarl
icebp
jl
xchg
mov
adc
pop
or
ret
clc
sub
xor
jno
faddl
ja
jp
stos
mov
jmp
cmp
jle
out
loop
adc
push
icebp
adcb
mov
dec
cmp
push
out
jnp
jmp
or
pop
xchg
decl
iret
xor
fsubrs
popa
mov
xor
loope
mov
repnz
add
les
ret
aas
cli
jns
pop
mov
test
inc
cmpsb
inc
sahf
and
jnp
mov
mov
mov
push
movsb
out
push
lea
push
lods
ret
popf
mov
int
js
dec
mov
pop
enter
push
repz
mov
lods
imul
and
icebp
xchg
jle
std
cltd
sti
sahf
pop
loope
mov
pushf
dec
repnz
xchg
jle
testb
ljmp
cld
jmp
sub
pop
fbld
lock
icebp
jmp
and
lahf
cmpsb
push
lods
mov
cld
push
aad
mov
std
dec
fmull
addr16
and
scas
out
and
lods
aas
shll
leave
inc
aad
movsl
mov
andl
pop
test
fisttpll
jp
shrb
or
in
inc
sub
jb
mov
jecxz
cmpsl
pop
jge
xchg
outsl
adc
push
loope
sub
cld
int3
add
or
sub
ljmp
mov
sub
jnp
sub
insb
add
add
jge
adc
push
roll
xchg
adc
loope
xchg
adc
pop
xchg
call
int3
rclb
pusha
repz
mov
out
inc
cli
aam
lcall
xchg
out
pop
fildl
inc
mov
or
shll
inc
push
cmp
mov
dec
ja
sub
jae
jle
pushf
pushf
cmp
call
push
stc
cmp
pushf
lea
ja
cmc
cmc
jmp
sbb
mov
stc
mov
lock
subb
cmpsb
cs
fprem1
mov
push
inc
cwtl
pop
push
mov
cli
addr16
mov
dec
jo
mov
add
cmp
fcoml
sub
into
adc
sub
jno
adc
imul
push
adc
pop
les
into
sbb
cld
stos
push
dec
cmp
pop
mov
js
stos
mov
mov
mov
adc
mov
aad
mov
pushf
lea
ja
jmp
iret
lods
push
push
jbe
iret
pop
int
or
inc
and
mov
push
pop
in
dec
jge
in
mov
bnd
into
push
jecxz
lcall
lret
xchg
adc
stos
pop
and
sub
cltd
or
dec
gs
xor
in
mov
or
pop
xlat
push
pop
adc
push
xchg
shlb
mov
iret
jbe
fs
cmp
add
leave
addr16
addl
push
daa
cli
jae
fstps
push
sbb
filds
leave
andb
or
cs
int
mov
xor
push
adc
jbe
lds
xchg
sub
mov
mov
mov
cmp
fisttpll
pop
and
mov
sbb
jge
orl
dec
mov
sub
lds
inc
or
push
add
mov
fwait
lea
in
stc
sbb
cmpsb
xor
adc
jmp
pop
push
ret
mov
push
int
mov
call
xor
imul
add
xchg
or
popf
jmp
lods
ret
cmp
fcmove
and
test
inc
sbb
outsb
mov
bound
and
sub
test
add
pop
orb
test
and
and
xchg
xor
push
outsl
sti
lcall
repz
jbe
mov
mov
rorb
mov
insb
jmpw
adc
ss
arpl
xchg
adc
sti
xchg
ret
mov
mov
mov
cmpsl
jge
addr16
dec
pop
ret
int
or
jmp
fldl
push
xchg
sub
dec
jno
into
cmpsl
jb
and
in
or
test
outsb
call
stc
cmpb
mov
lea
jae
out
xorb
dec
sahf
mov
lods
sub
xchg
or
pusha
popa
xlat
mov
int
test
mov
call
mov
mov
lea
ja
stc
bt
cmp
add
bt
stc
cmp
clc
or
call
push
cs
aaa
push
jbe
pushf
dec
jns
mov
stos
and
iret
adc
aad
scas
dec
xor
fcoml
pop
outsl
cmpsl
mov
xor
mov
mov
xchg
jp
fwait
loopne
or
pop
adcb
or
fldt
or
sbb
bound
jne
and
and
shl
iret
outsl
push
imul
stc
rclb
xor
lcall
jae
xchg
lahf
cmp
ficompl
cmp
stos
adc
jno
adc
lods
in
ja
jmp
aaa
push
jbe
cs
dec
daa
scas
gs
scas
es
pop
mov
or
scas
jbe
leave
cmp
cmp
pop
aaa
pop
inc
mov
or
lods
mov
mov
adc
mov
xchg
das
inc
imul
mov
outsb
leave
sbb
fidivrl
push
scas
mov
dec
int
leave
xchg
test
lahf
adc
sbb
lds
jmp
jecxz
mov
in
dec
ljmp
or
jp
jbe
push
sbb
add
es
inc
lds
in
jno
clc
jmp
int3
test
and
lea
jne
movsbw
btr
mov
shrd
bsf
rcl
movzbw
sub
bsf
mov
pushf
jmp
add
add
shld
daa
ror
neg
push
das
bt
or
mov
jmp
mov
dec
cmp
add
push
fsts
sbb
iret
jmp
push
out
movsl
popf
jp
lock
dec
mov
dec
enter
shll
cmp
jnp
cmp
push
leave
add
mov
ja
mov
stos
pop
mov
or
xchg
jp
daa
jge
adc
jbe
push
icebp
je
pop
je
adc
dec
lods
mov
adc
jns
insl
mov
sbb
movsb
test
xchg
cmp
mov
push
adc
test
icebp
movl
pusha
pushf
movl
pushl
movb
lea
jmp
mov
mov
pusha
push
movb
pushl
ret
mov
stc
push
ror
adc
stc
push
ror
push
rol
bswap
mov
test
sub
bsf
mov
xadd
mov
setge
clc
mov
shl
xor
pushf
pusha
push
lods
add
and
neg
shl
shl
sub
ror
xor
call
pushf
pusha
lea
jae
inc
not
jmp
add
mov
inc
xchg
or
pop
aad
pop
ret
in
out
adc
sbbb
movsb
std
cmc
cmpsb
add
clc
mov
in
jo
fadd
jle
sti
sbb
xchg
push
lods
out
pop
jp
pop
or
cli
mov
scas
xor
es
dec
daa
mov
fstpt
idivl
xlat
dec
iret
jo
stos
outsl
sub
notb
shll
lahf
pop
pop
in
in
push
jbe
xchg
fnstsw
pop
sahf
pop
add
sub
adc
repnz
push
mov
rclb
push
inc
sub
pusha
jmp
hlt
inc
fists
stc
pop
fldl
cs
dec
call
das
adc
lock
cmpsl
jle
dec
jbe
pop
ds
cwtl
test
push
dec
mov
or
push
and
push
int3
xor
aam
jnp
pop
jae
iret
leave
xor
and
iret
or
testb
mov
out
pushf
stc
mov
in
jns
lret
mov
pushf
push
lea
call
jmp
add
lahf
cmp
pop
hlt
mov
fstpl
adc
movsb
add
mov
push
sbb
xchg
sets
inc
shrl
inc
out
push
loop
int
je
icebp
dec
stos
mov
xchg
mulb
sar
ja
inc
cs
fadd
scas
adc
mov
rcrb
rclb
shlb
adc
or
insl
mov
cmp
pop
aaa
cmp
mov
adc
mov
lods
mov
adc
mov
push
jbe
pop
subb
fnsave
jno
lahf
push
leave
lds
push
sbb
lret
dec
mov
mov
loope
or
test
cmp
mov
sbb
popa
rcl
and
shrb
cmp
icebp
fstpt
cmpl
nop
inc
xchg
jp
pop
pop
xchg
pop
inc
out
push
cmp
sbb
xchg
add
mov
add
jnp
stc
push
xor
or
loopne
pop
cmp
insl
imul
inc
sub
fmull
or
or
sti
inc
loop
xchg
call
ficomps
pop
mov
sub
int
xor
sbb
test
in
stos
mov
adc
scas
movsb
push
push
scas
call
int3
jecxz
nop
mov
ret
xor
ljmp
sub
inc
in
or
clc
loope
xlat
dec
std
push
and
push
ret
mov
ret
mov
xlat
mov
pushl
pushf
lea
jmp
movb
lea
je
pusha
adc
push
pusha
pushf
lea
jmp
jne
call
std
mov
pop
push
mov
adc
add
sbb
mov
sub
push
into
lahf
pop
je
adc
inc
and
nop
push
test
inc
pop
mov
jo
and
push
cltd
push
mov
addl
ljmp
push
and
mov
inc
loope
ret
shll
pop
fmul
popf
stos
imul
cwtl
arpl
dec
movsl
cmp
fwait
add
imul
nop
das
sub
dec
xor
es
or
jnp
jge
ret
xlat
imulb
cs
ds
jbe
cmpl
xchg
addb
sub
call
lret
mov
insl
call
add
pushf
lock
aam
mov
int3
cmc
lcall
rcrl
aam
pushf
inc
mov
std
dec
call
push
push
mul
pop
cmpsl
bound
push
pop
and
xor
orb
push
lock
and
dec
cmp
clc
fistpll
pop
movsb
addl
aaa
pushf
inc
adc
add
jl
jb
sbb
aam
push
jbe
outsb
inc
enter
lods
sbb
and
aaa
or
mov
imulb
jle
sub
rolb
mov
fxch
out
cmp
and
loope
jmp
out
sub
inc
pop
testb
sub
pushf
dec
or
mov
ret
mov
loope
daa
mov
jne
aas
push
jbe
aad
pop
push
push
mov
xchg
mov
push
push
insl
movl
imul
std
mov
test
inc
imul
roll
repz
cs
ret
sbbb
insl
pop
mov
sbb
js
jnp
push
mov
jne
sub
xchg
mov
mov
aaa
push
andb
ffreep
jge
aas
push
jbe
iret
cmp
jo
mov
inc
mov
lock
mov
iret
fs
add
jo
sub
push
loope
hlt
dec
or
repz
aad
lret
jp
add
xlat
xor
adc
push
lock
jb
in
adc
sbb
into
mov
aam
fiaddl
popa
es
cmp
std
ror
cmp
lods
push
lock
std
std
mov
xchg
adc
xor
leave
pop
popf
sub
mov
pop
xorl
nop
fisubrl
fcompl
icebp
clc
dec
dec
xchg
and
aam
pop
lds
in
es
test
lods
xchg
mov
fldl
xchg
xchg
adc
jbe
repz
xchg
push
mulb
ret
outsl
mov
cwtl
out
adc
adc
inc
add
test
cmp
call
lock
jbe
sbb
insb
pop
out
hlt
fstpt
icebp
push
mov
pop
out
or
add
adc
pop
xor
scas
cmpsl
mov
mov
pop
jno
sbb
mov
adc
push
flds
adc
sub
pop
adc
mov
bound
jl
cltd
push
out
jno
out
jo
rcr
andb
cmp
int3
jnp
cs
cli
lds
add
push
sub
pop
insl
mov
and
mov
push
or
pop
fcompl
data16
inc
push
jbe
movsb
dec
mov
mov
ret
xchg
pop
mov
pop
loop
and
mov
fstpt
mov
adc
fcoml
std
jbe
xor
lret
popf
mov
stos
jg
dec
mov
aad
or
inc
cmp
mov
imul
xchg
testl
iret
inc
popf
dec
push
pop
es
nop
mulb
or
imul
aas
pushf
push
adc
jae
push
outsl
xor
mov
mov
inc
push
jbe
cld
xchg
mov
rorl
rorb
in
pop
lock
sarl
shll
insl
aam
xchg
rcrl
dec
repz
sbb
mov
or
adc
adc
and
cmpsb
add
sub
fdivrs
lods
out
icebp
stos
mov
xor
pop
stos
pop
mov
repz
shll
push
mov
fs
stos
cmp
cltd
mov
shl
mov
inc
pop
rolb
pop
or
incl
jmp
pop
cmp
pusha
call
mov
dec
mov
mov
push
jmp
pusha
lea
jne
call
out
cmpsb
inc
push
jbe
cld
rcrl
mov
xchg
iret
lcall
inc
sbb
mov
daa
lcall
dec
out
adc
rolb
jmp
pop
push
fwait
push
cmc
jp
and
mov
cs
pop
test
push
adc
adc
and
sbb
jge
sub
push
add
sbb
mov
lock
out
cmp
dec
pop
out
jo
hlt
sbb
push
mov
leave
shlb
dec
and
adc
loop
jnp
dec
lcall
dec
movsb
scas
xlat
jo
cld
jae
pop
inc
push
jbe
sahf
sbb
insl
add
sar
inc
adc
call
loop
mov
mov
out
jb
xor
cli
ret
gs
fldt
jbe
mov
stos
adc
fidivl
pop
aas
sahf
insl
add
pop
add
sub
fs
or
push
mov
pop
ret
adc
loope
jo
imul
xlat
stos
and
es
and
into
movsl
icebp
les
cld
dec
inc
loop
xchg
out
ss
outsb
enter
pop
pop
pushf
call
ja
repnz
xchg
mov
mov
dec
iret
je
xor
bound
mov
jbe
cld
or
adc
xchg
cmp
cwtl
or
adc
dec
and
cmp
pushf
movl
pushf
push
call
mov
jmp
pop
jp
inc
push
jbe
mov
jne
jae
adc
rcll
sar
inc
jne
mov
xchg
jle
xchg
or
rcr
imul
data16
xchg
sbbl
insb
inc
jecxz
nop
cmp
dec
out
test
add
addb
mov
inc
lds
stc
fwait
push
jae
leave
lock
daa
fimull
outsb
xchg
sub
push
lds
movsb
lea
jg
leave
inc
and
in
daa
sete
scas
pop
lea
jne
not
cwtl
test
ror
xor
shrd
bts
pushf
mov
add
test
stc
pusha
sbb
add
sar
rcr
inc
mov
jmp
mov
adc
aas
jb
mov
scas
sub
cmpsl
adc
fldcw
in
aam
loop
xchg
pop
sbb
lock
addl
pop
dec
cltd
mov
sub
scas
pushl
add
mov
xor
push
stos
mov
mov
js
cmpsl
mov
test
mov
cmp
xchg
test
pop
daa
stos
pop
cltd
mov
sub
pop
scas
adc
cltd
mov
in
add
xchg
popl
aaa
dec
inc
lcall
cltd
jecxz
into
sbb
cltd
shll
mov
fwait
mov
jmp
outsl
shl
cmpl
mov
in
cltd
pusha
mov
mov
cltd
enter
stos
out
jb
cltd
fidivl
push
cmp
das
out
or
js
fldcw
test
movsl
or
cltd
sbb
rcr
std
sbb
sbb
push
dec
jne
add
mov
jno
data16
xchg
enter
shr
insl
or
mov
cltd
push
pop
ja
test
jnp
out
jl
xchg
les
sbbb
jne
test
push
lret
mov
push
cltd
mov
in
sbb
inc
pop
fwait
or
fisttpl
jbe
xor
pop
add
ficoms
mov
popaw
sbb
call
mov
mov
mov
pop
cltd
sbb
in
add
cltd
pushf
jnp
out
insb
mov
mov
pop
push
sbb
cltd
pop
adcl
movsl
sbb
int
hlt
ficomps
pop
sub
cltd
mov
cmp
cltd
dec
daa
lds
cltd
cmp
rcpps
movsb
lcall
inc
movsl
xor
aad
and
hlt
pop
mov
cltd
out
pop
sbb
rolb
inc
mov
jmp
arpl
cmc
ds
out
scas
loope
lret
sarb
pop
sub
cltd
bnd
cmp
test
cltd
inc
add
dec
int3
movsl
cmpsl
xor
outsl
popa
in
outsb
and
aas
lds
and
int3
push
or
cld
lea
dec
int
fimull
mov
mov
push
insl
lret
add
xchg
sub
push
out
and
xchg
cltd
push
inc
nop
addl
loope
pop
in
xchg
test
gs
or
mov
lock
pop
shrl
push
and
lds
lret
pop
mov
jle
sti
jmp
push
rorb
cwtl
enter
xlat
add
jne
dec
or
xchg
fwait
mov
movsl
mov
mov
enter
dec
push
mov
cltd
ja
xor
cmpl
or
mov
cmp
cmc
bound
and
loop
mov
cltd
xor
jp
xchg
mov
stc
fidivrs
mov
mov
out
cmpsb
div
int3
popf
sar
daa
jae
add
adc
push
mov
lods
sub
insl
mov
js
iret
pop
pop
cltd
clc
movsl
je
in
xor
xorb
sub
scas
jl
or
mov
das
sti
sarb
mov
fcoms
mov
pop
and
stos
dec
jp
xchg
imul
loopne
adc
cltd
mul
push
test
push
loopne
imul
mov
jne
xlat
rcrb
jo
sbb
jns
mov
jnp
stos
mov
adc
xorl
xor
sub
fldcw
in
jmp
enter
pop
stos
dec
xadd
mov
mov
test
daa
fwait
iret
lea
jmp
mov
aaa
test
fistpl
ljmp
data16
cltd
xchg
fisubrs
cmp
cltd
pop
sbb
jmp
rclb
xor
pushf
or
cmpsl
pop
cmc
jge
add
stos
xorl
or
dec
mov
xorl
push
cmc
int
add
sbb
dec
pop
xchg
pop
imul
mov
movsb
cltd
push
js
test
cltd
stos
sub
mov
cltd
pop
int
pop
dec
das
and
daa
lods
fs
inc
shr
shrl
jo
push
and
mov
add
xor
xchg
sahf
subb
shll
shl
cltd
mov
cltd
push
insl
add
mov
jecxz
adc
dec
xor
xchg
push
jmp
jecxz
mov
cltd
insl
stos
and
jnp
dec
pop
test
adc
mov
xchg
js
rcrb
xor
dec
pop
and
mov
inc
mov
cltd
aas
pop
jg
inc
push
sbb
mov
jbe
mov
out
cltd
jne
and
mov
hlt
inc
arpl
cli
out
mov
adc
std
dec
sbb
jle
pusha
lea
sub
mov
loop,pn
cmp
add
jmp
dec
movups
fwait
xorb
and
inc
cmp
add
xchg
cmpsl
rorb
add
mov
dec
xchg
cltd
push
dec
sbb
sarl
or
and
in
data16
subl
in
sub
mov
mov
outsl
cltd
sub
sti
fnstenv
xor
cmc
cmc
fwait
mov
clc
dec
mov
push
mov
cltd
es
sbb
adc
or
xor
push
nop
sbbb
add
mov
pop
and
sbb
mov
push
push
cmpsl
es
sub
jmp
cmp
pop
fwait
pop
push
ret
enter
or
shufps
movsb
jb
pop
imul
and
cmp
add
movsl
inc
stc
pushf
scas
add
fdivrs
icebp
mov
dec
xchg
pop
fwait
mov
push
insb
add
fxch
push
fwait
call
pop
popf
movb
fidivs
jle
cltd
mov
cmpsl
mov
adc
mov
mov
mov
cltd
pop
ror
outsl
inc
sbb
dec
pop
push
test
mov
lret
sub
xchg
sti
mov
data16
subb
dec
mov
pop
imul
mov
fst
sahf
shl
pop
shll
in
je
inc
test
mov
jl
cmpsb
mov
mov
bound
test
adc
mov
or
xor
jmp
fwait
xchg
push
js
repnz
or
aam
out
and
test
mov
ret
loopne
lds
pop
jmp
imul
repnz
or
sbb
stc
push
cmp
push
shll
mov
xchg
sbb
push
in
jne
rorb
loop
cmpsl
mov
push
out
dec
and
add
movsl
into
aaa
es
orl
leave
add
mov
lods
mov
inc
cmp
dec
shl
push
add
sub
pop
in
jge
sub
popa
mov
mov
cmpsl
jnp
push
pop
jns
jns
rcrb
pop
imul
fidivrl
inc
scas
inc
mov
mov
mov
jmp
dec
sbb
sub
sbb
adc
dec
cmpsb
daa
test
push
ljmp
mov
imul
dec
pop
mov
stos
pop
fdivs
mov
mov
lods
dec
mov
movsl
pop
and
push
scas
das
mov
mov
mov
dec
imul
jne
loop
stos
jne
test
sarb
sub
push
sbb
jg
add
mov
add
pop
mov
cmp
inc
rcrb
mov
flds
push
jmp
or
jns
stos
out
mov
inc
out
and
dec
jnp
in
mov
aas
cld
mov
test
lcall
add
imul
lcall
dec
mov
js
mov
into
cltd
ljmp
or
repnz
rolb
pop
push
add
sub
test
shl
pusha
outsb
mov
jne
fwait
cwtl
lcall
gs
imul
jns
jns
wrmsr
addr16
sbb
sub
xchg
lds
imul
dec
and
test
mov
jbe
mov
or
add
dec
mov
or
pop
fabs
mov
addr16
je
mov
sub
pusha
jle
ret
lds
leave
mov
imul
jmp
pop
testl
mov
jns
mov
shll
sbbb
outsl
inc
mov
nop
sbb
pop
pusha
jbe
int
jns
sbb
fcompl
imul
xchg
sub
adc
pop
fdivrl
adc
sub
sbb
ficompl
add
push
testb
xchg
xor
lds
cltd
fdivrl
pop
adc
cltd
inc
mov
adc
jno
push
rolb
cltd
sbb
dec
mov
jns
pop
dec
mov
imul
stos
cltd
fwait
pop
pop
ja
push
inc
mov
cmpsl
adc
jae
push
inc
mov
mov
pop
dec
mov
jns
or
xchg
pop
cmpl
pop
insl
lods
jge
or
arpl
inc
adc
mov
inc
adc
cmpsl
ja
pop
cltd
inc
pop
push
movsl
jne
add
pop
fwait
imul
pop
fwait
movsl
cmpsl
mov
scas
test
mov
mov
mov
inc
movsl
dec
dec
dec
dec
cltd
push
push
push
push
mov
mov
xchg
loopne
mov
inc
pop
cltd
or
fwait
cmpsl
stos
inc
mov
lods
dec
loopne
dec
bound
cmp
flds
mov
mov
sbb
cmpsl
icebp
mov
dec
inc
pop
push
loopne
rcll
movsl
cltd
imul
arpl
pop
imul
fwait
add
add
mov
mov
mov
mov
cmpsl
mov
mov
stos
fldcw
movsl
out
imul
or
xchg
mov
scas
push
sub
mov
push
mov
mov
in
insl
scas
in
adcb
mov
mov
dec
scas
stos
mov
fcompl
test
roll
mov
mov
mov
cwtl
cmp
jge
push
pushf
cmp
sbb
add
fucom
lcall
dec
js
mov
popa
cmpsl
bound
imul
insb
out
mov
xchg
add
rclb
shr
cmpsb
sbbb
ds
fmul
xor
mull
xor
lods
add
add
shl
adc
arpl
cmp
inc
xchg
lahf
mov
sbb
cmpsb
xor
negl
fwait
repnz
adc
cmpsl
ss
or
in
mov
rcl
push
stos
rcrb
push
mov
mov
mov
xchg
push
adc
fs
jmp
pop
mov
repnz
rcll
rorl
mov
jge
mov
xchg
xchg
orb
push
imul
scas
clc
xchg
enter
mov
stos
jbe
mov
loopne
cmp
mov
loopne
ret
push
enter
mov
adc
lahf
and
scas
inc
or
mov
dec
stc
and
imul
jne
dec
in
sub
pop
pusha
inc
fsubrs
cmpsl
or
and
out
movsb
fstps
sub
dec
push
pop
inc
lds
test
and
sbb
movsl
mov
inc
loop
sub
push
xor
xchg
mov
pop
cmpsl
jns
jge
fs
sub
lret
js
inc
call
mov
adc
popa
cwtl
jae
int
mov
loop
test
cmpsb
xor
pop
rcr
xchg
mov
cld
ljmp
xchg
adc
jo
add
pushf
adc
dec
cltd
daa
enter
into
hlt
call
xor
popa
in
pop
nop
sub
adc
add
pop
rolb
or
pop
jnp
pop
inc
sbb
jno
in
sub
insb
rolb
dec
jl
insl
cmp
push
loop
fiaddl
dec
push
stos
pop
inc
inc
pop
dec
jae
sbb
lods
inc
dec
popa
jge
jae
dec
xor
movsl
in
jp
ret
ja
mov
dec
call
test
lock
push
cwtl
jg
sub
lcall
inc
hlt
jg
add
mov
cmp
fldenv
mov
mov
rorb
mov
clc
call
cld
out
add
addr16
xchg
mov
xchg
mov
adc
outsl
movsb
pop
mov
in
repnz
inc
pop
inc
mov
push
ljmp
pop
daa
or
loop
xor
lock
cld
sub
in
sbb
mov
xor
and
mov
fbld
repnz
cmpb
cmpl
fadd
mov
movl
ret
cmp
add
mov
mov
loopne
mov
and
cmpsb
mov
mov
and
bswap
ja
sti
mov
test
pop
js
inc
pop
mov
call
sub
into
stc
pop
inc
add
xchg
aas
fdivs
ss
xor
jge
adc
fcoml
mov
xchg
fmul
fstps
shrl
dec
test
stos
adc
pop
scas
stc
mov
sub
xor
push
sub
lock
dec
sub
adc
mov
fimull
xchg
mov
xor
imul
cld
sbb
adc
pop
push
pusha
add
shlb
add
jg
sub
enter
ljmp
xacquire
pop
rcr
aad
inc
hlt
pop
outsl
mov
ljmp
mov
pop
adc
add
ret
sub
stos
xor
inc
gs
and
pop
or
fcmove
cld
loop
dec
je
popa
addb
mov
jae
stc
idivb
mov
out
test
sub
lahf
pop
and
faddl
rcrl
dec
sbb
pop
sub
loop
sub
pop
mov
mov
pop
clc
dec
hlt
mov
adc
cmp
je
inc
dec
sub
push
fstps
push
pop
ret
aas
pusha
lret
sub
adc
bound
jno
sub
jns
test
adc
shl
adc
jns
stos
push
push
pop
inc
or
and
cld
out
loop
cltd
mov
mov
sbb
ljmp
adc
sub
adc
popa
xor
push
dec
fisubrl
rorb
inc
xor
cli
cmp
sub
mov
jns
jecxz
cwtl
and
sub
ljmp
dec
das
arpl
or
sub
sbb
out
loop
cmp
and
rcrb
and
mov
mov
sub
add
mov
dec
sbb
sbb
or
push
mov
cmp
jns
inc
pop
mov
pop
aad
sub
pop
dec
test
sbb
stos
bound
shrl
push
pushfw
repz
jb
mov
push
pop
jl
pop
les
mov
mov
lcall
in
pop
push
dec
enter
fisttps
cmp
inc
jle
mov
ja
inc
rclb
out
cmp
mov
add
lods
jo
mov
out
sub
mov
mov
jmp
or
adc
pusha
dec
int
test
movsl
fisubs
sub
mov
xor
sbb
and
add
sarb
and
outsb
sub
dec
mov
sub
and
mov
inc
inc
pop
push
and
das
adc
jge
daa
sbb
imul
xchg
ret
fwait
enter
popa
pushf
sub
mov
iret
dec
out
mov
stos
mov
gs
repnz
mov
dec
mov
xor
call
leave
and
mov
jno
pop
cmp
popf
fnstcw
and
int3
dec
mov
mov
insl
cltd
mov
adc
lret
sbb
add
mov
les
fdivrl
movsl
nop
and
add
xor
cmp
imul
dec
popa
leave
movb
addb
call
aaa
pop
loopw
jno
stc
jo
jns
bound
aas
fsubr
enter
jnp
mov
inc
mov
xlat
and
test
sub
sub
pop
inc
mov
adc
dec
cmp
aaa
sub
lock
adc
jecxz
add
jge
lock
sbb
lahf
and
mov
dec
test
sub
pop
cltd
ret
cld
and
cmp
cmc
inc
mov
xchg
cmp
jae
jmp
cmpsl
fiaddl
pop
mov
dec
in
cmpsl
icebp
gs
lea
xchg
sbb
jbe
sti
mov
and
lcall
mov
push
call
outsb
mov
gs
and
xor
sti
out
mov
mov
sbb
dec
mov
in
popa
xchg
xchg
adc
cmc
push
and
test
add
mov
dec
rcrb
lcall
gs
and
shr
dec
fwait
fwait
mov
pop
xor
cmp
addb
pop
cld
inc
loop
adc
imul
push
repnz
jne
fwait
sub
jg
and
imul
shll
push
jnp
sbb
out
outsb
inc
sbb
mov
ss
push
loop
cmpl
js
pop
xor
or
ficompl
arpl
sbb
jae
pop
leave
cltd
xor
add
mov
add
mov
mov
adc
pop
test
call
pop
mov
gs
xlat
imull
dec
dec
mov
cltd
pop
in
mov
imul
xor
pop
shrb
lret
and
mov
cltd
fwait
jl
mov
inc
mov
sub
mov
push
add
insb
mov
into
pop
xchg
sub
mov
or
test
gs
mov
sbb
pusha
sbb
adc
mov
gs
add
rolb
sub
out
lock
out
lock
in
insb
out
lcall
gs
sbb
mov
sbb
or
imul
xor
mov
and
lret
jp
imul
rol
jno
fstps
mov
jae
jge
push
push
or
scas
dec
mov
jne
test
fbld
lahf
lock
xor
mov
stos
loop
mov
int
sbb
out
stos
adc
sbb
cmp
dec
lcall
sub
or
cmp
ficompl
xchg
adc
stos
aas
mov
mov
push
dec
inc
jns
sub
xchg
add
popa
icebp
int3
cmp
mov
jge
stos
fs
dec
iret
inc
jmp
inc
sub
call
cmp
dec
fsubrl
lock
mov
dec
or
dec
add
mov
inc
mov
xchg
test
fwait
cmpsl
or
push
xor
imul
sbb
add
pop
ds
sub
xor
lods
aas
jg
jnp
xchg
mov
cs
jg
pop
and
push
gs
mov
push
inc
xor
cmp
cltd
jb
add
dec
pushf
fimull
cmp
fwait
dec
mov
mov
test
mov
cmp
push
rorl
xor
pop
in
inc
int
pop
loopne
mov
popa
jo
sub
mov
mov
cmp
xor
sub
daa
xor
cmp
outsb
rorb
sarb
cmp
sub
pop
xor
jae
dec
pop
popa
jno
stc
inc
cwtl
sub
mov
xchg
test
in
dec
mov
aad
and
fdivrs
lock
and
popa
xchg
test
and
xor
stos
xor
jmp
cmp
pop
jle
add
jnp
nop
mov
hlt
cmp
jp
xchg
dec
fwait
sub
imul
mov
gs
xor
call
xchg
fucomi
jnp
or
jns
cmp
xor
lret
movsl
mov
pop
sbb
xor
mov
inc
cld
mov
add
cmpsb
cmp
lock
mov
cmp
cmp
cmp
popa
or
adc
insl
add
in
enter
cmpsl
mov
movsl
lret
dec
stos
scas
inc
pop
add
insl
cmpsl
pop
call
pop
xor
andb
and
sbb
xor
xor
xor
dec
lret
adc
pop
stos
je
shll
mov
add
shlb
mov
addb
loop
loopne
imul
popa
mov
mov
cwtl
fcompl
xchg
pop
scas
sub
jo
pop
push
dec
imul
daa
xor
sub
sub
jnp
adc
sbb
xchg
stos
push
in
pop
jmp
test
std
call
outsb
daa
fists
adc
insl
mov
jl
and
int
clc
fsubrs
push
mov
add
pop
out
sub
clc
sub
roll
push
bound
in
and
or
sbb
loopne
les
push
adc
into
add
aas
add
cmp
popf
mov
nop
jb
push
enter
lret
movb
in
mov
in
fiaddl
dec
hlt
pop
pop
jno
sqrtps
ljmp
pop
nop
xchg
cmp
add
call
enter
cs
inc
push
push
jmp
lcall
nop
popa
mov
dec
mov
gs
mov
pop
adc
stc
mov
and
andb
lret
lret
stos
mov
mov
jns
stos
sarl
test
call
adc
push
popa
rolb
push
mov
loopne
cmp
test
gs
cmp
lock
sbb
mov
pop
pop
mov
cmp
or
call
into
inc
adc
sub
push
aad
cmp
sub
inc
xchg
fldl2t
xchg
inc
dec
xchg
cmp
fwait
aas
flds
outsl
test
and
xor
sbb
scas
mov
repnz
xchg
sbb
andb
xchg
xchg
jg
pusha
mov
stos
cmpsb
xchg
dec
jp
cwtl
fstps
aas
jnp
xchg
test
jp
dec
inc
jns
out
jecxz
sub
popa
mov
sbb
xor
sbb
lock
addb
inc
mov
loopne
rcrb
and
mov
pop
sbb
test
sub
lock
xchg
into
loop
xchg
movsb
mov
enter
add
mov
movb
sbb
mov
sbb
fidivrl
test
xacquire
hlt
push
cmp
mov
push
decb
dec
daa
add
sbb
pop
inc
sbb
test
xor
mov
cwtl
push
push
mov
out
xor
add
pop
dec
lods
dec
movsl
ds
clc
dec
dec
rolb
outsl
lods
mov
popa
lret
cmp
mov
and
jns
jmp
scas
shrb
mov
ds
jecxz,pn
dec
cmp
or
push
nop
cmpsl
xchg
and
imull
mov
mov
add
imul
xchg
and
fwait
cmp
fldt
addl
xor
cmp
aaa
and
lock
add
jnp
fisubrs
sbb
scas
sub
into
cmp
sbb
cmp
dec
xor
push
sbb
pop
shlb
nop
sbb
pop
xchg
fisubs
mov
inc
cmpsb
mov
das
mov
xor
cmp
jns
out
inc
jae
rclb
mov
sub
mov
mov
lock
imul
pop
imul
push
pop
lock
push
mov
mov
ljmp
or
call
inc
add
test
jl
pop
and
lock
popa
cmp
cmp
add
mov
sbb
push
nop
or
sbb
lret
loopne
jnp
mov
ds
xchg
or
sbb
push
rol
popa
addr16
jp
jle
and
jle
ja
cld
push
add
jl
fisubrs
lods
cmp
int
filds
ja
xor
or
xchg
ret
gs
cwtl
aam
jno
push
fisttpll
rcr
sbb
mov
jno
in
lods
fcomip
out
cmpsb
arpl
arpl
mov
sbb
les
jmp
cmp
push
daa
ja
fs
out
xor
cld
test
dec
and
add
ret
adc
movsl
sbb
xor
xor
sbb
or
out
hlt
leave
mov
gs
push
and
stc
enter
and
dec
jl
jl
adc
adc
or
mov
jge
add
sub
jo
jle
add
adc
int3
test
stos
fimuls
pushf
sbb
cld
aaa
xchg
nop
imul
call
mov
je
push
inc
clc
call
dec
cmp
fisubs
inc
lcall
sub
mov
mov
fidivl
fs
adc
lock
jg
addb
jns
test
in
inc
pushf
andb
out
cs
cmp
imul
xor
push
ret
aam
outsl
and
rcr
cmp
cld
sbb
sub
sub
mov
pusha
fildl
test
xchg
mov
stos
gs
repz
fidivrs
xchg
mov
pop
jl
add
das
dec
and
mov
or
leave
mov
ja
lock
jp
sbb
mov
cli
aas
xchg
rcr
cltd
in
adc
jb
sbb
mov
add
mov
jecxz
and
adc
jne
dec
pop
addr16
loope
cwtl
and
cmp
mov
add
sbb
fldcw
push
scas
stos
jl
dec
jp
or
add
mov
dec
add
les
lret
mov
das
stos
movsl
sbb
cmp
popf
fsubl
shlb
add
cltd
mov
cmp
jae
cltd
ja
cs
sbb
add
sbb
mov
mov
fldenv
adc
and
push
out
dec
aaa
adc
mov
dec
sbb
or
aas
mov
cmp
jb
fwait
ja
mov
cmpsl
mov
daa
lods
test
stos
scas
loope
pop
pop
mov
mov
xor
mov
lea
inc
xchg
inc
scas
loope
pop
pop
inc
mov
xor
daa
dec
test
rclb
mov
aaa
insl
jns
pusha
mov
movsl
scas
loope
pop
pop
mov
lods
xchg
into
scas
js
test
add
adc
mov
stos
mov
cwtl
dec
fistpl
mov
jge
scas
jle
or
repz
fwait
mov
dec
pop
clc
mov
dec
xchg
sbb
xor
push
out
cmp
leave
jae
dec
test
mov
lret
insl
mov
arpl
sbb
sub
mov
stos
add
inc
sbb
push
into
inc
lock
out
movhps
pop
shlb
cld
sub
ja
addb
or
sbbb
data16
mov
and
out
dec
aam
cmpsb
push
mov
mov
out
imul
test
test
mov
sti
mov
nop
add
sbb
xchg
inc
add
pop
cltd
icebp
orl
outsb
mov
arpl
dec
clc
sbb
movsb
sti
pusha
stc
adc
mov
push
adc
jnp
outsl
xor
push
sbbl
int3
fdivrl
cmp
lock
dec
add
aas
mov
jb
test
jl
stos
shlb
and
test
add
sbbb
es
imul
mov
mov
inc
sbb
sbb
sbb
inc
pop
cmp
or
pop
aaa
paddusb
fisubl
mov
pop
sbb
sbb
cmp
sbb
mov
stos
inc
cwtl
std
dec
jl
imul
mov
and
repnz
lods
xchg
clc
xor
push
pop
mov
lds
xor
xor
and
cmp
out
aas
sub
mov
leave
pop
scas
sarb
or
int3
test
inc
mov
fdivp
mov
sub
daa
popa
mov
lock
test
out
shlb
ljmp
repz
ja
ljmp
mov
movsl
popa
cli
daa
cltd
out
sub
sbb
cli
jnp
in
add
pop
fiaddl
sub
cwtl
addr16
mov
dec
cmpsb
cmp
mov
test
mov
out
test
xchg
ficomps
mov
out
add
shrb
mov
cmp
xor
inc
mov
mov
test
push
inc
pop
addl
and
cli
jnp
dec
test
jge
pop
rcr
sarb
push
cltd
mov
dec
sbb
pop
dec
mov
push
adc
popf
dec
andl
mov
clc
mov
or
clc
jmp
push
xchg
push
mov
or
lock
popf
mov
cmpb
sbb
in
mov
ret
nop
push
add
cmp
cs
inc
nop
je
shlb
mov
cmp
pop
cmp
xor
xor
cli
shll
mov
ja
leave
clc
cmp
xor
push
sbb
lret
sub
shl
ret
sarl
shll
jge
movsl
pop
jecxz
jmp
ja
in
cmp
sbb
das
cmc
lcall
sub
pushf
xchg
mov
lods
fisubs
adc
jns
mov
movsl
mov
adc
dec
add
dec
pop
out
call
mov
enter
pop
popf
mov
push
pop
inc
fwait
xchg
test
and
test
mov
mov
push
dec
sub
sti
out
test
and
pop
xor
add
mov
stos
pop
mov
sbb
enter
pop
rorb
xor
xor
xor
sub
cmp
push
lds
mov
stos
loope
xor
mov
stos
movsl
lods
adc
push
arpl
push
pop
loope
fdivr
stos
dec
pop
mov
mov
jnp
pop
outsb
sti
mov
fsubl
inc
stos
pop
lods
adc
je
call
mov
lea
push
mov
stos
sti
insl
xor
mov
mov
mov
jge
sti
mov
mov
mov
mov
outsl
sbb
mov
mov
add
mov
rcrb
cs
gs
pop
adc
bound
shlb
sbb
cmpsl
push
add
sbb
push
aas
pop
cli
stos
and
sub
cmp
test
dec
test
pop
test
mov
cmp
mov
enter
stos
pop
int
clc
jno
xor
test
stos
or
xor
cmc
fdivrs
jge
jns
andl
mov
stos
stos
lods
cmpsl
popa
sbb
loope
adc
push
fldenv
addb
arpl
in
movsb
mov
ljmp
push
mov
pushf
fcoms
jnp
scas
sub
movsb
mov
lea
jo
mov
rcrl
mov
mov
inc
mov
fwait
cmpsl
movsl
js
imulb
testl
lahf
dec
cmp
push
mov
test
sub
dec
lods
sub
test
mov
mov
sbb
mov
inc
lcall
addr16
mov
dec
cld
dec
dec
test
fs
dec
push
sbb
push
loope
cld
pop
or
pop
mov
gs
insl
and
imul
ja
das
jno
jae
jge
jg
jns
jnp
add
add
mov
or
or
adc
adc
mov
sbb
push
daa
mov
and
mov
xor
push
xor
cmp
cmp
cmp
or
push
ret
les
mov
int3
cld
or
push
shlb
loopne
fdivrl
out
call
test
inc
mov
lock
ljmp
imulb
dec
repnz
add
inc
movsl
movsb
das
cli
addr16
mov
cmp
or
mov
mov
xchg
cld
xchg
or
into
lcall
test
fsubl
scas
mov
mov
stos
mov
mov
push
mov
adc
addr16
loope
cld
inc
or
push
mov
dec
test
dec
mov
push
cld
push
or
pusha
pop
push
pop
mov
data16
push
test
mov
push
fsubrl
jbe
test
addr16
jle
sbbb
jp
test
or
push
sub
nop
loop
add
push
sbb
push
sub
fcompl
or
mov
sub
and
cs
xor
test
push
mov
test
inc
inc
xor
sub
test
cmp
lds
mov
shr
ret
test
inc
lcall
lret
test
xor
loope
cld
fisttpll
fists
pop
inc
and
jecxz
pop
pop
loope
nop
jecxz
addr16
mov
gs
mov
icebp
jo
repz
or
mov
ja
leave
dec
test
addl
cmp
mov
loop
add
push
xchg
mov
xchg
ja
mov
lcall
mov
mov
ss
inc
sbb
daa
dec
addr16
mov
sub
test
or
inc
addr16
mov
dec
mov
loope
cld
dec
or
push
mov
push
addr16
mov
and
xor
imul
jno
jae
jge
das
jg
jns
jecxz
add
push
add
dec
pop
xor
loope
cld
adc
mov
adc
mov
jecxz
add
push
and
das
sub
xor
or
push
cmp
cmp
cmp
cld
enter
les
lret
loope
cld
fmuls
rclb
mov
fiadds
cmp
test
mov
loop
das
in
out
mov
in
cld
testb
xor
repnz
test
cli
fdivr
dec
test
imul
mov
inc
and
test
das
cwtl
addr16
dec
xchg
sbb
test
lcall
mov
movsb
cld
scas
or
lods
addr16
mov
cld
mov
std
dec
test
das
dec
addr16
mov
push
cld
dec
or
or
push
mov
push
addr16
mov
inc
sub
pop
or
pop
push
cmp
test
adc
frstor
das
addr16
xor
mov
nop
mov
push
in
sub
addr16
or
push
cld
sbb
adc
mov
push
and
sbb
loop
add
push
and
jns,pn
xor
dec
sub
cld
cmp
xor
mov
imul
add
mov
inc
dec
dec
test
jecxz
add
xor
loope
imul
mov
jmp
cmc
xor
mov
icebp
adc
aas
jno
dec
and
scas
test
dec
test
add
xor
mov
mov
pop
call
popf
push
lahf
mov
fwait
aas
xchg
adc
inc
pop
mov
sbb
loopne
pop
gs
cltd
sub
adc
or
in
pop
fstps
sbb
fwait
add
out
jl
sbb
push
mov
jmp
inc
sbb
jae
cmpb
ljmp
jle
imul
cmpsl
in
stos
rclb
jmp
in
push
nop
enter
or
push
loope
xchg
or
fwait
xchg
or
sti
inc
adc
inc
jbe
sqrtps
mov
xchg
mov
fwait
cmp
jbe
pop
stos
loopne
lcall
imul
out
test
mov
js
lock
inc
fnstcw
add
lcall
mov
sbb
and
dec
sbb
sub
lock
pop
pop
sbb
or
sub
pusha
mov
jae
test
pop
imul
or
mov
popa
subb
adc
jne
cltd
stc
pop
sahf
movsl
add
cltd
pop
pop
aad
sub
lcall
dec
push
and
sahf
xchg
inc
sbb
push
lret
rol
jnp
sbb
rol
sbb
cmp
mov
adc
dec
push
lock
or
das
jo
xor
mov
mov
jmp
pusha
shl
mov
mov
aas
mov
cmp
aad
xor
pop
inc
or
mov
out
jo
shlb
and
inc
dec
nop
and
mov
lock
inc
sub
lock
shrb
nop
rorb
mov
rolb
pop
rcrb
aam
inc
inc
xor
inc
sbb
cltd
jo
mov
mov
inc
jno
adc
sbb
fxam
nop
add
lcall
loopne
les
xor
imul
mov
mov
inc
and
dec
pop
inc
cmp
dec
adc
inc
rol
sarb
and
inc
mov
sar
fsts
xor
sti
mov
xor
mov
inc
test
inc
add
mov
inc
rol
mov
inc
and
mov
cmp
lcall
cmp
imul
and
loopne
nop
pop
sbb
mov
inc
cwtl
jns
jmp
push
add
lcall
pusha
std
test
inc
xor
inc
imul
pusha
adc
xor
pop
pusha
out
pop
jnp
mov
cmp
sbb
loop
stos
adcb
inc
dec
adc
sbb
inc
repnz
and
xor
out
subb
sbb
push
adc
cmp
stos
rolb
icebp
sbb
lock
inc
sub
add
pop
stc
mov
test
cmp
test
sub
jns
fcomip
test
dec
mov
imul
add
lcall
pop
cltd
test
pusha
sub
cmp
shlb
sbb
rcl
cmp
and
fs
movb
sti
rclb
push
and
inc
sub
cmp
mov
inc
pusha
cmp
dec
push
test
dec
mov
adc
das
push
inc
and
inc
dec
inc
cmp
inc
lods
xor
and
stos
mov
cmp
addr16
sbb
dec
lods
or
pop
lock
pop
sbb
mov
sarb
loope
xchg
movsl
xor
push
inc
pop
pop
outsb
sarb
dec
push
test
sbb
rcl
addr16
xor
inc
ds
push
aad
sub
cmp
mov
mov
lahf
add
pop
dec
add
lcall
push
in
pop
repz
movsl
and
dec
inc
xor
ds
dec
arpl
add
xor
imul
jecxz
xchg
mov
xor
pop
mov
pop
push
leave
shll
push
xor
or
inc
imul
leave
rcrb
outsb
leave
and
cli
mov
bound
sub
mov
mov
cmp
cli
leave
push
cltd
mov
stc
jo
lods
dec
inc
leave
aas
leave
xor
sub
lock
and
inc
stos
imul
mov
cmp
mov
nop
push
lock
sbb
jmp
test
pop
mov
xor
mov
cwtl
das
push
inc
and
inc
dec
mov
icebp
inc
lods
mov
mov
cmp
and
push
inc
dec
and
and
or
adc
and
inc
loop
pop
lock
rorb
adc
loop
pop
lock
mov
movsl
and
inc
mov
xor
add
adc
inc
ds
orb
outsl
pusha
sub
inc
inc
lock
inc
cmp
test
cltd
addr16
loope
cmp
test
and
mov
lock
push
inc
inc
jns
hlt
leave
ja
or
ljmp
aad
sub
or
shrb
aas
and
jns
push
imul
and
das
push
inc
and
inc
dec
fnstcw
icebp
inc
lods
xor
and
xor
and
pop
daa
fstpt
push
pop
inc
cmp
js
icebp
add
jnp
aam
shrb
pusha
stos
mov
fs
scas
ja
inc
shr
inc
stc
inc
sub
mov
mov
bound
inc
mov
ds
ja
inc
lock
inc
and
imul
pop
xor
arpl
cltd
xor
fwait
and
add
jl
adc
mov
inc
addl
rol
mov
shlb
stos
or
mov
test
mov
pop
or
sub
jns
inc
or
mov
mov
push
jno
mov
mov
sub
shlb
lods
shlb
in
test
mov
mov
popa
fnstcw
jl
inc
imul
addr16
pushf
out
sub
sub
sub
sub
sub
stc
push
sub
adc
mov
fsts
add
push
push
xor
and
sbb
nop
mov
adc
mov
pusha
adc
mov
and
mov
loope
adc
cli
leave
push
xor
pushf
jbe
mov
shl
cmp
shlb
xor
imul
adc
sub
shl
test
in
dec
addr16
and
stos
addr16
mov
jge
mov
or
popa
xor
gs
clc
mov
pusha
mov
mov
in
jp
jo
loopne
stos
movsl
inc
sbb
sub
mov
mov
mov
inc
mov
mov
ja
mov
or
popa
ret
ror
leave
push
stos
mov
nop
xor
add
outsb
xorb
js
add
sbb
adc
cltd
out
nop
mov
push
in
sub
addr16
xor
jb
fdivrl
clc
mov
cld
add
cmp
jp
je
mov
pusha
fwait
cmp
shrb
jns
cmp
shlb
loopne
das
andb
cmpsl
rorb
xlat
lods
mov
xor
dec
imul
sbb
loope
setge
in
add
movsl
add
lock
loopne
dec
mov
pusha
test
push
subb
shrb
fwait
dec
inc
jns
xorb
mov
cmp
icebp
jmp
pusha
test
and
sub
mov
cmc
lock
mov
cmp
shrb
fadd
cmp
jns
and
f2xm1
pop
stc
xchg
cmp
dec
fwait
mov
rcl
mov
pop
scas
test
mov
mov
imul
cmc
mov
mov
fnstcw
ljmp
imul
in
jl
sub
pop
sbb
jl
and
jnp
das
mov
mov
les
imul
or
ds
sub
fldenv
push
pop
imul
jns
aad
sbb
mov
and
inc
daa
int3
test
push
hlt
imul
jecxz
imulb
fabs
inc
pop
and
imul
test
hlt
pop
push
loope
addr16
movsl
add
mov
and
lret
sub
imul
mov
push
xor
dec
add
mov
and
lock
rcll
mov
jmp
xchg
adc
mov
mov
add
popa
mov
mov
mov
mov
mov
mov
push
movsl
mov
push
btc
sarb
jb
loop
jno
nop
mov
loope
pusha
mov
mov
cmpsl
popa
xor
inc
mov
jo
inc
test
push
mov
imul
push
xor
jno
sub
mov
enter
mov
lahf
addr16
loope
and
fsubl
mov
outsl
inc
and
or
pop
or
and
mov
jmp
stc
sub
out
sub
test
or
mov
mov
nop
sub
divb
xchg
repz
pusha
aaa
mov
pusha
les
xlat
mov
mov
std
push
cltd
mov
call
loope
adc
fistl
push
mov
mov
push
xor
mov
push
push
xor
and
orb
mov
adc
mov
icebp
adc
mov
mov
and
arpl
adc
sub
test
test
xor
jo
mov
lock
fisttps
jmp
sub
mov
adc
faddp
sub
sub
mov
xor
je
cmp
enter
lock
adc
test
shrb
rol
add
andb
pop
xor
mov
mov
mov
decl
daa
in
jns
sbb
mov
lock
dec
test
push
xor
loope
cld
fwait
arpl
idivb
test
call
in
and
inc
js
cltd
and
test
shlb
test
dec
mov
pop
cli
stc
push
sbb
mov
cmp
jno
in
cmovne
adc
sub
popf
das
push
lds
adc
pop
fistpl
loop
mov
inc
xchg
jb
call
pop
xor
adc
and
mov
imul
sar
pusha
btl
fwait
nop
leave
mov
sbb
fmuls
xchg
lods
jmp
jmp
inc
stc
repnz
fdivrs
out
daa
stc
mov
sub
jo
out
sub
mov
jp
cmpl
jb
xchg
sub
inc
mov
push
lea
outsb
mov
and
sub
sub
mov
xor
mov
jmp
and
sbb
mov
dec
addr16
pop
sbb
cmp
sarb
fwait
mov
test
das
cltd
imul
addr16
mov
add
movsl
inc
imul
loopne
jns
rcrb
nop
lods
mov
mov
jecxz
add
inc
adc
aas
mov
lret
jns
inc
mov
jo
jg
das
fstpl
mov
lods
inc
stos
mov
cs
fdivs
sbb
add
push
pop
mov
addb
fidivrs
fldcw
xchg
or
fcomps
cmp
test
xor
lcall
test
mov
call
mov
fs
hlt
test
cmp
mov
adc
jl
add
sbb
sub
cmp
lock
sub
add
mov
cmp
shrl
test
mov
fsubl
sub
pop
loope
nop
mov
inc
sbb
clc
call
sbb
add
fwait
mov
sub
pusha
mov
outsb
xor
mov
test
stos
cmp
mov
adc
aas
pop
inc
into
sub
and
or
sahf
cmp
mov
mov
rcrl
xchg
imul
mov
dec
push
sti
mov
jmp
or
test
inc
sarb
out
sub
mov
aam
in
xor
cltd
mov
xchg
imul
imulb
push
jp
sbb
add
subl
call
imul
bound
adc
js
daa
push
inc
gs
add
and
fistps
mov
xchg
mov
pop
loopne
cli
icebp
xor
test
addr16
xor
push
xor
inc
fldenv
mov
add
or
sbb
ds
mov
mov
adc
pop
or
add
push
jo
loope
ja
and
das
mov
fwait
stc
jmp
xor
repnz
or
add
pop
sarb
inc
sbb
adc
lret
sub
imul
mov
push
xor
sbb
lea
mov
popa
fsqrt
add
jns
adc
and
test
cmp
lret
xor
clc
jg
cltd
addr16
dec
xor
mov
lds
jne
sub
dec
imul
mov
aad
loope
std
push
cmp
sbb
mov
mov
sub
sbb
push
pop
mov
add
mov
mov
add
pop
inc
adc
adc
test
movsl
and
fwait
stos
shl
cli
mov
andb
mov
and
mov
cltd
addr16
push
mov
cli
rcll
imul
mov
push
xor
loope
sub
leave
daa
test
adc
imul
fsin
cmpb
ret
adc
inc
jns
ds
aad
test
mov
mov
inc
mov
push
addr16
mov
adc
and
xor
mov
fsubs
mov
cwtl
cld
test
mov
pop
addr16
loope
cld
sub
cmp
mov
shll
mov
xchg
cli
mov
das
inc
addr16
mov
int
sbb
xchg
jnp
in
cltd
data16
shlb
imul
test
mov
mov
mov
mov
adc
test
pop
sub
stc
leave
mov
mov
test
mov
adc
outsl
cltd
mov
inc
xchg
adc
fdivrs
or
inc
sbb
mov
cltd
addr16
addb
adc
sub
rol
imul
bound
mov
xchg
adc
adc
xor
sub
xor
xor
cmp
test
addr16
je
nop
test
xor
cld
insb
or
push
adc
das
xor
mov
stc
cld
xchg
or
addr16
mov
or
push
enter
addr16
movsb
cld
rorb
push
pop
mov
js
or
xlat
push
pusha
mov
leave
mov
push
mov
mov
imul
mov
mov
xor
sub
test
mov
sub
sub
movsl
mov
inc
pusha
fwait
cmp
jns
sbb
and
lret
xor
or
mov
sub
fcompl
cmp
das
fsubs
mov
test
mov
push
push
pop
mov
js
add
and
sub
sar
or
push
test
das
mov
popa
cld
jge
or
imul
fwait
stos
xor
lock
nop
dec
fbstp
mov
push
adc
shlb
loope
adc
mov
mov
test
fwait
mov
mov
mov
mov
mov
push
movsl
stos
mov
push
bound
dec
shlb
adc
arpl
imulb
cmp
dec
shrl
addl
sti
mov
xor
pop
mov
push
cmpsl
mov
in
sub
cmp
shlb
cli
sub
or
clc
jecxz
jno
nop
mov
mov
rclb
jns
jo
imul
inc
or
inc
mov
out
lret
btc
mov
adc
imul
loope
sub
frstor
sub
jo
pop
adc
jns
fcoms
add
pop
push
lods
stos
sub
imul
mov
aas
fnstenv
cmp
mov
in
xor
jns
addr16
mov
nop
mov
jg
cmpsl
inc
adc
and
ret
adc
imul
cmp
dec
loopne
xor
cmpsb
mov
fwait
lock
push
jno
shlb
loope
adc
mov
rcll
sub
sub
sub
mov
mov
mov
push
movsl
stos
mov
lock
test
imul
cmp
imul
cltd
mov
cltd
sub
daa
inc
fbld
loope
mov
nop
sub
mov
mov
push
movsl
stos
push
push
xor
js
mov
mov
test
cmpsb
or
mov
mov
mov
or
das
cmp
mov
xchg
add
sub
push
sub
pop
cmp
mov
or
stos
sub
mov
adc
scas
adc
call
mov
mov
imul
iret
xor
pop
stc
sbb
addr16
sti
push
in
sub
add
pusha
inc
xor
dec
lods
push
mov
test
sub
test
inc
jb
call
sbb
sub
imul
test
inc
jo
js
mov
jno
stos
cmovno
and
sti
dec
sar
dec
out
dec
hlt
sti
dec
mov
test
mov
sub
test
push
loope
cld
or
push
aad
test
mov
fdivrl
mov
jg
pop
mov
inc
jecxz
add
cmp
stos
inc
inc
in
cli
push
cwtl
mov
test
mov
or
bound
xor
mov
dec
lret
test
cld
or
cwtd
mov
sarl
imul
xor
frstor
lock
cwtl
cmpsl
addr16
mov
stc
outsb
inc
loopne
sub
jp
mov
jo
add
imul
fld
test
nop
push
cmp
addr16
mov
mov
push
sub
out
sub
add
or
mov
jno
jns
imul
or
inc
and
add
mov
push
scas
stos
pusha
push
xor
js
test
inc
gs
dec
test
outsb
mov
bound
addr16
cli
xchg
push
lods
stos
sub
mov
sub
pop
sti
dec
imul
test
ja
cmp
xor
fs
aas
jno
leave
jb
call
mov
cmovno
sub
pusha
mov
int3
jns
xor
cmp
adc
and
out
jo
nop
sbb
mov
icebp
imul
pop
mov
cltd
sub
imul
movsl
stos
jns
sub
mov
arpl
idivb
pusha
mov
insl
cltd
mov
or
roll
shll
xor
ja
sbb
stc
push
mov
test
xor
imul
push
test
mov
and
stos
add
add
nop
cld
mov
nop
orb
mov
js
stos
jmp
mov
or
test
mov
pop
mov
and
sub
cmpsl
addr16
add
or
aaa
xorl
call
clc
orl
addr16
mov
mov
test
sub
sub
sub
sub
addr16
cli
sarb
lock
mov
mov
mov
mov
shll
dec
xor
daa
jno
rcr
daa
sbb
mov
jo
daa
lock
daa
cwtl
xor
mov
mov
mov
mov
mov
mov
inc
test
mov
pop
push
loope
pop
jns
loopne
pop
and
mov
pop
shl
cmp
clc
loope
pop
mov
daa
dec
xor
das
jo
movsl
sub
fwait
inc
sub
jl
cmovs
imul
cmpxchg
xor
sbb
ud1
sub
mov
add
enter
adc
push
xor
cld
aas
or
loope
cld
push
push
pusha
sub
imul
mov
or
leave
inc
xor
test
lods
add
int
xchg
inc
scas
inc
jns
pusha
cmpxchg
sub
mov
or
test
stos
pop
cltd
sub
imul
jl
imul
xor
adc
insb
xor
cmp
es
mov
popf
cs
mov
mov
popf
adc
imul
nop
pop
loope
jg
mov
in
or
test
pop
push
jne
and
les
mov
stos
dec
lahf
out
cltd
sbb
mov
inc
mov
mov
xor
test
fldenv
and
pop
icebp
push
or
cltd
or
xor
aas
rcrb
popf
fwait
sub
mov
and
push
add
cltd
rcrb
leave
cmpsl
cltd
rol
push
mov
cltd
cs
xchg
iret
dec
fs
cltd
dec
addr16
cmp
outsb
and
call
lcall
add
sub
popa
cltd
scas
mov
mov
cltd
dec
sahf
and
cltd
add
mov
cltd
lret
imul
mov
mov
andb
les
add
or
add
loop
lret
rcrl
mov
cltd
push
cmp
inc
inc
cltd
ds
popf
jb
pop
cltd
add
in
mov
ret
pop
std
push
cltd
and
aam
jb
sub
push
adc
pop
loope
fstps
fiadds
insl
cltd
xchg
and
lea
cld
out
ret
gs
pusha
adcl
test
mov
sub
mov
gs
test
inc
jo
push
mov
xor
xor
xchg
inc
mov
mov
in
popf
sbb
add
popa
jns
and
and
cmp
stos
and
andb
movsb
mov
cmp
stos
add
popa
dec
sub
dec
fldenv
lds
inc
gs
cmp
fsubl
and
popa
sub
sarl
mov
stos
jno
or
and
in
test
add
popa
pushf
sub
enter
mov
mov
stos
or
and
in
lds
and
mov
hlt
popa
enter
gs
mov
mov
popa
subb
mov
mov
stos
int3
inc
sbb
sub
inc
lods
or
pop
or
pusha
mov
add
popa
xor
adc
sub
add
jo
stos
xchg
inc
in
enter
adc
mov
cmc
inc
frstor
sub
mov
mov
stos
call
sub
xchg
mov
popa
in
sarl
mov
test
popa
fsubrs
xor
and
mov
mov
stc
inc
in
int
and
mov
int3
popa
sub
gs
and
stos
roll
jl
pop
mov
loopne
stos
add
aas
xchg
stc
gs
sub
stos
pusha
inc
mov
add
loopne
cmp
and
or
stos
lock
clc
inc
xor
mov
or
pop
xchg
rolb
xchg
add
fwait
sbb
cmpsl
sbb
jns
pop
inc
stos
movsl
mov
popa
xor
adc
test
stos
call
sub
imul
in
stos
and
and
add
pop
popa
inc
sub
les
stos
jge
gs
mov
jbe
xor
adc
stos
xor
aad
push
mov
mov
sub
stos
and
cmp
sub
sub
mov
push
mov
popa
sub
dec
sub
jl
stos
pop
gs
and
popa
sbb
and
inc
cmp
imul
test
jl
stos
inc
inc
loope
andl
mov
int3
in
stos
cwtl
dec
loope
mov
mov
adc
inc
test
nop
xor
stos
mov
nop
jl
push
popa
jne
or
and
mov
movsl
insl
popa
mov
xchg
pop
cmc
xor
lds
sbb
sbb
sbb
stos
cmp
mov
mov
popa
shrl
mov
dec
mov
popa
enter
adc
and
sbb
stos
mov
cmc
in
xor
or
push
mov
jnp
stos
cmc
and
mov
add
lea
mov
mov
mov
mov
mov
mov
out
popa
xchg
or
stos
mov
add
xor
mov
sarb
add
clc
pop
enter
gs
adcl
pop
sub
mov
pop
gs
xorb
sbb
jge
push
mov
mov
xor
mov
jecxz
sub
sub
mov
sub
test
clc
xchg
xchg
mov
xchg
pushf
adcl
call
mov
cltd
rorb
cmp
cltd
add
sbb
int
mov
inc
pushf
add
mov
cmpsl
cmpsl
cmp
cmp
cltd
rcl
jg
out
xlat
dec
fwait
cld
pop
xor
pop
push
push
addr16
pop
and
xor
or
mov
xlat
lds
jge
mov
outsb
cli
and
push
mov
xorb
sbb
int3
lods
ds
subb
cmp
mov
es
and
cwtl
inc
cltd
rcrl
outsb
cmp
call
mov
gs
push
stc
push
mov
rcrb
pop
adc
xchg
lahf
mov
sub
mov
adc
pop
loopne
ds
cli
inc
lea
test
cmp
sti
imul
outsl
cmpb
and
fs
jl
ljmp
cltd
push
inc
sub
lcall
mov
lods
sub
cmpsl
adc
jae
lds
jp
and
mov
mov
lahf
mov
ds
in
and
jo
dec
lods
aad
andl
mov
cwtl
loopne
cmp
cs
xchg
lods
jo
aaa
scas
or
dec
je
mov
ljmp
jmp
mov
into
fstp
stos
cltd
and
fstpt
cltd
mov
adc
sbb
ret
push
dec
jp
push
sbbl
sub
fldcw
jge
jge
cltd
test
int
mov
popa
mov
xchg
cwtl
loopne
dec
and
add
sub
inc
fwait
clc
and
stos
and
and
lret
and
and
cmpsl
sub
cltd
sbb
cmp
fwait
sbb
xor
enter
inc
mov
cmp
push
sbb
cmpsl
push
cmpsl
dec
dec
cli
int3
ja
xor
incb
popa
js
xorl
loopne
push
sahf
mov
xor
fistps
push
inc
fwait
mov
arpl
push
xor
cltd
fsubr
cmpsl
jl
sbb
pop
mov
wbinvd
ljmp
loope
ds
cltd
jae
popf
xchg
out
xchg
mulb
adc
cwtl
popa
leave
inc
mov
pop
test
sub
add
stos
outsl
shlb
jge
lret
stos
fnstenv
jo
mov
enter
jle
test
pop
mov
and
inc
cmc
cmpsl
dec
in
cltd
cmp
gs
sahf
aam
jno
pop
loopne
mov
in
repz
dec
inc
xor
dec
in
pop
fidivrl
sbb
aas
jle
aam
dec
les
xchg
cwtl
loopne
mov
jae
mov
bound
adc
and
sub
div
sbb
add
lds
cmp
cmpl
dec
xlat
cmovo
cmp
test
shll
pop
mov
push
jnp
or
mov
mov
jp
in
mov
xchg
and
push
and
iret
sbb
dec
sub
shll
popa
out
xchg
imul
jns
cmpsl
mov
mov
mov
cmpsb
sbb
and
dec
out
ftst
xchg
inc
cmc
lock
and
cmpsl
sbb
sti
arpl
mov
icebp
popf
int
sub
sbb
mov
sarl
dec
sub
push
sbb
les
mov
cltd
and
loope
or
xor
or
xor
cmp
adc
stos
adc
or
rclb
inc
add
mov
cltd
lret
loop
hlt
fwait
mov
nop
out
and
cltd
inc
push
lock
jl
inc
or
lods
std
jmp
cltd
xchg
rcr
cmpsl
test
cltd
pop
shrb
aaa
cltd
popf
idivb
stos
xchg
stos
push
xlat
iret
outsl
mov
dec
movsl
pop
mov
mov
mov
movsl
push
sbb
int3
fwait
xor
mov
out
aad
sbb
sub
lods
les
add
inc
enter
adc
jne
scas
and
xlat
repnz
add
cmpsl
adc
js
cmc
movsb
daa
cld
scas
mov
jecxz
cmp
jge
fldl
cltd
ljmp
or
sahf
aad
mov
cwtl
or
xchg
insl
gs
mov
test
add
cltd
pop
addr16
scas
sub
icebp
cltd
sbb
adc
mov
cli
fwait
jge
mov
outsb
fsts
cltd
ja
dec
pop
mov
dec
pop
stc
lret
cltd
and
les
jns
xchg
dec
imul
cltd
xchg
fcom
xor
rclb
pop
push
cltd
xchg
icebp
shl
bound
call
cltd
fwait
inc
mov
mov
cmp
sub
cltd
std
mov
les
cltd
adc
sbb
add
add
mov
out
cltd
dec
aaa
add
cltd
sub
loope
int3
push
or
inc
jg
ljmp
dec
cld
adc
inc
and
add
adc
lcall
int3
mov
push
aas
xor
ret
xchg
cmpsl
jge
dec
aad
xor
popf
fwait
lods
bound
das
xchg
jns
rcrb
xor
movsl
pop
pop
out
imul
les
in
push
call
in
out
cltd
dec
jb
and
dec
inc
inc
cltd
int3
outsl
and
scas
les
xchg
pop
mov
pop
mov
out
ljmp
push
out
cltd
xor
push
stos
movsb
int
nop
mov
popf
adc
dec
out
das
ja
in
iret
mov
movsb
sbbb
loopne
stos
loopne
fstps
sbb
cltd
fidivrs
sbb
push
lcall
mov
cltd
jmp
movsb
dec
xchg
cmp
in
or
pop
xchg
cmp
sbb
sbb
mov
push
dec
pop
xor
jmp
push
mov
lret
fs
js
sub
sbb
pop
lcall
fldenv
popa
imul
loop
test
mov
pop
rcl
sbb
stos
adc
sti
cmp
push
in
dec
cltd
dec
iret
jl
adc
cltd
popa
push
push
xchg
sub
mov
jae
sub
sbb
and
aad
repnz
shlb
cltd
ret
mov
jmp
push
xor
jl
xor
jg
loope
cmpsl
mov
xchg
xor
xlat
test
cltd
adc
daa
mov
inc
pop
sbb
int3
cltd
scas
inc
mov
mov
jno
pop
iret
jns
sub
stos
cltd
adc
adcb
mov
and
iret
mov
call
mov
pop
push
xchg
cltd
jo
adc
in
jge
or
bound
shll
cltd
pushf
je
push
mov
call
or
andl
faddl
stos
xor
mov
daa
insl
stos
push
mov
imul
push
lret
mov
adc
and
lock
aad
out
fistpll
sub
adc
pop
fs
pop
movsl
ffreep
mov
scas
cltd
lods
fcoms
sarl
int
scas
sti
les
or
and
scas
loopne
mov
mov
pop
mov
outsl
loop
cwtl
cltd
cmc
clc
pop
sub
mov
scas
sub
fadd
mov
sbb
xchg
insb
dec
mov
in
pusha
adc
cmpsl
fistpll
cmp
xchg
mov
mov
clc
or
xchg
xor
jns
jle
movsl
add
testb
mov
test
pop
inc
dec
movsl
and
arpl
pusha
sub
cmpl
lret
lahf
jo
or
inc
das
xor
jns
fstps
dec
pop
push
icebp
adc
push
mov
scas
jle
push
movsl
test
fs
pop
push
or
das
lods
lods
decl
pop
dec
repz
divl
hlt
push
jae
fildl
icebp
test
and
lods
ror
jae
xor
xor
loopne
xchg
push
and
mov
scas
push
lock
lcall
mov
and
rorl
movsb
pop
in
std
mov
testl
stos
mov
hlt
pushf
adc
inc
sbb
adcl
imul
sbb
mov
lahf
sub
cltd
mov
adc
gs
sbb
xor
cltd
push
shll
jae
add
scas
test
mov
mov
leave
fidivrl
in
xchg
push
mov
inc
dec
addr16
popa
add
mov
and
inc
push
cltd
pop
inc
movsb
pop
ja
sbb
out
iret
sbb
rorl
test
add
jl
pop
fdivrs
jnp
loop
in
mov
xor
scas
push
pushf
jle
in
add
or
jp
ret
rol
test
push
pop
push
popf
xor
int3
aaa
mov
popa
mov
cltd
push
js
cmpsl
pop
push
mov
xor
mov
fwait
cmp
mov
test
jbe
inc
call
and
popf
cltd
push
lcall
pop
arpl
push
rcrl
in
adc
cltd
loopne
mov
xor
jl
movsl
or
pop
add
sbb
out
sarl
xchg
hlt
jnp
adc
jb
pop
and
or
mov
out
sbbb
loope
arpl
jp
dec
std
jbe
cmp
addr16
inc
cmp
mov
fwait
popf
js
cmp
sbbb
lock
movsl
mov
mov
mov
add
sbb
mov
iret
incb
mov
pop
insb
lret
sbb
arpl
sub
mov
cwtl
cmpsl
pop
js
mov
add
sbb
fnop
pop
enter
xor
push
mov
cmp
out
inc
pop
xchg
ljmp
mov
pop
cli
sbb
sbb
add
loope
and
lods
scas
faddl
popf
pop
cmp
mov
dec
lret
push
fldt
loopne
mov
jg
leave
dec
cmpsb
cltd
popa
xchg
fs
jl
sbb
fiaddl
mov
leave
mov
hlt
mov
iret
pusha
test
lods
pop
not
jge
or
mov
xor
jg
xchg
mov
stos
pusha
pop
jno
jb
repz
jecxz
lcall
xor
in
fimull
fistpl
mov
add
cltd
add
push
jecxz
lods
adc
jbe
mov
xor
pop
push
shll
jae
fwait
dec
das
ja
pop
dec
int
and
jno
and
scas
or
mov
cltd
pop
mov
and
in
sbb
sub
nop
popf
lods
fwait
sub
in
mov
mov
cmp
pop
bound
mov
test
test
inc
cmp
popa
clc
cmp
imul
mov
lock
lret
and
jne
cwtl
and
adc
ret
call
jge,pt
cltd
out
js
ljmp
push
rorb
push
and
into
out
dec
pop
loopne
cltd
mov
and
add
data16
cltd
mov
mov
fistpll
sub
sub
cld
and
xchg
and
mov
dec
cltd
xor
daa
dec
fdivr
scas
inc
in
or
push
mov
lret
fxam
inc
cltd
mulb
sub
jmp
dec
push
stos
push
ret
cld
mov
sub
xchg
popf
arpl
cltd
cli
jecxz
roll
or
lahf
cltd
emms
xchg
clc
hlt
dec
addb
pop
adc
decb
cmp
xchg
mov
xor
nop
pop
and
cmp
pop
pushw
movsb
imul
jnp
shlb
pusha
fxch
mov
shll
sbb
adc
mov
lret
xchg
cvttps2pi
dec
popa
scas
faddl
lea
push
insb
loopne
in
mov
cltd
iret
ret
push
int
mov
jmp
and
int3
jno
outsl
xor
dec
mov
cmp
sub
shrb
jb
add
xor
lret
out
mov
xchg
leave
cltd
bound
add
icebp
subb
shl
push
loopne
xor
lcall
dec
pop
sbb
pusha
fwait
es
mov
ja
in
sbb
mov
sarl
std
or
xor
lret
jno
jns
mov
arpl
jb
enter
xor
push
inc
cmp
inc
cmp
pop
mov
mov
sarl
jns
add
lds
sub
aam
lahf
shlb
pop
pop
inc
into
movsb
jmp
aaa
mov
sti
mov
xlat
xchg
xor
std
stos
cmp
xor
cmp
push
jl
adc
mov
stos
xchg
or
cltd
mov
daa
pop
les
mov
lods
in
inc
mov
cmpsb
jmp
jae
repz
adc
loope
mov
and
mov
movsb
arpl
jmp
mov
push
fs
lods
jno
mov
xor
mov
or
and
cmpsl
imul
pop
popa
in
fsubl
push
fnsetpm(287
je
sub
scas
mov
xor
test
cli
ljmp
xchg
push
inc
pop
orb
out
cmp
push
xchg
and
das
add
out
push
popf
cltd
or
cltd
enter
jmp
in
aad
adc
add
cmpsl
fidivrs
lcall
cwtl
fwait
mulb
xchg
out
bound
data16
mov
sub
pop
inc
insl
cmp
dec
lahf
lock
xchg
sahf
or
dec
pusha
mov
movsl
ffreep
jno
cmp
loop
cmp
sbb
mov
pop
push
jmp
xor
xchg
mov
jp
aas
mov
aam
mov
fwait
ret
inc
test
inc
test
cmp
sbb
sub
push
mov
and
jp
mov
inc
loopne
lock
mov
aam
cltd
pusha
lods
aaa
xchg
int3
scas
jb
jne
jecxz
inc
mov
mov
fnstenv
xor
inc
xchg
fwait
aaa
addr16
dec
sbb
pusha
mov
daa
jg
cltd
xor
adc
sub
inc
jno
push
mov
sbb
imul
je
push
jmp
xor
mov
mov
push
aam
xorb
sahf
cltd
out
rcrb
cltd
dec
les
cli
pop
jns
jb
repz
pop
cltd
movsl
out
jne
inc
mov
or
jo
jb
rorl
out
fisttps
dec
or
pushf
cmpsl
into
adc
iret
mov
xchg
repnz
cltd
roll
stos
pop
xor
jmp
popf
stc
loope
adc
and
mov
pop
cmp
push
adc
jle
fwait
lahf
fidivl
jb
dec
adc
xor
mov
pop
mov
xor
ss
push
or
xor
mov
add
cltd
adc
lcall
pushl
cltd
rcl
inc
js
push
lods
pop
mov
lret
fwait
scas
inc
daa
mov
lcall
rcrl
xor
ficoms
inc
push
pop
cltd
popa
int3
push
int
leave
addr16
sbb
pop
sbb
lcall
scas
shl
leave
loopne
sbbl
cltd
fisubs
pop
pop
call
xchg
push
sbbl
out
jno
push
stos
scas
ret
cmp
add
pop
jno
cltd
pop
sbb
pop
push
mov
cld
pusha
or
fwait
sub
pop
lock
and
cmpsl
loopne
sub
rcrb
mov
cmpsl
dec
cmp
xor
daa
sbb
imul
scas
xor
out
sbb
sub
scas
scas
pop
in
cltd
xlat
test
inc
sub
pusha
fbstp
jnp
jecxz
test
sbb
cmp
ret
fwait
cmpsb
push
add
and
test
xor
dec
dec
cmp
jb
fldenv
dec
sbb
mov
and
inc
mov
fwait
push
mov
or
lahf
pop
test
ss
xchg
scas
mov
and
xchg
xlat
cltd
ret
push
out
cmpsl
aaa
fnstenv
adc
scas
push
mov
cmp
movsl
inc
nop
mov
outsl
cmp
xchg
xor
inc
pop
ret
sbb
pop
cmp
shl
xorl
leave
push
mov
pop
cltd
add
icebp
push
push
lret
incb
push
cltd
arpl
repnz
pop
jns
or
adc
imul
mov
mov
sbb
sbb
shrb
push
inc
test
or
cmp
sti
out
arpl
sbb
mov
pop
xchg
xchg
and
loopne
jb
cltd
lahf
pop
popa
test
inc
mov
fwait
lret
into
mov
cmp
arpl
cltd
xor
in
add
ret
lahf
inc
fwait
or
xor
xchg
dec
or
lahf
int3
pop
stos
sub
cmp
mov
movsl
ret
fwait
nop
jle,pt
cmpsl
imul
mov
mov
jbe
outsb
stc
mov
fwait
repnz
or
sub
sbbb
popa
out
cltd
inc
xchg
push
mov
loopne
jne
fcompl
push
cltd
push
push
in
xchg
inc
xor
xchg
mov
fwait
mov
mov
addr16
popa
fsubs
dec
add
cltd
sbb
mov
jno
xor
outsl
mov
fcmovu
sbb
sub
and
cltd
pop
xor
pop
jge
stc
aam
fwait
pop
sti
mov
jns
ja
test
dec
out
lock
push
les
mov
dec
cmp
imul
ret
cs
mov
repnz
mov
nop
mov
cmpsl
and
test
sbbl
jge
and
cltd
dec
mov
dec
mov
pusha
mov
jno
adc
sbb
mov
mov
pop
in
rolb
adc
or
imul
xchg
clc
cltd
addr16
and
leave
popa
mov
jnp
and
mov
mov
mov
adc
cmp
clc
push
sbb
stos
sbb
test
icebp
jmp
loop
cltd
in
ficomps
movb
or
stc
mov
adcl
push
cli
xor
negl
jmpw
sub
ja
add
mov
cli
inc
negl
sbbl
cltd
rclb
fdiv
xchg
dec
std
push
stos
fwait
inc
mov
jns
cltd
stos
pop
mov
shrl
or
cmp
insb
mov
cmpsl
shrl
cmp
setns
pop
xor
fwait
xchg
sbb
lods
xor
sahf
push
adc
fwait
mov
hlt
push
into
or
out
stc
bound
push
arpl
movsb
les
jp
movsl
andb
mov
mov
xorps
push
adc
out
push
mov
sub
jae
xchg
cltd
mov
sbbb
mov
lret
jp
inc
in
cltd
pop
movsb
out
sub
stos
je
cltd
hlt
aad
mov
cltd
repz
ret
inc
cmp
sub
or
fneni(8087
pop
add
mov
ficompl
xchg
jne
outsb
cltd
push
test
fadd
cmp
cld
cltd
rcrl
cmp
fidivl
testb
cltd
xchg
mov
mov
sahf
call
jo
jg
jae
pop
scas
nop
cmpsl
jnp
adc
jge
sbb
cmp
cs
cltd
xchg
adc
pop
ds
sbb
mov
mov
xchg
test
mov
mov
ja
jmp
cltd
inc
inc
cmp
testb
mov
cltd
imull
push
mov
jae
imul
or
scas
and
inc
iret
addb
cltd
fimull
mov
or
cltd
mov
test
mov
and
mov
mov
mov
dec
fdecstp
sub
add
mov
mov
fwait
pop
mov
lret
sbb
sub
pushf
cltd
adc
and
les
hlt
cltd
or
daa
in
mov
test
jae
inc
pop
iret
popf
jnp
mov
cltd
and
mov
fidivrs
dec
stos
jns
pop
addb
mov
ret
shr
and
leave
pop
add
leave
xchg
and
lock
fwait
cmp
nop
inc
imul
cltd
movb
sahf
stc
subl
repnz
jl
cltd
into
xor
adc
movsl
and
out
lock
mov
out
sbb
mov
cltd
je
test
pop
and
jno
movsb
bnd
scas
std
jns
xchg
loopne
push
dec
xchg
mov
fs
shlb
int
std
lods
stos
push
inc
mov
mov
push
and
iret
mulb
nop
mov
dec
les
popa
push
outsl
cmc
or
cmp
push
shr
or
leave
fisttpl
popl
add
scas
jmp
cltd
mov
stos
pop
nop
mov
cltd
stc
sarb
jne
add
repz
gs
dec
jg
mov
fwait
xlat
mov
lahf
cltd
sbb
and
cld
fwait
mov
insl
cmp
loope
push
ret
pop
mov
insb
xchg
or
stc
clc
or
movb
adc
mov
cmpsl
repz
mov
pop
popf
xor
mov
ret
fwait
sub
daa
ja
fmull
cmp
ds
mov
cltd
push
adc
xchg
popf
clc
and
pusha
dec
xor
cltd
jb
les
mov
adc
test
mov
fisubs
cmp
jbe
cltd
popa
test
aam
mov
cmp
jo
jg
mov
popf
cltd
xchg
adc
movsb
aaa
dec
cmpsl
jg
push
mov
lcall
jo
dec
pop
lods
imul
push
iret
pop
scas
push
leave
inc
subl
and
fsubrl
cmpsl
cli
push
lcall
in
popa
xchg
mov
repz
adc
adc
jmp
ftst
jae
mov
loop
fmuls
or
loope
out
cmpsb
push
int3
xor
mov
and
test
popa
jb
movsl
inc
ret
cltd
sub
in
or
sti
mov
cs
push
stos
in
mov
mov
push
rolb
scas
xchg
les
jne
mov
sbbb
fcompl
mov
mov
mov
js
push
mov
cltd
sti
fmuls
jb
mov
push
int
inc
push
mov
jecxz
xlat
xchg
fstpl
sub
mov
cltd
push
lret
xor
fwait
add
dec
scas
cmp
mov
inc
dec
jo
cltd
test
bound
cmpsl
or
push
imul
mov
ja
pop
lods
call
cmc
pop
mov
test
dec
jg
fwait
sti
hlt
dec
jecxz
sbb
jle
mov
add
imul
cs
xor
subb
jb
call
scas
push
stc
and
aas
orl
int
dec
movb
sbb
adc
pop
dec
cltd
movsl
cmp
sub
inc
rcrl
sub
sub
cmp
jae
fadds
fstps
adc
cmp
add
nop
pusha
arpl
test
push
cltd
push
inc
xchg
adc
test
and
xor
cmpsb
jae
cs
cmpsl
add
sahf
or
xchg
add
notl
fcompl
je
mov
dec
and
loope
mov
loop
out
mov
cltd
sbb
cli
xor
mov
or
and
mov
lcall
sub
mov
pop
push
bound
lcall
xor
cltd
data16
movsl
xchg
std
rcrb
or
aam
stos
and
lcall
outsb
push
xchg
imul
bound
pop
jle
jns
out
repz
fstps
cltd
add
arpl
and
lods
jae
rcll
mov
dec
scas
pop
add
es
xchg
or
adc
push
push
mov
push
out
dec
inc
pusha
lock
loopne
shll
xchg
jb
mov
mov
lock
test
fwait
dec
and
outsl
jmp
xchg
loopne
jb
icebp
jle
std
adc
into
popa
test
pop
das
dec
sahf
cmp
dec
out
popf
mov
loope
hlt
in
inc
xchg
pop
lea
fcomip
insb
in
jno
adc
cltd
sub
scas
imul
dec
mov
loopne
inc
jmp
cmpl
das
add
mov
mov
test
mov
dec
and
pop
xor
cltd
and
jge
jns
xchg
cmpsl
lods
adc
enter
cs
js
lret
push
fisubl
jno
push
in
dec
mov
orl
stc
or
jle
cltd
popa
test
inc
mov
dec
sbb
mov
hlt
inc
imul
inc
fistps
sub
rolb
mov
cmpsl
call
push
pop
cld
mov
mov
sbb
xchg
adc
mov
fwait
pop
mov
mov
cmp
loopne
mov
sbb
cmp
daa
and
scas
lea
cli
insl
xor
mov
or
popf
push
add
negl
dec
sbb
inc
cmpsl
dec
xchg
and
cld
mov
xchg
adc
inc
xchg
mov
add
push
push
mov
stos
and
xor
sbbb
mov
sbb
mov
orl
iret
in
add
fwait
mov
mov
dec
adc
pop
push
movsl
fsubrs
enter
stc
mov
cltd
negb
ljmp
out
icebp
rclb
pop
shlb
in
or
mov
fcomp
and
cltd
das
push
dec
inc
lret
add
jnp
adc
aaa
cwtl
repz
pusha
cmp
push
push
xor
in
jb
jb
pusha
mov
hlt
jmp
jle
std
sub
cmpsb
adc
cmpsl
mov
push
mov
mov
and
je
call
push
pushf
inc
pushf
clc
jmp
jns
push
test
sahf
cmp
stos
push
add
pop
mov
lods
and
fisubrs
mov
lahf
pop
jae
xchg
xchg
pop
lcall
adc
insl
sbb
jne
ss
adc
mov
pop
push
mov
or
sub
pop
push
push
fistpll
arpl
mov
or
stos
pop
outsl
fadd
inc
mov
test
in
jle
jl
sbb
ss
jle
inc
ljmp
lret
dec
inc
popf
ret
in
in
test
mov
sarb
add
pop
loopne
dec
and
imul
int3
outsl
dec
rcrl
inc
xor
fadds
cmp
flds
subb
hlt
dec
leave
sub
xor
jle
add
out
jne
sub
cld
fs
adc
xchg
data16
rorb
sub
add
pushf
xor
nop
data16
pushf
and
stos
push
jbe
lahf
sarl
and
ljmp
movsl
icebp
mov
hlt
cmp
mov
mov
aas
xlat
cmp
cmp
insl
sarl
outsl
dec
in
out
mov
xor
xor
mov
hlt
addb
aas
dec
ja
xchg
scas
or
popf
sub
scas
add
cltd
lret
in
sub
jne
lret
mov
pop
daa
mull
lock
xor
hlt
mov
push
jbe
dec
mov
out
xchg
sbb
dec
icebp
xchg
dec
bnd
ret
and
int
sti
push
fwait
out
sahf
test
sahf
cmp
and
mov
push
mov
mov
leave
push
sbb
xchg
or
cltd
popf
in
aad
int3
jge
movsl
xlat
inc
mov
repnz
mov
jno
pop
sbb
nop
push
push
xchg
lods
mov
test
loop
shll
push
fistpll
icebp
mov
lods
push
jbe
lock
not
pusha
sub
mov
cltd
push
sub
push
aas
aam
scas
pop
push
push
scas
mov
lea
dec
inc
jno
inc
cwtl
aaa
jl
js
push
mov
iret
adc
das
in
dec
sub
push
imul
cld
das
sub
adc
mov
shll
pop
mov
fstl
enter
outsl
popa
imul
jmp
loopne
bt
bt
cmp
call
inc
out
sbb
add
add
add
add
add
add
sbb
sbb
and
sbb
and
sbb
add
add
add
es
add
sub
test
mov
inc
push
mov
daa
push
xlat
xor
push
xchg
mov
mov
mov
cmp
fld
sub
movsl
cld
inc
push
mov
add
fmuls
ss
test
cmp
or
icebp
lret
inc
fistps
adc
sbb
adc
out
std
adc
fisubs
loopne
bound
inc
jo
mov
push
fwait
and
pop
push
add
xchg
cmp
jl
mov
in
add
out
cmpsl
or
adc
add
mov
pop
cmp
repnz
insb
fistpl
cmp
popf
js
pushf
int3
mov
dec
xchg
xchg
sub
dec
inc
stos
push
outsb
xchg
das
cmc
sub
out
insb
or
lret
pop
popa
mov
xchg
lcall
out
std
mov
hlt
mov
xor
or
jge
mov
jecxz
icebp
lcall
lods
pop
jmp
xchg
mov
and
out
jbe
cmpsb
imul
inc
rcr
cmp
xchg
push
stc
outsl
mov
and
out
pop
int
mov
ja
or
es
imul
jne
pop
jl
jne
push
push
adc
sti
das
ror
loope
cmp
mov
hlt
xchg
pushf
lcall
jmp
mov
out
repz
lea
dec
cmp
jae
jno
mov
add
and
inc
shl
cmc
stos
lret
fidivrs
mov
mov
cmp
pop
das
out
add
sub
flds
xor
or
push
jno
add
push
in
ret
loopne
cltd
or
fcmovnb
push
arpl
dec
mov
xchg
xchg
lret
mov
repz
popf
mov
lret
aam
lds
addl
stos
xor
pusha
pop
imulb
outsb
mov
or
adc
out
inc
pusha
push
loopne
sub
jo
cltd
xor
cmpxchg
jge
sbb
in
jl
aaa
ret
mov
dec
xchg
add
pop
outsb
test
inc
or
and
adc
mov
pop
pusha
sbb
mov
jl
imul
int
sub
mov
pop
push
dec
inc
xchg
scas
cmp
inc
sbb
pusha
jne
in
lret
hlt
das
stos
xor
push
or
fs
pop
sti
out
lcall
enter
push
xchg
pop
dec
and
cmp
inc
jno
xchg
mov
pop
cmovs
dec
mov
pop
mov
add
ror
cmc
arpl
pop
xchg
jle
or
mov
js
cmp
cli
cmp
adc
bound
cmp
sub
and
enter
cmp
dec
sub
rorl
mov
jb
divb
mov
dec
push
hlt
cltd
or
jb
neg
lods
push
adc
lret
inc
add
mov
xor
lea
test
sub
xchg
xchg
daa
jge
outsb
out
push
test
mov
out
push
nop
out
mov
ds
leave
test
and
shrb
adc
or
popa
mov
fistps
imull
adc
and
fmul
adc
mov
mov
insl
pop
add
insl
xor
push
xchg
pop
push
in
push
xchg
hlt
fnstcw
clc
xchg
es
lret
dec
mov
fs
sahf
roll
mov
roll
sti
mov
repnz
jp
sub
adc
adc
cmp
lahf
dec
sbbb
adcl
xchg
aam
xchg
cmp
fwait
dec
dec
mov
lcall
fwait
dec
and
imul
jb
cmp
cmp
call
fldt
ss
xchg
mov
aas
sbb
hlt
jg
je
js
cmp
popa
shrl
push
fidivs
ja
sarl
arpl
mov
ds
add
mov
adc
cmpsb
jecxz
nop
adc
xchg
xchg
cmp
mov
sub
push
mov
test
into
xor
add
fs
addr16
jnp
xchg
pop
push
cmp
push
push
sbb
cmpsb
jno
dec
add
enter
mov
test
outsl
mov
mov
lret
enter
cs
incl
sbb
xchg
clc
es
mov
xchg
ret
les
mov
inc
push
shrl
dec
xchg
or
mov
or
dec
cmp
mov
inc
xor
and
stc
cmc
sbb
push
and
mov
push
mov
stos
dec
ja
fs
xchg
jle
or
fldt
push
pop
cmp
jp
rolb
stc
pop
ja
out
push
or
xchg
adc
les
mov
dec
push
sbb
and
mov
mov
mov
sti
jp
loopne
sub
aad
fwait
sbb
pusha
rcr
jl
sarb
out
xor
lods
mov
cld
gs
int3
xchg
sbb
pusha
cmpsl
xchg
xchg
aad
in
dec
shrb
adc
pop
loope
jns
inc
mov
xor
inc
pop
filds
dec
gs
xchg
or
mov
fsubrp
loopne
frstor
pop
icebp
test
out
insb
adc
in
pop
mov
insb
mov
into
push
fucomip
xlat
mov
push
scas
dec
push
mov
cwtl
shrl
xchg
pop
and
mov
imul
test
push
mov
sahf
xor
mov
bound
jl
fmull
nop
lret
inc
sbb
xchg
sbb
lret
jnp
rcrl
xorl
and
test
ret
jne
cltd
popa
mov
test
dec
std
int3
mov
mov
inc
and
push
cmp
jl
pop
inc
in
mov
sti
cli
push
sub
shlb
mov
sub
inc
lock
mov
mov
jmp
gs
jecxz
add
iret
mov
out
dec
dec
xlat
push
add
adc
adc
push
jp
in
mov
cmp
cmp
je
lret
stos
pop
xor
mov
jecxz
cwtl
and
add
insb
xchg
push
push
in
mov
sti
jle
roll
mov
sbb
sbb
cmc
sub
sbb
lret
repnz
xlat
es
and
dec
mov
dec
push
or
jne
sbb
dec
jae
gs
xorb
mov
sub
inc
push
fwait
addr16
jbe
shl
arpl
sub
iret
bswap
adc
push
nop
adc
cmpsl
inc
cld
stos
sahf
popf
clc
pop
xor
mov
or
add
mov
cmp
addr16
and
pop
mov
push
and
jb
pop
mov
aaa
xor
mov
out
or
insl
xor
dec
lret
les
int3
imul
out
xor
or
subl
xor
sarb
push
sahf
aaa
cmc
jbe
fcomps
test
pop
imul
push
dec
push
cli
cmpsb
test
push
mov
xchg
adc
add
dec
std
or
push
jecxz
movsb
pop
xchg
cmpsl
sti
jge
imul
mov
xchg
jo
push
mov
call
adc
xchg
cmp
ljmp
mov
mov
xchg
push
pop
or
xchg
cmp
lahf
add
jmp
mov
lcall
mov
adc
stos
xchg
inc
repnz
jb
lcall
sahf
pop
out
jne
addr16
ljmp
mov
sbb
pop
sbb
push
fidivrl
sub
shlb
ret
scas
rcll
adc
mov
test
movsl
jo
out
jb
push
enter
gs
ja
jge
mov
fmul
fiaddl
test
andl
imul
hlt
mov
xchg
mov
test
cmp
scas
sbb
pop
insl
shlb
mov
aam
jns
out
outsb
inc
cwtl
mov
sbb
sub
pusha
pusha
stos
fisubl
push
cmpl
in
fbstp
mov
and
pop
and
in
fadds
jo
lods
aaa
jb
ss
mov
jge
mov
xor
stos
sub
push
cmp
sub
xor
loope
sti
mov
out
dec
pushf
aas
roll
and
sub
lea
mov
lret
shlb
dec
insb
stos
in
movsb
mov
xchg
sahf
test
cli
mov
pop
jl
pop
into
in
sub
xchg
xchg
dec
and
and
mov
push
push
ret
aaa
movsb
inc
mov
pop
fnstsw
push
ss
stos
push
test
cmp
dec
mov
es
jmp
or
pop
cltd
jnp
popl
mov
xchg
fldl
mov
pop
mov
xor
call
aaa
sub
je
pop
test
mov
xor
popa
cmc
repnz
loopne
or
or
ljmp
cld
xorb
ret
push
loope
test
int
sar
lods
aas
mov
and
cmpb
pop
sbb
insl
mov
mov
imul
outsl
cmp
subl
jb
inc
xor
outsl
sbb
dec
int
xchg
js
dec
push
scas
notb
add
fstpl
push
adc
scas
mov
jp
out
test
cmp
mov
jae
mov
xor
leave
arpl
fdivrs
pop
scas
lret
mov
jg
sub
bound
enter
fsubs
in
cli
mov
cld
sarb
popa
rolb
sahf
mov
xor
sub
cmp
cmp
inc
rolb
in
outsb
mov
inc
test
aas
dec
lds
sbb
cs
fistl
jmp
aad
stos
lds
setl
ss
xchg
stc
pop
jmp
and
or
ss
jg
idiv
pop
mov
and
repz
xchg
push
lock
jp
mov
adc
scas
fldt
jns
mov
rcl
mov
pop
or
cmpsl
sub
int3
adc
sub
pop
cs
outsb
pop
insb
loopew
addr16
aad
mov
decl
imul
dec
test
xchg
in
adc
int3
jbe
jns
dec
xchg
mov
pop
dec
in
fmul
sahf
aaa
mov
add
sahf
outsb
nop
jle
sbb
scas
cmp
outsb
adc
sub
dec
and
mov
mov
xchg
xchg
lods
repz
orl
and
jecxz
mov
lock
insl
push
jp
aas
or
push
sub
test
ds
sbb
rorb
movsl
push
mov
add
mov
daa
and
xchg
lea
mov
jnp
sub
ds
jecxz
out
dec
push
lock
xor
fmuls
add
cmp
xchg
dec
add
xchg
jle
mov
fimull
xorl
add
add
cmpl
mov
jo
scas
adc
push
int
mov
loop
adc
dec
jg
das
jns
je
fisttpl
lods
jne
xchg
fnstenv
inc
test
sub
push
insl
push
jo
mov
in
sub
push
mov
inc
dec
inc
adc
stc
push
push
mov
dec
adc
lds
hlt
dec
sbb
dec
push
inc
ficoml
xor
jle
aam
loop
xor
mov
or
aad
cmp
and
push
stos
push
lea
jmp
add
cld
xchg
jbe
sbbb
fdivs
roll
stc
jle
cmpsl
je
dec
lahf
add
cmpsb
mov
les
addr16
ret
push
in
adcl
fcmovb
pop
frstor
cmpsb
int3
sbb
mov
les
ret
es
sti
scas
movsb
push
push
mov
loope
mov
xor
insl
push
mov
int3
inc
adc
push
repz
mov
or
lds
daa
mov
icebp
pop
je
mov
test
fiaddl
imul
push
jbe
lods
cmp
into
xchg
adc
and
mov
pusha
ror
adc
jg
hlt
daa
jmp
push
stos
push
or
jmp
cmp
xor
mov
and
lods
and
mov
xchg
shrb
inc
mov
test
rcl
push
xor
xchg
test
stos
adcl
cwtl
cmp
xchg
xlat
int
xor
lret
call
js
sub
aam
lods
inc
and
push
leave
andb
xor
addb
jne
mov
push
rcl
scas
jbe
mov
dec
xor
cs
insb
add
jbe
into
cmp
xchg
out
push
pop
stos
and
movhps
scas
sbb
mov
inc
pop
xor
adc
dec
add
sti
rorb
fnstsw
jge
out
pop
or
rcrb
lea
lcall
xchg
addr16
je
ror
mov
mov
inc
flds
in
scas
xor
jae
pop
clc
xlat
fs
sbb
inc
std
fiadds
lcall
inc
ror
in
mov
hlt
mov
mov
movsb
or
stc
rclb
lahf
adc
loope
enter
ret
cmp
loope
ret
push
into
loopne
shlb
cmp
test
push
stos
xor
sub
rol
and
lods
and
lods
pop
xor
fiaddl
push
out
adc
jle
test
lret
test
out
push
ret
sahf
push
sub
pop
mov
xchg
aam
fimull
mov
xor
js
psubusb
in
daa
ficoms
in
pop
jb
mull
xor
mov
rcrl
inc
insl
jns
bound
jmp
lahf
in
xchg
jmp
out
adc
inc
incb
pop
lods
lahf
in
dec
movl
imul
dec
lret
mov
shll
pop
cmpsl
mov
or
loop
js
les
mov
add
push
mov
das
fldt
fdivl
ret
lea
je
cmp
stc
stc
clc
sub
pushf
test
cmp
movw
pushf
movw
mov
lea
ja
stc
imul
stc
add
push
pushf
pusha
pushf
lea
jmp
inc
out
mov
insl
pop
ret
pop
std
jl
mov
mov
fiaddl
sub
add
mov
loope
hlt
lods
lahf
jo
xor
test
jne
lods
dec
xchg
sbb
ror
fwait
sub
adc
jmp
push
push
aaa
jge
mov
cltd
push
mov
pop
call
movsb
gs
call
icebp
mov
mov
stc
lcall
or
hlt
lret
pop
stc
stos
imul
lods
and
cs
push
cli
lea
std
lea
lods
ljmp
test
and
push
dec
jb
sbb
xchg
sub
cmp
mov
lods
inc
in
aaa
push
lret
and
enter
loopne
notb
scas
outsb
inc
push
mov
mull
ds
sub
fs
jge
hlt
mov
test
pop
adc
adcl
adc
bound
pop
ret
mov
lret
stos
ds
sbb
in
sarl
int
fldt
test
sti
jb
scas
adc
mov
fistl
mov
shlb
out
mov
scas
cmpsl
sbb
pop
cmp
iret
adc
out
cmc
out
inc
sahf
int
js
loope
xorl
push
loop
and
lea
jmp
ficompl
test
jp
call
inc
lret
cmpl
and
mov
lea
pushf
mov
lea
jne
pusha
pushf
mov
push
not
mov
push
pushl
ret
cmc
or
lea
rcll
mov
pop
movb
ret
jle
inc
fimuls
push
adc
mov
sub
call
fimuls
or
push
out
pop
lcall
push
adc
xchg
into
and
gs
daa
scas
outsl
lods
outsl
nop
push
arpl
push
add
pusha
cmp
push
mov
mov
dec
cld
mov
sahf
sub
cmp
es
sbb
jge
loop
loop
push
fsubr
push
das
push
pop
outsb
shr
mov
jp
mov
cmpsl
std
imul
lahf
sbb
and
sahf
std
adc
outsb
sub
lods
dec
test
mov
inc
mov
inc
repz
or
inc
mov
jmp
jno
mov
scas
lcall
in
jp
call
rorb
fcmovnu
and
sahf
xor
js
adc
mov
lea
jbe
push
lea
jae
jnp
push
mov
lea
jne
call
cmp
rclb
shll
mov
jp
lods
xchg
push
xchg
inc
xchg
xchg
mov
repz
add
das
xchg
push
dec
jl
ret
mov
xchg
jo
mov
adc
mov
repnz
add
insl
jg
xor
adc
cmp
mov
mov
or
mov
push
xor
mov
inc
ficompl
cltd
sub
add
fidivrl
ljmp
push
dec
dec
jno
pusha
mov
pushf
lea
jmp
movl
mov
lea
jmp
adc
lods
adcb
jg
or
and
int3
xor
popf
or
push
pop
pop
gs
cmp
enter
es
jmp
lods
pop
jle
xchg
add
mov
jmp
and
add
test
bound
rcll
jp
insl
adc
aad
cmc
mov
sahf
rcll
enter
stos
hlt
sub
fldl
mov
jge
dec
push
xchg
movsb
jno
push
fsts
sub
push
xchg
sub
popf
or
sahf
fstpt
hlt
jmp
push
mov
sarl
sbb
test
pusha
scas
addl
xor
inc
jno
je
xor
xchg
sbb
and
inc
leave
popa
dec
popa
adc
push
lds
cmpsl
rclb
ret
xchg
sbb
pop
scas
jb
mov
push
test
xlat
dec
pop
cli
jne
movsl
pop
test
arpl
adc
pop
mov
cmp
out
pop
adc
xchg
mov
lds
arpl
pushf
arpl
je
pop
xor
mov
stos
xor
lret
cmp
push
lds
std
movb
rorb
adc
cltd
decl
xchg
imull
rcll
push
addr16
rclb
xor
sbb
mov
sub
mov
jbe
daa
pushf
arpl
add
add
sbbb
arpl
mov
mov
push
dec
test
adc
je
inc
mov
ljmp
sub
popa
inc
xchg
adc
js
inc
mov
xlat
inc
cli
call
cmp
loop
xchg
cli
adc
adc
mov
xchg
push
adc
mov
mov
mov
pushf
cmc
cmc
repnz
jmp
faddl
inc
sub
mov
aaa
push
mov
fildll
sbb
lahf
xchg
pop
or
imul
and
push
pop
iret
aas
dec
lea
sbb
pop
or
or
in
sub
mov
fwait
or
push
scas
daa
mov
and
ret
les
mov
mov
or
push
jb
xchg
aaa
dec
arpl
inc
std
js
out
leave
push
push
mov
addb
es
outsl
sub
or
mov
jmp
add
sub
js
xchg
lds
in
push
mov
sub
pop
ds
jle
mov
push
or
mov
inc
sbb
cld
jle
xor
adc
mov
clc
mov
imul
fstp
fcompl
or
loopne
sub
mov
jbe
roll
push
xor
mov
push
or
mov
adc
push
ret
dec
xor
shl
xor
jbe
mov
pop
outsl
fstps
dec
hlt
pushl
adc
xchg
pop
incl
shrb
hlt
stc
cmpb
scas
in
push
mov
add
mov
jmp
sti
xor
push
loop
push
aad
dec
filds
das
push
mov
mov
repz
fcoms
mov
ror
int3
pop
mov
scas
mov
push
pop
mov
jno,pn
leave
mov
jne
rcl
fimull
sbb
int3
mov
pop
dec
xchg
scas
dec
das
stos
inc
push
leave
into
das
dec
push
fsubl
adc
test
push
imul
int3
in
push
mov
addr16
adc
addr16
xor
jns
cmp
dec
sbb
and
fisubrl
mov
das
test
jl
sub
jnp
dec
xlat
sbb
scas
push
inc
mov
push
inc
pushf
jnp
cltd
cmp
stos
and
les
cmp
jmp
rorb
sub
mov
mov
mov
and
cmp
jbe
xor
out
mov
js
xchg
xor
and
xchg
jle
mov
scas
or
dec
shld
out
mov
ret
adc
and
mov
pushf
repnz
jmp
fs
lds
cld
pop
fsubs
mov
lods
xchg
lods
sbb
push
dec
push
mov
mov
push
int3
aam
mov
daa
or
mov
out
movsl
pop
xor
mov
cmp
mov
add
xchg
sbb
jns
pop
iret
mov
aas
dec
fdivrl
push
mov
aam
inc
pusha
lock
hlt
lods
cwtl
in
into
mov
in
les
mov
call
fistps
shlb
shr
mov
mov
pop
jb
add
or
or
cwtl
gs
leave
jecxz
ss
mov
pop
mov
insb
aas
pusha
push
sub
or
mov
rol
mov
rcrl
push
aaa
hlt
cmp
repnz
mov
mov
dec
insl
pop
fs
or
nop
cmc
mov
cmp
add
jge
out
and
dec
push
bswap
lea
jmp
movl
call
lea
jne
call
add
inc
bt
mov
clc
test
pusha
lea
je
stc
stc
pusha
cmp
sub
add
jnp
cmc
pusha
cmp
pusha
call
mov
jbe
sub
inc
aad
out
fnstenvs
adc
dec
shl
scas
jb
pop
es
mov
cmp
fs
popf
scas
fwait
nop
icebp
out
mov
test
jns
pop
lcall
movsb
cmp
or
dec
pushf
xchg
movsb
cli
mov
mov
pop
int
insl
lea
mov
cmp
testb
jnp
fiaddl
mov
mov
sub
movb
ficoms
dec
inc
push
dec
xor
cs
insb
add
xchg
mov
neg
test
rcr
add
rcr
and
clc
mov
mov
btc
btr
add
stc
shrd
shl
shrd
movl
lea
mov
add
stc
cmp
push
call
push
mov
arpl
scas
stos
mov
and
imul
adc
imul
add
fistpll
daa
lret
mov
jb
dec
imul
pop
call
inc
ss
rcl
push
jb
mov
mov
pop
pop
mov
fwait
cmp
sbbb
sub
mov
sub
push
dec
mov
adc
outsb
mov
sub
and
pusha
xchg
jo
out
sbb
jbe
shlb
and
test
or
cmpsl
jl
or
inc
cltd
add
mov
mov
push
jb
rcll
dec
mov
pop
dec
and
pop
scas
jb
cmp
mov
pop
mov
mov
mov
pop
ds
pop
cmp
mov
loop
xchg
and
pop
jo
test
imul
push
imul
inc
shr
sub
shlb
mov
xor
xor
adc
fldcw
in
enter
push
mov
outsl
fldlg2
sub
xor
sbb
mov
sbb
test
test
ret
mov
sarb
repnz
scas
dec
call
clc
das
push
sub
lcall
mov
jns
xchg
stos
addr16
adc
cmp
xor
lret
stc
mov
pop
sbb
sub
pusha
popa
mov
and
lret
shll
jl
test
and
pop
cmp
stos
mov
imul
fs
pushf
addb
and
insl
subl
stos
and
mov
mov
stc
imul
cmp
nop
inc
inc
xchg
or
adc
cmovae
das
cmp
mov
mov
les
inc
jle
or
xchg
adc
test
jmp
push
cwtl
jns
xor
mov
inc
mov
jge
pop
mov
test
cmp
pop
sbb
enter
pop
stos
fadds
aam
sbb
les
nop
out
ret
inc
lahf
add
add
fwait
loopne
lock
jmp
stc
xor
inc
enter
xchg
pushf
sbb
sbb
in
or
scas
mov
and
mov
sub
in
mov
dec
jne
mov
cmpsb
rep
sub
push
sub
pop
in
stc
push
les
adc
loopne
jno
clc
rol
enter
dec
ret
movsl
loopne
mov
inc
xchg
rcll
in
fwait
pushf
mov
inc
pop
and
rorl
notb
mov
pop
jmp
push
enter
lods
pop
mov
test
out
dec
mov
ret
inc
iret
int
sbb
xor
fldt
dec
stos
xor
sub
cmpsl
lock
sbb
jmp
mov
enter
jge
jo
movsl
movsl
lock
mov
xchg
sub
in
mov
xchg
lret
cmp
push
mov
loopne
inc
and
imul
outsb
cwtl
enter
imul
es
jbe
or
adc
lds
std
mov
imul
push
jg
mov
sbb
pop
daa
mov
popf
mov
jl
dec
mov
push
or
mov
sbb
call
xor
sbb
cmpsl
stos
mov
aaa
jo
sbbb
mov
gs
movsl
mov
xor
inc
imul
movsb
imul
hlt
xchg
cltd
cmpsb
icebp
jo
mov
stos
sub
hlt
mov
daa
ret
mov
mov
stc
sub
in
or
cmp
lahf
or
mov
call
mov
mov
test
mov
int3
pop
and
insb
push
pop
cli
loopne
enter
popa
pop
and
cmp
and
insb
mov
and
cmp
push
mov
enter
add
xor
lret
es
mov
mov
fists
xchg
cmp
pop
es
mov
pop
js
imul
mov
jmp
fwait
push
cmc
mov
mov
popa
andl
inc
xchg
insl
aad
cltd
push
lds
scas
cltd
mov
xchg
cmpsb
and
bound
mov
mov
scas
jo
mov
jb
mov
inc
movsb
mov
dec
fwait
les
jmp
add
cmp
push
xchg
clc
inc
out
sbb
loopne
and
mov
dec
xchg
loope
arpl
adcb
inc
fchs
sub
ret
inc
mov
cmpsb
jns
and
push
and
push
sbb
fs
push
jmp
sbb
add
jne
xor
pop
lods
xor
jmp
sub
mov
xchg
fwait
ret
movsl
jecxz
stos
loopne
mov
clc
sub
dec
push
lods
and
pusha
enter
insb
test
xor
sub
inc
insl
das
stos
fdivrl
stos
mov
cmp
loope
sbb
and
and
imul
sbb
insb
inc
mov
sbb
or
xchg
fidivrl
or
test
jg
jge
pop
cmpsb
ljmp
test
and
jo
pushf
cmp
fwait
sub
push
mov
xchg
clc
mov
xor
mov
xchg
sub
cmc
fdivrl
in
adc
loop
mov
cmpsl
imul
push
scas
mov
cmp
fldt
push
stc
fsub
test
es
sub
pop
mov
adc
mov
cmpsl
jmp
movsl
mov
or
jbe
fbld
sbb
add
cmp
and
mov
xchg
mov
cltd
or
popa
xchg
pop
lahf
jmp
jno
gs
dec
jbe
and
mov
stc
inc
dec
lods
loopne
jnp
loope,pn
mov
lock
mov
scas
inc
lcall
mov
cs
mov
mov
rolb
sub
loopne
jge
cmp
jnp
fcoml
out
dec
or
jecxz
dec
or
and
fstp
lods
das
sub
jg
in
pop
shll
jnp
sbb
jmp
inc
loopw
jp
fs
mov
and
cmpsl
cmpsb
stos
js
gs
inc
sbb
mov
push
imul
mov
mov
imul
mov
and
add
push
inc
cs
cltd
adc
popf
and
out
jge
jmp
mov
ljmp
lahf
sub
in
js
mov
cltd
add
mov
add
sbb
and
jge
sub
mov
xor
movsb
sub
sub
dec
adc
das
sarb
lods
sbb
pop
lds
addl
sarb
push
sbbl
js
in
push
enter
cmpb
dec
mov
idivb
pop
dec
mul
jne
inc
push
lods
mov
shrb
jo
adc
mov
arpl
sbb
or
xor
dec
xchg
in
pushf
mov
pop
mov
das
lret
inc
jl
lret
push
faddl
outsb
sub
idivb
hlt
lock
addr16
mov
stc
mov
mov
in
lods
or
xlat
enter
jmp
xchg
mov
mov
cmp
mov
stos
call
fsubr
xchg
xor
dec
daa
sbb
jmp
and
loope
push
outsb
lcall
mov
lock
insl
aam
inc
aas
pop
std
pop
movsl
mov
adc
shlb
push
inc
cli
stos
movsl
ret
mov
pop
cltd
jnp
mov
lea
loopne
mov
popa
loopne
cmp
int3
dec
inc
xchg
stos
js
fidivrl
fs
stos
mov
dec
sub
jns
sub
inc
loopne
push
in
push
imul
push
and
sbb
xchg
mov
sbb
rcrb
jge
sbb
xor
xchg
and
or
xchg
pop
jno
mov
mov
push
outsl
mov
scas
out
test
cwtl
enter
or
sbb
mov
in
lds
xor
out
inc
lret
sub
sbb
gs
popa
dec
movsb
adc
jne
leave
sbb
test
loopne
jbe
dec
mov
test
fwait
push
arpl
push
push
inc
or
mov
ja
arpl
mov
and
mov
les
or
mov
fmul
xor
fs
and
mov
bound
pop
mov
xor
lods
clc
jns
loopne
xchg
mov
cmpsl
ret
lds
loopne
mov
lds
adc
imul
imul
jmp
sbb
mov
lock
lret
or
loopne
scas
movsl
jae
sub
mov
mov
pop
mov
mov
jge
enter
pop
call
fwait
jmp
enter
mov
clc
fdivs
fistpl
imul
je
mov
in
xchg
lret
mov
or
mov
cltd
mov
shrb
call
jae
push
fwait
add
xchg
inc
push
mov
arpl
xchg
mov
xchg
in
jo
and
or
mov
xchg
orb
mov
pop
add
and
xchg
mov
xor
mov
sbb
lcall
pop
jno
xor
push
lret
lret
sub
fmull
cwtl
mov
test
jg
aaa
cmpsl
jo
sbb
mov
xor
fcoms
xchg
pusha
outsl
dec
jmp
rcrb
fcomps
dec
test
push
push
mov
popa
lret
cmp
pop
daa
jmp
imul
cmpsb
or
mov
lcall
imul
adc
dec
lcall
mov
inc
and
pop
mov
push
sbb
mov
mov
xchg
bound
lret
xor
or
jl
cmp
movsl
lock
pop
insl
mov
leave
mov
and
push
jg
ret
dec
cltd
enter
mov
test
fdivrs
xor
add
pop
jns
cmp
add
test
jno
ret
mov
inc
or
or
jp
dec
add
jo
cs
sub
push
das
push
aam
inc
arpl
jmp
push
sqrtps
ret
ret
inc
jmp
stos
cmpsl
inc
push
jge
xor
dec
cmp
lret
jbe
dec
add
add
cmp
mov
pop
les
mov
mov
sub
aaa
adc
in
pushl
pop
movsb
mov
test
int3
mov
add
dec
cmpsl
test
jae
shrb
sbb
adc
sub
mov
ljmp
enter
push
and
lods
lods
andl
repz
xchg
pop
jns
iret
std
mov
sbb
pop
stos
mov
bound
aam
scas
and
imul
jmp
mov
mov
repnz
stc
jmp
push
mov
test
jnp
jmp
pusha
fldenv
in
dec
cmc
lock
loop
aaa
sub
cmp
mov
adc
js
fcompl
and
scas
sub
jmp
scas
add
fldt
mov
cmpsb
jmp
ret
mov
push
mov
stos
lock
rorb
push
jle
mov
pop
sbb
sub
shr
add
xchg
jb
mov
fnsave
cmpsl
sbb
mov
and
fwait
push
repnz
jbe
ret
mov
cmpsl
daa
jmp
cmp
lods
pop
mov
pop
mov
arpl
lcall
ds
out
push
mov
sbb
rorl
push
lds
imul
imul
lods
sub
jmp
jle
mov
stos
sub
jbe
gs
jmp
adc
pop
pushf
mov
xchg
xor
adc
scas
sbb
in
and
mov
in
inc
mov
cmp
int3
and
fistpl
and
add
stc
lock
pop
mov
cmpsl
lock
dec
jo
addl
and
repz
jmp
sarb
sti
pop
mov
fadds
test
lds
dec
loope
xor
js
aaa
insl
rcll
mov
jno
hlt
add
pushl
mov
insb
popa
mov
orl
jns
sub
xchg
test
or
cmp
loopne
add
jmp
bound
mov
in
inc
outsl
scas
cmc
push
gs
jno
fdiv
mov
test
enter
shrl
sub
pop
sbb
lods
ret
leave
popa
jmp
pop
jl
fstpl
inc
in
cmp
xchg
cmpsl
or
and
ret
jns
loope
push
jb
xchg
inc
fisubrl
das
add
sbb
shrl
xchg
jg
out
pop
xchg
std
cmp
add
outsl
lea
xor
call
pop
div
inc
notb
pop
sahf
push
pop
inc
clc
jns
jno
and
out
pop
sub
movsl
jmp
stc
enter
cmp
jle
les
inc
lods
stos
cmp
sbb
jmp
out
adc
popf
adc
inc
xchg
pusha
pop
dec
jmp
jo
sarb
and
shlb
inc
or
test
in
aaa
and
pop
adc
mov
sbb
push
lcall
imul
fsubp
call
dec
fs
dec
daa
xchg
and
mov
in
cmc
mov
or
cmpsb
mov
and
jg
pop
sub
dec
popf
and
popa
outsb
pop
rcrb
in
mov
pop
mov
xor
jmp
mov
fbld
jo
xchg
dec
mov
jle
nop
mov
pusha
sbbl
jmp
add
pop
sbb
inc
in
pop
in
sub
enter
insl
fwait
mov
mov
lock
pop
or
mov
cmp
fbld
xchg
test
ss
repz
ret
pop
xorl
das
sub
dec
cmp
sub
sbb
push
mov
add
cwtl
cmp
xchg
ja
and
ficoms
iret
stos
jg
sbb
mov
inc
sbb
xlat
jecxz
cmp
jbe
push
ret
jnp
inc
or
in
sub
xor
daa
inc
outsl
inc
sbb
popf
lock
xchg
pop
pop
arpl
sbb
mov
pop
mov
jmp
jge
imul
mov
outsl
icebp
cmp
inc
mov
loopne
aaa
xor
jp
movsl
fdivs
imull
push
mov
loopne
xchg
pushf
cmpsl
add
test
aas
aaa
mov
xor
push
arpl
push
cmp
dec
sbb
pop
mov
and
lret
subb
stc
push
xor
sub
dec
gs
call
jmp
movsl
aam
shll
popa
test
add
popa
jg
xchg
fldenv
stc
jecxz
and
mov
test
sub
push
dec
mov
jmp
adc
subl
jmp
imull
test
mov
sbb
fwait
inc
mov
into
adc
int
popa
pushf
cs
fisttpl
movsb
sbb
fistl
pusha
mov
add
ret
arpl
lods
mov
clc
mov
pop
jecxz
lcall
fbld
jns
add
mov
adc
jns
push
cmp
push
mov
xor
retw
movsl
lock
mov
out
loop
incb
jmp
xor
pop
inc
push
inc
xor
leave
arpl
jmp
rorl
stos
test
adc
add
out
test
bound
mov
mov
add
mov
and
mov
in
movsl
push
lock
dec
insb
or
pop
shl
jmp
mov
xchg
ret
shl
ljmp
lods
xor
and
xchg
fwait
enter
jbe
adc
pop
test
jbe
xor
js
jmp
jecxz
pop
out
test
loop
fwait
mov
lock
xor
mov
loopne
mov
call
and
add
movsl
stos
and
jmp
push
popa
mov
push
sub
jb
jns
mov
sbb
jg
sub
adc
addr16
and
fsts
lock
cwtl
mov
inc
xorl
loopne
adc
loope
or
pop
sarb
lret
add
out
shl
aam
push
pushf
fidivrs
insb
and
sub
out
dec
and
lock
push
jg
push
dec
cmp
arpl
pop
loop
inc
rol
outsl
pop
in
dec
jmp
cmc
gs
fwait
mov
adc
sahf
xor
in
mov
sbb
sbb
popf
mov
mov
frstor
stos
std
scas
int3
jecxz
int
sbb
je
loop
rorl
stc
call
jg
push
cwtl
and
lock
push
push
fs
xchg
jle
or
jns
cmpsl
aas
pushf
subl
xor
loopne
push
and
rorb
xor
pop
test
test
fisubl
mov
scas
cmp
jo
sub
ljmp
out
pop
fwait
push
fwait
in
push
in
in
dec
testl
xchg
aas
cmp
call
pop
sbb
imul
test
ds
or
aam
sarb
push
scas
in
add
mov
cmpsb
fistpll
bound
cmp
loop
lret
mov
mov
lea
push
dec
pop
stos
xor
xchg
inc
test
fidivs
dec
or
lock
sub
pop
dec
fldl
jns
out
cs
es
xchg
add
jmp
cmp
ret
adc
mov
int3
lods
dec
lret
insl
and
sbb
xorl
adc
lahf
out
mov
filds
cmpsl
push
lods
loopne
icebp
pop
scas
push
jbe
stos
imul
inc
xor
dec
xor
cmp
inc
inc
lods
lods
outsl
pop
and
lea
sti
rep
test
stos
sub
push
jmp
sbbl
enter
xchg
icebp
cmp
leave
in
cmp
dec
inc
pop
ss
sub
sub
mov
in
call
and
cmc
xchg
mov
xor
lock
sti
adc
cld
inc
jmp
mov
push
pop
iret
lret
lock
and
jg
js
scas
inc
mov
inc
dec
sub
sbb
loop
loopne
leave
imul
and
mov
xor
jns
pop
mov
dec
pop
das
mov
dec
imul
add
stos
sti
pop
lods
sbb
xchg
ret
add
lcall
jge
or
fwait
cmpsb
and
or
inc
dec
pop
lcall
vpor
dec
sbb
cmpsl
sbb
mov
imul
loop
pushf
inc
add
xor
test
inc
iret
jmp
addr16
stos
cmp
cmp
cmp
pop
or
ljmp
mov
cmpb
sub
and
jae
mov
jo
xor
inc
mov
repnz
pop
mov
je
lock
push
push
mov
inc
mov
xchg
cmc
cld
or
sub
idiv
mov
fcomps
in
pop
push
add
and
stc
lock
sub
jge
jb
add
lret
sbb
cmp
popa
es
ljmp
stc
test
nop
scas
or
arpl
jae
outsl
xor
inc
mov
es
dec
jae
stos
aaa
push
cmp
loope
loope
int3
sahf
and
jmp
fstp
pop
add
fiadds
jmp
sub
in
orl
xor
fwait
cmp
jmp
enter
dec
lea
outsb
mov
out
inc
or
je
pop
push
jmp
mov
lods
pop
mov
mov
icebp
imul
lock
cmp
inc
mov
mov
xchg
cmp
movsl
mov
and
in
lea
fisubrs
sbb
cmp
enter
pop
dec
push
jmp
call
lods
ror
dec
or
outsb
inc
mov
push
scas
xchg
cmp
fildl
sub
popa
cwtl
out
inc
cltd
sub
xor
sbb
jne
int3
mov
pop
xchg
jae
loopne
movsb
push
fucomp
mov
xchg
jnp
dec
mov
or
pop
xor
sub
pop
outsb
cmp
cmp
xchg
inc
in
sbbl
out
jg
in
in
lret
jmp
pop
dec
and
popa
ret
and
pusha
enter
push
xor
ljmp
imul
push
lock
adc
fwait
loope
loopne
pusha
push
movsl
sahf
bound
cld
ret
inc
and
inc
int
jmp
and
dec
aad
loopne
push
dec
test
arpl
scas
mov
fs
aam
stos
movb
jnp
shl
mov
imul
adc
imul
cmpsb
icebp
push
mov
lods
test
scas
jb
stos
sbb
fldcw
lds
mov
int
test
mov
aad
inc
js
cltd
and
push
add
inc
mov
imul
loope
sub
adc
mov
jle
fisubrs
arpl
stc
adc
aaa
ror
mov
ds
pop
mov
add
fldt
jmp
inc
mov
das
in
sub
enter
pushf
cmp
push
mov
mov
and
xor
xchg
in
jnp
adc
mov
push
leave
test
lcall
pushf
jns
xor
mov
aaa
inc
fidivrs
dec
jmp
stos
icebp
out
clc
movsl
dec
sub
mov
test
in
fwait
orl
stc
int
mov
pop
jnp
mov
cmpl
stc
mov
lea
andl
stos
inc
adc
lds
into
mov
jmp
arpl
sub
mov
sbb
jb
icebp
in
mov
mov
les
fbld
in
pop
adc
mov
std
mov
fistps
lret
xchg
sub
sahf
cmp
cmp
lods
shlb
fwait
ror
sbb
loope
sbb
mov
or
push
dec
icebp
daa
push
test
movb
xor
leave
cmp
xchg
push
jbe
sbb
daa
jmp
jno
or
sarb
shll
or
xor
loope
lcall
xlat
mov
rclb
mov
arpl
popa
outsl
cmp
mov
scas
rcrb
sub
jno
or
dec
fdivs
fs
xchg
ret
mov
mov
pop
mov
mov
out
push
xor
rcll
mov
mov
cmp
adc
cmp
dec
adc
push
and
and
aas
into
popf
out
pop
xchg
inc
sbb
dec
scas
stos
sbb
or
flds
scas
inc
nop
ret
inc
movsb
cltd
dec
adc
repz
lcall
clc
scas
aam
in
inc
addr16
inc
cmc
inc
inc
leave
scas
sbb
inc
mov
loope
pop
daa
andb
sti
popf
scas
test
rcl
sub
mov
cmp
jbe
mov
outsl
int
rcrb
adc
and
jno
int3
loop
jnp
es
jne
scas
adc
inc
insb
int3
scas
jecxz
cmp
lods
xchg
test
rclb
rolb
popa
xchg
mov
roll
rorb
cmp
xchg
cmp
pop
fwait
xchg
inc
push
xchg
lods
jecxz
lcall
jecxz
sbb
adc
das
fiadds
fimull
xchg
mov
and
lahf
pop
pushf
jle
pop
stos
ret
mov
scas
shll
xor
inc
add
dec
es
mov
adc
sbb
xor
add
rcrb
leave
mov
orb
inc
es
movsl
push
ds
in
fwait
int3
icebp
and
loope
xchg
shlb
scas
mov
aad
cmpsb
mov
invd
shrb
sub
pushf
popa
jnp
xchg
mov
stos
cmp
stos
fwait
mov
cltd
leave
in
pop
jbe
add
mov
fistpl
aad
dec
push
cld
adc
dec
cmp
jmp
stos
mov
scas
popa
add
mov
cmp
adc
das
adc
aaa
ret
mov
fcompl
adc
sub
orb
stos
lea
and
lret
scas
push
jmp
fs
icebp
clc
fwait
in
push
out
out
shl
mov
fs
lahf
test
and
fmull
xchg
inc
stos
imul
negb
aaa
add
jo
stc
adc
xorl
shrl
fimull
int
and
ds
mov
ror
inc
stos
clc
popl
int
clc
movl
into
mov
ret
mov
mov
mov
sub
cltd
mov
insb
jp
test
pushf
or
push
repz
jno
xchg
push
arpl
mov
push
cmp
lcall
add
cmp
pop
push
jo
aad
mov
and
push
jae
mov
ret
or
test
call
cs
xchg
mov
hlt
push
jno
pop
sbb
sub
and
call
sti
pop
imulb
int3
lret
mov
pop
or
lods
jbe
adc
lcall
mov
adc
push
mov
cmp
mov
movsl
mov
aad
rorb
test
ret
lock
ret
mov
mov
inc
mov
jo
cmp
shlb
jecxz
imul
jno
dec
pop
add
pop
fisttpll
mov
cmp
mov
mov
jmp
mov
adc
mov
inc
cmp
mov
mov
push
xor
pop
insb
pop
outsl
push
inc
insl
adc
cmp
stos
push
idivb
cmp
push
sbb
stos
adc
cmp
and
sbbl
mov
mov
fists
imul
loopne
insb
stos
dec
lcall
dec
inc
jmp
and
sub
push
add
enter
dec
jmp
loope
pop
xor
inc
mov
mov
sbb
in
inc
loopne
cltd
jb
icebp
out
jmp
gs
jg
mov
mov
adc
mov
fwait
in
jmp
dec
pop
jmp
jp
dec
or
sbb
in
stc
cmp
popf
cmp
sarb
jne
pop
push
loopne
mov
mov
fs
sub
cmpsl
stos
mov
jae
lret
push
adc
lret
int3
pop
push
aad
mov
xor
mov
pop
and
in
mov
jno
inc
fildll
pop
aaa
add
nop
sub
fidivl
movsb
xlat
inc
or
cltd
repnz
sbb
and
dec
cmp
or
lea
cmp
xor
mov
mov
dec
push
mov
clc
mov
push
mov
sub
lods
orl
imul
sbb
jp
mov
subl
jne
frstor
xchg
push
xor
orl
test
cmpsl
test
pop
add
add
test
scas
fmul
inc
pusha
and
rcrb
mov
fsubs
or
and
cmc
xor
fisubs
adc
jne
int
lods
fisubrl
mov
xor
ret
addr16
fisubs
cmp
mov
mov
daa
and
pop
aam
dec
xchg
mov
add
push
fdivrl
or
mov
stos
enter
jmp
sub
idivl
inc
mov
sub
mov
xchg
int
enter
xor
or
sti
and
call
inc
jge
lret
popf
jmp
push
mov
sub
and
stos
fldt
cld
and
into
xchg
fsts
lock
sub
inc
inc
cmpsl
lods
lods
aas
inc
lcall
mov
push
mov
sarl
inc
scas
clc
jmp
into
pop
jnp
rclb
lcall
inc
add
insl
or
loopne
and
jmp
mov
lea
mov
cmpsl
sub
cmp
rcrb
lock
enter
fucomip
lock
inc
xor
ficoml
jg
ljmp
jb
enter
stc
sbb
sbb
mov
cltd
push
xlat
lret
movsl
dec
lret
push
pop
inc
xchg
jno
js
mov
push
sub
sbb
popf
xlat
mov
inc
cli
mov
push
mov
addr16
dec
xchg
lods
int3
cmp
imul
out
inc
sub
inc
or
xchg
inc
xchg
insl
lods
jb
cmp
inc
inc
daa
sbb
bound
mov
enter
fnsave
xchg
gs
inc
and
aam
push
loopne
add
push
jno
lock
repz
sbb
test
jge
js
cmp
leave
and
or
pusha
insb
fcoms
and
in
pop
jmp
jns
es
fwait
cmp
or
jo
inc
insb
push
mov
std
or
lea
lods
hlt
mov
or
mov
lcall
mov
loop
mov
xchg
or
hlt
stos
push
xor
adc
mov
or
push
and
sbb
lcall
dec
sub
inc
clc
mov
dec
pusha
dec
mov
mov
fsubl
rol
stos
movsl
ljmp
loopne
mov
xor
cmp
jmp
sarb
shl
jno
hlt
mov
jno
xchg
int3
daa
es
and
mov
out
in
rolb
push
inc
ds
imul
mov
lret
mov
test
lock
dec
mov
stos
enter
ja
jmp
cmc
xchg
cmp
inc
jo
int
negb
xchg
add
mov
jp
or
pop
push
ds
adc
pop
cmp
push
mov
and
push
pop
add
jmp
or
jmp
xchg
aam
and
jbe
mov
sub
loop
ret
pop
xchg
test
mov
iret
or
insl
xor
cmpsl
sub
mov
cmp
call
lods
mov
mov
pop
inc
xor
mov
jg
mov
popa
pop
and
lock
test
or
and
mov
push
test
push
mov
push
pop
mov
xor
mov
sar
xchg
cmpsl
jg
inc
pushf
jmp
mov
aam
mov
dec
je
insb
fstps
sbb
shl
mov
and
or
sbb
pop
cmpsl
jmp
dec
mov
stos
popa
gs
inc
inc
xchg
push
sarb
loop
mov
dec
fldt
cld
jmp
lods
sti
test
push
data16
fmuls
and
movsb
cmp
scas
dec
jg
jns
lock
mov
jb
mov
outsl
jo
cmp
stos
jge
inc
add
jle
jns
mov
or
sbb
jns
add
inc
fwait
dec
ljmp
jo
mov
push
inc
test
xchg
call
aad
jb
inc
orl
jmp
inc
mov
xchg
shlb
out
jp
pop
shlb
cmovg
pop
clc
inc
push
push
inc
sub
sbb
or
sub
insb
mov
je
sub
cmp
xchg
push
outsl
sub
push
and
cltd
lock
icebp
jmp
jmp
and
xchg
mov
add
and
jmp
cmp
dec
ja
pop
mov
rcrb
jns
imul
mov
xchg
inc
sbb
cmp
dec
adc
les
mov
inc
pushf
dec
lret
fldenv
or
popl
insl
cmp
frndint
pop
mov
push
mov
pop
lock
push
aas
test
rcll
lea
ret
mov
jle
xor
movsb
int
jmp
movsl
jbe
dec
push
mov
jne
stos
sub
dec
adc
stos
mov
xor
dec
mov
cltd
push
pop
cld
and
xlat
call
mov
loopne
jns
cmp
xchg
mov
gs
mov
pop
dec
sub
or
inc
sbb
xorb
fwait
lock
push
loopne
and
sub
loopne
push
pusha
fisttpll
fiadds
mov
loopne
adc
jns
sbb
mov
and
jmp
ret
stos
stc
dec
mov
nop
aaa
pushf
mov
int3
lea
xor
xor
mov
or
movsl
lock
xchg
ret
loope
loop
jno
outsl
xor
mov
jmp
adc
cmpsl
mov
loopne
lods
pop
les
imul
and
pop
pop
mov
fwait
orb
sti
imul
lods
cmp
ja
and
leave
xor
push
gs
arpl
push
call
sbb
xchg
lahf
repz
gs
jne
leave
test
inc
sbb
inc
push
lret
inc
loopne
adc
jne
push
jae
cmc
fisttpl
xor
dec
fisubrl
jae
push
lock
leave
loopne
inc
mov
push
rorb
jmp
sahf
mov
sar
mov
dec
nop
sbb
dec
add
sub
stos
xchg
mov
scas
mov
xchg
jnp
lret
sub
popa
aaa
gs
fst
arpl
mull
pop
outsb
cltd
jo
cli
arpl
xchg
and
jno
imul
pop
jno
int
dec
pop
mov
mov
sub
mov
xor
mov
jecxz
dec
mov
cmp
sbb
mov
sub
mov
and
daa
push
je
mov
cltd
call
mov
pop
lock
mov
insb
pop
int3
mov
xchg
in
push
stos
mov
shrb
fadd
shlb
pushf
addb
dec
movsb
pop
mov
pop
stos
or
xorb
sbb
dec
mov
in
lods
ss
jmp
sub
dec
bound
stos
add
bound
lock
sti
fdivs
jge
sub
popa
inc
mov
daa
arpl
lods
shl
stos
aam
gs
jmp
pop
lea
int3
cmp
imul
and
push
dec
jmp
test
test
lret
or
mov
sbb
xchg
sti
popf
lods
iret
popa
add
add
mov
mov
orb
add
fs
mov
test
imul
pop
call
leave
pop
sbb
cmp
movsl
inc
cmp
jmp
jbe
cmp
xchg
sahf
pop
jno
ds
lods
and
cmp
xor
mov
mov
scas
enter
sub
shrb
pop
mov
inc
pusha
and
inc
insb
stos
and
inc
pop
pop
jl
add
mov
loop
mov
test
mov
in
sbb
fcomps
insl
add
and
dec
inc
out
aam
pop
stos
int
fadds
pop
mov
pusha
mov
xor
or
pop
outsb
xchg
ljmp
dec
adc
test
outsl
fwait
shr
movsl
jae
insl
jno
sbb
push
addb
lret
addl
aad
push
mov
jmp
loope
mov
sbb
mov
or
jmp
or
fldl
insb
inc
and
sbb
lods
mov
or
test
lods
popf
pop
dec
popa
outsl
into
aad
mov
inc
adc
fwait
adc
sbb
sahf
imul
insb
pop
xchg
fwait
cli
jmp
push
call
sub
dec
mov
mov
add
inc
and
jmp
scas
iret
popf
lods
push
gs
xchg
adc
xchg
mov
imul
fwait
shlb
loopne
lock
cmp
mov
clc
jae
andl
add
lods
daa
cmp
popa
lock
mov
inc
mov
add
inc
mov
scas
psubusw
xchg
in
arpl
mov
jecxz
scas
mov
or
add
sub
out
sbb
lret
dec
pusha
sub
mov
cs
stos
dec
or
insl
scas
and
cld
aam
cmp
aam
push
jmp
push
mov
out
dec
bound
stos
mov
inc
jmp
inc
sbb
pushfw
lods
mov
xor
in
fs
mov
sbb
xchg
adc
pop
scas
sbb
cltd
repz
jge
std
inc
cmp
pop
sub
cmp
mov
jns
push
loope
insl
stos
lcall
dec
shrb
mov
xchg
addr16
or
ja
pop
xor
scas
addb
xchg
cmpsb
cs
xchg
enter
outsl
jmp
shll
mov
out
movsl
sarb
xor
cs
jno
mov
add
sbb
shlb
cwtl
pushf
jns
xor
int3
aam
xlat
jmp
xchg
pop
shll
mov
inc
jmp
lods
fists
xchg
movups
cmp
push
mov
pop
dec
mov
jmp
in
mov
jne
mov
pusha
sbbl
in
mov
cmpsb
push
dec
negb
sbb
xchg
das
loope
fdivrp
pop
out
lock
cmp
push
jmp
push
adc
push
mov
push
mov
cmp
jmp
mov
add
push
cmpsl
xlat
cmc
push
mov
push
mov
lock
lods
dec
daa
int
das
cmp
xchg
movsb
inc
jle
loope
jne
mov
push
outsl
cmpsl
sbb
cmp
cmp
cmpsl
fmuls
dec
jmp
enter
pop
mov
js
shll
sub
cmpsb
mov
add
stc
mov
fwait
mov
dec
mov
inc
mov
pushf
sbb
movzbl
in
ja
idivb
mov
or
cmpsl
mov
pop
lret
ss
mov
or
test
and
int3
lret
xor
rclb
movsl
mov
insb
test
add
sub
push
adc
aaa
mov
lds
shr
scas
sbb
cmp
jno
pop
rcrb
adc
jb
and
and
in
bound
loop
mov
cvtdq2ps
lcall
orb
or
sti
rcrb
mov
lcall
mov
leave
mov
push
test
dec
aaa
stos
push
sti
mov
xor
xor
aad
pop
cmc
xor
add
and
lret
fadd
dec
and
xchg
xor
fwait
jecxz
popf
in
shl
xor
clc
test
shlb
scas
lock
stos
ljmp
loopne
fnstsw
mov
pop
lret
or
pop
dec
pusha
fs
mov
dec
jmp
adc
add
adc
dec
add
lock
inc
add
sbb
lahf
fdivp
jecxz
adc
mov
mov
cmpl
movsl
mov
hlt
lret
mov
sub
imul
into
sub
sub
pusha
sbb
stos
shlb
or
pusha
out
xchg
push
cmp
mov
jb
fcmove
movsl
push
pop
movsl
sbb
loopne
jnp
nop
popf
fnstsw
dec
jnp
repz
add
sarb
adc
mov
orb
stos
cmp
xor
sbb
mov
jl
sub
fwait
jmp
pop
movsl
sbb
sbb
stos
adc
inc
add
enter
or
xlat
dec
xor
popa
add
dec
int3
or
xchg
dec
add
xchg
pop
xchg
jb
test
mov
mov
or
movsl
add
movsb
sbb
mov
lds
or
nop
push
addb
repnz
loopne
jmp
inc
cmp
stos
arpl
lods
aad
add
aam
adc
and
leave
adc
inc
mov
adc
jnp
jno
xor
test
fdivp
push
dec
push
push
mov
lock
jmp
cmp
inc
mov
mov
push
jns
lahf
mov
jg
ud1
ljmp
sbb
shrl
sar
mov
jmp
movsl
cmp
pop
inc
daa
push
mov
inc
lock
push
jne
nop
test
jmp
sbbb
mov
fwait
scas
mov
loop
sbb
fisttpl
and
fimull
into
fs
inc
sbb
fsincos
jle
jmp
jp
call
das
mov
mov
stc
jmp
ljmp
dec
shlb
insl
out
adc
add
cltd
mov
and
mov
in
lcall
xchg
cmc
pop
jecxz
xor
push
inc
mov
sbbl
dec
mov
cltd
subl
cltd
sbb
xchg
sbb
push
adc
cltd
es
aam
inc
mov
dec
jl
add
repnz
cltd
add
cmp
cltd
std
cli
loope
pop
fbld
loope
cltd
pop
shr
push
aaa
pop
das
cltd
jecxz
mov
aad
rcrb
nop
daa
cltd
dec
leave
mov
adcb
xchg
jb
enter
xchg
jmp
xor
addr16
cmpsl
fisubs
ds
rcrl
testl
into
cltd
dec
cs
inc
jns
pop
movsb
scas
movups
add
fucomp
loope
icebp
repnz
sub
fistl
es
mov
xor
xlat
mov
inc
jle
and
sub
imul
gs
inc
decl
mov
lret
fsubl
test
mov
jo
mov
cltd
jge
and
cltd
fs
es
outsl
mov
insl
mov
sub
cltd
imul
cltd
mov
dec
loope
pop
push
sub
add
sbb
std
ret
loopne
cmp
stc
ficomps
push
jl
adc
cltd
lret
mov
pop
pop
sub
mov
jl
cltd
pushf
sarl
mov
dec
and
rol
xor
call
mov
pusha
or
mov
xor
cmp
cmp
sbb
adc
cltd
push
aas
inc
je
out
cltd
aam
rcrl
inc
pop
mov
or
adc
cltd
mov
xchg
lea
push
subb
cmp
stos
mov
gs
fistl
mov
inc
xor
and
in
cwtl
cltd
sti
hlt
out
insl
add
xchg
xchg
stc
pop
stc
mov
cltd
nop
add
mov
pop
cltd
sub
add
ja
xor
cltd
adc
add
shll
addl
sti
cltd
cmpsb
cmp
test
std
int3
xor
idiv
jecxz
cltd
pop
xchg
inc
bound
or
cmp
jbe
clc
in
imull
dec
and
mov
pop
cmc
dec
cltd
int3
repz
lret
fistpl
out
aam
lds
add
mov
jae
xor
sbb
scas
je
loope
popf
mov
mov
addr16
xchg
sub
push
stc
cltd
enter
addr16
in
mov
xchg
sbb
pop
adc
or
in
mov
pushl
add
cmpsl
fstl
in
dec
jno
mov
or
xchg
adc
fnstcw
pop
mov
popf
sarb
xchg
dec
cmpsl
mov
cs
repz
fistps
fcoml
arpl
shlb
lock
pop
outsl
in
xor
scas
aam
lea
cltd
jp
leave
dec
imul
push
out
xor
std
sub
push
das
jp
punpcklbw
out
lret
mov
mov
add
xor
es
shlb
iret
sbb
xor
js
adc
cltd
arpl
xor
lcall
inc
sbbb
pop
adc
aad
in
pop
sarb
test
xchg
adc
mov
pop
sub
jge
lea
xchg
mov
cltd
sarb
ktestb
sbb
jge
pop
push
cmp
clc
xor
cltd
xor
cmpsb
insl
add
add
popf
les
cmc
cli
icebp
pop
cltd
dec
cmovne
fwait
and
fs
fwait
arpl
jnp
decb
cwtl
add
out
stc
flds
mov
in
scas
push
mov
loopne
add
cmp
cmp
out
sbbl
cltd
xor
jns
cltd
imul
pop
scas
mov
mov
outsl
xchg
fwait
dec
enter
cltd
sbb
lea
xor
xor
jg
addr16
lcall
xor
cltd
jnp
add
out
test
enter
jle
adc
lahf
in
push
js
lret
es
inc
xchg
and
xchg
xor
sbb
sbb
cltd
mov
mov
lea
jge
jl
pushf
push
fwait
movsl
add
daa
push
loope
adc
pop
loopne
in
sbb
jecxz
cmp
cltd
repz
popf
lods
jmp
pop
loopne
adc
sbb
jo
and
push
push
movsl
mov
fistpll
dec
fchs
sbb
adc
repnz
call
mov
imul
ss
lods
cmp
movsb
pop
rcrb
ret
shr
adc
in
mov
dec
push
std
nop
addb
sbbb
cmc
sbb
adc
int3
sub
mov
pop
push
pop
loopne
xchg
pushf
sub
pop
pop
pusha
daa
aam
fisttps
jmp
ja
sti
or
push
loop
fwait
sar
lcall
mov
std
xor
push
jge
fcompl
fidivrl
lock
mov
dec
mov
sub
jmp
outsl
mov
push
add
add
add
loop
xor
mov
add
lret
mov
sbbl
pop
pop
mov
pop
repz
jg
outsl
xor
cld
sub
movhps
mov
movsl
push
test
inc
inc
mov
mov
ret
inc
mov
sbb
add
fwait
pop
es
jmp
mov
xlat
fisubs
test
sub
out
imul
add
lock
add
rclb
pusha
loope
jmp
xlat
cmpsb
mov
add
cs
push
jl
int3
sub
cmp
int
mov
adc
xorl
push
mov
bnd
jmp
outsl
js
push
xor
shlb
std
mov
outsl
xchg
and
or
loop
mov
xchg
push
push
imul
jns
shr
ss
inc
loopne
jno
jnp
addr16
xchg
scas
mov
imul
sbb
xchg
pop
adc
sbb
and
js
jge
js
loope
mov
sbb
sbb
mov
addr16
sub
lods
mov
dec
mov
dec
ret
sti
lock
fiadds
or
sub
mov
push
jbe
sub
inc
dec
mov
mov
bound
loopne
jle
add
adc
adc
xlat
inc
stos
lahf
cmpsl
cmp
and
or
loopne
mov
int
jns
xchg
jmp
xchg
cmpsl
pop
stc
sti
insb
pop
jecxz
inc
xchg
mov
rclb
xor
push
xchg
jns
lea
int
push
jns
sbb
xor
mov
rcrb
aam
into
xchg
mov
jmp
aaa
mov
dec
stos
jl
push
rcrl
flds
dec
jo
mov
divb
insl
mov
mov
mov
test
js
xchg
dec
inc
out
cwtl
cli
cmp
loope
xchg
jb
push
cwtl
adc
push
cmp
mov
mov
inc
sahf
enter
push
or
mov
sbb
sub
hlt
fdivrs
negl
sub
fsubrs
outsl
minps
push
xchg
mov
or
dec
sub
jmp
imul
pop
mov
jmp
les
insl
xor
dec
dec
add
add
repz
sbb
or
sbb
sti
push
popa
mov
gs
pop
mov
loopne
rcr
jmp
fldcw
movsl
mov
ret
jle
pop
cmp
mov
in
mov
fcomip
push
lock
in
pusha
inc
dec
pusha
repnz
fldenv
sub
add
jb
sbb
stos
sub
jl
pusha
into
push
xchg
pop
mov
adc
push
stos
inc
mov
and
outsl
mov
jno
sbb
push
rcrl
adc
addr16
mov
push
push
pop
cltd
adc
xchg
jmp
nop
jg
stos
pop
push
jle
sbb
testb
sbb
adc
int3
dec
pusha
lods
mov
and
cltd
xchg
sbb
mov
jmp
pop
pop
mov
sbb
xorb
mov
fcos
mov
pusha
dec
iret
jmp
cltd
add
push
xor
xlat
xor
jge
add
shrl
push
orb
mov
fbld
add
jno
jl
repnz
addr16
mov
je
add
and
ror
and
mov
ret
sahf
push
pop
fstps
cltd
es
jmp
test
xchg
cli
cltd
cld
call
xchg
imul
mov
test
cltd
mov
movsl
inc
xchg
xchg
dec
pop
cltd
xchg
rep
repnz
cs
push
cltd
jg
and
xchg
fwait
pop
filds
push
in
pop
sub
cltd
inc
into
push
mov
movsl
outsl
pop
pop
sub
and
sysret
shlb
dec
cmp
addr16
push
xchg
mov
loopne
cmpl
sti
clc
fs
mov
in
push
ret
cltd
sarl
sub
dec
fs
cltd
ret
sbb
jne
test
nop
cltd
add
sub
cmpsl
jmp
xor
lea
into
stc
mov
sbb
leave
rcrl
jge
loopne
fsubrs
je
cltd
cld
push
imul
std
mov
cltd
xchg
xor
dec
pop
test
sbb
push
std
incb
fwait
mov
lea
jnp
cmpsb
loope
lods
cltd
movsl
in
je
mov
pop
lcall
cltd
aad
push
enter
out
pop
sub
movsb
cltd
ja
and
cmp
bound
testl
mov
fwait
xor
js
lret
inc
repz
cltd
lahf
xor
adc
mov
lret
xchg
cltd
jge
cwtl
dec
popa
mov
sbb
call
outsl
mov
jge
xlat
sub
andb
pusha
jb
leave
cltd
inc
aaa
fmuls
sbb
xchg
into
cmpsl
aaa
pushf
pop
fs
jp
mov
xor
mov
scas
or
mov
shrl
movsl
insb
xor
adc
inc
cmp
xchg
rorl
cmpsl
js
pop
loope
dec
pop
or
cltd
shrb
push
imul
sahf
mov
cltd
cmp
icebp
cmp
dec
in
jg
mov
mov
sub
lds
jns
xor
sub
inc
jnp
cltd
dec
xor
mov
cmpsl
pop
adc
push
mov
fs
pop
cmp
test
cmpsl
mov
sbb
cmpsb
stc
cltd
dec
jno
lret
or
sahf
mov
mov
cltd
sbbl
mov
mov
jl
xchg
cmpb
out
inc
cltd
sub
push
push
cltd
cmpsb
dec
lock
mov
xchg
mov
ljmp
inc
fcmovbe
jae
mov
cltd
nop
mov
lea
pop
in
cltd
mov
sbb
jmp
movsl
xchg
cltd
std
fs
dec
add
xor
cltd
insb
mov
insl
inc
cltd
push
hlt
call
push
cltd
or
aaa
mov
nop
mov
lea
cmp
mov
jmp
jmp
imul
jno
out
sub
iret
cltd
enter
icebp
loop
fists
pop
and
pop
xchg
scas
inc
lret
into
mov
jb
call
sahf
js
inc
loope
or
add
out
sub
es
jae
push
sti
std
cli
addpd
andb
cmpsb
and
mov
cltd
or
mov
mov
mov
sbb
in
movsl
lcall
lds
mov
fwait
adc
adc
stos
icebp
scas
cmpsw
mov
aam
adc
lock
enter
mov
sbb
fstps
sbb
sub
or
mov
aaa
jmp
add
cmp
and
pop
adc
cmpsl
mov
out
adc
jge
xlat
das
cltd
push
pop
js
add
cld
jbe
mov
mov
sub
pop
cltd
jo
fucomp
lret
jnp
inc
aam
pusha
es
loope
incl
and
and
jl
cld
sub
and
xor
xchg
sub
pop
cltd
adc
es
inc
xchg
pop
push
ljmp
adc
lcall
xorl
sub
fwait
mov
cmpl
pop
loope
mov
mov
adc
rcrb
leave
int3
cwtl
fcompl
pusha
enter
mov
dec
pop
mov
mov
sub
jbe
daa
leave
cltd
xchg
out
cltd
mov
sub
cli
xchg
lock
add
pop
nop
cmp
and
fstps
loopne
mov
cltd
cmpsb
shr
jno
loop
xchg
cmpsl
push
mov
pop
sbb
scas
jg
xchg
cmc
push
cltd
sahf
or
cmpb
sbb
cli
std
dec
lcall
imul
shlb
cltd
je
add
fstp
movsl
pop
jnp
cltd
cmp
cltd
jle
stos
testl
cli
mov
in
or
cmpsl
fadd
adc
xchg
xor
push
std
pop
cmc
mov
pusha
inc
lods
cmp
int3
scas
fsubrs
pop
pop
movsl
inc
sub
jae
mov
add
cmpsl
add
xchg
jo
sub
scas
bound
or
fsincos
roll
out
mov
jecxz
scas
cltd
xchg
xchg
xchg
stos
sub
mov
push
push
adc
cwtl
adcl
xor
add
jecxz
xor
or
mul
pop
sbbl
out
sbb
mov
icebp
scas
sbbl
xor
push
fscale
repnz
in
daa
mov
xor
xor
inc
mov
or
out
cwtl
cltd
imul
std
sbb
push
dec
dec
cmpsl
iret
loop
add
jmp
push
stc
lret
cld
cmpsl
xor
jmp
pop
adc
mov
xor
push
jno
jb
outsb
jnp
test
js
cltd
mov
jmp
add
ret
daa
cltd
insl
bound
cmp
icebp
inc
sub
xchg
sahf
cltd
lea
fwait
and
xlat
dec
inc
cltd
pop
and
pop
loop
loopne
cld
mov
test
mov
pusha
insl
push
cmc
test
sbb
adc
pop
dec
cltd
lcall
outsb
dec
inc
scas
push
sbb
sbb
mov
cltd
or
sbb
mov
test
out
push
roll
loop
movl
xchg
les
pop
or
cmp
scas
lahf
das
sbb
cmpsl
ss
xchg
imul
xor
dec
cltd
pushf
jbe
aas
xor
adc
loop
or
mov
cltd
loope
add
idivb
fcmovne
pop
leave
rcrl
inc
mov
xchg
lods
stc
nop
inc
adc
jne
sahf
jle
ljmp
xchg
imul
out
pop
mov
cmc
and
and
cwtl
out
sarb
adc
pop
inc
push
cltd
xchg
mov
fld1
out
push
test
dec
sarl
jae
push
andb
cltd
add
sbb
loop
lock
pop
jl
ret
leave
fcoml
mov
shlb
sub
movsl
mov
xchg
repnz
inc
mov
mov
jnp
adc
aad
dec
rcr
cmpsb
mov
jmp
add
sti
adc
mov
insl
dec
adc
pusha
outsl
cs
ljmp
xor
outsb
dec
mov
pop
dec
lock
mov
cmpsl
inc
sub
mov
daa
stos
hlt
jmp
cmp
or
pushf
xor
jmp
cmpsl
ret
push
sbb
lret
bound
sub
jl
filds
data16
pop
mov
aaa
rcrl
int3
cmp
imul
int3
push
dec
jle
outsb
xchg
pop
sti
lods
mov
mov
mov
loop
mov
add
adc
and
dec
jmp
jo
or
negl
lock
dec
lea
and
pushf
popa
push
adc
add
fsubl
mov
adc
mov
push
push
in
movsb
mov
push
mov
adc
or
jg
pop
mov
orl
into
jl
fnstcw
pop
fdivs
dec
add
and
sbb
push
test
adc
xor
dec
or
sbb
pop
xchg
or
ds
andb
shll
add
inc
ja
add
xchg
mov
sbb
cmp
test
or
xor
leave
sub
or
jno
xor
rol
enter
jmp
ss
add
adc
mov
push
mov
dec
out
sub
cmpsl
callw
and
lcall
arpl
sbb
pop
in
or
mov
fisubl
dec
push
lret
jmp
and
lahf
adc
xor
mov
sbb
cmp
inc
jb
fadds
into
lcall
sbb
and
repz
jmp
pop
stc
cmpxchg
test
mov
movsb
es
aaa
enter
jmp
mov
and
enter
and
xbegin
mov
cltd
pushf
sbb
sbb
adc
sub
sub
out
aam
ds
mov
lahf
addr16
lret
jmp
mov
mov
inc
and
pop
inc
add
mov
jne
jno
test
lods
iret
push
jp
imul
shl
cmpsl
mov
push
in
scas
mov
loopne
jmp
push
cmp
push
mov
sbb
mov
pop
rorb
iret
cmpl
pop
lock
imul
std
or
lock
ja
pop
fld
ja
loop
cmp
aaa
or
mov
mov
adc
jp
scas
cmc
jns
cld
arpl
xchg
sub
cmp
jns
lods
lock
mov
xor
mov
ljmp
arpl
daa
jo
sub
push
xor
jns
xor
adc
cmc
jmp
mov
je
xchg
insl
mov
cmp
lahf
jmp
leave
pop
lock
push
mov
mov
dec
loopne
pop
icebp
cmpsl
cmpsb
mov
fsubs
cltd
pop
push
jl
into
fisubl
mov
mov
nop
and
xor
popa
lahf
fidivl
fwait
scas
call
mov
sbb
lock
push
call
test
mov
sbb
test
std
in
sbb
int
cmp
stos
sbb
lods
popf
jbe
adc
inc
pop
scas
adc
orb
fdivrs
mov
outsl
mov
adc
adc
mov
hlt
call
jmp
push
xchg
jo
insb
push
pop
or
idivl
stos
sub
shl
pop
adc
cmp
jle
xor
cmp
enter
push
mov
lea
test
xor
jecxz
sbb
jp
hlt
jl
push
jg
loopne
pushf
jmp
fstpl
cmp
adc
and
cs
stos
sub
dec
push
pop
es
notb
stos
arpl
sti
cltd
pop
push
js
adc
in
inc
pop
push
insl
hlt
mov
mov
mov
jle
fsubr
fmul
jae
jmp
and
test
loopne
xchg
pop
lods
outsl
mov
fcmovnu
loopne
call
and
xchg
and
into
mov
xchg
mov
sub
dec
lret
and
pop
push
push
pop
iret
loopne
mov
fsubrs
sub
mov
add
add
les
jns
cs
mov
and
ljmp
dec
sbb
pushf
ja
mov
jno
in
shl
xor
adc
cwtl
cmp
mov
sub
scas
and
ss
das
mov
jns
jmp
fsubr
sbb
ja
and
xchg
fs
iret
das
rolb
insl
outsb
inc
imul
sub
lret
xchg
int
mov
dec
pop
push
gs
iret
mov
shrl
stos
pop
das
cli
fisttpll
rolb
nop
mov
mov
inc
lea
stos
outsl
jg
scas
sub
mov
adc
shll
inc
cli
enter
mov
pop
push
xchg
imul
inc
ret
ds
sbb
aam
fldenv
or
push
ss
lods
imul
out
pop
lods
loop
outsb
sub
ja
or
imul
into
inc
js
pop
out
imul
enter
dec
out
movsl
sbb
adc
nop
add
mov
or
aad
ljmp
jmp
test
jmp
mov
loopne
stc
mov
movsl
add
mov
aam
jnp
pop
jmp
test
int
cmp
inc
jno
inc
adc
mov
pushf
push
lds
aas
cmpsl
xor
leave
pop
cwtl
sbb
popa
mov
loop
push
mov
or
daa
xchg
nop
lret
xor
xchg
sub
jbe
push
inc
enter
adc
addr16
cmp
in
sub
adcb
or
mov
mov
pop
test
enter
rcrb
or
pop
out
outsl
loopne
cmc
test
je
lds
add
sub
xor
aam
nop
push
sub
and
or
pop
and
dec
adc
shlb
aas
dec
iret
push
mov
lock
xchg
adc
imul
leave
xchg
call
lock
rcr
pop
inc
jmp
push
aam
sbb
add
cwtl
adc
insb
inc
dec
js
cmpsb
mov
add
mov
rol
jle
pop
pusha
lea
push
push
push
sbb
mov
loopne
jmp
dec
andl
fcompl
int3
hlt
xor
movsl
push
cli
out
cmp
fidivs
cltd
daa
push
xor
pusha
mov
adcl
lods
and
clc
and
push
test
aaa
rep
push
xor
aas
add
pop
or
sub
loop
enter
ja
fistpl
push
xor
mov
adc
in
rcrl
sub
sub
or
add
into
fs
pop
int
loopne
mov
add
jns
cmp
stos
cmp
adc
mov
or
mov
mov
test
stos
js
ds
or
les
jmp
and
pop
lret
mov
in
test
mov
in
mov
fsts
stos
test
and
add
mov
fwait
js
loope
jne
adc
ret
sub
sbb
jmp
xor
and
repz
loope
pop
mov
cmpsl
loopne
dec
rcl
sbb
stos
shrb
or
pop
mov
add
xchg
lret
pop
push
inc
jmp
repz
adc
fldl
popa
mov
lods
cltd
insl
out
add
sbb
scas
pop
lcall
mul
inc
sti
cwtl
rcll
loopne
subl
cmp
mov
mov
inc
cmp
rclb
stos
mov
mov
sub
xchg
xchg
subl
jmp
mov
jecxz
push
pop
dec
jno
fstl
or
mov
jno
and
pop
jnp
mov
adc
sahf
or
clc
mov
insl
pop
leave
cmp
xor
pusha
sub
jmp
mov
push
sbb
inc
adc
jmp
rcrb
sub
sbb
jns
call
outsl
cmp
leave
dec
cmp
ss
mov
imulb
ret
scas
jge
cs
movsb
ds
idivl
jmp
sbb
mov
inc
and
addr16
mov
cmpsl
push
mov
mov
push
call
cmp
cld
and
in
adc
das
sub
gs
ja
and
xor
bts
fstpl
cltd
push
jle
mov
jmp
lods
into
jmp
dec
and
pop
mov
jmp
and
test
je
sub
fs
std
mov
mov
pop
pslld
jmp
cltd
into
push
cmp
pop
sub
sub
sbb
xor
mov
mov
test
pop
mov
movsb
mov
xchg
outsl
mov
cltd
arpl
in
cltd
pop
test
out
stc
xchg
cltd
mov
jae
and
insl
fs
jg
cltd
or
add
mov
shrb
jb
cltd
roll
clc
cltd
pop
jne
mov
pop
ljmp
sahf
stc
adcb
cmp
cltd
vsqrtpd
outsb
in
fwait
pop
cmp
lret
cld
add
int
fwait
or
mov
xlat
insl
adc
stos
inc
cltd
mov
pop
addr16
cltd
leave
aad
cmp
sbb
xchg
mov
jg
stos
pop
cltd
mov
add
mov
or
scas
dec
popf
cmp
xor
inc
dec
xchg
lret
fwait
sub
xchg
stc
lahf
icebp
mov
adc
ljmp
fisttps
jne
mov
out
push
jae
and
mov
push
outsb
xlat
push
push
sar
pop
icebp
test
sbb
mull
fnstenv
xchg
mov
ldmxcsr
rolb
stos
add
cmp
mov
add
adc
mov
dec
call
mov
imul
rcll
dec
sub
mov
inc
lcall
scas
push
and
int
scas
addb
mov
iret
jno
push
xchg
insb
popf
mov
cltd
andl
cld
cltd
xchg
and
xchg
xor
lret
vmovaps
sti
mov
jmp
pop
dec
fidivs
jmp
inc
mov
lds
sub
dec
shl
sub
xchg
dec
jmp
stc
js
arpl
mov
pop
rcrb
dec
mov
mov
rcrb
mov
mov
fwait
sbb
sub
xchg
xor
push
aas
lret
xor
jno
sbbl
mov
mov
insb
daa
add
loop
inc
adc
outsb
mov
js
rorb
or
cmp
loopne
inc
scas
xchg
push
int3
inc
push
gs
cwtl
add
jae
sub
mov
sub
xchg
cltd
xor
mov
loopne
lods
inc
push
test
sbbb
cmp
test
aam
pop
cwtl
aas
jecxz
fimull
test
adc
roll
jmp
mov
call
mulb
lds
dec
lret
inc
loopne
inc
or
inc
jl
gs
xchg
fnstenv
jno
sub
movsb
sahf
scas
enter
je
ds
adc
icebp
sbb
hlt
dec
cmp
mov
mov
rcrb
adcb
lcall
pushf
mov
in
loopne
push
sub
int
dec
loopne
mov
inc
lods
mov
jle
dec
cli
loop
dec
mov
aam
adc
sub
push
sub
js
xor
xor
sahf
mov
mov
inc
jmp
add
mov
sub
lock
and
outsb
adc
jmp
addb
mov
xchg
out
jbe
xor
icebp
icebp
dec
jmp
adc
mov
sbbb
lret
mov
inc
je
jp
mov
xchg
stos
dec
popa
jae
inc
fmul
jmp
lcall
test
mov
test
jne
sub
rcrb
xchg
and
ds
jnp
pop
std
push
js
addl
stc
outsb
enter
nop
and
mov
cltd
stos
adc
mov
fistps
cmp
mov
sbb
cwtl
sti
xor
sbb
pop
inc
test
mov
xor
cltd
in
in
imul
jae
add
or
mov
fs
xchg
cltd
xchg
jns
in
sub
xor
js
or
adc
pop
outsl
cltd
or
jno
sbb
das
fcompl
shll
add
lods
aas
push
xorb
dec
or
jp
cltd
mov
and
adc
xchg
in
dec
dec
rorb
out
pop
xor
iret
rcll
cmpsl
jno
mov
dec
fstps
ss
mov
mov
jle
cltd
aas
scas
dec
adc
cwtl
push
add
inc
stc
jo
push
fldenv
lock
rcrl
jns
mov
push
cmp
insl
notl
sub
mov
jp
sbb
leave
xchg
jge
in
xchg
adc
pushf
pop
imul
inc
repz
adc
cmpsb
dec
inc
loope
cltd
je
cmp
dec
mov
cltd
cld
add
jge
or
out
cltd
mov
add
cltd
or
inc
repnz
xchg
int3
cltd
push
testb
mov
je
mov
sbb
scas
xchg
sarb
rcrb
add
fldenv
lret
setns
inc
int
pop
add
cltd
sahf
aaa
pop
and
mov
movsl
inc
jl
mov
rclb
mov
repnz
imul
push
push
mov
movsl
testb
insb
jl
mov
mov
mov
scas
in
sbb
repnz
push
pop
scas
cltd
call
mov
adc
sbb
adc
mov
or
movsb
cltd
dec
fadds
inc
stc
push
mov
loope
push
adc
cltd
out
xchg
test
push
lock
cltd
or
leave
mov
icebp
pushf
mov
cmp
test
jae
inc
jle
mov
bound
stc
les
xor
mull
or
test
sbb
enter
cltd
push
xlat
or
add
mov
sbbb
or
ds
cltd
jne
int
push
cltd
lret
sub
aad
xchg
xchg
cltd
pop
and
xchg
inc
mov
lea
cltd
jge
nop
movsb
jle
arpl
cltd
call
les
popa
cltd
or
pop
fbstp
lret
pop
dec
ficoml
xor
xor
scas
sub
sbbl
xchg
add
mov
cltd
xchg
jo
mov
scas
xchg
or
icebp
popf
stos
fwait
movsb
sub
in
sbb
or
push
mov
addr16
outsb
mov
push
pop
insl
stc
cmp
stos
imul
mov
cltd
jle
ret
dec
into
cmc
xchg
int3
cltd
int
mov
fsubl
add
xor
jmp
mov
push
mov
mov
inc
inc
mov
lea
or
xor
adc
push
push
cltd
cvtps2pi
mov
aam
fcompl
push
mov
inc
add
mov
cltd
mov
ds
mov
sbb
daa
mov
cltd
inc
xor
fdivr
jmp
faddl
dec
aas
mov
daa
lret
xor
mov
jnp
pusha
sti
dec
adc
sbb
or
popl
jne
stc
repz
cltd
out
cmp
insl
scas
shll
jp
incb
jno
push
adc
push
cmc
lcall
xor
inc
js
jecxz
xchg
add
mov
cld
vmwrite
inc
and
call
lods
mov
imul
xchg
xor
insl
or
cmpsb
cltd
f2xm1
pop
push
push
pusha
jg
xorb
cltd
push
pushl
mov
rcrl
negb
ret
or
mov
xchg
lcall
jmp
test
in
xchg
pop
cmp
adc
mov
xchg
lods
cltd
aaa
push
scas
push
outsl
mov
int3
mov
aam
pop
mov
adc
push
push
xchg
fstl
inc
shll
cltd
jae
pop
adc
jbe
lret
dec
xor
cmpsb
inc
xchg
scas
mov
dec
pop
jmp
lcall
mov
push
and
add
xchg
fdivl
popf
fwait
data16
xor
stos
mov
mov
push
fimull
fldcw
pop
cmp
jnp
cmp
fnstcw
aad
add
dec
cltd
sbb
loopne
push
scas
xchg
repnz
mov
xchg
cltd
icebp
arpl
imul
cltd
mov
or
sub
jecxz
cltd
inc
lret
movsl
cs
and
nop
push
scas
pop
data16
mov
mov
les
ret
and
cmpl
add
pop
pop
shrb
pop
push
push
decl
mov
jg
aad
js
fcoms
inc
xchg
fisubs
daa
jp
pop
mov
dec
jb
std
cmpsl
mov
mov
in
scas
add
cltd
loopne
inc
mov
call
stos
fst
cltd
push
mov
mov
mov
sub
repnz
cltd
mov
dec
in
cld
outsl
sbb
sbb
test
mov
sbb
inc
or
fstp
insl
inc
aas
pusha
movsl
add
jle
fstpl
jns
xchg
push
cmpsl
inc
sti
cwtl
pop
ja
inc
stc
stos
sbb
cmpsb
gs
cltd
mov
cltd
adc
test
mov
adc
bound
inc
les
push
mov
mov
addl
mov
add
push
sbb
cltd
mov
scas
fadds
icebp
aad
pop
aas
and
xchg
sbb
test
divb
push
xchg
push
mov
repz
dec
xor
popa
mov
or
ljmp
xchg
aaa
clc
ret
mov
mov
cld
add
inc
cltd
incb
imul
mov
push
inc
ja
inc
mov
sbb
in
lods
push
xchg
mov
push
scas
shlb
cltd
insb
lods
out
fcmovne
jg
jle
or
test
adc
aam
scas
cltd
dec
loop
iret
in
sbb
jl
jge,pt
and
pop
fadds
not
ret
pop
mov
or
rcrl
push
mov
cmc
outsl
pop
pop
lahf
pop
and
push
cltd
movsl
push
mov
aad
je
stc
clc
mov
cltd
mov
mov
scas
cltd
push
dec
adc
cltd
inc
sbb
mov
popl
cltd
das
lea
test
cmpsb
js
cmc
jecxz
jp
inc
scas
jno
or
test
rclb
xchg
inc
cmpsl
adc
xor
aad
mov
cltd
and
or
call
in
aaa
loopne
data16
cltd
sbb
mov
xchg
cltd
movsb
in
fwait
pop
and
nop
outsl
sbb
or
cmpsl
adc
icebp
outsb
lock
andb
cmc
cmpsb
dec
inc
inc
pop
push
cltd
fiadds
call
pop
ljmp
xor
push
lods
dec
add
cltd
and
scas
aam
xchg
lds
jb
jne
xchg
fwait
lret
jo
test
lret
xchg
cltd
mov
dec
fistpl
adc
dec
jo
sbb
icebp
sub
cltd
lock
stos
adcb
add
jbe
jne
sub
cltd
mov
xchg
xlat
pop
sbb
fdivs
mov
jae
cmp
in
lret
jmp
out
fwait
push
loope
dec
shlb
jmp
mov
mov
lock
pusha
xchg
lods
js
outsl
stos
and
pop
repz
int
ret
pop
or
es
xchg
lock
jmp
mov
ss
lods
mov
imul
scas
hlt
mov
and
push
fidivrl
xchg
pushf
sub
test
sub
test
mov
imul
aam
add
jmp
jmp
sub
pop
nop
pop
or
push
xlat
push
add
jmp
loopne
lahf
pusha
sbb
jmp
mov
jb
mov
rorl
xchg
je
dec
xlat
movl
xor
insl
nop
cmpsb
stos
pop
rcrl
lds
jae
cli
outsl
pop
sti
xor
pusha
popf
aam
or
jno
jne
outsb
push
popf
ss
int
clc
dec
push
or
cmp
jle
test
lock
dec
sti
pop
loopne
pop
push
push
in
fdivrl
shlb
stos
mov
daa
mov
mov
fsubrl
and
jae
dec
xor
pop
nop
push
inc
jmp
jno
mov
xor
pop
and
push
js
adc
mov
imul
adc
jmp
pop
jmp
outsl
pop
cmpsl
in
stos
and
adc
hlt
sub
lea
fwait
in
ret
mov
dec
mov
or
pop
sbb
xor
pop
mov
mov
call
mov
pop
leave
sbb
mov
in
loopne
inc
jmp
mov
sub
adc
into
lock
subb
or
inc
pop
adc
clc
arpl
xlat
mov
dec
loopne
and
lock
shlb
xchg
mov
xchg
je
lret
test
sbb
push
jmp
or
lea
in
mov
mov
ret
stos
adc
push
pop
and
in
push
shll
lock
call
shrb
scas
push
adc
imul
pop
fwait
mov
and
jmp
cltd
jg
lods
mov
movsl
add
mov
push
sbb
or
cmp
push
popa
and
repz
stos
inc
loopne
add
mov
in
mov
iret
mov
sbb
aad
mov
lret
sub
adc
lods
and
inc
jmp
xchg
pushf
mov
inc
lret
lods
std
sbb
rcrl
cmp
dec
push
rorb
aam
scas
mov
cli
movsl
sub
mov
cmc
imul
ret
stos
in
testb
sbb
cmpsl
stos
shr
pop
jl
in
imul
sub
ficomps
aas
jmp
pop
push
jno
das
int3
iret
xchg
cld
cs
add
mov
and
jmp
inc
ja
ja
into
jp
test
xchg
fwait
scas
mov
out
inc
mov
jmp
icebp
sub
pop
test
leave
mov
lock
arpl
push
loopne
ret
daa
movsl
pop
ds
inc
insb
jns
movsb
cld
je
lods
inc
dec
cmp
jmp
add
out
xor
inc
jo
enter
inc
pop
jmp
lcall
addb
sub
cwtl
mov
cmpsb
cld
mov
mov
and
test
mov
mov
pop
xchg
mov
push
push
sub
xor
into
mov
popa
pop
into
adc
mov
pop
out
popf
mov
inc
insl
push
fsubr
in
fcompl
pop
sbb
or
push
hlt
in
sub
xor
mov
xchg
pop
jne
aam
nop
sbb
int
repz
xor
out
xor
mov
jmp
inc
lds
dec
repz
addl
cmp
gs
gs
sti
js
sub
mov
insb
jns
xor
cli
loopne
in
dec
mov
mov
mov
mov
test
push
in
sahf
mov
jmp
pop
popa
enter
xor
mov
push
pop
mov
sbb
mov
mov
bound
call
scas
popl
mov
ljmp
inc
jmp
cld
cld
mov
adc
pop
or
test
mov
or
shl
cltd
push
mov
inc
jg
xchg
pop
or
pop
sbb
mov
push
inc
cmp
inc
lahf
mov
mov
test
fisubs
xchg
add
cmp
jmp
ljmp
stos
and
dec
fsts
lahf
add
mov
es
sbb
adc
cmp
sbb
lret
mov
arpl
and
adc
in
scas
aaa
int3
mov
inc
mov
jns
xor
cwtl
push
lds
aaa
shl
mov
jbe
fwait
jmp
mov
xor
or
mov
fnstcw
sub
ss
and
sbb
push
dec
xchg
out
xorl
and
jge
stos
mov
lods
aad
inc
inc
jmp
push
fisubrs
lea
push
pushf
and
bnd
fnstsw
pop
scas
jns
mov
pop
test
and
inc
lahf
pop
mov
punpcklbw
imul
add
ret
xchg
test
ss
mov
adc
sub
inc
aaa
adc
sub
leave
jno
cmpsb
iret
sub
xchg
lcall
xor
pop
sti
jmp
inc
sbb
movsl
loopne
pop
stc
jb
sbb
push
daa
call
inc
mov
jb
lods
mov
aam
pop
and
mov
imul
ss
cwtl
ret
xor
jmp
or
jmp
lock
roll
or
shr
mov
lock
cmpb
xor
in
and
mov
daa
or
cmpb
push
stc
adc
mov
adc
mov
ffree
adc
out
enter
jmp
xor
sti
and
sub
sub
fcomps
mov
dec
sbbb
fisubrs
stos
cmpb
sbb
fwait
iret
mov
sub
imul
adc
adc
pop
and
jmp
stos
xor
imul
int
and
pop
xchg
dec
push
arpl
adc
pop
int3
loope
jne
mov
xchg
mov
bound
inc
sbb
ss
adc
xchg
push
rol
pop
inc
jmp
les
in
fidivl
fs
fsubrs
out
sbb
and
push
mov
jmp
mov
pop
mov
jecxz
jl
pop
lock
lock
push
sub
lds
mov
ja
or
xchg
xchg
pop
mov
mov
add
cmp
ret
cmp
imul
cmp
test
add
ret
pop
movsl
lods
dec
aaa
mov
in
push
dec
enter
out
mov
lock
jg
pop
mov
subl
and
inc
pop
dec
cmp
jle
pop
push
and
mov
testb
enter
sub
stos
mov
mov
sbb
aas
movsl
jne
sarl
pop
lahf
push
push
orl
or
arpl
leave
xchg
sarb
inc
mov
orb
mov
aaa
or
adc
imul
std
inc
jmp
ret
inc
negb
nop
pop
fnstenv
cmpsl
rcl
mov
sub
or
jmp
pop
mov
out
pusha
arpl
lock
ficoml
xchg
popa
aad
roll
ror
inc
loopne
xor
mov
jmp
arpl
enter
add
fcmovnu
ret
mov
int3
cmpsl
in
xor
int3
iret
add
not
inc
push
push
push
scas
pop
in
xchg
jl
je
aaa
push
in
cmp
dec
jb
daa
mov
push
dec
bnd
sbb
pop
cwtl
mov
into
push
add
rclb
cmp
mov
jmp
pop
xchg
aam
xchg
enter
jp
das
in
js
sub
inc
dec
inc
mov
test
jg
shrl
pop
cmp
mov
addl
ret
lahf
cmpsb
lods
ror
mov
in
xchg
push
and
enter
pop
shlb
movsl
or
and
cwtl
xchg
mov
aas
je
sub
sub
in
cmp
xchg
ds
mov
enter
arpl
mov
add
rcrb
mov
sub
in
adc
push
lods
in
arpl
mov
loope
fiadds
inc
xchg
sti
inc
inc
xchg
repz
arpl
cltd
sbb
jmp
negb
das
sbb
inc
cmc
add
jg
mov
inc
jno
shll
xor
inc
push
lods
jmp
cmp
stc
das
cmp
std
insb
mov
movzwl
subl
mov
cmp
push
sbb
jbe
aam
adc
mov
fistps
jmp
pushf
ss
mov
pop
and
push
cmp
cmp
pop
mov
int
xchg
pop
fstpl
jg
mov
loopne
movsl
fisubrs
push
sbb
movsl
stc
mov
jmp
jmp
mov
sti
or
sub
mov
mov
sub
mov
sbb
xchg
jmp
mov
mov
and
cs
aaa
xlat
in
out
imul
aam
imul
xorb
dec
fildl
push
dec
inc
sarb
idivl
pop
stos
and
xor
das
mov
jmp
stos
mov
addb
in
mov
lock
xchg
jge
mov
scas
pop
dec
mov
and
jmp
mov
lcall
sub
jno
jnp
and
cmp
mov
add
push
sub
push
inc
mov
mov
loope
lock
fcompl
lock
cmpsb
lret
mov
lock
dec
popa
mov
out
jmp
adc
add
sbb
sbb
jge,pt
stos
les
fs
stos
add
xchg
pop
out
jb
stos
jmp
leave
cmc
shrb
cmp
stos
ja
ds
add
add
or
mov
nop
push
pop
jb
add
stos
cwtl
fsubl
pushf
in
loopne
out
inc
mov
mov
adc
sub
pop
hlt
lcall
ja
inc
jle
std
xchg
lods
xchg
stos
aam
mov
mov
insb
into
aad
and
cmp
addb
jl
sbb
or
lock
jbe
sahf
inc
xor
in
icebp
pusha
scas
cmc
inc
jl
mov
out
scas
jecxz
dec
jg
arpl
sti
sub
icebp
jb
jg
imul
fwait
cmpsb
gs
xlat
cmc
pop
popf
cmpb
jbe
dec
inc
and
push
call
cmpsl
jp
test
leave
addr16
dec
arpl
shrl
pop
push
cmpsl
imul
pop
arpl
add
sub
es
jmp
lods
mov
and
out
loopne
lock
mov
orb
cli
mov
jg
jb
cmp
rcll
pop
cmp
stc
jae
test
or
stos
repnz
inc
fwait
icebp
jmp
repz
stos
aaa
push
and
sbb
cli
adc
xchg
fists
pop
rcll
adc
shrb
mov
sub
xchg
cmc
mov
or
ret
scas
cltd
imul
pop
int3
pop
cmp
subb
cmp
scas
call
lock
fists
adc
mov
and
mov
int3
pop
aaa
lcall
stos
jbe
fnstcw
dec
out
dec
lret
add
mulb
arpl
stos
and
in
adc
cmp
cmp
inc
clc
adc
cltd
test
in
adc
rcrb
sahf
lock
mov
and
inc
jmp
sbb
das
push
stos
jbe
xor
nop
jmp
cmp
sbb
test
or
pop
ss
add
push
and
dec
mov
les
pop
lcall
jmp
dec
inc
mov
cmp
stos
pusha
fisubs
adc
aaa
lcall
insl
cs
inc
in
pop
int3
lret
sub
mov
or
xchg
mov
dec
add
jmp
out
roll
stos
cmpsl
adc
test
outsb
mov
fdivs
jb
push
mov
pusha
sub
in
push
jae
add
mov
aas
fwait
sub
fwait
jae
dec
mov
loopne
mov
imul
push
lods
cmp
mov
mov
stos
pop
mov
mov
adc
loopne
popa
cmpsl
lock
in
shr
stos
adc
xchg
dec
stos
mov
dec
jno
addl
sub
push
cmp
call
scas
es
jmp
sti
mov
mov
adc
pop
dec
inc
and
fcomps
pop
fldt
test
stos
xchg
mov
lock
aas
sub
aad
dec
mov
add
dec
decl
jns
sbb
lahf
test
je
fadds
jne
popf
nop
mov
pop
cld
and
mov
mov
clc
movsl
jmp
popf
pop
mov
shr
mov
pop
xchg
pop
cmp
mov
je
mov
subb
jnp
lcall
mov
ljmp
pop
ficoms
sub
cmc
xchg
inc
mov
mov
dec
jb
repnz
lret
jmp
xchg
outsb
push
mov
clc
cmpl
cmc
adc
out
cmp
sbb
mov
ficoml
sbb
or
sbb
cmp
and
lock
jns
push
roll
mov
jmp
stos
ficoms
pop
lea
fnstsw
push
aad
out
je
mov
adc
fwait
lahf
pop
imul
mov
outsb
and
pop
test
sub
xchg
jmp
imul
ret
stos
test
into
push
mov
imul
addr16
mov
mov
jl
jge
loop
movsl
leave
orl
mov
fwait
add
popa
pushf
rcr
arpl
push
add
popa
push
leave
adc
arpl
loope
lret
mov
xchg
loop
and
jnp
sbb
mov
enter
in
and
push
or
inc
sub
sub
mov
xchg
cmp
xlat
sbb
cmp
shl
leave
jge
outsl
fdivrl
test
stc
inc
sbb
mov
add
xchg
and
mov
sub
pop
int3
dec
sub
mov
lods
jg
mull
xor
sub
mov
jge
inc
pop
add
sbb
jmp
xor
xchg
dec
xor
loopne
push
arpl
movsl
push
arpl
imul
repnz
fistpl
mov
and
pop
into
add
sub
dec
movsl
mov
orb
scas
ds
xor
mov
sub
lock
movsl
aas
and
int
scas
xchg
mov
cmp
or
push
loope
rorl
mov
mov
stos
arpl
sbbb
or
xchg
outsl
jnp
sub
cli
xchg
inc
stos
stos
scas
in
cmpsb
xorb
xchg
jno
dec
inc
sbb
imul
aam
in
add
in
mov
icebp
rolb
aam
outsl
clc
jae
dec
add
xchg
stos
mov
sbb
cld
cmpb
and
inc
inc
sahf
pop
jmp
into
inc
push
pop
popa
movsb
scas
inc
inc
mov
pop
jl
pop
cmp
aad
mov
pushf
aas
dec
int3
mov
cmpsl
aad
fcoml
rclb
or
and
pop
cs
cmp
xchg
or
push
push
aaa
jb
mov
adc
adc
fimuls
jle
sub
mov
call
fidivl
jmp
mov
mov
mov
mov
pop
cltd
lock
bound
jmp
mov
faddp
push
jns
icebp
loopne
ret
movsl
jbe
stc
mov
mov
pusha
mov
cmpb
mov
cmp
rorb
mov
sub
mov
lods
jns
cwtl
jmp
push
xlat
pushf
enter
inc
in
outsl
ret
enter
fisubrs
sti
dec
sbbl
int3
sub
push
and
mov
les
or
pop
out
idivb
loopne
fbstp
xchg
xchg
sbb
out
mov
out
aad
jmp
and
jno
arpl
inc
movsl
xchg
shll
inc
xchg
and
jmp
cmp
hlt
cwtl
pop
pop
push
push
jmp
stos
das
pop
sub
mov
cltd
cli
xchg
push
jmp
leave
in
push
stos
jnp
mov
out
mov
mov
push
movsl
outsl
lcall
add
xor
lahf
cs
mov
push
adc
mov
adc
sti
mov
lock
push
ljmp
mov
lods
add
xchg
jae
pusha
and
fldenv
cwtl
jnp
dec
sahf
movb
xchg
call
jmp
dec
pop
add
xor
xchg
cmp
inc
lea
jmp
inc
insl
pop
popf
add
jns
out
clc
jbe
shll
add
pop
enter
xchg
jmp
sub
sub
bound
dec
sub
lods
pop
stc
movsb
sbb
dec
jge
cmpsb
out
jae
divl
shlb
gs
and
mov
jae
mov
jmp
jne
jle
cmp
daa
xor
jo
pop
movsl
cmpsb
mov
jmp
cmp
add
mov
stos
pop
sbb
mov
repz
rolb
sub
lds
fistpl
xchg
and
test
xchg
movsl
or
push
inc
sbb
insl
dec
pop
out
mov
mov
lock
stos
mov
sub
scas
xchg
mov
jmp
cmp
dec
lock
push
adcl
jne
push
cmp
ret
pop
xor
mov
jmp
add
ja
xchg
push
sub
jmp
cmp
andl
les
in
dec
dec
addb
ljmp
ret
orb
loopne
jmp
or
arpl
or
inc
adc
adc
stc
mov
fadds
fisubl
xchg
add
lods
jmp
push
pushf
addl
adc
mov
icebp
jae
into
fmull
test
adc
sub
lods
sub
mov
adc
cmpsb
cltd
stos
repz
subb
mov
inc
or
mov
sub
movsl
lock
bound
mov
pop
and
push
mov
mov
and
in
loop
std
popf
xchg
push
loopne
popa
in
idivl
out
sub
fsubp
inc
gs
imul
sbb
lock
xchg
into
jle
loop
sbb
or
sub
xchg
push
outsb
mov
into
fwait
inc
pop
out
mov
sub
adc
ja
aam
pop
xor
iret
movsl
add
stos
adc
mov
push
scas
sbb
mov
outsl
and
cmp
rorl
xchg
sub
out
pop
lock
les
mov
xchg
sub
test
aaa
jecxz
stos
sbb
and
repz
imul
adc
sbb
push
pop
xchg
mov
pop
dec
pop
fildll
mov
cmp
cmp
push
jmp
loopne
aad
xor
test
into
jbe
or
pop
mov
enter
sbb
mov
sub
loopne
les
pusha
jmp
dec
lods
mov
cmp
mov
test
loopne
lds
cmp
loopne
sbb
xor
sbb
push
mov
lds
cmp
mov
in
ss
xchg
or
outsb
pop
in
pushf
mov
mov
ret
jmp
es
xchg
mov
inc
sbb
and
fldenv
mov
ljmp
fsts
cwtl
div
mov
pop
pop
adc
movl
les
jmp
fmull
out
jmp
fsubrl
jecxz
ss
sbb
pop
je
jmp
test
sahf
arpl
scas
push
and
and
jmp
jbe
mov
in
ret
fldt
ret
lret
arpl
mov
orps
inc
test
fimull
xchg
dec
push
xorl
push
inc
mov
push
sbb
mov
cs
or
inc
mov
ss
push
and
mov
push
or
mov
mov
mov
add
icebp
xor
jmp
test
scas
lcall
adc
call
adc
and
mov
data16
gs
mov
mull
test
add
and
in
inc
into
in
clc
cmp
lock
sbbb
test
adc
aad
push
lock
mov
jne
pop
loopne
push
mov
movsl
addr16
mov
xchg
insb
test
push
mov
sub
test
dec
outsl
call
js
pop
lock
ret
mov
mov
sbb
jmp
adc
lods
in
xor
mov
and
mov
cltd
add
out
shr
adc
out
cltd
adc
rcll
lcall
inc
mov
jg
inc
mov
or
mov
divl
fbstp
icebp
mov
cmp
dec
mov
ds
ljmp
jge
mov
fcmovnbe
dec
test
xchg
fldl
mov
out
push
mov
in
ret
jecxz
mov
loopne
sbb
sub
jl
fwait
ja
repnz
call
test
shlb
jg
ds
loope
bnd
lods
push
xlat
rcll
outsl
enter
and
xchg
outsl
movsl
ret
jmp
rcrb
push
push
mov
cmp
movsb
adc
sbb
aam
dec
xchg
clc
rclb
mov
mov
xchg
loopne
jmp
sub
insb
ret
xor
inc
mov
mov
cmp
aad
lret
mov
xchg
pushl
xor
cmovae
lcall
imulb
jmp
int
loop
xor
xor
cmp
cmp
test
jae
test
jl
push
aaa
inc
iret
sarb
aaa
sub
mov
dec
loope
jns
sbb
mov
imul
clc
cmpsb
enter
data16
push
ficompl
jmp
clc
imul
rorb
loope
mov
sub
add
stos
lcall
jge
and
enter
sub
loop
rcrl
lds
insb
add
orb
mov
and
mov
shr
mov
jne
fstps
test
arpl
or
popa
lock
rorb
push
enter
lods
inc
jmp
lea
xchg
mov
int3
push
mov
pop
mov
mov
dec
jg
fldenv
xchg
cmp
aam
mov
stos
test
out
push
gs
mov
fbld
test
lret
dec
cmpsl
fs
in
roll
aam
arpl
or
sub
cmp
inc
jns
clc
int
in
mov
shll
push
fstps
jecxz
in
pop
mov
push
and
mov
pop
push
es
fnstenv
and
stc
fsubrs
mov
ja
add
xchg
sbb
std
and
aas
inc
mov
mov
sahf
outsl
push
lret
adcb
cmpsl
sub
inc
insl
push
jmp
xchg
scas
out
mov
jmp
arpl
pop
xchg
pushf
ret
pop
movl
fdivp
pushf
repnz
daa
test
jns
adc
or
jl
stc
dec
test
sti
arpl
mov
shlb
sub
cmpsl
movsb
int
jmp
adc
inc
inc
std
sbb
jb
sti
xchg
hlt
dec
push
pop
imul
cmp
pop
mov
sbb
mov
cmc
stos
add
xor
sbb
jmp
jg
scas
shl
inc
cli
and
incl
sbb
mov
repz
stos
xchg
int3
sbbl
in
in
sub
ss
fstl
xor
jl
test
inc
push
aas
call
mov
in
movsl
xchg
ss
xchg
push
leave
fs
enter
test
push
inc
or
mov
gs
ret
aaa
subl
fnstcw
and
mov
push
shlb
pop
add
inc
rep
sbb
dec
dec
mov
mov
cwtl
mov
jmp
andb
stos
pop
loopne
jb
fcompl
push
jmp
hlt
push
lahf
jge
jge
sti
add
sti
mov
mov
nop
loopne
cmp
sub
mov
cmp
xor
xchg
push
sarb
test
in
sahf
dec
cmpl
and
mov
cld
inc
pop
sbb
mov
int
mov
sahf
je
add
dec
shl
shrb
pop
push
ffreep
outsb
jmp
inc
mov
stos
mov
jns
fistl
pop
out
xor
pop
jno
dec
mov
es
aas
shlb
mov
mov
sub
out
xor
dec
ficomps
or
lods
adc
jmp
jmp
jecxz
and
mov
xchg
sbb
iret
test
cwtl
in
mov
cmp
jb
push
popf
push
jg
mov
push
pop
mov
shll
fadd
leave
loope
add
and
mov
inc
jmp
push
jbe
in
or
repz
js
mov
and
or
xor
repz
fs
jg
sub
adc
mov
add
imul
adc
mov
adc
fistps
int
add
xor
pop
pop
cwtl
or
ficomps
pop
sbb
cmp
out
mov
cltd
push
arpl
fmul
and
int
aaa
mov
xchg
lods
negb
inc
int3
and
push
mov
mov
lahf
sub
into
inc
dec
jle
cmpsl
inc
lret
mov
mov
cmp
cltd
adc
lock
and
and
inc
mov
pop
sbb
jp
pushf
xchg
jns
sub
jno
mov
jae
loopne
sbb
cwtl
mov
cmc
rorl
nop
arpl
lock
cmp
mov
daa
adc
stos
jg
gs
xlat
adc
mov
iret
mov
scas
mov
mov
enter
or
pop
sbb
movsb
mov
stos
cmp
jecxz
sub
adc
arpl
test
mov
xchg
xor
push
sarb
shl
daa
out
cs
add
lock
cmc
loopne
pop
sbb
sti
gs
add
lock
aaa
cmpsl
push
mov
mov
sbb
repz
movsl
jmp
imul
cmp
push
dec
das
and
loope
repnz
dec
dec
or
mov
jmp
xchg
mov
fidivl
pop
lods
cmp
or
xorl
ljmp
hlt
mov
outsl
fsubl
ja
mov
dec
dec
rcrb
jg
adc
loopne
int
adc
xor
mov
int
jmp
vpabsb
xlat
cmp
mov
and
cld
push
rclb
pushf
enter
pop
rcll
add
fwait
leave
lods
push
pop
mov
dec
pop
xchg
arpl
test
add
jl
pop
jns
stos
mov
jnp
cmp
cmpsl
inc
mov
fdivrp
sbb
sub
sahf
outsb
xchg
lea
aam
fisttpl
lret
push
add
xor
loop
sub
jae
and
sub
enter
push
inc
xor
dec
jmp
cmp
cld
jno
into
pop
cld
adc
and
cmp
mov
fucom
or
arpl
cmp
dec
or
fcompl
out
negl
and
cmp
loop
shrl
add
push
mov
or
mov
adc
mov
inc
rcl
insl
jb
subb
mov
ljmp
lock
rcrl
mov
mov
xor
xlat
stos
insl
pusha
and
xor
push
inc
loopne
mov
movsl
cmp
jmp
in
in
push
mov
xchg
pop
xchg
hlt
in
push
adc
lret
mov
mov
aad
shll
pop
cmp
ss
pop
ljmp
dec
loop
sbb
mov
jb
or
xor
xchg
pop
mov
mov
test
sub
mov
xor
adc
and
je
gs
imul
sub
fcmovb
jne
ficomps
mov
fisttpl
sti
arpl
and
mov
ja
mov
push
dec
dec
cmp
mov
test
in
imul
mul
mov
fwait
mov
outsl
or
andb
aam
std
cli
scas
stc
repz
in
sbb
jns
sub
cmc
data16
movsb
mov
mov
iret
loope
mov
dec
cmpsb
movsl
inc
xchg
jae
jmp
imul
repz
cltd
xor
mov
scas
jmp
sbb
pop
stc
js
lret
pop
mov
mov
mov
jl
popa
cltd
jbe
insl
or
pop
call
nop
mov
cltd
add
in
dec
stos
jb
push
lods
xor
cltd
js
lds
xchg
leave
fdiv
and
dec
and
fcoml
fwait
out
push
push
movsb
leave
mov
cltd
add
sub
scas
sub
jns
lds
cltd
dec
or
test
add
push
mov
fcomi
mov
call
push
popf
lods
cltd
xlat
enter
test
addb
cltd
mov
jmp
cli
cltd
and
mov
mov
cltd
mov
cmpsb
idiv
stos
pop
jb
lods
lcall
cltd
xchg
repz
icebp
pushf
cltd
push
fs
lds
or
jns
fstpt
das
jge
sbb
mov
xchg
shrl
lahf
cltd
data16
popa
inc
es
std
cmpb
xchg
subl
dec
int
jp
dec
pushf
cltd
testb
mov
and
push
es
cld
xor
push
insl
imull
decl
and
bound
inc
adc
jo
mov
notl
push
and
lea
or
push
mov
sbb
test
das
popa
fistps
inc
sbbb
xor
jge
mov
push
and
idivb
mov
pusha
cmpl
xlat
sub
sbbb
mov
cltd
lcall
push
movsl
xchg
jnp
jo
dec
mov
call
xor
add
or
xchg
adc
cltd
stos
in
and
sbbl
ficoms
add
jbe
popa
cmp
sbb
pop
cwtd
mov
cmp
mov
mov
xor
sarl
cltd
out
ds
pop
add
imul
pop
adc
sub
or
pop
cmp
adc
movsl
shrl
ds
cltd
lea
dec
xor
jg
cltd
imul
insb
cltd
inc
loope
inc
es
into
cltd
pop
addb
cmpsl
sti
aaa
sbb
cltd
int
jno
xor
sbb
out
aam
mov
jge
aaa
cltd
std
jbe
xor
lock
push
cltd
add
scas
xor
mov
insl
xor
cld
ss
arpl
inc
outsb
lock
inc
mov
xor
je
sub
shll
push
mov
inc
mov
fsts
push
mov
xlat
arpl
mov
cltd
fists
mov
insl
data16
push
pusha
test
hlt
scas
mov
cmp
faddl
dec
push
aam
and
test
add
fidivrl
testb
in
pop
iret
cmp
pop
in
orl
mov
cmp
push
pop
push
int
lods
cltd
cmp
nop
in
pop
jp
push
mov
fistpll
push
aas
sub
std
pusha
xchg
jl
cltd
lea
jns
js
loop
cltd
add
imul
jle
cmp
jg
push
arpl
pop
add
and
int
cltd
jne
lret
shr
cltd
dec
xchg
push
lahf
pop
sbb
xchg
sub
cltd
mov
mov
mov
movsb
sahf
icebp
cmp
imul
inc
fisubs
mov
xchg
push
or
sub
jb
stc
cltd
jecxz
nop
push
jne
add
rcll
std
gs
dec
mov
jb
into
mov
add
int3
movsl
cltd
lahf
pushf
popa
xchg
popf
shll
mov
sub
sti
sbb
test
into
movsl
xchg
rclb
sahf
sub
je
mov
hlt
mov
cltd
push
xchg
imul
dec
int
or
mov
and
cltd
add
jno
or
pop
xchg
popa
aas
add
ds
jae
or
mov
add
mov
flds
stc
lds
in
pop
scas
aaa
call
add
sahf
cltd
push
scas
and
mov
xor
sbb
cmp
into
cmp
mov
pop
mov
adc
mov
cltd
aaa
leave
dec
add
cltd
push
aad
push
ds
stc
cltd
not
sbb
gs
cltd
mov
aaa
cltd
xor
sbb
and
cltd
cwtl
mov
push
stos
cltd
add
repz
adc
inc
jp
mov
cltd
cmp
pop
or
or
lods
lods
cltd
fstpl
loop
inc
or
hlt
sbb
dec
mov
push
adc
jns
jbe
or
or
popf
ret
out
inc
xchg
jno
cltd
sbbb
fs
jmp
adc
mov
jnp
aad
jno
and
xlat
insb
faddl
add
adc
adc
fwait
xchg
dec
xor
pop
adc
lods
mov
les
adc
fistps
xchg
rol
dec
mov
mov
outsl
stos
sbb
dec
mov
rorl
xor
scas
stos
xchg
icebp
addr16
cltd
rcrb
jns
push
add
sbb
or
popf
loopne
pop
xor
jl
mov
iret
cltd
cld
sub
cltd
test
push
test
mov
ret
loope
cmp
ret
inc
inc
sub
enter
sarb
addr16
mov
sti
lahf
jbe
test
sub
ja
jnp
iret
into
cli
fs
jecxz
xchg
jno
and
sbb
je
sbb
jmp
mov
mov
mov
gs
mov
pop
mov
enter
mov
inc
cmp
stos
lods
xor
add
xor
dec
scas
pop
inc
data16
jp
fbld
push
xor
sub
stos
loop
test
stc
out
fcomps
cltd
mov
jge
fwait
and
ss
ficoml
mov
jmp
xchg
xchg
adc
lods
insb
push
cli
inc
jbe
enter
push
sbbl
xor
hlt
cltd
ds
xchg
iret
push
and
sub
ret
xchg
push
mov
sti
es
xchg
mov
mov
movsb
mov
cltd
pop
and
jle
js
and
xchg
and
adc
xchg
push
push
cltd
push
jge
lea
aad
cltd
xor
cmp
out
xchg
mov
movsb
xor
adc
cltd
pop
push
jo
mov
xchg
jle
daa
push
cltd
dec
xchg
adc
add
jbe,pn
mov
xchg
sbb
pop
dec
movsb
sbb
adc
adc
mov
gs
dec
aas
shrb
jle
lock
mov
xadd
mov
mov
fsubl
cltd
jns
mov
inc
mov
push
enter
fisubrs
mov
lods
sti
dec
mov
sbb
cltd
out
fsubrs
cmp
out
push
ret
mov
push
adcl
cmpsb
mov
adc
into
adc
cltd
inc
push
in
loope
fsubrp
jae
mov
add
movsl
pop
pop
pop
fcomp
adc
jmp
ret
aam
mov
bswap
xlat
mov
fwait
ret
mov
adc
pop
jno
popf
pop
mov
mov
add
jb
rolb
jmp
enter
shll
movsl
dec
cwtl
clc
mov
pop
inc
jmp
lret
push
ret
decl
mov
mov
icebp
xchg
ret
jo
mov
push
mov
push
ds
jmp
movsb
and
inc
outsb
push
test
das
stc
sbb
mov
or
mov
cmp
inc
cltd
mov
xchg
jo
fimuls
inc
jmp
pop
push
dec
dec
jmp
adc
in
cmp
mov
mov
mov
xor
jmp
or
dec
and
int3
or
gs
adcl
cmpsl
pop
adc
push
xor
or
cltd
or
lock
xor
out
push
pop
es
add
jmp
jecxz
jge
repz
insb
add
jmp
std
aas
popa
mov
add
mov
loopne
lock
adc
rcrl
push
adc
cmp
aas
jb
xchg
call
mulb
jne
mov
cmp
inc
test
fiaddl
or
or
mov
jno
sbb
jg
adc
and
ds
insl
dec
push
push
mov
sub
mov
mov
scas
mov
sbb
push
movb
mov
mov
ret
pop
jmp
lock
mov
std
stc
mov
outsl
dec
mov
or
das
inc
jg
fisttps
mov
mov
ret
dec
enter
mov
ss
mov
push
ret
lcall
and
dec
and
arpl
or
rol
pop
inc
mov
stos
xchg
rcr
sbb
push
into
ja
sbb
scas
in
aam
jmp
scas
loop
push
sub
imul
lret
jne
inc
inc
pop
push
jmp
or
mov
adcb
iret
mov
daa
jae
lock
xchg
fadds
adc
test
in
xor
mov
incb
fwait
outsb
mov
adc
sbb
mov
std
mov
jne
jmp
jge
cmp
shll
fisubs
mov
shll
nop
out
test
push
pop
popf
cltd
out
mov
repnz
mov
mov
daa
jb
push
ljmp
and
aad
jg
lcall
sub
inc
test
cwtl
call
lods
lock
and
sub
call
jne
adc
iret
or
mov
mov
js
mov
push
xchg
mov
pop
xchg
jns
adc
int3
inc
cmpsb
jns
jl
adcl
out
icebp
mov
lock
ret
andb
cmpsb
loope
add
pop
mov
pushf
mov
jne
mov
mov
fisttps
push
mov
and
mov
adc
popa
loope
push
cmp
cmovo
xor
cmc
into
sbb
inc
jle
mov
jmp
cmp
cltd
jns
sbb
pop
jmp
mov
cmp
lret
mov
sbb
jmp
loopne
jmp
add
mov
fidivrs
lods
inc
loop
or
imul
sbb
imul
xor
jmp
pushf
add
js
int
or
jne
roll
adc
popf
pop
mov
lock
insl
push
pusha
dec
mov
lods
outsb
jb
stos
xor
ds
inc
and
and
popf
push
or
int
dec
adc
or
fcompl
ljmp
pop
pop
and
fwait
cmp
xchg
mov
stos
repz
pop
or
je
fidivrl
inc
cld
stc
or
mov
cwtl
mov
loopne
aas
ror
lods
and
mov
aas
fwait
sub
loop
pushf
ficompl
shll
push
push
int
mull
jno
add
inc
dec
dec
xorb
lcall
stc
cltd
dec
mov
xor
out
adc
test
and
cli
aas
imul
xchg
and
pop
in
popa
movsb
pop
insl
sbb
adc
pop
or
es
les
pop
push
std
jno
js
xor
mov
pop
mov
je
stos
ret
sbb
jmp
inc
add
aas
lods
rorb
sbb
cs
bound
cmp
cld
or
inc
push
data16
stos
jmp
cmp
and
sub
push
add
add
mov
adc
imul
test
jnp
fwait
lcall
mov
repnz
mov
add
shl
mov
insl
cmp
je
and
dec
stos
push
cmpsb
js
mov
and
ljmp
xchg
xchg
adc
test
inc
pusha
inc
xlat
sbbb
jo
aam
jp
xchg
jns
test
repz
std
sbb
push
mov
stos
addl
inc
les
jmp
mov
fimull
jo
ja
and
insb
test
dec
sahf
loope
aam
lock
and
outsb
int
mov
lcall
jge
out
sub
xchg
jno
lahf
test
jmp
in
insb
adc
popa
sub
push
movsb
jmp
aam
adc
loopne
inc
pop
mov
mov
imul
mov
pop
dec
test
loopne
mov
pusha
jmp
aas
cmpsl
mov
stc
jp
or
and
lods
xor
int
arpl
push
mov
push
arpl
jp
fcoms
add
dec
ret
mov
mov
into
sbb
cmp
lods
inc
cltd
lock
xor
js
jns
cmp
addb
xor
aaa
sub
fwait
jmp
stc
call
push
shll
push
jnp
mov
in
aas
stc
push
xor
ret
cld
xchg
neg
dec
jns
mov
sbb
jo
cwtl
call
rolb
gs
jb
movsl
dec
mov
ja
scas
jge
mov
xor
lock
lods
pop
je
popf
add
rcrb
stos
out
xchg
test
jb
mov
pop
js
cmp
insl
sub
dec
movsl
mov
lcall
mov
pop
out
jns
lsl
xor
cmp
adc
hlt
enter
and
lea
adc
mov
mov
push
stc
outsb
fdiv
jecxz
mov
push
in
cs
cmp
push
mov
sti
test
loop
mov
fidivrs
push
ficompl
push
jns
frstor
inc
pop
fwait
sti
jae
sub
mov
dec
or
ss
dec
mov
dec
cmp
lods
sub
pop
sti
negb
inc
lret
ja
insb
sbb
jmp
scas
repz
jg
test
adc
mov
xor
scas
aas
mov
mov
jl
arpl
lret
flds
out
mov
imul
fldcw
mov
mov
cmp
fadd
sub
in
fcomi
sarl
jge
cmpb
adc
lds
loop
xchg
xor
jmp
adc
test
sbb
dec
fwait
cmp
sub
pop
pop
adc
xchg
ja
ffreep
mov
dec
jmp
dec
jo
sub
and
mov
mov
loopne
adc
inc
jnp
xchg
shrb
popa
jae
xchg
sbb
aam
sub
mov
jmp
mov
and
ret
adc
insl
mov
lds
jmp
add
xor
aam
push
adc
mov
fnstsw
cmp
push
enter
fiaddl
jmp
and
mov
jns
lods
and
cltd
cmp
dec
inc
sub
jl
sbb
sti
push
inc
pop
js
inc
shrb
cs
sbb
addr16
in
inc
cmp
jmp
inc
jge
movsb
adc
mov
mov
pop
and
data16
dec
fwait
mov
push
push
xchg
bound
and
sbb
mov
sbb
jnp
lock
test
xchg
popa
fnstcw
jnp
and
push
inc
jl
dec
push
stos
sub
aam
adc
fimuls
aam
sbb
lods
add
ret
into
lcall
adc
movsl
lock
cmpsl
sbb
ret
jl
aam
movsl
mov
pop
dec
iret
pop
pop
jno
add
cmp
xchg
mov
jb
inc
vucomiss
xchg
dec
pushw
in
lcall
inc
push
jo
xchg
cmp
xor
inc
sub
xchg
daa
jg
sbb
jno
push
mov
or
scas
test
enter
bound
in
mov
jbe
lds
pop
cwtl
inc
pop
stos
push
ret
xchg
mov
test
cmpsl
jb
lock
ja
mov
sub
les
imul
loopne
lcall
mov
sub
imul
fwait
daa
dec
inc
add
fsincos
xor
jns
jge
test
adc
aaa
inc
stos
jo
jo
ret
and
xchg
xor
arpl
les
cld
dec
test
std
dec
andb
dec
daa
vmread
fwait
jno
enter
pop
mov
mov
jge
lds
push
or
xor
xchg
mov
in
sbb
push
mov
xchg
mov
jb
cmp
pop
xlat
mov
in
loopne
mov
aam
jmp
pshufw
inc
push
loopne
mov
lcall
loopne
stc
pop
pop
mov
xchg
mov
out
cmpsl
jmp
out
push
lock
lcall
pop
inc
jg
mov
stos
jo
mov
outsb
jmp
call
inc
dec
jo
sub
scas
add
xchg
jg
push
movsb
jmp
lcall
enter
into
or
jmp
lds
jmp
jnp
sub
iret
mov
xchg
movsl
lahf
in
arpl
arpl
repz
add
mov
loope
xchg
jae
je
addr16
adc
jle
fsubrs
mov
push
mov
pop
popa
pushf
cld
ret
pop
sbb
pop
loope
pop
inc
and
mov
lcall
test
jne
bound
xlat
cltd
cmp
adc
inc
jmp
icebp
mov
imulb
and
push
leave
aas
fwait
add
dec
mov
or
scas
clc
jge
jp
xchg
mov
loopne
jl
pop
and
std
mov
sub
cmp
lret
repz
shr
inc
jl
push
loopne
cmp
push
fcmovu
pop
popf
adc
rcrb
push
xor
jo
lcall
outsl
cmc
mov
mov
pop
push
leave
ret
adc
addb
fstpt
and
mov
add
jle
or
mov
inc
sahf
gs
in
andb
dec
jns
addb
lock
stos
mov
sbb
mov
nop
js
mov
xor
jl
outsl
xor
movsb
pop
mov
jmp
rclb
lock
sub
lcall
add
mov
and
mov
iret
leave
cmp
fistps
test
push
xor
xor
push
test
stc
push
sub
adc
idivb
movl
push
rcl
sub
jmp
ljmp
leave
sti
dec
push
dec
js
les
lahf
loop
pop
or
mov
in
mov
xchg
cld
lahf
mov
push
popf
adc
push
mov
mov
mov
mov
fmuls
fwait
push
jmp
and
lods
and
pushf
mov
ret
dec
jmp
pop
xlat
mov
xchg
xor
mov
inc
cmp
mov
mov
pop
loop
xchg
sbb
mov
mov
mov
jmp
rcrl
lds
mov
sub
scas
xchg
lds
jns
sbb
call
mov
sub
roll
inc
std
popa
cltd
or
arpl
js
push
pop
aaa
mov
and
lock
mov
dec
xchg
adc
mov
jae
jne
jp
testl
imul
lock
adc
push
push
mov
jmp
xor
inc
je
add
lods
adc
inc
mov
pusha
adc
in
pop
mov
jmp
enter
hlt
cmp
aas
mov
int3
adc
xchg
push
sbb
adcb
inc
xchg
adc
dec
adcb
testb
mov
mov
fidivl
sti
shr
mov
mov
cmp
adc
ret
ret
cltd
pop
jmp
add
or
ja
test
xchg
stos
and
fs
lret
ss
lods
dec
addr16
mov
mov
mov
testl
jns
xchg
xchg
outsl
pop
inc
cmp
popf
shld
xor
call
shlb
imulb
or
lret
sub
mov
lods
push
adc
imul
cmp
mov
out
out
sub
lds
fildll
loope
mov
mov
add
sbb
jbe
lds
imul
movsl
jns
pushf
in
push
scas
scas
mov
ret
sub
inc
add
jl
adc
xchg
or
pop
mov
cmpsb
jo
arpl
pushf
sub
pop
in
out
mov
aas
push
addb
push
and
dec
sbb
and
mov
nop
mov
xchg
cld
addl
dec
rorb
mov
dec
add
lret
in
aam
loopne
and
cwtl
leave
cmc
lods
dec
lcall
aaa
stc
lea
and
cmc
ja
jno
test
mov
mov
cmp
shrl
and
pop
lods
stos
jg
and
in
out
jae
iret
lock
jecxz
mov
out
loopne
cmp
mov
outsb
add
adc
scas
or
xchg
lcall
and
fwait
mov
jmp
inc
jne
js
mov
mov
mov
lret
mov
inc
and
lods
in
dec
pop
xor
inc
shrb
and
cmpsl
lock
inc
pop
bnd
or
sbb
xchg
cld
fisttpl
or
es
pop
sbb
sahf
xor
fstpl
out
leave
inc
mov
ror
movsl
jmp
jge
inc
insl
mov
clc
lss
popa
shl
and
push
cmc
stos
imul
movsl
stos
jmp
mov
loopne
inc
sbb
jnp
inc
mov
je
push
arpl
or
sub
mov
je
push
jge
mov
mov
and
stos
push
jae,pt
pop
mov
mov
inc
mov
aas
stos
or
jne
push
jecxz
call
mov
dec
or
dec
mov
aas
out
xor
adc
jle
push
incb
mov
mov
movsl
inc
repz
mov
jmp
fstps
sub
sbb
rol
into
cmpsb
jmp
sub
xor
sub
aam
lahf
xor
cmp
cmp
mov
mov
daa
js
xchg
pop
imull
pop
add
cs
addr16
out
sarb
lcall
push
mov
lret
lea
inc
test
testl
shlb
loope
loopne
push
pop
or
fnstenv
dec
push
push
aas
icebp
mov
mov
xchg
mov
pop
and
and
adc
jle
inc
jl
popa
jno
pop
cmp
xor
mov
aaa
addr16
jge
xorl
inc
mov
cmp
call
pop
shlb
inc
pop
shll
jns
adc
pop
xor
test
nop
mov
mov
fists
jle
xchg
xor
fdivs
xor
es
xlat
pusha
in
out
movsl
in
loopne
mov
scas
andb
mov
lods
jmp
jg
mov
aaa
in
pop
clc
cmp
add
push
cmp
lea
call
cmp
lds
pslld
lcall
les
mov
imul
mov
sub
add
pop
xor
mov
jmp
mov
ljmp
jmp
out
aam
es
xchg
mov
dec
addr16
sahf
movsl
dec
in
jno
fwait
jb
shll
inc
std
popa
adc
fiaddl
loop
cmc
sti
jbe
enter
sbb
and
rclb
aaa
mov
lea
enter
test
lock
shlb
notb
push
adc
jge
and
sbb
test
sub
aaa
mov
and
pushf
popa
mov
sub
sbb
mov
fs
xchg
jns
push
mov
cmp
cmp
ffreep
or
sub
pop
pop
add
jecxz
push
fwait
cmpsb
cmp
mov
mov
sub
pop
ret
ficoms
call
test
xor
cmpsb
mov
aas
mov
lods
test
pop
push
sbb
inc
fnstcw
or
push
arpl
sti
lods
xchg
mov
mov
gs
pop
adc
lret
wbinvd
cmp
push
jg
jmp
sub
sbb
jmp
jbe
mov
or
sbb
and
lock
sbb
and
aas
mov
inc
loope
mov
mov
pop
dec
push
arpl
stos
cmp
cmp
fwait
fwait
movsb
add
xchg
rol
push
ret
or
in
mov
repz
aam
hlt
ret
inc
loop
and
pop
aaa
or
dec
mov
inc
mov
lret
sub
lds
sub
adc
imul
das
std
pop
sahf
lret
fsubl
aaa
inc
cmp
cmpsl
ljmp
adc
pusha
insb
mov
cld
jae
jle
cmp
or
add
push
popf
popa
das
jno
xor
jle
repz
xchg
or
xchg
sbb
adc
sub
pop
or
jb
stos
adc
xchg
cmp
pop
enter
dec
fdivs
cmp
shlb
mov
xchg
sbb
pop
je
jno
and
dec
push
jp
lds
test
js
and
leave
cli
pusha
fistpll
xor
jle
subl
pushf
jmp
scas
inc
inc
shrl
mov
or
fiadds
cmp
lcall
mov
push
dec
pop
push
adcb
sub
sbb
pop
outsl
push
inc
test
inc
inc
mov
mov
mov
mov
push
in
mov
push
cmp
pop
adc
jl
aaa
mov
cmp
dec
adc
inc
push
and
test
pop
mov
mov
xor
jp
cvtps2pi
js
sbb
and
or
pusha
call
fiaddl
add
stos
or
pusha
test
mov
jecxz
sub
inc
rcr
fidivs
stos
pushf
mov
enter
pop
imul
dec
add
add
cmp
sbb
icebp
and
lds
xchg
popa
and
xor
mov
mov
rolb
ret
sahf
dec
aam
scas
pop
test
mov
test
adc
loop
stos
test
sub
shll
lock
mov
jg
mul
daa
xchg
mov
inc
mov
in
rcrl
inc
cmpsl
nop
cmc
xor
mov
inc
lcall
arpl
mov
test
adc
cmp
jo
insb
cmp
adc
in
mov
mov
mov
add
lcall
inc
daa
fcoms
pop
shll
sub
xor
insb
xor
arpl
xor
adc
sbb
sar
xchg
jmp
aas
js
sub
ss
out
es
roll
lahf
rolb
pushw
xchg
test
sarb
sub
add
les
stc
ljmp
rcr
pushf
std
mov
insb
sbbl
rcll
stos
pop
jnp
and
mov
into
movsb
mov
sub
cltd
cmp
sbb
lods
fptan
outsl
mov
outsb
sbb
lret
xchg
push
or
nop
pop
mov
pop
leave
loop
ret
pop
test
lea
cmp
into
movsl
and
jmp
loope
cmp
sbb
xor
dec
mov
loopne
mov
into
pop
insb
push
mov
cmpsl
sbb
daa
dec
adcb
test
std
cwtd
das
test
enter
mov
ds
mov
lcall
cmc
push
jg
push
add
push
cmpsl
dec
into
loope
and
mov
add
xchg
jae
dec
and
call
jg
rolb
push
xor
popf
pop
icebp
test
addl
add
and
dec
pop
mov
test
inc
adc
mov
xchg
test
stos
or
setns
push
imull
mov
sbb
mov
lock
pop
push
mov
xlat
mov
xorl
mov
sbb
outsb
gs
add
dec
mov
loopne
loopne
sbb
jne
enter
int
sbb
cltd
insb
in
jg
cltd
pop
pop
les
fdivl
mov
sbbb
sar
cltd
and
loop
adc
mov
mov
ds
fld1
scas
adc
rclb
push
cltd
vphsubdq
add
cltd
movsl
divb
xor
push
jns
add
std
scas
mov
cmp
jecxz
iret
cltd
jne
orl
call
cltd
pop
into
mov
mov
repz
cltd
cmc
mov
cltd
mov
ficoml
jnp
cmpsl
int
cmp
push
out
cltd
dec
xor
mov
add
mov
jns
jo
or
sbb
data16
mov
xor
mov
inc
fcoml
icebp
mov
outsb
xchg
mov
cltd
dec
std
add
sub
dec
daa
sub
cltd
xchg
xchg
nop
jecxz
xchg
rcrl
jle
cwtl
sti
cmpsl
mov
test
rol
je
and
or
add
scas
push
cld
aas
jge
cmp
xchg
test
sbb
and
insb
movsb
add
fcompl
or
test
out
jle
cltd
lahf
gs
rorl
push
loop
jbe
ss
jp
jne
xlat
mov
cmpsl
cs
test
out
pushf
ficoms
cmp
add
cltd
adc
out
fisttpl
mov
outsb
cltd
push
roll
cltd
ja
or
add
pop
dec
mov
and
aaa
rcl
lahf
or
in
scas
out
adc
sub
repnz
and
xchg
push
imul
mov
inc
inc
inc
push
sub
sahf
aas
fldcw
rcrl
sub
mov
in
cltd
pop
sbb
ss
cltd
xchg
mov
insl
ret
add
xchg
cltd
and
hlt
cmpsb
cltd
shlb
aaa
xchg
mov
cltd
push
jmp
mov
das
ret
sbbl
mov
pop
xlat
and
and
ficomps
stos
pop
mov
xchg
repz
imul
xchg
es
data16
xor
inc
inc
xor
inc
pop
cld
rcr
lods
popa
cltd
add
dec
notb
push
xor
arpl
inc
cltd
mov
adc
lods
mov
stos
aad
sbb
mov
cltd
xlat
insb
push
dec
out
add
repnz
mov
mov
leave
les
xor
mov
loopne
rcrl
sub
mov
xlat
pop
je
cmp
or
aam
dec
sbb
sbb
xor
mov
pop
fstpl
push
mov
cltd
fwait
xchg
jns
sbb
xor
cltd
adc
xor
fsubrl
filds
lods
ljmp
add
pop
data16
lock
loopne
fistps
dec
push
mov
pop
add
out
xchg
bound
cltd
inc
xor
lds
pusha
aas
push
out
add
mov
add
xchg
inc
mov
xchg
pop
jne
ficomps
shl
mov
lcall
pushf
dec
mov
push
insb
cmpsl
fwait
inc
in
stos
dec
arpl
jmp
mov
decl
add
out
es
fbstp
adcb
insl
inc
xchg
sub
fnstenv
sbb
adc
imul
les
mov
stc
fcmovne
sbb
and
mov
imul
xor
pop
fs
pop
mov
adc
cltd
ss
outsb
xchg
dec
cmc
mov
adcb
scas
add
sub
pop
adc
mov
xor
xchg
cltd
dec
sub
jmp
cltd
jg
xor
mov
push
sbb
sub
jns
insl
or
jne
shll
mov
cltd
icebp
push
ja
mov
pop
dec
cmp
sbb
iret
adc
scas
adc
andl
cltd
outsb
cmp
cltd
leave
outsl
mov
xchg
dec
pop
rorb
sti
ss
fwait
add
mov
sbb
cli
adc
xlat
add
and
call
les
out
pop
aaa
push
add
cmp
xchg
int
cltd
cs
inc
cmp
push
push
xor
loop
scas
pusha
mov
incb
loope
outsl
sub
popf
mov
inc
test
mov
test
mov
in
inc
cmp
leave
mov
dec
jg
inc
cwtl
pop
cltd
fmull
cld
jg
jmp
and
cltd
cwtl
or
imul
addr16
cltd
fistpll
or
fwait
dec
mov
jmp
stos
xor
fsts
aam
mov
pop
adc
cltd
mov
test
sbbl
and
test
fld
mov
rcrb
ret
out
cltd
aaa
pop
push
xchg
out
jbe
fwait
inc
adc
cmpsb
daa
cltd
jb
js
push
jnp
dec
cltd
mov
push
mov
loopne
lock
xchg
sub
fnstenv
cltd
push
adcl
cltd
aad
and
in
movsl
je
cmp
sbb
cld
cltd
loopne
mov
sub
rorb
lock
push
mov
cltd
add
cltd
cli
inc
into
out
rolb
fwait
pushf
jne
mov
imul
cmpsl
inc
and
sub
repz
pop
fucomi
sbb
imull
jno
inc
out
jle
pop
aam
adc
pop
cltd
xchg
push
push
dec
pop
lea
ficompl
push
fwait
lods
inc
scas
or
mov
insl
mov
add
ret
popl
xchg
and
cmpsl
xchg
inc
mov
xor
icebp
pusha
scas
cltd
pop
push
mov
push
in
mov
cltd
dec
xchg
pushf
cltd
cmc
xchg
or
push
or
mov
sbb
fwait
out
lret
mov
sbb
cmp
sub
cli
test
xchg
fidivl
pop
cltd
and
xor
out
cltd
add
std
scas
push
pop
int
cltd
mov
xchg
push
cmp
add
cltd
dec
xchg
les
jns
mov
pop
ret
pushl
xor
rcrl
xor
jo
cltd
stos
or
fidivl
inc
popa
dec
mov
mov
inc
or
push
cmc
dec
and
jle
xchg
iret
adcl
lock
bound
in
rcll
mov
jmp
das
stc
sub
sub
add
cld
imul
fnstenv
mov
negb
dec
aas
dec
xchg
sbb
cmc
call
lcall
or
sarb
mov
push
lds
pushf
lods
mov
scas
xor
mov
test
adc
aam
cmp
adc
adc
in
popa
jns
jmp
cwtl
addl
xlat
mov
ret
and
sub
adc
dec
loopne
cli
pop
push
sti
mov
out
xlat
aaa
lods
push
jmp
pop
adc
push
subb
mov
mov
mov
push
or
sub
mov
popf
insb
aaa
stos
leave
into
stos
mov
into
loopne
in
fidivrl
lods
cmpsl
popa
mov
test
cmp
xlat
dec
mov
stos
es
sub
lea
mov
sbbb
mov
movsl
xlat
push
jp
mov
arpl
add
sarb
js
mov
pop
addl
mov
pop
out
adc
pop
xchg
fs
in
mov
mov
mov
push
nop
mov
mov
test
jg
ljmp
scas
adc
add
test
sbbl
mov
sbb
popa
fdivs
add
loopne
jnp
xor
mov
push
sarb
jno
jns
mov
mov
insb
add
dec
cmpsb
fsubrl
adc
mov
sbb
cmc
test
xor
mov
adc
jb
xchg
mov
daa
mov
jae
jne
pop
jns
sbb
jmp
jae
mov
cmpb
pop
fnstsw
lock
xchg
mov
push
fcoml
jmp
jno
out
cli
mov
mov
pop
xchg
lcall
sti
xchg
shlb
inc
sub
jns
inc
and
push
loope
mov
cld
rcrl
movsl
pushf
jns
rcl
out
in
pop
add
icebp
lock
xorb
lds
and
xchg
jge
pop
jo
stos
enter
negl
test
icebp
jmp
movsb
lods
aad
cmp
sub
je
jmp
mov
cmpsl
ret
test
jo
inc
subb
pop
cmp
mov
lahf
out
adc
ret
push
jmp
mov
in
rclb
jmp
jno
not
cltd
sbb
jmp
cltd
adc
xchg
adc
stos
inc
mov
das
cmp
or
dec
stos
ds
jge
mov
sub
dec
js
and
jb
xchg
les
inc
aad
add
ja
ljmp
iret
stos
mov
and
jmp
jo
push
add
inc
repnz
sbb
test
dec
and
xchg
cmp
sub
shl
inc
xchg
sbb
jg
inc
lds
jmp
xchg
mov
rclb
sarl
mov
xor
das
scas
inc
jmp
cmp
stc
xor
rorb
inc
loopne
mov
adc
mov
mov
shlb
xchg
aas
std
cwtl
sbb
lods
andl
lds
orl
and
test
sub
jno
popa
adc
mov
add
cltd
lods
xor
xor
jmp
jno
jnp
mov
loop
xchg
lret
xor
and
inc
mov
movsb
xor
fidivs
mov
jle
adc
lret
inc
push
sub
mov
pusha
and
aaa
or
outsl
lods
arpl
pop
scas
sub
push
lret
loop
inc
addr16
inc
inc
ja
mov
adc
rcrb
mov
jmp
xor
cmp
mov
mov
inc
fstps
mov
test
xor
and
cmp
mov
call
cs
mov
sub
inc
loopne
cmp
dec
push
push
inc
sbbb
shlb
rorb
subb
xchg
jecxz
fwait
jns
movsb
jp
inc
dec
les
adc
sbb
xchg
int3
lcallw
xlat
pop
jbe
inc
push
fldcw
test
inc
mov
push
cmp
rcrl
mov
adc
jne
pop
gs
nop
jge
inc
mov
xor
inc
jno
sub
ja
or
cwtl
imul
loop
arpl
jnp
mov
outsb
jmp
cwtl
mov
fsubl
jns
in
jb
sub
push
jbe
push
jmp
lahf
mov
inc
stc
loopne
xor
add
inc
ja
rorl
sbb
pop
imul
aaa
shl
pushf
dec
jge
gs
jmp
sbb
sbb
fbld
lcall
xor
xor
dec
test
push
jmp
pushf
mov
inc
mov
inc
push
orl
xor
pop
es
mov
sbb
jmp
mov
pop
mov
ljmp
js
ja
mov
pop
pop
sub
mov
lds
cmp
pop
dec
test
shlb
mov
movsl
or
push
mov
and
inc
jmp
push
jp
pop
movsl
adc
sub
add
imulb
xlat
mov
cs
jmpw
xor
lret
in
xor
dec
mov
adc
shlb
icebp
pusha
dec
xchg
xor
pop
xchg
jb
ss
xor
and
jg
mov
icebp
pop
rolb
or
pop
cmp
cmpsb
arpl
sub
add
gs
mov
mov
sti
mov
rorb
adc
orb
rorl
jno
shrl
stos
int3
lret
arpl
or
cmpsl
in
jmp
or
cmp
fidivrl
mov
sar
sti
popa
mov
mov
mov
ds
dec
inc
popf
and
movsl
mov
in
inc
and
cmp
or
mov
call
inc
ja
roll
in
mov
pop
mov
in
inc
mov
js
ss
inc
pop
test
aad
stos
sub
test
cmp
sbb
ja
js
cltd
test
jmp
jb
and
or
pop
or
imul
mov
out
mov
arpl
pop
add
mov
pop
subl
shlb
push
movsl
inc
and
jg
mov
enter
sbb
inc
sbb
mov
test
loop
in
cli
mov
adc
lret
loopne
shrl
and
dec
mov
jmp
dec
stos
fxch
pop
jb
mov
push
mov
aam
mov
lds
subl
leave
rcrb
ljmp
roll
cmp
stos
mov
lock
jns
out
pushw
adcb
nop
or
stos
sarb
sub
pop
mov
dec
hlt
rol
dec
lea
push
cli
push
mov
scas
dec
sbb
push
mov
push
cli
insl
mov
add
jmp
outsl
add
in
mov
shlb
shll
cmp
sub
or
inc
xchg
cmc
mov
call
jmp
subl
sbb
pushf
js
sbb
xchg
fbld
xor
sbb
pop
insl
lds
adc
push
cmp
or
stos
xlat
dec
mov
iret
call
mov
jp
lods
jmp
push
dec
in
stos
mov
stos
cltd
sbb
loopne
adc
stos
ret
lahf
outsb
pop
xchg
jmp
cmc
jb
in
rorb
add
mov
lcall
jmp
hlt
cltd
shl
jnp
cmp
add
cmp
sbb
int
pop
mov
xchg
pop
sbb
mov
dec
mov
mov
lods
incl
jns
xchg
and
push
fwait
or
sub
jl
pop
cmp
lret
int
pusha
cld
daa
fisttps
jmp
cli
lret
adc
jp
xchg
pusha
lret
fstpt
stc
cmpsb
bnd
fwait
inc
sub
lock
xchg
pop
cmp
ljmp
xor
and
add
xchg
pusha
adc
lahf
sbb
add
fidivl
insb
aaa
loopne
loopne
mov
inc
shrb
jmp
adc
pop
mov
and
cmpsl
pop
sbb
repz
sbb
sar
aas
sub
cmp
mov
and
jmp
push
mov
cli
jp
outsl
dec
sbb
and
fmuls
xor
mov
and
cwtl
jecxz
mov
cwtl
stc
push
iret
enter
hlt
add
jle
cld
popf
arpl
imul
inc
jmp
or
pop
push
jae
cmp
xchg
push
and
rolb
shl
andl
cmpsb
leave
mov
jnp
rorb
xor
lods
lods
popf
movsb
int
jle
jb
aaa
jmp
or
cmp
aaa
lret
jnp
test
xchg
stos
mov
pop
jmp
push
loopne
jmp
mov
scas
gs
jb
leave
pop
dec
sub
into
insl
out
mov
mov
call
mov
mov
out
push
pop
jno
clc
ljmp
fwait
out
js
pop
mov
loope
and
scas
adc
stc
push
add
ljmp
lcall
jne
std
sbb
inc
sbb
sub
push
repz
mov
sbb
enter
mov
ret
cltd
jne
cmp
gs
xchg
xor
sbb
mov
lea
push
int
push
adc
adc
lret
sub
sbb
ds
push
jne
das
cmp
adc
adcl
inc
int3
mov
cmpb
andb
mov
jl
test
jbe
dec
jmp
scas
mov
ljmp
adc
inc
push
jl
stos
leave
cmp
cmc
inc
shrb
rcrb
imul
dec
mov
mov
xchg
mov
mov
inc
or
jno
movsl
sarl
sub
js
mov
cmp
outsl
pop
dec
xchg
cmp
mov
jmp
scas
movsl
adc
sbb
jnp
cmpsl
fs
jmp
gs
xchg
cmp
in
icebp
cltd
pop
mov
loop
rorb
sbb
or
inc
xchg
mov
jmp
xchg
mov
and
mov
add
lcall
xor
pop
loope
divl
daa
mov
lcall
or
mov
repz
ret
cmp
push
adc
jo
ss
inc
jno
rcl
into
dec
addb
fcmovb
push
loopne
into
fnstcw
movsl
mov
push
divl
pop
addb
push
jle
mov
std
jae
loopne
scas
out
and
jg
pusha
jl
aad
or
rclb
adc
lock
arpl
sbb
mov
pop
and
aaa
push
mov
inc
mov
and
lods
cmpb
call
test
call
rolb
cwtl
and
inc
pop
andb
nop
push
dec
and
inc
sahf
mov
ds
iret
pop
int
jno
mov
xor
push
pop
push
and
mov
add
adc
dec
negb
call
fisttpl
or
push
mov
cmpsb
punpckhdq
sbb
pop
sbb
cltd
mov
sub
push
or
fwait
cltd
adc
lock
pop
and
out
jmp
push
das
popa
mov
jmp
adc
pop
aad
inc
mov
or
mov
lods
out
cmpsb
mov
xchg
fs
sub
stos
adc
adc
daa
mov
shrl
add
pop
jge
or
mov
in
jbe
pop
jmp
into
mov
outsl
pop
shll
pop
sbb
jg
pusha
stos
or
jp
outsl
mov
popa
push
and
lock
mov
int
test
subb
stos
dec
movsl
rorb
fisttpl
adc
push
and
and
and
in
dec
mov
into
mov
push
adc
ds
cmp
frstor
movsb
mov
dec
sub
pop
stos
addr16
sbb
or
stos
cmp
pop
sahf
cmp
popa
fs
mov
imul
stos
pop
cmp
daa
mov
mov
cmpsb
sbb
cmp
xchg
cmp
inc
mov
stc
and
mov
mov
enter
ds
mov
test
xchg
cmp
jg
or
add
jmp
movsl
inc
pusha
cmp
int3
rcll
mov
pop
fwait
jmp
fmull
imul
movsb
mov
lea
xchg
pop
enter
dec
lds
add
pop
fwait
scas
cmp
jae
add
mov
inc
sbb
sub
jg
lea
aas
pop
test
imul
mov
dec
sub
lahf
dec
jne
rcr
xchg
cltd
adc
xchg
or
mov
dec
pop
push
mov
rcrb
dec
lret
cmp
push
aas
sbb
sbb
hlt
jmp
lock
jg
vmovaps
dec
sbb
cmp
sbb
jmp
sub
roll
aaa
xchg
scas
pop
pop
mov
lds
inc
loopne
or
out
dec
in
in
dec
jmp
jno
sahf
or
loopne
mov
rol
sbb
xorl
outsb
cmp
sbb
adc
add
dec
jmp
loop
fildl
popf
add
push
inc
lret
ficomps
cld
daa
xor
or
jmp
loop
dec
xchg
cs
mov
inc
mov
mov
dec
inc
jne
out
mov
sar
es
out
mov
mov
push
fnstsw
in
aaa
adc
shl
jae
movsl
lock
xchg
leave
cmp
mov
cmp
or
mov
jae
pop
inc
push
pop
mov
mov
mov
sbb
add
xchg
repnz
sbb
xchg
lahf
icebp
iret
lock
lods
popf
pop
xor
loopne
inc
sub
jns
sbb
in
dec
stos
sub
pushf
cltd
pop
in
xchg
and
andb
test
js
cmp
or
orb
jbe
popa
repz
inc
push
add
adc
mov
jmp
sub
daa
fldl2t
cwtl
xor
jo
or
stos
fsubr
stos
hlt
sub
int3
sbb
shr
movsb
shr
aam
dec
ror
push
add
pop
aaa
imul
mov
rcll
jmp
add
jno
jmp
xlat
sbb
and
outsb
push
sub
push
sub
sub
shl
jno
ret
jb
movsb
push
and
and
ret
loop
dec
cmp
fs
adcb
aad
and
and
leave
mov
pop
jmp
dec
stc
in
mov
sub
insb
out
into
cmp
shrb
je
ss
jbe
dec
lret
adc
inc
stos
pop
mov
stc
xchg
pusha
or
les
aas
ds
mov
cli
inc
pop
les
lea
inc
shl
jmp
pop
xchg
and
fucomip
sbb
sub
xchg
fcmovnbe
loope
push
std
inc
jns
sbb
daa
lret
cld
fldenv
sbb
mov
and
rcrl
cmp
mov
cmp
inc
cli
cltd
nop
pop
loope
mov
cwtl
sub
xor
int3
xorl
js
scas
lahf
add
pop
cltd
out
jb
sbb
push
adc
addl
lods
sarb
sbb
xor
stos
lods
adc
test
sub
imul
and
push
mov
inc
xchg
test
mov
jg
scas
pop
cmp
inc
jmp
mov
and
inc
insb
stos
fst
stos
jle
scas
push
mov
add
outsl
mov
push
popf
xchg
iret
mov
out
int
lock
shrl
pop
mov
sub
xchg
and
lret
pop
push
test
cmc
imul
mov
sbb
sub
pushf
xor
insl
cmp
mov
or
aas
aaa
jmp
repnz
stc
sub
cmc
cmp
mov
jns
enter
outsl
lock
jp
mov
cmp
mov
fnstsw
dec
xchg
or
jl
pop
mov
add
adc
push
fwait
int
lds
mov
push
jmp
add
mov
or
testl
sbb
inc
sbb
xchg
xchg
repz
arpl
cltd
sub
test
jno
sbbl
scas
mov
inc
shll
es
cltd
nop
pop
pop
movsb
and
cltd
sbb
sbb
stc
test
sti
mov
mov
lds
xchg
outsl
mov
inc
outsb
les
cmp
aas
and
dec
fisubrs
call
add
repz
loop
rcrl
or
cltd
and
mov
mov
lcall
mov
mov
jb
xor
test
sarb
ret
out
lahf
and
cltd
movsb
jle
inc
mov
dec
fistps
inc
jmp
push
int3
rclb
xor
loope
addr16
daa
idivb
lock
jge
iret
int
dec
test
aam
pop
dec
cmp
into
jmp
ficomps
pop
adc
xchg
inc
mov
scas
push
in
sub
sub
test
cltd
addr16
mov
mov
sbb
in
loop
or
dec
pushf
sbbb
or
scas
adc
lods
cmp
test
icebp
adc
mov
movsl
or
shrl
sbb
mov
cltd
in
enter
movsb
testl
cld
shrb
inc
insb
cli
mov
pop
pop
or
decb
rcll
and
lcall
cld
xchg
icebp
gs
sbb
daa
xor
mov
xchg
cmp
mov
in
or
scas
cmp
xchg
cltd
stos
into
mov
lret
imul
jb
sub
in
mov
ljmp
nop
pop
icebp
jnp
mov
lret
scas
popf
xor
stc
ficomps
jne
cltd
sysexit
orl
cli
rclb
jg
cmpsb
out
lcall
repnz
gs
inc
or
sahf
xchg
lods
pusha
fcmovu
pop
movsb
cltd
mov
sbb
jns
inc
cmp
enter
cltd
mov
scas
jecxz
cltd
xchg
das
aas
pusha
xor
mov
add
inc
rcll
pop
fidivrl
les
xchg
add
inc
jge
js
and
test
cmp
ja
test
push
sbb
push
pop
push
jmp
out
out
adc
outsl
aam
loopne
out
or
cltd
ret
xchg
xchg
xor
fistpll
adc
inc
add
xor
loop
cltd
ds
push
mov
sub
repnz
adc
inc
sbb
jecxz
cmp
cltd
mov
add
or
inc
lahf
shlb
xchg
mov
fcom
aad
lcall
xor
cli
dec
sbb
mov
imul
out
cltd
sub
sbb
cltd
sbb
dec
int
daa
icebp
and
insl
cmpsl
cltd
pop
adc
push
push
add
xchg
inc
rorb
rcrl
mov
jmp
scas
mov
out
dec
dec
js
adc
cmpsb
push
cltd
mov
test
xor
mov
push
ret
into
cltd
mov
loop
addb
and
bound
sarb
pop
xchg
pop
mov
inc
fstps
gs
or
into
ss
push
or
add
lahf
mov
jmp
lods
insb
mov
scas
add
dec
sahf
das
js
mov
pop
cltd
aas
cmp
jge
mov
dec
push
push
adc
cltd
adc
pushf
bound
mov
jo
repz
dec
sub
je
gs
and
mov
out
push
lods
cltd
mov
out
outsb
inc
mov
fidivl
cltd
mulb
test
cmpsl
inc
cmpsl
inc
sbb
xlat
scas
sub
jns
xor
pushf
cmp
jno
mov
mov
aaa
push
adc
dec
sbb
mov
and
imul
sub
and
mov
int
fnsave
lods
scas
lea
stc
icebp
mov
adc
mov
cltd
adc
sub
mov
cltd
pushf
insb
xchg
mov
cltd
mov
xor
cmp
stos
mov
ss
xor
fcoms
cltd
loop
test
jne
outsl
cltd
dec
daa
nop
fcomp
sub
cltd
dec
xor
inc
cltd
arpl
lods
popa
adc
cmp
cs
mov
int
addb
loope
nop
mov
mov
ficoms
js
fcomps
arpl
and
add
pop
dec
sbb
cltd
push
lds
add
lods
sbbl
lea
pop
shll
cltd
loopne
push
ss
and
hlt
cld
inc
bound
inc
ffree
jge
and
movsl
xchg
es
and
fldcw
adc
pop
mov
enter
out
loopne
stos
mov
jge
rorb
mov
jns
pop
out
jo
cltd
scas
test
xchg
mov
outsb
cltd
push
inc
jl
push
mov
fwait
dec
xchg
xor
andb
imul
sbbb
push
mov
dec
jmpw
subl
and
push
pop
or
loopne
cmpsl
mov
shlb
hlt
fisttps
sbb
pop
and
add
jle
leave
and
sub
fwait
rclb
loopne
push
std
negl
aas
xchg
shrb
fnsave
push
jle
cld
inc
icebp
cltd
es
adc
inc
pop
cltd
xchg
mov
or
lods
out
into
fiadds
pop
cmp
sbb
push
fnstsw
mov
xor
jge
xchg
jmp
sbb
or
mov
inc
repz
mov
rol
push
cltd
lds
clc
movsl
dec
pop
push
fs
xchg
mov
fwait
jg
or
xor
or
out
push
lods
sbb
cmp
testb
call
imul
pop
and
pop
das
call
cmp
ja
cltd
mov
dec
jb
cltd
adc
pop
stos
ret
cltd
iret
in
fs
jae
fldt
movsl
cmpsb
jno
cltd
stc
adc
add
sub
pop
fwait
lahf
sub
dec
repnz
mov
fcomps
aad
scas
adc
sub
and
sbb
daa
sub
ret
jle
sub
fsubrs
mov
cltd
mov
jbe
popa
aad
jge
push
in
sti
flds
out
xchg
int
out
les
cwtl
popa
jmp
xor
stos
pop
push
mov
stc
fwait
fwait
iret
mov
pop
jno
mov
mov
mov
mov
notl
stos
dec
and
imul
adc
dec
inc
sub
cmc
cli
stc
pop
xchg
push
mov
daa
mov
push
cltd
pop
mov
arpl
andl
movsb
ja
xchg
xor
pop
push
mov
addr16
cmp
cmpsl
jp
out
and
cltd
lret
movsl
sbb
pusha
mov
lea
je
cltd
pop
xor
dec
cmpsl
repz
stos
cld
push
xchg
add
cltd
push
jle
repnz
mov
out
add
add
dec
out
shlb
leave
arpl
xlat
lods
add
inc
popf
adc
aad
mov
loope
insb
stos
call
push
sub
mov
pop
addb
cmpsl
sbb
les
adc
cltd
dec
sti
cld
sahf
ss
fwait
orb
cwtl
mov
and
jnp
ja
setnp
inc
stc
dec
push
mov
mov
dec
push
fdivl
inc
xchg
ret
stos
add
jmp
int
cwtl
dec
das
dec
loope
addl
jnp
mov
shr
adc
or
sub
mov
stos
jnp
lret
mov
lods
pop
int
jbe
inc
je
in
mov
das
sahf
les
jmp
lock
jns
push
cld
pop
pop
or
mov
push
add
repnz
test
dec
mov
sbb
cmp
in
jp
aad
js
test
inc
es
loopne
jl
cmp
push
cmp
test
sub
push
enter
arpl
je
add
lds
inc
es
jmp
and
cwtl
sub
or
hlt
push
pop
adc
mov
push
xchg
adc
rorl
cmp
cmp
aas
or
lock
fwait
add
into
dec
or
push
arpl
fistpll
jnp
sbb
fcomps
mov
sbb
aaa
adc
sub
add
sbb
loopne
cmpsl
test
cmp
jnp
shrl
imul
dec
lret
cmp
push
jb
ret
add
push
into
dec
mov
stos
arpl
sti
movsb
mov
scas
push
inc
mov
cmp
rorl
adc
ss
mov
sbb
mov
stos
jmp
and
pusha
scas
ja
dec
mov
fwait
pop
call
mov
sub
dec
in
stos
mov
loop
insb
sub
mov
cmp
sbb
fs
jmp
outsb
lea
enter
inc
mov
sub
pop
pop
add
mov
lcall
ret
js
cmpsb
jmp
aam
sti
in
aaa
test
aam
cmpb
and
mov
mov
mov
popa
mov
add
clc
add
cmc
lock
pusha
fwait
dec
push
mov
mov
cmpsl
jp
sub
pop
int3
sbb
xchg
push
cld
mov
aaa
or
adc
inc
daa
sti
dec
sbb
ss
mov
std
inc
outsl
xchg
movsb
rorl
mov
pop
cmp
jmp
clc
mov
mov
jns
test
sbb
jg
lods
sub
jno
and
dec
sti
cmp
jmp
movsl
stos
ljmp
cmp
jmp
sub
shlb
cmp
jmp
xor
cmpsl
cmpsb
ror
sbb
and
inc
pop
mov
shlb
pop
scas
cmpsl
test
sub
push
jno
mov
push
cmpsl
jbe
and
popa
and
inc
mov
jg
out
fdivrl
stos
adc
popl
sti
popf
push
hlt
test
or
mov
jns
and
jo
insb
movsb
mov
ds
cltd
test
inc
mov
daa
inc
lret
stc
xchg
dec
arpl
pop
cmp
imul
mov
aam
cwtl
aad
scas
pop
mov
jp
mov
scas
test
lock
and
enter
sub
insb
push
jno
pop
gs
nop
scas
aaa
mov
mul
jae
cltd
jbe
xor
inc
jle
jns
cmp
inc
inc
in
out
pop
mov
lahf
add
lock
cltd
iret
daa
inc
das
jae
mov
xchg
cs
sbb
aaa
mov
sarl
dec
cltd
sarb
insl
lea
and
out
sbb
aam
sub
xor
push
mov
aas
inc
mov
pop
test
sbb
call
xchg
mov
pop
dec
fsub
add
and
sbbb
bound
stos
pop
fstpl
push
cltd
ret
loop
pop
out
loope
addr16
ret
xor
pop
test
test
test
enter
cmp
fnstenv
xor
jmp
or
sbb
and
cltd
addr16
lcall
mov
shrb
sbb
jg
iret
xchg
pop
loop
xchg
cltd
ja
push
rcl
push
and
or
fstpl
lods
outsl
jle
or
mov
cltd
xchg
jl
xchg
add
and
jle
xchg
sarb
fcmovnu
cmpsl
xchg
or
mov
dec
in
adc
push
pop
das
cwtl
dec
xchg
inc
inc
aas
cltd
lahf
xor
sbbb
ret
cli
adc
push
cltd
in
xor
cmp
jae
aam
xor
mov
sub
stos
add
js
and
or
fsub
add
mov
xchg
lcall
aam
cmp
insl
decl
bound
fisubl
mov
or
cmp
pop
out
cltd
push
arpl
cltd
les
adc
cltd
mov
jge
movsl
cltd
adc
pusha
xchg
xor
call
add
cltd
or
cld
icebp
fidivl
ljmp
cltd
mov
or
pop
stos
das
and
mov
loopne
in
push
clc
cmpsl
cltd
icebp
jbe
push
and
test
pop
stos
cltd
cmp
mov
cltd
xchg
sbb
scas
cltd
add
cmp
cmpsl
enter
ficomps
fsub
pop
loope
adc
jp
mov
cltd
push
loope
or
mov
leave
cltd
int3
sbb
cmpsl
jnp
in
pop
push
test
pop
add
test
popa
cltd
pop
test
adc
aaa
jmp
sbbl
stos
sub
and
scas
rcrb
xchg
cltd
fs
pop
mov
mov
xor
movsb
mov
in
inc
xchg
ds
cltd
push
outsb
mov
int3
ljmp
ds
dec
shlb
aaa
lds
pop
iret
mov
mov
or
fwait
scas
inc
adc
cmp
mov
pop
cli
fnstenv
jg
cmpsb
cltd
xchg
push
loope
popa
cltd
xor
and
cltd
dec
je
mov
push
adc
inc
jp
orb
stc
enter
rep
xchg
lds
sbb
cltd
test
inc
inc
pop
cltd
mov
cmp
popf
pop
jecxz
std
mov
lea
mov
mov
lahf
mov
pop
cltd
ds
test
xchg
cmpsl
sub
enter
xor
jg
cltd
pop
ret
xor
jmp
xchg
in
sahf
pushf
fisubrs
in
fldcw
pop
and
add
inc
cltd
negl
cltd
mov
insb
pop
rcrl
addl
cltd
cmp
push
mov
mov
scas
out
sub
pop
cmp
adc
mov
mov
cmp
int3
stc
pop
adc
mov
and
cmc
sub
outsb
es
cltd
xchg
sub
dec
test
and
cmp
cltd
add
stos
and
cltd
addb
cltd
cmp
jnp
xor
imul
sbb
mov
and
cmp
pusha
out
and
je
push
mov
movsb
sub
lret
jnp
add
pop
jo
sbb
sub
mov
jg
jge
cltd
ss
cmp
mov
mov
insb
cs
add
scas
subl
pop
push
rcll
lret
cmp
nop
sub
ret
cmp
sbb
inc
popa
lock
mov
out
sub
xor
mov
pusha
into
mov
dec
adc
bound
xor
pop
cltd
cmp
sbb
test
fldl
int3
inc
jae
clc
mov
std
je
lret
pop
inc
mov
jno
loop
add
mov
sahf
sbb
dec
scas
xor
mov
sbb
insb
cld
xor
sbb
in
in
and
addr16
pop
push
push
lcall
imul
icebp
and
lcall
aaa
js
or
into
and
or
out
mov
xchg
cmp
xchg
lds
mov
dec
cltd
js
dec
inc
in
pop
mov
shlb
mov
cltd
push
inc
insb
xchg
cmpsb
mov
pop
pop
das
lods
aad
and
jo
cmp
sub
push
push
xor
into
in
repz
movl
jno
dec
mov
or
jns
sub
jge
or
cmpsl
inc
xchg
cmp
pusha
or
cltd
pop
test
jg
lods
or
repz
jno
cltd
mov
or
les
push
daa
cli
cmp
cltd
dec
mov
push
inc
push
pushf
push
adc
fisttps
sbb
or
js
jnp
jl
stos
inc
ja
push
mov
mov
add
pop
pop
shlb
adc
fidivrs
cmp
inc
add
add
mov
cmpsb
in
ds
pop
xor
mov
ret
bnd
and
cltd
push
pop
test
dec
clc
xchg
movsl
push
mov
mov
inc
es
data16
dec
sub
sbb
cltd
outsl
jno
hlt
pop
and
adc
mov
jo
test
inc
xor
cwtl
ja
push
mov
cmpsl
pop
pop
loop
aam
sbb
mov
ljmp
cmp
xchg
adc
cltd
jl
test
and
pop
pop
stos
adc
mov
push
push
or
fsts
cltd
js
pop
pop
std
cltd
lock
fs
cmpsb
fistpl
dec
scas
in
mov
mov
lds
out
inc
pop
xor
dec
mov
xlat
rol
cmpsl
inc
sub
fld
divl
add
mov
loopne
fdivrs
cmpsl
push
mov
test
lahf
out
push
jl
loopne
jmp
mov
sbb
jmp
jl
popf
or
xchg
sbb
fneni(8087
cmpsb
mov
xchg
dec
mov
xlat
shrb
mov
push
add
es
nop
cltd
inc
mov
idivl
inc
pop
jbe
xor
or
ficomps
lcall
push
scas
aas
xor
cmp
test
mov
outsl
mov
lret
cmp
push
pop
add
xor
lock
cmpsb
and
call
cmc
adc
mov
cltd
mov
mov
mov
nop
mov
negl
fsubs
adc
cltd
jno
cmp
sub
stos
imul
push
add
sub
xor
jo
dec
sub
mov
cltd
pop
pop
loopne
mov
in
sbb
int3
pop
push
mov
jecxz
ds
fadds
dec
mov
push
popa
ja
enter
ss
pop
scas
cld
dec
inc
jbe
mov
std
fdiv
subl
cmc
add
mov
mov
fistps
lock
ffree
stc
lock
sub
out
mov
pop
fcompl
xchg
repnz
fisttpl
arpl
test
hlt
shlb
lahf
add
stc
cmpsb
mull
jecxz
xorb
jae
cld
xor
push
and
inc
in
jg
add
push
adc
jmp
jae
jp
adc
mov
add
or
fistl
fprem1
adc
stos
push
cmpb
push
idivb
imul
dec
jmp
lret
pop
shl
cmc
aas
stos
pop
adc
lahf
and
ret
xchg
inc
lds
dec
ja
xchg
mov
cmp
je
fidivl
xchg
jmp
adc
sbb
out
mov
push
cmp
mov
mov
aas
outsl
cmp
test
testb
call
mov
jg
in
cld
add
push
cmp
xchg
aas
jg
mov
sti
cltd
jmp
rcl
sub
mov
mov
subb
movsl
or
fildll
cmp
xor
je
ss
fdivr
mov
cmp
push
dec
push
push
stc
subb
sub
mov
or
std
sbb
leave
test
add
inc
stos
or
sub
lret
shr
dec
scas
sbb
outsl
adc
mov
lahf
addr16
test
adc
xorl
push
test
divl
sub
outsl
fwait
in
mov
xchg
enter
clc
in
jmp
sahf
fwait
mov
mov
jg
jne
outsl
mov
enter
jmp
xchg
popl
dec
arpl
cmp
out
add
pusha
popf
test
adc
iret
icebp
mov
test
pop
arpl
imul
xchg
mov
adc
data16
pop
lods
sbb
lahf
jg
jl
stos
hlt
mov
repnz
jg
sahf
cmp
scas
call
sub
scas
lock
and
repz
xor
dec
push
outsb
shr
dec
cwtl
mov
inc
fwait
xor
movsl
cs
inc
aaa
test
stos
push
pop
lahf
inc
cli
cmc
es
pop
mov
cmp
jb
arpl
clc
imul
outsl
ret
ret
sti
push
push
push
push
aam
movsl
adc
cwtl
int3
mov
rcrb
jle
lds
sbb
sbb
imul
lahf
pop
loop
imul
lock
in
mov
lea
sub
mov
jmp
repz
iret
inc
inc
xor
stos
sub
iret
inc
insb
imul
mov
dec
es
lea
mov
sbb
call
sub
loopne
loope
aas
mull
dec
stos
aas
les
lock
cmp
mov
and
jl
into
dec
jp
or
dec
cmp
xchg
dec
xor
pop
mov
test
jnp
fiadds
pop
jle
sbb
cwtl
lock
lret
jmp
sbbb
push
pushw
pop
mov
ja
add
rcl
sub
iret
mov
inc
pop
add
xor
inc
push
xchg
mov
or
ljmp
jb
mov
ja
mov
out
sub
mov
pushf
loopne
mov
call
nop
cmpsb
dec
adc
mov
cmpb
jmp
iret
mov
xor
dec
inc
sar
and
sbb
pop
mov
xor
out
sahf
cmp
xchg
jb
fwait
jnp
jne
mov
dec
jmp
stc
inc
sbb
sbb
mov
inc
jl
lcall
cmp
add
hlt
lock
ljmpw
imul
sub
lea
dec
cmp
adc
jb
xor
add
xor
lret
and
iret
fwait
movsl
stos
xchg
pop
clc
stos
scas
push
in
popa
das
mov
mov
pop
jae
fld
enter
mov
stos
mov
mov
fxch
aad
enter
pop
sbb
pushf
pop
not
mov
into
mov
cmp
movsl
pop
fisubrl
fstl
das
test
cltd
xchg
inc
cmpsb
or
popf
xchg
mov
mov
sbb
pusha
aaa
push
fadds
cltd
cmp
iret
pop
cltd
int3
imul
shrb
out
cltd
insb
test
cmp
pop
pop
aam
xor
cltd
cwtl
dec
mov
push
insl
insb
ds
cmp
mov
and
pusha
mov
cmp
sbb
shll
rcrb
into
mov
popf
xlat
mov
add
mov
std
cmp
subl
xchg
dec
adc
adc
rcr
jne
mov
jo
mov
push
or
lret
jno
test
lea
and
cltd
jle
lods
movsb
jne
fbld
repz
movb
xchg
repnz
xor
outsb
nop
cmpsb
in
out
jbe
jb
cltd
lock
push
mov
test
xlat
or
pop
cltd
push
clc
arpl
mov
jmp
mov
cltd
gs
pop
ficoml
stc
stos
frstor
add
cltd
adc
mov
imul
mov
aas
push
xor
or
cltd
js
xor
test
movsl
cmp
into
sub
cmp
fstpl
dec
cltd
sbb
shl
push
xchg
mov
in
sbb
filds
test
pop
cmpsb
xor
test
lret
sub
std
mov
dec
or
adc
mov
repnz
je
pop
cltd
in
xchg
imul
pusha
adc
mov
mov
fidivl
push
cmp
aaa
pop
test
test
jns
and
sub
pop
cmpsl
xor
mov
pop
sbb
stos
js
or
aam
cltd
lock
aaa
mov
and
scas
arpl
fsubl
and
adc
xchg
mov
xchg
sbb
fsubs
jae
jno
pop
and
movsl
shl
std
cltd
ffreep
lds
fiaddl
repnz
jle
into
enter
add
jge
scas
cmp
test
fld
jno
or
mov
inc
cltd
mov
addr16
pop
pop
pusha
jmp
movsb
shl
pop
movsl
lret
cs
jmp
adc
xchg
test
pop
push
mov
sbb
fwait
mov
mov
xchg
rcrl
fwait
cmp
sti
std
flds
js
or
mov
fcmovnb
cmp
xor
cltd
ss
or
scas
xchg
cwtl
cltd
pop
imul
and
jmp
xchg
mov
xchg
ss
adc
push
into
xchg
mov
cltd
fistl
adc
lret
cmpsl
xchg
inc
xchg
dec
rcrb
loopne
es
daa
pop
inc
lahf
cltd
std
pop
popa
push
ret
inc
movsl
lods
in
dec
adc
mov
enter
inc
xorl
jge
xor
test
push
pop
mov
jne
mov
ja
aaa
outsb
cli
les
dec
in
or
xchg
add
cltd
push
dec
pushf
cmpsb
pop
and
popf
pop
mov
cltd
jbe
cwtl
or
mov
mov
push
psrlq
adc
cmpsl
inc
sbbb
push
xchg
mov
in
nop
sbb
inc
xor
sarl
dec
sbb
fildll
fldl
test
and
hlt
inc
and
sub
cmp
mov
pop
cltd
xchg
jmp
sub
cltd
add
and
jo
jecxz
cltd
lods
bound
push
pop
push
fbstp
sbb
xlat
push
out
rcrb
lret
scas
int3
mov
sub
push
pop
and
scas
cltd
outsb
mov
inc
int3
cltd
mov
dec
xchg
mov
outsl
cmp
xchg
mov
xorb
insl
adc
xor
call
lea
xchg
mov
setne
cmpsl
jmp
fistl
pop
ret
rcrb
aam
imul
or
clc
cmp
sub
xchg
jne
xchg
out
fnstcw
dec
pop
cmp
cltd
cli
lret
mov
xchg
call
lock
cmc
mov
daa
jo
ds
fwait
out
xor
sbb
mov
loopne
lods
aaa
cltd
hlt
sbb
mov
mov
fidivrl
repnz
mov
lods
and
or
inc
iret
sbb
xchg
push
mov
cltd
roll
rolb
cltd
sbb
jg
pop
cmp
cltd
and
fists
mov
adc
cltd
ds
sub
mov
pop
inc
cltd
sub
scas
mov
popf
testl
jnp
and
data16
into
mov
xchg
mov
push
cmc
ret
das
jmp
dec
mov
insb
dec
rcrl
cltd
sub
lock
lea
jne
loopne
xchg
xchg
inc
ret
xor
test
enter
lret
jb
cmc
sub
in
sub
lret
ss
xorb
jmp
mov
cmpsb
das
or
lahf
aad
push
pop
out
inc
jo
add
push
stos
sub
iret
aam
lcall
xchg
shll
cmp
loope
ja
stos
not
out
sbb
lret
lcall
and
out
mov
sbbl
mov
lock
mov
test
cmp
mov
and
fimull
jo
mov
cmp
mov
dec
mov
cmp
xor
lods
es
push
das
xchg
js
cwtl
sbb
sbb
jg
mov
shr
shrb
cmp
jmp
les
insb
lcall
out
xor
imul
mov
popf
mov
fwait
inc
stos
and
movsb
mov
pusha
xor
jg
inc
fidivrs
mov
clc
push
shll
test
int
ja
pop
aaa
pop
xchg
sbb
adc
lds
cli
and
jmp
lret
jg
icebp
shlb
cmpsl
push
xchg
mov
jp
nop
jb
mov
aam
fs
aam
cmp
dec
dec
and
pop
and
inc
jl
aam
mov
rcl
stc
ja
sbbl
call
inc
icebp
or
jmp
dec
movsl
mov
inc
pushf
ds
jp
or
or
test
push
js
gs
mov
jmp
mov
jb
loopne
shlb
movsl
mov
and
push
rol
mov
sub
fwait
call
ret
in
dec
sbb
sbb
mov
dec
pop
and
frstor
dec
xor
pusha
lcall
inc
jle
mov
in
pop
sbb
jmp
lock
stos
cwtl
mov
dec
or
jae
gs
mov
dec
mov
or
xor
repz
push
inc
xchg
std
outsl
sub
or
sbb
sub
dec
shrb
sub
xchg
outsb
lock
movsl
lock
mov
inc
clc
lods
cmp
sti
jns
lock
pop
rclb
pop
adc
subb
sub
bswap
push
sbbl
fcomip
aas
jmp
iret
mov
push
sub
ret
pop
test
scas
popf
arpl
test
mov
jmp
sub
in
mov
nop
faddp
or
cs
add
shl
push
jp
pop
mov
jl
push
movsl
xorb
rolb
push
dec
das
fisubrl
sarl
daa
mov
cmp
mov
adc
mov
jne
lahf
stos
scas
mov
gs
xchg
sub
sbb
and
movsl
or
xor
hlt
pushf
rol
rclb
and
adcb
or
inc
das
xchg
arpl
pop
xor
cmpsl
lock
pop
push
xor
jae
je
stc
stos
pop
dec
xlat
ljmp
jmp
stc
sbb
xchg
lea
rorl
test
cmpsb
imul
lds
xchg
mov
test
sub
cmp
and
je
loopne
jmp
sbb
rcrb
or
mov
mov
scas
jmp
lds
or
pop
imul
mov
mov
enter
inc
cmp
jmp
cmp
shrb
incb
pop
push
mov
xchg
inc
js
or
mov
inc
loopne
push
in
sbb
popf
daa
push
pop
xchg
outsl
push
or
dec
mov
push
xor
decl
iret
push
jmp
int
xchg
movsl
or
adc
pusha
aam
jb
or
mov
pop
sbbl
jb
aas
dec
jae
cld
adc
push
sub
or
or
cmc
cmp
scas
loope,pn
aad
dec
cmp
lock
inc
dec
jge
inc
inc
pop
xchg
les
jmp
cli
out
cmc
cmp
pop
sbb
cmp
lods
mov
arpl
sbb
jmp
mov
inc
sub
mov
xchg
sbb
mov
sub
push
rclb
adc
mov
mov
add
rcll
test
popf
lods
mov
cmpsb
sbbl
sbb
sub
mov
mov
dec
mov
rcll
movsl
std
gs
imul
or
notb
inc
aas
xchg
stos
sub
pop
ret
lahf
inc
lea
xor
lea
shrb
test
fisttps
test
lahf
xor
imul
movsl
shl
add
xor
mov
jmp
shl
test
mov
lahf
imul
pop
inc
pop
jg
leave
sub
dec
adc
cmp
loopne
or
mull
les
push
arpl
lds
subb
add
nop
clc
lock
das
aaa
fisubs
inc
push
mov
cmpsl
push
scas
lods
mov
mov
or
pushf
repz
adc
xorl
jb
add
mov
les
jl
es
jmp
jo
rcr
and
xor
sbb
mov
mov
je
ja
pushf
jmp
jmp
stos
iret
jl
push
ror
mov
jns
lock
dec
xorl
dec
mov
or
ljmp
sub
push
pop
sahf
loop
add
cmp
mov
fbld
movsb
add
add
dec
mov
es
xchg
sub
jle
les
sti
jb
push
cmp
mov
fwait
pop
mov
mov
mov
shr
add
xchg
adc
roll
dec
jmp
jbe
mov
sbb
add
imul
fsub
rclb
pop
mov
or
int
xchg
jl
pop
scas
out
aam
and
lcall
pop
sbb
shlb
push
and
lock
mov
insl
push
movsl
add
xchg
and
xlat
mov
mov
shll
sub
jo
mov
jmp
cmp
mov
pusha
cwtl
lock
jp
mov
ljmp
jp
push
mov
xor
rorb
loopne
dec
sub
pop
js
lcall
iret
jmp
xchg
mov
jmp
sbb
sub
jmp
jne
loopne
pop
enter
push
xchg
fwait
sub
add
mov
jbe
mov
sub
imul
or
repz
jbe
adc
or
add
adc
or
outsb
dec
sub
into
sub
fidivrs
lea
ds
fnstenv
jmp
leave
sbb
xor
repnz
xchg
jle
mov
inc
push
test
popa
push
cmpsl
cmpl
jne
icebp
fisttps
xchg
hlt
aaa
or
push
xchg
shlb
cld
fildll
mov
sub
push
icebp
inc
sbb
and
add
loope
pop
mov
jle,pn
rcr
mov
jge
cmc
mov
pop
and
data16
inc
jmp
pop
pusha
stos
pop
cmpsl
lea
mov
stos
lret
loopne
sahf
pop
dec
push
pop
cmp
xor
fnstcw
stos
jae
mov
pusha
jns
das
test
add
rorb
out
mov
and
sbb
ds
inc
inc
lret
adc
jb
xor
and
mov
mov
ret
mov
jmp
ret
aam
and
lock
mov
mov
loope
fsubs
push
js
sub
out
mov
ror
stos
push
test
stos
es
dec
add
shrb
mov
jne
add
sbb
mov
lds
stos
lahf
add
in
cmp
mov
inc
add
loope
mov
lret
test
aaa
xor
mov
mov
imul
ret
movsl
sbb
push
in
mov
fistpll
xchg
roll
scas
xorb
lcall
jbe
lret
or
data16
jmp
int3
or
arpl
sbb
rorl
inc
cmp
mov
stos
push
and
loopne
push
stos
mov
push
outsl
sahf
inc
or
roll
loopne
push
stos
stos
fucomip
xor
dec
cmpsl
es
or
shll
notb
test
mov
mov
aas
mull
mov
xchg
cmp
movsl
or
or
sub
jno
pop
sub
inc
shrl
into
sbb
mov
cmc
insl
fdivrs
andb
mov
jne
mov
mov
ret
mov
stos
imul
aas
cmpsl
nop
jle
pop
bound
sbb
or
lock
stos
pop
into
inc
inc
push
jmp
dec
sahf
movsl
pop
aas
xchg
sbb
rorl
adc
dec
fisubl
data16
mov
in
and
mov
shl
jmp
lods
jae
add
orl
fsubl
insl
mov
lahf
jl
xchg
pop
jl
repz
and
sub
dec
mov
adc
cmpsl
push
lock
out
dec
nop
int
popf
mov
pop
jmp
pop
lods
xor
out
jnp
adc
cmpsl
fdivrp
push
shrl
jmp
cmp
inc
pop
insb
lods
mov
jno
cmpsb
xchg
lret
stos
add
and
pop
xchg
std
adc
lea
js
cmp
lods
xlat
call
mov
cvtps2pd
add
mov
sbb
mov
mov
inc
outsb
imul
lea
sbb
es
jbe
subl
or
incb
lret
filds
in
cwtl
inc
jge
dec
call
adc
cmp
push
imul
pop
mov
mov
jmp
jl
adc
cmp
sbb
push
sub
mov
xor
xchg
dec
jbe
and
mov
fwait
mov
loopne
imul
ss
xor
or
pop
pop
lock
push
jg
pusha
fbstp
sub
and
or
and
mov
jne
loope
add
xchg
pop
lods
sar
out
mov
jne
loopne
mov
lahf
push
jecxz
orl
xor
pop
jne
or
and
cmpl
imul
outsl
pop
rol
sbb
sub
jmp
xchg
imul
aas
outsl
or
pop
push
das
dec
mov
stc
inc
pop
cltd
and
adc
xchg
jnp
pop
movsb
pop
ret
data16
mov
negb
addr16
or
push
jbe
lahf
push
adc
and
lods
insb
jg
int
daa
sub
jle
sahf
inc
cld
mov
xchg
push
and
jge
inc
sarb
dec
cltd
mov
mov
arpl
sbb
mov
mov
test
push
into
iret
dec
xor
jmp
or
icebp
lgs
xchg
mov
es
jbe
xchg
sbb
in
sti
pop
sbb
adc
sbb
shl
mov
les
lock
cwtl
out
dec
mov
sub
inc
lcall
xlat
bound
jge
dec
adc
mov
mov
dec
roll
mov
inc
shl
enter
gs
dec
insl
cmp
adc
jg
mov
pop
aas
aam
adc
mov
pop
mov
inc
lock
cwtl
test
or
xchg
stc
sarl
pop
jae
enter
mov
mov
push
xchg
stos
add
leave
jg
rcrb
mov
dec
xor
cwtl
les
lea
dec
int
hlt
cmp
and
inc
test
cmp
adc
mov
jmp
sbb
aaa
test
xor
xchg
aaa
lods
jmp
jno
icebp
idivl
mov
int3
and
and
cmpsl
jmp
mov
aaa
les
mov
jg
icebp
mov
lret
mov
xor
fsts
sbb
jl
xorl
insb
insl
xchg
sub
inc
jl
pop
or
jb
sbb
sbb
stos
mov
xchg
mov
ja
enter
push
add
mov
dec
xchg
enter
mov
sbbl
stos
and
mov
cmpsb
push
in
in
sub
push
js
fdiv
call
fidivs
daa
jo
mov
inc
sub
and
xchg
out
stos
adc
fnsave
popf
jp
leave
sub
xchg
mov
adc
jmp
cmp
cmpsb
mov
hlt
insl
dec
and
xchg
sbb
jmp
fcmovnbe
divb
or
and
daa
or
mov
insb
loopne
mov
lret
nop
mov
pop
xchg
bound
pushf
shlb
loope
cmp
jmp
jbe
fisubrl
sahf
inc
cwtl
mov
mov
push
sub
icebp
js
adc
in
pop
mov
mov
movsl
jmp
mov
sarb
mov
jmp
into
insb
test
repz
cmp
ja
sbb
adc
push
jl
mov
jmp
lock
mov
pop
in
inc
fnstenv
into
adc
lret
dec
add
arpl
sub
scas
sbb
popa
pop
stos
cmp
fadds
subl
ret
fwait
sarl
cltd
jmp
pusha
mov
jb
dec
xor
je
pop
inc
mov
cmp
cmp
jb
mov
icebp
jae
mov
test
and
pop
cmp
push
push
push
push
inc
sub
mov
and
popa
cmp
jo
mov
mov
pushf
cltd
ss
and
jmp
xor
push
adc
sbb
sti
or
dec
orb
xchg
sub
push
aam
stos
lds
dec
jae
pop
jmp
xor
xor
adc
sti
push
jg
sti
xchg
arpl
pop
inc
push
xchg
inc
xor
jg
jecxz
push
les
scas
fs
fnstcw
add
mov
enter
mov
mov
mov
ss
popa
and
and
icebp
push
mov
out
sub
jnp
add
mov
adc
xor
loopne
insb
and
or
test
mov
inc
xchg
fstps
xchg
xor
inc
leave
daa
pop
cmp
loope
xor
fdivl
cmp
mov
adc
sub
jge
lds
enter
popf
xor
and
xchg
dec
shlb
mov
pop
lds
jbe
iret
mov
mov
movsb
sbb
pushf
inc
jmp
or
cs
bound
sbb
sbb
mov
cmp
sti
mov
les
lods
xchg
movsl
loopne
and
ljmp
ja
jmp
xor
ss
lret
mov
xlat
mov
cmpsb
fdivl
xor
mov
cmpsl
inc
adc
jl
call
nop
outsb
and
xchg
adc
or
cmp
sub
adc
test
or
pusha
jno
repz
inc
sbb
std
jmp
icebp
push
pop
scas
jno
inc
mov
mov
jg
cmpsb
in
cmp
cmp
adc
int3
pop
jns
jmp
fsubrs
pop
xlat
mov
push
js
dec
std
test
jle
xchg
dec
jmp
ret
jmp
cltd
into
leave
push
ficoml
leave
jns
movsl
push
push
jmp
xchg
fildll
fsubl
jecxz
or
outsb
xchg
dec
sub
arpl
sbb
pop
pop
in
push
cmc
xor
sub
loope
cmp
lock
jmp
adc
jo
outsl
dec
inc
push
mov
mov
out
push
mov
and
call
cs
lcall
jns
jo
daa
push
enter
dec
cmp
xor
lock
aaa
loope
sbb
jmp
push
cld
data16
iret
cmp
dec
push
xchg
lret
lods
mov
lock
jge
nop
in
cwtl
jno
sub
and
jl
jg
insb
test
divl
jne
xchg
movsl
lock
loopne
inc
and
and
mov
and
mov
mov
inc
dec
cmpsb
xchg
stos
stos
inc
xchg
pop
enter
push
push
or
addb
js
lret
sub
stos
mov
int3
or
fildll
jmp
push
xor
mov
adc
mov
lcall
jnp
mov
xor
inc
jmp
aas
mov
push
sbbb
movsl
loopne
test
arpl
mov
xor
sub
fs
push
jae
fisubrl
loopne
ret
cltd
sbb
pusha
and
adc
int3
int
dec
divb
test
cmp
cmpb
mov
insb
mov
and
les
pop
hlt
inc
jge
push
orl
in
inc
pop
sbbl
push
lods
into
push
mov
js
fnstcw
in
and
scas
cli
and
stos
insb
popf
into
sbb
mov
movsl
pop
notl
xor
cmp
movsl
test
jmp
in
inc
cli
xchg
pop
push
stos
shrl
or
cmc
or
clc
inc
sub
int3
mov
push
lret
inc
gs
movsl
lock
into
jp
xlat
inc
mov
ret
shl
fiadds
inc
shrb
insb
js
mov
loopne
xor
pop
push
popf
jp
xchg
loope
jge
movsb
adc
sbb
lahf
cmp
push
pop
mov
adc
dec
pop
pop
push
lahf
cmpsb
jmp
inc
movsb
test
in
and
push
lods
jne
es
inc
sub
in
and
jge
jbe
push
and
cltd
arpl
adc
jmpw
fsubrl
mov
push
dec
andl
mov
sub
xor
mov
cmp
fsubrl
stos
add
pop
dec
xor
or
cmp
mov
lods
sub
sbb
scas
jo
and
inc
outsb
or
add
inc
popa
ljmp
dec
and
fs
pop
into
jmp
addr16
xor
inc
add
sub
dec
lret
adc
or
lea
jne
mov
loop
mov
push
inc
sbb
mov
inc
jae
mov
pop
int3
repnz
inc
sub
iret
xchg
lea
cmpsb
mov
add
mov
cld
sbb
mov
mov
add
jl
dec
and
bound
testl
fisubrs
sub
jecxz
fs
or
movsb
and
push
ljmp
repz
adc
stc
jno
sarb
movb
inc
fistps
cmp
mov
fcmovnb
push
pop
xor
hlt
das
ss
and
mov
sahf
test
loopne
hlt
icebp
cmc
cmpsb
pop
pop
cmp
mov
dec
mov
stc
lret
jmp
sub
daa
stos
xchg
cmp
sbb
sbb
int
int3
push
rcrb
insb
push
out
inc
jno
test
int3
mov
arpl
lcall
repz
scas
cmp
imul
lods
pop
and
loope
push
mov
aas
sub
call
jae
pop
xchg
scas
xchg
push
xor
test
xor
sbb
pop
lock
rcll
inc
lea
sub
arpl
pop
inc
arpl
mov
mov
add
cli
rolb
out
xor
aam
xchg
mov
mov
ss
lea
mull
xchg
jns
pop
mov
mov
inc
gs
out
jmp
and
mov
imul
aaa
mov
xor
pusha
fidivs
icebp
fldenv
jne
cmc
mov
mov
sub
in
jns
fsts
rep
push
lock
loopne
jae
repnz
add
je
mov
inc
mov
inc
add
lds
loopne
or
sub
mov
cmpsl
aas
push
bound
push
dec
mov
dec
fcomps
pop
or
int3
push
pop
inc
nop
int3
jno
sbb
inc
dec
dec
cmp
dec
pop
pushf
jne
push
mov
stos
cmp
movsl
addr16
rorb
pop
adc
mov
mov
jmp
push
pop
aam
lcall
inc
jnp
add
dec
stos
add
dec
inc
mov
cmpsl
mov
lods
fnsave
test
dec
imul
sbb
sub
scas
xor
mov
mov
adc
sbb
cmp
ss
icebp
mov
icebp
dec
lds
insb
jns
mov
adc
adc
fildll
push
int
sub
cmpsb
mov
jns
lock
adc
test
mov
adc
outsl
int
inc
ja
cmc
xor
add
mov
push
movsl
pusha
ss
jmp
mov
popa
inc
jmp
loopne
loopne
or
out
jo
mov
lahf
mov
pop
cmp
cmc
icebp
ljmp
inc
lock
in
sub
loopne
int
cmp
jbe
stos
cmp
jb
xlat
xor
dec
push
pop
rcl
pop
rorl
sub
push
add
test
inc
sahf
push
push
sbb
mov
and
cmp
lods
adcl
jbe
mov
in
sub
sbb
sbb
jp
add
inc
mov
leave
and
jb
mov
mov
out
dec
mov
inc
xchg
sub
scas
dec
xchg
adc
xchg
mov
jo
push
ret
mov
push
xor
fsubrp
movsl
stos
adc
adc
mov
cmp
mov
les
sub
loop
pop
rclb
out
lret
xor
sub
inc
pop
dec
cmc
sbb
divb
dec
loopne
xor
inc
cmp
icebp
dec
popf
popf
cld
les
and
adc
icebp
sarl
lahf
dec
dec
daa
push
mov
xchg
add
int
jbe
mov
fldcw
aam
mov
pop
push
cmp
es
add
jo
jmp
mov
jmp
loopne
fimull
inc
in
jmp
hlt
lock
xchg
mov
outsl
arpl
lret
or
cltd
lcall
pop
sub
leave
call
xlat
sar
stc
mov
pusha
cmpsb
jecxz
pushf
dec
shr
pushf
dec
ret
aad
mov
fldpi
cmp
dec
pop
and
aaa
pop
cltd
rcl
push
pop
sbb
sbb
push
and
cwtl
add
xor
iret
and
cmpl
inc
push
in
ficomps
mov
add
mov
aam
cmc
adc
xchg
add
jmp
dec
pop
sbb
adc
loope
mov
jae
adc
xor
stos
shll
push
adc
std
jp
cld
popa
dec
pop
cmp
mov
mov
mov
pop
xor
jbe
push
mov
or
and
pop
mov
jmp
je
mov
int3
and
mov
out
int
lock
arpl
xchg
int3
pop
hlt
rcrb
bound
jmp
mov
push
outsb
xchg
jmp
call
xchg
js
scas
enter
dec
jmp
mov
xchg
movsb
xor
jne
add
jge
in
add
push
cmpsb
adc
inc
dec
je
fisubrs
fildll
adc
jb
xchg
arpl
loopne
jmp
or
test
and
stos
mov
mov
stos
cld
fbld
hlt
pop
pushf
into
outsl
or
cmp
bound
cmpsl
stos
testl
sti
sub
mov
cmc
mov
out
arpl
mov
imul
loopne
scas
inc
adc
and
push
sbb
jmp
int3
addb
test
push
xchg
jb
xor
lock
stc
sbb
rcrb
add
inc
xlat
aaa
push
bound
mov
loop
pop
and
cmp
inc
shrl
mov
push
gs
scas
xor
or
jmp
stos
cmp
fidivrs
ret
dec
add
sbb
js
int3
jb
arpl
mov
and
push
mov
adc
mov
inc
lea
sbb
jl
lret
push
cmp
inc
adc
fldcw
icebp
pop
outsb
mov
jmp
mov
lods
mov
stc
loopne
sbb
enter
pop
sbb
mov
push
sti
pushl
mov
call
mov
test
mov
xchg
mov
pushf
loopne
xchg
xchg
dec
mov
mov
test
xchg
sbb
push
xchg
cmp
push
push
sub
jge
dec
out
or
stos
sbb
shl
pop
out
aaa
mov
fldt
lods
cmpsl
mov
aaa
std
gs
xchg
lock
jmp
add
jmp
out
fwait
movsl
lcall
xchg
push
aaa
mov
arpl
mov
stos
pop
cmpsl
mov
push
sub
test
xchg
inc
inc
jle
sub
xor
sub
or
jmp
loopne
dec
sbb
sbb
sub
mov
sub
inc
jo
and
scas
lcall
lahf
and
and
mov
inc
pop
dec
popf
jns
sub
lods
push
lds
popf
mov
mov
cld
mov
jge
je
jge
push
jle
insl
jecxz
roll
xchg
push
filds
xchg
inc
in
sub
dec
push
and
pop
jmp
ja
ljmp
adc
icebp
or
jne
sbb
fwait
pop
test
fstl
mov
mov
imul
pop
cs
aas
loope
mov
rcrb
jns
push
in
dec
test
cmp
xchg
fsubr
pop
mov
dec
inc
and
cmp
and
mov
xor
out
xor
jnp
into
dec
or
push
ret
cltd
cmpb
sub
mov
cmp
and
cmpsl
push
sahf
xor
sbb
jp
int3
call
negl
mov
popf
cltd
cmp
into
insl
push
data16
jno
dec
in
fists
inc
sarb
stos
loopne
cwtd
sbb
cltd
jge
push
testb
fwait
mov
sub
mov
cltd
outsb
loopne
mov
mov
mov
popa
cmp
jg
call
test
xor
push
stc
lcall
addb
lret
scas
repnz
or
cmp
popf
cmp
enter
sbb
ds
inc
ja
out
or
sbb
rcrl
loope
fisubl
hlt
sahf
cltd
dec
or
mov
lods
xlat
pushf
psubw
and
out
fwait
mov
mov
cltd
mov
cmp
cmpsl
lods
push
xchg
or
inc
sbbb
fbstp
lds
cmpsl
cmp
add
out
stos
xor
sub
popa
fbld
fstps
mov
cmp
cltd
or
ret
syscall
repz
or
out
sti
pop
sbb
or
rorb
and
sub
pop
cltd
sub
loope
sub
int3
or
loopne
pop
mov
dec
mov
imull
cmp
fwait
into
daa
loopne
fstps
xchg
cltd
sub
and
les
jge
daa
lret
cltd
adc
test
sbb
cltd
and
addr16
xor
or
lea
jge
mov
push
mov
movsl
fs
or
sbb
lds
int3
adc
jno
xchg
dec
cltd
cld
sbb
popf
lcall
push
add
incl
adc
movsl
mov
mov
xor
xchg
add
daa
mov
fwait
stos
cltd
sbb
jl
andb
std
cltd
in
mov
cltd
adc
imul
jbe
sbb
outsl
dec
cltd
jmp
jno
push
cltd
hlt
mov
outsb
imull
and
pop
fistpll
fstpl
mov
clc
pop
aad
mov
cltd
or
push
js
xchg
push
push
sbb
outsb
sbb
jno
sub
fnstcw
lcall
pop
xorb
and
cltd
adc
hlt
cmp
pusha
lods
sub
sbbl
out
or
cld
loopne
lea
shll
cs
nop
cli
imul
xchg
insb
cltd
adc
orb
pop
pop
loop
and
inc
sub
jno
inc
xor
int
arpl
push
cltd
and
jo
xchg
cltd
iret
aad
xor
fsts
shl
ds
dec
subps
push
cli
mov
cltd
mov
xchg
mov
sbb
and
lods
mov
out
and
pop
fistps
xor
mov
cltd
jle
jb
jecxz
ds
cltd
cs
mov
aas
jno
rcrb
fimull
scas
pop
jecxz
daa
jo
push
pop
and
fwait
cmp
out
mov
pop
xchg
je
cltd
mov
testb
pop
bound
pop
add
popf
cltd
dec
pop
and
rol
in
cltd
pop
sahf
dec
dec
aas
inc
lds
mov
loopne
lahf
std
sub
cltd
xchg
push
repnz
sarl
xlat
jl
cltd
adc
adc
out
subl
cmpsl
test
jmp
inc
mov
std
das
push
add
xchg
cltd
jp
and
daa
adc
arpl
pop
int
cmpsl
mov
sub
or
mov
xchg
cltd
std
fs
out
scas
sbb
xor
pop
or
cltd
sbb
jecxz
lret
inc
jns
sub
adc
sub
lret
cmp
and
leave
jb
cltd
xchg
fstpt
mov
sahf
inc
mov
loope
push
mov
and
adc
inc
pop
mov
sti
push
inc
push
mov
mov
and
mov
xchg
xor
and
xchg
cli
fcmovb
and
sti
mov
cltd
mov
cs
enter
stos
test
maxps
cltd
jge
movsl
inc
fidivrs
xor
test
xor
adc
sbb
or
lock
lret
mov
cmc
lds
sub
add
inc
lods
jns
fisubrs
cmpsl
or
add
adc
inc
or
jns
cmpsb
sbb
and
add
pop
mov
inc
cltd
xor
push
xchg
insb
pusha
cltd
mov
mov
fwait
roll
mov
mov
cltd
fdecstp
insl
jle
test
sbb
and
cmp
sbbb
out
daa
iret
pop
add
aad
or
mov
or
test
sub
cltd
cmc
pop
push
dec
sarl
lods
rcrb
mov
decl
sbb
mov
stos
pushf
mov
cltd
iret
repnz
fmuls
xor
add
in
mov
sub
or
mov
fxch
xchg
cltd
cmpsl
mov
ficomps
sti
push
scas
in
mulb
test
icebp
lcall
cltd
in
daa
dec
cmp
fs
movsl
push
inc
lahf
pushf
aad
cmpsl
mov
cltd
nop
dec
pop
and
test
xlat
and
cli
cltd
add
sbb
push
into
lods
push
mov
xor
xlat
and
lret
cltd
popl
sbb
inc
hlt
aaa
jne
lcall
xchg
xchg
shlb
cmp
cltd
push
ret
sub
stos
lods
mov
adc
add
mov
fldcw
xorl
xor
sub
cltd
or
outsb
cld
das
pop
xchg
in
cltd
jne
xchg
cltd
xor
mov
ror
imul
push
pop
cltd
je
icebp
jp
fisubrl
sbb
rolb
repnz
lahf
sbb
xor
lret
in
jmp
daa
shll
pop
inc
pmaxsw
aad
jecxz
shlb
pushf
sbb
frstor
shll
paddusw
pop
ja
cltd
insb
jne
lret
hlt
xor
cmpsl
test
ret
add
loopne
push
mov
pop
mov
iret
jae
call
jae
scas
mov
cltd
mov
inc
xor
scas
adc
mov
cltd
dec
push
daa
jmp
cltd
into
leave
sbb
imul
scas
loopne
mov
std
xchg
cltd
xor
data16
cltd
xchg
je
cmp
loop
jne
aaa
mov
xchg
leave
sub
int
cmpsl
data16
fs
std
sbbb
dec
sti
xor
dec
push
cltd
pop
add
mov
loop
fiadds
xor
jp
and
mov
or
add
addr16
mov
or
cmpsl
mov
pop
jo
cwtl
sbb
out
je
insl
test
mov
cltd
mov
cmpsb
mov
mov
frstor
cmp
push
mov
sbb
add
push
mov
test
xchg
xor
es
dec
lock
cltd
daa
in
aam
push
fwait
dec
jecxz
dec
cltd
add
rol
test
sbbb
cwtl
daa
mov
popa
mov
cltd
xor
push
add
movsb
cmpsb
pop
sub
sbb
cmc
mov
mov
aaa
cltd
adc
mov
out
mov
inc
ja
insl
and
mov
scas
xchg
and
inc
jecxz
inc
pusha
adc
mov
jbe
inc
jge
cld
aam
mov
je
mov
adc
insl
jnp
lods
fcompl
mov
icebp
mov
enter
fdivs
inc
dec
adc
in
enter
dec
cmp
add
iret
lds
lods
inc
lds
cltd
xchg
cmp
daa
stos
fucomip
cmp
adc
mov
adc
sub
ljmp
jle
pop
int3
incl
push
cmp
jecxz
repnz
popf
imul
dec
fsub
push
ficoms
mov
daa
or
push
jo
ss
clc
outsb
add
cmp
push
mov
popa
ret
scas
popf
inc
stc
stc
mov
dec
icebp
cmpsb
pushw
jg
cmp
jecxz
jp
ffree
sub
dec
mov
xor
cli
or
fwait
xor
mov
mov
je
mov
ret
mov
fwait
into
test
inc
faddp
pop
test
cs
pop
sub
pop
mov
hlt
mov
cmpsb
mov
cmc
movzbl
outsb
cmp
pop
xor
add
lahf
ret
dec
jmp
jae
jmp
mov
shl
xchg
jo
adc
arpl
lods
xchg
xor
pop
mov
icebp
adc
sbb
mov
cmpb
pop
adc
cmc
in
out
fs
jnp
mov
cmpsl
pusha
repnz
push
mov
fiadds
sbb
and
arpl
jg
popa
xchg
sbb
jno
dec
roll
adc
orb
ja
mov
sbb
fdivs
cmp
xchg
push
aad
sbb
xchg
rcrb
mov
mov
ss
adc
scas
cmc
ss
jmp
sbb
mov
xor
sbb
add
outsb
std
inc
cltd
popf
push
lret
inc
sub
lret
int
lcall
jnp
imul
mov
int3
dec
int
arpl
pop
dec
and
lcall
sbb
pop
xchg
fistpl
les
mov
repz
and
pop
popf
cltd
dec
push
sub
cmp
inc
xor
cltd
mov
clc
aas
test
fwait
add
inc
xorl
xlat
sbb
mov
sbb
scas
push
xor
jb
cld
call
or
fcompl
pusha
and
and
and
rorb
lods
imul
jecxz
xchg
inc
xor
add
cltd
imul
pop
cld
fsubrl
jns
dec
push
ficomps
test
xor
pop
adc
sbb
shlb
push
cltd
aaa
jl
test
cltd
pop
jne
nop
jge
leave
stc
cltd
mov
sbb
mov
push
xor
mov
outsb
xor
testb
in
add
andl
hlt
lret
cmpsl
test
loop
push
aam
jnp
and
mov
cmp
pusha
xchg
pand
dec
andl
addb
sar
cltd
int
js
sti
jl
push
cltd
mov
incb
push
pop
cltd
and
pop
mov
int3
arpl
sbb
mov
out
sub
push
mov
loope
mul
cs
cltd
lret
fiadds
out
cltd
inc
fs
jge
test
nop
cltd
jbe
stos
jmp
cltd
push
clc
fsubp
mov
xchg
dec
cltd
adc
mov
cltd
jmp
lret
cltd
and
pop
subb
cltd
xor
mov
push
mov
fmuls
stos
xchg
fwait
mov
xor
das
push
cltd
mov
mov
dec
cltd
fincstp
outsl
mov
cli
cmp
sti
cltd
cmc
ljmp
cltd
int3
and
add
cltd
cmp
lret
sbb
mov
sbb
les
add
cltd
jmp
out
or
ss
fnstcw
mov
xchg
ficomps
pop
sub
fcoml
pop
ja
leave
add
shrb
aaa
loope
lcall
ret
jmp
jb
adc
sub
dec
jae
xchg
fistpl
enter
pop
aas
pop
in
and
jmp
adc
push
movsl
xor
adc
pop
popf
sahf
push
cmp
pop
mov
insl
popa
add
mov
loop
cltd
call
mov
in
mov
jns
jge
sbb
sbb
xor
jle
sub
aam
sbb
mov
cltd
sbb
jb
sbb
jecxz
sbb
mov
imul
mov
or
fsubl
push
dec
mov
aam
loop
stos
pop
mov
mov
cltd
subb
daa
scas
shlb
fcoml
push
mov
cltd
inc
rol
jb
or
js
pop
pop
dec
and
xchg
cltd
sbb
ljmp
orb
and
aas
and
xor
inc
clc
or
pusha
sbbb
mov
lahf
cltd
jns
push
jecxz
jb
cmpsl
xor
and
push
adc
xchg
add
push
dec
cld
sbb
lret
aad
shrd
mov
xor
sub
xchg
repnz
out
inc
adc
arpl
lds
inc
mov
fcoms
mov
mov
mov
or
insb
popa
push
mov
mov
mov
aam
fcmovb
add
divb
fwait
pop
xor
adc
cmpsb
stos
mov
push
hlt
lcall
or
jmp
insb
je
cltd
mov
and
mov
fwait
adc
outsb
mov
mov
rcll
jne
int3
mov
sbb
inc
sub
mov
sbb
fstpl
push
pushf
test
cmp
xchg
lret
jmp
adc
jbe
and
aam
cltd
xor
dec
jmp
add
xchg
sbb
sbb
inc
cmp
idivb
jbe
loope
xor
sbb
das
xchg
adc
scas
sti
xchg
in
add
cld
loopne
push
cltd
xchg
out
dec
pop
xchg
negl
and
adc
add
mov
mov
inc
loopne
mov
mov
aam
inc
cltd
icebp
in
mov
mov
pop
out
adc
sub
mov
in
test
inc
push
dec
push
mov
cltd
es
push
xchg
cmp
out
adc
mov
mov
cmpsl
add
mov
mov
fimuls
xchg
mov
and
inc
and
mov
xorb
cltd
loopne
in
dec
dec
mov
gs
jp
mov
in
scas
and
mov
mov
aad
movsl
inc
test
arpl
cmpsb
mov
dec
adc
mov
lods
jmp
adc
add
add
int3
fildll
adc
lock
fwait
inc
imul
sti
inc
mov
cltd
dec
ljmp
jne
jb
xchg
xor
cltd
push
cmp
cltd
pop
pop
ret
adc
icebp
dec
sub
ja
cmpsb
das
cltd
les
decb
test
and
jae
jle
or
addr16
adc
sbb
cltd
push
pop
push
cltd
call
movsl
xchg
addr16
adc
adc
call
pop
cmp
leave
shrl
inc
fidivrl
cltd
cmp
lods
and
mov
sbb
and
test
sbb
jnp
ret
ficomps
lret
ret
scas
push
sti
cmc
xor
jns
pushf
xor
scas
sub
fisubl
pop
out
mov
cltd
pop
es
cmpb
movsl
cwtl
ja
fidivrl
ds
mov
aas
popf
test
and
loopne
dec
cltd
shll
push
xlat
cltd
cmpsl
xchg
fcomps
jl
cmp
addl
orb
add
mov
lcall
pop
mov
fwait
dec
inc
hlt
jg
xchg
scas
fsub
arpl
mov
ds
test
pop
test
cltd
jmp
sub
sub
aas
cmpsl
repnz
jns
out
cmp
xchg
loopne,pn
cltd
mov
pop
sub
jns
push
dec
mov
mulb
jnp
cltd
out
ficoms
addr16
cltd
inc
pop
jae
mov
mov
movsl
mov
loopne
ror
icebp
push
cltd
test
jg
adc
adcl
fstpt
leave
pusha
imulb
addr16
cltd
cwtl
mov
push
nop
dec
fwait
repnz
sub
cmpsb
loopne
sub
cltd
xor
jl
call
mov
enter
fdivs
cmp
cmpsl
ljmp
jl
jae
cmpsl
jecxz
mov
rclb
add
adc
lcall
leave
sahf
mov
and
fwait
or
xor
push
insb
jmp
icebp
dec
xchg
movsl
ljmp
and
push
jmp
xchg
popa
jo
insl
push
pop
lds
lahf
xchg
enter
inc
sbb
mov
or
jb
pop
jmp
inc
loope
xchg
les
std
xor
aas
sbb
xchg
loopne
stos
cs
outsl
popf
lahf
cli
test
and
not
outsl
popf
cmp
bound
push
mov
fwait
icebp
jbe
and
mov
mov
test
cmp
xor
jg
fdivl
add
pop
xchg
cmp
addr16
icebp
add
lret
xor
lock
sbb
mov
fcoms
add
cmp
add
mov
cwtl
das
sub
loope
lahf
and
adcb
mov
sub
xchg
loope
cmp
sbb
fstpt
lea
nop
push
stos
cmpsb
jmp
into
fnsave
push
out
inc
mov
jg
ret
mov
cwtl
imul
adc
rorb
mov
cld
adc
mov
add
addl
push
jne
mov
arpl
mov
sarb
inc
sti
cmp
stc
adc
rcrb
lods
cmpsb
cmc
and
or
mov
adc
pop
movsb
lea
scas
xor
jmp
mov
loop
in
imul
jl
mov
jle
jp
mov
enter
jmp
inc
in
push
mov
retw
push
subb
test
cltd
mov
xchg
lods
out
jge
nop
lods
and
cltd
inc
dec
or
mov
mov
pop
jle
cltd
inc
cmpb
mov
lcall
jl
pop
cltd
xchg
in
outsl
enter
test
xor
cltd
mov
incl
xchg
dec
lret
adc
movsb
jl
sub
xchg
xor
fiaddl
cmpsb
jo
and
pop
shlb
xchg
jmp
sbb
cmp
adc
stc
pop
scas
mov
outsb
lret
clc
insl
xchg
ret
mov
mov
adcb
imul
mov
hlt
adcl
sbb
jmp
mov
lock
sub
sbb
inc
cltd
fdivp
sbb
xor
dec
mov
out
in
jl
push
xchg
xchg
cltd
mov
cmp
pop
mov
cltd
add
xor
sbb
jnp
popa
sub
xchg
loopne
sahf
xlat
xor
lds
sub
pop
shll
xor
adcl
lods
fimull
cltd
mov
loopne
leave
sbb
push
adc
cltd
inc
loope
testb
sbb
inc
repnz
push
xchg
sbb
fcomps
addr16
cli
jge
ljmp
repnz
cmp
jnp
jp
dec
hlt
or
cmp
outsb
ret
inc
popf
nop
mov
sbb
add
leave
testl
push
jnp
jp
add
icebp
aam
mov
push
jg
pop
int
cltd
out
adc
mov
into
outsl
fdivp
ret
push
icebp
mov
mov
ss
xor
cmp
and
mov
xchg
or
mov
xchg
mov
sub
outsl
std
jne
sub
les
push
out
mov
stc
loope
fwait
bound
ret
xlat
cltd
and
int
adc
xchg
movsl
push
jae
aas
sbb
cmp
pop
sbb
in
cli
lods
push
xor
jl
xchg
sbb
jnp
push
fisubrs
or
push
dec
push
ret
xchg
cwtl
cltd
cmp
fnsave
cltd
je
add
cmpsl
flds
xor
dec
cltd
xchg
inc
adc
ljmp
jb
xchg
adc
inc
mov
cltd
mov
cltd
jo
jmp
stos
cltd
outsb
xchg
xchg
and
adc
jmp
rorb
push
movsb
adc
insb
mov
mov
std
xor
notl
jge
dec
jle
push
adc
push
cmpb
inc
cltd
jl
sbb
cltd
xchg
or
pop
cltd
xchg
and
add
pop
outsl
cltd
mov
jecxz
inc
cltd
pop
xor
imul
outsl
mov
add
stos
cltd
mov
inc
jle
into
push
mov
ja
int3
mov
clc
ret
dec
xchg
lret
jns
xor
dec
dec
outsl
lea
cmpsl
jns
loop
out
xor
mov
shlb
push
enter
add
xchg
sbb
int3
ljmp
in
pop
cltd
mov
sub
scas
dec
mov
inc
xchg
fisubl
cmpsl
or
pusha
xorl
mov
sbb
push
cmpsb
cltd
lahf
xchg
pushf
mov
arpl
pop
mov
or
cltd
dec
inc
mov
cwtl
pop
stos
xorl
cmp
pop
cmp
mov
dec
fwait
sub
cli
xor
cltd
dec
movsl
fidivrs
imul
test
push
out
cltd
sahf
adc
push
addb
inc
jmp
ss
and
aas
in
mov
je
adc
and
xchg
sub
mov
push
xlat
push
inc
movsl
outsl
and
aaa
sbb
inc
xor
sub
cmpsl
jmp
test
stos
mov
mov
jo
cmp
ss
mov
xchg
mov
enter
lahf
scas
imull
mov
pop
cltd
mov
or
xor
fs
stc
cltd
or
ds
cwtl
popf
fwait
jb
into
push
sbb
nop
std
cltd
je
adc
data16
lea
mov
leave
xor
fsubl
sbb
outsb
cltd
decb
pushf
ljmp
inc
cld
jmp
pop
or
and
fabs
push
cltd
adc
loopne
push
adc
fldl
lret
cltd
pushf
ljmp
or
stc
dec
adc
mov
dec
jmp
faddp
pop
mov
xchg
jl
fwait
mov
xor
loope
jl
not
dec
int
cmp
jnp
dec
lea
stos
xchg
cli
loopne
inc
jbe
fstpl
test
push
mov
shlb
cwtl
shr
mov
mov
sbb
mov
cmp
mov
cli
aam
mov
mov
rolb
cmp
shll
xor
sub
inc
lea
stos
mov
xchg
push
push
shlb
mov
sahf
mov
enter
int3
ds
mov
cmp
mov
jo
dec
iret
daa
fsubl
fcoms
xor
lret
popf
je
jb
dec
xor
mov
fimuls
std
call
lods
adc
addr16
punpckhdq
neg
fmull
ret
cmp
jno
mov
jmp
outsl
mov
shll
bound
jnp
test
shrl
imul
adc
test
jmp
aaa
cmpsl
insb
les
xchg
sbb
loope
add
lods
loopne
xchg
pushf
pop
jmp
xchg
mov
and
divb
aam
stos
xorb
enter
iret
pop
rorl
in
stc
xor
mov
mov
jmp
loopne
xchg
xchg
xor
xor
pusha
push
and
dec
jmp
call
sbbl
sub
inc
cmpsl
stos
stos
shr
sbb
inc
insl
mov
sub
fisttpl
dec
sub
add
ffree
movsl
push
adc
pop
arpl
mov
mov
icebp
dec
dec
and
jmp
aam
movsb
cltd
lock
es
scas
in
and
mov
gs
call
cmpsl
xchg
movl
cltd
out
adc
lock
xchg
setns
push
fdivrl
cmp
cmc
jbe
cld
mov
xlat
push
insb
inc
adc
lds
mov
cltd
out
orl
imul
or
loopne
es
mov
add
xor
or
leave
ja
adc
push
cltd
add
jb
arpl
add
mov
cltd
outsl
push
dec
insl
fbld
lods
xchg
xor
inc
je
sti
sub
ret
shrb
movsl
pop
sub
fsubs
cmp
jb
outsb
shrl
cmp
lock
repnz
jo
test
jno
and
and
xchg
mov
shl
pusha
cld
fists
add
pop
sbbb
cmp
jbe
sbb
call
rol
xor
mov
stc
ret
mov
aas
jp
lcall
adc
mov
in
and
and
scas
imul
jmp
test
cltd
insb
lea
inc
enter
cltd
arpl
testl
mov
jge
in
mov
jns
pushf
xchg
icebp
jle
lock
mov
adcb
mov
sbb
cmp
mov
bound
dec
ret
cmpsl
inc
aad
and
insb
cmpsl
adc
js
cmpsb
jb
cwtl
leave
mov
pop
movsl
outsl
mov
sbb
std
sbb
push
adc
mov
cltd
sbb
mov
jmp
sti
icebp
loopne
pusha
mov
adc
jns
ret
sub
cltd
es
icebp
sbb
add
in
inc
add
stc
lods
cld
xchg
cltd
aaa
mov
cltd
loope
jno
movb
gs
and
mov
lds
jmp
cltd
imul
ljmp
inc
in
enter
int3
lods
jp
jns
add
in
add
and
mov
scas
cltd
mov
jmp
mov
in
std
stos
mov
fwait
cmc
aad
push
leave
mov
cltd
pop
jns
mov
std
movsl
sahf
cltd
mov
xor
popf
push
cltd
dec
xchg
leave
push
mov
lea
xchg
xchg
cltd
das
lsl
gs
movsb
pop
dec
outsb
mov
sub
loope
adc
adc
leave
and
iret
jl
addb
jno
add
pop
scas
sahf
rcrb
sub
cld
sub
test
mov
shlb
repnz
xor
sahf
pop
dec
dec
sbb
cltd
jg
stos
in
or
sub
iret
inc
insb
cs
push
xchg
sahf
pop
pextrw
fwait
sbb
mov
inc
dec
mov
lahf
cltd
aam
stc
pop
dec
jns
inc
push
push
shrl
ret
cmpsl
leave
repz
loopne
leave
stos
insl
mov
fidivl
push
mov
jle
jge
aas
dec
dec
cmp
dec
mov
int3
sbb
xchg
clc
loop
scas
cltd
loope
cwtl
into
mov
mov
push
xchg
setnp
or
cltd
dec
das
push
pushf
daa
push
rcrb
sbb
lds
ja
cld
mov
push
sbb
dec
dec
cltd
mov
cwtl
mov
cltd
cmp
insb
sbb
stc
lahf
sbb
and
mov
ret
icebp
push
xlat
sbb
divl
movsb
mov
jp
pop
repnz
dec
xor
lahf
pop
push
in
cltd
jmp
sti
cmc
and
call
lret
ja
ret
lcall
mov
mov
cltd
cld
inc
lea
xor
or
sahf
int3
loopne
movsb
clc
cltd
lret
mov
leave
movsl
cltd
xor
inc
and
imul
mov
les
mov
hlt
dec
cltd
pop
test
add
rcrb
icebp
or
add
pusha
xlat
cltd
mov
mov
or
enter
jle
cltd
call
jl
mov
inc
mull
test
mov
pop
cmp
cltd
or
lock
pop
out
sahf
into
cltd
out
sbbl
mov
sbb
mulb
mov
mov
pop
fwait
inc
fistl
pop
decb
cmp
cltd
aaa
sub
or
mov
adc
cmpb
addl
rorb
or
push
inc
clc
mov
std
setns
or
dec
inc
inc
cmp
push
xchg
mov
bound
test
jmp
jae
jb
dec
cmp
scas
sbb
push
das
stc
scas
mov
mov
mov
inc
movsb
ds
adc
dec
aam
xchg
stc
mov
pop
pop
cmp
inc
push
js
outsb
pop
xchg
nop
pop
pop
lea
jns
lret
cltd
mov
jmp
mov
xchg
cltd
cmp
scas
sbb
frndint
sub
cmp
and
or
cltd
fcoms
inc
fcmovu
dec
mov
mov
pop
cmpsl
mov
xor
mov
xchg
xor
imul
pop
scas
fimuls
mov
enter
jae
push
cltd
cmp
push
dec
cltd
pop
cmp
xchg
mov
mov
push
test
fisubrs
sahf
cltd
dec
xchg
jmp
stos
cltd
push
mov
jp
inc
cld
movsb
cltd
in
cwtl
adcl
je
mov
es
pop
or
cmpl
addr16
xor
fwait
cmp
mov
loopne
lods
icebp
xor
test
xor
fs
cwtl
in
cltd
stos
rorl
xchg
je
aaa
sbb
adc
mov
cltd
lcall
mov
loop
lahf
push
sub
negl
xchg
mov
adc
push
test
xchg
pop
and
cltd
mov
or
push
shl
lods
cltd
insl
add
mov
dec
pop
cltd
mov
xor
xorl
pop
cli
inc
xchg
aas
test
cltd
dec
call
aad
cmpsl
imul
jg
mov
adc
enter
stos
movsl
xchg
sbb
bound
xor
jo
lea
fdivrs
xlat
popa
clc
outsl
inc
fwait
cmp
test
cmpsl
add
lahf
mov
in
and
xchg
cmp
adc
rclb
inc
mov
aad
push
cltd
jb
cmp
inc
frstor
popa
xchg
test
cltd
or
insl
cltd
mov
cmp
sbb
call
adc
pop
xchg
cltd
push
jae
test
shl
or
cmp
out
popa
pop
imull
fists
ror
cmpsl
push
cltd
inc
mov
stos
rcll
xchg
fcomps
fcoml
lret
push
and
loopne
push
movsl
adc
mov
pop
daa
iret
mov
push
cmpsl
das
call
pusha
aad
gs
cltd
mov
push
xchg
fstl
fisubs
push
cltd
ret
pop
inc
cli
mov
pop
es
mov
cltd
or
mov
mov
push
push
inc
inc
inc
cltd
test
lods
lcall
mov
stc
xor
jp
xchg
jo
mov
in
sbbb
push
daa
pop
imul
fmuls
mov
imulb
dec
test
bound
and
fistpll
xor
push
mov
inc
cltd
shrl
push
push
fmull
loop
f2xm1
xchg
push
cmpsl
jne
fimuls
shll
call
add
mov
cmp
xor
mov
in
jl
sbb
mov
enter
rcr
dec
and
push
mov
fldl
mov
and
fistpl
ret
loopne
cwtl
add
add
push
sbb
jl
js
push
fwait
dec
jmp
adc
decb
cmp
lahf
push
fsubrl
fistl
cmc
sar
and
int3
jae
loope
add
mov
xlat
aaa
sub
stos
adc
cld
in
mov
movsl
or
xchg
in
flds
sahf
xlat
xorl
push
les
in
ljmp
adc
in
xor
xor
repnz
jmp
stos
aad
cmp
mov
xchg
fcmovne
mov
insb
imul
push
push
out
mov
pop
movsl
sti
push
ficomps
xor
cmp
ss
adc
mov
clc
cmp
ljmp
getsec
adc
jae
jl
shl
add
push
push
imul
push
outsl
jno
mov
mov
inc
insl
jo
jmp
shrl
mov
xor
pop
jmp
push
pusha
jl
inc
cltd
sbbl
fstps
stc
outsb
loopne
and
pushf
jmp
jae
mov
test
sbb
aaa
sbb
jae
jmp
mov
std
and
outsl
stc
pushf
jge
or
dec
daa
push
or
iret
xor
sbb
mov
mov
or
stos
je
stos
cmp
sbb
mov
stc
mov
movsl
shrb
xchg
jae
pop
nop
outsl
inc
jmp
ljmp
addl
jmp
mov
into
mov
nop
cmp
test
xchg
pop
jle
nop
cs
sub
out
imul
outsl
repnz
jle
idiv
adc
add
push
rol
lock
cli
xchg
mov
stos
incb
mov
sbb
jecxz
imulb
fucom
lcall
popf
orb
add
cmc
cwtl
lock
jl
dec
sub
mov
lods
adc
mov
ret
or
je,pn
pop
adc
dec
fisubs
mov
fs
push
inc
out
jbe
cmpsl
push
mov
xor
dec
cmp
test
arpl
data16
les
jmp
test
xor
push
mov
or
mov
xchg
dec
rorb
imul
mov
in
dec
xchg
xor
mov
lock
cmp
lcall
clc
mov
mov
push
sbb
mov
cmp
popa
push
mov
aad
jg,pn
mov
and
mov
cmp
mov
pop
scas
mov
dec
sbb
add
test
dec
int3
int
jnp
pushf
rcll
fwait
lock
gs
stc
test
adc
or
and
jp
jnp
pop
jne
inc
clc
dec
sbb
loopne
mov
fwait
test
xor
cwtl
inc
lods
jmp
outsl
cmpb
pop
xlat
add
js
gs
test
loop
subb
jge
inc
clc
mov
stos
push
mov
add
shl
loopne
inc
data16
sbb
mov
mov
pop
ror
lea
lock
adc
movsb
loope
mov
pop
aaa
pop
push
adc
push
mov
jl
addr16
xchg
jge
arpl
mov
jmp
jg
testb
mov
cmpsb
sbb
jmp
mov
das
shrl
xchg
pop
xor
xlat
jmp
in
sub
lock
mov
test
sti
mov
xchg
and
pop
jmp
cmp
adc
and
cwtl
jle
xchg
gs
rclb
mov
inc
sbb
xor
scas
inc
jae
add
jmp
push
inc
popa
inc
pop
loopne
sub
cmp
rclb
jbe
sub
aas
stos
mov
lcall
mov
shrb
pop
sub
icebp
jae
mov
push
sbb
and
mov
mov
lret
push
jo
lds
pop
fwait
cmc
adc
pop
xchg
jae
mov
add
stos
push
lods
sbb
fstp
sbb
mov
push
in
popf
mov
mov
dec
pop
out
mov
mov
and
adc
leave
lcall
xchg
icebp
dec
out
jl
lcall
inc
jmp
ljmp
inc
movsl
adc
sub
cmp
and
pop
test
stos
adc
adcb
dec
and
in
popa
aam
sbb
and
mov
pop
fsubrl
rol
xchg
sub
sbb
adc
add
sbb
lods
adc
mov
mov
add
cmpsl
push
xchg
sbb
stc
pop
pop
and
inc
ror
adc
dec
xlat
xchg
mov
test
leave
sub
icebp
int
pop
pop
out
imul
jns
lods
aam
lea
stc
shll
sbb
or
inc
xchg
jnp
pop
cmp
dec
cwtl
mov
flds
sub
ficoms
inc
test
pop
lret
insl
aam
mov
ljmp
xor
push
and
insl
xchg
sarl
jmp
lahf
xor
cltd
adc
addr16
std
test
push
mov
stos
int
rorb
cmp
jp
ret
or
and
mov
xor
test
xorl
jl
xchg
and
sahf
test
jle
cmp
cmp
fidivs
ja
fadds
mov
inc
mov
adc
lods
subl
sub
inc
fstps
and
mov
popa
mov
test
test
and
jmp
add
daa
jb
sbb
dec
pop
sbb
add
out
pusha
or
outsl
sbb
into
fwait
insb
or
movsl
jne
mov
mov
lret
cmp
dec
insl
aam
mov
lcall
inc
jno
mov
rorb
xchg
pop
inc
sahf
sub
fldcw
icebp
dec
scas
jae
push
sbb
fsubr
adc
push
add
scas
inc
pushf
aas
iret
int3
shll
int
insl
cld
cmp
sub
pop
mov
and
aaa
sbb
add
cmp
aaa
cmp
mov
dec
cltd
sbb
sub
dec
or
or
push
pop
test
cltd
adc
fwait
cmp
icebp
jmp
push
cltd
xchg
test
incb
std
add
lods
test
cltd
scas
sbb
xchg
jbe
jmp
mov
sbb
notl
test
lret
in
lods
xor
adc
fs
cltd
enter
push
pop
jl
push
loope
daa
mov
jmp
insl
xchg
out
popa
adc
inc
xor
aam
fwait
je
sahf
test
add
lds
mov
insl
xchg
cltd
arpl
push
cltd
pop
inc
jle
rclb
subl
push
cltd
and
push
ja
mov
inc
sbb
jno
gs
cmpsl
add
push
fwait
hlt
mov
sbbb
xchg
stc
cld
push
rcl
cltd
test
jle
jmp
jl
adc
in
cltd
pop
cwtl
mov
xor
fcomps
mov
test
sbb
push
mov
mov
sti
mov
cmp
scas
push
or
ljmp
jae
adc
mov
inc
and
jns
xchg
testb
cmc
sbb
lds
outsb
shrl
call
mov
cltd
push
inc
out
ljmp
les
dec
inc
pop
mov
dec
cwtl
enter
cltd
or
das
leave
push
outsb
test
jb
add
sbbb
popa
xchg
inc
cltd
push
out
mov
in
ficomps
xchg
inc
mov
jnp
pop
and
push
loop
stc
push
and
scas
ds
out
push
iret
mov
enter
inc
dec
xchg
fldcw
fwait
sbb
arpl
pushf
stc
dec
xchg
cltd
shlb
in
mov
movsl
imull
out
pop
lods
mov
adc
xlat
jae
cmpsb
ficoml
mov
adc
int
cltd
insl
mov
mov
ja
add
and
pop
xor
pop
push
test
mov
cltd
sbb
inc
mov
mov
xor
xchg
sbb
hlt
fwait
addr16
cmpsb
ljmp
xchg
sahf
cltd
das
jno
dec
sti
xor
jge
fwait
subb
xor
push
nop
fisubs
inc
dec
cltd
push
mov
cs
mov
cltd
inc
mov
cld
sbb
dec
sbb
daa
cmp
pop
dec
outsb
fisubl
das
and
in
cltd
jg
stos
sub
shl
std
inc
repnz
das
sub
cltd
dec
mov
xchg
cltd
es
cli
mov
lcall
loope
cmp
dec
adc
or
mov
nop
jae
test
jo
test
fwait
lret
dec
loop
push
xor
pop
lret
std
ficoml
inc
jne
fbld
cmp
mov
cltd
lds
fmuls
cmp
push
into
outsb
mov
xchg
ss
inc
int
mov
push
lret
and
negb
jmp
stc
dec
icebp
sub
or
repz
jp
cmpsb
jmp
in
cmpsl
sub
insb
daa
leave
out
out
sbb
mov
out
inc
xchg
loopne
scas
stc
mov
jo
int3
movsb
xor
imull
mov
pushf
mov
mov
outsb
movsl
nop
fisttpl
rcr
mov
gs
ja
and
sbb
cltd
adc
mov
xor
das
aam
hlt
inc
and
jno
jno
fwait
pushl
and
cltd
or
adc
inc
test
xchg
imul
adc
js
push
pop
cmpsb
hlt
stos
rcll
xchg
loopne
mov
mov
mov
sti
inc
push
add
and
and
fildl
sbb
jne
cmpsb
movsb
or
leave
adc
arpl
inc
xchg
lds
je
loopne
sbb
add
fisttps
cltd
lret
ja
div
arpl
mov
fstps
or
popf
xchg
mov
pusha
sub
das
add
mov
adc
ss
cld
jnp
subb
cltd
push
xchg
inc
jae
mov
cld
sub
sti
rorb
fwait
jl
xchg
js
mov
xchg
fcompl
pop
dec
out
ret
cltd
lcall
mov
lahf
cltd
inc
and
mov
and
sbb
pop
sti
enter
mov
loopne
pop
dec
movd
or
or
and
cld
mov
or
push
mov
jnp
pop
pop
imul
pop
inc
lret
icebp
fwait
leave
sub
xor
mov
cltd
clc
mov
ljmp
sbb
dec
lret
pop
lcall
sub
popf
dec
mov
clc
insb
adcb
enter
adc
cltd
push
xor
int3
test
and
in
and
mov
ds
push
fwait
hlt
lods
aam
add
fldcw
movsl
sbb
jmp
adc
mov
mov
xchg
lock
scas
bnd
iret
jo
sbb
mov
or
ss
aam
decb
mov
cltd
jae
add
push
or
pusha
pusha
xchg
cmp
cltd
push
sub
stos
lahf
jo
or
jno
lods
out
cltd
cmpsl
pop
loope
mov
fdivrl
inc
mov
adc
filds
cltd
int
pop
lods
es
fs
mov
xchg
cltd
icebp
imul
cltd
pop
fistpll
add
xchg
xchg
adc
lods
mov
aaa
adc
cltd
aam
dec
fs
pop
setns
and
jbe
fstps
scas
push
int3
lods
dec
dec
push
insl
cltd
jmp
ficoms
lock
xchg
pop
repz
pop
xchg
push
loop
xchg
inc
jmp
fs
outsb
cmpsl
push
stos
pop
jmp
dec
lret
jecxz
es
xchg
test
and
and
jmp
or
or
sub
mov
lahf
mov
andl
dec
pop
cmp
push
shr
sbb
pop
xchg
mov
lock
cltd
pusha
scas
fadd
jl
dec
cmp
fwait
xchg
cltd
fidivl
inc
jp
mov
jbe
in
fldcw
mov
xchg
mov
cltd
or
loopne
test
mov
adc
mov
cltd
push
mov
fwait
test
jle
lcall
xor
add
rcll
clc
and
das
xchg
mov
in
and
xor
fucomp
mov
push
lahf
xor
andb
sub
into
aas
cld
das
adc
pop
sbb
incb
inc
adc
lds
sub
push
lods
out
or
adc
mov
xchg
xor
xor
loop
enter
je
push
call
adc
push
sarb
cwtl
icebp
cltd
cmp
and
mov
push
sub
nop
pop
sub
and
fsubr
jbe
mov
sarb
cld
pusha
aaa
adc
push
inc
jb
cltd
mov
out
arpl
popa
lahf
and
insl
add
xchg
mov
int
push
loope
fisttps
cmp
push
addr16
cltd
xchg
xor
mov
cli
lcall
cli
fnstsw
pop
je
mov
fadds
movsl
and
stc
mov
out
or
test
clc
cmpsl
and
lret
xchg
xor
adc
sub
movsb
dec
cltd
mov
sub
mov
cld
sub
cltd
cmp
hlt
mov
inc
fmuls
sti
mov
cltd
mov
mov
mov
outsb
jmp
cmp
fwait
loopne
loopne
pop
test
cltd
jo
std
idiv
je
stos
in
inc
or
sbb
jge
daa
cltd
pusha
push
movsl
xor
xchg
sbb
inc
inc
fists
mov
mov
and
xchg
mov
sbb
in
push
ja
xor
bound
test
idivb
aaa
stc
jge
jno
cltd
loope
xchg
xchg
adc
cltd
jns
sub
add
pop
inc
sahf
test
jns
pop
mull
jno
sbb
pop
call
outsb
mov
fnop
sub
addr16
fdivl
icebp
cltd
int3
jns
mov
stos
dec
jno
ja
mov
addb
jmp
mov
and
ret
fwait
sbb
pop
movsb
pop
lcall
mov
mov
pop
or
das
in
xchg
stc
sbbl
mov
lcall
push
xchg
jmp
out
std
inc
jb
pop
scas
jp
aaa
mov
imul
ffree
cltd
gs
sub
int3
cmp
dec
adc
xchg
je
ds
cmpsl
imul
stc
lcall
and
iret
sbb
cltd
insl
mov
cltd
lahf
and
mov
pop
mov
jecxz
cmc
subl
sub
cltd
shr
mov
fwait
mov
inc
outsb
cli
inc
cmp
cltd
stos
push
cmp
mov
pop
orl
sub
pop
mov
test
mov
sbb
sbb
enter
and
mov
mov
cltd
jnp
mov
xchg
int
cltd
mov
insb
scas
jo
inc
xor
cmp
cltd
aam
xor
or
ret
mov
enter
cmp
dec
mov
cwtl
rcrb
loop
inc
lcall
xchg
sub
mov
in
pop
cltd
scas
push
sbb
jae
mov
mov
fs
pop
jl
add
mov
cltd
dec
dec
mov
cltd
xchg
push
xchg
rcrl
call
int
loopne
inc
stos
push
nop
adc
fadds
cmp
lock
or
imul
mov
sbb
loope
js
mov
push
sbb
lods
insb
dec
scas
outsb
scas
in
lock
xchg
jae
xchg
nop
sbb
outsb
dec
enter
inc
shl
pop
inc
push
in
add
mov
cmpsl
jmp
mov
test
repnz
cmp
movsl
pop
mov
mov
mov
jne
or
movsb
mov
dec
jge
mov
pop
inc
push
pop
sub
xchg
sbb
cmpsl
mov
stos
fistpl
jl
sub
xor
mov
imul
dec
jo
lods
mov
fistpl
jmp
mov
dec
cmp
add
cwtl
test
cs
jp
inc
ljmp
cwtl
nop
fsubp
cmp
sbb
push
inc
sub
ret
loop
push
sbb
nop
ss
mov
rorb
into
stos
leave
fbld
adc
ret
mov
fidivrs
aaa
fsubrp
inc
mov
push
loope
add
xor
push
and
ljmp
and
sub
cmpsl
jle
mov
mov
mov
xchg
lds
fwait
lcall
test
mov
sti
and
sub
scas
jg
stos
jmp
rorb
lcall
ds
xchg
sub
and
cmpsb
imull
ret
mov
push
mov
data16
js
and
cld
mov
push
sub
or
loopne
jmp
jge
aad
cltd
mov
adc
pushf
fisubl
xchg
jmp
mov
jl
jg
test
sub
clc
adc
and
push
sbb
cmc
mov
stos
in
mov
cltd
lock
mov
stos
xchg
fdivl
ss
jg
xchg
rep
hlt
adc
dec
adc
jmp
ljmp
arpl
sbb
mov
ret
imul
arpl
jb
insl
and
or
popf
movsl
or
push
outsl
rcll
jnp
loop
mov
test
mov
mov
mov
lock
or
xor
lock
ret
punpcklbw
cmp
mov
popf
imul
movsl
cmpsb
enter
mov
imul
sbb
xchg
cmp
into
and
cmp
je
or
adc
push
mov
arpl
test
add
bound
and
dec
in
sti
fisubs
push
movsb
std
dec
stos
xor
in
lock
ret
lret
xor
mov
xlat
lods
test
adc
gs
rcl
aad
pop
pop
dec
pop
enter
movsb
fadd
aas
mov
aam
xchg
movsl
sbb
sahf
in
cmpl
add
jns
adc
in
jns
aam
stos
push
xor
popa
inc
popf
shrl
inc
pusha
aad
in
xor
jmp
jo
xor
dec
cmp
inc
iret
cmp
mov
arpl
mov
test
adc
shl
hlt
bound
jle
jl
jmp
xlat
nop
mov
fidivl
jmp
dec
mov
imul
adc
push
jno
push
push
fidivrs
cmpsl
mov
repz
lock
xchg
jae
loopne
repz
gs
jle
jno
out
dec
add
mov
es
pop
xchg
adc
aad
shr
lds
je
and
and
inc
mov
mov
sbb
aaa
int3
push
sbb
jns
mov
js
inc
pop
push
movsl
add
adc
jmp
xor
fmulp
js
mov
and
adc
dec
fidivs
xchg
dec
loopne
insb
daa
or
dec
punpckldq
cwtl
jmp
shlb
push
inc
notl
push
aam
fdiv
pop
push
pushl
loope
mov
xor
xor
sbb
jg
and
fwait
test
pop
ss
inc
out
fs
ret
inc
jb
jg
cltd
sub
mov
out
dec
and
movsl
xrelease
xchg
cmp
cmc
test
cltd
sahf
repz
arpl
mov
fsts
inc
cmp
jnp
push
push
mov
lods
cltd
stos
sub
jmp
loope
fisubs
scas
cmp
cmp
cltd
mov
addr16
cltd
aaa
jb
xchg
imul
jecxz
sti
out
dec
enter
hlt
pop
or
cmp
fdivrl
shr
sbb
mov
popf
cltd
lea
cltd
cli
shl
es
pop
jns
outsl
dec
xor
pop
rolb
hlt
loope
lret
jo
popa
pusha
test
jle
faddl
push
iret
pop
test
in
mov
pop
or
fiaddl
in
jle
mov
cmp
out
cltd
loope
lret
mov
cltd
push
fadds
jmp
arpl
xchg
xchg
clc
cltd
and
into
mul
scas
inc
mov
jecxz
and
inc
add
or
add
cltd
jae
inc
inc
mov
sti
negl
mov
sahf
sbb
pop
adc
cmp
rcrl
mov
flds
addr16
mov
cltd
dec
mov
push
fstpl
aad
std
lcall
sub
ja
cltd
shll
pop
mov
or
aam
jae
sbb
movsb
ja
in
mov
jg
test
mov
sbb
pop
scas
lea
xorl
inc
dec
xorl
fabs
jno
cmpsl
push
and
mov
push
cmpsl
jnp
clc
push
pusha
inc
pusha
sbbl
leave
xchg
sbb
mov
das
xor
pop
add
scas
add
inc
ret
cltd
xchg
call
adc
outsl
or
fldcw
cltd
mov
jbe
jae
sbbl
cmp
jmp
mov
pushf
inc
fsub
xchg
mov
add
ror
dec
fisttpl
jmp
lret
in
jg
sbb
iret
imul
or
mov
mov
inc
cwtl
adc
fnstcw
pop
mov
mov
cltd
adcl
inc
loopne
xchg
fwait
nop
movsb
jae
xlat
insl
xchg
shl
cltd
sub
pcmpeqb
jmp
fcomip
jnp
and
push
cltd
jb
dec
push
xchg
orb
cltd
je
jns
and
mov
fimull
or
xchg
stos
mov
icebp
push
fs
fldl
mov
cltd
loop
sbb
jecxz
dec
cltd
int
cmp
inc
inc
clc
mov
mov
faddl
lods
adc
pusha
fisubs
fadds
sbb
repnz
cltd
mov
xchg
mov
dec
movsb
aaa
xchg
mov
cltd
mov
jmp
mov
loopne
add
les
movsl
xchg
movsl
data16
mov
sbb
jno
ss
jbe
bound
fsubl
fstpt
lock
sub
mov
or
cltd
dec
loopne
hlt
das
dec
lret
cltd
add
mov
xor
dec
cltd
push
push
jbe
and
mov
lret
cltd
insl
les
sbb
mov
outsb
dec
cmpb
pop
jns
fildl
cmp
sbb
int3
fwait
mov
cmp
jg
cltd
std
rorl
sbb
loope
cmpsl
pop
idivl
cmpsl
inc
iret
adc
cltd
shll
mov
push
mov
js
cltd
inc
sub
add
mov
cld
cmpsl
jg
and
movsb
lahf
and
jbe
inc
sbb
insl
mov
dec
ret
aam
mov
sbb
cltd
lds
adc
lret
xor
cmpsb
and
and
scas
ds
cltd
adc
sbb
dec
cld
xchg
stos
cmp
cltd
sbb
rclb
popaw
xchg
adc
insl
cltd
fildl
cmp
mov
pusha
cmp
loope
ljmp
jno
std
cltd
adc
imul
js
test
pop
movsl
xcrypt-cfb
cmpsl
and
add
jb
mov
or
rcrb
outsb
mov
sub
cmp
add
cltd
call
mov
sub
mov
sbb
aad
inc
scas
cmp
or
std
xchg
mov
scas
cmpsb
dec
mov
and
pop
cmp
sbbb
jl
jmp
mov
xchg
mov
push
ret
dec
lods
fists
rcrb
fwait
cmp
push
add
scas
int
ljmp
lcall
xchg
cltd
mov
adc
or
int3
cltd
cmp
sub
fsqrt
cltd
lret
shrb
or
push
mov
ret
cmpl
and
jg
and
adc
pusha
out
scas
pusha
mov
cltd
je
jmp
rorb
fisttpll
loopne
inc
sbb
popa
rcrb
lret
mov
pop
mov
sahf
gs
lahf
push
mov
enter
jmp
arpl
fwait
flds
js
mov
inc
test
outsb
pop
mov
push
shlb
cltd
inc
jne
aam
popf
dec
cltd
mov
sbb
mov
movsl
cltd
iret
daa
ja
adc
jecxz
les
xor
cltd
xchg
jb
mov
fstps
fwait
xchg
and
cmc
shll
sbb
mov
lahf
repz
insb
add
sub
sbb
popf
data16
shrd
je
jb,pt
sbb
cltd
das
sub
push
mov
bound
stos
int
arpl
jno
adc
push
and
lcall
lods
add
fidivl
or
arpl
cltd
or
mov
into
jns
inc
and
repz
cltd
xor
push
mov
mov
sbb
or
push
loope
fcompl
clc
ret
cltd
inc
dec
dec
icebp
aad
xchg
jns
dec
lret
test
push
lods
xor
cltd
sub
cs
push
test
add
jae
push
add
fwait
outsb
sbb
xchg
fidivrl
cltd
repz
bound
pushl
scas
mov
xchg
cltd
or
mov
imull
jns
mov
stos
lea
mov
inc
in
mov
sub
push
enter
loope
in
sbbb
inc
push
or
dec
inc
cltd
mov
add
sti
ds
jge
lods
ret
cltd
stos
call
cltd
aas
cmc
imul
ja
jbe
adc
fnsave
dec
xchg
scas
hlt
sbb
lea
movsl
test
cltd
out
jne
push
pop
mov
mov
push
and
aaa
xor
and
in
sbb
je
iret
inc
push
adc
mov
cltd
fnstenv
sbb
aad
gs
leave
nop
aas
jno
mov
jmp
sub
cmpsl
movsl
mov
jns
sbb
or
pop
ja
test
mov
scas
sti
xchg
sahf
add
adc
je
sbb
stos
fwait
out
and
js
sub
stos
pop
sub
lcall
aas
add
fwait
jb
mov
test
cmp
push
push
cltd
pop
sbb
bound
mov
cltd
aas
ficoms
jge
arpl
cmpsl
ja
jmp
int3
ret
cwtl
and
fistpl
adc
popf
cltd
pop
roll
cmpsl
scas
add
mov
jno
cmp
loop
mov
add
bound
repnz
ja
daa
mov
scas
shlb
loope
dec
and
jb
pop
dec
mov
pop
or
mov
pop
outsb
xchg
cmp
sbbl
xor
sub
mov
sub
cltd
cbtw
aas
adc
jns
imul
mov
shrl
loop
enter
pop
fsubrs
pop
and
int3
mov
cmpsl
jne
clc
data16
push
xor
lock
cltd
lds
sbb
push
cltd
popf
cmp
frndint
scas
jecxz
xchg
lock
push
cltd
loopne
sub
jae
cltd
pop
lcall
push
out
xor
loope
cltd
aad
lret
push
inc
and
jle
xchg
out
frstor
sub
lret
sub
loop
cltd
fiadds
cmp
pop
mov
sub
ror
cltd
inc
cmp
dec
push
sbb
fistpl
push
aaa
mov
int
dec
and
and
jb
nop
pop
mov
ds
jnp
mov
pop
xchg
sbbl
faddp
or
test
cltd
add
negb
repnz
rcrl
cmp
fsubs
xchg
xchg
cmp
cmpsl
xchg
sbb
leave
mov
jmp
cmp
dec
rcrl
outsl
cmpsl
arpl
inc
lcall
les
aaa
ss
cmpsb
cmpsb
faddl
cltd
loope
sahf
sbb
pusha
jb
adc
or
je,pn
lea
lret
dec
jae
mov
push
sar
add
xchg
addl
push
fs
xchg
adc
adc
cltd
pop
or
add
leave
imul
jae
hlt
pushf
lock
or
and
out
ds
sbb
xchg
fstpl
int
addb
iret
cltd
pop
mov
jl
pop
sub
adcb
subb
repz
cltd
outsl
and
adc
cltd
or
pop
push
fwait
and
push
pusha
adc
cmp
rcll
mov
and
mov
mov
faddp
jns
add
cltd
lcall
inc
add
and
mov
push
movsl
push
test
cmovs
inc
xchg
hlt
cltd
out
pop
xor
js
or
call
and
outsb
pop
fldl
lds
jge
jne
cltd
push
jo
or
cltd
js
sarl
hlt
add
sarb
iret
enter
aaa
mov
pop
push
jne
mov
testl
inc
rolb
mov
inc
and
int3
loopne
inc
insl
sbb
sub
or
mov
adc
jo
mov
enter
shrb
fimull
jns
test
sbb
stos
or
cltd
add
clc
insb
jle
aas
cltd
push
jmp
push
outsb
dec
add
push
loope
pop
test
addb
dec
inc
pop
xchg
jmp
dec
mov
leave
cltd
movsl
sahf
in
out
nop
jge
insl
scas
mov
ja
in
inc
cmc
loop
adc
mov
outsl
data16
xchg
aaa
jl
add
orb
mov
jp
mov
xor
cmp
mov
cmp
in
cmp
jge
iret
scas
dec
aas
icebp
out
jmp
lods
mov
ds
mov
lahf
les
fistl
stos
lahf
jmp
mull
outsb
xchg
pop
fmull
mov
inc
inc
jle
mov
cmp
xchg
popw
lea
scas
xchg
jnp
fbld
xor
fildl
fdivrs
movsb
cmpsl
loop
mov
mov
cmp
inc
sbb
daa
mov
cmp
fcomps
sub
fistps
ds
mov
xchg
lcall
test
pop
cltd
or
or
std
in
mov
push
mov
and
arpl
pop
cltd
loope
and
test
push
jno
sbb
arpl
or
jns
cmpsl
cmp
lret
pop
xchg
rcr
mov
and
in
loopne
cwtl
xchg
mov
cltd
mov
xchg
mov
imull
mov
mov
mov
andl
lcall
xchg
aad
mov
hlt
fwait
sub
pushf
xchg
cmp
pop
fnstenv
or
mov
cmpsb
and
rcrb
inc
testb
mov
popa
roll
sbb
mov
cltd
xor
mov
cltd
sbb
mov
push
or
lret
fcompl
push
fwait
loope
je
add
imul
pop
jb
mov
pop
cmp
mov
cmp
xchg
mov
and
movsb
scas
add
mov
lcall
cltd
test
das
xchg
push
in
jne
cltd
test
adc
jg
scas
pop
insl
out
repnz
sti
mov
addr16
sbb
fists
cs
arpl
sub
cmp
xor
push
cltd
mov
inc
cmp
push
rcrl
movsl
loopne
sbb
push
and
xchg
push
pop
cltd
push
xchg
add
xchg
test
sub
mov
mov
rdtsc
mov
mov
or
mov
or
add
imul
xchg
test
xchg
cmp
mov
xchg
jno
inc
push
dec
mov
stos
mov
mov
mov
loope
xchg
bound
imul
addb
lahf
inc
push
add
push
dec
mov
and
mov
push
insb
sub
hlt
test
lods
jg
les
fwait
inc
dec
push
sub
fiadds
ret
push
enter
adc
int3
cmp
out
popf
ss
hlt
mov
add
lock
out
and
mov
jle
stos
addr16
dec
add
and
cmc
js
fwait
rol
add
aas
ret
outsb
stc
mov
mov
inc
into
mov
sbb
test
test
adc
pop
mov
xor
pop
cmc
inc
jno
out
sbb
les
stos
or
mov
adc
inc
xor
jecxz
mov
cmp
mov
loopne
fsubr
setge
mov
cld
loopne
sbb
sub
sub
leave
mov
dec
mov
and
ds
jmp
repnz
or
mov
lret
mov
cmp
xchg
js
jmp
mov
xor
test
inc
in
sub
out
outsl
mov
mov
subb
and
movb
test
xor
ja
sbb
sarb
cltd
mov
ret
sbb
mov
xorl
call
call
push
jnp
mov
jg
inc
lahf
mov
add
nop
pushf
mov
andl
jmp
in
fmuls
mov
pop
push
pop
mov
or
inc
iret
mov
popa
cmp
xor
sub
push
popa
mov
jecxz
in
add
jg
xchg
mov
xor
jl
sarl
mov
sub
je
je
jge
stos
mov
rcr
fstps
mov
add
mov
loopne
pop
data16
fsub
outsl
stos
lahf
gs
popa
andb
mov
pop
test
mov
stc
lods
test
xor
test
pop
scas
pop
ret
jmp
push
dec
or
adc
inc
clc
js
dec
and
in
push
push
mov
dec
xor
mull
scas
xchg
mov
inc
mov
dec
loopne
out
lahf
lds
mov
sti
testb
pop
shlb
fmuls
subl
aaa
jnp
adc
mov
ds
ficoms
mov
fisubrl
inc
outsb
cmp
and
jmp
aas
movsb
push
std
xor
popf
mov
fistpll
inc
adc
inc
aaa
std
sti
push
test
fisubrs
loopne
jg
jae
pop
jl
rcrb
pusha
push
outsl
cmp
mov
loopne
out
fwait
sub
jl
xchg
xor
mov
outsl
sbb
jo
lock
dec
inc
jmp
and
lcall
aas
xor
xchg
rol
xchg
push
xlat
cmp
lods
popa
lret
fists
andb
iret
mov
rorb
cmp
outsl
ret
lock
icebp
pextrw
cmp
out
sahf
ret
pop
sub
adc
mov
mov
inc
cmp
cmp
pop
shll
cld
movsl
ds
daa
push
sbb
push
popa
add
cmpsl
push
mov
inc
into
jg
jmp
test
loop
mov
lret
loope
daa
add
aaa
movsb
and
fsubrl
mov
sbb
mov
and
mov
jo
sub
push
es
fldl
lcall
mov
mov
cli
mov
cmp
outsb
enter
pop
negl
pop
dec
out
mov
sahf
jo
and
inc
divb
lds
push
loop
roll
test
sbb
sbb
fs
cmpsl
dec
xor
imul
pop
cltd
xor
jae
add
inc
xchg
sahf
jne
add
stc
mov
jmp
adc
rol
xchg
dec
cmpsb
stos
fsub
push
push
insb
sub
cli
dec
pushf
xor
xchg
loope
lcall
and
adc
xlat
adc
dec
xchg
adc
outsb
pop
xchg
sub
and
sbb
cmp
mov
cmpsb
or
cltd
enter
roll
mov
scas
xor
inc
sarl
add
mov
or
jge
daa
imulb
mov
mov
add
jp
into
nop
rclb
and
lock
xor
imul
cltd
scas
push
and
rolb
sbb
xor
cs
ds
add
push
xchg
mov
lock
enter
push
mov
inc
ja
mov
les
lods
and
loopne
jmp
movsl
lock
push
mov
lock
icebp
jb
movsl
loop
lea
pop
into
leave
dec
push
sarl
outsb
flds
test
lahf
std
popa
xchg
hlt
adc
xlat
xor
pushl
lret
lock
dec
fadd
cmpsb
outsl
cmpsl
test
orb
pop
in
xor
dec
push
out
mov
and
out
jl
adc
popa
mov
arpl
jno
or
insl
notl
dec
lcall
push
sbb
enter
xchg
sub
mov
jno
les
or
pop
addr16
mov
mov
andl
and
lock
inc
cmp
in
testl
ror
sahf
xchg
lds
fwait
or
dec
enter
and
call
xchg
xor
adc
xor
out
arpl
sbb
pop
jbe
mov
pushf
stos
xchg
cli
shlw
pop
pop
sbb
loop
jg
lret
xchg
push
pop
push
jns
fwait
imul
xor
xchg
loope
imul
jmp
dec
mov
mov
adcb
mov
out
mov
mov
loopne
cli
jmp
mov
pushf
mov
push
addr16
fidivs
movsl
mov
and
faddp
mov
bound
lret
pop
cmc
inc
adc
aad
in
in
loopne
hlt
xor
inc
mov
or
xor
inc
fcmovbe
adc
cmpsb
sahf
xor
popa
ljmp
iret
push
mov
mov
fstpt
sub
push
test
jb
shll
insl
xchg
mov
mov
mov
dec
or
popf
and
jl,pt
dec
push
cmp
lret
mov
stos
xchg
jp
cli
xchg
stc
adc
repz
dec
mov
leave
sahf
jl
fs
loop
sbb
pop
mov
push
dec
enter
stos
loopne
test
sub
inc
jno
jecxz
cmpsl
push
movsl
fucomp
sub
inc
faddl
insb
inc
orb
pop
mov
push
cmpsb
jmp
mulb
jl
stos
mov
test
scas
cltd
test
test
into
cmpsb
xor
jns
insl
fcompl
sti
int
scas
inc
xchg
dec
popf
pop
sbb
test
sbb
sub
mov
pop
lods
fwait
sahf
sbb
int
pop
add
mov
sub
mov
scas
cmpsb
cmp
dec
stos
addr16
pop
mov
xchg
lret
sti
pushl
push
cmp
pop
movsl
pop
outsl
jmp
loop
lock
mov
lret
shlb
push
jae
out
stos
add
jne
enter
ret
pushf
lcall
ret
lock
push
out
push
popf
and
xor
sti
jmp
jmp
lock
mov
fdivrl
lahf
inc
inc
jb
sub
fadds
ficoms
push
mov
xchg
aas
or
push
add
in
pusha
push
fs
lods
nop
ss
pop
call
or
imul
add
movsb
cmpsl
push
stos
pushf
insb
cli
daa
popf
xor
jl
sbb
add
popa
pop
cmp
sub
fwait
mov
incb
call
jle
xor
jp
nop
cmc
sti
xlat
popf
lahf
pop
or
loopne
je
fwait
call
je
jne
jo
cmp
mov
jmp
lock
adc
jb
mov
movsb
jno
xchg
dec
jge
aam
cmpsl
popa
adc
dec
jb
iret
and
in
jecxz
mov
cmc
adc
outsl
push
sub
pop
stc
add
inc
mov
cmp
cmpsl
repz
jo
inc
leave
outsl
add
not
cld
repnz
xchg
cwtl
xchg
leave
cmp
pop
ljmp
xlat
fwait
or
push
movsl
addr16
enter
out
cmp
inc
push
mov
adc
ds
fwait
loopne
push
mov
mov
pop
int
aam
pop
inc
sub
mov
xor
popf
add
roll
pop
pushf
dec
scas
in
fwait
pop
cmp
iret
pop
xchg
jl
movsl
lock
out
add
cli
jmp
push
fwait
cli
inc
inc
scas
cmp
jb
stos
jmp
xchg
fwait
loopne
flds
mov
xor
aaa
xchg
pop
fdivl
pop
sbb
aas
pop
inc
mov
xchg
fadds
pop
xchg
sbbl
lea
push
lret
enter
mov
pop
jnp
xchg
fdivrs
inc
sbb
rcrb
push
or
insl
dec
das
mov
fstps
clc
in
rol
sub
mov
push
xchg
aas
sub
mov
out
movsl
dec
xor
movsl
mov
lock
mov
js
mov
loopne
cmp
ficoml
or
sub
loopne
cmp
popf
popa
or
mov
dec
out
outsl
dec
push
adc
mov
pop
cmpsl
mov
icebp
mov
mov
xlat
inc
movsl
mov
mov
jmp
push
push
push
adc
push
ds
ljmp
les
inc
push
xchg
in
push
mov
push
aas
push
jns
mov
inc
pop
push
jl
pop
jno
jbe
int3
loopne
inc
lret
jne
sbb
jl
inc
jmp
mov
push
mov
pop
mov
jle
out
shl
and
sub
lea
jmp
mov
mov
jle
push
pop
xor
cld
shlb
out
jle
push
lahf
sub
jp
pop
sbb
jmp
dec
adc
faddl
rcrb
sbb
imul
popf
imul
fmul
leave
dec
pop
fisubl
mov
inc
stos
inc
jmp
rcl
mov
jmp
repnz
test
sbb
das
dec
test
jmp
inc
cld
push
cmp
in
mov
lock
divb
xor
arpl
inc
mov
dec
movsl
mov
xchg
jmp
ret
xor
jecxz
and
imulb
out
jne
mov
sbb
sti
inc
mov
xchg
or
dec
or
cli
sub
inc
mov
fmul
enter
shlb
cld
sbb
adc
cwtl
dec
ret
outsl
pop
xor
dec
mov
sbb
inc
adc
push
pop
cmc
mov
inc
mov
lods
jne
jl
xor
loopne
jbe
jns
push
test
std
sar
cli
sub
pop
popf
or
sbb
ja
jl
sub
sub
in
movsb
xchg
mov
out
inc
inc
adc
cmpl
mov
xor
add
movsl
js
ss
leave
mov
xlat
adc
cmp
sahf
jp
cmpsb
dec
or
add
fildll
lahf
loopne
cli
aaa
fsubr
outsl
xchg
movsb
fdivrs
aaa
ljmp
frstor
sbb
lock
and
pop
dec
jmp
rolb
insb
push
add
stos
cmp
sbb
in
jl
cmpsl
and
xchg
lock
jecxz
adc
push
aad
fldenv
adc
lods
int3
je
mov
pop
jne
mov
sub
dec
jmp
cmp
cmpsb
adc
adc
inc
jae
loop
push
mov
repz
mov
push
mov
xchg
fs
jb
pop
or
lods
ja
outsl
jno
hlt
add
into
jae
inc
pop
lahf
fsubl
cmp
jmp
mov
mov
loope
loopne
sub
jae
cmp
push
push
jnp
sbb
adc
adc
loopne
sub
imul
xchg
push
jns
or
mov
xor
shl
sub
xchg
or
xchg
ss
jp
push
jns
adc
test
lcall
cmpsl
dec
std
clc
jecxz
add
cmp
arpl
fldt
ja
mov
mov
sub
mov
loope
in
loop
sub
xchg
inc
ljmp
cmp
push
cmp
enter
adc
test
nop
adc
pop
push
insb
jmp
sbb
loopne
stos
dec
jmp
cmp
test
jno
imul
filds
or
shlb
stos
outsl
inc
mov
pusha
mov
xor
std
mov
pop
test
cli
xchg
lret
lods
jne
outsl
das
add
mov
sbb
int3
cmpsl
adc
mov
mov
imul
insl
clc
dec
push
je
sbb
notb
push
orb
xorl
sub
popf
and
sbb
lds
out
inc
int3
mov
push
mov
cmpsl
sub
iret
jmp
in
pushf
jl
bound
out
outsl
movsb
sbb
fisttps
pop
and
call
rcrl
mov
add
mov
inc
pushf
icebp
aam
out
add
int3
testb
xchg
rorl
add
ficoms
jmp
xor
or
lock
leave
addr16
inc
out
and
jnp
imul
xchg
roll
bt
push
mov
add
inc
or
sub
adc
xchg
xchg
aaa
loope
push
sbb
sub
movsbl
int
dec
stos
shrb
rcl
dec
fwait
mov
call
lods
fsubp
jg
adc
and
loopne
sarl
repz
add
or
cmp
jmp
mov
rclb
stos
or
jo
jge
push
pop
testl
enter
pop
inc
mov
xchg
or
cmc
loop
or
pop
inc
rcrl
enter
scas
lret
lock
dec
mov
insb
jns
cmp
imul
jmp
push
mov
cmp
icebp
stos
pop
aaa
dec
ljmp
gs
xor
or
jge
jl
mov
pop
js
and
test
inc
cwtl
ret
xchg
loope
mov
or
icebp
fdivl
insb
mov
int3
mov
jnp
orb
outsl
jmp
fdivrs
inc
xor
jns
and
xchg
cmp
stos
adc
cwtl
shll
or
les
pop
testl
stos
jmp
add
adc
test
and
xchg
adc
and
sbb
lret
dec
repz
int3
sub
orb
jmp
jnp
cs
adc
mov
loope
adc
xchg
sarl
adc
pop
lds
mov
adc
cmp
jle
inc
and
inc
jmp
in
lahf
adc
mov
push
outsb
mov
incb
mov
mov
imul
sbb
shlb
lock
pop
push
enter
test
loopne
inc
rcrl
imul
jg
arpl
jbe
add
mov
stc
test
xchg
in
rcrl
roll
mov
shlb
loopne
lock
les
xchg
into
and
push
adc
test
sbb
fstpt
shl
dec
add
mov
add
mov
and
cmpl
ds
es
mov
stos
mov
mov
into
add
rorb
xchg
and
cmp
in
daa
cmp
sub
cmp
arpl
mov
pop
xchg
xchg
mov
mov
aam
jmp
rcrl
pusha
mov
scas
sub
fdivs
inc
mov
sbb
cmpsl
xchg
sbb
and
pop
inc
icebp
mov
jmp
jo
lock
addr16
jmp
mov
dec
jp
xor
scas
sub
sbb
xor
lock
pushf
stos
sbb
or
ss
jmp
lock
lods
scas
outsb
cmp
shrb
push
stos
dec
inc
cmpb
push
xor
sub
mov
repz
sub
mov
sbb
adc
cmp
mov
test
sub
mov
pop
xor
sbb
add
jecxz
popf
mov
loopne
cmpb
adc
inc
cmp
aad
sub
mov
ret
loopne
pushf
addl
adc
dec
fdivl
inc
stos
pop
inc
cltd
and
cmp
pop
sub
lret
xor
orl
and
sbb
xor
adc
xorl
movsl
jae
push
cmp
xchg
out
mov
jns
cld
and
aas
testl
jp
dec
daa
push
and
sbb
sbb
mov
inc
int
mov
or
shlb
scas
and
shlb
mov
push
push
in
dec
test
test
inc
test
push
pop
pusha
incl
jbe
and
ret
dec
stos
xor
xchg
orl
sti
or
jl
xchg
mov
outsl
adc
xchg
imul
js
or
rorb
mov
stc
mov
mov
jecxz
cmpsl
and
sbb
pusha
popf
pop
xor
mov
add
sahf
js
sbb
jmp
mov
clc
mov
xor
ret
mov
imul
push
sbb
scas
jb
jmp
je
inc
mov
and
mov
push
test
sub
xor
add
pusha
loop
mov
in
scas
movsl
or
sub
outsl
push
xchg
sbb
mov
in
sbb
into
xor
jmp
cltd
mov
arpl
rclb
jmp
and
and
and
xchg
mov
mov
mov
ljmp
sub
and
push
adc
pop
imul
movsl
iret
xor
adcb
sahf
inc
push
cmc
shl
das
enter
xor
sahf
or
pusha
lock
sarb
jo
iret
ret
sbb
sbb
rcl
movb
push
push
out
sbb
jecxz
sub
push
adc
lahf
push
fsts
sub
xchg
mov
push
movsl
jl
cwtl
mov
fstpl
negb
loop
mov
pop
sbb
push
mov
push
or
insb
add
lcall
movsl
add
mov
push
mov
pop
mov
out
in
lock
xor
mov
les
movsl
add
movsl
sub
mov
fistps
in
adcb
stc
stos
fldpi
sbb
mov
cmp
cmp
lret
adc
add
ret
inc
mov
lcall
dec
fildll
in
frstor
mov
loopne
call
inc
jecxz
mov
mov
jecxz
fisubs
rclb
adc
popf
inc
cld
loope
mov
aam
jb
mov
mov
out
lock
mov
cmp
aaa
mov
pop
xchg
shrl
movsl
jmp
jg
inc
inc
jge
lcall
int
jmp
out
stos
xor
imul
ret
sbb
and
pop
and
imul
and
pop
mov
xchg
xchg
dec
sub
mov
add
jbe
jbe
stos
sbb
xor
xchg
int3
enter
adc
mov
and
mov
cld
andl
lods
stos
add
movsl
add
inc
mov
xor
lret
fs
xor
xor
fcoml
push
cmpsb
inc
and
test
mov
adc
lahf
push
dec
arpl
inc
popf
adc
push
sub
fldl
jmp
insl
xlat
dec
mov
adc
jmp
lods
ds
scas
dec
inc
orl
jnp
loopne
aam
lahf
daa
cmp
mov
into
jns
pop
pop
imul
in
arpl
sbb
lock
dec
int3
ret
repz
nop
outsl
or
cwtl
xchg
jno
sbb
jmp
mov
xlat
sub
and
ret
rcrb
xchg
mov
ret
adc
sbb
fiaddl
movsb
jbe
sbb
mov
jmp
add
sub
xor
enter
hlt
pop
push
cmpl
ret
ds
mov
cmp
pushf
sub
and
mov
push
mov
cmc
sub
dec
xchg
cld
dec
adc
xchg
lcall
int
inc
dec
and
repz
jmp
mov
cmpsl
int3
and
push
hlt
imul
inc
lock
xor
jge
pop
or
jbe
jnp
xchg
xchg
stos
or
bound
cmpsl
mov
outsl
jp
les
arpl
and
lahf
ret
arpl
test
lock
popf
insb
je
mov
test
rol
dec
pop
mov
lock
das
popa
stos
jecxz
sbb
inc
mov
roll
into
lock
or
repnz
mov
lods
int3
js
lret
pop
dec
sbb
dec
cmp
and
sub
mov
ret
repz
xor
stos
in
jecxz
daa
sti
cs
and
sbb
adcl
and
inc
mov
inc
repnz
lock
cmpl
mov
ret
xchg
lahf
lcall
push
lds
or
js
lcall
in
push
add
mov
adc
popa
sub
push
stos
test
in
cmp
inc
ficoms
aaa
aam
jmp
sbb
adc
lahf
pop
insb
test
sbb
pop
pop
std
sti
clc
mov
je
dec
jmp
push
movsl
popf
push
fsubr
aam
lcall
test
push
mov
inc
jno
mov
push
mov
cmp
jmp
movsl
frstor
adc
mov
xor
mov
lea
lods
movsb
fucomp
pushf
arpl
mov
dec
jbe
ds
lods
pop
call
adc
jle
int3
dec
dec
sub
cli
imul
daa
or
rolb
mov
mov
xorb
lock
fstl
mov
rol
cs
inc
fimuls
lret
bound
xchg
pop
mov
push
das
mov
je
adc
xchg
or
stos
ss
into
sub
pusha
mov
leave
and
push
mov
jecxz
pop
adc
in
fwait
lock
int
jbe
xlat
cmp
iret
sub
sbb
shrl
leave
add
arpl
lahf
test
cwtl
pop
cmp
ficoml
pop
fcomi
gs
dec
mov
jecxz
outsl
dec
sbb
jecxz
mov
jmp
fisttpl
lock
jp
mov
cmp
push
lods
frstor
cwtl
lcall
lock
xor
ret
jp
jg
inc
iret
shlb
ret
lcall
inc
dec
sub
es
lret
insl
and
dec
sub
lock
mov
pop
sbb
xorb
pop
inc
xor
lret
shr
inc
add
js
filds
sahf
and
and
hlt
pop
or
sahf
sub
leave
fidivs
pop
jmp
xor
inc
test
inc
inc
mov
sti
les
rorl
lcall
ret
jmp
insb
jecxz
fdivr
xchg
xor
pop
iret
and
and
adc
add
pop
mov
sub
stc
and
inc
or
sub
jl
dec
sub
push
jg
cmp
jmp
jp
mov
loopne
or
inc
mov
imul
xchg
ds
adc
mov
cmp
mov
fldl
mov
xor
mov
sti
mov
xor
jae
daa
fnstcw
stc
aas
cmpsl
mov
xlat
pop
xchg
ja
push
mul
add
shlb
stos
jmp
subb
loopne
in
lock
jno
xchg
mov
arpl
in
jmp
ds
stos
sar
scas
jmp
xor
filds
pushl
ret
stos
cmp
fisubrl
xchg
dec
mov
sbb
sbb
rclb
jmp
xchg
push
inc
xchg
jmp
sbb
fdivs
call
incb
add
mov
pop
clc
imul
inc
lret
jecxz
xchg
pop
in
mov
adc
ja
rcrb
addb
dec
fidivrl
jecxz
popa
pop
mov
add
lcall
or
imul
mov
cmp
jmp
test
xor
or
push
hlt
mov
shll
jns
xchg
mov
cmp
push
mov
or
insl
push
jb
les
shl
outsb
push
xchg
dec
jmp
sub
and
scas
jle
sbb
mov
mov
cltd
inc
and
push
rorl
and
mov
inc
addb
adc
dec
xor
leave
dec
nopl
jl
jo
sub
imul
lahf
icebp
aam
pop
and
push
jmp
jl
mov
out
inc
sub
xchg
mov
movsl
hlt
es
xor
ret
and
sbb
popf
addr16
push
mov
ret
stos
insb
jmp
sbb
pop
mov
loope
sbb
adc
jo
dec
outsb
and
push
push
int3
jmp
icebp
jno
test
sbb
stos
pop
je
lcall
pop
cmp
push
pop
mov
cld
inc
in
scas
adc
push
mov
cli
pop
inc
nop
sahf
cs
push
out
pop
cs
hlt
orb
xchg
lock
mov
icebp
ljmp
add
adc
insl
jl
push
ljmp
aam
icebp
xor
stc
cmpl
mov
stos
xchg
jmp
dec
or
adc
xchg
inc
sub
or
jb
jecxz
jmp
mov
mov
test
mov
adc
mov
hlt
inc
mov
mov
ret
dec
xchg
inc
loope
adc
loopne
pop
dec
das
scas
inc
aas
jbe
sub
lds
mov
pop
call
sbb
and
movsl
mov
je
dec
jg
cli
fisubrl
sbb
lods
adc
popa
fcomip
aaa
lahf
stos
dec
test
dec
mov
test
insb
pushf
and
fcomi
adc
xor
mov
pop
mov
add
cmc
rclb
loope
call
imul
add
loope
xchg
jae
fstp
adc
addl
lret
pop
mov
sbb
lods
sub
inc
dec
into
mov
push
aaa
and
ja
mov
mov
dec
mov
lock
adc
loopne
mov
fmuls
sahf
aam
push
push
mov
shlb
xor
xchg
insl
push
add
push
idivl
addl
lock
sbb
inc
inc
rorb
loope
lock
pop
or
insb
mov
movsl
sbb
sub
jnp
mov
mov
mov
test
stos
xor
xchg
sub
mov
std
and
mov
popa
int3
or
jp
test
push
jo
cmpsl
push
outsb
ficomps
movl
daa
xchg
inc
mov
lods
dec
and
push
push
negl
pop
sbb
fldl
repnz
int3
into
adc
adc
rcrb
or
in
cmp
cmp
pushf
xchg
inc
scas
pop
neg
mov
sub
mov
pop
or
pop
mov
xor
fwait
xlat
push
adc
cmp
and
popa
mov
cwtl
inc
loopne
jmp
pop
jb
jmp
test
fisubrl
pop
jbe
push
fmull
fnstsw
loope
repz
aaa
jle
jns
add
enter
fs
and
filds
mov
sbb
or
std
jmp
cmpsl
fsts
outsl
mov
lods
cmp
add
daa
xchg
jns
mov
ret
loopne
mov
push
mov
pop
leave
loopne
lds
pop
arpl
lcall
cs
cmp
mov
add
pop
mov
mov
or
lods
sbb
and
push
sbb
or
dec
pop
sarb
and
sub
push
pusha
aas
cmpsl
stos
loop
xchg
test
cmp
notl
cmp
sbb
mov
mov
jns
sarl
mov
adc
movsb
add
or
and
mov
les
mov
ret
mov
inc
xchg
cmpb
lods
lret
rcr
mov
mov
push
arpl
sar
lret
mov
ret
cmc
jno
jmp
cwtl
imul
jl
fwait
test
inc
dec
fsubrs
fwait
pusha
inc
jg
cmpsl
mov
mov
adc
pop
and
push
xor
mov
aam
shlb
adc
stos
sbb
aaa
add
cmpsb
cmp
andb
inc
jo
add
xorl
mov
inc
jmp
add
mov
push
mov
pop
sbb
fwait
sub
push
arpl
subl
push
call
vpand
push
fisubl
cmc
in
stos
jb
dec
inc
std
inc
xchg
fstpl
lock
mov
aaa
mov
and
pop
imul
and
aad
xchg
loop
adc
sub
mov
mov
xchg
sub
xchg
inc
stc
and
lret
jmp
sbb
enter
lret
and
mov
pushf
jg
xor
push
es
scas
jno
test
mov
test
jg
adc
push
push
test
shll
sbb
movsl
push
filds
test
mov
sbb
outsl
into
imul
mov
mov
bnd
ret
jb
push
fistpll
inc
sbb
frstpm(287
mov
pop
lock
fildl
cs
inc
mov
in
push
lret
jmp
xor
push
leave
jecxz
push
push
gs
sbb
mov
and
cmp
cmp
or
mov
movsl
add
add
stos
xor
sub
mov
ficompl
add
jge
shlb
int
mov
iret
arpl
lret
movsl
and
or
aaa
je
push
outsl
enter
mov
cmpb
mov
adc
add
mov
fwait
mov
into
pop
fwait
push
int3
lahf
nop
aam
jmp
pop
pop
mov
mov
jo
aaa
mov
loopne
jmp
out
movsl
push
adc
stos
jmp
sub
adc
sbb
jne
mov
repnz
push
xlat
pop
inc
push
aad
lea
sub
stos
fcomip
push
f2xm1
in
outsl
int
mov
mov
add
pushf
push
or
jge
dec
aam
mov
dec
lret
jno
int3
xor
add
pop
cmpl
cmp
cmc
mov
dec
icebp
inc
loopne
call
nop
aam
cmp
push
pop
mov
mov
hlt
dec
push
jecxz
js
cmpsb
mov
bound
add
mov
shll
or
stos
cs
loopne
adc
inc
adc
popa
mull
mov
push
jmp
dec
stos
xor
jmp
dec
xchg
inc
lock
mov
stc
into
dec
xchg
popa
mov
dec
sub
movsl
je
xchg
mov
mov
cmpsl
inc
lea
or
mov
rcrl
sbb
aaa
ret
pop
jmp
push
add
sbbl
dec
in
cmova
hlt
sub
loopne
stos
fwait
int3
orl
daa
inc
scas
and
mov
cli
mov
in
cli
ret
mov
into
and
mov
push
jbe
jg
xchg
mov
ss
mov
and
into
push
sub
xchg
test
sub
xchg
inc
cmp
in
jmp
push
aas
fwait
jbe
nop
sahf
test
pop
lock
movsb
cmp
lock
pop
lret
out
push
aad
shl
sub
dec
fimuls
push
or
mov
jmp
adc
xor
fwait
mov
lret
pop
pop
push
lcall
cli
int3
addr16
cmp
mov
fnsave
jmp
push
outsb
sbb
lds
stos
xchg
and
test
inc
mov
jle
jmp
jle
sbbb
dec
rorb
pushf
fidivrs
lock
add
or
ljmp
ficoml
or
nop
sti
fistpl
fnstenv
sbb
jmp
cltd
xchg
push
xchg
cltd
push
test
insb
adc
aad
leave
jns
in
nop
mov
cmp
scas
and
sbb
cwtl
aaa
cltd
or
aad
pop
cltd
cwtl
dec
mov
xor
pusha
pop
mov
pop
push
test
cltd
pop
fs
gs
dec
fnstcw
shrl
cli
jo
xlat
push
test
movl
cmpb
mov
xchg
xchg
inc
xchg
stc
scas
cltd
data16
mov
fcomp
outsb
pop
popf
lods
std
dec
std
scas
cltd
test
adc
jbe
outsl
push
xchg
loopne
in
dec
add
jno
fcmovnb
setns
adc
lods
cltd
xor
insl
js
xchg
push
gs
pop
loopne
aaa
mov
xchg
cmp
mov
cmp
xchg
adc
cltd
ret
es
pop
add
cmp
ss
jp
dec
fnsave
xor
and
stos
cltd
inc
jle
add
xchg
mov
mov
mov
mov
ret
cwtl
outsl
sbb
sbb
pop
pop
push
jbe
aam
xlat
scas
xor
into
cmp
mov
call
cwtl
scas
add
xor
stos
pushf
jo
cltd
mov
pop
dec
cltd
lahf
add
divl
imul
rorl
push
cltd
add
mov
adc
lock
into
adcl
jne
jae
push
scas
aaa
mov
pusha
fimuls
push
push
das
xor
inc
mov
imul
cltd
pop
adc
adcb
enter
repz
mov
cmp
test
es
fxch
adc
cltd
sub
imul
mov
fldcw
pop
lcall
enter
jae
mov
pop
int
pop
jnp
sbb
mov
repnz
adc
in
fmuls
and
cld
xchg
dec
lret
aad
add
lods
dec
adc
jmp
icebp
xor
cmp
push
loope
mov
dec
push
dec
jmp
cmp
or
scas
pop
aad
cltd
pop
sub
push
mov
lcall
jnp
mov
mov
je
cltd
imul
push
add
jmp
push
addr16
fs
dec
int3
mov
out
and
cltd
jae
xor
sbb
idivb
jo
sub
cmp
inc
cwtd
inc
nop
bound
cltd
fidivl
int
cmpsb
push
test
cltd
dec
ret
movsb
jmp
jbe
jmp
dec
mov
in
das
mov
orl
mov
sub
inc
insb
add
orb
sub
hlt
mov
jo
inc
inc
adc
fs
fcompl
fucomip
push
pop
jb
stos
mov
mov
and
in
inc
xor
nop
mov
lahf
aas
loopne
sub
loope
mov
adc
jnp
loopne
lea
scas
int3
das
fstps
stos
cmp
mov
sbb
lock
in
cltd
sti
call
cmp
add
aam
in
aas
test
push
pop
adc
sbb
lahf
add
mov
pop
movsl
fbstp
and
pop
loop
dec
cltd
mov
mov
int
jmp
pushf
adc
aas
mov
out
call
pop
pop
mov
xchg
cltd
xor
fmuls
imul
mov
call
push
lea
add
add
ljmp
imul
jns
sahf
pop
cltd
cli
mov
pop
enter
out
shlb
dec
sub
lea
bound
gs
xor
stos
test
and
inc
cmp
fwait
data16
cltd
lcall
lods
pop
loope
stc
dec
mov
cltd
xchg
mov
add
push
pop
gs
ss
pop
cltd
sarl
insb
pop
pop
add
fisttps
aad
mov
inc
push
mov
lods
repnz
cmp
pop
sbb
xchg
push
add
je
in
sbb
pop
lahf
sub
fiadds
add
loopne
sub
xor
dec
loope
pop
cltd
push
loopne
cs
out
negl
jge
sub
mov
mov
cltd
and
push
push
dec
cmpsb
sti
mov
or
inc
lcall
cmp
cltd
mov
pop
jo
andb
pop
mov
testb
jmp
test
mov
cltd
out
mov
lret
xchg
cltd
je
mov
sbb
cltd
xor
and
and
out
cltd
xor
inc
push
pop
lods
aam
fildll
and
mov
push
push
cltd
cld
mov
je
cltd
inc
movsb
aas
mov
bswap
bound
fsts
icebp
stos
cmp
aaa
dec
iret
adc
ud0
sbb
push
cltd
and
dec
adc
add
sub
idivl
pop
mov
jle
mov
push
test
fwait
mov
lcall
inc
cltd
mov
push
mov
mov
pop
inc
mov
xor
clc
inc
insl
loop
add
push
mov
hlt
fdivr
pop
xchg
inc
xchg
dec
fistpl
insl
icebp
jne
dec
ljmp
sub
std
les
mov
mov
call
push
push
mov
aaa
add
xchg
insl
and
xor
incl
pop
dec
test
dec
add
cltd
adc
push
pop
mov
dec
pushf
jl
cltd
sbb
mov
cltd
lea
mov
mov
cltd
insb
lcall
adc
pop
cltd
outsl
adcl
jo
ret
sub
mov
jne
std
mov
leave
fwait
int3
aam
jl
shl
add
bound
mov
lcall
push
hlt
xchg
mov
cmp
jge
inc
sahf
mov
movsl
ss
sub
dec
mov
loopne
out
cmp
cltd
add
cmp
inc
lods
cmpsl
scas
dec
test
or
cmp
daa
mov
sbb
inc
dec
stc
jmp
out
push
jns
fdivrs
adc
test
pop
sbb
mov
mov
js
jge
push
cltd
xchg
cmp
mov
and
jb
mov
cld
fwait
call
imul
repnz
dec
mov
cltd
mov
or
adc
nop
mov
cltd
mov
sub
cltd
andb
dec
cltd
imul
call
popf
mov
and
adcl
add
arpl
les
aas
sbbb
xorl
mov
int
out
divl
and
and
lea
mov
lret
lret
pop
movsl
mov
sub
dec
stos
inc
movl
xorb
inc
cmpsb
dec
cmp
pop
jle
sbb
test
xchg
ret
xor
out
mov
sbb
daa
leave
add
add
in
fwait
aam
sub
add
lods
mov
int3
shl
push
mov
mov
mov
pop
jmp
out
xchg
cltd
cli
stos
or
jnp
mov
scas
mov
or
add
mov
in
out
divb
test
cld
pop
cltd
mov
das
and
sub
cld
xchg
fwait
cmp
aaa
icebp
lock
cltd
xlat
mov
fnstsw
outsl
cmp
sub
ss
mov
aas
lea
push
push
cltd
jg
inc
push
pop
lea
test
add
cltd
int
mov
xor
insb
fcomps
adc
lods
cmpl
mov
jb
dec
mov
sbb
push
icebp
mov
inc
cmp
cmp
cltd
pusha
aas
dec
adc
stos
sahf
xor
dec
jp
incb
das
mov
rcl
bound
add
sub
xor
cltd
insb
ljmp
cltd
in
imul
mov
std
movsb
pop
sti
movsl
cmp
hlt
xchg
loopne
or
xor
adc
mov
gs
mov
stc
cltd
push
cwtl
push
inc
int
stos
jno
sub
in
inc
cmpl
nop
jg
outsl
jg
stc
dec
scas
mov
int
test
scas
and
sbbb
xor
xchg
push
mov
mov
leave
inc
jmp
leave
push
dec
mov
push
negl
mov
inc
aad
in
inc
dec
inc
test
aas
add
mov
rorb
ficompl
mov
roll
adc
mov
shl
jo
lcall
stos
sub
mov
inc
stos
repz
push
mov
imul
sbb
loope
int
jmp
inc
push
sbbb
lea
shll
sar
cmpsl
push
lea
aam
lock
outsl
mov
cmp
ret
dec
add
xchg
sbb
adc
or
lcall
in
movsl
mov
adcl
in
ljmp
inc
mov
push
jns
sub
add
push
sbb
lea
push
movsl
andl
stc
cmp
xchg
add
add
mov
aaa
lahf
cwtl
fsubrp
mov
xor
dec
cmp
xlat
imul
int3
and
push
mov
into
push
inc
dec
mov
jl
cwtl
inc
stc
in
adc
nop
pop
or
lea
and
jno
mov
mov
cmc
mov
mov
fwait
cmp
arpl
repz
lcall
pop
jmp
scas
mov
pop
nop
mov
jmp
lcall
js
and
or
ret
lcall
jmp
xchg
aas
movsl
data16
sub
mov
add
adc
cmp
mov
testb
and
fwait
movsb
fcompl
push
call
dec
gs
pop
xor
test
xchg
sub
push
lock
cmpb
mov
insb
loop
dec
sbb
or
pop
aaa
cmp
popf
cmpsl
out
mov
mov
iret
in
dec
mov
push
lea
pop
inc
rcrb
lods
mov
imul
jno
xor
dec
pop
out
movsl
into
mov
lret
jg
xor
cmp
or
fwait
mov
cmp
movsl
mov
cmp
sarb
scas
notb
mov
sahf
sbb
pusha
pop
and
scas
enter
inc
seta
data16
xchg
rcll
xchg
jno
or
bound
pop
mov
insl
cmp
mov
jmp
lcall
inc
push
jo
inc
in
sbb
gs
cmp
push
arpl
fnsave
jbe
ficoms
push
mov
fiadds
inc
bound
pop
ret
xchg
notb
push
int3
adc
cmpsl
jp
dec
xchg
sbb
ds
inc
mov
sbbb
int3
jbe
dec
shll
cmpsb
sbbl
cmp
xor
add
insb
pop
push
sbb
jge
or
inc
addl
sarl
sbb
lods
fsubrl
mov
add
xchg
bound
xor
jmp
inc
jb
push
sub
enter
call
stc
sbb
pop
mov
sbb
adc
arpl
jmp
cmpsb
and
jge
jmp
dec
dec
jmp
mov
pop
scas
mov
lock
pop
adc
push
test
jmp
aam
in
mov
fwait
jmp
dec
shll
das
sarb
mov
in
pop
ret
push
lds
repz
sbb
jmp
sub
dec
mov
imul
in
jmp
fsubs
inc
mov
push
push
ror
xlat
push
pop
idivl
out
push
rclb
loope
add
test
xchg
stos
pop
cli
outsb
in
enter
mov
scas
call
popa
rorb
inc
xor
xor
xor
mov
cmp
pop
lea
add
jmp
inc
sahf
jbe
into
out
lret
outsb
popa
mov
mov
jne
and
sbb
int
and
nop
cli
sub
outsl
inc
inc
mov
jge
cmp
fidivs
lea
jmp
pop
xor
popa
loop
inc
fsubr
rcr
mov
rcrl
sti
fidivrs
mov
jne
out
adc
fisubrs
cmp
adc
ret
cmpsl
pop
call
and
popa
pop
xchg
repnz
adcb
icebp
cmpsb
jo
loopne
push
and
cmp
imul
cmp
sbb
dec
sub
pop
jle
ret
decb
push
adc
pop
js
mov
mov
dec
scas
push
idiv
rcll
stos
sub
test
push
jmp
push
shl
mov
jne
push
push
and
movsl
pop
jmp
stos
mov
push
jns
shrl
lcall
shr
mov
sbb
icebp
and
outsl
scas
lods
ficoml
add
enter
data16
cmc
xor
add
mov
xchg
xchg
fwait
xor
inc
xchg
cmp
dec
mov
mov
mov
test
pushf
ficomps
pusha
and
inc
adc
and
mov
inc
xor
sub
lods
stc
dec
out
int
cmp
fdivl
cmpsl
jge
cmp
dec
stc
mov
fwait
mov
and
mov
bound
dec
addr16
inc
adc
add
push
cmp
in
cmp
or
stos
jge
std
inc
fldl
inc
rclb
int3
jbe
and
inc
jmp
stc
adc
cmp
mov
mov
adc
jo
mov
jne
and
frstor
add
andl
push
pop
into
pop
test
ret
push
and
nop
mov
int
stos
inc
jnp
cmp
sbbl
int3
sbb
mov
int
lock
sub
call
shlb
mov
in
pusha
stos
fwait
out
push
mov
dec
jmp
rclb
mov
mov
lock
adc
aam
jl
arpl
lds
sbb
outsl
jb
and
cmp
shrb
and
xchg
cmp
inc
jo
jae
repz
ljmp
mov
jo
xor
clc
in
or
test
pop
movsl
jmp
aas
rolb
fmuls
pop
push
fmull
xchg
sbb
jmp
and
fidivl
sub
jle
mov
mov
movsb
lods
sbb
loope
jo
cmp
out
push
push
lret
das
arpl
xchg
add
jge
pop
repz
cmpsl
mov
lds
jmp
les
in
popf
mov
sti
pushf
test
sbb
ret
mov
pop
mov
adc
loope
mov
loope
loopne
sub
dec
sbb
je
ss
test
xor
lods
and
xchg
mov
lock
ds
test
pop
loope
adc
cmp
stos
ja
dec
dec
imul
mov
clc
sbb
adc
lock
add
punpckldq
out
inc
xchg
in
fidivs
adc
mov
sub
pop
sahf
test
xor
fwait
lret
inc
cld
push
mov
adc
ljmp
pop
int
mov
cld
test
repnz
fwait
jle
or
add
ror
std
jb
gs
cwtl
js
les
ffree
insb
push
pop
out
and
mov
cmp
xchg
aam
xlat
xchg
push
outsl
inc
das
cmpsb
xor
mov
cmp
ror
sub
mov
lret
jg
sbb
rcr
iret
cmpsb
xchg
xor
ss
inc
mov
mul
mov
mov
xlat
and
mov
or
int
stos
ja
xor
sub
mov
popf
mov
faddl
cmpsb
nop
cld
movsl
int
adc
xor
xchg
mov
mov
or
aaa
outsb
sarb
xor
mov
xchg
int3
insb
jnp
bound
cmpsb
mov
jae
or
scas
aaa
push
popf
loopne
adc
add
cltd
lock
push
movd
stos
andl
add
and
lea
pop
xchg
rcr
mov
cmpsb
pop
movsl
sbb
arpl
shrl
pop
jg
int
sub
jne
sbb
jecxz
mov
clc
out
jno
aad
dec
stos
imul
les
loopne
adc
int
sahf
loope
jns
inc
les
push
jne
mov
and
dec
push
lcall
cmpsl
jle
ret
xlat
cmc
adc
mov
rep
les
rcrl
in
push
mov
arpl
mov
mov
sbb
rol
xor
adc
cmp
fcomps
jae
fwait
cmp
test
shll
and
cmp
ret
push
std
rorl
sub
adc
aam
repz
xor
cmp
lcall
push
mov
fmulp
shlb
loopne
or
or
push
int
sub
aam
sub
adc
sub
xchg
mov
in
enter
pop
cmp
mov
test
mov
jecxz
xor
mov
popf
jno
sub
mov
and
xchg
insb
inc
lret
std
in
cmc
arpl
jno
jl
test
xchg
je
jmp
or
imul
iret
lock
clc
ds
xchg
inc
leave
pop
fwait
mov
jecxz
iret
lods
rcll
mov
cltd
pop
adc
jl
fwait
cmpsb
ret
pushf
mov
popa
sbb
in
ljmp
in
cmpsl
into
stos
call
inc
je
iret
jg
stos
arpl
gs
daa
adc
fisubs
push
xchg
loopne
mov
cmpsb
dec
lock
push
or
and
arpl
mov
test
rcrw
inc
dec
int
outsl
fisttpll
jmp
cld
xchg
outsl
int3
addr16
pop
ss
mov
out
lahf
pop
adc
mov
cltd
cmp
aaa
inc
jmp
nop
jb
imul
arpl
fidivrs
inc
jmp
faddp
rcr
mov
or
adcl
aam
push
xor
xor
lcall
sbbb
imul
cmpsl
mov
xor
cmp
mov
and
das
jmp
cmp
roll
imul
icebp
cld
mov
andb
xor
cmpsb
imul
aam
aam
test
xchg
subl
dec
mov
adc
mov
out
loopne
jge
jmp
and
daa
ret
cmp
mov
fiaddl
stos
dec
fwait
add
mov
outsl
adc
dec
adc
add
mov
and
out
mov
imul
cmp
mov
cmp
xlat
aad
xchg
cld
outsl
int3
decb
aad
rcr
js
pop
scas
int3
jne
stos
sub
cmp
loop
sub
ret
test
sbb
add
jae
cmpsb
popa
push
push
jge
jbe
arpl
les
icebp
push
insb
into
les
adc
test
or
daa
push
ret
cld
ss
rcll
jns
jmp
mov
inc
pop
ret
add
pop
and
lods
push
dec
pop
fs
mov
mov
adc
inc
pop
shl
inc
cmp
pop
push
xchg
or
mov
lods
je
test
insl
push
test
out
sbb
lcall
xor
cmp
lods
imul
lock
xor
inc
and
or
push
orb
jg
inc
movsl
lock
ret
and
movsl
out
cs
ja
mov
xor
xchg
mov
loope
iret
fimuls
lock
xor
and
pop
pop
xchg
inc
pop
and
mov
test
mov
int3
sbb
cwtl
fnstsw
push
sbb
jno
stos
mov
inc
pop
hlt
sbb
mov
ret
jmp
je
daa
loopne
mov
aas
mov
and
iret
enter
fmuls
ret
enter
and
jge
imul
fs
sbb
xorl
push
lods
cld
jp
sbb
dec
sub
fs
xchg
cmp
dec
les
sbb
cmp
cmp
lods
mov
mov
lret
xchg
jb
pop
mov
xchg
int
mov
dec
sub
xchg
rcll
pop
mov
xor
iret
addl
push
inc
cmp
jae
mov
jp
inc
flds
jle
or
jnp
arpl
mov
insb
mov
sbb
lock
jbe
dec
push
in
inc
push
sbb
jne
cmp
inc
push
dec
jg
shll
pop
stc
movsl
cmc
mov
scas
arpl
shrb
mov
dec
add
sub
les
aas
pop
mov
and
enter
lods
stos
int
pop
lock
shll
js
mov
out
mov
cmp
in
sub
jge
inc
les
sbb
or
or
or
mov
xchg
cmp
popf
cld
cmp
andl
pop
jecxz
sbb
int3
adc
loope
aaa
pop
adc
in
mov
popa
ds
movswl
bound
sbb
call
mov
lea
fsubs
push
and
mov
mov
ss
test
inc
int3
aaa
pop
lds
gs
sbb
push
and
mov
sub
cltd
repz
sub
insb
dec
mov
push
jb
dec
daa
enter
mov
jmp
lods
dec
shrl
add
add
iret
dec
or
sbb
cmpsl
adc
add
xor
jmp
add
stos
adc
push
sbb
jmp
adc
in
adc
pop
mov
xor
mov
or
sbb
cmp
inc
shrb
mov
shrl
mov
std
jmp
sbb
jo
inc
jmp
mov
mov
sbb
inc
scas
test
leave
xchg
dec
push
xchg
imul
jno
xchg
out
leave
sahf
add
and
jmp
dec
add
mov
sahf
test
dec
adc
outsl
and
xor
xchg
scas
pusha
stos
divl
fcompl
jg
cld
jb
faddl
inc
in
xchg
xor
mov
or
ljmp
dec
aaa
scas
inc
jbe
shlb
inc
sub
or
fwait
lock
aaa
jbe
out
mov
add
jmp
xchg
sub
mov
test
dec
adc
jmp
aas
push
sbb
jb
sbb
inc
jg
push
jl
mov
and
pop
cmp
stos
jb
pusha
jge
or
aaa
mov
mov
aad
mov
or
adc
inc
mov
fsub
ror
sub
lock
out
pushf
cmp
loope
loope
cltd
or
imul
repz
jae
jno
mov
outsl
push
loopne
inc
fsts
xchg
pop
cltd
sub
push
cltd
popa
mov
adc
ret
inc
cltd
rcl
loopne
mov
or
out
jg
outsl
mov
aad
xlat
insb
loop
cmp
cltd
lret
pop
mov
int
aaa
call
loop
cmpsl
in
add
mov
xrelease
jnp
inc
xchg
push
or
xchg
cltd
adc
or
push
cltd
mov
push
out
cltd
loopne
fwait
popa
mov
mov
or
jbe
mov
mov
cltd
ljmp
fistpl
mov
push
mov
adc
adc
cltd
jbe
mov
xchg
leave
ss
cmc
daa
pop
pop
and
adc
push
popa
cmc
cltd
lcall
mov
int3
push
mov
loop
fwait
pop
insl
xchg
leave
jl
cmpsb
push
cmpsl
stos
sbb
ds
mov
insb
js
cltd
test
jl
sub
and
inc
sub
xchg
mov
sbb
adc
mov
pop
add
loope
pop
sbb
or
mov
inc
cltd
loop
enter
cld
xchg
fwait
adc
movsb
or
pop
and
and
add
pop
test
dec
pop
push
adc
mov
or
cmp
or
sub
push
cld
inc
and
jo
insl
les
or
and
sub
and
pushf
out
push
pop
icebp
scas
scas
mov
sbb
pop
cld
mov
rcrl
mov
pop
out
inc
out
mov
mov
mov
shll
sub
jle
pop
cltd
in
push
pushf
cmp
cs
ret
jns
mov
pop
mov
push
and
mov
rorl
push
mov
inc
xchg
dec
sub
movsb
popf
push
cltd
xorl
adc
and
sub
add
fcompl
mov
and
cltd
sub
push
xor
bound
ja
cltd
mov
fdivrl
mov
lahf
scas
incb
sbb
sarl
lods
rclb
pop
mov
jp
push
pusha
pop
jb
rcrl
outsl
rolb
push
mov
xor
push
push
and
lods
rcrb
mov
fwait
mov
insl
std
cltd
into
inc
xor
cltd
mov
push
rclb
aad
fisubrl
into
cmp
stc
xor
sti
loopne
in
cltd
test
xchg
arpl
mov
lds
fwait
dec
jb
xchg
add
pushf
mov
xchg
lds
inc
cltd
fs
xorl
push
jge
mov
cltd
fcoml
imul
pusha
paddw
pop
pop
adc
xchg
cltd
repnz
fcoml
mov
push
sub
sbb
mov
cltd
pop
std
push
xor
sbb
dec
sbb
cmpsl
cmp
sub
mov
call
cs
add
pop
jo
sbb
js
cltd
mov
xchg
fyl2xp1
fimull
ljmp
inc
adc
movb
stos
and
cmp
xor
call
cltd
ret
mov
je
adc
or
sub
leave
mov
fwait
pop
xchg
in
pop
dec
adc
sarl
xbegin
out
lret
push
negb
xor
cmp
call
mov
shlb
or
and
cltd
fldl
push
imul
xchg
lea
cwtl
roll
adc
popf
xchg
int
loope
in
and
and
ljmp
mov
cltd
cmc
incl
jecxz
and
jg
push
add
cmp
cltd
imul
dec
nop
pop
sbb
ja
fwait
leave
dec
outsb
stc
fwait
mov
sbb
add
sub
stos
in
xor
cltd
jae
adc
scas
push
sbb
aad
fildll
sbb
arpl
cmc
cltd
lret
call
fwait
cmpsb
mov
movsl
les
mov
rol
xlat
hlt
fimuls
mov
cmp
adc
sahf
jecxz
pop
inc
cmp
mov
mov
bound
in
or
cltd
cmp
or
jae
cli
cltd
je
aam
popf
dec
sub
sbb
testb
cltd
ret
lea
dec
addb
scas
imul
shll
jge
stc
cmp
outsl
mov
cmp
mov
popf
int
sub
cmp
jp
pop
sti
mov
adc
or
xchg
adc
pop
cltd
aam
sbb
movsl
xor
mov
data16
jne
push
popf
mov
pop
insb
ljmp
mov
loop
cltd
shl
mov
out
cli
arpl
dec
sbb
mov
and
inc
mov
or
push
xor
test
leave
push
mov
hlt
and
stos
ret
std
inc
cmc
ljmp
lret
scas
cltd
push
sbb
pop
test
cltd
in
stos
xor
movsb
xchg
push
cltd
mov
mov
mov
pop
das
iret
cltd
lcall
cli
cltd
popa
enter
mov
cltd
mov
je
rclb
jnp
sbb
jae
rcll
cmpsl
fstl
mov
add
pop
inc
dec
sbb
repnz
outsb
addr16
adc
mov
ret
shl
sbb
cltd
mov
rcrb
dec
in
push
cmp
mov
daa
push
sbb
mov
or
push
xchg
cmp
fcoms
fnstenv
jl
xchg
mov
jmp
imul
pop
repz
incl
cltd
aas
inc
add
sbb
into
jge
mov
or
mov
jo
cmp
in
and
fwait
pop
inc
dec
mov
lods
push
ror
int
cmp
ret
xchg
cltd
loopne
mov
jae
push
gs
push
inc
lcall
xor
scas
inc
aad
loope
ret
mov
or
scas
cwtl
das
dec
jp
fsts
cmpsl
fnstcw
and
jns
xlat
adc
inc
cltd
sub
inc
add
scas
aas
cmpsl
jo
xchg
daa
mov
sub
xlat
sbb
mov
nop
pop
mov
and
pop
in
adc
out
mov
add
and
fcompl
lods
or
push
inc
std
dec
cmp
insl
cmpsl
xor
mov
mov
in
sbb
fcoms
mov
sub
fidivs
cltd
push
jb
mov
xchg
sub
mov
or
add
xchg
stos
insb
hlt
cltd
xchg
gs
mov
in
pop
cltd
cmpsb
xor
lods
test
repnz
test
xor
test
mov
lds
ds
in
jecxz
adc
xchg
sbb
sub
dec
mov
jnp
xor
pushf
cltd
scas
mov
mov
sbb
jnp
mov
sub
fnstcw
dec
adc
jp
gs
sahf
movsb
sbb
je
cld
sub
ljmp
dec
leave
ret
pop
pop
pop
popf
es
test
and
cwtl
push
loope
mov
adc
pop
lret
aam
cltd
jecxz
push
push
push
pop
adc
xor
cmp
stos
mov
aad
clc
mov
pmaddwd
es
adc
cwtl
daa
arpl
push
sub
std
dec
adc
orb
aaa
xchg
or
icebp
adc
orl
cltd
outsl
in
lock
cmc
cwtd
cmp
push
dec
adc
sarl
push
and
pusha
mov
pop
stos
jo
ds
jle
addr16
inc
in
xchg
lock
push
scas
enter
cmpsb
stc
inc
in
out
adc
add
jge
mov
mov
cmp
xor
pop
popa
nop
daa
ror
push
orb
xchg
stc
loopne
pop
ds
cmp
inc
outsl
jecxz
mov
lds
push
popl
mov
mov
scas
mov
jmp
stos
mov
xchg
mov
sbbw
push
jmp
sub
jmp
lds
mov
and
scas
add
mov
cmp
pop
xor
movsb
mov
adc
testb
adc
pop
pop
xchg
dec
pop
sti
jmp
aaa
sbb
push
es
mov
jb
lods
pop
jmp
mov
mov
jb
les
mov
cltd
cmp
jmp
shr
inc
cli
mov
add
cmpsb
pop
nop
enter
cmpb
dec
shll
jp,pt
inc
insb
fs
jmp
ljmp
add
jne
jae
scas
push
and
pop
push
jo
outsl
add
and
fimull
sbb
push
sti
jb
imul
pop
mov
xchg
stc
xchg
inc
fsubrp
jnp
int
scas
arpl
cmp
push
es
loopne
add
ficomps
pop
insb
in
jmp
push
push
push
mov
aas
sbb
scas
test
fwait
subb
pop
xchg
mov
cmp
push
xor
sar
dec
test
fildll
je
icebp
xor
loop
push
adc
and
xor
mov
loop
or
sub
lock
stc
jp
push
cmp
xchg
sbb
push
int3
sub
jno
mov
xchg
push
not
xchg
jns
mov
lods
cmp
fld
jge
push
jp
and
xor
sbb
loopne
mov
mov
mov
data16
mov
mov
shrb
push
mov
shll
sahf
push
mov
xor
xor
lds
pop
loopne
imul
xchg
mov
icebp
dec
test
js
sub
dec
mov
jl
pop
or
push
push
jno
and
jle
mov
push
sahf
jnp
out
xchg
sbb
add
icebp
jg
and
jno
ljmp
test
inc
test
inc
xchg
inc
sub
cli
mov
orb
xchg
sti
and
xchg
test
cltd
adc
push
getsec
clc
pushf
bound
jns
cmp
cmp
divl
movsl
iret
mov
mov
pop
cmp
pop
cmp
adc
shll
lahf
push
dec
int
ficoms
push
popf
sub
mov
sub
inc
jb
faddl
enter
jg
dec
sub
sbb
adc
out
mov
lret
lods
shlb
into
jmp
add
push
mov
jmp
xor
pusha
push
lods
push
pusha
ret
jg
cmp
imul
inc
stos
add
inc
mov
lahf
and
js
dec
rolb
sarl
dec
inc
in
std
inc
daa
jb
outsl
jno
mov
jb
sub
pop
push
cmpsb
nop
pushf
and
stc
mov
adc
xor
shlb
add
stos
push
loopne
roll
rcrl
insb
mov
xor
add
divl
pop
pop
stos
lods
pop
mov
xchg
out
jbe
cld
jmp
sbb
test
add
dec
mov
cmpsl
cmp
popa
arpl
mov
mov
jne
loopne
pop
mov
arpl
icebp
and
pop
mov
xchg
jns
jno
mov
ja
incl
pushf
imul
mov
rcrl
mov
jmp
ljmp
imul
jmp
adcb
insl
lods
pop
imul
fcmovnbe
adc
loopne
or
and
xor
jl
xor
pop
in
or
mov
dec
adc
jae
call
jae
out
test
push
aaa
lret
or
and
mov
into
jns
sahf
sub
inc
popa
jno
dec
push
mov
movsb
jb
adc
orb
sarl
and
arpl
pop
mov
xor
mov
pop
mov
test
cwtl
or
sbb
test
push
mov
lods
dec
iret
popa
cs
mov
adc
test
mov
icebp
adc
shll
jns
test
push
in
inc
adc
cmpsl
xorb
lock
or
mov
mov
inc
jmp
out
add
sub
cmp
test
js
lds
xor
add
mov
ret
lahf
dec
mov
dec
sarb
sub
in
mov
rcl
pop
dec
push
jbe
mov
cmp
add
stos
add
jp
into
cmp
inc
enter
subl
cmp
mov
xchg
test
lahf
xchg
adc
scas
push
dec
jbe
imul
sbb
adc
cli
xchg
add
xor
imull
enter
jmp
push
lds
pop
cmp
mov
jb
and
mov
ror
jnp
popa
sub
cli
add
adc
mov
pop
mov
lock
bound
xchg
xor
xchg
mov
or
and
cld
and
js
test
sub
mov
jns
scas
inc
add
in
mov
movsl
mov
imul
jne
popa
push
cmpsl
add
lea
push
out
add
mov
push
push
sahf
and
mov
mov
pop
cli
pop
xchg
mov
xchg
add
dec
leave
add
lcall
push
lcall
xor
jge
jg
mov
iret
push
fldt
sbb
out
cmp
xchg
cmpsb
mov
mov
lods
into
clc
roll
mov
loop
jbe
xchg
pop
movsb
outsl
into
fidivl
pop
in
pop
cmp
xor
into
push
test
xchg
adc
pop
loopne
jge
xchg
cmp
mov
js
stos
jno
dec
lods
or
mov
lret
pop
rcll
or
shr
addl
pop
inc
ret
dec
mov
add
fiaddl
push
in
inc
orl
mov
and
jp
cmp
fidivs
mov
jmp
lods
add
pusha
push
addr16
stos
es
push
mov
jmp
stc
mov
cs
and
insl
rcrl
int3
negl
hlt
or
xor
loopne
or
fwait
jp
inc
jno
outsl
orl
jb
xlat
repnz
in
loopne
sbb
aas
mov
mov
jmp
cld
hlt
mov
jns
bound
xor
sub
arpl
adc
loope
sub
dec
dec
jp
lahf
mov
ficomps
lock
jo
xor
sti
add
jne
mov
add
mov
sub
jmp
add
lcall
ja
or
sbbb
push
xchg
repz
mov
popf
adc
aaa
inc
xor
sub
sub
bound
cwtl
mov
les
lods
cmpsl
lock
aas
stos
mov
add
jg
mov
pop
add
fwait
sub
jmp
ljmp
es
jecxz
ret
push
jmp
dec
int
test
adc
fs
jle
xor
dec
sub
push
lods
inc
and
in
data16
push
or
push
or
jmp
sbb
or
test
sti
ja
xor
lahf
pop
adc
push
adc
mov
fnsave
test
test
mov
mov
mov
fildl
add
pop
push
mov
jmp
addr16
rcrl
mov
mov
inc
cmc
adcl
or
and
pop
lret
mov
cmp
lock
rep
imul
das
mov
mov
jecxz
adc
jns
aad
jmp
enter
mov
jmp
mov
sub
aaa
sub
in
cmc
int
outsb
stos
or
filds
jns
ret
mov
sub
andl
mov
cmc
pop
movsb
stos
pop
call
push
mov
push
push
into
loopne
jne
jg
sbb
mov
mov
push
inc
sub
xchg
adcb
xchg
jge
les
push
push
shr
incb
fildl
clc
xlat
inc
push
push
pop
cmp
nop
outsb
push
repz
adcl
imul
mov
pop
outsl
mov
jecxz
dec
add
xor
lock
cmc
pop
cli
inc
xchg
dec
jb
jl
outsb
xchg
enter
inc
aas
cli
cmp
sub
pop
test
femms
and
fbld
sti
pop
pop
inc
rclb
pop
adc
ret
dec
and
mov
xchg
pop
cmp
out
xchg
aam
pop
pop
fadds
leave
xor
dec
pop
into
push
or
fidivs
sub
cmc
ret
int3
mov
aaa
pop
sbbb
adc
adcl
jg
pop
jo
ja
fistl
dec
stos
mov
xor
sub
dec
test
jmp
adc
mov
sbb
lret
test
popa
mov
dec
ret
sarb
aas
mov
xor
xor
xchg
fsubr
mov
jmpw
sub
adc
pop
paddusw
sbb
dec
fwait
scas
cmp
pop
icebp
je
sti
mov
sub
or
pop
lock
sbb
in
sbb
pop
add
mov
cwtd
aas
lock
mov
orb
inc
mov
inc
jbe
cmp
stos
or
sub
xchg
iret
fst
insb
aaa
outsb
mov
mov
daa
xor
sub
mov
pop
inc
mov
jmp
sbb
stos
dec
mov
data16
scas
push
sbb
sarb
adc
jg
and
in
icebp
and
sub
std
imul
movsl
mov
push
mov
xor
psubsw
xlat
repz
and
mov
push
cmp
jo
in
test
std
popf
pop
dec
lea
cmp
enter
pop
mov
cmp
arpl
sub
enter
and
xchg
mov
into
outsl
sub
cltd
mov
adcl
ret
xor
into
lods
cmp
addl
js
xor
pop
mov
add
push
cwtl
decl
arpl
cs
ret
outsl
push
in
cmpsb
ss
mov
mov
mov
mov
loopne
pop
bound
push
dec
or
test
sbb
aam
shrb
shl
adc
pop
sbb
test
dec
sbb
jp
cmc
lds
xchg
dec
mov
imul
pop
lock
idivl
push
xor
sub
inc
jg
iret
movsl
jb
mov
gs
jmp
push
pop
push
outsl
sbb
mov
aaa
sbb
xor
cmpsl
inc
aam
jb
movsl
lock
xor
or
icebp
inc
adc
adc
arpl
sahf
stos
add
inc
add
mov
jmp
popf
out
or
jo
rorb
stc
stc
dec
stos
ret
test
jno
sub
mov
lds
popf
push
in
mov
bound
mov
inc
add
or
pop
adc
xor
mov
arpl
dec
dec
lods
ss
jbe
mov
stos
jmp
call
sarb
mov
xchg
or
mov
and
jmp
imulb
arpl
xchg
cmp
jne
add
cmc
dec
xor
sub
popf
cmp
lock
fstpt
shl
jg
cmp
loopne
inc
pop
xchg
in
pop
into
pop
pop
cmc
sahf
inc
aaa
inc
jmp
mov
mov
inc
push
in
push
add
inc
in
and
outsl
jnp
inc
stc
push
add
add
sbb
stos
js
mov
test
enter
mov
pop
mov
sti
mov
lret
mov
adc
sbb
mov
xorl
cmp
inc
stos
jecxz
add
cltd
adc
sub
loope
push
adc
stos
aad
mov
stos
jmp
mov
pop
xchg
mov
pop
imul
mov
xchg
test
sub
xor
push
iret
push
and
mov
cmp
stos
mov
lock
mov
out
mov
test
pop
jno
cmp
ret
xor
push
cwtl
cmp
call
fs
loope
pop
popf
fisubrl
jmp
imul
addr16
xor
outsl
inc
fidivl
jmp
dec
adc
xor
xchg
jmp
push
shrl
push
mov
popa
clc
imul
or
jae
dec
xchg
adc
mov
dec
mov
sub
or
inc
dec
outsb
int3
xor
test
jmp
mov
xchg
mov
mov
js
shrb
test
gs
lock
add
mov
mov
les
mov
jnp
mov
xor
sub
daa
mov
jno
scas
pop
outsl
shl
popf
mov
shll
adc
cmp
or
les
jne
jl
inc
mov
je
inc
jg
mov
out
gs
or
lahf
hlt
inc
mov
mov
or
mov
iret
push
lods
aas
rcrb
jns
dec
xchg
adc
test
stos
jo
mov
jne
les
sarb
pop
enter
test
pop
or
cmp
sub
jp
dec
xor
xchg
out
cmp
jae
xchg
inc
and
cmp
aaa
cmp
lcall
mov
or
mov
push
aad
inc
popa
xchg
push
js
pop
or
mov
mov
mov
cmp
lea
outsl
and
adc
es
lret
mov
add
inc
pop
add
fnsave
dec
adcb
ss
jns
sbbb
es
mov
inc
sub
das
jl
and
mov
in
jae
jle
sub
popf
and
rcrb
push
mov
xor
fsts
cmp
and
nop
fstl
sbb
fldcw
ds
mov
gs
arpl
push
mov
rcrb
add
adc
xchg
and
mov
lret
pop
or
sarl
cmc
and
sub
stos
jg
fidivs
jns
popa
jns
xchg
outsl
insb
inc
pusha
jnp
pushf
sti
ja
dec
inc
fbstp
repz
jo
xchg
mov
and
jae
fnstenv
xor
repnz
mov
imul
dec
jns
cmpsl
ficomps
push
sbb
xchg
lods
xchg
sbb
sarl
xor
lcall
pop
pop
les
lods
push
mov
imul
cmc
sub
aas
inc
les
mov
adc
and
data16
dec
fsts
and
mov
mov
movb
std
scas
arpl
orl
rclb
jmp
int3
mov
dec
ja
jns
into
in
lret
lcall
testl
data16
popa
test
notb
push
cltd
mov
lahf
test
jno
aad
ret
jnp
and
jne
jmp
mov
sub
sub
pop
test
icebp
test
inc
xorl
stc
pop
stc
push
ljmp
pop
mov
shlb
notl
out
sbb
add
mov
test
aaa
call
inc
jmp
sub
cmp
mov
push
in
sbb
xchg
out
les
ja
arpl
push
mov
xlat
outsl
lea
mov
out
fisubl
mov
xchg
adc
fwait
lock
shrb
jo
jmp
int3
or
pusha
hlt
mov
and
xchg
adc
mov
aad
stos
int3
pop
or
insb
add
cmp
shll
mov
outsb
fisubl
mov
inc
sub
js
loop
cmp
les
adc
pop
cmp
inc
jmp
out
sbb
cmpsb
gs
fisttpl
adc
push
lock
dec
sbb
mov
xor
mov
cmp
ret
stos
dec
cwtl
enter
and
jl
inc
add
dec
mov
loop
mulb
in
sub
mov
or
loope
jp
arpl
pop
jge
mov
repz
cmpsl
xor
mov
popa
mov
push
leave
das
lods
outsl
sbbl
sarb
ret
loop
in
and
in
dec
ret
int3
mov
jecxz
lock
mov
cmp
push
add
mov
xchg
fstpl
sbb
hlt
mov
inc
out
push
mov
adc
in
gs
les
pushf
roll
das
mov
lea
scas
add
in
xlat
scas
test
mov
add
mov
in
and
sbb
jmp
fsubrl
loopne
sub
push
sti
mov
dec
cmp
testb
sub
mov
rorl
jo
push
or
jne
and
rcrb
imul
fmuls
test
or
sub
cmpl
pop
movsl
outsb
push
cld
push
js
es
stc
add
push
sbb
pop
push
in
std
cmp
mov
mov
pop
bound
cmpsl
aam
repz
or
icebp
adc
dec
pop
lods
test
inc
imul
mov
mov
andl
dec
icebp
ja
cmp
stos
sbb
lret
fisttpll
xor
out
mov
cmpsl
jmp
pop
sub
cmp
inc
xchg
int
jmp
pushf
sti
or
fcoml
dec
mov
adc
mov
sbb
pop
cmpsl
and
aam
inc
mov
lcall
imul
mov
in
inc
in
lahf
aaa
cwtl
xchg
add
insl
aas
adc
mov
std
mov
push
icebp
mov
fsubrs
int
movsl
lock
push
jg
xchg
sub
leave
adcb
mov
pop
stos
mov
inc
test
push
lea
dec
into
lea
lea
and
or
loop
cli
push
ljmp
jmp
pusha
mov
out
aaa
pop
jae
pop
adc
ss
inc
cmpb
push
gs
sbb
cwtl
icebp
lcall
sbb
cwtl
cmp
sub
pop
push
fsubrs
inc
inc
xchg
iret
inc
inc
pop
in
mov
stos
jo
ror
cmp
jmp
lods
lods
mov
pop
stos
insl
mov
insb
cmp
push
and
gs
je
aam
mov
pushf
mov
sti
shlb
ljmp
fiaddl
mov
inc
gs
mov
pop
mov
cmc
arpl
mov
mov
sbb
mov
stos
test
push
sbb
dec
fistl
in
sbb
inc
cmp
stos
sub
shrb
into
mov
fstps
aam
leave
dec
fnstsw
push
shrl
jg
xchg
inc
subb
cmp
mov
jmp
in
sbb
in
adc
xor
adc
cmp
dec
xchg
dec
pop
pop
cmp
psubsw
stos
pop
sbb
int
fisubl
pop
dec
es
clc
andl
insb
push
sbbb
mov
jmp
and
sbb
lea
stos
mov
jmp
cmc
mov
test
fs
mov
cwtl
mov
in
arpl
jnp
jb
cmp
add
lahf
push
xor
jmp
cmpsb
jl
jno
xor
and
faddl
mov
mov
mov
xor
lret
or
pop
ss
loopne
aam
adc
xor
shrd
jecxz
ret
jge
lea
mov
jmp
fbstp
rorl
sbb
enter
lock
mov
add
mov
push
notl
xor
pop
fistpl
xchg
add
push
ljmp
add
int
or
or
fwait
sbb
mov
aaa
outsb
xchg
leave
mov
xor
popa
test
lds
xor
mov
mov
repz
dec
dec
out
sahf
jns
xor
jmp
jo
ljmp
mov
jmp
or
inc
je
cltd
mov
int3
adc
lahf
nop
add
in
aaa
loope
cli
jnp
jle
add
dec
xchg
ja
dec
test
adc
ds
scas
in
cmp
adc
sahf
inc
imul
lock
test
mov
push
mull
cmp
and
mov
jo
scas
lods
jno
mov
stos
cmpsl
jmp
inc
mov
movsb
jmp
arpl
add
jmp
jmp
faddl
aaa
inc
out
std
mov
push
fbstp
mov
xchg
aaa
mov
or
push
pop
cmp
icebp
xor
add
xor
fsub
fld
data16
sahf
dec
ret
cmp
jno
inc
adc
sbb
sbb
jmp
and
int3
mov
ja
outsl
stos
cmpsb
sti
mov
mov
out
js
loop
test
push
out
or
mov
mov
and
rcrb
je
xlat
ja
cmp
mov
sub
in
hlt
in
cmp
jp
add
sbb
jmp
add
mov
sub
xor
push
mov
mov
dec
jmp
pop
in
cwtl
mov
pop
sbb
xchg
and
test
mov
push
orl
mov
dec
into
jmp
test
xchg
adc
arpl
addl
cmpsb
ja
icebp
adc
stos
loope
mov
mov
adc
jmp
rcrb
mov
call
sarl
pushf
pop
cmpsl
popf
shlb
std
sub
enter
jecxz
loopne
cmp
sarl
xchg
dec
std
push
add
jmp
out
jns
mov
adc
arpl
cmp
cmp
int3
jmp
add
and
mov
fwait
or
or
jo
and
iret
jmp
mov
push
dec
mov
pop
xchg
jo
call
or
mov
mov
dec
roll
pop
pop
lea
cmp
xor
fists
jb
xlat
xchg
cld
xchg
add
inc
mov
xor
sub
pop
sbb
rcl
sbb
or
push
jge
sbb
mov
hlt
xor
negl
lcall
enter
dec
mov
sub
and
cmc
cmp
mov
pop
je
mov
cmpsb
mov
ret
ss
iret
fstps
push
pop
adc
movsl
lock
in
icebp
rol
fsubr
popa
jbe
and
jge
pop
inc
pushf
js
popf
mov
sub
and
xchg
jmp
movsl
xrelease
or
fs
jg
test
dec
cmp
test
pusha
in
jbe
ret
subb
and
mov
push
shlb
aas
lcall
daa
pop
lock
add
jnp
lds
jae
call
movsb
dec
fcomps
andnps
cmp
adc
jae
ficomps
jmp
into
enter
idiv
cmp
sub
sub
imul
stos
iret
sbb
mov
sbb
mov
dec
arpl
sbb
pop
inc
ror
dec
shr
mov
push
aas
in
mov
stos
jmp
mov
mov
ret
xchg
jns
cmp
push
lock
call
cltd
mov
fs
ret
aam
lret
jmp
inc
js
aad
test
and
xchg
xor
add
aam
icebp
sbbb
xchg
fucomi
pushf
lret
mov
loopne
call
add
rcrb
icebp
fmul
push
cmp
and
pushf
rorb
sbb
dec
pop
or
push
mov
dec
cmpsl
sbb
push
mov
mov
add
stos
xorl
stos
cld
sub
mov
fistpl
adc
sbb
mov
cltd
and
sbb
addb
mov
jne
data16
sbb
pop
in
mov
mov
pop
lea
cmp
or
int3
xchg
mov
out
dec
imul
xchg
loopne
test
or
mov
inc
into
jmp
fwait
icebp
fisubrs
inc
or
inc
mov
dec
lcall
lods
cld
push
ret
push
and
lock
adc
mov
out
fldenv
mov
dec
scas
pop
icebp
push
mov
stos
lods
lods
sbb
ljmp
jae
gs
aad
test
and
push
sub
iret
loope
orb
pop
fwait
jne
iret
cld
inc
xor
adc
aam
dec
int3
test
cmpsl
pop
jmp
jmp
jl
sub
sbb
popf
push
das
inc
jp
mov
add
fwait
inc
fsts
adc
sbb
jmp
lcall
enter
sahf
xor
imul
pop
inc
call
cmp
cmp
mov
push
addl
jmp
and
dec
cmp
ret
enter
insl
roll
mov
test
clc
push
xor
mov
arpl
or
in
aaa
andb
sbb
xchg
sbb
sarl
in
lods
test
jmp
sti
mov
mov
sahf
mov
jne
inc
adc
es
adc
push
test
jmp
xorb
orb
fldl
adc
cmovno
jp
sar
cwtl
jb
cltd
cmpsl
lret
sahf
xchg
jl
and
stc
subb
es
shrb
add
aaa
inc
fists
aas
ret
dec
dec
mov
adc
add
scas
mov
sbb
mov
push
pop
push
mov
push
lcall
dec
cmp
push
sbb
dec
in
into
cmp
and
sub
mov
jae
jg
dec
dec
push
data16
into
aad
sbb
xchg
inc
jae
scas
jmp
hlt
ja
faddl
sar
scas
sbb
sub
sbb
fs
idivl
add
ja
mov
repz
das
push
call
in
sbb
mov
popa
cs
xchg
stos
push
iret
cmp
mov
xor
jmp
out
int3
je
push
pop
fs
adc
and
adc
aaa
aas
pop
pusha
sub
and
in
mov
lret
xchg
xchg
lcall
jl
mov
cmp
mov
pop
fsubs
push
mov
lds
or
and
inc
mov
scas
outsb
mov
and
ja
sbb
cmp
div
mov
pop
test
popf
lods
jb
jecxz
push
xchg
inc
sub
jo
cmp
sahf
cmp
in
xchg
mov
cwtl
xchg
enter
add
jns
or
test
mov
dec
mov
mov
mov
dec
cli
cmpb
dec
adc
pushl
aam
lcall
push
add
aaa
hlt
sub
add
and
mov
test
jbe
cmp
add
mov
xchg
and
shr
js
mov
and
dec
jmp
add
subb
add
pop
hlt
notl
inc
mov
arpl
mov
mov
fidivl
imul
push
and
sub
xchg
fstps
imul
movsb
jp
push
insl
jns
iret
jo
outsl
mov
rcll
rcrl
mov
das
jmp
test
js
stc
mov
cmp
jbe
mov
data16
pop
sub
sti
imul
dec
pop
mov
sbb
stos
mov
and
sub
and
and
ret
jmp
pop
sub
xor
adc
aam
popf
pop
sahf
xor
es
inc
in
call
mov
fwait
or
mov
inc
mov
push
lcall
xor
adc
push
and
es
ss
sbb
xor
stos
mov
mov
ja
cmp
xor
sub
rcrl
mov
imul
cld
mov
adc
jae
mov
clc
aaa
mov
aas
shrb
fdivl
stos
jae
inc
inc
stos
into
jmp
outsl
fwait
std
lock
adc
out
mov
sub
mov
jne
sti
insb
mov
sbb
rorb
lcall
jecxz
jne
and
imul
and
fidivl
jo
movsl
inc
arpl
fbstp
arpl
sbb
inc
push
mov
aas
lods
jmp
mov
sbb
movsl
loopne
push
js
xor
stos
jmp
or
fsub
mov
pop
sbb
aam
fldcw
and
pop
jmp
or
cmc
xchg
dec
mov
mov
fisubl
xor
adc
scas
out
aad
jmp
xor
sti
inc
fucompp
je
xchg
les
shlb
add
sti
jbe
out
push
mov
sbb
jge
sahf
loopne
mov
add
and
addr16
sbb
dec
stc
aaa
stos
add
mov
push
pushf
adc
adc
push
gs
insb
ljmp
push
leave
push
mov
stos
xor
adc
enter
mov
and
mov
dec
out
xchg
inc
rol
add
lea
add
adc
jno
mov
leave
fwait
inc
stos
test
aaa
mov
jns
jmp
lret
cld
mov
into
rolb
stos
cld
mov
jge
xor
ret
lock
shll
into
loopne
ja
and
idivb
add
daa
cmpsl
roll
mov
cmp
movsb
xchg
les
in
insl
pusha
add
loop
fdivrs
sbb
loopne
sub
pop
pushf
loop
jmp
mov
mov
push
andl
inc
add
mov
mov
xchg
xor
add
xchg
add
inc
push
out
test
jmp
rclb
sub
jg
push
loope
loope
sub
xchg
mov
and
stos
xor
inc
dec
pop
shr
sbb
xchg
mov
inc
lcall
mov
lods
hlt
pushf
jmp
pop
sub
pop
int
inc
xor
sbb
and
pushf
jns
subl
bound
mov
pop
sub
jno
mov
sbb
add
popf
xor
pop
mov
lock
and
mov
and
xor
mov
sbb
mov
mov
lea
xchg
data16
into
mov
lret
test
xor
sub
shlb
arpl
sbb
js
pop
cld
mov
outsl
dec
scas
in
pop
mov
lods
pop
inc
inc
pop
scas
sub
mov
and
jmp
pop
mov
test
aam
into
in
stos
xor
inc
push
addr16
cmc
daa
aaa
xchg
leave
mov
rcrb
jp
sub
shrb
cmpsb
in
inc
cmpsl
mov
mov
jl
xor
inc
into
imul
sub
cmp
push
pop
je
sbb
icebp
test
cltd
lock
insl
and
or
ret
and
or
mov
jmp
sbb
adc
sub
pop
cmp
cs
cmp
push
mov
mov
jg
xchg
adc
xchg
sub
push
lea
popl
icebp
xor
and
cmpxchg
cmp
mov
sti
push
sub
popa
js
lds
mov
cli
test
cltd
mov
lret
push
or
mov
jb
lods
cmpl
jge
dec
imul
sbb
mov
in
pop
test
mov
sbb
shl
les
ss
sub
inc
lcall
imul
push
add
mov
dec
rcrb
mov
jno
xor
jg
mov
pushf
mov
jo
pusha
rep
aad
or
repz
lods
inc
cmp
inc
add
cld
je
fiadds
lea
mov
int
ljmp
subb
cmp
push
cmp
pop
stos
test
mov
mul
or
sahf
adc
hlt
mov
hlt
push
loopne
sti
mov
pop
mov
sbb
jo
das
jl
pop
movb
arpl
cld
call
int
lcall
or
data16
gs
cmp
xor
adc
data16
lods
ja
mov
into
mov
xchg
jne
fwait
dec
inc
inc
sbb
lock
mov
push
lds
jmp
movsb
mov
dec
insb
rep
sbb
mov
fmull
mov
into
dec
mov
xchg
sbb
jmp
or
outsb
sub
mov
pop
lahf
out
or
mov
fstl
cmc
shl
out
pop
push
adc
xor
test
mov
test
pop
xchg
inc
inc
jae
mov
jmp
ss
fs
arpl
mov
mov
push
inc
inc
or
ss
lret
xor
and
inc
out
sbb
pop
shll
and
gs
mov
push
mov
cmp
mov
nop
cmp
xchg
aas
xor
cmc
loope
adc
insl
lods
mov
cmp
scas
push
fimuls
inc
jmp
lock
push
dec
ret
mov
lock
roll
iret
jnp
in
inc
mov
adc
inc
xchg
cwtl
mov
stc
push
fmuls
mov
xchg
fsubs
je
in
fstps
sub
jbe
pop
xor
mov
jg
ja
fisubrs
inc
cmc
jmp
mov
sbb
jb
mov
inc
out
mov
push
stos
add
cmp
les
jl
dec
lea
lock
and
in
repz
inc
sbb
mov
mov
mov
adc
sub
adc
aaa
scas
mov
jge
push
dec
push
jp
sti
inc
push
inc
xchg
mov
arpl
xchg
rolb
dec
lret
inc
loopne
xchg
lods
dec
in
shlb
mov
xchg
ret
roll
pusha
adc
xor
mov
jne
dec
push
outsl
inc
add
and
xchg
pop
stos
sub
adc
pop
int3
orb
mov
jmp
cwtl
fadd
insb
test
cmp
addr16
out
test
mov
sub
andb
aaa
mov
out
pop
mov
cwtl
setle
enter
dec
push
push
inc
and
jmp
out
mov
lea
rorb
data16
stc
jmp
movsb
outsl
inc
cs
mov
push
outsb
sti
xchg
adc
mov
push
mov
into
and
rcrb
daa
jmp
jle
jno
sub
flds
fadd
jne
dec
inc
adc
ja
lods
pushl
dec
jbe
lret
cmp
sbb
cmc
sub
imul
loope
shll
in
or
push
es
fisubs
adc
lock
aaa
lahf
mov
popa
ja
push
dec
cmpsb
jmp
dec
scas
dec
mov
arpl
sub
jbe
xor
or
test
rclb
jns
and
add
cwtl
sbb
mov
xor
call
bound
xor
add
and
inc
pop
push
pop
sbb
mov
sarb
insl
cmc
dec
icebp
and
push
push
cmp
leave
pop
lret
inc
mov
gs
mov
stos
push
sub
sub
outsl
ret
jnp
jg
adc
mov
mov
add
and
in
adc
notl
aam
sbb
mov
sbb
adcl
movsl
in
jno
xchg
sbb
cmp
xchg
or
insl
xor
loope
mov
jmp
jg
pop
adc
mov
shlb
popa
add
call
iret
adc
cmp
xchg
or
aam
adc
mov
shll
sahf
dec
add
adc
jno
jmp
loop
insb
jns
lods
xchg
lret
fwait
and
aas
xchg
sub
or
mov
scas
popl
mov
push
mov
or
jmp
add
xchg
scas
notl
mov
les
test
cmp
js
pushf
mov
stos
pusha
test
stos
jmp
push
jge
insb
test
xchg
jle
ret
push
cmc
cmp
cmp
cmp
push
lret
scas
cmpsl
xor
fistpll
mov
fisttpl
and
pop
sbb
cmpsl
cli
orb
pop
sub
aas
es
jmp
shlb
roll
dec
loope
rolb
outsb
rcrl
jmp
inc
mov
jmp
jmp
fsubrs
enter
rclb
xchg
jge
mov
stos
test
inc
fucompp
in
push
popa
lret
xchg
jl
fwait
sbb
nop
rclb
pop
mov
lcall
inc
shrl
pop
scas
icebp
rcll
jb
xchg
push
sub
adc
es
sub
and
test
sub
mov
imul
lret
shlb
adc
mov
xchg
call
or
push
pop
lds
adc
mov
push
stos
pop
fadds
sbb
stos
xor
movsl
cmp
dec
and
jmp
aaa
mov
and
lcall
add
cmp
or
xor
mov
stos
inc
jge
aam
stos
adc
lods
in
sub
jle
bound
jge
addr16
add
pop
int3
xor
jno
dec
jg
jae
fidivrs
pushf
jg
frstor
sub
mov
lret
shl
jge
push
jge
cs
mov
mov
xchg
repz
mov
dec
xor
add
or
jmp
cmpsb
adc
je
dec
mov
movsl
arpl
pop
inc
loope
mov
sub
outsb
test
stos
adc
bound
pop
xchg
rcll
sub
xor
pop
jecxz
cmp
mov
adc
sub
pop
ja
insl
les
xchg
push
test
push
loope
lock
dec
enter
sbb
push
xlat
lods
cli
mov
popf
orl
rolb
repz
ljmp
dec
jp
outsl
mov
outsb
xor
imul
adc
lahf
test
inc
icebp
into
fs
jmp
shll
das
sub
mov
test
gs
sub
lock
ss
dec
pop
mov
outsl
add
int
fwait
inc
cmp
mov
ljmp
sbb
adc
pusha
lods
or
mov
or
sbb
pop
aaa
dec
aam
ficomps
test
jmp
inc
add
xor
fistpll
sti
enter
scas
loope
lret
pop
test
push
mov
les
clc
jmp
pop
mov
int3
pop
gs
addb
jmp
int
mov
push
fwait
lock
add
inc
sbb
loope
jo
xchg
popa
aam
xor
adc
add
cmpsl
negb
cmp
cmp
mov
sti
lcall
push
and
enter
shl
lret
jmp
xchg
lods
dec
sub
daa
faddp
push
aad
mov
ret
cmp
dec
jae
cmp
fs
jne
mov
inc
or
test
aaa
lcall
rorl
shl
cmc
xor
xor
and
lea
movsl
dec
and
arpl
push
ret
pop
mov
fwait
inc
movl
jb
dec
inc
push
jmp
loopne
movsl
jmp
pop
insb
ret
xor
call
sub
push
sub
xchg
dec
movsl
lock
mov
std
aam
or
push
sub
into
ret
push
cmp
imul
movsl
lock
or
push
xchg
insl
test
sub
rcll
xchg
shlb
cli
add
dec
pop
jl
rorl
or
jns
dec
jns
push
loopne
cltd
mov
dec
jmp
arpl
jge
out
insl
mov
inc
jmp
and
hlt
sbb
fwait
pop
sbb
and
cmp
lret
jne
or
sbbl
andb
jmp
cmpsb
dec
mov
sub
add
outsl
push
test
xchg
adc
xor
cmp
sub
mov
jge
sbb
xchg
js
inc
dec
jmp
dec
sbb
cs
lods
ret
mov
stc
xor
jg
mov
sarb
adc
int
jl
dec
fdivrs
imul
jb
test
mov
es
xchg
imul
mov
rolb
repz
repz
outsl
idiv
mov
xchg
xor
mov
fucomi
adc
sti
into
stos
sahf
sub
test
lret
or
sbb
sar
pop
je
daa
js
sub
jl
mov
orb
test
repnz
aam
xchg
bound
lock
inc
jp
out
aaa
stos
mov
ret
pop
push
clc
cli
cmp
sbb
fldenv
dec
xlat
mov
daa
insl
push
cld
ret
fsubrl
jmp
arpl
jbe
imul
jmp
jae
in
mov
shll
movsl
add
hlt
sbb
lock
xor
loop
test
inc
lret
jg
cmpsl
por
cltd
adc
inc
lds
stos
add
xchg
sub
in
cmp
add
divl
xchg
lret
dec
mov
inc
xor
mov
push
mov
xor
mov
cmp
rep
filds
scas
adc
in
rorb
and
adc
mov
fnstsw
sbb
lea
add
shrb
jmp
jecxz
push
and
sbb
xchg
or
inc
out
rorl
jmp
ret
insl
sbb
fidivs
mov
cmp
imul
mov
pop
jmp
inc
faddl
jmp
jo
pop
jmp
xor
adc
xlat
mov
lods
jp
or
stos
movsb
call
adc
les
jl
pop
push
mov
mov
insb
subb
dec
xchg
xchg
das
stos
push
stc
leave
lds
ljmp
sub
arpl
pop
xchg
mov
jge
push
cpuid
jp
pop
mov
dec
cmpsl
xchg
xchg
sarl
push
xor
sbb
xchg
popa
mov
shl
and
jae
sahf
int
cmc
pushf
jbe
xchg
add
stos
mov
mov
jg
rcrl
cltd
lock
les
int3
loope
in
mov
dec
mov
jo
cwtl
mov
jmp
rcrl
aaa
pop
pop
cmp
shlb
das
arpl
add
into
push
push
cmp
movsl
sbb
test
and
cwtl
pop
pop
jbe
in
sbb
sub
in
xchg
jbe
lahf
out
lret
mov
adc
lahf
push
mov
loop
xchg
mov
jno
mov
jns
aaa
lea
cmp
jnp
xor
insb
nop
incb
mov
mov
add
into
push
sbb
mov
cmp
daa
sub
lret
aaa
cmp
jmp
ror
ds
lock
and
add
sbb
xor
mov
test
mov
lret
je
xchg
cmc
inc
aaa
xor
pop
mov
stos
fldt
jmp
sbb
adc
push
out
gs
xlat
testb
scas
mov
cli
sbb
pusha
jne
mov
addb
insl
lock
lods
icebp
adc
fcompl
ret
dec
and
sbb
pop
js
inc
mov
popf
nop
sub
mov
dec
push
pop
test
xchg
sbb
subb
add
dec
cld
out
loop
mov
fdivrp
out
fidivrs
lock
stos
test
mov
cmpsb
hlt
xor
jg
inc
fimuls
xchg
call
push
push
jle
jo
cmp
lret
scas
out
or
mov
sbb
out
jg
or
lea
cwtl
sub
xchg
daa
xchg
out
xor
sbb
hlt
jno
insl
cmp
fildll
aam
jg
ret
xchg
xchg
les
adc
pop
push
mov
xchg
jmp
lock
pop
inc
push
jo
out
push
fldt
dec
push
xchg
fld
xor
stc
loopne
cmp
dec
sub
lods
push
xor
push
stc
jp
lods
ret
mov
js
push
add
mov
cmp
dec
nop
inc
fisttpll
cmp
xor
xor
decl
push
loop
stc
mov
sub
ljmp
lds
stos
bnd
dec
adc
sbb
jae
mov
mov
dec
or
mov
jge
pop
xlat
pop
inc
test
xchg
lcall
lock
sub
jg
add
popa
sub
jecxz
mov
lock
lods
test
pusha
repz
jb
pop
fildl
push
in
mov
jne
push
ljmp
test
dec
out
aam
dec
out
mov
inc
jle
cltd
push
lock
pusha
sbb
scas
scas
lea
pop
nop
mov
cltd
mov
push
push
cwtl
std
sbbb
adc
fcoml
sub
mov
dec
fcoml
cltd
es
inc
inc
pop
mov
mov
jne
pusha
int3
fstps
addr16
sub
pop
jnp
or
shl
inc
adc
rcrl
jns
cltd
xchg
pop
sti
mov
cltd
jle
sbb
test
mov
jmp
loope
enter
lods
cltd
ja
cmp
mov
inc
xlat
pop
mov
fimull
fwait
jl
int3
dec
cmp
xchg
sahf
cs
mov
cltd
mov
mov
scas
mov
sub
in
pop
insl
mov
cmp
sbb
gs
and
jns
addl
out
cltd
jp
lahf
loope
insl
inc
cltd
mov
sbb
shlb
sti
mov
std
mov
cmpsl
in
add
mov
dec
lods
in
xor
jo
mov
xchg
add
pop
adc
push
xchg
addr16
cltd
jmp
pop
xor
gs
movsl
mov
inc
pushf
icebp
mov
cltd
cmp
lods
subl
dec
push
pop
push
out
mov
xchg
adc
jns
jo
fistpll
les
adc
fwait
mov
mov
xor
inc
fwait
ds
outsb
pop
mov
xlat
rcrl
aaa
pushf
mov
popa
push
cltd
mov
xchg
add
jb
loop
scas
inc
ficomps
cmpb
mov
mov
pop
cltd
lods
dec
push
mov
scas
scas
inc
stc
sbb
cmpsb
push
int
sub
mov
sbb
dec
xlat
cltd
test
jne
lods
cmpsl
cmpsl
adc
sub
jmp
and
es
sbb
pop
xchg
pop
sbb
out
and
push
ret
mov
rcrl
flds
mov
cltd
xchg
cmp
loopne
or
mov
push
out
sub
fwait
imul
pop
add
pop
loope
ja
enter
arpl
pop
xchg
testl
in
and
sub
addl
or
stc
rcrb
adc
je
sarl
sub
insb
mov
and
rcrb
addr16
testb
in
cmp
jnp
std
jmp
sub
test
xor
pusha
in
cltd
gs
in
icebp
add
xor
mov
inc
int3
ret
cltd
ljmp
bound
lock
dec
ss
sub
cltd
mov
ja,pn
fwait
popa
mov
add
jmp
pop
in
push
cltd
sti
jo
das
in
and
enter
cltd
in
mov
imul
cmpl
test
xchg
sbb
movsl
add
js
cltd
iret
stos
sbb
jmp
cmp
jmp
dec
xlat
lahf
in
rcrl
mov
daa
jno
cmp
pop
jg
scas
in
fcmovnbe
mov
loopne
mov
fwait
inc
mov
scas
push
not
mov
jb
sbb
mov
ja
out
jmp
sti
bound
sub
cltd
std
idivl
jmp
push
push
cwtl
add
xchg
push
and
jge
cmpsl
inc
dec
mov
aam
shll
js
xchg
dec
adc
jecxz
stos
jns
fmul
fcomps
rcrl
push
push
cli
arpl
mov
les
cltd
mov
adc
addr16
gs
fwait
mov
lods
and
sbb
xchg
jge
jmp
ss
cmp
sbb
js
orb
mov
mov
lret
jmp
movb
mov
xchg
cmpsl
mov
cmp
xchg
cwtl
sbb
test
adc
pop
cwtl
dec
sub
jo
push
add
jp
test
mov
mov
jnp
sbb
adc
mov
cs
mov
outsl
popf
lea
idivl
cmc
call
loopne
retw
jmp
cmp
adc
cmpsl
mov
cwtl
das
jno
push
jmp
mov
in
jmp
sub
xor
out
out
enter
aas
sahf
mov
outsb
mov
stos
cwtl
xchg
cli
sub
inc
pop
mov
push
and
mov
push
in
xor
rcrb
stos
sbb
fiadds
dec
pop
cmp
xchg
rolb
mov
outsb
and
inc
lock
popf
mov
mov
fisubs
test
fbld
add
daa
ljmp
test
sbb
in
mov
sub
xchg
lods
std
gs
jl
cmp
xchg
call
pop
fsubrs
mov
outsl
and
hlt
daa
cmp
stos
lods
mov
and
jmp
pop
ljmp
sub
push
nop
xor
jmp
ret
fldcw
mov
push
mov
mov
and
inc
jg
cmp
cmp
add
aaa
loopne
aam
sbb
mov
or
test
sub
stc
mov
inc
push
into
and
jmp
sbb
fnstsw
jg
inc
rolb
push
add
jo
jg
call
faddl
ret
sbb
jl
movsl
push
mov
jnp
xchg
lcall
dec
subl
jne
cmp
dec
adc
mov
into
lock
loopne
les
sub
mov
call
dec
mov
mov
sub
pop
pushf
mov
ss
movsl
sub
jmp
fnstenv
sbb
dec
xor
fs
cmc
mov
ja
adc
lret
adc
push
ss
push
jne
int
fisubs
outsl
jbe
stos
ret
jns
mov
leave
pop
xchg
clc
mov
movsb
jne
lods
sub
push
jb
aaa
pop
lea
sarb
test
cld
cmpsl
jmp
cli
lods
dec
and
sbb
cmp
and
or
shr
das
ljmp
inc
int3
dec
mov
daa
hlt
popf
pusha
pop
lock
testl
mov
mov
fcoml
mov
sbb
int3
test
jne
ds
xchg
cmp
ss
dec
inc
daa
mov
sub
movsl
addb
and
push
mov
inc
ret
fwait
pushf
adc
ja
cwtl
test
aam
imul
and
mov
vdivps
jg
sbb
adc
inc
setnp
jb
inc
sbb
cmp
mulb
mov
inc
sub
push
adc
jmp
pop
xchg
and
sbb
in
in
sbb
int
add
lcall
xchg
push
dec
out
icebp
and
mov
jo
sbb
xchg
testl
pop
cltd
mov
fs
push
aaa
sbb
push
jae
mov
add
les
push
inc
shlb
mov
cwtl
and
imul
clc
stc
cmc
mov
jno
inc
movsl
lock
sbb
mov
jbe
cmp
jno
sub
push
sbb
lret
test
inc
lods
cmp
mov
lock
cmp
jnp
jnp
push
je
or
cmc
stos
ret
movsl
or
test
inc
pusha
mov
jns
jno
hlt
daa
xlat
int
mov
popf
aad
push
push
add
jmp
cmp
or
adcb
lock
cmp
mov
xchg
scas
sub
lea
rclb
outsb
push
stos
pop
mov
push
mov
int
sub
mov
lock
mov
jns
cmpsb
push
fidivrs
jne
mov
push
sahf
inc
sahf
inc
sbb
and
mov
mov
pusha
push
daa
cmpsb
outsl
repz
jnp
xchg
dec
xor
gs
jo
outsl
call
sub
iret
dec
pop
mov
xor
test
mov
imul
dec
add
cmpsl
jo
push
jno
or
fidivrl
movsb
sbb
mov
call
imul
int
inc
sub
push
and
cmp
sbb
cmpl
or
mov
inc
xchg
stc
mov
dec
ror
andb
lods
mov
stos
adc
push
jb
scas
mov
divl
cmpsl
test
lock
and
mov
cmp
sarl
lret
inc
loopne
stos
pop
xchg
cmpb
push
in
jmp
lock
insb
repnz
push
outsb
lods
push
or
movsb
mov
popa
icebp
pop
js
dec
jle
inc
rolb
incl
or
aaa
push
fwait
dec
mov
sub
arpl
lcall
mov
stos
ljmp
jae
loop
jae
mov
push
mov
jns
into
push
mov
or
aaa
push
dec
fsubp
pop
mov
push
fwait
insb
ljmp
add
sbb
adc
mov
and
add
sbb
cmp
cwtl
sbb
test
cmp
sub
adc
inc
push
xlat
test
or
rcrb
inc
fsub
cmp
sbb
mov
sub
add
out
hlt
sub
outsb
enter
int
jno
test
rclb
mov
and
clc
adc
pop
mov
push
loope
call
push
push
mov
mov
fmuls
fsubp
imul
mov
popf
outsb
and
mov
stos
jns
addr16
add
add
mov
inc
cmc
insb
data16
movl
mov
lock
cmp
imul
in
jl
push
add
aam
mov
jmp
mov
xchg
rclb
stos
dec
loopne
lcall
jne
loope
outsl
in
jl
inc
into
lret
in
xchg
mov
inc
faddp
andb
fwait
jmp
ja
push
incl
adc
fsubs
push
push
movsb
das
mov
inc
mov
arpl
push
jne
mov
jmp
sub
fldt
movsl
mov
rcl
jl
mov
cmpsb
roll
or
rep
pop
insl
mov
arpl
cmp
sub
inc
out
xchg
leave
push
mov
arpl
xchg
xor
pop
jmp
add
in
out
fucompp
and
in
push
or
aad
adc
xchg
cmp
das
mov
xchg
insb
pop
enter
xchg
jb
sbb
jae
and
pop
and
mov
sbb
push
enter
pause
cmpsl
mov
pusha
movsb
push
push
mov
mov
push
icebp
clc
cmp
sbbl
push
ret
lcall
xchg
jp
jnp
dec
into
test
push
jmp
pop
sbb
cmpsl
and
repz
jmp
xchg
pop
jae
mov
aad
add
push
or
dec
in
jmp
pop
jnp
xchg
aaa
ret
mov
lcall
xchg
aas
sub
xchg
inc
push
jbe
ja
outsb
jb
mov
jp
rcll
mov
sti
or
dec
arpl
cmp
aaa
inc
xchg
imul
mov
cmp
push
jecxz
xchg
push
icebp
mov
mov
push
mov
push
cli
ret
jmp
fimuls
aaa
cmpsl
jo
pop
inc
xor
mov
jp
cmp
cmpb
cmp
popa
dec
inc
test
jae
outsb
xchg
fucomi
mov
jg
adc
adc
lock
les
mov
fwait
xor
dec
fs
push
xchg
jmp
jl
scas
in
outsl
jb
inc
stc
cmp
and
xor
scas
cmp
bound
stc
dec
les
addr16
in
cltd
cmp
push
ljmp
adc
jp
dec
aaa
inc
sbb
mov
inc
inc
jge
mov
imull
add
rorl
stos
pop
mov
movsl
add
sbb
mov
adc
shll
movsl
scas
mov
test
push
sarb
jno
add
cli
push
inc
fwait
and
cmpsb
in
mov
sbb
mov
test
sarb
fdivrs
sbb
es
test
push
mov
adc
sbb
and
adc
in
insb
mov
loopne
push
mov
adc
dec
adc
je
push
add
sbbb
mov
push
jnp
cld
fnstcw
repnz
inc
or
push
sbb
paddd
int
sbb
loopne
cmpl
fnstsw
pop
dec
lret
fwait
lock
rorb
xor
mov
mov
mov
jmp
out
fadd
jnp
dec
es
fcomip
mov
outsb
outsb
sub
ss
sbb
ljmp
sbb
pop
jmp
stos
inc
jmp
cld
xchg
xor
xchg
and
rcl
fidivl
sbb
pop
lret
cltd
fwait
sub
or
cltd
sahf
lea
call
sbb
xorl
in
ds
cltd
dec
lcall
cltd
xor
lds
fmuls
out
jle
mov
push
cltd
pop
iret
std
dec
popa
inc
dec
xlat
mov
loopne
mov
fistpll
or
movsb
pop
push
mov
or
cmp
add
mov
pop
into
imul
cltd
xchg
jg
jne
arpl
mov
hlt
add
iret
xor
jmp
mov
aad
mov
mov
add
repnz
push
cmp
in
inc
cmp
mov
push
sbbl
movsl
jp
mov
lock
addr16
aad
mov
pop
mov
cmpsl
loope
clc
movsl
mov
mov
hlt
scas
add
cltd
dec
push
lret
jmp
push
iret
mov
lods
or
pop
jae
fiadds
mov
std
add
jmp
add
dec
stc
pop
push
daa
mov
cltd
push
loop
je
aad
or
jb
cmp
add
ficoml
or
xchg
rcrl
xchg
cltd
out
jo
mov
adc
pop
insb
add
cwtl
mov
cltd
imul
sti
xor
xchg
dec
inc
arpl
fnstcw
imul
or
fisubl
cmpsl
push
cmp
dec
imul
loope
fsubrl
push
and
mov
pop
mov
xor
scas
shll
xor
jnp
test
cmp
ljmp
push
test
pop
fcomip
js
cltd
push
sub
mov
cli
add
sbb
cmpb
in
pop
imul
jp
punpckldq
je
sti
in
cltd
mov
jno
sbb
in
pop
pop
stc
adc
in
sbb
and
push
fsqrt
jge
inc
rcrb
ljmp
fisttpl
lret
jg
std
clc
xor
cmp
and
ds
lea
arpl
mov
push
sbb
mov
cmp
sbbb
leave
imul
mov
mov
dec
mov
xchg
pop
daa
sbb
aaa
xchg
sub
and
iret
loope
cmp
mov
fisttpl
mov
cmp
sahf
faddp
push
sbb
adc
jmp
scas
mov
mov
adc
sbb
add
ret
adc
mov
imul
and
mov
inc
dec
sahf
xchg
or
mov
icebp
les
shll
inc
adc
aas
mov
popa
jae
movsl
push
sbb
inc
push
pusha
lods
je
xchg
notb
xchg
mov
fildll
dec
jmp
imul
lock
sti
push
out
xor
lods
leave
js
cs
xchg
les
imul
or
out
and
test
inc
pop
push
adcl
js
pop
movsb
inc
roll
in
lahf
xchg
pop
icebp
mov
dec
xlat
push
jl
jge
ja
enter
dec
test
ret
and
sbb
jmp
jns
cmpsl
mov
aaa
mov
leave
xor
popf
out
dec
inc
test
mull
aaa
lret
jbe
lods
adc
test
fs
cmc
cli
adc
aas
imul
mov
imul
sahf
mov
repz
popa
add
and
sub
cmp
cmpsl
gs
xchg
ja
pop
pop
fmull
stos
cmp
loopne
and
loopne
xor
dec
fdivrs
adcl
cli
jmp
mov
mov
push
addl
mov
not
jmp
popa
orb
call
fisttps
lock
mov
stos
adc
inc
fnstenv
outsl
call
jns
rcrb
jmp
inc
notl
lods
pop
out
or
int
arpl
mov
imul
jg
inc
stos
lock
fimuls
jmp
pop
sub
shl
ror
push
sbb
shll
enter
dec
xor
add
subl
xlat
fists
rclb
jno
test
add
lock
adcb
push
shrb
jb
int
stos
jmp
dec
lds
mov
xchg
fidivl
les
outsl
movsl
ss
movsb
test
out
or
mov
cmc
rcll
inc
shll
mov
add
stos
sbb
cmp
xchg
cltd
pop
adc
mov
popf
sbb
fsubrp
mov
sub
cmp
and
adc
ficompl
shlb
lods
sti
loopne
push
stos
leave
jecxz
push
push
addl
stos
xchg
fstpt
shl
ret
sub
lea
std
jae
push
repnz
imull
adc
mov
xchg
fimuls
sahf
push
test
stos
and
xor
push
sbb
mov
xchg
or
push
lret
xchg
std
shl
shll
or
inc
js
xor
mov
jge
leave
in
gs
push
iret
std
jmp
dec
insl
push
dec
fstl
cmpsb
dec
and
les
adc
mov
jmp
mov
push
xor
int3
addr16
push
xchg
push
sbb
imul
mov
rcrl
dec
mov
or
out
stos
fbstp
and
stos
imul
mov
xchg
push
push
test
paddusw
sub
cmp
xor
aam
pushf
enter
push
and
cmp
fdivrp
outsl
insl
psadbw
pop
cmp
push
xchg
mov
xchg
and
add
and
cltd
lock
popf
ljmp
push
and
movsl
cmp
incb
lret
sub
jo
test
cmp
in
ds
fisubrl
jmp
rcrb
inc
xchg
iret
fimuls
mov
leave
stos
test
jb
pop
sbb
jg
popa
ret
cmp
int
jmp
pop
add
and
test
imul
pop
inc
sbb
outsb
jl
xor
add
fwait
scas
imul
ss
pop
in
jmp
das
mov
add
les
movsl
sbb
mov
xchg
sub
jno
out
inc
dec
enter
ret
sbb
or
scas
and
fisttps
pop
jmp
or
lret
mov
or
mov
add
stos
rorl
lock
lahf
mov
sahf
push
xchg
adc
roll
jnp
cmp
arpl
pop
hlt
and
lock
and
out
add
jmp
je
inc
fstpt
pop
cmp
add
test
lcall
stos
scas
add
in
ds
jnp
lret
mov
fsubrl
add
add
shrb
jg
cmp
fwait
das
jl
fwait
cltd
mov
or
shrb
loope
lcall
rcrb
insb
jecxz
push
shr
dec
xor
cmp
xor
mov
mov
sbb
push
mov
rolb
push
arpl
test
iret
mov
xor
mov
inc
cltd
rcl
sub
xor
dec
loopne
inc
loopne
andl
push
cld
in
fcomi
sbb
or
push
mov
fcmovnb
jg
jae
nop
andb
stos
jb
adc
sbb
sbb
rclb
jecxz
shrl
aad
dec
sbb
adc
push
loope
mov
add
imul
jno
mov
fwait
cmp
pop
mov
sar
movsl
cmc
mov
sub
pop
test
mov
mov
or
and
scas
arpl
icebp
rcll
and
sub
sti
test
jmp
enter
mov
fwait
das
aaa
sub
repnz
push
sbb
and
mov
int3
mov
push
stos
xor
xor
pop
pop
fcmovb
mov
adc
pop
jmp
xchg
insl
jmp
jae
inc
pop
cmp
out
iret
call
push
cmp
enter
cmp
dec
ljmp
sub
mov
xchg
xor
filds
or
loop
inc
cs
imul
shr
repz
cltd
cmovl
in
mov
pop
mov
pusha
mov
loope
xlat
lret
mov
jge
js
ficomps
add
adc
xchg
push
cmpsl
mov
arpl
enter
jns
sub
and
mov
inc
subl
adc
and
sbb
mov
pop
jbe
arpl
fidivrs
add
mov
scas
aas
out
mov
hlt
cmp
lock
es
pop
clc
sbb
mov
sahf
ss
xor
and
lods
jmp
sarl
aam
int3
and
push
inc
adc
jecxz
jmp
xchg
iret
mov
sbb
loop
lret
lock
xchg
dec
adc
push
cmp
mov
adc
adcb
loop
xchg
inc
out
popf
xor
push
movsl
pop
shll
scas
sbb
push
or
mov
and
cmp
cltd
mov
xlat
test
add
pop
sbb
cmp
lds
popf
mov
sbb
ljmp
pop
std
jns
mov
cs
pop
mov
lahf
sub
mov
sub
cltd
push
jp
xor
push
test
cmp
ss
inc
xor
pop
and
xchg
push
cltd
les
into
add
leave
mov
cltd
lea
les
pop
jo
cmp
add
lcall
inc
das
cmpsl
cltd
sub
jecxz
ljmp
insl
cltd
ret
pop
mov
fs
jns
cmp
adc
jo,pn
or
add
imull
imul
mov
repz
xor
bound
clc
test
icebp
cltd
es
adc
pop
stc
bound
shlb
cltd
pop
pop
pop
cwtl
sbb
insl
cltd
repnz
cli
outsb
scas
dec
loop
in
ficomps
mov
and
fwait
sarb
xchg
sahf
add
jmp
mov
push
arpl
mov
cmc
xlat
int
xchg
imul
mov
xchg
cltd
jg
hlt
push
addr16
leave
aaa
sub
dec
or
cltd
push
dec
jo
dec
mov
out
push
pop
shlb
jle
xchg
pop
cltd
lock
mov
cltd
pop
ficoms
outsb
cltd
push
inc
mov
or
pop
cmp
ret
mov
xchg
js
fldenv
jnp
lcall
push
mov
mov
lods
push
sbb
and
push
ja
cltd
xor
or
cltd
cwtl
cli
cmp
mov
int3
cltd
push
dec
dec
addb
adc
mov
cli
mov
and
lods
cwtl
fiadds
xchg
cltd
adc
cltd
testb
lahf
jecxz
mov
push
mov
sbb
inc
std
cltd
shlb
imul
lret
fidivl
sti
insb
lcall
jns
pusha
mov
cltd
sbb
cltd
out
movsl
das
dec
jns
xor
insl
daa
fwait
mov
call
cltd
leave
mov
mov
cltd
mov
sbb
jb
cwtl
rorb
lods
dec
push
sub
xchg
lcall
add
xchg
out
scas
sub
push
add
in
xor
dec
sti
cltd
fildll
in
sbb
and
gs
push
sub
inc
cltd
jle
movsl
outsl
mov
push
sub
push
ss
pop
cltd
cmp
les
inc
jbe
cltd
in
sti
ficompl
sub
test
ret
call
push
add
sbb
aaa
push
loopne
dec
rcrl
sbb
dec
imul
stos
ja
inc
pop
mov
int
jmp
adc
in
lods
cltd
pop
cwtl
lret
lcall
arpl
and
add
xorb
push
and
in
push
lock
inc
mov
stos
mov
rol
add
or
mov
cltd
jb
dec
xchg
sbb
out
xchg
in
add
jp
add
sub
out
mov
cwtl
sti
dec
shr
in
jmp
xor
jns
cltd
adc
pop
xchg
insb
pop
pop
adc
cmp
mov
jne
ret
dec
push
cltd
or
dec
cmp
jle
scas
jge
push
pushf
cltd
xchg
mov
cltd
cli
add
lret
repnz
cld
es
sub
mov
xchg
cltd
repnz
movlps
out
dec
daa
fsubs
jle
mov
xor
andb
div
popf
xor
cltd
cs
jno
xor
sub
mov
insl
data16
push
cltd
cmp
cltd
idivb
jge
cmpsl
cmp
test
and
or
sub
sbbl
dec
cmp
push
jns
xor
push
hlt
out
lods
mov
jecxz
push
aad
push
cltd
and
cmp
push
cltd
clc
mov
mov
push
addl
jp
adcl
and
jl
cltd
std
das
icebp
mov
testb
outsb
in
inc
scas
sbb
mov
flds
cltd
hlt
sbb
mov
lods
jnp
lret
test
push
or
push
push
cwtl
lea
hlt
or
test
icebp
stos
dec
push
xorb
addr16
xchg
cmp
lods
test
add
jbe
ss
cmp
and
inc
mov
cmc
fildl
out
jbe
ss
xchg
scas
fcmovnbe
jmp
add
stc
cmp
mov
arpl
orl
jg
test
stc
shrb
push
fs
mov
add
mov
xchg
in
dec
popf
or
loop
ds
adc
repnz
mov
push
jmp
xchg
mov
icebp
mov
xor
mov
dec
xor
cmp
jmp
mov
mov
xor
xchg
clc
add
hlt
inc
test
test
xor
mov
or
flds
stos
dec
in
or
xlat
popf
mov
or
and
inc
movsl
xchg
mov
jns
int
push
add
pushf
sbb
jmp
daa
into
xor
or
mov
cmp
dec
arpl
sbb
imul
mov
and
jmp
mov
mov
push
jmp
les
push
fstps
mov
mov
mov
inc
rcrb
sbb
xchg
mov
sub
aas
xor
in
sbbl
sbb
movsb
fstpt
pop
jmp
xchg
movsb
xchg
cltd
mov
stos
sub
fistl
scas
out
aam
movsl
dec
pop
mov
int
mov
loopne
test
pop
dec
dec
mov
std
pop
out
jmp
test
add
cmp
pop
dec
jecxz
sahf
pop
aaa
mov
and
inc
test
lret
imul
push
adc
mov
and
lret
mov
pushf
mov
push
cmp
test
dec
xchg
scas
int
mov
lock
addb
clc
xor
jno
sub
adc
mov
cmp
add
push
and
sahf
jnp
dec
push
ljmp
shl
mov
and
xchg
in
inc
scas
mov
cmpsb
cltd
dec
stos
fldl
cltd
pop
insl
add
adc
xor
outsl
inc
and
xchg
cltd
xchg
xchg
sub
push
gs
cltd
fwait
cld
mov
sub
jns
jle
and
int3
cmpsl
inc
add
sub
cltd
cltd
lea
mov
push
clc
xor
dec
hlt
push
addr16
pop
cmpsl
pop
into
cld
shll
jmp
inc
cltd
scas
shll
lret
sub
and
lcall
inc
scas
sbb
stos
data16
sbb
test
cltd
jno
xchg
les
ret
popf
push
fwait
mov
sbbb
imul
xor
mov
pushf
jg
mov
test
into
dec
pop
mov
pop
fstps
cwtl
sbb
jbe
cltd
xchg
push
daa
fwait
repnz
inc
or
fildl
mov
orl
mov
xor
imul
jecxz
cltd
pop
popa
fsubrp
xor
xorb
imul
out
int3
inc
mov
pop
scas
popf
ss
ds
cmpsb
inc
nop
inc
flds
add
sbb
jecxz
icebp
insl
pop
cltd
ds
dec
stos
mov
cltd
aad
aam
and
add
pusha
out
stc
imul
outsl
loop
sbb
sub
pop
push
imul
cltd
clc
test
orl
shrb
cmpsb
mov
and
mov
aam
and
and
pop
test
jl
hlt
inc
out
out
xor
scas
sbb
nop
sbbl
inc
dec
cmpsl
xor
mov
je
mov
out
push
cltd
lcall
js
jp
cld
xlat
cmp
sub
adc
xchg
cltd
sahf
sub
and
in
ds
cmpsl
inc
cmpsb
or
mov
push
mov
sarb
push
pop
aam
ljmp
xlat
out
push
ret
popa
divl
ror
iret
xlat
out
rcr
cltd
loope
inc
mov
test
dec
pusha
xlat
mov
fsubp
mov
sti
push
sub
dec
cltd
fwait
in
sub
into
cmp
scas
cmpsl
icebp
jbe
jno
sbbl
popa
andb
mov
fisubrs
xor
pop
jl
inc
xchg
cltd
cmp
mov
test
daa
test
inc
fwait
cltd
and
lahf
cmp
cltd
outsl
call
pop
push
popf
mov
outsl
xor
loopne
sub
movsl
in
popf
xor
fdivs
xchg
sahf
xchg
cltd
idivb
mov
pop
mov
mov
push
adc
loop
leave
icebp
aas
ljmp
daa
lds
adc
test
jle
cltd
pop
pop
or
adc
jl
inc
mov
or
cmp
insl
cmc
or
xor
jne
jbe
aad
push
cld
into
stc
push
inc
xchg
mov
iret
test
push
scas
decb
push
cmc
int3
rcrb
das
cltd
fs
repnz
imul
jb
xchg
rcl
push
andb
std
jne
fistl
scas
jns
mov
out
scas
pop
fists
or
jb
cmpsl
aaa
call
xor
addb
or
sub
and
jno
inc
dec
pop
cltd
out
neg
aaa
stc
xchg
or
lcall
add
jp
push
sti
in
mov
mov
outsb
movsl
rolb
js
popa
adc
into
xorl
sub
push
inc
dec
adc
popa
and
add
pop
xor
cltd
xchg
adc
mov
cltd
and
mov
jecxz
lret
dec
xchg
mov
aad
std
out
in
xorb
mov
fnstcw
pop
and
cltd
push
cs
mov
cltd
or
xlat
outsb
cmpsl
cmp
sarl
loopne
sub
les
in
test
icebp
mov
pop
daa
sub
push
pop
sbb
cltd
stos
adc
add
fcoml
mov
imul
jns
dec
loopne
cltd
xchg
pop
lds
xor
cmp
imul
xchg
dec
frstor
loopne
aaa
aam
cltd
sarl
xor
negl
enter
cmovae
cmpsl
add
shl
xchg
cltd
jg
gs
lods
and
add
pusha
push
movsb
adc
inc
jo
xchg
cltd
fs
enter
aaa
mov
dec
sti
sbb
add
mov
cltd
and
pushl
xor
cmpsl
or
lea
stos
mov
pop
cmpsl
leave
cmpsb
cmpsl
sub
xor
inc
cltd
ss
cmc
xlat
sbbb
std
sub
sub
incb
dec
push
xor
dec
mov
cltd
ss
popaw
cmp
or
xchg
ds
pushf
mov
mov
cltd
mov
pop
cmc
lds
ret
and
jns
mov
inc
cmpsb
in
adc
test
mov
xor
scas
into
inc
aaa
shlb
cltd
pop
cmpl
iret
cltd
test
ds
mov
scas
pop
ja
jl
rcrb
stc
cltd
adc
push
loopne
mov
mov
into
lret
sbb
mov
add
mov
shl
mov
movsl
push
jl
pop
xlat
scas
fadd
mov
shl
add
insl
push
movsl
cltd
mov
aas
lcall
cld
dec
orb
int
out
or
jnp
lods
mov
cltd
dec
add
fdivr
cltd
hlt
ret
adc
in
out
xor
pop
cmc
xchg
repz
mul
andl
xor
pop
add
jo
lea
dec
and
js
add
xorl
add
popa
inc
cli
rorl
inc
ret
adc
mov
out
sub
cmp
insb
cmpsl
xchg
lea
dec
pop
jmp
nop
cwtl
je
leave
dec
mov
mov
cmp
cltd
fneni(8087
mov
aam
adc
sbb
das
sbb
xor
stc
gs
cmp
jns
pop
mov
pop
jmp
mov
cltd
or
adc
mov
pusha
aam
popf
mov
cltd
sbb
enter
cs
es
call
or
cmp
xor
push
mov
aam
push
icebp
ljmp
cld
das
pop
aas
daa
sti
jecxz
mov
loopne
cs
and
jbe
pop
or
test
push
cs
sub
repz
int
fisubs
push
rcll
cmpsl
mov
nop
outsb
cltd
inc
andb
test
test
fcompl
mov
int3
cmp
lret
rcrl
dec
loopne
dec
lods
mov
sbb
ds
mov
sbb
cmp
adc
cltd
pop
scas
call
mov
cmp
ja
mov
rcrl
cs
cmpsl
sbb
int3
add
std
rclb
jl
loope
jb
push
sbb
mov
sahf
insl
pushf
mov
xchg
and
mov
pop
cltd
mov
loope
xchg
inc
shrb
ja
imul
add
jne
js
mov
mov
mov
mov
cltd
rclb
xchg
dec
pop
sti
leave
or
xchg
sub
call
test
and
shr
cltd
addb
add
scas
mov
xchg
inc
fs
jg
ds
mov
xchg
int
mov
push
mov
mov
stc
cs
fstps
inc
inc
test
mov
in
mov
mov
xlat
std
push
arpl
pop
rclb
int
sub
push
rclb
mov
loop
pop
movsl
mov
xorl
and
pusha
je
add
out
into
pusha
dec
fsubr
rcl
push
xchg
push
xchg
popa
adc
push
sub
nop
jmp
icebp
fcom
pop
mov
adc
mov
sahf
sti
js
in
pop
fiadds
pop
loop
jmp
inc
inc
xchg
inc
pushf
inc
scas
std
cmpsl
je
cmp
jbe
int3
fwait
sub
ljmp
insl
push
rcrb
jno
mov
push
adc
shlb
repnz
sub
cli
xchg
out
mov
push
pop
ret
sub
xchg
das
lds
stos
push
fisttps
and
jl
cmp
popf
push
insb
les
ds
jmp
xchg
cmp
cwtl
or
or
jmp
leave
or
add
sub
outsl
mov
inc
jmp
pop
xchg
ljmp
cmc
mov
repz
in
inc
shrl
sbb
mov
pop
push
push
inc
sbb
inc
mov
dec
jmp
mov
lds
inc
ds
xchg
and
call
add
xchg
push
inc
pop
jne
push
fs
pop
aad
or
inc
aam
fisubrl
fsubrp
into
cmp
push
sbb
xchg
mov
fisttpl
lock
cmpsb
jno
int
mov
push
data16
dec
sub
imul
mov
or
scas
jne
or
enter
hlt
dec
aaa
ret
ja
fisubl
scas
sub
fisubs
cmp
leave
jbe
sub
aaa
fldt
testl
leave
or
sbb
leave
shrb
mov
mov
or
testl
int3
mull
sbb
sub
repnz
pop
loope
jmp
ret
cmp
fadd
push
and
fcomps
out
mov
mov
xor
lret
test
mov
fdivrl
cmp
jns
push
insb
or
and
js
pusha
pop
popf
push
cmpsb
sub
and
dec
jmp
inc
bound
mov
jno,pn
mov
or
sub
inc
pop
cmpsb
negb
dec
int
push
pop
mov
inc
jo
fildl
icebp
jmp
mov
xor
into
push
les
pop
stc
push
inc
xchg
adc
or
call
pop
negb
or
mov
or
out
mov
outsb
outsl
out
inc
xor
pop
stos
mov
sahf
lret
adc
mov
das
gs
in
faddl
mov
rcrl
dec
inc
dec
push
push
mov
mov
stc
loopne
aad
fmuls
push
pushf
jg
add
out
pop
jp
pushf
andb
arpl
pop
cmp
cwtl
ds
iret
arpl
test
mov
and
push
xor
aas
push
xor
mov
sti
ret
cmp
dec
jns
pop
cmp
sar
rclb
test
adc
js
pop
cli
jmp
lret
test
sbb
in
inc
jns
mov
sub
and
inc
mov
xor
les
or
jmp
jmp
mov
xor
pop
cwtl
lea
cltd
pop
stos
and
mov
imul
mov
xchg
outsb
and
jmp
push
popa
jecxz
mov
adc
xor
aam
pop
in
mov
sub
push
inc
inc
pop
fwait
mov
test
loope
or
jns
xchg
and
and
lods
lock
sbb
cmp
sub
mov
les
dec
idiv
xchg
cmp
mov
or
movsl
clc
lahf
repnz
sub
gs
fldln2
lahf
and
sub
ja
test
cli
dec
inc
xchg
jb
les
adc
stos
or
adc
fiadds
pop
pop
mov
out
pop
xlat
cmp
daa
lret
pop
mov
dec
mov
sbb
sbb
movsl
xchg
sbb
sub
jmp
inc
shlb
adc
aaa
cmpsl
stos
xchg
sub
shr
dec
lret
fistps
lea
jmp
jae
cmpsl
xor
inc
mov
mov
int
sbb
popf
push
sbbl
je
and
pushf
inc
sbb
shll
jnp
popa
jmp
fwait
leave
adc
sbb
icebp
push
movsl
fsubl
shl
in
inc
xchg
testl
jmp
xchg
cld
and
mov
and
clc
push
jne
mov
pop
int3
icebp
addr16
fistpll
daa
jae
insb
push
sbb
push
push
xor
pop
ret
jae
sbb
jno
in
inc
cmp
sub
sub
inc
icebp
add
jne
mov
and
xor
mov
jb
mov
sub
mov
adc
sub
jg
dec
mov
js
xor
or
inc
pop
divb
xlat
stos
arpl
aas
push
es
shlb
mov
jo
or
bound
out
sub
mov
jg
aam
inc
mov
or
xchg
cmpsb
push
push
fisttps
dec
cld
lretw
lds
dec
push
ret
mov
push
inc
mov
dec
inc
mov
pop
jmp
mov
jmp
call
push
or
sahf
sub
stos
adc
add
jae
aad
inc
dec
xchg
inc
gs
dec
in
ror
out
inc
imul
xor
pop
jl
cli
mov
out
jne
pop
iret
push
popf
and
pushf
xor
rclb
jns
inc
adc
adc
mov
push
mov
movsl
xor
sbb
xchg
int3
inc
dec
jmp
fidivrs
nop
popf
ret
xchg
sub
sub
mov
pop
xchg
clc
mov
les
fildll
jmp
jg
dec
loope
inc
fildll
pop
mov
ret
sub
ret
scas
bound
sbb
or
push
xchg
cmp
cmp
pushf
cs
into
cmpsl
pop
les
jg
aam
cmp
xor
lcall
ja
mov
mov
xor
mov
cmp
cltd
nop
cmc
dec
shrb
in
rol
dec
scas
shlb
xor
add
and
loop
mov
mov
adc
in
dec
jnp
xchg
and
sarl
mov
stc
xchg
rcrl
pop
aam
aas
pop
mov
dec
stos
xchg
push
lret
dec
lock
jmp
or
jmp
mov
add
mov
stc
repz
popf
mov
cmp
adc
xor
shll
dec
xchg
sbb
jae
pop
fs
inc
incb
loopne
repnz
jle
por
push
pusha
test
mov
adc
hlt
adc
cs
mov
shll
fcompl
mov
sub
jbe
les
or
push
mov
enter
call
mov
mov
out
hlt
icebp
movsl
in
and
sti
stos
xchg
xchg
xchg
int3
inc
dec
rclb
sbb
pop
or
nop
xchg
sub
inc
rorl
nop
dec
in
xor
jae
jne
xchg
rclb
xchg
inc
ret
jp
add
hlt
loopne
inc
sub
or
adc
fisttps
push
and
and
cmp
data16
sbb
xor
ja
mov
pop
enter
cli
xchg
xchg
inc
sub
mov
push
push
mov
hlt
mov
mov
jno
pushaw
in
mov
push
ds
jge
fisubs
pop
daa
scas
sbb
and
mov
inc
mov
pop
add
mov
push
mov
push
adc
int3
jmp
mov
aas
mov
cmp
inc
and
mov
scas
pop
cmp
mov
xchg
aad
aam
xorl
ljmp
ret
sbbl
lahf
add
mov
pop
push
mov
imul
cmpsl
iret
dec
sbb
xchg
lds
imul
xchg
jg
dec
filds
sub
mov
mov
cmp
push
loopne
lret
and
addr16
inc
cmp
imul
push
test
loop
push
or
or
mov
movsl
es
push
fidivrs
pop
or
das
sbb
mov
and
and
mov
lock
mov
xor
dec
loopne
subl
mov
pop
into
sbb
pop
inc
out
mov
jmp
fidivl
test
push
insl
inc
into
popa
mov
stos
jmp
xor
das
mov
cmpsl
adc
stos
cmc
adc
push
and
aas
inc
mov
dec
repnz
and
loope
es
push
pop
and
cld
test
adcl
sub
repz
in
lods
stos
pop
pop
and
scas
stos
dec
es
and
pop
leave
fmuls
push
jmp
gs
jae
mov
in
in
inc
dec
data16
int3
mov
mov
idiv
xchg
loopne
pop
into
sub
les
mov
outsb
or
into
mov
sub
mov
shll
pop
push
dec
adc
pop
movsl
pop
repnz
jmp
push
lods
stc
adc
xchg
sub
xchg
jle
mov
cltd
xor
inc
adc
pushf
mov
mov
mov
movsb
aam
jmp
add
test
jg
es
icebp
fcmovu
and
push
leave
push
sti
lea
cmpsb
pop
xor
and
add
ds
mov
test
lahf
scas
nop
lock
mov
sahf
sub
icebp
jnp
mov
fmull
and
stos
test
jge
sub
pop
cs
int
mov
mov
cmp
sub
cmp
mov
cmpsb
jmp
cmp
sub
sbb
mov
call
aaa
adc
xor
and
hlt
adc
mov
jp
pop
popa
in
push
leave
ficomps
test
xchg
fcoms
lods
test
cltd
sbb
stos
leave
in
jl
sub
fsubl
adc
cwtl
sahf
jmp
jecxz
pushf
lock
stos
mov
cmpsb
push
mov
mov
sub
les
fwait
mov
hlt
sti
and
jo
push
sti
mov
cs
mov
dec
jo
scas
stos
add
test
aaa
lret
and
add
jno
loope
out
test
adc
mov
loopne
out
cwtl
xchg
mov
mov
and
or
insl
mov
push
in
mov
xchg
xor
cmp
shlb
push
cltd
cmp
in
sbb
or
dec
mov
loope
adc
rcrb
test
inc
fwait
insb
jecxz
imul
cmp
jmp
divl
or
adc
sbb
lret
fisubrl
loopne
mov
out
in
mov
jo
lock
cwtl
jg
enter
sub
popa
and
jo
jmp
mov
mov
popa
test
cmp
into
adc
cltd
mov
arpl
out
dec
add
movsl
popa
cmpsl
mov
lods
fcoms
add
and
jno
js
adc
mov
rolb
js
pop
sti
inc
fwait
lcall
and
pop
aas
adc
mov
jmp
cmp
adcb
js
stc
xchg
sbb
and
outsl
and
fwait
std
imul
ds
pop
gs
pop
adcl
fcmove
cmpsl
jle
cwtl
sub
sbb
and
loope
popf
mov
or
xor
adc
rcrb
cmp
xchg
pop
pop
jbe
imul
scas
jae
lock
mov
in
ss
or
jmp
mov
loope
push
jnp
daa
add
scas
xlat
fimull
add
sbb
xlat
or
pop
mov
repnz
les
cmpb
mov
jne
cmp
pop
in
cli
sbb
jmp
ficoml
push
adc
out
dec
mov
mov
jle
adc
cmp
ss
lahf
rclb
inc
sub
adc
aaa
mov
inc
mov
adc
std
jp
jno
or
mov
fsub
ret
scas
lds
loope
mov
subb
push
sbb
xor
mov
in
jae
mov
sub
dec
sbb
or
testb
scas
xor
adc
cli
push
adc
insl
inc
aas
dec
fldl2e
jmp
xchg
mov
jae
icebp
les
ljmp
popa
jmp
hlt
loope
je
push
sbb
shrb
mov
cld
int3
shrb
popl
mov
xchg
inc
enter
mov
or
fisubl
mov
adc
xchg
jmp
fdivs
jnp
pop
ds
and
sub
clc
jns
dec
movsl
cs
jno
push
and
mov
jp
imull
push
mov
pop
cld
pop
sub
sbb
jle
lret
fwait
lock
fimull
into
bound
xchg
fabs
popa
sbb
nop
stc
int
add
push
inc
or
or
stos
clc
jmp
decb
scas
dec
inc
jns
mov
jmp
leave
cmp
or
and
repnz
inc
mov
jp
mov
sbb
mov
or
jmp
int3
pushf
popf
sbb
cwtl
add
pop
xchg
sub
push
icebp
iret
in
jae
xchg
inc
pop
sbb
sub
xchg
jg
dec
scas
test
add
popa
out
dec
cmp
xchg
aaa
adc
push
mov
and
lcall
out
jae
scas
sbbl
mov
in
ret
mov
mov
imul
push
mov
and
push
movsl
jnp
pop
sub
out
add
test
pop
jge
lods
mov
mov
dec
lods
pop
shr
mov
adc
iret
add
push
inc
sbb
cs
mov
adc
xchg
aaa
cmc
mov
xchg
out
out
inc
sub
inc
and
adc
adc
or
or
jno
mov
adc
hlt
add
xchg
push
cmpsb
rcll
mov
aad
jmp
mov
lock
inc
imull
and
mov
lahf
sub
stc
inc
int3
loopne
add
xchg
xor
inc
mov
mov
mov
xor
dec
in
je
leave
popa
lock
out
pop
outsb
cwtl
jp
test
jle
jp
jbe
dec
adc
jo
jl
loope
inc
cmp
outsl
es
add
pop
es
jmp
insl
mov
lret
test
lods
inc
mov
adc
stc
mov
lcall
fs
int3
cmp
cmpsb
jp
stc
jne
xchg
mov
fldcw
lahf
lahf
addb
mov
cmp
mov
xchg
cwtl
mov
shll
mov
movsl
int3
mov
lret
sbb
pop
shr
enter
pop
adc
dec
cmpsb
push
test
in
cmpsl
mov
and
shrb
xor
loopne
cmp
push
mov
mov
jg
xor
pushf
enter
pop
cmp
mov
int
cmp
test
mov
ret
jne
leave
jmp
sbb
cmp
repnz
mov
and
loopne
jmp
arpl
push
xor
sbb
inc
jmp
popf
sub
mov
imul
adc
orl
sar
movsl
lock
int3
xor
jb
fdivl
stos
jmp
cmpsb
fcoms
lcall
lods
mov
jl
mov
shrb
jmp
inc
sbb
and
cmp
xor
jnp
mov
arpl
cmc
mov
xor
push
mov
or
ljmp
jae
ret
ficoms
xor
dec
and
jp
xchg
cltd
and
pop
push
jne
shlb
add
pop
stos
mov
andb
imul
inc
lcall
or
stos
movsl
and
inc
arpl
jne
xor
insl
xchg
call
push
sub
sub
fisubl
in
or
jmp
shr
pusha
loopne
mov
dec
cmp
stos
sti
push
popa
ljmp
push
add
add
lock
adc
fstps
xchg
mov
adc
stos
mov
cmpsb
add
gs
orl
in
test
cs
nop
mov
rcll
dec
scas
mov
int3
inc
adc
adc
add
and
adc
fcmovnbe
lods
ret
and
clc
cmp
adc
dec
aaa
loopne
insb
xor
loope
adc
mov
ljmp
shlb
popa
lock
dec
in
mov
inc
shr
testb
sub
test
sbb
push
rcll
or
jo
fs
xchg
add
cmpsb
mov
pop
fisubrl
in
mov
xor
xor
movsb
mov
and
pop
int
mov
xchg
pop
push
repnz
xchg
jmp
test
movsl
mov
das
cltd
lock
fidivs
jnp
ret
dec
movsb
mov
push
and
xchg
fiadds
pusha
stos
jmp
sahf
jl
inc
xchg
mov
movsl
lock
push
aam
sub
shr
shr
mov
push
lock
inc
push
dec
xchg
loope
jmp
cwtl
mov
adcb
fbstp
pop
xchg
mov
mov
sbb
and
data16
test
adc
fcoml
mov
les
call
test
lock
inc
push
cmp
dec
jbe
jb
jg
fisubrs
enter
cltd
in
dec
jg
loop
jmp
pop
popf
sbb
cmp
xchg
dec
shrb
mov
in
xchg
cmp
mov
and
mov
lds
jno
adc
cmp
outsb
lock
xor
stos
aas
sub
mov
xchg
jns
dec
lods
cmp
shrb
push
mov
scas
jmp
cltd
adc
push
mov
cmp
aam
jmp
mov
lret
fists
cltd
out
lock
js
push
sbb
xchg
leave
or
movsl
xchg
pop
push
xor
fisubs
pushf
lock
aam
cmc
cmp
push
in
xchg
jae
loop
das
fists
stos
mov
sbb
jb
sub
out
sbb
push
test
sti
decl
in
and
adc
mov
jno
jmp
frstor
sbb
outsl
jmp
mov
aad
ljmp
jle
mov
rolb
jae
jb
jle
stos
or
mov
jns
subb
cmp
push
sbb
mov
sub
fstpt
lods
in
imul
dec
orb
xchg
subb
inc
nop
sbb
lcall
adc
sbbl
popf
fistpl
push
cld
fldl
stos
dec
rolb
std
xchg
inc
cwtl
lcall
lock
pop
inc
mov
lea
jmp
fldt
cmp
mov
fsubrl
jmp
rcrl
pop
add
cs
mov
push
loopne
jmp
outsb
and
lock
mov
adc
push
scas
jnp
scas
es
jl
leave
inc
int3
clc
pop
shrb
in
push
movsl
sub
adc
sbb
or
jmp
xchg
pop
call
jno
adc
lods
push
mov
adc
xor
push
jmp
jo
jbe
rcrl
sbb
sbb
popa
xor
add
jmp
aad
dec
push
add
dec
js
stos
cli
test
outsb
shrb
push
add
inc
and
gs
pusha
bt
sbb
inc
jae
frstor
stos
dec
ret
cltd
lock
stos
sub
pop
jmp
out
mov
push
or
inc
push
shlb
and
ljmp
lods
xor
rcrb
out
fistpll
gs
setg
push
mov
sbb
pop
cmp
mov
shl
or
and
fwait
stos
inc
into
jmp
loopne
mov
or
stos
std
dec
inc
loopne
pop
lea
pop
sub
mov
or
call
mov
or
not
cmp
std
jg
ss
jmp
insb
xor
add
xor
mov
or
mov
jnp
jmp
add
fwait
or
mov
inc
lea
dec
ret
or
dec
sti
aas
dec
pop
stc
adc
fs
out
adc
and
stos
mov
add
je
lds
rcrb
rol
jbe
jmp
inc
mov
in
push
imull
adc
push
cmp
test
dec
insl
dec
loopne
mov
shl
dec
scas
sub
mov
push
jmp
and
shrl
lahf
push
stos
jmp
mov
adc
mov
sub
inc
mov
iret
sbb
test
mull
fwait
pop
jno
ffree
mov
sbb
pop
ljmp
test
adc
and
arpl
jns
adc
xchg
xor
stos
push
sub
mull
dec
cmp
leave
jmp
sub
push
add
std
or
lock
sub
iret
bound
cmp
lea
sbb
clc
gs
jae
jmp
dec
lods
mull
imul
xor
push
nop
int3
cltd
ds
and
dec
lods
int
push
pop
mov
mov
add
test
mov
insb
stos
iret
jmp
pop
push
xchg
lahf
mov
mov
loopne
sahf
mov
or
mov
int3
dec
inc
imul
loopne
mov
jecxz
aad
jg
dec
mov
cmp
sub
push
jmp
sbb
adc
push
fists
xchg
scas
mov
loopne
ss
test
movb
jmp
sbb
imul
mov
or
cltd
and
xchg
imul
out
jmp
jge
sub
insb
cmp
sahf
mov
pop
or
xor
mov
fwait
dec
loopne
cld
pop
inc
in
add
sub
test
ds
xor
or
sbb
push
fstpl
mov
jle
push
and
xchg
sbb
push
rclb
xlat
in
sub
xor
and
addl
imul
cmp
pop
int
pop
fnsave
pusha
xchg
mov
adc
mov
int3
push
cwtl
out
cmpsb
mov
push
mov
and
add
and
pushf
dec
movsb
lret
mov
dec
mov
dec
std
inc
dec
adc
shrl
mov
and
jle
lret
mov
dec
cmp
add
jb
jmp
add
stc
ja
xor
fistpll
int3
icebp
mov
dec
or
test
ret
sbb
cmpsb
add
inc
js
int
add
test
jnp
sbb
push
les
jl
cmp
mov
bound
and
in
cmpsb
lret
movsl
mov
into
pusha
imul
lock
and
iret
aas
addb
push
or
cmp
lret
pushf
mov
adc
call
xchg
rorl
fwait
stc
mov
aam
out
rol
iret
pushf
jmp
fsubrl
sbb
mov
or
cwtl
loop
je
mov
push
jmp
mov
pop
mov
popa
sub
inc
jns
je
stc
mov
pop
jmp
inc
sub
mov
jmp
imul
sahf
into
dec
loop
mov
mov
imul
stos
mov
dec
add
jg
fwait
pop
js
out
add
lea
mov
mov
loope
inc
test
jb
push
or
fsubrl
mov
cmp
jp
test
inc
xor
inc
mov
loop
push
mov
test
push
repz
xchg
testb
aaa
xchg
addr16
std
lds
pop
add
shl
xchg
pop
adc
dec
fwait
shll
jmp
push
push
mov
pop
or
fstpl
pop
xchg
stos
jp
fiadds
in
and
in
jp
dec
mov
mov
jno
jmp
call
cmp
push
arpl
cmpsb
fwait
jle
cmp
test
fdiv
in
into
pop
lcall
test
dec
push
push
addr16
cld
push
inc
jno
lret
pop
ftst
sub
jmp
sbb
movsl
sub
loopne
mov
es
fsubl
pop
stc
data16
jns
dec
xchg
in
push
or
cs
pop
out
xor
cltd
dec
ljmp
rolb
mov
jge
lret
cltd
das
add
adc
scas
insb
xchg
aam
loop
jno
jns
mov
cmpsl
push
rol
aaa
dec
sub
and
nop
fldt
cltd
add
mov
xchg
cltd
data16
dec
cltd
stos
pop
inc
mov
mov
aas
mov
es
addb
jecxz
add
xchg
cltd
fisttpll
jb
cltd
ficoms
imul
cltd
gs
pop
xchg
idivl
push
mov
mov
dec
ja,pt
scas
xchg
cltd
sub
mov
filds
iret
push
imul
mov
cltd
repz
dec
xlat
data16
in
xchg
cltd
stc
mov
cltd
lods
adc
jnp
push
gs
popa
mov
ja
push
test
ret
jne
lea
adc
add
pcmpeqd
pop
je
loope
mov
decl
mov
cltd
add
pushf
jae
in
jl
je
push
in
push
icebp
paddusw
mov
inc
cmp
and
jae
pop
fstpl
lods
jo
cltd
pcmpgtw
xchg
push
ljmp
pop
pusha
sub
cmp
iret
push
sbb
nop
mov
cs
xlat
push
xlat
mov
cltd
mov
aam
dec
jl
nop
repz
xchg
fldt
jo
inc
mov
lcall
sti
cmp
cltd
xchg
out
inc
mov
lret
push
fwait
test
shll
mov
cltd
pop
and
push
cmp
jo
in
or
cld
cltd
out
shll
stos
mov
std
mov
or
adc
scas
push
ret
andb
sub
sbb
lcall
pushf
es
mov
shlb
scas
outsl
dec
dec
sahf
shlb
ret
sub
mov
mov
popf
jl
adc
push
imul
pop
dec
sbb
into
fistl
enter
cltd
lock
sahf
jmp
cmp
nop
arpl
mov
sub
jmp
stos
push
icebp
dec
cld
push
or
jno
mov
dec
movsl
test
mov
lea
cmpsl
shr
sub
and
sbb
jno
or
push
fwait
inc
mov
jge
jg
les
pop
adc
pop
cld
pop
sbb
test
fisubrl
cmp
lods
push
leave
jmp
push
jge
mull
xorl
sahf
sub
or
sahf
pushf
mov
adc
xchg
test
lret
mov
sub
adc
enter
or
inc
mov
mov
adc
outsb
mov
xorl
sarb
iret
push
mov
jl
pusha
mov
mov
pop
andb
out
cmc
xor
les
mov
push
dec
sub
lds
test
mov
aam
dec
fdivrs
sbb
sbb
jmp
jl
pop
sbb
xchg
sbb
roll
shll
data16
pop
orb
mov
jl
movsl
lock
fildl
adc
mulb
add
pushf
and
sbb
jno
mov
inc
dec
jb
insl
fisubs
jg
js
inc
push
icebp
inc
cmp
mov
aam
outsb
shll
jne
cwtl
loopne
sub
cmp
arpl
pop
mov
mov
or
xchg
inc
xchg
add
daa
out
dec
call
ret
push
loop
jo
mov
lret
add
std
pop
dec
cwtl
xchg
jo
loope
jmp
push
pop
rcll
jns
cmp
add
inc
xor
adc
gs
add
inc
mov
cmp
cltd
mov
sbb
cmp
mov
xchg
push
jge
sbb
stos
mov
push
data16
fistpll
push
xchg
popa
mov
pop
or
mov
mov
cld
fnsave
and
les
jo
inc
xchg
inc
aas
imul
pusha
movq
xchg
lahf
add
push
mov
adc
adc
xchg
nop
mov
mov
cmp
cmp
stos
mov
les
into
in
loopne
mov
jno
inc
int
push
es
movsl
or
xchg
in
and
sub
sub
stos
iret
cmp
cmpsl
mov
jne
lret
mov
xchg
jmp
push
fdivp
dec
cmp
out
dec
mov
jmp
add
add
mov
insb
sub
xchg
leave
push
jg
test
test
cmp
sarl
xor
daa
push
sbb
mov
and
pop
jmp
cmp
push
aas
mov
pop
clc
bound
loop
icebp
shrb
mov
sbb
lahf
xchg
or
jp
xor
out
cmp
aam
loopne
shr
movsl
adc
nop
ljmp
adc
lock
ficoml
lret
frstor
outsl
out
xor
leave
or
mov
pop
mov
mov
sbb
cmp
mov
inc
cmp
jns
jmp
imul
std
mov
push
lret
cwtl
stos
les
mov
mov
and
enter
popa
add
sub
mov
push
pop
rcrl
or
and
cmp
fwait
inc
push
and
int
or
xor
ljmp
pop
jmp
xor
or
gs
fisubrl
sahf
sbb
hlt
insb
push
in
mov
dec
insb
fs
jle
frstor
rcl
nop
xchg
stos
add
arpl
dec
jnp
mov
mov
xchg
sbbb
lahf
mov
or
adc
pop
mov
fwait
adc
xor
popa
ja
mov
enter
jmp
dec
movb
push
pop
jmp
and
or
jae
and
mov
cli
lods
jns
nop
out
pop
mov
jg
mov
mov
mov
shrb
or
pushf
jmp
jg
js
dec
cmp
mov
jmp
bnd
mov
pop
xorb
incl
in
or
pop
pop
jae
fmuls
mov
jl
arpl
or
cmpsl
cwtl
sub
adc
hlt
call
mov
cmp
iret
ja
dec
cli
loopne
jmp
inc
adc
hlt
rolb
loopne
mov
and
pusha
dec
aad
in
sbb
or
call
adc
lea
nop
aam
js
push
push
inc
lods
out
push
mov
jmp
lret
mov
or
dec
stos
popa
mov
cli
mov
pop
jmp
cli
mov
stos
arpl
aad
jb
shll
fsubr
aam
popa
cwtl
shl
sbb
cmp
mov
push
mov
int3
push
popf
insl
in
outsl
mov
jmp
aad
je
aam
jb
pop
jecxz
and
clc
fwait
jmp
test
into
sub
repnz
add
push
pop
and
sbbb
fnsave
jmp
or
mov
mov
adcb
cmp
ret
mov
fsubr
and
jmp
or
shlb
xor
mov
mov
lock
or
adc
cmp
lcall
lahf
pop
sub
jle
mov
mov
push
ja
mov
xchg
dec
sub
xchg
fcomi
rcr
test
imul
pop
adc
pop
mov
lcallw
xchg
mov
call
mov
inc
scas
adc
out
cmc
stc
mov
ljmp
lret
dec
sub
das
jne
pop
add
jle
adc
aaa
shr
xchg
jb
fistps
lock
shrl
pop
jg
stos
fsubrs
outsb
int3
mov
cmp
scas
add
inc
aad
je
sbbb
push
sub
shl
movsl
js
sbb
sub
xorl
in
inc
into
hlt
lahf
dec
stos
xlat
dec
dec
cmpsb
jo
sbb
iret
fucomi
es
iret
vpmadcswd
jecxz
mov
lret
int
daa
jp
jg
xchg
pop
mov
xor
mov
or
lods
pop
in
mov
incl
inc
sub
mov
xor
xlat
inc
js
pop
mov
dec
negl
push
lock
xchg
dec
in
inc
mov
add
jae
sbb
sahf
mov
mov
sbb
adc
jge
cmp
push
pextrw
add
or
idivb
idivl
sub
jge
mov
and
cmp
mov
jnp
jmp
out
push
test
push
aam
insl
fildll
push
mov
or
int
js
jecxz
jns
adcb
push
cmp
inc
adc
adc
xchg
xchg
xor
lock
push
pop
or
int
rol
fldl
shl
nop
mov
pop
or
insl
jmp
dec
push
aaa
xchg
add
das
imul
push
jnp
cmpsl
push
loopne
sbb
lcall
pop
mov
lret
cmp
ret
sbb
stos
jg
iret
dec
xlat
mov
ljmp
lods
jae
mov
outsl
stos
mov
das
hlt
or
cli
xlat
stos
sbb
push
daa
js
push
adc
psubb
push
mov
jo
out
pop
js
or
dec
rorl
jno
sbbb
movsl
inc
testl
xchg
lods
pusha
mov
jne
mov
icebp
shlb
dec
fwait
adc
scas
dec
test
fs
movsb
mov
dec
cmp
inc
fstpt
mov
inc
in
adc
test
jl
push
sub
or
pop
mov
jle
arpl
and
shlb
insl
clc
push
ret
push
lret
xchg
push
mov
push
subb
lds
pop
movsb
mov
dec
push
jno
stos
imul
sbb
jp
and
lret
test
mov
mov
adc
and
adc
cltd
movsl
shlb
push
cmp
jmp
imul
gs
in
daa
mov
movsl
pop
or
cmp
clc
popf
or
int3
test
mov
push
mov
pop
ss
insl
mov
mov
ret
xchg
mov
mov
enter
sub
in
push
and
mov
lcall
fwait
data16
add
lcall
lock
xor
inc
add
or
rorl
xchg
pop
loop
mov
sub
test
test
fwait
xchg
fsincos
mov
and
fwait
test
and
aas
push
iret
pop
imul
dec
push
pop
movsl
insb
pop
adcl
scas
jle
push
fidivrs
pop
arpl
clc
mov
sbb
mov
lock
push
stc
pop
mov
lret
jl
pop
into
cmp
inc
aam
sbb
cmpb
push
mov
xor
stos
mov
mov
adc
mov
stos
push
cmp
mov
jne
xchg
jns
cmp
jmp
push
jg
pusha
add
int3
gs
jne
pop
jmp
pop
icebp
cmc
aas
popf
cli
sub
into
lahf
add
mov
mov
in
loopew
pop
and
dec
or
imul
cli
out
int3
cmc
scas
adc
test
mov
mov
flds
pop
inc
or
or
aaa
mov
dec
arpl
test
pop
jecxz
add
lods
lods
imul
aas
test
ret
ret
loope
inc
shlb
push
mov
scas
adc
lret
gs
insb
mov
daa
jo
mov
in
imul
cmp
popa
xor
pop
shll
movsl
push
lock
fdivl
sbb
mov
loop
or
mov
fwait
jne
fs
std
mov
mov
dec
xchg
aaa
dec
add
dec
jmp
sarb
adc
xchg
dec
lcall
sub
or
int
ret
push
insl
shl
loop
pop
pop
enter
lahf
call
xor
lds
xor
std
andb
pop
lock
pop
push
ss
shll
enter
pushf
mov
add
fidivrs
mov
movsl
out
push
add
stos
mov
jecxz
lock
test
cmc
mov
fsubr
popa
mov
sbb
xor
fisubrs
mov
push
cwtl
shlb
sahf
daa
xor
cld
and
mov
pushf
xchg
sbb
jmp
call
cmpl
loopne
xchg
stos
aaa
pop
sbb
aam
xchg
jmp
mov
push
or
ja
outsl
cli
cmp
adc
mov
xchg
cmp
out
xchg
sub
cwtl
js
in
aas
loopne
cmp
cmp
push
jmp
dec
loope
les
push
push
xchg
bound
insl
lods
ja
iret
jecxz
dec
cmp
hlt
stos
out
les
ret
sub
push
push
loope
imul
data16
and
sbb
insb
iret
stos
mov
adc
mov
sub
and
and
jmp
ret
gs
jmp
jp
inc
mov
int3
cld
jne
pop
test
cmpsl
sahf
mov
testl
dec
add
cmp
or
pop
aaa
std
dec
push
imul
sahf
out
jg
cmpl
jmp
sbb
stos
daa
mov
xor
jae
adc
pushf
hlt
test
or
icebp
testb
mov
cmp
jl
ss
cltd
lea
psubsw
testl
add
sbb
out
aam
test
jmp
test
in
std
add
push
arpl
push
adc
dec
pushf
add
pop
iret
lcall
mov
into
outsl
add
insb
insl
out
mov
inc
sub
fwait
sbb
lahf
lret
sbb
pop
jl
jnp
sub
mov
push
inc
int3
js
xor
cwtl
push
lock
and
push
jnp
jge
jnp
sahf
jl
outsl
mov
pushf
pop
loop
rcll
nop
pop
ljmp
dec
imul
daa
inc
jmp
cmp
push
cmp
fsubl
xchg
jmp
into
xchg
int3
pop
add
sbb
mov
rorl
adc
in
mov
lcall
adc
repz
stc
addb
mov
push
lcall
pop
mov
mov
or
popl
jae
mov
dec
cmp
add
adc
pop
push
shlb
jmp
mov
aaa
std
mov
inc
imul
fcmovb
mov
cmpsb
stos
or
pop
pop
dec
mov
lods
push
gs
mull
pop
jmp
mov
in
or
std
push
sub
jmp
mov
mov
mov
jae
lods
jl
sahf
in
cli
aad
sarb
insl
push
in
xchg
mov
pop
mov
adc
mov
mov
mov
dec
movsb
jmp
xchg
aaa
cmp
enter
sbb
outsb
std
and
enter
test
jge
jecxz
jg
mov
xchg
sub
lea
dec
movsl
out
xor
jne
xchg
rorl
enter
addl
stos
shl
mov
dec
add
scas
rep
rolb
dec
scas
jbe
stos
addl
sbb
dec
das
push
cmpsb
notl
mov
je
and
scas
daa
jmp
push
int3
cmpsl
mov
sbb
mov
cs
jno
loop
cmpsb
mov
push
jecxz
xchg
out
sbb
les
mov
jns
sbb
leave
data16
arpl
mov
push
loopne
mov
jbe
mov
popa
jecxz
pop
rol
mov
or
mov
xor
push
mov
je
js
sbb
pop
mov
ret
jno
mov
and
cmc
pop
and
sbb
jmp
div
mov
push
jle
dec
ja
inc
mov
pop
fucomi
ss
insb
dec
cmpsb
mov
and
mov
sbb
shr
pop
push
les
mov
cli
mov
mov
mov
adc
movsl
dec
hlt
call
pop
jg
les
push
push
or
jmp
push
xchg
inc
jge
rcrl
in
mov
pop
mov
ret
pushf
in
and
sub
mov
add
arpl
pop
inc
mov
adc
dec
loopne
daa
pop
stc
xchg
lods
ljmp
mov
inc
push
enter
sbb
push
adc
mov
loope
pop
test
idivl
in
dec
stos
cmp
inc
stc
adc
adc
clc
xchg
pop
inc
xor
sbb
aas
cmp
or
scas
push
pop
enter
lcall
push
sahf
loopne
push
sbb
sub
leave
pop
ljmp
push
and
dec
ret
pushl
jno
shlb
idivl
pop
xchg
mov
into
ret
mov
jmp
sti
scas
outsl
or
cli
jmp
dec
xchg
jmp
mov
cmc
cli
inc
rcll
adc
jmp
iret
movsl
cmpsb
ja
mov
and
incb
inc
lods
sbb
insb
dec
clc
mov
jae
jmp
pushf
test
sub
cmp
andl
xor
xor
push
mov
inc
subb
sbb
jbe
movsl
mov
or
stos
ja
mov
cmp
add
dec
leave
and
cltd
push
lock
mov
mov
sub
sbb
lods
add
pop
push
shlb
out
and
mov
in
cmp
fistps
ljmp
push
sbb
lcall
das
pop
cmp
faddl
daa
nop
push
mov
shl
movhps
faddp
jmp
sub
mov
cmp
popf
lds
lret
and
xor
mov
and
jno
xor
or
ret
cmp
sbb
xchg
mov
add
nop
cmc
ror
lock
inc
jmp
stos
mov
lcall
repnz
jbe
mov
fmuls
sbb
cmpsb
push
cmc
xchg
icebp
test
je
lret
or
jmp
push
clc
loop
jmp
xchg
push
jg
sbb
xor
insb
cltd
in
pusha
int
lock
and
enter
push
popf
insb
in
dec
push
pushf
adc
jecxz
pop
sti
or
add
scas
cmp
mov
and
inc
pushf
push
add
es
jae
cmp
and
mull
insb
mov
xor
inc
cs
daa
dec
jmp
movsl
aaa
aam
shll
sub
mov
mov
stc
mov
mov
sub
xchg
pop
sbb
enter
insl
xor
jmp
lds
push
pop
adc
ret
sub
ret
jmp
test
enter
sub
sbb
mov
int
lret
out
fistpll
inc
sbb
aad
mov
stc
in
mov
stos
int
mov
arpl
decl
das
test
jmp
insl
stos
pop
pop
adc
and
xor
pushf
inc
mov
ret
mull
jmp
repz
gs
enter
xor
push
xlat
adc
pusha
xor
jmp
cmp
call
mov
call
cmp
inc
int
and
inc
imul
cld
out
mov
je
icebp
push
jmp
and
mov
sbb
cmp
push
rcll
inc
shl
xchg
sbb
movsl
and
addr16
fisubl
jmp
sahf
jl
aaa
insb
fwait
adc
pop
data16
jno
jmp
and
jg
rclb
das
mov
js
faddl
repnz
sub
scas
icebp
pop
movl
xorb
mov
inc
xor
push
aam
rep
pushf
jmp
xor
std
pop
jmp
pop
out
push
ret
dec
outsl
fstps
ss
adc
or
inc
stos
ds
dec
jg
xchg
shl
mov
mov
jo
bound
adc
and
pop
out
cmpb
lds
mov
push
pop
inc
add
js
aad
aaa
repnz
sti
aas
xchg
push
addr16
or
subl
or
or
in
pop
sahf
pusha
jp
and
fildll
pop
stc
fsubr
add
les
mov
lods
adc
and
sub
inc
movsl
mov
push
or
mov
xor
pushf
xchg
dec
aad
add
or
gs
cmp
push
and
push
test
pop
shll
inc
mov
sub
xchg
insb
rol
inc
sub
and
dec
pop
adc
mov
sbb
push
fwait
in
sahf
or
rorl
sbb
outsb
xchg
mov
jmp
push
cmp
mov
inc
stos
lock
imul
mov
call
push
or
cmp
cmp
sub
clc
lods
stos
mov
clc
sarb
xchg
mov
imul
mov
pop
cmpsb
insl
cmp
push
jne
loopne
push
test
pushf
mov
dec
mov
mov
xor
mov
test
pop
addl
mov
mov
lcall
lea
cltd
jb
das
lock
scas
mov
out
xchg
add
cli
cltd
inc
push
lds
sub
push
mov
lock
mov
repnz
daa
roll
gs
jb
pop
lock
mov
sub
cmpsb
outsl
dec
test
jno
inc
xchg
and
movsl
mov
js
push
jle
cmp
mov
inc
cmp
mov
mov
and
cmp
mull
lahf
arpl
movsl
pop
aam
mov
in
loope
into
lea
repz
sarb
mov
jecxz
cmpsb
shrb
aaa
aad
arpl
nop
adc
gs
cli
sarl
and
mov
cmp
into
loope
or
adc
and
cmp
push
jp
xchg
mov
aas
insb
jns
jmp
push
iret
push
mov
out
fildll
and
add
idivb
cmp
jmp
xchg
in
outsw
mov
aad
loopne
popl
fisubrl
imul
std
sbb
fdivrs
cltd
adc
stos
shrb
add
pop
rorb
lret
inc
or
sarl
pop
adc
stc
pop
and
push
xchg
jnp
sub
cmc
insb
fwait
sbb
and
mov
push
cmpl
and
bound
xor
jle
stc
stc
shl
mov
loopne
sbb
jp
fdiv
xchg
mov
and
add
aam
mov
jmp
add
or
add
jo
into
lds
into
xor
cmpsb
pop
inc
nop
push
sbb
dec
pop
rorl
push
stos
xor
dec
dec
adc
and
cmp
mov
xchg
clc
cmp
stos
jecxz
xor
mov
lret
adc
arpl
and
sti
add
sub
inc
ret
loop
cltd
test
jb
pop
or
push
push
pop
cltd
ret
fwait
cwtl
inc
scas
popf
add
inc
fbld
mov
pusha
aas
push
cltd
mov
jl
and
ljmp
cmpb
push
xor
sti
xchg
inc
jl
into
adc
rcrb
adc
cmpsl
cld
xchg
loopne
mov
mov
or
mov
pop
push
fmul
sbb
ret
repnz
imul
jp
fnstenv
cltd
xchg
sub
inc
push
cltd
fcmovbe
and
lret
mov
lock
xchg
call
mov
fmull
cltd
dec
or
loope
fsubrp
cltd
sahf
clc
aaa
jne
xchg
cmc
out
lods
ja
dec
push
push
mov
mov
pop
adc
cmc
hlt
mov
pop
loop
stos
insl
test
xor
adc
jp
fnstenv
fucomip
pop
mov
jbe
adc
je
cltd
pop
rcrb
sbb
cmpsl
cltd
adc
mov
cltd
aam
stos
call
cltd
cmpsl
lds
inc
fldenv
mov
fisttpll
psraw
xchg
mov
in
aad
xlat
dec
push
outsb
and
cli
jge
ret
outsl
pop
cltd
pusha
sbb
pop
pop
adc
xchg
push
add
and
adc
lea
dec
movsl
mov
dec
inc
es
xlat
cltd
outsl
std
xchg
jo
scas
pushf
fwait
ret
fxch
mov
enter
repz
fisubrs
jne
je
lods
cltd
inc
and
shlb
mov
xchg
pop
cmp
test
loopne
in
bound
sub
call
mov
mov
dec
push
outsl
cltd
test
cmp
cmp
and
scas
int3
std
stos
xchg
ret
fsubrs
jns
push
mov
cltd
bound
push
repnz
dec
dec
out
add
pop
bound
rclb
push
sub
inc
imul
cltd
jp
pushf
data16
pop
leave
push
cltd
mov
nop
mov
addb
xchg
mull
stos
arpl
leave
decl
pop
inc
push
out
clc
pop
push
loope
cltd
cmc
bound
xchg
jne
adc
xchg
in
and
popa
xlat
leave
cmp
or
mov
test
mov
das
sub
dec
into
lahf
pusha
cltd
lret
push
std
jle
adc
mov
icebp
mov
das
loope
fldenv
push
outsl
mov
pop
lods
jmp
stos
mov
rol
mov
mov
aam
addr16
testb
and
mov
cmpsb
xchg
out
or
or
mov
xor
rcrb
cltd
stos
scas
int
cltd
shl
arpl
int3
adc
cmp
fiaddl
jge
cmp
jl
punpckhwd
sub
sbb
arpl
adc
popa
scas
data16
cmp
jno
dec
mov
inc
xorb
cltd
call
xchg
cli
cltd
mov
scas
cld
jno
xchg
ficomps
push
mov
les
adc
push
cltd
imul
and
lods
cli
lea
xchg
sbb
cltd
xor
cmp
xor
test
adc
cmp
insl
aas
sbbl
add
divl
lret
add
mov
frstor
xor
cltd
adc
mov
push
cltd
repnz
cmc
mov
jmp
test
add
enter
repz
fwait
call
mov
mov
and
mov
shlb
mov
cmp
out
sbbl
jl
mov
movsl
or
mov
dec
lahf
cltd
dec
mov
dec
cmp
xchg
mov
cmp
jnp
mov
int
lock
aam
inc
lcall
jg
cmp
cld
ja
jo
outsl
pop
gs
fldcw
push
test
sbb
dec
mov
cltd
inc
lock
xchg
es
roll
ret
test
adc
cmp
push
std
imul
loop
iret
jecxz
hlt
fildll
test
jl
mov
sub
fcmovbe
jno
cs
add
pop
lcall
cmp
mov
xchg
shlb
xor
xor
and
push
test
xchg
es
cmc
into
fidivrs
hlt
mov
jle
fildl
sub
popf
int3
inc
mov
ds
dec
jmp
jg
jmp
and
lea
inc
in
cmp
mov
jmp
stos
jg
fstps
jnp
scas
fcomps
js
jecxz
sti
shr
hlt
icebp
mov
pop
cmp
pop
fcomps
out
test
jne
dec
imul
bnd
add
push
and
inc
or
push
xor
adc
popf
jno
ss
pushf
lock
out
cmpsl
lahf
aad
in
add
fldt
jmp
inc
jle
aam
negb
cli
lret
nop
jmp
xor
fbstp
xchg
dec
sbbl
mov
stos
mov
xor
loop
mov
jno
inc
flds
mov
shlb
lahf
in
sti
push
scas
pop
pushf
xor
loope
aaa
movsl
push
shll
jmp
lock
icebp
mov
loope
or
mov
push
scas
mov
cwtl
dec
push
mov
rcrl
xchg
mov
pusha
lcall
cmp
cmp
jmp
push
sub
pop
inc
pop
fldenv
jae
push
xchg
test
sahf
outsl
cmp
mov
cltd
push
int3
loopne
and
xor
rclb
xchg
mov
sbb
stos
inc
stc
inc
lock
daa
xchg
fildll
stos
sub
ret
lds
int
sbb
jbe
jmp
cmp
fst
mov
push
test
jmp
cli
xchg
jge
cmpsb
push
dec
mov
push
push
mov
mov
aam
fmull
mov
cmp
rorb
push
negl
cmc
and
xchg
dec
mov
daa
jne
push
mov
dec
adc
in
lock
getsec
or
xor
cmp
push
mov
stos
jmp
sbb
xchg
add
jne
mov
fimull
mov
mov
jmp
cwtl
mov
rorb
mov
dec
add
jmp
cwtl
jb
or
push
sbb
xor
jmp
xchg
in
stos
or
mov
fidivs
mov
cs
inc
movsb
dec
test
cltd
shl
insl
aaa
mov
loopne
les
test
into
inc
out
cmc
popf
nopl
imul
fs
and
adc
rorl
jg
adc
fisubs
pop
jmp
cmp
sub
xchg
pop
cmp
ret
cltd
inc
add
and
sti
cmp
dec
gs
push
mov
push
mov
mov
stos
loopne
int
fidivrl
xlat
mov
outsl
jmp
movsl
push
mov
xchg
xor
add
stos
ljmp
out
shrb
mov
fwait
or
stos
pop
jmp
outsl
xor
roll
aaa
enter
cmp
imul
stos
mov
cmpsb
mov
mov
mov
and
rclb
cmpsl
xchg
pop
push
test
mov
adcb
sbb
push
add
inc
jmp
pusha
aam
lcall
mov
icebp
shl
add
inc
mov
sahf
jmp
pop
sub
gs
cmp
mov
js
xlat
notb
push
xor
adc
jnp
and
fdivrs
jnp
sarb
add
test
adc
icebp
ret
mov
aam
scas
outsb
es
in
sar
out
jmp
push
int
pushf
fsub
inc
cmpsb
subb
mov
push
jmp
push
enter
jne
negl
add
ret
insb
or
inc
dec
pop
stos
aaa
xchg
icebp
pop
jns
pop
aad
sub
pop
mov
pop
movsl
lock
mov
sub
ret
rcr
mov
iret
lcall
test
loopne
inc
jmp
xchg
xor
cwtl
jmp
adc
adc
pushf
fs
enter
je
call
jle
pop
xor
adc
idivb
mov
sarb
push
loop
stos
orb
sub
sbb
loopne
xor
mov
inc
jne
stos
mov
jnp
mov
sub
mov
arpl
cmp
xchg
fwait
clc
mov
or
leave
fidivrs
clc
inc
dec
sub
stos
and
jmp
mov
test
fbstp
shlb
out
shll
rolb
jecxz
out
insb
xor
jg
push
iret
fdivrl
mov
mov
xor
inc
xor
cmc
push
in
and
loop
mov
or
ret
add
mov
out
jp
pushf
mov
into
mov
mov
xchg
movsb
jg
repnz
stos
test
sar
mov
jbe
mov
push
inc
mov
scas
sub
idivb
lcall
int
mov
mov
in
mov
pop
jle
repnz
enter
call
xorb
into
mov
pop
cmp
arpl
mov
popa
jle
jp
nop
and
and
push
adc
ret
fmull
shlb
jg
pop
stos
pop
inc
add
mov
mov
xchg
cmp
xor
add
sbb
stc
push
sbb
xchg
xchg
jle
pop
lahf
iret
adc
roll
inc
iret
loopne
xor
fimuls
xchg
ljmp
pop
out
ds
aaa
or
sbb
mov
xchg
inc
inc
out
cwtl
inc
dec
mov
dec
push
cmpb
shr
push
push
mov
das
in
dec
lahf
mov
xchg
and
xchg
cli
pop
imul
push
arpl
mov
fwait
insb
out
gs
mov
idivb
ror
jecxz
cld
stc
push
sarl
in
imul
cmpsb
sbb
or
shll
mov
lds
or
out
jmp
lret
jmp
mov
adcl
xor
pop
and
lock
shll
jbe
stos
bound
popl
pushf
sti
jle
adc
pop
in
test
jae
jns
int3
bound
push
push
mov
push
loopne
sbb
dec
cmp
loop
stos
cmp
sub
cs
pushf
das
mov
sarb
aaa
sar
mov
je
mov
leave
push
push
sub
push
inc
push
ja
scas
dec
jp
mov
sahf
or
and
and
adc
add
fisubl
mov
mov
push
leave
dec
pop
mov
mov
not
test
sbb
push
sarl
xchg
ret
stos
inc
mov
and
fistpl
cmpsl
and
and
addr16
dec
xor
loope
xor
mov
or
addr16
daa
xor
cwtl
adc
lods
jmp
aas
pushf
pop
mov
pop
dec
mov
or
outsb
fists
leave
leave
xchg
fwait
inc
and
push
lock
lret
cmp
lahf
cmpsb
lock
add
mov
inc
mov
rcll
fisubs
jmp
sub
mov
mov
mov
adc
iret
fwait
in
test
stos
icebp
pop
mov
aaa
jmp
ret
sub
aas
ror
imul
movsl
mov
sbb
ret
mov
sub
stos
sub
cmpsb
push
mov
adcb
mov
jno
negl
subl
dec
mov
or
jae
rol
dec
shll
mov
lock
test
stos
jmp
or
data16
fildll
loope
dec
sub
fisubs
add
push
ficompl
ja
cld
mov
dec
push
jno
rdrand
cmp
and
push
push
mov
cmp
cmp
stos
jg
lcall
mov
cmp
mov
pop
mov
pushf
sbb
mov
pop
jae
sub
sbb
mov
adc
ret
int3
stc
or
pop
jl
inc
cmp
lock
xor
sub
sbbl
cmc
mov
add
jle
insb
in
dec
inc
js
rclb
ret
or
push
or
testl
mov
mov
mov
xor
int3
mov
push
push
mov
je
adc
or
icebp
mulb
shrl
mov
lock
insl
xchg
adc
outsb
mov
bound
push
and
add
and
inc
jmp
lock
xchg
pop
pop
aas
and
dec
mov
loopne
std
pop
int
jb
jge
mov
lahf
leave
inc
push
or
sbb
stos
mov
sti
pop
push
jge
and
in
aaa
pop
jo
outsb
push
lods
fwait
fwait
jmp
sarb
lock
pop
mov
repz
inc
cmp
add
rorl
ret
pop
lods
popf
push
push
stos
inc
xchg
jb
in
hlt
in
cwtl
sub
mov
sub
sti
shl
inc
mov
jmp
mov
jbe
mov
xchg
or
rolb
test
push
adc
sub
hlt
aaa
popl
andnps
lea
xchg
lret
lcall
loopne
jno
pop
push
or
and
jo
mov
jae
inc
in
xor
push
mov
mov
xor
mov
in
int3
loopne
xor
stc
xchg
push
sub
pop
aam
inc
jmp
lret
arpl
loopne
pushf
ret
pop
aas
outsb
cmp
insb
and
mov
mov
out
std
adc
stc
mov
inc
xor
xor
aaa
cmp
xchg
jge
fisubrl
sub
xchg
out
test
in
push
jae
in
jbe
jmp
push
inc
rolb
stos
ret
js
mov
sbb
popf
stos
imul
push
out
cmp
lock
outsl
sbb
cmp
test
jp
stos
loop
dec
dec
or
sbb
pushf
test
insb
mov
jg
lds
inc
into
loopne
enter
sub
jmp
es
adc
adc
aad
pop
sbb
xchg
or
inc
std
out
stos
outsl
icebp
sbb
lret
andl
adc
movsl
insb
mov
stc
jmp
push
sub
pop
popf
mov
sahf
push
and
jmp
or
pop
adc
imul
cli
fsubs
in
je
outsl
cmpl
or
mov
dec
repz
xor
insl
jmp
mov
mov
cmp
jae
jnp
mov
mov
iret
inc
adc
pop
outsl
ja
aad
shlb
add
mov
out
dec
loop
popa
mov
jnp
adc
and
or
add
fwait
dec
and
cmc
lcall
inc
jle
xor
mov
ret
inc
sbb
mov
lock
ret
aaa
repnz
jmp
push
iret
jne
out
inc
ja
popf
jns
jnp
mov
jecxz
mov
sarb
imul
out
jmp
jp
sub
xchg
fmul
testb
ds
sbb
insb
jl
in
xchg
jo
mov
and
dec
xor
sbb
arpl
lret
stos
das
mov
bsr
mov
aam
divl
aaa
js
add
pop
inc
dec
mov
sub
cs
jp
jmp
xchg
cmp
std
imul
or
jmp
mov
xlat
fisttpl
inc
xor
subl
dec
dec
push
inc
mov
mov
stos
push
enter
jo
pop
mov
jecxz
mov
dec
add
jae
push
fisttpll
dec
movsl
notb
iret
rcl
pop
add
aas
pop
pusha
bound
lds
mov
mov
aas
loope
pop
jns
and
andb
mov
and
dec
ret
jmp
in
enter
test
sti
sub
jns
add
cmp
mov
jmp
fsubl
and
jg
into
adc
and
jmp
inc
int
xchg
or
jg
xlat
mov
adc
js
bound
sbb
jmp
push
xacquire
mov
pop
mov
testb
cmpsl
std
add
movsl
ret
mov
das
rcrl
and
mov
pop
or
sbb
mov
cmp
cbtw
or
or
pop
and
lcall
popf
lock
loopne
or
sub
adc
idiv
std
or
jbe
insl
sub
xchg
add
and
mov
xchg
push
inc
push
sti
mov
fdivrl
cld
out
ljmp
into
push
jo
cwtl
out
mov
fsubr
arpl
push
fiaddl
fistl
dec
inc
adc
sub
pop
cmp
lret
scas
inc
out
sub
mov
loop
dec
xchg
push
aam
repz
lds
mov
mov
js
push
dec
push
mov
addl
shrb
stos
fcomps
pop
sub
sbb
jge
sub
je
imul
lods
cld
inc
push
mov
and
cmp
jge
adc
nop
mov
int3
mov
call
aam
jae
popa
xchg
inc
adc
sahf
int3
into
aas
mov
xchg
jecxz
jg
dec
pop
push
xchg
mov
xor
lods
sub
jno
adc
sbb
ja
inc
or
std
outsb
hlt
cmp
dec
fwait
mov
aam
ss
lahf
or
ret
shlb
mov
jl
popa
xlat
sbb
imul
pop
xchg
bnd
mov
mov
add
inc
jbe
mov
pop
pop
mov
jecxz
arpl
pop
into
and
outsl
xchg
test
cs
nop
cmp
addr16
inc
rcrb
outsl
stos
inc
int3
mov
stos
add
jmp
out
shlb
mov
cld
adc
jbe
loopne
mov
rclb
shll
or
push
fildl
mov
in
mov
fmulp
mov
rcr
imul
mov
jne
pusha
scas
lcall
push
dec
and
mov
lcall
jo
repz
pop
stos
rorb
sbb
aam
loope
popf
test
dec
sarb
enter
dec
jns
enter
sbb
outsl
xor
shlb
das
jge
aam
inc
aas
stos
movsb
imulb
sarb
sub
mov
je
sub
jle
jg
mov
icebp
inc
mov
add
jmp
les
sub
push
xchg
sbb
movsl
or
rcll
push
pop
mov
imul
jbe
dec
jae
and
jecxz
mov
into
push
fdivr
icebp
push
dec
jg
movsl
jmp
push
cltd
aad
or
fidivrs
mov
mov
push
mov
repz
fistl
popa
pop
xchg
push
jmp
jp
aam
jno
jns
cmpsb
cmp
push
sbb
cltd
cmpsb
xchg
pop
lcall
lahf
movsb
mov
movsl
xchg
sub
daa
sbb
mov
lds
xlat
mov
sbb
mov
fidivrl
mov
fcompl
or
xor
leave
enter
popa
pop
movsl
lret
cmp
out
pop
inc
push
mov
and
mov
xchg
push
mov
cltd
push
bound
or
lahf
push
scas
xor
dec
sbb
cltd
mov
ret
adc
adc
jge
mov
pop
inc
cltd
sbb
cmp
mov
roll
adc
add
popa
xor
cltd
pop
sbb
pop
xchg
negb
sbb
aad
pop
arpl
ds
iret
cltd
sub
jp
xor
imul
push
add
adc
add
push
cmc
inc
outsl
cmp
into
and
and
and
xor
mov
mov
mov
pop
mov
push
sahf
sbb
push
je
cltd
fwait
or
xchg
cwtl
lods
out
cltd
jno
xchg
movsb
imul
outsb
rcl
daa
push
out
nop
mov
mov
mov
cltd
cmpsb
cmp
jge
cltd
xor
push
mov
iret
or
jb
mov
pop
lea
sbb
in
out
adc
iret
cld
dec
pop
mov
scas
xchg
xor
clc
jg
cltd
jnp
cmc
push
scas
lret
pop
xlat
inc
jae
and
fsubr
xchg
fisttps
jns
loopne
aas
mov
xchg
mov
arpl
popa
mov
sar
mov
ljmp
inc
push
aaa
mov
ds
cmpsl
sahf
mov
jle
dec
andb
sub
sub
insl
cmpsl
out
lret
push
rcr
fsubrs
cltd
movsl
sbb
pop
and
je
scas
rcll
repnz
adc
cwtl
mov
test
mov
cltd
xor
data16
pop
dec
mov
lea
es
pop
rcrb
xchg
cmpsl
push
ficoms
stos
mov
imul
mov
mov
cmp
push
sub
aad
out
jp
xchg
sarb
fs
push
in
mov
sbb
jb
pop
push
xchg
cltd
lock
idiv
imul
lds
pop
push
pusha
lock
adcl
cmpl
and
xchg
imul
arpl
lods
mov
cmp
sub
fisttpl
aad
pop
cld
xor
xchg
jo
dec
xchg
lahf
push
jne,pt
cltd
xor
lds
adc
sub
int3
and
xchg
pop
fucomi
out
sub
rclb
std
jbe
jg
cltd
push
sub
dec
mov
add
mov
rcrb
testl
ss
mov
and
jecxz
cs
xchg
imul
add
pushf
fwait
loope
outsb
mov
or
push
push
xlat
cld
sbb
aas
test
in
and
mov
mov
aaa
loopne
insl
sbb
addr16
repnz
scas
or
push
mov
fwait
pop
lods
into
insl
dec
fsubrp
xchg
add
lcall
pop
push
test
push
je
cltd
mov
adc
mov
and
in
xchg
mov
xchg
arpl
stos
pop
cltd
sbb
xor
and
orl
lcall
inc
in
gs
xchg
cmp
xchg
push
call
negl
test
push
jl
mov
add
mov
push
cltd
in
mov
mov
push
xchg
lcall
into
mov
divb
mov
mov
sbb
pop
test
mov
xchg
aas
ret
js
movsb
shlb
in
add
mov
mov
int
shl
mov
cwtl
xor
xchg
enter
sub
mov
cltd
insb
jae
lds
cmp
mov
sub
dec
cltd
xchg
stos
xor
lds
lea
ret
add
fwait
mov
xchg
loope
out
jnp
pop
xorl
xor
enter
fstpt
insl
push
data16
adc
fcoms
cltd
inc
cmp
xchg
aam
fiaddl
jo
out
insl
push
cmpsl
and
cmp
int
divb
cmp
into
mov
dec
mov
sbb
sbbb
fwait
pop
or
subb
jnp
pop
mov
or
into
add
test
shlb
es
inc
cltd
push
sbb
mov
mov
cmpb
adc
int3
mov
cmp
enter
cltd
inc
dec
mov
adc
je
mov
fwait
add
sbb
pop
fistps
test
lretw
or
pop
mov
fadds
mov
cltd
cmc
cmpsb
les
je
adc
aad
or
xchg
sbb
imul
adc
jp
insb
pop
cmp
aam
push
lret
cltd
and
dec
dec
out
dec
cltd
sarb
call
mov
xchg
fldt
pop
stc
mov
cltd
repz
pusha
scas
cltd
int
push
jo
hlt
arpl
lock
adc
addl
mov
cmpl
mov
pop
cld
mov
bound
pop
or
mov
xchg
push
cltd
dec
mov
adc
xchg
cltd
sarl
inc
sbb
pop
xchg
mov
outsl
int
cmc
inc
ret
jge
sbb
jmp
pop
fcoms
ret
mov
xor
and
aas
mov
ljmp
jmp
mov
loope
hlt
jmp
cmp
jmp
imul
lock
inc
cmpsl
aam
jmp
rol
mov
roll
push
in
arpl
fcomps
pop
loop
test
push
sahf
sbbb
ljmp
outsb
or
adc
sub
hlt
mov
jns
fdivp
rcrl
pop
and
rol
inc
test
outsl
pop
iret
mov
cmpb
rorb
jg
and
movsl
out
subl
lods
cmpl
sub
mov
cli
pop
xor
out
jmp
push
lods
arpl
imul
cmp
mov
dec
inc
pushf
icebp
ret
push
pop
fildl
jge
add
mov
gs
jno
mov
stos
scas
leave
fdivrl
or
sub
lahf
test
loopne
pop
stos
shll
mov
daa
fwait
jmp
adc
pop
stc
pop
pop
dec
add
mov
ret
lret
fidivl
mov
shll
jns
pop
jmp
aam
mov
movsb
add
pop
inc
push
push
or
rcrb
aam
movsl
cwtl
mov
call
xchg
xor
fistpll
ss
cmp
add
fidivrs
cli
adc
ds
inc
cmp
cmpsl
cmpsb
aaa
jo
xor
jne
inc
and
hlt
add
mov
shr
sahf
and
pop
jge
xor
push
jge
mov
pusha
jae
fists
push
xor
cmp
rolb
lock
sbb
sahf
mov
sbb
mov
jle
inc
leave
bnd
push
and
rol
js
addl
add
mov
cmp
dec
js
lods
add
mov
test
mov
mov
pop
or
jg
stos
adc
rcl
mov
and
icebp
aas
mov
and
sti
fldt
les
aam
movsl
jmp
ficompl
mov
subl
dec
add
inc
mov
loopne
enter
jns
mov
mov
shl
and
jns
mov
pop
jl
xchg
xchg
lahf
pop
add
cmp
mov
insb
inc
xchg
mov
or
jbe
mov
jmp
mov
loopne
dec
cmp
add
jmp
add
adc
fimull
ljmp
lcall
mov
cmpsb
outsb
int3
into
fwait
test
ja
fiaddl
inc
insb
fwait
jmp
inc
ds
add
pop
loopne
dec
fisubs
fldt
sbb
jl
insl
je
mov
add
jg
repnz
xchg
adc
mov
cmpsb
xor
imul
push
int
test
fwait
sbb
mov
sahf
cltd
xchg
sbb
scas
lea
cltd
xchg
in
subl
push
jl
mov
lret
cmp
repnz
and
out
insl
fistpl
mov
pop
arpl
mov
xor
fisubrl
int3
stc
jbe
mov
mov
mov
pop
cltd
cmpsb
imul
push
cltd
hlt
jno
test
inc
js
test
loope
inc
cltd
int
pushf
xchg
adc
or
ljmp
je
xlat
pop
hlt
push
cltd
xchg
mov
add
sub
mov
fisubrl
mov
or
cld
leave
or
lods
sti
cltd
in
js
push
imul
push
cld
pop
rcrb
mov
mov
adc
xorb
inc
das
inc
sub
fldl
mov
mov
adc
pop
cmp
mov
std
sidtl
jns
cltd
xchg
int
pop
add
sbb
cltd
or
push
movsb
cltd
inc
sarl
sahf
and
shrb
fnstenv
pop
test
mov
cltd
dec
mov
pop
cltd
sbb
mov
cld
cltd
ljmp
aaa
cltd
lea
push
fstpl
xor
loope
add
xchg
leave
push
outsb
mov
repz
movsl
mov
incl
fstpl
pop
pop
lea
xor
jbe
jne
mov
adc
cltd
add
aad
and
mov
dec
cmpsl
mov
repnz
int3
pop
pxor
fldt
cltd
jbe
pop
rorb
andl
jne,pn
pop
or
push
movsl
cmp
mov
rcr
adc
lods
add
sbb
int3
sbb
sbb
mov
or
pop
push
repnz
std
into
cmc
mov
sub
mov
test
cli
test
movzbl
repz
arpl
js
mov
or
xchg
cmp
stc
cltd
pop
mov
popf
test
lods
push
in
or
mov
mov
or
cltd
insb
das
in
test
sbb
ds
or
clc
pop
cltd
daa
inc
xchg
sub
xchg
movsb
cltd
out
in
add
bound
jp
iret
js
aaa
pop
push
pop
shrb
jmp
jnp
xchg
jns
sub
aas
stos
mov
sbb
or
lahf
jne
mov
push
mov
js
xchg
repz
mov
inc
and
mov
imul
test
mov
cltd
vcvttpd2dqy
jp
and
pop
int3
pop
shlb
call
cltd
cmpl
dec
push
bound
mov
daa
shll
sbb
xlat
sbb
pop
mov
imul
jmp
inc
pop
and
pushf
cltd
or
and
dec
je
scas
xor
gs
ret
lds
fwait
test
f2xm1
mov
push
cltd
sahf
in
mov
inc
jmp
mov
loopne
push
mov
add
lock
addr16
jg
cltd
repz
adc
sti
lea
sbb
stc
or
pop
fs
jae
inc
aam
add
fstpl
inc
pop
push
imul
or
push
call
jo
inc
jno
into
xchg
subb
and
es
adc
push
cltd
sbb
in
push
jae
mov
cltd
pop
scas
xlat
inc
stos
xor
adc
xchg
test
or
fwait
cmp
inc
add
insl
sub
inc
cltd
stos
xchg
push
mov
mov
lds
cltd
and
jno
mov
mov
adc
lods
push
subb
cltd
jecxz
jns
pushf
push
aad
cmpsl
and
jo
ljmp
loopne
jno
mov
fsubr
fsubrp
sbb
cmpsl
cltd
jnp
sarb
stos
loopne
sub
stc
dec
or
nop
lcall
lcall
jge
push
cld
rclb
jno
cs
inc
cltd
jecxz
sbb
cmc
lds
mov
test
adc
cmpsl
cmc
cltd
push
pop
pop
les
inc
adc
lret
push
pop
lds
jne
dec
cmpsb
sub
sub
cltd
lahf
rcr
mov
jb
ss
xchg
mov
outsl
fists
add
repnz
mov
sub
sbb
add
into
sbb
mov
push
jmp
dec
out
mov
repnz
nop
cltd
in
popa
mov
in
ror
pop
or
push
cmpsb
outsl
mov
jnp
mov
or
loop
movsb
push
cltd
lods
jbe
jg
add
sbb
popa
arpl
fstps
dec
mov
mov
pusha
dec
add
mov
add
cs
mov
setle
cmpsb
pop
ror
lea
fwait
mov
inc
mov
add
scas
lods
mov
pop
xchg
add
adc
cmp
lret
rcrl
fmulp
add
adc
pop
jecxz
sbb
int3
int
mov
rcll
add
scas
xlat
pop
dec
cmpsl
sbb
out
sbb
scas
mov
subb
addr16
pop
aas
pop
scas
test
imul
sub
movsl
mov
pusha
lahf
mov
xor
sbb
outsb
sub
jmp
fcom
sarb
push
dec
push
pop
fwait
pop
mov
mov
adc
or
ret
rorb
cltd
inc
adc
cli
cltd
out
in
jae
mov
cltd
xor
das
dec
cltd
cli
int3
push
test
adc
sbbb
mov
cltd
cld
or
mov
jo
loopne
jle
mov
fnstcw
sub
xchg
inc
adc
clc
inc
fists
into
bnd
cltd
sub
mov
mov
loopne
gs
jmp
std
js
aaa
js
cwtl
sbb
ljmp
xchg
pop
mov
in
mov
sub
out
shr
ds
std
pusha
lock
and
in
adc
int3
or
mov
xorb
bound
mov
stos
gs
jmp
out
mov
rep
aam
lea
sub
testl
jns
push
out
stos
or
mov
push
mov
rcll
sub
fistpl
mov
ja
es
adc
and
mov
test
and
dec
adc
mov
or
inc
gs
push
orl
test
testl
jmp
daa
cmpsl
mov
mov
push
in
jmp
mov
dec
mov
cli
xchg
cmp
into
mov
lods
inc
mov
cmp
and
push
jmp
stos
mov
sbb
dec
fstl
add
iret
lds
imul
dec
pop
jae
xchg
xchg
out
pop
cltd
lock
and
lea
cmp
mov
int3
mov
test
movsl
notb
stc
mov
rorl
shlb
dec
push
push
mov
mov
aam
jns
lahf
adc
in
jns
pop
pop
mov
rcll
scas
jne
dec
stc
xchg
shlb
cmp
inc
sub
fwait
addl
les
mov
jmp
jne
push
inc
cmp
fwait
pop
cmp
insl
sub
push
and
test
lret
inc
mov
imull
xor
test
cmpsl
or
das
mov
jle
imul
xchg
icebp
dec
fnstsw
push
sub
inc
mov
xchg
cmp
push
mov
mov
mov
inc
gs
test
fwait
add
hlt
arpl
enter
push
sub
pop
fildl
std
inc
loopne
scas
int3
jl
movsl
cmp
lock
push
mov
inc
cmc
cli
ret
test
ret
sbb
shl
fwait
sahf
jge
and
iret
sub
cs
lods
inc
push
loopne
mov
data16
mov
cmp
popf
xor
sub
scas
out
jg
cmc
inc
pop
push
rorb
xchg
daa
cmp
cwtl
jmp
dec
cmc
push
sar
stc
lahf
jno
mov
adc
push
shl
out
sahf
and
pop
jns
ds
cmp
xlat
pop
push
sbb
movsb
movsl
sbb
stc
jae
into
pop
push
and
lock
jbe
jp
pop
int3
stc
sbb
outsb
fwait
mov
jb
shlb
les
loope
sbb
push
movsl
push
or
in
scas
pusha
sbb
out
pop
inc
lret
test
mov
int3
lds
xchg
cmp
shlb
mov
cmpsl
lods
pop
mov
adc
ret
and
add
pop
loop
and
lods
sbb
or
stos
add
or
mov
adc
test
mov
and
fnsave
loope
inc
push
mov
je
jge
fistpll
dec
shl
pop
sub
sbb
sub
outsl
test
dec
jmp
outsl
push
cld
stos
pushf
jb
into
insl
jbe
add
dec
pop
xor
lcall
pop
lock
push
xor
pushf
pop
arpl
mov
gs
xchg
int
cmp
into
push
stos
lcall
cmp
in
inc
mov
lods
mov
cmc
mov
mov
inc
in
mov
and
imul
ret
jno
mov
adc
cli
jl
jmp
jmp
aad
std
fs
inc
loop
sbb
mov
pop
adc
repnz
mov
lea
jb
jns
cmp
jmp
ljmp
out
inc
cmp
movsb
roll
dec
push
push
inc
jns
sub
adc
adc
dec
xchg
and
jo
jmp
stos
inc
addl
or
push
stos
js
cmpsb
mov
push
pop
or
pop
jmp
popa
sti
mov
stos
mov
insb
insb
jo
shr
mov
loop
test
cmp
or
jo
dec
sub
fisttpll
cltd
mov
mov
out
cltd
js
jnp
pop
sub
lods
mov
jno
cltd
test
push
fimuls
mov
cltd
flds
inc
out
xorl
test
adc
das
ss
mov
sub
sahf
cltd
imul
push
lea
arpl
xchg
addr16
lret
cmpsl
decl
xchg
add
shl
imul
push
inc
cltd
sub
jecxz
out
lea
int3
pop
mov
xor
and
fistpl
mov
and
cltd
and
movsl
shll
adc
mov
inc
mov
mov
sub
xchg
push
dec
das
jae
cmp
call
filds
pop
pop
ja
loope,pt
gs
lahf
imul
aas
clc
sub
fstps
mov
icebp
or
push
popf
xchg
scas
pushf
jae
cs
outsl
push
inc
jo
push
jnp
jle
add
cmpsb
xchg
xlat
fwait
push
jae
mov
mov
inc
neg
pop
inc
loope
jb
cmc
mov
inc
fldl
jo
and
jmp
xor
mov
ret
andb
or
aam
lcall
int3
xchg
fbstp
xchg
ret
cltd
cmp
xlat
sub
gs
cli
imul
adcl
mov
cmc
inc
cltd
shll
cltd
xor
push
adc
test
mov
je
push
cltd
sbb
nop
sti
lds
test
push
imul
cltd
push
orb
mov
pop
fwait
int3
mov
cmp
mov
cltd
xchg
pop
or
ficomps
jecxz
jbe
cltd
rcl
rorl
sbb
or
mov
pop
cltd
mov
mov
insb
loopne
or
clc
pusha
mov
flds
cltd
shrb
scas
jmp
pop
push
insl
pushf
dec
jbe
aam
sarl
sti
xchg
cltd
lret
and
rorb
fsubrs
jnp
in
stos
pop
adc
cltd
mov
push
roll
dec
push
icebp
in
cltd
mov
mov
sbb
inc
cltd
mov
loop
add
push
sub
cltd
imul
xchg
or
divb
or
and
cwtl
cltd
pop
push
add
cltd
pusha
sbb
icebp
loope
inc
call
pop
imul
jge
pop
cltd
dec
push
cs
cmp
movsl
aas
mov
sbb
push
push
test
cltd
jp
xor
out
lret
mov
xchg
mov
add
sub
dec
mov
jo
ret
cltd
decb
push
int3
stc
sbb
icebp
jne
lods
das
cltd
or
cmp
xchg
aam
ss
dec
add
mov
xchg
xchg
imul
ret
adc
dec
mov
dec
cltd
jnp,pn
xchg
and
test
push
cmpsl
lods
cltd
mov
mov
int3
cltd
inc
add
cmp
sarl
jnp
xor
cltd
push
sbb
mov
mov
je
cltd
enter
xchg
das
fistl
ficoml
jle
cli
jb
cltd
jae
fs
jmp
aaa
cltd
popa
dec
bound
mov
in
jno
jb
add
and
adc
popf
lret
inc
rorl
mov
push
stos
cltd
inc
sub
clc
mov
test
inc
fwait
sub
inc
sbb
jne
fstl
ss
sub
cltd
rorl
push
jns
cltd
cld
sub
pop
fistl
test
movsb
jbe
mov
inc
jge
std
and
and
cltd
xchg
dec
gs
xchg
cltd
or
inc
adc
mov
push
mov
cltd
inc
inc
mov
stos
inc
and
hlt
sbbl
les
cltd
mov
aam
jns
rolb
pop
cmc
cmpsb
pusha
test
iret
or
sbb
mov
jo
sarb
sbb
lcall
stos
xor
or
sbb
fcompl
out
cltd
mov
add
inc
in
fwait
mov
jg
testb
jns
jo
sbb
xchg
sub
data16
arpl
ja
shll
xorl
sub
movsl
inc
xor
bound
cltd
sub
data16
and
add
cmpsb
cltd
nop
pop
mov
addr16
cltd
movsl
sahf
pop
cmovp
mov
cltd
and
and
mov
sarl
nop
sbb
cmpsl
dec
mov
or
inc
xor
aas
out
jo
imul
xlat
dec
jl
mov
sub
xchg
mov
pop
jb
sti
dec
mov
xchg
mov
cltd
jge
mov
int3
cltd
cmpsl
pop
ljmp
xor
mov
mov
mov
mov
imul
sar
cltd
scas
cmp
xchg
xchg
sbbb
lcall
lods
and
dec
test
cmpsl
mov
aaa
cmpsl
imul
mov
cmp
cltd
rorl
push
int
pop
in
cltd
ljmp
sub
pushf
fwait
sub
scas
push
cmp
cltd
ja
jnp
in
adc
cltd
push
cmp
outsl
cltd
mov
or
adc
out
fstl
cltd
pusha
sub
cmp
inc
or
in
push
cmp
repz
ret
jp
sbb
inc
fadds
pushf
std
jns
icebp
mov
test
movb
pop
cmpsl
mov
push
cmpsl
mov
cltd
push
cmc
mov
fwait
test
mov
outsb
and
es
das
fsts
outsb
scas
jg
js
cmp
insb
mov
cmp
and
aad
xchg
xchg
and
rcr
int3
mov
leave
mov
and
fwait
mov
loop
subl
fstps
int
in
cltd
fstl
jmp
fwait
aad
cmpsl
push
out
jmp
sub
stc
rcrb
clc
sahf
pop
jne
and
sub
jp
inc
sbb
push
dec
cli
xlat
scas
mov
cmp
inc
call
cltd
cs
mov
add
ficomps
iret
inc
mov
addr16
pop
ficompl
or
dec
push
lret
jmp
test
mov
enter
pop
pop
insl
jmp
stc
mov
ja
mov
lcall
dec
sub
mov
lahf
movsl
ljmp
push
push
cltd
fwait
mov
jns
and
mov
jge
or
cltd
xor
shlb
mov
dec
xchg
and
scas
lret
pop
loop
fdivrs
movsb
pop
cltd
in
nop
or
mov
sarl
pop
and
stos
cli
cltd
call
jecxz
test
mov
dec
xor
cltd
cmp
in
cld
test
test
adc
pop
adc
les
mov
mov
pusha
lock
adcl
pop
pop
or
sti
cltd
xor
sbb
mov
out
sbb
push
and
xor
lds
mov
cltd
addr16
loopne
mov
daa
or
mov
add
fcmovu
stos
sbb
push
sbb
xchg
or
movsb
cmpsl
jne
lods
push
jae
pusha
mov
xchg
mov
pop
adc
addr16
adc
addb
sbb
cltd
call
mov
fwait
sub
mov
xchg
leave
cmp
sub
xchg
xchg
xchg
imul
sbb
adcl
nop
outsl
aad
push
ret
pop
sbb
stos
or
inc
inc
stos
jmp
mov
adc
mov
mov
ret
rolb
add
stos
and
nop
push
in
pusha
xchg
aad
adc
cmpsl
pop
clc
xchg
mov
out
jle
les
push
pushf
lock
cmp
xchg
xor
pop
js
repz
inc
jmp
fldcw
dec
iret
push
nop
lahf
test
jmp
movsl
idivl
daa
mov
into
cld
and
inc
jmp
movsl
lock
pushf
ljmp
dec
push
fidivs
push
ret
ja
inc
sub
add
enter
mov
mov
fidivrl
mov
mov
mov
xchg
shl
pop
fisubrs
cmp
lock
sub
lret
mov
shll
mov
icebp
int
out
dec
mov
cltd
and
add
mov
jno
or
mov
fidivrs
mov
sbb
inc
inc
imul
pop
lret
bound
and
lds
push
or
mov
pushf
pop
jl
int
mov
mov
jmp
push
loope
jmp
iret
adc
jp
xor
adc
cmp
dec
mov
icebp
adc
jo
cmpl
dec
call
xchg
mov
lret
sub
incl
push
mov
stos
or
shlb
cmp
jb
int3
inc
xchg
cmp
push
push
fsubs
mov
mov
fstps
and
adc
mov
sbb
aam
mov
and
stos
cmpsl
dec
sbb
inc
les
jmp
cmp
xor
hlt
mov
push
lds
sbb
cmp
cwtl
pop
int
fmulp
inc
fisubs
fmuls
lret
scas
pop
push
and
pop
jle
inc
insb
cmp
xchg
xor
data16
fucomp
rcrl
xor
ret
ret
mov
sti
fisubl
stos
pop
push
fwait
xchg
out
xor
aaa
mov
jns
xor
mov
mov
mov
shrl
sbb
push
out
mov
fstps
jle
xchg
xchg
aas
js
and
enter
in
xor
adc
rclb
jae
mov
ljmp
and
or
inc
addr16
pusha
jo
gs
jmp
push
je
pop
dec
shlb
popf
and
mov
jl
les
test
push
ja
push
cwtl
adc
fildll
pop
jmp
pop
movsl
pop
push
iret
dec
or
divl
jmp
movb
cmp
mov
jae
or
sahf
jo
push
in
stos
push
test
idivl
jne
push
or
mulb
mov
bound
sbb
xchg
cmp
mov
adc
jecxz
arpl
or
pop
mov
adc
mov
or
cmc
and
add
jno
rcrb
enter
push
sbb
dec
mov
sbb
je
jnp
bound
dec
lock
test
mov
ret
in
and
inc
mov
sbb
and
jp
jns
daa
je
cwtl
xchg
mov
mov
xchg
loopne
stos
xor
xchg
or
scas
andl
loopne
bound
fistps
cmp
mov
int3
push
aam
cwtl
scas
das
adc
push
xchg
cwtl
es
lahf
fimull
into
insb
mov
add
fadds
outsl
lods
aas
jb
std
mov
fcmovne
shr
inc
aad
jb
jno
mov
lds
pop
push
inc
mov
xchg
mov
mov
or
loope
repz
inc
gs
add
out
and
pop
mov
jmp
test
and
lahf
push
adc
in
icebp
dec
movsl
sbb
jmp
mov
xor
test
leave
out
int
sbb
fwait
insb
pop
push
xor
cltd
cwtl
mov
push
ss
inc
cmpsl
ret
add
xchg
int3
mov
inc
bound
movsl
pop
jge
insb
fnstenv
mov
orl
add
fcoms
dec
mov
mov
push
and
xor
or
jmp
push
pop
add
lcall
dec
das
xlat
sbb
adc
test
leave
inc
dec
xchg
arpl
push
negb
and
pop
into
add
mov
sub
cltd
repnz
mov
push
int3
pop
add
xor
adc
mov
lret
cltd
jns
jno
sbb
pop
out
xor
sub
scas
adc
pop
cltd
mov
das
hlt
pop
jge
sti
cltd
ljmp
sbb
and
popa
xor
jl
mov
pop
in
rorl
insb
push
inc
push
and
pop
cltd
inc
idivb
inc
xor
incl
mov
pop
sub
into
mov
fldlg2
dec
lea
sbb
lahf
sub
dec
push
adc
mov
pop
aam
aaa
icebp
inc
icebp
cltd
lret
jne
inc
mov
xchg
cmp
add
mov
xchg
jg
cltd
adc
mov
or
pusha
mov
xchg
cltd
in
shrd
lock
loopne
inc
mov
dec
jae
cltd
js
add
adc
mov
ss
icebp
fwait
push
jns
adc
mov
fnstcw
cltd
jnp
cwtl
in
adc
roll
ja
xchg
jo
cltd
popf
inc
sahf
mov
fs
cltd
sbb
insb
xchg
cmpsl
dec
ds
push
push
fwait
jb
ret
adc
jnp
stos
gs
add
cmp
mov
sbb
jg
lds
pop
cli
arpl
push
mov
and
xor
inc
cmp
lods
daa
mov
adc
bound
adc
out
leave
xchg
mov
mov
scas
lcall
shlb
loopne
jbe
sub
add
cmp
xchg
push
xor
ds
cwtl
mov
dec
mov
cltd
sti
out
adcb
dec
mov
cltd
pop
test
test
mov
loopne
xorl
scas
adc
mov
adc
push
sub
scas
xchg
movsl
dec
fwait
add
jo
test
cmpsl
xor
adc
popa
repz
lods
rcrb
add
sar
cltd
sub
cwtl
and
test
dec
notb
arpl
leave
fsqrt
push
mov
xor
push
addr16
inc
cltd
lea
pop
dec
cltd
repnz
pop
test
pop
ret
stos
fldl2e
push
mov
xchg
sub
aas
dec
push
fcomi
leave
scas
mov
in
into
ret
dec
cmp
aam
mov
inc
rorb
xchg
dec
xchg
hlt
mov
movsl
rcr
pushl
push
in
cmpsl
cltd
in
out
inc
sub
xchg
cltd
push
popf
mov
xchg
mov
sbb
lret
je
test
cmp
cltd
sbb
dec
gs
popf
rorb
xchg
shl
mov
outsl
mov
arpl
mov
ret
inc
out
in
negl
or
lods
ds
outsb
cltd
cmc
adc
mov
cltd
pop
pusha
cs
lret
add
andl
xor
sub
cwtl
sbb
jb
xchg
adc
cltd
xor
jmp
mulb
imul
or
mov
cmp
popa
adc
jl
or
out
cltd
out
mov
nop
jnp
scas
int
add
cmp
add
mov
push
lahf
cmpsb
jmp
push
sbb
pop
fdivr
dec
int3
repnz
les
inc
into
mov
lret
cmp
jg
jnp
push
out
push
mov
mov
mov
negl
out
dec
roll
push
pop
in
push
pop
sbb
repnz
jo
sub
enter
sbb
test
sbb
dec
mov
loopne
or
cltd
jp
pushf
xchg
push
in
jmp
inc
xor
cld
fwait
jbe
push
aam
and
addl
sahf
inc
test
push
shll
cmp
stc
push
mov
lock
mov
jns
push
xchg
imul
shr
and
pusha
inc
movsb
shlb
and
xchg
cltd
xchg
mov
mov
xor
test
out
loopne
jl
lret
cltd
int3
movsl
pop
jb
mov
movsb
push
scas
jmp
test
pop
shrl
pop
cwtl
mov
fldcw
call
in
pusha
dec
pusha
cltd
xor
fadd
pop
xor
mov
call
fsts
push
jge
dec
jb
pop
push
sub
int3
movsl
sbb
mov
mov
push
cltd
mov
stc
mov
popa
popf
add
cltd
pop
xchg
or
xchg
xchg
cs
scas
mov
cwtl
cltd
xchg
dec
sbb
popa
lock
pop
repz
jns
cmc
in
cltd
mov
adc
sbb
test
mov
enter
sbb
xor
lret
lods
cs
test
push
sub
rolb
xchg
mov
dec
lock
jns
cld
xorb
ror
pusha
adc
repz
push
ret
jne
test
cltd
outsb
fisttpll
scas
shlb
rcrl
es
in
cmc
imul
lods
out
adc
lods
or
and
mov
iret
movsl
push
cltd
pop
loop
loopne
dec
loope
or
out
jle
movsb
push
mov
lcall
sbb
loop
cltd
push
add
lods
ret
cltd
pmullw
les
sbb
jmp
mov
dec
sbb
and
arpl
jae,pt
fldenv
or
dec
adc
push
jae
xchg
or
pushf
inc
and
addb
fistl
cltd
mov
jae
or
lahf
mov
or
pusha
jmp
sbb
je
ljmp
pushf
cltd
cmp
sbb
adc
jbe
in
sbb
je
xchg
add
inc
stc
cltd
dec
dec
repnz
mov
push
pop
push
cmpsl
call
sub
frndint
jmp
mov
lock
xor
addl
cmpsl
fwait
mov
icebp
cltd
mov
dec
dec
sub
std
jb
mov
add
cltd
xchg
add
adc
ret
jo
jno
pop
cltd
nop
inc
pop
push
jns
add
stc
or
sbb
cmc
inc
xor
pop
out
mov
adc
fbstp
sbb
mov
pushf
add
ret
pop
cmp
sbb
js
shlb
aad
jbe
testl
jmp
out
call
and
xchg
or
push
stos
jbe
adc
imull
mov
jb
mov
mov
push
cmc
shll
outsl
iret
mov
dec
lds
jno
cmp
adc
sub
lret
pusha
cs
dec
mov
cmp
aam
lock
lods
outsl
pop
xchg
adc
or
or
stc
add
into
add
rcr
sbb
lds
movsl
pop
lock
cmp
rorb
mov
lock
shlb
cmp
push
ret
or
fsubl
inc
movb
add
mov
outsl
xchg
pushf
test
mov
xchg
shl
cltd
push
nop
out
add
cmpsb
cmp
mov
dec
or
ds
sbb
mov
pop
pushf
movsl
jmp
fsubrs
fidivrs
pop
movhps
jmp
cmc
jmp
and
in
test
out
es
cmpsb
and
add
mov
pop
lds
inc
int
icebp
hlt
xchg
sbb
inc
mov
cltd
sub
push
cltd
mov
daa
loopne
icebp
repnz
xchg
jno
pop
fsts
sbb
xchg
add
movsl
mov
adc
mov
orb
or
jne
xchg
dec
into
fldcw
int3
pop
dec
leave
ja
cltd
loopne
movsl
cmpsb
lods
add
sub
jo
add
cltd
mov
pop
movsl
adc
jb
jmp
or
xchg
cltd
xor
loope
dec
rcrb
inc
jmp
add
dec
cltd
ss
inc
hlt
mov
dec
leave
sbbl
lcall
cltd
sub
scas
xchg
mov
fldenv
cltd
dec
int
cmp
cs
insb
dec
mov
xchg
call
push
adc
inc
and
std
pop
out
rcl
flds
jne
in
cltd
push
mov
mov
or
jns
popf
int3
mov
mov
or
shlb
daa
add
add
dec
cltd
int
xchg
xchg
in
dec
sahf
loope
mov
jns
mov
and
cld
sbb
leave
jbe
fisttpl
mov
cli
push
aad
fs
lahf
inc
cmpsb
clc
pop
std
popf
aas
fsubrs
mov
cltd
sbb
loopne
xchg
pop
cltd
jno
fwait
dec
pusha
out
xor
dec
mov
fstps
mov
pushf
or
rorl
xchg
subl
mov
pop
pop
cltd
lods
test
aas
jl
pop
add
cltd
stos
inc
ss
jae
xchg
cltd
leave
jge
pop
loop
jg
flds
dec
add
stos
cmp
jne
das
push
sbb
cmp
lods
mov
cltd
test
popa
push
and
sahf
insb
fs
mov
sub
pop
cmpsb
repz
dec
ss
xchg
das
pop
mov
paddw
jno
mov
cltd
loope
sbb
inc
fimull
inc
mov
adc
test
cltd
sbb
cmpsb
movsl
in
jae
cltd
jnp
adc
sub
push
pop
push
mov
pushf
scas
or
mov
pop
pop
out
push
mov
icebp
shlb
pop
mov
cltd
les
mov
push
insl
fwait
in
popl
mov
push
cmpsl
pushf
es
fnstsw
cltd
add
nop
sbb
out
mov
xchg
insl
rcl
out
mov
int
mov
fsubl
cltd
fisttpl
push
xor
cltd
dec
xrelease
cltd
fnstcw
mov
sbb
pop
movsl
mov
sbb
lock
test
mov
push
and
insl
imulb
mov
mov
fcmovnu
and
loope
cltd
lea
add
pop
lods
aam
cltd
mov
push
mov
rorb
cmp
int
jns
pop
sbb
push
jg
stos
push
int3
xor
out
xchg
xchg
and
inc
adc
jmp
loopne
jb
jns
cwtl
cmp
cmpsl
insl
in
pop
nop
stos
push
loopne
cmp
mov
xchg
sub
dec
dec
leave
loopne
pusha
cmpsb
mov
ja
leave
lret
sarb
dec
add
dec
xor
xchg
pop
fdiv
and
sbb
leave
pop
dec
push
push
inc
sbb
sbb
inc
mov
ret
data16
mov
adc
loope
xchg
pop
mov
rcll
or
pop
adc
jnp
clc
enter
push
mov
mov
lods
push
inc
mov
repz
fwait
mov
stos
aas
out
sbb
fwait
leave
ficompl
shlb
cwtl
or
add
je
aaa
push
jbe
cmp
dec
fisttpll
mov
popa
cmp
leave
orl
nop
or
movsb
add
ret
sub
jne
push
outsb
arpl
mov
xchg
cmp
dec
jmp
daa
cmp
mov
pushf
jmp
lret
mov
test
fdivl
je
imul
mov
mov
adc
lock
add
jmp
pushf
jmp
cltd
jmp
enter
inc
push
aas
sbb
jle
xor
push
arpl
mov
mov
cmc
jo
bound
sahf
dec
loopne
lock
xor
sub
nop
mov
jne
ja
jns
iret
push
cmpsl
mov
mov
ficompl
mov
pop
rcr
leave
loope
lret
mov
fdivl
ret
enter
jg
mov
mov
rorl
notl
push
add
bnd
cld
mov
push
adc
mov
xchg
and
mov
insl
dec
out
mov
pop
and
fwait
icebp
cmp
out
sbbb
sub
mov
aam
stos
mov
mov
sti
insb
dec
cmc
jmp
adc
mov
pop
mov
mov
movb
popa
sbb
lods
sub
les
les
pop
cmp
push
mov
outsl
ret
aaa
mov
fmulp
repz
lret
jb
push
pop
adc
pop
arpl
in
fsubrs
cmpsl
sarl
adc
testb
stos
dec
in
mov
xchg
inc
adc
xchg
jo
inc
cmc
js
stos
xchg
ret
popa
ret
mov
or
cmp
arpl
jl
faddp
mov
addr16
scas
movsl
pusha
ret
pop
movsl
sub
mov
imul
jmp
pushf
adc
bound
arpl
and
xor
negb
loopne
pop
jmp
jne
les
adc
mov
cmpsl
and
cmp
idivb
push
movsl
push
mov
movsl
mov
xchg
inc
mov
fsubrs
mov
sbb
stos
pop
mov
in
push
dec
fwait
lret
mov
std
cwtl
je
dec
mov
pop
xchg
clc
xor
roll
inc
jo
mov
xchg
mov
mov
out
mov
jns
daa
in
lock
jb
rorl
call
sub
xor
mov
sub
ja
pushf
stos
jmp
xchg
mov
add
lea
push
cmp
sub
adc
pop
stos
addb
or
cld
repnz
sub
jmp
push
lahf
sub
push
subb
inc
pop
adc
sub
mov
mov
adc
xchg
dec
xor
pop
dec
fstpl
sti
insb
sbb
mov
sub
adc
mov
enter
adc
cld
push
shrb
cmp
cltd
mov
or
jo
or
cmp
mov
or
pop
mov
inc
aad
movsl
sarb
orb
jmp
imul
int
inc
xor
scas
xchg
push
jmp
dec
xchg
mov
insb
call
stos
andb
lods
into
sbb
stos
sub
xor
mov
aaa
xor
pushf
scas
adc
and
cmp
fwait
mov
cmpsl
jmp
ja
lods
lods
imul
push
dec
xchg
stos
xchg
add
jne
mov
nop
mov
jge
and
sub
mov
jmp
lea
adc
int3
cwtl
jns
pop
mov
fdivl
mov
mov
add
mov
scas
shr
mov
jns
ret
pop
leave
sbb
rcl
jbe
jns
popf
arpl
push
sub
fistpll
pop
shlb
cmp
adc
dec
lea
jnp
jg
jo
test
jp
mov
dec
testb
lret
sbb
ret
lahf
cmc
int3
push
xchg
test
lock
mov
shlb
cmpsl
adc
jmp
mov
out
test
mov
sbb
stos
lea
cmp
mov
ljmp
repz
mov
pop
pusha
sub
dec
adc
push
mov
mov
inc
dec
in
jge
jge
mov
sarb
lahf
mov
and
dec
mov
add
iret
mov
adc
pop
sahf
jbe
jne
push
lret
jno
sub
adc
and
mov
xchg
mov
sti
mov
sbb
insb
or
and
sahf
pop
lcall
adc
mov
pop
decl
stos
es
inc
jmp
push
imul
jmp
rcrb
pop
popa
add
pop
testl
dec
outsb
sahf
xor
lock
push
inc
iret
mov
lods
stos
int3
xor
out
pop
sbb
and
push
or
arpl
mov
xchg
fmull
xor
arpl
mov
stos
jno
fildl
inc
fldenv
imul
dec
mov
mov
mov
jae
pop
arpl
sahf
inc
aad
out
pop
pop
inc
loopne
fs
imul
cmpsl
push
jg
daa
dec
sub
lock
xchg
cwtl
xor
rolb
movsb
cmp
push
push
mov
mov
adc
repnz
mov
out
xor
push
lods
jns
mov
push
xchg
mov
mov
xchg
fwait
es
jle
sahf
push
jnp
xchg
pop
popf
jbe
pop
es
sub
and
data16
in
mov
sub
aam
aad
pop
sbb
adc
sbb
sbb
fisttpll
add
add
adc
lcall
or
cmp
and
pop
jno
in
dec
jp
loopne
testb
or
inc
jnp
shr
pop
sbb
dec
jno
pop
sub
jo
add
cmp
jge
ds
sti
and
jne
ss
ret
js
pop
adc
imul
inc
sbb
icebp
inc
sbb
arpl
rorb
xchg
in
jl
or
fwait
and
or
mov
mov
out
andb
inc
xchg
rclb
cmc
rcrl
push
sahf
sbb
jb
movsl
xchg
ret
loope
inc
popl
mov
xor
and
insl
sarl
cmp
rolb
sahf
insb
xor
aaa
sbb
sbb
nop
fidivs
dec
orl
cld
ljmp
pop
cmp
sub
lahf
loopne
jmp
jb
jno
xchg
nop
cmp
icebp
fsubrl
jp
or
fbstp
jmp
outsl
sbb
jle
jg
fisubrl
adc
iret
and
arpl
sub
push
insb
loop
mov
std
xor
imul
add
jle
ret
mov
cmpsb
js
xor
clc
xchg
call
jns
lds
stc
xchg
fdivrp
sub
push
mov
lods
test
adc
mov
testb
sub
popa
push
jbe
shll
test
push
lods
xor
pavgw
leave
adcl
xor
into
dec
xor
test
jg
dec
insb
mov
sbb
xchg
mov
xor
mov
fsubp
xchg
sbb
sub
mov
jmp
orb
shrl
mov
push
fs
lret
out
mov
adc
mov
xchg
cmc
ret
mov
cmp
insl
sbb
scas
lcall
jmp
xchg
sub
push
les
pop
ds
pop
mov
stos
shr
insl
xor
inc
adc
jne
movsl
std
clc
inc
call
xchg
stos
and
loop
mov
hlt
test
or
xor
add
push
cmp
cli
lock
dec
push
shl
insl
sbb
arpl
lahf
ror
jmp
loopne
pusha
dec
xor
push
cwtl
fchs
xchg
ret
adc
movsb
pop
lods
xor
jmp
jg
cmp
sbb
out
mov
and
mov
clc
cmp
or
lahf
dec
add
mov
insl
jns
test
mov
jne
subl
addr16
inc
pushf
sub
lods
aad
add
mov
jno
notl
pushf
pusha
push
cmc
cmpl
pusha
adc
jmp
xor
mov
sti
shrl
push
cmp
xchg
jns
sub
loop
xchg
cmp
jmp
fsubrl
test
lea
jmp
dec
leave
sub
loopne
int
jmp
sbb
lock
xor
xchg
dec
pusha
jmp
outsb
rcll
lcall
push
movsl
cmp
int3
xor
push
fwait
sub
pop
sbb
stos
mov
or
loopne
sbb
lods
xchg
sbb
stc
stos
jmp
push
loope
xor
mov
imul
imul
xchg
push
roll
test
jno
out
fcoml
xchg
add
into
inc
mov
sbb
ror
xchg
loopne
xchg
jnp
lods
lock
inc
jno,pt
aas
out
jns
xor
shrb
pop
lcall
stos
mov
shl
mov
xchg
movb
xor
and
mov
cli
add
fstps
push
fcoml
inc
test
xor
stos
dec
mov
jno
jmp
or
imul
inc
mov
jmp
insl
mov
lock
adc
dec
jns
scas
jne
cmp
mov
lret
pushf
repnz
xchg
sbb
cltd
dec
adc
xchg
jecxz
or
pop
inc
into
loopne
mov
push
in
lea
test
jmp
stos
mov
inc
mov
sti
pop
pushf
xchg
mov
cld
sbb
sub
or
test
lods
and
in
stos
dec
inc
pop
aaa
inc
mov
or
enter
xchg
add
fisubrl
inc
adc
mov
stos
fldl
repz
xchg
xchg
inc
inc
aam
push
adc
repnz
in
fstpt
mov
lock
sbb
mov
sti
dec
xlat
jmp
ss
or
sbb
lret
mov
ljmp
jmp
pop
and
pushf
js
mov
mov
jne
lods
and
or
outsl
jle
push
out
sbb
adc
loope
dec
cli
movsb
stos
add
ffreep
dec
jmp
pop
inc
test
cmc
orb
clc
mov
xchg
sahf
inc
fbld
jmp
dec
jnp
inc
roll
inc
in
inc
ret
add
mov
in
mov
loopne
ljmp
jl
jno
inc
lcall
xlat
icebp
pop
jmp
ss
xor
jmp
jns
aaa
pop
or
cmp
int3
les
mov
sbb
push
jmp
inc
sbbb
mov
and
fisttps
bound
ret
cmp
mov
jge
mov
test
add
lcall
or
push
inc
xorl
ljmp
xor
adc
push
inc
and
xchg
push
arpl
pop
dec
dec
mov
mov
in
mov
push
adc
in
xor
mov
jle
mov
add
test
mov
lds
pop
lcall
mov
cmp
or
pop
and
jns
xchg
sbb
pusha
cmp
push
xor
push
cmpsb
pop
adc
jmp
xor
fs
jno
mov
cmp
jmp
shl
lcall
and
xorl
sti
push
cld
ds
push
loope
or
int
out
mov
push
push
adc
lock
pop
jae
jo
xor
aad
cmc
mov
push
add
in
pop
arpl
push
mov
psubb
adc
jl
stos
or
jae
stc
fwait
jb
clc
xor
jg
out
cmp
fs
jae
jne
dec
adc
cmp
dec
out
and
dec
mov
push
outsl
rorl
imul
sub
mov
jle
loop
out
mov
mov
push
or
push
jle
pop
jge
test
mov
jle
loopne
in
sbb
and
pop
mov
in
test
test
mov
arpl
jmp
mov
repz
out
jae
mov
lock
imul
jns
inc
xchg
pop
stos
push
aas
jns
or
sbb
inc
fwait
mov
outsb
sub
add
jo
imul
scas
lock
lcall
lret
jmp
pop
fimuls
or
push
pop
fadds
inc
ret
mov
xchg
cmp
jle
testl
daa
leave
sub
pop
ja
dec
mov
stos
sbb
sbb
hlt
stc
ret
pop
inc
xchg
js
adc
jns
int
es
or
mov
clc
mov
mov
xchg
hlt
mov
lds
jnp
sbb
std
popa
adc
push
add
aas
xchg
in
mov
ret
mov
inc
lahf
call
cli
jno
and
and
aad
cmpb
mov
repz
inc
gs
xor
jp
lock
mov
sub
inc
jmp
nop
mov
imul
iret
cmpb
cmp
or
mov
js
sbb
push
mov
lods
stos
stc
lea
mov
cld
jne
add
push
jno
enter
cmpsl
imul
mov
and
addr16
test
stc
jmp
and
and
xchg
in
jmp
clc
cwtl
lcall
jb
fnop
mulps
sbb
enter
test
insl
mov
pop
test
lock
aaa
inc
subb
xchg
fldz
int3
fstps
sub
push
repnz
gs
ret
aad
std
fdivs
sbb
add
push
inc
adc
fcos
push
dec
cmp
cwtl
pop
inc
jp
lods
inc
add
mov
xchg
ret
dec
jmp
popf
dec
pop
xchg
rorb
lret
xor
lock
mov
dec
sub
sub
sbb
add
push
sub
mov
shlb
enter
test
pop
add
dec
pop
dec
or
mov
sbb
add
lock
fadds
test
clc
push
outsb
pop
test
aas
addr16
add
xor
js
adc
xchg
in
shrl
mov
sbb
fisubrs
add
stc
push
cltd
mov
insb
ret
ret
lock
mov
cs
mov
mov
xchg
ljmp
mov
mov
cltd
lock
cmpb
mov
loop
xchg
rorl
mov
int3
lcall
dec
jmp
ds
ret
dec
outsb
mov
int
out
mov
stc
daa
cmp
or
dec
mov
fsubrl
pop
inc
mov
jns
movsb
loopne
ljmp
mov
lcall
inc
jb
inc
clc
int3
mov
jb
mov
ret
sbb
jmp
aad
add
add
cmp
mov
icebp
test
xor
int3
cmpsl
xchg
xor
sub
xor
orb
testb
cmpsl
dec
push
movsb
in
pop
dec
xchg
sbb
push
cmp
inc
call
inc
insb
cmp
mov
cwtl
es
add
jle
jmp
insb
jg
jmp
jmp
cmp
dec
push
imul
arpl
leave
xchg
push
mov
ret
out
test
sub
add
mov
jp
jmp
cmpsl
jl
mov
jmp
push
xchg
dec
das
xchg
fcoms
es
fwait
mov
filds
jmp
out
popa
mov
fildll
mov
add
loop
jb
out
mov
push
sarb
jmp
mov
xchg
ret
fdivs
add
mov
or
sarl
cs
lods
mov
cmp
scas
loopne
pop
inc
jmp
mov
mov
mov
jmp
or
mov
dec
mov
sub
jo
and
into
mov
ret
cmc
mov
inc
ret
add
stos
cs
mov
scas
and
sbb
int
xchg
out
jmp
mov
dec
mov
sbb
push
rolb
add
lock
fisttpl
mov
xchg
mov
sub
test
and
add
enter
and
or
fwait
push
std
out
push
mov
adc
xchg
pop
popa
mov
movsl
mov
xor
pop
ffreep
les
sbb
in
push
inc
ret
cmp
outsl
sub
xor
adc
in
arpl
push
lahf
js
xchg
mov
scas
push
cmp
jl
xchg
sarb
sbb
inc
loopne
lock
in
mov
xchg
fcoml
popl
adc
jl
adc
sub
lods
push
xchg
mov
dec
jmp
xchg
bound
sub
loopne
ss
add
mov
test
in
inc
push
js
adc
dec
loopne
jns
jae
adc
std
inc
xchg
shll
nop
outsl
push
cmp
or
mov
cmp
and
dec
shr
pusha
call
sbb
inc
in
push
cmp
repz
and
mov
mov
insl
mov
dec
add
arpl
adc
test
mov
mov
lods
push
mov
loopne
inc
addl
jl
or
or
xor
fnstsw
iret
mov
mov
outsb
cwtl
push
sbb
sbb
lret
lods
mov
cwtl
rorb
popf
test
adc
sbb
jmp
inc
int3
adc
dec
push
and
cmp
enter
and
loopne
sbb
mov
insl
add
int
xchg
bound
inc
inc
mov
sarl
fsubp
sbb
pop
add
dec
pop
cmp
or
sbb
outsl
sub
cmp
push
test
lock
inc
jg
in
frstor
dec
shlb
push
ss
test
push
inc
popf
bound
cmp
arpl
sub
imul
pushf
push
ljmp
fisubs
fiadds
outsb
test
inc
xchg
dec
shr
aam
cltd
jle
inc
pop
mov
adcb
aad
push
stos
mov
aad
and
mov
pop
dec
ljmp
imul
lock
xor
cmc
imul
push
cmp
xorl
adc
lds
add
repz
jno
jo
xor
rclb
rcrl
pushf
stos
and
addl
inc
dec
rorb
cmp
dec
xor
rorl
jp
repz
sub
enter
jno
loopne
adc
cmpsl
adc
jmp
enter
mov
pop
into
xor
jbe
adc
mov
and
cltd
and
xor
push
jmp
mov
mov
cmp
push
lcall
push
insl
cld
aas
xchg
xchg
xorl
movsb
mov
and
test
movsb
xchg
rcrb
jmp
adc
lods
xor
jg
or
xor
mov
adc
dec
aas
jmp
fldl
cmp
insb
xchg
pop
loopne
sub
sbb
adc
adc
stc
mov
and
in
loope
lods
mov
dec
mov
ja
xorl
cs
jno
mov
pop
fcompl
xchg
subb
and
shlb
cmp
repz
cmp
pop
stc
aas
jp
xor
std
std
dec
lret
push
xchg
jl
imul
shll
and
loop
sub
pusha
out
repnz
aaa
lock
inc
das
adc
ss
repnz
inc
sub
jg
nop
jae
repnz
cli
inc
adc
and
iret
pop
or
dec
pop
or
les
push
cmc
lea
cli
movsl
or
add
inc
data16
daa
mov
out
mov
sahf
dec
call
mov
lea
mov
sub
scas
loope
orl
mov
js
es
ret
dec
mov
inc
mov
add
xlat
or
aad
xor
mov
jl
xor
fldt
xchg
jns
sub
inc
jne
add
aam
dec
push
jecxz
enter
scas
sbb
or
jnp
scas
and
pop
loop
cmp
xchg
cld
out
popf
fs
adc
sarb
pop
add
and
lret
dec
ljmp
jae
cmp
les
jno
inc
adc
lcall
jmp
insb
cli
xchg
fwait
jns
adc
in
and
dec
inc
lea
aaa
mov
fsubrs
fwait
out
lods
cltd
inc
inc
jmp
xchg
dec
ja
dec
adc
jp
push
xchg
arpl
and
and
xchg
dec
shlb
roll
lcall
pushf
jmp
add
adc
cmp
std
and
ljmp
sbb
imul
push
sub
ficoml
and
jne
mov
mov
vpsubusb
jb
xchg
imul
mov
out
or
mov
sbb
mov
add
push
xchg
xchg
ljmp
jnp
mov
jne
lahf
dec
stos
sub
inc
push
pop
jne
pop
lret
lea
mov
jno
sbb
loope
iret
xor
stos
mov
lahf
jl
cmp
xor
jl
cmp
sahf
mov
pushf
sarl
or
loope
push
jge
cmp
jnp
mov
xchg
movsb
cli
xchg
outsl
inc
mov
sbb
adc
xchg
and
xchg
add
std
aam
outsl
iret
loop
test
inc
sbb
imul
lret
inc
add
mov
mov
mov
jmp
mov
icebp
shrl
lock
mov
cmp
test
jnp
adc
xchg
push
cmp
mov
orb
jmp
cmp
jecxz
fdivrl
pusha
movsb
lock
pop
or
or
xchg
dec
xor
jmp
push
xchg
pop
add
bound
mov
adc
push
in
cmp
mov
xor
jae
jns
push
xchg
jb
push
mov
jmp
sbb
adc
loopne
xor
cmp
jmp
rorb
repnz
movsl
mov
leave
fiadds
inc
jecxz
mov
rolb
aad
mov
add
call
xor
rol
lcall
cmpb
cltd
stc
mov
and
sbb
lcall
hlt
xchg
int3
sbb
push
push
jg
sbb
test
fadd
ret
jmp
out
inc
ret
xchg
enter
nop
arpl
lret
sbb
movsl
imul
mov
push
sbb
or
jle
dec
jle
loopne
test
sbb
lock
ljmp
lds
dec
daa
ret
mov
jmp
jecxz
push
mov
fisubs
push
shll
jo
dec
xlat
ss
push
mov
scas
sbb
jne
cmpsl
xor
add
xchg
je
test
lcall
pusha
dec
repnz
into
sbb
jmp
mov
lods
xor
push
xchg
inc
movsb
xlat
sub
cmp
pop
jbe
add
mov
fcompp
loopne
imull
inc
jbe
mov
dec
shl
and
fdivl
test
sti
cltd
lock
sbb
pop
lods
jae
pop
sbb
cli
mov
xchg
mov
dec
mov
and
xor
std
pusha
clc
inc
dec
add
mov
push
cmp
jno
mov
fnstenv
cmp
xchg
sbb
xchg
pop
jg
dec
out
adc
divl
and
sub
in
jl
aas
mov
push
pop
cmp
pop
sub
inc
dec
jb
push
in
stos
jmp
insl
sbb
dec
orb
lret
movsl
push
mov
jl
addr16
mov
cwtl
jmp
into
aam
jbe
add
cmp
popf
out
adc
adc
pop
adc
jo
ja
jns
int3
or
dec
dec
cmp
insb
scas
cmp
sub
xchg
push
add
pop
js
pop
stos
fs
xchg
adc
daa
and
adc
into
jb
cmp
mov
jb
inc
pusha
mov
adc
ds
fcmovne
outsb
loopne
ss
test
jecxz
cli
movsl
fcoml
mov
shlb
scas
idivl
xchg
inc
ds
out
inc
insl
pop
ret
sub
rcrl
into
jmp
loop
dec
inc
mov
arpl
jg
das
movb
addb
xor
pop
xlat
jmp
jg
push
mov
adc
mov
ljmp
pop
push
stos
int3
or
nop
vmread
subb
popa
fwait
xchg
jmp
sub
mov
mov
lret
xchg
mov
adc
into
cld
cwtl
mov
nop
stc
mov
sahf
cmc
popf
sub
jns
push
outsl
aam
jno
popa
xor
enter
mov
addb
imul
movsb
adc
aaa
pusha
scas
loope
pop
aad
stos
les
adc
lcall
cwtl
ss
idivl
sarb
das
pop
cmp
cld
lods
pusha
aaa
fwait
pushl
pop
jge
insb
jmp
push
in
push
enter
aas
add
mov
stos
movsb
or
mov
mov
mov
pop
leave
adc
scas
das
int
into
jo
sti
push
mov
jo
daa
mov
out
xchg
and
push
fwait
adcl
jecxz
mov
inc
test
imul
or
mov
mov
push
bnd
fldl
pop
push
sti
or
or
add
jmp
cwtl
and
adc
outsl
inc
and
and
mov
adc
sub
mov
adc
mov
lock
or
mov
add
notb
stos
mov
and
pop
loopne
jmp
inc
sub
rorl
and
cld
movsl
mov
adc
pushf
addr16
mov
outsl
dec
loop
adc
test
popf
daa
cmp
push
adc
jno
mov
inc
sti
in
pop
lock
subl
xor
pop
inc
andb
mov
popa
fcoml
add
sti
mov
test
push
ds
fyl2x
sub
aaa
pop
fisttps
mov
and
aam
cmp
movsl
js
cltd
mov
jge
daa
xor
cmp
pop
and
xchg
cmp
sbb
jnp
push
outsl
mov
add
mov
mov
jae
sbbb
jmp
mov
jns
pop
ret
sbb
test
sbb
clc
mov
testb
arpl
jns
inc
pop
repz
or
loopne
xchg
lock
fldenv
xor
mov
xchg
scas
aaa
pop
push
jge
popf
stc
add
cmp
sub
xchg
xor
cld
cmpsl
subb
test
pop
out
imul
cwtl
jmp
jmp
ret
cmpl
into
movsl
push
or
ss
sub
lock
mov
stos
bnd
mov
or
sub
outsl
mov
mov
je
inc
fnsave
leave
lock
xor
and
test
es
jge
popf
push
call
cwtl
jo
or
inc
jb
and
xchg
andb
pusha
sbb
and
jmp
test
or
mov
adc
cmpl
sarl
mov
jl
inc
inc
out
mov
icebp
fidivl
lcall
lock
lock
adc
cmpsb
fs
and
mov
adc
jns
xchg
adc
xor
mov
jg
inc
rcll
hlt
stos
sbb
push
fnstenv
jecxz
adc
lds
shll
into
or
icebp
dec
imul
mov
cmp
mov
cmp
jnp
mov
add
jl
nop
stos
daa
jmp
mov
ror
or
push
sbb
add
shl
arpl
cmp
stos
adcb
add
mov
or
push
adc
daa
cmp
fmulp
sbb
ficoms
stos
cwtl
or
dec
sbb
pusha
adc
les
lret
mov
adc
add
inc
ja
sbb
lds
std
inc
and
enter
faddl
insl
sub
pop
dec
jmp
jbe
test
sub
jge
insb
call
fmulp
idivb
lock
pop
imul
adc
push
outsl
jg
jns
into
loopne
std
jg
pop
cmp
test
xchg
jg
pop
loopne
jb
inc
movsl
xchg
fsubp
lock
aaa
push
aaa
fucomp
arpl
pop
movsb
stc
mov
lods
repnz
cmp
mov
fadds
jne
push
lock
add
pop
aas
loope
clc
jg
jo
loope
jmp
push
pop
test
pop
sub
in
push
enter
xchg
mov
xchg
dec
push
mov
sub
mov
xchg
jmp
add
lea
and
inc
sbb
lahf
pusha
gs
adc
jnp
mov
push
sub
js
sbb
divl
jno
jmp
adc
es
es
mov
int
cmp
pop
mov
cltd
ja
shrb
psubd
or
inc
add
fucomi
pop
pop
cli
sub
push
mov
movsl
outsl
jmp
xlat
cmp
push
or
lods
fwait
cmp
jmp
or
test
lret
sub
cmp
xor
stos
jnp,pt
adc
pop
int3
sbb
scas
aaa
gs
mov
cmpl
push
xchg
repnz
outsl
shll
loopne
mov
sub
mov
push
cmp
and
pop
test
icebp
pushf
jmp
repnz
push
enter
arpl
push
mov
inc
or
loop
rcr
mov
push
lds
lock
jmp
shrl
inc
fidivs
repnz
je
fcomip
stos
dec
fisubl
mov
pop
sub
jb
mov
xchg
mov
in
inc
loop
adc
xchg
insl
into
xchg
jnp
stos
xor
in
or
mov
add
int
in
pop
sahf
mov
push
sub
insb
mov
pop
and
add
push
mov
aad
ja
loopne
imul
cmp
mov
hlt
out
inc
push
int3
push
out
cmp
add
cmp
iret
and
insl
imul
shlb
cmp
add
sbb
loope
rcrb
cmp
push
dec
adc
popa
or
pusha
lock
sbbl
pop
aam
sbb
cwtl
shl
xchg
mov
xor
jno
ror
subb
sbb
mov
mov
pop
adc
or
aam
fcompl
dec
enter
shlb
cmp
xlat
jns
xchg
js
push
jb
mov
insl
arpl
add
cmp
fldlg2
xchg
mov
out
inc
push
and
adc
js
lret
or
lock
shrl
mov
cmp
pop
xchg
pop
jp
jae
pushf
sbb
daa
fbld
adc
mov
jmp
popa
xor
sub
jnp
adc
sub
push
cmp
push
and
sub
mov
or
lock
lods
xchg
push
cmc
ds
push
mov
gs
stos
aas
jb
mov
hlt
pop
cmp
fidivs
sarl
arpl
and
mov
mov
aam
popa
and
outsl
lds
mov
or
push
enter
pop
add
test
pushf
xchg
shll
pop
jo
cmp
inc
add
rorb
test
jg
or
mov
fwait
jp
insl
in
add
sarl
mov
xchg
inc
cmp
orl
pop
outsb
mov
idivl
dec
out
repnz
push
pushf
mov
or
das
jmp
int
add
nop
fsubrs
imul
shl
dec
loopne
xor
push
dec
mov
sub
inc
mov
insl
push
enter
lea
mov
test
inc
popf
xchg
paddw
add
cld
mov
mov
test
je
add
iret
push
cmpsl
sub
and
jns
jns
rclb
add
in
aas
xchg
test
lret
push
loopne
jmp
lahf
cmp
pop
mov
mov
cmp
dec
loope
inc
dec
clc
push
mov
int3
pop
xor
lahf
pop
in
mov
fiadds
lret
fwait
jns
ret
jmp
repz
xchg
xchg
jb
mov
pop
fimuls
mov
jmp
fst
xchg
dec
dec
cmp
in
inc
jle
in
push
sub
push
adc
stos
push
adc
inc
xchg
dec
aam
mov
sahf
shlb
out
ret
movsl
mov
push
push
add
daa
jmp
fidivrs
inc
and
ja
cmp
sarl
stos
mov
divb
dec
sbb
leave
movsb
xor
jmp
flds
sbb
pop
call
cmp
pop
pop
mov
mov
and
enter
adc
xor
lret
or
xchg
mov
imul
cmp
jmp
outsl
and
inc
jmp
imul
jo
and
arpl
into
shr
push
push
pop
mov
fdivr
jno
mov
inc
jbe
lret
push
push
sub
faddp
cmp
test
jle
push
jmp
sub
inc
stos
jecxz
in
mov
ja
scas
mov
sub
mov
stos
fnsave
jae
and
fwait
or
jmp
inc
fst
jmp
mov
xor
inc
cmpb
mov
jle
mov
es
mov
or
loop
sbb
lahf
int3
jb
jno
sub
adc
fimull
xor
lcall
rcrb
fwait
add
dec
fwait
add
in
and
mov
mov
mov
test
push
movsl
mov
sahf
fistpl
adc
daa
jge
push
and
mov
mov
xchg
xchg
push
test
xchg
loopne
fidivrs
cmpl
cs
pop
ror
leave
aaa
enter
cmp
rcl
es
and
mov
sarb
addl
cmp
test
mov
xor
pop
imul
jl
or
sti
jg
mov
push
mov
ja
hlt
popf
lock
sbb
push
and
aas
push
push
mov
mov
mov
push
arpl
sub
lret
xlat
lahf
jae
loope
stos
test
sub
jmp
stc
fwait
jo
dec
mov
loopne
ja
xor
lock
mov
outsl
shrl
arpl
inc
inc
sbb
shll
cmpsl
popf
add
stos
cli
xchg
mov
inc
pop
jo
fidivrs
movsb
fsincos
or
jmp
sbb
adc
sbb
sub
mov
push
cmp
iret
or
jne
mov
sub
jo
inc
lea
sbb
pop
cmpl
adc
mov
and
bound
jecxz
inc
sub
cmp
jg
lds
ficoms
dec
xchg
add
push
cmp
pusha
mov
scas
adc
in
push
mov
idivl
test
xor
and
cmpsl
mov
mov
xorl
and
ss
mov
fs
cmpb
fisubrs
mov
jg
shlb
rol
shll
int3
lcall
mov
test
xchg
adc
fstps
dec
mov
xchg
inc
jp
fwait
aas
push
xor
adc
cmpsb
xor
jns
lcall
shrb
fiaddl
arpl
jmp
and
pop
xchg
inc
out
lcall
mov
mov
xchg
add
daa
xor
dec
jns
sbb
xlat
pop
push
out
mov
xchg
inc
jns
scas
in
shll
gs
sub
mov
int3
sbb
or
jno
in
mov
mov
ret
outsb
xchg
lret
jle
loope
jmp
jbe
mov
sub
fst
mov
out
xor
cmpsb
dec
mov
sbb
lds
shrb
inc
dec
jb
mov
std
push
inc
rolb
xor
xchg
fdivl
lds
in
xor
ret
jle
mov
mov
sbb
es
sbbb
pushf
inc
jmp
push
fisubrs
test
loopne
fiaddl
int3
and
shl
imul
mov
mov
outsb
stos
cltd
mov
cmc
mov
mov
cmpsl
pop
aas
xchg
push
hlt
filds
in
orb
int
enter
lds
xchg
stos
into
and
xor
jg
and
popa
cli
orl
ja
mov
jp
jmp
ret
aas
push
repz
mov
int
cmp
aas
mov
push
and
fs
sbb
imul
dec
push
adc
shrb
stos
sub
or
hlt
aam
fcoml
dec
enter
inc
mov
icebp
adcb
push
shl
imul
inc
xor
es
jno
pop
stc
jmp
cmc
mov
xchg
and
dec
enter
sbb
adc
pop
sub
add
mov
cmpsl
jle
or
test
xor
cmpb
push
jbe
test
and
gs
xchg
imul
xlat
mov
test
pusha
adc
fmulp
and
pop
xlat
and
sub
das
movsb
icebp
and
popa
lret
pop
inc
lds
stos
and
sub
shlb
pushf
out
dec
jp
and
fistl
jo
jmp
sti
jp
into
mov
xchg
cmp
movsb
in
ljmp
inc
adc
nop
ljmp
sbb
lods
mov
shl
rcl
dec
je
mov
and
test
jns
and
jno
xchg
nop
sbb
addr16
mov
mov
aaa
mov
and
jmp
pop
sti
xchg
pop
in
mov
sub
loopne
call
add
cwtl
outsl
das
xchg
movsl
jp
mov
loopne
sbb
leave
push
out
mov
inc
es
add
cmpsl
push
fldt
inc
cld
mov
les
popf
jbe
pop
ja
test
cmp
xchg
jns
movsb
push
jmp
addr16
dec
pushf
xchg
sub
clc
add
mov
insb
aam
mov
iret
stos
ja
movsl
test
movsb
pop
adc
xchg
push
dec
pushl
sti
xor
mov
shll
and
test
pop
sub
sub
sbb
iret
loopne
pop
jmp
dec
mov
imul
mov
inc
xchg
mov
mov
xchg
adc
ffree
dec
or
and
jo
push
mov
mov
bswap
fsub
adc
aaa
jne
loop
mov
loopne
push
ja
js
cmpsb
jmp
jne
jb
jno
inc
and
test
xchg
lret
push
pushf
cmc
jmp
outsb
mov
sub
lea
insb
ret
pop
pop
stos
xor
outsb
inc
lcall
andl
xchg
out
mov
push
jbe
lahf
ja
xchg
push
fcoml
sbb
jmp
dec
mov
fs
mov
push
int
lods
mov
xchg
sbb
mov
js
fs
loop
hlt
mov
aad
lahf
sbb
adc
mov
jge
mov
jo
mov
pop
sub
sbb
push
cmpsb
imul
xchg
mov
mov
or
mov
mov
stos
cwtl
mov
jl
or
pusha
adc
jns
sbb
pop
cltd
lock
aam
jmp
dec
cs
mov
test
pusha
cmp
int3
xor
mov
sysexit
mov
sub
loopne
xchg
add
mov
or
adc
aas
adc
xchg
mov
loopne
dec
adc
sbb
mov
mov
insl
daa
sbb
push
mov
mov
std
and
in
mov
fistpll
nop
gs
mov
fisubs
popf
or
and
push
icebp
cmpsb
jmp
lock
add
dec
xor
mov
cmp
enter
aas
xchg
lret
or
sbb
fs
shll
sbb
sub
mov
inc
jmp
adc
pop
aam
jae
push
jmp
outsl
cmp
mov
jmp
mov
jmp
mov
xor
repz
mov
movsl
lock
pop
mov
xchg
int3
push
aaa
aam
rcll
inc
xchg
cmpb
push
insl
mov
xchg
aaa
jle
xchg
cltd
mov
arpl
mov
push
ficomps
jmp
and
or
pop
cli
xchg
jecxz
push
lods
pop
stos
pop
inc
jmp
xor
cld
dec
jmp
dec
lock
push
push
daa
hlt
lcall
mov
jmp
pop
jne
andb
jo
mov
icebp
lock
in
out
xchg
jg
fwait
push
push
dec
and
ljmp
cmp
imul
push
pushf
pop
mul
in
movb
and
insl
das
add
mov
jmp
mov
inc
ljmp
ret
test
mov
loop
das
aaa
stos
cmp
push
jmp
mov
mull
jns
stos
rcr
jge
pop
aad
out
roll
push
cmp
push
in
shl
dec
adc
jne
cld
cmc
mov
sbb
mov
mov
dec
cmpsb
popf
dec
pop
jle
mov
dec
outsb
movl
ret
mov
test
inc
mov
or
cld
scas
test
sub
fsubs
shll
inc
jno
stos
fisubs
adc
mov
mov
add
and
mov
and
lods
inc
in
cld
sub
inc
xchg
adc
adc
in
push
lahf
stos
xchg
loope
xor
int
adc
jge
and
inc
jbe
sub
cmp
mov
cltd
fnstenv
in
jge
push
test
lea
inc
ds
movsl
cmc
dec
jmp
mov
inc
sub
sbbb
sbb
adc
int
mull
rcll
ret
or
and
mov
mov
lret
mov
push
jg
sbb
sahf
icebp
mov
push
push
jmp
push
xchg
jns
imul
jno
hlt
dec
sbb
lahf
lret
pop
sahf
jmp
push
fadds
outsl
stc
sub
adc
pop
or
mov
cmp
dec
iret
enter
jle
mov
inc
pop
dec
sbb
xchg
test
mov
inc
aaa
mov
mov
jb
push
bound
mov
repnz
andl
lods
mov
jmp
mov
aam
cmp
arpl
cmp
jmp
fidivrs
popf
sub
outsl
jmp
mov
inc
jmp
sbb
or
cmp
mov
sub
sbb
push
sub
sbb
jg
outsl
xchg
push
mov
fucom
pop
loopne
es
push
pop
inc
add
sub
dec
push
mov
lds
repz
shll
stos
je
push
jnp
pop
inc
sbb
mov
outsl
push
sbbl
mov
jne
dec
adc
mov
push
in
push
pop
arpl
and
dec
add
sub
jg
inc
jmp
stos
xchg
mov
xor
test
lahf
cs
shlb
xchg
mov
mov
mov
xor
test
in
roll
and
pushf
push
mov
and
xchg
xchg
loop
outsb
incl
jecxz
sbb
les
push
jae
add
mov
ja
cmp
iret
and
xchg
push
in
nop
pop
ror
loopne
aam
mov
enter
jge
movsl
rclb
jno
subl
std
cltd
mov
scas
xchg
cmp
ret
add
jmp
int3
and
push
sub
ds
add
xor
shlb
aas
push
fwait
arpl
subb
test
or
pop
pop
jmp
aaa
push
fucomip
sub
xchg
loope
cltd
cmp
pop
mov
push
jmp
cmp
add
jb
fsubr
shr
out
shl
mov
les
cmp
mov
flds
loopne
stc
add
out
daa
test
sti
fsubp
fmull
inc
xor
div
xor
xor
jns
out
inc
add
mov
int
mov
scas
xchg
loopne
add
mov
push
in
inc
adc
and
sbb
lcall
sub
loope
test
adc
xor
sbb
fcomps
mov
xor
mov
jnp
stos
pusha
add
sarb
add
dec
ret
cmp
movsb
movsb
mov
sbb
xor
scas
xchg
mov
imul
mov
daa
inc
outsl
aad
into
and
mov
inc
pushf
jmp
dec
lahf
inc
or
dec
fucomp
dec
jmp
mov
pop
mov
push
sub
mov
mov
inc
inc
xchg
in
inc
cmp
mov
dec
fbld
xlat
pop
gs
push
xchg
add
pusha
daa
mov
xchg
int
or
dec
push
jnp
mov
pop
lea
movsl
lock
rcl
jp
stc
mov
add
insb
xchg
js
aam
jb
adc
pop
inc
movsl
inc
xor
sub
inc
pushw
adc
cmc
jb
pop
cmp
in
sbb
mov
jg
inc
pop
inc
adc
mov
mov
cmp
adc
jmp
sbb
pop
pop
imul
push
rolb
jb
mov
push
mov
add
jp
int3
movsl
outsb
dec
arpl
loop
jo
xor
int
mov
fsubs
test
pop
out
stos
mov
jae
sbb
icebp
ret
roll
pop
insb
or
inc
dec
and
cmp
cld
mov
test
nop
push
push
inc
mov
mov
pusha
out
mov
mov
push
jl
mov
out
out
arpl
mov
repnz
popa
inc
cli
inc
stos
xchg
test
sbb
mov
imul
call
jmp
cmpsb
fsts
adc
mov
dec
jb
imul
mov
pop
jb
inc
scas
xchg
jmp
inc
stos
jno
mov
jmp
pop
ret
loopne
daa
sbb
popa
pop
and
adc
add
mov
lock
lret
movsl
repz
loopne
cmp
jnp
and
cwtl
sub
push
mov
hlt
int3
push
ss
jle
std
dec
pop
adcl
out
outsl
jne
roll
mov
daa
popf
shr
and
mov
xchg
mov
mov
pop
sbb
jbe
or
mov
sbb
jae
lods
movsl
test
dec
outsb
imull
arpl
adc
jmp
cmpsb
pop
ljmp
enter
adc
pushf
dec
mov
rolb
mov
dec
cmp
pop
jns
xchg
cmpsl
into
cmp
fnsave
jnp
mov
outsl
mov
pop
ret
push
scas
cwtl
and
adc
lods
in
xchg
cmp
popa
inc
rol
xchg
jge
aam
rorb
xor
stos
push
adcb
push
fmuls
sub
mov
sbb
lret
mov
push
cmp
add
inc
sti
pop
push
inc
dec
ljmpw
loop
cmp
cmp
and
arpl
pop
pop
test
sub
pop
or
cmp
inc
dec
adc
pop
daa
and
aaa
lahf
mov
popa
leave
cmc
ja
sbb
sar
test
sbb
xor
mov
mov
mov
jo
push
sti
clc
sbb
fcoml
jmp
or
das
adc
adc
pop
inc
pop
scas
xchg
jb
iret
mov
push
fdivl
into
enter
cmovs
stos
jmp
add
gs
int3
add
jmp
mov
outsl
cmp
push
pop
cmp
test
fdiv
cmp
out
mov
ljmp
hlt
stos
push
popf
andb
scas
in
push
cwtl
jnp
pop
cmp
jnp
ss
adc
inc
cltd
jmp
push
test
cmp
cmc
ljmp
test
adc
push
dec
push
movsl
xchg
adc
cld
ret
xchg
lcall
repz
out
retw
inc
stc
cmpsb
dec
pushf
or
mov
add
lock
loopne
sahf
and
pop
ret
cmpsl
aaa
cmp
jmp
xor
aad
cmp
cmc
lea
mov
mov
add
pop
mov
dec
mov
push
jae
pop
cwtl
sub
jnp
jne
int
les
jne
lock
imul
mov
insl
lds
add
stc
push
sub
xor
lock
leave
xor
mov
lods
mov
dec
shlb
jmp
loopne
mov
leave
jle
xor
ror
mov
cs
daa
xchg
mov
loop
cmp
mov
push
mov
jmp
jp
dec
in
jle
shl
out
or
mov
mov
mull
int
dec
dec
lcall
and
test
push
inc
ljmp
push
mov
mov
enter
inc
pushf
jmp
pop
and
and
jge
sub
jb
push
push
lock
xchg
out
shlb
arpl
loopne
lcall
dec
out
push
xor
les
pop
jg
jno
mov
cmp
pusha
jno
xchg
mov
aam
jns
ficompl
mov
into
xchg
rclb
inc
stc
cmpl
sub
sub
orb
adc
lret
cli
pop
mov
movsb
aaa
sti
imul
pop
incl
inc
cmpb
dec
shlb
inc
hlt
pop
xchg
ljmp
xor
sbb
jns
adc
test
xchg
sub
jge
aaa
pop
inc
xchg
mov
icebp
and
cld
mov
fistl
movsl
mov
lods
fs
shrb
xor
dec
jmp
add
testl
jle
test
dec
jmp
aaa
push
mov
arpl
arpl
stos
div
mov
sbb
xor
aas
dec
addr16
or
push
jl
jl
add
and
outsl
mov
sub
fwait
push
into
mov
jo
jno
dec
cmp
out
hlt
shlb
xor
push
jg
lahf
lods
xlat
fwait
sti
inc
cmp
push
rorl
insb
int
lcall
imul
xor
shll
inc
sbb
sbb
popa
xor
xchg
pop
stc
xchg
push
jmp
jmp
lret
pop
push
mov
cmpl
push
mov
arpl
das
or
rclb
cmp
enter
adc
aaa
gs
lcall
aas
pop
add
mov
push
aam
js
movsb
mov
jbe
stc
dec
call
inc
das
mov
jb
xchg
sbb
jge
inc
mov
call
imul
mov
xlat
sbb
lcall
sub
push
cmovb
lds
loope
push
sub
cmp
hlt
cmc
bound
add
inc
mov
icebp
ss
pop
filds
mov
dec
scas
cmp
push
push
push
mov
int3
adc
fisubl
cmc
ror
cmp
sbb
rcll
pop
ret
loop
inc
cmp
outsl
mov
mov
push
ljmp
mov
push
mov
outsl
insb
loopne
xchg
int3
aas
push
popf
pop
jb
xchg
push
pop
popa
pop
negl
dec
iret
pop
fdivs
loopne
mov
mov
push
movb
ret
pop
movsl
lea
add
roll
stos
in
cmp
call
mov
mov
sarb
jmp
bound
add
ror
test
in
mov
dec
stos
add
mov
scas
das
jecxz
xchg
jmp
pop
pop
orl
or
adc
ret
inc
and
inc
rclb
ret
mov
subl
cmp
pop
inc
lret
mov
pop
das
inc
pop
mov
pusha
mov
fistpl
or
pop
int3
pop
enter
aam
loopne
or
push
jae
and
mov
xor
inc
sbb
xlat
pop
call
sub
xchg
or
nop
fimuls
popf
sbb
data16
aad
dec
jle
jo
loope
outsl
test
mov
add
mov
iret
or
je
jne
push
jo
and
lods
pop
sub
imul
fsubs
lcall
hlt
mov
int
lret
insb
and
sbb
repnz
shlb
inc
cmp
ret
loope
movsl
lock
and
cmp
movsl
sub
pusha
mov
mov
fidivs
subb
leave
add
mov
das
vmaxps
or
int
jo
sub
add
sub
jg
int3
into
lcall
mov
aas
inc
insb
lret
lods
lods
jae
or
lahf
xchg
or
fcoml
aam
cmpsl
add
movsl
inc
movsb
cmp
imul
add
jl
push
fsubr
xchg
test
ret
add
mov
loope
xchg
pop
xor
mov
rcl
xor
push
clc
mov
dec
std
jmp
sub
dec
jmp
stos
out
loop
in
fs
add
mov
mov
push
and
fldt
xor
int3
shl
enter
xchg
mov
xchg
sbb
or
or
and
push
pop
mov
pusha
inc
enter
faddl
cmp
xchg
not
stc
gs
cmp
jnp
imul
sub
ret
sub
xorb
mov
mov
pop
jmp
jmp
mov
test
jnp
and
pop
cmp
nop
lock
jmp
push
pop
and
jno
mov
rcr
jecxz
mov
shll
pushf
inc
dec
or
add
mov
dec
pop
xorl
and
faddl
adc
pop
arpl
int
lods
jmp
push
lock
in
push
push
loopne
stos
std
mov
sub
sub
sbb
mov
sbb
lcall
sbb
icebp
xor
sbb
and
rcrl
enter
lret
pop
and
jb
mov
imul
mov
xchg
imul
lret
inc
xchg
sub
mov
add
jbe
jmp
sub
add
daa
pop
sbb
fadds
mov
fldl
adc
pop
push
int
xor
bnd
sub
int3
sub
pop
mov
cmp
std
xchg
scas
mov
cli
or
mov
loop
push
pusha
into
sbb
adc
mov
push
push
push
mov
in
cltd
lods
aas
pop
or
mov
cmp
rolb
pop
arpl
sub
jmp
out
xor
push
pushf
pop
xchg
jno
mov
shl
jae
test
les
bndstx
jno
mov
inc
fsts
in
push
pop
ds
jae
lea
scas
sbb
xchg
bound
sarb
xchg
rcll
adc
inc
pushf
dec
mov
or
pop
or
fstpl
jg
mov
inc
xchg
jmp
int
stos
jmp
mov
sub
xchg
leave
jo
pop
xor
inc
jmp
pop
cltd
jmp
mov
aas
push
addr16
testb
aas
jne
xor
scas
jnp
jg
fwait
outsl
mov
stc
hlt
int
xor
push
out
mov
jmp
mov
jge
inc
or
out
jmp
pushf
jb
push
mov
mov
pop
ret
test
sbb
push
into
pop
push
sbbl
push
sub
inc
loopne
push
cmp
dec
mov
ror
lret
sbb
pushf
mov
mov
add
in
mov
lock
das
enter
test
xor
jle
dec
mov
ror
lods
lock
or
mov
or
hlt
mov
loop
roll
push
lahf
cmpsb
xlat
adc
test
aas
imul
pop
lock
jle
push
sbb
inc
js
mov
mov
mov
cmp
imul
call
mov
ljmp
fucomip
pop
mov
push
sarl
xchg
cld
insb
rclb
loopne
or
mov
fistpll
shlb
xor
sti
sbb
scas
sub
stos
jae
cmp
jecxz
cmp
test
loope
mov
dec
out
sti
ja
aam
shr
shlb
adc
fisttpl
scas
mov
mov
mov
jecxz
ret
call
push
sub
adc
nop
jmp
jle
pop
movsl
lock
data16
dec
mov
mov
push
rcll
mov
mov
xchg
mov
out
gs
test
mov
jno
fstps
icebp
jp
in
shrb
ds
jmp
rorl
movsb
pop
push
and
dec
hlt
lcall
mov
cmpsb
jg
stos
mov
pop
stos
add
test
je
outsl
jp
ja
je
xchg
jnp
mov
cmc
addb
fucomi
xchg
pop
mov
or
cmp
xor
lcall
sub
stc
jnp
jmp
stos
mov
pop
sub
jge
inc
xor
repz
mov
fnstenv
jmp
jnp
jns
popf
jne
sbb
int3
daa
ret
jmp
arpl
jmp
fdivrs
rcll
sbb
aam
test
and
dec
enter
and
xchg
jne
pop
addr16
enter
cmp
jmp
xor
aad
fwait
mov
fsubrl
loopne
rcll
js
sbb
sbb
scas
movsl
inc
jmp
bound
arpl
or
addr16
jmp
and
xchg
fcomps
les
lahf
inc
cmp
add
movsl
loopne
pop
insl
sbb
in
lea
inc
or
arpl
sbb
mov
cmp
mov
gs
imul
stos
push
mov
int
mov
mov
adc
in
dec
or
sbb
add
std
addb
mov
add
scas
int
sub
add
cmp
sub
dec
lds
lea
test
insb
stos
pop
adc
pop
dec
pop
mov
inc
jb
ret
mov
loop
hlt
js
dec
rorl
pop
mov
xorb
inc
push
jae
sti
fcoms
shlb
push
mov
adc
mov
jp,pn
movsl
jns
rolb
inc
add
mov
xchg
inc
add
adc
lcall
or
mov
inc
push
jp
movsl
dec
rcl
sub
mov
sub
cmp
adc
popa
std
sbb
sbb
mov
and
jno
cltd
in
xchg
cmp
mov
adc
aam
pop
arpl
push
js
dec
push
push
mov
jle
in
add
push
mov
xor
fsubs
dec
inc
mov
or
loop
mov
xchg
push
faddl
mov
stos
jmp
loope
test
pop
mov
xor
aam
sti
adc
in
cmp
cmp
scas
and
fwait
sahf
push
inc
lahf
aaa
push
cmpsb
jo
push
movsl
test
sbb
insb
mov
or
and
sahf
jns
sti
jmp
outsl
adc
xor
cmpsl
mov
sub
cmp
inc
movsl
jbe
shr
mov
lods
jmp
mov
jg
add
cmpl
mov
cmp
sub
or
cltd
shl
xlat
sub
gs
mov
iret
pop
mov
imul
add
pop
sarl
aas
jecxz
mov
sbb
stos
test
in
cs
xchg
xchg
enter
cmc
loop
std
and
clc
popf
or
movsb
and
in
cwtl
mov
xor
ljmp
sbb
loopne
pop
jg
mov
scas
xor
mov
mov
mov
outsl
aad
jl
scas
movsl
mulb
fistpl
loope
in
mov
cmp
fs
mov
stos
push
pop
push
mov
add
ret
mov
gs
sbb
inc
cmc
fnstsw
mov
sahf
rorb
arpl
cmp
and
mov
cmp
inc
mov
cmp
xchg
lcall
push
outsl
loopne
sar
fucomip
jge
lea
mov
in
loopne
dec
pop
imul
fwait
pop
lock
repz
push
mov
loop
out
pop
in
dec
imul
jmp
sub
jo
sbb
sbb
adc
adc
jmp
inc
ja
int
fiadds
fdivr
cltd
xchg
mov
ss
shll
cmp
or
fdivp
inc
aaa
adc
adc
xor
int3
xlat
mov
stos
movsb
xchg
mov
les
sub
pushf
cmp
jo
jmp
aam
sub
jb
xor
sbb
and
imul
mov
lods
into
dec
test
xchg
inc
bound
adc
push
ret
dec
mov
xchg
ja
sahf
cmp
sti
pop
test
jmp
imul
mov
push
fistpll
in
clc
ret
sub
icebp
jmp
add
outsb
loopne
inc
imul
sub
pop
pop
mov
push
jmp
push
cmp
test
mov
imul
loopne
jmp
push
inc
dec
dec
or
leave
or
mov
push
loop
scas
out
push
mov
imul
or
jecxz
pop
push
in
adc
ficomps
and
ficoml
sbb
jb
fnsave
xor
setae
arpl
and
insl
sub
shlb
mov
cmpsl
int3
pop
test
jmp
rorb
pop
lock
fwait
push
adc
aas
or
mov
jmp
pop
movsb
jmp
jge
mov
stos
enter
popf
and
push
push
lret
jns
push
aam
notb
fisubrs
xchg
mov
aaa
cmp
or
out
xor
into
cmp
fs
push
aad
mov
ja
fucompp
test
or
loope
insl
fwait
aaa
mov
jle
aas
jmp
mov
xchg
subl
sti
pop
mov
pop
aaa
push
in
mov
ja
lock
jo
adc
push
and
push
mov
mov
mov
sbb
xor
enter
push
jne
inc
mov
loope
inc
cltd
push
mov
pop
jge
outsl
sti
add
mov
loopne
adc
sub
add
out
pop
mov
in
call
cmpsl
test
loope
or
cwtl
mov
add
cmp
in
mov
rcrl
adc
inc
daa
cmp
pushf
insl
add
addr16
cmovg
xor
xor
fidivrs
popl
loope
xor
cmp
sub
xor
int3
and
enter
jb
ljmp
xor
pop
push
mov
push
mov
std
shlb
movsl
push
jge
cmpsl
or
pop
inc
cli
arpl
call
mov
or
inc
cmp
jle
adc
sub
fidivrl
data16
push
popa
add
arpl
jo
jne
push
daa
jle
adc
pop
scas
enter
ret
pop
mov
shll
mov
push
mov
or
xorb
sub
pusha
dec
jmp
cmp
jno
cmp
jb
movsl
push
cmp
sarb
fmul
pusha
pop
stos
int3
pushf
inc
jb
mov
mov
cmpsb
or
leave
dec
sar
xchg
hlt
fnstsw
or
fnstcw
sbb
mov
xor
push
inc
pop
sub
ss
aad
jge
sub
sub
mov
stos
jne
cmp
sahf
push
jo
sub
sbb
out
mov
mov
adc
mov
in
shll
sbb
jmp
scas
dec
stos
in
faddp
mov
sbb
cmp
std
ss
aaa
cmp
mov
and
mov
sub
add
rclb
aaa
xor
mov
aaa
stc
pop
pop
movsl
xchg
xchg
push
xor
xor
loop
das
mov
pop
call
imul
fsub
ja
and
int
mov
and
xor
repnz
enter
ret
fcoml
test
fdivl
pop
mov
gs
shrb
jo
mov
mov
ds
lea
pop
jle
jns
test
push
dec
xor
jl
orb
push
mov
push
imul
and
push
jbe
lcall
xor
repnz
imul
lock
adc
mov
adc
xor
pop
cld
aam
xchg
adc
add
and
loopne
popf
sbb
rcll
ljmp
jge
and
sbbl
add
mov
mull
insb
cmp
jb
cli
or
mov
js
mov
sub
pop
and
outsb
sti
shrb
xchg
scas
movsl
sub
push
jb
cltd
lock
loope
add
and
pop
es
push
xor
inc
sbb
iret
out
jl
mov
adc
adc
sbb
adc
push
icebp
mov
xchg
push
mov
mov
stos
sub
or
and
mov
mov
push
call
jecxz
and
stos
insl
in
inc
imul
std
insb
dec
or
out
jmp
rclb
data16
or
push
std
in
scas
jl
test
mov
orl
cmp
mov
loopne
push
push
clc
xor
pop
fldl
enter
mov
add
imulb
lock
daa
jno
mov
enter
or
cmp
shll
push
sbb
mov
test
stos
jecxz
push
add
push
mov
sub
cld
xchg
pop
adc
xchg
je
sub
sbb
test
or
ds
out
xchg
imul
icebp
add
lret
push
dec
mov
and
lcall
sub
cmp
cltd
cmp
gs
dec
stos
add
dec
mul
dec
repnz
lock
cmp
lret
mov
mov
loop
hlt
push
arpl
movsl
leave
mov
ret
mov
in
rol
mov
pop
ss
fld
es
gs
push
jmp
inc
pop
xchg
mov
mov
les
clc
jb
inc
aaa
rolb
and
pop
xorl
fcmovnu
test
adc
sub
mov
push
movsl
aam
aaa
ja
sbbl
adc
inc
or
sub
shrb
xor
lock
xchg
push
jns
and
mov
test
inc
inc
sbb
sub
xor
je
or
xlat
imul
dec
inc
out
jo
push
dec
ficompl
cmp
arpl
inc
sti
nop
repnz
lock
inc
cli
jmp
sti
imul
push
push
divl
insl
fildl
dec
cmp
bt
inc
xchg
or
xchg
out
int3
mov
mov
les
clc
leave
cmp
outsb
stc
mov
es
xchg
ljmp
inc
add
repz
sbb
and
test
rolb
lock
test
push
fdivs
lcall
sbb
mov
bound
mov
adc
sub
mov
xor
pop
lock
stos
das
rcl
mov
les
push
pushf
scas
adc
push
sbb
fldenv
mov
in
cld
jmp
jg
xchg
idivl
dec
and
lock
inc
lret
int
shlb
xor
inc
cmp
lock
sbb
inc
ja
cli
sbb
sub
cld
push
xchg
and
insb
call
lret
inc
mov
adc
rolb
lods
or
lcall
je
sub
xabort
push
dec
xchg
add
xlat
or
jno
ss
sub
jge
push
lahf
insl
jae
sbbl
pop
or
pop
inc
pop
scas
xor
dec
and
xor
jne
mull
test
jmp
mov
jae
or
jmp
cltd
adc
push
icebp
jg
and
ljmp
pop
or
mov
dec
shlb
xchg
xchg
dec
and
mov
xor
sub
aas
ret
or
fbld
push
dec
adc
insl
mov
test
stos
sub
orb
push
mov
loopne
insb
pop
lahf
jmp
lds
inc
rolb
inc
loopne
push
push
int
std
cmp
sahf
adc
arpl
mov
xor
inc
sbb
jb
dec
pop
pop
cmp
lods
push
cmp
mov
aas
and
cltd
sahf
xchg
sti
xor
mov
jb
pop
mov
mov
fwait
adc
mov
xor
push
loopne
mov
cwtl
pop
les
fmulp
dec
lods
and
mov
push
push
insb
cmpsl
sti
cld
aaa
inc
jmp
or
xchg
mov
or
push
inc
sti
push
std
sbb
xchg
cmp
xor
aam
jmp
aaa
stos
lret
test
jo
std
loope
stos
out
dec
sahf
sub
pushf
out
sbb
jp
inc
popa
insl
cmp
mov
neg
fisubrs
mov
sub
push
popa
cmp
loope
mov
stos
adc
fwait
sbb
sub
sub
ja
and
idiv
add
mov
jmp
loopne
in
in
aas
imul
xchg
and
xchg
pop
xchg
movsb
xchg
xchg
and
sub
sub
pusha
inc
pusha
shr
xchg
lods
out
std
dec
out
xchg
dec
jb
sbb
arpl
ret
and
lock
cmp
adc
push
test
out
adcb
stos
jle
sub
into
jb
mov
xor
das
or
stos
in
push
mov
test
lcall
jmp
in
fwait
shl
loopne
adc
push
mov
xchg
icebp
sbb
icebp
int3
mov
mov
mov
test
call
loope
cmpsl
stos
loope
xor
loopne
imul
dec
xor
or
cltd
lcall
add
loopne
call
cmp
mov
pusha
sahf
sbb
mov
or
jb
push
scas
lds
mov
dec
jp
or
mov
stos
mov
fsubrp
loopne
test
mov
sbb
cltd
dec
mov
push
inc
and
enter
xchg
lea
xor
frstor
xchg
sbb
and
mov
gs
dec
movl
mov
pop
pop
pop
cmp
or
int3
clc
xchg
enter
add
adc
or
pop
or
loopne
jo
lds
dec
lock
mov
iret
cmp
xchg
inc
adc
jbe
leave
lock
hlt
getsec
add
adc
and
push
in
shlb
pop
shl
shll
jg
movsl
sub
scas
jnp
test
in
movsl
insb
jecxz
mov
mov
insb
gs
mov
test
sbb
cwtl
or
push
mov
mov
add
and
mov
jmp
in
xchg
sbb
ja
cmp
and
push
pop
push
push
int
rclb
sbb
push
cmp
loope
call
adc
mov
dec
pop
and
jg
sub
fidivl
aad
stos
push
rol
push
mov
sub
mov
inc
cmp
add
sub
shr
xchg
aas
add
jecxz
pop
jmp
jb
cld
push
xor
rolb
fisubrs
mov
jne
xchg
mov
imul
popa
cmp
pop
testl
inc
and
add
jmp
push
ret
mov
push
xchg
add
jmp
and
imul
mov
jo
sub
loope
mov
xlat
inc
hlt
imull
pop
mov
fstl
imul
add
jne
mov
and
popa
out
mov
push
lock
pop
std
cmp
jge
in
fwait
sbb
daa
stc
mov
mov
jge
sbb
dec
enter
jns
pop
insb
and
out
test
push
xchg
xor
scas
fmul
lock
sbb
cwtl
jae
mov
repnz
push
rclb
mov
pop
ljmp
lret
out
ljmp
push
outsl
sahf
push
jbe
adc
sub
loope
lock
sbb
icebp
std
xor
xchg
cmp
inc
enter
scas
sbb
and
dec
stos
pushf
jmp
out
mov
or
sti
or
adc
mov
mov
inc
push
push
jb
iret
lock
int3
neg
les
add
xlat
aam
js
dec
in
enter
fiadds
dec
inc
imul
inc
stc
sbb
lds
shr
adc
adc
xchg
mov
push
outsb
xor
xchg
xor
mov
test
push
sub
pop
inc
or
int
mov
aaa
cwtl
inc
mov
mov
cmp
jnp
mov
push
jo
aas
and
xchg
enter
push
sbb
mov
mov
lcall
jge
lock
inc
sbb
scas
pushf
shlb
push
cs
push
mov
negb
loop
dec
mov
jmp
movsl
sbb
shll
mov
aas
or
sbb
xor
pop
cmpsb
jmp
lock
in
cltd
pop
mov
fwait
jae
shrb
shr
scas
cmpsl
std
pop
aam
out
aas
adc
pushf
jmp
cld
ficoms
push
cmp
sbb
cmp
push
add
sbb
pop
xor
push
ja
test
push
cmp
shlb
mov
mov
int
jle
in
pop
fs
pusha
xchg
cmp
jmp
cmpsl
call
or
or
fcmovne
lcall
push
inc
gs
enter
jecxz
outsb
stos
insb
imul
pusha
lock
bnd
je
shrl
out
outsl
mov
fimuls
pop
dec
adc
sbb
mov
fisubrl
sbb
jp
pop
nop
fisubs
mov
add
inc
inc
mov
mov
or
sub
sub
and
jmp
aas
and
inc
cwtl
ret
adc
mov
test
icebp
pop
aam
outsb
iret
faddl
stos
cwtl
fdivrp
cmp
inc
jns
es
xor
mov
or
mov
push
loop
mov
leave
lcall
add
lret
pop
sahf
sti
repz
in
jns
sub
scas
mov
cltd
movl
push
jmp
xchg
pop
mov
daa
pop
lret
aad
pushf
pop
or
enter
insl
hlt
mov
sbb
mov
pop
jmp
or
js
lock
cmp
jl
cltd
mov
xorb
jae
dec
adc
xor
push
mov
inc
sub
push
cld
inc
stos
pop
and
push
xchg
scas
jae
dec
cli
cmp
pop
sbb
clc
mov
loopne
mov
ss
loopne
sub
ret
xor
mov
push
push
lock
pop
cmp
cmpsl
mov
pop
jnp
fwait
adc
dec
or
out
cmp
in
outsb
stos
int3
cmp
cltd
idiv
daa
jmp
dec
or
loopne
clc
jmp
icebp
adc
mov
pop
mov
lahf
mov
cmp
sarb
dec
pop
rcrl
test
cmc
mov
xor
xchg
xchg
pop
test
enter
iret
imul
xchg
jae
insb
sbb
sub
hlt
push
stos
push
int
lods
decw
mov
jmp
dec
imul
sbb
pop
aaa
mov
pop
adc
sub
cld
iret
inc
lcall
loop
stc
xor
sahf
sbb
mov
fcoml
iret
and
jmp
aad
adc
push
fucomp
mov
cmp
mov
jo
sbb
mov
pop
mov
stos
xor
cwtl
mov
cmpsb
push
dec
inc
pusha
add
divl
icebp
pop
inc
rorb
inc
cmpsl
test
cmpl
jl
pop
jmp
dec
xchg
sbb
mov
push
and
cltd
mov
cld
xor
dec
lock
sub
adc
aas
jle
dec
jmp
in
sbb
shr
inc
fisubrs
pop
adc
xchg
mov
cmp
cmp
adc
shr
and
fwait
out
out
jno
mov
xchg
fisubrs
push
cmc
gs
cmp
scas
mov
or
ficoms
in
ret
mov
lds
sbb
fisubrl
repnz
aaa
push
pop
mov
ret
js
inc
cmp
mov
movsl
lock
ljmp
les
jnp
xchg
cmpsb
jns
pop
movsl
sub
push
hlt
xchg
daa
mov
jge
inc
mov
ss
roll
pop
pop
pop
mov
mov
jmp
lock
xor
and
push
js
lret
sub
mov
push
out
rcrl
or
pusha
idivb
ss
push
stos
jns
mov
mov
negl
mov
std
xor
popf
lcall
jl
cmp
push
icebp
adc
jmp
in
jmp
pop
cmp
dec
pop
cmp
outsl
fldl
cs
and
mov
mov
xchg
mov
pop
fisttpl
jae
sub
sbb
sbb
jmp
jecxz
mov
and
in
rcl
pop
cs
movsl
adc
xor
mov
out
push
scas
sbb
in
out
int3
xchg
cmpb
inc
sub
mov
adc
push
sti
lahf
mov
sub
jns
pop
loopne
pop
lock
sub
sbb
mov
lock
into
xchg
jb
ss
outsl
mov
xchg
cmp
adc
pop
rolb
dec
sbb
scas
sarb
aaa
loopne
in
inc
jmp
dec
xchg
or
mov
dec
sbb
jecxz
cmp
lds
inc
scas
je
aam
lret
inc
pusha
mov
lock
sahf
mov
cmpb
das
inc
fsubrs
add
jmp
pop
and
xchg
cwtl
push
fucompp
or
sarl
push
inc
or
or
sub
jle
or
cmp
jg
pop
add
jbe
sub
push
mov
push
popa
mov
or
fcmovb
and
and
sub
inc
sbb
lcall
cmp
sbb
mov
outsb
pop
inc
xor
pop
jmp
mov
and
sub
test
jns
aas
nop
pop
stos
aaa
jmp
inc
gs
lods
push
lret
repz
and
push
and
cwtl
or
fwait
sub
pop
lock
mov
jo
orl
mov
test
inc
fwait
add
mov
cli
xchg
mov
jns
add
jg
sbbb
push
pop
lahf
xlat
inc
movsb
jmp
stc
sub
scas
xor
shlb
adc
stos
adc
xchg
and
or
mov
in
repz
jb
mov
loop
inc
stc
lahf
cmp
aas
repz
push
sbb
movsl
dec
cmp
nop
push
pop
addb
aad
inc
jnp
jnp
sbb
stos
out
pop
mov
add
mov
cmp
dec
test
iret
call
sarb
pop
push
cmpsl
dec
or
jmp
repz
ret
cmpsl
inc
in
loope
cmpsl
mov
adc
push
dec
jg
subl
idivb
popa
cwtl
lret
sbb
nop
pop
lds
addl
sub
sahf
int3
mov
sbb
cmp
push
xor
mov
sub
lret
sti
mov
arpl
mov
push
loopne
lock
adc
and
enter
dec
aas
and
xchg
inc
popf
movsl
jp
mov
xchg
push
sbb
ss
adc
andb
dec
cmp
adc
jns
xchg
mov
loopne
icebp
jbe
adc
jmp
aas
jle
jecxz
push
popa
cmp
cmp
in
mov
arpl
fsubrl
mov
leave
jg
mov
jno
inc
and
imul
ret
dec
cmp
jmp
stos
sbb
ds
inc
js
jmp
xchg
jbe
push
jge
adc
push
mov
adc
inc
mov
and
push
mov
dec
pop
mov
push
sti
xor
arpl
pop
test
imul
pop
xor
or
insl
pop
loopne
cmp
jp
pusha
sbb
mov
push
outsl
pop
andb
int
cmp
loopne
or
push
add
stos
jmp
add
leave
pop
icebp
pop
jp
pop
inc
out
out
stos
fildll
cmp
cmp
aam
pop
or
scas
mov
pushl
push
cmp
xchg
data16
imul
pop
lock
loopne
iret
rcl
mov
push
jge
mov
cmp
sbb
gs
sub
psubsb
dec
xchg
mov
jmp
cli
sub
iret
into
push
mov
jg
movsl
cwtl
xor
cwtl
sub
mov
mov
sbb
and
pop
and
cmp
adc
bound
jbe
mov
mov
call
test
movsl
fdivs
idivl
jns
sarl
xor
outsb
sub
mov
cmp
test
sub
lock
hlt
inc
das
jg
xchg
outsl
xor
mov
loopne
imul
add
lds
nop
mov
hlt
push
idivb
sti
imul
mov
mov
fbld
push
sub
mov
lods
jmp
pmulhw
outsl
mov
call
xorb
ds
int
and
mov
leave
mov
out
pop
movsl
mov
enter
mov
pop
movsl
jecxz
add
push
lea
test
or
or
pusha
cmp
push
aas
sbb
pushl
sub
mov
rcrb
outsl
in
bound
xor
nop
arpl
inc
std
add
push
test
and
sub
sub
test
xchg
xor
dec
xor
dec
adc
cltd
sbb
lock
das
out
fs
mov
cmp
pop
sbb
xchg
insb
dec
aaa
push
push
pop
inc
test
pop
aaa
dec
xchg
popl
xchg
mov
and
icebp
fmull
xor
ja
cmpsb
out
ljmp
jl
subl
xchg
ja
lds
leave
pop
lods
xor
bound
mov
dec
pop
sbb
test
shlb
mov
jnp
aad
cmpsb
std
inc
pop
pop
loopne
dec
sarl
mov
add
lahf
cmp
mov
jmp
lock
insl
pop
out
dec
icebp
add
sub
mov
stos
cmp
mov
fiadds
dec
mov
inc
ljmp
adc
into
pop
cmp
mov
mov
aam
addb
lret
fimuls
imul
std
arpl
iret
or
scas
enter
into
pusha
and
sub
into
test
push
lock
mov
mov
xlat
xchg
mov
jg
incb
push
arpl
leave
shlb
mov
jmp
aaa
mov
cmp
jl
mov
xor
in
aam
jp
sahf
adc
xor
sbb
sarb
push
adc
js
inc
and
fldenv
dec
pushf
jecxz
pop
pop
insl
fistl
pop
lret
fldt
mov
jmp
and
iret
fisubrs
outsl
andl
jae
mov
scas
jmp
jns
sbb
jne
dec
inc
cld
lcall
std
pop
sub
add
sub
test
pop
or
loopne
cmp
stos
adc
pop
imul
jnp
add
jne
cmp
aam
xchg
pushf
sahf
sbb
dec
mov
inc
cmp
inc
cmp
xchg
rcrb
sti
inc
arpl
punpcklbw
dec
imul
push
loopne
loopne
adc
out
push
inc
aad
inc
adc
cltd
dec
std
and
mov
negl
adc
inc
cmp
jbe
pop
add
cmp
imul
test
push
adc
xor
aaa
dec
movsb
stc
xchg
mov
and
pop
push
add
mov
xchg
mov
cmpsb
fwait
mov
dec
stc
adc
hlt
xchg
test
sbb
iret
aam
testl
outsl
xor
fsubr
xchg
ret
mov
jae
fs
pop
push
mov
faddl
mov
fsts
sub
dec
jecxz
adc
jecxz
jle
inc
test
lret
sbb
or
enter
std
xchg
stos
push
std
xor
or
mov
add
mov
and
and
aaa
idivl
inc
outsl
mov
mov
cmc
sahf
shlb
xchg
popa
mov
ja
and
sbb
ja
fs
pop
mov
jmp
call
or
lock
clc
sti
outsl
mov
fstpt
cs
add
nop
cld
inc
mov
adc
loop
dec
inc
sbb
push
leave
cmpsb
dec
jno
orb
pop
adc
xchg
movsl
push
cmp
push
mov
or
gs
add
enter
pop
inc
dec
mov
rcrb
adc
arpl
gs
mov
js
aam
lret
sbbb
mov
movsb
inc
mov
ret
dec
push
rorl
mov
inc
sub
pop
mov
and
sbb
and
or
and
pushf
push
jp
fsubs
adc
lcall
jb
fistps
js
push
dec
clc
push
mov
push
cmp
add
xor
xor
inc
jmp
pushw
cmp
f2xm1
stos
ds
sub
arpl
ljmp
test
jmp
int3
enter
cmpsb
sub
jle
ret
jmp
stos
push
sahf
inc
mov
rcl
or
push
lahf
and
into
or
jg
mov
push
mov
ds
cmp
jns
sahf
sub
dec
cmpsl
lock
in
xchg
push
shll
jo
clc
outsl
mov
push
pushl
pushf
pop
imul
adc
sahf
mov
mov
rcrb
xchg
inc
inc
sbb
call
es
rorl
mov
insb
arpl
test
jmp
insb
mov
inc
push
mov
repz
sti
jle
xor
cltd
adc
ficompl
hlt
cltd
pop
xor
xchg
dec
out
in
and
push
xor
xor
adc
cli
dec
cltd
mov
std
ja
pop
aaa
call
mov
repz
xchg
cmp
scas
or
aad
flds
xor
xchg
cltd
orl
dec
jl
mov
mov
fnstcw
cmp
andl
and
out
sbb
ret
fwait
add
push
xor
mov
pop
fs
cmc
sbb
mov
rcrl
idiv
mov
cltd
or
sub
lds
xchg
mov
inc
mov
cltd
pop
sub
cmp
cltd
add
cld
bound
sbb
call
cltd
mov
sbb
cltd
jno
fsubrs
xor
or
test
sbb
arpl
push
hlt
and
insl
js
xor
nop
or
rorb
stos
jb
xchg
cld
cmc
and
mov
icebp
mov
pop
jae
or
push
cltd
sub
cmpsl
pop
sbb
mov
int3
fisubl
loope
fsts
mov
pop
mov
or
jnp
fsubrs
xchg
cltd
dec
mov
push
lret
lcall
aad
push
orb
cltd
dec
mov
adc
sbb
sahf
xchg
sbb
repnz
in
xor
cs
mov
mov
cmp
cltd
or
hlt
add
jno
outsl
frstor
cwtl
pop
fidivrl
fwait
mov
js
xchg
std
mov
lahf
dec
les
mov
push
cltd
test
push
add
inc
out
int3
cmp
outsb
rcrb
or
test
adc
or
cltd
push
xchg
or
cli
js
cltd
test
inc
push
xchg
or
cmp
pusha
mov
arpl
xlat
pop
push
movsl
jmp
out
jp
sbb
pop
and
jg
enter
sbb
shrb
bound
sub
mov
jecxz
cltd
xor
or
inc
shrl
push
mov
cltd
pop
push
mov
dec
cltd
lret
fwait
shll
mov
and
fidivs
aas
xchg
repnz
jbe
mov
adc
fadds
hlt
pop
addb
adc
orl
cli
out
xor
jbe
loop
pop
out
sub
xchg
shlb
or
push
test
incb
shl
cmpsb
dec
cwtl
cmp
xchg
cltd
sahf
cmp
jae
add
sub
test
subb
pop
add
fistps
in
pop
pop
cmp
push
cltd
not
cwtl
xchg
push
or
pop
int
dec
rcrl
ficompl
pop
cltd
inc
inc
in
loopne
inc
jmp
out
mov
outsb
mov
and
cmp
cltd
daa
push
mov
cmpsl
enter
and
push
test
and
insl
loopne
push
mov
jno
or
ja
pop
popa
addr16
in
cmpsb
sbb
cltd
std
out
cmp
mov
hlt
inc
jnp
fwait
adc
outsb
sub
sub
enter
jmp
push
popf
sahf
inc
or
cmp
iret
popf
mov
gs
nop
inc
fcoml
jmp
jg
aaa
jbe
or
dec
add
outsl
mov
inc
pop
addr16
xor
push
inc
dec
jmp
xor
sbb
mov
lret
pop
pop
in
cmc
mov
test
test
fidivl
mov
shrl
push
sbb
dec
dec
jmp
xchg
xor
mov
lock
cmpsb
jge
mov
das
stos
jmp
fnstenv
lock
mov
rolb
ljmp
mov
xchg
fcoms
mov
mov
jg
ss
out
push
gs
xor
std
jno
lock
push
push
ss
sbb
pop
xchg
es
jecxz
xchg
mov
add
jmp
andl
push
inc
fstpt
add
mov
and
inc
fwait
outsb
xlat
push
movsl
cltd
add
clc
xor
inc
xchg
push
xor
or
xlat
dec
dec
inc
inc
inc
sbb
add
or
jb
inc
insl
fwait
mov
leave
dec
shll
mov
jmp
and
sub
stos
pop
lock
xchg
loopne
and
insb
cmp
mov
into
les
call
lahf
mov
sahf
inc
iret
and
pop
jmp
push
mov
lahf
loopne
inc
jge
jae
and
roll
fdiv
clc
pop
push
enter
jl
dec
int
sbb
sub
loopne
int3
pop
mov
fsubl
add
mov
xor
sub
lock
inc
fistpll
int3
push
cld
and
cmp
mov
xchg
mov
loop
testl
xchg
mov
out
mov
ds
pusha
push
inc
sub
dec
loope
mov
iret
fwait
popa
lock
push
add
mov
cld
or
cmp
pop
iret
stos
out
cmc
sahf
xchg
jnp
call
aaa
rcrb
cmpsl
out
ret
int3
cmpsl
dec
lock
pop
test
roll
jnp
ss
adc
test
jbe
mov
cmpsb
push
jb
add
in
xchg
xor
xchg
cli
aam
es
sbb
sub
sub
or
sbb
pop
jl
adc
lcall
ret
mov
imul
ret
inc
jmp
push
and
sbb
popa
loopne
jb
sub
in
inc
sbb
into
adc
movsl
mov
popl
sbb
dec
inc
inc
je
jmp
hlt
jp
enter
add
mulb
inc
inc
mov
push
mov
ret
gs
inc
pop
xor
cmp
pop
shl
in
inc
adc
push
xchg
adcl
mov
and
or
ds
sub
jb
aam
call
jmp
jmp
adc
mov
stos
add
je
cmpsl
imul
lods
test
loop
push
insl
mov
inc
xlat
jmp
aas
out
adc
aad
cmpl
add
push
lock
hlt
bound
aad
jbe
stos
lods
pop
adc
inc
arpl
pop
loope
and
psubsw
push
push
inc
add
test
sub
inc
lock
aam
iret
xchg
mov
gs
sub
mov
sbb
mov
mov
int3
mov
or
xor
js
pushf
xchg
mov
push
xchg
pop
cmp
test
icebp
mov
or
stc
popa
cmc
jmp
dec
sbb
aas
sbb
sub
xchg
push
inc
cmp
mov
push
push
mov
cmpsb
loopne
dec
xor
jns
jl
sbb
test
xor
sbb
mov
adc
mov
and
push
andb
and
mov
jne
jnp
ss
sbb
sbb
xchg
testb
stos
icebp
insb
inc
fwait
lcall
mov
cmp
xchg
mov
mov
les
fst
sbb
inc
mov
aaa
scas
mov
jmp
inc
mov
or
mov
sbb
push
and
or
or
xor
fsubl
cmp
and
mov
adc
sbb
cmp
lea
loope
int3
pop
nop
inc
sbb
jns
xor
or
dec
lahf
or
rcll
mov
add
push
sub
mov
jg
or
and
push
jmp
xor
add
jne
mov
xchg
sub
push
pop
jmp
loop
cmpsb
pop
push
xchg
cmpsl
shl
cmc
out
test
cmp
add
mov
inc
testb
cli
xchg
inc
jns
jae
mov
test
bound
fnstcw
movsl
fdivrs
mov
mov
inc
cltd
in
adc
popa
mov
out
xor
mov
cltd
push
adc
stc
jnp
jl
lret
pop
fstps
push
jae
push
popa
sub
cli
xor
dec
mov
jmp
das
mov
pusha
cmpsl
ss
mov
cltd
daa
mov
inc
push
fwait
mov
xlat
mov
mov
mov
dec
iret
icebp
sahf
dec
or
pushf
push
and
pop
rolb
jp
mov
mov
es
cmp
out
sti
mov
mov
loope
dec
adc
bound
jge
cmpl
fsubs
dec
sub
shll
cltd
mov
and
jg
or
sbb
cltd
std
dec
out
jmp
imul
pop
loope
cltd
je
push
repnz
pushf
std
xor
out
inc
aas
sub
pop
nop
cmp
out
sarb
flds
xchg
ret
lods
fistpl
mov
and
jnp
and
cltd
push
inc
push
setno
push
pop
pop
jp
sub
add
inc
add
clc
inc
mov
out
test
movsb
sbb
addr16
or
into
adc
nop
sbb
add
std
mov
js
pusha
push
xor
jecxz
fdivr
and
cltd
pop
jle
pop
jnp,pn
push
mov
jmp
icebp
or
inc
shlb
ja,pn
fistl
jecxz
scas
mov
xchg
jne
adc
cmp
cld
mov
inc
sbb
pop
dec
aas
dec
cltd
popf
jmp
push
cltd
int
imul
cmp
jmp
pop
cltd
cmp
push
js
cmpsl
mov
jp
loope
inc
pop
pushf
scas
gs
ret
outsl
pop
cltd
add
mov
leave
dec
fcmovnb
add
inc
mov
cltd
xchg
jno
dec
scas
xchg
mov
aad
inc
das
cltd
je
and
out
mov
add
xchg
fwait
cwtl
lods
or
pop
movsb
les
fstpt
scas
int
ljmp
scas
jl
lea
mov
mov
addr16
cmc
xchg
fwait
sbb
movsl
out
push
fucomp
push
push
cmpsl
imul
loop
das
popf
cltd
push
aam
test
jl
sbbb
ja
push
adc
xor
mov
leave
out
repz
or
cltd
ss
mov
mov
jle
mov
fwait
nop
xchg
out
stos
leave
imul
stos
cmc
aas
movsl
dec
adc
mov
xchg
iret
pop
dec
and
cltd
inc
cmc
repnz
cltd
xlat
xchg
adc
mov
leave
cltd
jno
push
loopne
dec
mov
jmp
inc
pop
push
cltd
leave
mov
shrl
jge
movsl
dec
es
ja
jae
mov
arpl
shll
das
xchg
mov
cltd
inc
mov
subb
sti
pop
cltd
fsubrs
adc
pushf
inc
xor
cltd
jl
push
add
test
test
cmpsb
cltd
pop
movsb
adc
stc
jle
call
arpl
inc
pushf
push
out
mov
cltd
adc
dec
sar
cltd
fwait
lret
test
lahf
inc
cltd
scas
push
and
and
pop
je
scas
outsl
test
jecxz
mov
cltd
or
inc
cltd
mov
mov
aad
push
fstps
and
cltd
and
adc
jge,pt
mov
cltd
inc
dec
mov
jp
enter
pusha
xor
subb
sbb
cmpsb
out
lock
sub
mov
cmp
ds
ret
mov
push
or
sti
subb
mov
or
lds
push
mov
pop
mov
jno
data16
lods
ljmp
arpl
adc
cmc
inc
mov
mov
cmpsb
lock
mov
out
rcrb
push
scas
jae
pop
and
inc
call
xchg
int3
push
cltd
imul
xchg
pop
cltd
test
and
dec
icebp
pop
cltd
pcmpeqd
cmpl
cltd
cld
add
stos
lcall
pusha
imul
mov
adc
inc
pop
push
mov
add
aad
int
mov
and
lods
das
imul
sahf
jae
test
imull
and
and
or
imul
out
cmpsl
or
je
xchg
leave
ljmp
inc
outsb
pop
add
cltd
push
popa
dec
les
dec
ret
ljmp
test
data16
lock
out
mov
fwait
ret
rorb
sbb
loopne
push
cltd
mov
pop
push
push
pslld
sub
mov
dec
repz
dec
lret
cld
dec
lahf
fwait
and
xchg
out
lods
pop
loope
mov
in
aad
adc
xchg
push
stos
ficompl
sbb
push
cltd
or
in
mov
xchg
cltd
lods
mov
sbb
mov
xchg
push
loop
sbb
pop
xchg
or
insl
stos
out
cltd
pop
cli
mov
lcall
add
xor
push
cmp
scas
pop
aaa
add
data16
cltd
push
outsl
inc
and
dec
add
cltd
push
adc
and
aaa
aas
sbb
addr16
pop
test
and
cltd
xchg
jmp
movsl
dec
mov
mov
shlb
shll
push
pop
add
pop
push
les
xchg
mov
pusha
test
xor
sub
dec
lcall
xor
adc
cmpsl
loope
cmpsw
jg
mov
add
and
leave
aad
cwtl
xor
cltd
mov
les
mov
push
out
enter
mov
xchg
fadd
inc
push
in
adc
inc
mov
out
and
cltd
das
and
fwait
int3
mov
sub
xor
jle
hlt
shr
aas
xor
push
daa
cmpsb
cli
lods
dec
cmpsl
or
mov
and
in
leave
mov
xor
sbb
lods
or
or
iret
jo
xor
pop
scas
sbb
lahf
sbb
cmpsb
out
fstl
das
lea
cltd
push
nop
lds
in
xor
lea
fwait
push
loop
mov
jnp
loope
pop
cmp
and
mov
push
shll
movsl
adc
mov
inc
gs
cltd
dec
sbb
add
or
mov
lods
adc
mov
int3
movsb
repnz
cltd
mov
and
sahf
cltd
mov
aam
cmpsb
push
sub
xor
test
out
cmp
outsb
mov
xchg
je
pop
dec
push
adc
aam
mov
bound
setns
mov
or
cltd
test
mov
mov
mov
mov
loop
ss
pop
jg
cltd
hlt
imulb
jmp
push
pop
xchg
cltd
mov
fbstp
cltd
sti
sbb
mov
mov
sbb
cltd
addl
fldz
lahf
cli
cltd
ljmp
xor
dec
add
push
testl
popf
push
cltd
addb
mov
insl
cmpsb
mov
pushf
jmp
pop
cltd
pop
add
shrb
jns
xchg
and
jno
dec
dec
jne
xchg
out
loope
sbb
cltd
adc
mov
fwait
sbb
arpl
mov
loopne
cwtl
cltd
mov
lock
cltd
repz
adcl
mov
aam
aad
lock
jb
pop
sub
mov
aas
scas
cltd
mov
sub
mov
fs
loopne
cmpsb
cltd
mov
inc
sub
sarb
lods
mov
cltd
cmp
test
bound
loopne
repz
cmc
iret
fs
pop
push
jne
aas
out
loopne
mov
seta
pop
cwtl
ja
push
jmp
roll
stc
inc
repz
faddl
cltd
inc
or
xchg
in
fcompp
fsubr
jae
dec
loopne
push
mov
test
outsb
jmp
lods
push
mov
cwtl
shlb
je
pop
inc
icebp
insb
pushf
test
push
int
jae
push
cmp
sbb
sub
or
fcompl
xor
ret
lock
dec
xor
aas
mov
popa
dec
jg
repz
je
pusha
mov
loope
aaa
add
sbbb
dec
dec
stos
jp
sahf
jnp
stos
xchg
xchg
inc
and
add
repz
mov
std
add
adcl
sti
xchg
fxch
lock
imul
mov
aam
mov
adc
std
jne
mov
cmp
push
xchg
and
lock
rclb
push
dec
ss
mov
pop
stos
mov
iret
xchg
or
push
arpl
or
loopne
aas
jmp
xchg
and
mov
cmpsb
fsubrp
stos
ds
fisubl
sahf
iret
test
cmp
mov
and
lahf
in
dec
jmp
jmp
xor
movsb
fisubrs
xor
sbb
stos
inc
out
adc
add
cmpsb
adc
rcrb
push
xor
inc
or
ja
inc
cmp
or
lret
inc
icebp
add
mov
inc
push
xchg
mov
jecxz
lock
adc
mov
out
sub
mov
gs
jne
pop
xchg
shl
push
xor
jo
dec
out
jbe
mov
sahf
and
xor
jmp
add
cld
sbb
push
in
iret
test
lret
int
sub
sub
jmp
jg
xchg
insb
mov
test
clc
fwait
rclb
in
or
dec
fsubp
inc
test
cmc
dec
push
add
lock
mov
cmp
je
xor
fstps
outsl
insl
sub
lock
scas
lods
add
push
pop
dec
mov
aad
enter
mov
pop
cmp
sub
test
stos
popf
data16
sti
dec
inc
rolb
xchg
xchg
arpl
pop
jp
insl
xchg
rclb
into
inc
cmp
add
stos
xchg
xchg
dec
jmp
mov
mov
pop
nop
idivl
lea
cld
jmp
movsl
jge
jmp
jnp
or
sahf
jmp
movsl
and
fisubl
jno
cld
rolb
idivb
lahf
inc
outsb
cs
mov
jp
inc
fbstp
dec
mov
dec
pop
push
test
xor
test
add
pop
enter
xchg
jno
mov
adc
int3
mov
cmc
adc
jmp
nop
jecxz
decb
xchg
cs
mov
out
mov
xor
jo
pop
inc
mov
test
sub
sub
sti
jg,pt
jmp
sahf
sbbb
xor
cmp
xor
jae
nop
jmp
jmp
aad
dec
jmp
xchg
cmp
jl
imul
jl
or
cmp
into
mov
fdivrp
xor
jmp
iret
jb
jo
lahf
jns
mov
movsb
dec
ds
jmp
nop
jle
add
test
dec
fwait
jnp
negb
xchg
fistl
repnz
mov
int
mov
cli
adc
mov
out
in
cmp
popf
push
push
testb
lods
or
sbb
cltd
mov
jl
fcmovnb
xor
mov
es
xor
mov
insb
xchg
insl
push
dec
or
cltd
fdivp
push
pop
rolb
data16
add
sbbl
cltd
test
mov
sbbl
jb
jg
sub
add
call
inc
cmpsl
add
xor
scas
sbb
aas
adc
cltd
mov
stos
andl
movsb
lret
mov
mov
cmpsl
jne
add
and
test
sub
xchg
stos
cltd
push
cmp
inc
push
inc
or
cltd
cmp
fwait
in
stos
in
jns
mov
cmp
cmpsl
sub
test
push
fwait
dec
fwait
out
stos
jp
push
mov
lret
cld
and
cmpsb
xor
dec
mov
loopne
pop
movsl
cltd
cli
cwtl
add
cmp
pop
or
std
cltd
mov
scas
push
lcall
jae
negl
shrl
inc
mov
iret
and
cmp
cmp
test
aad
sbb
jecxz
jb
adc
mov
lret
fwait
push
fldt
xor
mov
fwait
adc
and
shll
push
cltd
movsb
sbb
mov
nop
lret
cmp
sbb
push
mov
xor
xchg
cli
cltd
sbb
cmp
adc
cmp
jmp
jge
andb
test
int3
and
jecxz
leave
jle
mov
jne
inc
jl
fimuls
lods
add
insb
pop
xchg
lahf
hlt
adc
int
repnz
fsubrl
shl
mov
jns
jno
pop
aam
mov
mov
gs
fwait
inc
add
push
rorb
aam
sbb
dec
in
mov
mov
imul
jbe
scas
dec
or
fnstenv
and
add
jbe
popf
cmp
test
out
add
pop
xchg
fwait
icebp
cmpsl
or
lahf
add
jle
jnp
lods
sbb
mov
inc
aas
ljmp
xorb
xchg
inc
sahf
or
mov
in
pushf
das
inc
xchg
sub
loopne
mov
cltd
sahf
dec
inc
cmp
inc
int
fistl
adc
add
fldl
xchg
mov
sbbb
mov
xor
pusha
les
add
cwtl
push
and
dec
pop
mov
sbb
pop
adc
enter
adc
icebp
daa
push
insb
fsts
and
iret
adc
inc
bound
xor
xlat
sub
aad
loopne
xchg
aad
mov
or
mov
fiadds
mov
imul
push
stos
xor
shlb
pop
outsb
lock
push
aaa
inc
add
inc
push
das
cltd
sbb
into
jmp
mov
inc
push
movsb
sbb
dec
push
mov
cmp
push
je
push
jbe
push
rcll
les
jmp
repz
xchg
pushf
mov
or
ret
pop
ss
fwait
cmp
mov
inc
cltd
test
sub
dec
rolb
push
and
or
data16
jmp
test
xor
test
fstpl
mov
jmp
stos
push
scas
cmpl
mov
xchg
add
dec
fldl
sbb
fisubrl
popa
stos
mov
mov
dec
or
stos
push
or
dec
jle
push
ljmp
mov
test
stos
push
gs
jns
flds
test
fldt
inc
sbb
test
and
add
sub
jmp
push
stos
fidivrs
mov
or
lret
inc
icebp
std
cmpsb
movsb
fidivl
test
pop
add
mov
stos
inc
push
mov
push
jle
mov
mov
lds
fcoml
shll
fwait
lock
insb
ja
leave
xchg
imull
lods
or
jb
mov
xchg
cmc
inc
popf
cmp
adc
stos
or
jl
lahf
loop
pop
outsb
adc
jo
pop
mov
call
ret
push
aam
rorb
test
xchg
enter
mov
loop
cwtl
lret
xor
into
and
dec
loope
out
mov
pop
mov
iret
testl
inc
call
xchg
int
pop
mov
push
jmp
and
mov
xchg
movsl
in
lea
int
push
pushf
pop
icebp
sub
fists
movsl
inc
sbb
bound
inc
pop
fsubs
xchg
adc
loopne
enter
movsl
push
std
inc
popa
cmc
call
int
jo
mov
scas
sbb
jmp
xor
push
add
shlb
push
sbb
xor
pusha
mov
cwtl
pop
push
in
andb
in
insl
outsb
mov
add
and
stos
push
test
lret
xor
mov
sub
or
adc
ss
movsl
xchg
mov
test
call
lds
enter
loopne
nop
pop
cltd
imul
aaa
scas
cs
mov
mov
xchg
arpl
sub
cmp
das
sbb
pushf
and
sbb
push
fstps
mov
pop
mov
lret
xchg
mov
je
jno
pop
test
mov
cltd
aad
sbb
dec
out
stc
inc
fwait
aas
fimull
and
push
cltd
popa
sub
mov
ret
cltd
in
cmp
pop
pop
insl
mov
pop
mov
cmovae
lret
push
xor
loope
rcrb
dec
pop
sbb
mov
cli
enter
xchg
cltd
stc
xchg
fwait
movl
mov
sbb
fwait
out
sbb
aam
mov
mov
rorl
inc
inc
pop
imul
fnstsw
stos
fstps
js
cmpsb
scas
cmc
sbb
cmp
in
dec
popa
bsr
cltd
jb
or
out
xchg
sbbl
test
adc
aas
cmp
xor
mov
mov
mov
push
aad
push
shlb
in
cltd
shlb
nop
ljmp
in
cltd
mov
pop
adc
cltd
pop
dec
and
push
xchg
adc
ss
cltd
rclb
fnsave
das
gs
fbld
cltd
pmaddwd
and
sbb
mov
sbb
movsb
jg
push
inc
in
push
pop
imul
outsb
adcl
rcr
pusha
push
add
in
jno
adcb
mov
fwait
pop
mov
cmpsl
jmp
sub
testl
add
cmpsb
cltd
jge
aas
int3
ret
sub
cltd
aaa
loope
aam
in
cmpsb
inc
push
jns
adc
fdivrl
scas
lds
movsl
mov
cmp
cltd
fimuls
andb
je
sahf
sbb
add
lds
rep
and
icebp
fisttps
out
xchg
sub
imul
rcll
in
mov
sbb
setns
inc
jno
lods
push
cltd
push
je
add
xor
cltd
cmc
push
and
out
rolb
loope
pop
or
pusha
inc
in
mov
iret
add
push
lods
add
mov
movsl
adc
cld
repz
sub
mov
loopne
sbb
loopne
mov
mov
pop
cmpsl
int
xchg
cltd
lds
int3
cmpsl
aam
xor
cmc
aas
xchg
cltd
xor
mov
sbb
push
outsb
and
add
lar
ja
cmc
mov
das
cwtl
sbb
ret
xchg
in
test
out
fwait
push
roll
ffreep
cld
jb
cltd
push
inc
push
push
push
mov
pop
jbe
mull
inc
adc
ja
mov
cltd
fstpl
leave
inc
fwait
cli
testl
jbe
cltd
dec
int3
insb
addb
mov
icebp
mov
les
popf
adc
mov
dec
inc
mov
es
shl
cmp
sbb
cwtl
cmpsl
out
test
dec
or
push
imul
xchg
push
out
push
loopne
cli
cltd
xchg
negb
sbb
inc
je
daa
cltd
jb
or
fsincos
cltd
pusha
inc
adc
sbb
es
pushl
cltd
aad
mov
ret
bound
scas
mov
xor
ficompl
fmuls
push
rcrl
aad
bound
dec
mov
ljmp
adc
sbb
insl
aas
movsl
jle
cltd
sub
aaa
mov
adc
xchg
aad
push
cltd
iret
sub
cltd
neg
fidivrl
adc
dec
lahf
sbb
pop
nop
cltd
fwait
jmp
ljmp
pop
ss
mov
scas
movsb
popf
scas
sbbb
push
test
sub
stos
pop
je
iret
inc
in
pop
iret
mov
xorl
push
push
pop
dec
setns
iret
jbe
mov
lret
loopne
dec
shll
int3
arpl
test
sahf
cmpsl
fisttpl
jge
pusha
loope
aaa
push
scas
sbb
pusha
mov
cmp
mov
mov
adc
ret
mov
jl
daa
xor
mov
jnp
push
in
callw
cmp
sub
xchg
arpl
stc
out
dec
inc
pop
xor
cltd
ljmp
mov
outsb
dec
dec
push
sub
popa
icebp
cmpsl
loop
or
cli
sbb
gs
cmp
icebp
ss
cmp
jle
mov
loopne
push
push
xchg
pusha
and
jo
jecxz
mov
mov
sahf
cmpsl
sbb
xchg
ds
roll
cmp
int
cltd
mov
loopne
push
mov
std
fisttpl
imul
cmpl
mov
push
xor
inc
mov
and
cltd
inc
jp
push
hlt
dec
push
mov
in
cwtl
pop
pusha
jns
aaa
cltd
fldl
or
mov
les
xchg
out
xchg
xchg
xor
aam
cwtl
stos
xchg
cli
cltd
cmp
jp
mov
inc
cltd
adc
ds
ljmp
call
fwait
push
xor
mov
and
shr
arpl
test
lods
mov
jns
aas
cmpsl
outsl
pop
xchg
cld
es
test
ret
push
jae
test
insl
mov
cli
or
and
mov
inc
push
adc
into
das
cltd
cmc
mov
mov
cltd
xchg
hlt
add
push
mov
add
arpl
dec
scas
cltd
insb
mov
mov
into
add
cmc
mov
je
or
add
xchg
fsts
fwait
cli
stos
int
cmpl
jle
add
pop
stc
loop
aas
movsl
dec
fnstenv
mov
pop
cltd
hlt
out
test
sar
push
leave
mov
pop
imul
pop
inc
cmp
inc
loop
insb
cmp
cmpsl
add
and
xchg
jecxz
cltd
pop
inc
inc
xor
flds
aas
mov
pushl
lds
or
jge
jnp
inc
jbe
jne
loope
push
inc
mov
dec
fwait
test
sub
pop
fs
pop
pop
mov
push
inc
push
addl
adc
jle
cltd
jp
int
adc
inc
pop
xor
rolb
fsubl
jae
test
fwait
push
sub
cmp
or
dec
cltd
jle
insl
fists
rorb
push
inc
ficompl
cltd
arpl
xor
jmp
enter
pop
push
fsts
fsubr
jns
mov
mov
mov
dec
xchg
or
in
mov
cwtl
out
xchg
mov
mov
mov
mov
fs
mov
pop
rolb
sbb
xor
sti
je
xchg
xchg
repz
cltd
sbbb
inc
push
mov
out
lret
movsl
outsl
js
in
mov
outsl
cmc
cltd
jl,pn
or
cltd
sub
cwtl
les
mov
cltd
ss
out
cltd
xchg
rcll
ret
jb
test
scas
pop
inc
cmc
ret
in
ljmp
dec
ret
push
jle
inc
sbb
xchg
push
idivb
loopne
or
sub
decb
rclb
lds
push
xchg
or
sub
push
xchg
and
cmp
andl
xor
lea
lcall
mov
mov
in
scas
xor
push
adc
cltd
and
into
fldcw
mov
mov
mov
nop
lcall
call
jge
jl
push
jmp
int3
mov
inc
stc
jmp
call
pop
mov
lcall
jmp
rclb
mov
mov
stos
dec
jmp
pop
pop
ja
fwait
rorb
lds
pop
sbb
mov
std
push
mov
loopne
repz
jg
cmp
adc
ljmp
enter
lds
pop
movsb
pop
jmp
mov
push
sahf
or
push
lock
jne
mov
adc
rolb
or
mov
xorl
lock
mov
add
dec
jae
aam
shrl
mov
adc
shrb
shr
dec
sbb
inc
xchg
mov
repnz
adc
dec
aad
adc
inc
push
push
ror
adc
jl
xchg
add
cmp
mov
adc
enter
inc
pusha
xchg
mov
shr
andl
roll
test
inc
into
mov
pop
or
mov
inc
lahf
cmpsb
xor
and
inc
mov
and
mov
cmpsb
or
or
lock
mov
cmpsb
dec
movsb
mov
jno
les
jnp
xlat
fs
cmp
cmp
rcll
in
popf
sbb
stc
mov
push
xor
xchg
cmp
ja
sbb
add
jmp
inc
jne
sbb
adc
sbb
pop
dec
pushf
dec
mov
jno
mov
mov
icebp
xchg
jno
push
scas
add
mov
jmp
mov
test
test
jae
and
mov
cmp
jbe
cmp
mov
and
xchg
inc
add
scas
jne
shl
les
xchg
push
pop
aas
loopne
mov
imul
into
push
cmp
imul
sub
int
test
add
js
test
aam
decb
ficoms
push
pop
jbe
imul
pop
pop
mov
fwait
dec
pop
call
jle
ret
cmp
mov
icebp
cmp
bound
int
lock
inc
lcall
dec
pop
ret
mov
fidivrs
loopne
xchg
jge
adc
jg
pop
sub
or
fadds
push
xor
inc
mov
xor
enter
outsl
loopne
dec
out
into
xchg
pop
insb
add
inc
ret
jp
sbb
movsb
push
push
ficompl
pop
fisubrl
cmp
xchg
mov
out
mov
fidivrl
sbb
cs
add
jge
dec
insb
push
aam
sti
pop
cwtl
pop
fisubrs
mov
mov
mov
adc
das
pop
jmp
js
cmp
dec
jae
pop
cltd
pop
enter
sub
jmp
subb
lock
jb
jmp
jmp
push
clc
mov
rorb
pop
int3
inc
cwtl
inc
cmp
jmp
aam
add
sbbl
and
test
popf
adc
pop
test
mov
shlb
cwtl
imul
adc
outsb
ds
inc
test
xor
ljmp
insb
shlb
mov
push
jmp
mov
dec
into
cmc
dec
dec
outsl
popf
stos
clc
stc
movsl
mov
add
mov
jnp
insb
xor
mov
mov
sbb
and
shr
dec
cltd
bound
enter
push
mov
loopne
mov
cmpsl
and
lahf
popa
push
cmp
into
and
push
outsl
int
loop
xchg
ret
sti
jle
das
scas
xor
xor
lock
mov
sub
jb
mov
pop
ret
xor
les
test
rol
push
lahf
inc
movsl
pushf
mov
sub
push
add
je
inc
mov
movsl
pop
inc
mov
inc
es
stos
outsl
imul
jmp
in
lds
push
outsl
mull
stos
das
mov
sbb
lds
mov
ret
pop
jbe
cld
push
inc
out
in
xor
stos
ja
xchg
aas
rolb
cmp
mov
push
pop
sarl
cltd
js
sbb
pop
or
push
loopne
jb
fstpt
cmpsl
cwtl
mov
jmp
pop
and
pusha
xor
add
test
sub
lock
mov
mov
nop
or
xor
in
inc
sbb
cmp
gs
fwait
mov
or
daa
mov
or
xor
pop
xchg
xor
push
mov
inc
mov
popa
pop
mov
and
xchg
jmp
mov
mov
jp
mov
and
pop
dec
jnp
jmp
inc
nop
int
or
loopne
loope
push
jmp
mov
pop
mov
push
inc
lock
jns
adc
lods
push
aam
inc
inc
adc
leave
int
push
mov
mov
mov
sahf
add
sti
pop
adc
mov
mov
push
push
cli
bound
xchg
xchg
fisubl
pop
pop
xchg
out
and
xor
cmp
icebp
pop
sti
jae
lds
ljmp
add
addr16
bound
loope
arpl
fcmovnb
dec
sbb
ret
or
xchg
enter
test
add
mov
xchg
jp
xchg
jmp
push
ss
jmp
and
jecxz
lcall
test
xor
clc
push
pop
jne
xchg
push
xchg
inc
inc
loopne
or
int3
mul
outsb
mov
outsl
les
dec
shll
sbb
into
and
push
push
dec
icebp
xchg
stos
jmp
jle
scas
pop
add
cmp
cmp
clc
je
cmp
jmp
sub
test
inc
and
push
lret
xchg
cmp
push
pop
jmp
or
push
test
lds
and
insl
sbb
imul
pop
imul
mov
ret
mov
pop
scas
add
adc
jmp
inc
bound
pop
xchg
bound
cmc
mov
dec
shr
std
lods
cmp
or
mov
mov
int3
rolb
int
mov
pop
fwait
and
nop
sahf
popa
adc
mov
fldcw
fistl
fwait
xor
in
inc
sahf
mov
dec
adc
les
test
jmp
pop
xchg
shlb
xchg
insb
out
jae
lea
cmp
jecxz
nop
xor
aad
push
mov
cmp
cmpsl
push
enter
rcll
xorb
xor
cld
stos
idiv
test
cmp
xor
cwtl
mov
popf
cmp
fsubl
pop
xchg
jae
pop
xchg
rolb
pushf
lahf
inc
into
sub
mov
jge
dec
pusha
inc
sub
loope
xchg
int3
adc
inc
pop
sbb
fwait
xchg
jmp
xor
mov
addl
inc
fstpl
jmp
add
stos
jmp
in
or
les
lret
lock
push
sub
jne
stc
lahf
in
mov
cmp
xchg
loope
mov
lock
dec
or
into
test
jnp
lods
shrb
jmp
decl
pop
inc
jbe
aam
ret
jmp
push
pop
mov
jmp
loopne
in
shlb
movsl
lret
push
cmp
mov
int
jbe
inc
jle
fsubr
xor
pop
fiadds
and
jo
test
and
push
out
cmp
mov
jmp
jno
mov
inc
cmp
pop
lret
jmp
mov
stc
xor
aas
mov
lea
push
mov
mov
ds
scas
fsubrp
inc
xchg
pop
mov
sahf
lcall
inc
aas
cmpl
and
jg
fwait
ret
mov
push
in
out
xchg
inc
scas
xchg
movsl
cmpsl
or
push
clc
pop
xchg
shl
jmp
push
mov
mov
push
add
shl
loop
cmc
arpl
in
addr16
cmp
jmp
cmp
aaa
mov
iret
fisubl
fiaddl
imul
xchg
mov
mov
sub
or
stos
push
mov
push
push
xchg
jl
pusha
stos
divb
push
outsl
rclb
inc
in
aam
inc
stos
sub
jge
clc
cmp
fisttpl
out
call
fmulp
outsl
add
ljmp
fnstsw
sub
mov
jbe
fdivp
jae
imul
xchg
mov
mov
test
mov
stos
lahf
ja
mov
es
xchg
adc
push
adc
mov
ret
jmp
lock
jge
adcb
xor
rol
dec
xor
mov
and
mov
cmp
or
shlb
out
cmp
xchg
pop
jl
dec
cmp
jg
push
push
dec
push
iret
cmp
push
and
mov
in
mov
popf
cmp
and
push
add
xchg
nop
dec
adc
divb
movsl
and
popa
dec
xchg
mov
icebp
xchg
mov
mov
push
jns
shlb
push
adc
mov
inc
mov
lret
and
pop
das
sbb
sub
inc
loop
mov
mov
push
pop
add
outsb
gs
and
push
mov
pop
xchg
vzeroupper
jns
ljmp
xor
sub
inc
fwait
push
and
push
mov
add
jo
icebp
push
stos
xchg
les
mov
push
pop
sbb
leave
rolb
mov
fists
xor
xchg
in
stos
mov
inc
cltd
mov
jmp
je
cmp
inc
test
and
icebp
xor
ret
jmp
pop
ficomps
pop
adc
or
shlb
mov
test
insl
adc
lahf
aad
cmpsb
cmp
loope
arpl
movsl
es
ret
jmp
and
adc
lock
cmp
mov
mov
jae
and
sbb
ret
data16
inc
fdivs
inc
mov
push
sbb
rclb
test
jmp
xor
in
rcrl
lods
enter
adc
push
mov
xor
clc
sbbb
cmp
orb
ret
nop
cmp
roll
mov
pop
push
mov
mov
mov
sarb
jmp
lahf
pop
jmp
lcall
add
mov
xchg
ret
cmc
jmp
dec
push
cmpsb
imul
push
cmpsb
insb
jmp
or
sti
mov
int3
ds
rcll
mov
adc
ja
adc
mov
mov
in
pushf
sbb
or
fisubs
inc
sub
jge
test
pushf
push
cmp
movsl
jecxz
sahf
lock
pushf
xor
dec
rcrb
sub
xchg
jge
push
mov
stos
lods
fadds
clc
mov
popf
addr16
jg
cmp
push
mov
shlb
jnp
repz
jmp
ret
test
xor
clc
aas
mov
add
mov
ja
mov
nop
mov
pop
insb
xchg
stos
lds
and
scas
jmp
xchg
arpl
mov
clc
cmc
adc
int3
scas
out
mov
cmpb
inc
out
dec
mov
std
mov
ljmp
jmp
pusha
mov
jno
mov
xchg
lods
jae
inc
loopne
sub
inc
mov
cs
outsl
lahf
pop
scas
jmp
jmp
pushf
mov
adc
sahf
lds
jg
cmp
mov
sub
jle
sti
insl
mov
rorb
xchg
add
adc
enter
push
sbb
fxch
repz
dec
jae
mov
jmp
push
push
xlat
mov
sar
mov
cmc
setg
jmp
call
jle
lret
mov
les
xor
pop
push
or
aaa
std
push
push
mov
adc
adc
aam
sbb
inc
xchg
lea
and
and
jl
test
arpl
iret
mov
mov
scas
mov
jmp
fnstenv
rcl
aas
daa
jp
mov
xchg
popa
or
lock
nop
pop
mov
inc
xchg
cld
jbe
adc
mov
in
push
stos
and
push
push
dec
ret
or
lret
cmp
loop
decb
xor
std
jns
jmp
popf
dec
insl
pop
xchg
mov
sub
or
aas
iret
sbb
sub
mov
jo
and
test
and
xlat
lods
jno
xor
faddp
sbb
jg
out
mov
lods
jo
pop
push
test
pop
icebp
jb
shlb
mov
cltd
adc
cmc
jle
cltd
gs
mov
xor
cmp
xor
sbb
xor
mov
ds
mov
cltd
fstpt
push
int3
xchg
cwtl
xlat
scas
shlb
xor
idivl
mov
fadds
xchg
pop
test
cltd
and
inc
pusha
subb
mov
sbb
cltd
pop
out
xor
or
cmpsl
or
mov
inc
cltd
jecxz
movsb
mov
cltd
rcll
aas
pop
aad
cltd
leave
fsubp
xchg
push
and
aam
jbe
sti
hlt
cmpsl
add
jp
xlat
inc
gs
mov
cltd
das
lods
cmpsl
inc
sub
aam
cltd
adc
sub
push
cltd
into
mov
fsubl
jbe
sub
cltd
cmpsb
loopne
dec
dec
pop
cmp
fwait
jo
imul
and
xchg
jl
movsl
xchg
jmp
jno
insb
mov
shrl
stc
stos
icebp
cltd
and
mov
test
popf
dec
repnz
adc
mov
ljmp
adc
mov
sbb
dec
cltd
pop
jmp
enter
add
loop
inc
mov
sbb
fwait
pushf
adc
dec
xor
icebp
mov
int
and
cs
push
cltd
mov
cwtl
scas
jns
xor
aam
dec
cmp
test
cmovb
pop
jno
push
test
cmc
pop
cmpl
rorb
clc
and
fcom
jns
out
cltd
inc
aam
icebp
mov
push
scas
lods
inc
sub
sub
out
cltd
mov
push
jae
cltd
shlb
inc
add
in
into
push
push
push
xlat
xor
mull
cltd
dec
insb
loopne
mov
das
cmpsl
adc
js
cltd
mov
adc
stos
xlat
rcl
push
adc
cltd
lods
add
clc
jecxz
jp
cltd
xor
movsb
repnz
insl
adc
cli
dec
xlat
and
lods
mov
mov
in
andl
pop
adc
mov
fwait
icebp
xchg
rclb
adc
dec
imul
push
mov
pusha
mov
imul
xchg
dec
add
iret
pop
fldl
inc
cltd
push
loop
push
adc
cltd
les
js
sub
lcall
adc
mov
dec
cltd
inc
sub
cmp
shl
xlat
imul
cltd
xchg
pop
inc
dec
push
cld
push
fwait
cmp
lcall
stos
mov
hlt
adc
xor
fisubs
jno
call
push
xor
sub
cmc
out
cltd
pop
idivb
loop
test
sbb
mov
cli
xchg
push
call
movsb
loopne
lret
cmp
ss
xor
push
jg
ds
insb
xor
cltd
add
jecxz
sbb
xorl
cmp
jge
jne
xchg
cltd
push
aas
rorl
jnp
push
fwait
daa
mov
cmp
cltd
inc
imul
push
mov
dec
scas
hlt
cltd
iret
sbb
shl
push
wbinvd
icebp
int
imul
mov
push
pop
adcb
lcall
outsb
sub
loope
jns
mov
adcb
aad
inc
dec
out
stc
bnd
popa
jnp
adc
mov
xchg
cs
mov
or
or
frstor
je
aaa
cwtl
or
lcall
fwait
mov
cltd
inc
pop
std
inc
inc
bound
or
movsl
jge
daa
lods
and
cli
cltd
jbe
push
les
aas
mov
inc
stos
dec
mov
pusha
imul
pop
push
clc
sub
popf
fcmovne
mov
cltd
lods
cmpsl
cwtl
xorb
stos
loopne
push
xor
sbb
leave
shl
dec
in
fisubl
push
sub
and
fwait
jp
loope
add
cmp
sbb
into
mov
lds
jae
inc
mov
out
data16
lea
xor
insl
incl
fwait
mov
mov
pop
andb
and
or
fadds
jl
and
push
cld
adc
int3
jae
mov
sahf
pop
jnp
pop
fisttpll
test
push
cltd
sub
xor
push
cmc
lcall
sub
repnz
cltd
lods
out
mov
popa
fidivrl
into
icebp
dec
je
push
xchg
sbb
mov
and
xchg
cltd
adc
adc
popa
cmp
scas
addl
fists
jne
add
push
into
dec
pop
and
cltd
xor
outsl
stos
xchg
in
sub
add
pop
mov
cltd
jns
stc
adc
inc
aas
pusha
ret
idiv
push
cwtl
cmpsl
ret
mov
sbb
pushf
dec
inc
test
jge
mov
int3
ret
mov
xchg
cltd
aam
repnz
rcrb
cltd
iret
or
sahf
mov
mov
mov
repz
push
mov
ja
and
fstps
jge
pop
or
movsl
cmpsl
and
add
fs
inc
adc
mov
push
push
pop
fadds
outsl
inc
inc
fsts
std
or
pop
movsl
out
rcl
lret
cli
xchg
in
push
testb
inc
mov
cltd
aas
shlb
cltd
das
mov
dec
lea
ljmp
icebp
jbe
loope
imul
or
je
cltd
repnz
rcll
mov
outsb
and
daa
call
fwait
aam
pop
inc
movsb
add
sub
movsl
jae
sub
sub
popa
dec
aas
or
jle
fwait
sbb
sub
mov
xchg
stc
mov
cltd
cmpsb
mov
sbb
cltd
hlt
shll
xor
mov
mov
gs
out
mov
insl
cltd
imul
in
cltd
jl
hlt
mov
shrb
mov
ja
lock
scas
inc
fsts
add
cmp
cmp
and
call
mov
cltd
movl
xchg
rolb
movsl
insl
jle
mov
add
mov
sbb
cmp
jo
pop
fwait
or
sub
lret
in
cmpsl
inc
mov
cmpsb
je
add
cld
das
popf
xor
and
add
or
shlb
adc
jae
mov
cltd
test
sti
loop
fidivs
or
push
sub
push
pop
or
cmc
mov
fwait
addr16
les
mov
cwtl
add
iret
leave
leave
jle
movsb
mov
lods
pop
mov
scas
gs
mov
aam
sbb
call
push
adc
orb
dec
inc
daa
icebp
cltd
cwtl
ficompl
mov
jb
cltd
leave
xchg
ret
jmp
jns
cltd
xor
lock
xor
pop
mov
mov
testb
cmp
sbb
and
outsb
xor
or
and
ret
inc
daa
insl
insb
fwait
and
mov
lahf
cltd
xor
sbb
cltd
test
call
cmpl
jp
int3
push
cmpsl
adc
mov
fdivp
fsts
sti
je
xchg
rcr
cltd
dec
mov
jge
cltd
lods
or
cltd
fcoml
mov
test
xor
cmpsl
pop
lods
out
push
std
ja
mov
mov
cltd
pop
mov
xchg
or
mov
aas
gs
fwait
hlt
sarb
push
cli
cld
adc
inc
imul
and
mov
ja
cltd
fwait
push
daa
push
sar
sub
jecxz
shlb
mov
sbb
dec
notb
cltd
in
mov
jb
cmp
jns
cmc
and
or
nop
jmp
fsts
into
xchg
cltd
outsb
push
jno
mov
lea
jae
inc
ret
ror
imul
or
jmp
fs
dec
jmp
clc
push
int3
xor
imul
inc
out
xchg
pushf
in
push
fwait
xchg
and
inc
loopne
sub
pop
adc
aas
sbb
and
mov
lret
jp
cmp
add
push
sbb
pop
test
popf
repnz
fwait
push
push
je
stos
cmp
jmp
push
or
cmc
rcll
stc
xchg
mov
push
sbb
leave
lret
cmp
adc
lahf
icebp
out
jns
jl
cmpsb
jbe
mov
inc
fwait
mov
lock
mov
push
sub
jnp
mov
and
xchg
sahf
dec
jmp
inc
aaa
mov
xchg
leave
and
mov
sbb
ss
sbb
mov
jb
daa
lcall
mov
adc
fnsave
xchg
push
inc
jmp
outsl
adcl
jp
push
push
in
inc
xorl
popa
enter
cmp
push
scas
or
loopne
pop
stos
ljmp
push
and
dec
mov
test
cmp
push
movsb
rcr
mov
push
adc
in
pusha
ss
movsl
jg
jne
cmp
repnz
fcompl
shlb
rol
je
mov
adc
stos
lds
push
jl
mov
push
aad
in
mov
loopne
ds
adc
cmp
mov
mov
adc
aaa
std
sub
lea
cmp
andl
imul
sbb
sub
pop
mov
push
and
cmpsl
and
mov
sbb
xor
adc
jmp
cmp
lea
and
push
fwait
mov
mov
adc
push
outsl
fdivrl
jmp
mov
xorb
and
into
inc
int
scas
clc
xchg
adc
push
nop
js
lret
jg
fs
into
pop
fisttpl
dec
mov
cmp
adc
jne
test
lock
fistpll
and
sbb
cld
stc
mov
or
jg
aam
mov
jae
xor
jmp
lock
pop
cmp
pop
lock
xchg
xchg
mov
inc
lea
fwait
or
pop
shr
gs
hlt
cmpsl
daa
test
shll
jmp
aas
add
inc
jmp
xor
and
jno
pop
xchg
inc
jecxz
mov
add
or
pop
jne
jmp
jg
and
inc
movsl
and
rcrb
out
jo
push
in
ror
mul
aad
sbbb
fs
out
sbb
mov
shl
lds
cltd
mov
loope
cmpsb
sti
ss
jmp
inc
int3
out
sub
int3
cmp
lcall
xor
imul
shl
push
or
icebp
jno
jmp
lea
sub
fsubrl
cli
fcomi
add
mov
inc
mov
outsl
xchg
fildl
or
mov
jg
imul
pusha
es
pop
jmp
and
sahf
and
jmp
loopne
push
inc
movsl
push
cld
int
sbb
movsl
fcomps
fnstcw
cmpsl
mov
cmp
in
and
dec
lcall
mov
mov
orl
mov
sbb
dec
out
imulw
popf
enter
lods
mov
xchg
push
inc
push
pop
dec
int
icebp
adc
xor
addb
cwtl
cmp
jns
and
inc
pushf
xchg
std
jg
int3
push
lahf
jmp
jo
add
mov
cmp
mov
aad
xor
adc
mov
cmp
inc
add
lods
outsb
xchg
stos
into
shll
and
lea
enter
sub
push
cmpsb
push
fldpi
and
fwait
dec
lret
lea
inc
mov
push
or
or
out
cmp
mov
gs
push
testb
sub
cmpl
hlt
movsl
mov
xor
xor
push
adc
jns
aaa
xchg
mov
dec
jge
movsl
insl
jmp
jo
cmc
daa
imul
push
jl
cwtl
or
cmp
out
sbb
cmpsb
mov
bt
in
push
and
fsubl
pop
out
sbb
mov
dec
sub
jne
cmpsb
imul
lret
cwtl
ja
jae
inc
les
jb
stos
mov
mov
inc
sbb
mov
loopne
mov
pop
sahf
mov
mov
gs
dec
neg
fnstsw
jns
cmp
icebp
stos
test
mov
and
mov
push
lds
scas
enter
mov
jge
int
icebp
mov
dec
fldenv
push
jp
push
out
pushf
or
sub
push
loope
out
stos
repnz
lods
jae
movsb
stos
lock
sbb
mov
jecxz
mov
ljmp
fidivrs
sysenter
scas
mov
fs
sub
aaa
mov
inc
pop
aaa
fldl
mov
inc
dec
jmp
scas
mov
and
ja
jb
xchg
add
mov
or
mov
mov
cli
daa
cltd
mov
mov
mov
jno
and
aad
inc
loop
cmp
lock
inc
inc
lahf
inc
insb
push
pop
test
add
xchg
and
cmp
popa
int3
divb
jno
psrlw
gs
cld
dec
popa
pop
nop
jge
outsl
mov
add
xchg
jo
aaa
ljmp
aas
aam
mov
jmp
pop
cmp
mov
mov
ds
cmp
clc
inc
int3
iret
stos
stos
cs
rcrb
repz
dec
les
jmp
cmp
cltd
stos
test
icebp
mov
loopne
insl
and
addr16
add
leave
in
pop
push
ss
shr
sub
mov
xchg
or
mov
ret
lea
das
xor
shrl
or
xor
or
sbb
insb
popa
data16
or
sub
and
sti
dec
mov
jle
pop
enter
push
pop
pop
imul
imul
xor
mov
and
or
mov
je
push
push
iret
jo
test
adc
cs
out
push
sub
push
in
inc
popa
loope
fs
jmp
dec
adc
in
mov
inc
or
inc
loopne
ret
jno
jg
mov
sbb
stos
sbb
out
dec
ljmp
repz
movsl
xchg
jp
fwait
pop
imul
jne
bound
test
movsb
mov
mov
mov
mov
inc
pop
push
loop
insb
pusha
int
movsl
adc
push
adc
cmc
dec
mov
sub
cmp
fisubrl
lods
lret
sti
mov
lcall
push
jg
xchg
shrl
stos
lret
sub
aam
jnp
sbb
hlt
test
mov
cld
cwtl
mov
and
pop
imul
loopne
sbb
cmpsl
repnz
in
dec
cmpsl
fistpll
nop
dec
sub
mov
xchg
mov
fwait
and
rcrl
stc
sub
pop
pop
insb
mov
nop
xchg
push
shrd
sti
add
sub
xchg
insb
popf
ret
shrb
mov
movsl
outsb
scas
inc
fdivrs
sti
dec
inc
mov
leave
jo
mov
mov
jns
dec
imul
push
enter
cmp
loope
pop
loop
pushf
xor
and
pushf
dec
jbe
inc
cmp
sub
pop
or
adc
scas
aaa
icebp
sti
mov
mov
aad
sub
dec
sbb
nop
mov
cmpsl
jo
sbb
loopne
jp
add
jns
add
pushf
pop
fwait
daa
ret
dec
leave
clc
mov
outsb
xchg
mov
fcmovbe
test
inc
mov
sti
test
lock
xor
fldenv
adc
mov
sahf
nop
mov
movsl
daa
inc
pop
pop
mov
sub
enter
mov
or
cmp
jo
jnp
jne
push
popa
and
repnz
dec
stos
into
pop
lret
icebp
xchg
mov
enter
mov
jne
notb
jo
dec
mov
pop
mov
jns
cmp
sub
cmp
pop
sub
jo
aas
pop
and
cmpsb
adcl
mov
seta
das
mov
or
andb
mov
or
sahf
mov
sbb
lret
sbb
push
cmp
mov
cmp
out
pop
movsb
and
arpl
popf
movsb
xchg
jns
add
mov
dec
fadds
push
cmp
test
mov
pop
mov
cmp
int3
jno
out
in
push
sbb
imul
mov
cmp
push
insl
jbe
shll
inc
push
movsb
js
popf
fmull
mov
pop
jns
and
fwait
jnp
imul
mov
dec
pop
adc
sti
rcrb
sub
jb
mov
addr16
test
sar
lock
cmpsl
xor
mov
jmp
pop
cmp
ljmp
dec
fbld
andl
mov
enter
or
inc
xchg
fstps
mov
cltd
sbb
mov
dec
loope
mov
push
insl
cmp
mov
sbb
mov
pop
or
push
dec
inc
rcrb
sub
lret
cmp
add
ret
scas
std
cmc
mov
cmpsb
ds
cmp
in
and
sbb
inc
repz
xchg
mov
negl
cmpsl
addr16
movsl
cld
shrl
mov
fwait
inc
outsb
sbb
rcrb
lcall
xor
mov
mov
inc
mov
jmp
xor
mov
xchg
fisubrl
dec
out
test
movsl
inc
dec
jg
ret
jns
jae
dec
in
pop
inc
aaa
ret
jo
lahf
pop
mov
or
mov
test
mov
push
cmpsb
mov
cmp
mov
jns
stc
fptan
cmp
push
in
popf
cs
push
mov
loope
fiaddl
mov
lods
adc
pushf
cmc
idivb
xor
mov
push
rcrb
loope
lods
nop
sub
scas
in
aas
pop
add
inc
fisubs
test
lods
jne
sub
mov
sub
cmp
lcall
mov
dec
and
lock
and
aad
cmpsb
mov
dec
lcall
xchg
iret
and
mov
adc
pushf
mov
or
fwait
dec
add
mov
or
mov
fdivl
mov
notl
inc
dec
xchg
mov
sub
aas
rcl
loope
imul
cs
jl
jno
add
sbb
sbb
loopne
icebp
gs
mov
pop
das
inc
mov
mov
cmp
sub
les
das
cmpsb
jecxz
ret
dec
ds
dec
mov
cmpsl
sub
xor
out
push
lods
js
sub
push
aad
and
dec
or
pop
pop
cmp
mov
mov
mov
jle
bnd
push
sub
push
loopne
dec
into
add
pop
or
pop
mov
clc
test
lea
mov
sbb
gs
mov
mov
xchg
je
jo
pushf
sbb
pop
mov
inc
pminub
adc
in
inc
cmp
sub
fidivl
push
inc
or
add
frstor
xor
jnp
pop
ja
xor
mov
add
jne
pop
cmp
inc
or
jns
cwtl
sbb
cmc
jo
inc
dec
lods
or
push
jnp
xor
and
or
sub
mov
into
rcl
pushf
negl
pop
xor
mov
mov
stc
jnp
pop
hlt
lcall
icebp
orb
rorl
je
add
sbb
push
dec
cltd
inc
mov
in
push
mov
mov
decb
cs
mov
jbe
cmpsl
ja
test
fnstcw
in
imul
out
or
mov
lock
nop
push
push
adc
pusha
jno
push
cltd
sbb
xchg
js
shlb
mov
lret
dec
add
pop
stos
push
xorl
push
dec
and
popf
sub
mov
xchg
jnp
les
pusha
add
cld
test
lods
inc
push
push
sub
mov
cmp
dec
jp
sub
es
stc
repnz
pop
inc
leave
mov
or
rol
mov
pop
sbb
sbb
jno
jne
mov
push
mov
push
test
pushf
in
pop
loope
push
movsb
pop
mov
adcb
xor
js
jns
or
dec
rcrb
je
mov
scas
popa
push
push
loope
inc
dec
test
dec
hlt
outsb
mov
std
lahf
cmp
mov
sbb
sbb
cmp
xchg
call
xchg
test
pop
inc
cmp
dec
sub
push
test
mov
cld
jmp
lods
pop
sub
add
leave
cmpsl
lods
or
pop
and
in
and
mov
jns
dec
dec
je
push
xor
stc
int3
nop
mov
rcrb
adc
mov
lds
scas
lret
mulb
push
jne
inc
mov
sub
jge
inc
inc
push
lods
adc
loope
push
xchg
adc
mov
push
mov
mov
add
sbbl
mov
jnp
movsl
mov
mov
mov
pusha
clc
dec
push
pop
popl
arpl
ret
pop
ror
call
sub
sbb
gs
mov
fdivs
popf
xor
inc
pop
lods
mov
pop
mov
jnp
cld
jo
fwait
pop
leave
lcall
cltd
push
clc
sub
imul
mov
xor
push
popa
mov
clc
dec
inc
scas
outsl
and
or
sbb
insl
movsb
sbb
jns
ds
shlb
out
fsubrl
loope
icebp
pop
and
test
out
std
jo
xlat
and
stos
pushf
pop
lret
test
loop
jns
ds
mov
test
out
pushf
sbb
push
cmpl
orb
into
push
mov
dec
pushf
mov
fdivrl
mov
add
rcl
xchg
mov
fstps
jae
xor
xorl
pusha
stos
dec
and
or
pop
add
out
jbe
jmp
lret
mov
cmpsl
mov
xchg
icebp
pushf
mov
dec
lds
cmovns
jno
lock
jo,pt
adc
xchg
inc
cmpsl
cmp
mov
adc
sti
adc
test
movsb
pop
and
mov
gs
dec
inc
mov
outsb
notb
sti
mov
xlat
push
dec
jnp
jmp
mov
dec
addr16
fwait
sbbb
stc
cltd
inc
and
enter
sub
inc
sbb
and
cli
gs
fisubrs
fwait
mov
xchg
jae
or
dec
sbb
pop
fists
cld
mov
cmp
jns
fstps
mov
push
dec
mov
fdivs
pop
popa
mov
les
test
scas
mov
pop
scas
pop
adc
test
and
out
pop
into
and
mov
xchg
or
ljmp
inc
pop
cmc
sub
jns
out
mov
sbb
lock
dec
mov
sbb
or
pop
xor
mov
call
sbb
lock
aaa
icebp
dec
push
imul
push
sbb
gs
lea
mov
mov
icebp
mov
mov
mov
das
lods
mov
addr16
mov
pushf
ret
pusha
or
dec
pop
dec
add
ss
and
jecxz
lahf
stos
mov
movsl
and
imul
mov
mov
pop
jge
and
xor
stos
neg
mov
sub
pop
push
sti
mov
nop
jne
enter
lahf
test
test
sbb
or
cmp
fcmovnu
aam
cltd
pusha
subb
xchg
and
mov
sbb
jns
sbb
dec
fdivrl
cmc
test
adc
loope
imul
mov
lds
fcmovu
push
jo
aas
shr
or
stos
mov
jb
cmc
sub
pop
dec
mov
sar
jno
test
add
jl
test
jnp
sbb
fwait
movsl
cmp
repz
add
daa
mov
cmp
jb
mov
mov
fimull
pop
adc
cmp
inc
fiadds
cwtl
push
jns
cmp
jno
and
inc
loopne
push
mov
in
and
mov
adcl
pop
pop
sbb
fidivrs
data16
xor
pop
mov
dec
mov
sub
andl
dec
and
jecxz
and
gs
aaa
stos
push
jl
lock
xor
push
lahf
xchg
pop
pop
fbld
push
mov
and
sbb
pop
and
cmp
pusha
and
test
mov
cld
jae
sbb
jnp
jne
pop
jge
inc
mov
inc
sbb
mov
ds
gs
xchg
test
mov
bswap
push
pop
cmp
cmp
push
ja
push
lods
fnsave
call
sbb
lods
cmpsl
pop
pop
cmp
xor
rolb
pop
test
out
dec
mov
sub
daa
out
cmc
dec
out
xor
cmp
pop
push
push
mov
lods
nop
pop
cmpsb
add
add
pop
inc
sbb
dec
adcb
int3
pushf
adc
or
sarb
sub
rcll
pop
mov
pop
cmpsb
shll
out
sbb
sub
gs
ja
pop
ljmp
loope
test
shll
mov
inc
pop
mov
mov
sbb
jno
jnp
mov
xor
xchg
loop
mov
cmp
mov
mov
mov
jmp
dec
xchg
mov
push
sbb
lret
jp
cmp
mov
sbb
push
adc
mov
outsb
adc
lock
mov
mov
pop
dec
mulps
mov
mov
arpl
mov
mov
jns
adc
sub
mov
jb
cmp
in
sub
fsubl
or
scas
cli
sbb
xor
and
cmp
icebp
jge
mov
inc
pop
jp
mov
fdivs
mov
mov
pop
call
push
push
out
mov
jg
pop
cmpsl
jle
bound
inc
cmp
fnstsw
aaa
loope
popa
movsl
xor
mov
sub
sbb
inc
cmpsb
lret
pushf
enter
or
mov
sbb
mov
adc
dec
jae
loope
jno
out
repnz
pusha
sbb
dec
out
je
cmp
imul
mov
adc
out
es
mov
sub
in
fwait
lahf
sub
mov
cltd
push
icebp
inc
stos
ds
dec
aad
mov
das
fcoms
mov
pop
fcmovbe
flds
test
lods
das
in
dec
inc
sti
inc
loop
dec
lcall
shrl
sub
test
adc
scas
mov
sti
hlt
scas
jle
push
mov
test
mov
cld
mov
aaa
je
pushf
mov
fwait
outsb
add
mov
xchg
dec
gs
mov
stos
jnp
xorb
test
mov
jne
adc
test
pusha
mov
xor
lods
mov
jno
lret
xchg
mov
jne
fmull
mov
lcall
test
and
ret
jg
cmp
in
push
mov
dec
fiaddl
push
xor
jns
pusha
dec
dec
pop
mov
es
jno
inc
mov
xor
ja
pop
and
into
adc
icebp
movsl
inc
ret
xchg
loopne
sbb
mull
add
xor
dec
push
xchg
lods
pusha
jnp
out
mov
sub
lea
mov
mov
jno
and
std
push
rolb
dec
sbb
jmp
pop
mov
sbb
xor
sahf
ficompl
dec
js
in
mov
cmpsl
rorl
pop
aam
push
pop
jecxz
inc
js
lcall
jns
mov
and
cmc
mov
arpl
daa
mov
movsb
stos
pop
dec
jne
sub
fwait
pop
dec
call
jo
xchg
or
pop
mov
test
dec
mov
cld
test
lods
push
mov
mov
loope
xchg
hlt
jge
ljmp
mov
mov
jecxz
xor
sub
or
in
push
gs
nop
test
mov
rorl
mov
and
add
add
jnp
cli
xchg
cltd
cld
xchg
sub
dec
push
cmc
arpl
stos
out
pop
sbb
fidivl
sar
sbb
adc
mov
adc
pop
push
lods
loopne
mov
pushf
cli
movsb
push
fs
loope
pop
cmp
pop
repnz
mov
mov
sbb
cmp
sub
arpl
fcmovb
adc
add
mov
inc
mov
int3
popa
jl
mov
sbb
pop
dec
test
mov
into
lock
cmp
push
shlb
push
jecxz
rclb
xchg
pop
xlat
or
out
xor
test
nop
xor
mov
push
addr16
test
lcall
xor
sbb
sub
mov
enter
popa
mov
push
hlt
scas
pop
sbbb
into
sub
or
sbb
or
repz
fisubrs
jle
sbb
loopne
add
mov
orl
stos
jns
cmp
xchg
sahf
jo
and
inc
and
xchg
dec
loope
mov
cltd
clc
imul
mov
sbb
test
das
popa
xchg
jmp
pusha
dec
inc
cmc
pusha
sbb
int3
repnz
scas
sbb
enter
inc
jmp
push
xor
dec
inc
sbb
inc
out
cmp
movsl
lods
stc
test
sub
dec
xchg
pop
or
sbb
jmp
gs
lea
popf
std
jb
push
lret
into
popa
aad
adc
xor
mov
mov
dec
mov
loopne
mov
hlt
and
mov
mov
push
dec
movsl
fs
adc
mov
add
fldl2t
sbb
dec
lcall
out
mov
ret
jmp
or
mov
mov
dec
scas
cmpsb
movsl
mov
ret
jnp
mov
or
xor
imul
movsb
fwait
jmp
aaa
movsb
mov
popa
int
push
sbb
sub
in
xorl
lock
dec
inc
hlt
faddp
xchg
cwtl
mov
push
loop
call
xchg
push
pop
sub
and
add
test
pop
lock
imul
lahf
mov
imulb
out
xchg
mov
sub
sub
mov
cmpsl
mov
dec
fiadds
js
pop
jo
call
or
adc
cmp
push
cmc
incb
outsl
movsl
jb
or
fcmovb
push
jne
cmp
mov
jne
jmp
pop
jbe
mov
cltd
mov
jmp
mov
inc
fisubrs
pusha
enter
cmp
push
lret
fsubr
mov
or
jbe
or
arpl
repz
mov
fs
mov
xchg
outsl
sub
adc
loop
xchg
mov
je
in
sub
add
jmp
push
addr16
shlb
push
rorb
stos
neg
push
sbb
or
push
mov
mov
mov
idivb
xchg
mov
out
iret
and
dec
scas
mov
jns
push
add
pop
jmp
xchg
fbstp
es
mov
xchg
mov
int
mov
cmpsb
pushf
mov
shlb
sbb
test
cmp
push
xchg
adcl
push
bound
ss
addr16
int3
cmp
cmp
lock
cs
cmpsb
jmp
pop
lock
fadds
jne
cmpsl
js
std
mov
xchg
test
lds
cmp
insb
sbb
scas
stos
sub
sbb
jno
dec
rcrb
subl
push
inc
rcrl
repz
fwait
add
pop
inc
jecxz
xorl
and
pushf
fiadds
lea
push
jae
adc
adc
jbe
adc
dec
dec
loopne
icebp
test
arpl
or
pop
pop
fwait
ret
sbb
in
sbb
jecxz
arpl
xor
jae
es
xchg
inc
mov
stos
aaa
inc
push
lret
jmp
mov
adc
mov
into
test
pop
scas
push
popf
bound
add
push
jmp
sub
xchg
sub
sbb
mov
fiadds
ljmp
add
dec
mov
sub
mov
sub
lods
inc
enter
inc
xchg
dec
add
jmp
iret
xor
ja
push
lods
push
cmp
sbb
mov
mov
mov
and
push
int
ficomps
orl
jb
mov
into
jae
int3
loop
js
enter
inc
mov
and
mov
adc
sbb
mov
shll
fwait
mov
inc
in
lret
inc
mov
stc
mov
and
mov
xor
push
cmp
cmpsl
mov
test
mov
jmp
notb
or
into
lock
cmp
xchg
adc
jnp
mov
jge
mov
mov
test
adc
fstpl
push
sahf
call
ret
xor
bound
dec
sbb
push
fmull
mov
fdivl
jg
push
sbb
movsl
ja
ret
imul
in
mov
push
or
lcall
pop
pop
jecxz
leave
jl
aaa
popf
mov
lock
lea
and
mov
and
in
jecxz
dec
mov
pop
cmp
xchg
add
jmp
mov
inc
pop
dec
pop
mov
cld
push
mov
fisubrs
dec
aam
sahf
sbb
adc
inc
popf
ret
push
lcall
jge
fistps
out
xchg
lock
push
test
js
inc
mov
rorb
push
orl
mov
cltd
scas
outsb
jl
lret
mov
das
cwtl
ret
imul
sbb
popa
test
bound
lcall
adc
and
rcl
aam
cltd
pop
js
ret
push
add
push
jne
xchg
or
dec
fdivrs
lret
cmp
add
lods
popa
dec
into
lds
jmp
divb
int3
int
lods
xor
loopne
in
pop
js
pop
mov
jmp
pop
xchg
sbb
mov
mov
imul
int3
and
jge
fldcw
mov
add
inc
sbb
out
sahf
dec
jmp
pushf
movsb
jp
xchg
mov
jae
adc
jnp
dec
movsl
aaa
pop
jmp
dec
lret
xor
sub
lock
dec
arpl
inc
jmp
stos
add
jge
stos
fcomps
stos
dec
mov
mov
and
mov
xor
mov
push
adc
cmpb
jbe
mov
mov
mov
cmc
rclb
vandnps
shr
and
les
daa
add
sbb
mov
cmp
ret
and
cli
popl
lock
dec
cmp
mov
call
and
scas
jecxz
inc
pop
pop
adc
jo
sbb
jmp
mov
outsb
addl
test
fidivrl
or
mov
lcall
mov
jge
imul
jl
pop
jno
mov
out
pop
mov
sbb
arpl
jnp
cmpsl
mov
stc
dec
mov
mov
mov
sbb
sub
and
addr16
sti
sub
jbe
test
or
loopne
and
push
fcompl
adc
lcall
pop
mov
push
jmp
or
xchg
pop
mov
stos
jno
push
movsb
sub
add
je
jbe
add
jle
inc
xchg
add
jmp
fldenv
rol
mov
rorl
mov
and
rcl
shrd
hlt
lret
jb
dec
rcrb
inc
cmp
mov
int
lods
add
in
mov
jmp
cmp
mov
lcall
push
or
xor
stos
xor
daa
adcb
loope
movsl
sbb
inc
ds
mov
or
and
inc
insb
push
push
push
push
inc
das
cltd
test
adc
inc
fidivrl
mov
or
loope
popf
cmp
shll
lods
je
stos
adc
lcall
add
cmp
or
sbb
add
dec
xor
push
sub
sti
insl
je
sub
negl
lock
fmull
mov
sbb
mov
sub
inc
pop
fimuls
test
add
xor
arpl
pop
andl
dec
shrb
sub
dec
enter
dec
js
mov
loopne
ret
cli
out
adc
and
std
aas
push
int3
mov
shrb
or
push
push
fimuls
pop
jge
pop
mov
inc
xchg
ss
xchg
and
lods
sbb
lods
cwtl
dec
mov
movb
movsl
mov
jmp
jmp
adc
add
out
pushf
andb
push
mov
dec
lds
xchg
sub
mov
inc
pop
stos
popf
sub
cli
pusha
mov
pushf
sar
mov
jle
jb
add
cmpsl
xor
ret
mov
push
xchg
loop
dec
mov
lea
call
sarl
test
and
cmp
push
mov
inc
insb
hlt
fnsave
jnp
or
jnp
icebp
mov
xchg
pop
lock
cmp
inc
into
cmp
mov
dec
jo
filds
movsl
ljmp
mov
out
les
fdivr
jmp
mov
inc
push
cmp
jae
mov
add
jmp
and
cmc
mov
mov
cmp
stos
imul
xchg
loopne
fcmovnbe
mov
pop
scas
cmpsb
and
aas
cmp
scas
pop
cs
inc
stc
scas
cmp
add
jmp
test
jge
xadd
xor
xchg
mov
inc
imul
add
fldcw
test
and
xchg
sub
jo
jns
push
loopne
inc
xchg
mov
mov
test
mov
sbb
push
xor
mov
cmp
adc
adc
mov
push
xchg
popa
jge
cli
loopne
dec
or
sbb
jl
cmc
pop
sub
loope
out
sub
std
mov
mov
fwait
xor
sbb
std
jmp
push
or
adc
cmpsb
jmp
cmp
mov
rcl
std
or
je
out
xor
js
out
sti
ja
fs
inc
dec
arpl
into
sub
lock
aaa
aas
cmp
dec
nop
adcb
rcrl
ret
add
inc
cmp
data16
jg
stos
insl
in
mov
fists
inc
lahf
inc
xchg
out
std
mov
stos
xor
ss
jp
cmp
popa
lods
imul
ror
mov
sbb
cmp
repz
jmp
psrld
mov
fisttpl
mov
stos
or
mov
lods
sbb
sub
mov
sbb
xchg
aam
in
xorl
outsb
adc
ljmp
mov
mov
xor
out
pop
mov
scas
xchg
stos
in
cmp
cltd
insb
add
mov
sub
cltd
sub
clc
negl
lods
ret
fadd
cltd
lock
std
cltd
out
mov
lcall
inc
mov
pop
sbb
sahf
imull
xchg
sub
mov
sub
loope
mov
repnz
cltd
mov
pop
dec
dec
addr16
mov
inc
loope
in
push
cltd
or
inc
out
jmp
pop
lret
movsb
push
pop
shl
pop
and
popa
adc
mov
pop
lahf
dec
addr16
lea
or
xor
aaa
adc
jo
inc
mov
subb
push
jmp
test
int3
xor
fxch
cltd
mov
mov
pop
cltd
clc
inc
repnz
ret
cmpsl
outsb
mov
mov
leave
stos
in
fbld
daa
dec
dec
cltd
rcr
ss
adc
pop
popa
mov
fldl
push
push
xchg
and
sahf
sbb
mov
push
mov
sbb
mov
fnstsw
loopne
rcr
fldt
fwait
mov
repz
add
repnz
pop
jle
inc
jmp
ds
sbb
cltd
mov
addl
mov
mov
lahf
fdivs
testb
sbb
fsubl
and
test
cmp
loope
adc
insb
movsb
testb
add
ljmp
cmpl
adc
dec
scas
cmp
insb
push
outsb
xchg
cltd
lahf
lds
stc
xchg
nop
aaa
pop
cltd
subb
ljmp
cli
fdivrl
call
movb
mov
cmpsl
aas
jbe
jmp
out
lret
fldcw
imul
xor
xchg
out
cmp
mov
adc
mov
or
daa
fnstcw
xchg
outsl
add
cltd
pop
dec
in
xlat
stos
or
adc
sub
jmp
inc
or
sbb
sub
lcall
notb
and
pop
subb
cltd
dec
mov
mov
cltd
std
add
iret
lahf
mov
push
pushf
cmp
or
pop
addl
mov
mov
movsl
adc
loopne
loopne
cltd
and
push
insb
cmpsl
out
dec
mov
push
roll
adc
cmp
mov
xchg
xchg
dec
xchg
mov
fadd
jae
mov
xlat
cltd
inc
pop
pop
adcl
mov
iret
shlb
popf
scas
jecxz
imul
push
out
xchg
cltd
jle
lret
xorb
xlat
mov
adc
mov
loopne
scas
outsl
or
fs
sbb
cwtl
add
add
xchg
pop
cltd
lods
test
push
call
mov
rcl
dec
and
cltd
fwait
sub
test
aam
outsl
scas
pop
cmpb
lods
mov
cs
pop
cmp
push
jnp
ret
das
xor
or
cltd
xor
sub
loop
outsb
cltd
dec
fistpll
stos
fwait
lcall
ret
cmpsb
inc
add
iret
int
jb
or
aas
xor
cltd
rorb
pop
cltd
mov
pop
sub
adc
cltd
xchg
mov
xor
idivb
push
adc
mov
les
std
ja
sbb
add
aam
inc
insl
scas
mov
sbb
icebp
mov
sbb
std
cltd
ret
pop
mov
cltd
jle
out
imul
add
push
in
cmp
fwait
cmpl
pop
pop
xchg
in
cltd
xor
push
or
mov
iret
sbb
xor
test
loop
cltd
outsb
popf
dec
xchg
sub
mov
pushf
jae
cs
sbb
cltd
insb
inc
pop
sbb
mov
inc
cltd
adc
pop
xor
movsl
xlat
enter
xchg
jbe
mov
stos
and
pop
dec
mov
nop
test
iret
stos
in
adc
inc
xchg
add
xor
add
sub
pushf
out
testl
and
jge
dec
int
xchg
arpl
sub
xchg
cmp
or
ss
fidivs
stos
jmp
cld
sub
ja
ret
lods
jmp
lcall
fadd
mov
insb
push
push
fwait
mov
hlt
dec
sbb
push
xchg
xor
jg
mov
enter
dec
push
mov
jecxz
leave
inc
jo
js
scas
loopne
in
out
xchg
lds
jmp
jbe
mov
aas
in
pop
jnp
push
cmp
out
scas
faddp
jno
and
lock
nop
into
mov
cmpb
dec
lods
xchg
push
cwtd
adc
out
xchg
adc
clc
adc
jns
add
fsubr
xchg
sub
inc
cltd
stos
js
cmp
nop
xor
cltd
lcall
xchg
ds
iret
xor
cltd
mov
pop
sbb
adc
sti
das
jno
mov
frstor
filds
xlat
sbb
push
push
sbb
jb
push
cltd
sub
std
push
int
sbb
push
les
shl
cmpl
ficoml
xlat
xor
aad
jmp
xchg
aam
jle
ficompl
adc
insw
cltd
inc
push
shrl
jmp
lods
dec
mov
xor
cmp
fdivrl
incl
sub
sbb
sub
sbb
pop
cmp
out
lahf
addl
sbb
loopne
in
fwait
mov
aam
fldenv
jecxz
and
in
xchg
jno
sbb
or
mov
andl
mov
movsl
cmp
fwait
mov
jl
mov
das
add
push
loope
cmc
setns
xor
imul
lods
cltd
out
mov
mov
test
dec
test
push
jo
test
mov
cltd
inc
xor
cmpsl
sbb
and
cltd
sbb
xor
cwtl
call
push
lds
cmp
cltd
and
add
mov
jnp
shr
sbb
or
fwait
in
shrl
inc
ret
out
mov
ret
mov
scas
pop
xor
xchg
out
cltd
sbb
xor
sub
cwtl
test
pop
int
mov
mov
cltd
ljmp
pop
adc
sbb
and
add
scas
icebp
scas
fmul
mov
enter
mov
pop
sets
jp
repnz
insb
pop
lds
xchg
in
lea
xor
movsl
ror
inc
iret
mov
imul
nop
jne
inc
cltd
adc
add
out
idiv
in
pushw
addr16
mov
add
and
cld
ds
cmp
out
xor
sbb
arpl
sbb
cltd
xchg
and
mov
fwait
push
call
cmp
in
sti
test
add
xchg
int
mov
and
movsl
mov
es
rorl
insl
arpl
adc
push
or
lods
cld
xchg
mov
and
xchg
pop
jo
jns
adc
mov
loopne
cmp
mov
sub
and
pop
push
dec
pop
adc
push
fstp
mov
pop
sbbl
fwait
adc
xchg
mov
adc
cmpsl
test
pop
jg
inc
mov
cmpsl
cmc
sbb
repz
popf
in
mov
cltd
xchg
je
mov
push
inc
push
and
pushf
cltd
or
mov
mov
sub
fs
cltd
xchg
sub
push
jmp
and
mov
test
add
cltd
popa
imul
rorl
xor
lds
leave
addl
mov
out
mov
sub
jae
fstl
sbb
and
jmp
sahf
subb
pop
mov
inc
dec
xchg
rorb
imul
stos
pop
clc
shlb
ret
cmc
jmp
fsubs
mov
scas
ja
and
mov
shlb
xor
enter
mov
fcomps
mov
cmp
std
cli
cmpsb
movsb
or
dec
lods
inc
gs
or
js
ret
dec
push
xor
outsl
aaa
and
pushf
xchg
xchg
jo
push
jne
outsl
push
pop
clc
out
mov
mov
xor
mov
insl
je
mov
ret
cmp
bound
pop
int3
dec
mov
cmpl
scas
aaa
je
cltd
outsb
fisubs
in
mov
dec
pop
adcl
adc
mov
aad
add
push
sbb
lock
stos
mov
mov
adcl
mov
arpl
imul
mov
dec
sub
jle
adc
fistpl
lds
fsubs
nop
xchg
popf
cmp
repz
inc
mov
sbb
sarb
mov
sbbl
imul
jmp
popf
mov
lcall
add
insl
stc
mov
jmp
mov
and
sub
loop
int3
stc
jmp
dec
stos
lcall
in
sbb
inc
int
sahf
test
mov
ss
jecxz
shlb
cmp
in
push
jb
fidivl
mov
mov
cmp
nop
sti
push
jae
cmpsl
popa
sbb
adc
iret
dec
mov
xor
stos
fwait
xchg
xchg
xchg
js
test
jmp
cmpb
cmp
mov
js
mov
or
daa
jo
inc
sub
add
ret
push
popf
andb
divl
movsl
pop
lock
push
push
xor
cmp
rcr
xchg
movsb
mov
and
call
mov
gs
stos
xchg
or
sbb
sbb
mov
xchg
leave
and
jae
shlb
call
mov
divl
pop
pop
xchg
mov
loopne
aaa
lret
mov
imul
fwait
lahf
gs
inc
push
mov
mov
xor
pop
cmp
mov
fstpt
inc
sarb
jns
jg
jmp
fidivrs
or
or
xchg
pop
pop
push
dec
sub
addr16
int
adc
jmp
or
in
lock
jmp
and
pushf
mov
movsl
jge
add
dec
mov
sub
aas
sbb
inc
shl
cltd
mov
mov
repz
jmp
movsl
testl
mov
sbb
or
adc
mov
pop
outsl
aad
repnz
jae
lret
dec
ret
mov
cmp
test
dec
pop
add
sbb
roll
fistpll
pusha
orb
stos
cmpsl
into
jmp
mov
aaa
cld
scas
sub
inc
mov
push
lahf
push
sub
jle
or
pop
in
sub
mov
test
call
pop
push
xchg
andl
pop
jnp
pop
les
negb
in
lea
sbb
xor
adc
sarb
incb
cmp
cltd
mov
lea
fsubl
les
jae
and
and
inc
call
jmp
push
shrb
mov
mov
out
add
cmc
in
inc
xlat
sbb
sub
mov
sti
jmp
dec
mov
cmpsb
jmp
push
test
mov
hlt
or
dec
jmp
jae
xchg
int
xchg
inc
mov
jne
mov
sarb
mov
pop
mov
lret
mov
adc
dec
push
stos
stos
lahf
fildll
ss
aam
mov
sub
sbb
xor
in
fs
cmp
repz
pop
push
sbb
rorb
int
or
mov
sub
mov
and
jle
mov
jge
rolb
jae
imul
mov
push
lret
push
cmc
add
arpl
jle
in
mov
aaa
lcall
mov
mov
pop
inc
mov
enter
fistl
orb
mull
mov
jnp
sbb
cmp
nop
add
or
sub
je
and
push
fmulp
jecxz
loopne
orl
add
es
or
cmp
mov
data16
pop
lock
and
add
or
jno
dec
cli
push
stos
aam
movsl
push
mov
xor
insl
mov
push
xchg
xchg
push
mov
xchg
lods
sarb
mov
rcll
pop
and
xor
and
pop
mov
add
dec
and
pop
aaa
jmp
stos
scas
clc
mov
xchg
sub
pop
je
xorl
stos
mov
pop
mov
jno
inc
mov
fidivrs
popf
iret
pop
cmp
pusha
and
outsl
xchg
mov
push
xchg
mov
das
cmpsb
movsl
mov
stc
adc
fstps
xchg
mov
cmc
sbb
out
pop
or
stos
inc
movsl
aaa
cld
fwait
clc
repz
lds
imul
hlt
gs
add
in
loopne
push
insb
or
push
int3
push
inc
sub
je
imul
jne
and
jmp
pop
jp
mov
jle
loop
push
jecxz
sub
sbb
and
shlb
xchg
mov
mov
popa
push
ljmp
jmp
xchg
dec
iret
notb
fs
jmp
lock
cmpsl
mov
cmpsl
aad
xchg
mov
xchg
jb
lea
repz
out
or
mov
sbbl
xchg
fildll
lret
dec
aam
cmp
mov
adc
sbb
jns
popa
addr16
js
mov
inc
pop
push
adc
xor
sub
mov
movsl
jmp
int
shlb
enter
sbb
dec
cmp
mov
icebp
negb
rorb
in
or
cli
sbb
mov
es
and
inc
fwait
pop
pop
xchg
mov
ss
or
js
jmp
jno
imul
push
in
ret
dec
lock
jb
insl
add
pop
add
pop
mov
mov
test
push
push
push
mov
xlat
add
insl
mov
shll
xchg
outsb
gs
in
pop
in
pop
mov
fdivp
test
inc
ds
cmpb
dec
jmp
lds
popa
mov
test
jmp
sbb
iret
int3
and
fists
psubq
xor
sub
push
and
xchg
mov
xchg
mov
es
insb
outsb
sbb
mov
aaa
nop
jmp
and
pop
sbb
sub
es
jmp
ljmp
icebp
es
stos
insl
pop
pop
jo
repz
lock
or
push
or
adc
inc
ret
xor
push
xor
es
jmp
xchg
cmpsl
sub
pop
fwait
mov
and
mov
pop
lock
dec
or
pop
sbb
dec
fwait
in
and
shll
xchg
add
xchg
jl
cmc
aam
fiadds
xchg
ja
xchg
adc
push
mov
insl
push
loopne
cli
jmp
sub
shr
cmp
cmp
dec
xchg
std
pop
push
jle
icebp
dec
outsl
in
jmp
shll
outsl
sti
in
adcb
mov
sbb
jp
mov
cltd
push
repnz
mov
xchg
jge
sbb
leave
and
gs
and
push
fidivl
jo
add
mov
jnp
inc
jne
pop
lods
jmp
out
sub
gs
cmp
and
je
jnp
orb
leave
add
decl
dec
rcll
jno
aas
jle,pt
fs
rclb
hlt
loopne
mov
push
push
ficoms
or
sub
mov
and
dec
dec
sub
mov
andl
jg
call
ja
mov
scas
mov
jg
je
jb
movsl
scas
ficoml
ret
shrb
jne
add
ja
pop
test
and
sub
xor
popa
shrb
sbb
js
test
filds
pop
mov
aas
adc
xlat
mov
xor
jmp
add
pop
jns
pop
sbb
pop
lds
xchg
mov
fdivrp
sbb
rcrl
insl
pop
jmp
inc
fwait
mov
out
cmpsb
dec
xchg
inc
pop
out
jmp
dec
ret
or
scas
add
call
and
scas
add
popf
inc
lock
jns
jno
adc
fdivp
jae
testb
lcall
jmp
sbb
mov
cwtl
pop
sub
loopne
loopne
arpl
cli
sub
jae
fiadds
and
mov
daa
sbb
push
stc
jb
lock
add
jmp
adc
sbb
jl
orl
ss
dec
sahf
xchg
aaa
mov
sub
jnp
xlat
jge
sub
dec
push
or
mov
out
xchg
sub
and
or
xchg
repz
add
shrl
movsl
pushf
sub
int
adc
pop
rcrl
js
insl
ret
adc
insl
iret
xchg
pop
cmp
mov
psubq
cmp
jl
or
push
xor
sbbl
popf
jns
jmp
mov
push
push
xchg
gs
xchg
push
stos
cmpsl
aas
iret
sub
jns
into
pusha
loope
inc
jae
push
lahf
jo
mov
icebp
lds
pop
das
lock
mov
test
clc
jmp
iret
sbb
icebp
mov
xor
cli
dec
add
add
stos
xchg
add
fwait
call
xchg
inc
push
je
xchg
div
xchg
pop
pop
xor
stos
movsl
adc
push
jno
mov
sti
pop
jno
sbb
inc
loope
xchg
clc
adc
mov
dec
stos
sbb
sub
iret
sub
jo
stos
and
loop
mov
cmp
out
leave
lods
loopne
mov
aam
test
rep
js
and
subl
std
inc
push
sahf
push
push
lret
sbbl
mov
mov
scas
pop
dec
cmp
and
jle
rcpps
lock
sub
shlb
inc
mov
push
jle
cmp
repz
test
mov
adc
cwtl
cmpsl
nop
andl
xchg
sub
lds
xor
mov
lea
push
push
fcoml
ljmp
jmp
jle
or
add
into
popf
in
jnp
out
andb
dec
outsl
dec
xor
lret
daa
dec
jmp
scas
cmp
cld
sub
and
divb
movsl
shl
aam
sbb
sbb
xor
in
jne
dec
push
add
and
enter
dec
loop
jl
push
push
fcomip
sahf
sahf
mov
and
push
pop
inc
stos
or
adc
sub
rcrb
add
movsl
jmp
mov
push
les
test
lods
lock
ss
pmaddwd
dec
push
sub
imul
jmp
sbb
xchg
mov
stos
popa
inc
imul
mov
xor
cmp
xor
mov
daa
pop
mov
dec
pop
adc
fiadds
cwtl
jg
inc
or
xchg
test
mov
push
lods
jbe
adc
test
jbe
inc
jl
fsubl
int3
loopne
adc
mov
inc
mov
cmp
sbb
jnp
dec
cmp
cmp
xchg
sbb
jo
stc
addb
jns
lock
sbb
fbld
in
aam
dec
cmpsl
lcall
test
pop
cmp
popf
fs
stos
jmp
sbb
pop
lcall
sbb
rorb
add
sub
inc
leave
mov
movsl
jle
mov
out
mov
jl
aam
test
clc
mov
cmp
adc
xor
pop
xchg
das
in
mov
xchg
mov
aas
pop
fwait
sub
sahf
clc
ja
jmp
push
sbb
mov
test
dec
popf
pop
movsl
mov
rorl
pusha
inc
test
inc
ret
je
sub
jp
mov
add
addr16
loop
inc
mulb
add
mov
mov
outsb
xor
mov
pop
jnp
sub
push
push
sub
pusha
pop
jmp
xchg
js
and
daa
xchg
pop
inc
mov
add
mov
cmpsb
add
fistps
xor
adc
dec
fnstenv
mov
xchg
mov
jno
jns
pop
inc
test
cs
andl
jmp
xchg
les
cmp
call
mov
mov
and
aaa
pop
je
push
jbe
cmp
mov
adc
int3
jo
dec
ret
jl
jnp
add
sub
sub
or
dec
ret
cltd
lock
jno
pushf
out
faddp
xorb
add
sub
out
push
jne
pop
mov
pop
cwtl
sub
in
or
pop
jmp
push
sub
mov
or
pop
jge
mov
sub
push
dec
jo
sbb
jecxz
test
push
ror
fisttpl
sbb
sub
mov
dec
jle
rcrl
jmp
popf
sbb
jns
es
fs
cmp
xor
add
jb
dec
mov
mov
xor
mov
mov
sub
mov
inc
popf
sub
lock
pop
test
icebp
jg
sbb
adcb
dec
sti
pop
or
out
lock
xor
adc
mov
push
pop
inc
cmp
test
inc
add
mov
jl
aaa
sub
loop
mov
dec
xchg
aam
lock
pushf
mov
popa
lcall
dec
ss
and
popa
or
repz
js
movsb
pop
xchg
or
mov
jmp
jae
xor
outsb
add
enter
in
icebp
push
incb
insb
sbb
and
or
jge
inc
inc
xchg
jo
mov
ret
dec
lcall
push
cltd
test
jmp
inc
sub
push
loope
fdivrl
lea
stc
jl
rolb
scas
stos
nop
adc
dec
rclb
jecxz
cwtl
add
pop
lcall
inc
cmp
in
stos
adc
data16
mov
stos
mov
sahf
stos
fiaddl
stos
and
lcall
cmp
mov
xor
sahf
cltd
pop
lret
adc
or
cmp
pop
or
cli
cltd
mov
fmul
test
cltd
mov
imul
aad
loope
pop
inc
adc
cltd
jo
mov
xor
sarl
inc
out
xor
out
in
push
inc
sbb
xchg
xchg
adc
popf
xchg
cltd
das
std
sbb
inc
test
cltd
enter
stos
outsb
test
mov
add
cltd
and
lret
aas
pop
and
inc
cltd
cmp
lahf
xchg
cltd
incb
push
xor
rol
adc
xchg
sbb
mov
cltd
sbb
add
cs
arpl
pop
cwtl
loop
cltd
sub
pop
mov
xchg
xchg
push
jle
lret
shll
mov
push
push
jae
test
fwait
sbb
mov
pop
dec
lods
xchg
mov
and
cltd
lock
jecxz
adc
leave
cltd
cli
and
cmpb
mov
add
adc
ljmp
into
add
sbb
bound
test
cltd
or
push
stos
lea
pushf
sbb
cmp
pop
push
adc
negl
icebp
data16
loope
lea
push
pop
add
cmpsb
scas
cltd
stos
mov
imul
outsb
mov
lods
fdivs
out
push
xchg
test
das
fwait
cld
into
pusha
loope
mov
sbb
xchg
pusha
mov
cltd
int
fwait
or
fstp
mov
ficomps
aas
add
in
jmp
insl
dec
jge
mov
pop
std
jb
fwait
inc
cltd
mov
lcall
cltd
adc
jns
hlt
out
jne
fwait
arpl
mov
aaa
mov
ret
stos
cltd
icebp
jbe
out
jge
add
mov
scas
fstl
popf
mov
loopne
hlt
pop
mov
cmp
mov
cltd
imul
jns
cltd
ja
xchg
movsl
repz
jmp
icebp
jb
push
xchg
sarb
cltd
push
or
ret
rorb
dec
sub
jg
mov
test
jle
sub
push
or
scas
xchg
out
xchg
add
adc
std
adc
push
cltd
aam
repnz
dec
dec
mov
out
jle
add
je
sub
lret
mov
add
sti
sub
dec
push
adc
hlt
mov
lcall
adc
dec
rclb
jg
sub
test
push
aam
stos
fidivrs
mov
iret
cltd
inc
add
mov
sbb
pusha
mov
aam
popa
xchg
lea
mov
pop
jno
aaa
sbb
mov
es
jle
repz
sbb
push
xlat
stos
out
push
jns
mov
push
xor
les
sub
loope
or
cltd
and
jge
jp
and
outsl
out
jns
mov
and
mov
adc
in
sub
sbb
int
nop
inc
movsl
mov
out
ss
popf
sbb
push
xor
xchg
jo
jb
data16
mov
mov
xor
popa
stc
cltd
mov
or
dec
cltd
dec
repz
or
scas
cmp
push
aad
into
cmpsl
sbb
inc
mov
sbb
cltd
mov
cwtl
das
sbb
xlat
sarl
ds
cltd
sub
or
movsl
cltd
clc
push
cs
ffreep
pop
negb
xorb
mov
pop
test
push
outsl
cltd
in
add
pop
xchg
xchg
nop
xchg
inc
loopne
cmp
testb
enter
pop
arpl
adc
mov
jmp
mov
mov
adc
pop
cmpsl
jp
outsb
inc
roll
dec
lods
lock
mov
pop
inc
xchg
mov
aaa
xchg
ds
cltd
inc
push
dec
lea
out
sbb
and
sub
xlat
cld
arpl
sub
and
clc
out
xor
cltd
push
xchg
pop
mov
and
dec
in
les
repz
mov
jnp
mov
mov
add
cmc
mov
movsl
mov
cltd
repz
adc
pop
add
cli
fcoml
cmpsb
push
negl
in
jmp
cli
data16
imul
out
cltd
popf
clc
ljmp
mov
inc
adc
mov
cltd
adcb
inc
shlb
push
sub
cltd
xchg
fs
sub
adc
push
data16
cltd
pop
outsb
xor
das
cltd
sub
jmp
xor
fwait
adc
out
cld
and
dec
mov
adc
jge
cltd
pop
fwait
jmp
insb
cltd
mov
inc
sti
xor
add
lods
cltd
ss
mov
out
in
cltd
pop
leave
outsb
mov
xor
js
inc
je
aad
pop
adc
xchg
lds
aam
sbb
cltd
or
pop
repnz
ficomps
repz
xchg
ficompl
xchg
pop
in
cltd
xchg
cmp
fnstenv
or
lea
out
and
ljmp
jmp
popf
popa
testb
gs
adc
loopne
loope
mov
mov
clc
cmp
lds
xor
dec
movsl
sbb
add
into
and
mov
push
cltd
mov
jl
cmp
cltd
adc
xor
cltd
dec
mov
mov
fwait
sbb
dec
sub
push
or
int
cmpsl
dec
pop
push
repnz
call
and
add
xchg
cltd
adc
stos
imul
das
dec
mov
ficompl
inc
mov
cltd
fisubrs
stos
and
or
inc
scas
mov
cltd
jmp
pop
cmc
push
cmp
add
push
push
sbb
lcall
pop
mov
enter
addr16
cmp
ficomps
xor
push
pop
cwtl
and
sbb
sub
push
xor
cltd
lahf
je
push
dec
shll
fwait
mov
xchg
bswap
push
pop
cmpsl
pop
lea
les
adcl
xor
sbb
and
and
shrl
sbb
mov
ds
push
jmp
inc
and
cmpsl
add
dec
and
std
add
daa
cltd
xchg
mov
int3
cmpsl
cltd
sbb
aas
sahf
mov
inc
sub
mov
cmp
pop
in
cltd
fsts
inc
inc
test
or
mov
icebp
push
jle
in
je
fdivrl
mov
or
cltd
adc
xchg
cltd
mov
in
sbb
fdivrs
push
cltd
push
js
cli
cmc
int3
les
loop
jmp
add
cli
fcoml
jns
lahf
cltd
cmpsb
fucomi
add
aaa
cmp
mov
mov
xchg
cltd
out
mov
test
cltd
mov
in
push
cltd
sti
mov
sub
cmpsl
hlt
fwait
cmc
cmpsb
sbb
sbbb
shlb
xor
ds
cltd
dec
mov
xchg
and
fildl
cltd
ja
aam
cmovl
and
aad
mov
jnp
das
cmp
sti
or
push
cmp
mov
inc
mov
xor
jno
xor
inc
jns
push
adc
sub
pop
stc
xor
adc
ss
sub
sahf
mov
insl
add
jmp
pop
or
cmpsl
aas
gs
out
xor
cmp
pop
clc
inc
sbb
sbb
jns
push
mov
jno
test
xor
js
lea
or
sti
cltd
and
push
adc
arpl
cmp
sub
imul
fwait
sub
jge
imul
enter
out
mov
fdivrs
jmp
lds
xchg
adc
outsb
leave
insb
xchg
inc
int
cltd
lock
and
pop
inc
adc
sub
push
and
cwtl
cmc
fsubr
adc
xor
adc
sbb
jmp
mov
add
push
into
out
mov
jmp
xchg
aaa
outsl
add
dec
pusha
sbb
stos
xor
xor
xchg
cmpsl
jb
imul
xorb
fistps
cmp
lds
mov
push
mov
add
sbb
xchg
lret
sbb
jp
cmpsb
mov
and
sarl
pop
mov
fidivrs
add
inc
xchg
push
push
push
cmp
lods
sbb
stos
mov
loop
mov
jg
fldcw
dec
adc
jae
cmp
jb
imul
jmp
jg
movsl
lock
lds
inc
lret
ja
data16
sbb
jne
jno
mov
mov
int
jmp
in
aaa
cwtl
jns
push
inc
xchg
arpl
and
add
pop
add
inc
jae
inc
mov
lea
jecxz
adc
hlt
daa
sahf
cmp
lock
clc
or
mov
mov
add
cmc
divl
stos
loopne
sarb
pop
or
mov
mov
outsb
mov
leave
pop
pushf
iret
in
aaa
mov
sub
scas
out
orl
fisubl
int
es
mov
add
arpl
into
data16
aas
push
mov
mov
out
stos
push
pushf
mov
sti
xor
inc
jmp
negl
hlt
mov
mov
inc
mov
lock
ljmp
mov
sbb
pop
popf
movsb
cmp
bound
mov
loope
lock
pop
popl
shll
stc
jmp
popf
insb
int3
fldenv
negb
stos
adc
shr
int3
in
dec
pop
icebp
scas
mov
mov
movsb
sub
xchg
lahf
cmp
push
mov
je
xor
inc
loope
mov
incl
push
xor
into
decb
sub
insl
hlt
and
inc
testl
mov
jmp
fdivrs
push
sbb
push
mov
pusha
or
incb
sub
lds
into
sbb
cmp
xor
scas
jge
push
cmp
cltd
mov
inc
cmp
insb
add
sbbb
and
mov
call
outsl
repz
inc
adc
cltd
push
mov
mov
dec
push
sbb
and
ljmp
out
pop
xor
lea
mov
cmpsb
or
jle
out
adc
pop
dec
push
xor
sbb
scas
fs
imul
clc
sbb
fbld
sarl
cmpsb
mov
sbb
mov
sbb
and
in
cltd
test
insl
and
cltd
hlt
pop
jne
adc
xchg
rolb
cmp
xchg
xchg
sbb
jnp
mov
insb
dec
pop
sub
jge
push
sarl
inc
push
sbb
scas
movsb
out
and
pop
adc
and
fstpl
add
std
mov
and
jbe
xlat
data16
cmp
cltd
adc
icebp
test
adc
mov
adc
or
inc
pop
cltd
testb
outsl
dec
xor
cli
insb
cltd
lods
ja
push
int
push
mov
or
inc
aad
cmpsl
in
xchg
dec
aaa
subl
js
scas
insl
outsl
popf
loop
mov
mov
sub
cltd
jnp
lahf
xor
sbb
rcrb
dec
mov
mov
out
adc
jnp
sub
sbb
cltd
out
popa
mov
in
cli
mov
mov
xchg
hlt
in
sbbb
sub
std
and
cmp
scas
push
cltd
jnp
jl
jno
pop
in
cltd
sub
adc
addb
pop
jle
xor
rcrb
fnstenv
cltd
roll
sub
pusha
fiadds
cltd
add
cmpsb
ljmp
rorl
pushf
icebp
cltd
data16
sbb
mov
outsl
cltd
mov
icebp
mov
inc
loope
pop
cmp
sub
int3
and
inc
pop
cltd
outsl
jae
lcall
sbb
lret
je
add
into
jg
cltd
mov
mov
filds
lret
adc
stos
dec
pushf
mov
adc
push
enter
inc
pop
add
cmp
fiadds
ds
cmc
or
mov
mov
fdivs
jp
rcrl
loope
mov
jo
imul
xor
mov
out
cltd
icebp
mull
out
mov
outsl
mov
ret
inc
push
adc
lock
andl
mov
sub
mov
repnz
dec
call
jmp
sub
mov
movsl
inc
repnz
cltd
scas
test
lods
add
xlat
sbb
pop
mov
lock
xchg
je
cmpsl
xor
aad
aaa
mov
cltd
xor
testb
into
add
cltd
pop
scas
fistpll
pop
popa
adc
test
pop
pop
cltd
pop
in
insl
push
loopne
mov
rorl
jge
fs
insl
jmp
mov
cmpsb
xchg
xor
push
fnstcw
cltd
inc
movsb
lock
xor
mov
cwtl
stc
fsubs
adc
shll
push
cltd
out
addl
scas
sub
jecxz
imul
mov
hlt
or
cmpl
push
pushf
jmp
mov
neg
add
cmp
or
mov
jg
push
int
adc
repnz
xor
add
cmpsl
sarb
fiadds
int
push
push
mov
jne
jp
xlat
sbb
sub
int3
mov
outsb
or
fldcw
nop
and
jl
dec
and
hlt
stos
dec
cltd
mov
cmpsb
or
lods
xor
pop
les
fsts
sub
sub
mov
or
mov
mov
out
and
sti
push
xor
lea
cmpsl
mov
cltd
js
jge
inc
dec
mov
pop
mov
ret
sahf
xor
push
sbb
jl
sub
enter
push
mov
or
fistps
xchg
sub
pop
cmc
jno
out
sub
adc
cltd
lods
call
cmp
cltd
popa
cmp
pop
test
and
cmpsb
add
xchg
sarb
ret
cltd
inc
mov
jp
cltd
out
inc
cmp
adc
cmp
push
xchg
mov
repz
dec
push
cli
loop
sbb
inc
push
enter
out
stos
mov
in
mov
mov
xor
int3
mov
and
aaa
imul
adcb
mov
shr
adc
lcall
push
or
push
inc
or
fxch
cmpsb
test
xor
add
adc
add
enter
mov
add
jb
out
sar
pop
ret
dec
xchg
stc
sbb
push
adc
cwtl
ror
mov
push
shll
mov
aam
ds
mov
frstor
cmp
push
mov
stc
pop
fisttpl
out
mov
cltd
nop
test
scas
cltd
sub
push
pop
repz
jge
cltd
add
push
lcall
pop
jns
mov
sbb
and
ja
aam
mov
push
ds
jns
pop
cltd
sbb
add
adc
loopne
das
cmp
or
popa
adc
lds
sub
cltd
pop
outsb
xchg
mov
dec
fadd
aas
cltd
fildll
mov
cltd
and
outsb
sbb
in
fisubrs
movsl
mov
adc
rcll
mov
arpl
cmc
cmpsl
clc
ds
dec
and
jl
shlb
pop
sub
push
jb
repnz
xchg
stc
stos
call
pop
mov
jl
push
push
pop
push
jle
mov
fldt
sbb
stc
push
rcrl
dec
jecxz
nop
or
push
test
mov
push
setns
rclb
cltd
add
push
data16
cltd
rorb
nop
pusha
ret
cmp
cltd
call
shlb
cltd
loopne
pop
inc
push
inc
mov
and
sbb
jp
cmp
bound
cmp
hlt
pop
adc
test
subl
dec
mov
pop
icebp
adc
mov
and
cmpsl
lds
sbb
dec
cli
lods
dec
mov
cltd
fiadds
dec
inc
cltd
out
xchg
test
fcmove
nop
scas
icebp
or
in
dec
xchg
int3
scas
movsl
xor
xchg
mov
mov
push
cmp
adc
daa
cltd
roll
lock
or
in
fwait
mov
out
and
fs
cmpsb
in
in
xor
push
cltd
aam
test
jb
loop
sbbl
mov
lods
popw
or
fwait
mov
push
pop
adc
imul
add
in
push
push
or
nop
cltd
jge
fmuls
ret
cltd
jae
jbe
lahf
dec
xor
cltd
fimuls
adc
push
in
add
subl
in
icebp
cltd
xor
inc
mov
cmp
mov
pop
hlt
in
pop
dec
sbb
cmp
daa
jae
xchg
rcll
add
cltd
cmpl
cmp
and
rolb
xchg
jns
cmpsl
cltd
sbb
sub
lods
push
scas
insl
popa
pushf
repnz
fcompl
xchg
sub
cltd
xchg
lahf
cltd
imul
mov
rorl
jl
fwait
lcall
jns
sub
pop
rcr
push
add
cmpsl
pop
test
scas
sbb
mov
popa
push
mov
ficoml
xor
ret
mov
mov
fstpl
repz
and
jge
cwtl
xchg
pop
shll
test
mov
stos
cltd
popf
mov
xchg
call
pop
mov
lea
mov
js
and
pop
jmp
or
mov
test
scas
mov
insb
pop
lods
icebp
fsubrl
xorl
aam
sub
xchg
mov
mov
pushf
cmp
push
mov
into
loope
cmp
cmp
inc
and
or
mul
fnsave
adc
push
int3
test
or
stc
cli
jmp
jbe
lods
pop
add
test
jg
jbe
cmp
push
movsb
jae
aaa
sbb
mov
test
cmp
mov
sbb
fwait
mov
popf
push
into
lock
add
ffreep
insb
jmp
sbb
loope
mov
popf
dec
add
mov
in
push
fwait
xor
iret
fimuls
cld
xchg
cs
fs
mov
inc
xchg
mov
xor
xchg
int3
pop
xorb
jmp
movsl
fwait
int3
lock
mov
xor
aas
dec
jg
test
addr16
nop
bound
popf
and
lods
cwtl
mov
sub
scas
outsl
mov
or
mov
xchg
sub
inc
data16
xor
and
cs
ret
cs
imul
and
jmp
rol
dec
pop
in
pop
imul
jns
mov
jp
es
fmul
outsl
fistpll
sarl
or
and
mov
adc
clc
daa
pushf
mov
sbb
jl
add
rcr
and
cmpsb
inc
xchg
push
loop
jbe
or
movsl
lret
out
mov
leave
cwtl
es
jmp
pushf
arpl
mov
dec
jmp
dec
loopne
pop
stos
sti
int3
ja
sbb
jmp
cmp
pop
xchg
fs
mov
out
shrl
test
cmp
inc
divl
and
negl
fwait
push
adc
push
mov
push
loope
lret
mov
cli
lods
add
mov
in
sti
nop
or
and
pop
or
lods
popa
jmp
jg
push
xchg
insb
jne
rorb
adc
xchg
idivl
pop
push
sub
sub
sbb
ja
ja
mov
ds
lcall
insb
mov
bound
jno
mov
jge
mov
xchg
jp
loopne
arpl
ds
push
shl
stos
pop
ss
test
pop
js
cmpsl
jmp
aam
inc
pop
fbstp
ficomps
push
push
and
int
mov
addr16
decl
aaa
adc
fidivrl
add
stos
cmp
js
pop
dec
mov
xor
xlat
aam
mov
scas
int3
leave
pop
add
arpl
dec
cmp
xchg
xor
movsl
mov
push
mov
jmp
xchg
inc
lret
movsb
inc
sbb
data16
stos
and
sbb
dec
pop
jmp
push
jns
jmp
popf
sbb
jp
sub
les
xchg
mov
xchg
enter
cwtl
fwait
and
insb
mov
sub
lret
or
sahf
daa
xchg
adc
es
js
scas
xlat
and
cmp
xchg
test
int3
push
loopne
or
and
lret
cmpsb
movsb
xchg
int
stos
push
sarl
dec
into
xchg
stos
arpl
int
cltd
dec
std
and
rorb
sbb
jmp
aam
cld
jmp
subb
xchg
pushf
pop
ljmp
adc
out
sub
stos
sbb
lods
add
rcrb
cmp
sbb
jg
jmp
out
cltd
loope
aad
test
iret
dec
cltd
fcmovbe
into
mov
jae
or
jg
je
add
push
mov
lea
mov
cwtd
dec
push
clc
fmul
js
cltd
aam
mov
jnp
shll
xchg
cld
cltd
jne
sti
push
push
inc
test
cltd
pop
xlat
and
add
cmpsb
adc
push
mov
or
inc
fildll
dec
cmp
pusha
hlt
push
out
push
mov
inc
pushf
fdivs
icebp
jmp
cltd
or
iret
enter
ja
ss
popa
shlb
xchg
push
pop
mov
pusha
lret
xor
in
push
outsl
pop
or
das
and
push
pop
rorl
mov
ljmp
imul
jns
pop
scas
fnstenv
and
mov
cltd
mov
mov
mov
xor
or
lods
cltd
jbe
sbb
fwait
out
in
popa
pop
inc
dec
subl
and
xchg
loop
lds
shrl
or
xchg
inc
cltd
mov
fldt
fdivrl
add
cltd
clc
rol
mov
jecxz
cmpsl
inc
pop
xchg
fsubl
sub
or
pop
sub
jb
xchg
lds
cltd
ja
adc
mov
mov
pop
lods
fnstsw
jg
pop
cmc
enter
push
sbb
ret
pusha
dec
or
mov
cmp
in
cltd
cli
mov
fstpl
cmpsb
popa
decl
jno
pop
and
dec
pop
mov
xor
mul
cmp
outsb
int3
xchg
int
movsl
adc
cmp
inc
mov
dec
pop
aad
gs
xor
sub
lock
bound
fldenv
dec
js
mov
pop
je
or
cltd
loopne
rorl
mov
rorl
sbb
fnstsw
add
les
adc
stos
pop
bound
lods
xchg
mov
xor
and
cmp
xchg
inc
inc
jle
loopne
shrl
sub
in
xchg
dec
ror
icebp
sub
dec
adc
jbe
pop
js
imul
cmp
movsb
mov
andb
iret
cltd
mov
push
scas
and
rcrb
xchg
xchg
push
std
fisubrl
dec
cwtl
fabs
and
aam
sub
cmp
cltd
cmp
and
shll
leave
push
sub
and
in
es
test
and
fs
pop
inc
or
xor
fcompl
outsb
cmp
push
fwait
inc
push
addb
inc
stc
les
sub
and
es
popf
xchg
and
stos
outsl
mov
xor
xchg
or
xchg
or
push
add
gs
leave
cltd
or
dec
or
push
jle
inc
stos
adc
sbb
insl
shll
cltd
insb
shrd
sub
xchg
repnz
les
jl
pop
jp
inc
test
rcrb
xchg
or
std
jmp
mov
and
sarl
cbtw
inc
xchg
push
xchg
shl
je
cltd
mov
push
fnstsw
and
shr
cmpsl
mov
xchg
or
xchg
sti
test
xchg
into
sub
cmpsl
pop
sbb
xor
stos
mov
int
mov
shlb
lahf
stos
test
push
inc
or
ror
push
test
xchg
aad
xor
cltd
mov
push
dec
adc
mov
push
in
ja
push
aam
sub
jmp
adc
jb
pop
mov
imul
shll
cltd
inc
popaw
dec
into
fwait
in
out
rorb
cltd
adc
cmc
leave
daa
and
addr16
pop
xlat
popf
mov
loopne
rorl
inc
add
mov
xor
jle
add
cltd
aam
sti
iret
cld
lock
pushf
xchg
fwait
shrb
mov
xchg
cltd
xor
xor
frstor
rorl
and
sbb
test
sub
xchg
push
jns
rorb
shlb
fistpl
shll
mov
out
cltd
pop
or
xor
in
out
in
sbb
mov
xchg
ret
add
gs
jbe
and
mov
movsl
shr
adc
push
daa
dec
mov
outsl
jae
divl
push
vpacksswb
push
sbb
pop
aam
cmp
out
test
mov
mov
and
ja
add
dec
pop
and
les
fcompl
sahf
pusha
fsub
icebp
ja
rsm
iret
test
sbb
sub
sti
fisttpll
pop
xor
jge
test
and
sub
add
pop
lock
pop
jno
stos
pop
xchg
mov
rcll
cmpsl
jmp
cld
push
cwtl
pop
and
outsl
and
movsl
sbb
loopne
push
push
adc
gs
mov
sahf
adc
jmp
out
mov
rolb
adc
and
orb
sar
cmc
test
rcrb
leave
bnd
lock
mov
adc
sahf
push
fldcw
sbb
in
jg
mov
sti
idivl
insb
or
stos
and
and
shlb
push
ret
mov
nop
loopne
cmp
addl
rcrb
rcr
lret
shll
jp
out
dec
xchg
outsl
cs
push
mov
movsl
orl
mov
scas
mov
addb
push
lods
dec
ret
ficoml
fdiv
mov
je
push
ret
add
insb
in
pushf
pop
mov
adc
and
icebp
out
push
inc
fwait
imul
jno
push
and
jmp
loopne
cwtl
mov
mov
fwait
add
cli
adc
dec
adc
add
cmpsl
sub
ja
fiadds
push
adc
push
dec
stos
push
inc
push
cmp
dec
xchg
enter
setle
sub
cmpsl
ljmp
and
das
mov
dec
cmp
fsubs
dec
add
fdivs
jbe
fwait
lock
jg
test
addr16
cmp
stos
cmp
jmp
mov
inc
add
lret
xchg
jmp
pop
adc
cwtl
mov
adc
fldl
rclb
scas
inc
lret
movsl
and
mov
popf
xor
cmp
add
lahf
mov
fsubrl
bound
das
mov
jmp
pushf
push
cmp
iret
push
and
jae
xor
pop
push
imul
mov
popl
push
ljmp
inc
ret
mov
mov
mov
add
icebp
mov
inc
inc
inc
sbb
in
mov
and
lods
cmp
mov
mov
sarl
lea
fsubrp
pop
mov
and
push
in
jg
ret
and
sbb
stc
fxch
xor
inc
decl
test
sub
mov
cltd
mov
loope
enter
ss
inc
pop
mov
xchg
mov
push
mov
lds
mov
mov
int
inc
aaa
xchg
call
sbb
in
cmp
dec
clc
pop
imul
or
cmp
xchg
mov
jge
jne
pushf
sub
insb
sub
fdivrs
push
fdivl
dec
fistpl
test
sbb
insl
in
mov
inc
in
jno
cli
and
imull
sub
stos
ja
movsl
addr16
fmulp
repz
int3
neg
bound
push
pop
mov
sub
and
inc
fidivs
gs
xor
lock
cmp
inc
add
mov
sub
movsl
pop
test
dec
pop
push
jmp
loopne
push
mov
ds
or
dec
and
xchg
xor
mov
pop
mov
fistl
gs
outsl
cwtl
push
xor
push
cwtl
movsb
jmp
fildl
add
sbb
int3
ds
push
nop
cld
adc
jno
rcrb
sub
popa
mov
dec
jb,pn
mov
hlt
mov
rcll
idiv
cmp
mov
or
fwait
push
stos
jmp
testb
pop
jae
mov
cmp
bound
sbb
out
in
ret
inc
dec
inc
and
add
in
push
fwait
xor
adc
bound
push
loopne
and
and
scas
test
cmp
sub
loope
jmp
icebp
sub
mov
shlb
lock
and
sahf
hlt
xlat
scas
cmp
cld
sub
int3
andb
and
xchg
mov
jne
in
jmp
cltd
jg
add
jmp
jl
xor
test
bound
xor
hlt
decl
cwtl
iret
in
sbb
push
js
pop
jmp
adcl
fcmovne
ja
into
mull
pusha
adcb
out
ljmp
stos
addr16
add
cmp
loop
inc
pushf
icebp
inc
and
mov
inc
jo
mov
adc
rcl
dec
lods
xor
mov
sbb
das
lcall
lcall
pop
or
adcb
jmp
test
int
adc
sbb
sbb
lret
movsl
lahf
xor
mov
cmp
xchg
rol
xchg
mov
clc
cld
dec
test
lock
gs
pop
cmp
add
add
pop
or
jae
and
jle
lcall
stos
stos
int
shrl
inc
adc
wbinvd
sub
cltd
add
js
xor
mov
loop
inc
or
cmpl
sbb
push
jns
and
lret
cmp
sub
cltd
fstl
pushf
pop
xor
cltd
lahf
mov
cmp
fwait
shlb
iret
xchg
scas
loope
insl
lock
imul
sbb
fcomi
or
clc
loop
sub
les
loopne
fs
ss
xchg
mov
push
lcall
push
cltd
insb
test
jle
jae
rorb
repz
test
push
mov
mov
movsb
adc
push
xor
dec
cmpsl
enter
outsl
or
jmp
mov
pop
dec
jns
mov
in
lock
fwait
movsb
loope
dec
adc
sti
inc
mov
xchg
fcomps
aaa
cltd
sub
jnp
test
fidivrs
sahf
lret
inc
cltd
push
leave
ss
fcomps
les
cmp
and
push
mov
sbb
loopne
andl
xlat
mov
pop
sub
pop
push
test
test
add
rclb
nop
mov
mov
cmc
outsb
xchg
mov
pusha
in
sbb
sti
mov
test
ds
les
out
cltd
and
xor
insl
jnp
dec
cltd
iret
jns
cmp
mov
call
cltd
pop
adc
test
cltd
cmpsl
xchg
sahf
test
inc
sub
lret
jae,pt
movsl
inc
test
std
jo
sbb
adc
xchg
lods
cwtl
fxtract
sub
mov
cltd
jge
leave
cmp
mov
call
icebp
stos
or
mov
lcall
movb
add
mov
mov
or
jmp
pushf
loop
cltd
lret
sub
inc
jbe
inc
sbb
adc
scas
and
scas
jno
pop
mov
shll
and
inc
sti
pop
daa
cltd
or
adcb
xchg
divl
ret
popf
cltd
sub
call
fwait
bound
mov
shlb
jg
push
nop
mov
aad
or
cltd
push
lock
xchg
mov
cltd
mov
cli
push
call
sub
cmpsb
roll
sarb
fldcw
xchg
xor
dec
mov
loopne
xchg
pushl
dec
mov
arpl
aas
pop
loope
xor
inc
out
loopne
es
scas
xchg
jbe
imul
add
negb
std
notl
cltd
or
cltd
adc
mov
sub
xchg
jnp
cltd
jno
jo
mov
int3
push
stos
sub
sti
or
in
pop
lods
sbb
sub
pushf
mov
push
cld
ja
negl
js
or
inc
icebp
mov
jb
push
out
cltd
push
push
mov
sti
stc
lds
repz
rcrl
in
dec
cltd
dec
test
lods
and
addr16
incl
cltd
push
lret
sub
jmp
cltd
pavgb
fiaddl
imul
pop
pop
in
movsl
mov
xorb
jae
sub
add
int3
repz
fisubrs
xorb
pusha
cld
rclb
lcall
add
aad
sbb
rorl
cltd
iret
pop
jp
adc
sub
fidivl
cld
mov
cltd
dec
push
cs
cltd
rclb
dec
jbe
adc
out
cltd
xor
test
inc
cmc
sbb
mov
xchg
fwait
cmp
testl
cltd
popa
push
inc
mov
cltd
sub
xchg
ss
shr
pop
or
faddl
lock
or
lret
jecxz
int
das
cmpsl
xlat
jo
adc
sbb
mov
jp
jnp
data16
and
inc
cmp
outsb
cltd
jge
adc
fwait
xor
inc
sub
add
loopne
aaa
cltd
popf
fwait
push
add
shrl
sbb
addr16
lcall
pop
sub
addb
ja
or
dec
aas
imul
xchg
dec
cltd
int3
call
add
inc
mov
movsl
or
imul
daa
lea
fmul
sub
push
cmpsl
icebp
outsl
xor
push
repnz
lret
xchg
ficomps
xchg
jns
aaa
jo
mov
negb
mov
inc
and
pop
fimuls
outsl
js
into
std
jae
mov
sbb
movsl
sarb
push
or
lcall
fisubrs
lock
cld
testb
adc
aaa
adc
pop
int3
rcrl
mov
lret
shlb
adcb
clc
pop
mov
mov
mov
cltd
push
xchg
daa
jge
out
and
test
sbb
scas
cwtl
cmc
cli
sub
add
sbb
mov
cltd
lock
xor
sub
mov
cltd
insl
pop
call
mov
ret
loopne
fwait
mov
sub
fstpt
les
data16
int3
leave
fidivrs
lea
pushf
std
popf
cltd
pop
test
lods
mov
jo
sar
push
mov
push
xchg
mov
or
mov
rcrb
or
shlb
pop
cltd
push
std
mov
pushf
sub
pop
cltd
ret
inc
pop
jmp
cmpsl
mov
scas
mov
mov
stos
movsl
add
adc
xchg
jmp
es
pop
cltd
test
lods
mov
sbb
lahf
and
pop
cltd
insl
je
cmp
jne
jo
out
sahf
push
xlat
push
jge
std
pop
pop
test
mov
notb
pop
dec
sub
xchg
pusha
mov
xor
cmpb
jge
push
mov
push
sahf
cltd
insl
mov
cmp
fs
sbb
cltd
sub
add
xchg
les
stos
fldl2t
or
mov
fwait
sarb
mov
negb
pop
fidivs
or
xor
xchg
mov
dec
repz
xchg
cmp
cltd
mov
sarl
nop
jl
stos
fcomps
mul
nop
mov
push
and
popa
pushl
sub
push
pop
dec
sbb
jp
andl
adc
fnstenv
xchg
movsb
dec
inc
jo
stos
test
mov
test
add
fstpl
leave
in
fistpl
cltd
mov
mov
pop
inc
push
jge
push
mov
scas
dec
dec
sti
ds
icebp
arpl
sbb
sub
enter
adc
jge
cmpsl
mov
sti
cltd
inc
ljmp
fwait
mov
mov
loop
pop
mov
out
int3
pop
cltd
jne
repz
lea
mov
movb
lahf
mov
adc
jmp
cltd
and
dec
cltd
xchg
repnz
mov
inc
mov
mov
scas
cmp
fwait
jmp
pop
lods
dec
and
pop
gs
xor
mov
in
ds
mov
push
jl
movsb
xchg
mov
or
roll
pop
and
push
and
scas
adc
xor
mov
xor
dec
dec
inc
cmp
mov
sbbl
adc
movsl
cltd
sbb
hlt
inc
jno
ja
or
sub
push
xchg
dec
sbb
mov
cmpsl
push
imul
in
inc
aam
mov
push
fnstcw
mov
push
leave
sbb
or
test
insl
mov
mov
lods
cltd
push
fmul
pop
and
sarb
add
sbb
sbb
pop
inc
imul
mov
pushf
maxps
imul
mov
and
inc
sub
adcl
lret
loope
sbb
pop
push
cmp
test
lcall
arpl
scas
xchg
push
cltd
push
mov
fldenv
sub
lods
rcll
lahf
mov
pop
cmpsl
lock
jp
pop
jp
xlat
jg
jnp
push
scas
jge
jg
lds
lret
cmp
movsl
rclb
jge
nop
daa
xchg
pop
add
mov
aas
mov
pop
insb
fcomi
mov
sahf
push
sub
adc
jle
fdivl
hlt
mov
mov
inc
mov
cmc
rcl
sbb
lods
push
out
fmulp
cmc
push
orl
mov
jmp
cmpsb
in
shrl
mov
sub
mov
pop
push
test
dec
cmp
adc
mov
inc
mov
fnsave
je
dec
xchg
test
cltd
scas
lock
dec
lods
in
sti
andb
mov
repnz
add
out
mov
adc
lret
mov
cmp
ss
adc
push
xlat
lods
inc
es
iret
cmp
mov
pusha
flds
ret
mov
fwait
jb
outsl
sti
mov
xchg
test
xchg
pop
imul
xchg
mov
push
into
xor
mov
lock
lea
movsb
jo
fdiv
dec
cmp
pusha
cmp
pop
cmp
ror
add
dec
enter
jmp
sti
imul
scas
add
jb
repz
add
cli
dec
inc
add
mov
inc
pusha
jmp
or
popa
xchg
jno
mov
mov
jmp
test
add
movsb
push
add
mov
mov
or
in
popa
push
mov
aam
mov
or
pop
mov
movl
mov
pop
mov
test
xor
lds
sbb
fmuls
xor
jb
ss
and
out
xchg
mulb
inc
and
rol
movsb
jmp
arpl
lret
xor
leave
dec
sub
jg
jae
inc
add
xchg
xchg
push
cmp
xor
loopne
xor
lcall
and
cmp
jmp
and
ret
dec
adc
jl
cmpsl
test
movsb
mov
imul
shrl
jmp
xor
fistps
sahf
mov
in
mov
push
in
cltd
add
adc
pop
mov
mov
jmp
pop
aas
popa
gs
ds
xlat
add
aas
inc
sbb
inc
leave
int
lret
sbb
xchg
clc
arpl
sub
aam
mov
pushf
cmp
mov
mov
pop
sub
iret
in
xor
lret
addr16
sbb
std
add
xchg
es
loop
int
ja
cmc
mov
jnp
cmp
cwtd
in
ror
mov
mov
mov
sarb
cmpsl
add
pop
shr
mov
test
xor
jl
mov
xchg
cmp
cwtl
stos
jmp
lret
dec
cmc
ffree
inc
cmp
dec
lock
push
fsubl
add
ret
aas
and
in
in
push
jp
fistl
shr
movsb
cmpl
dec
push
stos
test
sub
aam
ss
xor
mov
push
xchg
xor
in
stos
mov
pop
jmp
sbb
mov
movsl
iret
fnstenv
jbe
pop
sbb
mov
mov
test
leave
pop
inc
jmp
xor
repz
jmp
mov
mov
push
mov
movsl
inc
ret
or
mov
xchg
inc
or
mov
ficoms
adc
sbb
cld
jmp
xorl
fsubrl
ret
xchg
pusha
shlb
ljmp
fidivl
clc
jae
jp,pt
iret
arpl
test
jno
roll
mov
int
test
xor
xchg
and
push
xor
movsb
push
stc
sub
test
jg
jmp
repz
pop
in
jmp
jno
adc
lahf
stos
loopne
mov
fimuls
adc
xor
ljmp
imul
and
mov
jmp
rcll
lea
push
sti
bound
sub
insl
ljmp
outsb
mov
cwtl
aaa
push
js
arpl
adc
push
add
es
mov
xchg
loope
mov
icebp
dec
pop
stos
lods
ret
popa
sub
mov
and
out
js
cmpsb
jmp
outsb
scas
mov
push
iret
mov
add
add
subl
out
adc
adc
adc
jecxz
cmpsl
jmp
pushf
pop
sahf
imul
xor
mov
int3
mov
dec
cmp
cltd
adc
inc
call
call
lock
inc
adc
mov
out
insl
pushf
fnstcw
or
in
mov
adc
fmuls
adc
insl
rorb
mov
jno
test
inc
jmp
adc
cmp
jno
pop
arpl
ljmp
lret
add
sub
dec
add
jmp
mov
jp
xchg
sbb
pop
mov
xchg
inc
cmpsb
stc
mov
jmp
dec
sub
inc
popf
dec
sbb
sarb
jl
xchg
mov
jmp
adc
call
stos
sar
mov
outsl
cmpsl
out
pop
sar
lret
stos
or
aaa
push
imul
mov
jmp
imul
adc
frstor
in
jb
or
enter
and
xlat
mov
pop
mov
sub
jmp
ja
cltd
in
xor
cmpsb
cltd
sub
ficompl
push
mov
pop
push
cld
add
scas
inc
mov
jle
mov
insl
mov
cwtl
lock
adc
movsb
sbb
dec
adc
sub
cltd
jbe
cmp
iret
mov
sub
and
sar
mov
jge
mov
lahf
mov
sbb
loope
pop
and
push
xchg
push
test
adc
cltd
shll
adc
cltd
pop
test
out
jl
add
and
fwait
pop
xor
cltd
pop
xchg
cmpsb
mov
pushl
cltd
xor
mov
mov
xlat
add
pusha
fcmovne
leave
sub
cltd
ljmp
dec
pop
or
xchg
adc
or
cltd
fiadds
mov
add
and
cmp
aas
mov
inc
or
andb
jnp
inc
mov
fwait
cmp
dec
decb
pop
stc
scas
push
cltd
pop
pusha
inc
jne
cmp
cmp
cmp
jl
loopew
xor
stc
in
lcall
or
addr16
enter
push
in
rcrl
inc
out
orb
pop
insl
sub
cltd
jae
aaa
sahf
sbb
cmpsb
gs
push
loop
ret
add
pop
pop
add
jmp
outsb
push
mov
add
mov
pop
cmp
in
fists
ds
jg
inc
jp
sahf
cmc
mov
push
add
and
hlt
pop
adc
cmp
popf
cltd
add
cli
mov
mov
mov
in
push
in
iret
outsb
mov
or
xor
neg
cltd
mov
mov
adc
sbb
mov
fwait
push
mov
add
andl
in
int3
push
fistps
jp
cltd
scas
cmp
sub
sub
mov
inc
inc
aad
inc
insb
cltd
movsl
es
adc
das
fwait
push
decl
int
push
leave
lock
add
stos
sbb
cs
adc
dec
adc
mov
loope
cwtl
repnz
outsl
sbb
mov
lds
cltd
clc
mov
sbb
cltd
xchg
pop
mov
xlat
sti
andb
mov
inc
roll
push
cmc
sbb
sti
cltd
pop
inc
push
pop
rorl
cltd
test
xor
cmp
cs
sbb
cmpsb
bts
lcall
pop
jecxz
cltd
jmp
add
dec
int
push
mov
mov
xchg
mov
popf
int3
mov
loopne
ret
pop
cltd
imul
iret
fs
daa
arpl
push
push
xor
pushf
scas
sub
sahf
imul
push
jg
and
cltd
dec
cmc
push
adc
cltd
pop
xchg
jb
scas
dec
push
fistl
cmpsb
push
outsb
scas
into
sbb
pop
out
pop
cmp
fisubrs
or
lods
dec
ja
addb
out
addr16
cltd
push
cmpl
or
pop
fldl
pop
cmpl
cs
sarb
and
mov
sub
std
push
fwait
jg
loope
pop
cs
dec
mov
jecxz
mov
mov
sbb
sti
mov
mov
lret
sbb
jp
fstpl
mov
push
and
and
cmp
lret
insl
js
push
cltd
cmpsb
out
sbb
ss
gs
mov
mov
clc
mov
inc
mov
mov
and
or
data16
mov
sub
cmc
sarl
xchg
mov
addr16
out
sarl
cltd
imul
fdivl
dec
push
test
or
ret
mov
push
jne
cltd
add
inc
addb
dec
fldl2e
cltd
dec
iret
or
or
push
jbe
shrb
add
jmp
push
xor
aad
imul
popa
in
xchg
ficomps
push
mov
mov
movsl
and
into
pop
rol
mov
jns
and
mov
pop
cmp
jmp
clc
out
mov
mov
outsb
lret
cmpsl
fisubrs
inc
mov
outsl
mov
shl
idivb
psubw
roll
call
pop
mov
jae
jl
iret
fiadds
and
ljmp
adc
mov
mov
mov
iret
sub
test
add
mov
adc
jmp
jge
fnsave
out
or
lods
jae
in
rcll
dec
shrb
xchg
adcb
mov
jmp
fwait
sub
mov
jns
repz
hlt
dec
test
sarb
xor
jmp
jmp
adc
cmp
mov
lds
jmp
mov
jno
mov
mov
loopne
adc
mov
rolb
cltd
int3
or
loope
inc
cwtl
and
in
fucomip
hlt
mov
adc
fsubr
inc
push
jne
stos
idivl
sbb
mov
ja
or
or
fdivrs
mov
pushf
insb
popa
pop
stos
scas
push
cmp
sbb
dec
pop
push
mov
imul
sub
mov
push
cmp
or
adc
popf
lods
aaa
ficomps
lcall
mov
jmp
push
pop
xor
mov
aam
nop
push
data16
repnz
lock
jmp
sub
xchg
jns
sub
dec
mov
lock
outsb
sbb
ss
cmp
mov
push
test
iret
jg
loope
adc
cmp
fwait
stos
sbb
sti
mov
xchg
repz
imul
loopne
push
addl
stos
adc
sbb
into
popf
repnz
into
and
and
stos
jb
mov
sbb
sbb
adc
leave
adcb
mov
adc
lds
jecxz
adc
dec
testb
sbb
xor
stos
pop
hlt
lretw
inc
fnstcw
outsl
mov
push
or
arpl
xor
mov
int3
clc
std
pop
mov
xchg
in
and
inc
inc
std
jl
ret
lods
mov
stos
or
loope,pt
push
pop
xchg
pusha
lods
and
daa
cmp
and
rcrb
int
jl
push
jge
pop
bound
popl
lods
lret
and
jmp
popa
pop
cld
pop
int3
cmpsl
jg
push
into
movb
or
sub
loopne
mov
and
cmp
gs
mov
lahf
adc
xchg
and
xchg
cltd
ret
dec
push
jbe
mov
pop
frstor
cmp
test
shll
in
ljmp
push
ret
push
and
dec
sbb
lds
shlb
mov
addr16
cltd
mov
rcr
out
das
xchg
cmc
pop
scas
stc
loope
repz
fs
and
xlat
pop
arpl
mov
shlb
or
cmpsl
cmc
ficompl
dec
mov
add
ret
ficoms
jle
js
xchg
lret
dec
fld
sahf
sbb
xchg
sbb
sub
and
inc
cmp
cltd
push
lock
xor
pop
sti
lea
cltd
adc
push
mov
subl
pusha
xorl
lock
fbstp
sti
les
xchg
mov
test
jae
sbb
cmp
insl
test
mov
sti
cwtl
out
mov
cld
jnp
mov
cltd
aaa
add
lock
cltd
divb
sbb
xor
cltd
ja
sub
sbb
pusha
into
xor
mov
fisubs
adc
pop
mov
push
adc
lods
shlb
inc
cmc
mov
xchg
in
adc
cltd
in
push
test
cltd
xor
jg
pusha
xchg
cltd
shrb
dec
cmp
mov
dec
inc
inc
sbb
push
out
pop
mov
je
test
aam
mov
pop
cltd
adcb
cltd
arpl
or
cltd
add
lods
mov
fwait
jne
dec
pop
iret
aas
and
mov
xor
pop
inc
push
push
cld
cltd
xchg
imul
push
roll
fldenv
or
inc
add
push
sub
stc
aaa
push
cltd
inc
push
imul
scas
sahf
jp
sti
and
add
jns
or
xor
push
pop
loopne
cmpsb
adc
pop
scas
xchg
sub
stos
jb
jmp
xor
mov
insl
sti
xor
addl
ja
int
das
ficoml
jmp
sub
push
pop
jnp
cltd
shl
les
call
movsb
mov
inc
cmp
cltd
lock
adc
cltd
jae
shlb
pop
pop
xor
sbb
mov
and
fwait
fwait
hlt
popa
jp
push
insb
push
mov
jno
dec
popf
mov
imul
cmpsb
sahf
cld
fsubs
push
xor
ss
test
mov
push
aaa
fwait
sub
or
adc
mov
lds
mov
inc
into
cltd
outsb
test
pop
neg
mov
inc
mov
fs
jge
push
mov
mov
pusha
fnstenv
cltd
dec
aas
insb
rcr
enter
mov
cld
pop
push
clc
xlat
sbb
sbb
jp
push
leave
testl
pop
mov
add
repnz
sbb
incl
push
ds
pop
ja
xchg
sahf
icebp
movntq
mov
ficoms
xchg
cmp
xor
stos
cltd
out
mov
cmpb
or
imulb
mov
inc
sahf
cmpsl
pop
sti
pop
cltd
loop
dec
movsb
mov
xor
out
sbb
mov
or
dec
nop
pop
cltd
sbb
jle
lds
inc
cmpsl
shlb
fstps
mov
in
sub
mov
jmp
pop
scas
jns
test
pop
cmc
xor
cltd
cwtl
mov
mov
cltd
lds
xchg
ficompl
pop
sarb
subb
jmp
and
xchg
mov
mov
int3
add
xlat
pop
jecxz
xor
sbb
loopne
sti
aam
gs
stc
hlt
jle
pusha
test
pop
loopne
int
cmp
push
cltd
mov
iret
mov
cltd
enter
mov
mov
push
cltd
and
ja
push
dec
inc
stos
cltd
arpl
mov
dec
and
jecxz
sbbb
mov
das
adc
leave
out
push
cltd
sub
pop
lahf
cld
cltd
xchg
push
dec
or
pushf
xlat
iret
adc
repnz
lods
imul
inc
out
into
jbe
add
push
addb
lock
imul
loope
jns
out
popf
push
mov
fstl
and
bound
cmc
cltd
push
cmp
cmp
std
xor
fistps
rcl
imul
pop
push
fsubrs
or
sub
stos
cmp
mov
add
and
mov
mov
jb
shlb
clc
pop
xor
push
add
movsl
jge
dec
inc
cmpsl
inc
je
xor
icebp
add
cltd
int3
std
arpl
stc
pop
pushf
movsl
enter
mov
loopne
lods
das
cltd
dec
xor
insb
stos
adc
pop
cmpsl
sbb
stc
loop
sub
ficompl
mov
push
scas
cmpb
cltd
cmp
adc
aaa
cmpsb
shll
xor
jbe
cwtl
pop
loop
cltd
punpckldq
add
sarl
sahf
or
je
aaa
mov
mov
cld
lret
sbb
cltd
push
outsb
imul
mov
cltd
mov
out
ficompl
les
mov
popf
add
dec
xchg
jns
sub
repz
push
cltd
es
ljmp
aad
dec
imul
stc
xor
fcomps
adcb
pop
cltd
dec
cmp
mov
or
mov
sbb
dec
out
or
das
or
addr16
xchg
ljmp
or
pop
jmp
out
sbb
fisttps
mov
adc
in
cltd
mov
pop
and
mov
fstpl
cltd
mov
push
cmovbe
decl
sbb
dec
or
pop
push
popa
dec
or
outsb
xor
cmp
mov
cltd
int
adc
adc
loop
pop
sbb
imul
iret
dec
adcl
cltd
popf
lea
je
pop
imul
adc
shlb
xor
add
fldenv
mov
mov
push
mov
cltd
test
push
cltd
dec
es
or
lret
subb
mov
outsl
fwait
leave
xchg
cltd
sbb
jmp
add
inc
mov
dec
mov
xchg
sub
nop
push
cwtl
ficoml
cltd
dec
mov
call
lahf
leave
mov
add
in
xor
shrb
push
jg
loopne
lcall
fsubrs
leave
shlb
mov
dec
insl
xchg
cmp
mov
nop
lret
pop
test
mov
fwait
inc
mov
cmp
ja
pop
mov
pop
mov
and
pop
push
cltd
jge
nop
mov
inc
sub
das
sbb
aaa
in
adc
mov
cmc
loope
xlat
xor
xor
mov
test
shll
or
cltd
aas
push
push
in
fscale
enter
inc
sbb
lahf
jecxz
pop
jp
adcb
cs
cltd
sub
dec
cltd
mov
movups
inc
adc
inc
fxch
mov
cltd
inc
stos
and
shrb
pusha
cltd
xchg
cmpsb
divb
ss
cltd
add
mov
outsb
cltd
cwtl
bound
jb
pushf
les
sbb
cmpsb
cmpsl
mov
mov
push
in
hlt
adc
scas
mov
stc
out
and
xchg
cltd
orb
push
inc
pushf
mov
adc
stc
and
movsb
cltd
inc
inc
pop
and
sbb
adc
aad
jbe
inc
cltd
push
mov
and
leave
out
and
lahf
cmc
pushf
and
or
xor
insl
push
jae
xchg
jge
sub
sub
sub
lret
insl
cltd
sbb
or
bound
repnz
pop
cltd
push
sub
pop
pop
outsb
jl
loop
lcall
add
jno
sahf
icebp
push
nop
cltd
mov
test
cmpsl
mov
and
add
in
push
inc
aam
cltd
inc
mov
sub
lods
cmpsl
or
loopne
movsb
rorb
adc
or
in
mov
push
cltd
in
inc
lahf
xchg
and
int3
setne
cltd
push
dec
into
popa
and
mov
inc
pop
frndint
xor
scas
pop
roll
xchg
fisubl
jae
or
mov
inc
mov
pushf
mov
test
js
call
pop
aad
mov
das
xchg
xchg
fwait
and
jae
jmp
fldcw
shl
inc
xchg
lds
mov
cmp
lea
xor
adc
lods
and
fwait
push
imul
sub
and
cltd
add
pop
sbb
xor
insb
or
std
fnsave
push
pushf
xor
dec
pop
and
xchg
and
push
cltd
push
or
je
mov
push
xchg
push
mov
fstpt
dec
sub
cltd
jl
sti
jg
xlat
lods
xor
ds
dec
gs
or
mov
sahf
call
repnz
icebp
xchg
imul
cmpsl
in
xchg
loope
dec
xchg
adc
inc
fsts
add
and
jae
repnz
arpl
cltd
out
add
xchg
cmpb
lret
and
xchg
push
pop
mov
jns
cltd
mov
aas
push
andb
rclb
mov
cmpsl
mov
mov
cmpsb
sub
jmp
mov
push
fstpt
push
bound
cmc
add
das
popa
cmp
cltd
jge
cmp
lods
test
ffree
mov
jecxz
or
lret
cltd
pop
and
orb
rcr
mov
or
cltd
lahf
insb
inc
aam
test
in
adc
into
jl
cltd
cmp
mov
lahf
or
cmp
xor
cltd
mov
mov
clc
aad
cltd
mov
xchg
xchg
cltd
mov
in
faddl
addr16
cltd
mov
lds
fcmovne
xor
cmpsb
xor
cltd
movsl
jns
cmc
cmp
rclb
in
fbld
jl
mov
cltd
loopne
xor
roll
cltd
out
ficompl
mov
addr16
imulb
push
cltd
pop
nop
daa
test
mov
repz
or
cltd
mov
xchg
popa
lds
sub
sbb
mov
dec
jnp
xchg
adc
mov
scas
test
or
cltd
cld
in
mov
insl
push
dec
subl
loop
popa
xchg
pop
les
jle
cli
or
xchg
jp
and
into
mov
std
mov
out
or
sbb
loope
sarb
cltd
divl
xor
test
cltd
push
xchg
xorl
inc
or
inc
push
push
push
shrb
xchg
jb
fs
inc
and
fdivl
loop
cltd
inc
xor
clc
ficompl
test
mov
lret
pop
xor
call
das
or
rcl
add
push
bound
int3
arpl
dec
cltd
dec
mov
stos
call
out
xor
repnz
adc
scas
pop
cmpsb
or
aam
gs
sbb
into
cmp
pop
mov
mov
xchg
lcall
mov
inc
jle
call
clc
lret
xchg
aaa
negl
lahf
pop
push
adc
sub
lahf
aaa
testl
fwait
jmp
mov
jmp
sub
mov
jg
pop
les
and
jns
or
xchg
xor
fwait
mov
mov
or
xor
and
push
mov
and
xor
inc
aas
out
pusha
std
xor
gs
call
inc
cli
or
je
xor
push
dec
and
sub
pop
movsl
push
push
jmp
dec
cmp
cmp
inc
sbb
inc
push
stos
loop
iret
xchg
jb
bound
js
mov
jae
idivb
jmp
cld
add
mov
pop
cltd
jbe
push
int
dec
inc
jg
and
pop
cmp
dec
pop
popf
jg
call
pop
loopne
adc
mov
inc
jmp
mov
mov
in
cmp
ja
jge
xchg
fstps
in
jne
int3
int
rcl
repnz
in
outsl
mov
adc
sbb
fidivrs
pop
or
scas
clc
inc
cmp
inc
xchg
dec
and
push
dec
sarb
sub
andb
call
fs
mov
dec
sub
mov
fldenv
mov
inc
add
mov
pop
inc
js
xor
daa
rol
imul
sbb
test
fwait
jnp
dec
xorl
lret
jmp
adc
pop
mov
mov
cltd
jne
arpl
xor
jp,pn
and
pop
lock
inc
mov
jmp
and
call
inc
fiaddl
popf
jmp
outsb
xor
scas
pushf
aad
out
andb
insb
push
push
fwait
inc
adc
mov
jae
jmp
dec
insb
popa
add
and
push
cmp
mov
cmp
cmp
inc
xchg
aad
call
xchg
sub
shll
add
and
ftst
ljmp
sub
shlb
rol
mov
cmovbe
cmp
mov
dec
mov
or
lret
outsl
sub
push
dec
push
mov
dec
fldt
rolb
mov
and
sub
das
sbb
cwtl
mov
aaa
test
out
jno
xlat
leave
nop
cltd
imul
push
pop
inc
cmp
or
cmc
push
jns
les
nop
xlat
push
adc
jae
xor
or
dec
ficoms
dec
xchg
leave
cmc
xchg
stos
fisttpll
arpl
sbb
or
mov
leave
cmp
pushf
cltd
sub
push
out
adc
sbb
or
repnz
test
and
adc
cmc
mov
out
shll
and
mov
fwait
fwait
jae
nop
ja
icebp
and
sub
mov
arpl
fldcw
mov
adc
jmp
xlat
and
cmpsb
mov
push
cmc
push
fs
cltd
push
jl
hlt
ss
inc
mov
lea
fadds
mov
cld
out
mov
cmp
lea
xlat
cmc
ret
mov
mov
mov
rcrb
cltd
adc
fidivs
pop
pushf
xchg
pop
sar
testb
sarl
subb
stos
fidivrs
push
inc
decl
gs
lahf
or
lea
mov
push
fsub
outsl
loop
add
pop
loopne
ljmp
cmpl
loopne
jbe
inc
fs
movsl
mov
rcrb
push
mov
std
xchg
out
and
int3
int
hlt
adc
jns
push
push
sbb
and
xchg
mov
iret
mov
aad
push
sbbl
jmp
in
movsl
cmp
insl
pop
data16
jae
sbbl
pop
and
stos
test
cmp
mov
xchg
pushf
test
loop
leave
mov
pop
jnp
ja
fwait
imul
andb
mov
sub
imul
ljmp
pushf
pop
push
test
sub
sub
push
nop
or
pop
cmpsb
lock
mov
push
and
int
mov
mov
pop
mov
inc
mov
and
int3
out
movsl
adc
jmp
xor
rcrb
imul
out
jne
mov
loop
fisubs
leave
movsl
repz
mov
cmpsb
sub
xor
loopne
push
adc
enter
mov
clc
mov
sub
fs
loopne
dec
add
inc
sub
inc
add
movsl
pop
jmp
mov
push
mov
jno
js
mov
inc
and
inc
jecxz
pop
inc
xchg
mov
xor
jle
cmp
mov
sbb
push
xchg
sbb
out
push
dec
cmp
inc
mov
repz
stc
push
fmul
dec
xor
scas
pop
adc
pop
dec
lock
sub
daa
sub
or
popf
ror
subb
ljmp
imul
cmpl
jbe
or
pop
dec
sbb
xchg
aam
sti
les
mov
lsl
mov
mov
xchg
in
scas
sub
lcall
cmp
mov
sbbl
scas
cmp
setge
sbb
and
cmpsl
mov
cld
rcrl
sarb
pop
jmp
je
outsl
jo
cmp
jg
mov
sub
pop
sub
mov
lock
add
loopne
shrb
cltd
xchg
pop
or
adc
int3
js
arpl
xchg
into
in
xor
ljmp
mov
push
icebp
inc
test
stc
jmp
xchg
sub
icebp
mov
popf
iret
and
std
add
mov
xor
mov
bound
lea
iret
cmpsl
icebp
stc
rcrb
adc
and
lcall
stos
aas
jae
shlb
into
outsl
pop
enter
pop
cmp
movsl
lock
pusha
mov
adc
mov
sbb
push
dec
icebp
mov
jb
ljmp
xchg
add
jo
jmp
pop
in
stc
ds
jmp
add
movsl
inc
aad
sarl
xchg
out
pop
das
test
push
lahf
cld
out
into
insb
xchg
test
cbtw
add
js
sbb
es
daa
jmp
sbb
lock
or
mov
mov
ret
pusha
insb
aam
loop
mov
sbb
jmp
outsl
ja
pop
ja
jg
cwtl
ficoms
add
push
pop
and
sarb
out
mov
mov
mov
push
lds
outsl
mov
stc
pushf
call
aaa
mov
or
jmp
insl
loopne
cmp
aam
sub
arpl
sub
pop
orl
jg
mov
inc
aad
mov
clc
pushl
call
das
cmc
loope
or
pop
cmpsb
cmp
jecxz
cld
mov
into
cltd
mov
popa
mov
aad
adcl
ljmp
out
sbb
clc
jbe
inc
insb
mov
xor
inc
aas
fistpll
dec
push
push
cli
push
gs
mov
jmp
negl
mov
push
dec
fdecstp
jnp
mov
fnstsw
jns
scas
jp
push
in
add
iret
and
orl
loopne
lock
cmc
pop
jb
test
xchg
or
or
stos
clc
sub
mov
xor
cwtl
insb
aaa
imul
sub
mov
mov
adc
mov
leave
dec
xor
jg
movsb
loopne
cwtl
adc
into
lret
or
push
popl
pop
mov
lock
leave
pop
hlt
sbb
lods
aas
inc
fwait
sub
lock
and
hlt
mov
lret
repnz
sub
mov
mov
adc
push
jle
xor
aas
rcrb
xor
ror
mov
jmp
out
call
in
add
cmp
push
lret
lcall
ss
inc
fcoms
mov
mov
call
cmp
int
ljmp
sbb
jmp
jb
subb
mov
ljmp
mov
jg
and
mov
hlt
adc
fisubs
ds
testb
cmpsb
dec
jle
rolb
out
pop
fisubrs
pop
sahf
push
jecxz
test
lea
lock
call
xchg
sbb
jmp
nop
icebp
nop
lods
jae
jno
jbe
mov
les
ljmp
xchg
filds
sahf
sub
jle
cli
jmp
mov
adcb
aam
and
push
jg
xor
ret
and
jb
cmpsb
and
dec
sub
cmc
arpl
jecxz
movb
and
or
xchg
adc
lret
adc
mov
lret
icebp
inc
cmp
insb
inc
imul
inc
jmp
lds
aam
adc
inc
cmpb
mov
jne
lock
lret
inc
mov
inc
mov
and
insb
sub
aam
mov
mov
cwtl
cmp
cmpl
fsub
int3
cli
jecxz
dec
faddl
sbb
sub
mov
xor
inc
jmp
pop
or
dec
stos
sub
xor
fcmovu
inc
pop
leave
inc
jmp
dec
insb
int3
popf
les
mov
aaa
gs
cli
test
mov
jmp
jmp
cmp
adc
dec
cwtl
imul
mov
push
jae
mov
jmp
mov
sub
repz
sbb
sbb
negl
fstl
dec
or
push
and
out
icebp
pusha
dec
sub
or
outsb
inc
mov
xchg
stos
xchg
sbb
sub
add
popf
lret
push
add
test
cmpsw
mov
fmuls
inc
pop
stos
cmp
inc
cmp
push
js
mov
sbb
out
mov
lcall
xor
sbb
das
data16
sub
into
fucom
xor
sub
inc
pushf
test
dec
jmp
sbb
enter
pusha
jb
stos
add
int3
in
mov
cwtl
pop
mov
push
jb
push
pushf
lock
push
sahf
and
aas
into
sbb
gs
mov
jno
lahf
mov
in
daa
stos
int3
mov
xchg
daa
aas
adc
jno
adc
mov
mov
jmp
or
lods
mov
adc
xchg
push
adc
mov
in
add
popf
pop
mov
cmp
xchg
call
psubb
xor
push
pop
mov
insb
pop
adc
dec
xchg
push
test
scas
mov
repz
test
or
pop
ja
cmpb
rolb
fstpt
popf
sti
mov
negl
push
stc
inc
push
inc
jl
jne
inc
nop
sub
mov
in
adc
mov
or
push
push
lods
sarl
jle
rorl
push
sub
mov
xor
push
aad
pusha
mov
loopne
sub
sbb
filds
lods
test
cwtl
jnp
mov
cli
popa
inc
cld
cltd
jmp
mov
add
pop
mov
and
jae
and
dec
in
xchg
xchg
mov
push
popf
pop
inc
arpl
jmp
add
sbb
ret
outsl
idiv
inc
cltd
jge
lock
je
mov
mov
sub
pushf
xchg
mov
call
sbb
ret
fstp
pop
stos
sub
jmp
call
lods
or
std
sbb
loopne
push
sub
and
mov
dec
push
arpl
shl
xor
arpl
cmpsl
ret
test
btr
mov
cmp
lods
loopne
enter
ret
loopne
lock
xchg
mov
push
mov
sbb
xlat
xor
xlat
lods
jge
jbe
add
fmul
jno
mov
test
mov
mov
subl
popf
jae
push
imul
dec
loop
popf
out
fldcw
movsl
rol
fsubrl
xchg
nop
mov
xorl
xchg
xchg
push
fldl
or
mov
mov
ret
or
mov
or
adc
outsl
cmpb
jae
xchg
rorl
pop
lcall
in
js
xor
sbb
cmpsl
mov
stos
mov
stos
mov
aas
push
or
pusha
cmp
xor
inc
adc
pop
sub
mov
cwtl
jo
movsb
mov
and
cld
je
lock
jg
sbb
int3
into
mov
dec
in
data16
mov
push
loope
or
fwait
or
loopne
jmp
adc
pop
push
push
lret
dec
in
inc
sbb
mov
arpl
cmp
adc
jg
es
int
stos
mov
jge
sub
dec
cwtl
jmp
lods
jmp
mov
xchg
sahf
push
push
mov
adc
xchg
in
jmp
outsb
dec
je
adc
std
pusha
mov
mov
into
jbe
sbb
pop
sarb
popa
in
lret
cmc
dec
test
xor
insb
pusha
fldcw
shlb
jmp
jecxz
add
aam
or
pop
es
sbb
sbb
pop
sub
test
gs
jmp
and
xor
loopne
jmp
xchg
mov
lret
fisubl
imul
mov
lcall
mulb
lods
jge
or
pop
leave
dec
jmp
rorl
mov
dec
push
xchg
aam
jo
jnp
das
xchg
add
bound
lds
ret
jmp
mov
jnp
or
fldenv
mov
inc
out
inc
mov
ret
in
in
mov
inc
clc
inc
sti
lods
hlt
mov
jnp
push
mov
jmp
or
mov
xor
cs
add
add
inc
xchg
or
dec
mov
inc
pushf
pop
cmp
imul
and
pop
mov
pop
cmp
fisttps
cmpsb
push
out
bound
iret
mov
fists
add
sbb
in
inc
mov
mov
cs
pop
cld
leave
cltd
or
push
cmp
push
jo
iret
jle
aas
lock
shrb
loopne
das
dec
shlb
imul
push
sbb
sbb
jae
add
in
adc
pop
xor
shlb
sub
push
adc
and
loope
fwait
movsl
and
jmp
je
mov
adc
negl
jae
sbb
pop
aas
mov
shrb
mov
pop
or
cmpsb
mov
gs
scas
jae
test
sub
inc
sbb
imul
sub
adc
push
mov
test
out
adc
sbb
leave
xchg
sbb
xchg
and
xchg
gs
mov
jl
movsl
test
fmulp
sub
dec
xorb
cltd
mov
not
arpl
andb
jno
lods
sub
outsl
orb
into
idivb
jae
xchg
fildl
jge
int
gs
test
dec
jp
fstpl
pushf
hlt
mov
and
sub
jmp
pop
sub
scas
out
xor
cmovbe
inc
insl
inc
pop
rolb
in
lock
lahf
jecxz
jno
sub
sub
add
pushl
jecxz
mov
js
and
insb
rol
cwtl
dec
lret
jbe
rolb
lock
sbb
fcomip
inc
add
push
aam
imull
cmp
cmp
push
sbb
xor
mov
stos
stos
aam
sbb
jmp
repnz
lock
fwait
push
pop
ds
pop
rclb
cmp
sarb
or
imul
repnz
int3
inc
dec
loope
fdivrs
cmp
stos
mov
add
imul
xchg
enter
fsts
sbb
pop
arpl
mov
push
roll
jno
adc
xlat
cmp
sub
jl
bswap
push
pop
data16
int3
int3
jp
out
dec
test
dec
in
sub
jmp
mulb
fwait
cmc
jno
cmpsb
jbe
xchg
ljmp
lret
or
xchg
mov
cmc
fimull
push
loopne
jmp
jg
fs
jge
mov
lcall
lock
xchg
push
negl
sbb
fwait
add
or
addr16
sbb
movsb
idivb
mov
jl
scas
cmpsb
add
inc
out
and
jmp
outsl
pop
mov
mov
push
mov
popf
test
lock
test
add
mov
add
lds
push
sub
fsubrl
sub
or
and
mov
adc
mov
jo
lcall
imul
xchg
pop
rol
mov
push
or
mov
int3
ljmp
iret
fimuls
into
dec
cs
idivb
stos
xor
inc
les
rcll
outsl
in
shlb
outsb
push
sub
inc
cmpl
pop
mov
fbstp
cli
sbb
mov
push
icebp
mov
cmp
adc
test
scas
fsubr
jmp
mov
push
pop
adc
jno
ret
dec
pop
cmc
and
jg
aam
fsubr
lds
lock
pop
pop
xchg
xor
mov
lahf
sub
les
lret
push
nop
lahf
adc
sub
orb
sbb
push
jmp
mov
pop
mov
cmp
imul
mov
stos
push
iret
leave
popf
aas
rol
cltd
lods
jo
fs
int3
and
pop
sbb
xor
xchg
sarb
pop
es
dec
popa
lcall
mov
aaa
mov
movsb
mov
es
bound
cmp
dec
pushf
movsb
inc
mov
xor
mov
mov
inc
iret
sub
jmp
xor
mov
mov
test
pop
sub
push
and
sbb
cltd
push
xor
sbb
fdivr
test
pushf
sbb
push
lret
lods
fsubs
push
push
pusha
pop
and
xchg
addr16
mov
shr
aaa
repnz
push
mov
mov
das
add
cmp
scas
pop
lock
xchg
je
mov
jae
sub
mov
jmp
insl
les
arpl
add
lock
mov
jmp
jle
sbb
cmp
rclb
outsl
int3
stos
mov
aaa
into
lds
and
sub
and
gs
xchg
rorl
stos
mov
adc
fstp
movsl
fsubrl
es
stos
jns
and
and
inc
mov
pop
xor
test
pop
adc
and
ret
jmp
dec
adc
sub
xor
clc
xchg
insl
cmp
int
stos
pop
inc
adc
sbb
cmp
mov
imul
fs
pop
movsl
or
mov
int3
or
mov
or
sub
mov
inc
jge
adc
fidivs
pop
push
lock
fucomip
in
pop
cmp
stos
stos
mov
dec
loop
inc
fimuls
in
push
mov
cwtl
cmp
push
adc
lock
mov
jbe
bound
movsb
sbb
into
mov
ja
mov
roll
ds
cmc
and
aad
lret
and
mov
fwait
jno
sti
cld
aaa
std
ljmp
mov
mov
mov
mov
pop
pusha
mov
lock
jae
mov
stc
or
adc
lret
mov
jb
fwait
dec
mov
and
push
jmp
mov
xlat
mov
sbb
nop
mov
ret
xchg
xchg
pop
andl
jmp
sub
push
in
out
lret
imul
jo
xchg
fxch
pop
dec
xchg
cmp
inc
insl
lcall
lods
pusha
jmp
sub
icebp
jb
add
pop
add
jmp
push
call
lods
arpl
sahf
arpl
or
movsb
outsb
hlt
in
inc
adcb
pop
xor
and
sub
mov
xchg
outsl
push
pop
mov
clc
icebp
mov
inc
cmp
in
mov
push
aaa
loopne
cmpsl
push
in
jmp
sbbb
fisttpll
cmc
in
mov
xchg
jne
ds
mov
ret
imulb
xorb
out
and
das
orl
insl
out
imul
fwait
mov
cmp
ja
pop
outsb
or
pop
sbb
loop
dec
out
shll
jbe
jecxz
or
lods
dec
or
daa
mov
cltd
pop
xchg
rcrl
cmpsl
cwtl
xchg
loopne
jg
adcb
mov
and
scas
pop
sbb
rclb
mov
pop
sbb
sbb
das
cld
mov
rcr
push
loopne
jge
cltd
and
pop
jp
test
or
jae
or
pop
icebp
sub
and
jnp
dec
cmp
mov
into
sbb
cltd
jg
out
das
popf
add
fisubrs
cmpsb
movsl
cltd
add
and
outsl
cltd
js
fwait
aam
aad
sub
xor
xor
push
and
lret
cmp
mov
imul
inc
mov
jecxz
cltd
inc
jne
and
dec
push
cltd
inc
fistpl
mov
in
pop
sahf
add
cltd
int
inc
lcall
fisttpl
mov
sbb
xchg
test
pop
lea
lcall
ss
mov
pop
out
cs
mov
in
xor
mov
jne
rcrb
aas
scas
mov
je
xchg
sbb
mov
lret
cld
cmp
lods
cmp
sub
shlb
add
aad
jg
cltd
into
add
repnz
cmc
enter
test
xchg
dec
xor
fs
cltd
pushf
addb
add
jo
jne
sub
out
cmpsl
mov
push
mov
ffreep
mov
add
inc
mov
dec
xchg
cltd
mov
sbb
cltd
ja
mov
out
adc
sbb
dec
rcrl
pop
cmpsl
das
mov
pop
push
adc
cltd
int3
adc
adc
push
xchg
cltd
lret
jp
loopne
and
cltd
pop
movsb
xchg
jnp
lahf
aas
cltd
ret
xchg
mov
dec
sbb
aam
test
ret
sahf
jp
cltd
push
pop
jno
adc
xchg
cltd
or
add
sub
mov
fwait
or
in
lds
xchg
leave
daa
idivl
jb
or
dec
icebp
mov
push
jae
sbbb
cltd
sbb
push
pop
shll
daa
out
pop
xchg
jle
cltd
xchg
rcr
sub
sub
sbb
mov
xchg
push
sbbl
mov
jge
cmpsb
test
imul
inc
cmpsl
jmp
movsb
aas
mov
imul
mov
mov
stos
lods
adc
add
test
pop
bound
addr16
add
adc
notl
xor
mov
jmp
pop
or
sbb
fnstenv
cltd
mov
dec
scas
and
movsb
cltd
pop
in
cli
or
cltd
pop
in
xchg
pushf
sbb
stos
cltd
and
in
xor
lret
cmpsl
push
out
inc
mov
push
cltd
call
ret
jle
cltd
sub
push
aad
xchg
pop
cmp
push
pop
insl
sub
pusha
adc
mov
adc
lcall
cltd
sbb
popa
push
lods
jne
mov
sub
mov
push
mov
les
idivb
xchg
pushf
push
ss
hlt
daa
and
xchg
cli
test
mov
shll
cltd
fwait
cmp
jae
pop
cmpsl
bound
and
imul
test
push
std
sub
inc
out
inc
push
jge
scas
mov
pop
xchg
jp
lcall
xchg
sahf
cltd
sti
loope
js
xchg
stos
out
mov
or
cld
inc
cltd
nop
pusha
dec
rorl
clc
test
cltd
ljmp
fs
xchg
mov
fwait
ds
jns
sub
ja
gs
sub
ret
test
cltd
arpl
or
cmc
test
mov
sbb
clc
lret
and
pop
fs
mov
cltd
dec
sti
push
jg
pop
in
imul
jo
pop
mov
push
push
icebp
xor
mov
shlb
ret
out
ja
xor
fwait
iret
mov
les
movsl
ficompl
jge
add
rcrb
cmp
in
int3
sub
pop
or
inc
ficoms
inc
cmp
lods
ror
cltd
inc
mov
scas
push
cli
mov
outsb
jbe
lcall
popf
sahf
call
mov
mov
aam
loope
in
mov
push
cltd
push
sahf
adc
cltd
dec
inc
jbe
rorl
jge
jg
stos
inc
xchg
ret
or
sub
adc
push
test
cltd
sbb
mov
cwtl
push
fwait
add
xchg
je
adc
shll
xchg
cltd
outsl
in
loope
or
mov
push
out
cltd
std
shrl
cltd
add
adc
cltd
xchg
pop
push
dec
dec
aas
imul
push
aaa
adc
cmc
scas
test
imul
insl
mov
jns
test
xchg
xchg
jecxz
add
pop
pushf
cltd
leavew
pop
push
sahf
stc
push
out
xor
fdiv
cltd
sub
adc
out
std
aas
xor
lcall
call
and
cli
repz
pop
push
adc
int3
mov
data16
out
sahf
jmp
fstps
or
cmp
cltd
dec
testb
pop
cmc
lds
incb
sub
fstpl
lea
add
rol
pop
inc
test
sbb
lds
pop
cmp
push
or
push
stos
sbb
cltd
xor
and
or
cltd
cs
jb
fwait
test
xchg
cmp
push
cmp
push
and
ja
sbb
test
xchg
mov
cwtl
repz
inc
inc
cltd
mov
dec
pop
push
insb
insl
int3
cltd
and
out
push
sti
cltd
xchg
sub
fsubrl
adc
test
or
xchg
mov
std
dec
pop
ror
popa
es
outsl
sub
xchg
cltd
sub
repnz
scas
fidivrs
mov
test
adc
shlb
repz
and
mov
cltd
ret
jbe
jmp
sbb
stc
or
imul
add
sbb
and
pop
adc
push
mov
mov
pop
movsb
sub
xchg
push
into
mov
push
cwtl
std
and
or
cmp
aam
cmpsl
push
sub
ja
outsb
imul
ficoms
mov
roll
ljmp
les
jmp
outsb
sub
ljmp
or
xchg
dec
test
cltd
sbb
pop
cmpsl
sahf
sbb
es
arpl
mov
cmpsl
cltd
out
out
push
jmp
adc
pop
pop
jb
push
xor
lcall
push
nop
add
sub
fldt
xor
fcompl
loope
and
scas
cltd
cmc
out
sub
adc
dec
or
or
adc
lret
mov
nop
pop
adc
arpl
mov
cmp
in
push
inc
mov
and
pop
sbb
add
dec
inc
mov
pop
jnp
push
jg
mov
test
push
pop
std
rorb
mov
fxch
arpl
inc
les
mov
mov
pop
addr16
fmulp
push
mov
sbb
jae
mov
aas
aaa
outsl
daa
pop
xchg
imul
in
rcr
ret
sub
loopne
sbb
mov
mov
jp
xchg
push
call
arpl
xchg
sbb
and
xchg
mov
jmp
les
add
int
aaa
xchg
lea
and
xlat
dec
test
psubd
cmp
jp
shlb
rolb
addr16
loope
dec
sbb
mov
cmp
lcall
insb
bound
andb
xchg
mov
sbb
inc
scas
pop
mov
divl
sbb
push
iret
push
push
and
das
or
xchg
aam
shlw
jle
mov
pop
fdivl
push
cmp
js
stos
fcomps
fwait
aas
adc
pop
imul
fs
pop
mov
rcrb
adcb
jae
stos
mov
adc
pusha
inc
jmp
popf
dec
xchg
or
fdivl
and
fcompl
jae
mov
out
js
jecxz
cwtl
call
cltd
lahf
std
cld
and
fwait
mov
iret
push
jnp
xchg
xor
adc
insl
ret
arpl
jl
xchg
loopne
cs
fwait
lods
sbb
loopne
push
fwait
inc
xor
lcall
notl
int3
test
pop
add
sti
push
cltd
mov
dec
imul
andl
push
cltd
add
push
cltd
cmp
adc
pop
daa
movsl
andl
cwtl
lret
sti
mov
das
lahf
cltd
fwait
add
adc
scas
and
pop
testl
add
push
push
push
aad
jmp
scas
scas
push
and
ret
xchg
add
hlt
enter
gs
cltd
aas
push
adc
es
sbb
mov
jns
sub
fwait
jnp
xor
loop
cltd
pop
pop
inc
addl
or
movsl
repz
add
or
jb
imul
sbb
push
fcoml
movsl
and
loopne
hlt
add
xchg
mov
rcrb
and
lahf
arpl
dec
dec
lds
mov
int
mov
cltd
dec
popa
mov
lea
test
fstps
fsts
dec
cltd
mov
cwtl
push
inc
in
cltd
xchg
lock
scas
sub
out
lods
mov
push
imull
mov
push
pusha
ljmp
in
cltd
in
outsb
mov
hlt
jge
dec
ret
jecxz
lods
and
mov
push
dec
mov
in
mov
dec
fisttpll
cwtl
pop
cltd
cmpl
fidivs
aam
adc
pop
sbb
jo
rorb
fstps
ljmp
imul
repz
adc
fwait
cltd
jl
loope
jge
mov
mov
pop
or
jmp
arpl
daa
mov
loope
mov
pop
ss
stos
andl
std
xchg
repnz
aad
ret
mov
adcl
aam
cmpsb
adc
ret
mov
mov
stos
inc
pop
sbb
pop
fidivrs
out
outsl
testb
int3
pop
push
cmpsl
loopne
lock
xor
pop
add
jo
push
scas
and
push
lea
xlat
sbb
mov
mov
cmp
insb
add
repz
pushf
ret
push
xchg
pusha
xorb
enter
cmp
cmp
pop
mov
mov
pop
into
jle
negl
jae
mov
mov
aaa
adc
pop
jae
loope
dec
jmp
mov
cmp
adc
or
je
jne
lcall
cs
jb
jne
cmp
les
data16
test
push
push
pushf
jo
jns
stos
dec
idivb
ret
sub
neg
and
dec
jmp
js
push
inc
mov
data16
out
dec
das
dec
out
ret
test
addr16
lret
cltd
mov
lahf
insb
pop
movsb
subl
popf
ret
jno
insb
pop
pop
inc
iret
lds
stos
or
scas
push
and
ja
lock
sub
dec
push
xor
mul
or
shrl
ret
pop
xchg
pop
cmp
cs
test
cltd
sbb
mov
pop
iret
xchg
inc
repz
stc
add
cmp
addr16
cmp
into
loopne
push
and
jmp
mov
aad
jmp
mov
cmp
sbb
mov
cmp
xchg
pavgb
pop
sti
jmp
pop
inc
repz
ret
cmp
imul
sbb
pushf
aam
and
sbb
mov
into
xchg
mov
into
mov
sbb
in
call
jle
mov
adc
lea
sbb
sub
xchg
aas
inc
in
push
dec
push
iret
mov
cmp
cmp
or
inc
and
or
xor
mov
mov
jmp
out
xchg
jo
mov
scas
sbb
and
lods
repnz
movsb
sti
mov
mov
fst
jle
orb
ret
sarb
mov
push
mov
mov
out
stos
and
lret
lods
add
clc
and
stos
jmp
sbb
sbb
push
rorb
push
int3
or
sub
imul
dec
sub
and
iret
dec
add
xorb
cli
jb
mov
mov
adc
mov
xor
insl
jmp
outsb
and
lret
test
jg
arpl
sub
cmpsb
push
cmpsl
pop
loop
jmp
cmp
rolb
decl
dec
je
jle
and
arpl
lret
or
ss
rcll
mov
mov
popa
sbb
loope
sub
jmpw
or
leave
popf
push
push
mov
push
ret
mov
std
popa
ja
and
jmp
icebp
mov
add
sub
mov
cmpsb
push
inc
jmp
push
push
stos
popa
sbb
pop
pop
or
loope
sub
jge
inc
sub
xchg
or
mov
inc
xchg
mov
cltd
mov
les
cltd
cmc
repnz
scas
subl
mov
lea
lcall
push
push
jns
xor
pop
cltd
aam
xchg
in
mov
push
test
push
sahf
in
gs
or
data16
iret
mov
cltd
cmc
insl
mov
lods
jg
je
int
fs
rcrb
in
adc
sbbb
xchg
aad
cltd
xor
out
fsubl
mov
mov
mov
pusha
roll
lds
arpl
add
push
sahf
fwait
cmp
ficomps
mov
xorl
push
xchg
sarb
cltd
aam
mov
mov
pop
pop
pop
lea
insb
or
mov
cwtl
and
sbb
push
xchg
dec
pop
cltd
sbb
add
mov
pusha
cmp
push
dec
aas
clc
or
xchg
fmull
pop
inc
cltd
lret
lock
adc
push
cltd
push
push
shrl
mov
xor
data16
mov
movsl
movsb
mov
loopne
pop
pop
jge
or
imul
xchg
cltd
xchg
test
xchg
push
mov
in
and
jo
inc
sub
dec
cld
aam
jnp
cltd
es
int
pop
mov
cltd
add
aaa
sub
xchg
stc
scas
jnp
or
popf
cmp
pushf
dec
xchg
mov
cltd
adc
xchg
inc
jne
loope
sub
push
ss
sbb
sub
jo
cltd
std
dec
in
push
enter
aam
inc
jae
addr16
jne
loop
lods
push
sub
xchg
lahf
cltd
lcall
rcrl
loop
cmp
xchg
jecxz
xor
xchg
orb
cltd
jne
nop
sahf
sbb
or
xor
jae
xor
cltd
or
out
lock
cmpsl
push
jae
and
sahf
insb
jg
mov
cltd
sarl
or
push
frstor
and
dec
xor
movsl
xor
xchg
lcall
sub
mov
jge
dec
pusha
movsl
cmpsb
test
sub
mov
test
es
in
pop
adc
fnstenv
sti
jnp
lea
mov
xchg
cmc
mov
loope
dec
xchg
jno
mov
or
dec
ja
sub
mov
aam
sbb
into
cmpsl
jcxz
enter
mov
jmp
mov
mov
lock
pop
cmpsl
outsl
shl
inc
std
xor
ja
dec
cmp
rcrb
dec
sub
adc
cmp
sarb
test
cmc
xor
aaa
rorb
lods
sub
loopne
icebp
or
ficomps
add
imul
jmp
lret
aas
mov
cmp
adc
jb
mov
mov
or
jmp
loopne
jmp
add
adc
and
xchg
movsl
jp
push
jbe
add
ljmp
xchg
xorl
lock
jl
cmpb
inc
jns
call
fisttpll
push
fimull
int3
out
aas
js
test
xchg
jmp
mov
mov
popa
sub
das
mov
jle
adc
nop
lret
stos
push
sub
and
addl
mov
out
lock
mov
test
imul
xchg
fwait
addb
test
add
cli
dec
adc
push
ret
adc
xor
nop
je
outsb
out
mov
jne
scas
push
pop
xor
jo
dec
pop
dec
jmp
pop
pop
movsl
adc
roll
stc
inc
test
clc
shlb
loopne
shlb
xchg
addb
lock
add
mov
jbe
inc
lret
and
push
mov
adc
nop
hlt
mov
pop
std
mov
sbb
ss
pop
push
push
jge
dec
jle
mov
insb
inc
mov
andl
pushf
mov
fs
mov
xor
std
aam
es
xchg
push
les
cmpsb
adc
ds
jne
inc
jmp
add
test
imul
xchg
jmp
xor
or
rcll
push
mov
cltd
cmp
sub
pusha
jmp
xchg
out
inc
jl
or
mov
cmp
pop
dec
ret
fwait
add
lret
pop
dec
mov
and
hlt
arpl
iret
sbb
enter
mov
mov
adc
sbb
push
dec
push
std
or
negb
jl
andl
jmp
arpl
cmp
js
xlat
pop
loope
xor
mov
test
and
and
arpl
fisubrs
jmp
lock
cltd
stos
sti
jle
aaa
test
cmp
xchg
mov
ljmp
add
adc
mov
jmp
mov
rorb
xchg
repz
add
and
ljmp
and
push
add
lock
sbb
fsubrs
cltd
add
icebp
loopne
mov
adc
int3
xchg
jge
or
mov
pop
jle
cltd
js
stc
lret
mov
push
cmc
mov
inc
or
cltd
sbb
push
xchg
jo
and
or
push
or
popf
cmc
ficomps
icebp
cltd
sbb
mov
mov
adc
mov
imul
dec
sti
popf
cli
push
loopne
push
sbb
jnp
fisubrs
mov
pop
stos
cmp
cmpsb
clc
es
fsts
cltd
lcall
adc
jns
arpl
xor
test
pop
rorl
mov
testl
and
or
xlat
push
push
sbbb
mov
aad
scas
xchg
mov
jl
cli
sub
repz
pushf
xor
push
jo
cmpsl
xor
sbb
xchg
roll
movl
sub
dec
cltd
sub
push
out
pop
cs
and
or
cmp
add
cmp
hlt
stc
jnp
ljmp
mulb
cltd
xor
es
aas
jl
out
cltd
jmp
jae
cltd
cmp
addl
push
sub
pop
xlat
jge
and
push
adc
cltd
jno
sahf
mov
cltd
mov
ss
cld
add
cltd
mov
stos
addl
mov
mov
dec
and
dec
test
xchg
lret
addb
sbb
cltd
sub
in
pusha
inc
int
cltd
push
mov
repnz
lahf
je
jp
cli
imul
shll
icebp
fwait
cltd
xor
add
daa
xorb
lods
sbb
and
mov
leave
addr16
xor
insl
or
clc
mov
cltd
sbb
cwtl
nop
sub
sar
mov
into
inc
dec
push
cltd
bound
add
inc
lods
outsb
and
inc
je
icebp
sbb
cltd
xchg
leave
lret
pusha
lgs
mov
ret
popa
cmpsb
adc
nop
popa
pop
test
push
jmp
cltd
dec
push
sti
ja
mov
inc
cltd
std
mov
movsb
aaa
push
xchg
rcrb
xchg
or
or
aam
cltd
popf
sub
add
cmp
xor
jg
cltd
jp
push
jl
mov
loope
lahf
and
mov
pusha
add
inc
movsb
inc
cwtl
lea
ret
fwait
xlat
lret
or
notb
push
repnz
hlt
mov
xchg
cwtl
sub
cltd
adc
or
pop
aaa
xchg
xchg
popa
dec
cltd
adc
add
mov
shrb
push
cltd
ljmp
inc
sub
cmp
es
xchg
xor
pop
cltd
pushf
xchg
jp
mov
dec
or
inc
mov
dec
loop
cltd
fldt
xchg
clc
scas
xchg
out
pop
cltd
xor
ficompl
pop
cmpsl
mov
mov
mov
cltd
xchg
pop
jne
aad
jno
mov
mov
sarl
popf
xchg
push
jg
sub
xchg
cltd
ret
adc
cmpsl
aad
fisubl
leave
pusha
hlt
setl
pop
idivw
cld
jnp
cmp
mov
sbb
cltd
add
insl
loop
inc
add
pop
push
mov
jle
xchg
inc
xchg
xor
mov
notb
pop
cmpsl
xchg
and
lcall
push
inc
std
cltd
scas
or
sarl
inc
scas
movups
repz
mov
sbb
mov
lock
lea
xchg
cwtl
jmp
mov
inc
mov
xchg
movsl
push
rorb
ja
and
add
dec
loop
cmp
pop
fildll
mov
pop
cld
daa
mov
movsb
pop
mov
sbb
xlat
jmp
cs
sbb
dec
add
push
jle
xchg
adc
stos
sarb
add
call
xor
test
jno
cmp
and
push
movsl
jnp
cltd
paddw
fmuls
stos
xor
or
jns
ret
cmpsl
out
inc
lret
dec
mov
test
jmp
das
pusha
fsubl
pop
add
pop
icebp
cmc
cltd
mov
mov
js
jb
fldenv
adc
pop
inc
mov
cltd
pusha
lret
shr
inc
stc
add
arpl
aaa
mov
adc
add
gs
xchg
xor
jmp
xchg
movsl
lock
push
js
cmp
sub
dec
jle
mov
mov
sub
stc
pushf
sbb
push
inc
insl
jmp
fcomps
and
mov
in
mov
xchg
repz
mov
dec
sbb
mov
imul
xchg
jbe
xor
icebp
push
mov
mov
dec
pushf
jmp
idivb
stos
mov
mov
std
add
sti
pop
fwait
lock
pop
mov
fwait
jne
xlat
jmp
in
mov
xchg
push
sarb
jmp
outsb
lock
gs
sbb
arpl
jg
cwtl
bound
cmp
xchg
cmp
je
dec
aad
ret
rcrb
sbb
inc
sub
dec
rolb
cmp
adc
in
push
das
adc
sahf
in
push
dec
mov
dec
jmp
lahf
xchg
xor
mov
jmp
jmp
insl
xor
mov
aad
es
xlat
shlb
mov
cmpsl
repnz
add
rcl
aad
iret
mov
rorb
imul
xchg
loope
jnp
dec
jle
ret
test
inc
aaa
mov
and
push
push
and
imul
pop
mov
sub
add
push
push
sub
fwait
jns
and
notb
imulb
sbb
movsl
lock
out
mov
lahf
adc
es
ret
stos
pushf
mov
add
arpl
sbb
add
imul
mov
andb
shrb
repz
xor
sub
pop
dec
or
vmread
jmp
adc
jo
loop
inc
dec
sti
ret
rcl
jmp
into
pop
ss
cli
cmpsl
add
scas
or
cmp
and
push
stc
lea
mov
jl
cmp
scas
sub
out
nop
call
xchg
mov
or
fisubrl
lahf
test
loopne
hlt
push
add
push
movsb
test
fdivrs
mov
fnstsw
mov
inc
test
add
mov
xchg
push
or
inc
aas
aad
insb
inc
mov
cmpsl
jmp
into
sub
sahf
xchg
push
bound
repnz
xchg
jl
lock
rorl
mov
lret
mulb
sbb
into
outsl
pop
push
jnp
sbb
xorl
or
outsb
roll
popf
orb
jae
jmp
adc
sub
loopne
push
and
int3
mov
pop
or
adc
je
movsl
pop
mov
loopne
test
cmp
nop
aaa
movsb
adc
cmpsb
pop
ja
movsl
jo
jne
stos
adc
jl
pushf
jmp
lods
mov
sbb
jnp
mov
inc
sub
stos
incb
loopne
add
sbb
sbb
jmp
jg
push
adc
outsb
cmp
xchg
nop
or
sub
int
dec
call
insl
clc
jmp
and
sub
push
loop
pop
loopne
cmpsb
xchg
lock
lret
rolb
pop
dec
lea
jne
inc
dec
adc
lahf
std
data16
inc
push
pop
pop
insl
aaa
lea
stos
jno
movsl
cmp
mov
jmp
pop
repz
pop
scas
movsl
enter
sbb
pop
pop
sbb
orb
sub
pop
rolb
lock
inc
or
lods
inc
icebp
iret
dec
test
jnp
roll
iret
mov
mov
idiv
cmp
aad
dec
jmp
push
push
sub
lea
pushf
mov
mov
jae
hlt
pop
imul
enter
jmp
mov
adc
sbb
push
test
inc
xor
mov
les
cmpsl
popa
lock
shll
cwtl
lret
xor
jns
adc
push
dec
gs
out
std
mov
and
cmpsb
gs
or
xor
mov
pusha
pop
mov
pop
dec
loope
inc
sti
inc
std
loopne
roll
testl
mov
add
loope
sbb
fs
cmp
mov
repz
addl
movsb
mov
fadd
mov
push
sbb
test
pushf
fstpl
movsl
into
lret
pusha
add
adc
aam
cmp
adc
lahf
aas
sub
sbb
loopne
sbb
stos
ret
pop
adc
fimuls
xchg
mov
xchg
repnz
cmp
stos
out
sbb
ret
add
jns
xchg
pusha
inc
jo
lcall
and
mov
bound
sub
add
jg
xchg
adc
sahf
dec
cli
push
jmp
faddl
lods
mov
mov
loopne
sub
jmp
rcrl
fsubl
mov
jmp
and
jmp
nop
lcall
insb
sbb
cmpl
ljmp
xchg
adc
push
arpl
in
inc
inc
clc
pop
xchg
mov
je
je
mov
mov
adc
fs
mov
rcr
jecxz
stos
les
cmpb
inc
jae
adcl
notb
cmp
inc
lahf
cmp
mov
int3
cld
in
addl
sub
lock
movsl
jge
xchg
push
movsl
mov
mov
sub
dec
nop
into
popf
xor
and
in
les
or
mov
fistps
sbb
sarl
jp
jp
sub
popa
inc
and
pop
mov
mov
dec
ljmp
inc
lea
jmp
pop
jmp
lret
int3
sub
jmp
xchg
mov
push
cwtl
and
push
fsubp
std
push
push
test
fimuls
lods
dec
dec
lea
loopne
sub
fisubrs
mov
jl
or
cmp
outsb
mov
stos
std
test
jmp
in
scas
mov
add
or
inc
fsubr
cmp
mov
pop
xor
adc
mov
addl
int
cltd
adc
sti
mov
jmp
aaa
inc
jns
ljmp
addb
call
pop
mov
aam
shl
loop
fidivs
inc
sbb
imul
stos
mov
mov
add
sub
lds
inc
jmp
cmpsl
mov
xchg
push
mov
fcom
pop
lcall
xchg
mov
cs
rcll
mov
add
jmp
lret
insl
orb
mov
push
popl
out
hlt
cwtl
or
ljmp
jmp
jo
push
jmp
cmp
mov
xchg
popa
adcb
pushf
xor
pop
dec
andl
push
jmp
cmp
fst
dec
mov
cld
dec
and
jno
add
mov
xor
cmp
mov
inc
push
push
das
aas
adc
stos
xor
sub
mov
pop
nop
sub
popf
inc
test
hlt
lret
cmpsl
jae
inc
jo
sahf
add
frstor
xchg
mov
call
pushf
mov
sbb
xchg
xor
xor
loopne
mov
push
jae
add
test
pop
jp
das
push
xor
lock
loope
mov
dec
adc
movsb
pop
cli
xor
repz
fiaddl
stos
jmp
jno
push
shr
mov
pop
mov
pop
lods
test
push
push
and
mov
mov
ret
loope
mov
jmp
enter
subb
sar
ds
loopne
adc
inc
jmp
pop
sbb
insb
mov
inc
jns
daa
outsb
inc
jo
jmp
lods
ljmp
es
cmp
bound
arpl
mov
sbb
cmp
imul
xchg
cmp
cmc
and
les
into
dec
jo
xor
pushf
lock
cwtl
lea
mov
jmp
clc
xchg
xor
push
insl
push
fstps
mov
loop
pushl
insl
stos
mov
mov
sahf
xchg
pop
pop
fbld
add
mov
pop
cmp
sbb
sbb
xor
add
jl
pushf
jmp
mov
sbb
jge
fwait
sub
add
std
div
mov
sub
jns
inc
dec
fistpll
loop
movsl
sub
mov
mov
adc
push
add
mov
lahf
and
or
out
arpl
pop
jbe
arpl
test
stos
cmp
xor
in
jg
andl
sub
and
mov
out
mov
push
imul
mov
sub
adc
fisttpll
inc
inc
dec
sub
and
ret
pop
rorl
es
into
loopne
enter
cmp
mov
insl
sub
sub
mov
push
jns
lahf
push
ret
negl
push
cld
daa
lock
jp
lret
and
test
inc
jmp
mov
or
push
int
cmp
cltd
test
fwait
lods
push
cmpsl
in
and
icebp
mov
cmp
or
sbb
mov
movsl
mov
pop
les
jmp
stos
ficompl
into
sbb
out
xchg
mov
inc
fnsave
sbb
stos
adc
out
cmp
mov
test
dec
adc
cmp
xor
aam
dec
js
movsl
gs
in
cmp
mov
pop
sbb
fstl
jmp
fbstp
sbb
mov
sub
push
inc
mov
mov
adc
or
jle
adc
sbbl
cmp
and
adc
sub
mov
or
lahf
in
ss
popf
out
fcmovb
loopne
inc
jl
loopne
adc
or
loopne
push
cmp
adc
bound
mov
in
jne
xchg
and
jmp
pop
mov
sbb
lods
test
add
je
dec
jne
fs
and
lcall
andl
push
and
adc
fistps
mov
mov
xchg
dec
jmp
jmp
mov
push
jg
jns
enter
pop
stos
mov
test
or
jge
scas
mov
sub
cmp
sahf
mov
loop
mov
xor
xchg
pop
sbb
lock
outsl
fistpll
into
pop
cmp
stos
cmp
cmp
ss
pop
push
xor
in
sub
insl
js
stos
push
and
push
scas
loopne
rol
push
sbb
sbb
jle
lea
cmp
imul
mov
cmp
pop
add
xchg
xor
clc
into
jmp
adc
mov
mov
hlt
lock
icebp
dec
div
mov
mov
xchg
or
aaa
test
pusha
push
cmp
in
adc
xlat
push
sti
or
in
loopne
jbe
jecxz
mov
xor
mov
sbb
push
or
and
sbb
push
jb
xor
mov
mov
pop
add
xchg
push
fwait
jno
adc
lahf
addl
inc
daa
sbb
jb
xchg
mov
lods
cmp
imul
loopne
adc
mov
inc
fistps
out
adc
fstp
test
adcb
fisttpl
cmp
addb
sub
stos
sbb
xor
dec
inc
lds
jno
adc
cltd
bound
fisubl
lods
ds
xchg
cltd
lock
cltd
fs
push
sub
xor
andl
scas
out
mov
pop
into
cltd
lcall
cmp
inc
imul
or
lret
movsb
jno
push
js
in
sbb
inc
imul
jp
sub
inc
imul
cltd
jl
mov
mov
cltd
jbe
mov
add
gs
cltd
clc
ljmp
sub
enter
and
push
jbe
das
and
cltd
stos
cmp
int3
cltd
mov
push
jmp
sbb
add
cmpsl
cwtl
mov
or
jb
fstps
add
mov
xor
mov
cltd
fldenv
xor
sub
push
and
jo
jnp
cltd
xor
in
lret
lahf
jns
cltd
mov
femms
xor
mov
sahf
inc
mov
hlt
cltd
mov
jae
stos
cmp
xchg
imul
pop
outsl
rolb
jmp
test
pop
cltd
out
mov
pop
sbb
or
pop
rorb
in
sbb
adc
movsb
icebp
shrb
lahf
inc
das
lods
mov
mov
fwait
jmp
cmp
push
ficomps
pop
jne
icebp
out
dec
pop
push
das
or
out
cmpsb
js
pop
aam
cltd
divl
pop
sahf
lret
cltd
sbb
out
loope
pusha
mov
mov
cltd
cmpsl
push
dec
inc
ss
jp
cltd
inc
dec
xorb
jnp
lret
int3
mov
jg
shr
mov
shrb
aad
stc
insb
out
and
dec
gs
jne
mov
cmc
into
add
cmp
inc
sub
imul
adc
push
loop
mov
fwait
jb
sub
mov
adc
lods
pop
test
mov
push
add
inc
xor
adc
mov
movsl
pop
pushf
lret
mov
insl
out
sub
test
movsl
enter
aaa
in
out
jge
fistl
cmp
lcall
jne
fstpt
cs
sar
adc
in
cltd
test
xlat
out
inc
add
fwait
or
pushf
loope
jns
or
mov
jmp
lea
lea
movsb
pop
add
mov
inc
mov
jo
rcr
cmc
mov
adc
dec
fwait
and
lret
pop
cltd
adc
stc
xchg
lcall
imulb
mov
xchg
mov
cmpb
negb
ds
rcll
xlat
sarb
push
cltd
int
loop
imul
pop
roll
cmc
cltd
push
outsb
movsl
jge
roll
dec
sub
cwtl
add
adc
xor
hlt
jle
dec
add
mov
rol
fwait
sub
rcrb
inc
jns
js
add
cmp
fwait
jns
out
ds
mov
push
stc
out
cltd
cmpsb
xchg
in
cmc
data16
cltd
push
cmp
loopnew
push
cltd
test
rep
out
adc
cltd
mov
shr
sbb
inc
insl
nop
pop
cltd
roll
aas
cmp
sub
scas
mov
out
popa
pusha
test
aam
ds
push
inc
cltd
xchg
pop
in
fnsave
add
jmp
dec
fmulp
fdivrs
and
es
sub
add
push
in
nop
popa
cltd
sbb
pop
mov
cltd
out
add
xor
test
imul
lock
scas
pushf
mov
pop
mov
mov
inc
pop
push
lahf
fwait
jecxz
xor
cld
in
mov
cltd
or
hlt
xor
and
mov
sbb
xchg
out
pop
cltd
ja
test
and
push
inc
cltd
lahf
mov
ss
xor
xchg
jnp
mov
xchg
pop
test
sbb
imul
xor
cltd
mov
in
arpl
xlat
pop
pop
cltd
rclb
xchg
add
cltd
push
cmc
push
lods
xor
add
aam
mov
cltd
xor
mov
pop
adc
js
mov
fincstp
rol
jge
cltd
cmpb
ds
or
fwait
add
adc
cltd
mov
adc
xor
mov
sbb
mov
mov
jecxz
xor
and
sub
dec
cltd
fldl
sbb
sbb
jne
je
xor
cmp
jmp
inc
push
cmp
jno
cmc
in
aad
push
or
cltd
ret
xor
sbb
cld
lock
or
inc
test
mov
sbb
dec
test
mov
in
je
ja
scas
cltd
sbb
push
push
and
xchg
cltd
xor
xlat
inc
adc
add
in
jae
push
or
push
push
cltd
xchg
or
jmp
mov
cmp
les
repz
mov
jl
jle
leave
mov
cltd
xchg
push
in
pop
mov
movsl
loop
lods
in
push
and
inc
dec
mov
int3
lock
cltd
incb
fs
adc
push
repnz
filds
mov
jo
lods
jne
loope
mov
adc
push
lea
movsl
mov
adc
aas
push
int
movsb
sub
lds
mov
mov
adc
sbb
add
outsl
rcrl
push
mov
cltd
push
movd
fsubl
cltd
ds
pop
push
jno
lret
dec
inc
cmp
lods
imul
inc
je
adc
cltd
or
mov
repz
movsl
fwait
in
mov
pop
jb
mov
imul
push
cltd
loope
mov
negl
out
jecxz
cltd
rolb
adc
jp
mov
cltd
jmp
or
jno
cmp
cwtl
clc
jp
cltd
and
lea
or
testb
mov
push
insb
loopne
jmp
stc
cltd
sbb
xor
cltd
mov
into
leave
inc
ja
stc
test
jno
dec
aam
cltd
xor
les
push
pop
mov
and
cltd
sub
mov
sbb
aam
pop
rol
aaa
pop
mov
push
mov
sbb
popa
sub
lahf
push
cltd
dec
sub
insb
pop
fwait
loop
icebp
rcrb
rcrl
fcoms
jecxz
mov
je
xchg
aaa
mov
orl
clc
fst
shrl
sahf
stos
loopne
nop
andb
cltd
pop
adc
xchg
movsl
cltd
and
cmp
inc
mov
inc
fstpl
rorl
cltd
outsb
push
mov
cwtl
ds
mov
movsl
in
sbb
clc
daa
cltd
nop
scas
sbb
dec
jmp
adc
int
lock
sti
mov
xchg
pop
cltd
xchg
inc
stc
mull
dec
cli
cmpsl
cmp
xlat
iret
stc
mov
lods
xor
out
ljmp
inc
pop
flds
fs
in
or
fldenv
cltd
sar
pop
dec
cwtl
mov
adc
aam
adc
sbb
mov
jecxz
fwait
dec
incl
pop
inc
mov
jmp
xchg
xchg
roll
push
mov
inc
mov
add
int3
jbe
xor
rorb
mov
jo
mov
adc
mov
ja
jg
scas
jmp
test
mov
loopne
cmp
mov
jns
jno
jmp
loopne
or
jne
xor
sbb
test
mov
inc
mov
jl
dec
jmp
and
adc
outsb
test
rcr
xchg
enter
cmp
pop
out
jns
cwtl
adc
lahf
stos
sbb
mov
arpl
xor
leave
mov
jmp
pusha
loopne
mov
jle
cld
or
mov
repz
sbb
cmpsl
jmp
cmp
inc
repnz
mov
push
fdivr
mov
jle
outsb
cwtl
jae
sub
sbb
xor
mov
and
ret
stos
xchg
jae
sbb
dec
filds
inc
pop
dec
stos
and
mov
xchg
jle
jmp
movsl
sbb
dec
shl
or
cmp
and
mov
add
mov
push
into
jns
test
push
adc
lret
sub
bound
cld
outsl
loopne
call
add
test
xchg
fiadds
mov
pop
pop
jg
pop
and
jmp
out
sub
testl
test
es
insl
jg
nop
inc
adc
mov
ss
cmp
xor
dec
pop
mov
mov
or
aad
add
adc
dec
adc
ret
movsl
ja
pop
aaa
rol
stos
add
cwtl
mov
fmull
pop
idivl
jo
fistps
inc
stos
adc
pop
cmp
add
jae
xor
imul
je
shlb
fs
loopne
jmp
fisubs
pop
aad
mov
fadd
jmp
cmc
popf
xorb
sbb
mov
push
pop
and
mov
mov
lock
idivl
ja
adc
mov
jmp
mov
cmp
clc
stos
push
out
mov
dec
jmp
xchg
add
inc
inc
es
aad
cmp
inc
jmp
not
stos
push
in
cmp
int3
pop
mov
lock
jg
add
cmpb
xchg
in
mov
mov
call
mov
sbb
adc
pop
sub
sbb
aad
sub
imul
in
lret
aas
je
dec
enter
pushf
cmp
mov
pop
cmpsl
mov
mov
lock
mov
cmp
cmp
and
and
cld
popf
test
mov
rorl
rcrl
lcall
in
test
lahf
cmp
jmp
lret
pop
or
nop
pop
lahf
lods
outsb
add
leave
lret
dec
jb
add
xchg
gs
cmp
clc
pop
adc
xor
aad
and
shll
xor
scas
push
stos
mov
iret
mov
bound
push
jecxz
mov
ja
jmp
popf
int
fidivl
or
xor
cwtl
inc
and
popa
jnp
add
cmp
repz
inc
push
gs
pusha
ds
pop
sbb
mov
fcomip
aam
std
jns
stc
cmp
mov
imul
pop
jmp
push
movsl
in
xchg
sbb
pop
push
insl
mov
mov
fs
sbb
jp
sub
mov
movsb
pop
jnp
sub
test
sbb
lock
xor
push
jmp
fwait
lds
shlb
sub
loopne
push
jecxz
xor
jmp
dec
shrl
test
mov
les
push
dec
lock
inc
dec
insb
std
imul
fidivl
test
cltd
imul
inc
push
pop
xchg
sbb
sub
push
popl
mov
insl
lret
adc
cltd
jnp
cmpsb
or
out
cltd
das
jo
inc
push
add
pushf
pop
push
pusha
les
push
cltd
lods
mull
cmpsb
hlt
cltd
sti
test
cli
jno
pop
pop
and
push
test
lods
mov
lods
into
mov
fwait
and
adc
mov
push
imul
push
loopne
fstps
sbb
push
test
movsb
cmp
cltd
pop
push
ficoml
xlat
lock
cmpsb
jns
lret
loope
cltd
or
xchg
xchg
jl
xor
mov
inc
dec
dec
in
cltd
sti
sbb
lods
cmpsl
dec
mov
arpl
clc
stc
xor
push
xlat
pop
out
cltd
push
or
pop
out
jmp
jle
inc
and
dec
icebp
xchg
cmc
add
shll
adc
mov
lea
jl
pop
xor
je
mov
lcall
xchg
lret
pop
dec
cmp
cltd
iret
icebp
jmp
mov
or
jmp
lea
inc
jb
and
xor
test
mov
xor
sub
push
pushf
inc
scas
lret
lock
lahf
mov
mov
mov
mull
call
or
sbb
mov
cltd
repz
pop
jbe
push
test
mov
cltd
fstl
xchg
dec
pop
mov
xchg
jp
sar
mov
xorb
cltd
xchg
mov
xchg
pop
cmp
ret
cltd
std
in
stos
roll
loope
ss
aas
bound
xchg
pusha
jo
fwait
adc
lret
or
test
mov
or
ljmp
stos
popf
dec
cltd
js
or
cltd
mov
mov
push
cltd
inc
mov
or
add
mov
cltd
jo
scas
fldl
or
cltd
rcr
stos
lods
loop
dec
sub
or
std
cmpsl
xchg
insl
pop
sub
int3
mov
add
js
test
cltd
movsb
sub
xor
gs
xor
jmp
adc
add
xor
mov
insl
jg
cmp
shlb
mov
xlat
or
add
pop
out
jmp
aam
xor
call
push
jns
xchg
f2xm1
fwait
pop
mov
pop
jmp
mov
scas
loope
xchg
dec
rcll
shll
mov
mov
xor
fwait
es
mov
fdivl
sub
jecxz
in
and
jno
xchg
popf
jle
lods
lret
adc
sub
xchg
out
inc
pop
imul
in
rol
adcb
test
jbe
jmp
adc
mov
lret
mov
jmp
movsl
mov
mov
icebp
sahf
subb
sahf
shl
hlt
sbb
imul
cld
jg
fsubrs
xchg
inc
xchg
sbb
out
popf
mov
xor
xchg
mov
jmp
movsl
bnd
in
aas
mov
lock
les
sarl
stos
push
push
insb
ss
mov
lcall
sbb
leave
pop
sarl
xchg
inc
add
mov
sbb
xchg
mov
adc
jno
jmp
je
bound
adc
sarl
mov
jecxz
xlat
jo
inc
arpl
gs
lods
ret
pop
adc
test
sbb
jmp
cmp
ret
sahf
movsl
mov
lret
jmp
sbb
loop
pmuludq
adc
dec
stc
leave
push
xchg
and
inc
test
and
testl
in
rclb
lahf
push
hlt
pusha
xchg
inc
sub
adc
mov
shl
cwtl
xchg
jmp
hlt
cmp
mov
push
fwait
mov
adc
lret
mov
loopne
icebp
fisubrl
add
jmp
repnz
shl
stos
mov
inc
shl
test
mov
mov
cmp
lea
fimuls
test
rorb
gs
mov
in
loop
dec
js
lcall
xchg
cmpsl
fucomi
arpl
pop
sbb
push
pop
fidivrs
sbb
jne
dec
sbb
adc
pop
push
xchg
sbb
test
ja
xor
test
push
and
cmpsb
arpl
xchg
fadds
push
sti
rcll
xor
add
mov
xor
mov
mov
jp
inc
jmp
bound
mov
addb
push
loopne
repz
addr16
jmp
cmc
js
sbb
ds
xchg
sub
rcrb
scas
dec
xchg
xor
orb
daa
mov
push
sbb
jne
and
dec
cmp
enter
add
adc
test
and
sbbl
es
jmp
or
add
add
sahf
mov
mov
iret
stc
fwait
cmp
aas
sub
pop
js
dec
arpl
pusha
push
adc
movsb
and
mov
stc
jb
pop
and
jmp
movsb
stos
push
stc
inc
cmp
lock
sub
adc
push
mov
stc
lock
push
fdiv
sub
dec
lahf
repnz
and
mov
stos
pop
clc
inc
test
mov
loopne
inc
pushf
shll
sti
fcompl
add
sub
cltd
andl
and
sbb
jge
mov
dec
mov
clc
mov
inc
push
dec
jmp
aam
jg
mov
xlat
call
jmp
lods
mov
popf
mov
xchg
pop
aaa
pushf
jb
mov
mov
mov
jns
adc
mov
sub
cmp
sbb
sbb
jns
xchg
push
sbb
mov
test
add
fimuls
xor
inc
outsb
xchg
xlat
dec
and
lahf
mov
add
popf
sub
pop
jo
orb
mov
lods
std
pushf
dec
dec
pop
cmp
xor
js
xor
mov
in
in
dec
data16
sti
icebp
and
pop
cmpsl
lock
mov
add
ffreep
push
mov
cmp
push
lods
and
inc
int
shl
test
mov
pop
popa
repnz
mov
push
add
push
imul
lret
lods
bound
fldt
jo
xor
sub
bound
push
cmp
cmp
cmp
int
fisttpll
aaa
cltd
lock
lret
cmp
jbe
mov
and
leave
inc
mov
mov
cwtl
xor
fwait
lock
in
xor
pop
and
stos
and
out
push
push
mov
test
loope
mov
jae
test
ret
inc
xchg
ja
jo
jmp
ret
jp
repz
jl
aaa
cmc
cmp
jmp
jge
fwait
sub
pop
gs
repz
mov
ret
pop
mov
int3
ss
or
and
and
inc
jmp
cmpsb
loopne
mov
or
insl
daa
out
mov
in
dec
add
mov
stc
iret
or
orl
mov
xchg
lcall
add
cmp
lock
lds
or
imul
in
jb
xlat
aaa
rorl
jno
repnz
and
inc
inc
pop
mov
in
xor
jae
inc
mov
xchg
xor
or
test
rclb
adc
lock
inc
outsb
data16
dec
mov
jmp
pop
int3
fildl
cmpsb
leave
mov
insl
test
fdivl
shlb
jns
mov
xor
jae
dec
xor
add
adc
dec
stos
pop
shlb
push
lods
outsl
fisttpll
mov
std
fcmovbe
sbb
dec
out
leave
sbb
xchg
inc
and
clc
outsl
ret
or
enter
mov
sub
movsl
jmp
stos
int
push
sub
pop
divb
sub
push
mov
mov
add
imul
or
xorb
cmp
test
pop
jbe
out
pusha
pop
jl
dec
xchg
cmp
or
shll
and
push
std
cmp
leave
jns
mov
jno
loope
dec
int3
addr16
movsl
bsr
enter
jecxz
lods
and
pop
enter
sbbl
dec
jns
and
pop
arpl
sub
pop
cmp
adc
add
inc
jmp
jle
pop
cmp
xor
int3
fbstp
adc
xor
dec
jge
adc
mov
sbb
mov
test
dec
les
stos
dec
cmp
mov
or
test
inc
sub
aam
pop
cmp
jb
xor
push
shl
daa
inc
ja
repz
mov
pop
add
leave
xlat
inc
cmp
push
pop
cmc
mov
sbb
jae
adc
out
pop
dec
xchg
dec
push
stc
mov
adc
pop
loope
cltd
cmpsb
jns,pt
dec
pop
aam
sub
inc
std
sub
push
stos
ret
rcr
jle
mov
nop
xchg
cld
adc
ficomps
adc
lock
lods
jmp
and
sbb
inc
jnp
inc
cmc
test
sbb
jmp
push
jg
cmpb
adc
fmul
inc
xor
and
adc
rcrb
lock
jnp
push
arpl
jmp
out
mov
push
stos
das
fwait
cli
in
ljmp
xor
mov
inc
jns
pop
jmp
out
inc
fwait
lret
ds
fabs
jno
rorb
lock
mov
cmp
out
mov
mov
aaa
stc
sbb
push
lea
jno
and
pop
mov
pop
inc
jmp
enter
sub
or
adc
fists
aad
outsl
cmp
outsb
mov
cmp
jge
or
out
loopne
mov
push
jmp
adc
in
jmp
test
jmp
nop
sbb
in
mov
jae
or
aad
cmpsl
test
fidivl
jg
leave
mov
stos
jmp
xor
nop
dec
shll
push
mov
addr16
mov
movsl
pop
adc
or
sbbb
pushf
mov
nop
inc
fdivl
enter
dec
cmp
mov
mov
jns
fcomps
test
jmp
subb
xchg
sbb
xor
mov
or
xchg
loope
mov
xor
jmp
test
dec
mov
xchg
adc
xchg
movsl
and
dec
mov
pop
xchg
sbb
cmp
jecxz
jno
or
lock
xor
into
jbe
inc
jne
jb
xor
scas
adc
imul
fsubrp
shr
inc
scas
ljmp
shlb
arpl
stos
cwtl
inc
mov
in
shlb
mov
sub
dec
rcl
ret
dec
dec
mov
xchg
pop
mov
imul
scas
jle
adc
aad
cwtl
in
lods
jo
push
ficompl
push
inc
add
lea
clc
rclb
xchg
pop
add
movsl
adc
rol
jl
dec
pusha
lret
add
sti
pop
add
push
inc
add
lahf
fsubrs
jo
sbb
enter
aaa
xchg
jmp
adc
rorl
xchg
das
mov
lret
lret
cltd
pusha
rclb
aaa
test
ss
jl
cltd
push
pop
imul
int
mov
push
sub
loopne
jbe
cltd
inc
js
add
jno
cmp
adc
xchg
lcall
pop
lods
arpl
out
in
icebp
pop
in
inc
fidivs
mov
divl
ja
add
fwait
dec
loope
sbb
jae
subl
mov
push
cltd
in
push
popa
pushl
cld
mov
or
daa
in
mov
jns
adc
adc
leave
xchg
shrl
mov
xchg
pushf
cli
cltd
mov
jp
or
jns
cltd
push
xor
insl
rclb
inc
push
mov
cltd
aad
mov
negl
sbb
ljmp
push
shr
cltd
adc
mov
dec
int
add
iret
or
sbb
call
mov
in
insl
adc
jbe
loopne
test
cmpsl
pop
in
mov
enter
popa
sbb
or
repz
dec
push
xor
outsl
inc
sbb
jmp
inc
neg
sbb
jae
cltd
out
dec
mov
out
ret
mov
sbb
fwait
sub
mov
loope
and
xchg
cmp
cmp
aam
cltd
push
jne
add
sbb
sbb
mov
dec
cltd
or
mov
sti
cltd
mov
push
pusha
in
push
lds
jo
xchg
mov
scas
fldt
dec
scas
adc
and
cltd
rolb
lods
jmp
and
outsb
add
xor
cltd
sar
outsl
jmp
cltd
mov
bound
cmp
xchg
pop
test
jbe
scas
mov
pop
inc
mov
call
lret
push
mov
stc
adc
xchg
adc
aaa
orb
cltd
lahf
xchg
dec
mov
sbb
add
cltd
or
add
cltd
mov
andl
cmpsl
xor
jae
mov
mov
dec
mov
dec
ficoml
jne
fdivs
mov
test
jno
movsb
cltd
adc
mov
mov
jecxz
mov
fistpl
mov
cmc
ret
daa
movsl
loop
ljmp
imul
jecxz
inc
incb
rorl
pop
dec
mov
out
mov
lcall
cltd
sarl
sub
or
stos
cld
mov
dec
leave
jl
cltd
sub
cli
out
aas
sub
cltd
arpl
jo
lods
cmpsl
sub
data16
test
mov
mov
mov
push
mov
inc
pop
xor
mov
jl
out
scas
cmp
jnp
ret
cld
pop
fisubrs
cltd
push
push
fsubs
and
lock
or
push
in
int3
movsb
sub
pusha
cltd
inc
adc
mov
fs
mov
or
xchg
nop
sbb
cmpsl
sbb
jo
xchg
negb
into
fldenv
shrl
popa
inc
mov
pop
idivl
cmc
out
or
adc
popa
pop
cltd
pop
stc
push
push
rolb
cltd
sahf
jns
pushf
daa
and
mov
iret
jle
mov
test
cmp
cs
jmp
sahf
sbb
loope
inc
or
icebp
dec
insl
insb
and
sti
jo
scas
popa
mov
push
gs
and
mov
xchg
lcall
or
test
mov
scas
sahf
cmpsb
fsubs
cltd
js
outsb
mov
xchg
sbb
push
dec
test
fsqrt
push
cltd
lea
pop
sbb
cltd
add
lock
inc
jge
cltd
stos
sub
jo
out
in
insl
dec
lret
cmp
cltd
inc
pop
lret
mov
jns
sti
mov
pop
test
mov
std
cltd
adc
popa
pushf
loop
mov
jmp
mov
jge
js
cltd
jl
xor
pop
inc
cmpsl
mov
mov
or
mov
mov
dec
cmc
pushf
sbb
fs
ds
pop
cwtl
mov
andb
xchg
rcrb
lock
dec
test
loopne
lods
sub
add
negl
cmp
cltd
pop
sahf
and
push
cmp
pop
and
push
lcall
lods
movsl
rolb
daa
inc
cltd
adc
and
cltd
sahf
sbb
scas
imul
movsl
iret
mov
cltd
clc
adc
ret
outsb
stos
ror
dec
cltd
addr16
mov
cltd
jg
jbe
imul
mov
cmp
call
add
jne
jo
in
cmc
arpl
sbb
popa
inc
inc
ret
insb
pop
cltd
pop
push
mov
inc
stc
test
push
push
int
push
popa
lahf
cmc
stos
and
mov
mov
cltd
push
pop
scas
adcl
lcall
and
cmpsb
push
scas
mov
mov
add
push
mov
fistl
pop
cltd
inc
cld
mov
jnp
dec
push
cltd
pop
or
sbb
aas
cltd
push
xchg
push
or
inc
je
pop
xor
cltd
mov
insb
cltd
mov
movsl
ret
mov
inc
add
inc
mov
ret
pusha
jne
in
out
jae
popf
cltd
push
pop
fadds
cwtl
insb
lret
mov
cltd
js
cmpsl
sub
xor
xchg
sbbl
inc
mov
stos
fldenv
jp
loopne
lock
inc
outsb
cltd
iret
fcom
add
cmpsb
mov
das
or
lock
dec
cltd
sub
adc
cltd
int3
ret
jge
scas
in
mov
sub
dec
rorb
or
rcr
mov
pop
mov
ja
xchg
cmpsl
arpl
and
xor
jl
imul
mov
lds
jbe
or
jg
mov
scas
out
mov
jle
scas
shrd
cltd
adc
das
out
inc
rorb
into
ja
sbb
adcb
jle
inc
push
xchg
dec
in
pop
xchg
mov
cmp
sahf
in
jmp
xor
inc
pop
sbb
and
lret
aam
add
shl
popa
ljmp
outsl
mov
je
jo
lret
sarb
ds
stc
cmp
jmp
imul
cltd
lock
adc
mov
xorl
adc
jne
sar
jp,pt
dec
inc
scas
push
jae
push
stc
add
xchg
fbld
and
cltd
sub
or
xlat
insb
mov
push
pop
loopne
movsl
cmpsl
fisubl
outsb
scas
insl
and
and
incb
shll
loope
add
icebp
push
mov
inc
mov
mov
into
out
cltd
or
andb
ljmp
dec
jno
shl
cltd
fstpl
add
add
jmp
ja
mov
cltd
push
lret
xor
stos
imul
shlb
pushl
jbe
fwait
gs
fmulp
fs
pop
mov
cltd
push
or
aam
mov
ljmp
or
cltd
mov
inc
lock
jl
flds
scas
pop
pop
filds
out
inc
sahf
sbb
mov
fnstenv
inc
pop
add
fstpt
adc
or
mov
in
sbb
daa
and
cltd
sub
cmp
xor
jns
lods
pusha
mov
dec
cwtl
enter
sbb
and
jb
push
jmp
cmp
lock
sbbl
movsl
enter
sub
push
fdivrs
mov
xchg
fists
push
push
jmp
inc
addb
mov
je
test
mov
stos
xchg
ja
sbb
cltd
xor
fcmove
add
enter
ljmp
sbb
xor
sahf
pop
mov
gs
lea
dec
divb
and
jmp
pop
gs
pop
dec
inc
adc
inc
pop
push
jle
mov
rep
cld
inc
sbb
fldcw
jmp
aas
pop
push
jg
xor
in
mov
popl
mov
push
in
and
cmpsb
jle
fwait
pushf
ret
arpl
cmc
jae
mov
mov
mov
xchg
sarb
push
int3
ret
jbe
fidivs
pusha
mov
mov
or
sbb
imul
daa
stos
push
clc
pop
inc
jno
movsb
outsl
xchg
lds
mov
sarl
mov
test
scas
dec
ljmp
xchg
dec
enter
hlt
stc
lds
je
enter
mov
daa
sub
mov
dec
push
shrb
adc
push
inc
hlt
push
xchg
aaa
xor
cmp
cs
jp
and
jg
enter
repnz
shr
addr16
cli
fistpl
push
push
jle
sbb
rorb
jle
dec
and
mov
sbb
cmp
xchg
xchg
jmp
jns
loop
test
imul
jbe
add
cmp
jg
push
cmp
fcoms
dec
aas
orb
xlat
xchg
mov
mov
mov
arpl
call
dec
loopne
in
pop
sub
push
sahf
jne
insb
mov
cli
jmp
std
jne
gs
xor
icebp
push
sbb
and
fistpl
je
pop
jmp
inc
scas
mov
out
stos
xchg
roll
xchg
fwait
std
jns
mov
pop
xor
movsl
jmp
in
sbb
push
stos
jg
or
outsl
pop
test
dec
testl
push
xorl
repnz
sti
cmp
dec
sub
repz
clc
mov
cmpsb
sbb
insl
pop
dec
rorb
mov
xor
mov
lret
enter
ljmp
daa
stc
cmp
mov
cmpl
loopne
push
rcrl
lock
sbb
aas
xchg
pop
stc
notb
inc
push
mov
push
enter
inc
and
xor
mov
xchg
stos
int3
or
ror
inc
and
xchg
sub
fisubrl
pop
pop
and
mov
movsl
cmpsb
in
adc
mov
adc
les
and
dec
xlat
inc
adc
mov
out
mov
loop
lret
mov
push
and
popa
sarb
push
xor
push
insb
jns
inc
jmp
adc
int3
jbe
xor
xor
mov
test
jmp
sar
add
mov
sub
or
and
xor
movsb
xchg
mov
xlat
cmp
stos
sub
and
shrb
jmp
push
clc
daa
test
mov
mov
mov
jmp
sub
mov
jns
dec
mov
or
enter
clc
xchg
gs
sarl
add
mov
inc
xor
pop
adc
stos
adc
das
add
pop
mov
jg
scas
stos
gs
xor
xchg
sub
lock
jns
int
fnstsw
dec
push
adc
popa
mov
int3
enter
imul
jns
ret
fbstp
insb
cli
xor
stc
outsb
push
and
mov
es
pop
inc
jecxz
outsl
cmp
jge
jne
xor
ficoms
lds
jns
xchg
ret
mov
jmp
and
imul
rorl
aas
jbe
adc
adc
cli
and
popf
pushf
lcall
sbb
nop
and
int3
push
sbb
test
lahf
mov
stos
outsl
lret
xor
addb
arpl
push
ret
sub
sub
dec
shll
push
adc
je
mov
call
lcall
inc
jp
push
test
and
adcl
mov
push
lcall
and
add
or
mov
repz
faddp
mov
call
jmp
cmpsb
aad
and
divb
ljmp
or
pop
stos
es
ljmp
jae
test
sahf
shll
arpl
jne
and
push
jmp
fstpt
fsts
mov
jmp
dec
cmp
mov
je
mull
pop
cmp
jne
cwtl
mov
jge
push
adc
xchg
shll
mov
jne
aam
cmp
mov
aas
pusha
pop
out
shrb
loop
mov
fmulp
cld
vprotd
push
xchg
clc
mov
mov
test
mov
stos
dec
adc
lock
xor
mov
aas
and
lcall
push
jl
sbb
jmp
fstps
cwtl
stos
shl
mov
jle
mov
push
ret
dec
xchg
pop
mov
jle
mov
adc
pop
movsl
test
xor
adc
sbb
aas
loopne
inc
sub
jne
in
push
mul
inc
mov
mov
daa
mov
mov
push
fnstsw
and
mov
jmp
adc
dec
pop
loope
leave
not
xchg
xor
inc
mov
test
push
mov
enter
pop
push
imul
sarb
adc
pop
mov
dec
mov
jmp
fldenv
hlt
adc
push
mov
mov
incb
rorl
xchg
int
enter
and
jnp
inc
add
cmp
shl
in
xchg
mov
out
sub
push
push
out
jno
in
pop
rolb
inc
into
or
inc
cmp
inc
pop
add
pop
xchg
outsb
inc
mov
xor
mov
enter
mov
je
jecxz
int
pop
rorb
mov
enter
dec
stos
filds
cld
sbb
cmp
aaa
test
fistpl
inc
std
out
popa
cltd
divb
mov
add
mov
loop
add
pushf
adc
cmpsl
out
adcb
and
add
fwait
xlat
ret
dec
mov
pop
xchg
adc
lods
dec
std
push
mov
int3
jle
cwtl
cltd
in
shll
std
or
mov
sarb
mov
aad
mov
das
fwait
xchg
pop
inc
mov
mov
xchg
xor
aam
std
lret
mov
adc
cmp
cltd
and
mov
je
cld
scas
sbb
loopne
filds
adcb
pop
fstl
cltd
inc
jmp
dec
push
in
movsb
mov
aam
ret
in
mov
mov
cltd
sbb
mov
lahf
aas
or
push
into
sub
adc
cltd
lea
mov
pushf
rclb
lcall
adc
push
pop
jb
orb
push
loop
pop
fwait
outsl
sti
jae
imul
lock
ret
jne
or
outsl
push
pop
frstor
and
push
inc
mov
mov
jl
cmp
xor
out
sub
mov
sbbb
push
and
fwait
dec
movb
xor
arpl
scas
xchg
cltd
or
loop
ds
cmpsb
enter
mov
dec
cmpsl
inc
cmp
in
xor
fxch
cmc
scas
xor
jns
mov
lret
shrb
push
int
imul
sub
sti
lcall
jno
icebp
jae
jne
inc
cmp
add
inc
and
cltd
loopne
inc
cmp
jne
daa
cltd
or
ja
outsb
xchg
repz
cltd
pop
adc
adc
mov
addr16
stc
addr16
fwait
aam
adcl
push
sbb
pop
movsb
mov
mov
in
xchg
sbb
rcrl
stc
in
stos
cltd
dec
cmpb
jmp
lods
loop
sti
clc
in
push
stos
cmp
adc
leave
aaa
iret
nop
subb
cltd
xlat
jns
dec
pop
jmp
popa
sbb
lcall
in
adc
mov
mov
jmp
and
rcrl
mov
jb
sub
jno
fwait
jle
mov
cmc
add
adc
jns
add
pop
mov
fldl
aaa
or
inc
xchg
fsubrl
jecxz
stos
sti
shr
into
popf
js
mov
loopne
adc
stos
aaa
mov
sbb
jnp
xor
aam
je
lahf
shlb
inc
and
lret
mov
shl
xchg
sbb
xor
jg
movsl
test
nop
ret
mov
shr
bound
adc
out
sub
pushf
iret
jmp
fistl
jbe
mov
jnp
lods
scas
mov
jecxz
imul
mov
loope
jmp
enter
push
push
add
add
lret
sbb
jmp
pop
sub
push
add
add
xor
into
loopne
mov
add
mov
dec
cmp
sub
push
daa
xor
mov
mov
cmp
shll
sub
cmp
popf
push
sub
xchg
cmpb
dec
popf
divl
pop
fiaddl
mov
repz
imul
clc
jmp
fmul
mov
inc
push
cltd
sub
out
inc
jmp
in
add
pop
test
sbb
xor
scas
aas
mov
ror
sub
movsb
imul
repz
out
aaa
jb
fimuls
jbe
xchg
scas
push
nop
out
lret
leave
mov
jae
fwait
sarl
sbb
sub
loopne
std
mov
inc
inc
add
mov
roll
arpl
mov
or
and
xor
out
mov
cmpsb
push
mov
std
mov
sub
iret
dec
or
pop
lcall
cmpl
mov
inc
xchg
scas
mov
mov
mov
or
scas
pop
mov
mov
xchg
dec
and
mov
cmc
adc
xor
mov
in
and
add
test
pop
push
addr16
pop
iret
jmp
inc
pop
ja
pop
push
cmp
sbb
or
dec
mov
hlt
dec
sub
jo
push
outsl
inc
lahf
dec
loopne
push
stos
in
enter
in
in
adc
jmp
jb
cld
push
push
mov
xchg
sub
jmp
cmp
inc
cmp
mov
jb
sbb
js
scas
adc
and
sub
pop
cmp
jns
sbb
lods
lcall
sub
cmc
pop
sub
loopne
jo
outsb
loop
cltd
aaa
test
pop
insb
adc
cwtd
jge
fnstcw
or
fucom
pushf
movsb
and
sbb
push
sahf
add
sbb
jo
es
popf
cltd
movzbl
into
cltd
inc
push
inc
mov
cltd
mov
mov
mov
insb
xor
stos
mov
fldenv
enter
push
adc
imul
pop
cmpsb
cmp
jmp
jnp
inc
sub
movsl
cltd
cmpsb
pop
push
dec
pop
adc
xchg
insb
jle
ljmp
add
lods
fcmovnb
jno
test
movsl
cltd
outsb
icebp
mov
jle
fdivl
cltd
dec
push
dec
mov
stc
xlat
sub
cltd
mov
adc
adc
pop
gs
sbb
mov
and
xchg
push
test
pusha
hlt
cli
sub
xchg
js
cltd
dec
mov
test
cltd
aas
sbb
inc
call
mov
mov
roll
adc
cmc
lds
and
jecxz
jg
pop
pop
push
cltd
ret
lods
sbb
cltd
push
fnstenv
in
cltd
orl
rcrb
xlat
mov
sti
xchg
je
push
xchg
les
aam
lcall
mov
xor
scas
fwait
sbbl
xchg
lods
adc
mov
int3
outsl
lahf
pop
shll
lret
aaa
mov
and
xchg
push
mov
lcall
bound
aam
enter
mov
pop
fcomps
addr16
inc
cmp
shrb
pop
sub
lock
call
xchg
fmull
sbb
or
dec
test
inc
lea
and
sbb
jmp
jge
sub
push
jmp
aaa
xor
mov
int
sub
adc
idivb
sbb
pop
fwait
repnz
inc
pop
lret
movsb
stos
add
jg
cmp
lret
cmp
scas
pop
fcmovnb
mov
xor
xchg
leave
mov
gs
xchg
addr16
add
and
adc
sbbl
sbb
adc
sahf
mov
cmp
inc
imul
fistpl
jmp
cmp
inc
push
add
daa
pop
adc
cmp
shlb
mov
bound
jmp
sbbl
xor
ficoms
xchg
lods
xchg
mov
cmp
mov
xchg
sti
inc
adc
mov
xchg
dec
icebp
xchg
xchg
adc
adc
mov
push
mov
mov
mov
cmp
jmp
inc
test
ja
add
jns
fldl
stos
push
dec
xchg
and
pop
sub
leave
iret
mov
decl
mov
hlt
test
adc
lret
loope
xorb
popf
orb
pop
inc
push
sbb
stos
cs
hlt
int3
xchg
repnz
inc
mov
fildll
fmul
les
pop
sub
add
push
lret
pushf
or
into
cli
loopne
jmp
jbe
pop
jle
pusha
sub
dec
mov
ss
jg
mov
mov
cli
push
push
les
jmp
ljmp
add
andb
xor
lea
dec
jmp
orl
inc
mov
sarb
dec
sti
aaa
mov
xchg
mov
mov
stos
jmp
imul
shlb
movsl
mov
lock
push
mov
fisubrs
aas
enter
xor
jo
inc
push
pop
mov
arpl
sub
and
std
repnz
mov
adc
xchg
dec
xchg
int3
mov
sbb
dec
nop
ljmp
add
adc
mov
or
in
jno
lods
test
repnz
das
push
les
sbb
les
or
add
cmpsb
cmp
sbb
push
stos
jg
adc
dec
jg
ret
add
push
dec
inc
push
dec
shl
mov
push
pop
loop
inc
arpl
jmp
mov
scas
jmp
mov
sbb
mov
lods
add
push
cmp
jmp
jg
dec
cmp
iret
aam
aaa
xchg
call
or
loopne
and
mov
loope
pop
movsl
daa
inc
xlat
ret
pop
mov
xchg
mov
mov
sub
inc
mov
lds
mov
shll
add
mov
xor
fiaddl
push
lcall
enter
xor
pop
js
inc
jne
rolb
sub
les
inc
into
mov
mov
mov
push
sub
popf
int
mov
mov
arpl
mov
rcrb
arpl
lock
mov
mov
cmp
arpl
jmp
pop
imul
rorb
int
lea
jns
xchg
mov
sti
stc
fiadds
lods
inc
aam
cmpsb
dec
leave
divl
ljmp
jb
xchg
push
outsl
mov
lcall
fadd
mov
jbe
call
sub
pop
xor
xchg
mov
jl
ret
out
dec
pop
ljmp
jle
xchg
stos
ror
clc
and
dec
cltd
and
orl
pop
repnz
pop
push
ret
lcall
cmc
add
mov
inc
mov
aas
shr
jne
jbe
lret
mov
pop
fisubrl
lock
loop
into
std
lahf
faddl
lahf
in
mov
shll
sub
cmp
mov
push
mov
jnp
dec
dec
test
push
jecxz
sbb
jg
cmpl
mov
inc
jmp
dec
ret
cvtdq2ps
popa
mov
cmp
mov
mov
sbb
mov
rorb
test
mov
mov
rcll
and
xchg
and
jno
shlb
js
loope
es
fcmove
push
jne
and
cli
pop
xchg
xchg
and
sbbl
add
cltd
xchg
repnz
push
mov
cmp
mov
xchg
cltd
loop
inc
lods
insb
pop
jmp
aas
dec
cltd
push
in
xchg
mov
push
pop
sbb
scas
stos
cltd
in
repnz
lret
add
es
das
rol
pusha
mov
int3
ss
andb
jne
sbb
cltd
sbb
pop
xchg
or
mov
insb
pop
or
nop
cmp
dec
xchg
in
sbb
inc
mov
cltd
jle
jge
int
jne
jnp
mov
xor
xchg
cltd
or
or
inc
sbb
push
or
mov
adc
and
xchg
nop
cli
cltd
push
xchg
mov
cmp
and
cltd
arpl
push
dec
jnp
addr16
xorb
mov
pop
mov
flds
aas
icebp
cmp
jmp
inc
ret
ficomps
sub
sbb
fcmovne
divb
adc
mov
imul
cmp
testl
or
iret
daa
clc
fisttpl
cmp
mov
cmp
inc
add
retw
cmp
push
adc
pop
pop
push
nop
jmp
xor
pop
lds
in
lods
lcall
xchg
test
sub
ja
xchg
sub
fwait
bound
jmp
outsl
in
and
insl
lock
andb
test
adc
and
movsl
pop
adc
in
sbb
jp
dec
jbe
clc
add
pop
dec
sbb
loop
leave
push
pop
mov
stos
orb
mov
mov
jae
jno
enter
dec
stos
loopne
stos
sub
jmp
adc
inc
sub
mov
mov
leave
mov
jmp
fcompl
xchg
jno
push
leave
loope
inc
mov
clc
xchg
out
lods
mov
and
addl
lods
fiaddl
cmp
mov
loopne
enter
js
pusha
inc
jmp
hlt
mov
mov
imul
sub
daa
push
movsl
cmp
pop
fmul
or
dec
xchg
sub
mov
sub
xor
dec
pop
pop
repz
into
add
nop
out
sub
ret
fidivrs
push
sbb
mov
mov
cltd
push
das
fistpl
push
hlt
lods
inc
aas
js
sbb
pop
outsb
mov
mov
mov
mov
push
sbb
out
hlt
mov
jnp
cli
std
lock
addr16
push
mov
test
mov
scas
divl
sub
lds
into
push
and
leave
xchg
push
popf
jne
pop
stc
les
xchg
fwait
jg
mov
jmp
iret
pop
subb
call
jge
je
xchg
dec
dec
jmp
hlt
xlat
jbe
sbb
dec
fldenv
xchg
inc
mov
out
sbb
fmulp
mov
pusha
cmp
add
cmc
sub
popf
in
adc
lods
outsl
push
stos
sbbl
popa
mov
outsl
fildll
dec
popa
dec
ds
decl
jmp
and
cmp
lea
cmp
mov
add
or
mov
rcrl
jmp
daa
sub
inc
lods
sarb
push
loope
sub
inc
lods
sbb
adcl
mov
iret
push
shll
scas
stos
dec
sti
dec
iret
lahf
or
ror
negb
push
aam
ljmp
test
cli
fwait
rcll
dec
inc
xchg
lret
js
mov
jae
pop
xlat
inc
pop
fs
push
mov
cli
dec
pop
mov
fsubrp
mov
xor
in
inc
mov
leave
jmp
push
mov
jl
cmp
jmp
or
imul
ja
lahf
and
xor
cmp
or
pop
rorl
repz
cmp
rorl
test
call
mov
cmpl
mov
fsubp
lds
pop
and
cmpsb
int
cmpsl
mov
stc
jns
mov
mov
fcomip
in
lret
out
cmp
shr
inc
mov
repnz
jnp
pusha
jmp
mov
or
pop
test
movsl
adc
data16
xor
and
subb
or
dec
xchg
sbb
mov
inc
cltd
loop
or
jmp
loope
cmp
test
mov
and
mov
jecxz
push
mov
jmp
stos
stc
xchg
popa
and
movsb
in
shlb
insl
inc
outsl
mov
movsl
jmp
and
popf
add
aam
cld
xor
cmp
dec
sbb
sbb
pop
aam
fildl
mov
popa
jmp
clc
sub
mov
mov
pop
adc
mov
stos
xchg
jmp
cmp
pop
cmpb
ja
jmp
iret
ja
pop
adc
bound
outsl
cmp
or
add
xchg
fcmovu
pushf
lret
aas
push
sbb
loopne
stos
lahf
loope
rorb
movsl
or
inc
das
push
jg
mov
mov
xchg
pop
outsb
data16
mov
push
rcl
xlat
cmp
loop
aam
dec
in
std
imul
mov
lock
in
jmp
out
insl
jmp
vmwrite
scas
mov
lahf
loopne
mov
ja
pop
jg
mov
dec
scas
jmp
std
mov
xor
popa
lock
inc
movsb
ds
jae
pop
ret
inc
mov
add
add
divl
xchg
dec
inc
push
sub
sbb
stc
cmpsb
lea
iret
stos
lcall
out
ficoms
arpl
push
imul
sub
scas
sbbl
stos
inc
hlt
dec
adc
jge
stc
ljmp
les
add
jmp
movsl
lock
adc
add
mov
gs
test
or
mov
jmp
inc
xchg
adc
sbb
ret
or
mov
adc
negl
lock
shlb
sbb
mov
fst
jl
xlat
jmp
jb
push
push
adc
call
and
fdivrl
clc
fwait
inc
lock
push
lret
gs
mov
mov
idiv
sbb
in
push
push
test
aas
les
add
pop
rcl
test
jmp
jns
pop
adc
enter
pushf
shl
jno
add
insb
sbb
sbb
jmp
popf
sub
sbb
std
adc
aas
push
fistl
jo
popf
mov
cmp
cmp
sub
mov
push
sbb
sbb
pop
jg
mov
test
inc
mov
fsubrs
roll
cltd
icebp
mov
or
sbbb
sbb
jo
add
mov
mov
adc
cmpb
lahf
bound
inc
inc
cmp
dec
lret
mov
adc
pusha
pop
cmp
out
and
mov
fsubrs
jp
stc
cmc
pop
inc
fimuls
rcrb
in
mov
pushf
pop
and
mov
adc
mov
daa
mov
cmp
or
popa
fs
popa
lcall
faddp
gs
mov
sahf
arpl
aam
bnd
je
in
decb
pop
mov
pop
mov
mov
mov
movsl
pop
rorl
das
adc
pop
xor
pusha
sti
shlb
mov
add
or
xchg
cmp
jmp
sub
lds
das
inc
lea
jg
cmp
loopne
add
xor
xor
jnp
lods
jle
pop
adc
shll
pop
add
lock
jns
jo
mov
jle
and
fldl
popa
inc
cmpsb
repz
adc
inc
or
adc
adc
add
add
inc
movsl
xlat
repz
loopne
cmp
outsl
lcall
pop
rcrb
xor
sub
call
sub
jno
mov
inc
sbb
sub
mov
ja
add
cmp
lcall
sti
xor
dec
mov
cmp
sti
sbb
arpl
sbb
jmp
mov
iret
loopne
shrb
jmp
aaa
push
jae
adc
shl
test
pop
push
and
xchg
lret
arpl
das
negl
or
mov
pop
ss
fidivrs
and
or
shlb
cmc
push
iret
pushf
iret
xchg
sub
movsl
shrl
test
xchg
scas
push
popa
loopne
and
lock
and
inc
fsub
ret
jo
mov
rclb
lds
push
pusha
movsl
dec
or
fwait
cmp
mov
cmp
hlt
pop
pop
hlt
fcoml
mov
mov
adc
mov
jb
test
and
mov
push
or
mov
dec
outsl
push
cs
add
fcomps
cwtl
xor
clc
adc
mov
pusha
jg
adc
lahf
call
inc
sti
xor
dec
or
jns
dec
fwait
pop
test
and
sbb
inc
divl
addr16
xchg
in
popa
shl
push
xchg
stos
xchg
outsl
aaa
sub
ljmp
ss
adc
adc
or
aas
pop
add
cmc
push
pusha
mov
push
mov
sub
insb
insl
lds
aad
sbb
push
inc
into
aaa
pop
dec
pop
in
jle
leave
push
xchg
xor
aad
cmp
push
mov
jno
mov
inc
cmp
iret
js
ljmp
sbb
cmp
mov
mov
rolb
cmp
mov
or
sbb
test
mov
inc
mov
fldcw
rorb
sub
and
xor
mov
enter
mov
mov
pop
aam
in
rcl
pop
jo
aas
and
jp
mov
pop
divl
sbb
dec
iret
and
into
lea
sbb
jnp
sub
cs
dec
pop
push
cmp
ret
add
mov
jmp
arpl
cmp
mov
lock
nop
inc
sahf
lock
sub
outsl
cmp
push
push
andb
fisubrs
movb
push
out
hlt
in
pop
into
cmp
jmp
pop
mov
addb
cmp
push
sbb
push
cmp
push
test
cmpsl
xor
fsubrl
imulb
lahf
dec
dec
mov
push
add
push
adc
mov
ret
cld
xchg
push
stos
adc
sub
enter
xor
mov
cmp
stos
inc
pushf
test
shll
adc
push
pusha
sbb
inc
mov
insb
push
shrl
sbb
sbb
jb
mov
cmpb
cmp
jmp
sbb
cltd
nop
jmp
mov
jbe
jae
and
wrmsr
int
shr
nop
arpl
sbb
adc
scas
jns
mov
cld
stc
mov
fistps
sbb
push
add
xchg
mov
push
pushf
lock
inc
mov
mov
push
iret
sahf
inc
sbb
daa
xor
add
int
dec
jb
pusha
inc
dec
dec
loop
or
pop
ret
fisttpl
mov
psubsw
hlt
sbb
or
cwtl
xchg
loope
sub
clc
repz
push
jge
mov
std
or
add
subl
sub
shll
or
mov
xor
pop
push
push
rorl
dec
imulb
mov
lret
mov
cs
lret
jno
xchg
cmp
inc
push
mov
rcrl
or
into
cld
aaa
inc
jp
sbb
or
mov
jo
cmpsb
inc
pop
jmp
pop
and
xor
outsb
jg
inc
sub
push
adc
or
adcb
mov
ficomps
inc
add
sbbb
popa
dec
sub
xor
xor
mov
js
mov
jb
or
rcl
xlat
fwait
add
and
stos
adc
cmpsb
jo
lock
mov
lea
cmpsb
sub
outsb
or
pop
enter
iret
pop
add
cmp
fstpl
shl
sbb
mov
pop
xchg
loop
in
bound
jmp
lret
outsl
mov
inc
sti
cmp
xchg
or
mov
xchg
lahf
mov
lock
xchg
jno
push
stos
fcmovbe
insb
iret
cs
jmp
pop
xchg
add
repz
scas
test
xchg
aam
in
cmp
mov
and
loope
sbb
pop
mov
pop
stos
loopne
je
iret
mov
pop
or
insl
sub
mov
push
dec
int3
mov
sbb
icebp
out
xchg
fisubl
jg
shlb
pop
xor
neg
cmp
jmp
inc
mov
jl
stc
das
arpl
pop
cmp
jmp
push
dec
xorl
test
cld
subl
inc
clc
mov
push
stos
dec
in
rorl
mov
arpl
mov
xchg
mov
xchg
rol
push
test
sbb
cmp
in
jmp
push
lods
pop
shrl
pop
movsl
or
outsl
or
test
mov
lret
xor
lcall
or
notb
jmp
jp
dec
ds
xor
pop
arpl
push
ret
jg
jb
push
call
imul
xor
imul
cmpsl
imul
push
fidivrs
jbe
cmc
push
aam
das
cmp
fldt
mov
jmp
add
adc
ja
pushf
subb
mov
xchg
pop
outsl
cmp
jle
inc
les
mov
addl
pop
xchg
dec
or
sbb
sbb
lock
or
inc
xor
fwait
clc
mov
test
push
ss
fisubrs
push
insl
inc
loopne
cwtl
insb
xchg
pusha
inc
cmp
jae
addr16
aam
jmp
iret
mov
mov
sbb
sbb
jp
aam
aas
enter
adc
cmp
stos
pop
cwtl
ror
test
adc
sub
cmpl
call
mov
aam
lock
jbe
inc
mov
add
adc
mov
adcb
sub
jne
dec
push
enter
xchg
jo
fldpi
push
pop
xor
pop
pop
sbb
out
jge
call
mov
and
data16
bound
cmp
mov
test
inc
aas
scas
mov
mov
movl
and
fstpt
mov
lcall
jbe
les
lock
mov
push
stos
lcall
aaa
mov
int
loope
fwait
xor
push
mov
mov
inc
jmp
jne
andb
and
inc
and
dec
add
cs
or
shll
int
stos
pop
xor
ficomps
test
mov
jmp
ret
lahf
pop
int
mov
and
mov
add
xchg
sub
push
jg
insl
xchg
xchg
bound
pop
shl
dec
sub
repz
aaa
inc
imul
or
jnp
push
aad
fwait
adc
jmp
mov
cmovbe
leave
test
cmp
lock
mov
in
pop
inc
jmp
add
jno
mov
out
test
rolb
dec
int3
mov
xchg
rcrb
cmp
in
aam
push
mov
fidivs
and
or
jno
movsl
lcall
mov
lcall
sbb
or
add
ret
mov
mov
in
rcrb
lock
test
stos
and
push
mov
mov
rcrl
xchg
mov
jmp
ret
imul
fistpl
dec
or
xchg
inc
mov
mov
cwtl
lods
insb
sbb
leave
leave
arpl
xor
shlb
nop
adc
test
cmp
dec
jmp
aaa
pop
cmp
dec
pop
dec
sub
pop
jbe
insb
lods
gs
mov
dec
jmp
xor
mov
inc
jbe
sbb
lea
lock
pusha
je
sub
adc
add
addr16
fs
add
mov
xor
dec
push
out
in
pop
pop
xchg
pop
xchg
lret
jmp
mov
jmp
shr
or
popa
aam
hlt
js
sub
jle
clc
add
das
out
push
dec
call
xchg
or
push
cmpsb
rcll
mov
jmp
fdivp
sub
fcmovbe
pop
jle
mov
lea
push
inc
popf
popl
popa
add
pop
or
cltd
dec
rorl
arpl
adc
in
adc
xor
jmp
pop
sahf
dec
lcall
mov
adc
push
xor
adc
aaa
nop
popf
popa
gs
int
and
repz
mov
and
pop
std
test
sub
loopne
leave
daa
dec
jmp
sbb
sahf
icebp
inc
jmp
push
push
adc
stos
fs
mov
movsl
mov
das
loop
mov
aad
dec
bound
fbld
movsl
enter
sub
jae
les
mov
push
cmc
lods
enter
inc
push
negb
jle
in
addl
jmp
inc
mov
sbb
add
mov
inc
mov
ja
cmpl
or
inc
inc
sbb
rorb
xchg
sbb
xchg
ljmp
ret
into
lret
les
xor
lock
inc
test
mov
and
mov
gs
faddl
dec
cmp
es
ret
sti
or
jge
outsl
adc
jecxz
push
pop
xchg
sub
and
dec
or
mov
into
pushf
cmp
mov
pop
jmp
dec
hlt
jmp
sub
cmp
js
inc
xchg
popa
fmul
jg
fwait
aaa
test
outsb
adc
lret
inc
enter
pop
push
mov
repz
ja
push
push
ret
lds
mov
add
lods
out
fstpl
fisubs
daa
fwait
insb
lea
pop
stos
inc
cmp
outsb
push
cwtd
adc
cltd
out
daa
adc
pop
mov
and
xor
or
xlat
mov
gs
sub
rcrb
xchg
push
addb
xchg
sbb
push
adc
sbb
fiaddl
jo
push
imul
loopne
adc
xchg
xchg
fcomip
dec
jge
xchg
inc
xor
fldenv
mov
clc
loopne
inc
cltd
outsl
loop
imul
cmpb
cltd
adc
mov
mov
inc
mov
mov
outsb
fdivl
fwait
cltd
sbb
subl
out
lret
lods
push
ja
and
fisttps
stos
jl
dec
adc
aam
cmp
dec
scas
arpl
clc
push
rol
mov
jbe
cwtl
divl
cltd
call
add
inc
cltd
push
jp
icebp
fsts
cltd
xchg
arpl
cmp
mov
cltd
ficoml
pop
and
dec
ds
mov
push
sbb
push
or
xchg
icebp
aas
out
pusha
add
fs
imul
rcl
inc
gs
je
push
daa
cltd
ret
dec
arpl
push
cltd
jle
mov
insb
cltd
sbb
push
xor
sub
aam
sahf
xchg
cmpsb
xor
mov
sbb
cwtl
cmp
scas
imul
movsb
sub
repnz
xchg
push
testb
push
cltd
push
add
pop
adc
vpsraw
insb
push
and
lods
in
pop
jb
push
aas
js
inc
xchg
cltd
jl
push
jmp
mov
popa
push
dec
inc
pop
dec
cmpsb
rcrb
push
inc
add
cltd
stos
stc
jge
daa
pop
fwait
cmp
inc
loop
push
mov
loopne
loop
pop
pop
mov
out
pop
pop
push
mov
sub
pop
jecxz
jmp
cltd
xor
adc
cmpsl
sahf
inc
icebp
rcrb
lods
mov
cltd
arpl
push
scas
nop
icebp
inc
cltd
cld
mov
jno
mov
dec
imul
and
pop
psubd
pop
test
add
scas
cmp
shrl
mov
out
inc
push
pusha
push
imul
cmpsb
push
je
scas
pop
stc
out
jmp
cmpsl
addl
adc
cltd
aas
cmp
cmp
jmp
push
pop
jecxz
cltd
lea
push
lcall
xchg
cltd
test
inc
outsb
jne
mov
adc
lahf
jae
test
xchg
out
xor
push
pop
mov
fcomps
lret
popa
jp
arpl
mov
scas
mov
lahf
add
add
xchg
loopne
adc
iret
sbbb
es
cltd
pop
inc
int3
lock
lea
inc
leave
xor
popa
cmpsl
pop
out
jae
aaa
xchg
xchg
cmpb
mov
fbld
jb
ret
stc
dec
cltd
dec
xor
jo
jge
dec
stos
mov
int
scas
mov
dec
mov
jl
sbb
dec
sbb
cltd
xchg
mov
jnp
sti
js
jge,pt
xchg
push
bound
aad
cmp
mov
repz
pop
dec
cmp
push
nop
cmp
test
xor
push
inc
mov
enter
cs
pop
mov
movsb
pushf
push
sbb
jne
leave
sbb
dec
pop
rolb
push
mov
movsb
cwtl
pop
sahf
out
jl
in
cltd
inc
rorl
jae
jmp
push
xor
ficomps
mov
fstpl
into
sbb
insl
fwait
jb
icebp
cmp
test
cmpb
loopne
mov
add
popf
pusha
jle
cltd
movsb
sbb
push
and
cltd
adc
push
cltd
mov
les
mov
pusha
pop
call
pop
aam
ja
out
dec
sbb
jp
xor
shll
cltd
mov
push
mov
jg
adc
mov
out
das
add
lock
jl
shl
xor
and
adc
pop
mov
das
inc
add
out
jmp
inc
out
cltd
xor
inc
push
mov
fwait
cmp
pop
pop
sub
fmull
sbb
push
cltd
sub
mov
movsl
ss
push
xchg
cmpl
insl
cmp
into
adc
push
xchg
outsb
mov
stos
jmp
rolb
clc
pop
ficoms
jmp
sub
mov
pop
sbb
sbb
jmp
xor
jne
sub
lods
mov
out
jmp
pop
sarb
xchg
outsl
cli
aas
cwtl
aad
movb
add
cmp
jno
mov
fisubrl
ja
and
xor
insb
lods
bound
sub
cmp
or
test
xchg
mov
adc
cld
loopne
mov
mov
inc
jmp
pop
je
or
std
fimuls
in
lds
mov
ret
int3
test
cmpl
mov
push
call
ss
pop
inc
mov
fwait
xchg
pop
sub
dec
cmp
mov
std
add
sbb
mov
lcall
arpl
jbe
mov
aaa
jmp
mov
inc
mov
pop
push
mov
imul
in
inc
mov
xchg
xor
push
and
jmp
mov
insb
and
adc
mov
jle
gs
shl
arpl
mov
cmp
mov
jmp
cmp
add
rcll
pop
push
jae
mov
pop
sub
mov
loopne
jmp
movsl
js
ljmp
or
push
ret
icebp
or
jge
rorl
xor
push
sbb
sti
push
xor
pop
lods
inc
inc
xorb
aaa
cmpsl
je
mov
xchg
dec
pop
sub
xchg
shlb
jne
mov
cltd
mov
add
xchg
dec
pushf
fs
xor
cmp
jo
sub
hlt
pop
jle
inc
ret
push
shr
sub
lahf
add
mov
push
cmp
pop
mov
and
inc
lock
lods
mov
jmp
inc
jle
sbb
fnstcw
in
mov
les
negb
fwait
pop
and
xchg
adc
mov
stc
out
adc
aaa
into
mov
test
mov
jmp
push
lret
insb
or
daa
xchg
pop
lcall
movsl
test
fadds
movq
mov
enter
les
aas
mov
int
xchg
gs
leave
sub
or
mov
mov
jnp
and
mov
xchg
cmp
stos
push
cs
mov
rcrl
cmp
outsb
jo
jle
mov
mov
mulb
xor
movsb
scas
iret
push
leave
imul
cltd
lods
clc
inc
adc
lods
aas
and
test
inc
iret
mov
cmpsl
push
xchg
adc
sub
fsubrs
mov
and
daa
lahf
xor
aaa
test
mov
fldl2e
pop
mov
mov
pushf
lret
imul
test
outsl
xor
jmp
or
xor
pop
cltd
imul
cltd
sub
hlt
mov
and
into
imul
sahf
cltd
dec
ja
mov
sti
popa
das
cltd
sbb
jnp
cltd
out
pushf
xchg
jmp
cltd
inc
xchg
test
or
xor
mov
fwait
imul
movsb
inc
jb
inc
cmpsl
mov
cltd
clc
ret
shll
cltd
lret
sub
hlt
nop
cltd
push
add
lcall
test
push
and
in
cltd
inc
sahf
sbb
dec
add
cltd
mov
pop
mov
cltd
repnz
je
clc
into
std
push
pop
call
stos
or
loop
mov
jle
loope
rcrb
sbb
pop
outsb
sbb
pusha
adc
mov
jae
out
push
stos
int3
movsl
adc
adc
cltd
rorl
push
or
lcall
mov
mov
ljmp
shll
sbbb
ret
jo
or
cltd
and
jmp
add
data16
mov
fbld
dec
mov
loopne
push
push
dec
pusha
sub
movsb
cmp
pop
xor
pop
nop
jae
jp
es
idivb
and
dec
cwtl
aaa
lods
cltd
out
mov
mov
adc
jns
out
pop
std
add
arpl
jmp
scas
xchg
fwait
inc
lcall
leave
adc
inc
dec
add
lcall
adc
les
repnz
pusha
es
jbe
push
mov
pop
cltd
xchg
sub
xchg
aaa
popa
mov
fistps
jb
stos
mov
pop
cmp
imul
lods
scas
jns
data16
out
inc
roll
dec
ds
sub
mov
cltd
pop
cwtl
ret
sti
and
cltd
stos
lods
or
ret
sbb
cmc
mov
pop
je
cltd
pop
or
sub
dec
test
mov
add
push
arpl
pop
jmp
movsl
pop
mov
test
mov
loope
dec
fmulp
inc
stos
jo
mov
or
je
mov
pop
mov
cmp
imul
lods
jb
mov
in
jno
div
mov
test
cmc
js
fldcw
loope
jmp
rcrb
jne
out
cmpsl
sti
test
imul
lods
loop
fwait
sub
cmp
fdivrs
push
inc
push
cmpsl
mov
sbb
int
out
notb
cmp
xchg
aaa
cltd
data16
int3
sbb
sarb
push
int3
rorl
dec
jmp
cmp
jno
stc
push
mov
sbb
js
pop
mov
leave
dec
add
pop
subb
aaa
test
sbb
mov
push
lods
pusha
sbb
in
push
pop
sub
adc
lahf
jno
xor
mov
push
xchg
inc
clc
scas
xchg
pop
cmc
jne
push
jns
jns
mov
and
loopne
mov
push
mov
ret
sbb
jp
jns
xchg
jge
outsl
movsb
sarb
mov
jmp
lret
jle
push
test
into
jmp
adc
dec
and
xor
sti
mov
int3
jl
stos
push
std
cmpsl
dec
pop
loope
mov
pushf
jb
dec
mov
and
movsb
cwtl
cmp
sbb
cmp
iret
and
ficompl
test
cltd
mov
pop
aad
popf
jmp
imul
inc
push
lret
rcrl
jb
cmp
fwait
pop
shr
xchg
aam
mov
test
push
jg
enter
or
push
push
stos
adc
loop
cmp
jns
enter
pop
ljmp
rclb
mov
adc
in
out
sbb
shl
push
sub
fs
pop
fadd
addr16
and
jle
mov
cli
pusha
mov
lods
sti
mov
or
mov
stos
je
pop
cmp
pop
pop
sub
in
lret
push
inc
jnp
mov
sub
pop
or
sbb
cmpsb
roll
cmp
rcrb
cmp
rorb
aam
and
lahf
sub
movsl
pushf
jecxz
push
jp
stos
popf
xchg
cmpb
jp
xor
loopne
push
or
cmp
bswap
lock
jo
push
or
pusha
pop
test
iret
psllw
addb
adc
push
xchg
inc
test
xor
mov
xor
loopne
sub
rcrb
mov
outsb
aas
imul
icebp
jae
movsl
rorb
lret
mov
sbb
pushf
xchg
cmp
mov
dec
sbb
sar
loop
pop
in
add
mov
enter
xor
pop
jge
xor
loopne
inc
sbb
or
fcompl
test
mov
scas
test
add
mov
fsubrl
xor
xchg
add
push
insb
movsb
lods
ficoms
rolb
jg
mov
pop
test
dec
fisttpl
loopne
stos
enter
stos
mov
push
cmc
mov
mov
lods
ret
mov
test
shll
gs
and
lods
or
aas
push
test
ret
andb
mov
nop
lret
pop
loopne
int3
xchg
fwait
movsb
stos
mov
mov
jge
cmpsl
pop
sub
loop
xchg
shlb
inc
dec
cs
movsl
push
sti
mov
outsb
mov
cmp
call
lods
xor
inc
and
stos
jmp
mov
jg
add
or
inc
int3
dec
mov
dec
pushf
mov
mov
faddl
mov
mov
pushf
lods
jb
add
cmp
imul
inc
pusha
lret
enter
imul
test
mov
mov
test
andb
bound
xor
adc
nop
popa
push
loope
mov
cmp
jbe
lock
and
iret
je
insb
sub
mov
pop
test
mov
daa
xchg
imul
scas
mov
inc
mov
ljmp
rclb
outsl
cmpsb
push
and
adc
and
xchg
adcl
pop
aam
push
out
int3
xor
sbb
ficomps
mov
daa
sbb
iret
les
leave
aaa
pop
jns
sbb
fwait
mov
mov
push
and
mov
rorb
xor
xchg
and
sub
out
cmp
dec
xorb
sub
outsb
pushf
mov
test
jo
mov
dec
xor
fnstsw
stos
jmp
rcr
xor
cmp
popa
pop
inc
xorl
aam
inc
lret
xor
mul
add
and
push
jnp
addr16
call
mov
decb
push
push
dec
xor
pop
stos
push
inc
mov
icebp
jmp
pop
enter
lock
int
jle
imul
add
push
clc
jmp
dec
sbb
ljmp
jl
negb
sub
insl
inc
mov
int3
pop
push
ror
sahf
xor
and
sub
call
cmpsb
push
data16
inc
int
adc
pop
cmc
int3
stos
flds
xor
add
or
lcall
test
inc
mov
xlat
adc
sub
leave
push
push
jns
dec
and
or
pushf
jo
out
xor
das
cmp
lock
sbb
ds
sub
std
jns
jecxz
icebp
outsl
and
int
and
mov
scas
xchg
cld
shlb
into
lods
mov
int
sbb
inc
xchg
mov
stos
and
jmp
loopne
ds
scas
mov
jae
loopne
push
lret
cmpsl
xchg
and
jp
adc
std
or
ret
lret
sar
mov
jnp
shl
pop
adc
xchg
push
ret
or
jmp
enter
int3
push
jmp
xor
push
clc
aam
test
rcll
jno
es
aam
push
sbb
dec
xchg
inc
dec
fimull
adc
push
xor
xlat
in
pop
ret
shr
xor
sbb
cmp
mov
add
or
mov
leave
aam
sbb
or
andb
mov
cltd
jmp
cltd
imul
test
jmp
cmp
xor
jg
cltd
push
pop
shrl
aad
aas
push
xlat
out
push
mov
push
mov
push
addr16
popa
out
sub
inc
xor
outsl
pop
xchg
fmull
es
pop
aam
adc
mov
jmp
in
sub
loope
lcall
pop
pop
mov
cmp
cld
pop
push
cltd
stc
jbe
insl
fistl
loopne
mov
mov
scas
or
xor
fistpl
test
xlat
xchg
popf
cmpsl
mov
fnstcw
loop
enter
sbb
and
xchg
jmp
pop
and
jbe
lea
adc
into
inc
dec
or
movsl
mov
or
jmp
xchg
imul
ret
shl
pop
sarl
testl
dec
sbb
pusha
aam
sbb
dec
pop
dec
pop
sub
mov
loopne
mov
jl
pop
pusha
dec
jmp
pop
in
pop
add
and
adc
pushf
jmp
sub
stc
jo
inc
nop
mov
lock
inc
cwtl
or
fisubrs
lcall
dec
outsl
loopne
jle
rclb
push
or
inc
push
pop
pop
or
cmc
insl
pop
dec
push
ficomps
cmp
sub
fisubrs
cmp
shl
fnstsw
cmp
test
psubw
dec
int3
push
mov
mov
mov
in
stc
push
mov
inc
sub
mov
aad
sbb
mov
or
inc
fistl
pop
xor
mov
icebp
rcrb
or
dec
mov
mov
pop
sbb
lock
adc
cli
cwtl
aad
imul
fmul
bound
dec
jmp
lcall
sti
mov
xchg
rclb
rcr
fsubp
mov
jge
sbb
aam
repz
inc
stos
adcb
fcmovbe
stos
jb
and
lock
jmp
dec
inc
lock
adc
out
pop
in
fidivrs
or
adc
insb
push
jmp
nop
pop
xchg
push
mov
shr
movsl
pop
and
sbb
cmp
ret
mov
mov
sbb
inc
loopne
loopne
aad
jns
into
addb
cmp
jns
pop
add
mov
inc
mov
push
jl
sbb
loope
les
mov
and
pop
ja
adc
push
loop
mov
mov
and
mov
or
push
xabort
loop
repz
pop
jp
sbb
jge
lret
mov
dec
notb
nop
je
mov
mov
loopne
jns
push
sti
xchg
jb
push
jle
mov
int
mov
mov
adc
mov
out
js
cmp
jns
sti
jmp
das
mov
and
pop
incl
mov
mov
mov
fldcw
bound
jmp
push
iret
cmp
aaa
and
and
lods
xor
or
imul
stos
push
fst
pop
cmp
shll
add
lcall
mov
and
fnstenv
push
rorl
pop
cltd
jne
shlb
rorb
push
into
mov
arpl
sti
dec
xchg
mov
aaa
mov
mov
sbb
frstor
push
fdivrl
sub
scas
sbb
ficoml
movsl
mov
jb
fdivrs
xchg
mov
test
stos
pop
cmp
dec
jmp
mov
jb
pop
popa
add
adc
outsl
subl
int3
popa
mov
lods
jmp
fisubrs
aas
fisubs
pop
jae
aad
jo
mov
lea
aas
shlb
sub
mov
mov
push
mov
mov
movsb
jb
movsl
fimuls
push
loop
adc
lock
xorb
into
push
mov
sbb
or
pop
add
cmp
or
xor
and
pop
or
push
pop
cmpxchg
cmpsb
jge
dec
sub
repz
sub
lcall
xor
jno
jmp
cwtl
dec
push
jo
mov
inc
fwait
ss
cmpsl
lahf
mov
jno
out
xchg
sub
push
sub
mov
inc
pop
add
dec
dec
dec
scas
jne
push
lahf
mov
pop
jmp
jae
cmp
insb
stos
pushf
jne
stc
mov
lock
inc
sub
in
xor
cmc
fisubrl
or
jmp
into
jbe
stc
rcrl
data16
call
dec
jmp
int3
arpl
jno
sub
shlb
test
insb
fisubs
aaa
and
cli
nop
mov
xchg
inc
inc
jo
inc
std
stos
nop
jne
and
repz
arpl
sahf
mov
jg
jae
cmp
ret
jo
mov
mov
jmp
insl
mov
scas
inc
inc
sbb
rcrb
fbld
xor
lock
add
movsl
jle
daa
xor
mov
int
mov
inc
and
out
mov
pop
mov
mov
xchg
and
test
out
dec
out
loop
mov
mov
sbb
mov
popa
mov
lea
loopne
jmp
fwait
jle
nop
inc
mov
aaa
or
shrl
sbb
imul
loopne
jmp
mov
xor
lret
xor
fcomi
or
stos
mov
adc
sarb
xor
test
sbb
push
sbbl
add
dec
mov
mov
mov
aaa
cltd
test
dec
pop
add
js
cltd
or
jno
int3
stos
adc
popf
imul
inc
pop
cltd
lea
xlat
mov
sbb
push
mov
fstps
cltd
jge
outsl
mov
faddl
cltd
adc
inc
scas
mov
and
push
and
add
xchg
push
inc
pop
ret
add
dec
scas
mov
xor
jns
and
les
add
inc
jp
push
in
push
or
aam
js
rcll
inc
out
in
and
push
adc
pop
insl
sbb
addb
sub
mov
mov
aas
cltd
push
test
mov
dec
push
sbb
mov
sub
mov
cltd
ljmp
xor
adc
pop
push
gs
pop
dec
xor
mov
inc
aaa
pusha
pop
push
repnz
and
sbb
cmp
push
js
cltd
fwait
pop
and
or
push
and
and
cmp
outsl
sbb
andb
xchg
popa
cltd
push
mov
push
pop
cltd
lea
push
dec
mov
cltd
lret
enter
sbb
fwait
shlb
mov
mov
shll
loopne
cmp
dec
lret
or
cltd
scas
in
cli
inc
rol
aaa
pop
cltd
ss
or
cltd
aas
scas
sub
fwait
mov
xor
daa
fcomps
pop
adc
enter
add
xor
aaa
mov
ja
ss
pop
and
xchg
xor
fdivrp
mov
js
inc
nop
mov
sbb
cmp
jecxz
gs
sbb
xor
cltd
loop
arpl
push
dec
lcall
in
sub
mov
xchg
iret
cltd
mov
aas
lods
pop
pop
xlat
mov
cli
mov
in
les
mov
leave
cltd
push
das
jbe
ss
lret
daa
stos
sti
cmc
dec
cli
out
push
mov
cltd
push
lods
fwait
adc
jp
and
fwait
xchg
daa
xor
lods
cmpsb
icebp
adc
call
mov
cltd
hlt
push
or
push
sub
inc
movsl
scas
mov
xchg
dec
sbb
aam
xchg
test
jb
cltd
push
xor
fiaddl
pop
jg
push
xorb
dec
lret
sbb
lods
push
jge
dec
cltd
inc
fdivrl
fwait
insl
mov
add
jmp
fwait
scas
inc
repz
pop
std
push
vmovhps
scas
dec
mov
lods
cltd
sar
enter
int3
xchg
stc
xchg
jl
out
pop
dec
cmc
pop
or
cmp
arpl
out
pusha
sbb
or
aam
lret
or
repnz
jecxz
adc
xor
ret
cltd
enter
repnz
cwtl
setns
ja
ss
aas
jmp
sub
mov
push
ret
mov
cltd
dec
mov
dec
ds
cwtd
mov
adc
scas
fisubrl
jnp
pop
pop
fnstcw
xor
push
fwait
rcrb
and
or
inc
push
es
mov
cltd
cmp
inc
dec
cltd
inc
das
lock
and
mov
loope
imul
cltd
dec
cli
aam
sub
adc
push
mov
fsubl
cltd
or
sahf
out
popa
inc
cli
mov
or
jl
mov
fdivrs
sub
cmpsl
cmc
in
sbb
jge
xchg
jo
xorl
pusha
mov
jp
add
push
xor
mov
loope
mov
shll
push
mov
adc
cwtl
in
inc
jge
dec
mov
push
mov
aaa
jb
cmp
sbb
cld
jno
push
pop
sub
fsts
cltd
sub
pop
jmp
mov
pop
pop
shll
or
push
cltd
and
mov
mov
fstps
cltd
add
scas
addr16
test
adc
dec
loopne
jae
and
push
xchg
rol
adc
mov
stc
xor
lods
cltd
ds
mov
inc
cltd
insb
leave
and
icebp
or
ficompl
loopne
push
cltd
jmp
insb
ret
adc
cmpsl
and
lcall
and
out
loop
mov
pop
aad
sbb
nop
rolb
lock
push
pushf
xchg
out
jns
out
mov
cltd
mov
dec
je
mov
pop
stos
push
pop
xchg
cltd
dec
cmp
or
lods
test
mov
fsubs
fstpl
jnp
lcall
adc
loopne
inc
inc
cmpb
xchg
imul
and
xchg
aad
subl
xchg
mov
mov
mov
stos
sbb
mov
jne
mov
dec
cmp
cltd
cli
data16
popf
cltd
roll
cltd
cwtl
dec
stc
cmp
je
loop
lret
xchg
cmp
cltd
test
dec
xchg
cltd
in
inc
jnp
and
sbb
cmp
lock
stos
and
imul
jl
lar
dec
ljmp
mov
mov
push
jmp
mov
mov
fisttpll
or
stos
mov
pop
cmpsb
iret
scas
xor
adc
push
push
mov
mov
mov
gs
insl
icebp
jns
mov
and
pop
aas
sbb
cltd
xchg
iret
cmpsl
dec
sbb
jp
add
scas
das
std
jmp
jae
cltd
xchg
dec
lods
mov
pop
popa
and
and
inc
mov
cltd
cmp
mov
mov
popa
shll
mov
out
imul
fwait
push
pushf
xchg
das
add
mov
and
cltd
out
ret
popf
sbb
push
and
aas
les
lcall
mov
pusha
negl
pop
or
xchg
dec
stc
cltd
sub
pop
cmp
negl
mov
and
sub
popf
cltd
jns
jmp
xor
add
sbb
jae
in
xchg
inc
dec
rcrb
jb
xor
loop
outsl
lret
pop
cmp
xchg
inc
mov
cmp
fimuls
sub
mov
cwtl
cltd
adc
mov
xchg
aas
sub
xchg
pusha
inc
pop
cmp
bound
cmc
sbb
repz
mov
sbb
cmp
jl
mov
push
movsb
add
push
nop
cltd
pop
out
sbb
into
mov
mov
cmp
sbbl
stos
stos
cltd
fstps
in
pop
lahf
add
in
scas
xor
sahf
flds
mov
stos
mov
mov
les
pop
jmp
mov
shrl
cmpsl
xchg
addr16
and
and
incb
mov
mov
adc
int
add
mov
xor
ja
xlat
adc
cmpsl
push
lret
adc
mov
dec
mov
xchg
and
lret
enter
mov
mov
inc
pushf
cltd
xor
in
lret
sub
mov
jmp
leave
cltd
dec
icebp
lret
cld
xor
fs
ficompl
or
in
cltd
push
dec
sti
sub
xchg
dec
push
sarb
mov
out
cltd
out
jns
into
mov
inc
inc
cltd
jmp
xchg
pop
xchg
lds
addr16
daa
mov
loopne
pop
adc
lret
push
xchg
fsubrs
xchg
test
cltd
fidivrl
data16
inc
lret
mov
xor
add
xchg
or
ja
stos
jl
rcrb
push
call
sbb
int
test
fdivp
adc
cmpsl
shr
inc
repnz
sbb
cltd
pop
cmp
mov
or
mov
sti
cmpsl
lock
xchg
push
mov
popa
push
int
icebp
out
dec
push
fdivs
rcl
cltd
sub
jnp
inc
add
sbb
pop
push
aam
mov
clc
sub
or
mov
push
cwtl
ret
movsb
cmp
sbb
jb
dec
mov
mov
mov
out
and
add
in
pop
xchg
fdivrs
ja
jns
loopne
dec
mov
add
jl
mov
mov
mov
jmp
clc
ds
fwait
inc
jns
dec
aad
mov
rorb
push
in
aad
mov
jmp
cmp
mov
mov
sti
out
cmpsl
ss
jmp
jle
data16
add
stos
xchg
pop
xor
orl
jmp
pop
jne
push
fs
ret
arpl
lahf
in
xor
scas
jbe
cmp
ss
mov
adc
fisubrs
lods
xchg
hlt
stos
pop
mov
mov
push
outsl
imul
push
test
pop
data16
jbe
push
daa
and
xchg
mov
jne
add
hlt
mov
and
cmp
movsb
pop
mov
inc
jne
mov
and
inc
mov
xchg
jo
outsl
lods
adc
mov
jbe
pop
ja
and
icebp
rcrl
mov
mov
repz
sbbl
sub
cltd
stos
push
or
aam
bound
add
outsl
scas
fcomps
lock
aaa
xor
mov
mov
jmp
pop
and
sbb
xorl
loopne
pop
lock
cmc
push
xchg
push
adc
stc
push
push
jae
shll
mov
frstor
sub
jmp
insl
jle
test
add
aam
cltd
sub
ret
mov
out
pop
movb
jns
xchg
push
loope
cltd
and
or
inc
push
xchg
stc
mov
test
dec
push
jo
daa
in
push
mov
pop
aad
push
out
jmp
add
mov
jmp
test
cmp
imul
leave
sti
jo
sahf
lds
xor
cs
mov
aad
or
fldcw
cmpsb
in
scas
fs
inc
xchg
in
xchg
sbb
pop
jg
jle
test
or
adc
xchg
daa
cmp
xchg
dec
mov
in
push
pushf
jmp
movsb
mov
push
push
cmc
xor
dec
jae
mov
aad
mov
fimull
int3
loope
mov
push
in
test
notb
cmpb
dec
push
jns
jno
pushf
fwait
push
mov
out
or
add
inc
cs
pop
push
jmp
xor
xchg
jmp
aaa
push
imulb
aaa
sbbb
ljmp
jmp
movsb
movsl
mov
xchg
xchg
jl
and
loopne
rolb
xorl
dec
pop
adc
loop
mov
loop
int3
enter
icebp
mov
std
aaa
sub
jge
xchg
in
mov
jecxz
adcl
rcll
push
mov
mov
cmpsl
lret
das
arpl
push
adc
int3
jbe
aam
sub
add
push
gs
mov
das
push
jmp
lret
cmp
stos
sbb
mov
ficoml
sbb
mov
jmp
inc
mov
fs
mov
mov
test
dec
stos
stos
mov
dec
jmp
fists
push
mov
sbb
mov
pushf
mov
icebp
movsl
mov
negb
cmp
xchg
andl
fisubs
bound
cli
push
sahf
lds
cld
imul
jecxz
sub
shlb
in
incl
fsts
push
mov
jo
push
adc
mov
push
test
std
mov
scas
jmp
inc
or
dec
cmpsb
add
push
xor
mov
rol
in
and
mov
xor
sbbb
inc
fstpl
jp
cmc
push
or
fisttps
adc
loope
push
aaa
pop
xchg
sub
pop
cmpsl
and
mov
andps
jnp
mov
gs
popa
add
sbb
shr
add
push
pop
xor
pop
mov
fnstenv
pop
stos
cmp
push
fidivs
in
mov
fcoml
insl
inc
leave
outsl
bnd
stos
std
mov
test
mov
lods
and
cmp
std
stos
xor
fdivrs
lret
jno
stos
or
rcr
cmpl
push
ret
into
in
cld
push
and
xor
test
xchg
int3
jne
sbb
mov
shr
mov
mov
pop
movsb
inc
lcall
adc
orb
jae
movsl
cmpsb
push
out
movsl
mov
into
ss
ret
dec
lock
jmp
shr
mov
sti
sub
jae
add
inc
cmp
push
push
ficomps
jmp
lahf
mov
loopne
mov
jmp
cmp
call
push
ret
mov
push
mov
cmp
int3
popa
mov
enter
sub
subb
push
xchg
leave
pop
xor
fsts
push
add
lcall
adc
mov
aam
push
lock
jbe
mov
cwtl
or
in
mov
adc
imul
je
sti
jmp
dec
dec
push
mov
f2xm1
or
fisubrl
cmp
or
xchg
cmp
lods
push
sbb
and
mov
mov
pop
sbb
jmp
pop
dec
stos
pop
mov
adc
pop
pop
scas
movb
push
test
scas
into
lock
les
in
sub
sbb
fucomi
movsb
adc
push
jmp
nop
int3
int3
dec
mov
pop
ret
cmc
pusha
mov
into
add
int
mov
sbb
xor
lods
jmp
insl
mov
andl
fsts
sahf
cmp
xchg
imul
adc
mov
ds
dec
and
jl
cmp
sub
cmpl
call
in
adc
jmp
aam
jmp
aaa
xor
lock
pop
pop
adc
cmp
ss
popa
out
jmp
or
aaa
lock
add
call
fsubp
dec
insb
les
push
jmp
cmpsb
push
xchg
mov
nop
popa
enter
and
sbb
aam
sbb
shrb
dec
jmp
jo
and
aam
ret
mov
mov
cs
adc
iret
je
and
popf
sbb
pop
inc
je
adc
push
in
loopne
inc
popa
adc
clc
outsl
outsb
test
fistpll
dec
arpl
fisttpl
lea
and
push
pop
or
test
sub
jmp
xchg
popf
fwait
cmpsb
adc
lcall
cmp
fidivl
jmp
inc
in
in
imul
popa
aad
sahf
xor
xchg
andb
sub
pop
lock
in
in
addb
lret
mov
cmpsl
pushf
and
in
mov
mov
pushf
dec
inc
test
xor
push
test
mov
in
inc
sbb
jb
push
mov
add
test
arpl
jmp
stos
pop
jmp
rorb
cli
mov
rcrl
out
inc
xlat
or
pop
jge
or
dec
gs
lds
mov
jmp
std
test
sbb
stos
ret
arpl
mov
inc
mov
popa
push
adcb
scas
fisttpll
sahf
sti
shll
jg
sbb
add
inc
lea
loope
ljmp
aaa
popf
ret
mov
and
testb
pop
sbb
jno
cmp
movsl
lock
js
jne
fisttps
fwait
mov
mov
dec
sub
pop
stos
aam
adc
add
xor
adc
jno
sbb
sbb
cmp
jae
adc
dec
lahf
adc
arpl
leave
xchg
loope
dec
jae
cmc
popa
add
scas
jb
outsl
sub
adc
and
fwait
lock
sahf
sbb
and
shr
jecxz
push
cmp
pop
ret
dec
aaa
jp
cmpsl
mov
sub
dec
test
add
dec
sub
ljmp
in
and
push
pop
popa
xchg
cmc
sti
jge
add
aam
sub
push
daa
mov
lret
aaa
nop
and
ffree
data16
pop
cld
scas
movsl
ret
inc
push
and
outsl
jecxz
int
lret
inc
xor
dec
into
xorb
adc
jp
loopne
push
jp
pop
adc
mov
add
sbb
push
lahf
cmc
les
dec
bound
and
fwait
stos
or
push
add
xchg
lahf
inc
ljmp
mov
rcrb
mov
das
addr16
sbb
leave
dec
loopne
gs
in
cmp
loope
push
lret
dec
xchg
fisubs
jb
xor
out
imul
test
jns
jmp
fcompl
mov
push
test
imul
fdivl
out
in
jns
jb
mov
stos
fildl
add
push
cli
out
in
popa
mov
loop
into
cmp
mov
aas
jb
add
sub
add
out
jmp
into
mov
lods
fcoml
sbb
aas
sarl
sbb
dec
enter
shrb
dec
insl
scas
in
pop
pusha
shlb
jg
and
xor
pusha
leave
push
jmp
scas
mov
mov
jge
push
or
mov
std
mov
ficoms
in
sub
jb
dec
mov
cmpsl
xchg
ficompl
mov
add
andl
push
lods
cmp
icebp
lods
adc
cmpsb
sbb
pop
pop
or
jmp
mov
and
mov
fcmove
cmp
mov
cmp
lcall
ss
in
inc
mov
aas
and
mov
arpl
xor
pop
pushl
inc
cmp
xor
jo
sub
enter
loop
into
pop
into
jl
xchg
push
push
in
or
test
adc
mov
lds
cmpb
ret
in
sub
mov
mov
imul
sub
cwtl
daa
jg
enter
aaa
scas
pop
sub
jmp
or
fisubl
inc
test
xlat
ss
inc
cs
movups
xchg
and
rcrb
inc
lcall
or
sbb
mov
pop
push
mov
dec
mov
insb
jns
mov
sub
sbb
loope
out
mov
iret
xchg
mov
dec
cmp
js
inc
jo
mov
insl
jne
pop
mov
cmp
popa
or
pop
push
cmc
pop
ret
xchg
xor
rcrb
pop
xor
fwait
sbb
or
dec
aas
jno
stos
jl
mov
popf
lock
mov
gs
stos
jmp
adc
imul
out
aas
xchg
jmp
outsl
mov
xchg
mov
jno
jmp
ffree
pop
enter
pop
mov
movlhps
jge
xor
test
or
add
cmp
sub
inc
das
cwtl
jl
sbb
add
adc
push
sar
pop
movsl
lock
xchg
inc
push
cmp
ret
mov
mov
lahf
je
push
inc
jmp
loop
enter
fwait
jge
jmp
test
loopne
lret
mov
imul
jbe
mov
leave
mov
xchg
push
mov
cmp
jb
add
pop
sarl
jl
aas
jbe
adcl
sahf
mov
shlb
or
in
cmovl
inc
outsl
adc
pop
push
in
inc
xchg
lds
xor
fisubrl
test
push
add
repnz
jb
or
sub
xchg
pop
je
sub
les
cmp
adc
test
mov
xor
mov
cmp
jmp
insb
mov
jecxz
jle
sarb
loopne
mov
push
xchg
icebp
shll
mov
jg
sti
jg
scas
cmc
sbb
adc
mov
mov
and
cmp
call
push
subb
mov
lahf
mov
mov
mov
dec
jmp
leave
notl
sub
mulb
outsl
int3
mov
xchg
mov
sub
int3
sbb
xor
movsl
leave
xchg
cmp
pop
xchg
pop
bound
cmp
stc
lahf
mov
adc
sbb
das
cmp
adc
adc
cwtl
pop
inc
xchg
mov
data16
cltd
or
lock
jne
cwtl
mov
pop
jne
stos
jmp
adc
mov
xchg
mov
inc
and
movsb
shlb
rcrw
jns
cmp
mov
int3
call
and
sbb
aaa
cltd
cld
es
lock
xchg
dec
mov
inc
push
and
xor
cmpsl
andl
popa
and
daa
xor
jmp
cmpsb
and
jno
out
movsl
jmp
jp
addl
adc
out
or
jmp
test
cmp
sbb
loope
or
loopne
pop
fidivl
lahf
hlt
js
scas
test
adc
imull
insb
cmp
lcall
dec
mov
mov
shl
pop
xchg
mov
mov
sbbl
loope
add
mov
jmp
push
hlt
icebp
pop
and
inc
fmuls
jmp
idivl
and
arpl
icebp
inc
sbb
aad
jmp
lock
jecxz
push
popl
pusha
mov
mov
or
jns
sti
insb
pop
and
inc
pushl
mov
hlt
cmp
mov
sub
xchg
shll
inc
bound
cltd
insb
push
pop
sbb
in
cmp
jnp
and
stos
and
daa
cld
lods
mov
pop
jg
push
jae
jl
loope
push
inc
xchg
xchg
stc
or
mov
push
sub
inc
jne
jge
add
jne
paddd
or
xchg
mov
push
mov
je
fbld
pusha
out
cmp
mov
movl
and
cmp
xchg
pop
mov
lahf
test
push
in
lahf
sub
outsl
sbb
mov
notl
xchg
push
cmp
loopne
mov
pusha
mov
aaa
js
or
mov
mov
sbb
mov
xor
icebp
pop
inc
xchg
dec
inc
push
jge
jne
push
or
icebp
cld
dec
stos
inc
mov
sub
rol
mov
loopne
or
mov
mov
leave
cmpsl
nop
mov
inc
and
out
aas
popa
in
adc
add
test
xchg
or
les
cmp
loopne
fstps
movsl
pusha
pop
adc
push
and
jns
aas
imul
mov
sub
pop
mov
jne
mov
stos
test
pop
unpcklps
ds
pop
mov
sbb
inc
dec
xor
xor
mov
xor
jae
adc
jbe
mov
jmp
repnz
pop
mov
addr16
or
lds
jne
in
movsl
lock
and
lds
jbe
lds
lods
and
mov
cmp
jp
xchg
or
push
outsl
cmc
adcl
push
subb
shrb
stos
mov
fisubs
or
mov
rorb
cwtl
call
push
cwtl
inc
adc
call
jbe
inc
xchg
xlat
icebp
je
mov
hlt
sbb
jnp
mov
aaa
jmp
loopne
lcall
lcall
xchg
mov
pop
sbb
repnz
clc
mov
xor
adc
setp
adc
sahf
xor
in
int3
daa
jle
hlt
add
mov
rep
cmp
icebp
push
inc
stos
sbb
icebp
jmp
int
xchg
push
loopne
out
popf
ss
jmp
adc
arpl
scas
sbb
test
pusha
sbb
jnp
and
scas
jb
sbb
nop
lods
sbb
or
xchg
mov
pop
in
dec
jae
cmpb
sub
out
inc
dec
stos
sarb
stos
cmp
sbb
mov
loopne
push
mov
jl
inc
push
arpl
or
push
mov
adc
out
inc
scas
mov
jnp
xchg
push
cli
popa
xor
and
dec
fisttps
shr
mov
or
cmpsl
test
into
fstps
jbe
fs
andl
mov
mov
sbb
mov
cwtl
jmp
jg
dec
int3
mov
and
sub
shrl
shrb
jmp
inc
pusha
mov
adc
mov
fmull
cwtl
xchg
jmp
add
add
xor
cs
frstor
sbb
into
push
cmp
add
fwait
lcall
roll
sti
pop
rcrl
notb
stc
inc
jmp
mov
insl
filds
dec
sub
testl
das
xor
inc
jne
fimuls
lea
fbstp
mov
cmp
rcr
les
std
jge
stc
cmp
mov
loop,pn
in
pop
cmp
xor
out
push
push
mov
push
sbb
or
jmp
rolb
cmovns
ljmp
xchg
inc
mov
jle
shll
pop
in
cmp
iret
mov
xchg
sbbb
lahf
bound
push
or
fisubrs
je
hlt
lret
dec
push
imul
adc
adc
adc
fwait
xchg
mov
jnp
ljmp
add
adc
pop
cmp
mov
rcrb
fdivl
jmp
xchg
cli
push
iret
movsl
test
rcl
and
addb
icebp
jno
repnz
aaa
adc
aam
cmp
inc
lcall
fwait
mov
adc
mov
push
int3
jl
push
sahf
xchg
sbb
mov
mov
or
or
cmp
test
andl
andl
cmpsb
int3
mov
pop
push
jmp
cmp
cmpsb
pop
xchg
lods
cmp
mov
ds
fsubp
xchg
sahf
mov
sub
xchg
outsb
dec
and
notl
in
cltd
push
adc
adc
mov
jmp
pusha
cltd
jns
js
outsl
xor
jl
sti
sbb
arpl
addr16
aas
addl
adc
dec
sbb
data16
loopne
jg
sub
into
cmp
shlb
pop
xchg
add
push
dec
das
pop
shlb
sbb
pushf
imul
inc
xchg
fwait
mov
repz
outsl
sarl
fsubrs
inc
and
cmp
mov
movsl
sbb
outsb
or
push
jmp
or
adc
lods
xchg
and
lret
in
sub
scas
cltd
pusha
cmp
insl
and
xchg
ja
cmpsb
adc
fsubrs
pop
jae
adc
repz
xchg
mov
insb
add
shlb
pop
mov
xchg
xchg
addr16
shll
popf
aad
shr
or
jl
rcll
ret
cs
ja
cmp
rorb
fwait
cmpsl
enter
fidivs
cwtl
pop
cmp
or
inc
ss
hlt
mov
mov
lock
or
push
xor
sbb
sub
pushf
repnz
sub
jg
xchg
sahf
fadds
or
mov
shll
sbb
in
js
sbb
stos
jb
scas
xor
dec
rorb
outsl
dec
adc
inc
xchg
cmp
movsl
xor
inc
into
and
ret
mov
aaa
pop
inc
add
dec
inc
lahf
or
stos
rorl
or
shlb
mov
push
ss
mov
inc
mov
cmp
arpl
enter
aaa
and
mov
in
pop
es
mov
test
lret
fsubrp
jg
lods
dec
cmc
pushf
or
sarl
and
pop
xchg
adc
mov
pop
inc
aad
mov
jmp
mov
adc
xor
push
add
adc
mov
lahf
in
inc
lods
cltd
mov
mov
adc
xlat
and
cli
lock
jmp
xor
icebp
enter
das
inc
stos
shl
aas
push
push
je
and
lods
lds
mov
push
loope
aaa
push
dec
xorb
lock
rorl
sub
or
ret
inc
std
mov
out
mov
and
sub
cmc
popl
jnp
in
stc
mov
stos
test
cmpb
or
xchg
les
jmp
and
mov
lcall
test
and
mov
xchg
aam
out
jbe
mov
int3
or
cmp
xchg
xchg
jnp
push
mov
adc
loopne
cmp
dec
aam
and
lock
pop
or
and
adc
and
rcll
mov
and
popa
or
mov
fimull
or
in
xor
mov
pop
sahf
xor
mov
xor
adc
gs
cmp
outsb
xor
pop
cmp
jmp
dec
dec
lahf
and
lock
push
shlb
sbb
cmp
fnstcw
sub
outsl
mov
xchg
ret
das
inc
sbb
add
ljmp
lret
xor
popl
cmp
jmp
data16
mov
and
test
test
and
icebp
inc
into
cmp
leave
cmp
lahf
jmp
mov
xlat
mov
mov
jmp
cmc
sub
insb
jmp
dec
sti
pushf
sbb
adc
enter
sahf
sub
mov
jmp
iret
int
rolb
dec
and
xchg
mov
stos
dec
xlat
hlt
mov
cmpsb
or
cmp
arpl
jno
add
cmp
in
pop
aas
sub
lds
imul
mov
stos
jmp
shll
jb
cltd
push
mov
fs
mov
aaa
pop
push
xchg
jl
arpl
in
lcall
mov
imul
push
pop
adc
pop
sbb
fsubl
xor
ss
stos
adc
jmp
xor
mov
dec
or
sub
insb
cmc
cmp
sti
ret
jmp
stos
int
andl
stc
mov
push
pop
fisubs
incl
pusha
enter
subb
inc
mov
fildll
js
das
cmp
pop
jnp
mov
mov
mov
sahf
sub
dec
in
adc
cmc
test
test
or
push
scas
mov
xchg
adc
or
xorb
pop
or
push
sub
xor
mov
cs
cmp
icebp
test
pop
jl
sbb
sbb
insl
imul
xor
push
mov
adc
outsl
jmp
aas
orb
cmpsl
sbb
sub
jbe
fidivrs
and
lock
cld
aaa
ret
into
inc
push
aaa
std
fs
cld
dec
jmp
add
icebp
inc
stos
std
jmp
loop
pop
lods
bound
test
cmpsl
lds
les
loopne
insl
int3
cmp
jge
and
int
mov
jb
dec
dec
lcall
mov
lcall
enter
sub
movsb
ds
dec
push
pop
sub
outsb
test
leave
fsubs
call
cmp
insb
stos
cs
arpl
mov
pushf
mov
aam
lcall
sbb
xor
jnp
dec
sbb
js
xor
setne
jge
in
ds
icebp
pop
fcomi
jmp
es
adc
fcompl
fs
sub
movsl
insb
lds
sbb
add
mov
dec
ret
mov
pop
adc
jae
mov
enter
loop
pop
mov
cmp
dec
xchg
mov
dec
fld1
popf
lds
add
and
js
mov
lods
inc
xor
adc
push
les
mov
pop
stos
dec
cmp
pop
sbb
cmp
stos
fiaddl
adc
sub
rep
jns
sti
call
int
outsb
pop
sub
pop
test
mov
sub
mov
ja
addl
jae
popf
add
inc
jge
je
dec
sub
mov
in
insb
loopne
mov
std
jno
push
fcmovu
lds
arpl
mov
outsl
movsl
lock
cmpsw
push
inc
jmp
jns
jmp
aaa
push
rolb
popa
mov
sub
cltd
into
lds
dec
xchg
or
mov
pop
movsl
push
enter
lahf
iret
test
cmpsl
mov
or
fcmovbe
rolb
jle
nop
loopne
lock
pop
jmp
adc
testb
jnp
xor
cltd
mov
xorl
xor
daa
pop
es
inc
push
adc
aaa
mov
repz
push
aas
mov
fs
dec
jg
scas
cmpsl
icebp
scas
cmp
sti
aam
xchg
cltd
lea
adc
cmp
push
cltd
int
jb
andl
mov
fsts
hlt
push
cli
pop
push
lcall
lcall
lods
and
cltd
movsl
push
insl
cld
cltd
add
mov
mov
scas
loop
rcrl
inc
push
or
sti
cltd
mov
cltd
jp
icebp
dec
or
cmpb
loop
and
retw
mov
mov
dec
jmp
movsl
pop
lahf
sbb
pop
xor
rcl
cmp
dec
xchg
iret
je
push
sahf
push
or
sbb
call
add
xor
gs
pop
psubsb
sub
inc
cltd
push
mov
dec
mov
pop
mov
or
jl
xchg
mov
shlb
sub
adc
in
lds
push
lods
mov
es
test
ret
jmp
push
scas
pop
cltd
add
xor
outsl
pusha
imul
or
lahf
sbb
je
mov
imul
repnz
dec
pop
fldl2t
lret
sub
inc
dec
scas
inc
cltd
test
jns
cmpsl
movsl
pop
sbb
xor
mov
mov
jecxz
sarb
pop
pop
jle
cltd
imul
add
push
int3
dec
cmp
sbb
cld
iret
cmp
daa
mov
jecxz
jp
jb
inc
cs
sbb
mov
into
addr16
scas
push
arpl
icebp
ret
jne
sbb
jno
pop
mov
mov
loop
outsb
fisttps
sbb
gs
mov
call
xlat
pop
lea
lahf
sti
jmp
mov
lret
mov
cltd
pop
ret
sbb
pusha
sub
add
and
jle
cltd
test
es
mov
sub
mov
and
hlt
pop
mov
in
cmpsb
mov
pop
cmp
sub
xor
repnz
pushf
and
cltd
sbb
notl
push
fs
lcall
xor
pop
and
test
pushf
les
cltd
sbb
sub
cltd
dec
inc
sub
jns
movsb
pop
mul
ja
sbb
dec
xor
mov
mov
sti
iret
stc
cmp
fsubs
cmp
mov
cltd
ja
or
mov
push
and
xchg
mov
stos
add
push
cltd
sahf
cmp
pop
cmp
test
fldl
mov
cltd
lea
js
scas
sub
pushf
cmpsl
add
xchg
cltd
and
inc
pop
movsl
lcall
out
and
pop
ficoml
jge
sub
mov
cltd
pop
xorb
cltd
addb
movsl
cltd
es
ds
or
and
nop
test
mov
iret
mov
jl
pop
cltd
mov
pop
mov
cmc
jb
idiv
leave
imul
xchg
insl
pop
fidivs
cltd
enter
rcll
add
imul
mov
sbb
cmc
push
mov
push
xchg
jg
jecxz
cmpl
repz
ja
stos
je
xchg
sbb
or
and
iret
loopne
dec
and
jns
adc
cld
imul
xor
jg
ret
andb
clc
adc
das
adc
jmp
cs
jl
or
or
pop
pushf
cltd
adc
shrb
cwtl
xchg
cmpb
mov
outsb
push
cltd
lds
jl
cltd
add
mov
movsl
das
pop
dec
jb
jbe
cmp
scas
test
fistl
add
sahf
or
mov
adc
adc
cltd
push
xor
out
mov
sbb
sub
xchg
nop
fldenv
movsb
in
mov
cltd
sub
call
or
leave
sarl
pushf
add
jl
cltd
out
std
mov
movsl
cmpsl
or
repz
jmp
fidivs
mov
or
sbb
push
pop
fldl
cmp
push
pop
in
aaa
sub
das
mov
xchg
cltd
mov
jle
outsl
scas
aas
mov
xchg
adc
adc
jge
stos
stc
cmc
cltd
xor
push
repnz
mov
sbb
cmp
mov
testl
out
mov
cmp
xor
mov
test
ret
jp
je
movsb
sbb
shll
cltd
fs
testl
hlt
xchg
clc
jb
mov
cltd
enter
jne
jp
fisttpll
inc
mov
or
jb
jo
mov
outsb
mov
fsts
push
movsl
jmp
mov
mov
iret
cmpsb
popa
fisubrl
in
add
cmp
xchg
mov
call
insl
mov
cltd
scas
dec
inc
inc
adc
pop
pop
mov
and
stos
mov
mov
fildl
rcrl
fidivrl
stos
cmpsl
cmc
xchg
sub
push
iret
jle
cltd
faddl
xorl
pop
leave
call
test
loopne
push
push
cltd
cmp
cli
push
xchg
xor
xor
mov
test
icebp
dec
inc
pop
sbbb
dec
cltd
cmp
mov
lds
out
xor
test
cmp
sub
jno
jecxz
iret
sbb
sub
xchg
je
add
xchg
scas
xchg
fisubrl
adc
push
and
js
arpl
xchg
lods
push
out
inc
fwait
mov
jns
aad
shlb
jno
mov
aas
pop
xor
adc
in
shll
dec
push
sahf
imul
or
push
jae
fldl
cmpsl
sbb
pop
repnz
mov
icebp
cmp
jae
out
jo
popa
cltd
jno
mov
pusha
lods
mov
pop
adcb
fsubp
sti
and
iret
les
add
add
cltd
pop
mov
jne
cltd
mov
and
xor
flds
jl
mov
cmp
sysret
adc
inc
pop
xorb
cmp
mov
loope
out
cwtl
cltd
add
and
cltd
push
les
daa
ja
dec
cld
cltd
xor
pop
into
cmp
scas
inc
cltd
xchg
add
cmp
pop
lea
push
cltd
aas
xchg
xchg
enter
dec
fwait
jmp
and
adcl
add
pop
movsl
std
daa
dec
imul
or
push
cltd
sbb
jae
dec
push
xchg
cltd
jle
mov
inc
cltd
jl
insl
addr16
jae
cltd
jle
xchg
movsb
mov
pop
xor
xchg
out
mov
mov
out
mov
loope
repnz
sbb
in
cltd
cmpl
cmpsb
lods
cmp
ficomps
loopne
data16
cltd
mov
cmpb
movsb
out
call
sub
cltd
iret
hlt
and
sarb
cltd
cmp
fmuls
daa
pop
cltd
int
inc
jge
bound
cmp
in
cltd
aam
popf
sbb
cmp
cltd
inc
xchg
addr16
iret
bnd
cli
sahf
push
cltd
outsb
jp
push
and
fwait
xlat
add
cmpl
sub
or
dec
cltd
push
shll
notl
cmc
mov
cltd
fcomps
sub
xor
cltd
jl
sbb
push
cmp
cmpsl
test
cs
lcall
fsts
jno
add
adc
int3
scas
inc
sti
adc
add
cmp
and
scas
xor
into
add
mov
daa
sub
fld
jg
mov
in
rcl
pop
cltd
sub
push
daa
xchg
dec
es
scas
imull
lods
negb
add
mov
mov
mov
addr16
int
mov
xchg
lahf
add
mov
or
and
jo
mov
mov
into
push
sbb
sbb
ja
insl
les
movsl
lret
lock
adc
inc
sbb
mov
je
mov
lock
dec
jg
mov
imul
je
lods
dec
mov
testb
stos
jmp
dec
mov
sbb
cmp
push
popf
ja
cli
mov
xor
loop
xorb
cmpsb
mov
dec
mov
test
jb
into
mov
fmul
push
mov
and
movsl
or
cmp
ret
dec
mov
jl
aas
sbb
sbb
lock
mov
frstor
lods
sub
inc
jo
sbb
cltd
test
pop
cmpl
inc
jmp
xor
push
orb
push
imul
jne
cmpsb
ret
add
or
inc
daa
dec
mov
or
or
cmp
aaa
cmpb
int3
cmp
mov
adc
sbb
mull
jmp
fdivrp
popf
dec
jno
xchg
push
lods
xchg
loop
cmc
mov
xor
jmp
lods
pop
sbb
cmp
jg
fdivrs
fildl
mov
jle
cs
jns
fidivrl
ljmp
into
arpl
sbb
adc
mov
push
jmp
mov
lock
mov
jmp
pop
add
outsl
imul
mov
sub
mov
pushf
into
mov
fistl
adc
js
stos
push
shr
mov
mov
adc
sub
jnp
dec
mov
cmpsl
and
jmp
into
fucomp
out
xor
and
idivb
adc
loope
and
stos
jge
pop
dec
xor
adc
sti
enter
lock
ss
xor
inc
jmp
outsl
xor
xlat
fldcw
adc
sbb
ret
jecxz
fwait
idivl
mov
sbb
inc
push
movswl
and
movsl
jle
fwait
and
jo
dec
popa
jbe
inc
mov
mov
add
or
setnp
add
ds
test
mov
mov
in
push
pop
stos
mov
mov
pop
push
xchg
xor
mov
aas
ljmp
mov
add
imul
lods
sbbl
sti
cwtl
imul
bound
outsl
push
mov
adc
xor
repz
inc
add
daa
shl
stos
and
jnp
call
jge
jecxz
jbe
mov
test
in
cmp
and
out
mov
push
clc
mov
mov
jmp
insl
sub
aam
and
mov
dec
dec
ficoml
and
sbb
add
pop
insb
cmpsl
push
pop
mov
jmp
jecxz
mov
cltd
fists
jmp
jno
call
inc
out
mov
stos
xor
movsl
add
outsb
clc
fists
mov
sub
imul
mov
jmp
rcrl
adcl
inc
ja
sahf
jmp
loope
mov
inc
adc
bound
pop
pop
mov
xchg
mov
pop
incl
xchg
jmp
adc
bound
lret
push
scas
roll
mov
rcl
fmuls
cmp
pop
hlt
movsl
jno
shll
xchg
sbb
jne
xor
shlb
inc
jbe
jmp
sub
mov
mov
or
loope
and
sahf
pop
aaa
add
pop
std
roll
xor
xchg
mov
adc
cmp
inc
fsubl
dec
insl
sbb
daa
fiaddl
movsl
cmpsb
adc
dec
or
enter
imul
gs
or
scas
int
sub
inc
dec
add
fcompl
xor
inc
sti
mov
lock
cmp
xor
ja
inc
icebp
push
push
aad
add
sbb
ret
push
mov
shll
push
cmp
jno
fiadds
xor
xchg
xchg
stos
sbb
jmp
imul
sbb
out
add
lcall
push
enter
jno
inc
jns
ds
cmp
sahf
clc
clc
insl
out
mov
jmp
mov
in
insl
loopne
sbb
ja
out
aam
and
aas
stos
idiv
test
js
xchg
push
xor
xor
add
pop
pop
in
xchg
cmp
sahf
jns
adc
cmp
or
add
dec
mov
ret
fld
jmp
imul
add
cmpsl
lock
mov
jmp
insb
jg
and
mov
cli
jmp
std
and
fidivrs
dec
icebp
jmp
jg
ret
mov
subl
incl
jb
xchg
popf
add
sbb
movnti
jmp
and
test
lret
mov
mov
push
and
add
cmp
je
js
jmp
sub
test
and
daa
pushf
fildll
popa
xor
leave
push
loope
adc
sub
mov
aam
jmp
lock
inc
push
add
roll
test
clc
repz
jmp
mov
push
popf
outsl
jp
enter
jne
pusha
jl
xchg
mov
xor
push
add
mov
xchg
jp
mov
call
cmp
mov
push
mov
enter
loopne
jg
fs
dec
fisubl
jl
lods
mov
jge
fcoms
pop
cltd
or
aad
enter
push
xchg
mov
mov
xchg
cmpsb
push
int3
cmp
jl
push
xor
add
sub
icebp
cmp
outsl
insl
xchg
insb
sub
test
xor
ds
mov
push
lea
push
sbb
in
mov
push
sbb
stos
cmc
lcall
jne
pop
sub
cmc
push
fidivrs
sub
aaa
xchg
imul
ja
jg
adcl
lahf
mov
mov
lahf
pop
add
daa
fs
push
popf
push
add
xor
and
sub
js
call
pushf
add
push
andl
push
mov
jo
andl
mov
ss
fs
mov
jle
fstps
mov
cmpsb
mov
ljmp
aas
pop
repz
movsb
loop
mov
push
mov
lret
dec
or
pusha
mov
pop
and
out
mov
xor
test
movsl
adc
pop
sub
or
stos
xor
iret
cltd
fldt
push
sub
and
jmp
aad
pusha
insl
scas
jg
push
loop
xchg
stos
or
ficoms
jnp
mov
pop
pop
dec
mov
sub
and
sbb
jmp
push
sub
fs
outsl
lret
mov
dec
cltd
pop
mov
cmp
pop
dec
adc
and
mov
jge
adc
mov
push
mov
adc
in
sahf
sti
inc
mov
mov
dec
test
jmp
shll
pusha
sbbl
and
aam
hlt
mov
mov
add
inc
jmp
inc
shlb
inc
mov
push
push
cld
cmc
lcall
mov
jmp
adc
pop
lcall
pop
dec
test
fisubrs
lds
xor
dec
push
sub
mov
call
mov
stos
ret
inc
fwait
mov
and
popf
movsl
mov
and
sub
jmp
push
lahf
movsl
scas
jbe
jno
xchg
aas
movsl
xchg
arpl
aas
sbb
fsubr
icebp
mov
jae
hlt
lret
xor
loop
and
les
mov
ds
fbld
mov
xchg
je
int3
xor
jb
rcll
push
movsb
cmpsl
adc
adc
inc
loop
mov
into
in
shrb
decl
aas
mov
push
dec
bound
and
loopne
aas
jb
pop
adc
ss
ficomps
fstpl
mov
out
in
pop
pop
cmp
cmpsl
or
clc
mov
push
sarl
pop
daa
adc
mov
sti
and
ffreep
inc
stc
push
pop
or
and
arpl
out
jb
movsl
push
ja
mov
pop
jae
inc
out
into
arpl
jns
and
faddp
xchg
mov
ds
popa
pop
cmc
mov
fcomp
xchg
sub
lock
mov
test
push
jmp
sbb
pop
shrl
mov
clc
jmp
test
cmp
push
and
fs
mov
or
sub
cmp
add
jmp
loop
and
stos
out
cltd
cmp
mov
jg
outsl
enter
cmc
lahf
jb
iret
in
inc
js
inc
loopne
lock
mov
fstp
loop
mov
push
negb
das
data16
stos
pop
jmp
pusha
sub
imul
repnz
inc
pop
mov
jg
and
shrb
fimuls
jmp
repz
jo
andb
enter
push
fsubr
fdivp
sub
aaa
jb
fwait
jl
pop
xchg
outsl
pop
mov
inc
dec
andb
sbb
movsl
push
sub
int3
jo
pushf
insl
cmc
xchg
mov
movsl
adc
pop
and
add
out
mov
mov
cmp
mov
mov
or
mov
push
jnp
jmp
loop
sbb
jecxz
mov
or
xchg
mov
jb
sbb
int3
sub
jb
mov
cmpsl
dec
mov
sub
push
mov
mov
in
xchg
pop
sub
jnp
cmp
jmp
dec
call
inc
add
outsl
test
in
push
and
pop
dec
jmp
inc
and
dec
arpl
push
call
mov
push
shlb
push
loopne
jp
xor
jg
cltd
aaa
lock
push
faddp
jecxz
movsl
mov
clc
mov
jmp
xlat
xchg
pop
add
and
cmpsb
jo
cmp
popf
push
cmp
push
into
adc
jge
dec
or
fidivs
sub
push
cmp
push
stos
ss
testl
test
lret
mov
insb
loop
mov
mov
rclb
inc
jmp
adc
arpl
inc
aam
dec
mov
aaa
loopne
mov
adc
dec
repnz
push
push
lret
push
mov
jbe
pop
mov
ret
pop
jno
cmp
aaa
jle
es
inc
xchg
jns
inc
mov
jmp
das
outsb
xchg
fimuls
sub
lea
and
stc
jo
push
jbe
push
or
xchg
sub
xor
inc
hlt
out
mov
jno
ret
in
loope
jmp
mov
rcrl
ret
aaa
rclb
movsb
jbe
je
insl
cmc
pop
lcall
outsl
push
inc
enter
sub
adc
jg
test
test
je
ret
xor
sbb
dec
cmc
aad
push
popl
lea
je
push
fists
push
jmp
mov
adc
xchg
shll
subb
xchg
aas
popf
and
xor
in
hlt
inc
sar
push
sub
xchg
adc
imul
test
mov
jno
mov
mul
jmp
subl
lea
cli
inc
mov
cli
pop
xchg
imul
icebp
lock
popf
dec
sub
inc
inc
mov
outsl
testl
jmp
popf
pusha
or
arpl
andl
jmp
stc
mov
leave
sub
mov
fwait
lock
mov
inc
enter
pop
nop
cmc
aad
xor
enter
add
mov
pop
xchg
imul
cmp
shll
aam
inc
hlt
xchg
addb
test
sub
pop
popa
adc
mov
icebp
and
mov
mov
imul
cs
sub
xchg
jb
cmp
push
pop
sbb
int3
push
mov
jns
dec
push
loope
mov
jmp
or
sub
ss
outsl
movsl
or
cmp
dec
cld
cmpsl
sub
cwtl
loopne
add
lahf
add
and
push
shrl
cmp
pop
jne
adc
rcrl
sub
int3
mov
lods
cmpsl
mov
pushf
enter
sbb
adc
jmp
daa
in
icebp
aad
sti
jb
xchg
outsl
shl
ror
jle
inc
in
mov
add
xor
jns
cltd
fisubrl
sahf
scas
test
jl
test
inc
arpl
mov
lods
ret
pop
mull
dec
mov
xor
test
stos
mov
add
loopne
ficompl
imul
jne
sbb
stos
mov
jecxz
jecxz
dec
jl
inc
jmp
jle
rcll
dec
mov
sbb
cs
cmp
sbb
rol
dec
sbb
cwtl
loopne
sub
fs
xor
mov
or
arpl
jae
fldenv
mov
es
popf
fucomip
mov
cmp
cmp
jne
mov
pusha
adc
inc
mov
jnp
stos
sub
mov
push
aas
mov
cwtl
out
dec
or
jge
add
lds
aad
push
test
popa
popf
add
inc
push
divb
icebp
aaa
pusha
scas
out
stos
inc
jmp
mov
fbld
pop
inc
addr16
stos
xchg
push
imul
fs
jb
out
in
mov
fcompl
adc
pusha
lock
divl
ss
dec
or
insb
mov
inc
or
mov
sub
cmpsb
out
inc
and
fwait
icebp
aad
xor
jno
inc
mov
jle
aas
jle
stos
mov
popa
push
std
jo
mov
sbb
or
fsub
lret
mov
pop
mov
out
or
push
push
xor
cmpsb
cltd
mov
rcrl
push
xchg
xchg
dec
inc
and
gs
or
repnz
negl
adc
test
cmp
xlat
orb
negl
mov
and
add
pushf
fmuls
js
loope
push
add
mov
cmp
test
jbe
call
push
addr16
cltd
ljmp
into
nop
push
pop
xor
sbb
sub
pop
sbb
and
xor
or
stos
and
xor
jno
sbb
imul
sbb
movsl
push
movsb
adc
push
cltd
xor
jae
xor
test
cltd
mov
or
lahf
jge
mov
cmc
jecxz
xchg
lret
cltd
rcrl
cwtl
jae
pop
xor
arpl
cmp
data16
inc
add
lds
mov
js
cltd
je
popf
sub
shr
fwait
and
pop
adc
dec
mov
xor
xchg
fisubrs
mov
jb
cltd
mov
ljmp
aad
stc
push
call
inc
movsl
out
sahf
xor
dec
jbe
orb
or
dec
mov
or
je
add
xor
mov
fwait
hlt
fs
mov
sub
out
lock
test
cmp
push
and
and
or
fcomps
dec
mov
cltd
inc
mov
ds
cltd
gs
dec
push
dec
pop
or
scas
loop
out
cmpsb
aad
loopne
icebp
cltd
xor
xchg
inc
xchg
xchg
out
sti
pop
cmp
into
cltd
jne
inc
cmp
stos
ljmp
add
xchg
dec
pop
xor
inc
sbb
pushf
fwait
sub
dec
mov
or
cmp
idivl
hlt
cltd
into
loopne
cmp
outsb
movsb
xchg
cltd
fnstenv
or
and
cmpsl
movsl
mov
adc
push
loop
xchg
cmc
lods
out
insb
xor
add
dec
sahf
xor
in
cwtl
jl
push
pop
mov
into
cmp
aad
pop
sarb
outsb
ret
pop
pop
lret
into
sbb
mov
iret
or
pushf
ds
jo
lret
xchg
cltd
nop
push
mov
mov
or
cltd
sarl
xchg
lea
ret
pop
inc
icebp
and
inc
jmp
jnp
je
jg
xor
fucom
adc
jp
mov
ret
push
cltd
fnsave
rep
jno
lret
leave
pop
fwait
cs
or
std
mov
adc
scas
push
xchg
mov
sub
pop
cltd
js
sbbl
jge
popa
cltd
out
pop
cmp
lret
add
out
rorb
sti
sub
in
arpl
fdivr
add
out
stc
adc
jg
sbb
popf
and
mov
loopne
ds
add
sti
aam
pop
push
adc
mov
mov
mov
sbb
xor
push
popa
xchg
in
mov
and
arpl
inc
int
add
xchg
cltd
cmp
cli
test
sbb
stos
add
jmp
cs
cld
out
cmp
cltd
loope
fldt
insl
mov
cltd
cmp
mov
jp
addr16
mov
repz
xlat
sub
and
and
daa
ss
int
cltd
xor
xchg
aaa
sbb
fs
data16
cltd
sti
subl
sbb
cltd
jno
lds
stos
aam
insl
push
cmp
insl
sti
rcr
lahf
cltd
adc
jge
dec
das
pop
fildll
mov
fstpl
mov
dec
lods
sub
cltd
and
cmp
aam
cmpsl
adc
pop
dec
push
mov
popa
loop
sub
and
cltd
insl
mov
scas
fsubs
push
negl
adc
jmp
cltd
ret
sbb
or
push
ljmp
movsb
imul
cmpsl
inc
and
pop
mov
cltd
add
inc
popa
or
cltd
shll
pop
stos
stc
dec
and
mov
cltd
faddl
ret
outsl
xchg
pop
mov
loopne
repnz
lods
test
les
das
pop
mov
sbb
cltd
jo
cltd
lahf
pop
in
lock
call
or
fstps
or
mov
fldenv
jae
in
cli
cmpsb
sarb
xor
push
fs
stos
lcall
or
je
cmc
jecxz
std
stos
xor
cltd
shl
inc
xchg
xchg
cmp
call
fsubrs
mov
jp
dec
inc
mov
pushf
nop
std
sbb
movl
and
mov
adc
arpl
pop
fsts
pusha
enter
pop
jb
mov
inc
test
stos
lahf
cwtl
daa
push
sub
imul
pop
and
xor
cli
adc
ds
stc
cltd
mov
lcall
arpl
notb
pop
mov
adc
popf
push
cltd
imul
ljmp
cmp
dec
sarb
lods
in
aam
in
adc
fnstenv
mov
dec
mov
inc
cld
loopne
hlt
and
jb
mov
jne
lea
cmp
dec
mov
test
push
icebp
das
vmovhpd
dec
jns
ret
in
adc
jb
les
fadds
fwait
mov
aas
mov
roll
lds
cltd
andl
inc
scas
mov
sti
pop
ficoml
adc
mov
mov
and
add
popf
or
cltd
das
out
adc
outsl
out
xchg
dec
scas
pushf
aas
fbstp
mov
push
and
xor
mov
pop
xchg
lock
mov
jb
sbb
push
jne
pop
and
xor
xor
and
jp
mov
and
xchg
mov
mov
adc
push
cmp
cltd
dec
fistpll
or
mov
cltd
pop
sub
loop
je
in
push
int3
xchg
stos
cld
jg
ljmp
cltd
sub
push
scas
mov
push
xchg
and
push
jne
mov
das
inc
add
mov
rcrb
adc
ficoml
mov
cltd
je
movsb
mov
push
pop
rcrb
push
mov
cmpsl
rcl
mov
in
call
cmp
or
shlb
mov
cli
mov
stc
pop
scas
sbb
inc
daa
js
sub
fsts
pop
push
rcll
jg
fs
ja
jp
pop
sub
mov
scas
test
roll
imul
ds
pop
mov
jge
sbb
imull
cltd
fstpl
push
decl
popa
sub
cltd
xor
ss
xor
lret
cmc
jge
incl
mov
test
loop
ret
jnp
scas
clc
jg
add
stc
nop
mov
movsb
int
rorb
fisttpll
enter
test
cltd
adc
imul
cltd
inc
aaa
ds
lret
and
nop
cmpsl
fdivrl
inc
sbb
or
fadds
cli
loopne
sar
mov
and
popa
cwtd
pop
dec
mov
xor
mov
nop
cltd
ficoml
lret
jle
mov
lods
cmpsl
jecxz
or
pop
lahf
cmpsb
mov
sub
cltd
mov
clc
pop
fldenv
xchg
cltd
popl
shrl
jns
popf
add
push
loope
pop
cmp
fldl2t
sub
sub
mov
sbb
push
out
mov
mov
jl
cltd
nop
sub
mov
cmpsb
cmp
fldcw
in
cltd
movsb
add
and
or
push
popf
add
cmp
jg
int3
movsb
cltd
xlat
jp
jecxz
loop
cmp
inc
dec
subl
rorb
fisttpl
imull
mov
mov
cmpsb
jno
rcrl
or
mov
xor
xchg
fs
mov
pop
sbb
and
fcoml
dec
mov
add
loopne
cltd
in
stos
stos
fisubrs
adc
leave
cmp
pop
in
xchg
call
sbb
sbb
sub
jp
dec
jmp
pop
jbe
fildl
rcrb
mov
pop
jmp
xor
pop
cmp
xchg
mov
scas
nop
scas
scas
pop
mov
sti
shlb
sub
fbstp
shll
iret
cltd
out
add
sub
cltd
or
mov
stc
xor
mov
jmp
or
fadds
mov
call
addr16
mov
pop
cltd
sbb
cltd
movsb
jnp
adc
sub
lret
popa
outsb
mov
cmpsl
enter
push
add
jl
mov
cltd
imul
nop
cltd
data16
xchg
cmc
sub
rcrb
sysexit
rclb
sbbb
ja
xchg
add
dec
add
jp
mov
push
or
mov
dec
popf
fwait
inc
cmp
leave
aam
movsl
in
loopne
cmc
ss
and
mov
adc
outsb
xchg
arpl
jp
fcoml
lea
mov
push
std
mov
jbe
or
jmp
arpl
pushf
mov
xlat
loope
jmp
lods
sub
out
pusha
mov
cmp
dec
xchg
arpl
pavgb
jge
fcoml
popf
fcoms
mov
je
ja
insb
scas
cs
mov
xchg
inc
and
sbbb
jmp
pop
movzbl
std
hlt
shll
pop
lahf
movsb
pop
pop
add
cmc
xchg
or
cmpsb
xchg
mov
cmp
ret
mov
insb
lods
fidivrl
cmp
lods
mov
shl
jae
adc
fbld
jo
int3
adc
push
cs
inc
or
xor
inc
adc
xlat
leave
or
das
adc
xor
mov
int3
bound
mov
fdivp
jns
jmp
xor
sbb
adc
popa
lahf
push
adc
add
and
xchg
mov
popa
jno
inc
shl
std
aam
rol
dec
mov
cmp
mov
fcoms
cmp
test
stos
xor
add
addr16
inc
push
insb
add
out
add
stos
xchg
gs
call
loopne
mov
sbb
lahf
inc
pop
cmp
push
stos
cld
cwtl
inc
inc
xor
mov
xlat
mov
lock
inc
gs
test
rorb
sbb
nop
sarl
arpl
adc
lds
mov
ss
push
stos
jg
xchg
sub
addl
shll
xchg
jb
sub
mov
inc
mov
mov
into
les
insb
inc
jo
shrb
xor
push
or
inc
mov
sbb
push
mov
loope
test
push
decl
ljmp
inc
sti
cli
loop
cmc
cmpl
push
sbb
je
int
xchg
jecxz
push
or
test
mov
jae
out
sti
adc
cltd
jbe
pop
mov
jmpw
pushf
sbb
js
mov
stos
xchg
jge
sub
sbb
out
xchg
loope
lods
mov
int3
pop
stos
hlt
xor
imul
jg
dec
scas
lea
jge
adc
jnp
jg
sbb
rorb
sub
rcr
mov
push
lock
adc
dec
stos
dec
bound
mov
movsb
mov
rcrl
sbb
add
cmp
inc
scas
cmpsl
inc
or
jmp
lcall
push
test
cmc
and
jns
and
jmp
inc
and
adc
ficoms
xor
popf
or
jmp
out
xor
push
dec
mov
ds
mov
and
int3
cmpsb
jmp
scas
dec
fmuls
lods
aam
fs
stos
iret
lcall
mov
xor
jno
jmp
pusha
push
xor
and
mov
pop
call
ret
cmp
movsl
pop
mov
cmc
lds
insl
fcmovne
pushl
adc
jns
jmp
sub
jle
jg
mov
xchg
fcom
mov
leave
mov
cwtl
cmp
into
lock
xor
mov
ret
sub
sbb
mov
ret
pop
lret
mov
ds
popa
dec
les
repnz
xchg
pushf
std
jecxz
sub
sbb
lock
lcall
and
cmp
push
inc
shrl
cmp
jecxz
xchg
shl
lcall
sub
gs
xchg
stos
fisttps
xchg
lret
loope
inc
add
loopne
fs
inc
andl
jmp
xchg
les
add
add
dec
sbb
pusha
mov
mov
lods
into
xchg
ret
push
cld
adc
insb
pop
adc
arpl
stos
and
mov
rolb
dec
ret
mov
sahf
add
ret
adc
icebp
jp
mov
mov
mov
dec
scas
and
icebp
mov
adc
leave
loopne
mov
aaa
push
mov
mov
or
jmp
cmp
inc
ret
mov
jns
loopne
stos
mov
sub
pop
scas
or
loope
jg
xchg
dec
mov
jecxz
mov
pushf
cmp
or
xchg
jns
jg
jmp
inc
push
mov
inc
loop
jno
std
aas
mov
sbb
shrb
mov
xchg
fwait
mov
lea
xchg
mov
test
ret
fdivrl
mov
and
jmp
ljmp
test
imul
arpl
xor
shlb
es
out
stos
mov
mov
pop
dec
jo
jge
adcb
aas
xchg
or
dec
sub
lds
test
loopne
sbb
jmp
cmp
push
push
jmp
fstpt
lock
mov
push
mov
loopne
inc
sub
cmpsl
sub
sub
xlat
jne
mov
outsl
mov
cmp
pop
fdivl
push
lret
mov
add
or
mov
xchg
and
imul
mov
stos
dec
xor
shl
jb
lret
scas
pushf
pop
and
dec
enter
sub
scas
cmpsl
pop
or
je
dec
call
mov
addl
mov
popa
in
mov
iret
enter
jmp
pop
fidivrl
sub
dec
ljmp
aas
hlt
mov
and
jmp
jmp
jbe
int
mov
adc
andb
inc
pop
pop
push
ljmp
jg
inc
clc
cmp
pop
xchg
fimuls
daa
jmp
stos
xor
push
rorl
jle
movsb
jmp
push
jmp
xchg
mov
notw
je
aaa
xchg
addl
out
dec
xchg
ret
cmp
mov
iret
mov
fcoml
cmc
ret
bound
int3
scas
fs
and
jae
xlat
add
push
mov
mov
xor
cltd
mov
scas
cmp
push
iret
xchg
push
ror
xchg
daa
pop
add
xchg
movsl
push
repnz
pop
sbb
mov
in
pusha
fiadds
cld
into
movsl
ds
jmp
daa
fisttps
das
sbb
xchg
mov
pushf
movsl
inc
aaa
stos
or
leave
loop
cs
add
pusha
push
jl
add
add
in
push
sub
mov
fsubl
aam
in
cmp
xchg
dec
clc
fiadds
fldenv
insl
xor
insl
jl
or
inc
fimull
orl
fbstp
xchg
sti
mov
ror
sbb
mov
cmp
fwait
pop
mov
sti
and
pusha
xchg
sahf
push
dec
jmp
mov
icebp
scas
out
lcall
sub
cmp
sbb
into
cmpsb
inc
lcall
or
push
rcrb
cmc
mov
add
sbb
mov
pop
lock
adc
out
push
imul
test
fwait
sub
mov
adc
arpl
fdivr
pop
stos
out
xchg
or
push
orl
sub
jle
dec
fwait
mov
mov
and
aad
cmp
int
dec
mov
rcrl
shlb
jp
fstps
lods
pop
sub
push
mov
enter
add
and
xor
mov
sbb
pusha
sbb
outsl
add
xor
in
push
and
fiaddl
xchg
stos
lahf
idivb
sbb
iret
pushf
cmp
adc
xlat
pop
ret
roll
push
sti
push
stos
test
inc
jmp
xchg
xchg
aas
xor
cmp
add
adc
add
push
js
sahf
fcomp
xchg
dec
scas
clc
std
xchg
dec
scas
and
lahf
sti
in
ficoms
push
jmp
insl
sbb
sub
add
in
lods
jnp
and
aaa
icebp
sbb
pop
lock
adc
sub
mov
addr16
inc
and
push
pop
loope
or
shlb
xor
int3
inc
adc
lods
cwtl
pusha
add
mov
mov
fstpl
cmpsl
pop
shl
lret
sub
xor
arpl
or
fwait
pop
jb
jp
push
mov
shlb
jg
lahf
cli
mov
adc
aam
inc
loopne
scas
lcall
mov
pop
arpl
mov
xor
or
cmp
jno
scas
cmpsb
adcb
lock
mov
test
aad
push
outsb
subl
cmp
mov
xor
jl
sub
lods
mov
arpl
jnp
push
popa
sub
add
lods
or
inc
notb
enter
stos
fwait
into
mov
lods
addb
sub
lea
pop
jp
inc
sub
ljmp
mov
pop
jo
bound
clc
cmp
test
push
xor
ss
lret
popf
jno
dec
pop
dec
popf
aam
and
or
mov
or
cmpsl
fcompl
arpl
xchg
mov
cli
in
ss
lock
pop
adc
xchg
out
out
push
push
or
fwait
orb
or
dec
ds
pop
mov
xchg
mov
sub
sbb
shrb
aam
sub
cmp
call
jge
das
int3
xor
push
inc
cmp
fs
jno
pop
fsubrp
fstl
aam
imul
sub
cmpsl
shlb
sbb
adc
iret
mull
lcall
add
adc
mov
pop
sub
cmc
shll
nop
push
lock
push
rcl
stos
inc
js
pop
jmp
add
cmp
ss
loope
int3
shrb
xchg
nop
into
shlb
mov
fistpll
mov
ret
cmp
and
ja
stos
jmp
or
cmp
inc
cmp
iret
ljmp
enter
cld
jmp
mov
ss
push
insl
xor
lds
jmp
aas
data16
mov
int
and
adc
stos
fnstcw
lcall
jmp
jmp
lcall
lods
data16
pusha
enter
mov
cmp
subb
jmp
pusha
dec
outsb
sbb
cwtl
pop
and
lock
xchg
sarb
mov
mov
mov
mov
inc
cld
mov
xor
inc
fidivrs
adc
cmp
jecxz
loopne
mov
test
jmp
cld
adc
sbb
push
rolb
push
daa
or
je
and
inc
std
xchg
in
aaa
add
icebp
leave
mov
inc
cmp
nop
loopne
jae
ljmp
xchg
cmc
xchg
sbb
std
rclb
clc
or
or
unpcklps
mov
cwtl
mov
push
arpl
jg
sbb
and
jl
movsl
and
add
leave
mov
movsb
inc
jge
jl
into
xchg
or
fistps
js
imul
in
jno
lock
xchg
cld
xchg
mov
les
mov
mov
sub
sbb
imul
push
push
mov
lcall
hlt
xchg
mov
dec
fmulp
mov
dec
arpl
jmp
aas
testb
stos
xchg
mov
and
jno
pusha
jecxz
mov
ss
ss
or
sbb
push
jns
xchg
shlb
aaa
popf
dec
inc
popf
rclb
adc
fildll
xor
cmc
inc
mov
cmp
pusha
fbstp
or
lds
jg
inc
add
mov
fs
sarl
dec
filds
mov
int
xchg
dec
ret
push
adcl
adc
mov
outsb
int3
xor
cmp
and
stos
mov
adc
push
movsl
cwtl
cmpsb
sbb
in
cmp
sbbb
hlt
jne
ret
cmpsb
jbe
cmpsl
jge
inc
inc
jnp
ret
jmp
xchg
sbb
mov
sbb
inc
stos
inc
mov
push
test
pop
into
dec
sub
inc
aaa
inc
imul
popa
cmp
pushf
aas
imul
adc
clc
subl
stos
test
iret
in
stc
int
mov
cmp
cmpl
push
fdivrs
aad
stos
jmp
sbb
jle
mov
loop
fsubrl
pop
jno
aaa
mov
nop
sub
sub
stos
and
and
mov
add
mov
jg
movsl
mov
cltd
cmc
xorb
jae
cmpsl
test
jns
adc
cltd
sbb
pop
lea
std
mov
leave
mov
adc
cmpsb
sbbb
roll
inc
jno
adc
lret
cltd
jo
lock
xchg
mov
sbbl
nop
jmp
std
xlat
mov
cltd
les
stc
push
xchg
add
fadds
aam
dec
leave
leave
lcall
lods
enter
jne
jg
out
or
lret
pop
cltd
pop
int
sbb
scas
daa
push
mov
xor
cltd
sti
cmp
in
ficomps
pop
jno
int
pushf
cltd
sbb
inc
ret
and
mov
push
xchg
add
sub
mov
mov
or
inc
mov
pop
and
lds
add
add
sbb
mov
cltd
xor
inc
pop
shl
loop
pop
inc
lods
pop
lods
loopne
aad
inc
out
in
xor
ds
jae
adc
mov
cltd
fucomi
ja
add
cwtl
cltd
mov
push
jle
scas
dec
lods
adc
pop
movsl
xchg
int3
sbb
int
mov
jnp
bound
rcll
and
jl
repz
jg
jle
pusha
loope
pop
cltd
sbb
add
mov
jne
cltd
movsb
out
int3
sub
cltd
dec
shl
inc
jle
push
mov
cmpsl
out
movsb
test
xor
inc
in
mov
and
cltd
inc
fdivrl
frstor
lcall
xchg
movsb
push
pop
shll
push
mov
xor
ror
mov
xchg
pmulhw
pop
cltd
stc
inc
cmp
fs
repz
cmp
loope
mov
test
adc
fwait
nop
sbb
decb
negl
lea
sub
in
or
xchg
movl
mov
cmpsl
movsb
arpl
in
rcrb
push
or
xchg
or
adc
inc
adc
pop
cltd
cmpsb
pusha
dec
call
adc
mov
stos
cmp
les
loope
adc
mov
lea
push
decb
lret
add
or
mov
push
cltd
stc
push
inc
xor
stos
push
pop
sub
ret
ficoml
scas
or
cmpsl
push
jne
lahf
out
sub
movsl
pop
add
mov
cltd
inc
call
ja
cltd
in
divb
mov
cmp
push
cltd
pop
or
lods
jecxz
jnp
dec
dec
aam
fiadds
push
out
push
mov
jo
mov
scas
sbb
jle
insl
stc
out
jge
cld
shll
add
push
pop
cmc
sti
insb
cmpsb
xor
mov
jl
stos
inc
add
adc
lea
cltd
pusha
into
int3
in
sbb
and
inc
mov
jge
push
movsb
mov
in
cltd
fbstp
push
jmp
inc
fistpl
dec
and
and
popf
sbb
adc
mov
push
test
dec
dec
xor
aaa
pop
add
or
push
jmp
xchg
mov
stos
xor
push
repnz
or
adcb
incb
inc
movsl
sub
les
iret
xor
jge
inc
or
ret
sub
into
or
xchg
outsl
push
jecxz
jge
xchg
es
or
rclb
sub
pop
sbb
xchg
call
or
push
stos
fwait
xor
sbb
push
xchg
add
xor
adc
lret
ret
pop
or
xchg
stc
jp
mov
inc
enter
test
nop
mov
mov
mov
or
push
cltd
fucom
add
dec
ret
jo
decl
mov
sub
loope
call
pusha
or
arpl
push
lret
jo
outsl
mov
scas
xchg
adc
lock
push
sub
nop
adc
jbe
jnp
pop
push
popa
cmp
mov
sbb
test
dec
lahf
lock
icebp
cli
stos
mov
xchg
sahf
xchg
cld
outsl
fstl
inc
adc
std
lret
add
adc
inc
adc
adc
jp
daa
movsb
cmpsl
mov
pop
aaa
jbe
mov
dec
clc
pop
cmc
mov
movsb
pop
rcrl
popf
imul
stos
movsl
cltd
cmp
mov
aaa
js
dec
and
jmp
jg
add
xchg
adc
arpl
xor
in
mov
mov
fstps
pushf
and
cmpsl
mov
sbbb
sbb
mov
add
stos
jb
cmp
mov
popf
test
cmp
call
jno
aas
jb
and
je
mov
jp
mov
rcr
xchg
filds
jne
imull
stos
iret
dec
stos
ret
into
mov
fwait
sbb
mov
mov
sub
mov
xchg
std
mov
jmp
and
mov
outsb
int3
inc
in
dec
jecxz
test
jb
lods
mov
shll
mov
bound
pop
test
adc
rorb
les
pop
popf
add
sub
xchg
xchg
shl
in
jg
das
inc
dec
mov
xchg
cmp
jmp
dec
mov
pusha
clc
sti
mov
lcall
or
push
sbb
pushf
jo
fwait
adc
fsubrs
xchg
enter
cmp
cmp
ficoml
lds
cmp
cmpb
sub
add
cmp
mov
mov
ljmp
cmp
cmpsb
push
cli
sbbb
jle
or
jno
inc
call
test
aad
push
mov
mov
add
insb
stos
sbb
mul
js
push
xchg
dec
in
ret
mov
xor
stc
shll
ljmp
frstor
jnp
jbe
jns
xor
push
outsl
push
mov
addr16
cmp
adc
insl
pop
jge
sbb
mov
cld
jmp
mov
fsubrp
sub
test
adc
push
orl
les
aaa
aam
jns
cwtl
adc
shll
lods
lods
and
jle
cmpsl
inc
ret
adc
insb
sub
add
int
shlb
sbb
dec
and
aas
pop
movb
sbb
ret
jle
pop
inc
adc
xor
xchg
sbb
gs
cmp
push
cmp
sbb
inc
sub
sub
and
loopne
inc
into
xor
sub
mov
sub
fbstp
subl
scas
std
and
mov
sub
pop
dec
xchg
outsb
andb
icebp
in
xorb
es
mov
jmp
inc
sbb
stos
adc
mov
out
xor
iret
mov
pop
fidivs
iret
pop
pop
xchg
mov
out
sbb
push
mov
adc
push
mov
imulb
lcall
xor
pop
je
je
rcr
push
mov
in
jmp
add
lret
into
and
aas
pop
aam
int
sti
dec
icebp
push
mov
lock
push
arpl
inc
icebp
mov
jmp
in
int
out
xchg
inc
in
xchg
sti
sbb
mov
fcoms
jae
pop
cwtl
jne
mov
pop
leave
mov
sbb
sbbl
sahf
xchg
and
jge
jno
movsb
dec
sub
test
test
enter
movsl
and
fsts
negl
mov
push
pushf
jmp
stos
aam
cmc
popa
in
mov
iret
mov
xchg
mov
icebp
cmp
mov
insl
out
push
inc
and
pop
jmp
imul
cmp
adc
aam
fwait
jle
hlt
dec
xchg
push
push
xor
or
pop
rol
mov
jecxz
imul
hlt
mov
test
mov
les
xor
lcall
push
jne
dec
mov
loopne
jns
mov
rorl
pop
pop
dec
pop
mov
aam
sbb
lcall
pop
ficoms
jp
test
gs
dec
mov
jle
and
call
notl
mov
or
or
scas
xchg
stos
mov
lods
inc
out
enter
xor
cli
and
arpl
ret
cs
pusha
lret
inc
mov
and
adc
cmp
cmpsb
addb
inc
jnp
das
add
nop
pusha
ret
loope
pop
inc
jmp
rcl
popa
xchg
push
push
mov
and
xor
ret
add
nop
dec
jmp
xor
icebp
repz
jo
and
mov
mov
out
adc
lods
push
std
mov
lock
enter
lcall
aaa
or
xorb
dec
or
faddl
sbb
pushf
ljmp
arpl
mov
daa
push
clc
outsb
push
addl
subb
pusha
aam
fiaddl
jmp
lock
xchg
inc
and
pop
cmp
xlat
jmp
and
inc
adc
sub
test
adc
lret
call
sahf
lods
or
mov
subb
sahf
sub
aas
ds
add
push
mov
inc
jae
inc
sub
loopne
test
add
sbb
pop
jb
xchg
cmp
mov
push
imul
xor
and
loope
sbb
and
or
imul
mov
xchg
mov
int3
or
jae
jo
mov
lock
push
or
mov
jae
mov
dec
pop
ficoml
dec
mov
push
jmp
neg
sub
pop
cmpsl
jns
jns
xor
jmp
daa
and
push
aas
xchg
cld
jae
cmp
insl
push
roll
rcll
adc
and
fisubs
mov
pusha
rolb
sbbb
or
test
jo
mov
popa
pop
mov
bound
sub
loope
mov
popf
fisttpll
ret
scas
imul
sahf
cltd
inc
repz
mov
fwait
rcrb
xchg
adc
mov
cmpsb
sub
push
sub
and
dec
mov
aad
sub
pushf
es
cltd
jg
mov
loop
push
out
mov
fstps
mov
push
in
leave
pop
loop
cltd
es
daa
sbb
mov
inc
sub
cltd
xchg
mov
ror
push
cltd
out
cld
mov
repz
dec
push
shr
scas
test
fs
clc
gs
mov
inc
push
sub
jns
cltd
mov
cmp
mov
test
and
add
negb
pusha
pop
aam
or
lcall
mov
sbb
cmp
dec
in
pop
mov
cltd
sub
insl
pop
imul
push
flds
adc
push
xchg
adcb
cltd
dec
cmp
cltd
cmpsb
xlat
dec
gs
inc
fwait
pop
mov
cmpsl
cmc
daa
adc
adc
jge
jecxz
mov
and
sub
cmp
scas
je
adc
inc
imul
std
push
push
cmp
cmp
or
rcrl
sbb
rcll
inc
mov
or
addl
cltd
arpl
addl
pop
mov
sti
pop
xchg
inc
aaa
or
cli
repnz
pop
daa
or
mov
mov
pop
ljmp
shll
movsl
cmpsb
cwtl
dec
push
jmp
jae
pop
pusha
cld
mov
lahf
fwait
mov
shr
adc
aaa
jmp
outsb
dec
and
mov
cmp
orl
xor
jno
sbb
sub
in
xor
push
add
pop
pop
cmp
adc
or
arpl
sbb
lods
xchg
mov
mov
orb
inc
mov
push
addr16
lret
aas
mov
into
mov
mov
sub
flds
mov
stos
jle
sub
mov
fs
mov
movsl
and
inc
int3
popf
mov
cltd
inc
repnz
pop
xchg
jg
fistps
mov
add
test
loop
fcoms
sbb
mov
fldl
adc
inc
das
mov
push
push
dec
mov
icebp
addl
xchg
xchg
jle
and
test
inc
add
add
into
loopne
mov
test
and
jns
jmp
out
popl
mov
jae
mov
push
lock
dec
or
sbb
jmp
mov
xchg
stos
inc
sarl
sbb
jmp
gs
and
aaa
cmp
imull
clc
stos
xor
ljmp
test
or
jmp
test
test
xchg
fmuls
xor
xchg
and
xlat
iret
pusha
repz
mov
test
enter
or
and
push
jmp
arpl
xor
adc
gs
out
or
test
mov
cmp
xchg
pop
sub
addr16
bound
pop
jmp
or
clc
mov
hlt
test
inc
adc
cltd
fcmovu
mov
lahf
dec
mov
jmp
adc
jmp
sbb
jo
xor
and
or
cmpsl
sbb
mov
xchg
idivl
popf
loopne
pop
rclb
mov
sti
outsb
xchg
jmp
bound
cmpsb
stos
and
jnp
inc
ret
fistps
mov
adc
pop
movsl
xchg
jmp
fstpt
aad
pop
into
cmpsb
dec
xor
lock
dec
push
jmp
sbb
std
lods
or
jb
jmp
sub
jmp
movsl
insb
and
dec
loopne
cmp
jae
negb
cmp
dec
mov
or
add
xchg
pop
mov
loopne
test
sarb
repnz
pop
cmpsb
subb
jmp
cmp
into
js
mov
jbe
nop
jno
cmp
mov
adc
mov
xchg
dec
pop
push
lcall
cld
jb
jnp
jbe
out
outsb
jecxz
mov
icebp
ss
cwtl
adc
dec
xchg
xchg
enter
notb
enter
add
insb
jmp
pop
xchg
jnp
fsubl
jmp
ror
and
stos
adc
jno
dec
fldlg2
jno
sbb
in
ret
dec
andb
mov
shr
dec
in
fistpll
sbb
mov
jno
aaa
lods
pop
jb
add
add
sahf
inc
ret
sub
jmp
lahf
jns
loopne
repz
fwait
or
in
aam
outsl
fdivs
xchg
imull
dec
jbe
push
mov
pushf
mov
rcll
sbb
sub
adc
xor
fbld
cmp
jl
in
imul
jle
sbb
xchg
or
add
xchg
repnz
cmp
sbb
fcmove
and
adc
cltd
dec
or
es
xchg
fwait
push
jl
lock
test
cmpsl
sub
shrl
dec
push
mov
pop
dec
lods
jmp
jns
cmp
test
push
enter
jbe
loope
shlb
push
cmpsb
xor
mov
mov
cltd
cmp
aas
sbb
push
ds
xchg
int3
cmp
nop
cltd
fwait
add
mov
mov
mov
push
aad
sub
mov
fnstcw
cltd
mov
dec
pop
testl
push
mov
cltd
jno
repnz
out
xor
fwait
mov
sahf
mov
sub
fidivs
lock
push
movsl
mov
test
xchg
cltd
divl
xor
push
out
std
jo
xor
dec
ljmp
cltd
pop
imul
mov
sarb
enter
xchg
or
fmull
or
cltd
jmp
test
or
and
rcrb
cltd
inc
rclb
fwait
lea
adc
idiv
cmp
sub
cltd
scas
or
xor
cmp
xchg
cltd
shll
or
lret
mov
cld
xor
aaa
inc
cltd
adc
leave
xchg
mov
js
cmpsb
in
add
cltd
cmp
mov
fldt
adc
sbb
mov
nop
sub
dec
mov
fisubl
mov
mov
xchg
lret
les
cltd
repnz
rolb
aaa
cltd
clc
outsl
mov
sbb
fldl2t
dec
cltd
ret
in
lock
pop
cltd
leave
push
test
mov
fwait
pop
ds
icebp
arpl
fldcw
push
jno
lcall
sti
orb
and
and
in
aam
mov
jmp
fnsave
adc
lret
rol
cltd
dec
in
cmp
add
loope
adc
and
lcall
iret
pusha
ljmp
xchg
fs
sub
mov
or
outsl
and
sub
fisttpl
xchg
ss
add
ret
test
push
mov
call
cmp
push
out
pop
test
ror
mul
mov
loope
dec
pop
out
inc
jecxz
sar
and
inc
adc
and
call
inc
lret
cltd
mov
ret
pushf
sbb
fstpt
cmp
outsb
add
sub
adc
sbb
xor
es
test
jno
lea
dec
inc
lret
daa
sbb
lock
jbe
xlat
push
mov
xor
xchg
insl
lea
fwait
sahf
stos
xchg
cltd
mov
les
movsb
and
add
mov
shlb
cltd
rolb
adc
push
in
cltd
daa
sub
aaa
mov
mov
movsb
cltd
adc
push
cwtl
shll
cltd
push
push
xchg
fisttpll
xor
in
sbb
popa
lcall
jno
push
stc
out
mov
and
mov
negb
pop
fsubl
insl
inc
data16
mov
cli
daa
movsl
inc
push
xchg
and
xchg
std
mov
jbe
cltd
dec
addl
insl
cltd
xor
mov
pop
addr16
ror
ljmp
add
mov
mov
jno
adc
jns
adc
cltd
or
pop
sbb
stos
int
xor
daa
mov
cltd
mov
loope
adc
push
es
int3
dec
and
mov
jns
dec
or
movsl
xor
insl
nop
iret
cltd
xor
xchg
add
fidivs
push
pop
lret
push
cltd
cli
xchg
xor
das
push
pop
in
sbb
push
xor
or
imul
popf
pop
jle
cltd
push
cmp
call
mov
dec
scas
sbb
fxch
pop
cltd
lea
cmp
mov
frstor
push
push
mov
dec
pop
cmpsb
add
adc
push
leave
stc
ficoml
faddl
mov
adc
out
mov
cltd
jbe
xchg
xor
pop
mov
or
in
or
jne
scas
adc
or
push
iret
pop
cltd
cs
sbb
cmp
js
mov
andl
adc
xor
or
cltd
mov
push
lea
test
xchg
mov
mov
mov
scas
lahf
mov
xor
sbb
aaa
fidivl
shrl
cltd
imul
fcoml
sbb
jg
mov
not
cmpsb
mov
cmc
int
inc
xor
popa
fwait
pop
mov
lea
rclb
xchg
clc
and
sahf
aam
lds
mov
movsl
adc
pusha
frstor
mov
xchg
mov
jp
dec
sub
sub
mov
aad
scas
shrl
stc
sub
scas
mov
sbb
xor
out
cltd
xor
sbb
lds
stos
fstps
sub
add
lock
fadds
xchg
pop
icebp
adc
imul
xchg
std
sahf
jecxz
mov
sbbb
jle
fsubr
iret
loopne
mov
rcrl
xchg
mov
dec
loope
cmp
cltd
cmc
and
add
cmp
outsb
cltd
test
xlat
movsl
loop
push
xchg
and
push
nop
cltd
add
xor
push
outsb
sbb
aam
or
jae
jne
in
mov
js
inc
xor
popa
stos
mov
cltd
xchg
shl
aad
cltd
xchg
pop
cwtl
push
fst
int3
addr16
cmp
pop
mov
jo
adc
push
inc
cmp
and
adc
mov
frstor
adc
lock
jb
or
jo
mov
sbb
pop
cltd
pushf
or
jne
arpl
push
test
aad
mov
popf
test
pop
or
aam
xchg
mov
pop
ds
jl
adc
out
adc
cmc
cld
imul
push
add
sbb
mov
fwait
cltd
inc
push
pushf
mov
cltd
dec
jl
leave
and
jecxz
insl
out
push
and
cld
xchg
inc
pop
pop
cltd
stos
out
lcall
imul
cmpsl
cmp
scas
xchg
ljmp
mov
inc
jns
repnz
mov
jnp
cmp
rol
repnz
insl
fildll
xor
lods
sbb
push
cmpsl
dec
xor
ret
push
mov
cltd
pop
aaa
xorb
adc
loope
mov
bound
push
std
cmp
jns
aam
loope
sub
cltd
out
into
aad
fldcw
cltd
movsb
pop
test
in
sbb
dec
sub
xchg
pop
mov
mov
cltd
mov
imul
mov
pop
add
mov
syscall
add
lods
rorl
cmp
sub
pop
cltd
adc
fsubrp
icebp
lods
mov
lret
cmc
cmp
les
cltd
mov
push
ret
adc
outsb
cmpsl
xchg
sar
fnsave
push
push
imul
fnstcw
and
cmc
ss
lea
test
dec
in
mov
dec
or
clc
cltd
cli
jns
push
cmp
inc
jo
mov
inc
imul
arpl
cmpb
sub
pusha
into
jno
add
jmp
and
insl
adc
scas
xchg
dec
lock
mov
mov
shrl
sbb
sbb
lock
popf
mov
insb
xor
inc
pop
outsl
sbb
xor
jmp
push
in
int
pusha
sub
mov
lock
cltd
test
dec
and
repnz
ret
cmpsl
ret
rcrb
cltd
xor
cmp
jmp
arpl
xor
jp
lcall
outsl
das
movsl
lret
stos
pusha
das
mov
lock
ljmp
adcb
les
adc
or
jae
sbb
in
push
gs
idivb
lds
fucomp
cltd
into
mov
xchg
push
scas
sub
push
xchg
mov
and
shrl
sbb
jno
push
outsb
outsl
cmp
loop
and
dec
stos
xchg
lret
xor
popa
inc
jae
stc
cmp
int3
arpl
jb
lods
xchg
outsl
jge
stos
imul
popf
xchg
mov
sbb
mov
mov
adc
scas
sbb
ljmp
sbb
loopne
incl
stos
int
cmpsl
lock
xchg
jae
pop
adc
dec
xchg
ficoms
nop
iret
jbe
dec
fisttpll
mov
andl
mov
outsl
push
xchg
adcb
dec
xchg
fstpt
or
sub
adc
cmc
test
or
std
pop
or
or
into
jns
call
lods
mov
lock
ja
inc
push
test
popa
pop
mov
pop
cmp
outsl
mov
cld
add
sbb
jno
push
rcl
push
cmpb
repnz
scas
add
jae
mov
mov
sbb
cmp
pop
hlt
lahf
iret
mov
pop
push
xor
repnz
sub
push
stos
xor
mov
dec
pushf
lahf
xchg
jp
jl
mov
jo
mov
cmp
cmc
stos
sbb
out
xchg
xchg
pop
mov
repnz
mov
or
hlt
pop
cmpsb
int
mov
xor
jg
xor
arpl
mov
xchg
ficoml
das
xchg
jl
cmc
sahf
mov
mov
sub
lret
outsl
pop
push
std
and
inc
xchg
xor
inc
pop
mov
xor
clc
sbb
fsubrp
sbb
xchg
rclb
cmp
dec
push
mov
cmp
jg
stos
mov
sbb
repz
testb
mov
xor
xchg
hlt
adc
dec
sbb
iret
clc
mov
leave
rclb
adc
mov
enter
lods
push
pop
jmp
lock
fisubrs
hlt
aaa
popf
out
ss
xchg
stos
fmull
jbe
frstor
xchg
add
mov
dec
or
movsb
mov
rclb
cmp
add
fwait
or
lret
and
lods
dec
jno
fsubs
sub
divl
pop
scas
lock
dec
imul
lods
out
dec
jp
mov
fisubs
pushf
int
fdivrl
test
test
outsb
imul
loope,pn
stos
stos
aam
das
sub
pop
ficoml
sahf
mov
mul
jmp
bswap
bound
leave
cmpsl
leave
daa
jno
dec
fisubs
pop
sbb
movsl
mov
cmp
dec
pop
jo
push
xor
insb
shlb
inc
scas
dec
leave
mov
loopne
adcb
fcompl
pushf
call
cmp
dec
mov
mov
add
adc
fsubrl
insb
dec
jmp
add
je
rol
add
in
mov
xchg
pop
mov
jmp
sbb
and
stc
pop
jle
aad
mov
adc
jecxz
mov
sub
loopne
and
xor
mov
inc
arpl
and
sub
mov
movsl
mov
call
cltd
lods
cmp
push
jns
push
inc
sbb
int
in
pop
lock
fs
mov
lcall
cli
push
lahf
in
mov
mov
mov
dec
cli
sbbl
jmp
pop
popf
ds
pop
outsl
xchg
cmpsl
mov
xchg
popa
imul
pop
enter
scas
jmp
cmp
mov
jnp
jmp
sub
adc
int3
dec
jmp
jno
movsb
sbb
hlt
cmp
mov
in
je
loopne
in
cmpsl
sbb
loope
dec
jnp
lods
push
mov
out
jne
push
dec
jb
test
and
outsl
or
mov
lea
lock
pop
or
mov
andb
icebp
enter
cmpsl
mov
fidivrs
out
dec
push
mov
push
test
mov
cmpsl
jg
add
ret
rorl
imul
jmp
or
sbb
xchg
push
aaa
shrb
mov
cmp
pop
jmp
test
sub
leave
cld
int3
cmp
in
std
and
idivl
or
mov
pop
jmp
stos
sbb
sbb
mov
sub
sub
jl
mov
test
loopnew
imul
lock
cmp
adc
call
mov
cld
clc
dec
lahf
dec
icebp
push
cli
sub
mov
xchg
into
sti
pop
int3
and
xchg
gs
dec
imul
outsl
xchg
jno
jns
lock
pop
out
outsb
pusha
mov
leave
push
fadds
sarl
push
mov
outsl
dec
ret
push
outsl
ret
mov
lods
xchg
int
xor
mov
popa
lcall
outsl
push
popf
mov
jmp
and
stos
dec
push
or
mov
mov
xchg
stos
cld
push
xchg
xchg
xor
dec
icebp
fcompl
push
inc
sbb
mov
stos
out
enter
ljmp
scas
lock
sbb
sub
ret
gs
cmp
fstl
jp
xchg
lods
icebp
mov
jmp
loop
fwait
jno
rcll
sbb
cmpsl
cmp
sub
push
mov
roll
sarb
mov
std
outsl
and
movb
pop
lea
fisubrs
push
mov
cltd
loop
pop
cmp
test
add
cltd
out
pop
es
jo
fcmovnbe
sahf
cmpsb
loopne
sub
adc
stos
cltd
jo
lds
dec
xchg
cmpsb
mov
out
dec
not
xor
adc
lods
fwait
and
cmp
push
lahf
ss
mov
sub
inc
mov
xchg
lds
out
push
es
sbb
pop
mov
fldl
nop
xchg
xor
push
dec
lret
out
lret
cmc
add
xchg
cmc
xchg
cltd
mov
loope
cltd
sarl
lret
movsl
daa
pop
pop
fmuls
sub
cmp
cltd
not
fwait
imul
mov
in
jmp
dec
dec
jg
and
popf
jp
ss
jne
sbb
addr16
std
xor
add
xlat
dec
cltd
hlt
out
fisubrs
test
or
imul
popa
fwait
mov
xor
cmp
stos
fucompp
mov
push
pop
fcmovne
outsb
cld
push
xor
xchg
cltd
dec
rorb
fdivs
or
fstps
dec
iret
shrl
into
mov
ret
cltd
out
lret
push
addr16
adcb
sub
cmp
pop
pop
test
mov
sbb
cli
movl
dec
mov
dec
lods
out
cmp
cltd
fdivr
stc
gs
dec
cltd
jno
push
mov
sub
cltd
xor
xchg
adc
stos
inc
enter
repnz
lahf
imul
mov
push
ficoms
cmpsl
pushl
dec
mov
or
lret
ret
cmpsl
mov
loope
adc
cltd
rcll
cmc
pop
cltd
sbb
mov
cltd
movsb
les
mov
pushf
jns
pop
imul
das
stc
test
jecxz
cltd
jbe
cli
int
outsb
pop
mov
pop
test
push
cltd
js
repz
fwait
subl
inc
inc
rorl
cltd
push
xchg
mov
push
cli
adc
mov
std
pop
cmp
jno
cwtl
movsb
iret
pop
dec
cltd
lock
cltd
dec
cld
jmp
fs
addr16
xor
outsb
mov
inc
aaa
cmp
out
mov
pop
pop
cltd
sbbb
adc
mov
test
inc
shlb
inc
mov
minps
scas
stc
adc
xchg
mov
and
sbb
movsl
subl
in
inc
cmp
cltd
cmp
pushl
and
lcall
pop
mov
cmpsl
mov
popf
pop
pusha
or
scas
insl
test
test
sub
push
bound
jb
pop
mov
mov
insl
dec
sbb
es
scas
je
mov
fisttpl
loope
cltd
popf
xchg
movsl
lods
push
fimuls
call
jnp
ret
mov
xchg
rcl
dec
inc
divl
cltd
dec
sti
shlb
scas
cmp
push
repz
add
ret
test
xchg
aad
sbb
adc
cltd
rolb
and
cltd
dec
fldl
sbb
adc
aam
cltd
movsl
or
inc
cltd
inc
add
fs
cltd
pushf
cmp
inc
xchg
loopne
jnp
in
add
xor
repnz
inc
lret
sarb
mov
jne
push
clc
cltd
mov
cwtl
xor
repz
daa
cs
and
sti
mov
aad
xor
sahf
mov
pop
fsubs
cltd
mov
or
movsb
and
hlt
cmp
cltd
xor
dec
push
jo
ljmp
inc
jl
mov
sbb
ret
daa
mov
cltd
popf
sbb
out
pushf
dec
repnz
std
or
and
arpl
loopne
cltd
push
movsb
mov
push
sahf
dec
mov
jno
lock
cltd
lods
scas
jle
data16
cltd
xor
sub
das
cltd
fstpt
and
mov
fwait
sbb
outsl
jle
adc
cmp
jl
and
je
dec
movsb
xchg
aad
test
stos
sbb
dec
repnz
push
cmpsl
popl
pushf
sti
pop
and
jne
pop
mov
cmpsb
and
xchg
cltd
jecxz
dec
lods
push
cmp
popa
dec
ds
cltd
jns
inc
out
pop
rcrl
bound
push
dec
negl
call
pop
mov
jbe
xchg
cmp
pop
test
mov
sub
leave
cmp
sub
cwtl
cltd
adc
add
cltd
cmp
nopl
ja
pop
bound
fcmovne
fwait
mov
xor
pushf
push
sbb
mov
fldcw
cltd
gs
clc
or
pop
cltd
jmp
shrl
jmp
mov
mov
mov
mov
sub
lahf
cltd
mov
jp
cmp
lret
stos
sbb
sbb
and
cmpsl
sbb
add
adc
pop
pop
sub
cltd
adc
mov
js
aam
into
lcall
cltd
mov
aaa
test
in
and
adc
ficoms
add
cmpsl
fwait
insb
cmp
test
xorb
cltd
adc
mov
mov
mov
scas
dec
sbb
push
jns
out
jmp
sub
js
sub
sti
loope
orb
icebp
notl
cmpb
aam
push
sub
pop
inc
add
pusha
xlat
repz
lret
repz
outsl
pop
fisttps
rorl
aad
dec
arpl
pushf
jnp
std
lret
jns
lret
xchg
sbb
ret
or
sub
mov
in
jmp
stos
jp
lahf
iret
cli
idivl
cmpsb
insb
jecxz
pop
scas
js
enter
mov
aaa
lcall
jae
xchg
jmp
push
push
push
mov
inc
cmpsl
ret
call
jmp
bound
push
mov
mov
sub
stos
pop
and
sub
dec
jge
lods
xchg
pop
lcall
jmp
push
cmp
lds
add
aas
call
test
adc
or
popf
out
add
and
sbb
add
adc
adc
mov
rcr
jmp
lock
sbb
jmp
pop
sbbb
inc
cmp
and
loope
dec
add
jg
xlat
mov
sbb
lock
jecxz
xor
or
aas
pop
stc
jmp
sub
rorl
movsb
mov
shll
les
ss
fdiv
sti
aad
movsl
lock
xchg
xor
cli
xor
adc
scas
jmp
dec
enter
fcompl
into
popf
loope
add
aas
adc
push
lret
cld
xor
or
aad
cmp
jmp
mov
xchg
add
les
arpl
scas
int3
sbb
cmc
rorb
push
mov
inc
or
decl
mov
cld
sbb
adc
mov
mov
call
push
int
sbb
mov
aam
stos
add
mov
and
pop
inc
pushf
bound
fcoml
sbb
rolb
jge
roll
rcr
jnp
add
mov
inc
int
es
fists
jno
outsl
add
rolb
lds
or
dec
popf
sbb
flds
pop
inc
enter
fwait
jae
jg
jmp
cltd
jecxz
mov
div
fimull
fs
mov
mov
add
adc
adc
in
loope
fwait
adc
addr16
leave
inc
push
into
add
mov
ljmp
into
and
es
dec
and
rorb
inc
cld
into
xorl
test
lahf
push
into
movsl
cmp
mov
lcall
mov
inc
push
loope
jmp
mov
aaa
in
sbb
jmp
mov
or
xorl
movsl
ja
push
cmpsl
mov
ret
jmp
fstps
rolb
mov
jecxz
pushf
or
sahf
in
aaa
xor
push
dec
inc
movsl
lock
add
enter
maskmovq
xor
push
push
in
mov
fld1
or
arpl
stc
push
add
sti
cmp
outsb
push
stc
add
mov
jecxz
mov
inc
lcall
xor
mov
nop
or
push
sti
hlt
pop
mov
cltd
test
lds
lahf
movsb
or
mov
aaa
jb
add
xchg
jno
cmp
in
and
push
inc
jmp
mov
aam
xor
fwait
lock
mov
cwtl
repz
bnd
pusha
sbb
outsl
lds
into
cmpl
lock
inc
adc
push
hlt
mov
dec
mov
push
test
cmpsl
mov
xor
xchg
jb
push
dec
fsts
sahf
cmp
lock
jle
pop
scas
pop
pop
sbb
arpl
lcall
adc
mov
into
in
enter
mov
push
aaa
testl
jbe
and
dec
and
push
fcomps
jmp
push
push
cmp
fmuls
mov
ret
fmuls
add
jo
sub
pop
sbb
dec
mov
les
rclb
in
push
mov
int3
fcomps
leave
fs
xchg
push
std
aas
ret
stos
jmp
ret
or
rclb
jmp
sub
cltd
push
push
in
xor
mov
sbb
xor
xchg
dec
and
adcb
jo
sub
cld
popf
and
push
ja
std
push
pusha
jns
xor
pop
inc
out
stos
sbb
xchg
pop
mov
mov
imul
stc
adc
int3
imull
cwtl
mov
cmpsl
out
jl
dec
mov
fiadds
push
mov
aas
imul
arpl
cmp
stos
mov
push
aas
push
xchg
call
and
jmp
popa
pop
gs
xor
xlat
xchg
mov
lock
outsl
shlb
hlt
adc
out
cwtl
cmp
xchg
jmp
fcoml
jb
lea
lock
out
jmp
mov
adc
lock
ljmp
jg
inc
pusha
sub
inc
pusha
lahf
mov
mov
aaa
xchg
push
and
cmp
xchg
dec
dec
loope
outsl
mov
punpcklwd
sbbb
fcomp
mov
and
mov
add
jge
mov
xchg
pop
jno
fbld
xor
aad
adc
push
shl
mov
adc
mov
mov
push
mov
orb
es
pop
mov
out
push
pop
mov
mov
stc
fdivrl
enter
cs
iret
push
test
rcr
push
push
daa
test
jmp
popa
push
cwtl
stos
xor
jl
push
leave
cmpsl
cmp
in
inc
outsl
cmpsb
sbb
jmp
xor
cmp
js
scas
adc
stos
iret
sbb
mov
mov
aaa
fcoml
loopne
xor
cmp
push
jecxz
stos
imul
gs
notb
inc
les
push
lock
push
outsl
sub
jle
stos
jne
jmp
outsl
adcl
ret
shrl
int3
adc
and
jge
mov
pop
lock
add
pop
mov
js
xchg
subb
xor
sarb
movsl
xchg
xor
cld
xchg
in
dec
mov
ja
xchg
lock
jmp
cwtl
mov
sbb
push
or
inc
fiaddl
inc
dec
mov
test
sarb
push
dec
fwait
jecxz
push
outsl
outsl
pusha
jnp
and
jns
sbb
lock
push
fnsave
inc
das
cmp
scas
aam
out
aas
insb
arpl
repz
notb
sub
gs
xchg
add
int
inc
and
mov
or
xor
mov
aaa
dec
test
imul
mov
outsb
push
cmp
pop
and
dec
dec
shlb
and
cmpl
das
xchg
cli
int
inc
aad
add
mov
jo
push
lods
adc
test
jmp
pusha
dec
pop
mov
mov
daa
xor
cmpsl
jno
daa
arpl
mov
call
add
lret
add
lahf
mov
xchg
mov
fs
js
mov
push
sub
xchg
rorb
cli
pusha
pop
cmpsl
in
jo
mov
testl
punpckhbw
idiv
aas
aad
pop
pop
in
or
cmp
iret
int
inc
fisubl
or
ja
jb
jmp
inc
scas
cmp
sub
and
xchg
pop
cmp
xchg
in
and
daa
dec
dec
jmp
enter
sarb
and
mov
dec
movsl
mov
mov
xor
cmp
cmp
sub
cmp
inc
push
sub
pop
jecxz
stos
inc
roll
push
jp
arpl
xor
mov
movl
inc
inc
xchg
icebp
aam
adc
inc
adc
xor
mov
mov
arpl
xor
mov
rorl
jmp
popf
dec
aad
inc
mov
mov
adcb
sbb
sub
push
scas
lahf
mov
inc
out
inc
adc
and
mov
movsl
fdivrl
aam
jmp
xor
jp
mov
mov
inc
inc
adc
les
std
fwait
mov
cmp
loopne
push
inc
sbb
lock
sbb
xchg
dec
and
repnz
mov
mov
sbb
xor
pop
mov
ja
xchg
sahf
push
sub
orb
in
stos
cmp
fisubrl
ja
sahf
in
call
int3
jo
pop
lds
xchg
stos
jbe
scas
pop
jmp
jbe
dec
jecxz
fiadds
dec
mov
test
fmuls
test
xchg
pop
xchg
lock
sbb
ljmp
push
leave
imul
add
ss
fildl
repz
jmp
lretw
stos
jmp
stos
pop
jmp
mov
lods
cmp
or
cmp
test
sbb
test
pop
aaa
push
add
cmp
jl
je
je
or
div
js
fldt
and
mov
shr
xor
xor
pop
mov
mov
lock
mov
jns
jmp
pop
cld
jae
mov
dec
inc
icebp
push
std
push
inc
dec
jmp
cs
xor
dec
lcall
mov
dec
mov
stos
ret
leave
adcb
lock
je
popf
sarb
stos
mov
test
movsl
pop
mov
jmp
in
push
dec
ret
or
mov
cmp
les
xor
mov
lods
arpl
jmp
in
xlat
out
lret
shll
mov
stos
adc
dec
sti
addl
jmp
jmp
mov
sub
adc
cmp
ret
call
insb
inc
add
sahf
pop
inc
dec
rcrl
cwtl
dec
cmp
imulb
fisttpll
stos
sub
jle
xor
fsts
lret
divb
cmp
stos
inc
mov
cmp
or
xorb
stos
fsubs
arpl
cmp
sub
or
ret
test
cmpsl
mov
hlt
ljmp
sbb
movsb
cltd
cmp
push
stos
jmp
sbb
dec
test
and
sbb
mov
push
adc
pop
fsubp
add
lcall
push
and
or
scas
dec
cmp
test
mov
outsl
pop
pop
lret
stos
cltd
adc
xor
cmp
dec
adcl
push
fmulp
test
push
and
push
mov
jne
sbb
dec
shlb
icebp
outsb
add
push
jno
adc
mov
xchg
imul
aam
dec
jl
mov
lret
popf
ret
sub
lock
in
ficompl
call
pop
lcall
sahf
filds
xchg
sbb
enter
fisubrs
jno
mov
inc
pop
xchg
jmp
mov
xchg
popa
in
in
imul
push
les
lods
jmp
jae
lds
and
mov
insb
jp
arpl
out
mov
xchg
push
loopne
push
xchg
fnsave
sahf
pop
repz
push
arpl
adc
cs
fiadds
push
aas
mov
ds
mov
lcall
adc
xor
fdivs
f2xm1
and
pop
mov
es
fnstenv
lods
cld
hlt
jmp
jmp
fwait
push
lret
insb
in
test
inc
dec
movsl
leave
xchg
stos
inc
xchg
xchg
insb
leave
std
jmp
stc
and
jbe
add
pop
das
adc
inc
fs
adc
jmp
dec
enter
ror
mov
aas
cmp
call
lds
jae
movsl
sub
fsubrp
stos
test
ret
inc
fwait
orb
add
negl
sbb
xchg
and
xor
es
dec
addl
mov
je
sub
fnstsw
push
add
fsubrs
in
inc
mov
push
in
add
mov
bnd
mov
pop
jmp
xchg
icebp
cmp
cld
sub
add
sub
cmp
std
jnp
in
and
pop
fs
aam
push
lcall
inc
jb
int
aaa
cmp
pop
mov
cmp
testb
pop
jmp
das
lods
jnp
aas
int3
scas
jno
popa
ret
push
es
lcall
or
movsl
mov
inc
lock
push
pushf
push
js
adc
mov
push
mov
adc
movb
fbstp
cld
jo
leave
test
sbb
lcall
jne
push
arpl
les
inc
jne
call
xchg
add
jecxz
loop
pop
cmp
xor
jae
mov
mov
pop
cmpl
scas
aad
inc
sarb
cmp
cmc
pop
xor
mov
sti
add
inc
jl
mov
sbb
xchg
sbb
push
sbb
inc
out
sub
nop
mov
clc
sub
cmp
test
hlt
aad
jns
cmpl
and
and
inc
mov
push
jae
adc
cltd
scas
pop
mov
jg
js
or
std
pop
subl
std
enter
imul
cs
bound
cmc
negl
adc
jmp
subb
lods
cltd
add
cmp
inc
movsl
xor
mov
popf
mov
iret
push
data16
mov
movsl
nop
shl
add
sbb
popa
inc
pop
test
loope
adc
ret
outsl
fdivl
jecxz
xor
xchg
and
push
mov
in
and
jl
popa
pop
sbbb
jne
pop
lock
cmp
aad
inc
bound
out
pop
mov
pop
popa
fscale
popa
push
inc
clc
and
mov
or
xchg
xorl
pop
outsl
jnp
in
lods
out
call
dec
mov
xor
in
cmp
jmp
jmp
mov
xchg
inc
jae
fwait
outsl
mov
test
pop
xchg
push
mov
cs
pop
data16
mov
dec
xchg
xor
jmp
xor
iret
pusha
push
mov
jo
cmp
mov
add
jg
punpckhbw
xchg
mov
push
stos
dec
sbb
dec
jmp
ficoms
lock
push
sub
mov
call
divl
inc
xchg
int
jbe
inc
inc
in
fstps
inc
xchg
inc
pop
dec
mov
cs
inc
into
adc
mov
sarl
mov
popf
inc
lcall
sbb
cli
arpl
lcall
jl
push
jle
lret
lea
test
sbb
icebp
sbb
mov
lcall
adc
xor
push
or
popa
adc
inc
mov
call
clc
lock
mov
add
push
call
lock
jp
hlt
ret
mov
sub
fbstp
movsl
mov
mov
cwtl
dec
push
jmp
xchg
pop
sbb
loop
mov
lods
dec
cwtl
mov
aaa
pop
cmp
mov
les
inc
iret
jbe
ret
lds
lods
xchg
jo
sub
add
mov
mov
mov
xchg
cmp
xchg
lea
dec
cmpsl
ret
icebp
test
pop
stc
call
cltd
inc
lock
int
jb
jae
xchg
inc
fnstcw
movsl
pop
push
add
and
inc
sub
push
addr16
mov
cmc
mul
lea
aaa
lret
push
insl
cmp
outsb
inc
shr
pop
icebp
jne
sbb
xchg
outsb
xor
repz
rolb
mov
pop
mov
gs
sbb
cmp
or
mov
aad
gs
cmp
adc
stos
sti
xchg
stos
fdivrp
sbb
mov
push
jb
rol
mov
sbb
cmp
das
xlat
aas
xchg
insb
mov
inc
xor
jmp
push
icebp
pop
mov
dec
mov
push
jns
jmp
divb
and
inc
lret
push
fs
loopne
pop
cmp
inc
stc
cmp
xor
jno
lret
pop
mov
mov
sbb
movsb
shl
mov
xchg
pop
fwait
sbb
jnp
jmp
je
and
enter
jecxz
push
push
push
out
in
sbb
not
inc
jmp
loope
cmp
push
jg
xchg
out
roll
lds
mov
enter
fidivrl
je
dec
test
dec
xchg
lds
outsb
jge
sub
cld
rclb
mov
and
aaa
xor
push
clc
stc
xor
mov
ljmp
out
outsl
out
adc
adc
cwtl
xor
lods
push
shl
cltd
mov
inc
dec
lods
rorl
pop
in
sub
jg
mov
jo
bound
enter
fisubrl
rcl
fdivrs
inc
lock
lret
scas
jecxz
clc
vcvttsd2si
mov
test
test
mov
xchg
lcall
cwtl
sub
popf
jae
sahf
xor
push
xchg
cmp
dec
repz
inc
or
sarb
jmp
cmp
test
jp
sub
push
pop
mov
lcall
xchg
stos
js
lcall
fmull
cmp
sti
push
sbb
pop
xchg
pop
lods
jne
pop
out
lcall
inc
imul
and
add
xchg
inc
inc
mov
jns
pop
ljmp
mov
stos
lret
xor
adc
fidivrl
inc
inc
lods
fwait
mov
cmp
xchg
jg
cmp
and
aas
pop
shlb
mov
sub
mov
jg
cmp
aaa
sbb
loopne
dec
arpl
loopne
mov
mov
add
adcl
push
mov
fildl
jns
orl
aam
jmp
loop
and
sub
mov
cmp
arpl
ret
cltd
xchg
into
fdivl
xor
fisubs
jmp
mov
lods
dec
and
mov
mov
call
mov
inc
inc
jno
insb
inc
push
push
negl
pop
ficoml
in
pop
movsb
push
adc
xor
pop
and
scas
mov
fiaddl
push
icebp
jo
jg
iret
stc
mov
adc
int3
lcall
push
sub
out
mov
jl
add
stos
dec
call
mov
mov
test
fwait
mov
cltd
mov
iret
jge
mov
lcall
xchg
and
sbbl
fstpl
jmp
fstpt
hlt
mov
pop
sarb
inc
adc
sub
cltd
pop
mov
mov
test
mov
imul
push
dec
adc
sbb
jg
loop
mov
mov
fildl
out
repz
pop
test
cmp
in
andb
shrb
and
clc
hlt
xchg
aad
cltd
push
add
push
or
dec
sub
or
fs
imul
cmp
out
pop
sarb
stos
push
insb
and
cmp
add
movsl
dec
jbe
jge
int3
out
loopne
add
push
or
std
pop
mov
mov
pop
pop
in
cltd
mov
push
adc
mov
fisttps
fisubl
and
jmp
cmp
sbb
push
test
xchg
cmp
inc
fadds
cli
and
adc
cmp
jg
ret
push
xor
jae
fbld
cmp
outsb
add
push
and
jp
aas
xor
cltd
ret
dec
mov
faddp
ja
lret
dec
leave
int
and
inc
lds
loop
pop
lds
mov
cli
data16
stos
mov
sbb
lcall
pop
aaa
or
popf
jne
lret
push
dec
aas
sbb
dec
add
in
sbb
sbb
push
daa
std
leave
jle
push
xor
stos
mov
pop
mov
xchg
scas
adc
push
std
pop
jns
paddb
dec
mov
int3
rcrb
insl
out
fildll
bound
pop
loopne
iret
mov
cmc
pop
lea
or
sbb
lcall
aaa
ret
lds
dec
mov
mov
pop
lock
sahf
notl
mov
pop
bound
cmp
mov
fdivrs
or
repz
pop
lcall
xchg
loop
andb
arpl
mov
insl
jae
imul
iret
sbb
jmp
loop
mov
mov
push
cmpl
popf
orl
adc
xor
es
jge
xchg
xor
inc
push
cwtl
call
sub
std
mov
jle
imull
movsl
jmp
mov
cmp
loopne
lods
or
jg
mull
xor
cmc
mov
cmp
scas
js
inc
popf
mov
and
adc
sub
test
xor
sbb
mov
push
mov
lods
incb
ret
sti
inc
mov
jecxz
adc
sub
scas
es
in
sti
adc
into
sub
and
push
popf
les
stos
pop
daa
ret
lcall
or
push
sub
push
ret
mov
in
rcrl
sar
andb
std
popa
adc
pushf
int3
push
inc
mov
dec
fstpt
fwait
mov
inc
cmc
push
stos
adc
sub
dec
cmc
jle
mov
dec
nop
jb
les
jae
sub
jge
inc
jmp
mov
loop
push
into
test
stos
xchg
sub
adc
js
js
fadd
push
mov
mov
sbb
loopne
mov
sti
sbb
fs
xchg
adc
or
ret
push
sarb
or
rolb
add
js
xchg
push
cli
int
int3
lea
xchg
mov
out
ficoms
loop
or
push
pop
sub
dec
sbb
sbb
insb
add
lcall
push
int
add
and
or
pop
fcompl
or
enter
out
stos
or
test
stos
std
imul
mov
mov
sub
lea
pop
scas
mov
inc
jbe
rcll
push
cltd
das
loope
jmp
fidivrs
repz
aam
mov
loop
inc
loop
aas
movsl
jmp
adc
in
inc
inc
mov
sbb
shlb
cmpsl
push
dec
mov
push
rcrb
jle
fstl
adc
inc
and
in
add
mov
sub
leave
dec
mov
add
jno
loope
pusha
inc
pushf
test
cmp
into
test
fdivp
rcrl
outsl
fldenv
js
iret
add
divb
movsl
mov
xor
ss
jge
inc
stos
js
outsb
ret
cltd
jmp
jne
pop
cmpb
lret
pusha
cmc
std
and
mov
pop
fisubrl
pop
lock
std
aam
je
aam
jle
add
push
lods
jno
dec
push
inc
icebp
loopne
mov
jg
fwait
mov
loopne
cmp
cmpsb
mov
inc
seta
ret
sbb
mov
mov
arpl
or
push
orl
or
mov
sbb
mov
sbb
cli
cmpsl
cmp
adc
adc
sub
mov
mov
mov
arpl
idivl
sub
cmc
mov
mov
push
push
ret
dec
gs
jae
ret
mov
enter
mov
xchg
add
push
mov
sbb
add
inc
imul
dec
arpl
cmc
sub
add
lea
sub
xchg
mov
lea
cmp
sarb
adc
mov
stos
lds
icebp
mov
mov
cmp
sbb
imul
jmp
stc
in
imul
cmp
loopne
ss
fcomps
fsubrs
stos
xchg
cld
xorb
push
dec
mov
out
iret
inc
dec
xchg
rcrb
clc
xchg
cltd
jp
fsubrs
std
push
pop
and
loope
cld
xchg
dec
pusha
cmp
dec
mov
pop
jmp
iret
inc
test
mov
stos
stos
dec
rorl
pop
xchg
lock
dec
sub
inc
insl
inc
push
test
adcb
pop
sbb
sub
icebp
imul
xchg
sahf
sarb
jmp
lock
dec
jp
sub
aaa
mov
adc
leave
mov
xorl
cld
inc
add
mov
cmp
cmpb
mov
jmp
ret
cmp
data16
adcb
jle
sbb
adc
inc
loopne
inc
mov
int
mov
les
ljmp
in
out
cmp
leave
mov
cmpsl
xor
movsb
rcrb
in
jl
pop
add
jmp
jmp
push
sub
cmpsl
mov
movsl
dec
pop
xchg
int3
lahf
cld
push
arpl
mov
jecxz
mov
pop
cmp
xor
fcmovne
jle
inc
jnp
cmp
shrb
subl
cwtl
fisubl
push
ret
sti
cli
xor
pushf
xchg
iret
mov
test
mov
pop
sub
popa
arpl
mov
int3
pop
sbb
and
mov
js
outsb
scas
jno
jne
jmp
xchg
inc
rcll
push
pop
ret
and
lahf
adc
sbb
jg
test
shlb
test
adc
aaa
imull
inc
jmp
clc
je
repnz
jns
adc
lock
xor
xchg
aad
add
enter
gs
shlb
jmp
push
cltd
dec
lea
xor
dec
jmp
aas
cmp
popf
jecxz
sbb
lock
xor
out
xchg
fiaddl
std
popa
mov
mov
cmp
std
in
jb
inc
mov
lahf
mov
dec
arpl
enter
test
jmp
and
gs
shlb
int3
jmp
adc
jmp
shl
or
mov
sbb
cmp
sub
dec
mov
inc
bound
jmp
push
adc
sbb
pop
lock
iret
push
mov
sub
dec
pushf
sub
test
mov
fnstsw
enter
popf
mov
cs
sbb
rorb
popf
addr16
pop
cmpsl
jmp
adc
in
fsubs
mov
push
pop
dec
mov
mov
scas
dec
and
mov
pushf
rcl
in
aas
mov
add
add
pop
in
inc
test
cltd
ret
mov
jo
cmp
pop
cwtl
jns
test
xchg
arpl
pop
lret
sbb
sbb
repnz
add
cmp
es
xor
scas
xor
xchg
jb
jne
call
dec
fwait
or
push
pop
ret
ljmp
sar
mov
mov
jmp
shll
lds
jo
aas
mov
add
and
insl
rolb
cmp
push
int3
mov
cmp
sub
add
shrl
fcmovne
pop
pop
cmp
push
xchg
arpl
push
stos
mov
cltd
pushf
inc
mov
rclb
pop
das
loop
or
rcl
push
pop
pop
lock
sbb
and
outsb
cmp
ret
out
inc
mov
negb
lods
or
mov
je
add
ret
dec
ret
jmp
push
insb
xor
xor
ljmp
inc
add
dec
sub
jnp
push
push
xchg
adc
stc
sub
stos
inc
xchg
data16
sub
sub
test
loopne
push
pushf
sahf
jmp
inc
pop
push
mov
push
leave
xor
adc
fiadds
jp
cltd
jns
push
inc
jl
aas
lods
mov
out
cmp
rol
mov
push
movsl
cmpsb
jmp
sahf
adc
mov
xor
jmp
sbb
push
and
cmc
rcrb
lret
cmp
stos
push
subb
adc
mov
ljmp
popa
dec
mov
test
cmc
jl
mov
repz
data16
inc
jne
rol
icebp
mov
and
aaa
mov
mov
dec
hlt
jmp
jp
add
push
lds
pop
push
dec
in
pop
lock
divl
ret
xchg
push
mov
add
test
jb
mov
and
cmpsl
sub
mov
xor
clc
or
inc
mov
pop
or
pushf
imul
arpl
call
cmp
lret
push
mov
mov
imul
mov
stos
or
and
mov
xlat
fsubrl
cmc
mov
shll
cmp
push
in
ds
mov
lods
notb
sbb
dec
sahf
dec
into
out
xchg
sbb
es
sarl
sti
push
dec
clc
mov
add
add
ja
cmp
and
cmp
jno
push
insb
sub
rcr
inc
jne
fldt
cmc
sub
fisttps
push
mov
movsb
add
add
scas
stos
mov
sub
mov
xchg
mov
pop
pushf
fnstsw
sbb
xor
iret
and
in
jmp
jnp
stos
sbb
lds
testl
mov
popa
roll
loop
cld
cmp
int
or
push
add
insb
jo
inc
rcrl
xor
mov
nop
mov
pop
bound
and
mov
fsubrl
loope
mov
fisubrl
mov
call
jo
inc
or
popf
push
jno
push
xor
call
cmp
stos
or
inc
shll
frstor
fucompp
or
jg
jecxz
pop
bound
cmp
clc
inc
pushf
adcb
sub
pop
imul
and
sbb
push
or
jne
fmuls
jle
cmpl
mov
in
xor
cmp
fwait
rolb
sub
adc
dec
or
inc
sbb
pop
loopne
ja
adc
cmc
data16
loop
inc
or
cmpsl
icebp
lea
pop
pop
jmp
mov
int
adc
outsb
nop
orb
mov
popf
adc
outsl
jmp
xchg
inc
push
fidivs
inc
stc
or
cmp
mov
pushw
sbb
andl
xchg
out
mov
lods
loopne
inc
add
pop
aad
push
arpl
outsl
sbb
adc
mov
out
mov
jp
popa
pop
or
lret
in
ret
aas
fidivl
ret
push
sub
xchg
ret
push
add
dec
cmc
repz
cmc
les
mov
mov
sbb
cmp
bswap
stc
add
out
bound
mov
jmp
lcall
xor
dec
in
mov
xchg
int
jo
outsb
int3
sbb
loope
in
sbb
mov
xchg
push
mov
jne
cmp
test
xor
cmpsw
lcall
les
push
into
sahf
mov
mov
xchg
test
dec
loope
jmp
pushf
jmp
sti
xor
jbe
das
push
lock
ffreep
std
movsb
loopne
movsl
pop
jns
pop
arpl
add
in
jae
mov
jmp
rcll
jmp
pop
inc
lods
gs
fnop
xor
and
fsts
sub
popf
sbb
push
push
jmp
jbe
or
and
xor
pop
test
test
pop
jo
pop
push
xor
and
mov
movsl
scas
fstl
pop
or
lods
push
mov
mov
pop
mov
push
rcrb
cli
push
jmp
pop
adc
leave
sub
dec
xchg
shrb
sub
ret
pop
stos
push
jbe
lea
pop
push
pop
fbld
mov
movsb
or
outsl
fs
fists
jae
cltd
sbbl
mov
adc
jnp
data16
adc
dec
scas
sbb
fcmovu
xor
rcrb
fistpl
pop
orl
cmc
pop
mov
insb
fucom
push
mov
leave
xor
add
aam
and
fiadds
ret
jnp
xorb
cmp
xchg
fwait
mov
mov
in
fisubrs
addb
inc
dec
mov
lahf
std
and
lock
cli
push
or
mov
sbb
js
in
cmp
push
out
jmp
daa
push
roll
inc
mov
inc
rcrl
mov
mov
mov
cmp
sbb
sahf
push
xchg
jbe
sub
mov
inc
fists
cltd
sbb
lds
jmp
push
pop
push
cmp
outsb
cmpsb
mov
pusha
lret
outsb
hlt
lcall
sti
xchg
pop
sbb
in
inc
sub
pop
cltd
cmp
lock
mov
push
jmp
jecxz
pop
push
xchg
out
and
cmp
mov
mov
bound
stos
adc
pop
cmp
fs
jle
dec
sbb
arpl
dec
push
fistl
stos
sbb
mov
punpckhdq
inc
lret
and
inc
jmp
or
mov
dec
leave
cmp
pop
sbb
mov
cmp
inc
jae
jno
xchg
mov
ja
gs
insl
push
sub
std
push
loope
inc
lcall
jl
push
add
movsl
push
int
das
jecxz
mov
popa
test
jl
stos
push
jmp
fwait
cmc
jmp
neg
outsl
je
loope
xor
jmp
cmpb
enter
fnop
jmp
pop
mov
pop
lret
popf
fwait
push
pushf
and
ret
sahf
cmp
xchg
push
out
aaa
xor
mov
mov
mov
lret
jb
mov
arpl
mov
sahf
pop
or
dec
push
int3
nop
roll
std
jns
jmp
in
fwait
aam
adc
mov
loopne
mov
add
mov
stos
scas
loop
leave
fldt
les
lock
jae
xor
pop
cmpb
jb
cld
sub
pop
sub
pop
inc
aam
loopne
jmp
push
xor
mov
mov
sbb
ss
lock
in
lds
mov
test
or
sbb
fcompl
xchg
loop
sbb
icebp
mov
or
cltd
mov
adc
movsl
lods
out
or
mov
outsb
cltd
ds
cmp
js
stos
push
lea
xchg
pop
xchg
fwait
dec
into
jg
inc
jl
loopne
cli
scas
les
push
mov
stc
mov
mov
pusha
push
rorb
lea
mov
sub
inc
scas
mov
cmp
ss
cmp
sub
adc
aas
sbb
movsl
lret
mov
cltd
sbb
inc
adc
mov
cs
mov
shrl
cltd
xchg
or
ljmp
cmp
fstpl
fwait
xorb
shll
int3
imul
cmp
pusha
out
repz
mov
sti
mov
je
fwait
xorl
pushf
repz
cwtl
push
inc
cs
dec
aad
mov
bound
add
enter
pushf
cmp
stc
mov
repz
cmpb
out
dec
jo
mov
cli
cltd
shrl
add
test
out
adc
inc
lea
pop
cli
fs
imul
mov
insb
cltd
cmp
shlb
fistpll
sbb
cmp
cltd
and
mov
cmp
es
fsubl
jno
push
aas
outsl
and
fwait
cmp
sahf
push
mov
out
imul
pop
jbe
push
into
push
lret
jnp
iret
fdivr
repnz
movsl
in
or
imull
loop
mov
pop
cltd
xchg
aaa
dec
psubq
gs
int3
push
jmp
cltd
xchg
js
sub
movsb
jecxz
or
cmc
jbe
cmpsl
inc
push
or
xchg
dec
nop
out
cltd
lcall
std
cltd
mov
movsb
fwait
cltd
dec
pop
jg
or
lahf
mov
out
in
das
call
dec
push
mov
jg
mov
cltd
dec
mov
arpl
ljmp
push
pop
icebp
adc
lea
cmpsb
add
mov
cltd
ficompl
xor
mov
adc
out
push
inc
cli
dec
leave
cltd
insb
cmp
fstpl
sub
imul
dec
jo
mov
scas
push
xchg
fldenv
or
push
hlt
fstps
mov
lcall
xchg
test
push
repz
insl
adc
and
movsb
das
shll
dec
out
mov
cltd
ret
cmp
xor
cltd
outsl
int3
and
les
jo
xor
push
scas
or
adc
cltd
shrl
xchg
push
jp
sbbb
popf
pop
shll
mov
mov
lods
ficomps
outsb
imul
scas
fimull
lcall
sbb
loopne
out
cltd
cmp
mov
lea
sbb
fwait
imul
sbb
loopne
rorb
push
ret
sbb
add
adc
repz
insl
pop
cltd
cli
loopne
and
loope
xchg
or
scas
into
cmp
sub
pusha
add
cmpsb
xchg
mov
cltd
xor
aad
cltd
movsb
jmp
adc
rclb
mov
scas
jno
cltd
xchg
lea
or
mov
mov
and
sbbb
in
adc
loop
pop
daa
cltd
cmpsl
or
mov
xchg
scas
xchg
add
sub
test
cltd
push
xchg
fists
xor
cld
stos
lcall
inc
cltd
aaa
add
mov
fwait
lds
inc
xor
mov
out
insl
mov
jle
outsl
inc
mov
out
enter
sahf
cmpsl
jae
and
cli
test
out
jmp
loope
xlat
cltd
and
mov
je
xor
inc
js
cltd
xor
cmc
pop
insl
push
mov
push
xor
push
jne
jle
cltd
push
jge
pop
xchg
cltd
ja
sbbl
adc
dec
mov
cltd
mov
jge
stos
in
cmpsl
push
movsb
popf
pop
cmpsl
cmpsb
dec
inc
mov
or
xlat
or
in
addr16
pop
les
scas
ss
daa
mov
rcrl
and
add
mov
imul
lock
sub
lea
hlt
mov
cltd
push
jne
mov
lock
repnz
adc
mov
std
cs
in
cmc
stos
jo
push
mov
cltd
dec
jge
clc
repz
aaa
dec
jmp
xchg
sar
jae
arpl
and
cs
test
jo
shll
sub
cmp
clc
cmpsl
adc
or
jp
mov
jmp
arpl
dec
jns
adc
cmp
pop
fnstenv
mov
sbb
pop
sti
ret
cmp
es
stc
mov
xor
into
and
mov
xchg
jb
cmpsb
lcall
fneni(8087
mov
out
popa
sub
jno
jmp
fbld
test
adc
and
pusha
jmp
out
push
stos
pushf
lock
cltd
cmp
out
push
les
mov
in
ljmp
jle
lahf
idivl
jg
loopne
or
sub
pop
shl
rcll
icebp
gs
sbb
jmp
pop
andl
inc
xchg
std
sub
repz
cmp
out
fwait
call
and
and
stos
scas
addb
sbb
sbb
push
dec
jmp
test
add
push
cmpsl
pop
lret
outsb
pusha
push
or
leave
mov
push
pop
arpl
cli
push
lods
scas
cli
lods
inc
aas
cmp
mov
aaa
and
pop
test
das
add
cltd
in
pop
mov
cs
jnp
pop
lds
mov
out
jecxz
xchg
mov
pop
aad
cltd
pop
cmc
mov
cltd
dec
fucomip
rorb
jae
out
stc
xlat
lea
pop
insl
outsb
jno
popa
push
pop
add
mov
jg
and
mov
pop
cltd
mov
push
push
imul
cmpsl
and
pusha
add
or
das
push
sbb
mov
jo
dec
inc
dec
fdivrl
repz
cltd
push
je
mov
pusha
movsl
lret
cltd
mov
arpl
hlt
pop
pop
ret
mov
mov
pop
cld
jmp
fnstenv
pop
mulb
sahf
icebp
andb
cltd
test
cmp
push
sub
fwait
mov
jge
dec
sbbb
xchg
or
out
cmpsl
xchg
sub
add
inc
sbb
pop
jp
enter
jnp
pusha
lods
and
xlat
push
test
das
push
mov
iret
push
jns
js
mov
or
mov
pusha
mov
xchg
repz
xor
sbb
and
arpl
cltd
mov
pop
xchg
pop
mov
idiv
adc
or
mov
std
lret
subb
fnstcw
shll
mov
and
stc
add
scas
adc
pop
push
jp
cmpsl
int3
mov
lods
mov
cltd
inc
pop
jge
les
cltd
ljmp
jmp
fiadds
sbb
lret
push
mov
movsl
xlat
loope
sbb
scas
cltd
cmc
fimuls
mov
mov
fwait
mov
call
cltd
cmp
pop
push
mov
inc
clc
xchg
sub
enter
stos
xchg
push
cmp
cmpsl
insb
pop
jle
cmc
sub
subb
push
jmp
mov
outsl
in
cmpsb
and
dec
xor
dec
add
call
notl
add
notl
insl
jno
enter
cltd
fcomi
jl
into
sbbb
pop
int
outsb
mov
loopne
inc
ret
cltd
mov
cmp
jns
cltd
scas
sub
mov
cltd
pop
aam
mov
sarb
shlb
sbb
loope
cltd
icebp
lods
pusha
push
test
jge
pop
or
rcrb
out
push
inc
cltd
loop
and
stos
shr
mov
mov
jg
mov
imul
das
add
js
xchg
and
dec
inc
inc
push
stc
jne
push
inc
repz
mov
xchg
or
mov
aad
jle
mov
cltd
orl
mov
ret
sahf
pop
sbb
add
adc
dec
cltd
fisttpl
dec
or
pop
push
and
mov
leave
out
jns
mov
dec
in
movsl
pop
pop
test
cltd
imul
icebp
xchg
cltd
pop
push
mov
mov
sbbl
cltd
jae
cmpsl
fistl
xor
jnp
les
test
ss
sub
dec
cltd
xchg
sub
mov
int3
rcl
fucom
sub
xor
cltd
ret
cmc
rclb
sbb
scas
insb
xor
dec
or
and
add
pushf
jle
mov
hlt
arpl
out
fwait
xchg
loopne
and
jns
movsl
jle
enter
rolb
and
mov
out
clc
out
lods
popf
pop
cld
sub
insb
loop
ljmp
arpl
mov
cmp
pop
pop
loopne
inc
roll
clc
xchg
cmp
cmpsl
mov
lcall
std
push
push
sub
xchg
sar
xor
or
cltd
jle
and
insb
sub
sahf
xchg
test
fwait
ljmp
aad
mov
cmp
mov
cltd
movl
cltd
out
testl
sbb
sbb
mov
and
lahf
inc
xor
pop
test
dec
push
cmp
adc
sahf
and
out
sub
cmp
cltd
xor
fwait
addr16
lds
sbb
test
xor
rcll
and
mov
loopne
test
sbb
adc
mov
loope
js
scas
xchg
stos
cmpsl
adc
dec
or
sbb
jmp
ret
into
pop
jge
fimull
push
push
mov
cltd
and
or
test
jle
stc
push
aad
inc
loopne
xor
jae
fwait
test
popl
inc
cltd
push
shrl
pop
cltd
jmp
orl
jne
jmp
pop
and
mov
lods
fwait
ds
jns
shll
inc
daa
movsl
or
or
jecxz
xchg
fstps
add
adc
jmp
jle
pop
ficomps
sub
leave
xor
out
movsl
or
dec
cli
in
test
push
push
sbb
xor
xchg
jno
push
sub
adc
pop
xor
cltd
push
cmp
mov
repz
xor
cltd
mov
int
cli
fcmovne
out
scas
popa
enter
loopne
inc
sbb
cltd
dec
jg
mov
cltd
dec
aaa
test
sub
inc
mov
gs
fwait
cwtl
ret
xor
push
cltd
xlat
xchg
pop
scas
cmpsl
xchg
sahf
mov
sti
jns
xchg
dec
es
scas
cltd
mov
cmpsb
out
cmpsl
repz
mov
fsubr
movsl
cltd
and
fcoms
shl
pusha
mov
pusha
out
xchg
add
test
sti
or
fcoml
test
clc
dec
dec
lock
mov
cltd
or
call
cmp
mov
repz
and
ja
mov
mov
pusha
jge
push
pop
test
mov
test
aad
cmp
lods
cmp
and
push
outsl
mov
leave
push
or
scas
int3
mov
outsb
and
mov
loope
int
inc
jae
cmp
adcl
mov
sub
add
icebp
lds
add
std
cltd
hlt
test
xor
or
pslld
cltd
pop
sub
fcoml
mov
adc
push
subl
popf
cltd
jne
mov
mov
int3
addr16
xchg
ss
jb
or
pop
stos
jmp
add
jecxz
mov
mov
add
ds
pop
cltd
sahf
stos
ffree
sbb
mov
cltd
js
xchg
push
cltd
jnp
movsl
adcl
jl
cld
daa
stc
mov
add
fwait
cltd
divl
test
cmpsl
fs
daa
rorl
mov
cltd
jle
cmp
or
lret
sub
cmp
xor
or
and
pop
push
cltd
inc
out
adc
cltd
mov
pop
dec
mov
sbb
sti
xchg
scas
fldcw
xor
jmp
sub
xchg
jg
andb
hlt
nop
cs
fimull
punpcklbw
xchg
enter
outsb
push
aad
jne
loopne
je
push
lret
movl
add
cltd
adc
and
sbb
sti
ret
push
push
cmp
es
or
dec
add
cltd
and
mov
fwait
in
test
xchg
mov
cltd
jle
adc
shlb
sbb
lcall
mov
xchg
mov
mov
mov
cltd
cld
es
jp
mov
sarb
lods
cmpsb
and
push
jmp
sbb
xor
mov
and
cltd
rol
or
dec
xor
xchg
jne
repnz
jl
aad
push
xor
lret
lcall
lock
scas
mov
lcall
mov
sbb
rorl
jl
cmc
test
insl
mov
sub
jle
cltd
insb
ficompl
not
insl
dec
les
incl
mov
push
pushf
cltd
int
lret
sub
sub
enter
dec
stc
daa
pop
popf
xor
mov
sbb
outsl
ficomps
dec
ljmp
dec
pushf
adcl
adc
daa
fld
xchg
dec
or
aas
pushf
mov
push
ret
idivb
inc
cmp
add
mov
dec
xchg
call
pop
out
xchg
aaa
jecxz
xchg
ljmp
or
sub
mov
sti
arpl
ficomps
iret
cmp
sbb
les
rclb
mov
lea
mov
arpl
pushf
jb
sti
mov
call
fwait
lock
inc
gs
sbb
out
gs
inc
leave
movsb
push
pop
enter
jmp
ljmp
jmp
pusha
adc
xor
rolb
sbb
aam
outsb
dec
xchg
stos
inc
mov
test
out
mov
popa
jg
call
out
rorl
clc
xchg
call
jmp
cmp
lock
out
xchg
and
sub
mov
orb
inc
ja
ret
jg
sub
lret
mul
jb
loopne
jbe
negl
push
data16
xor
inc
jmp
lahf
and
and
sbb
dec
test
div
add
xchg
popl
push
mov
mov
pop
or
fistpl
jns
xor
fistl
sbb
push
pop
fcoml
jbe
test
lret
sub
int
dec
jge
pop
and
jae
add
lods
ret
jne
fnop
mov
dec
shll
cmp
out
xor
stos
jmp
jg
adc
cmpsl
mov
popf
mov
mov
jmp
sub
pop
xchg
into
sub
movsl
adc
jle
cmpsl
fs
xchg
adc
sbb
cmp
sbbb
push
sahf
adc
xor
loopne
and
subb
clc
adc
fldcw
pusha
or
xchg
adc
mov
addr16
leave
mov
jge
hlt
sti
lret
enter
lahf
mov
dec
add
inc
lock
ret
push
jge
stos
inc
pop
sub
ret
aam
xor
fwait
and
enter
repz
dec
xchg
mov
jecxz
xchg
stos
cmpsl
and
cmp
adc
rcrl
lcall
movl
ss
data16
std
jnp
popa
sub
call
leave
and
add
dec
jbe
and
lea
or
sahf
int3
popa
ja
sbb
popa
and
loopne
imul
lret
fs
testb
or
inc
mov
and
ss
mov
xchg
packssdw
popa
pop
jae
mov
jnp
clc
xchg
xchg
es
cmp
xchg
cmp
sbbl
loopne
dec
aas
dec
idivb
mov
jae
mov
fld
sbb
mov
xchg
cmpb
fwait
xor
jns
mov
jmp
jmp
es
push
les
daa
lret
pop
jle
sbb
jmp
lds
adc
and
imul
lock
shr
inc
push
mov
outsl
ljmp
push
out
mov
leave
mov
faddp
and
push
into
insl
jmp
ss
or
add
jmp
ficoms
xchg
or
out
mov
imul
jmp
mov
test
rol
not
sub
jg
add
jae
xchg
add
ret
orb
pop
xchg
in
stos
jp
clc
xchg
mov
outsb
and
push
mov
jl
mov
xchg
in
add
and
pop
adc
push
mov
mov
out
and
pop
outsl
scas
cltd
les
adc
popl
aas
adc
xor
sahf
lret
imul
shl
push
lret
inc
pop
cmp
xchg
xor
mov
sbb
cmp
loope
mov
test
jmp
fdivl
aam
ret
lret
notb
movsl
insb
out
aas
js
jnp
inc
adc
call
int3
pop
push
or
fbstp
cltd
xchg
jmp
loopne
jb
sub
jno
sub
imul
xchg
dec
je
jns
mov
test
mov
adc
repz
rorb
sub
sahf
dec
repz
xchg
dec
cwtl
iret
fistl
popf
addr16
sbb
or
fimuls
inc
lret
leave
mov
cmpsb
sbb
inc
fldenv
lea
cmp
jecxz
pop
pushf
sub
pop
les
dec
mov
jo
enter
outsb
mov
push
sti
add
push
pop
mov
int3
sbb
mov
jns
mov
dec
mov
loopne
out
jmp
shl
and
adc
and
mov
mov
test
dec
add
popf
mov
call
lods
mov
sti
jg
or
xchg
les
mov
jno
xor
aas
cmp
mov
xchg
movsl
cmp
cmp
jle
insb
xlat
pop
pop
inc
outsl
mov
and
into
sub
or
lods
inc
xor
push
pop
sub
cmp
mov
xor
and
xchg
jecxz
pop
sub
arpl
adc
cmp
cltd
les
ret
cmpsb
fistps
pop
mov
and
mov
xchg
mov
outsl
jne
lret
ror
jmp
iret
jb
xchg
inc
ret
ret
and
fiadds
push
test
or
sub
push
mov
scas
mov
notb
sbb
cs
push
jno
stos
xor
mov
lret
cmp
xchg
pop
push
jmp
jmp
inc
lahf
call
sub
or
mov
fcmovb
sbb
stos
loopne
mov
xchg
xor
and
or
pushf
adc
shlb
push
cmp
fsubrs
out
jmp
or
xor
xchg
cltd
outsb
lahf
sarb
inc
mov
mov
inc
mov
xchg
nop
iret
dec
add
iret
pusha
insl
add
imul
mov
popa
in
pop
add
sub
jne
stos
mov
inc
mov
jge
sbb
push
aam
jbe
and
mov
xchg
pop
fcmovnb
popf
std
cwtl
jne
jmp
shl
jecxz
mov
mov
movsl
mov
lahf
popf
popa
cld
push
out
or
je
fwait
idivb
or
pop
ret
orl
xchg
orl
push
adcb
mov
js
push
mov
mov
mov
mov
pushf
repz
decb
rclb
cmc
fists
sbb
lahf
dec
mov
jl
xor
pop
aas
cmpsl
popa
and
push
rcr
imul
shr
mov
dec
jmp
fisubrl
xor
ljmp
mov
sbb
test
jg
cmp
push
push
mov
jmp
or
xor
pop
stos
jne,pn
push
in
adc
inc
cmpsb
or
dec
mov
mov
jmp
js
mov
jns
pushf
movsl
outsl
add
cmp
lods
ds
push
or
cwtl
loopne
fdivr
mov
nop
xchg
pop
in
sar
sbb
dec
mov
sub
dec
xchg
jg
fsubl
test
mov
in
imul
inc
into
add
jmp
pop
outsl
push
or
adc
push
int
stos
popf
pop
fisubl
movl
or
addb
popf
imul
mov
movsl
mov
push
out
pop
daa
orl
insb
and
xor
fistpll
jbe
mov
push
cmp
andb
mov
and
loope
fdivr
stos
jmp
xor
dec
jmp
xchg
mov
pop
add
pushf
adc
pop
mov
cli
test
inc
lods
or
movsb
jne,pt
jmp
pop
sbb
mov
pop
jnp
bound
test
or
in
cltd
pusha
xchg
jbe
imul
mov
push
aad
adc
icebp
ljmp
or
fistps
pop
call
fcoml
cltd
pop
addr16
or
xchg
push
gs
test
adc
fistpl
pop
lock
pop
mov
cltd
pop
cwtl
mov
dec
loopne
shlb
scas
sub
push
sbb
mov
dec
xor
push
lds
jae
sub
xlat
loopne
cltd
sub
lods
inc
mov
inc
movsb
iret
or
outsl
shlb
std
fwait
push
scas
mov
add
sub
push
xor
mov
adc
or
sbb
aaa
mov
addr16
pop
cltd
mov
pop
fbstp
dec
pop
cltd
or
je
cltd
aas
sub
xlat
adc
pop
mov
nop
mov
pop
mov
cmpsb
cmp
hlt
mov
mov
mov
fimuls
fcoml
in
movsl
pushf
scas
lods
mov
mov
mov
cli
out
mov
fstps
rol
mov
int3
cmc
cltd
pop
mov
inc
mov
xor
les
shlb
and
popa
repz
xor
and
or
or
movsl
inc
adc
negb
out
cltd
mov
ljmp
pop
cltd
xor
inc
repz
cs
lds
adc
xor
inc
dec
cld
scas
cltd
adc
cwtl
and
movsb
cltd
call
xchg
push
pop
movsl
shrb
xchg
lcall
sbb
pop
int
ss
rcrb
daa
jnp
adc
and
inc
cltd
in
push
lret
out
clc
push
pop
int3
mov
mov
outsl
in
adc
inc
mov
es
inc
and
popf
and
lahf
sbb
xchg
int3
test
push
mov
sbbl
mov
scas
fwait
fs
push
pusha
into
aad
cs
pop
cltd
adc
add
loopne
out
mov
xor
and
cltd
mov
jo
lds
or
xchg
pop
xchg
in
inc
inc
or
or
insl
add
cld
int
cltd
icebp
xor
popf
iret
push
mov
and
or
add
je
cld
sub
push
enter
daa
mov
cltd
out
nop
in
popf
cltd
data16
adc
sbb
jmp
jge
jg
mov
addr16
fldt
lods
cltd
mov
pop
std
dec
out
and
jns
fbld
dec
js
fsubr
cmp
cltd
mov
das
inc
mov
popa
mov
sub
ja
mov
stos
cltd
cs
inc
mov
jecxz
addr16
out
jmp
adc
cmp
pop
jl
pushf
sqrtps
cltd
mov
xor
or
cltd
jl
jg
lcall
fisubl
sbb
dec
mov
popf
lret
fwait
aam
out
aas
xor
test
ret
mov
fildl
or
jge
add
inc
decl
cltd
push
outsl
xchg
aas
dec
rcrl
or
xlat
rcrb
adc
scas
pop
pop
inc
pop
cmp
cmp
jle
movsb
das
popa
push
cltd
xor
jb
subb
xor
or
je
stos
ds
scas
jns
dec
mov
adc
jno
inc
lcall
sbb
ja
dec
cltd
and
aad
pushf
test
adc
and
sbb
xchg
xchg
into
scas
sub
add
mov
pop
mov
stos
fildl
dec
outsl
adc
dec
cltd
icebp
js
pusha
imul
mov
mov
fsubr
sub
loopne
push
push
scas
pop
test
mov
pop
mov
and
shll
adc
push
jb
sbb
mov
sub
inc
in
movsl
in
add
movsl
scas
xchg
dec
push
imul
inc
pop
inc
pop
push
mull
cltd
cmp
mov
lcall
data16
enter
push
or
cltd
fs
push
sbbb
cmp
enter
dec
sbb
and
insb
cltd
jno
leave
xor
fidivrs
lds
icebp
adc
ja
cs
scas
loopne
imul
xor
loop
and
adc
popa
and
xchg
push
cltd
fwait
mov
pop
cltd
cmc
push
pop
xchg
mov
shlb
shrb
mov
ljmp
test
fs
cs
lret
jp
cmp
adc
mov
inc
jno
or
hlt
mov
sub
adc
add
insl
xchg
cmp
orb
hlt
enter
clc
fwait
ljmp
or
jns
rep
sti
cltd
idivl
inc
gs
inc
mov
jbe
leave
jne
enter
rol
sub
fnstcw
int3
mov
add
icebp
sysexit
mov
xchg
jl
pop
lds
cltd
or
sbb
fstps
fsubrs
inc
mov
xchg
cltd
jl
scas
cmp
add
addr16
jno
inc
xchg
das
mov
push
shlb
nop
lods
stos
repnz
mov
aam
pop
xchg
add
cmp
and
pop
cltd
mov
shll
fdivl
out
jbe
cltd
jle
stc
in
xlat
and
in
sbb
les
xchg
imul
imul
repnz
cmp
cmpsl
fs
cmpsl
popf
adc
pusha
jl
in
pop
sbb
shlb
hlt
push
mov
fldcw
mov
mov
jnp
inc
decb
jae
inc
ljmp
cltd
cmp
xchg
mov
cmpsl
inc
mov
xor
mov
pop
xchg
clc
lods
outsb
pop
cltd
popa
push
push
and
ret
cltd
pop
sbb
mov
cmp
push
mull
adc
pop
dec
mov
jbe
cmpsl
xchg
stos
sbb
cltd
xchg
push
xchg
sbb
jmp
cmpsl
mov
es
mov
sbb
daa
shlb
xchg
sbb
push
xchg
or
add
dec
je
pop
pop
sub
stc
jno
push
stc
scas
mov
call
in
xor
loopne
insl
dec
aam
cmpsl
rcll
mov
pop
push
sub
loope
cltd
adc
popf
mov
and
sub
sub
aad
pop
dec
xchg
icebp
cmpsl
roll
repnz
adc
mov
xor
cltd
imul
xchg
adc
scas
mov
sarb
jo
inc
pop
cltd
jne
or
cltd
xchg
fildl
mov
cld
jnp
cltd
and
fisttpl
icebp
mov
rcrl
add
cltd
pop
pop
cmpsl
mov
sbb
popa
cltd
cmp
fldcw
pop
pop
sbb
imul
lcall
enter
icebp
dec
cmp
outsl
stc
fs
aas
rorl
dec
cmpsl
xchg
cltd
imul
leave
xchg
mov
cmp
mov
fimull
dec
mov
iret
mov
inc
ret
sbb
dec
adc
jmp
movsb
nop
or
loop
xchg
and
inc
outsl
mov
xchg
adc
sbb
inc
cmp
shrb
adc
jle
sub
mov
cmpxchg
les
sbb
sti
sub
cmp
orl
xchg
mov
mov
ss
cmc
shrl
xchg
jmp
jl
cltd
ret
cwtl
fbld
jmp
lahf
fimull
ja
or
mov
inc
mov
push
loopne
imul
mov
cmp
outsb
stos
mull
sbb
push
int
xchg
popf
test
aaa
and
jne
sahf
jecxz
jb
or
mov
ss
push
inc
push
pop
movsb
pop
insb
mov
or
xor
int3
test
mov
jmp
div
movsl
lods
and
jmp
push
inc
adc
xchg
mov
cmp
insl
mov
mov
lds
xor
jo
xor
dec
mov
pop
and
dec
mov
fwait
lock
mov
add
movsl
sahf
ja
inc
pusha
icebp
stc
mov
int3
push
pop
in
xchg
cmpsl
test
inc
jb
adc
cmpsb
outsl
mov
fcoms
jns
push
jmp
test
mov
push
or
jle
jae
sub
push
repz
inc
jmp
xor
add
cli
jmp
xor
sbb
sarl
cmp
mov
sbb
outsl
mov
jmp
in
ret
aad
sbb
mov
lcall
fwait
push
jmp
inc
xchg
push
in
sbb
in
pop
test
icebp
dec
daa
pop
push
lock
dec
add
inc
repz
stos
cmp
outsb
rorl
ror
inc
mov
jmp
xchg
shlb
cmpsl
lods
mov
jmp
add
cli
mov
jle
jg
xchg
mov
sub
scas
fiadds
jmp
cmp
cli
push
add
mov
lcall
pop
and
jbe
pop
adc
fsubl
sbb
sub
aam
filds
out
mov
mov
lahf
test
sub
jle
fstps
loopne
clc
sub
or
xor
sub
pop
dec
shlb
mov
aaa
sub
cld
icebp
cmpsl
or
push
xchg
fwait
icebp
and
sbb
mov
rorl
fdiv
lcall
sub
dec
bound
rol
inc
xor
movsb
fwait
adc
xchg
mov
adc
test
and
enterw
push
sbb
stos
adc
mov
xchg
mov
movsl
jle
lret
imul
lret
ds
into
test
negl
mov
lds
fld
sbb
xchg
mov
fld
lock
test
int
adc
imul
dec
push
inc
hlt
sbb
insb
insl
xchg
jle
ljmp
and
dec
push
mov
and
adcb
cmp
out
cli
fimull
sbb
cli
movsl
or
pop
mov
cmp
pop
mov
popa
jl
mov
inc
mov
fcoml
pop
push
push
daa
dec
es
mov
loope
lcall
loopne
scas
xchg
mov
sub
fwait
jecxz
adc
cwtl
cmp
lahf
dec
lock
loopne
sub
les
mov
loopne
jno
loope
rcl
jbe
call
pop
mov
into
inc
mov
pop
sbb
and
fsubrs
mov
popa
imul
out
cmc
rcrb
mov
push
mov
sahf
test
mov
test
and
lods
shlb
frstor
dec
push
mov
mov
pop
subl
inc
dec
mov
outsl
xchg
stos
out
cmpl
add
out
xor
inc
inc
jl
mov
into
out
mov
jb
enter
jbe
movsl
stos
add
enter
push
adc
mov
cmp
jno
pop
pop
jp
mov
cwtl
push
rolb
test
sbb
adc
cmp
ljmp
idivb
and
std
mov
lahf
in
movsl
gs
lea
xor
loopne
adc
jb
xchg
adc
mov
aam
lret
popa
xor
dec
and
jmp
xor
les
pop
inc
push
je
sub
movsl
mov
xchg
movb
jmp
sub
or
mov
add
push
add
gs
movsb
jo
add
arpl
push
subl
pop
inc
fstl
dec
iret
xor
jmp
mov
out
adc
imul
test
inc
and
or
aaa
ja
sub
or
dec
stos
jecxz
leave
mov
data16
inc
cmp
or
xor
jno
inc
sbb
and
push
test
addr16
add
shll
ret
sbb
xchg
shlb
out
jg
cmc
xchg
xchg
fsub
sub
fsubp
pop
xor
inc
jns
pop
jmp
dec
icebp
stos
xchg
call
cmp
sub
xchg
pop
es
rclb
sub
cwtl
int3
das
push
rcr
sub
call
push
std
or
mov
pop
sub
mov
mov
aam
ljmp
icebp
pop
call
loope
cltd
adc
sbb
test
repz
insb
sahf
test
pop
mov
test
mov
mov
dec
imul
lret
xchg
rcr
sbb
call
leave
ss
cmp
int3
loope
stos
in
rolb
nop
lock
dec
stos
les
mov
stos
dec
and
and
decl
xchg
xchg
add
pushf
or
cwtl
in
pusha
popa
inc
repnz
mov
mov
mov
movzbl
jb
adc
int
and
dec
jmp
mov
push
cmp
mov
sbb
inc
inc
sub
inc
sbb
mov
jo
adc
mov
cmpsb
xchg
inc
and
jbe
jbe
mov
sub
sbb
cmp
verr
push
fs
ret
pop
pop
mov
mov
cmp
ret
inc
icebp
dec
cmp
xchg
add
popf
cmp
jne
push
repnz
dec
sbb
xor
fwait
in
pop
mov
mov
pop
pushf
cmpsl
or
mov
fisttpl
adc
xchg
je,pt
inc
into
stos
sub
jmp
sub
mov
rcr
push
ljmp
xchg
mov
push
pop
jp
pop
roll
pop
lret
mov
pop
add
lods
popa
out
jmp
je
xor
jmp
push
mov
popf
sub
mov
push
xchg
loopne
xor
push
mov
or
adc
xorb
jmp
scas
jle
cmp
imul
jns
dec
xchg
mov
movsl
fidivrs
pusha
stos
fucomp
insl
in
sarl
jbe
push
lea
loopne
fnstcw
int
mov
push
pop
call
sar
sub
pop
ret
pop
ffreep
mov
enter
sub
scas
push
imull
addb
jns
mov
jmp
xor
sahf
add
lret
dec
mov
mov
cwtl
adc
inc
xchg
xchg
lret
cmpsb
mov
icebp
push
pushf
jmp
cmp
pop
cli
mov
push
mov
leave
mov
cmpsl
jmp
cmp
pop
jp
add
lods
jno
rep
mov
sub
jmp
adc
test
inc
cwtl
push
testl
outsl
aaa
xchg
stos
jmp
and
cmp
mov
test
xchg
cmp
jg
inc
mov
leave
insb
push
sbb
adc
dec
dec
stc
cmc
pop
cmp
je
stos
lock
in
mov
pop
shrl
dec
add
adc
xchg
test
cltd
pusha
mov
dec
repnz
sub
adc
dec
pop
sahf
xor
cltd
pop
adc
jge
clc
pop
pop
adc
cltd
call
and
or
sub
movsl
stos
mov
loopne
arpl
in
lret
mov
jl
sbb
nop
xchg
jp
cltd
xchg
inc
mov
call
add
mov
cltd
cmp
test
fwait
sbb
test
pop
gs
pop
inc
sub
hlt
or
imul
add
cltd
negb
jns
cltd
data16
cmp
sbb
ficomps
push
cmc
imul
push
dec
fstl
and
movsb
cli
xor
push
cltd
ficompl
mov
jp
scas
jo
jnp
add
push
mov
cltd
int
inc
imul
out
dec
pop
inc
shlb
adc
daa
sbb
or
cmpsl
imul
fsubrs
cltd
dec
call
xchg
out
cltd
ret
aaa
or
jae
jmp
push
cltd
js
push
xor
test
xor
jnp
mov
pop
inc
stos
cvtps2pd
jg
or
lcall
mov
or
mov
cltd
jge
enter
lret
cld
test
in
or
test
ljmp
push
int3
cltd
pop
sub
fildll
sub
inc
cltd
fildl
je
aaa
gs
pushl
lcall
mov
cmp
lea
and
lcall
ficoml
out
mov
adc
xor
pop
insb
dec
cmp
jmp
and
cmp
jl
mul
jp
test
cli
mov
pop
add
sbb
mov
mov
lock
inc
outsb
cwtl
dec
or
divl
dec
sub
scas
cmp
ljmp
dec
shll
fadd
imul
mov
das
aaa
mov
fcomip
and
jo
faddp
mov
dec
dec
and
stos
iret
xchg
push
inc
dec
mov
dec
mov
fsubrp
push
cmp
sbb
int
mov
stos
clc
sub
lock
xor
adc
jb
mov
repz
clc
or
insl
sbb
xorl
sbb
xor
pusha
adc
cwtl
imul
dec
mov
sbb
pop
aas
xchg
mov
mov
xor
mov
clc
lock
pop
lret
aam
bound
inc
les
lods
sarb
push
jb
in
sub
cmpl
out
sub
into
mov
sbb
jmp
cltd
lods
adc
mov
leave
daa
dec
mov
xchg
pop
mov
stos
mov
adc
jne
icebp
or
push
mov
decb
cmp
adc
pop
std
cmp
aam
daa
shll
xor
into
inc
icebp
mov
ret
fldenv
push
jmp
pop
xchg
icebp
mov
cmp
jbe
sub
sub
jmp
test
mov
adc
movsl
pop
cltd
dec
dec
cmp
inc
add
aaa
icebp
adc
cltd
dec
leave
les
mov
jae
cltd
test
insb
repz
call
or
pop
ljmp
icebp
and
push
int
fs
mov
xchg
mov
mov
adc
addr16
sub
mov
mov
jle
fs
int
sbb
cmp
fwait
lods
inc
push
mov
ljmp
xchg
imul
xchg
jmp
mov
adc
es
inc
jns
pop
add
cmp
push
sub
cltd
stos
sub
out
jno
pop
push
pop
jne
jmp
mov
rorb
lds
mov
mov
cltd
arpl
sbb
and
dec
das
out
loope
pop
lcall
pop
lret
jmp
loop
call
aad
imul
lcall
cs
in
add
cltd
and
pop
dec
lahf
addr16
ss
fld
mov
gs
ffreep
adc
sbb
cmc
aas
xor
fwait
mov
xchg
ficoml
imul
fldenv
rolb
adc
cltd
cmp
cmp
cltd
jnp
movsl
sub
xchg
mov
xchg
sub
sti
push
leave
mov
mov
fcomp
push
das
mov
xchg
imul
sub
cltd
dec
enter
xor
lcall
hlt
cltd
out
inc
pop
adc
sub
pop
dec
cli
inc
cmpsl
mov
push
mov
sbbb
and
int3
inc
cltd
mov
xchg
shrb
jb
pop
mov
cltd
scas
jg
xor
rcll
mov
push
ss
mov
and
lret
out
sbb
xor
pop
jno
scas
aaa
loope
imulb
outsb
mov
xor
inc
call
and
call
scas
lea
rclb
scas
dec
pop
imull
rclb
mov
push
jne
add
pop
ss
or
mov
adc
pushf
xchg
stc
cltd
xlat
call
pop
mov
sub
xor
xchg
cwtl
sbb
pop
mov
loopne
out
fsub
cltd
gs
test
dec
mov
xchg
lahf
cltd
xchg
inc
sub
jbe
lods
mov
hlt
cwtl
imul
cltd
into
adc
xor
rclb
setg
lods
cltd
or
cmp
cltd
and
jbe
pusha
popf
adc
mov
mov
stc
mov
push
scas
in
dec
sahf
imul
and
sbb
stos
addb
and
and
jge
cltd
pop
dec
aad
xorl
dec
icebp
pop
stc
xor
mov
mov
iret
mov
add
push
pop
loop
push
stos
jl
cltd
inc
lods
call
cltd
call
mov
imul
test
lds
lods
cmp
jge
lods
repnz
push
cmp
and
shr
lcall
loope
fmulp
cltd
jb
fs
enter
cltd
inc
mov
incl
insb
mov
sub
mov
jmp
jae
adc
cltd
sbb
sbb
dec
in
gs
lods
mov
loopne
frstor
mov
pop
outsl
jne
and
pop
aas
and
xchg
push
int
push
in
mul
xlat
sbb
mov
call
pop
movsl
mov
test
xchg
xor
cltd
mov
std
jae
dec
mov
push
pop
cltd
jmp
int3
test
dec
mov
cltd
inc
cmp
mov
dec
mov
loope
inc
jno
das
cmpsl
cltd
inc
sbb
add
popa
mov
cltd
icebp
arpl
fistpl
adc
pusha
imul
pop
and
fdivs
insb
dec
shr
cltd
test
xchg
mov
mov
pop
addr16
fwait
jns
jmp
cmp
fldenv
fndisi(8087
fldcw
rcrb
jbe
sub
fwait
xchg
cwtl
xorb
mov
mov
dec
add
or
lahf
cmpsl
jb
insl
jbe
mov
nop
lock
inc
push
or
sbb
nop
test
aad
xchg
repz
xchg
ret
cmp
or
fsubrs
in
pop
push
mov
and
add
mov
dec
rcll
cltd
mov
xchg
std
fwait
subb
cltd
dec
mov
mov
jp
sbbb
lock
leave
cltd
dec
insl
pop
cli
adc
pop
push
pop
xchg
push
xlat
jnp
add
je
lret
ss
fsubrl
fld
push
sbb
mov
std
mov
or
scas
cltd
jecxz
mov
dec
repnz
das
cltd
add
xchg
push
cltd
mov
int
or
push
repnz
flds
out
xor
insl
lods
cltd
fst
js
lahf
sbb
aas
icebp
jg
aaa
pop
cltd
scas
in
fidivs
jecxz
add
pop
xchg
cmpsb
cltd
push
ds
sub
popa
test
fstpl
shr
mov
aad
ror
xchg
xor
sbb
add
cltd
jno
sarb
mov
xor
or
mov
loopne
cmc
push
leave
subl
mov
rol
arpl
cltd
push
jo
sub
cltd
pusha
and
dec
xor
in
jnp
stos
adc
scas
cltd
add
mov
cltd
ljmp
cmpsl
dec
jle
addb
inc
jmp
mov
jge
sbb
xor
pop
xor
scas
xor
sbb
sahf
sub
pop
mov
mov
or
add
sarl
cmp
subb
aas
push
fsubs
ljmp
cltd
mov
xor
mov
adc
mov
push
cmp
out
movsl
das
cmpsl
mov
and
jge
sbb
fwait
cltd
sahf
sarl
mov
add
xor
aas
ljmp
lret
jbe
aad
cltd
lods
xchg
stc
in
rolb
jno
or
lret
mov
cltd
cld
cmc
mov
sbbb
mov
mov
push
cltd
mov
lcall
ds
add
add
stc
fwait
push
pop
inc
jo
mov
add
mov
cltd
jecxz
jnp
andb
adc
cltd
les
xchg
neg
cltd
cld
sahf
xchg
and
dec
cwtl
and
adc
ret
nop
mov
inc
sub
cltd
into
dec
xor
pop
movsb
repz
mov
cltd
push
adc
scas
notb
inc
roll
icebp
fistpl
mov
call
push
and
adc
adc
jbe
aas
mov
sbb
cwtl
stc
popf
mov
and
jns
push
mov
icebp
pushf
lods
cmpsl
sbb
ja
cltd
dec
sub
jae
push
xchg
sub
or
or
test
cltd
call
jne
cs
sub
add
inc
lds
push
stos
adc
stos
sub
add
sti
cltd
xchg
xlat
dec
mov
cltd
xor
int
dec
xchg
sub
jns
sbb
lock
js
out
or
loopne
xchg
sub
cltd
add
sti
repnz
push
mov
fcompl
inc
mov
sub
scas
aas
inc
outsb
sti
sub
lock
popf
add
or
push
cltd
adcl
fwait
lds
sbb
out
int
cltd
mov
testb
dec
cmp
cmp
in
loope
outsb
outsl
aam
fdivs
and
cmpsl
jp
push
loopne
test
jle
push
mov
xlat
cmp
mov
fsqrt
and
pop
inc
mov
mov
cltd
mov
data16
repnz
push
mov
and
push
ds
fldcw
dec
bound
cltd
push
and
movsl
sbb
push
mov
cltd
popl
popf
fwait
les
mov
or
movsl
pop
je
inc
ds
lcall
aam
mov
cmp
icebp
sbb
xlat
inc
sarl
cmpsl
cli
jmp
cltd
mov
incb
fwait
xor
nop
loope
xor
mov
icebp
sbb
in
and
jle
movb
cmp
roll
add
mov
js
cmp
mov
sbb
adc
mov
lods
loopne
arpl
inc
aas
xchg
rep
mov
fists
movsl
ds
imul
adc
jle
cmpsl
test
jb
and
inc
push
push
add
inc
mov
loope
add
adc
outsl
subl
testb
mov
int3
repz
stc
jle
mov
loope
sub
test
xor
cmp
adc
lea
out
inc
mov
and
mov
jo
fimuls
mov
stos
push
inc
jmp
int
fs
mov
sub
add
movsb
jmp
shl
pop
or
jp
sub
dec
xchg
mov
mov
mov
jmp
push
mov
xchg
sub
jmp
inc
es
enter
or
aaa
sbb
icebp
xor
adc
or
pop
mov
cld
mov
jmp
test
into
inc
lds
mov
jmp
or
aas
jb
sub
enter
pop
inc
mov
mov
mov
in
scas
lock
fcompl
pusha
popa
and
adc
out
add
cmp
cs
inc
and
inc
aaa
add
ror
loop
icebp
xor
push
push
fmuls
add
test
jmp
cltd
sub
jecxz
call
lods
xchg
addr16
out
stos
mov
jo
loop
int3
push
fucomi
pop
lds
ljmp
cwtl
add
xor
popa
dec
cltd
loopne
push
xchg
mov
xchg
int3
aad
jp
dec
push
cltd
xchg
xor
sbb
jnp
cltd
push
es
add
add
inc
or
xchg
push
pop
das
cs
fstpt
or
xor
sbb
test
sahf
gs
prefetcht2
xchg
addr16
cmp
mov
and
outsb
fmull
stos
cwtl
mov
jmp
cltd
movsl
jmp
js
push
and
negb
cltd
sub
xchg
adc
sbb
mov
jb
xchg
cltd
xchg
or
mov
sahf
js
cmpsl
repz
decl
out
and
dec
cltd
jecxz
push
outsb
cltd
dec
jmp
fadds
push
scas
or
inc
sub
andb
inc
add
jae
jns
mov
cwtl
fcmovnu
xchg
xor
popa
mov
cltd
or
stc
scas
aam
test
cltd
xchg
or
and
xor
stc
mov
lea
dec
sub
lcall
and
pop
mov
ss
into
jno
cltd
sbb
mov
cltd
xor
sti
hlt
popf
insl
pop
into
cltd
sahf
test
fimuls
out
jno
cltd
adc
xor
nop
fistpl
dec
sarl
mov
fwait
pop
mov
lds
inc
call
loopne
cmp
xor
cltd
mov
jmp
add
xor
sub
cmp
mov
sbb
je
testl
insl
aas
jo
mov
mov
pusha
repnz
mov
bound
push
or
mov
shrb
cltd
sbb
pop
popf
ret
dec
mov
stc
mov
pop
or
in
sbb
sbb
lret
subb
cltd
stos
push
pop
push
xchg
fs
repz
icebp
nop
cltd
fdivrl
and
or
out
cltd
xchg
mov
mov
sub
push
cltd
fistl
push
std
loopne
cltd
rcl
push
push
pop
out
lock
push
inc
aad
pop
push
cltd
insl
pop
movsl
dec
sahf
inc
mov
cltd
inc
fmull
xchg
into
jge
xchg
cltd
pushf
in
jne
mov
mov
sarb
fucompp
ds
mulb
flds
pop
push
psraw
jbe
sub
mov
or
je
fwait
shrl
ficoms
cmp
pop
enter
pop
mov
mov
cltd
pop
ret
stos
cmpsb
adc
cwtl
lahf
cltd
add
cmpl
data16
and
mov
xchg
fldenv
xor
mov
mov
sub
push
dec
dec
cltd
mov
cmp
jb
ficompl
sub
lahf
xchg
add
out
cltd
push
and
mov
cmpsb
sbb
popf
xlat
rcrl
jbe
pop
xchg
xor
or
sub
shlb
in
enter
fwait
iret
mov
xor
pop
loop
or
addb
cltd
push
enter
add
subb
call
lcall
shrb
stos
cmpb
into
aad
jecxz
mov
lret
pop
in
cltd
push
inc
push
in
jp
cltd
mov
xchg
in
or
sbb
mov
add
mov
add
out
sub
aad
in
xchg
push
pop
subb
and
sub
jns
fwait
or
sub
pop
mov
mov
cmpsl
dec
dec
cmp
mov
int
push
imul
and
in
cltd
jg
lock
mov
int3
bound
stc
jo
aas
lods
mov
mov
jae
mov
sub
test
ret
mov
fcompl
repnz
push
bound
adc
rcrl
test
xchg
xor
mov
icebp
xor
pop
cmpsb
fcomps
mov
int3
mov
aaa
sbb
push
push
xchg
outsl
inc
mov
test
lcall
ffreep
fnstcw
and
pop
pushf
fwait
mov
fcmovne
sub
push
push
xchg
inc
cmp
push
rorl
pop
loope
pop
lahf
jg
lcall
cltd
lock
das
sarb
sbbb
lods
mov
push
cltd
into
loop
std
das
adc
daa
and
sbb
test
mov
mull
aas
sub
in
mov
cltd
cmc
xchg
out
xlat
cmpsb
inc
stos
cltd
xchg
ror
fnsave
mov
and
les
ss
cltd
enter
xchg
or
xchg
pop
jno
sub
cltd
pop
sbb
movntq
fwait
mov
movsb
jg
pop
jb
cltd
push
scas
mov
cmpsl
xchg
pop
xlat
mov
aam
mov
test
mov
mov
shl
dec
mov
sbb
push
pop
add
ja
jae
cltd
enter
ds
fstpl
out
xchg
and
stc
repz
cmp
mov
jb
outsb
cmp
cltd
dec
lods
out
adc
je
cltd
xchg
std
pusha
dec
mov
push
fistps
pop
popa
stc
cmc
pop
cwtl
lcall
mov
insb
or
mov
cltd
adc
adc
scas
loopne
pusha
pop
inc
cltd
js
bound
ja
and
jno
add
pushl
ret
or
loopne
stc
pop
push
roll
pop
repnz
mov
lcall
orl
and
adc
les
mov
cli
cltd
xor
repz
push
xor
leave
sub
hlt
in
test
fisttpl
adc
cmp
xchg
hlt
cltd
lret
das
push
mov
xchg
add
sahf
sub
add
jl
jge
in
cltd
adc
aaa
lock
mov
sbb
nop
pop
inc
ret
adc
fsts
cltd
aas
movsl
cs
out
push
fwait
lret
inc
loop
push
mov
xor
cmpsl
subb
sub
mov
mov
rcrb
mov
xlat
mov
out
pusha
jo
fnsave
sub
xchg
jbe
adc
inc
xchg
aad
dec
xchg
shl
shr
mov
or
mov
dec
cltd
cmpsl
lds
or
fnstcw
ret
jmp
mov
pop
std
adc
push
rcr
or
cmp
push
outsl
push
jno
mov
es
cltd
out
push
dec
inc
dec
fnstsw
test
cmp
outsb
mov
aaa
out
into
pop
les
jno
jle
jae
cltd
xlat
sbb
or
invd
scas
nop
out
adc
dec
cltd
stos
xchg
pop
cmpb
notl
gs
jle
orl
ret
xchg
push
add
jo
lock
jne
cltd
shlb
jnp
loopne
stos
sbb
lahf
sbb
or
lea
rcl
push
lods
mov
movsb
fwait
aam
rcrl
jge
sbbl
jbe
jnp
test
pusha
ja
cltd
pushf
fldl
inc
or
mov
rclb
jge
jnp
cltd
sahf
push
out
cltd
sub
scas
lret
imul
pusha
mov
add
cmp
cltd
and
ret
cmp
mov
push
pop
or
test
mov
popl
scas
cmp
test
xchg
jp
pop
in
pushf
int
jecxz
add
pop
nop
cmp
mov
sbb
xor
insl
mov
cld
fwait
jbe
out
outsb
fs
pusha
enter
jno
mov
mov
aaa
xor
fwait
mov
mov
outsl
cmpsl
loop
xor
jbe
cltd
push
pusha
push
adc
popf
pushf
mov
scas
arpl
cltd
cmp
pop
cmpsb
cmp
lods
enter
dec
out
loopne
rcrb
vpmaxub
in
jg
aaa
cltd
push
fistl
je
pushf
lret
movsl
sti
mov
shll
rcrb
sub
xchg
popa
inc
mov
push
sti
jo
lods
ret
cltd
push
sub
cld
cmpsl
cli
aaa
jle
in
xchg
mov
xchg
sub
lods
fistl
or
cmc
mov
xchg
xchg
jno
cltd
inc
hlt
cmp
jae
lea
xchg
sub
fwait
lahf
add
cmp
add
loopne
stos
dec
lret
mov
pusha
jle
jae
xor
repnz
xor
xchg
je
inc
fwait
mov
lock
rcll
sbbb
xchg
cltd
ret
xchg
arpl
add
adc
in
sbb
mov
pop
hlt
test
stc
cs
jno
add
mov
inc
push
pusha
dec
scas
cltd
push
cmp
mov
push
lds
in
mov
inc
mov
sbb
inc
imul
mov
aad
fptan
test
dec
rcrb
push
inc
out
sahf
dec
cmpsl
push
imul
xor
das
fsubl
dec
cmp
cli
sbb
mov
jecxz
cltd
add
nop
pop
das
adc
cltd
clc
and
adc
mov
je
cld
mov
mov
pop
ss
xchg
push
adc
scas
jns
enter
aas
jbe
popa
cmp
jg
or
sar
and
cltd
cmp
mov
dec
cltd
vpunpcklbw
cltd
lea
sub
or
aam
push
loopne
sarl
andl
pop
cltd
test
lahf
xchg
loop
imul
popf
scas
and
movsl
test
mov
negl
fwait
add
push
mov
test
cmp
cltd
and
mov
pop
and
xor
mov
push
cltd
add
push
sbb
cltd
adc
pop
mov
insl
sub
cltd
mov
in
xchg
je
pop
rcrl
rcrl
sub
lods
aad
mov
mov
movsl
inc
and
shlb
jge
cltd
in
ficoml
inc
ljmp
and
xor
xlat
in
cltd
inc
or
out
pop
xor
pop
jmp
cwtl
mov
xchg
lahf
ret
and
shr
cmp
int3
repz
shl
ret
loopne
xchg
xor
jbe
cli
push
xlat
fmulp
mov
jmp
cmp
push
and
sbbl
or
mov
add
sbb
add
xor
jmp
imul
jp
xchg
mov
adc
adc
lahf
add
cmc
add
xor
sbb
std
xchg
dec
call
cmp
hlt
push
outsl
inc
add
fwait
mov
sbb
mov
xchg
lea
aam
pop
sub
xchg
jbe
cwtl
push
cmp
inc
fldenv
pop
sbb
mov
shll
and
aas
aam
stos
fists
jl
inc
dec
dec
sbb
lret
jnp
inc
push
movsb
mov
sub
adc
xchg
into
mov
xchg
inc
adc
loopne
xorb
inc
inc
mov
nop
dec
aaa
push
push
call
inc
pop
add
xor
xor
imul
jbe
stos
lods
mov
add
mov
pop
fwait
pop
les
inc
mov
mov
into
jb
or
arpl
stos
nop
jae
sbb
imul
lds
outsl
pop
sbb
stc
mov
xor
add
jg
movsb
cli
push
movsl
cmc
rcl
inc
arpl
aad
mov
jmp
jg
jmp
lock
cld
inc
pop
and
movsl
mov
pushf
sub
cltd
outsb
lock
cli
mov
shlb
adc
sbb
push
bound
pop
mov
adc
imul
push
push
push
jle
dec
ja,pt
jmp
dec
cmp
stc
enter
sbb
aam
sub
fldl
mov
stos
int
mov
shll
xor
test
xor
mov
sbb
cmp
sub
jnp
sarb
xor
xor
lea
cmp
fsubp
sbb
add
mov
stos
fucomip
jno
mov
jmp
fsubs
push
xor
push
jg
ficoms
mov
rcll
cmp
cld
ficomps
mov
cmc
mov
mov
or
jmp
mov
mov
and
or
mov
adc
rep
jmp
jb
test
setb
push
or
call
xchg
cmp
push
or
enter
into
nop
rclb
xchg
lock
andb
clc
addl
push
or
enter
popl
jbe
outsb
orb
das
sbb
jmp
jno
cmpsl
sub
lock
popf
and
jo
pop
fistps
and
fimull
daa
pop
les
sub
xor
xchg
jnp
loopne
inc
mov
fsubl
out
adc
xor
dec
das
jecxz
jg
push
loope
pop
pop
repnz
sub
popa
mov
cmp
rcl
xchg
xor
rcrl
cmp
inc
sub
sti
mov
add
jno
push
insl
data16
dec
outsb
int
movsl
stos
fsubr
mov
popf
lea
shll
push
iret
aam
add
test
jo
inc
cmc
shrb
pop
mov
fidivrs
push
ss
xchg
inc
dec
loopne
sbb
jnp
stos
and
cmp
dec
or
rclb
lds
inc
or
popf
push
mov
xor
ret
push
xchg
add
add
repz
test
outsl
fadds
jb
iret
pop
push
jmp
pop
bound
rcll
mov
xor
ret
call
push
push
xor
push
addr16
pop
jp
ljmp
jo
ret
add
mov
aaa
pop
lret
xor
jb
pop
sahf
mov
mov
and
fcoms
push
popf
and
xor
loop
sti
sub
imull
sbb
loop
jp
adc
out
pop
fmul
jmp
mov
jbe
sub
dec
stos
or
repnz
jns
lock
arpl
mov
icebp
das
push
jns
adc
fwait
popf
jmp
pop
andb
add
jg
enter
cwtl
movsb
mov
pop
adc
dec
adcb
aad
js
sbb
das
mov
mov
daa
call
sub
dec
push
pop
insl
sub
stc
and
sub
adc
push
and
cmp
cmp
inc
jmp
and
dec
ds
and
mov
lcall
pushl
sub
mov
mul
popa
xor
in
xchg
lods
mov
jmp
push
mov
cltd
clc
cmp
sub
jmp
push
lret
sub
xlat
sar
push
cld
sbb
mov
nop
sub
pop
dec
rcrb
sub
rcl
add
lahf
imul
ds
jnp
gs
ret
in
lret
sbb
cmp
push
and
in
lods
aas
popf
pop
dec
inc
lods
popa
pushf
fnstsw
pop
sbb
sub
std
sbb
insb
seto
lock
mov
mulb
es
mov
imul
stos
sbb
sti
out
insl
pop
or
lret
fcmove
lock
loope
testb
aas
cmpsl
insl
mov
sub
mov
push
push
shrb
xor
sbb
push
add
leave
adcb
es
inc
and
mov
jmp
sub
inc
mov
xchg
jge
xchg
data16
fistl
or
jmp
cmpsl
stos
push
in
mov
pop
fbstp
jl
jns
out
xchg
test
cmpsb
push
jle
test
jno
mov
notb
xchg
ret
adc
and
xor
xor
inc
cmpsb
jmp
ror
outsb
cmp
cmp
cmp
adcl
in
es
push
dec
jmp
sahf
and
imul
pop
rclb
imul
jo
pop
inc
dec
mov
loope
pusha
jecxz
mov
push
in
mov
out
jmp
mov
gs
sbb
ret
sub
jg
pop
int
addr16
lock
mov
mov
call
xor
xor
pop
cmp
cmpsl
cmp
or
movsb
adc
aam
mov
sahf
mov
andl
push
jp
inc
xchg
inc
popa
cmp
cmp
or
imul
mov
lcall
movsl
jno
xchg
mov
push
jge
jecxz
inc
jmp
bound
mov
iret
and
arpl
xchg
mov
or
iret
in
pusha
cs
lcall
std
sub
out
movl
lods
push
pop
add
gs
ret
sub
pop
inc
dec
xchg
stc
pop
push
repz
sub
outsb
clc
lret
sbb
jp
or
addl
mov
xchg
and
jl
ret
cmc
nop
scas
loopne,pn
hlt
imul
mov
stos
sub
popf
mov
mov
xchg
add
test
loopne
popf
outsl
jb
lret
out
inc
cld
xchg
add
mov
adc
int
push
mov
cmp
stos
pusha
cmp
and
pop
popf
add
mov
leave
shrb
xchg
imull
dec
inc
imul
in
stos
lret
xor
in
push
mov
xor
shlb
push
arpl
xchg
into
or
ret
and
ret
in
fildl
loop
pop
test
dec
stos
in
fsubrs
insl
dec
adc
adc
popf
cltd
mov
and
pusha
adc
rcrl
shll
push
lock
jmp
sarb
fdivl
jmp
ret
lea
and
jmp
adc
je
mov
mov
and
dec
pushf
push
mov
scas
pop
or
sar
sub
call
xchg
xchg
stc
es
test
inc
inc
inc
ss
pop
xorb
xor
mull
les
jg
movsl
jne
shrb
xchg
jmp
xchg
jo
inc
insb
and
or
rcrl
inc
aam
mov
loopne
mov
mov
in
pusha
loope
push
jne
pop
sarb
js
loopne
push
stos
ret
std
push
popf
dec
pop
out
or
add
ss
rcrb
popf
in
xor
lock
mov
movsl
std
mov
nop
mov
shl
int
sub
popf
bound
sbb
aam
inc
fsts
lods
pushf
push
sbb
gs
inc
add
test
inc
sbb
aaa
popf
sbb
adc
lods
lea
cmpsb
push
repz
lock
mov
cs
daa
in
xchg
inc
outsb
pusha
cmp
insl
insl
mov
push
cmpsb
into
cltd
loopne
xchg
lea
scas
push
jp
jmp
clc
sbb
ss
or
mov
jmp
test
inc
add
into
shrb
xor
ret
add
lret
xlat
xor
loopne
and
cmp
insb
mov
in
nop
adc
inc
mov
and
push
cmp
cmp
jp
adc
push
stos
or
push
stos
mov
cmpsl
sbb
mov
inc
inc
lock
in
sub
sbb
dec
mov
sub
mov
out
xor
pushf
testl
aaa
or
test
movsl
pop
in
cmp
push
jp
ds
lret
lds
call
xchg
pushf
jle
sub
popa
std
dec
mov
sbb
loope
push
jno
sbb
mov
dec
xchg
xor
mov
push
push
dec
ds
mov
cmpsw
lock
sub
leave
jmp
sub
cmp
xchg
mov
icebp
test
pop
cmp
push
std
jae
cwtl
mov
aam
scas
dec
and
cmp
adc
movb
fsub
cmp
dec
sub
xchg
jnp
cwtl
aaa
ds
arpl
arpl
fstpl
popf
and
fs
aad
aam
mov
pop
pop
dec
push
dec
inc
jmp
dec
and
cmp
out
icebp
push
pop
or
cltd
adc
xor
xchg
mov
cli
jmp
mov
lcall
jo
push
mov
jbe
inc
xor
test
adc
mov
aas
add
mov
in
push
xchg
stos
or
test
mov
push
lock
mov
mov
shll
cli
sub
das
mov
mov
pop
int
sbb
ret
or
push
mov
pop
adc
sbb
lds
int3
mov
adc
incb
in
std
dec
arpl
lret
mov
lcall
mov
push
mov
cwtl
jp
iret
jns
jmp
lret
scas
mov
iret
mov
cmpsb
ljmp
cmp
fbld
cs
add
mov
xchg
fisubs
sub
inc
inc
dec
and
arpl
outsl
fbstp
or
mov
js
dec
je
scas
jmp
daa
mov
aas
push
mov
inc
jmp
mov
jnp
out
sbb
lret
dec
mul
incb
aam
jle
out
lock
stos
xchg
jbe
ret
sub
and
cmp
into
aam
mov
or
call
std
shl
fisubrl
pop
push
movsb
inc
outsb
out
or
cmp
jo
in
push
mov
add
inc
aaa
inc
push
inc
rcl
xor
dec
jbe
sbb
lret
cmpsb
stos
dec
mov
dec
push
je
jmpw
jl
enter
xor
in
xchg
jo
push
sub
call
jnp
ret
jbe
sub
add
jle
or
dec
iret
movsl
or
sahf
and
inc
imul
pop
xchg
xchg
fwait
push
aaa
ffreep
inc
pop
cld
mov
lahf
cmp
mov
repnz
xlat
ss
mov
call
ror
mov
pusha
aas
push
cli
sbb
ja
dec
inc
fidivrl
inc
dec
adcb
out
xor
xchg
jo
ss
push
fbld
ret
jae
xchg
outsb
sbb
cmpsb
push
das
arpl
div
mov
pushf
jb
and
imul
dec
jg
fistpl
aaa
lods
xchg
loopne
dec
sbb
jmp
clc
testb
aas
in
outsl
mov
xchg
and
xor
mov
out
enter
sbb
mov
rcrb
push
test
repnz
pop
fimuls
mov
into
out
int
mov
out
jp
inc
movsl
cmpsl
sti
xchg
jae
xchg
aaa
popf
insb
pop
addr16
and
jge
jae
enter
sbb
loope
pop
cmp
mov
loop
jg
pop
and
jmp
shlb
xchg
fnstsw
ds
mov
lcall
outsl
add
das
cmp
aad
sbb
cmp
andl
int3
repnz
stos
sub
dec
and
mov
lret
xor
mov
mov
cmp
ret
lret
xchg
inc
ja
jbe
or
mov
dec
scas
sub
adc
sbb
cs
mov
enter
cmp
dec
popa
push
jmp
mov
xchg
fisttpll
sbb
push
push
shl
into
jmp
pop
push
xchg
rclb
jg
sarb
fistps
ja
adc
adc
xor
mov
and
mov
jmp
loop
bound
mov
xor
cwtl
lock
fcomi
pop
jmp
pop
movsb
rcrl
xor
pop
int
negb
pop
mov
outsl
inc
scas
mov
ret
cmp
add
das
stc
andl
xchg
push
and
loopne
into
xchg
pop
daa
push
dec
sub
mov
sub
mov
pop
sbb
imul
scas
stos
cltd
inc
loopne
lea
push
mov
pop
rcrb
xchg
pushf
inc
rorb
and
adc
stc
iret
orb
mov
and
and
dec
sub
fldpi
adc
push
sbb
mov
xor
sbb
std
lret
pop
rol
mov
pusha
jle
outsl
mov
cmpsl
int3
scas
xchg
stos
cmp
mov
xchg
xor
imul
jmp
add
in
lods
pop
ljmp
int3
aaa
in
jae
lret
fiadds
std
gs
sahf
sarb
inc
or
dec
ret
insb
xchg
inc
cld
movsl
add
push
xlat
mov
mov
or
pop
xor
aam
lods
sub
aaa
lahf
push
inc
ret
into
jns
adc
hlt
shlb
int
add
dec
push
jmp
mov
rcrb
fnstenv
mov
sub
dec
stos
push
repnz
mov
xchg
daa
mov
nop
out
jno
adc
mov
scas
push
loopne
sbb
add
data16
dec
test
add
pop
inc
jbe
cmp
pop
pop
xorl
push
ficompl
mov
add
dec
in
lds
push
xchg
rcl
cltd
fsts
mov
dec
jmp
popa
mov
sarl
inc
xchg
mov
out
xor
or
push
cmpsl
ficoml
xor
in
lods
xchg
xor
lret
cltd
or
aad
addb
insb
xchg
or
push
mov
jb
movsl
clc
cltd
dec
fsubrl
movsb
mov
cltd
lret
mov
cltd
and
dec
in
inc
lds
mov
xor
dec
psubb
xor
movsl
mov
daa
dec
fdivl
cmc
cli
inc
pop
inc
sbb
and
cmpl
dec
inc
addb
mov
arpl
scas
push
in
mov
lret
movsb
xchg
push
repz
dec
jle
mov
imul
scas
sbb
xchg
lods
lret
js
mov
sarl
jle
xchg
mov
pop
out
fwait
aam
push
pop
push
sbb
and
lcall
mov
and
mov
and
pop
negb
inc
xchg
cltd
xor
xor
sahf
cltd
sub
sub
aad
cltd
pop
jle
mov
cltd
jmp
gs
sub
mov
lock
ds
ljmp
cmp
pop
inc
pushl
fwait
repz
test
push
push
pop
add
mov
fdivl
fidivrs
pop
mov
stc
dec
fsts
cmp
fwait
jmp
cltd
ret
pop
jl
cmc
sbb
mov
mov
lods
sbb
jae
push
divl
and
sbb
lahf
jbe
arpl
mov
cltd
and
or
adc
daa
mov
mov
fsts
push
jbe
adc
int3
cltd
jno
lods
inc
mov
mov
pop
lret
movsl
add
lods
incl
push
cltd
loope
call
fistpl
jno
shlb
dec
adc
push
cltd
lods
adc
dec
mov
push
push
testb
lret
cld
cltd
int
jne
mov
adc
aad
mov
out
dec
push
aam
stos
jae
cltd
cmp
mov
fcomps
cs
cltd
sub
std
or
test
js
call
jg
sbb
adc
dec
leave
push
mov
scas
cmp
repz
nop
pop
add
cltd
sarb
mov
andnps
fwait
cltd
ja
add
xor
mov
add
adc
cltd
jo,pt
sub
inc
inc
push
loope
mov
pop
dec
ret
sbb
sbb
cmp
push
mov
aas
cltd
add
je
xchg
imul
stos
pop
adc
lods
sbbb
ss
cmp
gs
loop
stos
test
jno
inc
mov
cltd
mov
fbld
ret
xchg
sbb
test
add
fs
cltd
leave
mov
movsl
add
insl
mov
pop
test
cs
push
data16
inc
test
or
push
sub
and
lret
pop
addr16
push
pushf
add
inc
sbb
mov
mov
addb
fsubl
adc
lods
and
pop
push
lea
cmpsl
xchg
cltd
aad
fcompl
push
mov
iret
ja
lods
add
repz
insb
cltd
jge
mov
jg
adc
mov
cmp
xor
pusha
cltd
pop
les
adc
push
push
jg
lcall
rcrb
pop
jbe
cltd
mov
das
cltd
subl
int3
mov
jb
adc
add
jg
jo
lods
and
faddl
pop
pop
pop
pop
sbb
fldenv
imul
insl
cltd
mov
fwait
out
pusha
dec
pop
xchg
pop
jnp
or
inc
mov
xchg
add
push
pop
pop
rcl
pusha
shll
cmp
ja
fildl
sbb
xchg
pop
cltd
fdiv
cmpsb
and
cltd
hlt
sub
insb
daa
xchg
out
movsb
sbb
or
pop
mov
and
xor
pusha
xor
mov
add
inc
fidivs
jmp
in
push
nop
dec
call
imul
cltd
out
mov
add
inc
ss
jl
add
stos
mov
pop
cmp
sbb
out
sbb
pusha
mov
cmpsl
stos
inc
data16
fistpl
fdivs
mov
cmp
pusha
shl
xor
sahf
cltd
mov
lret
or
push
scas
vmread
sub
dec
dec
cltd
jg
sahf
xchg
cmpsl
in
test
or
in
and
out
ret
mov
mov
or
aas
cltd
mov
jbe
test
xchg
cmpsl
xchg
out
aaa
or
dec
test
jle
lahf
out
xchg
jl
sub
jb
filds
arpl
push
pop
pmullw
mov
sub
dec
fnstenv
push
xchg
test
scas
stos
xlat
mov
jne
testl
mov
ffreep
aad
mov
jno
mov
mov
dec
push
sbb
or
inc
push
xor
add
push
mov
inc
clc
bound
push
dec
lret
cltd
les
pop
lods
in
rcll
mov
jg
mov
test
cltd
inc
cmp
jbe
mov
movsb
dec
inc
pop
xchg
fnstcw
das
or
dec
orb
adc
out
in
inc
jns
or
and
add
dec
scas
mov
cltd
hlt
enter
or
ret
leave
call
std
push
sahf
mov
and
aaa
mov
ret
loope
push
push
dec
nop
mov
pop
pcmpgtw
cltd
addr16
pusha
jae
sahf
sbb
push
cltd
mov
jecxz
sub
fwait
and
aas
ja
dec
cmpsl
and
addr16
mov
push
push
rcrl
mov
sbb
cltd
cmp
mov
inc
cmc
xor
cld
cltd
mov
leave
loopne
cltd
cmp
jne
dec
and
mov
push
mov
in
movb
pusha
pop
clc
mov
push
cltd
mov
stos
pushf
scas
in
push
jmp
add
xor
xchg
call
sbbl
mov
pusha
and
test
sbbb
jno
dec
xor
xor
xchg
out
pushf
daa
sub
add
popa
push
into
cltd
pop
int3
stc
inc
or
add
testb
movsl
scas
pop
and
andl
stos
add
cltd
mov
std
fidivs
loope
mov
adcb
adc
jg
dec
mov
xchg
mov
movl
fidivs
fsubp
push
xlat
mov
cltd
mov
jnp
or
jge
mov
cltd
loope
call
aad
dec
mov
push
adc
cltd
mov
js
pop
cmp
lcall
pushf
repz
in
dec
test
inc
mov
cltd
jno
leave
push
nop
fmulp
aam
inc
mov
mov
bnd
inc
inc
cmp
jp
mov
cltd
ret
jle
rorl
in
scas
int3
mov
shrd
mov
mov
dec
addr16
loopne
mov
cltd
and
repz
push
cltd
sbb
cld
add
scas
cltd
jmp
sbb
jo
inc
sub
and
mov
shlb
cmc
jbe
ja
inc
cwtl
cltd
or
jae
cltd
aam
int3
xchg
into
cmp
rcrl
jmp
stos
mov
add
pop
mov
icebp
or
cltd
mov
sub
aas
push
sub
cltd
cmpsb
add
push
jbe
testl
stos
sbb
sbb
push
sbb
lret
mov
sti
mov
xchg
push
xchg
jae
mov
pop
jmp
mov
icebp
jne
jns
cmpsb
incb
test
adc
mov
and
jns
ret
in
adc
lds
pusha
cmpsl
push
lods
and
inc
mov
xor
xchg
xchg
stc
imul
xchg
and
and
insb
fwait
mov
in
jmp
out
push
arpl
adc
int3
xor
sub
xor
ret
ljmp
mov
add
stos
popf
xchg
or
mov
lock
addr16
dec
sub
fidivrs
cltd
lock
mov
mov
jmp
fsubrp
lahf
xor
or
cmpsb
dec
push
icebp
jb
fnstenv
in
and
rorb
or
cmp
inc
loopne
pop
cmpsl
adc
pop
fwait
sbb
dec
and
rcrb
mulb
icebp
out
repnz
cmc
add
addl
and
xlat
cmp
sub
cmc
rcrb
and
popa
lcall
or
outsl
mov
roll
js
mov
cmp
subb
lods
je
enter
adc
and
sti
sbb
mov
mov
xor
jmp
int
push
mov
push
sbb
fcmovbe
push
or
ret
stos
imul
mov
mov
movsb
and
es
lods
cld
mov
dec
sti
out
jno
xor
ja
pop
aam
lds
shll
mov
test
mov
lods
outsl
je
int
sbb
cmp
cmp
jo
mov
lock
xchg
inc
ret
pusha
insb
notb
ss
pxor
and
test
mov
sbb
inc
scas
xchg
sub
jbe
sub
imul
les
pop
or
push
sbb
fdivp
mov
cmc
mov
outsl
sbb
fidivs
data16
iret
lahf
jns
jmp
scas
mov
or
dec
cmp
jg
xchg
aad
jnp
xor
mov
dec
xorl
std
xchg
pop
popfw
jp
cwtl
imul
ss
shrl
mov
cltd
js
shl
fwait
popf
jb
cltd
repnz
mov
push
pop
dec
mov
je
scas
cmp
insl
mov
mov
jb
cmpsl
iret
arpl
inc
sub
mov
xchg
cltd
mov
or
cltd
inc
mov
lock
idivb
cmpl
loop
stos
jp
pop
cltd
imulb
mov
mov
or
aad
ds
jmp
dec
fistps
pushf
cltd
adc
daa
mov
cltd
adc
jb
fnstsw
xchg
sub
inc
pusha
xor
push
cltd
or
mov
xchg
lods
push
pop
xor
out
scas
clc
jecxz
test
cltd
rcr
sti
inc
mov
scas
add
jno
fmuls
cltd
test
loop
pop
stc
cmp
jne
lds
test
ds
and
scas
test
xor
sarb
xor
jne
es
cltd
inc
in
push
bound
popf
clc
int
dec
scas
cltd
in
xchg
ret
xchg
aas
lods
cwtl
fidivs
fisttpl
mov
sub
add
pusha
aad
sub
subb
stos
or
inc
mov
call
fists
lock
dec
add
ftst
adc
adc
iret
lds
sub
cltd
in
incl
call
mov
jb
pushf
jl
test
and
mov
cmp
sbb
cli
xor
nop
add
sbbl
cltd
xor
fidivs
ficoml
cltd
clc
into
scas
mov
mov
loope
cltd
shlb
pop
cmp
cmp
pop
in
scas
pop
cwtl
mov
mov
pop
push
push
sub
push
pusha
mov
and
dec
ds
js
cmp
mov
test
cltd
sub
jae
or
cltd
push
arpl
repz
mov
mov
pop
and
push
add
or
pusha
test
cltd
jno
sbb
or
iret
mov
lea
scas
scas
push
lcall
sub
push
insl
push
mov
mov
adc
xchg
sub
pop
in
aam
mov
push
cltd
sbb
sbb
add
sub
movsb
hlt
ss
das
fldenv
in
mov
push
cltd
mov
int3
pop
iret
sar
jge
aas
mov
nop
mov
jmp
mov
dec
pusha
push
cmc
dec
cltd
sub
aas
test
pusha
pop
daa
xor
jbe
lock
pop
dec
add
push
cltd
xchg
inc
loop
pop
sarl
pop
pushf
lahf
cli
shlb
cmpsl
jl
test
adc
out
pusha
ror
es
dec
dec
xchg
sbb
cltd
addr16
insb
dec
push
pop
popf
cltd
pop
push
bound
inc
mov
and
jae
hlt
inc
fsts
das
lods
mov
lock
mov
xchg
cltd
mov
push
lret
jo
addb
stos
mov
cmp
adc
push
cltd
push
sbb
adc
ja
test
fildll
xchg
add
xchg
popa
or
cltd
daa
jg
dec
cwtl
cltd
push
xchg
adc
and
das
adc
lock
jge
incb
mov
pavgw
sbb
fnstsw
imul
shrb
cmpsb
scas
outsb
pop
pusha
stc
xorb
mov
mov
sub
sbb
jle
int3
insl
cltd
xchg
mov
xor
jns
dec
mov
cltd
es
icebp
ljmp
mov
fmull
pop
mov
out
and
sbb
movsl
lds
incl
daa
pop
int3
mov
ret
cmp
lock
cmpsb
fimull
cltd
push
sub
ret
fcoml
cmpsl
les
mov
lock
icebp
subb
xor
lret
push
out
testb
adc
jbe
cltd
jno
dec
pop
out
ficoml
push
jb
cltd
xlat
test
push
iret
cmpsb
push
adc
dec
and
icebp
cltd
xchg
nop
ja
inc
lcall
mov
mov
cmp
pop
xchg
or
and
dec
cmpsl
aam
dec
sahf
jnp
inc
hlt
imul
jl
inc
lock
stc
cmp
cltd
mov
cmpsb
movsl
fistpl
mov
shl
xor
sub
std
mov
inc
clc
addb
sub
aam
pop
cltd
add
jg
in
cltd
mov
push
popf
inc
in
cltd
fadds
jae
xor
ret
sar
shrb
mov
cld
mov
cmpsl
iret
add
jnp
mov
loopne
cmc
cltd
arpl
ficompl
ret
mov
cltd
and
xchg
lods
jl
inc
cltd
xchg
test
pop
adcb
inc
andb
xor
mov
inc
and
or
adc
cltd
jmp
lds
and
pushf
lods
mov
mov
jne
xchg
mov
je
out
jp
arpl
sahf
ja
sbbl
stc
loop
mov
mov
loopne
xchg
stos
repz
mov
aaa
mov
cltd
sti
cmp
fucom
cmp
aam
lahf
xor
test
rol
rorb
pop
je
and
adc
adc
jp
cltd
sub
mov
dec
mov
push
mov
js
add
dec
mov
cltd
inc
ljmp
cltd
fdivp
pop
adc
sub
fwait
sub
adc
xchg
stos
pushf
cltd
mov
movsb
call
outsb
add
jae
jg
mov
and
push
push
decb
and
mov
jge
cmp
xor
inc
xlat
push
or
xchg
jp
movsb
jno
mov
cltd
sahf
inc
xchg
cmp
mov
not
jl
dec
insl
mov
dec
push
and
cmp
shlb
adc
outsb
leave
nop
cmp
sbb
fcompl
dec
push
and
add
and
cmp
push
lods
push
dec
mov
test
imul
xor
inc
outsl
dec
cltd
loope
fdivl
loop
push
aad
xchg
cltd
xor
inc
pusha
lahf
cmpsl
pop
js
mov
loope
std
sub
xchg
in
mov
mov
dec
aad
mov
inc
cmp
mov
data16
mov
xor
in
lock
das
pop
mov
sub
cltd
adcl
dec
sbb
test
les
pop
and
mov
cmpsl
sahf
test
xchg
adc
ljmp
mov
std
mov
lcall
sub
jmp
das
push
sbb
pop
ficomps
mov
pop
xchg
add
cltd
xor
and
loope
jl
cltd
popf
fnsetpm(287
out
sub
and
mov
xor
cwtl
adc
movsl
dec
popa
fwait
sbb
neg
cwtl
jnp
cmp
cltd
pop
lods
mov
cltd
pop
hlt
stos
and
push
sbb
cltd
call
ja
ss
lods
fcom
pop
xchg
sbb
cwtl
cltd
daa
shll
adc
push
sub
lret
push
or
cltd
fst
popf
cmpsb
mov
enter
nop
insb
mov
cmp
sbb
and
leave
call
add
punpckhbw
cltd
jl
test
lds
test
mov
cltd
lret
pusha
push
add
imul
sbb
int3
push
xchg
subb
mov
jmp
push
cmp
adc
mov
out
test
test
sbb
lcall
insl
loopne
jnp
movsl
ret
clc
push
test
jmp
stc
dec
inc
or
aam
je
push
push
and
push
mov
adc
aaa
and
pop
mov
fisubl
cwtl
push
jbe
popa
jno
lock
or
lods
sbb
ficomps
ret
icebp
or
mov
rcl
ljmp
les
jmp
lock
push
pop
cli
frstor
sahf
mov
or
inc
cmc
clc
into
popf
mov
jns
jecxz
pop
adc
arpl
or
xor
mov
pushl
mov
jl
ret
jg
jno
insb
pop
push
sub
xchg
jne
aad
pop
ss
sbb
inc
roll
lret
jns
les
jle
vunpcklps
jbe
jae
sbb
js
shr
not
push
sub
lds
xchg
loop
jne
xchg
icebp
in
mov
cmpsb
bnd
adc
and
jns
pop
cmp
push
push
sbb
mov
inc
lds
sbb
and
adc
cld
fwait
push
mov
or
movsl
std
inc
adc
mov
push
in
mov
jg
cmpsl
push
and
xchg
dec
push
int
pusha
inc
push
fdiv
pop
dec
dec
mov
pop
inc
in
jl
jg
cmpsl
xchg
jmp
add
pop
ljmp
fmulp
mov
pusha
jmp
lcall
mov
lea
inc
sbb
adc
aam
dec
jg
mov
les
out
add
stos
jmp
flds
sbb
call
lock
xchg
dec
jge
adc
push
push
and
xor
dec
mov
push
subb
push
push
call
mov
adc
clc
lock
add
xchg
xor
push
popf
push
pushf
cmpsl
std
iret
ds
cwtl
adc
mov
icebp
fsubl
add
xorl
dec
inc
test
add
loope
sarl
add
test
pop
xchg
cwtl
push
cli
push
mov
ret
dec
sub
mov
cltd
jns
aam
jmp
push
imul
rclb
cmpsb
dec
sub
mull
mov
mov
aas
cli
jle
out
adc
fxch
popf
aas
hlt
lea
inc
fdivp
add
fbld
or
mov
imul
aaa
aad
sub
imul
js
jmp
pushf
mov
fwait
enter
jae
icebp
mov
pop
lods
mov
adc
mov
pop
je
push
out
lea
jg
mov
call
and
stos
jge
mov
outsb
add
push
mov
es
lods
cltd
fimull
add
bound
loope
out
into
loop
mov
mov
test
data16
shll
ss
mov
inc
mov
outsl
xchg
mov
push
addl
xor
rclb
movsl
push
std
mov
jmp
divb
push
lock
out
cwtl
outsl
inc
and
icebp
sbb
push
icebp
sub
loope
xor
cmp
fdivrs
pop
clc
jmp
shrb
mov
jb
cmpsl
push
ja
shr
dec
add
inc
add
imull
movsl
push
pop
or
in
fidivs
loopne
in
insb
fstpt
scas
lods
mov
popf
lahf
cli
xchg
jae
inc
dec
push
and
das
adc
arpl
hlt
xchg
lret
ret
sub
in
jp
pushf
jb
mov
lahf
sub
arpl
xor
mov
jmp
daa
subb
pop
mov
inc
inc
cltd
mov
sub
testb
aad
add
sbb
mov
inc
insb
jge
cltd
jmp
shl
xchg
pop
arpl
mov
test
dec
cmp
and
orb
cltd
lock
mov
or
inc
jbe
iret
in
into
adc
mov
shll
jecxz
dec
or
mov
mov
xchg
pop
sub
divl
jmp
xor
cld
iret
inc
push
ret
nop
loopne
xchg
pop
dec
mov
xor
mov
sbb
sti
pop
add
bound
mov
push
les
fsubrp
mov
jmp
push
pushf
pop
rolb
adc
sbb
adc
enter
lock
fists
mov
adc
imul
or
insb
test
and
subl
xor
in
push
mov
inc
lods
xorl
or
push
rcrl
dec
popf
out
mov
call
into
ret
xor
mov
push
jns
aaa
test
sub
mov
jmp
mov
adc
sbb
jmp
pop
jp
bound
dec
mov
das
shll
adc
pop
sub
aam
stos
lret
jns
inc
jp
int3
cmpsb
xor
mov
dec
fldenv
stos
jmp
push
xor
adc
sbb
andl
pop
ss
scas
add
add
pusha
cmp
ror
call
dec
mov
fucompp
dec
dec
xchg
pop
fldcw
pusha
xor
adc
pushf
outsl
mov
mov
mov
jae
jp,pt
xlat
fimull
les
sub
out
dec
xchg
mov
dec
lock
aad
jmp
push
inc
xor
arpl
stos
push
lea
cmc
mov
sbb
insl
lods
std
push
jno
mov
push
aas
cmpsb
cmp
mov
iret
in
xor
cwtl
adc
mov
pop
mov
xchg
dec
dec
mov
push
mov
lret
cltd
adc
fcoms
push
imul
cmpsl
in
inc
fisubs
aam
or
mov
pop
enter
mov
divb
mov
gs
lahf
jp
loopne
xchg
and
xor
lret
adc
pop
jmp
roll
ljmp
fldenv
adc
ret
adcl
cltd
jmp
lcall
popa
push
mov
lret
dec
cs
popf
inc
cmpb
fsubrs
shl
push
inc
add
pop
stos
mov
fstpt
adcb
mov
mov
dec
movsl
inc
sbb
inc
shlb
inc
add
mov
popa
xchg
add
push
push
adc
mov
mov
dec
repz
push
subl
jmp
inc
mov
testl
repnz
push
jge
stc
pop
fcompl
out
mov
test
sub
mov
hlt
adc
fwait
and
lea
mov
idivb
stos
sub
jne
adc
arpl
adc
sbb
pop
sar
xchg
shrl
jns
stos
pop
xlat
ljmp
adc
jbe
push
fld
jg
gs
cmp
iret
and
loop
test
jle
lock
and
adc
sub
popf
lahf
pusha
or
xor
outsl
out
jo
push
arpl
jne
jg
outsl
cwtl
sub
cli
add
pop
mov
aaa
addb
cli
loopne
dec
mov
ret
lret
push
imul
mov
iret
adc
bound
lock
xor
push
push
stc
lods
fsubs
and
pusha
popf
mov
mov
jne
mov
push
int
movsl
rolb
sub
mov
mov
insb
jmp
add
xchg
scas
adc
shrl
out
test
sub
mov
pop
push
lea
cmpsl
fucomp
mov
out
xor
enter
stc
xchg
mov
pusha
push
out
cmp
cld
sbb
adc
mov
ss
pop
cld
mov
je
leave
lock
pop
das
insl
jo
imul
or
and
xchg
sbb
xlat
stos
pop
or
cwtl
gs
lds
jae
sub
adc
mov
cwtl
out
test
insb
popa
loop
xor
dec
inc
inc
jle
pop
outsb
xor
inc
mov
pop
jmp
jbe
inc
lcall
xchg
sub
and
insb
jmp
lock
adc
or
call
pusha
outsb
ret
cs
add
lahf
xchg
lcall
sub
push
add
xchg
stos
jmp
enter
sub
ror
xor
jno
push
cmp
in
inc
mov
test
add
ret
xchg
mov
es
call
mov
cmp
inc
jmp
cmp
jno
xor
ss
lret
jle
ja
mov
mov
pop
out
dec
jle
inc
xor
sarl
add
cmp
les
xchg
aam
inc
mov
sbb
jle
lcall
inc
out
pop
mov
mov
xchg
cmp
jns
jmp
ds
cmc
cmp
fcoml
int
sub
add
mov
pusha
rcr
mov
jle
enter
dec
jl
xchg
rcr
mov
lds
mov
std
jmp
sti
ficomps
nop
test
shll
arpl
test
es
cmp
mov
int3
shl
mov
lcall
int3
bnd
add
push
pop
push
dec
sub
ret
xchg
mov
jns
scas
mov
jmp
pop
pop
outsb
and
adc
scas
cltd
or
ret
push
filds
pop
mov
mov
test
pop
xor
push
ret
mov
jle
sbb
ficompl
adc
outsl
lcall
int
das
inc
sub
lds
in
xchg
aam
testl
fisubs
imul
dec
cmp
mov
cmp
mov
adc
mov
std
arpl
or
in
mov
arpl
xchg
in
imul
jo
stos
mov
call
popf
pop
mov
jecxz
imul
sbb
xor
je
inc
repz
cwtl
inc
int3
xor
dec
sbb
movsl
adc
sbb
jno
push
mov
loope
mov
ja
out
push
sub
inc
inc
loopne
shll
jno
pop
adc
sbb
sub
outsb
add
rcrb
cmc
movsl
mov
hlt
jmp
gs
and
lock
stos
add
mov
mov
sti
sub
dec
mov
insl
out
inc
mov
push
test
xchg
dec
xchg
and
adc
fistpl
int3
outsb
adc
sub
stos
stos
jne
test
dec
test
jbe
cltd
into
adc
mov
jnp
mov
jmp
and
movsl
in
enter
mov
jl
xchg
cltd
jbe
shll
inc
adc
mov
inc
mov
or
lods
aas
loopne
lods
jmp
enter
push
push
sbb
jns
mov
jge
mov
jle
mov
mov
push
sub
movsb
pusha
fldl2t
call
orb
adc
xchg
cmpsl
das
jle
cli
stos
fldcw
sub
adc
push
sub
jecxz
sub
idivl
mov
lahf
imul
jmp
mov
je
mov
jmp
jnp
lcall
pop
pop
insl
imul
pop
mov
lcall
lcall
jae
pop
hlt
jmp
decb
loopne
dec
adc
xor
pop
stos
sbb
push
xor
loope
stos
stc
jmp
push
push
sub
mov
mov
pop
xchg
stc
and
lock
xor
dec
dec
inc
mov
xor
arpl
subl
adc
stos
mov
sub
add
movsl
loopne
add
sarb
cmpsl
xor
mov
jno
movsb
adc
lods
adc
lock
mov
cltd
ret
lahf
jns
sub
leave
cmp
ficoml
rep
add
cltd
loop
outsl
dec
mov
daa
push
mov
lret
sub
cmpsl
addb
pop
adc
or
scas
pop
stos
push
inc
cmpsl
shrb
adc
push
cltd
inc
pop
ss
out
cmc
pop
mov
pop
lea
add
jbe
cld
setns
mulb
bound
outsb
or
ret
inc
xor
mov
sub
add
loop
pop
mov
mov
std
cltd
or
shlb
dec
xor
adc
icebp
cltd
arpl
pop
mov
dec
add
fwait
dec
out
and
or
pushf
mov
data16
shl
popa
jae
into
sbb
or
stc
or
sarl
xchg
rcrl
add
fisttps
fdivl
jb
and
lcall
pop
call
cltd
mov
hlt
add
push
mov
add
pop
inc
mov
mov
cld
stc
sub
movsl
sbb
adc
cmp
lods
pushf
cltd
push
call
ficomps
add
adc
xor
sbb
lock
cltd
jge
mov
mov
xchg
adc
rcll
mov
mov
inc
jbe
cmpsl
es
push
and
dec
test
mov
xor
cltd
sub
lret
xchg
jmp
in
lods
mov
test
jg
fwait
pop
xchg
inc
cmpsb
sbb
loope
enter
jno
test
shll
in
jg
inc
into
mov
inc
mov
cltd
sub
mov
fisttps
fs
add
cmpsl
aaa
mov
mov
jns
test
sub
faddp
sub
pop
push
ss
imul
add
cltd
test
jo
repnz
and
lcall
sbb
stos
scas
in
out
jo
fnstsw
out
jns
cltd
movsl
and
popf
inc
mov
aaa
cltd
or
adc
cmpsl
shlb
daa
push
jle
mov
fwait
xor
sub
outsb
lods
and
sub
cltd
cld
pop
adc
enter
xor
or
cltd
dec
loopne
pop
cltd
out
sub
std
inc
mov
fstps
cmp
fcoml
in
add
mov
aam
push
loopne
push
cwtl
pop
sub
cmp
xchg
inc
jns
cltd
cmpsb
pop
push
fnstenv
testl
enter
pop
push
xchg
les
mov
cltd
test
sbb
sbbb
icebp
sub
mov
loopne
cmp
insb
sbb
cmp
add
inc
cltd
pop
nop
call
pop
jge
jg
cltd
inc
insl
jp
fwait
in
mov
lret
cmp
ffreep
jo
jecxz
fwait
fs
dec
or
sbb
adc
sub
or
mov
cltd
adc
cld
xchg
mov
jecxz
cmp
fcmove
and
sbb
sahf
adc
mov
scas
nop
lret
push
sbb
xchg
xor
dec
insl
aad
adc
dec
push
cltd
mov
int3
inc
ret
jmp
fnstsw
repnz
mov
xor
sub
dec
jae
xor
mov
push
jnp
pop
and
mov
inc
push
repnz
pop
cltd
pop
dec
adc
in
or
inc
cltd
sbb
jae
insb
cltd
pop
icebp
faddl
cltd
shrb
stos
or
dec
js
mov
fwait
mov
inc
movsl
jp
inc
and
out
sbb
popa
notb
call
cmc
xchg
sbb
lea
cltd
shrb
call
push
movsl
aaa
stos
jge
add
mov
out
cs
mov
cltd
sarb
inc
cmp
test
fsubr
std
in
sbb
popa
mov
fptan
je
pop
or
icebp
cltd
fwait
mov
xor
stc
sbbl
push
scas
mov
cltd
mov
inc
cltd
lods
mov
push
es
dec
add
jge
pusha
cmp
cltd
enter
dec
cwtl
mov
cmpsl
cmpb
mov
xor
jl
lods
mov
imul
or
mov
icebp
sbbb
pop
add
fwait
push
stc
mov
xor
sahf
jnp
pop
or
inc
lret
lcall
leave
and
cmpsl
xor
push
sbb
ja
mov
filds
sarl
lods
mov
es
fwait
jl
popf
mov
mov
bound
out
leave
cli
and
pusha
xlat
pop
mov
out
out
or
lods
cmpsl
and
bound
psadbw
mov
lcall
fcomp
sub
push
pop
arpl
mov
jp
nop
dec
sub
cmp
cltd
sbb
ds
fiadds
jmp
add
push
cld
out
cmpsl
mov
xor
push
or
test
xorl
adc
pusha
pusha
outsl
add
testb
dec
mov
push
xchg
cmp
lds
movsl
js
bound
push
xchg
cltd
loop
and
insl
cltd
mov
xchg
call
jns
sbb
mov
addr16
jo
je
xchg
mov
mov
loope
loopne
aas
clc
mov
pop
in
lock
mov
loopne
mov
fbstp
mov
mov
dec
daa
shrl
je
test
std
sbb
adc
sbb
ljmp
lods
gs
lret
add
ss
sub
pusha
cld
sahf
jbe
pop
dec
cltd
push
pop
lods
dec
xchg
jle
cltd
dec
mov
adc
cwtl
popf
xor
cltd
mov
repz
pop
into
cmpsl
fucomi
mov
sbb
push
mov
inc
fdivr
int3
syscall
add
das
dec
imul
xchg
xchg
cltd
out
sbbb
imul
pop
sbb
js
cltd
sti
out
mov
jecxz
daa
iret
add
insb
cs
adc
xor
pop
inc
fwait
shlb
bound
ret
cltd
push
test
jl
jmp
xchg
ret
repnz
loope
mov
sbb
andb
xorb
fcomps
mov
cmpsl
sbb
pop
push
cmpb
sub
push
mov
lret
cltd
aaa
stos
jb
fisubrl
xchg
pop
cltd
push
rolb
lods
adcb
fwait
inc
les
inc
dec
inc
add
out
leave
les
negl
call
movsb
and
lods
dec
pop
pushl
xchg
xorb
lock
dec
mov
nop
leave
push
dec
add
out
and
dec
data16
cltd
scas
and
sub
lock
ret
inc
repz
fsubrs
int
pop
sar
imul
mov
imul
fstps
add
ja
pop
pop
sbb
pushf
xor
cmpsl
jne
sahf
das
insl
push
mov
inc
push
lds
andb
repnz
das
push
cltd
or
imul
fistps
sbb
push
adc
mov
clc
mov
and
dec
cltd
pop
popf
ror
pop
and
lret
mov
xor
xchg
ljmp
xchg
pusha
stos
lods
ficomps
lcall
fbstp
xchg
inc
hlt
adc
xchg
push
add
roll
ljmp
popa
jmp
pushf
and
popf
mov
fisttpll
insb
cltd
dec
cmp
sti
inc
push
mov
jne
xchg
mov
inc
xor
test
into
xchg
push
shrb
test
cltd
cmp
in
out
dec
cli
cltd
insl
fwait
roll
sub
xlat
push
fs
xchg
sbb
jg
sti
push
mov
daa
pop
sub
or
dec
scas
insl
push
push
pop
leave
mov
cmp
stos
xor
popa
or
imul
cmpsl
inc
mov
mov
dec
outsb
cli
clc
shll
jmp
pop
cltd
xchg
xchg
pop
pushf
jae
or
cwtl
ret
push
and
pop
and
add
xchg
xlat
rolb
test
rcrb
jbe
cltd
and
popf
out
inc
push
mov
xchg
fadds
xlat
adc
push
cld
jae
push
insl
lea
xchg
adc
test
push
lretw
cltd
lock
je
cmp
mov
out
xchg
push
int3
mov
rep
or
shll
push
subl
mov
dec
pop
cltd
add
out
in
repz
jb
inc
icebp
lahf
adc
and
fiadds
repnz
ret
pop
pop
mov
xchg
jmp
or
jl
cmp
pusha
jnp
sar
inc
cltd
mov
jmp
stos
add
lods
cltd
sub
aam
rcrb
sbb
mov
loope
or
ljmpw
movsb
stc
mull
cwtl
lcall
or
pop
mov
lock
xor
fwait
movsb
fwait
aad
sbb
xor
ret
sbb
dec
rcll
mov
in
mov
mov
and
jp
sbb
add
cmpsb
jg
cltd
push
cwtl
mov
call
cs
leave
pusha
dec
test
je
popa
add
cltd
ljmp
adc
scas
xchg
rorb
cltd
icebp
lcall
in
cmp
mov
dec
repz
push
test
cmpsl
mov
sbb
cltd
mov
std
bnd
int3
cltd
mov
mov
sub
pop
sub
test
xor
mov
fnstenv
das
pop
cs
sbb
mov
lock
fstpl
mov
mov
das
shl
mov
into
fldenv
pushl
adc
cmpsl
add
movsb
fwait
in
xor
out
adc
dec
out
in
pushf
mov
dec
popf
cmpsl
inc
call
mov
aad
xor
aas
xchg
and
cltd
sbb
pop
nop
fsubr
sub
mov
leave
jmp
je
dec
cltd
or
inc
movsb
test
pop
jb
mov
mov
data16
cltd
repnz
sub
sub
int3
int
xchg
fwait
cmp
pop
fwait
js
cmpb
cmp
dec
pop
push
lds
clc
ljmp
sti
lds
cltd
mov
inc
fisttps
daa
sub
mov
sub
mov
push
mov
fnstcw
mov
and
mov
pop
cltd
mov
xchg
cmp
out
xorb
cmpsl
imul
int3
add
sub
cltd
add
mov
sbb
mov
and
mov
nop
jns
jmp
mov
or
fstps
push
inc
cmpsl
stc
scas
stos
imul
divl
scas
mov
mov
testb
sbb
nop
mov
push
pop
dec
andb
mov
adc
loop
gs
jp
cmpsl
and
cltd
or
fs
inc
cmp
cltd
ret
in
jb
pop
popa
cltd
or
pop
lea
cltd
xchg
mov
jne
and
cmp
icebp
jbe
push
pop
mov
mov
psllq
cltd
cmp
call
sub
into
sbb
mov
bswap
out
mov
scas
iret
imul
inc
sbb
and
repz
data16
cltd
dec
int
pop
idiv
sti
pushf
cltd
dec
cmpsl
je
int3
ss
add
cmp
mov
arpl
adc
push
shlb
in
xchg
add
cltd
sbb
ret
cmp
jbe
or
daa
stos
insb
lcall
pusha
out
je
hlt
sub
je
cltd
cmp
mov
mov
fstps
cltd
pop
outsb
pop
fwait
loop
mov
icebp
lods
jle
jl
cltd
cmc
sub
sbb
push
loopne
out
lods
rcrl
pop
add
movsb
xchg
shl
mov
cltd
into
jp
jg
cmp
ja
pop
add
inc
rcll
mov
js
idivl
das
adcb
pop
dec
int3
pop
or
loope
sbb
cmpsb
push
lods
test
add
loopne
scas
adc
pop
push
sbb
cmp
shr
rcrl
insl
sub
fistpl
loope
fcomip
cltd
dec
sbb
int
mov
mov
flds
xlat
pop
fwait
ja
xchg
rcr
inc
jae
loop
cmp
repz
testl
fwait
scas
lahf
test
adc
dec
repnz
xchg
mov
or
mov
sub
add
jo
dec
xchg
xor
pusha
sbb
sti
cltd
loopne
xchg
push
leave
fidivrs
pushf
jne
adc
jge,pn
sbb
xchg
lret
enter
add
imul
jno
pop
addb
popa
inc
jns
insl
xchg
or
cmpsb
sahf
jb
push
sbb
scas
rcrl
cltd
xor
hlt
mov
xor
cltd
stc
and
insb
cltd
dec
sbb
xchg
lds
xor
scas
or
jae
push
dec
mov
cltd
push
or
lock
add
jge
add
in
mov
push
push
sbb
add
pop
xor
push
inc
nop
adc
les
jmp
daa
mov
add
fldenv
cltd
sub
jo
lret
add
cmc
pop
push
and
and
jl
inc
fildll
movsl
xchg
lret
mov
fnstsw
ret
lock
mov
or
and
sahf
scas
mov
jmp
cmpb
lods
ficompl
jnp
in
adc
mov
pop
adc
and
jg
pushf
push
out
push
cwtl
cltd
insb
mov
mov
cmpsl
dec
pop
movsl
xorl
and
jp
mov
inc
out
ret
stc
pop
test
cltd
push
imul
test
sbb
cmp
mov
cltd
pop
faddl
scas
dec
repnz
stc
add
cmpsl
fnstcw
test
xlat
mov
add
imul
cltd
add
daa
aad
hlt
mov
fmull
xor
jnp
inc
sbb
sarb
cltd
in
push
xchg
iret
leave
jle
push
ss
test
xor
arpl
xchg
cmpb
sbb
fcompl
sbb
ja
inc
js
push
jmp
das
mov
mov
sub
jg
add
mov
mov
pop
aam
lahf
int
bound
inc
inc
jl
dec
cmpsb
mov
in
push
cltd
xchg
push
fcompl
mov
cmpsl
and
shrl
and
cltd
test
lret
pushf
jge
and
cltd
imul
push
daa
int
mov
push
pop
mov
cltd
fldl
mov
jae
inc
arpl
imul
rcll
adc
lahf
dec
cmp
mov
mov
and
pop
jmp
cmpsl
rolb
cmp
loope
loopne
ret
mov
jmp
inc
add
dec
movsb
insb
imul
mov
push
xchg
shr
mov
fsubs
push
dec
cli
xchg
mov
fwait
ss
mov
push
and
push
aaa
cmp
ds
and
add
sahf
cmp
cmp
mov
es
sbb
add
jmp
stos
add
out
lea
cmp
lods
stos
mov
movsl
out
lret
jmp
std
mov
mov
pop
adc
fmuls
cs
mov
dec
movsl
ss
inc
xor
mov
ret
or
xor
incl
dec
test
clc
into
and
divb
test
ja
pop
jmp
outsl
and
ret
inc
out
or
jae
mov
sub
xchg
push
add
aaa
cld
sarb
inc
fimuls
pslld
std
ret
aaa
int3
icebp
lds
mov
mov
mov
iret
mov
jle
add
mov
or
xchg
hlt
jmp
leave
mov
jns
push
lds
rolb
ljmp
ja,pn
pop
adc
sub
push
sbb
xchg
jg
cmp
mov
cmp
int
and
pusha
mov
aas
clc
popf
imul
test
ret
pushf
mov
adc
movsb
outsb
lret
sahf
sub
sbb
ret
add
sbb
mov
insb
or
adc
stc
je
mov
inc
inc
push
insl
sti
mov
adc
mov
insl
leave
out
mov
mov
test
add
fsts
jmp
fldl
inc
lds
mov
faddp
ret
arpl
dec
cmp
push
sub
push
popa
je
push
xchg
scas
or
dec
mov
mov
pushf
jns
stc
pushf
in
mov
fsubrp
mov
lahf
mov
push
xor
loopne
pop
div
into
das
or
mov
fnstcw
les
mov
ja
inc
jge
dec
pop
push
stc
pop
mov
xchg
mov
sub
cltd
adc
jmp
pushf
jno
push
shll
mov
push
mov
aaa
aas
test
fisubrs
push
dec
ret
mov
mov
rolb
aam
in
push
fcomip
push
aaa
rclb
mov
lret
jmp
mov
jmp
test
push
insl
pop
or
fs
in
jne
pop
jmp
push
rol
inc
push
in
bound
rclb
pop
movsb
rcll
cltd
sbb
adc
test
cltd
cmpsb
jge
enter
cltd
pop
ret
inc
mov
imul
setns
les
fistpll
cmpsl
xor
inc
in
xor
xchg
mov
push
mov
adc
jne
dec
pop
inc
cmp
imul
and
jb
scas
lods
cmp
cwtl
in
frstor
daa
cmp
cltd
mov
mov
aad
inc
pusha
stos
fwait
ds
xor
das
std
add
jp
mov
xchg
cmp
sub
test
xchg
cltd
adc
insl
les
xor
ja
pop
xchg
mov
dec
and
aaa
rol
sub
insl
cltd
lcall
cltd
or
and
cwtl
xor
cltd
sahf
cmpl
cmp
adc
mov
js
mov
test
out
cmp
mov
in
cltd
pop
adc
addr16
xchg
mov
jmp
cltd
outsl
cmc
cmpsb
sbb
mov
and
ret
test
add
dec
xor
add
in
movsl
push
xchg
movsl
sbb
mov
cmpsl
inc
cmp
stos
xor
inc
mov
sbb
mov
adc
jns
mov
push
mov
mov
and
cltd
jmp
js
stos
fldcw
dec
loope
mov
mov
and
and
fsubp
ret
cltd
add
inc
and
pop
push
movsl
mov
jae
xor
cmpsl
cltd
mov
pop
stos
cmp
pop
cltd
std
sarl
cltd
test
nop
bound
jnp
fistl
sub
mov
fwait
aad
in
or
cltd
fsub
jbe
loope
jp
cmpsl
mov
xor
fisubrs
mov
fldenv
add
fwait
adc
jno
cltd
or
pop
cltd
mov
fldcw
int3
or
mov
sbb
cmpsb
cli
leave
pop
sbb
and
loopne
lret
ror
add
jg
movsb
cltd
xchg
out
add
and
xchg
mov
lret
mov
mov
out
pop
rolb
pusha
jnp
ds
icebp
add
push
push
cltd
cmp
adc
pop
cltd
xor
pop
mov
sti
je
cltd
imul
aaa
clc
dec
fwait
sub
push
addb
sti
jl
inc
jmp
iret
jmp
dec
and
loop
push
mov
mov
call
sub
push
repnz
mov
xchg
sbb
xor
aam
jb
fistps
dec
or
sti
mov
dec
dec
ss
lcall
jne
jmp
ret
and
xchg
lods
xchg
xchg
fwait
sbb
xchg
ss
int3
lret
inc
mov
loop
mov
fisttpl
ret
cmp
mov
xlat
mov
xchg
xchg
nop
fs
mov
fwait
mov
rcl
stos
ss
mov
ficoms
lds
mov
js
xor
sahf
daa
lret
hlt
inc
test
adc
mov
outsb
sbb
pop
and
adc
or
aad
xor
rorl
sbb
mov
insb
mov
and
imull
push
nop
adc
cmp
push
jge
xor
pusha
dec
mov
nop
jbe
mov
jae
cmc
loopne
loopne
fstps
push
jmp
sbb
jb
pop
call
adc
pop
lock
push
stos
dec
mov
cmp
and
jno
dec
loopne
fnstenv
mov
jmp
rclb
xlat
inc
cmp
mov
add
stos
push
gs
rolb
mov
rorb
xchg
jmp
xchg
f2xm1
pop
out
insb
mov
and
or
cmpsl
push
and
cmp
sub
pop
push
cwtl
ret
test
das
int3
mov
iret
jp
repnz
push
mov
daa
add
xchg
jle
jb
or
mov
out
jp
lret
popf
lds
mov
inc
mov
jg
enter
test
mov
pop
push
dec
ret
cmp
cmp
enter
and
outsb
cs
aaa
cmp
imul
jg
fsubl
mov
jbe
mov
sbb
das
push
jns
lock
push
shll
pop
push
dec
popf
adc
mov
mov
outsl
fwait
movsb
fcompl
jne
pusha
mov
jle
popa
das
mov
into
popf
push
sub
loopne
add
or
stc
gs
int
mov
popf
loopne
movsb
mov
addr16
aaa
jns
rorl
mov
fidivrl
cmc
in
sub
xor
and
test
mov
sub
mov
arpl
jne
sbb
push
mov
inc
inc
mov
and
mov
pop
dec
les
push
lds
add
xor
xchg
push
sbb
push
mov
cltd
iret
mov
push
xchg
mov
aas
mov
xchg
sbb
pop
pop
lcall
aam
lds
fs
pop
outsl
ret
cmp
fwait
shlb
xorl
mov
inc
push
adc
sti
cmp
sbb
sbb
enter
loop
adcb
xchg
fwait
dec
lock
lcall
inc
popf
aas
xchg
add
xchg
aaa
mov
outsb
adc
xchg
dec
mov
js
call
stc
scas
cltd
xchg
cmp
jb
aas
xchg
and
mov
fcoml
jae
cli
pop
sbb
cs
push
gs
push
loop
callw
mov
loope
in
pop
mov
pop
push
fwait
mov
jg
push
or
dec
add
inc
sub
inc
xlat
pop
adc
push
inc
add
mov
shr
cmpsb
mov
jnp
xchg
ret
in
in
out
push
push
int
push
or
lods
stos
jae
add
adc
fcmovnb
mov
xor
lds
sbb
rcr
and
inc
push
out
test
mulb
hlt
cmp
inc
mov
xor
stos
jmp
jle
xchg
lret
or
inc
xchg
ljmp
ja
cmp
std
xchg
jg
mov
je
int3
lret
mov
lods
lods
sbb
cmp
push
xchg
sub
mov
test
or
sub
jns
in
rol
rcll
sub
pop
or
mov
mov
jno
shl
dec
inc
leave
sbb
jl
mov
les
push
ret
jbe
xchg
mov
sbb
movsl
pushf
sub
jnp
fmul
and
mov
push
cmpsl
movsl
scas
sub
mov
fisubrl
mov
pop
test
loope
push
les
xchg
rclb
cmp
sub
jmp
rolb
lret
data16
icebp
adc
pop
jmp
lock
scas
and
repz
test
xor
or
rcll
into
pop
lods
daa
mov
or
adc
dec
sub
inc
jb
test
adc
aam
sarl
cmp
out
dec
rorb
pcmpeqb
out
dec
adc
filds
stc
jmp
lret
or
cmp
movsb
inc
mov
push
cmp
and
stos
sbb
jmp
mov
pop
push
jae
pop
fcomi
inc
dec
cmp
daa
ljmp
pop
fsts
mov
push
mov
mov
inc
sahf
fdivrl
mov
repz
push
pop
enter
and
aam
icebp
cmp
and
nop
xlat
mov
push
pop
xor
pop
mov
adc
inc
adc
xchg
stos
jno
mov
in
cwtl
iret
mov
mov
sbbl
mov
jo
mov
or
sahf
call
lock
xor
jmp
stos
mov
stos
fstp
ret
pop
adc
data16
mov
inc
push
popa
test
adc
test
mov
pushf
mov
loope
rclb
sub
cmp
mov
fsubp
lret
sahf
pop
imul
pop
stos
mov
out
dec
std
lahf
push
sub
sub
inc
add
insb
cltd
mov
add
pop
push
xor
int
dec
or
mov
xchg
ret
mov
jne
test
cltd
push
je
inc
cltd
ret
ljmp
cmp
dec
cltd
cwtl
fsubl
rcrl
lea
nop
cltd
jge
mov
pop
and
adc
insl
pop
mov
jo
or
sub
inc
ljmp
test
dec
cmpsb
mov
xchg
pop
and
cltd
mov
aas
enter
mov
cmp
push
push
add
cltd
mov
out
xchg
outsb
cltd
std
mov
decl
adc
jo
sub
sbbl
movsl
outsl
js
or
arpl
jo
sub
movsb
sub
sarb
fldcw
cmpsl
xor
into
jle
add
cmpsl
sbb
adc
adc
jb
sbb
pop
iret
or
and
cmp
mov
arpl
daa
pop
and
mov
xchg
cltd
or
and
stos
add
push
mov
cs
mov
cmp
enter
lret
add
cltd
int3
mov
mov
aam
push
sbb
sahf
js
jmp
lcall
mov
jo
jge
cli
mov
pop
jmp
and
inc
cmpsl
int
loope
test
fwait
mov
sbb
jb
adc
and
cwtl
xchg
mov
xor
push
repz
jnp
orl
mov
outsl
into
mov
add
push
mov
mov
lods
loope
dec
or
jo
leave
lods
cltd
out
cmp
cltd
rol
sbb
mov
add
jno
add
lcall
orb
pusha
jbe
outsb
cltd
and
scas
push
mov
cltd
roll
fistpl
lods
popf
stc
pop
rcll
ss
or
idivl
jo
xchg
mov
shrb
fiaddl
add
jl
pop
sbb
rorl
or
fcompl
in
adc
roll
mov
mov
loopne
jmp
fwait
dec
imul
stc
cmp
ja
jno
popf
loope
jmp
stc
sub
xchg
dec
lret
xor
out
jl
adc
or
leave
rcrb
je
mov
inc
jnp
enter
jecxz
rolb
mov
faddp
or
inc
jmp
insl
jecxz
cwtl
mov
fisubrl
and
sbb
addr16
push
mov
test
xor
ret
cmp
test
xchg
dec
jge
inc
mov
test
in
icebp
dec
push
dec
cmpsb
or
mov
cmp
pop
sbb
fstl
roll
les
sbbb
and
jp
mov
or
lods
or
adc
test
cmp
sbb
rorb
cmp
pop
cmp
pushf
lea
scas
stos
cmp
movsl
sbb
adc
sbb
nop
jle
cmp
xchg
mov
push
movsl
fcom
jmp
push
das
pop
sbb
pushf
test
inc
mov
push
popa
mov
inc
movsl
inc
jmp
adc
loope
inc
mov
jmp
in
mov
and
arpl
fisttpll
outsb
mov
sub
js
and
repz
imul
and
dec
mov
mov
lock
push
and
fistpl
jg
push
pop
mov
xchg
cmpsl
stc
int
adc
mov
mov
cmp
enter
adc
daa
jmp
lea
sub
cmp
cmc
sub
gs
mov
and
lock
test
out
loopne
fists
lcall
fsubrp
mov
sub
mov
nop
xchg
out
sbb
in
mov
push
inc
shlw
js
or
cmp
push
pop
pop
mov
sti
lods
sbb
ficoml
mov
fwait
xchg
cmp
mov
lret
lds
rclb
enter
mov
sbb
jp
loopne
lock
mov
rcl
xchg
pop
mov
les
fildl
repnz
and
nop
js
push
int
adc
cmp
and
adc
inc
rcll
pushf
rcrl
sbb
mov
rcr
mov
fwait
xchg
push
shr
loopne
fidivs
stos
in
add
insl
jnp
sub
mov
jp
pop
push
mulb
jp
mov
mov
clc
fadds
pop
jb
sub
lcall
dec
repnz
test
xchg
fwait
jb
push
sti
add
xchg
cmp
jbe
enter
lock
cmpsl
rorl
mov
cmpb
inc
sbb
fs
mov
sub
rolb
add
mov
fcomps
jge
imul
aas
jg
cmpsb
stos
mov
push
outsb
xchg
lds
aad
lock
mov
jae
mov
out
adc
mov
dec
sub
out
push
test
leave
shl
stos
jmp
push
mov
pop
mov
xchg
sub
dec
push
sbb
lea
dec
adc
ljmp
jmp
andl
and
test
jmp
mov
popa
jl
adc
out
shll
push
lea
int3
sahf
push
jmp
pop
sub
pop
sbb
fisubrl
bound
mov
xor
pop
fisubl
lock
xor
popa
loopne
fistl
das
mov
outsl
xchg
inc
jae
jb
fwait
push
test
xchg
pop
data16
inc
out
xchg
jae
rcr
inc
lea
aaa
call
jns
push
or
das
xchg
xchg
lret
mov
shrb
lds
inc
sbb
xor
lods
mov
or
sub
xor
ljmp
dec
adc
pop
ljmp
vpextrw
adc
inc
mull
icebp
adc
lret
xchg
int3
and
in
dec
xchg
mov
idivl
jbe
test
xor
jmp
mov
mov
pop
pop
sub
pop
pop
jge
and
jge
ret
adc
fadds
xchg
inc
jmp
mov
es
imul
or
add
push
inc
jmp
add
inc
in
jno
stos
das
mov
adc
inc
mov
pop
mov
and
add
leave
sub
pushf
ss
rorb
in
push
sbb
mov
outsb
xchg
jg
and
stos
iret
cmp
arpl
je
push
push
scas
mov
and
sahf
mov
pop
cmp
mov
addb
les
mov
js
aaa
shll
mov
adc
add
pop
or
dec
inc
mov
popf
daa
insb
xor
jne
pop
movsl
shll
scas
movsl
insl
jnp
push
inc
fimull
cwtl
dec
mov
andl
popa
iret
mov
lods
sub
lret
ret
pop
imul
cwtl
inc
sbb
mov
stc
loopne
mov
inc
enter
stos
fnsave
xchg
dec
outsl
inc
leave
xchg
movsl
aas
insb
xor
mov
xchg
test
shlb
and
mov
nop
mov
cltd
sub
cltd
test
inc
cmpb
stos
cmpsl
popa
nop
inc
stc
and
flds
cltd
adc
in
cld
sub
cltd
xchg
jmp
dec
sbb
push
push
cltd
push
mov
cmp
cltd
nop
cmp
xchg
inc
cmp
pop
les
dec
inc
jbe
cltd
or
push
push
fstps
pop
or
adc
mov
jbe
sbbl
cmpsl
fcmovne
cmovne
sub
cltd
jbe
iret
xchg
or
push
scas
mov
fadds
and
jb
cmpsb
test
pop
in
clc
ljmp
mov
negb
test
jne
cltd
popa
sub
xchg
mov
stc
or
fstps
pop
test
pop
add
aas
repz
xchg
subl
adc
sub
movsl
repz
das
rorb
lcall
and
pop
xchg
mov
pop
das
inc
movsl
cmpsl
push
fsubrp
mov
xor
rclb
daa
or
pop
mov
popf
jns
jmp
pop
mov
addr16
aas
mov
mov
adc
lock
pushf
fidivrs
fmuls
sub
call
mov
test
mov
mov
outsl
cmp
sbb
push
imul
cltd
mov
test
add
push
mov
push
dec
movb
push
push
mov
inc
inc
pop
outsl
mov
jmp
mov
fdivrs
add
pop
lea
inc
sub
sbb
mov
cmpsb
fs
and
movsl
jns
pop
xchg
andl
mov
iret
push
push
jbe
pop
imul
xchg
fstpl
cmp
pop
icebp
jns
outsl
mov
pop
push
pop
or
or
adc
aam
or
rcrl
jge
xor
stos
fdivp
mov
lock
mov
outsb
nop
xor
test
pop
and
movsl
iret
into
shr
loop
lock
mov
insl
pusha
or
jmp
or
pop
movsl
dec
mov
xchg
loop
stos
jmp
jmp
roll
addb
jbe
loopne
fcompp
adc
aaa
enter
jle
sbb
mov
lcall
inc
sub
xor
call
fisttps
subl
lods
mov
push
xchg
dec
arpl
lds
jmp
mov
subl
pop
aam
xor
lret
cmp
cmc
fidivrl
xor
sbb
pop
adc
sbb
cmp
dec
or
out
mov
or
xor
or
xor
dec
test
mov
push
sub
inc
mov
fisttps
jo
mov
std
push
mov
inc
xchg
les
and
cmp
jmp
mov
fistpll
inc
je
jmp
lock
test
pop
insl
jmp
loop
clc
loopne
and
daa
cli
jmp
or
arpl
adc
inc
push
sub
and
stos
sbbl
sub
fwait
push
mov
sahf
cmp
mov
scas
xor
ret
fwait
mov
jg
jns
jmp
adc
fdivs
ja
test
pop
mov
cmp
and
xor
pop
arpl
or
popa
push
mov
pusha
and
rcll
fwait
adc
rclb
fisubl
pop
test
addl
mov
repz
inc
stos
push
clc
dec
sub
popa
mov
jmp
fsubr
stos
inc
pushf
shll
adc
and
mov
test
std
outsl
pushf
in
lret
insb
cli
mov
clc
stos
jno
pop
movsl
sbb
and
dec
adc
test
in
xchg
call
stos
into
pushf
aas
xchg
repz
fnstenv
test
lea
das
mov
xchg
repz
inc
jns
xchg
push
sbbb
int
adc
sbb
cwtl
shlb
daa
mov
mov
int3
pop
cltd
enter
adc
jno
xchg
adc
into
jle
popf
jmp
or
xor
addl
outsb
mov
mov
pop
add
pop
push
loopne
add
cmp
ljmp
popf
mov
cld
or
pop
mov
adc
stos
popa
call
pop
mov
cld
lahf
flds
jae
mov
lods
adc
jne
jle
les
mov
jo
sbb
scas
sbb
xchg
push
int
sbb
add
movsl
stc
lock
push
out
xchg
imul
jp
pop
jg
sbbb
lcall
popf
add
jne
dec
stos
jns
mov
arpl
and
add
movsl
mov
adc
negb
push
dec
mov
sti
movsb
repz
push
lret
push
cmp
xchg
add
and
pop
xchg
dec
jmp
sbb
std
std
mov
sub
movsl
popf
adc
fcoml
sub
mov
cmp
jne
mov
lret
hlt
repnz
dec
out
dec
jne
jmp
pop
jbe
je
mov
mov
ja
out
hlt
leave
jg
arpl
xchg
outsl
iret
ds
cld
mov
inc
adc
mov
dec
push
pop
mov
sbb
mov
inc
mov
ds
sahf
cmp
and
rcrb
leave
adcl
ret
cs
jmp
dec
jmp
pusha
lcall
push
call
ljmp
imul
or
inc
xchg
cld
ret
jge
xchg
decl
adc
loopne
jmp
inc
lock
cli
cli
sti
negl
loopne
push
and
or
fcomp
mov
cmc
shl
xor
or
stos
insl
or
lret
icebp
icebp
fstpt
cmp
sub
dec
or
push
pop
adcb
scas
scas
jnp
test
imul
xlat
dec
loopne
in
vhaddps
pop
jmp
jecxz
mov
cli
fisubs
test
aad
inc
dec
add
sbb
popf
mov
je
iret
xlat
add
aad
imul
js
cwtl
sbb
or
jnp
shlb
aaa
cld
xchg
scas
jg
add
icebp
inc
xchg
jl
stos
jno
lcall
lods
jbe
mov
cmpsb
push
push
cwtl
into
enter
sarb
sbb
mov
fmul
add
testb
lahf
add
cmpl
fwait
inc
sbb
in
jle
jbe
addr16
mov
ljmp
and
in
aam
push
jl
xchg
xchg
or
movsl
es
dec
or
pushf
fsubp
pusha
adc
xor
push
jmp
rcrb
pushf
popf
lds
adc
mov
cmp
adc
lahf
sbb
cmp
fs
scas
test
push
cmp
test
mov
mov
adc
mov
xor
test
xlat
mov
xchg
int3
inc
stos
push
jb
sub
daa
pop
leave
ret
inc
or
push
xchg
ds
or
jmp
cmpsb
test
or
fwait
adc
and
and
jg
pop
mov
adc
jnp
hlt
out
mov
loope
jnp
push
ds
xchg
cmp
aas
jmp
outsl
or
fbld
negl
inc
pusha
xchg
dec
out
adc
jg
stc
nop
aas
pop
pop
pop
jp
xor
rclb
xchg
xor
push
clc
jnp
jp
test
jns
out
and
pop
push
divl
add
mov
loopne
cmp
pop
cmc
mov
outsb
adc
jb
mov
or
add
jg
popa
aam
inc
stos
jmp
push
or
push
mov
mov
cmp
shll
sbb
xchg
jecxz
in
jae
jno
ret
lret
inc
in
cmp
lret
ljmp
mov
mov
inc
inc
emms
test
mov
sahf
cmp
jns
xor
inc
pop
pushf
faddp
and
jae
pusha
and
sbb
pop
lods
jmp
in
stos
cmp
pop
aam
pop
enter
xchg
xchg
sbb
sarb
movswl
lahf
rorb
cli
shrl
add
rclb
sbb
push
jmp
je
rclb
add
sbb
mov
xchg
ret
ljmp
scas
stos
pop
jmp
sarb
lcall
cs
outsl
fldcw
lcall
loopne
xor
mov
icebp
stc
inc
cltd
pop
xor
imul
into
jl
mov
mov
idiv
arpl
push
scas
xchg
mov
mov
xor
jnp
pop
mov
outsl
loope
cltd
arpl
lock
dec
xchg
mov
sbb
mov
xchg
cltd
push
jmp
loop
shlb
lret
add
loopne
jp
mov
aas
jmp
lret
mov
fsubrl
out
fsubp
mov
ja
dec
inc
xchg
lret
and
cltd
imul
sub
pop
sub
scas
movl
pop
xchg
mov
ret
add
ret
push
insb
cltd
or
push
pop
inc
pop
xor
std
in
les
jo,pt
cltd
in
js
scas
sbb
inc
cltd
push
nop
sbb
sub
lcall
inc
xchg
int3
mov
xchg
and
jo
inc
loopne
sub
jl
imul
sbb
pop
rcl
sbb
or
sub
cltd
movsl
or
and
data16
cltd
and
pusha
test
sbbb
sbb
je
stos
scas
mov
sbb
loop
xchg
cltd
xchg
test
mov
cltd
data16
jnp
in
cltd
int3
inc
mov
outsl
cltd
add
adc
ret
lcall
cmpsl
pop
pop
inc
xchg
lcall
imul
jmp
push
dec
cltd
lcall
sbb
fdivrs
mov
insl
das
test
cltd
inc
es
push
xchg
or
mov
jmp
dec
pop
xchg
cltd
lds
lock
mov
aaa
fbstp
push
cltd
movsb
mov
push
cltd
mov
mov
repnz
imul
xor
sub
cmp
loopne
mov
fucom
je
adcl
imul
insb
xor
cltd
jbe
xor
cmpsb
rcll
push
pop
cmp
jl
loope
push
loopne
or
jle
add
cmp
gs
and
stc
scas
dec
ret
call
fiaddl
gs
stos
mov
xchg
aam
mov
popa
jnp
xchg
xlat
pop
test
iret
adc
dec
cs
and
stos
scas
jae
xor
popa
js
fcomip
sub
ret
sbb
fwait
inc
mov
das
add
inc
cltd
outsb
push
out
ss
out
adc
or
inc
inc
sbb
fcomi
pop
movl
mov
orl
push
jl
aam
je
inc
push
inc
sbb
std
loopne
or
daa
test
jmp
in
scas
pusha
xor
iret
push
pusha
ror
push
cltd
lods
inc
sub
xchg
mov
cmp
rcrl
inc
iret
jg
jge
inc
lods
sbb
and
pop
sahf
nop
fucomi
mov
jns
rol
es
push
cmp
cltd
xor
out
cltd
paddusw
jns
dec
mov
bound
cltd
and
hlt
xchg
jno
daa
cltd
or
mov
push
mov
cltd
and
ss
push
nop
adc
cmp
popa
imul
sub
or
minps
sbb
and
fdivl
dec
fucomip
in
int
pusha
push
movsb
mov
cltd
adc
and
pop
jns
in
mov
inc
sti
pcmpgtw
fstpl
ficomps
sarl
sbb
push
insb
mov
and
mov
stos
add
jl
leave
gs
pop
loopne
dec
cltd
nop
fnstcw
or
sti
fcomps
pop
sar
cltd
xchg
xorl
cmp
insl
out
sbb
mov
lock
es
push
sti
je
xor
icebp
js
xchg
imul
sti
mov
inc
add
mov
xor
cltd
inc
jmp
lret
sub
aad
cltd
xchg
loope
inc
test
scas
divl
fldenv
cs
mov
adc
mov
jns
cltd
sbb
sub
mov
pop
cmp
or
sbb
fs
int
insl
cltd
mov
cli
subb
xor
lods
mov
jns
push
sbb
lret
les
mov
cltd
lock
addr16
or
xlat
adc
cmp
cltd
das
sti
xor
or
jne
mov
mov
cltd
es
dec
sub
gs
cwtl
fwait
shlb
sub
popa
mov
scas
and
add
cmp
movsb
xor
or
test
pop
cmpl
rcrl
push
out
pop
test
inc
hlt
sbb
mov
cltd
xorb
sub
or
xor
push
pop
sub
addr16
das
loopne
lret
mov
loopne
push
xor
imul
in
stos
insl
call
lret
cmp
add
jbe
sub
es
xor
sti
mov
std
mov
enter
xor
test
out
insl
xor
movsb
repz
int3
sub
out
jp
in
push
outsb
xor
mov
or
cltd
stc
jnp
ret
fistps
fldpi
pop
cltd
mov
out
sbb
movsl
lods
cmp
cld
mov
cltd
in
sbb
add
insl
stc
scas
sub
repz
shlw
jp
negl
sahf
and
pop
cmp
mov
sub
cmp
hlt
out
mov
test
or
cld
mov
outsb
out
push
add
aad
push
lea
cltd
fs
jnp
jae
cltd
push
mov
iret
lods
sbb
clc
dec
into
push
xchg
inc
cltd
je
mov
mov
sbb
pop
push
mov
pop
pop
adcl
jecxz
mov
pusha
lods
fnstcw
out
fs
pop
mov
int3
cwtl
mov
in
xor
and
xor
lahf
cltd
mov
out
movsl
call
mov
out
and
cmpsl
lds
das
sub
stc
inc
adc
fwait
std
mov
enter
sub
sbb
pop
lret
insb
dec
sbb
ljmp
arpl
mov
sub
pop
negl
pop
cltd
xor
inc
cltd
inc
sub
push
pop
mov
mov
gs
sub
xor
cmpb
pop
jmp
and
aam
imul
adc
cmovl
loopne
adc
dec
mov
mov
fidivrl
imulb
sbb
mov
fwait
ja
movsb
sbb
lds
imul
mov
cltd
lods
lods
pop
mov
jl
js
pop
or
inc
pop
outsb
dec
dec
movsl
mov
loopne
in
cltd
and
mov
push
xor
cltd
sarb
push
loope
xorl
cltd
mov
sahf
cmp
pop
aaa
and
sbb
cltd
and
push
xchg
push
pop
ljmp
cmpsl
fldenv
mov
add
cmpsl
pushf
mov
lds
jmp
ja
js
cltd
mov
iret
sbb
xchg
push
jno
pop
mov
cmp
mov
adc
cltd
sub
pop
in
jle
add
ficompl
cmp
pop
cltd
pop
repz
adc
aas
pusha
insb
lcall
cltd
test
jno
cmp
push
imul
lds
xchg
xchg
pop
sbb
jne
mov
push
jns
sbb
xchg
xchg
inc
enter
je
inc
sub
cmpsl
dec
sbb
lcall
stc
push
cmpsl
in
outsb
or
das
hlt
cltd
mov
out
aam
sbb
adc
mov
xchg
imulb
les
insb
cld
mov
pop
je
pop
xchg
xchg
cltd
mov
mov
ficomps
cmp
jo
mov
in
cltd
lret
push
stos
dec
movsb
xchg
repnz
arpl
test
out
xchg
lahf
mov
gs
mov
and
cltd
fisubl
and
cltd
pop
and
mov
mov
mov
cld
movsl
adc
sbb
cltd
inc
test
inc
mov
out
int3
sub
xchg
sbb
clc
and
mov
shl
orl
movsl
nop
cmp
shl
fcmove
sbb
cltd
dec
xchg
push
push
clc
jg
js
inc
sbb
pop
int3
inc
mov
push
ljmp
int
cmpsb
decb
cmp
pop
pop
jno
and
std
mov
inc
mov
js
and
out
sbb
adc
jge
sahf
mov
cmp
cmp
fwait
jg
adc
rorb
pop
xchg
rol
mov
sbb
jmp
aas
mov
mov
dec
popf
xor
jmp
mov
cltd
daa
push
fsubs
cld
unpcklps
inc
cmp
cltd
push
loopne
popl
fistps
scas
or
adc
iret
imul
imul
and
fwait
pushf
movsb
loopne
stc
outsl
inc
cmp
mov
aas
cwtl
sbb
mov
adc
popf
fisubrs
sub
inc
idivl
test
mov
call
int
test
repz
aas
pop
pop
jmp
mov
adc
pop
inc
push
or
pop
xchg
int3
xchg
inc
fnsave
dec
ja
lcall
jbe
lods
mov
cmpsl
arpl
xchg
loop
aaa
jb
ret
and
mov
inc
leave
sub
push
cmp
adc
pop
rcl
loopne
jmp
movsl
sub
xor
mov
movlps
fucompp
movsb
adc
in
jl
adc
inc
insl
sbb
xor
fdivrp
xchg
mov
aam
out
push
dec
in
insl
xchg
shrb
fs
mov
cwtl
add
xor
shl
and
adc
stc
insl
sub
scas
or
fmull
stc
add
sub
jmp
xor
mov
outsl
or
aad
fstl
sahf
loope
push
js
push
jae
and
fldl
mov
outsl
jl
cmc
or
cmp
add
dec
mov
or
addr16
cs
into
sub
adc
loope
cmp
popf
lea
mov
xlat
mov
sub
pop
in
lds
dec
fidivrs
pop
out
cwtl
dec
sbb
add
fstps
stos
add
xor
cmp
xor
adc
stos
cmp
mov
je
xor
jne
loopne
xchg
jge
gs
fdivrs
push
es
rcrb
and
pop
aam
leave
loopne
jns
jmp
sbb
jmp
ss
add
sbb
jno
sub
jg
jecxz
cs
aad
inc
lcall
inc
xchg
imul
or
mov
mov
lret
xchg
ss
mov
scas
and
cmp
inc
add
bound
inc
mov
fistpl
popf
push
lock
rclb
jg
sbb
mov
cmp
jae
jp
leave
std
and
pop
jmp
shr
inc
movsl
inc
test
in
std
mov
xchg
pushf
out
dec
sub
jp
xor
fcoml
in
in
sub
xor
aaa
pop
in
leave
cmp
push
adc
out
inc
mov
stos
mov
fimuls
cmp
andl
dec
mov
je
lret
scas
pop
fcomi
push
xchg
adc
jp
scas
enter
js
cmpsb
mov
mov
sub
and
and
mov
lods
sti
int3
mov
dec
imul
mov
mov
lds
into
cli
arpl
push
sbb
mov
add
sub
sbb
sti
test
adcb
sub
pop
pop
jle
lahf
cltd
lock
mov
xchg
jmp
stos
ror
mov
push
arpl
mov
add
fnstsw
daa
cmp
jg
xchg
and
es
sar
punpckhbw
lcall
sub
scas
movsb
aad
lds
shr
repnz
mov
ljmp
sbb
sarb
cltd
inc
aam
and
pop
xor
dec
clc
les
mov
adc
stos
jmp
xor
loope
or
dec
xchg
icebp
mov
mov
fs
xchg
adc
loope
ljmp
stc
movb
push
dec
push
jae
mov
nop
xor
lahf
jns
pushf
mov
lret
push
xlat
or
and
sub
in
imul
add
jg
cmp
hlt
sti
subl
test
rcl
xchg
in
inc
push
rorl
jmp
cmp
cmpb
xor
adc
in
pusha
push
jmp
inc
sbb
pop
mov
lock
cmovg
or
jno
adc
jp
jmp
mov
inc
jne
add
xchg
movsl
cmc
xchg
cmp
mov
mov
mov
into
adc
cli
stos
xor
roll
push
sbbb
lret
dec
enter
push
loopne
loopne
dec
xchg
ret
inc
jo
leave
and
fbstp
and
loopne
push
aam
testl
inc
repz
mov
jmp
jg
scas
sbb
sub
jo
ja
negl
mov
jmp
insb
jg
mov
dec
sbb
ljmp
fildll
and
jmp
sub
and
stos
dec
cmp
lea
loopne
sub
push
jns
mov
mov
lods
jnp
mov
sbb
adc
mov
sub
rorl
test
lock
and
jns
sarl
xchg
and
faddl
mov
sbb
sub
iret
mov
mov
jno
cmpsb
rcrb
mov
mov
xchg
ficomps
adc
xchg
or
xchg
ljmp
add
scas
enter
lods
fiadds
sti
mov
mov
or
cmovnp
mov
push
cmp
cmpsb
mov
xor
mov
sarl
pop
and
test
divl
inc
setg
cmp
cmpsb
popa
fcmovne
dec
ret
dec
and
jge
stos
stos
jmp
faddl
aaa
negb
and
shlb
dec
jbe
fs
fidivrs
mov
jb
mov
lock
sbb
mov
dec
aaa
and
mov
pop
mov
in
dec
inc
jl
popf
dec
or
fnstsw
loop
mov
fstps
push
rolb
xchg
or
subl
jmp
mov
xor
cmp
push
fldcw
mov
lret
dec
add
std
mov
push
mov
dec
mov
push
outsb
mov
sbb
xchg
enter
insb
mov
je
sub
fdivrp
test
and
jbe
faddl
popf
adc
ret
lea
add
push
les
pop
and
leave
xchg
mov
icebp
cmp
mov
xor
inc
les
scas
sub
fildl
dec
jge
aam
mov
cmc
mov
mov
pusha
xchg
lahf
fcoms
lock
addr16
mov
add
sub
shr
les
lods
jp
xchg
add
adc
fbld
push
rol
or
decb
pop
mov
insl
xchg
popf
addr16
xor
jmp
gs
jno
pop
xchg
outsb
lret
pop
scas
push
inc
insb
add
icebp
int
fs
dec
test
pop
inc
jb
adc
dec
lods
jnp
fstps
sbb
es
adc
dec
int
mov
jmp
cmp
cs
cmp
or
int
inc
mov
pusha
outsl
add
rcrl
jae
aam
in
and
cmp
xchg
testl
adc
cmp
sbb
lods
out
jg
inc
movsb
pushf
bound
adc
lock
fldt
mov
and
imul
add
out
clc
out
sub
xor
adc
fs
movsl
and
stos
cwtl
jp
sbb
repnz
pop
mov
cmpsb
cmp
arpl
hlt
popf
sti
jp
mov
sbb
out
arpl
nop
loop
inc
stos
or
ljmp
aad
out
test
push
lods
lret
test
dec
out
stos
cmp
inc
sbb
push
call
jno
andb
popa
mov
sub
and
call
cmp
xchg
xor
lods
pop
lods
xchg
cmp
and
jmp
das
popf
cmp
cmpsl
frstor
cmp
pop
inc
adc
sbb
jmp
into
push
xor
xchg
out
sbb
bound
gs
mov
mov
xchg
jno
mov
loop
mov
pop
xchg
cwtl
inc
sbb
push
mov
sub
jmp
popa
pushf
push
cwtl
and
pop
or
jmp
int3
push
xlat
in
pop
loope
jbe
dec
popw
xor
jmp
xor
out
out
xor
jnp
pop
aam
xor
xchg
push
aaa
dec
and
in
or
test
leave
pop
dec
mov
scas
rclb
jmp
call
mov
push
mov
and
push
cmp
jae
add
inc
jns
sbb
scas
pushf
cwtl
test
int
mov
sbbl
sub
fs
mov
test
adc
mov
lea
sbb
sbb
mov
mov
out
out
push
add
aad
jns
movsl
dec
sarl
punpckhbw
ds
aas
sbb
movsb
test
orl
test
mov
pop
jo
mov
icebp
pop
sarl
shrb
lret
les
jns
mov
fwait
jle
inc
mov
sbb
repz
frstor
test
inc
es
mov
mov
jns
sbb
cli
arpl
xchg
subl
push
insl
dec
les
push
dec
push
lret
cli
pop
mov
pushf
jno
push
mov
stos
mov
dec
sbb
jle
lds
jae
test
enter
sbb
sbb
mov
hlt
lods
fs
pop
sub
cs
xchg
add
fwait
and
insl
iret
imul
pop
ror
aam
imul
inc
loopne
gs
movsl
fstpt
adc
xor
lds
mov
jmp
nop
adc
lea
ret
repnz
fdivrs
addr16
ret
lret
loop
cmp
xor
aam
idivl
dec
jmp
xchg
mov
push
cld
jmp
jl
rolb
fldl2t
cmp
push
fisttps
fsubrp
cmp
or
and
faddp
jbe
adc
or
mov
mov
movsl
or
jb
into
mov
aam
sub
mov
dec
sbb
mov
imul
sbb
sbb
inc
push
imul
push
loopne
ret
push
mov
ret
push
loopne
lock
mov
cmc
dec
inc
fwait
gs
sahf
ds
jmp
and
push
adcl
leave
fsubrp
cwtl
imulb
xorl
in
xor
sarl
jae
inc
pop
sbb
test
fwait
push
sbb
repnz
mov
shr
jle
in
fld1
psubsw
ficomps
and
mov
jmp
in
rorb
xchg
cmp
add
xor
pop
aas
sbb
mov
jb
ror
cltd
int3
push
andb
xchg
adc
pop
rcrb
enter
dec
stos
or
lock
imul
das
aad
xor
pop
les
mov
xchg
hlt
clc
loope
mov
sbb
aaa
test
loop
cmpxchg
das
and
mov
jo
mov
pop
xchg
stos
mov
loope
repz
cmp
mov
xchg
fwait
rorl
sbb
sbb
sti
and
ret
jl
jmp
inc
imul
jmp
repnz
adc
popf
mov
cltd
sti
ficomps
in
aad
fsubr
xchg
add
jmp
aas
js
imulb
call
sub
out
adc
test
mov
and
jmp
sub
rclb
mov
adc
orb
or
aaa
pop
pop
pop
fidivrs
dec
inc
and
jmp
loopne
jmp
fists
call
sarl
mov
es
aaa
or
mov
dec
mov
outsl
push
xlat
sub
xchg
loop
jnp
call
xchg
int3
add
mov
push
pop
add
pop
push
shl
sub
mov
add
mov
cmp
sub
and
cmp
jno
lret
in
adcl
stc
xor
lods
cmpsl
dec
rolb
stos
mov
jmp
mov
lret
adc
pop
pop
imul
loopne
aam
mov
jae
xchg
std
sbb
inc
mov
mov
lock
jl
into
xor
push
cld
pop
mov
jmp
push
xor
jl
pop
outsl
enter
insl
dec
fidivrl
cmp
mov
fists
jmp
inc
cmpsl
js
les
jecxz
andb
jnp
notl
pop
xor
sti
xor
ss
push
jo
jno
repnz
fcmovb
lds
hlt
into
jle
ret
rol
mov
enter
scas
adc
arpl
and
push
xchg
pushf
xchg
lds
inc
inc
push
stc
jno
out
outsl
cmp
inc
sub
mov
negl
int3
mov
mov
adc
push
imul
sbb
cmp
push
gs
dec
xchg
xchg
pop
fisubrl
inc
std
jnp
mov
jg
pusha
ss
or
jbe
orl
loopne
cmp
stos
lret
cmp
std
mov
inc
ret
insb
mov
and
jecxz
cli
mov
mov
mov
inc
ds
cmp
mov
jbe
insb
push
call
jmp
iret
push
inc
dec
mov
push
jp
iret
xor
adc
lcall
movsl
bnd
int
repz
in
mov
data16
stos
inc
push
inc
ret
outsl
sbb
push
outsb
and
dec
int
sub
sub
jns
cwtl
sub
mov
sbb
in
mov
lods
sbb
xchg
xchg
cmp
jne
jmp
jmp
inc
ljmp
jnp
pusha
jb
mov
ret
test
inc
mov
in
mov
inc
adc
sbb
cmp
mov
enter
mov
xchg
sub
movsl
sub
call
push
xchg
aad
mov
test
pop
mov
loope
lock
ljmp
insb
adc
pop
push
sbb
sub
cwtl
mov
aas
enter
adc
push
jmp
cld
pop
xor
mov
cmpsl
mov
int
stos
pop
stos
shlb
sbb
lahf
mov
fwait
loope
jmp
icebp
fwait
mov
ja
or
sub
push
jmp
adcl
or
add
ds
xchg
xor
cwtl
fs
and
jecxz
outsl
pop
ret
and
into
dec
jmp
enter
mov
jecxz
inc
gs
push
popf
imul
lock
pop
imul
aam
repz
mov
je
out
inc
pop
rcrb
jle
cmp
xchg
xor
mov
jmp
fldcw
ret
adc
shrl
cs
fidivrl
pop
int
sbb
addr16
xor
mov
sub
mov
sbb
cmp
ds
imull
dec
mov
sbb
fsubl
sub
shlb
lcall
outsl
pop
lock
inc
mov
call
sbb
add
mov
pop
int3
mov
pop
loop
mov
jb
mov
inc
mov
gs
notl
sbb
rcrl
stc
push
roll
and
cmc
mov
loope
cli
mov
jmp
mov
sub
pushf
inc
decb
mov
cltd
lock
jns
or
xor
mov
mov
mov
in
insb
sub
es
les
xor
jo
mov
xchg
pop
mov
xchg
mov
stc
pop
fsubs
dec
lock
add
sub
scas
loop
call
jmp
cmc
cmp
fcmovnu
dec
sbb
or
or
das
cmp
jmp
pop
and
cli
stos
test
jle
bound
xchg
dec
xchg
jmp
les
sub
xor
in
push
inc
mov
or
mov
jp
sbb
cmp
enter
mov
lock
dec
lea
inc
pop
xlat
test
data16
add
gs
lock
mov
fwait
pop
xchg
jmp
jg
xchg
sub
aas
xor
inc
xor
repnz
sbb
jmp
jae
gs
dec
add
insl
faddl
rcr
jae
cmp
add
mov
cmp
cmpsl
mov
lret
js
mov
add
fistl
add
fsubl
fsubp
mov
or
lds
push
cmp
add
sbb
cmp
mov
cwtl
xor
or
add
push
enter
lea
mov
aad
jae
out
and
hlt
std
rclb
inc
push
fldenv
js
and
cmpsb
mov
pop
repz
jbe
adc
out
jmp
push
lret
dec
or
inc
lock
dec
shll
mov
mov
cmc
or
jle
aaa
js
and
inc
dec
mov
addb
xor
sbb
leave
xor
jo
fsts
pop
mov
pushf
inc
add
push
jmp
mov
or
pop
lcall
js
dec
mov
scas
lcall
repnz
pop
mov
pop
jmp
adc
sbb
aam
xchg
aaa
pop
int3
ror
pop
cmp
fwait
lds
xchg
ja
or
aam
out
jmp
inc
cmpsl
jecxz
arpl
aam
adc
imul
je
and
inc
int3
add
mov
cmpb
cltd
jae
push
rcrl
cs
test
inc
aam
leave
jg
jg
mov
pop
mov
xor
mov
aad
loope
sbb
cmp
mov
int3
stos
push
sbb
lahf
or
stos
xchg
mov
inc
addb
shlb
sahf
inc
inc
ja
mov
es
lret
call
ret
cmpl
add
pushf
adc
in
sahf
cmp
inc
fcomps
ficoml
pop
or
cmp
andb
xchg
sub
daa
arpl
int3
test
pop
in
pop
or
aaa
pop
add
in
add
cmp
mov
xor
jae
insb
adcl
leave
push
aam
and
jmp
push
lods
xchg
inc
popf
ret
stos
adc
xchg
in
mov
jmp
dec
mov
push
pop
inc
popf
pop
call
jl
cmp
addb
rol
mov
aam
icebp
jns
cmpsb
push
fwait
jno
les
cmpsb
jb
and
add
or
lea
or
sbb
js
add
std
popa
inc
xchg
aaa
mov
dec
jmp
xchg
int
add
jmp
arpl
les
inc
pop
jbe
cmp
mov
adc
clc
fnstenv
ret
test
stc
push
int
adc
xchg
jg
pop
cmc
mov
arpl
cmp
jns
mov
mov
jmp
xchg
pop
jmp
jb
mov
std
cmp
ds
pop
mov
push
mov
stc
xchg
gs
ficomps
fisttps
movsb
aaa
mov
xchg
in
jg
mov
into
lock
test
stc
popf
push
xchg
cwtl
sbb
sub
lods
hlt
xchg
das
ja
and
or
push
xchg
pop
mov
fsubr
mov
or
je
nop
jmp
into
stos
jmp
mov
mov
int
outsl
stos
sti
shl
and
shll
pop
aam
dec
cmp
adc
and
or
push
push
sbb
xor
cli
or
add
mov
ret
loop
mov
mov
and
dec
dec
adc
popl
or
pop
dec
push
cmp
fisttps
push
stos
add
lahf
xchg
pop
pop
push
fs
push
inc
xor
int
popf
dec
ds
mov
xchg
inc
dec
les
jns
xchg
stc
mov
fcompl
clc
or
jne
mov
mov
mov
pop
ret
repnz
jnp
jbe
jmp
jno
mov
jle
mov
mov
jmp
jmp
hlt
test
jl
mov
pop
inc
dec
ror
sarl
outsl
mov
cmp
dec
aam
out
sti
arpl
shlb
sahf
xchg
test
jbe
int
stos
in
stc
ror
mov
bound
lret
es
push
xor
adc
dec
or
flds
adc
test
lds
inc
jmp
fsubs
xchg
out
and
into
sarl
pop
mov
or
sbb
das
dec
shlb
dec
stos
jmp
sub
ret
push
jle
jecxz
mov
mov
mov
subl
add
ret
pushf
dec
add
mov
sbb
jmp
add
adc
je
test
in
and
lods
loopne
inc
lods
dec
mov
pop
fbld
jmp
lds
and
into
loope
stos
mov
push
cs
sbb
push
decb
push
mov
fldl
je
dec
insb
imul
mov
cwtl
inc
lock
inc
jmp
cmp
mov
add
inc
arpl
jb
dec
addr16
ja
push
arpl
shlb
fwait
out
mov
stos
push
fidivs
and
enter
pop
jae
jmp
out
call
shrb
xchg
repnz
call
scas
and
ljmp
loopne
rcrb
jmp
aaa
cmp
sub
mov
fcomip
es
movsl
fadd
test
inc
ficoms
jge
iret
xchg
pushf
jmp
sub
ds
sbb
insl
jbe
push
mov
lea
stos
insb
inc
xor
push
ja
inc
lock
mov
pop
or
mul
add
jae
mov
push
test
inc
lods
jno
gs
sub
dec
sbb
lahf
fdivrl
mov
ss
inc
sub
shlb
enter
dec
sub
mov
mov
lcall
js
add
push
shrb
insb
inc
pushf
jo
jecxz
pop
adc
jae
ret
mov
sahf
rcll
stos
jbe
test
xor
xor
push
lock
mov
inc
clc
mov
jb
jecxz
jmp
addb
dec
push
inc
xchg
and
mov
mov
test
jg
mov
inc
rcrb
pusha
in
fninit
repnz
jmp
push
out
ljmp
scas
test
mov
xorb
scas
in
xor
js
mov
pop
and
lds
adc
push
scas
call
leave
mov
cmp
add
outsl
bound
push
jno
xor
lock
push
inc
xchg
jl
popa
aam
cmpsl
pop
lea
adc
xor
pop
je
movsl
mov
xor
movsl
xchg
test
add
push
sub
sbb
cli
inc
mov
jae
aad
int3
lea
xchg
and
inc
ret
inc
jnp
insl
popa
aaa
jae
repnz
dec
and
mull
add
or
scas
pop
jbe
testb
popf
loope
mov
cs
stos
push
or
aaa
test
aam
lahf
jmp
and
jmp
add
jno
mov
stos
adc
dec
sub
jg
outsl
mov
lcall
jmp
add
les
pop
adc
js
aas
and
mov
rcrl
pusha
mov
lock
arpl
xchg
sbb
loopne
int3
repz
cmp
fdivl
test
xchg
rolb
mov
mov
jmp
inc
sti
lahf
adc
pop
pop
dec
jmp
fsubrl
jle
mov
xchg
mov
inc
pop
js
jae
hlt
pop
pop
shr
push
call
arpl
cli
arpl
push
repnz
push
je
mov
test
cwtl
adc
dec
xor
std
dec
and
and
loop
loope
cli
sbb
mov
sbb
dec
xchg
dec
jg
dec
in
mov
jmp
fdivrs
sbbb
fildl
ret
imul
xchg
jmp
inc
nop
mov
insb
pop
cmc
mov
mov
add
mov
xor
shlb
push
movsb
mov
mov
pushf
push
insb
out
xorb
ja
je
cld
dec
cmp
out
jmp
sub
cld
mov
stos
loopne
mov
fbstp
lods
jmp
inc
mov
rorb
ret
fs
sub
shr
jnp
loopne
pushf
xor
adc
dec
ret
ret
popa
push
loope
mov
ss
add
shrb
mov
xchg
das
or
and
jnp,pt
jp
inc
mov
jbe
movsb
pop
shrb
sub
scas
ffreep
push
add
and
cmp
push
fadds
xor
sarb
push
cmpsl
data16
or
sub
insl
xor
shlb
out
negb
jns
mov
push
and
sbb
fs
cmp
sti
aad
clc
xor
ja
mov
mov
jmp
stos
xchg
inc
loop
xchg
mov
enter
dec
movsb
bound
mov
pop
mov
mov
add
stos
andb
push
lahf
popf
loope
divb
jl
or
in
add
mov
leave
jmp
inc
mov
sbb
mov
in
imul
sti
imul
xchg
sbb
nop
lahf
and
and
scas
lods
cmp
std
aad
inc
fistl
leave
repz
mov
loope
test
mov
psubw
das
dec
movsb
scas
cmp
scas
sbb
test
jmp
sbb
inc
mov
imul
mov
mov
lcall
out
inc
mov
lods
adc
mov
cmpb
cmp
dec
inc
and
mov
sbb
adc
sahf
movsl
adcb
adc
test
inc
lahf
sbb
mov
add
add
adcl
xchg
add
cmp
jns
jmp
inc
sbb
lock
xor
inc
push
mov
ds
popf
mull
pop
inc
pop
push
push
dec
stos
jmp
xchg
aam
cmp
rcl
jge
pop
pop
arpl
adc
mov
int
xor
icebp
inc
rclb
insb
mov
popa
outsl
sbb
dec
sub
cmp
fsubs
imul
or
data16
sub
dec
jmp
add
jnp
add
mov
shlb
lds
lods
adc
dec
add
xor
sbb
pusha
sbbl
sbb
andb
ljmp
les
sbb
dec
mov
and
add
cltd
push
add
rcrl
xor
jle
bound
cltd
sub
pop
pop
cltd
mov
xchg
xor
icebp
add
jmp
dec
in
call
push
pop
dec
outsb
pop
jp
xchg
stos
xchg
dec
mov
cltd
ds
imul
jecxz
and
popa
adc
lock
movsb
mov
sbbb
mov
sahf
mov
mov
mov
cltd
icebp
fsubrl
dec
cmp
cltd
out
and
out
cmpsl
popa
add
push
enter
ljmp
pop
outsl
insb
mov
cli
fcomps
aaa
add
nop
mov
mov
out
push
jle
sub
xchg
fdivl
xor
cltd
jbe
inc
js
clc
adc
mov
push
fcomps
mov
sub
int3
sub
out
sbb
mov
lds
xor
push
inc
add
imul
sub
cmp
mov
das
sbb
and
dec
pop
cltd
std
cli
sub
mov
dec
cltd
xor
xor
fistl
adc
addr16
mov
out
xchg
cltd
adc
dec
shlb
cld
inc
cltd
test
sub
cltd
lods
inc
pusha
lret
shrb
add
push
or
sbb
sahf
push
les
and
xchg
scas
mov
cltd
in
mov
pop
sahf
or
mov
jbe
jne
enter
jmp
aad
cmpsl
mov
mov
dec
out
dec
jae
cltd
test
xor
addr16
push
inc
cmp
cmp
popl
fimull
mov
and
jae
int
insl
cltd
sbb
aam
dec
cltd
and
push
lret
cltd
insl
or
lea
mov
add
pop
cltd
sti
pushf
arpl
aad
cmpsl
jp
fxch
jbe
cltd
inc
inc
sbb
fwait
xchg
and
dec
repz
cltd
jle
mov
movsl
inc
add
adc
loope
imul
xor
fwait
pop
call
movsb
mov
mov
xor
push
xlat
sub
mov
push
and
lret
inc
cwtl
mov
mov
mov
outsl
shrb
mov
and
mov
mov
cs
idivb
cmpsb
jo
mov
xchg
test
jno
fwait
cmp
cltd
ret
rcl
inc
xor
test
rcrb
pop
cmp
jne
cltd
mov
lret
repnz
cltd
mov
andl
sub
cmp
sub
lds
cltd
addr16
mov
stos
pop
inc
roll
ss
cltd
jge
push
test
nop
add
cmpsl
adc
mov
cltd
xchg
pop
enter
and
pop
jb
jne
jae
sbb
and
push
push
std
xchg
pop
mov
mov
inc
dec
loopne
adc
jo
xchg
push
lret
loop
xor
sbb
cmp
pushf
dec
cmpsl
mov
sti
movsb
sbb
inc
mov
test
pop
cltd
rolb
imul
xor
fwait
sub
icebp
mov
cltd
pop
jne
pop
nop
pop
ficompl
dec
mov
cmpsl
and
stc
and
push
cmpsl
add
pop
cmp
aad
xchg
cmp
cltd
dec
out
or
mov
cmp
jb
pop
mov
mov
mov
hlt
or
xor
sbb
dec
and
xor
mov
pop
cmpsl
xchg
clc
imul
add
sub
jbe
push
imul
outsl
mov
mov
cltd
cmp
push
into
rorb
xchg
push
leave
xchg
lods
mov
inc
cltd
js
icebp
push
mov
fiaddl
fstps
cltd
or
fnstcw
add
fwait
dec
faddp
jnp
adc
les
rcrb
insb
xlat
cmp
subl
pop
jbe
arpl
dec
loope
pop
cltd
idivb
pop
push
das
cltd
or
lods
jno
mov
les
cltd
sbb
adc
xor
sahf
gs
test
icebp
mov
movsl
sbb
adc
fldt
enter
rorb
or
gs
pop
push
inc
mov
insl
xor
aad
pop
xchg
pop
stos
shll
into
mov
fistps
mov
xor
inc
loopne
mov
scas
or
out
cltd
addr16
mov
jnp
cltd
jmp
mov
xor
adcl
mov
nop
hlt
and
sub
inc
lods
das
cltd
pop
int
je
mov
cld
and
adc
or
pop
in
jmp
or
movsb
cltd
cmpsb
sahf
dec
insb
ss
adc
pop
rcrl
pop
insl
cltd
scas
enter
jmp
dec
inc
or
xor
jae
inc
orb
divb
mov
outsl
js
dec
mov
xchg
jo
aas
jl
inc
pop
xor
xchg
mov
fucomp
cmp
mov
call
jb
xchg
mov
lret
add
hlt
je
movsl
loope
fiadds
lret
cld
fwait
aad
mov
aaa
mov
push
inc
cltd
rorl
add
pop
xchg
imul
ljmp
int3
sbbb
xchg
dec
xor
cltd
leave
push
and
jg
fldcw
cltd
push
push
or
sarb
fiaddl
stos
mov
mov
push
pop
scas
adc
push
je
addb
xchg
cltd
pop
adc
loop
pop
imul
pop
inc
and
adc
inc
fs
xchg
cltd
ss
push
lods
cltd
sbb
push
aam
imul
ljmp
xor
mov
sbb
xchg
cltd
jns
mov
xchg
xchg
fiaddl
gs
mov
pop
clc
inc
leave
imul
mov
sub
mov
pop
aad
push
cltd
pop
popa
aas
test
les
cltd
jmp
sahf
popf
pop
iret
lahf
fnstenv
xor
mov
stc
repnz
mov
pusha
and
mov
push
mov
fs
repz
and
hlt
xlat
or
jp
xchg
jmp
sbb
adcb
pop
mov
mov
cltd
and
mov
cltd
addr16
jne
xlat
popa
push
sbb
movsl
mov
jmp
jae
out
push
jns
xor
jns
push
adc
cltd
adc
rcrb
cltd
cld
lock
mov
scas
out
mov
mov
sbb
xchg
inc
cltd
and
icebp
and
dec
push
les
adc
mov
in
jle
call
dec
inc
pusha
fnsave
cltd
inc
push
fcomps
cmc
int
pop
cltd
or
les
call
pop
movsl
cltd
leave
rcrb
scas
add
stos
inc
dec
mov
mov
cmp
cltd
dec
sbb
push
les
push
sahf
insl
je
cmc
nop
scas
mov
jno
and
push
popl
sub
ret
push
mov
jle
and
mov
scas
lods
adc
outsl
or
sbb
mov
or
mov
leave
pop
sub
fwait
pop
mov
adcb
sahf
lea
add
push
sub
je
mov
pop
inc
add
lcall
mov
jmp
inc
jno
in
roll
push
out
push
movsb
xor
stos
mov
aas
ss
and
ret
push
ja
lods
test
loope
fsts
addl
mov
cmp
clc
sbb
push
jns
cmpsb
push
jl
jmp
inc
sarl
outsb
cwtl
stos
aas
pushf
jmp
sub
inc
sahf
sbb
js
pop
push
sub
mov
into
xor
stos
jmp
xchg
mov
jge
xchg
jp
mov
data16
pop
adc
fisubrl
das
adc
gs
sub
pop
adc
xor
mov
icebp
sbb
mov
test
fmul
push
dec
mov
arpl
aam
xchg
mov
leave
into
mov
lock
movsl
jae
repz
cmp
push
xchg
sbb
mov
lock
outsl
bound
sub
push
pushf
mov
jmp
test
inc
mov
ret
int3
lcall
jns
sbb
inc
mov
sbb
shl
jmp
dec
jns
sub
mov
in
cmp
pusha
sub
xchg
and
popa
fdivrs
iret
shlb
sbb
testb
enter
mov
xchg
pop
dec
cmpsl
and
xor
fldz
jmp
push
mov
mov
test
adc
jns
jmp
sti
push
and
mov
push
movsl
ret
jb
cs
and
and
pusha
call
jle
xchg
arpl
call
mov
into
xchg
into
cltd
lock
or
shrl
fldl
jmp
stos
fmul
mov
add
iret
inc
icebp
push
in
jo
jbe
push
test
cmpsl
mov
sbb
movb
xor
mov
pop
movsl
dec
addb
iret
outsl
outsb
cmc
push
cmpb
dec
xchg
push
jge
lock
jae
aaa
lock
and
add
scas
div
stc
sbb
cltd
dec
stc
shr
xchg
adc
fnsave
cmp
ds
lock
fcmovne
cmp
icebp
out
imul
mov
dec
pushf
out
push
cmpsb
lock
je
sub
pop
jmp
cmp
inc
cmp
or
xchg
into
xchg
jnp
gs
stc
push
loopne
lock
pop
push
push
or
inc
pop
test
ja
xor
jmp
hlt
sub
lds
adc
stc
xchg
push
icebp
inc
test
push
push
sarl
mov
xor
fldt
in
mov
lea
cmp
mov
xor
ret
and
jae
mov
cmpsb
jmp
outsl
push
mov
xchg
push
mov
pusha
sbb
test
pop
and
mov
clc
test
sarl
mov
scas
adc
mov
repz
pop
aam
sbb
xchg
das
fidivs
insl
mov
cmpsb
arpl
push
into
in
jmp
popf
lret
lahf
mov
inc
into
outsb
rcll
iret
adc
inc
pop
push
cs
gs
fwait
jb
inc
aas
pop
jmp
aam
jmp
push
mov
xor
push
jno
xchg
xor
sbb
mov
movsl
cmp
xchg
adc
cmp
cltd
sub
test
out
shlb
dec
bound
add
lahf
mov
test
cmpsl
add
call
xchg
or
pop
sbb
outsl
mov
mov
jp
pusha
cmpsl
in
fbstp
and
and
mov
insb
jns
mov
push
scas
enter
jle
pop
jne
jmp
mov
es
pop
cmc
mov
test
iret
mov
mov
dec
aaa
and
xchg
repnz
dec
aas
or
clc
out
rcl
mov
and
inc
push
xorl
lock
aas
sahf
mov
or
sub
mov
fs
xor
lahf
dec
push
mov
xchg
inc
jns
jmp
xchg
lock
test
hlt
pop
enter
in
loop
ljmp
fstl
jae
push
mov
mov
fmull
dec
jmp
jmp
add
test
mov
sbb
vpaddusb
pop
dec
popf
loopne
inc
or
xchg
and
sbb
cli
add
outsl
sti
xchg
movsl
out
rolb
mov
call
movsb
add
sub
sub
mov
xchg
imul
out
mov
pop
movsl
aaa
jmp
mov
jecxz
xchg
dec
idiv
push
filds
jmp
dec
sub
sub
dec
movsl
lock
imul
addr16
or
mov
and
or
push
sbb
jns
jle
mov
dec
stos
jne
shrb
xchg
mov
pop
xchg
add
or
in
fistpl
gs
ret
in
pusha
daa
cld
stos
stos
xchg
out
jp
in
sbb
adc
cltd
movsl
push
pop
mov
rcrb
loopne
cmp
mov
jle
fidivrs
jbe
sbb
enter
or
shlb
mov
cmp
stos
sbb
push
mov
imul
lds
and
stos
or
pop
movsl
mov
jle
rcrl
sbb
stos
int
xor
test
inc
push
mov
arpl
cltd
iret
sub
mov
pop
movsl
jne
jb
xlat
cmp
sub
sahf
jnp
or
mov
mov
cmp
push
inc
jmp
dec
mov
rcl
loope
fcoms
push
imul
jmp
std
jmp
aam
mov
int
js
cmpsb
mov
pop
jbe
std
test
sbb
shlb
jg
shll
push
lret
jb
cmp
jbe
int
jg
enter
test
lcall
xchg
lods
mov
cwtl
inc
cs
sub
push
shl
subb
dec
push
pop
in
and
cwtl
lahf
push
push
in
fbld
inc
inc
pop
gs
outsb
adc
clc
pop
jno
das
lea
sbb
pop
mov
jl
mov
inc
cmc
inc
dec
xor
popf
and
mov
mov
adc
jl
adc
mov
mov
sbb
sub
and
jo
mov
into
jmp
sbb
leave
mov
add
jno
sub
jmp
mov
or
pushf
sub
sbb
dec
or
xchg
pop
bound
fucomp
inc
push
fstpl
scas
ja
test
sub
fidivrl
loopne
and
mov
or
sub
jb
xchg
fsubrp
mov
pop
xchg
cmp
pop
das
imul
jecxz
cmpl
adc
out
lods
lret
mov
test
repz
dec
stos
adc
insb
xchg
loope
mov
push
jp
adc
aas
inc
lahf
pop
popa
push
dec
cmp
sub
ret
fsub
into
mov
or
add
fsubl
mov
lods
movsb
push
mov
cltd
lock
jne
cmpsb
mov
fwait
bound
mov
lret
rcrb
popa
jne
sbb
push
and
mov
lcall
icebp
ljmp
insl
mov
clc
jge
pop
jo
jae
shl
pop
push
mov
loopne
mov
mov
push
mov
cmp
sbb
in
xchg
rcrb
jecxz
or
adc
mov
mov
pop
gs
ljmp
sub
push
jmp
inc
fsubl
shlb
popf
icebp
pop
jmp
stc
xchg
jne
and
mov
pop
xchg
repnz
mov
repnz
mov
mov
loop
mov
sub
cmc
je
shl
fisubl
push
test
cmp
xchg
mov
cmp
nop
inc
push
loopne
fldl2t
xchg
sti
roll
pop
mov
xor
cltd
push
les
sahf
jecxz
mov
and
adc
sbb
ret
sbb
adc
cld
aas
popf
sbb
xor
push
cmc
xchg
aam
ss
pop
fwait
daa
out
loopne
rclb
cltd
mov
cli
jle
sahf
ds
cmp
mov
pop
fcoms
mov
sbb
and
mov
gs
out
in
loopne
jo
jmp
xor
fsubr
insb
stos
mov
loopne
mov
cltd
rcr
imul
je
mov
pushf
mov
stc
das
test
cmp
mov
dec
adc
jmp
or
out
scas
jno
aaa
fwait
mov
xor
inc
or
ficoms
out
pop
pop
inc
mov
fsub
fsts
scas
fmull
or
add
add
mov
mov
flds
cltd
in
adc
xchg
imulb
or
cltd
ret
dec
pop
xchg
lahf
cltd
add
int3
cltd
test
xchg
xor
and
cmp
add
mov
ror
mov
cltd
bound
cmc
jl
push
fwait
leave
sti
fisubrl
or
sub
cmp
rcl
cltd
xor
stos
lea
jp
inc
pop
cltd
int
sub
xchg
push
les
lea
inc
sub
cltd
inc
cmp
fadd
pop
mulb
mov
cltd
and
out
movsb
inc
cltd
mov
and
cmpsl
cld
data16
orb
xchg
stos
cltd
hlt
mov
sbb
sub
cmp
repz
rcrb
cltd
sub
in
or
in
cltd
pop
or
push
dec
push
xor
in
xchg
cmpsl
jmp
arpl
in
cltd
dec
push
scas
or
cltd
cmp
iret
mov
dec
mov
lret
fwait
add
loope
mov
push
xchg
lea
movsl
lods
jnp
mov
int
shrb
push
dec
ret
cltd
or
testl
xor
in
xor
aaa
or
insb
ficomps
ljmp
mov
xchg
mov
insb
add
pop
fstp
cltd
fdivr
mov
xor
push
cltd
mov
add
rcrl
xchg
pop
mov
sahf
sbb
ficoms
sbb
dec
lret
stc
push
add
loope
jnp
or
cmp
add
je
xchg
mov
pop
xchg
mov
cltd
lahf
cmpb
int
rcrl
sbb
test
cltd
std
dec
ja
jo
movsl
push
sbb
mov
loopne
adc
cwtl
in
pushf
pop
lahf
sub
adc
push
aaa
adc
cmp
fwait
aad
in
or
xchg
mov
cltd
das
push
mov
mov
shlb
jbe
cltd
scas
push
imul
out
iret
cltd
sub
pop
ja
lret
jecxz
addb
icebp
rcrb
pop
bound
sahf
lret
sbb
jmp
negl
psubusb
cltd
add
xchg
sbb
scas
jbe
or
jnp
dec
nop
cmp
imul
inc
test
repnz
dec
call
mov
push
and
aam
mov
xor
cmc
fwait
xlat
jl
mov
dec
cltd
outsb
jg
push
push
and
fistpl
jnp
movsb
add
jecxz
lea
mov
cmova
pushf
das
and
xor
out
sbb
push
insb
out
pop
mov
adc
push
sti
addr16
cltd
xchg
xchg
mov
pop
fwait
mov
pop
mov
dec
fdivl
lods
lret
sbb
gs
enter
cmc
incb
mov
test
loopne
sbb
jl
or
inc
push
shl
mov
cld
cs
ljmp
sti
pop
jns
insl
cltd
and
aad
out
cmp
cltd
lock
outsl
clc
fucom
pop
ss
pop
jbe
cltd
sahf
push
pop
sub
test
mov
sbb
das
inc
jnp
shr
or
in
es
jbe
addb
inc
and
insl
jb
jmp
test
loopne
cmp
fwait
cltd
test
push
pop
mov
jae
inc
sbb
testl
push
or
adcl
mov
inc
add
cmc
outsb
xor
jne
sti
xor
sub
mov
dec
cmp
adc
sub
clc
rcrb
cli
mov
cmp
cmp
pop
pop
in
popl
popa
mov
imul
sub
inc
mov
test
adc
jae
test
mov
fldenv
jmp
sub
mov
in
out
jnp
rorb
mov
or
xchg
sbb
sti
mov
test
insl
in
push
scas
dec
mov
mov
and
je
or
mov
sub
pushf
inc
bswap
cltd
in
mov
call
shrb
lds
mov
loopne
sub
mov
xchg
mov
sbb
jl
std
ror
sahf
ss
pmullw
insl
jne
fildll
mov
scas
cltd
and
mov
fwait
jg
int
fcompl
xor
cltd
cmp
in
ss
lret
lea
in
fbld
dec
push
shrb
pusha
lahf
mov
lcall
repnz
rcl
addl
insb
test
fwait
negl
cltd
fisubrl
mov
rcr
sub
inc
sahf
mov
add
add
fwait
push
cltd
sub
pop
or
mov
cmpl
in
icebp
test
mov
xor
sbb
push
sub
cmpsl
push
test
fmuls
adc
sub
and
rcll
lcall
sub
jl
xorl
push
lcall
xchg
int3
push
cltd
in
mov
xor
rcrb
mov
and
mov
sub
jp
sub
clc
xor
fcoml
mov
je
cltd
sub
hlt
pop
sbb
and
inc
icebp
shrb
or
pushf
dec
or
lret
jns
cltd
fdivrs
rcrl
andl
in
cmpsl
add
dec
jae
fadds
xchg
push
psubw
mov
mov
and
push
loop
mov
test
add
dec
in
popf
es
insl
and
popf
cltd
xchg
fnsave
mov
andb
test
cmp
jbe
cmpsb
adc
jmp
in
addb
lock
sbb
popf
dec
cltd
js
test
lea
lretw
cmpsl
cmp
and
or
scas
fucomp
shll
aas
data16
xor
je
lret
cltd
push
sub
inc
fdivs
lahf
pop
pop
fwait
xchg
jno
adc
mov
add
lods
cmpsl
inc
dec
mov
mov
fwait
inc
sbb
in
imul
cld
mov
pop
dec
shlb
push
std
cltd
adc
dec
pop
popf
sub
push
daa
bound
and
sub
xchg
sahf
pop
test
out
push
sbb
pop
pop
jp
mov
jo
pop
sti
cmpsl
leave
add
mov
pop
push
fs
dec
scas
bnd
push
cmp
mov
lcall
loopne
cld
push
jmp
iret
adc
mov
stos
add
cmp
xchg
aad
and
cltd
and
bswap
jp
ret
sahf
into
cltd
push
aas
lds
int
dec
pop
mov
mov
pusha
xor
adc
sub
or
jg
into
int
adc
loopne
js
andb
inc
cli
dec
mov
and
jnp
cltd
ds
std
jecxz
fstl
aam
push
pop
inc
push
cltd
and
idivb
cltd
pop
popf
xlat
mov
bound
imul
mov
inc
lcall
adc
mov
mov
sahf
movsl
pop
repz
sbb
rorl
jmp
and
push
inc
cmp
pop
mov
gs
fsubrl
flds
mov
jecxz
iret
mov
cltd
pop
fs
xor
sahf
dec
fdivp
lcall
rcrl
mov
lock
adc
mov
pop
lods
les
xor
rorb
pop
fwait
mov
aam
cmpsl
and
xchg
mov
out
jg
add
cmpl
iret
lock
inc
inc
adc
cmp
je
xchg
or
scas
stos
mov
inc
jmp
pushf
out
movsl
rcr
adc
mov
out
mov
mov
bound
sub
fldcw
cmp
sbb
out
ds
mov
outsl
cmp
fdivrl
call
iret
pusha
push
into
lock
jne
cmc
pop
mov
cmp
mov
insl
jg
imul
shll
add
js
mov
test
ja
das
cmp
outsb
das
sbb
lock
dec
test
pop
lcall
aaa
repnz
fwait
lds
mov
sahf
movsl
mov
lds
xchg
jns
inc
fmul
push
cmp
xchg
stc
dec
pop
push
in
jmp
imul
fistl
mov
negl
jg
loopne
data16
negb
jb
sub
ss
ret
and
dec
fadd
jo
aas
xchg
idivl
xchg
jecxz
sbb
iret
lods
sahf
xchg
adc
lock
sti
push
push
fistl
inc
xchg
popf
jbe
cmp
lods
mov
sahf
xchg
inc
test
cmp
fmulp
pop
loope
dec
out
movsb
lock
sbb
jmp
push
pop
clc
sbb
mov
adc
rolb
or
out
jo
add
add
int3
jmp
and
inc
loopne
outsl
push
sub
cmp
jne
pop
sti
orb
cmpsb
jmp
xchg
jl
mov
int
sbb
cmp
jg
repz
inc
jbe
icebp
ja
pushf
movups
shl
push
lods
jmp
jmp
sarl
sub
fnstcw
std
shr
jecxz
sahf
int3
cli
push
fcmovb
fadd
dec
xchg
pop
sbb
movsl
pop
sbb
mov
sbb
inc
loope
in
push
mov
ficomps
fsts
cmp
test
xadd
fcoml
into
push
mov
xchg
and
mov
inc
popf
cmp
and
jae
or
mov
repz
cmp
aad
cmp
shrl
or
test
data16
inc
sbb
mov
loopne
push
lock
or
shr
add
xor
cmp
inc
scas
loopne
cs
push
lret
mov
jg
filds
xchg
int
and
xchg
add
push
aam
mov
sbb
cltd
ficoms
cmp
pop
adc
ret
shrb
dec
jmp
jno
popf
mov
lock
push
dec
mov
in
orl
data16
stc
arpl
into
mov
dec
pop
jmp
pushf
out
movsl
ja
rcl
lahf
rcrl
jg
dec
dec
fisubrs
xor
mov
xchg
push
cmp
pop
in
xchg
pop
mov
mov
inc
xchg
jns
jmp
jmp
in
les
push
mov
int3
sbb
push
add
cli
push
dec
aaa
and
sub
dec
pusha
imul
mov
shll
inc
cli
cmp
sub
ss
movsl
ljmp
add
push
arpl
push
jmp
sbb
popf
jle
xor
sub
out
lock
jl
lds
mov
inc
shrb
and
vhsubpd
mov
aas
jnp
inc
sub
inc
pop
jo
pop
and
shlb
pop
sbb
insl
fcmovne
out
cmp
add
dec
and
out
sahf
fcmovb
gs
mov
cld
out
sahf
mov
mov
xchg
leave
jg
xchg
in
mov
into
lea
xchg
sbb
jp
cltd
incb
jecxz
ds
and
mov
rcrl
and
cmpsl
stos
jns
test
shll
dec
int
mov
add
push
mov
xchg
cltd
sub
xor
gs
lcall
add
cltd
jne
sub
fisubrl
fstl
cmp
bnd
and
sbb
xor
inc
sti
ds
imul
xchg
stc
icebp
iret
or
aaa
loope
xor
inc
add
cltd
push
neg
mov
mov
cltd
pop
xorps
sbb
shl
xchg
pop
lret
stc
push
or
push
sub
pop
cltd
dec
xor
push
dec
cltd
outsl
je
cmp
cmp
adc
dec
inc
or
cltd
dec
sti
pusha
xor
sbb
lcall
mov
push
nop
je
and
in
cltd
ret
mov
fistps
stos
test
add
mov
lahf
ljmp
cltd
and
in
lcall
cmp
adc
in
orb
xchg
in
clc
scas
ret
push
aaa
mov
fisttpl
cmp
mov
pop
int3
cmp
mov
ret
pop
pushf
aas
cltd
or
test
adcb
inc
cmp
out
mov
jmp
movsl
fmul
xchg
inc
xlat
leave
lcall
adc
lretw
das
or
cltd
cld
dec
cmpsb
btr
and
and
xchg
imul
negl
mov
fucomip
jb
sub
xor
cmpsl
sub
xchg
test
cltd
push
cmpsb
lcall
add
push
outsl
mov
cltd
out
pop
fdivl
mov
mov
add
xor
in
jo
fs
pop
out
hlt
repz
pusha
inc
xchg
insb
push
add
rcrl
push
cs
mov
shrb
pushf
cltd
test
xor
add
lock
test
aaa
imul
cli
pop
inc
fsub
mov
cmp
cltd
sub
out
inc
aas
nop
pop
rcrl
lcall
aam
fcoms
popa
cmpsb
loope
or
repnz
cmp
sbb
andl
sub
add
add
lea
adc
push
mov
jle
xor
push
in
cltd
aam
cmp
jl
mov
mov
arpl
mov
dec
scas
or
or
shll
js
leave
lahf
cltd
pop
xor
pop
inc
test
and
and
jo
mov
cltd
push
hlt
fimuls
adc
subb
out
cld
into
ret
cltd
dec
push
aad
pop
add
loop
pop
dec
dec
mov
dec
jae
rol
std
inc
ret
mov
repz
out
fsubrl
aad
les
cmp
lods
cli
pusha
aam
sub
les
mov
mov
iret
jnp
and
jns
sbb
sbb
push
cltd
in
addr16
xchg
or
insb
movb
and
cltd
out
add
push
nop
lods
jae
mov
sbb
inc
xor
adc
pop
popa
imul
scas
adc
dec
cmp
cltd
loop
fwait
push
scas
sub
or
arpl
mov
push
push
mov
in
mov
adcb
pusha
mov
sbb
cmp
mov
imul
sub
cmpsb
pop
das
sti
aad
insl
rcr
int
mov
cltd
adc
xor
movsl
shrb
loopne
xor
cmpsb
ficoml
repnz
pop
jne
lret
xchg
cltd
and
xchg
movsl
lods
xor
dec
sub
aad
push
dec
lahf
test
adc
movsl
cltd
sbb
int
sbb
pop
loop
das
mov
push
popa
out
add
and
cltd
cmp
dec
sub
xchg
cltd
pop
pushf
add
fidivrs
and
ja
ret
fmull
out
push
in
push
scas
or
fdivr
inc
pop
js
fsts
mov
push
bnd
pop
fisubl
pop
push
test
jmp
shl
out
outsb
test
cltd
lcall
and
insl
int
cltd
xchg
sahf
sbb
aad
cltd
int
sbb
iret
inc
rorb
lods
jo
lock
sbb
outsb
add
sub
fldcw
xor
lret
ja
cltd
fsubs
in
pusha
or
cltd
btc
xchg
movsb
jno
cltd
icebp
pop
in
sbb
lock
pushf
mov
push
cmp
jnp
shll
popf
and
ffreep
and
in
dec
push
loopne
and
cltd
insl
hlt
mov
add
bound
or
gs
add
sbb
mov
movsl
jl
aas
sbb
pop
cli
imul
pinsrw
clc
scas
jg
stos
mov
cmp
jp
push
pusha
into
or
nop
push
jb
cltd
inc
jno
add
incb
jl
xchg
push
cwtl
arpl
inc
mov
cli
sbb
cld
xchg
push
mov
mov
cltd
mov
ret
loop
adc
bound
add
xor
xchg
mov
adc
mov
test
fsubrp
xchg
xchg
push
mov
lea
xchg
xchg
pop
dec
leave
xchg
jmp
mov
xchg
add
pop
cmc
pop
cmpb
les
stos
mov
scas
push
pop
int
dec
jns
inc
mov
shr
andb
sbbb
sbb
daa
jp
mov
sbb
ret
jmp
jg
mov
jb
lcall
push
lret
out
mov
cld
jne
mov
xchg
mov
jmp
adc
mov
imul
jae
cwtl
cmp
mov
sub
ret
stc
add
cmpsb
ret
testl
mov
test
sar
add
dec
dec
cs
xchg
scas
fmuls
iret
cmp
in
xchg
cmp
inc
insb
rcrb
lods
fstpl
sbb
aam
mov
mov
sbb
xor
adc
fidivrs
jae,pn
sti
cmc
stos
fisttpll
and
inc
or
cmc
in
mov
pop
mov
xchg
ja
add
mov
xchg
and
xor
xchg
in
or
and
sbb
into
sahf
cmp
xchg
test
lea
mov
dec
cmpl
sbb
mov
xor
aas
stc
xchg
leave
movsl
add
ror
movl
cmpsb
jmp
sbb
mov
jae
xchg
mov
push
dec
rcl
lahf
xor
repnz
mov
xor
jno
mov
cltd
pop
fldt
jmp
scas
xchg
lahf
or
or
add
fildl
insb
fsts
inc
fsubrl
loopne
iret
lds
stos
dec
fwait
pop
mov
jmp
pop
adc
cmc
push
aaa
cltd
lock
dec
add
mov
nop
or
aam
jb
in
lret
add
fidivs
mov
cmc
or
faddp
pop
jmp
adc
fwait
rclb
cmpsl
jne
pop
or
inc
loopne
xchg
xor
cmp
loope
stos
loopne
jl
jmp
cmpsb
lock
jmp
sbb
mov
adc
jmp
or
stos
sbbb
das
fstps
jmp
imul
in
ret
dec
rcll
mov
imul
jmp
xor
int3
inc
loop
fwait
andb
insl
ret
frstor
adc
mov
xor
mov
mov
xchg
sub
lret
jnp
mov
add
push
and
leave
test
pop
or
push
dec
shr
push
inc
xor
clc
movsb
or
out
mov
mov
mov
inc
sbb
in
cmc
test
fisubrs
movsl
lock
dec
sub
pop
rcrb
lahf
aam
mov
pop
cltd
sbb
xchg
es
loop
cmp
stos
inc
enter
fs
dec
mov
out
loopne
mulb
imul
lret
lcall
lds
xor
mov
add
hlt
add
lock
and
loopne
inc
mov
imul
fs
loop
loope
test
cltd
mov
jmp
mov
nop
xor
cmc
lcall
mov
jbe
xchg
adc
sub
pushf
mov
loopne
sub
cmp
mulb
aad
cmp
pop
jg
aad
jo
test
pop
loop
mov
push
mov
pop
bound
mov
jg
loope
push
inc
jmp
es
mov
inc
popf
sub
into
mov
jecxz
or
mov
adc
into
popl
in
test
push
stos
mov
mov
aam
shr
sub
scas
icebp
push
sub
ja
aad
and
shlb
cmp
fadds
incb
mov
mov
int3
fcoms
stos
jmp
sahf
pop
mov
xchg
stc
pop
fildl
nop
out
mov
jmp
pop
jp
enter
pusha
and
sbb
fnstsw
lahf
pop
inc
push
les
enter
iret
pop
ret
cli
xchg
rolb
jmp
xchg
push
sbb
jno
push
test
adc
or
jnp
sub
xor
ret
scas
xor
mov
les
add
es
lods
jnp
adc
sbb
addr16
jns
jmp
sub
mov
jbe
dec
and
out
jns
push
pop
mov
rolb
sub
add
test
fnstsw
lret
lret
push
jge
push
fsubp
add
or
bound
hlt
mov
ds
sub
mov
sub
in
aam
lcall
addr16
lods
jnp
arpl
add
pop
push
shlb
and
les
rcrb
gs
es
adc
jne
add
pop
inc
mov
in
xchg
push
shlb
fnstcw
icebp
out
aaa
call
and
cmp
adc
mov
pop
into
xchg
mov
mov
push
xor
and
mov
add
dec
sub
sbb
lock
inc
xchg
xor
mov
push
sahf
cmp
in
jnp
xor
jle
add
out
in
cltd
push
push
dec
jno
or
js
or
cltd
insl
push
dec
dec
or
scas
and
push
movsb
repz
inc
leave
mov
pop
mov
out
push
xchg
mov
sti
loope
icebp
cltd
push
inc
pop
adc
xor
lcall
push
fwait
repnz
imul
test
mov
jmp
cmp
lods
push
and
mov
subb
cltd
sbb
mov
dec
jmp
ds
and
div
jecxz
pop
push
ret
cmp
fidivrs
push
xchg
test
jnp
mov
jmp
fisubl
dec
scas
dec
pop
jnp
loopne
bound
or
sub
stos
mov
mov
jmp
iret
movsb
or
pop
mov
xor
xchg
sub
dec
out
dec
imul
leave
cmp
xchg
and
pop
ret
dec
sub
popf
imul
cmc
pop
fcoms
and
mov
int
ds
iret
cld
ret
pop
jbe
sbb
das
adc
aaa
mull
xchg
mov
push
iret
push
mov
inc
lahf
jg
push
jb
cmp
xor
test
rcll
loopne
pop
std
mov
mov
stos
mov
subb
xor
shlb
pop
shrb
into
and
lret
stos
jb
es
mov
ss
or
jmp
cld
xchg
mov
loopne
sub
mov
fsubr
inc
mov
scas
loope
lock
jae
cwtl
sbb
cmp
movsb
push
gs
dec
or
sarb
dec
outsl
mov
mov
fstl
aaa
push
pop
rorl
in
pop
lock
jmp
jl
mov
sub
xchg
push
cli
mov
cmp
push
lcall
lock
xor
mov
cltd
pop
and
mov
cmp
push
ficoms
nop
mov
jnp
adc
push
sbb
sub
idiv
push
jmp
jns
std
jo
lock
neg
mov
out
xchg
sahf
and
mov
test
xchg
sti
or
inc
pop
mov
jno
stos
mov
cmp
sub
mov
jmp
and
xchg
jmp
test
ud1
dec
test
dec
cmp
mov
movsl
lock
and
fldt
mov
arpl
mov
push
xchg
jg
sbb
xchg
dec
stos
jno
mov
lock
inc
add
jmp
ds
in
aam
cmc
jae
out
loopne
mov
sub
inc
test
loopne
sub
mov
push
inc
jmp
jae
sub
pop
fdivrl
add
jg
je
cmp
cmp
mov
push
dec
mov
cli
sub
andl
popa
adc
insb
negl
in
insb
sub
sbb
jmp
in
mov
int3
pop
lock
insb
and
enter
fisttps
jne
dec
sbb
cwtl
push
sbb
sub
lds
push
xchg
cmp
add
mov
push
aaa
jmp
sbb
loopne
lock
inc
mov
lcall
inc
lcall
sbb
pop
jg
mov
fisubs
aaa
int3
test
add
dec
jb
lock
push
loop
loope
fwait
movsb
jne
xchg
leave
aam
jmp
cwtl
outsl
fstl
add
stc
scas
std
xchg
stos
repz
sbb
sub
xchg
addr16
aam
cmp
jne
push
cmp
ljmp
fs
cmp
outsl
loopne
inc
sbb
jbe
sti
or
xor
test
and
ljmp
mov
pop
xchg
mov
shld
dec
jecxz
into
cltd
dec
xchg
ljmp
cmp
insl
push
test
cltd
scas
mov
push
std
iret
test
movsl
cmp
ret
cltd
shrl
push
sbb
les
loope
aad
fnstcw
lahf
add
js
jmp
jmp
add
mov
sub
das
pusha
xor
cmpsl
jg
shlb
inc
out
mov
gs
sbb
adcb
mov
mov
cltd
and
cmc
inc
and
aas
inc
xorb
aad
xchg
into
imul
lods
nopl
repz
mov
and
inc
jp
js
pop
lcall
cltd
in
mov
movsb
out
fbld
push
xor
ja
cmc
jl
inc
and
fwait
pop
pop
adc
inc
mov
mov
jg
pop
and
mov
hlt
cltd
sub
xchg
sbbl
adc
sub
stc
test
rcrb
adc
scas
pop
out
gs
out
sbb
sbb
insb
push
cltd
jle
arpl
sub
cltd
fldt
push
cltd
nop
mov
sbb
push
insb
and
adc
cmpsl
movb
inc
sbb
mov
cltd
sti
in
jp
mov
jge
cltd
adc
test
mov
mov
cmp
outsb
and
not
enter
stc
aaa
adc
jmp
adc
pop
add
fcompl
or
xor
jbe
lcall
xchg
cltd
pop
nop
jmp
add
leave
loop
lret
add
imul
ljmp
inc
jae
jl
cltd
jbe
in
dec
jnp
aam
or
add
pop
push
loope
add
cltd
aas
pop
jl
ljmp
mov
push
inc
cltd
loope
dec
cld
jne
mov
cltd
sub
push
xchg
fldt
mov
sub
adc
rol
insb
int
xchg
and
insl
cwtl
loop
jge
cli
stc
andb
mov
mov
cltd
fisubrl
dec
sbb
cmp
cltd
pop
cmp
outsl
dec
mov
std
sub
gs
repnz
cltd
push
xor
xor
cld
rcll
cmp
mov
arpl
cmp
dec
adc
sahf
add
cltd
xorb
bound
sub
or
sbb
loopne
cmpsl
lret
add
leave
nop
cmpsb
xor
and
pop
test
cmpsl
pmulhw
movsl
lcall
mov
lcall
dec
pop
dec
lods
push
sbb
stos
in
and
xchg
std
xchg
add
sahf
inc
jl
movsl
cltd
pop
sub
bound
cltd
ror
movsb
rorl
mov
sbb
ret
inc
mov
lods
jb
add
mov
mov
movsl
lahf
rol
lret
dec
pop
dec
fs
sub
cltd
cld
inc
std
jns
jle
stos
cltd
cmp
inc
int
test
jno
bnd
sbb
inc
icebp
adc
movsb
mov
cmpsl
loope
cltd
enter
idivb
sti
cltd
in
mov
inc
ds
test
and
sub
xchg
sub
test
cmp
dec
mov
inc
cltd
pop
mov
sahf
sub
pop
out
push
push
pop
sbb
or
cmp
shll
ret
cltd
xchg
adc
negb
movl
add
bound
aad
sub
loopne
in
stc
inc
cltd
int3
mov
xchg
adc
and
mov
cwtl
repz
and
fmuls
pop
test
add
mov
ret
daa
cltd
cmp
jge
stos
mov
aad
push
les
int3
adc
add
pop
sbb
imul
and
mov
popa
mov
xor
loop
iret
lds
pop
sahf
std
fwait
cltd
lods
mov
mov
sbb
popa
jnp
dec
fstpl
ss
jmp
cmp
pop
jg
mov
movsl
mov
cmp
sbb
push
mov
js
sub
gs
lcall
cltd
pop
repnz
aad
xchg
pusha
cltd
cmp
cwtl
adc
mov
cmp
sub
xchg
jbe
addl
aam
dec
in
cltd
jl
xor
lds
ret
popf
pop
dec
mov
hlt
mov
mov
sub
mov
xchg
and
sub
xchg
adc
mov
pop
mov
cltd
aas
dec
cmp
cltd
push
movsb
loopne
dec
fwait
add
push
leave
push
jno
mov
or
xchg
jle
ja
xor
lods
decl
adc
adc
loopne
dec
icebp
xchg
push
lds
cmp
add
dec
das
jle
cmc
jmp
push
cli
ret
je
sbb
cmp
incl
sub
into
pop
cmpsl
dec
shr
xlat
popf
leave
aam
int
cli
test
jp
sub
adc
cmp
out
ljmp
adc
pushf
call
lods
jmp
jns
pop
mov
push
out
adc
sub
loopne
mov
jmp
lea
testl
cmc
xchg
icebp
and
cltd
mov
jmp
push
fdiv
mov
pop
xchg
xlat
adc
sbbb
lods
sub
mov
and
push
loope
cmpsl
loopne
xchg
xor
outsl
int
mov
jmp
in
inc
mov
mov
push
or
jge
adc
lahf
mov
jmp
enter
pushf
repz
sub
pop
jno
loop
xchg
loop
mov
xchg
gs
sti
adc
aam
push
xchg
lret
out
push
test
or
xchg
and
stos
iret
dec
cmp
cwtl
jg
jmp
dec
xchg
sbb
push
pop
neg
add
lahf
jmp
bound
aad
push
sub
pop
inc
sbb
xor
in
ret
adc
lds
xchg
gs
jmp
cmp
cld
enter
hlt
sub
sub
mov
fisubl
mov
jmp
mov
mulb
shrb
jmp
shl
out
mov
fsubrl
jb
scas
inc
jmp
mov
or
mov
mov
dec
or
mov
lds
out
int
jo
dec
cmpsl
es
cltd
and
pop
cltd
push
push
dec
into
in
and
cltd
inc
sbbl
sub
add
sub
mov
les
sbb
cwtl
daa
xchg
cmp
mov
movsw
insl
push
std
jl
and
cmp
xchg
xor
cltd
xchg
xchg
jne
jo
push
es
fadds
add
bound
popa
xchg
aas
cmp
jg
in
and
test
fistpl
dec
repnz
cltd
mov
and
jmp
js
loopne
insb
in
sti
imul
mov
movsl
pop
dec
fists
cltd
int3
je
test
xchg
mov
dec
pop
push
and
pop
pop
stos
adc
xor
cltd
inc
movsb
daa
lods
hlt
fwait
roll
nop
ret
pushl
scas
pop
dec
xchg
loope
mov
shll
and
pop
xor
fidivrl
push
mov
and
mov
jecxz
in
mov
push
cmp
lock
jl
adc
scas
add
cmp
test
inc
je
push
cltd
xor
pop
adc
cltd
xor
mov
fwait
inc
cmc
pop
or
lods
and
adc
addr16
aaa
cltd
push
mov
cltd
je
inc
ds
les
jmp
sbb
es
jo
pop
push
aam
dec
cmp
dec
mov
mov
sbb
push
mov
cltd
add
jb
je
add
ret
push
imul
fs
mov
xor
cltd
stc
das
bound
outsb
pop
cltd
loope
pop
push
cmp
mov
outsl
adc
pop
cmpsb
mov
in
mov
dec
loope
scas
shrb
inc
push
xchg
fldcw
std
push
dec
cltd
xor
loope
cld
mov
pop
push
pop
test
push
lret
int
jecxz
stos
mov
sahf
dec
int
jae
ss
idiv
inc
stc
or
lcall
xchg
pop
cmp
xor
cmc
mov
aad
mov
adc
int3
test
out
es
popa
clc
jae
dec
inc
shlb
jle
in
lcall
dec
or
mul
mov
mov
ja
test
lret
jmp
mov
sarb
inc
mov
fimuls
shl
mov
push
xchg
fcompl
in
arpl
pop
xor
jae
fildll
shrl
cli
lods
rcrb
outsl
mov
jne
jl
xor
jno
pop
xchg
scas
sbb
inc
aam
stos
scas
xor
mov
inc
fbstp
lods
mov
mov
imulb
aad
out
inc
sbb
movsb
dec
leave
xchg
js
dec
fstps
or
cmp
sub
inc
jmp
andl
adc
jne
ret
sub
out
notb
mov
and
les
test
es
sbb
inc
sub
shll
dec
xor
insb
sarb
aam
test
jbe
mov
cwtl
mov
mov
and
addr16
loopne
mov
jmp
push
pushf
cmp
arpl
cld
cmp
cmp
dec
adc
shrb
adc
mov
fwait
jle
ljmp
rclb
inc
mov
sbb
out
mov
cmpsb
or
and
pushw
and
jge
fidivs
popf
inc
xor
add
pop
shlb
je
popl
addr16
aaa
js
sub
rorb
mov
mov
cmpsb
jae
mov
cld
cmpsl
mov
sbb
aad
in
pop
stos
js
flds
jmp
sub
ja
test
call
lcall
mov
cmp
pop
push
mov
cltd
std
pop
mov
cmp
add
inc
fiaddl
or
dec
mov
shr
sbb
loopne
lret
lret
or
adc
mov
inc
cmp
sarb
mov
push
sub
or
dec
sbb
scas
push
dec
xchg
rcr
sbb
or
and
lret
push
pop
jo
arpl
mov
jae
jbe
shrb
lock
sub
xchg
les
xchg
outsb
sub
add
mov
lock
je
loop
movsb
insb
add
mov
add
sahf
lock
test
mov
jnp
popf
and
dec
ja
arpl
lahf
jp
sub
xchg
fildl
cmp
movsl
adc
addr16
and
mov
sub
out
aaa
jne
leave
jg
jmp
sub
adc
psrlq
push
ret
outsl
fdivs
lret
fwait
shl
mov
mov
adc
call
pop
mov
jno
mov
orl
nop
sbb
jnp
leave
stc
pop
push
int3
aas
fdivrs
sbb
push
aas
test
test
and
repz
fs
cwtl
adc
mov
nop
mov
pusha
push
lret
daa
jns
push
sub
stos
xchg
push
xchg
stos
sarl
or
pushf
outsb
dec
and
lock
dec
mov
mov
jns
pop
iret
add
lcall
es
mov
aaa
divb
xor
mov
sbb
and
xchg
xchg
pop
sbb
add
mov
pop
loope
outsb
inc
inc
push
arpl
test
es
jmp
cmp
jmp
pop
mov
lods
xchg
outsb
loope
mov
jl
fs
lock
xor
cld
dec
cmp
cltd
ret
das
pop
cmpb
fs
mov
or
add
icebp
popa
add
das
jmp
xchg
sbb
jmp
aad
dec
jmp
ljmp
lret
insl
adc
push
mov
sub
cmp
arpl
imul
fisubrl
mov
dec
dec
movsl
aas
xor
fwait
ret
mov
fnstenv
pop
and
fdivrl
sub
test
jmp
mov
mov
dec
out
xchg
daa
repz
pop
stos
push
dec
lret
push
dec
shrl
mov
push
add
xor
sbb
int3
xchg
test
ja
and
cmp
push
inc
pushf
std
loopne
addr16
jmp
add
testl
clc
xchg
call
cld
jecxz
adc
lock
insb
push
int3
dec
ficoml
inc
popa
fistl
insb
jle
jl
jl
xchg
sbb
dec
jmp
mov
dec
sub
mov
push
popf
rcr
mov
loopne
outsb
or
mov
add
xor
push
insb
cltd
lods
xor
dec
mov
cltd
outsl
popf
fiaddl
gs
add
cltd
inc
nopl
ds
pusha
adc
pop
mov
cltd
sub
std
fdivl
cltd
pop
pushf
mov
dec
mov
mov
inc
inc
sti
xor
or
mov
mov
lods
arpl
cltd
or
jo
cltd
mov
push
mov
clc
ss
pop
inc
lds
in
adc
cltd
fcmove
mov
fwait
cltd
int
jne
out
ds
push
cmpsl
clc
dec
sti
mov
dec
adc
in
cmp
movsl
mov
daa
pop
mov
movsl
addr16
scas
mov
and
mov
std
cltd
mov
mov
das
sub
adc
sbb
xor
xchg
cltd
lea
and
inc
cmc
mov
pushf
pop
dec
aam
pop
leave
adc
pop
pop
jno
jmp
out
fisubrs
add
jno
add
inc
iret
or
push
inc
rolb
popf
in
shlb
inc
push
stos
cltd
loop
xor
xor
in
fmuls
pop
mov
mov
outsb
cmp
jb
ljmp
sarb
lods
push
xor
sub
or
mov
jo
stos
pop
mov
popf
pop
xchg
mov
test
cmp
and
les
sub
pop
mov
push
pop
das
xchg
scas
cmpsl
mov
inc
filds
dec
les
lods
xor
xor
cld
push
adc
dec
cltd
sahf
shrl
mov
scas
lods
popf
std
fsubs
and
shl
insb
loop
push
inc
aad
loopne
xchg
sbb
sbb
push
imul
adc
dec
push
out
push
adc
pop
dec
cmpsl
push
bnd
inc
jae
and
loop
cwtl
xchg
mov
stos
sub
add
or
jo
xchg
les
test
out
out
and
jl
push
stos
jnp
mov
sub
bound
cmp
inc
adc
xlat
jmp
xor
sbb
int
cltd
inc
test
push
into
cltd
mov
mov
out
add
adc
jecxz
sti
and
sbb
dec
imul
or
xor
dec
push
inc
cltd
int
adc
fildl
loope
cltd
mov
test
sbbl
push
lods
mov
repnz
sar
mov
xchg
into
mov
jge
testb
clc
add
loopne
inc
iret
cmpsl
sarl
push
mov
mov
cltd
mov
mov
inc
cltd
xor
mov
cltd
xor
imul
inc
test
les
mov
movsl
stos
cltd
sbb
sbb
and
mov
pop
pop
jb
stc
ret
and
mov
loopne
popa
mov
pop
cltd
int
out
outsl
lds
adc
ja
cltd
ss
outsl
fcmovne
cltd
jge
mov
sbb
jg
inc
sbb
push
sbb
cli
sbb
xchg
jmp
pushf
in
pop
fxch
xchg
mov
sbb
adc
and
inc
cmpsl
mov
jne
je
cs
mov
mov
push
push
adc
cltd
sub
es
inc
xlat
adc
push
mov
pop
xchg
mov
call
cmc
scas
xchg
cmp
sub
cld
cltd
testb
scas
sbb
jmp
sahf
push
pop
push
sbbb
adc
lea
mov
js
in
xor
stc
mov
cmp
xchg
scas
loope
push
push
or
xchg
pop
push
outsl
insl
and
sbb
sti
adc
hlt
pop
icebp
push
test
or
xchg
mov
pusha
ret
push
and
fmull
cmp
sahf
pop
xor
aad
insb
test
sbb
and
jmp
test
pop
xor
sbb
fwait
and
mov
stos
aad
movsb
and
mov
cmpsl
or
xor
mov
idiv
scas
inc
ja
jns
movsl
out
cltd
cmp
mov
dec
imul
cltd
sbb
popa
jl
xchg
xor
rol
fistpl
adcl
push
outsb
fnstcw
stos
sub
mov
out
jnp
jne
jg
lret
je
dec
fwait
stos
out
cltd
push
cmpsl
pop
test
jle
pop
cltd
push
lcall
cltd
stos
push
add
popl
test
rclb
fwait
mov
lahf
andl
cltd
xchg
call
das
cltd
xchg
cltd
mov
push
sbb
pop
xlat
or
push
push
sbbb
movl
pop
inc
fists
cmp
lods
pop
scas
or
stc
cs
add
cltd
out
fsincos
jb
inc
out
pop
cltd
sbb
stos
cmpsl
out
jle
jo
xchg
mov
push
jl
cltd
lret
cmp
dec
sub
cmc
inc
pop
inc
orb
out
xor
rcll
test
cltd
fsubs
inc
cwtl
ss
jmp
scas
sahf
inc
adc
js
mov
sub
cmp
cmp
aas
insl
xorl
in
sbb
mov
in
cmp
rcrl
out
cltd
in
xchg
sbb
enter
inc
cli
aaa
xor
les
sbb
arpl
jg
jo
cltd
test
jp
sbb
jbe
dec
sub
stos
mov
divb
mov
pop
movsl
mov
adc
clc
mov
cltd
int3
adc
push
dec
fnstenv
cltd
sti
lahf
imul
cltd
cmpsb
or
add
mov
cli
jns
cwtl
ja
mov
das
cld
sti
sub
xorb
inc
push
or
cli
mov
jb
cmp
mov
shrl
subb
cmp
in
mov
cltd
insl
daa
adc
stos
sub
js
mov
enter
push
mov
pop
ljmp
dec
mov
mov
pop
sub
adc
push
loop
fdivl
jl
xchg
scas
pusha
xor
fiaddl
stc
cltd
and
lods
add
enter
sbb
add
repz
cmpsl
rclb
testl
fwait
push
xchg
and
sub
cltd
cmp
pushf
cltd
sub
jns
xor
xchg
add
cltd
lods
data16
add
andb
cltd
and
in
cwtl
aaa
or
and
mov
adc
push
add
insl
sti
adc
mov
aas
xor
je
mov
cltd
es
fimuls
jle
ljmp
scas
in
mov
cltd
fst
ret
adc
inc
lcall
fwait
and
in
xchg
mov
das
and
xchg
push
mov
jnp
mov
pushf
cltd
adc
xor
cltd
daa
lidtl
push
les
push
loopne
jmp
mov
push
popf
mov
xchg
clc
jle
outsb
in
mov
pop
adc
or
aaa
mul
or
xor
jmp
popa
int
out
outsl
insb
mov
ja
mov
push
aam
stos
jmp
popl
push
push
fnsave
and
cmpl
arpl
sub
xchg
bound
fldenv
ficompl
rol
repz
add
pop
ret
stos
xor
jo
push
mov
push
inc
inc
push
jnp
push
mov
sbb
loopne
mov
pop
push
cmp
jb
out
adc
and
call
inc
or
xor
js
stc
in
sbb
lds
rcrb
push
sub
jbe
add
sub
push
xchg
shr
popa
mov
jae
popf
pop
jmp
in
clc
sbb
jmp
int3
pop
stos
mov
jns
sub
inc
push
mov
pop
inc
aam
add
popa
lock
jmp
mov
call
mov
rorl
das
shll
sub
lret
unpckhps
hlt
ret
test
sub
outsl
subl
shl
pop
pusha
cs
loopne
leave
lds
scas
mov
cld
and
inc
movsb
movsl
lock
and
jmp
test
arpl
das
repnz
pop
leave
mov
inc
inc
inc
sub
ss
popf
test
jmp
cmp
mov
jb
pop
lods
lock
outsl
inc
into
dec
sahf
arpl
std
xchg
ljmp
loopne
jmp
lahf
or
js
pop
xchg
jo
stos
fisubs
pop
inc
mov
mov
fsubs
push
cmp
pop
in
call
cwtl
stos
jmp
cmc
cmp
xor
mov
fwait
xorl
nop
dec
mov
popf
jns
mov
jns
enter
sbb
mov
fs
loopne
inc
loope
cwtl
aad
inc
es
sahf
push
mov
ret
adc
outsb
fisttpll
stos
movsl
xchg
dec
js
aad
xchg
push
jg
or
jbe
mov
fwait
mov
test
insl
in
test
ret
xor
sub
mov
dec
xor
jne
lret
cwtl
mov
jmp
int3
movb
sub
cs
dec
les
pop
xchg
push
aam
jo
dec
pushw
aam
lock
shlb
jecxz
es
ficomps
adc
rcrb
push
lock
test
sub
xchg
std
popa
inc
xchg
mov
sub
mov
inc
adc
xchg
adc
lock
cmp
push
jmp
jmp
shrb
pushf
icebp
je
sarb
mov
rcrb
inc
loopne
sbb
cmp
cmc
pop
cmp
jae
sbb
xchg
out
or
xchg
jnp
cmp
sbb
test
in
mov
cmp
mov
jns
lock
push
add
call
push
mov
add
test
push
xchg
cmpsb
xchg
ret
std
stos
stos
cltd
cli
insb
mov
fwait
gs
sub
mov
or
daa
dec
push
ret
movsb
jecxz
ds
fimuls
iret
mov
cld
sub
in
ror
adc
push
and
hlt
test
mov
jae
sub
insl
cmpsb
mov
mov
pusha
inc
pop
jmp
push
cmc
insl
lret
mov
inc
sub
outsl
and
mulb
jmp
sub
stos
lods
mov
and
xchg
jmp
mov
shll
mov
mov
sub
push
dec
and
mov
fdivr
shrl
pop
mov
cmp
stc
arpl
insl
and
mov
jae
out
cwtl
lock
fsub
push
jge
lods
add
bound
cmp
or
sarl
mov
pusha
sbb
xor
fcompl
into
ret
out
int
xor
cmp
into
and
push
lret
pop
aam
cltd
pop
aas
and
xchg
xchg
test
sbb
jne
fld
or
gs
nop
jp
pop
arpl
push
ret
arpl
sub
inc
lock
mov
xchg
ficoml
inc
test
iret
or
mov
xchg
pop
mov
jmp
pop
or
mov
ja
adc
jae
xchg
mov
mov
adc
jmp
inc
pop
cmp
push
jge
and
int3
js,pn
xor
adcb
out
mov
fnstenv
xor
subb
dec
inc
xor
mov
insl
push
cmp
push
xor
stc
xchg
shll
adc
leave
jl
push
ficoml
hlt
adc
sbb
int3
xchg
fisubs
out
inc
mov
jmp
push
fcoms
cli
ret
inc
js
inc
cmp
mov
mov
inc
sbb
dec
test
jae
ficomps
hlt
jns
push
adc
push
push
dec
stos
mov
jmp
cmp
ret
stos
in
adc
divl
gs
jmp
insl
sbb
xor
lods
sbb
adc
addl
mov
xor
cmp
rclb
xchg
push
outsb
cwtl
aaa
dec
push
mov
mov
and
dec
mov
add
xchg
push
and
es
mov
clc
pop
xchg
mov
leave
or
bound
pop
cmpsb
scas
rcll
or
xor
cmp
imul
jo
inc
cli
insb
loop
inc
mov
cmp
cmpsl
sbb
pop
mov
push
loopne
mov
in
stos
mov
inc
cmpsb
sarb
mov
arpl
pushf
jmp
adc
lret
int
fwait
mov
sbb
sbb
lret
inc
pushf
mov
aam
and
inc
mov
xlat
mov
sbb
je
test
xchg
push
cmpsl
enter
jle
dec
jmp
mov
nop
adc
xchg
jmp
insb
out
jb
orb
into
push
cmpsb
adc
js
sbb
ja
ret
ret
leave
insb
inc
add
and
mov
dec
aam
push
xor
clc
xlat
fwait
mov
stc
sbb
mov
xchg
mov
aaa
mov
je
imul
mov
jg
in
arpl
mov
jecxz
jle
pop
mov
arpl
jmp
add
call
or
and
fistpll
sub
dec
jne
pop
fs
sbb
lock
std
add
into
xchg
addr16
or
mov
push
fdivp
rcr
in
inc
rcrb
adc
fadds
fldl
mov
fprem1
mov
lods
adc
cmpsb
mov
jae
jnp
imul
pushf
subl
rcl
imul
push
xor
mov
jns
mov
jb
add
fwait
mov
js
stos
in
mov
out
mov
pop
not
sub
xor
shrl
mov
mov
push
or
aas
cmp
jp
adc
pusha
ret
out
pop
and
or
sub
jo
inc
jae
xchg
shll
enter
iret
mov
insb
repz
sbb
xorl
xchg
imul
nop
push
faddl
ret
sbb
out
inc
outsl
jae
or
out
jae
sti
mov
outsb
mov
mov
xchg
mov
ss
jnp
adc
jae
cmp
pop
jmp
lret
imul
push
sub
jae
mov
popa
loopne
fs
outsl
arpl
imul
push
les
in
mov
pusha
pop
insl
sub
mov
addr16
into
jns
out
pop
bound
xchg
cmp
jl
leave
and
ljmp
icebp
ret
sbb
clc
mul
dec
inc
gs
push
mov
lock
cmp
cmp
sub
sti
aas
push
sub
xor
pop
aam
movsl
test
xchg
sub
add
push
sbb
sbb
adc
idivb
imul
or
shlb
sub
mov
or
mov
mov
and
mov
fbld
popa
adcl
cmpsb
jmp
mov
dec
mov
test
shrb
outsl
mov
loopne
xor
lock
dec
imul
ret
sbb
stos
lods
inc
mov
xchg
loopne
lods
arpl
fisttps
cmpsl
mov
int3
adc
enter
outsl
jno
adc
adc
cmpsl
sub
or
outsl
sub
ss
movsl
jecxz
in
stos
pushf
mov
dec
sbb
fxch
xor
pop
mov
mov
and
sti
pop
popa
dec
inc
fwait
insb
and
sahf
imul
jns
dec
xor
mov
lds
mov
mov
mov
add
add
push
outsl
filds
jbe
push
jns
loope
idivl
cltd
mov
rcrb
jge
adcb
sub
pop
movsl
inc
mov
js
cmp
lds
rcr
and
dec
stos
sbb
mov
gs
clc
and
rcrl
or
ret
cmpsl
sti
jmp
aaa
jmp
mov
mov
loopne
xor
out
pop
lods
jmp
lods
shl
sti
inc
cmp
mov
mov
les
sbb
inc
mov
add
mov
inc
jp
dec
sbb
leave
loopne
mov
pop
sub
call
inc
mov
jg
push
sub
shrl
lds
jle
mov
je
mov
cmp
or
repnz
stc
fistps
mov
shr
lods
jae
cmp
popa
popa
rolb
push
mov
jmp
test
fidivrs
int3
sub
call
notrack
popa
movsl
shl
xchg
loope
xorb
mov
mov
jo
mov
pop
bound
mov
aam
cs
cltd
ret
xor
jmp
cltd
sbb
popf
inc
scas
xchg
leave
push
push
ss
outsl
idivb
cltd
push
dec
in
add
adc
and
movsb
dec
push
cltd
mov
call
add
mov
jns
popa
shrb
cltd
adc
rol
jae
mov
pop
cltd
jmp
ds
lods
lcall
cmp
fistpl
sarl
sahf
sbb
jo
or
jae
add
adcl
and
fistpl
dec
push
sub
lods
sbb
mov
loopne
adc
sbb
das
fnstcw
test
cmp
ror
or
leave
xchg
pop
sti
mov
hlt
xor
and
or
ret
inc
pop
sti
fcompl
sub
jnp
cltd
mov
jg
xor
and
dec
fwait
int3
pop
xchg
mov
add
xor
xchg
cmp
adc
loopne
add
xor
ds
test
scas
mov
jne
cwtl
push
rorb
and
fcompl
fadds
scas
xchg
lock
int
sbb
mov
pop
sbb
loop
push
sti
cmp
nop
or
ficoml
mov
lret
xor
dec
cltd
fnclex
and
xchg
adc
add
pop
cld
lods
push
jge
test
imull
cltd
push
enter
lods
loop
cmp
sub
cltd
sub
jno
fld
lds
lret
adc
cltd
add
fcmove
dec
outsl
dec
fwait
mov
mov
repz
les
sub
fcomps
icebp
popf
and
jmp
jbe
pop
fldl
pop
dec
cltd
mov
xor
testb
sbb
filds
mov
out
cltd
mov
ja
xchg
xor
cltd
loop
fisttpl
xchg
loope
scas
inc
xor
cwtl
mov
sbb
cld
cltd
dec
arpl
add
and
lret
imull
addr16
inc
lret
xor
cmp
mov
cltd
mov
cld
sub
in
lret
mov
fildl
sar
xchg
pop
lock
cltd
int
test
outsl
cltd
dec
add
negl
jb
mov
cltd
jns
inc
rclb
inc
in
push
and
gs
jbe
push
ret
push
adc
cmc
pop
dec
mov
in
pop
cltd
mov
xchg
fistps
ljmp
xchg
cltd
inc
pop
xchg
pop
dec
cli
mov
pushf
dec
pop
scas
mov
xor
push
pop
cmp
or
or
jo
sbb
mov
fisubs
enter
inc
cltd
mov
es
pop
mov
adc
jl
dec
mov
dec
movsl
push
stc
cmp
insl
inc
test
sub
jae
sub
arpl
xor
rolb
addr16
mov
das
enter
mov
jmp
jbe
jmp
scas
flds
mov
jmp
inc
fcoms
pop
sub
or
arpl
out
or
mov
xchg
dec
test
out
daa
dec
fwait
push
pop
xchg
inc
loopne
adc
xor
loope
fsubrl
dec
iret
pop
and
or
push
jmp
in
test
adcl
add
nop
add
push
fwait
cli
fcoml
xchg
sub
adc
xor
insb
frstor
lea
lods
bnd
into
xchg
lea
push
dec
or
in
or
scas
lock
add
outsb
lds
lock
sti
mov
xor
sarl
test
jle
mov
push
js
xor
mov
or
mov
pop
or
int
cmp
mov
je
xchg
jno
push
outsl
ret
or
cmp
or
jae
push
lds
xchg
dec
mov
pop
mov
jbe
xor
bound
jae
inc
enter
or
test
dec
sbbb
xchg
mov
mov
mov
test
sti
pop
aaa
in
outsl
inc
inc
orb
lcall
mov
xor
lret
stos
enter
mov
int3
xchg
fdivr
mov
cmpsb
sub
adc
cltd
cmp
shlb
push
fdivrl
pop
incl
xlat
dec
inc
shr
sbb
push
dec
add
dec
jmp
jae
add
push
les
cmpsl
popf
lock
insl
xlat
es
iret
lock
push
mov
push
stos
push
aam
aam
inc
pop
xchg
inc
shll
sub
das
cmc
mov
test
es
fwait
cli
outsl
jae
adc
pop
inc
popf
outsl
jbe
mov
add
scas
incb
push
int3
arpl
movsb
mov
jmp
loope
fisubrs
ffree
and
pop
pop
lods
xor
xchg
loopne
xchg
xchg
dec
pop
stos
int
xor
sub
ret
sbb
shl
mov
ljmp
dec
mov
adc
pop
hlt
sbb
jbe
fbstp
mov
jmp
out
lock
xchg
push
push
xlat
loopne
ret
test
jp
dec
clc
rcll
data16
popa
fbld
jnp
mov
imull
test
test
mov
lahf
cmp
in
aas
dec
pop
push
lea
lock
inc
xlat
sub
mov
jmp
stos
pop
ds
pusha
test
xor
sbbb
push
fwait
insb
inc
sbb
xchg
sbbb
incl
jb
cmp
insb
and
sub
fistps
iret
inc
and
or
push
jmp
movq
sub
incb
lea
cmp
loopne
gs
ret
cltd
xchg
cmp
pop
mov
push
popf
mov
ljmp
inc
push
dec
out
in
jb
dec
cltd
cld
adc
dec
cltd
xchg
mov
or
mov
ljmp
repnz
in
cltd
cmp
sub
push
cmpsl
sub
or
loope
fs
cmp
push
inc
out
cltd
scas
xchg
aam
cs
loope
sub
mov
icebp
cmp
ret
mov
nop
es
je
out
push
mov
in
add
jbe
mov
cltd
icebp
cmp
cld
rclb
fwait
dec
sbb
jmp
cltd
fnstsw
daa
in
sub
push
cmp
sub
insb
call
jle
arpl
mov
mov
mov
daa
js
dec
push
push
xor
mov
mov
jle
cmpsb
inc
popf
dec
and
fwait
gs
mov
push
loope
insb
push
scas
hlt
in
sbb
sarl
inc
sbb
sbb
imul
addr16
and
out
inc
pop
insl
push
push
mov
add
push
inc
xor
jl
mov
mov
stos
xchg
pop
cli
xchg
fbstp
pop
cltd
inc
mov
cmp
cltd
push
subl
or
push
and
inc
sbb
add
fwait
mov
pop
cmpsb
std
gs
movsl
cltd
mov
mov
cmp
std
into
sub
xchg
fwait
add
inc
rcll
jmp
je
xchg
sbb
pop
xor
cmpsb
push
pop
fcomp
loope
sti
mov
mov
jp
cltd
into
leave
mov
push
mov
mov
cwtl
lock
lods
adc
cltd
xor
pop
mov
movsb
adc
in
sub
mov
pop
add
and
lret
mov
mov
dec
cltd
dec
lea
icebp
movsl
fwait
rcrb
cmp
outsl
test
rcrl
and
xchg
dec
sub
and
cltd
jg
lcall
push
dec
jmp
inc
lcall
push
inc
mov
pop
add
movsl
test
xchg
mov
jno
and
jmp
mov
and
pushf
lret
push
adc
and
jge
cli
cltd
mov
in
stos
repnz
sub
icebp
cwtl
cmpsl
fwait
pushf
es
mov
pop
aas
shll
stos
pusha
adc
imul
out
add
sub
mov
test
cltd
cmp
scas
sub
fwait
ret
popa
jp
imul
pop
pusha
mov
cmp
out
mov
aas
int
mov
pop
jae
add
add
xchg
inc
mov
shrl
rcl
out
loopne
pushf
mov
and
jmp
enter
mov
jnp
cltd
outsb
dec
das
rol
pop
mov
lahf
dec
jno
dec
cltd
aad
lcall
inc
das
mov
xchg
cld
dec
mov
mov
or
mov
adc
fidivrl
adc
inc
mov
push
fld
or
xchg
sbb
ja
fmuls
pop
scas
pop
imul
jb
mov
pop
dec
push
into
mov
mov
and
cltd
cmpsl
mov
mov
or
pop
cltd
dec
aas
sub
iret
cmpsb
xchg
lret
cltd
sub
mov
push
add
cltd
ret
popa
aas
push
fwait
push
sahf
pop
loope
xchg
sarl
movsl
cltd
in
sbb
js
lea
mov
sbb
jo
cltd
push
xchg
dec
adc
dec
push
test
js
loopne
mov
mov
dec
cs
or
scas
xor
rolb
icebp
jnp
push
out
lret
sahf
push
jg
jge
std
rorl
iret
les
rcr
scas
cmpsl
fs
sub
push
mov
daa
cltd
mov
jo
inc
repz
fwait
inc
cmp
jns
call
arpl
adc
imul
out
lahf
cwtl
mov
outsb
dec
mov
jmp
cltd
les
jle
jae
int3
insl
or
cltd
pop
cmp
pop
push
mov
pusha
lcall
popa
mov
imul
nop
das
cltd
pop
xor
faddl
ja
jns
stc
test
adc
pop
in
flds
adc
out
xlat
cli
jmp
insl
inc
dec
popa
xor
icebp
jns
shlb
fwait
cltd
jae
mov
dec
push
aas
jp
mov
rclb
js
cltd
fistps
addr16
xor
cltd
test
loop
je
inc
cltd
cmp
inc
loope
xlat
mov
xor
push
xchg
adc
mov
ret
les
mov
mov
call
push
sbb
jge
xchg
push
int3
cwtl
sub
iret
mov
adc
sbb
in
cltd
xlat
adc
test
shll
jnp
pop
inc
ss
adc
cltd
push
test
stc
push
adc
mov
adc
clc
sti
fwait
push
jmp
inc
sub
pusha
xchg
adc
dec
push
aaa
sbb
mov
sbb
xor
ja
or
lds
scas
adc
jge
ret
jmp
or
jne
or
scas
mov
iret
fdivrs
lods
scas
loop
jo
mov
or
int3
pop
jge
jmp
dec
sub
sar
sub
cwtl
popf
mov
push
cltd
mov
ja
ret
pop
nop
popa
sbb
outsb
sahf
loop
call
mov
mov
cltd
out
jmp
inc
or
mov
sahf
jb
inc
sbb
loope
popf
cltd
negb
repnz
sarl
cmp
sbb
insb
dec
jecxz
movsl
xor
popf
into
jge,pn
insl
xor
xchg
jmp
or
jae
loopne
adc
cs
test
subb
push
mov
add
or
xchg
out
xchg
adc
inc
push
movsb
das
cmpb
xorl
mov
pop
pushf
mov
pop
js
imul
inc
andb
xchg
fidivs
fldt
pop
jbe
test
mov
imul
test
add
dec
mov
bound
icebp
jge
lods
and
xor
test
imul
dec
mov
adc
jae
xor
mov
sbb
stc
subb
inc
data16
xchg
cltd
imul
scas
cltd
and
push
addr16
push
cltd
and
sub
ss
enter
push
pop
ds
scas
ljmp
enter
sbb
lds
pop
insl
pop
and
dec
cltd
or
es
movsb
mov
mov
sub
iret
cmpsl
scas
inc
mov
pop
lds
sbb
cs
cltd
fdivrs
lret
arpl
add
sbb
lret
mov
sub
sarb
and
sub
outsl
jmp
mov
jge
rcl
cwtd
adc
pop
out
dec
jp
fwait
xchg
mov
add
mov
push
insb
cmp
aaa
fstpl
jmp
inc
dec
cltd
mov
add
adcb
jecxz
cmp
je
mov
pop
and
arpl
fcompp
pop
lret
mov
jbe
leave
xor
sbb
lret
add
push
xchg
movsb
loopnew
loopne
sub
testl
cltd
hlt
xchg
out
mov
call
cltd
adcl
inc
out
lock
pop
cltd
pop
pop
sbb
sbbl
cltd
or
sub
push
repnz
pop
in
inc
outsb
jg
cltd
scas
fimuls
test
mov
dec
aas
ss
sbb
push
jne
stc
fwait
mov
adc
cwtl
sti
mov
imulb
fwait
stos
fldt
scas
pop
xchg
add
jns
repnz
lret
jae
cli
shll
mov
cmc
cltd
or
dec
jp
inc
rclb
jo
mov
jmp
clc
andl
sbb
push
mov
xchg
fwait
int3
xor
movsl
push
test
cmp
enter
lret
inc
mov
jbe
mov
testl
mov
mov
inc
sarb
add
rcrl
pop
push
inc
test
jb
outsb
sbb
in
add
insl
jle
mov
cltd
aam
inc
mov
push
add
mov
ficompl
pop
jnp
loopne
fistps
push
pop
outsl
inc
adc
mov
mov
xchg
shll
and
loope
or
pop
mov
cmpsl
into
shl
xchg
fsubrl
dec
lock
sti
dec
cld
out
cltd
inc
xor
mov
add
sbb
popa
dec
mov
sbb
jns
orl
daa
cltd
pop
scas
mov
xchg
movsb
and
mov
sub
cltd
xor
dec
lods
mov
xchg
aam
cs
out
fsubr
sbb
sub
cld
in
cld
dec
cmpsb
or
mov
mov
inc
xchg
mov
push
js
sarl
or
adcl
xchg
fstps
mov
jmp
xor
fsts
pop
dec
dec
cltd
into
ficoms
pushf
aam
sub
ljmp
add
mov
cld
shlb
jl
xor
pop
cltd
in
pop
int
mov
insb
mov
and
jne
mov
cmp
jns
enter
xor
ljmp
mov
sbb
fisubrs
pop
mov
hlt
sub
mov
fldcw
push
add
adc
movsb
bound
rcrb
cltd
jmp
add
adc
or
inc
cltd
pop
mov
dec
cmp
test
pop
cmp
mov
cltd
push
push
pop
shrl
imul
aam
repz
stos
jmp
fs
and
imul
jns
or
inc
or
outsl
jmp
cltd
movsl
xchg
dec
cmp
lahf
outsl
mov
lahf
push
sahf
fwait
enter
xchg
lahf
ret
idiv
pop
repz
jns
stos
inc
pop
or
jmp
sbb
adcl
int3
adc
cmc
jmp
out
ret
push
mov
pop
xchg
and
sub
sbbb
xchg
lahf
sub
mov
movsb
or
dec
adc
add
sarb
test
sbb
mov
stc
jbe
inc
sub
repz
mov
jmp
lock
es
pop
mov
mov
test
mov
dec
test
jmp
std
mov
lahf
lods
fdivrl
mov
loopne
clc
dec
jne
jecxz
ffree
dec
sub
jg
and
push
inc
je
lahf
jo
pop
stos
lahf
xchg
jl
xchg
insb
lods
cmp
je
cmp
data16
xor
or
mov
fidivl
ja
aam
mov
shll
test
js
dec
les
aaa
adc
mov
das
fists
lock
mov
or
xor
or
pop
fdivl
loopne
icebp
and
popf
mov
ret
inc
dec
jne
adc
or
jns
jmp
jno
mov
stos
and
sbb
jmp
movsb
in
fneni(8087
ficoms
add
or
adc
and
jmp
mov
adc
lret
pop
not
scas
inc
jns
jge
ret
je
loopne
mov
es
movsb
sti
xchg
test
out
xor
jmp
mov
adc
sahf
push
inc
icebp
lahf
add
jge
jae
into
mov
aad
dec
jmp
gs
sub
push
jns
stos
popf
loopne
inc
ds
sbb
xor
dec
add
cmp
adc
xchg
sbb
jne
sbb
testb
push
sarl
mov
mov
jne
adc
mov
inc
stos
push
test
addr16
subl
rclb
rclb
push
clc
mov
mov
ljmp
ficomps
jmp
push
scas
cmp
xchg
mov
fdivrs
mov
fmul
loopne
psubw
dec
rorb
lret
fwait
dec
mov
adc
cmp
adc
mov
test
cmp
cmpsb
pop
jmp
jecxz
sub
test
push
je
dec
jmp
popf
jmp
aaa
xchg
pusha
xor
jae
stc
inc
inc
xchg
dec
mov
jmp
pop
lahf
shr
lock
dec
and
mov
sbb
jae
mov
mov
sbb
mov
or
push
ficomps
add
push
jmp
nop
mov
aaa
sbbb
jle
and
and
js
test
je
jmp
pop
mov
sub
push
jg
shl
mov
inc
insb
stos
push
jge
and
out
nop
jmp
pop
jmp
mov
pop
jmp
inc
pop
aam
xor
jnp
shlb
lock
enter
loopne
ret
pop
mov
jmp
rolb
mov
or
aam
rcr
xchg
jmp
mov
dec
push
pop
adc
arpl
sbb
pop
push
and
pop
mov
jmp
sub
jo
rorl
ffreep
mov
mov
in
mov
cs
pop
cltd
push
sbb
mov
dec
or
mov
sbb
sbb
call
mov
and
xor
cmp
and
dec
dec
inc
sub
inc
or
fwait
lcall
pop
mov
outsl
pop
and
inc
push
mov
xlat
dec
mov
inc
or
mov
fs
jb
xor
sbb
hlt
shl
push
out
sub
mov
in
jae
call
mov
mov
test
aas
inc
mov
popa
mov
pop
int
ret
mov
xor
inc
xchg
lods
aas
sub
jmp
dec
shlb
lock
xlat
jbe
inc
jmp
movsb
and
sbb
les
imul
cmp
out
mov
dec
mov
ret
dec
push
pop
in
mov
pop
push
leave
and
and
cs
in
scas
movsl
push
and
lahf
or
hlt
cmpsb
imul
fwait
jle
push
mov
adc
xchg
inc
in
mov
repnz
and
and
sub
pop
mov
xchg
sbb
das
push
mov
fbld
mov
stc
pushf
int3
jns
mov
dec
scas
negl
jmp
and
jo
mov
ret
dec
lods
into
cmp
jg
mov
js
sub
push
into
in
jle
stos
arpl
cld
les
cwtl
js
cld
mov
sub
xchg
push
mov
mov
loop
std
mov
and
sub
test
data16
xchg
add
and
pop
xchg
cmp
lods
insb
in
aam
cmp
sub
inc
sub
mov
imul
fwait
jp
inc
cmp
fwait
xor
mov
dec
loopne
xchg
jecxz
test
inc
mov
insb
mov
lds
push
mov
add
cmpb
jmp
xlat
nop
xor
jmp
arpl
repz
dec
pop
jge
aam
push
mov
pop
inc
push
jae
ja
push
or
pop
shl
adc
lahf
jge
imul
shl
pusha
xchg
cmp
cmp
pop
mov
pop
into
cmp
lds
jbe
and
sbbl
mov
xchg
lcall
and
jmp
adc
sbb
mov
insb
dec
fwait
jno
mov
push
jb
call
cmc
sub
in
aaa
and
stos
mov
dec
jns
iret
jp
xor
push
mov
add
loopne
lock
adc
pop
in
mov
push
lea
jmp
arpl
xchg
pop
cwtl
jmp
add
lock
and
sub
out
imul
sahf
out
jg
cwtl
bound
imul
cltd
mov
ds
push
jmp
adc
filds
mov
ret
jmp
jg
stos
xchg
ds
jbe
sub
rorb
data16
sbb
pop
pop
or
negb
push
sbb
xchg
fdivrs
loopne
dec
fistl
outsl
mov
rcrl
sbbb
test
movsl
cltd
add
cmpl
push
enter
xorb
mov
cltd
aad
rcr
adc
xor
mov
jb
pop
cltd
ss
outsl
lret
add
test
or
inc
xchg
cltd
repnz
sbb
adc
mov
stc
js
jg
hlt
stos
xlat
mov
mov
out
cltd
mov
sub
dec
cmpsl
js
jmp
xchg
adc
mov
or
pop
bound
and
cltd
mov
cmp
mov
in
lcall
push
sbb
stc
mov
mov
cltd
test
les
add
cltd
mov
jmp
pop
pop
xchg
or
push
dec
lods
push
data16
stos
imul
sub
pop
jge
sbb
aam
or
and
add
sub
cmp
pop
lods
ja
sahf
aad
cltd
or
sbb
cltd
sti
xlat
jno
es
insl
add
cltd
sub
xchg
xchg
inc
scas
negl
int3
imul
imul
ret
iret
sahf
outsl
or
and
lret
je
addr16
sahf
adc
andb
cltd
push
adc
dec
hlt
and
loope
ja
scas
ljmp
sbb
jecxz
cwtl
pop
test
lds
std
sarb
scas
adc
insb
daa
jge
mov
roll
pop
out
shlb
mov
cltd
stc
popf
in
int3
push
stos
mov
scas
in
shll
mov
movsl
sti
and
push
push
sub
stos
jo
and
cltd
stos
sbb
sub
xchg
or
imul
arpl
xchg
adc
or
iret
or
out
cltd
cld
xchg
inc
xor
cmpsb
adc
jl
mov
repnz
dec
inc
add
push
ffree
sahf
mov
test
push
mov
scas
sahf
mov
jb
in
testl
or
inc
xchg
xor
pop
lahf
jl
push
mov
outsl
cltd
jp
cli
outsb
pushf
or
jns
pop
pop
or
repz
imul
mov
mov
push
cltd
in
jle
sub
mov
stc
pop
pop
stos
lcall
bound
lret
sub
arpl
cmp
mov
and
pusha
mov
repnz
sbb
pop
stc
push
inc
fisttpl
cltd
out
popaw
out
inc
daa
or
adc
lea
mov
cmp
jle
cmp
test
repz
push
aad
or
mov
inc
cltd
xchg
mov
out
dec
add
fs
call
adc
ret
cwtl
aaa
fnstenv
sub
cmpsl
shlb
inc
hlt
cmp
cltd
pop
mov
lock
lahf
insl
pop
or
xchg
cltd
imul
adc
fidivs
int3
hlt
cmp
rcl
push
loop
sti
and
insb
mov
add
cli
jge
mov
movsl
xchg
std
cwtl
std
movsl
sbb
cmpl
rolb
cmp
sbb
scas
out
push
flds
cwtl
popf
cmpsl
mov
pop
xsaveopt
mov
dec
push
bnd
and
clc
fwait
sub
int
fwait
push
adcl
jmp
dec
mov
jmp
jo
push
lahf
push
pop
push
repnz
add
mov
xor
pop
sbb
inc
mov
test
sbb
into
adc
pop
jmp
int
dec
or
lds
cli
jmp
inc
mov
arpl
std
cmp
mov
loope
and
mov
and
sbb
jo
dec
loopne
dec
daa
dec
pop
lahf
adc
mulb
pop
adc
inc
inc
sbb
repz
mov
loop
movsb
xorb
push
mov
dec
ret
sbb
mov
movsl
andl
stos
ret
mov
bound
shlb
ljmp
ror
std
jnp
mov
test
pusha
aam
inc
xchg
adc
jmp
jp
jns
popf
jns
mov
sub
jmp
and
loope
rolb
inc
jle
les
in
mov
xchg
xchg
ljmp
dec
pop
pop
mov
shr
xchg
push
lea
orl
lret
les
mov
aas
mov
jmp
clc
pop
xchg
mov
cwtl
andl
pop
or
inc
xor
movsl
in
mov
popf
sahf
dec
xlat
addl
cmp
cld
aad
popa
jne
mov
and
add
ror
data16
jmp
in
popa
popf
mov
cmc
js
sub
adc
stos
js
cmp
cmp
jns
push
sti
fwait
sbb
daa
test
popl
and
and
lcall
xchg
or
xchg
inc
pop
int3
into
fdivs
cmp
jmp
std
and
jecxz
mov
inc
addl
popa
pop
push
scas
das
and
jmp
jmp
mov
outsb
mov
sarb
pop
lcall
adc
leave
ljmp
sub
loopne
xor
mov
inc
mov
jnp
mov
gs
xchg
xor
sbb
sbb
lcall
cltd
xchg
les
fcmovnu
into
cwtl
in
pushf
mov
xor
or
mov
dec
movsl
int3
in
xchg
mov
pop
push
movsb
into
call
loope
fwait
push
xchg
daa
cli
ljmp
mov
xor
sub
dec
mov
cltd
faddl
lea
fldcw
inc
rclb
cmp
mov
mov
dec
cltd
mov
jb
js
cmp
clc
xchg
fs
in
adc
and
mov
imul
sbb
jmp
popa
push
mov
or
clc
cltd
mov
out
xchg
cltd
test
push
xor
mov
or
stc
mov
sub
pop
sbb
pop
mov
in
stos
aaa
push
addl
ret
mov
cmpsl
fcoml
insl
mov
shrl
push
ja
push
call
lock
int3
jne
and
popf
add
addr16
cltd
int
roll
sub
cmp
push
outsl
scas
iret
cmpl
mov
push
adc
cltd
add
adc
adc
outsb
mov
nop
fistpl
dec
cwtl
outsl
push
cltd
clc
mov
fsincos
bound
mov
movsl
dec
push
sbb
xor
xchg
xchg
adcl
mov
cltd
ss
enter
mov
push
ljmp
cli
pop
adc
xor
mov
in
fwait
pop
or
sub
es
stos
loope
mov
cltd
loopne
in
push
sbb
aam
push
scas
dec
push
cmpsl
lea
xchg
jae
inc
leave
imul
subb
fnstcw
sub
inc
mov
jg
cltd
cmp
jns
or
jge
rcrb
jecxz
stc
cs
cmp
cltd
sub
popa
fwait
ds
adc
ss
sahf
je
adc
sbb
pop
shlb
or
cmpl
cmp
push
mov
add
push
adc
lahf
add
fwait
add
adc
cltd
outsl
subb
cltd
lods
mov
dec
popf
mov
or
roll
sbb
lret
sbb
jp
ja
inc
daa
or
cltd
popf
xor
mov
jb
cltd
mov
or
sbb
jp
xchg
lret
add
mov
push
ss
gs
push
sbb
cltd
push
xor
cltd
hlt
int
xchg
dec
jb
cmpsl
mov
dec
mov
addl
scas
sbb
in
orb
popa
sbb
loopne
rcrl
clc
fnstenv
icebp
negb
inc
cli
out
repz
pushf
adc
sbb
js
jne
int
mov
cmp
adc
cltd
jnp
dec
arpl
ss
mov
loope
xchg
cmp
lcall
aad
cmpsl
popa
xchg
fcom
xor
mov
push
addl
flds
call
pop
push
movsl
dec
fstpl
and
cltd
daa
pop
das
dec
xchg
clc
push
lret
inc
movsl
push
fwait
stos
mov
rcl
cltd
push
fnsave
mov
std
data16
jne
inc
xchg
nop
sub
jno
fstpl
xchg
fcompl
shll
mov
imul
pop
cltd
mov
repnz
sub
pop
cmpsb
gs
dec
mov
lods
and
xchg
dec
push
dec
cltd
cmpsb
aam
adc
mov
int
jg
jne
mov
xchg
in
jmp
pop
insb
insl
pop
add
out
inc
leave
adc
cltd
mov
int3
add
mov
and
adc
jno
sub
ret
and
fmul
inc
scas
loope
fldenv
imul
or
jb
call
mov
in
cltd
imul
cltd
es
mov
outsl
scas
push
movsl
dec
mov
jnp
sarb
push
dec
cltd
add
sbb
out
xchg
cmpsl
in
outsl
jmp
sar
icebp
cltd
into
jbe
hlt
popl
mov
and
inc
jno,pt
adc
lods
push
lret
add
daa
mov
andb
adcl
xor
jg
subb
rol
xchg
push
insl
imul
and
les
jae
cltd
mov
lea
cltd
mov
push
sbb
repz
mov
aam
mov
test
adc
in
fcmovu
cltd
fsubs
inc
stos
xchg
daa
fildl
xchg
cltd
adcb
mov
lods
sbb
jae
pop
mov
xchg
pop
mov
gs
or
ficomps
loopne
xor
dec
cs
push
xor
mov
and
leave
adc
or
xor
pushf
jmp
push
jae
cltd
cmp
movsl
je
lock
cmpsl
arpl
mov
loopne
outsb
jnp
adc
jge
dec
decl
xchg
jmp
pop
dec
jle
jno
mov
cltd
and
in
cltd
mov
sti
mov
cltd
enter
sahf
loopne
xchg
adc
scas
or
movsl
add
daa
pop
add
es
ja
mov
in
out
test
push
int3
aas
lds
int
sub
pop
into
dec
cmp
xor
mov
jmp
mov
in
mov
mov
fsts
adcb
stc
scas
fidivrl
nop
dec
xchg
sbb
enter
cltd
leave
lcall
cltd
addr16
mov
cltd
adc
push
mov
and
cltd
jnp
aas
and
pop
sub
cltd
cmp
daa
cmpsb
push
mov
jg
les
lods
xor
mov
mov
ja,pt
pop
sub
dec
mov
cltd
lods
pop
cmpsl
jns
and
cltd
or
stos
jno
cltd
xchg
pop
fisttpll
test
push
xor
pop
outsl
push
icebp
lret
decl
scas
jns
into
add
int
jle
shrb
xor
jno
mov
mov
push
ja
arpl
sub
jmp
lcall
add
mov
or
push
mov
addr16
popa
mov
jmp
xchg
insl
xor
test
jns
jo
mov
clc
xor
mov
and
inc
dec
cmpb
and
movsl
jmp
cltd
fs
shr
xor
lcall
nop
xchg
les
pop
and
cmp
fwait
dec
mov
cld
sub
xchg
clc
inc
dec
and
and
mov
movsl
cmp
sarl
fwait
pop
adc
mov
mov
loopne
cmp
bound
mov
cltd
hlt
addl
cltd
mov
sub
cltd
push
iret
mov
cmp
mov
or
mov
cltd
push
jge
and
cltd
daa
jae,pt
test
nop
cltd
adc
ja
mov
jmp
pop
in
aaa
jo
adc
xchg
fnstcw
push
push
mov
push
nop
push
sub
or
dec
inc
and
into
aaa
jmp
mov
cltd
adc
cltd
push
sub
negl
push
out
rcrl
in
mov
fistl
ds
call
sbb
dec
leave
add
cltd
ss
dec
pop
call
stos
cmp
push
and
or
leave
data16
adcb
dec
pushf
xchg
jg
dec
cmpsl
push
into
cltd
subps
cld
cltd
sub
add
inc
cwtl
jecxz
mov
adc
and
mov
add
xor
jp
or
cltd
fs
cltd
add
les
push
sbbb
in
add
mov
fisubrs
push
test
push
cwtl
pop
sub
jecxz
cltd
subl
jbe
jae
pusha
push
out
push
lods
and
jno
xchg
push
cltd
inc
add
pop
cmpsl
push
mov
cmpsb
sbb
sbbl
iret
jmp
or
iret
and
nop
mov
sbb
or
cltd
ds
push
sbb
and
popa
add
cmp
xchg
fadd
cltd
pop
lcall
loopne
adcb
imul
in
das
scas
push
cmp
jg
sub
mov
std
mov
and
or
mov
jne
or
pop
gs
xor
xor
test
cltd
lahf
je
ja
ret
inc
cltd
loop
cld
xor
cltd
mov
imul
pop
jl
pop
pop
fwait
enter
cmp
rcrb
cli
in
ret
lahf
mov
cltd
clc
out
jmp
mov
cltd
loop
rorb
imulb
fiadds
xchg
pusha
sbb
cmove
imul
and
stc
dec
inc
sub
negl
dec
in
insl
fistps
or
cmp
rcrl
imul
cmc
jb
insl
cmpsl
xor
sahf
mov
push
cltd
into
bound
xchg
popa
pop
cmp
xor
loopne
pop
out
xor
cmpsb
loop
dec
add
mov
imul
test
mov
cltd
leave
orl
pop
addr16
lret
adc
or
xchg
mov
mov
push
sub
or
pop
jecxz
mov
pop
sbb
cld
imul
pop
jle
push
mov
pop
ljmp
dec
add
jne,pn
jno
add
mov
mov
mov
movsl
add
ja
jns
sbb
and
xchg
cltd
jmp
push
cmpsb
mov
cltd
sbb
and
outsl
cltd
loope
lcall
lods
or
imul
sub
sahf
inc
cltd
test
xor
and
in
insb
cltd
cmp
dec
push
mov
xlat
lds
jg
int
scas
stc
push
fnstcw
jp
mov
loopne
mov
dec
add
dec
popf
xchg
adc
dec
fwait
mov
inc
dec
imul
xorl
in
mov
dec
and
jo
jg
iret
inc
das
ret
lret
scas
mov
lock
aaa
fwait
mov
mov
mov
xor
cmpsb
jo
push
xchg
repz
mov
jo
xor
inc
enter
jmp
out
shll
jmp
imul
aam
sub
xchg
pusha
pusha
inc
loopne
mov
add
sub
mov
pop
mov
mov
mov
out
lock
pusha
pop
cli
xor
loopne
icebp
mov
or
push
dec
mov
shlb
xchg
mov
mov
inc
pop
cmc
imul
call
xchg
fwait
mov
push
jmp
xchg
mov
loopne
push
push
jne
sti
and
sbb
mov
scas
lods
loopne
jmp
pop
dec
cmp
enter
insl
pop
push
and
fs
into
or
repz
je
das
repnz
pop
xor
mov
jmp
cmp
mov
call
mov
fucomip
outsl
std
push
into
imul
push
js
inc
fstpl
fcomps
sub
mov
inc
pusha
dec
cs
mov
push
mov
xlat
test
rclb
shr
jmp
clc
gs
outsl
jns
and
rcrb
mov
jmp
ja
push
sub
inc
mov
mov
das
xchg
cmp
pop
dec
cmp
and
mov
lret
pop
and
enter
jmp
outsl
shll
pop
pop
inc
inc
mov
cli
jmp
push
xchg
mov
test
add
pop
sbb
jge
in
dec
mov
frstor
es
cmp
ds
ss
gs
mov
daa
loope
imul
iret
dec
icebp
gs
mov
fcoms
mov
stc
leave
adc
sub
inc
jae
mov
sub
inc
dec
stc
bound
xor
xor
mov
inc
sti
fwait
stc
sti
fcompl
arpl
in
mov
in
jmp
push
enter
loopne
sub
std
inc
jmp
sbb
mov
mov
in
call
mov
stos
pusha
push
popl
push
adc
test
xchg
mov
inc
adc
pop
clc
or
ja
imul
lcall
lea
lret
insb
jnp
mov
hlt
cmp
mov
outsb
inc
dec
push
adc
enter
repz
jmp
out
in
movsb
out
ret
ljmp
pop
movsl
add
daa
mov
dec
inc
test
mov
lock
es
aam
and
call
movsl
lock
in
shrl
pop
mov
xchg
pop
imul
sub
movsb
inc
xchg
ficomps
cmp
push
sti
jp
sbb
call
cmp
in
jmp
movsl
mov
pop
fistl
mov
in
mov
mov
add
dec
lcall
pop
sbb
mov
jb
inc
push
pop
inc
mov
xor
data16
rcl
fwait
push
inc
fisubrl
movsb
jmp
jle
sub
sbb
dec
adc
sbb
nop
xchg
movsl
xor
ficomps
and
shr
pop
lcall
add
psrlq
lock
pop
call
or
cmp
stos
jl
fnstsw
in
and
popf
inc
pop
repz
mov
lahf
and
xchg
pop
xchg
js
inc
test
jb
xchg
sbb
test
fidivs
mov
ljmp
inc
jmp
mov
mov
push
pop
lock
jae
jnp
mov
in
pop
pop
mov
mov
adc
push
sub
jmp
mov
fcoms
push
movsb
rcl
cmp
mov
js
mov
pop
ljmp
adc
sbb
sbb
sbb
int3
add
xchg
mov
mov
mov
stc
cs
enter
mov
jmp
add
lock
mov
sub
test
fs
xor
ds
cld
push
and
leave
cmp
xor
add
sub
mov
mov
jo
iret
loope
jmp
popf
popf
and
and
pop
les
jmp
rcll
shlb
push
loop
ja
jmp
dec
mov
pop
dec
jge
sbb
jno
in
rcrb
ficomps
xchg
hlt
mov
adc
cwtl
adc
sbb
cwtl
es
mov
pop
insb
add
popa
push
sub
inc
push
pop
lcall
imull
nop
sti
test
sbb
mov
ja
out
push
jmp
mov
and
mov
sbb
inc
call
jmp
jnp
add
or
ljmp
mov
dec
sbb
inc
mov
sub
inc
ss
jmp
xor
pushf
imul
out
sub
cld
test
imul
push
cltd
pop
pop
xor
stos
sbb
lods
loopne
incb
cmp
scas
ret
cmp
add
frstor
in
adc
mov
notb
mov
cld
adc
xchg
leave
in
and
stos
rcll
push
lret
lds
mov
sbb
outsl
or
ljmp
out
cs
test
shlb
sbb
adc
xchg
fldenv
fists
mov
in
sub
sub
loop
dec
inc
loopne
or
cmpsb
fcom
out
les
scas
push
test
movsb
push
pop
pop
imul
cli
push
jb
leave
arpl
sbbl
cs
in
mov
imul
jmp
jmp
inc
mov
inc
je
sbb
icebp
push
mov
lcall
addl
mov
mov
fisubl
cmp
pop
sarb
ret
cmpsl
push
add
dec
jmp
xor
jne
clc
popf
pop
loopne
push
lahf
arpl
lds
cmp
in
mov
jmp
or
mov
inc
add
sub
lock
fsubrs
outsl
stos
pusha
ret
movsl
fnstsw
popf
shlb
inc
mov
sub
push
lock
push
mov
adc
mov
stos
popf
cltd
outsb
mov
adc
loope
enter
lods
int3
shl
leave
rorb
pmaddwd
cmpsb
cmp
mov
ds
pop
jmp
sbb
adc
imul
leave
scas
or
add
in
jle
xor
test
adc
jae
popf
pop
ss
lcall
mov
stos
cvtdq2ps
fsts
and
ja
mov
sbbl
outsl
push
xchg
imull
inc
sub
pushf
mov
lds
sub
addr16
mov
ret
inc
int
pop
pop
lock
sub
out
mov
add
ficompl
pop
hlt
mov
cmp
mov
cltd
xor
add
addl
repz
pushf
rolb
out
mov
push
xchg
jmp
andb
movsl
data16
xchg
subl
lock
nop
pop
pop
inc
mov
stos
clc
dec
sti
scas
bound
xchg
add
cmovb
push
lds
cli
xchg
mov
xor
js
rcrb
ret
jmp
add
sar
stc
adc
and
test
pusha
lcall
cmpsb
mov
sub
push
jmp
stc
mov
sbb
cld
je
ret
repz
jmp
aas
cltd
mov
dec
nop
aad
jmp
lock
cld
shlb
in
shll
outsl
outsb
aaa
xor
xor
enter
sub
add
or
or
in
mov
inc
mov
and
incb
stos
push
add
sbb
jne
or
lods
inc
sbb
mov
loop
xchg
push
inc
fs
and
or
icebp
decb
xchg
push
ds
pop
outsl
fcmovnb
jmp
adc
xor
sub
sub
push
dec
jmp
add
inc
pop
add
or
rcrl
jmp
cld
stos
mov
or
xchg
lock
dec
cmc
enter
dec
call
push
repz
jnp
nop
cmp
clc
insb
test
movsl
dec
in
ret
enter
mov
inc
scas
sbb
insb
push
popa
push
add
dec
and
call
fildll
pop
scas
stos
inc
fisubrs
popf
movsb
insb
cmp
pop
or
mov
outsl
scas
pop
arpl
lahf
dec
or
ja
sub
jmp
fsubr
jbe
jae
movsb
sub
rolb
stc
imul
cmp
mov
mov
lret
or
and
cmp
inc
test
adc
lods
stos
outsl
shlb
xchg
ror
std
sti
add
pushf
in
mov
bndldx
jne
and
popa
mov
fbld
fisubs
dec
pop
shl
cld
adc
lcall
roll
setp
xchg
pop
jmp
insb
mov
clc
sub
cmc
sub
add
mov
adc
adc
xchg
fwait
cmovl
test
mov
sti
loopne
mov
mov
mov
xchg
stos
adc
xchg
shl
out
aam
test
sub
sbb
lcall
pusha
add
inc
and
cmp
jmp
fwait
or
or
cltd
xchg
test
pop
lock
dec
cmp
sub
sbb
adc
in
adc
lret
fucomp
jmp
subb
popa
repz
add
inc
sarb
cs
into
test
orl
fsubp
jmp
pop
push
xor
fisttpl
pushf
out
sbb
ljmp
mov
dec
ret
ret
fimuls
popf
rol
adc
and
ret
sub
xchg
pop
push
add
push
add
jbe
stos
jmp
xor
pop
jmp
mov
hlt
pop
mov
loopne
jp
dec
or
mov
or
inc
andb
sbb
lods
aaa
jne
lods
ret
add
lods
adc
jmp
mov
push
iret
push
mov
jo
rorb
lods
jmp
sti
sub
and
cltd
inc
cmp
enter
mov
adc
dec
and
dec
ss
sbb
lock
popa
push
into
jno
mov
xchg
mov
or
imul
pop
into
neg
mov
sbb
add
aam
push
loope
adc
mov
push
fwait
lret
push
pop
cmpsb
dec
lock
adc
mov
jmp
shr
cli
cmp
jg
add
movsl
push
pop
mov
jne
adc
ficoml
out
sub
and
push
jecxz
jg
scas
push
jge
lock
loopne
arpl
nop
lds
ffree
xor
into
jmp
mov
cwtl
jne
adc
xchg
push
push
mov
les
jmp
xchg
fdivrp
jmp
push
neg
call
add
stos
movsb
or
cltd
cmp
outsb
jae
aam
push
aas
stos
push
cmp
lret
dec
jg
lea
int3
push
cmc
push
das
jmp
jmp
mov
xor
sub
fisubs
xchg
inc
jmp
adc
jecxz
mov
fadds
inc
mov
mov
mov
mov
and
bswap
push
xchg
imul
add
xor
pop
mov
inc
xchg
fs
xchg
pop
divb
jl
fisubl
mov
das
fcoml
fpatan
add
cmp
cs
lods
adc
out
inc
sar
jle
jge
jb
xchg
xor
cltd
mov
jl
cltd
push
decl
es
mov
sub
loopne
lods
fildll
pop
rclb
icebp
cmp
gs
cltd
or
iret
scas
leave
std
fnstcw
into
int
push
pop
cltd
or
adc
outsb
pusha
mov
and
or
jb
cltd
push
adc
xchg
pop
mov
xchg
add
les
jne
cltd
mov
inc
cltd
cmpsb
inc
adc
rcrl
sub
aad
pop
mov
pop
in
jae
cltd
pop
adc
aad
sbb
scas
cld
jle
enter
in
aas
adc
cmp
pop
mov
cmpsl
lds
lret
lea
int3
insb
xchg
add
fwait
and
mov
jns
cmpsl
cltd
xchg
pop
push
push
lret
or
xor
pop
xlat
dec
cld
out
mov
imulb
inc
cltd
mov
fisubs
mov
xchg
mov
pop
mov
sbb
arpl
les
imul
mov
fistpll
cltd
imul
stos
in
push
cltd
sarl
xor
lods
ficoms
pop
cli
fcompl
inc
push
xor
sub
jne
ficompl
xchg
iret
adc
nop
cli
add
fwait
test
push
inc
push
sbb
aaa
pop
lds
sub
cmp
lret
add
cltd
test
or
aaa
sbb
pushf
pop
adc
and
mov
mov
push
shlb
push
loope
xlat
pop
jmp
and
or
cltd
jge
mov
cltd
lret
adc
sti
insb
mov
xchg
rcrl
aad
arpl
and
loope
pop
imul
cmpsl
popa
xchg
cmp
cltd
adc
xchg
into
test
loop
mov
shll
ret
inc
and
dec
mov
aaa
js
int3
fnstenv
mov
testb
jle
das
or
mov
sub
imull
jmp
cltd
addr16
dec
fwait
rorb
push
enter
sub
and
push
add
xlat
and
fistpl
cltd
cmp
jl
cltd
fldl
push
movsb
cltd
xor
cmovp
stos
pushf
cltd
ret
push
cltd
out
cli
repnz
aaa
add
orl
adc
scas
pop
mov
jl
jge
jecxz
setp
inc
adc
or
xchg
rcrb
sub
cltd
or
das
mov
xchg
sbb
mov
jg
sti
mov
sub
daa
mov
test
ljmp
mov
dec
adc
sub
pop
dec
sbbb
loopne
loop
aad
cltd
add
and
xor
sub
and
push
add
adcl
xor
lock
mov
mov
sbb
cltd
rcll
cmp
sub
mov
cltd
jb
pop
sbb
cltd
sbb
push
aam
xor
mov
ds
outsb
pop
out
fwait
mov
cltd
ret
cmpsb
leave
mov
sub
out
push
orl
mov
xor
xchg
je
insl
push
sbb
cmp
fs
cltd
xchg
packsswb
mov
or
cltd
gs
push
test
andl
lock
cltd
and
cltd
repnz
fcompl
ret
lds
cmp
xchg
mov
popf
adc
mov
out
frstor
cltd
int
cli
fisttpll
sbb
push
inc
sub
jno
nop
cmp
push
and
mov
test
popf
mov
adc
inc
push
lods
test
stc
adc
cltd
mov
add
jl
ficompl
bound
add
cmp
int
pop
iret
push
lea
lock
xchg
fnstsw
dec
sub
mov
xor
and
pop
or
ficoms
imull
add
fldenv
push
popa
fwait
push
adc
popf
clc
imul
cmp
inc
cltd
fwait
or
jne
daa
lret
push
cltd
sbb
mov
fistpl
mov
xor
lahf
loop
movl
xor
inc
out
or
push
jecxz
sbb
jo
push
arpl
mov
adc
pop
jns
mov
dec
jl
jge
leave
and
scas
sub
fmul
pop
and
cltd
mov
jp
mov
cltd
hlt
fdivrs
cmp
pusha
stc
rclb
pop
hlt
xchg
and
mov
cltd
jp
cmp
xor
mov
dec
aad
cmp
xor
repnz
rclb
cltd
xchg
outsl
mov
fwait
and
loop
aaa
and
jno
pusha
inc
lcall
lret
add
test
dec
sub
cmp
add
cltd
and
jne
imul
loopne
rcll
aad
stos
pop
std
out
fwait
and
push
and
icebp
pop
cltd
out
sub
inc
test
sub
imul
cmpsb
loopne
aam
xlat
popa
xchg
add
hlt
sbb
mov
xor
pop
xchg
movsl
inc
mov
xchg
cltd
xor
jmp
jnp
rcrl
daa
lcall
push
xor
jno
lock
mov
or
xchg
jbe
adc
cltd
push
pop
cs
popf
aam
mov
adc
cmpsb
inc
xchg
cmp
mov
scas
sbb
cltd
add
mov
or
jb
pusha
cld
repz
fwait
ljmp
add
inc
push
ficompl
dec
cltd
jecxz
fstpl
push
cmc
jp
pop
add
les
clc
pop
shrl
sub
cli
xor
inc
mov
rorb
mov
stc
stos
add
mov
inc
add
clc
cmpsl
xchg
cltd
into
inc
mov
dec
mov
bound
jae
jl
push
jg
out
sbb
xor
push
or
xor
aam
mov
push
jecxz
sar
fbld
cmp
pusha
cltd
pop
in
insl
rcll
inc
lock
xchg
pop
mov
mov
int
or
inc
mov
jmp
add
fstpl
mov
adc
jg
sbb
aaa
or
cld
push
pop
xchg
lea
mov
mov
fstpl
push
enter
repnz
mov
and
cltd
mov
mov
rcl
mov
jae
rclb
cltd
push
test
aad
push
ret
cmp
pop
push
pop
xchg
mov
inc
rcrb
stos
pop
call
xlat
popf
cmc
das
sar
fwait
adcb
mov
pop
ljmp
xchg
cltd
int
sub
sbb
lcall
sub
push
out
adc
clc
fwait
push
fwait
cs
test
pop
pop
lret
idivb
leave
stos
or
mov
iret
push
lcall
shll
mov
bsr
shlb
lods
out
sbb
cltd
popa
js
popa
adc
cwtl
jl
repnz
xor
cltd
cli
popf
lret
fcmovu
mov
sbb
popa
not
jno
cltd
or
js
cld
or
mov
dec
fwait
cmc
orb
mov
popf
mov
inc
cmp
sbb
mov
cltd
cmp
push
or
cmp
ja
mov
ficomps
mov
mov
sbb
sbb
fistps
mov
mov
mov
mulb
push
dec
jns
gs
stos
sbb
cltd
and
jle
cltd
mov
and
int
sub
sbb
jmp
add
xor
mov
dec
lock
sub
daa
ja
lcall
mov
cli
lea
mov
pop
inc
sbb
stos
jmp
stos
push
mov
mov
ds
sub
mov
push
xchg
jl
mov
cli
jae
xchg
into
mov
sub
scas
xor
jmp
jg
daa
enter
movnti
popa
mov
loopne
nop
pop
xor
jmp
jbe
jp
arpl
mov
inc
shrb
lock
lret
sbb
inc
and
add
rcrl
repz
xchg
fcmovne
and
cmp
sub
mov
jmp
pop
sub
dec
fistl
mov
push
push
test
cmp
mov
or
jmp
scas
mov
cmpsl
mov
int3
and
mov
push
int
push
jg
les
stos
jle
push
sbb
mov
xchg
rorl
mov
int
stos
add
loop
data16
push
cmpsl
mov
cmp
inc
push
mov
cmp
out
inc
sahf
test
ret
jns
pop
mov
push
mov
pop
xchg
xor
fwait
movsl
cmp
lahf
cmp
and
jae
pusha
icebp
pop
js
pop
mov
mov
sbb
stos
cmpl
cwtl
and
mov
adcb
xor
jns
jb
cmp
push
in
cmp
mov
loopne
in
stos
jmp
pop
scas
or
fsubrs
lret
dec
popa
jmp
cmp
mov
dec
adc
sbb
inc
xchg
cmpsb
inc
test
and
test
jg
push
ficompl
jns
test
daa
jae
mov
fucomip
in
movsl
dec
mov
shll
addb
dec
xchg
mov
mov
cmc
mov
insl
sbb
cmp
jb
arpl
cmp
pop
cs
adc
sub
xchg
call
cmc
cld
std
stos
mov
out
or
enter
stos
sub
jle
fidivl
fldcw
cltd
mov
pop
xchg
push
mov
rorb
mov
pushl
xchg
adc
daa
and
test
shlb
adc
dec
jbe
fldenv
dec
out
ljmp
mov
dec
and
push
cld
arpl
loope
cmp
jne
outsl
jns
movb
add
test
fchs
mov
shl
ss
push
sbb
adc
mov
jmp
mov
mov
jmp
pop
jnp
cmp
sub
push
stos
or
loope
jl
push
repz
cwtl
inc
outsb
negl
mov
mov
dec
fisttps
add
push
pop
fidivl
pop
cmpsl
das
mov
mov
enter
inc
and
lahf
xorb
clc
push
lcall
mov
add
mov
sub
lret
sub
shlb
repz
fistpl
scas
inc
push
cmp
inc
hlt
xor
cs
jmp
roll
aaa
jecxz
mov
dec
cmpl
sbb
gs
inc
cwtl
aaa
cmp
gs
xor
es
mov
stos
fwait
jno
out
test
shlb
arpl
pop
adcb
pop
orl
mov
cltd
adc
shl
ja
pop
in
test
test
scas
out
sbb
popa
jge
ds
iret
jle
clc
pop
shll
adc
sub
jns
adc
test
ret
ret
cltd
jnp
mov
cmp
fistps
sbb
sbb
and
fwait
dec
inc
push
push
push
loopne
adc
ret
nop
xchg
lea
shl
loope
in
jae
and
jle
jg
cmpsl
pop
mov
das
pop
jmp
push
shrb
sbb
dec
imul
cmp
cltd
mov
sub
ja
xor
jno
mov
outsb
lods
jae
cltd
fistl
hlt
bound
xchg
in
pop
adc
mov
lods
pushf
sbb
movsb
mov
outsl
frstor
and
xchg
mov
and
adc
ret
fcom
out
jge
leave
pop
leave
cltd
repnz
cmp
jae
popf
mov
loope
push
jbe
clc
mov
sbb
or
fwait
mov
add
xchg
out
cmp
fwait
movsl
dec
adc
in
pop
jmp
pop
loope
cltd
daa
test
mull
cltd
and
loopne
imul
in
sahf
inc
cltd
nop
cmp
iret
pop
cmpsl
lahf
cltd
ret
pop
mov
jecxz
or
pop
mov
mov
mov
leave
mov
and
cltd
mov
cmc
shlb
movb
negl
push
jbe
arpl
lahf
shr
mov
or
mov
repz
cmpb
pop
or
ljmp
mov
fwait
pop
pushf
int3
cmp
sbb
push
add
inc
test
loop
adc
jle
cltd
sub
leave
cmp
and
inc
popf
cltd
cwtl
ret
mov
adc
dec
mov
mov
cmp
adc
lcall
jo
inc
test
pop
lret
adcb
mov
sarb
and
pop
cltd
inc
jae
fstp
out
roll
iret
cmpsl
mov
jo
in
imul
bound
insl
dec
inc
cltd
mov
adc
xchg
cltd
popa
fldcw
cmc
cmp
jae
lods
icebp
movsl
stos
fucomip
add
mov
cmp
call
xchg
cltd
xor
ja
cmc
movsb
mov
outsl
and
cltd
dec
loopne
sub
loopne
jo
or
adc
fwait
fwait
cmpsl
iret
fs
and
xchg
sbb
adc
lret
shll
inc
cltd
stc
shlb
outsb
mov
neg
xchg
popf
xchg
lea
outsl
stos
leave
adc
pop
cltd
jo
es
cltd
push
in
inc
xor
dec
mov
mov
and
call
cmpsl
ss
pop
fwait
sahf
and
cltd
and
xlat
jmp
xchg
leave
or
jl
or
aas
divb
lcall
mov
cmp
shlb
dec
mov
movsb
cmpsl
lods
in
adc
std
das
jp
xchg
jae
fs
sbb
adc
pop
cltd
lcall
xor
cltd
cmc
mov
pop
mov
lea
add
test
rolb
lods
inc
sbb
cltd
stos
ret
shll
cmpsl
int
xchg
sbb
orb
cmp
push
stc
dec
cltd
mov
mov
test
mov
add
push
cmp
mov
sbbl
arpl
cld
and
sbb
cltd
pusha
mov
bound
cltd
xchg
mov
out
xchg
cltd
xchg
and
sub
movsl
mov
add
sbb
jns
loope
cltd
in
push
test
xchg
testb
jno
js
pop
inc
pop
mov
loope
pop
daa
push
imul
cltd
mov
push
mov
cltd
or
lods
es
enter
mov
nop
test
add
push
cltd
lods
int3
cmp
cmp
mov
mov
nop
jle
in
inc
imul
scas
sub
push
nop
ficomps
movsl
cltd
fists
out
cltd
mov
rorl
in
inc
mov
xchg
lods
mulb
call
pop
loope
sub
jae
sub
pop
mov
loopne
leave
cltd
jne
pop
icebp
xchg
mov
cs
inc
pop
shlb
jmp
and
stos
cltd
adc
xchg
cld
sbb
pop
fldt
out
or
mov
mov
cltd
mov
das
inc
cltd
mov
std
mov
cmp
jae
in
mov
into
inc
jo
and
sub
or
push
scas
and
cltd
sahf
movsl
mov
lods
lods
cltd
push
dec
mov
pop
inc
xchg
mov
jge
cmpsl
sbb
and
mov
pop
cltd
shll
push
inc
adc
cmp
ficoml
xchg
adcl
and
inc
in
scas
outsb
cmc
xchg
scas
fistl
cmpb
cltd
mov
and
inc
push
mov
dec
fiaddl
das
jl
mov
lds
add
fsubs
aas
push
jmp
push
push
cmpsb
mov
jns
in
cmovns
sub
cltd
stc
movsb
icebp
cltd
fwait
push
or
orl
insb
jl
mov
jecxz
xor
aas
sub
rolb
xor
mov
out
loopne
aas
pop
inc
outsl
mov
repz
cmpsl
dec
cltd
mov
test
xchg
scas
cltd
jmp
add
pop
test
fisttpl
cmp
cltd
fstpl
test
outsl
cltd
xor
hlt
sbb
imul
jmp
into
lea
mov
mov
mov
bts
jb
jbe
cltd
dec
dec
dec
clc
xor
jg
cltd
hlt
mov
lock
sarb
lods
mov
sbb
cmp
sbb
mov
scas
or
push
es
sub
push
inc
xchg
push
shll
cli
lret
stos
add
aas
ss
imul
mov
xor
stc
jb
pop
je
lea
fadd
repnz
ljmp
pop
xchg
pop
cltd
or
cmp
mov
movsl
add
iret
loopne
sarl
dec
sub
adc
and
insl
xchg
push
mov
pop
sbb
lods
sti
nop
xor
js
sbb
cltd
jg
loope
inc
icebp
stos
roll
daa
sbb
dec
leave
sbb
das
lahf
call
aad
adc
mov
scas
je
pop
cwtl
sub
rcll
jne
lea
inc
jl
mov
pop
mov
cmc
mov
outsb
dec
inc
mov
mov
fbstp
cltd
add
dec
or
cmp
push
sub
test
enter
adc
push
mov
ror
mov
or
cltd
mov
outsl
shll
insl
push
adcb
frstor
icebp
and
and
mov
pop
rcl
pusha
mov
test
js
inc
cltd
mov
push
sbb
stos
movsb
mov
insb
and
scas
fstpl
mov
in
adc
mov
dec
adc
setns
pushf
stos
cltd
mov
sbb
mov
mov
loope
mov
out
jbe
jmp
inc
xchg
pop
cmpsb
in
out
add
and
jb
dec
iret
aas
jmp
hlt
inc
dec
stos
sbb
inc
push
mov
test
fwait
mov
mov
pop
jae
leave
dec
scas
mov
popa
add
aad
inc
jmp
xchg
int
imul
in
and
cwtl
data16
and
mov
add
jge
aad
xchg
inc
adc
int
push
cmp
ljmp
jg
rolb
int3
popf
cmp
lock
dec
mov
mov
or
sbb
sub
jg
repz
sub
shrl
div
xor
mov
mov
adc
shl
pusha
jmp
mul
sar
lock
in
test
xchg
sti
mov
fucomip
inc
pop
cwtl
or
loopne
and
adc
shrl
jns
insl
fs
ja
sbb
jae
loope
aam
imul
push
pop
push
aas
test
aas
aam
addr16
jmp
mov
lahf
dec
fcoml
vpmaxub
in
and
jmp
sbb
inc
pop
mov
sarl
es
xchg
inc
jne
add
sbb
sarl
push
hlt
leave
push
imul
push
jno
mov
adc
sbb
xchg
push
shll
jns
xor
pop
loope
stc
jbe
push
cltd
add
add
dec
aam
cmp
and
or
mov
sbb
sbb
dec
sarl
mov
sub
mov
pop
dec
mov
stos
sbb
into
xchg
dec
out
mov
dec
js
aas
sub
inc
sbb
or
andb
mov
sbb
ret
push
loopne
sub
sbb
lods
dec
jmp
sbb
inc
pop
and
adc
cltd
scas
mov
mov
xor
cwtl
cmp
dec
std
cmpsb
inc
jmp
mov
mov
or
fwait
shl
cmc
lret
add
lcall
pop
push
imul
lret
mov
jp
dec
add
inc
loope
lock
xor
orb
xor
mov
pop
push
es
loopne
lds
xchg
lahf
scas
adc
mov
stos
test
push
mov
iret
cmp
sub
sbb
fs
sbb
pop
push
lret
lahf
test
mov
push
add
ret
call
cmp
mov
sbb
in
adc
in
faddl
pushf
mov
stos
push
orl
cmpsb
adc
iret
and
jle
sub
enter
adc
hlt
repz
fwait
popa
fwait
pushf
lods
inc
leave
fsubrl
stos
lock
mov
pop
pop
leave
pop
mov
stos
cwtl
mov
push
sbb
leave
push
jg
pop
sbb
loopne
repz
jle
jle
inc
stos
push
mov
jns
xchg
or
mov
push
dec
and
movsl
adc
mov
arpl
ret
mov
and
or
lds
push
iret
lds
jmp
rorb
mov
mov
in
jmp
mov
in
jae
les
scas
jo
and
nop
mov
mov
jmp
data16
jmp
movsl
lcall
fiadds
pusha
jmp
jge
inc
xor
ret
les
mov
adc
push
cmp
outsl
popa
outsb
jmp
loope
mov
mov
mov
xor
mov
stos
mov
test
mov
inc
fnstcw
cmp
lock
pop
inc
mov
xchg
inc
inc
mul
pop
dec
subb
jmp
or
or
aas
popf
and
inc
jecxz
lret
inc
test
mov
popf
dec
enter
scas
jp
int
iret
jbe
popa
fidivs
inc
push
xor
dec
dec
int3
sbb
mov
and
jmp
jo
inc
cmp
outsb
in
icebp
and
cmp
push
ds
popa
mov
ret
outsb
lahf
dec
faddp
cmp
lcall
arpl
ljmp
imul
push
fucomp
clc
mov
xor
mov
adc
in
cmc
stos
adc
pop
outsl
lret
mov
or
add
xor
insb
jg
inc
mov
mov
mov
mul
imul
push
sbbb
js
popa
insb
jecxz
std
jecxz
adc
mov
pop
pop
rcl
pop
outsl
jmp
leave
nop
stos
lock
sbb
dec
jne
xchg
jbe
cmp
adc
insb
push
dec
pop
mov
adc
push
mov
fstps
adc
add
inc
popa
jns
mov
js
arpl
push
arpl
mov
and
rorb
daa
mov
push
adc
cmp
push
aas
lea
dec
aam
dec
mov
imul
mov
leave
ljmp
xchg
rclb
lods
dec
idiv
mov
fisubrs
loopne
repz
rep
and
outsl
enter
pop
and
jecxz
bound
pop
adc
jmp
mov
cmp
pop
je
ss
mov
sub
andb
iret
out
and
insl
xor
jno
ficompl
sbb
mov
add
jmp
jmp
aad
pop
mov
pop
arpl
mov
mov
imulb
inc
cld
es
shll
pop
inc
imul
xchg
mov
xor
xchg
mov
jecxz
fmul
sub
dec
pop
jo
sarb
roll
jmp
sub
shl
sub
imul
rorl
stos
cmpsb
adc
xor
or
xor
pop
imul
in
loop
xchg
fildll
cmp
mov
xchg
sub
movsl
dec
loopne
test
aam
push
jae
fists
push
mov
push
fwait
into
lock
inc
jb
jb
aam
mov
insb
add
mov
mov
xchg
mov
mov
mov
or
aaa
or
test
stos
stos
scas
xor
arpl
jns
popa
jnp
inc
lock
cmp
push
sbb
arpl
or
scas
push
push
aam
or
sbb
in
inc
mov
push
xchg
push
mov
icebp
sarl
pop
or
push
pop
and
jne
icebp
cmc
or
pop
mov
ret
ficomps
adc
outsl
jbe
mov
ret
ret
jno
sub
inc
fcmovnu
jo
jns
mov
or
dec
sbb
cmp
sbb
test
fbld
mov
xchg
and
mov
or
insl
sbb
or
sub
inc
imul
xchg
xchg
fwait
dec
lock
out
jbe
rclb
xor
lods
push
decb
push
xlat
add
clc
andb
out
add
jnp
jo
adc
inc
lea
shrl
adc
cmpsb
push
sub
sbb
test
faddp
or
mul
push
add
pmaddwd
outsb
jnp
inc
sbb
lds
push
cmc
cli
jb
dec
dec
clc
jo
pop
jmp
jmp
sahf
push
jo
in
jl
test
push
aaa
pop
inc
leave
clc
jne
sbb
xor
push
cmp
or
insb
and
andl
stos
or
cmpsl
pop
jg
lcall
pop
mov
in
int3
out
cltd
jg
mov
jno
jne
xor
xchg
int
pop
cmp
jmp
sbb
out
aam
xor
dec
cmpb
sub
and
into
lds
int3
jmp
std
into
aas
fdiv
xor
out
sub
jae
mov
mov
mov
and
push
in
shlb
mov
movsl
xchg
pop
outsl
ret
xor
aaa
lahf
and
cmp
loopne
shr
sub
sbb
dec
push
movsl
mov
stos
or
sub
fwait
test
in
mov
shr
bound
cld
arpl
cmp
fdivs
mov
movsb
cli
nop
movsb
lock
sub
sahf
daa
test
cmp
mov
stos
lods
test
stos
insl
fwait
mov
xor
movsl
jbe
and
dec
sbb
shrl
xchg
and
mov
stos
pop
pop
loopne
lret
mov
shrb
mov
jns
cld
push
ret
mov
loopne
sbb
mov
mov
divl
sub
jno
mov
inc
push
pop
add
jmp
outsl
sub
inc
popa
and
sar
test
scas
insl
cmp
and
and
lds
xchg
cmp
jbe
jmp
push
xor
jmp
int3
adc
mov
jg
push
gs
idivl
aad
lcall
pop
in
bound
push
mov
stos
addb
bound
mov
jge
movsl
adc
adc
inc
call
lds
jmp
into
sub
lods
dec
mov
adc
mov
cmpsl
add
loopne
sbb
inc
jbe
dec
or
clc
imul
into
mov
pop
leave
fmul
mov
outsl
into
mov
movsb
adcl
cmp
mov
and
mov
andl
pop
jmp
mov
rorb
jo
mov
cltd
pushf
push
mov
mov
adc
int3
ljmp
jo
sbb
jb
aam
mov
adc
fldpi
lret
and
jb
sbb
push
mov
subb
addr16
sub
icebp
pusha
pushf
jmp
and
lods
pop
xchg
dec
dec
cmp
mov
mov
cld
insb
push
mov
mov
add
xor
inc
jmp
inc
cmp
std
sbb
mov
cmpsl
add
mov
pop
cmc
sub
sbb
neg
xchg
pop
rolb
and
inc
test
in
mov
jmp
xchg
in
mov
cltd
cmc
jae
test
push
outsb
pop
push
negl
inc
push
and
and
mov
imul
sbb
and
mov
adc
push
sbb
xchg
fwait
and
xchg
test
sub
push
jmp
movsl
fsubrp
dec
fwait
sbb
es
sbb
push
mov
loopne
in
fwait
push
imul
loope
negl
push
sbb
cltd
sti
mov
aad
cltd
adc
cmc
jae
xchg
inc
out
js
jl
push
lahf
push
sbbl
loopne
sbbb
or
sbb
mov
cltd
loope
aad
std
aam
inc
mov
loopne
sarb
fwait
cltd
mov
je
jno
cltd
jmp
push
lods
cmp
dec
clc
add
cltd
mov
pop
pushf
jbe
sbb
xchg
and
and
push
mov
xor
gs
mov
add
test
rcr
cltd
test
inc
mov
inc
push
xor
cltd
sbb
jne
lret
cltd
mov
pop
pop
or
dec
dec
cltd
and
cltd
test
ja
jge
and
mov
test
popl
cltd
scas
cmpsl
jmp
xchg
cltd
sub
mov
add
outsl
sub
adc
cmp
stc
rcrl
testl
inc
cmpsl
jb
mov
xorb
jg
sbb
scas
out
ret
jne
iret
mov
and
xchg
and
jae
ficoms
popl
lods
sarl
iret
fsubs
and
mov
lock
sbb
inc
cltd
jecxz
ljmp
inc
cltd
adc
inc
aaa
pop
jno
jl
lods
mov
pop
stos
add
add
in
test
sahf
js
dec
movsb
cltd
adc
pop
in
fwait
cltd
psllw
cltd
stos
xchg
pop
scas
mov
sbb
ljmp
xchg
int3
mov
adc
cltd
mov
dec
cmp
ds
and
dec
cltd
arpl
xor
push
inc
test
sbb
xchg
ret
xor
dec
push
fldenv
cltd
inc
cmp
in
ljmp
ficomps
aad
stos
mov
sbb
leave
ljmp
sub
fistps
test
sub
mov
loop
xchg
cltd
push
rclb
iret
fprem1
aas
add
xor
push
xor
or
cltd
ds
cli
out
xchg
std
push
dec
addb
fisttpll
pushf
or
cwtl
jne
adc
inc
mov
es
mov
pop
or
mov
xchg
leave
push
mov
pop
mov
xchg
cltd
push
sbb
pop
mov
retw
cmpl
imul
jae
dec
push
call
xor
jo
pop
ds
loope
fistps
cmp
out
leave
mov
xchg
xchg
inc
fwait
int
xor
fldt
leave
mov
shll
mov
mov
jecxz
mov
xchg
mov
sub
pusha
iret
mov
lret
dec
add
imul
mov
sbb
inc
std
pop
xchg
mov
pop
pop
in
fdivs
iret
add
jg
and
sub
pop
aad
stos
fsts
mov
scas
sub
mov
arpl
sub
add
loop
cmpsl
lods
daa
and
repnz
pop
adc
push
fistps
cltd
jne
daa
pop
js
les
cmp
mov
leave
cltd
add
jmp
cltd
je
icebp
movsb
notb
scas
mov
and
or
pusha
cltd
aaa
faddl
cmp
mov
add
lods
iret
orb
int
add
cltd
or
lods
xchg
dec
xchg
inc
xchg
test
rorb
cltd
adc
test
add
cltd
cli
cmc
xchg
enter
addl
sub
adc
outsb
pop
push
popf
cltd
cld
out
mov
xchg
xchg
dec
xor
cltd
xchg
jnp
fcoml
fnstsw
int
adc
xchg
jge
inc
insl
das
push
and
xor
mov
stos
mov
leave
mov
mov
fstpl
mov
loope
mov
or
dec
shlb
cmp
sub
add
js
sub
mov
rcrb
iret
stc
sahf
cltd
xlat
rcl
andb
nop
mov
xchg
sti
je
movsl
cltd
adc
mov
nop
cltd
stc
insl
enter
adc
mov
xchg
pop
jecxz
adc
loope
andl
cltd
fsubr
scas
pushl
or
cmp
xchg
jle
shrl
adc
cltd
lds
mov
xchg
pop
sbb
leave
std
es
leave
mov
ja
pop
sbb
lea
into
and
std
shrl
cltd
call
adc
sti
cltd
push
scas
xchg
and
push
movsb
mov
mov
jb
and
cltd
movsl
add
fiaddl
fsts
mov
dec
xor
dec
popa
lcall
fdivrp
sbb
mov
xor
and
outsb
shll
cmc
xlat
mov
cltd
call
ljmp
xchg
je
adc
cmp
outsb
shl
sbb
xor
cltd
sub
push
jg
xchg
daa
push
cltd
pop
push
mov
ret
push
setne
out
into
dec
les
scas
es
push
ficompl
test
cltd
dec
add
sbb
jmp
jecxz
and
and
test
imul
or
adc
pop
mov
cmpsl
mov
popf
ret
mov
mov
push
outsl
dec
into
test
iret
shlb
xchg
cld
mov
into
add
or
movsl
inc
xchg
aaa
jge
or
jo
shlb
fwait
jae
or
dec
leave
frstor
cltd
inc
jnp
lret
cwtl
xchg
mov
ret
int
mov
rcll
pushf
or
or
shrb
bound
adc
cmp
sbb
es
xor
pop
sbb
clc
sbb
outsb
sub
mov
sub
std
add
addr16
and
ljmp
test
fdivs
mov
push
push
call
das
pushf
fcmovnb
cmc
jmp
jmp
jae
cltd
sbb
jle
cltd
jmp
test
adc
fldcw
clc
add
repz
jbe
xchg
sbb
les
sbb
mov
mov
aas
pop
push
mov
outsb
cltd
cmp
add
fwait
cmp
repnz
cmp
cltd
les
rolb
mov
mov
sub
inc
push
jnp
sbbl
sub
rol
scas
sti
daa
outsl
mov
mov
and
xorl
bound
lds
mov
mov
popf
stc
scas
cltd
mov
xchg
mov
jno
cltd
pop
xor
or
movsb
cltd
ret
adc
in
push
cltd
jae
push
lods
je
stos
adc
cmpsl
mov
fmull
adc
jmp
and
flds
insb
mov
fstp
add
pavgb
jbe
pushf
lods
cmc
loop
scas
add
and
jl
clc
cltd
pop
sbb
movsl
push
pop
ret
push
fnstcw
cltd
cmp
ljmp
xor
cmpsl
sahf
cmp
pusha
cli
xchg
push
jns
jl
cltd
addr16
sub
test
adc
dec
cld
mov
cltd
pop
xor
mov
jmp
in
loopne
inc
mov
mov
loope
or
jmp
push
mov
stc
out
push
mov
mov
inc
call
mov
and
call
popa
mov
lock
mov
int3
test
pushf
inc
in
jmp
or
jno
mov
mov
sbb
in
sub
inc
je
xor
add
dec
sti
insb
dec
in
pop
inc
add
outsb
sbb
push
imul
mov
ret
jmp
dec
stos
popf
fcmovu
imul
sbb
pop
cwtl
adc
jmp
sbb
pusha
jmp
sbbl
jb
mov
lods
push
mov
push
and
nop
arpl
imul
adc
and
call
cltd
pop
lock
rcrl
jmp
movsb
or
jno
jbe
mov
fists
mov
test
inc
mov
jle
shlb
jmp
int
shrb
xchg
push
testl
jne
xchg
lock
out
cmc
clc
inc
mov
pop
leave
inc
daa
add
aad
test
les
iret
mov
and
scas
and
stos
aaa
add
mov
es
cmp
js
push
jmp
mov
inc
jmp
addr16
shll
sbb
sbb
cmp
mov
int3
mov
add
inc
test
pop
add
cmp
dec
jo
adc
adc
push
mov
sbb
sti
icebp
ja
and
xor
mov
mov
push
in
je
jmp
xchg
push
cmpsl
or
adc
das
js
sahf
dec
imul
dec
sub
push
cltd
lock
jge
inc
into
inc
xchg
jmp
xor
fistps
int3
lret
jno
fwait
cmp
dec
repnz
cmp
add
aaa
into
jmp
cmpsb
pop
shrb
mov
into
sti
in
push
xchg
pop
lret
mov
addb
mov
fdivl
sti
and
mov
pop
sbb
in
nop
dec
jmp
sbb
es
inc
mov
xchg
pop
ja
les
xchg
xchg
pusha
jmp
jmp
call
repnz
pop
push
stos
sub
sahf
or
lock
add
or
fisubs
adc
adc
into
add
dec
pop
pop
inc
push
sub
scas
jb
or
es
adc
inc
cli
dec
scas
shr
xor
mov
stos
xchg
mov
outsl
iret
mov
popf
push
mov
mov
in
sub
xchg
mov
ret
imul
movsl
xchg
jns
sbb
mov
aam
loop
enter
push
stos
pop
or
xor
pop
mov
mov
rcll
jo
mov
fisubs
arpl
fidivl
or
push
sbb
in
adc
mov
xchg
xorb
add
dec
mov
dec
cmp
fs
adc
xor
pop
jl
enter
lret
inc
dec
jno
pusha
mov
rorl
inc
sub
lds
stc
inc
xchg
outsl
cld
insb
sub
pandn
sub
jmp
ficoml
rclb
les
jl
pop
popa
cs
sub
outsl
testb
test
mov
xchg
hlt
es
dec
stos
pop
and
jge
mull
xchg
lahf
inc
pop
ret
test
adc
push
mov
mov
push
cwtl
hlt
sbb
sub
aas
mov
jns
jmp
xchg
outsl
inc
pop
xchg
jle
cmp
jmp
stos
mov
mov
movsl
out
inc
inc
pusha
dec
jmp
in
add
add
mov
mov
fwait
call
pop
repnz
xchg
fisubrs
pop
sbb
mov
incb
arpl
ficomps
into
pop
mov
aam
out
jg
rcl
mov
cmp
outsl
jbe
cmp
sbb
dec
push
cmc
fcmovnb
mov
or
sbb
and
lods
hlt
push
mov
xor
arpl
mov
cmp
das
arpl
add
pop
data16
jns
cmp
out
jg
movsb
jmp
xchg
dec
sub
push
repnz
or
add
daa
jnp
pop
test
fadds
xchg
jne
lds
hlt
in
adc
pop
loope
rorl
cmpsb
cmp
and
adc
mov
sbb
mov
int3
js
fldl
mov
mov
nop
sbb
jns
xlat
lret
dec
or
aam
xor
mov
aad
andl
lret
pusha
cmp
or
pop
jmp
dec
jmp
sar
xor
jns
mov
jp
cld
push
pop
shll
jnp
fnsave
std
push
rcrb
pop
and
push
mov
jmp
xor
cwtl
leave
in
push
lock
mov
testl
push
lods
notb
cwtl
and
cmp
push
fwait
fsubp
mul
leave
or
iret
fwait
cmpsb
pop
cmp
sub
in
and
lret
insb
cmpsb
inc
sti
inc
rclb
aas
jmp
stos
xorl
fistpll
mov
adc
push
inc
xor
insb
addr16
mov
push
repz
xor
aaa
inc
dec
push
stos
inc
and
cmp
jae
aas
dec
sub
scas
mov
mov
insl
dec
pushf
aaa
in
out
inc
jge
sarl
in
lahf
mov
pushf
adc
mov
cmp
inc
int3
xor
popf
sahf
aad
cmpsl
jle
es
jmp
insb
rolb
jne
mov
pusha
sarl
insb
ror
mov
add
mov
sbb
mov
and
sub
mov
std
cmpl
inc
inc
gs
mov
pop
daa
sarl
and
jg
rcl
xchg
and
xorl
mov
cmp
popa
sub
push
sahf
add
dec
sbb
aas
add
jg
and
and
push
mov
lcall
in
dec
leave
inc
dec
push
and
stos
mov
xchg
cmpsl
in
inc
test
div
into
inc
ret
mov
mov
sbb
lock
imul
jns,pt
mov
dec
sbb
lock
mov
jge
in
mov
mov
imul
jmp
xchg
pop
sbb
xchg
adc
push
shlb
cmp
xorb
loopne
xchg
or
jmp
sub
ljmp
sub
cmp
or
rcrb
sbb
stos
or
popa
clc
and
jb
mov
xchg
cmp
xor
and
mov
mov
pop
pop
mov
es
push
les
icebp
js
mov
mov
mov
dec
pop
sbb
jnp
sbb
lret
loope
lods
mov
fistpl
fwait
pop
mov
outsb
mov
sub
jo
xor
daa
jae
mov
or
in
xor
sub
pushf
shrl
ss
xchg
testl
push
movsb
and
mov
ret
sbb
ficompl
test
flds
lahf
shr
sub
cmpsl
push
xor
in
leave
push
mov
daa
mov
mov
repnz
adc
jae
sbb
push
pop
jge
xchg
popf
dec
xorl
inc
add
xchg
push
popf
push
fdivl
adc
mov
jns
push
aad
sahf
pop
pusha
mov
outsl
sti
mov
push
jmp
lahf
mov
mov
adcl
lock
inc
mov
xor
shr
and
cmp
ljmp
jecxz
mov
pop
and
cmc
pop
movsl
lock
jb
test
sub
or
pop
xchg
mov
daa
dec
jmp
cmp
outsb
xchg
test
cmp
inc
call
test
stos
nop
sbb
test
imul
lock
jns
stos
cwtl
fbld
pop
test
outsl
cli
daa
dec
outsl
stc
mov
rcr
sub
mov
xchg
lea
pushf
xor
lds
mov
mov
mov
mov
ja
and
insb
pop
fisubs
push
subl
stos
mov
rclb
push
jmp
bound
std
andl
jmp
jb
jns
stos
xorb
stos
scas
jo
std
dec
pop
or
adc
xor
pushf
shlb
in
shll
enter
pop
mov
aad
adc
sub
mov
imul
and
ss
xlat
rol
ffree
xchg
jmp
inc
xchg
jecxz
insl
js
cmp
jmp
adc
mov
mov
fimuls
jbe
push
add
inc
lcall
mov
lahf
enter
jmp
xlat
fwait
push
rclb
inc
in
cmp
je
inc
cmpb
imul
fmul
sbb
mov
ja
pop
mov
jo
mov
mov
sarb
loopne
cwtl
call
mov
lea
inc
dec
cltd
mov
ljmp
cmp
add
pop
cltd
inc
add
fsts
add
cmp
jmp
packsswb
aam
xor
sbb
fsubs
rclb
imul
dec
sbb
xchg
sbb
xchg
mov
in
mov
pop
jmp
xchg
adc
inc
lret
iret
in
loopne
cmp
pop
jnp
dec
xor
add
cli
sub
movsb
push
int3
jl
mov
rclb
cmp
les
orl
xor
stos
stos
lds
mov
and
xor
stc
fcmovb
psubsw
xchg
cmc
push
mov
les
sahf
out
cltd
mov
rorb
mov
cli
mov
add
jae
sub
sbb
leave
divb
ret
mov
shl
or
xor
xchg
ja
outsl
inc
enter
cli
cmp
push
cltd
or
sbb
jnp
decb
out
pop
or
inc
jmp
jmp
jae
sub
sub
sub
mov
mov
test
js
adc
or
loope
cltd
enter
in
movb
cmp
mov
add
fcoml
mov
sbb
adc
pushf
std
pop
mov
inc
jmp
jb
mov
push
or
mov
test
or
testl
and
shl
in
mov
cmp
mov
or
push
adc
mov
mov
pusha
add
jmp
push
ja
movsl
or
pop
and
ja
mov
or
sub
call
mov
or
out
fisttpll
sub
mov
inc
add
pop
jmp
and
addr16
popf
mov
jp
divb
and
enter
stos
lahf
call
xor
jp
fsubl
xchg
cmp
sbbb
push
mov
cmpsb
or
sbb
lods
mov
inc
repnz
pop
xor
icebp
pushf
ret
mov
xor
pushf
jmp
dec
dec
insl
sarb
or
cmp
jae
cmp
stc
negb
and
jmp
lahf
mov
pop
sub
stos
pop
aam
arpl
xor
mov
lahf
lcall
jbe
sbb
shr
or
sub
cli
pop
mov
enter
mov
push
loop
inc
cmp
divb
push
lcall
xlat
dec
faddl
lock
inc
mov
mov
pop
scas
out
cmp
call
outsl
clc
mov
rolb
js
inc
lahf
and
mov
loope
inc
lock
stos
ljmp
jle
popf
inc
mov
imul
mov
cmpsb
adc
mov
mov
dec
lcall
sbb
imul
rorb
cmc
in
stos
into
stos
and
sbb
mov
mov
mov
mov
push
inc
ds
sbb
aas
ja
lahf
mov
ss
std
mov
adcb
ds
movsl
cmp
mov
mov
dec
lcall
int
or
fdivrs
mov
adc
fsubl
or
push
aad
mov
sub
fwait
mov
popa
dec
mov
fimuls
ret
int3
ja
andl
notb
xchg
sahf
outsl
push
sar
int3
jge
cld
shrl
orb
push
sub
jecxz
imul
int
xchg
cwtl
sbb
push
jmp
add
fwait
rolb
adc
sbb
add
xchg
sbbl
and
add
mov
outsl
jno
call
mov
xchg
add
jmp
dec
lcall
es
mov
mov
mov
jl
cs
jno
sbb
jmp
loopne
or
stos
aam
mov
addl
add
in
dec
fiaddl
outsl
pop
pushf
push
movsb
test
cmpsb
inc
xor
mov
jmp
pop
xchg
xor
mov
lods
repz
rorb
jp
dec
pop
shl
icebp
sahf
cmpsl
aaa
cmpsb
into
jmp
aas
sbb
and
sbb
dec
lock
inc
outsb
xchg
lret
lret
xlat
scas
arpl
lahf
imul
inc
js
cmpsb
cmp
dec
test
test
arpl
sbb
mov
mov
scas
push
rorb
popa
js
push
pusha
popf
pop
mov
std
subl
testb
sbb
cwtl
addl
mov
cwtl
xchg
repz
push
jg
mov
cmp
enter
push
js
je
mov
mov
in
sarb
mov
pop
pop
lock
dec
adc
push
pop
adc
cwtl
aaa
inc
loop
pusha
pushf
xlat
and
inc
mov
mov
cmp
jbe
xchg
pop
push
bound
popf
scas
fadd
cmpsl
mov
cli
lea
mov
mov
inc
sbb
in
dec
and
sbb
sub
cmp
cmp
stos
jb
cli
stos
lock
jae
mov
sbb
and
ds
gs
aas
pop
cmpsb
adc
clc
aas
addr16
cmp
cli
aam
mov
sbb
adc
sub
cmc
add
cmp
cmp
mov
and
adc
dec
insb
outsb
jne
jns
mov
out
loopne
testl
mov
jp
adc
pop
in
cwtl
insb
imul
orb
ror
shll
jge
aaa
mov
pop
fwait
ljmp
add
sub
fisubl
jae
out
mov
repz
lret
icebp
out
mov
lcall
inc
mov
lret
push
pop
adc
jecxz
and
adc
movsl
cld
repz
pop
cmp
push
pop
imul
or
ret
jmp
movsl
bound
les
mov
gs
stos
shll
lret
sub
loope
mov
repnz
shl
call
gs
xor
gs
sub
and
xchg
mov
jmp
sbb
mov
push
xacquire
sub
loopne
cmc
xchg
or
xor
mov
loope
bound
int3
insl
fdivs
sub
push
pop
cmp
mov
jbe
aad
leave
inc
movsb
sahf
push
sub
loopne
ret
dec
dec
out
idivb
sbbl
ss
fstpt
lock
iret
pop
dec
lret
mov
cmp
xor
enter
cmp
test
popa
jg
adc
mov
jns
sub
sub
or
mov
fidivrl
mov
rcrb
mov
and
sub
jge
out
adc
cmp
ret
sbb
mov
cmp
sbb
lds
sub
outsl
cmpsl
hlt
stos
jmp
stos
in
and
stc
cmpl
xlat
lock
loop
cmp
adc
pop
xchg
shrb
mov
loope
dec
jns
cltd
xchg
repz
push
xor
jmp
cmp
fwait
add
jmp
iret
bound
and
pop
into
icebp
mov
stos
das
insb
dec
std
mov
sub
push
mov
fldt
jmp
rclb
mov
fwait
mov
mov
jns
shlb
or
sbb
xchg
aam
cmc
cltd
stc
and
pop
pusha
sbb
pop
popa
cs
movsl
jmp
lods
stos
mov
adcb
and
inc
movsl
mov
sbb
test
jmp
aaa
std
xor
fldenv
push
mov
jmp
dec
lods
add
aas
shlb
test
dec
addr16
cwtl
or
dec
test
mov
pop
rcr
sub
lods
xchg
or
fistpl
dec
xchg
inc
sbb
xor
add
sub
aad
outsb
mov
jmp
sbb
pop
lock
mov
jnp
mov
mov
adc
push
data16
mov
or
mov
inc
inc
jnp
fdiv
sahf
cmp
mov
icebp
dec
test
add
shlb
jmp
fwait
add
cmpsb
mov
test
shrb
cmp
inc
jmp
mov
xchg
adc
cmp
outsb
and
sbb
pushf
push
sbb
jmp
adc
xlat
xchg
mov
mov
insl
xchg
pop
nop
inc
mov
inc
inc
lds
mov
mov
and
sub
loop
xchg
movsl
fbld
in
inc
stos
dec
jmp
in
and
inc
add
mov
cmc
movsl
cld
jmp
push
xlat
push
jle
or
inc
cltd
call
xchg
arpl
arpl
mov
sti
sub
cltd
cmpsb
jle
das
aad
and
shl
ret
xor
mov
fistpl
mov
mov
mov
mov
jge
jns
clc
lds
cmp
xor
enter
inc
int
mov
xchg
lods
jmp
pop
outsl
rorl
popa
ljmp
push
jno
jmp
xor
mov
sbb
fcomp
mov
aas
lret
xlat
push
call
popf
lret
mov
sub
fs
push
clc
add
jae
and
cmpsl
lock
xchg
inc
jl
sbb
mov
popa
mov
or
or
push
jmp
push
out
icebp
subb
pop
xor
subb
push
mov
push
shl
leave
inc
repnz
inc
mov
sub
add
jmp
mov
test
roll
jmp
loop
dec
add
test
mov
outsl
int3
jecxz
jae
call
push
cmp
sbb
stos
push
jle
in
test
test
fwait
adc
mov
jmp
bound
jo
shlb
push
jb
inc
cmp
push
stos
or
inc
push
add
outsl
pop
mov
jl
mov
pop
jmp
aas
jge
or
and
push
loop
add
es
or
outsl
rolb
dec
loopne
cld
lock
cmp
sbb
cltd
daa
sub
jmp
lcall
rolb
mov
pop
and
inc
pop
cwtl
cmp
and
cs
push
les
dec
pushf
es
pusha
popf
test
test
rcr
fabs
mov
rorb
mov
push
pop
inc
sbb
ljmp
cs
jmp
sbb
lds
xor
repz
cmp
xor
mov
fsubrs
mov
imul
sbb
repnz
cli
cmp
sbbl
outsl
sub
sub
les
fwait
aas
jle
fucomp
lods
mov
jno
pusha
mov
jmp
mov
cmp
fadd
add
sub
push
xchg
daa
cmp
xor
in
fwait
ja
imul
lock
xchg
gs
jne
lea
adc
mov
into
sbb
mov
lock
outsl
lods
mov
pop
gs
sahf
jns
jo
jge
push
stos
lods
mov
lret
push
das
or
or
and
inc
ret
jns
out
aaa
in
pop
int3
mov
mov
dec
sbb
inc
jne
jmp
mov
stos
sbb
dec
mov
push
and
pop
dec
mov
jecxz
or
inc
mov
popl
mov
mov
mov
popa
pop
aam
mov
dec
nop
aam
ficompl
push
ret
jmp
ficoml
por
fisubs
adc
mov
sub
push
outsl
mov
adc
mov
icebp
sti
mov
jo
pop
stos
dec
stos
pop
les
sbb
arpl
pushf
xor
add
shll
mov
movb
add
dec
add
cwtl
cmp
and
shlb
lock
out
call
add
mov
pop
sbb
daa
or
adc
jmp
sbb
les
mov
jl
nop
imul
bound
xchg
sub
addb
mov
or
movsb
mov
loope
fistpll
pop
jmp
adc
addr16
mov
push
ja
pop
loopne
je
insb
dec
cltd
rorl
mov
mov
fwait
xor
out
jo
push
sub
xor
sub
movsl
add
dec
mov
mov
test
iret
jmp
repz
inc
ret
mov
test
cmp
mov
push
adc
mov
mov
bound
add
fdivs
pop
loope
mov
stc
pop
fistpl
add
jb
xor
inc
mov
stos
adc
movsl
xor
lds
mov
bound
push
aaa
push
inc
aas
mov
into
sti
mov
mov
mov
mov
aad
shll
sub
or
mov
mov
gs
sahf
stos
mov
insb
inc
jl
jo
or
test
jmp
adc
testb
pop
jbe
fstpt
adc
or
jae
loope
adc
pop
sbb
out
cmp
jecxz
cmp
adc
jmp
ja
cs
pop
dec
xchg
movsb
mov
and
movsb
mov
in
test
inc
sub
pop
sbb
stc
rorb
stos
mov
in
ja
ret
inc
jmp
test
repz
or
test
xor
data16
cmpsb
jmp
jg
and
sbb
sbb
lods
dec
ficomps
ret
ljmp
je
lret
fldl
lock
repz
jo
mov
mov
jnp
mov
test
dec
adc
outsl
adcl
pop
jg
out
push
ret
or
aam
fdivl
mov
add
xchg
push
xor
dec
cmc
fiadds
js
inc
sbb
mov
jo
mov
pop
mov
mov
scas
pop
cmc
pusha
push
cltd
dec
jno
xchg
ficoml
bound
imul
and
jno
stos
or
jmp
sarb
and
adc
ret
xlat
repnz
loope
adc
jl
jmp
adc
je,pt
push
pop
in
and
out
mov
pushf
inc
lods
mov
loope
in
mov
xor
pop
loope
inc
inc
int
insb
dec
loopne
dec
into
mov
jmp
push
and
sbb
push
mov
sbb
add
cmc
stos
sub
xor
fisubs
mov
mov
push
push
inc
lret
sbb
rcrl
push
fdivrp
in
fiadds
push
mul
inc
int3
sbb
jns
mov
ret
aas
push
in
jbe
mov
and
stc
mov
aam
jo
xor
shr
outsl
int3
adc
repz
leave
pop
enter
rolb
dec
xor
std
adc
xor
xchg
lods
lret
mov
into
cmpsb
sbb
mov
cwtl
adc
aas
daa
xor
push
push
jecxz
pop
test
sahf
xchg
loope
mov
in
ret
cltd
xorb
adc
push
aad
int3
testl
and
addr16
jmp
inc
mov
ljmp
lret
inc
fnstsw
mov
mov
loop
dec
inc
loopne
cmp
sub
stos
mov
pop
loope
aas
inc
enter
sbb
xor
into
pusha
inc
lret
sti
iret
insb
push
mov
mov
sub
aas
aaa
xchg
xchg
sub
mov
inc
jne
hlt
xchg
in
jmp
rcrb
mov
test
dec
stos
adc
cmpsl
jmp
cmp
arpl
mov
lret
pop
jae
push
jg
jne
cmp
mov
sbb
or
mov
dec
cmp
push
mov
stc
lahf
int3
dec
mov
frstor
jns
mov
jmp
jne
mov
outsl
aas
jmp
popf
in
cmp
mov
cmp
xchg
subl
push
push
cmpsl
xchg
lds
xor
test
inc
pop
dec
loopne
loop
enter
shl
arpl
inc
mov
cmpsl
cmp
cwtl
lcall
sub
fwait
in
stos
inc
stc
add
gs
or
lret
leave
sbb
cmpsb
mov
push
or
sub
push
dec
sub
jl
loope
jno
cmp
das
pop
xlat
fucom
cmp
out
sub
lock
lea
mov
push
xor
and
fnsave
mov
cld
push
adc
lods
push
add
sbb
or
fcomps
out
jo
jg
pop
std
jp
push
loop
push
fcmovnu
test
sbb
lds
mov
mov
sahf
mov
adcl
insb
cmp
lret
push
adc
mov
stos
loopne
mov
pop
into
jmp
fistps
in
jp
lods
mov
imul
add
mov
mov
dec
jmp
rcrb
sub
jg
cmp
adc
jmp
rorl
lock
lcall
push
test
xorl
test
cld
fwait
mov
sbb
inc
jmp
dec
aaa
fists
xor
test
pop
pushf
mov
fists
les
imul
jmp
cmp
pop
mov
push
loopne
mov
imul
jmp
push
and
insb
out
fidivrl
mov
rorl
lods
and
or
lret
mov
sahf
xchg
jne
pop
into
movsl
push
popf
mov
leave
push
cmpsb
push
adc
fisubrs
ret
test
loopne
xchg
pop
inc
mov
addl
inc
nop
rcll
sbb
mov
pop
push
hlt
inc
xor
push
loopne
xor
jae
dec
mov
add
orb
and
fwait
or
inc
push
sbb
aaa
xor
outsl
shrl
cmp
mov
lods
xchg
and
mov
jb
enter
jno
not
push
loopne
lods
pop
mov
mov
and
popf
pop
mov
jmp
in
push
fstp
adc
test
ret
sub
pushf
fcmove
push
and
mov
sub
adc
jns
shlb
outsl
mull
xchg
cli
stos
lahf
loope
fwait
jno
cmp
mov
sbb
mov
mov
aam
test
bound
jne
xchg
inc
pusha
aam
jmp
shlb
pop
mov
mov
add
aaa
push
jmp
push
sbb
out
push
dec
popa
mov
enter
aas
sbb
jl
sarb
sub
push
ret
popa
add
mov
mov
mov
jnp
hlt
rcrb
xchg
pop
lret
jmp
loop
push
sub
outsb
xorl
out
insb
push
sbb
jmp
cmp
outsb
sub
mov
dec
dec
int3
push
push
cli
pavgb
xor
les
sub
or
add
pop
lock
sbb
pop
and
lret
mov
iret
dec
lea
movsb
jb
or
fwait
pop
dec
jle
sbb
shlb
js
jmp
ljmp
pop
sbb
testb
insb
inc
cmp
mov
push
dec
sbb
jb
negb
scas
push
scas
and
jmp
xor
jmp
cmpsl
sbb
sub
loopne
mov
addr16
insl
mov
mov
add
ljmp
ror
movb
dec
mov
dec
push
stos
sub
xchg
sbb
fsubrs
cmpsb
dec
xor
sub
lds
dec
sahf
mov
int
dec
js
or
pushf
push
xchg
xor
sub
cltd
out
dec
ret
loopne
lea
loope
inc
fcompl
ss
mov
insl
jp
jle
shrl
adc
fwait
inc
ret
into
xlat
insb
jb
and
cli
fwait
addb
das
xchg
sbb
push
stc
mov
insb
fs
pop
scas
cli
cltd
lea
push
fistps
mov
mov
and
mov
sbb
cltd
lds
mov
cltd
outsl
jl
decb
mov
andl
mov
fsts
pop
aaa
gs
jp
mov
or
jmp
int
xor
cltd
ljmp
sahf
cltd
pusha
lahf
and
out
jge
adc
sbb
pusha
mov
cltd
inc
outsb
and
xchg
das
call
mov
xchg
xchg
cmpsl
or
xor
mov
adc
pushf
push
in
cmpsb
jecxz
fisubrs
js
out
rcll
nop
pop
pop
mov
cltd
push
dec
jle
clc
cmp
fcompl
pop
nop
fcmovnu
adc
add
jne
xchg
stc
cmp
call
scas
fldl
stc
add
add
shll
or
or
into
xchg
and
cltd
mov
mov
lret
cltd
pop
mov
or
xchg
mov
cltd
mulb
pop
xlat
xor
inc
mov
adc
sbb
call
pusha
dec
mov
js
cld
push
fxch
cmp
cltd
inc
mov
mov
pop
sub
adc
fwait
and
clc
outsl
jmp
sti
in
cmp
gs
sub
push
add
jno
inc
xchg
push
jnp
cltd
mov
stos
xor
cld
fs
dec
call
mov
cltd
pop
sbb
out
push
insb
cmp
inc
jnp
inc
xor
mov
out
jge
test
mov
dec
dec
repz
scas
mov
push
in
mov
cltd
stos
adc
xor
insb
or
pop
mov
dec
push
push
cltd
stos
aam
mov
cltd
jmp
daa
insl
js
jp
cltd
and
lret
xor
mov
and
cltd
push
scas
roll
nop
or
out
xlat
into
dec
cltd
pop
mov
pop
lock
imul
xchg
fcmovnb
jae
sub
or
push
cltd
sbb
ret
je
mov
xor
and
clc
es
mov
sub
call
dec
rcr
jl
lea
test
or
sub
cltd
sub
or
test
jp
dec
sbb
or
sbb
jnp
cltd
pop
sub
pop
add
sti
js
fnstenv
fmull
lods
ja
add
inc
lret
adc
mov
insb
mov
and
sub
lea
test
fcoms
pop
ret
pop
push
cltd
or
aas
or
sbb
mov
aam
xchg
sbb
pop
cli
test
cltd
or
int3
fistl
call
data16
or
shlb
add
xor
cltd
push
push
fadds
push
sbb
aad
mov
imulb
cltd
repnz
popa
and
aas
pop
mov
out
test
xor
out
pop
cltd
adc
xlat
bound
adc
lods
lods
test
pop
cmpsl
outsb
xchg
sbb
cltd
pop
call
xchg
addl
fldenv
in
call
bound
mov
imul
mov
sub
inc
push
mov
setns
xchg
pop
and
push
cmpsl
sbb
xor
lret
cltd
daa
xchg
inc
jo
pop
cltd
inc
ja
shlb
mov
fsts
outsb
icebp
push
or
add
std
adc
cltd
pop
in
cmpsl
daa
hlt
rcrl
in
int
cmp
popa
push
icebp
aad
ja
xor
xor
sti
mov
cltd
push
cmp
pop
cltd
or
mov
sub
pop
mov
add
mov
mov
cltd
cwtl
mov
inc
flds
xchg
inc
lret
adcl
ficoml
or
xchg
xchg
xchg
dec
cltd
fnstcw
cmp
sub
pop
sti
ljmp
cld
dec
mov
test
sbb
mov
arpl
mov
jo
ror
and
jnp
es
mov
insb
xchg
add
in
push
push
je
lret
outsb
pop
adc
jle
cltd
and
pop
mov
out
pop
adc
pop
jecxz
push
adc
xchg
mov
and
out
outsl
add
sbb
adc
andl
loop
pop
lods
popa
jecxz
pop
scas
cmp
pop
sbb
mov
xor
xor
inc
pop
cltd
pop
inc
js
mov
bound
aam
cltd
sbb
sbb
arpl
adc
rorl
test
pop
sub
dec
pop
loope
out
mov
imull
cs
mull
sbb
imul
jmp
add
sbb
add
fwait
cs
inc
mov
add
sbb
dec
out
dec
or
mov
repz
pop
cltd
movb
push
adc
mov
stc
push
or
cltd
clc
push
sbb
mov
sbb
inc
adc
dec
adc
mov
cltd
popf
mov
lods
out
xchg
lock
push
sub
fcomps
shrl
mov
jnp
inc
pop
adc
mov
jge
sbbb
jne
stc
pop
cli
lahf
cltd
pop
pushf
mov
out
insb
xchg
jb
bound
mov
mov
mov
mov
pushf
stos
add
xor
jmp
ret
popf
scas
sub
or
pop
fistps
aad
cmp
cltd
repnz
mov
jno
pop
mov
int
push
out
stos
sub
es
into
icebp
mov
dec
lods
movsl
xor
out
add
add
cltd
fcmove
cld
ss
icebp
cs
dec
sti
negl
in
xchg
xor
cltd
or
leave
push
mov
add
mov
cltd
out
xor
pop
adc
and
lods
cmp
or
fisubl
mov
out
ljmp
mov
js
adc
lods
insl
xor
jne
xor
ss
jge
mov
rcrb
cld
dec
sub
insb
scas
loopne
push
sarb
ret
mov
and
pop
jmp
xchg
aad
cs
clc
sub
mov
inc
cmp
jne
cmp
dec
imul
inc
pop
and
jae
sub
cltd
lock
mov
fsts
cltd
out
ret
push
fdivs
pop
fdivl
add
sub
imul
aam
loope
cltd
rolb
inc
mov
lret
adc
jnp
cmp
mov
pop
pop
mov
or
and
cmp
sub
pop
dec
jb
in
adc
mov
divl
inc
bound
push
cltd
loopne
mov
sbb
jg
notl
mov
incl
shll
jae
dec
repz
mov
xchg
cltd
cld
fs
popf
lds
inc
sbb
out
outsl
xchg
cltd
pop
mov
loop
add
shll
add
jo
mov
add
outsb
mov
mov
mov
jg
jnp
jo
lock
loope
push
mov
push
mov
insl
cltd
and
xor
mov
or
vcvtss2si
jo
cmpsl
xchg
bound
adc
mov
hlt
gs
out
fnstsw
jne
das
or
out
popa
adc
arpl
cld
addl
sbb
scas
pop
pop
inc
fisubrs
repz
or
jecxz
sbb
test
xchg
adc
pop
pushf
shlb
cmp
or
adc
mov
jnp
or
je
cli
inc
push
sbb
push
jno
adc
or
adcb
mov
sbb
inc
xor
les
xchg
cmc
jo
xor
sbb
push
mov
insb
in
adcb
adc
outsl
loope
sub
jge
repz
inc
adc
sbb
xorl
clc
pop
cmp
stos
shlb
sub
pop
xchg
arpl
add
mov
fimuls
sbb
pop
adc
add
adc
mov
aaa
push
jmp
in
lock
add
cltd
jno
loope
mov
scas
mov
push
std
fiadds
mov
push
js
mov
pop
adc
pop
xchg
rep
js
popf
lret
shll
lock
sbb
sub
add
loope
arpl
adc
mov
and
fcmovne
jle
stos
test
fwait
lock
aaa
xchg
icebp
sahf
bound
inc
mov
test
dec
pushf
aaa
push
arpl
shll
push
aas
ret
inc
xor
ss
push
push
iret
dec
jecxz
jbe
movsb
fsts
push
mov
adc
call
push
sbb
mov
movsl
dec
cmp
jb
stos
inc
cmp
mov
jb
mov
xchg
cmp
cmp
adc
jl
mov
push
pushf
and
xor
bound
divb
push
jne
pop
int3
inc
sti
int3
mov
jmp
inc
shlb
pop
pop
mov
mov
mov
jo
inc
inc
int3
movsl
or
leave
push
mov
mov
sbb
jl
int3
test
inc
xor
pusha
and
das
sub
ret
or
adc
sbb
in
mov
dec
imul
aas
mov
dec
hlt
and
inc
loop
ljmp
add
push
dec
mov
inc
in
sub
dec
stos
jle
lea
xor
inc
mov
xchg
cld
sub
xchg
loopne
sbb
and
int
scas
int3
or
ficompl
mov
mov
pop
cmp
stos
dec
es
pop
test
cmpsb
cmp
loop
test
mov
pop
and
int
add
cld
sti
push
ret
orl
adc
cltd
cli
lock
movsl
jno
testb
pushf
sub
add
test
into
fisubs
out
js
stos
ds
mov
add
xchg
sbb
mov
push
cmpsb
pop
adc
into
cmp
test
mov
adc
std
push
cwtl
mov
outsl
fs
arpl
xchg
imul
or
inc
mov
cmp
mov
clc
ja
xor
jb
pop
dec
jmp
leave
fcmovnb
mov
sub
push
sub
pop
sub
inc
movsl
pop
rolb
adc
mov
popl
push
aam
mov
jmp
fnstsw
jo
icebp
mov
outsl
add
adcb
push
cwtl
fs
xor
ss
testl
jmp
jge
cli
pop
dec
fsubp
aaa
iret
insl
sarb
cld
and
lods
sbb
mov
inc
or
insb
popa
rclb
sub
pusha
xlat
add
cmp
dec
fwait
sahf
and
ss
inc
icebp
test
mov
lret
mov
cmc
pop
add
repnz
mov
jmp
insl
cs
or
fnstcw
sbb
cmp
add
addb
insb
or
push
jmp
mov
inc
pop
cld
and
arpl
jmp
sub
sub
out
push
add
pop
jbe
cmp
add
cmp
push
sbbb
int3
rcll
mov
dec
adc
outsl
pop
arpl
into
mov
cltd
or
fisubrs
push
je
inc
incl
scas
addr16
cwtl
outsb
pushf
stc
sub
shlb
bound
cltd
mov
scas
jg
cltd
into
out
pop
mov
pop
fwait
adc
out
sbb
push
sub
cltd
gs
jo
lds
clc
dec
fisubrl
adc
testl
push
test
sahf
xchg
popf
iret
enter
mov
and
sub
pop
push
jno
cmp
cltd
pop
push
jae
adc
jp
aas
test
adc
cltd
pextrw
pop
movsl
xor
xchg
inc
cltd
out
inc
aad
int3
ds
cltd
repnz
push
mov
sbb
arpl
test
dec
add
test
cltd
adc
stc
mov
popf
jno
sub
and
clc
sti
cltd
test
sbb
adc
cmp
jmp
ficompl
dec
xchg
les
faddp
sbb
inc
aad
lock
mov
rolb
hlt
pop
cltd
je
stc
imul
insb
sbb
pop
loopne
inc
cltd
xor
out
es
pushf
repnz
dec
stos
sbbb
ficomps
sub
adc
mov
sub
cltd
pop
jcxz
insb
mov
pop
fwait
pop
movsb
jl
leave
scas
cmpl
jecxz
scas
push
das
dec
mov
jns
push
sarl
notb
jge
mov
pushf
mov
ret
jns
dec
scas
xor
lret
outsb
inc
xchg
scas
mov
aad
sbb
stc
test
cltd
add
icebp
sbb
jge
cltd
xor
jns
cltd
cmp
sbb
outsb
jno
rcrl
scas
mov
mov
cmp
cltd
fwait
xlat
jl
xchg
hlt
push
and
in
gs
test
cltd
insb
and
push
fs
enter
ficompl
inc
inc
and
fmull
sub
xor
jg
pop
into
aas
cmpsl
sti
adcl
push
repnz
enter
pop
mov
sub
cltd
pop
movsl
jmp
dec
xchg
pop
cltd
and
aas
push
xchg
adc
mov
pop
dec
mov
pusha
addl
dec
lret
and
shrl
cltd
insl
dec
pop
popl
negl
xchg
mov
test
sub
jne
rcrl
cltd
leave
jp
enter
out
lahf
popa
cwtl
das
arpl
stos
add
aad
inc
sbb
and
jbe
xchg
add
subl
xchg
fcompl
sub
ss
in
dec
in
mov
lds
jmp
jo
shlb
rcrb
in
rorl
jno
ljmp
xchg
outsl
push
dec
cwtl
cltd
sub
fstl
pop
cltd
dec
mov
iret
mov
mov
pop
in
dec
stos
cltd
dec
xor
cltd
popa
xor
icebp
fidivs
cmpsb
int
adc
push
arpl
scas
and
and
test
jl
das
andl
xor
xor
shlb
and
sarl
dec
pop
enter
mov
loopne
sub
add
scas
jne
std
mov
jnp
stos
jae
adc
cltd
ret
test
pop
add
js
cltd
cmp
dec
mov
inc
xchg
ficomps
je
or
sub
nop
fldcw
cltd
sbb
lock
out
cmpsl
lcall
js
mov
or
loope
cltd
mov
test
mov
lock
adc
cltd
stos
jno
cmpl
add
jmp
pop
sbb
push
or
or
or
fs
dec
jmp
fwait
out
outsb
ljmp
add
into
aas
cmp
inc
shll
mov
stos
mov
fisubl
ficoms
loopne
jne
xor
test
mov
mov
jne
lea
int
addr16
sub
test
mov
subl
pop
mov
push
mov
sbb
mov
add
stos
outsb
in
call
out
cmp
adc
inc
mov
add
aas
outsl
out
js
jnp
mov
stos
add
int
or
int
dec
gs
lcall
jns
or
movsl
bound
pop
jmp
mov
cmp
push
xchg
cli
push
lcall
rcrl
loope
inc
jb
sub
fs
addr16
imul
mov
js
into
popf
out
mov
daa
pop
mov
mov
cmp
xlat
mov
and
mov
pushl
jl
in
ja
and
cmp
fstpl
js
xchg
add
test
push
jmp
mov
push
and
rorl
ds
adc
mov
fmuls
sub
and
sbb
adc
sbb
mov
mov
push
lahf
fsubs
pushf
adc
push
inc
jb
or
pop
cld
aas
mov
mov
pop
mov
ss
rcr
or
adc
mov
mov
mov
sub
lods
xchg
pusha
sbb
or
jmp
rol
loopne
mov
adc
xchg
mov
ljmp
pop
xchg
jbe
sahf
xchg
mov
jmp
xor
jmp
adc
mov
jmp
sbbl
addb
xor
lock
cmp
cwtl
dec
loopne
loop
dec
es
cmpsl
mov
ja
mov
sub
lock
pop
jns
mov
idivl
push
jb
xor
xor
enter
test
test
cmp
xor
in
mov
js
lret
das
push
push
jmp
xlat
inc
mov
out
hlt
pop
jl
fwait
dec
lea
xchg
pop
loopne
and
mov
xor
and
mov
jmp
jo
fimull
add
imul
lods
mov
in
aaa
dec
or
pop
lret
mov
pop
jno
fs
shlb
stos
jbe
add
and
push
mov
jae
push
or
lret
jmp
or
or
rol
loop
ja
movsb
sbb
xchg
gs
xchg
cli
jg
jmp
cmpsl
lock
dec
jb
shr
cs
push
lea
inc
inc
push
sbb
movsb
les
mov
xchg
xor
dec
push
popa
xchg
xchg
adc
stc
leave
jecxz
mov
xlat
rcl
mov
push
xchg
int3
into
and
jp
arpl
mov
aas
mov
sub
fmull
lcall
fistps
jb
fwait
arpl
in
jg
inc
or
jae
into
xchg
pop
pop
dec
loope
mov
rcrb
pushf
fsubp
add
inc
pop
jle
push
filds
mov
mov
int3
rcrb
mov
cwtl
dec
lret
inc
mov
and
mov
and
fldcw
cld
inc
inc
jecxz
movsl
iret
in
mov
jmp
data16
ja
add
gs
sub
test
icebp
in
push
lods
out
lret
mov
jnp
jmp
cs
mov
xor
stc
cmc
popf
inc
sub
add
add
outsb
test
push
jb
jae
jl
push
and
push
lock
push
xchg
repz
ss
sub
cs
sbb
call
jmp
jmp
pop
mov
lods
mov
rcll
xlat
xor
jne
mov
cmp
sub
pop
ficoms
add
pop
jle
popf
subl
mov
mov
lea
dec
movsl
adc
cmpsb
nop
test
xchg
and
xor
jo
xor
orl
pop
mov
push
sbb
shl
adc
dec
pop
dec
mov
stos
daa
pop
sub
icebp
mov
pop
xor
cmp
jns
mov
dec
divb
mov
call
mov
lcall
rcll
inc
stos
out
xchg
cmp
std
adc
shl
mov
ret
out
push
test
add
cmc
pop
xchg
push
and
push
add
sub
adc
je
loop
sub
push
imul
mov
xchg
push
inc
inc
pushf
jmp
push
mov
jecxz
push
imul
jns
fcomps
sahf
jnp
xlat
pop
stos
fidivl
ljmp
or
hlt
cwtl
in
test
cmpsl
inc
sub
jg
mov
test
adc
dec
jmp
jno
stos
cmp
imul
icebp
jle
shlb
cmp
adc
xchg
jecxz
movsl
mov
in
fld
push
vmwrite
inc
jg
in
jle
call
cwtl
cmpsb
cld
or
stc
js
push
int
loopne
sbb
push
sbb
mov
sbb
jmp
repz
scas
or
push
fisttpll
push
popf
andl
jg
lock
loope
mov
cmp
inc
dec
cmp
push
cmpsb
stos
into
sbb
mov
push
movsl
lock
adc
call
stos
push
dec
push
cmp
xchg
popa
negl
xor
pop
fstps
aam
or
mov
imul
std
into
movsl
adc
lock
lds
and
add
das
mov
and
sahf
cmp
sub
daa
jge
add
mov
push
xor
pop
rcr
jbe
jl
aaa
and
stc
pop
xchg
call
mov
adc
sqrtps
ss
pop
sub
outsl
aaa
or
jmp
call
leave
std
jg
adcb
sbb
stos
push
pop
aam
cmp
lahf
inc
xlat
adc
cmpsl
adc
sub
fldcw
sub
sub
jle
mov
push
pop
test
mov
and
add
pop
je
push
arpl
fimull
jmp
into
sub
add
sub
lods
adc
enter
in
sbb
pop
stc
lock
inc
sahf
js
and
jmp
jnp
jecxz
cmc
into
and
pop
adc
in
int
fldcw
shl
mov
xor
rorl
sbb
lcall
lea
jmp
pop
call
movsl
xor
push
jle
pushf
cmc
divb
mov
scas
adc
mov
fisttpll
mov
pushf
adc
mov
mov
jbe
xchg
mov
xchg
mov
jns
jl
jecxz
pop
mov
inc
frstor
adc
mov
shrb
pop
es
loopne
rclb
cmp
std
vmwrite
fisubrs
hlt
rcrb
aam
jns
jmp
ret
mov
mov
dec
and
mov
rolb
and
shlb
fstpl
jae
xor
adc
ret
add
cltd
push
push
add
out
mov
push
jmp
add
mov
add
out
loopne
jno
imul
lcall
aad
sub
sub
call
cwtl
fstps
xchg
subl
adcl
sub
inc
jne
out
aas
in
arpl
inc
pop
mov
and
call
cmp
pop
lock
sbb
cmc
pop
xchg
gs
mov
dec
cmpsl
mov
and
jb
cmp
mov
mov
pop
mov
sub
or
push
cmc
jae
mov
xchg
pusha
cmpsb
xor
pop
push
in
sbb
add
push
movsb
popa
pop
sub
dec
and
add
mov
mov
fsubrs
lahf
test
mov
push
mov
jns
mov
int3
dec
mov
or
or
cmp
and
jmp
dec
scas
and
jns
jmp
xchg
in
js
ds
cmpsl
and
add
ror
arpl
les
jge
jg
lods
daa
mov
and
adc
adc
lods
aam
or
adc
jp
dec
lret
mov
imul
ss
fstps
and
mov
mov
mov
and
dec
inc
arpl
push
inc
mov
aas
shll
dec
sub
xchg
mov
pop
ds
ja
pop
mull
cmp
dec
and
push
sahf
loope
mov
sbb
mov
mov
popf
add
jg
mov
fwait
insb
shlb
xchg
mov
inc
adc
js
test
std
mov
mov
add
sub
arpl
lods
call
add
shr
lcall
pop
adc
outsl
push
lods
rorl
cmc
dec
cmp
add
inc
dec
inc
push
aaa
push
mov
mov
lea
pop
rolb
xchg
mov
jo
aas
xor
xor
add
cmpsb
fsubrp
sbb
fsubrp
mov
das
cld
adc
push
xchg
mov
pop
in
jmp
sub
je
add
sub
dec
or
pop
jge
lret
sbb
adc
nop
dec
mov
add
test
sub
sbb
xchg
idivl
movsl
inc
inc
sbb
popf
or
pop
xchg
stos
xchg
fdivl
enter
test
mov
lahf
xchg
stos
lret
loope
ret
push
test
push
aam
loopne
les
ret
cmp
lock
and
fiadds
dec
test
mov
out
xchg
xor
cmp
scas
arpl
rcll
int3
push
js
lods
mov
and
push
xchg
arpl
out
inc
bound
cld
imul
enter
insl
inc
pop
mov
xchg
push
or
jmp
js
shll
push
jp
sub
lahf
in
lret
outsl
cmp
dec
leave
and
push
and
popf
mov
jmp
sub
fsubp
jmp
or
xlat
mov
xor
into
mov
or
imulb
sbb
jne
aas
adc
mov
aaa
fsubrs
mov
mov
xchg
hlt
adc
push
jnp
sub
jb
inc
stos
sbb
cs
subb
jmp
fs
push
add
pop
jmp
jmp
mov
jmp
sub
push
sub
jae
sbb
stos
add
sbb
mov
enter
in
mov
inc
inc
mov
jge
cmp
jl
xor
cmp
cwtl
cmp
mov
pop
xchg
and
scas
and
popa
xor
mov
and
xchg
mov
cmp
insb
ja
aam
sbb
mov
xor
inc
jmp
mov
jnp
fnstenv
mov
sbb
sbb
add
scas
outsb
scas
jp
inc
in
xor
mov
addr16
dec
pop
and
push
jle
push
fidivl
or
movsl
sbbb
fsubrp
jp
sbb
scas
fwait
sub
add
adc
sub
test
push
sbb
sarl
inc
fldl
adc
push
cmp
add
mov
jg
dec
lahf
xor
stos
jmp
std
xchg
je
push
sub
sbb
mov
fisubrs
lock
adc
outsl
sti
insl
sub
sahf
call
push
pop
mov
iret
mov
adc
mov
adc
adc
or
jmp
in
shrb
push
mov
mov
iret
xchg
popf
mov
push
xchg
cmpsl
jmp
icebp
pop
inc
adc
and
dec
imul
fsubl
xor
rcrl
shlb
lock
mov
mov
mov
outsb
add
cmc
xor
jmp
inc
insl
push
dec
inc
inc
les
pop
dec
inc
lods
loope
loop
icebp
jae
stos
push
lock
mov
arpl
mov
adc
add
and
xor
mov
or
pusha
aaa
push
mov
mov
int
pop
int
add
cmc
jg
add
mov
clc
mov
pushf
sbb
sbb
fsubr
xchg
jmp
mov
rorl
fmul
xor
daa
jae
cmp
mov
sbb
sbb
jmp
push
stos
mov
pop
testl
and
hlt
vpavgb
jb
mov
cmc
sarb
stos
popf
mov
and
inc
sbbb
inc
pop
jae
mov
outsb
pop
jge
pop
sbb
jmp
jmp
adc
fisubrs
or
add
ljmp
sbb
cmp
test
popf
push
stos
call
pop
mov
xchg
test
inc
and
cmp
mov
mov
mov
push
int
test
aam
imul
in
or
repnz
dec
jns
push
cmp
leave
sbb
mov
sub
sti
jge
lea
xchg
jmp
nop
pop
xor
lods
enter
lock
dec
xor
popf
ret
dec
push
lcall
stos
inc
lahf
test
popf
push
arpl
adc
and
jge
mov
in
sbb
lret
mov
dec
sti
stos
sbb
and
jae
pop
inc
popa
mov
sub
push
stos
mov
mov
adc
sbb
lcall
jmp
sub
mov
dec
pop
scas
mov
js
int
xor
iret
adc
or
add
dec
sub
gs
mov
cwtl
ljmp
push
and
stc
cltd
fbstp
xchg
divl
push
sbb
aas
and
mov
xor
adc
shll
cmpsb
aam
mov
mov
jge
repnz
adc
aas
cs
mov
arpl
out
mov
sub
push
sub
and
cmp
mov
xchg
in
pop
icebp
popf
cltd
int3
dec
or
add
and
push
ret
pop
insb
imul
stc
movsl
cwtd
outsl
scas
pushf
cmp
fwait
es
fdivrs
push
cltd
jl
inc
mov
cltd
out
outsb
loopne
mov
cwtd
xchg
pop
cmp
cmc
test
adc
xor
push
push
test
fwait
jmp
out
inc
into
lds
rcll
and
xor
inc
cltd
scas
ret
fldenv
scas
inc
testl
jp
cltd
pop
add
imul
inc
lods
mov
adc
add
cltd
out
mov
xchg
jmp
lds
scas
pop
mov
ret
cltd
call
cltd
test
mov
repnz
mov
loopne
fcomip
leave
rcll
iret
stc
lods
testl
add
fwait
or
inc
cmp
xchg
in
cli
out
test
test
hlt
cs
loop
add
scas
fadds
add
and
pop
mov
jp
inc
aam
push
out
pusha
lahf
or
jg
cmp
xchg
cltd
fldcw
scas
outsl
mov
mov
pop
movsl
lods
stc
aad
mov
pusha
add
dec
pusha
pop
cltd
insl
out
dec
fcmovnbe
pop
push
or
push
lock
cltd
aaa
jns
in
dec
add
cltd
jbe
pop
mov
mov
js
or
data16
cs
mov
outsb
adc
cmp
insl
pop
enter
addr16
je
cltd
call
lods
sbb
mov
pop
scas
adc
xor
cmpsb
and
inc
cltd
mov
pop
rcll
xchg
popa
cltd
mov
push
xchg
inc
and
adc
cltd
sbb
popf
jge
adc
cltd
pop
in
adc
pop
pop
inc
stos
cltd
mov
mov
and
cmp
cltd
lods
mov
rcrl
clc
sbb
dec
fwait
add
jnp
ret
test
negb
mov
out
icebp
pusha
xor
pop
jge
and
pop
mov
out
icebp
xchg
std
cmpsl
enter
sub
in
dec
test
cltd
subl
inc
incl
sbb
xor
mov
and
inc
mov
sbb
mov
cltd
mov
test
in
lahf
in
fcompl
icebp
cltd
clc
inc
mov
aam
ret
pop
cmpsb
insb
scas
out
and
jge
xchg
mov
adc
ret
push
shll
jno
pushf
cltd
in
clc
mov
jmp
add
lock
cltd
enter
and
xchg
pusha
icebp
add
fimull
dec
jbe
or
cltd
push
mov
rclb
cmp
mov
push
shlb
mov
cmpsb
mov
pop
rcrl
inc
push
dec
pop
or
xchg
cltd
jne
insl
arpl
push
cltd
pop
jecxz
cmpsb
xor
cmp
jnp
mov
cltd
or
or
icebp
and
cltd
sub
in
testl
lock
sahf
or
aas
cli
test
mov
cltd
mov
or
pop
pop
xor
fcmovbe
cmpsl
shlb
shrb
pop
cwtl
xchg
inc
lret
aad
jo
pop
cltd
hlt
lahf
or
outsb
adc
insb
cltd
pop
mov
je
cltd
add
test
loope
mov
and
cmpsb
mov
cltd
rorb
inc
and
mov
adc
outsl
popf
push
mov
mov
adc
cmp
adc
lret
shll
daa
jmp
xchg
mov
and
inc
iret
or
dec
cltd
leave
ljmp
nop
fstpl
fidivrs
dec
xchg
in
xchg
lahf
cltd
xchg
pop
test
out
cltd
xchg
jp
xchg
lds
xchg
pushf
lea
mov
movq
in
lcall
in
or
out
loopne
sub
sub
pushf
inc
dec
jecxz
lock
mov
mov
add
jp
les
loop
cltd
cmp
fstl
adcb
frstor
cmovo
inc
out
ret
jne
cmpsl
push
les
mov
or
inc
xor
pusha
pop
sbb
daa
mov
dec
repnz
jg
jne
xor
out
adc
or
cltd
shl
mov
jmp
push
cltd
jmp
pop
jno
jns
cltd
in
mov
xlat
cltd
mov
jge
cmc
push
repnz
lock
in
jnp
popl
mov
out
call
sub
dec
addb
xchg
adc
cmp
push
jo
jnp
inc
add
mov
cltd
inc
out
sbb
popa
xchg
add
fwait
movsl
mov
pop
adc
pop
push
scas
push
cmp
outsl
stc
mov
sbb
mov
pop
jmp
mov
pusha
add
dec
pushf
inc
stos
insb
cltd
push
xchg
xor
jle
imul
sub
sbb
push
pusha
cli
push
cmpxchg
lods
sub
leave
push
cmpsl
sbb
add
cli
test
or
arpl
dec
xchg
jecxz
out
sub
jg
popf
mov
mov
and
xchg
cltd
inc
jmp
icebp
push
out
mov
sti
fs
push
shlb
es
movsl
loopne
xor
mov
pushf
xchg
fs
adc
fwait
les
cmp
xor
inc
lcall
lret
cmp
dec
sbb
movsb
cld
cltd
dec
daa
sbb
or
pop
pop
shr
pop
jl
mov
fsubl
outsl
je
scas
stc
mov
sub
xor
cltd
sahf
xchg
sub
lock
lret
mov
mov
pop
sbb
cmpsl
cltd
mov
test
jmp
mov
fcompp
outsl
mov
cmp
cltd
adc
cmc
stos
sub
fwait
cmp
dec
xchg
mov
jo
push
adc
push
mov
js
fldcw
lcall
mov
push
cltd
ret
lret
adc
add
ds
pop
push
pop
sbb
or
fs
ret
inc
mov
cwtl
dec
jb
insl
cltd
ds
cltd
pop
inc
inc
pushl
push
sbb
lock
cmp
jle
dec
cltd
mov
je
int3
push
sbb
dec
xchg
lea
imulb
mov
cltd
pop
stc
int
pop
sub
jmp
mov
add
aas
adc
repz
and
pusha
fiaddl
add
inc
mov
mov
aam
sahf
cwtl
gs
adcl
xchg
adc
cltd
outsb
jmp
jmp
mov
lahf
and
xor
cmp
nop
cltd
inc
cmc
push
in
daa
cld
cmp
mov
ficomps
sbb
cltd
add
movsl
fnstsw
or
stos
cld
stos
and
pop
and
xchg
cltd
cli
or
js
cmpsb
adc
or
cmp
pushf
pop
cltd
sbb
dec
mov
cmpsl
xor
or
lea
xor
dec
lahf
pop
mov
dec
jns
jg
in
sub
daa
lea
out
cld
stos
pop
ja
cltd
mov
sub
push
shl
add
adc
aad
mov
call
push
lret
hlt
lds
push
and
stos
fcoml
cmp
add
push
jg
fwait
addl
leave
push
push
mov
loopne
cmp
sub
dec
pop
xchg
loopne
andb
add
sub
aas
rcrb
cmp
shlb
mov
jne
and
sub
cltd
push
mulb
rcll
stc
xorb
lods
ss
mov
push
mov
test
or
ret
cltd
dec
lret
push
xor
aad
sti
lret
inc
notb
divb
cmp
pop
and
jg
jo
mov
dec
fwait
jmp
cmc
jne
xchg
clc
inc
mov
enter
lods
icebp
add
push
test
icebp
mov
lods
test
sub
lea
inc
mov
dec
add
fwait
inc
mov
mov
stos
mov
fwait
lds
gs
movsl
aam
xchg
xchg
cmpsb
cmp
pop
inc
lret
pop
fcomi
in
dec
mov
pusha
or
fcmovnbe
lahf
imul
jnp
cmpb
push
out
les
xor
push
shl
sub
daa
xchg
xchg
pusha
sub
cmp
cmc
jle
les
pop
sarl
cli
push
loop
andb
lock
lcall
int
movsb
arpl
or
and
add
mov
xchg
cmp
jnp
shlb
int
aas
mov
inc
pop
push
outsl
in
push
and
ljmp
jmp
add
push
jl
into
sti
xchg
add
sarl
stc
jb
adc
jg
adc
mov
leave
xchg
add
pop
lret
insl
sbb
repnz
xor
js
test
shlb
ret
adc
das
xchg
fnstsw
or
adc
lcall
mov
ljmp
jge
sbb
sbb
nop
push
cmp
or
add
mov
add
sbb
push
orl
arpl
xor
jmp
bnd
fdiv
aaa
xor
aam
inc
incl
push
and
scas
mov
dec
addb
mov
pop
ror
test
xchg
jnp
adc
jl
or
iret
shr
insl
mov
push
popf
push
outsl
and
dec
gs
sbb
mov
push
and
inc
add
push
mov
xchg
sub
int
pop
enter
adc
mov
repnz
jmp
fldl
sahf
call
fwait
jbe
stos
or
jne
aad
scas
jae
dec
sbb
jmp
ja
push
aaa
mov
fists
jo
jae
push
or
aad
push
sub
and
push
lock
ja
dec
scas
mov
andl
fwait
mov
int3
xchg
daa
cwtl
jns
pop
jmp
jno
sub
mov
mov
je
hlt
push
sub
shlb
sub
cmp
lea
je
jne
stc
mov
mov
stos
loope
xor
fwait
push
sbb
in
or
stos
jmp
pop
inc
enter
mov
adc
in
arpl
icebp
fdivl
ljmp
mov
add
lret
aam
fwait
loopne
jmp
sbb
aam
xor
movsb
and
mov
jg
je
sahf
clc
outsb
sar
xor
inc
jmp
push
sbb
lahf
and
cld
pop
je
and
add
in
jbe
jb
mov
dec
movsb
inc
aaa
divb
out
movsl
adc
or
adc
cmp
mov
fcmovb
jmp
xor
aam
lea
jmp
cmp
or
mov
pop
lret
stos
xor
jno
add
inc
dec
ret
sbb
jecxz
aas
dec
adc
mov
ror
dec
sbb
sub
in
lods
xchg
dec
pop
adc
xor
inc
loopne
orl
inc
push
aaa
inc
cmp
and
ss
lods
or
mov
push
xchg
jl
pop
sub
mov
in
popa
cwtl
pop
fwait
add
call
cmp
adc
add
scas
movsl
rorl
fidivs
inc
cmp
push
and
call
popf
test
rcl
daa
fnstenv
mov
out
loopne
js
lcall
fdivl
mov
pop
in
in
xor
inc
lcall
inc
std
outsl
adc
data16
lock
xchg
cmpsb
jo
repz
push
mov
imul
aas
loop
cld
cmpsb
mov
arpl
mov
pop
jns
int
push
inc
movsl
movsb
das
fwait
mov
xchg
icebp
leave
pop
ss
pushf
sbb
lret
xor
daa
adc
mov
xor
jmp
loope
test
fldt
pop
into
dec
iret
and
add
sbb
sbb
out
daa
jae
adc
std
test
jmp
pusha
lock
or
jle
in
adc
pop
insb
lret
sub
pop
adc
pop
push
xchg
arpl
jl
arpl
inc
xchg
fldl
push
mov
incl
dec
xchg
loope
jns
fcmovb
add
mov
arpl
sbb
stos
jg
sbb
or
fwait
lock
mov
mov
push
mov
add
pusha
and
pop
jmp
xchg
cmpsb
cmp
stos
cltd
loopne
add
roll
and
push
mov
stos
sbb
ja
mov
rclb
add
out
in
xchg
je
pop
jmp
mov
ret
mov
and
add
insl
out
cmp
stos
dec
clc
mov
xchg
in
push
outsb
inc
movsl
jmp
in
int
mov
mov
mov
push
dec
push
nop
je
push
cld
cmp
inc
push
jb
inc
lcall
jmp
jmp
add
inc
repz
jmp
shr
hlt
aam
leave
xor
pop
shr
sub
ss
inc
xchg
push
lcall
dec
pusha
cs
xchg
mov
ret
cltd
sub
jnp
jecxz
sbb
push
lods
mov
out
inc
lds
inc
push
test
jl
push
push
hlt
sub
dec
mov
mov
xor
jl
inc
ret
cmp
push
js
push
sahf
movsl
cmc
jmp
inc
lock
mov
jmp
leave
call
mov
jae
xchg
pop
mov
jmp
jle
sbb
mov
pushf
mov
shlb
shll
cmpsl
ret
xlat
mov
dec
inc
lock
xchg
xor
and
pop
dec
jmp
in
insb
cmc
add
push
aad
test
rcrl
call
popa
arpl
add
cmp
divl
dec
jmp
xchg
pop
adc
xchg
sub
inc
fcmovnb
cmp
sbb
inc
or
dec
push
dec
pusha
jp
fdivs
sub
addl
and
jg
mov
jo
stos
adc
pop
les
jle
stos
faddl
lret
or
jo
and
cltd
push
inc
jge
push
test
jae
mov
mov
add
jbe
lods
lock
jno
test
stc
mov
pushf
fwait
mov
lcall
add
subb
pop
adc
xor
sbb
cmp
shrb
cmp
out
fcmovbe
jne
ret
rclb
and
popf
push
dec
je
inc
pop
mov
daa
inc
popf
je
cli
adc
xor
outsl
cld
negl
iret
xchg
cwtl
in
adc
aaa
stos
cs
inc
fistpll
adc
inc
xchg
jmp
push
cmp
lahf
orl
dec
xlat
pop
stos
sbb
sub
test
test
fs
add
xchg
cli
aaa
mov
sarb
gs
dec
push
pop
jmp
jmp
lahf
call
inc
xchg
push
mov
inc
inc
jns
jmp
loopne
sub
push
inc
sbb
jg
xchg
pop
or
shrb
dec
addl
xor
lds
dec
push
jb
mov
push
sahf
jns
outsb
pop
or
fsubl
mov
pop
mov
mov
push
stos
popf
or
outsl
int
and
pop
mov
cld
pop
mov
stos
cmp
lcall
fimull
dec
mov
fisubl
jmp
sub
jmp
lret
push
lock
jmp
push
iret
inc
bound
mov
pop
mov
mov
mov
adc
inc
adc
in
hlt
imul
fidivs
shrb
mov
aad
cmp
mov
push
add
dec
adc
push
xchg
pushf
mov
enter
cmp
shll
jmp
outsl
iret
in
lret
xor
cmc
je
int
popa
jnp
push
js
inc
ja
lods
lods
cmp
xor
mov
jle
pop
je
fsubs
cmp
ret
mov
sbb
fcoms
jmp
popf
lock
or
dec
imul
jle
mov
cmp
shrb
jmp
jnp
daa
divb
jne
mov
pop
int
push
inc
faddp
dec
negl
imul
push
leave
cwtl
pop
int
jo
sbb
int3
loope
js
out
push
or
jmp
sahf
scas
mov
push
fisttpl
add
test
inc
lea
mov
loopne
int3
lret
gs
sbb
ljmp
inc
and
popf
mul
ftst
sahf
jg
cmpsl
mov
lock
arpl
dec
add
sbb
mov
es
and
adc
dec
adc
and
sub
dec
jmp
out
movsl
sbb
push
shll
or
pop
jg
loope
push
sub
pop
jge
adc
mov
mov
xchg
aaa
push
add
out
shrl
mov
aam
ret
mov
mov
mov
rclb
lcall
jl
nop
jmp
cmp
inc
stos
out
xchg
out
movsl
adc
and
and
and
push
pop
xchg
or
sub
mov
stos
mov
add
icebp
out
xchg
js
sub
pop
pop
mov
add
ja
fisttpl
aaa
xor
xchg
stos
and
fucomp
je
fsubrp
mov
jmp
xchg
sbb
sbb
inc
add
enter
ja
mov
xor
stos
pusha
cltd
gs
push
push
jns
inc
pop
test
sub
xchg
mov
mov
mov
mov
pop
bound
push
ss
add
test
cli
and
cmpsl
aas
mov
lock
scas
push
fiaddl
and
cs
mov
pop
cmp
rorl
and
jbe
ljmp
cmp
or
shrb
ljmp
jb
xchg
test
cltd
mov
xchg
in
cwtl
jecxz
cltd
fnstsw
cmp
cltd
inc
aaa
or
mov
mov
pop
dec
and
gs
lea
xor
sub
call
test
cltd
sbb
std
ret
cmp
das
sarb
fwait
and
xchg
xchg
mov
or
cltd
dec
sahf
push
push
push
inc
daa
cltd
sbb
sbb
xor
ds
clc
cltd
shr
mov
sub
out
cltd
lea
insl
xchg
sbb
cli
jb
mov
push
leave
in
or
decb
xchg
xor
or
inc
repnz
insb
outsl
pop
neg
movsl
cltd
sahf
in
push
sub
or
adc
cld
mov
test
add
cmp
xor
fstpt
and
jmp
cltd
xchg
fwait
jno
add
pop
orl
xor
push
ja
jg
push
inc
sbb
cmp
cltd
mov
push
mov
cltd
mov
call
int3
sarl
decl
paddusb
mov
mov
test
or
cltd
in
mov
lcall
iret
movsl
lret
cwtl
in
mov
scas
popl
cltd
jl
lods
push
aas
arpl
cltd
pop
sbb
mov
mull
je
sub
pop
jb
xchg
add
aaa
rcr
push
and
sbb
out
add
ja
xchg
cmpsl
lret
in
gs
xchg
test
clc
stos
sti
test
cltd
lods
cmpsb
mov
fisubrl
jle
popf
xchg
cltd
pop
add
js
mov
clc
aas
inc
enter
rcrb
and
ret
fdiv
inc
cltd
pop
pop
jle
mov
cli
cltd
inc
out
xchg
loopne
sarb
das
push
pop
dec
lcall
xchg
lcall
cltd
lds
adc
aas
sbb
sub
cli
hlt
out
enter
lock
cltd
jmp
mov
lods
cmpsl
xchg
loopne
cmc
leave
mov
or
cltd
push
into
or
sub
int3
sub
mov
pop
cltd
mov
xchg
hlt
cs
pop
cltd
andl
bound
loopne
and
inc
rorb
pop
cli
cltd
dec
out
xor
fnstsw
scas
lcall
mov
adc
jno
and
ret
cltd
add
jnp
ret
sub
mov
cmpsl
and
mov
jo
sti
dec
pop
xor
pop
push
popf
mov
stc
or
mov
cmpsb
lods
push
mov
sub
clc
data16
ficompl
jg
add
mov
push
rorb
xor
dec
jbe
jg
sub
or
mov
inc
xchg
fwait
das
dec
out
jmp
cmpsb
lea
outsb
mov
mov
ret
xchg
adcl
mov
xor
in
cltd
leave
inc
add
adc
push
imul
es
cltd
mov
cltd
adc
je
call
dec
lahf
cltd
fstpt
mov
jns
cmp
pop
movsl
sub
pop
inc
mov
ss
daa
lret
addb
mov
cltd
ss
and
lds
cltd
lods
lods
out
adc
aam
mov
pop
xor
inc
cltd
xchg
sbb
ficomps
push
add
lock
push
push
mov
mov
pop
inc
insb
and
mov
mov
sbb
cmc
ror
sbb
jle
xor
pop
ret
sti
mov
sbb
les
cltd
sahf
outsb
jno
pop
lea
push
cltd
sub
jnp
mov
dec
fs
out
cltd
ret
lds
push
xchg
jle
dec
aam
mov
pop
jmp
mov
cltd
jbe
pop
int3
enter
cltd
aaa
shll
add
dec
ss
ret
mov
call
xchg
lret
dec
cltd
flds
pusha
lock
dec
lods
cmpsl
pop
ret
aaa
dec
es
pop
inc
xchg
packsswb
push
cltd
outsb
test
jl
cmp
mov
stos
mov
cld
inc
inc
fdivrl
js
mov
mov
test
lods
xor
int
pop
xor
mov
daa
cltd
adc
and
in
xor
aaa
icebp
fiaddl
sbb
cltd
inc
xchg
mov
packuswb
fistl
mov
mov
negl
rcr
and
icebp
or
pop
xor
xlat
mov
sbbb
arpl
cltd
inc
pop
int3
or
sub
pop
mov
ja
dec
je
cltd
dec
sbb
les
das
jne
mov
in
fiadds
mov
sahf
mov
cltd
stc
pop
and
gs
mov
leave
cmp
mov
and
or
int3
mov
or
xor
pop
add
frstor
addl
sbb
push
cmp
sbb
fbstp
and
out
imul
mov
and
cmc
nop
adc
cltd
push
adc
push
out
lcall
and
push
cmpsl
push
popl
inc
les
sub
mov
and
mov
cltd
in
rolb
outsb
inc
cltd
int
movsb
aam
jne
add
hlt
mov
insl
jno
aaa
cltd
push
jb
xchg
or
cltd
lret
daa
loop
pop
pop
cltd
cld
or
or
pop
fsubrp
xchg
cltd
std
fbld
icebp
es
fcomps
cltd
push
fwait
push
mov
mov
cltd
dec
add
lods
mov
or
add
pop
xchg
push
rol
jg
arpl
pop
fnsave
nop
inc
cltd
lea
bound
popa
cmpsb
add
stc
pop
mov
push
fnstenv
ds
leave
push
test
xchg
dec
mov
pop
aaa
ljmp
aad
bsr
lcall
popa
cld
sbb
dec
movsb
imul
pusha
adc
pop
push
mov
imul
ret
jle
cmp
ja
mov
push
pop
jae
jnp
adc
les
xor
ja
xor
cmp
xchg
hlt
cltd
shrl
das
iret
inc
push
aaa
push
mov
mov
pop
out
ds
mov
sub
ret
roll
mov
mov
dec
es
in
ss
sahf
xchg
jns
mov
xchg
adc
and
sub
std
cmp
or
mov
and
cmp
mov
cltd
jns
jmp
pop
hlt
sub
fwait
test
adc
push
aam
out
imul
mov
fwait
cmp
sbb
sub
shll
lret
out
xchg
lock
addr16
mov
imul
xor
dec
lret
inc
ret
out
movsl
cmc
pop
push
fimull
cmp
fcmovb
enter
xor
loope
cmpsl
jbe
adc
out
push
mulb
jg
mov
fs
xchg
push
add
rorb
clc
fwait
bswap
and
xor
sbb
das
and
fwait
jne
movsb
dec
xchg
dec
fnstcw
lea
dec
int
pop
dec
js
call
xorl
lahf
dec
lcall
cltd
push
dec
xor
mov
mov
aad
push
lahf
nop
bound
push
dec
imul
push
cmpsb
rcrl
rolb
cmc
inc
enter
inc
cltd
cmpsb
push
mov
dec
sbb
xchg
mov
popf
fndisi(8087
mov
push
lahf
mov
mov
cmpsl
inc
jmp
or
mov
and
and
pusha
sbb
lock
mov
cltd
shll
cli
mov
pop
xor
cltd
push
adc
test
jbe
mov
aas
add
pusha
cltd
push
mov
jp
sub
cli
cltd
imul
cltd
je
xchg
movsb
ljmp
inc
dec
fisubl
mov
fwait
xchg
jmp
sbb
cltd
xor
inc
dec
nop
cmp
mov
and
sub
cmpsl
mov
sub
les
adc
stos
je
lret
sbb
sub
cli
sub
sub
pop
add
cltd
test
in
hlt
bound
pop
mov
push
mov
dec
sbb
inc
outsb
in
std
cltd
mov
fisttpl
rol
sarb
outsl
adc
mov
cmpsl
test
xchg
lahf
iret
jmp
mov
pushf
lds
aaa
leave
cmp
outsl
cltd
add
out
lahf
rorl
cltd
popa
sub
xor
sub
mov
shrb
xchg
fldenv
call
jae
cltd
push
xchg
sbb
xor
addr16
ret
js
mov
push
inc
inc
push
movsb
mov
pop
and
dec
cltd
add
es
cltd
gs
xchg
mov
sbb
cltd
fmull
jle
add
inc
daa
mov
mov
jbe
movsb
mov
lds
adc
mov
push
mov
repz
cmp
jae
jp
arpl
call
mov
shr
out
jo
add
jns
inc
mov
xchg
in
repz
jno
pushf
cltd
out
push
cli
mov
pop
jle
fwait
jl
or
add
dec
xlat
dec
cltd
pop
stc
std
stos
notb
jl
loopne
cmpsl
adc
push
pop
call
aam
fmuls
add
stos
push
add
test
stc
cltd
xchg
mov
pop
mov
negl
popf
mov
jnp
pop
sub
mov
and
jl
add
rcr
sub
movsl
jns
mov
xchg
pop
and
jno
cwtl
cld
cltd
cmc
scas
dec
mov
cltd
outsl
fnstsw
loop
lret
xchg
or
cmp
jae
jecxz
mov
test
sti
sbbb
aas
cltd
jo
call
pop
fwait
insl
mov
daa
rcr
cmp
fimuls
inc
test
lea
popf
add
mov
jnp
mov
xor
nop
fwait
xchg
loop
imul
push
xchg
repz
mov
and
test
in
xchg
cmpsb
mov
cmpsl
mov
jg
jae
icebp
mov
cltd
xchg
daa
popa
pop
pushf
arpl
xchg
pop
outsb
lret
sbb
add
add
testl
icebp
xor
imul
push
rolb
dec
pop
int
and
mov
cmpsb
cmp
adc
scas
sbb
pop
xor
or
mov
mov
mov
sar
push
add
lret
push
cmpsb
sbbl
cltd
aaa
inc
push
push
jae
gs
sub
sub
cltd
pusha
bnd
push
mov
dec
bound
scas
adc
add
pusha
pop
mov
stc
xor
push
mov
cltd
inc
arpl
jae
inc
lahf
push
int
inc
nop
xchg
and
in
jmp
inc
out
jle
inc
inc
mov
out
dec
mov
xchg
push
cmp
mov
sbb
dec
or
loopne
sub
pushl
fwait
push
pop
lock
jae
xor
sbbb
adc
cmpsb
mov
scas
stc
mov
cmp
fcomps
pop
push
and
loope
in
in
push
add
mov
stos
dec
shrl
mov
sub
enter
pop
jmp
ret
gs
cmp
imul
lcall
push
mov
push
xchg
add
mov
sbb
bound
pop
and
pop
xor
add
and
and
mov
and
mov
arpl
clc
mov
std
js
push
xor
push
xchg
pop
stc
pop
or
fidivrl
test
cmovb
mov
pusha
jp
mov
push
in
sub
mov
mov
and
mov
mov
adc
jg
sub
ret
push
movsl
adc
hlt
mov
mov
jmp
mov
xchg
dec
push
add
cwtl
mov
mov
xchg
sub
pop
mov
imul
into
sbb
add
std
jne
pop
fs
loopne
fldt
or
dec
add
mov
dec
push
fnstcw
mov
push
cmp
inc
push
dec
pop
xchg
enter
sub
std
aaa
and
sub
into
sbb
jmp
or
pop
or
jle
cmp
sub
inc
mov
mov
arpl
jmp
mov
pop
lods
out
movsb
imul
shl
jno
lods
pop
int3
mov
inc
jmp
jecxz
jg
ret
lock
jmp
xor
out
pop
xor
jecxz
ret
inc
pop
enter
lcall
std
cmpsl
xor
jo
popf
cmp
mov
orl
insl
call
hlt
dec
jno
dec
int
ljmp
add
enter
scas
jg
call
test
add
adc
nop
pop
xchg
pop
jmp
pop
sbb
jmp
and
mov
pop
rol
xor
in
movsb
int3
xchg
lds
stos
mov
bound
loop
mov
sbb
inc
push
imul
idiv
outsb
or
lds
sahf
adc
mov
test
test
and
ret
in
out
add
mov
std
jg
stos
sub
jmp
mov
jle
clc
pop
outsb
jge
shr
lock
jne
ret
sub
sbb
add
pop
adc
pushf
sbbl
inc
and
outsl
jo
lds
xchg
mov
dec
mov
es
out
cmp
flds
addb
mov
xor
sub
pop
arpl
std
cmp
jp
inc
push
inc
inc
adc
jle
ret
test
add
adc
sbb
daa
adc
fwait
jge
mov
sub
mov
jmp
jne
outsl
or
sub
dec
xchg
outsl
mov
push
loop
push
cltd
sbb
add
jmp
icebp
shll
xor
int
lods
negb
sub
into
mov
cs
cmc
cmc
mov
ret
sbbl
loopne
mov
or
dec
add
decl
cmc
stos
addl
stos
mov
xor
push
movsb
mov
cmp
pop
pushf
cmp
mov
xchg
ja
and
into
xor
popf
mov
xchg
icebp
dec
pop
sarb
ss
clc
add
jmp
and
imul
shlb
jg
mov
jae
lret
out
pop
mov
jl
insl
adc
mov
clc
mov
aad
std
jo
arpl
test
out
or
jns
xchg
in
dec
cs
push
inc
das
jbe
jecxz,pt
mov
lock
frstor
and
add
call
inc
lods
dec
nop
mov
ffree
shll
cltd
sbb
data16
adc
aaa
cmp
mov
jb
mov
test
adc
xchg
xchg
xor
sahf
call
mov
mov
js
adc
aam
sbb
jae
push
scas
mov
inc
pop
lcall
outsl
xchg
imul
push
sub
add
lcall
inc
adc
enter
mov
mov
movsl
jbe
mov
mov
loopne
arpl
lea
pop
push
xchg
pop
xlat
jmp
lret
std
mov
jne
les
xor
dec
iret
dec
adc
adc
movb
push
lock
jmp
call
mov
inc
xor
popf
and
and
sarb
fwait
mov
cmp
gs
in
fs
mov
loope
incb
nop
mov
dec
and
push
jmp
jge
iret
and
inc
xchg
dec
dec
lock
cmpsl
jecxz
mov
pop
jnp
push
cli
mov
jge
sbb
jmp
add
andb
faddp
xchg
jmp
mov
sub
idivb
mov
fisubrs
insb
inc
or
push
arpl
iret
sub
test
mov
push
dec
pop
scas
cmc
jp
out
jl
ss
mov
mov
add
xorb
jmp
inc
jmp
fcompl
repnz
adc
pop
mov
stc
out
or
pop
sub
insb
mov
cmp
jmp
jmp
xchg
test
lods
ja
push
sub
cs
fwait
gs
fdivrp
adc
add
addr16
push
loopne
add
loope
push
call
mov
pop
inc
mov
sti
mov
int3
sbb
fcmovu
pop
test
mov
pop
mov
mov
inc
aad
popf
gs
jecxz
or
stos
jmp
jae
dec
pushf
dec
cmc
push
xor
and
iret
call
test
loop
adc
jmp
aas
jle
cmpsl
mov
adc
stos
add
call
lock
repnz
lea
xlat
mov
add
mov
rolb
test
sbb
xchg
mov
std
mov
pop
cmp
jno
or
xchg
pop
lock
loope
lods
scas
push
jno
daa
loopne
and
insb
cmp
int3
xor
mov
data16
pop
sar
scas
int3
mov
mov
imul
je
enter
inc
rcll
mov
sub
or
dec
lret
mov
cmp
or
sbb
insb
outsw
aas
push
arpl
fsubs
push
sahf
jmp
mov
jle
dec
sahf
addr16
xchg
hlt
gs
cmc
fadd
jge
inc
mov
lea
push
mov
fmulp
push
cmpsl
ss
xchg
jnp
test
inc
test
ret
mov
add
dec
les
popf
or
mov
test
xchg
adc
xchg
push
inc
ret
and
jns
test
ds
sub
jmp
out
fisubl
mull
popa
adc
sbb
lret
mov
stos
and
sub
add
fwait
gs
jmp
mov
frstor
adc
ss
call
loopne
stos
mov
icebp
mov
shl
jmp
out
lock
lcall
push
push
xchg
inc
pop
call
mov
mov
push
lock
arpl
jecxz
leave
hlt
and
mov
jl
mov
cmp
enter
lahf
cmp
stos
add
push
lock
push
lcall
imul
test
xor
and
mov
cmp
out
subl
xchg
xor
dec
loopne
nop
lds
inc
sbbb
lret
test
sub
xor
jmp
cld
ljmp
in
and
push
jbe
rolb
in
mov
int3
movsb
mov
jbe
mov
push
adc
sub
je
ret
or
jmp
in
shl
xor
dec
int3
push
ret
fwait
adc
push
mov
mov
lock
gs
jmp
push
pop
adc
stos
nop
enter
insb
gs
rclb
xor
enter
out
mov
inc
jae
jo
sub
mov
sbb
adc
adc
iret
dec
and
outsb
mov
gs
fldlg2
fwait
pop
js
mov
cmp
jbe
insb
xor
jg
loope
lock
testl
push
mov
mov
mov
gs
xchg
pop
sub
push
xchg
insb
inc
jns
lds
shll
out
inc
insb
sarb
xchg
xchg
xchg
or
mov
cmp
jb
lea
iret
push
mov
mov
jmp
push
push
push
xlat
stos
das
adc
and
inc
clc
cmp
jmp
pop
add
fst
xchg
push
pop
push
sub
popf
push
aas
jo
mov
and
neg
negl
dec
pop
pusha
dec
lock
jmp
aam
mov
xchg
incb
ljmp
push
aaa
push
out
jmp
jl
sbb
sti
xor
scas
jbe
popf
mov
inc
lods
mov
je
nop
pop
pop
pop
testl
out
mov
mov
jmp
cli
ret
push
neg
pop
dec
xchg
sub
mov
lods
cmp
jmp
mov
popf
out
mov
clc
fsubrp
sbb
ret
rolb
repnz
mov
addl
and
mov
xchg
dec
pushl
mov
repz
jmp
jg
fwait
imul
jmp
inc
ja
das
sbb
cwtl
shrb
mov
data16
pop
and
jae
jne
mov
mov
shrb
jb
adc
lret
aam
mov
jp
cs
lret
adc
mov
inc
jmp
push
mov
mov
lret
sahf
ss
or
jmp
xor
sub
jp
movsl
stos
test
jmp
jnp
sahf
mov
mov
mov
test
faddl
loop
stc
sub
lods
jns
jns
mov
mov
sbb
pop
shrl
les
cmp
add
sub
xchg
test
popa
xor
or
fninit
mov
mov
sub
rolb
gs
adc
cmc
xchg
ret
cld
leave
xchg
inc
dec
sub
pop
out
cmp
mov
add
lds
lock
pop
stc
add
push
jne
movsb
lret
lock
add
imul
test
fidivrs
daa
pop
push
xchg
pop
jg
and
sarb
hlt
jle
mov
jno
xchg
xchg
les
movl
es
arpl
xchg
inc
fwait
cs
int3
jmp
call
andb
jb
aaa
test
mov
cmpb
xor
mov
mov
mov
xor
mov
pushf
mov
xchg
adc
std
jl
stos
mov
lret
cmpsb
dec
les
lcall
int
mov
test
mov
mov
adc
sbbb
movsb
dec
negl
in
mov
cli
sub
into
mov
cmp
add
dec
jmp
into
mov
lcall
dec
into
call
lock
imul
sub
movsl
lret
pop
push
cmp
sub
jp
lcall
mov
sti
ss
mov
jb
rcll
lcall
dec
movq
mov
mov
addb
test
push
popf
cmp
jmp
orb
stos
xor
gs
lods
outsl
mov
insl
dec
jae
pushf
push
in
repz
js
fisttps
cmp
adc
and
inc
and
cltd
test
stos
cmpsb
cmp
icebp
stos
push
jle
pop
lret
cmp
cltd
mov
int
add
inc
sbb
pop
xchg
jmp
sub
rolb
fcomp
das
jmp
loope
inc
insb
cld
cmp
lods
jp
mov
push
loop
std
cmp
popf
cmc
xor
add
or
pop
inc
adc
jno
push
mov
mov
push
int
inc
sub
jg
lcall
pop
stos
pop
push
stos
mov
lret
jne
les
xor
negb
dec
pop
inc
mov
in
sub
dec
or
push
mov
call
push
pop
xchg
es
pop
inc
sub
inc
adc
mov
insl
and
stos
pop
sbb
arpl
jns
idivb
pop
in
lods
or
lret
inc
lds
dec
inc
pop
test
or
sub
pushf
inc
adc
cli
mov
sub
lahf
in
push
shl
jbe
mov
push
int3
pop
jo
test
mov
shrl
leave
push
add
push
outsb
mov
sub
adc
jp
fs
aaa
and
sbb
lcall
sbb
and
aam
or
std
and
sbb
lods
test
movsl
pusha
jmp
pop
push
mov
sbb
push
fimull
sbb
jge
arpl
test
inc
pop
inc
cld
leave
adc
add
ret
mov
inc
dec
mov
xchg
jp
ret
and
je
mov
mov
push
lcall
xchg
call
pop
push
cmp
fldenv
push
test
add
arpl
pop
or
sbb
imul
add
pop
jmp
jb
movsb
mov
sub
and
push
cli
ret
mov
jmp
cmp
inc
mov
scas
lcall
adc
jle
icebp
fisttpl
push
adc
adc
fs
out
push
jmp
dec
je
push
dec
sbb
jmp
xor
mov
jns
xchg
push
inc
cmpb
cmp
cmp
rcrl
jns
add
push
fnstcw
repnz
jo
cwtl
lods
out
daa
aas
cmp
push
jae
popf
cmp
bound
mov
jle
pop
std
mov
mov
rorb
inc
mov
xchg
sar
addb
sbb
jl
jae
sub
je
scas
push
inc
fwait
cmp
arpl
sbb
pusha
mov
arpl
ret
std
cmp
cmpsl
cmp
movsb
ds
xchg
sahf
cmp
sarb
xchg
sub
imul
dec
call
cmp
push
cmpl
inc
int3
jmp
adc
adc
sub
loope
rcrl
push
mov
fnstenv
loop
push
pop
jg
mov
aaa
in
cmp
lock
test
inc
out
or
popf
push
leave
cmp
sbb
outsl
xor
in
cmp
sub
add
pop
arpl
int
in
pop
sub
jb
xchg
sub
xchg
in
aas
xor
and
pop
mov
inc
mov
sub
cmp
fcmovnbe
push
add
stos
stos
xchg
mov
cmp
dec
push
imul
out
mov
stc
mov
or
sbb
ficomps
mov
inc
outsl
call
dec
xchg
fmuls
jmp
cwtl
loope
lods
jp
mov
mov
pop
pusha
jno
jecxz
rcrl
arpl
jecxz
jne
cld
xor
call
fmull
xor
cmp
ror
push
movsl
and
in
jno
std
mov
loopne
test
pop
sbb
mov
mov
sub
jns
xor
mov
jns
jbe
jmp
test
adc
mov
push
clc
lea
mov
lods
shrb
movsl
scas
jmp
mov
cmp
jecxz
outsb
stos
enter
out
arpl
adc
lcall
push
pop
dec
in
mov
cmp
mov
jmp
lock
ss
les
jmp
into
jne
ja
into
or
xchg
imul
mov
int
jle
out
sti
lock
dec
out
sub
cmp
mov
arpl
je
push
jmp
shlb
mov
sub
sub
mov
or
add
or
jle
pop
push
hlt
out
pop
fcmove
dec
jmp
mov
rcl
cli
arpl
mov
stos
addr16
inc
mov
fiaddl
lock
in
rcrb
push
test
xlat
mov
loopne
dec
jmp
xor
push
hlt
jecxz
jnp
fbld
lcall
fsts
ljmp
outsb
arpl
and
pop
movsl
sbb
xorw
xchg
sarb
cld
dec
mov
mov
mov
sbb
fiadds
sbb
xchg
rclb
push
and
mov
int
push
mov
pop
adc
scas
daa
add
cmpsb
add
xchg
ret
lds
insb
mov
add
popa
jg
roll
and
jno
jmp
test
add
xchg
ljmp
das
sbb
imull
sub
cltd
data16
push
clc
jmp
dec
inc
sbb
insl
adcb
idivb
pop
shr
or
js
enter
sbb
add
daa
gs
sbbb
sbb
aam
push
repnz
pop
dec
add
sbb
mov
xor
rolb
enter
outsb
mov
sbb
int3
lcall
lret
xor
test
loop
sub
insb
cmp
lods
idiv
or
adc
ja
adc
lret
pop
into
iret
hlt
dec
inc
or
mov
dec
movsl
pushf
xor
loope
jne
fldl
aas
xor
enter
xchg
jmp
lods
and
jecxz
mov
dec
aas
aad
add
sbb
inc
shlb
in
cmc
test
inc
mov
cmp
dec
in
imul
gs
push
scas
cld
mov
sub
shrb
sahf
dec
push
pop
shlb
test
add
jmp
dec
roll
push
scas
pop
pop
outsb
adc
dec
mov
add
add
and
mov
cmp
dec
mov
lcall
jge
movsl
or
xchg
leave
xor
xor
lahf
imul
and
sub
popa
jle
sub
push
push
mov
sbb
jmp
push
jl
inc
inc
movsl
jne
fcoms
dec
dec
jmp
pop
cmp
int
pusha
popf
ja
mov
stc
in
sbb
int3
dec
sahf
adc
xchg
test
enter
mov
hlt
daa
jnp
xchg
dec
es
hlt
cmp
mov
pop
sbb
mov
stos
xor
pop
lahf
fcoml
jmp
xchg
dec
adc
shrl
insl
std
mov
lods
loopne
lret
mov
sbb
stos
adc
fs
gs
lret
mov
mov
mov
mov
cs
xor
out
mov
stc
out
movsb
ret
cmc
lock
adc
stos
adc
jnp
addb
inc
sbb
dec
xor
adc
xchg
xor
xor
push
mov
popa
in
mov
aas
hlt
loopne
mov
push
cli
inc
lods
jmp
jmp
mov
dec
push
call
cmp
mov
loope
or
pop
jg
dec
int
fadd
loopne
mov
cmp
mov
outsl
sbb
dec
addr16
das
dec
sub
cmp
lock
jge
push
mov
inc
shlb
jmp
push
dec
push
mov
loopne
or
push
dec
push
fisubl
pop
push
lcall
cmp
sbb
sbb
xor
cmp
cmp
mov
or
mov
ret
xor
dec
fadds
rolb
push
pop
sbb
jmp
push
add
sub
shrb
scas
outsb
fildll
push
aaa
inc
popf
pop
outsl
or
jmp
mov
ja
hlt
test
cmp
pop
lock
ret
or
ret
mov
ja
jmp
mov
pop
into
not
shrl
push
or
negb
addb
cmp
scas
cmp
and
cmp
or
pusha
fwait
lock
shlb
mov
cwtl
adc
inc
inc
push
pop
mov
push
jle
rorb
mov
push
pushf
movsl
push
int3
dec
loopne
sbb
push
loopne
movsb
mov
clc
int
sbb
xor
rcll
dec
out
mov
je
and
mov
push
pop
cwtl
lret
sti
je
outsb
aas
into
sbb
out
sub
decb
sbb
scas
int
sub
jmp
jb
sbb
jge
bound
xchg
adc
or
sbb
leave
and
inc
xchg
mov
push
das
adc
pop
cmpsb
push
cmp
jmp
mov
test
ss
push
lds
pushf
stos
stc
lods
push
jle
cli
fisubs
sub
inc
rcr
mov
addl
mov
or
sbb
mov
inc
fwait
cmp
push
int3
pop
int3
cmp
test
mov
mov
stos
pushf
rclb
mov
popa
es
das
push
or
push
testb
xchg
lea
test
sbb
mov
pop
insl
imulb
cmp
xchg
jle
lds
mov
inc
mov
call
sub
lret
outsl
dec
xchg
jns
out
push
fsubs
adc
fldln2
jmp
dec
jo
lods
lods
pop
push
in
fiadds
fsubrl
cmp
xor
iret
sub
xchg
outsl
adc
mov
outsl
mov
loop
cmpsl
cmp
push
pop
adc
sub
adc
jo
cltd
adc
jecxz
fsubrp
in
mov
arpl
inc
jmp
xadd
mov
arpl
shrb
and
in
jmp
ficoms
xchg
std
enter
xchg
sub
rcr
sbb
push
jmp
inc
push
andb
inc
lret
lock
fs
mov
fs
ljmp
lock
jbe
arpl
test
mov
push
xor
pop
xor
dec
and
xchg
cmp
push
sbb
ret
or
mov
sub
sbb
jo
lds
in
leave
jae
ret
push
push
jp
daa
out
push
xor
pop
fbstp
lds
scas
push
mov
fisubs
adc
in
jge
mov
push
subl
jmp
xor
into
push
pop
sbbb
scas
paddq
inc
loopne
mov
cmpsb
fnstsw
loope
sahf
inc
lahf
mov
jmp
bound
inc
jecxz
scas
jle
xchg
jo
stos
loopne
cmp
gs
sahf
inc
adc
push
pusha
adc
adc
iret
mov
jmp
dec
jp
dec
xor
mov
movsl
add
cmpsb
mov
bound
pushf
xor
into
lret
push
adc
idivl
jle
xchg
jo
je,pn
lods
jle
mov
lock
sub
xchg
push
lock
icebp
pop
stos
jecxz
inc
jb
scas
mov
push
xor
cmc
and
and
dec
enter
sub
dec
call
stc
lahf
insl
stos
rol
adc
arpl
sub
mov
popa
test
aaa
adc
push
pusha
popa
jns
jp
sub
jecxz
sbb
or
js
sbbb
iret
arpl
add
shlb
ficompl
xchg
push
sbb
filds
fnstsw
jmp
mov
aam
das
dec
xlat
mov
mov
inc
jl
int3
mov
add
subb
sub
inc
push
adc
pop
adc
stos
fdivrp
arpl
loope
lret
aam
sbb
imul
ljmp
std
inc
cli
fsubs
arpl
and
push
mov
push
ret
inc
and
in
add
imul
xorl
pop
xor
popf
fs
mov
idivb
or
adc
mov
jle
ret
dec
sub
aaa
pop
out
aam
cmc
scas
pshufw
iret
call
scas
repnz
cmp
sar
mov
jmp
cmp
rorb
inc
loopne
out
jg
xchg
enter
jle
xchg
dec
clc
xchg
cltd
sub
mov
xchg
xchg
adc
pop
cli
push
jmp
jmp
ljmp
or
leave
iret
fwait
hlt
mov
pop
jmp
mov
je
outsb
mov
popa
in
sbb
aas
dec
jmp
lret
push
sahf
inc
mov
jmp
mov
lock
mov
pushf
rol
mov
ret
mov
adc
sbb
dec
adc
mov
arpl
aaa
jg
and
pop
nop
dec
sbb
fs
sbb
arpl
jmp
jl
dec
loop
jle
xorl
mov
outsl
jmp
std
fstpl
jmp
rol
fwait
dec
and
cmp
loopne
mov
pop
xchg
adc
and
xchg
push
mov
cli
inc
adc
fsts
pop
cmpsl
loope
pop
cmpsb
adcl
cmpsb
popa
lret
and
mov
test
jle
add
mov
push
sbb
jmp
adc
sub
movsl
ss
movsb
test
and
fnstenv
fisubrs
movsl
vshufps
dec
aas
rorb
aas
sub
bound
hlt
inc
mov
xchg
sbb
cmp
mov
mov
mov
or
cmpsl
addl
jmp
jmp
adc
jno
mov
gs
xor
sti
int3
sahf
mov
jmp
cmp
das
lock
loop
jae
xorl
into
ret
not
pop
lcall
test
insl
jmp
or
pop
mov
xchg
js
insb
or
cmp
mov
andb
sahf
enter
jg
popf
pop
push
mov
sub
fxch
xchg
lret
jmp
jo
mov
ss
movsl
lahf
dec
mov
test
mov
mov
or
jbe
movsl
xlat
mov
sub
dec
jae
add
and
aaa
mov
ja
xchg
in
cmpsb
jle
mov
cmp
pop
inc
sub
adc
pushf
mov
ja
jg
adc
in
outsl
out
xchg
mov
xor
push
aam
shll
popf
mov
mov
cmp
push
stos
outsb
ret
push
jb
and
lock
leave
inc
sbb
xor
pop
push
jle
pushf
sbbl
inc
and
pop
add
dec
cmpsb
lret
pop
dec
mov
mov
test
mov
movsb
pop
sub
push
jnp
rolb
ljmp
dec
aam
call
xchg
add
cltd
mulb
mov
cs
or
fsub
jb
or
pop
and
addr16
lcall
lock
pop
lret
cmpsl
xor
pop
xor
sahf
xchg
loopne
push
lods
andl
inc
outsb
or
jbe
mov
adc
pusha
jle
fwait
inc
call
mov
test
jg
sub
inc
fmuls
jno
sub
adc
repz
bound
and
sbb
cltd
jne
imul
test
cmpsl
nop
push
add
in
out
adc
std
scas
int3
je
pop
pmaddwd
pop
in
fs
loop
cmp
or
in
pop
scas
mov
ja
fwait
push
movsl
sbb
inc
mov
enter
out
mov
call
arpl
cmpsl
out
cld
sarb
xor
pop
in
iret
add
pop
sub
or
xchg
pop
repz
sti
mov
xor
jae
cmc
sbb
pop
cltd
je
stos
inc
dec
or
mov
adc
push
jmp
adc
inc
stos
sbb
cltd
fsubl
jb
cltd
xchg
lret
call
cltd
mov
std
push
test
je
addb
pusha
iret
cltd
xor
mov
mov
dec
lods
sbb
mov
inc
mov
cltd
outsb
or
mov
out
add
sbb
xor
movsl
jne
adc
dec
xor
cltd
mov
lds
loopne
daa
movsl
xchg
repnz
mov
loope
xor
pusha
nop
cltd
shrl
and
pop
push
jge
lea
std
sub
mov
aam
nop
outsl
sub
inc
mov
push
or
mov
push
leave
shll
mov
cmp
lahf
dec
xor
xchg
aam
cltd
sub
scas
xorb
push
movsb
scas
out
or
dec
cltd
mov
adc
jmp
popl
out
outsb
mov
fldenv
cmpsl
pusha
stc
mov
cltd
pop
sub
clc
pop
ficompl
xchg
adc
cmp
ud1
mov
shlb
cltd
or
adc
mov
dec
mov
in
stos
xchg
setne
jmp
cltd
and
pop
dec
cltd
aaa
call
push
cltd
ds
add
lds
or
leave
mull
stos
jmp
in
push
in
scas
fs
js
jge
add
or
std
or
nop
pop
sub
sbb
mov
loopne
jns
ret
mov
and
jbe
cltd
rolb
xchg
mov
lods
fsts
xchg
mov
fisubrs
aaa
adc
loopne
xchg
mov
in
sbb
cltd
cwtl
cld
add
pop
clc
pop
sub
xor
push
das
or
xchg
cmp
gs
aam
mov
rcll
icebp
xchg
stos
sbb
out
jno
jne
sub
pop
jle
test
push
pop
sbbl
or
into
sbb
iret
cltd
xor
cmpsl
lock
dec
inc
dec
movsl
icebp
and
jb
stos
gs
sub
jl
outsl
std
data16
rclb
icebp
ficompl
in
mov
js
push
pop
or
rcrb
adc
clc
and
inc
mov
xchg
jecxz
or
push
xor
mov
jp
cltd
xchg
pop
mov
inc
cli
and
repnz
cmp
cltd
adc
bound
dec
dec
xor
sub
dec
pop
or
sbb
in
pop
arpl
xchg
cwtl
cltd
ret
push
lods
cs
scas
rclb
imul
mov
mov
loopne
adc
jne
or
dec
cli
scas
sti
sbb
add
sub
inc
cltd
sahf
and
dec
cmp
xchg
addr16
add
adc
test
popa
out
notb
mov
fstps
push
fmuls
and
cmpsl
lahf
movsb
das
sub
cltd
out
adc
imul
lcall
aaa
cltd
cmp
in
mov
ja
test
cmpsl
std
lock
imul
push
mov
cltd
into
out
loop
sahf
push
mov
hlt
es
dec
inc
inc
test
add
jp
xchg
and
push
cltd
imul
push
insl
daa
out
cltd
push
je
out
cltd
pop
dec
int3
stos
idivb
js
pop
mov
mov
stc
mov
pop
das
cltd
or
adc
mov
int
sub
cltd
sub
jbe
fwait
test
cwtl
add
push
cltd
mov
pop
mov
scas
test
xchg
adc
loopne
lods
jg
and
mov
xor
arpl
icebp
outsl
or
cltd
loope
add
pop
sbbb
inc
xchg
mov
or
push
rcll
cltd
les
jp
cltd
negb
jmp
repnz
arpl
xor
xlat
inc
cltd
jg
shll
push
dec
pusha
cltd
lock
aaa
jb
sbb
and
popf
mov
outsb
fstpl
call
ljmp
aad
setno
cmp
dec
fnstenv
push
test
cltd
push
loope
rol
sbb
cltd
mov
inc
jae
lods
out
cmc
cltd
lea
dec
enter
shr
sbb
lahf
rorb
pushf
sbbl
scas
jmp
push
js
fadd
adc
sbb
xor
scas
inc
and
call
not
lret
cltd
lahf
jbe
sub
cltd
dec
lods
mov
stos
sbb
hlt
outsl
test
imul
out
movsl
imul
xor
cld
ret
out
cltd
mov
adc
les
sbb
test
lret
sub
cltd
or
sbb
lahf
jo
inc
cltd
and
jg
mov
shl
test
mov
cltd
in
or
inc
cmp
sbb
cmp
dec
movsl
inc
mov
sbb
aam
adc
xor
lods
fld
inc
pusha
jmp
jmp
push
pop
icebp
loop
cltd
insb
sub
mov
push
jns
xor
fucom
rcrb
outsl
pop
mov
popf
lret
pusha
dec
fildl
js
cltd
insb
fbld
setns
lock
sub
sub
xlat
cltd
sahf
sti
outsl
push
jge
push
movsb
cltd
cmpsl
and
mov
jno
mov
fldl2e
xlat
cmc
sub
test
nop
sbb
push
cmp
out
or
mov
outsb
mov
lea
push
insl
lret
arpl
movsb
ss
cltd
cli
clc
das
push
shll
inc
cmp
shlb
pop
fbld
mov
cltd
cld
adc
add
or
or
scas
lret
out
cltd
cs
aaa
pop
cltd
push
fs
sti
or
stos
insb
dec
int3
lods
pop
sbb
lcall
add
add
push
mov
fs
shr
pop
mov
cwtl
ret
and
adcb
leave
or
jge
sbb
xor
push
push
fs
sbb
test
es
or
mov
in
xchg
push
and
sub
lods
cltd
jp
ja
push
ljmp
ret
in
stc
dec
iret
inc
or
or
and
idivb
cld
cltd
daa
in
xchg
stc
cli
aad
scas
or
punpcklbw
mov
lret
cltd
js
add
adc
jp
cltd
mov
scas
out
pop
inc
xor
testb
fcomps
mov
push
les
and
mov
mov
mov
cmp
sbb
movsb
daa
and
aas
loope
mov
mov
add
sbb
sbb
and
shrb
cltd
push
gs
sub
and
cltd
in
ds
rcrb
or
push
out
mov
jae
add
bound
sahf
movsl
scas
lock
cmp
jno
add
cltd
ljmp
mov
lods
out
test
scas
cmp
ds
jmp
mov
cli
dec
inc
cltd
push
mov
lock
in
rorl
cmc
mov
dec
xchg
mov
jbe
mov
shlb
test
sub
loop
jns
mov
or
sbb
loopne
mov
inc
xor
and
jae
xor
cmp
sub
pop
push
mov
fwait
insl
ret
add
adc
insb
jbe
cmc
scas
in
sbb
lods
add
sub
lcall
xchg
adc
nop
mov
jb
mov
enter
sbb
sub
lret
lahf
lods
mov
stos
jns
jb
inc
adc
daa
add
mov
aas
push
andb
les
mov
push
jmp
aaa
shlb
imull
es
inc
mov
sti
xchg
mov
rorl
push
iret
cmp
ret
sahf
cmp
shll
inc
ss
jo
xor
pop
leave
adc
inc
mov
sbb
push
jbe
sbb
stos
cld
inc
sbbb
and
xchg
std
iret
dec
ljmp
fsubrl
mov
mov
subl
divl
xchg
lods
jle
lds
xchg
lock
mov
mov
mov
test
addl
popa
push
ret
mov
mov
adcb
int
test
xchg
mov
test
adc
inc
push
std
mov
xchg
aas
fsubs
mov
cmc
test
lock
xchg
sbb
aaa
jns
shlb
outsl
add
mov
fldl
ja
stos
xchg
pushf
dec
cmpsl
xadd
sbb
jbe
loopne
inc
enter
lahf
ljmp
out
mov
xor
mov
add
xor
jo
jno
hlt
cmp
ffree
pop
out
inc
jle
flds
xchg
arpl
xchg
fists
jmp
sub
cltd
rorb
xor
jle
mov
push
cmc
arpl
mov
add
int3
rorb
mov
jmp
cmp
jnp
pop
xor
pushf
jne
dec
mov
and
cmpsb
lods
add
stos
jl
cmp
mov
cli
jmp
jg
add
sahf
or
int
into
loope
sbb
lahf
push
adc
nop
jnp
cmpsl
std
int
mov
jno
mov
sub
mov
cmp
pop
lahf
ret
mov
inc
pushf
cmp
mov
pop
pop
ja
push
push
shrb
iret
cmp
cltd
js
flds
push
popf
fwait
mov
insb
insl
cmp
sbb
stc
pop
adc
jmp
aas
add
mov
sarb
push
cltd
mov
out
lret
cltd
and
test
dec
or
or
pusha
pop
inc
into
dec
dec
inc
push
fwait
aam
aad
mov
popa
and
mov
loop
pop
add
cmc
int
mov
inc
add
mov
and
mov
push
cltd
jnp
sbb
shll
push
sub
movsl
jo
pop
sbb
mov
mov
fcompl
cs
hlt
pop
cltd
sbb
leave
es
or
cltd
adc
push
jns
cmp
imul
popa
jp
cltd
push
rorb
vsubss
mov
mov
mov
mov
jmp
stos
jmp
push
push
outsl
lret
jge
mov
inc
insb
push
call
mov
cltd
shl
push
mov
sbb
in
inc
aam
lock
std
sti
fisubrs
inc
mov
fists
lcall
mov
mov
mov
push
stos
xor
push
mov
inc
fstpl
xor
inc
inc
je
in
push
out
and
pop
mov
fidivrs
pop
js
jl
fnstenv
pop
xor
adc
cs
insb
insb
jecxz
adc
mov
inc
in
ljmp
sbb
mov
cmp
jbe
jl
jae
xor
scas
push
imul
insb
jp
jns
in
sub
add
mov
sbb
in
movb
jmp
imul
mov
fucomp
sub
andl
pop
push
std
mov
mov
scas
xor
sbb
mov
inc
cwtl
or
popa
lods
push
inc
loopne
out
jmp
adc
fucom
sub
jecxz
mov
loopne
lock
stc
stc
adc
mov
xor
add
sbb
or
inc
jle
xor
movsl
fldl2t
repz
sbb
ja
cs
test
mov
inc
inc
mov
test
in
movsl
adc
int3
repz
cmp
int3
mov
mov
adc
jp
dec
sub
adc
outsl
dec
xor
mov
sub
stos
xchg
ret
dec
inc
cltd
lcall
push
xor
sub
ss
adcb
xor
into
rcrb
jmp
movsb
cmp
popa
xor
mov
jle
jbe
cli
jge
fsubrs
dec
jmp
iret
pop
xor
mov
shl
out
jle
sbb
jb
popf
repz
sbb
push
es
lock
ret
dec
arpl
aas
adc
push
xchg
mov
divl
pop
stos
adc
sbb
pop
or
push
loop
mov
jmp
mov
loopne
addl
movsb
fnclex
adc
adc
lcall
cwtl
dec
inc
xor
outsb
loop
sub
dec
lock
in
test
jb
mov
les
jne
cmp
add
sub
enter
movsb
mov
jmp
add
into
rclb
outsl
jno
leave
xor
pop
pop
adc
orb
repz
inc
jmp
in
das
in
pushf
mov
cmp
jno
dec
adcb
fwait
movsb
mov
int
arpl
sbb
std
mov
or
mov
jg
sbb
pop
push
adc
mov
xchg
mov
loop
or
ja
int
in
loopne
jae
decl
push
andl
mov
ds
fs
sbb
popf
shr
xor
xchg
cmc
aas
hlt
imul
inc
stos
sbb
addr16
push
movsb
stos
outsb
cmp
push
lock
lret
cmp
jg
das
dec
mov
mov
lahf
and
stos
mov
lea
rol
cltd
enter
xchg
mov
test
mov
jo
lds
jmp
mov
sub
sbb
and
movzwl
int
insb
jmp
hlt
aad
sub
stos
lods
mov
jmp
dec
push
inc
in
jmp
and
imul
repz
fmull
fs
push
dec
mov
rcrb
leave
dec
add
cmp
js
cmpsb
jmp
loopne
dec
bnd
add
mov
leave
stos
mov
testb
stc
adc
xor
ror
cmp
int
adc
in
cmpsb
xchg
in
fdivrl
scas
sub
jne
push
xchg
jl
movb
es
popa
and
adc
mov
inc
inc
add
fwait
inc
sbb
and
in
pop
or
out
shlb
dec
data16
inc
shlb
push
xor
data16
loopne
pop
mov
lods
les
push
xor
arpl
jp
push
es
enter
cmc
pushf
clc
rcrl
nop
push
jge
out
push
inc
stos
repz
jg
sarb
loop
outsb
lret
xor
jns
push
out
fwait
inc
pop
lock
test
add
push
rorb
jp
jg
or
dec
sbb
xchg
push
pop
mov
dec
xor
mov
jl
add
loop
frstpm(287
mov
ja
int
stos
jmp
adcl
push
popf
cmp
std
ss
pushf
cmpsb
scas
shll
enter
xchg
jno
xchg
inc
sbb
mov
jg
mov
sahf
cmp
addr16
into
pushfw
mov
je
inc
jns
jb
pushf
xchg
mov
out
cmpsl
push
popf
popa
push
stos
pop
cmp
push
pop
mov
int
inc
xchg
ss
mov
mov
mov
fisubs
aas
push
push
xchg
lcall
test
or
push
repz
jbe
jle
aas
sub
cwtl
movsb
lock
mov
sub
fcmovbe
mov
shll
shlb
dec
mov
pusha
mov
mov
add
jmp
sarl
pop
mov
ret
push
inc
adc
cmp
adc
cmpsb
push
dec
lods
sub
dec
jb
cmp
mov
mov
imulb
pop
lret
jo
adcl
insb
movsl
sti
push
pop
xor
push
pop
outsl
jl
mov
leave
fucom
or
pushf
cmp
add
fcmovnb
pop
cltd
lock
ss
xchg
mov
icebp
sbb
push
call
inc
cmp
dec
xchg
sub
jns
xchg
inc
mov
push
jnp
inc
in
mov
mov
jnp
das
movsb
mov
inc
or
push
in
int3
sbb
int3
adc
jle
xchg
lcall
dec
or
push
movsb
out
sbb
shrl
lea
dec
mov
ret
movsl
mov
rclb
ffreep
cld
insl
lahf
stos
clc
xor
jae
xor
dec
out
sub
fidivrs
int
daa
mov
daa
or
scas
jg
dec
push
pop
popa
shll
scas
lock
scas
cmp
pop
cs
lods
and
push
pop
popf
lds
ds
or
adc
xor
lret
je
cmp
mov
push
add
jo
pop
les
loopne
xor
jmp
enter
rcr
jbe
enter
push
fmull
cmc
push
adcl
jmp
dec
enter
adc
cmp
dec
stos
push
dec
or
dec
lcall
ret
loop
fucomp
pushf
inc
and
rcr
pushf
mov
cmpsb
outsl
mov
int
push
adc
stos
mov
mov
sbb
movsl
and
aam
inc
gs
int
mov
jp
dec
jecxz
nop
inc
aam
in
sub
test
out
jg
xchg
ljmp
stos
les
loop
mov
es
inc
rol
adc
fwait
rcl
push
fstpl
ret
cmp
cmp
push
xchg
or
cmc
shlb
inc
sbb
test
pop
scas
ja
imul
rclb
call
or
or
fwait
inc
das
mov
mov
mov
inc
imul
mov
jecxz
jnp
hlt
dec
jp
ljmp
ficomps
mov
imul
mov
les
cltd
lock
pushf
jmp
gs
push
sbbb
pop
in
shrb
fisubl
cmp
cwtl
jle
dec
cmp
fwait
adc
and
in
jb
mov
inc
shrb
test
out
mov
iret
scas
add
xor
jno
dec
jbe
lahf
add
jmp
test
insb
mov
das
lahf
inc
fwait
jmp
stos
loopne
inc
and
arpl
push
dec
sbb
mov
inc
fsubrs
dec
mov
rcr
mov
and
push
mov
xchg
and
jae
aas
push
pop
mov
cmp
mov
inc
xchg
gs
fmull
test
jmp
jge
jge
inc
xchg
dec
pop
jns
aas
je
or
xchg
enter
ss
adc
or
mov
mov
divl
ljmp
mov
lcall
dec
into
sti
add
nop
inc
and
test
xchg
cmp
push
cs
xchg
and
xor
inc
mov
shll
jmp
pop
cli
mov
sbb
movsb
mov
imul
jmp
outsl
iret
jp
push
cmp
jge
sbb
pop
pop
jne
pop
pop
lock
xchg
dec
inc
xor
or
int3
pop
adc
push
and
mov
mov
mov
popa
ss
scas
add
fwait
add
add
lds
stos
jmp
push
shl
xor
xchg
inc
icebp
js
fisubrs
rorb
pop
pop
mov
jmp
out
dec
jno
outsl
stc
jno
or
and
imulb
or
mov
jns
fsubs
jae
inc
ror
add
mull
add
jno
xchg
pop
ljmp
lock
add
and
or
adc
dec
lcall
icebp
nop
outsl
std
mov
and
movsb
ja
xchg
repz
jb
mov
aas
jle
mov
jbe
push
add
push
test
mov
jle
mov
jne
icebp
inc
and
add
add
pop
lret
lods
pop
clc
adc
cmp
dec
mov
rol
inc
shrb
sbb
aas
mov
mov
in
mov
arpl
jbe
inc
lock
sbb
or
test
cmpsl
jmp
xlat
inc
fs
inc
cmc
inc
add
or
cmp
not
jmp
leave
sti
cmp
push
loop
popf
jmp
ret
xchg
jo
fwait
jno
rcll
adc
and
mov
pushf
imul
sbb
movsl
lock
sbb
arpl
orb
into
jle
in
data16
sub
dec
jbe
inc
add
inc
ds
dec
lods
mov
pushf
cwtl
out
push
jb
and
xchg
fldl
fmuls
or
insb
out
fisttpl
scas
mov
push
out
dec
add
sub
test
out
cmp
mov
hlt
adc
andl
or
pop
push
mov
jmp
mov
push
sbb
add
lock
rcll
pop
call
dec
mov
push
sub
arpl
lret
es
adc
insb
mov
adc
push
ljmp
mov
sti
jne
imul
inc
data16
loopne
mov
addl
loope
adc
fsubs
cmp
cli
jne
cmp
mov
adc
add
cltd
jbe
mov
add
test
mov
cld
jmp
cmp
pop
xchg
sub
mov
mov
lock
lret
mov
into
loope
ror
sti
mov
cli
mov
mov
dec
mov
jne
rcrl
sbb
lahf
stc
stos
inc
pusha
jae
into
inc
or
jecxz
scas
cltd
test
cmp
je
bswap
mov
loopne
test
ja
in
into
or
xchg
sti
sub
mov
inc
inc
mov
roll
and
test
push
and
xor
and
xor
mov
jae
test
sub
adc
xor
negb
iret
push
dec
dec
add
fisttps
out
mov
sbb
shr
and
mov
mov
sbb
dec
adc
xor
add
lea
sahf
loop
and
loop
adc
fdivrs
je
in
jp
add
inc
xchg
fdivrp
test
and
imul
mov
pop
jle
sahf
es
popf
pop
inc
test
mov
cmp
inc
mov
mov
mov
add
loopne
pop
mov
push
into
clc
dec
jmp
mov
mov
shlb
stos
and
ret
in
gs
mov
enter
sahf
dec
ja
xchg
mov
push
sub
movsl
pushf
fcomp
mov
inc
mov
cmpsl
dec
dec
cmp
test
xchg
push
xchg
or
out
fstpl
in
xor
push
aam
mov
fdivrs
psrlw
clc
aaa
lds
fldenv
insb
and
lds
outsb
mov
sub
pushf
into
mov
repnz
push
push
and
lock
inc
mov
jmp
add
sub
fdivp
sar
loop
pop
inc
outsl
lock
sar
pop
jmp
xor
cmp
cmpsb
cmc
xor
sub
cmp
add
lds
pop
pushf
jns
pop
out
add
aas
sub
mov
jmp
les
scas
dec
xchg
mov
xchg
or
cwtd
sbb
mov
push
dec
adc
or
pop
cmc
gs
cmp
ss
mov
arpl
sbb
sti
xchg
shrl
xchg
and
mov
imul
and
ret
and
inc
sahf
je
insb
rorb
sub
sub
and
jno
sub
fistpll
add
hlt
jb
jg
stos
shlb
cld
xor
idivb
xorl
inc
cwtl
test
pop
mov
dec
mov
pusha
push
jmp
outsl
aad
lret
rorl
mov
movl
rcll
mov
test
jne
orb
cmp
jmp
mov
into
jp
iret
xor
daa
jmp
push
jns
and
or
push
sbb
pusha
jae
dec
inc
subb
loopne
and
xchg
dec
push
jge
mov
push
xchg
lock
lret
or
xchg
icebp
mov
xchg
or
sbb
icebp
mov
mov
mov
push
add
push
decl
cmp
mov
testb
sub
jmp
fstps
dec
jae
std
adc
outsl
mov
mov
xor
outsb
cmp
or
mov
jmp
or
fwait
movsb
push
pop
dec
inc
xor
aam
mov
mov
add
mov
dec
xor
sbb
js
clc
je
movsl
ret
adc
lock
scas
mov
rorb
push
sbb
ret
xor
outsl
sbb
out
pop
je
mov
dec
cwtl
and
mov
cltd
adc
ds
pop
cmpsb
inc
add
fstps
and
insb
xor
or
fsubr
mov
out
sub
fcoms
push
add
cmpsl
loope
scas
test
mov
mov
push
inc
mov
fwait
and
cmc
mov
popa
pusha
lret
inc
ret
jo
xchg
frstor
sub
adc
sahf
cltd
sbb
or
mov
sbb
sbb
mov
loopne
push
or
add
jmp
cmp
xlat
int
pop
sbb
call
and
rolb
mov
mov
xor
sbb
push
adc
and
fidivrs
sbb
xor
scas
fisttpl
sahf
mov
bound
enter
aas
fcoml
dec
pop
mov
and
xchg
and
xchg
fiadds
movsl
xor
xchg
and
ret
cmp
repz
mov
fiaddl
je
jne
sbb
std
pop
cmpsl
and
jge
mov
aas
sub
aaa
test
pusha
je
loop
ds
adc
push
cltd
outsb
movsl
cmp
ljmp
mov
dec
jge
inc
cmpsb
movsl
lahf
dec
cltd
nop
dec
aad
stos
lock
cltd
push
aam
repz
fimull
cltd
push
adc
cltd
sbb
fdiv
add
call
icebp
or
shll
pop
sbb
fildl
cwtl
inc
fwait
mov
xchg
fcmovu
sbb
fwait
mov
jno
mov
cltd
mov
fadds
clc
lds
sbb
sti
add
adc
mov
xchg
mov
cltd
jae
leave
imul
xlat
cltd
and
add
shll
test
push
lods
mov
lds
ret
sbb
inc
cmp
dec
jo
scas
loopne
jmp
out
xchg
pop
cltd
cwtl
cmpl
mov
cltd
xor
mov
add
sub
sub
imul
cltd
pop
lret
icebp
and
xchg
adc
fcompl
push
lcall
cltd
arpl
mov
lds
ret
out
dec
pop
dec
jl
adc
sub
sarb
mov
pop
mov
outsb
pushf
int3
iret
cltd
xchg
push
mov
mov
add
cltd
dec
mov
mov
inc
mov
push
rclb
clc
sahf
sbb
sbb
xlat
test
xor
sbb
dec
pop
mov
arpl
sbb
insb
mov
outsl
push
cmp
rep
xor
sbb
scas
sub
jmp
cltd
dec
rclb
mull
daa
mov
ja
xchg
sbb
pusha
sbb
push
dec
fld
hlt
stos
out
and
add
pop
ret
xchg
cltd
dec
push
loope
xor
sahf
in
or
adc
mov
xor
loop
cltd
outsl
jecxz
int3
shl
cltd
sbb
out
popa
inc
mov
fiadds
sbb
lea
filds
setns
inc
mov
xchg
cmp
add
jl
addl
inc
rcr
repnz
movsb
rcrb
jnp
mov
push
ja
pop
insb
inc
lcall
xchg
movsl
push
scas
adc
add
sub
outsl
out
dec
cltd
mov
fldl
jo
rcrb
scas
mov
mov
fdivr
dec
ret
cltd
aad
stos
fistps
cltd
mov
icebp
add
test
xchg
jecxz
shrl
outsl
dec
rolb
lock
arpl
add
sbb
je
xor
add
cltd
ja
repnz
fisttps
pop
mov
mov
aad
sub
inc
xchg
testl
xchg
sahf
mov
loope
rolb
mov
mov
js
mov
inc
mov
dec
cltd
dec
scas
xor
adc
mov
xchg
in
ds
xchg
sbb
dec
les
jo
shll
mov
popa
push
dec
cltd
cmpsl
xor
lret
enter
scas
add
rol
and
sahf
adc
out
dec
xchg
cmp
fdivs
sbb
inc
and
push
xchg
ja
cltd
loope
popf
pop
push
das
cltd
jae
mov
adc
push
mov
loopne
addr16
ss
jecxz
jp
xorb
stos
shlb
sbbb
mov
cltd
pop
mov
and
cltd
es
and
ljmp
mov
stos
repnz
sbb
and
xchg
push
add
jmp
fstpl
out
xchg
fistps
imul
adc
mov
pop
inc
jg
mov
arpl
mov
cltd
xor
aam
pop
std
sti
fwait
jbe
cli
mov
and
and
cltd
sahf
leave
cmp
xor
movsl
fisubs
jp
xchg
mov
cmp
dec
mov
xchg
aad
dec
insl
or
mov
add
push
movsl
jb
mov
cmpb
cltd
xchg
std
push
sub
addl
aas
xor
lock
sub
int3
add
mov
sbb
push
mov
push
lock
push
cwtl
jmp
jns
hlt
mov
aad
loop
jg
add
mov
fwait
imul
adc
movsl
mov
jb
mov
rolb
popa
jo
mov
orl
into
fsts
mov
dec
repnz
enter
imul
jns
pusha
shr
mov
cmp
dec
inc
push
or
sbb
mov
mov
dec
cmpsl
mov
int3
stos
aam
jmp
mov
sub
fmuls
xor
xchg
xor
mov
cltd
cmp
imul
lods
out
pop
jns
mov
rorl
sbb
outsl
jb
into
sub
stos
pop
adc
mov
shlb
jmp
pusha
subl
mov
or
loopne
scas
jo
sbb
lods
mov
addb
xor
clc
fsts
mov
jl
mov
int3
fstpl
fildll
addr16
lock
test
mov
mov
pop
jmp
fsubs
in
jmp
pop
sti
push
pop
adc
dec
xor
push
mov
xchg
and
sub
arpl
rcr
rcrb
cld
rcrb
notl
outsb
cmp
mov
outsl
sar
mov
cmpsb
mov
xchg
movsl
out
mov
loope
cmp
ds
sub
push
jb
xor
clc
dec
jnp
aad
adc
and
inc
test
xor
popa
pop
lods
mov
cmpsb
fsubl
loopne
push
sbb
enter
stc
fidivrl
jmp
sub
xchg
pushf
fwait
mov
bound
fldcw
mov
sahf
in
mov
push
add
cmp
lds
mov
mov
pop
and
aaa
loopne
dec
sbb
stos
and
adc
xor
lods
mov
xchg
std
and
je
sahf
or
mov
jmp
inc
test
and
shr
push
inc
and
cmc
outsb
mov
push
pusha
mov
mov
mov
aaa
mov
dec
mov
inc
in
cmpb
cmp
xchg
mov
cmp
leave
test
jae
push
ficomps
sbb
xchg
movsl
nop
fwait
xchg
xchg
shll
pop
dec
test
lock
cmp
or
jo
fnstsw
mov
adc
cltd
bound
sbb
adc
lods
pop
adc
stos
jmp
pushf
inc
xor
je
and
test
pushf
frstor
or
flds
rcrb
lock
dec
ja
pop
shrb
xchg
xor
mov
inc
imul
orb
in
xchg
sub
dec
adc
testl
movsl
into
push
and
adc
aam
scas
daa
call
add
orl
lcall
sbb
cmp
loopne
mov
sbb
jmp
lret
in
sub
ficompl
mov
sbb
push
fldenv
fadd
push
int3
dec
stos
jmp
mov
and
cmp
push
pop
sub
mov
dec
xlat
xchg
iret
lock
mov
sarb
jnp
sub
jmp
jmp
lds
or
pop
pop
and
sbb
cmc
pop
push
lock
stc
inc
adc
push
mov
mov
sbb
xchg
cmp
mov
jmp
mov
mov
add
mov
pop
sbb
push
mov
dec
insl
cmp
pushf
jl
lods
gs
pop
sub
test
or
xchg
inc
jo
dec
icebp
fwait
fs
add
movsl
mov
mov
leave
push
jmp
mov
int
out
xor
jbe
sti
push
push
pop
add
mov
aam
mov
movsl
add
sub
aad
sbb
dec
repz
dec
das
ss
adc
test
cmpsl
in
pop
les
add
cmp
lds
stos
dec
fisubrl
popf
xor
and
pushf
jmp
insl
fmul
push
mov
mov
dec
fwait
pusha
cmp
in
stos
push
adc
ret
ret
sbb
inc
jmp
cli
popa
or
cmp
cld
das
or
mov
pop
mov
mov
es
dec
mov
add
adc
jp
inc
jae
rcll
ljmp
cli
int3
pop
mov
testb
xchg
cmp
and
test
mov
cltd
mov
mov
sbb
cltd
xchg
push
les
mov
outsl
cmc
sub
ret
addb
ficoms
or
push
adcb
stos
pop
xchg
shl
mov
clc
and
jge
test
lods
daa
mov
sbb
mov
mov
fisttps
in
lcall
sub
rcrl
pop
jle
cmc
lds
jo
cmp
cld
mov
xchg
imul
push
push
pop
fstl
jp
movb
fwait
sbb
mov
loope
mov
cmpsb
aaa
xor
cwtl
xchg
mov
insl
push
stos
xor
mov
adc
cltd
aaa
jmp
cmp
rcr
mov
pop
add
pop
cmp
fisubrl
xor
add
cltd
mov
jl
out
cltd
cli
daa
dec
iret
aaa
adc
jg
call
mov
rcr
movsb
cmpsb
mov
inc
and
add
pusha
test
push
cltd
dec
movsl
repz
lods
mov
xchg
cs
cltd
cmp
stos
pusha
xchg
pop
xchg
cltd
rdpmc
push
mov
pop
notb
and
cltd
outsb
push
leave
cltd
jle
or
pop
cltd
or
inc
xchg
leave
xchg
in
cltd
stos
adc
js
pop
cmp
adc
inc
adc
adc
mov
sahf
mov
adc
stos
cmpsl
xor
cltd
cmp
insl
popf
stc
movsl
inc
inc
ret
in
xchg
fsts
xchg
adc
mov
pop
mov
add
inc
insl
cltd
loope
and
mov
adc
mov
mov
pop
shrb
cltd
pop
jge
xchg
xor
jle
mov
mov
aam
stos
rorb
pop
rep
mov
cltd
sbb
test
ret
adc
repz
mov
sbbl
mov
xchg
push
js
dec
mov
pop
pop
mov
fisttpll
iret
dec
inc
or
fcoms
adc
push
dec
jecxz
fistps
sbbl
pop
stos
mov
lret
mov
and
xchg
push
fcomps
movsb
out
dec
cld
cltd
fwait
int
add
dec
cmp
adc
sahf
fstpl
jmp
cltd
or
push
mov
leave
pop
cmc
jns
sbbl
jbe
sbb
pop
cmp
iret
cltd
cmpsb
popa
pop
push
fnstcw
push
cltd
clc
loope
pop
leave
mov
mov
and
rcr
cltd
mov
adc
cmc
sahf
out
sbb
pop
push
mov
mov
dec
and
mov
std
arpl
jl
gs
movl
cltd
adc
arpl
mov
movl
sbbl
cltd
lods
cmpsl
dec
aad
push
jge
ret
cltd
push
bnd
push
rorb
pop
jae
scas
xor
cli
sbb
aaa
pop
push
mov
rorb
imul
test
pop
sahf
into
cli
mov
ljmp
lods
cltd
fdiv
movsl
ja
in
out
cmpsl
and
daa
jo
sahf
fldcw
add
dec
dec
xlat
notb
enter
xor
jmp
or
popf
mov
outsl
mov
push
ds
mov
negl
cmpsl
in
jno
adc
mov
cltd
lcall
test
sub
jg
testl
mov
adc
push
xor
mov
enter
cltd
add
jbe
sub
adc
mov
jno
mov
jg
fsts
outsl
xchg
sub
scas
fisttpl
sbb
imul
add
sbb
stc
sti
arpl
jle
iret
mov
push
mov
push
test
cltd
xchg
out
aas
loope
testl
mov
lds
repnz
sbb
mov
loop
jmp
out
push
push
stos
scas
rcl
mov
cmp
pop
aad
clc
cltd
sub
pop
into
scas
add
rcl
lret
bound
insl
inc
mov
cltd
dec
movsl
scas
shl
pop
pop
cld
popa
lret
enter
inc
lcall
es
or
dec
rcrb
mov
bound
adc
add
pop
adc
leave
push
mov
mov
pop
push
cltd
adc
adc
out
iret
jne
jae
rol
test
in
cmp
xchg
repz
mov
sbb
nop
pop
jge
leave
lret
mov
cmpb
mov
fldenv
adc
sbb
push
scas
xchg
mov
imul
loope
xor
sahf
bound
inc
cld
sbb
push
daa
cmpsl
and
pop
xchg
lret
and
mov
cmp
sub
fsubr
jae
pop
mov
sub
push
xchg
test
cmc
cld
mov
mov
jmp
jl
icebp
inc
jmp
pop
lret
test
pop
les
xchg
cltd
cs
gs
inc
jae
in
cmpl
sub
or
leave
push
clc
push
iret
dec
mov
insb
fsubrp
inc
cli
mov
icebp
fstpl
xor
sarb
js
es
cmp
je
lds
into
daa
jmp
add
lock
mov
pushf
fidivl
ret
add
popf
cmpl
mov
mov
adc
aad
add
sub
loop
orl
cmp
pusha
popf
mov
add
cmc
mov
jno
pop
fnstcw
xchg
test
je
shlb
mov
jmp
mov
cmp
iret
mov
cmpl
jmp
lods
mov
test
sub
push
ja
iret
and
int3
pop
jb
jno
inc
jg
fcoml
mov
std
icebp
inc
mov
jl
ret
test
fmulp
mov
outsl
fstl
lock
fcomi
stc
lea
sub
imul
push
or
or
inc
mov
xor
mov
mov
imul
leave
xor
mov
adc
jg
cmp
arpl
in
sahf
pop
dec
and
cmp
jno
add
jmp
lcall
sub
sub
inc
sbb
mov
add
cmp
jg
push
lahf
ss
adc
aaa
int3
imul
ljmp
mov
inc
jmp
mov
popa
jno
daa
sbbb
addr16
jmp
push
jmp
adcl
cld
mov
lahf
cmp
popf
add
test
mov
mov
jo
and
mov
sbb
sbb
pop
cmp
inc
hlt
aam
popf
gs
push
loopne
mov
ljmp
adc
shlb
push
jmp
decb
je
mov
fwait
mov
stos
loop
sahf
cmp
test
cmpsl
jno
xor
call
test
fsubrp
add
loope
mov
dec
fmull
pushf
push
mov
inc
and
insb
pop
arpl
push
add
call
cld
push
mov
mov
testl
or
mov
inc
fidivl
aas
dec
push
enter
mov
sbb
jbe
scas
add
sarb
mov
jmp
call
push
out
aam
stos
or
lock
inc
xor
inc
push
jmp
test
into
aad
sbb
arpl
aaa
xchg
out
and
sub
xchg
fisubrl
or
ret
daa
cmp
cmp
or
add
jg
push
jmp
sbb
enter
popf
inc
xchg
ret
cmp
test
sti
cmc
std
sub
xchg
mov
jge
fistps
jb
jle
push
icebp
sbb
jmp
push
imul
pop
ljmp
sub
lcall
jnp
pushf
mov
inc
into
movsl
push
mov
adc
jno
stos
in
stc
aas
xchg
jle
jbe
lock
and
in
movsl
xor
sbb
or
jmp
xor
xchg
lahf
loop
lcall
jno
xchg
xor
ss
rcrb
adc
rorl
lock
adc
popf
mov
jmp
or
and
mov
leave
fwait
inc
fstpt
mov
sub
jne
out
adc
test
pop
aas
adc
inc
stos
pusha
cmp
dec
mov
test
iret
mov
dec
lds
mov
cli
cmp
mov
gs
popf
dec
cmpsb
xlat
jmp
cmp
mov
xchg
or
cmp
in
adc
pop
cmpsl
imul
adc
faddp
aad
iret
aaa
sbb
scas
divl
int3
in
add
out
cs
repz
jns
rol
push
inc
jmp
and
mov
in
xchg
pop
sub
lea
das
cld
in
enter
add
mov
insb
ret
mov
push
dec
out
jmp
fisttpll
mov
mov
push
fcomps
jmp
dec
addr16
jg
rcrl
ret
mov
inc
adc
push
cwtl
mov
dec
lock
add
mov
pop
arpl
adc
enter
or
xchg
loope
adc
pusha
push
or
in
push
cmp
sbb
jmp
pop
xor
sti
imul
mov
and
jg
push
insl
and
ljmp
lock
test
jns
push
xor
inc
test
jmp
mov
cmp
mov
lock
jno
stos
inc
mov
stos
lods
mov
xchg
jno
adc
xor
xchg
or
je
out
shlb
lock
dec
es
push
lea
imul
popl
mov
in
into
inc
fwait
lods
imul
jno
aam
push
pop
inc
sub
lcall
int
dec
inc
pop
add
orb
jge,pt
test
xchg
jno
push
je
loopne
and
pop
xchg
and
add
jg
push
sbb
insl
fs
filds
adc
popf
iret
stos
jnp
sbb
in
push
sbb
pop
jmp
and
lock
sbb
xlat
mov
frstor
adc
js
sub
sahf
popa
dec
movsb
adcb
ja
insl
pushf
adc
shl
stos
jp
jle
pop
call
jb
inc
mov
jne
mov
inc
cwtl
je
adc
dec
fmuls
mov
cmp
push
insb
outsl
fldt
jecxz
std
add
adc
inc
mov
cwtl
push
add
mov
cld
or
stos
arpl
jmp
aam
mov
dec
lods
mov
jno
or
lret
mov
push
popf
xor
jmp
int
mov
mov
pop
sahf
in
sbb
bound
cmp
push
mov
fildll
xchg
push
sarl
jmp
or
ljmp
inc
cmp
sub
adc
inc
jmp
decl
test
test
jecxz
cmc
jmp
int3
xchg
adc
int
bound
fwait
aam
lock
lds
test
mov
push
cmp
rcrb
and
ljmp
cmp
pushf
inc
sub
insl
sub
jle
jnp
icebp
xor
jmp
pushf
xchg
rcrb
inc
insb
push
mov
stos
and
adc
lods
add
push
pop
or
jmp
mov
push
pop
test
jle
lcall
pop
shr
mov
aas
stos
jmp
xlat
and
lds
sbb
mov
xor
into
jmp
jns
add
push
lret
push
sbb
pop
or
cld
jge
jmp
or
dec
mov
orb
int3
cmp
mov
int3
test
sbb
stc
pop
in
leave
sub
push
sarl
xchg
outsb
adc
loop
mov
idivb
sub
mov
imul
xchg
or
movsb
call
add
jmp
out
xchg
js
sbb
stos
push
and
fidivrl
add
push
inc
mov
subl
std
push
cmpsl
sahf
and
clc
mov
lcall
movsb
jmp
gs
jae
aas
xchg
and
ret
pop
jmp
test
xchg
je
ljmp
xchg
aad
jmp
arpl
shl
cwtl
jge
dec
mov
adc
pop
mov
dec
dec
sahf
call
or
push
test
fnstcw
sub
and
mov
mov
cmp
stc
cltd
dec
stos
es
pop
pusha
lock
and
test
jge
xchg
test
lahf
leave
and
outsl
jle
cli
fisttpll
jnp
lcall
dec
repnz
sub
inc
push
push
mov
pop
inc
inc
das
mov
add
cmp
inc
cld
sahf
xchg
adc
jge
or
fcomi
mov
les
xor
xor
rorb
out
call
fdivrs
xchg
stos
adc
popf
or
push
sarl
and
jmp
mov
sub
lds
clc
cmp
xor
cmp
imul
stos
jecxz
insl
leave
fnstsw
sbb
push
test
lret
inc
std
xor
sub
sbb
dec
pushf
enter
out
xor
mov
mov
jno
dec
push
xchg
lea
xchg
adc
stos
fdivrs
in
mov
pop
int
sbb
dec
inc
jno
test
test
dec
outsb
jecxz
jnp
pop
mov
adc
sbb
add
and
fs
sub
and
add
mov
mov
into
jns
jmp
add
mov
popf
repz
shl
sahf
arpl
iret
jl
ret
arpl
in
adc
rcrl
push
xor
test
mov
iret
fldcw
out
rcr
in
std
xor
and
push
or
cmpsb
push
lahf
jbe
rorl
test
mov
loopne
xor
inc
loopne
in
mov
xchg
mov
mov
daa
jae
inc
dec
jae
lret
sarl
fidivs
data16
xchg
xchg
sbb
ljmp
sbb
and
fs
popa
adc
mov
ljmp
lahf
jmp
inc
cld
pop
cli
add
sarb
ret
jns
push
jmp
add
inc
movsl
repnz
lahf
loope
stos
adc
lods
mov
es
lret
dec
cmp
loopne
mov
flds
mov
xor
jne
xchg
dec
push
pop
popa
icebp
mov
pop
push
mov
or
jbe
sub
adc
and
add
inc
loopne
sub
sahf
call
rcr
pop
jmp
adc
xor
or
cmp
lret
jmp
mov
or
ret
push
rcrb
xchg
jl
pop
dec
arpl
push
shrb
pop
mov
adc
adc
sbb
mov
lock
jecxz
out
scas
sub
popf
in
imul
fisubl
jo
inc
dec
ret
add
add
pop
loopne
fiadds
sti
shlb
mov
xor
xor
adc
jmp
jae
xchg
mov
mov
sbb
cmp
and
or
jns
sahf
mov
lret
lock
sub
adc
adc
daa
mov
sub
pop
adc
dec
mov
pusha
out
and
inc
sub
jecxz
in
sub
sub
jmp
ret
rcrl
int
xor
pop
les
enter
inc
jmp
sarb
sbb
mov
jg
out
mov
sti
mov
loopne
pop
out
scas
adc
mov
pop
jnp
mov
and
js
adc
mov
xor
bound
and
mov
in
cmp
lea
lock
push
hlt
in
sub
fimuls
inc
and
jno
pop
scas
or
cmp
out
lock
mov
test
jl
sbb
mov
xchg
and
mov
subl
into
mov
inc
push
xor
lock
movsl
scas
xchg
sub
cmp
cmp
push
lahf
pop
adc
xchg
and
ja
int
sbb
xor
jge
insb
dec
loope
lahf
popa
cmp
scas
xchg
mov
leave
xchg
ret
adc
or
into
mov
iret
jb
sub
stos
dec
push
test
sti
cwtl
mov
clc
adc
jmp
add
jo
mov
push
lds
aam
insb
add
jbe
sahf
xor
mov
xchg
sbb
xorl
push
cld
push
ja
cmpsb
xchg
xchg
dec
mov
inc
mov
fldt
ja
rcrb
fs
cwtl
adc
mov
movsl
lock
fwait
xchg
int
push
sub
rcll
push
jae
inc
aad
into
xchg
cwtl
or
xchg
sbb
mov
fdivr
repz
sbb
push
sbb
ja
push
cmp
outsb
enter
and
inc
lock
arpl
cmpb
sbb
lods
sbb
test
fldl2t
pop
xor
cmc
punpcklwd
imul
or
dec
xor
jg
sub
aas
jb
mov
jmp
lock
xchg
xchg
add
mov
push
mov
in
inc
aam
lea
sbb
xchg
inc
leave
adc
sub
lret
mov
outsl
or
dec
repnz
and
mov
jecxz
lods
stc
scas
or
cmp
js
dec
mov
adc
arpl
add
gs
mov
or
jo
popl
jle
push
ja
mov
jnp
xor
push
mov
dec
xchg
xchg
jno
cmp
adc
jnp
mov
xor
stc
enter
rol
push
lret
mov
hlt
pop
adc
cwtl
test
push
bound
xor
mov
out
loopne
call
add
xchg
lea
pop
insb
add
inc
jmp
fcmovu
insb
lock
mov
pop
inc
jnp
testl
dec
mov
in
test
lock
das
mov
mov
arpl
xchg
outsb
lock
inc
les
mov
lock
sbb
cmp
xor
loope
int3
jle
cmp
ret
xchg
add
ret
test
loop
inc
pusha
sbb
inc
sbb
pusha
dec
in
cmp
or
test
xchg
stos
sub
pushf
xchg
inc
jmp
jbe
imul
call
in
repnz
sub
stos
push
xchg
aas
mov
push
add
repz
sbb
adc
jge
popf
popa
xchg
fsubrl
lods
test
popf
sub
jmp
cld
and
mov
leave
cmpl
arpl
addl
push
lea
and
xor
dec
shrb
ret
orl
inc
inc
lea
aam
cmp
int
mov
sti
pushf
adcb
ret
lock
adc
adcl
mov
pop
imul
mov
pushf
pop
popf
outsl
dec
lods
mov
cltd
xor
insl
iret
mov
sbb
xor
mov
stos
mov
lcall
and
loopne
dec
mov
out
popf
negb
pop
popa
or
test
jmp
push
les
inc
adc
push
fbstp
lock
fcmovne
push
xor
out
xor
mov
sbb
adc
aam
call
adc
and
mov
sub
sahf
stos
sbb
sub
daa
mov
xchg
jg
xchg
cli
pop
push
jmp
into
fwait
cmpsb
push
adc
cmp
xchg
pop
mov
mov
xchg
jmp
dec
inc
inc
roll
xor
aad
lea
stos
mov
push
repnz
mov
jmp
mov
jecxz
js
mov
lret
sub
stos
jmp
imul
lahf
jns
mov
sub
mov
jp
sbb
fmuls
sbb
into
cli
xor
adc
std
ljmp
mov
inc
les
sbb
dec
mov
xor
mov
and
xchg
call
dec
jmp
fsubs
xor
xchg
sub
stos
jg
xor
subl
pop
stc
push
push
inc
push
fucomip
outsl
mov
add
call
arpl
jmp
mov
outsl
cmp
nop
mov
push
out
mov
and
aam
mov
xor
sub
cmc
call
ret
pop
and
subl
cmc
sbb
sub
jmp
sub
cmp
jmp
lock
cmp
mov
outsb
mov
std
sbb
lcall
or
gs
sbb
sbb
fsubl
data16
sub
outsl
push
sub
lock
sub
dec
subb
mov
mov
sub
imul
sub
mov
sub
lock
push
sub
jle
xorl
out
jmp
inc
jecxz
jns
loop
shll
add
orb
mov
cs
lret
aaa
xchg
arpl
popf
bound
pop
bound
xlat
cmpsl
dec
icebp
stos
xor
mov
mov
test
xchg
jae
push
je
out
test
pop
scas
lcall
lds
imulb
int
mov
jmp
adc
dec
daa
mov
jb
mov
ljmp
cmp
int3
fists
sbb
aaa
jmp
pop
inc
aaa
jg
mov
imul
cltd
stos
xchg
in
scas
lock
lret
sti
adc
int3
loopne
stos
mov
dec
scas
mov
into
mov
in
cld
xchg
stos
xchg
fadds
mov
mov
jmp
xchg
nop
dec
inc
push
adc
add
pop
loop
lods
test
xchg
adc
fsub
iret
or
cltd
sbb
sub
in
jmp
es
sahf
adc
sahf
outsb
sub
stos
mov
dec
adc
cmp
lock
jae
add
xor
lret
jl
int3
jle
xchg
cmp
jge
inc
in
and
mov
and
aas
push
dec
adc
dec
scas
fcomp
cltd
or
gs
mov
inc
push
push
push
mov
jne
fdecstp
push
outsl
lock
mov
pop
insl
or
loope
pusha
jge
std
aaa
sbb
lcall
loopne
fwait
add
shll
pop
jmp
lahf
cmc
cmp
xchg
stc
mov
pop
ror
adcl
ja
jle
mov
add
int
pop
cmp
mov
out
pop
cmpsl
test
cmp
hlt
imul
xor
rcrb
cwtl
or
std
jecxz
jns
mov
dec
fmul
test
jmp
mov
ss
inc
xchg
jns
sub
cmp
loopne
pushf
stos
lock
int3
sti
stos
movsb
jmp
adc
add
test
popa
movsb
pop
inc
subl
sub
xor
lcall
cmpxchg
fmuls
xor
aam
aam
movsl
push
push
stc
pop
xor
sbb
loopne
addr16
dec
lahf
xchg
push
and
lcall
jo
aas
jmp
cmp
xchg
movsl
mov
sub
pop
mov
loop
and
and
mov
test
lock
ss
hlt
sub
mov
loopne
fsub
jmp
shlb
adc
lock
das
push
xor
cwtl
ret
dec
scas
idiv
pop
push
fmul
out
cltd
pop
out
or
add
cwtl
ret
jmp
mov
arpl
in
cmc
cltd
add
pop
sub
nop
rcll
inc
xchg
ds
xchg
inc
xchg
popf
enter
mov
shll
add
pushf
aaa
push
cmpsl
pop
sbb
popf
xchg
mov
mov
adcb
add
into
or
mov
rclb
xor
test
add
xor
jmp
jmp
adc
shl
mov
mov
mov
sub
push
ret
lock
jmp
fadd
data16
mov
ret
xor
cmp
adc
shll
les
push
addl
shrb
mov
mov
stos
mov
pop
xor
fidivl
out
cmp
les
out
lds
pop
lock
addr16
mov
add
pusha
jbe
jo
dec
inc
into
push
or
loop
dec
xchg
lods
and
arpl
mov
inc
std
fstpt
jne
mov
into
fcmovb
lock
inc
lock
mov
inc
inc
inc
movsl
loopne
aam
mov
shl
mov
pop
fnstsw
mov
jbe
jmp
ja
push
lock
push
aas
xchg
stc
ss
dec
jo
push
loopne
test
jmp
push
dec
sub
cld
jno
push
cmpsl
dec
das
cmpsb
mov
into
shll
mov
cmpsb
inc
sbb
jo
or
sub
adc
test
jle
loop
int
nop
cmpsb
ss
dec
loop
je
loopne
adc
jae
imul
cmp
xchg
sti
leave
sub
js
pushf
jmp
push
mov
gs
aas
enter
sub
cmp
mov
movsl
dec
ffreep
iret
push
cmp
ret
jl
cmp
rorl
dec
imul
scas
icebp
adc
push
adc
inc
dec
or
aaa
push
arpl
shlb
je
sbb
addr16
fwait
xchg
inc
jecxz
sbb
imul
lcall
jns
mov
sub
mov
or
in
test
sarb
push
jmp
inc
outsl
rcl
pop
and
sbb
jp
repnz
lret
lock
pop
nop
cmp
sub
push
cmp
mov
mov
sbb
fadds
or
mov
fs
gs
imul
cwtl
rorb
pop
dec
and
xchg
fwait
xor
lret
ds
sub
adc
and
rcr
mov
sahf
xor
je
in
rcrl
in
push
shlb
lock
pop
inc
mov
adc
inc
popf
mov
and
mov
icebp
ss
cmp
js
dec
cld
inc
pop
les
cltd
xchg
sarb
into
mov
sahf
clc
or
scas
out
in
dec
insl
sub
jae
movb
jae
push
mov
scas
mov
into
loope
clc
xor
daa
or
dec
lods
or
stos
jmp
lea
mov
xchg
mov
sbb
and
andb
fadds
insl
aaa
and
mov
cmp
inc
ret
mov
jmp
cli
lret
aad
dec
cmp
mov
into
in
lock
outsl
pusha
dec
and
aas
jne
loope
xchg
xor
xchg
xchg
jl
mov
int3
nop
jge
xchg
mov
sub
xchg
cltd
js
xchg
and
push
sub
cs
test
daa
movsb
dec
mov
push
aaa
and
jmp
and
cmp
push
mov
leave
outsl
mov
in
shl
dec
sub
jp
imul
mov
pop
and
push
rcrl
jecxz
loopne
ret
imul
fisubs
ja
dec
cmp
subl
xorb
jae
pop
mov
add
ljmp
add
inc
loope
dec
int3
jno
insl
and
lea
mov
or
cli
test
lock
loopne
ficomps
jno
ret
shll
mov
ret
andb
clc
dec
push
fwait
push
fmuls
into
add
gs
jno
jl
outsl
ror
or
push
ret
jmp
push
jle
sbb
mov
out
lock
jg
jno
inc
lock
jmp
cmp
hlt
shr
mov
sub
test
lret
jge
scas
sub
adc
dec
mov
aaa
call
je
and
mov
fsubrs
sub
test
int3
rcll
adc
popf
push
add
or
addr16
arpl
inc
dec
rcl
add
in
sub
mov
mov
arpl
sub
xor
ds
add
mov
repnz
cmp
arpl
push
jg
xchg
repz
shlb
mov
push
mov
arpl
enter
sarb
adc
jl
dec
mov
pop
mov
jp
scas
adc
xchg
cltd
fdivp
mov
sub
aam
lcall
add
in
mov
jb
js
repz
ror
cmpsl
test
cmp
inc
mov
test
jmp
sbb
stos
mov
outsb
xchg
jo
jmp
pop
fmuls
mov
pop
scas
sti
mov
jne
push
stos
xor
cmp
xchg
les
fucomp
inc
mov
outsl
into
add
inc
xor
loope
jmp
adc
mov
mov
stc
jnp
sbb
add
outsl
mov
mov
adc
mov
into
scas
call
dec
push
sahf
pushf
inc
call
jae
push
ja
bound
lock
stos
xchg
dec
test
call
arpl
mov
add
and
mov
mov
sbb
ja
jnp
test
inc
mov
ljmp
sbb
iret
fstpt
int3
fstl
aas
mov
mov
cwtl
add
neg
insl
adc
pusha
lea
jmp
jbe
inc
popf
aas
orl
sahf
xchg
dec
aaa
inc
mov
cmp
or
add
inc
scas
dec
jp
in
stc
mov
js
jl
mov
mov
push
movsb
flds
sbb
cmp
jmp
xchg
sub
loop
scas
icebp
rorl
xchg
mov
scas
mov
push
cmpb
inc
push
xchg
mov
inc
repnz
jmp
inc
pop
or
dec
jmp
or
push
outsl
xlat
mov
cmp
mov
jns
jns
stc
fmulp
cltd
ds
call
cwtl
jmp
sarl
lds
pop
mov
xor
sub
das
rcrb
sub
adc
test
fucomp
pop
popf
leave
jbe
push
int3
out
or
push
mov
add
adc
jp
jmp
and
and
lret
sub
pop
push
cmc
xor
sub
sbb
test
cld
cwtl
jg
in
in
inc
enter
pop
ss
pop
rorb
movsb
mov
add
out
enter
cmp
icebp
push
lds
leave
pushf
adc
fnstcw
cmp
enter
stos
jmp
sub
and
xor
jns
out
mov
cmpsb
cmp
lret
fwait
mov
clc
add
add
mov
jns
cmpsb
outsl
sarb
mov
mov
divb
outsb
pop
arpl
int
pushf
scas
popw
or
mov
mov
shrl
inc
ror
pop
adc
xchg
mov
shr
das
adc
loope
cld
jbe
or
dec
pop
aaa
xchg
push
mov
mov
add
jg
pop
out
cmp
push
cmp
addr16
jae
daa
xor
mov
pop
popa
aad
mov
insb
pusha
add
rol
pop
dec
jp
cltd
xor
pop
sbb
sbb
xchg
push
leave
leave
negl
sub
mov
loope
cmp
adc
pop
or
jns
hlt
stos
scas
scas
mov
sbb
sbb
repnz
mov
or
cmc
lods
jns
mov
rolb
inc
aas
jbe
fisubrl
inc
sbb
dec
mov
sbbb
jno
jno
lds
cmpsl
dec
add
xchg
cltd
and
adc
pop
sub
push
loope
sti
loope
dec
mov
mov
out
jg
enter
jno
stos
stos
cmp
dec
xor
sbb
pop
xor
mov
aas
stos
inc
inc
jmp
mov
lahf
cli
inc
jg
cmpsl
fs
gs
pop
jmp
pop
jmp
stc
test
repz
xchg
pop
fwait
pop
cld
pop
mov
daa
inc
dec
movsl
xchg
mov
inc
movsl
sub
push
and
mov
mov
fwait
stc
icebp
mov
jmp
cmp
jle
and
ss
mov
vpermps
imul
fistl
sbb
arpl
test
jmp
bt
mov
mov
lret
mov
enter
pop
addr16
xlat
jmp
fcompl
lahf
push
ret
mov
inc
std
xchg
push
shll
pop
popa
jno
divl
pop
inc
xlat
and
mov
mov
mov
jb
aad
arpl
out
pop
mov
xchg
scas
movsl
rcr
gs
in
mov
clc
scas
daa
movsb
loop
adc
stos
xor
inc
xchg
lock
clc
in
enter
enter
xor
lock
popl
pop
jne
mov
ret
sbb
fsubrl
aas
cli
push
mov
cmp
jns
out
xchg
mov
inc
inc
test
adc
lret
loope
es
adc
fidivs
int
jns
shl
fisubl
push
add
or
call
pop
stc
cmpb
out
insl
xor
sbb
test
lret
lea
adc
inc
xorb
dec
bound
pushf
xchg
xor
sub
faddl
cltd
lock
jg
out
mov
icebp
fwait
mov
or
fistpl
jb
test
xchg
mov
jne
cmove
test
fcoms
cld
push
mov
int3
lods
jmp
mov
cmpb
and
adcb
decl
jg
dec
pop
mov
xor
adc
or
mov
pushf
cmp
inc
and
pop
jns
insb
xor
leave
inc
je
je
mov
jae
cmpl
cmp
out
pusha
nop
lock
adc
or
insb
mov
dec
vaddss
cmp
ret
int3
lds
inc
xchg
pop
mov
jmp
add
cmp
cmovl
push
loop
push
xor
scas
call
inc
sub
sbb
jge
iret
int3
mov
dec
inc
jp
mov
add
jbe
roll
dec
pop
xchg
push
imul
lds
jae
mov
sub
rorb
dec
mov
arpl
loope
mov
adc
sub
cs
loopne
jg
push
nop
clc
or
fsubrs
call
jmp
inc
push
xorl
test
fidivl
testl
cmp
fbstp
or
mov
mov
repz
cmp
ljmp
lcall
stos
sub
inc
lea
xchg
test
pop
xor
ljmp
lods
daa
mov
add
xchg
popa
addr16
sbb
fcompl
mov
movsb
mov
xor
adc
pop
or
aas
sub
aaa
in
mov
in
pop
adc
cmp
popa
adc
dec
mov
pop
ja
xor
lea
rcrb
stos
lret
pop
mov
rorl
fucomi
les
test
mov
lcall
mov
pop
sub
mov
mov
shll
shlb
aaa
mov
js
enter
add
lds
sbb
mov
std
jns
test
adc
in
ficomps
shl
pop
test
aas
cmpsb
dec
jmp
stos
sbb
daa
aam
push
fdivs
lock
punpckhdq
push
lods
xchg
jmp
inc
mov
push
mov
mov
adc
aas
stc
inc
mov
mov
mov
stos
sub
fs
or
outsl
call
or
mov
sbb
ss
and
cli
lea
in
jmp
cmp
ret
pushf
mov
push
ss
pop
roll
dec
lcall
adc
inc
jmp
aam
mov
add
dec
sub
fsubrp
jp
clc
testb
mov
xor
jl
adc
adc
and
jmp
push
mov
in
sbb
icebp
push
adc
loope
loope
addl
lret
jns
mov
inc
shll
mov
or
push
leave
dec
cmc
sti
shl
cld
inc
mov
rolb
adc
rcrl
lds
jge
sbb
jle
sbb
test
sub
push
mov
dec
jae
shrl
inc
ja
xchg
enter
mov
imul
je
js
daa
das
mov
punpcklwd
mov
fcomps
mov
ljmp
pop
rcll
dec
sbb
mov
jnp
int3
sub
in
xchg
movsl
sbb
fimuls
xchg
mov
fimull
inc
xlat
stos
xor
sbb
push
ffreep
repnz
scas
call
imul
jmp
fdivr
cli
orl
fimuls
shll
call
pop
ret
dec
das
pop
sub
inc
mov
orb
add
pop
mov
inc
xchg
and
adc
jge
test
add
aam
stos
dec
pop
inc
ret
dec
sbb
sub
xchg
test
mov
jmp
fistpl
push
xlat
iret
fimull
clc
push
pushf
pushf
fwait
scas
inc
pop
test
jmp
mov
push
mov
lock
jns
sub
orb
rcll
push
mov
mov
jo
inc
jmp
push
lret
add
rcrb
mov
js
adc
mov
xchg
adc
mov
or
inc
shr
mov
jno
mov
cwtl
dec
and
add
ja
mov
and
outsb
dec
into
mov
lahf
aas
sbb
aas
add
add
mov
jmp
ret
outsl
notl
lahf
out
cmp
gs
popf
dec
movsb
dec
mov
out
dec
jo
adc
dec
loope
jno
es
pop
popa
mov
adc
pusha
test
jae
push
popf
mov
mov
mov
mov
cmp
mov
mov
push
pop
shl
mov
jmp
aaa
enter
lods
xchg
xor
xchg
cs
cmp
ss
dec
or
adc
inc
mov
lcall
ret
mov
aaa
inc
push
pop
shr
mov
jle
sbb
cmp
pop
push
jp
dec
push
leave
loopne
push
sbb
pop
call
sub
inc
pop
test
adc
and
pop
cltd
in
push
movsl
mov
loope
inc
and
popf
stos
mov
pop
mov
test
xor
jg
rcrl
inc
mov
movl
lock
cmp
push
push
fstps
int3
imul
mov
pushf
stos
sub
sub
sub
push
mov
stos
cmpsl
push
lret
cmp
or
scas
insl
mov
dec
sbb
into
test
daa
sbbl
sub
aas
jle
hlt
imul
gs
dec
xchg
imul
std
pushf
subb
lock
rorb
dec
lock
cmp
popa
mov
stos
ret
push
push
pop
xchg
ja
movsl
ds
int
js
and
adc
fs
inc
ret
mov
add
sbb
pop
insb
insl
je
xor
or
test
cmp
fidivrs
imul
mov
jbe
push
out
fisubrs
movsb
push
lret
mov
and
test
jb
jmp
mov
xor
testl
imul
mov
mov
dec
repnz
and
pop
outsl
xlat
out
xchg
adc
mov
and
stos
into
andl
mov
imul
adc
ja
jp
jae
leave
push
sti
push
test
push
xor
inc
mov
jb
lcall
stos
sub
or
rcr
mov
insb
inc
push
insl
mov
bound
sub
xchg
xchg
insl
sub
cmpsl
sub
aad
je
pushf
push
out
dec
mov
jmp
or
mov
mov
rcr
loopne
xchg
xchg
sub
adc
ss
test
inc
xchg
outsl
sub
jnp
imul
fcomps
sub
shlb
jle
out
inc
cmp
or
inc
push
js
inc
fsts
push
pop
insb
pusha
mov
ficomps
pop
jo
mov
jl
sbb
adc
mov
lock
ret
aaa
aam
dec
movsb
push
add
incl
xor
sub
xchg
pop
js
scas
jp
ss
push
test
mov
mov
inc
dec
addb
adc
mov
bound
shl
jecxz
jmp
mulb
xchg
xchg
stos
or
nop
loopne
iret
inc
cld
sahf
cmp
cmp
sar
and
int3
mov
pop
shl
bnd
mov
mov
fs
mov
mov
daa
jge
cmp
push
push
xor
and
pushf
loopne
aas
pop
inc
insb
subb
xchg
loop
pusha
int3
mov
inc
and
ret
xor
jmp
xchg
mov
rcll
int3
jbe
mov
aad
out
inc
and
popa
leave
rcr
or
jne
and
mov
movsb
mov
dec
push
inc
popa
nop
loopne
int
lea
cmp
pop
or
mov
test
sub
popf
sub
and
jne
dec
jb
inc
popa
aas
pop
push
mov
adc
mov
jmp
fxch
mov
mov
jns
inc
sbbb
fxam
or
imul
test
pop
lds
mov
shl
xor
push
shr
sub
fidivs
outsl
xor
xchg
pusha
fdivl
mov
mov
loopne
cmp
mov
inc
inc
jmp
leave
cmp
fnstcw
inc
repz
loopne
sbb
adc
cmp
test
mov
jmp
outsb
mov
stc
xor
cmpsl
xor
aas
push
mov
pop
clc
addr16
lds
fimull
cmp
inc
push
test
adc
cmp
arpl
cmp
adc
imul
xorb
stos
out
or
inc
push
testl
lcall
repnz
loopne
lret
xor
mov
mov
popf
out
mov
sub
stos
mov
aam
jo
mov
scas
movsl
xor
rorb
mov
mov
and
push
sbb
lahf
cwtl
adc
lock
dec
popf
popf
in
adc
leave
cmovge
test
into
ret
and
testl
jmp
cs
repnz
scas
dec
mov
and
xorb
pop
add
adc
fbstp
outsl
movb
rorl
rcll
ret
int3
loopne
mov
mov
movsb
push
arpl
inc
pop
cltd
xchg
mov
xor
dec
aas
cmpb
cmp
nop
shlb
aas
jg
xchg
cmc
adc
mov
arpl
in
addb
mov
pop
and
dec
stos
jp
nop
clc
or
and
jmp
insl
dec
popf
movsb
daa
mov
and
xor
pop
sbb
or
and
stos
dec
jns
cwtl
sbb
je
fsubs
pushf
xchg
xchg
out
jne
mov
loop
inc
test
lcall
loopne
shld
sahf
jns
stos
ss
cmp
fucomip
divl
push
rorl
mov
cmp
sub
inc
mov
ds
popf
test
imul
lcall
jb
adc
jl
xor
sub
mov
xor
adc
test
sub
add
mov
arpl
lock
pop
mov
adc
sti
jecxz
gs
pop
insb
stc
iret
push
jl
adc
sahf
out
or
int3
test
out
lods
and
ljmp
ret
mov
or
stos
mov
xlat
rol
orl
xchg
mov
jns
int3
insb
pop
imul
xchg
xchg
adc
lcall
adc
lea
insb
xchg
aas
pusha
dec
push
or
mov
fstpl
faddl
std
push
cmc
je
or
test
jg
jle
pop
call
aaa
mov
arpl
mov
push
xor
push
jmp
es
jmp
push
cmp
cmp
mov
insb
popa
movsl
dec
ret
pop
mov
mov
into
pop
lock
popa
or
jle
xor
push
in
pop
xor
test
fcoms
or
sub
out
fnstsw
fst
fadd
scas
leave
mov
test
lods
mov
xchg
xchg
add
fwait
or
adc
mov
sbb
stos
je
mov
push
aam
mov
sub
xchg
cmp
jmp
in
push
shlb
adc
xchg
mov
mov
mov
dec
push
jecxz
fs
in
cltd
int3
repnz
rorb
pavgb
and
insb
out
arpl
in
sub
and
pop
dec
push
pushf
cmpsb
jle
movsb
loope
pusha
es
pop
jmp
xor
stc
outsb
cltd
ficomps
aas
test
pop
ficompl
ret
shll
sbb
rolb
bound
inc
sbbl
cmp
sbb
xchg
mov
cltd
insb
jno
sub
insl
cltd
jmp
ficoml
test
and
adc
cmpsb
xchg
cmp
icebp
xchg
jge
cltd
mov
and
stc
push
inc
mov
fsubrl
jae
push
cltd
neg
push
aad
xchg
cltd
fcmovbe
mov
dec
cltd
ret
lcall
add
sbb
cmpsb
cwtl
pop
xchg
cltd
add
mov
cld
mov
shlb
movsl
test
cltd
push
adc
call
push
sahf
movsb
sbb
in
xor
cltd
dec
je
test
sub
cltd
pop
xor
sub
pop
aaa
and
movsl
and
pop
cltd
mov
xchg
lods
icebp
cltd
scas
test
lret
push
bound
cltd
xor
adc
mov
push
ret
lcall
aas
xor
push
dec
cltd
mov
jb
sarb
xor
ljmp
and
cmp
popf
ret
outsb
cltd
push
sub
aad
sbb
pusha
dec
andb
ret
pop
and
xor
fstl
ljmp
mov
cltd
roll
lea
pop
xor
cltd
xorl
inc
rcrb
test
pop
jns
xchg
cwtl
arpl
sbb
mov
daa
cmp
jns
jl
ror
sahf
cmp
sti
sbb
loopne
shrl
mov
lock
xchg
loop
rol
cmp
movsb
je
jmp
in
cmp
pop
jb
add
int3
roll
mov
mov
cltd
or
push
mov
or
ss
jmp
jno
stc
mov
dec
lret
scas
sti
in
jmp
test
mov
jo
out
pop
adc
call
sbb
xchg
mov
je
xchg
cltd
xor
popa
andl
dec
pop
loopne
scas
in
je
adc
push
fsin
mov
loopne
and
mull
jno
test
lds
mov
fwait
das
or
mov
mov
jne
cmp
std
sbb
cltd
mul
in
or
jle
rcrl
adc
mov
rorb
cmp
mov
loopne
popf
ficompl
out
jb
cmpsl
mov
mov
cltd
ret
lret
sbb
pop
cwtd
lret
sahf
out
mov
cmpsl
adc
xor
and
mov
in
push
inc
mov
out
fimull
mov
mov
dec
sub
sahf
cltd
mov
lea
imul
cltd
dec
rolb
std
add
push
test
andb
jo
lea
sti
mov
fstps
or
cmpsl
pop
ret
pop
fwait
cltd
push
jle
push
aam
cltd
mov
lcall
outsl
cmpsb
cltd
mov
imul
cmp
jg
pop
sbb
repnz
cltd
popf
xchg
mov
mov
test
mov
shl
mov
jle
iret
call
push
rorb
out
rclb
lock
add
sbb
pop
sarl
cmp
cltd
xor
mov
mov
pop
inc
inc
cmp
js
shll
push
mov
adc
test
sub
push
cmp
movsl
adc
push
pusha
stos
cltd
push
cmp
add
imul
pop
dec
int
cltd
fmul
mov
cld
mov
mov
push
sbb
stos
movsb
cltd
cmpsl
xchg
aaa
imul
daa
out
ret
fcmovb
add
sub
mov
stc
and
mov
dec
mov
popa
je
ret
movsb
pop
jle
scas
mov
pop
or
jg
lahf
dec
imull
clc
cmc
cltd
cmpsb
mov
pop
cmpsl
push
inc
mov
push
add
inc
mov
or
ror
insl
add
icebp
cmpsl
push
mov
test
in
and
dec
cmp
iret
cmpsl
mov
sbb
or
pop
aad
pop
lea
xlat
sbb
in
or
pop
cmp
cltd
jb
cwtl
lret
adc
dec
das
cltd
cmp
mov
xor
cmp
add
fmuls
jns
fistps
dec
fwait
dec
repnz
lcall
or
out
outsl
icebp
or
out
jmp
lcall
insl
jp
sbbb
lret
cmp
leave
pop
sub
sbb
lret
push
push
dec
cltd
call
nop
add
or
mov
idivl
sbbb
pop
aas
ret
jge
adc
add
adc
movsl
push
mov
gs
pop
sub
test
and
pop
cltd
xor
push
or
cltd
loope
aam
iret
hlt
lret
xchg
in
icebp
scas
movl
movsl
pop
cwtl
div
cmpsb
fistpll
call
scas
aam
jns
xchg
jae
jmp
icebp
inc
cmpb
cltd
cs
jl
sbb
adc
xor
push
hlt
cmpsl
cmp
cmpsb
cld
xor
test
mov
insb
cltd
push
pop
lods
xor
pop
cltd
in
adc
jns
push
sbb
fcomps
fsts
adc
stos
cmpsl
or
mov
xor
fdivl
stc
xor
test
push
and
jbe
cltd
push
sbb
xchg
shlb
mov
mov
cltd
popa
dec
xchg
fcompl
loope
lea
in
xor
cltd
les
sub
xor
int3
mov
dec
mov
push
arpl
pop
cmp
xlat
cmpsl
inc
stos
push
int3
inc
inc
push
sub
jle
fcos
pop
xchg
cmp
add
ja
jne
subl
fsubrs
stos
mov
mov
sbb
popa
cltd
in
pop
push
dec
fwait
scas
dec
xchg
nop
sbb
push
int3
inc
lods
mov
adc
ret
sub
sub
push
test
adc
fwait
or
sub
andl
nop
lret
shll
mov
sbbl
nop
mov
mov
inc
cltd
sbb
pop
xchg
imul
leave
xchg
push
cltd
cmp
and
adc
lock
xor
pushw
jnp
lods
lret
int3
sbb
sbb
mov
and
mov
sbb
ljmp
sbb
je
pop
xor
mov
ds
inc
or
ljmp
roll
mov
and
dec
notb
and
mov
fisubl
add
inc
rcrb
sub
jecxz
scas
jmp
mov
inc
inc
jp
ss
pop
inc
aaa
test
jae
cmp
adc
ficompl
jns
es
jbe
mov
push
stc
push
scas
les
pop
scas
mov
push
and
sahf
dec
xlat
fstps
push
fwait
cmpsb
scas
aaa
sub
fs
mov
bound
stc
das
sub
pop
rcrl
rcr
dec
xor
pop
cmp
mov
jns
inc
jno
roll
outsl
pop
out
sbb
in
out
inc
cltd
mov
mov
ficompl
pop
add
hlt
inc
sbb
aaa
push
movsb
adcl
idivb
ret
xor
and
fmull
scas
enter
cli
sahf
out
adc
dec
push
jne
jecxz
add
cltd
mov
and
xor
dec
ja
pop
out
subl
and
mov
cmp
test
andl
arpl
add
jmp
insb
cmp
cmpsb
out
scas
dec
leave
imul
pusha
mov
push
push
and
and
push
cltd
setg
movsb
cmpsl
lret
call
sbb
inc
mov
stos
cmp
daa
hlt
clc
and
cltd
cmp
cltd
mov
xor
sub
cmp
jb
pop
mov
stos
cltd
int
dec
inc
loopne
push
mov
mov
aam
jle,pt
push
jecxz
in
mov
inc
mov
cmp
leave
aas
sbb
push
sbb
xor
push
mov
insb
lcall
js
cmp
mov
mov
ja
jo
and
mov
adc
xchg
fwait
push
push
mov
lahf
mov
jb
push
test
int3
insb
cltd
in
sti
imul
cltd
dec
jnp
mov
popa
push
cmp
cltd
sbb
or
rcrl
mov
ret
push
adcl
mov
dec
fs
mov
xorb
cld
xor
lock
mov
add
sahf
cmpsl
fwait
sbb
dec
bound
fldt
rorb
ds
cltd
dec
jns
leave
pop
xchg
es
cltd
cmp
fs
popf
adc
fmulp
je
cltd
dec
adc
les
pop
into
and
cltd
adc
jecxz
cltd
rcl
xchg
add
add
mov
add
das
cmpsl
dec
scas
cmp
repz
cli
sbb
dec
rcrl
cmp
sub
cmpsl
jno
fisttpl
rorb
cltd
mov
std
cltd
push
fmul
push
sbb
xchg
dec
cltd
add
and
push
pop
inc
stos
mov
or
jle
nop
fimull
pop
mov
andl
jecxz
add
xor
adcl
pop
push
aam
cmpsl
lds
adcb
cltd
imulb
sbb
mov
mov
es
cmp
xor
sbb
cmc
aam
sbb
std
scas
jb
mov
mov
sti
xor
inc
inc
jle
loope
mov
push
jmp
mov
cltd
iret
or
mov
xor
xor
push
lods
cltd
mov
js
cltd
repnz
smsw
orl
in
mov
subl
xchg
int3
and
jne
fwait
jg
push
xchg
pop
inc
scas
xchg
decl
frndint
push
and
mov
adc
cltd
adc
jl
xor
jge
ficomps
push
dec
cltd
test
cmp
cltd
and
out
pushf
and
iret
cltd
mov
in
stos
cltd
and
in
sahf
cld
jecxz
and
fsubr
pop
sub
lcall
adc
cltd
mov
repz
das
mov
mov
push
inc
mov
and
jl
jg
shl
mov
push
hlt
nop
lcall
out
mov
aaa
stos
add
fstps
cltd
sar
negb
test
pop
inc
cltd
push
out
sub
push
ficompl
in
iret
movsb
sbb
mov
movsl
push
mov
xchg
outsb
lods
scas
ret
int
inc
fwait
mov
in
mov
adc
pop
adc
adc
test
sbb
push
insb
jns
lods
movsl
icebp
jle
xchg
dec
and
movsb
idivl
and
inc
add
icebp
call
dec
loop
sbb
stos
mov
push
inc
test
lret
push
mov
pop
cltd
cmp
or
pop
cltd
mov
scas
lods
sti
or
mov
mov
out
lods
loopne
dec
fists
inc
sarl
mov
pop
movsl
adc
sub
add
pusha
cltd
fcmovu
xor
cld
aad
add
fs
out
std
xchg
rolb
test
add
stos
add
and
fdivl
cwtl
mov
adc
xor
ret
mov
stos
hlt
mov
fiadds
xchg
sbb
enter
or
in
insl
movsl
mov
mov
popa
add
cmp
lahf
cmpsb
mov
inc
das
test
push
fadds
push
pop
mov
loop
cmp
xor
mov
cmp
mov
xor
clc
and
sub
daa
shrl
jno
push
cmp
fs
shlb
inc
mov
orb
test
cltd
jbe
ljmp
mov
jmp
cltd
movsl
jbe
daa
outsl
das
arpl
mov
sbb
lods
sub
rorb
mov
movsb
sub
push
popf
aad
add
lcall
lret
fwait
mov
sub
push
fcoms
rorb
mov
movsb
sar
mov
sub
push
fidivs
js
cltd
int3
sub
mov
sti
pusha
fwait
dec
pop
dec
xor
dec
adcl
pmaddwd
dec
sbb
mov
outsl
sbb
inc
push
scas
lock
test
jp
or
test
pandn
and
jecxz
inc
pop
cltd
inc
scas
out
imul
sbb
mov
or
repz
bound
lods
rolb
cltd
sbb
ret
scas
pop
scas
mov
xorb
jmp
dec
out
pop
inc
mov
cltd
aas
xor
mov
cltd
out
out
add
and
lods
scas
dec
pop
pushf
mov
stc
fwait
jle
sbbb
fs
int3
popa
jns
insl
add
jmp
sti
add
bound
cltd
subb
popa
dec
aam
xchg
cltd
pop
dec
imul
and
mov
ret
and
inc
shrb
popa
cmp
pop
cltd
pop
jb
sub
and
push
cltd
leave
push
fadds
adc
inc
shrb
pop
cld
sarb
das
mov
and
fisubrs
repz
int3
cmp
mov
mov
mov
cltd
mov
xchg
xor
push
imul
call
dec
pop
negb
sahf
fcomps
mov
dec
mov
jmp
fs
fwait
shll
enter
and
scas
dec
lret
mov
iret
shlb
cltd
daa
jge
jo
insl
adc
shrb
cltd
idivl
lcall
cs
icebp
pop
mov
fdivl
enter
insl
cltd
test
fildll
cmpsb
bound
in
cltd
xchg
xchg
mov
int
sub
xor
mov
sub
call
sbb
jb
cltd
adc
mov
jecxz
inc
or
pop
fbstp
xchg
fldenv
adc
pop
cmpl
xor
fcmovnu
sbb
nop
mov
mov
out
mov
addr16
or
cltd
mov
shrb
push
pop
dec
pop
xchg
mov
inc
xchg
fcomps
imull
nop
lock
and
fsubrl
inc
sarl
ret
mov
mov
mov
mov
into
inc
movsl
cmp
push
movsb
fstps
xchg
mov
mov
or
lcall
pop
lahf
adc
mov
in
cltd
mov
lods
or
mov
xchg
mov
in
cltd
mov
sub
pop
sbb
sbb
addl
enter
xor
dec
fisubs
add
cmpsl
jge
mov
jno
mov
mov
into
test
pop
pop
inc
pop
mov
inc
fbld
out
lods
dec
jmp
fwait
cs
push
enter
fidivrl
push
lods
cltd
or
sbb
nop
test
xlat
mov
negb
in
jbe
cmpsl
data16
jle
xchg
and
movsb
setns
inc
xor
pop
outsl
cwtl
jae
dec
or
fnstsw
xor
mov
out
mov
insb
cltd
arpl
push
out
movsl
xor
stos
in
out
cltd
mov
jo
inc
cltd
sbb
inc
mov
in
mov
cmp
imul
imul
out
inc
pop
mov
mov
fnstcw
lea
pminsw
push
or
cltd
mov
pop
cltd
aam
xchg
mov
orb
xor
or
clc
cmp
lret
mov
pop
mov
in
andl
fdivr
outsb
xor
mov
cltd
sbb
mov
mov
les
addb
push
jmp
xchg
mov
das
sbb
pop
or
inc
push
push
mov
fadds
dec
push
fs
mov
popf
loope
sub
mov
js
adc
mov
ror
jp
cltd
push
lods
ret
add
gs
pop
scas
xor
lret
adc
int
repz
les
data16
mov
negl
aad
in
push
inc
fimuls
dec
lds
dec
mov
movsl
lea
je
and
and
pop
adc
and
fstps
cltd
jnp
fcmovnbe
sub
stos
dec
mov
push
je
mov
iret
cltd
ss
dec
jl
or
arpl
xor
cltd
test
mov
aas
fwait
sbb
adc
cmp
sub
cltd
cltd
test
addr16
js
ret
or
inc
outsl
xchg
fs
pop
sahf
test
in
sub
cmp
int3
cltd
mov
scas
out
cltd
aam
and
cltd
test
leave
push
lock
cltd
lret
dec
sbbb
popf
xor
xor
shll
push
daa
xor
dec
shr
ret
mov
push
cmp
lock
bnd
add
dec
adc
or
push
scas
cltd
mov
loope
imul
pop
dec
ss
xchg
cltd
out
out
outsb
cltd
stc
pop
adc
imul
mov
dec
ljmp
jbe
inc
mov
sbb
or
or
adc
push
test
cltd
lock
mov
sbb
dec
and
mov
fwait
and
int3
out
jmp
inc
mov
push
cltd
jle
loopne
inc
jmp
test
idivl
fisubl
mov
leave
mov
out
dec
lcall
jg
stos
jno
mov
add
sbb
stc
cmpsb
and
idivl
fldt
test
jmp
pop
jno
xchg
mov
pop
mov
divb
scas
lahf
dec
outsb
mov
pop
call
mov
sbb
sahf
pop
fwait
jns
dec
mov
cs
jnp
cmp
mov
and
mov
mov
xchg
sbb
xor
roll
adc
dec
scas
scas
popa
push
insb
mov
fstps
lds
cltd
dec
jnp
adc
movsl
cltd
out
repz
xchg
scas
icebp
mov
movsb
les
sub
adc
test
sub
add
sbbl
ret
int
jo
pop
stc
in
and
call
cltd
dec
inc
inc
fcoms
cld
sub
xchg
dec
dec
loopne
mov
push
fwait
mov
aad
scas
repnz
lret
pop
dec
cltd
or
lods
xor
fcompl
ss
xchg
ret
ja,pn
dec
xchg
fcomps
mov
fidivrl
mov
nop
aad
movsb
cmpsb
push
cltd
aam
push
clc
cltd
add
js
popf
mov
mov
mov
sbb
pop
xchg
enter
dec
adc
jl
mov
adc
movsb
scas
mov
mov
jle
loop
push
mov
mov
sbb
mov
loopne
pop
add
adc
and
cmpsl
dec
stos
jl
push
push
cmpsb
sti
test
pop
lcall
xor
jecxz
mull
lret
movb
mov
stos
in
cltd
add
scas
pushf
inc
sub
add
leave
sub
shlb
mov
xchg
cltd
sbb
fbld
cli
loope
push
cs
dec
cltd
sti
mov
push
cltd
bound
mov
hlt
cmpb
cwtl
sub
sub
nop
scas
ljmp
ror
clc
cltd
xchg
inc
shrb
adcl
cltd
loope
push
cmc
lock
cmpsb
cltd
xor
pusha
scas
es
loopne
arpl
pop
nop
fwait
mov
fs
jp
xchg
inc
or
enter
mov
adc
pop
push
dec
xchg
scas
pop
pop
adc
leave
inc
inc
cltd
xchg
push
push
inc
push
cmp
loope
pop
inc
dec
lds
push
push
clc
cmpsb
lea
mov
test
fisubrl
shl
push
cltd
iret
cmpsl
popa
dec
out
in
imul
cltd
cmpsb
in
orl
je
mov
hlt
clc
cltd
fstl
gs
push
dec
rcrb
and
test
sbbl
cltd
fimuls
adc
mov
inc
pop
fwait
das
sti
out
insl
aas
mov
cltd
jle
mov
pushf
es
mov
loopne
aad
cmc
pop
mov
cltd
push
sub
mov
and
xchg
cs
pop
in
mov
mov
mov
xor
sub
fcmovu
cmp
cltd
or
push
rcll
mov
scas
divb
lods
shlb
cltd
outsb
lods
xchg
fstl
fsubp
out
lock
call
inc
pop
mov
scas
dec
dec
fs
lods
pop
and
adc
push
in
cmp
fstpl
jmp
and
es
inc
out
shll
and
cltd
inc
inc
test
add
dec
in
or
xor
cmpsl
subb
push
fistps
pop
fdivrs
aaa
mov
cltd
scas
insl
or
cltd
cmc
inc
mov
push
pop
sbb
mov
cmp
push
jge
mov
rclb
jl
jns
add
inc
push
sub
clc
jecxz
je
stc
mov
test
inc
clc
jg
repnz
je
mov
dec
ljmp
push
fcompl
cmpl
mov
adc
js
nop
inc
cmp
mov
mov
mov
push
aaa
and
ss
lods
sbb
rorb
jmp
stos
adc
cli
mov
int3
xchg
adc
add
xorl
mov
add
push
xchg
dec
pop
jmp
push
mov
sub
sbb
cmc
in
xchg
fs
es
call
into
sub
lcall
sbb
jmp
in
push
pop
lds
push
imul
popf
xchg
out
and
std
pop
push
push
inc
sidtl
lods
iret
push
or
pop
adc
push
flds
frndint
push
pop
adc
cmp
rclb
inc
out
subb
adc
jns
mov
or
repz
pushf
cmp
loop
adc
cld
dec
imul
lahf
icebp
dec
sbb
mov
xchg
push
mov
jg
aaa
push
pop
or
push
pop
mov
dec
inc
ret
pop
or
lds
leave
push
push
loopne
inc
adc
lret
or
sahf
and
ficompl
addl
dec
and
cmpsb
pushf
mov
cmp
dec
mov
cli
insl
sbb
push
mov
adc
fwait
pop
jnp
fcoms
insl
cmp
cmc
movsb
jmp
ficoml
jb
and
sti
xchg
xor
xor
add
loope
add
enter
inc
lahf
in
mov
int3
jmp
and
outsl
xchg
mov
addr16
xor
je
rep
rol
mov
int
mov
dec
dec
jg
adcl
xchg
mov
jae
cs
dec
cld
movsl
das
or
test
test
mov
cmpsl
sbb
arpl
add
popa
xchg
lret
jmp
adc
sub
pop
push
dec
loopne
sbb
shlb
popf
sub
cmp
fbld
and
inc
pusha
mov
push
je
bound
adc
pop
inc
or
xchg
iret
pop
mov
notl
adc
push
aaa
dec
cmp
inc
mov
sbb
iret
cmp
lock
jmp
xchg
mov
lret
fimuls
lock
pop
test
mov
adc
cwtl
test
mov
ficompl
sbb
pop
or
mov
fsubrs
arpl
out
jmp
or
jmp
mov
in
popf
push
and
add
int3
aas
ss
ret
dec
data16
dec
jmp
and
mov
inc
andb
mov
xor
and
pop
sub
lods
outsb
test
hlt
fcmovb
fisttps
jmp
jge
aaa
push
xchg
sbb
fiadds
arpl
xchg
clc
arpl
mov
mov
loop
ja
jnp
jmp
push
xorl
push
ret
add
movsb
fisubs
cmc
add
fsubl
scas
adc
jmp
popf
pop
je
pop
sbb
xchg
xchg
in
jns
dec
and
push
and
or
or
arpl
and
into
into
cmpsb
add
and
aam
test
mov
inc
lret
inc
imul
xor
ljmp
mov
cmp
pop
inc
mov
scas
cltd
imul
jae
sbb
xchg
cmp
mov
outsb
test
inc
sbb
pop
fwait
push
mov
xchg
dec
out
int3
dec
jl
mov
mov
shr
mov
sub
fisubs
ja
repz
cmpsb
push
int3
ja
adc
movsl
xor
popf
mov
jecxz
jp
ss
sbbl
xor
lock
dec
ffree
rolb
jbe
mov
jl
fucomip
popa
outsl
jl
cmp
xor
jmp
arpl
cld
nop
cmp
lock
add
leave
mov
jmp
shrb
pop
xchg
and
inc
mov
fucomi
lahf
jge
push
test
sbbl
shl
arpl
xchg
and
inc
push
arpl
and
popa
insl
or
add
jmp
mov
mov
jbe
pop
pop
mov
orl
or
sbb
fcomps
mov
jmp
arpl
iret
dec
mov
dec
jmp
push
add
jp
pop
xor
or
xchg
pop
inc
jae
shl
and
repnz
imul
push
aas
out
xor
push
outsb
and
repz
shlb
xor
clc
and
mov
push
rcrl
xchg
jp
and
rclb
jmp
xchg
sbb
iret
add
jmp
je
sbb
sbb
or
push
ss
lds
shl
sub
icebp
in
loop
outsl
cld
adc
sarl
imul
sarb
and
mov
call
in
adc
mov
jae
fmulp
cmc
insl
mov
outsb
shll
xchg
add
xor
cwtl
push
inc
mov
insb
xor
xor
rolb
ljmp
mov
mov
push
mov
adc
mov
xor
popa
mov
sbb
sbb
pop
lret
jmp
inc
pop
jmp
fistl
sahf
push
stc
lock
inc
and
lcall
inc
push
xchg
push
push
fwait
mov
or
sbb
mov
adc
inc
jmp
ret
hlt
or
cmp
stos
push
shl
jmp
into
sub
mov
mov
jmp
inc
stos
jb
and
add
jl
cmp
enter
and
lahf
inc
sub
pop
push
mov
push
sub
mov
mov
nop
dec
push
add
push
enter
and
lock
je
faddl
int
mov
movsb
insb
mov
mov
sub
mov
cmp
scas
xchg
and
jae
sub
mul
sbb
adc
inc
jmp
fs
xor
aam
shll
pop
cmp
adc
ja
gs
fadds
sbb
add
xchg
dec
aam
in
sub
repnz
jmp
rorb
pop
lret
jmp
test
pop
rcll
pop
inc
mov
xchg
xor
dec
inc
outsl
xchg
or
out
fsubrl
out
push
dec
xchg
outsl
push
lret
mov
lcall
mov
outsl
and
shlb
test
xchg
xchg
shll
push
adc
flds
fistpl
out
mov
stos
pop
cmp
enter
add
push
mov
shrb
pop
mov
push
out
and
xchg
test
shr
xchg
dec
mov
out
hlt
jo
lcall
enter
aaa
jno
sahf
enter
dec
push
jnp
cli
pushf
jmp
jb
movsl
cld
mov
rcrb
pop
or
jno
pop
popf
dec
stos
push
and
test
sbb
xchg
std
xor
loopne
inc
add
fistl
inc
inc
push
inc
jle
push
fists
fcompl
xor
jno
stos
into
enter
jmp
mov
mov
loopne
dec
sahf
xor
fsubs
outsb
sub
xorb
lds
cmp
xchg
dec
and
ss
mov
inc
sub
cmp
dec
into
adc
lock
pop
jo
cmp
pop
cmc
int3
mov
lea
in
cmpsl
jp
jmp
into
aaa
js
push
or
push
and
xchg
iret
mov
or
push
xor
sub
lock
dec
jne
testb
das
inc
xchg
shlb
test
test
pop
addr16
mov
hlt
fstpt
sbb
incl
in
xchg
inc
mov
cmp
push
mov
insb
adc
test
mov
ja
arpl
call
sub
lods
rcl
xor
add
xor
aaa
aam
and
mov
enter
aad
adc
movsl
and
outsb
and
push
lret
ret
jnp
fstpl
mov
or
inc
pop
add
jae
iret
test
dec
push
popf
push
out
adc
add
test
stos
sub
loopne
shlb
mov
dec
scas
mov
movsl
shl
insl
lret
mov
loop
sub
jmp
fisubs
les
cld
arpl
outsb
popf
and
pop
in
or
jmp
loope
cltd
xlat
loopne
push
les
dec
mov
xor
pop
jmp
xchg
lods
rorl
mov
aas
add
xorl
mov
stc
jecxz
sub
push
cli
out
sub
loope
and
sahf
sbb
xchg
aaa
jae
cmp
push
jge
lods
dec
inc
sbb
lock
inc
xor
or
pusha
call
stos
sub
push
sbb
sub
pushf
mov
or
add
test
inc
or
push
mov
outsl
int
mov
dec
outsb
pop
into
enter
orl
push
je
jge
or
dec
jmp
xor
dec
fs
add
xchg
sarl
mov
lcall
jmp
and
cmpsl
mov
dec
cmp
call
pop
inc
ret
outsb
cmp
add
jl
inc
mov
or
push
movsl
lock
sti
jo
mov
dec
dec
ret
sbb
mov
or
mov
aaa
fisttpll
xor
dec
dec
int3
xor
lock
jbe
aas
fincstp
mov
push
mov
int3
loope
scas
adc
fisubrl
lret
lods
push
dec
mov
addl
fs
sub
mov
dec
arpl
paddusw
loopne
lock
jge
cmc
fwait
and
jle
fcom
mov
cmc
cmp
shll
cmp
stos
fdivrs
stos
ja
adc
pop
fcomps
pop
mov
iret
aaa
loopne
xor
jae
xor
mov
idivl
xchg
push
dec
mov
lods
hlt
out
dec
fildll
pop
lock
mov
ret
add
sub
push
jg
int3
jnp
movl
cmc
call
adc
subl
cmc
addr16
out
shrb
push
fstpt
cmpb
sbb
pop
push
push
fists
jecxz
inc
xchg
xchg
and
insb
inc
mov
in
fwait
xchg
xchg
xor
mov
cwtl
popf
nop
mov
or
and
lcall
push
sarl
pop
or
sbb
dec
aaa
popf
repz
xchg
daa
fmulp
mov
movsl
inc
int3
jmp
or
movsl
pop
in
es
les
push
aad
xchg
fwait
jmp
lock
daa
dec
movsb
sub
lret
int3
rolb
jp
mov
xchg
push
xor
pop
mov
cmp
movsl
lock
mov
bound
push
lds
push
sbb
jg
int3
mov
mov
mov
xchg
std
addr16
and
and
mov
inc
pop
xchg
insb
arpl
mov
jecxz
jle
cli
int3
sub
cmp
pop
sahf
or
shl
pusha
int3
insb
loop
scas
sbbb
out
and
lock
mov
mov
xor
mov
jmp
push
les
not
xchg
mov
xchg
addl
cmp
xlat
jecxz
sub
dec
jmp
adc
aas
xchg
or
or
sub
insb
add
mov
xchg
inc
fwait
in
lods
push
sbb
mov
icebp
pusha
and
lret
and
dec
sbb
pushf
mov
insl
mov
inc
mov
outsl
and
xor
cmpsb
sahf
pop
stos
pop
lret
mov
mov
or
cmp
stc
push
in
add
mov
stos
js
pusha
imulb
scas
mov
int
enter
push
cwtl
push
roll
jmp
adc
add
into
jbe
and
movsl
mov
ret
fucomip
iret
pop
inc
mov
adc
cli
mov
push
jmp
les
push
jl
dec
lcall
sbb
adc
xchg
int
mov
pop
loopne
dec
mov
mov
dec
movsb
js
int3
pop
mov
lcall
fadds
popf
je
into
outsb
sahf
lret
cld
lods
and
test
call
sub
or
sub
jle
sub
ret
cld
nop
stos
jl
sub
int
add
stos
decl
mov
insb
mov
jmp
mov
sub
pusha
jne
out
pop
fldt
leave
mov
sub
adc
inc
xor
push
pop
testl
lock
or
lea
aaa
cwtl
stos
pop
stc
push
mov
into
sbb
fsubr
es
push
loopne
adc
fisubrl
xchg
push
and
mov
pop
test
aas
stos
adc
adc
cli
push
sub
xchg
and
cmp
cltd
lcall
adc
adc
addr16
push
movsl
out
add
imul
add
dec
outsb
sti
fists
mov
add
hlt
push
xchg
cmc
cmp
pop
and
sbb
pop
adc
mov
outsl
movsl
xor
sub
jecxz
movsb
cli
jle
lock
repnz
xor
push
mov
lock
inc
call
aas
and
arpl
daa
in
arpl
add
jno
stos
call
enter
shr
xchg
jb
imul
inc
adc
push
inc
std
mov
imulb
jb
out
popa
xchg
and
cmpsb
clc
inc
or
xor
xchg
int3
sub
shll
pop
jle
pop
sbb
or
mov
in
bound
mov
pop
subb
sbb
loopne
adc
fs
pop
xchg
jno
sub
lock
push
and
sub
jl
lods
loope
or
cmp
sub
sahf
cmp
pop
mov
mov
jns
inc
and
or
stc
and
jmp
jo
cmp
jno
xor
push
jmp
pop
out
sbb
mov
lahf
sub
mov
mov
popf
jg
jecxz
stos
test
scas
insl
stc
xchg
sbb
fldl
jo
mov
or
out
ljmp
jne
mov
popa
shrb
adc
jl
dec
xor
es
loopne
ljmp
mov
mov
push
sbb
shll
cmp
push
xchg
and
pop
and
scas
jg
loopne
jns
loopne
add
dec
stos
fld
jp
jne
mov
fiadds
addr16
inc
aaa
and
fimull
outsl
and
test
mov
cltd
cmpsb
cmpsl
inc
popf
lahf
cmp
sub
sahf
push
and
jae
fimull
popf
xor
xchg
inc
jmp
test
and
add
push
arpl
hlt
cwtl
cwtl
mov
jp
or
aaa
mov
inc
ss
call
pop
shll
adc
lcall
xor
leave
aaa
pushf
jo
fiaddl
mov
into
clc
jg
loope
aam
mulb
popf
int3
cmp
sbb
jno
xchg
ficomps
dec
subb
ret
mov
jl
shlb
loopne
in
outsl
xlat
push
and
adc
insb
mov
ret
push
xor
xchg
sbb
sub
shr
outsl
sub
mov
sub
jb
leave
and
pop
sahf
cmc
push
loopne
and
mov
xchg
dec
aad
sbb
in
push
jecxz
jg,pn
aam
ficoml
lods
cmp
sbb
xchg
nop
xchg
cmc
mov
add
cmpsb
aas
in
sub
ds
mov
push
xchg
imul
imul
popa
and
lret
or
sub
xchg
std
test
jmp
shll
add
sarb
mov
es
cs
or
xchg
sub
aam
fiaddl
jmp
inc
cmc
mov
ret
mov
and
jns
add
jle
jmp
sahf
inc
push
cmpb
mov
call
ret
push
sti
or
aam
push
sahf
xchg
addr16
mov
cltd
jne
and
sahf
sub
and
shlb
add
mov
nop
jne
push
jae
aad
sub
add
mov
in
jmp
daa
mov
es
sub
loopne
jns
imul
out
shll
inc
enter
aad
xchg
lods
push
fcompp
ret
pop
rcrb
jae
inc
mov
xchg
jl
rcl
xor
popa
sahf
je
jne
jmp
jmp
and
popf
ret
jo
sub
fisttps
inc
bsr
or
xchg
xchg
add
cmc
dec
divb
push
lcall
loopne
or
adc
push
jo
jno
arpl
push
push
pop
mov
dec
lcall
or
push
push
dec
mov
and
and
or
inc
orl
cmp
jle
mov
mov
stc
or
pushf
sub
jmp
cmp
jno
or
aas
mov
push
dec
pop
into
inc
xchg
or
fwait
pop
cmp
sub
mov
inc
xor
movsb
arpl
loopne
add
mov
outsl
xchg
sub
pop
adc
xchg
cld
sub
mov
adc
loope
insl
dec
stc
jle
pop
gs
mov
inc
push
mov
lret
pop
lds
adc
inc
in
fisttpl
jmp
push
fldt
add
pop
cmc
mov
and
push
pop
fdivrl
pop
enter
cmpsl
ror
xchg
dec
sbb
add
mov
dec
pop
lods
xchg
mov
enter
aaa
fbld
enter
mov
fcoms
arpl
inc
js
push
mov
mov
movsb
mov
pop
jno
mov
mov
mov
int
popa
iret
cmp
lahf
mov
test
outsb
jo
or
in
jge
fidivrs
inc
bound
sub
notb
hlt
ds
and
aas
test
movsb
lret
push
fimuls
int3
out
cltd
sub
in
gs
cmp
jne
cltd
rcll
fsub
insl
xchg
rorb
mov
ljmp
cltd
out
int
cwtl
cmpsb
aam
test
fists
cltd
push
ss
rcrb
jl
or
cli
sahf
xor
sbb
pop
adc
pop
mov
enter
cli
push
pop
sub
xchg
xchg
jl
out
inc
push
add
test
dec
mov
adc
mov
jle
scas
and
dec
cltd
call
push
ret
sub
inc
lods
lods
rolb
and
rcrl
pop
out
stos
push
mov
sbb
dec
mov
out
jp
pop
lcall
icebp
scas
dec
sub
lods
call
repz
push
adc
push
andb
inc
aad
add
lcall
in
inc
sub
mov
xchg
push
fwait
nop
jp
unpckhps
mov
cltd
fimuls
test
js
sub
cmpsl
mov
push
hlt
add
cltd
xchg
and
sbb
adc
roll
test
cmp
dec
inc
imul
cltd
ss
push
in
outsw
and
xor
pop
cltd
testb
cs
ficompl
cltd
xor
add
mov
mov
fstps
fmull
xchg
mov
pusha
das
mov
push
cmpsl
and
mov
stos
sbb
into
jg
das
add
and
testb
adc
sub
loopne
pop
je
repnz
mov
sbb
fwait
popf
mov
repz
cli
pop
scas
xchg
lahf
or
sub
icebp
test
cmp
cmpsb
js
hlt
es
cltd
roll
xor
setns
mov
xchg
sbb
data16
mov
sbb
push
test
adc
jnp
mov
cltd
xchg
ret
push
movsb
loop
out
mov
dec
jmp
sub
xchg
movsl
inc
cltd
loope
cmp
mov
add
aam
call
mov
mov
shlb
sub
js
pushf
xchg
sarb
cmc
and
in
push
mov
adc
pop
mov
sbb
push
les
cmp
scas
add
xor
loope
dec
lods
mov
xor
cmpsl
lock
or
ljmp
filds
adc
hlt
mov
push
mov
xchg
jge
mov
fimuls
jl
jg
sarl
or
int
loop
int
sbb
lock
jecxz
cmpsl
call
and
sub
lds
push
xor
jmp
fs
inc
jmp
dec
fimuls
sub
loope
or
lcall
or
jo
addl
or
popa
stos
jmp
imul
add
movsl
cltd
push
mov
sub
adc
stos
mov
mov
sub
sbb
pop
filds
jmp
xorb
test
in
sahf
add
shr
int3
xchg
fsubp
das
stos
jmp
ror
and
xor
jecxz
xchg
adc
push
mov
jnp
dec
ficoms
sub
inc
pop
jmp
add
sahf
ljmp
push
inc
sti
inc
push
pop
or
bound
ljmp
sbb
push
xor
rolb
andb
push
inc
aas
lcall
scas
icebp
adc
jmp
cltd
push
inc
sbb
push
xchg
and
lret
push
jns
mov
jmp
sti
push
mov
outsl
sahf
pop
or
stos
xchg
add
stos
adc
push
and
jmp
push
xchg
ja
rolb
cmp
nop
sbb
sub
sahf
mov
in
inc
popf
in
pop
sub
inc
jle
imul
loopne
stos
mov
xchg
xchg
sahf
dec
inc
push
push
pop
loop
jp
lock
jle
mov
xchg
lahf
out
mov
out
add
into
mov
cld
in
sbb
inc
jb
cmp
jmp
xchg
pop
mov
sub
push
mov
cmp
stc
outsl
das
dec
dec
and
xchg
dec
stos
sbb
fsubrp
gs
xor
sub
cmp
inc
aaa
push
sub
test
mov
jmp
pop
and
test
sub
aaa
iret
mov
mov
insl
jmp
and
and
jmp
mov
std
push
stos
into
sbb
add
in
out
xor
cmp
push
das
inc
jl
insl
add
popf
cmpsb
stos
jb
mov
jp
scas
mov
lock
rclb
and
and
jmp
aam
rcrb
push
out
jle
jmp
divl
jo
aaa
imul
fisubs
jno
cld
mov
mov
cmc
arpl
adc
jbe
imul
cmp
adc
rorb
pop
xorl
xor
xchg
stos
mov
lret
jo
mov
jns
dec
std
ljmp
icebp
or
movsb
sub
sbb
sti
pusha
rorl
jl
pop
loope
push
mov
push
mov
leave
lcall
sub
and
je
mov
cmpsl
in
sbbb
jecxz
sbb
push
add
aad
adc
jo
dec
rorb
das
into
jns
inc
sub
push
into
xor
mov
jns
jmp
push
stos
aam
cmp
jmp
mov
ret
enter
pop
in
pop
std
lods
stos
mov
lret
adc
lods
push
shr
mov
test
jno
out
or
aad
sbb
xor
aas
add
push
pop
xchg
pushl
mov
cmpsl
cs
adcb
sub
rcr
cmp
cmp
jbe
xchg
icebp
ret
je
push
imul
mov
xchg
js
dec
ret
push
mov
jmp
arpl
inc
loopne
mov
sbb
ficompl
jmp
ficompl
dec
jmp
sub
jae
arpl
sahf
jns
aas
arpl
test
mov
dec
into
cwtl
add
ret
outsl
or
mov
or
ficoml
cmc
push
imul
mov
fimuls
loopne
inc
mov
movsl
sarl
inc
sar
ljmp
jg
mov
pop
adc
movsl
mov
aaa
dec
insb
sub
or
mov
xor
jp
push
lods
out
fists
jns
repnz
mov
xchg
inc
mov
mov
addb
inc
xchg
insl
xchg
stos
cmp
daa
pop
jmp
sbb
sbb
or
and
sti
into
push
sub
sub
adc
sbb
call
mov
xor
int
cltd
push
les
outsl
fs
ret
xor
popl
jns,pn
push
lea
arpl
jmp
test
lcall
add
mov
mov
ja
mov
mov
movl
or
inc
mov
out
in
mov
repnz
icebp
push
mov
sub
add
lds
push
test
int3
iret
cmp
dec
cs
mov
mov
shl
ficoms
cltd
imull
pop
jl
das
fstps
xchg
add
sbb
cltd
pusha
data16
xchg
popf
cltd
mov
jle
call
call
dec
insl
mov
xchg
repz
jle
and
cwtl
rcrl
insl
js
jl
into
xchg
push
adc
add
xchg
stc
cltd
ss
call
jle
scas
movsl
sahf
sbb
push
mov
bound
jge
or
cltd
scas
repnz
aas
sub
mov
fsubr
pop
or
and
cltd
xchg
loop
lahf
data16
cmpl
push
scas
fbld
push
mov
xchg
frndint
scas
jo
xchg
adc
push
test
in
addr16
fwait
add
test
ret
hlt
out
gs
clc
in
adc
xchg
inc
push
loop
das
xchg
scas
fwait
mov
xchg
sbb
ret
cmc
sub
cltd
jp
pop
mov
cltd
jns
inc
fstp
lret
sub
jp
jo
adc
inc
test
jns
pop
orb
pusha
inc
leave
mov
pop
jb
or
fwait
add
mov
add
lds
inc
call
cltd
leave
test
fwait
ret
test
sub
and
mov
sub
sbb
sahf
fmulp
loop
outsb
jge
fcmovnb
push
add
scas
pop
das
cltd
repz
mov
pop
pushf
icebp
pusha
fprem1
bound
mov
sbb
cltd
push
stos
xchg
subb
push
fwait
insl
mov
insb
xor
out
jmp
mov
xchg
fcmovu
cltd
movsb
cmpsb
sti
cld
xlat
in
sub
dec
fldl
dec
aas
mov
cltd
movsb
rcrl
mov
cltd
iret
mov
pop
fisttpll
mov
sbb
jo
nop
bound
cmp
cwtl
orl
xchg
mov
sub
mov
lds
sarb
leave
test
push
sub
or
cmpsl
test
inc
xor
stos
mov
mov
in
jne
jl
jge
sbb
out
enter
negl
cltd
popf
sbb
mov
and
sub
mov
and
clc
dec
jl
jge
out
cbtw
ficoms
or
mov
and
push
mov
aas
jecxz
mov
jmp
movsl
jle
push
lock
mov
rcr
mov
in
jae
ret
sbb
outsl
fwait
jg
gs
dec
out
dec
rorl
stos
jno
mov
jb
movsb
ljmp
and
scas
dec
ret
fidivl
sbb
xor
outsl
insl
bound
cltd
cmp
out
or
pushf
sub
jbe
xchg
loope
mov
sbb
dec
xchg
std
cs
loop
js
jb
dec
cmp
popa
cltd
adc
dec
scas
mov
mov
cmpsl
pushf
xor
jecxz
sbb
jmp
addb
into
jmp
pop
mov
push
jge
push
add
pop
mov
jle
je
movsl
xlat
add
out
fsubrl
test
and
iret
lret
scas
mov
pushf
pop
inc
xchg
push
mov
mov
out
add
push
xchg
jae
mov
jne
pop
pop
cltd
movd
rcrl
jecxz
loop
mov
loopne
out
aas
lret
dec
and
mov
pop
pop
jne
out
cltd
sub
push
test
insb
mov
rolb
lret
in
fcos
rcl
fldenv
and
add
cltd
sbb
cmpb
mov
into
flds
jmp
mov
call
cltd
jmp
jbe
push
pop
clc
fcompl
xor
inc
int3
movsl
adc
dec
aas
out
pop
xchg
lods
cltd
ds
pop
in
xor
inc
or
or
sahf
scas
fwait
andl
stc
out
push
and
mov
cltd
pop
xchg
call
mov
ret
sbb
lock
mov
clc
dec
jb
cltd
sbb
mov
mov
sbb
mov
xlat
cmp
scas
cltd
fcomp
out
arpl
pop
add
inc
out
cltd
mov
xchg
pop
adc
mov
inc
ja
lcall
mov
mov
inc
mov
addr16
pop
dec
int3
imul
arpl
rcrb
mov
cmp
test
add
cltd
inc
jmp
push
sahf
cltd
xor
ret
aam
cltd
cli
sub
sub
push
inc
addr16
adc
es
outsl
lret
into
inc
and
or
cltd
lcall
pop
movsl
xor
cmpsb
fstp
xchg
fsts
pushf
pop
mov
sub
cmp
cltd
sbb
ss
fwait
loopne
adc
pop
xchg
xchg
stc
mov
cltd
and
cmpsl
xchg
test
mov
testl
fcmovbe
cs
icebp
xor
mov
pop
in
mov
lods
cltd
lods
iret
pop
in
out
adc
dec
xchg
fwait
xchg
pop
push
and
loope
sub
cltd
pushf
xor
call
mov
cmpl
rclb
mov
pop
mov
lcall
jb
repnz
xchg
leave
ficomps
cmp
xor
inc
pop
xchg
mov
cmpsb
xor
push
cmp
jmp
mov
pop
sub
fwait
orl
mov
jmp
cmp
and
xchg
leave
push
lea
jnp
test
jmp
or
mov
mov
xchg
stos
in
lea
or
data16
jmp
mov
sub
mov
iret
sub
mov
loopne
adc
sbb
dec
mov
cmpsl
test
or
mov
mov
push
fdiv
mov
fdiv
imul
cli
push
mov
test
pop
pusha
xchg
jecxz
mov
mov
enter
inc
adc
and
add
or
loope
or
mov
gs
scas
and
cmp
sub
mov
mov
repnz
cltd
lret
or
jns
mov
cltd
ficomps
in
jnp
pop
xchg
xchg
mov
pop
jp
jmp
mov
xchg
fadds
and
push
ljmp
cltd
adc
fmuls
mov
imul
cltd
cld
jae
or
mov
shlb
add
imul
cltd
add
shld
sub
movsl
and
xchg
icebp
jge
fstps
out
inc
enter
lock
jge
in
inc
xchg
into
mov
popf
jns
lock
outsl
inc
int
pusha
outsb
sahf
jecxz
jg
es
or
add
popf
lahf
push
adcb
add
or
loopne
jmp
mov
sbb
iret
adc
push
mov
jns
jns
xor
jle
cmpb
add
or
stc
adc
mov
or
mov
push
dec
cld
dec
sbb
mov
sub
adc
je
xor
add
jmp
xor
sahf
enter
shl
mov
loope
pushf
pop
iret
cli
ja
jns
adc
xor
jg
popf
mov
push
stc
dec
jmp
nop
jne
sub
or
push
xor
add
movsb
stos
nop
jmp
out
sub
dec
enter
xor
pop
jmp
outsl
add
test
test
mov
lcall
int3
lret
test
inc
cltd
mov
mov
in
mov
stos
cmpsb
nop
mov
lcall
inc
and
cmp
mov
and
sub
iret
movsl
or
stc
and
cmpsb
pop
orl
movsl
jmp
adc
and
ret
lock
jmp
push
adc
gs
iret
inc
shrl
imul
mov
jmp
fisttpll
lcall
filds
movb
pop
cwtl
push
arpl
adc
loop
push
jo
mov
pop
inc
and
mov
je
push
ret
movsl
mov
cmp
in
sub
jmp
loop
sub
inc
test
push
lock
loopne
mov
push
dec
and
iret
push
sbb
sub
leave
clc
xor
idiv
mov
ficoml
add
push
into
push
and
mov
inc
fistpll
mov
xchg
jns
shr
jg
ret
cwtl
clc
loop
lahf
cmp
or
mov
and
paddusw
cmc
pushf
daa
mov
pop
mov
sub
mov
sahf
push
mov
cmpsb
mov
sub
test
setb
mov
arpl
cmp
inc
cs
xchg
mov
cltd
xchg
leave
xchg
push
jmp
fiadds
lcall
push
clts
cmc
fwait
aaa
mov
xor
add
adc
ljmp
dec
lcall
pop
lahf
dec
or
test
popf
out
and
ja
or
add
daa
mov
sbb
sbb
dec
out
pushf
xor
or
push
cmp
jns
push
inc
addr16
and
add
in
ss
cmc
push
into
xchg
js
lods
mov
dec
sbbl
dec
jo
mov
or
mov
hlt
and
lock
roll
pop
popf
mov
outsb
aam
xor
xor
push
jae
lock
mov
push
jecxz
fldcw
inc
sahf
push
iret
arpl
ss
pop
stos
jns
cmp
bound
add
xchg
imul
test
aaa
add
dec
mov
xchg
cmp
fmull
std
insb
cwtl
jo
cmp
daa
adc
in
sub
mov
dec
mov
lea
sub
mov
and
jl
push
pop
pushf
ds
sbb
shll
das
ffree
lcall
int3
lcall
mov
cmp
or
jno
in
push
hlt
negl
cmp
jae
sarb
jmp
je
sbb
clc
lock
outsb
inc
pushf
popf
movsl
cmpsb
test
and
add
decb
mov
sub
or
and
aaa
push
insb
test
dec
mov
aas
mov
stos
mov
sar
test
imul
mov
jb
xchg
lods
aas
mov
stos
jmp
loope
ss
jmp
sbb
divb
push
xor
loopne
rorl
popf
mov
into
stos
mov
popf
pop
jge
sub
mov
lock
sub
stos
and
pop
enter
and
pop
lcall
mov
inc
data16
xchg
mov
push
pop
fwait
jmp
loopne
xor
test
pushf
sbb
loop
sbb
jmp
jg
fstl
xchg
gs
andb
lock
pop
bsf
test
rcrb
jmp
mov
cld
sub
outsw
stos
subb
arpl
loopne
jmp
out
insl
xorb
sub
lods
mov
or
fucomi
int
mov
pop
notb
xchg
push
dec
dec
fldt
jp
jg
mov
and
lret
jp
mov
es
mov
or
jge
mov
and
xchg
or
adcl
add
lock
xor
ja
push
add
push
add
and
fiadds
push
clc
xchg
pop
add
xchg
jne
inc
aaa
data16
adc
xor
fistpll
sub
std
and
jno
lods
mov
cmp
inc
call
cmp
cmp
cmp
mov
cmp
dec
cmp
cmp
jmp
mulb
mov
cmc
jl
int
call
fld
std
cmp
pop
scas
fwait
inc
ljmp
xchg
imul
xchg
sahf
jns
or
sub
loopne
pop
sbb
fcoms
orb
cmp
lods
jl
dec
out
mov
jg
in
inc
lods
lcall
call
fwait
push
dec
icebp
cmp
sub
cmpl
inc
inc
jmp
popa
clc
inc
lds
pop
sub
repnz
jp
jle
xchg
pushf
ret
pusha
add
cwtl
sub
aaa
jo
insb
test
cmp
stos
pop
cmp
lret
pusha
jns
cwtl
lock
outsl
or
cmp
sub
sub
jbe
push
les
dec
jnp
fisttpl
inc
mov
jmp
jmp
xor
push
inc
and
jmp
or
lods
mov
dec
movsl
popf
or
inc
and
or
in
mov
imul
leave
js
xchg
lahf
jns
push
in
aam
mov
mov
pop
dec
loop
push
adc
xor
xchg
jo
sbb
push
iret
xor
test
xchg
jmp
int
lods
jmp
xor
fdivrs
mov
out
cmp
xor
push
test
in
loopne
in
jae
cs
lret
divl
aam
adc
cltd
test
enter
sbb
jmp
aad
push
add
add
movsl
sub
sbb
clc
pop
inc
or
jo
inc
sub
pusha
movsl
ja
and
sbb
cmp
push
mov
jmp
call
lods
in
cld
mov
lret
dec
test
jo
mov
testb
movsb
push
fdiv
mov
jecxz
push
push
fidivl
lahf
cmp
adc
shll
stos
pop
test
dec
inc
push
push
test
stos
inc
dec
xchg
and
pop
jmp
xor
push
dec
roll
add
int3
inc
jmp
pop
mov
mov
icebp
cwtl
xlat
cmp
jmp
xchg
mov
sbb
jmp
inc
and
cmp
rcrb
shrl
repz
add
js
adc
jmp
loopne
jl
imul
or
sub
inc
add
rclb
adc
cli
cmp
in
mov
out
orb
add
lock
pushf
dec
neg
ret
xchg
aam
jb
stos
add
jl
pop
movsb
mov
xchg
cmp
sbbb
dec
dec
imul
mov
cli
les
outsl
lock
fimull
jno,pt
jo
shll
test
mov
enter
scas
outsl
add
jno
test
xchg
lods
jmp
and
imul
in
jle
pop
lock
adc
push
fldenv
add
ds
add
test
sbb
roll
cmpsb
ret
les
inc
adc
lcall
xorl
pop
add
outsb
out
popf
xor
jmp
mov
jl
iret
dec
push
cli
pop
pushf
mov
iret
cmp
sbb
lret
xorl
cmpsl
mov
out
or
push
jecxz
data16
pop
rclb
lea
stos
xchg
shrl
sub
xchg
stc
dec
adc
push
inc
test
jmp
fnstsw
hlt
leave
inc
lock
adc
ss
cmp
lret
adc
movsb
pop
mov
sub
fbld
cwtl
in
aam
pop
cmc
imul
push
addb
ficomps
jmp
lds
test
mov
mov
inc
movq
hlt
mov
jmp
scas
jge
lock
lea
stos
clc
cmpl
jecxz
ljmp
aad
rol
sbb
pop
add
ror
xor
fcoml
jmp
stos
mov
lcall
outsb
inc
jmp
mov
in
push
fsubl
into
stos
cmp
in
outsb
shlb
lcall
dec
pop
mov
sbb
push
mov
or
pop
jae
ss
loopne
mov
jnp
ja
stos
pop
int3
sub
daa
pop
sahf
in
sbb
push
add
es
jmp
movsl
mov
orl
fwait
jmp
int
jecxz
out
pop
cmpsb
movsb
sub
rorb
push
popf
outsl
into
push
rcl
xor
test
test
xor
sbb
outsb
loopne
movsl
and
or
and
cltd
stc
xchg
sub
and
adc
xor
push
scas
cmp
sub
xchg
ljmp
push
fstps
xor
stc
sbb
test
cltd
in
sub
cmp
jno
scas
js
rclb
mov
test
jle
xlat
sbb
cltd
adc
sbb
fcomps
pop
lea
movsb
cld
xlat
nop
cli
and
enter
cltd
xor
lret
dec
dec
out
stos
mov
pop
jle
fs
mov
jne
sbbb
sub
cmpsl
mov
push
cmp
xor
mov
add
xchg
and
mov
cmp
dec
and
ds
aam
mov
in
cltd
pop
les
js
push
dec
inc
fdivrl
xor
add
test
mov
push
xchg
testb
imulb
inc
sbb
dec
cmp
dec
cltd
addr16
jl
push
cltd
mov
sbb
arpl
clc
icebp
fadds
lret
insl
cmc
cltd
loopne
bound
jno
insb
adc
or
mov
shll
mov
pop
adc
mov
cmpsl
add
and
fbstp
mov
inc
scas
cli
incb
cltd
sbb
and
dec
je
std
cltd
dec
movsl
movsb
mov
xchg
xor
push
mov
cltd
mov
cmp
mov
add
cltd
into
ss
imul
in
sub
cmp
loope
test
or
jb
addr16
mov
sti
cltd
int3
sub
xchg
mov
xchg
cltd
js
dec
sub
mov
inc
mov
lea
in
push
shll
dec
xchg
jns
mov
xchg
sbb
loopne
icebp
mov
arpl
mov
outsl
cmp
inc
and
cltd
jae
jbe
mov
vfmaddpd
pop
xchg
xor
fsubrs
xor
sahf
mov
xor
insb
adc
mov
cmp
stc
popa
cltd
inc
aas
jns
jo
je
cltd
in
and
popf
movsl
jb
adc
xchg
shlb
cmpsl
cltd
out
jl
scas
stos
scas
repz
testl
fistps
xchg
fidivrl
sub
xor
or
mov
cltd
stos
sbb
cltd
or
in
push
push
cltd
xor
xor
pop
stos
sbb
push
push
push
pusha
jecxz
lock
add
mov
fidivl
cltd
cmp
stc
mov
xor
cld
inc
int
push
sub
pop
test
dec
lea
mov
cltd
xor
mov
cltd
call
or
inc
cmc
push
mov
sti
cld
aad
std
mov
add
bnd
clc
rcrl
mov
lahf
jne
mov
mull
cltd
cmpsl
lea
xchg
push
push
sub
movsl
imul
scas
mov
sarl
arpl
js,pt
rcr
shll
cmc
movsb
fsts
cltd
outsb
jb
loopnew
popa
out
movsl
fidivrs
fcomi
cltd
loope
rcll
jo
ror
mov
outsl
cltd
and
inc
or
inc
jbe
lock
sub
cltd
xor
sbb
cltd
pop
test
movsl
add
test
popf
sbb
inc
inc
adc
sub
imul
adc
pop
outsl
aaa
popf
and
dec
add
enter
and
ffreep
push
adc
xor
test
xchg
dec
cltd
mov
or
imul
dec
cltd
sbb
mov
pop
mov
loope
inc
ficoms
mov
iret
adc
mov
pop
or
add
cltd
dec
inc
ljmp
cld
insb
mov
add
mov
lds
cmpsb
cwtl
push
jmp
inc
xchg
adc
xchg
cltd
mov
push
cmp
xor
inc
mov
dec
jmp
mov
fdivl
inc
mov
pop
sbb
xor
cltd
outsl
xchg
dec
cld
cmp
cltd
sbb
imul
movsl
jg
fwait
in
dec
test
cltd
aas
mov
adc
dec
les
stc
pop
or
lcall
mov
sub
mov
push
mov
cltd
jno
xor
cltd
adc
test
insl
js
in
and
lret
adc
dec
inc
repnz
mov
js
xchg
push
sbb
push
push
mov
pop
outsb
and
insb
cltd
out
lods
daa
push
sub
sub
sbb
mov
mov
scas
in
outsl
push
push
loopne
pop
sti
ret
fwait
inc
addr16
inc
xor
pop
pop
dec
test
add
mov
mov
ja
sbb
repz
and
jnp
inc
movsb
dec
pop
mov
mov
cmpsl
test
outsl
cltd
dec
mov
cmp
sub
jns
inc
aam
dec
scas
lea
sbb
cmp
adc
inc
mov
push
movhps
lea
aas
xchg
jnp
cltd
fsubrl
cmp
mov
dec
cltd
mov
sahf
push
mov
cld
sarb
cmp
jnp
cltd
in
and
push
test
popa
xor
repz
lods
sub
pop
cltd
xor
int3
fwait
push
rcrl
cmp
mov
cltd
mul
fistps
iret
scas
inc
jg
cli
mov
in
and
jbe
push
cltd
sahf
enter
mov
jno
jne
cltd
adc
pop
cmp
sbbb
mov
out
lds
adc
sbbb
lods
outsl
add
clts
push
jno
sbb
cltd
fisttpl
pusha
jne
int
popf
das
loop
loope
push
cld
shrl
in
or
mov
scas
clc
in
fwait
leave
cltd
insb
push
or
in
inc
xchg
imulb
mov
cltd
dec
loope
arpl
xchg
test
pop
cltd
jns
add
cltd
sub
dec
fstps
add
sbb
pusha
fucomi
adc
cltd
cmp
fnstenv
dec
cs
inc
cmp
sbb
incb
gs
cltd
adc
stos
push
xor
push
jnp
ffreep
push
sub
dec
cli
icebp
imul
add
fbld
inc
mov
pop
dec
ds
cltd
addr16
or
nop
int
fmull
sub
test
subl
add
mov
jae
pop
ljmp
insl
stc
mov
xlat
mov
cltd
mov
pop
dec
cs
sbbl
rcrb
lret
outsl
inc
or
aad
insl
out
cmc
fs
push
xchg
adc
out
cwtl
dec
andb
pop
loop
cltd
shll
enter
mov
sahf
imul
aaa
sbb
repz
cltd
fildl
pop
fsubrs
sahf
mov
dec
inc
xor
int
clc
sub
scas
sub
add
and
mov
rcrl
das
cmp
jle
mov
mov
cltd
ds
push
cmpsb
std
mov
and
mov
and
cmp
or
pushf
mov
xor
inc
outsb
shrl
mull
jmp
stos
and
add
fs
cltd
in
adc
rorb
fwait
pop
push
in
aas
sub
jl
and
mov
cmp
adc
popf
or
inc
pop
popa
jb
cltd
add
sbb
mov
test
jle
xcrypt-ofb
cmpsl
sub
adc
sti
int3
cltd
push
inc
xchg
pop
push
sbb
cltd
push
loope
push
dec
dec
mov
sbb
pop
les
jmp
sub
and
aas
test
call
pop
mov
push
nop
add
popa
add
jp
mov
mov
jg
test
sbb
mov
test
lods
pusha
cmp
test
rcl
cmpsb
adc
das
fbstp
in
lahf
xchg
pop
sbb
mov
cmp
add
movq
fstl
pop
jns
int
and
or
ljmp
jle
adc
jbe
push
leave
add
cmpsb
push
test
jns
mov
cmp
shrb
lds
fimuls
je
xor
cmp
mov
lock
and
push
mov
cmp
lcall
fidivs
sbb
gs
and
jbe
iret
pop
and
sub
int3
mov
jno
icebp
sti
sarl
push
pop
je
inc
or
dec
pop
aaa
xchg
fsts
jmp
out
out
fnstenv
rorl
and
inc
inc
addr16
subl
mov
pop
mov
mov
jmp
xor
scas
fwait
lock
shlb
jmp
push
aam
out
inc
insb
loopne
push
xlat
sbb
or
mov
xchg
insb
push
jbe
addr16
pushf
dec
ret
jmp
aaa
xchg
dec
jmp
shrb
enter
pop
mov
pop
ss
jmp
lock
arpl
test
and
mov
mov
pop
adc
mov
les
movl
push
imul
dec
es
outsl
cmpb
loopne
inc
lock
ret
stos
jo
cmp
mov
dec
xchg
sbb
jge
in
fwait
loopne
jle
or
pop
fdivp
lods
ljmp
fistps
int3
mov
push
pop
or
leave
ss
lret
sti
adc
sahf
sbb
mov
cld
jb
shl
or
aam
mov
add
fimuls
jne
call
add
mov
stos
inc
test
ljmp
xchg
sbb
shlb
fisttps
adc
push
push
outsb
lret
add
mov
sub
fisubl
mov
dec
pop
pop
popf
push
cmpsl
lcall
adc
inc
jmp
adc
imul
cwtl
mov
cltd
mov
push
dec
cmpsb
mov
outsl
stc
or
int
fisubl
loope
test
jne
lods
pop
pusha
or
fcompl
sub
int
or
or
ret
fwait
fsubr
sub
jg
pop
xor
mov
cld
jg
fsts
sbb
sbb
fs
mov
cltd
ret
hlt
sub
adc
in
jae
xchg
idivl
jmp
aaa
or
cli
jl
leave
hlt
data16
shl
cmpb
cli
cmp
dec
pop
les
mov
es
mov
sbb
iret
and
inc
fs
xchg
mov
fmuls
mov
dec
mulb
push
je
leave
push
jne
add
je
imul
in
adc
inc
es
lods
scas
mov
data16
xor
jb
and
sub
sub
sbb
adc
add
fisubrs
ret
mov
aaa
jb
inc
lock
push
mov
in
pop
or
in
stos
xor
iret
cmp
and
scas
jmp
mov
cmp
mov
push
and
and
pop
push
pop
fadd
adc
sub
cmp
cltd
sbb
rol
mov
popa
mov
pop
mov
xor
cmc
pop
les
mov
call
aam
lods
dec
stc
xchg
push
mov
cltd
pop
cmc
pop
pushf
mov
inc
ret
cli
xchg
adc
int3
adc
incb
popa
out
icebp
inc
dec
fldcw
lock
ficomps
adc
sbb
add
sub
jmp
and
xchg
dec
scas
sti
inc
pushf
mov
cmp
fs
jno
pusha
xchg
mov
imul
lods
popa
mov
repz
repnz
lret
cli
mov
push
sbb
mov
jecxz
sub
or
dec
test
push
jae
xchg
xchg
test
mov
aaa
int3
je
stos
pushf
and
sbb
jbe
mov
fcoms
xchg
xchg
jg
loopne
inc
inc
shl
sti
cmc
jle
add
push
imul
mov
mov
lcall
loope
mov
xchg
hlt
pop
xlat
push
mov
sub
adc
imul
xchg
or
mov
jge
and
jbe
pop
push
mov
lods
mov
mov
cmc
mov
mov
outsl
sbb
enter
fwait
sub
cmp
xchg
data16
pop
lods
inc
cwtl
mov
aaa
out
xchg
popa
out
int3
mov
in
sahf
outsl
ds
xchg
ror
rolb
xchg
fnstsw
pop
sahf
dec
inc
lods
push
sbb
arpl
fld
adc
xor
mov
std
stos
cld
fidivs
mov
loopne
push
push
inc
repnz
mov
lods
mov
pop
or
jns
es
add
stos
sub
cmp
inc
cmc
dec
loopne
jo
xor
cmp
adc
push
outsl
push
sti
movsl
movsl
sub
stos
mov
jo
lock
data16
add
inc
pop
int3
sub
into
mov
push
sub
add
notl
das
aas
adc
xchg
mov
jmp
push
loop
push
sahf
pop
lret
mov
push
or
int
ljmp
add
aaa
lret
push
mov
sub
push
std
gs
shl
adc
daa
fimull
fwait
repz
mov
mov
movsb
jmp
mov
arpl
pushl
and
xchg
cmc
add
inc
and
fiaddl
in
fsubs
add
push
jmp
ja
pop
sbb
stos
ret
cwtl
cmpsb
dec
sub
mov
xchg
gs
sbb
sub
das
inc
jmp
inc
mov
xor
rorl
aam
loopne
mov
iret
mov
jmp
pop
adc
mov
jp
test
icebp
movsl
inc
xor
and
jbe
cltd
sbb
mov
adc
push
push
add
sub
xchg
pop
cwtl
ss
mov
into
mov
inc
dec
add
push
lds
add
fldenv
cmp
leave
jg
mov
xchg
cmp
cmp
jnp
jge
popf
push
in
cwtl
dec
mov
jae
int
jmp
cmp
rclb
jne
cmp
sbbl
sbb
push
fldenv
cmp
insl
fwait
iret
mov
ret
mov
mov
pop
jo
inc
xor
ja
pop
test
dec
push
xchg
adc
mov
cltd
mov
scas
lock
mov
inc
mov
fstl
out
popf
xchg
rolb
fs
adc
lds
push
sahf
dec
popf
stos
xchg
loope
push
pop
in
insb
into
cmp
mov
xchg
imul
shlb
jo
in
popa
rcrb
loopne
dec
call
cmp
cmp
popl
inc
sbb
push
cmp
mov
aam
mov
inc
insb
add
fildl
mov
js
mov
shlb
pop
push
addr16
xchg
hlt
stos
xor
cmp
mov
mov
mov
push
xor
mov
pop
add
add
jmp
push
pop
stos
repz
xchg
mov
test
imul
nop
int3
xor
mov
push
adc
inc
jae
inc
pop
jmp
dec
adc
and
xlat
or
cld
imul
mov
ljmp
jmp
adc
fsubrl
xchg
jb
inc
dec
add
push
add
imulb
mov
jmp
inc
and
sbb
aam
adc
jbe
lock
jns
or
shl
mov
fidivrs
push
push
stos
stos
jmp
pop
cmp
jecxz
test
sbb
movsl
ficoms
xchg
jmp
lea
stos
sub
ror
test
insb
addr16
and
mov
repnz
leave
ss
fdivrs
call
pop
jge
push
jae
push
inc
testb
xchg
in
pushf
jae
test
fistpl
cltd
jmp
test
test
or
mov
lahf
mov
cmp
test
xchg
or
or
cmpsl
loopne
aam
mov
movsb
ljmp
push
jmp
movsl
nop
lahf
or
lock
movsl
call
shr
aas
xor
pop
mov
inc
int3
loope
sub
scas
int3
call
dec
jmp
mov
cmpb
adc
leave
and
dec
popf
cmp
arpl
int
cld
fisubrs
push
les
movsl
dec
aaa
mov
xchg
mov
fmuls
sbb
dec
cmp
dec
or
mov
push
dec
setae
jle
xlat
sub
inc
jecxz
imul
lret
jae
pop
inc
mov
jmp
mov
jns
pop
lock
arpl
cwtl
popa
mov
std
sbb
sub
fldcw
mov
movsl
cmp
ja
mov
xchg
test
push
adc
dec
mov
fstpl
outsb
xchg
jo
call
call
or
adc
xor
adc
in
inc
ret
and
out
mov
mov
jle
jo
push
sbb
cmp
sbb
xor
add
testb
pop
test
inc
mov
or
pop
fucomp
inc
test
dec
jns
sub
inc
xor
push
sub
scas
dec
cmpb
cmp
mov
dec
idiv
push
xchg
xor
fwait
push
ss
popa
cmp
mov
pop
inc
js
inc
lahf
stos
les
int3
mov
xor
add
push
sub
and
adc
cmc
call
push
setp
loopne
jecxz
push
push
push
dec
adc
or
jb
inc
adc
adc
xchg
out
xchg
inc
int3
cmp
jae
popa
sbb
mov
mov
jg
jl
mov
inc
cli
ja
sarb
je
iret
orb
cmp
pop
xchg
jae
cli
jae
jg,pt
iret
fwait
mov
and
mov
das
shlb
mov
xor
call
scas
dec
std
stos
or
es
xchg
sbbl
cmp
or
xor
out
pop
je
cmp
std
mov
lock
mov
adc
popa
pop
inc
fs
nop
popa
dec
mov
mov
jmp
rol
sub
pushf
stc
jae
faddp
icebp
scas
cmp
lahf
push
xchg
in
pop
mov
fwait
or
fisttps
es
es
jmp
jbe
ret
mov
sbb
pop
cmp
arpl
jmp
inc
stc
jp
shr
push
sarb
lea
sub
ret
or
inc
jmp
adc
lcall
dec
repnz
popa
cmp
addr16
insl
inc
stos
push
loopne
mov
stos
outsb
shrl
pop
sub
jl
sub
add
stos
clc
cwtl
jp
cltd
cmc
adc
push
mov
popa
aam
inc
rcrb
xchg
test
fmuls
std
push
aaa
sbb
jp
xchg
pop
test
js
dec
xchg
xor
loope
adc
and
movsb
sbb
call
push
sub
hlt
xor
mov
xor
add
mov
mov
dec
loopne
fldcw
xor
nop
fcom
jb
sbb
loop,pt
pop
ret
arpl
into
mov
int3
lods
cmp
rclb
mov
cmp
jne
xor
push
jmp
cmp
scas
mov
popa
arpl
aaa
xchg
jg
lahf
sub
inc
sbb
or
ds
push
fistpll
mov
mov
xor
lret
call
stos
loopne
xor
fildll
jmp
add
int
fiadds
je
cmp
cmpsl
lock
xor
inc
jmp
inc
xchg
mov
jmp
out
adc
add
mov
je
cmp
dec
adc
stos
lahf
fs
cmp
dec
or
mov
loopne
mov
cmp
lcall
ret
dec
iret
mov
sub
mov
stos
in
fwait
lds
nop
mov
in
test
jmp
dec
mov
mov
fs
stos
out
adc
mov
sub
xchg
inc
jo
rcrl
scas
arpl
les
and
push
xchg
jae
cld
xor
sbb
mov
inc
sub
push
xchg
jl
fnstcw
cltd
cmp
xor
sub
mov
stc
stos
enter
cmp
movsl
jb
outsl
cmpsb
pop
mov
lock
scas
je
pop
stos
xchg
iret
pop
xchg
dec
mov
hlt
jge
pushf
mov
jbe
stc
mov
int3
into
aam
mov
jns
cmp
addr16
push
cmpb
rcr
jbe
cmpl
call
mov
jbe
mov
xorl
mov
mov
daa
stos
xchg
mov
jnp
inc
xchg
mov
dec
jno
mov
pop
sub
add
pop
imul
xchg
fmul
xor
jle
xchg
call
mov
inc
lret
cwtl
imul
cmc
xchg
add
movsl
mov
in
mov
test
stos
inc
xor
sahf
mov
aas
daa
ret
lock
in
dec
pop
test
or
fisttps
lock
icebp
mov
icebp
fmul
ds
jmp
inc
jns
pushf
jmp
das
cmp
outsb
clc
xor
inc
cld
cmp
int3
mov
and
sub
notb
stos
cmp
push
xor
mov
ret
icebp
iret
cmp
dec
test
lcall
push
jno
cwtl
push
in
add
fnstcw
call
cmp
sbbb
mov
push
mov
inc
stos
mov
arpl
stos
mov
mov
add
cmp
jmp
imul
xor
rclb
cltd
xchg
out
pop
lcall
push
sbb
mov
mov
std
es
adc
pop
or
scas
xchg
push
cltd
xor
ret
inc
cltd
jg
insl
cmp
mov
xor
sbb
and
in
mov
leave
push
test
cltd
jae
repnz
mov
pop
xor
mov
cltd
and
call
in
daa
cltd
pop
mov
sub
mov
xchg
repnz
inc
ja
jecxz
addr16
cltd
int
rcl
push
mov
sub
adcb
fldt
xor
iret
lods
out
stc
icebp
mov
or
faddl
sti
sub
and
xor
dec
sbb
adc
sar
inc
fimuls
jo
outsl
iret
repnz
or
scas
xor
cli
sbb
and
inc
cld
cmp
mov
insl
pop
or
lods
fcmovne
cli
xchg
inc
cmpsl
cmpsl
enter
dec
pusha
sub
xchg
sub
xor
jae
mov
je,pt
les
sub
in
or
xor
lds
push
or
cmp
cld
sbb
or
cltd
sbb
inc
int3
in
fcompl
in
shrb
and
int3
cmc
out
movsl
test
sub
and
sbb
leave
arpl
dec
cmp
es
rorb
adc
cltd
dec
jge
jo
and
fprem
adc
pop
loope
push
sti
xor
cmp
cmp
sbb
loop
pop
xchg
inc
cltd
fnstenv
adcb
outsb
cltd
lret
sarb
inc
push
xchg
or
xchg
adc
nop
test
mov
and
lahf
leave
inc
sbb
or
cwtl
cltd
movsb
lret
stc
xchg
add
cmp
nop
scas
and
lret
cmp
cmp
jecxz
cltd
into
sbb
add
mov
xchg
add
adc
andb
das
xor
cltd
pusha
adc
adcl
imul
mov
outsb
push
cmp
sub
cmp
shrb
cltd
int
jb
imul
lcall
test
push
and
sub
movsl
lcall
or
mov
and
jle
addl
mov
je
or
jg
aaa
or
andb
fstpl
xor
fadds
mov
into
jg
fwait
outsl
xor
xchg
xor
cltd
cld
ja
stc
popf
mov
sbb
popa
add
cltd
cwtl
and
cmp
xor
sbb
mov
std
mov
out
dec
mov
push
cmpsl
jb
jbe
mov
cmp
aam
cmp
or
push
testb
test
cwtl
sbb
mov
mov
mov
cltd
movsl
push
js
ljmp
jmp
sbb
jge
cltd
push
xchg
xor
inc
mov
enter
pop
in
and
rcll
xchg
icebp
test
roll
and
sub
rcrl
lds
movl
das
ljmp
cltd
jnp
leave
cwtl
cmp
rcll
incl
cmp
imul
stos
sub
insb
fwait
in
pop
push
lods
pop
adc
cmp
mov
addr16
cltd
mov
rol
aas
stos
dec
push
lods
inc
inc
scas
jae
rcll
fisubs
adc
test
clc
xor
cltd
xor
inc
jnp
out
cltd
or
lcall
dec
movsl
mov
and
dec
scas
mov
mov
scas
pop
stc
cltd
pop
inc
cmp
and
inc
xchg
cltd
pushf
dec
ljmp
cltd
dec
pop
cmc
cs
cmp
inc
mov
iret
cltd
cmp
xchg
in
fwait
mov
sbb
cltd
inc
aad
pushf
adc
cltd
imul
les
pop
cltd
mov
and
stos
mov
mov
clc
nop
ret
test
inc
ljmp
cltd
roll
sarl
int
aam
sbb
cmp
mov
cltd
out
imul
lcall
pop
nop
daa
push
jp
es
scas
cltd
or
insb
mov
loope
fcomps
sub
lock
stos
pop
mov
lret
insl
pop
inc
jp
adc
fwait
ds
and
icebp
cltd
arpl
in
sub
xchg
icebp
fstps
add
sbb
shrb
add
sub
mov
out
push
sub
adc
cltd
dec
les
pop
lcall
mov
jmp
xchg
cmp
cltd
out
pushf
mov
mov
cmp
add
jge
rcrb
inc
les
cmp
jg
cltd
mov
pop
and
cmp
or
daa
addl
or
fcomps
xchg
movsl
mov
cmp
cltd
xor
scas
sarb
cltd
mov
insb
sub
movsw
jns
push
fwait
repnz
mov
icebp
mov
popa
jp
shl
fnstcw
mov
gs
lahf
cs
sbbb
fisubrs
mov
lret
aam
xchg
fwait
outsl
adc
mov
and
repnz
push
mov
mov
out
inc
sbb
movl
out
aaa
mov
adc
xor
mov
or
movsl
jp
inc
ss
fchs
pop
xchg
xchg
push
sti
push
lods
mov
sarl
cltd
and
sub
cli
mov
mov
popf
inc
jle
sbb
bnd
loopne
scas
mov
or
movl
out
adc
xchg
data16
test
lea
leave
cltd
fsub
std
pop
cld
imul
add
repz
loopne
inc
pop
mov
adc
cltd
stc
xor
fsubs
push
cltd
cmp
pop
mov
test
add
repz
out
cltd
pop
and
ja
cltd
lahf
jno
daa
mov
cmp
cltd
mov
rcr
loopne
and
lea
push
sub
popf
fistps
pop
mov
imul
add
inc
cltd
mov
sub
push
sti
arpl
cli
adc
inc
push
fisttpl
mov
ss
les
in
ret
and
add
mov
outsb
into
or
cltd
imul
sbb
movsb
fs
cltd
int3
or
cmpl
dec
sbb
jmp
mov
pop
into
mov
fmul
icebp
rcrl
lods
cmpsb
sub
ficoms
jge
int3
jns
ss
cltd
ds
dec
xlat
pop
pop
pop
mov
cmp
loope
xchg
enter
repz
outsl
push
add
test
cltd
push
popf
sbb
sub
fcomps
je
imul
mov
pushf
hlt
xor
cmp
movsb
bound
loop
lods
push
dec
flds
in
mov
pop
das
scas
das
mov
cltd
dec
mov
cltd
minps
xor
mov
and
or
add
cmpsl
xlat
mov
in
shrb
jbe
insl
pusha
xchg
ror
mov
mov
mov
push
stc
ret
pop
lds
cli
in
and
scas
sub
jp
push
mov
jg
mov
mov
fldt
mov
sbb
mov
outsb
mov
cltd
aad
add
add
into
shll
push
xor
movsb
cltd
scas
push
cmp
in
jnp
cmp
cltd
insb
pop
repnz
push
enter
mov
jne
lret
rcrl
xlat
shrl
mov
cltd
adc
jecxz
rcrb
divl
ret
fwait
loop
pop
xchg
leave
in
inc
sbb
push
and
mov
jmp
inc
int3
insb
add
jle
bound
dec
push
inc
lods
subb
xchg
jbe
sti
jns
adc
xchg
sbb
je
and
imul
enter
mov
lcall
jmp
daa
ret
mov
pop
jns
aam
ja
inc
sbb
jmp
dec
inc
push
xchg
add
pop
lock
and
scas
xchg
dec
pushl
int3
aaa
sbb
inc
ja
mov
pusha
dec
lahf
test
xor
sub
jl
dec
push
sub
sbb
aam
scas
or
push
and
or
stos
xor
xchg
mov
pushf
mov
jno
sub
mov
fmulp
push
xor
mov
adc
lret
and
loope
pop
aad
mov
xchg
jb
cmpsl
mov
rol
jl
or
push
or
repz
les
lea
jmp
add
or
fldt
cmp
xchg
stc
mov
sti
dec
mov
les
dec
fdivr
sbb
xor
ljmp
lea
add
cmc
stos
repz
sti
cmp
mov
fwait
cmp
sarb
pop
sub
adc
aam
adc
jmp
lds
mov
xor
inc
insl
push
iret
jmp
mov
mov
nop
mov
push
push
adc
stc
movsl
loopne
sub
mov
jmp
das
cmp
jne
sbb
push
out
repz
enter
cmc
lahf
pop
popf
add
mov
push
dec
or
pusha
lret
btc
das
je
inc
jmp
pop
xchg
pop
jbe
jle
mov
lea
fucomp
jae
je
mov
fisubl
fcmovb
xlat
test
rcll
push
bnd
nop
cld
inc
sarb
cmc
pushl
pop
test
aaa
aas
xchg
xchg
xchg
mov
test
enter
mov
lock
into
jecxz
sahf
pop
je
xchg
popf
fsubrs
mov
xchg
iret
dec
sti
push
movsl
mov
xchg
movsl
adc
frstor
andb
cmp
stos
adc
arpl
and
jmp
repnz
xor
dec
jmp
jg
xchg
xchg
popf
mov
jno
adc
sahf
jnp
movsb
pop
loopne
test
rol
jmp
and
xchg
pop
jbe
loopne
mov
and
rclb
xchg
pop
pop
sbb
in
inc
jns
rcrl
loope
bound
adc
mov
gs
loopne
cmp
xchg
test
sbb
pop
xor
test
pop
int
ds
pop
mov
cld
lock
ret
dec
dec
loopne
jnp
sbb
pop
push
add
cmp
outsl
sbb
add
lock
pop
and
hlt
inc
jae
mov
mov
sub
pop
test
pop
mov
add
lock
outsl
jmp
xchg
and
and
adc
inc
sub
andl
sbb
ret
lahf
dec
fucom
jnp
mov
mov
shlb
sbbb
test
cmpsl
inc
jmp
movsl
or
int
mov
jno
jae
inc
sub
or
xor
adc
mov
lods
insb
pop
push
sbb
pop
inc
and
daa
xor
shrb
mov
cmp
scas
sbb
lcall
jbe
cmpl
pop
shr
ja
outsl
or
jp
xor
frstor
mov
jge
add
lods
loopne
cmp
scas
ret
lock
sti
mov
or
loop
pop
stc
cmp
or
xchg
jmp
cmp
roll
push
pop
fcoms
mov
pusha
dec
pop
pop
add
mov
xor
or
test
add
mov
cltd
iret
xor
ficomps
mov
pop
inc
mov
sbb
sub
push
sbb
mov
iret
shlb
pusha
cltd
out
mov
arpl
sahf
mov
scas
sahf
inc
xor
or
fs
jecxz
and
stc
jp
cltd
inc
mov
rclb
cltd
sub
mov
bound
mov
push
in
rcrb
cmp
push
sub
sahf
sub
iret
loop
lds
les
nop
push
stos
into
les
stos
push
dec
xchg
mov
lods
loope
stos
jp
dec
add
jnp
sarb
lods
roll
arpl
mov
pop
div
push
inc
push
movsb
out
sub
sbb
int
shl
lods
aam
outsl
sub
or
mov
movsl
mov
hlt
dec
stos
sarb
rorb
loopne
sbb
or
inc
aam
movsb
mov
push
pop
xor
jmp
enter
xchg
clc
pop
jg
xchg
int3
xchg
xor
xchg
stos
icebp
inc
dec
adc
xor
add
loopne
je
dec
out
and
inc
iret
aam
adc
lods
hlt
inc
push
rcrb
cmp
loopne
les
jo
mov
dec
mov
stos
xlat
mov
lock
ds
shrb
sub
mov
int
cmp
insl
negl
or
ficoms
movsl
out
pop
push
add
pop
fists
mov
sahf
loope
xor
jb
mov
adc
sub
inc
mov
out
cmp
popa
push
mov
push
movsl
mov
pop
jmp
in
andb
push
or
stc
rcrb
imull
outsl
fnstsw
pop
adc
inc
mov
and
sbb
je
loopne
pop
push
scas
pop
and
imul
lds
mov
pop
lea
add
test
std
sbb
mov
je
movsb
stos
int
in
xor
adcb
outsb
mov
adc
sbb
xlat
and
sub
loope
cmc
inc
out
ss
lcall
jmp
xor
call
fidivrs
or
pop
movsl
jmp
iret
push
sub
hlt
inc
call
cmc
fildll
ss
movsl
jle
xchg
rcr
cmp
xchg
mov
pop
cmp
call
lea
jl
jmp
rorb
mov
call
aaa
fildll
and
add
pop
jmp
push
xchg
insl
push
inc
iret
fwait
pop
adc
xchg
sbb
dec
pop
pusha
sbb
sbb
lock
cmp
and
xchg
roll
fimuls
scas
enter
test
nop
mov
rorl
push
push
mov
movsb
cmp
ljmp
mov
inc
add
inc
ja
cmp
mov
mov
lret
mov
stos
inc
call
cmpsb
and
sub
dec
jp
sti
mov
imulb
aam
add
sahf
sbb
movb
mov
push
jb
xchg
lea
lcall
sahf
sbb
sbb
pusha
pop
and
jmp
jl
popa
cmp
int3
cmp
or
jmp
stos
lock
lcall
std
outsl
loop
xchg
mov
xorb
mov
push
mov
sub
inc
mov
xchg
mov
adc
fiadds
mov
xor
mov
xchg
fsubp
jmp
or
jmp
pop
arpl
test
mov
xchg
mov
inc
pop
fucomi
cmp
adc
push
fwait
insl
push
lea
push
rcll
mov
sahf
aad
inc
rorb
push
addl
mov
test
aas
xrelease
mov
xchg
xchg
aas
push
mov
jae
push
subb
jno
push
dec
sarb
or
pusha
adc
xchg
jle
arpl
jbe
dec
repz
movsl
adc
cmp
aad
loopne
push
sbb
inc
aas
or
pop
inc
jns
xchg
scas
mov
pop
into
mov
ret
int3
jmp
or
mov
add
bound
cmp
lea
cmp
xchg
jmp
sbb
fidivl
popa
jle
dec
pop
lds
dec
xor
cmp
and
xchg
sbb
jg
add
mov
inc
jmp
pop
sbb
inc
arpl
daa
out
cmpsb
xchg
jne
adc
push
pop
push
jb
mov
repz
jle
dec
sub
leave
inc
sub
mov
sub
arpl
jmp
mov
pop
jmp
ret
mov
or
lods
jge
ja
mov
pop
dec
dec
imul
mov
aas
xchg
dec
or
pop
pop
rcrb
inc
fimuls
scas
jmp
aas
mov
pop
push
push
dec
jns
out
sbb
and
inc
test
cmp
xor
dec
ficompl
rolb
arpl
xchg
mov
mov
cwtl
sbb
ffree
rclb
stos
push
sub
and
mov
inc
outsb
pop
mov
les
push
dec
test
jmp
movsb
mov
xchg
push
pop
lock
lods
imul
sub
iret
lret
jmp
adc
mov
pop
neg
xor
arpl
xchg
inc
pop
pushf
stos
jmp
in
dec
mov
insb
push
and
arpl
mov
mov
inc
hlt
aad
cmp
fiadds
pushf
btr
int3
shrl
cmp
iret
fchs
jmp
jg
xchg
jns
lock
in
sbb
add
jmp
imul
mov
xor
daa
rol
lock
call
icebp
mov
aas
and
xchg
pop
push
icebp
hlt
es
or
mov
fcomip
aam
pop
adc
adc
inc
sbb
and
lret
mov
inc
je
mov
sub
pusha
iret
cwtl
cmp
push
call
push
add
call
cmp
push
sub
test
xor
dec
fadd
sub
jne
jns
jmp
outsl
orl
mov
mov
sbb
mov
push
mov
aam
pop
or
push
mov
incl
mov
mov
lcall
sub
loopne
sbb
or
xchg
stos
push
outsb
dec
xchg
adc
ret
js
jle
jmp
sub
jb
mov
push
push
movsb
fisubrs
dec
push
lahf
mov
adc
popf
dec
or
aas
fnstenv
dec
inc
xlat
ficompl
pop
rorl
fxch
sbb
xchg
mov
inc
xor
into
shll
jmp
test
lock
mov
xorl
adc
xor
je
icebp
js
xor
xor
pop
aam
stos
mov
pop
push
sahf
int
movsl
jae
or
xor
movsl
mov
jmp
and
out
jno
jl
inc
ret
xchg
push
pop
sub
cmc
mov
mov
mov
std
jbe
clc
push
xor
mov
pusha
je
cmp
mov
mov
stos
pushf
loopne
cmpsb
inc
fwait
insl
adc
adc
cmpsl
and
subb
mov
lods
xchg
add
push
sub
test
arpl
mov
xchg
call
stc
insl
cmp
stos
xchg
jbe
lock
mov
jmp
repz
ss
xchg
jnp
xchg
daa
int
mov
adc
jmp
jg
dec
mov
cli
mov
scas
sbb
push
movsl
les
stos
pop
adc
mov
xor
jmp
xor
jmp
cltd
flds
sbb
add
fwait
dec
jmp
lea
idiv
loope
mov
inc
in
adc
jg
insb
outsl
jmp
mov
jecxz
pusha
into
cli
icebp
mov
xchg
adc
pop
xchg
cmp
pop
js
or
jecxz
lcall
dec
xchg
or
adc
mov
mov
decb
test
cmpsb
or
daa
pop
ret
stos
mov
xor
das
or
mov
add
stos
cmp
and
shr
push
add
jmp
test
mov
inc
stc
cmp
xchg
inc
mov
xchg
push
ficompl
fnstenv
lahf
rolb
pop
cwtl
mov
stos
addr16
sbb
jns
xlat
cwtl
das
inc
jl
mov
inc
pop
cld
andl
mov
xchg
shrl
popa
or
mov
lock
fs
cmp
xor
out
mov
out
mov
inc
pop
pop
pop
test
rcrl
jl
push
and
push
xchg
mov
adc
inc
jmp
pop
xchg
push
stos
clc
jecxz
xor
add
stos
mov
and
es
jmp
popf
fdivs
repz
stos
mov
push
jb
dec
shl
mov
jmp
sti
test
in
dec
in
and
lods
jg
insl
int3
or
lcall
addl
jb
movsb
mov
es
jmp
dec
xor
lret
adc
sub
stos
jmp
jl
jecxz
js
pusha
pop
rcrl
int3
insb
xchg
into
std
pop
fldcw
ret
mov
loope
add
inc
or
into
inc
loope
les
xchg
dec
jecxz
cmp
loopne
mov
filds
mov
scas
sbb
ret
jg
orb
mov
rcr
jnp
enter
mov
push
dec
andl
mov
in
lock
dec
jmp
and
ljmp
add
imul
or
data16
xor
iret
icebp
vmovaps
lahf
pop
les
or
inc
pop
push
sub
mov
ret
fdivl
mov
jg
shr
loope
fistpll
sbbl
into
xchg
and
jno
xor
pop
jbe
stos
push
mov
fisubrs
sbb
fsubrs
cmpsl
cmp
jp
jmp
in
lea
sbb
xor
xchg
add
idivl
js
enter
pushf
jecxz
inc
ret
test
pop
jns
es
addb
xchg
lret
cmpsl
popl
adc
sbb
lock
das
add
mov
cmp
fdivrl
fldenv
jbe
jbe
mov
shl
mov
xchg
pop
loopne
lcall
std
and
movsl
inc
push
mov
jne
sub
dec
fisubl
adc
lock
rcr
pop
xor
stos
jmp
fsubl
xchg
in
and
add
add
arpl
and
pop
jae
ret
popa
dec
lcall
cmp
mov
sbb
mov
arpl
stos
sub
cld
mov
inc
dec
js
jbe
or
and
insl
mov
mov
aam
das
shll
inc
adc
mov
sbb
mov
add
mov
jno
stos
push
xchg
push
movsl
mov
push
into
sub
fistpl
mov
mov
adc
dec
or
cmpl
lock
ja
jne
jb
push
outsl
mov
jl
sub
dec
shll
xchg
adc
clc
sbb
jg
lea
lods
out
lcall
push
mov
mov
roll
cwtl
aas
jmp
mov
jle
ret
test
xor
cld
mov
dec
xor
mov
xor
inc
sbb
outsb
jmp
jne
pop
xchg
aaa
test
xor
inc
movsb
jmp
add
cmp
cmc
mov
mov
adc
stos
push
sbb
rorb
decl
repnz
sbbl
aam
subb
mov
inc
fs
outsb
rcrl
enter
sub
cld
push
fimuls
loop
jle
inc
sub
fcompl
cmp
movsl
mov
insb
shlb
and
cmc
fcomps
stos
add
fwait
sti
pushf
out
std
push
not
mov
les
push
int3
jb
xor
mov
mov
aas
dec
icebp
and
mov
push
xchg
ja
sarl
sahf
repz
imul
test
xchg
adcl
stos
mov
jnp
stos
subl
adc
xchg
push
popf
jb
inc
into
cmc
mov
jmp
xor
fsubl
dec
adc
mov
sbb
scas
pop
fisttpll
jb
add
mov
sub
mov
jno
jmp
jg
fs
lods
adc
int3
addr16
lods
cmp
mov
test
rol
xchg
lcall
jnp
sbb
jnp
or
inc
loopne
jecxz
fwait
jo
call
ss
cmp
iret
ror
xor
insl
shrb
icebp
in
lods
fistl
inc
mov
fldl2t
dec
mov
adc
sbb
push
mov
pop
xor
mov
mov
jmp
gs
push
or
xchg
aas
mov
aam
arpl
cmp
cltd
push
loopne
jae
pop
add
int
xor
lods
xchg
stos
enter
pop
cs
pop
mov
jmp
mov
bsf
cltd
jno
gs
mov
or
jle
mov
lods
jne
push
jae
mov
and
icebp
bound
leave
bound
mov
pusha
jmp
jae
pop
out
or
daa
pop
sbb
xchg
ljmp
fcmovbe
scas
xchg
jge
jge
jo
xchg
sub
mov
and
pop
pop
mov
push
sbb
sub
sub
cmp
shll
mov
and
in
lock
loope
and
lods
subb
js
movsl
mov
in
push
ret
dec
mov
pop
pop
adc
aam
loop
popf
inc
mov
add
dec
je
mov
jecxz
pushf
cmp
and
inc
xchg
jmp
pop
les
mov
jmp
insl
into
es
aaa
or
sbb
sbb
ja
mov
or
stos
nop
ds
fimuls
mov
add
jno
cmpsl
inc
bound
pop
add
add
pushf
ss
lcall
xor
pop
push
iret
xchg
std
add
and
ret
bnd
inc
jmp
xchg
jmp
mov
jmp
sahf
lock
pop
xor
mov
shl
cmpsb
jns
addr16
mov
or
div
xchg
stos
mov
iret
sub
xchg
lcall
jle
adc
sarb
jp
lds
aas
in
dec
cmp
popf
pusha
mov
mov
add
pusha
push
jmp
iret
dec
es
movsl
push
mov
test
addb
mov
adc
jle
loopne
xor
pushf
pop
push
lock
xor
dec
mov
push
aam
jmp
sub
lea
movsl
mov
ret
out
add
icebp
sbb
js
ljmp
jnp
insb
sbb
popf
call
nop
or
sarb
mov
les
xchg
test
ror
mov
sbb
push
jbe
xor
inc
jmp
inc
ljmp
inc
add
push
leave
fsubl
and
or
mov
adc
clc
xor
lock
test
sti
adc
pop
and
jo
lock
addb
adc
push
in
outsl
arpl
lock
rcrl
push
pushf
pop
icebp
repnz
testl
cmp
inc
and
pop
aam
ret
loop
lahf
dec
outsb
sub
inc
cld
jmp
std
mov
bound
jbe
xchg
and
aaa
je
dec
jg
push
mov
dec
sbb
sub
jmp
movsl
mov
aad
test
data16
outsl
push
pop
cmp
adc
xchg
lcall
pusha
jge
add
xlat
or
popf
vdivss
call
adc
sub
push
cli
mov
push
jge
xchg
jmp
imul
sub
cmp
mov
pop
mov
push
pushf
cmpsl
pushf
loop
pop
ret
pusha
ret
cmp
imul
mov
cltd
aas
test
int
fsts
cmpsl
in
imul
add
pop
les
xchg
scas
add
mov
stos
in
push
rol
dec
sbb
stos
pusha
cmpsl
testb
lret
sub
sbb
jg
cltd
pop
xlat
mov
daa
test
gs
outsb
push
imul
cltd
mov
int3
inc
out
xlat
insb
cmp
loop
out
cltd
data16
cmc
out
sub
inc
cltd
dec
push
dec
adc
inc
cltd
mov
incl
add
or
movq
xchg
leave
ljmp
adc
and
adc
mov
mov
negb
fistps
sub
movsb
ficomps
push
fnstenv
adc
cltd
rcr
sbb
cmp
jg
or
cltd
xor
imul
data16
ficomps
fs
xchg
pop
sub
repnz
dec
pop
xor
xchg
and
and
cltd
fsubs
jg
cltd
cmp
addr16
ret
xchg
mov
adc
cltd
imul
in
outsl
cltd
fstl
pop
mov
lret
aam
fcomi
in
shll
xchg
cltd
loop
and
xor
adc
das
push
pop
pop
inc
sub
nop
mov
push
xchg
and
adc
dec
inc
cmp
push
jg
ret
cltd
in
xchg
nop
ss
xor
adc
push
loop
or
cltd
out
jnp
lret
mov
sub
and
mov
std
and
popf
rorb
xor
mov
inc
inc
push
pop
sub
push
pop
cltd
ljmp
pop
fwait
std
pop
mov
testl
jl
inc
xchg
lret
out
or
fwait
pop
les
mov
add
jg
xchg
int3
pop
adc
push
cmp
mov
insl
sbb
sub
fwait
cltd
jmp
insb
xchg
mov
pop
jnp
and
mov
movsb
push
xchg
mov
sbb
lods
add
xor
hlt
cmp
movsb
cltd
xchg
icebp
cli
jp
imul
lock
hlt
shlb
cmpsl
inc
sbb
pushf
mov
push
mov
stos
test
test
cs
sub
popf
ret
jmp
lret
sbb
mov
js
fwait
and
cmpsb
xor
fucompp
fwait
shrb
loope
mov
cltd
nop
jae
jbe
pop
int3
and
mov
and
mov
stos
in
mov
cltd
jbe
or
lods
push
dec
cli
pop
cltd
xor
pop
xchg
pop
mov
sub
xchg
and
nopl
jns
loope
cltd
xchg
adc
cltd
js
mov
repz
cli
xchg
cltd
dec
lret
or
addr16
jae
rcrb
ret
icebp
dec
mov
mov
pop
addb
xor
dec
sub
pop
dec
inc
inc
lret
imulb
in
rcll
push
rcrl
adc
outsl
cmpsl
daa
inc
mov
xchg
fstpt
jmp
das
cltd
icebp
and
jg
inc
shll
repnz
xlat
cltd
push
shll
mov
cltd
and
jb
test
das
sub
sbb
fnstsw
jecxz
out
inc
shll
out
test
sub
cltd
push
inc
out
add
jo
push
pushf
ss
jle
test
cmc
pop
pop
aam
lret
and
out
inc
mov
or
pusha
adc
aam
pop
or
cmp
pop
mov
mov
cwtl
lock
mov
push
mov
popf
sub
push
jmp
cmp
stc
mov
dec
jb
jge
mov
push
testb
lret
stc
in
outsb
dec
fdivs
into
jecxz
jle
sbb
cltd
aad
mov
popa
pusha
ja
cltd
push
mov
cmp
lret
xchg
fidivl
stos
movsb
movsl
mov
adc
adc
pause
dec
or
jge
sbb
sub
xchg
or
cwtl
addr16
sbb
stc
imul
pushf
sub
imul
ret
mov
lret
cltd
or
shrb
mov
cwtl
movsl
cmpsl
pushf
iret
ds
and
aam
scas
adc
sarb
fstps
scas
orl
sahf
fxch
mov
loopne
dec
or
cltd
repz
cld
xchg
dec
adc
push
cltd
mov
sbb
mov
fstl
dec
xor
jecxz
cltd
jnp
cmpl
add
scas
and
aam
xor
outsl
dec
shll
mov
pop
mov
xchg
int3
mov
jns
mov
addr16
icebp
cltd
fcoms
repnz
mov
xor
xchg
dec
loope
jl
cmp
add
cltd
fisubrs
iret
push
cltd
add
push
pop
push
dec
and
pop
out
add
int
adc
mov
cmp
mov
outsb
mov
out
das
fstpl
cltd
push
inc
js
andb
jno
pop
xchg
imul
loope
vmovss
or
aad
jns
test
scas
mov
into
lea
movd
mov
out
adc
inc
xchg
icebp
aam
push
mov
adc
xor
pop
or
pop
mov
scas
inc
lcall
cld
cltd
mov
rorl
test
cltd
dec
stc
lea
xchg
jb
sbb
push
cmpsl
gs
frstor
ror
mov
cltd
adc
pop
and
movsl
ljmp
pop
add
inc
repz
adc
or
sahf
xchg
int
stos
sbb
arpl
fcomp
ret
jle
insl
into
mov
movsl
dec
jne
or
test
out
cmpsb
adc
jns,pt
jmp
imul
scas
andb
fistpll
pop
out
cltd
rcrb
mov
iret
movsb
cld
inc
fwait
xchg
dec
sbb
adc
cltd
cmp
pusha
aas
cltd
inc
in
fs
mov
cltd
dec
clc
in
and
scas
loopne
inc
call
xchg
loope
fiaddl
sbb
jae
pop
lret
sub
out
inc
dec
push
div
push
push
add
enter
cltd
roll
jnp
sub
cmpsl
or
cltd
test
cmpl
pop
movsb
rolb
js
ljmp
popf
push
sub
pop
sbb
dec
inc
daa
add
dec
sahf
inc
adc
jle
xor
and
pushf
loop
mov
aaa
call
cltd
int3
mov
jp
jns
test
inc
push
imul
cltd
dec
data16
enter
xchg
movsl
inc
shrb
pop
stos
adc
add
out
mov
cmp
pop
daa
cltd
in
pusha
jae
in
inc
pop
sbb
inc
subl
push
push
cltd
in
inc
aad
sbb
jmp
pusha
scas
lods
xor
bound
pop
outsl
push
mov
xchg
roll
dec
mov
scas
stos
cmp
iret
jmp
mov
add
lahf
popf
repnz
mulb
and
movsl
xchg
pop
inc
pop
repz
cmpsl
std
pop
push
add
sbb
das
mov
jecxz
or
sub
inc
sbb
divl
ret
fdivs
jg
push
adc
mov
mulb
mov
mov
and
lret
subb
aaa
sbb
cltd
in
shrb
jo
jns
jge
mov
and
inc
scas
loop
jle
icebp
ret
leave
mov
mov
ja
movsl
testb
cltd
push
push
jmp
mov
xor
movsl
scas
in
xchg
cmpsl
sbb
bound
mov
cmp
enter
scas
push
rorb
inc
repnz
mov
pusha
xchg
or
sub
push
push
out
mov
pop
jns
inc
mov
lahf
jmp
daa
push
mov
mov
or
cmpsb
cmpb
arpl
mov
xor
daa
popf
cltd
out
sbb
cltd
inc
addr16
mov
cmpl
adc
fwait
das
and
dec
hlt
in
fdecstp
xchg
out
adc
js
dec
push
lret
add
sub
xchg
or
sahf
mov
mov
xchg
add
xchg
orb
push
stos
mov
cltd
xor
jne
pusha
mov
cmc
push
cmp
or
push
pop
push
fistpl
scas
and
inc
outsb
frstor
insl
out
mov
mov
movaps
inc
push
inc
mov
xchg
cltd
add
nop
fwait
add
rol
mov
xchg
loopne
rcrl
test
pop
fdivs
icebp
inc
jle
mov
xchg
mov
cltd
lret
cmp
xor
adc
jge
pop
scas
dec
andl
sarb
or
xor
dec
int
pusha
mov
cmp
in
cmpsb
dec
flds
mov
insl
sub
cltd
sub
clc
sbb
fidivs
pop
dec
cltd
mov
and
stos
sub
addb
cmpsb
or
shll
cltd
addb
into
pop
clc
aaa
cltd
cmpsb
pop
iret
cmp
fsubrs
rclb
pop
lahf
and
cltd
int
fcom
fcoml
decb
pusha
pop
ret
mov
add
aas
or
lahf
push
cmp
push
xchg
inc
imull
aad
add
fimuls
jo
gs
jmp
popl
sbb
push
mov
dec
rclb
insb
imul
sahf
jno
in
es
or
in
adc
ret
mov
inc
jle
mov
pop
ret
and
lds
jb
mov
shl
add
add
sti
cltd
pop
insl
xchg
fucomi
sbb
inc
inc
loop
jo
fildll
mov
push
fsts
int
push
mov
aaa
inc
inc
jnp
flds
jmp
ja
xchg
insl
mov
jle
sub
std
lcall
inc
xor
xor
insb
cmp
mov
lock
mov
andl
fwait
mov
imul
xchg
insl
xchg
test
jbe
mov
sti
test
outsl
cmc
push
pop
test
out
jmp
or
jno
mov
mov
pop
xchg
fidivs
and
in
mov
and
jge
xchg
shll
fdivrl
push
mov
mov
push
popa
cmpsb
mov
lret
mov
jge
adc
xchg
dec
lods
pop
cmp
cltd
add
scas
pop
scas
out
add
daa
cltd
jmp
insl
pop
rolb
vmwrite
push
inc
or
push
inc
les
int
push
cmc
in
lcall
loopne
lock
or
ret
test
fmul
fxch
dec
sbb
push
popf
shrl
lret
shl
mov
jmp
stos
dec
imul
push
enter
incl
push
pushf
adc
hlt
mov
rcr
mov
out
adc
stc
mov
mov
add
mov
inc
or
xchg
lcall
and
addb
jmp
cld
dec
loope
jbe
adc
and
ja
pop
sub
mov
dec
push
jbe
lahf
push
ret
dec
mov
or
fwait
sub
adc
jge
or
movq
jl
jg
shr
mov
push
scas
jmp
bound
lock
mov
mov
movsb
and
cmp
mov
adc
divl
xorl
inc
jl
mov
dec
jp
shlb
not
or
sbb
sbb
jno
mov
rcrb
icebp
into
inc
or
lret
movsb
cmp
mov
adc
fldcw
and
mov
aam
adc
negl
and
cltd
imul
adc
aad
xor
fldenv
mov
jb
adc
jmp
push
inc
repz
mov
jecxz
push
aam
push
dec
inc
dec
jns
pop
and
add
pushf
inc
jno
xchg
into
inc
loopne
test
jmp
lret
xchg
and
cmp
mov
jg
mov
or
std
movsb
fstl
jo
fidivrs
clc
jge
cld
mov
sub
rcrl
jmp
sub
and
mov
xchg
lods
les
lock
mov
adc
cmc
pop
jmp
mov
inc
push
add
inc
lcall
mov
dec
or
pushf
fwait
jmp
aaa
lock
add
ret
jecxz
cltd
mov
lock
dec
das
lret
sbb
stos
fwait
jmp
mov
jmp
add
ret
jnp
das
ror
pop
lcall
jmp
imul
mov
sbb
aaa
cli
jmp
ficoms
data16
mov
mov
cmp
out
fidivs
out
pop
jl
jno
hlt
dec
stos
dec
stos
xchg
dec
loopne
jmp
fs
xchg
arpl
xchg
push
adc
test
mulb
imul
mov
dec
ret
pop
jge
push
sub
push
jb
pop
fisubs
xchg
lock
insb
int3
cmp
xchg
rep
ss
and
mov
add
push
jl
inc
adcb
ljmp
pop
xchg
mov
pop
out
jl
jmp
aaa
or
fisubrl
jne
jae
jno
arpl
movsb
add
das
mov
flds
movsl
or
lcall
jne
jno
mov
ss
xor
mov
imul
daa
jle
push
mov
cmp
sub
mov
mov
xchg
in
xchg
repz
jp
pop
cmp
rcrb
xchg
adc
test
stos
push
in
push
fists
rclb
leave
dec
imulb
iret
pop
dec
pop
int
cmp
dec
adc
and
imul
mov
push
and
rolb
xor
mov
stos
test
mov
jae
push
jmp
test
xchg
js
cltd
cmpsb
jp
adc
adc
xchg
push
jno
out
shr
orl
pop
mov
sbb
adc
xchg
jmp
mov
mov
cmp
pushf
xor
push
and
lock
jnp
stc
shlb
insb
push
pop
aaa
jmp
sbb
add
loopne
pusha
inc
sarl
stos
stos
mov
into
in
dec
and
cmp
xor
lods
loopne
in
sbb
inc
xor
mov
inc
cmc
roll
mov
pop
cltd
add
push
dec
jecxz
mov
xor
sarb
jb
fwait
rol
xor
std
sub
xchg
mov
subb
shll
hlt
and
sbb
xor
inc
arpl
or
xchg
popa
cmp
call
adc
push
mov
pop
pusha
or
das
pop
jns
movb
call
adc
fldl
or
xchg
popf
push
sub
xchg
jecxz
ja
fwait
sbb
inc
fisubrl
scas
cmp
add
imulb
mov
sbb
push
cmp
inc
arpl
and
inc
outsb
pushf
cld
cmp
pop
jbe
pop
jns
xchg
mov
add
cmove
mov
mov
xchg
cmp
and
or
stc
lock
inc
imul
movsl
notb
and
jb
test
imul
mov
xor
mov
jecxz
nop
outsb
mov
jno
js
cwtl
pop
int
cltd
leave
scas
cmp
inc
cltd
jo
inc
adc
xor
inc
jge
pop
cltd
pop
inc
fcomp
lods
dec
pop
pop
cltd
mov
sbb
cltd
aam
push
rol
nop
imul
jmp
in
mov
adc
inc
repnz
jmp
cmp
sub
nop
lcall
cmp
mov
cltd
cmp
adc
jecxz
jle
sub
dec
jp
aad
add
cmp
adc
xchg
cmp
push
insb
loop
aas
mov
mov
lds
scas
mov
xor
out
cltd
pop
mov
movsb
in
xchg
orb
sub
out
adc
rorb
mov
fdivrp
mov
push
mov
mov
mov
dec
shrb
into
int3
jae
cltd
icebp
sahf
or
repnz
sub
mov
push
cltd
adc
aas
push
push
das
mov
fwait
mov
and
addr16
cltd
sbb
cli
sbb
add
pop
int3
sub
jle
lds
add
add
scas
jb
jg
xchg
enter
pop
cltd
sbb
jne
imulb
cltd
jg
pusha
adc
xor
add
cltd
mov
dec
dec
pop
notl
mov
fxam
push
lock
lret
and
outsl
sbb
rorl
xchg
cltd
xchg
push
cmp
lea
pop
jmp
or
dec
stc
mov
cmpsb
rcr
adc
sub
pop
rolb
dec
cltd
inc
hlt
loope
clc
jmp
push
insl
inc
push
cli
cltd
repnz
or
cltd
fbstp
inc
enter
xchg
jcxz
femms
test
in
mov
cltd
incb
out
in
cmpsl
adc
dec
js
shrl
and
mov
cltd
mov
lcall
jnp
xchg
push
adc
aad
dec
sub
shlb
into
ljmp
sbb
js
jne
jle
call
sbb
mov
mov
insb
xchg
enter
stc
cltd
pop
ficoml
dec
mov
cwtl
push
cmc
lahf
mov
and
mov
mov
adc
pop
sub
push
mov
jo
mov
pushf
fwait
test
mov
aam
sahf
or
cltd
xchg
cmp
dec
push
and
jmp
fwait
leave
xchg
adc
add
sti
inc
leave
into
xchg
cltd
and
xor
xor
mov
jo
dec
lcall
hlt
jmp
repnz
push
add
mov
jle
cltd
cmpb
xor
popa
xchg
push
jae
and
mov
jmp
or
sti
push
ljmp
mov
lret
adcb
or
insb
mov
scas
push
mov
add
jg
js
pop
into
push
cltd
andb
xchg
fwait
out
lods
sub
cltd
mov
jbe
pop
pop
stc
cli
cltd
cwtl
push
sbb
cmpsl
in
aaa
out
lcall
cmp
pop
out
pop
mov
fmulp
cltd
scas
sbbb
push
inc
dec
jl
mov
fwait
sub
cmp
rcll
mov
shlb
cmpsb
stos
cltd
push
push
pop
pop
push
into
mov
loope
repnz
mov
cltd
pop
mov
stos
nop
cmp
xchg
mull
repz
sbb
sbb
insl
cltd
in
lahf
insb
fwait
pop
cmp
movsl
xchg
cltd
movsb
out
rcl
jmp
jo
lcall
push
cltd
jno
shrl
mov
into
cltd
inc
mov
mov
scas
jo
mov
adc
lret
and
mov
dec
pop
fsubr
sahf
add
jmp
js
into
and
xchg
dec
cltd
add
hlt
xchg
pushl
cmpsl
sbb
jb
sarl
fsts
cmpsl
mov
mov
rorl
orl
or
les
pusha
cltd
pop
and
mov
scas
mov
out
jae
cltd
scas
dec
cmc
lcall
fisttpll
jbe
dec
scas
pop
aaa
inc
push
std
out
sbb
jl
loopne
mov
repnz
cltd
or
xchg
mov
pop
aas
cmp
push
mov
mov
jge
lahf
pop
mov
callw
sbb
ss
xor
sub
rcrb
out
push
negb
nop
mov
sbbb
ss
cltd
mov
jecxz
push
cltd
loopne
in
push
jb
dec
scas
mov
add
add
xchg
and
add
in
mov
les
loope
xchg
cmp
and
lret
leave
add
fwait
jmp
aas
add
and
cwtl
xorb
in
icebp
cltd
stc
ds
fistps
cmp
xchg
push
mov
cltd
repz
push
push
lds
xchg
dec
cltd
xor
scas
lea
rcrl
adc
iret
sbbl
jae
mov
cmp
js
scas
les
pushf
into
fwait
sbb
mov
jl
xchg
cltd
cld
sbb
aad
xor
ret
xor
outsb
xchg
lahf
push
dec
aam
mov
sub
mov
loopne
mov
dec
jmp
dec
test
inc
mov
fmul
mov
call
jmp
mov
cmp
pop
pop
adcb
cltd
or
or
int
mov
cltd
cmp
cmp
negb
xchg
pop
ss
les
cltd
pop
fs
jecxz
lods
dec
lahf
adc
sub
xor
rcrl
xchg
loopne
cmp
lock
in
inc
pop
or
cltd
aaa
cmp
fwait
iret
mov
loope
xchg
cltd
xlat
add
push
cltd
push
sbb
repz
clc
loop
cwtl
sbb
mov
cltd
std
das
xchg
xlat
dec
je
cmpsl
mov
arpl
cmpb
mov
inc
sub
fwait
mov
xchg
fxch
and
repz
jecxz
lea
mov
mov
fsubrl
add
fcomi
push
xchg
ret
in
and
pop
xor
bound
shrb
push
push
mov
cltd
out
xchg
stos
add
cltd
insb
mov
adc
mov
lcall
jg
addr16
jne
adc
cmp
jecxz
cltd
roll
jmp
cmpl
insl
push
lsl
add
cli
enter
or
pop
inc
jl
jp
cltd
fildll
ficomps
bound
loopne
cltd
roll
pusha
daa
sub
cld
dec
loope
cli
and
jne
or
sub
add
lret
rcr
pop
daa
dec
scas
adc
push
fadds
xor
cltd
pop
nop
adcb
mov
das
cmpsb
dec
inc
pushf
adc
pop
cltd
inc
outsl
mov
mov
pop
jbe
inc
jo
mov
xchg
ljmp
xchg
mov
jo
mov
and
ret
xor
pop
cltd
or
sub
mov
out
xchg
and
push
popf
test
ret
lea
mov
fstps
pop
aam
push
or
jns
inc
fdivs
repnz
xlat
mov
jbe
jnp
push
mov
pusha
sbb
cmp
pop
and
and
lcall
insb
xor
ret
addr16
dec
test
fwait
mov
adc
add
fcompl
cmp
rcr
and
jno
dec
fisubrs
fcompl
jne
mov
jb
pop
fwait
mov
sti
jmp
sub
aad
xchg
cltd
je
loope
push
xor
stos
scas
mov
sbb
std
add
cltd
push
jmp
ret
or
xchg
jns
lock
call
mov
mov
ja
mov
inc
mov
into
or
inc
int3
mov
fs
add
jmp
or
lods
sub
push
push
push
jns
mov
lret
mov
add
in
mov
mov
std
mov
adc
pop
push
sub
and
push
pop
and
adc
xor
shl
sub
dec
dec
dec
int
stos
jbe
bnd
mov
mov
repnz
enter
stc
mov
mov
xchg
loop
xor
ret
es
inc
sti
outsl
mov
cmp
pushf
lock
cmp
and
xor
ret
pop
dec
mov
rolb
adc
cli
dec
bound
mov
xor
dec
loopne
daa
out
or
sbbl
lahf
adc
es
daa
insb
data16
pop
in
jp
jg
inc
xchg
dec
jmp
lcall
test
in
sub
jns
inc
adc
and
int
cmp
mov
mov
mov
mov
mov
sub
add
sbb
lret
jmp
jle
xchg
and
push
dec
jmp
imul
mov
arpl
test
stos
pop
jmp
movsl
orl
dec
jl
iretw
sahf
mov
push
jle
lahf
loope
popf
pop
mov
mull
je
das
pop
sub
push
pop
aam
out
stos
lea
ret
int
sub
stos
inc
adc
lods
leave
daa
mov
push
jo
mov
je
mov
add
push
bt
or
rolb
int3
sub
add
std
sbb
enter
sub
stos
pop
xchg
xchg
cltd
xchg
lock
sub
mov
sahf
xchg
stos
xor
aam
or
push
mov
jo
inc
enter
mov
cmp
scas
or
or
lods
ja
sub
adc
sub
jg
cmpsl
inc
orb
inc
scas
cmp
movlps
mov
aam
add
cmp
mov
jb
nop
add
cmp
xchg
adc
or
loopne
inc
ret
mov
xor
jge
ss
mov
dec
lea
jmp
stos
sub
xchg
daa
pusha
jmp
movsb
arpl
in
cmp
mov
adc
out
cwtl
and
xchg
or
aaa
jns
push
outsl
mov
push
test
add
sub
mov
cmp
mov
adc
sbb
add
out
loopne
inc
in
jae
lahf
pop
xchg
jmp
rolb
inc
mov
inc
mov
call
or
lds
mov
xor
jecxz
jl
lret
lea
mov
jnp
cli
aad
out
sbb
cmp
xlat
ret
fst
sbb
xchg
js
sub
xor
mov
sub
or
mov
icebp
cmc
sti
cmp
movsb
add
daa
aaa
lea
into
test
cmp
xor
mov
mov
rolb
or
xlat
aas
jecxz
cltd
mov
dec
push
popa
fistps
out
sub
jb
cmpsl
jmp
lret
lahf
imul
cld
in
stos
cmp
push
stc
jno
mov
mov
jge
cmp
lods
add
mov
add
mov
sbb
idivl
mov
sub
cmp
lock
outsb
mov
xorl
daa
xor
jg
add
inc
rclb
cmc
cmpsb
sub
jl
orb
cltd
rcrb
cs
out
jmp
ja
imul
aam
add
aam
add
ret
sub
popf
ljmp
stc
adc
out
cwtl
call
cmp
jo
leave
sbb
inc
jmp
xchg
and
lea
enter
xchg
jno
sub
test
loopne
arpl
mov
sbb
cmp
sbb
pop
pushf
pop
lds
int3
sub
jno
dec
mov
pop
and
sti
mov
fcomps
lea
mov
xchg
cmp
mov
dec
sbb
aas
pop
lock
fstl
test
cwtl
cmc
sub
push
jmp
xchg
jmp
fwait
and
pop
xchg
inc
mov
imull
cs
jne
je
xor
inc
xor
rcrb
jmp
pop
test
and
jl
push
idivb
outsl
int
and
cltd
mov
enter
cwtl
push
xor
adc
fucomp
test
fcompl
hlt
fldcw
dec
and
dec
sbb
push
sbb
fimull
dec
mov
cli
push
dec
into
rorb
js
repnz
jmp
pop
push
cld
test
push
out
mov
or
std
and
lret
xchg
pop
je
sub
sub
popa
cmp
outsl
enter
jmp
cmc
pop
cli
jmp
inc
aas
popl
sub
xor
dec
or
pop
push
mov
mov
outsl
mov
jmp
lcall
lea
push
dec
aad
sahf
xor
ss
js
stos
neg
xchg
ret
adc
inc
rorb
shll
int
push
dec
jmp
std
mov
popf
mov
sub
pop
pop
xchg
filds
xchg
lcall
cltd
mov
sub
loopne
inc
or
fwait
mov
xchg
sbb
pop
icebp
hlt
fwait
test
movsl
jmp
imul
pop
shll
add
repz
cmpsl
sub
adc
adc
incl
inc
les
sub
notb
enter
cmp
movsl
addr16
cmp
aaa
xchg
jp
sbbl
adc
ror
inc
or
xchg
js
inc
into
shl
pop
jmp
sbb
jmp
push
sub
inc
cmp
ljmp
inc
sbb
push
cmp
popf
adc
sub
add
mov
addl
cmp
lds
jle
adc
movsl
dec
orl
mov
mov
sti
jmp
lcall
rorl
fsubrs
out
dec
mov
les
hlt
repz
xchg
jl
mov
jecxz
add
push
adc
stos
and
xor
add
cmpsl
aaa
mov
lods
cmc
mov
pusha
xchg
cmp
mov
popf
or
jmp
movb
icebp
xchg
into
pop
cmp
out
subb
push
cmp
push
ficoml
cmc
xchg
aaa
faddl
mov
rclb
es
xlat
jmp
loopne
jg
test
scas
dec
or
ds
into
and
cmpsb
in
mov
dec
fsubl
pop
lret
lcall
icebp
sub
into
outsl
jno
xchg
jb
fistpl
jmp
std
mov
movl
add
mov
xchg
loop
mov
aaa
rcll
push
fidivs
fldenv
gs
xchg
out
and
fwait
and
mov
jbe
push
mov
pop
mov
jo
pusha
and
shrb
cmc
push
cmp
push
es
sahf
aas
addr16
mov
jmp
call
aaa
into
jmp
inc
cmp
aas
sbb
mov
mov
cmova
aad
das
shrl
mov
mov
xchg
mov
or
pop
adc
and
push
mov
pusha
inc
mov
add
mov
inc
test
sub
mov
xchg
adc
stos
testl
xor
dec
repnz
mov
scas
sbb
imul
test
in
mov
out
push
lock
aam
lds
pushf
fists
ret
out
mov
mov
adc
sub
in
imul
jecxz
mov
jnp
sbb
mov
mov
pop
xor
cmc
arpl
sbb
inc
or
mov
sub
mov
xchg
cmp
mov
stos
mov
pop
dec
mov
ret
int
sbb
mov
movsb
sub
mov
ss
xor
je
fwait
lock
xor
enter
xor
push
stos
push
adc
sbb
or
push
xchg
sahf
and
pop
jae
cmp
cs
and
into
xchg
int
jo
pop
pop
pop
fisttps
sbb
sub
push
shll
add
in
or
and
jle
fidivrl
inc
stos
adc
cmpsl
in
xchg
mov
xor
push
dec
adc
adc
aas
mov
xchg
mov
inc
pop
rclb
adc
pushf
jae
into
data16
adc
icebp
lods
sub
stos
and
xchg
xchg
imulb
jns
xor
shrb
out
xchg
jae
pop
sti
enter
daa
setno
lods
jmp
jmp
loopne
lcall
push
xchg
and
ret
int3
adc
aam
icebp
cmc
push
add
daa
lahf
lods
mov
movsb
das
in
aad
or
scas
inc
inc
es
mov
sbb
cmp
push
jl
sbb
cmc
stos
cmp
inc
sub
nop
gs
adc
pop
pop
dec
out
cmp
ds
jo
pop
lods
addl
testb
mov
mov
dec
pop
insb
lret
iret
inc
cmp
push
sbb
ret
cmpsb
dec
test
and
arpl
lcall
in
mov
andl
push
clc
jo
movsl
add
push
lds
frstor
roll
jmp
jae
pusha
js
pushf
or
push
cmp
inc
xchg
sub
mov
inc
out
ds
cmp
fildl
push
dec
jb
mov
dec
lods
neg
inc
bound
sbb
mov
sti
sbb
imul
add
adc
sbb
xchg
or
cmp
pop
in
ljmp
cmpsb
sahf
mov
out
lods
loop
mov
lcall
pop
jmp
cld
jo
les
xor
jbe
and
xchg
inc
inc
in
jle
mov
imul
addb
lret
sub
test
je
push
and
mov
jmp
shll
pop
cmpsl
cmp
mov
cmp
test
stos
jmp
add
imul
stos
push
fmuls
shr
push
aaa
pop
fwait
rorb
jmp
cmp
loope
mov
xor
stos
sbb
cmp
jg
out
mov
jmp
dec
xchg
fisttps
mov
pop
pop
or
xor
mov
mov
pop
dec
xchg
rol
imul
mov
jl
jmp
mov
es
push
adc
cmc
sub
jge
xorl
inc
popf
xchg
test
xor
cli
pop
mov
lahf
xor
test
and
or
daa
pop
jl
cli
sub
push
cmp
movsl
jmp
sub
ficompl
call
pop
dec
mov
mov
mov
jg
adc
add
cmp
xchg
inc
aad
incb
pop
ret
jmp
adc
ret
pop
mov
sti
xchg
jae
int
inc
imul
xchg
lock
sbb
lahf
cld
movsl
jno
sbb
mov
popf
pushf
sbb
jl
insl
and
pop
pusha
fdivl
dec
enter
arpl
out
jae
jo
gs
popf
mov
jno
mov
mov
stos
mov
mov
fidivrs
stos
enter
xor
outsl
mov
mov
jmp
shrb
decb
inc
dec
push
sbb
jge
stos
xor
lret
mov
mov
inc
imul
rol
sub
xchg
dec
push
sbb
rorb
inc
leave
loope
adc
seta
mov
inc
fwait
in
xchg
rclb
add
outsl
pop
shrl
mov
adc
jmp
shrl
movb
xor
push
fs
nop
mov
xchg
mov
add
loop
arpl
clc
stos
xor
leave
mov
and
fsubl
aam
in
mov
xlat
mov
in
jge
fisubl
xchg
jl
rorb
xor
or
int
aam
inc
lock
cltd
sub
push
jmp
pusha
xchg
add
and
data16
or
stos
add
ds
xchg
push
les
cwtl
popf
push
inc
mov
xchg
arpl
push
lret
stos
test
call
lahf
xor
movl
jo
cmp
outsl
inc
popf
ret
push
scas
fadds
in
xchg
xchg
push
scas
lods
js
and
jmp
cltd
lock
shrb
mov
ljmp
mov
out
int
inc
int3
add
call
jmp
imul
dec
sbb
xchg
jb
cs
insb
lods
lock
and
add
inc
sti
sbb
leave
xor
jg
mov
icebp
cmc
mov
and
pop
pop
xor
cmpl
imul
mov
dec
into
mov
pushf
rclb
or
mov
push
mov
cmc
cmp
mov
sub
cmp
cmc
inc
xchg
clc
int
in
and
push
data16
cld
push
fwait
outsb
lock
push
add
jg
adc
sbb
sahf
or
jmp
add
mov
cmc
mov
sbb
mov
stos
push
inc
and
jg
lods
cwtl
loop
sarb
stos
and
leave
push
mov
inc
int
push
insb
mov
je
pop
jmp
mov
and
test
enter
or
insb
mov
jbe
movsb
adc
dec
fsts
aas
xlat
lahf
into
pop
sub
insl
and
cmpsb
imul
mov
mov
std
nop
push
stc
lods
push
int
inc
adc
sti
mov
adc
mov
dec
addr16
daa
lahf
cmp
mov
adc
mov
aam
cmp
sbb
mov
lock
dec
std
push
add
inc
sub
mov
mov
jl
pusha
pop
cmp
mov
stc
mov
push
adc
shll
mov
pushl
xchg
pop
inc
movsl
and
xchg
pop
pop
pusha
inc
stos
xchg
insb
inc
pop
jge
dec
xchg
dec
mov
out
call
dec
mov
dec
pop
popf
mov
ss
lret
cwtl
mov
popf
push
mov
ret
pop
jmp
push
mov
cmp
out
mov
cmp
push
sub
enter
leave
mov
jno
mov
inc
push
popa
pop
dec
shlb
adc
cmp
sub
jmp
sbb
arpl
cld
cmp
xchg
cmpsb
jbe
xchg
mov
mov
rclb
mov
and
sub
aaa
pop
or
xchg
inc
and
lds
jmp
cmp
ljmp
dec
lods
lea
das
xor
mov
cli
or
fildll
mov
mov
rol
push
and
jno
jmp
insl
aaa
cmp
push
pop
jp
push
or
sbb
mov
pop
mov
daa
pop
jge
mov
add
pusha
pop
add
cmp
sbb
and
fsubrs
mov
and
sarb
hlt
inc
and
bnd
xor
mov
ss
inc
out
mov
and
cwtl
mov
out
fcoml
jmp
sub
data16
mov
mov
mov
push
mov
aaa
dec
das
cmpsb
ja
push
dec
jmp
arpl
mov
dec
jns
ja
and
lcall
mov
push
ja
test
loope
xchg
cld
sbb
jo
pop
test
mov
xlat
mov
out
mov
cmp
cmp
sub
movsl
dec
mov
pop
in
dec
lahf
cmp
cltd
lock
sti
or
test
cs
into
mov
mov
pop
cmc
xor
ja
dec
les
loopne
mov
pop
jmp
sub
cmp
call
inc
sbb
in
out
mov
les
clc
cmp
adc
dec
popa
ficomps
nop
cmp
and
mov
add
int3
xor
mov
jp
lods
ret
and
int3
sti
xchg
mov
mov
mov
push
into
sub
js,pt
jbe
pushf
shrb
jne
rolb
jns
mov
xchg
cltd
mov
jmp
pop
jl
adc
dec
andb
call
xchg
pop
mov
insb
cmp
add
mov
inc
pusha
leave
inc
ret
sbb
mov
call
call
jmp
mov
sub
mov
jbe
jb
mov
pop
fwait
into
sub
imul
add
cmp
and
imul
dec
pushf
push
jp
xchg
push
std
lock
iret
inc
insb
imul
xchg
mov
jmp
mov
mov
push
sbb
cmp
push
cmp
mov
pop
sbb
lea
mov
popf
lock
lret
fildll
add
test
insb
test
sbb
popa
push
popf
jge
xchg
dec
das
pop
loope
sbb
sub
nop
xor
sub
inc
test
fwait
sbb
sti
cmp
aas
xchg
mov
mov
jmp
cli
inc
mov
sbb
add
fucomip
mov
or
or
pusha
or
imul
and
pop
fisubrs
dec
lea
aad
stos
shl
adc
popl
mov
std
jg
repz
pushf
cli
xchg
push
les
lea
into
add
outsl
int3
jmp
push
or
hlt
into
sub
std
in
out
and
mov
mov
aam
and
adc
xor
cmpb
add
or
jmp
jmp
jmp
xchg
fstp
pop
or
jge,pn
ss
sbb
popaw
cmpsl
xor
adc
jnp
popf
mov
test
pop
xchg
js
idiv
mov
loope
cmp
dec
lock
mov
push
mov
xchg
cmc
ret
loope
int3
inc
or
mov
jg
pop
fidivrl
into
enter
cmp
and
add
enter
or
xor
cwtl
sub
and
xchg
les
mov
movsl
lcall
mov
cmp
dec
popf
sbb
sbb
rorl
xor
bound
cwtl
sbb
js
arpl
inc
mov
rcrb
arpl
lahf
cmpsb
mov
insl
insb
push
or
es
cltd
mov
push
aam
mov
adc
and
outsl
jmp
rol
xchg
mov
hlt
cmpsl
cmp
mov
int
mov
and
data16
cmp
cltd
imul
popf
pop
lea
ficomps
push
push
mov
mov
in
jnp
iret
cltd
stc
fnsave
lahf
sub
test
add
pop
mov
in
pop
xchg
inc
cmpsb
ret
dec
cltd
lock
jge
fcmovnbe
mov
jno
test
lea
mov
adc
xor
loope
les
jns
cltd
sub
mov
sbb
sbb
or
mov
pop
bound
cltd
test
xlat
je
adc
and
cltd
cmp
test
sub
fwait
aas
imul
in
out
add
push
xor
addl
insl
fstl
imull
mov
loope
test
cltd
mov
jg
daa
scas
leave
test
mov
cmpb
push
mov
insb
or
cmp
das
popf
xchg
jno
inc
scas
out
mulb
add
inc
in
and
push
js
jmp
mov
push
cli
xor
xor
add
mov
add
pop
pop
popf
clc
cltd
imul
nop
cltd
ret
xchg
dec
mov
filds
mov
push
sbb
int3
add
sub
loopne
movsb
cmp
or
leave
rolb
jno
fmul
mov
pop
inc
cmp
fadds
cs
push
sti
xchg
insb
lea
mov
ja
inc
aaa
adc
orl
pop
sub
inc
sub
cltd
cmp
push
or
jns
insl
cltd
push
or
loopne
mov
jmp
cwtl
pop
cmp
stc
stos
xchg
add
pop
ljmp
in
test
xchg
adc
jmp
mov
inc
in
dec
comiss
add
xor
std
outsb
push
sub
nop
cltd
out
mov
push
cli
lret
dec
mov
adc
mov
in
shrl
add
adc
addr16
adc
test
mov
xor
ret
fcmovne
fwait
push
mov
sarl
xor
mov
cltd
mov
jae
inc
cltd
es
jns
inc
pop
mov
dec
mov
push
lock
xchg
js
jbe
xchg
fistps
pop
or
sbb
mov
and
mov
push
orb
dec
xor
mov
xchg
or
insb
xor
push
add
mov
es
mov
fildll
jle
imul
mov
aad
push
fwait
jl
mov
lcall
mov
stos
rcll
int
fstps
adc
aad
sub
mov
pop
add
or
push
push
imul
pop
fcom
ficoms
outsb
mov
sbbl
fisttpl
jle
mov
cltd
and
sub
cmp
mov
mov
ja
lret
pusha
inc
cltd
stos
sbb
jl
and
mov
nop
jnp
lret
iret
mov
pop
adc
sbb
mov
les
out
cltd
add
or
or
adc
call
gs
mov
jg
mov
repz
cltd
lods
jae
dec
cmp
jl
movswl
mov
pusha
or
push
rcrb
xlat
fldl
nop
sti
nop
xchg
cltd
roll
lret
cltd
subl
pusha
mov
or
add
fmul
push
mov
movsl
sahf
cmpsl
sbb
nop
push
cltd
add
ret
insl
lds
mov
out
or
in
ror
cmp
inc
mov
cltd
xchg
or
xchg
pop
scas
sbb
loop
loopne
sbb
push
scas
cltd
call
jnp
negl
jae
into
or
or
and
add
test
mov
xchg
imul
cltd
std
add
mov
cltd
cmp
add
orb
imul
gs
addr16
mov
or
adc
pop
sti
aad
cmp
cmp
jecxz
pop
cltd
stc
out
dec
add
cltd
pop
test
jno
cltd
icebp
xor
or
pop
cltd
cmp
mov
fildl
cltd
cmpsl
push
les
stc
mov
pop
arpl
adc
lahf
cltd
movsl
subb
lret
rclb
enter
idivl
adc
add
push
push
mov
mov
dec
pop
mov
scas
fisubl
dec
inc
popa
andl
mov
ret
and
jmp
cltd
lcall
out
dec
sub
mov
ja
jmp
stos
std
clc
pop
lahf
mov
sbbl
cmp
cltd
push
stos
and
xlat
lahf
or
scas
mov
lds
inc
scas
push
mov
cmp
cltd
int3
in
bound
insl
es
fs
popf
mov
stos
mov
inc
inc
rcrb
mov
dec
and
push
setns
cmp
and
and
or
loope
or
and
cwtl
push
imul
fcmovb
cmp
or
sub
out
cli
aaa
clc
xchg
shl
scas
or
cltd
mov
jp
mov
adc
lret
aaa
push
dec
flds
shll
pusha
stos
insb
ret
pop
not
lea
push
or
or
aad
iret
mov
arpl
mov
pop
pop
fadd
lds
sahf
fadd
mov
jmp
inc
loop
into
lds
pop
int3
jmp
roll
ret
lds
adc
inc
cwtl
mov
pop
mov
sbbb
add
inc
cmpsl
and
jmp
in
aam
xchg
pop
sbb
frstor
push
movsl
lock
loop
xchg
add
int
cmpsl
sub
stc
pop
xchg
mov
cltd
and
rcrb
loopne
das
push
stc
sarl
add
mov
adc
add
lods
outsl
pusha
cmp
sub
sbb
cs
rol
xor
jae
sub
dec
loope
lcall
adc
cltd
les
in
loopne
cld
test
mov
in
xor
daa
sbb
pushf
mov
sbb
cwtl
cmpl
adc
call
dec
mov
aas
sbb
fwait
test
icebp
roll
arpl
outsl
test
xor
cmp
call
in
in
insb
loope
jl
ffreep
cmpsb
sbb
inc
mov
test
inc
fisubrl
scas
sbb
jns
aas
das
pusha
sub
gs
neg
sbb
push
scas
mov
xchg
jmp
lcall
imul
push
cltd
int
test
repz
cmp
enter
mov
les
adc
add
mov
cmp
cltd
mov
loopne
sar
mov
or
mov
cltd
pop
push
insl
out
cmp
shrl
outsl
add
jle
sbb
rcrl
cltd
sbb
popa
or
xor
dec
mov
call
mov
mov
dec
daa
sbb
loope
movsl
cld
es
movsl
in
add
movsb
cltd
mov
or
fcoml
sarl
jae
push
and
mov
pop
out
shll
mov
fdivrs
xchg
rorl
jecxz
sub
rcl
ret
test
out
test
in
fwait
mov
cmpsl
cmc
mov
sub
int
insb
add
pop
adc
loope
pop
ret
adc
aas
and
in
cltd
or
sbb
pusha
mov
push
cltd
xchg
xor
lcall
inc
into
inc
push
cltd
xor
jecxz
sbb
loope
popa
sub
mov
leave
jge
adc
pop
iret
test
mov
xchg
or
cmpsl
int
and
lea
pop
cmp
scas
adc
aad
mov
sub
repnz
or
mov
lret
sub
sahf
jae
lock
jmp
cltd
loopne
pop
xchg
adc
pop
leave
cmp
sub
pop
popa
sub
pop
repz
adc
inc
xor
aam
mov
add
sub
inc
int3
and
xchg
in
fldenv
and
repnz
push
sbb
inc
cltd
mov
dec
shll
sbb
dec
jne
cmp
dec
dec
icebp
movsb
add
jle
jae
cli
pop
fimull
les
xor
inc
dec
repz
stos
inc
rclb
fwait
adc
rcrb
rcr
cmp
xchg
jge
pop
enter
in
fwait
pushf
and
movsl
test
cmp
mov
dec
rcrb
xchg
pop
lods
imul
ret
fadds
add
sbb
xchg
cltd
push
int3
loop
cmpsb
jb
xor
out
divl
mov
negb
aam
sub
hlt
sbb
sti
scas
imul
jo
pusha
int
inc
adc
cltd
sbb
cmp
pop
push
je
ret
in
inc
dec
pop
mov
enter
test
popa
cmpsl
xor
push
jl
cltd
movsl
outsl
sbb
ret
pop
pop
fsubr
adc
mov
xchg
hlt
les
es
fldt
mov
mov
dec
adc
sbb
mov
pop
repnz
cli
cmpsb
cltd
sub
sbb
adc
daa
cltd
sahf
jmp
int3
add
cli
fdiv
stos
in
clc
test
inc
mov
add
mov
sub
repz
jmp
in
mov
xchg
xchg
lds
fwait
test
fdivr
aad
pusha
int3
jo
push
mov
sbb
sbbb
frndint
mov
movsl
xchg
xlat
cltd
addr16
rclb
inc
ret
ljmp
and
and
mov
std
push
shrl
cs
ret
jb
cmp
lds
gs
pop
test
cmpsl
in
mov
mov
scas
cmpsb
mov
add
mov
dec
std
cltd
xchg
jno
cltd
pop
popf
popl
jne
arpl
jmp
push
cmp
imul
dec
push
mov
in
cli
mov
ret
daa
dec
xchg
cmp
les
push
ret
fwait
clc
in
cmp
or
rolb
popa
cmpsb
push
movsl
xchg
mov
ficompl
movsl
cmpsl
lods
lds
gs
cltd
sub
jecxz
mov
mov
mov
jnp
and
xchg
rol
arpl
mov
sbb
stc
sub
dec
cltd
test
inc
jecxz
pop
pop
pushf
in
add
das
movsl
dec
inc
mov
mov
outsl
shrb
pop
cltd
xor
dec
frstor
mov
jne
pop
pop
fisubl
lret
scas
iret
movsb
rol
or
mov
dec
push
kmovb
cltd
out
mov
push
test
pushf
push
and
mov
mov
mov
ljmp
test
movsl
pop
cmpsb
imul
and
repnz
jecxz
lods
mov
mov
sub
nop
lds
mov
sbb
insl
jl
mov
test
dec
cltd
pop
repnz
scas
ret
faddl
aas
loope
daa
cld
adc
push
mov
cmp
dec
inc
xor
das
fwait
sub
jecxz
pop
adc
fwait
out
cltd
inc
and
mov
sub
cmpl
test
jne
jg
sbb
cmp
sub
inc
cltd
push
out
ss
cmp
pop
jbe
cltd
outsb
inc
loop
test
sbb
push
fnstcw
ret
stos
cmp
imul
imul
loope
cmp
fwait
dec
mov
mov
stos
jbe
mov
gs
cmp
mov
pushf
mov
movsb
pop
cltd
test
sbb
hlt
lret
repz
inc
ret
cltd
out
arpl
mov
add
and
jg
jmp
dec
mov
cltd
xor
in
push
js
pusha
lds
sbb
gs
or
jmp
inc
fld
dec
xchg
mov
bound
xchg
push
push
lret
shlb
test
daa
cltd
cli
or
dec
cltd
addr16
jp
loop
pop
mov
arpl
dec
xchg
mov
dec
mov
cltd
in
hlt
cmp
sbb
mov
cmpsb
sub
sub
mov
shl
fs
stos
mov
ds
mov
fsubl
sub
scas
adc
cltd
or
add
and
ret
cltd
hlt
and
mov
ret
xchg
cltd
push
dec
xchg
push
and
add
in
xorb
dec
pop
mov
outsl
push
test
test
sub
sbb
mov
mov
xor
jne
ja
push
mov
cmp
pop
lds
add
insb
into
stos
mov
mov
popf
mov
sub
mov
lock
fmull
movsl
and
outsb
cltd
test
mov
push
repz
mov
lock
loopne
sbb
mov
cltd
gs
or
jl
lock
pop
jb
dec
ret
xchg
and
sbbl
jl
and
aaa
loope
cltd
push
call
xor
xor
or
scas
dec
call
mov
inc
xorl
mov
dec
push
mov
punpckldq
pop
mov
jmp
or
and
mov
cltd
scas
add
gs
xchg
jbe
cmp
icebp
sahf
test
cmpsl
inc
mov
cmpsl
jns
lcall
cmp
or
scas
xchg
addr16
xor
enter
pop
mov
test
cmp
sub
mov
ds
lods
and
adc
daa
inc
movsl
push
fisubs
rcrb
and
and
cmp
enter
je
mov
fwait
mov
fnsave
test
lds
pusha
adc
cltd
pop
push
pop
push
mov
psllw
dec
aam
mov
dec
lcall
imul
and
adc
xchg
mov
jl
pop
xor
fxch
jo
jae
fwait
pop
in
lods
mov
push
arpl
fcoml
inc
cmp
nop
fdivrs
scas
lret
pop
pop
add
scas
sbb
pop
pop
pop
mov
inc
ficoml
push
add
and
or
test
fistps
cltd
stc
pop
stos
add
sbb
jp
xchg
sbb
cld
inc
dec
jbe
movsb
xor
mov
jns
jnp
or
or
or
daa
add
mov
in
inc
sbb
cmp
and
pusha
cmpsl
jns
jnp
add
cli
pop
and
mov
or
inc
xrelease
sbb
adc
adc
jnp
js
ss
adc
cmpsb
cmp
lods
loopne
and
xchg
add
and
adc
pop
call
movsl
loope
or
pop
jne
cmp
and
repz
insl
jnp
xchg
mov
add
mov
add
aaa
cmp
repz
or
paddusb
js
or
lret
fisubrl
or
sub
movsl
pop
clc
push
mov
sbb
lods
pop
cld
adc
data16
cld
shrl
rcrl
adc
pop
or
scas
adc
pop
loope
rcrb
lret
xchg
jns
jnp
mov
aam
mull
cld
fimuls
pop
or
adc
rorb
inc
scas
adcl
movsl
pop
adc
mov
push
jnp
rcrb
loope
or
sub
xor
stos
or
xor
iret
stc
xor
rorb
push
pop
push
stc
mov
sbb
test
pop
outsl
xchg
dec
out
adc
jmp
jnp
add
push
pop
adc
scas
notb
shll
sbb
sbb
cmp
jecxz
sub
push
add
cmp
inc
add
mov
jl
jns
mov
rcrb
or
sub
inc
mov
cld
pop
inc
imul
cmpsl
jg
xor
adc
or
sbb
add
rcrb
xchg
push
or
aas
das
jmp
pop
add
add
loopne
cld
movsl
loop
or
adc
jns
imul
lcall
jmp
push
push
test
pop
adc
mov
adc
es
add
data16
lcall
or
ds
inc
mov
cld
mov
test
add
adc
cld
cmp
adc
mov
lahf
movsl
and
mov
cld
and
int
mov
sub
cmpsl
cmpsl
cmpsb
mov
jge
cmp
mov
add
iret
sub
inc
js
sub
cld
push
push
push
sbb
cmp
and
mov
pop
mov
adc
arpl
mov
or
or
je
movsl
cvttps2pi
mov
sbb
inc
jmp
mov
mov
data16
cmpsl
adc
daa
or
cld
insl
dec
cld
push
mov
and
mov
xor
dec
add
pop
cmp
scas
jne
nop
or
ja
cmp
pop
cmp
lret
jmp
mov
mov
or
adc
fdivrs
sbb
repz
mov
jns
js
in
or
test
mov
lea
inc
add
dec
xor
mov
repz
jl
mov
xor
cld
loopne
test
xor
push
add
adc
or
and
fwait
mov
pop
mov
adc
les
daa
pop
adc
xchg
inc
push
mov
xchg
sub
adc
gs
loopne
cmpsb
inc
jmp
mov
jnp
adc
shll
pop
shl
jp
inc
sub
insl
pinsrw
les
pop
dec
pop
das
sub
xor
cld
mov
push
sbb
add
and
cmpsl
adc
add
outsl
or
or
mov
or
xor
pop
cld
ljmp
adc
lea
lret
and
stos
jnp
inc
ljmp
shlb
loope
jmp
add
or
inc
pminub
push
jmp
mov
jb
dec
adc
and
call
pop
out
add
loop
cld
movsb
push
sub
mov
pop
ret
call
jmp
cmp
adc
sbb
and
iret
mov
mov
dec
mov
mov
push
inc
jns
push
sbb
jmp
data16
leave
les
cld
mov
daa
or
cmp
andb
jge
or
adc
cltd
add
add
fwait
fwait
add
scas
xor
out
test
add
xor
cmp
adc
es
adc
shl
mov
push
and
push
push
jno
inc
push
mov
push
ds
add
and
jne
and
scas
dec
adc
sti
adc
cld
cmp
testb
dec
in
jns
jge
jae
inc
ror
mov
add
or
cmp
push
or
fsub
lret
jmp
cmp
adc
mov
mov
mov
jnp
cmp
imul
loope
adc
add
pop
add
cmp
sub
cltd
add
sbb
scas
lods
adc
lock
je
ljmp
cwtl
aaa
call
pop
loop
pop
jmp
loopne
pop
mov
or
lods
adc
js
cmpsb
pop
inc
loope
jmp
adc
fidivs
sbb
cmp
add
fdivrs
or
sbb
cmpsl
or
out
cmpsb
jno
shl
fimull
adc
mov
xchg
pushf
das
sbb
cmp
xchg
jno
jg
pop
mov
outsl
adc
push
lcall
sbb
dec
pop
cmp
mov
hlt
loope
or
rclb
or
or
popa
adc
lcall
addl
cld
lods
and
daa
pop
add
sbb
shrb
xor
jg
fistpll
xor
icebp
inc
push
add
les
mov
pop
lods
cmp
popa
mov
loope
xor
adc
adcl
lock
cmp
jo
out
sub
add
xor
daa
and
rcrb
test
or
add
add
push
or
cld
add
fwait
jmp
cmpsl
adc
into
leave
sub
xchg
jnp
test
ret
mov
addr16
and
adc
inc
pusha
dec
loope
or
stc
movsl
push
testl
xor
add
jp
lret
and
loopne
dec
add
pop
add
add
out
jmp
les
mov
xchg
leave
out
paddb
push
inc
or
scas
fwait
or
pop
mov
xor
pop
cld
push
cmp
pusha
inc
stc
fwait
insb
jns
jnp
loop
loopne
test
inc
pop
iret
cmp
loope
jmp
lret
inc
aad
fdivs
jmp
mov
fcompl
jmp
xor
lret
clc
mov
add
sbb
pop
sub
or
insl
adc
shll
loope
pop
adcl
punpckhwd
or
adc
jae
push
adc
imul
mov
xor
add
imul
ljmp
lods
in
scas
or
lret
ss
fnstcw
outsl
or
nop
test
or
pushf
or
jp
cld
lahf
fwait
rclb
adc
sbb
sub
sub
adc
in
inc
adc
scas
clc
dec
das
out
add
je
lret
mov
mov
cld
sbb
outsb
outsl
push
sbb
sbb
ret
nop
out
jns
loope
push
loope
sub
mov
lds
push
cmpsb
in
popa
xchg
incb
pop
addr16
jle
sbb
dec
shl
imull
and
int
mov
inc
popf
out
push
loope
mov
push
sbb
mov
xor
jnp
push
mov
cld
pushl
mov
xor
sbb
jne
adc
cmpsl
cmpsl
or
or
jbe
int
mov
loope
or
mov
sbb
inc
movsl
sbb
mov
and
jo
nop
mov
push
pop
pop
xchg
scas
mov
sbb
sbb
cmc
xor
or
or
js
insl
and
call
cmpsb
outsb
push
and
cld
lods
lret
call
mov
sbb
add
fimull
or
pop
test
scas
sub
cmc
popa
out
rolb
inc
loope
jmp
imul
sbb
or
pop
pop
cs
mov
fdivrl
xor
jnp
jbe
and
fs
xor
push
ljmp
stc
mov
mov
bound
pop
mov
or
push
cmp
lret
add
leave
dec
cmp
mov
rorb
stos
push
pop
lcall
add
decb
int
fildl
or
add
pop
xor
inc
rcrl
imul
push
loopne
add
rolb
mov
lods
fwait
or
xor
dec
jmp
mov
lock
stos
adc
mov
syscall
add
dec
movsl
add
shl
jo
or
insl
fldt
mov
jns
mov
push
mov
pop
pop
pushf
xor
xor
inc
imul
and
enter
pop
adc
add
or
cmp
fwait
and
mov
xchg
stos
loope
je
pop
inc
dec
pusha
jp
std
push
push
aad
add
add
inc
cmpsl
mov
jns
rclb
inc
loope
jmp
imul
adc
test
bound
sbb
dec
pop
or
shl
mov
shr
or
arpl
scas
movsb
xchg
and
aad
pusha
and
out
add
dec
and
gs
lock
xchg
mov
jns
sub
cld
push
addb
scas
xchg
add
pop
dec
add
sub
cmp
lret
sbb
hlt
arpl
scas
sbb
jp
mov
or
fdivs
inc
pop
in
test
mov
add
mov
cwtl
or
mov
ret
jo
aas
jl
dec
xchg
es
adc
data16
jmp
sbb
lret
je
stc
mov
jnp
jmp
popa
xor
push
pop
add
push
mov
xor
stos
mov
popa
out
or
adc
insb
inc
add
cmp
add
mov
xchg
mov
and
xor
or
jno
sarl
mov
xor
loope
or
push
scas
xor
aas
adc
out
cmp
jmp
imul
popf
push
inc
or
push
mov
inc
sbb
fldt
mov
cmpsl
aad
sahf
pop
mov
push
pusha
push
test
popf
insb
mov
jge
sub
add
or
loop
mov
fstps
adc
add
adc
pop
mov
jo
dec
sub
pop
mov
fsts
daa
cltd
es
jnp
add
add
imul
mov
scas
sub
and
inc
cmpsb
jb
bound
sub
add
pop
push
push
adc
lcall
sbb
sbb
push
mov
or
dec
adc
mov
mov
sbb
lock
pop
jge
mov
outsl
push
sbb
pop
push
mov
and
cmp
cmp
jno
mov
pushf
mov
sbb
call
adc
scas
adc
or
imul
and
xlat
pop
pop
sbb
stc
lcall
pop
cmp
clc
or
pop
adc
shlb
bound
scas
mov
adc
jecxz
sub
lock
int3
mov
jo
movsl
sub
push
add
insl
jno
cld
lret
inc
xchg
subps
les
aaa
cmpb
stos
sbb
mov
les
pop
xchg
or
test
shlb
aaa
mov
adc
enter
mov
fsubs
and
or
cli
push
insl
pop
mov
popa
add
popa
and
js
cmp
or
arpl
nop
pop
adc
add
lret
shlb
mov
pop
inc
and
repz
daa
ret
rcl
stc
inc
mov
fcomip
arpl
shrb
or
push
adc
dec
push
fwait
adc
mov
cwtl
mov
fnstenv
mov
mov
test
mov
orb
fnop
xchg
loope
jmp
mov
sub
mov
pop
jo
or
outsb
jns
outsl
pusha
das
inc
out
sbbl
add
mov
mov
fs
sub
pop
add
or
ficompl
or
shlb
mov
pop
fisubl
add
or
sub
and
add
cltd
aad
das
adc
adc
pop
inc
push
jmp
cmc
or
or
jo
mov
xor
add
cmp
push
lret
inc
in
xor
dec
fcompl
je
cmpsl
jno
adc
mov
lock
dec
dec
daa
into
cmpb
pop
movsb
inc
sbb
jns
mov
scas
test
iret
xchg
sti
pop
jnp
cwtl
stc
xor
xchg
add
or
or
arpl
loope
jns
loopne
mov
int
orl
sub
dec
imul
xor
std
inc
arpl
cli
cmp
sbb
jecxz
xor
jns,pt
jnp
xchg
inc
add
mov
sub
inc
outsl
hlt
xor
inc
jns
mov
jmp
add
sbb
add
bound
and
xor
jmp
loopne
aad
test
cld
outsb
push
movsl
adc
and
mov
inc
scas
cmp
add
arpl
dec
dec
xor
mov
adc
adc
and
jecxz
pop
jno
xor
es
jns
inc
mov
fadds
push
adc
jle
leave
ljmp
dec
dec
mov
call
jmp
and
daa
test
inc
iret
pop
mov
push
gs
negb
dec
mov
int
sub
add
or
cltd
mov
or
lods
adc
add
leave
ja
add
cltd
enter
or
mov
mov
pusha
gs
leave
xor
inc
rorb
out
cld
icebp
sbb
cmp
nop
dec
or
cld
add
shlb
shlb
shl
pop
adc
hlt
cmpsb
xor
dec
inc
sub
cs
jp
stc
shll
fldt
add
jb
or
mov
sbb
mov
jbe
scas
adc
outsl
sti
and
mov
sbb
jns
jnp
xchg
sub
mov
arpl
icebp
inc
inc
mov
fidivrs
or
jnp
push
sbb
dec
out
pop
outsb
cmpsb
pop
pop
sarb
mov
mov
xor
push
pop
inc
dec
fldt
lock
inc
jno
dec
jae
push
jle
in
pop
pop
cmpsb
inc
loope
fcompl
mov
xor
pusha
rcrl
jg
mov
pop
in
aas
dec
stos
cmp
pushf
sub
inc
cmp
or
loope
pop
test
scas
das
adc
dec
jno
sub
mov
ret
or
je
aad
mov
add
cli
mov
mov
movhps
ljmp
jmp
cmp
pop
inc
insb
pop
fst
fdivs
inc
xor
mov
cmp
and
fiaddl
mov
in
arpl
and
cld
xlat
mov
inc
enter
mov
inc
or
clc
movaps
jge
mov
sbb
inc
adc
test
cmpsb
jl
pop
inc
adc
sub
stos
sbb
cltd
push
dec
jns
push
add
test
jnp
flds
in
lods
divl
clc
mov
or
mov
push
or
mov
mov
fchs
adc
xor
popa
orb
dec
and
loope
jmp
adc
pop
or
mov
or
pop
fstpl
adc
adc
stos
push
mov
push
dec
pop
pop
cmp
inc
loope
gs
jno
or
push
shrl
add
inc
stos
add
pop
insl
or
pop
push
sub
mov
rcl
add
lods
lea
scas
gs
push
outsl
adc
dec
add
sub
cmp
ljmp
insl
mov
xlat
js
imul
mov
add
dec
adc
cmp
add
mov
pushf
in
ljmp
or
lcall
mov
aaa
bound
call
nop
pusha
loopne
xor
popa
or
stos
push
add
ja
repnz
pop
fldcw
scas
cmpsb
je
and
or
pop
fwait
pop
addl
sbb
cmpsl
push
aas
or
sbb
shll
and
sub
cmp
or
js
arpl
add
cmp
jno
jns
loope
jmp
jge
int
jl
push
push
loope
pop
cltd
cmp
xor
xor
push
jns
jnp
lahf
pop
std
add
or
popa
imul
pop
inc
stc
fucompp
jge
jns
or
stc
xor
lods
stc
in
mov
adc
enter
mov
sbb
sbb
fwait
push
pop
mov
fisubl
or
cld
dec
scas
flds
mov
shlb
xchg
dec
push
sbb
push
cld
sbb
loope
shlb
xchg
jns
pusha
xor
xchg
adc
stc
mov
pop
pop
inc
or
cld
stos
movsl
jns
dec
or
fldt
stc
sbb
dec
test
mov
enter
mov
jne
or
or
pop
adc
pop
mov
gs
inc
in
jno
movsb
xor
or
push
jge
mov
jns
insl
fidivrs
push
iret
pushf
xchg
scas
add
imul
popa
das
popa
or
cmp
xchg
pop
adc
scas
test
leave
nop
sarb
and
sarb
mov
rorb
pop
punpcklwd
jg
or
loop
pusha
jmp
inc
or
shl
lea
nop
lods
call
add
xor
scas
cltd
cmp
jnp
add
pop
aam
mov
addl
xchg
or
movsl
cmp
xor
arpl
jae
pusha
clc
sbb
mov
lcall
mov
sbb
repz
add
xor
popa
inc
cs
popa
pusha
adc
add
scas
push
pop
push
popa
scas
xchg
inc
adc
ds
mov
pop
mov
jns
inc
inc
clc
and
sarb
sub
inc
sub
sub
adc
jl
les
add
sbb
inc
add
or
xor
or
loopne
clc
pop
jae
inc
dec
mov
mov
sahf
jo
sub
mov
adc
jns
rcrb
cld
icebp
lret
stc
mov
popf
xor
shlb
inc
cmp
rclb
push
inc
scas
out
pop
jbe
xchg
stc
cmp
rorb
and
daa
or
popa
arpl
subl
xor
push
inc
bound
mov
daa
inc
pop
popa
inc
adcb
or
jge
mov
pusha
sbb
gs
ds
and
jge
mov
js
inc
jo
xor
shrl
sahf
or
dec
sub
sbb
mov
inc
stc
fcompl
test
and
or
mov
rcrb
xor
xchg
insl
mov
movsl
inc
test
pop
dec
addl
vmovntps
jns
jnp
stos
xor
pop
add
or
push
sub
iret
sub
dec
mov
lret
jmp
ds
sub
test
pop
sub
mov
cmp
shl
mov
pop
in
mov
mov
adc
shrl
xor
jo
icebp
lds
sub
and
mov
jnp
sub
mov
or
sbb
and
stos
loope
leave
and
sbb
xor
clc
aad
cmp
add
mov
or
mov
test
in
fdivr
sarl
lcall
rolb
pop
lock
jnp
or
movsl
add
pushf
cmovg
or
sub
shll
jmp
repz
fsubl
enter
or
std
scas
adc
xchg
dec
jne
loope
xor
push
jp
daa
or
xchg
jl
jmp
adc
pop
rorl
adc
loopne
enter
xchg
dec
scas
fucomp
and
fldcw
mov
insl
mov
inc
test
test
jae
aas
lcall
aad
ss
fcmovnbe
cmp
movsb
mov
push
fcoms
push
sub
pop
and
test
pop
sub
jg
cld
les
jns
stos
negl
xlat
pop
icebp
in
add
or
jmp
arpl
sbb
aas
sbb
cmp
arpl
js
or
adc
or
rcr
sti
jmp
push
dec
add
push
movsb
push
fbld
int
dec
and
lret
sbb
pop
push
sub
rclb
aaa
repz
xchg
pusha
and
cmc
fists
aam
jo
cvtdq2ps
fisttpl
or
jno
ljmp
fadd
addb
dec
jnp
xlat
pusha
in
inc
mov
nop
nop
int3
pop
stos
je
fimull
sbb
xor
mov
dec
and
and
nop
pop
jnp
mov
aam
stos
xchg
lret
mov
cld
and
inc
test
sbb
cmp
push
pop
add
add
or
fsubrl
addb
test
inc
js
or
adc
mov
aam
sbb
imul
inc
fld1
jns
addr16
push
jae
mov
fbld
les
inc
adc
mov
xor
loope
push
lock
mov
cmp
add
inc
popa
or
push
lods
push
or
ret
adc
adc
mov
test
jg
insb
adc
dec
dec
add
dec
cmpsb
xchg
ret
pop
inc
nop
roll
sbb
xor
scas
test
loop
icebp
inc
cmp
jnp
aas
inc
iret
add
loope
rolb
addr16
pop
and
dec
loop
push
sub
scas
pusha
xor
push
add
jno
cld
mov
insb
jp
rorl
pop
scas
fcomps
or
mov
push
adc
or
xchg
or
mov
lods
jns
mov
adc
mov
in
pop
movb
scas
or
sbb
outsl
in
and
arpl
insl
clc
add
jns
mov
cltd
neg
call
inc
mov
cmp
cmc
test
cmpb
pushf
pushl
pushf
jmp
aad
nop
test
jbe
sub
jl
stos
or
mov
mov
jbe
ret
pop
sub
inc
into
scas
sub
xlat
dec
shr
dec
pop
jp
xchg
lods
cmp
sub
sub
mov
xor
shrl
in
dec
hlt
adc
fs
mov
pop
push
aad
push
mov
scas
nop
jae
xchg
cmp
les
das
adc
mov
call
aas
push
pop
stos
pop
jbe
popl
pusha
jmp
in
cmp
jns
pop
nop
sub
pushf
ret
xor
dec
or
loop
jecxz
mov
inc
mov
fidivl
frstor
scas
int
and
cltd
sub
pop
ret
pop
dec
push
leave
insb
stc
enter
test
pop
add
lret
inc
rcll
rcl
xchg
out
movsb
test
enter
pop
mov
bt
push
mov
cmp
movsbw
lea
setp
push
lea
lahf
call
movl
call
sbb
mov
pop
jbe
adc
mov
repnz
pop
xchg
push
mov
insb
aad
outsb
test
rorl
jmp
mov
in
adc
push
jae
push
push
add
rcl
adc
xor
test
mov
cmp
aam
int
mov
cmp
fisubs
dec
inc
mov
movsb
sub
cmp
std
mov
xor
insl
fisubrl
cmc
jle
cld
imul
jae
xor
push
jmp
stos
pop
jbe
mov
addl
jbe
in
mov
arpl
sbb
mov
pop
adc
push
jmp
cmpsb
and
movsl
cmp
loop
out
cmc
push
jne
and
pop
adc
jg
fs
inc
lahf
inc
ror
push
loop
in
in
lahf
arpl
ljmp
mov
jne
jae
ret
pusha
inc
mov
lock
insb
sub
mov
adc
cmp
mov
pop
jbe
jno
xchg
js
cmpsb
cmp
push
push
popa
sahf
sub
or
pop
or
outsl
jmp
mov
mov
hlt
jns
fiaddl
inc
aaa
stos
pop
rorl
xor
add
mov
in
fld
jnp
mov
jl
in
test
mov
pop
mov
jnp
or
enter
xchg
mov
fsubrs
inc
stos
xchg
pop
jbe
xlat
push
mov
adc
or
je
mov
test
arpl
dec
jb
lahf
movsl
xchg
scas
xchg
loope
inc
mov
mov
xlat
jmp
jno
call
loopne
mov
fidivl
test
fnstsw
inc
mov
cmp
xchg
adc
push
das
xor
xor
push
pop
int3
mov
xchg
xor
xchg
inc
sbb
int
test
inc
and
adc
lea
jmp
add
push
jb
je
inc
imul
pop
jbe
loope
and
popa
clc
fisttps
test
fmulp
dec
push
imul
jno
xchg
hlt
push
adc
pop
out
xorl
mov
popa
cli
je
jbe
test
insb
shl
push
dec
xchg
subb
push
out
or
sbb
fs
mov
ret
sub
sahf
xor
cld
bound
inc
jmp
sub
pushf
and
sbb
push
and
cli
movsb
pop
and
jle
pusha
jmp
cmp
mov
pushf
push
lea
je
pusha
call
lea
jae
jmp
or
sub
cmp
add
mov
cmp
cmpsb
and
aas
dec
mov
pop
lret
or
push
das
mov
repnz
fmuls
push
or
ss
cmpsb
sti
mov
xor
push
out
scas
xor
test
in
cmp
test
jg
xchg
test
lock
mov
in
pop
sub
je
inc
shrb
or
or
jecxz
lock
push
xchg
inc
hlt
loope
jl
movsl
sub
add
or
pop
cmp
jns
idiv
call
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
pop
lods
pop
jbe
sbb
jns
jecxz
or
jp
es
fistl
mov
lret
mov
cmp
mov
call
xor
stc
out
ret
mov
or
clc
push
stos
scas
xorb
push
inc
andnps
in
or
call
pop
rorl
cmp
mov
aad
add
xorb
lret
mov
dec
add
into
jge
iret
jo
xchg
add
cmc
push
xchg
repz
ja
mov
and
call
push
call
mov
jbe
jp
int3
and
mov
cmc
test
push
imul
cmp
sti
jbe
jnp
cmp
loope
stos
dec
mov
fwait
cld
adc
and
mov
js
test
cmpb
sti
sub
and
aad
stos
testb
cld
addr16
movsl
sti
sub
pop
fwait
inc
enter
fidivl
mov
jg
loop
out
mov
jg
loope
arpl
rorl
loope
dec
and
fildll
mov
add
inc
iret
jle
fcomps
mov
xchg
icebp
fsubl
jo
inc
call
aas
push
std
mov
mov
lods
bound
xchg
notb
mull
cwtl
roll
pop
cmc
pop
pop
lea
xchg
out
jne
sbbb
mov
ficomps
sbb
out
lret
and
pushf
fldcw
adc
jmp
sbbb
or
push
add
pop
jbe
jecxz
add
pop
jmp
aam
cld
test
dec
sahf
jbe
lods
cli
fwait
mov
xor
out
dec
lock
or
lahf
add
mov
aaa
inc
data16
rclb
or
es
repnz
mov
xor
stc
outsb
xchg
aas
mov
add
cmpsl
jb
add
cmp
cmpsb
test
adc
js
test
jnp
insb
xor
int3
mov
jbe
and
push
loope
pop
xchg
test
into
mov
fwait
sub
jns
jp
int3
xchg
pop
mov
shr
push
leave
and
clc
outsl
and
xchg
rorb
or
pop
cmp
push
testb
in
jmp
push
push
mov
movsl
shrb
lret
adc
push
jns
push
add
mov
add
scas
rclw
push
lahf
mov
aaa
sbb
add
std
mov
stos
mov
fstl
arpl
and
xchg
xchg
ja
mov
rcrb
sub
ret
and
jb
lods
sbb
push
cld
sbb
loop
jmp
push
sub
call
pusha
lea
je
call
fcmovnbe
xchg
mov
jbe
cmp
imul
sahf
jle
insb
or
fldt
shl
stos
jno
lret
sub
test
imul
ret
mov
in
ret
fldenv
bound
dec
incb
mov
push
out
insb
lret
xchg
mov
sub
cli
test
stos
mov
scas
mov
pushf
cmpl
mov
jbe
test
mov
std
push
movsl
ret
out
insb
ficomps
xchg
fstpt
add
notb
cwtl
push
fisubrs
inc
out
hlt
inc
mov
mov
leave
pop
imulb
xor
addr16
mov
cmp
sbb
inc
adc
or
mov
pushf
add
lods
mov
jmp
stos
fisubrl
jle
rcll
pop
mov
jle
in
and
sbb
call
fwait
dec
dec
adc
outsb
pop
loopne
repnz
and
mov
test
aam
movsb
dec
mov
pop
mov
push
fcoml
xchg
and
aad
aas
idivb
movsl
insl
ret
inc
mov
lods
aaa
xor
repnz
mov
add
push
mov
int3
clc
mov
xchg
mov
mov
sbb
and
and
out
inc
cwtl
or
fcoml
lods
lahf
fs
mov
sub
pop
pop
xor
out
imul
xchg
push
shl
addl
sbb
jae
cmc
bswap
rol
mov
bsr
pushf
mov
adc
shrd
mov
mov
jmp
xchg
mov
jbe
xchg
jp
nop
daa
ret
imul
mov
mov
call
mov
imull
test
fistl
cwtl
mov
outsb
loope
jne
repz
dec
icebp
stos
add
adc
dec
outsl
call
mov
adc
orb
inc
sbb
psllw
mov
mov
xchg
and
pop
push
aas
clc
adc
daa
lods
dec
ss
dec
push
les
fisubrl
jmp
fisubl
aad
jns
cltd
jbe
pop
incb
mov
cmpsl
sbb
shrb
in
aad
arpl
js
pop
adc
je
or
or
mov
cmp
pop
lock
lods
dec
dec
sbb
mov
push
jno
xor
pop
fmull
adc
xor
lock
cmp
cmp
inc
cmp
test
xchg
pusha
and
push
mov
mov
and
mov
cli
adc
inc
and
push
push
pushl
ret
mov
jbe
xchg
cmp
or
mov
inc
pop
xchg
cmpsl
and
inc
test
cltd
fs
int
jmp
jne
jns
or
fldt
push
mov
xlat
out
and
ljmp
xchg
addr16
pop
push
xor
rcll
xor
mov
cmpsl
and
fwait
clc
je
outsl
in
sub
arpl
leave
divl
pop
and
push
cs
dec
loope
outsl
enter
enter
in
cmp
arpl
dec
or
pop
jbe
orl
xlat
mov
loopne
dec
std
mov
rolb
push
leave
jnp
fwait
push
jp
dec
fbstp
push
add
xor
mov
dec
call
lcall
out
loopne
aad
daa
subb
outsb
ror
or
fldenv
mov
xor
add
inc
mov
add
xchg
sbb
enter
in
cwtl
push
sahf
push
call
fstpl
out
jecxz
cmp
fisttpl
fwait
mov
jbe
cmp
cmp
sbb
outsb
adc
incb
jmp
mov
daa
cmpsl
push
enter
and
xchg
mov
inc
lcall
pop
in
enter
fldt
fldt
cmp
ja
daa
cmpsl
jge
int
mov
cmc
cwtl
enter
int3
xchg
out
inc
jmp
movsl
dec
add
loope
imul
cltd
sbb
in
jno
push
xchg
insb
insl
dec
repz
mov
enter
sbb
int3
test
shll
jns
mov
jbe
jl
lcall
faddl
ss
or
pop
pop
xor
pushf
rdtsc
popf
pop
pop
orl
sub
testb
push
adc
pop
jne
add
jmp
sti
cmp
dec
sti
lret
mov
fsubrs
cwtl
ds
out
lahf
dec
fistps
insb
in
xchg
daa
or
cmp
push
cwtl
aad
push
or
jo
insb
sub
jae
adc
xlat
mov
inc
pusha
and
lock
adc
or
test
inc
and
add
call
pop
push
adc
pop
jbe
movsb
setb
nop
add
orb
je
xor
imul
mov
iret
mov
add
xchg
sub
test
dec
xchg
mov
cmp
lahf
out
jns
sti
lahf
pop
sbb
add
std
andb
popa
add
fnstenv
aam
sub
das
orb
mov
jbe
fdivrl
insl
xor
xchg
gs
push
mov
std
cltd
push
pusha
push
push
aam
cld
fnstcw
sub
imul
pop
les
push
push
add
or
aaa
sbb
into
xchg
imul
pop
faddl
mov
popf
sub
outsb
lret
int3
aam
pop
push
stos
enter
jb
dec
out
stos
jae
iret
js
aam
xchg
mov
cmp
mov
test
mov
popa
sub
decl
test
call
jmp
add
or
add
add
add
add
popa
sbb
add
add
jo
sbb
add
add
in
add
add
add
sbb
add
add
add
nopl
add
add
inc
sbb
add
add
or
add
xchg
add
add
addb
add
add
add
add
add
sbb
adcb
mov
sbb
add
sbb
mov
sbb
add
add
add
loope
mov
jbe
dec
incb
shll
mov
jge
add
ja
aas
sub
insb
dec
out
xor
lret
cmpsb
and
sbb
clc
inc
and
test
int
cli
pushf
mov
xor
pop
fdivrs
shrl
adc
adc
xchg
in
jne
lcall
mov
push
icebp
push
adc
add
stos
mov
cmp
inc
or
mov
sbb
inc
pop
sbb
dec
or
pusha
mov
mov
jmp
mov
jbe
mov
xchg
add
mov
lcall
add
pusha
ss
add
outsb
pop
fisubs
jo
ss
leave
loop
sub
inc
sbb
jae
push
mov
dec
mov
push
pop
xor
repz
sub
mov
mov
xchg
adcb
or
jbe
or
pushf
call
push
adc
mov
repnz
hlt
cmpsl
xchg
add
inc
fstpt
sbb
cld
jg
cmpsl
or
lahf
lret
sahf
xor
push
or
leavew
inc
stos
adcb
das
je
dec
and
stos
pop
pop
loope
std
xor
jge
enter
xchg
icebp
cmp
sub
jg
xchg
xor
push
lahf
dec
les
inc
cld
lret
xor
lods
push
imull
push
mov
xor
xchg
add
push
mov
push
adc
in
pop
loop
sbb
cmp
mov
sahf
imull
xchg
gs
fs
je
push
movb
movb
lea
jmp
inc
mov
pop
xor
sbb
pop
mov
mov
push
lods
popa
add
add
aad
and
scas
notl
bound
call
add
mov
push
lods
inc
adc
mov
sbb
pop
mov
xchg
mov
push
lods
cmpsl
inc
pop
hlt
dec
mov
xchg
mov
sub
and
xor
adcl
mov
dec
dec
add
mov
adc
es
inc
push
add
mov
push
popf
cmpsb
xchg
xchg
mov
push
lods
insl
push
mov
mov
jb
sub
push
mov
xchg
mov
push
lods
mov
mov
adc
cs
lds
add
jmp
push
and
outsb
mov
add
mov
jne
add
cld
xchg
push
pop
aad
mov
push
xchg
jp
mov
fnsave
push
fnsave
jne
sub
mov
aad
xchg
fidivl
push
jge
mov
bound
mov
push
sub
dec
aad
mov
xor
xchg
repnz
push
dec
mov
xchg
mov
push
sub
inc
mov
xchg
mov
push
lods
xor
mov
mov
cli
outsb
xor
das
xor
mov
xchg
mov
push
lods
mov
aaa
out
xor
cli
out
dec
sahf
inc
aad
and
adc
jne
sub
jae
sub
push
aad
and
in
stc
inc
mov
xchg
mov
push
lods
push
mov
add
inc
xor
push
pop
mov
inc
push
inc
fcmovnbe
xor
mov
sbb
mov
aam
sbb
jne
dec
aas
xor
fs
in
inc
push
add
mov
push
fstl
mov
adc
je
inc
inc
jne
adc
push
sub
inc
aad
pop
pushf
or
dec
test
mov
pop
sbb
push
pop
adc
jne
jo
xor
sbb
bound
bound
jg
mov
add
push
fisttpll
sub
push
mov
adc
dec
jge
inc
push
add
xor
aas
and
adc
mov
popa
adc
xor
fsubl
or
push
push
xor
sbb
xchg
push
mov
xchg
mov
push
lods
scas
or
loop
push
dec
cltd
jp
sub
insb
and
pushf
jmp
cmp
add
mov
lea
jmp
mov
pushf
mov
jmp
adc
mov
clc
bt
cmc
mov
shl
mov
add
mov
push
clc
sub
jo
add
cmp
shld
call
add
movb
call
add
cmp
add
add
js
pushf
sub
pushf
mov
mov
pusha
movl
lea
jmp
sub
add
or
mov
clc
jmp
mov
pushf
pusha
mov
pusha
call
pusha
pushf
mov
mov
push
call
mov
xor
cmp
rcr
mov
pusha
sub
clc
pusha
jmp
pushf
call
push
pushf
pushf
pushf
popl
push
pusha
pushf
mov
call
rcr
add
setae
mov
pushf
call
pushf
call
pushf
popl
call
mov
mov
call
pusha
add
push
pusha
pushf
lea
jmp
movb
mov
mov
pushf
push
lea
push
push
call
pushl
popl
pushf
pushf
pushf
lea
jmp
cwtl
mov
call
call
push
mov
jmp
cmc
call
pushl
movb
pushf
popl
call
pushl
mov
mov
movw
mov
pusha
pushf
pusha
movw
mov
mov
call
sub
bt
pusha
sub
pusha
movb
pushl
not
pushf
push
inc
bt
stc
cmc
neg
cmp
cmc
sub
test
pushf
cmc
mov
stc
mov
clc
cmc
sub
call
test
rcr
add
seta
call
mov
push
mov
push
call
pushl
popl
push
pushf
pushf
lea
jmp
lea
ja
mov
pushf
mov
movb
movl
lea
jmp
std
call
mov
pushl
mov
mov
jmp
call
lea
js
push
push
jmp
jmp
ror
rcr
xor
mov
cmp
stc
sub
bt
call
mov
lea
ja
shl
mov
btc
jmp
pushf
popl
pushl
jmp
movl
pushl
popl
pushf
lea
jmp
push
mov
pushl
call
movb
mov
call
stc
rol
test
call
push
pushf
pushl
popl
pushf
lea
jmp
push
pushf
mov
jmp
call
push
pushf
popl
pusha
jmp
push
call
cmc
add
call
push
lea
je
cmc
test
cmp
push
xor
stc
xchg
cmc
mov
cmc
bt
jmp
shr
mov
movl
cmc
pusha
sub
jmp
pushf
lea
jns
push
pushf
mov
mov
pusha
pushf
popl
pusha
pushf
mov
movb
mov
pushl
push
mov
lea
push
push
pushl
popl
pushf
lea
jmp
pushl
jmp
push
pushl
mov
movb
movb
pushf
pusha
mov
pushf
call
call
mov
pusha
movb
clc
not
cmc
not
push
sub
bt
push
clc
push
and
pushf
pushf
movl
mov
lea
jp
pushf
call
mov
jmp
mov
call
sub
pushf
call
pusha
mov
pushf
push
pushf
popl
call
not
push
pushf
pusha
lahf
bswap
mov
jmp
push
pushl
mov
movb
mov
mov
mov
pushf
pushf
mov
call
sub
jmp
push
js
mov
xchg
or
mov
lea
mov
jo
mov
xchg
or
mov
xchg
or
mov
sahf
or
mov
lahf
or
mov
mov
mov
mov
mov
mov
mov
test
mov
xchg
or
mov
jo
mov
lea
mov
jo
mov
jo
mov
cltd
or
mov
jo
mov
nop
or
mov
mov
mov
mov
mov
xchg
or
mov
xchg
or
mov
xchg
mov
jp
mov
xchg
or
mov
lahf
or
mov
js
mov
xchg
or
mov
orl
loopne
or
mov
xchg
or
mov
xchg
or
mov
mov
mov
mov
mov
mov
mov
orl
mov
jp
mov
xchg
or
mov
jo
mov
jp
mov
xchg
or
mov
mov
mov
lea
mov
js
mov
jp
mov
xchg
or
mov
mov
mov
lea
mov
xchg
or
mov
ja
mov
orb
jno
or
pop
xchg
mov
mov
mov
lea
mov
mov
mov
orl
das
xchg
or
mov
jo
mov
orb
jno
or
xchg
cltd
or
mov
xchg
or
mov
js
mov
orb
jno
or
movsl
cwtl
or
mov
lea
mov
sahf
or
mov
mov
mov
test
mov
cltd
or
mov
mov
mov
mov
mov
sahf
or
mov
mov
mov
mov
mov
xchg
or
mov
sahf
or
mov
test
mov
xchg
or
mov
or
mov
nop
or
mov
mov
mov
orl
adc
or
mov
xchg
or
mov
test
mov
test
mov
or
mov
sahf
or
mov
test
mov
jno
mov
lea
mov
jp
mov
js
mov
test
mov
jp
mov
js
mov
mov
mov
test
mov
xchg
or
mov
xchg
or
mov
xchg
or
mov
test
mov
mov
mov
mov
mov
js
mov
xchg
or
mov
nop
or
mov
cltd
or
mov
cwtl
or
mov
test
mov
lahf
or
mov
cltd
or
mov
or
mov
mov
mov
xchg
or
mov
test
mov
jns
mov
cltd
or
mov
orl
sbb
or
int3
nop
or
mov
cltd
or
mov
xchg
mov
cltd
or
mov
pushf
or
mov
mov
mov
nop
or
mov
xchg
or
mov
jo
mov
jo
mov
jno
mov
test
mov
cwtl
or
mov
nop
or
mov
cltd
or
mov
cwtl
or
mov
js
mov
sar
mov
sub
bt
test
cmc
cmc
shl
pushf
push
pushf
mov
jmp
pushf
popl
call
mov
call
bt
movzww
call
pushf
call
neg
lahf
mov
jmp
mov
push
push
pushl
lea
jmp
jmp
jmp
pushf
xor
cmc
xchg
clc
add
cmc
stc
lea
clc
test
cwtl
push
stc
pushf
jmp
movb
pushf
popl
pushf
jmp
bt
shr
call
pushf
jmp
bt
add
movb
cmc
not
cmc
cmp
sub
clc
mov
cmc
sub
call
ror
add
neg
sub
movzbl
shrd
pusha
or
sub
call
mov
movw
call
shl
aas
rcl
mov
pushf
shl
bswap
shl
mov
bt
push
bt
add
pusha
pushf
push
push
mov
push
pushf
lea
jmp
pushf
call
mov
jmp
pushf
pusha
mov
pusha
mov
pushf
jmp
push
xchg
pusha
lea
jne
pusha
movl
call
movb
mov
call
jmp
pushl
popl
push
pushf
pushf
push
lea
jmp
mov
push
push
add
pushf
pusha
pushl
pushf
mov
movb
push
pushf
lea
jmp
pushf
call
sar
xor
btr
movzww
push
add
call
lea
je
stc
stc
jmp
mov
movl
movw
call
jmp
call
jmp
bsf
cmc
sub
shl
xor
btc
push
bsf
neg
mov
inc
bsf
not
not
and
pushf
mov
bt
push
stc
add
pusha
pushf
call
pusha
push
cmc
clc
pushl
popl
cmc
clc
add
pushf
pushl
popf
pushf
pushf
lea
jmp
call
sub
jl
or
jmp
mov
call
push
cwtl
mov
pusha
mov
mov
jmp
call
pushl
movb
lea
jo
pushf
jmp
rol
test
movb
clc
bt
xor
pusha
xchg
cmc
clc
pushl
call
xchg
movsbw
push
push
mov
pusha
cld
lea
jno
pushf
rep
neg
sar
dec
shr
mov
xor
btr
shl
mov
clc
pushl
popf
pushf
lea
jmp
mov
pusha
movb
pushf
mov
lea
jmp
pushl
popl
pushf
lea
jmp
mov
mov
call
mov
test
test
jmp
mov
movb
pusha
pushf
lea
jmp
pushf
mov
pusha
pushl
popl
pusha
pushl
pushl
mov
lea
jmp
call
movl
sub
stc
test
mov
pusha
cmp
bt
add
push
mov
pushf
mov
lea
jmp
mov
call
movb
movw
mov
mov
pushl
lea
push
pushf
call
push
not
jmp
jmp
pushl
popl
pushf
pushf
mov
lea
jmp
shld
dec
mov
shrd
bts
shld
sub
mov
push
test
call
pushf
movb
pusha
rep
dec
cmc
mov
inc
mov
clc
cmc
std
pushl
popf
pushl
lea
jmp
bswap
bswap
mov
push
push
mov
lea
pushf
jmp
jmp
add
bts
mov
xchg
mov
clc
mov
push
call
jmp
call
call
bsf
movzbl
bswap
mov
pushf
mov
pushl
sub
pusha
call
push
pushf
mov
mov
movl
lea
push
push
movb
pushf
pushl
popl
movb
pusha
lea
jmp
clc
cmp
add
cmp
shrd
jmp
pushf
popl
call
lea
jl
push
mov
movb
pushf
lea
jmp
push
jmp
jmp
xchg
mov
mov
bswap
lea
std
jmp
call
jmp
push
mov
mov
mov
pushl
push
pushf
lea
jmp
mov
jmp
pushf
pushl
mov
pusha
pushf
movb
pushf
lea
jmp
mov
pushf
push
pushf
mov
jmp
pushl
mov
jmp
call
pushf
pushf
popl
call
lea
jne
test
xor
jmp
mov
jmp
mov
pushf
jmp
shr
jmp
das
bsr
mov
pushf
bt
stc
bt
sub
push
inc
movb
cmc
pusha
lea
js
not
clc
pusha
pushf
stc
rol
push
pushf
pushl
pushf
sub
bt
add
pushf
mov
sub
push
call
stc
cmp
xor
jmp
push
mov
jmp
call
call
mov
push
jmp
mov
pushl
clc
pushl
add
pushf
mov
pushf
pushf
lea
jmp
shr
pusha
pushf
bt
or
jmp
shrd
sub
btc
pushf
mov
test
cmc
mov
cmp
stc
pusha
add
pushf
call
mov
pushf
mov
push
pushl
ret
mov
push
lea
jmp
pushl
lea
push
call
mov
pushf
pushl
call
pusha
mov
call
push
mov
pushf
jmp
cmc
pusha
sub
pushf
div
mov
mov
push
mov
movb
pushf
popl
call
mov
jmp
mov
pushf
pushf
lea
push
jmp
jmp
mov
pushl
popl
push
mov
movl
mov
lea
jmp
mov
pusha
pushf
mov
pushf
mov
jmp
push
mov
pushf
mov
movw
mov
jmp
pusha
mov
pushf
pushl
ret
movw
pushf
popl
movb
pushf
pushl
popl
push
pushf
push
pushf
lea
jmp
mov
call
mov
lea
jnp
pusha
mov
call
pushf
mov
jmp
pusha
sub
jmp
sub
jmp
pushf
popl
push
mov
lea
jge
push
mov
push
call
pushl
pusha
mov
pusha
push
jmp
ror
not
rcr
bsr
bsf
neg
and
sub
neg
sub
test
ror
jmp
push
lea
push
push
call
pushf
mov
pushl
popl
pushf
lea
jmp
jmp
pushf
pushf
call
mov
pusha
mov
jmp
xor
call
not
mov
jmp
call
pushf
mov
pushl
pushf
pushl
ret
mov
pushf
movw
jmp
stc
test
pushl
add
pushf
pushf
pusha
movb
lea
jmp
pushl
pusha
pushf
push
lea
jmp
pushf
push
pushf
mov
call
and
not
das
mov
bt
test
pusha
add
pusha
pushf
popl
call
pushl
popl
mov
pushf
pusha
lea
jmp
xchg
mov
push
pushf
movl
call
mov
mov
push
push
push
lea
push
call
mov
mov
call
mov
call
lea
push
push
jmp
shld
movw
pushf
mov
pushf
push
movb
jmp
pushl
popl
push
pusha
lea
jmp
bswap
dec
xor
pushf
xor
pop
bts
neg
pushf
pushf
push
pusha
inc
btr
setb
neg
rol
and
rol
mov
movb
bt
call
pusha
pushf
lea
push
jmp
mov
pushl
mov
call
pushf
pushf
push
mov
call
movb
mov
pushf
popl
movb
pushf
pushf
pushf
pushl
popl
pushf
push
pushl
mov
lea
jmp
cmp
call
pusha
call
movw
mov
call
ror
mov
aam
xchg
stc
movsbl
pop
pushf
movzbw
mov
mov
shrd
mov
daa
cld
aam
mov
add
mov
xor
inc
lea
pushl
popf
not
movzbw
mov
not
pop
bswap
rdtsc
mov
movzbw
xchg
movzbw
mov
mov
sete
call
pushf
mov
push
pushf
lea
push
push
pushf
pushl
popl
pusha
lea
jmp
mov
mov
pushf
lea
jmp
call
lea
push
pushf
pushl
popl
pusha
mov
pusha
movb
lea
jmp
call
setno
lea
mov
call
pushf
movw
mov
jmp
pushf
mov
lea
push
pushf
jmp
pushl
pushf
sub
cmp
stc
mov
shr
pushf
mov
push
mov
pushf
popl
call
cmpl
mov
mov
pushf
call
mov
jmp
pushf
popl
pusha
mov
jmp
cmp
or
bsf
movzbl
adc
movzbw
pushf
bts
lea
adc
sub
stc
sub
not
pusha
sub
bsr
call
pushf
cwtl
bt
cmc
test
lea
je
sub
jmp
das
aas
push
mov
test
cmc
movb
test
sub
pushf
pusha
mov
movl
movb
lea
jmp
call
inc
call
pushf
mov
not
movsbl
pop
call
jmp
mov
movw
mov
movw
lea
jmp
pushf
pushf
cltd
mov
shrd
mov
pusha
clc
setl
mov
cmc
call
push
push
pushf
popl
call
call
call
call
lea
pusha
push
mov
push
mov
lea
jmp
call
cmc
adc
rcl
mov
sar
xor
pusha
add
bt
sub
not
bsr
sub
sub
lea
xor
pushf
shrd
mov
pushf
clc
clc
cmc
shl
jmp
clc
mov
call
mov
pushf
pushl
pusha
pushf
popl
movw
push
pushl
popl
pushl
push
pushf
pushf
lea
jmp
mov
clc
test
add
pushf
call
mov
pushf
mov
mov
lea
jmp
pusha
pusha
mov
movb
mov
jmp
mov
rol
clc
xor
stc
push
call
sbb
add
movb
mov
pushf
jmp
call
inc
seto
mov
add
add
cmc
shr
mov
pusha
pushf
jmp
pushl
push
lea
jmp
lahf
cltd
cltd
rol
mov
add
rcl
not
mov
stc
test
test
not
bt
test
bt
not
stc
cmc
and
call
call
mov
pushf
jmp
mov
pusha
mov
push
mov
jmp
mov
mov
pushf
popl
call
pushf
pusha
pushl
popl
mov
mov
movb
pushf
lea
jmp
sbb
mov
rcl
rcr
mov
cmc
clc
stc
cmp
add
jnp
pushf
mov
push
push
movw
pusha
lea
jmp
xadd
btc
mov
clc
call
pusha
jmp
jmp
xor
mov
stc
clc
cmp
add
mov
call
call
push
pusha
pushf
popl
pushl
mov
movb
pushl
popl
push
mov
pushf
mov
lea
jmp
jmp
pushf
push
mov
jmp
lea
push
pusha
pushl
popl
push
lea
jmp
cmc
pusha
not
bt
cmc
call
push
pusha
mov
pushl
call
not
inc
setae
sub
rcl
movsbl
lea
movzbl
test
call
or
pushf
rol
mov
cmp
push
jmp
sub
pushf
mov
movzbw
pushf
lea
push
bswap
mov
jmp
pushl
popl
pushf
push
movl
lea
jmp
pusha
movb
mov
pushf
pushf
lea
jmp
mov
movb
jmp
mov
pusha
mov
call
pusha
call
push
pushf
pushf
mov
pushf
pushl
movb
pushf
lea
jmp
jmp
lea
push
push
pushl
popl
pusha
lea
jmp
pushl
popl
push
movb
mov
push
lea
jmp
mov
pushf
movb
pushf
pushf
mov
pushf
call
call
lea
sbb
mov
call
pushf
mov
push
pushl
call
mov
push
mov
pushf
pushf
lea
push
pusha
jmp
push
call
jmp
jmp
pusha
mov
pushf
pushl
mov
pusha
mov
call
das
shl
lahf
aam
rdtsc
test
jmp
pushf
popl
mov
mov
pushl
popl
mov
mov
lea
jmp
pushl
mov
pushf
push
mov
jmp
jmp
pushl
mov
mov
call
pushf
call
decl
pushf
lea
jne
pusha
call
jmp
xor
push
mov
bt
cmc
cmc
clc
sub
mov
movb
mov
mov
lea
jmp
call
rdtsc
not
xchg
bswap
mov
pushf
mov
movb
pushl
divl
pusha
call
push
lea
cpuid
stc
cmc
cmc
stc
sub
call
mov
call
pushf
pushl
popl
pushl
pushf
pushf
pushf
lea
jmp
rol
shr
shl
movzbl
pusha
sub
clc
bt
clc
push
xor
cmp
stc
pusha
pushl
lea
pushf
call
jmp
mov
mov
mov
mov
movb
push
pushl
ret
pushf
mov
pushf
mov
movb
pushf
pushf
mov
mov
mov
pushf
push
lea
jne
movzbw
and
shrd
test
mov
bt
and
pushf
push
cmp
pushl
pushf
push
lea
jne
jmp
pushf
mov
jmp
mov
pushl
mov
jmp
call
add
add
bt
add
jmp
jmp
mov
jmp
jmp
pushf
sub
pusha
push
pushl
mov
mov
pushl
pushl
pushf
push
lea
jmp
pusha
call
pushf
mov
jmp
call
movw
mov
jmp
jmp
jmp
mov
pusha
jmp
sub
pusha
pushf
clc
and
jmp
mov
jmp
push
xor
btr
mov
or
pusha
xor
test
mov
call
jmp
pushf
popl
call
pusha
clc
stc
sub
jmp
sub
stc
add
call
mov
pusha
mov
pushf
lea
jmp
mov
bt
mov
movw
sub
cmc
shl
jmp
mov
push
pushf
movb
jmp
pushf
popl
call
call
add
aad
mov
mov
clc
add
mov
call
pushl
mov
call
lea
js
pushf
call
mov
pushf
movb
pushf
pushf
lea
jmp
mov
push
lea
jmp
call
mov
call
sar
rol
call
popl
pushf
lea
jmp
mov
call
add
aaa
lea
cmc
stc
pusha
stc
cmp
call
rol
shrd
das
notl
cmc
mov
cmc
stc
jmp
mov
movw
pushf
push
mov
movl
pushf
push
mov
mov
pushf
popl
pushf
mov
call
aam
adc
mov
jmp
mov
jmp
sub
bswap
sub
mov
shl
setae
mov
call
lea
jne
push
test
sub
jmp
jmp
jmp
inc
mov
push
add
mov
mov
call
pushl
popl
pushf
pushl
pusha
lea
jmp
call
pusha
pusha
push
pushf
mov
mov
push
pushf
lea
jmp
call
call
lea
push
push
pushl
popl
pusha
pushf
pushf
movb
lea
jmp
mov
pushl
call
jmp
jmp
call
seta
movzbw
clc
bsr
mov
clc
add
jmp
mov
bt
sub
pusha
add
pushf
jmp
pushf
pushf
pusha
pushf
pushl
popl
push
lea
jmp
movb
jmp
pusha
mov
pushl
lea
jo
push
push
lea
push
jmp
pushl
popl
movb
push
push
lea
jmp
lea
push
call
movw
mov
call
mov
bt
movb
add
movw
movb
mov
lea
jmp
movl
lea
push
pushf
pushl
call
clc
add
pushf
pusha
pushf
pushl
pushf
popl
pushl
call
mov
pushl
pushl
pusha
mov
pushl
pushl
movb
pushf
lea
jmp
pusha
mov
call
cmp
cmc
pushf
or
pushf
jmp
push
push
jmp
mov
pusha
mov
movb
mov
push
movb
pushl
movb
mov
pushf
pushf
popl
jmp
movl
mov
call
push
pushl
popl
movb
push
lea
jmp
mov
call
pusha
movb
mov
mov
pushf
mov
call
jmp
call
pusha
mov
pusha
pushf
popl
pushf
jmp
pushl
pushf
popl
lea
jnp
popl
pushf
pushl
mov
pusha
lea
jmp
push
call
cmc
pusha
xor
movw
test
add
jmp
xorb
mov
push
bswap
pop
pop
pushf
pusha
lea
jmp
mov
pushl
lea
jmp
bt
clc
clc
sub
pushf
pusha
pushf
jmp
pushl
pushf
popl
pushf
push
jmp
jmp
mov
jmp
pusha
pushf
bt
shr
mov
stc
call
stc
cmp
rcl
mov
cmc
jne
pushf
xor
cmc
add
pusha
cmc
pusha
sub
mov
cmc
jmp
jmp
pusha
xor
call
mov
movb
call
mov
pushl
popl
push
push
pusha
pushf
lea
jmp
cmc
cmc
jmp
push
shl
and
sub
mov
stc
lea
jnp
sub
jmp
call
call
pushf
pusha
pushf
mov
pusha
mov
push
call
mov
pushl
pushf
popl
pushf
call
mov
pushf
push
lea
jmp
pushf
mov
shl
call
xadd
test
shl
mov
pushf
sub
rcr
call
mov
mov
pushf
popl
push
pushf
pushf
mov
pushf
call
push
pushf
popl
jmp
sub
pushl
pushl
mov
pusha
lea
jmp
pushf
bt
mul
call
mov
jmp
rol
jmp
pushf
mov
push
mov
pushf
pushf
pushf
popl
pushf
mov
pushl
mov
pushl
mov
mov
push
lea
push
push
pusha
pushf
pushl
popl
push
push
pushf
lea
jmp
pushl
popl
mov
lea
jmp
sub
pusha
xchg
pusha
mov
call
jmp
push
pushf
popl
call
mov
call
stc
sub
pusha
mov
movb
jmp
push
pushf
mov
pusha
mov
movw
lea
jmp
mov
call
sub
mov
mov
pusha
push
pushf
lea
jmp
lea
jl
mov
pushf
lea
jmp
jmp
pushf
popl
push
pushl
popl
movb
movw
lea
jmp
call
push
pusha
mov
pusha
lea
jmp
and
jmp
call
push
mov
call
btc
mov
call
mov
jmp
push
mov
pushf
jmp
call
mov
pushl
push
lea
push
call
push
pushf
mov
push
mov
call
mov
movw
mov
mov
lea
jmp
push
call
mov
movb
jmp
jmp
mov
mov
movl
lea
jmp
pushf
push
mov
pushl
lea
jmp
mov
lea
jmp
pushl
jmp
pushl
pusha
movb
pushl
popl
movb
lea
jmp
movw
mov
pushf
pushl
jmp
pusha
xchg
movsbw
movsbw
mov
mov
xchg
lea
movzbw
mov
pop
mov
xchg
xchg
mov
pop
pushf
popl
rcr
setae
shld
mov
mov
sar
movzbw
xchg
rcr
cmp
btr
rcr
push
or
movzbw
bsf
pushl
bswap
cmp
btc
push
add
neg
mov
xchg
rcl
xchg
shl
neg
movsbw
dec
rcl
cmp
lea
push
neg
rol
xadd
shrd
lea
lea
sar
neg
lea
pusha
sub
bts
mov
bswap
btr
movsbw
neg
mov
push
add
lea
rol
mov
movsbw
sub
clc
push
not
adc
xor
lea
pushf
or
xor
call
mov
jmp
mov
push
pushf
pushf
lea
jmp
jmp
popl
push
lea
jmp
pusha
mov
pushl
push
jmp
pushf
pusha
call
lea
jo
pusha
pushl
popl
push
push
pushf
pushf
lea
jmp
pushf
mov
adc
mov
clc
add
lea
jle
push
mov
pushf
movw
mov
mov
lea
jmp
btr
inc
dec
mov
setl
bsr
rol
xor
bswap
shld
shl
add
bswap
clc
movzbw
push
rol
bsf
xor
movsbw
inc
bt
cmp
xor
shld
bsr
mov
push
movw
add
movl
pusha
movb
mov
mov
movb
lea
jmp
push
mov
push
call
test
pushf
sub
mov
call
push
jmp
lea
bswap
xor
sub
xadd
setg
xadd
lea
ror
cmp
and
and
call
shl
shl
xchg
mov
rol
cmc
mov
pushf
pushf
add
movb
call
push
pushl
push
jmp
mov
pushf
popl
jmp
movb
movw
cmp
add
stc
pushf
clc
call
jmp
jmp
mov
movb
lea
jmp
clc
xor
cmc
clc
cmc
mov
movw
stc
pushl
test
sub
mov
jmp
jmp
mov
call
call
mov
call
cmp
add
call
lea
jg
pusha
mov
pushf
movw
lea
jmp
push
pushl
popl
pusha
lea
jmp
mov
call
pushl
popl
pusha
push
lea
jmp
movb
mov
pushf
pusha
call
clc
das
mov
test
cmc
sub
call
movw
call
mov
call
jmp
clc
sub
pusha
bt
cbtw
cmp
push
cwtl
push
jmp
pusha
movw
jmp
ror
call
push
mov
pushl
mov
call
movb
push
mov
pushl
jmp
call
call
jmp
movsbw
inc
not
sete
shr
sub
test
cmp
ror
movzbl
movw
sbb
pusha
stc
mov
test
test
bt
jmp
call
call
pushf
mov
movb
pushl
mov
pushf
lea
jmp
push
mov
mov
lea
jmp
lea
mov
push
call
pusha
mov
mov
lea
jmp
jmp
pusha
mov
mov
pushf
pushl
mov
lea
jmp
jmp
rol
jmp
pusha
pusha
mov
pushf
pushf
mov
mov
movw
call
mov
pusha
pusha
pushf
pushl
ret
mov
push
jmp
shr
mov
pusha
sub
cmp
xor
push
pushl
cmc
cmc
add
add
js
not
cmc
sub
pushf
stc
cbtw
bt
bt
jmp
lea
push
jmp
pushf
popl
pusha
mov
push
pushl
popl
movb
movb
lea
jmp
lea
push
push
pusha
mov
pushf
pushl
popl
pusha
mov
push
pushf
lea
jmp
