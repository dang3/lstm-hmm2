inc
cs
out
jo
sub
lock
add
in
mov
call
aad
pop
lods
push
adc
xor
or
push
add
fcoml
je
inc
lods
sub
sahf
movsb
sbb
shrb
adc
adc
inc
push
jnp
cmp
push
hlt
mov
mov
or
ret
jle
lock
mov
push
aas
cmp
pop
in
clc
jnp
cmc
insl
add
mov
pop
and
sbb
or
xchg
xor
loope
stos
xchg
in
mov
inc
push
sbb
test
test
arpl
pop
xorl
arpl
push
mov
repnz
outsl
les
nop
lahf
or
pop
xchg
mov
into
outsl
stos
mov
fcmovnb
outsl
fcmovnbe
lahf
adc
rclb
stos
scas
add
xor
fsubrl
add
popa
insb
inc
insb
insb
outsl
arpl
scas
jbe
rcl
sahf
addr16
jb
outsl
push
popf
loopne
out
and
push
pop
dec
popa
lea
jnp
mov
hlt
popl
add
add
leave
jmp
inc
dec
lods
push
clc
dec
pop
outsb
dec
xor
movsb
sbb
lods
and
cmp
fbstp
ss
xchg
adc
mov
xor
push
sbb
cltd
pusha
xchg
inc
xchg
mov
inc
xor
sbb
ret
pop
lret
xor
add
fisubs
xchg
jbe
rol
arpl
mov
mov
dec
mov
lret
shlb
adc
xor
push
scas
sbb
mov
sbb
pushf
lea
jae
push
cmp
jmp
call
pusha
jmp
not
mov
movw
pushf
mov
jmp
pushf
pusha
movb
cmp
or
call
clc
sub
pushl
lea
call
jmp
call
pushf
mov
call
pushf
jmp
shr
call
push
adc
movw
push
pushf
lea
jae
jmp
lea
je
jmp
fiadds
mov
shrb
ljmp
sub
fidivrs
sarl
sarl
movsl
xor
and
dec
movsl
es
test
rdseed
ljmp
or
sbb
out
jecxz
pop
sub
aam
movsl
push
xchg
roll
push
scas
jae
mov
sbb
cltd
vmread
gs
adc
imul
cmp
mov
mov
sbb
jg
sahf
mov
sub
mov
add
lret
or
add
loop
pop
add
add
add
notl
and
add
adc
pop
add
add
add
add
add
pusha
sub
cmp
stc
call
cli
lret
mov
test
xchg
iret
mov
pusha
in
movsl
dec
lcall
fisubrl
push
pop
pushf
out
rorb
lods
push
add
or
stos
fwait
sub
adc
ffreep
ja
cmpsb
insb
stos
leave
xchg
cwtl
scas
inc
inc
push
or
test
mov
loope
fs
or
pop
stos
aas
fmuls
mov
aaa
leave
xchg
xorb
sub
pop
sbb
pop
es
nop
mov
negb
aas
fisubl
or
dec
loope
out
cmp
dec
outsl
dec
xchg
or
mov
shlb
cmc
loopne
aad
in
rep
sbbl
pushf
not
movb
dec
pushl
pushl
call
lea
call
pusha
pusha
lea
jae
cmc
call
call
jecxz
push
mov
js
ljmp
pushf
int
inc
xchg
pushf
cmpsl
in
xchg
pop
sahf
sub
sub
mov
cmp
imul
push
daa
movsb
push
orb
xor
ja
int
cmpl
jae
mov
jecxz
orb
fcmovnu
sbb
shl
mov
fprem1
xchg
push
lea
pop
mov
les
in
ja
sbb
adc
mov
popf
cmp
xchg
into
mov
sahf
lea
scas
fucom
and
test
xor
dec
test
cwtl
and
mov
es
inc
aad
into
mov
xor
or
jg
aam
sbb
cwtl
in
mov
dec
inc
cltd
mov
je
jnp
xor
adc
dec
repz
cmp
or
arpl
mov
mov
mull
or
out
mov
mov
in
or
pushf
cmp
fistpll
shrb
data16
inc
in
push
inc
jno
test
and
sbb
or
push
cltd
xor
add
bt
mov
cmp
call
mov
pusha
lea
jne
cwtl
pushf
not
movb
jmp
stc
cmp
pushf
test
pusha
lea
je
bt
push
jmp
stc
bt
ror
jmp
std
ds
aam
push
pop
inc
pop
jne
nop
scas
add
lods
sarl
test
push
and
ljmp
dec
sub
xor
jns
int
out
or
mov
cli
sti
mov
mov
cmp
mov
pop
clc
jge
push
cmp
xlat
sbb
inc
cmp
stos
ret
pusha
in
dec
les
jbe
mov
add
enter
enter
push
mov
scas
cltd
out
add
stos
cmc
out
fstl
arpl
out
sarb
cmpsl
cmc
sbb
inc
xor
int3
scas
mov
cli
outsl
xchg
mov
mov
lds
sbb
adc
sahf
xchg
sbb
sub
js
outsb
rolb
ja
mov
loopne
add
and
inc
loop
adc
lea
ja
call
mov
push
pushf
pushf
lea
jmp
call
pusha
lea
jae
not
mov
push
call
ror
mov
call
jmp
pushl
adc
mov
call
pushl
call
pusha
pusha
call
setp
lea
pusha
pop
pop
movzwl
pop
push
bswap
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
mov
lods
pusha
mov
mov
in
sub
inc
clc
xchg
mov
adc
stos
int3
fistl
inc
fbld
pushf
ja
cmp
js
mov
sub
sub
std
jo
sarl
out
addr16
test
add
or
sub
mov
popf
cmc
push
jbe
xchg
ret
adc
xchg
imul
lahf
pop
sbb
aam
aaa
mov
aaa
mov
mov
xchg
repz
xor
in
or
ja
push
popf
js
dec
pushl
setnp
not
jmp
push
and
mov
daa
mov
mov
aaa
js
loopne
lds
mov
pop
mov
cmpsl
cltd
xchg
sub
jmp
ss
xchg
mov
dec
pop
mov
lock
push
push
fwait
call
mov
mov
lret
add
sbb
loopne
mov
jge
pop
ret
push
mov
and
xchg
lret
ds
sub
loopne
xor
cmp
js
lret
cmpsb
shrl
sub
xor
iret
inc
jmp
xchg
iret
push
jne
cmpsb
mov
fldl
adc
cld
out
shl
add
shrb
test
sub
fidivrs
lea
stc
or
in
adc
sahf
fs
and
pop
insb
test
nop
jecxz
mov
test
cld
ljmp
add
filds
push
in
or
mov
xor
movsl
mov
inc
xor
fstpl
lahf
jge
sbb
clc
rorb
push
cmp
sbb
jnp
push
nop
push
xchg
shrl
inc
mov
bound
pop
push
and
mov
out
push
es
mov
movsb
cmp
aam
mov
xor
mov
add
add
mov
adc
mov
add
fcoml
mov
scas
pushf
xchg
cli
adc
or
in
lret
rcll
sti
xchg
cmp
scas
pop
jg
insl
dec
mov
pushl
xchg
or
and
lret
pop
and
call
in
fstpt
les
outsb
xor
es
push
mov
gs
pop
or
loopne
pop
push
subb
add
xchg
cmp
adc
stos
jmpw
xchg
jo
or
or
mov
popa
xchg
aad
xchg
clc
and
shll
in
add
inc
pushf
inc
pusha
pushf
lea
jmp
pushf
sub
clc
call
xor
lea
call
mov
inc
jmp
and
stc
jmp
lea
jae
call
add
stc
pusha
mov
cmp
pusha
bt
test
push
call
jmp
mov
popf
mov
add
hlt
insl
mov
push
sti
loope
in
arpl
lds
push
testb
fldenv
add
icebp
sbb
fstpl
pop
in
inc
popf
lods
lea
testb
mov
adc
sub
sub
mov
pop
ret
lods
shlb
dec
shlb
push
xor
shll
inc
inc
push
xor
pop
subb
inc
insb
xchg
mov
call
movl
pushl
mov
lea
jmp
jmp
call
jmp
popa
and
mov
andb
movsb
fdivl
mov
or
addr16
fistps
cs
aas
adc
dec
sbb
cmp
imul
shl
pop
das
jae
sbb
enter
mov
pop
les
push
fnsave
pop
dec
leave
pop
or
and
fmul
test
leave
sbb
or
mov
mov
xorb
and
popa
sbb
les
imul
mov
jmp
mov
mov
call
jp
lds
out
inc
xor
shll
jno
pusha
mov
call
call
pushl
mov
mov
lea
rcl
mov
xor
btr
mov
add
sub
shrd
rcr
shr
clc
mov
clc
mov
bswap
add
jmp
pusha
pushf
pusha
movl
mov
push
movl
pushl
pushf
mov
lea
jmp
lea
jne
rol
pushf
btc
pop
mov
bt
cmp
cmp
bt
add
pushf
bt
jmp
jmp
adc
adc
cmpsb
test
outsb
adc
xchg
jae
and
fs
push
dec
or
lds
push
jl
xchg
cmp
push
mov
inc
es
fidivl
or
gs
cmpsl
pop
out
xorl
out
and
int
push
xor
aas
lods
pop
xchg
mov
inc
or
pop
test
adc
xchg
mov
xchg
xchg
mov
xchg
mov
lds
push
es
adc
pop
mov
cmp
nop
addr16
cmp
push
nop
int
adc
call
popa
mov
pushf
dec
jb
inc
fbld
popf
and
xlat
clc
push
aas
lds
or
imulb
pop
stos
sub
pusha
or
dec
bnd
and
inc
in
cmc
jle
insl
push
xchg
mull
fnsave
or
inc
hlt
mov
pop
lea
imul
lret
xchg
or
sbb
loope
movsl
mov
popf
mov
push
mov
xchg
ss
cmp
insb
incl
rcrl
and
or
xlat
pop
xorb
sub
xor
xchg
mov
jmp
add
pop
sub
pop
fdivl
dec
fsub
pop
aad
mov
and
fwait
push
dec
cmpsb
stos
js
xlat
cmp
repnz
jmp
xchg
and
mov
sbb
cmovne
aaa
fidivl
cmp
das
aam
aad
pop
popf
lods
fs
outsl
lcall
jne
sub
xor
scas
ljmp
xor
jb
pop
cmp
jno
inc
or
jp
out
cmc
or
rcll
fbld
and
pop
jg
icebp
in
inc
hlt
pop
in
stos
push
imul
sbb
sub
sbb
faddp
add
xchg
push
pop
ret
jno
push
pushf
movw
movl
pusha
pushl
pushf
lea
jmp
call
mov
adc
call
movl
push
mov
mov
pusha
pushl
ret
lea
jbe
rcr
adc
and
sub
call
pushf
mov
pushf
lea
call
push
jmp
bt
movzwl
sub
movzbw
ror
mov
call
ljmp
lock
cmp
pop
daa
jecxz
inc
xchg
jno
xor
je
icebp
test
pop
xor
fcmovbe
mov
js
test
addr16
imul
xlat
std
cmpsb
mov
mov
and
ret
ja
call
add
pop
add
xor
outsb
cmp
push
mov
das
cmpsb
insb
std
xor
cmpsl
pop
ljmp
adc
and
add
fists
jg
enter
sbb
or
mul
insl
sub
xchg
out
in
xchg
jnp
shl
ret
xchg
add
pop
dec
dec
fwait
aas
pop
jns
or
shl
imul
fs
pop
jnp
mov
je
and
add
mov
call
pushf
mov
dec
pushl
not
test
std
bt
pushw
popfw
push
pushf
call
not
pushf
inc
call
jo
fidivl
rclb
pusha
mov
call
shlb
add
jbe
jp
or
repz
add
cs
imul
ja
sub
sbb
or
lock
std
push
out
add
aaa
std
or
aam
and
cmpsl
or
ja
loope
mov
dec
mov
and
repnz
leave
pop
adc
push
enter
fbld
sbb
inc
mov
daa
jecxz
test
mov
cmp
push
out
and
cmp
imul
in
jno
sbb
fcomps
jl
jns
adc
jecxz
in
add
dec
rcrb
in
jle
aas
das
roll
lcall
mov
stc
mov
lret
push
xor
jg
inc
mov
gs
jmp
ror
mov
mov
btc
mov
jge
mov
jmp
cmc
cmp
xchg
bsf
xor
mov
stc
stc
movb
clc
sub
call
pushf
pushf
mov
lea
pushf
pushf
lea
call
push
lea
jge
jae
call
test
bt
sub
call
sub
pusha
repnz
jmp
test
bt
cmc
cmp
push
push
lea
jae
inc
shr
mov
adc
bsf
seto
movzbw
mov
setle
ror
mov
call
xchg
add
jge
in
xor
stos
mov
and
scas
cmp
adc
cmpsl
dec
out
xchg
imul
decb
lret
das
and
mov
xor
lcall
sub
jno
js
mov
jo
or
lret
xor
stos
rcrb
leave
inc
cmc
cmp
cmp
test
pop
lds
inc
cmp
cmp
push
imul
int
or
loope
pushf
loop
das
dec
jae
outsl
ss
dec
jne
xor
loope
pop
mov
push
outsb
or
pop
push
sbb
cmc
sbb
test
inc
push
xor
sub
aad
jl
pop
test
cmpsl
push
jno
cmc
mov
push
inc
xchg
fisttpll
aad
cmp
shrl
jge
popf
or
push
cmpsl
insl
dec
je
xchg
stos
mov
out
pop
enter
mov
mov
or
add
pusha
cmpb
call
rep
mov
pop
pushf
push
pushf
pushl
lea
jmp
add
dec
outsl
arpl
inc
jb
add
sbb
add
xor
push
fsubs
sti
xlat
pop
xor
int
rolb
jge
inc
outsl
push
ret
jbe
sahf
mov
stos
mov
scas
ret
and
std
sbbl
cmpsl
das
jmp
lahf
in
ret
lahf
out
sub
outsl
call
pushf
mov
lea
jno
push
push
call
push
pusha
pushf
lea
jne
cwtl
mov
pusha
pusha
lea
jmp
jmp
lea
jb
push
cmp
call
movl
pushf
pusha
pushf
mov
lea
jmp
cmc
call
lea
jb
clc
jmp
cltd
out
jge
aam
insb
loopne
and
lret
cmp
pop
sub
test
in
test
sub
fisubl
dec
out
push
nop
adc
xor
xor
pop
push
ret
and
cmp
pop
cmp
les
pushf
pop
cmpl
outsb
jl
and
shl
mov
mov
popf
inc
lods
rorl
or
sbb
faddl
push
out
or
es
mov
inc
mov
into
ds
add
pop
fisttpll
xchg
and
pushf
or
inc
mov
inc
or
das
push
lods
les
jo
jbe
sbb
adc
ja
into
fisttps
or
sub
popf
jno
jp
dec
loope
or
in
mov
pop
sub
call
imul
pminsw
xor
push
pushl
ret
xchg
into
sbb
and
cmpsl
lcall
insl
repnz
sub
mov
sbb
or
incb
jge
cmp
dec
jb
enter
mov
popf
addr16
cmpsb
lret
clc
movsb
cmpsb
adc
pop
push
aaa
cli
xchg
subb
dec
setg
in
hlt
popf
lods
outsl
std
or
adc
roll
inc
ret
mov
cwtl
into
add
add
rcrb
adc
mov
xchg
dec
push
rcrl
mov
adc
scas
pop
or
push
mov
mov
dec
sub
aad
add
lea
jmp
iret
loope
lods
aam
push
xchg
jge
lret
mov
xchg
out
push
lea
push
in
in
ret
lret
movsl
pop
dec
ds
in
lret
pop
insl
adc
in
mov
xchg
outsl
addl
mov
jae
clc
xchg
sbb
or
aad
fimuls
adc
add
ret
fs
ja
stc
push
pusha
clc
imul
bt
bt
pushl
pushf
add
mov
push
push
lea
jmp
call
call
pushf
pusha
call
push
mov
jmp
jmp
pusha
pushl
movl
pushf
pushl
push
pushf
lea
jmp
lea
je
call
push
or
pushl
jmp
movw
mov
test
shl
btc
btr
push
aam
shrd
push
adc
aam
neg
inc
mov
pushf
call
add
daa
pop
cmpsl
add
sub
movsb
imul
and
enter
fwait
push
jmp
out
and
xchg
jmp
cmc
pusha
lds
pop
sub
mov
add
iret
movsl
dec
jb
or
cmpsb
in
or
mov
fs
xchg
mov
hlt
xchg
in
rol
xor
jne
ror
shld
and
btc
mov
push
call
call
stc
ror
pusha
call
pusha
sub
mov
lea
jne
pusha
lea
call
pushf
pushl
lea
jmp
dec
mov
sub
aaa
sahf
lock
jge
rcll
popf
inc
jnp
cmp
mov
pop
jmp
sub
cmpsl
mov
popa
or
add
in
popa
or
xchg
dec
ficoml
push
dec
arpl
jl
mov
cld
sti
lock
and
sub
mov
inc
mov
mov
xor
cli
adc
out
in
jae
addr16
imul
jl
jecxz
sub
dec
fcomip
out
data16
adc
inc
mov
inc
scas
dec
jb
sbbl
push
ja
cmc
cmpsl
arpl
aaa
mov
pop
or
cmp
ret
mov
sub
ja
push
cmp
sbbl
cld
out
lods
dec
push
jnp
sbb
mov
pop
mov
or
jns
out
or
sub
push
jecxz
das
fs
testl
push
in
int3
pop
push
inc
das
je
sub
add
mov
stos
cltd
mov
outsl
fisubs
mov
jp
dec
fidivs
add
cmc
popa
dec
push
mov
add
or
lea
cmpsl
pop
fistps
mov
orl
les
cli
push
scas
ret
jge
outsb
stc
sub
push
ss
pop
sbb
cmp
scas
sbb
movsb
ret
sbb
mov
mov
mov
mov
imul
addr16
out
sbb
pop
mov
int3
fadd
into
cmp
outsl
test
xor
mov
push
les
jecxz
and
cmc
adc
int3
popa
lods
inc
mov
push
push
adc
fmull
sub
ljmp
movsb
unpcklps
sbb
inc
mov
xchg
incl
pop
sub
sub
int
pusha
clc
or
jp
sub
cmpsl
fmulp
add
cmp
jmp
add
cmpsl
aam
mov
lods
cwtl
xchg
xor
scas
inc
adc
xlat
dec
aam
lods
lock
push
les
inc
sbb
shll
xor
out
pusha
jae
and
lock
int
or
cmp
pop
cli
adc
sub
fimull
into
fidivl
add
testl
push
leave
pop
sbb
jg
jmp
es
in
dec
cli
fnstcw
cmp
lahf
cwtl
push
ficomps
push
addr16
lcall
sub
jg
mov
cld
xlat
stc
rolb
xchg
mov
mov
adc
and
out
cmp
xorl
in
movsl
xchg
inc
lods
add
xor
mov
inc
rcrb
or
xor
sti
adc
les
leave
int
cmp
push
pusha
movb
lea
jae
cmc
bt
clc
cmc
cmp
pusha
pushf
push
mov
lea
ja
push
inc
movb
inc
pushf
pushf
inc
shr
xchg
das
bsf
aad
neg
mov
cmc
test
sub
mov
call
mov
jmp
pusha
mov
cmpsb
aam
aam
in
pop
adc
dec
add
nop
test
cmc
lahf
and
ret
fnstenv
dec
shll
jno
xchg
icebp
sub
push
insb
lea
jl
mov
outsl
in
xchg
ror
imul
lret
dec
push
shll
in
popf
loope
mov
pusha
jmp
jae
test
pushf
test
pushl
xor
movw
pushf
pusha
lea
call
pushf
lea
jae
pusha
push
lea
jg
mov
pusha
pusha
setno
setg
inc
pushf
mov
lea
pusha
lea
call
push
movb
adc
movl
pusha
call
push
bound
cmpsb
aam
pushf
jo
jb
sar
fsubrp
in
mov
cmp
ljmpw
aas
push
sti
xchg
jb
lret
or
int3
jae
xchg
rolb
and
cs
and
sub
mov
push
jmp
xchg
fimuls
lea
add
and
lods
mov
jmp
push
pusha
lea
ja
push
jmp
call
imul
movb
cmp
test
add
push
lea
jmp
push
lea
je
bswap
bswap
push
jmp
pushf
rep
pusha
mov
push
lea
jmp
pushl
popl
mov
pusha
pushf
pushl
ret
bt
pusha
test
push
push
lea
je
inc
btr
rcr
mov
mov
push
btc
bswap
adc
add
or
adc
bts
bt
mov
call
mov
movl
call
add
add
push
add
push
add
loopne
add
add
add
add
xor
pop
add
add
add
scas
es
aam
dec
xor
pushw
add
xlat
jge
pop
pop
js
sub
cmpb
sti
outsl
and
popf
in
cmc
adc
adc
rolb
jnp
fmuls
cmpsl
test
out
mov
call
hlt
test
mov
pushf
mov
jmp
test
mov
mov
sbb
sahf
xor
movl
jno
cmpsl
or
negb
fs
outsl
add
sub
testl
int
mov
push
jnp
pop
enter
mov
lea
je
test
cmp
pusha
jmp
outsb
test
inc
scas
push
fdiv
inc
xorb
ja
clc
inc
test
scas
add
test
sbb
xlat
into
xchg
mov
dec
rorl
cmpsl
sbb
and
int
out
push
mov
push
inc
ss
das
push
adc
cmpsl
xor
adc
mov
ret
inc
or
mov
cmp
sub
mov
aaa
lahf
xchg
or
mov
jne
cld
ja
clc
xor
inc
inc
push
mov
mov
mov
outsl
xchg
xorl
dec
push
mov
pop
aas
scas
sub
mov
xor
pusha
jnp
ds
lock
out
jns
sub
in
xor
daa
xchg
and
mov
dec
call
dec
out
mov
sub
sub
cmp
xchg
dec
scas
pop
repz
cmp
jbe
lcall
dec
popa
push
xchg
and
pushf
jmp
shld
sub
pusha
sets
ror
shld
shr
movzbl
shld
sar
mov
sub
bsf
add
bt
bts
rcr
add
adc
mov
bt
mov
push
shr
push
test
cmc
clc
cmp
movl
jmp
call
pushf
pushl
call
lods
movl
sub
cmc
call
notl
mulb
lahf
pop
push
cmp
mov
mov
test
xor
loop
or
gs
push
or
xchg
jb
mov
jb
mov
repnz
das
mov
add
bound
cmpsl
int3
push
lahf
adc
cmpsb
adcl
xchg
call
dec
lock
pop
dec
je
xchg
hlt
add
mov
jl
in
jg
add
cmpsb
cs
aad
fldt
out
cli
sti
pop
cmpl
inc
sub
aam
add
and
adc
mov
pop
in
lock
jo
xchg
cmpsb
cs
pop
sbb
cs
fs
call
pop
xchg
std
jg
mov
dec
mov
std
dec
ret
ss
movsl
jle
fiaddl
jb
shll
mov
fidivrl
mov
sub
aas
adc
mov
mov
sbb
dec
out
sahf
in
mov
shr
in
pop
jl
and
cltd
mov
loopne
xchg
stos
cli
sti
jb
mov
aam
dec
ss
xchg
aam
ficoml
pop
sub
push
xchg
lods
and
cmpsb
cmp
cmp
sar
adc
js
fidivl
dec
push
ret
cmp
xchg
test
push
imul
mov
mov
scas
cmp
and
jns
lret
adc
testl
inc
push
int3
mov
stos
mov
xlat
mov
push
lock
lock
push
mov
sbb
sti
and
xchg
movsl
subl
addb
sti
and
fisttpll
mov
push
cmp
sbb
mov
lock
fisttpll
out
lahf
xchg
aas
stos
sti
sarb
test
inc
xor
mov
lea
sbb
push
xchg
sbb
cli
stos
int
jo
and
enter
shlb
stc
add
cmpsl
sub
push
add
lret
fcoml
out
jmp
fiaddl
shlb
jne
mov
push
scas
mov
sbb
jne
mov
lea
je
cmp
test
cmp
call
pushf
jmp
lahf
aam
imul
lcall
adc
ds
sub
pop
outsl
in
es
sub
xchg
test
jno
adc
inc
outsl
adc
aam
jo
mov
sub
fistpll
out
push
inc
jmp
scas
outsl
jb
clc
jl
or
test
add
orb
pop
mov
inc
xchg
jecxz
and
out
sarb
xlat
mov
test
fmuls
cli
and
push
jne
cmpsl
in
outsl
inc
leave
sbb
cmp
cmp
js
lods
cmc
lret
ret
sub
in
ficomps
and
negb
je
jno
mov
and
mov
ss
inc
sbb
cwtl
jne
inc
pusha
loope
out
insl
jmp
mov
sbb
mov
add
rcll
inc
dec
call
or
movsb
jecxz
add
mov
pop
sbb
imul
shll
daa
jg
rcll
xor
add
sahf
pop
or
lods
lock
cld
sahf
xlat
repz
jo
movsl
loope
aaa
add
fsub
push
into
clc
sub
xchg
leave
cvtps2pi
xor
movsl
sbb
jmp
stc
lods
insb
adc
bound
sub
jge
and
jne
xchg
mov
jecxz
add
lahf
out
mov
cmp
enter
pop
pop
test
xchg
fsubs
ficoml
mov
adc
std
inc
lods
sub
nop
iret
dec
inc
aad
sbb
push
test
fimuls
stc
call
inc
test
sub
out
lds
xor
sub
loopne
cmp
out
data16
fistpll
call
dec
lcall
jb
jmp
inc
mov
lea
nop
aaa
inc
cwtl
xchg
and
std
jmp
xor
mov
push
lds
sub
je
xchg
xor
push
sbb
dec
in
out
insb
xchg
dec
daa
jmp
ficoms
mov
mov
andb
cs
dec
and
xchg
mov
leave
push
mov
mov
jge
fcoml
or
rcrl
sbbb
outsb
test
out
xchg
dec
fs
mov
mov
jo,pn
inc
in
stos
cmp
cmp
lret
clc
aas
enter
jp
cs
inc
xchg
cmpsl
sub
movb
dec
mov
lds
push
jl
mov
cmp
bound
jge
fisubs
adc
daa
popa
jge
lahf
jg
in
scas
mov
cmp
adc
push
jl
dec
popa
in
push
movsl
push
jb
out
xchg
pushf
aam
test
ret
xlat
xchg
jmp
lcall
adc
and
push
aad
mov
push
mov
gs
pushf
lods
cmc
sub
pop
addr16
cmp
cmp
xor
arpl
xorl
mov
fdivrl
movsl
mov
and
scas
add
mov
or
pop
and
sub
cmp
or
stos
sub
push
or
cs
test
xor
mov
fdivr
in
mov
push
out
jbe
pop
int
mov
cmp
aam
push
fcomp
pop
aaa
int3
ret
setno
push
dec
mov
fsubs
out
mov
sti
repz
out
cltd
jmp
push
inc
push
aam
int3
andb
and
jno
pop
lods
pusha
jno
pop
mov
les
lea
loope
inc
jg
lods
cmc
cmp
dec
fbstp
cmpsl
sbb
aam
fnsave
int3
sbb
stc
int
shl
out
shll
push
rol
out
aad
sti
push
lock
out
ja
bswap
lea
push
pusha
pushf
movl
pushf
mov
push
pushf
movb
pushl
ret
mov
movzbw
movzwl
movsbw
pop
lea
not
lea
movzbw
jmp
cltd
xchg
les
xchg
xlat
or
xor
jge
pop
test
repnz
pushf
mov
cmp
dec
mov
loope
lahf
sbb
sarl
insb
mov
jo
mov
test
icebp
enter
les
clc
hlt
jnp
dec
fldenv
loopne
fisubl
stos
mov
orb
aam
push
pop
inc
xor
sub
cmc
jnp
repz
sub
adcl
or
cmp
dec
lods
dec
dec
mov
paddusb
mov
movsl
jle
or
repnz
cmpsl
stos
jae
pop
dec
pop
out
sbb
sbb
shlb
or
aam
xor
lret
mov
insl
ss
inc
xchg
and
mov
fdivrl
mov
mov
mov
scas
cwtl
push
jbe
cwtl
arpl
mov
subb
stc
enter
and
orb
mov
jns
or
or
mov
mov
dec
gs
jmp
ds
movw
pop
add
jge
add
pusha
lea
ja
pusha
test
test
pusha
add
bt
stc
clc
stc
or
mov
pushf
lea
je
pusha
cmc
bt
push
cmp
jmp
xchg
or
cltd
aam
lret
xchg
push
inc
cmp
mov
add
test
cmp
mov
mov
and
in
aaa
les
xchg
lahf
inc
clc
mov
xor
data16
loopne
std
mov
jns
cmp
in
jl
rolb
inc
jle
sti
cmp
insl
xchg
out
out
jno
iret
or
sub
jnp
int
fdivl
incb
mov
lods
shlb
dec
xor
mov
jl
sub
sahf
hlt
xchg
cld
rclb
movsb
xchg
cmp
cld
xor
int
movsl
sahf
add
daa
dec
orb
inc
push
lods
scas
lods
les
mov
mov
xorl
cmp
jl
dec
ret
adc
xor
sub
fbld
icebp
sub
call
push
mov
mov
xchg
movsl
outsl
xor
sbb
bound
pushf
or
popa
bound
and
cld
movsb
cmc
pop
xchg
pusha
in
out
outsb
test
jne
data16
icebp
inc
lret
cmp
cmp
and
outsb
addr16
mov
push
lret
mov
sbb
adc
aaa
andl
mov
lret
adc
mov
imul
roll
jne
clc
rorb
xchg
add
mov
cld
cwtl
aam
adc
dec
inc
imul
mov
inc
pop
call
mov
lahf
hlt
loop
cwtl
out
mov
xor
int3
jo
stos
cmp
lock
in
imul
bound
dec
je
xchg
pop
lret
adcl
xchg
sbb
mov
lea
cmpb
sbb
xor
daa
jmp
mov
push
bound
xchg
xchg
pop
jbe
push
out
jns
jecxz
add
dec
ss
xchg
and
popa
xchg
adc
mov
lret
or
sub
out
jne
test
or
lods
or
and
push
fsubl
jb
es
mov
xchg
jl
sbb
lock
xlat
rorl
mov
dec
push
ja
inc
cmp
mov
lahf
outsb
xchg
aam
xor
inc
cld
adc
add
push
inc
pop
rclb
cld
outsb
cmp
shrb
std
dec
ffree
pop
cmp
push
xor
push
sarb
fiadds
lods
es
test
cmp
addr16
xchg
pop
xchg
bound
std
fwait
outsl
adc
sub
xchg
lods
jae
out
daa
push
dec
ret
add
out
adc
pop
mov
lcall
cmpl
stc
faddl
popa
scas
xor
pop
push
mov
adc
scas
push
mov
push
lods
pusha
ror
call
push
bswap
cwtl
lea
jmp
lahf
mov
lea
pusha
movzbw
mov
mov
mov
mov
call
inc
in
xchg
aam
ja
rorb
sub
nop
pop
adc
pop
sahf
xor
adc
mov
std
or
pop
mov
jne
aaa
mov
pop
leave
dec
clc
sub
movl
jno
mov
aam
jge
out
leave
stos
cmp
les
inc
aam
cmp
mov
mov
repz
cmp
xchg
adc
mov
push
lods
leave
fnsave
mov
lds
lret
add
and
sub
cmc
push
scas
jecxz
div
lods
push
sbb
inc
cs
mov
fs
je
clc
cmc
cmp
or
jmp
movzwl
shrd
neg
bsf
mov
stc
add
cmc
bt
push
mov
push
clc
test
pushf
call
jle
pushf
push
lea
jae
cmc
pushf
btc
mov
add
push
mov
movsbw
bt
bswap
bsf
mov
jmp
push
sbb
jle
dec
lcall
dec
mov
sti
int
or
or
or
outsb
outsb
xor
inc
push
jno
add
int3
adc
lahf
xchg
mov
jge
out
add
xor
xchg
cmp
cmp
cmpsb
movl
or
or
sbb
cmc
or
lea
mov
arpl
or
adc
push
fsubrs
and
or
fldl
test
sbbl
sub
icebp
dec
enter
inc
mov
push
sbb
outsb
js
sub
sahf
or
xchg
stos
and
pop
test
jmp
mov
enter
aad
lods
enter
mov
scas
dec
lcall
sub
in
mov
xor
xchg
clc
mov
jbe
mull
or
ret
nop
pop
adc
outsb
sub
jge
data16
jge
popa
lds
cmp
push
aad
mov
xor
inc
popf
faddl
test
mov
std
xchg
mov
jo
sbb
xor
pop
mov
out
loop
lret
xchg
sub
adc
into
rclb
mov
lods
inc
pop
mov
imul
cmp
int
sbb
add
xlat
and
cltd
je
push
in
andb
xor
subl
or
add
js
test
mov
lods
pop
mov
add
sbb
and
push
das
popf
or
int3
fs
bound
mov
fmull
inc
fcoms
cmc
and
and
dec
test
movsb
or
les
xchg
aas
and
sub
mov
enter
leave
je
inc
xchg
std
pop
cmp
dec
jg
jg
clc
and
cmp
inc
fucomip
iret
jns
pop
jae
sub
call
add
js
adc
push
xor
xor
mov
ret
dec
adc
add
sbb
cli
das
in
add
jl
jne
cld
sub
test
push
inc
shl
sbb
subb
sub
xchg
sbb
and
or
pusha
pusha
outsl
and
dec
ja
insl
and
outsb
cmp
pusha
loopne
int3
pop
and
adc
fdivrl
mov
inc
or
xor
and
or
mov
fxch
lods
in
leave
in
test
add
push
and
popf
lods
cld
xor
inc
pushf
out
dec
xchg
ds
push
sub
lods
cmp
dec
jl
sarb
mov
pop
mov
cmp
or
outsb
sub
and
dec
mov
das
bound
scas
sahf
loopne
and
test
mov
and
enter
or
fisttpll
mov
pop
enter
test
xchg
aas
and
lea
ja
out
popa
cmpsl
push
inc
insb
enter
push
pop
pop
in
xchg
cmp
adc
aam
and
sbb
jle
ds
inc
scas
mov
cmp
insb
test
sbb
scas
rolb
and
or
mov
push
sub
dec
fnsave
sbb
and
movups
in
dec
std
or
std
pop
sbb
sar
cmp
jg
add
add
sti
in
cmpl
sub
dec
and
movups
or
sbbl
call
mov
mov
add
mov
frstor
insb
or
inc
inc
pop
pop
insb
xchg
insl
inc
outsb
sbb
sub
sub
lds
sub
push
mov
paddusb
rclb
mov
mov
pop
inc
pop
and
or
in
cmp
lods
inc
scas
test
push
mov
add
dec
addb
xchg
jns
filds
enter
inc
push
test
std
fiaddl
popf
jbe
mov
sbb
adc
xor
sbb
cmp
lods
cltd
sub
out
dec
inc
inc
out
cmp
push
enter
test
mov
inc
in
scas
loop
or
fadds
and
ret
sub
push
ljmp
mov
sbb
popa
cmp
outsl
or
and
inc
sbb
in
or
insb
push
push
dec
int3
daa
inc
mov
mov
or
inc
fsubl
subb
pop
sahf
mov
add
and
int
in
push
push
mov
inc
sahf
and
or
sbbb
sbb
push
inc
sbb
enter
test
ds
enter
popa
and
inc
mov
lock
bound
int
and
test
into
aas
and
pop
and
insl
test
pop
or
clc
jl
fldl
pushf
repz
and
test
in
xchg
outsl
push
inc
dec
xor
mov
inc
dec
inc
jg
out
and
enter
pushf
les
and
cs
jecxz
sti
pushf
scas
das
int
jle
and
inc
lahf
cmp
or
mov
std
insb
es
jl
std
outsl
mov
clc
std
out
sbb
mov
or
adc
inc
stc
iret
std
int3
or
popf
push
mov
in
pusha
mov
xchg
faddp
mov
mov
fucomip
lods
andb
lods
jl
pop
orl
daa
andb
cs
sahf
mov
or
pushf
rcr
sbbb
das
mov
and
inc
ds
dec
cld
fisttpll
adc
pop
sbb
sarb
outsb
fstpl
inc
pop
dec
mov
outsb
ds
mov
pop
add
dec
daa
pop
popf
pushf
inc
mov
and
fbstp
pop
inc
xchg
sahf
sarb
sbb
pushf
cmp
mov
pushf
scas
or
pop
outsl
xchg
scas
int3
pop
sbb
mov
adc
jle
sbb
sbbb
outsl
lds
mov
cwtl
ds
ds
insl
nop
pop
cmp
inc
xor
out
fstps
xchg
pop
inc
or
cmp
inc
jl
jbe
dec
cmp
std
loopne
inc
cmp
fstpl
insb
add
push
jg
bsf
dec
je
or
dec
inc
aas
pop
push
loope
xor
loopne
cmp
pushf
push
sbb
or
lea
or
outsl
adcb
pextrw
pop
mov
les
sbb
sub
dec
mov
sarl
mov
dec
in
pop
arpl
ret
push
rorb
mov
filds
pop
lea
fnstsw
rcrb
subb
and
lret
jl
test
push
pop
mov
test
mov
sub
sbb
or
sub
and
push
rcrl
mov
pushf
outsl
mov
jb
cmp
ds
lods
cmc
cmp
adc
cld
jp
lea
paddsw
add
das
mov
iret
insb
cld
jnp
add
out
sbb
dec
lods
jecxz
scas
dec
sbb
out
xchg
jge
mov
and
je
pop
push
jge
int3
cmp
add
es
stc
xchg
push
clc
jge
scas
js
mov
js
fnstsw
pop
out
cmc
add
js
scas
inc
movsb
insl
out
sub
int
addb
pop
insl
aas
in
mov
outsb
movd
das
xchg
cmp
lock
enter
ss
xchg
hlt
lods
dec
call
insb
sub
push
add
movsb
in
dec
clc
lea
sbb
sub
push
add
pop
dec
sbbb
pushf
std
xchg
pushf
faddl
push
iret
add
or
add
sbb
dec
add
pop
push
mov
dec
mov
or
or
push
fstpl
push
lahf
ds
mov
mov
add
fidivl
mov
xchg
and
add
add
fwait
jle
push
mov
jne
dec
enter
es
xchg
sbb
jle
or
std
movsl
add
xchg
pop
sub
pop
cmpb
jp
popf
insb
cmp
mov
fbstp
or
rorb
add
mov
push
pop
fcmovu
imul
into
jne
push
mov
sbb
sub
sbb
xor
xor
faddl
inc
fmull
dec
fcoml
push
fcompl
pop
fsubl
gs
add
jmp
mov
and
mov
and
leave
or
outsl
gs
fnstcw
loope
in
cs
les
jg
repnz
int3
iret
test
insb
leave
cmp
aaa
sub
sbb
sub
mov
lds
les
pop
pushf
dec
repnz
mov
jle
fisttps
xchg
das
and
add
or
push
sti
mov
add
cmp
popa
aas
repz
jns
ds
into
xchg
popf
add
mov
and
popa
std
xchg
cmp
shrl
test
mov
xlat
adc
dec
mov
out
js
xorl
sub
sub
pusha
cmp
popf
lds
jb
outsl
leave
jne
fnstsw
mov
pop
mov
and
dec
popa
mov
daa
mov
movsl
xchg
sbbl
orb
or
sbb
mov
or
scas
add
mov
and
xchg
cwtl
cld
dec
scas
je
push
cltd
add
dec
cmp
pop
int
cmp
subl
push
jbe
push
aas
dec
mov
insb
sbb
pop
xor
mov
cld
cmpsb
shr
sbb
mov
aas
or
pop
iret
lods
sbb
fimuls
das
lea
cs
dec
xor
mov
dec
cmp
fmuls
adc
and
jo
enter
pop
lods
dec
fisttpll
in
daa
and
rcl
mov
insb
cltd
xchg
jno
adc
test
aad
pop
into
daa
mov
fxch
cld
das
fs
jg
cmpsb
movsl
lea
xor
xchg
loopne
inc
subl
mov
add
and
jbe
mov
adc
in
fimuls
mov
add
mov
or
mov
lock
out
out
popf
cmp
fdivrl
and
rcl
cmp
adc
add
loope
mov
bound
data16
std
jge
dec
dec
lods
dec
insl
push
iret
fsubr
pop
es
andl
xchg
lods
mov
les
out
xchg
aas
push
sub
lock
dec
mov
inc
push
insl
inc
fdivr
xchg
jle
ljmp
ljmp
lahf
cmc
jne
mov
adc
lods
adc
add
add
call
fldt
and
lcall
fildll
xchg
in
sub
cld
sub
stos
pop
add
test
stos
inc
jp
fbstp
insl
and
jl
mov
lret
xor
mov
jl
loopne
int
push
cli
xor
subl
or
mov
in
sub
sub
pop
dec
adc
popf
bound
das
dec
and
fistpll
nop
insb
loope
inc
push
mov
pop
call
test
fisubs
mov
subb
and
jg
loope
jge
mov
leave
lret
test
sbb
test
and
cmp
sub
jl
popa
and
std
inc
addr16
addl
pop
mov
int3
out
mov
or
inc
les
enter
inc
pop
cmp
lds
cltd
pop
bound
cmp
aam
or
cmp
enter
xchg
inc
jecxz
add
sbb
loopne
aam
fcoms
shll
jle
xchg
xor
ds
insb
inc
mov
sbb
xor
xchg
lods
mov
mov
in
movsl
dec
xchg
or
inc
sub
inc
pop
test
jge
and
sbb
adc
hlt
aam
in
mov
mov
xchg
push
and
hlt
les
pushf
push
and
popa
scas
sub
ljmp
lcall
es
popf
push
inc
les
cmp
mov
mov
adc
xchg
xchg
lods
push
mov
test
subb
sbbb
sub
outsb
and
push
lock
in
push
jns
ds
testb
add
sub
jge
incl
in
jnp
shrb
mov
cld
jg
push
lods
cli
sub
dec
xor
push
pop
int
dec
es
out
jle
jne
loopne
fstpt
xor
dec
aam
xor
sub
test
sub
or
pop
movsb
mov
and
dec
jg
dec
jns
inc
push
popa
faddl
sahf
test
sub
imul
sbb
mov
stos
xlat
cmp
rcl
fldl
lahf
lods
cmp
xchg
mov
popf
or
mov
mov
and
inc
cmovne
cmp
add
dec
test
test
es
scas
mov
mov
xorb
fdivs
lods
mov
push
mov
xor
lea
mov
lods
push
sbb
dec
test
loope
std
mov
xchg
and
sbb
mov
scas
in
mov
jle
pop
cmp
jns
mov
roll
dec
jle
add
sar
add
scas
adcb
stc
sbb
shrl
jle
push
adc
sbb
mov
jno
pushf
cmpsl
ds
movsl
push
enter
and
adc
jle
int
sub
int3
aam
and
lea
inc
cmp
imul
movsb
push
test
fsubl
pop
add
add
test
push
in
mov
cmp
jne
cltd
popf
cli
cmp
sub
test
lods
or
lods
xor
inc
sbb
xor
stc
cmp
iret
add
mov
jmp
fs
mov
sub
mov
adc
mov
push
push
mov
addr16
xchg
cmp
mov
sahf
test
add
pushf
mov
pushw
adc
sub
push
test
xchg
cmpsl
aaa
or
shlb
movl
insb
int3
mov
push
mov
cld
pop
sub
pushf
xor
sbb
dec
lret
adc
and
add
mov
insb
aas
out
mov
jge
cmp
test
pop
mov
dec
test
lahf
add
aad
mov
push
fs
push
mov
adc
insl
cmp
ds
xchg
lahf
push
mov
test
push
test
vxorps
sbb
mov
mov
or
jle
pop
movb
or
sub
sub
pop
adc
mov
mov
xchg
mov
js
push
add
adc
xchg
jl
leave
mov
loop
jmp
jnp
fisubrl
pop
push
mov
mov
cmp
sahf
mov
or
jle
inc
jle
je
js
sub
jne
daa
jge
jge
inc
cmp
insl
inc
xchg
xlat
dec
cmpsb
mov
pop
inc
sub
in
pop
cltd
cwtl
movsl
mov
add
cmp
jg
push
mov
mov
inc
rolb
lahf
sbb
or
and
or
test
insb
or
xor
xchg
and
or
fsubrs
sbb
xor
shl
inc
fcompl
mov
and
lods
test
in
mov
flds
in
ds
xchg
int
nop
iret
dec
popf
dec
outsl
cmc
mov
aas
aaa
xor
and
fldl
sbb
sub
testb
lcall
add
mov
xor
xchg
add
arpl
cmc
sub
fimull
es
xor
hlt
mov
scas
lea
inc
pushf
rorl
push
xchg
movsb
inc
data16
pcmpgtd
jmp
or
dec
jne
arpl
jne
xlat
mov
cld
ret
mov
push
cmp
or
popa
insb
sub
cmp
mov
push
decb
jns
sub
lea
mov
lahf
dec
int
cltd
sbb
das
aaa
add
add
popf
mov
les
inc
int3
in
inc
lock
or
loopne
inc
add
pop
push
sub
jno
xchg
in
into
xchg
mov
sub
or
pop
gs
dec
dec
outsb
js
das
inc
popa
fldl
and
mov
or
mov
loopne
out
dec
jmp
test
xchg
aas
dec
mov
mov
jg
movsb
pop
mov
enter
in
lea
or
popa
xchg
outsb
push
test
aas
jl
add
sbb
nop
push
add
xchg
xchg
jmp
xchg
jl
lods
adc
dec
push
outsl
iret
ret
loop
imul
scas
in
or
rcrb
pushf
xchg
sti
scas
es
fs
xchg
cmp
call
push
dec
adc
xor
sub
sbb
push
pop
data16
push
or
sub
jl
cmp
sahf
ss
mov
popf
adc
push
xor
mov
divb
gs
push
std
mov
mov
adc
loop
data16
inc
sbb
lds
lds
outsb
sub
in
inc
dec
sbb
adc
mov
loopne,pt
or
sbb
push
xchg
jno
inc
cs
or
pop
shrl
aaa
sbb
loopne
dec
sbb
jl
fistps
and
mov
sbb
ficomps
mov
xor
sbb
dec
jg
shrl
outsb
pop
insl
in
and
in
cmpsl
cmp
fdivr
int
mov
jecxz
arpl
pusha
pop
lret
int3
xor
sbb
adc
rcrb
rcrl
sbb
mov
dec
pop
pop
dec
daa
inc
pop
das
out
lahf
outsb
sbb
imul
pushf
jg
mov
jge
dec
outsl
ja
movsb
pop
push
das
dec
sbb
cld
or
cmpsb
aas
sub
jge,pt
lret
movsb
add
lea
inc
sbb
and
das
jl
sarl
popa
sbb
dec
mov
mov
jg
aas
jl
xchg
into
fwait
pop
outsb
js
and
outsl
pop
ret
das
bound
popa
aas
dec
out
sbb
lahf
mov
insb
aam
jg
in
xchg
pop
das
xor
sahf
jl
ret
dec
repz
inc
cmpsb
outsb
mov
lahf
mov
xchg
sub
xor
and
jge
pop
ja
roll
popa
push
insb
xchg
sarl
out
sbb
outsl
sbb
mov
add
rol
int
push
ret
scas
aam
sbb
lods
xchg
loopne
cld
and
fcoml
push
addr16
mov
sub
push
xchg
ret
inc
scas
xor
push
cmpl
movsl
pop
sbb
movsb
insb
jl
mov
vsubpd
and
fdiv
push
push
scas
fldl
xchg
jge
shll
and
pusha
sbb
pop
adc
arpl
stos
outsb
fcompl
xchg
mov
andl
dec
scas
sbb
insb
enter
insb
ja
into
sbb
std
xchg
inc
cmp
popf
fadd
xchg
dec
cmp
fadds
push
push
adcl
fdivrl
jge
sahf
aam
jl
sub
xor
mov
push
in
push
dec
dec
add
jg
jge
rcrl
bound
inc
pop
dec
push
test
mov
jl
lods
daa
sahf
inc
aas
aas
pop
and
dec
sbb
les
dec
mov
inc
sub
scas
iret
ficoms
xchg
stos
pop
cmp
out
pop
push
jle,pt
push
inc
pop
fcompl
dec
outsl
mov
push
mov
and
fcompl
movb
ret
shrl
add
insb
adc
sbb
insb
sbb
mov
xor
pop
inc
negl
leave
inc
sbb
mov
sbb
sbb
cld
mov
js
dec
insb
pusha
cmp
inc
sub
push
iret
add
xor
pop
adc
sbb
or
adc
or
lea
xlat
xor
mov
or
in
xor
rcll
and
mov
jg
pop
add
and
jg
js
pushl
xor
or
add
xchg
mov
xor
inc
pop
ficoml
mov
push
mov
pop
lahf
inc
adc
inc
inc
add
or
std
cmpsl
push
adc
sbb
std
movsl
or
fbld
xchg
paddsw
sbb
stc
mov
cli
add
inc
adc
sti
xchg
push
pop
xor
ss
scas
dec
sbb
dec
sub
dec
test
add
inc
and
ds
sbb
or
mov
or
xchg
les
dec
movsl
jmp
adc
xor
stc
sbb
or
stos
popa
imul
mov
adc
push
pop
push
cmc
sbb
es
std
fcompl
ss
stos
test
mov
scas
sbb
push
bound
inc
int
pop
or
add
adc
cli
xlat
sub
fists
std
adc
fstpl
lods
pusha
cmp
xchg
push
mov
sub
adc
sbb
fstpl
push
pop
push
std
insb
in
push
cmpsb
xchg
pop
cmp
xor
inc
and
and
xlat
jne
sub
pop
and
in
mov
jns
or
inc
pop
jp
xor
addl
js
stc
fstps
push
ss
loop
jae
dec
sub
std
xor
scas
loope
stos
div
testl
xor
cmpsb
sbb
dec
sub
xor
aad
inc
or
rcll
jo
adc
dec
sti
mov
adc
pusha
or
jmp
cmpsb
insl
xor
and
xor
dec
and
in
neg
subb
jbe
pop
popf
insb
dec
dec
sub
stos
and
roll
jbe
xchg
or
inc
pushl
sbb
in
xor
ret
xlat
cmp
setg
or
pusha
out
push
push
sub
pusha
and
xor
mov
leave
mov
mov
jmp
mov
pusha
xchg
or
orb
pusha
inc
test
cmp
fs
inc
adc
mov
test
jo
cmovae
test
cwtl
xor
mov
and
pop
and
in
loope
inc
int
sar
and
add
mov
loope
sbb
pop
aas
lds
dec
cmp
dec
pusha
loopne
int
inc
lods
mov
stos
pop
cli
mov
loope
mov
sbb
mov
jp
push
pop
or
sbb
pop
orb
insb
xchg
xor
ds
or
push
sub
push
dec
fsubr
adc
sti
add
xor
sub
xchg
xor
data16
roll
xchg
mov
add
jo
adc
jns
pop
dec
dec
ss
add
call
sbb
dec
dec
pop
push
sub
mov
in
xchg
xor
movsb
or
pop
sti
sbb
pusha
push
hlt
iret
sbb
in
mov
cli
or
sub
fisubl
xorb
dec
and
sbb
add
cmp
xchg
loopne
push
mov
mov
and
mov
mov
sub
mov
lods
lahf
loop
and
sbb
mov
mov
jne
adc
outsb
shr
and
mov
std
xchg
inc
scas
pop
adc
test
cwtl
inc
jp
fadds
sub
jl
sub
pop
pushf
fimull
xchg
pop
and
and
dec
push
in
ret
xchg
cmpsl
mov
loope
mov
insl
or
xchg
add
xor
pusha
int
cmpsl
mulb
es
and
aaa
adcl
dec
aas
std
out
pusha
or
add
stos
shlb
or
sub
mov
cmp
xor
adc
sbb
mov
call
jl
xlat
nop
push
and
sbb
fidivrs
fidivl
jb
xchg
and
in
mov
in
test
xor
jbe
stos
cmp
xchg
fisubrl
out
and
dec
push
ret
test
and
stc
jecxz
pusha
fnstsw
es
icebp
dec
aad
add
xchg
insb
jl
and
and
inc
or
mov
nop
mov
pop
pop
mov
inc
out
adc
xor
mov
jge
push
roll
xchg
and
fcompl
out
cmp
or
jo
dec
cmpsb
inc
pusha
and
sub
inc
adc
testl
stc
jle
or
dec
sub
jp
shr
outsl
test
sub
sub
adc
jg
add
push
les
clc
mov
orl
scas
fcomi
call
pushf
fs
leave
xor
adc
pop
sub
pop
and
sahf
out
daa
jge
leave
add
mov
movsb
stc
mov
outsl
xor
inc
mov
sti
orb
mov
movsb
ja
push
mov
push
xor
in
inc
fisubs
dec
pop
stc
scas
sub
adc
int3
and
cmpsb
dec
mov
xchg
pop
out
xlat
sub
mov
out
jl
push
sub
loope
popf
popa
cmpsb
and
inc
movsb
push
sbb
nop
stc
pminsw
call
push
insl
add
sub
jmp
dec
hlt
ss
dec
sub
jp
lcall
aas
inc
test
jmp
cmp
inc
insl
dec
or
and
int3
mov
push
add
js
cmp
adc
shrl
mov
pop
mov
cmp
and
and
scas
sub
adc
mov
jl
add
cmpsb
push
sti
xor
xlat
ret
repnz
jo
jbe
sbb
std
stos
add
sub
jne
pop
adc
xchg
outsb
pop
int
sbb
pusha
push
scas
shll
fsub
mov
sub
mov
sub
xor
or
mull
inc
mov
hlt
sarl
inc
mov
add
rclb
push
mov
mov
cmp
sbb
adc
ss
shrl
push
test
add
jo
pop
xor
xor
out
xchg
in
xor
jb
pop
mov
fldenv
addr16
push
hlt
mov
and
adc
daa
mov
push
xlat
add
dec
lcall
push
pop
jp
pop
loope
dec
incl
insl
jbe
stos
imul
mov
popf
sub
push
add
ss
jns
shrl
pop
xchg
stos
cltd
xor
popa
add
add
adc
ret
mov
mov
daa
lahf
mov
lods
dec
nop
insb
cmp
sub
or
push
sbb
inc
iret
cmp
push
jne
dec
sub
mov
scas
mov
pop
inc
xor
subb
or
int
daa
add
sbb
mov
adc
subl
loope
or
sub
adc
mov
pusha
les
and
xlat
jbe
ljmp
sub
and
push
add
sbb
dec
mov
and
out
adc
bound
cmp
fldenv
jp
dec
ds
test
ss
push
lahf
xor
arpl
inc
mov
cmpsl
das
dec
fimuls
pop
pop
inc
in
dec
adc
xchg
test
sbb
ficoms
mov
xchg
xchg
pop
jb
jne
sahf
jp
add
mov
pusha
dec
cmpsb
push
mov
jp
nop
adc
rclb
mov
nop
xchg
xor
dec
xor
mov
xchg
mov
popa
jge
lea
jbe
push
jg
outsb
or
adc
mov
incl
lods
sarb
and
xor
imul
mov
fisubl
and
les
push
test
jg
pop
jo
imul
xor
push
lods
jl
nop
pusha
mov
jg
out
cmp
sub
dec
stc
and
xchg
cltd
cmp
mov
les
adc
test
sub
fnstenv
dec
aam
adc
jne
loope
int3
cvttps2pi
daa
test
iret
insl
xor
dec
ss
ja
add
sbb
popa
call
in
mov
adc
cmovp
std
or
test
jp
jl
sub
push
push
or
ds
scas
push
sarl
cmp
addr16
pop
jbe
add
popf
sbb
mov
das
push
clc
dec
inc
sbb
jo
ss
adc
jle
pushl
push
xor
lret
adc
lods
jne
pop
push
inc
push
dec
jle
mov
or
mov
dec
notb
pop
sub
inc
movsl
and
mov
cs
cmpsb
dec
or
in
and
and
inc
push
in
xor
loopne
aam
subb
dec
pop
dec
or
stc
in
es
call
cld
adc
inc
adc
clc
sbbb
pop
and
xchg
and
ds
sub
pop
lret
adc
popf
ja
fsubrl
cwtl
push
loope
jo
xchg
cmc
sar
inc
xor
adc
insl
popl
fdiv
out
jbe
push
leave
stc
fwait
push
mov
call
das
mov
xchg
mov
std
pop
push
or
fistl
cs
aaa
cmp
fistps
jne
rclb
cmp
test
mov
dec
pop
imul
adc
dec
and
orl
adc
xor
repz
push
fcomp
std
pop
rorl
imul
fs
xor
cli
mov
in
mov
add
sub
adc
cwtl
push
mov
cmp
push
out
les
xor
pop
ficoms
repnz
inc
mov
std
notb
push
dec
ret
movb
ds
test
pop
data16
lds
ret
sub
je
imul
pushf
inc
sbb
add
out
push
scas
sub
mov
pusha
jne
push
mov
mov
xlat
dec
nop
rcrb
pop
sbb
pop
outsb
mov
sbb
cmpsb
push
scas
sti
mov
frstor
inc
sbb
and
mov
dec
push
stc
xchg
xor
push
cs
and
cwtl
loope
sub
xor
mov
mov
insl
xor
xchg
fnstsw
or
push
or
std
pop
lods
iret
inc
std
and
xchg
push
adc
pop
pop
or
sub
mov
ja
fmul
fwait
xchg
adc
stc
mov
shl
cmp
mov
jecxz
sbb
dec
dec
std
repz
mov
add
and
and
rep
add
sub
cli
stc
imul
js
add
insb
inc
and
negl
ret
js
scas
call
adc
sbb
adc
pop
or
clc
pop
add
sti
and
stc
sbb
clc
cmp
sbb
cmp
sbb
or
sbb
pop
jecxz
jns
mov
xchg
or
add
sbb
or
lret
mov
sbb
arpl
and
add
xchg
push
push
addb
cmp
mov
ret
push
inc
sbb
push
in
sbb
insb
out
les
cmp
or
stc
xchg
aam
js
jge
sbb
pusha
cmp
push
decb
out
xor
cmp
sbb
mov
mov
std
ret
fildll
jns
sbb
leave
out
test
fistps
cmp
pop
cmp
jl
jo
loopne
adc
mov
push
idivl
sarb
rorb
xchg
cmp
jg
test
mov
pusha
mov
popf
orb
daa
cmp
dec
or
xchg
orb
dec
sbb
test
mov
or
lods
es
mov
arpl
dec
jne
cmp
test
mov
andb
cmp
cmpb
into
cmp
out
sub
and
jl
ds
clc
test
mov
xchg
fsubrp
jg
popa
xchg
cmpl
testl
cmp
push
cmp
in
ret
inc
test
test
sub
cmp
xchg
jle
jbe
test
cmp
es
sbb
and
enter
xchg
or
fwait
or
sub
std
mov
test
stc
sub
add
inc
sbb
cmp
push
or
mov
div
cs
out
cmc
push
add
ret
aas
test
das
pusha
cmp
orb
orl
cmc
out
push
or
hlt
js
cmpsl
clc
cmp
movlhps
insb
stc
jl
cli
sar
clc
mov
filds
das
or
sbb
lea
enter
push
lods
inc
push
cwtl
cmp
in
add
mov
filds
stc
sub
push
xor
ss
cmp
cmp
add
or
add
add
add
fistl
cmp
notl
aad
mov
orb
out
jl
sub
cmp
pop
outsl
divl
repz
dec
sub
cmp
js
test
sbb
cmp
jg
add
xor
icebp
sahf
sahf
cmp
lock
push
clc
mov
jo
xchg
cmp
sbb
jo
push
mov
cmp
push
int
fs
stos
dec
insb
cmp
inc
adc
leave
mov
adc
or
dec
push
cmp
test
clc
jne
push
stc
stc
stc
cmp
movl
lret
xor
out
pushf
std
scas
sub
fmull
dec
fsubl
mov
adc
mov
or
roll
cmp
xor
les
jns
insb
shll
and
mov
push
jg
mov
enter
mov
jo
mov
loopne
inc
sbb
cmp
push
loop
shrl
cld
sub
fcompl
push
fdivrl
arpl
subb
adc
aaa
sbb
in
jns
into
and
xchg
mov
xor
pop
jno
setns
cmp
push
dec
cmpb
cld
dec
aas
dec
sbb
xorl
and
movsb
push
sahf
aaa
cmp
mov
subb
popf
mov
shlb
roll
lret
pusha
ss
pop
aas
outsl
arpl
cmp
adc
outsl
cmp
cwtl
push
push
fisubrs
ror
jl
cs
mov
test
fcoml
pop
pop
inc
fmull
lret
pop
frstor
sarb
sbb
fadds
push
daa
inc
pop
outsb
mov
add
inc
scas
jg
xor
enter
and
es
xchg
ficomps
jecxz
inc
sbb
out
xchg
and
and
mov
lcall
and
bound
lret
and
int3
mov
sbb
mov
jmp
or
sub
or
mov
mov
lods
das
pop
and
and
xchg
sub
cld
int3
mov
sbb
xchg
bound
and
jno
clc
and
enter
lods
add
push
leave
in
mov
sbb
subb
outsl
mov
test
pop
cmpsb
in
inc
dec
sbb
or
sbb
inc
sub
pusha
mov
pushf
push
adc
and
aad
xor
aam
mov
dec
mov
pop
mov
fdiv
arpl
scas
cmpsb
sbb
out
dec
lods
xor
aas
aaa
pop
mov
dec
lea
add
xor
out
fdivrl
fdiv
lcall
bound
add
stos
sbb
insb
pushf
pop
mov
dec
mov
inc
sub
popf
scas
xchg
lea
mov
cld
dec
bound
sahf
cmc
arpl
dec
pop
and
xchg
sbb
mov
sarl
aas
sub
test
mov
aas
and
or
lcall
mov
decl
cltd
mov
popf
je
insl
jno
cmp
je
into
adc
pop
popa
gs
push
imul
xchg
cmp
cmp
cmpb
jl
clc
mov
mov
add
xor
jb
sbb
repnz
push
sub
mov
and
ss
sbb
insb
sbbb
add
ss
adc
shrb
cmp
sbb
add
std
pop
int3
rcl
fmuls
loopne
out
jo
jno
in
dec
lock
or
cmp
rolb
mov
bound
clc
inc
and
mov
scas
cs
lods
and
adc
inc
push
or
fimull
je
js
pop
addb
mulb
pop
pop
cmpsl
fs
and
adc
aas
xor
cmp
inc
dec
dec
and
and
push
jl
loopne
sub
push
pop
or
adc
sbb
movl
or
aam
sbb
and
mov
test
in
negl
xchg
pop
cmp
sbb
jno
cmp
jo
lahf
call
xchg
jbe
es
adcl
data16
aaa
cmp
cmp
adc
jp
xor
ret
lock
or
das
sahf
sub
cld
pop
xchg
dec
cmp
in
inc
mov
out
rorl
push
jge
xor
aam
fsts
push
or
dec
sub
enter
mov
fsubrl
enter
iret
mov
add
xchg
inc
loop
and
pushf
sahf
and
loop
aad
push
out
lret
test
lds
dec
mov
or
xchg
add
sbb
add
mov
sbb
jnp
and
iret
popf
push
insl
test
insl
mov
sbb
fsubl
sub
arpl
daa
inc
inc
lods
lea
sbb
lods
lea
lds
or
sti
cs
lea
mov
mov
inc
dec
sbb
and
iret
lods
popf
insl
sbb
lea
out
mov
sahf
enter
xor
or
cmp
mov
push
daa
dec
dec
xchg
dec
lds
jno
or
popl
lds
fldt
sbb
insl
push
int
aaa
mov
mov
push
outsb
in
pop
xchg
lods
sbb
das
xchg
lods
sbb
out
leave
into
inc
mov
xchg
sub
gs
aas
pop
int
sub
fmul
mov
test
fiadds
lds
pop
andl
cmp
sbb
dec
shr
in
cmp
int
mov
or
fsubrp
cwtl
dec
mov
insl
xchg
in
mov
outsb
insb
outsb
jg
xchg
cmp
js
cmp
dec
push
lea
dec
mov
sub
mov
sub
pop
xor
std
gs
inc
inc
sub
andb
sub
fmull
je
js
and
adc
and
stos
mov
leave
xchg
jae
xor
fmull
cmp
dec
int
sub
test
cltd
dec
rcl
xor
cmp
sti
les
nop
or
pop
add
arpl
pusha
cli
and
jmp
add
fwait
mov
sbb
sub
jecxz
push
and
out
shl
mov
jns
test
mov
pop
scas
and
fisubrs
and
dec
xor
sub
cmp
ficomps
mov
inc
add
lods
cmp
inc
cmp
or
push
sti
inc
jl
sbb
inc
into
mov
jg
into
jns
inc
fbstp
les
rolb
clc
out
icebp
xchg
repz
mov
fcompl
sti
or
xor
add
or
mov
push
fistpl
inc
mov
nop
inc
jg
neg
xchg
mov
js
xor
add
add
add
add
movsb
or
std
insb
repz
clc
packuswb
rol
pop
cmp
pushf
sti
mov
dec
sbb
hlt
push
arpl
push
add
mov
or
push
in
rcll
mov
pushf
imul
pop
ds
xor
ljmp
aaa
add
push
cld
icebp
mov
push
pop
cmova
jl
fmuls
pusha
incb
adc
and
into
mov
push
imul
sti
or
mov
dec
aas
inc
inc
jnp
sub
imul
ficomps
pushf
or
lock
jo
xor
inc
mov
scas
frstor
arpl
push
dec
imul
out
pop
sub
mov
and
hlt
dec
push
jg
mov
sarb
push
nop
pushf
cwtl
inc
repz
jne
sub
test
push
inc
je
sbb
hlt
xor
or
int
pop
jb
int
out
int3
mov
fs
int3
cmp
sub
add
mov
sub
popf
mov
out
and
fstpl
hlt
inc
decb
int
xchg
push
ds
cmp
add
add
and
and
push
xchg
sub
jl
mov
pop
dec
cld
xor
inc
mov
dec
fstp
mov
outsl
or
out
fmull
call
mov
or
jp
cld
ret
push
cmp
push
out
or
adc
mov
popl
dec
stos
and
xor
lahf
pop
shlb
cwtl
sbb
mov
mov
xor
insb
int
pop
ret
movsl
js
aam
cmp
insl
push
stos
jle
lret
insb
outsl
call
jl
push
int
add
pop
popf
pop
or
negl
mov
js
pop
xchg
das
xlat
pusha
mov
sahf
add
mov
pop
add
in
xchg
pop
mov
add
pop
pop
or
in
andl
add
push
dec
or
push
sbb
cld
or
pushl
insb
push
or
sarb
jge
aas
and
scas
testb
dec
std
dec
in
in
sbb
rclb
inc
dec
jl
adc
movsl
mov
cmp
mov
iret
outsl
mov
cmp
addr16
sub
xchg
jg
xchg
imul
outsl
xor
fisubs
jge,pt
mov
sbb
mov
outsl
or
pop
mov
scas
js
mov
dec
mov
cs
dec
push
add
push
pop
jl
inc
inc
cmpxchg
jp
out
xchg
sbbb
popa
mov
sub
out
xor
jae
and
insb
xchg
std
pop
in
push
sbbl
lret
ds
inc
mov
fstpl
sbb
das
dec
push
insb
sub
mov
mov
addr16
adc
pop
repnz
lahf
mov
popf
imul
jl
lods
sbb
insb
loope
ja
or
xor
pushf
nop
mov
fdivr
out
sbb
out
imul
add
inc
mov
inc
sub
sar
aas
pop
sub
pop
loope
idiv
sub
mov
xchg
into
push
mov
dec
rcr
add
and
jge
mov
mov
pop
dec
dec
sub
pushf
sti
add
push
out
dec
pop
inc
shrl
mov
sbb
xchg
jge
subb
insb
bound
mov
or
and
lret
movsb
and
pushl
int
xor
mov
stos
fistpll
movq
ja
idivb
jns
addr16
mov
adc
std
outsb
add
insb
mov
ljmp
mov
das
lret
and
in
sub
add
pop
xchg
xchg
jl
fnstsw
jno
jge
pop
rol
subb
add
mov
ss
addl
inc
push
or
jg
outsb
int3
insb
test
add
pop
pop
punpckldq
pusha
movsb
and
mov
push
and
mov
push
loopne
mov
sub
aas
popf
push
sti
lahf
xchg
pop
jge
mov
shll
or
cmp
outsl
and
adc
loopne
das
daa
lds
inc
out
and
scas
push
fsubrl
and
mov
nop
pushf
xchg
cmp
test
and
add
lods
lods
imul
lods
mov
mov
out
fisubrs
and
sub
sub
int3
pop
mov
and
lods
mov
push
sub
aas
dec
xchg
xchg
sbb
dec
cmp
mov
pop
jae
mov
pop
mov
sahf
xchg
sahf
push
sti
adc
pop
jb
pop
inc
mov
out
dec
hlt
mov
insl
fmul
sbb
adc
cmpsl
push
and
jne
dec
jg
insl
and
mov
adc
push
dec
or
cmp
roll
aas
inc
add
xor
or
in
fcoml
adc
mov
or
pop
pop
jge
arpl
or
ror
mov
lcall
lods
in
aam
pusha
jecxz
in
in
scas
sahf
xor
xchg
and
imul
push
insb
cli
sub
mov
jg
mov
push
pop
or
mov
push
sub
adc
add
xchg
popl
sub
int
push
pop
mov
adc
pop
rolb
clc
cmp
cmp
int
jl
dec
pop
fisttps
fnstsw
inc
jno
adc
lods
or
push
mov
pop
cmpsl
std
popf
sub
jle
fcompl
outsl
pop
pop
bnd
pop
adc
in
push
aas
lea
xchg
cmc
sahf
inc
add
sub
and
mov
jnp
outsl
nop
inc
push
les
cmpb
jno
addr16
outsl
xchg
xor
notl
enter
mov
inc
mov
sbbl
test
adc
aad
in
lahf
pop
and
fdivrl
pop
cmp
mov
sub
pop
insb
outsb
inc
xor
cmp
pop
cmc
push
adc
outsb
cmp
pop
pusha
inc
lret
arpl
lea
push
cmp
push
mov
sarl
adc
negb
out
and
sarb
jl
in
or
in
push
into
push
mov
pop
mov
fs
mov
inc
into
mov
mov
pop
addr16
pop
out
and
mov
or
scas
xchg
cltd
popf
pop
dec
and
sub
cmp
sti
push
or
mov
and
mov
mov
outsb
add
call
cs
inc
gs
or
loopne
sub
cmp
sub
pop
or
lods
pop
jg
add
outsl
cld
sbb
sub
mov
inc
adc
imul
aas
add
pop
inc
mov
cmp
int
cmp
fdivrl
insb
mov
and
jae
jg
test
fmull
push
ficoms
inc
outsl
xor
fmull
lea
cli
scas
dec
and
into
das
iretw
dec
mov
jno
sbb
ja
add
popl
ljmp
xchg
daa
inc
scas
cmp
popf
pop
sub
popf
add
dec
mov
cmpsl
pop
add
call
cmp
mov
stos
add
xchg
fcompl
jns
sbb
ja
daa
and
inc
sub
shll
mov
out
inc
cmp
loope
mov
xchg
outsl
mov
sbb
cs
mov
out
xchg
ret
mov
scas
popf
pop
and
test
and
add
inc
lea
jmp
mov
push
mov
cs
mov
rcrb
jge
inc
dec
or
rcrb
shrl
pushl
lcall
or
in
sub
push
cmp
insb
add
test
and
fdivl
add
mov
movsb
mov
inc
dec
or
das
pop
mov
xchg
mov
sahf
fsubl
add
mov
mov
fldenv
push
and
mov
and
mov
cld
pop
inc
inc
mov
dec
fistpll
push
and
neg
dec
lea
mov
out
mov
sbb
jne
or
sbb
cmp
xchg
inc
insb
mov
mov
sub
sbb
xor
cld
and
xchg
popf
aaa
mov
dec
mov
lods
push
adc
xor
push
out
insl
or
push
jg
lahf
jle
xor
loope
inc
outsb
sbb
jg
dec
push
jl
imul
dec
ret
sahf
pushf
out
adc
aas
in
outsb
or
jl
mov
pop
inc
dec
xor
pop
loope
dec
sub
popa
mov
popf
xchg
dec
pushf
sahf
mov
and
sub
loope
imul
adc
jg
cmp
inc
mull
dec
mov
mov
jle
pop
fisttpll
xchg
inc
int
and
mov
or
arpl
mov
sbb
jle
shl
jmp
jecxz,pn
dec
scas
sbb
outsl
dec
pop
je
dec
add
cli
nop
fsubs
dec
nop
sub
xor
mov
pop
int
jns
dec
or
aam
out
std
mov
xchg
mov
popa
es
or
movsb
or
inc
dec
rcrb
mov
insl
fmuls
outsb
rorb
pop
dec
mov
test
je
and
sti
int
clc
inc
xor
sbb
test
add
sbb
movl
testl
fs
or
test
adc
cmpsw
pop
pop
bound
out
and
ds
fidivrs
xor
and
dec
int
mov
idivl
in
lods
pop
mov
lods
aaa
inc
jl
or
mov
push
jle
jae
or
outsb
imul
bound
pop
pop
lods
inc
fdivl
xchg
mov
inc
pop
mov
and
or
lea
pop
add
sahf
and
pop
adc
outsb
pop
push
jecxz
mov
jbe
bound
inc
into
push
mov
jns
in
dec
pop
stos
pop
pop
mov
inc
sbb
or
push
sahf
idivl
ds
bound
add
arpl
and
or
out
or
mov
dec
sub
out
mov
jle
fadd
cmp
cs
or
mov
movsl
jmp
xchg
pop
pusha
jns
cmp
adc
out
fdivr
sbb
jo
incl
insb
add
cltd
inc
pop
and
pop
push
repnz
push
jl
jns
sub
mov
popf
int3
in
roll
push
movaps
popf
inc
or
mov
or
sahf
pop
add
pop
mov
and
sahf
pop
into
mov
stos
subl
mov
add
popf
sub
mov
movsb
push
or
or
add
jg
jne
sbb
and
in
pop
lock
xchg
scas
popa
or
or
add
or
insb
add
dec
into
fs
test
fsubrl
pop
mov
insl
inc
int
paddusb
pop
pop
push
adc
fwait
gs
xchg
ss
pop
push
mov
pop
inc
fstl
cs
aam
sahf
add
xor
out
cwtl
ja
int
test
or
aad
addr16
test
popf
popa
or
test
inc
pushf
sbb
mov
das
pop
mov
xchg
out
outsb
mulb
push
dec
cld
mov
insb
mov
dec
out
in
les
mov
jl
push
mov
sahf
mov
mov
into
cmp
dec
int
scas
nop
add
push
je
in
arpl
in
mov
fcoml
mov
scas
stos
mov
xor
jl
push
mov
cwtl
lahf
inc
loopne
mov
lret
lea
xor
lods
sub
inc
nop
or
pop
shufps
test
into
or
insl
nop
cmp
pop
and
bound
sahf
outsl
xor
in
outsb
jecxz
xchg
or
pushf
insl
push
jle
test
fsin
push
dec
inc
pushf
and
fisubrs
aas
or
push
or
aam
outsl
mov
outsl
flds
mov
push
in
mov
mov
negb
inc
or
fsubrl
inc
frndint
pop
imul
sbb
sbb
cmp
sub
and
in
dec
xor
loopne
mov
fsubr
mov
lods
outsl
ds
and
mov
xchg
inc
sti
cmp
mov
or
mov
xchg
shrl
and
addr16
in
push
mov
inc
repnz
jg
cmp
xchg
or
aaa
fs
std
dec
sbb
dec
sbb
inc
jg
test
lea
push
mov
popf
cmpsb
cmp
push
mov
ret
addr16
cs
fisubs
lods
cmp
stos
mov
add
xchg
add
scas
call
mov
mov
dec
stos
jle
cmp
pushf
pop
cld
int
dec
std
dec
push
or
mov
push
aas
cmp
sub
mov
dec
or
fidivs
or
mov
mov
add
jno
sbb
arpl
dec
in
push
cld
mov
stos
dec
mov
nop
and
adc
cmp
cld
ljmp
mov
mov
ds
xchg
scas
idivl
fnstcw
sti
mov
scas
loop
sub
xchg
fldl
pop
pop
gs
jge
sub
pop
sbb
mov
cmp
aas
adc
lahf
or
movsb
pop
lea
mov
shll
in
dec
and
sbb
pusha
mov
xchg
dec
push
xchg
into
out
and
ds
das
dec
sub
shrl
or
lods
insb
or
out
in
lcall
lcall
cmpb
hlt
mov
scas
fdivl
pop
add
jo
repz
inc
loope
mov
jge
mov
fisubl
jge
pop
mov
adc
and
insl
xchg
jne
int
outsl
testb
mov
daa
dec
push
sbb
add
mov
cs
stos
dec
fnstsw
and
add
or
cmp
and
cmp
clc
mov
out
cmp
pop
dec
or
cmp
and
in
push
inc
sub
sahf
add
mov
scas
int3
inc
add
iret
fisubs
xchg
popf
ljmp
add
movlps
scas
into
sub
fsubrl
mov
adc
in
or
mov
cmp
inc
and
pop
daa
inc
add
push
and
in
rcrl
sbb
fwait
js
lret
inc
xlat
seta
orl
sbb
stc
mov
mov
and
or
clc
pop
js
sbb
frstor
xchg
incb
in
mov
lahf
clc
daa
sarb
cmp
cmp
or
jecxz
jl
out
push
idivl
xchg
inc
push
aaa
fbld
js
mov
sbb
xchg
lret
or
cmp
dec
inc
add
sti
xor
cld
pushf
mov
mov
fdivrs
mov
iret
cmc
add
hlt
jbe
je
fs
cmp
adc
fwait
stc
sbb
xchg
add
fdivrs
mov
add
sbb
shll
std
xchg
sbb
mov
imul
and
pop
aas
popf
into
jg
inc
movsb
and
adc
inc
iret
dec
mov
cmpsb
push
xor
cmp
mov
or
pop
enter
mov
push
dec
fmull
mull
cmp
add
das
outsb
mov
jg
decb
out
add
cmpsb
mov
push
rep
jne
sbb
mov
fimuls
int3
and
movsb
inc
fnstsw
dec
inc
sbb
scas
pop
pop
adc
jns
xor
dec
test
std
aad
mov
dec
jle
lahf
sbbb
pushf
and
pop
jp
fsubr
ds
ficoms
aas
lea
inc
mov
nop
fwait
cmp
pop
mov
mov
dec
lsl
sahf
les
jno
sbb
jb
push
dec
int3
push
mov
cmp
cmp
sbb
mov
cld
mov
pop
fstpl
push
sub
mov
dec
into
cmp
iret
mov
insl
dec
mov
jge
sbb
mov
xor
sub
pop
outsl
dec
jne
push
dec
pop
insl
aas
mov
aaa
scas
cmp
insl
cmc
push
fistpll
jge
jne
ja
insl
in
insl
sub
and
inc
inc
xor
jecxz
adc
int
and
mov
adc
add
inc
pop
repnz
lods
mov
mov
lock
pop
stos
pop
cmp
fstpl
gs
sub
out
out
dec
and
nop
cmp
push
daa
in
sbb
mov
pop
inc
testb
in
in
mov
out
pop
cwtl
adc
push
rclb
pushf
sarl
add
xchg
inc
int
pop
addr16
jg
sub
mov
mov
sub
or
dec
imul
jg
repnz
wbinvd
push
push
and
lea
scas
xor
out
inc
push
or
popf
dec
sbb
sbb
mov
add
push
cmp
sbb
push
pop
and
ret
cld
pusha
sti
add
fdivrl
orl
filds
sarb
or
outsl
or
and
mov
das
push
out
mov
dec
loope
push
das
mov
push
cmpl
add
mov
or
fisttpll
cwtl
jns
or
sub
sbb
add
push
test
outsl
cwtl
xchg
std
push
das
add
adc
jg
dec
sub
fbld
outsl
push
dec
jge
dec
push
iret
mov
cli
pop
orl
fmuls
outsl
sub
fisttpll
push
jle
inc
sbb
mov
or
mov
xor
mov
inc
sub
imul
cmp
or
pop
push
mov
pop
pop
jg
pop
push
or
pop
cmpsl
sub
or
xorl
lods
pusha
mov
and
faddl
rorl
mov
sub
pop
bound
and
test
sbb
insb
pop
clc
mov
mov
clts
out
lods
fdivs
outsl
mov
mov
or
mov
or
aas
dec
mov
dec
pop
mov
pop
pop
or
lret
or
fstpl
jle
pop
mov
dec
mov
and
or
and
mov
push
sbb
scas
cmp
fucomp
sbb
xchg
popf
decb
jle
mov
adc
dec
sub
das
shlb
data16
lock
les
divps
dec
outsb
sub
inc
gs
shl
mov
outsl
and
pop
mov
xchg
mov
xchg
inc
fstp
add
daa
mov
cmc
adc
and
sbb
add
xchg
jecxz
mov
mov
xor
xchg
out
shrl
xchg
lods
pop
adcl
xchg
push
mov
push
shll
sahf
adc
out
dec
cmp
mov
push
inc
add
out
sub
cmp
int
les
out
imul
sub
iret
sub
push
ret
das
enter
mov
dec
mov
inc
jns
shlb
ret
mov
rcrb
outsb
mov
cmp
jl
inc
mov
jl
arpl
sub
and
mov
shll
xchg
in
aam
sub
adc
std
rcrl
xchg
add
mov
stc
mov
and
push
sarl
fdivp
das
pusha
dec
and
mov
rcrb
adc
arpl
lahf
lea
xchg
mov
or
filds
mov
cld
arpl
out
mov
lahf
push
jo
push
sahf
rcll
add
inc
pop
sbbl
pop
ret
pushf
xchg
setge
shrd
mov
scas
call
inc
loop
mov
inc
std
pop
and
fnsave
test
addr16
inc
dec
sbb
jl
int
lahf
and
les
jb
negb
inc
insb
pop
xor
cwtl
fcomp
aas
aaa
imul
jae
dec
xchg
and
mov
sahf
sahf
inc
fisubl
hlt
popa
cld
mov
cltd
adc
loope
xchg
push
cmpl
lahf
xchg
sbb
pop
add
aaa
ds
fidivrs
mov
int
and
push
int3
imul
or
inc
jge
popf
push
imul
cmp
ret
lods
inc
outsl
outsl
push
sbb
iret
std
or
pusha
lods
mov
inc
andl
das
fcompl
outsl
outsl
and
xchg
xor
mov
pop
and
int3
pop
das
fimuls
dec
inc
js
sahf
sarb
outsb
les
or
enter
jns
jle
insb
push
jge
mov
std
bound
int3
dec
inc
inc
cld
rcrb
sub
pop
insl
add
jl
jle
pop
or
cmp
je
jbe
das
add
push
popa
scas
mov
jle
sti
mov
jp
outsb
cmp
data16
or
push
pop
outsl
xlat
mov
in
pop
adc
bound
nop
mov
push
mov
mov
stos
cmp
dec
jns
cwtl
scas
push
pop
dec
popf
push
jl
mov
jne
int3
jge
pop
fists
inc
mov
fcomip
xor
ds
aas
mov
and
mov
sub
aaa
mov
in
jmp
cmp
nop
ds
sub
mov
pop
cmp
inc
out
push
addr16
and
inc
lea
cld
mov
imul
subl
dec
cmp
pushf
mov
dec
lahf
pop
jl
and
inc
and
rorl
les
pop
sbb
test
inc
incb
sub
fnstsw
xchg
rcrb
dec
dec
out
inc
pop
subb
xchg
inc
aas
test
cmp
call
in
xor
cld
cmpsb
and
das
imul
sub
outsl
int
pushf
xchg
inc
insl
insb
in
sub
jno
sbb
xor
dec
mov
xor
das
and
lods
dec
pop
rorl
sbb
fmull
outsb
ror
jg
or
xchg
xchg
fistpll
inc
sahf
rcll
aaa
std
into
dec
int
outsb
jb
adc
repz
push
xchg
dec
push
inc
cmp
jae
nop
cwtl
pop
pop
push
sub
cmc
sbb
and
jno
jge
add
or
jns
adc
cmp
mov
jg
pop
iret
push
jp
pop
imul
mov
mov
outsl
lods
xchg
lock
int
pop
jno
dec
test
lcall
push
out
push
fs
cmp
dec
pop
or
loop
or
les
in
or
jmp
cmp
nop
mov
dec
out
sub
fisubrs
scas
bound
jl
inc
push
mov
dec
pop
cs
or
dec
push
out
jns
insb
into
and
sahf
out
push
fisubrs
aad
nop
or
lods
gs
je
or
cli
lods
dec
and
lods
nop
insl
pop
in
xor
pop
movsb
cmp
out
sub
lods
jnp
push
push
out
push
cmp
fs
in
cld
out
ds
decl
sub
pop
or
sub
xlat
sub
call
iret
jp
sub
push
pusha
mov
xorb
cld
xchg
sbb
std
or
push
jp
dec
xchg
addb
iret
inc
dec
push
push
mov
jle
outsl
sub
flds
dec
or
adc
popf
sub
adc
xor
inc
popf
mov
or
ja
push
dec
cmp
sub
aas
insb
cmp
mov
std
push
push
pop
xchg
pop
or
into
in
mov
cmp
and
lahf
dec
cld
xchg
or
inc
sub
and
jle
sbb
pop
sub
cwtl
int
jl
imul
sub
orb
mov
or
ds
pop
mov
sbb
mov
sbbb
xor
jecxz
lea
mov
int
mov
jle
lods
addr16
xor
shl
loope
mov
fildll
add
mov
dec
lahf
pop
aaa
pop
or
daa
pop
frstor
in
push
or
je
add
sub
lret
sarb
and
insl
cmovbe
sub
jge
dec
pop
rorb
add
inc
pavgw
les
mov
push
jle
jns
loop
mov
adc
push
mov
js
dec
insl
femms
mov
jge
mov
stos
inc
sub
js
mov
pushf
and
lods
push
popf
pusha
pushf
jl,pn
daa
and
iret
bound
add
das
cmp
mov
cld
incb
cli
inc
cld
in
out
push
sbb
mov
jge
jge
pop
daa
and
dec
mov
fdivl
sbb
mov
adc
add
ds
pop
sbb
jo
ds
icebp
decb
and
push
jl
aas
inc
scas
jae
in
std
inc
lods
pop
fmull
jg
or
int
push
push
adc
adc
cld
aas
add
out
push
inc
pop
mov
inc
dec
xchg
out
in
les
add
sahf
push
int3
mov
mov
lret
adc
cmc
fisubs
mov
or
sub
mov
fyl2xp1
add
pusha
push
cld
sbb
clc
add
pushf
movsb
leave
jecxz
sahf
test
or
enter
or
inc
xor
add
xor
fs
lea
js
pop
add
out
and
adc
xchg
gs
ret
cmp
jo
push
dec
or
cmp
add
xor
or
cmpsl
mov
aaa
cld
pop
sbb
jo
aas
adc
dec
mov
sub
add
sti
mov
mov
filds
cmp
add
gs
ret
dec
add
adc
enter
je
sub
mov
jl
sub
mov
cld
rolb
or
adc
iret
sbb
pop
mov
stos
and
add
sub
and
adc
mov
mov
sub
sti
cwtl
dec
icebp
adc
fs
pop
idiv
test
dec
pushf
mov
add
shr
push
inc
sub
xorb
mov
mov
call
cmp
sbb
lea
cmp
leave
and
iret
or
dec
jb
pop
cmp
sub
adc
sarb
lret
inc
inc
int3
fmul
mov
inc
cwtl
adc
add
jge
xchg
out
icebp
aaa
mov
adc
or
xorb
dec
jp
or
insl
adc
and
cmp
sbb
lret
test
and
or
push
or
rcll
les
add
mov
inc
sub
or
jnp
icebp
push
pop
je
fsts
jnp
add
xor
mov
mov
icebp
loopne
dec
sbb
dec
adc
add
inc
sbb
mov
or
test
mov
bnd
adc
jae
stos
sbb
ja
pop
add
or
jae
and
adc
je
stos
jo
int3
push
or
cmp
mov
pop
and
testl
in
addb
incl
dec
test
add
adc
dec
inc
add
mov
enter
inc
decl
sbb
ret
decl
or
adc
mov
call
pop
inc
push
xchg
or
mov
adc
adc
push
cmovg
adc
rcll
xchg
aad
push
xchg
pop
push
call
cltd
fstps
lcall
ficompl
pop
fildl
movsl
mov
xor
push
push
sarb
or
roll
dec
adc
add
sbb
add
mov
add
push
push
out
int3
ret
nop
adc
add
xchg
push
rolb
inc
adc
sbb
aam
xchg
xchg
xor
adc
addr16
or
push
es
and
pop
jmp
cmpl
or
loopne
add
leave
xchg
aad
repnz
notb
cmp
hlt
scas
hlt
data16
std
mov
cwtl
lcall
jbe
aam
inc
jmp
mov
imul
or
gs
hlt
out
js
jmp
clc
sub
incl
jno
push
mov
call
outsb
flds
pop
jb
adcl
mov
test
fwait
test
jns
xchg
cmpsb
pushl
jg
jne
sbb
or
cmc
xchg
jnp
shl
add
popa
mov
ljmp
ds
or
mov
pop
cmpsl
mov
loop
mov
sarb
dec
dec
cwtl
cmp
jb
popf
pop
or
gs
pushl
lods
mov
out
dec
xchg
sub
ret
sub
pop
sub
xchg
incb
push
int3
decl
or
stc
lock
cld
inc
in
lret
dec
xchg
push
cltd
mov
xor
clc
rol
xor
and
pop
xor
addr16
jp
jnp
data16
jno
xchg
out
es
imul
cmp
mov
icebp
jnp
mov
bound
mov
sub
pop
aam
subl
ja
ljmp
repz
and
mov
adc
pop
sbb
or
idivl
mov
xor
mov
pop
imul
inc
add
scas
iret
jbe
push
pop
stc
inc
call
push
enter
aas
cli
stos
call
sbb
sbb
dec
pop
call
lret
cli
jg
inc
xlat
xchg
cld
lahf
mov
loope
out
mov
ficoms
or
sbb
aaa
xchg
xchg
xchg
dec
cmp
or
bswap
mov
and
fsubs
inc
or
fidivl
decl
in
dec
pop
jecxz
sub
adc
stc
or
push
cld
inc
fs
std
adcl
inc
cmp
xor
or
aaa
popf
leave
sub
mov
lcall
lcall
shll
dec
dec
incb
nop
in
dec
dec
in
mov
jo
mov
loopne
add
fnsetpm(287
out
pop
ficoms
cmpsb
sbb
ljmp
lret
call
push
out
mov
pop
int3
or
sbb
jle
ja
jl
mov
js
and
test
ret
and
cmp
sarb
nop
push
stc
cmc
or
mov
pop
mov
incl
pop
mov
xchg
mov
rcrb
lock
sbb
cmpsl
adcl
arpl
cs
loop
movb
imul
sbb
inc
lods
inc
mov
aas
mov
fisubrl
mov
fildl
cmpsl
outsb
mov
cmc
shlb
sahf
pop
in
pushl
cmpsb
sub
outsb
pop
std
ja
pop
jb
adc
ss
jns
mov
pop
fadd
fbld
lahf
iret
pop
inc
push
push
js
sahf
cli
fcmovnu
call
xchg
lret
jmp
push
cmp
mov
outsb
xchg
inc
pop
pop
iret
jb
jp
sbb
test
pushl
fcomps
lods
repz
sarl
mov
insb
cmp
cmp
sub
addb
push
push
mov
jmp
pusha
cli
stc
ret
loopne
push
jne
add
loop
mov
daa
xchg
push
mov
out
and
in
lock
outsl
std
stos
sbb
sub
add
sbb
mov
sbb
jge
mov
cmp
adc
pop
mov
xor
pushf
jmp
push
mov
pop
std
and
aas
push
das
icebp
pop
cmp
hlt
jne
enter
mov
ja
neg
lcall
cmp
or
and
lcall
push
imul
dec
idiv
push
negl
inc
xchg
cmpsl
cmp
aam
push
xchg
mov
cmp
out
incl
mov
push
dec
imul
jg
sarb
jmp
divl
mov
add
jp
mov
call
inc
out
jle
jae
cmp
push
repz
hlt
push
push
clc
fnstsw
rol
xchg
sbb
decl
mov
cwtl
jo
cmpsl
je
js
cli
mov
jmp
fcoml
negb
rcrb
sahf
ret
test
ficomps
mov
stc
jbe
mov
push
std
or
incl
xchg
out
sub
pop
std
popa
clc
in
jp
je
pop
xchg
ljmp
pushf
push
incl
push
jne
cmp
loope
fdivs
std
mov
stos
loopne
call
or
pusha
test
ret
outsl
or
hlt
mov
je
inc
in
xchg
lock
lahf
in
mov
mov
hlt
cwtl
stos
call
fiaddl
mov
insl
fsubs
shll
icebp
add
mov
jge
sub
mov
mulb
xchg
jbe
mov
outsl
sub
jne
ljmp
loope
mov
mov
cmp
push
rcrb
sub
rcrb
out
icebp
cli
shll
sahf
xor
dec
je
push
outsb
add
addb
pop
fcoms
cmpsl
cmp
clc
ljmp
mov
cmp
mov
or
cmp
mov
dec
add
adc
mov
mov
sub
jnp
loopne
ret
hlt
sbb
inc
shrl
outsb
dec
or
or
imul
sub
leave
pop
clc
mov
adc
jp
push
cmp
out
movsl
arpl
xchg
scas
data16
sbb
mov
push
call
out
sbb
jmp
stos
aas
ret
xor
mov
call
pop
sbb
jno
std
scas
xchg
add
cmp
lret
mov
sbb
inc
sub
adc
mov
clc
pextrw
movsb
jmp
xor
mov
pop
mov
dec
pushl
or
cmp
iret
imul
es
fwait
stc
fadds
adc
cwtl
std
dec
or
cli
lret
inc
mov
subb
jmp
sbb
jbe
cmp
xor
js
not
cld
cmp
cli
mov
call
stos
loopne
call
fldenv
cmpsb
dec
dec
add
mov
sub
fsubrp
pop
ljmp
jmp
negl
xchg
dec
mov
ja
lods
cmp
pushf
out
cmp
data16
cs
fmul
ss
pop
js
mov
sub
xchg
int
std
insb
imul
or
clc
xor
das
out
sar
icebp
xchg
pop
jo
leave
cmp
rep
lods
outsb
jo
jecxz
scas
sbb
fnstenv
inc
stc
cmp
cmpsb
repz
pop
adc
dec
inc
cmp
sbb
in
filds
mov
sahf
je,pn
je
jns
jnp
leave
js
decb
mov
push
out
out
add
dec
hlt
adc
idivl
mov
bound
jecxz
fisttpll
inc
fistpl
jmp
testb
mov
scas
aaa
inc
hlt
adc
fdivrp
push
mov
dec
mov
outsb
xlat
sbb
add
loope
jge
iret
adc
inc
mov
jg
out
dec
sbb
loop
stc
inc
movsl
iret
insb
out
ret
cmp
mov
pop
xor
cld
mov
lcall
repnz
mov
mov
movsb
jg
test
lock
ljmp
mov
insl
push
or
mov
xor
lret
mov
xchg
xchg
xor
or
ds
xor
into
push
push
je
mov
or
pusha
and
add
or
and
int
imul
sbb
shrb
cmp
andb
daa
les
gs
mov
sbb
xor
sti
add
or
stc
in
pop
iret
sbb
in
xchg
subb
aam
cmp
push
xor
scas
fwait
ror
or
push
or
cmp
and
jae
mov
fildl
mov
pop
sbb
lods
jmp
cmc
cmp
mov
jl
jp
int
mov
dec
dec
jno
xorb
xchg
xchg
int
mov
enter
popf
ret
inc
adc
xlat
subl
push
arpl
loope
push
insb
dec
xchg
inc
and
adc
and
lds
lock
lds
pop
mov
jo
adc
sarb
pop
dec
xorb
cmp
in
vpmullw
idivb
mov
ds
cld
and
jl
mov
dec
loopne
pop
and
popf
inc
xor
cltd
xchg
mov
int
cltd
lcall
std
and
sbb
ficompl
repz
sbb
pop
mov
and
add
cmp
sbb
sbb
inc
mov
inc
mov
mov
mov
out
push
cmp
inc
and
sbb
sbb
xor
and
mov
xor
js
mov
mov
js
popl
pop
popf
out
mov
fdivrl
jmp
clc
mov
sub
ljmp
push
add
fwait
adc
jmp
std
push
jecxz
pop
scas
mov
pop
addb
add
dec
aam
inc
ja
icebp
inc
je
cmp
and
and
notb
test
xor
adc
mov
sti
sbb
inc
mov
leave
mov
xorl
cmp
cmp
negb
xor
cmc
adc
cwtl
mov
lods
lea
shlb
mov
popf
lahf
sbb
lahf
xor
test
clc
hlt
and
loopne
in
mov
ret
jl
cmp
into
popf
insb
jge
out
lahf
pusha
pop
fs
test
cmp
into
mov
mov
fsubrl
xor
dec
push
push
lea
adc
mov
mov
mov
push
les
lahf
leave
enter
fnsave
mov
mov
mov
rorl
test
mov
movl
cld
jae
dec
mov
out
sarb
test
ficoml
ja
loopne
xchg
insl
aam
test
mov
cmpl
xor
sarl
fs
cmp
in
pop
and
lds
hlt
int3
loopne
inc
aam
adc
in
mov
cmp
pop
or
scas
fs
rol
pop
fs
or
fmull
mov
stos
bsr
mov
test
aas
cmp
pusha
js
lret
xor
sbb
loope
hlt
mov
mov
and
rorb
sbb
sub
cs
sarb
sbb
sbb
aam
mov
mov
sbb
mov
pop
pop
xchg
test
mov
call
scas
sub
aad
nop
and
adc
mov
or
cwtl
lods
cmpsl
aam
test
faddl
addr16
lea
push
add
lock
movsb
gs
sbb
repnz
repnz
adc
mov
outsb
mov
je
push
push
stos
fdivl
and
jecxz
outsl
and
mov
mov
int
mov
and
mov
and
insb
mov
shlb
cmp
icebp
xor
lea
mov
cwtl
pop
hlt
inc
add
pushf
pop
xchg
mov
sbb
leave
ret
loop
mov
lods
in
mov
mov
clc
mov
mov
xchg
pop
dec
and
ds
adc
xchg
out
sub
inc
mov
mov
sbb
push
mov
adc
add
or
or
adc
adc
fsub
jne
fs
repz
jnp
aam
add
and
imul
pop
or
xor
or
pop
mov
adc
mov
arpl
insb
xlat
xchg
scas
test
xchg
repz
jae
fldt
pop
leave
scas
faddl
scas
adc
mov
add
dec
cmp
sbb
push
mov
test
ret
nop
or
dec
inc
xchg
mov
pop
rorb
lret
dec
int
adc
xchg
or
dec
adc
dec
push
pushf
fs
mov
pop
sbb
adc
popf
xchg
loope
mov
popf
fstpl
pop
sahf
ficomps
lcall
fbld
jmp
and
loop
arpl
and
add
out
cmpsl
out
xor
xor
repnz
mov
push
jle
adc
adc
lret
andb
dec
add
inc
test
inc
enter
push
push
inc
decl
xchg
adc
xchg
sbb
stos
xchg
aam
pushf
fs
out
dec
push
fadd
pop
adc
pushf
mov
add
je
nop
adc
push
xor
mov
jecxz
es
add
adc
cmp
sti
aas
adc
lcall
inc
push
mov
sahf
push
jecxz
and
lret
push
cmc
add
je
pop
in
add
mov
das
popf
out
hlt
pop
sahf
movsl
orb
in
or
popf
call
push
lcall
hlt
mov
cld
mov
mov
mov
popf
lahf
lret
mov
decl
hlt
jge
incl
jl
les
cmp
incl
or
sbb
das
hlt
mov
mov
mov
mov
imul
pop
xchg
lcall
hlt
adc
lcall
jns
out
and
sbb
lock
js
sbb
mov
mov
pop
or
scas
pop
sbb
imul
test
int3
jmp
lock
mov
pop
out
lar
clc
lods
shrl
sub
or
stos
loope
imul
push
jne
into
inc
sbb
pushf
pushl
nop
cmp
jbe
stos
jo
lret
or
inc
dec
mov
push
and
mov
mov
cmp
scas
adc
int
ljmp
mov
dec
enter
push
jg
xchg
cmp
xor
jnp
loope
and
pop
daa
addr16
push
out
sbb
and
scas
jmp
sub
jle
sub
js
and
enter
sbb
inc
stos
je
pusha
push
rcr
out
xchg
jmp
ljmp
push
in
addr16
cmp
inc
sub
shll
mov
mov
cld
fidivrs
or
mov
cs
mov
xchg
pop
adc
call
and
lcall
cs
decl
gs
loopne
cmp
cmp
rorl
cmp
dec
xor
cmpsb
and
mov
inc
in
jp
mov
lds
mov
fildl
shlb
pop
jb
subl
in
arpl
xchg
cltd
pushl
mov
jns
in
or
out
gs
ss
int3
incl
jo
subb
mov
pushl
fistl
scas
pop
jmp
hlt
sbb
std
aam
out
or
jg
sbb
xacquire
and
jecxz
or
lret
cli
rolb
iret
pop
fidivrs
das
mov
mov
addr16
fldt
cltd
std
iret
sub
add
rcl
mov
pop
loop
daa
adc
jne
and
hlt
or
jo
cmpsb
add
cmp
push
insb
xchg
lock
xchg
repnz
sub
jb
jp
ljmp
leave
sbb
jle
and
and
je
xchg
xchg
clc
xor
mov
dec
mov
mov
repz
mov
insb
mov
pop
push
push
add
push
ds
sbbl
mov
jg
jmp
push
in
jbe
mov
insb
mov
in
addr16
hlt
decl
cltd
and
call
cmp
pop
std
xor
inc
or
ljmp
pop
cmp
jb
and
daa
mov
popa
xlat
jo
aad
into
xor
sub
mov
loop
mov
xor
xchg
jns
repnz
dec
hlt
inc
ss
jo
incb
iret
jnp
jo
pop
adc
lods
enter
fildll
cmp
icebp
dec
xchg
leave
push
pop
je
or
out
xchg
jle
push
in
dec
call
stc
xor
mov
xchg
imul
test
outsb
scas
je
push
cmc
es
mov
out
add
sbb
into
js
outsb
mov
or
xor
stc
push
jecxz
lcall
jmp
jo
lret
mov
fsubrs
adc
iret
inc
addb
imul
push
loopne
jge
jns
cmp
mov
mov
xor
dec
movl
incl
sub
xchg
into
nop
cld
push
jo,pt
jb
fcoml
std
xchg
aas
stos
call
pop
and
pusha
data16
je
movsl
ljmp
xor
cmp
je
jmp
inc
jnp
fcoml
sbb
mov
mov
imul
lcall
shlb
sbb
icebp
or
mov
and
hlt
loop
lcall
push
push
in
call
fsub
mov
sub
xlat
xchg
mov
into
lods
ret
subl
rorb
push
jge
sbb
sbb
aaa
mov
inc
cld
mov
pushl
mov
xor
pop
int3
sbb
ja
mov
cmp
mov
dec
mov
inc
fsubrp
adc
fwait
jle
js
sbb
dec
push
pop
int
mov
xchg
test
ja
ljmp
cmp
jno
rcr
mov
mov
lock
lahf
lcall
ffreep
sbb
repz
jnp
sbb
icebp
stos
addr16
mov
rolb
xchg
push
dec
mov
and
mov
js
xchg
push
xchg
sahf
jns
sbb
mov
push
shl
pcmpeqb
inc
out
enter
lods
sub
inc
push
mov
push
or
ret
pusha
mov
cs
pop
xchg
clc
add
fcoml
and
dec
stos
rcrb
sub
loope
scas
aad
in
mov
sbb
jecxz
jns
inc
je
daa
out
pop
adc
dec
mov
xchg
jmp
scas
in
inc
add
loopne
lcall
dec
add
jmp
add
fstpl
stos
or
dec
sbb
pop
in
jl
xchg
inc
test
lods
aam
sub
sbb
jl
imul
add
out
dec
scas
mov
jge
sub
sub
into
aas
pop
xor
ss
les
call
push
adc
imul
aas
fnstsw
mov
sub
mov
rolb
dec
sbb
lea
mov
xor
lar
cmp
inc
ret
cltd
add
lods
fistpl
push
pushl
push
xlat
jo
rclb
lcall
pushl
hlt
ljmp
add
sub
call
mov
xchg
lods
pop
inc
hlt
incl
sar
icebp
push
call
jmp
data16
sub
decl
pop
push
add
inc
cmp
inc
jno
sbb
xchg
cmp
jb
fdivrl
cmp
rcrl
xor
add
fwait
mov
movsb
and
std
test
js
dec
mov
xchg
mov
lcall
jge
stc
js
jo
mov
pop
enter
or
inc
sbb
dec
test
add
outsb
arpl
and
js
in
aad
add
mov
je
stc
xor
xor
jbe
xlat
insb
jb
push
lret
mov
popa
call
clc
imul
nop
sub
or
cmpsl
sbb
aam
or
fcomip
xchg
inc
add
push
ds
mull
repz
push
sub
jmp
mov
xor
pop
sub
and
leave
push
shll
push
inc
jp
sbb
mov
icebp
xor
dec
scas
mov
ljmp
sahf
dec
adc
pop
jg
mov
jo
cld
sub
mov
mov
lahf
jbe
fld
mov
jns
hlt
jge
xchg
out
jg
call
test
mov
popa
mov
dec
aad
cwtl
ljmp
add
add
rolb
push
jmp
repz
xchg
mov
sar
sub
or
jg
xor
mov
inc
jl
sbb
fstpt
dec
int
insb
adc
lcall
add
call
push
std
in
mov
fwait
out
shlb
jns
cld
adc
mov
test
inc
enter
xchg
and
hlt
cmp
push
sarb
pop
stc
aaa
pushl
adc
jbe
jb
xor
jmp
fs
mov
test
lds
in
jmp
lret
ljmp
add
pusha
sbb
cmp
into
sub
pop
dec
sub
xchg
lods
faddl
jo
pop
pushl
mov
in
stc
int3
out
sbb
mov
push
cli
lret
push
notb
popf
out
fiaddl
xchg
push
test
outsl
ss
imul
cld
incb
cmp
paddw
jmp
imul
xchg
dec
cwtl
ljmp
in
cmpb
or
sbb
inc
fsubl
jae
xor
in
imul
xchg
cmp
leave
mov
int3
lahf
jl
mov
and
sbb
inc
and
stos
shl
cmpsl
les
fdivr
lret
ljmp
xor
in
pop
add
shrl
jecxz
insb
cld
fstpt
sarl
sti
jno
inc
lcall
add
fsts
ret
jcxz
addb
xchg
and
es
faddl
sbb
data16
arpl
xchg
lcall
add
mov
jns
imul
mov
dec
mov
mov
fwait
sub
into
jnp
loope
incl
std
fmulp
adc
dec
into
repz
jl
mov
jb
xchg
xlat
incl
sbb
in
ficoms
xchg
add
icebp
dec
pop
cmp
test
jb
mov
dec
bound
pusha
fwait
adc
jne
hlt
mov
xorb
dec
push
and
insb
xor
push
jns
sbb
cli
jg
fsubrp
ret
sub
shl
sub
sbb
push
mov
std
push
in
sbb
pusha
mov
stos
cmp
adc
sub
sbb
ljmp
cmpsb
int
iret
mov
lds
pop
pop
aas
in
loopne
mov
jl
ret
int
pop
mov
jo
jbe
mov
push
mov
dec
repz
je
andb
push
std
ret
push
ror
scas
ljmp
or
mov
xor
call
movsl
adc
jp
mov
js
lock
or
cmp
xor
out
fistl
lret
sbb
dec
mov
push
ljmp
stc
loopne
gs
in
js
bound
pushl
dec
adc
pop
outsl
ljmp
call
pusha
lcall
pop
sub
das
adc
scas
mov
adc
jg
adc
std
rorb
mov
mov
jmp
icebp
push
aas
cmpsl
jnp
pop
fiadds
out
push
int3
jp
add
lcall
pop
shl
lret
fcmovnb
or
cltd
jmp
and
mov
orl
dec
ret
test
mov
jo
xchg
fistpll
jnp
ljmp
shll
xor
lods
cmp
inc
mov
lahf
ficoms
mov
shll
or
cli
mov
xchg
std
dec
fcoms
rclb
push
repz
stc
das
mov
insb
addr16
stos
or
cli
dec
or
pop
xchg
inc
decl
out
loope
cmp
mov
jae
or
jmp
scas
jo
mov
repnz
jp
lds
sub
sub
pop
and
push
dec
pop
adc
fldl
sub
pop
in
ret
je
mov
cmpsl
dec
xor
ds
push
pushl
xchg
stos
adc
imul
inc
sub
mov
inc
imull
cli
and
sub
cmp
faddp
mov
shlb
mov
pop
mov
loopne
test
popf
rorl
inc
adc
cmp
loopne
shll
pop
or
push
test
iret
or
pop
jmp
jecxz
in
or
aaa
clc
pop
cli
dec
push
jge
in
lock
mov
sub
lock
imul
xchg
inc
xor
pushl
cmp
dec
clc
or
fnstsw
mov
aas
dec
jge
fdivr
mov
stc
xchg
stos
ljmp
xchg
and
fdivrs
or
sub
test
and
inc
pop
js
enter
lcall
loope
es
push
xchg
fstpt
jbe
pop
stos
pop
les
sti
mov
in
adc
xorl
leave
lea
inc
xchg
ss
mov
xchg
repz
rcrl
in
pop
mov
jmp
imul
xor
add
sub
jl
jl
cmp
jmp
push
dec
loope
sub
pop
mov
imul
ret
jmp
pop
sarl
cmp
fcoms
jno
lods
or
in
cltd
hlt
push
aas
xlat
mov
xchg
sar
sbb
add
sub
mov
clc
test
push
aaa
hlt
testl
cmp
push
in
push
ja
lret
cld
lcall
jo
push
add
dec
jmp
pop
pushl
addl
lahf
fdivrs
xor
mov
loopne
or
mov
adc
fbstp
sub
xor
lret
xor
rol
and
mov
cmp
mov
cli
mov
into
test
out
xorb
je
out
jmp
inc
mov
cmp
add
mov
pop
xlat
mov
sub
lds
jge
in
jl
jmp
mov
inc
pop
in
sub
xor
add
mov
mov
push
pop
adcb
jmp
mov
ds
add
or
jg
mov
inc
add
add
cmp
sbb
imul
shl
or
add
mov
cmp
ljmp
or
idivb
mov
inc
test
decl
cld
sbb
lahf
icebp
add
data16
stc
push
dec
or
jbe
notl
fs
cmp
incl
ljmp
notb
fsubrs
jl
cld
cmp
mov
jo
dec
fldt
je
dec
movsb
or
sub
mov
les
xchg
inc
jecxz
fxch
mov
out
out
decl
lods
in
ljmp
ror
and
shrl
jo,pn
lcall
xlat
cmp
sbbl
icebp
and
sbb
pop
int
add
lldt
mov
stc
pop
inc
je
leave
jecxz
or
stos
add
adc
jae
decl
popa
push
jp
insb
js
mov
inc
jge
and
cli
in
jp
repnz
dec
jo
pop
int3
xlat
mov
inc
and
les
js
cmp
jnp
mov
jno
outsl
mov
pushl
jge
mov
call
hlt
mov
sub
scas
jle
rclb
mov
add
aad
test
ljmp
inc
xorb
push
jns
adc
stc
inc
push
mov
shl
adc
cltd
sub
push
sub
das
and
jmp
stos
inc
pop
psubsw
in
lret
mov
mov
lods
mov
fildl
push
nop
cmp
clc
mov
sub
mov
loope
and
hlt
decl
ja
sub
and
cmp
mov
mov
sbb
or
js
dec
pushf
ds
test
call
cmp
jo
mov
jp
xchg
sbb
pop
out
inc
icebp
cmpb
sarl
pop
aam
clc
insb
and
das
dec
pop
dec
sar
cli
cmpsl
xchg
js
shl
inc
stos
js
jp
add
push
cld
ljmp
xor
fisubl
incl
lea
mov
stc
push
stc
cmp
mov
mov
add
popa
imul
or
pop
pushf
sbb
or
into
fs
add
fnstcw
int
push
cmp
mov
imul
jecxz
xor
imul
or
push
incl
lock
das
idivb
call
xchg
mov
ret
pop
js
cltd
cmp
mov
cli
pop
or
fstpt
ljmp
jbe
leave
fabs
pushl
mov
lret
aas
mov
jo
repnz
incl
cwtl
aam
insb
icebp
cmpsb
sub
add
jo
scas
lock
jae
mov
and
sbb
adc
dec
jl
add
jno
loope
or
cmp
cli
loope
dec
das
in
jp
push
and
cltd
adc
loop
les
cmp
cld
push
aas
push
popa
xchg
jne
in
push
stos
test
lcall
cmpsb
and
lods
or
jg
lods
jae
dec
vpminub
shll
xchg
mov
iret
mov
pop
inc
decl
call
mov
jnp
sti
dec
jmp
mov
iret
in
lock
push
xor
ljmp
jne
das
xchg
insb
adc
inc
sbb
call
popa
xchg
jmp
test
xchg
xor
test
ljmp
fbstp
cmp
insb
push
add
push
aam
jo
pushl
cmp
cmc
sub
xor
pop
out
sbb
xor
daa
sub
test
push
cmp
decl
sub
pop
add
mov
fistpl
incl
cmp
addr16
arpl
pushl
xor
call
mov
test
mov
call
xor
sub
in
xchg
cmp
lods
or
inc
fsubl
cld
scas
sti
sub
cmp
aas
add
add
mov
pop
fcomps
sti
mov
adc
hlt
ret
clc
cltd
sbb
jl
out
xchg
xchg
lahf
push
repnz
sub
jl
add
jecxz
pop
add
adc
imul
pusha
add
dec
add
insb
and
or
add
scas
mov
mov
adc
mov
or
aas
sahf
mov
mov
adc
ficoms
adc
xor
jns
sti
not
inc
fs
dec
or
push
clc
pusha
mov
and
insb
cvtpi2ps
add
or
idiv
idivl
and
lahf
xchg
movsb
xchg
inc
fisubl
jbe
aas
testl
sbb
and
pusha
testl
sub
popa
mov
mov
or
adc
xchg
in
lcall
adc
jno
shll
sti
scas
jo
and
out
jnp
sub
scas
or
cwtl
jecxz
insb
adc
and
je
push
pop
or
add
nop
inc
sbb
cs
sub
les
testl
je
sub
enter
push
xor
sub
fimull
ljmp
mov
add
jmp
xor
jns
inc
xor
les
xlat
rcrb
test
xchg
xlat
jne
and
jae
rorb
rorb
add
and
or
mov
ficomps
dec
or
push
in
add
leave
cli
int
inc
or
inc
fildll
add
add
std
test
adc
sub
pusha
aam
pushf
shlb
xchg
stc
ret
add
cmp
add
xchg
and
add
scas
imul
inc
inc
popf
je
xor
sbb
jecxz
sbb
lahf
stos
adc
inc
xchg
mov
pusha
daa
inc
jo
sbb
movsb
aas
aas
fnstenv
sub
inc
in
xchg
add
sbb
inc
fcompp
mov
jp
inc
clc
iret
mov
fldenv
xor
jnp
mov
sbb
into
int
shrb
sub
dec
adc
mov
aad
je
test
dec
pmaxub
cmc
mov
popf
cli
popa
jb
pavgw
popf
jmp
xor
imulb
jb
sbb
popf
mov
popf
out
push
ds
cli
inc
ja
inc
popf
stos
popf
popa
popf
pop
cmpb
mov
mov
fsts
cmp
popf
cmp
gs
in
dec
pop
jae
outsb
je
in
dec
jg
nop
outsb
and
rorb
xor
fists
das
call
inc
sbb
or
mov
movsb
inc
push
add
jae
or
orl
aaa
cwtl
das
xchg
xchg
mov
dec
push
jns
jmp
xor
adc
push
or
jg
cld
orb
xor
adc
adc
test
cld
sub
enter
push
and
inc
decl
sbb
faddl
and
jmp
aaa
sub
testl
cmpsb
out
and
dec
mov
call
das
push
in
subb
inc
sbb
mov
or
out
or
dec
fdivrl
loopne
ficoms
iret
push
and
lea
les
movsb
inc
and
mov
mov
adc
mov
int
mov
mov
je
mov
push
shrd
add
movsb
or
add
cld
iret
adc
dec
xor
or
sub
dec
int3
imul
pop
clc
add
scas
hlt
dec
mov
or
add
jp
jle
pop
add
inc
lea
mov
negl
insl
out
cmp
fs
adc
insb
dec
xor
int3
mov
sbb
arpl
sbb
mov
cmpb
or
fldl
push
imul
aas
xchg
imul
and
movsb
dec
cwtl
insl
dec
nop
mov
int
jge
mov
mov
jl
insb
call
dec
shrl
pushf
in
mov
or
adc
cmp
int
mov
dec
push
dec
cmp
jns
xchg
add
cmp
add
stc
pop
xchg
insb
test
lods
int3
cltd
outsb
ds
adc
testl
xor
dec
sub
popf
insl
lods
cmp
daa
filds
push
aas
enter
and
int3
cmp
inc
pusha
sahf
cld
pop
frstor
subb
mov
mov
push
jge
inc
ficomps
push
inc
out
inc
cwtl
pop
and
nop
jl
iret
jns
lret
lahf
stos
js
xchg
lahf
gs
stos
leave
push
push
pusha
inc
mov
sbb
aam
push
dec
pop
pop
or
mov
cmp
roll
push
fsubs
push
sbb
es
sub
sbb
mov
cmp
rorl
ficompl
les
and
or
sub
cwtl
arpl
mov
popf
sbb
fs
subb
lret
imull
push
sbb
popf
bound
inc
jl
push
xor
out
testl
in
or
push
or
cmp
mov
sbb
mov
push
les
add
arpl
movsb
aam
dec
xchg
lds
push
mov
mov
mov
sbb
push
add
and
sub
sub
jbe
jecxz
pop
insl
testl
and
add
ds
stos
ret
or
lods
adc
jg
test
inc
sbb
mov
loopne
daa
push
pop
hlt
inc
add
lret
mov
stc
popa
insl
lahf
clc
inc
jmp
sub
fs
pop
or
mov
push
push
dec
shll
adc
mov
xor
adc
add
dec
push
sbb
adc
repnz
test
dec
xchg
cld
sub
jmp
sbb
pop
xchg
dec
push
mov
popa
sbb
sbb
insb
sub
rcll
in
mov
jb
out
fiaddl
cmp
sbb
repz
fidivs
push
add
sub
lahf
dec
int
mov
pminsw
popf
add
je
lds
out
insl
and
inc
sub
add
sub
sarb
mov
int3
sub
pop
or
scas
ret
push
int
push
mov
push
xchg
mov
jle
jmp
xchg
call
inc
ja
pop
dec
add
inc
push
push
mov
jle
sbb
ret
sub
inc
pop
or
pop
xor
mov
push
in
fmull
lods
lea
popa
jmp
movsb
lods
pop
adc
sahf
mov
fildll
test
mov
pop
repz
xchg
sarb
xor
xchg
fstpl
test
sbb
lret
xchg
stos
xchg
or
sub
inc
rolb
mov
sub
int3
xor
repnz
lahf
dec
or
and
push
add
dec
mov
jne
fs
shlb
xchg
lea
or
jae
outsb
out
push
int3
mov
sub
out
inc
or
or
lcall
dec
cwtl
sbb
inc
xchg
or
mov
test
in
push
popf
inc
add
fcoml
inc
int
adc
adc
sbb
sub
and
int
adc
dec
addr16
cmpsl
aam
push
enter
je
cs
js
idivl
dec
pop
fmuls
andb
cld
outsb
nop
in
xlat
leave
andl
sbb
iret
inc
shr
xor
ss
ret
js
dec
mov
mov
mov
jmp
cmp
aaa
push
or
cmpsl
lea
ds
outsb
lods
inc
rcl
add
shll
xchg
pop
pop
jbe
cmp
sub
pop
and
cmc
and
mov
lods
sbb
xchg
push
sahf
fsubrl
out
lcall
sbb
mov
insb
inc
lcall
subb
mov
push
push
les
mov
mov
imul
sub
shl
dec
pop
and
jbe
aas
lods
pop
fcompl
sub
int3
test
mov
les
int3
jb
mov
xor
cld
daa
lea
and
std
fdivrs
imul
jmp
es
and
and
cmp
ficompl
pop
adc
push
mov
das
je
mov
les
sub
movsl
add
xor
or
xchg
cmp
push
jmp
std
cmpsl
mov
sub
lret
int
dec
xchg
pushf
mov
pop
pop
std
jl
test
pop
mov
idivl
adc
xor
out
and
cltd
cwtl
push
repz
jne
lea
dec
mov
imul
cmp
pop
test
jbe
mov
jge
bound
sbb
xchg
test
add
mov
mov
xor
das
push
icebp
andb
xor
and
or
pop
stc
outsb
scas
cltd
mov
push
sub
push
das
repz
outsb
in
and
pop
and
aas
inc
das
cmp
dec
push
gs
xor
dec
mov
add
rorl
mov
inc
jge
imul
dec
cld
cmp
xchg
and
pop
dec
nop
pusha
iret
cld
pop
cmp
add
pop
sub
pop
jo
mov
mov
fmul
std
push
into
inc
minps
jae
adc
pushf
mov
ss
and
jb
inc
jge
inc
into
loopne
loope
xor
mov
int3
lahf
gs
add
pop
push
div
mov
mov
loopew
and
mov
gs
ds
dec
push
out
inc
mov
pusha
push
push
dec
lea
ds
mov
dec
cmp
out
xor
rep
mov
pop
sub
ja
imul
jl
adc
xor
push
sub
mov
mov
pop
scas
cmpsb
popa
lahf
das
cmpb
popl
popl
outsl
jl
pop
sub
cwtl
xchg
push
mov
or
inc
dec
jb
popf
call
ficomps
in
add
aam
dec
ss
pop
xor
mov
lea
popa
sbb
int3
jae
mov
lock
lods
or
lods
insl
jl
jmp
fsubl
imul
xchg
dec
xor
sbb
mov
sub
cmp
jge
lcall
adc
lods
push
adc
mov
test
push
jge
cli
xchg
icebp
lcall
pop
dec
addr16
loopne
jge
fsubrl
sbb
adc
adc
cmp
sbb
sub
ret
inc
sub
mov
scas
les
lret
mov
sahf
xor
rorl
cmp
push
enter
outsl
iret
fwait
and
cs
adc
lea
add
aaa
scas
add
mov
inc
insl
xchg
add
inc
pushf
aas
imul
je
fisttpl
or
push
je
add
pusha
push
iret
loope
and
cmp
push
add
adc
push
je
xchg
cmp
pop
adc
repz
test
gs
call
xor
iret
sahf
jg
fldt
int
mov
mov
ss
dec
les
int
mov
sbb
dec
out
sub
jae
les
test
mov
mov
loopne
inc
dec
fwait
je
mov
js
mov
faddl
repz
sbb
sbb
mov
pop
dec
inc
xor
xor
sub
test
pop
dec
sbbl
imul
sbb
add
jge
xor
pop
shlb
pop
cmp
repz
cs
outsl
inc
mov
hlt
lods
fmull
cmpsb
dec
mov
ds
inc
add
cmp
fisubs
insl
cld
ds
dec
ror
jg
jmp
sarl
mov
in
arpl
lea
fwait
cs
xchg
shlb
push
cmp
sbb
and
pushf
mov
jl
cmp
mov
lods
sarl
pop
pop
xchg
add
push
insb
adc
xchg
jne
je
lea
sub
push
insb
pop
cmp
clc
xchg
or
lea
and
sahf
cltd
adc
inc
and
mov
adc
dec
xorps
add
int3
pushf
int3
std
or
nop
add
mov
int3
imul
aas
sub
sub
fs
cmp
prefetchw
lods
mov
pop
jg
add
pop
sbb
in
out
jmp
push
lods
push
insb
mov
and
int
push
out
and
addb
rcl
mov
mov
cwtl
aam
fs
xchg
xchg
mov
loopne
add
divl
cmpsl
mov
sbb
daa
inc
cld
insl
cwtl
mull
sub
mulb
inc
daa
xor
and
lods
mov
fwait
sub
fidivrs
cmp
outsb
insl
fildll
pushf
lahf
cld
jne
outsb
cltd
pop
inc
pop
iret
clc
or
fiadds
cli
inc
dec
insl
sbb
xchg
pop
mov
inc
int
hlt
dec
push
add
adc
or
cmp
incb
inc
scas
jmp
cmp
aas
in
dec
sub
inc
stos
cmp
adc
or
pop
repz
add
cwtl
int
mull
jmp
data16
xchg
and
mov
sub
dec
or
xor
inc
push
mov
aam
push
movsl
popf
popf
xchg
gs
push
xchg
dec
movsb
xor
xchg
cltd
fsubl
test
inc
das
inc
jge
sub
insl
nop
lsl
fmull
sbb
add
arpl
adc
jle
jp
mov
or
pop
pop
popf
daa
lahf
adc
int
and
dec
test
adc
sbb
pop
fisubs
pop
jno
xchg
add
popa
mov
sub
sbb
xchg
push
lcall
js
stos
int3
inc
mov
mov
jle
and
in
push
faddl
pop
mov
and
pop
mov
xchg
push
mov
mov
pop
icebp
test
in
sbb
jl
int
rolb
les
inc
adc
pushf
fnstenv
push
insb
cmpsb
or
xchg
fstpl
enter
cmp
scas
int3
adc
scas
mov
test
daa
inc
aam
popf
push
fsubrs
fsubrl
loopne
in
add
adc
add
daa
cmp
mov
mov
or
shrb
jno
or
mov
xor
dec
cmp
push
jge
or
clc
or
cld
sbb
add
outsb
cmpb
test
push
sarb
sub
rorb
in
or
sbb
ret
push
cmp
lods
inc
clc
push
fdivl
cwtl
mov
adc
in
lods
jg
xchg
fldt
adc
dec
add
sbb
jmp
lea
push
outsb
out
repz
test
cmp
fs
gs
das
pop
jg
mov
les
aad
nop
sub
insl
test
movsb
or
fsubrl
insb
inc
int
xor
pop
xlat
adc
incb
jne
cltd
test
faddl
add
cmp
leave
call
imul
pop
fcoml
jp
sbb
dec
lods
cmp
sub
pop
xor
cld
hlt
divl
xor
mov
enter
movsl
andb
push
or
sbbl
adc
jbe
rcll
xor
pop
push
mov
int
sbbb
fisubrs
cmp
bound
add
in
jmp
mov
xchg
dec
mov
or
mov
nop
test
and
enter
push
dec
xchg
hlt
sbb
push
pushf
lea
mov
addr16
pusha
int3
fmull
test
fists
jnp
lahf
outsb
int
mov
aam
lret
dec
add
mov
inc
xchg
popf
outsl
sbb
insl
mov
xor
jp
lret
lods
enter
insb
in
test
int3
scas
cmp
pushf
dec
jbe
loopne
lahf
sarl
or
pop
adc
push
movsl
and
fsubr
pop
xor
mov
xchg
xchg
les
add
arpl
ss
mov
mov
roll
lods
sub
subb
aas
fcomip
add
dec
sbb
out
int
jbe
and
mulb
in
pop
sub
or
rolb
sub
cmpsl
test
mov
lock
sub
xchg
in
lock
aas
fsts
sbb
mov
dec
mov
xor
adc
dec
mov
out
jge
add
fdivl
sbb
push
outsl
adc
lret
jmp
mov
dec
fmull
push
fmull
lea
inc
or
or
adc
sub
cmp
shl
mov
mov
mov
lret
sahf
adc
and
cld
fisttps
and
xor
movsb
xor
mov
movsb
and
mov
fdivrs
cmp
mov
sbb
insb
jbe
cld
sbb
inc
jno
xchg
add
movsb
mov
pop
push
lods
arpl
lods
insb
sbb
pushf
add
sub
ljmp
cmp
rolb
movsl
xchg
mov
mov
fisttpl
nop
xchg
cmpb
cmp
cs
xchg
add
push
rclb
lods
fadd
mov
xor
cld
cmpsb
jb
sarl
inc
cmc
push
inc
je
mov
mov
push
push
push
mov
pop
cwtl
ret
jne
into
out
xchg
xchg
lea
jo
cmp
xchg
adcb
dec
pop
sub
push
js
sub
dec
test
sti
andl
cmpsb
cli
adc
cmp
arpl
xor
sbb
and
sub
inc
mov
xchg
jl
and
test
adc
dec
xchg
or
nop
and
xchg
xor
insb
push
adc
mov
cmp
and
loopne
push
dec
or
test
es
adcb
cmpb
loope
cmp
inc
in
imul
mov
and
enter
int
and
les
lea
adc
ret
cld
in
movsb
lret
mov
sbb
loopne
push
es
add
add
in
mov
lea
adc
mov
lods
jle
insl
or
rcl
or
mov
test
enter
cmp
and
inc
stos
sbb
mov
ds
lock
out
jle
or
mov
xchg
jno
out
testl
icebp
pop
and
lea
adc
shll
jae
inc
lret
aaa
mov
fldl
push
or
adc
add
pop
and
sar
cwtl
and
xchg
inc
jle
jge
mov
insb
imul
inc
xor
mov
das
aam
xchg
jo
push
sbb
pop
enter
pop
jo
sbb
rcll
push
sbb
nop
jecxz
insb
sbb
mov
fbstp
sbb
adc
iret
movsb
ret
jb
xor
inc
ret
sahf
jbe
sub
jo
xlat
les
sub
insb
popf
and
fwait
imul
lret
inc
xchg
push
fnstsw
and
adc
int3
jg
les
pusha
rclb
leave
jb
or
xlat
pusha
pusha
lods
add
jo
incb
push
rcll
lock
push
and
call
or
xchg
cld
xor
je
and
or
jns
pushf
fildll
add
packssdw
push
hlt
inc
jl
popf
sub
sbb
sti
mov
or
hlt
adc
push
mov
sub
in
xorb
fsubrl
movsb
outsl
inc
sub
jmp
sub
imulb
movsb
outsl
inc
sub
subl
sahf
or
sub
or
mov
scas
outsb
add
or
xchg
and
fmull
outsb
cmpsb
mov
jnp
int
mov
or
or
cmpsb
jmp
xchg
or
loopne
es
cmc
sub
repz
dec
lea
or
arpl
or
sbb
mov
in
int3
outsb
xchg
pop
xchg
sbb
insb
outsb
jle
adc
mov
jnp
sarb
xor
es
or
sbb
movsl
les
lods
in
or
insb
mov
jl
rorb
push
cwtl
hlt
loope
or
and
cld
outsl
mov
aas
and
ds
das
mov
loopne
cs
sbb
inc
sub
or
mov
pushf
imul
inc
and
mov
cmp
xor
dec
jl
and
inc
inc
fsts
inc
sbb
adc
xchg
inc
loopne
popf
push
mov
insb
ds
testl
out
inc
popf
xor
and
pop
mov
cmc
fsubrs
add
jle
xchg
and
dec
mov
cmp
testl
mov
inc
inc
cld
hlt
and
fs
mov
mov
cmp
pusha
dec
repz
insb
sbb
mov
sub
dec
cwtl
pop
ret
and
popf
add
push
mov
cmpl
cmp
iret
fnstcw
sbb
int
test
paddsw
orb
and
adc
mov
xor
xchg
cmp
push
dec
pop
jno
adc
fists
dec
jne
cmp
cltd
and
push
xor
in
dec
jb
xor
cli
adc
jl
pop
or
add
jnp
cmp
je
inc
enter
popf
inc
insb
cmpsb
lods
or
pop
push
in
inc
pushf
sub
imul
shlb
das
xchg
push
mov
or
lea
shrb
mov
mov
mov
adc
xor
aad
cs
jle
call
imull
hlt
aad
lret
jg
nop
lea
mov
mov
mov
dec
dec
mov
pop
cld
cmc
inc
sub
xchg
rolb
std
cld
rcr
loope
sub
clc
frstor
xchg
cmp
adc
cwtl
fdiv
fcomps
in
mov
das
fnstsw
adc
fistpll
hlt
mov
into
push
cld
fstpl
add
mov
pushf
and
pop
hlt
sbb
les
inc
pusha
pop
inc
pop
sub
add
out
xor
mov
out
scas
jbe
ds
int
xchg
pop
and
mov
xchg
out
mov
shrl
imul
push
int3
repz
hlt
cmp
xchg
adc
cwtl
jae
sbb
cld
scas
or
xchg
inc
and
out
gs
xchg
stc
dec
idiv
rclb
jmp
out
or
mov
adc
pop
dec
aam
xchg
out
and
or
inc
aam
outsl
and
pop
add
push
sbb
arpl
jae
add
outsl
mov
bound
fcom
inc
rolb
into
movsl
mov
bound
sbb
mov
sub
cmp
scas
cmp
enter
cmp
fwait
pop
stos
fcomp
jg
mov
shr
sub
cmp
adc
insb
pop
sub
inc
outsb
push
je
mov
sub
cmc
sub
into
cmp
push
lock
jl
sarb
and
dec
insb
jl
inc
cmp
insb
test
ds
jae
mov
ss
or
add
sbb
pusha
lods
repz
insb
cwtl
mov
mov
adc
test
pop
dec
mov
sub
daa
imul
mov
push
sub
not
adc
js
push
js
or
jl
jb
ret
dec
xor
sbbb
call
pop
sahf
test
ret
test
test
inc
insl
jecxz
pop
cld
xor
cmp
lods
sub
pop
ds
call
or
nop
ljmp
es
xor
sarb
or
mov
mov
je
inc
inc
or
sbb
cmpsb
arpl
je
cmpb
hlt
add
or
movsb
subb
ret
andb
hlt
add
js
cs
test
xchg
or
xor
sub
mov
jp
mov
sub
arpl
add
popf
fldenv
dec
cmp
push
push
lret
xchg
adc
push
mov
sbb
lds
xor
push
sub
mov
sbb
leave
aam
inc
popa
cltd
lods
loop
mov
inc
mov
push
mov
pop
xchg
cmp
mov
in
jb
or
push
push
push
add
push
fs
adcl
push
dec
test
leave
xchg
rorb
js
push
dec
add
fistpl
pop
and
imul
mov
dec
dec
lods
or
mov
adc
out
sbb
sub
jb
and
in
incb
inc
push
dec
dec
or
orb
aas
sahf
xor
add
add
lock
and
in
push
cmp
lock
mov
fisubrl
adc
addr16
test
test
pop
add
aam
enter
insb
icebp
clc
mov
inc
sahf
xor
mov
aaa
xchg
push
je
cwtl
pop
cltd
aad
lahf
xchg
in
lcall
push
xchg
xchg
dec
sbb
int3
insb
xchg
rol
sub
add
les
adc
popf
pcmpeqw
cmp
pusha
xchg
mov
inc
dec
pop
dec
add
movsb
sbb
rorb
pop
std
cli
test
pop
push
pop
fimuls
mov
cmpsb
xchg
cs
mov
insb
push
xchg
je
mov
inc
push
rcrl
cwtl
pop
pop
mov
fisubs
cmp
leave
sbb
jmp
mov
ja
push
xor
rcrb
insb
xor
or
xor
adc
imul
xor
nop
gs
out
mov
das
imull
out
xlat
push
inc
int
sub
add
fsubrl
rolb
mov
push
pop
cs
es
jmp
cmp
pop
repz
cs
sub
clc
sub
insl
dec
cmp
pop
mov
or
int
mov
dec
repz
sub
mov
sahf
adc
mull
outsl
push
lods
int3
xchg
int3
and
mov
insb
sbb
loop
cmp
and
push
ret
in
sahf
push
and
inc
pop
mov
sbb
sbb
inc
fiadds
faddl
add
mov
or
mov
cmp
addl
testl
in
and
push
shll
loope
adc
mov
sub
inc
inc
inc
pop
and
push
test
dec
pusha
repz
inc
jbe
loopne
xchg
pusha
or
enter
jns
and
xor
adc
xchg
pusha
mov
adc
xchg
loop
mov
jno
push
and
fstl
std
mov
int
mov
scas
push
inc
sbbb
mov
fcompl
or
mov
mov
sub
sar
push
pop
outsb
rorl
mov
xchg
popf
xor
xor
push
jne
jge
adc
ja
mov
mov
inc
and
or
pop
mov
or
in
sti
int3
mov
push
loopne
lret
mov
pop
ret
out
fildll
cmpsl
and
std
jmp
jae
sub
das
push
add
jecxz
jmp
jmp
push
cmp
aam
inc
mov
test
pop
imul
sub
test
mov
jno
mov
pop
movsl
mov
jl
sub
ret
xor
cmp
stos
popf
jno
add
aam
shrl
out
test
sarb
mov
fdivrs
inc
mov
push
decl
pop
push
rcrb
divb
jne
fistl
lret
xor
pop
pop
inc
enter
or
fs
shll
mov
xor
pushf
lea
jne
not
lea
mov
push
pushf
bt
or
pushl
lea
je
mov
bswap
jmp
insl
inc
lea
aam
imul
repz
dec
or
mov
jae
push
xchg
mov
push
clc
cmc
dec
and
loop
cltd
mov
daa
insl
hlt
push
icebp
insl
cmp
aas
xlat
int3
cmpsb
xchg
inc
xlat
and
jno
push
std
mov
fs
jmp
sub
subl
mov
jno
or
ja
jp
pop
jno
xor
or
fsubl
jne
mov
movl
pushf
pushl
mov
lea
jmp
lock
add
add
pushl
add
incl
add
incl
pushl
pop
adc
add
adc
incl
outsb
xchg
out
dec
movb
cmp
or
aam
add
decl
ljmp
add
std
pop
add
sbb
pop
incl
dec
mov
adc
stc
pop
out
dec
cli
add
fisubs
addb
push
incl
inc
incl
and
incl
loop
mov
test
incl
shrb
incl
inc
sti
sub
pop
inc
incl
xchg
cmpsb
add
add
incl
mov
adc
jmp
add
pop
adc
xor
lret
add
xor
add
in
add
sub
add
cld
cld
push
lret
add
mov
or
pop
cmp
add
and
lock
pop
das
incl
sbb
int
pop
push
cld
sbbl
pusha
add
incl
cli
call
imul
add
pop
cmp
add
lcall
dec
out
add
sti
xchg
mov
ret
incl
dec
dec
fildl
pop
pop
incl
xchg
lcall
or
push
add
incl
and
add
pushl
push
xchg
push
sub
sbbl
mov
add
or
add
cli
lcall
or
clc
or
lea
adc
fstpl
cmp
incl
cli
call
stos
adc
mov
pop
incl
jecxz
xchg
icebp
int
jecxz
pop
and
cmp
aaa
jl
adc
pushl
push
xchg
push
pop
add
pop
incl
cli
sti
enter
pop
add
add
add
xchg
adc
and
pop
mov
adc
ljmp
pop
mov
add
idiv
sbbl
add
test
push
and
bound
mov
xlat
scas
gs
shlb
xor
and
cmp
add
inc
mov
sub
mov
and
or
and
scas
jp
inc
sbb
lods
nop
pushf
inc
pushf
pushf
mov
rol
pushf
mov
jmp
cmc
pusha
add
pushl
lea
jne
pusha
push
jmp
test
mov
movw
cmp
movw
movb
movw
pushl
lea
jb
push
cmp
movl
lea
ja
test
add
cmc
pushf
cmc
or
call
push
jmp
movb
pushf
lea
ja
bt
stc
clc
push
sub
sub
movsbw
bsr
neg
add
bt
bswap
mov
shl
rol
xor
mov
jmp
jmp
cmc
cmp
jmp
push
dec
push
not
movb
movw
lea
call
pusha
call
push
jmp
adc
push
push
pusha
lea
jmp
mov
xchg
cwtl
bswap
mov
lahf
mov
movzbw
cwtl
lea
jmp
jp
jne
call
pushl
popl
cmc
jmp
call
test
and
orb
pushf
xchg
fwait
jns
lods
enter
inc
scas
mov
adc
dec
shlb
inc
in
xchg
sbb
adc
enter
jb
loopne
xchg
jg
fcmove
stc
jo
ds
outsb
enter
lods
add
jl
out
mov
imul
adc
nop
fimuls
xchg
or
dec
ficomps
hlt
add
sbb
or
jl
push
in
adc
xor
arpl
scas
in
mov
jne
push
xchg
adc
xor
cmp
push
mov
push
data16
ret
cmp
orl
jmp
dec
pop
in
in
stc
sub
dec
jbe
jno
mov
add
je
mov
test
dec
pop
xor
cmp
pushf
push
cmp
sbb
es
outsb
call
data16
dec
pushf
cmp
xor
in
push
xorb
mov
mov
mov
ficoms
push
and
fcmove
gs
dec
test
sub
inc
inc
add
push
mov
xchg
add
and
inc
xadd
adcl
rcrl
jo
out
call
repnz
lds
and
xchg
and
push
push
xchg
mov
mov
xchg
push
call
xchg
js
insb
jmp
ljmp
inc
cmp
pop
stos
adc
sub
push
adc
sbb
pop
mov
xor
add
sub
mov
test
in
push
adc
rcl
popa
jnp
mul
enter
sar
cmp
test
mov
mov
iret
rclb
ds
lret
fcmovnbe
call
add
js
movsb
push
xchg
add
lea
shr
mov
rcl
mov
movsbw
bsf
mov
shrd
add
mov
pushl
not
mov
pushf
mov
jmp
cmp
bt
add
call
jmp
lea
jne
not
pushf
rol
bswap
mov
clc
cmp
stc
add
clc
mov
test
movzwl
bsr
bswap
mov
jmp
dec
pusha
xchg
neg
aam
lea
daa
pusha
btr
movzbl
sub
inc
lahf
aad
aad
push
bt
cmp
call
jmp
sbb
aam
adc
mov
pop
mov
mov
xor
and
aas
pop
mov
lea
fcmove
gs
mov
imul
scas
mov
addl
or
je
loopne
mov
cld
mov
filds
push
into
pushf
push
mov
aam
je
add
es
aam
out
jne
loopne
fsubs
std
mov
push
sbb
out
cmp
jle
pushf
idivb
pop
and
jle
or
add
imul
push
or
roll
clc
push
xchg
roll
dec
mov
dec
mov
fcom
xor
cmc
mulb
jo
and
test
aaa
int
mov
test
jecxz,pn
repz
adc
push
roll
pop
scas
mov
movsl
jl
dec
mov
fwait
mov
mov
mov
pop
mov
add
aad
out
jge
add
xchg
pop
xchg
mov
push
xchg
lcall
enter
mov
cs
test
notl
push
or
xchg
mov
jmp
xchg
push
clc
cmp
sub
add
ss
cli
ljmp
fidivl
push
sbb
add
aaa
cmp
ror
sbbb
mov
push
das
inc
shr
or
lock
pop
or
mov
call
sbbb
jmp
mov
addr16
xchg
jp
test
mov
icebp
pop
dec
jb
mov
hlt
out
jmp
cmp
dec
lahf
enter
div
lods
xchg
or
pusha
cli
xlat
mov
sbb
mov
xor
les
push
xor
mov
movl
jmp
lea
jno
dec
jmp
pusha
mov
pushf
pushf
or
jmp
pusha
jmp
pushf
movb
pushf
or
movb
pushl
lea
je
mov
mov
movsbl
lahf
lea
pushf
mov
movzbl
pushl
lahf
movzbw
pushf
pushl
mov
sete
jmp
sub
bt
jmp
add
cmp
lods
test
imul
push
jno
push
stc
enter
sbb
pop
push
imul
jecxz
mov
rol
jg
lods
mov
jb
pcmpeqb
jb
add
call
xor
mov
lret
jle
out
jl
dec
sbb
sub
pop
mov
ljmp
loope
xchg
or
dec
xor
pop
lock
lcall
mov
test
shrl
js
dec
std
jle
add
mov
mov
aad
adc
pop
leave
mov
and
scas
push
bound
jns
or
xchg
out
test
fbstp
andb
mov
dec
bound
push
sbb
xchg
lods
and
imul
jle
ja
sub
sar
roll
int3
fisubrl
adc
stos
das
mov
je
sbb
mov
xlat
mov
sub
sti
xchg
sbb
xor
stos
mov
aam
or
jbe
test
inc
lods
repz
cmp
push
cmpb
mov
data16
bound
push
popf
push
jbe
sub
imul
cli
lcall
inc
iret
jle
push
inc
mov
repnz
mov
or
jmp
stc
and
dec
inc
cmp
stos
mov
movb
lea
jmp
arpl
push
cld
roll
pusha
pop
sub
dec
out
mov
xor
cmc
imul
pop
cmp
and
out
les
repnz
mov
loope
or
sub
add
das
mov
pop
lock
test
fsubl
jecxz
test
jno
stos
xor
test
loopne
rol
enter
int3
lock
ret
and
out
jecxz
pop
adc
movzbw
and
mov
call
lea
jne
pusha
jmp
jmp
push
cmc
xor
cmc
repnz
jmp
shlb
std
roll
inc
jno
xchg
or
mov
jbe
jnp
cmc
imul
and
outsl
jb
jbe
jb
popa
dec
push
cmc
mull
arpl
jns
jg
or
movsb
mov
jmp
inc
aam
test
fildl
jle
mov
scas
xchg
mov
mov
dec
xchg
andb
movsb
push
ja
iret
sub
jae
add
pop
addr16
ret
pusha
dec
repnz
or
mov
inc
jmp
ret
push
in
gs
mov
cwtl
push
not
movsbw
movl
movsbw
mov
lea
lea
call
adc
push
mov
lea
jmp
movzbl
movsbw
mov
mov
lea
jmp
pushf
dec
test
not
mov
test
shr
movb
pushl
lea
je
jmp
pushl
cmc
movzwl
shld
pop
sar
mov
pushf
cmp
add
bt
mov
movb
test
pushl
pusha
call
jmp
add
add
add
add
add
add
add
adc
add
add
add
add
add
adc
xchg
and
sbb
pop
mov
push
sbb
jle
popa
bound
outsb
push
mov
lcall
pop
int3
gs
inc
gs
or
int
cltd
cmp
pop
addl
daa
or
jne
rorl
cmp
fmuls
neg
mov
shlb
repnz
pushf
or
in
bound
mov
and
enter
rcl
adc
test
out
test
lds
lock
lahf
mov
scas
test
fcom
jg
or
push
inc
inc
adc
fidivl
daa
mov
out
push
addr16
cmp
psllq
jmp
sahf
fcoms
js
aam
mov
mov
test
xor
pop
mov
outsl
pop
mov
mov
loop
dec
ss
inc
fcomip
out
ret
xor
inc
jp
in
jge
jecxz
pop
test
div
dec
xchg
jo
cmp
bound
jns
in
cmp
test
push
out
and
std
call
mov
ss
adc
cltd
addr16
mov
es
ret
pushl
add
add
jb
lret
inc
es
unpckhps
mov
mov
arpl
xor
jbe
add
aaa
jmp
cmc
shll
inc
cmc
sub
pop
adc
or
adc
mov
movsb
lcall
pop
adc
rcrb
inc
mov
outsl
jno
dec
cmpsb
out
lock
call
je
xchg
sbb
arpl
or
jmp
push
adc
inc
loope
xchg
xor
les
inc
xlat
cmpsl
mov
lods
test
mov
sbb
addr16
mov
nop
pop
fistpl
loop
sub
sub
aas
push
sub
dec
repnz
and
rclb
sbb
jb
push
loopne
mov
xor
push
xchg
inc
dec
mov
cmp
and
or
push
or
orb
ljmp
mov
clc
out
std
dec
lahf
mov
push
ja
mov
pxor
xchg
mov
mov
daa
nop
adc
cmc
std
jge
push
pop
andb
mov
push
adcb
pmuludq
push
or
mov
sub
adc
or
sbb
adc
inc
mov
mov
ret
sbb
sbb
aas
sbb
xorl
sahf
sub
test
push
sub
mov
jg
jb
mov
pop
pop
int
stos
jp
sub
sbb
mov
mov
mov
or
adcl
inc
loopne
daa
xchg
lods
adcl
pop
sub
push
push
pop
jg
ror
shl
or
inc
bound
or
pop
test
rcrl
sbb
xor
mov
sub
insl
popa
aam
fistpll
aam
inc
xchg
xchg
push
sbb
lret
pop
shll
lret
mov
inc
mov
xor
inc
sbb
xchg
imul
outsl
test
or
loope
outsb
mov
dec
movsb
dec
fisubs
stos
dec
inc
pusha
in
jae
and
fistpl
test
int
imul
pop
test
loope
in
xchg
in
pop
iret
pop
notl
scas
out
mov
into
test
dec
cmpl
and
imul
xchg
xchg
test
push
cmp
sbb
jo
decb
rcl
loope
inc
add
cmp
mov
add
loope
push
cmpsl
push
je
push
vdivsd
cmp
jns
jg
mov
jmp
or
pop
adc
sub
into
and
ja
mov
xchg
arpl
dec
dec
test
loope
xor
jmp
les
cwtl
pop
or
inc
popf
ds
xor
mov
sbb
or
jp
loop
dec
push
push
xor
inc
xor
push
imul
mov
lret
jno
testb
jo
dec
inc
data16
mov
mov
lods
jnp
repnz
cld
cwtl
decl
int3
iret
mov
or
push
mov
shll
xlat
pop
adc
stos
push
pop
sub
pop
insl
in
push
pop
dec
aas
xchg
mov
lock
cmp
sti
rclb
mov
insb
lahf
pop
subl
pushf
mov
cmp
inc
fistl
hlt
jns
pop
pop
mov
mov
sarb
mov
sbb
clc
push
jp
dec
sbb
ss
repnz
xchg
sbb
jnp
sub
ljmp
mov
mov
jge
lcall
mov
add
jp
les
xor
jl
mov
lock
mov
out
shl
add
ds
jp
dec
jl
notl
ljmp
fwait
or
xlat
xchg
sbb
or
mov
mov
xchg
orl
and
pop
outsb
ds
mov
outsb
lods
dec
jae
inc
fistl
mov
rcl
mov
inc
jp
sub
pusha
sbb
xor
loope
lahf
je
sub
dec
aad
dec
ret
popf
inc
fdivl
pop
xchg
pop
adc
jo
sbb
jge
pop
push
shl
jb
or
shrl
int
lcall
mov
or
pop
cmp
imul
cmpsl
aam
repz
scas
sahf
shlb
icebp
enter
jg
mov
popa
cwtl
repnz
fcoml
xchg
and
out
pushf
les
mov
adc
jecxz
lods
in
loop,pt
fstl
xchg
mov
test
scas
andl
push
scas
mov
std
ficompl
subb
test
jmp
aaa
sub
pop
mov
aad
fimuls
or
shr
xchg
jae
cltd
or
lcall
test
xor
inc
out
xchg
cmp
in
in
imul
dec
jo
mov
into
js
loope
xchg
ret
into
in
or
inc
ljmp
xor
push
aas
std
ja
in
out
xchg
push
sbb
inc
into
jecxz
add
xchg
inc
andb
jnp
and
fcomps
orb
int
stos
mov
adc
inc
ds
cvtps2pi
adc
adc
cld
sbbb
int
cmp
arpl
lods
data16
dec
lock
je
dec
ja
pop
mov
mov
xchg
out
xor
out
mov
push
sbb
lods
xchg
inc
enter
jl
das
mov
mov
cwtl
mov
imul
sbb
insl
pop
push
clc
sbb
add
bts
sbb
mov
lret
add
jo
jp
adc
jb
jge
cmp
dec
cli
stos
popf
stos
mov
insb
aam
or
cmpsb
data16
sbbl
mov
push
pop
pop
sub
iret
mov
sub
lock
ficoms
fistl
xchg
mov
dec
xchg
mov
out
nop
cli
xor
push
stos
or
es
jb
test
sar
mov
mov
in
orl
xor
inc
cmp
add
xchg
stos
movsb
hlt
dec
mov
sets
cmp
and
xchg
mov
test
adc
imul
movsb
push
test
andl
popa
sub
xchg
test
jnp
fimuls
in
xchg
cmpsb
bound
mov
fistps
popf
pop
xchg
mov
shrb
inc
sub
pop
aaa
inc
scas
sbb
or
pop
orl
mov
push
xor
mov
sub
jne
push
mov
inc
push
out
sub
cmpsb
pop
mov
xor
std
push
outsl
ret
xchg
jne
jecxz
enter
lret
aas
dec
das
sbb
enter
push
jge
pop
mov
xlat
sti
das
pusha
xchg
ja
hlt
mov
aad
mov
clc
jg
call
mov
sub
pop
jnp
sahf
shlb
test
xor
adc
mov
aad
out
inc
sub
push
out
in
adc
cmp
push
jmp
jg
sbb
fists
fidivrs
sub
jmp
push
gs
mov
sbb
loope
cmp
popa
repnz
lahf
xlat
push
testb
das
mov
jmp
sbb
mov
stos
mov
pop
dec
ffreep
mov
add
xchg
mov
push
mov
inc
inc
sahf
pop
jae
sub
sub
mov
push
jge
add
dec
mov
cmp
icebp
sti
jle
clc
hlt
lret
das
shl
imul
cmp
dec
fistpll
shlb
mov
inc
call
testl
jl
test
inc
fbld
push
and
push
lret
sbb
icebp
mov
insb
call
jno
dec
add
aam
imul
data16
sub
adc
push
test
pop
rcr
jmp
loope
sbb
hlt
lret
mov
adc
mov
scas
das
cmp
xor
scas
push
dec
fidivrs
call
cwtl
jne
negb
arpl
insl
mov
mov
sub
movb
out
mov
ds
jl
inc
add
sbb
mov
jle
or
jno
mov
xor
dec
push
mov
fadd
push
out
leave
hlt
mov
cmp
sbb
jbe
mov
sub
popl
into
mov
mov
and
sti
ss
lret
push
and
fsubs
or
call
cld
mov
lods
pop
mov
mov
movsl
int
mov
jp
adcl
xchg
ret
pop
sub
mov
gs
jle
je
cmp
adc
sbb
and
adc
add
sahf
add
jbe
iret
jne
pop
mov
mov
xor
jae
xchg
leave
mov
push
sbb
mov
in
mov
mov
fnsave
xlat
outsl
rol
jno
mov
add
xchg
enter
sahf
xor
popf
xor
xchg
repz
test
xchg
loope
cltd
and
jp
mov
mov
je
pop
pop
jbe
push
clc
imul
ljmp
lret
inc
stc
addr16
mov
inc
mov
and
out
enter
or
cwtl
mov
cmp
das
sahf
out
push
sbbl
pusha
mov
mov
cmp
movsb
xchg
adcb
popl
rorl
inc
jbe
sbb
mov
cld
add
stos
jge
push
jle
lret
pop
mov
fwait
out
or
cmc
ss
xchg
jne
ret
add
add
test
test
and
pusha
pusha
add
push
mov
movb
lea
jmp
movl
call
out
pmaxub
roll
lcall
stos
adc
dec
in
leave
test
mov
cmp
arpl
inc
push
arpl
cmpl
test
add
jne
or
cmp
int3
jo
sub
std
sahf
gs
xor
mov
and
sti
mov
push
mov
cmpsl
mov
stc
sti
scas
daa
sub
in
roll
mov
xchg
cmc
pusha
inc
scas
ret
mov
rcrl
push
cld
push
inc
dec
fcoms
and
jb
dec
or
pop
pop
sub
sbb
nop
mov
cmp
adc
mov
in
push
push
leave
loope
movsl
jecxz
in
outsl
movsb
fimull
cmp
cmpsl
pop
mov
outsl
out
push
incl
pop
push
dec
pushf
faddl
lods
xchg
std
push
inc
and
pop
imul
mov
pusha
xchg
inc
xchg
mov
into
in
inc
shlb
fmull
mov
leave
scas
int3
rcrl
in
stos
cmp
mov
das
and
cs
cmp
pop
in
and
add
or
and
inc
insb
or
fimull
insl
cmp
jno
add
dec
sub
movsl
ja
out
cwtl
sub
inc
into
testb
add
sub
pop
push
cltd
mov
roll
pop
loop
pop
jecxz
cwtl
cmp
or
cmp
xlat
les
or
out
stos
lods
fistpll
fadds
fs
dec
xchg
repnz
call
call
and
cmp
roll
popf
push
mov
sbbb
addr16
push
adc
stc
iret
pop
test
in
popf
cwtl
mov
lret
inc
pop
sahf
jne
xchg
aas
jne
inc
mov
lds
inc
adc
jle
dec
scas
outsb
insb
xchg
sub
mov
lea
dec
fdivr
popf
add
out
cld
sbb
sbb
and
pop
popf
mov
xchg
cmp
lret
outsb
cmp
pushf
jge
out
sbb
xchg
cltd
cmc
or
decb
add
inc
leave
fmul
add
and
lret
pop
fistpll
lahf
mov
bound
cmp
pusha
rolb
movb
stos
push
ret
outsb
mov
pusha
aaa
sbb
mov
test
daa
sub
mov
ljmp
xlat
lock
aam
scas
mov
and
add
outsb
insl
rorl
das
push
test
pop
mov
or
add
cmp
adc
cltd
or
popa
fbstp
add
mov
idiv
shrl
xlat
dec
lahf
mov
aam
push
jl
movsb
test
mov
loop
in
sub
xorb
cmc
push
in
mov
jge
icebp
lahf
add
sbb
adc
cmp
inc
fistpl
stos
and
dec
outsb
stos
subl
mov
inc
imul
sti
sub
pop
sbb
sub
cmpsl
lock
jecxz
pop
loop
aas
cld
pop
repz
push
push
or
out
and
or
cmpb
and
jo
sbb
ja
filds
cmpsl
adc
loope
cmp
jecxz
lea
pop
fsubl
lahf
testl
push
mov
xchg
imul
gs
lahf
xor
mov
or
add
insl
inc
insb
or
and
push
popf
sti
stc
loopne
outsb
xchg
and
mov
and
inc
lahf
lcall
std
jmp
icebp
pop
jae
repz
jecxz
jb
clc
dec
add
icebp
fnstcw
mov
sti
mov
clc
sub
push
std
inc
inc
mov
out
pop
and
in
fbld
sub
sub
lock
mov
es
incb
outsb
stos
in
cmc
and
push
sti
or
push
xor
mov
push
add
cmpsb
cmp
in
dec
stc
adc
xor
pushw
mov
nop
push
xor
push
out
sahf
add
jb
movsl
xchg
xchg
xor
push
cmp
dec
mov
enter
shll
insb
lahf
orl
mov
and
mov
jmp
stc
jge
add
fcoml
cmp
push
inc
xor
or
dec
and
test
imul
adc
jge
xchg
int3
mov
orl
daa
aaa
inc
test
sbb
sbb
adc
cmp
je
xchg
xchg
push
push
and
pushf
xor
jb
popa
test
notl
lahf
fsubrl
jl
or
inc
push
lods
out
sub
pop
icebp
pop
dec
xor
mov
or
add
xchg
ret
inc
popf
dec
pop
mov
in
or
push
repnz
add
ja
jne
and
mov
dec
and
jl
or
dec
fsts
int
cmp
lds
cltd
ljmp
add
lret
or
fists
mov
sbb
out
jecxz
mov
sbb
dec
cmp
jns
cld
jl
pop
int3
jg
enter
mov
mov
adc
mov
dec
adc
dec
and
push
jl
jmp
punpckhbw
mov
mov
lahf
xor
push
call
or
and
popf
sub
or
push
aad
mov
and
jmp
icebp
mov
fsubrl
cmpsl
sbb
les
pusha
push
sub
mov
inc
fdivrs
cld
repz
lahf
push
mov
xchg
ds
xor
pop
add
cmpsl
or
aam
cli
push
cmp
filds
or
andb
mov
ljmp
add
std
out
xchg
ficomps
jno
cs
jae
rcl
sbb
sbb
lods
lods
popf
js
mov
int3
stc
inc
imul
mov
and
adc
adc
outsb
adc
mov
bound
adc
lahf
cmp
xchg
outsb
sarl
and
ljmp
ja
inc
sbb
cmp
mov
sub
cmpsl
idiv
jne
xlat
push
mov
fdivs
dec
jo
mov
sub
out
popf
sbb
ret
iret
mov
mov
in
jl
movsb
loopne
xchg
push
sbb
popf
nop
xchg
add
sub
push
outsb
dec
sub
lds
ss
inc
adc
mov
lock
xchg
sbb
dec
pop
jns
xor
lahf
iret
inc
addr16
or
cmp
sbb
inc
dec
mov
or
sahf
mov
fbld
leave
lods
cmp
and
dec
mov
sub
xor
jp
aad
mov
sbb
nopl
sub
in
andl
sub
aaa
pop
sbb
repz
mov
sbb
cmp
rcr
push
ret
and
adc
cs
or
or
adcb
mov
push
jnp
sbb
aaa
inc
jne
push
push
dec
adcl
xchg
mov
pop
pusha
ds
repz
cmp
sbbl
and
data16
ret
aas
mov
and
popf
fldt
iret
ffreep
sub
sbb
inc
mov
xchg
push
mov
pop
cmp
fdivrl
jl
mov
fiadds
jmp
mov
ds
int
lea
cmp
inc
mov
mov
or
cmp
insl
lea
pop
sbb
std
pop
int3
pop
pushf
pushf
mov
cwtl
sbb
cmp
nop
sub
or
push
dec
push
movsb
inc
bound
orb
int3
or
mov
outsb
cmpsb
out
outsb
and
mov
and
mov
in
inc
dec
jle
ds
cmp
fistpll
pop
add
sahf
or
dec
sarl
cld
adc
push
xchg
mov
jle
iret
push
sahf
mov
cld
ficomps
wbinvd
jno
popf
jl
std
daa
mov
pop
es
cs
mov
xchg
mov
or
or
mov
outsl
les
scas
sarb
aas
inc
mov
add
cld
or
les
cmp
mov
mov
ds
incb
in
popf
jg
sub
movsl
sarl
push
dec
jmp
lret
pop
or
cmc
scas
test
sahf
lahf
cs
push
dec
and
in
push
dec
and
and
fistpll
dec
faddl
dec
mov
hlt
cmpsl
fdivrl
je
pop
mov
lock
cmp
mov
adc
pop
insb
jno
adc
cs
pop
adc
sahf
and
and
sub
push
ds
cld
mov
add
jecxz
in
adc
subb
sbb
fisubs
in
out
in
pushf
clc
fistl
repnz
movsb
jge
rcll
jno
cmp
cmpsl
and
jae
xchg
sub
fisubrl
xchg
pusha
fcmovne
scas
nop
repz
adc
mov
cmp
lods
out
outsb
jg
mov
lahf
dec
jbe
std
add
sub
outsb
jecxz
push
sub
cli
cmp
mov
push
sbb
xor
cmp
mov
es
adc
push
shrl
sbb
sub
and
jecxz
pushf
push
hlt
or
push
fs
xchg
aaa
mov
adc
xor
xor
addr16
rorl
lahf
lret
fcomi
ja
mov
push
imul
pop
jge
fists
and
stos
or
nop
es
or
sub
cmp
das
cld
mov
outsb
jge
lahf
imul
jl
pop
dec
and
xchg
xchg
dec
jl
or
sbb
or
adc
cmp
or
sub
push
sub
mov
sbb
adc
mov
jbe
ret
je
sub
adcb
sub
xor
and
sub
repz
xor
mov
bound
mov
jl
cmp
ret
adc
jge
jae
in
insb
inc
inc
mov
sti
inc
add
adc
fbstp
sbb
mov
adc
cmpl
mov
je
std
outsb
outsb
popl
xchg
in
cmp
out
popfw
sbb
lods
fcomps
pushf
mov
mov
insl
mov
out
pop
or
ret
lock
std
insb
popf
sub
out
cmp
js
xor
fdivrl
cmp
or
daa
xlat
pop
ja
jb
jb
sub
pop
or
mov
lods
addr16
xchg
jp
pop
mov
das
nop
mov
dec
jbe
and
jecxz
sti
or
into
jg
xlat
hlt
add
mov
jmp
pop
popf
jg
rorl
push
insb
sbb
dec
jge
or
mov
sub
ljmp
pop
push
in
aad
add
lahf
and
xchg
jmp
andl
in
add
mov
repnz
std
insb
xchg
fsubl
push
icebp
lahf
mov
sbb
inc
sarl
mov
sub
mov
xor
and
pop
lahf
fmuls
lcall
and
pop
cmp
scas
out
lods
in
push
aad
adc
mov
pop
or
fistps
jo
loopne
jge
es
mov
js
stc
dec
xchg
hlt
adc
fs
dec
jmp
lods
popf
lret
pop
sub
adc
jbe
mov
mov
mov
arpl
add
add
xor
pop
mov
jecxz
jnp
sbb
es
sarb
xor
add
subl
mov
mov
mov
dec
fstpl
test
sbb
mov
notb
shrb
cmp
adc
and
push
inc
mov
shlb
pop
cmpsl
pop
push
sbb
cmp
sub
or
pop
negb
jg
sbb
mov
sbb
out
mov
sbb
fs
mov
dec
xchg
pop
cmp
xor
mov
imul
push
push
push
cld
mov
or
mov
or
push
sbb
jne
int3
sbb
adc
mov
and
orb
cli
xchg
cmp
add
fdivrl
je,pn
inc
mov
int3
adcl
cmp
mov
sbb
cld
subb
dec
and
fnstsw
dec
or
inc
lea
push
and
mov
adc
pop
dec
or
lods
popa
insl
adc
sub
cmpl
cld
jge
dec
in
xor
dec
insb
dec
dec
add
fldl
sahf
cmp
mov
mov
scas
push
dec
cmp
popf
dec
in
cmp
jle
scas
scas
jl
into
dec
sub
xchg
mov
mov
sahf
cs
inc
pop
cs
add
cmp
mov
push
sub
push
jp
out
pop
mov
mov
sub
push
sahf
pushf
xor
cmp
pop
lea
sahf
pop
dec
push
mov
in
ds
and
xchg
lods
popf
add
mov
out
sbbb
das
push
mov
xchg
int3
int3
aas
lea
mov
push
mov
or
movsb
pop
inc
fcompl
out
cs
dec
jle
push
adc
dec
js
jmp
and
daa
mov
repnz
fistl
dec
xor
push
xchg
ljmp
xor
in
sbb
movsl
pop
pop
outsb
jno
cltd
and
dec
xchg
push
test
std
cli
cmp
jne
into
xor
cmp
js
out
cwtl
and
popf
inc
lods
xchg
jno
add
xchg
push
add
popf
insb
xor
xor
aas
cmpsl
aas
inc
push
and
cmp
decb
mov
push
popf
lea
dec
pop
jns
test
packuswb
fisttpll
push
clc
or
popf
mov
out
inc
inc
mov
lahf
fcoml
jb
cmp
jns
mov
pop
jecxz
xchg
and
adc
dec
mov
scas
jg
ss
aas
test
cmp
pop
insb
test
or
popa
pusha
jl
sbb
lahf
in
cmp
popf
pushl
inc
cmp
jno
jge
mov
add
inc
outsb
les
cs
popa
or
cmc
adc
sub
mov
or
cmp
xor
cld
jg
and
push
dec
inc
dec
movsl
sahf
sbb
jl
outsb
push
lods
jbe
dec
imul
pushf
mov
test
ja
and
fistl
nop
cmp
sbb
out
lds
pop
jl
cld
bound
fcmovu
mov
lcall
and
xor
inc
or
adc
fwait
dec
sbb
pop
mov
or
out
dec
push
loop
push
xchg
mov
je
jp
ss
dec
movlps
mov
inc
test
outsb
das
pop
into
inc
push
lahf
loop
cs
rcll
push
push
dec
cmovno
mov
fsubl
lods
or
pop
cs
or
test
and
adc
dec
std
jge
jbe
je
inc
mov
rorl
inc
xor
mov
dec
mov
jmp
or
push
xchg
outsb
pop
adc
adc
xlat
or
insl
jp
mov
movsl
jecxz
fldl
and
mov
lds
inc
mov
mov
add
xor
cld
in
sub
dec
cmp
inc
jnp
std
imul
or
and
sarl
lret
mov
icebp
es
cmp
mov
ret
mov
arpl
fldenv
jge
jg
std
jmp
or
roll
jae
lahf
out
clts
or
add
jge
cmc
xor
push
lahf
fsubrs
in
outsb
mov
lahf
or
and
mov
inc
mov
mov
cmp
pusha
mov
jge
stc
andnps
pop
dec
mov
outsb
dec
daa
sub
leave
add
cmp
and
inc
xor
shll
and
cwtl
jl
clc
pop
lahf
insl
lods
sbb
mov
sbb
test
in
mov
lahf
pusha
scas
jecxz
sub
cmp
outsb
add
pop
inc
nop
mov
dec
cmp
jbe,pt
cwtl
xchg
dec
dec
sub
mov
jno
xor
mov
xchg
jle
xchg
sbb
pop
sbbl
ljmp
mov
pop
pop
sub
push
mov
mov
clc
ds
out
dec
popa
sbb
cld
dec
mov
test
adc
sbbb
popf
arpl
sbb
lcall
sbbl
adc
scas
outsb
mov
fdiv
jmp
stc
and
lret
mov
pop
loope
sbb
and
push
push
jle
popfw
xor
loope
jmp
sar
push
jge
std
mov
jle
es
pushf
cltd
sbb
andb
popf
in
minps
jmp
push
cmp
mov
or
push
push
sbb
aam
jmp
imul
lods
lahf
movsb
bound
xchg
inc
xlat
shll
mov
inc
inc
or
lret
std
pushf
xchg
pop
jno
setns
mov
mov
sbb
in
sbb
add
xor
movsb
std
out
ds
sbb
xlat
or
addb
lret
imul
outsb
cmp
push
clc
xchg
lock
sub
incb
fadd
arpl
mov
sub
and
sbb
cli
fldenv
mov
pop
dec
lahf
leave
mov
fstpt
and
sub
sub
jnp
pop
popa
aad
or
sub
sbb
icebp
mov
jno
cmp
jmp
dec
sbb
repz
sti
dec
hlt
adc
add
adc
sbb
test
fcompl
mov
or
dec
inc
imul
aam
cld
sub
loopne
mov
mov
add
pop
fildll
pop
adc
cmp
dec
int
xchg
push
mov
testl
rol
mov
add
cmp
out
add
jg
lds
add
xchg
xor
popa
xchg
fnstsw
fs
push
rorl
sub
test
cmp
pop
and
jle
lahf
and
cld
fists
push
jge
mov
pusha
cmp
pop
sbb
shll
pop
or
xchg
add
pop
mov
push
add
cmp
nop
insl
cmp
lahf
in
lods
xorb
push
pop
push
push
pop
adc
test
popf
ds
inc
cmc
aad
lahf
pop
mov
xor
loope
jge
add
mov
and
mov
lahf
stos
cmp
mov
adc
push
int3
and
clc
adc
mov
add
fistpl
cld
repnz
imul
jne
push
adc
dec
and
test
xlat
dec
and
cmp
or
xchg
loop
mov
bound
pop
test
and
mov
sbb
movsb
push
std
das
dec
iret
pop
adc
inc
movsl
orb
aas
sbbb
mov
mov
iret
xchg
cmp
push
out
dec
xor
inc
sbb
in
iret
sbb
ds
outsb
add
sbb
mov
jge
ds
je
outsb
jne
gs
jl
std
pop
les
std
lahf
pop
sub
mul
add
test
jg
pop
mov
mov
inc
fcmovnb
sub
mov
sub
or
ret
add
dec
jge
pop
lock
bound
cmp
incl
fdivr
das
rcl
imul
popf
je
sar
xor
mov
jecxz
fcompl
dec
lret
push
adc
adc
rol
jl
mov
jl
mov
imul
aam
aas
or
inc
adc
dec
cmp
jns
lds
aad
outsb
cs
ss
mov
imul
out
push
sub
mov
mov
sbb
mov
gs
add
cmp
mov
xor
push
into
movsl
cwtl
adc
sub
inc
mov
inc
mov
cltd
sbb
sbb
push
outsb
outsb
les
test
pop
push
mov
fimuls
leave
inc
movsb
sub
call
sub
and
loope
adc
mov
xchg
dec
xor
pop
ret
cltd
add
lock
and
nop
pop
sti
mov
sub
mov
and
std
div
push
inc
mov
mov
pop
sbb
fldcw
push
sbbl
cmp
aad
adcl
inc
mov
mov
fisubs
cmc
and
mov
mov
pop
and
movsl
test
mov
inc
mov
outsb
pop
test
inc
inc
leave
mov
cmpsb
lea
push
adc
jge
or
jno
adc
je
std
mov
xor
mov
ret
lret
repz
cmp
sbb
sub
jmp
out
push
push
pushf
sub
push
xchg
inc
cwtl
xchg
out
xorb
fcompl
jle
adc
or
aas
roll
insl
mov
lcall
les
test
mov
pop
cld
xlat
or
iret
xchg
adc
jmp
sbbb
cmp
inc
mov
je
xchg
rorl
mov
or
inc
adc
jmp
mov
cmp
in
gs
or
adc
or
rorb
mov
cmp
sbb
adc
ds
xchg
mov
sbb
mov
pop
jecxz
mov
jo
push
lahf
or
xchg
mov
fldt
add
pop
sbb
rcrb
inc
pop
cmp
mov
std
jle
addr16
idiv
pop
or
xor
cmp
cltd
jb
jg
xchg
add
fs
xchg
lock
cmp
pop
sbb
dec
inc
sbb
cmp
add
daa
jnp
cmp
nop
pop
mov
cmp
addps
out
fcmovnu
call
or
add
lea
inc
adc
iret
ss
sub
in
mov
mov
incl
mov
add
jne
test
cmp
dec
dec
js
jmp
mov
cli
mov
inc
sbb
mov
pop
testl
lock
sarl
popf
clc
mov
nop
mov
pop
testb
xlat
push
cs
jmp
jp
xor
jecxz
add
pop
stos
inc
jl
or
xor
push
or
stos
fimuls
lret
jl
xlat
push
incb
adc
lahf
negl
and
mov
addl
pop
int3
lahf
sti
dec
push
push
dec
push
aaa
inc
pop
mov
cmp
scas
sti
inc
aas
adc
and
cmp
jle
jge
fisubrs
into
jle
gs
test
adc
or
std
cmp
pop
lcall
movsb
je
jg
jns
xchg
or
leave
sub
mov
or
repz
and
scas
pop
mov
ja
js
xor
fwait
mov
mov
fmulp
mov
call
cmpl
or
add
inc
add
addl
sub
push
push
xor
sub
add
push
dec
cld
mov
ret
cmp
es
cmp
pop
push
inc
js
insb
jnp
fsubrl
lahf
mov
xchg
mov
cmc
lret
das
sbb
pop
std
cld
jns
js
arpl
mov
out
dec
and
or
mov
je
xchg
inc
push
arpl
or
add
jns
cld
sarb
push
lock
sbb
es
sbb
ds
adc
dec
cmp
lret
std
xchg
pop
mov
int3
nop
in
ret
test
cld
xchg
sub
inc
mov
sbb
inc
cld
fdivp
jo
out
cmp
inc
call
pop
cltd
subb
add
fistpll
popf
xor
setnp
lahf
or
adc
daa
sbb
lods
or
dec
inc
mov
sti
mov
cmp
adc
sbb
cld
dec
std
push
sti
mov
data16
mov
movsb
sub
in
dec
xor
lods
push
imul
pusha
std
lret
sahf
adc
mov
addr16
mov
sbb
mov
dec
popf
dec
pop
inc
syscall
sbb
mov
push
fists
push
cmpsb
sub
fcompl
xchg
stos
or
mov
add
std
jl
xchg
sahf
ljmp
daa
das
add
push
jl
mov
fisubs
push
sub
mov
fs
sahf
mov
std
inc
dec
lods
decl
dec
fmull
mov
cld
dec
insb
inc
dec
lods
push
inc
jle
lea
incb
dec
dec
mov
test
rcrb
out
dec
mov
std
and
ds
fstpl
and
pop
int3
inc
mov
dec
cld
push
popa
in
sbb
push
jge
pop
sbb
xchg
cmp
inc
in
sbb
sbb
lea
push
outsl
xchg
fisttpll
sahf
xchg
cld
dec
pop
sbb
inc
push
es
mov
pushf
sbb
fs
in
sub
pop
or
sbb
pushf
pop
lock
pop
in
dec
or
jl
repnz
nop
and
shlb
xor
loopne
inc
xor
decb
add
in
inc
int3
daa
push
adc
jge
add
mov
inc
jg
push
gs
lea
jecxz
ret
mov
inc
lahf
aad
dec
add
cmp
mov
or
dec
cs
cmp
jge
les
gs
inc
jae
and
lahf
xchg
ljmp
pop
sti
inc
shlb
iret
mov
mov
and
arpl
sbb
int3
loop
inc
sub
or
pop
psubsb
pop
addr16
sub
adc
jmp
inc
mov
or
test
sbb
jl
hlt
test
sub
mov
and
fldl
jbe,pn
and
mov
add
xchg
adcb
dec
addr16
adc
adc
sub
and
shrl
int
mov
sub
pop
cmp
insb
popf
sub
cltd
sub
adc
pop
lret
lahf
mov
das
test
aaa
mov
inc
or
fwait
jge
aad
div
add
cwtl
mov
xchg
test
int3
sahf
cmp
jno
popf
inc
sbb
mov
sub
cmp
out
sub
jns
adc
loopne
repz
in
add
or
sti
inc
incl
repz
adc
sub
pop
sub
add
in
xchg
lds
push
lods
mov
ds
xor
mov
mov
jmp
jge
cmp
js
inc
fisttps
enter
nop
test
pop
pop
inc
je
xchg
inc
jns
cmp
cmp
cs
and
out
inc
push
dec
daa
mov
testl
int3
or
sbb
mov
adc
inc
lahf
ds
pop
push
and
mov
lods
xchg
test
loop
js
rcrl
push
jl
sub
jl
dec
cld
mov
or
add
cmpsl
test
cmp
mov
lret
mov
inc
xchg
mov
jl
jbe
xchg
std
popf
dec
pop
xchg
cmp
dec
push
jae
mov
cli
dec
and
inc
dec
imul
inc
adc
xlat
js
in
ds
adc
add
mov
sbb
into
pop
sbb
sub
outsl
pop
push
mov
sbb
fisttps
jg
adc
xlat
aas
ret
cmp
and
leave
pop
mov
sbb
pop
aas
cmpl
pop
mov
sub
pop
mov
xchg
sub
cmp
adcb
int3
aas
xor
std
mov
divl
std
jecxz
mov
sarl
sbb
andl
sub
and
dec
dec
cmp
pop
out
adc
lret
outsb
adcb
pop
xchg
fistpll
notl
pop
orl
xchg
mov
insl
cmp
push
adcb
outsb
lods
lret
push
pop
push
sub
mov
movsl
and
fmuls
sub
xchg
pushf
add
pop
scas
mov
cmp
cmc
push
add
adc
int3
daa
sub
inc
xor
cmp
or
mov
loope
pop
cmpsb
mov
ret
jmp
pop
rolb
sub
pop
popf
repnz
pop
mov
dec
jb
mov
cwtl
sub
sbb
jecxz
xchg
scas
adc
push
jge
scas
fwait
lahf
gs
mov
jb
sbb
sub
xlat
add
mov
adc
mov
jg
mov
insb
xor
sar
lods
adc
mov
fbstp
adc
cmpb
sbb
pop
jbe
or
sbb
fimull
int
jae
jg
daa
push
inc
jmp
inc
popf
loope
xlat
xor
xor
xlat
lea
imul
aad
jbe
js
popf
sub
mov
pop
mov
pop
pop
fs
sub
mov
jne
into
and
and
sbb
imul
adc
arpl
lahf
repz
gs
or
xor
push
jno
mov
sub
mov
inc
sub
jge
in
dec
std
mov
mov
push
fmull
jle
nop
xchg
rcpps
push
jmp
cltd
pop
in
insl
add
sub
icebp
mov
outsb
insb
adc
outsb
xchg
shll
adc
in
scas
stos
sub
addl
jecxz
or
cmp
inc
dec
xlat
pop
les
dec
sub
ret
ficoms
cmp
mov
popf
and
shll
ficoms
es
dec
mov
and
lods
inc
out
or
mov
mov
mov
outsb
outsl
or
mov
xlat
aas
jo
fwait
adc
inc
mov
push
mov
mov
jo
pop
idivb
outsb
imul
ja
sub
xchg
lcall
notl
push
jns
inc
xorb
and
pop
mov
int3
xchg
or
movsb
inc
pop
adc
aas
mov
cmp
pusha
or
mov
cld
lea
xor
add
loopne
inc
pop
int
repz
sbb
jge
dec
add
insb
mull
cmpsl
mov
and
mov
lahf
aas
scas
aam
add
xor
lds
lock
mov
add
xchg
das
and
jle
sub
stos
daa
hlt
lods
jg
outsb
int3
jmp
and
sub
inc
jl
pushf
ljmp
xchg
icebp
int
insl
outsb
xor
aaa
xchg
sub
clc
xchg
or
inc
jge
mov
dec
sbb
gs
in
cmpb
aad
pop
fwait
call
loop
push
pushf
and
xchg
add
lcall
fwait
xor
push
mov
cmp
lahf
inc
mov
insl
cld
scas
and
and
lods
xor
setg
lods
adcl
cmp
push
popf
std
lahf
xchg
fisubl
adc
pop
jecxz
sti
jne
inc
dec
push
mov
popf
rorl
xor
outsb
xchg
pop
gs
and
fcomi
and
test
js
lods
pop
imull
jge
or
push
mov
rcrl
shr
lcall
fbld
jecxz
lret
inc
loopne
das
add
ret
imul
dec
orl
fistps
cld
ljmp
mov
sub
xlat
fdivl
fsubp
or
negl
outsb
xchg
jcxz
loopne
jae
aas
xor
sub
incb
add
add
or
xchg
out
std
std
xor
ret
sub
push
inc
xchg
sub
sbb
mov
pushl
je
and
adc
ja,pn
jp
xchg
add
popf
daa
icebp
jns
js
pop
push
mov
push
icebp
sub
inc
pop
push
mov
fcmovu
scas
add
paddw
fadds
push
faddl
rol
pushf
and
into
loope
in
push
popa
cmp
cli
sbb
and
push
bound
shl
and
dec
pop
dec
sub
pop
sarb
cmc
xchg
cmp
addb
push
or
hlt
in
outsl
mov
and
mov
inc
xchg
repnz
inc
push
inc
xchg
and
add
jl
pop
cmp
outsb
xlat
adc
les
dec
clc
sbb
pop
pop
xchg
sub
and
dec
add
xchg
shll
add
xor
imulb
cmp
sub
xchg
jg
adc
xchg
loopne
cmp
or
and
jb
pop
ja
insb
sub
fistpl
dec
push
jp
lock
mov
lea
sbb
int3
mov
or
adc
fistps
mov
into
cmp
and
jge
loope
add
out
fisttps
or
xchg
inc
dec
cwtl
xor
sub
push
pop
pop
jl
pop
push
sbb
xlat
testl
mov
sbb
aad
adc
jle
mov
aas
es
cmp
sahf
cwtl
lea
jl
push
cwtl
repz
inc
in
mov
and
imul
ja
repnz
mov
xchg
xchg
stos
popf
ret
jo,pn
sub
fists
loope
fdivs
cwtl
push
lcall
mov
rcr
arpl
push
test
jle
sub
popf
xchg
pop
xor
je
pop
add
sbb
dec
and
mov
hlt
nopl
pop
add
jecxz
pop
adc
and
fistpll
xchg
sub
leave
gs
xor
xlat
je
sbb
push
popa
adc
inc
fistl
push
je
repz
and
jl
push
jbe
shll
mov
add
insb
cmpsl
aas
lcall
pop
mov
lods
sub
and
mov
call
mov
push
lret
dec
int
repnz
add
repnz
or
out
sahf
sti
scas
cmpsb
and
adc
xchg
cmp
orb
cltd
ret
es
adc
or
sub
outsl
les
push
jbe
cmc
adc
jge
mov
fwait
outsl
mov
stc
cmp
xorb
std
cmp
in
enter
arpl
sub
daa
or
add
dec
lahf
into
push
add
dec
mov
adc
sub
add
mov
pushf
cwtl
ret
jns
jg
sbb
jb
push
sub
test
int
sbb
outsb
movsb
add
test
fstl
dec
repnz
cmc
push
out
lahf
sarb
add
cmc
mov
test
cltd
imul
inc
out
lock
add
outsb
adc
daa
and
stc
mov
pop
fisttps
popf
pop
test
test
add
jae
sub
add
fs
loop
jge
pop
fs
iret
mov
xor
cwtl
pop
push
int3
fcoml
stos
dec
dec
cmp
xchg
out
iret
push
xchg
aas
mov
inc
std
enter
and
call
dec
fidivs
in
mov
adc
adc
sub
pop
andb
subl
mov
arpl
and
or
sbb
push
add
popf
ljmp
int
dec
pop
xchg
addr16
and
pop
or
int3
in
pop
mov
push
xlat
nop
inc
inc
nop
inc
movsl
or
and
lock
cmp
push
xor
push
fwait
add
push
lods
testl
adc
fwait
les
adc
lahf
sub
aas
sub
sahf
call
xlat
jge
jns
cld
fwait
mov
jle
mov
push
mov
stos
addr16
and
fdivrl
xor
and
sub
or
jb
mov
mov
dec
dec
sarb
ja
fs
sub
cld
test
push
bound
cmp
and
add
xor
mov
hlt
incb
jmp
push
sbb
cmpsb
push
cld
mov
and
push
frstor
outsb
aaa
mov
inc
je
mov
aam
outsb
pop
pop
aaa
xchg
adc
xchg
pop
push
scas
mov
sbb
and
movb
mov
rolb
sub
adc
inc
mov
loopne
jecxz
pop
add
and
adc
push
lahf
fnstsw
mov
aas
xchg
mov
jl
lret
negl
sub
pop
inc
xchg
add
and
mov
xchg
inc
cld
push
lahf
cmp
jbe
cmc
add
ss
xlat
iret
out
test
cmp
sub
jo
inc
pop
add
xchg
int3
fistps
js
jmp
push
fsub
xlat
pop
stc
adc
outsl
or
dec
mov
rcrl
inc
mov
push
push
fsts
pop
ljmp
inc
flds
incl
mov
xlat
xchg
push
xchg
dec
sub
pop
testb
popf
aad
notl
dec
std
aaa
call
popf
mov
mov
cmp
lods
cld
lahf
dec
xor
jl
inc
rorl
pop
into
xchg
xchg
and
repnz
in
test
mov
stos
cmp
sbb
movsb
jge
push
std
std
push
inc
sldt
rcl
imul
data16
cwtl
imul
mov
cmp
dec
pop
lea
dec
mov
lods
jg
push
out
addr16
inc
in
fnstenv
jmp
mov
jecxz
int3
sub
or
or
jne
sub
dec
sahf
jbe
fsubrl
push
lods
jne
or
jge
cmpsl
cmpsb
push
stc
push
mov
ss
add
sbb
repz
js
icebp
repnz
cmp
movb
mov
iret
and
movl
mov
xchg
jo
pop
or
movsl
mov
idivl
jne
push
mov
js
push
inc
pop
fdivl
icebp
xor
inc
fildll
std
out
and
insl
cmpsb
je
jmp
mov
jbe
aam
inc
or
loopne
adc
rcrb
pop
inc
sbb
pop
xchg
inc
pop
insb
xor
popa
cmp
negl
xor
rcr
xchg
push
fbld
adc
and
push
cltd
nop
cld
mov
pop
inc
mov
pop
adc
push
jb
scas
dec
in
into
mov
outsl
mov
movsl
test
cld
gs
sti
cmc
xchg
sbb
mov
dec
cltd
mov
aad
or
sub
mov
addl
and
jl
sub
mov
add
xor
add
dec
inc
mov
xchg
mov
push
mov
inc
push
popa
mov
pop
inc
lock
iret
xor
cwtl
inc
add
and
sub
push
lock
dec
pop
jno
bound
jl
mov
mov
clc
mov
mov
and
call
js
xchg
insb
fwait
inc
aas
and
cltd
xor
mov
aas
test
jl
imul
jge
popf
and
enter
mov
mov
sarb
push
lds
nop
mov
xor
cmpsb
imul
cld
and
je
pop
mov
test
xchg
push
or
add
xchg
inc
pop
aad
je
out
pop
leave
pop
mov
lahf
cmpsb
fildll
inc
scas
xor
cmc
dec
cmp
jp
sub
xor
dec
ret
fbstp
or
mov
add
mov
aam
sub
movsl
bound
inc
mov
int3
mov
dec
movsl
imul
pushf
dec
adc
sub
in
ret
arpl
in
adc
das
inc
push
or
push
add
lods
sub
adc
adc
adc
mov
ret
inc
jne
sub
mov
pop
xchg
mov
add
and
in
lods
rorl
fcmovnb
jg
nop
fiadds
aad
out
leave
jge
das
lahf
lds
dec
xor
shl
loope
lea
fcoml
js
and
xor
add
jb
insl
or
popa
mov
inc
xchg
fcomip
shll
hlt
bound
sub
in
sbb
inc
repz
into
push
sbb
popf
sti
inc
das
aas
pop
test
ret
and
fstps
inc
loopne
inc
or
pop
add
das
mov
sub
mov
and
or
arpl
jge
bound
mov
fsubrl
cmp
testb
ds
xchg
call
push
std
out
sub
pop
push
add
lret
add
jbe
jge
shll
sbb
iret
repnz
lods
cmpsb
rorl
pop
sbb
cmp
sbb
xor
push
push
mov
xor
inc
jecxz
cld
outsb
or
dec
mov
mov
loopne
popf
flds
fisttpl
and
sub
popa
xor
std
fildl
rcrl
push
ja
bound
pop
call
call
pop
adc
repz
es
mull
or
lahf
call
outsl
and
sub
lahf
sbb
sub
mov
adc
mov
xchg
nop
sub
andb
adc
jns
inc
adc
int3
rol
xchg
out
mov
loopne
or
lods
xchg
scas
shlb
or
rcrb
lret
mov
mov
sub
adc
jae
int
inc
call
loope
fs
or
ficoms
ja
fidivrl
nop
jge
popf
test
sahf
mov
or
loope
lahf
fst
fwait
loopne
rcrb
mov
cmp
or
in
xor
jnp
inc
fistl
arpl
pop
push
lahf
sub
pop
xor
inc
in
outsb
pop
aad
jge
js,pn
sbb
cs
ficoml
jns
sbb
decb
iret
sti
fsubl
sbb
je
and
inc
cmpsb
dec
lods
sbb
mov
or
dec
xchg
arpl
ds
push
mov
inc
mov
test
pop
mov
dec
cmp
pushf
pop
sub
pop
nop
test
subl
mov
leave
mov
or
add
cmpsl
or
inc
dec
outsb
push
pop
mov
in
push
sbb
call
add
adc
popf
imul
jge,pn
or
add
jno
push
aas
stos
mov
mov
and
mov
mov
xor
testb
pop
xchg
cmp
mov
mov
adc
pushf
mov
and
sarl
lods
push
lcall
mov
and
inc
mov
sub
ljmp
daa
outsb
mov
fldenv
pop
mov
push
inc
mov
enter
lods
cmp
in
mov
xchg
addr16
enter
mov
push
gs
decb
popf
cli
jg
jo
in
aad
rolb
xchg
mov
xor
lahf
fisttpl
inc
test
popf
jg
pop
sbb
fcomip
push
and
xchg
daa
mov
add
sbb
imul
mov
aad
adc
or
or
xchg
mov
sbbl
fstl
jbe
cmpsb
in
sub
lods
mov
sbb
push
stos
inc
daa
cli
mov
sbb
mov
mov
add
jns
adc
push
sbb
adc
cmp
push
push
idivl
xor
inc
iret
lods
adc
cmc
nop
or
fadd
inc
iret
or
test
xor
inc
and
adc
mov
mov
filds
in
xor
in
mov
popf
jns
mov
movsb
inc
mov
jns
add
dec
es
subl
mov
ja
cltd
sub
std
or
call
outsl
cmp
ja
and
sarl
cmp
sub
or
xchg
mov
repnz
xlat
aaa
push
bound
sub
add
xor
ds
idiv
popf
sbb
xchg
add
push
inc
inc
cli
add
cs
and
dec
mov
dec
sbb
adc
loop
cmp
mov
push
cmp
lods
lahf
xchg
mov
fcomp
jns
cmp
popl
jle
xor
test
fimull
dec
fdivrl
cmp
pop
mov
mov
mov
int3
nop
and
jno
call
fistl
lods
clc
in
jo
test
add
sbb
sbb
fdiv
push
mov
sbb
push
cmpsl
xchg
sbb
adc
popf
dec
mov
cmp
arpl
pop
jecxz
or
std
sbb
xlat
jnp
jge
icebp
mov
and
xor
mov
pop
aad
mov
jle
test
insl
dec
andb
mov
es
pop
xor
cmp
aaa
cmp
hlt
jp
and
jge
and
ret
and
popf
fs
adc
cltd
lahf
dec
movsb
scas
dec
push
sbb
dec
xor
xor
mov
mov
popf
movsb
rcrl
test
push
xor
cmp
xchg
pop
cmp
adc
mov
dec
ja
push
into
push
mov
and
cmc
fwait
lcall
jb
cmp
xor
add
or
pop
sbb
std
mov
xchg
adc
and
or
and
or
shlb
add
in
in
sub
jecxz
sbb
dec
stos
dec
cltd
cltd
cld
or
and
lahf
leave
repnz
mov
pop
push
push
pushf
inc
dec
mull
mov
call
xchg
into
popf
lods
repz
ds
mov
clc
mov
sub
inc
jl
pushf
cmpsl
adc
aas
gs
push
add
push
xchg
fnstsw
add
xor
ljmp
repz
add
jecxz
push
push
data16
xchg
sahf
stc
incl
sarl
sarb
xchg
insb
or
in
or
xlat
pop
stc
mov
testb
mov
add
cmpsb
add
xlat
pop
adc
or
mov
or
pop
gs
and
test
fsubs
dec
mov
outsb
movsl
or
cmpsl
mov
nop
test
aas
fisubrl
dec
sub
lods
aaa
mov
inc
add
hlt
adc
mov
sub
jp
push
scas
jge
repnz
fcomip
pop
stc
aad
cld
arpl
popf
gs
push
push
sub
mov
movsl
sbb
push
fcomps
push
xchg
scas
add
cmp
or
xor
add
mov
pop
imul
xchg
push
sub
fmulp
mov
test
daa
dec
out
mov
mov
push
add
int3
inc
dec
inc
pop
inc
daa
imulb
add
shlb
ss
in
in
mov
popf
jns
stos
dec
mov
cmp
cmp
xchg
inc
lret
lahf
mov
scas
inc
or
pop
dec
dec
repnz
mov
fwait
add
cli
jns
inc
add
xchg
pop
les
loopne
outsl
mov
xchg
bound
rorl
cs
pop
pop
dec
mov
cmp
xlat
lds
xchg
sub
sbb
cmc
sbb
push
loop
push
jmp
jbe
sub
adc
aam
push
pop
je
lahf
mov
pop
out
adc
jge
roll
xor
push
xchg
and
dec
dec
popf
lahf
inc
lahf
mov
std
sub
push
mov
clc
add
movsl
lahf
cltd
test
mov
cmp
add
ret
lods
sbb
add
sarb
gs
cld
sub
lahf
xor
pop
or
or
movsb
outsl
and
inc
jnp
add
fsub
inc
sbb
test
pop
mov
out
shrb
ret
loope
scas
fprem
adc
lret
jns
xchg
xchg
std
sub
push
cmpsl
cltd
cmp
xchg
fsubrl
jo
ficoml
gs
dec
sub
fnstsw
int3
adc
lods
pop
cs
mov
lods
and
jg
xlat
ret
xor
test
adc
mov
stos
cwtl
dec
dec
push
mov
nop
and
cltd
and
in
add
and
outsb
jecxz
and
cmp
iret
ss
mov
fbld
or
dec
push
sub
adc
push
pop
adc
pop
dec
mov
mov
out
lahf
jo
pop
mov
les
and
inc
outsl
pop
pop
inc
cmp
sbb
loope
enter
lock
push
cmp
mov
rep
push
xor
out
jo
hlt
movsl
push
out
dec
push
leave
in
int
sahf
cltd
xchg
std
outsb
mov
pop
dec
jg
movsb
pop
mov
aad
jne
add
movsb
add
jge
sbb
xchg
xor
sub
std
pop
jp
pop
xlat
shlb
ret
push
inc
lds
dec
add
push
xor
adc
fidivrl
aas
lea
es
in
fistps
adc
lods
xchg
adc
arpl
mov
rorb
dec
ret
xor
clc
cmp
jmp
pop
dec
mov
int
int
iret
sub
jg
pop
sti
cmp
addr16
popa
or
push
icebp
cmp
jl
jge
aas
mov
cmp
add
inc
fistpll
inc
neg
ficompl
inc
adc
jl
inc
sarb
fwait
mov
nop
cmc
outsl
sub
jne
xor
or
xor
notl
insb
out
sub
pop
andl
or
lahf
mov
fisttpll
roll
xchg
aam
sbb
cmp
in
sbb
jno
and
sti
cli
insl
fidivs
dec
sbb
add
adc
ret
cmpsl
test
ret
ljmp
pop
stos
mov
adc
fstpt
fwait
les
or
es
mov
int3
pop
mov
out
push
lret
push
add
test
cmpsl
inc
dec
cmp
lahf
jbe
inc
mov
mov
sti
pop
jmp
out
popf
sub
fistpl
xor
fs
and
push
movsl
push
lea
xchg
call
daa
mov
and
xchg
imul
pop
xor
lcall
mov
popf
and
or
xor
dec
test
cmpsb
pop
sbb
push
neg
inc
adc
add
jns
jecxz
stc
pop
xchg
dec
lahf
pop
inc
loope
cmpsb
xchg
pushf
and
xor
mov
ja
gs
cmp
cmpsb
mov
rolb
sub
and
stos
cmp
and
sub
and
dec
inc
sub
loopne
pop
xchg
idiv
ret
cltd
lods
jns
sub
jmp
pop
add
lahf
loopne
pop
stc
std
testl
cmp
adc
iret
pop
adc
shrl
movsl
repz
mov
gs
jg
cmp
and
inc
out
dec
lahf
xchg
and
inc
and
stos
or
fisttps
sub
mov
dec
xchg
pop
xchg
push
test
pop
fs
iret
cmp
add
insb
stos
cmc
rcrl
loop
jb
shl
sahf
mov
lods
jge
mov
pop
cmp
add
adc
mov
or
push
movsb
hlt
push
mov
sar
jmp
rcrl
sbb
mov
xor
xor
push
sub
xlat
or
popf
jbe
dec
mov
push
jmp
aam
adc
sub
dec
ret
test
std
lea
jo
add
std
add
push
pop
test
cld
jnp
enter
out
sbbb
pop
or
cmp
add
sub
sub
daa
mov
and
int
adc
mov
sub
pop
arpl
dec
popf
pop
jne
adc
cwtl
mov
fcomp
xor
imul
mov
xor
ljmp
push
push
shll
scas
mov
hlt
decb
fwait
jecxz
lcall
stos
push
repz
je
cli
lahf
insb
mov
dec
cmp
movsb
clc
in
adc
adc
iret
mov
sbb
jecxz
decb
out
fsubl
mov
inc
push
outsl
xchg
insb
xchg
jl
rclb
dec
outsl
mov
fisubs
mov
mov
sub
push
xchg
mov
popa
push
ret
pop
ja
pop
dec
mov
in
sub
adc
sub
js
add
add
ret
sub
cmp
dec
mov
and
push
icebp
dec
mov
mov
xor
dec
ljmp
and
mov
insb
add
daa
aaa
inc
mov
cmp
xor
dec
sti
cmp
cld
or
add
adc
and
mov
ret
add
cmpsl
xor
jl
inc
sahf
cmp
es
dec
les
mov
ret
cmpsb
mov
or
pushf
pop
ljmp
cmpsl
dec
or
mov
mov
nop
pop
cmpsl
pop
pusha
mov
clc
and
popf
sub
lret
cltd
ror
sub
cs
sub
push
xor
cld
and
and
or
insl
push
pop
or
inc
and
shl
push
push
mov
mov
inc
push
xor
jl
mov
dec
les
fidivl
in
lahf
xchg
xchg
mov
or
mov
mov
push
push
repnz
xor
scas
setno
jmp
lahf
xor
cmp
in
daa
adc
cli
lcall
push
dec
mov
imul
inc
push
es
das
lods
push
and
popf
pop
cmp
imul
adc
mov
pop
cmp
push
subl
pop
and
shrl
push
mov
jecxz
or
mov
sbb
mov
sub
loopne
addl
sub
sbbl
pop
jne
xor
mov
inc
push
test
pusha
ss
sub
mov
leave
lahf
cmp
sub
js
xchg
ss
mov
es
outsb
push
imul
pop
sub
jl
jl
push
and
and
bound
hlt
jl
or
pmullw
int
jp
push
nop
dec
or
cmp
ret
fisttpl
jb
dec
sbb
add
jae
mov
lahf
shrl
and
cld
or
mov
push
pop
hlt
xlat
sub
push
call
pop
dec
sub
stos
sub
xchg
cld
push
movsl
scas
mov
xor
int3
lahf
sbb
popa
ljmp
iret
inc
les
ljmp
inc
and
pop
mov
dec
jp
std
test
fsubrs
nop
and
sub
dec
jg
cmp
xchg
mov
sub
jle
lods
and
push
in
fisubl
iret
dec
xchg
sub
sti
pop
mov
mov
dec
mov
jecxz
test
dec
shrb
mov
xor
push
rorl
add
mov
pushf
fiaddl
jmp
lahf
cmp
pop
sbb
push
movsb
pop
dec
test
or
lods
xor
cmc
mov
sbb
aas
and
sbbb
aaa
jecxz
mov
sbb
add
repnz
inc
pop
mov
jae
mov
jo
add
shrl
imul
inc
ret
dec
xchg
mov
es
pop
sub
lahf
in
movsb
add
sbb
rcr
fiaddl
pop
test
in
sbb
xorl
test
jb
jge
and
mov
cmpsl
inc
call
dec
inc
or
popf
mov
pop
and
enter
xor
add
aad
cmp
out
add
popa
mov
ficoml
jne
xchg
adc
or
shlb
add
xor
ret
dec
pop
adc
mov
add
mov
gs
pop
popf
lret
mov
adc
xchg
sub
imul
mov
mov
mov
xchg
fidivs
xor
dec
sbb
clc
dec
adc
shr
das
xor
mov
popa
jno,pn
xchg
cld
rcr
or
add
outsb
fisttps
inc
mov
testl
cmp
pop
into
xchg
gs
clc
mov
lret
lfs
rolb
jo
mov
lcall
subb
sbb
ja
and
inc
xlat
inc
cld
jns
ljmp
sub
jns
loopne
and
jecxz
in
mov
outsb
push
fimuls
mov
lahf
pop
or
mov
push
mov
repnz
sti
int3
mov
dec
mov
fwait
inc
add
push
xor
sti
sbb
pmulhuw
and
xlat
adc
mov
inc
jg
mov
mov
aad
aam
pop
and
pop
xor
and
push
add
adc
insb
scas
dec
daa
jp
adc
ret
int
xchg
fsubr
dec
cmp
inc
mov
mov
add
add
repnz
stc
and
icebp
dec
scas
push
push
pop
jmp
add
cltd
push
pushf
xor
sbb
aam
test
sbb
es
pop
push
lahf
adc
mov
pop
jo
je
aas
xor
fnstcw
sub
loopne
into
push
add
push
push
sbb
outsl
scas
and
sbb
cmp
cld
cwtl
mov
clc
jnp
ss
or
add
xor
adc
pop
cmp
or
sub
xchg
and
cs
out
xor
cmc
jmp
xchg
filds
or
xor
fbstp
pop
ja
adc
jnp
repz
loope
add
pop
pop
push
and
sbb
cltd
outsl
maxsd
or
jge
pop
shlb
stc
add
subl
mov
xchg
orb
adc
mov
movsb
mov
sub
pop
subb
pop
mov
ret
xor
loop
in
pop
mov
cs
div
or
xchg
and
iret
push
xchg
adc
pop
scas
cmpsl
add
pop
add
adc
std
insb
aas
inc
arpl
or
ret
sbb
mov
dec
jp
mov
testb
push
inc
mov
outsb
push
pop
xor
fmull
iret
dec
jbe
sbb
ficoml
push
and
sbb
std
xor
mov
jge
or
mov
fs
sbb
push
mov
fisttps
lods
ror
adc
into
lods
sbb
aaa
ret
addb
lahf
and
sbb
sbb
adc
sbb
xchg
popa
scas
push
sub
fs
sub
popa
mov
inc
fnstenv
adc
adc
repz
adc
lods
stos
inc
push
jge
les
incb
popf
inc
pop
lock
add
mull
mov
sbb
clc
rol
outsb
clc
les
ljmp
mov
imul
inc
push
xchg
xorb
loopne
sbb
ret
je
add
sub
mov
lds
cmpsb
mov
push
dec
out
xchg
fwait
lods
lods
or
jns
sub
pop
cmp
and
or
push
mov
xchg
lds
fildl
in
out
rcrl
push
mov
inc
out
or
jmp
xlat
xor
out
out
or
repnz
stos
cltd
adc
mov
cmp
loope
inc
divb
push
mov
mov
lahf
mov
pop
add
add
pop
cltd
movsl
mov
mov
and
cmp
sub
pop
add
and
xor
stc
or
mov
sub
rcrb
and
jecxz
lods
dec
adc
inc
test
jge
or
cli
cli
jge
imul
cmp
outsl
pushf
leave
cmp
cwtl
xchg
jecxz
sbb
and
std
jle
popf
enter
add
pop
inc
insl
jge
dec
mov
mov
mov
cld
dec
dec
sub
cmp
mov
xor
sbb
push
add
add
es
test
roll
aam
pop
pop
hlt
dec
xor
repz
adc
ficoms
cmp
repnz
daa
call
lret
pusha
arpl
dec
lock
sbbl
jno
leave
inc
or
pcmpgtb
lock
jle
mov
and
mov
aas
or
mov
jns
dec
and
cld
mov
adc
cmp
cmpsl
shll
fistps
xchg
add
mov
sarl
fimull
int3
push
pop
mov
ljmp
jb
dec
outsl
cmp
xor
sarl
test
icebp
int
popf
fwait
nop
xchg
popa
and
mov
into
pop
aas
out
pop
jno
and
pop
jecxz
xor
scas
dec
fldenv
mov
inc
cmpsl
add
add
ret
enter
ja
nop
cmp
cmp
push
adc
add
or
iret
inc
dec
out
and
pop
push
pop
and
arpl
cmp
shlb
sub
daa
add
xor
mov
mov
or
pop
test
scas
or
push
enter
inc
inc
adc
mov
mov
push
adcb
imul
pop
int
dec
insb
inc
push
int3
cltd
sbb
dec
pop
out
push
inc
sub
iret
pop
jns
sub
push
rolb
fs
leave
pop
mov
pop
cli
cwtl
cmp
xor
or
push
inc
popf
das
add
xchg
mov
or
dec
pop
insb
push
sub
les
push
hlt
das
mov
cmp
fidivrs
out
pop
mov
cld
dec
fcompl
pusha
inc
imul
dec
push
stos
pop
gs
push
jbe
mov
daa
and
pop
xor
clc
xlat
leave
cld
call
push
mov
jecxz
xor
cmc
mov
ljmp
popf
into
adc
ds
pushl
mov
add
testb
xor
test
cmp
jbe
ret
sarl
and
cmp
xchg
adc
out
cmp
inc
ret
notb
and
or
movsl
cmp
sti
and
outsb
jns
popf
or
test
add
inc
cmp
mov
inc
pop
jge
push
xchg
add
xchg
xchg
mov
insb
xor
pop
mov
jmp
xchg
pop
outsb
cwtl
pop
cli
lods
mov
sahf
cmp
lret
dec
sarb
ret
sbb
add
imul
and
xchg
jge
or
pop
ja
movsl
and
enter
jns
inc
pop
insb
xor
in
sbb
pop
sub
xchg
adc
dec
out
push
and
mov
adcl
sub
decl
push
sarl
outsb
popa
adc
adc
fldt
pop
lret
outsb
pop
mov
push
std
dec
mov
loop
pusha
aam
push
incl
xchg
test
repz
push
cmpsb
jl
lahf
xor
mov
add
mov
icebp
shrd
mov
lahf
data16
mov
push
sbb
pop
sub
sub
sbb
insb
adc
sahf
cmpsb
cmp
lods
add
xchg
aas
popf
sub
cmpsb
pop
pop
and
ret
push
sub
mov
das
shll
cwtl
and
mov
nop
jl
push
add
jns
pop
push
jbe,pt
add
lahf
mov
mov
std
subl
pop
add
mov
mov
mov
add
and
jae
or
sbb
lahf
scas
push
push
push
fnstsw
movsl
inc
test
cmp
inc
inc
pushf
add
xchg
movsb
mov
and
and
dec
leave
inc
sub
cli
add
mov
mov
mov
cvttps2pi
sub
push
or
mov
mov
sbb
int
jg
ret
cld
dec
insl
jno
cmp
sahf
and
icebp
sub
dec
jns
shrb
out
sub
and
mov
fadd
pop
fsubr
cli
sbb
push
and
imul
cmp
mov
push
add
mov
lahf
pop
std
xchg
gs
inc
xchg
imul
fwait
rcl
add
into
jecxz
adc
pop
jge
xlat
and
xchg
movsb
sub
je
sbb
lret
add
pop
lds
mov
cmp
out
or
mov
daa
fcmovu
add
sbbl
movsb
jle
test
loope
push
pushf
sbb
mov
test
push
stc
xor
dec
dec
pop
xor
sbb
inc
add
shrl
jmp
aam
and
cld
fistps
std
jl
inc
lahf
mov
mov
dec
dec
das
add
xchg
mov
fcompl
test
xchg
push
jb
add
enter
leave
sub
and
or
mov
pushf
push
push
sub
pop
inc
push
dec
adc
mov
cmp
in
lcall
push
std
jl
or
pop
inc
int3
or
int
filds
lsl
push
dec
cmovge
popf
fnstsw
sub
outsb
cmp
mov
inc
scas
or
and
dec
jp
dec
stos
inc
mov
jne
jl
push
int
std
popf
test
or
in
cli
xchg
out
cmpsb
mov
jecxz
scas
lods
sub
jmp
dec
add
ret
dec
and
shrb
cmp
mull
xor
cmp
xchg
sub
inc
ds
je
jns
mov
dec
sub
mov
and
cmpsl
dec
push
add
jmp
imul
testl
adc
push
push
mov
mov
xchg
add
fadd
cltd
addb
mov
xor
or
sbb
into
popf
and
mov
test
push
mov
inc
pop
ret
mov
lret
sub
jmp
pop
mov
mulb
in
add
and
lods
push
lahf
push
mov
stos
jge
push
and
ss
xchg
xchg
xor
mov
dec
ss
aam
repnz
icebp
xchg
jl
inc
lds
cli
dec
out
or
sbb
push
test
add
and
aas
inc
bound
add
jae
aad
lret
std
in
or
movsl
addr16
cmp
arpl
sub
lret
in
pop
test
sub
mov
and
mov
and
lahf
mov
inc
dec
or
daa
add
xor
pop
cmp
es
leave
cmpsl
adc
sbb
push
shl
std
xchg
pop
fs
cmp
in
roll
push
mov
cmp
add
test
lahf
das
cmpsb
dec
nop
repz
mov
inc
fstpt
out
xor
pop
xchg
dec
push
test
nop
scas
inc
bound
and
ds
sub
ret
sub
outsl
dec
lahf
mov
lret
inc
cltd
add
shlb
pop
rorl
jmp
js
sub
pop
in
xchg
insb
std
aas
pop
inc
push
mov
push
mov
dec
lods
push
mov
xchg
sub
and
mov
call
xor
daa
fidivrl
insb
cmp
sbb
pop
fiadds
cwtl
test
xchg
xlat
in
push
push
cmp
mov
xchg
sub
in
mov
mov
call
outsb
pop
lds
loop
sbb
shrl
mov
into
mov
std
and
movsl
cwtl
xchg
pop
adc
cmpsl
xor
mov
repnz
inc
push
aaa
inc
insb
scas
lea
dec
dec
icebp
mov
jb
mov
lock
dec
pop
movsb
add
lahf
mov
and
adc
lret
pushf
repnz
xor
and
lds
loopne
or
lret
push
mov
xchg
push
nop
arpl
mov
adc
fmul
add
xor
push
or
gs
adc
mov
cmpsl
repnz
pop
sahf
dec
pop
or
add
xor
add
sbb
and
adc
testl
sbb
loopne
cmpsl
cmp
insl
dec
test
mov
lods
xchg
pop
pop
inc
dec
sahf
mov
lret
xchg
lods
clc
sub
pop
cmp
sub
or
cmpsb
cmp
and
xor
mov
popl
lods
cltd
add
dec
push
add
mov
or
lahf
pusha
repnz
iret
sbb
and
xchg
std
pop
adc
daa
dec
divb
cmc
call
sub
cmp
aam
push
jb
ficoml
inc
sub
push
cmp
cmp
add
jecxz
pop
ret
sti
jno
popf
xor
pushf
and
mov
ja
adc
sub
mov
int
add
sbb
push
dec
sub
dec
sbb
adc
ja
popw
idiv
or
popf
pop
pusha
es
lcall
mov
fs
pop
push
ja
lahf
gs
icebp
fs
sti
test
popf
jmp
mov
add
test
popf
or
out
cwtl
movsl
adc
xchg
push
jb
mov
jae
call
and
mov
pop
lds
loopne
sahf
add
cmp
inc
gs
add
dec
mov
xchg
sub
roll
mov
insb
or
push
notl
adc
mov
mov
sbb
sbb
into
inc
cmp
sti
pop
inc
xlat
scas
push
sub
stos
rcrl
rorb
int
pop
jle
aas
push
cmp
and
fidivs
xor
jns
xlat
fwait
add
and
inc
test
mov
dec
in
xchg
inc
inc
outsl
jle
jecxz
popa
out
cwtl
outsb
jne
add
lahf
imul
pop
cmp
loope
add
xchg
xchg
lret
lods
pop
lahf
subl
fmulp
and
jge
cmp
mov
pop
mov
and
test
lret
sahf
mov
rorl
outsb
mov
mov
jl
cmp
xchg
popf
clc
popf
mov
inc
stc
pop
mov
mov
sbb
inc
inc
out
cmp
xorb
mov
call
ucomiss
daa
cli
inc
pop
arpl
popf
fnsave
sbb
icebp
inc
add
push
mov
or
or
cmp
lahf
push
add
xchg
sbb
popf
add
data16
sbb
pushl
sahf
ret
out
mov
cmpsb
jg
into
dec
xchg
push
jge
cmpsl
push
repnz
xorb
in
cmpsb
cs
out
mov
movsb
xchg
and
inc
cmp
loopne
adc
pop
insb
mov
or
mov
cwtl
sbb
lea
jnp
lods
pushf
shll
in
fistpl
cli
push
jmp
pop
or
mov
cmp
sub
cmpsb
xchg
dec
mov
push
or
add
push
push
jno
cmp
lods
scas
sub
mov
arpl
push
rcl
sub
mov
sbb
adc
sub
and
jns
lods
sbb
sbb
mov
std
std
lret
mov
ja
scas
adc
xchg
xor
xchg
sbb
xlat
sahf
lahf
dec
push
jecxz
mov
jb
or
loop
and
cmpl
pop
and
insb
lahf
enter
roll
mov
cwtl
cmpsl
add
iret
ret
dec
jl
testl
pop
rcrb
outsb
fistl
ret
fisttpll
vpshufb
das
adc
pop
add
outsb
cmp
mov
mov
xlat
pop
and
inc
daa
jp
dec
loope
pushf
push
xchg
dec
je
jg
inc
pop
fiaddl
jbe
jne
mulb
iret
and
mov
dec
adc
ret
sub
and
int
sbb
sbb
jge
fmuls
and
sbb
lret
mov
mov
loopne
test
mov
mov
mov
xor
es
xorl
pop
inc
dec
jp
insl
or
popf
lret
into
lcall
mov
xor
inc
jp
es
and
sub
mov
xchg
loopne
jg
fcompl
jle
lahf
rolb
adc
std
mov
popf
and
xchg
shlb
push
push
jo
in
inc
mov
push
mov
jl
mov
pop
jmp
xor
xor
aas
xchg
mov
sbb
cmp
rcrl
mov
std
xchg
jg
jb
cmp
mov
mov
inc
push
lahf
ja
outsl
cwtl
xchg
pop
dec
imul
xor
mov
fwait
mov
data16
lret
imul
push
jp
jecxz
or
je
std
sbbl
and
dec
jae
pop
fistl
pop
push
shll
mov
mov
mov
shr
aad
pop
adc
jmp
jecxz
mov
xchg
stos
push
push
jecxz
outsb
jp
fistps
lret
jge
mov
mov
popa
cmp
stc
in
jae
dec
add
pop
push
and
add
mov
or
js
and
les
mov
loope
xchg
or
add
mov
cmp
mov
lret
dec
sbb
sub
negl
mov
pop
mov
fldcw
popa
sbb
lock
dec
outsb
dec
pop
jecxz
cmpsb
je
xchg
push
jae
or
jo
lods
mov
adc
pop
std
jmp
rcll
xlat
add
jnp
sub
sub
and
xchg
cmp
and
xor
mov
or
and
iret
lret
cld
and
jg
mov
bound
adc
out
mov
lods
mov
pop
repnz
xor
les
add
adc
add
sbb
bound
mov
lods
pop
jno
xchg
int
mov
sub
cmp
je
mov
outsb
adcb
and
jl
popf
mov
xchg
push
sbb
out
cwtl
test
xchg
cmp
xor
test
rorl
mov
pop
mov
jns
sbb
pop
test
movsb
lea
pop
add
in
add
sub
and
mov
mov
push
mov
mov
mov
out
or
imul
pop
cld
jb
lods
mov
dec
and
mov
int3
mov
test
fiadds
lahf
inc
jne
cmp
aad
add
jmp
cmpsl
outsb
jecxz
ljmp
jne
cmp
add
out
dec
notb
testb
dec
or
mov
imul
popf
mov
pop
adc
jge
pop
xor
testl
loope
push
jecxz
rclb
inc
or
adc
lds
sub
mov
push
cmp
test
outsb
pop
pop
mov
jb
test
sub
fists
inc
mov
mov
nop
mov
pop
xlat
add
lea
jno,pt
jg
fistps
int
push
add
fcoml
pop
lahf
sbb
je
and
adc
jp
gs
and
hlt
push
add
jg
cmpsb
mov
jl
push
pop
jmp
adc
cmp
outsb
cmp
icebp
push
mov
pushf
cld
lods
insb
mov
jl
cld
lock
pop
imul
cs
sub
sub
sbb
xchg
sub
fdivrs
or
test
leave
pop
sar
push
out
pushf
mov
sbb
xor
insb
dec
adc
inc
ds
sbb
cmp
mov
or
dec
sbb
mov
daa
loope
push
adc
incb
insl
push
cmpl
jg
cld
cltd
or
and
mov
fimuls
rcrb
and
add
mov
cmp
mov
xor
or
cmp
das
ds
inc
sbb
ds
and
pop
dec
fsubrl
jle
cmp
ds
sbb
or
mov
in
nopl
ds
xor
pop
mov
mov
sbb
and
in
icebp
inc
jl,pt
mov
mov
sbb
out
sbb
popf
and
sbb
mov
add
sbb
mov
sbb
sbb
sbb
sbb
jl
push
out
push
sbb
dec
inc
sbb
jl
sbb
aas
mov
dec
dec
sbb
sahf
cld
les
cmp
dec
sub
push
or
inc
pop
add
or
pop
inc
faddl
pushf
addb
adc
xchg
mov
es
sbb
jl
sbb
pop
inc
frstor
in
mov
inc
mov
sbb
and
jl
cmp
xor
and
lods
test
cs
pushf
hlt
xchg
and
popf
jle
lret
sbb
stc
cmp
dec
pop
ds
insb
data16
int3
sbb
sub
sbb
add
ds
std
int
push
jg
sbb
lea
lcall
pop
int3
jg
sbb
ds
xchg
dec
sbb
ds
push
fimuls
nop
sub
mov
pusha
out
xchg
and
sarl
xor
pop
and
mov
jne
jno
sub
lea
push
scas
jbe
dec
mov
aas
popf
stos
or
push
jl
mov
pop
insb
cwtl
jmp
cmp
pop
cmp
in
pop
or
jecxz
in
cmpsl
popf
xor
sub
stc
adc
shr
xchg
nop
push
xchg
cmc
push
ficomps
ret
mov
popf
scas
repnz
inc
mov
jle
lahf
int3
sbb
dec
imul
fstpt
jecxz
mov
pop
rol
stos
rorb
push
ret
hlt
adc
mov
xchg
lahf
or
mov
dec
cwtl
shrl
mov
adc
sub
pop
cli
adcl
ss
xor
stos
inc
and
lret
out
mov
pop
or
sbb
aas
icebp
inc
jo
pop
mov
repz
loop
push
fisttpl
xchg
adc
pop
push
in
add
and
push
mov
insl
subb
pop
lods
sub
inc
cmp
aas
add
or
dec
cmpsl
ja
imul
negl
lret
inc
int3
mov
js
popa
pop
jb
mov
mov
mov
push
xor
add
test
mov
fists
fistpl
jns
pop
jp
inc
dec
dec
adc
mov
xor
lahf
shlb
sahf
lea
imul
mov
ja
push
inc
jmp
into
cli
jg
or
add
pop
imul
adc
lea
daa
mov
dec
lahf
cmp
std
inc
mov
jbe,pt
rcrl
push
sub
adc
mov
pushf
inc
sbb
jnp
int
test
jge
out
add
add
add
popf
je
subl
inc
push
ficoms
pop
mov
or
bound
sbb
lods
cmp
jne
xor
out
or
or
popf
shrb
out
sbb
pop
fs
dec
mov
adc
adc
sbb
rolb
test
adc
mov
mov
add
lret
jle
shrl
or
in
or
into
fcoml
fistpl
es
aaa
in
sbb
ljmp
lods
push
test
adc
pop
stc
mov
dec
mov
push
fs
test
jge
and
or
fistpll
cld
inc
xlat
mov
mov
out
fs
sub
or
sub
sti
inc
jbe
call
in
adc
mov
outsb
ret
lahf
fldt
into
sub
mov
test
imul
push
jge
mov
test
push
andl
outsb
mov
aas
repnz
paddusw
push
movsl
or
jle
outsb
mov
idivl
out
xchg
icebp
xchg
inc
mov
outsb
leave
int3
mov
or
inc
mov
add
call
adc
xorb
mov
pop
lret
test
and
lds
shll
clc
push
pop
pop
mov
xor
push
test
icebp
inc
test
jle
or
inc
push
adc
das
push
arpl
lods
mov
jp
lret
xchg
fs
das
push
xchg
inc
xchg
loop
fstpl
add
pushf
fidivs
xchg
xchg
jmp
adc
sbb
outsb
sete
lret
gs
add
sbb
mov
jge
ja
mov
push
inc
sub
nop
bound
pop
sub
push
dec
lahf
ror
stos
dec
push
ja
imul
in
sbb
sub
subl
int
punpcklbw
mov
sbb
pop
cmpsb
scas
loopne
cmp
decb
adc
push
iret
lret
push
mul
rorb
cmp
mov
mov
inc
in
adc
jge
rcr
mov
pop
fildll
mov
push
mov
push
jecxz
pusha
arpl
mov
fisubrs
cmpsl
andl
and
fcmove
pop
add
fstpl
mov
adc
test
xor
iret
rcr
jge
inc
lahf
mov
push
add
std
testb
filds
sbb
stc
pop
jo
mov
add
xchg
xor
jge
sub
lahf
and
sbb
inc
xor
cli
leave
or
mov
jmp
mov
inc
add
adc
fbstp
mov
scas
sbb
adc
dec
nop
mov
popf
test
jnp
mov
jns
imul
push
lds
fstpt
rorb
lcall
push
hlt
jg
mov
sahf
aad
lock
stos
hlt
sbb
jmp
jecxz
popf
lcall
sub
push
scas
cltd
dec
mov
ret
add
fnstcw
add
rcrb
out
mov
add
inc
fistpl
dec
mov
add
out
rcrb
lret
mov
lahf
test
pop
push
outsb
push
xor
or
ret
leave
lock
aam
and
out
inc
sbb
or
bt
mov
mov
out
sub
push
popf
js
fdivl
add
out
fwait
and
cwtl
cmp
shrb
imul
jp
dec
jnp
xchg
arpl
mov
testb
test
lret
inc
pop
scas
dec
dec
inc
add
pop
daa
jle
loopne
jb
in
pop
dec
nop
cmpsl
xor
daa
dec
mov
cmp
sarb
xchg
or
push
outsb
add
jge
gs
jne
test
sbb
lods
ja
mov
das
data16
xlat
xchg
adc
mov
pop
pop
jb
fwait
cwtl
pusha
aaa
lea
add
cwtl
adc
ja
adc
jp
push
loopne
testb
cli
or
jg
cmp
mov
dec
std
and
or
mov
sub
cli
adc
jns
inc
sbb
nop
je
jb
sarl
mov
pop
jp
sub
mov
mov
inc
repnz
cmp
cmp
idiv
test
repnz
out
call
jbe
xor
pop
imul
mov
fildll
adc
jge
mov
or
cmp
cld
das
and
mov
push
sub
dec
push
xor
jbe
insb
jp
popf
sub
mov
jp
mulb
pop
mov
popf
sar
lret
test
punpcklwd
push
pop
shlb
outsl
pop
loope
ficomps
rcr
lods
pop
pop
cmp
pop
lcall
mov
lods
addb
out
iret
xchg
inc
rcl
or
cmp
lds
push
adc
pop
sbb
lock
mov
shlb
dec
out
hlt
dec
lahf
dec
pop
sbb
adc
das
or
sbb
sbb
jns
loopne
dec
xor
jle
inc
jb
dec
pop
push
sar
movsl
cwtl
les
cmp
inc
sub
insl
out
cmp
xchg
push
lahf
out
mov
xor
jge
shrl
sub
lahf
nop
fmuls
outsb
sarb
shrl
shll
jns
xchg
call
dec
sbb
push
xor
out
jge
sbb
mov
or
and
xchg
in
pop
jno
jb
jns
or
or
aad
lret
setb
aas
sub
add
sub
cmp
sub
sub
or
outsb
mov
test
mov
xor
sbb
inc
outsb
test
in
popf
and
rcrb
enter
mov
test
xchg
lahf
mov
lods
outsl
xchg
add
or
push
and
jecxz
fsubrl
or
push
push
mov
jmp
scas
mov
lahf
jb
scas
orb
lds
mov
jb
jge
addl
and
add
add
jl
lock
lret
sbb
fwait
stos
inc
inc
push
lahf
mov
push
push
mov
outsb
jle
dec
mov
std
dec
int3
popf
sbb
inc
adc
test
or
pop
mov
push
mov
mov
out
into
and
das
jne
cltd
stos
popa
fidivrs
test
rclb
push
adc
movsl
lret
fcomp
insl
xchg
popf
mov
mov
roll
daa
addr16
in
xchg
xchg
mov
sub
cmc
jns
mov
arpl
jl
popf
nop
jmp
jbe
push
bound
dec
jge
pop
in
flds
jnp
subb
xor
out
mov
jcxz,pn
and
aad
outsb
mov
or
cltd
xlat
rorl
jne
scas
and
test
rol
cmpsl
test
outsb
and
outsb
in
cli
cwtl
jne
mov
jnp
mov
mov
sbb
fidivrs
and
cmc
sbb
and
add
rolb
cld
loopne
adc
stos
dec
ret
stos
int
lahf
hlt
add
imul
fsubrl
repz
jmp
ja
push
pop
mov
xchg
inc
stos
shlb
mov
jle
dec
lahf
mov
fcoms
roll
jl
or
push
rcrl
mov
mov
pop
jns
imul
nop
sbb
cwtl
daa
fildl
fdivp
fcmovnu
test
ret
xchg
lods
clc
jge
pop
xchg
jno
inc
adc
popfw
addr16
sub
jle
bound
or
pop
call
addr16
aaa
pop
call
jecxz
or
rcr
add
xlat
jp
inc
inc
lahf
rcll
movsb
and
outsb
popf
and
add
jo
inc
repnz
mov
dec
jecxz
dec
xlat
adc
sbb
and
add
nop
inc
pop
xchg
out
std
jmp
and
cmc
mov
jb
out
nop
cli
sarl
mov
int3
dec
sbb
jne
jno
xchg
stc
xchg
lahf
aas
mov
jmp
pop
mov
push
xlat
mov
in
call
xchg
adc
inc
or
or
popf
lret
add
adc
fxam
ret
push
push
sub
lods
pop
push
pop
pop
shrl
test
adc
out
daa
push
cld
bound
insb
fistpll
daa
pushf
test
sub
pop
fbld
imul
cld
insl
mov
adc
add
jle
add
notl
pop
adc
sub
gs
adcb
pop
popf
sbb
dec
arpl
dec
and
push
sub
inc
or
mov
stos
in
dec
add
fs
mov
xchg
jp
rorb
rcll
pop
pop
inc
scas
lahf
adc
test
xor
cmp
inc
notb
stos
mov
pop
in
pusha
or
std
scas
cmp
dec
popf
mov
cmp
out
out
adc
push
mov
out
jno
hlt
cmp
and
pop
ret
mov
call
cld
popf
pusha
clc
jo
jg
scas
pusha
inc
aaa
dec
inc
add
push
fwait
stc
pop
lods
outsl
mov
ljmp
push
cmp
mov
sub
rcrb
outsb
data16
xor
popf
mov
adc
rclb
ds
mov
outsl
test
pusha
sub
popf
sub
push
jg
and
mov
adc
adc
or
xchg
pop
ja
cmp
outsl
mov
cmp
mov
xchg
or
push
out
std
jge
jle
fildll
push
imul
std
jbe
mov
mov
ret
mov
jns
adc
mov
fs
sbbl
les
push
cmpsl
or
push
rolb
xchg
pusha
fildll
movsb
jae
or
es
mov
jmp
scas
int3
test
insl
stos
mov
cmp
cs
push
pop
jo
nop
sbb
jge
dec
push
movsl
int
mov
in
lock
lods
roll
shr
mov
or
and
mov
fdivrp
push
add
lahf
jne
imul
pop
xchg
lahf
jns
push
xor
orl
jecxz
sbb
push
lret
push
or
ds
fstpl
and
cmp
sbb
out
test
add
cwtl
pushf
out
in
fldt
inc
pop
popa
dec
mov
mov
adc
sti
incb
cli
dec
sbb
in
gs
lods
in
hlt
pop
sahf
nop
aad
out
push
ficompl
out
mov
stos
hlt
xchg
cwtl
pushf
cmc
negb
in
imul
aaa
add
adc
adc
ja
mov
cs
dec
mov
std
lahf
lds
mov
sub
std
fs
idivl
cld
xchg
jno
xor
lret
mov
insb
cld
pop
aad
push
add
mov
xchg
or
xchg
outsl
jbe
inc
cmp
add
cmp
push
add
aaa
mov
xor
xlat
push
jae
bound
pop
xchg
inc
cmpsb
nop
jp
dec
cmp
jno
push
push
out
sbb
push
jg
movsl
movsl
test
mov
loope
xchg
call
mov
stc
sub
arpl
shrl
sarb
std
xchg
or
incb
lods
add
sbb
incb
adc
stos
cmpsl
mov
in
push
test
xchg
sbb
or
and
or
dec
sub
jge
inc
testl
mov
cmp
inc
dec
mov
gs
push
jmp
add
std
adc
jnp
fwait
mov
out
xor
and
jecxz
mov
lahf
sub
xor
inc
sbb
in
repz
cwtl
and
popa
mov
mov
or
jne
cmp
add
xchg
mulb
ds
out
inc
decb
loop
ret
mov
popf
xor
repz
in
rcll
push
test
xchg
fiaddl
pop
add
mov
jbe
pop
and
out
sub
daa
lods
sbb
sahf
cs
repnz
fdivrl
loopne
out
jecxz
dec
xor
push
test
cwtl
adc
ret
outsl
mov
mov
cmc
loop
adc
xchg
sub
movsl
je
sahf
pop
shrb
xlat
mov
or
movsl
lret
xor
xor
mov
sub
cld
pop
xlat
or
add
scas
mov
xor
lahf
ret
xor
mov
imull
mov
emms
rcrb
xor
and
cs
push
addl
arpl
sbb
jmp
loopne
cmp
stc
es
aaa
in
rolb
and
inc
xor
xchg
cld
inc
cli
popa
push
xchg
out
mov
outsl
inc
cmp
sub
xor
cmp
rcrb
lods
push
sbb
mov
mov
repnz
scas
adc
xor
fstps
pushf
cmp
ja
cmc
mov
mov
ret
jge
enter
cmp
fxch
add
out
test
cli
add
cmp
inc
sub
ret
stc
ret
call
pop
dec
aad
cmc
mov
shl
push
lods
adc
push
int3
pop
faddl
filds
popf
les
xor
inc
cwtl
jp
push
ret
adc
jg
pop
jmp
fstpl
or
arpl
add
add
ljmp
jl
outsl
test
test
sbb
ljmp
cs
inc
mov
push
out
add
adc
pop
mov
cmp
aas
mov
and
mov
jecxz
lods
cmp
cmp
jl
les
or
sahf
mov
icebp
fnstsw
ror
pop
add
scas
insb
xor
sbb
outsb
lea
add
cmp
pop
pop
add
or
jecxz
xor
xlat
std
sub
mov
mov
pop
jl
mov
and
xor
sbb
sbb
loopne
bound
sub
sbb
inc
sub
or
push
dec
jl
pop
push
outsl
test
cmp
lods
rcrb
sbb
sbb
fsubl
or
jge
int3
and
int
dec
insb
cld
jge
inc
insl
add
pop
or
ficoms
lods
dec
inc
cwtl
mov
xchg
gs
outsl
les
push
add
adc
mov
js
add
pop
cmp
dec
mov
mov
pop
pushf
std
adc
std
scas
out
cs
movsb
push
sahf
dec
std
addr16
in
mov
daa
mov
adc
lock
add
dec
adcl
cmp
outsl
cltd
outsb
int
arpl
ficomps
and
das
pop
into
test
call
ds
scas
into
push
inc
popf
sbb
fildll
jbe
jle
lea
loop
push
xchg
sbb
adc
xchg
sub
dec
inc
dec
xchg
lea
inc
dec
lods
xchg
std
mov
mov
in
xor
popf
sbb
sbb
mov
pop
scas
push
sub
cs
push
cmp
call
add
xchg
stc
or
pop
push
push
outsl
push
dec
mov
mov
gs
xor
mov
test
mov
pop
jns
sub
outsl
pop
lahf
mov
aas
jnp
std
xchg
mov
in
add
inc
popf
negl
and
jecxz
or
lret
testb
cwtl
call
and
mov
inc
xlat
fistl
test
xchg
jns
outsb
push
and
or
xlat
push
push
lahf
xor
jge
adc
enter
sbb
jb
pop
lret
xor
popf
and
lods
inc
jbe
cmp
sbb
cmp
xchg
xchg
push
and
movsl
rorl
jl
jl
push
mov
mov
push
sbb
in
mov
int3
shll
or
inc
jbe
dec
jge
sub
dec
mov
leave
push
int3
ret
adc
xor
adc
outsl
push
mov
add
xchg
imul
iret
sbb
inc
pop
jge
push
lahf
sbb
lahf
or
fistpll
lcall
jecxz
arpl
mov
or
push
sbb
mov
and
or
dec
cmpsb
or
sub
shrb
cli
in
repnz
pop
xor
pop
pop
or
and
jnp
das
js
bound
jg
in
cli
pop
inc
jo
ja
hlt
imul
sahf
int3
repnz
sbb
test
xlat
sbb
jmp
mov
mov
dec
stos
and
js
lahf
scas
fwait
ds
sbb
dec
adc
insl
mov
adc
popf
pop
fwait
stc
xchg
dec
adc
jno
in
stos
addb
repz
inc
dec
fildl
mov
pop
mov
mov
out
xor
add
dec
imul
jp
lea
shl
jle
mov
pop
jl
mov
outsb
shlb
mov
push
popa
or
sbbl
outsl
ret
int3
and
push
outsl
pop
cmpsl
xchg
push
mov
cwtl
jne
pop
pop
jg
lock
mov
fimull
add
sub
aas
rcrb
dec
and
inc
ret
cmpsl
adc
in
int
cs
pop
leave
lret
insl
adc
mov
lret
adc
push
jmp
pusha
jl
fistps
daa
adc
cmp
sahf
stos
dec
push
cmc
scas
xlat
nop
das
push
sbb
test
fsts
push
sarl
mov
std
inc
cld
subb
sbb
dec
add
xor
sub
cmp
or
jbe
push
inc
adc
jns
lcall
push
popa
movb
jne
mov
movsb
push
and
jno
jge
sub
pusha
push
ds
xchg
fwait
pop
loopne
lcall
fidivrs
popf
aad
ficomps
bound
adc
jg
ds
stc
lcall
mov
popa
mov
fistps
pop
nop
and
nop
jg
and
lods
dec
pop
or
adc
jge
xlat
cmp
inc
fidivs
outsl
mov
adc
inc
and
int
jecxz
jg
sub
pop
sub
adc
xlat
repnz
mov
pop
int
mov
cmp
aaa
cmp
jge
das
lahf
js
inc
dec
sbb
repz
fmul
inc
xchg
jg
orb
ret
pop
jmp
or
fnsave
cmovp
lock
and
and
add
xlat
ja
test
mov
sub
jg
pop
addr16
sub
adc
lcall
inc
popf
outsl
cmpsl
jp
mov
and
sahf
dec
lret
xchg
iret
aas
mov
fsts
cmpb
arpl
imul
xchg
mov
inc
repz
mov
jl
dec
das
xchg
inc
jb
cs
gs
dec
add
cmp
rol
sub
test
cmp
cmp
in
test
dec
mov
rcrl
cltd
and
sub
pop
lahf
xchg
and
out
imul
aad
mov
xchg
in
pop
lcall
cltd
add
pop
push
adc
cmp
pop
fsubs
add
into
or
outsl
stos
xchg
inc
sbb
cmpsb
pop
jae
mov
add
jecxz
add
in
jecxz
and
in
mov
pop
lahf
dec
daa
adc
or
cwtl
ret
cmp
or
xchg
andb
gs
shlb
lret
dec
xlat
xchg
add
popf
dec
mov
jle
mov
mov
add
stos
inc
jae
shl
mov
and
mov
xchg
jb
dec
iret
fimuls
and
inc
pop
xor
adc
sub
cwtl
jnp
adc
pop
cmpsl
int
setne
test
decb
and
inc
xchg
pop
cmp
pusha
push
shl
lock
loope
dec
adc
sub
or
or
inc
or
jae
popa
inc
xchg
in
sahf
jge
repnz
push
push
in
cli
fmuls
aas
inc
jae
sub
adc
cmp
mov
insb
cmp
push
and
int
or
jae
cwtl
popa
push
inc
adc
xlat
testl
inc
fldt
scas
fisubrs
cwtl
cmp
pop
scas
popl
sub
mov
lods
add
mov
sti
cwtl
jo
dec
ja
pop
lahf
xlat
aam
jae
pop
jg
dec
cwtl
icebp
jl
pop
decb
sahf
adc
roll
icebp
jle
add
jnp
mov
lods
out
std
ja
test
xor
mov
lods
test
cltd
mov
or
dec
stos
repz
xor
jae
shr
stos
mov
lea
hlt
popf
aam
ficoml
mov
scas
stc
mov
and
and
popa
sbbl
sbb
out
inc
mov
sub
pop
push
fisttpl
mov
and
or
notl
ja
adc
pop
pop
adc
jno
enter
lahf
or
bound
jne
repnz
xlat
lcall
push
sbb
dec
hlt
iret
xchg
xor
sub
popl
ja
sub
jecxz
xor
mov
loope
mov
and
or
xchg
jge
jle
sbbl
test
push
jne
mov
sahf
hlt
inc
cwtl
imul
lcall
sarl
ljmp
rorl
and
lret
aas
pop
mov
xchg
lods
loope
dec
ret
inc
ljmp
push
sbb
jp
jg
mov
add
mov
dec
testl
pop
out
push
cld
lret
mov
pop
dec
lret
jge
lret
and
pop
push
jp
shl
sahf
inc
lods
dec
mov
aam
insb
popf
pop
lahf
mov
and
outsb
push
sub
pop
or
sub
jbe
sarb
xchg
adc
mov
arpl
sbb
and
xor
pop
mov
jno
mov
gs
jnp
sbb
aam
inc
ljmp
test
leave
sub
and
icebp
scas
repz
pop
mov
sbb
push
ror
jge
dec
bnd
jge
call
insl
mov
mov
push
mov
cmpsl
xchg
pop
test
repz
add
dec
pop
shrl
jne
push
xchg
lock
lret
mov
rcrl
popf
scas
sbb
aad
mov
ret
cmp
mov
xchg
adc
iret
lods
xchg
lret
mov
mov
inc
mov
leave
push
sbb
shll
xchg
mov
pop
inc
gs
test
push
xchg
dec
add
sbb
cmpsl
inc
in
pop
jne
push
push
jge
dec
fisubrs
lahf
mov
xchg
in
mov
cmc
mov
popf
mov
xor
pop
mov
mov
sbb
adc
popa
mov
xchg
stc
cmp
pop
lahf
cwtl
jl
out
shll
lods
pop
inc
jg
mov
xchg
pop
push
cs
xor
lahf
adc
sub
enter
daa
add
pop
push
jae
adc
and
cwtl
inc
xchg
add
mov
xchg
mov
fstpl
nop
sub
rorl
sub
or
push
mov
or
or
scas
pushf
mov
push
lods
cli
das
inc
adc
inc
idivb
sbb
iret
sbb
dec
fistps
push
jmp
pop
mov
pop
and
inc
dec
push
push
jne
adc
cli
call
jo
outsb
pop
fistpll
pop
and
jg
pop
lahf
mov
test
and
push
aaa
pop
sub
inc
cld
jecxz
imul
sub
mov
sbb
lea
cmp
sub
add
xor
add
mov
sti
sbb
fsubrl
jge
dec
aam
outsb
lahf
testl
add
bound
mov
movsl
add
loope
push
jp
or
pop
pop
xor
js
and
sub
pop
push
jo
addl
in
jno
mov
cmp
stc
scas
pop
and
dec
sub
pop
test
mov
pop
nop
inc
and
fdivrl
fcoml
push
cmp
add
xchg
dec
pop
push
lret
ficoml
dec
jecxz
hlt
push
and
bound
sbb
sbb
pop
jle
push
xchg
jno
mov
add
rorl
adc
stc
sahf
cmp
fwait
adc
pop
xchg
aad
push
stc
idivb
cli
mov
dec
or
roll
push
lahf
push
std
sub
inc
rcll
jo
push
and
sub
aad
daa
xchg
jmp
data16
popf
leave
cld
mov
inc
push
sub
jl
rorb
sub
pop
jns
test
mov
test
rcrl
popl
std
fdiv
cwtl
or
sub
dec
int
mov
lods
les
roll
pop
test
sbb
inc
add
and
and
mov
mov
mov
std
adc
xchg
and
adc
ficomps
loopne
cmp
mov
nop
ret
add
jge
sub
jns
push
stos
pop
mov
xchg
repz
dec
mov
popf
in
pop
add
roll
adc
or
inc
mov
pop
push
ja
xchg
dec
sbb
pop
test
xchg
cmp
xchg
iret
mov
mov
into
and
inc
cs
push
and
xor
add
add
push
pop
filds
fwait
popf
and
lahf
stc
and
inc
gs
cwtl
popf
push
enter
push
mov
sub
lods
xchg
test
loopne
cld
popf
or
mov
dec
mov
push
mov
fbld
add
inc
cli
add
popf
jb
notl
fwait
test
sti
dec
loopne
cli
cltd
stos
dec
sbb
mov
sub
lds
mov
cmp
popf
outsl
inc
cmp
aam
test
testb
inc
into
test
push
je
les
cmp
decb
xchg
push
mul
push
not
push
dec
aas
or
adc
fmull
inc
aad
repz
cmp
add
and
sub
nop
fsubr
mov
lds
mov
xor
xchg
sub
movsb
lahf
mov
or
nop
pop
movb
push
lahf
test
test
mov
or
sub
dec
pop
pop
scas
mov
or
pop
jge
lret
inc
movsb
fsubs
add
pop
test
push
aaa
or
inc
movl
aas
push
sub
aas
inc
sub
or
adc
lods
repnz
inc
pop
inc
adc
lods
and
xor
cld
sub
or
jno
pop
inc
lahf
xchg
jmp
mov
int
inc
add
inc
mov
xor
sub
cmp
pop
lcall
xor
mov
pop
addr16
jae
add
fistps
lods
outsl
push
ss
mov
sbb
daa
jns
adc
cli
and
mov
rol
inc
in
in
cmp
out
jae
and
push
pop
pusha
ljmp
xchg
mov
mov
mov
pop
clc
mov
insb
iret
sbb
fwait
mov
adcl
rclb
or
lahf
inc
xchg
jnp
jns
pop
adc
jecxz
mov
rcrb
push
subl
jge
pop
push
idivb
pop
mov
sti
pop
ret
inc
mov
je
dec
sub
mov
popf
jmp
fidivs
or
fisttps
lcall
and
adc
out
test
mov
sub
mov
push
imul
mov
jno
and
cmpl
xchg
jno
mov
ret
push
outsl
imul
or
cld
popf
mov
cwtl
and
and
ds
push
dec
popa
andnps
sub
lcall
inc
jb
mov
push
adc
add
mov
in
dec
andl
std
out
inc
daa
mov
sahf
movsl
loop
js
xchg
or
fmuls
pop
testl
inc
sbb
xchg
lds
gs
adc
mov
sahf
inc
inc
fcomp
inc
dec
pop
hlt
or
dec
insl
jo
jb
add
std
addr16
rorl
stc
cwtl
xchg
rolb
inc
mov
cmp
shl
mov
enter
iret
mov
nop
outsb
inc
jl
sub
cmp
rcrl
rclb
push
add
imul
in
cmpsb
or
sub
adc
int3
mov
cmp
dec
add
imul
and
idivl
sbbl
std
popf
insl
push
lea
pop
ds
mov
pop
or
inc
stos
xchg
ljmp
aad
lods
sar
xor
out
cmp
leave
xor
mov
sub
out
push
add
pop
inc
push
jmp
dec
or
dec
push
jno
mov
orl
jae
jb
pop
out
js
jge
xchg
in
icebp
jb
lret
bound
pushf
jp
aas
shrl
mov
int3
cwtl
xlat
inc
inc
pop
push
sub
xchg
push
xchg
mov
lahf
add
pop
mov
cli
xchg
mov
push
or
fucomp
mov
lea
in
mov
pop
pop
arpl
rclb
mul
sbb
fdiv
stos
pop
jno
cmpsl
mov
nop
mov
int
sti
sub
xchg
or
sbb
outsb
adc
cmpsb
inc
cmp
andb
lret
scas
adcb
lods
mov
xchg
negl
test
cmpsb
sub
mov
push
xor
sub
repnz
and
inc
dec
sub
arpl
mov
cli
inc
scas
jo
inc
andnps
out
and
nop
loope
loopne
inc
ss
leave
jne
outsl
dec
lcall
das
sbb
add
push
adc
aad
inc
int3
test
xor
xchg
mov
lods
cld
mov
push
lahf
push
pushf
cmpsb
les
lahf
shl
sub
lock
push
and
mov
dec
pop
incb
add
jne
dec
sub
popf
push
xor
enter
sbb
loope
adc
out
pop
jae
lahf
je
jmp
orb
xor
xchg
mov
or
jno
lahf
xor
jp
int3
sbb
cld
mov
mov
lahf
cmp
add
mov
out
dec
sub
out
int
add
cs
or
jl
nop
pop
and
adcb
push
xchg
lahf
sbb
lods
popa
jb
sub
add
pop
stos
cld
push
daa
push
push
fildl
cmp
cmpsb
aaa
mov
sbb
nop
gs
cld
dec
popf
sub
xlat
loope
fcomps
ret
mov
gs
rolb
jecxz
in
push
jge
dec
ret
and
add
rorl
hlt
push
mov
mov
push
lret
sub
dec
cmp
aad
int
xchg
mulb
test
pop
movsl
jl
dec
cli
fstpl
sub
mov
insb
sub
inc
adc
js
mov
cmp
daa
daa
data16
das
mov
or
and
insb
pop
mov
dec
mov
jg
rcrb
mov
sbb
out
xchg
mov
add
xchg
jl
jge
ja
push
xchg
cmp
out
mov
cli
pop
sbb
sub
sbb
dec
ficomps
sbb
fwait
mov
sbb
push
adc
jnp
add
mov
dec
or
or
popf
sarb
mov
pop
dec
scas
sarl
sti
out
push
adcl
pusha
sbb
push
and
cmp
push
outsl
in
or
push
pusha
pop
in
sbb
cs
lods
iret
adc
sbb
xor
out
dec
int3
push
mov
cmp
outsb
dec
dec
pop
pop
aas
dec
outsl
sarb
push
sub
xor
in
pop
sbb
dec
pop
movsb
test
add
sbb
sti
dec
fimuls
pop
adc
dec
jp
lea
insb
inc
add
dec
dec
std
wrmsr
mov
dec
imul
cmpsb
pushf
inc
cmp
mov
scas
jg
iret
test
and
cli
insl
xor
sahf
xchg
mov
push
xchg
cmpsb
sub
lods
inc
fsubr
push
sbb
scas
addr16
pop
add
std
push
jg
pop
adc
and
sbbb
push
lea
inc
movsbl
fisubrs
jl
sbb
dec
mov
clc
scas
inc
into
cmp
inc
insl
inc
push
int
inc
cmp
lods
ds
sbb
jl
or
push
scas
xor
lods
adc
int3
lods
sub
popa
insb
add
dec
sbb
sub
out
and
insl
pop
pop
cwtl
dec
cmp
sahf
or
cld
popa
or
mov
in
push
jp
popf
inc
fildll
jg
es
dec
fsubl
jl
pushf
es
les
pushf
gs
enter
pop
sbb
arpl
xchg
pop
add
xchg
test
xor
frstor
xlat
pop
fs
dec
jb
or
or
sub
je
pop
and
adc
jle
mov
loope
and
adcl
iret
dec
cmp
mov
lahf
ret
jp
ljmp
pop
lahf
inc
push
inc
imul
in
popf
adc
sub
push
fidivrs
in
add
xlat
add
mov
push
mulb
mov
pop
sbb
pop
idivb
add
cmp
pop
rsqrtps
jge
cmp
mov
jecxz
push
cwtl
xlat
aas
mov
pop
or
xor
cmc
adc
or
stos
addl
cmp
imul
or
fsubrs
jecxz
out
cwtl
jp
mov
repnz
pusha
cmp
fistpll
xor
sub
pop
jge
pop
fbld
and
flds
xor
inc
sub
cld
call
xchg
or
ja
or
inc
addr16
xchg
aad
and
dec
jg
stos
mov
mov
add
cmp
aas
jp
add
repnz
or
pop
and
jl
jle
addr16
stos
lcall
les
push
lahf
rolb
cmp
xor
insl
arpl
push
movsb
lahf
iret
and
cmp
dec
sub
daa
xorb
bound
scas
test
push
mov
test
inc
cmp
mov
add
notl
inc
jmp
add
mov
xchg
push
mov
pop
sub
in
in
jge
push
call
ja
xor
dec
add
add
and
mov
out
int
dec
adc
xlat
loope
push
ja
mov
push
mov
fcoml
and
mov
dec
pop
test
cmpsl
imul
popf
adc
shl
inc
lahf
pop
or
dec
movsb
mov
gs
stos
fnstsw
and
pop
xorl
pusha
xchg
lahf
push
ret
inc
movsl
mov
mov
cmpsl
out
sub
fsts
jo
testl
xchg
inc
stc
mov
rcll
jns
dec
inc
incb
dec
dec
push
std
inc
push
cmp
cwtl
xor
in
shll
cmp
adc
repz
ror
push
xor
sbb
push
daa
jno
cwtl
pushf
gs
lea
fistps
push
jbe
std
std
inc
out
push
inc
ret
minps
shll
or
js
xor
cmp
fistpl
insl
insb
xchg
cmc
insl
add
inc
or
cmc
xchg
cltd
nop
in
mov
or
pop
daa
cmp
dec
mov
mov
mov
adc
pop
xor
mov
and
lds
cmp
stc
xor
stos
rcr
cmp
inc
pop
bound
popf
sahf
sbb
mov
lods
ds
push
xchg
or
aas
and
jmp
pop
or
xor
popf
lahf
paddw
insb
jns
or
imul
adc
push
push
lahf
testl
jecxz
xchg
cwtl
outsl
cmp
bnd
cltd
das
test
addr16
in
mov
cld
mov
nop
mov
shr
rolb
outsb
imul
dec
mov
int3
xchg
xchg
add
repz
inc
sbb
fwait
mov
test
ss
add
inc
jle
jge
fcompl
jecxz
adc
lahf
mov
lahf
stc
pushf
and
mov
cmp
jg
ljmp
adc
rcrb
xlat
cmp
mov
mov
and
inc
jg
ss
and
or
leave
lret
mov
sub
insl
xchg
or
jg
inc
and
jg
adc
sbbl
cld
popf
add
mov
add
ret
adc
jecxz
icebp
jae
adc
xchg
adc
nop
popf
pop
add
rcl
faddl
mov
mov
pushf
fcoms
stc
adc
out
jge
jno
in
pusha
rcll
pop
rolb
stc
jno
sbb
push
shrl
mov
mov
pop
inc
dec
fisttps
jle,pt
xor
pop
scas
ja
ret
popf
xchg
loope
and
test
sti
int
dec
mov
jbe
pop
mov
mov
pop
or
sub
xor
jg
inc
iret
daa
push
lahf
repnz
out
ret
sbb
cmp
adc
out
or
lock
lcall
and
cmp
or
pop
mov
push
sbb
outsb
dec
push
add
jb
add
mov
sbb
movsb
or
out
mov
roll
sbb
testl
lahf
pop
pop
in
imul
mov
mull
sub
test
cs
inc
mov
cmp
lahf
cli
jno
mov
pushf
popf
es
shl
out
jp
outsl
cmp
sbb
dec
mov
cmp
xor
lcall
mov
jge
adc
sub
stos
xchg
cmpsl
add
jge
lahf
inc
add
stc
iret
test
fidivrl
stos
or
cmp
daa
outsl
loopne
lret
mov
push
mov
or
pushf
cmp
mov
pop
lods
enter
enter
mov
xor
mov
lcall
cwtl
sub
test
mov
mov
add
push
ss
popa
push
lret
adc
add
pop
lahf
subl
adcb
push
daa
mov
or
js
and
inc
daa
jl
jae
lahf
dec
and
add
jne
push
cmpsb
inc
movsb
mov
test
jmp
pop
add
xchg
arpl
sbb
mov
cmp
test
mull
pop
incb
jg
int3
dec
mov
xchg
xor
xchg
jo
lods
and
xorl
adc
jge
and
inc
push
rcrl
inc
and
or
mov
jno
stos
push
repnz
pop
dec
push
decl
sbb
aas
out
fcomip
daa
jecxz
add
and
push
adc
sbb
adc
cmp
out
mov
inc
add
jnp
mov
mov
stos
in
mov
sub
sub
js
xor
fbld
xchg
push
sbb
les
push
cmp
xchg
dec
inc
push
mov
dec
xchg
cld
mov
std
fistl
lods
xchg
inc
pop
movsl
push
mov
sub
inc
dec
roll
subb
fdivrl
dec
in
notb
xlat
adc
push
int3
cli
xor
pop
adc
fwait
inc
push
int3
dec
cmc
jge
mov
lock
xlat
add
les
xchg
sub
adcb
movsl
int3
push
das
push
out
fiaddl
out
scas
fwait
xor
pop
adc
and
std
or
lahf
imul
dec
pop
add
test
mov
mov
and
cmpsl
movsb
movsl
movb
test
xchg
jbe
popa
xorl
jne
xchg
inc
leave
mov
or
ja
daa
push
ret
call
dec
out
mov
inc
mov
fisttpl
mov
repnz
mov
imul
sbb
cmp
dec
cmp
adc
sub
arpl
fadds
sub
stos
lret
shll
mov
jae
mov
jmp
push
pop
movb
push
repz
adc
mov
test
inc
inc
jp
jnp
pop
or
cmp
inc
inc
leave
or
add
pop
sub
cmpl
cmp
outsb
inc
inc
jg
inc
cmp
xchg
and
add
and
jo
es
sub
roll
sahf
outsb
lea
flds
lahf
mov
mov
push
cli
mov
mov
aas
popf
loop
in
push
cltd
xchg
std
popa
ljmp
or
data16
dec
lea
jl
cmpsl
lock
movsb
and
fcomip
cmp
imul
inc
dec
push
cli
lock
xor
into
lds
sub
repz
mov
inc
mov
adc
std
sub
xchg
sub
lods
dec
outsb
xchg
repnz
and
xlat
or
fnstsw
inc
mov
pop
sub
xchg
or
inc
aaa
and
cmp
cwtl
add
push
xor
xchg
jp
mov
add
mov
mov
or
add
fmul
repz
insl
mov
lahf
movb
xor
push
jge
sub
add
daa
lret
sbb
icebp
inc
filds
sahf
xchg
pop
ffreep
cld
aad
inc
and
aas
inc
xchg
dec
adc
and
ss
cmp
dec
out
outsb
jno
fstpt
cmp
mov
scas
out
push
mov
stc
sub
push
fidivs
cmc
pusha
loop
jnp
sbb
push
orl
push
ja
lahf
out
repnz
loopne
add
sbb
add
lea
call
scas
enter
cmp
jecxz
shlb
dec
xlat
lahf
aad
mov
sbb
cmp
and
cs
mov
mov
insl
xchg
daa
loop
rclb
pop
repnz
jns
pop
push
sbb
loop
mov
jae
sub
push
dec
ret
sarl
mov
fisttps
outsb
popf
adc
test
test
or
addr16
dec
and
std
inc
movsl
ds
out
data16
pop
mov
xor
push
jns
test
adc
xor
shufps
popf
mov
jo
jae
inc
dec
loop
mov
mov
das
sbb
sarb
andb
mov
jg
add
push
mov
and
inc
xor
test
pop
pop
cmp
and
inc
leave
cmpsb
test
pop
aad
jl
sbb
cmp
fidivrl
mov
pop
mov
dec
sub
arpl
or
push
ja
mov
adc
mov
in
call
int
fidivrl
push
pop
fwait
imul
dec
mov
and
jecxz
inc
dec
pop
sbb
pop
pop
iret
ljmp
sbb
mov
xchg
sub
lahf
xor
rcrb
sbb
cmpsl
inc
movsb
inc
stos
loope
push
push
pop
pop
cmp
mov
nop
inc
and
xor
add
cld
push
out
sets
and
out
mov
pop
mov
add
push
aaa
jge
mov
mov
sti
pop
xchg
pop
add
loope
and
sarb
pop
std
imull
call
and
or
pop
mov
lock
es
outsb
fistpll
add
dec
sbb
stos
ret
ds
mov
shrl
xchg
movsb
cli
imul
inc
lahf
aas
mov
mov
movsb
cs
sub
mull
or
cmpsl
mov
sti
int3
adc
popf
pop
cmp
add
adc
ja
add
lahf
push
inc
push
cmp
sbb
int3
push
mov
mov
push
jae
std
repnz
loope
or
testb
mov
mov
sbb
or
mov
popa
jge
adc
xor
fcoml
dec
jb
adc
push
bound
add
cltd
add
out
clc
mov
ret
pushf
jecxz
loop
push
inc
and
jno
xlat
sbb
pop
mov
jo
mov
jl
ljmp
pop
repnz
orb
insl
push
adc
mov
and
out
jl
fists
push
cltd
daa
mov
insl
movsb
dec
push
dec
in
push
mov
xchg
or
xchg
nop
mov
inc
pop
push
data16
inc
ret
push
data16
or
sub
clc
inc
iret
sub
pop
nop
sub
fdivrl
inc
add
out
popf
cmp
mov
ret
nop
cli
pop
insb
inc
repz
jge,pn
mov
inc
stos
scas
push
mov
lahf
adc
out
mov
jle
nop
xor
out
jp
or
mov
cld
or
popf
and
and
dec
dec
mov
and
stc
xor
push
or
jge
loopne
jnp
mov
hlt
pop
inc
or
frstor
adc
jl
test
xor
and
xlat
adcb
jnp
repnz
pop
push
aas
cmp
mov
sbb
lahf
xor
or
out
or
aam
rcll
into
and
loopne
nop
leave
add
mov
jns
cmpsb
mov
stc
jge
daa
xchg
add
call
push
xor
imul
cmp
fstps
inc
lret
push
jecxz
jnp
add
sti
icebp
lds
xchg
xlat
sbb
or
cwtl
jmp
fcoms
dec
jae
dec
xchg
sbb
inc
inc
mov
mov
sbbl
inc
popf
fwait
out
jle
popa
pop
inc
push
xor
movsb
push
jnp
cld
fstpl
imul
adc
ljmp
out
ret
jg
shll
loopne
pop
lret
adc
test
aad
shrl
and
xchg
adc
cmp
sbb
test
insl
imul
ret
or
push
adcb
or
scas
jl
add
sbb
inc
add
xor
cmp
mov
pop
sub
out
push
jno
lods
and
addb
jecxz
or
mov
add
js
icebp
dec
shrl
dec
jb
sahf
xchg
negl
adc
bound
sub
cwtl
shlb
ret
add
mov
xchg
pop
push
pop
shll
or
bound
pop
dec
push
and
xchg
or
addl
jne
es
jge
in
sub
cmpb
jmp
inc
mov
inc
mov
xor
push
jns
sti
int3
jbe
and
mov
lahf
shlb
jge
das
add
xor
push
cwtl
ret
jno
test
sub
sub
jl
inc
dec
cmp
outsb
pop
push
lods
sysret
mov
rcrl
call
les
adc
and
bound
mov
jne
lret
cmp
nop
outsb
mov
and
mov
cmp
je
xor
mov
mov
outsb
mov
scas
loope
lea
mov
mov
mov
xor
push
repz
je
or
push
mov
xor
dec
mov
fbld
rolb
xor
js
mov
adc
mov
and
jg
sahf
movsb
push
add
dec
xchg
aam
ret
mov
imul
lods
sub
cmp
inc
jg
cmp
roll
iret
xchg
cmp
out
nop
lahf
lcall
add
mov
bound
push
dec
fisubl
and
scas
sub
repz
mov
sar
sub
inc
sub
hlt
inc
shlb
dec
repnz
repnz
call
lret
loopne
mov
and
lods
pop
inc
lods
pop
lahf
mov
pop
jge
sar
xor
cmpsb
xor
cmpsl
xor
pop
shll
inc
xorl
pop
adc
adc
cld
pop
adc
cld
jle
add
adc
lods
xor
jmp
insl
ret
jb
ret
pop
jge
xor
add
fcompl
pop
or
cmp
cld
add
lahf
test
out
fimull
insl
or
xor
mov
sbb
push
inc
inc
inc
cld
jne
pop
and
outsb
xchg
test
aaa
fstp
and
xor
ds
or
jecxz
fsts
nop
popa
sub
push
xchg
lahf
js
mov
mov
loopne,pt
fsts
push
sbb
adc
test
add
jae
mov
mov
jns
stos
lret
push
insl
sti
jo
call
jnp
jl
mov
fucomi
movsb
imul
mov
cmp
mov
and
dec
clc
repnz
lods
fwait
js
bound
in
mov
cs
pop
jp
pop
ss
jmp
mov
pop
add
xchg
cmp
inc
dec
mov
pop
jae
inc
fnstcw
lret
xchg
pop
leave
xchg
mov
test
cmpsb
arpl
mov
mov
clc
adc
out
adc
fsubrl
mov
adc
add
jns
out
push
loop
mov
sub
or
or
cwtl
and
dec
jns
mov
enter
aas
outsl
idivl
test
in
jbe
sbb
or
std
cmpsb
add
loop
sbb
push
inc
dec
scas
dec
push
ret
sub
xchg
out
mov
loopne
test
xlat
xchg
push
out
dec
jl
popf
mov
testl
cmp
decb
lahf
iret
or
jnp
adc
xchg
mov
jge
jl
cwtl
xchg
inc
insl
pop
mov
jmp
xlat
out
mov
cmp
mov
mov
subb
cmp
jecxz
push
push
je
lahf
mov
cmp
sbb
arpl
test
jl
push
sarl
mov
inc
cld
dec
ret
and
xor
dec
lods
dec
add
js
sbb
inc
mov
aas
mov
add
lahf
or
jne
add
or
test
xchg
xor
insb
inc
inc
mov
sub
and
cmc
gs
sub
xorl
jae
pop
repnz
sub
jg
mov
xor
push
insb
cmp
fstpt
lcall
and
fsubl
pop
sub
sbb
scas
mov
int3
stos
cli
daa
push
inc
iret
jae
in
js
jecxz
pushf
or
sbb
aaa
adc
push
xor
xchg
popf
negb
pop
lods
scas
mov
cmp
inc
push
cwtl
xchg
xchg
fs
xchg
or
pop
dec
mov
push
jmp
mov
jp
jg
mov
cmpsb
mov
sbb
or
sarb
and
pop
mov
dec
sbb
faddl
fs
nop
outsb
inc
adc
mov
xlat
addr16
inc
or
xorb
out
orl
add
insl
cmp
rolb
push
mov
mov
mov
sar
mov
mov
mov
leave
xchg
pop
sub
sub
lahf
mov
jge
test
sub
dec
aaa
mov
popf
sub
dec
iret
add
add
mov
repnz
es
fisubs
add
mov
xchg
push
ret
pop
adc
mov
lret
jb
fbld
cmp
and
mov
add
pop
xchg
popf
mov
sub
mov
pop
and
outsb
lcall
dec
mov
cmp
inc
xor
xchg
xchg
inc
sahf
cli
inc
push
sub
xor
cmpsb
or
lret
jge
dec
push
and
or
mov
adc
lods
jecxz
in
icebp
mov
popf
les
xor
sbb
dec
adc
and
insl
out
mov
or
mov
sub
xchg
es
shlb
push
jge
mov
jp
inc
fnstenv
jns
cmp
cmpsl
lds
pushf
xor
pop
sar
stos
in
xor
jb
lahf
leave
xlat
pop
jns
dec
es
lret
mov
dec
xor
dec
mov
and
repnz
into
test
imul
and
ficompl
cmp
xchg
and
lahf
lds
xor
in
in
movsb
add
jo
out
add
stc
fstp
ja
fcom
stos
jns
pop
xchg
push
pop
notl
ss
sub
jnp
jne
cltd
ljmp
sub
stos
mov
jo
fwait
push
ret
fisttps
lret
fsubr
cs
and
shl
scas
rorb
orl
or
or
call
inc
aad
xor
adc
repnz
and
xor
fsubr
notl
add
jecxz
inc
mov
adc
sub
stos
shlb
sbb
add
cmp
adc
sti
jb
mov
and
jbe
inc
pop
dec
sti
lea
cmp
fcmovb
rolb
cmp
sub
jmp
cld
push
cmp
lahf
xchg
push
jae
and
out
mov
int
sbb
mov
mov
adc
outsl
stos
cmp
inc
sub
in
sbbl
into
adc
jnp
imul
or
cld
push
fcoms
imul
movsb
push
pop
popa
cltd
mov
add
jnp
add
mov
jne
push
and
cmp
xor
div
and
adc
repz
cwtl
outsb
dec
pop
cli
mov
push
into
arpl
popa
pushf
pushf
in
adc
or
jecxz
pop
or
gs
mov
mov
in
insb
popf
or
rolb
cmpl
or
popf
in
rcll
aad
repnz
dec
push
and
xchg
xchg
or
fnstenv
xor
enter
into
fistl
mov
mov
fldenv
xchg
push
rolb
dec
push
fdivrl
push
lods
pop
jge
test
dec
repz
mov
cmp
movsb
outsl
add
pop
sub
sahf
adc
loope
adc
and
arpl
lods
lods
repz
lods
and
and
mov
sub
mulb
xchg
jo
clc
loop
pop
xor
inc
push
popf
fwait
cmp
or
pop
ror
adc
pushf
dec
adc
jl
pop
mov
sbb
sbb
loop
cmp
dec
outsb
shr
push
or
fsubrl
xchg
bound
fisttps
cmpsl
or
cmp
jecxz
push
pop
pop
std
imull
mov
cltd
mov
sbb
popf
inc
test
mov
in
dec
out
sub
and
push
dec
lahf
or
fistps
pop
std
inc
aad
rcrl
xlat
test
call
test
pop
jnp
mov
add
int
fadds
cs
cwtl
jne
sarl
pop
icebp
lret
and
jge
inc
pop
mov
jmp
lahf
xchg
jno
repnz
in
sti
les
lcall
sbb
sti
and
xchg
clc
add
movsb
scas
push
add
cmpsb
jp
daa
xchg
pushf
outsb
adc
mov
inc
xchg
pushf
jno
dec
pushl
lods
shll
mov
test
loop
pop
data16
mov
dec
jecxz
sub
inc
enter
sub
xchg
pushf
pop
ffreep
subb
out
jne
std
push
push
inc
inc
cli
dec
jo
cmp
repz
lock
enter
mov
incb
imul
popa
imul
cmp
push
mov
dec
or
xor
push
mov
jbe
fisubrl
xlat
popf
adc
pop
rcrb
mov
test
out
add
push
mov
pop
icebp
xchg
inc
ret
je,pn
mov
cmpsl
shr
outsb
jecxz
xor
mov
in
xor
and
lahf
or
mov
sbb
rcrb
xchg
lods
imul
add
int3
sub
pop
idiv
test
sub
les
repz
sub
mov
push
push
ret
mov
jg
adc
sbb
xchg
rolb
test
mov
insl
lds
aad
and
mov
mov
inc
mov
incb
mov
pop
pop
sub
aas
mov
push
std
ja
aas
adcl
mov
add
in
les
pop
or
cli
nop
enter
out
jns
movsb
inc
mov
add
add
cmp
sbb
jmp
repz
aas
pop
dec
mov
mov
and
pop
jp
sub
rcrb
outsb
mov
sub
add
jecxz
sub
fs
sbb
xor
shl
movsb
ds
xlat
sub
sahf
cmpsb
ja
cltd
jge
and
xchg
addr16
into
mov
nop
jmp
or
pop
xlat
jmp
fsts
movsl
inc
jb
jge
or
lahf
movsb
scas
xor
mov
jbe
int3
and
out
pop
push
mov
rcrb
int3
dec
sbb
std
sbb
xchg
mov
jecxz
and
test
adc
mov
cs
std
lock
xor
mov
mov
and
add
imul
add
aaa
xchg
out
lods
mov
negb
pop
push
pop
cmp
add
push
and
pop
daa
ret
or
divl
fistps
push
mov
fwait
jb
shrl
push
and
ja
jnp
popl
pop
mov
repz
xchg
jno
mov
test
jecxz
lea
stos
lcall
sbb
jae
ds
les
das
out
push
ret
outsb
cmpsl
and
lahf
sub
adcb
pushf
aad
sbb
adc
mov
push
fcompl
mov
inc
shl
push
icebp
lcall
push
jge
xor
sahf
gs
scas
mov
mov
pop
adc
out
hlt
push
push
sbb
rorl
mull
xor
enter
add
push
mov
fcomps
lods
out
roll
jb
adc
mov
pop
lock
and
mov
jb
insl
pop
jbe
pop
cld
lahf
cmp
fucomp
bound
adc
jl
mov
sbb
adc
pop
pop
pusha
or
cld
sahf
cmc
insb
repz
or
jno
mov
fcomps
mov
dec
lahf
sub
int
add
add
inc
lahf
add
push
fldt
jge
inc
pop
inc
int
imul
jl
xor
xchg
in
test
pop
stc
ja
mov
pop
dec
lods
add
lret
push
out
add
int3
icebp
scas
add
add
mov
xor
xor
or
jo
rcrl
jl
jae
sub
xchg
test
jl
mov
int
add
xor
pop
imul
mov
nop
stos
pop
daa
lret
inc
jae
sbb
rol
xchg
scas
jae
iret
xor
cmp
stos
fidivrl
loop
xchg
ja
add
pop
lcall
jb
sub
jge
xor
add
dec
sbb
adc
mov
inc
imul
mov
jae
mov
xchg
adc
mov
icebp
jmp
xchg
or
sbb
xlat
out
add
emms
sub
je
xchg
inc
ss
dec
cld
stos
pop
jo
pop
loopne
mov
inc
mov
jle
jle
mov
aad
pop
stos
sbb
dec
xlat
pop
fs
xor
xchg
loope
psubsw
add
fldt
xchg
xlat
push
pop
lahf
xchg
adc
jb
leave
mov
ret
xlat
mov
or
lods
push
icebp
cwtl
sbb
and
ret
loope
mov
sti
adc
cmp
xor
and
adc
mov
cmc
daa
fs
out
mov
push
xchg
insb
lahf
stos
pop
addr16
and
and
insb
sub
cmp
adc
xorl
xor
out
lods
movhps
and
push
ja
lret
xchg
jne
sbb
mov
add
int3
scas
dec
push
scas
sub
outsb
loopne
cld
out
mov
mov
sbb
xor
mov
pop
jle
out
or
mov
jne
inc
lcall
iret
ss
orl
jl
xchg
fucom
push
cld
dec
pop
int
test
or
cmpsl
sub
and
popf
dec
test
xchg
jp
fistpll
je
in
jns
mov
out
xchg
jae
orb
ds
int3
cmp
sbb
adc
xchg
xchg
sbb
inc
lret
inc
or
movsb
lret
dec
mov
or
pop
mov
push
or
jne
jb
hlt
xchg
imul
sub
mov
dec
dec
add
push
add
add
pop
inc
and
mov
adc
cmp
arpl
mov
sub
aam
lahf
xor
add
test
pop
push
pop
stos
fldenv
cmp
jmp
lcall
pop
push
clc
xchg
loopne
dec
push
cmp
aas
pop
mov
mov
outsl
packsswb
out
inc
jge
dec
mov
cltd
mov
cmpsl
xor
sub
and
xor
mov
sub
sar
jmp
fimuls
popf
fdiv
mov
ret
test
sti
jl
popf
cmpsb
adc
cmp
lea
add
dec
push
xchg
mov
add
inc
into
xchg
push
sbb
scas
inc
mov
dec
pop
mov
repnz
dec
iret
fnstcw
arpl
mov
hlt
sahf
jle
mov
insl
aas
popf
ss
push
push
daa
in
pop
or
push
dec
daa
push
sub
cmpsl
das
xor
out
in
push
pushf
push
adc
add
gs
mov
das
sbb
xchg
std
dec
xor
mov
jbe
mov
dec
or
hlt
lea
xchg
xchg
cmp
fisttpl
jb
gs
push
jnp
sti
fdivs
jnp
aad
mov
mov
gs
sub
lods
lahf
mov
and
xchg
out
das
frstor
ret
push
data16
cmp
popf
hlt
lret
cwtl
pop
xchg
test
jg
aad
fldl
bound
inc
sub
lahf
mov
inc
dec
lock
or
inc
das
cmp
inc
adc
jmp
sti
mov
push
mov
jg
int3
scas
sub
scas
xchg
movsl
movsb
pop
arpl
popf
mov
mov
sbb
xor
xchg
cmc
imul
cwtl
mov
int
adcb
jb
mov
ss
lods
fiaddl
mov
incl
repz
cmpsl
jge
divl
pop
stos
pop
lahf
mov
xchg
cli
or
push
push
outsb
add
xchg
pop
cld
rcrl
mov
fmull
lahf
jmp
mov
call
and
ret
mov
xchg
movsb
pop
sub
inc
xor
adc
and
adc
inc
push
lahf
dec
mov
daa
aam
mov
xor
cmc
aad
xor
cli
loope
lahf
dec
jmp
push
cli
loope
xchg
inc
push
add
test
pop
lcall
push
mov
xchg
or
shll
xchg
jecxz
dec
idivl
mov
mov
ljmp
insl
xchg
mov
in
mov
aas
xlat
fildl
out
std
mov
les
aam
mov
xchg
jge
mov
xlat
add
roll
and
jnp
cmp
add
adcl
dec
inc
fwait
scas
test
sarb
test
sbb
dec
pushf
roll
adc
loope
inc
jno
mov
jns
cmpsl
movsl
cmp
ficoms
sub
cltd
xchg
xchg
arpl
pushf
cmp
mov
jno
int
lahf
sub
xchg
mov
insl
push
add
int3
sub
mov
push
sub
mov
lcall
outsb
repnz
push
sub
lret
loopne
rorl
xor
test
int3
mov
adc
faddl
inc
je
pop
std
xorb
jns
push
dec
add
lahf
pushf
cwtl
loopne
imul
jp
ffreep
and
mov
push
jl
stc
mov
sarl
sub
mov
std
repz
outsb
inc
pushf
dec
push
pusha
call
pop
inc
movsl
jno
xor
mov
mov
xor
cmp
mov
cmp
rorl
popf
and
lret
sub
int
sbbl
aas
inc
sbb
fs
scas
push
in
aaa
or
xor
ljmp
mov
into
and
add
mov
pop
or
adc
cmp
mov
sub
pop
movsb
inc
jae
pop
cwtl
cmpsl
dec
mov
loop
mov
dec
lea
bswap
inc
or
push
inc
movsb
pop
xor
sub
cmc
shlb
popf
addb
dec
divb
mov
pop
inc
sarl
insl
aad
xchg
insb
ficompl
pop
jbe
daa
aad
fwait
cmp
pop
icebp
rorl
sub
fildll
sub
lret
dec
lods
and
lea
mov
mov
pop
bound
fdivrl
shll
lahf
movsl
and
loope
je
lcall
dec
enter
mov
push
testl
cmp
nop
popa
push
xchg
out
movsl
fwait
push
es
jecxz
je
dec
das
sahf
push
stc
sbb
mov
call
xchg
push
clc
jecxz
lods
add
cld
sub
jne
or
imul
jl
lods
out
xor
sbb
pushf
inc
push
add
dec
mov
repnz
pop
popf
mov
jge
lods
sbb
jns
jge
popf
outsl
cmpsl
jle
or
std
pop
inc
push
addr16
lahf
adc
adcb
push
aas
mov
outsb
push
out
incb
sbb
fildll
xchg
ror
in
push
add
jae
adc
pop
mov
popf
nop
sahf
and
in
pop
push
popf
idivl
or
fistpll
or
ret
jge
jmp
fs
movsb
test
cmp
mov
mov
jp
out
add
sub
mov
je
push
int
xchg
ss
and
sbb
xchg
out
inc
jb
mov
fcmovu
std
rcrb
and
inc
lahf
shlb
jp
pop
push
js
push
mov
add
push
popf
dec
sahf
cmp
outsb
pushf
sbb
gs
push
iret
add
fsubl
into
in
out
pop
adc
pop
dec
mov
pop
jmp
repz
icebp
mov
mov
sbb
outsb
loope
test
or
push
xor
popf
add
and
scas
lods
sbb
inc
mov
xchg
mov
mov
pop
dec
add
adc
mov
repz
or
stos
cmc
cltd
ror
js
ds
fwait
or
aam
inc
add
mov
push
add
mov
sbb
cld
fwait
or
je
clc
aam
xor
add
xchg
pop
mov
js
inc
xor
or
les
addl
sbbl
or
xor
clc
inc
and
sub
fists
adc
push
std
andb
or
jne
cld
push
mov
xchg
loop
jle
pop
sbb
or
imul
shl
push
add
dec
mov
jle
ds
cmc
add
int3
ja
lea
dec
jns
cmp
incb
sahf
shlb
outsb
popf
dec
sbb
arpl
sbb
out
in
out
xchg
cmpsb
dec
push
push
outsl
das
push
cli
loope
add
inc
ret
pop
mov
mov
lods
xchg
or
cmpsl
stos
add
enter
outsb
rcll
loopne
lahf
sub
repz
loope
mov
sbb
sub
jecxz
leave
add
adc
lahf
into
jmp
rolb
repz
scas
sub
fildl
jns
inc
xor
btr
stos
outsl
out
imul
xorb
into
or
iret
or
mov
and
mov
mov
aas
sub
or
cmp
mov
inc
stc
cmp
ret
mov
inc
sahf
scas
fistpll
add
popf
mov
fiaddl
outsl
jp
mov
std
mov
jge
fildl
push
add
mov
jmp
sub
push
mov
lock
imul
test
imul
jns
cmpl
mov
dec
inc
add
jecxz
hlt
popf
cmc
pop
movsl
xchg
jp
jae
outsb
jbe
idiv
mov
ficomps
clc
sub
es
sub
cmpsl
mov
out
addr16
mov
loopne
ja
mov
nop
icebp
std
lret
push
inc
dec
cld
mov
into
lcall
jge
test
fnstcw
pushf
lahf
ljmp
clc
rcl
aas
popf
jo
lahf
nop
xor
fdivl
sub
and
cwtl
xor
pop
in
std
cwtl
xlat
mov
mov
mov
xor
cmpsl
pop
outsb
inc
loope
dec
call
xchg
mov
pop
fildll
and
in
mov
dec
push
ret
lret
push
adc
mov
pop
mov
outsl
call
jae
andl
sbb
repnz
adc
jecxz
jns
adc
and
and
and
dec
jge
dec
xchg
fildll
idivb
cld
cli
push
loop
mov
lahf
out
stos
mov
adc
xor
mov
test
pop
cmpsl
pop
pop
mov
shlb
jnp
ljmp
cmp
aad
nop
fisttpl
push
out
xchg
lds
test
mov
push
test
dec
push
cmc
jmp
jecxz
push
mov
call
cmp
adc
jge
xchg
mov
xchg
fcomip
dec
sti
inc
cmpsl
sahf
mov
outsl
imul
rcll
pop
cli
sub
cwtl
outsb
pop
mov
aas
subb
sub
push
pop
mov
xchg
push
lcallw
incl
int3
adc
mov
mov
popf
mov
ret
sbb
lcall
aam
mov
popf
jg
sahf
mov
xor
mov
add
sub
lods
fnsave
stos
fnstenv
pop
sub
mov
cmp
mov
shl
mov
cmp
jns
push
cs
jl
cld
mov
hlt
subb
push
lea
lahf
test
add
fistpll
cmpsl
sub
sub
sbb
push
lahf
imul
js
xor
inc
sbb
dec
stc
adc
es
and
int
pushf
and
add
or
add
inc
scas
xor
iret
pop
shlb
push
sub
aas
xchg
ret
sub
or
mov
xor
fcmovu
mov
pop
ja
pop
inc
lahf
mov
call
xchg
add
mov
aaa
sub
out
or
ret
cs
ror
adc
popf
sub
xlat
sarb
lock
bndldx
pop
out
mov
dec
jge
jg
je
imull
mov
xor
rcrb
test
clc
and
lods
call
or
add
fs
cmp
mov
cmpsl
arpl
sub
push
pusha
bswap
sbb
bound
jl
int3
rol
fidivl
aam
mov
popf
jb
popa
rcrb
sub
fsubrl
repnz
jle
jecxz
repnz
rcr
pop
std
xor
cmp
shlb
sub
jp
scas
sti
out
push
push
mov
int
mov
or
dec
and
add
mov
xlat
cld
cmp
pop
xor
add
out
and
dec
lods
pop
shll
inc
mov
sbbb
xor
mov
jmp
xor
and
cmp
gs
call
dec
cmpsl
scas
mov
push
sub
sbb
shll
pop
je
and
mov
decl
mov
or
out
ss
cld
movsl
lahf
or
pop
dec
mov
in
mov
fcomps
out
push
push
and
clc
insb
jl
pop
jecxz
jle
out
aas
es
dec
dec
xlat
push
fmull
xchg
mov
out
adc
sbb
daa
mov
sub
xor
std
iret
out
ds
bound
mov
pushf
das
xchg
sbb
test
dec
dec
movd
jecxz
and
leave
pop
ljmp
and
cmpsb
sbb
adc
sti
int3
dec
push
std
dec
roll
or
sub
pusha
es
das
inc
add
pop
nop
ds
ss
dec
into
imulb
and
imul
inc
inc
dec
jl
cwtl
jle
dec
sbb
jl
sbbb
scas
push
xchg
push
test
aas
mov
or
mov
sub
jo
dec
pushf
jo
mov
xor
add
xchg
sbb
jg
in
inc
push
out
adc
bound
inc
sub
fdivl
pop
shlb
jb
push
arpl
sbb
adc
sub
cwtl
or
dec
dec
cmp
lods
inc
arpl
scas
add
aaa
fsubs
iret
jecxz
jo
divl
and
adc
sub
push
shl
bound
dec
mov
test
inc
loopne
mov
fistpl
ret
and
and
inc
or
mov
adc
mov
push
lahf
push
and
cmp
aas
inc
inc
mov
clc
inc
sbb
push
test
xor
rcl
outsb
dec
outsb
and
aas
ja
inc
lds
mov
fildl
ret
push
dec
xchg
adcl
and
push
xchg
dec
mov
or
mov
adc
clc
outsb
fwait
or
lahf
testl
xchg
cmp
xor
sub
popa
shr
and
push
imul
sbb
leave
scas
xchg
mov
js
pusha
jg
jge
lods
xchg
jns
and
pop
jns
xchg
adc
xchg
and
repnz
js
mov
daa
push
dec
sub
sub
cmpb
xchg
pop
jmp
jl
pop
and
pop
sub
repz
in
push
push
push
inc
fdivrs
fisubrs
xor
in
jecxz
xchg
inc
icebp
sub
xor
jmp
adc
jbe
sub
dec
flds
ljmp
or
cmp
mov
popf
add
push
lock
push
popf
sub
mov
insl
repz
sbb
addb
pop
filds
adc
lcall
outsb
pop
cmp
loope
cwtl
inc
dec
cmp
push
push
push
adc
arpl
ss
in
in
sbb
cmp
lea
add
sbb
clc
jle
dec
mov
dec
push
fists
jp
cmp
sti
mov
jmp
inc
add
xor
pop
or
testl
pop
jecxz
in
dec
and
movsb
push
inc
jnp
xchg
inc
or
sbb
mov
pop
ficomps
jg
xor
notb
pop
pop
pop
cld
inc
jno
enter
fstpt
fwait
mov
sar
shrd
jmp
add
fistl
jne
adc
sbb
dec
mov
incb
add
push
divl
xchg
insb
inc
or
xchg
ds
fwait
inc
repnz
int
push
int
push
out
sbbl
pop
mov
lahf
shll
pop
dec
cld
xor
shlb
roll
fadds
add
push
lcall
lahf
cwtl
push
pop
mov
add
xchg
xor
inc
repnz
js
rcrl
fistps
add
and
or
or
out
mov
popf
mov
sbb
sbb
test
add
int
dec
pop
ljmp
sub
add
and
rcrl
pop
mov
int
push
xchg
and
jmp
push
repz
icebp
pop
pop
add
jecxz
cpuid
inc
shlb
pop
iret
jne
or
je
cli
adc
nop
pop
jns
pop
aad
cltd
pop
mov
pop
inc
loopne
stc
cli
mov
stc
and
hlt
cwtl
imul
shrl
mov
xor
add
cwtl
and
aas
mov
bound
pop
out
xor
fidivl
sub
ja
mov
xchg
and
adc
dec
sub
push
int3
and
mov
or
xchg
rcll
movsl
hlt
lahf
rol
xchg
sbb
add
jl
sub
pop
jnp
shl
insl
insb
popf
adc
lahf
mov
testl
cmp
scas
add
lahf
add
lods
mov
push
icebp
cmp
popf
icebp
push
aam
xchg
pop
xchg
pop
mov
pop
or
sub
jl
fiadds
jbe
push
outsl
shl
adc
pop
mov
jecxz
sub
loopne
mov
mov
nop
lahf
cmp
sbb
jne
ds
mov
jg
pop
and
xchg
dec
jp
jne
fxch
xchg
dec
jae
push
cld
or
pop
mov
sub
mov
sbb
sub
mov
sti
sub
dec
mov
lret
cmp
jne
mov
mov
cmp
mov
es
cmpsb
push
std
out
xchg
loopne
scas
rcl
sbb
or
pop
push
mov
lret
pop
xor
popa
decb
xchg
mov
cmp
adc
dec
adc
sbbb
out
jp
sbb
lret
pop
pusha
add
sbb
outsb
mov
mov
add
pusha
cmpsl
inc
sarl
in
mov
rcr
inc
dec
sub
pop
add
mov
cmp
cmpsb
les
mov
or
or
ret
dec
cli
xor
xchg
xor
scas
xchg
sbb
popf
ror
push
loopne
addl
mov
int
add
outsl
jns
lahf
rorl
sbb
cmc
imul
sbb
and
sub
xchg
mov
mov
pop
sbb
xor
push
mov
lahf
movsl
xor
pusha
mov
into
shr
fcoml
adc
ficompl
push
lods
cwtl
jmp
and
in
sub
inc
fiaddl
sub
or
mov
jge
push
out
fdivs
xlat
into
add
inc
cwtl
inc
mov
or
dec
add
aaa
adc
icebp
xchg
fs
mov
mov
in
lahf
fstpl
rorl
outsb
wrmsr
sbb
cli
les
mov
loope
lds
cmp
lds
mov
sbb
dec
sbb
sbb
mov
mov
add
lcall
test
xchg
jne
and
cld
push
dec
shr
dec
inc
repnz
ds
out
dec
outsb
js
out
js
mov
pop
fwait
clc
das
add
ds
clc
neg
dec
fildll
or
mov
inc
dec
shr
into
mov
mov
aas
mov
adc
xchg
gs
popf
std
xchg
bound
shll
and
fsts
popa
sbb
inc
sbb
repnz
inc
lahf
xchg
roll
pop
sub
testb
adc
insb
popf
fistl
xchg
outsl
fistpl
pop
movsb
xchg
cmc
imul
fisttps
ret
cmp
adc
ss
es
or
mov
inc
dec
adc
sbb
lods
add
or
outsl
lahf
imul
cmp
lcall
add
in
pop
and
int3
inc
in
mov
push
jle
pop
cltd
stos
cld
mov
lahf
jns
jle
jecxz
jle
add
and
xchg
sub
scas
cld
mov
dec
xchg
sub
in
sbb
xchg
adc
jne
push
outsb
cmp
push
and
push
mov
or
or
and
xlat
sbb
and
push
cmpl
mov
gs
fmuls
cmp
xor
mov
xchg
or
in
mov
and
push
popf
pop
inc
xor
and
shrl
popa
fstps
or
bound
test
mov
rcrb
sub
sbb
mov
adc
inc
xchg
int
arpl
test
xchg
movl
shr
dec
jg
popf
push
jp
repz
loop
lahf
jle
nop
dec
les
pop
outsb
test
popf
test
inc
mov
dec
mov
mov
sbb
jg
jmp
rclb
icebp
in
dec
pop
test
hlt
jecxz
dec
nop
push
xchg
std
pop
lock
not
popa
fstps
pushf
xlat
cmpsl
mov
pushf
xlat
inc
outsb
andl
mov
jp
imul
mov
sbb
inc
rcl
icebp
xchg
test
inc
xchg
out
repnz
int3
mov
fmuls
jecxz
jl
jge
sub
push
std
aas
inc
popf
stos
jmp
test
fimull
sub
mov
mov
sub
pop
xchg
dec
frstor
add
repnz
rcrb
add
lcall
pop
cmp
push
push
mov
mov
mov
cmp
adc
xchg
lahf
and
push
les
mov
pop
cli
movsl
pop
xchg
pushf
mov
xchg
cwtl
push
adc
xor
arpl
add
inc
mov
mov
sbb
cli
ds
idivb
xchg
shrl
jns
out
cmp
cld
popf
cmp
les
int3
lahf
sbb
fwait
test
and
sub
xor
push
push
add
scas
sti
jo
ss
sub
mov
sbb
aaa
cmc
aas
or
push
lods
pop
push
outsb
pop
in
ret
sti
pop
cmp
bound
std
mov
mov
and
inc
negb
repz
sbb
jg
or
sbb
mov
outsl
sbb
mov
or
out
xchg
add
xor
sub
add
mov
es
pop
sub
mov
ret
adc
sahf
addl
mov
int3
mov
cs
add
ret
jle
xor
sub
sub
testb
popf
lods
cmp
in
inc
jns
and
cli
add
cmp
push
pushf
into
cmp
pop
jg,pn
jecxz
pop
pop
out
mov
mov
iret
push
adc
dec
mov
int3
inc
jge
adc
rclb
mov
mov
sub
push
mov
test
lods
scas
sub
push
pop
inc
inc
adc
stos
cmp
cs
aas
ret
decb
lods
push
scas
inc
push
scas
dec
fldl
cld
adc
mov
dec
sub
cld
daa
in
test
pushf
or
mov
dec
rorb
fimuls
orb
lea
aas
dec
pushf
int3
mov
dec
pop
dec
cld
add
ds
dec
mov
add
push
push
dec
xchg
add
cmp
sbb
into
adc
xor
or
fwait
add
lahf
dec
mov
out
add
iret
mov
jne
iret
push
into
lods
mov
add
popa
fstl
das
xchg
or
sahf
fldl
mov
add
lcall
lahf
dec
pop
std
mov
gs
mov
lret
mov
in
es
mov
xor
aaa
les
pop
leave
rcrl
jmp
push
pop
pop
loop
push
into
data16
leave
scas
clc
loopne
and
sub
shlb
rol
dec
mov
mov
sub
insb
rcrl
xor
xchg
push
push
lahf
insl
mov
pop
dec
rcrb
or
jo
push
out
jle
sub
and
sbb
in
xchg
outsb
stos
lock
lahf
add
mov
add
out
mov
cmp
jnp
sub
lds
scas
and
dec
jno
dec
add
out
xchg
mov
push
cmp
mov
addl
sahf
iret
jno
sbb
fistl
out
pop
insl
sbb
orl
inc
mov
cmp
int
adc
dec
pop
movsb
fstpt
lahf
dec
mov
xchg
cld
pop
aam
pop
pop
mov
dec
rol
pop
stc
sub
push
out
push
push
scas
mov
dec
inc
or
popf
mov
inc
jge
std
ret
popf
test
mov
cmc
push
or
fwait
shld
add
popf
xor
jb
cmc
test
lcall
lahf
jo
in
bound
cmp
insb
xor
xor
jns
pop
add
in
je
in
xchg
hlt
bound
jp
jno
test
or
mov
lahf
ret
cwtl
mov
lcall
mov
lahf
mov
xchg
int3
mov
mov
lods
sub
push
sub
lcall
cld
or
pusha
leave
popl
or
rcr
ret
push
inc
add
lret
aad
lahf
xchg
sub
push
push
fmul
xor
enter
and
mov
xchg
push
or
lods
mov
and
dec
rcll
shrl
test
sbb
lock
jb
dec
in
pop
cmp
aas
test
test
mov
sub
mov
cmp
and
inc
mov
int3
cmp
ret
xor
add
loop
ljmp
and
aad
loopne
adc
cmp
outsb
and
jns
fbstp
lahf
pushf
cmp
mov
out
cmp
dec
rol
jl
mull
in
jns
xchg
lea
scas
out
test
add
push
mov
lahf
push
cld
fisubrl
mov
fiadds
push
aaa
ja
enter
popf
and
ljmp
cmp
jecxz
popf
or
xlat
pop
mov
andb
jle
add
outsl
fnstsw
sbb
inc
fcoms
add
jno
rcrl
xchg
add
loope
mov
dec
fs
jecxz
mov
jns
add
jno,pt
inc
ret
mov
mov
mov
dec
pop
fsubr
std
sti
jp
aas
xchg
sub
xor
mov
roll
or
shrl
shll
popf
mov
lahf
cs
adc
push
mov
cs
in
jo
inc
pop
mov
lahf
cmpsl
inc
or
popf
mov
test
aaa
xor
mov
imul
push
mov
mov
jb
nop
shl
and
loopne
cmp
rcrb
data16
rcll
sbb
sbb
pop
sbb
sub
popf
dec
int3
int
out
mov
jl
sub
cmp
out
xor
dec
rorl
and
icebp
mov
stc
into
and
hlt
and
int3
std
cmpsb
push
out
out
xchg
sbb
popf
jno
mov
sbb
inc
and
sub
hlt
mov
pcmpeqb
xchg
push
jnp
inc
dec
mov
jb
addr16
inc
pop
mov
loope
ret
jl
stos
sbb
pop
outsl
xor
xor
and
jl
addl
adc
jecxz
pop
jg
icebp
lahf
test
pusha
push
out
sarl
xchg
ret
outsl
clc
sbb
ja
lret
jge
mov
cmp
sbb
and
jecxz
and
xor
shll
rolb
gs
push
push
xor
in
adcb
mov
cmp
rol
jns
jnp
inc
in
pop
xchg
jne
nop
iret
pop
cltd
cmc
fimull
ljmp
nop
or
nop
mov
adc
adc
and
test
sbb
lcall
sbb
add
jnp
gs
jnp
scas
mov
jle
jle
mov
push
lods
mov
push
popf
outsl
mov
jle
add
add
cmpsb
adc
mov
inc
inc
sbb
popf
pop
repz
xor
sarb
cmp
lahf
sahf
dec
jl
test
jmp
pop
pop
pop
mov
mov
add
or
or
das
sub
pop
fcmovu
aas
push
jp
adcb
mov
inc
jge
jns
push
stc
xor
sub
insl
stc
lds
adc
mov
in
dec
xchg
mov
sbb
jne
pop
mov
sub
xor
push
add
cmpsb
dec
rorl
icebp
std
pop
shlb
push
pop
das
inc
push
push
iret
push
xlat
and
mov
mov
mov
xchg
adc
loopne
xor
cmp
inc
jle
dec
fidivl
lret
shl
dec
mov
push
sti
mov
dec
aad
cmp
shlb
xchg
shll
jnp
or
add
dec
fnsave
xor
sbb
xchg
sub
enter
loop
jno
inc
cmpsl
outsb
dec
mov
pop
dec
or
mov
out
xchg
dec
cmpsb
sub
sbb
inc
outsl
insb
std
dec
and
push
xor
in
shrb
pop
push
scas
repz
and
pop
pop
dec
lahf
and
cmp
les
push
mov
mov
scas
jnp
out
mov
pop
cmp
sub
jecxz
inc
jbe
inc
and
pop
mov
xchg
jl
sub
ret
fsubl
mov
and
jl
lahf
pop
mov
nop
inc
stos
pop
xchg
pop
inc
je
insl
fucomip
mov
repz
push
orl
pop
mov
cs
jb
add
xlat
fistl
sbb
scas
int3
out
fsubrl
int3
fildl
jg
andb
or
push
or
cld
mov
mov
cmpsl
xlat
cli
nop
xchg
icebp
les
jns
hlt
pop
mov
dec
mov
and
push
mov
push
call
pop
sahf
and
push
sbb
test
inc
dec
or
dec
sub
push
movsl
xor
aad
fiadds
jecxz
lahf
cli
std
mov
orl
ret
dec
cmc
gs
cmp
and
push
pop
pop
inc
and
mov
mov
sbb
mov
ficomps
and
std
xchg
addr16
xor
mov
out
sar
das
adc
or
or
lahf
insb
dec
mov
adc
sbb
mov
ss
loopne
jb
daa
lcall
and
out
inc
jmp
add
std
stos
pop
pop
test
lds
and
stc
and
mull
mov
add
fisttpl
js
in
sarl
or
cmp
mov
push
jb
pop
dec
cmp
je
iret
inc
jno
xchg
pop
pushf
in
adc
cmp
repz
mov
jne
outsb
mov
pop
jne
mov
mov
cmpsl
bound
aaa
idivb
roll
jecxz
add
mov
push
int
cmpl
xchg
xchg
push
add
enter
gs
nop
dec
sub
outsb
jp
cmp
lret
push
leave
xchg
dec
lahf
jno
ja
add
sbb
icebp
pop
inc
lock
jo
iret
jge
pop
xchg
xor
aas
int3
outsb
mov
push
jb
push
jne
mov
push
mov
mov
in
or
inc
inc
adc
and
arpl
imul
cld
fwait
add
cs
mov
sub
scas
cmp
pop
out
incl
clc
gs
cmp
cwtl
fwait
push
mov
dec
fisttps
in
adc
out
push
sub
mov
jno
pop
and
pop
fst
xorl
pop
sub
add
add
inc
mull
decb
xchg
lret
pop
dec
cmp
ljmp
loope
fdivl
scas
mov
lds
iret
adc
add
mull
sarl
lret
inc
movsl
push
push
xchg
and
inc
loopne
lahf
lret
xchg
inc
xor
out
addr16
test
and
loopne
jecxz
sbb
je
or
and
xlat
adc
xchg
frstor
std
inc
test
leave
cwtl
dec
mov
dec
adcb
xchg
dec
add
fwait
or
dec
into
out
dec
push
add
xchg
hlt
fldl
mulb
sub
in
inc
outsb
fcomp
stos
in
out
jl
and
mov
fwait
inc
inc
push
sbb
pop
mov
shlb
ret
jmp
mov
inc
jge
ja
repnz
pop
hlt
add
fcomps
fidivl
shlb
mov
and
iret
sub
daa
jge
pop
out
negl
jae
inc
pushf
out
adc
cld
jmp
xchg
jp
lret
or
roll
loope
test
xlat
and
rol
sub
mov
int
nop
pusha
xchg
jecxz
repz
test
push
adc
arpl
jg
fdivl
add
jns
outsb
and
xlat
aas
pop
cmp
out
arpl
mov
xlat
fdivrl
cwtl
dec
or
inc
fimuls
into
adc
sbb
popf
push
out
push
aas
or
sbb
sub
mov
dec
fsubs
cmp
jne
fcompl
aaa
ljmp
inc
repz
mov
mov
sub
lahf
cmp
add
sar
lds
add
cs
loop
mov
pop
inc
pushf
adcl
hlt
clc
rcrl
mov
ficomps
std
xchg
sbb
cmpb
testb
ret
sti
faddl
sub
pop
inc
push
fsubrs
das
pop
mov
dec
aam
outsl
push
mov
ficoms
pop
xchg
xchg
into
jl
dec
mov
sbb
cs
sub
mov
pop
lahf
pushf
push
xchg
sub
xchg
sbb
scas
fldenv
push
aas
leave
roll
pop
xchg
mov
cmp
aad
xchg
dec
dec
sub
lahf
push
mov
imul
fidivl
inc
aad
or
push
outsl
in
mov
pop
add
xor
jl
ja
lahf
pop
sub
jmp
fldcw
push
jge
filds
nop
dec
inc
loop
pop
lahf
jle
adc
cli
sbb
iret
inc
add
inc
jp
inc
jp
out
pop
pop
jae
outsb
arpl
jb
dec
ret
xchg
movsl
or
fdivrl
mov
xchg
ficoms
gs
test
push
ds
jecxz
and
ds
insb
out
jb
or
inc
push
mov
ret
aam
xlat
loopne
addb
adc
fnsave
loopne
adc
incb
or
sub
pop
mov
popf
push
ja
xor
mov
arpl
pop
sub
mov
and
cld
adc
aad
add
insl
mov
pop
lea
sbb
jns
push
pushf
lahf
gs
int
in
js
iret
inc
inc
jb
stc
jp
sbb
mov
adc
xchg
das
pop
push
mov
pop
cld
imul
push
out
movsb
cmp
xchg
adc
icebp
movsl
cld
cld
lods
loop
nop
xchg
movsb
push
dec
dec
push
sarb
xchg
dec
ss
xchg
pop
daa
popf
pop
cwtl
jecxz
stos
mov
jecxz
cmpsb
push
sbb
and
dec
cltd
dec
outsb
sbb
fsts
test
js
stos
lret
xor
test
and
sub
aaa
shr
aam
mov
orb
jmp
jl
jno
mov
xor
mov
mov
adc
in
jnp
fsubl
gs
add
xchg
xor
push
out
or
cld
push
repnz
decb
ret
dec
daa
icebp
ds
add
in
adc
sbb
subl
pusha
xchg
jle
sbb
cld
adc
imul
cmp
pop
orb
mov
cmpb
in
push
enter
mov
dec
nop
or
aaa
xor
fnstsw
inc
mov
aaa
insl
pop
dec
jns
xchg
and
cmp
push
dec
or
sub
pop
ja
push
insb
inc
outsl
xorb
add
xlat
scas
add
sub
mov
push
jge
insl
mov
rcrb
inc
insb
in
dec
popf
data16
cwtl
sub
xchg
test
sub
aad
mov
rolb
mov
jecxz
inc
xchg
sti
and
lahf
inc
daa
in
jge
fmull
sbb
mov
leave
dec
popf
punpckldq
movsb
sarb
cmp
cwtl
sahf
int
gs
insb
cld
cmp
sub
xor
dec
and
add
in
adc
inc
int3
push
mov
stc
xor
insb
xor
aas
push
cmpsl
jno
lahf
fs
int3
roll
pop
xchg
sbb
sbb
movsl
adc
loop
loopne
mov
mov
mov
inc
lea
pop
and
mov
inc
jl
jmp
in
xchg
and
jge
push
out
mov
push
shr
push
jl
rclb
sbb
mov
insb
std
testl
or
and
in
mov
inc
outsb
shrl
arpl
pushf
je
insb
cmpb
popa
mov
rcll
andl
jge
lahf
nop
or
int3
xchg
cmpsb
pushl
adc
jno
push
iret
sub
popl
cmp
loop
jmp
sub
fcmovb
inc
cmpsb
xor
nop
ljmp
ljmp
and
outsl
mov
pop
mov
jnp
pop
iret
mov
bound
and
xor
ds
or
fld
pop
int
lcall
ret
adc
add
and
xlat
sbb
fbld
int
mov
and
mov
inc
inc
sbb
lea
jl
insb
sub
mov
out
jo
fsubl
or
jecxz
inc
les
jge
loop
adc
xchg
lahf
enter
push
pop
add
jge
adc
lahf
lods
and
pop
xchg
inc
inc
cmc
stc
xchg
push
lock
push
inc
push
stc
adc
jecxz
lods
and
fildll
ficoms
cmp
xchg
dec
and
dec
inc
or
adc
std
sahf
std
movhps
adc
lahf
out
dec
fs
inc
or
and
push
fisubs
ja
jg
dec
pusha
mov
movsl
push
mov
push
push
sahf
mov
bound
xchg
and
lret
fdivrs
push
pop
sub
mov
shl
jb
mov
scas
pop
mov
jge
mov
or
inc
das
cmpsl
cs
shrl
in
rcr
or
adc
dec
in
adc
jb
movsb
loop
jae
subb
jge
push
cld
push
pop
pop
xchg
rep
mov
insl
fldt
mov
sub
xrelease
mov
fsub
pop
lahf
daa
xor
std
mov
inc
out
pop
cmpsb
mov
or
ror
sub
jmp
xchg
call
pop
sub
inc
and
test
maxps
mov
icebp
pop
mov
gs
in
lea
insl
pop
adc
dec
cli
xchg
rcr
mulb
pop
xor
xor
cld
fimuls
sti
adc
dec
insl
outsb
xor
or
mov
mov
cwtl
dec
repz
pop
es
xchg
cmpsl
mov
push
mov
add
repnz
push
pop
popf
cmc
xor
mov
or
inc
clc
push
or
incl
sub
adc
incb
fstl
push
jns
mov
add
push
push
stos
jae
call
adc
int3
add
cmc
mov
mov
and
adc
mov
cmp
insl
test
mov
outsb
or
inc
jmp
je
jle
imul
sbb
sbb
fildl
divb
add
lods
popa
shll
jns
fdivrp
or
add
and
stc
xlat
cli
cmp
mov
movsb
and
push
mov
mov
mov
dec
and
adc
pop
jno
add
lcall
dec
cmp
test
jge
and
lahf
jg
jne
add
hlt
mov
pop
repz
jge
sub
ljmp
cmp
or
push
and
xchg
sti
pusha
pop
pop
call
cmpsl
fwait
out
aad
inc
mov
mov
xchg
lock
jp
sub
cmp
mov
and
insl
test
pop
rclb
adc
pop
and
addb
pop
adc
or
add
mov
push
mov
outsb
push
lahf
aam
in
daa
mov
push
push
mov
add
insl
mov
jecxz
push
das
inc
add
push
mov
addr16
sbb
dec
xor
fistpll
in
mov
std
xchg
subb
cmp
mov
sbb
outsl
cmp
sbbl
sbb
repnz
add
adc
sqrtps
popf
imul
popl
push
or
mov
aaa
scas
cmp
mov
cmpsl
and
sub
insb
cmp
shl
adc
ud2
shlb
push
ja
cmpsl
push
mov
in
movsl
pop
add
fcmovnb
and
les
cwtl
outsl
pop
mov
or
out
mov
sub
and
pop
lahf
incb
sub
int3
xchg
mov
mov
out
mov
and
mov
adc
pop
aas
cmp
mov
lods
xchg
pop
adc
push
push
daa
mov
daa
mov
inc
ret
add
nop
imul
push
cmp
jae
xchg
scas
pop
jge
cmpsl
rcl
aad
std
add
movsl
fs
xor
mov
insl
add
adc
fisttpl
mov
lds
and
rcpps
jns
lahf
loop
jl
sub
mov
jb
jno
dec
or
jmp
ffree
jge
testl
and
jns
lahf
aam
scas
fsubrs
pushf
xchg
sub
out
cmp
arpl
popa
aas
and
add
loope
cli
inc
fwait
shll
loope
fwait
ret
or
mov
xchg
out
subb
repnz
lahf
sbb
stos
lods
dec
mov
pop
cld
cmpsl
pushf
ret
jge
arpl
mov
dec
push
lock
xchg
lret
ficoml
push
pop
jge
pushf
push
or
xor
cmp
bound
push
movsb
flds
or
test
cmpsl
cmp
or
add
lahf
push
mov
mov
mov
negb
lea
jno
das
enter
adc
xor
xchg
mov
stos
cmp
pop
add
xchg
lds
sarb
cmp
cwtl
scas
addb
sahf
fmuls
shll
rcll
mov
inc
pusha
cwtl
cmp
out
or
dec
lahf
mov
pop
mov
nop
jb
in
cmp
jp
mov
lods
insl
mov
mov
cmpsb
fwait
jnp
das
leave
sub
lahf
sbb
rcl
push
mov
sti
mov
cwtl
push
xor
mov
xlat
mov
dec
sarl
and
scas
mov
movsb
mov
gs
add
int3
push
and
js
jmp
nop
pop
adc
notl
lea
nop
mov
repz
jg
add
mov
scas
movl
loop
fstl
cli
pop
int
push
inc
aas
mov
inc
or
sub
lods
cli
jno
arpl
inc
loop
mov
cmp
pop
ret
repnz
in
mov
fcomps
and
loope
ds
popf
sub
enter
mov
movsb
test
decb
add
push
or
std
sahf
push
lods
outsl
cwtl
adc
xlat
arpl
mov
xchg
pop
repz
cs
xlat
int3
loop
std
sbb
out
mov
mov
xchg
xor
jmp
adc
pop
dec
fmull
cli
xorl
push
and
shrb
xor
push
lahf
push
jp
addr16
inc
shrl
sbb
fbstp
adc
jecxz
sub
or
xchg
iret
pop
push
cmp
pop
rol
pop
stos
and
jns
dec
std
dec
adc
daa
pusha
mov
adc
addb
cmp
dec
sbb
or
addl
mov
out
ljmp
push
dec
mov
and
push
in
adc
mov
int
pop
jle
ret
sti
vcvtsi2ss
push
lods
push
sbb
adc
lea
jmp
cmp
add
sub
sbb
roll
cmp
inc
lret
jnp
loopne
cmpsl
arpl
stos
pop
es
daa
push
dec
sbb
jns
push
mov
push
rcrl
push
stos
ja
pop
pop
outsl
into
pop
ja
fs
mov
xor
jle
add
std
aam
pop
inc
mov
fsubrl
inc
or
notb
jl
inc
add
inc
sti
stc
scas
mov
dec
sbb
test
sbb
inc
mov
test
cmp
adc
cmp
inc
outsb
fldenv
inc
sub
xchg
icebp
xchg
std
xor
push
add
sub
stos
dec
sbb
js
stos
inc
jne
std
popf
xor
jbe
repnz
push
mov
fiadds
packssdw
xchg
sub
or
xorl
rcrb
leave
and
pop
pop
xchg
in
rclb
jne
rolb
sbb
inc
mov
lods
jge
cmp
pcmpgtw
add
pop
sbb
insl
xchg
push
mov
aad
lea
test
adc
dec
mov
dec
fs
or
lahf
mov
sbb
jl
and
pop
or
cmp
nop
je
cmp
jecxz
mov
add
aas
rolb
lea
push
dec
jno
push
test
xlat
inc
fistl
add
imul
lock
pusha
jl
mov
ficoms
das
mov
inc
dec
sub
mov
pushf
lods
fdivr
and
outsb
call
rorl
sbb
xchg
lret
lret
lods
jno
jbe
repz
pushf
push
pop
jle
add
cmpsl
xchg
aaa
cmpsb
add
ficompl
popa
sub
add
mov
mov
sub
iret
cmp
jp
mov
xor
pop
sbb
add
stc
or
mov
and
fcompl
ja
mov
or
dec
or
xchg
stos
or
lahf
mov
pop
adc
out
xchg
dec
and
xchg
sub
xor
mov
repnz
data16
pop
cmp
int3
popa
stc
nop
xor
xor
xchg
xchg
sbb
push
cmp
mov
mov
cmpsl
cmp
adc
add
jb
xor
sbb
push
stos
inc
mov
inc
sbb
sti
mov
dec
or
cmp
mov
push
sbb
addr16
pop
pop
into
rorl
and
pop
lods
mov
mov
jb
sub
and
pop
push
jnp
negl
fwait
mov
sti
pop
xchg
adcl
inc
fbld
pushf
pop
push
stos
xor
add
fwait
jnp
jae
std
in
es
aaa
inc
push
pop
xchg
inc
add
pop
jns
dec
xchg
cmpsb
sbb
mov
push
dec
out
sbb
inc
and
xlat
sbb
mov
fisubrl
jnp
popf
sub
cmpsl
jno
mov
jno
mov
fsubr
mov
dec
mov
mov
pop
xor
iret
fisubl
and
popf
addb
and
cld
inc
jno
leave
dec
cmp
aaa
sub
mov
sub
pusha
fdivrl
lcall
jmp
std
and
call
mov
jns
mov
and
adc
push
cmp
jo
movb
dec
outsl
mov
pop
jecxz
or
cs
dec
jnp
lock
mov
das
jnp
and
test
mov
loope
jp
test
pop
inc
jge
sbb
insl
and
adc
dec
fcoms
jge
or
jo
sbb
push
mov
cmc
adc
pop
sbb
adcb
inc
imul
addb
and
fnsave
push
stos
arpl
add
sub
in
jnp
mov
pop
dec
jnp
mov
imul
fadds
mov
dec
mov
xchg
lcall
daa
pop
inc
lahf
shl
pop
xor
add
sub
and
mull
fists
lahf
popf
add
in
aad
pop
push
xchg
jae
mov
and
arpl
test
xchg
cmp
aam
mov
cmp
mov
push
add
roll
jae
pop
stos
lock
add
push
mov
cmpsb
push
repnz
inc
dec
and
jno
loopne
popf
adc
cmp
pop
insb
cmp
xchg
imul
or
ljmp
or
pop
and
and
mov
repnz
push
inc
push
fcomip
dec
in
outsb
rorl
sub
cltd
ret
xchg
push
push
jae
mov
mov
sub
bound
dec
aas
push
pop
mov
sbb
add
bound
cmp
add
les
mov
out
sbb
test
rol
jecxz
add
xlat
jp
lea
les
or
fsubs
mov
mul
ss
add
pop
popf
sbbb
hlt
into
sarb
inc
sbb
sub
loope
push
sbb
mov
or
dec
pop
out
inc
inc
push
mov
popf
inc
sbb
pop
ljmp
pop
xor
sub
jae
ret
js,pn
dec
enter
xchg
xchg
mov
push
stos
sahf
jle
adc
sub
sub
cld
sbb
dec
rorl
popf
aam
inc
outsl
or
and
aas
add
ret
dec
js
cltd
test
subl
xlat
outsb
cmp
jl
sbb
sub
jbe
popf
push
cmp
cmpsl
mov
dec
mov
ljmp
dec
arpl
ficoml
or
adc
cmpsb
out
mov
adc
lahf
mov
dec
ret
pop
pop
sub
mov
inc
mov
add
shll
clc
xor
xlat
fs
mov
mov
lahf
mov
rcl
push
incb
outsb
negl
cmpsl
mov
pusha
cmp
popa
pop
jl
daa
mov
xchg
mov
out
pop
lahf
dec
add
pop
pop
mov
xchg
cli
pop
movsb
jno
jbe
out
std
addr16
jl
xor
push
pop
jmp
out
shll
mov
pop
sub
fsub
push
fbld
add
inc
outsl
mov
mov
decl
dec
aas
cmc
xchg
jne
ret
pop
pop
jecxz
enter
stc
pop
mov
cwtl
mov
outsb
or
push
pop
xchg
ljmp
xchg
movnti
pop
pop
pop
inc
popf
cmpsl
dec
into
cli
sub
pop
lea
jno
outsb
lahf
inc
xor
mov
loopne
repz
and
sbb
outsb
mov
xlat
pop
mov
out
imul
idiv
movl
mov
jno
test
or
pop
and
inc
sbb
sti
cwtl
popa
mov
mov
xchg
daa
movsl
in
mov
dec
pop
mov
insb
push
jno
xchg
and
movl
gs
cmp
xchg
fstps
ficomps
es
stc
sbb
mov
xor
add
sub
test
jo
fadd
lea
sbb
mov
inc
add
pop
cmp
push
xor
jle
push
push
rolb
mov
adcb
mov
or
push
std
insl
test
lahf
adc
sub
sbb
pop
insb
fwait
mov
push
ss
shl
and
sbb
jne
jge
cmp
xor
aas
jns
mov
and
pop
jne
insl
insl
xchg
jb
hlt
sub
in
pusha
out
rorb
mov
insl
cwtl
pop
sbbl
fdivrl
cmp
inc
push
popa
fadd
filds
iret
cmp
jmp
out
arpl
dec
push
popf
jns
js
pop
fsubrl
ss
jne
adc
add
ret
mov
addb
cmp
shlb
sar
add
mov
rcl
add
fstps
aas
pop
xor
out
int3
clc
dec
dec
xlat
or
jbe
jg
lahf
jle
mov
sbb
dec
stc
dec
adc
sbb
pop
rcll
and
aas
scas
jecxz
add
jl
mov
outsb
dec
test
jb
xchg
or
mov
add
push
jmp
or
lahf
shr
arpl
mov
lret
cli
sbb
add
add
adc
cmp
jge
mov
stc
je
cmp
lahf
js
dec
cmp
add
cmp
insl
sub
pop
adc
insb
or
std
repz
jle
aaa
add
inc
and
loopne
pop
stos
jnp
sbb
lahf
cwtl
sbb
inc
mov
js
pushf
pop
nop
aas
lret
sub
dec
fiaddl
sti
subb
inc
repnz
cmc
and
pop
dec
or
mov
dec
shll
push
and
scas
jno
out
lcall
and
xor
add
inc
dec
cmp
mov
mov
add
loop
repnz
push
xor
inc
pop
xor
dec
shll
movsl
stc
filds
popf
jo
pop
adc
lods
psubd
and
xchg
inc
push
cmpsb
sub
mov
stos
xchg
dec
in
test
repz
int3
inc
ret
outsb
shll
inc
pop
out
mov
push
push
cmp
or
lahf
inc
negb
xchg
and
mov
pop
dec
repnz
pop
and
cmpsl
push
dec
popf
jp
sbb
out
rclb
lahf
xor
or
xor
push
mov
dec
in
bound
add
sahf
scas
xchg
cli
cmpsb
dec
popf
or
sbbl
scas
outsb
das
test
cltd
dec
loop
mov
mov
jl
cld
lahf
sub
icebp
mov
sub
dec
dec
testb
jecxz
push
rcrl
call
rcll
push
sub
in
in
xchg
out
loop
and
lea
addl
scas
and
lahf
pop
imul
dec
push
or
sub
popf
xchg
mov
sahf
rcrl
inc
andb
add
jne
and
aaa
adc
pop
pushf
lock
dec
pop
jecxz
pusha
or
cltd
xor
sub
stos
mov
inc
or
sub
mov
shll
inc
jge
repz
mov
roll
jns
aad
fdiv
xchg
and
sbb
add
push
je
inc
dec
in
jmp
js
pop
fisttpl
and
or
pop
dec
lahf
insl
xor
sbb
lahf
inc
outsb
ret
pop
sahf
subb
call
je
daa
push
les
xchg
jge
int
cwtl
inc
and
out
add
adc
fwait
outsb
fdivl
mov
push
cli
ret
lret
pushf
loopne
out
xor
inc
xchg
cmp
rcr
in
or
inc
inc
push
jl
and
push
fmuls
loop
icebp
in
sahf
rcl
push
andl
xchg
pop
dec
sbb
repz
add
and
sbb
test
add
and
cmpsb
adc
imul
gs
add
pusha
je
or
scas
and
test
jge
mov
or
outsb
sbb
lea
jecxz
push
sar
push
leave
push
out
pop
dec
fadds
and
lea
inc
cmp
push
jb
mov
cmp
sub
push
out
mov
dec
insb
sbb
dec
test
sub
popf
lret
jns
pusha
inc
out
push
mov
pop
subl
mov
or
das
loop
push
lahf
jne
xchg
xor
mov
push
aas
inc
xlat
or
daa
dec
ljmp
dec
cmc
js
fdivr
jo
adc
mov
mov
jbe
add
js
addr16
sarb
cli
outsb
stc
jb
hlt
mov
add
shll
xchg
shlb
addr16
xor
lahf
xchg
mov
sarl
lret
push
add
aaa
insl
jecxz
xor
imul
iret
movb
and
jae
sub
mov
movsb
adc
idivb
xor
mov
outsl
mov
mov
arpl
ret
mov
add
push
popf
dec
and
sti
sbb
test
jae
lahf
and
push
scas
xchg
std
out
in
push
pop
in
adc
das
xor
popf
mov
andb
cmp
das
andl
sbb
or
or
and
xor
loopne
clc
iret
popf
and
mov
mov
icebp
inc
cwtl
sbb
movsb
test
push
mov
add
popf
push
sub
cmp
aam
adc
insb
rclb
cltd
xchg
adc
xlat
push
repz
jno
or
xorl
adc
inc
out
cwtl
mov
add
ja
sti
imul
rol
push
jno
push
inc
dec
jae
push
int3
sub
push
and
xor
repz
push
or
loopne
add
adc
add
mov
and
fwait
mov
sbb
add
pop
lahf
in
xlat
popf
jo
push
movsl
mov
por
cmpsl
mov
jge
aas
jg
dec
mov
inc
sub
add
mov
mov
inc
lods
out
addl
std
sahf
add
and
xchg
jo
and
add
add
xchg
or
popf
hlt
push
adc
push
jg
xor
andb
push
dec
sbb
push
outsb
pand
loop
and
mov
and
std
inc
mov
ss
cmc
fistl
xor
push
mov
and
jns
imul
pop
cld
movsl
rclb
mov
jl
js
orl
mov
mov
into
enter
push
or
adc
mov
std
inc
ret
outsb
add
bound
lret
mov
add
ss
jno
and
dec
inc
push
push
mov
push
int
rcrl
sahf
dec
mov
decl
ret
adc
lock
pop
sub
aas
mov
adc
sub
pop
lahf
cwtl
sub
push
sbb
daa
mov
cmpsl
outsb
stos
in
mov
nop
divl
iret
outsl
sub
adc
addr16
hlt
jb
dec
dec
jno
jp
fimuls
sub
mov
jge
xor
adc
ss
jb
sub
outsb
mov
mov
mulb
lods
mov
rcll
in
dec
in
xlat
dec
adc
cwtl
mov
push
cli
int3
adc
fimull
icebp
or
inc
adc
xlat
out
out
lods
mov
inc
rorl
repnz
mov
push
or
popa
movsb
in
scas
sub
jbe
repnz
outsl
adc
cwtl
jno
or
test
js
popf
rcrb
aas
sub
xor
outsl
popl
inc
ret
xchg
pop
call
pop
fs
test
lahf
pop
shrl
jl
xor
pop
movsl
pop
icebp
mov
adc
in
pop
add
mov
repz
arpl
lods
lds
pushf
movsl
jne
lea
fldcw
clc
inc
repnz
jne
int
repnz
add
negl
dec
sub
test
xchg
pop
aad
mov
mov
pop
loope
or
lret
out
addr16
mov
repnz
test
xchg
popf
mov
mov
add
xorb
cmp
dec
test
sahf
mov
stc
mov
scas
orl
fimuls
adc
popf
movsl
pop
sbb
and
xchg
arpl
sbb
pop
mov
adc
not
mov
loopne
and
rol
pop
inc
repnz
popa
out
adc
gs
xor
ds
jno
xchg
mov
push
pop
push
out
pop
std
mov
iret
push
out
jne
scas
dec
cld
xlat
mov
pop
mov
and
and
out
pop
xchg
fwait
adc
sub
add
and
cmp
sub
scas
cs
pop
xlat
xor
mov
add
push
inc
adc
es
jl
fbld
pop
pop
outsl
sti
jnp
dec
sbb
cld
sahf
popf
xchg
popl
jne
cmp
push
lahf
dec
dec
shl
dec
jl
xor
test
jno
cmp
xchg
adc
daa
jne
push
dec
shl
dec
jmp
int3
mov
mov
mull
cli
sub
sbb
cmp
sub
sbb
iret
adc
loop
incl
xchg
lods
test
pop
aad
out
fmuls
lahf
jecxz
subb
clc
cmpsl
pusha
ja
mov
cld
push
popf
xchg
push
mov
stos
add
jge
and
dec
jnp
inc
mov
stos
add
inc
movsl
cmp
push
ficomps
add
inc
loopne
lahf
inc
mov
cmp
repz
scas
movsb
cmpsl
test
lea
pop
jno
popf
add
data16
ret
fistpll
mov
and
mov
xchg
inc
mov
push
sbb
jo
jae
icebp
jne
push
nop
fs
xchg
repz
jbe
and
dec
jl
jns
sbb
outsb
loop
aam
xchg
jecxz
loopne
lahf
mov
add
ds
lcall
pop
icebp
popf
je
inc
mov
sbb
std
and
orl
jl
add
fwait
jns
mov
icebp
and
mov
cs
cmp
adc
insl
jge
push
out
add
lds
fisttps
popa
jmp
add
and
mov
adc
pop
in
xor
fwait
stos
mov
dec
rolb
fwait
push
push
pop
and
mov
mov
jl
iret
pop
xchg
adc
sub
repnz
aas
jmp
xchg
xchg
scas
dec
cs
test
rorl
gs
mov
sbb
dec
clc
or
pop
pop
stos
adc
and
or
iret
mov
cmpsl
pop
adc
pop
push
icebp
cmp
daa
or
ret
sub
fiadds
xchg
ja
mov
or
arpl
das
jge
adc
xor
into
xchg
xorb
cmpsb
xor
call
push
jmp
sub
jno
shlb
sub
gs
lcall
pop
sub
mov
pop
mov
mov
or
dec
cmpsb
test
push
int3
dec
jae
mov
popa
das
ret
subb
popf
shl
es
imulb
xlat
xorb
push
cmp
loop
inc
sbb
movsl
push
lahf
inc
jo
lret
cmp
inc
dec
sub
cmp
int
push
mov
mov
mov
gs
cmpsb
dec
fimull
stc
mov
subl
mov
sub
and
mov
sbb
push
lahf
ror
out
cmpsb
fists
cld
dec
sahf
sti
cmp
testl
jmp
and
and
or
aas
mov
or
adc
pop
jno
add
xchg
loopne
call
inc
xor
fstp
roll
popf
adc
pop
xchg
cmp
repnz
push
or
cmc
mov
or
imul
ja
fs
repz
mov
std
dec
std
iret
sub
mov
imul
mov
iret
fs
movsl
ljmp
test
ds
test
pop
inc
imul
sbb
testb
and
jecxz
jno
and
aas
hlt
cmp
dec
loop,pt
add
addr16
repnz
or
pop
push
test
cmp
sti
mov
mov
nop
sub
cltd
sbbl
pop
push
jmp
or
ror
cmpsb
pop
imull
lahf
clc
pop
shrb
pop
and
adc
shlb
shll
or
add
xchg
call
cmp
fs
xchg
dec
push
mov
sub
lahf
popf
cltd
push
xchg
fwait
sahf
mov
jb
lret
jl
mov
xchg
ficomps
cmp
add
adc
loop
push
lock
aam
dec
cmp
fwait
sub
aaa
cli
loop
dec
dec
mov
add
adc
scas
mov
mov
ja
inc
jg
leave
cmpl
mov
cltd
dec
adc
rcl
mov
pop
nop
jb
clc
add
lock
inc
sbb
test
and
sub
js
in
fistps
ret
dec
test
xor
fmul
xchg
or
push
icebp
mov
cwtl
xchg
jle
das
mov
lahf
cmp
imull
and
sbb
repz
inc
aaa
inc
push
rol
movsl
sub
jnp
ffreep
stc
lret
mov
jg
mov
add
cwtl
leave
add
cld
hlt
fiadds
and
cmc
sub
cld
jne
out
enter
out
add
and
fmull
pop
negl
es
enter
jmp
xorb
or
push
scas
mov
lds
lods
lods
pop
lahf
push
adc
andb
sub
pushf
inc
jns
insl
int3
scas
movsb
sbb
scas
out
mov
in
rcll
mov
das
lret
repnz
mov
jbe
ljmp
insb
jmp
mov
cmp
xlat
call
add
das
mov
popf
and
mov
les
add
notb
scas
aas
adc
scas
mov
sarb
jnp
addr16
cmpsl
pop
sbb
sarb
mov
test
in
mov
testb
jb
and
adc
rcrl
mov
loop
adc
mov
ret
jecxz
lods
jno
lods
popf
ljmp
mov
iret
jb
pop
add
dec
inc
stos
push
sub
in
test
sub
out
pop
pop
xor
add
in
sub
rclb
add
lahf
sbb
mov
mov
push
xlat
inc
xor
arpl
push
scas
int3
ljmpw
push
pop
inc
pop
lahf
ss
cld
cmp
inc
jl
sub
jg
lahf
out
mov
pop
jp
cmp
push
sbb
cli
and
imul
jb
movsb
fcomps
cmp
add
roll
and
icebp
ds
filds
std
lahf
jne
test
aas
aas
lods
loope
ja,pt
add
sub
or
mov
adc
and
cmpsl
test
sub
outsl
cmp
test
xchg
insb
mov
pop
lods
xchg
cwtl
pop
adc
push
test
fldcw
pop
fidivs
push
and
jno
mov
mov
rcrl
int
pop
cli
cmp
aas
push
inc
and
adc
out
leave
fcmovb
adc
ret
xor
pop
mov
cltd
pusha
pusha
push
jb
xchg
lock
inc
rorb
es
sub
xor
push
std
out
test
rcrl
sahf
jo
sub
into
imul
xor
loope
popa
dec
dec
nopl
sub
int
lahf
or
adc
add
dec
dec
iret
out
inc
sub
lods
push
je
lret
ret
pop
sahf
dec
aas
cwtl
dec
push
pop
jecxz
pop
sub
lahf
jge
lods
inc
and
int3
mov
cmp
gs
outsb
push
dec
mov
cld
xchg
cmp
xchg
pop
dec
mov
mov
cmp
pop
rcl
pop
pop
loopne
push
xchg
dec
push
lret
leave
inc
cs
je
gs
jno
and
fstl
mov
imul
adc
cmc
hlt
faddl
popf
lds
push
fildll
call
rcll
gs
flds
push
adc
xchg
hlt
mov
inc
lods
mov
jp
dec
add
loopne
popf
dec
xor
xchg
dec
push
and
pop
mulb
insl
nop
jge
lds
sub
lahf
xchg
mov
jecxz
inc
jns
mov
das
dec
mov
mov
sub
push
xor
jo
xchg
ja
mov
add
mov
pop
push
ds
xchg
pushf
push
cltd
sbb
mov
or
jno
scas
jp
div
lcall
add
cli
stos
push
roll
mov
aad
mov
gs
in
jge
adc
lds
nop
je
cltd
pusha
mov
xchg
xor
mov
push
xchg
pop
fadds
lret
xor
jns
inc
mov
cmpsl
insl
jns
cld
lea
js
out
mov
fwait
and
clc
sahf
add
mov
ja
nop
repz
xchg
test
push
aad
inc
push
xor
loope
push
jno
adc
lret
popa
mov
pop
jne
dec
pop
inc
mov
sbb
cs
les
push
gs
fisubl
ds
mov
ljmp
jns
punpckhbw
sub
aam
xlat
mov
popf
cmp
dec
jmp
or
and
mov
push
xor
jmp
fisttps
std
jmp
cmovnp
jecxz
daa
push
inc
imul
push
and
fisubrs
fwait
add
mov
bound
and
adc
in
xor
sahf
jp
das
mov
mov
push
std
notl
cmpsb
adc
inc
fisttpl
adc
dec
lea
iret
js
fsubrp
lret
add
out
sbb
sbb
movlps
dec
inc
push
and
or
test
and
fcomps
in
test
mov
popf
add
jnp
fdivrp
jecxz
cmc
push
push
mov
bound
and
mov
mov
mov
sbb
sub
lcall
insb
xor
shlb
imul
jecxz
cwtl
scas
loope,pt
mov
nop
sub
push
in
fcmovnb
add
or
or
movsb
jp
int
cmpsl
mov
xchg
mov
lret
in
or
adc
nop
mov
jmp
fisubrs
inc
mov
push
mov
or
cmc
jnp
xchg
mov
and
sbb
mov
add
popf
push
pop
out
std
dec
mov
mov
lock
jne
adc
popf
sbb
push
jnp
int
inc
popa
ja
sbb
dec
dec
mov
ja
cmp
mov
mov
xor
popf
out
xchg
imul
icebp
or
repz
lea
popf
inc
xor
scas
lret
test
insl
jp
cmp
sbb
mov
cwtl
es
and
inc
mov
push
sti
adc
inc
jae
aaa
add
push
xlat
pop
dec
out
or
inc
sbb
loopne
cmpsb
pusha
mov
mov
mov
push
pop
adc
repz
xchg
fidivrl
cmp
adc
mov
mov
lods
xchg
es
sub
mov
mov
jle
inc
lods
pop
sbb
jne
lahf
push
dec
out
sbb
mov
and
xor
or
call
cmp
int
divl
and
mov
xor
cld
lahf
enter
jno
inc
mov
mov
mov
and
fisubrl
push
in
arpl
push
lds
jbe
test
inc
pop
or
addr16
scas
push
das
pop
ficoml
inc
out
ljmp
inc
mov
test
mov
and
fdivl
popa
xor
bound
cmp
in
lahf
adc
push
mov
mov
push
jns
in
inc
sub
xchg
xor
and
xchg
outsb
jp
fwait
pop
add
xchg
iret
call
pop
pop
movsb
jnp
pop
repz
lret
pop
push
push
cmp
xchg
das
sub
mov
add
fsts
pusha
nop
loope
adc
inc
and
and
int
enter
popf
add
sbb
add
stc
xchg
shll
sbb
or
pop
mov
and
push
leave
pop
faddl
or
sbb
and
or
fistps
and
xchg
mov
add
jb
dec
sub
cmp
lret
loopne
ja
or
fwait
loop
out
int3
jbe
cmp
and
mov
shrb
pop
shl
loopne
and
jae
add
ja
incb
cmc
pop
mov
mov
jle
jne
shrl
stc
data16
push
out
bswap
ds
popf
xlat
lods
mov
add
rcrl
test
jno
push
inc
add
lds
xchg
sbb
inc
and
testl
iret
cltd
sub
jecxz
add
adc
pop
push
cmp
addr16
sbb
mov
add
xchg
mov
xlat
xchg
inc
sbb
cld
nop
movsl
lret
sti
or
and
aaa
jne
xchg
movsl
push
cld
lods
cmp
fistps
scas
sbb
ds
cmpsl
xchg
and
xchg
repz
testl
inc
cmp
and
sbb
loope
adc
or
pop
mov
jae
or
cmp
bound
pop
fmull
stos
dec
ffree
adc
lock
ja
loope
add
orb
and
stc
je
testl
popf
add
lods
push
sbb
pop
jg
out
sub
ljmp
inc
aad
inc
sti
test
push
imul
in
in
pop
repnz
sbb
inc
popf
rolb
roll
xchg
les
mov
stc
push
insl
push
adc
mov
xchg
mov
dec
jno
jne
jnp
or
dec
and
cmpb
mov
mov
adc
xchg
jp
std
cld
sub
inc
jmp
rclb
cmp
xchg
mov
subl
leave
ret
fwait
pop
adc
pop
lods
stos
jb
fcmovnbe
xchg
cs
ret
lcall
out
inc
mov
movsb
push
mov
and
test
pop
push
daa
sbb
sti
mov
outsb
mov
popf
mov
jp
or
cmp
inc
aas
adc
inc
xchg
xor
add
sbb
inc
sti
adc
add
jecxz
popf
pop
xor
push
lahf
mov
dec
jb
test
mov
mov
imul
adc
js
jne
or
xor
dec
jne
sub
cmp
cmpsl
cltd
enter
xor
aad
pop
push
out
lret
and
and
sub
add
inc
push
sarb
cmc
mov
jmp
iret
jecxz
cwtl
mov
sub
sub
mov
cmp
mov
cmp
js
inc
repnz
push
cmp
pushw
push
jmp
movsl
aam
push
loopne
aas
shrb
sbb
adc
mov
daa
push
jge
pop
sbb
fsts
pushf
mov
stos
or
pop
sahf
pop
push
xlat
lret
mov
sub
dec
mov
and
call
mov
shll
push
and
sub
imul
mov
push
repz
pop
insb
outsb
cmp
add
pop
xor
xchg
sbb
mov
and
inc
stc
jnp
test
mov
dec
leave
xor
pop
mov
cmp
test
sahf
jl
pop
jp
dec
fs
mov
cmpsl
adc
push
movsb
xor
add
pop
fdivrl
push
add
inc
ret
xchg
add
popf
loope
dec
jl
out
mov
movsb
ljmp
mov
testl
fcoml
add
jecxz
in
aaa
rcrb
les
fistps
out
shrl
add
sbb
and
popf
add
pushf
stc
xor
jne
xchg
push
pushf
cmp
push
lahf
fwait
das
mov
in
insl
fwait
dec
dec
bnd
sbb
inc
xchg
jecxz
sub
aad
lret
arpl
mov
pop
fs
notl
les
add
sbb
and
jbe,pn
and
rcrl
aam
in
adc
mov
or
or
dec
mov
pop
pushf
pop
mov
adc
push
mov
ret
lahf
popa
lahf
mov
sahf
testb
cmpsb
subl
popf
mov
mov
rcrb
jge
xor
inc
mov
jno
xchg
mov
loop
jp
push
hlt
imul
push
cltd
test
pop
sub
sbb
lahf
or
or
fmull
sarl
sti
add
jg
xor
test
sbb
mov
cli
mov
mov
dec
js
shr
arpl
dec
shll
add
pop
mov
call
adc
or
inc
enter
jl
adc
out
inc
pop
test
lds
addr16
nop
fidivrl
lahf
jnp
adc
jge
pushf
insl
dec
and
icebp
mov
inc
shl
jge
xor
adc
lahf
mov
fwait
add
jle
add
es
ret
popf
lcall
mov
ds
cwtl
pextrw
mov
popl
fisubrl
sbb
xchg
xor
or
mov
shl
loope
test
adc
icebp
lock
cltd
jmp
pop
sarl
fdivs
and
popa
outsb
push
inc
rorl
insl
xchg
out
jae
and
mov
arpl
mov
fbld
rolb
sub
mov
xchg
sbb
popa
cwtl
ds
sub
repnz
inc
push
sub
cmp
inc
mov
fisubl
in
ds
movsl
lahf
jmp
data16
iret
dec
repnz
and
adc
mov
mov
mov
pop
insb
aaa
push
adc
lods
out
shr
std
ret
nop
and
mov
push
inc
popf
dec
push
xchg
pop
push
lret
movsb
scas
and
imul
add
cmpsl
lahf
and
mov
imul
mov
insl
add
std
sub
push
cmc
sub
xor
clc
add
xlat
dec
hlt
inc
pop
std
in
stc
mov
mov
mov
cwtl
push
fldenv
cmpl
in
xor
mov
xor
call
jle
andb
decb
iret
notl
hlt
mov
inc
mov
sub
popa
sti
or
inc
or
sub
in
nop
negl
and
adc
mov
dec
pop
fadd
add
and
jge
xchg
shr
adc
out
push
sbb
push
adc
pop
sbb
mov
jp
xchg
mov
int
out
ja
rcrl
mov
in
add
dec
fsubr
or
aas
ss
dec
fists
push
ret
push
and
xor
mov
cmpsl
sahf
imul
jmp
insl
sbb
inc
dec
sub
mov
fsubrp
sbb
and
jecxz
jo
push
cwtl
and
sar
call
daa
ds
adc
iret
mov
mov
sub
mov
test
xchg
mov
movsl
push
pushf
test
adc
dec
adc
xor
lods
xchg
sahf
pop
jle
jecxz
and
sti
dec
pop
mov
ret
xchg
gs
xor
pop
insl
fs
inc
xchg
dec
cmp
jecxz
stos
notb
mov
sbb
lahf
ljmp
clc
push
push
push
mov
adc
fs
add
sub
mov
pusha
fildl
and
and
add
xor
dec
add
lods
mov
in
jmp
movsl
popa
ds
clc
dec
fisubl
mov
xchg
test
jae
sahf
mov
add
lahf
inc
pop
icebp
test
xchg
clc
shl
mov
lret
mov
or
mov
dec
mov
insl
loop
and
xchg
or
mov
sbb
bound
hlt
into
rcrl
sbb
inc
jmp
dec
std
sbbb
aad
add
pop
fistpl
pushf
inc
and
xor
mov
mov
decb
cmp
and
pop
dec
inc
insl
xchg
inc
inc
fcompl
clc
cld
cmp
lods
mov
aas
js
bound
add
repz
pushf
sbb
push
fbstp
jne
cwtl
push
mov
nop
aas
arpl
inc
adc
mov
iret
jo
xchg
pusha
rcrl
lahf
xchg
xor
jno
or
insb
test
roll
or
push
lret
xor
jp
outsl
jne
fiaddl
push
int3
add
cmpb
cmpsl
aas
mov
mov
mov
push
clc
shl
jb
cmpb
inc
xchg
mov
inc
cmp
scas
pusha
popf
out
test
xor
mov
sbb
jne
and
xor
decb
aaa
or
jge
pop
add
jb
adc
ficomps
add
xor
sbb
insb
cmp
out
in
sarb
lods
push
sub
sbb
aam
dec
ds
add
pop
outsb
inc
cmp
mov
das
mov
inc
cmp
xor
xchg
outsb
push
sbb
leave
sub
xchg
stos
xor
inc
push
mov
jle
cli
push
push
push
and
in
cmpsl
xchg
sbb
adc
arpl
pop
sarl
and
or
fsubs
adc
jp
movsb
loop
cli
pop
js
mov
cmp
push
jp
icebp
inc
test
lcall
fbld
lahf
add
cwtl
fstpl
add
lret
dec
je
in
nop
ja
cmp
in
je
xchg
fcomps
mov
mov
out
mov
dec
aam
mov
push
or
add
faddp
add
mov
cmc
push
xchg
iret
enter
pop
xchg
inc
xchg
mov
lea
xchg
adc
popf
lahf
jb
scas
daa
insb
nop
cmp
adc
sub
loop
ds
sub
xchg
inc
add
popf
in
mov
into
add
or
sub
in
repz
es
into
or
or
xchg
js
and
sbb
hlt
add
cld
add
add
add
add
sbb
sbb
jl
xor
or
jg
pop
clc
fistpll
enter
mov
mov
pop
jle
sub
cmp
adc
jg
and
cmp
sbb
or
int3
cs
mov
pop
xchg
fdivr
sbb
pop
xor
leave
pop
loope
rcrb
enter
pop
pop
ds
ds
add
in
in
mov
or
mov
push
cs
jl
int3
and
jge
int3
dec
cs
cmpsl
add
cld
or
jnp
pushf
pop
push
paddw
mov
rcr
negb
inc
sbb
pop
jo
pop
cmp
pushf
pusha
les
sti
dec
pop
jl
add
sbb
cld
sbb
cmp
and
out
fmuls
mov
or
das
add
pop
loopne
push
sbb
popf
les
inc
dec
inc
das
and
cmp
push
std
sbb
add
sbb
cltd
in
clc
push
std
scas
dec
mov
inc
cs
into
add
lea
adc
sbb
out
or
dec
insb
pushf
fldl
or
nop
dec
nop
mov
ds
dec
add
mov
adc
cmp
or
xor
dec
mov
outsl
mov
inc
jmp
inc
jge
pusha
pop
adc
xchg
into
mov
or
dec
fisubs
dec
or
cmp
mov
ds
frstor
lods
and
daa
dec
and
insb
push
jge
sub
push
inc
inc
sbb
sbb
push
pop
popf
mov
incl
cmp
ds
lea
mov
fisttps
pop
sbb
mov
pop
mov
mov
es
insl
or
and
and
pusha
mov
pop
xchg
jo
fwait
adc
mov
and
cmp
pop
sbb
inc
call
push
push
mov
push
mov
adc
movsl
test
les
jno
jp
shrl
fsin
ret
jne
mov
int
or
dec
call
test
jae
push
sar
jecxz
pop
push
mov
pop
sbb
add
popf
or
xchg
flds
mov
add
int
stos
jno
adc
and
or
idiv
sti
dec
cmp
push
pop
push
pop
fs
jbe
stos
xchg
pop
pop
inc
out
stos
xchg
shrl
xchg
dec
jmp
das
inc
pop
iret
xlat
cwtl
testl
mov
fcmovnu
or
jge
icebp
mov
sbb
inc
jns
jl
or
idivl
popa
in
sbb
add
pop
out
andb
shll
insl
icebp
and
sar
pop
pop
negl
loopne
out
sbb
mov
push
incl
popf
add
lret
imul
push
imull
pop
dec
or
fdivrl
fwait
xor
lret
lahf
testl
jge
pop
sbb
popa
jle
push
aaa
sbb
rcrb
xlat
sbb
call
push
inc
sbbl
mov
sub
lea
outsb
jge
pushf
out
dec
mov
int
jnp
lds
add
in
movsl
adc
inc
ja
sub
jmp
bound
xchg
int
adc
scas
mov
sub
cmp
pop
cli
pop
stc
xchg
out
adc
sub
cs
jl
pop
dec
sarl
xchg
and
push
lods
pop
xchg
gs
and
jge
outsl
sub
sub
sbb
lahf
jp
test
ja
mov
mov
in
xor
pop
push
pop
loope
jae
push
sbb
aad
and
xor
call
xor
aaa
add
xchg
mov
sahf
daa
fsubl
scas
cmp
jb
call
mov
enter
ret
lods
jmp
jae
inc
adc
and
sti
push
sub
and
mov
in
bound
dec
mov
fbld
lahf
or
into
xchg
aas
cmpsl
xchg
sbb
mov
faddl
push
sub
js
and
fisttps
or
push
cli
mov
and
pop
lret
popf
inc
and
mov
loopne
nop
dec
fstl
mov
sub
pop
mov
adc
mov
mov
and
stos
sbb
insb
insb
sbb
cld
pop
mul
adc
fwait
jno
xchg
add
mov
dec
pop
add
xchg
add
inc
cld
lret
fwait
mov
mov
test
pushf
mov
imul
mov
dec
add
scas
cmp
mov
rorb
ljmp
psrld
daa
repz
pop
pop
mov
inc
aam
push
and
into
popa
clc
fnstcw
adc
push
inc
fbstp
mov
ret
imul
pop
push
insb
or
pop
pop
mov
jl
push
dec
daa
pop
lock
mov
cmc
mov
add
int
mov
jo
es
cmp
push
cmp
lret
add
rclb
clc
int3
mov
mov
xchg
pushf
mov
test
rcrb
xor
aaa
cmp
not
movhps
cmc
lret
lods
pop
into
frstor
lea
jae
ja
mov
ds
sbb
add
pop
jb
les
orl
mov
lahf
cmp
iret
cmpsb
dec
jl
mov
sub
sahf
or
jge
pop
jge
shrl
cs
or
xchg
and
push
add
daa
xlat
daa
aas
cs
or
cwtl
fdivl
pop
std
aaa
popf
test
inc
mov
pop
dec
inc
sub
cld
cmc
mov
mov
pop
outsb
jecxz
andl
in
out
add
adc
xor
test
out
rcrl
jl
xor
movsb
pop
mov
shrb
outsl
call
jae
add
dec
cmp
dec
das
jnp
div
lods
sbb
bound
sarl
jns
cmpb
clc
xchg
daa
inc
adc
pop
movsl
imull
das
out
xor
jno
int3
lcall
mov
add
jb
insb
and
ja
add
mov
std
popf
xlat
sar
jge
sbb
pop
xor
jnp
and
jecxz
and
cld
test
push
inc
lahf
pusha
pop
adc
ret
lods
adc
sub
cmp
mov
jne
sub
push
popa
sbb
loop
jne
jecxz
push
jl
fcomps
push
loope
sub
jl
inc
or
xchg
loopne
es
loope
sub
dec
std
out
cld
hlt
ljmp
jg
push
lods
jecxz
orl
repz
push
xor
jg
out
fidivrl
jg
idivl
adc
inc
cmpsb
rorb
je
test
sub
jmp
andb
push
into
fsubp
dec
addr16
enter
mov
pushf
inc
popf
jp
dec
shll
call
cwtl
std
popf
fldt
jb
pop
imul
jae
in
cmp
push
inc
lret
cmp
daa
xchg
sub
sbb
mov
nop
lods
inc
dec
inc
cmp
pop
cli
inc
popa
out
rcrl
inc
inc
pop
xlat
in
and
sahf
pop
adc
adc
loopne
dec
push
pop
dec
stos
push
in
mov
out
and
scas
inc
and
bound
add
pop
nop
mov
call
rcr
inc
repnz
adc
and
jl
jbe
lahf
push
dec
add
jns
sbb
xchg
push
cltd
cli
mov
int3
andb
int
xor
mov
mov
xor
movsb
pop
fistps
insb
es
mov
lahf
and
mov
fbstp
aad
aaa
add
cmp
stos
test
fists
mov
notb
adc
int
jae
mov
mov
push
cltd
jle
sbb
and
mov
lods
repz
icebp
sub
xchg
xlat
ja
filds
pop
xchg
nop
jge
test
inc
fists
push
outsb
shrl
add
ret
cwtl
daa
mov
xchg
daa
inc
popa
adc
push
rcrl
pop
sub
fistps
ret
inc
and
fisttps
add
push
lahf
inc
mov
pop
cmp
into
ret
pop
adc
adc
and
cmp
xlat
xchg
push
dec
sub
dec
test
aas
and
dec
shll
enter
lea
fstpt
mov
pop
dec
jecxz
push
pop
jne
jbe
or
dec
mov
xchg
add
or
scas
rclb
pop
int3
pop
xchg
mov
push
add
push
flds
dec
pop
sarl
lahf
mov
imul
xor
nop
adc
add
cmp
pusha
inc
jb
mov
xlat
insb
pop
jne
mov
icebp
roll
or
jne
add
aam
xor
sbb
in
add
shll
inc
or
lods
stc
dec
ljmp
int3
stc
add
jl
std
movsb
cld
std
repz
fildl
sub
adc
pop
xor
pop
inc
loopne
outsb
sub
pop
dec
sub
pop
or
aaa
cmp
fstl
mov
mov
cmp
inc
dec
iret
loopne
push
lahf
cmpsl
ss
or
add
dec
outsb
int
mov
addr16
je
push
out
dec
aam
mov
or
add
int
pop
das
cmpsl
cmp
test
dec
add
iret
xchg
add
mov
dec
jl
cmp
cmp
pop
ret
inc
dec
sub
sbb
pop
lahf
cmp
std
dec
jg
mov
sub
mov
mov
pop
pop
mov
aad
shrl
mov
data16
jae
js
mov
xchg
jp
xlat
adc
pop
inc
repz
jae
push
dec
lahf
in
jle
jge
out
sub
rcrl
std
addr16
es
mov
cmp
jge
rorb
sub
fildll
fsts
decl
lods
in
shrl
fistps
les
jge
pusha
lods
dec
push
es
pop
adc
in
mov
push
fstp
loopne
cmp
xchg
sahf
jno
lret
dec
or
fnstcw
inc
inc
and
jecxz
mov
test
pop
das
ret
add
stc
repz
lret
push
aaa
mov
adc
ret
cmp
adc
sbb
add
jns
fldt
sub
into
popf
movsb
inc
aam
je
in
jge
inc
insb
pop
dec
mov
les
jns
mulb
mov
nop
mov
mov
adc
mov
lods
lods
repz
and
leave
movsb
pop
jne
or
mov
lahf
movsl
pop
loop
sub
int3
fcompl
xor
xor
jp
and
jnp
or
in
lahf
out
repnz
cmpsl
sub
jp
add
in
or
mov
leave
push
and
mov
push
pop
jge
hlt
int3
mulb
popa
xchg
mov
gs
adc
sti
lret
sbb
insl
lahf
fsubl
les
or
cmp
out
xchg
in
sbb
popf
or
or
xor
inc
mov
adc
cmp
daa
or
dec
stos
cmp
or
pop
cli
sahf
push
cmp
cmp
mov
ja
cwtl
popf
insb
call
popf
and
iret
loopne
rol
adc
pushl
dec
out
cmpsb
sub
jo
jne
movsb
in
push
gs
xor
pop
pop
lods
divl
andb
jmp
sarl
mov
test
int3
inc
adc
into
aaa
xlat
stc
sarl
xor
or
sar
outsl
cmp
sub
fisttpl
rorl
outsb
jmp
aam
dec
push
add
stos
jno
ljmp
stos
jno
add
mov
add
imul
pushf
popf
and
push
adc
lods
sbb
je
or
lahf
mov
pushf
nop
iret
add
inc
mov
adc
sbbb
jmp
xor
out
stos
xchg
fildll
dec
mov
sub
sbb
mov
inc
and
sbb
inc
pusha
repz
or
push
cmpb
shll
xchg
jmp
mov
sbb
jl
imul
mov
je
and
rcrb
mov
cmp
adc
jo
sub
inc
pop
aaa
lds
ret
or
jecxz
mov
stc
inc
mov
inc
out
popf
or
aaa
cld
xlat
jb
mov
inc
testl
pop
xchg
adc
sti
sub
adc
mov
fisubrl
push
xchg
aas
cwtl
out
jge
mov
pop
dec
out
xchg
sarl
jmp
lock
aas
imul
test
jne
pusha
inc
or
imul
nop
out
xlat
dec
jge
xlat
pop
xor
outsl
lahf
xchg
mov
mov
add
shl
data16
push
ja
or
fwait
pop
xchg
adc
pop
out
sbb
push
lods
push
pop
add
outsl
mov
pop
mov
jns
adc
xorb
repz
mov
iret
pop
stos
les
test
stos
mov
lds
mov
xor
repnz
mov
mov
jae
sub
fcoml
jns
xchg
cld
je
mov
xorb
or
cmp
das
dec
and
loopne
sub
xchg
pop
incb
aas
mov
outsl
lds
sub
dec
movsb
lret
in
jl
jno
push
and
sub
test
scas
pushf
xchg
jnp
mov
jne
mov
int3
xchg
jecxz
les
clc
sub
pop
inc
aaa
sahf
push
push
std
pop
addr16
push
lahf
or
out
add
lods
iret
sub
lock
stos
mov
pop
pop
adc
popf
pop
mov
std
sahf
nop
push
out
adc
insl
jno
adc
mov
aam
jns
cmp
aaa
out
ret
mov
loop
rdtsc
mov
cmp
inc
mov
rolb
mov
and
adc
add
mov
std
mov
sub
int
or
cmp
cmpsb
xor
dec
leave
addr16
jmp
dec
fs
jne
mov
jbe
or
mov
movsl
cs
add
jmp
lcall
mov
ret
inc
sbb
inc
gs
mov
mov
sub
gs
cmpsb
aam
pop
dec
mov
mov
lahf
test
push
roll
mov
adc
insl
dec
jae
inc
int3
adc
rol
mov
pop
ljmp
add
sbb
cltd
mov
push
mov
adc
inc
xchg
push
sub
and
data16
pop
or
sbb
insl
cli
test
addr16
adc
aas
fwait
imul
out
sbb
inc
push
jmp
dec
adc
sti
mov
mov
mov
jl
cmp
sahf
dec
std
aaa
inc
lahf
shll
stos
xchg
jmp
sarl
or
pop
push
adcb
xchg
jge
jg
fistps
ret
adc
inc
mov
add
sbbb
cmp
mov
push
mov
jns
mov
jge
adc
outsb
and
add
push
jno
popa
push
or
xchg
adc
and
mov
push
dec
push
and
mov
or
mov
jb
add
adc
or
enter
and
arpl
inc
adc
pop
cmp
imul
sar
or
aas
mov
std
cmp
inc
and
in
jl
cmp
cmc
sarl
pop
lea
add
iret
ret
out
test
xchg
jno
pusha
mov
mov
inc
jne
fsubr
inc
push
mov
out
scas
and
and
clc
mov
repnz
dec
mov
add
fsubrl
jle
out
pop
jns
fisubrs
outsl
dec
out
push
les
cmp
mov
mov
sub
inc
pushl
fidivl
dec
mov
pop
mov
cmp
into
push
sar
push
add
jecxz
push
and
add
or
mov
xchg
mov
pop
pop
jns
mov
mov
push
nop
ljmp
jecxz
pop
cmp
in
lods
xor
cmp
mov
cmp
scas
xchg
xor
xor
stos
dec
lret
std
jmp
shrl
mov
push
fdivr
fs
pop
fwait
inc
lret
cltd
mov
jle
in
idiv
aad
push
and
ds
add
dec
pop
inc
fdivrl
dec
clc
inc
or
xor
arpl
and
mov
dec
lret
jg
dec
les
cmovp
push
cwtl
xchg
adc
call
jl
cmpsb
pushf
lret
mov
cmp
add
jne
outsb
ja
add
sub
popf
push
out
and
mov
rcrl
xor
or
and
fnstcw
xor
mov
cmp
push
cmp
lahf
add
push
and
jmp
xor
mov
or
dec
mov
cmp
leave
shrl
mov
xor
jecxz
inc
cmp
xchg
sahf
or
nop
fnstenv
fwait
insl
lss
jnp
out
outsb
repz
imul
jno
and
xor
jp
xchg
mov
sbb
xchg
shrb
inc
cmpl
ffreep
push
int3
mov
push
pop
filds
or
cmpsl
cmpsb
mov
sub
scas
hlt
in
aas
xor
mov
jge
inc
jno
sarb
sub
mov
scas
nop
xchg
mov
cld
ljmp
mov
sahf
dec
sub
pop
lcall
adc
ret
repnz
sub
adc
push
xchg
imul
jg
lds
dec
popf
push
sub
mov
ds
lcall
add
add
jno
jle
cs
in
xchg
jb
dec
popa
add
jg
inc
jecxz
lahf
fldt
mov
aad
adc
push
jb
or
xchg
cmp
imul
shll
loopne
cmpsb
pop
dec
dec
jp
cltd
aas
sbb
push
adc
fstpt
pushf
and
outsb
or
add
push
subb
ss
mov
sahf
ret
fndisi(8087
stos
inc
pop
and
fistpl
xor
mov
clc
xor
xor
adc
add
dec
inc
mov
xlat
repnz
mov
out
ret
add
notb
jbe
pop
mov
push
add
and
cmp
pop
xor
xor
lods
or
ret
pop
fucomip
push
arpl
jge
mov
mov
jo
cs
sub
xchg
add
xchg
arpl
sub
daa
lahf
mov
mov
xchg
pop
mov
inc
pop
and
mov
call
fwait
sarl
sti
bound
mov
mov
or
fsubl
fistps
out
pop
cmpsb
out
out
xor
faddp
xor
stos
pop
push
lods
mov
push
mov
daa
mov
pop
xchg
addr16
je
outsb
fsubl
or
jge
int3
dec
rcrb
fdiv
incb
xor
push
sub
cmp
xlat
ja
dec
bnd
iret
ds
jmp
aaa
fbstp
jge
dec
test
and
stc
shll
test
push
dec
fistpll
inc
pop
mov
mov
cwtl
push
cmpsl
out
dec
xchg
sub
mov
xlat
push
cld
push
mov
push
mov
add
push
sub
loop
xlat
cmp
clc
inc
cmp
loopne
and
push
xchg
xchg
lods
pop
jmp
aad
inc
push
repz
jae
les
xchg
jp
mov
dec
jp
enter
mov
mov
test
jmp
push
xlat
mov
ror
jl
jge
cld
and
cld
xor
jl
mov
mov
out
cmp
pop
fsubl
and
in
cld
mov
cmpsl
out
mov
lods
popf
jb
fldcw
lahf
or
out
lcall
push
jno
sub
out
test
mov
testl
out
adc
in
pop
xchg
push
cmc
xchg
adc
jo
pop
stc
dec
xchg
lahf
scas
dec
add
ret
or
sub
insb
in
fldcw
cmp
push
sub
sub
cmp
and
pop
or
das
sbb
into
and
jle
mull
bound
repz
enter
mov
pop
pop
aaa
sti
and
mov
adc
ret
push
jne
in
dec
cli
ret
jne
outsl
pop
push
mov
mov
in
xchg
mov
cmp
imul
mov
fcomps
xor
outsl
popf
adcl
or
cmpsl
pop
push
sti
sub
jo
fdivl
sbb
lahf
enter
arpl
mov
pop
testl
arpl
les
out
out
cs
mov
loop
adc
or
xchg
adc
fcom
cmp
mov
faddl
inc
out
sbb
ret
jmp
subl
lret
neg
push
or
jp
ljmp
mov
inc
movb
je
cli
ja
in
fs
inc
or
daa
icebp
and
sub
repnz
mov
mov
xchg
mov
sbb
mov
mov
cmp
nop
repz
inc
mov
xor
sub
dec
xchg
aam
push
lock
push
or
sti
addr16
and
mov
mov
and
add
and
mov
push
in
test
insl
adc
add
or
jbe
test
and
adc
scas
ret
pop
nop
jns
int
lret
aad
xchg
jno
dec
pop
or
or
jge
pop
dec
out
pop
dec
mov
mov
jns
jge
adc
inc
std
popf
lret
xchg
or
push
addb
lcall
dec
nop
and
arpl
lock
mov
xchg
popa
outsl
in
and
rolb
adc
xlat
push
push
mov
adc
addb
stos
sahf
fmull
pop
mov
pop
pop
mov
adc
loopne
ficoml
ja
mov
cmp
pusha
popf
mov
les
push
lahf
or
xchg
in
add
pop
push
mov
outsb
fcompl
out
test
sbbb
xlat
test
add
xchg
mov
cmp
cmp
jae
mov
sar
cwtl
psraw
push
out
and
js
pop
shr
sub
loop
push
imull
pushf
mov
or
mov
mov
cmp
popf
fdivrl
inc
push
movsl
xor
fidivrs
and
sbb
jns
add
cmpsl
cltd
into
jp
mov
xor
aaa
cmp
inc
lret
pop
test
cs
mov
inc
pop
lcall
stos
jbe
test
lea
pop
insl
repnz
cmp
ds
sti
xlat
out
jle
mov
jl
out
add
add
push
stos
xor
cmp
test
sub
popf
jae
add
xchg
cmp
push
and
or
loopne
roll
and
sbb
sub
lea
cmp
imul
subb
push
cmp
push
es
cmp
pop
dec
and
cmp
jge
pop
mov
xor
push
sbb
aas
sbbl
pop
xor
popf
add
popf
lds
sbb
data16
inc
cld
inc
pop
push
lahf
std
pop
lea
and
orb
insb
bound
cmpsb
insl
pusha
pop
pop
out
insb
and
inc
pop
pop
aas
sub
and
push
outsb
inc
pushf
sbb
pop
shlb
or
and
pop
mov
pop
inc
popf
cmp
andb
inc
cmp
nop
mov
loop
ret
inc
jg
add
popa
std
or
sbb
mov
fisttpll
lods
mov
aas
adc
push
lea
jl
outsl
add
mov
cmp
pop
faddl
pop
mov
add
cmp
mov
dec
in
push
sbb
int
push
inc
int3
inc
das
add
cmp
dec
dec
add
pop
out
orb
ds
cld
cs
mov
push
cld
push
popf
dec
data16
mov
scas
mov
int
daa
into
and
scas
push
iret
push
sahf
sub
lahf
mov
push
add
inc
lahf
push
cmp
pop
push
adc
out
lock
xchg
lea
fisubs
mov
cld
xchg
push
insl
lahf
repz
adc
jbe
dec
pop
mov
fwait
jmp
out
or
adc
sub
sbb
mov
and
jne
hlt
nop
adc
sub
jmp
repz
pop
fnstsw
std
jge
add
lahf
aam
std
inc
lret
pop
repz
js
cmp
cmp
rcrb
popf
mov
mov
mov
jmp
jge
cwtl
jmp
out
inc
sbb
sti
psubb
cmp
fdivs
push
adc
lahf
pop
fimuls
jp
push
pop
push
div
shr
aam
aaa
scas
loopne
js
xchg
pop
repnz
negl
cmp
test
pushl
int3
mov
jne
sti
or
dec
adc
ds
xor
sub
inc
mov
insb
into
xchg
sub
scas
out
or
jle
lahf
popa
sub
test
scas
dec
imul
mov
in
inc
inc
cmpsb
loop
aam
inc
ror
xor
sbb
lahf
pushf
inc
les
push
jno
clc
mov
add
mov
std
cmp
jmp
sub
js
inc
mov
pop
movsl
mov
es
cmp
cmp
jb
pop
dec
pop
or
mov
sbb
inc
inc
inc
jno
lret
and
xchg
push
pop
mov
cmp
jnp
cmp
jl
and
jl
push
mov
mov
jae
xor
outsl
mov
sbb
incb
and
std
testl
lahf
pushf
clc
aaa
jo
mov
xchg
push
xchg
or
cmp
insb
mov
xorl
push
push
xchg
jl
sbb
pop
out
inc
ds
sub
popf
xor
test
aas
xorb
pop
pop
in
pop
out
xor
popf
jle
cmp
push
jns
dec
cmpsl
inc
es
add
xor
arpl
cwtl
stc
push
ja
or
inc
mov
lahf
cmp
mov
loopne
lahf
jle
pop
mov
arpl
aaa
fbstp
in
imul
sbbl
mov
fisubrs
inc
dec
xor
xlat
pop
scas
push
adc
push
dec
mov
nop
xor
std
fwait
andl
and
outsb
mov
xchg
jae
push
fdivp
mov
data16
cmp
mov
addr16
inc
mov
sahf
cltd
ss
je
jecxz
inc
cmpsl
pop
cmpsb
and
add
dec
jne
jns
lahf
sub
leave
and
enter
out
pop
test
push
add
enter
mov
sbb
push
add
call
cmp
xor
lcall
int
pop
inc
and
xchg
dec
fs
aad
stos
dec
aad
dec
sbb
negl
loop
adc
adc
push
cwtl
adc
and
out
pop
jne
mov
shlb
test
mov
bound
aaa
lahf
and
int
cli
loop
rcrb
sbb
call
aaa
rorl
and
lahf
fiaddl
inc
ret
xchg
addr16
fcmovne
add
int
in
jl
jnp
jne
sub
fsubp
sti
add
pop
jb
cld
lock
dec
lcall
popf
in
cs
push
aas
popl
nop
cmp
fistpl
jmp
mov
stc
inc
xor
cli
es
add
jmp
repnz
je
xlat
mul
dec
adc
hlt
mov
push
stos
loopne
jb
xchg
jno
ret
mov
sub
mov
iret
negb
mov
jl
aam
jnp
adc
and
jno
ja
adc
cli
push
ds
mov
mov
jns
xlat
inc
add
mov
dec
cmp
pop
mov
cmp
andb
arpl
mov
hlt
xchg
movsb
adc
popf
inc
in
in
add
jns
roll
data16
sub
pop
inc
dec
std
mov
sarb
xor
in
rorl
adc
jnp
xchg
das
mov
xchg
mov
sbb
or
lahf
push
mov
pop
dec
mov
push
pop
jge
insl
cs
cltd
ja
and
loop
int
mov
dec
adc
cld
mov
sbb
adc
jecxz
shr
int
insl
jb
aaa
pop
adc
push
sub
cmc
bound
ret
cltd
inc
test
xchg
push
add
rclb
or
cmpsb
ror
cmpsb
pop
ljmp
sbb
jne
add
and
pop
mov
mov
int3
jns
mov
inc
mov
push
xor
sub
mov
insl
popf
mov
mov
in
sub
jecxz
or
fcomip
stc
test
sahf
sbb
into
add
fwait
and
jecxz
inc
and
jb
sbb
push
sub
stc
cmp
insb
lahf
mov
adc
cwtl
inc
aas
inc
jne
jl
int3
jb
lock
dec
lock
scas
mov
mov
stos
fadds
mov
popf
and
or
jns
enter
adc
jne
inc
jns
and
adc
sbb
dec
add
dec
mov
jmp
and
inc
push
jg
pop
out
mov
pop
std
movsl
mov
sahf
cmpsb
xlat
and
mov
out
cwtl
popf
cli
jne
mov
aad
sub
jge
adc
imul
adc
in
imul
push
cmp
and
dec
mov
les
mov
adc
dec
in
lahf
sub
fbld
inc
je
dec
sbb
test
push
sbb
mov
pop
stos
dec
mov
repnz
stc
pop
pop
int3
mov
iret
xchg
and
dec
fistpl
cmp
dec
jnp
and
insl
and
mov
jg
sti
les
cmp
add
test
sbb
cmpsb
sub
inc
pop
dec
pop
clc
enter
xchg
mov
mov
scas
ljmp
xchg
scas
mov
cmp
jne
pop
test
add
mov
adc
imul
and
jmp
add
pop
sub
jecxz
push
or
xor
shl
iret
jp
in
out
sub
and
mov
stos
push
sbb
nop
mov
movsl
sahf
mov
jbe
xor
jo
aaa
mov
or
xchg
push
inc
ja
inc
daa
pop
inc
dec
out
add
pop
stos
aas
in
mov
jae
fistpl
xlat
cs
sbb
mov
lahf
lds
repnz
adc
adc
cmp
cld
push
pusha
add
adc
test
aas
iret
dec
push
ja
jnp
lahf
loopne
jp
movsb
push
outsb
jp
fdivrl
sbb
mov
cmp
out
inc
dec
mov
out
mov
jnp
mov
push
cmp
push
sahf
sbb
sbb
ja
jecxz
out
ljmp
add
andb
out
sbb
jl
jmp
dec
les
adc
sti
add
inc
cld
rolb
push
mov
outsl
pop
jmp
lcall
sub
dec
mov
jno
jecxz
add
addr16
mov
mov
into
inc
sbb
or
mov
into
mov
pop
push
and
out
sub
das
and
xor
les
mov
in
lahf
cld
jo
loopne
push
int
cmp
nop
rcll
lcall
and
into
fnstcw
sub
aas
insb
cwtl
jp
mov
jns
jb
imul
adc
inc
cmp
bound
inc
lret
push
mov
mulb
test
jge
xlat
pop
in
cmp
inc
jg
jno
mov
fs
dec
mov
and
sub
lods
xchg
shll
rcrl
dec
sti
ret
sarb
sbb
out
lahf
mov
pop
lods
mov
sub
repz
in
out
fcomi
cmp
lcall
push
dec
popf
mov
flds
jb
cmpsb
pop
and
lock
xlat
mov
ret
xorb
push
xchg
dec
cmp
inc
xlat
mov
pop
adc
std
sub
xchg
mov
cmpsb
mov
loope
adc
pop
mov
fnsave
stos
out
mov
or
gs
inc
dec
mov
cwtl
lea
dec
sub
mov
gs
into
out
int3
add
cmp
inc
push
rorb
jecxz
sub
outsl
popf
mov
jecxz
sbb
inc
fdivrs
jle
dec
lahf
and
cwtl
xor
sbb
sahf
mov
rorb
fisttps
outsb
and
je
in
sarb
lcall
push
xor
or
inc
push
sub
pop
rorb
decb
fstps
add
sub
inc
inc
pop
shlb
cmp
push
and
adc
lcall
push
jno
stos
rorl
mov
inc
adc
out
repz
or
rolb
rclb
stos
push
xchg
inc
sbb
adc
push
aaa
cmpsb
pop
jo
fisttpl
sbbb
cwtl
add
push
pop
mov
shll
incl
and
pop
inc
jecxz
xlat
jae
sbbl
in
ret
push
jmp
pusha
and
jecxz
xor
imulb
aas
jae
xor
jmp
scas
xor
repnz
cld
push
xlat
into
jbe
push
dec
stos
or
sbbl
push
mov
mull
push
scas
sti
inc
mov
das
pushf
in
cmp
jmp
shll
xchg
ljmp
pop
inc
sub
nop
and
testl
in
sbb
pop
lahf
xchg
div
jge
imul
push
ret
into
rcll
sbb
mov
pop
push
lahf
xchg
in
or
xor
xor
push
push
ret
je
or
lret
inc
and
mov
xchg
notl
push
lds
adc
mov
aas
mov
dec
mov
adc
shll
daa
sub
sbb
push
ds
xchg
sbb
mov
std
fdivs
std
dec
add
and
fiaddl
add
mov
mov
shrl
cmp
sti
pop
and
mov
std
inc
sub
icebp
add
inc
nop
aas
out
rolb
nop
sbb
pop
in
xorl
xchg
xlat
xor
rolb
add
sarb
das
cmp
sti
in
and
push
pushf
inc
push
lods
jne
aad
cmp
mov
cwtl
adc
imul
jmp
sbb
std
repz
adc
rcrb
and
jecxz
ds
inc
test
push
loope
cmp
mov
xchg
and
outsl
jp
sbb
push
cs
ret
popa
sbb
pop
rcr
pop
sub
dec
mov
add
decb
cmp
roll
dec
ja
out
dec
xlat
out
mov
and
mov
cmp
mov
jns
add
jnp
mov
jp
jp
adc
lds
pushf
daa
dec
jge
dec
popf
pop
push
popa
ret
fisttpl
insl
mov
lahf
and
dec
les
xor
adc
or
add
xlat
add
or
out
stos
loopne
imul
out
jl
xor
popf
loope
mov
ficomps
jle
or
popa
cmpsb
push
imul
hlt
adcl
loopne
orb
mov
stos
pop
jg
jmp
mov
or
jae
subb
sub
push
xlat
popf
and
jecxz
push
jmp
test
sub
cmp
sbb
sbb
mov
jno
not
icebp
pop
push
and
pop
imul
and
xor
inc
sti
leave
mov
push
nop
add
loopne
arpl
std
pop
jmp
or
idivl
mov
out
push
inc
inc
sbb
lahf
jle
pusha
andl
xchg
rcr
jne
sahf
pop
adc
dec
and
jge
mov
orb
out
lahf
inc
psubq
pop
int3
pop
sti
loop
sub
jmp
adc
lret
std
or
notl
rcll
xor
mov
movl
add
or
sub
lods
sub
jb
inc
shlb
jbe
ret
cmp
dec
shll
dec
call
and
repnz
or
cmp
repz
push
push
mov
arpl
jns
sbb
lock
sub
cwtl
lcall
lret
and
and
pushf
dec
jge
test
out
mov
xor
and
lret
cmpsl
dec
int3
pop
js
push
popa
inc
dec
aaa
movsb
inc
or
lea
lea
jecxz
das
stc
mov
xlat
xlat
jne
sbb
arpl
jmp
jle
push
push
ljmp
mov
push
mov
cmpsl
movsl
or
movsb
stc
adc
stos
cld
out
pop
push
sahf
popf
sbb
or
faddl
and
push
sub
pusha
cmp
mov
jmp
jnp
sbb
mov
nop
inc
flds
popf
jmp
movsl
push
pop
dec
mov
bound
ljmp
jbe
popa
inc
and
pop
addr16
pushf
and
cmp
xchg
fdivl
stc
movsl
sub
ret
lahf
idivl
xor
fdivrl
mov
dec
js
mov
lahf
cli
and
outsb
jno
addr16
jg
cli
cmpsl
push
popf
sub
mov
push
into
cmp
in
in
cmp
dec
jne
mov
dec
xor
loopne
sub
shll
push
je
push
int3
outsb
inc
push
jg
dec
mov
or
xchg
dec
mov
filds
mov
ds
adc
std
sub
int
pushw
mov
adc
inc
filds
repz
and
lahf
outsl
push
and
cmp
cmp
imulb
lock
stos
arpl
iret
mov
push
gs
mov
adc
cli
ljmp
mov
adc
push
cmp
aad
movsb
fsubl
scas
jne
scas
pop
in
push
pusha
pop
ret
jb
repz
ffreep
out
add
popl
repz
pop
xor
notw
cmp
cmp
movsb
jge
rol
daa
pushf
pop
push
xchg
fidivl
adc
sub
dec
inc
aad
or
xlat
push
and
fildll
cli
movsl
add
pop
sahf
cli
dec
sub
or
dec
lods
outsl
xlat
adc
fistps
adc
rcrl
xchg
jg
mov
iret
mov
fdivrs
clc
jecxz
je
dec
mov
jg
dec
fistps
cmp
fiaddl
dec
rep
lret
jbe
push
jns
in
push
cmp
adc
dec
sub
sarl
stos
daa
add
aaa
pop
movsl
out
dec
popa
jecxz
or
or
in
rcrl
mov
xchg
sbbl
cmp
shr
sub
mov
push
jns
push
jmp
push
icebp
xchg
in
popf
loopne
mov
call
fst
mov
jmp
pop
fnsave
or
xchg
negb
in
negl
push
lds
in
and
outsl
sti
rcrb
insb
sub
ja
scas
jb
adc
cld
mov
adc
ja
add
mov
shlb
cmc
pushf
xchg
insb
push
and
aam
dec
orl
pop
mov
pop
push
in
sbb
ljmp
aas
add
outsb
push
cmp
pusha
out
setle
xchg
mov
stos
pop
cmp
add
out
mov
mov
ret
out
imul
lds
xor
hlt
cld
ds
push
icebp
popf
insb
aas
push
cmpsl
lods
test
inc
fwait
push
imul
nop
mov
insb
cltd
stc
cmp
jo
cmp
fiaddl
lea
inc
pop
xchg
add
jmp
cmp
pop
imul
jp
push
cmpsb
xlat
imul
pop
mov
push
mov
das
negl
sub
dec
aas
rcll
arpl
sbb
rclb
test
scas
sub
clc
aad
test
cmp
inc
dec
mov
add
mov
mov
ja
leave
mov
sarl
jne
scas
xor
decl
outsb
popf
shrb
popl
insb
push
and
lahf
test
mov
pop
popl
outsb
fnstenv
mov
push
adc
inc
in
mov
and
cmp
das
or
out
push
jmp
sbb
mov
cmpsb
mov
in
sub
push
sbb
mov
movsb
mov
mov
xchg
and
addr16
push
outsb
sub
mov
mov
mov
xchg
out
jns
dec
dec
lahf
fiadds
aad
add
or
xlat
movsb
add
xchg
or
clc
sar
or
push
lds
jae
std
xor
pop
cmp
inc
pop
lods
push
mov
cmp
iret
push
adc
mull
add
cmpb
sti
push
jmp
push
popf
pop
mov
lds
pop
rcll
popf
lcall
xchg
mov
mov
add
push
popf
add
mov
cmp
or
filds
out
cli
cmpb
lret
ljmp
jo
jno
add
mov
lahf
xchg
lahf
cmc
sub
jae
add
mov
cmp
aad
xchg
sbb
jl
or
pop
or
xor
pop
cmpsl
jl
cwtl
std
add
cmp
sbb
ret
cli
mov
jb
mov
gs
add
inc
or
cmp
fxch
cli
lret
mov
dec
inc
jns
push
cmp
push
pop
popf
cmp
adc
xchg
rorb
jmp
adc
jecxz
xchg
xchg
sarb
fcomps
pop
add
sarl
sbb
fs
inc
jecxz
sub
jecxz
fstpt
jg
cmp
xlat
adc
cmp
rolb
mov
inc
nop
aas
pop
cmp
sarb
dec
cmp
int
mov
faddl
lods
mov
addr16
mov
aad
adc
dec
xor
xor
jecxz
fisttps
aad
add
out
es
sub
scas
bound
xor
add
xor
lret
mov
cmpsl
mov
shll
dec
push
and
push
and
ja
stc
in
out
sub
and
mov
adc
sub
mov
mov
ja
aaa
mov
mov
scas
and
aaa
jge
fdivr
inc
out
xchg
add
xor
or
inc
out
inc
adc
ds
gs
push
lds
inc
pop
cmpb
inc
loope
pusha
repnz
xchg
jno
adc
pop
fidivrl
int3
dec
fsubl
lahf
xor
inc
or
dec
dec
sbb
rcll
pop
add
mov
xchg
push
test
jnp
icebp
std
movsl
das
cld
push
ret
cmp
cmpsb
sbb
aaa
fsubrs
or
xor
pand
pop
xor
mov
popf
fwait
rorb
stc
mov
xor
sub
inc
je
not
mov
lret
ret
push
sbb
sub
mov
cs
dec
dec
jbe
outsb
push
sarb
push
stos
jo
pop
sub
dec
repnz
mov
rclb
movsb
es
dec
dec
or
adc
lcall
idivl
pop
into
add
mov
jge
push
lret
pop
sub
xchg
dec
jb
popl
in
mov
add
lahf
fs
jge
out
out
jl
jecxz
push
push
mov
pop
mov
fidivrl
or
subb
pushf
pop
inc
lret
cmpsl
inc
sbb
ja
mov
cmp
and
jns
push
scas
lods
sub
aas
clc
aad
xor
stc
xlat
loopne
movl
mov
push
push
lds
loop
lahf
and
xor
and
iret
lcall
mov
icebp
cld
sahf
ficompl
rclb
dec
imul
insl
add
push
and
lds
leave
pop
icebp
sub
jb
xor
cli
insb
lahf
cwtl
leave
rclb
add
scas
rcrl
mov
int3
sbb
inc
jl
lahf
addr16
cmpsl
cs
and
outsb
les
inc
sub
int3
mov
pushf
sbb
inc
sbb
outsl
popf
in
jmp
add
jecxz
mov
inc
stos
outsb
repz
jg
repz
jp
sahf
inc
mov
pop
lret
lahf
mov
inc
fistps
xor
stos
add
mov
or
js
jl,pn
add
pop
jecxz
addr16
sbb
cltd
fdiv
scas
pusha
push
stc
repz
fimull
sub
lahf
pop
adc
add
lret
cli
aam
push
xchg
cmp
xor
xor
sarb
daa
jg
inc
mov
pop
mov
jmp
sub
push
mov
arpl
mov
leave
push
fistl
cmpsl
sub
popa
mov
lea
sbb
push
pushl
pop
into
push
notl
xor
ljmp
int
dec
lea
dec
loop
lcall
std
cwtl
daa
jle
xor
add
std
stc
or
and
lahf
lret
imul
ds
xchg
mov
lret
add
adc
aas
mov
xor
cmp
cmovg
and
or
sahf
add
popf
sahf
or
pop
push
dec
add
pop
adc
lahf
mov
pop
test
lret
fcompl
aam
gs
inc
shrl
jnp
xchg
sbb
mov
data16
pop
mov
icebp
int
inc
add
mov
repz
setp
mov
in
lods
jbe
and
aam
sbb
xchg
pop
stc
and
xchg
inc
sub
or
pop
std
out
popf
jle
mov
dec
dec
negb
jecxz
add
jne
movsb
das
lods
mov
mov
add
shrd
shrl
imul
mov
adc
jmp
cmp
pop
int
jge
int3
mov
ret
fsubrl
jg
jno
mov
and
or
cmpsb
mov
pop
jns
pop
xor
les
loopne
jecxz
icebp
aam
xchg
push
dec
sbbb
add
push
fbstp
xchg
xchg
sbb
aaa
mov
or
add
fildl
or
mov
cmp
ret
imul
jns
jne
or
outsb
jecxz
outsb
inc
ficompl
mov
add
jne
cmp
lcall
stc
rol
repz
and
in
sbb
cmp
in
fcmove
or
lahf
add
rorl
dec
cmp
and
mov
out
mov
xor
add
cmp
jne
mov
sub
out
movsb
pop
jmp
and
fcmovnb
xchg
jno
gs
movlps
jmp
xchg
adc
push
pop
xchg
adc
jnp
in
mov
aam
push
push
mov
add
mov
in
fcomip
in
imul
mov
cmovno
or
sbb
aaa
sub
out
cmc
loop
cld
data16
mov
mov
pop
mov
out
xchg
sbb
sub
subb
ja
mov
hlt
ja
xchg
lret
ror
insl
lret
xchg
adc
sub
xchg
std
dec
leave
push
adc
pop
adc
cld
testl
pop
loop
inc
repz
dec
movsb
cmp
xchg
and
inc
adc
push
mov
cmp
mov
xlat
pop
leave
jbe
cmp
and
dec
pushf
daa
notb
cmpsb
in
adc
sti
loopne
sub
xorl
imul
jmp
xor
adc
add
lahf
sbb
pusha
shll
xchg
pop
push
shll
and
aas
lods
outsb
dec
loope
mov
pop
testl
test
cmp
out
xor
sarb
sar
popf
imul
sub
outsl
jae
xchg
lahf
stc
and
mov
loopne
mov
pop
mov
mov
cs
sub
ret
popf
adc
inc
mov
xlat
sbb
cmpsb
and
negl
jle
out
sbb
cs
stc
mov
xchg
and
jns
cwtl
mov
pop
mov
jmp
lds
inc
pop
pop
fistpll
dec
arpl
inc
lahf
scas
jmp
push
pushf
outsb
adc
popf
les
add
inc
inc
jne
xor
push
cs
lret
mov
adc
mov
push
mov
sub
lahf
in
jp
sarb
pop
cld
mov
jo
sbb
lods
iret
lods
and
or
add
fnstsw
or
aas
pop
int3
xor
cmc
push
or
jg
loope
or
popf
orl
test
mov
mov
adc
cmp
nop
lcall
mov
in
pushf
nop
dec
stos
lret
fwait
jb
sahf
cmpsl
cmp
and
pusha
sahf
jge
shrb
pop
mov
mov
xchg
movsb
pop
rol
mov
jp
lcall
lods
das
xchg
ret
sub
mov
fcmovne
lret
sub
pushf
or
jno
dec
jns
push
mov
imul
or
jne
test
add
add
inc
stc
or
loope
xlat
outsl
pop
ds
pop
dec
cmpsl
jb
pop
mov
xor
dec
lahf
cmp
popf
pop
les
xchg
movsb
pop
icebp
sbb
jb
daa
mov
fmull
inc
mov
movsb
dec
jbe
xlat
cmc
sub
mov
dec
fists
sub
xchg
or
jne,pt
add
setg
mov
mov
add
xchg
mov
inc
gs
insb
std
jmp
nop
pop
scas
cwtl
lahf
insl
pop
mov
mov
aam
scas
inc
lahf
repnz
insl
jnp
or
out
mov
gs
popf
rorl
popf
pop
jnp
test
jne
lea
push
cmp
add
mov
adc
pushf
icebp
inc
sub
push
repz
mov
push
repnz
dec
lahf
sub
dec
mov
mov
out
mov
or
pop
ds
dec
ljmp
xor
and
in
enter
daa
cmp
adcb
movsb
movsb
shll
xlat
fdivl
adc
jge
ja
inc
ret
outsb
xchg
fnstsw
adc
jae
jp
sbb
ss
pop
lahf
jno
sarb
movsl
or
arpl
sbb
jge
inc
push
ja
lcall
cmp
cmp
fnsave
popa
pushf
or
cmpsl
xchg
pop
icebp
inc
ret
repnz
mov
jmp
in
sbb
push
pop
sub
in
fistl
test
inc
xlat
xchg
xchg
lcall
xchg
mov
mov
ljmp
mov
jmp
sub
std
ss
cmp
pop
fnstsw
push
in
lahf
test
xchg
cmp
jne
add
add
std
add
fcmovu
cwtl
outsb
jecxz
lea
roll
mov
lahf
out
pop
cwtl
or
mov
and
mov
or
adc
hlt
sub
rcll
or
movhlps
std
xchg
daa
and
in
push
ljmp
nopl
xchg
mov
or
pop
stos
add
pop
mov
dec
int3
mov
pop
inc
fists
pop
mov
mov
lahf
or
je
mov
fisubrl
test
ret
xor
popf
jae
or
cwtl
cmp
pop
cwtl
jecxz
pop
dec
sarb
or
movsl
sub
adc
dec
rcrl
pop
push
lret
push
inc
aaa
movsl
popa
out
dec
or
xor
and
xchg
pop
out
mov
imul
in
addr16
gs
sub
jp
cltd
dec
aad
cmp
les
imul
lea
add
xchg
xchg
jge
jge
push
mov
jmp
repnz
xor
jae
mov
sub
roll
push
fsubrp
dec
out
roll
inc
aam
sub
push
in
push
xor
mov
jb
inc
pop
cmp
push
movsl
pop
test
pusha
test
mov
add
bound
scas
jg
cmp
sarl
call
push
aaa
mov
sub
dec
inc
outsb
shll
sahf
dec
bswap
bound
mov
or
movb
out
imul
push
push
mov
mov
cmpsb
xor
dec
repnz
add
push
daa
pusha
push
pushf
jecxz
scas
add
pop
xlat
push
lret
aas
rclb
xlat
enter
xchg
cmp
mov
xor
adc
mov
push
and
aas
add
je
stc
dec
call
mov
cmpsl
lcall
dec
xor
outsb
or
add
fnsave
cmp
fisubl
imul
shll
lods
pusha
sub
add
and
repz
jp
push
push
push
sub
sarb
rorl
out
pop
leave
sbb
xchg
bound
dec
fldl
pop
repnz
cmp
mov
int3
into
mov
pusha
inc
je
mov
test
or
jg
dec
mov
push
test
icebp
jge
fbld
dec
mov
gs
insb
pop
pop
pop
pop
lock
or
push
xchg
dec
push
cli
nop
mov
int3
mov
mov
lahf
mov
data16
shr
mov
pop
and
orl
xchg
out
popf
mov
test
xor
std
jle
mov
sub
lds
shrl
mov
cmp
ret
add
and
out
loope
mov
mov
sbb
lret
cmpl
pop
hlt
dec
iret
ljmp
ljmp
loope
gs
pop
sti
dec
push
faddl
pusha
cmp
enter
fnsave
and
mov
fnstenv
add
dec
orb
int
test
cmp
add
idivl
xor
iret
xchg
sarl
cli
pop
sub
push
cmp
scas
out
jl
popf
and
pusha
out
xor
jle
addr16
add
mov
pop
xchg
fwait
and
xor
mov
lcall
mov
inc
pop
mov
hlt
cmp
testl
setbe
pop
cli
xlat
mov
inc
jns
loopne
lds
or
xchg
dec
rorl
sbb
push
sbb
out
sbb
cmpsb
std
pushf
sbb
pushf
clc
add
hlt
out
add
pop
adc
jl
aad
stc
or
cmp
call
mov
jns
and
fdivrl
sbb
cmp
xchg
inc
dec
fimull
mov
jl
and
cld
cmpl
sbb
jge
pop
adcb
dec
sbb
sub
mov
cs
insl
pop
bound
cmp
sti
push
pop
sbb
ds
test
jmp
sbb
cld
jbe
test
out
adc
jg
jl
clc
mov
pop
mov
je
lock
sahf
and
sahf
cld
xor
dec
cmp
scas
outsl
inc
pop
or
cmp
fs
mov
xchg
incl
push
push
pop
mov
sub
pop
xchg
into
pop
push
inc
xlat
nop
dec
in
and
or
inc
jle
push
inc
sbb
cmp
out
add
sbb
int
push
mov
push
jge
pop
mov
push
jge
adc
dec
inc
lahf
or
dec
jge
sahf
cmp
adc
sub
inc
dec
dec
or
pop
cmp
add
inc
std
mov
dec
fsubl
dec
jl
sbb
add
popa
scas
test
iret
and
lods
and
jecxz
aam
inc
or
push
pop
push
dec
push
pushf
lea
fisttpll
cs
push
dec
std
jl
fisttps
dec
int3
adc
or
mov
popf
mov
jl
dec
push
lea
push
int3
xchg
pop
jge
dec
push
outsb
lret
pop
or
cmp
popf
sbb
cld
dec
out
xchg
sub
decl
pop
adc
sub
jge
lods
mov
dec
aas
dec
popf
adc
lds
pop
sbb
dec
faddl
dec
inc
or
fildll
out
stos
jb
inc
pop
hlt
fisttps
jmp
ds
cmpsl
popa
insl
xchg
add
shlb
dec
sub
stos
pop
add
aas
fdiv
cld
xchg
lea
fistpll
sbb
inc
cwtl
sbb
ds
inc
int3
aad
je
rcr
xor
cmp
cmp
push
cmp
adc
repnz
jns
mov
jle
data16
mov
lea
sub
cmp
cs
adc
loope
sub
push
push
outsb
cmp
mov
sahf
lods
inc
lahf
xchg
push
std
test
jge
sub
mov
les
add
add
xchg
lods
inc
movsb
sbb
sub
jl
outsb
std
into
movl
adc
lahf
scas
inc
sub
jge
pop
inc
xor
mov
subl
sbb
imul
sub
popa
mov
push
dec
movb
rcrl
fisubl
icebp
or
pop
popf
mov
sti
push
mov
lahf
rcrb
std
xchg
popf
icebp
or
push
xor
aas
sarb
cmpsl
push
and
adc
cmp
test
sbb
popa
fwait
stos
mov
mov
mov
add
pop
outsb
adc
jecxz
leave
les
sub
sbb
test
nop
cmp
and
popf
js
popa
push
sbb
jge
add
inc
pop
xchg
cld
sti
inc
in
outsb
jl
test
sub
sbb
or
cmp
jns
imul
inc
mov
mov
adc
test
testb
or
pop
sbb
test
insl
adc
dec
pop
je
call
add
and
in
mov
sbb
push
daa
pop
lds
and
pop
jmp
mov
dec
outsb
pop
lret
sub
jp
mov
cmp
pop
mov
repnz
mov
mov
mov
inc
or
popf
sub
fstl
pop
dec
pop
adc
xor
mov
in
pop
lahf
pop
or
cmp
sti
popf
hlt
jb
adc
loop
cwtl
mov
popa
mov
fwait
mov
out
pop
sahf
ljmp
or
or
dec
add
cli
das
scas
cmp
cmp
cli
push
jmp
cld
push
dec
daa
or
mov
fcompl
inc
fld
stos
adc
inc
lea
in
push
test
in
dec
inc
cli
test
cmp
les
xchg
test
hlt
dec
lahf
cmp
dec
jl
adc
jmp
idivl
and
push
and
xchg
add
das
insl
leave
mov
pop
je
dec
outsb
pop
mov
stos
add
adc
xchg
cmpsb
xchg
and
jge
ja
sub
in
popf
lds
jns
sub
cmp
and
dec
dec
push
sub
sbb
pop
inc
test
lahf
stos
sub
fcomps
fdivrl
or
pop
aas
ret
loopne
and
ljmp
lea
and
add
das
adc
xlat
ret
ret
iret
shr
xchg
sub
and
ret
jge
adc
pusha
jp
int3
mov
mov
jne
pop
ljmp
jecxz
test
xor
mov
es
adc
loope
cli
sar
int
xchg
or
xor
dec
jg
popf
sub
cmpsb
lahf
aam
imul
hlt
pop
int
pop
dec
mov
jg
insb
out
add
fwait
inc
outsl
sbb
mov
jecxz
outsb
mov
test
and
xor
lea
add
movsl
xor
mov
enter
cmp
test
sahf
sbb
xchg
mov
stc
xchg
pop
fbstp
add
sbb
loope
loope
or
arpl
dec
jne
js
in
pop
xchg
rcrl
cmpb
and
dec
pop
insl
bound
push
xchg
fadds
mov
sub
inc
jnp
hlt
movsb
add
lds
and
pop
lahf
adc
or
jne
mov
xor
sbb
mull
in
cli
cld
lret
sahf
sti
dec
xchg
ret
push
repnz
mov
andb
iret
jae
imul
out
dec
xlat
sub
test
imul
lock
push
and
pop
pop
das
pop
lahf
fsts
jns
mov
dec
notb
ss
loope
fwait
roll
push
adc
gs
ds
dec
testl
dec
or
dec
dec
mov
jge
insb
push
outsb
sbbl
and
and
jns
and
pop
mov
cmp
sub
inc
rcrb
add
loopne
jge
lock
push
cmpsb
and
call
jno,pt
jecxz
or
lahf
into
fcoml
sti
cmpsb
sbb
inc
icebp
cmc
jp
cmp
lahf
insl
xlat
inc
dec
aas
jge
xchg
stos
mov
lds
test
xchg
movsl
mov
jmp
push
pop
adc
popa
repnz
push
mov
pop
cmp
fstl
stos
sahf
jecxz
sub
jle
dec
push
and
or
lcall
lea
bound
mov
push
jge
and
jb
leave
mov
lcall
or
roll
sbb
xlat
dec
lahf
push
dec
loop
test
je
leave
jnp
testb
cmc
idivb
push
cld
cli
push
mov
loopne
stc
or
pop
lahf
enter
test
cmp
push
sarb
imulb
inc
imul
mov
push
repz
xchg
and
out
dec
dec
das
lahf
sbb
outsb
test
js
push
sub
inc
repz
in
sub
mov
dec
sbb
call
in
lahf
and
inc
fcoms
sbb
in
cmp
inc
cmp
or
int3
push
jae
mov
dec
movsb
inc
popf
mov
jne
inc
imulb
rclb
cli
popa
js
pop
jge
xchg
jb
cmp
bnd
push
dec
sbb
faddp
inc
cmp
sbb
push
nop
xor
dec
repnz
loopne
lahf
cli
nop
xchg
aas
pop
inc
cmp
jge
imul
lahf
je
fiadds
mov
sarb
push
sbb
cmp
pop
cli
punpckhbw
lahf
push
pop
loope
fnstsw
xchg
and
out
js
es
xchg
jnp
jns
icebp
lods
add
data16
lods
or
and
xor
scas
and
xchg
out
and
sbb
xchg
insl
add
lahf
mov
pushf
sub
cwtl
push
jge
mov
push
mov
or
and
sub
mov
ljmp
adc
fistps
cli
cmp
int
outsb
sbb
iret
jmp
cli
aam
das
lods
pop
int3
loop
mov
out
ja
rorb
xor
jmp
add
lahf
pop
sub
add
sub
and
fisubs
lods
mov
push
orb
mov
data16
push
mov
xor
mov
sbb
inc
xchg
test
jns
pop
jecxz
sub
xor
aas
dec
inc
shlb
cltd
push
and
icebp
cmovs
cmp
or
dec
xor
cmp
pushf
mov
hlt
stos
jno
mov
daa
push
push
lahf
mov
or
pop
lds
jo
es
push
xchg
dec
cmp
imul
pop
lods
lahf
inc
inc
orb
inc
cmp
mov
pop
fcompp
jne
fisttpll
mov
push
push
int
dec
xor
mov
int3
dec
testl
shlb
push
lahf
scas
add
mov
sub
dec
and
popf
or
cld
push
outsb
push
dec
dec
nop
sub
jge
sub
or
cltd
fistl
daa
pop
mov
mov
push
outsb
xor
test
xchg
push
xor
stos
xor
jae
lods
aad
push
xor
xlat
repz
cmp
add
out
pushf
enter
jp
insb
outsb
popf
lahf
and
mov
fadd
ds
cmp
jb
setb
add
ds
lock
mov
xchg
pop
test
and
mov
or
and
fwait
xchg
adc
ret
lods
jnp
hlt
sbb
iret
lock
mov
sub
subb
jge
mov
bound
dec
int3
pushf
lods
push
sbb
inc
xor
iret
sub
inc
add
aam
sbb
ljmp
andb
or
xor
lods
mov
sbb
inc
repnz
lahf
adc
lahf
popf
popf
icebp
inc
sub
int3
pop
mov
pop
icebp
les
and
jmp
dec
lret
sub
das
sahf
cmc
imul
pusha
lock
subl
cmp
pop
pop
nop
adc
fstpl
xchg
xchg
add
popf
aam
out
dec
mov
mov
sbb
popf
add
jl
or
mov
out
in
xchg
inc
jle
ficoml
jle
pop
outsb
jg
xchg
xor
in
popf
jmp
jnp
cwtl
lahf
or
nop
dec
scas
mov
leave
and
nop
dec
ds
imul
pushf
push
cltd
repz
mov
int
cli
mov
lcall
pop
fildll
stos
dec
mov
int
adc
xchg
mov
pop
and
repnz
in
jge
and
ret
push
inc
sbb
xchg
outsb
fldcw
and
xchg
or
xchg
or
pop
adc
rcll
outsb
fidivs
push
dec
fisubs
push
inc
test
pusha
mov
rcr
add
dec
xchg
inc
and
scas
sahf
cmp
pop
jmp
fcoml
lahf
and
jns
xchg
jne,pt
xchg
xor
mov
inc
adc
inc
and
jmp
mov
in
out
add
mov
jae
jl
in
add
xchg
sbb
cmp
jns
or
pop
dec
lods
add
roll
jp
mov
imul
adc
and
cwtl
fstps
push
mov
push
mov
fnstcw
jl
mov
or
add
xchg
arpl
jbe
ljmp
push
scas
pop
mov
cmp
sbb
and
jl
mov
dec
jae
ds
cmp
lock
out
push
adc
jge
aad
popf
add
cmp
mov
push
lods
dec
add
push
jp
mov
dec
push
dec
mov
or
mov
lret
xchg
push
lahf
popf
mov
ds
lcall
movsb
out
fisttps
xchg
xor
sub
mov
mov
lock
popf
sub
bound
inc
xlat
cs
inc
rolb
push
xor
cmp
cltd
pop
loop
sti
and
out
mov
push
sub
xchg
sbb
mov
jmp
aad
mov
bound
inc
sbb
das
scas
push
mov
and
jne
lahf
pop
aas
or
add
inc
pand
outsb
outsb
mov
hlt
lret
mov
daa
out
imul
mov
ds
fdivs
movsb
push
cmp
and
loope
mov
cmp
cmp
mov
push
jae
xchg
in
sub
mov
adc
sub
popf
or
push
fwait
mov
fnstcw
sub
cltd
insl
call
mov
pop
setns
mov
adc
imul
or
ret
clc
add
cs
pusha
mov
movswl
push
jnp
dec
mov
mov
loopne
in
lret
test
ds
lahf
and
jne
pop
jecxz
or
and
dec
aaa
add
mov
mov
mov
push
inc
add
sbb
out
pop
dec
insl
push
imul
jae
ret
mov
loop,pn
push
inc
sti
pop
sbb
inc
and
sbb
movsb
sahf
push
daa
and
lahf
test
push
in
notl
add
aam
mov
fs
jae
test
jp
cli
ldmxcsr
cmp
sbb
jecxz
and
aaa
sbb
mov
add
dec
add
stos
mov
fsts
pop
arpl
add
out
mov
mov
jno
and
xchg
jb
cs
roll
jge
int3
xorb
das
xchg
popa
repz
out
imul
cld
add
out
lock
sbb
addb
cmc
call
xchg
std
push
loopne
pop
cmp
hlt
out
jl
test
div
pop
cmpsb
ret
cli
jns
or
cmp
xchg
js
subl
push
dec
inc
or
pop
loop
xchg
mov
sbb
push
or
add
sub
sar
mov
sbb
push
and
xchg
add
and
add
jl
mov
negb
sbb
cmpsl
call
pusha
clc
jo
mov
cld
pop
cmp
adc
add
or
add
out
repnz
xchg
jl
mov
push
test
in
fcoms
add
call
mov
mov
in
shlb
outsb
test
or
stc
lods
pop
adcb
test
into
lods
leave
sti
mov
cmp
jl
jae
add
arpl
add
add
neg
lds
jbe
mov
in
loop
shrb
sbb
cmp
das
xor
push
or
jle
or
test
add
add
sbb
es
cmp
add
std
pop
ja
cmp
addr16
jp
push
and
test
add
out
adc
add
add
ds
pop
cmp
testl
lods
jl
mov
jmp
jle
add
ljmp
add
ret
mov
loope
cld
inc
lcall
mov
add
cmp
pop
pop
testb
test
inc
pop
icebp
pusha
rolb
mov
cld
loopne
dec
test
xchg
dec
scas
add
xchg
dec
jmp
mov
in
sub
jno
mov
lahf
pop
movb
hlt
dec
dec
xchg
add
mov
or
pop
stos
cltd
push
dec
or
clc
push
dec
jnp
outsb
pop
daa
lods
movsl
jecxz,pt
push
jno
dec
cmp
icebp
out
out
jbe
jne
ret
inc
gs
jecxz
imull
pop
test
mov
loope
or
pop
mov
pop
push
std
aad
ljmp
dec
std
pusha
imull
lahf
dec
and
jne
movsb
or
pop
jp
lea
fdivl
mov
imul
cmp
add
inc
loope
shrb
sbb
cld
fistps
cmp
and
mov
pop
add
xor
jp
decl
adc
inc
lcall
push
aam
daa
es
jle
mov
and
inc
popf
xor
dec
jns
jb
loop
ja
push
pop
xor
xchg
sbb
es
incl
mov
and
adc
dec
je
jmp
jne
and
sbb
pop
stos
xchg
insl
push
or
mov
fstpt
incl
jmp
scas
cmp
jns
mov
sbb
pop
sbb
scas
xor
icebp
in
xchg
sbbb
dec
insl
push
daa
ljmp
pop
push
pop
mov
xor
or
test
lret
xchg
or
push
add
add
lods
inc
aas
adc
inc
popf
sbb
mov
leave
sub
xor
mov
ficompl
std
pop
decb
cmp
pushl
sbbl
adc
jne
or
pop
loopne
push
xchg
decl
add
cmp
dec
mov
mov
aas
xchg
das
dec
sbb
rol
aas
ljmp
pushf
outsl
jmp
popf
aas
loope
and
jl
sbbl
and
fldenv
xchg
add
pop
xor
dec
pop
dec
insl
outsl
mov
faddl
fisttpl
jmp
icebp
mov
add
adc
dec
std
adc
iret
push
jnp
ljmp
add
or
and
xchg
out
into
jmp
call
loope
mov
sbb
sbb
xor
pop
leave
add
ds
fildll
add
outsl
fmull
outsl
aaa
mov
dec
dec
cmp
push
fiadds
xor
inc
testl
adc
push
mov
ror
jns
mov
add
inc
or
call
pop
inc
test
pop
jbe
stc
sbb
jnp
mov
jl
fwait
fstps
push
adc
push
js
outsl
inc
bound
fucomi
mov
dec
and
mov
and
std
push
outsl
dec
mov
addb
jbe
or
or
outsl
mov
xchg
or
and
mov
adc
std
fscale
and
pop
xchg
adc
add
or
fcomps
jl
jge
add
das
xor
shll
or
xor
std
popa
adc
mov
std
fildll
push
fmuls
call
dec
ret
add
std
inc
jmp
enter
lcall
add
adc
in
test
aam
outsl
push
dec
outsl
lea
jl
cmp
stos
sub
and
xchg
adcl
jle
cmp
dec
jecxz
cmpl
mov
sbb
cmp
cmpsl
pop
mov
pop
push
call
pop
push
into
inc
lock
inc
hlt
cwtl
or
mov
call
shl
sar
les
and
xchg
test
jnp
adc
rol
incl
push
stos
push
push
add
pop
aam
jl
dec
xchg
mov
loop
mov
arpl
lds
or
mov
pop
jg
leave
and
jge
cwtl
sbb
fnsave
lods
call
call
push
or
xor
dec
into
aam
pop
mov
daa
movsb
jge
jno
jb
or
fst
imul
pop
into
cmpsb
mov
push
fwait
or
fistps
mov
xor
add
dec
xchg
jge
jg
cmp
adcb
jmp
xor
pop
fisttps
jle
fildl
in
aas
ja
insl
test
add
fwait
adc
push
out
or
push
daa
mov
ss
sar
cs
push
sub
push
negl
cmp
movsl
and
adc
mov
decl
lods
add
lcall
push
dec
aaa
dec
xchg
jmp
bound
and
xchg
jbe
std
mov
mov
or
pop
in
mov
inc
dec
insl
adc
jns
iret
or
sbb
push
xchg
sub
add
and
inc
pushl
or
push
dec
call
test
xlat
add
jl
lds
xor
push
test
fwait
call
leave
push
lods
decl
jmp
in
jge
cli
inc
push
pop
sbb
clc
add
pushl
movsb
dec
mov
xchg
mov
cmp
into
mov
inc
leave
push
ds
lods
in
jmp
and
mov
inc
enter
or
mov
ds
cmp
pop
jg
mov
pop
enter
push
jle
movsl
bndstx
mov
fwait
cld
movsl
push
loope
fisubs
iret
popf
pushl
jbe
mov
insl
les
cmpl
or
inc
rcrl
jne
or
dec
add
sub
mov
test
push
aaa
dec
or
mov
aad
push
cld
dec
arpl
cltd
pop
clc
mov
movsb
or
inc
rcr
fwait
sbb
insb
adc
pushl
enter
call
stos
clc
add
pop
aad
popf
mov
cmc
and
mov
push
jmp
lds
jmp
add
cmc
lds
jmp
ret
pop
xchg
cmp
push
mov
std
test
stos
in
dec
sub
movsb
into
loopne
inc
insl
jno
push
push
push
aaa
imul
sbb
into
and
pop
push
lcall
push
mov
loope
sbb
sub
push
xchg
mov
xchg
ja
push
and
and
fwait
faddl
pop
jne
push
scas
inc
pop
mov
jl
arpl
mov
dec
inc
jg
lea
mov
ja
pushl
sub
hlt
cs
cmp
inc
cld
enter
pop
mov
xor
jg
mov
inc
jae
cmp
jbe
cwtl
decl
mov
push
jl
dec
iret
add
and
jp
popa
and
jge
mov
mov
aaa
cmp
fdivrl
pop
or
pop
aas
scas
mov
movl
jl
shll
cmp
mov
aam
lock
jg
bound
ret
out
fdivrs
jg
add
lds
notb
pop
mov
inc
incl
dec
sbb
mov
pop
movsb
and
pushl
pop
jp
and
lock
mov
add
into
in
sub
in
incl
sbbb
inc
sub
add
ljmp
pop
ja
decl
add
jmp
std
push
std
sbb
leave
xchg
nop
sahf
sbb
cmc
fildl
je
jo
cmp
jae
add
fmull
lcall
and
loop
jp
cs
imul
or
outsb
mov
jbe
mov
fcompl
or
sub
int
std
loopne
cld
lods
fcos
jl
pop
jp
mov
das
cmp
fldl
add
cmp
pop
push
lahf
mov
aam
xchg
popf
cwtl
mov
mov
shlb
pop
aam
xor
mov
mov
sbb
and
je
cmp
adc
xchg
inc
push
jl
jns
inc
mov
mov
sub
movsb
or
sub
jae
sbb
ja,pt
into
xchg
sbb
cmp
inc
js
pop
incl
add
loop
mov
xor
sbb
push
pop
jb
ds
ret
mov
ret
jecxz
call
std
cld
push
push
or
sub
add
sbb
lds
aam
addl
mov
sbb
xchg
std
jg
cmp
shrb
push
adc
aam
fnstenv
sbb
inc
pushf
add
cli
repz
mov
cmc
icebp
fnstenv
jl
enter
dec
std
pop
xchg
flds
dec
and
push
cmp
mov
in
pop
mov
adc
sbb
lds
inc
xchg
mov
adc
jecxz
mov
push
xchg
adc
sub
mov
xchg
mov
jle
inc
fdecstp
je
xchg
cmc
dec
sub
sbb
cmp
lret
sbb
xchg
je
mov
or
loope
loopne
sahf
mov
jns
aam
outsl
add
mov
rcrl
fwait
fucomp
or
or
test
cmp
std
inc
inc
enter
add
mov
ja
sbb
add
dec
jmp
je
inc
fmul
stos
push
mov
inc
sbb
stc
mov
jnp
sbb
or
add
dec
sbb
aam
in
jb
mov
push
decl
sbb
sahf
mov
inc
inc
adc
cmp
mov
sbb
jbe
pop
dec
pop
outsl
push
sbb
jb
cld
scas
dec
cmp
push
jnp
iret
std
cwtl
and
out
lods
cmp
jo
cmp
std
sbb
in
inc
mov
out
sbb
xchg
insb
int3
add
pop
popf
lods
jne
pop
cmc
fwait
rol
inc
and
cmp
mov
sbb
mov
cltd
icebp
cmp
inc
leave
out
fcos
mov
and
rolb
inc
ficoms
mov
adc
lods
or
iret
mov
mov
outsb
pop
iret
imul
sbb
into
movsb
and
stos
fstps
rcr
ljmp
and
andl
mov
add
push
shll
decl
addr16
dec
scas
push
mov
js
add
or
add
sub
gs
aaa
push
sub
int3
cmp
stc
jae
test
aam
negl
aas
and
adc
add
jns
jbe
lret
sbb
std
dec
testb
mov
pop
pop
and
test
dec
mov
dec
in
sbb
cs
cmpl
mov
call
pop
mov
scas
add
iret
cld
nop
in
or
push
rcrl
das
mov
movsb
fwait
lret
mov
pop
jbe
iret
sbb
dec
dec
iret
or
sub
cld
pushf
adc
cld
add
adcb
jmp
push
cmp
jo
nop
imul
push
sbb
pop
es
jmp
sbb
incl
adc
scas
and
mov
jl
or
cwtl
incl
loopne
jecxz
mov
jmp
jl
insl
pushf
dec
mov
inc
pop
cld
cmp
mov
jl
pop
aam
jae
xchg
repnz
popf
jp
dec
adc
or
inc
in
test
aaa
cld
xor
xlat
sbb
repz
cli
xor
cld
dec
pop
add
cmp
or
jl
stos
lcall
test
in
cmp
popa
mov
das
add
push
scas
pop
fiaddl
icebp
fwait
dec
adc
xor
rcrl
sub
cmpl
insb
call
pop
sbb
jbe
push
xor
sub
push
pop
inc
mov
mov
stos
xor
lock
outsb
or
aam
ds
mov
fcoml
mov
hlt
movsl
aaa
lods
adc
mov
rol
int
aad
insb
xor
or
enter
fdivrs
fsubrl
sbb
imul
test
add
rcrb
shlb
pop
aam
lds
jg
insb
push
in
pop
sbb
sub
out
mov
stos
lcall
dec
fcomps
mov
or
mov
fimull
insb
rorb
aam
fdivs
outsb
loopne
loopne
hlt
in
xor
lock
leave
loopne
mov
adc
or
aam
ds
jae
sbb
call
lds
sbb
jo
stc
std
insb
push
rcrb
shrb
fadd
pop
xor
insb
std
clc
xor
fdivrl
pop
pop
enter
dec
les
mov
or
lock
or
hlt
push
clc
pop
mov
jle
outsb
les
fs
add
lock
pop
xor
shrl
add
mov
push
loopne
pop
in
call
sbb
mov
mov
xchg
stos
shl
hlt
push
in
les
dec
ds
xchg
cmp
ret
loopne
scas
es
jecxz
dec
aas
sbb
or
adc
aam
push
sbb
loop
sub
lock
into
dec
mov
jg
aaa
sbb
enter
mov
fdivl
pop
and
lds
fucomi
or
js
mov
int
mov
shrb
xchg
nop
ds
push
in
cmpsb
jo
clc
loop
sub
sub
dec
enter
xchg
loopne
in
or
ds
out
aaa
and
inc
hlt
nop
xor
or
or
ljmp
test
pop
neg
insb
das
fcoml
in
in
sub
lock
hlt
and
dec
fsubl
and
mov
call
rcrl
dec
mov
iret
rorb
enter
insb
int3
loope
add
fistpll
icebp
lock
sahf
hlt
fisubrs
mov
push
sar
neg
in
lock
push
loopne
jb
fwait
in
cmp
mov
and
and
in
push
fisttpll
pusha
ret
clc
testl
pop
loopne
ret
call
adc
dec
ror
sbb
aam
xor
fsub
jno
mov
jb
push
adc
mov
loopne
loopew
inc
sbb
in
dec
insb
push
lock
sub
jle
pop
loopne
jmp
inc
aam
cld
fwait
in
call
scas
mov
scas
dec
pop
lea
dec
int3
daa
fsubs
scas
call
jle
mov
mov
push
stos
mov
pop
in
rolb
in
loop
aam
lcall
hlt
jp
inc
pushf
sub
cld
mov
test
xor
les
in
sbb
jg
jb
es
xchg
lds
insb
popf
fdivrs
push
fdivrl
cmp
jo
adc
loopne
xor
cmp
xchg
call
xor
in
dec
jns
lock
sub
cmp
out
lcall
and
rol
cli
pop
neg
sar
push
rcl
rol
xor
pusha
mov
sar
mov
rol
btr
rcr
btc
mov
pushf
seta
add
mov
pushf
neg
mov
jmp
jmp
aas
fildll
xchg
or
mov
pop
mov
xor
ljmp
fidivrs
call
jmp
out
jl
sub
ljmp
arpl
lods
jmp
adc
or
cmpl
or
xor
int
test
ss
lods
out
and
sub
sbb
fwait
popa
xor
add
adc
mov
xchg
pop
inc
and
sbb
call
add
inc
xchg
rolb
pop
lds
sarb
push
cltd
orb
repz
std
test
pop
sbb
test
lea
loopne
and
ss
data16
clc
xlat
add
dec
mov
insl
xchg
lea
bound
ret
repnz
call
dec
xchg
rolb
mov
xchg
js
adc
add
xchg
cmpb
inc
lahf
call
lcall
ret
js
lock
jnp
mov
or
enter
xchg
fld
add
mov
in
rcrl
push
sub
pop
cmp
mov
pushf
push
pushl
ret
lea
je
jmp
cwtl
lea
call
fmuls
loope
rolb
ret
jecxz
je
xor
subb
cwtl
imul
jb
leave
sti
in
or
aam
fnstsw
mov
fldl
ljmp
ret
adc
mov
sub
mov
dec
push
xchg
iret
push
push
lea
call
jmp
jmp
ret
xchg
rolb
jne
ret
fdivr
push
inc
or
mov
or
jns
xor
sub
push
leave
and
fcoml
push
loopne
or
xchg
sbb
add
out
shl
out
repz
add
into
movsb
ret
outsl
mov
pushf
clc
sti
inc
mov
xchg
rolb
out
and
push
fs
outsl
in
out
repz
jp
int
int3
movsl
and
add
mov
pop
lock
sub
inc
lret
xchg
in
mov
xor
mov
das
mov
rorw
fst
cwtl
out
pop
adc
in
cmpsb
popf
sti
xchg
xor
int3
dec
movsl
mov
repz
inc
fnstenv
out
les
les
dec
push
sbb
dec
cmp
add
add
inc
inc
adc
mov
inc
and
arpl
pop
mov
mov
mov
mov
cld
add
add
out
xchg
rolb
test
pop
ror
fnstenv
sub
push
xor
sbb
cmc
out
jecxz
jp
sub
in
fnsave
cmp
jo
imul
repz
fldenv
sbb
push
lods
xor
mul
aaa
push
sub
mov
xchg
fisubrs
sub
cmc
xchg
out
insb
add
add
enter
pushf
push
cmp
cmc
dec
mov
push
imul
ljmp
cwtl
inc
movsl
loopne
int
insl
or
sbb
sar
fsubrl
adc
nop
paddusw
popl
orl
out
stc
mov
push
fidivrl
add
ficompl
in
js
jmp
adc
popa
pop
mov
mov
cmc
pusha
cmpb
call
not
xor
lea
pusha
jmp
movl
pusha
movl
movb
pusha
pushf
pushl
lea
jmp
jne
gs
xor
fs
insb
add
cmp
push
jmp
push
lea
jne
shl
and
inc
shld
mov
test
or
pushf
push
pushf
lea
je
xchg
call
cmp
pushf
pushl
jmp
aam
xchg
rolb
orl
repz
cltd
in
mov
pop
clc
sahf
aad
lock
pop
xor
cltd
inc
out
cmpsb
lret
push
lea
shrl
cmp
test
cmp
jno
enter
dec
out
adc
push
pop
jae
scas
es
pop
sub
adc
sbb
cmp
jnp
fs
xchg
xchg
jns
insb
xor
adc
jne
pusha
test
and
hlt
jg
aaa
fwait
dec
ret
push
add
dec
into
push
push
popf
movsl
and
adc
push
cltd
aaa
jo
mov
dec
jl
icebp
xchg
mov
aad
inc
lock
aaa
hlt
rclb
test
aad
aas
or
loope
sub
add
setnp
pusha
inc
add
setle
xchg
xadd
bsr
test
aaa
mov
setp
shl
shr
not
mov
clc
ja
cmc
push
call
pop
adc
nop
rolb
neg
iret
or
inc
pop
gs
xor
cmp
xor
in
in
inc
sub
or
in
or
mov
fcmove
cs
xchg
call
repnz
xchg
push
mov
jb
xor
out
lods
mov
sbb
jo
push
nop
rolb
jge
cmp
sbb
popa
inc
push
test
jp
cmp
je
nop
fs
adc
lods
cld
repz
pop
fsubs
cmpsb
mov
or
add
mov
outsl
xchg
scas
xor
ss
cmp
lret
add
scas
ljmp
lds
in
pusha
outsb
aas
test
int
out
jge
imul
xchg
repnz
mov
hlt
inc
rorb
das
mov
into
and
inc
call
ret
flds
nop
rolb
inc
sbb
sbb
pop
push
push
ja,pt
aas
addr16
pop
push
jb
xor
adc
adc
das
pop
out
and
js
sub
cmp
jno
daa
fs
sub
in
pop
inc
jno
in
mov
es
xorb
gs
jmp
pushf
pop
add
xor
sbbb
push
in
cmp
jnp
je
dec
cmpsb
inc
add
add
decl
and
sub
movb
push
lea
jmp
lea
call
push
cmp
pushf
pusha
push
jmp
call
test
pusha
lea
and
movl
add
mov
test
clc
clc
bt
cmp
pusha
mov
jmp
mov
inc
dec
inc
pusha
xchg
inc
add
mov
movb
or
cmp
cmc
mov
cmc
pusha
movw
sub
jl
push
inc
pushf
sar
mov
stc
sub
mov
call
mov
addb
movsl
cmc
imul
fimull
ljmp
jb
scas
daa
out
sub
pop
push
ficompl
cs
addr16
dec
adc
sub
out
and
mov
scas
addr16
or
xchg
inc
and
loop
push
sub
pushf
outsl
mov
sbbb
sbbb
pop
insl
push
push
add
daa
push
test
and
sbb
mov
cmp
pushf
jb
scas
lock
test
mov
pop
push
mov
fsts
inc
ficoms
cmpb
ret
jp
jmp
lcall
adc
push
mov
and
out
sub
or
jmp
aas
jb
add
push
imul
aad
xchg
add
or
mov
cmp
sub
pushf
xchg
cmc
testb
jecxz
mov
xchg
add
in
fwait
aaa
add
push
cmp
jmp
lea
ja
and
sub
bsr
rol
bt
add
sbb
cmp
mov
or
shl
xor
ror
mov
call
cmc
bound
push
es
std
push
dec
imul
mov
in
jg
sub
push
lahf
mov
pop
xor
cbtw
ret
mov
jp
jo
mov
movsl
shll
mov
shlb
loop
repz
adc
les
add
push
ret
xchg
clc
sti
add
or
rolb
cltd
and
jne
shrb
and
add
dec
loop
mov
xchg
cli
mov
out
sub
notl
add
leave
mull
test
cld
sbb
jecxz
in
push
call
push
cld
xchg
cs
jns
repnz
mov
incl
rolb
xchg
mov
out
test
jo
in
lock
or
or
mov
sbb
in
aaa
jge
fdivs
or
scas
mov
aad
aas
dec
mov
sbb
mov
dec
inc
push
jno
cmp
fs
mov
sub
icebp
jg
mov
inc
ljmp
cmp
xchg
sbb
jb
jl
xor
and
add
sbb
int3
scas
cmp
stc
pusha
clc
pusha
cli
lret
movsl
xchg
inc
sub
fs
pop
rorl
or
outsl
or
xchg
mov
pop
daa
add
jecxz
outsb
adc
xchg
pop
add
sti
push
pusha
lea
jmp
mov
rcr
not
mov
pusha
pushf
mov
pusha
push
stc
ror
push
mov
mov
movl
dec
mov
push
jmp
dec
movb
pushf
not
pushf
mov
movw
push
lea
call
pusha
test
clc
cmp
pushl
pushl
lea
jae
push
add
jnp
clc
pusha
cmp
call
lea
jae
cmp
xor
call
pop
pushf
push
movl
pushf
movl
pusha
lea
jmp
pop
mov
lea
setl
movsbw
jmp
push
mov
pushf
pushf
mov
lea
jmp
call
lea
jae
push
jmp
test
sti
jb
adc
iret
push
in
xchg
jle
inc
sub
loope
mov
pop
pop
mov
jb
imul
aaa
jg
fnstcw
cmc
into
cs
sbb
int
fildll
popf
pop
adc
es
je
xchg
cmp
mov
xchg
into
orb
stos
loopne
add
adc
cmp
xchg
mov
jge
insb
lret
mov
push
fisubrl
fildll
test
dec
movsl
fisubl
adc
sub
aad
sbb
cli
icebp
mov
or
cwtl
or
sub
cmp
dec
inc
sub
inc
push
push
aam
shl
ja
sahf
xor
scas
insb
mov
inc
or
push
imul
cmp
ficomps
sub
fidivs
jp
orl
xchg
pop
pop
sbb
inc
pop
pop
or
int
add
movsl
pop
js
ja
lea
movl
setno
jmp
stc
push
sub
jmp
es
rolb
lock
xchg
pop
inc
xchg
and
dec
shrl
out
cmp
loope
mov
imul
imul
add
ja
sub
shll
movl
std
or
sbb
xchg
inc
repz
add
and
inc
cmpsl
cmpsb
xchg
outsl
xor
xchg
jae
jns
pop
add
sub
mov
mov
inc
stos
sbb
lahf
or
push
mov
pop
add
jge
mov
push
mov
pop
push
ret
aad
mov
dec
rorb
mov
jmp
jge
or
jo
inc
scas
push
cmp
xchg
test
stos
mov
inc
fnsave
adc
pushf
movl
pushf
lea
jmp
movb
call
movl
jmp
call
add
inc
js
je
jb
arpl
jae
cmp
cmc
clc
or
pushf
pushf
lea
jne
bts
bswap
shl
mov
clc
cmp
pusha
or
jmp
sbb
cs
orb
fidivs
arpl
or
inc
fs
ret
pop
adc
inc
xchg
inc
int
mov
xor
cmp
repnz
add
out
mov
inc
xor
mov
in
jae
sbb
incb
mov
clc
pusha
cmc
cmp
push
lea
jae
bt
test
add
pusha
mov
mov
pushf
pusha
pushl
movw
lea
jmp
pushf
pushl
movl
pusha
lea
jmp
jmp
jmp
push
movl
pusha
lea
jmp
mov
stc
test
cmp
call
add
pusha
mov
inc
not
mov
movb
cmp
pushf
lea
jbe
pushf
cmc
btr
pusha
mov
lea
sbb
clc
rcr
add
cmp
shl
mov
clc
rcr
bts
add
inc
lea
lea
je
movl
mov
bts
setns
mov
call
cmp
bts
mov
jmp
cmp
mov
pushf
pushf
movw
lea
jb
cmp
jmp
test
cmp
call
pushf
add
cmp
sbb
bt
stc
mov
test
call
movl
mov
pushl
mov
push
lea
jmp
bsr
rcr
mov
jmp
pushf
cmp
call
mov
jnp
rolb
incl
add
mov
dec
sbb
sub
lods
js
std
mov
or
jp
add
ret
pop
dec
repz
ds
enter
jbe
mov
rcrl
xchg
subb
xor
loop
mov
ret
lds
xor
cmp
fisubl
push
icebp
and
roll
mov
jl
and
add
add
pushf
pushf
call
mov
cwtl
test
sub
fisttps
subb
ret
mov
push
jmp
xor
inc
cs
roll
xchg
mov
and
pop
mov
cmp
movsb
inc
nop
xor
aam
sbb
cli
andl
inc
cmp
into
or
mov
sbb
xchg
jp
jge
stc
fs
in
ds
ffreep
jp
sub
and
xchg
mov
std
adc
aad
inc
mov
pushf
cmp
jmp
cmp
xchg
cmpl
jmp
iret
add
cmpsl
xchg
hlt
test
repnz
sahf
sbbb
lods
push
sbb
sub
sub
fildl
shlb
or
out
xchg
pop
pusha
in
iret
sub
xlat
roll
out
xchg
shr
stc
jne
leave
out
lock
cmp
pop
jl
ja
in
imul
fmull
push
cltd
pop
mov
lea
call
jmp
lea
ja
stc
cmc
dec
sub
or
bsr
add
push
or
mov
add
jg
mov
pusha
call
lea
je
push
pusha
lea
jmp
call
push
adc
test
xor
mov
movsb
or
pop
popf
lea
insl
mull
push
sbb
adc
xchg
dec
push
xchg
dec
int
fcmovnb
mov
mov
arpl
stos
cmpsl
negb
or
inc
and
filds
adc
test
loopne
sbb
inc
arpl
xchg
mov
movsl
pop
in
pop
pop
daa
push
nop
xchg
std
jb
negl
ja
adc
inc
cmpsl
push
dec
pop
mov
inc
jp
or
divl
cmp
repz
call
push
lock
std
std
mov
insb
movsl
mov
ret
jnp
pop
outsl
iret
leave
std
sub
pushf
mov
pop
push
xor
xchg
popf
jge
dec
in
enter
and
aam
push
roll
fldcw
movl
icebp
mov
xor
xchg
push
lods
in
ja
sbb
stos
adc
sbb
inc
movzbl
lea
lea
movzbw
pushf
movsbw
mov
pusha
lea
call
push
pusha
lea
jne
setge
pushf
mov
pushf
push
pushf
pushf
lea
jmp
lea
je
cmp
test
jmp
movb
movl
call
lea
jae
cmc
cmp
cmp
call
lea
call
stos
mov
das
aam
inc
or
stos
xor
subb
xlat
mov
insb
xor
jp
jae
jb
cli
inc
lock
sti
stc
sbb
adcl
lahf
or
lds
pop
mov
lods
cmp
add
test
push
jg
jmp
jmp
push
movl
call
pushl
popl
stc
cmc
clc
stc
cmp
pushf
jmp
jmp
ds
push
mov
cmpsb
mov
outsb
sbbl
xlat
dec
pop
mov
repz
stos
lock
or
jno
idiv
cmpsl
cmp
fistpl
mov
mov
jmp
sbb
idivb
std
ret
mov
xorl
ror
cltd
scas
push
scas
inc
push
cld
sub
jge
test
xchg
xor
mov
pushf
mov
andb
dec
shrl
ds
shll
mov
push
mov
ficompl
test
xchg
lds
sbb
movsb
jmp
aam
jl
xchg
test
xchg
lock
pop
sub
sub
repz
xchg
lretw
wrmsr
in
shll
mov
mov
adc
and
fisubl
nop
xlat
es
and
movsb
scas
out
flds
xor
scas
ror
scas
mov
xor
dec
fld
cmp
fnsave
cld
pop
add
inc
daa
adc
add
mov
sahf
add
or
lods
fdivl
pusha
ja
cmp
stc
jo
fcompl
jb
pop
sub
fmul
and
sub
adc
or
add
daa
enter
add
jb
or
stc
xchg
jg
rcl
jo
xor
xchg
lock
outsl
pushf
sbb
movsb
addb
arpl
xchg
enter
aaa
inc
jmp
mov
jb
jmp
out
mov
cmp
clc
sub
or
pop
and
nop
push
cld
js
adc
movsb
movzbw
mov
pusha
movb
lea
jmp
jmp
call
call
push
clc
repnz
mov
pusha
push
pushl
lea
jne
jmp
and
clc
add
pusha
lea
jmp
jmp
cwtl
movzbw
pop
pushf
movb
jmp
sbb
xor
sarl
mov
sbb
ja
lcall
mov
and
cmp
movsb
gs
inc
fisttps
sbb
or
call
sub
ds
add
mov
lea
je
clc
call
rep
movsbw
jmp
movl
pushf
movl
push
movw
lea
jmp
mov
pushf
stos
call
clc
not
jmp
pusha
lea
jne
rol
xadd
cmp
mov
add
sub
not
dec
mov
stc
pusha
sub
call
test
repz
xorb
pop
mov
adc
push
cmp
aad
jmp
add
xchg
scas
adc
in
jo
stos
out
mov
add
push
mov
mov
inc
in
movsl
popa
shrl
adc
push
lret
cmpsl
nop
lods
les
repnz
sti
pop
and
rolb
jnp
mov
lcall
xor
in
add
test
pop
mov
cmp
push
or
scas
mov
cmp
fistps
and
dec
cmp
push
ret
je
loop
dec
inc
dec
fisubl
xchg
into
loopne
sbbl
lret
in
jne
xor
aad
popa
xchg
xor
and
nop
push
popf
mov
jecxz
mov
rorl
cmp
push
popa
int3
subb
and
mov
push
add
test
scas
and
rolb
push
or
fdivp
xchg
adc
pop
push
sbb
insb
ljmp
mov
dec
lock
mov
sbb
xor
shrl
aad
call
or
xor
fidivrl
mov
pushf
lahf
data16
iret
call
push
xchg
scas
adc
jg
adcb
aad
mov
es
lds
push
stos
mov
iret
sub
insl
xchg
mov
cwtl
inc
out
lds
mov
sti
lret
xor
jl
repnz
mov
test
and
cs
jg
pop
testb
inc
xchg
inc
pop
add
movsl
xor
int
movl
in
dec
jb
sub
sub
adc
inc
inc
movsl
dec
jge
andb
sar
or
adc
movl
pop
add
xchg
call
lock
inc
fnstsw
cs
fdivrs
jno
pcmpeqb
lret
fidivrs
sar
pushf
call
xchg
mov
sarl
enter
add
pop
mov
bound
mov
out
repnz
enter
frstor
dec
lcall
testl
pop
sahf
and
cmp
lahf
xchg
mov
mov
dec
sbb
fidivrl
sub
lahf
sub
rol
cmc
clc
jmp
jmp
pushf
call
call
lea
je
jmp
lea
je
xchg
dec
add
bt
stc
xchg
sub
and
not
rcl
rcr
shr
shr
xor
add
adc
mov
movsbw
sub
bt
pushf
add
bsf
sub
clc
add
lea
shr
mov
cmp
cmc
shr
jmp
movl
pushl
mov
push
lea
jmp
and
clc
sub
repz
stc
cmp
test
push
lea
je
test
jmp
test
push
sub
stc
cmp
pushf
pusha
push
lea
ja
call
test
addb
or
addl
movl
or
les
xor
aaa
insb
add
shll
and
sub
test
sub
dec
in
stc
mov
cmp
pop
add
repz
inc
sub
add
and
add
adc
dec
sub
add
push
add
adc
pusha
movb
lea
je
bsf
or
movsbl
sub
jae
shl
das
mov
pushf
lea
lea
mov
btc
movsbw
dec
shr
sub
shr
not
ror
xor
mov
call
lea
jne
rol
call
pushf
pusha
lea
call
jmp
push
push
pushl
popl
pushf
mov
mov
pushl
ret
lahf
data16
rolb
sbb
dec
and
leave
jg
mov
mov
pushl
std
cwtl
mov
dec
ret
jmp
push
xlat
inc
pop
xchg
mov
dec
out
or
out
inc
mov
faddp
xchg
into
mov
rcll
sarb
sub
cld
call
xchg
outsl
sbb
frstor
lea
cltd
mov
xor
mov
xor
mov
jb
outsb
jg
push
jno
jo
push
in
addr16
rcr
outsl
adcb
popf
ss
fs
mov
jl
lret
dec
cmpsb
push
test
xchg
ret
push
mov
pushl
pop
mov
not
jmp
sub
bound
push
stos
jo
sti
mov
inc
adc
and
jns
popf
dec
movsl
push
mov
pop
adc
mov
xor
rol
sub
push
andl
inc
test
mov
sahf
sub
fbstp
or
or
faddp
lret
repz
push
outsb
xor
adc
loopne
clc
jmp
sar
mov
stc
call
movl
push
pushl
lea
jmp
xchg
movsbw
cwtl
movl
bswap
not
pusha
lea
call
call
js
xchg
jns
or
mov
sbb
enter
xor
test
dec
decb
xchg
jno
jb
xchg
adc
lods
xor
dec
cltd
mov
push
cli
in
sub
shlb
ret
test
mov
bt
call
pushl
movl
jmp
jmp
call
stc
repnz
movb
lea
jne
not
pusha
movb
lea
mov
sets
not
call
dec
in
cmpb
js
and
aad
movsb
xlat
xor
push
sub
jne
adc
rorl
mov
shlb
inc
fisttps
or
dec
andb
mulb
mov
test
push
inc
stos
sub
ror
or
xor
pop
mov
lret
int
out
cmp
lds
dec
jns
xor
orb
sbb
sub
imul
jbe
mov
xorl
push
or
sti
jae
popa
bound
jno
jg
leave
pop
arpl
repz
filds
sub
mov
mov
jbe
push
mov
ret
sbb
aam
iret
jp
jo
jmp
cmpsb
xor
mov
pop
dec
sahf
pop
into
push
pop
mov
push
jg
adc
cmp
mov
icebp
cmp
call
insl
ja
orb
addr16
jge
mov
aam
rorl
lds
ficomps
rcr
dec
dec
popa
das
xchg
inc
dec
mov
into
mov
cmp
pusha
lea
dec
js
inc
or
sub
scas
add
fwait
loop
in
add
add
iret
movw
cmp
call
call
xor
clc
cmp
or
push
lea
je
movzbw
pusha
movsbw
lea
mov
movsbw
mov
movsbw
movzbl
movsbl
movsbw
lea
movb
movl
pushf
movw
push
pushl
popl
push
push
movb
pushl
ret
push
stc
bt
pusha
xchg
shrd
cmp
mov
call
call
in
adc
rolb
int
mov
sti
mov
es
call
je
adc
loop
sub
jmp
jle
cmp
adc
shlb
jo
mov
adc
add
mov
lret
mov
jns
data16
mov
add
enter
jne
xor
iret
mov
push
pop
cmpsl
sbb
jp
xchg
adc
pop
inc
pusha
mov
mov
cs
fistl
xor
xchg
or
dec
sub
scas
cli
jbe
xor
inc
insl
jb
xchg
pusha
push
sbb
loop
sbb
call
jl
jb
adc
into
pop
push
inc
scas
add
mov
repnz
ret
lods
cmp
jle
sti
cmp
out
lcall
pusha
pushl
push
movw
movl
jmp
push
pushf
movb
lea
jmp
bt
or
jmp
cmc
pushl
pushf
cmpb
pusha
movb
push
call
pop
pop
out
jne
adcb
nop
stos
int3
or
mov
inc
leave
dec
call
mov
add
repnz
and
pop
xchg
jne
pop
bound
aad
bound
rcrl
sti
cmp
push
pop
ret
pop
push
mov
lds
mov
loope
add
cmp
jge
bound
adc
stos
outsb
sti
fcomps
lods
xor
repnz
add
sub
and
les
or
addl
push
mov
negb
add
fimuls
jne
xor
aaa
dec
arpl
jnp
mov
push
xor
sub
fs
cli
inc
and
cmp
loope
sbb
pop
jmp
lock
adc
xlat
xchg
push
mov
jge
inc
dec
rolb
push
dec
push
pop
inc
cmpl
sbb
sbb
mov
cmp
or
add
jmp
scas
insb
mov
int
js
sbb
dec
cmc
mov
aad
mov
daa
or
xor
jmp
adc
or
inc
ss
into
cs
stos
arpl
sti
pushf
or
adc
ljmp
int
push
push
push
cmp
popf
pusha
pushf
mov
push
movl
call
bt
not
pushf
pusha
pushl
jmp
movl
pushf
lea
pushf
movl
push
movb
pushl
popl
pusha
mov
pushl
ret
call
sbb
pop
push
stos
jnp
jmp
mov
loop
test
cwtl
and
and
or
push
movsl
dec
jns
cmp
orb
les
js
icebp
rolb
negl
fs
in
jmp
and
loopne
push
scas
es
aad
lds
xchg
rorl
in
fsubl
and
leave
cwtl
popa
dec
jae
dec
push
dec
fstpt
mov
xor
cmc
lea
jbe
mov
cmp
sub
jae
add
es
lcall
xor
mov
mov
aam
mov
subl
adc
and
pop
lret
jo
rcrl
scas
xor
cmp
or
repz
pop
sbb
pop
xchg
xchg
lret
fisttpll
jae
sbbb
loope
dec
shll
repz
or
arpl
jl
pop
sti
dec
sarb
in
add
add
sub
xor
or
dec
sub
lahf
and
cmp
sub
andl
xchg
and
adc
lods
pop
lds
mov
fdivrs
int3
fs
ja
andb
or
jecxz
sahf
jb
xor
mov
das
ret
xchg
mov
dec
xlat
xchg
xchg
and
push
loopne
cmp
xorb
imull
mov
cwtl
mov
or
test
jne
jb
test
cmpsl
mov
and
mov
push
fwait
scas
jge
xchg
and
xor
xchg
cmc
bound
cmpb
xchg
lea
stos
lahf
and
jl
ret
sbb
mul
mov
bound
xchg
adc
pusha
out
or
pop
and
push
daa
lea
jb
jmp
lea
bswap
mov
jmp
stc
add
pusha
push
cmp
movb
call
cmc
movb
ror
clc
add
cmc
cmp
movw
mov
cmp
test
jmp
popf
rdtsc
nop
pushf
pushf
movl
jmp
pushl
mov
push
call
lea
je
pusha
cmc
pushf
cmp
movb
jmp
call
lea
call
call
mov
mov
call
jl
loop
rolb
popa
pop
sbb
and
jle
ljmp
movsl
mov
dec
or
aas
and
repz
stc
mov
cmp
xor
orw
jns
pop
add
mov
pop
andb
mov
mov
jmp
movsb
xchg
mov
cs
jge
lds
jbe
addb
ja
jae
lds
jl
jno
rolb
add
addl
jno
add
jge
lds
jl
lds
ja
lds
xorl
insb
in
cmp
rolb
bound
call
ds
xchg
arpl
enter
sbb
scas
lcall
sbb
sbb
dec
cld
push
out
cmp
loopne
jb
out
xchg
lea
popa
sbb
sarb
fcmove
xor
add
xchg
xchg
sbb
sti
hlt
mov
fiaddl
pusha
lea
push
mov
movsbw
movsbl
push
mov
bswap
lea
xchg
mov
mov
not
mov
jmp
pushf
push
lea
ja
push
pusha
movl
call
stc
addr16
rolb
mov
sbbb
testl
jns
and
and
sub
jl
in
or
push
test
leave
xor
add
pusha
imul
lods
dec
push
xor
test
push
in
xchg
add
add
mov
rol
bsf
xor
stc
mov
bt
call
pushl
popl
pushf
movw
mov
pushl
ret
inc
icebp
pushf
outsl
rolb
cmc
mov
pop
ja
mov
or
lds
lcall
stos
daa
jb
scas
cli
in
or
in
sub
aad
cs
or
xchg
in
or
sub
ror
push
mov
dec
mov
pop
mov
jmp
jmp
arpl
outsb
rolb
add
pmaddwd
dec
and
leave
cwtl
ss
cmp
inc
sub
imul
ficoml
call
in
and
outsl
pop
aam
add
push
pop
sbb
cmpl
push
xchg
les
cmp
lds
mov
mov
insl
lret
push
dec
inc
data16
sbb
in
icebp
into
cmp
cmp
sub
sbbb
ficoml
push
fbld
adc
xchg
bound
ret
shlb
iret
test
aaa
xchg
rcrl
jle
call
inc
jge
inc
xchg
je
loop
jb
nopl
jne
xchg
jp
shll
mov
lea
jne
call
add
dec
outsl
popa
fs
imul
add
pushf
fcos
lcall
out
pushl
lea
jae
lea
mov
movzbl
cmp
mov
sbb
movzbl
sar
shrd
mov
jmp
movl
pushf
jmp
jmp
movl
push
call
push
inc
mov
pushf
inc
pushl
mov
pusha
mov
lea
call
push
jmp
test
push
or
call
pushf
jmp
in
push
lea
jb
pushf
push
movl
mov
call
cmp
bt
repnz
push
push
pushf
lea
jne
seto
movb
movzbw
push
pusha
bswap
bswap
lea
call
rol
mov
pushf
call
push
dec
pushf
pushf
bt
not
movb
bt
stc
pushf
ror
bt
add
cmc
call
dec
lds
mov
lcall
sbb
jle
jp
xchg
mov
sub
insb
adc
adc
scas
mov
cwtl
xchg
pminub
adc
movsl
adc
and
cmp
xchg
jns
stos
inc
lret
mov
push
lea
jecxz
cmp
lea
insb
addb
ficoml
add
sarb
sub
iret
or
jae
xlat
popf
sti
jp
jecxz
xchg
ja
or
js
jmp
inc
movsb
cmp
out
jns
dec
or
mov
pushl
ds
outsb
subl
add
out
push
rorb
fistpll
jle
ljmp
push
decb
iret
cmpsl
cmp
push
ret
inc
leave
add
lret
fcompl
push
jp
scas
imul
arpl
push
pop
inc
pop
fst
mov
inc
aad
mov
mov
pop
push
addr16
jle
loop
mov
xchg
sbb
ja
sbb
cltd
adc
loop
mov
jns
pop
fidivs
loopne
test
cs
jo
gs
imul
mov
jne
push
in
xchg
mov
fprem1
mov
roll
cmpl
inc
sarb
mov
into
test
cmp
push
xlat
sub
aaa
test
jbe
hlt
mov
aad
jmp
rolb
mov
in
aaa
jmp
mov
cmpsl
cmp
movsb
xchg
sbb
xchg
addr16
jle
nop
fistl
movsb
fmull
add
outsl
fdivrp
inc
xlat
ss
mov
mov
jnp
and
sbb
cmpsl
cmp
push
jne
mov
and
sbb
gs
inc
dec
lds
mov
xor
les
add
dec
jno
adc
test
sbb
daa
push
ficompl
out
sub
movb
not
pushl
jmp
xor
addb
mov
out
test
mov
or
aas
hlt
imul
push
cmp
ror
andl
daa
push
leave
adc
bnd
sbb
push
mov
lds
pop
icebp
xchg
test
addr16
mov
outsb
sub
mov
fdivl
negb
xor
add
xchg
pop
sbb
cmp
inc
push
out
push
fnstcw
imul
fcomip
cmp
mov
sar
adcl
idivl
push
out
aam
lea
pop
loop
jb
repz
pushf
cli
inc
push
inc
lret
dec
pop
cltd
dec
jmp
insb
clc
loopne
inc
lods
and
out
add
test
lret
pop
mov
inc
jae
mov
pop
fisttpl
xchg
and
sub
stos
sbb
mov
add
shl
mov
lds
xor
cmp
xchg
jmp
sti
outsl
add
addl
jb
cmpsb
call
outsl
jg
push
cmp
sbb
jb
sub
fdivs
add
jne
shll
cmp
adc
imul
xchg
add
mov
outsb
out
shrb
addl
loopne
or
adc
push
jmp
jns
in
fnstenv
clc
xor
outsl
or
adc
mov
and
xchg
ja
cmp
sarb
jnp
xchg
pop
lock
es
int3
push
cli
sbb
xor
cmp
cmp
sub
add
in
and
cmpb
mov
mov
lea
jne
bts
aad
aaa
daa
xor
cwtl
add
das
mov
mov
sbb
neg
add
pushf
test
mov
stc
stc
test
pushf
lea
je
stc
call
call
test
cmp
call
xchg
js
rolb
push
fcomi
mov
pop
mov
or
lret
repz
in
hlt
fs
cmp
jbe
pusha
fcmove
int
sub
xor
repz
out
out
mov
mov
hlt
in
sub
bound
repz
jb
icebp
or
and
push
lea
not
mov
lea
call
popa
or
rolb
stos
pop
fidivs
or
hlt
imul
xor
jno
add
push
sbb
push
mov
mov
lods
add
nop
gs
lods
sbb
roll
and
icebp
mov
mov
out
addb
out
es
daa
in
inc
fwait
es
xor
cmp
or
mov
int3
mov
rolb
in
stos
pop
fwait
mov
add
fucom
leave
inc
or
mov
jbe
or
nop
call
dec
test
cmp
inc
scas
lea
sub
jge
lea
push
mov
icebp
pushf
lahf
fdivr
dec
mov
fwait
inc
es
and
ljmp
push
adc
adc
sti
cltd
ja
xor
xchg
das
out
nop
cmc
mov
xchg
and
xor
pcmpeqb
andl
pop
inc
popf
mov
jns
int3
inc
pop
ds
dec
fxch
and
pop
shl
mov
sub
or
stc
xchg
jnp
and
or
rcrb
stos
ss
inc
fwait
lock
xlat
out
dec
jno
neg
call
pop
jmp
cli
movsb
cmpb
in
push
mov
mov
pop
fisttps
cmp
es
sub
cmp
sahf
cmc
sub
jl
sbb
in
lods
out
and
fs
jle
jo
fsubl
inc
xchg
fmul
lods
xlat
idivl
xor
pusha
clc
inc
shl
ljmp
push
xchg
or
mov
mul
sub
mov
mov
jb
mov
and
aas
push
out
mov
frstor
mov
shl
adc
jb
subl
pop
out
ljmp
push
lods
mov
sbb
rcll
lods
cmp
xchg
or
dec
jp
les
in
mov
push
inc
push
test
shlb
loopne
inc
cmp
sub
faddl
popf
stc
sbb
adc
mov
or
hlt
xlat
in
insb
xchg
dec
insb
imulb
add
pop
push
pop
adc
dec
mov
movsb
xor
push
dec
xchg
push
out
cmpl
dec
mov
clc
adc
sub
loopne
ljmp
sti
xor
insb
frstor
les
int
jns
sbb
push
popa
add
push
lea
pop
and
jb
shrl
int3
mov
icebp
pusha
or
cmp
cmp
inc
add
cmp
out
lahf
mov
ds
cwtl
mov
jge
and
and
aas
lods
mov
mov
push
cwtl
mov
adc
xchg
jbe
add
adc
add
fidivrs
add
add
test
dec
rorl
sbb
push
mov
push
bound
dec
push
push
mov
fnsave
bound
cli
xor
inc
cmp
dec
cmpsl
testl
adc
icebp
push
sub
jae
or
dec
ja
loopne
jg
jmp
xor
ret
clc
rorb
test
arpl
insl
lods
es
popf
lds
jns
jnp
sub
and
xor
mov
xchg
push
and
xor
mov
sub
es
or
and
lret
inc
mov
fsubr
add
sub
cmp
outsl
xchg
inc
jae
mov
aaa
into
pop
xchg
lret
cld
sub
test
and
pushf
lahf
fsubrs
roll
xchg
rep
jnp
adc
out
test
aam
lods
jecxz
inc
xchg
pop
push
xchg
leave
xchg
movl
pavgw
xor
cmp
inc
mov
pop
ds
pop
push
xchg
in
mov
mov
sbb
out
popf
inc
xchg
es
sbb
xor
xchg
cmc
adc
mov
and
pusha
ja
pop
cltd
adc
test
jecxz
jp
bound
pop
ds
and
xchg
shl
clc
and
les
dec
jnp
inc
dec
jae
mov
ror
xchg
lea
jae
jbe
pusha
lea
jne
pushf
stos
push
lea
jmp
mov
adc
sub
jmp
je
pop
jb
cmpsb
outsl
cmp
or
repz
popa
mov
mov
cli
mov
cmp
mov
mov
sub
repz
stos
les
sbb
push
orb
mov
push
fwait
movsl
in
jno
test
into
fstl
inc
and
hlt
in
mov
pop
add
mov
xor
add
or
call
adc
add
cmp
test
add
pusha
pushf
pusha
call
movl
push
push
call
pushfw
popw
rol
mov
push
cmc
push
call
fcoms
andb
dec
push
jmp
fisubs
pop
inc
cltd
std
add
adc
xchg
mov
inc
jb
pop
adc
or
stc
push
mov
cs
or
jno
xchg
or
sti
in
out
inc
sarl
xchg
icebp
sarl
iret
cli
push
add
cmp
mov
jo
std
call
jmp
inc
or
popa
rolb
push
pop
repnz
bnd
popa
mov
nop
cld
cmp
adc
jb
inc
lret
in
or
cmp
mov
cmpsb
into
cs
and
or
mov
sub
out
mov
add
inc
xor
dec
xchg
push
mov
push
mov
not
lea
jmp
pushf
mov
movl
push
pushf
mov
push
movl
movl
pushf
lea
jmp
mov
adcb
add
pusha
leave
xchg
push
data16
lods
push
jo
sarb
jg
movsb
jp
xchg
syscall
out
cmp
bound
aas
ret
mov
dec
fldt
inc
loope
sti
negl
push
xchg
es
and
pop
inc
pop
mov
sbb
insl
add
jne
pop
outsb
jbe
les
test
outsl
mov
jo
inc
sub
loop
lret
xchg
jne
rolb
bound
inc
mov
out
shll
push
cmp
std
das
pop
sbb
dec
int
pop
inc
in
sarl
or
adc
in
cmp
adc
mov
in
add
in
and
repz
lods
xor
add
lods
add
add
pop
push
adc
mov
add
icebp
sbb
cmp
lds
jne
inc
sub
fwait
pop
je
js
out
lock
ficoms
fpatan
dec
or
pop
fdivrs
movl
pushf
push
pushl
push
lea
jmp
cmp
call
xor
bts
add
btc
mov
lea
or
add
not
inc
mov
jmp
dec
mov
pop
rolb
imul
icebp
incb
pop
rcrl
cmp
inc
push
lret
cmp
pop
adc
jmp
sub
inc
fwait
jae
cmp
sub
xchg
in
jnp
add
pop
mov
orb
fucomip
and
xor
xor
cltd
mov
sub
hlt
push
les
movsb
mov
cli
jne
pop
rclb
jge
popf
pop
cmp
sbb
lret
mov
ret
mov
ss
dec
mov
jne
and
clc
jns
xor
jne
adc
clc
repnz
jl
cli
call
push
mov
sbb
adc
inc
jno
std
outsb
pop
mov
jns
mov
sub
mov
cli
xchg
or
pop
movsl
movsb
imul
out
jo
push
out
jge
jecxz
push
mov
aam
xchg
xor
inc
and
aas
adcl
sarb
mov
call
pop
rolb
add
das
jnp
add
pushf
xchg
adc
rcrb
jb
bound
out
cltd
pop
dec
add
adc
xchg
je
xchg
or
test
repnz
arpl
lock
nop
sar
push
mov
lea
je
push
lea
jmp
scas
cli
pop
rolb
fcomps
adc
or
dec
and
or
or
mov
enter
sti
stos
shrb
sbb
rcrl
lret
jno
pop
gs
in
or
ss
cld
rolb
arpl
xor
ss
cmc
push
push
outsl
or
xorb
mov
nop
push
rolb
enter
sets
sbb
dec
fiaddl
cmc
subl
inc
jno
jle
push
es
fsubr
push
and
faddl
cwtl
imul
sub
xor
mov
mov
andb
adc
add
imul
or
xchg
mov
sub
adc
pop
dec
add
mov
xor
dec
std
jae
in
mov
jb
xor
sbb
ljmp
xchg
sahf
inc
inc
sbb
sarl
inc
hlt
dec
jno
aam
mov
mov
push
out
sbb
shr
int3
sbb
int
rorb
lea
je
cmp
add
call
mov
lea
ja
pushf
jmp
call
movb
pusha
lea
jae
and
bsf
btr
mov
rcr
rcl
bsr
pusha
mov
clc
bsf
lea
mov
clc
pushf
sub
test
repnz
mov
jmp
pop
mov
aas
xor
push
mov
rorl
and
pop
fidivrl
mov
mov
inc
jb
pop
xor
sub
insl
iret
jg
imul
jg
lea
jb
cmc
cmpb
call
in
add
rolb
adc
push
scas
lret
andl
iret
es
rol
xchg
iret
sbb
fld
aad
subb
sbb
cltd
dec
jecxz
or
adc
push
xchg
xor
lds
lea
fsubs
pop
push
test
sarb
notl
stos
out
mov
xlat
push
inc
shl
push
pop
lods
ds
push
jbe
xchg
into
pushf
mov
fiadds
ret
dec
mov
dec
cmp
aaa
mov
mov
shrl
jge
mov
pushf
in
push
test
pop
sbb
orl
xor
jne
push
mov
mov
cmp
or
jb
das
std
pop
aad
repz
dec
xchg
data16
fstps
mov
imul
sub
test
repz
sub
inc
pop
dec
mov
fisttpll
int
dec
aas
cmp
cmp
shlb
dec
fbstp
sbb
popf
cmp
dec
xor
jne
dec
cs
push
stos
lods
data16
lods
clc
mov
push
bt
sub
push
stc
jmp
lea
je
sbb
bsr
pusha
add
jmp
mov
pushf
mov
lods
push
clc
bt
sub
jmp
movzbw
cmp
mov
call
xor
gs
xchg
add
and
sti
add
pop
inc
add
pop
push
pop
lods
sbb
out
add
and
or
sub
mov
lds
sbb
int
test
pop
mov
dec
or
xor
and
sub
jecxz
sub
sbb
daa
inc
xchg
jbe
fldl
mov
cmp
or
inc
subb
mov
cmp
jmp
adc
inc
jl
and
xchg
cmp
mov
sbb
fisttps
or
sbb
cmp
out
dec
cld
test
xchg
dec
fdivrl
pushf
pop
add
add
cmp
fisttpll
pop
js
test
bound
lea
and
add
mov
mov
mov
subl
push
add
mov
sub
jnp
or
dec
mov
jecxz
cmp
popf
mov
mov
movsl
or
idivb
out
mov
or
ret
add
aad
in
call
add
rcrb
sbb
jb
sbb
inc
xor
mov
mov
sbb
test
add
push
jmp
xlat
dec
pop
std
ja
xlat
mov
aaa
sbb
test
adc
jnp
pusha
sbb
and
pop
dec
cmp
inc
cltd
lahf
fmul
cmp
popf
fcomp
jecxz
loopne
add
and
pop
cmp
sbb
xlat
mov
int
pop
jl
inc
mov
pop
cmp
ret
mov
pop
or
std
scas
test
in
sub
xor
or
js
add
push
inc
pop
pop
add
xchg
mov
mov
inc
inc
insb
mov
pushf
cmp
sbb
jl
movsb
enter
sti
sbb
in
push
mov
les
in
sub
push
or
ds
pop
jge
in
sub
push
or
cmpb
pop
mov
mov
int
push
or
out
fstpl
sahf
lea
sub
push
or
orb
les
pusha
jl
scas
push
or
pop
decb
lods
sub
push
or
orb
sub
jg
sahf
lea
sub
push
or
sbbb
popf
insl
dec
and
lahf
mov
in
and
outsb
mov
incl
inc
cltd
shrl
outsb
mov
cmp
leave
int
add
das
ror
xor
mov
sub
mov
inc
cmpsl
mov
stos
aad
aas
xor
and
fistpl
pop
in
mov
or
cmp
sub
cmpsb
std
jge
dec
ret
loope
or
adc
das
xor
jmp
xor
cmp
xchg
pop
adc
or
jno
lcall
clc
clc
adc
out
mov
xchg
or
hlt
and
iret
mov
je
add
jg
sub
inc
add
dec
ds
or
adc
xchg
cmp
cld
adc
inc
jl
adc
lahf
ds
dec
inc
pop
sub
cmpb
mov
mov
xor
cmp
in
pop
jg
mov
mov
das
mov
mov
ret
enter
cmc
test
push
inc
adc
rcll
sbb
sbb
jl
je
and
mov
jl
push
jb
jecxz
jl
es
fcoml
jne
or
fiaddl
popf
mov
scas
les
jl
adc
outsl
sbbb
add
and
or
shr
or
xor
pop
mov
dec
pop
cltd
sub
and
and
fs
insl
push
or
mov
incb
mov
dec
and
es
fs
mov
sub
adc
push
jge
lods
mov
add
mov
clc
push
or
inc
andl
filds
iret
and
pusha
iret
xchg
mov
dec
insl
adc
sbb
fcompl
ljmp
in
pop
inc
repz
pop
xchg
popf
push
pop
sbb
add
dec
incl
stos
cltd
ss
leave
and
imul
and
inc
popf
add
sub
cld
mov
mov
mov
bnd
filds
loope
pop
add
frstor
ss
and
push
andb
lods
popl
dec
push
sub
add
adc
ficomps
jle
jl
cmp
std
add
sarb
dec
inc
add
sbb
scas
out
lods
push
dec
movsb
call
in
mov
in
dec
pushl
popa
mov
lcall
in
adc
xchg
fcmovu
aas
pop
mov
jmp
out
popf
cmp
fdivrl
test
add
rorb
in
cmp
mov
aad
mov
jl
or
adc
lods
jae
stos
lret
mov
jge
sub
mov
sub
fcompl
je
das
orb
std
jge
imul
pop
xor
and
test
lods
enter
sub
mov
mov
adcb
outsl
push
add
jg
into
fisubs
shr
lods
aas
insb
loopne
aas
mov
dec
cltd
lods
aaa
dec
and
int3
aas
fsubl
mov
addr16
jl
das
mov
sub
and
mov
pushf
mov
mov
in
and
mov
mov
insb
or
sub
cmp
sub
mov
sti
push
das
fdivrl
insb
mov
loope
pushf
jle
or
popa
nop
xor
lea
inc
pop
adc
lahf
out
xchg
adc
add
mov
aad
sbbl
pop
lds
push
add
mov
sti
sbb
fdivrs
bound
jmp
mov
int
test
mov
es
popa
mov
and
lds
insl
dec
xor
sbb
leave
xchg
cmp
cmp
mov
enter
ss
scas
pop
mov
lcall
in
int3
sbb
int
fstps
xor
das
jbe
jge
insl
stos
inc
enter
xlat
loope
scas
mov
stc
sbb
mov
test
cwtl
xor
pushf
xor
fsubl
mov
int
int3
or
add
dec
jle
add
cmp
adc
jo
xchg
mov
pusha
inc
outsb
imul
out
test
out
mov
pop
scas
sub
mov
push
pusha
mov
push
sub
lea
and
dec
push
pop
jge
sbb
rcr
lock
out
in
sub
sbb
leave
je
inc
or
push
sub
lahf
pop
adc
cmp
hlt
fidivrs
les
adc
std
mulb
loopne
jns
adc
adc
jns
xchg
xor
sbb
js
jg
push
cmp
mov
pop
fmull
cmp
cmp
xchg
movsl
add
pusha
fidivrs
push
sub
das
mov
push
jg
nop
pop
xchg
fcoml
inc
inc
movsl
or
inc
push
cmc
mov
xlat
adc
or
and
insb
or
pop
jg
add
dec
xor
add
xchg
jno
sbb
or
cmpsb
add
lea
add
sahf
sbb
jl
sub
or
or
and
mov
sbb
sub
inc
inc
mov
outsl
cs
dec
add
inc
adc
enter
adc
sbb
sahf
adc
or
jecxz
fstl
pop
pop
repnz
ss
push
xchg
pop
and
sarb
ror
popf
mov
mov
mov
scas
pop
jle
out
cmp
dec
imul
movsl
divb
pusha
pop
cmp
in
dec
sbb
insb
enter
inc
jb
mov
popf
pop
arpl
test
mov
inc
es
cmp
add
sub
inc
inc
dec
dec
adc
lods
push
je
dec
inc
mov
outsl
inc
inc
jmp
out
pop
out
cmp
dec
fmull
push
lret
and
adc
ja
add
sub
cli
pop
icebp
lahf
jl
jl
adc
nop
mov
adc
imul
ja
dec
mov
add
dec
cs
aas
in
or
or
aas
cmp
fcompl
cmp
jl
ret
jle
or
shl
mov
or
lods
loope
sub
dec
mov
push
dec
push
sub
inc
inc
loopne
ds
mov
iret
push
mov
adc
xor
inc
loop
push
sub
or
int3
mov
ds
cmp
sbb
nop
or
push
adc
insb
je
insb
dec
sbb
je
dec
inc
fisubs
fisubrs
mov
mov
ss
dec
inc
mov
int3
adc
lds
punpcklwd
fmul
jns
xchg
addb
sbb
lods
inc
sbb
ret
or
orb
cmpsl
out
and
inc
bound
adc
adc
inc
dec
pop
iret
dec
adc
pop
cmp
les
push
push
test
adc
dec
xor
and
cwtl
mov
mov
loope
sub
lret
add
adc
xor
iret
dec
and
cmpsl
xor
pop
inc
sti
mov
and
jb
and
popf
outsl
dec
add
cmp
shl
dec
push
ficomps
fiadds
cmpsl
scas
lock
cmpsl
dec
in
int3
add
popa
movhps
cmp
lcall
inc
out
inc
mov
dec
mov
mov
and
data16
add
ds
push
sbb
pusha
pop
es
cli
sbb
sbb
pop
xor
push
xor
rclb
adc
scas
sub
aam
aam
push
xor
mov
adc
les
sahf
sbbl
mov
jno
or
pop
sub
add
popa
rolb
scas
sbb
test
mov
movsl
out
adc
or
movsl
and
pop
into
inc
loop
test
pop
iret
sub
jns
inc
and
mov
mov
fidivrs
rcrl
out
or
imul
incb
lahf
pop
adc
hlt
cld
nopl
fstl
sub
sub
mov
icebp
mov
inc
dec
shlb
aam
add
inc
popf
and
test
leave
sahf
in
and
out
addl
and
std
sbb
inc
dec
and
xchg
pop
pop
mov
mov
xor
sarb
adc
mov
inc
imulb
inc
cmp
mov
dec
mov
insb
test
inc
inc
dec
jl
sbb
push
das
push
xor
push
shl
xor
xlat
insb
dec
sti
add
std
lods
fdivp
ds
ss
loopne
and
mov
scas
inc
fistpll
mov
dec
or
inc
gs
sbb
adc
inc
inc
or
inc
xchg
mov
push
jg
mov
adc
inc
das
and
test
inc
jbe
int3
enter
int
and
dec
or
into
inc
pop
test
lahf
fistps
or
pop
sbb
inc
pushf
test
or
xchg
orl
inc
push
and
mov
test
lea
and
or
push
sbb
mov
cmc
movsl
jo
mov
insb
iret
mov
iret
fisubs
jecxz
mov
mov
mov
aam
sub
in
fwait
out
data16
aad
xchg
xor
aaa
test
mov
fsubl
enter
fstpt
mov
aas
mov
jbe
push
lds
sbb
imull
mov
push
add
push
sub
lea
cmp
or
mov
pop
xor
mov
add
inc
ret
rol
into
jl
inc
rcll
subl
enter
mov
lds
aam
movsb
es
mov
cmp
dec
mov
push
shrb
fs
test
je
mov
movsb
ds
push
add
inc
fnstenv
xchg
inc
rorb
sbb
add
cmpsb
sub
mov
std
xor
inc
cld
or
pushf
mov
jb
ds
mov
scas
rcl
jg
rol
pop
and
inc
mov
lods
inc
fistps
add
int
pop
pushf
js
fdivrl
mov
cld
or
sbbb
add
int3
std
sbb
xchg
sahf
mov
add
xor
pusha
inc
push
and
cmp
xor
adc
or
mov
into
inc
in
sbb
gs
mov
mov
mov
mov
aam
enter
leave
xchg
add
dec
dec
sbb
dec
cmp
shrb
xchg
lods
dec
mov
fsubl
int3
pusha
add
mov
pop
dec
loope
xor
es
faddl
lea
dec
mov
jmp
les
and
std
inc
push
and
cs
sub
icebp
pop
je
or
int
out
xchg
mov
lock
fsubr
test
inc
aaa
cltd
jo
lods
sbbb
int3
mov
cmp
xchg
out
mov
cmpsl
insb
cmp
or
mov
and
xor
and
dec
lock
test
out
inc
sbb
add
dec
sub
incb
fidivs
adc
add
mov
fsts
sub
jno
out
inc
sbb
xor
xor
mov
mov
sbb
push
or
cmp
cld
or
or
sub
stc
dec
sbb
mov
mov
mov
mov
mov
fsts
add
sub
stc
subl
push
movsl
insb
stos
inc
sbb
fs
xor
sbb
cmp
xlat
or
lret
adc
lods
stc
add
or
sbb
mov
cld
clc
or
sbb
js
stos
add
lahf
loopne
mov
mov
push
sbb
push
sbb
cmp
stc
or
dec
cmc
jl
jl
lock
dec
test
push
mov
xorl
mov
fwait
out
std
addl
rcll
sahf
and
or
fmul
jg
add
sub
adc
movsl
push
cmpl
xchg
mov
cwtl
ficomps
sbbb
in
pop
jae
mov
adc
or
mov
cmp
ss
push
sub
mov
sub
popa
iret
adc
outsb
adc
js
mov
pop
sbb
mov
cs
leave
sub
daa
and
sbb
add
cltd
pop
fimuls
das
addr16
sbb
pushf
sbb
lods
mov
outsl
jg
xchg
sbb
pushf
pop
add
jl
add
testl
inc
test
xchg
inc
jg
fstpl
inc
je
int3
or
shlb
insb
sbb
inc
cmpsl
test
pop
and
sbb
xor
xor
or
or
sbb
or
inc
push
mov
sbb
hlt
or
pop
sbb
loop
popl
scas
inc
jbe
cs
pop
or
inc
dec
test
fimuls
sbb
scas
or
inc
mov
jne
sub
or
fisubl
and
pop
mov
out
pusha
pop
inc
sub
and
inc
aas
test
cmpsl
or
mov
and
inc
es
add
and
mov
decb
inc
xlat
test
or
sbb
in
sbb
fisttpll
test
or
inc
or
add
mov
push
or
push
inc
inc
pop
and
into
test
xchg
cld
rorb
mov
and
inc
and
inc
push
test
scas
out
cld
add
mov
sbb
push
or
inc
movsb
pop
movb
daa
inc
test
lds
inc
sbb
rorb
add
mov
xchg
inc
mov
inc
aam
xchg
or
mov
dec
inc
inc
and
pop
pop
shlb
test
fs
and
inc
cmpsl
test
dec
xchg
out
pop
pop
and
or
incb
popl
das
sbb
xchg
inc
lea
test
cli
lahf
and
filds
test
mov
xchg
mov
xor
or
inc
xlat
testb
inc
sbb
xchg
inc
jne
inc
sbb
movsb
or
inc
xlat
repnz
mov
pop
inc
mov
push
and
inc
xchg
test
or
sbb
push
and
sbb
inc
jl
pop
or
dec
sub
out
rolb
insb
inc
sub
pop
mov
or
dec
inc
add
mov
and
cmp
dec
or
inc
mov
add
xchg
fisubl
out
mov
xchg
inc
push
xchg
xchg
or
and
mov
xchg
sbb
or
inc
add
push
daa
sbbl
and
int3
cmp
mov
popl
pop
test
or
inc
inc
mov
sub
and
inc
pop
test
popl
add
or
sbb
sbb
fldl
jbe
mov
or
das
or
sbb
sub
mov
sbb
testb
iret
test
or
sbb
and
in
inc
inc
mov
test
mov
insb
test
movsb
or
dec
pop
add
outsl
incl
adc
cmp
adc
sbb
adc
lahf
or
xchg
lahf
cli
repnz
mov
mov
cwtl
and
out
insb
dec
sbb
push
fnsave
icebp
sub
decb
sti
adc
and
aad
xor
xor
mov
add
pop
cmp
dec
aad
cmp
cmpb
fs
dec
les
add
pusha
adc
cmp
add
and
inc
pop
into
out
outsb
push
mov
cmp
pop
lods
sbb
inc
or
aad
mov
rcrl
movsl
frstor
xchg
bswap
xchg
aad
movsl
and
addr16
sub
inc
pop
sub
inc
fimuls
inc
out
fistpll
fs
push
mov
andl
add
leave
pop
adc
pop
or
shlb
sbb
insb
imull
js
mov
leave
lods
fs
mov
stos
push
pop
sub
sbb
cmp
or
or
dec
hlt
jl
mov
enter
jne
cmc
and
dec
sub
aaa
or
inc
pushf
das
std
or
or
int3
in
mov
pop
cmpsb
and
sub
xchg
cmc
mov
or
xorb
loop
cmpsb
lahf
push
cmp
call
cmpsb
xchg
or
dec
and
fdivrp
dec
cmp
lahf
jecxz
cmp
sbb
movsl
lea
loopne
sub
mov
test
adc
lahf
int3
aaa
jl
or
adc
mov
std
inc
jge
lahf
mov
jecxz
and
insb
lret
in
xor
stos
push
adc
int
test
hlt
cmpsb
cmp
xor
xlat
std
pop
fstpt
lods
bts
test
shll
cmp
push
mov
test
sbb
insb
pushf
outsb
shrl
icebp
cmp
sbb
sarb
pushf
xchg
stos
cli
pushf
add
stos
sbb
ret
jg
lods
stos
mov
cs
or
xor
js
daa
int
ret
push
push
inc
add
lods
push
stc
loope
add
fnstcw
frstor
mov
or
xor
add
cmp
or
andb
aam
dec
test
mov
test
nop
cld
mov
inc
pop
test
xchg
inc
pop
enter
leave
xchg
mov
jp
mov
pop
mov
repz
dec
inc
mov
mov
add
sub
sbb
or
mov
out
aam
pop
mov
es
mov
inc
adc
mov
pushf
cld
push
xchg
inc
pop
lock
xchg
sub
mov
pusha
fsubl
xchg
inc
leave
mov
sbb
pusha
pop
inc
mov
and
mov
fadd
js
xorb
sub
mov
mov
xchg
inc
cmp
or
inc
push
xchg
jge
adc
repnz
jl
cmp
jp
cmpsl
jge
sub
ffreep
aaa
add
pop
push
adc
ret
insb
mov
cmp
int3
hlt
sbb
outsl
mov
inc
loopne
in
sbb
pop
in
jecxz
js
hlt
clc
in
cld
cmp
movl
add
es
jl
and
lret
add
jmp
in
sub
in
pop
cmp
mov
xchg
sbb
xchg
hlt
sbb
js
mov
sbbb
xchg
mov
mov
in
shlb
loope
js
test
add
xor
hlt
sbb
pop
fsubp
and
repnz
mov
cmp
cmp
dec
jecxz
js
cmp
lods
inc
je
test
mov
iret
in
xchg
cmp
inc
jecxz
int
in
dec
cmp
outsl
mov
dec
sbb
jge
jb
dec
cmp
xchg
cmp
mov
cltd
xchg
cmc
mov
test
sbb
jl
fidivl
cmp
mov
int
outsl
lock
jne
jb
in
clc
fnstcw
lods
shll
add
js
jl
dec
mov
jo
fdivl
cmpsb
stc
add
dec
lods
mov
add
mov
push
cmpb
aas
hlt
mov
and
mov
ror
mov
sbb
push
inc
sbb
mov
mov
std
and
adc
mov
mov
cmpsl
test
inc
or
mov
jnp
in
dec
les
test
push
inc
mov
cmp
or
cmp
or
subb
and
xchg
mov
push
nop
add
fstl
mov
dec
insb
outsb
lahf
cmpsb
sbb
addb
push
rcrb
sbb
and
inc
repnz
out
orb
cld
adc
dec
test
push
mov
leave
rcrb
lahf
cmp
mov
outsl
mov
int
outsl
mov
cmp
push
sub
loopne
xor
add
xor
inc
in
aas
sub
leave
sbb
push
into
sbb
je
adc
je
mov
dec
pop
sbb
mov
mov
inc
pop
dec
roll
inc
out
popf
iret
cmc
inc
lock
or
pushf
outsb
xor
xor
cmpb
pop
mov
gs
jno
das
test
mov
fildll
mov
popf
insl
mov
or
jb
cmp
ret
movsb
jne
or
sub
pop
mov
mov
ljmp
cmp
sub
jne
pop
pop
std
movsl
cmp
xorb
or
xchg
shrl
popf
sbb
cmp
xor
add
inc
fistl
int
clc
test
sbb
fidivrl
xor
lahf
sbb
jecxz
cmc
pusha
cmp
cmp
xor
enter
cmp
fnstsw
dec
push
lcall
xor
dec
push
add
out
mov
sbb
aam
pusha
sub
lahf
inc
sbb
repz
mov
int
orl
pop
rorl
je
pop
inc
add
lahf
xlat
clc
rcll
mov
pop
js
das
adc
test
sub
out
aad
dec
dec
dec
or
mov
xchg
inc
xorb
cmp
and
div
mov
popf
add
aam
and
pop
ja
push
std
and
inc
dec
add
mov
push
data16
sub
cmpb
hlt
pusha
add
adc
cltd
dec
and
mov
ja
imul
shlb
sub
add
fwait
movsb
cltd
sub
mov
pop
sub
idivb
mov
push
out
jl
inc
addr16
insl
sbb
add
inc
bound
or
lahf
imul
xor
adc
sub
sub
inc
adc
push
dec
cli
or
scas
fs
dec
push
mov
repz
adc
in
mov
sbb
dec
pusha
stc
movsl
xchg
inc
push
or
mov
lret
push
mov
pushf
jl
nop
adc
add
js
sub
adc
inc
sbb
xchg
cmp
test
testl
inc
outsl
sub
ja
mov
lea
and
pop
xchg
test
incl
or
sub
and
gs
imul
lahf
xor
or
and
or
dec
dec
jg
xor
ret
cmp
or
xchg
mov
paddusb
jecxz
negl
sub
and
mov
pop
adc
movsl
or
lahf
xchg
nop
jecxz
iret
enter
je
cmpsl
mov
jge
js
ret
test
or
dec
add
in
push
or
mov
xor
and
ds
loopne
sbb
lods
mov
pop
je
movsl
mov
jmp
xchg
xchg
xor
stos
sub
std
ss
fadds
pop
xor
aas
cmp
sbb
int
movsl
push
jbe
or
push
or
mov
jle
lds
mov
xchg
xor
shrl
enter
adc
lahf
sbb
sahf
cld
fmull
out
mov
and
lods
lahf
jge
subb
mov
jecxz
inc
fimull
inc
movb
add
cmp
inc
sahf
sbb
cmp
pop
and
js
cmc
fists
and
mov
push
dec
fwait
pop
or
fistps
or
cmpb
sbb
cld
xchg
and
adcb
dec
fdivrl
jb
jo
adc
inc
dec
cld
mov
adc
insl
andb
mov
in
xchg
nop
cmp
xor
inc
and
lahf
adc
xchg
gs
mov
lock
fldcw
sub
add
inc
and
sub
cmp
mov
xor
mov
out
lahf
sahf
insl
or
cmp
cmp
cmp
aaa
out
or
jl
xor
and
xchg
mov
mov
fbstp
mov
xchg
stos
sarb
inc
cmp
add
pop
ss
pop
test
ret
and
add
int
rorb
jmp
xor
sbb
inc
cmp
iret
adc
jo
std
xor
pushf
mov
or
stos
inc
cmc
idivb
repnz
or
xor
lret
pop
pop
xor
out
mov
in
stos
test
std
xchg
inc
jp
divl
fisubrs
mov
int
test
jns
pop
add
stos
imul
and
sub
shll
or
push
int
cmp
inc
and
stc
pop
dec
sbb
call
fldcw
insb
cmp
adc
les
push
rcrb
out
gs
int
stos
andb
adc
inc
enter
and
add
pushf
cmp
jnp
or
and
add
sub
jno
fs
pop
pop
push
subb
pushf
push
dec
xor
dec
adc
lods
push
and
xor
repz
mov
push
xchg
push
cmp
xchg
ficoml
jmp
mov
cmc
jl
and
cmp
jecxz
jge
add
sbb
mov
or
and
and
jl
int
pop
in
scas
nop
imul
imul
jl
inc
add
pop
jecxz
add
movsl
cs
addl
xor
movsb
fisttpll
sub
mov
and
or
jne
adc
imul
pop
fsubrs
add
sarb
sub
inc
or
sbb
dec
decb
xchg
cmpb
repnz
cmp
loope
push
movswl
jg
cli
out
mov
jl
xchg
mov
fidivrl
sti
xor
mov
and
add
int3
sahf
les
mov
stos
xchg
pushl
leave
aad
jns
mov
xor
ds
in
std
cmpsl
jl
ja
int
aaa
lods
jge
arpl
incb
xor
mov
sbb
push
inc
and
jge
cmp
ja
pop
pop
stos
movsl
xchg
fs
call
popf
rcrb
mov
std
push
shrb
out
push
out
and
ja
cmp
jecxz
xlat
into
jge
add
push
mov
push
lds
adc
adc
cld
sbb
dec
fistps
ret
push
mov
xchg
repnz
js
xor
mov
popa
sub
lods
sub
or
sub
add
mov
or
aad
mov
sbb
sbb
ret
stos
cmpsl
xchg
add
stc
sbb
or
out
cmp
or
pop
jne
dec
andb
iret
mov
add
adc
imul
inc
push
mov
fiadds
jmp
cld
xor
push
faddl
xlat
stos
inc
js
adc
scas
dec
sbb
inc
test
std
pop
int
orb
inc
cwtl
stos
inc
mov
lahf
into
fisttpl
cmp
into
les
jle
mov
jbe
dec
rcrl
jo
into
scas
or
sub
xchg
xor
dec
adc
jg
int
repnz
push
rcll
or
lods
sbb
pushf
xor
add
hlt
sbbb
js
dec
or
cmpsb
add
test
test
xor
add
dec
jl
and
lahf
movsb
sub
aaa
xor
xchg
fwait
adc
movsl
adc
sub
pop
cmpsb
and
jecxz
add
push
fistps
testb
out
and
psrlw
pusha
int3
dec
or
xor
pop
and
pop
pop
imul
fadd
lcall
xor
fnstcw
nop
mov
popf
add
int3
push
aaa
cwtl
ret
mov
mov
sahf
cmp
scas
insb
jl
sub
mov
mov
ret
js
call
pop
dec
mov
dec
or
sbb
lea
pop
jmp
cli
jl
or
cwtl
jl,pn
cld
pop
popa
mov
inc
sbb
pop
pushf
out
cmpsl
mov
test
sbb
pop
mov
jnp
or
inc
out
jmp
popa
bound
testb
mov
std
cmp
pop
es
lea
inc
insb
cmp
fnstsw
scas
push
push
jmp
xlat
es
dec
xorb
add
pop
sbb
or
push
mov
xchg
xor
push
fildl
xchg
add
add
pusha
in
add
jbe
add
cmc
and
mov
int3
or
mov
ja
sub
int3
xor
jbe
xor
mov
adc
push
or
jb
loope
mov
xchg
mov
mov
repz
clc
dec
outsl
jmp
xchg
sub
mov
and
ret
xor
or
xchg
xchg
loop
cmp
pop
jmp
lcall
filds
jecxz
shl
mov
test
pop
stos
mov
mov
push
jl
dec
les
xor
mov
out
push
pcmpeqw
jge
fsubl
add
in
jecxz
int
movsb
mov
lea
das
sub
ret
add
stos
dec
int3
out
jo
addr16
adc
std
stos
aam
dec
test
adc
dec
rorl
pop
cmp
fistps
and
or
test
mov
pop
xlat
loope
xor
addl
inc
sub
roll
or
push
cwtl
add
add
jecxz
rolb
cwtl
push
sub
or
mov
cmp
pop
sbb
decb
sbbl
int
dec
shl
mov
sbb
jecxz
in
add
pop
cmp
push
xchg
lds
fcomi
inc
push
mov
fs
rolb
jle
pusha
add
cmp
lea
popa
aad
sbb
pop
sbb
xor
pusha
aas
jo
inc
daa
subps
push
mov
adc
dec
fs
pop
scas
jno
loopne
pushf
stos
fisubs
rcll
stc
repnz
das
insb
mov
jle
hlt
pop
sarl
cwtl
push
stc
fsubl
repnz
clc
test
mov
pusha
negb
loope
rorl
or
mov
mov
or
lods
inc
pmullw
inc
mov
mov
jb
fidivrl
cmp
sbb
push
add
add
mov
xor
andl
push
dec
subb
cmp
out
pusha
test
fimull
inc
cmp
jp
je
inc
push
cmpsb
repz
test
mov
mov
call
cld
pop
loope
xchg
insb
mov
or
add
imul
dec
pushf
int
or
xor
mov
xchg
in
inc
mov
jns
je
lret
rorl
sub
mov
jl
xor
adc
push
sub
jmp
dec
sub
and
or
sub
xchg
adc
subb
or
mov
and
jne
in
adc
dec
lahf
test
icebp
jo
xor
cmp
pusha
pop
icebp
xor
xchg
scas
cmc
xchg
push
mov
add
mov
push
jl
mov
and
add
insl
xchg
call
mov
add
daa
dec
sbb
jg
es
stc
shr
ljmp
jne
sarl
mov
or
fyl2x
mov
jecxz
loopne
sbb
jo
or
int
dec
pop
fdivr
fisubrs
dec
add
or
mov
mov
cmp
out
clc
mov
and
xchg
pop
ljmp
ss
in
sbb
stos
sub
push
cwtl
dec
ret
fwait
test
pop
inc
sub
lds
pop
lods
pop
push
dec
cmp
jge
lcall
mov
sub
cltd
sub
add
pop
daa
pop
ljmp
add
jl
cmp
pop
ret
call
jb
adc
hlt
or
cmp
sbb
xor
pop
and
jl
xchg
std
sub
cmp
daa
lods
repz
add
or
jg
sbb
gs
inc
addb
rol
call
cld
cmp
push
jae,pt
test
jecxz
dec
add
pop
add
ja
xor
pusha
xchg
and
cmc
jmp
pop
add
lea
dec
test
jl
in
push
add
sbb
and
jg
cmp
lcall
packsswb
movsl
iret
adc
cmp
xor
sbb
test
lds
or
push
movsb
add
int
sub
push
adc
xorb
inc
cmpsb
pushf
mov
inc
sbb
in
insb
and
adc
adc
jo
or
adc
jno
pusha
fmuls
sbb
and
pusha
cmpsb
fsubs
test
inc
in
xchg
and
pop
xchg
add
add
cli
and
test
adc
inc
test
subl
sub
das
and
inc
or
jmp
in
mov
sub
sbb
push
push
inc
and
add
cld
fs
push
ret
mov
pusha
mov
inc
mov
mov
sarl
loopne
fninit
movsb
stos
lret
add
test
loope
add
lcall
jl
mov
stos
rcll
lods
fldl2t
idivb
jnp
cmp
cmp
out
mov
test
inc
pusha
addl
xchg
faddl
jne
mov
or
fs
pop
jne
or
daa
shrb
push
gs
stos
mov
in
fsubl
adc
jp
test
mov
mov
pop
sub
jle
rcll
sbb
mov
mov
inc
mov
pop
or
pop
call
lea
loopne
push
rcrl
push
mov
ds
nop
pop
xchg
mov
test
lods
mov
imul
mov
mov
loopne
add
sbb
xchg
mov
dec
sbb
push
sbb
nop
aas
and
push
pop
pop
or
lods
add
imul
mov
and
dec
cmp
sbb
mov
int
adc
out
inc
mov
cld
pop
sahf
hlt
cld
xor
fwait
test
leave
sub
jl
jp,pn
push
sub
xchg
flds
dec
daa
inc
push
cld
test
lds
pop
mov
push
sub
jp
sub
cwtl
sbb
or
daa
movsb
out
jbe
dec
rcrl
fmull
ljmp
fiadds
sti
cld
inc
mov
mov
or
inc
inc
mov
shll
adcb
arpl
xlat
push
sbb
inc
mov
mov
in
jno
jne
or
pop
mov
popf
call
and
stos
data16
aad
in
sub
or
add
add
data16
loop
and
mov
das
jno
pop
movsl
xchg
and
or
pop
outsl
das
mov
jl
in
nop
mov
test
in
jo
testl
adc
xchg
dec
add
daa
inc
or
xor
lds
out
rcll
popf
nop
stos
test
and
ja
insl
sbb
mov
icebp
pop
push
int
add
push
and
cmp
lods
push
int
rorl
pop
or
pop
data16
out
fdivl
ljmp
xor
dec
adc
lea
lods
cmp
popf
ret
mov
mov
sub
push
push
mov
in
add
mov
adc
int
pop
and
dec
loopne
mov
aas
mov
mov
inc
fs
xchg
mov
sbb
or
cwtl
fistpl
jns
ffree
xchg
sbb
pop
sbb
mov
push
outsb
mov
sub
and
mov
ret
fidivrs
aaa
or
insl
add
jl
adc
add
or
call
add
fs
adc
loop
cmp
sbb
hlt
add
add
cmp
push
lods
mov
imul
sub
sbb
push
cmp
test
or
push
push
std
shll
sub
mov
mov
sbb
inc
lock
xchg
test
aaa
mov
icebp
mov
push
loop
jl
std
inc
or
lea
jle
scas
add
xor
add
insl
call
int
push
in
jecxz
movsb
fwait
daa
enter
cld
sbb
rclb
daa
lret
xchg
repnz
loopne
outsb
ret
mov
jbe
sub
int3
call
jb
pushf
xor
pusha
or
push
xor
aas
stos
sub
pop
sub
rcll
sbb
xor
mov
xchg
add
inc
in
add
and
out
pushf
sbb
adc
sarl
xor
adc
push
cmp
mov
or
pusha
pop
call
sub
ret
sahf
jb
lods
mov
adc
cmp
xor
and
sub
and
or
sbb
mov
add
sub
xor
add
imul
xlat
xor
dec
jne
adc
dec
xor
xorb
pop
mov
pop
adc
loop
negb
nop
add
iret
lahf
test
shrb
xor
inc
cwtl
fisubs
add
lods
dec
lds
sbb
adc
xchg
pop
jmp
rdpmc
pop
inc
iret
jg
or
lahf
push
mov
loop
orb
inc
adcl
popa
xor
jg
stos
xchg
into
cmp
clc
outsl
lds
idivb
arpl
lret
xchg
mov
scas
jo
outsl
mov
iret
jg
add
test
pop
cmc
je
add
mul
inc
xchg
mov
and
les
or
xchg
push
inc
xchg
stos
in
in
pop
lcall
mov
sub
pop
xchg
aaa
js
insb
lcall
cltd
dec
in
inc
psubsb
std
call
sbb
mov
mov
movb
pop
pop
cmp
fbstp
mov
pop
dec
cmp
popa
pop
inc
lahf
push
push
dec
sbb
mov
push
or
clc
jecxz
add
lahf
leave
mov
dec
xchg
xchg
push
dec
xor
roll
jbe
int3
test
enter
data16
imul
cli
or
fists
cld
data16
aas
pop
cwtl
mov
addr16
pop
sti
push
xchg
sub
shl
aad
lcall
aam
popf
loope
jl
or
int
jb
sub
inc
sbb
jmp
enter
dec
test
fildll
lods
sbb
cltd
push
push
and
sbb
mov
int
mov
punpcklwd
sti
push
dec
jb
fimull
test
mov
pop
stos
and
bound
jg
sub
add
fiadds
mov
popf
xor
std
stos
add
mov
popa
test
dec
jb
inc
in
movsb
mov
adc
jle
in
roll
enter
and
adc
stos
jle
call
or
adc
pop
iret
setne
loopne
inc
outsb
and
or
int3
mov
enter
cld
mov
out
stos
jle
lret
cmp
push
sub
dec
mov
jecxz
adc
or
xchg
lods
mov
and
xor
sbb
xor
popf
fcoml
movsb
inc
inc
sahf
dec
dec
jae
int3
pop
ret
in
xchg
fcoml
xor
pop
push
jle
jne
sub
outsl
mov
cmp
mov
or
cmp
inc
jl
pop
outsl
cmp
insl
inc
adc
outsb
test
dec
xchg
cld
dec
sbb
and
or
ds
pop
cmc
sbb
roll
jge
lahf
mov
lods
aaa
dec
push
insb
add
cld
mov
addb
xorl
insl
push
lahf
pop
mov
xchg
lds
push
adc
or
xor
pop
inc
push
dec
pop
cmp
imul
or
push
push
std
mov
mov
push
in
mov
add
xchg
std
movsl
dec
or
mov
mov
jbe
mov
adc
adc
mov
jmp
sti
push
adc
sbb
xor
sub
shrl
cmp
cmp
mov
aas
incl
int
xlat
jbe
les
mov
pop
sbb
leave
jo
mov
cmp
pop
stos
sbb
lahf
jb
pop
push
hlt
jecxz
push
sub
addb
add
orl
sub
fstpt
pop
ret
push
push
sub
andb
adc
pop
cmpsb
mov
lret
pushf
faddl
xor
in
notl
jns
xchg
mov
enter
sbb
pushf
xor
rcrb
inc
testb
pushf
scas
and
xchg
dec
inc
call
mov
mov
clc
insl
addr16
or
sbb
xlat
mov
push
mov
inc
movsl
add
jp
mov
mov
xor
sbb
or
iretw
daa
jbe
push
adcb
popf
dec
adc
xchg
ja
enter
and
pop
cmp
into
fdivrp
ljmp
pop
push
mov
int
mov
mov
inc
add
and
xlat
into
mov
cld
add
pop
pop
dec
das
loope
push
add
pop
test
test
add
mov
pop
stos
mov
sbb
nop
stos
outsb
adc
iret
adc
mov
add
nop
mov
cld
sbb
bound
in
dec
mov
cmp
adc
iret
xor
lret
insb
xchg
push
clc
rorl
in
cmp
pop
jnp
push
push
mov
pop
addb
inc
cmpsl
clc
fiadds
testl
inc
pop
arpl
cwtl
cmp
das
imul
mov
jo
xlat
test
sub
mov
push
cmp
cmpsb
pop
mov
out
sarb
and
mov
cmpsb
icebp
mov
int
movsl
add
cmp
mov
andb
stos
mov
xor
pop
aas
or
jno
sbb
xor
xchg
sti
adc
or
mov
inc
inc
mov
pop
push
insl
pop
or
or
stos
sub
xlat
add
int3
clc
push
pop
mov
push
and
pusha
sub
inc
stos
or
jl
ficoms
cld
fiaddl
shl
cs
iret
sbb
out
jns
pusha
add
movsb
add
inc
push
sti
cmp
sbb
mov
jecxz
mov
xor
in
fbstp
and
popf
jg
dec
shl
popa
pop
icebp
mov
jl
mov
push
nop
mov
cli
dec
sub
push
dec
lret
inc
lahf
lcall
les
ret
rcrb
pop
fadds
xchg
cmp
add
in
and
push
and
arpl
orb
scas
dec
jns
dec
ds
push
mov
shl
sub
aad
std
push
inc
pop
cmp
sub
aam
push
scas
jns
mov
xchg
mov
data16
dec
jae
push
pop
inc
enter
xchg
fsubs
mov
mov
mov
inc
in
pop
add
and
fucomip
cli
mov
ljmp
out
cmc
nop
inc
push
cmpsl
xor
xchg
pop
call
xchg
mov
jg
out
mov
sub
xor
les
push
cs
xor
aas
stos
dec
lcall
mov
mov
jbe
push
sbb
fldl
sbb
or
xor
mov
jg
xlat
inc
lods
pop
shll
fidivrl
xor
lahf
sbb
push
dec
and
add
popw
mov
jle
cmp
pop
jb
loopne
push
stos
rcll
lahf
int3
cmp
jmp
mov
mov
jl
inc
call
lods
hlt
jns
add
test
sbb
add
js
icebp
sbb
sbbb
xor
pop
sbb
call
nop
dec
inc
lods
std
push
icebp
out
mov
pushf
mov
add
scas
gs
lcall
inc
fsubrl
adc
dec
and
das
inc
decl
sub
push
xlat
pop
add
shll
cmp
shll
into
jmp
add
or
pop
int
xorb
scas
or
sub
and
xchg
inc
mov
cmpsb
imul
add
and
add
cwtl
mov
in
or
add
add
push
cmp
lods
mov
push
pop
xchg
mov
aaa
mov
mov
aas
mov
add
lahf
pop
ljmp
and
fildll
fnstenv
xchg
cmp
xor
cli
sub
sub
fcompl
inc
cmp
push
jne
jg
loopne
hlt
jp
xor
call
lods
xor
int
inc
pop
cmp
loope
sbb
or
mov
out
cmp
mov
pop
or
mov
out
daa
jl
mov
jns
push
xor
dec
sti
mov
dec
ret
je
or
mov
inc
mov
xlat
pop
mov
pop
mov
inc
or
bound
iret
movsb
and
cs
adc
add
add
push
push
adc
or
rorl
mov
pop
gs
pop
cmpsb
fnsave
leave
jne
stc
xor
cmc
outsb
mov
lret
dec
aad
out
aam
pop
and
pop
xor
sbb
scas
stos
or
into
aad
xchg
call
mov
push
mov
cmp
pop
lahf
xor
sbb
xor
mov
inc
dec
fisubrs
push
std
add
mov
xor
add
sahf
in
data16
mov
rorl
sub
mov
lahf
inc
push
insb
and
aad
cmp
neg
jnp
xor
adc
mov
hlt
mov
and
xchg
dec
jp
outsb
fisttpll
inc
sbb
lret
or
adc
ljmp
mov
pop
pusha
mov
jo,pt
mov
lods
int
imul
scas
dec
inc
mov
les
or
es
loope
and
outsl
fldt
push
pop
and
pop
cmp
jl
add
mov
jbe
push
jl
jne
lods
push
pop
add
and
mov
mov
cltd
pop
and
push
inc
enter
xchg
xchg
addl
add
and
mov
pusha
cltd
cmp
dec
outsb
lahf
test
jle
std
adc
out
mov
out
cs
or
inc
mov
nop
sbb
inc
lcall
adc
lcall
mov
or
sbb
jo
cmc
inc
mov
pop
popa
pusha
mov
add
loopne
and
xchg
imul
mov
push
int3
lcall
inc
int3
pop
and
cld
je
mov
mov
add
sbb
in
in
sbb
test
fldcw
lahf
adc
rcrb
push
xchg
cmp
je
dec
fisubs
and
std
idivb
ret
jmp
dec
out
xchg
test
lock
or
adc
in
loopne
imul
xchg
mov
cld
test
fsubs
pminsw
popa
fisttps
pusha
cmp
es
xchg
mov
mov
pop
cld
pop
mov
or
jmp
mov
push
or
jb
fldln2
test
xchg
and
insb
lcall
test
cmc
insb
fs
mov
sub
pop
out
adc
dec
inc
push
mov
or
popf
mov
in
and
mov
cmp
mov
dec
sub
call
push
in
shrb
jp
add
xchg
mov
sbb
cmpsl
adc
adc
push
pop
push
mov
movsl
or
out
imulb
aam
pushf
adc
nop
or
mov
jge
fsub
add
inc
or
and
adc
roll
xor
or
ds
shlb
xor
sbb
int
mov
pop
adc
in
pop
push
cld
in
popf
or
mov
adc
add
add
xchg
lcall
or
cs
sbb
xor
sbb
adc
sar
push
adc
push
and
cli
adc
subb
or
pusha
and
insb
jg
dec
jae
xor
pop
repz
xchg
mov
adc
jl
cld
mov
cld
push
push
std
repz
test
sbb
sub
sub
mov
mov
int3
in
sub
adc
jl
lahf
mov
popa
push
and
pop
lahf
cmc
add
mov
mov
fisubrl
pusha
sub
in
pop
push
inc
cld
inc
cmpsb
push
cld
dec
pop
push
xchg
push
and
cmp
or
clc
and
icebp
inc
xchg
sub
xchg
aad
sbb
or
add
loop
inc
clc
sbb
xor
adcl
xlat
add
fsubrs
sub
movsl
pop
pop
rcll
adc
pop
sbb
pop
popf
and
or
dec
cmp
dec
and
enter
aas
pop
outsb
aaa
ljmp
or
mov
jbe
jne
shll
filds
jb
test
out
subb
sub
push
popa
pop
and
insl
test
inc
lahf
jecxz
inc
pop
in
sbb
mov
les
inc
dec
mov
in
stos
xchg
mov
sbb
xchg
pusha
pop
pushf
mov
fidivl
jo
stos
jb
adc
mov
out
loope
inc
into
ss
sbb
pop
dec
pop
mov
pushf
cmpsl
add
mov
lds
pushf
xor
xchg
xor
shr
mov
les
lahf
adc
dec
xor
mov
lahf
test
mov
mov
popa
outsl
je
add
dec
fs
or
repnz
cmpsb
add
or
and
ret
leave
js
das
subl
pushf
xor
adc
and
nop
and
jecxz
in
xchg
loopne
cli
sahf
dec
cwtl
ja
mov
push
cmpsb
sub
sbb
jnp
sbb
jmp
xchg
xchg
imul
notl
ss
mov
sub
add
mov
dec
sti
fdivs
ss
sbb
pop
inc
clc
out
sub
popf
lahf
pop
mov
fiadds
or
push
jns
nop
roll
add
ja
lahf
mov
int
sbbl
test
inc
jle
adc
test
add
mov
out
orl
test
lds
jle
pushf
adc
inc
ljmp
dec
jg
lahf
pushf
cmpsb
in
or
cld
enter
aam
adc
lods
popf
les
fisttpl
or
movsl
in
lret
popa
and
std
dec
dec
dec
dec
daa
decl
mov
fimuls
sub
pop
mov
cmpsl
inc
ds
xor
inc
imul
push
adc
and
mov
std
movsl
shlb
lods
xor
test
and
sub
roll
xchg
cmp
ss
push
call
stc
or
cld
jecxz
insl
cmpsb
cwtl
lock
std
xchg
xor
mov
idivl
jecxz
pop
xor
adc
cmp
ja
mov
or
push
cmc
sub
addb
sarl
in
enter
das
pop
lea
les
insb
sub
test
sbb
fs
cld
stos
or
negl
push
shl
dec
mov
cmc
sbb
push
jmp
lea
xor
inc
jne,pn
sub
xchg
std
and
adc
xor
mov
add
aaa
sub
and
lock
mov
dec
and
mov
inc
movsb
or
sarb
xor
daa
gs
and
mov
in
sti
fldcw
dec
lahf
test
lock
xor
int
aas
cld
push
push
imul
dec
adc
xor
sub
stos
mov
inc
dec
pusha
ja
pushf
mov
inc
aaa
mov
out
movsl
and
int
stos
cmpsl
push
add
adc
into
nop
or
cmp
cmpsb
enter
sub
lock
pop
push
sbbb
cmc
sbb
pop
stc
cmp
out
sub
je
cmp
pushf
mov
imul
test
and
ds
mov
inc
stos
push
sub
push
mov
jns
sub
push
or
pop
ret
sbb
or
push
mov
mov
jmp
push
leave
add
or
inc
rorb
stos
sub
loope
push
add
std
and
mov
movsb
jae
movsb
pop
call
xlat
iret
arpl
mov
pop
lds
and
sub
mov
xor
sub
das
sbb
xlat
and
sarl
dec
test
dec
scas
push
sub
loop
shll
adc
in
and
pop
push
mov
cli
orl
mov
shrl
stos
scas
cmpsb
es
in
sahf
dec
roll
dec
add
dec
pop
or
pop
sub
stos
scas
pop
arpl
data16
fcompl
inc
outsb
push
iret
and
adc
add
mov
push
sub
xor
and
xor
and
lcall
xor
push
inc
mov
clc
mov
out
push
sub
popa
ja
mov
scas
mov
cmp
push
sbb
aad
dec
aas
sub
popa
and
xor
pop
or
dec
lret
mov
in
xor
int
add
inc
add
popa
add
stc
nop
xor
inc
inc
sbbl
sbb
inc
lcall
mov
xor
dec
nop
mov
lahf
lds
negb
pop
and
iret
sub
int3
lahf
inc
loopne
mov
pop
je
scas
sub
mov
es
in
push
gs
dec
xlat
mov
cmpsb
frstor
cld
pop
in
push
cld
insb
std
push
cld
jl
and
call
and
subb
xor
xor
out
adc
or
movsb
insb
cmp
or
in
aas
sar
sub
or
cmp
fmull
sub
or
orb
pop
fiadds
ds
orb
push
push
sbb
faddl
ljmp
pop
pop
cmp
add
call
jecxz
movsb
pushf
xor
and
jnp
sarl
int3
sbb
or
dec
jns
xor
xchg
cmpsl
push
mov
sbb
dec
sahf
enter
outsb
push
adc
xchg
std
and
xor
push
loope
mov
mov
jns
mov
mov
mov
lods
fsubrl
int
dec
mov
pop
mov
adc
xor
or
pop
lea
popf
add
xor
dec
sbb
cmp
pushf
cmp
pop
fisttps
popf
add
xor
or
insb
sbb
sbb
pop
push
orb
sub
adc
sbb
sub
or
jge
rorb
and
xchg
loopne
mov
cmp
xchg
ss
and
push
lds
dec
lea
and
dec
stos
nop
or
setae
sbb
pop
into
std
les
push
sub
pusha
bound
jl
cmpl
jns
and
and
stc
mov
mov
dec
and
inc
mov
add
push
xor
xchg
rcrb
lods
pop
xor
cli
in
les
test
shll
jl
icebp
cmp
sub
add
rcrb
gs
and
xchg
mov
shll
xchg
fcmovnb
sub
cld
jl
imul
test
lods
mov
jle
add
mov
mov
pop
cli
les
pop
adc
cmp
jl
cld
pushf
faddl
cld
add
sbb
stos
insb
or
lods
xor
pop
arpl
shrl
mov
cmp
adc
cmp
add
jae
jge
push
add
cmc
and
push
jmp
nop
push
lds
call
sub
das
adcl
fwait
test
fstpl
mov
int
stos
in
in
sbb
xor
nop
mov
jmp
cmp
jne
lcall
or
xor
adc
cmp
xor
sub
fdivrp
fnstcw
mov
push
sbb
or
jl
xchg
inc
jp
xchg
jl
insb
adc
mov
in
sbb
pop
mov
jmp
loopne
mov
les
dec
add
pop
loop
xor
or
jne
enter
pop
or
fldcw
cs
lret
sub
push
cld
pop
mov
xchg
sahf
into
clc
pop
pop
xchg
jge
call
ds
pop
pop
bnd
mov
ss
adc
pop
add
adc
out
ss
pcmpeqw
out
stc
adcb
sarb
loope
ds
lahf
scas
scas
fdivrl
mov
adc
repz
push
jns
add
fwait
orl
fldl
lahf
add
sahf
add
and
cmp
sbb
stos
sub
mov
int
cmp
sub
or
rcrl
xchg
xchg
mov
sahf
es
xor
mov
pop
ret
jmp
insb
xchg
sub
add
in
add
cwtl
std
xchg
add
lods
mov
mov
sub
pop
xchg
sub
ljmp
stos
pop
cltd
xor
xchg
cmpb
mov
fnstsw
fadds
push
popa
ficomps
push
cld
jmp
and
insb
popa
adc
call
cmp
jae
test
or
loop
jp
ja
push
inc
out
mov
pop
loope
jle
jecxz
ja
add
mov
test
lods
jle
mov
cld
mov
adc
sub
cld
jge
fdivs
adc
hlt
dec
adc
cs
push
push
cmp
mov
add
jmp
shl
add
push
xlat
nop
add
pushf
push
ds
cmp
pop
sub
movsl
mov
dec
sarl
and
cmp
ret
mov
cld
and
or
mov
insl
add
mov
add
mov
aad
jno
jg
sbbl
call
adc
inc
and
cmp
xor
jnp
mov
addr16
push
inc
mov
sub
xor
jl
mov
push
adc
leave
dec
cmp
mov
or
sub
xchg
call
sbbb
xchg
or
cmp
and
jo
inc
mov
mov
ret
xchg
ljmp
lock
adc
adc
pop
fldenv
xor
iret
lods
stos
or
cld
cmp
adc
and
adc
xchg
sub
push
ret
hlt
test
cli
fstps
sbbl
mov
or
inc
cmp
sahf
jp
std
and
cmp
sbb
lea
xorl
cmp
jl
loopne
rcrb
push
setno
or
cmp
xor
ds
sbb
and
push
cmp
cld
and
mov
imul
push
into
push
lret
push
fldenv
std
sub
mov
pushf
mov
or
subl
fnsave
pop
add
add
out
int
popa
cmp
dec
or
enter
mov
mov
popf
mov
rcr
in
es
adc
fdivrl
and
dec
push
data16
jge
and
int
xor
mov
xorb
mov
sbb
leave
iret
pushf
sbb
or
adc
iret
push
push
mov
test
ss
movsb
test
and
xor
lahf
adc
dec
xor
les
sbb
cmp
and
arpl
adc
mov
cmp
push
sub
push
cld
sahf
test
pop
sub
fbstp
aas
rcrb
insl
or
std
rcrb
push
cmp
cld
push
sbb
cld
push
mov
mov
jo
jbe
lahf
xchg
mov
adc
jbe
add
adc
pusha
lahf
xor
out
sbb
outsb
sbb
adc
sub
sub
add
inc
lahf
cld
call
out
sarl
cli
xchg
xor
jge
hlt
in
pop
mov
mov
xor
icebp
adc
cmp
cmc
fs
sbbb
cwtl
sbb
mov
mov
adc
dec
idivl
adc
sbb
push
jl
mov
inc
sbb
inc
jnp
pop
push
mov
xchg
push
loopne
sti
aas
std
out
mov
in
fwait
rsm
mov
and
sbb
jae
in
sar
roll
and
mov
fisubrl
sbb
or
cmp
ffreep
and
inc
dec
mov
lock
out
mov
es
cwtl
loopne
jne
or
lea
in
hlt
sub
sbb
movsl
xchg
jecxz
pop
xchg
or
push
bound
ret
movsb
xchg
sahf
mov
push
xchg
test
leave
out
mov
or
adc
mov
rcrl
movsb
sub
xor
cmp
cmpsb
sub
aad
cmp
int3
xchg
pushf
or
and
push
ret
out
cmp
outsb
pop
sbb
add
out
ds
xlat
std
or
xchg
sbb
lock
fistpl
sbb
rcll
sahf
and
movsb
rorl
or
cmp
negl
jnp
test
mov
subb
push
xchg
loopne
cld
cmpl
pusha
rcll
jl
inc
dec
idivb
xchg
fmull
and
mov
fwait
and
out
enter
stc
movsl
and
pop
dec
sbb
fwait
dec
pop
jg
scas
pop
adc
pop
iret
scas
mov
pop
sbb
ljmp
xchg
in
add
stos
lret
sbb
adc
cmp
icebp
xor
cmc
es
iret
cmp
inc
fbld
xchg
cld
lahf
paddusb
adc
inc
bound
sete
in
idivb
fldl
jg
adc
loope
cmp
or
jno
mov
lahf
push
aas
aad
out
out
xchg
xchg
stos
shrl
sub
add
popa
jo
andb
or
ja
mov
mov
xchg
xor
inc
push
dec
dec
repnz
jo
mov
int
cmp
repnz
pop
push
std
out
popf
pop
jmp
fiaddl
call
lods
cmc
rol
cmp
popf
jge
out
push
call
push
int
popf
jb
inc
lods
cmpsl
ret
and
jo
or
cmpb
dec
pop
pop
lea
mov
stc
iret
stos
sub
jno
xor
inc
dec
dec
fs
mov
cmp
push
pop
cli
fisubrs
xchg
sbb
sbb
pop
mov
das
adc
int3
out
jbe
and
mov
scas
dec
gs
sub
mov
int3
mov
outsl
pusha
sbb
dec
mov
dec
cs
hlt
jno
adc
icebp
fucomip
test
scas
jae
imul
pop
mov
es
iret
and
cli
lret
xor
add
aas
gs
push
or
add
jne
int3
int3
dec
jo
xor
dec
adcl
push
sub
add
or
or
les
aas
pop
aas
loop
or
out
inc
hlt
mov
rcrb
inc
das
add
ds
adc
pushl
movsl
or
push
nop
cmp
out
add
xchg
inc
movsl
adc
cmp
inc
cltd
dec
adc
pushf
mov
fadd
inc
xchg
lods
pop
cmp
or
mov
je
dec
cmp
mov
sbb
cmp
pop
daa
insb
rcrb
push
addr16
mov
rclb
xchg
ja
xlat
int3
and
jl
mov
jge
enter
mov
pop
add
xlat
in
push
pop
lcall
jae
add
xor
push
test
sub
push
or
and
out
pop
imull
mov
cmp
or
pandn
lods
add
xchg
add
movsl
js
sub
push
out
jl
stos
negb
xchg
mov
repnz
inc
or
sub
in
lock
icebp
imul
push
inc
sahf
mov
pop
sub
out
inc
dec
dec
repnz
data16
inc
fsts
inc
test
cmp
jae
gs
adc
push
or
xchg
or
out
jge
jmp
adc
sbb
mov
cmpsb
sub
push
fimuls
cmpsb
push
sbb
dec
pop
jge
push
lahf
shrl
call
cmp
push
push
repz
outsl
ss
call
sbb
fildl
add
sub
and
dec
xor
fildl
push
test
cmp
inc
sub
movsl
push
pop
in
insb
pop
mov
mov
push
fisubs
roll
pop
fiaddl
adc
and
or
notb
pop
scas
push
sub
pop
or
mov
jnp
jg
out
mov
sub
imul
push
outsl
loopne
aas
sahf
pusha
jmp
add
cmp
or
data16
add
cmp
mov
inc
call
and
icebp
add
and
add
jecxz,pn
adc
inc
add
out
mov
into
push
hlt
add
push
jmp
xor
push
mov
jo
fldt
inc
xor
std
fdivp
dec
mov
and
sbb
mov
loopne
or
and
adc
lret
stos
clc
cwtl
mov
in
sub
bound
aam
dec
add
stos
sub
push
popa
int
pop
adc
add
sbb
icebp
mov
jnp
lds
test
popf
xchg
cmc
lahf
je
int3
push
insb
sahf
mov
aam
int3
sub
cmp
adc
sbb
push
jle
jle
xor
fists
cmp
sbb
out
test
lret
stos
adc
inc
daa
mov
push
sub
cmp
inc
cmp
arpl
sarb
out
mov
icebp
les
stos
nop
mov
cmp
lahf
or
xlat
sbb
sbb
scas
scas
sbb
pop
push
aas
clc
xor
in
jecxz
and
mov
test
cld
adc
and
adc
pop
push
inc
ds
or
inc
xor
iret
or
std
jl
add
ret
dec
call
and
sub
outsl
lahf
adc
and
or
jne
int
sub
adc
dec
mov
xchg
outsl
fimull
or
cmp
mov
xchg
mov
mov
inc
xlat
cld
je
in
fstpl
jmp
daa
insl
stc
mov
xor
dec
testb
jecxz
mov
or
loopne
dec
xchg
and
push
add
mov
cld
bound
jbe
dec
std
call
xor
adc
pop
cmp
xor
repnz
inc
mov
mov
jl
push
or
fists
outsl
dec
pop
and
stos
and
mov
lret
or
xor
adc
sbb
jge
dec
or
sub
pop
in
fs
push
adc
enter
stc
adc
xchg
or
aad
mov
sbb
jle
shll
stos
sbb
push
pop
mov
push
mov
js
lea
mov
inc
pop
add
jl
dec
andb
or
dec
call
or
mov
ljmp
aas
dec
push
lahf
test
jns
mov
ret
xchg
dec
pop
das
push
bound
dec
cmp
or
cmp
dec
and
or
in
loopne
sub
sbb
mull
enter
pop
pop
addl
shrl
pop
xchg
call
mov
dec
inc
inc
xchg
xlat
cmp
scas
pushf
or
or
int
stos
cld
push
lahf
inc
repz
inc
out
ljmp
inc
daa
out
jne
and
pop
aas
std
mov
push
movsb
sahf
sub
cmp
add
mov
enter
jno
mov
mov
cmp
push
gs
cmpsb
xor
and
fmuls
jg
add
movsl
xchg
mov
cwtl
mov
and
push
dec
push
sbb
jnp
in
dec
sbb
data16
pop
and
push
inc
dec
dec
sub
sbb
sub
ds
sbb
ds
gs
push
rolb
popf
std
aaa
dec
or
xchg
js,pt
xor
dec
adc
mov
or
push
push
scas
mov
stc
push
cmp
cmp
aas
cwtl
cmp
cs
ja
test
or
mov
or
fwait
hlt
das
popf
je
lods
loopne
test
dec
push
dec
sub
push
nop
sbb
call
dec
test
stos
xor
pop
daa
daa
sub
loopne
leave
push
or
aas
mov
or
je
jg
addl
les
pop
filds
cmc
adc
and
mov
subl
cmp
xor
jmp
stc
inc
loopne
mov
test
iret
das
lods
mov
cs
into
push
adc
push
sbb
scas
xor
adc
out
xor
xor
dec
inc
subb
enter
jl
mov
stos
mov
dec
stos
iret
leave
and
xlat
jne
nop
out
aad
out
fs
mov
xlat
pop
sub
pop
les
ja
mov
dec
cwtl
mov
mov
dec
adc
mov
pop
movsl
jo
or
push
sbb
or
aas
shrb
cld
mov
ret
jge
or
stc
clc
adc
adc
xor
fcomps
add
xchg
call
xchg
push
inc
in
or
mulb
bound
mov
aad
or
daa
ja
mov
sub
adc
movsl
inc
push
inc
out
lea
cld
xchg
lds
or
fnsave
aam
xor
sub
cld
adc
lret
scas
fs
movsb
out
mov
or
inc
push
dec
popf
insb
mov
push
push
mov
add
add
decb
cmp
mov
jecxz
test
int
and
pushl
jno
sbb
pop
loope
mov
jbe
pop
dec
xchg
xchg
mov
dec
sub
pop
jae
dec
and
sub
jne
rorl
and
leave
cld
mov
mov
notl
dec
scas
sub
and
cmpsl
sub
or
mov
bound
adc
sub
push
mov
sub
inc
movsb
popf
push
inc
std
aas
lahf
iret
inc
cli
fisubrs
and
sbbb
sub
jmp
xchg
cmp
outsb
neg
les
push
xor
and
or
or
adc
int3
inc
shld
push
dec
xor
add
in
scas
cli
pop
hlt
xor
add
cs
lcall
and
xor
das
sbb
dec
sbb
xor
and
and
inc
sub
add
cmp
push
dec
pusha
sbb
adc
sbb
xchg
or
daa
out
les
or
repnz
mov
mov
mov
and
jo
mov
and
fidivrl
add
dec
mov
and
lods
aas
jle
mov
out
dec
pushf
out
pop
insb
test
push
mov
mov
push
les
sahf
mov
jmp
sub
aaa
pop
pop
daa
push
and
mov
lret
xchg
int
cmpl
nop
sbbb
pushf
mov
mov
pusha
xor
mov
push
movsl
or
dec
mov
gs
arpl
int
out
add
sub
repz
push
bound
xchg
or
cmp
andb
popa
cmp
sub
dec
arpl
fisubl
stos
lods
cwtl
dec
imul
add
lcall
cmp
xor
lods
sbb
dec
lcall
jbe
or
negl
jno
cmc
lods
dec
jae
jnp
add
fs
push
mov
xor
jg
mov
adc
arpl
out
lahf
push
mov
pop
test
fisubrl
out
push
mov
ljmp
lahf
loopne
ss
ret
add
or
cld
repz
and
shlb
mov
rcrl
in
hlt
movsb
sbb
test
pop
mov
xchg
aam
lahf
xchg
push
jae
dec
add
pop
jge
or
fists
push
nop
mov
sub
test
cwtl
ds
cld
pushf
popa
lret
cmp
fldl
mov
jo
push
jnp
inc
add
adc
cmp
test
rcr
fisubrl
adc
pop
xlat
sub
jge
or
pop
push
dec
xor
faddl
aaa
jnp
cmp
test
cmp
orb
sub
sbb
pop
aas
mov
dec
sbb
mov
cmp
mov
mov
mov
mov
cltd
int3
jge
inc
pop
bound
push
add
je
call
push
adcb
or
in
xadd
sbb
ficomps
adc
or
cmp
mov
insl
cmp
jge
push
cmp
jg
sbbb
mov
test
or
test
add
push
ja
fstpl
pop
ja
aas
pop
pop
dec
inc
and
dec
stos
sub
test
rorb
int
or
and
lea
sub
les
sub
push
or
inc
sbb
xor
sbb
dec
fistps
int3
or
inc
pop
daa
movb
stos
add
push
mov
push
xor
subb
aas
add
pushf
lds
adc
into
xor
jg
sbb
or
inc
cmp
and
inc
jne
daa
mov
notb
jge
loope
push
mov
and
sahf
pop
adc
push
scas
and
ret
sbb
sub
dec
add
and
not
xor
inc
pushf
into
cmp
negb
sub
aaa
sub
jle
pop
sub
sbb
inc
std
sub
jg
loop
pop
mov
pop
push
test
movsl
and
mov
adc
es
add
jge
sbb
jecxz
jg
add
jg
push
pop
nop
jge
jb
sub
ficoms
cmp
inc
fbld
fwait
in
mov
cmp
popf
pop
divl
lock
push
xor
fiadds
mov
xchg
mov
popf
push
lret
and
jle
mov
dec
mov
out
dec
xchg
xchg
or
xchg
sub
bound
jl
jns
adc
in
xlat
xor
add
add
fwait
add
mov
lret
xchg
in
cmpsl
js
mov
sub
out
and
out
movsl
sbb
dec
sub
dec
push
rorl
push
int3
push
leave
outsl
nop
js
and
lahf
jb
sub
sbb
out
lods
pop
cwtl
cmp
nop
cmp
or
jne
shll
test
inc
fsubs
xchg
jno
dec
cli
pop
inc
or
sub
adc
add
lods
and
pusha
sub
mov
ficoml
testl
dec
inc
or
dec
subb
xchg
add
ja
stos
loope
nop
push
inc
xchg
lds
rcrl
inc
and
jecxz
inc
jmp
xor
loope
ss
cmp
xlat
adc
adc
or
stos
js
sti
adc
pop
fldl
popf
iret
push
push
dec
jb
testl
divl
jne
dec
or
add
pushl
lahf
and
jle
xor
xor
sbb
pop
nop
call
or
sbb
cmp
or
scas
lahf
mov
in
and
cmc
fisubrs
or
jmp
repz
or
mov
mov
movsb
cmp
enter
push
mov
pop
icebp
gs
pop
ja
inc
aas
loope
outsl
mov
icebp
mul
and
dec
lea
sub
cli
test
int
cmpl
cld
pop
sbb
jo
ja
fcmovnb
aad
ret
into
sbb
js,pt
dec
into
or
shlb
data16
iret
cmp
or
int3
pop
add
xchg
adc
mov
ljmp
scas
inc
cmp
test
push
sub
loopne
pushf
add
negl
lods
jge
lahf
push
rorl
outsb
and
int3
loope
xchg
cmpl
sbb
in
imul
push
fiadds
sbbl
movsl
mov
cltd
in
pop
mov
jecxz
jmp
pop
in
cs
adc
out
ljmp
das
cmpsb
xlat
pop
pop
jl
movsw
sbb
pop
inc
add
add
add
cmp
pop
sub
or
sarl
cs
movsl
sub
pushf
std
stos
and
jl
add
cmp
dec
in
mov
cmpsl
fdivrl
push
out
out
mov
xor
adc
or
add
lods
xor
sbb
sti
and
pop
insb
out
cmp
jno
aaa
xchg
daa
insb
fsubrl
repz
pop
mov
jo
jecxz
pop
mov
rorl
daa
test
sti
in
mov
inc
or
outsl
movsl
movmskps
add
and
sahf
cmp
adc
imul
fbstp
jne
and
adc
adc
xchg
inc
pop
lahf
pop
sub
pop
mov
mov
inc
adc
sub
jno
xor
or
movsb
jae
mov
dec
lret
cmp
add
dec
jg
pop
cli
mov
fisubs
js
pop
or
mov
cmpsb
adc
push
adc
and
sar
adc
movsl
dec
sub
adc
mov
and
fcoml
push
scas
iret
sub
fisubl
enter
push
repz
mov
push
jecxz
push
bnd
inc
aad
nop
aad
test
mov
mov
or
add
lock
test
jb
sti
and
or
ret
test
andb
jbe
pusha
pop
xor
mov
repnz
sbb
adc
jmp
iret
lahf
or
jl
jbe
xchg
fistpll
fwait
inc
add
adc
sbb
inc
pop
arpl
adc
int3
xchg
movsb
jl
out
add
paddb
arpl
sub
cmp
pop
pop
push
push
subb
jge
push
lea
leave
into
pop
dec
pushf
sbb
and
mov
and
pop
mov
cmp
cmp
xor
lods
dec
movsb
xchg
xor
fiadds
sti
mov
push
mov
and
fldl
cmp
pop
std
sbb
pop
ljmp
jae
fiaddl
fwait
push
in
mov
push
adc
pop
xchg
dec
gs
adcb
adc
in
pop
rcrb
jge
cltd
sbb
cltd
pop
stos
cltd
leave
dec
popf
cmp
sbb
scas
sub
jmp
xchg
and
add
cmp
lods
js
mov
add
mov
push
xlat
rorl
mov
and
out
jnp
aam
mov
or
pop
fisubrs
jmp
aas
adc
addr16
inc
lahf
icebp
sbb
cmc
cmp
aaa
scas
xor
std
xor
mov
adc
test
adc
push
lcall
add
inc
add
aad
test
arpl
addb
in
pop
mov
scas
xor
pop
xlat
cwtl
or
add
cmp
sub
les
sbb
and
mov
xchg
push
jp
mov
mov
xchg
shll
dec
mov
ja
lods
jno
outsl
rolb
mov
ss
movsl
fwait
sub
pop
dec
outsb
add
push
std
sbb
push
pop
aas
adc
cld
cmp
jge
fistpl
and
and
pop
aam
adc
aad
ljmp
dec
pushf
sub
or
out
push
in
shrb
xor
inc
jmp
xor
or
lahf
inc
push
dec
lods
imul
sti
pop
dec
gs
cmpb
and
movl
mov
stos
pop
popf
jo
xchg
mov
lods
xchg
movl
sbb
xchg
movsb
push
xor
adc
loope
dec
std
divb
loopne
bound
idivb
cltd
gs
lret
pusha
pop
or
arpl
lahf
mov
cli
sub
and
scas
pop
jge
lret
and
pop
in
jge
fs
add
xor
sbb
pop
mov
sbb
icebp
xlat
cmpsl
ja
pushfw
loopne
pusha
stos
sbb
pop
add
xchg
fsubr
or
jnp
insb
dec
das
cli
cmp
lret
pop
out
mov
pop
mov
aaa
aas
icebp
jmp
xorb
cmpb
dec
mov
or
push
dec
pop
push
int
fdivrl
mulb
xchg
fsubs
int
sbb
adc
dec
stos
fidivrs
push
jbe
jl
mov
cmpsl
das
subb
jns
stc
jle
add
push
mov
int
gs
test
cmp
sar
add
pop
jecxz
push
inc
ds
dec
movsl
es
repz
sti
sub
in
insb
lods
cmp
xchg
mov
push
ss
cli
cmp
aad
fimull
lea
popf
out
shr
cmp
sub
add
fstpl
add
stos
cs
and
dec
cmp
ja
cmp
std
mov
rcrl
std
lods
and
les
cmp
inc
outsl
sti
int3
pop
cmp
pop
mov
xchg
testl
adc
testb
loop
pop
scas
sub
pop
dec
push
data16
push
mov
sbb
jnp
jns
sub
nop
add
leave
jns
xor
or
int3
mov
mov
xchg
xor
mov
and
xchg
pushf
popf
adcb
pop
ljmp
testl
cmpsl
bound
and
iret
add
scas
jl
pop
in
insb
popf
add
inc
das
pop
xor
mov
push
cmp
shl
mov
add
aas
int
enter
cld
shlb
pop
psubq
inc
sub
add
mov
jge
scas
cmp
iret
xchg
jb
adc
mov
inc
cmp
pop
inc
popa
mov
cmpsb
shr
ffreep
dec
aaa
repz
add
jg
scas
push
dec
les
shrl
cmpsl
shlb
das
mov
cmpsb
mov
add
lahf
dec
pmuludq
push
cwtl
bound
idiv
fwait
enter
jno
loopne
imul
and
int
cs
or
jmp
mov
addl
std
adc
popf
pop
fists
in
cmc
fmull
adc
mov
dec
dec
sub
fbld
fists
add
or
xor
cmp
pop
lock
pop
and
mov
mov
inc
mov
adc
xchg
jb
add
es
mov
orb
pushf
jbe
cmpsb
rorl
mov
push
ja
das
xor
int3
inc
push
mov
in
out
add
jecxz
insb
popa
xchg
loope
and
jecxz
or
and
mov
sub
dec
int
and
push
cld
pop
mov
and
int
or
fisttps
fistpll
out
cmp
or
test
pop
sub
adc
or
lahf
sbb
jle
xchg
sbbb
ret
xchg
xchg
cmp
sbb
or
pop
addr16
push
testb
popf
cmp
or
sbbl
loop
xchg
or
sub
nop
cs
dec
pop
add
pop
dec
add
adc
add
xchg
xchg
jns
arpl
jp
dec
cmp
push
jne
pop
push
jb
add
push
or
cmpsb
mov
lahf
fisubl
rcrl
inc
jp
gs
notb
scas
sbb
insb
lss
jne,pn
pop
sbb
mov
paddd
enter
jecxz
aam
pusha
push
cld
mov
push
loopne
xlat
jle
iret
cmp
adc
push
cli
mov
out
add
lea
jl
xor
add
pop
xor
or
sahf
stos
mov
and
fistpll
testl
xchg
into
pushf
hlt
daa
mov
mov
bound
and
das
push
push
cmp
cmp
jno
lds
pushf
int
mov
or
aaa
cmpsb
pop
dec
jecxz
in
xlat
sub
int
lods
jae
ficompl
inc
mov
or
xchg
dec
scas
sbb
cmpsb
iret
fnstcw
cmp
ja
fldl
lods
sbb
mov
mov
or
dec
pop
xchg
or
and
out
mov
movsl
sti
pop
mov
cld
push
push
rorl
mov
sbb
or
int
ret
push
dec
mov
ret
adc
stos
mov
pop
xchg
stc
cmp
and
and
jecxz
pop
cmp
push
adc
sbb
mov
jb
cmp
loope
xchg
sahf
xchg
call
jne
into
and
push
inc
pop
bound
xor
add
or
outsl
push
and
and
dec
addr16
loope
pushf
jp
or
imul
lods
ljmp
movsl
adc
xlat
push
pop
test
stc
add
sub
cmp
xchg
and
push
les
mov
pop
mul
rolb
push
loop
pushf
int3
rcrb
push
or
dec
aas
add
xchg
pop
movsl
lret
adc
or
push
dec
mov
dec
and
popf
pop
dec
cmpb
ja
rcll
inc
pop
fs
cmp
xor
ret
inc
push
aas
jl
jne
adc
and
cmpsl
dec
cs
pop
xchg
dec
sub
adc
repnz
mov
mov
cs
lock
dec
pop
sti
inc
adc
mov
sbb
cmc
pop
xor
mov
sbb
sbb
or
test
and
testl
test
jg
add
fistpl
in
add
push
lahf
nop
ret
push
adc
dec
cld
mov
dec
mov
in
imul
dec
fs
adc
mov
fwait
dec
aad
adc
iret
sub
nop
add
push
fimuls
or
sub
jne
push
movsl
or
mov
call
shr
push
sbb
bound
dec
sbb
xor
ret
pop
movsl
cmp
cmc
xlat
xor
hlt
sbb
lods
add
adc
and
sub
jg
in
test
push
sub
jge
stc
or
orb
ds
stos
sbb
mov
push
push
mov
mov
jmp
inc
aad
push
fs
push
pop
test
mov
lods
es
ljmp
loop
outsb
add
mov
or
mov
push
inc
sub
pop
inc
or
out
cmp
jl
adc
cmc
movsl
and
mov
add
stc
sub
cs
sar
scas
js
and
insb
lcall
lahf
aas
pushf
xor
add
pop
pop
push
inc
xor
ds
jecxz
int
mov
cwtl
pop
pusha
int3
cmp
inc
mov
pop
stos
adc
inc
data16
ljmp
fiaddl
push
ds
mov
sbb
dec
jne
movsb
cmc
cmp
fstpt
mov
mov
pop
xor
inc
mov
loopne
dec
inc
xchg
push
push
std
dec
xlat
insl
stos
rcll
fld
jae
or
push
push
push
mov
cmp
shlb
scas
jo
int
lea
xchg
adc
pushf
xchg
cwtl
xchg
iret
sti
sub
push
add
mov
sbb
push
sub
add
stc
or
not
sub
scas
or
in
in
adc
cmp
cmp
xchg
das
pop
pushf
or
xchg
stos
shlb
mov
push
inc
push
fs
stos
mov
mov
jnp
sbb
imul
dec
out
jecxz
push
sbb
fdivr
mov
sbb
cld
fildll
cmp
out
push
jns
adc
lret
inc
in
lea
popf
inc
ret
or
cmp
inc
mov
push
loopne
push
mov
cwtl
or
cmp
pop
into
gs
cmp
jp
imul
jl
das
inc
xor
push
into
pop
and
sub
or
cld
imul
nop
mov
sub
je
pop
lods
sbb
pop
out
dec
mov
xchg
gs
pusha
dec
adc
mov
cmp
ret
and
mov
or
out
xor
inc
mov
dec
push
or
jmp
mov
adc
adc
mov
in
call
rcrb
sub
loop
dec
rorb
mov
jmp
test
loopne
pop
es
adc
lock
divb
and
mov
adcb
push
movsl
arpl
popf
inc
xchg
ror
xor
cmc
xchg
test
daa
popf
outsl
lods
popf
in
std
rolb
fsubl
outsl
xor
cli
ds
std
and
stc
fxsave
and
dec
push
cmp
inc
lahf
mov
jbe
xchg
mov
dec
or
sarb
movsb
repnz
stc
dec
lahf
lcall
xchg
addr16
add
xchg
xchg
dec
insb
stos
adc
mov
mov
xor
mov
out
sbb
pop
out
mov
xor
dec
je
std
icebp
enter
push
mov
call
push
aam
push
incb
add
add
out
or
dec
dec
adcb
fdivrp
xchg
xchg
stos
movsl
int3
mov
lret
fiadds
loope
and
jae
pop
lea
mov
and
iret
out
push
movsl
push
dec
or
pop
push
loop
pop
pop
xchg
mov
jl
pop
mov
jmp
adc
mov
xchg
orb
sahf
add
jmp
les
out
loopne
lahf
or
mov
movsb
pop
sbb
out
and
jge
test
fistps
iret
sbb
xlat
cmc
or
dec
mov
std
mov
std
ds
push
repz
cld
xlat
push
cmpb
mov
inc
popf
push
mov
or
lods
outsl
daa
or
cmp
sti
arpl
fstl
sub
sahf
mov
inc
movl
adc
and
pop
pop
test
insl
inc
andl
add
mov
mov
cwtl
jl
cmp
mov
insl
sub
add
xchg
insb
test
lcall
nop
cmp
int3
imul
test
dec
jl
sub
or
jecxz
leave
add
sbb
xchg
gs
std
inc
and
sarb
sahf
xor
or
test
dec
xchg
dec
testl
xchg
pop
push
jnp
sbb
mov
cmpl
lods
or
or
sysret
cmp
jnp
outsb
add
testb
xor
sub
sbb
add
std
rorb
sbb
test
fldcw
xor
cmp
add
add
pushf
daa
inc
adc
loope
stc
or
cltd
add
negl
mov
popf
cwtl
fwait
lahf
push
push
stos
test
idivl
mov
cmp
lds
xchg
mov
rcrl
sub
clc
ret
outsl
movsl
shrb
pop
inc
push
mov
fisttpll
outsb
xchg
cmp
inc
jle
xor
mov
adc
pop
mov
inc
and
cmp
push
leave
sub
fistpl
arpl
push
xchg
sbb
addb
mov
and
insb
sbb
ja
pop
and
mov
int
add
add
mov
stos
jae
mov
pop
les
mov
sti
rol
mov
mov
mov
xor
test
fsubrs
inc
je
mov
loop
lret
clc
lcall
dec
mov
mov
push
imul
add
stc
das
push
sbb
cmp
cmp
pop
and
imul
push
adc
in
cmp
inc
and
lea
cmp
xchg
mov
cwtl
xchg
loopne
jnp
or
in
xor
mov
aam
mov
push
push
cmp
push
lcall
fisttpll
es
and
jl
mulps
xlat
cli
orl
dec
dec
inc
pop
xchg
and
ja
pusha
push
jmp
cld
xchg
or
or
and
pop
cmp
cmp
inc
in
movsb
adc
rclb
xchg
jnp
mov
sub
aam
jl
in
xor
and
pxor
cmp
movsl
add
in
cmc
sub
mov
mov
adc
xchg
push
cmc
sub
xor
adc
je
mov
lret
jp
and
mov
lret
imul
mov
hlt
add
jne
stos
out
lods
pop
and
in
repz
fisttpll
popa
pop
orb
push
sbb
inc
xchg
push
xchg
int
inc
fistps
stc
mov
mov
outsb
mov
subb
ljmp
mov
jne
out
in
sti
and
idiv
mov
call
push
pop
xchg
fsts
cmp
pop
stos
daa
mov
out
nop
xor
outsl
jmp
or
xchg
loopne
mov
dec
scas
mov
call
dec
pop
inc
push
adc
inc
mov
pop
and
cmp
dec
and
popf
inc
pop
dec
adc
mov
rol
test
mov
roll
lahf
mov
mov
xchg
call
test
iret
jg
enter
and
sub
scas
out
xor
iret
sub
popa
adc
inc
inc
xor
iret
shlb
sub
cs
mov
sub
outsb
les
int
adc
sub
movsl
fdivs
js
insb
inc
ds
push
pop
mov
push
mov
shrb
pop
pusha
inc
jae
push
jne
push
shl
mov
xchg
pusha
add
dec
add
imul
fiadds
jle
nop
sti
mov
fistpll
inc
inc
shl
jno
std
mov
mov
inc
out
jge
lahf
in
xor
xor
xor
testb
and
jne
lret
mov
mov
sbb
jns
into
jg
or
add
mov
inc
mov
stc
jns
sahf
or
out
push
mov
add
push
push
fs
cmp
int3
dec
cmpsb
aaa
loope
jl
cmp
sbb
dec
popa
adc
movl
sbb
roll
or
add
fsubrs
or
add
rcr
mov
fists
shrb
int3
jp
leave
mov
jb
xchg
pushf
add
pop
insb
xlat
push
inc
xchg
dec
std
mov
jp
xchg
shll
mov
push
test
cli
xchg
push
push
data16
jle
xchg
popa
inc
mov
rcr
pop
in
jge
daa
scas
js
ja
repnz
movsb
jl
int
dec
add
repnz
sub
mov
or
shlb
jp
lea
nop
add
lahf
mov
into
out
lcall
adc
dec
sub
cmp
add
xor
adc
sbb
lcall
push
sti
roll
add
call
enter
jmp
sbb
and
aam
ljmp
hlt
mov
stos
mov
adc
test
pop
lahf
xchg
jne
pop
lea
add
paddb
and
pop
jne
int
mov
lods
mov
bound
pop
xor
sti
inc
add
sub
cmc
pop
pop
adc
sbb
cmp
movb
jbe
adc
sbbb
ljmp
incb
xor
fwait
call
add
or
or
adc
add
pop
cmp
lahf
clc
loop
cmp
stos
xor
in
sub
dec
test
xor
or
loopne
adc
xchg
dec
push
int3
nop
lea
pop
inc
push
popf
xchg
mov
lret
mov
gs
jp
ja
mov
mov
cmp
imul
shll
or
cmp
pop
fcomps
clc
cwtl
xchg
xchg
cmp
add
inc
push
out
mov
mov
int3
stc
pushf
add
mov
xchg
cmpl
adc
and
push
dec
xor
pushf
daa
jl
in
cld
add
xchg
scas
lds
lahf
mov
jne
stos
jl
xorb
loopne
ja
cli
cmpl
sub
cli
add
inc
mov
clc
das
mov
inc
enter
or
jnp
call
or
mov
sahf
popl
xor
and
inc
push
lea
inc
dec
data16
mov
or
adc
jmp
pusha
adc
repz
sbb
adc
jle
sbb
jmp
in
jbe
adc
xlat
xchg
js
mov
pop
sti
push
push
sbb
lods
and
push
popf
negl
xchg
push
aas
mov
sub
fsubp
and
lahf
inc
xchg
stos
and
sbb
pop
dec
push
leave
sub
data16
add
cld
insb
mov
subb
or
sbb
sbb
nop
push
and
or
shrl
pop
pop
dec
pop
scas
call
loope
sub
adc
mov
ds
test
and
adc
rolb
testl
rolb
icebp
xchg
pop
roll
std
fcompl
in
movsl
adc
push
scas
mov
std
test
xchg
cli
pop
jl
insb
sub
imul
fs
sbb
xchg
add
and
and
subl
div
std
or
sbb
add
push
push
adc
das
xor
test
adc
stos
xor
pop
add
lahf
enter
and
mov
push
pop
ror
lahf
sub
mov
roll
in
and
pop
and
cmc
and
push
fs
sti
xor
testl
push
insl
pop
lahf
mov
adc
mov
and
fsubr
loope
loope
in
xor
dec
inc
xchg
add
mov
push
bound
lahf
std
mov
bound
mov
pop
dec
cmp
inc
push
add
cmp
les
hlt
pop
pop
jns
jle
and
jmp
nop
cwtl
int
addr16
shll
cwtl
add
enter
pop
sub
dec
bound
out
mov
mov
mov
push
hlt
pop
negl
fistpll
push
mov
push
pop
push
jmp
cwtl
stos
fisubrs
les
jae
inc
fisttpll
addr16
or
fmull
push
xchg
cmc
repz
inc
inc
scas
fnsave
bound
inc
adc
test
jnp
jl
in
popa
and
pop
push
fcomps
fisttpl
cmp
adc
or
adc
adc
push
orb
stos
jl
loopne
in
inc
cmc
mov
dec
xchg
aaa
lret
push
xchg
shll
in
in
jns
mov
enter
test
and
insl
loopne
push
xchg
je
xor
lahf
xor
popa
mov
mov
cli
add
popf
and
mov
pusha
mov
int3
cld
mov
mov
jno
andb
test
sub
cld
jge
push
mov
lock
cmp
fwait
cmp
push
test
add
stos
orl
mov
mov
fdivrl
rorl
cmc
mov
lock
mov
int3
clc
pop
mov
mov
push
and
dec
lret
movsl
push
pop
call
sub
popf
and
scas
dec
std
cmc
iret
es
push
popa
int
push
loop
jne
jecxz
lahf
jae
xchg
shrl
push
movsb
push
push
mov
fimuls
jp
xchg
cmc
aaa
push
push
cld
mov
sbb
xor
addb
jmp
aad
inc
jecxz
and
adc
jae
aas
push
xchg
add
rcll
sbbl
dec
adc
cmp
jo
jae
mov
mov
enter
add
in
nop
stos
arpl
daa
dec
jmp
movsl
inc
add
lods
pop
mov
dec
nop
rclb
fwait
mov
nop
repnz
or
loope
push
enter
test
cwtl
add
add
pop
xchg
cmpsb
xor
lea
mov
push
xor
sbb
xor
sbb
and
mov
add
push
jge
int
push
pop
sarb
mov
orl
sub
out
repz
popf
xor
in
and
pop
push
or
insb
add
lock
loope
sub
add
xchg
adc
xchg
cmp
addb
jge
fmuls
lock
insb
outsb
lds
ret
push
in
aad
data16
ljmp
nop
in
jbe
cwtl
mov
sub
nop
pminsw
add
stos
mov
or
and
ljmp
aad
inc
icebp
dec
mov
push
and
fs
mov
or
mov
insl
std
ja
push
fldt
cli
shlb
mov
cmc
pop
jg
adc
cmp
and
xchg
xchg
add
mov
rolb
dec
bound
das
lahf
paddb
jno
and
out
cmp
jns
adc
xchg
out
insl
mov
daa
std
adc
jae
ljmp
xchg
sahf
imul
cld
gs
pop
cmp
rcl
push
dec
xor
pop
cmp
jne
push
push
xor
andl
lahf
cmp
dec
mov
arpl
xchg
mov
pop
jns
push
jl
mov
cld
js
adc
or
xchg
mov
sub
sarb
dec
jne
cs
mov
push
jns
je
filds
cmpsl
or
es
sarl
lods
and
xor
shll
inc
and
fwait
shll
int3
fs
sub
dec
es
cld
pop
out
lock
add
pop
leave
cld
pop
outsl
sub
pop
sti
jmp
lahf
cmp
rol
lahf
pop
push
cs
jnp
cmp
aad
jns
mov
xor
sbb
ror
mov
or
mov
mov
into
je
add
pop
sti
movsb
dec
sbb
mulb
and
or
add
and
adc
dec
fsubrp
or
and
and
xor
sbb
das
ret
lds
les
inc
arpl
dec
and
sbb
sub
add
mov
sbb
cmp
push
mov
ja
inc
mov
dec
cmp
out
stos
mov
ljmp
mov
push
out
pop
dec
xor
stos
hlt
mov
adc
jge
sbb
and
lea
and
mov
cmp
and
repnz
ss
pusha
mov
cmp
push
pop
fmull
add
cmp
push
jmp
nop
or
das
mov
push
cwtl
adc
lret
outsb
or
mov
push
shrl
cmp
shl
pop
inc
adc
or
cli
jb
fdiv
inc
and
xor
sbb
cli
add
jnp
lret
ficoml
test
aam
call
popa
dec
and
lock
outsl
xchg
adc
dec
sahf
loop
jns
ret
mov
and
sub
sub
add
std
lahf
leave
mov
iret
pop
cs
sbb
mov
mov
rclb
cwtl
test
xchg
and
lock
test
push
fcompl
arpl
cmc
mov
push
andl
fdivp
pop
cmp
rep
bound
movsb
inc
jno
xchg
mov
lcall
push
lret
wbinvd
cmpl
pop
xor
movl
into
popa
jl
fsubs
push
out
mov
lahf
insb
fadds
ret
push
sbb
es
shlb
inc
cld
push
mov
lahf
pop
and
push
lret
sahf
mov
dec
dec
test
daa
add
lahf
or
maskmovq
lea
mov
int
mov
sbb
fistps
push
push
cmc
or
ret
pop
jns
lock
dec
and
iret
cmp
lret
jge
shll
push
cmp
add
and
inc
pop
loope
push
mov
int3
add
fs
mov
jg
inc
mov
sbbl
and
popf
dec
sub
push
xchg
and
pop
orb
cmp
mov
inc
sbb
inc
pop
ficoms
sub
or
es
sbb
sub
fsubs
xor
or
scas
add
mov
xchg
and
add
icebp
inc
iret
test
loopne
sub
adc
scas
testb
std
jnp
jg
jae
xchg
dec
fsubrp
lcall
xchg
dec
push
sbbb
xchg
jle
cmpsl
push
out
xchg
inc
add
xor
pop
ja
cmp
das
xchg
inc
iret
frstor
sbb
daa
add
test
gs
pop
fs
stos
data16
add
cmp
rorb
xchg
push
cwtl
insl
mov
sub
lcall
xchg
and
je
mov
lock
jno
dec
jge
mov
inc
or
sbb
es
pushf
in
cmpb
or
mov
les
adc
int3
inc
inc
jnp
adc
sti
push
bound
test
imul
and
repz
xchg
pushf
mov
adc
rep
dec
daa
addb
cmp
cmpsb
les
int3
aaa
mov
ds
and
add
pop
xchg
icebp
cli
xor
pop
cwtl
dec
lret
mov
mov
sub
push
jnp
gs
pop
push
popa
inc
fidivs
mov
inc
cmp
pop
jns
mov
jg
add
daa
jno
inc
pop
or
mov
dec
or
test
loop
jns
les
int
jl
add
lahf
cmp
mov
arpl
cmp
xchg
rolb
insl
xchg
arpl
xchg
loopne
cmp
movsb
call
in
push
jae
jo
mov
int
add
and
insb
loopne
les
inc
dec
sbb
and
sub
out
dec
push
movsb
movsl
test
push
pop
out
out
jl
and
inc
add
push
or
sbb
into
inc
pushf
pop
mov
rorl
out
mov
and
popa
fistps
xor
xor
push
es
adc
sahf
std
mov
mov
outsb
inc
fidivl
xchg
inc
mov
xor
add
lahf
sub
cmc
jl
in
jb
sub
mov
fidivrl
in
lods
dec
insb
pop
test
scas
add
inc
push
fcoml
das
paddb
sti
sbb
int
adc
test
xor
negb
cltd
cld
imul
rclb
and
test
xchg
push
and
xchg
lds
mov
pusha
add
popl
dec
mov
and
inc
mov
mov
inc
js
pop
cmp
in
ljmp
sub
lods
push
in
scas
add
xor
dec
push
xor
sub
nop
sub
in
add
fneni(8087
xor
out
pop
cs
adc
push
pop
popa
fcoml
add
adc
repnz
in
push
je
mov
push
pusha
xor
adc
inc
outsb
testl
add
mov
cmove
test
or
std
or
shrb
cmpl
push
jl
int
sub
cli
xchg
push
pop
arpl
stc
mov
cli
sub
cmp
sub
loopne
mov
in
mov
or
mov
sbb
enter
sub
lahf
scas
imul
and
cmp
xchg
iret
or
mov
repz
lcall
mov
stos
mov
jge
pop
jge
out
pop
xor
ret
fsubl
and
sti
popf
mov
sub
out
dec
das
cltd
js
popf
sub
adc
sbb
es
fsubs
xor
sbb
and
stos
xchg
fsts
xchg
mov
or
push
stos
push
push
int
stos
push
pushf
pop
repz
mov
fstpl
mov
sbb
cmp
mov
add
cmp
xchg
inc
mov
cmp
aad
lahf
dec
nop
jmp
pop
mov
jecxz
jno,pt
push
xor
mov
xchg
push
xor
cmp
test
cltd
cmp
xchg
xchg
mov
and
aam
push
cmp
and
clc
sbb
ss
int3
test
iret
iret
insl
test
mov
adc
pop
or
sti
add
scas
pusha
adc
ret
sbb
daa
mov
sub
scas
inc
sbb
pop
lock
inc
ljmp
pop
pop
ret
movsl
add
xlat
test
outsl
aas
cld
mov
jecxz
lea
pushf
mov
call
push
xlat
or
push
jo
or
cmp
out
clc
repz
scas
push
xor
sbb
sub
stos
pop
adc
jmp
cmpsl
sbb
add
mov
xor
sarb
and
inc
inc
iret
ljmp
xor
outsl
add
cwtl
or
dec
pop
dec
cltd
mov
push
dec
int
outsl
adc
push
lcall
jb
cmpsb
outsb
add
cmc
jge
fbld
push
ja
pop
jl
lahf
repz
jmp
and
lret
mov
fcompl
in
pop
jne
add
adc
mov
clc
xchg
nop
cmpsl
gs
mov
or
add
or
lahf
adc
cmp
push
mov
or
xlat
mov
inc
fidivl
inc
cmp
mov
or
and
push
fs
cmpsl
mov
sbb
pop
int
push
or
push
enter
scas
loopne
fmul
sub
cmp
call
adc
hlt
jle
cmp
mov
add
or
mov
in
cmpsl
das
cs
jb
pop
and
pop
sbb
popf
pop
loop
mov
fisubl
insb
sbb
pop
scas
jno
mov
sub
cmc
add
sti
pop
imul
inc
adc
push
jne
xchg
sbb
test
cmp
inc
arpl
push
fiaddl
into
inc
pop
mov
sahf
es
mov
out
sahf
clc
fcomps
pushf
arpl
push
and
jp
sbb
rcrb
push
test
mov
in
or
xor
pop
sbb
aas
and
jmp
mov
in
jb
daa
fadds
fdivl
cltd
push
pop
aad
mov
pop
nop
adc
jle
push
test
mov
data16
repz
cmc
clc
repz
jno
or
scas
add
xor
ffree
imul
xchg
or
pusha
fwait
cmp
sub
hlt
sbb
mov
int3
inc
stc
xor
add
scas
add
sahf
mov
mov
mov
jbe
push
aad
in
ljmp
xor
daa
adc
sbb
cmp
shr
cmc
insb
rclb
cld
test
and
pop
and
push
pop
fucomip
push
jns
inc
inc
lret
stos
mov
or
mov
push
dec
sub
mov
add
or
and
shrl
std
pop
and
call
xor
and
repz
sub
stos
shrl
popa
mov
and
imull
cmpsl
cmp
scas
stos
cmc
or
insb
stc
dec
mov
cmp
cmp
pop
fwait
inc
pop
or
es
icebp
sbb
ja
xchg
or
repnz
lea
or
add
pop
jb
sub
rcll
pop
mov
call
add
cmp
nop
dec
add
lret
pop
sarb
pusha
dec
fnstenv
cmp
or
repz
and
lods
xchg
out
sub
xor
lahf
mov
push
jp
push
sub
xor
lahf
xchg
mov
mov
mov
mov
mov
pop
fisubl
adcb
push
jle
cmp
cs
or
ss
xor
adc
scas
mov
iret
shlb
nop
push
pop
add
and
adc
push
or
jno
orb
adc
mov
aas
repz
cmp
cmp
add
cmp
push
jns
add
popa
cs
jbe
mov
or
xor
daa
int3
mov
nop
dec
sub
or
pop
ds
mov
dec
mov
pop
inc
pop
mov
loopne
adc
subl
dec
rcrl
add
and
push
dec
or
mov
enter
inc
ljmp
jge
sub
sbb
in
and
and
mov
int
and
or
cmp
out
sbb
adc
mov
adc
jge
sbb
out
int
or
aas
push
push
decb
mov
dec
and
imul
fwait
push
sbb
shlb
sub
enter
adc
pop
sbb
sahf
movsb
pop
fsubs
sbb
push
arpl
dec
sbb
stc
dec
fs
popa
or
mov
adc
int3
cli
jne
mov
shrb
sub
mov
sbb
pop
fldenv
iret
movsb
pop
cs
cwtl
cmc
lea
or
cwtl
enter
sbb
insl
andb
jge
rorb
inc
pop
loopne
aad
movsl
dec
mov
das
js
cmp
rol
and
cld
mov
push
or
push
add
outsb
adc
movsl
lods
into
mov
and
and
aaa
jo
add
test
icebp
inc
and
jo
and
test
jo
imul
popf
idivl
test
dec
es
jbe
div
sbb
aad
sub
cld
xor
das
push
and
sub
pop
das
adc
dec
iret
add
push
repnz
scas
addb
xchg
or
jae
int3
jbe
jb
cmc
push
data16
sbb
adc
push
xor
and
sbb
add
jg
cmp
lahf
insb
push
ja
cmpsl
in
sub
je
sub
jmp
scas
fs
jl
out
push
cmpb
inc
push
insl
push
ds
pop
cmp
mov
jae
fisttpll
inc
xor
rol
push
push
sbbb
push
push
jle
pop
orb
mov
enter
movsl
xlat
push
add
pushf
cld
cmp
pushf
repnz
sub
push
dec
fimull
push
or
repz
pop
sbb
scas
xor
sub
inc
pop
xor
cmp
sti
adc
inc
mov
mov
ret
jae
dec
inc
ds
cmp
and
pop
mov
das
loope
xor
int3
mov
jmp
decb
or
call
xchg
leave
xor
mov
popf
push
push
out
push
sub
add
pop
pushf
or
lds
adc
sbb
push
lahf
popa
arpl
cmp
out
mov
mov
movsl
int
add
lods
das
or
inc
mov
or
mov
bnd
push
sub
std
and
sbb
sbb
int3
push
in
int
bound
lea
dec
ds
fs
xor
mov
pusha
cmp
jmp
jg
fnstenv
iret
push
ret
aad
fwait
or
orl
loopne
push
xor
jo
or
and
or
ficoms
ss
shlb
bound
roll
mov
pusha
sub
mov
aad
pop
cwtl
jno
lret
jge
cld
cmp
xor
push
pusha
jg
dec
mov
or
fsubp
inc
and
dec
rcll
or
mov
cwtl
or
call
cmp
add
incb
push
fsubl
add
inc
rcr
and
lahf
hlt
dec
negb
stc
bound
and
inc
pop
loopne
js
stc
pop
lahf
mov
adc
cwtl
and
dec
mov
int
movsb
je
jbe
js
inc
jns
adc
xor
std
xchg
negl
add
mov
and
mov
imul
cli
nop
out
dec
and
leave
mov
adc
leave
mov
jne
pop
xchg
adc
add
pop
mov
add
shr
ret
lds
xor
inc
pop
xchg
sbb
scas
aad
stos
sub
std
mov
mov
push
jae
das
loopne
dec
sub
cld
push
and
or
dec
or
insl
sbb
push
out
int3
add
add
fwait
dec
int
push
scas
out
iret
dec
nop
pop
sarl
int
repnz
add
rcl
stc
nop
ret
hlt
out
mov
or
xchg
cld
mov
push
xchg
orb
mov
scas
sbb
cwtl
xchg
dec
cmp
push
mov
pusha
out
inc
mov
sub
lods
mov
or
clc
jmp
jg
jo
and
pop
lea
jl
mov
ficomps
std
aas
js
or
test
les
lahf
cs
pop
movsb
add
loop
mov
or
cmpsb
or
mov
lcall
jle
sub
push
inc
lahf
cmp
scas
inc
adc
mov
cmc
or
dec
bound
adc
loopne
mov
inc
ljmp
xchg
aas
dec
insb
push
add
sti
nop
push
test
scas
pop
push
fcomps
into
les
lock
push
repz
cwtl
std
clc
push
mov
cmp
xchg
inc
mov
pop
jl
ret
insb
std
add
sub
inc
lahf
test
or
fs
movsb
sub
hlt
je
ss
lcall
sbb
jns
fildll
xor
pop
sbb
cmp
sub
sub
repnz
xlat
dec
sbb
push
pop
scas
cld
add
mov
or
faddl
mov
sbb
movsl
data16
arpl
orb
call
jo
ror
divl
and
add
pop
add
lods
pop
mov
stos
add
andl
pop
test
and
inc
jb
cld
mov
loope
incl
std
jmp
roll
imul
jb
das
lea
insl
ret
inc
push
dec
pop
cld
call
in
add
sub
and
mov
mov
subl
mov
fsincos
sbb
es
enter
ds
int
stos
push
sahf
outsb
sub
and
repnz
jp
hlt
fcmovu
pop
sahf
test
inc
mov
in
lret
into
push
adc
or
int3
sbb
aas
sub
cld
stos
sahf
scas
std
sbbl
test
add
aam
sarb
dec
stos
stos
and
or
dec
out
jge
pop
sub
jno
js
rclb
std
scas
xor
rcrb
aaa
sub
inc
or
pop
xchg
fdivrl
decl
pop
shll
das
rolb
pusha
and
pushf
xlat
nop
sub
xchg
mov
sub
sbb
sub
jne
mov
adcb
cmp
out
cs
imul
mov
inc
or
es
sbb
outsl
int
in
lock
jl
cmp
push
jo
mulb
lret
mov
std
out
add
jge
insl
stos
rclb
mov
lea
test
mov
adc
sub
pop
lahf
mov
aas
call
push
mov
in
adc
lods
push
lahf
aas
enter
jl
inc
cmp
idivb
insb
push
push
enter
imul
sti
sbb
mov
daa
push
xor
push
jge
add
sub
or
add
mov
je
icebp
sbb
adc
out
clc
sub
aam
add
out
adc
pushf
jle
add
jg
or
je
loop
push
out
lret
push
mov
mov
or
jnp,pt
xchg
dec
or
addl
jne
or
das
insl
lahf
int
out
cltd
fimuls
mov
fstpl
in
push
test
mov
xchg
int3
dec
or
jmp
lahf
cmp
dec
fmuls
pusha
iret
mov
push
xor
cmp
adc
mov
add
lcall
aad
push
imul
into
repnz
dec
insb
dec
aas
push
and
jne
or
and
dec
jne
mov
jbe
sbb
inc
push
sysenter
rclb
out
pop
rcrl
mov
xchg
hlt
inc
inc
mov
decl
icebp
add
insl
adc
lock
or
mov
adc
in
je
stos
and
pop
mov
mov
movsl
and
add
and
inc
and
jg
cmp
daa
test
ss
mul
jne
xchg
fbstp
fstl
enter
subl
lret
in
inc
gs
adc
xchg
sub
xor
inc
insb
cmp
xor
jecxz
test
std
add
adc
mov
pop
cli
add
sahf
xchg
pop
add
lock
cli
lret
pop
xor
fstl
mov
lock
arpl
inc
dec
push
push
scas
outsl
rclb
mov
or
scas
popa
mov
dec
popf
fildll
rcrb
dec
call
loopne
push
sbbb
aad
lcall
xchg
stos
aam
and
cmp
nop
add
icebp
lea
test
scas
add
ds
or
mov
hlt
test
and
sub
jae
jbe
loopne
loope
sub
int
inc
clc
dec
push
fstpl
sub
inc
aas
jns
mov
dec
insl
loop
outsb
in
jl
sub
roll
add
sti
push
pop
js
fsubl
sbb
out
call
mov
mov
mov
sbb
jl
adcb
imul
lods
and
cmpsb
in
loope
inc
push
insl
test
mov
sbb
mov
xchg
adc
orb
fsubl
dec
movsl
and
push
push
jle
loope
pop
cmp
mov
hlt
adc
scas
bound
push
fsubl
nop
pop
fimuls
sub
fs
loopne
and
lds
add
push
sbb
stos
iret
dec
js
dec
je
push
js
and
xchg
jecxz
stc
sbb
js
sub
cmp
fs
incl
add
sbb
jecxz
push
movsb
lds
ljmp
and
sahf
xchg
movsl
and
xor
sub
inc
popa
fcmovnb
or
pop
sub
loope
adc
cmp
push
ja
decb
cld
and
xor
stos
xchg
jns
pop
inc
xor
dec
add
fcmovu
bound
or
or
mov
cmpsl
inc
jae
fldt
imul
sbb
dec
sbb
jmp
imul
cld
push
pop
test
mov
jns
mov
xor
pushf
sbb
scas
or
xor
pusha
push
inc
sbb
dec
add
negb
movsl
jne
lahf
nop
jp
add
and
movsl
pop
and
sbb
mov
cmp
and
jae
add
flds
dec
sbb
pop
cld
out
icebp
aas
or
popfw
cmp
clc
dec
out
notl
movsl
cmp
stos
pop
je
dec
outsl
jns
mov
mov
mov
daa
ds
jne
sbb
jg
adc
arpl
lahf
pop
mov
mov
sbb
pop
add
xlat
push
out
add
cmp
mov
arpl
push
cmp
orl
dec
in
cmpsl
and
xor
test
int
mov
lahf
stc
mov
neg
adc
sbb
and
nop
mov
rorl
inc
mov
test
add
lahf
addr16
push
xchg
insl
lods
nop
arpl
xor
ljmp
and
aam
outsl
icebp
push
fcmovb
push
push
clc
popa
int3
std
add
sbb
mov
jne
repz
icebp
xor
sub
call
jnp
sbb
jg
insl
mov
mov
cs
jne
push
loop
divb
popf
push
xchg
jmp
mov
and
mov
jg
xor
xor
enter
push
mov
xlat
aas
and
jno
inc
andb
mov
std
jmp
push
repnz
push
mov
repz
and
pop
fisttps
notl
and
and
xchg
push
loope
pop
test
jno
stc
leave
push
aam
std
lcall
push
shll
lahf
xchg
sbb
push
and
fstpl
loope
jnp
int
insl
fisubl
and
mov
lcall
xchg
insb
pop
mov
imul
mov
mov
inc
stc
cmp
lcall
xor
fsubl
dec
mov
lcall
inc
push
aas
add
adc
or
imul
or
mov
or
rcr
lea
scas
lock
mov
shrb
int3
std
add
sbb
inc
mov
push
cld
dec
or
cmp
cmp
xor
or
and
jno
add
int3
mov
lea
movsb
add
and
std
enter
cmp
popf
rcrb
int3
aas
jnp
cmp
and
xchg
imul
enter
out
sub
jnp
sub
sarl
insl
add
es
dec
cmp
sbb
in
insb
movsb
fistl
jl
aas
lods
and
cmpb
dec
inc
fmull
ljmp
hlt
sub
sub
jge
mov
insl
or
xchg
xchg
or
push
insl
push
jl
mov
xchg
insl
dec
and
out
pusha
jg
outsl
fsubs
add
pop
ja
xchg
dec
dec
push
sub
ret
sbb
andb
pop
jns
loop
mov
test
out
mov
push
aas
xchg
sbb
cmp
push
cmp
in
push
add
mov
int3
pop
rcrb
pop
add
pop
mov
jl
outsl
and
std
or
xchg
addr16
xor
mov
mov
inc
cmp
and
cmp
dec
mov
mov
sahf
sbb
mov
sub
in
and
inc
in
in
dec
push
or
out
push
inc
faddl
sbb
nop
orb
out
sbb
adc
add
dec
pushf
enter
mov
test
jns
cli
push
popf
xchg
inc
add
jne
mov
aas
lods
pop
dec
sbb
loopne
addr16
jb
jmp
in
jns
cld
and
ljmp
inc
push
mov
repnz
sub
mov
sub
das
sbbl
sbb
dec
lahf
sbb
mov
jl
cmp
rclb
mov
movsl
pop
inc
cmp
jg
or
mov
std
cmc
adcl
adc
dec
jno
add
add
ljmp
sbb
jg
ret
enter
push
add
int
lock
cmp
pusha
pop
add
in
in
mov
ret
inc
mov
or
les
jl
add
push
mov
push
les
dec
pop
cmp
or
mov
test
cmp
push
dec
push
mov
inc
sub
inc
push
dec
mov
bound
sub
adc
fsubp
push
out
push
lea
or
lock
loop
ret
mov
das
dec
jne
out
sub
or
sahf
add
adc
data16
or
out
ret
clc
pop
stos
lret
in
jecxz
xchg
pop
ja
push
iret
lahf
aad
jno
out
xchg
xlat
push
rcr
mov
pop
sbb
and
inc
cmp
and
int3
ds
pop
shlb
in
repz
fs
mov
cs
aad
xor
pop
pop
iret
les
loopne
xchg
scas
push
in
and
inc
dec
adc
in
xchg
cli
dec
lcall
and
arpl
jne
lcall
les
or
in
cmp
inc
or
pop
mov
loope
mov
lock
xor
xor
test
sbb
jmp
cld
cmp
mov
push
fsub
xchg
or
pop
adc
lock
add
aas
in
pop
push
notl
stos
jne
dec
mov
or
or
les
cmp
imul
fs
sbb
adc
imulb
push
jecxz
ret
insb
inc
mov
in
cmp
notl
xor
inc
pushf
fisubs
pusha
mov
jl
xor
rclb
add
cli
test
xor
inc
and
inc
add
add
jno
jge
push
or
popf
scas
dec
pop
jnp
data16
pushf
repnz
jae
adc
out
in
push
push
lahf
push
cmp
lods
cmovs
mov
das
adc
pop
aas
cwtl
cwtl
inc
pop
mov
push
lahf
add
std
push
push
dec
sbb
push
cs
fwait
pushf
fdivrp
dec
and
into
xor
inc
mov
sbb
int3
add
std
aad
xlat
seta
insb
and
das
push
push
fmull
xor
and
out
test
es
xor
movsl
add
jecxz
jmp
sbb
push
inc
pop
sbb
push
lcall
int
inc
iret
pop
jno
cmpl
in
xor
push
popf
add
push
loop
icebp
and
rorl
push
pop
mov
or
in
sbb
fldcw
adc
movsl
cmp
subb
mov
and
push
mov
scas
imul
pop
add
clc
insb
and
pop
or
fldenv
jno
jo
push
cld
insb
sbb
arpl
cmp
or
add
adcb
test
push
push
cwtl
sahf
xchg
cld
xchg
mov
jp
inc
out
push
daa
jno
push
adc
mov
subb
mov
int
movsl
add
cld
cld
dec
stos
or
inc
lahf
inc
popa
adc
test
dec
les
jb
dec
shll
adc
xor
pop
stos
dec
adc
sub
lods
andl
test
stos
pop
fsubr
fdivrl
cmp
mov
enter
icebp
dec
mov
pushf
pop
dec
jmp
fstpt
call
cmp
outsb
dec
adc
cmp
xlat
or
imull
push
icebp
mov
add
cmp
push
mov
mov
fnsave
dec
mov
jp
hlt
loope
jmp
adc
pop
push
and
aaa
push
lahf
xchg
test
insb
int
and
ret
movsb
into
pusha
adc
adc
pop
in
mov
fs
add
lods
xorb
loopne
enter
decb
inc
mov
leave
call
or
imul
xlat
cmp
push
xor
pop
sub
mov
xor
stos
addr16
and
mov
dec
xchg
stc
xchg
cli
xor
hlt
jle
dec
pop
addr16
sbb
sub
dec
sbb
and
and
add
cmp
movl
jmp
int
pop
les
jo
xchg
ljmp
popf
and
test
mov
and
std
shrb
stos
xor
pop
xor
push
and
ds
sbb
shll
xor
stos
lea
adc
cmp
xchg
add
cwtl
loop
shrb
sahf
mov
mov
sbbb
out
dec
push
sbb
pop
add
test
hlt
pop
repz
add
daa
dec
adc
push
push
xchg
into
shlb
push
ss
mov
mov
push
jnp
cwtl
test
inc
mov
mov
adc
mov
popf
daa
cwtl
sahf
inc
outsl
js
mov
nop
loopne
push
cwtd
dec
jo
imul
aam
adc
fidivs
jbe
pushw
and
push
sbb
cmpsl
outsb
ja
mov
ficoms
and
lods
mov
mov
dec
xchg
stos
xor
push
pop
mov
sbb
xor
out
jle
pop
call
mov
stos
jns
mov
push
push
fcmovnu
pop
fwait
and
xchg
or
or
insb
adc
lods
in
inc
add
mov
mov
jge
movsl
stos
jecxz
ret
dec
jg
cmp
ss
repnz
xor
fwait
cmpsb
sub
lods
cld
fbstp
cs
and
lcall
lret
or
gs
orb
test
mov
rorl
aad
aam
pusha
es
mov
sar
pop
sub
push
push
cmpsl
dec
xchg
and
sarl
clc
test
rorb
pop
icebp
inc
das
movsb
sbb
subb
idivb
inc
les
test
shll
adc
inc
lds
test
push
xchg
cmc
mov
movsl
jp
das
and
push
jno
pushf
mov
cmp
std
add
inc
decb
cmp
shlb
pusha
dec
xor
scas
inc
fstps
and
loop
pop
loopne
push
dec
mov
and
sbb
add
sub
sbb
rclb
cmc
inc
dec
nop
mov
pusha
mov
inc
xchg
adc
scas
add
xchg
out
inc
pop
mov
loopne
lahf
fstpl
push
dec
xchg
cmp
into
enter
cmp
les
movsb
mov
insb
or
mov
imul
adc
loope
arpl
das
and
mov
sub
test
and
mov
xor
jno
mov
aas
mov
lahf
push
test
pusha
push
add
dec
sbb
repz
pushf
pop
cmpsb
jb
cmc
pop
cmp
imul
jnp
xor
cmp
push
rclb
jle
jns
fisubrl
jns
int3
cmpl
test
or
shll
daa
fsts
dec
sarb
fsub
pushf
pop
sarl
jae
cmp
push
subl
xor
lock
inc
ss
subl
jl
orl
add
push
sbb
mov
cmp
add
push
ret
movsl
dec
sub
pop
xor
int3
lock
or
aam
loop
add
and
mov
incb
and
mov
inc
inc
cmpsb
int
pop
in
jb
std
xor
jno
enter
xor
push
jl
and
cmp
dec
sti
mov
jle
cmp
test
ja
test
dec
loopne
sub
or
ds
mov
push
mov
cld
insb
andl
mov
ds
loopne
sub
or
push
aam
imul
pop
data16
mov
push
notb
outsb
lods
adc
sbb
adc
shrb
sub
sub
jle
pop
jg
inc
mov
mov
adc
push
mov
popf
pushf
cmp
xchg
sbb
fcomip
or
and
sub
mov
mov
lahf
test
push
push
mov
cmp
lea
cmp
rol
pop
cmp
push
mov
pop
out
push
ds
adc
ljmp
out
hlt
adc
mov
add
lahf
sub
sbb
cmp
jmp
sub
gs
jne
fisttps
std
lock
inc
clc
fisubs
sub
pop
push
adc
mov
push
gs
mov
sahf
dec
movsl
xorl
jns
cmp
stos
test
in
xor
mov
inc
rcrl
dec
fmull
sbb
pop
cltd
sbb
xor
and
cmc
sub
cli
lcall
add
std
test
jo
cwtl
sbb
lea
arpl
pop
add
mov
inc
out
jns
jge
and
mov
cmp
dec
in
cmp
mov
push
sub
es
xor
pop
jno
out
pop
pop
jnp
jne
fmull
test
adc
mov
nop
cmp
cmp
sbb
rclb
or
cmpsb
std
popf
push
xchg
sub
fstpl
adc
fsubrl
push
mov
stos
test
sbb
jb
lahf
addr16
jge
push
jle
and
sbb
mov
xor
mov
xchg
dec
lods
cmp
sub
jno
test
fs
fistpl
sub
and
or
sbb
add
or
adc
ret
push
and
push
movsb
mov
ret
imul
popa
gs
dec
out
pop
pop
cmp
insb
cmp
mov
mov
outsl
mov
nop
divl
mov
xor
cmc
jnp
and
movsl
fcomip
or
stos
xchg
sbb
cli
ret
jp
sbb
bound
aad
sub
jl
cmp
or
cmc
insb
iret
fisttps
addr16
cltd
cwtl
sbb
or
stc
xchg
cmp
lods
jne,pn
adc
add
imul
out
pop
xchg
out
repz
cmpsl
push
push
inc
sti
into
aam
insl
mov
adc
aam
xor
out
rolb
cltd
mov
fwait
out
pop
out
shlb
and
pop
and
and
mov
insl
dec
pop
sub
push
repnz
xor
frndint
mov
cld
int3
into
fnsave
into
mov
loopne
and
test
ret
jle
fwait
pop
imul
pop
bound
mov
cltd
adc
dec
mov
fldenv
in
or
jl
jns
sarb
or
movsb
jecxz
mov
xor
stos
dec
xor
mov
bound
and
xlat
fisttps
push
cld
and
out
mov
jb
fisubrl
xchg
test
mov
and
stos
or
pop
sti
int
xchg
mov
fdivs
add
inc
mov
int
inc
dec
and
clc
and
stos
pop
out
add
mov
in
aad
pop
xor
fs
sbb
inc
push
sahf
or
xchg
orl
sbb
push
sub
xchg
fadds
xchg
dec
imul
pop
outsl
fstpl
sarl
call
cmp
arpl
mov
subps
or
pop
orb
cli
es
inc
mov
test
dec
imul
add
mov
xor
pop
icebp
popf
add
add
jmp
sub
dec
jl
pop
pop
int3
sub
push
icebp
pop
or
dec
notl
pop
popf
or
addr16
in
add
inc
out
push
in
cmpb
push
jb
and
je
shlb
pop
xchg
fxch
in
leave
mov
call
call
mov
ret
or
xor
mov
mull
outsl
jae
call
mov
call
out
mov
in
arpl
sahf
pop
in
gs
push
ret
sub
aaa
es
movsl
xchg
sbb
pop
sub
maskmovq
pop
mul
pop
das
mov
mov
push
and
fildll
mov
arpl
and
jne
push
cld
sub
inc
xor
lods
mov
pop
stos
in
mov
mov
xchg
lahf
sub
mov
push
and
xchg
cmpsb
pusha
inc
mov
test
sarl
popf
aas
jmp
flds
xlat
adc
aam
int
lock
popf
and
stos
pop
add
fldenv
add
sub
xchg
cmc
lods
inc
xchg
nop
push
mov
rcrl
fcmove
add
xor
notb
inc
movsb
cmp
mov
add
push
cwtl
pop
add
insl
xor
out
or
adc
push
cmp
cld
pop
roll
inc
adc
fmull
mov
ja
insb
rcrl
jmp
cld
dec
stos
push
loopne
jo
inc
roll
push
insb
or
jne
inc
mov
dec
cli
lock
fsubrl
cmp
lods
push
and
adc
adc
subl
mov
roll
mov
jl
movsl
adc
mov
jbe
leave
fisubl
or
stos
sbb
push
jle
and
jo
mov
in
bswap
ret
les
xchg
clc
add
rcrb
and
jl
or
or
inc
push
adc
and
sub
and
jp
out
bound
fcomps
mov
push
test
add
xchg
adc
std
and
inc
test
and
dec
mov
movsb
les
int3
and
xchg
shlb
mov
and
mov
mov
cmp
shlb
bound
push
and
test
inc
mov
jle
jecxz
jl
mov
pandn
add
add
push
inc
sbb
sub
add
gs
pusha
and
push
dec
sub
aam
cltd
mov
cld
test
or
enter
and
lcall
movb
and
pop
jge
cld
add
pop
leave
jl
sbb
mov
mov
dec
or
mov
popf
adc
fsubl
mov
jl
inc
std
test
shlb
aaa
and
sahf
cmp
loope
popa
ljmp
xchg
fdivrl
scas
cmp
pop
xchg
adc
pop
jecxz
lret
pop
dec
shrl
sub
test
lahf
mov
push
pop
sti
mull
dec
sarb
pushf
std
push
xchg
xlat
sbb
jg
fidivrs
es
add
lock
lahf
stc
stos
pop
lret
xchg
rcrb
add
mov
insb
test
push
adc
or
cmp
pop
inc
sub
jl
repnz
and
and
mov
inc
cmp
out
cmpsl
cld
and
cmpsb
sbb
or
enter
cmp
sahf
imul
mov
jle
ljmp
dec
cmp
or
scas
rclb
sti
into
shrb
jmp
jno
xchg
mov
insl
push
iret
adc
add
xchg
call
xor
xor
and
pop
fldcw
jmp
stc
cld
sti
data16
and
mov
out
mov
adc
outsl
and
dec
outsb
dec
sbb
cmp
dec
add
ss
mov
push
out
incl
xor
int
dec
push
mov
sahf
sub
pop
xor
dec
xchg
in
int
stos
or
out
jmp
std
jns
inc
xlat
adc
clc
lahf
out
stos
xchg
and
std
mov
sarb
decl
push
inc
enter
rcrb
pop
ret
test
es
loopne
scas
nop
sarl
push
stos
jl
lahf
xchg
insl
mov
pop
shll
mov
dec
xchg
scas
test
fs
cld
jae
mov
pop
mov
cmpl
pop
insl
mov
stos
push
pop
sbb
and
mov
out
lahf
cmp
pop
addr16
cmp
pop
and
loopne
bound
add
movsl
enter
cmp
shll
xchg
fildl
sub
mov
cmpsl
xchg
xchg
les
call
jl
pop
fwait
movsb
mov
daa
lahf
pop
ds
out
jns
xchg
fcomip
and
jns
xor
xchg
int
or
mov
pop
stos
testl
inc
sub
call
das
push
shrb
and
mov
adc
fdivl
and
out
lret
nop
out
rcrb
or
fildll
mov
jne
cwtl
ljmp
jns
andl
out
inc
lock
dec
jl
stos
aad
mov
xchg
mov
dec
stos
jb
mov
mov
sub
test
cld
popa
push
sub
mov
and
mov
sub
sbb
add
xor
pop
repz
out
adc
sahf
xor
mov
pusha
mov
movsb
xor
repz
test
pop
loope
and
jl
jl
in
hlt
and
jg
pop
sub
and
xchg
jl
gs
xchg
scas
mov
and
test
and
fs
cltd
cld
and
out
jecxz
lcall
icebp
js
sub
dec
xor
add
and
inc
loopne
out
or
dec
int
aam
push
and
scas
shrb
or
and
vpunpcklwd
mov
dec
js
int3
aad
and
cmp
pop
out
stc
test
lret
gs
pop
sub
xor
mov
jne
inc
sbb
popa
in
jp
scas
in
ds
clc
scas
mov
ss
lods
lahf
outsb
mov
xchg
mov
or
fnstenv
xchg
hlt
sub
rorb
sbb
sahf
mov
out
cmp
or
jbe
or
jl
jb
xchg
sub
push
and
mov
stos
or
dec
popa
clc
jmp
pop
repz
and
iret
inc
sti
push
fs
enter
cmp
lahf
or
dec
call
and
or
sub
add
lcall
inc
les
insb
popf
arpl
xchg
mov
int
ss
sub
adc
scas
mov
push
add
in
add
fmuls
gs
mov
shr
or
repnz
jo
mov
stos
or
test
inc
out
daa
cmp
xlat
cmp
outsl
sub
popa
lods
inc
sbb
push
cmp
mov
sbb
add
mov
add
xlat
xor
pop
call
sub
in
dec
int3
jnp
fs
inc
push
gs
sub
stos
jo
pushf
sub
imul
add
sub
test
lahf
or
loopne
push
cmp
stos
in
pop
pop
and
pusha
mov
adc
cli
arpl
out
gs
int
sbb
cmp
or
lahf
push
or
out
and
cmpsb
cwtl
int3
ss
aaa
out
lods
adc
jecxz
les
pop
out
notb
nop
icebp
bound
ja
cmp
push
les
cs
xor
push
inc
orb
rorb
and
mov
and
aam
fimull
mov
push
and
stos
ret
iret
mov
das
imull
loope
inc
out
sub
aad
rcr
sbb
ret
loopne
inc
icebp
punpcklbw
dec
sub
mov
addr16
cmc
fcmovnbe
mov
scas
push
mov
data16
push
pop
or
popf
sbb
popa
out
mov
das
push
xor
pop
shll
cmp
adc
jae
cmpsb
xchg
add
or
inc
loope
pop
pop
stos
mov
pop
push
push
das
add
aam
and
mov
push
mov
or
outsl
mov
mov
fldenv
sbb
or
popf
imull
stos
test
out
push
jecxz
mov
add
mov
cs
lock
rcr
movsl
push
cmpsl
divb
mov
adc
and
push
fwait
push
cli
sahf
xor
pushf
aaa
fstpt
push
insl
mov
mov
lods
imul
leave
dec
out
xorl
ja
cli
insb
daa
jmp
or
ss
dec
push
mov
push
stos
xchg
fsub
enter
rcr
outsl
pop
and
or
pop
setg
lea
dec
movsb
mov
push
and
mov
cmpsl
mov
pushf
mov
fidivs
xor
dec
pop
mov
fcomip
pusha
mov
jge
negl
or
iret
add
jb
in
lods
sub
mov
cmovl
add
jl
lahf
push
cmpsl
pusha
lret
pop
fldcw
dec
jns
test
and
jl
ds
stc
imul
mov
and
or
fcmovb
and
or
out
add
insl
add
or
push
pop
int
loopne
arpl
adc
mov
jae
sbb
push
dec
inc
mov
pop
sub
icebp
sub
nop
int
cmc
pop
aas
cld
dec
push
repz
jl
pop
int3
cmp
jmp
or
mov
sbb
adc
xchg
pop
inc
xor
dec
sub
mov
jge
or
sbb
pusha
and
and
mov
xlat
pop
adc
or
movsb
push
flds
mov
or
mov
jo
mov
testl
mov
pushf
jg
int
mov
sub
pop
ret
rol
mov
rcll
fsts
sarl
adc
in
dec
dec
sub
jo
xchg
fwait
inc
pop
sbb
dec
push
sub
lods
jnp
dec
test
int3
repnz
fimull
xor
aad
cmpsl
lret
mov
pop
cli
jne
push
add
push
fidivrs
int
mov
cltd
adc
mov
cld
mov
les
sub
inc
imul
cld
lahf
mov
inc
cli
shll
xor
sarl
outsb
jo
pop
push
add
lea
xlat
pop
pop
dec
mov
nop
aas
fiadds
push
aam
gs
cmp
mov
sti
or
mov
xor
js
fwait
and
mov
movsl
mov
mov
mov
cmp
test
fs
mov
aaa
xor
mov
pop
daa
mov
test
enter
fisubs
xor
js
add
xchg
idivb
mov
adc
cltd
hlt
sbb
iret
or
shl
and
push
sbb
fisubrl
pop
pop
sbb
hlt
fwait
imul
pop
and
or
pop
push
mov
mov
jae
mov
add
jl
stos
mov
and
and
cmpsl
cmp
fs
sbb
mov
or
pop
jge
adc
out
out
and
inc
lea
imul
sbb
jecxz
addr16
sub
bound
inc
cs
fiadds
xchg
test
xchg
cmp
mov
xchg
test
int3
out
or
push
adc
outsb
inc
and
das
rcrb
fisttpll
pop
fisubs
mov
add
and
ss
push
mov
movsl
dec
loop
shrb
and
mov
rcr
add
cmp
andb
lds
xor
adc
mov
mov
and
daa
add
and
cmp
dec
jne
dec
addr16
insb
cmp
or
xor
inc
add
mov
pop
and
fiadds
insl
lret
add
and
or
mov
mov
pop
and
ss
and
dec
xor
push
cmp
mov
loop
and
pop
lcall
pop
clc
jle
mov
popa
push
movsb
xor
cld
and
out
popa
ror
lods
lret
push
cmp
cli
sub
add
sbb
sti
or
push
aas
inc
mov
or
dec
mov
cmp
adc
sbb
push
cmp
push
pop
cvtps2pd
clc
andl
repz
or
cmovo
push
pop
mov
lods
sahf
adc
sbb
mov
dec
push
fistps
sbb
jne
and
sub
xchg
xchg
or
pushf
inc
sub
negb
les
mov
int
xchg
das
and
inc
dec
sarl
bound
or
sti
mov
xor
out
xor
pop
pop
addr16
xchg
dec
pop
sub
lods
mov
inc
lock
loope
and
inc
lret
stc
cld
lea
push
or
lahf
popa
imul
enter
fisubs
push
mov
adc
cltd
xchg
jl
or
ljmp
pop
jg
test
or
push
and
jge
or
iret
jg
and
mov
add
inc
adc
popa
into
aad
push
adcl
int
cmp
out
push
loopne
mov
in
dec
xchg
or
mov
mov
imulb
xchg
stos
mov
cld
jns
pop
fists
ret
nop
in
adc
loop
sbb
call
stos
push
sub
loopne
xor
mov
sbb
inc
sti
fbstp
out
fistl
sub
and
stos
popa
ja
cmp
xchg
push
jno
jns
cltd
sbb
xchg
js
and
ja
xor
popf
je
pcmpeqw
pop
jbe
sub
pop
mov
mov
mov
add
adc
mov
loop
pop
push
scas
sbb
cld
add
imul
mov
test
jne
push
xlat
std
pushf
add
and
inc
or
aam
sti
std
notb
or
loopne
or
or
imull
push
and
inc
fsubl
cmp
push
or
pop
jne
cld
shll
rcl
or
rorl
fiaddl
adc
je
std
mov
jg
orl
mov
push
xor
dec
sbb
loop
pop
lods
add
inc
and
outsl
sub
and
das
cmpb
test
pushf
in
jge
mov
cmp
inc
cmp
jle
out
xchg
mov
sahf
enter
mov
and
insl
sbb
loop
cmp
and
pop
jl
je
movntq
add
ss
outsl
jle
das
sarb
and
ret
bound
and
das
add
and
imul
rcrb
dec
into
jle
adc
lods
xor
lds
jle
xchg
sarb
loope
bound
into
jle
das
inc
int3
and
es
sub
push
and
jl
jle
add
add
outsb
jle
test
sbb
lahf
fisttpll
lods
ret
mov
mov
in
xor
add
and
add
pop
and
xchg
push
jle
sbb
mov
cwtl
aam
mov
insb
sub
ss
daa
and
leave
jle
push
mov
adc
xorb
je
add
fdivrl
push
cld
mov
cmp
loope
stos
scas
cs
inc
sbb
cs
sbb
fdivp
xor
ja
stc
adc
mov
jg
gs
xchg
and
std
int
sbb
cwtl
pusha
sahf
mov
xor
mov
and
pop
dec
sahf
out
push
or
in
popa
xchg
mov
sbb
pushf
inc
mov
mov
and
movsl
cmp
mov
jle
sub
movsb
fldl
lods
inc
scas
int3
or
jecxz
std
mov
fidivs
cmp
mov
xchg
into
repnz
sbb
dec
and
mov
push
cld
insb
nop
add
inc
pop
lock
int3
add
jae
stc
pop
int3
shlb
test
add
push
add
stos
sub
pop
dec
and
mov
and
out
sti
inc
and
int3
pop
lods
data16
ss
xchg
out
fimuls
lret
mov
cmpl
jecxz
xor
jecxz
sbbb
jne
jp
jle
cmc
test
jle
inc
dec
pop
lahf
pushf
and
bound
mov
cli
pushf
xor
stc
shrl
lea
int
adc
stos
jno
aad
mov
adc
mov
lea
cwtl
xchg
mov
aaa
push
mov
or
cld
push
fisubrs
insb
sbb
in
or
fistpl
sub
loopne
out
into
lds
jl
mov
out
xchg
mov
ret
add
enter
lock
test
cmpsb
pop
stos
push
mov
push
arpl
push
mov
sub
in
cmpsl
pop
or
xchg
call
repz
int
sbb
sbb
dec
xor
dec
xlat
lods
inc
cmp
dec
sub
and
div
push
xchg
push
and
pushf
loope
sar
lods
sbb
add
push
mov
mov
push
jns
stos
mov
adc
sarb
jne
dec
mov
pop
divps
add
movsb
and
push
dec
stos
dec
xchg
subb
mov
xor
les
mov
movsb
xorb
cs
mov
add
push
scas
add
pop
adc
pop
movsl
mov
mov
out
js
loopne
inc
int3
lea
test
pop
sub
adc
push
inc
insb
sub
mov
sub
aad
cmp
xchg
in
xorb
mov
push
inc
imull
outsb
lea
and
add
or
test
xor
mov
repnz
decb
scas
or
and
inc
pushf
outsl
and
adc
das
and
push
mov
dec
popa
pop
jo
jecxz
or
inc
push
loop
pop
and
cli
jle
lret
mov
loopne
negl
test
jbe
add
mov
rclb
xor
aad
int3
add
inc
mov
or
mov
add
icebp
or
pop
mov
and
adc
ficoms
lahf
test
adcb
mov
in
lods
and
das
add
mov
dec
std
mov
in
xor
mov
or
push
movsl
inc
mov
jns
adc
jmp
and
cmp
or
ret
in
cmp
leave
fmul
jecxz
mov
jl
mov
pop
and
dec
enter
loopne
popa
ficomps
jg
ret
push
and
xchg
or
push
repz
rolb
pop
sbbl
push
xchg
hlt
popa
fsubrl
push
pop
mov
popa
sub
mov
mov
flds
movsb
sbb
pop
dec
inc
sub
outsb
das
mov
inc
and
inc
or
pop
stos
cmp
daa
mov
and
jecxz
in
inc
popa
cld
popa
sub
push
and
cmpb
inc
and
iret
push
hlt
cld
in
xor
shlb
mov
cld
test
xchg
aaa
gs
jo
movsl
add
add
jae
pop
sub
push
jl
inc
pop
ja
adc
mov
cmp
rolb
cwtl
int
pop
outsb
xor
outsl
xchg
sahf
jb
outsb
jno
lods
xchg
pop
arpl
push
sbb
or
enter
cs
push
xchg
mov
or
sub
inc
sub
mov
pop
cmpsb
xor
jo
movsb
and
pop
ret
aad
pop
sahf
test
js
pop
mov
push
or
pop
rcrl
cmp
ljmp
andb
push
pop
inc
notl
out
inc
or
or
imul
pop
lods
jg
xlat
add
inc
jmp
dec
sbb
push
fs
jne
iret
cs
xor
pop
pusha
shrl
mov
inc
shlb
push
sbb
dec
lahf
adc
mov
push
push
pushf
xchg
cmpsb
mov
loope
loopne
in
dec
mov
insb
int3
in
xchg
add
jl
sbb
xor
or
xchg
jl
dec
dec
add
test
cs
dec
jbe
jl
movsb
test
push
xchg
pop
scas
mov
gs
xor
jae
andl
int3
lods
fs
push
mov
ret
dec
and
inc
popa
mov
addr16
cmp
pushf
movsl
dec
inc
push
je
jle
mov
sub
add
or
push
mov
mov
add
push
cmpsb
nop
inc
out
popa
pop
mov
es
push
inc
inc
mov
ret
aas
dec
mov
rorl
frstor
lock
sbb
icebp
jmp
out
sahf
xchg
ficompl
pop
xlat
scas
mov
scas
aas
data16
leave
add
test
sbb
cli
add
xor
jbe
nop
xchg
stos
sahf
dec
inc
jnp
cmp
or
test
aas
or
aam
add
and
fisttps
lods
out
mov
imulb
sbb
add
test
push
popf
enter
push
out
icebp
and
test
mov
add
adc
inc
mov
stos
movswl
pushf
xor
pop
mov
loop
aaa
mov
repz
sub
and
scas
mov
dec
pop
test
mov
popa
xor
sahf
je
dec
daa
mov
or
mov
adc
rcrb
pushf
cli
jns
cmp
jb
mov
loope
out
imul
jo
cmpsl
push
stos
dec
or
cmp
lret
insb
mov
dec
dec
cmp
sub
dec
jp
movsl
pop
adc
add
add
adc
cld
bound
sbb
cmp
jl
lods
nop
or
or
dec
sub
jp
push
je
or
mov
test
and
std
outsl
mov
add
sbb
fwait
dec
lahf
mov
push
jl
jb
notb
std
sub
cmpsl
pushf
cwtl
pop
add
adc
das
inc
int3
inc
outsl
clc
scas
adc
lahf
aaa
xor
or
verr
cmp
mov
out
add
movsl
jne
jecxz
cmc
imull
pop
xchg
outsl
pop
fiaddl
pushf
dec
in
push
aas
push
stos
mov
ret
es
repnz
lret
mov
ret
pop
cltd
cwtl
bound
xchg
add
mov
jp
daa
xlat
sub
dec
lret
inc
shl
lret
sbb
sub
push
inc
jmp
push
pop
imull
pusha
sbb
int
push
fstpt
xor
shlb
push
mov
mov
inc
or
xor
inc
mov
ljmp
or
popf
and
jl
push
sti
fsts
xor
and
clc
and
or
stos
push
add
stc
push
or
or
loop
in
jp
xchg
rorb
and
nop
pop
das
and
xorb
and
mov
test
inc
pushf
pusha
std
cmp
push
and
sbb
mov
add
pop
inc
inc
test
adc
dec
ret
dec
adc
dec
loop
test
fs
add
push
adc
and
or
gs
aaa
subl
in
cmp
xchg
mov
mov
push
jne
daa
out
mov
and
push
or
or
cmp
jnp
sbb
cmp
mov
jbe
loope
out
mov
and
pop
mov
sbb
or
pushf
xchg
pusha
gs
jb
and
das
shlb
xlat
popf
loope
dec
ret
jecxz
outsb
cltd
pop
pop
jl
xchg
lea
pop
cmp
jp
out
rclb
aas
mov
inc
idivb
in
pop
cmp
enter
test
sahf
jb
pop
xchg
aad
std
and
es
test
and
bound
and
or
daa
ret
pop
test
xchg
or
mov
mov
popf
pop
cmp
add
inc
jb
out
cwtl
xor
arpl
pop
mov
ficompl
mov
inc
or
out
popf
jno
aaa
orl
sbb
das
popf
fneni(8087
in
mov
or
hlt
std
bound
lock
xor
xchg
dec
and
pop
add
cmc
add
movsl
xor
cmp
xchg
add
mov
ret
popf
push
inc
cmp
mov
push
aas
pop
or
adc
pop
push
shll
cmp
fstl
hlt
and
sbb
notb
mov
in
cmp
mov
pusha
pop
cs
sbb
fstl
test
adc
and
add
lea
cmp
cmp
push
pop
adc
pusha
into
push
fildl
in
add
mov
out
dec
and
jns
gs
dec
dec
add
jbe
mov
xor
push
repz
push
sti
cs
pop
push
inc
jecxz
inc
sti
jnp
sbbb
add
jle
popa
dec
ljmp
mov
jp
dec
fst
pusha
popf
ja
pop
out
faddl
insl
pushf
inc
sti
pop
cs
mov
leave
into
dec
stos
out
mov
lret
xor
xor
xchg
adc
stos
pop
imul
mov
or
dec
sub
cmpsb
cmp
and
lea
test
cmp
orb
pop
dec
mov
in
mov
jne
pop
movsb
cmpsb
or
jle
sbb
and
pop
add
push
add
fcompl
push
add
mov
inc
and
sbb
pop
mov
inc
and
fidivl
sbb
test
or
pop
and
mov
mov
jl
roll
pop
loopne
pop
xlat
stos
pop
ret
and
pop
dec
popf
sbb
loope
jle
mov
mov
fsubs
fwait
mov
rcrl
and
dec
or
push
inc
dec
or
sub
mov
pop
and
xchg
push
dec
inc
mov
xchg
xor
inc
mov
xchg
lea
adc
shlb
addr16
sbb
sahf
test
and
das
stc
lcall
xlat
pop
in
jo
shll
xor
call
lock
in
xchg
mov
std
int
or
add
int
and
cmpsb
mov
push
les
sub
pop
inc
aas
ret
shlb
or
mov
sub
aad
sets
int3
jb
cmpsb
push
push
add
lods
fnstsw
pop
shlb
xor
dec
addl
or
loope
iret
sarb
dec
or
push
mov
sahf
test
test
in
or
xor
popf
int
and
clc
dec
cli
lods
sti
adc
nop
push
bound
xor
enter
mov
push
aad
test
push
pop
pop
cld
add
or
cmpsl
mov
push
jns
inc
in
xor
mov
xor
sub
int
shll
lods
int
pop
outsb
les
test
test
test
xorb
adc
stc
push
fcomps
out
sub
push
pop
jmp
les
jl
adc
lahf
mov
jne
adc
cmpb
push
cmpsb
jl
or
mov
int
sub
xchg
imul
hlt
add
jmp
jge
xor
or
rcrb
and
popa
pusha
cmp
jne
xchg
inc
adc
dec
or
inc
and
cmpsl
iret
fwait
jl
inc
loope
sbb
mov
test
ret
or
aaa
xchg
sub
mov
mov
add
in
je
loopne
push
aad
dec
cmpsb
push
adc
stc
aaa
mov
in
pop
je
jb
mov
dec
pop
cmp
push
pop
or
or
imul
pop
ds
mov
std
subb
mov
and
call
ret
push
filds
adc
and
mov
sbb
sbb
inc
rorl
dec
je
sub
and
sbb
shll
sbb
sbb
push
je
mov
inc
add
add
adc
push
dec
push
aaa
or
inc
jns
cli
sbb
pop
pop
idivl
pop
cmp
test
das
jge
fisttpl
movsb
mov
push
push
test
push
xor
cmp
mov
mov
jg
mov
popa
out
popa
xchg
das
xor
pusha
sub
shr
popf
cmpsb
sub
and
jns
mov
push
mov
fsubs
sub
cmp
mov
xchg
repz
testb
inc
mov
add
movsl
ss
pop
lahf
xchg
lods
scas
pop
mov
jne
les
inc
sub
adc
inc
out
jo
call
inc
pop
adc
sbb
decl
xlat
add
shr
and
inc
add
out
push
lds
test
mov
je
mov
fnsaves
and
sub
fcmovnb
and
aas
or
test
leave
xlat
push
pop
outsl
int
and
aas
stos
mov
mov
xor
fwait
add
nop
dec
and
lock
lahf
and
or
inc
sahf
mov
or
jecxz
inc
adc
push
ret
or
mov
jne
push
call
popa
add
mov
inc
outsl
pushf
addr16
push
int3
mov
xor
dec
call
fwait
mov
jbe
fs
movsl
inc
pusha
cmp
xchg
mov
dec
pop
leave
sub
mov
jmp
popf
test
push
cmp
stos
adc
adc
int
push
mov
repnz
cmc
and
sarl
pushf
in
sbb
mov
sub
adc
lock
add
sub
inc
test
lods
enter
lea
mov
add
sbb
mov
insb
cld
sbb
sbbl
sbb
icebp
mov
or
pop
push
dec
popf
sbb
in
xor
cmc
pop
inc
out
mov
xchg
cmp
cmc
int
sti
sbb
cld
lds
or
jge
insl
add
mov
or
pusha
push
and
idiv
pusha
sti
das
stos
mov
mov
mov
inc
inc
sub
mov
aaa
lahf
in
adc
or
popl
scas
rolb
xor
mov
jne
fisubrs
hlt
mov
or
pop
and
imul
or
flds
sbb
sti
sub
sbb
aad
or
je
mov
loopne
pop
jns
jle
lret
inc
sub
sub
loop
pusha
xchg
cmp
and
or
stos
mov
inc
fisttps
sbb
sub
insl
shrl
call
xor
icebp
int3
sub
pop
fisubrs
adc
out
jno
das
int
jg
out
mov
mov
pop
testb
pop
jle,pn
icebp
push
cli
stos
loop
in
fmull
cwtl
adc
push
pop
test
mov
add
loopne
pushf
rcll
gs
leave
sbb
aaa
mov
jns
out
aad
adc
mov
in
mov
ljmp
les
mov
stos
out
repnz
and
rorb
in
addb
fs
unpcklps
sub
stos
cmpsl
jp
enter
dec
push
out
sbb
les
stos
or
sub
pop
pusha
sub
cmp
and
cmp
and
lock
dec
test
pop
sub
fcoml
stos
out
pop
dec
adc
cmpsb
test
xchg
insl
inc
arpl
scas
hlt
inc
cld
inc
fdivrl
push
fistpll
int
fwait
push
push
pop
cmp
xor
inc
lcall
jbe
xor
jp
out
aaa
mov
das
push
mov
ret
dec
out
ret
xchg
mov
or
jns
test
xchg
fdivrl
cmp
push
or
fisubrs
mov
pop
fsubrl
cmp
fbstp
popf
lahf
push
jns
and
jo
jle
das
sbbb
popf
lret
fildll
je
push
lahf
xchg
test
pop
mov
in
cmp
or
in
aas
xchg
cld
jle
or
fcompl
sub
or
fimuls
insl
sahf
sarb
lea
fstp
popf
pop
mov
dec
mov
pop
add
or
push
sbb
pop
inc
stos
inc
push
adc
test
loopne
jle
into
lea
test
jnp
rorb
sti
pop
loopne
mov
xchg
lcall
out
and
rcrb
or
and
sbb
xor
daa
cld
sub
push
add
pop
push
jecxz
insb
test
pusha
fsubl
cmpsl
mov
jge
or
push
jl
mov
in
sbb
data16
ror
push
jns
push
lods
fwait
ja
scas
push
iret
push
or
xor
in
mov
ret
xor
sahf
ds
fimuls
lahf
sub
ss
cmpsb
and
sbbb
mov
jle
movsb
jl
mov
lods
fucom
jp
icebp
push
roll
and
popa
fwait
and
cs
shl
and
xchg
dec
mov
pop
out
pop
inc
cmc
clc
push
shl
jb
cmpsb
inc
mov
lea
lods
add
lahf
in
jg
test
fdiv
scas
push
add
cltd
jp
sbb
add
int
and
in
in
fsts
sti
xor
pop
and
and
xchg
fnsave
mov
fnstsw
out
adc
jle
fs
ja
mov
aaa
imul
negl
aad
cwtl
stos
xchg
ja
add
and
fstps
xor
jmp
xor
xor
jns
ljmp
ljmp
mov
les
cwtl
roll
cmc
sbb
dec
je
icebp
mov
and
repnz
subl
stos
inc
adc
movsl
fildll
or
pop
pop
rorl
jl
add
xor
cmp
mov
xor
mov
mov
gs
out
cmp
inc
fldl
sub
pushf
stos
mov
cmc
scas
bound
inc
xchg
lods
out
inc
gs
shlb
jmp
mov
lods
pop
and
sub
cmc
fs
out
jb
pop
daa
pop
inc
repz
or
loop
lods
aam
scas
cmp
cmp
ljmp
jo
gs
test
sub
adc
insl
je
cmpsl
xorl
and
mov
les
lock
xor
mov
xchg
cmc
adc
sub
fsubrs
shl
or
xchg
in
in
in
xor
fwait
inc
lods
push
and
cmp
jne
out
insb
cli
rcr
rcrb
ret
fldt
mov
imul
test
push
cld
and
mov
push
enter
jo,pn
fmuls
mov
pop
or
sub
or
in
push
xchg
leave
cld
mov
dec
or
fldcw
mov
xchg
andb
sub
jne
push
pushf
or
dec
adc
lea
xchg
inc
fdiv
jnp
pop
ret
mov
sub
mov
imul
jno
test
and
outsb
shr
mov
addl
dec
or
xor
testl
mov
addb
test
jns
or
adc
cmp
cmp
push
rorb
xor
mov
sbb
insb
insl
pop
fistl
jns
sub
sub
cmovae
pushf
es
jne,pn
in
add
insl
mov
dec
jmp
mov
inc
cld
xor
repnz
out
pop
pop
stos
imul
pop
jne
clc
or
mov
lcall
incb
push
repz
repz
repz
repz
out
mov
xchg
insl
jae
mov
push
call
sub
add
or
insb
cmc
or
sbb
arpl
xadd
sub
mov
mov
jmp
hlt
add
sub
sarl
xchg
pop
sub
cmp
jl
xchg
dec
popa
cmp
pop
dec
fisttpll
mov
lds
sti
movsb
jge
test
out
pop
sub
mov
mov
jne
mov
add
int
pusha
mov
enter
inc
jmp
mov
icebp
sub
lahf
arpl
mov
mov
dec
dec
movsl
cld
add
lahf
jae
imull
aas
jno
fildl
mov
out
mov
cmp
scas
fistpll
outsb
dec
jns
js
insb
xchg
divl
mov
xchg
sbb
xor
sbb
adc
les
fnstcw
xlat
add
cmp
enter
adc
sub
popf
movsb
jge
add
xor
mov
dec
push
push
stc
arpl
mov
inc
lds
in
jnp
arpl
clc
or
mov
fwait
sbb
adc
movl
popf
mov
lahf
out
or
adc
int3
sub
fs
jl
sbb
xor
in
es
pushf
mov
add
mov
push
dec
shlb
jns
stos
xchg
xchg
pop
pop
imul
sysret
inc
push
cmp
cmp
cld
push
push
mov
fidivl
test
xor
add
dec
jp
pop
xchg
aad
int
push
or
push
push
dec
jno
pop
xor
ss
sub
iret
loop
scas
popf
movsl
xchg
repnz
dec
cmovp
movsb
sbb
sarb
pusha
addb
xorb
bound
inc
fcmovbe
mov
xor
in
dec
jl
add
test
call
das
iret
adc
popf
cltd
dec
movsl
cmp
push
lahf
clc
jae
pop
loopne
mov
testb
mov
xor
or
sti
cmp
out
xlat
push
out
add
sub
cmp
std
call
adc
inc
mov
popa
les
insb
cli
lods
ss
mov
pop
jp
shr
insl
rdtsc
jo
repz
sbb
or
inc
repz
adc
stos
fwait
movsl
add
jl
xor
in
adc
stos
push
add
push
xchg
test
fistl
ds
ljmp
jl
imulb
std
stos
xor
xchg
cmc
sarb
mov
and
movsb
pushf
stos
dec
sbb
mov
and
shrb
pop
daa
loopne
jbe
pop
and
ss
and
mov
xor
or
lds
or
jne
and
mov
dec
mov
negl
fucomip
jmp
adc
xchg
mulb
pushf
and
lahf
out
mov
and
mov
sub
dec
lahf
mov
xchg
xchg
das
xchg
and
and
shl
rorl
in
add
mov
add
loope
push
popa
sub
xchg
adc
jge
loopne
add
xchg
xor
nop
dec
movsl
sti
xor
mov
cmpsb
xchg
jo
testb
lods
aaa
lock
pop
mov
pusha
aad
lods
mov
push
jne
or
mov
push
cmpsb
sub
adc
inc
dec
push
nop
cmp
dec
rcr
mov
push
push
pop
popa
pop
mov
pop
inc
inc
sub
push
pop
xor
outsl
or
hlt
xchg
xor
iret
jbe
in
mov
cli
cmp
ficompl
push
ja,pn
mov
inc
rorb
and
pop
flds
push
push
add
popa
lea
push
inc
aaa
mov
es
jo
mov
xchg
mov
lock
gs
add
aad
outsb
and
cmpsb
test
cltd
pop
ret
jl
movsl
out
arpl
cli
clc
jae
dec
ss
ss
inc
mov
ror
sbb
enter
pop
and
mov
or
stc
lcall
fbstp
in
add
clc
scas
inc
sahf
int
and
xchg
nop
jnp
sub
xchg
mov
loope
je
cltd
icebp
xchg
test
scas
lods
jne
sub
cmpsl
xchg
push
push
sub
or
roll
pushf
sbb
sub
imul
in
push
cld
sub
cmp
loope
js
adc
arpl
mov
add
push
adc
lea
scas
outsl
sbb
mov
add
xor
fs
sahf
push
and
cmp
sub
inc
aaa
lock
fucomp
cmp
call
sub
enter
in
outsl
add
int
and
js
insl
xchg
jb
aas
int
jmp
outsb
les
inc
jns
mov
push
das
cmpsl
cwtl
jp
mov
add
test
test
xchg
mov
xor
std
push
es
mov
add
sub
add
add
or
out
xor
jnp
pop
test
sqrtps
pop
push
jecxz
jo
fmull
mov
lahf
sub
mov
les
xchg
sub
cmpsl
idivl
pushf
js
cmpsl
lock
lock
xor
and
rcll
in
sub
gs
cmp
sbb
xor
lahf
cmp
fimuls
cwtl
fdivl
dec
test
pop
sub
or
mov
mov
or
scas
and
jne
ss
sub
cmp
or
adc
sbb
jl
in
lret
jp
xlat
add
cmovl
adcb
mov
movsb
dec
dec
mov
clc
inc
mov
shll
fsubrp
fs
adc
jbe
inc
fmull
push
je
es
pop
push
enter
adcb
sub
adc
cmp
jecxz
mov
add
cmp
mov
sbb
pushf
xchg
out
stc
mov
loopne
pop
dec
cld
es
and
dec
jns
jae
jecxz
or
pop
or
cmp
add
xchg
aas
and
or
sub
add
or
sbb
cmp
jl
cld
lods
das
add
lar
cwtl
rcrl
push
int
popa
movsb
lahf
mov
jge
pop
test
repz
inc
push
or
scas
mov
pop
loop
and
push
xchg
sbb
sub
fisttps
push
sbb
mov
inc
mov
test
push
in
inc
sbb
shlb
sub
push
dec
or
rcll
shrl
xor
lock
gs
in
loopne
lea
ja
jne
data16
out
inc
mov
sahf
sbb
mov
xchg
adc
pop
ret
int3
push
adc
test
jl
inc
jle
lret
xor
jne
pop
xor
pop
cld
inc
adc
enter
push
or
and
fisubs
out
sahf
xor
faddp
cs
loopne
icebp
or
adc
cmp
fidivl
stos
ja
inc
or
sub
jb
sbb
imul
and
mov
pusha
jl
outsl
xor
icebp
std
xchg
add
fisubrl
or
jecxz
mov
adc
inc
cmpsb
mov
add
add
mov
fistpl
loope
cli
xor
xor
adc
cmp
inc
jo
les
push
push
les
xlat
add
mov
arpl
jg
in
xchg
and
inc
add
and
jge
leave
and
jne
enter
dec
popf
adc
and
pop
dec
or
ja
xchg
sbb
add
das
icebp
pop
loopne
add
jbe
mov
mov
push
aas
dec
mov
aam
mov
stos
mov
mov
rcr
in
int3
rcrb
sub
xlat
daa
xor
ja
pop
loope
sbb
sub
call
or
cmp
pop
loopne
out
les
notl
push
dec
arpl
in
scas
mov
scas
sti
xchg
mov
out
out
hlt
shrl
jnp
ficoms
xchg
ss
jne
sar
fs
or
xchg
call
outsb
xor
cmp
arpl
sbb
js
gs
push
or
aad
out
or
push
inc
mov
es
push
test
sub
push
mov
ds
push
push
inc
xlat
pop
and
mov
sub
mov
mov
jnp
sbb
push
fidivs
cmc
cmp
sbb
push
jl
stc
and
sbb
aaa
sahf
mov
or
outsl
jmp
inc
cmpsb
repnz
push
shlb
push
cmc
fbstp
out
das
dec
scas
roll
nop
pop
ror
xor
or
out
in
and
scas
aas
lahf
sub
nop
and
mov
js
loopne
sub
inc
cmp
mov
pusha
loope
inc
jne
cmp
pop
ficompl
sub
pop
aam
push
test
out
jecxz
cmp
push
test
jmp
mov
cmp
pop
jl
push
xor
and
mov
jg
cli
dec
gs
sbb
push
out
mov
mov
dec
push
push
sbb
or
jmp
xchg
or
dec
fidivrs
mov
mov
enter
pop
push
jae
push
or
aas
sahf
cmc
and
jg
mov
loop
aam
add
in
mov
std
in
and
add
jle
pop
test
lahf
int3
mov
out
mov
pop
test
jno
sub
subl
cmpsl
sbb
xlat
sbb
loopne
fistps
pop
andb
or
jg
dec
or
call
push
inc
leave
add
stos
mov
out
mov
xlat
cld
pop
cmp
inc
sbb
mov
pop
dec
push
orl
xlat
adc
std
adc
rcrl
jl
pop
sub
cwtl
enter
mov
sti
nop
cwtl
lcall
inc
ljmp
dec
lahf
cmp
mov
jl
decb
pop
jge
pop
xlat
jg
rcrl
ret
lock
out
dec
cmp
hlt
and
mov
stc
xchg
adc
ds
sarl
cmp
fsubs
xor
mov
aad
inc
push
pop
mov
lods
movsl
and
es
and
xchg
loopne
mov
movsl
fwait
or
xchg
push
das
inc
jno
insl
cmp
jg
sbb
stos
mov
imul
push
xchg
adc
adc
mov
adc
sub
pop
cld
jl
cmp
mov
sbb
and
mov
xchg
mov
loop
repnz
js
adcl
clc
push
sbb
ds
hlt
int
pop
dec
fstps
jo
dec
push
jno
mov
pushf
out
mov
xchg
outsl
cli
stos
inc
inc
jle
sub
iret
mov
sbb
dec
push
mov
mov
in
ds
cmp
mov
jmp
in
cld
daa
rorl
icebp
or
lahf
push
ret
jg
mov
pop
jne
inc
jp
test
jo
ds
dec
push
cmp
xor
sahf
sbb
push
xor
xchg
mov
push
cli
xor
and
xor
pop
sbb
xchg
aad
or
and
jne
add
hlt
xor
stos
cmp
add
cs
fwait
gs
lock
les
cmp
adc
sbb
aaa
stc
seto
inc
mov
js
and
xlat
sbb
mov
add
xor
adc
and
jl
pop
addl
xlat
in
cwtl
cmp
pop
call
mov
aas
sbb
and
fcomp
inc
xchg
mov
jo
mov
adc
les
stc
js
hlt
lcall
inc
paddb
shl
ja
sarl
inc
fcoml
out
out
mov
jnp
cld
dec
fisubrl
ja
xchg
jnp
jno,pn
out
movsb
in
test
adc
lods
push
int
ja
psubsb
push
sbb
stos
loop
sbb
inc
mov
ss
sbb
lds
xlat
xchg
cmpsb
pop
pop
and
clc
dec
and
add
int
sub
test
dec
mov
xlat
loopne
xorl
sub
and
jg
testl
mov
mov
ja
das
or
xchg
shrb
fst
hlt
mov
dec
add
pop
in
jmp
or
loopne
clc
dec
push
xchg
xor
adc
sbb
out
mov
xchg
call
inc
and
adc
adc
dec
insl
sahf
add
ret
inc
or
xlat
mov
shlb
mov
insl
sbb
push
enter
sbb
mov
lret
rcrl
add
jb,pt
pop
xor
adc
cs
mov
fnstenv
xchg
jle
add
es
lds
fiadds
and
add
jg
pop
dec
push
and
filds
call
push
inc
jns
mov
bnd
xchg
xchg
test
xor
inc
xor
arpl
add
lahf
ret
stc
lcall
adc
jne
scas
xor
add
imulb
test
scas
add
add
cmp
mov
sahf
lahf
test
scas
jge
icebp
sub
dec
pop
das
imul
cwtl
xorl
or
and
mov
ss
sbb
sbb
mov
ds
or
and
clc
adc
or
add
outsl
adcb
movsb
ficoms
xor
enter
and
inc
push
out
imul
out
and
dec
xchg
push
and
insb
aad
inc
aas
sbb
sbbb
and
cmpsb
cmp
ss
or
lea
xlat
test
or
xor
jo
xor
inc
or
out
sbb
out
outsb
inc
pushf
pusha
testb
jle
faddl
lahf
stos
sbbl
add
jno
mov
pushf
sbb
push
cmp
or
lahf
or
pop
std
or
jg
jo
or
idiv
and
jno
inc
fstpl
mov
mov
mov
or
pop
pop
xor
test
out
pop
pop
lods
xchg
mov
mov
lahf
pop
jle
xor
fst
in
pop
lret
scas
or
add
aas
leave
hlt
pop
enter
push
jmp
xchg
and
movsb
lock
dec
cmc
pop
push
test
mov
sbb
dec
call
jne
or
daa
mov
sbb
pop
fsubrp
dec
inc
adc
inc
inc
mov
push
mov
popa
xchg
mov
sbb
lock
cmp
mov
xchg
popf
jne
jns
pop
shll
sahf
mov
lods
jp
push
pop
mov
cmpsl
or
out
int
mov
adc
adcl
adc
jo
cmp
lcall
rclb
dec
mov
int3
sub
icebp
cmp
adc
scas
lods
xor
pusha
movsl
xor
subb
jno
stos
cmp
and
push
mov
xor
mov
in
test
flds
xor
xchg
data16
jl
inc
inc
dec
lret
pop
and
addl
in
xchg
imul
push
jns
and
pusha
sub
inc
shlb
popa
repz
gs
xchg
sbb
pop
lcall
cmpsl
mov
push
xchg
push
dec
clc
mov
sub
int
orl
push
cld
lods
fists
ret
movsl
push
sub
lahf
sbb
xchg
inc
movsb
aas
int3
cmp
push
mov
add
stc
push
add
dec
cmp
stos
mov
cmp
insb
adc
mov
aas
cmpsl
loopne
clc
xor
xor
xlat
rclb
lcall
scas
out
mov
les
sub
sub
cmp
rcrb
loopne
jbe
adc
aad
or
lods
xchg
idiv
cmp
iret
adc
inc
mov
dec
std
mov
jbe
test
std
or
enter
fisttpl
or
add
xchg
jae
sub
cmc
pop
and
out
cli
add
ljmp
call
dec
inc
rolb
imul
inc
lret
sub
dec
mov
inc
mov
es
or
push
push
nop
jmp
cli
sar
add
stc
mov
cwtl
inc
inc
js
lea
dec
inc
nop
jnp
pop
cmp
lods
xor
insl
jo
pusha
sbb
sbb
add
sbb
xchg
cmpl
dec
std
push
enter
dec
cmp
jecxz
inc
int
stos
push
add
inc
or
and
sbb
or
push
add
mov
xchg
cs
inc
popf
cmp
cmpsl
and
in
mov
and
dec
andb
add
xchg
mov
cmp
pop
dec
out
cmpsl
push
out
enter
xor
push
out
cwtl
sti
call
fdivl
fcoml
fmul
enter
or
add
mov
iret
xor
lret
jmp
add
sbb
push
xchg
or
xchg
lds
lea
or
xchg
sarb
xchg
movsl
cmp
cwtl
xchg
pop
jp
xor
inc
cmpsb
add
sbb
aam
mov
xor
mov
push
into
mov
cmpsl
mov
xchg
and
leave
mull
adc
cltd
xor
sti
cmp
stos
aaa
pop
lahf
adc
adc
or
fisubl
imul
sub
cmp
xor
cld
or
and
divl
dec
inc
cld
ret
lods
fldlg2
filds
repnz
cmp
push
adc
ljmp
std
jp
sub
add
cld
dec
loopne
addr16
or
adc
int
xor
mov
and
or
and
add
add
add
ljmp
and
fistps
pop
nop
and
aas
aas
mov
scas
xchg
and
cmpsl
sbb
inc
push
insb
or
and
mov
jge
les
xor
pop
inc
and
orl
push
pop
test
mov
mov
mov
push
adcl
pop
dec
sahf
cwtl
cmp
fldt
in
add
clc
scas
pop
xchg
adc
insb
xor
ljmp
and
dec
in
pusha
jecxz
mov
and
sbb
inc
scas
int3
sbb
gs
sbb
or
stc
add
movsl
xor
xlat
inc
mov
clc
mov
inc
rolb
mov
test
subl
neg
pushf
sub
lea
add
adc
andb
fs
jmp
negl
sbb
mov
in
jl
jl
orb
popf
scas
mov
pop
push
xor
xor
sbb
mov
int
fdivrs
enter
add
dec
sbb
loopne
cld
mov
push
lret
inc
or
add
or
xor
add
dec
movsb
int
or
cmp
xor
pop
jnp
ja
dec
adc
dec
incb
inc
ds
fistpll
cs
mov
mov
fs
and
ds
in
inc
mov
push
incb
push
mov
adc
or
mov
icebp
test
adc
mov
cld
loopne
movb
sbb
cmp
push
push
and
out
pop
sbb
or
icebp
xor
sub
mov
out
out
dec
into
nop
dec
icebp
xchg
adc
enter
push
in
es
std
xchg
mov
icebp
or
je
mov
stos
int3
xchg
pop
mov
adc
inc
or
movb
mov
arpl
xor
pop
insl
shrl
std
int
inc
sbb
std
fcoml
sub
inc
xor
std
cmp
in
xor
dec
mov
or
cmp
ss
int
mov
push
rcr
mov
add
or
xor
sahf
stos
and
dec
daa
rclb
js
adc
cmpsl
xor
sbb
mov
jmp
icebp
ljmp
cmp
jmp
cmp
fimuls
lahf
lret
add
inc
mov
lcall
pop
fucomi
fstpl
cltd
jle
jmp
stos
sbb
leave
or
fisttps
fucomi
mov
popa
push
data16
fs
xor
aam
push
and
stos
xchg
leave
insl
mov
fldl
sub
mov
daa
bound
lods
and
rclb
and
pop
pop
ret
inc
pusha
jl
lods
mov
imul
cwtl
jne
mov
insb
lea
inc
shrl
shl
pop
push
push
mov
fimuls
pop
push
je
jle
fwait
dec
push
sahf
sub
es
rcl
test
jle
enter
sbb
stos
jg
pop
stc
pop
scas
idivb
dec
inc
mov
dec
clc
jecxz
dec
xlat
cmp
jecxz
in
stc
movsl
icebp
sbb
aad
cmp
std
or
jecxz
in
pop
flds
dec
mov
lahf
jo
fidivrl
outsl
in
popa
lcall
jb
sub
xchg
xchg
pop
lcall
jp
rcll
stos
xchg
inc
pop
enter
jae
adc
aas
je
push
sub
pop
mov
mov
sbb
or
pusha
test
dec
mov
aad
and
cs
jns
sub
inc
cmp
sbb
call
or
cmp
inc
shrb
adc
cmp
clc
and
adc
cmp
das
cmpl
sbb
andb
mov
inc
dec
pop
inc
test
clc
jg
mov
and
sbb
mov
cli
aad
xchg
fbstp
cmc
scas
fimuls
idivl
mov
into
ret
nop
add
insl
add
out
mov
cmp
pop
test
xlat
cmp
xor
ss
cli
test
cmc
cli
adc
or
add
cmc
fsubrl
xchg
ss
mov
sahf
fdivr
and
cvttps2pi
cmp
jne
mov
sbb
scas
dec
inc
push
mov
out
bswap
pop
leave
xor
cmpsl
imul
in
or
sub
in
inc
adc
mov
mov
cmp
in
sub
stos
xchg
into
or
xlat
sub
add
lahf
pushf
dec
sub
pop
mov
xor
pop
inc
cmp
cmc
stc
rorb
mov
adc
cmp
adc
not
pop
outsb
cmp
jb
mov
scas
sub
nop
cmc
sbb
sub
test
subb
icebp
sbb
jo
pop
pop
or
arpl
gs
sub
xor
mov
cli
sub
push
push
fsts
adc
dec
lahf
push
rclb
inc
movsb
in
dec
dec
lock
and
out
mov
sub
push
aad
cmp
or
or
inc
enter
xchg
out
mov
sub
fs
cmp
add
cmpl
mov
nop
fisttps
mov
aas
xor
jmp
scas
ja
cli
loop
test
icebp
les
push
mov
xchg
pop
or
jne
inc
xor
fbld
in
inc
fistps
add
xchg
pop
xchg
sub
push
inc
pop
mov
out
sarl
pop
sbb
mov
sti
jae
or
sti
adcl
inc
cmp
mov
fucomip
mov
ss
sub
dec
add
mov
and
popf
mov
jle
add
jmp
out
das
sbb
push
cmp
push
mov
and
pop
push
movsb
pop
sub
and
cmpsb
aad
loopne
movsb
jns
xchg
or
mov
inc
cmp
fdivl
repz
mov
ret
rolb
test
mov
and
shlb
cmp
and
lods
ljmp
pop
lahf
lock
pop
ds
jl
testb
add
enter
scas
mov
and
mov
cmp
mov
lret
mov
iret
arpl
ss
fidivs
cmp
xchg
call
dec
movsl
mov
sub
pop
std
mov
sub
fwait
mov
test
pop
fmuls
add
or
testl
sub
addr16
sub
jnp
cltd
jno
xor
inc
add
movsb
jle
nop
stos
ja
push
mov
push
and
xchg
icebp
pop
xchg
mov
ret
mov
iret
daa
add
popf
add
rorb
or
movsl
popa
shrb
rcrb
sbb
and
xchg
xchg
dec
or
dec
add
pop
mov
pop
sub
xchg
cs
sub
push
aas
mov
cmp
popa
add
lahf
call
test
in
popf
loope
cmp
adc
ror
cmp
ss
mov
adc
out
jo
lahf
mov
jg
jg
pushf
add
jns
dec
adc
mov
loope
stc
xchg
mov
xchg
inc
push
xchg
mov
decl
xor
add
push
ss
xchg
inc
inc
and
inc
mov
shll
insb
xchg
fsubrl
pop
jne
add
pop
sbb
fs
push
or
ror
jl
mov
dec
xchg
mov
stos
movsb
dec
add
mov
pop
adc
or
call
sub
pop
pop
cltd
xor
cmp
jno
mov
out
arpl
sahf
mov
and
cmp
stos
loop
ret
mov
out
mov
shll
mov
xchg
mov
neg
lods
fsts
cmp
test
jge
int
pop
loopne
pop
repz
into
movsb
les
mov
mov
or
add
popa
lods
pop
les
insb
xor
jbe
lds
pushf
fiaddl
and
dec
popa
sub
mov
pop
mov
mov
mov
cmp
js
inc
js
shrl
inc
test
lods
pop
std
stos
ror
pop
scas
jl
and
lcall
call
dec
adc
xor
jecxz
in
cwtl
mov
and
sti
xor
mov
cmp
push
rcrl
fcoms
loopne
dec
jb
mov
xor
add
movsl
push
stos
or
pushf
rorl
cmp
cmc
sbb
sbb
xchg
push
in
mov
sub
cwtl
lret
aad
icebp
ret
xor
jmp
xchg
xlat
cmc
adc
icebp
adc
decb
loop
outsb
mov
es
add
mov
push
ret
lea
jns
call
icebp
in
and
jecxz
dec
jecxz
in
cmp
rcll
mov
mov
fwait
mov
xlat
sbb
int
popa
jge
pop
popf
mov
stos
lods
cmc
and
add
add
and
cmp
pop
and
pop
mov
sbb
in
stc
push
mov
xchg
or
mov
pop
rol
test
mov
das
popa
rcrb
js
dec
scas
and
mov
outsl
xor
sub
push
mov
cmp
push
mov
dec
nop
stos
push
jb
ds
lret
add
lods
or
inc
scas
loop
stos
test
pusha
xor
dec
mov
test
jbe
nop
int
xor
mov
pusha
and
push
stc
cli
scas
fildl
push
dec
inc
popl
loope
dec
movsb
and
cmp
xor
mov
cltd
lahf
xorl
and
xchg
aaa
pusha
mov
cli
sub
fbld
mov
lock
xor
pop
jp
hlt
dec
and
xor
out
loope
rcrl
std
inc
dec
aas
imul
mov
adc
lahf
mov
lret
loopne
mov
in
jns
xchg
cmp
les
loopne
inc
xor
iret
movsb
movsl
fisubs
push
out
cmp
shr
cli
insl
scas
paddb
cli
pop
sarb
int
jns
mov
scas
add
int
add
fistpll
lcall
lea
popf
xchg
xchg
loopne
sub
add
iret
scas
mov
idiv
push
int3
add
repnz
aaa
adc
cli
icebp
rorl
aad
or
adc
mov
or
dec
dec
mov
testb
or
movsl
cmp
sub
cmp
arpl
jl
adc
insb
fiaddl
icebp
and
inc
or
xlat
xlat
lods
jnp
or
ret
shrl
mov
out
cmp
xor
imul
sub
mov
outsb
ds
xchg
inc
push
add
dec
icebp
cmpsb
xchg
aas
dec
jno
movl
dec
js
dec
add
rcrl
call
jns
aam
repnz
or
sbb
push
lods
fcmovbe
test
xor
xor
imulb
adc
sbb
pop
pop
sbb
clc
cs
cmp
inc
jecxz
and
lock
add
adc
pop
inc
aad
xchg
cli
out
lds
jns
stos
mov
add
mov
loop
mov
shll
lcall
pop
fists
aam
lahf
gs
idiv
mov
in
loopne
fistpll
fs
lea
sahf
sub
fadds
repz
shl
cli
xchg
call
scas
sub
pop
or
loopne
and
loop
push
scas
stc
sub
lds
dec
jmp
jmp
cli
push
sbb
nop
shl
ret
sti
mov
jb,pt
fmull
mov
dec
movl
jl
mov
jbe
movsb
je
dec
cmp
jl
imul
lods
and
in
loope
dec
sbb
mov
pushf
and
loop
repnz
dec
shll
in
mov
add
or
add
inc
es
stos
cmpb
in
add
and
addr16
movl
cmp
inc
xor
jbe
add
gs
pop
add
jecxz
mov
fwait
sub
sbb
in
cmpsl
add
pop
aad
mov
shrl
mov
dec
xor
imul
iret
add
nop
int
pop
and
dec
lea
jns
cmpsb
daa
pop
in
pop
or
add
insl
loopne
aas
mov
lea
es
pop
inc
pop
les
pop
insb
stos
xchg
push
aas
sub
dec
data16
and
mov
adc
insl
dec
jns
jl
add
add
inc
adc
jns
pop
aas
testl
and
xchg
pop
and
roll
dec
push
fisttps
sub
add
mov
in
mov
nop
add
adc
int
lds
mull
or
xchg
scas
sub
push
hlt
stos
lds
mov
sbb
imul
stos
jmp
fwait
shrb
cmpsl
fisttps
xor
sub
sbb
xchg
push
stos
test
pop
cwtl
aad
inc
cs
sbb
adc
cmp
lods
or
pop
scas
sbb
std
inc
popf
pushf
test
icebp
iret
clc
les
or
and
imul
aaa
and
aas
movsl
cmc
adc
xor
push
sbb
and
out
mov
xor
test
jg
cmc
ja
icebp
inc
dec
pop
dec
test
nop
cmp
jbe
xchg
lea
test
push
cmp
ss
dec
pop
push
movsb
and
insl
sbb
xchg
push
add
jne
cmp
orb
sarl
push
dec
inc
into
fstps
dec
mov
push
push
scas
lods
iret
dec
push
mov
and
inc
jnp
cmpsb
mov
pusha
popa
mov
out
push
ss
popf
or
add
aam
inc
andb
or
ffreep
sub
ret
es
repz
sub
sub
and
mov
fwait
jne
cmp
mov
adc
shrl
adc
push
xor
push
nop
je
or
into
jo
imul
add
hlt
mov
cs
dec
sbb
lea
popa
fisubrs
sbb
pop
filds
pop
mov
push
xchg
adc
pop
imul
lds
ss
xor
ret
xlat
cmpsb
xorps
notb
jne
iret
scas
cmp
xchg
cmp
cmc
in
push
cmp
sub
push
adc
add
into
push
dec
ljmp
jb
out
stos
dec
xchg
outsb
lret
add
xor
inc
nop
rcrb
add
in
pushf
cmp
pop
std
mov
pop
pop
adc
pop
mov
sub
or
adc
fdivrl
aaa
adc
dec
call
adc
iret
int
mov
xlat
paddusw
int3
cli
stc
add
add
leave
lods
lahf
rorb
loope
cwtl
aam
push
pop
popf
lahf
adc
out
sub
repz
in
outsb
or
out
xor
orl
and
mov
pushf
pop
add
test
or
fbld
int3
test
insb
cmp
pusha
arpl
adc
int
and
int
cmp
test
fs
sub
and
mov
pop
sti
adc
fmull
or
cmpsb
xchg
xor
sbb
adc
cmp
out
or
aad
push
inc
into
sub
push
sub
loopne
mov
cmp
mov
cli
orb
mov
cwtl
push
cmp
and
jg
mov
pop
subl
stos
popa
dec
lea
loope
mov
sahf
js
insl
popf
lock
aas
loope
sahf
xlat
push
or
shll
dec
loope
lahf
jl
jb
inc
fst
or
jg
dec
fisttpll
dec
popf
mov
pop
dec
mov
and
cmpsl
xor
bound
pop
xor
cmp
add
dec
pop
xchg
popa
push
adc
lods
test
dec
pop
cmpsl
repz
test
xchg
rcrl
push
ljmp
and
repnz
mov
and
jb
test
lea
push
in
popf
pop
or
test
fldt
sbb
or
push
jb
xchg
adc
gs
sbb
jl
or
pop
add
jecxz
and
mov
xor
or
inc
and
or
ss
pop
ljmp
into
sub
mov
popf
adc
xor
or
adc
ljmp
pop
inc
xor
mov
out
lds
pop
movmskps
pop
cmc
testb
jmp
pop
ret
sub
mov
cmp
sbb
or
fcompl
jb
add
lahf
xor
div
push
sub
ljmp
scas
and
or
insb
cmpsb
rcrb
fdivl
adc
shll
inc
pop
popf
jo
sbb
gs
incl
sub
pop
sub
and
mov
sarb
xor
adc
js
clc
mov
insl
mov
pop
add
orb
adc
add
lods
mov
cld
cmc
mov
jns
lods
scas
inc
nop
fnstenv
mov
ret
jg
adc
mov
push
out
aas
fwait
scas
mov
jo
int
jp
mov
xor
jno
adc
into
in
andb
jmp
aad
push
jp
insl
aaa
sub
mov
mov
push
jp,pn
xchg
sbb
jo
pop
fnstsw
push
pop
test
add
adc
test
ss
stos
xchg
out
sahf
cmp
shrl
pushf
xchg
or
sbb
out
inc
jbe
push
insl
imul
hlt
cmpsl
xchg
test
insb
div
sub
sbb
fiadds
nop
sub
mov
pop
push
loopne
test
cmc
and
sbb
push
fs
adc
out
mov
rcrl
das
adc
lahf
nop
nop
in
pop
ds
cwtl
mov
lods
pop
popf
pop
xchg
push
leave
jge
push
push
fbld
push
insl
push
xchg
pop
inc
xchg
mov
mov
cld
pop
push
jmp
jo
pop
int3
pushf
pop
inc
jmp
add
add
mov
jge
imul
hlt
and
scas
push
insb
movsl
cmpsl
push
dec
cmp
cmp
mov
int
cmpsb
xchg
xchg
add
add
mov
mov
mov
out
sbb
mov
push
lea
mov
mov
das
ds
ds
enter
daa
dec
loope
push
data16
add
or
test
add
jmp
jp
sbb
pop
cwtl
sub
pop
fs
fidivl
mov
gs
and
ret
or
push
sbb
mov
dec
xchg
sbb
xor
dec
cmp
push
repz
icebp
std
inc
lahf
and
mov
leave
loop,pn
xchg
lcall
and
ret
iret
aad
mov
ljmp
xchg
push
fbstp
rcll
push
sub
repnz
mov
add
inc
push
push
fstpl
mov
fisttpl
pop
mov
and
add
int3
pop
out
rolb
adc
pop
mov
ret
mov
mov
popa
les
pop
jno
push
add
xchg
into
test
rcrb
ds
gs
aad
test
add
add
fimuls
out
pop
icebp
enter
pop
scas
test
cmp
jl
mov
xchg
test
inc
movsl
in
mov
and
add
mov
push
jbe
mov
fwait
cmp
and
adc
or
and
pop
inc
testl
hlt
clc
mov
mov
out
sub
pusha
xchg
fistps
loop
sahf
shlb
cmp
push
sub
jb
sbb
popf
test
or
jne
mov
lods
mov
and
cld
mov
jae
popf
flds
icebp
sub
fsub
mov
repz
call
add
data16
outsl
cmc
cmpl
add
andl
cmp
out
cmpsl
dec
mov
gs
adc
into
sub
add
cmc
in
sbb
fnstsw
adc
scas
mov
cld
sub
rorl
mov
sbb
call
addr16
mov
jns
loope
out
lret
mov
lea
lahf
fistpl
div
ds
cmpsb
sbb
or
je
cmp
addr16
inc
xchg
adc
int
negb
loop
dec
adc
sbb
dec
push
add
cltd
adc
mov
add
scas
bound
add
popa
sbb
mov
adc
jns
or
dec
mov
fs
call
and
scas
mov
push
push
xchg
test
arpl
jne
and
jnp,pt
jg
out
pop
xor
mov
adc
sub
in
popa
stos
pop
inc
int
iret
add
inc
jl
xchg
ret
stc
mov
pop
push
mov
mov
mov
push
dec
insb
mov
mov
adcb
mov
xor
movsb
xchg
outsl
sahf
sbb
sub
mov
mov
rorl
sahf
push
out
pop
in
stc
inc
pop
or
enter
mov
mov
sarb
jbe
pop
inc
int
movsb
or
ret
pop
leave
sbbb
cmp
push
sbb
xchg
adc
xor
sub
push
not
cld
into
lahf
popf
xchg
and
jb
outsb
mov
push
adc
mov
adc
mov
pop
jns
jg
jno
cwtl
test
inc
lds
push
rcl
jl
cmc
cmp
pushf
lods
push
leave
in
sub
xlat
adc
add
and
stos
xchg
mov
xor
mov
jbe
inc
in
jl
int
cld
or
cmp
out
test
sub
cmp
jg
cli
xchg
or
xchg
shrl
int
cmp
pop
mov
sub
scas
push
es
insl
lock
xlat
pmaddwd
dec
add
into
cmp
insb
mov
adc
fwait
sti
xor
and
lret
les
pop
out
mov
dec
out
cmpb
sbb
push
mov
ret
cmp
je
adc
or
cmc
or
ret
jb
mov
adc
shll
push
and
lret
mov
cwtl
xchg
lods
pop
iret
jbe
push
pop
dec
or
ficomps
jecxz
sub
and
pop
inc
decb
jns
sarb
inc
push
mov
ja
nop
rcrl
push
inc
xor
mov
pop
xlat
out
sbb
sub
in
xor
mov
mov
adcl
or
jae
xor
jns
scas
inc
fisttpl
andb
pop
add
mov
fnstcw
dec
fmull
xchg
inc
hlt
or
insb
lahf
jecxz
push
add
xchg
lds
insl
xchg
sub
mov
in
gs
xchg
es
xor
ret
sahf
cmp
push
mov
pop
in
mov
ja,pt
test
cmp
rorb
jl
and
sbb
std
shlb
addl
pop
sbb
pop
int3
jle
or
pop
adc
add
sub
push
xorb
scas
pop
dec
sub
icebp
sti
std
pushf
xor
dec
xchg
fldenv
sub
mov
mov
nop
pop
icebp
out
dec
add
loopne
jl
arpl
cmpsb
push
or
inc
dec
shrl
mov
pop
push
mov
mov
jl
sbb
sbb
mov
fcomp
or
subb
xor
sahf
jbe
and
sbb
cmp
pushf
adc
or
shll
push
shl
mov
xchg
aas
mov
and
gs
dec
mov
stos
push
lock
in
push
add
mov
adc
add
lahf
movsl
add
or
xchg
xor
adc
mov
das
sub
lods
call
or
incb
and
fbstp
das
jne
inc
xchg
es
sub
ficomps
push
mov
aas
mov
pop
rcll
and
adcl
jnp
movsl
and
push
mov
adcb
loopne
or
and
push
orb
ss
cmp
pushf
stos
mov
jle
std
das
mov
imul
pop
decl
pop
push
cli
andb
push
lods
jo
mov
pop
lahf
imul
fdivrs
pop
inc
or
dec
add
shrb
cmpl
pop
xor
push
in
loopne
insl
xchg
or
loopne
data16
mov
mov
movsb
mov
hlt
sub
arpl
mov
cmc
sahf
cli
ret
shl
jl
jbe
sbb
adc
xchg
inc
jmp
js
int3
mov
adc
cld
jns
test
and
cmpsb
jnp
adc
mov
push
xchg
dec
sbb
iret
inc
adc
mov
cwtl
je
test
faddl
cli
ss
popa
jl
ds
or
mov
test
pushf
adc
cmp
mov
sbb
xchg
cltd
mov
ret
jle
cmp
fadds
nop
mov
inc
in
fstpt
out
pushf
mov
ror
fsubrs
jecxz
pusha
arpl
cmp
push
hlt
inc
push
or
les
inc
test
loopne
fisubs
adc
inc
push
cli
cmp
pusha
int3
icebp
sbb
imul
add
and
fidivrs
leave
shl
sbb
dec
fsubl
pop
rsm
mov
sub
push
pop
and
out
fsub
mov
sbb
add
dec
fdivrl
les
and
ret
sub
imul
into
stc
xchg
dec
hlt
add
xchg
jae
movsb
outsb
and
pop
push
imul
out
xchg
inc
jnp
fsubl
bound
cli
and
push
cli
push
das
stos
add
sub
pop
faddl
jno
lret
inc
dec
lods
dec
cmp
mov
shl
xchg
xchg
outsb
mov
xchg
cmp
pusha
sub
imul
mov
add
fidivrs
push
mov
xchg
aaa
cld
data16
jns
cmp
jns
sbb
and
fwait
out
xor
das
movl
mov
int3
scas
pop
enter
andb
lea
mov
add
mov
enter
xchg
test
mov
xchg
call
lea
pop
bound
xchg
popa
jle
and
imul
inc
jae
pushf
xlat
pop
test
cmp
fldenv
mov
aad
inc
and
jne
andb
push
pop
mov
ja
enter
adc
jmp
add
pop
inc
lods
xchg
cmp
pop
pop
ds
mov
mov
shlb
dec
loope
mov
pop
mov
shll
fldl
adc
cld
shll
cld
leave
push
mov
mov
shlb
arpl
and
xchg
and
pop
popa
leave
mov
or
xor
ds
mov
cli
ret
pop
xchg
push
mov
cmp
orl
pusha
insl
bound
arpl
and
pushf
push
outsl
pop
push
cmp
xchg
stc
adc
jns
cmp
cmp
ret
pop
mov
sbb
add
ss
subl
jno
lods
inc
push
fmulp
and
inc
and
je
pop
xor
and
pop
aas
fdivrl
shl
and
mov
dec
ljmp
inc
or
or
pop
mov
idivl
fdivs
jnp
mov
movsl
adc
pop
push
dec
push
bound
std
fidivs
sub
jg
pop
je
or
dec
popa
aam
push
fisttpl
push
int
add
lods
in
std
mov
sbb
fistpll
in
pop
sar
sub
or
clc
sbb
pop
cmp
aas
push
sbbb
insl
mov
std
push
sbbb
cmp
mov
and
push
jb
ret
or
xchg
addb
rorb
mov
or
cli
sahf
adc
xchg
popf
add
xor
out
test
cmp
lea
jns
push
xor
pop
sub
jp
fs
inc
int
lahf
fstps
iret
mov
faddp
inc
fsubrp
xor
shll
adc
push
aas
xor
add
aas
test
ljmp
push
loope
loope
sub
test
popa
xlat
pushf
test
sbb
push
jl
test
inc
stos
lcall
push
pop
stc
adc
test
push
xor
call
cld
pop
push
movsw
repz
popa
sbb
push
jns
pop
adc
adc
adc
ljmp
and
xor
test
lods
sub
mov
dec
fsts
iret
ja
mov
dec
sti
and
push
mov
xor
dec
xor
mov
icebp
mov
or
loopne
leave
ljmp
cld
mov
mov
std
jno
test
outsb
adc
jns
test
cltd
cmp
outsl
fistps
imul
push
gs
jno
insl
mov
mov
shr
xor
jecxz
and
mov
cmp
xor
inc
cld
jle
xorl
pop
push
inc
cmpsb
or
test
inc
sarl
adc
inc
in
xchg
adc
popf
mov
popa
xchg
mov
ljmp
jne
mov
push
mov
pop
sbb
in
inc
cmp
push
push
aas
pop
cmp
outsl
push
scas
push
ficompl
in
dec
mov
dec
imul
sbb
mov
adc
rcrb
mov
pop
jge
mov
mov
dec
xchg
fdivl
mov
cld
jb
dec
popf
jle
pop
stos
fimuls
push
inc
sub
sub
sub
test
jge
xor
push
shl
and
push
in
nop
sti
add
adc
ds
cmp
mov
mov
popf
add
cmc
add
pop
sbb
imul
jge
mov
and
pop
inc
dec
dec
std
dec
add
rcrl
ret
dec
fld
jmp
cmp
xchg
sub
into
mov
loopne
xor
test
movl
jmp
movsl
xor
in
popa
test
dec
pop
leave
iret
jns
es
aas
xchg
sub
mov
pop
jmp
push
fiaddl
out
insl
push
dec
and
adc
pop
jno
sub
inc
ljmp
lsl
sbb
xchg
out
gs
or
mov
mov
sub
and
sbb
std
out
add
pop
or
rcr
push
je
pop
mov
out
repnz
les
mov
std
sub
push
int
inc
movsb
jle
mov
mov
roll
xor
sub
and
push
std
xchg
jmp
xor
sbb
out
adc
leave
scas
mov
pop
aaa
repz
int
pushf
in
sti
fstps
jl
insl
mov
dec
push
and
insl
xchg
cmp
or
or
adc
iret
inc
nop
xor
loope
loopne
outsl
xor
or
push
insb
ret
mov
push
out
fcompl
sbb
movb
ja
push
add
adc
jmp
ret
jb
inc
add
and
push
push
int3
fsubs
div
or
or
cmp
bound
mov
nop
lahf
test
insb
nop
divl
jge
cmp
sub
les
fldcw
mov
push
sahf
mov
je
repnz
pop
out
inc
mov
stos
inc
divb
cmp
inc
out
and
dec
icebp
jne
cmovae
call
repnz
xchg
cld
xchg
pop
lcall
shlb
mov
inc
and
cmovl
add
mov
popf
dec
sbb
out
testb
stos
add
das
xchg
fbld
out
pop
mov
fists
sbb
xorb
sahf
inc
xor
xor
in
mov
ficomps
dec
int3
or
inc
out
add
inc
imul
jl
rcll
or
jle
insb
scas
ret
xchg
enter
aam
stos
xchg
sar
push
sub
jl
jg
and
int3
dec
mov
ficoml
xchg
dec
dec
hlt
testb
add
jl
popa
inc
jae
insb
pop
jno,pt
mov
inc
imul
in
leave
out
fcmovnu
inc
in
jmp
inc
pop
popf
mov
sbb
push
clc
das
mov
sub
inc
call
push
arpl
into
pop
lret
sub
sbb
stos
decl
hlt
out
sub
mov
dec
mov
sub
mov
cmp
and
mul
jge
stos
sub
push
aaa
and
jne
adc
int
fdivrp
in
enter
sahf
jle
sub
and
mov
xor
cmp
inc
nop
lea
dec
hlt
mov
cmp
int
xchg
inc
inc
aas
add
mov
cwtl
mov
mov
ds
daa
dec
push
ds
xor
div
cli
aad
idivb
inc
sbb
sbb
out
pop
clc
fistps
inc
adc
pushf
insb
rclb
sub
ret
jle
les
push
push
add
std
gs
xchg
ret
faddl
gs
mov
faddl
js
outsl
sub
dec
push
xchg
mov
and
adc
xchg
out
stos
push
in
mov
shll
ja
mov
jge
push
int3
dec
add
mov
inc
jbe
add
mov
xor
test
mov
paddsw
jno
or
ja
insl
mov
jns
in
mov
out
jae
jne
and
cmp
data16
xor
lcall
subps
cmp
jae
roll
pushf
pop
cmp
mov
mov
push
fmul
data16
and
push
call
add
or
out
push
icebp
loop,pn
xchg
inc
push
adc
ror
loopne
leave
in
pop
add
sti
xchg
jnp
xor
sub
mov
loopne
shll
mov
pop
shrl
and
cli
mov
call
pusha
scas
lods
dec
adc
add
cmp
and
inc
in
das
dec
mov
and
cmp
test
aad
gs
dec
mov
mov
hlt
and
add
sub
inc
pushf
and
pushf
insb
sbb
aas
pop
adc
lock
sbb
scas
pop
shrb
push
push
lahf
dec
xchg
popl
pop
xchg
in
pop
outsl
and
movsb
push
faddl
jmp
push
xchg
or
scas
call
imul
mov
lock
dec
mov
push
fildll
xchg
push
clc
test
cs
and
lahf
leave
test
jl
imul
sub
cmp
xor
add
pop
jae
dec
xor
les
lcall
mov
cmp
bound
lock
scas
sub
mov
into
jmp
daa
call
cmp
adcb
scas
inc
ja
cmp
sti
add
sub
pop
cmp
fistpl
xchg
cwtl
mov
movsl
push
gs
dec
jbe
mov
loope
in
or
stc
xor
xchg
push
xchg
xchg
fldt
int3
sub
mov
mov
or
mov
push
push
or
std
cmp
ds
and
fstl
int
mov
pop
mulb
addb
or
shl
inc
mov
and
rcrl
lds
pop
or
out
adc
lea
fisubs
into
in
sbb
enter
jmp
pop
repz
ret
add
hlt
enter
iret
popa
test
sub
pop
push
sarb
outsl
dec
jl
ss
jbe
cmp
xchg
insb
aam
jne
push
gs
popf
roll
add
sbb
cmp
nop
push
icebp
or
xor
adc
sub
push
popa
push
or
subb
das
push
icebp
inc
mov
add
test
sbb
add
insb
dec
sbb
adc
data16
mov
repnz
popf
jle
pop
test
jl
or
xor
pop
dec
jge
xchg
mov
xchg
sub
jb
mov
or
lock
ret
int3
divb
lcall
insb
dec
std
pop
mov
and
lock
inc
pop
cmp
das
pop
cli
mov
out
jns
dec
das
out
inc
cmpb
cltd
xor
add
cmp
orb
xchg
sbb
adc
pusha
stc
sub
fimull
cmc
mov
movsb
pop
repnz
add
je
adc
loop
int3
pop
mov
mov
push
push
sub
lods
lret
dec
enter
mov
xor
dec
dec
les
stos
inc
sub
loopne
insb
pop
xchg
daa
incb
cmp
mov
dec
mov
cs
inc
movsl
or
nop
jl
dec
sahf
add
es
test
and
pusha
out
cmpb
sub
popa
test
leave
lahf
es
scas
xchg
ret
push
push
pop
cwtl
leave
add
leave
sub
fcoml
shll
xchg
je
adc
mov
lahf
pop
mov
ja
int
xlat
cmp
orl
test
jns
add
ss
cmp
faddl
xor
push
cmc
mov
ljmp
outsl
in
jae
and
xor
outsb
arpl
sbb
mov
cmp
in
cmp
pop
xchg
mov
cmpsb
and
hlt
xchg
xor
int
pop
dec
int3
lock
test
sbb
lahf
das
adc
mull
xor
dec
lcall
sub
int
add
mov
push
das
mov
push
pop
pop
stc
data16
or
scas
pop
push
aas
or
jns
jne
test
les
filds
cs
cmp
adc
dec
pop
aad
fnstenv
jecxz
das
dec
std
inc
jg
fstpt
rep
inc
shld
pop
pop
movsb
movsl
sub
push
mov
sub
sbb
pop
inc
pop
mov
sub
hlt
bound
loopne
and
imul
sbb
xchg
out
int
pop
lcall
repnz
lcall
repnz
cmpsb
xchg
leave
out
mov
dec
mov
stos
xchg
clc
ficompl
loope
in
seta
andb
cmpsl
add
dec
add
test
sub
and
xchg
jmp
popa
cmp
in
cmp
std
mov
out
mov
or
cld
cli
orb
cmp
add
add
ret
sti
scas
push
cmp
movsl
inc
aad
cmp
cli
clc
rcrb
xchg
mov
lods
ss
pop
and
add
or
add
and
inc
sub
push
fsubl
int
faddl
mov
sub
loopne
xchg
jmp
push
cmpsb
rorb
push
jne
sub
dec
sbb
cmp
stos
lods
inc
mov
rorb
dec
pop
lret
sahf
out
mov
cs
cli
jp
push
pop
cmpsb
clc
das
dec
mov
out
imul
clc
mov
mov
jge
in
push
fiadds
std
iret
enter
jge
sbb
or
mov
mov
dec
stc
sbb
xor
fidivs
mov
cld
arpl
stos
add
or
adc
push
ljmp
mov
jnp
adc
jo
mov
jp
mov
mov
adc
fisttps
sbb
mov
and
cmp
mov
lods
sub
push
or
test
jb
sarb
insl
xchg
sarb
inc
lock
sub
xor
jl
xor
mov
pusha
mov
and
dec
out
ret
pop
cltd
mov
negl
stc
or
xor
xchg
pop
mov
std
add
xchg
sbb
mov
stos
inc
ret
xchg
push
test
cmp
mov
cmp
or
dec
or
loope
sub
stos
mov
cmp
loopne
add
cmp
jmp
dec
mov
arpl
mov
jl
xchg
xchg
loope
sahf
xor
lret
arpl
jl
cwtd
mov
fcmovnb
dec
pushf
push
shll
pop
cmp
push
fsubp
pop
icebp
lret
movsl
pminsw
push
fidivrs
xor
lds
test
shrb
fsts
cmp
mov
sahf
cmp
jae
repnz
mov
jae,pt
mov
ss
jnp
stos
popf
in
xlat
sahf
mov
and
cmp
or
xchg
pop
cmpl
pushf
cmc
and
mov
add
rclb
and
xor
rcl
aad
pop
lret
lahf
xor
push
pop
dec
xor
rcrb
push
nop
icebp
jno
push
insb
int
dec
or
mov
movsb
pusha
dec
mov
js
sub
pop
push
adc
lods
or
int
xchg
cmp
lea
shll
icebp
fdivp
pop
ret
movsb
out
xlat
push
cwtl
jne
popa
or
inc
cli
push
sub
xor
roll
push
rcll
sahf
sti
sub
fsts
in
push
xchg
adcb
and
imul
jae
adc
loopne
js
inc
or
push
in
lahf
cmp
or
fs
and
lea
sub
sub
stos
inc
outsl
les
je
mov
popf
imul
pop
sbb
fistl
adc
pushf
mov
out
push
into
adc
pop
sti
addr16
xchg
dec
or
jle
xor
ds
mov
popf
inc
inc
pushf
lods
cld
push
mov
insb
sbb
adc
cmp
gs
roll
mov
cmp
cmpsl
lds
call
sub
jb
mov
inc
add
inc
insb
pop
mov
loopne
lds
dec
push
idivl
jae
dec
mov
rcrl
jecxz
mov
cmp
popf
sub
dec
and
xor
sub
xor
mov
inc
push
loop
jnp
ss
in
push
sub
jge
add
or
pushf
cmp
cmp
jecxz
aas
mov
loop
repnz
add
mov
inc
or
push
cli
cmc
cmp
aam
mov
rcrl
push
cmp
stos
xchg
pop
add
bound
aad
imul
ffreep
fistps
loop
cmp
mov
adc
cmp
mulb
pushfw
and
mov
inc
pop
movl
inc
sahf
inc
xchg
cmpsl
pusha
add
std
call
dec
pop
out
fstl
push
fbstp
roll
pop
or
adc
sub
mov
js
push
inc
add
or
xor
push
cmp
mov
inc
xchg
mov
jns
lcall
into
out
sahf
sub
sub
int
push
add
pop
das
in
inc
jle
sbb
shll
insl
xchg
loop
mov
add
aaa
cmp
fs
loope
mov
movsl
stos
inc
inc
fs
cltd
cld
xchg
dec
and
or
pop
mov
pop
inc
jmp
jecxz
add
push
push
stos
add
push
roll
jae
addb
popa
lahf
and
es
nop
adc
dec
ja
and
sub
and
jo
push
repz
add
add
dec
pop
ret
pop
lahf
ret
test
inc
stc
sbb
sub
mov
scas
adc
imulb
ljmp
xchg
pusha
imul
mov
mov
xchg
jno
mov
cli
push
mov
jnp
roll
push
push
jle
ret
fwait
daa
mov
fs
add
std
mov
mov
sbb
pop
aaa
mov
sar
push
adc
lea
adcb
sbb
cmp
dec
xor
imull
sbb
mov
mov
sarb
ljmp
push
mov
or
inc
xchg
ret
xor
sbb
aam
js
cmp
jns
popf
cwtl
mov
adc
xor
push
mov
push
cmp
int3
cmpsb
and
shlb
pop
aad
insl
push
cmpsb
mov
adc
shrb
pop
lock
adc
or
testl
ljmp
mov
test
movsb
stos
cld
popf
jne
test
xchg
repnz
insl
rclb
adcb
mov
dec
or
stos
int
mov
inc
fsubrl
stos
dec
cmp
es
sbb
adc
pop
mov
and
cwtl
lods
int
rclb
js
wbinvd
nop
shlb
mov
imul
adc
popa
mov
xchg
imul
and
or
cmp
mov
pop
dec
rorl
xor
das
icebp
add
ret
sbb
inc
xor
jg
jns
repnz
mov
push
sbb
pop
inc
arpl
mov
inc
add
adc
lahf
flds
inc
adc
mov
adc
mov
adc
lods
ds
in
add
pop
cli
int
add
inc
gs
cmp
pop
mov
test
mov
subb
jmp
cld
jmp
jp
shl
xor
pop
inc
int
pushf
push
fwait
dec
orl
pop
sbbb
add
pop
jb
mov
push
test
fidivrl
stc
xor
inc
clc
sahf
int3
pop
int3
cmpsl
gs
loope
mov
jmp
adc
push
cmpsb
xchg
jl
repz
pop
hlt
imul
cmp
xor
sub
push
imul
mov
fldl
push
pop
fsubrp
stc
movsl
enter
cld
cwtl
adc
push
mov
iret
mov
in
cwtl
jne
jnp
sahf
dec
cmp
filds
ret
inc
dec
mov
int3
and
jmp
cmc
ret
int
dec
or
lock
fsubrl
dec
lahf
dec
sbb
fidivl
or
add
orl
test
and
ret
in
xchg
cli
cli
pop
shlb
or
sbb
jg
jle
ss
mulb
in
dec
mov
jl
jb
inc
imul
pop
in
inc
ret
in
jge
or
fsubr
out
sbb
cwtl
inc
sbb
scas
lds
std
sbb
cmp
push
push
pop
mov
pop
shll
jns
ljmp
pop
jne
loopne
mov
gs
xlat
loopne
es
jb
dec
jle
add
hlt
or
adc
ret
pusha
or
call
pop
dec
jo
jp
sbb
push
loopne
sub
or
repnz
imul
rol
enter
dec
test
sbb
mov
fisttps
add
or
insb
lahf
nop
mov
mov
fcmovnb
test
add
out
stos
pop
int3
xchg
or
call
std
add
pop
int
xor
int
out
push
mov
dec
test
sbb
mov
mov
stos
push
pop
xor
inc
lds
sarl
fbld
je
jnp
scas
shrl
rcll
jmp
sbb
xchg
inc
xchg
out
fs
les
cmp
les
std
cmp
xlat
pop
mov
mov
push
pop
adc
cmc
dec
or
cmp
sarl
mov
xchg
xor
inc
mov
fildll
nop
shrl
mov
or
adc
insb
add
fsubl
stc
adcb
lret
icebp
lahf
int
sbb
add
jl
or
jno
jmp
dec
stos
or
add
mov
mov
mov
test
fwait
add
pop
out
xchg
jb
subb
in
sbb
mov
sub
in
ss
jge
push
inc
scas
pop
jge
cld
or
in
loope
nop
sbb
pop
dec
and
pop
or
sbb
aas
lds
int3
push
pop
and
pop
scas
xlat
les
or
push
mov
sub
in
call
icebp
adc
mov
ljmp
and
push
in
pop
pop
jns
sbb
xchg
loop
sub
fst
xchg
mulps
and
int3
loopne
or
pop
sub
or
in
lds
arpl
adc
icebp
sbbb
iret
pop
and
lods
push
xchg
add
xor
jl
iret
or
mov
nop
xchg
in
icebp
xchg
jae
xchg
mov
xor
pop
and
inc
lock
test
cmc
rorb
daa
inc
add
sbb
stos
add
in
push
cwtl
xor
pop
int3
fcompp
iret
pop
add
icebp
repnz
xchg
pushf
xchg
lret
rdtsc
mul
enter
popf
pop
pop
dec
jl
fisubrl
inc
xor
lods
shlb
movsl
pushf
enter
or
cmp
jne
mov
ret
jg
mov
loop
lock
or
xchg
cmp
xor
push
ja
roll
mov
pop
movsb
jo
test
in
rolb
ficomps
sti
sbb
mov
push
mov
imul
stos
js
or
scas
and
push
adc
and
push
out
fwait
ret
leave
fwait
cmp
mov
orl
test
inc
jbe
pop
ret
inc
xorl
out
or
mov
rcrl
cmc
or
test
in
jne
jecxz
cwtl
sub
add
arpl
xor
sbb
pushf
mov
imul
jl
loopne
mov
jae
sub
cld
testl
cld
or
xchg
pop
aas
and
sti
loope
cmpsl
mov
or
imul
fwait
push
mov
sub
mov
subl
xchg
in
pushf
or
int
mov
inc
mov
xchg
sub
aas
lods
pop
outsl
jecxz
in
nop
call
and
jg
into
addr16
xchg
add
cmp
mov
nop
cmpsb
aas
lahf
dec
sub
pop
bswap
fstl
out
in
sbb
outsl
xchg
lods
je
imul
dec
jecxz
daa
aaa
and
insb
mov
lods
outsl
es
bound
loope
mull
andb
xchg
dec
or
int3
int
icebp
cmp
cmp
scas
daa
adc
cwtl
push
leave
or
adc
ret
icebp
rclb
inc
fdivrl
lret
bound
dec
rcrl
fisttpl
xor
pop
out
add
pop
pop
or
sub
movsb
fldl
test
xchg
outsb
xor
mov
pop
or
mov
jecxz
nop
dec
xor
inc
xchg
rorb
sub
jg
sub
pop
xchg
inc
jns
add
sub
mov
cli
mov
inc
xor
lahf
or
dec
loopne
and
fnstsw
out
fmulp
push
mov
in
cmp
dec
movhlps
pushf
inc
pop
jmp
insl
dec
out
aaa
pushf
subb
pop
mov
and
inc
das
das
dec
stos
pop
fdivs
xchg
add
jecxz
lcall
movsl
jae
not
pop
push
pop
sbb
and
sbb
adc
repz
popf
mov
or
dec
ljmp
mov
stos
lods
pop
dec
enter
pop
push
sbb
mov
dec
xor
inc
sahf
adc
xchg
xchg
call
rcll
in
mov
in
dec
fdivrl
stc
and
jp
or
jb
add
sbb
not
sub
jns
dec
jno
and
pop
out
xor
xor
dec
mov
push
pop
adc
mov
fmulp
jne
jbe
and
sub
mov
shll
mov
sahf
or
pop
or
test
jno
call
jne
jl
lahf
cmp
mov
sub
int
out
xchg
cwtl
add
push
std
test
orl
pop
or
xor
sti
and
mov
sti
loopne
mov
outsl
pop
or
stos
inc
movsl
add
mov
shl
mov
or
mov
inc
and
and
pop
movsl
mov
jns
out
push
call
fdivl
xchg
frstor
mov
xor
dec
xor
lods
xor
shlb
cmp
push
pop
add
hlt
xchg
cmp
test
xor
sub
sub
lods
sub
test
jg,pn
icebp
cs
ss
push
stos
pop
sti
xor
inc
lahf
cmc
xchg
lods
insb
xor
inc
ljmp
lcall
cmpsl
sub
push
insb
mov
cld
fsts
adc
dec
pop
cvttps2pi
hlt
lahf
data16
inc
xorl
mov
mov
sti
enter
daa
jmp
add
call
pop
pop
jge
add
add
jae
mov
jl
pop
pop
inc
inc
decb
cwtl
paddsw
sbb
loopne
jle
das
xor
sti
inc
rclb
mov
cmp
xor
lea
push
push
or
leave
inc
in
clc
filds
sbb
fadd
pushf
cwtl
fs
pop
mov
push
roll
popf
cmp
pop
sbb
movsl
lods
sarl
mov
dec
mov
movsb
xorl
jns
test
data16
les
pop
push
xor
sub
dec
add
into
aas
cmpb
xchg
dec
subb
stos
xchg
push
xor
inc
cs
dec
sub
dec
add
dec
icebp
fists
test
and
out
mov
sbbb
std
out
sub
jmp
popf
inc
jbe
inc
dec
sti
add
and
in
dec
rorl
cmp
jmp
push
fcompl
or
sub
push
add
mov
and
mov
xor
mov
adc
cmpsb
mov
jns
pop
sbb
inc
fistpl
jns
les
mov
add
pop
sbb
sbb
or
mov
mov
fcoml
test
sbb
cli
out
movsb
push
in
shlb
fiadds
popf
stc
add
dec
sbbb
aas
cmpsb
bound
dec
mov
xchg
xor
in
pop
mov
gs
ss
xchg
dec
ret
sub
xor
push
jns
outsl
mov
add
xchg
ss
testb
mov
dec
mov
pop
and
inc
in
data16
dec
sahf
push
paddb
cli
xchg
pop
enter
jne
inc
dec
rcr
lret
push
adc
jnp
cltd
or
fcmovu
xor
jle
xor
sub
xchg
jmp
outsb
js
data16
movsl
outsb
mov
neg
mov
mov
push
xor
aad
mov
addr16
int
sahf
lahf
or
cwtl
stos
or
sub
cmp
adc
mov
cld
lcall
pop
pop
pushf
sbb
std
add
dec
or
cmp
xchg
and
pop
pop
mov
sub
lods
push
pop
sub
jg
cmp
daa
call
lcall
jbe
add
insl
and
lds
push
ljmp
push
aad
ljmp
imul
stos
cmpsl
lds
lret
ret
int
xor
movsb
xchg
push
cwtl
pop
add
nop
push
lret
lods
mov
sbb
adc
jl
dec
or
pop
ja
mov
jb
jno
inc
adc
lret
cltd
fisttpll
dec
stos
scas
mov
sbb
arpl
pop
jl
icebp
adc
mov
lcall
jne
cmp
jmp
jb
clc
call
sub
out
and
jp
jbe
movsl
xchg
cmp
pop
push
and
dec
stos
cs
pop
pop
pop
xor
inc
xchg
add
sub
in
push
jg
xor
cmpsl
int3
mov
dec
mov
inc
jns
add
pop
jge
aad
imulb
or
or
jb
nop
bound
dec
or
mov
cmc
roll
pop
inc
pusha
mov
mov
fbld
leave
repnz
and
xchg
popa
mov
jecxz
cmpsb
dec
xchg
das
xchg
sub
out
inc
repz
adc
lahf
mov
shr
mov
test
push
push
ss
inc
jge
js
dec
dec
dec
bound
out
jle
ret
sahf
pop
cli
push
adc
adc
sub
push
out
cmp
sbb
les
add
stos
popf
insb
out
lret
aaa
paddw
push
adc
mov
push
add
fbstp
test
fwait
notl
sub
jo
cmp
xor
pop
adc
test
cmc
mov
call
stos
xchg
in
and
mov
mov
jae
mov
jne
mov
and
and
jl
pushf
inc
mov
or
xchg
out
fstpt
xchg
cmc
jge
lahf
dec
pop
lret
sub
inc
pop
add
jae
movsb
sbbl
je
test
jp
insl
sbb
repnz
pop
mov
or
sarb
mov
pushf
xchg
aas
pop
cmp
and
jb
std
dec
push
cli
lods
insl
ljmp
inc
push
and
in
pop
ja
insb
rcrb
sbb
inc
adc
out
in
dec
call
dec
pushf
in
sbb
fucomp
lea
sarb
dec
fcomps
mov
pop
nop
std
gs
std
xchg
add
shrb
aad
or
enter
jg
and
or
pushf
or
or
mov
cld
mov
dec
iret
scas
es
inc
inc
mov
lods
inc
sbb
pop
inc
sub
xchg
or
adc
in
pop
fldenv
scas
mov
push
add
mov
pop
push
stos
xor
xchg
sarb
pop
mov
pop
movsb
and
hlt
rcrb
pop
xchg
jl
movsb
and
int3
movsb
pop
add
inc
sub
push
es
and
test
fists
pop
loope
es
and
dec
xchg
and
lods
mov
aas
cmp
in
ror
insl
pop
loope
push
add
jmp
add
sub
pop
scas
inc
idiv
aas
pop
mov
sahf
daa
andl
cmpsb
jecxz
pop
mov
inc
cmp
inc
push
jmp
fwait
rorl
out
and
lods
in
push
mov
inc
enter
pop
dec
outsb
or
lods
insb
sbb
arpl
pop
andl
adcb
xor
mov
pop
out
bnd
xchg
add
lea
and
pop
add
jl
data16
jns
andb
inc
enter
mov
ds
mov
pop
jbe
test
add
bound
dec
lock
and
test
adcl
dec
pushf
add
inc
pop
ljmp
ret
inc
xor
pop
dec
push
inc
xorb
js
flds
mov
mov
ret
xlat
and
pop
and
mov
sti
outsl
popf
mov
inc
jne
sbb
sbb
cld
icebp
inc
fistpll
enter
dec
and
sbb
aad
mov
lods
add
bound
orb
loope
sub
das
add
xchg
and
fmull
arpl
stos
sub
in
cmp
cmp
testb
push
mov
and
in
xchg
push
adc
xchg
mov
add
mov
mov
push
fdivl
sbb
orb
add
lods
mov
mov
sbb
les
inc
pop
mov
ds
cmp
pop
daa
rolb
jg
push
lahf
or
jmp
xchg
ffreep
inc
pop
sbb
test
cwtl
into
and
insb
sub
mov
xorb
enter
xor
das
cmp
pop
and
test
gs
adc
pusha
xchg
andb
pusha
or
cmp
incl
or
adc
add
and
sub
jp
pushl
xor
cmp
inc
decl
push
push
pop
pop
pusha
fs
in
in
stos
fisttps
roll
mov
lock
push
jmp
push
ja
cwtl
idiv
and
cltd
mov
dec
cs
dec
sub
int
cwtl
jg
fdiv
xor
lods
xlat
jb
sbb
call
sub
jle
shr
test
lock
jl
fisubs
fstpl
jns
outsl
leave
pop
dec
jnp
subl
stc
push
rcrl
xchg
lahf
inc
mov
test
dec
pushf
xor
adc
insl
and
sbbl
cmp
mov
adc
cmc
cs
out
iret
cltd
lahf
cmp
ficompl
adc
add
sub
punpckhwd
mov
push
xchg
imul
ja
sbb
pusha
pushf
inc
sbb
pop
push
jge
sub
xor
cmpsb
push
mov
mov
cmc
popf
mov
push
arpl
push
or
pop
jge
ffree
push
ror
pop
pop
sbb
pop
ljmp
push
or
and
stc
ret
stc
fst
leave
insl
std
inc
push
test
mov
cmpsb
bound
inc
or
lahf
cmpsb
arpl
test
push
cmp
out
jns
or
pop
stos
xchg
roll
idivl
pushf
les
adc
or
push
jp
outsb
scas
aas
into
or
test
add
lahf
jmp
mov
test
jae
push
mov
add
push
sbb
ljmp
xor
inc
scas
xor
in
sub
fwait
and
pextrw
push
mov
dec
fstps
or
popa
jne
adc
push
sarb
lds
arpl
test
or
es
sti
nop
mov
mov
test
mov
push
xchg
push
nop
cli
lds
mov
lret
lahf
xor
mov
mov
shr
lret
mov
and
test
lahf
xor
push
or
jnp
sub
jns
mov
xchg
or
add
mov
imul
cmp
dec
mov
xchg
clc
sub
push
pushf
cmp
out
mov
test
loop
mov
adc
insl
sub
shl
mov
add
and
fbstp
stos
jns
push
jb
cmp
int3
pusha
sbb
inc
or
jne
and
dec
or
es
pop
pop
inc
mov
adc
imul
mov
fsubl
lret
sbb
stos
add
and
andb
jl
insb
cmp
stos
add
sub
pushf
sub
test
mov
inc
idivb
shrl
popa
mov
sub
jo
mov
insb
lgs
pushf
inc
xchg
mov
notl
sub
mov
and
stos
rorl
inc
int
mov
fisubl
mov
mov
push
mov
inc
pusha
xchg
and
xor
mov
je
and
jns
int3
xchg
cmp
sbb
sahf
dec
notl
pop
js
sub
add
mov
mov
stos
sahf
in
dec
imul
lret
jge
mov
je
pop
lds
cmp
dec
pop
mov
inc
stos
jno
repnz
pusha
push
dec
test
cmp
popf
mov
into
xchg
nop
sub
scas
xor
bound
jne
fisttpl
outsb
xor
jmp
cmpsl
iret
sbb
and
mov
cmp
push
sahf
and
and
and
call
or
sub
popf
mov
fisttps
and
shlb
ljmp
xor
or
sahf
or
pop
xor
pusha
dec
ret
jmp
pop
jle
xor
nop
sub
in
xchg
pop
cmp
out
lret
inc
imul
repnz
out
jl
data16
arpl
in
mov
mov
ja
adc
sbb
jle
sbb
enter
mov
fnstcw
or
push
pop
andl
mov
mov
paddusb
cld
int
adc
push
lahf
stos
arpl
and
jecxz
mov
push
rclb
roll
lret
mov
clc
or
cmc
lods
lahf
push
sub
cli
lods
mov
std
xchg
push
mov
imul
daa
call
stos
iret
sbb
sbb
mov
and
cld
mov
int3
pushf
dec
pop
cmpsl
ljmp
hlt
mov
frstor
adc
aas
fcoml
pop
mov
enter
xor
nop
fld
mov
in
push
mov
mov
cmc
pushf
pusha
cmpsl
lcall
pop
mov
sub
mov
insb
cmp
aas
adcl
pop
pop
mov
stos
insb
cmp
jmp
ss
mov
hlt
sub
push
mov
fs
leave
mov
cwtl
test
iret
jns
or
lds
mov
sbb
cmc
add
nop
rcrl
push
inc
test
popf
ds
and
test
loope
and
push
adc
push
das
rol
push
or
lcall
dec
loopne
mov
mov
sbb
fimuls
arpl
call
mov
nop
in
insb
push
inc
jecxz
mov
cmp
jae
out
jmp
hlt
xchg
mov
roll
dec
jl
or
and
outsl
insb
inc
sahf
pusha
mov
xor
loope
insb
mov
pop
test
cmp
pop
xor
pop
bound
mov
dec
cmp
xchg
mov
outsl
in
add
and
add
mov
insl
push
adc
cmp
stos
cmp
pusha
xor
aad
pop
sbb
flds
pop
mov
ds
pop
stos
fcomps
mov
repnz
inc
adc
inc
mov
lods
push
adc
in
divl
xor
insb
sub
icebp
xor
lds
sbb
cmp
lds
sbb
push
mov
loope
or
dec
xchg
push
add
xchg
fldenv
rcrb
fnop
or
or
inc
insb
call
jl
adc
daa
fisubs
fisubrl
jle
pop
sbb
add
adc
fcoms
mov
or
fcomp
loopne
aas
push
fisttpl
sub
mov
xchg
mov
sub
imull
dec
jnp
sbb
jnp
push
mov
or
mov
xor
add
pop
sub
cmp
loope
aas
adc
push
sti
cwtl
leave
in
shl
pop
and
loop
and
sti
dec
aam
lods
xchg
rcrb
add
or
push
dec
push
adc
in
lahf
sbb
xchg
stos
je
daa
add
push
shrl
push
ljmp
leave
sub
shlb
xor
int
call
push
test
or
stos
test
adc
or
xchg
push
push
gs
mov
xor
mov
push
shll
pop
push
mov
lods
add
push
sub
and
and
icebp
das
pop
outsl
pop
dec
jmp
lods
cmpsl
adc
mov
cld
sbb
js
test
adc
pop
cmp
push
fcmovne
pop
add
pop
psrlq
testb
ret
pop
and
clc
cwtl
jp
pop
jns
ds
or
insb
add
or
cmc
pushf
shrb
push
mov
test
iret
and
insb
int
cwtl
icebp
adc
xlat
xchg
add
lahf
inc
sbb
aas
and
stos
add
xor
iret
fsts
dec
in
ljmp
and
mov
movsb
sahf
lea
pop
out
xor
and
jae
push
pop
xchg
int3
mov
pop
mov
outsl
fstpl
inc
push
mov
jge
push
mov
sub
mov
js
repz
lods
push
inc
mov
jo
jmp
xor
pop
outsl
dec
int
pushf
ds
and
mov
fdivl
daa
dec
and
adc
mov
sub
xor
imul
cmp
pop
and
imul
jmp
mov
push
sub
cwtl
lods
push
mov
in
adc
jecxz
jae
jns
aam
sub
xor
cmp
popf
test
mov
aam
outsb
es
jl
mov
sbb
inc
mov
fmuls
je
jbe
mov
into
ret
stc
jmp
es
lcall
dec
rcll
adc
add
mov
stos
pop
std
in
mov
int
push
aad
subb
popa
lahf
mov
int
pop
out
push
js
mov
test
fsubrl
jp
fucomip
dec
cmpb
in
cmp
adc
out
cmp
xor
mov
jnp
cmc
cmpsb
scas
pusha
call
xchg
outsb
rcll
inc
or
ljmp
mov
mov
movsl
in
lods
sbb
pusha
push
jne
aas
mov
test
mov
stos
movsb
inc
loop
fisttpl
inc
aam
add
xchg
out
push
mov
loop
push
push
cld
sarb
movsl
mov
or
sbbb
insb
or
call
xor
jae
pop
mov
sub
mov
xchg
or
fsubl
mov
xlat
adc
or
inc
add
je
add
clc
gs
outsl
push
sbb
cmpsl
fists
pop
or
iret
jg
sarl
lahf
icebp
ret
xor
in
xchg
pop
mov
mov
sahf
cmp
cmp
mov
and
rolb
sbbb
mov
js
jge
cs
lds
test
dec
inc
pop
sbb
fistpll
leave
xlat
cmpb
movsb
mov
fistpl
mov
bound
sti
pop
pop
in
stos
sub
push
pushf
xor
mov
psrlq
orb
loop
dec
and
repz
call
xchg
insl
adc
inc
ret
cmp
lahf
mov
push
sbb
xor
in
adc
sub
or
std
jle
pop
lahf
movsb
sbb
pop
iret
or
ss
cld
mov
lahf
sub
das
call
mov
lcall
xchg
cmp
and
ds
lret
stos
pop
stos
out
push
es
jbe
cld
iret
out
adc
mov
scas
sbb
dec
push
std
cmpb
cwtl
or
in
jb
mov
xor
mov
cmpsl
pop
pop
or
mov
das
xor
inc
mov
sbb
inc
loopne
cld
mov
mov
jo
cmpsl
fadds
sub
push
sbb
add
fldt
stc
dec
imul
inc
mov
cmp
sub
jne
aas
cmp
inc
test
inc
and
stos
in
or
nop
sti
and
sarl
jns
sub
dec
push
rol
sub
and
add
icebp
sub
loope
mov
ror
shlb
xor
cld
mov
jno
push
rorb
xor
js
int3
cwtl
mov
int
cmc
mov
cmp
xor
stos
jl
pop
cmp
add
das
nop
stos
lret
push
scas
add
or
jl
sub
xor
insb
mov
dec
xchg
in
dec
pop
scas
mov
data16
cmpl
movsl
cwtl
mov
adcb
push
jne
dec
jne
test
sbb
stc
es
push
adc
in
out
push
or
sbb
dec
shrb
sub
leave
int
outsb
aam
add
leave
inc
jbe
add
jbe
lret
cmpsl
bound
jne
jno
outsl
insb
clc
mov
push
or
mulps
mov
je
jl
popa
pop
add
outsl
cmpsb
xchg
sbb
stos
mov
test
xchg
xor
call
adc
adc
push
push
xchg
mov
mov
mov
mov
push
and
int3
fstps
and
aad
rcrl
jne
pmaddwd
shll
xor
clc
xor
aas
loope
dec
loopne
cld
leave
aas
mov
jge
decb
xchg
scas
mov
cwtl
int
pop
call
sub
mov
sub
adc
mov
xchg
and
adc
aad
ud1
shrl
mov
jle
cmp
jne
loopne
cltd
aas
rcl
or
enter
clc
mov
add
sbb
sub
fsubs
aam
stos
mov
je
cwtl
adc
roll
leave
cmp
les
int
arpl
sbbb
push
insl
packsswb
push
pop
sti
cmp
popa
clc
inc
or
sub
dec
dec
outsl
sti
sahf
mov
mov
cld
test
or
fbld
push
mov
lahf
and
cwtl
add
dec
cmp
jp
xor
mov
pop
ret
pop
push
or
adc
cmp
test
add
cmp
ss
pop
xor
xor
roll
mov
aaa
lfs
add
stos
mov
mov
cmp
frstor
cld
fcoml
or
or
cmp
mov
jmp
dec
cmp
rcll
lcall
divl
faddl
divl
or
sub
outsl
loop
pop
gs
test
out
add
cmc
mov
mov
push
dec
inc
push
add
inc
xlat
push
push
xchg
pusha
inc
adc
xchg
or
addl
dec
push
pop
mov
pushf
lahf
mov
mov
mov
or
cmp
sub
out
mov
pop
cmpsb
add
nop
test
push
fbld
movsb
out
mov
inc
add
cli
cmp
sub
pop
pop
pop
sub
imul
and
and
jmp
pop
mov
jb
pop
inc
cmp
cs
inc
pop
sbb
inc
jb
jno
push
push
fcomps
mov
sbb
outsb
and
pop
outsl
dec
into
mov
loope
adc
rcrb
add
fdivrl
test
in
pop
out
dec
dec
int3
fidivl
xchg
fists
sbb
lock
addr16
add
inc
addl
rclb
test
inc
pusha
mov
xorb
cmp
or
sarl
sbb
popf
push
in
cmp
lret
push
xchg
adc
adc
xor
mov
ret
add
fistpl
push
add
fdivr
imul
in
sbb
test
fstpt
test
std
push
sub
xor
inc
fsubl
mov
dec
repnz
dec
pusha
rol
cmp
or
in
rclb
jbe
add
mov
test
mov
int3
inc
xchg
sub
adc
les
out
fistps
jg
xor
out
lahf
fimuls
cmpsl
mov
pushf
inc
adc
cmp
data16
ss
sbb
shll
fs
shlb
sub
roll
add
sub
jg
iret
pminub
ret
cmp
out
std
stos
mov
sbb
ficoms
aad
push
test
sahf
test
idivl
nop
pop
inc
pop
mov
xchg
and
mov
cmp
cmp
cmp
lock
and
cld
sbb
inc
iret
mull
test
pop
mov
addr16
int
lret
das
inc
mov
cld
xor
fsubl
loope
in
fmull
cmp
das
lods
and
push
pop
lahf
pusha
pop
and
inc
call
inc
xor
dec
inc
pop
jno
or
xor
or
xchg
and
xchg
sub
pop
and
xchg
call
add
and
jb
cld
lock
and
mov
cld
inc
fwait
xor
js
mov
and
push
cs
pop
xor
mov
push
fstpt
add
sub
das
rorb
cld
ljmp
loop
enter
test
ret
cld
xchg
dec
add
push
cmovs
push
out
cld
ret
xor
or
and
cmp
call
push
xor
add
sub
and
cld
adc
sbb
cld
les
cmpsl
inc
fstps
xchg
addl
aad
push
inc
loop
das
xchg
pop
dec
sub
sbbl
popf
fdivrl
test
inc
dec
stos
fsts
push
fwait
dec
sbb
inc
dec
das
sub
daa
inc
sar
jmp
fnsave
mov
jg
aas
cmp
cld
adc
cmp
mulb
lahf
popf
hlt
mov
orl
cld
jecxz
and
inc
adc
cld
popf
and
pusha
test
sub
out
mov
and
mov
and
mov
mov
mov
dec
sbb
mov
adc
and
leave
test
xchg
xor
push
and
pop
xchg
xchg
nop
int
lret
mov
jo
mov
push
push
frstor
gs
popa
mov
jge
paddusb
sbb
cmp
push
or
test
pop
dec
pop
add
faddp
jge
sub
or
cmp
fldl
push
cmp
mov
repnz
mov
je
add
lcall
and
push
fimuls
pusha
imul
push
xor
adc
pushf
ja
and
sub
pusha
mov
xchg
in
lea
inc
mov
add
rclb
xchg
fisubs
push
pop
in
lret
call
jno
mov
ffreep
jp
fsubrl
fistpl
jl
div
mov
cmp
sub
sbb
xor
cld
lahf
je
ljmp
out
jno
mov
daa
ss
jmp
lahf
out
pop
xchg
popf
insb
push
mov
int
nop
arpl
cmpb
xchg
or
in
mov
xchg
pop
in
push
pop
pop
pop
inc
adc
int
outsl
jle
cmp
inc
cmp
jns
mov
or
cwtl
jle
aas
dec
or
xchg
push
dec
ljmp
or
xor
jne
dec
pop
cmpsl
jecxz
pop
and
xor
cmp
xor
mov
mov
xchg
out
mov
jle
jmp
sub
inc
sti
leave
xor
shr
or
fbstp
icebp
cmpsb
jae
stos
xchg
imul
push
aaa
add
scas
pushf
dec
pop
lea
cmp
mov
jo
sahf
outsl
jbe
inc
inc
jecxz
jl
mov
outsb
adc
mov
jl
gs
fildl
mov
loop
jg
pop
das
in
or
jnp
aaa
stos
addr16
pop
mov
lea
mov
popf
outsb
jno
imul
push
in
sub
lret
sub
in
popa
add
ss
add
lea
imul
xor
xor
in
jae
movsl
add
push
cmpsb
fcmovnu
cmp
mov
cmp
dec
mov
or
add
mov
lret
ret
add
xor
movsl
jle
cs
adc
in
pop
in
repz
cli
dec
or
pop
loope
sbb
stos
fisubl
cmc
ds
and
jbe
mov
ljmp
adc
jae
outsl
mov
pop
test
call
jnp
adc
inc
pushf
jmp
ret
dec
mov
aas
xchg
cmp
push
inc
push
push
pushf
push
xchg
loopne
xchg
pop
adc
lcall
jo
adc
and
and
dec
dec
out
mov
jle
mov
negb
pop
cld
loopne
rcll
dec
pop
scas
test
push
popf
js
loope
test
repz
bts
sub
and
pop
cmc
shl
in
inc
adc
jle
lods
xlat
sbb
pushf
lds
sub
movaps
inc
sbb
fdivrl
imul
into
sahf
pop
jp
jl
jbe
xchg
mov
out
jb
je
add
pushf
aad
jae
push
outsl
enter
pop
call
nop
imul
lahf
push
jp
sub
pop
add
popf
cld
jmp
push
mov
xor
movsb
jl,pn
or
testb
inc
mov
dec
ss
inc
push
addr16
xor
test
mov
mov
das
push
xchg
fs
cmp
flds
adc
push
test
out
lahf
jo
pop
test
mov
syscall
inc
popf
and
pushf
sbb
mov
or
addr16
xchg
mov
xchg
mov
sub
pop
aad
pop
cmp
cmpl
stos
xchg
cmpl
aam
pop
inc
inc
insb
inc
cmp
mov
pop
mov
add
and
sbb
clc
aas
cmpb
push
inc
insb
out
xor
push
and
cmp
int
and
scas
push
cmp
mov
ja
scas
in
mov
push
pop
or
jp
dec
loopne
mov
comiss
shll
fisubs
aas
cmp
xchg
jno
js
out
rolb
inc
scas
arpl
ret
xor
pop
inc
mov
cmp
sub
or
and
pop
sbb
and
je
dec
mov
jno
mov
pop
mov
sub
call
push
push
repnz
lret
and
ds
mov
movsb
stos
int
inc
push
pop
loope
aad
mov
cmp
lods
jno
dec
adc
cld
pop
mov
pop
outsl
xor
sub
lret
mov
shrl
mov
mov
sti
dec
cmp
pop
shrl
push
mov
mov
dec
andb
leave
fldcw
bswap
enter
mov
sub
xchg
jns
adc
jl
es
lret
hlt
mov
dec
add
xlat
divl
in
stos
loop
jge
sbb
lock
pop
push
popa
ja
push
fldt
sbb
fistps
or
sub
sub
or
ljmp
dec
cs
out
push
arpl
mov
lahf
and
dec
cli
adc
lahf
out
cmpsl
mov
or
dec
lahf
mov
xchg
aad
test
jmp
cmp
push
adc
push
mov
sbb
inc
push
xchg
jno
jae
cmc
pop
adc
push
shrl
and
pusha
sbb
aam
sbb
add
in
add
xchg
icebp
pushf
stc
xor
jle
push
call
insl
jbe
dec
lret
andb
ja
inc
inc
sahf
arpl
jb
dec
pop
xor
js
cwtl
int
dec
mov
xchg
les
push
mov
movsb
fcomps
ds
icebp
sub
xchg
mov
jb
lret
lods
int
dec
push
pop
negb
adc
in
sbb
add
push
in
mov
mov
rep
and
jne
emms
dec
out
outsb
sbb
andb
push
mov
push
out
outsl
pop
mov
int
hlt
iret
xchg
fcoml
cmp
and
scas
add
inc
jl
add
in
les
les
jo
nop
or
adc
xchg
shld
mov
ficoms
loop
fidivs
xchg
repz
in
es
mov
mov
mov
cltd
dec
add
lret
xchg
jge
sbb
cltd
add
lahf
mov
xchg
inc
out
fstpt
push
inc
shrb
mov
mov
adc
test
bound
mov
jns
sub
popf
lock
jb
movsb
xchg
enter
xchg
in
insb
lock
cld
cmp
jns
xor
mov
push
stos
mov
insl
adc
xchg
jl
imul
stos
inc
sub
loop
icebp
push
push
pop
shll
adc
lea
mov
inc
pop
push
sbb
jo
cltd
out
jp
pop
adc
lods
hlt
push
pop
pop
sub
and
xchg
insb
ret
insb
js
clc
mov
ret
ljmp
scas
in
or
inc
add
jae
aad
in
push
jl
sbb
ret
outsb
movsl
out
and
test
sub
pop
xor
and
lock
sbb
cmp
popf
mov
pop
ss
jb
jns
popf
sub
insb
sbb
sbb
sub
andb
js
and
adc
adc
push
xor
sbb
push
cmp
sub
and
cld
test
xor
fcoml
cmc
cld
or
insl
push
pop
cmp
jb
mov
outsl
add
xor
clc
pop
dec
sbb
jmp
xor
stos
pop
std
xor
pop
xchg
and
inc
shll
lods
sub
sub
movsb
andb
jg
xchg
mull
and
rcll
icebp
inc
jns
sbb
push
stos
xor
sub
pop
loop
xchg
pop
mov
add
fmul
and
mov
adc
rcrb
jo
repz
mov
push
inc
or
cmp
loop
cmp
inc
in
sbb
aad
pop
jo
cld
add
xchg
inc
push
jno
ds
lcall
ss
jae
adc
xor
lea
or
popf
inc
les
inc
push
or
pushf
add
jno
shl
adc
push
adc
outsl
orb
jne
mov
and
and
iret
fistpll
add
lock
push
mov
push
aas
lods
and
dec
repz
inc
pusha
mov
xor
cmp
and
xor
in
and
mov
adc
jge
in
orb
notl
mov
int
cmp
xchg
loope
lods
xchg
pop
jp
mov
pop
add
jne
mov
repnz
call
push
call
stc
xor
cmp
inc
ds
stos
into
pop
add
sbb
mov
pop
or
iret
fidivs
xor
mov
out
fnstcw
stos
xchg
addr16
and
fiaddl
mov
aas
and
addl
or
in
and
es
std
xorl
lock
pop
daa
xor
mov
fsubr
lods
mov
test
aad
jae
jl
scas
roll
insb
or
add
adc
mov
arpl
xchg
jnp
out
adc
pop
lods
inc
test
add
add
nop
sbb
pop
xor
xchg
pop
cld
iret
out
int3
lahf
push
shll
lcall
test
loopne
jg
sbb
jge
cmp
cmp
xor
jno
adc
insb
inc
call
test
pusha
lods
sarb
int3
or
out
inc
inc
adc
mov
add
mov
std
aaa
pop
inc
std
stos
out
jb
fistpll
or
les
or
pop
jbe
jne
dec
sbb
jl
vpsubusb
pusha
xor
adc
add
cmpsb
in
insl
mov
arpl
ss
xchg
push
out
cli
adc
add
scas
sub
mov
fstl
int
xchg
mov
cli
mov
repz
nop
fistl
fisubrl
shl
inc
jns
xchg
cmc
pop
lods
gs
int
push
cmpsb
fmul
call
inc
dec
cli
sub
fnstenv
mov
push
push
aam
or
adc
pop
mov
iret
les
mov
sbb
movsl
repnz
rcrl
or
idiv
sbb
jg
aad
jle
add
mov
test
roll
mov
decl
and
int
test
fmull
hlt
cmp
inc
pinsrw
ret
add
mov
fdivrl
not
icebp
jl
iret
cmpsb
mov
int3
sub
or
stos
mov
jmp
add
pop
push
cmpsl
pop
sbb
test
lahf
jae
mov
push
rcll
mov
dec
push
daa
jle
clc
call
rcrb
insl
dec
nop
fisttpl
cld
push
xchg
dec
sub
pop
test
sbb
add
in
call
les
mov
mov
dec
xchg
pxor
or
pop
out
nop
jno
icebp
inc
mov
cmc
pop
arpl
aad
jno
jmp
jmp
and
out
mov
xor
xchg
cmp
fadds
mov
popf
jp
cs
add
mov
xor
nop
push
add
push
dec
mov
pushf
inc
cmpsl
insl
and
add
jno
and
cli
out
pop
jo
xor
push
dec
push
out
mov
mov
bound
insb
push
mov
hlt
mov
dec
pushf
out
sti
lea
stc
pop
mov
pushf
adc
int
imul
and
xor
nop
imul
add
cmp
iret
nop
sub
push
push
xchg
imul
in
test
fs
out
sub
or
adc
or
stc
pop
cs
testl
inc
in
pop
push
inc
filds
loope
jnp
movsl
adc
xor
mov
mov
pop
jae
stos
out
jno
inc
neg
xchg
mov
into
and
mov
cwtl
hlt
dec
or
mov
mov
push
insl
fs
enter
pop
and
push
xor
out
lods
and
sub
push
inc
push
add
test
out
rcrl
mov
enter
mov
push
inc
sub
sub
mov
sub
fisttpl
jno
lods
mov
add
xor
fisubrs
add
cwtl
jne
cs
add
notl
int
mov
jle
stos
sbb
push
pusha
xor
inc
adc
inc
lea
and
mov
loope
pusha
scas
adc
add
sbb
es
mov
insb
mov
xchg
imul
cmp
in
roll
pop
int
mov
test
jns
pop
jecxz
xor
or
rep
lret
clc
and
dec
ret
xchg
inc
je
sbb
jg
inc
popf
or
repz
lahf
insl
xor
dec
lods
cwtl
psubq
mov
or
testb
dec
jne
cmc
lods
inc
jns
jmp
ljmp
int3
push
push
inc
fucomip
jmp
pop
mov
push
push
push
out
push
sbb
stos
dec
inc
dec
adc
sub
test
dec
scas
sahf
and
pop
jb
and
push
jecxz
ret
aad
sahf
adc
push
data16
mov
jns
ret
xor
xchg
cmp
lcall
and
jg
cwtl
lahf
pop
clc
sub
call
out
pusha
fldcw
sbb
or
fcoms
mov
test
fwait
jp
bound
nop
pop
add
pop
dec
jmp
fmuls
sub
and
pusha
mov
adc
add
fldcw
rorb
sti
mov
xor
inc
stos
xor
enter
sbb
inc
mov
insw
jns
jmp
dec
xlat
push
mov
xchg
mov
push
xchg
adc
inc
in
lods
jbe
mov
imul
ljmp
mov
or
shll
fildll
adc
adc
shlb
cmpsb
lea
addb
or
jmp
insb
jbe
or
mov
je
jle
or
mov
rcll
jge
adc
sbb
adc
ret
sub
cmp
addr16
lock
mov
jns
in
adc
test
mov
jnp
dec
mov
sbb
sbb
mov
adc
add
cs
aaa
mov
mov
imul
adcb
cltd
sti
addb
cmp
adc
mov
mov
test
dec
xorb
jge
lcall
adc
ficompl
inc
icebp
adc
mov
fs
scas
cli
sub
test
hlt
rcl
inc
jbe
and
or
push
pop
into
scas
dec
es
push
push
inc
jle
xchg
push
out
mov
xchg
push
adc
adc
jno
mov
rcll
add
or
dec
inc
and
iret
ja
rclb
shll
jl
cmp
adc
adc
xor
mov
pop
cwtl
cmp
jmp
inc
je
inc
push
ficomps
mov
loop
shlb
fidivl
jmp
lea
shrl
ret
cmp
adc
ljmp
mov
pop
and
push
xor
pop
inc
incl
cmpsl
sbb
dec
int
repnz
mov
mov
inc
mov
mov
rcll
ffreep
add
lahf
and
aas
mov
jl
sbb
popf
std
jno
push
out
pop
or
inc
pop
ss
xchg
mov
add
sub
popf
gs
jmp
mov
inc
stc
sub
divb
add
arpl
push
jb
movsb
clc
aaa
mov
cmc
out
inc
sub
sub
and
cmp
dec
mov
je
xor
pop
sub
xchg
ds
scas
push
std
jb
ds
insb
inc
shll
enter
jb
xchg
xor
sbb
push
mov
xor
setle
push
adc
pushf
sbb
pop
cmp
and
and
and
cmp
add
aad
sub
jns
cs
jno
xor
adc
lcall
add
mov
inc
xor
push
jl
jg
sub
add
jge
aad
stos
lret
xor
jge
xchg
mov
lret
inc
pop
jno
adc
lahf
cwtl
pop
cld
icebp
push
dec
test
lahf
jl
insb
and
cmp
pop
imul
hlt
xchg
jns
sub
sbb
orl
sahf
loope
jbe
inc
cmp
rorb
shlb
les
dec
cmp
sub
and
and
ds
ficoms
icebp
pop
push
test
jge
ret
push
mov
adc
inc
cltd
pop
pushl
or
cmp
mov
mov
inc
pop
mov
inc
sub
xor
js
rcll
sbb
mov
sub
jbe
fimull
add
inc
push
sub
push
cs
jnp
dec
add
pop
aas
sub
push
arpl
data16
adc
pop
test
mov
out
sahf
fbld
push
gs
mov
jo
cs
cmp
xchg
call
or
add
push
pop
push
fiadds
sub
wrmsr
in
push
testl
clc
jo,pt
inc
or
in
rcl
mov
insl
les
pop
inc
shl
ds
das
pop
fisttpll
outsb
lahf
cwtl
inc
ds
push
mov
arpl
mov
popa
mov
icebp
fs
xchg
fistps
lods
adc
in
push
sub
sbb
mov
popa
pop
add
arpl
movl
jns
std
cmp
add
sub
pop
xor
cmp
test
sbb
mov
cmpb
stc
into
sbb
imul
jbe
xor
subl
cmp
and
out
mov
mov
dec
ja
sub
xor
int
sbb
mov
jbe
cmp
add
add
mov
ss
lahf
push
jo
cld
int
xor
dec
outsb
and
data16
push
lcall
mov
insb
cmp
sbb
fistpll
sbb
jno
sbb
cmp
adc
sbb
pop
and
loopne
add
call
lahf
leave
movsb
adc
arpl
stos
add
sub
cmp
ret
inc
add
xchg
mov
jbe
or
cmp
or
sub
and
cmp
inc
jmp
jl
lahf
repnz
mov
es
fisttps
insl
mov
jl
push
or
pop
andb
pop
inc
push
orl
mov
xchg
sub
hlt
adc
xlat
sbb
movsb
sub
stos
mov
jns
cmpsb
push
pushf
call
jns
cmp
push
je
add
nop
inc
sarl
test
fiaddl
push
adc
popf
addr16
pop
int
dec
add
sub
push
xchg
inc
adc
xor
jecxz
cmpsb
shr
mov
cmp
cld
sbb
sahf
dec
das
lods
cmp
dec
andl
lea
pop
mov
sarb
imul
pop
test
inc
sbb
xchg
lods
lret
pop
rorl
shlb
adc
cmp
ret
sahf
inc
sbb
jns
sub
cmp
pop
xchg
cli
add
sub
sbb
mov
ja
sahf
lcall
mov
xor
ss
pop
fcom
sbbl
das
adc
jbe
sbb
xor
mov
lret
adc
mov
inc
jns
sub
jns
pop
cmp
push
sbb
mov
jmp
mov
dec
jae
out
shll
testb
adc
stos
shrl
mov
cmc
in
sbb
fistpl
mov
add
pop
push
loopne
rorb
xor
inc
xchg
xchg
sbb
dec
sbb
pop
stc
jae
xchg
loopne
cld
shll
push
rol
int
lret
add
sti
int3
pop
xchg
fdivr
xchg
sub
mov
xchg
jns
cld
adc
repnz
mov
leave
shrl
pop
pop
gs
jp
popf
nop
and
movb
repz
mov
cwtl
pop
sbb
adc
outsl
push
scas
jl
scas
mov
dec
negl
mov
cmp
outsb
fsubl
mov
mov
and
adc
stos
mov
xchg
or
imul
loopne
mov
xlat
stc
and
add
adc
cmc
jmp
pop
lods
push
jecxz,pt
pop
movsb
daa
cmp
clc
sub
xchg
rclb
test
jns
flds
push
stos
xchg
out
movsl
pop
daa
xor
js
imul
dec
jecxz
xor
or
mov
nop
int
daa
sbb
add
stc
out
jp
shlb
inc
and
sub
push
xchg
cltd
push
push
xor
out
inc
sbb
mov
push
and
or
lahf
jb
jno
or
inc
hlt
jnp
and
adc
and
pop
sub
jns
mov
fwait
xchg
sbb
hlt
cmc
lea
out
or
and
test
jl
std
xchg
push
addb
cmc
sub
stc
xchg
push
aad
adc
pop
and
or
mov
pop
dec
repz
das
lock
enter
push
sbb
dec
int3
sbb
cld
push
add
jmp
push
dec
in
mov
loopne
inc
push
pusha
cld
mov
xorb
xchg
cld
das
aas
shlb
lcall
out
and
dec
repz
enter
test
sahf
jp
cld
imul
sti
mov
mov
mov
ja
xor
xor
fbld
cmpb
out
cmp
or
in
gs
cld
scas
xlat
cld
or
cld
aad
mov
fwait
cld
mov
mov
das
xchg
lcall
imul
int3
loopne
cmp
mov
xor
lcall
adc
shlb
adc
movsl
es
adc
out
jecxz
mov
test
lods
jle
addr16
pop
gs
mov
cmp
and
dec
std
cmp
xchg
into
std
sub
xchg
dec
cmpxchg
push
ret
and
lock
sbb
and
rcrl
and
xchg
mov
or
and
push
mov
pop
mov
sbb
xchg
imul
push
cmp
cli
gs
ss
mov
pushf
cmpl
int3
imul
shlb
sahf
lods
bound
inc
pop
pusha
shll
push
icebp
lahf
pop
movsb
mov
cmp
and
and
mov
xlat
pop
sbb
sub
and
inc
cli
pop
scas
dec
inc
mov
ficoms
push
push
or
enter
or
adc
or
jno
xchg
mov
pop
sbb
dec
fmull
pusha
lret
mov
bound
cmp
test
pop
jnp
testl
gs
or
or
bound
bound
and
rcrb
cmpsl
xor
sub
popf
test
pop
cmp
pop
jg
sbb
add
inc
or
jl
pop
and
mov
shll
or
inc
test
mov
mov
mov
and
bound
pop
and
and
fistps
dec
pushf
add
push
sbb
cmovo
inc
or
sub
add
and
and
bound
dec
loope
and
fldcw
bound
and
ret
jecxz
pop
cmp
xchg
fcoml
clc
sub
and
dec
and
lret
outsb
pop
aas
pop
mov
jmp
mov
imul
into
sbb
aam
ret
push
mov
sbb
jb
pusha
sub
cmp
add
dec
and
shrb
in
and
in
cmp
dec
imul
fadds
inc
sub
das
inc
dec
mov
fisubrs
pop
std
cwtl
sbb
popf
je
cltd
sbb
jecxz
je
cwtl
cmc
lahf
jecxz
sub
fiadds
jp
jge
sbb
scas
ds
sbbl
jo
and
jb
fadd
fs
insb
xchg
pop
xchg
pop
addl
add
add
pop
inc
adcb
pop
pop
fdivl
add
fldenv
and
int
xchg
dec
inc
leave
insb
iret
and
or
lods
cmp
xor
stc
test
pop
into
sub
push
sub
push
shll
pop
pop
and
andl
push
and
inc
pop
test
cld
ret
and
or
jl
and
pop
bound
pusha
in
inc
and
test
rcrb
je
mov
mov
pusha
sbb
sbb
dec
pusha
mov
and
lock
bound
and
xchg
rclb
jo
rcrb
pusha
jge
inc
adc
fldenv
popa
rcl
inc
xchg
ret
fsubs
arpl
bound
loop
lahf
inc
and
test
jl
loop
fdivrl
and
dec
mov
or
hlt
bound
gs
orl
add
movsb
js
mov
push
nop
aas
iret
pop
dec
sti
mov
mov
dec
pop
or
dec
mov
xchg
fs
scas
aas
pushf
dec
subb
sub
or
clc
rcll
jg
or
in
lret
mov
pop
jnp
hlt
xorl
dec
mov
add
mov
pop
dec
xchg
test
adc
or
push
frstor
xor
or
pop
pop
sub
idiv
mull
adc
xchg
xlat
push
push
push
mov
scas
leave
pop
fstl
andb
pshufw
sub
dec
call
jp
out
gs
int
add
fiaddl
mov
and
sbb
mov
push
popa
adc
ss
les
lahf
cmpsb
ds
xchg
mov
fistpl
dec
jne
fldl
idivl
notb
jno
stos
xchg
jmp
movsl
lea
sbb
pop
popf
lea
push
jne
out
popf
stc
mov
mov
lahf
cmp
and
mov
cmp
add
pusha
js
inc
cli
cmp
or
gs
jle
sbb
cld
sub
or
mov
test
push
cmpb
pop
sbb
insl
filds
jge
and
outsl
or
shll
mov
mov
pushf
sbb
pushf
lea
sbb
or
xchg
lock
pop
sbb
sub
ss
sbbb
mov
xlat
cmp
in
jl
ljmp
mov
inc
pop
pop
das
repz
test
cmp
cmp
inc
aas
lea
cli
addl
pop
mov
inc
popf
sti
in
mov
pop
ret
test
jnp
sbb
test
rorl
stos
xor
sub
sahf
loopne
mov
pop
outsb
jge
ret
shrb
sbb
jg
in
mov
pop
add
inc
and
jb
inc
stc
dec
pop
sub
pop
push
sub
out
mov
cli
sahf
pusha
and
icebp
test
pop
imul
cmp
or
pusha
test
pop
pop
divb
out
cli
and
and
dec
pop
mov
repnz
mov
adc
sub
or
lahf
lret
insl
cwtl
dec
push
leave
push
fwait
xor
jbe
sbb
enter
sti
xorb
inc
outsb
in
pushf
jbe
dec
pop
and
jp
jl
add
push
cmp
jle
imulb
lds
xor
sub
inc
dec
xchg
stos
sub
sbb
or
negw
pop
inc
rorl
scas
jecxz
roll
dec
popf
fucomip
aad
push
lahf
sbb
mov
cld
dec
or
adc
push
pop
dec
pop
sub
adc
dec
test
and
sub
sbb
jle
push
sub
and
inc
add
pop
rcrb
push
ficompl
fwait
dec
sub
mov
inc
dec
or
lods
imul
cld
out
popf
push
aas
lahf
loop
addr16
lahf
dec
addb
sarb
xor
cmpsb
inc
lds
cmp
lods
mov
insb
add
or
adc
mov
cld
sti
std
das
fcomi
insb
ja
inc
and
mov
mov
jecxz
repz
xor
mov
gs
jl
in
cmp
cmp
hlt
push
push
lea
mov
in
jecxz
xchg
push
mov
push
and
jns
nop
lret
stos
xchg
daa
rcrl
sti
adc
je
clc
xchg
insl
cmp
in
nop
dec
pop
shlb
dec
push
push
orb
movsl
cmpsl
xchg
int
xor
cmp
xchg
out
dec
jno
outsl
cltd
lahf
test
test
in
gs
int3
std
dec
loopne
push
jge
popa
shlb
cmp
xor
imul
adcb
push
jmp
add
ljmp
shll
xchg
inc
cs
push
inc
lcall
or
lahf
push
sbb
es
jmp
pop
out
sub
add
fisttpl
mov
add
xchg
mov
adc
pop
movsl
adc
divl
fnsave
xor
dec
enter
pop
imul
add
cmp
mov
jne
add
lods
jne
add
cmp
add
aam
sbb
lret
mov
add
xchg
sti
testl
repz
and
and
jmp
and
pop
dec
add
fs
mov
insb
inc
jnp
xor
cmp
xchg
inc
xor
cmpb
pop
inc
test
or
mov
inc
xchg
sub
popa
stc
cmp
sub
sub
pushf
sub
and
sbbl
pop
dec
add
imul
and
aad
gs
in
sti
nop
call
mov
in
movsl
lret
ret
mov
aas
xorl
adc
lea
and
inc
outsl
mov
mov
iret
jne
out
xchg
xor
mov
pop
in
gs
sbb
pop
pop
fidivl
popf
xchg
mov
test
inc
mov
sbb
lods
fistps
sarb
gs
add
xor
add
test
sub
add
dec
jbe
cmp
cli
sbb
mov
lahf
aad
in
pop
bnd
xchg
rorl
push
fisubl
and
bound
dec
mov
cld
test
sbb
adc
rcrl
loopne
int
sarb
add
add
cmp
cmp
push
sbb
adc
je
add
rol
cwtl
cmp
popa
test
push
or
ss
ss
sub
and
sti
aam
lahf
xor
mov
lods
jg
cmp
and
insb
add
cmp
jbe
aad
insb
mov
movsl
out
dec
cwtl
stos
mov
adc
pop
inc
jns
mov
xchg
lea
enter
ja
pop
sub
lea
jne
adc
std
inc
push
imul
dec
sti
xor
and
push
cmp
movd
mov
mov
xor
xor
ja
sbbl
addl
mov
sti
rorb
faddl
push
mov
mov
pop
popa
shlb
sub
rcrl
add
mov
pop
mov
int
cmpsl
add
sti
lret
xor
cmc
add
cmpsb
or
xchg
pop
jmp
in
pop
sbb
stos
das
dec
jle
dec
pushf
movsl
mov
and
mov
xchg
pop
mov
out
sbb
and
shr
sbb
jecxz
jb
dec
and
mov
lahf
xchg
or
sbbb
push
and
ss
std
xchg
jo
sub
xor
je
pop
out
dec
push
insb
in
dec
js
bound
mov
pop
jae
mov
stos
shrl
std
test
jecxz
mov
lea
insb
lcall
sub
jmp
pop
dec
cld
into
pushf
lahf
mov
mov
mov
push
in
jle
and
jl
sub
inc
cmp
outsl
xchg
xor
jbe
dec
sbb
dec
sbbl
xor
fs
and
cltd
push
lret
push
xchg
jge
das
notl
xchg
arpl
filds
push
fwait
pushf
push
add
loop
sbb
insb
inc
cmp
add
stos
jns
or
shl
lods
fidivl
and
clc
pop
test
sub
mov
popf
jl
js
inc
orl
jne
outsb
jl
and
iret
scas
mov
outsb
movsl
imul
jecxz
nop
aas
icebp
jb
fisubrl
movsb
nop
sub
sarb
xor
add
lea
sbbl
popl
dec
loopne
sbb
mov
adc
add
jno
call
aas
cmp
out
xor
add
int3
mov
dec
inc
xor
xchg
jl
push
popa
test
dec
adc
jmp
mov
add
jbe
pusha
cmp
and
mov
xchg
adc
fwait
andb
hlt
cmp
fsubl
cmpsl
lock
sbb
cld
add
xor
cwtl
int
ret
fisttpll
or
dec
adc
repz
dec
inc
or
test
stc
sub
sub
mov
orl
xchg
sub
inc
gs
or
xlat
lret
test
roll
xchg
mov
mov
xor
inc
fimuls
int
and
sbb
adc
sub
or
add
cltd
xor
sub
mov
mov
ljmp
adc
mov
add
enter
dec
int
pop
insb
nop
jp
lret
cmp
lods
add
out
dec
mov
loop
xchg
adc
lea
out
sbb
lds
aam
push
mov
cmp
pop
pop
and
jl
mov
xchg
inc
jne
xchg
divb
lods
cmc
shll
adc
xchg
mov
es
roll
jg
test
orb
outsl
push
jne
orl
shr
arpl
sub
add
ficomps
or
mov
clc
jl
cmp
jne
fidivrs
mov
cmp
aas
cmp
fbstp
lahf
out
pushf
pop
shll
fiadds
push
dec
sbb
and
lahf
or
rorb
or
jmp
mov
jns
jbe
cmp
inc
ja
xchg
or
push
dec
and
sbb
aas
and
add
xchg
arpl
fidivrs
adc
xor
ljmp
jmp
repnz
add
lahf
xchg
jle
fsub
adc
nop
shll
inc
pop
add
pop
add
inc
pop
jne
cmp
and
mov
enter
sbb
repz
and
sbb
mov
cmp
and
aaa
jno
in
nop
insl
mov
xchg
pop
jnp
add
test
lock
pop
cli
pop
inc
dec
mov
sub
push
inc
loop
out
fiaddl
or
pop
aad
xchg
stc
mov
jns
outsb
push
and
dec
inc
lds
mov
jns
dec
xchg
loopne
jecxz
cmp
xchg
lds
pop
aas
push
scas
inc
dec
out
mov
test
jle
and
daa
add
xchg
hlt
sahf
addr16
xchg
mul
lcall
pop
dec
dec
fisttps
inc
add
inc
push
stos
mov
xchg
and
in
and
insb
mov
pop
sub
mov
rolb
push
inc
test
insb
jns
sub
in
jne
sub
lahf
mov
orb
movsl
comiss
dec
ret
or
sub
or
jmp
stos
int
lds
sbb
int
lahf
pop
pop
dec
movsb
mov
stos
fistpll
out
sub
jno
inc
enter
stos
shlb
das
and
subl
mov
out
mov
cmp
mov
mov
mov
add
mov
mov
and
xchg
jo
roll
ja
or
fldt
in
sub
and
stos
lret
mov
mov
dec
jle
orb
repnz
icebp
and
loop
jl
xchg
test
cli
or
rcrl
mov
and
jmp
inc
mov
sub
sbb
sbb
fwait
adc
out
ljmp
insb
fldenv
inc
sti
or
adc
push
outsl
sub
sahf
movsb
nop
mov
pop
mov
lcall
out
and
and
pop
push
enter
xchg
jb
dec
or
and
sub
add
cmp
dec
and
sbb
or
sbb
test
repz
pop
out
pop
scas
rcll
popf
lods
jg
hlt
clc
fdivrs
add
push
jge
imul
push
mov
and
jecxz
and
pop
int
or
cwtl
insb
pop
and
and
in
inc
dec
cmp
in
sub
inc
in
cli
ficoml
cwtl
push
stos
mov
out
dec
push
cmp
popf
jnp
notl
jae
cld
repz
movb
lahf
adc
sbb
push
pop
pop
cld
lret
xchg
das
cmp
std
fldt
and
int
arpl
ja
lahf
jnp
add
dec
add
xchg
iret
test
cld
jo
dec
xchg
dec
stc
scas
fsubrl
lret
popa
mov
in
mov
mov
cmp
add
cmpsl
cli
push
push
xchg
sahf
stc
mov
loop
jb
dec
dec
enter
clc
nop
add
sub
scas
int3
pop
cld
xchg
jns
insl
cmp
fistpl
inc
dec
pusha
adc
stos
fcomps
dec
leave
dec
and
mov
scas
aad
jmp
xchg
pop
nop
stc
sub
jae
out
popa
cmp
cmp
sub
ret
push
inc
insb
mov
rol
in
pop
in
sbb
pop
clc
xchg
jo
push
int
sbb
and
push
rorl
scas
mov
popl
jg
cwtl
outsl
inc
dec
movsl
or
aaa
push
sbb
sub
sar
or
aas
inc
push
cmp
xor
les
adc
cld
rcrl
pop
inc
popf
std
add
sub
test
push
sub
scas
cmp
int3
pop
mov
xchg
fcomi
fwait
add
or
sbb
xchg
idivl
lahf
sarl
loopne
xchg
pop
in
or
repnz
rcl
andl
gs
movb
pusha
mov
and
mov
mov
sub
xor
mov
jbe
das
pop
jmp
jbe
mov
out
dec
idiv
add
test
pop
or
imul
lea
icebp
or
and
in
mov
movsl
scas
mov
add
hlt
mov
sub
adc
pop
das
add
int
and
cmpb
dec
in
mov
and
lcall
inc
and
lods
les
ja
bound
inc
inc
inc
and
fstpt
mov
ret
test
jmp
mov
push
push
mov
mov
test
dec
jb
mov
inc
and
xor
inc
xor
pop
fsts
mov
mov
shrb
aas
add
inc
hlt
sub
inc
pusha
inc
push
inc
int3
jle
cmp
dec
out
mov
sahf
insl
in
cmp
add
and
es
mov
imul
mov
jl
fisubs
fcoms
lea
mov
xchg
mov
fwait
or
cmp
xor
pop
adc
mov
adc
aas
adc
sub
mov
jne
xor
fsubrp
out
std
clc
sub
cmp
or
pop
cmp
lock
pop
test
fldt
and
sub
lock
rolb
sub
cmp
cwtl
fbld
test
pop
pop
lahf
imul
jp
jae
mov
aas
add
mov
out
sbb
add
dec
and
pop
orb
sbb
xchg
cld
push
sub
or
rcl
and
mov
dec
and
xchg
pop
cmp
mov
cmp
pushf
or
jg
xchg
push
sub
int
popa
mov
cs
fbld
jg
lret
scas
jno
lahf
cmp
iret
cmp
fisubl
sub
push
or
mov
lock
pop
int
mov
pop
enter
push
dec
mov
insl
out
dec
icebp
lahf
in
ds
adc
mov
jg
leave
cwtl
xchg
mov
xchg
in
cmpb
xchg
mov
js
ret
popa
aas
je
sarl
mov
fs
dec
aas
push
iret
pushf
ret
pushf
jmp
lahf
iret
subb
sub
dec
iret
in
orb
and
pushf
lea
adc
setnp
jns
push
mov
roll
jecxz
and
xchg
adcl
outsl
sbb
pop
repz
cmp
and
dec
sbb
loope
filds
fcmovne
pop
ja
and
xchg
cmp
add
xchg
sbbl
sbb
sbb
das
push
js
aad
outsb
lods
int
es
movsb
push
push
test
mov
icebp
and
adc
sbb
jns
jne
or
in
pop
adc
cmpsb
adc
adc
enter
jmp
out
comiss
mov
fndisi(8087
push
gs
outsl
pop
inc
sbb
push
popf
add
pusha
pop
or
cmc
or
sahf
nop
pop
adc
fwait
push
std
push
repz
outsb
inc
push
rclb
loopne
mov
call
rclb
lods
mov
push
cld
pop
aas
adc
xchg
nop
lahf
insl
xor
and
stos
lds
push
xchg
movsl
cmp
imul
inc
lods
movsl
add
mov
push
lds
jmp
xchg
das
pusha
dec
in
mov
inc
popf
adc
leave
stc
sbb
test
push
mov
mov
jg
loopne
mov
or
and
inc
addb
cmp
idivl
pop
and
int
sub
repz
adc
inc
pop
mov
out
xlat
or
int
int
out
and
fistpl
add
dec
pmulhw
roll
mov
loopne
xchg
or
rorl
fcompl
push
mov
sub
mov
add
aad
shrl
test
ja
pop
cmp
cmpsb
test
gs
and
add
xchg
xchg
aas
add
jl
dec
sahf
cmpsb
dec
pop
lahf
xchg
out
aam
mov
lret
div
cmp
fucom
in
xor
fistpll
lret
or
push
add
pop
and
push
ret
out
ljmp
jmp
or
or
cmp
clc
scas
loopne
add
mov
and
ret
add
mov
mov
lahf
addr16
jb
inc
mov
int3
in
adc
push
or
and
frstor
sbb
jns
push
cwtl
or
les
idivl
add
les
sub
pop
mov
je
cltd
aas
jge
js
cwtl
mov
push
int
sub
std
rcll
call
xchg
decl
fucomip
gs
mov
pop
pop
push
mov
loope
push
shrb
shrb
mov
add
stos
daa
mov
inc
mov
in
sub
aas
mov
stos
sub
aam
int
mov
cmp
xchg
scas
test
push
push
cmp
ficompl
jl
push
stos
repz
cmc
jle
insb
in
or
pop
repz
jb
sub
add
jl
sbb
stc
xchg
mov
jmp
cmp
add
mov
xchg
sub
cmp
loop
push
rcll
mov
inc
hlt
adc
loop
inc
rcrb
cmp
std
sub
nop
add
sbb
ds
lea
hlt
inc
fistps
testl
les
dec
jne
cli
mov
sbb
fs
dec
inc
jne
dec
xor
insb
mov
das
in
mov
ljmp
mov
movsl
jle
adc
call
mov
jno
and
jb
mov
sbb
push
pop
xor
icebp
inc
xor
push
add
cmp
mov
lock
sbb
sub
ficoms
insb
aam
popf
mov
xchg
jb
sahf
dec
pop
add
dec
imul
icebp
cmc
repz
pop
mov
cmp
cs
push
pop
xor
mov
gs
fstpl
clc
insb
scas
and
into
out
pop
mov
or
dec
xchg
cwtl
sbb
dec
lahf
outsl
dec
xchg
mov
leave
dec
popf
mov
sub
fwait
push
and
js
in
test
adc
pop
dec
push
cmp
dec
in
adc
xchg
add
insb
not
mov
popa
call
aam
testl
add
or
add
add
xchg
int
fldenv
nopl
adc
push
jl
dec
inc
les
pushf
and
mov
pushf
mov
les
push
xchg
push
xchg
mov
rcrl
std
push
dec
push
xor
sub
add
adc
or
sub
and
mov
idivl
call
mov
or
sarb
std
and
dec
or
add
gs
and
pop
stc
stc
and
test
mov
pop
cmp
insb
insb
sub
out
aas
or
lock
imul
loopne
pop
jno
mov
jle
fsubl
push
out
das
add
inc
or
sbb
inc
iret
cmp
add
cmpsl
add
sub
fs
inc
fcoml
mov
in
and
out
inc
les
and
icebp
or
sub
int
rcll
pushf
insl
mov
jl
add
test
and
int3
push
pop
add
insl
push
or
cmpsl
icebp
pop
mov
test
dec
push
std
and
lcall
and
mov
inc
imul
shl
lahf
mov
mov
loop
pop
jmp
push
xor
xchg
out
adc
lea
xor
sbb
inc
push
mov
mov
xlat
cmp
shlb
adc
dec
mov
out
adc
add
or
or
int
push
dec
shl
mov
inc
dec
and
cmp
pop
sub
nop
xchg
and
sti
adc
adc
add
xchg
cmp
or
popf
aad
inc
sbb
dec
push
mov
or
pushf
fisttpll
outsb
push
int
movsb
orb
lahf
int3
test
push
popa
add
xchg
or
pop
push
push
idivb
pop
xor
push
and
mov
lods
pop
jg
cli
xor
add
imul
mov
add
inc
mov
stos
out
dec
dec
cmp
jmp
mov
call
push
jle
sub
jmp
xor
testl
pop
push
push
mov
in
mov
push
mov
and
dec
inc
xor
in
ds
dec
pop
mov
rcrl
or
popf
fwait
jg
pop
lods
adc
sub
push
and
adc
ljmp
into
sbb
push
int3
sti
lock
mov
xchg
or
cs
es
adc
jp
add
aas
shll
cmp
scas
add
popf
cs
push
or
divl
add
test
pushl
sbb
int3
in
and
pop
fcomip
adc
movsl
es
scas
and
iret
or
and
fwait
cld
aaa
mov
sbb
xchg
call
into
negl
les
sbb
daa
mov
int3
dec
flds
add
push
and
push
xor
test
cld
pop
cmp
jne
xor
cmovle
mov
loop
and
mov
or
int
mov
mov
or
gs
mov
into
add
jp
aad
xlat
inc
lods
mov
mov
dec
and
jl
out
nop
fwait
push
sahf
or
and
lea
mov
sti
cltd
xchg
push
dec
sub
add
adcb
jmp
loopne
cmp
mov
dec
inc
add
jae
in
cs
pushf
xlat
lock
and
negb
jecxz
insl
ficomps
ret
daa
sub
jno
mov
jb
or
jno
test
xor
int3
lea
lods
add
pop
inc
pop
loop
nop
ja
test
mov
dec
mov
xchg
daa
dec
or
and
or
enter
mov
loop
mov
aas
xor
pop
lea
mov
ja
xorb
xchg
adc
pusha
mov
pop
fmuls
add
dec
call
jg
stos
inc
in
or
jle
int
mov
dec
mov
dec
lock
mov
sahf
xlat
or
sbb
sahf
sbb
inc
outsb
shrl
jl
sbb
pusha
sub
stos
xchg
sahf
mov
scas
jb
or
leave
push
inc
movsb
mov
subb
pop
and
filds
jl
adc
adcl
inc
xchg
jp
sbb
stos
push
loope
and
mov
not
dec
sarl
arpl
or
mov
shr
cwtl
jno
popa
int
xor
test
push
arpl
xorb
lret
scas
test
and
jnp
jge
popa
mov
jnp
add
stos
and
inc
mov
pop
subb
lods
test
cmp
or
lret
in
cli
test
scas
addr16
in
push
imul
aam
ret
push
subb
push
xor
jmp
orl
or
enter
inc
mov
lds
push
adc
dec
aas
not
jge
jb
shll
popf
mov
cmp
into
and
aam
lods
adc
and
sbb
jecxz
aaa
in
cmc
push
test
lods
movsl
in
dec
mov
es
psraw
xor
dec
or
fdivs
sbb
je
pop
movsl
adc
inc
mov
mov
cmpsb
mov
pop
add
push
andl
mov
jb
shlb
cmp
inc
enter
ds
imull
out
movsb
into
cli
mov
jne
jmp
mull
hlt
out
arpl
sub
mov
xchg
cmpsb
rcrl
and
xchg
ror
and
xlat
sub
and
xchg
jb
and
pushf
cld
or
sub
fs
lcall
repz
add
insl
scas
mov
int
dec
pop
sub
or
adc
movsl
js
jns
cmpsl
sbb
icebp
pop
cmp
inc
int3
sahf
push
out
add
std
adc
roll
adc
push
push
push
push
cmp
into
fdivl
and
aas
stc
mov
push
out
das
ljmp
adc
xchg
add
sbb
mov
inc
aad
mov
mov
flds
xor
dec
test
out
addb
push
mov
insb
test
aas
test
sbb
pop
xchg
repz
out
or
mov
sahf
pusha
jle
sub
lahf
dec
dec
subb
sub
add
lods
pop
inc
and
cs
push
fisubrs
fcmovne
fistpl
nop
sub
jecxz
movsb
cmp
int3
icebp
lods
imul
xchg
loope
scas
stos
jl
insl
pop
push
inc
insb
out
clc
mov
jmp
lods
or
popa
leave
cmp
shrb
mov
insb
cmp
sbb
mulb
sub
lcall
adc
push
je
sbb
bound
dec
or
cmp
cmc
ljmp
cmpsb
loopne
jo
inc
jge
xor
js
pop
jl
cld
dec
insb
jmp
jg
jb
xchg
inc
or
outsl
and
pop
xlat
cld
and
outsl
xor
bt
popf
push
sbb
imul
pop
aad
or
mov
mov
mov
dec
lahf
dec
inc
fs
ljmp
roll
adc
push
cs
ret
dec
pop
jo
sub
mov
call
jb
clc
addb
fldcw
lods
pop
stos
outsb
push
movsl
xchg
lret
cmp
faddl
ja
cmp
pusha
pop
movsl
sbb
andb
push
dec
xlat
mov
sbb
sti
lret
mov
add
jg
insl
jmp
xchg
xor
in
add
orb
jo
xchg
bound
stos
pop
mov
xlat
or
push
add
cli
leave
loope
add
es
sub
nop
mov
sbb
or
pusha
movsb
jbe
push
dec
xor
pop
dec
mov
stos
xchg
cmp
cmc
aam
bound
jae
gs
nop
fsubrl
sub
adc
add
stos
jg
xchg
insb
xchg
mov
pop
out
iret
push
xlat
or
and
insl
shll
jnp
hlt
cli
iret
sarb
sub
inc
sbb
mov
or
shl
jns
pop
pop
add
xlat
imul
cmpsl
or
or
jno
push
outsb
pop
mov
pop
dec
dec
cli
loope
out
add
mov
outsl
cli
loope
popf
sbb
mov
bound
or
sub
mov
mov
or
aaa
push
mov
jmp
in
stc
push
and
lods
and
xor
adc
loopne
out
out
sub
pop
je
lods
add
insb
jp
movsl
arpl
push
xchg
psubusb
push
test
int
rcll
or
pop
push
fsubl
fs
add
mov
push
fistl
and
ds
jl
and
ret
sub
or
into
pop
or
sub
int3
jle
inc
pop
and
ds
rorb
scas
sbb
push
movsb
outsl
sbbl
loop
sbb
mov
adc
push
xor
in
dec
je
pop
testl
dec
inc
dec
inc
cld
mov
xor
cmc
inc
cmp
lahf
mov
xchg
stos
or
or
minps
and
dec
inc
stos
cli
mov
add
cmc
sahf
popf
and
mov
in
xor
pop
and
mov
aam
flds
stos
fs
lds
dec
je
cli
and
xchg
and
jnp
fadds
in
lea
mov
stos
xchg
stc
arpl
je
xchg
shll
add
or
adc
dec
add
cmp
lcall
xchg
neg
fcmovne
sbb
jne
repz
sub
adc
notb
sub
loope
stos
ja
adc
test
lahf
dec
adc
out
add
inc
jge
aaa
jno
sub
add
add
shlb
psubb
fs
pop
inc
lea
and
jns
push
outsl
mov
lahf
outsb
cmp
cmp
adc
jg
sub
out
xor
repz
pop
jmp
neg
notl
jmp
aas
adc
ror
dec
aam
xchg
cmp
lods
je
mov
mov
int
or
frstor
push
add
mov
in
or
sub
xchg
fwait
les
cmp
and
shll
dec
mov
xorb
addb
jae
and
negb
pushf
arpl
cmpsl
out
xlat
dec
cltd
icebp
and
inc
mov
jne
add
lods
mov
mov
int3
cltd
push
mov
loope
cmp
mov
lea
cmp
mov
jecxz
sub
adc
mov
sub
ficompl
and
fdiv
mov
inc
sub
push
pop
and
mov
and
xor
or
push
rcr
dec
sub
popa
cmp
inc
orb
ret
mov
jnp
sub
push
lods
jno
fbstp
lcall
add
lahf
ja
jp
daa
pop
ret
jecxz
out
out
xchg
and
arpl
xchg
jle
push
adc
or
data16
addr16
xchg
scas
jp
cwtl
cld
pushf
jnp
divb
ss
and
fldl
test
sub
mov
rcr
in
xlat
pop
inc
sub
jno
dec
jb
in
xlat
push
xchg
popf
xchg
lds
addl
fnstsw
inc
mov
adc
pop
xor
sbb
leave
insb
sub
sub
dec
or
and
adc
enter
lcall
xor
mov
mov
jle
std
inc
mov
inc
pop
in
dec
dec
in
addb
sbb
inc
out
xchg
iret
add
jbe
mov
cltd
fisubrl
dec
pop
jl
jl
insb
icebp
dec
push
insb
jp
inc
pusha
pop
push
pop
or
movsl
sub
pusha
jbe
test
cmpb
int
outsl
cmp
adc
outsb
mov
sti
push
lea
or
push
lcall
dec
mov
mov
adc
jo
out
sub
imul
add
push
inc
sbb
jo
inc
sub
mov
jl
int3
rorb
adc
test
push
push
add
es
jns
mov
sub
dec
mov
pop
adcb
inc
mov
cmp
lahf
inc
jmp
pop
in
mov
adc
pop
idivl
movb
mov
dec
sub
xor
out
mov
stc
movsl
jg
cmc
subl
in
aas
mov
movsb
mov
or
nop
stos
ret
mov
dec
or
idivl
push
adc
xor
pop
pushf
mov
xchg
xchg
cmp
and
popa
popf
inc
sbb
mov
add
dec
xchg
int3
pop
and
pop
cmp
cs
fbstp
aaa
mov
xchg
sbb
repz
rolb
lahf
ret
cmp
push
fstps
pop
std
hlt
adc
inc
lods
int
stos
push
jle
enter
pop
test
mov
jns
cwtl
adc
push
push
mov
adcl
add
pop
lea
pop
clc
mov
add
outsb
xor
shl
pop
fstps
sub
mov
out
call
stos
jo
or
gs
xchg
sub
jge
and
jge
add
stos
daa
mov
and
leave
div
push
adcl
xor
fcmove
push
and
inc
push
and
add
cli
pop
and
fs
or
lods
inc
xchg
xorb
jno
mov
mov
movsb
lahf
cli
push
aam
fsubrs
sbb
jns
repz
dec
cwtl
pop
enter
dec
inc
sbb
xchg
testl
jle
inc
nop
aad
jne
inc
jl
dec
sahf
add
jg
pop
sub
lods
jle
cmp
loope
test
pop
movsl
repnz
and
pusha
add
jecxz
imul
sub
xchg
xor
das
adc
jmp
jne
cmp
and
loop
inc
adc
out
incb
jle
add
xor
sub
out
iret
sbb
popa
loop
xchg
in
inc
lods
addb
popa
negb
sub
aam
pop
mov
lahf
popa
sub
pushf
adc
cli
cwtl
fisttpl
data16
xchg
xchg
pop
or
pop
jne
cmc
icebp
pop
sbb
daa
adc
dec
divl
les
cli
add
and
std
int
stc
sub
imul
movsl
push
add
push
xchg
sbb
and
adc
push
sub
and
call
out
int3
js
int
jnp
push
mov
out
test
lahf
xlat
cmp
insl
xchg
int3
inc
push
sahf
pop
sub
cmp
loopne
and
mov
movsl
mov
call
ret
mov
or
stos
inc
adc
add
inc
or
inc
add
test
or
inc
add
push
sbb
push
pop
cmp
lea
add
call
jle
stos
mov
arpl
clc
xor
dec
adc
jl
pavgb
cmp
test
dec
bound
sbb
out
inc
mov
and
call
and
and
lret
and
push
and
movl
outsb
mov
xchg
mov
loopne
dec
data16
add
daa
add
in
jmp
jecxz
outsb
mov
xchg
pop
pop
dec
mov
lcall
mov
jp
sbb
jg
jmp
mov
enter
mov
mov
add
loopne
inc
es
cmpsb
and
adc
add
gs
testl
inc
mov
popf
add
or
lahf
xchg
and
pop
mov
movsl
inc
jecxz
and
into
adc
ja
or
or
jl
repz
gs
mov
popf
hlt
jmp
stos
sbb
sbb
es
sub
out
jmp
cmpsb
push
scas
push
mov
rorb
lea
xor
push
cld
mov
sub
movsb
sbb
push
jle
js
mov
and
mov
lahf
cmp
add
dec
xor
dec
jns
test
xor
mov
aaa
adc
push
push
ficomps
push
hlt
push
stc
add
popf
xor
dec
sti
inc
mov
shlb
xchg
inc
sti
push
adc
and
stc
int3
jo
push
je
pop
cwtl
insl
mov
movsl
and
arpl
cmp
nop
pop
jne
mov
iret
lcall
sub
in
jb
inc
decb
out
pop
testb
xchg
xor
rorl
mov
mov
sbb
mov
fnstenv
aad
push
rcrb
lahf
jne
cmpsb
inc
cmp
cmp
dec
loope
test
pushf
push
mov
and
sbb
adc
or
xor
movsl
leave
or
jge
xor
pop
aad
adc
cmpsb
or
mov
pushf
or
insb
nop
xor
and
test
mov
les
stos
into
xchg
fidivs
push
imul
daa
stc
aaa
scas
cmp
xor
add
ret
add
sbb
fcomps
popf
mov
jge
stos
dec
pop
insl
fbld
pop
fwait
cld
dec
pop
into
or
mov
jl
rcll
nop
push
push
fiadds
mov
xor
lret
jl
ret
add
mov
inc
sub
fldt
fisubrl
mov
dec
push
adc
ss
shlb
ss
pop
xor
cmpsl
rcrl
cmp
dec
daa
xchg
xchg
pop
adc
insb
add
xchg
out
pop
dec
and
cmp
ret
sub
aad
sub
enter
xor
jle
lock
cmp
mov
jle
mov
arpl
push
push
pop
mov
rcll
pop
arpl
fpatan
std
in
dec
fisubl
sub
mov
inc
std
shll
sub
and
or
cmp
add
mov
mov
adc
pop
jns
pop
in
cwtl
lahf
aas
testl
adcb
and
addl
cmp
movsl
lcall
mov
stos
push
pop
and
sub
add
daa
sub
xchg
stos
mov
sub
sub
jmp
mov
ja
xor
cmp
cwtl
or
stos
int3
sbb
sbb
test
outsl
stos
lahf
jae
push
mov
data16
inc
jb
loop
sub
jnp
lret
inc
inc
push
sub
xor
xchg
sbb
shll
cmp
lods
call
mov
gs
cmp
sahf
mov
lds
adc
fistpl
mov
stos
fisubl
xchg
imul
push
mov
mov
cmp
iret
movsb
inc
sbb
cmc
sub
icebp
xchg
mov
int
sahf
loopne
push
xor
sub
xchg
gs
cmp
and
mov
in
xor
dec
ret
push
mov
adc
shrl
pop
adc
pop
sbb
cmp
out
nop
pop
adc
fidivrs
aam
or
out
and
mov
push
jge,pt
mov
push
pop
sub
ljmp
jns
out
pop
jnp
dec
dec
fwait
add
out
xchg
imulb
in
test
jo
je
bswap
cmp
fcompl
out
add
divb
pop
in
xchg
pop
inc
sbb
iret
fcomps
xchg
ret
arpl
pop
out
mov
mov
and
xchg
dec
scas
gs
inc
stos
scas
cli
mov
push
jbe
and
rcrb
jl
aas
and
clc
or
add
inc
mov
cld
dec
icebp
dec
dec
adc
sbb
pop
test
int
je
jl
lahf
or
dec
loop
or
popf
push
jae
inc
adc
pop
stos
pop
iret
fwait
icebp
add
xor
test
adc
lret
std
lock
mov
cmpsl
xorl
adc
push
dec
ds
and
mov
in
and
and
pushf
addb
js
and
jle
lea
mov
int
inc
pop
popf
orl
cmp
fsubrs
xor
or
repnz
jne
and
pop
loop
push
into
push
xchg
bound
xchg
xor
push
and
pushw
stos
dec
add
xchg
repz
jle
fs
jo
push
fcoms
inc
cwtl
test
repz
and
push
pop
scas
fistl
daa
mov
add
push
adc
ss
mov
or
jno
or
push
int3
add
lret
jbe
mov
bound
iret
popf
mov
jb
fadd
loopne
in
fs
push
sub
lahf
in
pop
mov
jo
xor
outsb
sub
cmp
dec
dec
dec
jno
jl
popf
dec
lock
pop
pop
roll
dec
sti
and
call
in
push
jns
lret
movsl
jecxz
sbb
aad
or
lret
stos
mov
xor
sub
mov
and
dec
push
mov
jle
jl
pop
sysret
int
out
fnstcw
dec
es
ds
les
enter
cs
add
push
icebp
pop
int
pop
sarl
idivl
sbb
pop
pop
add
in
icebp
ss
xchg
ficoms
or
lea
stos
sahf
sarl
in
jno
mov
dec
and
mov
nop
mov
add
roll
fnsave
pop
insb
or
repz
pop
lea
cmp
fnsave
sub
add
cmp
test
cld
mov
dec
pop
imul
jbe
lret
mov
and
jmp
dec
xor
and
js
cmc
mov
or
jge
in
or
or
pslld
rorb
sub
jb
push
movsl
in
push
arpl
cmc
xchg
gs
inc
pop
sub
fsubp
and
lea
mov
push
sahf
sub
xor
push
sbb
sub
fists
out
je
jmp
or
lahf
cmpl
fisttpl
push
and
pop
cmc
insb
jne
and
scas
mov
mov
mov
rcll
js
or
and
shll
adc
mov
sbb
cmp
insl
cmp
and
cwtl
test
call
inc
add
movsb
lahf
insl
fildl
test
add
mov
or
pusha
insl
fwait
cmc
and
lahf
cltd
shll
push
dec
aad
mov
pop
or
adc
pop
outsl
popf
out
cli
lds
push
shll
scas
das
cmpb
xor
flds
rorl
popa
call
nop
lahf
mov
jb
into
les
pop
cmp
scas
jo
sbb
int3
jns
push
cmp
loopne
ret
rcrl
xor
faddl
in
stos
aad
fstl
je
repnz
outsb
in
inc
sub
adc
iret
pop
mov
pushf
jns
lahf
pushf
or
jmp
dec
je
add
mov
inc
cmp
jecxz
inc
insb
mov
fwait
pop
add
daa
sbb
cli
fists
fisttpl
push
push
mov
inc
push
nop
add
sbb
call
inc
add
or
fs
mov
ret
push
xchg
repz
flds
pop
arpl
mov
dec
cmc
sbb
hlt
pop
push
rorl
sub
add
and
inc
lods
test
stos
or
dec
cmp
sbb
movsl
and
sub
in
push
pop
and
gs
iret
jecxz
sti
dec
mov
int
push
add
fidivrs
rorl
unpckhps
movsb
pop
pop
inc
ret
je
jecxz
aaa
insb
jo
sbb
ds
and
sub
clc
xor
push
rol
ret
mov
xchg
jbe
lods
movsl
idivl
pushf
imul
jl
leave
sahf
in
sub
xor
subb
dec
or
mov
adc
sbb
and
add
jbe
aam
sbb
sti
pop
xor
dec
cmp
add
mov
jmp
shll
pop
jns
or
mov
dec
add
lods
aad
add
ljmp
xorb
or
pushf
jnp
mov
jl
mov
out
push
dec
sahf
imul
lods
lcall
loop
and
stos
inc
shll
in
or
add
and
rcll
test
adc
jl
sbb
scas
mov
pushf
jl
into
mov
mov
and
push
add
inc
jo
shl
mov
je
mov
andb
push
insl
dec
pusha
std
push
clc
dec
ja
cmpsb
mov
pushf
cmp
ds
out
out
sbb
xchg
push
pop
mov
iret
lds
xor
jo
in
into
decl
sub
les
pop
jb
movsb
mov
stos
fistpll
int3
inc
stos
and
test
dec
xor
dec
call
sub
adc
in
adc
into
mov
sub
push
das
jbe
outsb
lahf
xchg
add
rcl
scas
mov
or
dec
leave
loop
push
stos
pop
lahf
inc
inc
fists
inc
shll
rcrb
int
jns
addb
pop
xor
pop
nop
pop
rclb
inc
lock
bound
pop
popa
adc
mov
xor
int
sub
mov
loop
ret
mov
sti
xor
in
lcall
pushf
mov
xor
add
pop
dec
pop
ljmp
xorb
jne
jg
int3
jne
int3
stos
out
adc
cmc
push
shrb
cmp
jl
sub
icebp
pop
jne
jge
adc
inc
dec
popa
fcmovnb
push
pop
stos
shlb
jbe
fs
fcompl
push
xchg
xchg
insl
in
fistpl
scas
stos
test
mov
xchg
add
or
scas
dec
cwtl
add
je
popf
xor
sub
xchg
jl
xchg
xchg
stos
jbe
pop
push
call
or
or
insb
add
jmp
nop
inc
sbb
pop
cs
cmpsl
cwtl
push
xchg
stos
cs
jnp
pop
ja
mov
jae
fdiv
sub
outsb
pop
jae
into
into
mov
repnz
rcll
cmp
jns
fisttpl
dec
scas
and
sbb
push
sub
aad
fistps
cvttps2pi
mov
scas
adc
nop
xor
movsl
xchg
ret
inc
sbb
int
repnz
dec
xor
out
test
xor
ljmp
daa
dec
and
andb
mov
jb
jno
leave
push
or
and
out
frstor
test
sahf
sub
adc
in
lds
push
test
test
pop
int3
push
and
jns
mov
out
mov
imul
jle
ss
outsb
cwtl
rcrl
push
sub
adcb
inc
push
shlb
shrl
int
lods
xor
lahf
clc
ror
or
jne
inc
lahf
adc
adc
bound
data16
jns
lahf
adc
xor
inc
cmp
jae
inc
cwtl
mov
lock
xor
add
in
push
jmp
lds
rorl
xchg
lock
scas
movsl
push
push
xchg
mov
leave
inc
sbb
std
push
sbb
sbb
clc
push
xor
fstpt
jbe
hlt
repz
add
sbb
pop
in
xchg
imul
cwtl
jle
imul
cmc
inc
call
xor
repz
xchg
int3
lret
xchg
jne
or
xchg
out
mov
cmp
movaps
test
mov
cltd
cwtl
stos
stos
ret
jb
add
cld
sti
cmp
sti
pop
pop
sarb
dec
cmc
sbbb
add
les
add
pop
cmp
xchg
mov
add
mov
cmp
add
sbb
mov
bsf
jo
pop
aam
xchg
jb
loopne
sbb
pop
pop
sub
nop
pop
sti
daa
adc
lret
addl
push
call
bound
push
loop
jecxz
add
cmp
lahf
les
inc
test
pop
loopne
adc
pop
int3
push
lea
xor
lret
adc
lahf
xchg
inc
out
movl
and
in
in
mov
mov
mov
popl
loope
jns
push
enter
pop
ds
fildll
enter
pop
adc
adc
test
popa
mov
ret
imul
xchg
pop
arpl
and
les
inc
mov
in
sahf
xchg
inc
lods
popf
cmp
add
fs
inc
int3
je
pop
mov
js
in
mov
aas
push
or
push
jg
and
sub
test
shll
or
clc
cwtl
inc
dec
add
clc
mov
lods
and
cmpsb
mov
iret
imul
shll
cmp
and
fucomip
pop
push
mov
and
or
xor
mov
xchg
xchg
fdivrl
adc
iret
xchg
repnz
pop
fistpll
out
ret
lods
xchg
sbb
inc
jb
add
inc
push
movsl
push
shr
inc
adc
ret
xchg
shl
shrb
jl
stos
mov
push
push
int3
test
mov
sub
js
push
cmp
cmp
mov
imul
sub
aam
rorl
arpl
cmp
pop
push
cmp
mov
and
xor
ficoml
xchg
cmp
push
js
cs
pop
mov
pushf
sub
xor
inc
mov
loope
inc
and
inc
orl
mov
fcmovnbe
cmp
lahf
xchg
stos
xchg
inc
roll
and
movsb
cwtl
mov
jp
hlt
stos
dec
inc
out
sub
loop
sbb
mov
mov
test
or
push
mov
movq
cli
xchg
jbe
ljmp
outsb
stc
jp
bound
mov
js
add
insl
sub
cmp
mov
xor
jae
jbe
mov
jg
push
dec
stos
push
add
dec
dec
lds
jl
add
les
or
stos
xchg
sub
lahf
out
dec
xlat
cmpsl
fidivrl
xchg
add
dec
ja
cmpsl
xchg
fnstenv
cmpsl
imul
mov
mov
xchg
dec
sub
sbb
gs
repnz
cmc
imul
xchg
or
cwtl
je
pop
push
aaa
out
fidivrl
inc
mov
add
sti
push
mov
lahf
lods
inc
xchg
adc
andl
fimuls
mov
jno
lods
jecxz
fs
ja
xchg
xchg
cs
add
jne
lcall
sub
imul
or
sbb
xchg
pop
and
xchg
or
lds
sub
pop
jns
fisubs
or
jne
pop
movl
sbbl
pop
add
lods
lock
in
xchg
xchg
push
out
add
and
ret
pop
sti
jmp
shrl
or
gs
std
out
sti
mov
aaa
inc
rorl
bound
shr
es
mov
lock
and
pop
or
cmp
in
xor
sti
inc
into
insl
dec
scas
hlt
addb
dec
and
shlb
test
sbb
insb
or
cmp
dec
aad
mov
lret
or
jle
add
fldt
enter
xchg
add
inc
jne
jl
add
mov
and
pop
scas
mov
or
adc
out
xchg
cs
pand
nop
or
bound
sub
jae
iret
cmc
dec
rcrl
test
cli
lcall
push
add
ret
inc
pop
test
cmpsl
push
pop
dec
mov
mov
iret
test
imul
pop
jo
in
lahf
mov
clc
inc
push
jo
sbb
test
and
mov
bnd
inc
dec
imul
lahf
sub
xchg
stos
sub
inc
int3
pop
rolb
add
mov
push
cld
imul
jp
push
and
loopne
adc
dec
sub
push
jne
xor
aam
cmpsl
dec
lret
or
push
ficoms
or
dec
scas
cs
pop
inc
inc
and
fiadds
xor
in
mov
es
aas
jnp
mov
ror
pop
cmp
pop
cmpsb
rolb
sub
ds
mov
mov
rcrb
push
add
jns
jle
fdivrl
push
into
push
pop
pushf
int
pop
dec
xchg
dec
xchg
cmpsb
sbb
jl
mov
fisubs
dec
mov
mov
addb
in
cmp
cmp
push
inc
popa
aad
mov
jnp
fadds
sub
push
mov
add
xor
rcll
jl
xchg
subb
ret
ja
mov
push
dec
cli
loop
sub
sarl
inc
jl
or
fidivs
sub
inc
test
mov
mov
pop
sub
or
cmp
mov
adc
flds
add
rcl
add
sub
imul
pop
aas
mov
test
outsl
inc
test
mov
fs
jl
aas
cld
inc
push
inc
mov
dec
js
out
mov
test
pop
cwtl
out
int
mov
mov
push
inc
out
xlat
movsb
inc
imul
mov
mov
popa
dec
inc
xor
lahf
gs
repz
and
adc
aad
movsb
lahf
add
xchg
inc
test
cmp
movsb
mov
adc
dec
jo
or
int
filds
pop
sbb
int
inc
dec
mov
pop
and
dec
and
int
leave
pop
jb
in
mov
aaa
ds
xchg
or
jb
dec
xchg
jae
adc
loope
add
daa
inc
cmp
fimuls
mov
push
inc
sbb
mov
nop
fsubs
aas
imul
cmpl
push
and
dec
dec
mov
pop
hlt
daa
call
and
insb
lahf
mov
or
in
mov
sub
cmpsb
cmp
sub
xchg
and
sbb
repz
cli
jnp
mov
mov
mov
in
mov
fstpt
into
mov
cmp
bound
dec
sbbb
push
push
stc
pop
ja
insl
repz
adc
imul
add
cli
test
cmp
adc
sbb
push
cmpsl
dec
in
jb
xchg
jno
xlat
push
pop
orb
mov
int3
push
mov
sbb
out
cmp
cmpsl
repnz
xor
cmc
sbb
mov
into
cmpsl
repnz
push
out
orb
test
fdiv
pop
or
sbb
sub
sbb
add
inc
xchg
in
push
push
popf
insb
test
insl
or
push
push
xchg
imul
imul
fistps
and
sub
nop
sti
cmp
sub
mov
faddl
push
fbstp
add
dec
dec
push
je
sbb
pop
pop
jp
or
xor
or
dec
and
sbb
mov
jb
es
push
pop
jb
int3
or
xor
adc
dec
fistl
add
lret
ror
les
inc
xor
add
push
addl
fisttpll
or
xor
inc
fisubl
ds
roll
sbb
sbbb
pop
push
and
sbb
loope
fs
xor
call
outsb
bound
shl
dec
clc
loopne
pop
cmp
add
sahf
cwtl
inc
fdivrs
pop
inc
or
and
pop
xor
sahf
mov
lahf
or
mov
movsl
popa
add
stos
sub
imul
pop
ror
pop
aam
in
add
jge
sub
pop
pop
popf
cmp
in
ret
xlat
cmpsl
lods
jns
mov
and
cmp
jne
in
sbb
lret
mov
cmpsl
or
xor
mov
dec
jl
add
sbb
dec
lahf
inc
popa
dec
sbb
movsl
int3
dec
mov
insb
mov
ret
xorl
mov
fbstp
ljmp
sub
jbe
outsl
push
mov
jg
adc
int
dec
dec
lret
ljmp
fwait
negl
cwtl
push
call
xor
es
ja
inc
outsl
mov
jns
inc
iret
xor
call
xchg
cmp
pop
inc
and
std
xchg
fwait
jmp
inc
insb
iret
cmpsb
add
rclb
jmp
ss
dec
inc
mov
std
bound
movsl
sbb
mov
es
ficompl
xchg
add
gs
mov
jb
jnp
dec
ds
cli
pop
xchg
test
fidivs
and
pop
cwtl
sbb
dec
cmc
rolb
jecxz
xor
test
pop
sbb
or
cmpb
mov
push
bound
push
pop
inc
cwtl
fcomip
inc
cmp
faddl
xchg
add
inc
stc
jae
or
add
nop
out
jne
add
dec
fwait
and
adc
pop
test
nop
and
popf
es
int
pop
lahf
fiadds
icebp
lahf
jge
mov
scas
add
popf
inc
or
mov
imul
in
test
xchg
scas
xchg
std
or
adc
cmp
mov
into
ss
je
jae
and
dec
nop
jmp
jp
adc
nop
or
mov
pop
pop
push
les
js
sub
out
notl
adc
dec
adc
test
mov
es
adc
pop
pop
lods
mov
xor
xchg
rclb
pop
and
inc
loopne
xchg
aam
sti
inc
lea
pop
pop
inc
pushf
mov
ficompl
add
sbb
stos
sub
push
sbb
push
int
push
ja
loopne
pushf
or
pop
jl
pop
loopne
mov
aas
lahf
push
nop
cld
out
ret
mov
cmp
std
add
cmp
bound
push
push
sbb
lds
mov
in
and
loop
loope
das
inc
mov
jl
dec
inc
shrl
fmull
call
imul
lea
jmp
cwtl
pop
lret
fbld
nop
int
jno
cmpsb
bnd
lahf
push
negl
adc
stos
inc
jecxz
hlt
xchg
popf
jecxz
or
sti
enter
push
scas
fst
ds
mov
push
shl
jae
inc
push
xlat
or
js
jl
jns
xor
hlt
pop
mov
icebp
dec
xor
ftst
cli
push
xor
arpl
ficoml
fists
sbb
fsts
mov
sub
dec
push
leave
jae
ds
jae
test
addr16
sub
int3
mov
sahf
sahf
outsl
sub
mov
leave
xchg
dec
jns
inc
mov
popf
ffree
mov
stos
scas
and
add
loope
cmp
roll
add
shll
fiadds
and
bound
and
nop
xchg
lock
fnstsw
stos
arpl
mov
ret
std
pop
xor
sbb
jmp
mov
cmp
pop
insb
icebp
das
les
in
or
inc
xor
lds
cmp
xor
mov
adc
aad
jp
jbe
push
ss
rcll
popa
inc
stos
xchg
sbb
loopne
or
adc
fmull
jne
nop
stos
xor
dec
pop
jo
jo
out
add
inc
int
lea
repnz
fcoms
mov
push
loopne
cli
mov
test
lds
es
sbb
scas
cltd
sub
push
mov
rcrb
test
push
in
imul
aam
push
ret
sub
dec
push
xchg
mov
mov
cmp
cmpsb
adc
mov
loopne
repnz
xchg
mov
or
fdivl
call
and
mov
push
inc
data16
ds
xchg
or
mov
daa
lds
xchg
or
jb
inc
lcall
mov
cmp
push
cmp
into
sbb
inc
dec
adc
xchg
xchg
les
push
inc
pusha
testb
js
rcrl
add
inc
cwtl
aad
mov
jae
icebp
mov
ret
jns
sbbb
aas
icebp
in
mov
fimull
xor
arpl
out
sbb
push
scas
and
insl
or
xchg
sub
loope
and
scas
mov
sub
cmp
les
jecxz
mov
pop
loopne
dec
add
imul
ja
js
shll
and
pop
cmp
gs
or
out
xchg
out
mulb
std
mov
inc
xchg
and
mov
sahf
sub
push
dec
or
and
xor
cmp
pop
xchg
out
imul
pop
lea
call
sbb
cld
sbb
push
mov
iret
lock
pushf
in
adc
aad
add
xor
sub
test
inc
fstpl
sub
mov
lahf
imul
into
mov
jle
call
mov
into
sub
or
adc
push
mov
aam
add
adc
bound
xchg
push
xchg
insl
sbb
and
add
cli
push
push
stos
xlat
cmc
jmp
adc
sbb
popa
xchg
call
sub
add
mov
jns
mov
cltd
mov
add
xchg
push
je
push
data16
push
icebp
dec
xchg
imul
data16
jno
shlb
mov
push
adcl
call
xchg
test
fisttpl
dec
js
sbb
sbb
add
jb
test
cmp
test
ret
mov
cmp
iret
dec
and
cli
pop
in
sbb
mov
mov
sub
test
pop
cli
dec
xor
mov
fidivrs
insb
mov
lods
pop
repz
iret
mov
je
ret
mov
xchg
dec
mov
cmpsb
aaa
insl
mov
int
andl
inc
jnp
shll
dec
jge
in
jne
add
pop
int
jl
sbb
outsb
adc
aad
loopne
cmp
add
int3
fcoml
arpl
mov
fdivs
mov
sub
lret
jne
dec
sahf
xor
cmp
xchg
xchg
xchg
jle
inc
notl
call
add
test
or
cmp
orb
add
sbb
xchg
and
in
pop
in
push
add
sti
xor
out
xor
cli
test
xchg
jno
daa
fisubs
or
insb
xor
enter
mov
pop
sbb
mov
mov
iret
or
xor
inc
call
and
push
out
notl
and
clc
or
cmp
out
add
inc
sub
in
lds
jo
cmpsl
mov
jno
push
add
loopne
enter
dec
repz
mov
pcmpeqw
cmp
xor
pop
dec
test
gs
mov
sbb
xchg
pop
jp
dec
scas
push
pop
out
jle
je
lret
xchg
rolb
out
pop
add
pop
sti
fsubl
and
cld
or
adc
cmp
ret
xchg
das
dec
in
es
mov
cld
pop
call
or
stos
fiadds
xchg
in
mov
fsubl
sub
repnz
lahf
jecxz
inc
stos
lahf
xor
mov
dec
leave
pushf
inc
int3
es
add
loope
cmp
inc
aad
data16
pusha
xchg
sarl
rclb
ljmp
subb
fnstenv
mov
out
xchg
inc
cwtl
mov
mov
dec
int3
cwtl
push
push
into
hlt
ljmp
or
insb
insb
inc
inc
and
aad
lret
adc
lahf
movsb
and
xor
lea
std
mov
insb
loopne
or
pop
mov
xchg
xor
or
and
repz
pop
stos
sbb
cwtl
lock
out
mov
cmp
dec
icebp
es
adc
jge
int
insl
movb
pop
stos
mov
jo
xor
jmp
sbb
adc
imull
and
sbb
inc
jmp
adcb
or
inc
or
ds
neg
imul
jmp
mov
nop
insb
lahf
sar
mov
or
iret
imul
push
out
cli
adc
pusha
pop
push
sbb
add
cmp
pop
mov
sbb
xchg
adc
mov
fmuls
std
jl
decb
dec
cmp
dec
sbb
aaa
arpl
adc
and
icebp
add
nop
fistl
das
sbb
jge
sbb
and
mov
pusha
cmp
sbb
pop
nop
mov
mov
inc
sbb
movsb
in
sbb
outsb
dec
addr16
push
out
sti
in
sub
fs
mov
xor
in
out
lods
rolb
cmp
push
outsb
stos
addr16
popa
xchg
js
and
imul
cld
sbb
jl
inc
sub
out
and
adc
and
cwtl
pop
xor
dec
dec
jns
dec
mov
lds
dec
mov
inc
ds
outsb
jl
push
roll
imul
or
or
movsl
outsl
movsl
sub
std
lahf
fistps
leave
in
jmp
xor
pop
sahf
icebp
push
sbb
mov
insl
xor
xor
mov
jp
push
addr16
dec
imull
add
lahf
in
test
push
popf
jg
nop
xor
je
ffree
mov
xchg
mov
pop
mov
xchg
mov
ss
sub
add
call
imul
in
xchg
ljmp
jmp
cmp
sahf
pushf
in
dec
scas
xchg
movsl
or
scas
fwait
nop
loopne
aas
loope
imul
stos
lahf
push
repnz
jno
dec
or
jl
popa
and
xchg
mov
jge
inc
sub
adc
and
imul
mov
outsb
cmp
mov
dec
mov
dec
adc
fistpll
movsb
dec
sub
sub
loopne
cmc
mov
dec
push
or
lcall
sbb
es
inc
dec
pop
aam
cld
sub
or
sbb
xor
and
sub
mov
ficomps
and
jmp
out
lahf
push
mov
mov
mov
inc
or
pop
movzwl
push
cmp
or
fisttpl
xor
and
cmpsl
popf
std
in
sbb
jns
pop
adc
std
int
xlat
jne
adc
fists
cwtl
xchg
daa
mov
and
pop
fs
repz
int
inc
rclb
adc
cmp
pop
inc
mov
enter
data16
pop
ss
les
sahf
ds
mov
adc
repz
mov
std
lds
inc
mov
arpl
add
or
dec
and
mov
stc
and
mov
mov
shrb
lods
out
int3
jl
test
cmp
stos
shlb
cmp
and
or
inc
stc
jecxz
lods
push
mov
or
out
and
push
inc
inc
adc
mov
scas
in
aad
add
insl
fidivs
push
lods
sub
sub
neg
das
cmp
xor
divb
movsl
outsl
adcb
inc
daa
sahf
sub
out
sub
testb
cmc
mov
cmovns
outsl
xchg
sub
das
cmpsl
push
and
arpl
xchg
push
push
outsl
test
cli
test
sub
add
mov
push
aam
push
jno
and
cmc
movsl
data16
repnz
sub
test
dec
xchg
repz
sbb
mov
shrb
loope
inc
xor
pop
pop
call
xchg
lock
xor
int
in
and
mov
sbb
sub
call
pop
mov
adc
loope
rclb
jge
aad
mov
cld
notb
jo
cltd
xchg
sahf
dec
fisttpl
and
or
int
insl
sub
imul
sub
xchg
cli
mov
push
mov
mov
jnp
ljmp
jne
int
iret
dec
shrb
dec
leave
inc
mov
add
jnp
xor
lret
loope
and
pop
mov
add
inc
test
shll
pop
inc
enter
and
and
js
pop
xor
fnstsw
add
repz
and
cld
push
mov
and
jo
xor
sahf
lahf
je
jae
lock
pop
stos
scas
xchg
imul
push
repnz
out
int
mov
sbb
pop
in
jae
pop
nop
adc
test
mov
pop
xor
inc
fucomi
and
jg
notl
aad
test
in
jle
ficoml
mov
inc
ja
scas
add
cmp
nop
mov
into
jae
mov
cmp
mov
dec
jbe
outsl
inc
into
sarb
jb
popa
dec
std
jecxz
gs
pushf
out
jmp
fadds
lahf
sbb
jg
sub
cmp
cltd
rcll
cmpsl
mov
or
popf
mov
imul
push
jmp
dec
xchg
pushf
sub
and
lret
cmovg
mov
dec
ljmp
sub
jnp
cmp
add
pop
ret
push
xlat
popa
mov
adc
daa
mov
adc
sarb
jecxz
sub
aaa
jle
mov
pop
sbb
xor
inc
ss
imul
mov
lods
xlat
shrb
cwtl
cmc
cmp
sbb
pop
sub
ds
insl
cmp
into
or
mov
xchg
sub
loop
and
sub
aas
mov
les
adc
enter
aaa
pushf
xor
pop
and
add
mov
fisubl
adc
mov
popf
adc
sub
sbb
push
negl
test
add
jbe
add
push
sahf
int3
xor
sbb
insl
xor
xor
sbb
inc
xchg
adc
adc
xchg
lahf
js
ret
or
add
movsb
or
out
cs
les
mov
pusha
jg
mov
loopne
and
sbb
add
int
push
xor
or
outsb
ljmp
stc
sub
jns
sbb
pop
jge
sbb
rorl
and
jae
test
add
mov
inc
push
insb
insb
jp
lock
xchg
jno
pushf
sbb
fdivr
stos
cs
adc
filds
cmp
testl
clc
sub
xor
loopne
sbb
cltd
test
cmp
mov
shr
add
add
mov
dec
fsubl
add
push
jl
sub
sub
fcomps
inc
jge,pn
jl
jg
mov
outsl
inc
or
sbb
push
push
sub
pushf
mov
ds
mov
gs
cmp
sti
pop
push
push
lods
xchg
mov
das
stos
mov
push
frstor
mov
and
pop
int3
mov
mov
or
mov
leave
int3
inc
into
jo
out
and
or
or
es
sarl
hlt
push
jns
movsl
adc
movsl
out
mov
mov
xor
cmp
or
je
mov
adc
push
xchg
or
add
and
pop
lea
sbb
daa
stc
pop
rcrb
sbb
mov
cs
push
jl
jns
mov
add
xchg
js
push
je
cmp
aas
stos
dec
pop
or
cmp
enter
and
movsl
add
ljmp
inc
sub
mov
jge
popf
sub
out
add
cmc
frstor
ret
mov
push
lds
push
lea
pushf
outsl
jnp
movsl
lahf
sbb
pop
mov
sub
dec
mov
dec
cmpsl
ror
sti
xchg
pop
add
ret
jmp
push
add
xor
jno
mov
pop
xor
mov
repz
movsb
dec
adc
mov
dec
ja
xchg
mov
nop
mov
es
add
js
dec
les
sbb
clc
rorb
pusha
xor
test
icebp
and
pop
inc
or
push
sub
dec
lea
and
push
or
push
fwait
push
sbb
push
lock
call
add
or
jl
rorl
jae
int3
jno
xor
cli
test
mov
xchg
pop
and
ja
jbe
es
into
jmp
push
repz
shll
arpl
xor
sbb
sahf
xchg
xor
jecxz
int
sub
jl
inc
xchg
cmp
mov
and
or
dec
add
push
push
adc
mov
sub
or
xor
loopne
jne
outsb
push
ja
mov
xchg
mov
dec
pop
fcomps
fldenv
out
inc
mov
and
mov
cmpsb
insb
cmp
push
xchg
je
jl
mov
mov
jmp
outsb
lods
stos
ja
mov
sub
shll
fwait
add
sbb
push
jg
jno
dec
icebp
sbb
mov
enter
pop
jmp
cmc
sub
xor
adc
into
repnz
push
out
xchg
rcll
xchg
mov
and
fsubrl
ss
das
shrl
xchg
iret
pop
lea
add
fidivs
pop
out
fs
jl
mov
shrl
dec
bound
imull
sub
imul
jl
cmc
adc
mov
mov
or
shrl
insb
std
int
loopne
dec
mov
in
add
iret
rcll
pop
int
pop
push
mov
inc
and
inc
subl
and
sub
pop
int3
adc
adc
push
dec
mov
or
push
dec
imul
jmp
int
sub
inc
test
xor
test
fwait
and
fisubs
add
out
fnsave
ja
call
icebp
shr
mov
js
cmp
mov
out
cmpsb
xchg
push
and
stos
ficompl
mov
out
jecxz
cmp
jl
pushf
sbb
test
rcr
fimull
stos
add
jp
mov
or
dec
lret
inc
stos
vmovaps
adc
mov
ficoms
sbb
mov
push
pop
in
nop
jmp
sahf
cmp
int3
xlat
add
pop
call
mov
add
lahf
inc
mov
insb
pop
adc
push
adc
lahf
dec
xlat
and
sbb
pop
xchg
sbb
jo
mov
xor
sub
mov
aas
push
jp
or
std
push
jne
jp
loope
jle
add
jl
sti
xor
shll
movsb
push
dec
sti
mov
ret
inc
dec
push
repz
shrb
sbb
mov
or
cli
push
xchg
xor
cmc
mov
push
jnp
icebp
push
add
xchg
xchg
pop
sub
jns
mov
jb
in
movsl
adcb
mov
test
adc
push
cltd
int3
int3
or
adc
les
sbb
mov
sbb
xor
fidivrs
pop
addr16
and
sbb
addl
mov
pop
fisttps
cmp
cmp
add
inc
add
shl
ljmp
lds
in
mov
mov
fs
or
xchg
lret
je
adc
sub
dec
or
sub
das
movsb
or
dec
bound
movb
xor
stos
dec
or
pop
fidivs
jae
mov
sub
sub
cmc
mov
fistpll
inc
push
verw
pop
xchg
leave
mov
pop
sbb
lea
movsl
and
xor
xchg
popa
test
test
inc
jnp
dec
roll
cli
xchg
popf
nop
mov
in
idivb
xchg
out
pop
mov
xchg
into
scas
popa
pop
dec
mov
mov
add
repz
aad
cmp
pop
mov
jmp
aas
andl
mov
ret
push
clc
es
adc
cmp
pop
cmc
rcrl
clc
dec
stos
aam
push
jbe
stos
out
jb
in
movsb
cltd
jb
popf
adc
mov
ret
and
mov
fiadds
dec
mov
aaa
sahf
pop
sbb
movsb
stos
cmp
js
ss
add
jl
popf
sub
xchg
cmp
aad
cmpsl
fdivrs
jno
shrb
jge
shl
aaa
cmc
push
daa
fsubrl
and
push
popf
xchg
clc
bound
cmpsl
and
clc
nop
sbb
fcoms
jle
push
xchg
add
repz
jne
inc
and
adc
adc
lods
add
pop
test
push
clc
lahf
aam
sbb
cmpsb
jb
in
loope
fadd
mov
xchg
pop
test
sub
cli
adc
fisttps
xor
xor
stc
or
and
fs
jo
mov
fbstp
and
and
xor
icebp
pop
push
arpl
fimuls
icebp
cli
sbb
lock
imul
icebp
aas
lahf
xlat
dec
xor
or
push
ds
mov
vmread
js
sub
dec
jne
mov
sub
lods
adc
scas
add
jno
sub
push
push
jno
mov
dec
cmp
jb
test
lock
or
pop
or
lods
les
push
movsb
cmpl
sbb
loope
jl
adc
clc
mov
and
movsb
mov
inc
cmp
push
add
iret
and
cmp
roll
sbbb
fisubl
addr16
jp
lahf
andb
inc
test
dec
jo
vmovsldup
and
lock
std
dec
xor
test
lahf
sub
jge
dec
pop
lock
xor
dec
ss
jmp
xor
pop
xlat
pop
aad
push
push
xchg
roll
mov
scas
push
dec
pop
pop
mov
cli
adc
mov
aaa
cmc
lret
xor
xlat
or
bound
pusha
roll
in
sbb
fildl
mov
and
jae
and
cmp
jecxz,pn
fsubrs
push
shlb
jmp
xchg
call
pop
sarb
cld
scas
pop
roll
pop
insl
push
mov
jmp
xor
and
fidivrl
sub
sahf
mov
mov
rclb
lods
jne
xor
mov
inc
sbb
add
lret
jl
xchg
mov
inc
cmp
pop
lods
gs
lahf
ficoml
leave
inc
mov
push
pop
test
push
mov
jno
std
or
add
repnz
insb
pop
movsl
pop
and
adcb
or
fdivl
xor
fisttpll
loope
xchg
fcoms
lods
jg
pop
inc
xor
insb
test
pop
dec
das
lock
hlt
in
sub
push
adc
cmp
mov
int
xor
or
lcall
cmp
icebp
ds
cmpb
add
inc
and
or
push
pop
add
aaa
out
jl
inc
cmp
nop
sbb
xchg
jmp
lods
mov
add
int
mov
popf
xchg
push
test
jl
sub
popf
pushf
push
add
cmp
mov
nop
shrb
adc
ror
addr16
mov
lcall
call
jle
sbb
aad
dec
add
jmp
and
loopne
pop
or
push
rorl
cmpsb
mov
cwtl
xor
lahf
leave
jle
loopne
mov
and
pop
inc
or
mov
test
or
and
inc
in
inc
call
inc
jge
mov
cmp
out
jns
push
arpl
mov
in
out
dec
push
mov
and
push
scas
inc
mov
cmp
repz
pop
sti
push
and
shll
xor
or
adc
fcomp
jmp
mov
imul
popf
xchg
add
sub
test
jns
jl
shlb
les
dec
mov
aam
push
add
push
unpckhps
aaa
icebp
out
pop
adc
pushl
imul
mov
fst
or
cmp
jbe
rolb
adc
lods
cmp
dec
lahf
aaa
jecxz
mov
outsb
jmp
popf
cli
ds
cmc
xchg
call
iret
call
inc
cmc
and
shll
inc
mov
mov
je
sub
dec
lahf
pop
cli
pop
imul
lea
adc
das
mov
stos
or
xchg
dec
cmpsb
mov
lock
lea
nop
pop
jg
lods
adc
jge
jno
sbb
iret
xor
sbb
stc
mov
cmp
adc
cmp
jns
adc
cmp
iret
call
mov
in
dec
test
xlat
add
aad
mov
out
xchg
adc
mov
ds
adc
cmpsl
dec
insl
jmp
in
mov
pop
jb
dec
push
inc
cmpsb
and
daa
movsl
sahf
fnstenv
pop
xor
mov
or
call
dec
mov
addb
dec
add
inc
sub
dec
inc
movsl
mov
arpl
das
mov
adc
sbbb
xchg
and
pop
fwait
cmp
lea
imulb
inc
ss
mov
or
pusha
into
mov
dec
jmp
fsub
imul
mov
sbb
and
pop
jl
jg
scas
call
aas
imul
enter
jl
sub
sub
rcll
or
push
mov
pop
pusha
add
push
test
xor
shll
dec
sbb
mov
aad
cli
cmp
fs
call
inc
jmp
jae
jae
and
stc
dec
or
jg
insb
fldenv
mov
jl
or
adc
int
fs
lods
orb
das
or
dec
pusha
push
or
int
inc
or
mov
insb
sub
in
nop
push
cmp
int
dec
cmp
and
xor
pushf
and
push
xor
jp
pusha
jl
pusha
jg
xlat
xor
xchg
int3
sub
ficomps
push
add
cli
sub
fwait
mov
sub
xchg
dec
repnz
cmc
xor
jne
or
stos
rorb
fisttpll
ffreep
ds
push
pop
and
bnd
jne
inc
ss
int
sti
adc
iret
jbe
fists
arpl
xor
pusha
lock
xchg
or
pop
ja
iret
cmp
fnstsw
push
aad
and
fistpl
and
inc
pushf
lods
dec
nop
fiaddl
out
inc
test
jb
jg
stos
adcb
mov
mov
call
pop
jne
scas
jle
adc
out
dec
add
nop
dec
ds
push
addb
sub
mov
fnstsw
enter
lahf
imul
lcall
adc
push
jne
scas
test
fcoml
cmp
shrb
inc
mov
inc
inc
jmp
mov
icebp
rolb
sahf
cmpsl
pop
lcall
daa
loop
inc
sbb
das
sbb
dec
loopne
das
push
cmc
dec
mov
add
ret
mov
inc
bound
xor
and
repz
adc
mov
cli
pop
rcl
nop
fdiv
andl
jo
loope
push
push
fwait
and
jecxz
outsl
ljmp
adc
les
sbb
mov
subb
cmp
lret
mov
pop
test
sbb
jmp
divl
rcrl
add
inc
sbb
and
add
int3
out
hlt
imul
test
out
mov
icebp
arpl
cmp
inc
xlat
lcall
mov
inc
mov
sbb
pop
inc
sbb
enter
mov
inc
lods
pushf
sbb
stos
cwtl
in
cwtl
mov
mov
sub
cmp
imul
cmp
or
and
cltd
jns
push
sub
fs
arpl
or
xor
flds
cmp
pop
pop
xor
push
call
out
dec
mov
adc
mov
and
pushf
sbb
cmp
sub
aas
pop
xor
sahf
sahf
or
cltd
mov
mov
adc
or
mov
add
les
sti
int3
lea
fisttps
xchg
xchg
in
and
sub
sub
repz
insl
hlt
cmp
int
out
xchg
pop
sbb
movsl
in
insb
mov
in
add
jp
fs
out
jp
arpl
mov
lcall
dec
cmp
jl
mov
pop
shlb
jo
pop
int
repz
add
pop
or
lods
xchg
cmpsb
inc
loope
jl
or
pop
enter
inc
inc
adc
dec
scas
push
ja
pop
cmpsl
mov
jmp
into
xchg
sub
popf
add
jae
xor
lahf
icebp
dec
insl
sti
dec
addr16
inc
out
imul
cwtl
mov
jo
mov
pushf
adc
es
fcomps
mov
lahf
fdiv
xchg
insl
pop
int
in
pop
and
int
cmc
sub
cli
aas
call
arpl
out
add
idivb
loopne
sti
adc
sbb
lea
stos
mov
sub
jae
test
jg
insb
cmp
pop
inc
cmp
ret
insb
xchg
push
sbb
test
sub
sbb
or
mov
gs
test
add
nop
in
and
fwait
call
add
add
pusha
dec
lods
fiadds
pop
incb
aas
shll
lahf
dec
rcl
sbb
es
push
cmpsb
cmp
ret
xorb
rclb
in
jns
add
test
mov
xorl
inc
in
mov
outsb
inc
test
cli
lods
sub
seto
das
mov
sub
pop
les
sbb
inc
mov
adc
pop
iret
dec
push
jno
rcl
aas
addr16
dec
cmp
xchg
cmp
fs
dec
sysenter
and
and
push
gs
scas
sub
push
dec
inc
cmp
sub
inc
cld
gs
test
cli
jecxz
push
dec
sbb
sub
xchg
inc
arpl
dec
pop
mov
enter
and
push
sub
mov
push
adc
inc
mov
or
es
dec
bound
ds
test
mov
inc
cmp
adc
sub
dec
inc
xchg
dec
push
roll
mov
lcall
fiadds
mov
cmc
sub
ds
cmc
push
add
sbb
jbe
stos
rcl
shr
xor
jb
pop
lret
mov
out
stos
test
mov
in
stc
mov
outsl
popf
cmpsb
call
ret
pop
icebp
adc
inc
add
fwait
clc
fistpll
adc
dec
stos
xchg
jno
scas
jb
add
into
je
arpl
cmc
pop
cmp
inc
imul
and
sub
push
dec
imul
sahf
push
sbb
xorl
mov
pop
jnp
and
rorl
inc
adc
sub
test
stos
xlat
mov
mov
and
lock
lcall
or
jmp
mov
sbb
fidivl
jmp
mov
push
xchg
push
andb
dec
inc
and
test
inc
jb
out
sub
hlt
pop
sbb
xor
enter
xchg
jb
dec
aad
dec
dec
cmpl
cmc
or
test
dec
sti
stos
shlb
in
aam
in
filds
sahf
cmp
adc
jg
in
aad
insb
shrb
pop
sbb
pop
icebp
imul
xlat
mov
mov
xorb
adc
sub
push
xor
outsl
neg
fidivrs
sarl
mov
outsb
push
cwtl
mov
out
jg
sbb
inc
push
in
inc
xor
and
or
sbb
mov
xchg
jge
and
sbb
filds
stos
sti
rorl
mov
or
cs
jl
sbb
mov
and
cld
outsl
xor
dec
jp
cs
movsb
pop
pop
add
pop
dec
mov
lods
and
inc
dec
test
and
addl
pop
stos
jecxz
scas
adc
dec
popf
push
test
cmp
adc
pop
pop
std
fwait
xchg
gs
ficomps
pop
and
cld
pushf
and
enter
mov
pop
std
in
pop
repnz
icebp
sbb
add
mov
sub
out
push
sub
dec
or
cmp
sbb
xor
jne
mov
dec
shll
sub
jae
xlat
and
std
push
addr16
sbb
inc
xchg
rcll
add
lods
aam
add
inc
or
mov
loop
or
pop
aam
lahf
arpl
pop
mov
lods
testl
sub
push
xchg
xor
inc
outsb
or
jmp
dec
bnd
adc
nop
and
pop
and
nop
sarl
sub
out
shll
push
inc
add
adcl
xchg
cld
xor
mov
test
and
or
les
int3
add
sbbb
insb
lea
xchg
pop
call
push
jmp
mov
cmp
out
into
aaa
cld
out
enter
cli
lret
int
push
je
pop
mov
mov
xor
push
popf
roll
jne
push
mov
sub
pushf
inc
scas
push
out
sti
loopne
pushf
mov
cmc
aam
pop
imul
push
or
cld
adc
fisubs
dec
jge
stos
xor
mov
mov
imul
push
add
or
inc
add
adc
dec
sbb
mov
pushf
dec
fucomi
and
or
pop
pop
mov
fadds
mov
cmp
mov
out
ret
es
fists
xlat
xchg
es
nop
pop
inc
sub
je
push
and
mov
ret
pushf
mov
fidivrl
or
cs
aam
mov
jno
sub
imul
pop
mov
das
inc
jns
aaa
and
add
in
dec
out
roll
add
cmp
mov
sbb
inc
sub
out
cs
jecxz
pop
add
push
mov
cmc
xchg
ret
lea
nop
xor
jb
ret
in
jmp
outsl
inc
pop
ds
mov
xor
fists
test
xor
or
leave
ljmp
mov
cmp
test
loope
sbb
roll
nop
xchg
mov
lods
dec
pusha
adc
and
lret
jg
sahf
sbb
sub
lods
xlat
add
and
ficoms
push
lods
jl,pn
jl
mov
sbb
or
inc
mov
in
jno
nop
sub
dec
sahf
sub
insl
into
cs
xchg
and
cmpsl
or
fnstsw
je
pop
ja
in
fucomi
fcomip
dec
inc
cmp
adc
xchg
shlb
stos
jae
xchg
push
cmpsb
pop
sbb
fimull
stc
movsl
push
push
sbb
cmp
fwait
cwtl
mov
and
ds
daa
push
and
sahf
add
adc
add
popf
icebp
pop
aas
push
shr
roll
and
sub
sub
int
mov
add
mov
roll
lods
mov
int
adc
pop
leave
sub
stos
xchg
fstl
or
sub
sbb
lea
and
cmp
es
test
out
and
mov
addr16
fcompl
fildl
cld
lahf
outsl
jle
adc
sub
fstpt
pop
mov
sbb
xchg
stos
mov
orb
lahf
sbb
or
lods
movsb
inc
outsl
inc
fwait
push
xrstor
mov
cmp
dec
imul
xchg
stos
inc
sbb
mov
lods
cmpsl
shl
stos
in
xor
icebp
pushf
mov
push
mov
dec
jp
lods
enter
imul
push
cmc
xchg
pushf
lcall
dec
into
call
or
out
or
addl
outsb
cmpsb
xor
sub
mov
inc
out
in
lcall
jl
imul
shrb
push
out
add
scas
mov
stos
or
test
cld
fisttpl
cmpsb
sub
sub
iret
icebp
jl
mov
push
sub
and
shrl
int
outsb
es
cltd
adc
popl
and
in
adc
xchg
into
adc
inc
sub
xor
rol
dec
cmpsl
push
lock
inc
push
insb
pop
mov
push
xorb
mov
pop
out
mov
dec
sub
jl
sub
sahf
xchg
mov
cld
jl
jne
and
shlb
push
loop
pushf
and
and
pop
adc
xlat
sbb
sbb
out
les
test
addr16
mov
sbb
rcrb
xor
shll
inc
dec
mov
sub
jge
cmp
add
xor
jecxz
lret
cmp
inc
mov
test
lahf
subl
adc
adc
mov
dec
ljmp
in
gs
aad
popa
adc
lods
push
sub
mov
cmp
bound
popf
add
cwtl
cmp
es
addb
sub
sbb
mov
mov
adc
mov
add
adc
gs
shl
mov
aam
out
xor
in
lods
lds
stos
and
inc
lods
xor
xor
stc
enter
cmp
les
nop
repnz
add
add
call
les
test
pop
fadd
stos
movntps
cmpsb
pop
push
out
sub
mov
push
outsb
or
dec
fcmovbe
sahf
xorl
sbbb
loopne
mov
inc
mov
jno
test
stos
pop
mov
push
and
jmp
repnz
fsubp
jbe
xor
adc
nop
lods
cmp
ljmp
insb
cmpsl
jo
js
loop
out
shll
decb
sete
das
jae
pushf
jbe
xchg
sbb
xor
or
rcrl
int3
xor
jb
imul
lds
stos
int3
push
scas
push
adc
std
outsb
or
cli
int3
mov
stos
fcompl
sti
lods
mov
and
pop
vmwrite
pop
xor
daa
loop
mov
dec
adc
hlt
cmp
mov
js
push
loopne
or
xor
push
int3
xor
gs
orl
sub
nop
cmp
pop
testl
dec
movsb
cmp
dec
jns
gs
mov
jbe
outsl
enter
pop
mov
stos
adc
jbe
or
adc
lods
mov
inc
sub
dec
fcomi
sti
push
adc
push
in
mov
add
inc
pop
loopne
ss
sub
cmp
cmpsl
scas
lret
fiadds
pop
test
into
lds
pop
cmc
jl
jae
pop
xor
dec
pop
scas
cli
xchg
paddq
adc
sub
lea
out
cmp
insl
dec
add
pop
cmc
sbb
inc
or
jecxz
pusha
inc
imul
test
mov
daa
es
cmp
lods
mov
sbbb
inc
stos
aas
push
mov
or
sti
jmp
or
mov
mov
and
stc
es
int3
cwtl
repz
int
mov
pop
pop
push
cmp
jnp
lret
fs
add
mov
pusha
add
dec
add
push
flds
push
movsl
push
mov
loopne
ljmp
sub
and
test
aaa
ja
enter
sbb
jl
push
ds
test
filds
cmp
add
xor
inc
xor
jnp
adc
loopne
mov
nop
xor
mov
outsl
inc
push
mov
lahf
mov
fdivrl
jb
xor
add
adc
popf
sbb
sub
mov
sti
xchg
outsb
jne
daa
dec
stos
aad
jnp
or
jge
adc
inc
fisubrl
push
cs
lret
inc
pop
dec
inc
mov
test
int
dec
repnz
add
mov
push
stos
in
lret
xor
cmp
stc
add
mov
lahf
mov
insb
inc
pop
jae
movsl
jb
inc
lds
jo
cs
fs
mov
xlat
andb
insb
ljmp
lods
sbb
inc
pop
fs
pusha
sbb
je
xchg
xor
jo
mov
psubsw
pusha
cmp
inc
js
in
mov
andb
inc
rorb
mov
cmp
adc
hlt
shl
lahf
test
mov
cltd
gs
cmp
or
xor
push
sub
or
mov
adc
cli
sub
push
test
call
sbb
pop
sbb
pop
xchg
pop
add
xor
cmp
cltd
or
sub
sbb
lret
mov
loope
scas
fdivl
jns
ret
and
stc
mov
jmp
pop
cmp
sarb
les
pop
mov
daa
and
adc
xchg
xchg
push
dec
inc
or
xor
jecxz
sbb
sbb
jno
sub
mov
dec
lret
movsb
iret
cli
or
or
stos
inc
mov
jge
call
in
es
inc
std
aaa
dec
dec
in
mov
mov
jo
sub
lcall
dec
in
fldl
mov
pop
and
flds
adc
dec
in
jp
pop
fcompl
icebp
mov
and
popl
loopne
mov
sbb
pop
outsl
xlat
dec
subb
sbb
jmp
loopne
mov
and
in
sbb
mov
xchg
cmp
dec
sub
into
push
or
fldcw
sarb
xchg
sahf
sbb
dec
jae
inc
cmp
outsl
mov
test
mov
pop
cmp
mov
in
adc
psubb
pop
pop
ret
lcall
mov
lahf
mov
out
rcrl
cmp
fldcw
and
neg
das
cmp
int
sahf
push
sub
jne
cmp
or
pop
in
push
jne
xor
sub
lods
pop
pop
pop
jle
adc
insb
mov
arpl
mov
shll
faddl
mov
rcll
xor
fdiv
xor
pusha
jecxz
mov
daa
test
pop
cmc
sub
ljmp
and
std
ret
in
adc
xchg
bound
xor
push
les
xorl
popl
js
dec
aam
mov
loop
pop
aad
mov
and
lea
scas
add
rcrb
jmp
push
test
popf
pushf
hlt
xor
hlt
data16
pushf
dec
das
stos
addr16
ret
add
in
pop
cmp
ret
xchg
loop
inc
out
cmc
jbe
and
adc
dec
test
dec
jb
xchg
cwtl
and
jnp
pop
mov
mov
mov
lcall
lret
lods
outsb
mov
into
js
enter
jl
divb
inc
cmp
cli
test
pop
jns
sbb
jnp
mov
sub
movsb
std
stc
icebp
ficomps
nop
and
imul
mov
cmp
imul
xchg
insl
pop
int
rolb
xor
push
cwtl
insb
clc
and
push
rorl
pop
jmp
ror
inc
push
dec
pop
inc
mov
dec
pusha
nop
shrl
push
repz
movsl
or
and
ljmp
insl
jmp
or
push
lock
adc
stos
imul
adc
lcall
dec
adc
sbb
faddl
jb
dec
js
add
mov
inc
cmpsb
fildl
outsb
sub
fadds
cmp
and
dec
sbb
mov
jp
jmp
flds
xchg
adc
mov
inc
outsb
ret
inc
push
dec
sub
sar
xchg
push
mov
lahf
icebp
dec
or
jg
popf
pop
or
std
shll
sbb
mov
test
jge
in
std
stos
add
aam
xlat
mov
or
movsb
xor
call
mov
or
aam
insb
and
mov
arpl
inc
cmp
dec
in
mov
aad
aas
jnp
mov
push
push
lea
adc
xchg
add
lcall
repnz
adc
arpl
leave
inc
hlt
jb
or
sbbb
test
leave
in
sub
das
fistpl
cmc
push
es
jecxz
cmc
pop
call
iret
sti
and
adc
int
ret
pop
mov
pushf
lods
cmp
insb
xchg
adc
mov
mov
push
dec
xchg
test
cmp
or
les
jle
xchg
or
mov
andl
mov
xor
pushf
cmp
out
adc
cli
jg
adc
push
out
popf
or
pop
mov
inc
imul
lret
lret
xchg
js
shll
int
xor
jl
sbb
lahf
pushf
cltd
mov
and
pushf
bound
test
xchg
sub
lds
insl
ret
push
in
outsb
ds
or
mov
rclb
and
adc
push
mov
and
fyl2xp1
and
adc
sub
cs
test
sbb
or
or
in
lds
mov
and
pop
push
push
xchg
fs
or
imul
or
cld
sub
lcall
lods
inc
aaa
pusha
int3
movsb
jns
inc
cmp
inc
xchg
push
repz
scas
cld
mov
or
sahf
dec
clc
xor
sbb
mov
push
xlat
add
movl
pop
mov
movsl
mov
inc
mov
or
outsb
inc
dec
mov
mov
rcr
out
pushf
inc
aas
add
stos
shll
movsb
push
or
inc
mov
jnp
or
add
inc
sbb
push
xchg
fldt
sbb
xchg
cmp
leave
les
jle
das
mov
negl
cwtl
add
push
dec
loopne
movsb
push
pop
pop
jno
xlat
setne
fists
xchg
sub
sti
test
or
cmp
dec
sahf
mov
in
mov
sbb
sahf
mov
inc
add
sbb
jne
mov
cld
int
inc
call
je
xchg
icebp
sbb
sbb
inc
dec
mov
scas
in
inc
mov
es
sbb
mov
lret
insb
mov
push
cld
cmp
scas
pop
cmpl
repz
insb
andl
push
xor
cwtl
imull
dec
sub
call
pop
cs
lahf
jecxz
pop
hlt
stos
and
out
pop
dec
fimull
cld
nop
int
loopne
sbb
push
call
in
pop
pushf
movsl
scas
orl
or
lahf
cmp
xchg
mov
xor
repz
or
push
jo
ret
and
std
aas
test
pop
mov
cli
cmp
xor
inc
sahf
shll
inc
inc
mov
pop
pop
fisubs
mov
sub
add
fsub
fistl
sbb
loope
es
popf
mov
inc
movsb
insb
mov
push
jge
xlat
jecxz
mov
insb
and
xchg
mov
dec
mov
lahf
adc
push
test
push
ret
std
or
and
xchg
dec
pop
ficomps
dec
aas
lahf
nop
push
push
gs
jb
pop
adc
or
cmp
add
pop
mov
add
fisttpl
insb
ds
mov
sbb
repz
pop
inc
sbb
push
sti
into
fmuls
stos
push
stos
lret
lcall
std
sub
insl
les
pushf
or
out
std
or
push
int
pop
imul
mov
sahf
aam
jb
adc
pop
mov
pop
imul
mov
jno
mov
mov
add
sub
aad
add
jno
cwtl
mov
pop
push
jecxz
xchg
mov
ss
lods
icebp
add
jge
dec
push
sub
adc
imul
bound
push
test
cmp
adc
adc
sub
xor
sub
or
cmpb
loop
dec
ljmp
pop
test
and
xchg
or
adc
adc
cmp
and
lcall
xchg
mov
xor
mov
adc
add
movsb
xchg
push
pop
sub
add
add
mov
testb
sub
jg
xor
pushf
int3
mov
mov
test
jl
cmc
sarb
test
and
add
and
cli
or
mov
jne
and
pop
popf
add
mov
push
fstpl
outsb
and
push
cmpsb
mov
xor
rcll
shlb
not
fists
scas
fsubrs
aad
push
sbb
mov
sub
xchg
lcall
movsb
dec
sub
cli
and
jo
xchg
stos
dec
pop
cmp
pop
popa
push
xchg
push
push
lret
pop
nop
pop
inc
mov
inc
in
and
test
adc
cld
jle
iret
loopne
sub
sub
lret
pop
jne
push
in
insl
mov
adc
push
adc
ja
and
sbb
fs
in
pop
sub
dec
pcmpgtw
outsl
inc
std
int
loopne
cmc
js
orb
dec
sub
and
xchg
pop
nop
aas
stos
push
int
or
pop
cwtl
in
addl
pop
dec
adc
push
inc
ljmp
mov
dec
mov
das
jo
fcomp
sub
dec
add
outsl
xorb
sbb
adc
pop
xchg
popf
dec
pusha
inc
pushf
das
cmp
jnp
xor
jl
cmpsb
mov
mov
jl
movsb
push
leave
push
mov
dec
mov
dec
pop
inc
insb
push
pusha
sbbb
cld
sarl
int3
dec
lahf
jo
js
iret
js
ss
testb
icebp
push
sbb
adc
xchg
stos
inc
jmp
sbb
mov
stos
fwait
gs
in
pop
cmp
in
inc
rclb
movl
test
add
cmpsl
jl
lea
das
pushf
andb
sarb
cmp
add
pop
jne
imul
cmpsb
jne
cwtl
popa
inc
pop
cmc
ret
lret
mov
pop
inc
xor
mov
push
int
or
adc
movsl
sti
fstps
mov
mov
std
aad
xchg
test
shr
jno
pop
add
dec
lods
adc
push
cmc
in
scas
jnp
push
imul
mov
mov
fnstsw
xor
stos
pop
pusha
push
add
adc
pop
arpl
sub
sub
mov
pop
push
and
out
inc
dec
push
fistpll
inc
orb
ljmp
aas
rorb
lahf
out
imul
pop
adc
nop
push
scas
cmp
sub
xor
adcl
adc
and
dec
add
and
repz
cmp
test
dec
es
cld
pop
outsl
inc
push
inc
popf
or
rcrl
std
es
int
mov
iret
jge
outsl
adc
adc
push
mov
add
jg
add
add
xchg
add
cld
push
and
stos
jl,pt
pop
jl
pop
fbstp
mov
lods
pop
sbb
cmp
nopl
movsb
mov
test
pop
insl
push
cld
loope
popf
dec
repnz
and
rolb
icebp
xlat
or
xlat
hlt
add
fistl
stos
pop
pop
dec
push
lret
inc
mov
add
mov
testl
std
sbb
mov
call
vsqrtss
and
inc
sarb
xor
or
xor
adc
test
cmp
pop
dec
lahf
test
adc
in
cmp
lahf
mov
xchg
icebp
out
loopne
test
and
fists
dec
xor
andb
sbb
pop
popa
push
xchg
les
sub
push
scas
aas
les
pop
mov
adc
decb
testl
jns
mov
add
lahf
jnp
xchg
cmpxchg
xchg
test
xor
xor
cmp
mov
cmp
ret
inc
shrl
insl
mov
push
add
lods
pop
test
cmp
pusha
stos
push
inc
or
xor
mov
into
cld
jb
jle
shl
dec
arpl
jns
cld
push
pusha
mov
cmc
mov
push
cltd
sbb
std
fs
xchg
jg
xor
mov
loopne
mov
add
cmpsb
jmp
ror
jb
mov
lcall
xchg
out
int3
adc
out
pusha
cmp
push
xor
movsb
xchg
cmpsl
and
dec
js
cld
cmc
xor
stc
mov
sub
fistpl
jp
mov
pop
sahf
ds
scas
mov
push
in
loopne
iret
int
and
sti
push
sub
jbe
pop
lods
nop
sub
add
inc
rorb
call
pop
jl
xor
cmp
jbe
mov
test
arpl
test
aas
bound
addl
stos
daa
add
fmull
movsl
punpckldq
shll
sbb
and
ds
sbb
enter
mov
nop
inc
adc
mov
lret
cmp
dec
jmp
inc
jb
dec
sub
add
lcall
in
sbb
mov
cmp
insb
ret
jl
sbb
mov
cmpsl
sub
push
into
mov
jecxz
outsb
loop
cmp
nop
xchg
ja
cmp
sub
mov
push
mov
mov
int
test
and
inc
pop
sub
ds
test
test
push
jns
jmp
sub
popa
mov
mov
cld
push
cmpsb
repnz
es
or
repnz
sarb
outsl
imul
add
cmpsl
push
mov
or
gs
dec
sbb
xchg
jp
xchg
xlat
adc
test
pop
jno
jmp
testb
test
sub
jmp
jne
or
js
sub
sub
das
pop
dec
xchg
push
nop
adc
push
xor
mov
mov
insl
testb
xor
xchg
push
je
jnp
push
ss
cmp
sbb
int
shl
sub
in
fdivr
stos
sub
ss
loop
push
dec
out
out
nop
dec
cmpsb
push
dec
lahf
inc
fiaddl
push
repz
idivb
pop
lds
and
dec
dec
test
cs
das
movsb
lods
test
push
or
or
aaa
push
test
popf
int3
sbb
sbb
cmp
lods
int
push
sbb
mov
addr16
mov
aas
cmp
test
insl
es
adc
xchg
into
inc
sub
mov
and
divb
imul
mov
imul
inc
testl
fcoms
shll
fs
mov
add
mov
push
mov
xchg
int
cmp
adc
repz
jne
add
lret
mov
insb
mov
imul
std
pop
xlat
sbb
sbb
call
ljmp
repnz
push
jecxz
sbb
sub
call
or
adc
xor
add
or
or
dec
cmp
inc
mov
test
jp
push
mov
sti
das
pop
mov
xchg
loop
out
and
pop
mov
lahf
lea
in
push
jmp
or
rorb
mov
out
sti
jns
loopne
test
jle
push
add
push
add
sub
cmc
dec
ret
push
fistpl
inc
sahf
and
cs
scas
cmp
movsl
xor
jno
pushf
xor
mov
stc
nop
mov
dec
fisubs
fadds
shl
negl
push
sbb
adc
adc
pop
addb
xor
inc
stc
pop
adc
mov
adc
sub
cmp
setge
push
aas
lea
push
call
in
jns
inc
push
stos
pop
out
outsl
cmp
pop
ret
daa
jle
mov
bound
fnstsw
xchg
cmpl
sub
popf
and
or
push
cmpsb
ja
jge
sub
jo
movsb
xor
popa
aam
add
cmp
dec
mov
cmp
add
lds
adc
enter
test
push
sbb
and
fistps
int
jmp
adc
mov
adc
mov
and
dec
dec
ja
iret
jp
pop
mov
xor
stos
inc
arpl
cmp
nop
shll
cld
inc
idiv
sub
cld
jb
aaa
jp
cmc
adc
adc
lods
ret
cmpsb
or
je
xchg
push
push
dec
pusha
std
shl
xor
add
xchg
mov
jl
push
jno
inc
cmpsb
jns
push
pushf
into
out
sti
pushf
sbb
dec
in
sub
fnsave
adc
push
jl
loop
push
fstp
pop
fidivrl
out
fdivs
js
lea
lcall
shll
lret
push
fs
sbb
cmp
imul
scas
inc
inc
jno
xchg
push
push
stos
add
out
adc
mov
push
iret
and
int
fimull
pop
addr16
loopne
arpl
push
sahf
fidivrs
lcall
cwtl
add
dec
popf
mov
sbb
sahf
imul
lahf
inc
sub
repnz
arpl
test
sub
inc
pop
std
and
sub
icebp
add
iret
loop
mov
sub
xchg
or
out
gs
cmpb
rcrl
clc
push
shlb
mov
cld
popa
push
xchg
out
rcl
cmp
mov
dec
movsb
insl
cwtl
clc
lcall
pop
cmp
mov
int
ss
dec
out
mov
push
cmp
subps
push
fs
xchg
rcl
cmp
and
jb
cmp
int
addb
aam
mov
dec
mov
insb
xchg
mov
pushf
xchg
jle
repz
mov
xor
daa
sub
inc
pushf
test
movsb
add
or
mov
adc
pop
jbe
cmp
out
fucomp
cmp
sbb
out
jne
and
xlat
lcall
sub
sbb
push
lock
pop
sarb
xor
sbb
xchg
test
inc
push
movsl
addl
fisttpll
insb
int
out
jl
adc
pop
xchg
mov
cld
adc
rcrl
lds
scas
push
push
gs
and
inc
push
mov
and
movsb
out
xchg
addr16
adc
lods
pop
xor
lahf
icebp
jge
mov
dec
add
pushf
inc
inc
pop
and
insb
dec
mov
push
ds
inc
pop
xor
int
mov
and
dec
ss
pusha
shrl
sub
filds
jmp
dec
mov
mov
int3
sbb
xor
mov
push
or
addb
cmp
or
clc
jp
adc
fildll
fdivl
subb
push
mov
stos
xchg
cwtl
sub
cwtl
mul
mov
jge
mov
and
iret
jmp
pop
stc
mov
mov
das
inc
out
mov
in
lea
repnz
ds
arpl
imul
xlat
cld
or
and
add
jne
push
mov
in
push
lods
push
xor
mov
jl
inc
sub
cld
popa
fstpl
es
or
mov
jg
or
jl
add
inc
xchg
mov
or
cmp
inc
jbe
xor
inc
sub
pusha
sub
popf
jl
or
insb
sbb
mov
pop
mov
mov
repz
in
repnz
cmc
mov
inc
cs
push
push
ljmp
test
popa
scas
or
cli
sahf
pushf
shlb
lcall
pusha
adc
gs
fcmovu
pop
adc
mov
popa
adc
repz
dec
test
jmp
jg
jno
enter
shll
cmc
das
pop
call
icebp
mov
push
test
int3
js
ds
jne
sub
jp
sbb
mov
in
push
std
add
das
popf
aad
and
inc
lods
test
cmp
movsb
shll
aaa
push
and
mov
test
and
cwtl
jae
mov
outsl
leave
test
call
or
or
aam
mov
in
adc
repz
or
lcall
or
movsb
mov
loopne
pop
sbb
cmpl
jne
adc
frstor
push
sbb
cmp
sub
cli
xchg
or
add
ret
fstpt
call
testb
inc
mov
add
insl
and
cmp
gs
inc
jg
jmp
or
cmp
fs
jno
testl
cmp
xchg
and
jge
out
push
into
ljmp
lock
cmp
test
add
push
ljmp
pop
in
shll
cmp
jns
push
or
and
xor
add
dec
xchg
aas
jmp
cmp
xorl
repz
imul
xchg
cwtl
inc
in
popf
sub
and
mov
mov
xorb
push
push
add
les
pushf
shll
jae
pushf
dec
pop
mov
fldt
gs
daa
mov
mov
or
cld
xchg
pop
sbb
pop
pop
inc
insb
rcll
lret
cwtl
movsb
in
imul
arpl
int
dec
sub
dec
pop
loopne
and
dec
xor
ds
fsubrl
cmp
lea
sbb
adc
ss
out
lods
cmp
xchg
adc
and
jnp
pusha
mov
aad
and
pushf
jo
subl
pusha
iret
smsw
mov
adc
daa
inc
and
cmp
sub
out
add
cmp
mov
push
dec
movsl
insb
mov
fdivrl
add
cmp
lods
and
mov
pop
aad
mov
mov
jge
or
mov
mov
mov
jge
sbb
adc
mov
pop
ds
pusha
bound
mov
les
sbb
pop
and
dec
push
add
inc
inc
adc
and
ljmp
in
or
lea
inc
pushf
sbb
and
adc
lea
and
cmp
push
mov
sti
inc
mov
call
pop
aas
loop
pop
and
mov
fld
mov
and
push
in
cmp
pop
cmp
pop
lret
daa
popa
sbb
bound
xor
out
stc
mov
dec
test
push
loope
jg
push
or
adc
loope
lock
mov
sbbb
lahf
inc
xchg
mov
pop
ret
bound
stc
rcll
dec
test
test
dec
pop
stos
sub
and
and
out
insb
movsb
adc
test
mov
jle
movsl
rcr
sbb
and
int3
lods
add
mov
les
sbb
jno
jbe
xchg
mov
push
lea
outsl
sbb
paddq
mov
fdivrs
sbb
fcoml
inc
add
int3
xchg
sbb
jle
jbe
jl
cld
pusha
dec
and
dec
xor
sbbb
mov
mov
bound
add
adc
mov
push
jl
jno
sahf
in
daa
lods
pushf
dec
mov
xor
or
adc
pusha
sbb
mov
sbbl
inc
cmp
ljmp
mov
je
or
shlb
mov
loope
pop
xchg
aas
arpl
or
ljmp
cmp
push
sbb
cld
push
das
shr
pop
es
mov
sub
dec
mov
popa
ffree
arpl
push
xchg
or
jb
push
sahf
cmc
push
in
pop
adc
lea
fcoml
in
jbe
mov
sbb
dec
adc
fisubrl
in
adc
ret
mov
enter
adc
push
xchg
mov
mov
xor
lahf
jns
push
pop
adcl
arpl
cmpsl
push
jge
pop
shrl
xlat
stos
adc
add
sarl
and
inc
into
mov
mov
xor
sbb
add
sub
icebp
pop
mov
jnp
and
jne
adc
lahf
xor
repz
sti
scas
icebp
lea
jns
cs
xchg
jle
shll
test
int
std
in
and
cmp
push
lret
out
stos
and
push
adc
clc
notb
jmp
in
mov
es
sbb
xor
popf
je
jle
jnp
sbb
sub
popf
adc
push
adc
sti
mov
fwait
mov
imul
mov
inc
sub
inc
cmp
add
adc
shll
setp
mov
lahf
dec
arpl
add
xor
clc
mov
lahf
stc
jp
adc
jge
popa
out
push
or
outsb
es
xchg
xor
dec
mov
pop
lahf
cmp
xor
cmp
imul
pop
cmpsb
inc
scas
cli
pop
int
jae
fcmovbe
dec
outsb
stos
jnp
and
es
jb
popa
aam
stos
adc
dec
push
fisubs
or
inc
or
in
pop
mov
push
cmc
or
sahf
mov
mov
or
xchg
lds
sti
call
mov
test
inc
sbb
hlt
inc
testl
inc
sbb
popa
pop
or
jp
vmread
outsl
cmp
jl
int
out
cmp
psrlw
aad
shlb
push
fbstp
lods
add
adc
out
sarb
xchg
and
pop
imul
push
es
nop
push
test
jg
add
sub
shll
push
notb
mov
fwait
jmp
stos
arpl
cmp
in
imul
mov
cmp
xor
sub
das
jo,pt
xor
lcall
fcoms
xchg
fs
and
int
mov
stos
rol
mov
add
mov
leave
clc
shrb
jp
push
inc
lock
shl
or
rorl
enter
inc
xor
sub
scas
pop
aam
mov
imul
ljmp
lods
add
sbb
loopne
add
pop
loope
mulb
adc
pop
jae
js
sbb
jmp
popa
cmp
pop
std
inc
std
and
dec
dec
adc
mov
jnp
and
test
fldenv
iret
jl
mov
mov
xor
sub
pop
mov
xor
push
sbb
mov
lret
orl
lret
xchg
mov
int3
xchg
mov
add
mulb
js
pop
inc
ss
jecxz
je
sub
xor
js
hlt
adc
stos
les
adc
int3
lahf
jecxz
pop
and
lret
iret
inc
mov
mov
leave
pop
frstor
sub
inc
inc
inc
jne
imul
inc
and
xor
add
call
call
adc
jl
mov
es
sub
inc
mov
sub
dec
loop
sub
sub
jno
ja
aas
stos
mov
addr16
jno
rcrb
mov
insl
sub
ljmp
call
inc
adc
and
sub
push
mov
mov
das
outsl
sub
push
push
decb
add
insb
or
push
std
icebp
inc
xchg
cs
imul
jb
push
pop
ljmp
mov
lahf
popf
cmc
in
push
add
or
add
pop
jno
sub
test
mov
rolb
and
pop
mov
adc
lret
stos
pusha
mov
push
data16
lods
push
pop
cli
aas
or
iret
dec
clc
stc
jo
jmp
fsubrs
and
dec
jnp
add
movsb
icebp
mov
pop
mov
cmp
mov
lret
add
adcl
shl
int
adc
push
xor
test
dec
pushf
stos
loop
loopne
dec
fs
int
icebp
loop
aad
xor
mov
lcall
adc
inc
call
xchg
subl
jno
je
dec
cli
pop
sub
fcmovb
pop
or
rorl
push
fucomip
bound
test
xchg
sbb
push
xchg
scas
out
fidivrs
sbbl
xor
pusha
lret
or
jnp
movb
xchg
stos
dec
stos
and
iret
jp
push
mov
data16
ljmp
mov
clc
cmp
cmpsb
lea
fisttpll
xchg
cmpb
add
adc
inc
gs
shll
lods
pop
pusha
adc
rorb
je
insb
jno
std
mov
adc
addr16
mov
sbbl
add
movsb
sub
mov
int
daa
add
pop
and
inc
mov
cwtl
pop
inc
push
xlat
adc
add
stos
push
jns
cmp
push
cmp
ljmp
std
dec
outsl
popa
ds
add
sbb
and
push
dec
or
adc
push
add
dec
clc
in
inc
cwtl
inc
pop
fs
mov
ljmp
loope
cmp
in
fmull
jecxz
sarb
subb
outsb
pusha
jmp
aad
popa
fcom
aam
mov
aad
nop
push
sqrtps
inc
adc
dec
movsb
incl
rcll
sub
and
test
pop
repnz
std
push
jl
add
sub
int
lds
aas
add
pop
cmp
add
negb
cmp
int3
popf
mov
out
js
jbe
test
bnd
push
jmp
jecxz
clc
sub
xchg
xor
movsl
repnz
dec
cmp
filds
and
rorl
mov
pop
lea
lock
aas
lods
ljmp
out
into
cmp
lods
imul
lea
or
mov
push
xor
and
adc
je
lock
jg
sbb
sbb
nop
push
push
repnz
lock
adc
push
sbb
hlt
popf
push
adc
push
xchg
mov
stos
dec
push
mov
pop
lret
mov
pop
bound
dec
mov
fisttps
bound
nop
sahf
add
popf
test
jns
mov
sub
xlat
or
test
mov
jl
test
pop
push
pop
out
fiaddl
add
std
subl
aas
and
fistpl
pop
inc
cli
push
ja
mov
movsl
pop
stc
in
iret
dec
dec
adc
adc
out
negl
lea
cmpsl
sub
jne
adc
dec
pop
add
scas
xchg
cld
cmp
and
xchg
loope
cltd
inc
lock
test
push
adc
add
iret
and
adc
pop
xchg
mov
mov
xor
les
loopne
les
fs
xchg
in
xlat
testb
int
adc
sub
ret
std
and
push
pop
dec
xor
mov
call
cmp
sahf
rcrl
out
adc
fs
shll
int
adc
div
shll
cmp
xor
lcall
test
repz
movb
addr16
push
sbb
push
cmp
add
xor
jno
inc
dec
test
into
jecxz
fsubrs
notb
pushf
test
ret
push
addb
sarl
aas
adc
aad
or
rorb
xchg
clc
lods
pop
mov
cmc
push
repz
aad
and
in
dec
dec
out
stos
mov
inc
push
push
pop
sub
mov
ljmp
nop
jns
movsl
outsb
and
or
aaa
pop
push
test
add
scas
andl
xchg
xor
cmpsb
ficompl
and
daa
enter
popf
sbb
xchg
sti
in
mov
stc
repnz
les
nop
pop
fdivl
push
popf
movsb
icebp
sbb
dec
inc
xor
leave
mov
inc
or
mov
rorl
popf
and
rcrb
repz
inc
jno
add
lahf
lret
pop
dec
mov
inc
stc
push
imul
mov
push
cvtps2pi
shrl
lds
aad
scas
inc
aaa
adc
or
mov
imul
pop
mov
in
les
push
sbb
pop
int
inc
fcmovne
outsb
fiadds
and
imul
or
jecxz
xlat
adc
sbb
push
lahf
jg
adc
jb
loope
jb
fisubrl
pop
add
jne
xlat
lret
sbb
mov
mov
jo
push
jmp
mov
xchg
sbb
scas
sbb
out
test
adc
sub
mov
cmp
cmp
test
pop
and
js
in
imul
icebp
push
add
or
orl
mov
pop
lea
scas
dec
scas
mov
cmp
cwtl
cli
scas
int3
and
jne
mov
test
aad
std
rep
push
cld
mov
or
aad
xchg
pushf
arpl
cmpsb
dec
dec
sti
popf
push
insb
rclb
loope
fsubs
jl
ficoml
push
cmc
dec
mov
cltd
jl
push
shrl
jge
mov
repz
mov
fdivs
lds
xchg
es
jl
lahf
fsubr
jg
add
fdivr
fcoml
jbe
sub
hlt
cmc
popa
push
push
ret
cwtl
jae
nop
xor
scas
ret
lods
mov
loope
pushf
cmp
jb
ret
enter
and
mov
adc
int
add
daa
in
in
daa
and
push
inc
ret
or
xchg
xchg
repz
pop
hlt
shlb
inc
add
out
push
dec
sbb
leave
xor
mov
jno
int
out
cmp
fwait
hlt
lret
lea
cmpsl
or
int
jmp
bound
mov
inc
push
and
out
and
das
jb
test
std
xor
pop
xchg
push
cmp
cmp
inc
cmp
ja
cltd
inc
and
test
push
mov
dec
cmp
cmpsl
in
push
inc
adc
add
xchg
ret
jnp
mull
cmp
or
insl
xor
dec
or
mov
adc
ljmp
daa
adc
pop
lahf
lcall
dec
cmp
jne
popf
faddp
or
lahf
sbbl
popa
pusha
push
xor
negb
jmp
fsubrl
xor
jle
add
pop
pop
pop
int
sbb
xlat
xor
inc
push
inc
sub
sahf
or
jne
sub
sub
jno
xor
arpl
in
jae
notl
cld
jg
add
std
enter
xchg
jb
dec
in
xor
cld
fnsave
adc
mov
std
rorl
or
das
incb
xor
ror
and
or
jns
cmc
fnstenv
pushf
add
daa
mov
or
sbb
or
jl
cmpsl
nop
xchg
push
adc
addl
push
repnz
pop
ss
cs
sbb
in
insl
push
jge
movsl
or
mov
lahf
dec
in
jl
and
jge
subb
sub
pushf
jl
sbb
popa
lds
pop
out
push
repz
out
clc
mov
dec
xchg
dec
jns
and
pop
cmc
or
mov
in
pushf
lahf
dec
testb
stos
inc
add
pop
push
out
push
gs
inc
stos
ret
jns
pop
cmp
fimull
adc
out
out
aad
add
lret
pop
cmp
daa
je
int3
in
divl
inc
inc
or
and
clc
mov
lods
pop
cli
jne
xchg
adc
stos
es
fwait
mov
cmpsl
mov
cmp
sbb
sub
ret
pop
pushf
aaa
sub
push
test
pop
fwait
insl
pop
inc
mov
sahf
push
rorl
xchg
adc
xchg
mov
inc
sub
adc
mov
in
xlat
sbb
push
jge
push
scas
sub
loop
inc
push
mov
mov
sbb
ret
int
push
dec
sbb
test
data16
sub
sub
and
cmp
mov
xor
pop
roll
test
int
mov
and
xchg
psubsw
loopne
testb
cmp
xchg
mov
outsl
inc
and
popf
call
add
hlt
sub
shlb
and
mov
icebp
mov
cmp
iret
pop
or
insb
inc
mov
dec
sub
out
dec
insl
and
hlt
adc
xchg
or
and
daa
sbb
sbb
jg
push
inc
fs
xchg
fldz
fs
push
into
mov
loopne
xor
lret
testb
push
sub
add
push
decl
cwtl
sbb
nop
dec
jo
gs
sbb
lock
cs
sub
fsubs
out
lock
fadds
inc
inc
or
je
fsts
or
and
jecxz
sub
dec
fimull
js
ds
cmpsb
ja
cmc
fs
insl
pop
out
push
sub
sub
lea
and
push
in
scas
jns
repz
xchg
dec
or
lock
jbe
aaa
aam
and
or
in
add
in
ljmp
lds
sub
cmp
enter
dec
sub
and
daa
xchg
push
ret
stos
pop
pop
mov
pusha
adc
lahf
arpl
add
fistpl
dec
jno
int3
loope
daa
mov
jg
scas
stc
bound
cmp
movsb
inc
out
mov
or
rcrl
xchg
push
xchg
mov
pushf
inc
stos
sarb
sub
sbb
aas
aam
les
jae
or
loop
jns
dec
roll
xlat
lahf
mov
fsts
cmp
pop
rcrl
add
push
jae
test
cmp
lcall
lock
nop
jne
cwtl
dec
xchg
int3
repnz
push
mov
mov
lds
pop
xchg
clc
or
aaa
loope
and
jno
enter
push
mov
cmp
xor
sahf
xchg
add
add
cwtl
enter
sub
loopne
add
add
std
inc
call
ja
lcall
add
xor
xlat
cld
and
cmp
fs
das
push
mov
xor
imul
xor
inc
add
jno
repz
or
xchg
adc
nop
jae
std
stos
dec
and
out
pushf
xchg
and
adc
xchg
icebp
dec
or
add
lahf
stos
popf
sti
bound
dec
scas
mov
and
sbbb
dec
es
in
adc
lock
or
ret
ss
push
fs
inc
ds
sub
push
movl
pop
xor
push
sbb
inc
adc
arpl
push
shrl
cltd
dec
popa
movsl
stos
test
nop
inc
pusha
xor
scas
lods
inc
inc
xchg
sbb
je
call
inc
cmpsb
out
int3
test
jmp
xor
fidivs
pop
inc
enter
mov
inc
cmp
bound
mov
pop
xchg
sub
jg
xor
fistl
sti
dec
jmp
cmp
push
mov
dec
fcmovbe
cmpsb
adc
or
je
dec
or
pop
cmp
sub
cld
and
or
sarl
mov
xchg
orb
setl
stos
jns
xor
sub
outsb
cli
adc
cmp
inc
fldl
xor
adcl
movsb
ror
nop
adc
sbb
fwait
and
jns
pop
rcll
and
rcl
xlat
or
mov
dec
in
fstl
test
dec
dec
add
cmc
stc
pop
jb
imul
movsl
std
cld
push
jns
and
or
xor
sbb
stos
lock
push
jecxz
dec
iret
jo
cs
sub
xor
mov
dec
inc
push
test
add
sbb
mov
jne
loopne
adc
int
repz
shll
popa
push
inc
ja
mov
mov
jo
cmpsb
inc
jl
rclb
add
es
sbb
sbb
cmp
das
bound
jae
or
lods
pop
push
push
pop
popa
sub
js
mov
in
sarl
and
inc
xchg
movsb
adcl
pop
clc
sub
add
addb
mov
push
add
in
inc
popf
sub
lret
hlt
scas
xchg
xchg
in
mov
add
movsl
add
mov
add
xor
xor
jo
adc
aaa
and
add
fisttps
lods
fadd
call
pop
stos
jb
sti
sbb
or
mov
fistps
into
pop
movsb
dec
test
pushf
sub
je
xchg
cmp
mov
push
sub
incl
sti
xor
iret
dec
sub
and
cmp
pop
inc
call
ds
imul
or
mov
adc
mov
stos
sub
dec
inc
inc
sub
pop
push
sub
sti
inc
xchg
push
out
sahf
jne
filds
dec
jbe
stc
inc
sub
pop
jp
outsb
sub
int3
or
and
pusha
dec
inc
jbe
rcrb
movsl
in
push
cli
xchg
sub
cmp
stos
arpl
sbb
sub
sbb
shrb
popa
sub
int3
pop
cmpsb
add
jno
in
out
cwtl
insb
push
inc
or
or
jno
in
cmpsl
push
ss
das
adc
and
adc
ljmp
push
inc
cltd
loopne
xchg
dec
cmp
or
out
add
in
cwtl
mov
cmp
pop
stos
out
in
push
outsl
into
mov
movsb
addr16
xor
in
adc
sub
push
mov
ja
shll
inc
jno
push
lcall
sub
pusha
sub
icebp
cmp
dec
iret
mov
sub
inc
repnz
cs
and
jnp
daa
sub
or
adc
push
mov
push
xor
stc
pop
ret
iret
lods
and
lret
insb
addb
aad
ss
lds
mov
jno
inc
or
and
std
test
lcall
jb
dec
adc
push
or
rorb
mov
gs
xchg
into
gs
add
fistpll
or
jb
loop
push
in
sbb
mov
test
cmp
call
daa
arpl
les
jl
iret
int
sub
push
dec
inc
push
pop
lods
and
fidivl
dec
mov
jmp
fiaddl
mov
sbb
test
lret
sub
stos
xchg
inc
inc
test
pop
cmp
mov
shl
xchg
sub
push
push
cwtl
test
jns
sbb
mov
add
jp
mov
or
lret
fwait
pop
ret
jl
ret
scas
je
int3
jbe
test
mov
or
push
sub
icebp
pop
mov
ja
pusha
inc
jne
dec
jge
mov
scas
test
and
rcl
cwtl
cwtl
clc
aad
aad
fldcw
js
and
lock
mov
nop
lret
out
push
push
xchg
std
pop
jne
or
nop
sti
jne
cmp
cmp
pop
fadd
jne
sahf
pop
inc
repz
das
and
fildl
xor
cld
sub
add
fwait
lea
sbb
stos
and
jle
sub
filds
test
jg
xor
sbb
mov
sbb
or
inc
add
stos
mov
cmp
lods
jmp
cmp
pop
and
lock
fistps
rcll
pop
jb
jecxz
stos
jo
push
je
jg
push
lahf
fstl
and
call
subl
test
mov
outsl
sbb
and
jle
outsb
cli
push
addr16
repz
add
stos
outsb
push
mov
rcll
xor
inc
sub
jecxz
mov
push
jp
iret
xor
out
cmpb
iret
popa
add
sub
insl
jne
lahf
sub
les
mov
fwait
lcall
cmp
out
jbe
or
or
test
pop
fs
mov
scas
or
insl
lea
sbb
mov
fildl
and
aas
xor
push
fnsetpm(287
and
jp
cmp
call
fstpl
cld
add
mov
cmpsl
ds
jmp
add
imull
js
and
cvttps2pi
xor
cltd
jge
inc
dec
call
xor
imulb
aad
and
fsubr
scas
pop
xchg
sbb
cli
adc
jl
cmp
jns
shll
jb
cmp
pop
add
pop
xchg
loope
stos
xchg
rcrl
iret
inc
jmp
fiaddl
pop
mov
jp
mov
ds
and
pop
fbstp
mov
adc
inc
jo
jae
fdivrs
xchg
or
cli
test
jnp
add
in
insl
scas
cli
inc
push
cmp
mov
or
jns
add
call
mov
lret
sub
shrb
das
stos
ss
push
and
adc
icebp
jg
arpl
or
or
jg
stos
insl
or
loopne
cmp
mov
adc
xlat
or
cmpsl
test
sti
jp
mov
inc
mov
leave
aaa
mov
leave
in
jge
test
fisubl
pop
imul
push
or
push
fists
xlat
hlt
insb
mov
jge
jmp
mov
jmp
stos
movsl
das
in
cmp
lret
mov
xor
fisubrs
scas
outsl
lea
mov
jns
adc
je
out
dec
insb
add
xchg
sbb
lahf
jge
push
pop
mov
int3
xchg
mov
sti
lahf
mov
mov
rorl
push
jecxz
into
icebp
push
cld
xor
loop
shl
push
arpl
pop
cmpsl
dec
adc
sub
add
int3
cmpsb
fcmovne
push
mov
inc
loopne
and
popa
pop
out
push
or
sub
cmp
imul
jnp
mov
aam
out
shlb
out
call
jns
xchg
les
xchg
xchg
xchg
xor
dec
dec
iret
xlat
pop
adc
shll
lret
fcmovnbe
dec
testb
pop
dec
outsb
lcall
or
das
inc
into
enter
jg
push
xor
pop
ffreep
pop
dec
neg
and
out
repnz
add
gs
fcomip
and
push
xor
pop
sbb
jno
stos
jle
ffreep
and
sub
pop
out
xor
add
call
lahf
scas
das
bswap
addr16
xchg
ss
sbb
sti
insb
outsb
sti
pop
out
jg
dec
cmp
addr16
loopne
sahf
mov
add
adc
aas
mov
push
push
in
cmpsb
sbb
fistpll
sub
arpl
cmp
cmp
movsl
mov
dec
out
arpl
pop
pop
inc
mov
and
in
mov
xchg
xor
lret
dec
into
mov
push
in
cmc
call
sub
outsb
pop
mov
sahf
inc
jbe
sub
jmp
and
pop
cmp
dec
hlt
fldl
jne
add
sahf
rorl
and
push
inc
mov
imul
addr16
inc
aad
mov
or
adcb
and
cmpsb
filds
xchg
or
pop
and
popa
dec
mov
sbb
adc
dec
mov
jp
dec
xlat
ljmp
mov
pop
test
jp
inc
mov
dec
mov
or
icebp
cmp
mull
add
cmp
fs
cmpl
xchg
push
push
mov
les
iret
test
sarb
loop
inc
repnz
in
adc
dec
inc
jo
js
in
dec
test
lods
pusha
and
insb
test
mov
xlat
mov
loop
sbb
stc
add
xor
adc
cmpsl
add
or
cmp
jle
cmp
out
inc
sub
sbb
xchg
sub
inc
push
std
xchg
and
mov
movsl
stos
inc
cmp
jo
xor
mov
and
stos
test
popa
inc
sub
pop
jg
and
fmuls
cmp
push
scas
cmp
jae
cbtw
jl
push
out
jnp
lods
dec
out
pop
shrb
pop
and
es
push
insb
dec
cmpsb
xor
sbb
loopne
jbe
xchg
xchg
sbb
cmp
xor
fdivrs
mov
rcrb
pushf
pop
add
mov
dec
repnz
jge
movsb
icebp
jmp
xchg
xchg
jb
sti
lcall
mov
xchg
mov
xor
rcrb
sub
dec
ljmp
mov
fwait
and
pop
lahf
push
mov
scas
mov
inc
fcomip
sahf
and
popf
lahf
mov
jae
in
fbld
sub
iret
jp
gs
sbb
mov
sbb
icebp
fwait
pop
ret
adc
aaa
add
int3
mov
sub
shrb
jo
push
ss
and
mov
lods
ret
and
and
in
gs
sub
pop
fildll
jne
lock
push
sbb
imul
pop
ret
or
mov
mov
xchg
xor
aas
es
insb
in
movsb
pop
fs
add
scas
pop
arpl
shrl
jne
adc
icebp
sahf
nop
lods
mov
mov
jnp
mov
mov
outsl
out
mov
sbb
add
mov
lea
dec
jmp
rcr
jb
mov
dec
scas
jb
sbb
addr16
imul
push
cmc
mov
add
xor
test
rep
jne
pop
mov
out
nop
and
add
pop
addr16
shl
and
das
xor
and
add
icebp
adc
cmc
sahf
inc
sarl
insl
dec
add
cmp
jg
faddp
lahf
add
les
icebp
adc
mov
cmp
mov
repz
xor
mov
inc
or
mov
je
push
xor
lods
dec
div
ret
jne
rol
sbb
prefetch
out
dec
pop
popf
mov
mov
jno
mov
inc
inc
divb
push
mov
mov
imul
mov
dec
xchg
stos
or
dec
jns
stos
lock
xchg
cmp
or
push
push
sbbl
and
rorl
loopne
cmp
test
fldl2e
outsb
outsl
cmp
jae
dec
stos
imul
xchg
inc
sti
adc
or
jae
sbb
mov
syscall
and
xchg
mov
inc
jae
rorb
jl
push
lods
sub
inc
sub
ds
push
push
mov
xor
divl
mov
stc
jns
shl
fwait
inc
sbb
daa
jne
dec
stc
popa
mov
popa
fimuls
mov
mov
and
addr16
or
faddl
add
shl
daa
cmc
dec
push
and
test
int3
push
lods
mov
movsl
inc
dec
mov
push
in
test
xor
jnp
fistl
lods
jge
jmp
js
dec
sarb
xor
fnsave
pushf
sub
dec
pop
test
push
jno
cmp
inc
lahf
les
adc
int
xor
test
aaa
push
insb
in
inc
mov
jns
or
inc
jae
add
cmp
dec
add
jmp
test
push
pop
cmpsb
inc
out
fists
adc
xor
loop
call
push
mov
int
push
add
dec
int
xchg
xor
xor
dec
and
in
ja
arpl
sbb
out
pop
ljmp
mov
mov
add
adc
push
mov
in
notb
and
aaa
push
cwtl
mov
lahf
add
sbb
bound
maskmovq
testl
sub
insl
call
cld
push
push
mov
add
pop
and
and
repnz
add
sub
push
lds
js
sub
shll
cwtl
in
cmpsl
roll
test
push
repnz
shlb
push
test
push
jne
mov
dec
cmp
clc
fbstp
movsl
inc
insb
cmp
jl
inc
nop
sub
mov
inc
std
stos
adc
std
mov
and
insb
mov
andb
or
pop
ljmp
je
jle
outsl
cwtl
bound
pop
sub
or
fwait
iret
and
dec
test
mov
xor
add
mov
push
jl
xor
aad
fs
xchg
jne
lods
rcrl
test
gs
movsb
dec
sti
into
stc
lcall
and
sub
adc
insl
or
push
pop
add
repz
sbb
std
es
aaa
into
mov
sub
sti
mov
cmp
sbb
inc
adc
lock
insl
and
mov
push
cs
cmp
jns
es
movsb
fmuls
iret
sub
add
ja
js
lahf
roll
adc
cmp
sahf
popa
add
adc
fistpl
pop
xor
sbb
leave
adc
inc
pop
and
sub
adc
push
pop
sub
sub
adc
fs
xor
sub
adc
je
cmp
sub
adc
or
inc
push
or
and
mov
sbb
sbb
jns
loopne
ret
out
sub
mov
cmp
lahf
fmuls
outsb
and
leave
iret
dec
inc
cmpsl
inc
std
mov
adc
cld
es
push
inc
loope
inc
shr
xchg
imul
repz
std
add
test
pop
fdivrl
lcall
insb
xor
call
sti
adc
das
out
cltd
dec
xor
mov
movsb
ljmp
jno
mov
pop
mov
cmpsl
pop
lahf
push
xor
inc
add
les
xchg
dec
sub
sbb
stos
imul
stos
add
rolb
rcrb
xchg
add
mov
sbb
add
movsl
insb
xchg
xor
jns
push
rorl
mov
pop
call
jmp
mov
cmp
inc
js
mov
dec
pop
mov
lea
addb
xchg
loopne
xor
sub
les
push
push
sbb
adc
xchg
push
inc
jbe
dec
push
je
lahf
mov
mov
loope
nop
aam
cs
in
sub
loopne
fcomps
sbb
jb
sub
insb
pop
jle
mov
movsl
or
pop
inc
aas
sub
dec
call
mov
xchg
add
and
leave
inc
mov
in
icebp
int
shll
outsl
sti
out
cmp
xor
and
pop
fstps
xor
cmp
push
je
int3
aam
cmp
push
inc
dec
dec
test
adc
ficoms
add
jno
push
lds
jmp
movsl
scas
push
cmp
sarl
mov
cwtl
dec
cld
pop
movsl
add
jg
sub
orb
les
call
addb
lahf
fldcw
xor
sbb
and
movsb
test
adc
cmp
dec
sbb
mov
mov
andb
jecxz
dec
scas
push
and
dec
out
pop
std
dec
mov
dec
dec
bound
dec
sbb
push
and
dec
mov
es
inc
push
sbb
push
or
adc
sti
jecxz
jle
lea
cs
enter
rcl
ret
iret
push
adc
nop
sarb
xchg
arpl
ret
jo
mov
mov
fists
dec
adc
or
in
xor
push
fs
aaa
fucomp
les
ljmp
xor
jg
aaa
sbb
mov
in
pop
je
enter
push
fistl
repz
and
add
or
mov
stos
inc
push
mov
pop
lahf
insb
sub
mov
repz
dec
sub
mov
pop
rol
pop
loopne
adc
add
add
sub
and
in
push
orb
pop
mov
cwtl
sub
adc
cmpb
push
rolb
mov
mov
or
inc
cmp
or
adc
in
push
sub
hlt
ja
pop
lahf
test
incl
cmp
sbbl
or
outsb
and
sub
movsl
lds
icebp
int
pushf
inc
mov
add
jo
rol
jmp
in
jo
shrb
lock
test
xor
out
neg
daa
cmp
mov
leave
adc
test
clc
inc
xor
push
mov
jecxz
aaa
sbb
loop
test
mov
dec
mov
mov
dec
xor
inc
push
cs
adc
jp
adc
shlb
pop
inc
mov
pop
xchg
xor
test
cmpsl
add
std
dec
test
xchg
addb
or
mov
mov
es
iret
es
fmuls
xchg
popl
mov
fcomps
fmuls
dec
pushf
push
jo
inc
jle
push
shlb
jl
sbb
jl
push
pop
jne
xchg
test
stos
xor
filds
stos
dec
jns
pusha
inc
int
jmp
add
sbb
call
int
enter
dec
xlat
mov
insb
and
daa
pop
pop
mov
mov
in
imul
xchg
shrl
data16
adc
in
jno
into
sub
jbe
cld
imul
dec
repnz
sbb
sub
push
rcll
sbb
jp
push
lods
insb
sub
adc
int
and
adc
and
dec
lahf
add
xchg
iret
jl
cli
jl
aas
jp
int
adc
int
cmp
stos
fwait
fwait
dec
lea
jle
xlat
sub
and
jnp
mov
sarl
or
lock
outsb
add
aaa
lahf
fidivs
and
ljmp
stc
push
inc
xor
sbb
push
test
jne
fwait
xchg
jnp
xor
or
or
dec
add
inc
lcall
or
add
rol
cmp
ret
or
in
inc
popf
jae
dec
negb
or
fcomps
or
stos
imul
test
jo
insl
je
xchg
dec
into
xchg
inc
mov
cmp
and
dec
sub
dec
fwait
test
in
ss
je
data16
push
jmp
aas
data16
cs
dec
jnp
xchg
xor
sub
and
gs
test
repz
cmp
das
out
cmpsl
sbb
sub
inc
jno
xorl
push
adc
insl
stos
lcall
sbbb
xor
fisubrs
movb
test
mov
cmp
stc
int3
xchg
cmpsl
jl
cmp
cmc
inc
sub
xor
repnz
push
jb
ljmp
movsl
dec
dec
mov
pop
fisttpl
cvtps2pi
in
mov
int
shrl
das
lods
lahf
test
sub
fbld
xlat
xchg
push
fdivr
aas
xchg
add
sar
jns
dec
xor
pop
sti
xchg
xchg
push
insb
popf
ds
cmp
push
test
daa
mov
pop
cmp
push
imul
jns
mov
lret
fldt
and
out
sub
testl
ss
jl
jae
out
push
sbb
shll
lahf
inc
sub
lret
aad
iret
outsl
mov
add
adc
cmp
test
mov
shr
nop
push
xor
push
das
dec
and
ds
out
cmp
xor
push
enter
mov
js
adc
inc
dec
fisttps
sub
jecxz
jmp
sbb
add
adc
add
aad
sub
sbb
pusha
in
icebp
xchg
sti
stos
cmp
xor
inc
cwtl
xchg
notl
xchg
fisubl
xchg
fisttpl
lcall
pop
fcomip
sub
int
lret
clc
pop
inc
or
lret
out
inc
insl
fmuls
repnz
and
push
addr16
dec
inc
stos
mov
jns
enter
xchg
movsb
dec
and
std
imulb
mov
push
notl
and
insb
push
mov
dec
fstps
jecxz
and
cmp
inc
call
add
movb
inc
inc
xchg
in
dec
pushf
mov
dec
inc
cmp
xlat
jae
jmp
jne
sbb
inc
jmp
pop
arpl
insl
lea
inc
sbb
and
lret
or
out
pop
dec
push
dec
push
xor
push
in
insb
gs
repz
mov
ss
sub
in
lods
push
sub
nop
push
repnz
test
das
xor
imul
int3
xchg
repz
pop
xchg
imul
pop
and
test
xor
in
lock
inc
dec
ss
rcrl
aad
mov
popf
testl
shlb
nop
dec
or
cwtl
stos
btr
sub
std
int
cs
dec
pop
je
inc
mov
test
jecxz
fisubl
roll
iret
rorl
movsb
and
movsl
aaa
test
push
xlat
adc
in
les
cmp
mov
mov
xchg
inc
ret
mov
mov
jmp
inc
dec
add
movsb
inc
mov
sub
pop
popw
cmp
sbb
sbb
sub
lea
orl
push
inc
lods
int3
test
lock
xchg
popf
xlat
test
incb
lahf
xor
test
push
mov
cmp
add
stc
call
add
or
int
in
sbbl
pop
je
lahf
jne
repz
sub
jle
pop
sbb
int
pop
push
test
cli
push
cld
or
mov
loope
mov
mov
filds
jmp
bound
lods
adc
fsts
inc
int
pop
shll
out
add
sbb
push
movsb
and
popf
add
adc
stos
or
popa
jae
xchg
sbb
scas
aas
addb
xlat
pop
out
xor
fmuls
sahf
adc
xor
add
push
lods
lea
adc
aaa
and
add
mov
in
cmpsl
aam
repz
push
pop
push
std
mov
xchg
fstps
fucom
or
pop
mov
and
shrb
and
subb
jl
cwtl
fnstenv
mov
dec
testb
cs
call
adc
stc
arpl
mov
push
pop
or
imul
mov
lock
xor
sbb
dec
sub
pushf
or
cltd
cwtl
stos
pop
dec
mov
dec
subb
and
ret
xchg
shlb
std
dec
xor
lahf
xor
stos
dec
cld
mov
mov
inc
dec
inc
out
cmp
sub
cld
and
jo
mov
cmp
cmpsb
pop
sar
add
add
ret
or
and
test
adc
dec
adc
jns
xor
cmpsb
or
pop
inc
movb
sub
sti
or
mov
incb
cltd
push
shll
fiadds
dec
push
orb
imul
push
movsl
dec
mov
mov
rorb
or
es
sub
dec
cmc
xchg
jp
cwtl
xor
sbb
push
insl
sbb
and
out
or
or
insb
fsubrs
mov
add
arpl
pop
pop
or
cld
xchg
pusha
jno
inc
inc
mov
out
or
pop
mov
add
in
xor
adc
xchg
or
ror
or
out
ret
mov
pop
inc
iret
rcll
stos
cli
and
pop
roll
push
stc
xchg
pop
mov
pushf
shll
dec
dec
lcall
mov
jae
adc
mov
inc
mov
pop
test
cmp
out
stos
and
xchg
sub
divl
lcall
ret
ljmp
test
rcll
and
mov
shll
int3
cwtl
outsl
sub
mov
pop
testl
sbb
andl
mov
lods
push
rol
xlat
shrb
sbb
out
push
loope
xor
enter
sarb
xor
sub
sub
cmp
ret
adc
adc
pusha
push
cli
daa
lods
dec
out
sbbb
nop
inc
ret
xorb
xor
imul
js
adc
out
inc
sti
add
pop
cmp
mull
scas
mov
aas
dec
rorb
lods
popf
out
cmc
data16
push
xchg
or
mov
lods
sub
and
test
pop
adc
push
xor
xchg
pop
xor
ficomps
cmpb
inc
call
sar
in
sarl
or
cmp
adc
add
and
int3
or
pop
ss
aaa
fs
mov
add
imulb
push
mov
sbb
jne
sub
cwtl
insl
pop
cmp
stos
pop
push
popf
out
cmpsl
std
negl
jnp
jmp
fadd
popf
mov
out
leave
and
sub
in
xor
and
fimull
call
aaa
dec
sub
adc
xchg
jns
aam
lods
jg
jo
cmc
cmp
mov
insb
int
or
cmp
arpl
push
or
fisubl
lcall
movsb
scas
push
call
mov
in
cmp
aam
roll
mov
aam
jb
cmpsb
sub
jmp
fidivrl
lahf
push
add
cmpsl
fisttpl
cmp
outsl
jecxz
pop
push
inc
or
mov
daa
je
push
adc
hlt
mov
mul
montmul
cmpsb
push
nop
lahf
insl
xchg
mov
icebp
push
sbb
sbb
rorb
insb
pop
fisubrl
adc
fisubrl
repz
outsb
xchg
mov
fsub
dec
or
lahf
test
mov
jge
cli
repnz
cmp
push
nop
xor
mov
pop
cmp
jae
ss
adc
sub
inc
cwtl
icebp
push
adc
imul
push
cs
cmp
xor
fmull
or
das
push
cli
dec
pop
addr16
mov
insl
jecxz
xchg
dec
pop
push
movb
xchg
and
dec
inc
fnstsw
js
fimull
xchg
jmp
xor
outsl
pop
cmc
rorl
pop
or
push
cmc
adcl
xor
xchg
inc
movsl
xor
dec
dec
inc
in
sub
xchg
xchg
jns
xchg
cmp
sbb
insb
sub
push
xchg
shlb
inc
dec
roll
and
inc
std
rorb
xor
add
sub
push
mov
inc
and
adc
or
or
sbb
lret
in
mov
std
xor
sbb
lea
xor
xchg
iret
adc
jp
leave
xchg
loope
std
add
icebp
iret
dec
lahf
xchg
add
inc
cltd
jp
xchg
repz
push
inc
dec
mov
mov
scas
dec
xchg
mov
jnp
xchg
pop
test
pop
cs
pop
movsb
sub
dec
test
sbb
imul
es
push
aad
cwtl
xorl
movsb
and
adc
jne
and
or
insb
in
lods
in
lock
ret
mov
fldl
rol
in
divl
push
or
pop
push
cmp
jge
call
cmpsb
mov
insb
fldcw
lret
fisttpl
add
into
jp
scas
add
lea
mov
daa
fs
jle
cld
in
filds
jno
mov
lahf
inc
sub
adc
pop
push
push
dec
cltd
rorb
mov
pop
mov
add
jg
mov
xchg
rcrb
iret
mov
jmp
sti
mov
push
inc
or
fisttps
inc
orl
clc
cmp
popf
or
gs
or
xor
addb
sub
inc
data16
shll
dec
std
stos
xchg
movsb
repz
fldl
cmc
in
imul
imul
or
inc
rcrl
push
sahf
stc
or
jbe
cwtl
stc
jne
cmp
pop
mov
and
lock
sbb
bswap
adc
fsubrl
pushf
sub
xchg
or
movsl
rep
or
mov
inc
and
lahf
and
out
sti
out
pop
cmp
push
sub
fucomip
subl
push
push
dec
mov
push
mov
mov
cld
outsb
xchg
cld
push
sti
jp
in
push
notl
aam
aas
mov
push
xor
daa
in
jg
jle
lcall
or
in
fwait
test
xchg
imul
mov
jbe
inc
into
cli
xchg
dec
mov
adc
push
sub
test
xorl
in
push
movsl
out
pop
or
pop
mov
test
push
adc
cmpsl
push
notl
lahf
cmpl
sahf
inc
andb
lahf
loop
enter
cmp
sub
sarb
push
sbb
sti
insl
xchg
shll
cmp
xor
popf
imul
je
cmc
cmp
add
call
mov
int3
jmp
sub
mov
add
adc
out
int
loop
mov
mov
or
add
add
xor
and
scas
xor
in
dec
add
cltd
pop
sub
push
cmc
ljmp
add
pop
inc
subb
add
sbb
lahf
mov
inc
imul
stos
notl
repnz
sbb
scas
pop
cli
jecxz
int3
push
mov
mov
pop
mov
imul
xlat
sahf
fstpl
push
push
jmp
insb
add
shl
shlb
insl
adc
test
fnstsw
dec
inc
cmp
pop
jns
xchg
add
add
jg
fiaddl
fcoml
mov
sbb
jno
in
outsb
mov
ret
ror
mov
mov
rcl
cmp
or
cmp
arpl
sub
push
fcmove
mov
adc
rorb
stc
and
jae
aaa
dec
sub
mov
cmp
int
sub
in
inc
adc
xlat
aaa
popf
jl
mov
aas
lahf
sahf
inc
jo
cmp
das
add
int
add
push
mov
and
movsb
mov
and
cmp
pop
ss
out
rcrl
pop
sbb
dec
test
subb
xchg
or
cmp
ror
and
sub
imul
mov
lods
insb
inc
arpl
enter
xchg
hlt
or
jg
cmp
cmp
lret
out
jge
imulb
jbe
xor
push
jl
ss
push
sti
lahf
in
lods
rorl
subb
push
out
or
xor
ds
sbb
xchg
and
and
fnstenv
pop
jo
jne
adc
shr
sub
dec
add
pop
and
cmp
in
xchg
cld
sbb
lret
sub
or
mov
and
testl
fdivrl
add
fildll
lcall
pop
xchg
insb
ret
and
mov
inc
cmp
add
mov
sti
in
mov
pop
frstor
lahf
mov
push
xchg
scas
iret
or
and
mov
dec
ss
push
jb
ds
cld
pop
cmp
push
cmp
arpl
mov
lea
adc
adc
js
mov
movsb
fcompl
sub
push
cld
sbb
mov
or
cmp
pop
cmovge
insl
or
lea
cmp
stos
fwait
mov
and
pop
sub
int3
mov
pop
sahf
jbe
xorl
push
lahf
fwait
pop
out
icebp
mov
cmc
mov
dec
sbb
sahf
inc
loop
loop
push
out
sub
and
or
fstl
adc
adc
pushf
or
sub
cmpsl
mov
xor
xor
dec
cmp
add
mov
or
ficoml
ss
adc
mov
pop
movsb
aas
bound
lret
mov
adc
jg
outsl
push
fldl
push
sub
push
or
cmpb
lahf
cmpl
xchg
jmp
lahf
push
ljmp
scas
fxch
outsb
adc
mov
pop
dec
cld
ficomps
jne
adc
adc
int
adc
cs
or
pop
mov
shlb
dec
cmp
dec
adc
aas
rorl
cmp
shl
in
test
jns
adc
pop
js
lahf
out
mov
jmp
sub
lea
sbb
imul
mov
es
dec
mov
jns
pop
outsl
inc
jmp
fimull
nop
mov
stos
das
cli
sahf
lods
adc
mov
aad
insl
and
ds
aad
int
repz
inc
and
jbe
mov
test
icebp
ds
loop,pn
pop
push
push
clc
icebp
repnz
mov
test
cmp
cwtl
dec
and
pop
xor
gs
inc
pop
push
mov
add
mov
outsl
and
pop
in
jno
cmp
test
popf
outsl
sbb
stc
and
fnstenv
js
arpl
xchg
sub
and
out
cmc
jbe
movsb
stos
rep
or
mov
xchg
mov
add
add
les
aas
jp
shrl
les
and
inc
call
leave
push
loope
lahf
mov
push
ja
add
inc
sahf
popf
pushf
xor
mov
add
out
xor
pop
stc
fcmove
add
sub
movsb
les
nop
jae
lods
syscall
test
in
out
in
icebp
inc
add
lahf
mov
mov
mulb
cmpsl
call
insb
jnp
jecxz
or
js
fs
cmc
xor
inc
or
sub
jno
adc
mov
popa
add
push
pop
push
das
rcll
jle
sub
push
pop
scas
add
mov
test
popa
fs
add
jecxz
sahf
xor
sub
pop
les
aad
cmp
sub
xor
fdivrl
pusha
sub
cmp
imul
cmp
insl
ljmp
xchg
push
sbb
testl
sub
int
push
ret
jl
jecxz
jle
jp
xor
pop
push
loop
mov
and
std
stos
push
sarl
xchg
sub
adc
ficoms
mov
or
fstpl
scas
cs
es
sub
cmpsb
jle
jmp
int
dec
xor
lock
push
outsb
insl
or
iret
cmpsb
shr
or
pop
out
aam
fs
pop
or
sub
dec
iret
jmp
jl
jbe
aaa
inc
xor
mov
cmpb
into
sbb
outsl
jb
or
adc
in
fcoms
add
push
cmp
movsb
mov
xchg
add
test
xchg
insl
fdivrp
and
scas
arpl
outsl
jle
mov
adc
push
sbb
in
inc
jge
cs
pop
cmp
xchg
sti
sub
movsl
and
mov
sbb
loop
push
dec
push
xor
icebp
test
mov
push
std
cli
cs
mov
add
test
push
pop
dec
inc
or
jne
cli
repnz
inc
cwtl
lahf
sti
lods
loop
movsl
and
idivl
sbb
push
push
arpl
popa
or
pop
pusha
push
and
mov
adc
jl
add
add
test
into
cmpsb
dec
sub
mov
or
enter
popa
and
add
enter
test
rep
and
mov
and
mov
outsl
loop
fildl
int
or
sbb
in
dec
and
xor
cmpb
adc
sub
add
add
pop
inc
jbe
add
add
sahf
mov
xor
or
sbb
in
std
hlt
xor
testl
test
mov
jno
mov
call
roll
pop
push
mov
ds
inc
pop
cmp
mov
or
pusha
test
inc
xor
and
add
sbb
cmc
xchg
sub
icebp
mov
das
pop
xor
int
lods
insb
or
cli
mov
cmp
cmp
cmp
negl
outsl
int
add
fstpt
sbb
sahf
jp
sub
or
test
fs
xchg
jne
test
rolb
cmp
xor
out
inc
xchg
fdivr
mov
mov
test
ret
mov
loop
dec
mov
popa
js
xor
test
xchg
stos
movb
push
cld
test
jecxz
negl
push
dec
popf
das
sbb
lea
adc
aam
sbb
dec
inc
add
inc
or
nopl
mov
sahf
adc
fldl
leave
xchg
pushf
in
fisubrl
dec
icebp
icebp
push
ja
and
pushf
ds
jo
sub
xor
add
pop
jb
test
push
mov
sti
aad
pushf
pop
cmc
xchg
mov
movsl
push
clc
clc
or
jg
stos
inc
dec
stos
js
test
mov
mov
push
pop
lahf
jb
je
loop
lock
fisttpll
mov
jge
rcrl
xchg
mov
or
in
sbbb
or
add
ret
cmpsb
pop
mov
insl
pop
dec
push
fbstp
ja
test
cmp
insl
jge
mov
inc
dec
testl
pop
add
not
loope
inc
cwtl
push
cli
add
enter
jl
nop
roll
cs
xor
push
push
ljmp
push
pop
sbb
pop
loope
jp
ret
and
pop
cmp
sbbb
pop
push
popf
out
or
cmp
xor
fisttps
mov
cwtl
add
or
mov
sbb
aam
jno
sbbb
data16
fs
pop
add
sti
mov
inc
out
in
nop
in
inc
xor
sbb
push
cmp
jp
xchg
mov
out
jp
fistps
adc
sub
nop
sub
out
and
xchg
int
and
adc
xor
out
adc
int
outsl
loope
jb
outsl
jge
cs
sahf
cmp
sub
push
lahf
rcrb
cwtl
pop
insl
jns
jmp
insl
insb
rclb
lds
dec
sub
js
loop
out
sahf
cld
ljmp
data16
pop
test
aam
cmp
pop
adc
dec
lahf
push
push
stos
lahf
rcl
testb
and
bound
sbb
cs
gs
shlb
in
sub
in
pushf
mov
sub
notl
pop
aad
sub
jl
push
pop
sbb
jmp
dec
int
pop
cmp
adc
in
xor
int3
ljmp
cltd
sbb
sub
pop
sbb
pop
test
xor
and
xor
add
cmp
imul
push
loop
pop
dec
imulb
push
rcll
negl
insb
push
lahf
add
xchg
mov
inc
data16
xlat
cld
roll
pop
sub
cmp
divl
ret
mov
sub
push
cmp
xor
jb
int3
fs
insb
or
xchg
sub
lahf
inc
sub
repz
xchg
mov
and
mov
hlt
test
popf
pop
adc
dec
stos
jns
rolb
jg
and
cmp
loope
inc
aad
adc
and
test
lret
addr16
jg,pn
sub
mov
mov
sub
data16
movsl
add
test
add
mov
pushf
inc
ret
fwait
daa
mov
or
sbb
pop
and
pop
pop
outsl
push
dec
pop
hlt
adc
fdivp
lea
shll
mov
mov
aam
pusha
inc
call
repz
iret
add
andl
in
and
arpl
leave
rorl
cmp
addr16
loop
dec
out
fs
ljmp
lods
xchg
jo
insb
into
test
ret
mov
mov
in
movb
stc
filds
repnz
hlt
loop
mov
bound
rolb
mov
inc
jmp
sub
adc
dec
jp
test
xchg
push
mov
mov
jns
out
in
jle
xor
outsl
test
dec
mov
rorb
rcrb
outsl
shll
adc
data16
unpcklps
out
stos
sbb
pop
int
cld
add
xchg
pop
dec
test
loopne
dec
cmp
add
insl
adc
cld
rep
add
mov
insl
iret
mov
loopne
daa
movsl
push
cmp
mov
loopne,pn
bound
mov
lahf
ljmp
pop
lods
sub
xor
and
scas
or
test
ret
lock
cli
pop
inc
xchg
mov
inc
movsl
cltd
push
push
dec
inc
daa
test
sbb
pop
popl
mov
mov
lret
sbb
sub
mov
notl
scas
test
out
aam
out
bound
nop
stos
dec
shll
mov
in
cmp
fisubrs
nop
push
jns
sub
mov
nop
xchg
lods
gs
or
jbe
std
cwtl
mov
imul
and
mov
popa
je
dec
push
shr
sbb
add
fistpll
popf
mov
scas
pop
cmp
andb
and
mov
and
mov
add
inc
filds
cwtl
and
movsl
push
xlat
cmp
xchg
inc
stos
push
lret
iret
cli
mov
adc
cmp
adcl
in
dec
cwtl
jle
pop
xor
xor
and
test
add
in
movsl
mov
or
push
stos
repz
gs
test
xchg
push
testb
data16
or
loop
scas
sar
icebp
adc
push
movsl
sub
push
mov
repnz
lret
xchg
cmpsl
mov
cld
shll
xchg
mov
int3
dec
adc
xchg
out
pop
mov
dec
repz
insb
icebp
sbb
out
dec
and
xor
je
cmp
cwtl
jecxz
mov
or
inc
sbb
cmc
adc
push
push
je
inc
xor
xchg
mov
icebp
inc
mov
int3
popf
in
pop
inc
inc
mov
push
inc
into
test
and
repz
adc
add
prefetch
or
sbb
mov
add
lock
shlb
sub
pop
and
inc
dec
daa
sub
push
adc
push
test
add
nop
insl
jle
and
clc
or
cli
or
jmp
mov
adc
repz
xor
rorb
xchg
shrb
add
enter
sub
fisttps
sub
add
and
mov
aas
push
shl
aas
sti
popf
inc
xor
sub
mov
mov
pusha
or
pop
ja
cmpsl
add
repnz
test
inc
iret
sub
orl
fdivrl
sub
adc
cmp
lret
fsubr
inc
mov
ss
push
sbb
outsl
out
cmpsl
inc
and
sub
mov
mov
movsb
dec
cwtl
push
fstps
mov
notl
add
jg
sub
xchg
rol
push
sub
fcompl
mov
pop
inc
into
stos
pop
jns
push
cld
jl
inc
or
jle
push
xchg
pop
mov
fsub
cltd
dec
fidivs
pop
leave
xor
adc
mov
icebp
mov
xor
cmp
mov
cmp
ja,pn
xor
enter
xor
gs
out
mov
pop
addr16
pop
inc
scas
add
xor
pop
dec
in
push
push
dec
data16
or
mov
xor
adc
fcoml
jbe
xchg
mov
push
mov
dec
dec
stc
adc
nop
lods
sbb
and
dec
pushf
dec
inc
dec
mulb
dec
popf
mov
enter
fcomip
gs
cmc
add
out
ds
mov
cli
test
add
add
add
xchg
adc
shrl
cmpsb
mov
imul
jne
cltd
jl
pop
inc
lahf
pop
iret
sti
inc
aad
push
jbe
or
mov
loope
sahf
pavgw
out
js
jmp
jecxz
mov
arpl
lods
jmp
lds
mov
pop
scas
ret
dec
pop
cmp
cmp
and
stc
popf
sub
flds
jo
jno
pop
sub
lret
dec
jecxz
sbb
sub
xor
aas
add
stos
aaa
fimuls
pop
xor
pop
fnstcw
notb
add
jmp
fldt
lcall
test
inc
xchg
pop
popf
and
es
add
mov
jp
xchg
fs
xchg
mov
aaa
or
enter
sub
xor
sub
les
mov
adc
pop
sbb
aas
mov
out
xchg
mov
sub
jnp
push
mov
std
xchg
outsb
pop
cmp
pop
outsb
xchg
into
xchg
adc
roll
sub
jne
nop
or
xchg
lcall
int
xchg
mov
jp
xchg
testb
inc
mov
sub
sub
jle
das
inc
repz
push
movsb
jecxz
pop
adc
mov
cld
or
or
inc
cltd
lret
shl
adc
les
pop
stos
loopne
test
pop
ret
pop
arpl
stos
pushf
sub
fidivrl
push
inc
mov
icebp
mov
stc
aaa
inc
jl
sub
int
sub
mov
fs
cmp
inc
nop
outsl
data16
popa
sub
mov
sbb
lds
sbb
fwait
inc
data16
dec
lock
js
lea
xor
or
call
pop
xchg
adc
out
or
push
xor
mov
cmp
cmpsl
xor
sbb
pop
push
and
adc
les
inc
mov
test
fsubr
fildll
sbbb
hlt
cmp
mov
mov
imul
daa
imull
mov
shrb
jns
negb
jl
mov
dec
repz
inc
adc
sub
loopne
pop
or
pushf
shlb
adc
adc
insb
xor
aas
scas
pushf
movsb
les
cmp
decb
push
push
sub
add
lret
inc
fbld
mov
aas
cmpsb
push
lahf
rclb
mov
inc
fsin
shl
js
jbe
loop
jecxz
aas
cmp
sbb
pop
cmp
stc
scas
xchg
add
shll
or
aam
nop
adc
fstps
xor
jb
push
jecxz
sub
push
xor
adc
pop
or
cmc
adc
ret
fdivrl
xor
sub
inc
jge
inc
jmp
jmp
aad
cwtl
outsl
fnstcw
dec
test
sub
jg
or
pop
iret
frstor
push
adc
cmpsb
adc
aaa
sub
lahf
cmc
xchg
dec
xor
sahf
cli
rcrl
add
in
into
mov
iret
lahf
out
mov
dec
clc
and
aam
aas
adc
inc
pop
push
sbb
nop
mov
mov
lret
sbb
mov
scas
je
jnp
push
jp
out
dec
pushf
in
adc
mov
inc
int
inc
cwtl
aas
lcall
aam
ret
bound
ljmp
gs
je
mov
cs
or
daa
push
imul
clc
es
push
add
jo
pop
mov
mov
aam
and
and
into
adc
lret
push
lods
je
outsb
dec
push
flds
add
fcmovnbe
mov
xor
push
mov
or
ror
movsl
dec
mov
ror
dec
jo
pop
lock
aas
inc
cmpsl
cltd
pop
lods
sub
cwtl
movsb
inc
jne
inc
rorb
stc
jl
add
in
lea
adc
dec
add
outsb
and
add
push
movsl
int
call
sbb
scas
in
jle
int3
insb
aas
xor
and
dec
push
cmpsb
dec
mov
dec
push
in
jns
call
jns
sbbl
clc
sbb
cmp
push
loopne
xorb
adc
jecxz
mov
cmp
pop
cld
scas
pop
or
ror
xchg
pop
aad
test
xchg
jge
movsl
dec
int
sub
jns
in
cwtl
inc
aad
clc
cwtl
test
test
jb
mov
ljmp
outsl
negb
js
enter
sbb
mov
push
pop
negb
fisubl
lret
mov
adc
jp
jge
stc
dec
jae
push
mov
mov
stos
cld
jb
xor
cmp
fdivr
test
adc
shrb
sub
xor
sbb
xchg
xchg
adc
sbb
subb
mov
out
daa
sbb
jo
push
das
jo
sbb
jp
cmpsl
and
repz
mov
out
daa
add
and
jecxz
in
pop
mov
mov
pop
int
push
xor
cmp
inc
and
pop
xor
push
rol
imul
sahf
lock
addr16
test
jb
pop
nop
in
inc
fnstenv
or
sahf
mov
pop
jge
fisttps
test
mov
sub
xchg
push
ret
or
xchg
shl
out
repz
addb
dec
push
mov
push
push
xchg
cld
push
push
aad
pop
or
iret
sti
inc
cmpsl
sub
popf
and
and
pop
jbe
mov
and
pop
pushf
int
movsb
ljmp
mov
stos
xchg
dec
push
rcll
int3
mov
push
jecxz
stc
cwtl
movsl
push
dec
loopne
push
call
push
or
shlb
jl
add
ds
and
shrl
mov
fcompl
cmp
mov
cmp
xor
outsb
sbb
arpl
mov
sbb
adc
js
bound
loopne
dec
cmp
inc
sub
stc
or
push
sbb
and
icebp
fwait
mulb
pop
xchg
mov
push
movsb
xchg
inc
mov
out
js
xchg
xor
push
add
out
mov
pop
adc
cmpsl
adc
pop
dec
out
jle
push
pop
xchg
dec
lods
push
fcomip
cmp
adc
je
or
pop
into
and
sbb
inc
fisubrl
pop
lahf
cwtl
out
insl
fsubl
add
arpl
mov
repz
ret
mov
decl
pop
lahf
test
inc
push
sub
add
ljmp
scas
lahf
lods
imulb
dec
and
sub
push
mov
in
mov
insl
movsl
mov
pop
pusha
jge
and
movsb
xchg
lahf
frstor
sub
cmp
jae
cs
int
add
jmp
push
lock
push
cmp
mov
push
pop
mov
dec
dec
xchg
mov
and
sqrtps
inc
ret
and
in
je
push
lret
adc
jle
sbb
add
xchg
test
pop
loope
push
cmp
ja
or
cwtl
out
xorl
scas
add
add
pop
ret
sub
sbbb
add
mov
pusha
adc
inc
inc
adc
jmp
nop
xchg
inc
mov
push
mov
push
sti
pop
xor
mov
mov
pushf
xorb
bound
adc
mov
dec
mov
xor
mov
cwtl
pushf
arpl
sbb
add
in
push
out
or
clc
push
or
call
mov
inc
jns
test
subb
sar
or
cli
push
lds
das
push
jae
mov
popf
jo
insb
sahf
sbb
orb
push
stos
pop
inc
pop
sub
xor
nop
inc
mov
stc
outsl
jne
repz
inc
adc
in
xchg
dec
jbe
or
mov
jle
push
jns
call
stos
pop
mov
push
add
scas
sbb
cmpsb
mov
dec
jne
mov
fs
push
lods
or
popf
and
pop
cmc
adcb
test
outsl
adc
mov
test
xor
mov
cwtl
jne
outsl
push
xchg
cmp
ret
dec
xlat
adc
rcrl
nop
sub
mov
test
pop
jl
xchg
outsl
movsl
movsb
add
sbb
push
out
decb
dec
add
pop
aas
neg
add
sub
xchg
dec
jl
dec
mov
insl
mov
je
sarl
add
pop
jmp
and
incb
pop
xchg
call
jno
js
inc
sub
shl
lds
mov
sbb
test
shrl
jno
mov
movsb
adc
push
fwait
and
pop
insb
jl
out
dec
mov
out
roll
ja
jns
push
xor
loope
clc
scas
push
and
inc
jo
and
loopne
insb
cmp
rcll
jne
and
mov
stos
loopne
and
adc
punpckhbw
insb
add
rcr
daa
adc
push
sahf
flds
jp
cmp
xor
push
lods
mov
pop
out
push
rorl
sub
out
pop
sub
addr16
xchg
int
add
mov
ss
icebp
adc
xchg
sub
test
popf
les
fiaddl
mov
mov
sahf
mov
dec
mov
mov
ret
push
test
cli
into
int
test
out
pushf
in
test
imul
xor
cmp
icebp
add
and
jmp
out
mov
cmp
cmp
fs
fwait
loope
pop
ljmp
jecxz
arpl
adc
and
xor
push
push
popf
sub
pop
fcoms
or
fdiv
pop
cmp
and
sbb
add
ret
inc
insb
loopne
cmc
int
xlat
dec
push
xor
and
jp
jecxz
mov
xchg
dec
mov
dec
sbb
ficomps
cmp
jl
pop
adc
das
imul
add
inc
xorb
test
in
es
inc
inc
or
jns
in
cmp
push
testl
or
movsl
pop
nop
adc
pop
xchg
rorl
ss
pop
std
jo
mov
icebp
jle
fs
jne
mov
hlt
ret
jg
scas
pop
or
lea
add
xor
scas
dec
or
lahf
cmp
dec
mov
movsl
cmp
cli
or
sbb
inc
cmp
rclb
es
movsl
sbb
stc
mov
xor
test
sbb
sbb
repnz
sub
add
cmpsb
mov
pop
jbe
icebp
xchg
popa
dec
inc
and
push
rorb
push
clc
xor
rolb
lahf
loop
jns
mov
jnp
push
jne
cld
pop
fimuls
lock
insb
xchg
pop
push
mov
mov
out
pop
shlb
and
xchg
outsl
dec
pop
or
subb
mov
jmp
pusha
mov
pop
leave
leave
sub
adc
dec
sbb
add
sub
jae
xchg
mov
mov
cmp
sub
outsl
mov
fsts
add
adc
or
adc
decl
add
out
dec
or
stos
inc
test
bound
mov
stos
jp
or
jl
outsb
out
popf
push
ljmp
pop
rcr
in
push
imul
push
or
lahf
repnz
sbb
sub
int
gs
cli
int
sarl
bound
imul
mov
adc
out
mov
mov
sbb
jg
int
jne
adc
dec
and
out
shl
fsubrl
out
sbb
xchg
mov
data16
mov
lds
pop
mov
out
aam
rol
adc
push
call
xor
and
enter
das
or
and
inc
jne
or
arpl
dec
jg
inc
cltd
mov
stc
stc
and
add
jo
nop
inc
jne
cmpsl
test
xchg
cmp
lds
cmp
push
or
pop
mov
add
jb
insl
cli
inc
lock
push
test
std
jns
add
mov
repz
outsb
cmp
sar
sbb
inc
pop
xchg
or
std
loopne
and
pop
in
test
out
dec
mov
mov
sbb
mov
fsubr
fidivrl
pop
jecxz
xchg
scas
mov
pop
popa
pop
sub
sti
inc
push
ret
or
dec
xor
mov
addr16
in
fdivrs
and
jo
or
xchg
sub
add
ficoms
faddl
push
pop
testl
push
enter
pop
inc
xchg
in
shr
and
lcall
push
mov
mov
sub
or
arpl
out
xchg
jge
ret
popf
das
mov
hlt
scas
out
lahf
std
jmp
movsb
testb
cwtl
add
add
mov
test
popf
dec
sbb
bnd
js
mov
out
nop
pop
push
repnz
xor
divb
jge
idivb
inc
inc
popf
mov
mov
movsb
into
push
iret
adc
and
sti
test
pushf
dec
mov
dec
inc
iret
inc
std
subb
jns
fbld
xor
bnd
sub
ljmp
subl
fcomip
sbb
das
mov
dec
popa
dec
hlt
iret
adc
mov
and
jmp
shr
lcall
xchg
mov
cmp
xor
xor
jmp
pop
cmp
arpl
test
pop
mov
sbb
push
add
das
addr16
inc
sub
add
shlb
push
or
loopne
sbb
mov
fisttpl
nop
pop
idiv
test
insl
add
xchg
pop
add
xchg
scas
xor
out
iret
out
xor
cmpb
test
out
cltd
mov
mov
cmp
iret
or
test
pop
pushf
fildll
pop
gs
out
dec
xor
push
cmovl
jmp
pop
and
mov
jmp
in
shrl
and
dec
pop
mov
inc
out
movsl
or
xchg
aad
pop
dec
iret
cmc
pusha
out
inc
or
dec
sti
and
int
cmp
jl
mov
insb
call
rolb
icebp
xchg
xchg
rcrl
mulb
lret
test
scas
mov
pop
cmp
mov
add
pop
mov
inc
popl
and
nop
jg
push
rdpmc
mov
sbb
adc
xor
fucomip
cmp
mov
xchg
and
insb
movsl
push
les
cmp
mov
adc
adc
push
xchg
dec
jp
dec
inc
ror
cmpsb
dec
fs
inc
add
or
idivb
negl
rorl
fcomi
icebp
clc
lret
test
xor
adc
lret
repnz
xchg
dec
mov
inc
sbb
sub
jmp
lret
pop
fbld
jl
mov
push
sub
cmc
or
push
in
pop
adc
filds
sbb
add
aas
add
int
js
cli
jne
cmp
sbb
pop
pop
sub
dec
push
push
mov
testl
push
popa
gs
cld
and
fdivrs
mov
push
push
dec
xlat
pop
jb
ret
cmp
jno
xchg
loope
lcall
popf
sub
ret
sahf
xchg
jae
shrl
and
dec
xchg
jp,pn
test
lea
push
xchg
sub
sbb
out
adc
push
sub
mov
mov
dec
stos
dec
jecxz
sub
mov
xlat
mov
outsl
xor
add
push
lea
out
mov
push
jne
and
test
dec
pop
es
notl
scas
stc
repz
fildl
test
pop
push
les
push
in
repnz
xchg
push
fistpl
int
in
push
fstpt
sahf
add
adc
shr
lea
jno
out
push
sub
stc
xchg
pop
sbb
lahf
aad
add
ret
jp
sbb
icebp
add
gs
or
dec
stos
nop
jno
outsb
addb
ror
jne
pop
and
push
fadd
inc
cmp
or
jb
out
pop
fnstsw
jle
jl
adcb
imul
out
addr16
sbb
lcall
call
pusha
lds
addl
outsl
pop
and
stos
pop
mov
lock
sub
pop
xor
insb
bound
sub
mov
mov
shlb
and
mov
ljmp
sarb
cmc
xlat
add
fildl
test
repz
cld
lret
cmp
repz
shl
mov
and
repnz
mov
movsb
or
mov
in
jp
lds
mov
inc
jge
pop
pop
inc
inc
ljmp
or
loopne
and
ljmp
ror
int3
add
in
pop
pop
bound
lret
mov
sbb
mov
or
fimuls
inc
pop
cs
idivb
enter
push
test
ds
adc
test
popf
and
inc
fcomps
pushf
cld
inc
and
adc
inc
les
and
test
push
or
sub
and
stc
cs
aas
pop
mov
negb
and
sub
sbb
repz
xor
xor
test
xor
add
movsb
sbb
rolb
adc
jecxz
test
roll
adc
and
test
das
cmp
and
push
dec
sub
aam
cltd
adc
cld
out
add
andl
and
inc
lcall
mov
cli
and
cltd
pop
jge
cld
add
sti
leave
pop
jl
sbb
mov
xchg
inc
mov
or
mov
dec
in
pop
popf
and
and
mov
stos
pop
andb
aaa
and
cmp
aas
or
add
xchg
jbe
ds
pop
or
xchg
adc
jecxz
and
xor
dec
sarl
ret
pop
and
jbe
and
out
mov
cld
fisttpll
mov
outsb
and
popa
and
mov
and
mov
test
mov
mov
jge
push
or
movsb
stc
pop
xchg
test
mov
out
add
movsb
dec
sbb
dec
and
sub
xchg
cmc
pushf
sbb
enter
loopne
sbb
and
stc
in
repnz
and
scas
scas
and
pushf
aad
sbb
cmpsl
and
cmpsb
sbb
sbb
ds
cmpsl
pusha
and
xchg
sub
mov
jne
pushf
adc
ret
pop
or
push
and
push
mov
mov
in
push
lahf
push
and
inc
lock
or
test
or
dec
mov
lahf
push
mov
fcompl
mov
pop
jge
pusha
mov
pop
jmp
aam
inc
jb
in
jle
inc
les
inc
enter
test
push
sub
push
sarb
sub
sbb
into
and
sahf
jge
lret
mov
inc
mov
add
sub
add
cmp
jns
lods
aas
lea
mov
fucom
fdivp
pop
pushf
adc
std
or
dec
mov
jl
or
insb
lret
fwait
pop
add
test
mov
std
dec
faddl
inc
and
les
add
les
xor
das
and
cmp
sahf
sub
or
lea
jl
into
xchg
cmpsb
cmc
add
rolb
sbb
xor
xor
pop
mov
int3
mov
and
fisubrl
push
popa
jl
sbb
and
out
or
lahf
outsb
pushl
cwtl
fnstenv
or
into
imul
xchg
sub
mov
push
pushf
dec
cmp
and
popa
cmpsl
and
bound
and
int3
in
je
mov
sub
mov
cwtl
sub
jns
fmulp
bound
and
inc
test
and
mov
add
lods
in
jae
fisttpl
lahf
pop
gs
scas
jno
cmp
mov
inc
add
sbb
arpl
popf
xchg
xchg
pop
adc
shlb
jo
and
adc
insb
sub
jne
pusha
leave
lods
sub
rcll
lahf
or
inc
pop
stc
ljmp
bound
xor
jnp
push
sub
gs
cmp
pop
push
cld
adc
sbb
inc
jne
cmp
cmpsl
arpl
sbb
push
aad
dec
and
stos
dec
mov
xchg
movsl
out
in
sub
inc
daa
or
jns
daa
je
or
sub
lahf
pop
testl
aad
rclb
jbe
pop
sub
push
jb
imul
call
popa
fs
or
fistl
icebp
cwtl
jo
int
dec
cmp
testl
dec
mov
inc
roll
in
test
jo
inc
rdtsc
sbb
fdivrp
inc
mov
pop
dec
add
pop
js
pop
adc
sarb
mov
add
fisubrs
pop
inc
jb
je
push
rclb
jmp
and
pop
iret
xor
out
push
dec
test
int
cmpsb
incl
mov
lcall
mov
mov
mull
int3
mov
jae
aad
nop
scas
jg
lahf
ds
es
pop
push
xchg
dec
xor
repnz
xor
mov
stos
addr16
push
in
int
mov
ret
pop
pop
enter
and
vmovups
mov
mov
movsl
pop
in
int
sub
shld
icebp
or
fucomi
inc
icebp
bound
mov
rcl
sbb
fldenv
add
and
insb
int
popa
iret
xchg
mov
test
je
out
jecxz
jp
lock
outsl
out
lock
xchg
or
arpl
mov
leave
repz
std
add
movsl
sub
inc
cmp
out
outsb
xchg
lods
aaa
popl
shlb
cld
cmp
lahf
fiadds
sub
mov
pop
pop
push
push
add
leave
or
jl
jecxz
or
push
stos
add
cld
cmp
aaa
sahf
or
fidivrl
clc
cs
sbb
cmpsb
mov
xor
stos
pusha
in
sbb
sub
int
mov
hlt
mov
ficompl
cld
jb
pop
cmp
pop
cmp
sub
inc
inc
xlat
insl
sub
adc
add
jg
xchg
cld
in
jl
lcall
shrb
xchg
pop
cmc
into
popa
fbstp
push
add
sub
push
mov
inc
mov
push
xor
fwait
divps
cwtl
inc
mov
jmp
sahf
je
mov
xchg
pop
and
lea
pop
inc
insb
mov
stos
scas
clc
ja
inc
pop
sbb
lahf
dec
shrl
pop
adc
stos
pop
popa
mov
cld
cmp
test
aas
adc
outsb
add
and
or
add
sub
cmc
jne
cmp
or
sbb
add
cmpsl
pop
mov
rol
pop
test
mov
call
and
pop
lahf
xor
movsl
xlat
cmp
aaa
inc
sub
add
jne
in
mov
add
xchg
mov
dec
jecxz
mov
mov
divb
out
dec
adc
out
mulb
loopne
imul
adc
js
subb
adc
ficoml
scas
xchg
mov
cmc
movsl
or
jge
inc
sub
jb
cmp
in
cld
pop
inc
adc
or
sbb
pop
jmp
fidivrs
int
imul
movsl
sub
pop
and
pop
cmp
inc
jl
xchg
in
pop
cli
add
negb
mov
pop
cmp
out
cmp
push
jo
pop
call
add
push
mov
mov
jg
dec
pop
push
xchg
sarb
push
sbb
dec
and
mov
cli
or
xchg
into
call
and
je
leave
lods
or
nop
sub
cli
shlb
arpl
sarl
lea
and
push
add
xchg
lahf
fwait
data16
int3
cmp
mov
mov
sub
pop
test
sbb
xor
xor
mov
pushf
aam
push
lret
into
mov
push
jne
call
inc
push
lods
scas
loop
pop
cli
roll
sub
aas
cmpb
jecxz
lea
cmp
add
add
js
pop
mov
and
adc
lahf
insb
lods
sbbb
and
sbb
inc
out
aam
mov
and
sbb
ret
stos
mov
push
pop
sub
sarl
mov
add
push
outsl
dec
pop
data16
inc
push
dec
cmp
add
or
hlt
mov
dec
filds
dec
xchg
fdivs
mov
adc
fcomi
shlb
in
mov
in
je
outsl
add
ljmp
shrl
pop
into
push
mov
sbb
sub
and
cld
cmp
dec
dec
jp
mov
jne
jne
int3
mov
js
jbe
xor
cmc
sahf
and
mov
fiadds
jbe
addr16
test
fldcw
fdiv
sarl
add
fsubrl
movsl
sub
bound
jecxz
push
lods
call
mov
jns
push
mulb
rol
test
dec
out
movsb
dec
sub
ja
ds
and
call
pop
mov
push
pop
xor
mov
mov
dec
test
add
add
lcall
adc
xchg
and
adc
lahf
insl
xchg
mov
test
sub
jbe
call
xchg
lock
shll
ret
shrb
sub
mov
icebp
lahf
in
jmp
xor
aas
jmp
aad
shlb
outsl
jg
xor
sbb
stc
push
mov
inc
xchg
aas
scas
daa
dec
inc
sub
int
xlat
cmp
push
and
xchg
aad
xorl
or
popf
cltd
or
cs
nop
scas
jbe
daa
inc
arpl
cli
arpl
loopne
testl
adc
fs
stos
mov
and
and
es
lods
gs
mov
mov
shrb
xchg
xor
out
ljmp
cmp
jno
dec
out
cli
lret
repnz
int3
scas
subl
pusha
xor
fisubrs
xor
stc
push
pop
dec
ss
rorl
lahf
aam
jmp
inc
fadds
pop
inc
imul
dec
inc
jbe
int3
dec
sbb
xchg
in
call
mov
add
dec
cmp
popf
push
movsb
aaa
xchg
sub
inc
nop
cmp
sarl
push
repz
data16
repnz
nop
xchg
dec
cmpsb
nop
sti
cmpsl
push
imul
hlt
pusha
daa
shlb
mov
inc
xchg
movsb
adc
divb
pop
movsl
inc
out
repz
imul
sahf
jne
jns
or
xchg
add
cmp
lock
mov
int
test
jl
adc
add
pop
in
bound
shlb
testb
inc
into
push
fildl
xchg
popa
pop
jo
jg
dec
lods
sbb
test
pop
neg
jp
sbb
dec
fistpll
out
loope
in
cmp
or
in
adc
add
add
pop
popf
add
jl
mov
sub
or
push
lods
outsl
sbbl
rcrl
popa
pop
fsubl
cld
cmp
and
jo
lahf
jmp
dec
or
push
or
mov
movsl
jmp
enter
jmp
test
mov
nop
xchg
jl
sub
mov
pushf
add
mov
sbbl
sbb
cmpsb
jb
je
andl
fiaddl
aas
cmc
jmp
enter
sbb
call
mov
mov
sub
icebp
jecxz,pt
test
add
cmp
sti
bswap
jb
loopne
enter
push
popf
push
mov
push
pop
sub
adc
push
dec
jp
popf
jne
mov
pushf
mov
inc
and
nop
out
jb
or
ljmp
mov
fsub
or
iret
jecxz
pop
push
sub
aam
lds
pop
mov
pop
dec
xor
add
aas
adc
push
test
popf
das
cmp
lret
and
fs
add
popf
aaa
bound
insb
subb
sbb
cmp
bound
push
pop
jmp
inc
mov
pop
sub
mov
std
sub
cmpsb
sub
pslld
xorb
lahf
xchg
pop
sbb
pop
push
sub
dec
cli
and
lock
cld
rcrl
mov
inc
mulb
jl
dec
jmp
push
push
jno
inc
lahf
addr16
and
pop
fnsave
test
or
and
jecxz
pop
push
int
mov
mov
adc
sti
test
dec
bound
push
out
inc
test
or
jge
and
adc
sub
or
mov
fwait
push
sti
cltd
lods
mov
jns
iret
aaa
or
or
cs
mov
sbb
xchg
lahf
push
loopne
and
jl
aaa
fcmovne
push
jmp
loopne
lods
and
jae
int
popf
adc
pop
or
pop
jmp
cwtl
jp
mov
imul
push
inc
jo
sub
jbe
roll
into
std
xchg
lock
xorl
cmp
push
call
mov
int3
popf
popaw
sbbb
jle
sbb
jmp
fldl
pop
cs
add
jle
gs
xor
add
jl
pop
sub
jle
movsb
add
les
ror
adcb
sub
int
cmp
push
cmp
cli
adc
popf
push
jle
mov
jno
pop
and
test
iret
movsl
cmpb
cmpsb
ds
jbe
je
cmp
add
gs
insb
push
pop
and
sub
push
loop
inc
lret
jmp
mov
cmpsl
lahf
int
pop
add
adc
mov
or
in
ret
jbe
jns
movl
lahf
fstl
lahf
inc
out
cli
add
pushf
loop
sbb
xor
out
lods
jmp
mov
loop
mov
fs
push
scas
mov
arpl
mov
or
addr16
xlat
adc
xchg
out
inc
ret
xchg
nop
mov
lea
movsl
sub
push
dec
or
and
add
dec
cli
dec
jle
in
pop
lock
cmp
xchg
movsl
mov
dec
or
sbb
fisubs
sub
fisttpll
cli
test
daa
lock
xor
jg
jnp
jb
div
sti
dec
xor
int3
gs
jno
repz
jns
mov
pop
inc
jecxz
cmp
mov
nop
out
dec
test
xchg
popa
shll
cmp
adc
xor
dec
inc
cli
xchg
lods
xchg
mov
incl
sub
and
movsl
nop
fsts
loop
dec
push
or
loope
out
pop
std
cmp
cmc
and
adc
addr16
and
dec
or
sbb
mov
popf
jg
test
mov
pop
pop
inc
popf
nop
bound
jno
es
cmp
or
pop
sub
sbb
xor
rcrb
std
lea
int
shrb
or
das
dec
mov
and
push
add
dec
lret
xor
int3
dec
shll
leave
sbb
pop
dec
jle
testb
negb
dec
push
mov
or
jns
adc
xlat
jns
adc
dec
outsb
stos
dec
mov
out
out
fcmove
outsl
mov
sub
xlat
adc
add
push
call
and
dec
psrld
adc
sub
or
add
mull
pop
int
xchg
or
push
in
inc
iret
and
mov
jne
mov
mov
adc
xchg
cmp
or
or
dec
cmpb
dec
lods
sbb
push
iret
mov
pop
std
xchg
xor
inc
lret
int
fcoms
cmp
lods
lods
imul
cwtl
aas
mov
movzwl
mov
add
lahf
test
int
adc
shld
xchg
in
mov
test
lcall
cmp
fisubrs
pusha
dec
jo
test
xor
push
int3
xor
xor
je
into
aas
adcl
mov
push
jo
in
jg
push
pop
sbb
les
notl
loopne
test
cld
push
mov
sarb
loopne
inc
adc
dec
repnz
test
mov
lret
xchg
dec
xchg
xlat
sbb
int3
sarl
add
ret
imul
call
sar
jne
mov
das
shrl
jle
int
mov
mov
mov
adc
xor
pop
aas
or
out
add
mov
fisubrs
mov
rcrb
pop
inc
xor
cld
insb
stos
jnp
mov
mov
lods
ret
push
stos
sbb
out
mov
or
mov
int
ss
xchg
mov
inc
test
loope
add
mov
in
and
test
mov
cwtl
dec
mov
imul
sti
fisttpl
stos
xchg
mov
push
insb
lds
xchg
loopne
inc
sub
adc
ja
and
inc
sbb
lock
icebp
inc
idiv
fdivr
loopne
pop
cmp
shll
flds
mov
inc
push
fisttpll
xchg
sbb
leave
mov
pop
dec
mov
into
rcll
and
movsb
insb
int
xor
movb
mov
cmp
add
cmpl
pop
mov
lret
rcl
fwait
push
jno
push
adc
rcll
shlb
outsl
in
int
lods
jns
jle
cltd
sub
xor
fisubrl
push
test
add
je
es
jmp
je
mov
out
xchg
dec
dec
cmp
dec
pop
jae
cmpsl
sub
add
jmp
fadd
or
nop
or
pop
mov
sbb
pop
cs
pusha
movsl
sbb
inc
inc
and
andl
pop
popa
nop
dec
mov
inc
lcall
out
pop
ror
mov
pop
xchg
out
lock
pop
pop
xlat
pop
pop
xchg
jle
stc
fsubl
cmp
sahf
bnd
cwtl
jge
popf
ljmp
adcb
xor
in
or
push
pop
pop
dec
mov
xchg
aaa
sbb
push
ret
jl
or
lcall
push
pop
popa
arpl
sarb
cmp
rclb
jns
notb
dec
lahf
or
popf
popa
test
arpl
sbb
lcall
pop
sub
test
adc
pusha
imul
rcrl
mov
nop
mov
adc
mov
ds
push
cltd
lcall
add
mov
adc
push
adc
or
push
push
dec
mov
sbb
or
mov
cmp
je
cmp
add
push
xchg
ja
sbb
inc
and
shll
nop
jne
and
pop
out
adc
pop
push
lahf
xchg
push
cmpsl
xchg
dec
inc
jmp
in
ds
sub
lret
pushf
lahf
push
inc
scas
lea
aad
inc
ffreep
adcb
stc
or
ljmp
cmc
jp
cmp
pop
sub
jmp
imul
out
push
pop
pop
jo
add
mov
mov
add
jo
or
xor
adc
cld
sahf
lahf
les
cli
rolb
sub
mov
xchg
stc
fnstsw
and
xchg
mov
sbb
xchg
mov
rcl
int3
jp
ds
sti
loop
sbb
inc
pop
movsb
int3
push
int
mov
aad
popa
in
adc
and
or
adc
cld
pop
pop
cmp
mov
cmp
mov
mov
out
lea
jg
outsl
pop
popa
imul
adc
sbb
pop
mov
sub
lahf
cwtl
enter
in
enter
cs
pusha
push
push
adc
mov
test
add
mov
mov
add
out
sub
adcb
test
push
lods
hlt
jb
ljmp
inc
ret
lahf
jecxz
sbb
ret
push
in
sbb
nop
and
cmc
repnz
test
lret
push
cwtl
test
jecxz
test
sub
or
dec
out
jle
mov
sbb
out
cmpsb
fcmovu
inc
jl
lahf
jmp
push
scas
pop
adc
sahf
cmp
sti
inc
and
mov
gs
dec
test
stos
lahf
jno
imul
jmp
and
movsb
mov
inc
cli
inc
sarb
xchg
loop
jl
push
clc
out
push
in
and
and
or
leave
sbb
push
outsb
scas
aad
rol
push
inc
adc
or
rorb
out
jo
dec
push
jle
mov
and
ljmp
pop
jmp
movsl
stc
xchg
subl
mov
enter
inc
cwtl
test
xchg
dec
insb
dec
cmpsb
and
jb
xor
notl
cmp
cmpsl
sub
test
sub
sbb
mov
jb
out
in
or
jl
add
shlb
lods
cld
or
sbb
adc
testl
ror
sbb
mov
insl
inc
jb
lods
cmp
outsl
adc
test
into
movsl
hlt
test
cmpsl
inc
xchg
cmp
enter
lea
es
mov
scas
ror
add
divl
mov
roll
bound
nop
pop
push
js
fisubs
push
pop
inc
test
sbb
outsb
or
inc
dec
push
pop
sub
ret
shr
fs
dec
adc
push
test
mov
sub
add
fists
mov
or
add
and
mov
adc
mov
sbb
rcll
in
loop
jnp
jecxz
test
mov
xor
jmp
adc
cmp
xor
lea
iret
sbb
xchg
cmpsl
xor
pop
xlat
push
dec
mov
mov
in
int
jp
shlb
add
pop
insl
xchg
xlat
aas
mov
pushf
adc
add
sub
add
cmp
adc
nop
shrl
pop
xchg
push
lock
js
adc
adc
insb
mov
cmp
cmp
inc
scas
push
lret
call
in
in
add
sbb
cwtl
std
adcl
xor
pop
jne
pop
mov
or
pushf
in
inc
cmp
mov
xchg
pop
adc
sbb
pop
pop
inc
outsl
icebp
dec
and
in
dec
adc
and
inc
dec
pop
xchg
sub
push
gs
xchg
dec
adc
repnz
test
jns
cmp
repz
push
cmp
inc
xchg
dec
xchg
jns
lahf
jle
nop
icebp
sbb
scas
daa
xor
mov
sbb
adcb
mov
fstl
les
dec
stc
mov
mov
mov
jl
inc
nop
sub
bound
sbb
mov
and
jge
imulb
push
mov
push
aas
cmp
mov
push
sub
in
fists
lahf
in
sbb
rclb
xor
popa
das
and
cmp
dec
sub
inc
mov
pop
lds
cs
cmpsl
in
adc
mov
subb
sbb
or
cmp
sbbb
mov
orb
mov
bound
movsb
loop
mov
insl
sub
test
inc
jl
mov
rolb
inc
fdiv
out
and
outsl
gs
mov
push
cwtl
rorl
jl
test
adc
or
and
movsb
mov
bound
adc
mov
push
push
in
inc
test
and
or
aam
inc
pop
mov
push
add
arpl
icebp
roll
jne
rorl
dec
js
and
lods
fldenv
loop
cmp
and
mov
and
mov
lds
pusha
repnz
cld
scas
push
cld
iret
mov
xlat
mov
repnz
jp
inc
in
loope
mov
negb
call
int
das
out
cmp
inc
pop
sbb
sub
pop
push
push
pop
mov
outsb
ds
mov
xor
and
jecxz
mov
mov
cld
shl
add
cmc
inc
xor
into
std
jl
add
decb
mov
sti
or
sbb
sti
into
stc
scas
mov
out
fstpt
decb
or
movsl
pop
push
or
fsubs
inc
mov
pop
adc
mov
mov
ja
cmp
filds
inc
mov
hlt
xor
repz
sbb
mov
ret
dec
test
mov
aaa
dec
inc
cmpsb
iret
xchg
adc
cmp
fnstsw
jne
sub
insb
out
push
popf
ror
xor
loop
adc
popa
jns
sar
adc
sbb
icebp
or
lcall
add
sub
aas
inc
inc
ret
stc
lret
jbe
std
dec
push
sbb
repz
daa
insb
dec
jl
dec
daa
dec
mov
popf
movups
dec
out
decb
push
loope
add
sbbb
add
xlat
add
xor
xchg
sub
addb
sub
pop
lods
and
jl
mov
mov
mov
sti
test
jno
add
popa
cmp
les
pop
dec
xor
dec
dec
dec
and
sub
inc
and
shlb
fildll
mov
sub
xchg
mov
pop
dec
lahf
cmpsl
bound
sahf
jns
inc
sbbl
push
jno
add
or
xchg
jne
sub
mov
dec
push
sbbb
nop
adc
inc
shrb
es
push
sub
xchg
add
sbb
call
jbe
jl
rcr
adc
pop
mov
sahf
mov
in
popl
insl
inc
call
mov
cmc
sbb
mov
xchg
out
push
xchg
loop
test
ja
mov
notl
int3
daa
dec
mov
imul
mov
lea
xlat
xchg
push
and
test
mov
cmp
xor
testl
inc
or
pop
sub
or
icebp
in
les
dec
mull
in
and
cmp
sti
xchg
arpl
ret
pushf
sub
or
lea
mov
mov
sub
loopne
lods
pusha
add
cltd
scas
adc
push
nop
aas
cli
and
insl
push
xchg
int
decl
stos
or
push
sbb
sub
lret
jb
push
mov
push
pop
mov
mov
bound
cmp
adc
sub
push
xchg
adc
insl
ror
sub
sub
cmp
inc
jl
or
mov
fucom
cli
out
inc
mov
stos
popf
fildll
std
xchg
adcb
movsb
das
out
nop
popf
fs
mov
loopne
push
popf
repnz
push
jno
std
sub
stos
fsub
xchg
std
adc
sub
jb
clc
cs
sbb
in
mov
data16
push
mov
aas
mov
jnp
pop
jno
cmp
push
outsl
xchg
dec
add
fwait
add
cmc
andb
aas
xchg
mov
lods
jne
dec
sub
xchg
lds
jb
scas
or
mov
mul
jo
xchg
xor
lea
or
cmp
or
cs
inc
adc
rcrb
fbstp
inc
dec
mov
movsl
lea
loopne
mulb
outsb
or
push
outsb
pop
xchg
push
sbb
aam
loopne
push
pop
and
xchg
mov
and
stos
mov
cmpsl
xor
icebp
add
cmp
in
xor
add
push
ds
mov
in
fbld
fidivs
push
pop
and
xor
add
int
mov
sub
cmp
test
cmp
add
cmpsb
pushw
sbb
stc
out
xlat
add
scas
iret
and
iret
movsl
jb
pushf
leave
cwtl
setge
incb
pop
out
jge
sbb
sbb
sbb
or
rorb
mov
mov
mov
push
pop
mov
push
mov
dec
cld
scas
push
cmp
test
leave
je
mov
push
rcrb
popa
push
insb
test
fisttps
jg
mov
and
mulps
fisubrs
add
iret
movsb
cmp
xchg
push
addr16
cmp
out
in
int
loopne
sub
cmc
add
add
push
pop
movsb
fisubrs
aas
lods
fdivl
mov
sub
inc
subb
mov
in
dec
stc
xchg
sub
pop
cli
inc
inc
cmpsb
insl
push
arpl
iret
nop
sti
fsub
es
nop
out
add
inc
cmp
or
mov
jb
sub
cmp
int
xor
or
or
iret
sub
or
and
pusha
inc
or
sbb
out
jl
cld
insb
pop
les
inc
movsb
sbb
mov
pop
sbb
stc
sub
xor
cmp
jo
push
and
cmp
push
scas
mov
mov
sub
adc
adc
stos
adc
and
sti
mov
and
cld
lods
into
sbb
dec
xor
cmpsb
xorb
in
enter
sbb
ficoms
orb
imul
push
orb
mov
pop
js
and
jl
add
scas
jae
lahf
insl
sub
pop
mov
cli
js
sub
and
iret
repz
push
lahf
add
ds
in
jg
rolb
nop
pop
pop
les
push
sbb
xchg
or
lock
mov
or
sbb
lods
nop
add
rcrb
push
push
pushf
les
lahf
fidivrl
xchg
loopne
sub
cmp
pop
mov
cmpsl
lcall
lahf
inc
sahf
test
popa
in
mov
add
repnz
and
addl
push
mov
ljmp
cmc
sub
push
into
or
sbb
dec
shrb
orl
lock
jo
fisttps
mov
scas
pop
lahf
xchg
adcb
out
push
out
pushf
mov
rorb
popl
enter
popf
dec
cwtl
cmpsl
je
inc
sub
push
xchg
test
scas
push
pop
and
push
pop
dec
jmp
fildll
cmp
add
jbe
jl
xchg
pop
jle
mov
lahf
and
xor
mov
sub
cmp
iret
push
mov
or
push
fbld
pop
jle
cmp
mov
inc
scas
rcr
or
push
cltd
movsl
dec
push
loope
adc
push
loope
aad
or
je
pop
out
push
arpl
nop
pop
pusha
push
dec
sub
mov
das
cmp
int
ret
push
aad
fsts
sbb
movsb
mov
lea
push
mov
movsl
sahf
dec
leave
outsl
mov
jle
cltd
pop
mov
mov
sbb
add
pop
xor
sbb
arpl
test
aas
jp
cmp
aaa
lahf
add
adc
and
jns
movb
outsl
add
jo
ss
cmp
pop
fdivrl
out
jns
inc
jae
jle
or
cmp
rol
movsl
pop
lahf
out
pop
out
jbe
mov
push
cmpsl
les
sbb
push
pop
adc
jne
imulb
lods
addl
mov
or
push
insl
scas
lods
fsubrp
and
push
mov
outsl
cs
jbe
shl
outsl
clc
les
icebp
dec
stc
push
cli
lahf
dec
jle
adc
and
rclb
pop
pop
or
les
add
xor
int3
push
push
out
jno
or
cld
std
popf
sbb
jb
lock
cmovl
inc
pop
js
mov
pushf
addr16
jne
add
add
pop
enter
dec
inc
in
jp
sbb
sbb
pop
and
jge
sbb
jnp
mov
pop
cmp
cwtl
stos
xchg
add
ss
iret
decb
insb
jae
rcl
mov
pop
loopne
or
push
or
ds
or
or
test
add
cld
sbb
into
addr16
jl
push
fidivs
insb
sbb
pop
jno
dec
lock
insl
pop
adc
sub
or
lds
sub
aas
cli
inc
stos
jb
xchg
adcb
mov
sub
adc
int
sbb
cmp
add
dec
pop
jl
cmp
xor
lahf
push
xor
jb
sub
aaa
stos
in
fs
xor
lds
xchg
cmc
sub
inc
repz
rol
add
push
fcomps
pop
int
pop
push
cmp
mov
cmp
add
xorb
jb
xor
testb
adc
int
push
cwtl
stos
out
lods
loopne
cmc
sbb
xchg
mov
les
icebp
rcll
sahf
add
inc
sub
cmp
pop
rcl
gs
into
cli
cli
movntps
call
or
pop
xchg
adc
adc
adc
arpl
mov
pop
shlb
ljmp
xorl
stos
int3
leave
int3
outsb
jle
dec
xchg
outsb
mov
dec
jl
inc
or
sub
jle
sbbl
inc
movsb
pop
cwtl
pop
add
sub
mov
fdivrl
xchg
push
call
icebp
cmp
int
or
dec
flds
adc
mov
test
sub
out
jo
add
adc
and
int
or
out
dec
inc
enter
push
inc
popf
and
inc
mov
stos
ljmp
rorl
mov
dec
in
sbb
divl
mov
dec
sub
pop
orb
pop
fnstsw
add
call
mov
dec
dec
xor
sbb
movsb
imul
outsb
push
mov
fldt
mov
loop
ret
lods
cmp
inc
and
dec
add
lods
push
dec
push
orl
adc
sbb
jg
pop
ss
cltd
shll
or
cmp
xchg
pushf
dec
mov
and
lods
addr16
add
xor
or
push
cmp
and
sbb
test
ds
sbb
aam
adc
push
fcom
lock
cld
adc
lret
sub
pop
sub
push
push
xchg
sub
test
pop
scas
push
xchg
fwait
sub
or
sbb
mov
inc
je
inc
dec
in
and
cmovbe
neg
lahf
mov
mov
mov
mov
and
dec
arpl
jle
notb
sbb
mov
pop
das
outsb
or
inc
inc
xchg
mov
dec
mov
dec
out
imul
mov
aad
popa
sbb
mov
out
lcall
jo
mov
insb
inc
jmp
add
or
mov
cs
sti
jl
jl
sahf
stc
pop
cli
outsb
cmp
andl
or
clc
and
push
jl
sbb
sbb
jmp
sub
test
inc
xor
cmp
repnz
jne
add
add
sub
dec
xor
lahf
in
scas
ds
mov
psubq
cmpsb
iret
imul
std
and
lahf
adc
cmp
in
int
xor
mov
and
lcall
pop
mov
pop
dec
xchg
and
icebp
xchg
outsl
rcrb
in
dec
pop
xor
movsl
xchg
mov
xor
cmp
sub
sub
add
cmp
fidivl
push
int
or
adc
cmpsb
dec
mov
in
add
test
shlb
jp
pusha
jno
insl
cld
cltd
shrl
mov
ror
push
movsl
and
pop
sub
pop
add
jl
pop
inc
pop
nop
sub
mov
imul
stos
sub
mov
sub
pop
lods
cmp
pop
jecxz
pop
push
out
fimull
add
clc
test
cmp
xchg
ret
mov
cwtl
inc
jbe
and
sbb
cwtl
cmp
pop
or
shrl
jb
jmp
or
nop
jle
aad
cltd
mov
subl
fildll
inc
ss
stos
daa
clc
sub
inc
jno
xchg
push
sbb
or
sub
xchg
jmp
incb
test
and
imul
ljmp
pop
lahf
idivl
pop
or
out
or
inc
in
int
popa
mov
mov
inc
pxor
adc
mov
push
fdivrs
dec
inc
and
adc
mov
xchg
in
nop
push
dec
sti
fdivr
filds
insb
fwait
mov
xchg
pop
jmp
je
arpl
jle
pop
sti
test
ret
movsl
sahf
xor
insb
out
out
sti
xor
dec
scas
or
sti
insb
dec
out
jns
jg
rcr
xor
sbb
sbb
mov
sub
movq
dec
aaa
dec
inc
addr16
jae
sbb
cwtl
in
and
je
hlt
xor
xchg
int
dec
sbb
daa
jbe
xchg
pop
dec
fiadds
cmp
fisubrs
push
inc
leave
fwait
enter
push
jo
adc
mov
scas
lea
and
sbb
cmp
mov
inc
scas
lcall
xchg
push
xor
xor
jno
mov
and
jp
fwait
in
xor
add
data16
xor
out
unpckhps
push
jmp
cld
inc
jmp
push
add
jo
fldenv
popa
jmp
mov
into
mov
repnz
insb
mov
pop
pop
and
lahf
sahf
mov
das
push
xchg
sbb
pop
sbb
jmp
sahf
nop
mov
mov
adc
mov
out
xchg
push
pop
mov
mov
std
cmp
pop
xor
outsb
xchg
dec
mov
push
pop
xchg
popa
jns
mov
test
inc
or
call
sbb
xor
pop
mov
or
xorl
movsl
test
jl
pushf
mov
pop
cld
rcl
adc
test
jl
and
sbb
xor
lret
xchg
idiv
das
jo
cld
jp
inc
shlb
lds
inc
sbb
repnz
jne
jno
js
repz
cli
adc
add
pop
or
dec
jg
mov
and
rolb
or
roll
jmp
mov
popa
les
mov
iret
jno
fiaddl
jg
mov
and
movsl
sahf
jge
stos
les
adc
dec
int
movsl
mov
out
lds
jno
jae
cld
pop
sarb
and
push
sub
mov
and
popf
lahf
adc
cld
sub
add
cmp
mov
cmp
dec
sub
aaa
add
pop
or
inc
dec
loopne
mov
cmp
jl
push
sbb
and
sub
sbb
aad
sbb
sbb
imul
xor
cmp
std
dec
and
sub
test
iret
icebp
pop
push
inc
dec
call
add
inc
add
mov
stos
mov
jl
and
imul
mov
scas
sbb
pop
cmc
jnp
mov
jno
push
pop
scas
fsubrp
pop
mov
pop
mov
xor
xchg
jl
cli
subb
mov
es
adc
aas
cmp
xchg
mov
xchg
or
xor
dec
icebp
dec
cld
pop
sub
jmp
call
in
sub
pop
imul
sti
or
sbb
sbb
sbb
mov
mov
dec
stc
repnz
mov
in
push
mov
mov
or
dec
pop
sahf
testl
rcrb
cmp
pop
sbb
std
in
mov
aam
clc
adc
movsl
pop
addr16
inc
popf
inc
jg
inc
aam
sbb
inc
jp
and
lods
scas
shrb
cs
call
pop
ror
xor
and
jbe
mov
xor
out
sub
lea
fimuls
mov
push
outsl
icebp
add
xor
push
rol
or
push
mov
mov
or
imul
adc
das
sbb
in
hlt
sti
stc
int3
pop
stos
pop
push
cmpl
scas
push
sbb
pop
lea
xor
sbb
xchg
xorb
in
mov
adc
shl
add
jg
fmuls
jl
lret
dec
jmp
mov
ficomps
int3
mov
inc
rorb
cltd
and
int
adcl
sub
push
push
jmp
pop
or
mov
pop
es
lahf
into
aam
jno
sti
dec
rclb
sbb
cmc
repz
dec
or
adc
dec
add
sbb
mov
cmp
cld
pushf
stos
lahf
pop
jge
fstpt
cmp
mov
sahf
jle
in
aad
imul
jnp
pop
fiaddl
insb
fsubl
clc
sub
cmp
dec
fdivrl
xor
js
xchg
sub
loopne
in
cmp
cmc
sahf
faddp
add
cmp
xchg
inc
sbb
sub
mov
mov
or
inc
mov
jo
dec
mov
mov
inc
shrl
or
sbb
insb
popf
mov
lods
push
dec
cmp
xchg
xchg
sahf
les
fs
icebp
insb
push
pop
sbb
cmp
xlat
lock
xor
cmp
push
mov
scas
fmuls
xor
stc
out
push
fistps
sti
mov
pop
xor
in
js
pop
mov
cwtl
xor
ret
outsb
jge
sbb
in
adc
pop
push
cmp
xor
es
imul
adc
pop
sub
sbb
add
cmp
mov
jbe
icebp
inc
pop
cmp
mull
cmp
shrb
add
loope
inc
mov
cwtl
mov
add
insb
add
sbb
or
add
pushf
jne
popa
mov
nopl
and
insb
and
sub
sarl
and
sub
sub
lods
iret
push
pop
lods
dec
std
push
adc
push
mov
loop
rorb
jo
dec
add
orb
out
or
dec
sub
pop
sub
push
cmpb
movsl
jp
add
fisttps
jae
inc
roll
adc
jo
cmp
scas
js
add
cmp
jne
jl
jge
push
les
pop
movsl
jg
fbstp
inc
fmul
cmpsb
push
pop
ljmp
fisubl
pop
scas
ljmp
xchg
sub
arpl
out
push
inc
sahf
cmp
fildll
es
roll
sub
loopne
xor
sbb
jp
dec
xchg
xor
mov
xchg
mov
aas
fs
push
pop
xor
aad
lods
jp
pop
test
xchg
rolb
jl
xchg
adc
adc
and
and
ret
xor
je
cmp
lcall
inc
push
mov
mov
popf
fidivs
push
sbb
xchg
ret
in
addb
jo
movsb
insl
add
ja
iret
adc
lods
cmc
add
xchg
pusha
test
hlt
mov
mov
cmovne
xor
bound
cmp
cli
lock
sahf
xchg
movsl
fisubl
jb
out
or
addr16
loopne
xchg
push
push
lret
stos
arpl
sbbl
mov
ds
mov
fldl
jne
cmp
popf
add
add
and
sti
sbb
dec
cmp
mov
cmp
sub
loope
ja
rcr
daa
ja
jle
call
lea
lahf
fisttpll
adc
test
jl
cmpsb
in
pop
lds
jle
pop
xlat
xor
push
sbb
dec
lret
cmpsb
push
jl
or
int3
in
daa
push
out
or
cmp
clc
push
popf
shll
xchg
and
pop
icebp
fnsave
cmp
and
call
inc
cmp
sub
add
sbb
cmc
or
lret
adc
lret
mov
mov
sbb
mov
push
ljmp
orl
stos
mov
push
mov
fs
xchg
sbb
mov
cld
cmpsb
cwtl
adc
popf
adc
rcrl
jbe
xchg
ret
xor
stos
push
push
in
ret
pop
sbb
mov
ret
ja
int
jnp
add
test
leave
pop
hlt
dec
rcrb
sub
dec
out
mov
lods
jb
jne
pop
popf
cwtl
shll
mov
ss
sub
stc
dec
push
out
fistl
sub
and
dec
cwtl
sti
jmp
push
int3
sbb
jo
leave
push
sbb
cs
jbe
xor
rclb
xchg
sub
push
mov
jge
pop
dec
cli
out
jecxz
imul
mov
in
and
jno
shr
stc
lahf
fisttpll
cmc
cwtl
fsts
stc
adc
loopne
jo
stc
mov
pminub
push
xor
mov
aad
mov
mov
inc
push
andb
ret
ds
or
jge
negb
sbb
pusha
ja
add
xor
adc
outsb
iret
adc
add
bound
mov
icebp
sub
bound
icebp
jg
ficoml
pop
jbe
jns
mov
mov
mov
mov
sahf
add
sbb
fs
inc
mov
mov
cmpsl
push
cltd
mov
std
xor
loopne
in
push
mov
mov
repnz
add
cmpsl
pop
mov
cmp
push
dec
xor
shll
ss
ret
add
pop
test
push
fs
pop
lahf
cwtl
movsb
enter
bound
push
mov
and
inc
ror
pop
test
mov
cs
inc
or
insb
sti
mov
dec
stos
test
push
in
adc
add
test
gs
in
mov
out
and
sti
das
and
pop
das
or
es
xlat
fs
push
or
xor
xchg
jbe
fs
dec
leave
jno
dec
mov
jmp
imulb
faddl
xchg
dec
and
pop
mov
mov
fisubrs
movsl
pushf
add
fiaddl
cmpsl
xchg
and
imul
in
mov
out
repnz
inc
testb
jae
hlt
test
lahf
mov
arpl
mov
pop
insb
inc
mov
shrl
jne
and
clc
fisubrs
mov
and
jg
test
sbb
lea
sub
jns
cmp
gs
cmp
sbb
dec
insb
dec
test
test
pop
dec
pop
sbb
push
popf
je
fsubl
pop
push
daa
pop
mov
loopne
jb
lahf
adc
fsubrp
inc
add
dec
jl
or
icebp
lds
jnp
and
aaa
push
add
es
mov
jecxz
dec
push
add
jle
add
cmp
xchg
inc
inc
sub
inc
subb
into
xchg
or
inc
cmp
and
mov
pop
stos
pop
fwait
out
and
stos
and
arpl
sbb
imul
lahf
test
sahf
mov
shll
out
xchg
lcall
sti
mov
cmp
add
cmp
sarb
or
push
out
pop
push
pop
fs
hlt
xor
sbb
stc
jge
call
inc
xor
jno
xlat
or
or
add
in
dec
ficomps
dec
and
cld
adc
cwtl
lahf
cmpsl
mov
popa
cmc
mov
pop
ja
mov
jl
xchg
mov
fisttpll
mov
in
xchg
jns
lcall
pop
push
adc
sbb
pop
or
pop
jecxz
je
push
scas
cmp
inc
and
pushf
cmp
seta
out
sbb
cmc
add
inc
jnp
cltd
push
das
pop
sub
push
fisubrl
push
mov
sti
and
adc
inc
or
add
inc
lcall
scas
xchg
dec
or
jg
test
cmp
les
sub
ret
pop
and
cltd
dec
cmpsl
scas
in
jne
cmp
ss
repz
dec
rcll
pusha
push
in
fdivr
mov
cwtl
mov
lcall
sub
adc
rcl
adc
pop
jg
pop
in
push
add
jne
jns
sub
into
testb
push
pop
icebp
leave
add
jns
mov
icebp
add
dec
pop
add
sub
loop
stc
pop
lahf
ja
scas
xchg
add
xchg
push
and
int
sbb
dec
adc
daa
jns
mov
xor
js
lcall
sti
xchg
cltd
xor
cwtl
out
sbbb
mov
cmp
jge
sahf
fchs
inc
sbb
out
mov
inc
nop
push
iret
divl
or
in
adc
pushf
movsl
lea
xchg
mov
int
subl
rcl
repnz
jne
ljmp
nop
int
loope
pop
push
scas
xchg
jp
cli
push
push
push
fucomi
outsl
loop
fwait
xlat
jmp
sti
xchg
cltd
repnz
test
jp
mov
je
lahf
insl
dec
fisubrl
adc
sarb
cmpsb
sbbb
pop
inc
inc
push
xchg
outsb
push
and
notl
adc
add
mov
je
push
sub
sahf
or
cmpsb
push
jl
jb
fildll
popa
cmovl
nop
adc
std
repnz
std
das
inc
in
stos
and
jne
pop
dec
fists
fdivs
lret
out
inc
mov
and
das
jno
lcall
mov
out
push
repnz
jnp
cmc
shrl
jg
pop
add
int
dec
xor
push
mov
mov
push
lahf
popa
xchg
sub
jne
mov
adc
sbbb
insl
or
aad
add
repz
sbb
cmc
jns
mov
lods
or
call
and
push
push
test
dec
enter
popf
adc
les
cmp
xchg
rclb
jae
mov
hlt
shrl
sbb
icebp
push
cli
arpl
out
clc
int
fbld
ret
inc
add
mov
cmp
in
mov
popf
and
adc
and
cld
scas
repz
xchg
dec
in
push
or
add
mov
cmp
add
add
aad
rol
sub
repz
data16
divl
inc
aam
lahf
les
sub
mov
mov
cltd
jae
in
adc
test
shll
aas
jns
in
and
jne
mov
in
rorl
sub
movsl
insl
sti
pushf
les
test
mov
dec
and
add
push
rolb
xlat
sbb
or
jl
stc
pop
cmp
rol
push
fs
lret
jl
pop
test
push
dec
or
add
and
sub
dec
dec
cmp
mov
pop
sbb
sub
sbb
mov
and
ret
repz
ljmp
aam
xchg
add
add
inc
push
cmpsb
sub
xor
jno
push
jo
sti
cmpsl
loop
outsl
addb
ficompl
and
mov
scas
mov
mov
int3
and
fwait
add
xchg
mov
mov
sbb
xor
cmp
add
pop
fcomps
test
jb
jns
push
out
lret
lahf
sub
dec
shll
mov
mov
mov
inc
jns
pop
or
jno
push
enter
inc
jmp
adc
xor
adc
or
ret
movsl
or
inc
fbld
mov
lret
add
jl
mov
cmp
pop
xor
or
xor
sub
push
pushf
and
cmp
or
std
and
repz
jbe
mov
inc
add
and
mov
sbb
xchg
imul
mov
imul
or
movsb
jb
push
ss
fwait
bnd
fimull
sbb
pop
inc
xchg
mov
dec
inc
jbe
pop
inc
and
sbbl
daa
add
jge
inc
push
lods
mov
adc
jge
sbb
jmp
movsl
scas
sub
movsb
out
rcrl
test
mov
lods
imul
fs
pop
xlat
adc
les
xchg
out
movsb
jp,pn
iret
loopne
push
aad
popf
rolb
jp
dec
dec
or
pop
in
cmp
adc
push
and
mov
xlat
testl
inc
arpl
call
cmp
xchg
cmpsl
ficoml
clc
jl
popa
cmp
pushf
adc
std
pop
sub
and
mov
adc
mov
shll
ds
push
stos
outsb
sbb
push
xor
call
jl
lret
jb
popa
fcoms
mov
mov
mov
lods
push
repz
sub
ja
cmp
mov
inc
stos
xlat
leave
adc
push
cwtl
filds
pop
xor
cmp
dec
jae
pop
pushw
mov
addr16
outsb
inc
adc
cmpsl
xchg
pop
data16
repz
sub
pop
lahf
imul
adc
or
mov
jl
popa
and
std
pop
mov
mov
and
cli
mov
dec
or
cltd
mov
xchg
dec
out
and
arpl
jno
xchg
inc
arpl
xor
lock
lahf
int
inc
add
dec
jno
test
push
and
out
rorb
cmc
xchg
xchg
lea
dec
dec
or
daa
sar
test
lods
sbb
sub
mulb
das
pop
cmp
mov
xor
or
ljmp
push
and
repnz
cmp
mov
mov
pop
ds
xor
mov
dec
out
jno
jo
lock
add
sbb
inc
nop
mov
xchg
stos
movsb
in
sub
aad
imul
cmp
and
es
push
sbb
mov
repz
test
pop
xchg
test
jmp
outsl
pushf
in
push
adc
rorb
stos
inc
mov
loop
std
hlt
xor
mov
nop
je
insl
ret
shrl
das
add
sbb
pop
push
roll
adc
dec
fwait
inc
inc
lret
add
add
xor
and
push
and
bound
dec
mov
dec
popf
pushf
jnp
adc
repnz
pop
xor
in
test
dec
sbb
imul
mov
or
negl
adc
iret
lahf
and
or
ret
cmc
jno
cmpsb
stc
adc
and
ret
or
xor
xor
mov
and
add
movups
je
sbb
xor
cmp
push
pop
xlat
push
sub
fbld
sti
push
stc
mov
pop
sbbb
andb
dec
cmpb
push
adc
mov
xchg
adc
pop
cwtl
jns
icebp
fmul
jl
scas
mov
or
cmp
sub
addr16
xor
daa
aas
inc
lahf
jp
sbb
arpl
sub
adc
jbe
sbb
hlt
jp
shrl
mov
outsb
sbb
cmp
mov
shlb
add
pop
inc
mulb
cmp
fimuls
inc
add
mov
jle
add
aad
and
fs
mov
dec
icebp
popa
out
mov
or
inc
pop
cltd
pushf
popf
xor
push
rcll
mov
testl
mov
pop
jne
lods
pushf
or
jne
xchg
adc
cli
loop
pop
shll
mov
data16
jl
ljmp
jl
pushf
notl
pop
arpl
sbb
cmp
xorb
inc
faddp
xchg
cli
add
insb
fistpl
xlat
cli
sub
std
cmp
jle
pop
mov
lds
and
fstpl
sbb
enter
jmp
adc
cmp
cmc
leave
mov
xchg
or
push
shlb
mov
adc
mov
cmp
movsl
int3
rcrl
inc
roll
and
shll
mov
scas
xchg
movsl
cwtl
dec
nop
out
mov
cmp
lods
jecxz
lods
inc
xchg
scas
dec
mov
push
fs
insl
loop
enter
iret
jne
pushf
jle
push
sbb
data16
dec
or
sbb
pop
ljmp
pop
and
adc
orb
pop
test
add
cmp
sbb
andb
dec
add
mov
pop
sub
insb
push
ljmp
cmp
adc
jns
lods
add
or
and
jae
xor
lahf
popf
repz
jno
mov
stc
fcmovbe
mov
add
and
inc
out
push
pop
xchg
call
sbb
jg
pop
test
popf
adc
es
insl
inc
pop
out
sarb
inc
ss
out
mov
cmp
dec
rcl
adc
out
gs
jne
and
mov
test
fmull
dec
inc
les
gs
add
xor
gs
test
add
cmp
dec
sub
jo
pop
and
dec
mov
sub
stos
outsl
cltd
shrb
lods
out
dec
aad
and
jmp
cmp
sbb
and
xchg
jge
push
sbb
roll
cmp
and
cmpsl
adc
loope
push
test
lret
mov
repnz
add
push
test
rol
jle
cmc
fsubl
push
and
or
es
push
inc
adc
pusha
pushf
push
loop
jge
cmp
inc
dec
sub
add
popf
mov
sbb
cmp
sbb
dec
inc
popf
xchg
push
push
data16
xchg
mov
mov
xchg
mov
stc
adc
lea
scas
or
call
mov
insb
sub
xchg
or
and
push
fbld
and
pop
ret
xchg
mov
push
adcl
push
mov
jns
stos
sbb
push
dec
aam
push
push
sbb
cwtl
fcomip
jmp
lea
ficompl
jmp
sbb
dec
lods
imul
inc
ret
inc
sbb
sbb
sbb
pop
cmc
xchg
insb
cmp
cmpsl
sub
cwtl
roll
fimull
pop
ja
inc
aad
xchg
pextrw
xor
xchg
imul
sbb
dec
cld
cmpsb
insl
dec
out
gs
xor
and
sbb
inc
sub
jle
fcmovb
dec
nop
stc
xchg
jecxz
in
push
xchg
into
dec
pop
lahf
push
stc
sbb
jge
cmp
divl
inc
pop
cmp
pop
outsb
jno
xlat
out
sbb
notb
mov
dec
popf
mov
inc
or
inc
add
jle
inc
movl
jmp
sub
push
je
xor
bound
or
adc
sbbb
xchg
pop
movsl
mov
dec
rclb
adc
mov
cmp
fiadds
sbb
sbb
pushf
aas
sub
movsl
add
ret
lea
push
cli
and
and
lds
add
sub
adc
inc
mov
or
cmc
lds
scas
aad
xchg
sbb
aam
roll
test
push
ffreep
jnp
and
scas
pop
imul
cwtl
lahf
js
add
sub
scas
sbb
sti
rolb
ja
or
popf
out
inc
mov
sub
addr16
shll
roll
and
cmc
aas
repnz
rcl
repz
cmp
lcall
xlat
cli
xlat
dec
dec
and
and
xor
jb
add
stc
and
sti
pusha
shll
cmp
cmp
adc
cmpsb
lds
in
push
out
cltd
push
cmp
ds
arpl
bsf
pop
mov
add
je
aas
or
jl
mov
adc
or
jp
add
movsb
pcmpgtb
and
sbb
inc
jl
jp
nop
adc
lea
fisttps
sbb
sub
fldl
push
jnp
pusha
scas
mov
loope
add
cli
test
mov
sbb
xchg
pop
scas
ljmp
fimuls
push
push
pop
loope
adc
leave
test
mov
mov
add
out
mov
jne
push
das
fs
jge
pop
inc
mov
adc
push
fs
adc
adc
sarb
nop
sub
cmp
sub
adc
es
adc
mov
cmpsl
popf
orb
pop
jns
adc
jmp
icebp
ret
push
nop
mov
inc
inc
scas
sarb
mov
test
in
movsb
inc
xor
mov
pminsw
fdivrs
or
ficompl
cld
iret
fistps
cmp
mov
sbb
ret
jnp
sbb
test
mulb
pop
stos
sub
or
cmc
je
xchg
xchg
repz
cmp
repnz
sbb
icebp
push
dec
lds
rorl
mov
negl
or
rorl
add
inc
cmp
call
inc
mov
nop
mov
aam
outsl
hlt
xor
test
daa
add
inc
shrl
sub
push
sub
xchg
adc
testl
jmp
ss
cld
or
dec
mov
cmp
and
mov
mov
ja
pop
mov
jns
adc
mov
orb
shlb
mov
int3
pop
movsl
inc
cmc
cwtl
pop
dec
mov
mov
test
mov
fs
push
xchg
xor
out
add
or
test
push
inc
jo
or
and
xor
xor
ja
inc
lahf
xor
popl
cmc
sub
mov
scas
sbb
sbb
push
mov
dec
xor
adc
cmc
daa
or
div
sub
inc
inc
pop
xor
pop
xor
or
pop
sbb
stc
pop
inc
push
push
pop
jle
outsl
and
ja
pop
mov
mov
push
fdivr
or
out
sbb
xor
sbb
inc
xor
inc
cld
xor
mov
repz
lea
mov
or
inc
in
cli
adc
sbb
in
add
out
cmp
cmc
imulb
push
xor
fstl
push
jge
cmc
lock
dec
ficompl
cltd
ja
int3
cli
push
setle
push
pop
loope
imul
sbb
fisubrl
iret
add
cli
xchg
fsts
mov
test
add
jno
jnp
or
aas
xor
jnp
push
mov
clc
scas
fdivl
or
out
adc
out
and
or
daa
subl
cmpsl
and
ss
and
movsl
stos
pop
insb
push
cmpsb
push
push
xlat
dec
push
and
pop
pop
or
adc
daa
sub
add
push
or
cmp
pop
sub
xlat
dec
sbb
mov
pop
lea
mov
dec
add
leave
mov
inc
pusha
or
aam
xchg
sbb
add
sub
call
jl
pushf
ljmp
scas
inc
ret
dec
repz
or
cmp
in
lahf
mov
lea
mov
jns
xor
rclb
bound
jge
clc
sbb
fcomps
ss
inc
cltd
dec
sti
fdivrl
cmp
lahf
cmp
or
insb
int3
cli
mov
fcompl
test
dec
dec
out
sub
sti
add
jno
add
sub
pop
add
int
movsb
nop
je
and
pop
push
or
dec
add
int
push
xor
and
mov
pop
push
dec
mov
jl
dec
sahf
cmp
xlat
decb
mov
pushf
push
inc
push
mov
sbb
pop
stos
jmp
fldl
xchg
mov
cwtl
sub
fsts
and
shll
shlb
and
jl
fildl
out
roll
popf
pop
jo
out
ret
and
std
sbbl
mov
cs
push
inc
dec
or
add
sub
es
in
dec
sub
insb
sahf
push
sbb
pop
orb
shrl
fs
roll
cld
pop
pop
movsb
sahf
mov
pop
repnz
int3
pop
stos
and
iret
lea
pop
mov
cmp
and
lret
adc
popa
jp
mov
mov
inc
scas
add
movsl
add
push
stos
pop
test
add
shrl
cmp
xchg
inc
and
sub
std
jle
mov
imul
aad
mov
sub
xchg
mov
shr
sub
es
xchg
std
mov
xchg
or
dec
push
stc
jne
imul
pop
sub
pop
push
aas
movsl
out
mov
mov
xor
xchg
sbb
add
jg
lock
mov
clc
cld
cmp
mov
dec
sbb
je
xor
mov
xor
cli
fidivrs
sub
gs
or
jp
inc
xor
jae
adc
or
inc
cmp
jnp
adc
mov
or
pop
mov
orb
lahf
inc
rcr
jecxz
mov
int3
cld
and
stos
jae
incl
ror
loop
pusha
push
mov
add
mov
std
xchg
push
enter
sbb
sub
out
mov
arpl
push
mov
cmpsl
xlat
mov
push
loopne
sub
inc
jno
inc
dec
call
lea
mov
inc
mov
sub
push
sahf
rcll
outsb
jno
mov
out
lcall
jns
push
mov
stos
xchg
stc
sub
gs
push
adc
movsb
je
addl
inc
sbb
mov
clc
inc
pop
jo
in
pusha
lret
push
adc
stos
hlt
movsl
js
int
inc
push
out
adc
and
jnp
or
js
xchg
popa
cmp
inc
testl
daa
arpl
pop
lcall
clc
xor
push
jnp
pushf
mov
iret
ret
mov
ret
dec
mov
pop
add
add
jae
int
sbb
aam
jns
sub
movsb
xchg
cwtl
icebp
hlt
daa
cmpsb
xor
pop
xor
and
ss
jmp
add
data16
cmp
pop
sbb
mov
out
push
lahf
subb
xchg
mov
and
lahf
js
loope
in
cmp
mov
lea
outsl
jo
insl
cwtl
test
repz
ja
and
cmp
mov
out
ljmp
cmp
and
cmp
and
pop
in
xor
fs
mov
pop
inc
cmp
jnp
sahf
lea
sub
popa
adc
movsb
ljmp
shlb
push
in
mov
shll
dec
sbb
test
dec
add
es
pand
and
les
loope
popf
arpl
addb
nop
movsl
cmp
adc
sahf
test
sbb
and
jge
add
enter
out
into
xor
sub
pushf
or
sub
jmp
sbb
fs
js
pop
sub
mov
movsb
aam
and
cmp
xchg
ss
or
add
rcll
out
fnstcw
jne
xor
adc
cmp
mov
xor
inc
sbb
cmp
cmp
xor
ret
push
fwait
push
dec
in
jg
pcmpgtw
ret
xor
movsl
cmovo
sbb
sub
or
jg
rol
insb
cmp
cmpsb
mov
into
lahf
xchg
jge
xlat
or
or
jecxz
fdivrs
mov
pop
lret
lods
inc
outsl
add
call
xchg
mov
loope
pextrw
sub
mov
mov
aas
or
dec
xlat
subl
stos
push
pop
dec
sub
dec
aas
or
leave
mov
inc
xor
in
push
lret
sarl
outsb
cmp
dec
pop
mov
sahf
dec
cmp
lahf
cld
imul
and
and
movsl
mov
adc
sbb
or
popf
out
movsl
pushf
xor
repz
enter
test
lods
std
out
adc
pop
jecxz
mov
or
pushf
push
sub
pop
push
je
sub
into
outsb
shlb
mov
adc
insb
cmp
fwait
popf
nop
test
mov
mov
xchg
loope
pop
pop
cmpsl
mov
gs
jmp
xchg
out
stos
stc
popa
pop
xchg
dec
push
insl
jl
ljmp
cmpsl
pop
outsb
sub
jne
push
and
lret
and
push
jno
enter
pop
shrl
mov
mov
mov
jne
xchg
push
jmp
xchg
add
jo
lcall
inc
loope
cld
fs
ds
loopne
popl
or
repz
push
mov
jle
test
inc
lods
pop
add
add
mov
dec
jnp
xchg
adc
mov
mov
cli
popf
push
adc
pop
out
test
int
push
xchg
pop
cmpsb
inc
push
sbb
adc
inc
cmp
je
or
cli
out
xor
sbb
xor
and
push
push
mov
adc
push
decb
and
mov
inc
scas
out
jae
scas
lahf
std
dec
xchg
or
push
pop
mov
and
cmp
or
mov
fadd
fs
adc
or
sub
aas
jecxz
push
test
fimull
push
or
add
push
dec
scas
xor
xchg
mov
jb
stc
in
pusha
ja
ds
les
lods
dec
mov
adc
iret
lahf
lods
and
ss
mov
cmp
dec
pop
test
adc
int
fildl
cmc
test
cmp
sbb
je
mov
dec
out
push
xchg
pop
or
fsubrl
cltd
data16
outsl
inc
stc
vmovss
dec
sbb
pop
add
subb
sbb
sti
xor
nop
cmp
dec
int3
mov
xchg
ucomiss
or
shll
aam
test
mov
test
int
fwait
push
mov
jl
fisubs
push
stos
scas
adc
xor
cmp
sub
and
and
scas
repz
dec
push
inc
fiadds
pop
into
inc
lods
or
cmp
pusha
out
push
inc
sub
adc
push
dec
mov
test
mov
repz
add
push
lahf
jl
ds
adc
push
add
and
xor
cli
sbb
jno,pt
nop
push
int3
mov
scas
and
sbb
aad
bound
in
les
and
insl
push
jg
sbb
pop
sub
aaa
xlat
lcall
data16
jo
jbe
push
or
mov
jle
add
sub
ret
xrelease
mov
inc
cli
stos
dec
ret
jbe
jb
jecxz
add
dec
add
dec
aam
jle
daa
ss
sub
fbld
and
push
insl
stos
inc
mov
popa
insb
adc
and
cmp
sub
mov
cmc
mov
and
js
pop
pop
rorb
rolb
fisubl
xchg
push
jle
cmp
mov
dec
push
je
in
mov
sub
dec
roll
je
sub
dec
adc
lods
mov
xchg
lods
xor
es
insb
add
mov
shlb
mov
or
int
pop
movsb
dec
fidivrl
mov
fcomps
into
std
or
push
or
lret
fisttps
inc
ficoms
push
scas
mov
sbb
pop
arpl
movsl
cmp
sub
imul
xchg
adc
lahf
adc
push
add
inc
ljmp
lcall
movsl
aam
dec
push
outsb
xchg
and
into
push
dec
cmp
xchg
mov
pop
fcompl
je
mov
ss
xchg
call
mov
shll
dec
jno
add
aam
aad
imul
cmp
lahf
sbbb
sub
xchg
push
inc
stos
jns
mov
out
sub
xor
test
or
out
mov
inc
cltd
sub
mov
push
push
sub
inc
mov
sub
pusha
cmp
insb
mov
fdiv
lret
sub
and
push
xor
dec
cmp
outsl
repnz
pop
pop
stos
fisttps
push
dec
mov
adc
jmp
xchg
adc
les
add
rcrl
inc
or
je
lods
mov
rorl
cltd
jno
shll
ja
fsin
arpl
and
cmp
push
and
cmp
insb
and
scas
jl
lahf
mov
pop
ds
cld
xor
sub
cs
xor
cwtl
inc
outsl
ret
stos
jle
nop
sub
xchg
mov
add
jmp
jg
stos
sub
xor
mov
jne
popf
lret
inc
stos
jnp
inc
or
sub
outsl
sbb
fisubs
jg
or
subl
jg
lea
repnz
inc
loop
xchg
scas
jne
out
xchg
adc
mov
data16
mov
dec
pop
mov
inc
jmp
sub
clc
xchg
int
xor
jne
jg
fs
push
das
jns
xchg
mov
sub
add
fdivs
xchg
out
adc
pop
mov
push
shrb
xor
add
shlb
arpl
iret
push
cmp
or
cmp
xor
inc
aam
jle
or
aas
jns
adc
xor
fists
and
mov
lock
pop
push
inc
cld
and
rol
push
or
sbb
dec
jle
adc
pop
test
add
or
sbb
movb
movsb
test
ret
test
mov
mov
sbb
jns
or
sti
add
sub
stos
fwait
mov
pop
dec
mov
movsl
subb
ljmp
aad
stos
mov
lods
bound
add
add
pop
dec
jle
xor
test
lds
vminpd
fmull
add
jl
or
cli
roll
call
out
sub
or
int3
mov
pop
push
jl
dec
loop
cmp
sub
xchg
jge
sub
push
cwtl
sub
das
push
dec
inc
mov
sbb
sub
sahf
xor
sub
xchg
push
rcrl
mov
out
or
insb
jl
clc
ret
inc
out
mov
in
sti
add
insl
jne
adc
jle
js
inc
sarl
and
and
push
addb
sahf
cmp
jl
popa
iret
popf
mov
adc
movsb
push
xor
out
call
arpl
inc
xor
call
ljmp
int
pop
sub
and
mov
mov
sub
push
iret
insb
pop
dec
lds
pop
mov
iret
mov
xlat
adc
xchg
icebp
xor
push
adc
mov
cwtl
iret
mov
ficoml
frstor
cld
sbb
push
mov
push
popa
push
cmp
cmp
cmp
ljmp
shll
dec
or
cmc
push
adc
cmc
jmp
out
add
sbb
loope
mov
movsb
mov
jle
jmp
cmp
outsl
sbbb
sbb
inc
out
cmp
pop
popf
jg
push
std
xlat
cld
rorl
dec
pop
push
sub
dec
push
mov
lret
push
pushf
out
insb
mov
lods
subb
enterw
sahf
push
adc
cmp
lret
inc
sub
and
xor
out
jb
das
scas
fnstcw
jnp
xchg
in
or
lods
in
add
jl
fdivr
jl
inc
cwtl
adc
call
je
pushf
in
movsl
loope
sbb
sahf
xchg
mov
mov
loop
hlt
std
xchg
xor
in
cltd
cmp
sbb
and
in
or
stos
jle
lahf
push
cmc
test
std
and
std
sub
jle
cmpsb
adc
nop
test
mov
or
insl
cmp
mov
push
sti
pop
dec
imull
in
les
mov
push
push
mov
jecxz
repz
and
gs
iret
sahf
or
pop
clc
lcall
mov
ret
add
test
mov
addr16
pop
repz
or
in
jno
pop
popf
dec
fisttpll
loope
jo
inc
out
jp
das
lcall
pop
jnp
add
pop
add
sbb
jecxz
int3
arpl
add
mov
add
mov
lret
andb
or
jg
das
inc
sub
dec
push
inc
repz
jl
or
sbb
push
xchg
data16
and
and
push
icebp
inc
dec
rorl
call
rorl
mov
xchg
pop
jle
add
pop
cmp
push
mov
nop
inc
cmpsl
and
inc
sub
xchg
pushf
lods
fs
int3
cmp
mov
je
push
xor
inc
pop
cmp
cmp
inc
push
pop
cli
nop
mov
sub
pop
scas
rcll
sub
movsb
mov
and
cmp
cwtl
cmc
push
mov
and
mov
dec
fwait
and
add
inc
xor
sbb
jge
and
pop
int
sarb
fidivs
repz
ret
int
sub
movb
les
fmull
fmuls
jge
cmc
sub
xor
faddl
jl
test
sbb
pop
loopne
mov
mov
sub
insb
imul
mov
scas
or
or
sar
inc
xor
iret
ret
xchg
or
movl
cmp
jge
xlat
sbb
inc
dec
jl
sub
jb
jge
xor
je
cmpsb
cmp
pushf
ss
and
xchg
stos
push
pop
adc
or
out
popf
jp
push
nop
jnp
movsb
jae
movl
push
cmp
sub
and
push
dec
sub
inc
rorl
out
push
cld
nop
stos
lret
test
mov
js
push
xchg
mov
and
jg
jmp
sbbl
clc
stc
insl
mov
cltd
sarb
add
sbb
and
xchg
jns
xor
add
add
ds
push
mov
stos
insb
cwtl
icebp
lea
xchg
jmp
lea
leave
mov
out
repz
mov
rorl
fdivl
ficoml
popf
cmp
jp
dec
aad
test
aaa
frstor
sti
loope
je
push
cli
stos
pop
dec
or
push
jecxz
aaa
mov
div
dec
call
push
mov
xlat
pushf
je
fidivrl
cld
or
push
sbb
lods
hlt
cmp
inc
movsl
add
jmp
xchg
sbb
jo
and
add
int
sub
dec
insb
adc
cmp
lcall
imul
sub
lret
addr16
das
bound
jge,pt
addl
jo
cmovne
mov
popf
mov
push
sbb
pop
xchg
mov
test
mov
stc
dec
pop
pop
repz
jne
lahf
mov
cmpsb
sbb
cmpl
das
pop
inc
into
jns
add
sub
xchg
mov
mov
popf
lahf
or
scas
sti
cmp
sub
jno
xor
loope
ds
pop
mov
dec
sub
pop
jg
add
cwtl
xlat
dec
inc
iret
push
loop
mov
dec
add
or
mov
and
and
pop
ds
les
in
sub
mov
aad
nop
loope
into
dec
dec
out
mov
adc
and
enter
out
push
cmpl
ss
lret
enter
jb
lret
ljmp
sbb
fnstsw
ret
and
jmp
inc
imul
mov
aam
mov
imul
ja
push
dec
sub
xchg
or
ss
test
shrl
sub
test
mov
jne
xor
fidivs
adc
lahf
stos
xchg
loope
hlt
mov
dec
lret
xlat
fnstenv
sbb
loopne
xlat
lret
jp
xchg
adc
scas
ss
aam
xor
ret
es
mov
jl
std
pushf
addl
lret
lods
jb
and
or
sub
or
das
fs
or
cmpb
pop
jg
adc
adc
dec
clc
adc
fwait
out
lret
jno
jecxz
jb
daa
mov
enter
pop
sbb
cmpsb
ljmp
or
pop
fbld
icebp
scas
push
push
and
inc
lods
dec
testb
mov
sub
xchg
out
or
movsl
paddw
int3
and
push
dec
inc
pop
and
stc
sub
fucom
out
jge
jg
flds
lahf
add
push
dec
adc
int
scas
sub
je
cmp
pop
cmpsl
sub
sub
sbb
jo
and
mov
or
pop
test
stos
pop
ret
lea
pop
jne
sarl
neg
sbb
inc
fmulp
ret
sub
sub
pop
mov
xchg
pop
and
push
add
or
stc
and
jle
cmp
addr16
or
cli
and
jo
adc
push
mov
mov
loopne
nop
adc
sub
adc
mov
adc
jns
xchg
push
inc
rcrl
aaa
push
sub
fildll
or
jl
test
fildl
mov
pop
jp
jecxz
icebp
aaa
sbb
arpl
jbe
push
xchg
and
lods
inc
add
movsb
dec
pop
cmpsb
loop
dec
mov
xchg
cwtl
jo
loopne
and
adcl
sbb
sub
repnz
add
fisttps
inc
cmc
push
add
ss
outsl
lcall
int
sub
dec
imul
fbld
sub
cmpsb
xlat
mov
xorb
mov
pop
sub
or
imul
lahf
mov
pusha
out
test
jns
test
add
mov
test
sub
ja
sarl
pop
add
xor
jge
pop
imul
pushf
fisttps
sahf
adc
jno
pushf
adc
hlt
cwtl
outsb
mov
or
mov
inc
int
push
ds
sbb
shll
jl
cmpsl
ret
aam
cli
sub
sbb
push
xor
and
inc
int3
dec
push
pop
out
nop
jne
and
sub
jmp
in
add
arpl
jmp
mov
dec
sti
push
stos
jg
iret
inc
cli
dec
ret
sbb
insb
ret
adc
shll
adc
dec
jne
imul
cmpsb
int3
aaa
adc
sbb
std
adc
inc
aam
dec
lahf
lds
negb
ret
jb
inc
lds
mov
cmpsb
or
iret
xor
sub
push
mov
enter
and
repz
xor
cld
jne
dec
sub
adc
add
xchg
cmp
sbb
fimuls
adc
test
and
rcrl
inc
push
rol
fld
xchg
mov
xor
pop
daa
enter
xchg
jge
push
pop
jns
inc
inc
mov
lods
sarl
adc
pushf
cmp
int
mov
pop
pop
sub
push
ret
and
and
cwtl
mov
popa
lock
jne
fldenv
jmp
cwtl
jae
push
packsswb
sbb
nop
lds
pop
and
push
mov
xlat
orb
icebp
sbb
or
dec
cwtl
sub
add
daa
fwait
repz
out
lea
and
roll
nop
popf
xor
sub
add
adc
add
xor
dec
dec
js
xchg
pop
add
mov
iret
inc
pop
mov
sbb
mov
cs
gs
int3
xlat
stos
pop
sbb
dec
fs
xchg
lret
imul
shrl
pop
repnz
sbb
idivb
incb
xchg
push
cmp
call
and
in
and
inc
add
or
int3
out
xchg
data16
mov
or
testl
loope
mov
into
inc
mov
sbb
cmp
dec
aam
cmc
cmpsl
and
mov
popf
shlb
std
and
and
insb
lds
push
cli
shlb
push
jl
cld
shl
nop
rcl
add
or
push
jp
sarb
cld
xor
arpl
test
mov
in
push
sahf
loopne
lahf
pushf
lock
pop
jbe
cmp
add
mov
sbb
lahf
pop
lret
xchg
push
bound
inc
add
ret
addr16
push
sub
inc
int3
xchg
mov
dec
cmc
fmull
pop
notl
ds
cs
lea
or
sub
jl
imul
dec
push
inc
cmp
daa
dec
pop
lds
and
push
insl
jno
adc
pop
xchg
lret
pop
jg
adc
inc
sub
stos
sub
dec
not
imul
mov
push
hlt
add
shlb
imul
in
xchg
shll
dec
sti
arpl
or
and
jae
fdivr
imul
loope
movsb
cmpsb
int
ret
es
repz
add
arpl
pop
test
clc
add
fcomps
gs
fnstsw
arpl
inc
xor
add
arpl
sbb
lock
fnsave
jmp
or
mov
repz
andl
inc
stos
pop
out
or
imulb
sbb
cmpsl
data16
shlb
pop
adc
pushf
jno
jl
gs
call
sub
inc
mov
enter
stos
movsb
and
or
add
out
mov
shlb
cmp
in
sub
push
loope
or
insl
push
cmpsl
sub
cmc
inc
test
aam
jl
les
stos
pop
in
inc
clc
imul
push
adc
std
nop
cmpb
scas
cmpsb
cmp
sub
fistps
adc
push
jo
insb
mov
pop
sti
divl
mov
mov
push
cs
lods
call
ljmp
inc
jmp
imul
pop
arpl
mov
cld
pop
in
mov
add
enter
xor
lret
sti
pop
or
lcall
cmp
fsubrp
and
inc
scas
test
push
adc
dec
lret
je
xchg
push
lret
cmp
lods
int3
mov
das
pop
mov
jmp
mov
or
mov
pop
pop
add
xchg
cmp
insb
or
sub
ss
lods
cli
dec
pop
int
pop
insl
cmpsb
lea
in
aad
gs
adc
sbb
xor
clc
ret
pop
sub
and
jecxz
push
stc
cwtl
loope
xlat
push
xchg
push
inc
adc
es
mov
fildl
mov
pop
push
cli
pop
std
ds
jns
fisttps
sbb
mov
lods
lea
test
inc
mov
mov
pop
loopne
mov
shlb
sahf
add
dec
jnp
iret
adc
inc
or
out
mov
mov
jo
in
fildll
jb
js
push
sbb
frstor
and
mov
mov
mov
cvttps2pi
js
jle
movsl
add
sti
test
dec
and
xor
pop
fistpll
push
pop
and
mov
jbe
test
xchg
jg
mov
add
jmp
inc
iretw
adc
push
jne
int3
jno
loope
xchg
icebp
bound
lds
lahf
cwtl
push
jl
or
pushf
in
stos
and
cld
dec
inc
dec
push
sub
shll
daa
daa
lea
adc
inc
js
inc
push
dec
iret
cli
std
dec
out
test
orb
int
push
repnz
dec
bound
jno
mov
sbb
pop
mov
sub
scas
popa
pop
fnstenv
dec
pop
sarb
push
fistps
mov
je
daa
sbb
push
sub
adc
cwtl
jecxz
je
xor
enter
sub
xorb
mov
sub
aam
sub
insb
lahf
pop
repnz
imul
cmp
negl
mov
jecxz
pop
xchg
push
push
push
scas
sub
cmp
cmpsb
cmp
insb
ret
ds
xor
adc
and
ret
mov
movb
es
nop
jl
cmpl
jl
dec
nop
inc
add
out
or
les
xchg
notl
popa
inc
dec
mov
inc
mov
add
lahf
pusha
cld
xlat
and
fiadds
xchg
cs
ds
test
jecxz
fs
sub
inc
pop
add
sub
lret
xchg
pop
sub
lret
xchg
outsb
sub
notb
mov
push
mov
pop
pop
jmp
mov
jno
int
push
lcall
in
dec
sbb
or
and
test
insl
sbb
stc
lods
add
xchg
dec
inc
dec
insl
out
pushf
and
imul
mov
inc
dec
cmp
pop
jmp
mov
leave
scas
xchg
aaa
movsl
pop
out
sub
or
int
loope
sbb
enter
stos
xor
sub
imul
cmp
adc
jb
inc
aas
jo
repnz
lods
inc
icebp
popa
cmp
pop
jle
xor
inc
insl
adc
shll
jo
cltd
push
dec
pop
jp
or
add
out
lock
pop
out
adc
dec
popf
mov
adc
pop
xchg
mov
movsl
cmp
repz
addr16
lahf
push
hlt
or
es
and
pop
pop
xchg
xchg
repz
or
jne
cmp
jns
das
sarb
hlt
sahf
stc
fistpll
aas
leave
subb
sbb
lret
add
loopne
sub
outsl
cmp
lds
faddl
add
push
out
xor
ja
jp
mov
repz
das
int
push
xlat
loop
cmp
sbb
fucomip
xchg
les
jbe
push
and
dec
leave
push
inc
call
pop
frstor
mov
cmp
inc
mov
dec
test
push
lea
pop
push
lcall
fcomps
pop
test
sbbl
and
int3
push
sbb
pop
inc
sbb
inc
gs
nop
jmp
and
adc
sbb
sbbl
inc
lcall
mov
icebp
and
adc
icebp
mov
test
push
nop
push
jge
pushf
in
sub
daa
adcb
fbld
popf
gs
lahf
addr16
jnp
mov
insb
add
das
sbb
nop
cmp
push
cmp
jg
inc
das
rolb
ljmp
push
and
stos
jle
cmc
jne
inc
notl
or
cs
dec
std
sub
gs
add
icebp
cmp
mov
push
faddl
in
pop
mov
sub
or
cmp
sar
cmp
ret
lret
mov
cmp
je
adc
pop
add
and
inc
adc
sti
pop
push
inc
or
sbb
sbb
add
fistps
cmp
fbld
xchg
add
sbb
and
popa
cltd
and
lods
test
jle
add
push
and
call
jae
or
and
sahf
xchg
cld
pop
in
or
push
pop
adc
adc
mov
cs
in
sbb
inc
or
mov
enter
cmc
push
nop
and
mov
and
cmp
cmp
jno
test
mov
or
sub
jnp
cmpsb
lea
xor
push
xchg
bound
add
insb
insl
add
and
pop
nop
add
mov
dec
sub
sbb
mov
pop
dec
xorb
ss
xor
mov
add
movl
push
xchg
mov
pop
mov
push
and
dec
int
cli
mov
xchg
add
push
les
jl
cmp
sub
out
mov
pop
sbb
imul
and
lods
test
out
sub
leave
mov
xor
in
xor
es
scas
sub
xor
push
addb
int
mov
mov
add
into
stc
imul
maskmovq
testl
lret
call
sbb
mov
xchg
mov
fwait
mov
outsl
or
or
push
push
dec
leave
push
lds
xor
inc
cmp
xchg
push
nop
jg
adc
fcomp
lea
or
in
leave
jg
aas
xor
pop
mov
lahf
push
push
outsl
call
insl
scas
clc
push
mov
fstpl
in
int3
stc
adc
jmp
aam
xchg
adc
xor
mov
inc
inc
aam
shlb
in
push
rcll
pop
sub
dec
cmp
mov
popa
int
dec
mov
xchg
in
js
repz
mov
pop
cwtl
sbbb
cmp
in
cli
or
mov
pop
jmp
xchg
loop
jno
xor
dec
and
sbb
in
stc
xor
or
sbb
or
aaa
outsb
loopne
cld
sarl
xchg
test
mov
outsl
adc
and
cld
lret
or
adc
inc
aas
or
xor
push
or
bound
les
add
or
inc
lahf
in
cmp
mul
imul
mov
cmp
jo
xchg
call
cmpsb
lds
mov
test
mov
rclb
les
or
dec
mov
loope
jge
stc
mov
insl
jne
cmp
mov
cmpsl
out
sbb
or
pop
lods
and
popa
lcall
out
out
repnz
dec
sbb
repz
push
addr16
outsl
or
mov
sub
xchg
or
scas
xor
call
inc
sti
add
cmp
repnz
out
aad
lods
and
insl
loopne
jecxz
dec
jle
pushf
inc
dec
decl
add
rcl
lods
insb
xchg
int
mov
jmp
cmpb
iret
dec
lahf
inc
das
push
mov
lea
mov
out
push
mov
xor
adc
mov
pop
or
test
je
fcomp
dec
int3
sbb
mov
out
push
and
lcall
das
inc
pushf
pop
and
out
pushf
cmp
stc
xchg
scas
and
jmp
jg
and
jg
outsb
xchg
dec
sbb
cmc
jae
jecxz
mov
xlat
add
aam
pop
push
sbb
push
and
mov
sub
jge
push
cmc
jl
insb
mov
mov
push
popl
lahf
push
add
push
test
adc
adc
shll
out
pop
lahf
pusha
mov
int
mov
add
je
add
inc
test
jmp
and
mov
sbb
dec
dec
xor
sub
cmc
inc
test
push
inc
or
jle
loop
ja
inc
sub
cmp
push
jno
pop
mov
inc
imul
xchg
cmp
scas
inc
add
mov
xor
cmc
mov
inc
dec
push
sbb
mov
adc
pop
and
stc
idivb
inc
test
int3
aad
pushf
addb
adc
pop
inc
and
mov
jge
push
fcmovb
push
inc
std
lods
movsb
bound
fisubl
add
je
inc
jnp
in
insb
in
out
stos
adc
daa
or
ja
imul
jg
jg
jg
jg
xorl
sti
adc
clc
jno
shlb
add
inc
scas
fsubl
and
jmp
ffree
jno
mov
mov
out
cmp
iret
push
icebp
mull
std
das
ffreep
mov
mov
jnp
push
fsubrs
xchg
mov
or
or
testb
mov
movsb
adc
pop
or
scas
test
sub
int
aad
push
inc
call
sbb
mov
scas
fisttpll
dec
and
add
hlt
aam
fld
adc
or
enter
mov
lock
insl
and
dec
xchg
stos
aad
adc
cld
lods
mov
mov
adc
and
sbb
cld
cmp
ret
inc
add
test
pushf
pop
sbb
stos
pop
pop
cld
lea
push
add
pusha
jns
jns
xor
mov
mov
mov
mov
sti
mov
or
dec
xor
xchg
push
push
popf
sahf
xchg
outsl
js
lahf
fstpt
push
popf
dec
fists
adc
dec
push
sbb
or
cs
mov
outsb
mov
cmc
call
fcompl
and
cmp
sbb
rolb
stos
outsb
int
xlat
xchg
jo
cs
nop
xlat
popf
cmp
mov
mov
je
adc
scas
mov
inc
xchg
jmp
xchg
pop
in
cmp
xor
push
les
pop
idiv
mov
je
dec
add
test
mov
out
outsb
or
mov
or
and
es
jb
push
dec
inc
out
push
popa
add
mov
in
movsb
cld
pop
pop
shlb
fdivrl
push
shll
xor
mov
aad
test
int3
mov
je
and
xchg
pusha
add
cmpsl
hlt
jb
out
fs
sbb
adc
mov
mov
mov
outsl
dec
pop
inc
mov
pop
aaa
adc
sarb
sub
arpl
sbb
fldcw
push
testb
sbb
pop
or
scas
dec
mov
insl
lea
xchg
stc
lahf
ss
mov
push
clc
inc
push
dec
cwtl
and
jns
push
in
mov
clc
sarb
xor
addr16
sbb
dec
push
pop
rorb
fwait
sarb
push
ret
jl
pop
xchg
jl
push
mov
mov
idiv
js
out
aas
mov
dec
or
and
pop
cmc
jmp
sub
lea
sbbl
aam
inc
stos
jno
push
es
pop
push
xor
pmulhuw
popf
lret
xchg
ret
inc
pop
xlat
test
mov
dec
lret
movsl
rcrb
addr16
mul
jae
frstor
orl
popf
cmc
mov
push
and
push
cmp
les
mov
or
adc
lcall
mov
sub
ror
add
stos
pusha
fstpt
rclb
frstor
jg
xor
mov
imul
sub
mov
xor
xchg
dec
and
cmovno
sub
ret
outsb
cmp
movsl
sbb
pop
mov
dec
mov
fldcw
push
push
add
or
lahf
repnz
cmp
xlat
hlt
or
xchg
mov
int3
das
mov
mov
shl
dec
add
out
in
fidivrs
or
jl
xchg
jae
ja
mov
sub
or
ret
stos
mov
shll
negb
ds
sub
pop
xchg
pop
adc
int3
idivl
int3
pop
iret
mov
cli
lret
sahf
jp
mov
shl
mov
daa
push
sar
ret
popa
nop
call
shlb
call
sbb
dec
call
push
inc
xor
and
or
sub
leave
cmp
jnp
lret
jns
xor
jmp
mov
pushf
push
popf
sbb
and
das
inc
lahf
inc
xor
jecxz
ljmp
into
das
ljmp
xchg
cld
jno
xor
mov
fwait
sbbb
and
loope
insb
ja
addl
sub
push
push
ljmp
mov
cmpsb
shll
and
inc
mov
pushf
leave
das
js
std
sbb
mov
xlat
inc
inc
xor
push
clc
mov
mov
cli
inc
dec
fists
adc
and
out
sbb
mov
out
mov
out
and
or
cmp
repnz
inc
incl
out
pop
inc
es
int
into
scas
insl
push
lahf
repnz
insl
inc
call
test
pop
test
mov
cmp
mov
es
bound
cmp
sbb
add
popf
adc
dec
loope
pushf
cli
xor
popa
enter
nop
sub
adc
cmp
pop
dec
movsb
je
je
adc
syscall
or
adcl
movsb
mov
sbb
xchg
cmp
add
jl
out
add
cmp
jnp,pt
adc
sbb
sbb
imul
sbb
fnstsw
das
mov
pop
pusha
and
ljmp
daa
ss
ds
mov
cld
iret
popf
bound
aam
mov
sub
cmp
jl
sbb
mov
xor
push
int
xorb
sub
cwtl
adc
push
fisttps
daa
and
mov
std
dec
add
call
aad
inc
int3
adc
loop
and
jl
and
and
enter
gs
or
and
push
mov
imul
popf
mov
pcmpeqw
lock
mov
pop
sub
push
ja
pop
inc
lret
mov
leave
dec
or
jecxz
int
leave
and
test
xchg
mov
pop
sbb
xor
xor
and
imull
rcl
mov
dec
add
lret
cmc
ljmp
js
dec
cmp
nop
mov
mov
sbb
call
mov
xor
out
cmp
jg
lahf
mov
mov
mov
jb
sbb
sbb
cmp
dec
xor
imul
sbb
jecxz
ljmp
test
outsb
and
and
xchg
or
lods
add
je
clc
roll
lcall
sbb
cli
rcrl
pop
movsl
cmp
scas
test
cld
cmp
lea
aaa
fdivrl
xor
add
dec
pop
mov
into
adc
xchg
sbbb
push
pop
cmpsb
adc
es
out
es
inc
movsl
pop
sub
int3
jl
mov
mov
pushf
rolb
cmp
push
mov
adc
enter
fldcw
xor
outsl
and
sub
or
leave
je
pushf
inc
notl
pop
or
mov
or
es
cmpsl
mov
enter
cmpsb
pop
je
ret
push
sbb
outsl
jo
or
mov
mov
mov
inc
ret
mov
enter
add
sarb
aam
dec
loopne
lock
pusha
xlat
adc
xor
fcmovnu
jnp
xor
setg
cmc
out
fsubrp
xor
dec
or
adc
push
pop
test
or
adc
sub
inc
imul
mov
mov
mov
jns
inc
sub
cmp
cmp
dec
cwtl
add
adc
lock
inc
inc
jge
mov
loopne
iret
inc
and
cmp
jnp
xor
imul
push
es
mov
push
cmp
and
jmp
pop
jne
fcoms
pop
das
mov
xlat
jb
inc
lea
cs
add
imul
add
or
sub
push
pop
adc
push
push
nop
lods
lcall
lret
shll
insl
inc
xchg
das
cld
out
repnz
ljmp
mov
push
or
push
pushf
lahf
mov
adc
jmp
shrl
hlt
stos
jl
lahf
test
jbe
or
ss
jg
out
mov
jbe
std
cmp
clc
fldcw
inc
adc
std
mov
jl
stos
cmp
xor
mov
fists
cmpl
cmp
fstpl
inc
and
sub
push
dec
cmp
xor
push
mov
or
fildll
cmp
jmp
loopne
sahf
mov
fnstsw
shrl
mov
or
adcl
jge
add
xchg
add
out
testl
fcmovnu
ret
test
xchg
nop
scas
cli
movsl
xor
xchg
movsb
pusha
add
inc
dec
stos
jg
mov
jl
add
jecxz
pusha
sbb
xor
xchg
sahf
sub
cmpsb
stos
nop
js
mov
push
nop
fstps
ss
or
lock
stc
cmp
out
or
cmc
jl
xor
fnstcw
or
aad
pop
popf
jle
sub
mov
daa
into
pop
adcb
pop
lock
add
xlat
ja
add
dec
xlat
or
jmp
jns
out
popa
rcr
cmc
xchg
lahf
push
aam
jmp
mov
cmp
scas
lret
sub
mov
xchg
int3
lock
fdivl
jnp
dec
scas
es
clc
sbb
xor
xlat
sbb
xor
orb
xor
je
dec
sti
adc
arpl
mov
pop
pop
jecxz
or
inc
jo
add
or
rcll
repnz
cs
cmp
lea
rcll
mov
out
pop
xchg
mov
stos
add
imul
xchg
sbbl
and
fmuls
push
ret
xor
pop
scas
mov
mov
and
fisubs
mov
insb
and
int
mov
fistpl
dec
nop
icebp
rorl
adc
mov
inc
push
cmpsb
and
adc
add
sbb
mov
sti
pop
popa
cmp
lahf
and
sbb
clc
jne
leave
test
sti
pop
inc
sub
jg
jns
mov
ja
xchg
lea
cmp
aas
xor
push
mov
jl
mov
or
mov
sub
dec
inc
gs
cmp
push
jle
mov
stos
mov
into
jno
dec
dec
stos
sub
mov
or
mov
pop
xor
add
sbb
jne
icebp
cmp
xor
mov
stc
and
xchg
mov
jnp
out
inc
sahf
fldcw
add
or
jp
jb
xor
adc
push
mov
rcrl
dec
ds
int
sahf
mov
and
push
mov
jne
mov
inc
test
ret
mov
scas
sub
push
int3
jp
incl
add
insl
rcll
mov
cmpsl
and
orb
mov
pop
mov
or
pushf
pushf
pop
xor
std
push
inc
or
mov
enter
sub
jne
adc
mov
inc
dec
popf
out
add
pop
add
add
imul
sbb
push
mov
aad
cld
test
movsl
adc
or
push
push
cli
ffreep
and
cmp
cmp
movsl
xor
jno
push
cmp
cli
gs
and
int
fdivrp
fildll
fwait
cwtl
push
xor
mov
movsb
or
aas
nop
pop
test
adc
inc
and
jecxz
pushf
iret
jp
jecxz
sub
sbb
movb
leave
loopne
outsl
mov
outsl
pop
and
mov
inc
loopne
rol
cltd
icebp
idiv
xor
jp
xchg
xchg
adc
imull
or
xchg
inc
and
pop
hlt
pushf
leave
and
loop
loopne
lods
outsl
int
out
adc
mov
sbb
scas
out
cmp
aam
iret
or
pop
aam
adc
add
jle
lea
cmp
and
inc
cwtl
sbb
cmp
mov
sub
dec
xchg
iret
cmp
jp
inc
sub
dec
rorl
aaa
sbb
repz
inc
pop
pushf
mov
xchg
jb
loope
dec
cmpsl
loop
push
mov
add
cmp
cmpsl
push
jl
adc
je
dec
mov
pop
icebp
sbb
dec
gs
test
xor
and
testb
push
jp
push
scas
loop
shl
dec
movsl
mov
pop
mov
test
sti
push
inc
xchg
gs
leave
mov
in
pop
mov
in
mov
imull
xor
div
lcall
xchg
pop
jns
jp
dec
jno
dec
dec
cmpsb
test
rcrb
pushf
xchg
in
pop
mov
jle
cmp
dec
xchg
dec
xchg
cmp
cli
push
or
adcl
xor
mov
push
inc
mov
jmp
sub
or
iret
leave
bound
inc
shl
mov
cwtl
push
rorb
lahf
imul
out
popa
ja
lods
sub
je
add
cmp
int3
sarl
leave
and
inc
aam
subl
cld
push
or
dec
lahf
outsl
stos
negl
rorl
pop
cmp
adc
ljmp
or
jno
das
pop
iret
lock
push
popa
ds
and
and
or
imul
jo
outsl
xor
xchg
push
adc
adc
sub
adc
sbb
xchg
or
or
das
jne
and
inc
lods
test
xor
jbe
in
mov
nop
pop
and
sbb
pusha
movsl
lea
or
roll
jnp
push
dec
sub
sub
iret
cmp
ret
mov
mov
sub
loopne
pop
test
insl
add
fcomip
decb
add
push
mov
push
add
scas
call
data16
out
call
fistps
decb
mov
mov
aas
and
out
dec
adc
mov
sti
sbb
pusha
outsl
xchg
dec
ss
jp
scas
push
inc
xor
mov
mov
mov
ja
add
gs
test
mov
mov
cmp
push
sub
xlat
aaa
xchg
fdivl
mov
aaa
xor
or
sahf
stos
daa
cmp
out
mov
and
lods
adc
nop
adc
cmp
xor
dec
scas
and
test
dec
mov
mov
test
movsl
outsl
mov
lahf
and
dec
jl
loope
nop
out
in
ret
inc
xlat
cld
jge
push
or
ret
stos
jbe
test
jge
cmp
xor
push
pop
popw
cmp
fs
loop
push
push
popl
add
int
mov
mov
cmp
hlt
lret
mov
xchg
repz
sbbl
lahf
pop
pop
jo
nop
fldcw
fsubr
insb
fld
xchg
lret
mov
stos
addr16
test
gs
pop
xor
add
xlat
push
cmc
sbb
xor
xor
jl
ljmp
mov
mov
repnz
pop
sbb
bound
dec
and
jl
mov
cmp
mov
push
mov
xchg
leave
mov
pushf
ss
hlt
fiadds
xchg
mov
mov
add
adc
lahf
adc
xlat
pop
inc
pop
imul
enter
mov
and
cmp
jne
lahf
mov
lea
test
test
mov
inc
lea
mov
mov
hlt
cmc
pop
js
mov
mov
sbb
mov
sub
jne
pop
xchg
dec
jp
dec
sub
or
jp
les
jns
lahf
mov
das
insl
jg
dec
jb
and
gs
cwtl
pop
inc
cmp
xor
dec
cmp
scas
jmp
arpl
dec
mov
loopne
mov
jne
je
or
in
cmc
cmp
cld
rolb
xor
adc
or
pusha
mov
pushf
mov
mov
imul
cmp
dec
not
cld
or
stos
dec
push
nop
test
movsb
fs
les
scas
mov
pop
daa
lds
pop
xchg
jne
popf
cmc
mov
add
jle
sbb
addb
popfw
xlat
shl
in
xor
add
ss
popf
add
cmp
rdmsr
jno
cmpsl
iret
inc
jg
push
pop
add
daa
pop
dec
es
adc
jae
sti
movb
sub
cmpsl
scas
out
jmp
adc
mov
pushf
inc
rorb
lea
mov
pop
push
pop
push
lea
fldl
int
cmp
cld
cs
and
mov
cmpb
mov
sbb
push
sbb
gs
sub
add
addr16
outsb
sub
or
pop
xor
out
pop
leavew
or
and
aad
jecxz
pop
addb
insl
dec
adc
pop
stos
jp
fs
pop
out
or
es
cld
fstpl
inc
dec
lock
mov
adc
fldenv
sti
out
mov
and
lret
imul
jno
out
and
cmp
sub
mov
stos
dec
cmpsb
loopne
mov
and
scas
insb
push
pop
dec
adc
xchg
or
pop
dec
sbb
jle
popf
lock
gs
inc
and
test
jb
and
test
dec
icebp
insl
sbb
dec
in
lahf
push
out
and
mov
notb
mov
jg
imul
dec
mov
movsb
push
setl
mov
stos
push
pop
fmuls
push
pop
dec
or
movsb
mov
push
xchg
add
rclb
movsl
push
mov
cli
mov
dec
lods
xchg
xchg
je
inc
cmp
mov
mov
xchg
stc
into
rcl
mov
and
add
sub
jne
pop
lea
shr
in
dec
mov
sub
lcall
mov
jp
in
mov
jo
pop
lret
mov
adc
inc
in
add
int3
sub
jo
jb
lahf
inc
adc
incb
mov
cld
sahf
dec
jp
push
cs
cs
adc
rclb
adc
lods
cs
sbb
jl
xchg
loope
out
dec
pop
push
pop
jmp
mov
sbb
mov
test
int
cld
loopne
or
or
xor
cmp
fs
jg
test
out
add
xchg
push
cwtl
mov
or
jg
in
in
cmp
cmp
out
push
and
adc
lock
mov
jno
mov
push
mov
or
inc
cwtl
jno
xor
sub
push
push
push
inc
jnp
pop
sub
stc
fs
sub
inc
and
gs
andl
adc
xor
lahf
pmulhw
popa
in
sub
mov
jmp
jo
imul
pop
xchg
mov
es
or
je
mov
rorb
sarb
and
sub
ret
inc
sub
adc
movsb
out
outsb
mov
mov
pop
push
insl
mov
test
scas
and
and
insl
jo
jae
xchg
scas
xor
js
psubd
jle
lock
lcall
scas
lods
das
es
imul
pushfw
xor
sub
stos
in
adc
inc
and
xor
push
xchg
mull
sbb
jo
sub
xor
es
mov
dec
out
repz
mov
ds
xchg
dec
not
pushf
or
and
ljmp
out
sub
or
jb
mov
sub
pop
lea
mov
and
arpl
or
insl
mov
xor
dec
pop
mov
sahf
dec
inc
push
cmp
sarl
fstpt
push
test
lahf
dec
cld
sbb
pop
aam
cmovl
loopne
jecxz
mov
addl
sub
les
xor
stos
lret
inc
cmp
pushf
dec
rclb
cli
das
popa
dec
addr16
pop
sti
mov
push
sti
and
scas
jge
mov
pop
movsb
insb
rclb
mov
sarb
pop
and
dec
jo
xor
adc
push
adc
lea
mov
pop
test
lret
sbb
mov
pop
add
dec
or
movsl
inc
jmp
sysexit
dec
adc
hlt
mov
adc
xchg
stos
test
call
sbb
inc
adc
mov
adc
daa
test
fs
adc
cli
fadds
xor
xor
inc
mov
subb
pusha
in
inc
pushf
inc
sbb
in
sbb
es
push
dec
sahf
cmp
push
je
pusha
test
sbb
push
or
mov
stos
xchg
cmc
jg
xor
dec
psubd
push
xor
out
cli
pop
int
out
add
mov
mov
jl
loop
insl
cmovns
stos
cmp
sub
cmp
inc
xor
mul
mov
cmp
dec
lea
into
or
sti
xchg
insl
mov
mov
mov
mov
imul
aad
test
push
sbb
cmp
cmp
aam
cmpsb
push
cmp
or
push
and
and
add
pop
dec
and
mov
mov
insb
sub
inc
out
cmp
dec
dec
sbb
pop
insb
and
shl
rol
jl
out
movsl
mov
mov
clc
dec
into
xchg
dec
outsb
repnz
sbbl
push
es
jno
cmc
lods
dec
sub
icebp
sub
cmp
les
mov
inc
leave
jmp
mov
and
es
cwtl
sub
lds
xor
xchg
lahf
mov
lret
cmpsl
das
and
jp
jecxz
adc
add
sbb
jmp
sub
xchg
sbb
movsb
fcmovbe
mov
out
out
adc
mov
adc
lods
cmp
test
mov
call
cli
sub
xchg
xchg
fs
je
iret
pop
add
std
outsb
push
in
xor
jp
rcrl
call
ljmp
and
or
stos
adcl
jnp
in
ljmp
shll
dec
mov
loop
clc
or
inc
mov
imul
add
jne
jns
in
or
inc
xlat
adc
jle
int
repnz
xchg
clc
xchg
fbstp
dec
bound
xchg
pushf
in
pusha
fisubrs
xchg
mov
into
xor
sub
movsb
out
jg
pop
outsb
inc
neg
fisubl
xor
call
sbb
mov
repz
and
jb
push
in
push
xchg
add
dec
pop
out
in
add
sub
movl
lds
pop
or
pop
repz
lahf
pop
xchg
adc
popa
push
lcall
sti
push
sbb
xor
loop
add
scas
out
lret
les
xchg
jl
pop
inc
cmp
xchg
inc
lahf
jecxz
push
push
or
lcall
cmp
inc
lcall
mov
hlt
pop
xor
loopne
ljmp
xchg
lret
push
loopne
cmp
inc
xchg
sar
repz
push
dec
lcall
jmp
adc
and
stos
fwait
or
into
lock
movsb
repz
cmp
or
dec
shrb
jnp
add
push
cmp
cmp
test
jecxz
adc
out
subb
fcom
or
jl
xlat
jne
mov
inc
rcll
sub
or
mov
rclb
cmp
mov
dec
repz
orl
in
shlb
cmc
jmp
scas
inc
xchg
addb
dec
lds
or
xor
iret
inc
loopne
test
cmc
adc
data16
add
repz
movb
out
or
stos
xor
outsl
into
mov
pop
out
sbb
add
ds
xor
push
mov
cmp
ss
xor
mov
jns
adc
imul
cwtl
rolb
add
pop
push
movsb
mov
mov
sub
push
ja
fcomps
jge
jno
out
xchg
lea
mov
dec
out
push
mov
or
daa
fsubl
es
or
mov
dec
cld
std
scas
inc
in
aad
jno
jp
mov
inc
pushf
mov
sbb
lock
imul
rcr
gs
or
test
in
pop
dec
and
popf
das
push
add
xchg
je
pop
aad
mov
mov
sub
outsb
sub
pushl
std
mov
stc
mov
xor
or
cmp
incb
pop
pop
sbb
or
dec
in
and
mov
mov
repz
lcall
add
jbe
fs
pop
pushf
test
pusha
or
or
pop
adc
push
lret
pop
xchg
stos
mov
push
nop
dec
jg
mov
call
mov
push
sub
mov
sbb
cwtl
pop
xchg
lahf
push
fildl
sbb
test
fildll
jl
add
enter
inc
addr16
mov
xlat
mov
jns
ss
jmp
add
imul
add
push
loop
fs
iret
jp
orb
adc
mov
push
stos
sbb
or
sbb
cltd
or
xlat
pop
sub
mov
shlb
xor
push
and
mov
jecxz
jg
dec
inc
jnp
dec
iret
ret
xor
adc
pop
cmp
sub
push
cs
cmp
cmp
push
daa
xchg
cld
insl
mov
jmp
lcall
jo
sahf
mov
rorl
lahf
test
or
call
dec
pusha
add
cmp
test
inc
idiv
sbb
pop
andl
loop
nop
adc
cmp
std
fstl
fstpl
adc
dec
cmp
aad
loopne
mov
xor
adc
call
xchg
dec
xor
sahf
out
leave
lret
lock
fsubrp
jnp
push
mov
cld
les
sbb
push
out
popa
lcall
xor
add
and
call
in
repnz
mov
and
add
cmpsl
pop
cmp
and
adc
addr16
cs
mov
adc
mov
xchg
jmp
xchg
pop
scas
mov
es
shlb
sub
out
sbb
inc
lods
fucomp
mov
fidivs
leave
cmp
mov
fs
shrl
dec
cmpsl
and
rorl
sbb
sarb
stos
scas
scas
scas
nop
insb
cli
or
dec
cmp
adc
repz
adc
push
and
xchg
jmp
scas
and
shll
int3
mov
stc
cmc
push
adc
sub
dec
lea
test
iret
and
arpl
or
ret
in
and
inc
mov
jne
and
inc
scas
negb
in
pop
add
movsl
add
add
push
and
ss
in
mov
cmp
pop
add
lcall
xor
loop
sbb
es
imul
mov
scas
and
add
or
sub
insl
xor
daa
mov
faddl
sub
popf
sbb
pop
pop
push
gs
pop
sbb
sbb
enter
test
arpl
hlt
sahf
pop
or
inc
add
ret
push
mov
dec
mov
lcall
mov
xor
jo
pop
mov
iret
ror
mov
jae
test
arpl
fcoml
cmp
push
mov
cltd
cmp
test
or
js
fisubs
fs
mov
ljmp
sub
in
push
dec
pop
push
rcrb
push
mov
insb
cmp
sub
jge
fists
jnp
bnd
xchg
shll
or
orb
adc
jnp
pusha
jne
repnz
jb
scas
dec
adc
and
fcoml
xor
ret
and
cmp
sbb
dec
add
fwait
mov
mov
lods
iret
iret
pop
call
push
lds
sbb
or
push
add
add
lahf
jns
shll
jae
stos
je
pusha
cmc
jle
push
dec
push
push
lret
cmp
dec
push
xor
lods
inc
popf
out
lret
popa
cmp
adc
mov
out
jb
cmpsb
mov
xchg
adc
arpl
mov
sub
sti
fiadds
int
cli
out
mov
and
in
nop
mov
adc
mov
imul
adc
popf
fbld
into
lret
fisttps
into
inc
xchg
cmp
mov
sbb
sub
lods
imul
cmp
inc
mov
inc
js
mov
hlt
in
dec
mov
es
xchg
std
sahf
xor
or
dec
mov
xlat
add
testl
xchg
inc
or
aas
das
mov
in
dec
jge
cmp
adc
mov
add
pop
out
inc
fs
aad
or
ffreep
add
pop
or
sbb
push
sbb
in
stos
popa
lret
xchg
dec
aad
pop
in
xchg
sbb
mov
mov
mov
pop
cmp
lcall
sbb
push
xlat
adc
mov
popa
sub
sbb
xor
fstl
or
popa
stos
sub
and
cmp
add
xchg
push
xor
mov
cmp
xor
fs
xchg
pop
add
std
das
add
add
or
cmp
pop
mov
sbb
insl
rclb
das
clc
cmpsl
adc
add
out
jle
mov
dec
push
sbb
daa
je
mov
mov
and
and
dec
jl
add
xor
enter
mov
cld
sbb
jne
jle
add
mov
rcrl
and
ss
adc
cmc
fs
inc
adc
push
mov
int3
cltd
faddl
fnstsw
sub
mov
sub
adc
dec
mov
and
add
out
jl
cmp
mov
add
test
jnp
and
mov
or
fwait
push
or
cwtl
jb
or
sub
xor
and
push
jp
movsl
adc
xchg
cmp
push
push
add
sub
dec
cmp
jb
movsl
sahf
in
jle
std
lea
rcrl
sub
or
jl
iret
jns
pusha
popa
dec
in
push
or
cmp
movsb
repnz
dec
into
pop
addr16
lret
jb
ret
mov
mov
lods
jmp
cs
adc
and
jo
sub
icebp
mov
pop
out
fimull
xlat
push
invd
nop
sbb
popf
addr16
mov
repnz
stc
cmp
mov
cmp
or
sub
cmp
jl
pop
inc
jnp
sub
add
pop
popa
push
mov
lcall
lcall
lcall
leave
dec
cmp
fbld
fs
nop
inc
add
xchg
push
sub
adc
testl
das
dec
mov
inc
pop
jne
lcall
test
jle
and
rcrb
jecxz
jle
or
out
jne
aad
pop
mov
outsb
rcll
jle
mov
xchg
mov
mov
push
push
jno
test
jg
xor
mov
dec
cmpsb
mov
lds
xchg
sub
test
lods
fwait
icebp
xchg
jp
mov
cmp
lcall
xor
pop
inc
jmp
mov
loop
arpl
dec
lret
sbb
sbb
ret
inc
dec
adc
int
sub
loopne
inc
cmpsl
jns
fmull
add
pop
xchg
xchg
mov
pop
pop
push
cmp
cmp
or
pop
filds
stc
mov
or
inc
pop
and
xchg
push
nop
ret
add
sub
jb
jp
insb
insl
or
roll
xor
hlt
movsl
pop
adc
dec
pop
imul
push
in
and
xchg
out
es
enter
sub
inc
mov
jmp
clc
xchg
sbb
mov
mov
frstor
stos
insb
or
inc
addr16
sbb
adc
ljmp
ficoml
sbb
ds
jmp
lods
push
and
or
and
int
mov
mov
push
cwtl
jns
in
mov
pop
out
sbb
cmp
inc
loop
sub
inc
xchg
mov
cltd
adc
cmp
and
pop
out
mov
or
pop
test
fstpl
xchg
dec
push
push
aad
dec
repz
rcrb
push
add
out
fdivrl
inc
dec
inc
insb
or
mov
arpl
xor
ljmp
test
je
adc
test
daa
inc
mov
inc
scas
fldenv
fs
bound
movsb
push
sub
scas
push
and
xchg
cmp
inc
push
inc
js
xor
sbb
les
cmp
xor
test
xchg
scas
out
push
inc
daa
sbb
lahf
mov
dec
cwtl
mov
adc
shrb
xor
out
enter
cmc
dec
or
adc
int
cmp
fucomip
mov
or
inc
mov
mov
sbb
mov
mov
jp
pusha
movsb
aad
dec
xchg
into
mov
mov
ss
dec
mov
clts
dec
dec
out
mov
sub
inc
lahf
shrb
lock
cmp
pushw
sub
out
dec
scas
pop
xor
fwait
iret
loop
cmc
ljmp
dec
test
dec
xor
sbb
adc
ljmp
and
aaa
rorb
jne
scas
das
jle
ljmp
xor
sub
push
aaa
add
xchg
mov
dec
sub
dec
xlat
mov
fisttpll
adc
and
or
sub
and
mov
in
aad
mov
popa
movsb
cmp
loop
int
push
xor
adc
mov
push
sbb
sahf
jmp
cli
jp
fiaddl
mov
inc
shlb
loopne
inc
mov
mov
xor
icebp
movsb
iret
insb
pop
and
pusha
xlat
int
pop
cltd
rcrb
notl
mov
pop
inc
sub
pushf
loop
xlat
mov
enter
fst
cmp
inc
xchg
iret
jmp
outsl
stos
aaa
enter
add
shr
dec
mov
je
ds
pusha
inc
sbb
scas
mov
inc
flds
and
sub
and
cli
cmp
lret
add
and
aam
push
push
pushf
icebp
nop
popl
sbb
jne
fwait
inc
iret
jmp
jecxz
popa
jo
jo
xchg
fwait
pop
cmp
shr
leave
stc
mov
add
push
mov
test
pop
inc
into
xchg
in
int3
das
inc
and
and
jne
andl
jno
xor
pop
push
mov
xor
jg
fisttps
subb
cmp
aaa
negl
add
jo
or
andb
rcr
and
bound
adc
adc
inc
bnd
xchg
lret
and
pop
out
int
movsl
cwtl
mov
and
je
inc
sahf
sub
idivl
or
pop
mov
inc
test
cwtl
outsl
xor
mov
shl
inc
push
jmp
sub
mov
les
xchg
cmpsl
aas
and
xor
and
pop
inc
inc
sub
cmp
xchg
test
add
jnp
inc
icebp
or
mov
mov
pop
xor
dec
mov
mov
or
popf
pop
int3
adc
mov
inc
bound
xchg
sbb
and
mull
outsl
fstps
jmp
inc
or
mov
inc
scas
fs
xor
sar
pop
mov
stos
pop
fbld
call
loop
enter
sub
outsl
leave
scas
add
jne
and
dec
ljmp
mov
xchg
mov
mov
sbbb
mov
xor
nop
push
movsb
orl
push
jmp
cmp
mov
pop
shll
lock
outsb
lret
jmp
adc
fmull
sub
in
push
pop
lahf
je
dec
clc
cmpsl
nop
fistl
adc
pop
mov
jns
ficomps
fisttpl
fldenv
xorb
sub
xchg
ror
add
push
sub
cs
aas
and
inc
mov
ret
mov
out
adc
std
dec
call
out
jns
jmp
aad
mov
push
int3
mov
pop
adc
xorl
pop
mov
jno
dec
jo
mov
jb
jge
dec
mov
stc
pop
adc
sub
sbb
push
rcrl
xchg
cmpsb
sbb
iret
push
sbbb
inc
das
sub
xchg
cmpsl
lret
movsb
or
jl
xor
inc
fs
nop
ret
adc
pop
mov
js
pop
lds
adc
test
mov
pop
pusha
repnz
push
test
in
or
inc
andb
imul
clc
subb
cli
in
lcall
dec
dec
dec
add
dec
mov
je
lcall
ds
lret
pop
aaa
cwtl
ss
inc
cmp
jo
pop
adc
pop
int
loopne
cmpsl
mov
sub
int3
adc
xlat
and
adc
insb
movsb
cwtl
add
aam
dec
orb
and
inc
clc
popf
data16
call
inc
mov
push
cs
and
dec
jmp
xchg
les
mov
pop
sub
loopne
leave
mov
in
xchg
and
pop
mov
mov
mov
test
data16
inc
stos
divb
xlat
fmuls
mov
mov
pushf
sti
addl
cmp
outsb
loopne
inc
scas
jp
nop
xchg
push
es
dec
stos
mov
pop
in
pop
mov
movsl
add
test
imul
mov
xor
sbb
data16
lock
je
or
pop
rorl
shr
dec
push
mov
nop
adc
and
test
sbb
dec
das
add
push
push
cmp
pop
orb
mov
sahf
adc
mov
in
inc
inc
roll
loope
cmp
shll
cwtl
jno
pop
imul
gs
test
push
or
xor
or
xor
fcmove
scas
xor
cld
call
add
in
adc
cmp
cld
stos
jae
adc
push
daa
std
roll
popf
cmp
popf
shlb
loope
mov
cmp
movsl
sbb
jl
stos
out
adc
or
je
inc
lcall
data16
in
jge
mov
dec
sub
add
test
inc
pop
jo
sub
mov
add
cmpb
repz
stos
adcl
add
lods
gs
or
repz
enter
iret
and
mov
xor
sbb
fs
mov
add
xor
popf
test
jmp
nop
pop
cmc
sbb
loopne
and
mov
push
push
add
lock
addr16
xchg
xor
sbb
adc
sahf
jno
adc
mov
jns
lds
inc
aas
or
enter
sbb
mov
jge
out
out
mov
cld
pushf
and
or
aad
or
int
data16
dec
cmp
neg
int
test
add
dec
xor
mov
insl
sahf
in
add
sub
cmc
push
cmc
dec
test
inc
fs
sbb
cli
cmp
movsb
lea
push
inc
and
inc
mov
sub
sub
push
pop
dec
rcr
xor
xchg
stos
xchg
jp
push
mov
in
ficompl
add
pop
iret
adc
xchg
lock
sbb
push
aad
inc
iret
cmpsb
jae
scas
adc
and
stos
addr16
insl
cwtl
leave
cmp
rcrl
test
jecxz
sub
cmp
stos
fisttpll
andl
jo
pop
add
call
sti
jge
and
cli
mov
inc
cmp
push
mov
call
and
clc
dec
push
or
cs
pop
jmp
mov
adc
jl
daa
xchg
out
rorb
jmp
pop
in
pop
idivb
pushw
adc
test
or
xchg
dec
stos
or
movsl
sbb
stc
hlt
cmp
xchg
adc
adc
dec
testl
scas
xchg
xor
mov
or
dec
and
push
xchg
sub
sbb
push
push
jl
push
stos
jb
icebp
pop
lahf
pop
mov
sbb
mov
int
addb
repz
lahf
mov
dec
mov
iret
loopne
arpl
mov
adc
sub
inc
mov
push
jno
and
js
xchg
and
xchg
jl
lea
movaps
call
adc
jb
add
sbb
xor
sbb
push
pop
pop
loop
sub
dec
and
jbe
adc
lods
icebp
loope
paddb
pop
dec
test
cwtl
fistps
cld
xchg
xor
sbb
jne
iret
int
std
fsubl
aas
ljmp
push
push
sub
daa
ds
outsl
imul
sti
inc
mov
repnz
jb
ljmp
inc
fisttpll
loopne
lock
add
popf
cld
add
dec
push
dec
pop
lea
in
inc
call
ss
xor
sbb
fadd
test
filds
xchg
call
push
js,pn
fwait
dec
sbb
fmull
mov
scas
popf
cs
loop
push
push
setnp
jg
cs
mov
xchg
cli
aas
out
ror
sbb
mov
xchg
mov
movsb
push
xchg
shrl
sub
and
lret
and
fiadds
mov
mov
out
jb
inc
push
in
inc
dec
add
popf
pop
xchg
xor
push
lock
cli
and
mov
and
aas
lahf
sub
es
test
pushf
stos
test
nop
sahf
xor
xor
push
dec
daa
iret
cmp
popf
dec
cmp
mov
loopne
push
pop
sbb
and
dec
jp
xor
cld
inc
push
inc
jnp
push
pushf
or
test
or
mov
mov
cld
movsl
inc
ficoml
inc
xchg
repz
aad
clc
mov
test
add
or
lcall
idivl
in
inc
insb
mov
pop
arpl
mov
jnp
cmc
lock
sbb
shll
or
mov
sbb
pop
xor
cs
or
loop
psllw
test
adc
mov
mov
sub
pop
in
ret
push
xchg
cmpsl
jns
fistpll
testb
mov
and
adc
or
std
mov
sbb
stos
and
cmc
jae
cwtl
cld
jge
lahf
leave
mov
sub
mov
xor
scas
mov
and
xor
mov
inc
and
jecxz
aad
hlt
movsl
inc
mov
push
cmp
int
ret
dec
in
sub
mov
out
mov
cmpsl
cmp
pop
addr16
divl
and
cmpsl
sub
out
add
das
insb
mov
push
cmp
and
shll
arpl
lcall
outsl
stos
dec
or
xchg
cmp
and
push
mov
sti
arpl
jg
loope
pushf
cmp
mov
lds
test
scas
sahf
cld
test
pop
psubd
and
int3
cmp
mov
dec
pushf
sbb
pop
inc
jo
mov
xchg
or
add
push
dec
xchg
jmp
dec
mov
lahf
insb
lret
jl
std
test
test
push
sub
or
ffree
shlb
shll
push
bound
fbstp
nop
sbb
adc
mov
xchg
push
in
mov
orb
push
sub
std
sub
adc
jbe
data16
aad
xchg
xchg
push
mov
sbb
decb
pop
mov
push
xchg
or
xchg
mov
jmp
mov
dec
adc
jg
jns
dec
movaps
cmp
dec
scas
leave
or
push
pop
dec
in
xor
inc
xorl
js
sub
mov
push
les
or
notl
inc
and
ja
or
jg
xor
xchg
xlat
cmp
or
mov
add
and
jge
test
mov
sti
aad
stos
rclb
lcall
xor
cmp
scas
mov
mov
inc
adc
inc
jb
icebp
xor
inc
dec
xlat
paddb
int
fs
addr16
sub
lea
jb
jbe
push
ja,pt
dec
cmp
sub
jle
icebp
fwait
testl
mov
push
lret
add
and
cltd
or
pop
ret
out
jge
ja
adc
pop
cmp
mov
pusha
cwtl
pop
jb
mov
repz
leave
fwait
inc
jle
lcall
xor
nop
mov
jbe
dec
lahf
jmp
inc
mov
mov
in
cld
mov
push
push
or
bound
mov
add
push
rep
filds
inc
push
jno
mov
lds
fsubl
jp
xchg
arpl
or
inc
mov
loop
repz
pushf
pop
pushf
ror
sbb
dec
lahf
sarb
loopne
push
daa
stc
jp
jmp
lahf
flds
call
sbb
aaa
add
pop
ja
int
jns
addr16
or
dec
in
nop
mov
inc
add
in
dec
leave
lahf
jg
xor
jnp
sbb
inc
xadd
xlat
lea
pop
mov
jmp
or
addb
dec
adc
inc
out
stos
xor
test
repnz
bound
and
or
mov
rcrb
pop
add
mov
push
dec
sub
ret
mov
push
mov
imull
mov
jg,pt
pushf
adc
xlat
loopne
and
dec
cld
push
push
xor
and
mov
mov
mov
xchg
in
add
or
sbb
cmp
mov
rorl
das
adc
push
fidivrs
call
inc
push
das
xchg
nop
sub
roll
cmp
cwtl
lahf
adc
lret
test
sahf
lds
sbb
jne
outsl
or
push
lds
mov
xchg
iret
and
mov
mov
inc
jbe
lret
sub
fnstenv
inc
jp
mov
call
push
mov
int
dec
or
dec
sub
es
popa
fistps
fsubr
sub
xor
and
pop
ds
ret
jo
and
das
inc
cwtl
roll
cld
dec
jg
mov
mov
inc
ja
inc
aas
hlt
daa
inc
ss
pop
or
jno
dec
leave
inc
pop
or
lds
cmp
pop
sub
sub
inc
push
and
test
push
js
mov
scas
stos
jnp
sbb
jmp
ds
ret
mov
mov
and
pop
push
mov
sub
push
pop
push
pop
stos
test
mov
sub
scas
cmp
mov
rcll
fdivrs
mov
add
mov
jl
jo
pop
mov
cmp
push
lods
shrb
orl
pop
aad
adc
push
int3
mov
xorl
xchg
xor
subl
js
andl
addr16
mov
mov
push
mov
inc
mov
push
gs
fsubs
jl
int3
sbb
add
xor
inc
es
push
in
push
mov
cmp
movsb
xchg
dec
popa
mov
sub
xchg
mov
mov
push
data16
jns
in
insl
int3
sub
repz
adcl
cmc
cmp
adc
or
sbb
xor
mov
je
or
inc
xchg
or
jb
dec
out
or
arpl
mov
add
adc
imul
pop
movsb
lock
sub
mov
pop
mov
in
sbb
enter
jg
pop
push
cmp
mov
inc
cmp
repnz
push
or
fisubrl
mov
and
js
fcmovb
sbb
mov
mov
adc
test
sub
add
push
push
or
and
pop
mov
stos
xchg
dec
ds
scas
jb
push
ja
jge
mov
xorl
mov
cmp
std
mov
push
shlb
dec
fldl
sbb
adc
icebp
outsl
movsl
test
jns
lret
nop
pop
pop
or
pop
sub
and
pusha
pop
or
push
daa
mov
jmp
xchg
push
jg
sub
out
push
nop
repz
stc
imul
dec
mov
rorl
push
ss
iret
xchg
jns
add
sbb
sti
sub
mov
es
cwtl
dec
inc
cli
popf
je
cmp
mov
enter
xchg
enter
pop
and
aad
push
cmp
mov
jb
xchg
pop
or
fwait
dec
sar
xlat
testb
sbb
mov
lea
adc
jle
mov
jle
jmp
inc
dec
enter
ja
sahf
pop
popa
jne
xchg
gs
repz
sub
dec
mov
pop
popa
adc
loop
das
ljmp
xor
dec
lret
pop
insl
mov
mov
xchg
cmp
xchg
pop
sub
rol
jno
imul
pop
mov
insb
ror
push
inc
jl
rcll
popf
out
sbb
nop
int3
mov
jl
fdivrp
outsb
inc
and
inc
inc
pop
mov
inc
in
jl
dec
ficomps
lods
call
lock
cmpb
dec
push
pop
clc
pushf
push
pop
mov
inc
xchg
std
pop
repz
xchg
push
lock
pushf
mov
insb
addr16
sub
out
xor
in
cmp
fistl
dec
lahf
push
jne
cmpsl
cmpb
inc
loope
enter
inc
mov
test
mov
sbb
and
xchg
adc
mov
xor
fadds
pop
pop
outsb
xor
push
pop
push
xchg
or
xor
adc
inc
stos
mov
shl
mov
fld
jne
xor
repz
test
incb
cmp
addl
dec
ss
iret
mov
jg
mov
sub
cs
test
andl
sbb
xchg
xor
pusha
mov
adc
push
mov
notl
xor
dec
pop
pop
cmp
jnp
xor
push
lahf
or
cs
push
and
out
leave
test
xchg
and
mov
daa
dec
mov
push
es
xchg
in
or
sub
ds
test
xor
cli
mov
mov
push
in
imul
int
ljmp
add
mov
call
popa
sti
sbb
aam
xor
insb
sbb
inc
sub
mov
sub
iret
mov
out
mov
jno
xorl
push
and
xchg
or
shlb
iret
lods
aaa
scas
and
xchg
jns
mov
pop
xor
aad
sub
aaa
xchg
xor
ret
addr16
in
enter
dec
mov
cmp
or
inc
sbb
add
cs
imul
das
xor
push
mov
movsb
xorb
fmul
add
fisubrs
add
xchg
push
inc
pop
push
lahf
fwait
mov
cmp
inc
pop
jne
mov
mov
div
fisttpl
pop
sbb
push
sahf
in
in
in
stos
cmp
shll
add
rorl
sbb
pop
or
push
lahf
ds
cmc
test
adc
push
sub
pop
cmp
cli
mov
jnp
mov
add
mull
xchg
lods
sbb
push
cmp
sbb
mov
mov
ds
out
mov
lahf
xchg
dec
ret
inc
int3
and
mov
push
dec
pop
stos
mov
adc
sub
daa
add
or
cmpsl
stc
jnp
sub
xchg
push
insb
cmp
cld
in
dec
cmp
rorb
loop
mov
cmp
inc
xchg
push
ds
xlat
pop
adc
cmp
insl
imul
push
fidivs
inc
int
or
fcompl
movsl
les
mov
jb
xchg
mov
dec
dec
mov
add
jg
push
push
fdivrp
sahf
pop
adc
add
out
sub
cld
js
fstps
mov
aaa
ret
push
nop
mov
or
pusha
adc
mov
test
xlat
pop
js
xchg
or
stos
push
push
aas
mull
in
pushf
lahf
dec
in
or
sub
xchg
xor
cmp
xor
mov
mov
mov
dec
lea
cmc
cs
xlat
push
aad
pop
stos
xchg
das
int3
mov
add
cmp
xor
mov
pop
push
aad
pop
inc
out
es
jns
inc
pushf
movsl
jns
xor
xor
dec
hlt
xor
clc
stos
and
dec
cld
out
test
jb
mov
mov
adc
loopne
scas
sub
int
mov
mov
stc
insb
or
in
dec
xor
stos
cmp
fisttpll
or
roll
test
scas
and
jnp
push
mov
roll
aad
adc
bound
insb
push
es
out
repz
mov
jg
inc
out
add
mov
push
and
cltd
cmp
jmp
ror
je
clc
in
xchg
add
pop
out
adc
mov
mov
stc
add
int
or
mov
mov
push
mov
repz
mov
mov
in
cmp
mov
call
jmp
mov
test
sti
mov
test
and
mov
push
test
inc
stos
xchg
pop
mov
loopne
add
pop
fidivl
mov
neg
testb
add
lret
push
ds
std
popa
inc
test
xlat
aad
cld
sbb
mov
nop
lahf
and
shr
dec
fsubrs
mov
rclb
add
jno
lods
push
mov
xor
cmp
xor
fiadds
cwtl
pop
pop
data16
shr
xchg
cmp
adc
cwtl
out
in
add
hlt
fsubp
or
push
repz
cmp
mov
inc
jge
inc
mov
push
push
movsl
out
dec
scas
lea
or
cmp
sub
dec
push
fiadds
lock
sub
mov
pushf
andb
popf
dec
xor
or
out
jo
mov
sbb
int3
jp
ss
repz
repnz
arpl
mov
daa
sti
mov
dec
mov
outsl
popf
aam
mul
mov
enter
jbe
add
packssdw
in
sub
icebp
sub
adc
cwtl
mov
and
xor
dec
cwtl
pop
rcr
adc
lcall
in
pop
cmp
mov
jbe
mov
or
jmp
mov
lret
xor
int
dec
push
and
jae
mov
lods
neg
xor
pusha
sbb
push
dec
cmp
jnp
push
movsb
jl
fstpl
jge
idivl
shll
cmpsb
mov
push
loop
sbb
sub
in
je
cmp
lahf
out
push
std
xor
adc
pusha
jno
sub
test
sub
cwtl
push
scas
testl
insb
lahf
test
pop
dec
inc
sbb
out
sub
sub
push
sub
mov
add
sub
das
or
shrb
pop
sbb
push
enter
push
or
pop
lea
push
jl
adc
xchg
hlt
adc
or
push
into
cmp
pop
cmp
inc
push
adc
out
jnp
jb
sub
out
jle
xorb
jmp
mov
jno
inc
inc
test
adc
or
jo
sbb
adc
sub
adc
mov
jae
push
push
fildll
jp
das
pop
bswap
or
ljmp
je
loopne
rcll
adc
add
icebp
out
push
test
adc
ret
cmp
clc
fsubs
push
push
add
dec
jle
in
out
adc
les
push
mov
fmulp
mov
pop
adc
lock
cld
or
outsl
or
cli
notl
sub
jmp
test
push
bound
pop
sub
xchg
mov
shr
jae
or
or
pop
cld
and
xchg
fnstenv
fsubrs
pop
lahf
bound
mov
adc
std
leave
cmp
mov
subb
add
icebp
inc
movsb
pop
dec
dec
lret
clc
and
cmpsl
cmp
scas
push
js
push
inc
push
stc
call
xor
aad
add
lock
fldt
adc
mov
mov
cmpps
iret
or
mov
cmp
popf
or
cmpsl
push
xor
mov
addl
push
sbb
mov
mov
dec
sbb
adc
fmull
adc
adc
cmp
jbe
adc
or
dec
loopne
lahf
mov
sub
push
and
xor
shlb
jge
fs
mov
jae
sbb
out
fimuls
push
jl
popf
outsb
movhps
pop
ljmp
inc
cmp
sbb
adc
js
or
adc
nop
sub
add
cmp
mov
scas
test
cwtl
int3
filds
add
pop
mov
pop
mov
dec
cmp
xchg
and
sbb
std
or
push
xchg
in
push
mov
xor
xor
scas
shrb
int3
dec
scas
insl
sbb
lahf
or
test
add
xchg
daa
push
scas
arpl
inc
sbbl
loopne
push
push
adc
daa
in
repz
jecxz
xchg
call
call
cli
fcomps
das
lds
lock
loop
ss
daa
cwtl
js
sbb
cmp
xchg
out
and
imul
das
sahf
mov
sub
cli
div
lcall
negb
arpl
lods
js
call
stos
aas
sarl
roll
jecxz
mov
imull
and
adc
mov
aaa
sbb
mov
repnz
mov
lahf
clc
jne
jbe
mov
mov
and
in
xchg
js
pop
pop
sbb
fmull
xor
lret
sbb
push
xor
std
fwait
cmp
adc
adc
movsb
jb
mov
and
mov
adc
das
popf
mov
lret
insb
les
and
cli
sbb
push
addb
movsb
xorb
pushf
loopne
insb
xlat
or
cmp
push
pushf
cwtl
rcrl
xorl
inc
cmp
add
aam
cmp
ret
out
popf
and
aaa
cmp
std
mov
jmp
jb
outsl
lock
xor
fistps
push
cmp
mov
outsl
inc
dec
mov
lahf
ret
xchg
and
and
repnz
fdivrp
test
lret
iret
add
movsb
push
jne
es
xchg
lret
outsb
inc
dec
jno
inc
sti
xlat
insb
dec
cld
push
push
ja
lods
ss
adc
arpl
cltd
sub
shlb
push
pushf
mov
pop
lcall
mov
imul
aad
cmp
xchg
fld
es
push
sbb
or
mov
imul
dec
addb
test
cmpsl
js
loopne
jne
test
mov
in
jecxz
addr16
and
stos
insb
aad
cli
sbb
stos
xchg
fcoml
fs
js
cld
cmpsb
negl
es
cmc
int3
jle
mov
fs
movsl
xchg
adc
outsl
clc
jmp
xor
or
into
sbb
inc
mov
int3
mov
test
cld
cmp
fsts
nop
lcall
mov
xchg
adc
push
and
mov
data16
push
lods
and
sub
into
mov
fbld
mov
cmp
divps
daa
test
inc
adc
mov
cmp
mov
push
pavgb
imul
mov
cmp
adc
pop
xchg
or
loopne
sahf
push
inc
in
pushf
fdivrl
dec
inc
sub
lods
insl
mov
iret
mov
pop
add
push
and
sarb
das
mov
sub
stc
inc
or
arpl
pop
xchg
arpl
pop
mov
pop
mov
push
dec
movsb
outsl
or
jbe
loope
cli
scas
sbbl
scas
jge
dec
inc
mov
push
in
dec
shl
iret
mov
pop
and
in
cmp
mov
movsl
scas
cmpsl
jge
dec
and
cmpb
adc
lods
adc
mov
xor
fwait
fs
xor
rcll
stos
repz
test
shll
xchg
xor
mov
mov
jb
mov
fistps
jle
lret
add
pop
inc
loopne
lahf
outsb
cmp
addr16
shlb
pop
popf
mov
negl
fisttpll
add
mov
std
cli
add
or
in
jo
xor
pop
nop
repnz
inc
inc
leave
or
xchg
and
pop
dec
mov
pop
and
jle
out
out
push
mov
mov
aas
mov
mov
mov
mov
pop
add
mov
sub
lea
test
iret
test
xor
cmp
movsb
adc
shrb
fisubrs
stos
aad
cmp
out
push
sub
dec
add
xor
push
in
test
inc
sbb
add
pop
int3
mov
and
aad
push
add
jecxz
repz
inc
jl
ficoml
inc
repz
je
out
push
inc
ret
and
imul
orl
cmp
lahf
movsb
sub
adc
sbb
mov
adc
pop
mov
loopne
jbe
xor
mov
leave
cmpl
mov
inc
dec
andb
mov
dec
scas
push
add
jmp
lahf
mov
imul
insl
or
adc
sub
out
stc
in
sub
inc
scas
dec
xor
lods
jg
pop
add
gs
inc
jl
inc
cmp
lock
push
jns
jg
rolb
stc
sub
loope
dec
and
lea
scas
adc
test
std
push
loope
pop
jno
lock
xchg
xchg
jae
jne
sbb
out
dec
mov
pop
stos
mov
add
pop
push
inc
dec
daa
iret
and
lahf
lcall
jno
cmp
and
add
test
dec
rcr
inc
adc
movsb
aaa
js
pop
jne
xor
and
pop
andb
das
mov
mov
rcrb
push
dec
aad
fildll
shlb
mov
dec
es
shr
mov
aad
add
mov
mov
ljmp
cld
jle
mov
mov
ljmp
data16
test
xchg
psrad
fistpll
xor
lahf
bound
cmp
inc
outsb
hlt
leave
inc
push
push
cli
imul
int3
fildll
push
pop
xor
mov
popf
mov
mov
sub
sahf
pop
scas
arpl
jb
push
inc
mov
xor
mov
inc
push
pop
inc
xlat
and
sub
pop
sub
sub
pop
adc
jmp
gs
and
enter
lret
xchg
fsubr
call
lahf
std
movsl
inc
lods
cmpsl
mov
ljmp
cmp
cmpsb
lods
in
icebp
adc
add
and
sti
add
push
jl
cmp
out
fnsave
icebp
and
jge
add
and
in
sub
vsubps
pop
jg
lahf
cmp
add
negl
fidivrs
mov
negl
inc
dec
mov
into
push
sub
inc
mov
mov
pop
and
and
and
inc
clc
push
dec
cmp
pop
mov
std
mov
push
das
push
sbb
and
lods
movsl
jo
lahf
mov
int
and
fidivrs
and
or
sarb
cmp
rorb
dec
lret
pop
mov
push
dec
and
mov
mov
lret
sub
push
insl
or
push
xor
out
inc
nop
push
loopne
inc
les
insl
cmp
sub
jno
push
xor
lret
mov
lahf
sub
pop
test
adc
in
sbb
sub
jo
jg
test
dec
xor
sti
hlt
jne
adc
mov
sub
push
cli
dec
es
push
inc
in
stos
xlat
jmp
shll
adc
xchg
or
lret
cmp
dec
insb
jo
je
ja
xchg
cmp
movsb
jp
sti
imul
testl
pop
inc
repnz
sahf
fs
jbe
sahf
cmp
mov
popa
sahf
sub
enter
xor
cmc
jp
cs
andl
fisttpll
jl
mov
test
loopne
push
ret
mov
mov
fiaddl
jne
in
lds
push
sti
outsl
and
push
mov
push
into
push
pop
sub
pushf
cmp
cli
arpl
repz
outsb
mov
mov
mov
dec
popa
and
pop
or
dec
pop
je
dec
mov
sub
in
inc
jbe
jecxz
mov
sub
jp
fiadds
adc
shr
fwait
sub
xor
adc
mov
xchg
pusha
int
pop
add
mov
cwtl
push
pop
mov
push
pop
mov
or
pop
mov
dec
stos
inc
mov
mov
cmpsb
iret
xchg
stos
enter
jecxz
sbb
test
repnz
adc
mov
jecxz
pop
fildl
cmp
or
cmp
cmpsl
push
adc
pop
xor
sbb
cmp
and
push
cmp
sub
outsb
lock
nop
jno
push
addb
and
iret
dec
rcl
mov
cwtl
push
pop
cld
mov
fs
inc
cmp
jecxz
push
push
scas
or
and
push
popf
jl
push
popf
in
nop
adcl
out
pop
dec
jo
nop
shll
inc
dec
sub
popa
cmp
jge
mov
cwtl
pusha
out
jp
or
and
addr16
sarb
inc
pop
ficoms
inc
add
push
test
ret
adc
or
or
jmp
add
mov
addr16
cltd
pop
andb
sub
or
cmp
xchg
or
push
cmp
call
int
outsb
into
jo
loop
xor
cli
sbbb
lahf
mov
dec
loopne
add
int
fisubrl
das
in
test
xor
sub
hlt
pusha
or
pop
in
adc
pop
xor
add
jb
push
xchg
add
sub
add
cmovl
out
add
fistps
cs
insb
mov
mov
pop
add
or
jl
fwait
and
pop
nop
gs
rorl
pushf
add
pop
add
popa
lahf
push
jae
push
jl
adc
sbb
push
add
aaa
push
inc
pop
or
add
cmp
pop
push
mov
rorb
pop
pop
imul
insl
add
adc
pop
stc
lea
andl
or
push
inc
ret
int
shl
dec
cs
movsl
insl
or
test
cmp
xchg
js
fwait
js
cmp
sub
addr16
jl
push
push
xchg
enter
fsubrs
out
adc
cltd
fs
lds
and
inc
mov
mov
xlat
push
mov
sub
push
sbb
push
xlat
adc
sbb
xchg
out
cmp
idivl
dec
and
data16
les
sub
pop
lretw
aam
cli
out
sarb
adc
cs
sub
or
jb
jmp
and
idivb
add
sbb
sbb
lahf
popf
or
dec
mov
cmpsl
je
add
or
test
lock
adc
xor
mov
jnp
add
inc
cmpsb
aas
xor
sub
mov
dec
scas
gs
mov
cwtl
pop
jnp
into
dec
add
bound
inc
xlat
notb
cwtl
bound
cmp
mov
shll
call
inc
movsb
mov
cmp
fwait
dec
and
mov
mov
xchg
notb
xor
inc
movsb
std
gs
int
mov
adc
add
dec
sbb
push
add
or
cmpsl
test
pop
dec
out
movsl
add
or
sbb
clc
inc
jnp
bound
add
pop
add
popf
lock
movsl
or
clc
gs
inc
sub
call
jl
test
or
loopne
adc
sub
jb
add
add
mov
and
mov
ljmp
xor
cli
mov
pushf
sbb
xchg
int
mov
add
fmull
cmp
pop
out
mov
fnsave
fs
push
or
int3
xchg
pop
mov
adc
insb
mov
mov
sbb
fs
cmc
add
cmp
imul
pop
xor
loopne
in
jge
std
add
aam
adc
xchg
insl
addr16
pop
mov
test
cmp
add
jno
pop
leave
rcll
fadds
push
int3
push
or
enter
push
ss
mov
mov
xchg
lods
sub
lret
pop
xchg
xchg
and
push
jmp
lods
out
addr16
push
enter
popa
rorb
sub
mov
sub
xor
ljmp
aas
call
mov
test
repnz
or
and
dec
pop
cld
sub
add
pop
cmp
and
mov
int3
xor
cmp
xor
cmc
aas
leave
jp
into
popf
and
xchg
inc
sub
or
imul
outsb
mov
inc
movsb
xchg
das
iret
add
mov
mov
arpl
in
mov
push
cmc
cmp
push
les
in
rclb
mov
in
push
ror
adc
inc
out
popa
repz
sbbl
test
insl
and
add
in
fistpl
mov
dec
nop
popf
sbb
and
and
and
and
repnz
mov
dec
cmp
dec
and
mov
daa
std
mov
inc
popf
pop
fidivl
aaa
test
fwait
sub
xchg
inc
test
int3
mov
cld
test
jne
sbb
outsl
inc
cmc
int
mov
push
mov
cwtl
in
adc
or
xchg
cwtl
icebp
cmp
jp
outsl
push
or
in
inc
inc
mov
scas
mov
cld
xor
adc
movb
mov
dec
and
pop
pop
xor
push
es
xlat
pop
xor
iret
pop
andps
dec
int
xor
push
lock
adc
repz
test
dec
mov
mov
push
push
cmp
or
aad
jg
lds
mov
sub
or
je
rorl
xor
jge
call
mov
sub
jl
pop
sbb
adc
insl
movsl
dec
test
dec
cmp
xor
mov
test
inc
test
ds
push
push
mov
loopne
or
jns
mov
sub
fildll
sbb
xchg
hlt
repz
leave
test
add
inc
jne
scas
daa
loopne
xlat
push
inc
lods
adc
iret
sbb
inc
scas
je
pop
data16
dec
jb
mov
int3
mov
adc
sbb
mov
testl
and
int3
outsb
test
pop
repz
push
xor
js
rcll
lea
sbb
mov
call
rorl
inc
inc
xchg
hlt
add
mov
sahf
pop
dec
fcompl
rcrl
jp
sbb
xchg
mov
je
jle
lahf
dec
cltd
mov
mov
adcb
fsubl
and
insl
and
push
inc
dec
out
add
shll
sub
xchg
dec
push
fcmove
dec
push
adc
pop
fs
shrl
jmp
pop
aad
and
pop
sbb
mov
ja
xor
andl
setg
inc
gs
mov
mov
mov
dec
mov
aam
dec
sarb
or
popf
repz
xchg
mov
in
fldl2t
nop
xor
sub
test
enter
sarb
in
fists
inc
add
notl
ret
hlt
cmpsl
cmp
enter
mov
fdivrl
ret
imul
dec
sbb
push
jecxz
ljmp
adc
andl
mov
lret
repz
incb
push
and
push
push
dec
xchg
xchg
rclb
je
inc
dec
adc
lret
test
fstps
xor
add
int3
ret
dec
cmp
jl
mov
nop
shrl
pop
stc
sbb
loop
sbb
xor
imul
test
fnstenv
cmp
push
aas
jp
sub
xor
loope
adc
aam
loope
mov
sbb
pop
lods
push
movl
and
and
loopne
adcl
fdivr
shll
rorb
orl
mov
cmc
lret
iret
cmp
cmp
push
or
pop
sbb
punpckldq
js
aad
stos
nop
push
lea
jne
xchg
jge
sub
cld
and
and
add
push
imul
adc
mov
sarl
popa
pop
add
pop
sbb
inc
ficoms
stos
hlt
inc
loope
mov
xchg
xor
jmp
and
mov
add
cmpb
or
imul
les
dec
lea
es
scas
pop
pop
pop
push
dec
stc
pop
shr
and
jecxz
push
cld
inc
jo
pop
insb
std
jle
dec
adc
fsubrl
cmc
into
cmp
icebp
pop
or
popa
cmc
mov
jmp
xor
sub
aam
insl
sub
adc
movsb
dec
xor
mov
cmp
pop
stos
iret
ja
and
shlb
or
and
dec
stc
leave
cwtl
jmp
and
adc
jnp
pushf
pushf
aam
adc
pop
shr
sbb
and
loope
insb
mov
pushl
std
cmp
lea
mov
add
xchg
sbb
imul
adc
push
call
fnstcw
cmp
test
and
js,pt
ja
cmc
dec
mov
cld
mov
pop
shrl
lahf
mov
ret
adc
jb
lea
mov
movswl
cmp
mov
call
add
cmc
mov
cmp
lret
pop
fwait
cltd
jl
mov
pushf
sub
pop
sub
mov
jnp
add
xchg
repnz
dec
pop
arpl
cmp
mov
test
add
test
sbb
js
push
test
testl
movsl
pop
popf
int3
mov
xchg
or
fimull
repnz
sub
xchg
dec
xor
jp
cli
pop
and
add
sbb
fdivrs
scas
xor
mov
enter
test
xor
push
mov
shll
add
sbb
dec
stos
xchg
pushf
ficoms
and
inc
insb
jmp
pop
xchg
mov
mov
lea
sahf
enter
ror
test
push
sbb
adc
fidivs
or
push
inc
shlb
and
les
lret
test
cmp
mov
adc
into
ret
add
push
sahf
or
add
push
sub
repz
inc
js
or
add
xlat
daa
rorl
icebp
test
dec
xchg
cld
mov
sub
fnstsw
xor
inc
jno
adc
jg
xchg
movsl
cmc
jns
dec
sbbb
and
leave
pusha
in
and
jb
aam
xor
push
shlb
mov
mov
sub
push
jge
xor
pop
int
out
dec
jl
loope
cli
fldl
enter
nop
push
rclb
hlt
and
jb
xor
outsb
fwait
mov
sbb
inc
aas
cmp
dec
ret
or
loopne
mov
cmp
inc
std
sub
fldl
inc
pop
sub
ja
ret
outsl
sub
xor
xchg
movsl
movsb
in
ljmp
xlat
xchg
ljmp
lret
mov
ljmp
hlt
or
or
push
pop
dec
outsl
test
dec
add
and
icebp
mov
ret
add
dec
push
lahf
loopne
stc
loopne
push
sub
mull
les
or
addr16
lret
in
dec
nop
psubsb
stos
pop
mov
mov
add
sbb
xor
cs
int
hlt
and
push
push
rcll
dec
inc
jp
insb
insb
daa
cmc
adc
or
aad
and
and
out
dec
pop
mov
popa
loopne
cli
dec
jmp
pop
cmp
aad
push
mov
xor
mov
fwait
pusha
test
insl
inc
and
dec
or
aas
pop
cs
push
into
mulb
mov
popf
mov
int3
push
mov
or
mov
test
push
lods
sub
ds
mov
adc
push
push
and
or
sti
stos
add
sbb
mov
dec
mov
jg
inc
aaa
repz
repz
push
sarb
out
test
aaa
out
outsb
and
or
scas
cmp
or
jne
fcoml
sub
inc
fld
or
or
mov
add
or
mov
jmp
enter
sbb
inc
inc
repz
lahf
xor
fistpll
mov
cmp
jo
aad
inc
in
lea
xor
and
sbb
or
mov
stos
inc
loop
sbb
arpl
add
mov
mov
nop
sti
loope
gs
jbe
cli
lods
pushf
int3
or
cmpsb
xchg
xchg
inc
je
sbb
movsb
lock
imul
mov
cmp
rorb
nop
mov
xor
dec
ret
mov
xor
movsb
jmp
inc
test
repz
dec
test
fld
mov
std
xchg
add
mov
cmpsl
mov
lods
dec
pop
xor
aas
insb
push
pop
lock
adcl
jg
mov
sbb
out
mov
int
sub
inc
add
movsl
or
mov
stos
xlat
add
mov
sbb
popf
sbb
mov
or
push
jge
cs
add
adc
loopne
cmp
sbb
add
mov
push
inc
or
rcll
stc
jl
mov
push
inc
xchg
js,pn
pop
jns
inc
stc
cmpsb
inc
mov
push
fnstsw
dec
iret
and
leave
dec
lods
mov
sbb
xchg
or
dec
xor
cmc
adcl
cmpsb
cmpsb
ret
pop
aaa
test
enter
pusha
mov
fisubrs
pop
jg
pop
adc
mov
sarb
sbb
jl
cs
out
pop
std
jno
inc
mov
cwtl
inc
jg
hlt
mov
mov
js
mov
fstps
lahf
or
push
fstps
out
and
mov
inc
push
enter
imul
je
rcrl
je
dec
sub
btc
mov
cmpsb
mov
popa
jne
mov
xor
push
mov
mov
and
es
ret
sahf
pop
inc
push
cld
jmp
subb
adc
jecxz
inc
pop
notb
repz
xor
movsb
faddp
into
stos
mov
mov
inc
cmp
insb
fidivl
inc
loopne
mov
call
std
pop
jg
add
bound
jge
fcoml
xor
or
rol
xlat
dec
push
mov
call
fprem1
pop
fnstcw
push
movsb
or
sbb
jp
cmpsl
and
xor
and
clc
sub
sti
leave
scas
imul
or
xchg
out
or
ret
jns
jecxz
xor
push
dec
cmp
adc
adc
icebp
cmpsb
movsb
dec
sarl
rclb
sub
xor
mov
sarl
dec
sub
sub
xchg
rorb
pop
dec
jne
mov
add
fisttpll
out
ljmp
inc
mov
xor
pop
xchg
jecxz
cltd
push
jae
arpl
mov
cwtl
stc
mov
jne
iret
mov
xchg
or
mov
iret
dec
inc
lock
pop
xor
mov
imul
cmpsb
mov
jo
xor
add
jo
jge
adc
pop
lods
cld
adc
into
cmpsb
int
dec
out
jmp
adc
jecxz
inc
or
add
jmp
xor
xor
fdivrl
in
js
adcb
fdivl
adc
lock
mov
push
push
sbb
mov
ja
dec
xchg
ret
add
cli
inc
mov
dec
cmp
dec
xor
sbb
jns
insl
adc
shll
clc
ret
mov
mov
loope
sub
clc
jp
fcoml
and
mov
xor
xchg
roll
lret
mov
ret
iret
push
mov
jmp
out
mov
fcomip
pop
pandn
int
push
jl
cld
fdivr
add
test
pop
sbb
mov
stc
xor
sub
inc
lds
xchg
arpl
pop
jne
jnp
jbe
insb
xor
pop
cld
cli
not
or
lahf
xor
mov
rclb
int
and
pop
mov
mov
cmp
and
jo
mov
or
or
or
nop
inc
pushf
fadd
sbb
dec
push
and
adc
je
xor
adc
xor
jge
out
push
cwtl
pop
jae
mov
int3
mov
mov
insl
ret
repnz
xor
and
frstor
dec
das
in
cmp
mov
out
idivb
cmp
xchg
mov
lds
pop
jecxz
mov
push
mov
xor
je
sbb
pop
insl
pop
sub
pushf
jne
add
dec
ljmp
fs
xor
scas
ljmp
flds
mov
lods
dec
mov
mov
inc
cmp
das
es
add
jg
mov
or
movsb
jno
sahf
adc
pop
shrb
pop
mov
in
xor
int
mov
pop
push
ficomps
lock
dec
in
jo
fbstp
push
int3
out
mov
fistpll
flds
inc
cmp
xor
sbb
mov
mov
mov
push
jmp
add
adc
sub
pop
pop
jns
sub
cmp
in
pop
mov
and
ja
cmp
lcall
loopne
sbb
fistpll
push
lock
repz
sub
cmc
sub
scas
push
out
inc
xor
and
test
dec
add
insb
test
mov
fsubl
sahf
xor
xor
xor
cld
mov
xor
fcompl
sub
incb
xchg
fdivr
ss
or
cmovle
imul
push
aad
xchg
xor
add
xor
repz
cld
stos
xchg
and
in
adc
cmp
sub
dec
shrb
mov
jp
dec
jne
pop
cmp
stc
sub
and
sbb
push
adc
adc
test
sbb
insb
faddl
cmp
sbb
xor
shlb
adc
xor
pop
test
mov
inc
arpl
jb
lahf
or
sub
adc
cmp
inc
movsl
adc
mov
fcompp
popa
push
fs
sbb
cmp
push
xchg
dec
mov
xchg
or
idivl
cmp
sub
push
xor
outsb
sbb
out
or
in
xchg
jmp
mov
lds
aad
sarb
hlt
je
mov
test
jo
add
xchg
mov
mov
push
adc
fisttps
push
pushf
pusha
in
insl
cmpb
sbb
add
jge
mov
cmp
and
int3
pusha
cmp
add
pop
sub
stos
nop
mov
clc
stos
cmpl
xchg
jg
movsl
aam
or
dec
insb
cmpsl
mov
out
outsl
and
popa
pop
sbb
dec
inc
flds
cmp
mov
fs
add
or
inc
das
stc
dec
xor
ficoml
jle
fistpll
fidivrs
mov
adc
lods
or
insb
or
cmp
data16
stc
sub
dec
int
pushf
xlat
adc
dec
push
ds
mov
inc
push
out
xchg
jmp
jo
out
movsl
push
xchg
bound
adc
movsb
repz
add
notb
iret
lods
cmp
in
mov
mov
adc
xor
mov
fs
std
add
xchg
daa
and
add
and
lahf
in
sub
cmp
leave
pusha
js
cld
inc
sbb
loop
lcall
pop
adc
sbb
scas
and
add
js
lds
dec
sub
cmpb
fnstsw
jae
ret
test
cmp
aam
sbb
out
lahf
sbb
shrl
inc
ja
dec
mov
xchg
incl
jecxz
or
xor
or
std
push
jle
jmp
and
sbb
pop
push
cmp
sbb
adc
dec
jp
mov
dec
push
pop
int
inc
test
sub
mov
jl
or
push
or
jl
in
or
lahf
pop
in
add
js
pop
dec
ss
sbb
mov
lcall
es
test
jo
push
and
push
in
bound
add
movsb
jo
in
repz
sbb
xor
cmp
adc
cmp
push
out
test
pop
mov
adc
adc
push
push
ds
int3
call
pushf
rorl
jl
lods
mov
mov
mov
and
movsb
sub
lahf
out
inc
xchg
dec
or
jl
push
sbb
insb
in
hlt
pop
movsb
and
popf
mov
ret
add
dec
cmpsl
pop
fdivrp
std
sub
mov
aad
aam
ds
test
mov
sbb
lock
add
mov
sbb
je
push
add
pusha
mov
xor
loopne
iret
pushf
pop
int
popf
outsb
rclb
mov
jmp
mov
cs
aam
cld
mov
mov
insb
inc
js
stos
cmpsb
or
lret
push
filds
es
loopne
cmp
mov
adc
inc
mov
sbb
xchg
add
mov
or
pop
sti
or
xor
mov
ret
cld
cmp
imul
xor
inc
test
and
lahf
js
int
xchg
popf
scas
dec
scas
and
mov
mov
pop
xor
out
adc
cmp
fs
or
into
jns
pop
push
fiadds
mov
cwtl
pop
outsl
ss
mov
and
sub
sub
outsl
imul
test
shll
sub
orl
or
bound
sarb
insb
mov
iret
in
xor
jb
mov
xor
pop
push
std
lds
arpl
in
std
dec
stos
popf
test
adcb
mov
fistpl
test
add
lahf
pop
in
lods
fistpll
sbb
xor
xchg
lcall
test
cmpsb
jno
or
orb
ljmp
sub
shlb
scas
movsb
mov
cmp
push
push
lea
adc
lahf
jae
xchg
cmp
addr16
add
cli
and
jl
repz
lcall
mov
test
cs
sbb
inc
sub
xchg
arpl
or
std
push
and
xlat
inc
mov
repz
jmp
and
insl
inc
push
jl
pushf
add
mov
int
fsts
leave
xlat
test
jge
mov
mov
and
notl
in
lods
lahf
into
dec
pop
inc
sarb
iret
sarb
pop
aad
jmp
mov
xor
pop
and
ror
les
pop
decl
in
js
jne
aad
cmp
rcrb
leave
mov
fdivrl
pop
mov
pusha
lds
inc
orb
mov
sub
repnz
bound
or
int
jmp
add
cltd
ret
lahf
adc
xor
lods
add
sbb
and
pusha
cmp
inc
out
dec
test
lods
add
adc
cmp
and
add
popaw
or
mov
mov
loopnew
push
jns
lahf
rorl
mov
bound
jae
inc
aam
sbb
icebp
sub
ret
int
scas
pop
movsl
adc
jg
popf
mov
fs
jge
nop
mov
int3
dec
inc
xchg
and
daa
cmc
les
sbb
pop
fildl
repz
xchg
call
pop
std
iret
dec
dec
loop
add
add
or
cmp
std
sub
pushf
rcll
loopne
adc
jl
mov
nop
or
xor
loopne
push
push
clc
pop
pop
fidivrl
sub
jns
addr16
andl
mov
aam
sub
jecxz
xchg
sbb
cmp
inc
jns
addl
inc
or
jo
pop
insl
daa
leave
or
push
sbb
cmc
test
int
mov
mov
add
dec
or
pop
lods
mov
shll
cmc
lahf
xor
lods
xchg
push
pop
ffreep
cmp
lahf
mov
addr16
testb
test
mov
adcl
cmp
fisubrs
out
aas
pusha
icebp
xor
mov
les
inc
push
mov
movsl
jp
std
or
insb
test
and
push
cs
stc
push
lods
dec
std
pop
sbb
pop
and
pop
cld
testb
sbb
pop
stos
jae
cld
adc
stos
imul
mov
pop
or
dec
add
xor
xchg
movl
ljmp
cmpl
mov
or
mov
pop
mov
lahf
fcomp
add
mov
mov
in
aaa
dec
sahf
cltd
and
push
mov
xor
or
or
inc
movsb
pop
shr
sub
mov
inc
imul
sbb
push
lea
jne
rol
adc
xor
cmc
hlt
test
aas
les
sbbl
push
outsl
ljmp
push
push
hlt
cmpsl
shll
fsubrp
mov
push
fimull
dec
dec
jg
or
mov
cwtl
mov
popf
mov
xlat
add
adc
sbb
pusha
sub
adc
out
dec
popf
cld
outsl
int
fnstsw
gs
mov
cmp
sbb
jns
subb
pop
nop
jge
push
lods
pusha
sbbb
xor
int
popf
pop
mov
add
scas
popa
cmp
popa
sbbb
popf
pop
adc
pop
push
fcomps
or
popf
cmp
pushf
jl
cmp
popf
lods
mov
or
cmp
movsl
adc
and
cs
loopne
cld
push
sbb
push
xchg
adc
in
test
pop
pop
dec
lea
outsb
cmpb
pop
pop
jmp
push
jnp
scas
bound
out
jne
lcall
ret
push
or
jle
mov
xor
pushf
dec
mov
cld
pop
xor
mov
jb
cmp
and
in
jbe
and
add
mov
nop
xor
lahf
dec
aaa
inc
sub
mov
push
and
inc
cli
enter
rcrl
fistpll
dec
sbb
sbb
sbb
cwtl
lea
lods
pop
cmp
dec
addl
sbb
jmp
mov
sub
test
incb
bnd
dec
push
sarb
orb
xor
iret
sbb
push
insl
test
loope
inc
or
outsl
sbb
or
pushf
dec
xchg
incb
push
pop
dec
loop
insb
lods
scas
push
jl
jmp
mov
mov
lahf
ds
and
push
shl
jno
sub
aaa
mov
dec
xor
mov
sub
push
sbb
xor
cld
pop
cld
cmc
faddl
arpl
rolb
sbb
pushf
sbb
cwtl
ss
cmp
cmpsl
add
pop
sti
inc
daa
sbb
add
call
mov
sbb
fldenv
nop
and
xacquire
jl
mov
pop
lea
jnp
out
cmp
xchg
lea
movsl
ds
xchg
and
cmp
jl
stos
sub
stc
pusha
dec
mov
sbb
push
outsl
popa
out
js
sbb
jg
add
xchg
lret
stos
mov
sub
aam
dec
pop
lds
cmp
push
lret
aad
cmp
rclb
test
lcall
sub
push
jns
sbb
pusha
dec
and
cli
pop
fcomps
scas
xor
mov
mov
int3
inc
das
push
mov
dec
xorb
ret
sbb
setne
mov
sbb
nop
out
inc
int3
jnp
stos
sub
cmp
fsubrp
adc
shrb
or
cld
and
mov
pushf
int3
or
or
mov
or
pop
or
mov
sub
into
pop
push
dec
xchg
or
jle
xchg
sbb
xor
sub
xchg
lods
rcll
or
mov
es
sbb
add
pop
int
stos
adc
xor
jne
das
xor
sbbl
or
or
loopne
sahf
cmp
jne
iret
test
pusha
cld
enter
push
mov
add
xor
add
cmp
ret
jnp,pt
repnz
dec
sbb
cmc
or
jno
outsl
insl
sub
movsb
sar
and
mov
cld
sbb
sbb
test
outsl
fcmovnb
pop
mov
jo
mov
sub
lods
xchg
inc
add
es
movsb
ret
lret
jge
mov
pushf
dec
xor
sub
movsb
sbb
inc
jmp
aad
add
cmp
fwait
out
xor
mov
and
into
movsb
es
pop
cmc
aam
in
adc
andb
sbb
dec
rep
dec
nop
fcos
xor
or
hlt
dec
inc
inc
push
fdivl
jge
icebp
mov
inc
sbbl
push
in
fidivrs
inc
ss
mov
jecxz
insl
je
stc
int3
inc
pop
dec
cs
ljmp
adc
xchg
push
data16
pushf
add
mov
mov
xlat
jmp
js
daa
push
cmp
pop
jge
sbb
jp
cmp
mull
adc
and
mov
daa
sbb
mov
add
push
sbb
insb
adc
push
cld
sbb
xchg
inc
inc
add
andl
ja
mov
loopne
out
out
shrb
sub
pop
cmp
idiv
std
out
cmp
and
push
mov
lods
sbb
add
bound
bound
lods
xor
enter
mov
sbb
sarb
adc
mov
sar
rol
xchg
inc
inc
mov
pop
jp
into
or
fmull
repnz
push
into
orl
push
and
mov
fisttpll
cmp
xchg
loope
sub
lahf
dec
push
bound
mov
inc
push
rolb
ljmp
lock
outsl
and
pop
push
fsubrl
int
imul
dec
push
pop
dec
test
mov
sbb
popf
pop
insb
push
mov
shr
jns
insb
popf
push
dec
mov
rol
jge
jp
cld
cld
sub
add
hlt
loop
hlt
mov
cmp
pop
dec
dec
out
lahf
or
sub
das
movsl
mov
cmp
and
pop
jnp
jae
and
dec
pop
pop
ret
or
sub
ja
andl
fidivrs
push
sub
into
call
cmp
popf
xor
pop
js
sub
ds
enter
out
and
add
jns
xchg
sub
mov
pop
minps
data16
cmp
and
lahf
xchg
test
mov
lock
fucomip
shl
jb
mov
mov
fbstp
cmp
insb
inc
push
mov
and
mov
inc
sub
mov
imul
iret
dec
sub
loope
ljmp
loop
and
sub
pop
inc
outsl
pop
xchg
push
popf
stos
cmp
cltd
stos
cmp
push
xor
sbb
sbb
inc
movsl
or
pusha
push
lods
push
adc
les
and
adc
cmp
and
data16
test
or
pop
xlat
add
call
cmp
mov
fcmove
in
sbb
mov
cltd
inc
ds
mov
cmp
loopne
dec
and
test
adc
test
lret
aaa
inc
cmp
xor
inc
pushf
lahf
mov
and
mov
lcall
sbb
pop
add
add
jle
es
std
les
ds
mov
cmp
xchg
cmp
stos
mov
jno
push
inc
mov
out
jne
sbbl
in
pusha
push
fmul
lahf
imul
push
outsb
cmp
sahf
cmp
js
mov
lahf
std
popa
xor
fldcw
or
or
and
mov
in
shrb
movsl
xor
fcomps
sub
mov
pop
adc
ljmp
mov
cld
das
cli
pushf
lods
mov
inc
sbbl
xlat
or
inc
or
rorl
sbb
add
pop
push
jl
cmp
push
cmp
xor
addb
jle
je
sub
int3
fadds
inc
adc
dec
dec
inc
push
cmp
or
int3
mov
mov
jle
cmp
xabort
sub
cli
mov
or
outsl
add
test
popa
and
outsb
and
lock
mov
in
inc
or
and
lret
popa
push
in
outsl
in
sahf
jl
cwtl
sahf
add
xorps
fisttps
xchg
std
bndstx
jno
xchg
sbbl
lock
sbb
insb
xchg
add
and
je
ds
mov
push
iret
fs
cmpsb
or
and
adc
rorl
inc
dec
inc
or
inc
test
push
fcmovbe
mov
push
xor
or
jne
pop
mull
in
lahf
scas
inc
add
or
mov
adc
inc
push
sbbl
inc
mov
clc
clc
call
lret
push
inc
jmp
fstl
in
adc
ret
mov
adc
inc
or
or
cmp
addr16
ljmp
mov
mov
jp
or
sbb
lods
xchg
bound
and
jg
scas
sub
cmp
int
ret
cmp
addb
in
adc
xor
push
jo
cmp
cmovae
mov
sub
fstpt
cmp
push
mov
sbb
scas
imul
cmove
mov
and
pop
rol
imull
inc
push
xchg
inc
into
cmpsb
push
stc
push
push
mov
cmp
call
add
lea
cs
sti
inc
ds
pop
jo
int3
push
ror
push
adc
test
xchg
rolb
es
mov
nop
jno
int
sbb
mov
push
fcmovnb
fcoml
xchg
lock
mov
mov
fs
divb
aam
in
ljmp
sbb
mov
mov
sub
fistpll
push
dec
add
add
cmp
pop
and
popf
cltd
xor
aam
jno
rcrl
sub
popa
in
jne
test
imul
pusha
xchg
into
jae
je
adc
test
inc
push
xor
pop
test
and
add
jae
stos
dec
push
dec
and
lret
lods
shrl
mov
rcl
mov
jns
fldl
pushf
iret
sub
sub
or
jge
scas
cmp
icebp
nop
push
xchg
and
scas
ficomps
test
cmp
mov
push
adc
loopne
adc
movsb
adc
dec
pop
cmpsb
mov
fmulp
mov
mov
push
jp
cs
insl
mov
add
mov
xor
adcl
sbb
pop
cwtl
nop
sub
xor
sub
fmuls
int
push
lahf
imul
pop
or
dec
lea
cmp
jae
or
or
jl
data16
dec
pop
cmp
cmc
pop
jl
jne
sbb
mov
insb
xor
stos
stos
es
pop
les
xchg
loop
dec
dec
stc
call
ficomps
pop
sub
mov
push
les
cltd
and
mov
lcall
mov
scas
inc
push
loope
jo
mov
sub
push
lahf
cmp
sahf
cmpsl
bound
ds
jne
xor
in
ljmp
mov
popa
ljmp
sub
or
xor
mov
jge
pushf
jge
arpl
aad
lea
fwait
mov
mov
rcrl
add
xchg
test
ss
mov
scas
sahf
cmp
fmull
sbb
inc
clc
dec
int
pop
fs
or
popl
push
iret
mov
jg
pushf
dec
add
inc
bound
dec
push
add
mov
add
mov
pop
stos
pushf
inc
xorb
mov
add
add
imul
fcomps
or
push
in
xor
dec
or
nop
pop
pop
movsl
add
enter
cli
adcl
ja,pt
sub
pop
inc
and
jne
out
insl
out
out
and
push
loopne
fsubr
and
jge
fstpt
push
enter
adc
pusha
or
mov
dec
xorl
inc
push
icebp
inc
rclb
nop
pop
mov
xorl
popf
inc
lock
jecxz
ja
pushf
xor
nop
mov
jl
leave
push
and
inc
jmp
xlat
add
mov
fcmovnu
jnp
ljmp
dec
std
cwtl
shll
lcall
mov
cmp
mov
cmc
ret
sahf
divl
or
es
push
add
cmp
add
enter
inc
mov
aad
pop
inc
add
popf
in
sub
stos
mov
popf
pushf
hlt
mov
imul
stc
sub
push
mov
mov
push
mov
lods
lcall
in
cmpsb
out
push
popf
lahf
sub
das
inc
rcll
mov
push
mov
popf
mov
cmp
push
cwtl
clc
add
daa
dec
cmpsl
loop
je
fs
cmp
sahf
cld
jnp
leave
pop
sub
add
mov
sub
not
xchg
xchg
cmp
and
or
and
gs
adc
xor
dec
aam
pop
inc
sub
popa
mov
and
ret
cmp
xor
fbld
outsl
iret
sahf
lods
shl
xchg
jp
insl
or
dec
mov
add
das
int3
addr16
adc
mov
movsb
sbb
dec
fisubs
fstps
shrl
xor
mov
cmc
hlt
mov
cld
loopne
int3
int
jge
pop
sbbb
mov
aaa
dec
sub
add
iret
cmp
inc
xchg
xchg
mov
imul
cmp
and
lahf
inc
lret
cmpb
mov
into
pusha
jg
stos
jbe
xchg
scas
lods
fsts
std
stos
cltd
sbb
inc
push
dec
mov
mov
cmp
add
sarl
loopne
sbb
push
adc
pop
inc
movsb
test
push
repz
pop
loop
add
push
mov
movsb
pop
enter
loopne
xchg
rolb
xor
push
rcl
cwtl
js
aam
sarb
jg
ds
icebp
xchg
adc
push
push
inc
stos
mov
and
icebp
push
cmp
pop
in
sbb
push
inc
jle
push
mov
and
and
out
fidivrs
testl
push
rorl
add
or
sbb
sub
xor
or
mov
cld
scas
inc
add
cld
xchg
push
mov
sbb
mov
pop
sub
repz
js
dec
stos
aad
jae
dec
adc
movsb
outsb
lret
xchg
add
xchg
insb
cli
out
cld
pop
jg
jecxz
pop
mov
and
leave
sbb
pop
mov
mov
cmp
and
lea
in
adc
xor
pushfw
xor
xor
sahf
push
lock
push
add
push
mov
fistpll
and
das
flds
sbb
mov
pop
dec
inc
sbb
icebp
or
adc
mov
cmc
mov
popa
adc
inc
pop
cmp
sbb
jl
jmp
aaa
push
inc
or
fildl
repz
out
les
nop
sti
xor
stc
loope
test
add
cmp
lea
jmp
fadd
in
dec
pusha
xchg
nop
xor
out
lret
shll
std
leave
in
adcl
lcall
add
sbb
out
add
sbb
or
dec
mov
data16
mov
jl
mov
mov
in
pushf
shll
sbb
pop
mov
inc
xor
mul
into
fcompl
shrl
xlat
sub
decb
inc
adc
or
jg
ret
sub
ljmp
lret
jno
movsl
icebp
inc
mov
loopne
insb
cmp
popa
push
pop
call
pop
lcall
in
call
push
sarl
adc
call
xor
sub
cvttps2pi
shrl
xchg
stos
push
fstpl
fimull
cmp
sub
add
jle
in
pop
xor
enter
add
loop
lds
imul
addr16
hlt
or
sbb
ss
push
insb
stos
xor
movsl
repz
cmpsb
pop
adc
sub
lods
inc
mov
sbb
fiadds
and
cmp
pop
pop
add
dec
add
in
mov
cmp
lock
push
add
sub
or
notl
hlt
or
add
push
mov
notb
mov
ja
mov
and
mov
cld
dec
fsubs
xchg
cmpsb
outsl
lahf
test
pop
popf
subb
lahf
cmpsl
enter
aas
sarl
and
pop
mov
sbb
imul
movsb
dec
lahf
xor
pop
jle
fstpt
jno
cmp
movsl
or
adc
dec
dec
or
cmp
clc
or
ljmp
cmp
push
jp
imul
adc
add
fmul
dec
xor
and
fcomi
sub
xchg
int3
andb
dec
fwait
and
sub
and
loop
bound
cmp
sub
int
mov
and
ret
pop
popf
lods
and
fdivl
adc
imul
xlat
add
aas
push
mov
popa
and
je,pt
pop
cmp
sbb
es
dec
mov
inc
push
sbbb
mov
and
addb
sub
xor
adc
xor
or
pop
imul
divl
popa
fninit
ret
sbb
shlb
ret
sub
ljmp
mov
mov
pop
add
jp
lahf
dec
lahf
jne
mov
cs
mov
jne
dec
or
test
pop
pop
std
xchg
and
ljmp
sbbl
inc
leave
add
movsl
pop
push
inc
mov
sub
or
outsb
inc
mov
pop
adc
mov
mov
xchg
or
add
arpl
jecxz
dec
ljmp
enter
or
lds
adc
and
or
jge
push
push
xchg
or
push
aad
nop
sbb
popa
lret
popf
and
adc
lret
jns
aam
data16
dec
add
in
mov
or
xchg
pop
pop
test
repz
and
mov
sub
popf
icebp
nop
testl
daa
push
pop
jge
sti
int3
push
subb
popf
inc
or
mov
imul
pop
fldt
sub
lods
popf
movsb
xor
cld
xchg
mov
pop
andb
leave
dec
loop
xchg
inc
inc
mov
cmpsl
pop
xor
dec
in
sub
jno
lahf
in
nop
pop
out
fmull
sub
dec
xor
sub
pop
stos
into
test
jns
add
ret
icebp
sbb
pop
pop
sub
adc
push
test
mov
jo
xchg
add
add
cli
pop
add
daa
icebp
mov
dec
lods
ljmp
cmc
pusha
and
mov
hlt
pop
cmp
rcrb
rcrl
push
xchg
and
mov
fs
jle
mov
enter
cmp
lds
popf
mov
or
clc
loopne
push
ja
scas
adc
pop
cld
cld
scas
add
add
adc
xlat
ds
add
popa
adc
push
roll
cmc
adc
leave
cmp
add
movsl
test
mov
in
mov
mov
enter
inc
xor
call
outsl
and
sub
sub
sub
mov
cwtl
loop
bound
inc
sub
das
add
lock
jg
pop
imul
fldl
jae
adc
push
or
psrlw
cmp
and
and
add
mov
in
cwtl
rorb
jno
das
and
dec
push
and
std
mov
jne
stos
cmp
divb
inc
cmp
sahf
out
or
ficomps
in
add
mov
cmc
dec
fidivl
or
push
loop
hlt
cs
cmc
add
sbbl
nop
out
mov
push
fisubrl
push
fs
cmp
push
lea
stos
mov
ret
rolb
dec
cmp
adc
outsb
in
xchg
stos
shll
mov
xor
outsb
enter
inc
mov
ds
pop
sub
mov
repnz
mov
adc
movsb
imul
enter
inc
push
and
push
popw
sbb
add
stos
in
pop
or
out
mov
rcll
notl
sbbb
inc
jl
test
cmp
inc
fcmove
les
mov
mov
cmp
xchg
push
add
jge
dec
stos
incl
mov
inc
adc
xchg
inc
mov
lods
dec
add
call
clc
pop
fnsave
std
loop
jl
das
int3
dec
or
pop
and
mov
inc
add
pop
pushf
mov
push
inc
fistpll
stos
jnp
cwtl
and
lahf
sbb
or
add
lcall
cmp
adc
rcrl
sarl
fbstp
pop
inc
sbb
fcomip
xchg
adc
aad
scas
pop
fs
mov
ret
add
sbb
scas
insl
sti
sti
in
pop
ret
movb
and
popl
push
add
mov
test
dec
mov
mov
xchg
xchg
inc
movsl
push
push
andl
sub
xor
sub
icebp
mov
add
rclb
aas
cld
sbb
dec
je
pop
xchg
stos
mov
in
xchg
cmp
and
lret
mov
sbb
int3
loop
adc
add
fwait
lcall
xchg
bound
sbb
es
stc
ds
pop
call
subl
pop
xchg
cmpb
int3
push
sbb
cmc
inc
mov
out
cmp
dec
mov
test
stc
in
out
pop
cmpsl
xchg
orb
imul
pushl
rcll
sub
popf
mov
pop
and
je
pop
mov
mov
out
mov
shr
add
test
data16
xor
mov
adc
arpl
mov
jge
sub
add
cmp
xor
ret
inc
mov
sbb
add
aas
mov
lock
dec
sbbl
frndint
fst
push
pop
cmc
inc
dec
cmp
nop
out
sahf
jl
inc
lahf
std
push
es
pop
and
pop
jns
test
xlat
ret
daa
test
loopne
xchg
mov
nop
std
xor
dec
adc
cmp
xor
push
pop
mov
test
mov
push
mov
jl
cmpsb
sub
add
mov
cmc
rolb
shr
call
mov
mov
ljmp
std
jmp
push
add
cli
mov
xchg
xchg
iret
push
dec
and
int3
mov
mov
pushl
sbb
push
jae
sbb
adc
in
xchg
xchg
stos
mov
push
push
jl
stos
mov
mov
fwait
sbb
push
xchg
sbb
ja
nop
or
sti
xor
jo
xchg
ja
push
jo
frstor
adc
pop
add
out
mov
xor
pop
xchg
and
xor
add
fisubs
xor
shr
ds
je
arpl
inc
lahf
shll
out
mov
mov
lret
mov
xchg
orl
subb
data16
inc
jge
cmp
cwtl
jl
sti
pushf
lea
and
dec
nop
fldl
pop
jb
fnstsw
push
out
jo
lds
dec
sub
sbb
jno
hlt
xor
inc
jno
test
addl
test
inc
dec
and
dec
shr
sbb
sub
adc
mov
dec
xchg
mov
shll
dec
test
dec
bound
mov
lahf
pop
mov
add
add
jne
dec
bound
das
fdivr
stc
mov
lock
jmp
lea
std
mov
xor
add
stos
je
rcll
dec
shll
jne
xor
fisttps
addr16
fnstsw
pop
and
or
inc
in
in
fsub
add
mov
sbb
out
xchg
xor
js
pop
pop
jb
fnsave
insl
add
push
inc
cmp
cli
inc
movsl
adc
jmp
gs
pop
pop
hlt
aam
jb
mov
mov
and
push
jg
stc
xor
adc
pop
xor
and
xchg
xchg
ss
sub
stos
imul
sbb
xor
pusha
jecxz
cwtl
aas
mov
cmp
popa
in
and
or
push
lret
and
inc
and
add
int
int
mov
lahf
ljmp
and
xor
jle
hlt
sysret
add
fiaddl
enter
inc
cmpsb
sbb
and
cld
mov
xor
cld
mov
push
icebp
xchg
ja
mov
iret
js
icebp
fbstp
jne
jg
out
jmp
aad
fs
fcomps
testb
xlat
xor
loop
mov
sub
or
inc
retw
push
jbe
outsl
cmp
xchg
sub
mov
push
divb
outsl
cmp
dec
or
push
xor
sub
dec
aas
sti
fwait
mov
xchg
insb
dec
call
cmp
insl
icebp
nop
jne
sub
aas
push
dec
sbb
or
ljmp
rcrl
aaa
dec
cmp
mov
jno
repz
mov
inc
fsin
cmp
hlt
into
jg
xor
pop
lods
or
pop
and
cmp
inc
xorb
add
add
int
dec
dec
add
adc
dec
add
mov
lods
cli
pusha
idiv
mov
int
dec
add
add
sub
cmc
jl
jne
movsl
mov
loopne
and
push
xchg
add
pop
hlt
adc
or
cmp
adc
lahf
cmp
and
cld
jl
es
cmc
mov
sub
sbb
or
dec
insb
xchg
xchg
inc
mov
enter
out
mov
sub
movsl
sti
inc
lahf
insl
std
push
insb
or
iret
adc
add
push
subb
cmp
test
sbb
dec
push
adc
sbb
mov
lahf
mov
repz
filds
xor
inc
cwtl
mov
jnp
outsb
sbb
fmuls
inc
fsubrs
mov
push
jl
or
push
fcoml
cld
push
test
fisubl
test
sbb
adc
dec
test
inc
cltd
jnp
ja
and
and
sbb
push
sbb
call
mov
stc
in
add
cmp
lahf
hlt
out
outsb
jp
stos
imul
push
push
xor
clc
add
lahf
push
pop
lods
xchg
inc
and
push
mov
mov
pop
lock
sti
dec
fcomps
lret
clc
dec
mov
or
out
jns
adc
int3
sub
adc
jno
addl
pusha
and
sbb
icebp
inc
push
nop
fnsave
dec
pop
sub
sub
cmp
or
and
mov
lods
shll
or
outsl
push
dec
jp
pop
cmpsl
lods
mov
mov
out
pop
sbb
std
xchg
shlb
mov
js
jnp
push
or
int
or
cmp
mov
xor
xchg
adc
mov
push
xor
cmp
mov
push
cmp
ds
adc
dec
lea
pop
fwait
out
jno
jnp
inc
dec
xchg
mov
nop
out
shll
pop
enter
rolb
arpl
adc
dec
rorb
std
pop
mov
shr
xor
cmp
je
pop
js
adc
and
or
pop
lods
repnz
movsl
adc
cmp
adc
cmp
mov
push
aad
xchg
mov
scas
mov
adc
int
sub
mov
adc
repnz
xchg
pop
repz
dec
inc
fs
mov
fs
sub
ja
and
inc
and
sbb
mov
push
loope
dec
xor
sbb
mov
icebp
mov
and
push
js
jmp
jne
and
cmp
add
push
out
or
aas
sbb
dec
js
imul
sub
adc
fnstcw
movsl
adc
das
jg
clc
sbb
jns
sbb
shr
dec
jle
adc
sub
adc
xor
xchg
in
or
xor
mov
cmpsl
push
xor
jo
popf
insb
add
insb
loopne
lods
push
jp
lret
decl
and
stos
jl
mov
pop
rclb
sbb
andl
inc
add
and
push
and
xor
lcall
ds
loopne
and
mov
add
iret
cmpb
push
mov
daa
push
lcall
sbb
push
xchg
xchg
shl
test
iret
xchg
nop
mov
lea
and
mov
pushf
int
sbb
and
mov
sbb
push
pop
or
lods
mov
and
fdivrs
aas
js
sbb
cs
push
rclb
fistl
out
lcall
enter
enter
adcb
or
mov
add
sub
pop
repnz
inc
push
ss
pop
push
call
adc
mov
adc
mov
sti
xchg
fwait
inc
int3
and
sbb
imulb
test
sbb
pop
mov
xchg
mov
and
pop
mov
and
mov
js
hlt
sbb
or
add
push
xorb
push
push
lcall
movsl
inc
pushf
jge
lock
pushf
xchg
cmp
add
xlat
mov
mov
loop
sub
mov
mov
inc
or
dec
inc
mov
xchg
rcr
cwtl
pusha
les
adc
push
jg
das
mov
insb
inc
dec
adc
mov
add
inc
movsb
dec
inc
in
dec
inc
fisubrl
mov
and
jno
testb
outsl
and
out
in
mov
push
push
test
xchg
fucomi
fsubrl
and
push
and
lock
jmp
mov
jno
jb
jbe
arpl
dec
int
mov
ss
pop
sbb
int
sbb
scas
cs
cltd
inc
outsl
inc
cmp
sbb
mov
cmp
stos
add
fsubrs
or
mov
sti
ret
clc
and
dec
cli
in
pop
int3
es
int3
dec
pop
sbb
bound
push
int
inc
scas
fs
jnp
ficoms
rolb
movsl
dec
fcomip
divl
pop
adc
adc
inc
rol
ficoms
and
jge
mov
jae
inc
stos
aas
icebp
out
inc
mov
mov
cmpsl
xchg
push
add
dec
dec
jo
mov
addl
das
mov
pop
jl
xchg
movsl
inc
and
ficomps
or
sub
xchg
mov
mov
addps
mov
sbb
inc
decb
mov
ret
icebp
test
mov
filds
sub
int3
and
mov
loope
enter
scas
mov
pop
adc
repnz
add
es
cli
ss
cmp
or
or
lods
lds
mov
arpl
roll
inc
out
std
or
lret
lods
push
in
and
enter
push
test
fwait
jbe
jae
adc
or
add
mov
push
xor
xchg
push
testl
jno
lds
stos
scas
out
push
fs
inc
popa
popf
mov
mov
pop
sub
dec
pop
mulb
loope
pop
adc
xor
cmp
or
or
dec
and
rep
cmp
lahf
out
mov
call
ror
lea
and
push
push
addr16
pop
add
cwtl
int
pop
shll
les
xchg
sbb
or
cmc
lahf
add
sub
and
xchg
popf
push
testl
xchg
jne
cmpsb
loopne
test
lahf
or
inc
das
shl
xchg
dec
sub
aam
mov
push
int
ss
les
and
mov
xchg
out
dec
mov
sub
jmp
jne
lahf
or
mov
fstl
mov
loopne
sub
mov
sub
scas
fsts
mov
pop
jno
pop
xor
pop
cmp
cs
mov
je
int
sub
insb
or
loopne
pop
ja
fisubs
sub
xor
or
mov
std
fidivs
mov
lea
inc
stc
mov
add
lahf
sub
int
test
pop
pop
pop
mov
mov
add
call
sub
cwtl
je
dec
lods
and
mov
insb
movsl
add
iret
dec
repz
mov
inc
jg
cmova
rorb
push
or
add
jno
stc
mov
mov
lods
sub
push
stos
cs
stc
sub
xlat
add
out
inc
fistl
sub
xor
pop
ljmp
mov
test
push
xor
fldenv
std
nop
lahf
in
pop
aam
add
stc
cwtl
daa
add
and
xchg
sub
cmp
into
lds
sbb
in
mov
mov
outsl
call
or
or
pop
cmp
mov
cmp
inc
gs
mov
stc
xor
lods
or
popa
movsl
in
in
sbb
inc
pop
mov
xlat
nop
lret
aaa
ds
adc
or
xchg
cld
xor
jl
add
pusha
and
test
negl
xor
add
movsl
rolb
cmp
divl
popf
repnz
jae
mov
and
pop
jecxz
mov
int
ds
dec
inc
pop
push
mov
pusha
shl
sbb
cli
push
cmp
dec
pop
adc
scas
xor
sub
orb
mov
xchg
test
sub
fnstsw
js
mov
adc
mov
in
out
dec
hlt
pusha
lods
lock
in
ficompl
in
adc
jp
sbb
sbb
fdivrl
pop
jae
test
xor
sbb
push
mov
or
dec
out
ds
or
aas
jne
mov
dec
xlat
pop
or
in
fbstp
cli
sub
mov
mov
loopne
repz
sti
jne
adcl
xchg
aas
push
rcrl
sbb
adc
testb
out
jne
inc
in
test
stc
aam
fs
mov
jne
or
push
andl
movsl
or
fisttps
addl
xor
cmc
mov
outsb
jl
pop
pop
stc
mov
adc
push
or
int3
fsts
xor
popf
mov
dec
popa
daa
fwait
and
repnz
lret
int
dec
sti
sub
xchg
and
sub
popa
mov
and
ficompl
jmp
dec
inc
cld
int3
stos
jae
aas
les
mov
inc
aad
adc
clc
bound
jne
inc
std
mov
fcomps
jg
outsb
cmp
add
jl
pusha
jl
dec
cmp
ret
cmc
sbbl
inc
pop
icebp
gs
daa
dec
movsl
inc
push
inc
into
fstl
push
ret
sbb
cmp
stos
nop
std
rcrb
into
xchg
and
sub
mov
stc
jl
fcomi
aas
nop
mov
icebp
and
stos
push
push
mov
jecxz
sahf
rclb
and
iret
int
xlat
btc
jo
psubsb
sub
out
call
lahf
imul
push
jge
leave
stos
adc
xor
inc
cmp
ljmp
ret
pop
icebp
mov
sbb
jg
int
mov
popa
mov
ror
jb
rorb
mov
mov
sub
addr16
outsb
jmp
ss
add
pop
sub
shll
xchg
fisttps
push
sub
jb
add
or
adc
bound
xchg
push
repnz
cs
shrb
xchg
in
mov
or
loop,pn
and
xor
stos
inc
or
int3
inc
dec
push
mov
inc
shll
and
mov
sbb
cmp
add
xor
cmpsl
sbb
and
arpl
and
es
div
pop
pop
and
jmp
inc
or
data16
or
or
int
adc
adc
xchg
divl
les
add
ret
leave
push
aam
jne
jno
in
shll
ret
ror
sbb
mov
cmp
dec
and
and
cmp
cmp
cmp
loop
or
mov
pop
add
lahf
jmp
lods
call
das
sub
insl
scas
and
jae
out
dec
int3
les
pop
push
sbb
cmp
xchg
xor
sub
int
jge
cmp
or
sub
and
or
sbb
mov
sub
sbb
jbe
ss
lods
pop
lock
movsb
popf
loop
dec
xor
push
pop
outsl
sub
mov
add
ja
lahf
xor
sbb
adc
call
clc
push
and
stos
jmp
pmulhw
mov
int
lea
mov
mov
xor
call
icebp
movsb
fsubp
insl
inc
or
dec
es
and
or
lods
loopne
loope
add
iret
mov
int
cmpsl
sub
movsl
in
js
fmuls
jnp
sbb
xchg
inc
test
push
dec
pop
mov
sbb
cmp
bound
enter
ja
cmp
aam
or
jp
mov
outsl
aad
leave
lahf
scas
scas
pop
and
mov
dec
xchg
sbb
iret
dec
sub
arpl
dec
jp
push
jl
inc
jne
lea
neg
or
lods
clc
and
test
inc
lock
fwait
cld
push
out
clc
sub
into
push
cmp
mov
movl
inc
or
inc
lcall
push
pop
hlt
adc
pop
icebp
call
pop
sbb
pop
enter
dec
ficomps
in
xchg
xlat
aas
icebp
test
jae
adc
sub
lods
cwtl
or
lods
enter
sbb
dec
dec
add
pusha
cmpl
ret
out
jle
xor
mov
or
push
je
nop
adc
sub
adc
push
adc
outsb
push
mov
pop
cld
stos
loopne
jne
mov
sbb
dec
out
and
jo
jne
dec
and
xchg
push
sarb
or
jne
cwtl
xchg
repz
dec
sbb
cli
cmc
mov
cmc
jno
pop
aaa
sbb
out
roll
jb
mov
ret
mov
adc
add
fbstp
test
or
jne
cmp
sti
jp
cld
sub
jb
jl
in
ja
icebp
xor
repz
adc
pop
push
add
adc
lret
mov
mov
jmp
push
lahf
cmc
sti
sub
sbb
js
jg
xchg
enter
adc
enter
adc
dec
add
cmp
mov
xor
sbb
xchg
mov
adc
test
and
and
outsl
mov
add
jmp
lods
fnstenv
dec
fmull
jae
les
cmc
dec
and
or
xchg
movsl
inc
mov
fsubrl
mov
and
jae
cmp
cmc
jns
mov
je
push
cmp
and
inc
pop
xor
xchg
and
hlt
mov
testl
and
out
test
add
dec
out
dec
scas
adc
pop
scas
out
pop
xchg
mov
insb
mov
rorl
sarl
xor
test
inc
cmpl
dec
test
ja
fimuls
lea
xchg
out
les
movsb
xchg
faddl
adc
mov
inc
adc
pop
xor
in
inc
fcomip
jp
iret
fdivrl
fdivp
sub
cmp
mov
rorl
repnz
lahf
mov
adc
add
stos
xor
xor
lea
jns
jmp
popa
xor
add
cld
arpl
jne
mov
cmp
mov
inc
inc
test
jno
push
fiadds
popa
mov
fsts
jmp
pop
lea
mov
push
sti
das
rclb
inc
bound
in
lock
push
jb
pop
xchg
cmp
test
sti
xchg
sub
dec
pop
dec
mov
mov
pop
jae
pop
icebp
push
out
inc
popf
aad
fsubl
xlat
imul
or
xor
ror
xchg
repz
push
loop
mov
lahf
cld
mov
call
in
je
leave
sbb
or
adc
mov
je
cmp
jb
sahf
inc
rcl
cwtl
sarb
scas
sub
movsl
dec
mov
cmpsb
adc
inc
sti
ret
push
js
cwtl
lahf
jg
cmpsl
dec
cltd
sub
notl
dec
sbb
test
cltd
push
in
mov
fbld
cwtl
mov
insb
int3
jnp
sub
pop
and
test
dec
dec
mov
out
push
mov
vmovaps
cmp
dec
movsb
sbb
lea
js
loope
stc
pushf
rcrl
mov
adc
pop
int3
push
stos
sbb
mov
in
mov
fs
push
pusha
filds
xchg
fdivl
insl
and
call
pop
movsb
outsl
xchg
mov
push
push
xor
mov
inc
insb
jmp
popa
mov
or
aaa
jle
pop
lock
pop
cld
jecxz
xor
or
sbb
jg
ret
add
test
dec
std
push
push
bound
leave
loope
and
inc
fimuls
mov
push
jle
insb
sub
dec
test
sbb
addr16
je
add
fisubrs
pop
repnz
test
popa
out
cmp
pop
cmp
or
nop
int
and
mov
or
mov
stos
xlat
ss
cmp
cmp
sti
lea
hlt
imul
jne
test
inc
cmp
lods
in
cld
jb
sub
cwtl
lret
int
pop
cmp
ss
push
imul
jg
fisttps
ja
gs
ret
sahf
inc
jnp
enter
lds
pop
lods
ret
or
dec
or
mov
pop
pop
inc
pop
out
sbb
cltd
in
push
dec
push
inc
popf
js
lds
push
mov
sub
dec
sub
mov
sub
in
gs
mov
mov
cmp
push
and
test
movsb
fnstcw
sub
add
cltd
dec
pop
fcmovb
out
mov
inc
and
ss
adc
jl
xchg
jae
push
sub
and
test
lahf
test
repz
xchg
test
cli
js
mov
fwait
jbe
sub
push
mov
cmp
aam
adcl
mov
and
pusha
or
cmp
mov
mov
jmp
adcb
xchg
lcall
scas
nop
mov
push
stos
cmp
lods
mov
dec
daa
cmp
pushf
mov
aam
xor
lahf
nop
ret
sbbb
push
ret
sub
sbb
inc
xor
mov
inc
aaa
xchg
mov
cmp
clc
pop
push
test
lds
push
lahf
xor
shlb
push
jecxz
mov
push
jb
into
decl
push
dec
push
mov
jae
pop
or
dec
mov
add
dec
sub
dec
mov
and
pop
int
sub
movsl
sub
xor
dec
roll
fsubs
and
cmp
repz
xchg
dec
or
and
jns
aam
mov
addl
mov
lret
dec
adc
inc
adc
sbb
or
push
push
xchg
push
imul
jne
pushf
aam
sub
mov
fs
mov
hlt
test
fstl
pop
mov
xor
and
hlt
test
inc
or
push
xchg
cmp
enter
push
dec
jecxz
cmp
inc
mov
call
or
int
jecxz
add
inc
and
xor
int3
push
push
test
movsb
jle
xor
xchg
jle
test
add
xchg
daa
jo
xor
add
sbb
xchg
test
jo
scas
mov
sub
jg
jne
sti
inc
jb
clc
das
or
shrb
das
cmpl
push
ljmp
jno
jmp
fsubrl
cmp
sbb
cmp
and
scas
cmpsb
sub
sbb
insl
mov
add
sub
xchg
adc
push
inc
fldenv
mov
jl
fcmovnb
mov
xor
std
push
popl
dec
jo
sbb
or
push
pop
int3
dec
data16
dec
dec
popa
cmpb
pop
ljmp
mov
cmovp
cli
adc
cmp
shrb
jo
jbe
and
jne
scas
inc
sub
stos
lds
xlat
in
int3
into
jo
push
in
imul
cmpl
mov
shlb
int
popf
mov
les
fisttpl
inc
in
mov
daa
stos
pop
enter
inc
cltd
cld
movsb
movsl
mov
fcmove
jge
mov
inc
jmp
jo
mov
scas
add
push
cltd
xchg
pop
in
sub
cmp
lods
fldl
or
xchg
lcall
ljmp
aaa
inc
push
test
push
in
fiaddl
xor
mov
fadds
jp
jecxz
push
clc
mov
pop
push
mov
into
push
cwtl
jl
mov
adc
cmp
mov
mov
add
xchg
lahf
fcomps
cmpl
rorl
mov
xchg
mov
pop
in
frstor
push
push
jne
pop
int
sub
sbb
sar
adc
lret
ds
lods
sub
xor
or
inc
hlt
es
jl
add
add
xchg
mov
lds
add
lahf
divb
insl
ret
jmp
scas
ret
sub
hlt
jnp
test
pop
inc
push
inc
sbb
lret
push
and
and
xchg
sub
lock
stc
inc
mov
subb
mov
add
movsb
inc
push
or
xchg
jl
in
insb
mov
fdivl
jno
int
test
mov
aad
lea
cmp
jecxz
cmpsl
jno
pop
pop
andb
outsb
and
adc
repz
pop
push
outsl
sbb
mov
xchg
jle
sub
imul
dec
lahf
lcall
popf
or
jno
inc
cs
out
clc
fiadds
adc
cmc
inc
cmp
and
jle
stos
and
sbb
mov
sbb
pop
jnp
adc
cmp
adcb
cmp
or
mov
inc
lahf
stos
xchg
aam
out
jmp
cmp
pushf
dec
dec
sub
cmp
cli
testl
pop
sub
cmp
and
rcl
mov
push
xchg
dec
out
mov
js
add
pushf
scas
dec
icebp
push
mov
iret
mov
sbb
sub
icebp
jg
test
fsubrs
xor
xor
dec
xchg
pop
adc
stos
nop
dec
scas
subb
jge
out
inc
dec
pop
divb
sbb
rorl
and
inc
sahf
decl
js
pop
hlt
inc
movsl
and
fidivrs
cmp
andl
sub
adc
xor
push
pushf
and
dec
jbe
mov
mov
jl
dec
loopne
out
test
jl
add
gs
adc
inc
xchg
xchg
inc
push
dec
jecxz
and
or
pop
inc
push
popa
xor
in
jns
out
add
repnz
pop
xor
shll
lods
pushf
sbb
mov
iret
pop
adcb
push
daa
fldl
and
dec
xchg
lcall
and
rolb
subl
movsb
mov
push
lea
cmp
pop
jp
dec
inc
inc
sub
cmp
mov
pop
cmp
fisttpl
rorb
or
pop
dec
into
into
xchg
inc
fs
jae
mov
sbb
xchg
mov
or
hlt
pop
sahf
adcb
mov
popa
pop
dec
add
sbb
xchg
jo
mov
es
stos
dec
out
cwtl
aas
test
push
dec
inc
lock
cmpsb
clc
jno
imul
xchg
leave
dec
insb
mov
in
popa
sub
dec
invd
inc
ret
mov
scas
ror
cmpl
bound
call
adc
int
push
testb
cld
cmpl
and
lea
or
loopne
mov
std
in
movsl
enter
push
pop
and
sub
cld
popa
pop
or
add
and
inc
inc
enter
cmc
shl
aas
xorb
sbb
stos
jp
inc
or
ds
push
nop
add
mov
jae
mov
xor
stos
cmpsl
push
ss
faddp
mov
sbb
pop
int3
mov
in
add
and
mov
mov
xor
push
addr16
sub
and
pop
aas
pop
and
dec
vshufpd
stc
insl
jmp
mov
lret
mov
pop
cmc
or
jg
out
hlt
iret
fs
jo
inc
pop
cwtl
jl
mov
nop
sub
jns
cli
jbe
fistps
adc
fisubl
iret
dec
mov
stos
lds
xchg
push
ror
or
cli
xchg
mov
add
cmc
xor
sub
stc
adc
add
nop
mov
add
lahf
adc
xchg
or
cmp
push
or
adc
mov
push
xor
xlat
inc
push
mov
xor
inc
pop
lods
inc
bnd
push
js
push
inc
sub
jg
das
mov
jg
leave
pop
push
jbe
or
mov
mov
stc
fsubs
sub
add
xlat
cmc
and
add
cmc
add
cld
call
mov
mov
sbb
jne
push
and
xor
gs
add
inc
sub
and
pop
rcrl
imul
ds
cmp
loopne
shll
sub
xlat
leave
push
cwtl
push
jmp
test
stos
xor
movsb
stc
or
mov
pop
test
adcl
cmp
enter
jp
dec
jmp
pop
orl
cmp
in
mov
and
xor
inc
pusha
mov
adc
daa
push
popf
jp
fcmovb
sbb
cmp
insl
repnz
pop
pop
je
xchg
insl
jle
or
clc
insb
mov
mov
insb
frndint
inc
inc
std
leave
jecxz
inc
inc
in
or
loop
cmc
push
dec
sub
ret
in
push
fisubs
push
addb
sbb
mov
fidivrl
cmp
mov
pop
ja
out
pop
and
jl
sbb
fidivrl
push
lahf
sbb
cmp
cmp
loopne
sub
mov
adc
sarl
jo
mov
mov
or
sbb
pushf
aam
loopne
in
pop
and
pop
lods
push
and
mov
ret
lods
push
push
sbb
mov
mov
mov
add
dec
test
mov
std
fcmove
bound
mov
sarl
fstpt
test
scas
scas
mov
mov
in
loopne
test
out
mov
jl
xlat
loopne
cmp
sahf
sbb
test
rorb
push
inc
jg
or
insb
pop
popl
lea
cmp
sti
pusha
cld
inc
outsb
cmp
mov
outsl
add
scas
mov
loope
jno
inc
add
pusha
mov
in
add
filds
movsb
xchg
std
xlat
sbb
cmp
popa
dec
push
fs
rolb
xchg
xchg
and
cmc
sbb
inc
int
ds
inc
lahf
pop
mov
mov
push
mov
xchg
outsb
stos
orb
xchg
xchg
bnd
mov
test
sbb
rorb
add
bound
sbb
mov
hlt
and
pop
andl
cltd
sub
xor
cld
xor
adc
loop
xor
mov
pushfw
dec
cli
fs
cmc
out
ss
push
dec
mov
out
mov
pop
ss
mov
data16
mov
arpl
out
imul
aas
inc
stc
movsl
mov
cmp
out
imul
xor
mull
or
add
push
in
dec
sti
aas
lahf
out
fistpl
pushf
nop
int
cmp
pop
cmpsl
xchg
ja
xchg
test
pop
jnp
sub
pushf
sub
cmp
and
iret
test
outsl
push
dec
scas
cmp
das
cld
mov
xchg
or
cmc
sub
loopne
lds
xor
popf
jecxz
push
sbb
add
sub
fstpl
jb
pushf
add
std
lahf
repz
lahf
mov
data16
movsb
jae
fucomi
and
adc
sbb
out
mov
dec
inc
jle
add
dec
push
adc
ss
add
adc
mov
pop
dec
cmp
out
andb
adc
aad
outsb
cli
sub
jl
in
arpl
dec
cmpsl
adc
fdivrp
sbb
or
ds
das
mov
mov
pop
das
fs
sbb
in
int3
das
adc
aad
sub
inc
mov
inc
je
and
pop
and
pop
stos
inc
sub
iret
sbb
xchg
test
mov
sbb
test
sub
sub
lret
xchg
or
add
mov
adc
mull
in
pusha
inc
adc
jle
xchg
je
push
inc
or
imul
dec
ja
int
dec
out
fbld
data16
and
cmpl
fdivs
sbbl
pop
mov
lret
fisttpl
arpl
sub
adc
sub
adc
xor
movsb
pop
push
or
lahf
mov
cmp
cmpsb
movsb
adc
adc
mov
mov
int
cmpb
cld
jle
pop
insb
ljmp
in
pop
xchg
int
and
pop
iret
and
orb
xchg
or
jmp
and
and
cmp
adc
lret
rcrl
jecxz
dec
and
mov
pop
icebp
lods
ficomps
subb
movsb
mov
ja
in
fcompl
and
sub
xor
xchg
sub
cmpsb
add
lahf
mov
pop
xchg
adc
std
in
fcmovb
jne
lahf
jno
mov
inc
xchg
inc
mov
cmp
jne
lods
jns
popf
es
cmp
add
shll
or
inc
push
repnz
jbe
js
dec
fsubl
add
fnsave
add
popa
push
and
adc
or
push
andl
clc
sbb
jg
pop
pop
cmp
mov
cmp
push
mov
insl
cmpsl
lahf
cmp
inc
sti
int3
xchg
sub
push
cmp
mov
cmp
adc
mov
inc
xchg
outsl
jb
jle
jle
icebp
das
cmp
jg
add
popa
sub
add
add
idivb
adc
xor
or
sbb
mov
les
push
int
add
dec
out
and
pushf
jl
add
or
cmp
jne
mov
and
aaa
dec
pop
stc
inc
enter
xchg
aas
or
sub
fidivl
pop
fistps
dec
ds
cli
ja
adc
and
lock
xchg
mov
mov
xor
adc
and
int
jl
cmp
iret
ja
jp
std
scas
and
test
mov
adc
push
cmp
sbb
sbb
cmpsb
and
inc
mov
jg
push
das
dec
adc
gs
fldt
stos
cmp
stos
outsb
jl,pn
test
mov
sbb
nop
and
or
adc
cmp
fcoms
or
scas
adc
roll
mov
adcl
sub
lcall
cmc
movsb
jns
fsubs
pushf
xor
xor
inc
dec
out
jne
sbb
add
outsl
pop
adc
sub
jle
int
adc
or
and
fwait
lcall
xchg
jne
dec
jg
inc
psubw
insl
fwait
push
jne
inc
dec
jmp
es
pop
push
jl
lahf
cwtl
insl
jmp
out
test
clc
cmp
lods
xchg
mov
cmp
je
add
push
sub
lret
nop
mov
xchg
adc
xor
mov
inc
dec
in
fidivrs
cmc
sub
sarb
dec
and
adc
pop
pop
dec
dec
inc
mov
dec
int
push
out
rorl
or
inc
cmp
push
int
and
filds
sbb
lahf
inc
addl
mull
sub
int
je
add
xor
lock
cmp
or
add
cmp
lahf
mov
mov
push
ds
clc
shrl
sub
xchg
mov
test
or
aam
mov
imul
int
insb
sub
cltd
roll
orb
mov
pop
dec
fsubrs
stos
fiaddl
add
xchg
inc
sbb
inc
pop
dec
pop
inc
insb
inc
outsl
test
cli
cmp
or
dec
bound
clc
xor
mov
aas
dec
mov
sbb
jl
sub
jae
loopne
add
andb
inc
or
mov
cli
cli
mov
dec
add
mov
imul
xor
je
or
jo
jecxz
sbb
and
jno
xchg
adc
std
fimuls
andb
pavgb
gs
hlt
int3
cld
jo
mov
popa
imul
adc
mov
or
push
pop
dec
inc
push
sub
hlt
xchg
mov
adc
cmp
rclb
cmp
ret
cmp
add
loopne
sub
add
popl
inc
cmp
lret
or
cld
pusha
sub
dec
mov
repz
sbb
aam
inc
pop
sbb
mov
in
popf
xor
sti
icebp
orb
lea
push
pop
pusha
xchg
sub
movsb
sbb
cmpl
inc
imul
fidivrs
daa
xchg
mov
les
orb
dec
test
adc
cwtl
repz
mov
lret
add
orl
xchg
iret
rcrb
xchg
stc
mov
mov
out
mov
fisttpll
mov
push
mov
test
pusha
sbb
insl
mov
sub
sbb
andl
xchg
inc
jno
stc
and
mov
xchg
dec
cld
fidivrl
fdiv
stos
pusha
sbb
jne
mov
xchg
leave
imul
push
int
fimull
out
sahf
fldt
cmp
adc
pusha
xor
dec
cmp
push
shrb
jo
add
lock
pop
sub
lods
pop
repnz
mov
xchg
jl
mov
jb
orb
xchg
test
and
je
push
cmp
push
scas
nop
daa
jle
cmp
ljmp
pushf
ljmp
ljmp
push
rolb
adc
inc
test
push
jmp
imul
adc
das
dec
mov
dec
insl
inc
and
cmp
xor
push
jecxz
and
pop
jnp
mov
xchg
lods
cmp
push
and
or
scas
test
fbld
inc
jg
in
mov
xor
xchg
mov
add
lds
dec
xor
mov
push
or
data16
add
test
jo
sub
jge
xor
pop
xor
xchg
cmpsb
pop
fstl
cs
push
fiadds
inc
mov
pop
mov
mov
sbb
insb
imul
lods
adc
adc
dec
dec
xor
movl
push
enter
jmp
jbe
mov
psllq
pop
out
testl
cmp
loopne
ds
test
inc
push
mov
test
cs
andb
xorl
and
pop
or
xchg
lea
dec
das
adc
aam
aad
inc
lahf
cltd
pop
cli
pop
and
pop
test
call
inc
cmpsb
push
das
mov
dec
and
lds
push
scas
push
push
sbb
mov
or
movsl
rorb
adc
bound
scas
std
mov
xchg
je
push
xor
out
out
in
sub
mov
jns
cli
gs
push
jae
mulb
sbb
divb
jae
mov
pushf
push
mov
in
sarb
adc
and
lcall
std
xchg
pop
test
stc
dec
inc
mov
jns
pop
dec
push
divb
cs
idivl
jbe
or
jge
mov
cmpsl
cmp
jecxz
push
dec
add
fs
aam
arpl
sahf
test
jo
jno
inc
lock
fstpt
jle
mov
test
xor
xchg
sub
call
mov
push
nop
mov
insl
pusha
fmull
pop
sbb
sub
mov
lahf
lret
repnz
mov
ja
fsts
mov
push
mov
mov
mov
pop
pop
les
loope
xor
adc
jp
into
push
popf
mov
mov
or
bound
mov
xlat
movsb
mov
push
or
fisttpll
mov
inc
push
push
dec
js
cmp
lods
push
pop
or
push
xchg
sub
sbb
out
and
sub
and
pop
add
jbe
test
mov
jmp
pushf
jbe
push
jl
pop
mov
add
cmpsb
in
int3
adc
pop
push
sbb
dec
push
sbb
sub
mov
stc
fs
pop
or
mov
cli
inc
fdivrs
pop
test
dec
and
cmp
mov
mov
mov
sub
addb
xor
pop
fnstenv
add
add
inc
lea
dec
je
js
lahf
mov
cmp
push
adc
mov
lods
nop
ret
sbb
fmull
pop
test
mov
mov
int
cwtl
aam
xchg
popa
in
xchg
cmp
xor
dec
sbb
test
lea
push
mov
jmp
pusha
sub
insl
orl
dec
in
roll
test
sahf
lods
cld
push
lods
jbe
fsubl
mov
push
sub
fcoml
sbb
sub
add
xchg
sti
and
in
and
mov
mov
push
inc
push
int3
ror
and
lcall
lcall
lea
and
idivl
xor
outsl
les
stos
das
xchg
ljmp
ret
cmp
pushf
dec
cld
cmc
add
popf
adc
lcall
shlb
cmc
fmull
jmp
inc
sahf
mov
icebp
add
jno
test
fcomi
sbb
insl
lds
and
add
and
add
push
mov
test
gs
pushf
enter
cwtl
mov
jne
sbb
pop
xor
mov
shlb
or
xorl
faddl
aaa
mov
sub
or
cli
out
adc
pop
in
jne
test
addr16
mov
repz
cld
sub
ljmp
pusha
dec
xor
pop
out
nop
in
or
adc
xor
call
test
fidivs
mov
test
sbb
jmp
add
std
lcall
inc
mov
in
xor
fnsave
pop
inc
inc
sub
inc
sub
inc
add
cli
push
fadds
fisttps
xor
cmp
dec
dec
xchg
adc
scas
cmp
aad
out
cmovae
xor
mov
add
add
jno
hlt
push
or
movsb
std
stos
jae
es
out
fs
push
mov
mov
add
pop
jb
dec
push
xor
gs
cmpsl
inc
xchg
cltd
rcll
xor
jg
cmc
mov
mov
mov
sbb
dec
mov
mov
shrl
xchg
xor
js
dec
add
sbb
add
ret
xchg
xor
ja
mov
mov
pop
enter
dec
jns
push
cmp
stos
pop
lahf
pop
rorb
xchg
fstpl
mov
xor
int
bound
jg
and
jo
lret
int3
popw
mov
inc
ss
decl
xchg
mov
cmpsl
scas
pop
pusha
enter
inc
mov
mov
fdivs
pop
aas
or
pmullw
mov
int3
aad
jo
xchg
mov
xchg
cltd
inc
pop
cltd
mov
jbe
add
xor
or
out
aaa
frstor
lea
or
mov
mov
add
add
out
es
push
mov
dec
sbb
dec
cmp
mov
jecxz
or
cmp
clc
sbb
adc
jg
fistpll
push
inc
mov
test
or
call
pop
jg
bswap
sbb
scas
xchg
fldenv
lock
je
popf
and
pop
scas
inc
or
adc
inc
mov
cmp
jl
pop
gs
fucomp
mov
int
pop
orb
push
mov
cmp
and
into
pushf
fwait
sub
sub
dec
int3
movsl
inc
cli
add
out
out
mov
adc
dec
insb
and
pushf
jno
xor
ss
loopne
test
rcr
addr16
outsb
fmull
pushf
jbe
scas
push
dec
int3
xor
sub
adcb
and
dec
dec
xchg
out
fadds
jmp
push
or
inc
push
sbb
and
sbb
pushf
rorl
sub
push
inc
enter
or
xchg
rorl
mov
sbb
xchg
insl
fistpl
mov
aam
adc
nop
das
stc
dec
jae
test
sub
in
in
pop
sub
dec
out
ffree
pop
and
or
mov
jg
mov
andl
fbstp
cli
mov
aam
jl
int
or
and
imul
test
adc
fistps
push
push
xchg
sub
test
pop
sbb
push
shrl
xlat
pop
sbb
cwtl
icebp
sbbl
pop
sbb
jns
sub
imul
push
add
test
sti
dec
sbb
roll
mov
std
mov
push
or
inc
jmp
rorb
pop
or
or
sbb
dec
mov
divb
xor
add
inc
jg
mov
lods
inc
mov
and
and
add
mov
cmp
and
sbb
mov
int
insb
mov
imul
mov
lods
or
pop
sbb
push
sub
xor
push
jmp
sbb
sub
pop
xor
fcoms
inc
pop
push
test
stos
sub
dec
jo
iret
pop
push
dec
mov
push
pop
int
push
dec
cmpsb
rorl
push
cld
pushf
int
adc
cmp
and
mov
scas
cmp
stc
data16
mov
push
adc
stos
out
jb
das
fidivrl
inc
or
mov
pop
lds
xor
mov
lret
add
xchg
in
add
mov
enter
and
jp
mov
adc
sub
cmp
xchg
sbb
int3
push
pop
scas
dec
xor
fsts
pop
test
jno
cwtl
add
sbb
sub
mov
roll
in
adcl
push
es
mov
mov
or
cmp
pop
nop
sbb
out
push
fbld
test
xor
push
mov
mov
jmp
xchg
clc
pusha
pop
leave
adc
rcrb
and
cmpsl
stos
sub
mov
js
test
or
mov
test
test
jge
mov
outsb
imul
ror
out
inc
movsb
xchg
sub
inc
push
ljmp
mov
adc
mov
mov
ja
and
push
mov
mov
dec
test
fnstsw
dec
lahf
sbb
xor
iret
sahf
sub
pushf
and
inc
xchg
inc
lods
mov
cmc
pushf
movsl
mov
or
out
inc
jp
inc
fcoml
pop
imul
scas
ds
int3
mov
dec
sti
pushf
sub
mov
jge
test
dec
add
add
sub
fadds
sahf
test
jbe
adc
jecxz
add
pop
cs
dec
in
pushf
mov
dec
mov
xor
and
cmp
mov
jns
cmpsl
jns
inc
add
iret
lods
push
xchg
adc
popf
pop
pop
cmpsb
lea
mov
mov
or
test
sub
outsb
or
sub
jl
adc
test
mov
and
leave
dec
adc
xor
pop
stos
fstpl
das
xlat
sbb
in
mov
cwtl
adc
pop
push
push
lds
cmp
mov
sub
adc
fmuls
mov
dec
rcrl
sbb
stos
mov
or
add
int3
add
iret
mov
and
loopne
jge
mov
cmp
push
sbb
lret
pusha
mov
mov
mov
cmp
pop
pushf
dec
pop
out
mov
cmp
cltd
jno
out
sbb
dec
dec
flds
mov
xchg
fsubrs
movsl
inc
sub
enter
jg
and
push
int3
mov
fyl2xp1
jg
jmp
and
addr16
movsb
pusha
adc
nop
mov
test
fisttpll
jo
iret
sbb
push
out
inc
sarl
mov
mov
xchg
and
inc
loope
int
pop
mov
out
mov
test
rorl
add
nop
push
mov
push
dec
test
pop
call
jo
ds
cmp
std
lods
sbb
data16
jns
or
add
sbb
and
repnz
pusha
xchg
enterw
seto
insl
pop
xchg
imul
sbb
test
mov
insb
mov
mov
imul
pushf
stc
inc
pop
adc
pop
sub
cmpsb
xchg
dec
fs
pop
rolb
clc
pop
mov
test
retw
in
mov
mov
stc
fs
mov
cld
xchg
lock
scas
mov
cs
pop
jmp
inc
or
fwait
add
xor
sbb
push
xchg
push
mov
fimull
and
adc
or
fistps
das
or
inc
stc
into
dec
mov
inc
sbb
pushf
add
jno
adc
jns
lret
enter
xchg
add
out
dec
inc
xor
dec
sbb
sbb
jbe
fs
sub
repz
test
sbb
ror
enter
stc
test
jecxz
jmp
and
repnz
out
mov
cmp
loopne
mov
out
pusha
adc
mov
int3
pop
jge
inc
das
aaa
mov
cmp
xchg
or
xor
scas
jmp
sti
fadd
out
xchg
pop
pop
sbb
mov
pop
repz
pop
lds
xchg
dec
cmp
cmp
aas
pop
int3
push
jno
cmp
jmp
test
mov
fldt
inc
cs
pop
inc
add
enter
xor
out
mov
jbe
test
data16
into
or
decl
inc
push
lret
fwait
xchg
mov
jg
lahf
push
mov
mov
test
jg
sub
fs
lcall
lahf
ret
adc
dec
cmp
and
sbb
rcr
cld
iret
xor
xlat
mov
jo
sbb
inc
mov
xor
or
and
leave
nop
add
testl
lret
mov
subl
pop
adc
bswap
jo
iret
dec
sub
add
ret
fs
add
jbe
jno
ja
and
loop
or
mov
mov
xor
inc
push
sub
lahf
add
dec
mov
fsts
xlat
out
jb
xor
rolb
mov
cmp
mov
jnp
lea
add
sbb
or
mov
jecxz
rcr
and
fwait
xchg
xchg
push
push
ds
mov
inc
cld
daa
ss
mov
and
lods
jbe
and
dec
inc
mov
mov
lods
fistps
mov
sbb
ss
cmpl
dec
sbb
cmp
push
xlat
add
jl
outsl
xor
cltd
rcrl
int
push
repz
mov
push
mov
popf
aam
rcl
roll
xchg
jae
fs
inc
mov
fildl
mov
pusha
stc
push
or
xchg
inc
sub
xchg
adc
mov
inc
lods
or
or
mov
imul
inc
andl
scas
lods
nop
lret
pop
dec
adc
adc
mov
pusha
pop
push
faddp
adc
pop
dec
jb
adc
bound
adc
or
enter
pop
jne
out
push
jne
xor
lret
adc
add
sbb
scas
ret
push
into
jl
or
ljmp
pushf
sahf
cmc
nop
cmp
inc
fsts
adc
jp
mov
cmp
adc
out
jo
pop
or
and
jbe
popf
lds
ja
push
test
jmp
mov
add
lahf
jns
scas
ret
jp
mov
or
jbe
movl
push
mov
pop
std
xor
mov
sarb
dec
cltd
ljmp
shlb
push
jmp
xor
push
cmp
and
sub
dec
pop
fildll
in
xor
or
and
addr16
cltd
jnp
arpl
imul
stc
push
or
sahf
or
mov
mov
icebp
or
sbb
hlt
sub
aad
sarl
sub
xchg
frstor
mov
or
bound
idiv
mov
jmp
outsb
repz
or
dec
sbb
and
lea
xor
mov
pop
sub
ja
stos
fadds
inc
aaa
jg
xor
jp
jns
mov
inc
adcb
jle
or
push
and
adc
int
pop
sti
int3
ss
cmp
lock
lock
jnp
mov
aas
mov
dec
xor
add
mov
xor
lds
cmp
sub
inc
inc
jns
pushf
lods
loopne
ss
int
inc
push
inc
loopne
cmc
leave
or
cld
sub
push
lock
inc
repnz
mov
outsl
rorl
jmp
sbb
jo
lea
int
jno
test
aad
push
mov
inc
test
push
popf
mov
adc
pop
sbb
dec
scas
fmull
mov
mov
xchg
or
inc
jno
subb
add
cmpl
iret
add
mov
shl
lahf
mov
adc
add
rcrl
lea
add
ss
stos
mov
cli
lods
ds
mov
int
xlat
push
push
jb
movsl
xor
cmp
cmpxchg
repz
loopne
sbb
divb
cmp
fistpll
inc
fstpt
movsl
cmp
add
stos
fsubrp
push
push
in
lret
iret
mov
sbb
fiaddl
in
pop
or
fnsave
inc
iret
sbb
push
or
mov
mov
xorb
pop
sarl
fisttps
sub
call
cmp
mov
shlb
inc
or
sub
test
clc
and
fsubrp
pop
add
dec
in
fidivs
add
jnp
ficoml
xchg
lds
dec
pusha
popa
js
pop
xor
cmc
fcoml
xchg
inc
dec
f2xm1
jo
out
lea
mov
mov
mov
and
sub
push
ret
pop
es
jmp
adc
adc
dec
push
out
dec
scas
mov
mov
daa
mov
pop
add
clc
loopne
dec
push
aas
push
das
mov
inc
insl
int3
cmp
js
imul
pop
jae
les
lahf
or
mov
sbb
icebp
mov
addl
into
repnz
mov
sub
imul
int
and
or
mov
inc
cltd
xchg
mov
push
arpl
movsb
inc
test
and
pop
push
movsb
mov
or
int
and
push
sbbb
sbb
pop
jg
dec
cmp
xor
test
and
orb
xchg
fcompl
mov
pop
xchg
dec
js
jbe
pop
pop
hlt
addl
mov
pop
sub
iret
stos
jo
push
mov
sarl
or
pop
push
mov
push
data16
add
pushf
test
stos
or
inc
cmp
add
dec
jecxz
add
popl
arpl
sti
or
cmp
pop
xor
xchg
dec
or
or
push
sahf
jg
daa
sub
test
xchg
shll
push
mov
dec
stos
sbb
xor
bound
xor
ret
orps
lock
fidivl
lods
repnz
scas
jno
jge
test
mov
lods
stc
cmp
cmp
ljmp
push
cvtdq2ps
std
movsl
or
or
and
test
sub
rcl
mov
gs
int3
mov
pop
aaa
sub
push
inc
xor
mov
dec
lret
or
cmpsb
std
in
and
xor
add
dec
sbb
jae
in
cs
mov
add
cmp
out
test
jl
testl
or
adc
out
inc
inc
stos
xlat
xor
or
rolb
popf
and
test
cmp
xchg
xchg
lods
fimuls
pop
jle
sbb
mov
js
adc
call
add
mov
mov
push
mov
jmp
sub
nop
cmc
cmpsl
std
std
das
dec
add
push
dec
or
test
jnp
shll
nop
adc
sub
push
mov
jp
push
xor
out
mov
push
dec
mov
dec
arpl
enter
or
cld
std
mov
push
test
or
jge
in
dec
pop
jge
ffree
rorb
jl
inc
mov
and
ret
xlat
cltd
cld
and
fnstenv
hlt
add
shl
lock
mov
or
dec
data16
and
mov
or
stos
dec
bound
in
sub
out
std
les
push
mov
cwtl
movl
dec
cmp
rcll
fstpt
std
int
xor
jg
arpl
insb
dec
pop
mov
pop
sub
outsl
mov
fsubl
jns
insl
mov
xchg
push
cmp
mov
fildll
inc
and
push
jb
lea
sub
mov
gs
mov
adc
push
popf
scas
inc
enter
nop
xlat
fidivrs
inc
pop
cmp
shl
scas
xor
dec
and
xor
xchg
and
pop
mov
or
jb
lcall
xchg
adc
nop
cmp
push
enter
jno
jp
insb
shll
fiaddl
fwait
pop
dec
dec
lods
jb
inc
pusha
cld
add
pop
jl
arpl
push
jg
jae
nop
outsl
mov
imul
fbstp
out
mov
pop
xchg
add
fdivrl
cltd
push
rclb
jle
loopne
int
shrd
inc
adc
sbb
popa
js
xor
loope
call
mov
ds
ret
sbb
push
mov
jno
out
fs
scas
hlt
les
cmp
aas
stc
and
xor
cmp
dec
sub
movsb
pushf
in
mov
jne
mov
pop
sahf
mov
lret
je
ret
mov
rorb
sub
in
stos
pop
sub
and
sub
loop
push
mov
jge
or
add
sbb
or
jmp
pop
lahf
in
fisubl
push
jecxz
push
inc
sub
or
and
jne
adc
mov
sub
push
inc
push
ss
aam
fnstenv
aad
cmp
push
lea
subb
lods
lock
lock
add
loopne
xor
add
int3
fidivrl
es
jae
cli
mov
inc
and
sub
or
lock
mov
bnd
and
addl
movsl
std
std
and
pop
scas
out
outsl
insb
pop
and
push
pop
mov
or
or
icebp
jb
xchg
cwtl
sbbb
push
sub
inc
sbb
inc
sar
lahf
cmp
mov
repnz
sub
inc
pop
pop
clc
out
inc
push
in
insb
scas
inc
inc
mov
sub
cmp
insb
movsl
pushf
pop
addr16
adc
jl
cwtl
stc
push
or
ss
sub
lea
or
and
test
das
add
addr16
xchg
fisttpl
pop
pop
incb
sbb
out
iret
or
or
jae
xor
test
enter
dec
add
adc
dec
xor
dec
jo
mov
sub
in
jns
sbb
icebp
lock
std
test
cmp
aas
mov
xchg
testl
push
sub
nop
xor
xorl
or
xor
call
sub
cwtl
dec
mov
cmp
xor
add
lods
pop
out
js
dec
xchg
jno
cmp
inc
stos
xchg
mov
inc
loopne
jecxz
jb
push
pushf
jo
rorb
sbb
xchg
pop
mov
loope
in
jmp
setnp
mov
inc
sbb
nop
les
popa
sbb
adc
xchg
push
loopne
pop
lea
popf
nop
out
xchg
nop
aaa
lea
mov
aas
or
sti
addb
inc
jecxz
push
mov
iret
test
aas
fisttpl
xchg
pop
ss
test
pusha
sbb
icebp
cwtl
add
imul
fisttps
pop
lea
xchg
dec
mov
cmove
scas
in
addr16
push
ds
lahf
jp
dec
push
inc
movsl
cmpsb
xchg
dec
and
cmp
pop
inc
dec
pop
lods
dec
xor
pusha
stc
subl
add
in
fsubrp
sbb
mov
fldt
add
xchg
jae
repz
mov
cmp
je
xchg
popf
fistl
std
movsl
and
repz
rcrl
pop
hlt
lret
lret
stos
fbld
std
pop
cmp
push
dec
icebp
lea
mov
lret
jecxz
gs
dec
call
out
xor
inc
icebp
aas
add
movsl
sub
dec
adc
jnp
push
xchg
gs
add
sbb
call
xor
push
and
mov
inc
cmp
repnz
jecxz
inc
vcvtsi2ssl
repnz
pop
push
movsb
mov
in
mov
loope
test
outsb
push
add
sbb
push
xor
cmp
xchg
dec
iret
and
pop
jle
aas
cmpsb
dec
add
ss
fiadds
outsl
mov
aad
mov
cmc
add
stos
jae
shlb
sbb
jmp
inc
inc
inc
sbb
lods
jbe
add
and
jmp
inc
inc
mov
sbb
inc
jae
fs
andl
adc
nop
addb
out
fwait
push
mov
repnz
mov
sub
pushf
jb
jl
movsl
pusha
xchg
insl
mov
lcall
aad
xor
fidivrs
dec
fdiv
pop
jno
push
lds
pop
fcmovnb
adc
out
hlt
or
lret
repz
mov
inc
sub
nop
cmc
fldl
cmp
ret
fsubl
mov
jle
or
jne
fs
push
push
outsl
cmp
xor
or
out
jb
mov
pop
in
iret
pop
ljmp
rorl
dec
push
out
in
xchg
popf
aas
and
push
push
nop
mov
jp
add
push
fcompl
mov
int
mov
movsl
lret
and
sbb
enter
adc
loop
fstpl
sub
cmp
in
adc
popf
fs
push
push
and
idivl
test
inc
cmpsb
and
and
and
mov
or
and
bound
add
fwait
jp
movsb
lcall
sub
cmp
inc
cli
lahf
insb
xor
lods
je
cmp
je
mov
call
or
stos
arpl
ret
xchg
test
or
jb
and
repz
dec
cmp
cmpsb
test
out
sti
je
push
dec
and
jle
pop
pop
jecxz
sarl
and
or
cvttps2pi
inc
sub
add
and
daa
fs
fwait
mov
repnz
fbld
repz
pop
xchg
aam
add
pop
cmpsb
jmp
subb
test
cld
sbb
pusha
and
mov
sbb
repnz
and
xor
and
dec
xorl
jg
lahf
push
mov
pop
push
sbbb
xor
push
fs
int
cmp
and
or
add
in
or
movsb
jge
cmp
in
pop
dec
push
jne
arpl
push
jmp
into
xor
mov
lahf
jmp
xchg
ljmp
ds
mov
and
dec
cmpsb
mov
or
test
outsb
int3
rclb
pop
pop
or
or
jae
out
pusha
int3
mov
cld
pop
jge
insl
loopne
mov
mov
loope,pt
jp
movsb
lods
pushf
ja
sub
leave
pop
xchg
and
dec
js
mov
or
sbb
inc
rol
cmp
out
cmp
jns
pop
mov
enter
mov
cs
add
fisubs
testl
mov
filds
pop
cmc
pusha
je
xor
das
jmp
fcmovnbe
les
pusha
push
jmp
mov
or
sbb
outsl
pusha
aad
inc
sahf
stos
test
lahf
adc
dec
jns
jb
cmp
adc
inc
pop
mov
sub
jne
out
ror
pop
iret
repnz
push
push
lds
jno
mov
mov
cmp
xlat
lods
clc
cli
adc
or
adc
mov
movzwl
icebp
scas
inc
loopne
out
std
mov
inc
sub
test
sti
test
mov
or
pop
sbb
adc
xchg
add
and
movl
sbb
xor
or
pop
cld
fstps
arpl
sub
sbbb
sub
inc
mov
and
xor
add
dec
daa
ret
adc
loopne
sbb
or
bound
insb
inc
lret
inc
inc
mov
pop
xchg
pusha
out
cmpsl
xlat
fmuls
dec
and
cmp
cmp
das
push
adc
sub
jg
xchg
cld
and
pop
mov
pop
inc
mov
jne
mov
iret
lret
mov
rcll
int
and
push
mov
cli
adc
data16
jne
jg
gs
mov
push
lahf
out
pop
mov
dec
nop
pop
dec
xor
dec
stos
test
dec
lcall
xchg
cs
cmpsb
jg
dec
fdivrl
adc
pusha
push
out
pop
stos
inc
mov
nop
push
xor
xor
xor
mov
mov
push
mov
shlb
mov
or
sub
std
lcall
je
shll
lahf
xlat
and
mov
cltd
inc
mov
negl
addl
xchg
insb
dec
lods
mov
lock
jne
push
mov
mov
mov
mov
adc
xor
sbb
loop
repz
cmpsl
add
scas
mov
push
inc
or
jle
push
push
js
aaa
or
jl
icebp
popa
out
adc
and
sub
fildll
pop
mov
ror
mov
rolb
je
mov
dec
icebp
cmc
mov
int3
cmp
inc
sub
sbb
std
add
test
dec
mov
push
sub
cmp
mov
push
dec
fs
jmp
and
sub
cmovne
fisubrl
inc
leave
xchg
sbb
stos
xlat
or
or
popa
ja
sahf
iret
int
push
lahf
xor
sarb
inc
dec
dec
add
sbb
aaa
dec
adc
adcb
pop
andb
jne
inc
cld
test
jecxz
push
in
sbb
or
xchg
mov
shll
sbb
outsl
xor
icebp
mull
hlt
xchg
dec
add
addl
pop
insb
adc
sahf
fsub
xchg
ror
cmp
mov
cmc
pusha
int
sti
xchg
or
test
dec
stos
les
adc
test
idivb
sub
dec
add
hlt
add
lret
push
aaa
mov
cli
inc
iret
sub
cmpsb
mov
and
inc
dec
jns
sbb
stos
ljmp
pushf
aad
and
jle
add
adc
mov
repnz
lcall
add
xchg
push
popf
bound
inc
add
in
lcall
in
adc
in
cmp
mov
xchg
int
sbb
pushf
neg
push
mov
fs
out
sbb
outsl
jno
inc
add
in
mov
jb
sub
dec
sub
inc
cli
mov
mov
mov
jmp
popf
jns
add
sbb
aas
pop
cmp
lods
dec
insb
inc
jno
out
cmp
inc
add
daa
scas
ret
aas
mov
dec
mov
inc
xchg
test
rclb
mov
mov
mov
jecxz
sub
hlt
imul
xor
inc
push
push
pop
push
repz
movsl
or
ljmp
rclb
shl
xor
movsl
out
scas
incl
adc
cmp
inc
lods
adc
adc
icebp
sub
movsb
out
fs
jns
andb
jbe
inc
dec
push
xor
in
cmp
jle
adc
dec
xchg
dec
push
std
jecxz
std
lahf
sbb
mov
jno
adc
mov
adc
xlat
adc
cwtl
add
dec
lret
pushf
movsl
pop
inc
pop
test
mov
iret
fdivl
pop
inc
in
push
out
adc
cmp
lods
xchg
xchg
xor
repnz
sbb
or
jmp
test
ja
dec
push
pop
mov
or
or
shrl
int3
sub
mov
sbb
ljmp
adcb
pop
jbe
adc
ljmp
loopne
pushf
pop
add
inc
shlb
rolb
mov
cwtl
nop
xchg
movsb
and
andb
dec
xchg
push
mov
mov
rcrl
push
mov
pop
mov
pushf
cs
mov
mov
mov
push
popa
dec
and
pop
cmpsb
mov
xlat
mov
mov
je
sahf
push
inc
jp
mov
vpmacssdql
cmp
or
or
cmp
jmp
repnz
add
or
inc
mov
dec
jno
gs
loope
push
jmp
fdivrs
adc
sbb
clc
and
sub
xchg
mov
sub
dec
adc
fs
mov
mov
inc
cmp
bound
lods
out
mov
cmp
xor
dec
jo
push
jae
mov
and
cmp
aas
lods
xor
lea
inc
mov
mov
cmc
mov
mov
sbb
movsl
cmp
and
xchg
mov
sahf
pushf
int3
int3
shl
test
adcb
sub
sub
enter
subps
or
sbbb
dec
adc
add
movsb
das
in
mov
cmpsb
pop
adc
les
cmp
sub
std
stos
mov
mov
jl
addl
cmc
pop
pushf
ds
xor
test
inc
add
push
fdivrs
sbb
sub
mov
insl
outsl
stc
push
stos
push
lea
push
shrb
mov
xor
mov
cmp
jge
insb
dec
jne
cmp
enter
ret
push
call
test
rorl
movsb
fisttpll
pop
lods
mov
mov
movsb
clc
sbb
adc
sbb
std
shll
cmp
push
int3
jnp
scas
xor
cmp
loopne
pushf
sbb
iret
mov
dec
outsl
inc
pop
sbb
cmp
push
dec
inc
movaps
arpl
clc
push
and
push
push
adc
test
ficompl
lods
xor
mov
xlat
pop
cwtl
pushf
pop
movsl
mov
movsl
mov
and
loopne
xor
sbb
sbb
fdivs
mov
mov
mov
sbb
mov
mov
mov
mov
in
inc
push
pop
jp
xchg
mov
test
idivl
mov
sub
xchg
and
or
xchg
fwait
jecxz
aas
add
and
cltd
mov
jp
pop
sbb
sub
mov
xor
xor
pop
xchg
shrb
lahf
dec
dec
xchg
into
je
cmp
mov
jmp
lods
mov
ret
imulb
adc
sbb
lahf
or
xor
and
sub
xor
pop
jno
inc
mov
add
mov
pop
dec
push
jnp
lret
lahf
aaa
movsb
clc
push
and
and
jns
jns
jne
cmp
and
lcall
dec
jge
pop
call
js
in
add
sbb
icebp
or
pop
or
or
mov
add
pop
push
jl
cmp
xchg
daa
rcrl
inc
dec
aas
and
inc
into
cmp
or
mov
ja
dec
jns
fadds
cmp
pop
fsubrs
sbb
xchg
test
enter
push
xor
fisubs
test
fcom
sbb
jns
mov
jge
lret
movsl
sbb
inc
dec
movsl
and
mov
in
mov
xor
jmp
mov
dec
add
stos
daa
fildll
sbb
test
fnstsw
jp
push
xchg
inc
and
cmc
or
sbb
push
mov
fcmove
cmp
and
std
cmp
and
push
hlt
clc
inc
sbb
add
lods
cmp
aad
jnp
ja
xchg
scas
jnp
fimull
inc
cld
fnstcw
movsb
inc
shl
jb
mov
loopne
test
stos
lcall
adc
roll
and
test
and
cmp
movsb
test
adc
pop
pusha
dec
pusha
mov
insb
cmove
aad
cmp
cwtl
cmp
loope
movsb
aad
iret
gs
mov
jp
dec
into
mov
mov
lock
shlb
mov
cmp
mov
mov
dec
and
cmp
xor
out
test
inc
sbb
outsl
lock
jg
ret
fdivrp
xchg
and
lahf
cwtl
cli
les
mov
mulb
mov
movsb
xor
jno
lret
aad
pop
xchg
mov
imul
inc
jns
pushf
lods
gs
ss
fwait
fwait
jmp
call
add
ret
xchg
lds
or
add
int
mov
shrb
in
xchg
add
movsl
dec
mov
push
loopne
fcmovnb
ret
lods
jb,pn
push
or
imul
jno
mov
out
scas
pop
sub
js
das
mov
int
inc
push
stos
xchg
mov
clc
mov
sub
out
dec
cmp
aam
inc
fisubs
test
xlat
mov
push
mov
add
test
and
jns
jle
psubsw
das
add
pushf
cmp
inc
nop
xchg
adc
orl
lea
cmp
mov
push
adc
adc
mov
js
lea
inc
or
pop
insl
inc
cmp
test
pop
xor
sbb
mov
push
sub
loopne
pop
push
xlat
cld
push
sub
cld
dec
gs
cmc
push
pop
aad
add
inc
xor
xor
push
add
sbb
mov
or
xor
scas
jg
xchg
std
sub
sbb
push
dec
call
std
or
mov
add
adc
dec
popa
push
cwtl
lea
dec
js
dec
dec
pop
fmull
add
int
mov
bnd
jle
das
mov
stc
adc
dec
adc
sub
dec
outsl
shlb
jp
popf
or
stos
mov
insb
aas
cwtl
jb
or
cwtl
mov
sbbb
lahf
mov
inc
jnp
les
pop
inc
inc
popf
add
cmc
add
rorl
cmp
sahf
negb
cmp
jmp
pop
and
jl
test
or
mov
mov
cmp
pop
loop
jge
or
std
loopne
popf
ficomps
inc
dec
mov
roll
scas
shrb
mov
int
mov
leave
outsb
push
mov
mov
xor
adc
jb
sub
loopne
nop
lahf
aam
test
add
test
lret
lods
shll
std
shlb
cltd
inc
mov
fists
mov
pop
mov
lods
jbe
xchg
jp
insb
or
and
icebp
xchg
test
fidivrs
push
mov
repnz
and
iret
mov
cs
fisttps
and
and
cld
sbb
loopne
nop
mov
sbb
dec
stos
mov
add
out
lahf
cmp
stos
push
xchg
mov
dec
loopne
iret
int
cmpsl
xor
mov
loop
rcl
mov
cmp
xchg
shrb
xor
ss
jno
hlt
lahf
xor
aad
or
scas
pop
jp
sbb
and
iret
pop
add
add
add
cld
push
mov
xor
cld
add
ror
dec
jge
dec
daa
add
jg
repz
out
fisubrl
out
push
stc
stos
loop
daa
lcall
lret
dec
lcall
mov
cmp
adc
mov
mov
jne
pop
jae
sbb
pop
pop
ja
sbb
sbb
cmp
mov
sbb
fisttpll
adc
shr
lret
ss
stos
xor
adc
lret
pusha
or
and
xchg
test
lcall
movsl
adc
push
les
mov
jl
enter
shrl
and
lahf
jmp
movsl
adc
aad
and
push
mov
add
js
insl
mov
cli
dec
or
fdivrl
pop
rorl
scas
loop
jg
sbb
in
imul
ss
pushf
mov
adc
xor
push
mov
xor
and
push
mov
jle
nop
int
sbb
mov
dec
in
pop
mov
iret
jb
sub
xchg
add
test
dec
aas
inc
pop
pop
xchg
lea
sbb
push
mov
mov
cwtl
jl
fistpl
mov
gs
ljmp
aas
xor
pop
lcall
push
out
imul
xor
enter
push
lahf
inc
mov
stc
xchg
xor
bound
or
adc
push
andb
push
out
and
mov
les
test
adc
mov
cmp
add
test
pop
loope
enter
cmp
mov
lds
popa
pushf
cmc
and
inc
pop
mov
cld
sub
aas
stos
xchg
jbe,pn
test
dec
xor
or
adc
sub
sub
filds
je
sub
daa
add
xchg
sahf
fwait
mov
fucomi
or
flds
push
adc
aad
mov
xor
add
test
iret
dec
pop
iret
sub
std
inc
mov
call
pop
xlat
lea
mov
aad
jmp
shll
pusha
adc
mov
mov
fildll
pop
inc
es
sahf
add
sub
push
inc
mov
loopne
out
lahf
jbe
adc
out
loop
fcomps
inc
or
push
movsb
sarb
mov
mov
cmp
mov
mov
mov
mov
popw
mov
and
xor
jl
outsb
mov
or
or
cs
xchg
pop
jnp
outsb
les
dec
jno
popl
pop
inc
ds
ret
out
push
shll
inc
dec
cmp
add
or
test
dec
fadds
out
sub
sub
cmovne
flds
adcl
fcoml
adc
hlt
or
insb
sub
xchg
dec
es
test
gs
mov
arpl
or
stc
sub
orl
imul
adc
inc
add
mov
decl
mov
lea
xor
sub
xchg
call
xor
mov
loop
sub
scas
adc
shll
or
fsubrp
call
sub
sbb
aaa
mov
cmp
sub
ja
cs
notl
sbb
in
rol
push
mov
mov
lods
cmp
add
inc
sbb
add
test
arpl
in
mov
loope
mov
sub
sub
xor
mov
pop
xor
push
test
pop
loopne
pop
adcl
inc
or
jmp
lods
mov
das
sub
fildll
push
sub
popf
and
jp
in
sub
nop
or
out
mov
repz
les
and
enter
fimull
push
fadds
cmp
cmc
test
cwtl
fnstenv
xor
lds
inc
loopne
cmp
pop
test
jmp
cli
into
and
or
dec
inc
dec
in
fwait
in
sbbb
adc
in
lods
mov
dec
cmpsb
test
lock
push
popa
out
mov
ficomps
cmp
sub
ljmp
inc
mov
movsl
push
jb
add
pop
flds
roll
add
fs
insl
movzwl
pop
aad
push
iret
push
std
jl
add
nop
test
loop
push
inc
mov
int3
loopne
arpl
ret
out
stos
pusha
jns
xchg
mov
call
sub
lcall
mov
push
xor
imul
sar
xchg
mov
mov
xchg
inc
lea
sbb
and
mov
shlb
push
fisubrs
pusha
shlb
sub
fwait
adc
ret
test
sub
add
ret
adc
ret
xrelease
dec
int
push
ret
lahf
cli
jecxz
mov
push
inc
and
and
and
popf
mov
pusha
or
mov
sbb
aam
mov
jb
mov
cmc
inc
les
dec
stos
fwait
pop
push
cli
dec
jl
in
mov
lret
jecxz
std
fs
rorl
pop
and
push
das
loope
mov
mov
inc
addr16
bnd
xchg
mov
int3
and
jns
mov
or
mov
les
cmpsl
loope
inc
sub
leave
cmpb
stc
jns
or
test
sbb
scas
aam
stc
push
pshufw
sbbl
cwtl
or
cltd
push
addr16
dec
adc
loop
mov
les
outsl
arpl
jle
mov
adc
xor
mov
scas
mov
push
mov
daa
mov
sub
pop
std
pop
push
adc
mov
cmp
cld
or
imull
gs
out
mov
inc
jo
and
lahf
add
stos
sub
push
mov
or
and
push
cld
mov
pop
sbb
insb
push
cmp
jg
filds
and
cmp
xchg
cs
and
push
push
sub
ja
or
ret
aad
stc
pop
add
out
or
inc
outsl
gs
sbb
and
outsl
or
cld
push
shll
or
mov
sub
xchg
ret
sbb
stc
add
fsubl
dec
adc
lods
test
mov
sbb
mov
aad
inc
stos
add
push
add
add
lods
int3
ja
add
pop
int
test
fisttpll
pop
adc
or
loop
push
stos
push
or
xor
inc
cltd
mov
xor
and
icebp
push
popf
xor
test
sbb
fsubrl
mov
cmp
sahf
mov
enter
xchg
inc
insb
xchg
push
test
movsl
push
call
lret
arpl
inc
and
test
outsb
adc
xchg
mov
adc
jle
loopne
lods
or
adc
add
cmp
sub
dec
sbb
in
cmc
xor
xor
or
mov
in
mov
imul
push
inc
mov
jecxz
mov
cs
and
movsb
jp
jne
cmpb
aas
scas
push
adc
cmp
scas
and
test
int
add
jne
xchg
push
pop
adc
in
cmp
push
pushf
je
fwait
rorl
or
cmp
add
sbb
pop
sbb
push
fs
mov
inc
mov
cmpsb
mov
stos
and
mov
ja
lcall
pusha
popf
das
mov
sbb
and
stos
add
int
push
and
dec
and
pop
sub
or
fistl
inc
and
push
pop
stc
fistps
movsb
inc
pop
stos
repz
aas
add
xor
shrl
mov
adc
push
ffreep
insl
cwtl
scas
fldenv
jmp
fildl
add
push
sbb
sub
or
lcall
psrlw
aam
jmp
sub
repz
inc
adc
mov
sbb
push
push
inc
sbbb
inc
rorl
nop
inc
aas
fs
mov
push
ret
inc
xor
lods
inc
jl
adc
add
out
xchg
jno
addr16
sbb
lahf
sbb
mov
mov
add
std
lahf
add
or
mov
mov
mov
inc
mov
es
xor
mov
ret
xchg
or
or
aad
xchg
fcoml
cmp
mov
cmp
cmp
dec
lds
in
and
inc
dec
testl
pop
pop
adc
aaa
scas
loope
push
cs
cld
es
sbb
aaa
cwtl
mov
dec
inc
xlat
push
int
and
test
adc
xorl
inc
and
repnz
jno
push
rolb
add
pop
cmp
movsl
push
cli
inc
lods
inc
dec
arpl
hlt
lret
pushf
xor
and
adc
shrl
jo
cmp
adc
ficompl
loopne
jge
add
mov
enter
and
pop
add
lea
pop
movsl
dec
mov
xchg
xor
adc
or
xchg
inc
jge
jp
push
sub
and
adcl
push
or
push
add
and
mov
inc
pop
xor
cmc
xchg
sbb
in
mov
jo
cmp
mov
dec
lods
cwtl
cmpsl
dec
cmp
adc
js
xor
mov
ja
add
sbb
add
outsl
out
inc
sub
and
ret
or
popl
dec
cmpsb
mov
inc
syscall
lds
aaa
xchg
xchg
jl
xlat
and
mov
add
inc
das
mov
add
roll
sahf
or
inc
adc
es
and
mov
xchg
inc
adc
adc
push
je
out
cwtl
xchg
aam
mov
inc
xorb
loopne
push
int3
dec
or
test
ret
mov
sbbl
decb
add
popa
cli
mov
mov
adc
in
fstpl
jnp
sbb
and
dec
int
sub
and
ljmp
jmp
mov
cmp
adcl
mov
insb
add
daa
cmp
sub
sub
jo
sbb
inc
xchg
add
cld
fidivl
dec
inc
lret
scas
roll
orb
pop
xor
mov
imul
in
shlb
or
bound
push
sub
push
mov
xchg
inc
inc
lock
enter
lea
decl
and
dec
lods
mov
sub
pop
lds
jle
inc
nop
and
daa
lcall
ds
add
jnp
cmp
jmp
mov
mov
push
jo
cs
mov
pop
mov
mov
rclb
jecxz
cmp
pop
sbb
push
mov
add
mov
add
sub
sbb
es
sbb
xchg
add
inc
out
cs
lods
push
inc
icebp
push
sbb
call
xlat
sbb
push
push
cwtl
pop
faddp
insb
xor
jmp
dec
xor
scas
add
cmp
enter
pop
fsts
cmc
sbb
filds
int
loop
cmp
pushf
pop
in
mov
nop
xor
test
xchg
add
movsb
mov
stc
pop
jo
fistpl
aaa
and
jl
in
frstpm(287
imul
or
mov
dec
push
xor
mov
scas
pop
mov
adc
adc
mov
ja
fwait
dec
out
addr16
subb
jl
xchg
pop
push
lret
cmp
fldl
push
sub
popf
mov
aad
cmp
aas
jae
sub
pop
sarl
or
inc
fadds
or
mov
xor
pop
call
pushf
jo
mov
jle
push
sub
mov
or
cs
out
test
cmpsl
pop
cmp
sub
inc
pusha
scas
cwtl
pop
jo
xchg
sub
icebp
fcompl
sbb
adc
idivl
lret
icebp
inc
cltd
xchg
std
push
sbb
aas
loope
rorl
or
jle
aad
pop
enter
cmp
les
into
notb
js
sbb
and
adc
lcall
or
int
nop
sub
jge
insb
cmp
stos
pop
adc
mov
sarb
inc
mov
fldenv
test
addr16
dec
movsl
jno
push
jg
adc
jb
sbb
push
inc
pusha
das
int3
scas
add
bt
inc
movsl
lea
or
pop
jecxz
nop
ror
inc
enter
std
iret
stc
add
arpl
pop
pop
mov
mov
aaa
fs
fisttpl
pop
and
ss
sbb
add
mov
je
push
inc
dec
jl
and
loop
cmp
int
ds
jecxz
iret
mov
cmc
fisttps
jbe
orl
mov
out
fstpl
jns
subl
and
mov
imul
mov
sub
push
orb
pop
jnp
dec
sbb
arpl
mov
stos
push
test
sub
lods
add
les
mov
or
sbb
adc
stos
xchg
add
add
mov
jle
lret
movsb
sbb
xorb
or
add
test
jl
mov
pop
adcb
xor
mov
inc
les
in
cmp
dec
femms
sbb
mov
aad
inc
inc
xchg
icebp
repz
test
mov
sbb
and
xor
mov
and
pop
mov
clc
mov
dec
add
lock
jo
sbb
xchg
fimull
stos
jne
ficoml
cmp
sarb
inc
adc
mov
or
mov
mov
addb
and
test
adc
cmpsl
je
add
in
or
cmp
rorb
imul
xor
pop
sub
dec
sbb
popf
add
and
cmp
out
push
jnp
lds
push
or
xchg
adc
fistl
mov
fadds
inc
stc
pushf
cmp
fdivr
jg
lahf
test
mov
frstor
pop
loop
push
pop
lcall
fcompl
mov
cmp
sub
dec
jae
rorb
loope
xor
jl
and
lods
cmp
add
add
subl
scas
sbb
dec
aad
pop
add
out
cltd
inc
xlat
mov
cmp
fistl
cltd
mov
inc
mov
add
clc
or
lret
pop
mov
adc
mov
aas
and
xlat
insl
dec
lods
call
mov
mov
xchg
dec
cs
sbb
test
xchg
inc
pop
cmp
jg
push
pop
fstp
mov
push
or
cmp
adcl
lcall
cs
leave
or
loopne,pn
sub
mov
and
jle
mov
inc
cmp
lahf
dec
pop
dec
xchg
or
mov
fistpll
cmp
test
push
dec
cmpsb
dec
jecxz
orb
repnz
dec
push
and
jl
test
je
lahf
inc
lea
movl
sub
insb
jecxz
sub
jl
pushf
mov
cmp
int
and
mov
pop
or
mov
pop
aaa
sbb
adc
pop
sarb
filds
sub
cmp
mov
xor
mov
test
fstp
inc
imul
push
mov
jo
add
pop
sbb
iret
adc
sbb
push
xchg
push
hlt
int3
mov
std
es
ljmp
enter
or
mov
gs
sub
out
jp
pop
lea
sbb
lea
pop
cld
mov
andb
mov
jmp
mov
pop
sbb
push
add
andb
or
or
mov
lock
cli
push
cli
or
push
inc
or
and
push
inc
mov
mov
sub
mov
mov
xor
cmc
sub
adc
lods
sub
in
insb
scas
lret
inc
std
inc
mov
jb
cmp
sub
stos
mov
mov
add
xor
sbb
push
adc
push
jne
cmpsb
xor
dec
inc
pop
push
test
test
or
jno
pusha
dec
iret
add
jg
pop
mov
andl
adc
nop
mov
out
cmp
dec
popf
loopne
pop
and
call
pop
cmp
dec
mov
out
jecxz
sub
call
push
jg
ficoms
pop
push
xchg
pop
aad
and
in
lahf
push
and
popf
mov
addl
jae
mov
xor
add
inc
sub
xchg
xor
cmp
dec
cmpsl
in
adc
iret
int3
xor
ljmp
fs
out
and
cmp
insl
enter
test
sbb
add
pop
pop
push
or
dec
pop
cmpsb
and
add
xchg
popa
mov
sbb
mov
or
fcoml
jl
sbb
jnp
scas
adc
push
add
insb
in
jns
cmp
mov
add
inc
sbb
inc
xchg
jno
and
or
pop
and
xlat
jae
jecxz
add
push
fcoml
sub
inc
std
mov
xorb
push
test
lods
shl
mov
mov
pop
cmpl
testb
xchg
add
jecxz
adc
cwtl
jg
es
call
inc
mov
sub
sub
out
je
inc
scas
icebp
jle
and
jnp
pop
pushf
add
mov
into
dec
test
bound
inc
call
sub
add
xor
push
add
nop
pop
loope
cmpb
les
test
gs
mov
aam
nop
or
test
stc
mov
inc
lahf
fdivrl
push
sbb
mov
cld
and
adc
mov
ds
loopne
pop
shll
insb
or
fsubrs
pop
inc
mov
enter
mov
shrl
mov
xorb
xchg
cmp
push
cld
xor
push
xor
inc
add
popf
call
fcmovbe
dec
inc
jmp
lea
pop
out
mov
pop
pop
lods
push
mov
adc
push
pop
imul
in
movsl
out
movsl
outsb
add
xchg
test
cs
ficoms
je
in
sub
lods
cli
das
enter
pushf
inc
pop
data16
icebp
jne
xor
lcall
pop
movsb
push
test
inc
ds
imul
mov
mov
insl
test
jmp
mov
enter
enter
test
mov
inc
mov
adc
and
mov
push
add
cmp
sub
sti
add
dec
fsubrs
push
daa
mov
dec
and
je
push
push
push
dec
fcoml
pop
mov
ret
jo
fisttps
out
push
je
pop
lahf
pop
or
mov
les
loopne
xor
or
sbb
xor
xchg
and
mov
es
sub
or
push
add
push
jns
xor
cwtl
movsl
pop
pop
int
inc
xor
jp
mov
cmp
add
lods
outsl
adc
add
sbb
cmpsl
mov
push
pop
fsubrl
inc
xor
or
inc
adc
stos
mov
lahf
lock
pop
int3
push
dec
pop
jle
jbe
dec
mov
shlb
xor
sti
test
in
mov
test
and
sbb
mov
pop
pop
cmp
sbb
mov
sub
xor
dec
xorl
inc
and
testb
xor
push
inc
mov
cld
xor
adc
sbbb
mov
ret
lret
push
int3
pop
aas
or
fbld
inc
mov
mov
call
fnstcw
repz
call
or
stos
ja
adc
int
pop
lahf
mov
sbb
push
mov
push
jle
pop
mov
std
dec
xor
aam
andb
add
mov
jns
mov
and
pop
pop
xchg
movsb
adc
push
in
shll
cmp
out
mov
out
popa
mov
xorb
pop
popa
xchg
sub
mov
jbe
inc
or
push
sub
mov
adc
xor
cmp
mov
dec
out
push
mov
xlat
minps
mov
sbb
dec
daa
pop
mov
pop
jnp
je
sbb
xor
push
add
lret
xchg
loope
enter
xchg
movsb
sbbb
dec
mov
xchg
icebp
cmp
pop
out
cli
dec
dec
out
lds
and
push
dec
sarb
std
mov
loop
fldenv
adc
stc
mov
imul
jmp
subl
or
sub
shll
sahf
iret
stos
loop
xor
jo
lret
xchg
push
popf
mov
sub
jecxz
jecxz
dec
lods
pop
jb
inc
mov
scas
push
cmp
xchg
add
xor
pushf
pop
xchg
in
or
xchg
mov
xlat
aam
lret
cmpsl
scas
sub
mov
movsl
xor
add
pop
shll
add
and
adc
ds
push
in
fadd
rcrb
fsubl
call
movsl
stos
ror
sbb
jns
das
cmp
push
inc
and
push
or
popf
dec
das
inc
push
mov
pushf
mov
int
adc
aam
sbb
sti
dec
stos
lods
into
push
add
cld
iret
mov
std
loop
jecxz
inc
mov
or
or
cmp
fimuls
mov
push
cmp
enter
mov
out
jp
lahf
dec
cmc
push
or
movsb
xor
cmp
dec
test
xchg
cmpsl
lcall
pushf
test
xor
mov
sub
movd
dec
aas
jp
adc
fs
inc
inc
cmpsb
mov
add
adc
jo
cmp
sahf
int
mov
mov
xor
lea
std
xor
push
mov
dec
jbe
test
out
aad
xchg
push
in
push
jnp
pop
adc
sbb
push
hlt
mov
pop
dec
call
enter
xlat
mov
adc
or
cli
movsb
mov
and
add
xlat
or
mov
ss
push
fstpl
call
sbb
stos
and
aam
push
cmp
testl
dec
mov
mov
push
adc
sub
jae
mov
pop
dec
stos
mov
outsl
and
mov
fists
iret
add
sub
pop
std
das
push
ret
imul
test
out
cmp
mov
fbld
into
imul
push
bound
and
sub
jmp
fidivs
or
jle
imul
adc
cmp
mov
pushf
mov
jp
sub
jl
lea
inc
or
push
mov
xchg
sahf
xor
scas
jns
out
mov
scas
jmp
pop
int3
out
sub
push
jnp
push
dec
jns
jbe
stc
loope
dec
sti
xchg
dec
pop
cmp
lahf
dec
jb
mov
or
in
jbe
add
mov
xor
outsb
sahf
das
hlt
loopne
in
je
call
fdivs
mov
aad
out
int3
cmpb
push
jl
pop
or
mov
imulb
scas
and
das
rcrl
inc
in
lret
inc
push
decl
xchg
xlat
addr16
xor
jl
or
dec
jnp
inc
ja
dec
pop
movups
cmp
pop
or
mov
inc
std
mov
icebp
in
lea
pop
mov
int
cmp
loop
pop
enter
leave
in
cmc
and
icebp
out
loopne
sbb
sbb
push
das
filds
dec
xor
mov
xor
scas
cmp
inc
or
or
mov
test
and
cmc
iret
imul
dec
iret
sti
int3
icebp
and
inc
mov
mov
std
ficoms
push
int
rcrb
fldt
adc
cmp
fisttpll
outsl
mov
cmpsb
pop
std
jbe
gs
push
cmp
cmp
mov
dec
or
sbb
pop
stos
std
cmpsb
std
adc
xchg
and
xchg
lods
and
add
in
lea
ljmp
push
movsl
jl
mov
sub
cld
out
loopne
xor
repz
testb
int
and
mov
or
xchg
pop
mov
data16
and
xor
cli
mov
pop
rorb
int3
pop
pusha
ficoms
sahf
push
jb
xor
or
sub
aas
lcall
push
xchg
cmpsl
out
add
scas
aam
adc
sbb
int
mov
in
in
jp
or
pushf
mov
leave
push
cmpl
fucom
icebp
dec
push
nop
add
iret
lahf
cmp
es
jle
xchg
ds
mov
cli
out
add
or
pop
in
and
das
pop
jle
stos
dec
mov
sbb
xchg
xor
shlb
dec
clc
adc
push
xlat
sti
mov
pusha
loopne
and
pusha
pushf
mov
loop
jnp
aas
inc
push
add
cmp
sub
inc
lcall
sub
rorl
inc
das
push
aas
inc
pop
push
and
sahf
xchg
and
and
hlt
pop
mov
sub
stos
cmp
cs
dec
push
into
and
js
dec
daa
out
pop
outsl
call
pusha
jg
aas
and
sti
cld
and
xchg
mov
add
push
pop
loop
and
pop
fmuls
xchg
imul
dec
push
xchg
sub
mov
xor
xor
inc
or
push
mov
mov
call
pop
in
jge
push
scas
pop
nop
loopne
aad
inc
and
mov
xor
add
xchg
shlb
hlt
stos
mov
dec
dec
jns
jg
mov
sbb
int3
xor
cwtl
and
dec
nop
loopne
fmull
popf
nop
ds
and
pusha
xor
inc
js
in
rcrl
and
inc
pop
lods
gs
mov
stc
cmp
sub
cmpl
adc
cmp
fmull
cmp
pop
shl
push
pop
cmp
sahf
cmpb
lret
in
xor
mov
xchg
sub
lahf
lea
hlt
outsl
rolb
and
pop
mov
sub
pop
mov
pop
mov
mov
and
mov
imul
push
push
pop
leave
and
adc
xchg
pop
gs
sub
and
jno
fxam
fwait
movsb
jbe
push
and
sbb
or
data16
mov
notl
push
xchg
cmp
adc
std
loope
rcrb
pop
outsb
add
mov
dec
ffreep
pop
push
add
or
pusha
movsl
dec
mov
stos
inc
into
add
jae
push
movsb
pusha
inc
imul
mov
pop
add
xchg
icebp
xchg
testb
xchg
or
push
inc
lcall
pushf
xor
xchg
lret
outsb
pop
sub
enter
dec
pop
in
or
mov
xchg
shlb
inc
test
nop
mov
cs
xchg
adc
inc
mov
rorb
push
and
or
mov
mov
cmp
cs
rcrb
sbb
adc
xor
or
pop
cmc
rorb
popa
cld
xor
icebp
scas
imul
pop
dec
push
or
ljmp
data16
mov
mov
pop
jno
and
inc
sbb
outsb
xchg
call
out
aas
inc
cmp
lahf
fldl
cmp
das
imul
dec
pop
mov
push
and
je
jle
lock
add
dec
pop
pop
out
insb
pusha
jp
xchg
pop
stos
mov
loopne
out
add
lahf
shrl
pusha
mov
lret
adc
jmp
cltd
pop
jb
and
addr16
mov
dec
and
jne
jg
push
fldenv
inc
pop
and
dec
dec
inc
popa
cs
dec
enter
rdmsr
loop
and
xchg
scas
decb
stos
dec
aad
pop
aam
sub
out
mov
incb
sbb
push
pop
dec
out
xchg
rdtsc
add
mov
push
out
orb
adc
dec
faddp
scas
mov
imul
push
mov
mov
imul
pop
fildl
lea
pop
int3
lahf
jp
xor
xchg
daa
lret
adc
iret
sar
adc
sub
add
xor
and
and
mov
sub
mov
pop
fsubl
mov
das
and
loop
lcall
popa
shlb
int
jae
cmp
call
adc
dec
mov
add
mov
mov
popf
mov
adc
jecxz
mov
push
sbb
cmp
xor
lea
xchg
or
pop
inc
sub
out
jb
leave
or
add
pop
sbbb
push
adc
xor
dec
mov
mov
xor
out
stos
mov
and
mov
arpl
add
push
cmp
xchg
jae
jb
and
stos
push
or
xor
and
and
inc
cli
iret
in
pop
add
movsl
insb
xchg
int3
out
testb
sub
andl
loopne
sub
aas
pusha
or
mov
or
test
push
stos
adc
mul
sub
jl
outsl
es
popf
xchg
sbb
int
mov
push
sarl
jp
mov
inc
std
mov
xlat
imul
sub
dec
mov
and
xchg
push
cld
rol
lret
negb
aad
inc
pusha
mov
cmp
insb
nop
lahf
push
imull
adc
push
jl
cmp
mov
cmp
jg,pt
outsl
inc
das
xor
test
mov
sbb
xchg
and
dec
push
push
inc
xchg
push
cmp
mov
test
imul
and
fldl
outsb
es
repnz
cwtl
push
dec
outsb
hlt
rclb
imul
sti
in
jnp
fiadds
and
hlt
push
adc
or
xchg
pop
inc
sub
lcall
xor
mov
xchg
add
data16
inc
push
inc
aas
dec
mov
sbb
out
lods
divb
xlat
shl
sbb
leave
xor
divl
bound
and
les
mov
mov
fcmove
popa
mov
cmp
dec
test
sarl
mov
lods
mov
adc
or
test
push
dec
jb
gs
pusha
sbb
mov
and
sub
jno
test
test
cmp
inc
in
xor
jnp
add
gs
xchg
mov
dec
adc
sti
push
dec
mov
cmp
or
icebp
add
inc
stc
test
xlat
inc
ret
popa
lret
push
xlat
xchg
adc
inc
xor
fisubs
jns
jb
test
loope
dec
test
inc
outsl
cli
daa
xchg
or
cmp
ja
js
pop
mov
sbb
or
mov
dec
cli
rolb
push
xor
stos
adc
insl
push
pop
fstpl
cmpsl
xchg
push
or
jne
cmpb
add
dec
shl
add
int3
dec
dec
mov
jnp
movsl
pop
sbb
jns
rcrb
xor
pushf
mov
cmp
or
inc
push
stos
mov
jae
mov
icebp
das
or
cmc
cmp
aad
fsts
sub
pop
mov
push
push
mov
les
sub
adc
lods
cmpsb
insb
dec
fmuls
pop
lds
pop
inc
stos
jnp
adc
dec
imul
push
fcompl
hlt
decb
mov
pop
jo
xchg
or
jne
xchg
push
insb
out
inc
pop
setb
bound
in
aas
test
sbb
adc
and
xlat
std
jp
out
jg
aam
stos
sbb
adc
jb
insb
and
in
test
cmc
sub
adc
popf
or
pushf
pop
iret
out
int
lods
les
or
imul
or
std
xlat
adc
sbbl
in
cs
add
les
adc
ret
repnz
jno
push
add
xchg
inc
dec
and
daa
sbb
pop
mov
pop
fnstcw
adc
jmp
cwtl
mov
fcomp
in
mov
cmp
cmc
mov
roll
pop
ret
inc
xor
dec
shll
fcomps
jo
jl,pn
xchg
push
push
movsl
add
cmpsl
or
mov
roll
sti
inc
mov
cltd
test
stos
in
mov
scas
repz
add
enter
in
stos
scas
imul
rorb
sahf
sbb
inc
pop
mov
xor
movsb
sub
inc
dec
adc
stos
es
das
pop
xchg
fs
je
inc
mov
pusha
or
movsl
push
xor
int
popf
lret
rclb
jge
pop
insl
mov
sub
bound
test
jp
or
cmp
pop
mov
mov
add
push
add
stc
jg
iret
cmp
std
leave
add
repz
test
fistpll
sahf
cmp
or
sahf
ja
cmpsb
flds
das
xchg
movsl
xchg
stos
data16
nop
and
push
and
cmp
dec
sub
add
mov
cmp
testl
insb
popf
jne
fistpll
pop
popf
insl
add
test
std
dec
mov
jecxz
jp
outsl
popa
popf
rol
js
add
mov
jmp
mov
cmpsl
jbe
and
dec
lock
shrb
jno
jae
jle
sub
jl
cmc
jp
xor
mov
das
sbb
fsub
fwait
xor
aaa
sbb
push
dec
or
mov
out
movsl
and
xchg
scas
pop
ds
push
and
xchg
dec
adc
aad
push
les
mov
jno
popa
lods
cmp
mov
mov
pop
stos
add
xor
int
test
mov
push
cs
push
push
out
or
je
clc
xchg
jae
ret
push
mov
pop
pop
or
andb
jmp
lods
arpl
sbb
fs
cmp
push
adc
call
and
mov
push
sbbl
or
lahf
xchg
cmp
and
fimuls
sbb
push
mov
push
loop
lock
xchg
insb
test
mov
mov
xchg
lods
loop
jp
push
lahf
fs
sub
pop
test
insb
cmp
mov
out
sbb
inc
jne
mov
xor
dec
and
out
mov
cmp
das
adc
in
insb
aam
sbb
cmc
pushw
lahf
dec
mov
lahf
nop
push
and
mov
movsl
mov
lock
xchg
ljmp
jb
sub
sbb
mov
mov
jns
push
mov
or
add
into
cmp
dec
dec
dec
mov
in
shlb
push
cld
sti
push
mov
jb
rcrl
rclb
sti
clc
jne
pop
js
jmp
or
push
in
jb
mov
ja
jns
sbb
lods
pop
add
mov
xor
aam
mov
cmp
sub
adc
ret
aas
push
rclb
in
push
adc
stc
cmp
push
add
fldcw
shlb
movsb
sub
inc
and
nop
stc
sub
fs
rol
dec
pop
pusha
xor
test
or
sub
gs
test
rcrl
jge,pt
cmc
sbb
jae
mov
pop
add
inc
dec
xchg
or
xor
sub
movl
add
in
sub
icebp
ljmp
add
xor
cmc
ss
sarl
into
pushf
push
pop
dec
test
jge
cmp
pop
fildl
pop
in
test
push
and
roll
xchg
stos
mov
jl
idivb
leave
nop
mov
in
xor
test
jno
push
in
ja
cmp
xchg
outsl
stc
xchg
push
into
inc
into
add
and
push
lahf
jno
mov
sbb
fbld
push
cmp
jl
cli
mov
jbe
xor
cwtl
pop
cmp
sub
insl
int
lahf
mov
push
out
xor
cmp
cmp
jo
xchg
in
xlat
xor
mov
sub
xacquire
idivb
daa
frstor
fistpll
insb
icebp
and
jle
jno
daa
adc
jbe
stos
inc
cmp
lods
add
adc
push
jl
mov
in
daa
stos
jl
and
add
mov
adc
rcr
dec
cmpsb
aas
ljmp
enter
rclb
test
dec
lahf
pop
xchg
pop
or
inc
add
cmp
bound
jno
pushf
xchg
push
pop
pusha
imul
add
push
mov
jg
jl
pop
xor
xlat
int
and
lea
repz
sub
push
mov
loope
mov
scas
push
hlt
mov
xor
ret
cwtl
and
xchg
add
leave
add
pop
mov
lret
jo
addl
push
pop
inc
or
xchg
sub
pop
cmp
sbbb
mov
mov
std
sub
stos
gs
sub
dec
loopne
lahf
loopne
jo
or
nop
sub
lahf
rclb
and
and
idiv
mov
inc
les
xchg
inc
or
adc
cmp
dec
pop
pusha
unpcklps
push
scas
das
or
adc
add
je
jmp
mov
lahf
fwait
int3
mov
add
mov
xor
mov
dec
push
mov
xor
inc
mov
cmp
ficoml
out
sbb
add
inc
sbb
or
or
add
bts
inc
pushf
fildll
in
stos
and
and
pop
xchg
inc
repz
pop
inc
inc
sub
int3
fbstp
push
int3
sub
outsb
popf
scas
lahf
cld
pop
sub
hlt
int
jmp
sbb
sub
lods
cltd
cmp
aad
nop
testl
imul
test
jbe
enter
cmpsb
cmp
stos
lods
fstpt
sub
push
mov
les
scas
aad
pushl
popf
and
mov
or
and
sub
sbb
push
imul
lret
pop
sub
mov
imulb
popf
push
fsubr
fcomip
jmp
pop
sub
enter
and
push
jbe
lret
stos
and
pop
lock
add
lahf
leave
int
rcr
xor
fisubrs
jb
pop
cmp
pusha
mov
fidivs
mov
shll
movsl
add
mov
cld
or
and
mov
pop
xchg
xlat
rcll
mov
inc
pop
mov
adc
jp
imul
outsb
or
clc
mov
cmp
mov
pop
cs
adc
stc
sbb
in
ds
cmp
or
lret
ljmp
lods
mov
mov
add
cmp
push
leave
jns
or
int3
lret
cs
push
outsl
push
popf
jbe
push
test
mov
and
sbb
sbbb
fs
mov
add
or
inc
cmp
test
add
dec
and
inc
jno
mov
pop
xlat
sbb
pop
loop
inc
mov
pusha
push
mov
cli
leave
icebp
pop
lcall
dec
xorps
push
in
add
or
les
push
mov
xchg
fstpt
popa
rcr
mov
pushf
cmp
das
sbb
scas
mov
fdivrp
dec
pop
cmc
enter
ds
xlat
or
jns
pop
or
mov
fstps
or
sub
call
pop
or
pushl
repz
ja
or
enter
lods
call
ja
add
xor
adc
out
dec
adc
add
jnp
add
movsb
jmp
je
decl
xlat
cmc
in
jb
dec
leave
or
inc
xor
into
mov
xlat
out
xor
fistps
out
fadds
fistpl
and
sbb
xchg
jge
pop
and
jmp
add
or
lahf
aaa
stos
jecxz
mov
mov
repz
stos
sarl
aam
rorb
sub
xchg
cmpsl
pop
pop
adc
add
add
loopne
aam
cmpb
hlt
lods
dec
scas
negb
in
sub
push
out
sub
push
add
adc
les
fcoml
dec
mov
sub
mov
jno
or
or
lock
outsl
roll
jg
cmc
jge
pop
xchg
test
cld
pop
dec
jmp
add
add
or
mov
or
loopne
push
xchg
push
xchg
add
mov
cmp
div
shlb
dec
popf
addb
hlt
mov
ret
xchg
enter
popf
outsl
aam
inc
dec
sti
mov
popf
sub
or
popf
mov
xor
stos
fcmovbe
lahf
scas
in
divps
or
xchg
mov
and
pop
jl
dec
xor
mov
movsb
mov
or
cmp
push
cwtl
mov
nop
sbb
inc
jecxz
mov
subl
xchg
cmp
cmpsl
insl
subb
and
and
ds
gs
jns
insl
mov
xchg
inc
scas
out
into
bswap
jp
xor
xor
repnz
and
inc
lahf
pop
cltd
cmpsb
test
or
sbb
call
add
lea
fisubs
aad
scas
or
ljmp
loope
out
fsts
in
cmc
pop
cld
sahf
sub
add
addr16
lcall
popf
and
mov
or
or
fldt
fsts
or
mov
stos
fwait
sbb
orb
mov
jae
mov
inc
push
cmp
andb
das
push
stc
insl
mov
mov
and
repz
popf
xchg
pop
jno
mov
arpl
pop
cmp
jmp
push
fstpt
int
mulb
jmp
push
push
int3
adc
pushf
dec
sub
push
inc
mov
dec
cmp
or
push
fistpl
lea
cmpsb
sub
mov
inc
adc
les
pop
mov
filds
cs
xor
dec
sbb
push
jge
lea
in
sbbl
adc
pop
dec
adc
pop
subb
mov
or
out
sbb
pop
inc
inc
mov
pushf
les
sbb
jecxz
adc
add
dec
pop
dec
sub
fst
cli
add
xchg
int
jo
shll
jbe
ljmp
mov
in
xor
and
sti
outsb
leave
sbb
test
je
cmp
lds
aad
push
dec
cmp
push
inc
insb
insb
inc
or
fbld
add
mov
aad
adc
jl
std
mov
lss
mov
cmp
cmp
fstpt
sbb
movl
clc
or
pop
xchg
mov
jle
fdivl
push
je
xchg
pop
lcall
cmp
cmp
push
repnz
or
inc
or
adc
jae
sbb
mov
jmp
add
push
add
mov
dec
mov
insb
jle
push
cld
shr
sahf
inc
sar
fdivrs
adc
inc
ss
jle
cmp
data16
cmp
lahf
cld
cmpsl
cmp
scas
pop
mov
xchg
cwtl
mov
sahf
lahf
dec
sbb
int
cmpsl
movsb
dec
xor
dec
call
mov
push
dec
cmp
push
hlt
or
stc
mov
pop
lret
cmp
cmp
push
xor
add
aaa
sub
faddl
inc
add
sub
icebp
push
sarb
lods
push
add
adc
pushf
popf
idivb
lods
sub
inc
push
jne
daa
out
xorl
and
pop
lock
jle
mov
ss
enter
and
cmp
or
cmp
xor
push
xor
xchg
pop
and
leave
push
sub
push
sub
sub
ffreep
cmp
fstpl
mov
add
sarb
cld
jl
adc
sub
subl
xchg
enter
inc
pop
loope
dec
shrb
add
and
inc
mov
aas
sub
or
sbb
push
or
pushf
pusha
jge
cmp
inc
sub
lea
and
jns
int
inc
or
dec
and
or
ss
cmp
and
dec
sbb
fistps
sub
inc
sbb
stos
and
jge
mov
cmp
jecxz
loop
fucomip
orl
ret
adc
cmp
pusha
inc
push
sub
pop
sub
push
xchg
pop
pop
jl
or
and
sub
loope
or
cs
pop
xor
push
sbb
add
sub
cmp
or
add
insb
mov
xchg
out
sbb
adcl
int
mov
nop
in
sub
leave
adc
xor
in
movl
jns
mov
and
decb
mov
add
sbb
pop
loopne
sub
pop
pushf
ja
mov
popf
inc
add
test
inc
sbb
mov
cld
xor
inc
faddl
add
jge
push
loop,pn
sub
cmp
insb
hlt
rorb
push
jl
std
fidivs
addb
ficomps
adc
push
nop
rorb
sbb
dec
aam
pop
cld
xor
insl
add
ret
lds
rol
std
roll
jnp
dec
or
add
rcr
into
adc
int
jb
mov
cltd
sbb
fcoml
mov
pop
in
sbb
ds
cmpsb
jp
mov
orb
clc
sarl
dec
inc
aaa
in
pushf
sbb
and
and
or
fdivrl
inc
lahf
rcr
xor
rcll
sbb
sbb
push
push
cmp
mov
out
cmp
mov
sahf
or
jmp
mov
fwait
push
mov
cmpl
push
out
std
mov
cltd
neg
sahf
adc
xor
movsl
std
cmp
cmp
inc
mov
dec
and
arpl
jle
aaa
push
pop
lds
aaa
scas
xchg
sarb
sbb
fwait
push
xchg
pop
cmp
lahf
icebp
or
add
aam
idivb
and
insb
mov
les
sbb
mov
or
mov
jle
or
lods
adc
xchg
pop
mov
mov
repz
fistps
mov
cld
call
xchg
cmp
jmp
add
or
or
jl
push
mov
loope
shll
pop
popa
hlt
mov
pop
push
sbb
push
loop
pusha
insb
test
adc
jl
pop
mov
jno
push
aas
inc
lret
jge
cwtl
sar
out
out
aaa
icebp
inc
and
negb
or
xor
lock
cmp
into
addb
cmp
incb
lahf
xor
xchg
stos
dec
cmp
pop
in
dec
or
out
cld
fmull
aam
nop
inc
add
jg
movsl
mov
and
inc
cmp
push
push
cld
jge
push
ret
out
cmp
outsb
adc
int3
jo
push
lods
cmp
cmp
or
pop
pop
cmp
sar
add
mov
sub
jl
cmpb
mov
jne
cmp
jge
xor
mov
and
pop
hlt
sbb
or
jle
and
inc
mov
std
inc
mov
add
test
mov
jle
mov
jnp,pt
push
lods
dec
mov
sbb
pop
aad
std
lret
sarl
imul
and
inc
sub
inc
or
cmc
xor
and
andl
pop
test
int
pop
sar
mov
cld
lods
jmp
or
test
std
loope
movsl
enter
test
loope
outsb
xchg
es
fdivrp
scas
cmp
push
or
push
xor
cld
push
pop
inc
sub
insl
and
mov
popf
jne
cmp
inc
mov
xlat
int
subl
sahf
pop
and
inc
lahf
mov
sbb
and
cs
mov
popf
flds
and
ffree
insl
aas
sarl
pop
jmp
sbb
test
or
and
add
dec
sbb
les
xadd
jg,pt
xorl
leave
popf
and
addl
arpl
jb
lods
pop
add
cltd
int
mov
and
mov
mov
and
xchg
xor
push
incb
movb
sub
mov
enter
das
cmp
shll
xchg
jl
iret
mov
jge
sbb
sub
inc
sbb
cmp
std
outsb
cmp
popf
add
mov
jl
pop
addl
mov
popf
fwait
cmpl
cmp
mov
shl
cltd
popf
dec
leave
mov
jecxz
lods
mov
popa
in
sbb
shll
sarb
lds
pop
aad
pop
int
or
mov
inc
pushf
dec
int3
jge
jns
push
popa
fucom
mov
jae
mov
jge
loopne
fnstsw
call
leave
fstpt
fcomps
pusha
into
ss
shlb
add
fdiv
in
mov
lods
mov
popf
or
cmpl
loop
shlb
fisubrs
add
and
mov
sub
mov
cmp
mov
sub
jne
fdivl
mov
add
inc
jge
cmpl
mov
or
mov
nop
cwtl
loopne
std
mov
mov
pop
sub
xchg
lods
push
shll
stos
fmull
test
xor
dec
ret
orb
cmp
pop
mov
cmp
push
nop
in
cmp
add
in
xchg
xchg
jl
arpl
gs
hlt
fdivl
and
dec
or
addr16
sahf
dec
cmp
scas
inc
loope
ror
cmc
repz
dec
cmpb
rol
dec
xchg
and
int
mov
push
pop
mov
pusha
jl
push
inc
and
outsl
dec
pop
cs
jl
loop
pushf
enter
fwait
cmp
stc
out
pop
or
jge
mov
aad
jns
fidivl
lea
jecxz
xchg
lods
cmp
pop
push
mov
and
test
or
mov
push
test
lret
dec
lods
cmpsb
xor
jp
add
or
push
mov
stos
fsub
cmpsl
add
leave
jle
fnstcw
jge
popa
xchg
insb
xor
cltd
cmp
cmp
ret
inc
cld
mov
push
push
adc
xor
cwtl
lret
or
or
test
and
mov
jl
pushf
inc
or
sahf
sub
pop
jg
push
sub
out
xlat
outsb
scas
dec
mov
fcompl
stc
fwait
sbb
shlb
out
or
cmp
int
pop
xor
ror
jno
sub
sub
mov
mov
dec
mov
adc
sbb
mov
sbb
mov
cmp
and
jb
and
mov
adc
fdivrs
cs
and
jmp
xor
and
inc
sub
test
or
inc
mov
or
sub
jo
inc
jb
std
pop
sub
inc
or
cmp
test
test
cmp
xor
or
std
xchg
sub
inc
jp
cmp
push
adc
and
push
add
and
cli
jge
or
nop
scas
inc
rorl
aas
popf
sbb
sub
imul
dec
and
sub
push
imul
and
xor
mov
adcb
dec
or
pop
push
neg
mov
iret
fmull
cs
or
loope
lock
add
mov
pop
call
lods
or
cmpb
sbb
pop
lahf
and
out
dec
mov
andb
xor
mov
std
and
subl
push
pop
and
inc
jae
pop
and
jno
in
pop
divb
sbb
jmp
popa
and
xchg
icebp
adc
and
lahf
mov
fidivrl
lea
jle
pop
jne
pop
add
and
shrb
jne
sbb
or
lret
adc
inc
or
je
hlt
shll
jae
xchg
fmul
pusha
lods
or
and
cmp
or
insb
jns
data16
adcl
andb
adc
imul
push
cmc
cmp
stos
pop
rorl
daa
mov
dec
jle
jecxz
sti
jns
sub
or
negl
mov
leave
mov
popf
int3
push
outsb
or
or
xor
cwtl
vphaddubw
cmp
add
aas
xor
fists
mov
dec
cli
xor
popf
jmp
mov
negb
pop
dec
and
and
jge
bound
stos
mov
push
fisttps
jb
fistps
push
fstps
shll
movsl
mov
jg
inc
dec
jge
movsl
lods
lahf
dec
pop
ds
jno
and
pop
stos
shll
dec
cld
xchg
fistpl
xor
dec
push
jp
shll
xchg
movb
icebp
cmp
mov
in
fnstsw
add
imul
push
popf
mov
iret
mov
mov
sub
test
movsl
mov
and
or
cli
sub
stos
jo
pop
mov
clc
pmaxub
pop
insb
popa
adc
mov
xadd
xchg
or
and
mov
popa
xchg
jnp
loop
hlt
adc
mov
sbbl
and
sub
add
notb
add
popf
cld
mov
lea
loop
xchg
subb
out
ss
pusha
jo
stos
cmp
jmp
mov
neg
sbb
sbb
iret
je
aad
cmp
pop
jnp
in
sub
arpl
sbb
jle
aas
std
popf
nop
fbstp
mov
dec
push
jle
adc
add
mov
or
sbbb
imul
sbb
jae
lcall
test
sti
fldcw
cmp
subb
mov
repnz
pop
in
filds
mov
in
shld
xchg
push
jns
mov
loope
or
and
push
sbb
mov
add
mov
sbb
lahf
push
xor
add
adc
xor
cmp
jne
out
add
sub
inc
or
cld
leave
in
jle
movsl
xchg
or
push
int
add
xor
dec
inc
jno
fildll
jecxz
cmpsb
push
in
mov
xor
lahf
stos
rep
cmpb
in
sbb
shll
out
ret
xchg
icebp
dec
shll
cmc
mov
pushf
and
push
les
mov
pop
sbb
out
xor
pop
cmp
jnp
lods
dec
popf
or
pop
shl
mov
pop
fsubl
sub
pop
into
lds
push
jp
cmp
xor
xchg
mov
xor
std
inc
cmp
xor
pushf
dec
push
and
inc
dec
xchg
hlt
imulb
call
shll
or
stos
mov
out
pop
pop
and
int3
inc
and
sarb
dec
lahf
test
add
mov
cmp
in
inc
sub
fcompl
repnz
leave
mov
mov
and
inc
popf
xor
xor
into
loope
xor
pop
jp
shl
ljmp
or
mov
dec
add
add
dec
enter
int3
xchg
rcll
cmc
dec
je
push
mov
dec
ret
cld
and
pop
loop
test
mov
pop
into
push
adc
mull
in
cld
push
nop
sub
dec
dec
xchg
ljmp
mov
fs
inc
pushl
loopne
sub
cmc
nop
push
dec
add
lahf
push
xchg
jmp
fadd
ds
inc
out
stos
rcrb
int
daa
fs
cmc
inc
xchg
enter
mov
inc
and
dec
and
mov
add
add
adc
lds
push
inc
sbb
dec
cmpsb
and
lods
sub
push
mov
jle
insb
lahf
push
inc
push
pop
ljmp
lret
je
dec
sti
into
cld
dec
cmp
notl
jo
mov
sbb
or
out
sbb
inc
fs
fldt
mov
hlt
arpl
or
push
and
mov
inc
dec
sub
js
or
mov
or
outsb
stc
imul
mov
add
inc
push
leave
test
int
je
dec
out
dec
ret
and
rorb
rcrb
repz
fs
aam
xlat
sub
sub
in
push
test
push
push
inc
or
std
stos
pop
shrb
inc
jo
inc
sbb
popa
cli
jne
cmp
mov
pop
mov
add
scas
adc
pop
jmp
shr
rcrl
cmc
insl
int
stos
sbb
scas
jge
sub
xchg
daa
outsl
adc
or
dec
sbb
or
es
es
mov
jecxz
pop
inc
jo
pushf
in
inc
cwtl
pop
push
scas
aas
ja
pop
leave
daa
xlat
pop
mov
sbb
jae
jl
scas
std
test
jecxz
mov
mov
and
sub
mov
cmpsl
dec
lret
rolb
sbb
pop
xorb
sbb
pop
mov
pusha
jmp
or
insb
jge
addr16
repz
xor
pop
and
xchg
fucomip
mov
repnz
paddsw
dec
arpl
popf
or
out
lcall
into
stos
rorl
jge
lds
mov
mov
insb
flds
add
pushf
stc
jle
jne
cmc
xor
dec
icebp
fs
inc
sub
ret
in
mov
or
lcall
mov
pushf
and
add
cld
pushf
test
push
xor
mov
mov
or
lcall
cmpsb
mov
add
addl
xchg
sub
jp
jl
mov
jo
fisttpl
and
fldenv
popa
push
pushf
dec
shlb
filds
pop
lahf
xor
outsb
xchg
xchg
insb
imul
xor
xor
sbb
call
sub
pusha
in
gs
daa
xchg
push
add
out
icebp
repz
push
aam
int3
mov
in
jecxz
mov
filds
dec
push
xor
hlt
test
popf
or
cmp
inc
lea
and
dec
sbb
aas
rclb
jne
cmc
cmp
xorb
sbb
sbb
call
bts
and
mov
jne
ltr
or
lods
inc
jnp
imul
iret
xchg
add
cmp
pop
push
in
fcomip
jecxz
dec
or
xchg
repz
js
dec
or
pop
enter
enter
sbb
ficomps
ss
add
xchg
push
cmp
cmpb
inc
stos
adc
fistpll
xchg
daa
or
mov
jmp
inc
mov
pusha
testl
test
or
jl
cvttps2pi
dec
add
iret
and
imul
lea
sub
dec
mov
shll
in
jno
push
jne
loop
mov
pusha
and
adc
nopl
fldl
loope
mov
pop
sbb
call
add
jne
ret
xor
sub
das
push
mov
dec
test
popa
cmp
mov
pop
xor
scas
sbb
lahf
sbb
or
pop
mov
push
and
cmc
cmpsb
mov
fcomps
mov
cmp
jmp
nop
dec
xchg
pop
cwtl
jns
xchg
jns
and
inc
and
loop
sbb
mov
addb
adc
jno
outsb
and
inc
inc
pop
push
daa
stos
dec
sbb
mov
loope
lahf
mov
dec
inc
mov
fcoms
xchg
loopne
je
jo
pop
int
jp
hlt
add
fsubrl
sub
daa
aad
lods
xchg
pop
in
mov
and
push
lea
xor
clc
lea
gs
paddsb
mov
adc
or
in
insb
xchg
cmp
ss
cmpl
adc
lahf
jb
cmp
xchg
lcall
ficomps
and
mov
lahf
inc
adc
out
imul
mov
and
out
mov
mov
ds
jne
scas
add
push
out
mov
push
push
mov
imul
popf
pop
xor
pop
push
popf
mov
int
movsl
cmp
add
adc
jle
cmp
lahf
mov
jecxz
aam
push
mov
dec
loopne
adc
push
popf
push
pusha
add
dec
shl
mov
xor
sub
mov
mov
loop
sub
les
add
inc
cld
insb
push
push
mov
or
adc
cli
xor
iret
shll
aas
in
push
imul
jg
mov
add
lahf
adc
out
xor
insb
out
jl
insb
dec
xor
aam
jne
mov
mov
cltd
cmp
in
stos
and
cld
dec
inc
inc
dec
fwait
push
mov
ss
addr16
push
in
nop
xor
mov
mov
out
cmpsb
adc
inc
cmpl
pop
push
fmull
pop
loopne
psrlq
and
cli
and
adc
or
pop
sbb
nop
cmp
pop
jg
mov
sub
and
iret
mov
mov
push
push
adc
ljmp
adc
imul
sub
inc
idiv
addb
dec
xchg
sbb
mov
dec
mov
ret
sub
or
or
roll
mov
jns
jno
push
and
icebp
add
popa
scas
mov
inc
cmp
lds
xchg
inc
cmc
rcrl
fisttpll
cmpsb
shll
insb
cwtl
dec
sub
js
push
addb
jo
cmp
les
sub
int3
jmp
fnstenv
sbb
sbb
dec
push
cld
sbb
and
pop
in
out
and
dec
jl
cwtl
pop
sbb
jl
inc
pusha
cmp
pop
mov
cmp
jb
push
jnp
and
or
je
pop
lahf
and
xlat
aad
dec
sbb
out
or
inc
call
mov
sbb
xchg
dec
push
enterw
cmp
ds
adc
enter
mov
and
dec
push
aas
jge,pn
out
scas
push
dec
cmc
scas
int3
pop
fiadds
ss
fnstsw
int3
cltd
xor
or
mov
mov
aas
mov
and
mov
xor
dec
adc
xor
mov
std
test
push
push
push
or
mov
les
sbb
or
iret
test
sbb
push
jmp
sbb
cmp
movsl
xchg
lds
loopne
mov
shld
cmp
add
inc
jl
xchg
ljmp
or
sub
inc
out
inc
aas
pop
mov
cmpsb
ret
jo
xorb
data16
pop
lods
gs
stc
ds
pop
pop
in
xorb
minps
cmp
jg
mov
lds
sbb
jg
xor
push
inc
movsl
in
jmp
fcmovu
and
dec
icebp
sub
cmc
xorl
and
ljmp
sub
sub
data16
pop
aaa
dec
jno
fmull
or
out
icebp
ret
cmpl
xor
xor
pop
lea
sahf
popf
cmc
or
jne
es
rcrl
mov
push
sub
inc
fwait
sbb
popf
cmpsl
sbb
jae
mov
sbb
iret
test
and
mov
pop
scas
mov
add
or
adc
jmp
fs
std
mov
or
xor
pop
or
jae
or
push
fcmovnu
add
lahf
inc
div
lea
cs
cwtl
jl
cmpsl
and
mov
lods
js
stos
add
pop
mov
enter
mov
inc
jle
sbb
push
dec
lahf
movsl
adc
adc
cmp
mulb
xor
mov
jg
sub
mov
pop
fstl
push
xor
movsl
dec
stos
lret
or
cs
rcrl
and
int3
cmp
mov
outsl
xor
ds
adc
or
xchg
call
sbb
iret
subl
fdivrl
loope
push
dec
sub
je
ficoml
jl
icebp
dec
adc
cmp
and
inc
rcrb
filds
mov
and
fs
pop
add
cmp
adc
or
loop
pop
subl
and
cmpsl
or
sbb
jl
add
mov
int
mov
and
mov
dec
push
inc
sbb
das
sub
push
push
cld
push
adc
or
les
sub
test
push
icebp
or
jne
jge
xchg
out
mov
fcoms
mov
sbbl
ds
jecxz
mov
sbb
aad
push
add
adc
sarl
cmp
and
test
xlat
jecxz
js
push
lock
mov
shrl
push
shll
push
sub
inc
pop
sub
sbb
inc
inc
xchg
mov
jle
add
ss
cmpsl
fisubs
push
push
pop
out
inc
inc
imul
jne
scas
sahf
mov
jg
out
fiaddl
pop
mov
bound
cmp
cmp
cld
and
stos
mov
sbb
mov
jg
aas
inc
ret
test
lahf
negb
and
fnsave
sbb
xlat
and
int
xchg
jmp
pop
in
lea
movsl
pop
add
inc
loopne
stos
sub
sbb
in
icebp
or
dec
lahf
cmp
pop
scas
ret
jmp
or
xor
sub
lods
lcall
push
jno
scas
enter
inc
or
jne
ljmp
push
jae
sub
xor
outsb
lds
mov
adc
xor
rolb
nop
inc
pushf
dec
sub
mov
cmc
sub
xchg
addr16
scas
rorl
push
mov
cs
idivb
sub
pusha
std
out
xor
mov
xor
cmp
add
xor
clc
in
fisttpl
jno
sub
outsb
mov
add
add
mov
mov
inc
ljmp
insb
ficomps
sub
test
int
and
adcb
rorl
outsb
and
idiv
push
popa
sub
lret
insl
xchg
pop
add
add
pop
dec
daa
stc
sti
mov
push
lahf
dec
or
std
xchg
mov
test
adc
negb
sbb
and
adc
clc
pop
ss
sets
xor
cld
pop
inc
cmp
rcrl
fs
xchg
pop
daa
loope
leave
std
add
inc
dec
and
and
xchg
push
data16
int
test
out
aad
sub
jno
jecxz
sahf
mov
insb
in
and
out
pop
cmc
pop
add
sub
ja
lret
cvttps2pi
push
cmc
mov
bound
cmp
fildll
daa
ljmp
lret
push
add
mov
bound
bound
insb
outsl
dec
js
push
iret
int3
add
mov
push
mov
movsl
in
iret
or
and
mov
cmc
aam
icebp
inc
repnz
or
inc
and
movsb
adc
nop
mov
mov
sub
inc
xchg
jo
add
sahf
mov
mov
xchg
idivb
cmp
out
nop
ret
inc
mov
dec
sbbl
sub
int
cmp
roll
das
dec
push
inc
sbb
int
aaa
xchg
scas
cmp
jg
adc
stos
inc
mov
xor
loopne
aas
add
cmp
fisttpl
dec
and
gs
xchg
mov
negl
pushf
inc
pop
call
in
frstor
scas
dec
insb
lods
mov
pop
sub
ss
int3
push
and
lahf
cld
pop
jb
push
iret
mov
test
pop
fsubl
dec
cmp
jo
push
out
sub
es
jge
aas
dec
aas
pop
repz
in
mov
add
cld
xchg
dec
pop
fimuls
and
or
push
sbb
lock
ds
lds
add
stc
cmovae
xor
xor
push
adc
in
insb
mov
verr
push
into
lret
xor
dec
mov
xor
js
jecxz
aaa
jp
sbb
sbb
out
daa
sub
sbb
xor
into
inc
loop
mov
inc
adc
sbb
and
loope
mov
lcall
inc
or
add
xor
loop
sti
pop
adc
std
adc
inc
int
iret
ss
inc
fldenv
xchg
and
dec
lods
filds
ss
or
add
mov
shl
aad
shrl
add
xor
or
xchg
mov
mov
push
mov
aas
scas
outsl
adc
mov
out
std
mov
imulb
aas
icebp
jo
pop
lock
xchg
cmpsl
mov
sub
push
or
out
push
adc
int
inc
ss
movsb
jge
xchg
call
jno
orl
and
push
mov
lahf
mov
add
int
mov
dec
imul
add
lahf
mov
mov
jno
pop
ret
and
aam
movsl
jecxz
dec
popf
sub
adc
pop
ret
jge
int
aaa
icebp
cmc
pushf
add
xchg
nop
sbb
pop
jne
adcb
shl
xchg
pop
outsb
push
push
pop
push
cmp
inc
clc
icebp
cli
pop
es
inc
push
shlb
dec
xchg
lahf
pop
int
sbb
or
cltd
mov
das
jbe
pop
mov
mov
mov
mov
sti
je
dec
loop
or
and
adc
stos
jl
inc
lods
pushf
les
std
iret
pop
pushf
stos
fisttpll
sbb
and
push
dec
rorb
sub
fnstsw
mov
and
outsb
mov
xlat
lock
lret
mov
negb
leave
add
or
test
mov
push
inc
cli
xorb
cmp
xchg
jo
pop
cmc
and
jo
and
shll
jl
xchg
xor
aas
cmp
jne
jae
inc
mov
aaa
xchg
push
xchg
inc
and
pushf
pop
insl
rorl
xchg
inc
and
subb
jns
pop
xchg
or
cmp
jecxz
out
sbbl
ret
bound
mov
and
stos
mov
loope
fcompl
add
cld
mov
xchg
sbb
inc
dec
fiaddl
lahf
repnz
negl
mov
push
mov
orb
and
mov
fistpll
push
jne
mov
push
adc
jle
std
sahf
cmpsb
mov
scas
jle
xchg
test
dec
pop
les
in
xor
sarl
arpl
cli
or
call
push
dec
push
lret
lock
ss
cmp
int
xchg
mov
lock
dec
sub
mov
inc
mov
adc
imul
bound
sbb
cmp
cmp
adc
popf
aam
scas
xchg
mov
sbb
sub
mov
xor
and
icebp
sub
sub
les
adc
pop
jl
xchg
outsb
lea
dec
jo
jbe
pop
fs
or
dec
imul
sub
test
push
pushf
outsb
mov
pop
and
and
test
mov
fwait
push
pusha
sarb
pop
sarl
mov
pop
xor
xor
test
xor
mov
cld
repnz
shll
mov
push
xor
cli
addr16
cmp
inc
jl
adc
ud1
stc
sahf
cmp
or
dec
mov
sub
lock
pop
add
stos
mov
sub
xchg
sahf
movsb
mov
jmp
mov
inc
sub
test
lea
imul
sahf
jne
lcall
add
dec
pop
rcr
das
mov
cmp
mov
jno
and
mull
mov
sbb
jl
cld
inc
ljmp
loop
pop
les
ret
sbb
xlat
jo
aas
in
data16
adc
adc
int
mov
cmp
scas
aad
push
aas
inc
inc
xchg
or
sbb
push
addb
stos
lcall
or
subb
dec
les
addb
or
sub
out
mov
or
push
call
stos
int
mov
sub
je
std
lret
mov
add
or
xor
cmp
push
xor
int
fiaddl
adc
pop
int
xchg
adc
and
aaa
lahf
jge
ret
ret
shl
xchg
xor
xchg
ret
jl
mov
inc
pop
adc
add
sub
lret
fsts
lcall
test
jge
jo
inc
dec
into
mov
pop
cmp
imul
stc
inc
pop
int
jns
mov
ror
add
inc
out
mov
cmp
pop
or
stc
xchg
add
pop
nop
sub
mov
mov
cmp
push
scas
add
pop
insb
prefetch
or
dec
adc
outsb
xchg
or
add
pop
lahf
sbb
out
push
add
xlat
add
jb
inc
or
jle
xor
sub
dec
insl
or
popa
or
lock
in
jno
dec
int
lahf
sahf
cmp
lahf
mov
adc
adc
jae
push
andl
movswl
adc
pop
mov
or
negl
and
inc
pop
fnstcw
jo
xchg
movsl
jl
fxch
add
fidivrs
sub
out
or
pop
dec
xlat
pop
aas
dec
jne
nop
test
mov
dec
cmp
and
add
push
das
inc
or
pop
pop
sub
cmp
jl
cltd
jg
pop
and
and
sub
push
or
pusha
mov
insl
fbstp
int3
mov
pop
sub
leave
insb
mov
mov
push
mov
pop
repnz
mov
outsb
mov
jmp
testb
fiaddl
cmc
bswap
scas
adc
xor
jle
and
pop
inc
add
jno
inc
fmuls
cmp
in
cmp
loopne
inc
pop
xor
scas
shll
fadds
sbb
out
jmp
popf
icebp
iret
sub
xchg
adc
sti
out
mov
inc
sbb
shlb
adc
mov
push
cmpsb
inc
xchg
xor
and
subl
out
add
sbb
and
jmp
xor
sub
test
cmp
add
cs
int
pop
enter
adc
sub
ret
sbb
or
pop
cs
fisubl
mov
lcall
in
cmc
outsl
cmp
adc
add
mov
add
jmp
jl
push
inc
xor
test
sub
mov
mov
jmp
stos
xchg
sbb
jl
es
adc
pop
mov
sbb
push
clc
xchg
cld
inc
sub
inc
adc
sbbb
or
dec
pushf
pusha
test
dec
sarb
pop
fs
push
inc
add
negb
xlat
mov
daa
shl
sbb
or
dec
out
in
ret
fldl
cmp
fistl
mov
sbb
sbb
xor
mov
jl
mov
inc
cmp
or
cmp
sub
sub
or
movsb
pop
sub
dec
aam
xor
sbb
sub
pop
add
add
jno
xor
push
in
sarl
mov
rol
and
push
and
es
mov
xor
mov
jg
add
popf
pop
and
lahf
sbb
sti
daa
in
stos
mov
pop
mov
in
push
cli
sbb
enter
xor
xor
jl
push
dec
inc
test
leave
mov
cmp
cmp
lahf
mov
insb
out
xor
ret
pop
and
jmp
cwtl
out
lock
mov
jnp
fmull
xor
sbb
fsubrl
cmpsl
out
ds
adc
movsl
das
cmp
xor
loopne
dec
and
mov
or
scas
sbb
inc
push
or
add
mov
push
jg
adc
add
in
dec
fidivs
lea
mov
mov
nop
adc
mov
bound
lret
lret
pushf
sub
add
outsl
push
ret
leave
inc
lods
mov
jbe
dec
lea
jecxz
push
inc
test
mov
pop
stos
mov
out
dec
xor
mov
ret
cmp
jne
mov
cli
jg
pop
dec
jne
mov
or
mov
lahf
lea
mov
icebp
inc
mov
test
negl
xchg
fmuls
mov
push
popa
adc
popf
xlat
adc
sbb
or
xor
xor
mov
lahf
pop
repnz
stc
ret
aad
mov
pop
pop
insb
subl
and
aad
mov
and
pop
std
scas
and
ljmp
cmp
int
mov
dec
arpl
shll
ljmp
push
out
int3
ret
mov
pop
add
jno
out
aad
adc
shrl
xchg
sbb
sub
pop
out
ret
xchg
out
mov
and
fiaddl
xor
push
movsl
daa
pop
sbb
adc
test
adc
jp
add
sarb
test
aaa
mov
mov
mov
dec
xchg
mov
pop
rclb
aas
jl
out
insb
in
sub
jno
pop
insb
nop
and
adc
and
cmp
jg
cs
outsb
loope
and
or
cmp
dec
push
insl
cmpsl
test
aaa
mov
and
push
ja
andl
pop
add
xchg
jbe
sbb
fstps
jb
cmp
push
test
and
ficomps
inc
aas
jo
sbb
sahf
imul
jg
test
dec
stos
mov
shll
and
lock
pop
insl
fs
pop
mov
sbb
pushf
loop
lahf
pop
pop
es
ds
cmp
jb
sahf
pop
cmp
lahf
lret
inc
fisttpll
mov
pop
das
ret
into
xchg
cmpsl
dec
and
jge
lret
xor
or
and
ds
cmp
pop
sahf
lahf
ss
push
lods
icebp
pop
sbb
hlt
sti
aad
xchg
inc
fildll
adcb
pop
mov
jo
adc
outsb
sbb
lret
test
add
call
loope
cmp
pop
push
xchg
js
dec
dec
push
mov
fsubp
adc
imul
cmp
mov
mov
and
jbe
fcmovnb
test
dec
jmp
lahf
jl
and
in
movsl
sbbl
and
dec
inc
and
lahf
fsubrl
jb
cmp
outsl
adc
test
push
cmp
pop
pop
ret
pusha
or
or
dec
sub
adc
cmp
call
shl
lods
fmull
add
inc
iret
jmp
inc
repnz
cmc
mov
inc
inc
sbb
imul
adc
mov
and
imul
xchg
or
jecxz
pop
xor
movsb
inc
fiadds
inc
call
int3
or
jne
push
push
xor
cmp
pop
fcmove
xorb
fs
std
jle
loop
and
push
inc
sbb
mov
sub
jne
movl
idivl
inc
enter
and
push
dec
rep
xorps
add
popf
and
loope
pop
xor
or
jp
es
or
lahf
xchg
sub
and
or
jmp
inc
and
inc
sarl
or
leave
jne
fisubrs
sbb
mov
loop
aad
or
test
or
fildl
jne
sbb
pop
mov
popf
mov
or
mov
pushf
out
sub
mov
std
mov
pushf
push
xchg
and
lods
sbb
lock
inc
fidivs
iret
aaa
pop
lahf
fstpt
mov
pop
mov
repnz
iret
mov
lods
cmp
lahf
cmc
scas
dec
mov
in
sbb
mov
iret
stc
and
sub
jbe
cli
pop
and
push
stc
xchg
sub
ss
dec
mov
pop
dec
mov
cmpsb
imul
loopne
sbb
xor
xchg
loopne
sbb
ss
xor
sbb
dec
mov
push
imul
inc
js
loop
jle
xchg
jmp
push
insb
stc
cmc
sbb
push
adc
outsb
and
std
call
lea
adc
jp
es
xor
sahf
mov
mov
dec
sbb
test
inc
cmp
cwtl
sub
mov
es
shll
sbb
xor
fstpt
ret
fstpl
sbb
push
xchg
lods
dec
jge
lods
scas
in
sbb
sbb
lahf
lea
adc
jne
xlat
push
fst
dec
xor
mov
xor
adc
ljmp
jecxz
call
xlat
add
insb
cli
or
xchg
out
pushf
clc
and
or
xor
sti
cmpl
ret
pop
mov
out
or
and
nop
rcrl
cld
imull
jecxz
cwtl
in
orb
lret
xchg
les
fisttpl
pop
rcrl
jo
add
xor
or
xor
and
imul
xor
pop
lds
and
arpl
xchg
push
inc
sbb
ds
and
jg,pt
push
jl
js
push
add
loopne
xchg
fadds
fistpl
or
nopl
or
das
leave
mov
fldenv
hlt
pop
cmp
adc
divb
jo
adcl
insb
ss
lds
sub
adcb
mov
adc
jmp
jecxz
repnz
mov
pop
push
and
out
int
push
ret
loope
pop
mov
in
rcll
sti
mov
inc
dec
and
lret
jns
sub
xchg
jmp
jp
fs
add
ds
cli
push
push
cmpsl
sub
inc
fisttpl
lret
fucomip
loop
test
call
inc
sub
dec
xchg
loop
fdivs
push
adc
or
and
or
xchg
xchg
scas
sbb
cmp
push
insb
nop
popa
sub
sahf
sub
shlb
adc
out
mov
adc
pop
adc
inc
jb
rorl
push
insb
shl
push
xchg
push
data16
gs
cmp
inc
fisubs
mov
and
out
mov
xchg
fwait
push
xchg
cmc
sbbb
mov
xor
cmp
push
stc
aaa
ret
rcrb
cmp
aas
xchg
sub
add
sti
push
inc
xor
and
mov
xchg
jp
ret
sbbl
stos
jbe
sahf
or
lahf
jmp
add
jge
inc
rcll
xchg
cld
fisttpl
push
pop
push
xchg
inc
inc
pop
shlb
addr16
jns
mov
jg
add
pop
movsl
or
or
add
call
pop
push
dec
and
push
or
cmp
mov
cld
add
jmp
add
push
aam
int
in
inc
adc
movsl
sti
or
sub
pop
icebp
test
sub
sub
arpl
mov
sub
repz
mov
pop
pop
adc
mov
add
out
aam
icebp
sbb
shrl
hlt
xlat
pushf
add
mull
outsl
cmpsl
shll
test
push
pop
sub
insl
adc
in
push
xor
inc
and
adc
movsl
pushf
aam
push
int3
out
dec
ficompl
ljmp
stos
push
add
pop
repnz
std
jmp
divb
jae
xchg
cmp
mov
inc
adc
and
cltd
cmp
mov
ficoml
adc
dec
cli
or
or
cli
movsb
push
out
mov
sbb
outsl
bnd
add
and
dec
popf
int3
dec
and
jmp
and
jbe
sub
inc
and
sub
xchg
cmp
mov
add
mov
sbb
cwtl
xor
aad
lret
lods
out
lahf
sub
jmp
cmp
hlt
test
jl
pushf
sub
jo
inc
insl
or
test
jmp
imul
enter
iret
jnp
test
pop
lea
mov
sbb
icebp
pop
and
ret
sub
pop
pushf
popa
cmp
lock
push
mov
scas
inc
lock
lahf
add
dec
lds
scas
add
push
dec
push
or
inc
mov
aaa
int3
mov
divb
cmp
and
popf
les
mov
cmpb
sbb
cmp
movl
iret
dec
adc
push
jbe
in
mov
std
leave
cld
inc
pop
push
add
or
adc
sbb
sbb
ds
ficompl
insb
push
xchg
shlb
jg
sbb
pop
scas
add
loop
cmp
fidivl
cmpsb
hlt
mov
ret
adc
je
mov
jge
xchg
in
cmpsb
and
pop
cltd
jecxz
sbb
add
pop
sbb
mov
bound
lods
push
and
mov
mov
roll
inc
rcrl
xchg
fisttpll
fmuls
mov
jmp
sub
pop
stos
daa
mov
xlat
mov
rolb
mov
mov
inc
adc
xchg
push
or
xorps
pop
shrl
icebp
pop
jp
div
sbbb
and
fs
and
push
in
test
pop
imul
mov
pushf
sub
xor
bound
daa
jp
or
cmp
xor
cmc
sahf
std
cmp
push
or
and
sarb
and
int3
idiv
ficoml
dec
aam
or
je
sub
push
push
pop
mov
push
mov
iret
dec
sub
roll
or
cmc
mov
cwtl
cmp
inc
xchg
ljmp
popa
adc
mov
cmp
inc
call
test
imull
into
xchg
stos
and
lahf
dec
inc
push
xor
sbb
xchg
outsb
mov
hlt
xor
popf
das
stos
push
sti
fimuls
dec
xor
pop
cs
lahf
sub
adc
int3
fmuls
mov
jb,pn
repnz
push
mov
js
rcrl
mov
xor
lods
in
mov
gs
xchg
dec
mov
jmp
xchg
adc
out
pop
xchg
jg
and
push
sbb
or
mov
push
cmp
sbb
loop
xchg
sub
adcb
adcl
insb
fcoms
sbbb
das
inc
mov
xchg
mov
lds
icebp
jne
xchg
inc
cs
cltd
push
mov
lahf
loop
cmp
inc
cltd
fcoml
xor
add
add
adc
mov
cmc
dec
lods
nop
and
orb
add
std
and
stos
xor
mov
jge
mov
idivb
int
xchg
mov
xor
fcomps
add
dec
add
rclb
scas
xor
outsb
cmp
push
inc
subl
or
and
sahf
decl
xor
ret
inc
xchg
in
xor
popf
lahf
imull
into
sub
mov
hlt
hlt
adc
loope
and
pop
mulb
cmp
iret
enterw
xor
push
dec
and
rcrb
mov
jecxz,pt
pop
sbb
enter
mov
jno
xor
xor
push
adc
adcb
or
mov
ficoml
call
aad
fsubrs
loope
pop
stos
sub
inc
dec
movb
jno
jge
stos
dec
adc
outsb
inc
add
scas
fimuls
dec
dec
testl
loopne
xchg
out
jne
pop
pusha
mov
dec
mov
jge
sahf
mov
jmp
and
in
dec
test
andb
add
inc
enter
repz
jge
mov
scas
xor
mov
mov
inc
cmp
push
shlb
xor
aam
add
sti
inc
repz
notl
lods
xor
adc
rorl
push
in
stos
les
jne
dec
int3
jns
cwtl
stos
xchg
call
mov
sub
jno
mov
notl
inc
dec
pusha
rorb
shrl
js
sub
push
sahf
jge
inc
mov
pop
clc
shrb
mov
js
jmp
nop
arpl
mov
sub
push
mov
das
shrb
jb
push
push
jae
jnp
mov
inc
or
shr
leave
rcrl
loop
cwtl
loope
mov
xchg
cld
inc
sbb
das
aas
int
sti
adc
sub
jb
xchg
nop
pop
and
push
xchg
dec
or
jecxz
jge
sbbb
movsl
insl
pop
fnstsw
push
push
inc
icebp
xchg
mov
rclb
fcompl
jecxz
ja
and
xchg
das
mov
push
dec
fs
pop
add
dec
xchg
sbb
jp
pusha
add
sub
cmp
mov
mov
dec
xchg
clc
js
xchg
push
sbb
es
shlb
adc
push
dec
or
mov
push
cmc
mov
xor
int
and
cmpsl
add
xchg
and
sahf
lea
mulb
jg
nop
testl
sub
push
pusha
cmp
int3
popf
pushf
movsb
shll
jl
push
inc
cltd
inc
cmpsl
insb
lods
iret
add
popf
sarl
add
push
lods
mov
in
add
ds
cld
iret
sahf
adc
gs
or
in
lea
sbb
mov
lods
imul
cltd
out
push
shll
and
sbb
ss
mov
or
pop
jecxz
add
xchg
daa
mov
mov
subb
lods
pushw
or
adc
cli
cmp
mov
adc
adc
jb
stos
xor
xchg
sub
insb
inc
mov
je
xor
int
sub
cld
fisttpll
mov
sub
xchg
sub
imul
dec
pop
test
xchg
pop
ret
and
mov
fisttps
in
hlt
push
lahf
int3
cld
inc
popf
mov
add
push
xlat
jmp
clc
jo
dec
divb
mov
adc
push
pop
pop
sbb
data16
mov
sahf
inc
sarl
xchg
popf
pop
push
add
xor
out
cs
jecxz
scas
pusha
nop
stc
cmp
icebp
dec
divb
jecxz
popa
push
loope
icebp
add
xorb
pop
nop
cmc
in
int
adc
aad
add
sbb
outsb
lahf
lea
pop
ds
jne
in
add
cmp
mov
sbb
add
andb
pop
mov
xchg
ljmp
and
loopne
mov
lea
mov
sub
push
jge
ret
push
xor
call
and
test
jmp
push
or
fcomps
push
loopne
out
iret
test
aas
cmp
lds
loopne
insl
test
ret
pop
pusha
sbb
dec
gs
insl
sbb
cmp
lahf
dec
sbb
sbb
pop
scas
adc
pop
cmp
jle
in
sub
es
sub
sbb
jl
test
xor
mov
lahf
xchg
adc
jecxz
inc
out
mov
movsl
inc
mov
sub
or
in
dec
mov
repz
dec
push
sub
push
fildll
insb
cmp
push
fs
jmp
push
mov
pop
in
insb
add
sub
jge
pop
cld
pop
or
insl
stos
pop
sbb
hlt
jmp
jle
stos
push
out
jns
pop
mov
cli
and
or
popf
int
mov
lods
mov
or
jo
mov
outsb
rcll
sub
add
jp
sub
shl
jb
jecxz
test
dec
mov
mov
jmp
shl
roll
xor
int3
clc
push
mov
dec
mov
and
arpl
fs
push
cmpsl
xlat
scas
mov
je
xchg
jno
dec
inc
cmp
push
jp
mov
mov
or
cwtl
popf
mov
in
sbb
iret
out
loope
inc
shl
pop
lods
cmpsb
sub
push
mov
sbb
xchg
xor
cmp
mov
in
in
cltd
dec
arpl
pushf
dec
push
or
adc
and
jle
popf
int
lock
mov
or
mov
and
cmp
aam
lods
mov
daa
inc
jb
rcl
xchg
pop
fidivs
sub
sub
xor
lea
xchg
cmp
rcrb
in
or
lahf
xchg
push
loop
inc
xchg
jb
inc
cmp
int
xor
and
jl
push
and
and
outsl
inc
xlat
mov
push
movsl
repz
or
sti
leave
lods
adc
sbb
fs
xlat
push
cli
es
jl
jmp
roll
inc
mov
iret
push
pusha
js
and
out
cmp
cmp
add
in
movsl
ljmp
xchg
aas
inc
mov
mov
and
jns
aas
push
xor
pop
ds
ljmp
pop
sahf
jb
movsl
push
test
nop
adc
or
daa
in
loop
push
jns
adc
es
cmp
cmc
daa
push
inc
add
dec
push
stos
stc
dec
or
iret
adc
adc
xchg
cs
pop
mov
inc
je
repz
and
call
xchg
push
leave
mov
loopne
lret
cld
sti
pop
popa
xlat
addr16
in
insl
push
lahf
je
out
lahf
cmp
rcll
int3
add
inc
enter
and
clc
add
lahf
cld
shl
icebp
xor
lea
and
ljmp
out
inc
jno
addr16
sub
dec
int3
mov
dec
in
or
lea
iret
add
test
mov
fstpl
sbb
push
ret
jns
jmp
pusha
cld
dec
mov
inc
test
inc
cmp
mov
mov
cmc
or
cmp
push
pop
test
adc
pop
and
xor
clc
xchg
inc
add
aaa
addb
lcall
xor
push
jp
xchg
lahf
dec
stc
ret
jp
sub
and
cmp
call
bswap
dec
daa
stos
pop
or
leave
into
mov
sbb
subb
sbbb
int3
cld
xchg
sub
fwait
push
cmp
jmp
cmpsb
das
popf
mov
adc
dec
lahf
mov
stos
xorl
outsl
sbb
add
std
sbb
int
jne
push
add
fucomip
nop
xchg
pop
std
mov
pop
imul
mov
cwtl
cld
add
call
lea
movsl
mov
mov
stos
cmpsb
xor
nopl
ficompl
pusha
xor
xor
cs
jle
sbb
subb
push
jne
jp
pop
sbb
dec
sub
or
pop
inc
dec
pop
pop
aas
aam
adc
lea
dec
mov
jb
add
repnz
imul
or
int
mov
pop
sbb
pop
xchg
mov
aas
pop
mov
aas
lea
jbe
repnz
int3
cmp
xchg
cmp
rorl
call
mov
sti
cmp
fimuls
je
jb
and
sbb
jmp
dec
jmp
out
xchg
pop
cwtl
pop
sbb
jp
fdivrl
sbb
lahf
test
jl
sbb
popf
fdivl
aaa
adc
mov
and
inc
push
sub
and
xor
lahf
jmp
fs
rolb
pop
push
sbb
jb
dec
sub
pushf
dec
dec
test
out
xchg
outsb
cmpsl
dec
aad
sub
lahf
loope
add
icebp
pop
pop
cmp
movsb
test
clc
xchg
inc
out
iret
jge
pop
add
sti
movsl
xchg
push
mov
in
stos
cmp
bnd
sbb
js
int
mov
test
out
mov
add
push
mov
add
shlb
push
fcmovne
test
and
icebp
cmp
mov
in
ds
mov
lods
xchg
and
adc
ja
mov
adc
int
ficoml
jl
cmp
mov
or
mov
dec
popa
fnsave
sbb
mov
dec
mov
repnz
dec
mov
sub
cmp
jmp
dec
dec
inc
sub
jne
push
dec
and
push
dec
jbe
push
mov
dec
mov
mov
test
jecxz
test
movsl
int3
pop
pop
sub
ss
loopne
pop
xor
cmp
and
jo
lods
mov
mov
pop
movsl
and
sbb
lret
push
stos
cmp
jle
pop
adc
adc
aam
into
into
lahf
pop
dec
int3
sub
ret
iret
adc
clc
aaa
push
or
imul
pop
call
idivl
movsl
mov
push
adc
pop
movsl
lods
repz
dec
dec
lahf
xchg
jge
inc
cmp
test
dec
fimuls
add
test
cli
aam
add
jge
popf
pop
cmp
or
adc
and
sub
sub
popf
imul
push
in
repnz
shrb
loope
cmp
or
adc
adc
clc
sub
fisttpll
testb
xor
lock
ja
addr16
dec
fisttps
cmpsl
mov
mov
je
xor
push
cmp
movsl
daa
cwtl
mov
push
adc
lods
fdivr
add
sub
stc
or
cs
xorl
push
std
mov
mov
imul
std
iret
out
pop
mov
arpl
cmp
mov
aaa
adc
fnstsw
ljmp
out
addb
lods
adc
adc
scas
or
fbld
mov
int
mov
or
mov
add
stos
xchg
fisttpl
lret
cmc
xor
decl
inc
xchg
dec
sbb
or
lahf
push
add
adc
int3
and
paddd
add
sub
adc
jne
aad
add
insl
and
adc
push
and
mov
in
mov
icebp
adc
cmp
mov
iret
mov
je
and
popa
fidivs
aaa
je
xchg
cmovb
mov
mov
fcompl
nop
mov
and
mov
mov
fcompl
fcmovb
and
jp
out
jnp
icebp
add
pop
adc
scas
in
pushf
cli
and
popa
sub
pop
push
pop
std
jg
and
lods
pushf
xor
xchg
xor
mov
dec
pop
lock
je
lret
inc
stos
inc
mov
pop
nopl
lea
xlat
out
adc
sbb
das
sbb
lock
cli
jne
mov
int
mov
push
dec
ret
icebp
out
cmc
mov
xchg
dec
or
popa
sub
mov
clc
mov
push
out
stos
mov
sub
inc
loopne
adc
sub
push
mov
popf
es
xchg
cltd
mov
popf
arpl
faddl
dec
aaa
and
xchg
cld
cmp
xchg
scas
pop
repnz
xchg
stos
xchg
sti
fwait
inc
popf
sub
shll
loope
cmp
pop
lahf
ds
scas
jmp
fisubl
je
cmpb
lsl
jge
jmp
push
test
add
test
int3
dec
jae
mov
xchg
je
call
or
sub
pop
lahf
adc
inc
or
call
ljmp
fnstsw
pop
jb
and
lret
pop
aad
mov
jmp
xchg
int3
shrl
shll
not
cmc
and
and
cmp
iret
adc
mull
movsl
pop
mov
mov
sbb
popa
xchg
xor
test
and
or
repz
into
mov
in
sub
mov
sahf
lcall
into
push
orl
lret
cmp
inc
repnz
sbb
es
push
int
xlat
adc
rcrl
push
shlb
or
loop
pop
mov
rorl
pop
lahf
das
aam
dec
inc
mov
mov
pop
jmp
in
dec
mov
cmp
iret
mov
add
cli
pushf
jb
clc
pushf
scas
arpl
cmp
ret
and
mov
push
cs
mov
icebp
xor
insl
scas
negl
pop
push
shl
imul
xor
movsl
add
jg
into
cli
xchg
pop
movsl
xchg
leave
mov
les
push
icebp
and
fisubl
or
add
je
xor
test
es
jmp
orb
orb
add
iret
mov
adc
inc
jl
jns
stos
push
es
js
in
xchg
adc
lahf
jmp
mov
and
jb
out
add
je
pop
xchg
shlb
out
push
or
pushf
test
and
mov
outsl
sbb
or
sbb
pop
pushf
lods
movsl
xor
sub
add
inc
and
xchg
pxor
cmp
xor
cmp
fimuls
push
push
test
sub
call
sub
jne
dec
inc
cmp
push
pop
stos
lds
icebp
in
sarl
and
daa
in
dec
sub
ret
cmovo
sbb
loop
pop
fistps
sbb
xchg
aam
in
mov
pop
xchg
inc
inc
mov
data16
cmpb
mov
jl
icebp
xor
and
fistl
cli
mov
xor
iret
cmp
pop
and
out
push
pop
pop
rcll
inc
xor
push
insl
stos
push
jae
adc
fcoml
lret
sub
je
ffreep
cmpsb
xchg
dec
jecxz
dec
dec
jge
jge
popa
and
rolb
mov
pop
mov
sbb
jns
mov
xor
cli
cmp
std
add
mov
mov
mov
push
ds
cmc
cmp
fistpl
xchg
inc
jl
arpl
movsl
inc
shr
sbb
mov
and
mov
and
into
lods
cltd
icebp
or
xchg
jb
sbb
mov
stos
mov
cld
push
fnstcw
sahf
iret
mov
lods
shlb
and
insl
mov
iret
out
inc
clc
xor
cwtl
fldenv
pop
das
pop
adcl
cwtl
movsl
sbb
push
xor
fists
testl
rclb
inc
jb
adc
lahf
adc
movsl
negl
aad
sub
clc
loopne
sbb
sbb
jg
ret
jle
xchg
adc
cmpsb
cmc
add
loopne
add
adc
adc
or
in
fwait
rcrl
icebp
sbb
es
xor
sbb
or
leave
and
xchg
das
xor
into
xor
xchg
jle
mov
les
pop
mov
scas
xchg
fisubrl
les
dec
add
inc
inc
cwtl
jl
cs
cwtl
pop
lods
fildll
lahf
iret
das
adc
icebp
jecxz
sub
push
dec
sti
jl
cmp
daa
and
or
popl
rorb
add
sbb
imul
lock
mov
adc
pop
sbb
mov
je
push
pop
adc
mov
inc
xchg
out
push
mov
bound
mov
add
mov
insb
and
mov
jnp
adc
int
push
jb
mov
mov
and
movsl
sub
mov
iret
out
cmp
imul
inc
inc
fisubrl
test
and
cmp
mov
movsb
fs
ficompl
push
sbbl
daa
aad
mov
popa
aam
test
sub
or
mov
inc
push
mov
sbb
and
daa
jno
dec
adc
rcrb
insl
sub
dec
mov
nop
ret
fs
insb
rorl
mov
imul
pop
cmp
add
sub
pop
push
mov
jp
call
dec
repz
sbb
stc
aaa
dec
cmp
or
or
or
xchg
in
dec
imul
and
inc
and
fmull
inc
inc
cmp
sbb
mov
mov
sub
lock
push
jo
and
pop
fsubs
cmp
add
inc
sub
iret
xor
lahf
ds
push
repz
scas
popf
add
add
into
xchg
mov
pop
add
push
out
xor
mov
sbb
and
xlat
jns
imul
push
adc
in
shll
mov
or
xor
cli
les
mov
and
sub
subb
pop
cmc
pop
or
jl
pop
in
jns
or
popa
pushf
mov
mov
hlt
pop
adc
dec
push
testl
mov
mov
pop
sbb
call
popf
scas
in
mov
and
push
push
aas
sub
jmp
jb
mov
aad
cmc
pushf
and
cs
xchg
mov
lahf
lahf
int3
popa
psubd
cmc
je
subl
popa
xor
xchg
lods
inc
gs
fistpll
mov
pop
fwait
je
xorb
cmp
and
loopne
mov
lea
int
popa
cmovae
in
mov
out
push
add
adc
fisubs
hlt
adc
inc
sub
xchg
dec
mov
mov
pop
ficomps
mov
int
xor
and
jne
adc
jmp
fidivrl
xor
inc
lods
sub
xchg
push
push
pop
shlb
fldlg2
cli
stc
inc
and
lods
pop
add
arpl
dec
out
adc
push
adc
cmc
in
jmp
dec
dec
lahf
adc
loopne
mov
mov
repz
jnp
inc
lods
dec
cmpsl
test
push
cld
int3
mov
pushf
add
fldcw
xchg
mov
push
lahf
lods
pushf
loope
cli
mov
out
add
xor
or
pop
and
jb
adc
mov
lock
dec
sti
test
jmp
decb
push
dec
repnz
enter
adc
dec
nop
lds
loope
fs
int3
cmp
xlat
int
dec
or
xchg
jno
push
subl
imul
pop
in
adc
adc
enter
loopne
push
and
cs
outsb
pop
xchg
push
and
xchg
jbe
ds
mov
mov
mov
insl
and
adc
dec
cmp
mov
pop
bound
mov
xor
cwtl
inc
in
insb
sahf
push
adc
push
lds
arpl
mov
mov
mov
inc
xchg
cmp
dec
jmp
sbb
in
std
xor
into
dec
mov
lods
sub
adc
mov
push
adc
push
imulb
out
lret
jmp
imul
xor
jns
xchg
mov
push
dec
xchg
ljmp
rorb
sub
test
lods
rcrl
addps
mov
movsl
pop
rcll
and
test
outsl
enter
sbb
xchg
divl
xchg
inc
addr16
sub
inc
or
cld
pop
inc
inc
and
movsl
mov
and
cmp
mov
inc
mov
loope
aad
scas
cmp
sub
xor
mov
into
mov
xchg
loop
add
mov
pop
je
sbbb
sahf
inc
jno
dec
pop
dec
and
adc
rcr
and
fcoms
call
pop
fsubl
and
stos
dec
into
ret
insl
and
adc
dec
cmp
imul
lods
push
xchg
mov
mov
sbb
sbbb
sbb
subb
sbb
lods
pop
jbe
sub
jnp
mov
loope
xlat
pop
push
dec
jbe
inc
dec
mov
add
sbb
sub
cs
icebp
fbstp
cltd
test
mov
adc
sbb
dec
mov
in
dec
xor
cmc
or
movsl
gs
mov
je
mov
out
lret
iret
cwtl
pop
inc
push
cld
jg
or
sub
cwtl
inc
das
popf
sbb
aam
inc
sbb
push
rclb
jb
stos
jnp
scas
out
push
push
test
push
and
sub
fcoms
cs
out
int3
popa
in
out
add
pop
sbb
cmp
jne
mov
pop
sbb
push
fxch
inc
lods
xlat
fbstp
pop
lods
inc
or
lret
and
repnz
mov
mov
out
rorl
movsl
mov
inc
cmp
cs
je
xor
repnz
inc
iret
rclb
dec
mov
int3
cmp
fadds
cmpsb
xchg
sub
push
imul
fdiv
int
sbb
mov
enter
test
mov
sub
mov
testl
xor
fstpl
in
repz
insb
dec
sbb
jmp
orb
adc
sub
add
mov
and
jmp
pop
inc
inc
add
mov
dec
fistl
lock
add
jle
pushf
push
mov
add
in
or
movb
sub
out
jnp
or
dec
mov
enter
cmpsl
dec
pop
dec
and
pop
les
dec
lret
xor
xchg
insb
sahf
push
sbb
subb
sbb
cmpb
sbb
mov
mov
ficomps
sbbb
push
mov
cli
lods
mov
xorb
dec
das
sub
jecxz
into
push
jg
repnz
scas
pop
mov
psubsw
dec
fcoml
mov
in
and
faddl
and
loope
cmc
rcrb
pop
imul
enter
sub
or
push
jo
sbb
push
mov
outsl
mov
insl
push
jmp
sti
cmp
xor
dec
jae
mov
fdivrl
movsl
dec
and
cmp
lea
sarl
sarl
sub
cmp
and
sbb
cmpsb
ds
sub
outsl
lcall
gs
testb
les
repz
mov
rcrl
pop
cmp
scas
mov
jns
shll
add
in
fcmovne
out
pop
loope
mov
lret
cmp
fildll
dec
push
outsb
out
xchg
adc
sbbb
mov
inc
fwait
sbb
or
sub
and
in
cs
mov
add
lahf
add
fs
rcr
or
or
in
or
push
cmpsb
outsb
and
lret
pop
jmp
cld
xor
lcall
fistps
popf
mov
and
and
sahf
in
jge
out
jl
cmpsb
cmp
push
das
loop
push
push
in
loope
cs
in
test
lahf
or
and
mov
stc
pop
shl
adcb
inc
mov
nop
out
dec
xchg
movsb
jns
and
es
jno
jl
cmp
add
pop
roll
inc
xchg
lahf
sub
fucomip
sbb
stc
or
dec
inc
push
mov
imul
aaa
ret
lret
push
sbb
lahf
mov
sbb
out
fbld
pop
pop
insl
int
scas
mov
cwtl
movsl
xor
cmp
lret
xchg
nop
pop
je
mov
outsl
inc
inc
cli
mov
ret
mov
nop
mov
fisttps
sbb
push
insb
cmp
insb
popa
xchg
cmp
pop
dec
and
arpl
mov
sub
icebp
inc
and
daa
push
or
cmp
jecxz
inc
js
mov
pop
push
dec
insb
push
lahf
mov
pop
call
loopne
dec
flds
push
cltd
pushw
std
pop
lahf
add
sar
dec
mov
std
aaa
popf
pop
inc
divb
push
in
std
int
xlat
sbb
add
mulb
imul
in
in
adc
sarb
ja
test
sbbb
pop
inc
cmpsb
pop
sub
mov
push
popf
mov
pop
fwait
icebp
lea
xchg
aam
ret
jne
mov
into
sbb
add
sbb
cmpsb
xor
les
cmp
inc
repnz
test
push
add
dec
incb
lea
shlb
push
jg
loope,pn
arpl
xchg
in
and
add
aam
dec
adc
hlt
and
mov
adc
sbb
outsb
add
in
rcll
lret
std
cs
js
out
pop
adc
inc
cmpsb
aaa
dec
int
add
popf
and
mov
ja
and
pushf
and
dec
movsb
addr16
push
les
jno
add
cmp
out
int3
add
push
sub
je
ret
dec
and
or
stos
outsb
dec
add
iret
cli
and
mov
loopne
add
test
xor
and
adc
cltd
mov
cmp
jmp
rep
int
pop
push
outsb
xchg
add
loopne
inc
test
and
and
inc
and
push
test
int3
dec
jecxz
inc
cwtl
gs
outsb
les
lea
push
sub
pop
stc
add
xchg
xor
sub
dec
push
jbe
popa
les
push
enter
int
and
sub
mov
lret
loopne
adc
push
loop
pop
sub
sahf
and
xor
mov
or
mov
inc
push
leave
add
std
repz
cmp
jp
or
out
mov
and
pop
mov
sahf
mov
shll
icebp
cmp
mov
cmp
imul
adc
and
jo
adc
cld
jns
popa
cmp
gs
jbe
inc
fistl
sub
push
dec
dec
mov
mov
mov
idiv
call
fbstp
sub
sub
xor
inc
jge
or
or
rcrl
rcl
adc
push
cmp
adc
es
mov
pop
cmp
jmp
dec
mov
inc
pavgb
stos
scas
movsb
or
xchg
mov
sbb
mov
push
test
out
pop
insb
roll
and
loopne
mov
pop
xor
mov
hlt
xor
cmp
jmp
inc
xor
jmp
sub
sbb
add
and
nop
and
sub
iret
pop
rcl
push
cmp
push
sbb
mov
push
fcmovbe
push
and
test
ret
js
test
orl
and
enter
jg
pop
enter
cmp
dec
pop
loopne
sbb
adc
stos
iret
push
icebp
orl
pop
pushf
push
push
sbb
pop
adcl
dec
hlt
pop
or
cmp
adc
call
stos
lcall
adc
xor
adc
mov
leave
or
adc
sbb
dec
or
inc
enter
popf
sub
sub
xor
mov
lcall
jl
fists
adc
cmp
push
jg
cmp
call
movsl
or
repnz
je
lds
out
movb
loopne
sbb
imul
jge
or
and
pop
adc
sahf
add
test
sub
test
mov
sub
unpckhps
xchg
iret
push
jle
xchg
or
mov
sub
sbb
movsb
pop
dec
pop
mov
imulb
iret
and
xor
lret
add
cli
jbe
pusha
mov
xorl
out
out
jl
add
pop
pop
jg
imul
xor
inc
add
inc
out
xor
sbb
cmpsb
loop
les
xor
jne
jge
cmp
inc
pop
ja
movsl
aaa
pop
and
lock
push
pop
inc
jecxz
sbb
orl
or
cwtl
push
mov
cli
lret
xchg
inc
or
dec
pop
subb
inc
push
push
mov
jge
call
aas
or
sti
xor
and
sbb
aaa
inc
fdivr
lock
inc
pop
fistl
pop
cmp
decb
ret
and
iret
cmp
repnz
and
popf
paddusw
xchg
or
mov
fs
pop
mov
cmc
adc
dec
or
mov
sub
adc
xchg
loope
and
dec
fsubrl
addr16
cmp
mov
fisttpll
cmpsb
les
stc
xchg
mov
icebp
push
hlt
xchg
sub
xorb
add
sbb
xchg
loopne
mov
insb
lahf
and
xor
out
inc
mov
push
lea
adc
add
mov
sti
repz
test
stos
push
sbb
shrl
add
push
sti
push
sbb
fs
stc
xor
push
cmp
sarl
lea
jmp
ret
call
sbb
inc
movsl
sub
jno
cmp
call
push
adc
cmp
imul
fsubrl
dec
mov
pop
scas
mov
inc
dec
daa
sbb
and
lea
and
push
sub
inc
lods
testb
out
cld
push
lahf
mov
and
or
lods
das
out
pop
sbb
mov
pop
add
lea
cmp
xor
xchg
mov
jg
lahf
inc
and
sahf
imul
and
imul
in
call
mov
mov
dec
cld
into
mov
in
sbb
imul
push
add
add
mov
and
fdivrl
ja
icebp
loope
addr16
xchg
int3
mov
add
ja
sub
jmp
sub
dec
mov
lcall
das
mov
fdiv
xchg
pop
punpckldq
test
inc
lret
xchg
andl
fists
lahf
push
sub
inc
cmc
dec
push
test
popf
dec
cli
or
jo
ret
out
test
cmp
movsb
sub
mov
int3
dec
int
xchg
or
outsl
push
adc
mov
pop
test
pop
inc
fs
and
test
push
sub
or
xlat
sarl
cmc
subl
test
or
add
mov
xchg
test
inc
rolb
push
sbb
jno
scas
mov
mov
push
cmp
add
pop
inc
scas
mov
cmpsl
fwait
mov
adc
xor
repz
int
enter
ja
push
push
cmpsb
jecxz
lods
lahf
bound
ljmp
mov
pop
pop
cmp
cltd
or
cmp
push
mov
push
jg
scas
ljmp
arpl
cmp
inc
ss
cld
and
dec
sbb
sbb
test
cld
jo
sub
sti
push
pop
cmp
mov
adc
dec
loopne
outsb
jl
out
inc
push
pop
jnp
sub
and
add
lahf
rorb
ficompl
cmp
rcl
mov
xor
insb
mov
inc
dec
in
pop
aam
pop
into
adc
repnz
mov
and
lods
jl
jp
ret
cmc
inc
cli
pop
adc
es
mov
fisubl
popf
imul
hlt
pushf
add
clc
dec
rcll
cmp
adc
out
movsb
inc
xor
adc
jle
mov
in
scas
cmp
dec
clc
imul
ss
fistps
push
mov
and
jae
test
cmp
mov
test
jmp
jecxz
sbb
dec
pushf
jle
sbb
call
xchg
js
fsubs
sahf
cmpsb
mov
sbb
cwtl
or
adcb
inc
fistpl
call
xchg
imulb
inc
popa
cmc
sbb
mov
sbb
push
out
movsl
ficoml
sbb
out
mov
mov
cmc
pop
cmp
fcmovb
add
nop
in
into
and
or
mov
pop
xchg
sbb
fdivp
push
mov
gs
out
ja
mov
pop
addr16
xor
push
or
iret
ror
add
mov
test
fcoml
inc
stos
jg
dec
outsb
movsb
enter
dec
xchg
imul
jecxz
mulb
adc
lahf
sbb
mov
pop
xchg
movsl
lods
ret
cli
dec
ret
pop
das
mov
adc
jl
jno
jbe
sub
mov
sbb
mov
push
jnp
popa
xor
popf
insb
jg
int3
pop
pusha
outsb
xchg
fisubs
dec
int
ss
cmp
mov
xchg
je
xchg
mov
ret
push
xor
rorb
test
xor
xlat
jae
sub
lahf
mov
sub
daa
loop
lds
or
add
loope
std
pop
xor
roll
xchg
sub
pop
jo
mov
sub
jb
push
jbe
xchg
mov
inc
out
push
das
in
les
inc
sub
enter
push
and
cmp
and
dec
adc
pop
mov
mov
lods
push
insb
push
mov
cmpsb
dec
or
popf
sub
pop
push
enter
movsl
test
lods
cmp
sub
or
push
mov
push
mov
fsubrl
sub
int
cld
push
add
sbb
fst
mov
in
pop
inc
pop
mov
subb
adc
add
das
pushf
mov
add
lea
in
dec
cwtl
pusha
ftst
aaa
xor
nop
mov
pop
fstpt
fwait
lods
push
sub
in
rcr
cs
push
adc
test
fsubs
lahf
orb
and
xor
test
fnstsw
movsl
adc
dec
in
ljmp
mov
roll
lds
fmull
into
ja
xor
je
cmp
dec
sti
cwtl
inc
fimuls
mov
fists
adc
mov
ror
insl
insb
add
cmp
push
add
fistps
cld
scas
aas
xor
sbb
lahf
mov
lea
movsb
push
jge
sbb
pop
push
movsb
cmp
fdivl
jle
ret
xchg
pop
outsl
add
xor
movsl
dec
adc
adc
inc
movsl
push
pop
cmp
sub
js
lods
pop
aas
ja
lahf
daa
pop
loopne
adc
mov
cmp
mov
mov
cmpsb
mov
cmp
mov
lea
push
int
sbb
pop
ja
cmp
or
fstpl
sub
adc
push
pause
add
insb
dec
push
lahf
int3
mov
mov
sub
and
mov
popf
mov
pop
jne
dec
dec
push
mov
fbstp
or
adc
scas
cltd
or
lds
popl
add
jg
cmp
sub
popf
add
adc
xor
int3
dec
sbb
add
cmp
xchg
or
jbe
sbb
pushf
pop
insb
push
test
bswap
mov
push
out
rcl
sbb
pop
pushf
cmp
inc
jl
mov
popa
bnd
add
add
cmp
mov
and
test
and
addl
mov
push
mov
jns
push
sbb
call
int3
movsl
adc
gs
dec
cli
pop
jecxz
adc
pushl
pop
stc
or
andb
lahf
lea
fstpt
push
out
add
xor
push
lock
pushf
sub
les
cs
xchg
and
fld
or
ljmpw
mov
inc
pop
and
sbb
push
lret
add
and
mov
aas
clc
int
mov
sbb
mov
pop
dec
mov
mov
out
inc
fs
sbb
mov
les
loopne
mov
insl
mov
sti
add
loop
pushf
test
clc
dec
pusha
inc
push
mov
or
sub
and
sbb
mov
repz
pop
aad
into
inc
int3
sub
lds
pop
mov
cmc
inc
mov
pop
int
mov
sub
mov
lds
in
rolb
call
sbb
fwait
mov
push
rorb
and
xlat
cmp
fwait
jl
mov
mov
cwtl
out
repz
notl
bound
jae
mov
dec
stc
jmp
fbld
jno
mov
lods
enter
das
sbb
push
inc
adc
mov
and
mov
adc
pop
idivb
sub
mov
inc
mov
jge
imul
inc
mov
shll
inc
dec
movq
or
sbb
insb
mov
cmp
xor
ret
cmp
adc
jg
je
add
aad
and
lret
les
inc
cmp
jle
sbb
cltd
das
adc
mov
pop
les
fldl
xchg
xor
dec
stc
jmp
push
dec
divl
xor
sarb
mov
test
test
daa
mov
mov
or
leave
pushf
movsl
cs
or
adc
movsl
add
xorb
cld
enter
push
add
faddl
jecxz
fcomip
or
add
mov
les
inc
daa
movsb
lds
pop
cmp
arpl
bound
xchg
ds
pop
loopne
shlb
adc
dec
push
sbb
jl
fstpl
lods
cltd
cmp
push
and
adc
xchg
inc
insb
and
int
in
sub
add
pop
lds
int3
lods
jae
out
pop
int3
cmp
sub
inc
dec
adc
push
add
mov
push
lock
cmp
adc
and
jmp
mov
mull
mov
lret
mov
jge
jp
mov
jle
jge
cld
add
ss
jns
jns
dec
jcxz
mov
or
jb
xchg
xchg
mov
cs
push
testb
imul
ja
adc
sbbb
add
cmp
and
dec
notb
jmp
push
mov
sbb
pusha
out
mov
mov
in
lret
jmp
sub
push
sbbb
cmp
pop
dec
aas
sub
call
or
int
xchg
add
mov
and
and
cmp
sahf
aam
mov
int
sub
mov
test
xchg
lea
adc
stos
mov
pop
jmp
fdivl
aas
shll
or
insb
ficoms
push
fld
lahf
mov
mov
or
les
imul
pop
inc
in
add
mov
xlat
lret
dec
pop
jbe
jne
arpl
pop
iret
cmp
out
rorl
add
lahf
mov
xchg
insl
rcrl
fists
sub
xor
inc
push
shrl
xchg
iret
sbb
sbb
xchg
repnz
or
or
mov
inc
or
add
cmp
or
and
sub
mov
xor
inc
loopne
adc
stc
push
xchg
test
cli
sbb
xchg
sub
mov
xor
add
cmp
fmull
lret
add
pushf
lcall
test
test
mov
pop
push
xorl
jne
lret
adc
cmp
sbb
jbe
cmp
stos
pop
pop
jns
mov
adc
rcrl
or
outsl
add
xor
cmc
sub
test
pop
ret
jg
jb
loopne
mov
scas
clc
adc
mov
pusha
sbb
cmp
inc
pop
sbb
ds
ret
lods
inc
scas
test
clc
je
mov
mov
mov
imul
mov
pop
mov
jg
pop
mov
divb
sti
sub
xor
sub
ficoms
dec
lahf
jecxz
out
shll
stos
and
add
mov
mov
add
test
mov
push
aaa
or
sub
cli
fscale
loop
jbe
das
cmp
popf
lret
sub
sub
or
inc
mov
cmp
aas
mov
or
or
cmp
cmc
or
into
fcoms
mov
iret
mov
xchg
inc
push
add
hlt
push
and
and
shl
int
push
mov
sub
mov
jb
lahf
sub
ret
pop
sarb
xchg
push
mov
out
lods
and
lahf
in
mov
inc
sub
jae
pop
sbb
ret
movsb
xchg
jp
movsl
add
sbb
addr16
addr16
fsubrl
in
xor
and
popf
mov
push
pusha
cli
dec
pop
cli
mov
xor
mov
inc
inc
xchg
push
mov
pop
adc
add
cwtl
inc
pop
push
and
add
mov
cmpsb
arpl
pop
test
xor
mov
cwtl
mov
popa
enter
dec
pushf
andl
mov
ret
mov
sbb
dec
xchg
cmp
push
lods
mov
lea
push
les
mov
les
pop
dec
mov
out
sub
or
rcl
orl
fxch
test
lcall
adc
pop
jo
or
mov
add
push
movsb
and
jns
arpl
fnsave
xor
jp
jl
rorl
scas
fs
xor
lea
stos
jae
sub
lods
aaa
cltd
aas
adc
sti
pop
mov
push
or
loope
add
in
jge
test
xlat
sbb
mov
mov
mov
mov
into
pop
xchg
mov
jb
shrl
jl
insl
cld
jge
fcompl
mov
adc
aas
mov
pop
mov
dec
inc
xor
imul
lret
add
fs
cmp
sbbb
lea
pop
pop
mov
sahf
mov
cmp
sbb
inc
faddl
andl
pop
in
push
call
mov
into
mov
jae
paddsw
or
leave
imul
imul
fwait
stc
push
mov
mov
mov
adc
mov
pop
insl
loopne
xchg
sar
mov
vmptrst
xchg
movsl
rcll
pop
push
in
and
and
rcrl
in
popf
les
or
cwtl
fsts
xor
gs
stos
mov
out
push
or
mov
inc
ficomps
lea
mov
push
jbe
sub
dec
push
cld
leave
jg
dec
pusha
stos
adc
cld
pusha
pop
and
call
das
cmp
lods
dec
dec
cmpsb
inc
mov
dec
aad
mov
xchg
or
jae
pop
inc
pop
mov
push
xchg
mov
in
jmp
cltd
or
xor
jae
mov
xor
or
call
sbb
shll
fcoms
or
push
nop
cmp
sbb
stos
mov
rcrl
test
xchg
xchg
mov
mov
mov
insl
mov
es
hlt
sbb
pop
and
dec
pop
clc
ds
lock
inc
dec
dec
push
gs
pop
loopne
add
ds
nop
sbb
inc
mov
jge
xchg
xor
outsb
and
push
int
push
cltd
pop
lods
push
jge
sahf
lods
xchg
sarl
and
insl
arpl
jo
popf
mov
dec
lahf
pushf
scas
inc
test
pop
jns
xor
fadds
rcrl
sub
xor
dec
arpl
jae
lahf
mov
xchg
xor
addr16
mov
mov
mov
stos
fstl
and
cmovo
ret
into
lock
inc
test
mov
loop
sub
dec
add
int3
sbb
imul
cmpsl
and
lock
sti
dec
ljmp
sar
cmpsb
test
ljmp
je
andb
xor
mov
cmp
and
popf
jae
sub
cmp
outsb
lret
xchg
mov
jmp
rorl
aad
das
adc
loopne
sub
push
add
mov
psubusb
faddl
lods
inc
ds
out
bound
inc
lods
sub
pushf
dec
int3
pop
mov
movsl
subl
stc
dec
leave
sub
cwtl
or
loopne
adc
pop
lahf
push
popf
inc
dec
pop
pop
jg
sahf
out
sbb
dec
inc
dec
sub
or
push
andl
fadds
int3
fwait
pop
insb
jb
dec
fisubl
test
fidivl
add
pop
mov
enter
mov
in
movsb
dec
lods
or
push
xor
inc
enter
jp
push
in
inc
dec
sub
ljmp
jle
mov
inc
push
mov
jg
inc
aas
insb
ja
and
sub
cmc
xor
mov
add
xor
icebp
sbb
pop
lcall
pushf
cmp
sbb
jecxz
xor
push
jb
sbb
mov
pop
outsl
test
test
out
inc
push
ficomps
inc
lods
imul
scas
mov
push
pop
sub
inc
je
push
xchg
inc
mov
pop
or
jl
push
sbb
fnstsw
push
mov
xor
inc
and
das
xchg
sti
or
push
lret
cwtl
sbb
inc
jge
movsb
and
fdivrl
and
xlat
add
lods
add
outsb
fadds
pop
push
pop
shll
stos
movsb
pushf
aas
or
jle
xor
and
rorb
sub
stos
mov
aas
jecxz
push
movsl
pushf
jo
das
xor
pop
mov
je
jmp
xchg
insl
pop
and
xchg
test
mov
int
dec
and
and
pop
push
pop
sahf
stos
mov
mov
lock
movsb
insb
insb
dec
xchg
jo
cmp
je
scas
add
cmp
iret
fwait
push
aad
adc
adc
mov
cmc
icebp
stos
outsl
jns
rcl
int
or
and
js
in
shl
mov
pop
daa
mov
je
mov
xor
loop
mov
out
js
mov
pop
or
sbb
mov
div
xchg
in
push
cmp
or
jb
stos
inc
jae
sub
cld
cmp
pop
pop
mov
xor
repnz
das
inc
mov
push
test
inc
sbb
xchg
cli
hlt
push
arpl
and
sub
mov
es
lea
inc
lahf
cltd
xlat
stos
test
jbe
pop
mov
ret
inc
xor
cld
pop
loopne
mov
or
cli
shrb
or
loop
cmp
jecxz
scas
loopne
jns
loope
js
lahf
lea
dec
mov
adc
pop
test
pop
add
mov
lods
or
xor
nop
in
mov
or
lods
xor
faddl
sbb
insb
or
rorl
xor
xor
out
xor
adc
xor
aad
pusha
inc
out
mov
cmpsb
adc
add
movsb
icebp
addr16
mov
push
gs
loop
inc
jle
call
movsb
ret
mov
jmp
jl
or
ds
adc
add
cmc
nop
cwtl
add
sbb
inc
std
out
xchg
dec
pop
push
test
push
rcll
adc
dec
xchg
ret
ja
lahf
dec
sbb
loopne
inc
dec
movsl
inc
test
push
stc
push
inc
std
mov
loopne
mov
add
test
out
mov
das
mov
repz
jb
cli
and
mov
adc
push
jnp
in
inc
xor
sbb
mov
or
cmp
pop
and
mov
add
and
mov
and
jl
dec
test
pop
rcrl
jg
add
sbb
cmpsb
xor
aad
mov
negl
mov
sbb
ds
mov
sti
and
cmp
mov
mov
jl
int3
jb
and
cmp
xor
cmp
xor
push
adc
cmpsl
rcr
imul
push
push
mov
dec
and
and
xchg
fsts
adc
or
mov
lock
xchg
adc
or
push
inc
sbb
outsb
or
not
data16
inc
movsb
mov
mov
pop
jns
dec
in
jp
mov
rcrl
daa
pop
push
xchg
pop
jns
cli
xor
cmp
mov
iret
jl
aam
inc
add
add
mov
adc
fsts
cmp
out
mov
push
pusha
movsb
push
aas
jae
aas
lret
imul
inc
xchg
lret
inc
aaa
stos
int
out
xchg
jns
lret
sbbl
fistpll
cmp
sub
dec
cmp
inc
cmp
and
mov
pop
jns
das
push
dec
into
mov
push
aaa
aas
cmp
ficoms
add
cmp
movb
dec
sub
fs
mov
push
cmp
inc
minps
pop
adc
cmp
cli
shlb
and
cmp
mov
cmp
inc
sbb
mov
jl
cwtl
mov
push
and
mov
int3
mov
test
pop
sub
sub
pop
push
xor
cwtl
insl
shll
nop
ret
mov
adc
divl
cmp
push
stos
sub
push
sarb
xor
xchg
in
sub
adc
rorl
pop
cmp
xlat
pop
cmp
pop
adc
adc
das
pushf
jg
fwait
pop
adc
pop
sbb
pop
dec
fldenv
pusha
sbb
mov
filds
int
pop
and
scas
jne
lods
addb
add
aaa
add
pusha
add
out
lods
fildl
add
cmp
xchg
scas
insl
les
adc
daa
iret
pusha
scas
pushf
movhps
sub
pop
fsubr
cmc
mov
adc
sub
and
xchg
sub
mov
mov
rorl
sarl
inc
andl
or
insb
imul
jl
repnz
int
call
mov
dec
sbb
xor
ficoms
and
sub
and
xchg
push
and
jge
inc
mov
pop
mov
sbb
adc
mov
out
bound
push
pop
mov
aas
xor
scas
setl
ficomps
int
cmp
pop
into
adc
scas
andb
mov
outsb
xchg
cmp
outsl
leave
sbb
mov
lahf
mov
push
mov
out
and
pop
jo
push
mov
and
sbbb
add
push
pop
lahf
xor
add
repnz
pop
xlat
and
add
loopne
xor
cmp
rorb
das
inc
mov
inc
adc
jecxz
jg
jb
fisubrl
repnz
add
mov
adc
inc
js
into
sbb
mov
and
jg
push
stos
mov
cmp
ds
idivl
and
movsl
push
dec
cmp
aas
negl
out
sti
sbbb
insl
ret
sub
push
fbld
out
cltd
fbld
dec
popf
xchg
ljmp
ret
subl
popa
pop
mov
dec
mov
adc
lahf
sbb
sbb
sbb
or
push
outsl
or
or
femms
push
mov
pop
mov
pop
dec
scas
add
mov
adc
jns
jb
scas
orb
mov
inc
inc
adc
fisttpl
sub
cwtl
jns
mov
pop
lock
stc
aam
test
js
mov
iret
push
jle
cmc
jge
cmp
inc
movsb
dec
sbb
test
outsl
loop
add
insl
pop
or
stos
mov
xorb
ja
push
clc
icebp
rcrb
sbb
sti
js
daa
outsb
add
int
mov
nop
lahf
lods
jg
stos
mov
sub
out
add
jbe
sub
xchg
or
popf
pop
mov
mov
lds
push
shlb
push
mov
inc
jecxz
pop
enter
push
and
iret
mov
movl
push
aad
add
jmp
test
int
rorb
dec
ficomps
mov
into
xchg
lds
mov
popf
and
cmp
add
movsl
int
mov
std
scas
fcoml
mov
mov
lods
rorb
mov
cmp
or
xchg
or
repz
inc
and
popf
into
sti
mov
adc
jns
popf
or
sbb
or
inc
ficoml
xchg
int
mov
mov
and
int
inc
adc
sbb
cmp
data16
or
cwtl
hlt
pop
mov
in
add
adc
idivl
push
int
pop
fldcw
sub
fistl
subb
test
push
ja
loope
sub
pop
jmp
fcoml
sti
mov
int
or
ja
sarb
lahf
push
stc
xlat
popa
mov
cmc
jbe
das
pop
push
jns
mov
and
scas
xchg
insb
jp
into
adc
lea
mov
and
in
cmp
lahf
pop
push
sbb
aas
add
das
imull
pop
addb
adc
pop
lahf
test
sbb
xor
mov
sub
add
dec
iret
jb
sbb
cli
adc
orl
aam
add
lahf
add
sbb
fildl
sub
mov
iret
test
scas
in
inc
test
pushf
mov
and
sbb
mov
dec
xor
adc
add
ss
cmp
cmp
mov
or
add
push
xchg
outsb
pushf
loopne
mov
out
sbb
add
test
or
mov
or
into
sub
mov
clc
bound
int
inc
adc
cmp
xlat
sbb
adc
clc
sbb
fnstcw
cmc
sbb
add
fisttps
sbb
sub
or
pop
sbb
sub
popa
test
loopne
xchg
nop
punpcklwd
loopne
scas
pop
pop
mov
int
lock
pop
push
jbe
data16
insl
mov
cmc
xor
mov
mov
add
mov
mov
push
aas
inc
cmp
sbb
sti
dec
stos
mov
push
cmp
setg
test
push
mov
mov
js
adc
test
mov
insb
inc
jg
stos
repz
xchg
inc
mov
popa
test
sbb
sub
mov
inc
dec
mov
xor
cli
les
xchg
nop
test
jle
push
mov
jno
inc
je
add
mov
lea
fdivs
lret
aas
je
jp
das
out
add
iret
inc
sarb
push
dec
add
pushf
fstps
cmp
add
out
adc
sbb
bound
outsl
add
xchg
mov
int
mov
pushf
out
mov
insb
push
pop
in
scas
push
jbe
movsb
adc
sub
xchg
aas
pusha
cmpb
punpcklwd
or
inc
das
cmpsb
mov
inc
pusha
movsb
dec
or
cmpb
inc
pushf
push
add
pop
jg
aas
jnp
or
lahf
lea
mov
aas
int
xchg
loop
mov
add
imul
aaa
mov
adc
cmc
push
scas
mov
adc
mov
loop
xorl
cli
imul
idivb
xchg
jge
mov
jbe
push
inc
lahf
dec
mov
inc
xchg
scas
or
aaa
add
mov
arpl
popl
sbb
in
sub
cwtl
xchg
out
imul
cmp
inc
mov
sub
inc
push
scas
jo
outsl
sbbb
dec
sbbb
fisubs
mov
test
shlb
dec
test
jo
into
es
das
cmp
popl
subb
test
mov
jne
and
mov
add
xchg
call
mov
test
addb
mov
rcr
inc
lahf
pop
push
xchg
jg
lahf
nop
dec
ret
test
shrb
lods
jp
dec
sub
dec
mov
dec
in
dec
loope
sub
sbb
and
jno
ljmp
xor
and
jb
leave
adc
jnp
inc
dec
jno
out
cmp
xchg
std
pop
lock
and
adc
aas
xorl
add
sti
dec
shr
ja
test
sbb
xor
add
test
push
into
lods
push
das
jbe
gs
dec
insb
daa
ret
and
in
mov
push
pop
push
js
mov
jg
jo
xchg
or
mov
xor
iret
add
pop
shrb
pop
jns
je
les
sub
popf
xor
cmp
icebp
call
int
mov
call
fdivrl
xor
or
cmc
stos
adc
jae
mov
ror
push
jecxz
or
js
mov
sub
movb
negb
push
lcall
sbb
cmp
bts
popa
mov
stos
rorb
and
popa
sbb
add
dec
jmp
call
int
add
imull
add
pop
push
rclb
mov
and
sbb
leave
je
ret
push
mov
mov
inc
or
stos
or
into
psubsb
pop
mov
jl
or
idivl
fmuls
sbb
dec
fisttpll
xchg
cwtl
mov
daa
push
rolb
dec
mov
stc
mov
inc
pop
mov
inc
xchg
sub
mov
sbb
push
cmp
xchg
fwait
xchg
and
xchg
test
cmp
or
daa
push
shl
cltd
mov
decb
or
mov
mov
fisubl
pop
cmp
loopne
int
mov
mov
dec
push
sub
es
addr16
jecxz
rcrl
in
add
mov
jge
push
jb
repnz
cmc
xor
cli
dec
dec
es
pop
adc
lods
rorb
cmp
lahf
js
sbb
lds
and
mov
out
je
popl
pop
notl
ds
es
scas
xor
xchg
nop
xor
mov
mul
stc
popf
inc
iret
sbb
or
push
je
in
ficomps
dec
mov
icebp
cmp
and
inc
mov
cld
inc
and
dec
dec
pusha
pop
enter
test
inc
or
adc
dec
xor
cmpb
pop
movsl
test
movsl
ds
xor
mov
das
or
mov
push
cmp
add
test
stos
fistpl
test
pushf
adc
nop
dec
lahf
test
mov
add
push
xor
lcall
movsl
dec
push
divb
lods
mov
sub
out
or
fildl
lods
mov
mov
mov
cmpsb
mov
xlat
jne
and
xor
enter
xor
mov
in
mov
dec
mov
loopne
test
cmp
pop
xor
inc
mov
imul
xchg
loopne
pop
ret
cmc
mov
adc
insb
push
leave
movsb
push
ffreep
mov
lret
out
shll
insl
inc
into
test
nop
popa
repnz
or
mov
or
mov
repz
push
jp
shll
pop
les
stos
adc
xlat
xor
int
mov
dec
mov
and
insl
push
inc
push
les
cmpsl
xchg
jne
mov
ficompl
lcall
cmp
dec
dec
fimull
mov
ljmp
add
cs
lahf
sub
in
shll
mov
and
cli
inc
mov
ret
mov
ret
cmp
push
in
into
mov
cmp
mov
sbb
clc
andl
xchg
jg
test
sar
and
fisubrs
sbb
xor
repz
add
je
jno
pop
rcr
stos
mov
in
push
sub
or
mov
loop
dec
jbe
adc
and
jecxz
jle
push
push
notb
test
dec
cmpsl
and
lods
inc
lods
sahf
pop
xchg
call
push
ljmp
fwait
add
adc
out
rcrb
stc
push
out
shl
jno
xor
scas
lods
movsb
cmc
add
shll
in
push
pop
inc
stos
lea
sahf
xchg
icebp
enter
sbb
rorb
or
sub
pop
js
cmp
xor
add
or
movsl
and
push
push
mov
imul
sub
lahf
jo
daa
pop
sub
test
cmp
jbe
mov
aas
mov
push
dec
add
in
sbb
test
fbld
mov
dec
repnz
cwtl
and
pop
aad
adc
xor
xchg
test
mov
scas
cmp
dec
test
out
push
arpl
and
arpl
outsb
sbb
outsl
xor
orl
divl
in
jp
cli
in
adc
imul
imul
inc
fcomip
add
jb
cmp
les
pop
xchg
test
lahf
movsb
bound
filds
and
push
cmp
dec
push
dec
rcrb
stos
imul
mov
repz
arpl
fildl
leave
or
mov
and
fsqrt
and
pop
xor
inc
jg
sub
fdivl
mov
mov
or
adc
inc
dec
jns
mov
cwtl
lods
scas
push
push
daa
cmpsb
mov
icebp
sub
lahf
test
adc
mov
out
in
mov
cmp
and
xchg
cmp
pushf
push
dec
cmpb
dec
stc
lock
mov
inc
loope
xor
loopne
test
pop
das
xor
ja
out
mov
jg
popf
ljmp
popl
or
aas
or
out
lahf
inc
xchg
aas
xlat
jmp
jle
sti
and
orb
in
pop
push
insl
dec
ds
iret
cltd
ficomps
and
pop
xlat
adc
cmp
add
popa
ja
sub
aas
xor
fstl
dec
mov
cmp
pop
cmp
adc
shll
das
sub
sub
outsl
bnd
movsb
icebp
shlb
into
jp
mov
vpperm
outsl
dec
mov
repz
dec
gs
pcmpgtb
sbb
xchg
mov
lods
notl
inc
repz
cwtl
xchg
lahf
repnz
push
lds
cmpsb
in
pop
mov
addr16
add
push
mov
push
je
repnz
imul
and
es
das
sbb
cmpsb
inc
mov
int
push
test
cmp
test
pop
lock
push
pop
inc
mov
lahf
and
mov
iret
and
mov
test
mov
push
push
lods
sahf
pop
pop
push
push
mov
mov
imul
sbb
inc
push
or
cwtl
push
add
dec
sbb
lret
sub
or
inc
cld
popa
ds
add
adc
ffree
out
ljmp
sub
fidivrl
lahf
stc
out
cld
mov
mov
mov
pushf
cs
out
loop
or
call
add
adc
inc
mov
popa
movsl
iret
stc
mov
es
imul
sub
aam
into
adc
cmp
pop
sub
push
cld
insl
xchg
adc
hlt
or
push
jmp
lds
rclb
ret
cmpsl
cmp
stc
pop
filds
mov
test
sbb
dec
pop
popa
in
inc
cli
mov
icebp
movsl
xlat
into
ficomps
pop
push
sbb
push
loope
sub
addb
scas
and
fs
mov
mov
rorb
mov
fcompl
fisttpll
mov
mov
pop
dec
stos
ss
mov
ja
mov
fiadds
cld
repz
mov
pop
scas
lahf
or
xor
outsl
cmp
imulb
mov
xchg
push
add
mov
pushf
push
push
stos
cmpsb
xchg
xchg
push
xchg
sub
lahf
sub
push
pusha
add
pop
pop
clc
mov
stos
pushf
nop
xor
bound
mov
pop
xlat
and
jo
pop
andb
jecxz
out
imulb
xor
push
sti
jbe
jl
dec
pop
insl
push
insb
pop
ret
adc
and
rcrb
mov
cmp
xor
mov
icebp
push
and
inc
dec
ret
test
gs
lock
push
lds
push
sub
mov
testb
insl
push
gs
jns
orl
add
mov
push
outsl
mov
mov
popf
adc
call
or
xchg
insl
idivl
shrl
push
add
push
lea
push
dec
faddl
sub
xchg
adc
inc
divb
mov
cmc
push
sahf
lods
pop
insb
mov
ja
sbb
adc
cmc
cmp
pusha
notl
dec
lret
testl
cmp
mov
cltd
outsb
adc
push
xchg
pushf
xchg
sub
pop
hlt
out
lea
sub
lret
leave
sbb
jmp
sbb
sub
ds
pop
fstpl
jne
add
clc
adcb
pop
pop
mov
pop
jmp
push
pop
int
sbb
in
loopne
sub
dec
sahf
cmpsb
inc
lea
nop
push
add
nop
or
jmp
and
jg
sub
mov
mov
shlb
pop
lahf
push
call
mov
cmp
mov
push
call
hlt
cmp
mov
push
mov
add
pop
dec
mov
mov
popa
xchg
das
nop
cmp
loopne
inc
cmp
dec
adc
mov
js
aaa
inc
pop
arpl
sub
push
pop
sub
dec
into
mov
outsl
mov
mov
cltd
popa
adc
testl
cmpsb
test
jno
popa
adc
mov
push
insb
jg
sahf
out
pop
addb
mov
jne
inc
nop
pop
addl
insl
lea
das
testl
cmp
mov
adc
cmp
pusha
sub
movsb
arpl
push
rorb
mov
pusha
in
pop
and
dec
das
test
push
cmp
push
add
int
sbb
inc
inc
jl
add
mov
lret
pusha
mov
jmp
sbb
sahf
stos
jp
pop
xrelease
ror
add
aam
cs
sub
aas
les
pusha
cmp
pop
outsb
insl
or
mov
stos
lods
addr16
mov
and
fistps
pop
mov
pop
push
cli
mov
sub
cmc
push
dec
stos
cli
orb
push
leave
fwait
pop
cmp
add
inc
js
jbe
scas
lret
iret
xor
mov
xchg
daa
jg
cmp
push
lahf
cwtl
xchg
nop
xorb
test
and
test
xchg
sbb
test
mov
lds
inc
in
push
outsb
or
mov
in
fdivr
sub
mov
add
mov
out
add
inc
popa
loop
cmp
push
stc
lods
cmp
popa
mov
sete
ficomps
cltd
fiadds
scas
sti
fwait
dec
fsubrl
movsb
aaa
out
icebp
and
inc
mov
pusha
mov
sahf
jecxz
inc
pop
and
arpl
stos
and
das
or
pop
add
add
mull
push
add
je
and
pop
scas
test
inc
and
data16
sbb
pop
bound
mov
sbb
sub
insb
out
lahf
or
dec
int3
loope
cs
sub
stos
lds
dec
push
movsl
xor
dec
aas
test
sub
sbb
push
mov
loopne
xchg
mov
pop
pop
cmp
enter
mov
add
sti
sbb
lahf
mov
aam
clc
inc
xor
nop
push
push
inc
iret
jb
iret
jne
aaa
mov
mov
ret
test
jmp
and
mov
movsl
out
rcrb
fwait
test
pop
aam
ljmp
fldt
mov
in
decb
mov
push
inc
add
inc
or
jno
inc
sub
or
inc
sub
pop
mov
in
adc
js
sti
sbbb
mov
sub
faddl
rclb
shll
imul
jb
popf
fistpl
nop
scas
sub
subb
pop
popf
xor
popf
xor
pop
and
cmpsb
sub
xchg
xlat
adc
fcomi
jns
push
pusha
stc
aam
mov
in
cmpsb
mov
ss
mov
adcb
add
hlt
cmp
dec
mov
aaa
xor
std
ror
fimull
sub
lea
aam
jl
fistps
mov
lret
xor
js
adc
icebp
cmc
daa
orl
iret
test
push
scas
cmp
push
and
pop
insl
or
loope
adc
bound
fwait
cmc
inc
or
in
jl
xchg
call
sbb
sti
std
mov
sbb
add
xor
iret
xchg
test
sub
enter
and
insb
mov
dec
iret
dec
cmp
sarb
jbe
dec
sub
scas
std
inc
roll
ret
data16
pop
fistps
add
ss
test
scas
dec
sub
xor
out
cwtl
lahf
gs
stos
sub
adc
or
jg
lea
xchg
sub
stos
es
cmpsb
sbb
pop
push
cmpl
mov
add
leave
int
pop
rcrl
in
pop
imul
xchg
nop
jns
lahf
hlt
fsubrl
add
inc
stos
div
mov
pushf
cs
mov
jp
int
arpl
xor
mov
in
pop
into
cmp
dec
push
inc
pop
adc
les
ds
adc
loopne
mov
ds
push
sub
adc
and
lods
js
adc
mov
jp
xchg
into
jge
sarb
and
jnp
cld
imul
test
imul
js
pop
inc
imul
jecxz
insb
mov
push
ja
push
and
sbb
mov
in
loopne
cmp
sbb
dec
pop
repz
adc
dec
hlt
push
shl
dec
xchg
fdivl
mov
push
sub
test
test
push
mov
lods
shl
push
inc
push
dec
repz
cmp
add
and
mov
pop
test
jo
sub
xor
sbb
inc
ss
cmp
mov
mov
and
or
mov
add
inc
insl
push
xchg
push
popa
in
mov
mov
push
jo
scas
cmp
mov
push
mov
mov
push
jbe
inc
js
add
ljmp
or
pop
stos
xor
or
enter
rol
fisubrs
adc
addb
pop
mov
lds
push
cld
popf
mov
pusha
call
dec
int3
xor
adc
adc
and
stos
push
mov
push
sbb
cmp
or
push
adc
fs
xchg
jnp
or
jecxz
push
scas
adc
jl
xchg
or
add
push
xchg
je
icebp
adc
pop
dec
int
mov
adc
jnp
loopne
mov
push
mov
pop
and
jns
popf
mov
test
push
in
or
adc
dec
mov
sbb
and
mov
repnz
enter
cmp
sub
in
mov
add
andb
inc
or
inc
mov
cwtl
add
sbb
add
shll
mov
mov
adcb
and
ds
dec
add
popf
mov
cld
xchg
or
loop
jne
addr16
jl
cmp
xchg
testl
inc
push
ja
lea
lsl
mov
fstpl
jge
imul
popf
and
jb
xchg
psllw
sbbb
add
repz
add
pop
fs
inc
mov
jno
das
sub
sub
les
stc
test
inc
dec
iret
arpl
fistps
mov
or
lea
jo
push
jo
rcr
mov
cld
mov
add
cmpb
ret
negl
mov
les
pushf
push
push
sub
push
fisttps
sbb
push
or
out
loope
jle
push
outsl
push
iret
pop
and
jns
movsb
popf
inc
jns
xor
add
mov
in
mov
and
dec
mov
xor
mov
popf
push
jae
push
dec
cs
adcb
sbb
test
inc
sub
inc
mov
and
sbb
xchg
cli
out
and
in
xchg
mov
int
sbb
gs
pop
ja
add
adc
jge
pop
sahf
jmp
mov
popf
data16
mov
mov
lods
jmp
push
rcr
add
add
sahf
or
flds
push
adc
testl
sub
je
cltd
iret
out
and
pop
add
in
sub
dec
shl
jne
add
mov
mov
or
xor
xor
sub
inc
mul
les
cld
pop
add
and
inc
stos
dec
popf
std
cmp
je
int3
pop
mov
daa
xor
add
mov
and
jo
int3
jg
cmp
push
rcl
shrb
adc
test
notb
sbb
mov
jmp
mov
and
iret
jne
dec
mov
cmp
inc
sbb
jmp
jmp
and
sub
cmp
mov
cmpsl
mov
repz
in
in
jecxz
sahf
fsubrl
mov
ss
test
dec
fcmovnbe
or
lods
xor
add
push
pop
sub
orb
jecxz
das
les
xchg
nop
pop
sti
or
adc
mov
push
add
mov
push
aaa
fstpt
add
sbb
out
adc
mov
inc
mov
sti
inc
pop
xchg
pop
pop
sub
jo
dec
xor
lahf
aam
loop
jp
pop
sbbb
dec
lcall
pop
ljmp
add
insl
loopne
aam
in
or
add
dec
jnp
fnstenv
call
pop
xor
push
add
mov
push
jg
lret
pop
in
fmulp
push
push
aad
popa
fisubrs
pop
jl
mov
jg
mov
cmp
add
push
ficoms
fadd
sub
aam
test
stc
lods
push
xor
testb
andb
fadd
outsl
insb
sub
lret
das
and
mov
ficomps
lea
inc
push
mov
jnp
or
lea
in
fdivl
popf
sarb
int3
rcll
fldenv
pop
fs
fsubrl
into
sbb
mov
mov
jno
mov
lods
xor
shlb
mov
in
lahf
pusha
push
cmp
inc
scas
leave
mov
sbb
nop
fidivrs
popa
out
into
cli
loopne
jno
or
ljmp
nop
dec
insl
mov
into
lods
mov
fmull
das
scas
dec
adc
xrelease
ljmp
bswap
cmpsl
lock
rcll
mov
mov
mov
into
testl
lahf
inc
data16
xor
out
outsb
imul
nop
in
xchg
cmp
fsubrs
nop
push
push
jmp
push
sbb
cs
mov
ret
in
mov
lea
in
inc
dec
mov
push
into
lods
repz
ret
inc
pop
lods
add
sbb
aas
and
shlb
dec
mov
push
das
push
cmp
push
adc
cmp
and
sbb
cmpb
and
mov
dec
mov
scas
xorl
push
repnz
ss
jecxz
xchg
push
fsub
shll
add
ja
out
dec
stos
jns
call
out
xorb
mov
test
decb
loopne
jns
stos
push
jae
es
add
in
fisttps
out
fistps
adc
lock
ret
out
dec
xor
addr16
iret
pop
sub
mov
stos
int
sti
sub
mov
or
ret
cmp
jnp
sahf
or
jb
jl
cli
jg
je
xor
daa
test
inc
push
push
call
aad
cld
push
fdivrl
clc
cmp
outsl
push
push
cmp
cwtl
or
xchg
or
push
and
icebp
inc
es
ret
or
mov
in
mov
icebp
mov
add
xchg
mov
xor
sarl
sub
dec
cs
ljmp
aad
call
fdivs
jge
es
inc
in
mov
dec
or
out
repz
xchg
push
xor
add
add
dec
fnstcw
cwtl
divl
in
jns
add
insb
xchg
fs
xchg
add
xchg
jmp
js
pop
jmp
imul
and
xchg
inc
loop
pop
or
and
cmp
mov
movsb
mov
cmpsl
inc
das
jmp
jns
pop
lods
es
mov
and
add
xor
mov
inc
and
es
les
cwtl
lret
xchg
rcrb
movsb
int
fldl
stc
inc
mov
insb
cmp
aaa
orb
push
and
fistpll
mov
stos
jb
adcl
adc
into
xlat
push
out
call
ror
pop
mov
mov
and
push
ss
push
fistpll
dec
xchg
loopne
dec
mov
sbb
dec
insl
xchg
ret
insb
imul
stos
push
mov
inc
cs
dec
cmp
repnz
jne
inc
sbbb
lock
outsl
lods
mov
lea
mov
fs
xchg
pop
push
repz
add
sbb
sbb
inc
mov
aaa
nop
push
aad
dec
pop
pavgb
jne
mov
dec
loopne
in
jl
js
dec
pop
and
imul
xor
jp
fidivrl
push
push
ficoms
inc
sub
fwait
ficompl
xor
adc
push
or
adc
repnz
dec
adc
pushf
mov
push
fstl
outsl
mov
push
add
push
and
fmul
testl
xchg
xchg
xchg
loopne
jle
sub
cmp
int3
outsl
cmp
dec
xchg
mov
mov
cwtl
push
inc
out
int
mov
ja
lahf
mov
add
mov
insb
push
sbbb
mov
les
pop
enter
data16
push
push
jbe
push
push
push
sahf
cwtl
vmread
mov
add
xorb
popf
cwtl
addb
adc
xchg
push
cmp
inc
mov
xlat
pop
or
dec
out
pandn
cmp
les
cmp
inc
das
out
inc
pop
cmp
sub
cld
mull
inc
adc
jbe
rcrl
jg
iret
adc
jnp
push
push
popf
dec
sub
scas
xchg
ret
inc
dec
pop
scas
cmp
scas
sbb
cmp
rclb
pop
cmp
into
mov
push
jl
cmp
mov
stos
int
rorl
mov
dec
int3
push
cmp
mov
mov
rcpps
jp
dec
cmp
dec
lea
mov
aam
negl
iret
add
jae
lea
push
mov
cli
sub
pop
mov
mov
inc
into
cmp
in
in
in
popa
fsubrs
or
repnz
lret
cmp
inc
pop
dec
ds
lahf
notb
lea
and
insl
inc
xchg
or
cmc
xor
jnp
movsb
lahf
jno
ficoml
dec
or
test
loopne
pop
and
mov
adc
mov
inc
in
dec
sub
loopne
sbb
fwait
sub
add
cmp
sbb
mov
dec
jbe
adc
and
mov
cli
std
add
or
pop
mov
jno
pop
sbb
jo
pop
sbb
inc
pop
mov
lahf
dec
jecxz
push
test
mov
test
add
les
sbb
inc
push
pop
arpl
cmpsl
cmp
add
mov
cmpb
lods
test
and
mov
jne
add
fcompl
imul
sbb
mov
cli
pop
ret
inc
adc
pop
mov
xlat
push
mov
xchg
push
sub
mov
lods
cmpb
inc
in
xchg
and
push
mov
cwtl
into
popa
orb
cwtl
fiaddl
notl
lods
test
push
stos
into
fxch
mov
inc
lock
push
add
pop
mov
ret
sub
insb
adc
pop
pop
pop
lock
push
dec
xlat
les
inc
jge
jno
mov
rcrb
pushf
sbb
mov
mov
add
call
push
mov
scas
or
lahf
add
in
movsl
nop
mov
mov
lds
and
dec
ficomps
push
mov
testl
mov
addr16
or
test
cmp
sub
sahf
call
subl
lcall
shrl
mov
mov
lcall
cld
insb
stos
xchg
in
repz
or
cmp
ret
sub
mov
jle
ljmp
xchg
jns
fidivrl
scas
repnz
fwait
enter
mov
in
push
aaa
xchg
or
ja
or
int3
jecxz
pop
lock
les
mov
stc
and
flds
incb
aam
push
xchg
adc
je
in
cld
rolb
mov
inc
movsl
in
xchg
dec
int
jne
xchg
faddl
js
cmp
mov
idivb
jnp
sub
mov
bts
adc
lcall
jmp
push
movsb
mov
aaa
ret
add
rcrb
xchg
stc
xchg
pop
dec
cmp
xchg
mov
mov
and
imul
or
xchg
pop
and
aam
mov
pop
and
repz
push
insl
int
jns
in
fadds
adc
movsb
cli
loopne
nop
test
sub
inc
push
cltd
add
sbb
rcrl
out
insb
loop
shll
xchg
pop
and
jne
jmp
cmc
je
scas
cmp
pop
out
add
sub
cmpsb
push
loopne
cli
cmpl
add
fs
jae
loopne
inc
add
scas
cmp
ret
out
adc
mov
jno
mov
int
pop
mov
std
mov
or
mov
push
repz
dec
and
not
push
jl
and
mov
std
cwtl
shll
cmp
testb
mov
dec
xlat
hlt
cmp
loop
insb
cmpsl
lock
xor
mov
icebp
mov
add
call
cmp
subb
loop
packuswb
movsb
fs
lea
sub
sbb
dec
orb
inc
sub
mov
lahf
mov
out
cmpsl
inc
add
jg
push
jg
lahf
cmp
outsl
cmp
and
adc
lods
xor
or
movsl
mov
adc
xor
ret
mov
jle
nop
cmpsl
push
xor
and
out
mull
adc
push
cmp
inc
xlat
mov
cli
addr16
int3
dec
scas
fstps
ds
into
mov
in
inc
pop
es
inc
xchg
dec
loop
push
fisubrs
sub
test
push
mov
mov
out
jne
sahf
pop
ret
scas
test
mov
push
mov
int
movsl
faddp
push
in
xchg
test
sbb
ss
scas
inc
push
mov
add
andl
rcrl
je
sub
jnp
scas
repnz
jl
pop
inc
in
sbb
sub
or
loop
sub
sub
jecxz
mov
nop
rorl
jge
pop
xchg
stos
fisubl
mov
push
mov
adc
enter
fwait
inc
rclb
fildll
sub
pop
pop
popl
and
stos
fwait
das
gs
lahf
sahf
popa
xlat
sbb
sbb
aam
cld
sub
ds
dec
xchg
pop
fstpl
ds
cltd
cmp
push
and
test
jecxz
dec
cmc
int3
sbb
cmp
sarl
cli
cmp
inc
stc
sub
scas
lahf
in
jl
xchg
shl
cmp
loop
in
and
and
xlat
cwtl
popa
lret
nop
push
lret
nop
dec
in
pop
inc
cltd
test
mov
rcrb
fildll
stos
xlat
roll
pushf
int
sub
mov
fstps
stc
fcompl
dec
fldcw
push
pop
sarl
mov
adc
xor
loopne
sub
imul
popf
into
test
xor
lret
lahf
enter
xor
sbb
aaa
xchg
ds
int
and
rcrb
in
insb
sarl
mov
mov
mov
xor
sub
mov
cmp
jo
enter
cmp
addr16
and
out
cmp
test
out
or
mov
negb
lods
mov
adc
mov
adc
sti
divl
pop
test
push
gs
add
faddp
jo
jnp
inc
adc
int
and
jns
imul
ss
gs
push
lea
bound
jmp
pusha
push
mov
mov
xor
cwtl
pushf
push
sub
mov
nopl
mov
mov
jno
inc
pop
mov
adc
mov
add
lea
fnclex
ficompl
sbb
or
int3
or
dec
fwait
mov
jbe,pt
mov
jb
add
lods
adc
iret
cs
xor
stos
cmp
les
add
adc
ficoms
movsl
pop
cmp
xor
aas
cwtl
int
jecxz
cwtl
outsl
add
ret
sbb
push
insl
shrl
bound
pop
sub
pop
xchg
jns
sub
dec
dec
adc
sub
inc
fsts
fxch
pop
and
push
xchg
mov
sub
push
and
mov
daa
cmp
nop
iret
outsl
jb
pop
adc
pop
cmpsl
mov
movsb
mov
jg
les
push
pusha
out
int3
cmp
gs
fiaddl
bound
push
mov
jb
in
xchg
pop
iret
mov
mov
popa
mov
xor
mov
cltd
in
lods
pop
cltd
add
cmp
jmp
popf
inc
or
mov
cmc
push
ret
push
sbb
scas
sbb
sbb
cld
ret
les
mov
and
lret
cmc
mov
sbb
adc
out
push
push
cwtl
inc
mov
dec
mov
call
or
cmp
ret
mov
cwtl
dec
jnp
jmp
decb
cmp
lahf
dec
sarl
and
jle
in
mov
test
sbb
push
dec
mov
add
in
jmp
loopne
stc
movsb
enter
inc
xor
bound
mov
in
pop
daa
mov
popa
pop
dec
cmp
cwtl
gs
xor
dec
aad
mov
and
lahf
movsl
and
jecxz
mov
test
ret
enter
les
add
mov
js
stos
or
pop
ret
les
mov
xchg
fsubrs
out
cli
mov
shrb
in
movzbl
outsl
xchg
mov
movsl
loopne
jl
jg
cmp
push
nop
cmp
pop
jl
adc
xchg
jns
jns
pop
dec
pop
mov
popf
jne
leave
lock
pop
dec
aad
sub
mov
mov
jmp
negb
sbbb
push
push
push
popa
lea
mov
push
stos
sub
jg
fcomps
shll
adc
jno
shlb
test
into
push
fnstenv
xchg
cmp
ss
test
push
and
hlt
inc
pop
cmpsl
nop
mov
je
jp
pop
scas
or
jl
cld
dec
pop
add
add
ror
fsts
push
das
pushf
cld
add
pop
shll
push
inc
int
test
jge
and
mov
cli
test
ret
push
add
mov
push
inc
js
mov
mov
not
data16
fisubs
push
shl
iret
out
mov
lock
mov
das
filds
jmp
or
lock
repnz
and
dec
mov
add
int
std
out
push
cld
push
in
xor
cmpsb
sbb
in
lret
incl
popf
sub
pop
mov
pop
push
out
xchg
inc
sbb
popa
outsb
jge
jmp
mov
lcall
mov
negl
adc
add
push
cltd
mov
pop
pusha
pop
inc
pop
lods
inc
lods
cltd
das
subb
fs
xchg
cmp
in
cs
dec
lods
std
pop
adc
jb
xor
shlb
cmp
ficoms
cltd
cld
push
sbb
sbbl
and
data16
mov
lret
test
mov
orb
test
push
scas
loopne
cmp
les
test
pop
inc
push
push
bsr
cli
rcll
in
mov
sbb
outsb
cmp
cmp
pop
lods
xchg
loop
mov
shrl
inc
out
jbe
loope
std
jg
pop
mov
aam
das
or
insl
xor
xor
sub
lret
mov
std
lcall
and
pop
lods
pop
les
call
xchg
hlt
jl
fwait
je
xor
in
int
ljmp
cld
adc
jne
xor
dec
fnstsw
cmp
in
imul
ror
push
jo
stos
mov
lahf
jecxz
popf
test
mov
pop
aas
mov
dec
sbb
je
mov
and
insb
aam
sub
scas
add
rcll
push
cmp
dec
jb
and
out
cmp
aas
add
scas
pop
mov
sub
dec
jp
cwtl
mov
sub
sub
push
aad
inc
pusha
sbb
jg
ljmp
mov
dec
sbb
rolb
mov
and
js
scas
ljmp
test
sub
jecxz
das
rolb
inc
or
out
test
test
and
or
cs
call
nop
lret
int3
or
dec
inc
stos
pop
mov
xchg
xlat
lea
bound
sbb
push
es
pop
movl
inc
mov
pop
inc
xlat
push
mov
or
rorl
pop
adc
sbb
mov
out
and
pmullw
cmp
sbb
mov
jno
dec
cmp
push
je
jg
nop
mov
cld
jo
dec
call
dec
inc
fiadds
cmp
mov
push
dec
lcall
je
ret
out
cmp
out
aaa
out
and
testl
dec
das
gs
mov
nop
or
jp
std
cmpsb
faddl
inc
in
repz
lahf
cmpsb
shll
mov
or
or
adc
push
call
stc
jl
xorb
and
dec
push
cmpsl
push
cmc
pop
call
sub
sub
loope
inc
insl
iret
icebp
iret
push
mov
fcmovbe
push
iret
imul
hlt
sub
jecxz
xchg
push
testb
and
stos
push
addl
mov
push
aas
ret
ds
sbb
ret
scas
and
iret
fadd
and
movsb
push
jp
dec
push
test
insb
in
pushf
nop
cmp
ret
insb
stc
xchg
in
xchg
aad
hlt
xchg
cmc
cmp
mov
cld
es
pop
popf
xchg
inc
mov
int
pop
push
push
mov
mov
mov
mov
push
add
out
add
test
sti
inc
stos
inc
xlat
shrb
mov
inc
push
stos
dec
sbb
cmp
or
push
pop
push
popf
into
fstl
cvttps2pi
jns
daa
fs
and
fninit
fldl
mov
push
push
les
cmc
push
jae
push
fistps
sub
out
or
add
cltd
movsl
cmp
jns
lret
sahf
shrb
ficomps
push
mov
call
mov
adc
test
inc
jnp
cmpsl
adc
jl
mov
repz
data16
add
sbb
test
add
int
enter
pushf
xchg
clc
sub
adc
jl
push
jnp
mov
sti
jl
or
popf
cmp
add
sub
and
mov
xchg
imul
es
cmc
lahf
cmp
popa
lret
pop
sub
inc
ljmp
mov
iret
aam
add
imul
sub
mov
and
iret
sarl
adc
in
sti
rcrb
movsb
insl
cmp
cld
push
mov
sahf
push
repz
xchg
cmp
outsl
cmp
stos
cwtl
inc
fcoml
pop
jmp
jmp
cmp
xchg
jno
shl
and
rol
inc
sub
es
pushf
inc
adc
sbb
mov
mov
sub
push
mov
out
pop
and
push
mov
sub
xor
push
pop
pop
aad
dec
stos
aad
xchg
mov
dec
inc
xchg
pushf
aam
inc
inc
pushf
xor
or
add
pusha
testl
jno
mov
insb
clc
inc
sbb
cmc
repnz
icebp
lods
cs
pop
jl
cmp
sti
inc
pushf
and
stc
dec
mov
cwtl
jo
ds
or
aas
inc
aaa
faddp
mov
cmp
inc
enter
mov
outsb
add
fwait
mov
fbld
mov
test
pop
push
lods
jns
jmp
mov
push
inc
xor
lea
ljmp
jmp
lods
popf
sub
test
add
cmc
repnz
ljmp
fucomip
dec
aam
dec
inc
mov
shr
mov
mov
popa
adc
jns
outsb
mov
inc
fwait
addr16
out
addb
push
movlps
pushf
test
mov
pop
outsl
es
mov
out
dec
lret
push
push
idivb
js
inc
insl
push
inc
in
int
fcoml
cltd
jns
adc
jp
cmp
xchg
jmp
out
cs
sti
mov
pop
xor
dec
popf
gs
mov
push
push
mov
fs
dec
out
test
iret
outsl
add
add
sub
shll
out
jae
mov
repnz
cs
iret
stos
in
or
sub
mov
andl
out
cmp
xchg
test
dec
pop
decb
fisubl
repnz
lea
mov
std
jl
inc
repnz
ljmp
sbb
and
pop
push
jb
pusha
sub
iret
shrl
leave
mov
lods
adc
xlat
pop
sbb
adc
filds
sub
repz
cltd
inc
rclb
adc
insb
push
jo
sbb
lahf
mov
mov
pop
lds
push
push
stos
xchg
fsubs
dec
dec
mov
xor
jecxz
sub
cs
push
lock
or
fwait
pushf
and
add
lret
cs
jb
sbb
stos
mov
out
in
jb
mov
pop
jne
imul
popa
mov
sbb
notb
out
dec
push
xchg
mov
repz
mov
into
inc
rolb
mov
push
aad
ret
insb
sub
mov
add
xor
sar
clc
stc
sbb
or
sub
pop
into
push
loopne
push
mov
or
fucom
cli
mov
dec
inc
jge
lret
fwait
adc
mov
cmp
mov
ds
sarl
cmp
inc
pop
dec
lock
out
adc
les
inc
dec
cs
inc
loopne
inc
mov
lods
adc
lds
sbb
xchg
jbe
dec
cmpsl
xor
pop
pop
lahf
xchg
ficoms
pop
out
mov
sbb
mov
inc
add
pusha
sbbb
adc
and
nop
mov
cwtl
push
push
and
outsl
aad
adc
push
int3
and
adc
je
stc
in
xchg
int3
repnz
fistps
adc
mov
shlb
xor
push
cwtl
pop
popf
sub
jae
cmpsl
daa
add
fidivs
sbbb
aas
test
rcrl
mov
cmpsb
in
daa
dec
jb
call
dec
cmpsl
es
shl
imul
inc
add
mov
scas
cld
call
mov
xchg
cmc
aam
nop
xor
dec
icebp
xor
and
int
call
mov
out
pop
test
ds
in
scas
gs
and
and
sub
icebp
xchg
lds
adc
pop
mov
scas
into
stos
cs
mov
jge
xchg
or
xor
mov
mov
xor
mov
add
xchg
enter
int
sub
cli
cmp
sbb
mov
stos
rcrb
std
cs
pop
lds
xor
cli
inc
cwtl
and
movsl
sti
mov
mov
cmp
std
mov
sti
xlat
pop
ret
sub
pusha
or
pusha
add
mov
cmp
xchg
ljmp
inc
mov
lret
dec
lods
mov
xchg
in
jbe
loope
in
lret
loope
xchg
dec
stos
cmp
insl
push
loope
sbb
lret
mov
cwtl
iret
fld
pop
mov
nop
adc
inc
movsb
push
pop
dec
mov
sbb
push
pop
mov
xor
mov
scas
roll
jl
pushf
sbb
inc
outsl
rcll
pop
push
cmp
pop
push
mov
lock
add
mov
sarb
lods
jecxz
and
je
aaa
repnz
xchg
jno
loopne
jnp
ficomps
push
add
adc
sub
pop
xchg
cli
push
out
or
stc
lods
int
xchg
add
repnz
loop
iret
dec
int3
inc
sub
or
cmpsl
fdiv
mov
jnp
shr
sub
sbb
stos
mov
sbb
out
lahf
lods
cmp
push
pop
inc
inc
or
mov
adc
mov
mov
push
jo
jmp
stos
or
dec
scas
add
leave
je
insl
and
nop
adc
push
or
sbbb
push
xchg
sbb
mov
mov
in
mov
movsl
dec
negb
addb
cmp
xchg
js
lods
cmp
xchg
ret
fdivs
movsb
xchg
add
dec
push
adc
cmpb
sub
arpl
add
mov
jnp
shrl
divb
jb
mov
icebp
fistps
mov
int3
push
and
flds
data16
jno
testb
clc
mov
cmc
lods
je
pop
xchg
lret
out
jo
mov
icebp
pop
push
movsb
pushf
iret
push
jp
jg
pop
or
clc
sbb
call
sbb
addr16
adc
pop
in
shll
jno
fsubl
popf
push
inc
xchg
jnp
mov
stos
mov
dec
in
jmp
dec
push
sub
pop
dec
inc
mov
pop
lahf
cmpsb
pop
in
pop
sbb
jp
push
inc
jmp
sbb
xchg
mov
sub
jne
pop
icebp
pusha
divl
stos
sahf
adc
mov
inc
loope
test
movsl
lea
loope
cmc
mov
scas
repz
popf
insl
negb
jecxz
mov
mov
outsb
adc
fnstenv
pop
testb
bound
fsubs
mov
jo
shll
jb
out
inc
push
jo
sub
push
repz
mov
in
push
adc
mov
nop
popf
pop
dec
arpl
pop
repz
scas
lret
inc
inc
sti
push
mov
je
mov
stos
pop
insl
xchg
test
lcall
cmp
scas
sbb
int3
mov
and
push
inc
loope
adc
jge
mov
mov
stos
xor
testb
mov
or
les
xlat
push
push
push
push
fnsetpm(287
dec
insb
aam
lea
test
mov
or
lods
dec
out
cs
pop
addl
je
test
fldln2
inc
ds
cmp
xchg
sarb
leave
sbb
sub
jecxz
out
add
or
movsl
ja
addb
push
jnp
or
adc
xor
loope
or
cmp
popf
mov
in
mov
enter
pop
imul
fdivr
jecxz
inc
pop
sbb
cwtl
scas
and
inc
in
inc
movl
dec
cmpsl
mov
push
sti
lret
jl
pop
xor
notl
in
ret
lea
mov
jns
adcl
cmpsb
daa
pop
js,pt
mov
orl
or
or
dec
andl
push
test
mov
dec
je
aas
lea
insl
mov
jecxz
push
scas
inc
sub
cmp
cmp
adc
sti
in
mov
jp
ss
sub
in
daa
lods
shrl
mov
push
mov
xor
mov
xchg
fisttpll
mov
fld
sahf
push
lahf
dec
sub
lods
sub
xor
mov
roll
int
cmpsl
dec
stc
xchg
fidivrs
mov
sub
jne
dec
loope
xchg
push
and
mov
in
lock
xchg
sub
dec
int3
rcrl
sbb
in
mov
push
lcall
scas
mov
andb
cli
xor
push
cmpb
js
mov
dec
adc
lcall
inc
mulb
cwtl
lahf
xchg
cmp
fbstp
mov
fildl
rcrb
in
aas
rorb
xchg
or
stc
pop
cwtl
outsl
out
mov
out
push
inc
ss
xor
into
divb
mov
mov
les
and
cmc
fs
loop
pop
faddl
add
adc
or
and
rol
repz
test
mov
repz
int3
sbb
and
pop
jmp
sbb
hlt
mov
adc
shlb
popa
cli
movsb
jne
xor
jl
ds
into
int
or
popl
add
cmp
or
cmp
and
gs
cmc
fisttpll
jmp
clc
dec
sbb
push
push
or
sarl
or
push
dec
in
movsb
push
sbb
sbb
imul
push
add
pop
jecxz
gs
xchg
jmp
and
out
movsl
xor
testl
cmp
lret
or
sub
pop
loope
push
mov
fsubl
mov
xor
inc
lahf
das
movsb
scas
pushf
flds
rclb
sbbb
pop
sbb
xor
inc
scas
mov
sbb
adc
push
aaa
lahf
mov
icebp
mov
cli
inc
inc
imul
add
mov
jb
das
push
pop
fisttpl
cli
push
xor
jae
ss
sub
roll
rcll
inc
push
or
repz
add
adc
stos
cli
cmp
sbbb
cld
sub
mov
lock
int3
mov
cmp
mov
pop
aam
sbb
pop
hlt
inc
or
adc
xchg
les
call
ret
hlt
xchg
gs
cmp
or
cmp
jl
push
pushf
out
cwtl
adcb
adc
test
sub
mov
inc
cwtl
outsb
ds
int
or
push
mov
int3
js
push
js
les
fnstenv
aas
iret
rcll
xor
jb
jne
shll
bound
sub
push
cmpsb
adc
test
addr16
and
xchg
insl
test
leave
fldl
popf
mov
push
cmp
mov
push
add
mov
pop
je
cmp
inc
stc
add
add
sub
sub
add
scas
mov
in
div
adc
sbb
clc
bswap
fmull
sub
into
fsts
and
sahf
dec
jle
jbe
lret
inc
popw
jo
mov
call
rep
in
dec
sub
es
out
mov
pop
repnz
leave
inc
lahf
push
inc
sahf
add
add
sub
pop
arpl
movzbl
arpl
lcall
insl
sarb
inc
push
xchg
aam
cli
inc
cmp
adc
pushf
lock
paddd
and
bound
xor
sbb
mov
cmp
fistl
or
xchg
adc
jbe
cmp
push
xor
mov
nop
add
test
mov
or
and
roll
mov
jns
sub
and
push
les
outsl
mov
and
clc
fidivl
sbb
bound
stos
rcrb
sti
nop
aad
inc
movsb
nop
jl
jmp
sbb
ljmp
iret
adc
dec
lahf
in
ljmp
aaa
adc
mov
jg
clc
nop
imul
sbb
inc
out
int
xchg
aad
ret
inc
pop
aam
daa
and
fwait
in
aad
int3
push
mov
repz
and
filds
popf
or
rclb
addb
mov
loope,pt
mov
scas
jmp
adc
daa
mov
into
and
shrl
repz
jl
xchg
repz
xchg
aad
inc
into
mov
int3
mov
mov
add
and
shld
mov
clc
pop
cmp
add
dec
sbb
call
test
loope
clc
shld
clc
and
jae
cwtl
add
xor
xchg
xchg
test
ljmp
push
les
xchg
ljmp
leave
push
ret
iret
adc
pop
pop
inc
aaa
mov
das
jno
jae
insl
in
das
add
jo
into
div
or
sub
imul
insl
adc
xchg
pop
popf
imul
xchg
jecxz
push
mov
mov
dec
fdivrp
lock
cmp
mov
in
jno
pop
push
lcall
and
les
sbb
addr16
or
push
jg
scas
jo
pop
or
sbb
enter
sbb
fwait
inc
xor
int3
dec
mov
mov
fbstp
call
mov
int3
xchg
loopne
xadd
fs
out
decb
scas
hlt
popf
pop
hlt
iret
xchg
shrb
out
pop
dec
and
xor
inc
cli
sbb
iret
out
insl
jmp
mov
aas
add
rcrl
jno
fstpt
jae
lahf
cld
cli
testl
adc
ffreep
out
sbb
jecxz
jmp
jg
adc
and
mov
jo
xchg
loope
push
xchg
and
cli
arpl
sub
cmp
ss
push
lods
lea
cmp
sub
dec
ret
push
fldl
scas
and
fildl
les
dec
arpl
insl
push
pop
pop
lahf
dec
test
inc
fiadds
xchg
fiaddl
xor
aas
inc
mov
add
inc
rorl
pop
ret
clc
test
adc
subl
sbb
popf
jle
jl
push
inc
frstor
mov
test
pop
imul
pop
adc
add
lahf
fs
jno
add
das
cmp
and
sub
out
cmp
call
mov
cld
js
jl
ljmp
jns
lret
sbb
test
into
lock
ds
cwtl
xchg
in
pop
jne
xchg
repz
or
inc
cmpsl
pushf
int
nop
xor
aaa
test
add
test
cwtl
push
or
not
add
push
jmp
or
imul
sub
jne
xchg
aad
repz
rclb
mov
jae
test
xlat
test
mov
inc
sahf
sbb
xchg
sarl
cwtl
dec
ret
addb
ds
aas
cmp
mov
rcll
dec
mov
lret
and
scas
push
pop
mov
mov
mov
xchg
push
divl
mov
test
lret
es
add
sbb
adc
gs
roll
mov
cmp
hlt
scas
mov
popw
arpl
int3
pop
inc
fmull
mov
fsts
xor
pop
loope
cld
les
out
inc
popf
ds
lea
cmpsl
jle
imulb
cwtl
xchg
push
adc
mov
xchg
shlb
jl
or
push
mov
jnp
pop
mov
pop
or
shlb
xchg
xor
test
out
push
ss
ficoml
or
popf
jne
ficomps
lret
sbb
les
les
stos
fmuls
frstor
and
in
popa
lods
loopne
and
sub
stos
rclb
push
jmp
inc
jp
ret
mov
sub
pop
mov
dec
fistpll
test
pop
scas
sti
mov
push
pop
pop
inc
adc
sbb
jbe
dec
inc
jns
out
roll
cmpsl
fildl
xchg
jae
pop
lahf
xlat
insl
dec
insb
cmpsl
aas
xchg
in
fwait
pop
cmp
or
sbb
mov
popa
fildll
lahf
xor
je
jo
je
in
cltd
cmp
mov
rcrl
mov
daa
into
push
jo
push
sub
pop
scas
movsb
jge
rorl
or
pop
jns
jle
testl
outsl
lahf
sbb
repnz
pusha
out
or
jmp
call
mov
pop
cmp
bnd
jle
cs
xchg
fistl
div
jle
arpl
cmpl
pop
mov
jae
add
in
addr16
dec
pop
mov
mov
scas
sub
std
xchg
addr16
addl
test
inc
pusha
movsl
pop
out
push
test
cmovg
and
and
inc
pop
lahf
jno
mov
lea
lret
movsl
dec
push
enter
sbb
pop
xor
add
bound
pop
shrl
sub
int
std
fcompl
inc
or
shll
fs
push
or
out
xlat
mov
mov
lahf
cltd
sub
cltd
leave
jnp
in
add
lock
pop
jecxz
cmp
pop
mov
mov
call
cli
xor
or
nop
ljmp
imul
test
pop
xor
int
or
add
add
sbb
adc
dec
shll
jle
das
push
inc
jecxz
and
ds
pop
loope
std
loopne
adc
mov
dec
mov
bound
inc
mov
sbb
sub
dec
addr16
test
pusha
xchg
ja
mov
test
into
add
aad
test
inc
fs
xor
adc
jmp
or
fsubrl
mov
push
nop
jge
lcall
in
pop
imul
push
and
popf
mov
pop
shlb
pop
pop
std
xor
add
fs
in
adc
lahf
shlb
aad
mov
pop
lcall
gs
repnz
inc
push
mov
xchg
xchg
out
lea
xchg
or
inc
cmc
sbb
pop
stos
fadds
pop
jp
sub
dec
push
vpcmpgtw
push
int
sub
inc
out
and
mov
inc
inc
stos
mov
out
mov
stc
das
call
clc
pop
iret
icebp
dec
adc
addr16
in
adc
filds
pop
cltd
dec
ss
xchg
xchg
lcall
push
cwtl
lahf
iret
stos
xor
repz
inc
fcompl
and
nop
jb
sbb
fisubs
aaa
rcrb
sub
inc
lahf
stos
xor
rolb
addr16
leave
jl
add
jb
int
mov
gs
push
push
xchg
add
mov
mov
loopne
fistl
adc
flds
outsb
mov
mov
or
adc
aam
mov
stos
arpl
stos
test
adcl
jge
lock
xchg
sbb
dec
dec
sbb
mov
cmpsl
inc
adc
dec
lahf
pop
pop
cmp
sbb
popa
jge
cmp
out
jp
jbe
dec
adc
out
insl
js
push
sub
movsl
or
or
pop
stos
shlb
cli
popl
and
mov
scas
imul
movsb
aad
cld
or
gs
fdivs
add
and
sbb
mov
pmullw
notl
mov
jecxz
pop
test
stos
mov
sub
lahf
movsl
adc
adc
mov
adc
fbstp
loope
sbb
push
or
fistps
inc
push
rcrb
loop
mov
inc
pushf
popf
sub
cmp
lahf
shll
jno
push
and
jnp
pushf
daa
add
fmuls
cmp
sbb
xor
xor
sub
sub
add
repz
or
les
iret
dec
mov
fdivr
leave
and
fcompl
sti
mov
sarl
imul
xchg
and
jb
mov
addr16
inc
roll
dec
sub
sub
pop
jl
pushf
rorb
movsb
iret
mov
adcb
push
cmpsl
sub
sub
sbbb
jbe
inc
sbbb
test
xor
fsts
xchg
cld
mov
sbb
sbb
dec
xchg
lds
scas
popa
sub
jle
mov
insl
or
inc
ljmp
clc
int
push
push
push
out
xchg
jo
mov
imul
or
jp
cmp
or
mov
xchg
loopne
inc
dec
je
mov
cli
or
je
lods
pop
or
and
orl
push
ss
jp
pushf
in
jecxz
mov
xchg
mov
xor
jo
xorl
in
bound
cmp
jns
mov
dec
test
push
pop
and
inc
cmp
jnp
test
std
xor
insl
push
stc
sbb
inc
push
pop
cmp
scas
pop
pusha
jo,pn
jmp
stc
sbb
lahf
imul
inc
int3
popa
push
fidivl
sub
push
ret
pop
xor
cltd
ret
insl
sub
adc
shlb
popf
push
outsb
jnp
dec
arpl
adc
jmp
orl
das
popf
sahf
xor
jo
push
ret
cmp
pop
into
dec
mov
add
xor
sbb
fldpi
dec
mov
out
icebp
out
ja
and
add
insl
or
add
cmpsl
xchg
or
mov
xchg
push
scas
inc
pop
pop
pop
cmp
out
sbb
ror
add
cmp
or
lahf
cmp
or
xchg
mov
test
or
mov
mov
sarb
xor
and
adc
ds
dec
mov
pop
cmp
pop
fnstcw
inc
cld
pop
popf
cmp
inc
or
jns
sarb
add
jbe
xchg
cmp
push
add
mov
dec
sub
cmpb
movb
mov
int3
call
xlat
mov
cli
sub
mov
inc
lahf
mov
insl
mov
push
add
or
mov
inc
cmp
dec
daa
loop
mov
ficoms
aam
jl
or
test
sub
stc
mov
push
pop
movsl
int3
jge
sbb
xchg
sbb
cmp
pop
lods
jne
inc
pusha
or
push
dec
es
mov
jb
xor
pop
mov
gs
push
fadd
out
aam
fidivrl
in
loope
movsb
outsb
fnsave
scas
aam
sbb
bound
test
xchg
daa
rorl
jmp
orb
cmp
shr
pop
jl
nop
or
outsb
scas
sbbb
lret
test
inc
call
loop
adc
cmpb
or
mov
push
loop
push
repz
mov
sub
add
pop
or
or
sbb
cmp
cli
push
adc
xchg
xor
shrb
cwtl
inc
jg
dec
addb
ret
jle
sbb
mov
sarb
orl
cmc
gs
pop
mov
imul
ret
push
push
sub
push
pop
or
inc
xchg
lock
int3
loopne
push
fistpl
fwait
in
sbb
loopne
mov
popf
jge
rcl
cmpsb
lret
mov
inc
add
mov
call
jbe
add
dec
push
lahf
and
add
shlb
test
rorb
loopne
mov
sub
push
inc
cli
shrb
mov
jbe
cli
ja
xor
add
lahf
stc
sarb
fucomip
mov
mov
inc
add
bound
andl
mov
mov
out
inc
cmp
pusha
sub
dec
mov
dec
sub
movsl
push
cmp
and
push
test
pop
shrl
adc
sub
test
imul
popf
adc
jns
sbb
rol
popf
xchg
dec
into
or
and
mov
xlat
push
aam
pushfw
aaa
ja
pop
mov
mov
cmp
into
or
or
imul
xchg
insl
lea
pushf
cmc
dec
sbb
add
dec
pop
dec
pop
cli
adc
mov
push
cmp
into
idivl
stos
cs
int
add
pop
insb
outsb
out
jle
push
mov
cli
test
pop
cmpsb
loopne,pt
dec
lcall
movsl
sarl
stc
cmp
mov
mov
les
xchg
adc
nop
jl
sbb
sub
sub
stc
or
sbb
xor
out
stos
mov
xor
jle
xorb
adc
cmp
cmp
sub
pop
xchg
cmp
xchg
push
dec
and
iret
sub
gs
adc
jne
mov
fdivrp
mov
adcl
xchg
cmp
filds
aaa
push
adc
sahf
aam
ror
loop
inc
rcll
out
pop
outsb
repz
xchg
dec
fisubl
popa
dec
out
push
cmp
inc
sub
xor
pop
sub
pop
sbb
inc
dec
adc
aaa
mov
pop
js
push
xchg
push
dec
pop
sbb
gs
repnz
jo
xor
mov
add
mov
mov
daa
dec
icebp
stos
cltd
xchg
dec
cmpsb
mov
mov
mov
shll
dec
cmc
and
lods
or
lcall
sub
push
xchg
cli
out
push
dec
out
ds
pusha
mov
and
fsts
and
mov
inc
in
stos
scas
movsb
cmpsl
nop
out
cmpsb
aas
sub
vaeskeygenassist
xorb
add
or
call
mov
dec
jl
sub
stos
das
les
and
cmp
cltd
push
pusha
out
and
repz
and
or
xor
cmpb
sbb
jg
dec
mov
inc
aad
pop
push
cwtl
imul
lret
adc
adc
div
and
dec
test
and
test
mov
mov
or
lds
std
fdivl
iret
cld
jne
jno
movsb
rorl
add
mov
repnz
pop
cmp
jns
mov
sbb
sbb
or
inc
and
sbb
fsubs
sbb
xor
hlt
adc
sub
pop
mov
inc
xorb
or
sub
sbb
notl
setbe
popa
jg
lret
stos
inc
es
std
pusha
cmp
jle
lahf
sahf
stos
push
mov
cmp
hlt
mov
jne
shrb
jne
mov
sbb
jge
insl
lahf
test
jl
ds
mov
cmpsl
xchg
shr
sub
aam
out
addr16
or
scas
ffree
jg
in
aam
in
or
adc
mov
enter
sub
xchg
sub
mov
cmp
ret
or
inc
and
cmpsl
fldenv
cmpsl
push
sahf
adc
lea
xchg
pop
test
adc
rorl
xchg
pop
int
dec
aad
mov
cmp
xor
pop
jae
outsb
cmp
dec
ds
clc
cmp
xchg
jb
aam
and
rcrb
test
sub
push
jecxz
sub
daa
adc
sti
push
call
pop
ficomps
xchg
dec
pop
lret
push
mov
ja
das
iret
cld
jns
testl
sub
movsb
sbb
dec
iret
xchg
mov
jl
xor
cmp
cld
dec
sub
jmp
bound
clc
popf
std
mov
or
jbe
fldl
or
js
insl
dec
fsts
cs
sub
shrl
push
push
jge
jne
push
cwtl
dec
and
iret
flds
xchg
xor
add
adc
fdivrs
rorl
cli
dec
pop
jns
dec
mov
fadds
and
ss
xchg
fmuls
fisttpll
dec
roll
push
repnz
mov
adc
jg
xchg
mov
xchg
or
in
sbb
xlat
arpl
and
sub
add
and
or
out
inc
call
jmp
jg
imul
xor
jg
or
sbb
xchg
dec
mov
inc
or
sbb
cmp
sbb
inc
and
bound
sub
dec
pop
pop
sub
sbb
xor
in
lods
popf
or
loopne
or
cmp
sub
add
rorl
repnz
int
stos
mov
mov
pop
ljmp
jns
cmpsl
movsb
shlb
xlat
call
scas
aad
je
sahf
mov
subb
rcrb
repnz
fwait
mov
pop
je
jmp
and
adc
adc
or
fdivs
pop
mov
add
ror
mov
nop
shrl
lock
hlt
dec
mov
or
decl
nop
outsl
repz
fwait
sbbb
test
mov
sub
mov
in
call
shrl
push
jno
xchg
dec
mov
and
cmp
sub
mov
imul
mov
imulb
adcb
fsubrl
inc
adc
pushf
loopne
cwtl
shrl
std
je
jmp
mov
push
pop
in
daa
jecxz
cli
popa
orb
rcll
call
bound
mov
cld
jl
imul
test
inc
loope
pop
inc
fistps
xor
adc
fistl
lea
les
or
out
fisttpl
stos
cld
rorl
imul
or
mov
jnp
sbb
inc
inc
and
push
or
pop
scas
subl
jo
adc
pop
or
add
inc
js
mov
fldenv
inc
es
mov
adc
lahf
jns
adc
cmp
mov
inc
mov
cmp
jne
test
mov
stos
pop
pop
out
scas
sbb
lret
cmp
push
pop
and
fnstsw
push
adc
adc
idivl
jbe
iret
sti
mov
outsl
cld
sub
pop
mov
or
les
sub
cld
inc
cmp
and
sarb
lahf
ds
shrb
fidivrs
mov
mov
js
mov
fxch
je
fwait
daa
cmp
mov
js
lahf
xchg
xchg
adc
outsl
push
ds
mov
fbstp
int
inc
cli
inc
mov
lods
push
push
pop
mov
in
mov
jl
mov
dec
cmp
and
repz
pusha
sub
cmpb
mov
ror
jb
mov
mov
int
jge
push
lahf
add
lock
je
imul
scas
dec
testl
dec
and
mul
shrl
dec
orb
fs
adc
pop
adc
lock
out
and
orb
jae
in
jb
mov
rorl
sbb
into
inc
pop
mov
dec
inc
jmp
sub
or
arpl
and
inc
outsb
mov
out
pop
push
jmp
ja
and
loop,pn
and
inc
fldl
cmp
sbb
mull
hlt
push
test
sbb
jg
sub
out
int3
je
scas
ret
sub
mov
sbb
leave
int3
es
jecxz
fwait
or
mov
xchg
xchg
ds
and
jg
leave
sub
xchg
inc
imul
adc
addr16
dec
in
sbb
lahf
insb
inc
mov
or
imul
popf
or
mov
xorl
out
push
add
clc
shl
cmp
stos
mov
into
pusha
and
popa
divl
stos
mov
addr16
ficoml
mov
cmp
and
or
std
call
inc
aaa
repz
inc
cwtl
and
mov
or
cli
jecxz
hlt
movsb
sbb
inc
mov
cli
jg
push
fsts
or
js
add
iret
pop
lods
icebp
fsubrl
dec
lock
push
jo
mov
into
jo
mulb
and
lahf
int3
hlt
xor
mov
outsl
mov
xor
ljmp
xchg
stos
and
adc
pop
and
ljmp
add
test
addb
dec
jl
out
and
adcb
mov
lock
test
xor
add
lods
mov
lods
in
adc
cmp
mov
jbe
ds
cld
push
sbb
iret
mov
push
xchg
sbb
pop
push
sbb
out
dec
dec
inc
dec
lock
test
and
outsl
jl
iret
insb
or
and
testb
and
jle
fidivs
sbb
addb
inc
cli
and
into
xor
jno
stos
cmpsb
dec
inc
sub
xchg
xor
sbb
or
xchg
cmc
sbb
adc
jae
or
xor
xor
add
or
jae
test
outsl
pop
bsf
add
adc
int
and
add
cmp
jge
aas
add
jns
pop
xchg
notb
sub
lahf
insb
fistpll
push
test
mov
roll
mov
aas
fldt
push
mov
jmp
inc
fdivrp
add
in
xchg
out
stos
mov
or
inc
jb
push
mov
arpl
loop
cmp
mov
xchg
sbb
xor
idivb
test
mov
cmp
mov
nop
les
inc
addb
sbb
add
outsl
lea
pop
inc
lds
rclb
and
mov
je
and
out
pop
pop
popa
adc
sub
and
leave
sti
dec
mov
xchg
in
pop
mov
pushf
jl
mov
dec
push
fs
dec
inc
cmc
add
mov
lea
mov
fists
mov
adc
push
or
mov
xchg
push
jne
or
cmp
rcrb
push
mov
sub
stos
out
fcom
decb
lds
pop
adcb
inc
rcll
and
adc
stos
ret
or
pop
out
xchg
mov
orl
lods
out
mov
stos
xlat
enter
aad
pop
xchg
and
fldcw
adc
sub
mov
ds
fdivrs
pop
xchg
inc
sub
adc
jnp
xchg
mov
cmp
insl
xchg
jno
adc
lods
mov
je
es
sub
ret
movsl
xor
nop
cmp
sub
shl
mov
pop
mov
add
push
icebp
cmp
sub
mov
and
ds
loopne
lret
inc
stos
xchg
sub
icebp
inc
xor
popa
push
nop
jae
pop
stc
and
pop
xchg
scas
and
xlat
pop
daa
jg
fbstp
mov
pushf
sub
sub
xor
mov
lcall
das
jg
mov
dec
daa
cmc
inc
fisttpl
clc
pop
out
cmp
std
xor
scas
lahf
push
js
cmp
sub
iret
cmp
adc
test
sub
or
adc
cld
sbb
jno
xchg
movsl
fwait
add
xlat
pop
add
das
mull
js
popa
dec
shr
adc
add
jbe
push
adc
fdivr
jns
in
std
adc
add
sbb
out
pop
enter
inc
sub
pop
mov
test
mov
insb
jg
dec
adc
add
mov
add
inc
shrb
hlt
push
add
test
pop
popa
sbb
pop
cmp
cli
shlb
dec
icebp
pop
pop
xlat
sbb
dec
filds
sub
ficomps
cmp
pop
std
sbb
call
xchg
mov
push
mov
inc
mov
lahf
inc
scas
push
popl
mov
cmp
test
into
inc
dec
jl
out
aas
ds
imul
pop
sahf
dec
ss
push
cmp
push
lahf
inc
sub
pop
fists
xor
push
popf
fs
scas
fs
cwtl
mov
subb
push
push
sbb
mov
bound
outsb
int
cmp
out
adc
xor
add
push
lods
rorb
clc
sub
adc
cmp
push
int3
ds
pop
sub
fidivs
cmp
js
and
mov
idiv
nop
arpl
push
jns
icebp
hlt
mov
iret
sbb
pop
mov
fisubl
punpcklwd
and
imul
xchg
cmp
sub
imul
xchg
shll
sub
int
cmp
mov
and
mov
pop
int
dec
inc
out
xor
movntq
and
loop
sub
mov
inc
loopne
in
testb
rorb
mov
pop
and
mov
and
push
int
inc
nop
xor
jae
pusha
es
jae
pop
int3
gs
pop
mov
mov
xor
mov
xor
popf
dec
movsb
loopne
movsb
int
in
push
fildl
test
mov
lahf
adc
add
sbb
cli
sbb
dec
outsb
add
cmp
push
stc
mov
sub
sub
sub
sbb
pop
add
xor
call
test
sbb
push
pop
jns
fiaddl
nop
mov
or
testl
das
ret
les
insb
mov
int3
inc
cwtl
sar
mov
mov
test
mov
sti
cs
iret
mov
adc
jmp
push
mov
add
inc
mov
jl
cmp
and
frndint
jl
repnz
popa
lcall
nop
adc
call
pop
jne
push
jne,pt
aam
movsb
or
fs
sub
or
lds
sti
sub
cmp
out
shl
loopne
and
and
imul
push
lahf
mov
cmp
scas
jmp
scas
outsb
lock
pop
fs
cmp
inc
sub
or
sahf
add
cwtl
sbb
and
ret
out
out
loop
and
and
movsl
lock
test
dec
mov
pop
icebp
pop
fsubrl
push
push
out
pop
loop
sbb
sub
sub
data16
imul
dec
xor
js
dec
cmp
jno
cmp
push
jcxz
push
scas
xchg
les
cmpsl
sub
xchg
add
adc
movb
adc
pop
mov
lea
or
jl
fdivrl
das
pop
pop
adc
add
and
into
and
pop
fxch
dec
or
jmp
mov
inc
mov
and
imul
loopne
popf
syscall
jmp
shr
inc
push
shl
or
fcompl
sarl
add
jl
out
mov
sub
jns
inc
pop
lahf
dec
gs
stos
fadds
cmpsb
repz
cmpl
stc
jecxz
jge
xor
scas
sar
jecxz
sbb
inc
loopne
pop
sbbb
xlat
mov
mov
inc
mov
and
jg
or
std
or
xchg
fldenv
xlat
inc
xor
pop
jne
mov
lahf
mov
mov
inc
test
lret
adc
sbb
sub
cmpsl
sbb
dec
out
dec
test
inc
push
pop
xlat
xor
fistps
jle
nop
movsl
sbb
push
sub
or
lret
stos
or
sbb
lahf
sub
orl
pop
ja
xor
push
sbb
dec
ret
mov
cmc
pusha
mov
mov
mov
aam
cmp
shl
js
sub
hlt
and
jo
mov
pop
mov
test
xchg
jb
cmc
inc
iret
add
inc
das
sub
sub
and
or
cs
imul
xor
or
push
xchg
cmpsl
sub
dec
xchg
xchg
inc
dec
adc
test
sahf
aad
cmp
sti
cs
pop
imul
movsb
shll
mov
add
imul
pop
adc
int
mov
or
sar
push
bound
or
int3
lds
cmp
int
lea
sub
stos
mov
gs
dec
jnp
dec
mov
das
cwtl
stos
xlat
pusha
mov
int
pusha
sub
test
cmp
fstp
leave
test
popl
repnz
aas
push
sub
divl
roll
test
in
pop
les
or
pop
jno
push
or
pop
inc
mov
pop
mov
test
jo
sahf
loope
add
add
jae
popa
jne
add
jno
hlt
jne
push
jl
mov
loopne
dec
inc
lock
cmp
nop
pop
gs
inc
push
push
mov
dec
pushf
in
xor
cmp
fwait
jb
push
pushf
cld
ss
movsl
or
and
cmp
fldenv
lock
jbe
fiadds
fnstsw
lock
adc
lds
aad
out
enter
push
mov
push
cmpb
outsb
xor
lahf
mov
and
mov
adc
iret
iret
fstl
daa
jbe
popa
jne
test
imul
popf
cs
pushf
arpl
ja
sbb
cmp
cli
xor
mov
pop
xchg
and
mov
dec
orb
jne
fwait
pushf
sahf
cmp
mov
push
test
pop
loop
lds
mov
roll
out
cltd
int
push
gs
enter
loopne
pop
int
fildll
push
lahf
aad
sbb
sti
sti
push
pop
push
call
sub
sbb
mov
xchg
sub
or
lret
movsl
movb
cmp
int
or
lret
or
sbb
dec
or
lods
popa
pop
inc
sti
push
mov
xor
push
and
xorb
popl
loope
and
pop
cwtl
add
and
dec
shrl
addr16
lahf
adc
dec
and
fidivl
ja
pushf
fdivrl
lds
mov
pushf
inc
mov
inc
xchg
push
das
dec
xor
xlat
loope
pop
lods
push
shrl
int3
add
or
sbbl
jbe
out
xor
and
push
and
pop
sub
insb
fdiv
aad
mov
test
or
loope
inc
xor
pop
or
adc
lcall
sbb
repz
sahf
adc
and
rol
and
movsl
dec
sbb
arpl
addb
stc
sbb
movsl
mov
nop
push
push
add
pop
cmp
xor
stos
jns
scas
sbb
sbb
inc
lods
adc
xchg
cmp
popfw
xchg
test
jns
das
jge
sub
adc
bnd
adc
inc
cli
adc
adc
cmp
mov
xor
xor
mov
mov
rorb
jge
and
mov
fwait
cmp
jmp
aam
sub
push
lahf
adc
cmp
pusha
out
mov
cmp
nop
dec
sbb
fdivl
imul
mov
and
fs
pusha
insb
xor
jmp
dec
inc
cmc
movsl
sub
rcll
scas
sub
jb
cwtl
mov
inc
fsubrp
lea
call
cmpsl
or
mov
iret
pop
or
lods
and
aad
test
xorl
mov
xor
inc
je
nop
addb
mov
cmp
pop
loop
arpl
inc
jg
sub
push
cmp
nop
jno
pop
cmpsl
sarl
push
call
ljmp
in
jecxz
cld
mov
hlt
xchg
cmp
push
int
pop
xor
and
ret
lret
pop
dec
add
sahf
mov
or
sub
pushf
fldenv
cmp
test
inc
jnp
or
je
pushf
add
add
out
js
mov
or
or
adc
dec
adc
mov
or
mov
iret
dec
mov
jg
dec
inc
mov
dec
int3
popf
mov
xchg
sbb
insb
inc
add
and
in
out
stos
lret
jae
xchg
lahf
test
hlt
arpl
xor
dec
pop
clc
adc
pop
cmp
push
adc
adc
ret
adc
xor
pop
cwtl
lods
xchg
inc
and
cmp
add
mov
js
sub
sub
add
in
jns
or
dec
popf
fdivrl
or
fwait
insl
lods
fmull
int
sub
rcrl
mov
xchg
cmp
push
insl
popfw
mov
dec
call
add
enter
xor
les
mov
and
outsb
or
inc
or
movsl
mov
inc
dec
lret
stos
loope
and
loope
dec
sbb
mov
fcmovnbe
jno
pop
cmc
push
pop
cmp
jl
imul
call
adc
pop
add
pushf
mov
or
push
jmp
jmp
shl
aaa
jg
sub
and
imul
xor
xchg
jne
and
lcall
or
and
movsb
pop
push
mov
mov
stos
sarb
pop
rol
or
push
call
arpl
jno
pop
jne
loop
cmp
or
jl
pop
dec
jne
stos
sbbl
push
pushl
adc
push
faddl
pop
sub
pop
inc
or
sbb
pop
push
adc
pop
in
aad
pop
sbbb
loopne
sbb
shrl
nop
cmc
dec
ja
adc
in
xor
sbb
mov
loopne
inc
jg
cmc
loope
push
outsb
push
pop
xor
scas
into
fsubl
xor
dec
and
les
or
jecxz
cmp
pop
ds
mov
cmp
mov
sub
lcall
fcmovnu
jge
cmp
add
popa
in
rcrl
pushf
adc
mov
scas
xor
imul
xchg
pop
inc
scas
movsl
cmp
imul
repnz
mov
xchg
shlb
jbe
js
jg
and
decb
push
mov
sub
into
add
jecxz
and
jp
add
mov
mov
adc
fiadds
gs
mov
roll
or
inc
dec
sub
jmp
repnz
sub
adc
lahf
mov
mov
jmp
stos
fistpl
push
pushf
dec
cmp
jno
std
lock
lods
nop
ljmp
movsl
and
sub
sbb
outsl
sbb
and
addr16
mov
push
frstor
xor
mov
adc
sbb
test
mov
jae
mov
cmp
dec
push
mov
test
sub
adc
rcr
dec
push
test
into
jg
je
shll
lock
adcl
test
xor
push
bound
or
clc
dec
popf
inc
inc
insl
iret
and
daa
and
int
or
jle
out
mov
inc
into
and
push
jne
and
ljmp
jle
inc
test
iret
call
jbe
sarb
rcll
aad
shrl
jne
xchg
mov
aam
sub
int
iret
nop
fildl
js
and
jge
cld
imul
push
jl
lods
jne
add
and
filds
jecxz
nop
add
fnstenv
or
or
out
pusha
pop
sbb
stos
push
push
in
ret
jbe
or
dec
int
jb
fsubl
daa
push
lea
xchg
or
and
xchg
inc
arpl
jnp
insl
jb
dec
imul
arpl
pop
pop
imulb
inc
cmpsl
lret
xchg
jle
fists
pop
pop
repnz
fs
mov
xchg
jne
mov
xchg
mov
jno
mov
es
push
rolb
lods
cmp
xor
cmp
outsl
pop
sbb
nopl
sub
pop
ds
lahf
sub
daa
std
dec
add
mov
leave
rcll
das
sbb
jmp
mov
out
dec
mov
mov
popa
xchg
cmc
lcall
les
sub
xlat
sbbl
mov
lock
or
test
push
scas
lea
mov
push
inc
insb
mov
jne
mov
dec
test
inc
rcrb
in
aad
push
in
shll
add
test
push
push
or
fldl
ljmp
lahf
ucomiss
inc
cmp
cli
add
cli
cwtl
lret
or
inc
cltd
dec
ss
cmp
cmpsb
enter
cld
mov
imul
add
push
das
scas
lahf
dec
or
lods
cmp
sub
test
in
popa
add
icebp
jae
sub
push
negl
movsb
add
ja
fwait
mov
movsl
and
rcrb
cmp
or
les
sarl
push
mov
loopne
repz
pavgw
mov
int
add
inc
pop
sub
xor
dec
fucomi
lds
iret
pop
add
icebp
je
cmp
daa
pushf
sub
add
xor
add
dec
pop
pusha
and
shlb
and
jmp
pushf
dec
mov
pop
test
fdivl
push
shll
dec
outsb
pop
dec
dec
insl
js
negb
dec
lea
int3
roll
mov
cmpxchg
les
pop
and
ror
xchg
icebp
push
gs
ljmp
ds
mov
pop
and
ljmp
mov
mov
jae
in
jae
aaa
into
pusha
cwtl
mov
stos
push
call
add
cmp
pop
icebp
fucomp
jp
jnp
popa
inc
sbb
xorl
dec
add
sahf
push
mov
jp
xchg
cmp
or
adc
push
pushf
fsts
lahf
pushf
cwtl
mov
out
cltd
add
shll
cs
push
mov
cli
in
dec
and
std
out
test
pop
adc
sbb
orl
or
repz
push
lods
cwtl
movsb
push
js
add
idivb
repnz
xchg
fidivrs
cli
mov
negb
mov
sbbb
xor
and
cmpsl
add
int
aas
inc
rorl
js
mov
mov
scas
incl
and
add
sahf
dec
stos
xchg
mov
mov
and
add
out
out
inc
mov
xor
pop
lret
dec
pop
jmp
jo
shlb
out
xchg
iret
call
xor
lock
lahf
mov
inc
addr16
jnp
push
ret
scas
cmpsl
mov
mov
int
test
or
clc
stos
call
push
les
push
add
jno
stc
sbbl
sbb
gs
lret
imul
fimuls
ljmp
adc
and
mov
and
mov
in
add
cmpl
ret
pusha
xlat
or
imul
lahf
lods
xchg
mov
int
ds
sbb
push
sub
and
fnstsw
int
sbb
xor
daa
and
or
sub
repz
adc
inc
dec
mov
cmp
push
out
adc
and
rorl
lea
push
jbe
mov
jae
test
test
cli
push
mull
imul
loopne
jl
testb
lds
mov
outsb
xlat
pop
push
dec
or
test
mov
inc
rcll
mov
xor
sbb
outsl
stos
add
and
dec
cli
sarb
jl
push
pop
mov
sub
sub
sub
sub
addr16
inc
or
jnp
push
hlt
adc
cmp
adc
ret
ds
loop
cld
mov
mov
pop
int
scas
xchg
hlt
dec
out
inc
int
pop
xchg
loopne
inc
lea
cmp
adc
in
inc
sti
xor
add
jo
cmp
jle
mov
inc
pop
shlb
or
ljmp
in
leave
or
aaa
jecxz
scas
in
dec
adc
ret
or
sti
add
lahf
inc
pusha
push
stc
and
lahf
sub
xor
mov
lcall
inc
ja
sbbl
mov
xchg
sub
cmp
in
in
mov
ljmp
ss
jns
push
inc
jo
mov
xor
jge
pop
push
pop
dec
data16
pushf
mov
popa
rolb
jne
in
std
in
emms
sub
addr16
sbbb
loope
pop
jo
icebp
ds
cmp
test
adc
pushl
popa
xor
bswap
popa
inc
adc
mov
inc
outsb
inc
pushf
or
addr16
nop
cmpb
in
and
cmp
sub
dec
xchg
jg
mov
add
mov
stos
cmpl
imull
daa
push
push
mov
xchg
mov
sub
jecxz
sti
ds
mov
out
sbb
adc
inc
add
and
dec
outsl
in
ret
inc
adc
int3
mov
sarb
cmp
push
movsl
xchg
jno
push
test
pusha
xchg
jbe
mov
adc
sub
mov
add
stos
xchg
add
cld
test
inc
inc
jne
in
jecxz
cs
les
or
push
xor
scas
add
ljmp
or
pushf
and
pop
inc
jbe
es
aaa
or
ja
into
bound
hlt
push
leave
testl
hlt
lea
imul
pusha
enter
orl
test
sub
mov
pop
iret
jne
repz
mov
mov
sbb
stos
es
pop
lods
push
add
mov
sqrtps
mov
hlt
pop
fidivs
push
cmpsl
xor
fisubs
ljmp
fistpll
push
ja
arpl
mov
and
roll
sub
bound
outsl
pop
into
aas
mov
xchg
insb
jg
cmc
push
cmc
fs
hlt
subl
mov
push
sbb
xchg
cmp
daa
dec
pop
int
mov
vmread
sti
xchg
insl
movl
inc
inc
lods
lea
mov
daa
sub
jmp
or
pop
hlt
shll
sarl
pop
cltd
cs
pop
jmp
add
cmpsl
jle
sbbl
dec
std
jl
testl
lea
nop
aas
push
ret
adc
repnz
xor
daa
mov
inc
out
loopne
mov
jnp
inc
call
lret
ror
test
push
and
pop
dec
and
into
add
pushf
pop
loopne
shll
mov
jg
sub
rcrb
or
les
std
xor
repz
call
or
adc
and
cwtl
gs
and
pop
inc
out
jnp
lahf
pop
add
fisttps
arpl
adc
ds
push
mov
xor
dec
lock
int3
cmp
dec
in
sbb
and
inc
imul
xor
lret
fistps
cmpsb
or
in
lods
mov
dec
test
push
outsl
inc
xor
jne
inc
or
js
in
xchg
pop
mov
mov
add
les
andb
inc
pushf
sbb
loopne
adc
push
jb
hlt
pop
int
or
add
bound
out
mov
outsl
inc
xchg
lds
shlb
sbbw
xorb
and
test
and
xchg
fsts
or
cs
es
jg
pushf
push
pushf
push
adc
push
cmovp
scas
icebp
cmp
and
imul
pushf
sub
xchg
test
stos
insl
mov
inc
add
cmp
and
add
cbtw
adc
sub
test
dec
dec
int3
in
int3
adc
pop
pushf
inc
mov
xor
xchg
pop
cli
lods
pushl
aas
js
and
lcall
in
insl
inc
movsb
shl
adc
das
pop
and
sub
xor
and
loopne
or
mov
rcll
fnstcw
stos
mov
and
cwtl
sbb
dec
or
icebp
and
dec
inc
pusha
mov
jbe
dec
stos
mov
inc
repz
notl
and
jnp
mulb
pop
rcl
pop
mov
add
pop
push
sub
inc
ss
stos
loope
hlt
cmpsl
sub
xor
push
xor
dec
mov
pushf
pop
les
xchg
cltd
ret
hlt
mov
and
jns
xchg
or
repz
push
dec
push
and
or
mov
sahf
aaa
push
loop
cmp
jne
xchg
sub
ds
icebp
or
jnp
hlt
cwtl
or
scas
jge
iret
and
sub
in
out
push
fldt
mov
sbb
decb
mov
mov
inc
stos
adc
add
out
inc
pop
adc
xlat
adc
add
sub
mov
sarb
push
cltd
push
mov
shl
icebp
dec
ds
insb
fists
into
add
inc
fisubrs
push
das
mov
fmul
stos
adc
inc
or
stos
xor
int3
and
mov
dec
andb
stos
jle
mov
pop
inc
xchg
fxrstor
icebp
movsl
out
adc
pop
pop
and
fcompl
flds
and
jno
xchg
into
sahf
adc
or
sub
fs
push
daa
filds
aas
js
mov
out
inc
dec
rolb
pusha
cs
out
add
aaa
cld
lds
push
sub
out
mov
stc
pop
divl
mov
inc
hlt
push
out
fiaddl
xor
mov
pop
movsl
pop
push
movsl
adc
popa
insl
ds
test
pop
movsl
js
xlat
jmp
inc
and
loopne
dec
xchg
mov
xor
fbld
outsl
clc
aas
fisttpl
push
iret
xchg
mov
mov
aas
das
jl
cmp
iret
dec
or
arpl
ds
outsl
mov
pop
mov
nop
jne
mull
bound
or
movb
adc
div
xor
lcall
mov
pop
pop
stc
scas
dec
sbbl
inc
jg
aas
inc
adc
pop
outsl
or
mov
pushl
inc
iret
outsl
sub
mov
mov
mov
mov
sarb
test
xchg
sub
nop
jge
out
xchg
pop
sbb
das
inc
int
lock
call
pop
jb
dec
shr
pop
stc
pop
and
xor
aaa
popf
jl
das
and
outsb
xchg
pop
inc
or
push
inc
das
aam
es
push
inc
sub
xor
clc
ret
ret
mov
cvtps2pd
sub
iret
push
mov
pop
push
inc
push
ljmp
mov
imul
movsl
push
or
dec
fisttps
and
cmp
aam
add
jns
mov
push
or
jnp
out
fbstp
cmp
mov
lods
rcll
xorl
mov
popa
cwtl
inc
cmp
dec
ds
cld
cmp
pop
or
and
mov
dec
jle
mov
mov
cmp
mov
add
loopne
int
imul
loopne
loopne
xchg
in
daa
das
iret
fisttpl
nop
pusha
sbb
ret
mov
push
stos
xchg
adc
xchg
cmp
scas
add
mov
jmp
pop
mov
ss
insb
scas
adc
xchg
mov
loopne
mov
popf
sub
pop
adc
xchg
pop
addl
clc
enter
xor
adc
jns
ret
xor
mov
inc
dec
out
insl
loopne
or
lods
fildl
repnz
jmp
repz
xchg
mov
ds
sbb
ficoms
pop
inc
lods
loopne
or
push
mov
shrb
or
je
mov
xor
and
add
fsub
push
int
pop
cmp
push
dec
push
jecxz
xor
jne
xchg
xchg
sbb
mov
roll
punpckhbw
enter
negl
mov
add
adc
cmc
fdiv
sbb
icebp
lods
int
or
pop
test
mov
mov
scas
sub
lahf
mov
add
or
adc
or
dec
add
lea
mov
imul
dec
pop
and
repnz
lock
adc
in
add
fisubs
in
scas
jo
adc
sbb
nop
mov
das
sub
adc
pop
lods
or
mov
out
stos
test
sbb
dec
push
jno
inc
push
into
dec
out
adc
ljmp
in
xlat
packssdw
pop
std
xor
stos
dec
shrb
das
fisubs
nop
dec
gs
bnd
and
jbe
xchg
sarl
jecxz
xchg
xchg
hlt
dec
and
repz
add
sti
push
fnstenv
cmpb
pop
jno
out
aad
mov
arpl
and
stos
fdivrs
inc
and
sub
xchg
sub
fistps
pusha
dec
push
cmp
test
rcr
leave
pop
pushf
imul
arpl
jo
scas
jns
push
es
inc
pop
sub
and
inc
aad
movsb
cmpsb
mov
sbb
repz
cmp
fdivl
clc
sahf
enter
jns
or
loope
or
ds
add
pop
pop
in
pop
adc
and
mov
pop
clc
popf
xor
stc
sub
jns
cltd
pushf
inc
dec
ret
mov
fbstp
enter
inc
xchg
rclb
sahf
cmp
pop
ret
push
cwtl
stos
add
xchg
lret
cmpsl
inc
mov
sbb
or
mov
mov
mov
adc
pop
xchg
sub
jnp
test
dec
sub
dec
jl
sub
enter
cmpsb
adc
fcmovbe
push
pop
lahf
mov
stos
push
fistps
iret
in
xor
es
hlt
rcl
pop
mov
fistpll
mov
pop
pop
pop
push
inc
popf
sub
in
inc
lret
addl
aad
xchg
pop
movsb
inc
xchg
out
out
sub
fcomps
rcr
sub
in
adc
nop
jg
push
xlat
cld
lds
inc
loop
jnp
jg
and
cmp
jecxz
clc
mov
into
sarb
cmp
mov
es
loope
xchg
cmp
push
leave
rcrl
iret
or
xchg
testl
shlb
sub
mov
arpl
and
nop
dec
mov
or
jne
cmp
ret
dec
bound
push
outsl
add
xchg
enter
fdivr
fidivl
gs
int3
lods
test
lock
cmp
test
mov
adc
dec
xchg
loopne
or
mov
sub
dec
mov
popf
jnp
lcall
xlat
ret
xor
lea
pushf
sub
scas
cltd
mov
leave
in
ja
xor
adc
xchg
lods
sbb
or
push
std
clc
std
ret
fcmovne
adc
aas
mov
jle
es
xchg
ds
jo
adc
in
jbe
cmc
fnsave
int
call
arpl
xchg
scas
call
or
pop
dec
sub
push
movaps
imul
adc
fisubl
cmpsl
cmp
ror
mull
lds
jae
ds
nop
cld
mov
jmp
pop
popa
sbb
mov
dec
sub
dec
xor
outsb
push
push
out
add
loopne
cmc
ds
pop
int
pop
int
xchg
add
lahf
jp
adc
fs
imul
mov
fadds
addr16
cmpsl
add
call
test
or
popa
repnz
cmp
mov
enter
dec
call
mov
mov
xor
sub
cmpsl
pop
xchg
ficoms
xor
sbb
sub
adc
fisttps
outsb
inc
mov
clc
or
sub
ss
inc
adcb
iret
leave
push
popf
pop
push
cmp
imul
int
insl
xor
cmp
fsts
xlat
mov
sbb
jl
add
sti
scas
fnstcw
xor
inc
fistpl
inc
movsl
in
jns
leave
mov
call
adc
or
sbb
cmc
mov
xor
test
movsb
lret
sar
aad
sbb
mov
pop
lahf
mov
repnz
ljmp
clc
daa
call
cmpsb
jle
xor
pop
ja
cs
pop
int3
pushf
fstpt
and
mov
xor
jg
jne
inc
or
pop
scas
test
add
sub
push
enter
lea
int
jmp
cmpl
push
jmp
stc
rcrb
sbb
and
nop
mov
and
lcall
loopne
inc
mov
jmp
lret
or
loope
and
gs
dec
or
arpl
and
or
pusha
lods
lods
in
repz
lahf
orb
adc
stos
out
movl
inc
adc
cld
outsl
xchg
cmp
push
pop
inc
sub
pop
push
add
in
jmp
nop
lahf
nop
lods
pushf
push
or
fistpll
mov
test
xchg
jecxz
movsl
adc
push
cmp
dec
stc
nop
ficoms
fnstcw
push
jae
mov
xchg
roll
mov
xorl
outsl
nop
xchg
jnp
jb
add
imul
dec
cwtl
dec
push
add
ficoml
test
add
jae
rorl
movsl
sbb
ret
push
sub
lds
xor
pop
sbb
push
out
mov
xchg
sub
popf
push
mov
std
xor
cld
lcall
shrl
out
je
insl
mov
jbe
sbb
outsb
test
push
lods
in
pop
sub
mov
cmpb
lret
test
jge
aas
cmp
bsf
jae
sbb
add
shr
push
xchg
lock
cmp
pop
mov
sub
and
gs
mov
lret
dec
pop
mov
lahf
pop
mov
pusha
outsl
xchg
push
push
dec
inc
and
jg
mov
cmp
fidivl
out
cwtl
fisttpll
cmp
in
pop
rcrl
outsl
push
paddb
jne
sbb
jl
ret
mov
in
xor
std
push
add
inc
push
aas
ds
int3
xor
cmpsl
xchg
adc
mov
in
cltd
jp
mov
aaa
add
out
shl
mov
jg
sub
mov
icebp
std
cs
lock
jg
in
sbb
xor
mov
lahf
inc
adc
pop
rcrl
cmp
jo
inc
xor
add
xchg
dec
dec
cli
mov
or
aas
xchg
inc
mov
mov
pushf
add
pop
adc
hlt
xchg
sub
idiv
dec
stos
lahf
into
fimull
stos
scas
popf
fimull
stos
lahf
ja
push
int3
sbb
push
sbb
shl
xor
xor
int
and
lea
ret
jno
jp
cld
push
xor
jmp
jb
stos
mov
mov
jb
neg
ss
hlt
fiadds
popa
pop
adc
jl
int
repnz
inc
push
mov
ss
repz
test
pop
jp
inc
ror
push
cmc
dec
nop
and
ficoms
jnp
xor
jmp
add
adc
mov
xlat
adc
sbbb
rcrl
add
xchg
rcl
mov
xor
xchg
add
lahf
dec
mov
insb
add
sub
int3
jle
and
and
jmp
hlt
stos
inc
xchg
stos
mov
xlat
cmpsb
sbb
cmc
xchg
add
imul
xor
adc
pop
push
and
add
dec
mov
and
hlt
or
inc
xchg
dec
dec
mov
pop
mov
popf
push
and
xor
lret
or
and
cli
sbb
sub
shrb
orl
mov
sub
and
insb
dec
pusha
ds
jg
les
ds
aam
push
stc
out
or
in
jmp
movsl
mov
jge
lods
push
lods
fildll
out
fcompl
int3
int
inc
andl
nop
or
sbb
roll
push
jns
xor
lea
icebp
inc
into
jno
mov
cmc
dec
push
inc
mov
dec
sbb
xor
push
mov
pop
repz
out
jl
icebp
out
movsb
lods
sbb
out
stos
dec
ret
and
cmp
jnp
pop
jge
pop
imul
aam
sbb
movsb
and
in
cmp
xor
cmpsb
adc
out
mov
test
cmp
ljmp
scas
in
out
or
dec
lock
cmp
or
sub
push
out
in
mov
dec
mov
adc
rcrl
roll
loop
pop
sbb
rorb
add
xchg
mov
js
repnz
xor
mov
adc
mov
shr
xchg
jnp
andl
in
and
xchg
jp
incb
inc
jne
je
call
cmp
popf
ss
add
je
data16
push
pop
or
dec
dec
xchg
cmp
stc
je
jp
dec
and
imul
pop
or
scas
je
or
add
sbb
arpl
clc
and
xchg
adc
push
in
inc
call
jne
cli
dec
jb
pop
jne
inc
cmc
stos
mov
stc
adc
jno
push
fdivs
inc
aas
cwtl
sbb
mov
dec
sbbl
scas
nop
push
int3
shrb
cmp
movsb
add
lahf
jo
mov
movsb
dec
in
push
in
test
sbb
pop
add
std
jg
add
test
in
into
inc
arpl
insb
adc
dec
pusha
cli
mov
iret
je
sbb
mov
pop
adc
or
lahf
int
pop
popa
loope
mov
sub
mov
xor
int3
in
test
sbb
or
out
out
enter
lds
cli
sub
and
cmp
out
pop
jp
xchg
dec
inc
and
loopne
out
ja
jb
sbb
fcompl
mov
icebp
sbb
sahf
mov
aam
mov
sti
ljmp
int
out
and
xor
and
lahf
out
sbb
inc
cmp
jmp
insl
insb
jle
cmp
test
inc
push
add
cs
xor
cmc
or
fistpll
pushf
test
pusha
or
mov
mov
xor
add
lahf
mov
push
and
mov
cmp
sub
inc
adc
push
add
popf
or
enter
dec
xchg
mov
imul
orl
add
xchg
dec
cmp
fisttpl
std
stos
addb
mov
sarl
sub
xlat
jl
pop
jle
sbb
pop
loope
nop
or
inc
push
scas
popa
push
or
jg
loopne
cmp
test
xchg
and
xor
lahf
pushf
and
inc
inc
xor
ret
adc
sub
cltd
call
adc
dec
inc
inc
scas
sbb
and
cmp
fcmovu
xchg
lock
push
pop
jns
cmp
test
fisttps
mov
inc
adc
inc
add
loop
fs
ret
adc
sub
adc
or
or
pop
fs
and
cld
push
add
add
adc
sar
and
shl
repz
sbb
jge
fbstp
test
into
mov
lods
adc
add
mov
lcall
xor
cmp
xchg
adc
add
dec
sub
sbb
lea
fmuls
and
add
into
sub
ja
outsb
sbb
pusha
and
ret
rcrl
or
adc
add
sbb
cmp
scas
call
inc
shll
pushf
cld
add
and
mov
xor
lds
or
xchg
push
jl
and
jp
fbld
or
rcrb
mov
cltd
and
fisubrs
stos
inc
and
ds
xchg
mov
dec
sub
cwtl
and
jg
ret
jne
insb
push
xor
cmp
pop
es
iret
add
and
jl
cwtl
inc
mov
mov
gs
dec
and
jnp
test
cmp
and
xor
int3
adc
push
cmpsl
lock
aam
xchg
add
and
imul
adc
cmc
mov
sbb
lret
mov
cmp
mov
lcall
rolb
sti
sub
push
jns
push
sub
mov
movsl
cmp
out
test
cmp
push
dec
scas
movb
sahf
pop
xchg
popa
pop
inc
notl
and
xchg
jne
mov
push
testb
ret
arpl
inc
shrl
adc
in
fwait
xor
xchg
cmp
inc
stos
pop
pop
outsb
cld
repnz
sbb
in
push
into
sbb
cmp
pop
cld
scas
fdivrl
mov
ljmp
stc
lret
in
jecxz
js
insl
or
iret
flds
cwtl
in
mov
mov
add
xchg
sub
add
sbb
stos
pop
out
mov
pop
pop
cmp
mov
loopne
dec
ror
repnz
aas
enter
and
insb
or
in
jne
scas
arpl
cmp
dec
sub
pop
push
shll
push
sub
and
pop
cs
adc
adc
mov
das
mull
icebp
gs
or
shll
sbb
movsl
pop
pop
mov
daa
inc
enter
xchg
fildl
jge
sub
adc
sub
push
and
nop
push
push
xchg
inc
push
jne
lret
push
in
dec
inc
loopne
stc
adc
mov
stos
fwait
out
sub
cs
sbb
in
rcl
test
shr
insl
pop
push
hlt
sti
sub
out
repz
aas
lods
add
mov
stos
sarb
cmp
mov
sbb
ss
scas
sbb
xchg
fs
hlt
out
test
leave
inc
xchg
pop
jns
fiaddl
shl
mull
dec
dec
pop
lret
sbbl
xlat
lahf
movsl
addl
hlt
jo
and
xor
mov
call
add
cmc
cwtl
test
bound
pop
sub
popl
push
fists
pop
and
std
cmp
jne
xchg
test
add
inc
inc
mov
ljmp
shrl
or
imul
xor
sbb
jnp
and
jl
pushf
or
popa
push
sub
jo
lds
sarl
nop
lret
push
pop
xchg
lea
ret
jg
lds
jge
sub
jp
pop
jae
ret
subb
aas
pop
rorl
or
int
sub
cltd
fs
sbb
jne
inc
push
inc
mov
movsb
add
test
nop
push
sub
xchg
popf
xor
jg
inc
and
movsl
movsb
cmpsb
out
adc
outsl
xchg
adc
mov
xchg
mov
test
or
outsl
mov
sub
xchg
enter
insl
pushf
lods
mov
mov
mov
pop
mov
int3
xchg
mov
dec
jp
jo
in
data16
imul
pop
ret
jmp
test
add
adc
nop
out
mov
aaa
lock
cmpb
cmp
sti
lock
fs
mov
aas
add
cli
sarl
dec
mov
pop
mov
mov
scas
or
int
jge
sub
out
fldcw
nop
lea
jg
enter
sbb
shlb
pop
adc
dec
shrl
orl
jg
mov
arpl
inc
hlt
pop
lods
pop
dec
ficomps
or
in
sbb
inc
cmp
mov
daa
xchg
stos
mov
dec
xchg
jl
imul
repnz
and
push
out
sahf
xor
je
popa
repz
hlt
add
clc
and
sub
ret
mov
or
mov
dec
push
dec
imul
cs
mov
push
cmp
dec
imul
filds
in
dec
and
cmc
xor
or
inc
or
jl
imul
mov
cmc
out
push
lahf
mov
push
cmp
mov
jp
pop
fbstp
out
add
lock
cltd
push
rorb
lahf
cld
ss
inc
mov
mov
ret
push
lcall
mov
inc
pushf
pop
stos
cmovns
out
add
ror
out
jmp
lret
and
or
push
adc
xchg
cmp
pushf
rorl
stc
sbb
ljmp
sbb
dec
add
xorl
dec
push
lea
push
xor
add
mov
xchg
movsl
movsb
lcall
lahf
or
add
mov
iret
fnstcw
xchg
test
or
jo
push
inc
out
lods
inc
mov
repz
cmpsl
sbb
cmp
push
and
rcl
cvttps2pi
inc
fimuls
xor
xchg
xor
aaa
mov
daa
rol
jnp
dec
popf
inc
dec
lret
xchg
hlt
jne
pop
aad
add
mov
add
pushf
out
gs
sbb
outsl
test
dec
fstl
cmp
xor
jns
aam
xchg
popf
jle
test
sbb
add
in
jecxz
add
and
lret
fs
or
movsl
int3
push
mov
int
jmp
jp
daa
movsb
lea
mov
adcl
shlb
lahf
fisubl
xchg
leave
sbb
loop
push
fwait
cmp
xor
mov
repnz
and
pop
insb
ss
or
repz
inc
or
push
sub
or
add
and
mov
popf
enter
inc
ja
out
xchg
jnp
into
fcmovu
lret
mov
mov
push
lea
hlt
gs
pop
in
stos
sbb
xchg
add
outsb
pop
add
scas
aas
sub
push
out
ljmp
lahf
pop
mov
or
stos
or
sbb
mov
jl
pop
stos
cmpsl
shlb
add
das
or
sbb
inc
pop
inc
js
or
cmpsb
mov
stos
pop
roll
lret
and
push
addr16
push
aaa
test
out
stc
shrb
ljmp
inc
pop
jbe
cli
xlat
inc
sub
mov
sbb
data16
aad
repnz
mov
sbb
and
imul
insb
mov
scas
xchg
shl
mov
pusha
sbb
mov
ljmp
adc
and
adc
sbb
rep
sbb
add
adc
out
adc
jecxz
mov
sub
loopne
xchg
fstpl
cmp
lods
movsb
dec
mov
sbb
jmp
movsl
cmp
lcall
aaa
movsl
push
add
xchg
mov
les
and
mov
cmpsb
daa
inc
fcoms
fwait
jne
mov
mov
inc
pop
cmp
loopne
mov
lahf
insl
ss
cs
push
adc
hlt
aam
mov
jne
mov
and
mov
mov
adc
sbb
mov
insb
outsl
fs
pop
popa
adc
sbb
inc
js
fwait
add
dec
push
and
sbb
ljmp
lret
cmpsl
jl
pop
xchg
and
cmc
adc
jbe
mov
sub
xchg
dec
test
es
pusha
in
ljmp
test
lret
enter
daa
inc
dec
scas
xchg
ss
pop
insl
fldt
or
flds
loop
and
dec
fidivrl
push
pop
xor
cwtl
mov
lret
stc
mov
sub
popf
mov
or
adc
xor
loope
xorl
int
divl
leave
in
inc
insb
icebp
xor
movsb
iret
stos
and
push
std
or
lods
dec
fdivrp
sbb
and
push
cli
scas
jae
xor
out
pop
dec
mov
test
stos
dec
pop
lods
sahf
ljmp
mov
inc
icebp
mov
fwait
add
lahf
es
dec
cmp
sbb
pop
inc
mov
repz
and
in
jmp
stos
or
pop
jecxz
bound
fldl
in
roll
cmp
xor
cltd
sbb
sbb
int
stos
sbb
fildl
dec
cmpsb
inc
roll
pusha
test
pop
or
outsl
or
cmp
insb
pop
push
xor
in
sbb
int3
xchg
cmc
cltd
pop
push
push
loop
gs
lahf
sub
jns
pop
stc
push
popa
pop
out
pushf
sarb
xchg
outsl
int3
dec
rcrb
dec
fadds
mov
mov
push
nop
pop
movsl
repz
add
inc
sub
cmp
pop
inc
outsl
cmp
frstor
fs
sub
pusha
and
js
in
mov
lea
setg
das
fcoms
enter
fs
dec
cmp
arpl
nop
icebp
test
shl
out
ror
lock
or
mov
dec
in
inc
cmpl
movb
inc
aad
sub
push
repnz
and
xchg
pusha
ds
cmp
dec
inc
mov
pop
xchg
iret
cmp
ds
push
sub
repz
sti
loop
push
inc
jne
clc
push
in
push
jo
lock
gs
mov
in
je
mov
xchg
test
sub
pop
es
cs
dec
call
mov
outsb
or
mov
pop
ljmp
pop
arpl
fcompl
pop
mov
push
pushf
mull
xchg
cmc
jmp
jg
test
loopne
popl
sbb
cmpsb
movsl
inc
jb
push
adc
sub
add
lahf
adc
outsb
jp
in
popf
xor
push
cld
push
xlat
sub
punpckhwd
cmpsb
xchg
sti
cmp
add
fildl
lahf
mov
movsb
nop
popf
sahf
dec
cmp
cld
movsb
dec
stos
push
nop
mov
rclb
insl
mov
lods
cmp
fcmovnu
pop
jnp
push
out
imul
jge
xor
ds
adc
add
or
xor
mov
add
fs
xor
inc
jmp
dec
jbe
jl
add
mov
movsb
adc
cmp
jecxz
repnz
jg
lcall
inc
mov
xor
stos
push
and
mov
jno
mov
xchg
push
lds
mov
and
sar
pop
int3
adc
and
lods
test
inc
aaa
icebp
push
repnz
insl
and
iret
das
sbb
stos
lods
and
pop
jl
sbb
sub
in
xor
jnp
sbb
mov
insb
lahf
mov
fistpl
stos
lods
vpsrad
inc
push
jb
scas
push
add
test
push
cmp
xor
movsb
cmp
mov
jl
pushf
pop
xor
cmpsl
les
pop
lods
jecxz
or
repz
sub
mull
mov
push
pop
jno
dec
pop
adcb
push
cmp
lahf
push
je
ret
cli
pop
sbb
loop
out
push
adc
js
cmp
inc
cmpsb
cs
push
rol
xor
lahf
addr16
stos
adc
pop
jnp
and
mov
cmpsl
sbb
sub
lret
into
and
cmp
shlb
or
lret
and
int
mov
movsb
jne
add
lahf
sbb
and
xor
sbb
xchg
or
je
mov
cwtl
cmc
js
jbe
aaa
pop
aaa
or
xor
mov
mov
or
or
push
xchg
int
cmp
or
mov
mov
push
pop
sbb
stos
jbe
out
icebp
sub
inc
jo
xor
pushf
mov
jecxz
add
xchg
or
and
enter
add
fsubrl
lock
cmp
pop
lret
je
fs
addb
pop
inc
cld
mov
cmc
sahf
call
in
xchg
mov
mov
movsb
insb
ss
xor
lds
jge
lahf
scas
movsl
and
out
jo
mov
dec
push
jle
xor
cs
stos
lods
or
nop
stos
push
inc
call
mov
push
push
mov
jo
pop
push
rorl
stos
mov
pop
adc
inc
cmpsl
adc
andb
test
shll
daa
mov
fwait
cmp
mov
ror
cmp
sub
ja
test
fimull
and
lahf
aam
xchg
and
into
imul
loop
andb
jecxz
int
push
mov
xchg
mov
scas
ds
lds
int
lcall
sub
adc
shlb
sub
cs
dec
enter
pop
sbb
mov
mov
sbb
jmp
dec
scas
je
int3
cld
add
sub
or
dec
repz
dec
inc
dec
ficoms
and
mov
insb
hlt
inc
call
cmp
pop
rorb
mov
jb
cmp
lahf
stos
gs
xchg
or
imul
mov
and
cmc
adc
inc
mov
adc
sbb
push
mov
sbb
shll
xor
rorl
xor
mov
outsl
leave
dec
pop
flds
mov
pop
pop
mov
jne
push
push
lea
pop
cmp
pop
dec
xor
sbb
dec
dec
add
or
cmp
sbb
xor
and
shr
cmpsl
fisubrl
inc
lods
test
jmp
or
jns
jge
cmovg
out
addr16
pop
cltd
outsl
inc
test
adc
lahf
adc
pop
adc
lahf
aad
in
sub
pop
adc
mov
ja
xor
add
or
pop
aas
lahf
adc
btc
and
adc
lods
std
mov
popa
les
push
xor
mov
or
pushf
mov
data16
jno
mov
xor
addr16
xor
stos
pop
sbb
sbb
inc
je
hlt
sbb
insb
fs
jb
or
xor
and
sbb
stos
jns
sbb
sbb
jae
pop
mov
iret
in
xchg
arpl
push
adc
inc
jl
loop
add
lahf
icebp
es
stc
xchg
dec
xor
or
aam
movd
lahf
sub
mov
add
mov
and
sub
pop
fdiv
dec
pop
mov
mov
jno
repnz
push
movsl
aad
push
push
pop
and
insb
push
push
pop
int3
cmp
cs
pop
jnp
mov
sub
in
jb
popf
aad
pop
inc
add
jmp
sti
pushf
aad
jg
jo
add
popa
inc
inc
or
pop
int
lcall
test
mov
pop
insl
add
push
stos
cld
ret
lock
sti
push
mov
in
je
pop
jmp
pop
sbb
popf
cmpl
in
dec
stos
adc
inc
adc
shl
ss
cmp
add
cmp
or
add
dec
cmc
or
pop
adcb
add
sbb
dec
mov
icebp
mov
push
inc
test
lahf
repz
mov
xchg
add
and
mov
inc
mov
cwtl
mov
or
arpl
clts
inc
pop
or
and
pushf
mov
jae
stc
inc
cmp
test
push
mov
arpl
cmp
mov
mov
and
pop
imulb
push
out
dec
dec
xchg
push
test
pop
lods
negb
jns
inc
xor
lods
cmpsl
gs
lret
dec
mov
and
sti
mov
mov
stos
fisubs
or
lock
xchg
sub
in
stc
adc
sub
add
sbb
add
sbb
sbb
xchg
add
cltd
pop
roll
jb
ds
pop
inc
mov
pop
xor
cmp
ds
into
push
clc
shlb
jg
mov
rcr
repnz
mov
push
jb
or
inc
add
and
push
mov
mov
outsl
pop
pushf
jp
jb
mov
push
add
leave
das
inc
mov
xlat
or
mov
mov
arpl
push
mov
test
lods
into
sub
aad
inc
jl
jge
mov
jg
mov
movsb
dec
mov
fs
sub
mov
xor
into
shrl
push
pushf
js
insb
into
xchg
in
popf
repnz
lret
fisttpll
inc
in
push
bound
or
mov
pop
mov
test
adc
adc
out
ret
mov
adcb
xlat
inc
sub
ja
sbb
out
shrb
xor
cmp
cwtl
roll
add
faddl
notl
in
push
into
lcall
adc
sbb
xchg
mov
mov
pop
cltd
addr16
out
fs
sbb
and
jl
int
add
adc
dec
cmp
movsl
repz
mov
mov
loopne
cmp
add
ret
xor
or
in
dec
lods
lahf
outsb
push
insl
mov
xor
and
xor
bound
enter
pop
into
push
fldcw
testl
lahf
lret
sub
pop
push
mov
sbb
cli
filds
push
push
add
out
das
and
cmp
sbbl
pop
lcall
shll
sbb
aam
and
cmpsl
adc
sarb
call
push
push
cmp
push
push
lahf
cmp
or
and
jno
gs
xchg
cltd
xor
imul
mov
push
gs
push
adc
and
sbb
fists
adcb
int3
out
sbb
dec
sbb
imul
sarb
jnp
loop
or
mov
mov
mov
enter
cmp
sahf
int
and
inc
stos
jb
movsl
jmp
or
rorb
sti
mov
xor
xor
lret
fcomps
adc
cmp
cld
cmp
fiadds
in
mov
insl
and
inc
daa
push
sbb
repnz
sbb
pusha
out
xor
fstl
lds
dec
push
push
mov
pop
xchg
cli
leave
jecxz
jne
mov
hlt
test
sysexit
xor
push
lahf
sti
daa
lret
add
fwait
cmp
leave
cmp
pop
sbb
mov
inc
xchg
fmul
mov
loopne
adc
sbb
and
sub
stos
jne
dec
out
in
es
pushf
adc
sbb
mov
pop
and
push
push
jle
shlb
jmp
andb
pop
xorb
push
das
notb
ret
nop
mov
test
inc
aaa
lret
ret
movsb
int
push
sahf
inc
out
add
out
cmpsl
scas
and
or
call
stc
mov
or
and
call
jns
xchg
and
out
add
cli
pop
push
mov
cmpsb
mov
cmp
adc
pop
mov
adc
and
daa
jl
pop
jl
pop
and
mov
mov
in
imul
mov
push
and
adc
adc
ret
in
push
mov
mov
dec
inc
fimuls
mov
pop
imul
jae
hlt
pop
icebp
cmc
xor
cmp
test
fs
mov
fwait
and
pop
mov
inc
fmulp
imul
test
add
mov
sbb
jg
rclb
pop
add
push
testb
cmp
icebp
mov
loope
lods
mov
insb
jle
sub
call
push
inc
data16
fbstp
sub
and
sub
inc
adc
adc
lods
inc
leave
cmp
sahf
js
sub
or
cmp
adc
dec
adc
popa
xor
sarl
jg
adc
mov
arpl
mov
lahf
mov
addl
mov
dec
lret
cwtl
and
jmp
xchg
stc
jl
int
scas
das
cld
push
aas
cli
pusha
sub
call
arpl
mov
lret
out
mov
xchg
insb
pop
inc
xchg
cmp
cli
xchg
cwtl
add
cmp
aaa
inc
aam
icebp
pop
inc
add
fwait
daa
cld
shlb
sbb
popf
es
fs
push
iret
cmp
iret
mov
mov
pop
dec
mov
jp
shll
and
jb
pop
cwtl
pop
pop
mov
js
mov
adc
xor
sahf
into
push
cmp
sub
lods
fistps
and
push
dec
pop
xchg
sahf
jecxz
movzwl
xchg
mov
or
cmp
jo
sub
aam
bound
cmp
mov
cmp
add
ss
push
cli
adc
jo
shrb
ret
sbb
bound
push
xor
xchg
and
mov
adc
in
lods
pusha
mov
jecxz
aas
mov
sbb
lock
lea
repnz
xchg
sbb
icebp
loopne
jl
cmpsl
and
mov
test
fiaddl
sub
push
xchg
call
dec
mov
lret
fs
cmpsb
xor
or
sbb
dec
xchg
mov
inc
mov
in
loopne
xchg
xor
add
daa
cmp
push
popf
mov
nop
sti
call
dec
das
push
dec
fxch
mov
sbb
repz
mov
addr16
jl
sbb
or
xor
dec
cmpsb
dec
mov
pop
or
in
push
sbb
lahf
ljmp
faddl
and
lahf
aas
mov
pop
icebp
movsb
xchg
cwtl
mov
lahf
lods
inc
addr16
mov
stc
mov
mov
test
stos
xor
pop
jns
pop
inc
dec
shrl
rorl
mov
adc
add
scas
mov
dec
stos
xchg
add
hlt
jle
pop
pop
sarl
push
pop
xchg
xor
mov
inc
dec
jns
rolb
pushf
jne
mov
movsl
dec
or
push
push
out
xor
or
gs
sub
and
inc
ds
sbb
in
sub
popf
divl
nop
aas
jno
imul
lahf
add
fbstp
xor
int
dec
stc
mov
dec
mov
movsl
jmp
push
addr16
ret
subps
rcr
cmp
stos
ljmp
pop
imul
test
mov
jmp
pop
lret
and
in
pusha
in
aaa
adc
cltd
in
inc
in
inc
and
fsubs
sub
sbb
mov
outsb
out
scas
cmovl
lret
dec
std
cmp
push
loop
and
fstps
aaa
jl
cli
lea
cli
aam
jb
lods
xor
repnz
sub
push
xor
push
pop
jg
icebp
mov
pop
cli
sub
adc
adc
sahf
xor
mov
lahf
popf
mov
pop
dec
jmp
fcompl
xlat
int3
or
add
test
adcl
pop
hlt
add
sub
sub
cld
mov
leave
sbbl
in
add
push
movsl
push
and
mov
jg
or
jne
scas
xchg
aas
lea
mov
cmpsb
lcall
aad
repnz
pop
stos
cmp
jae
lret
add
pop
in
mov
daa
insb
cmp
inc
cmc
and
pusha
mov
pop
in
pop
fistps
icebp
aas
cwtl
jnp
push
sub
sbb
lds
xchg
js
sbb
pop
xlat
test
lret
mov
into
daa
aaa
pop
sub
outsb
pop
jb
jnp
jne
sub
in
adc
enter
stos
jns
scas
or
jmp
mov
or
adc
mov
es
cltd
addl
pop
ds
cmp
lea
mov
add
jl
jp
mov
sbb
fcmove
push
xchg
push
cmp
mov
rcll
inc
cli
aas
into
xchg
repz
nop
popf
stc
push
dec
sub
add
sbb
mov
test
sub
pop
mull
roll
xchg
lea
aad
fbstp
call
sbb
sub
sub
shrb
xor
pop
imul
aam
xor
movsb
enter
scas
cli
test
daa
fs
inc
mov
pop
mov
stos
out
mov
maskmovq
ret
es
mov
xor
lahf
dec
xor
fisubrl
cld
stos
imul
cli
sbb
ret
repnz
daa
lahf
or
xchg
movsb
pop
lea
fidivs
iret
dec
or
out
loopne
shrl
jp
pop
jecxz
or
hlt
loopne
pop
and
aam
cmp
stos
sarl
cmpsb
adcb
jbe
pop
lds
fldenv
gs
lahf
icebp
popl
mov
mov
in
inc
fistps
xor
and
or
jns
jns
sub
test
popa
inc
test
outsb
cli
pop
xchg
sub
movsl
xor
ds
mov
xchg
mov
pop
push
sub
fidivs
out
cmp
adc
cmp
sub
testl
mov
rcll
pushf
addr16
push
aas
xor
dec
mov
jns
mov
insl
jno
jmp
test
and
jo
add
adc
push
testb
push
imul
ds
pop
ljmp
sub
int
faddp
je
and
loopnew
mov
rorl
sbb
ja
mov
rorl
jl
mov
aad
cwtl
lret
sub
adc
jae
dec
ja
push
jnp
xor
inc
add
pop
js
data16
mov
lods
mov
adc
sahf
or
xchg
add
fisubrs
repz
enter
mov
out
sti
dec
pop
pop
adc
push
or
mov
rcrb
or
adc
sbb
mov
iret
in
adc
cltd
cmp
inc
pop
pop
inc
push
pop
mov
adc
dec
mov
lea
xor
add
and
rorl
dec
adc
testl
sbb
scas
ljmp
push
mov
stos
mov
out
lret
add
inc
scas
mov
push
nop
inc
mov
cmp
dec
cmp
addb
ljmp
loopne
leave
mov
bound
out
jl
adc
mov
cmc
or
fisubs
idivl
leave
push
fistpll
out
and
es
sbb
fwait
cmp
and
or
dec
xor
xor
es
xor
adc
or
out
lds
aaa
scas
mov
push
test
inc
add
stos
icebp
nop
mov
sbb
inc
dec
push
ljmp
mov
inc
leave
xchg
aad
mov
test
lods
clc
push
pop
and
imul
into
scas
and
lea
adc
mov
cmpsb
pop
test
push
mov
cmpb
jae
in
dec
dec
inc
mov
and
sub
mov
daa
jl
mov
pushf
movsl
and
popa
daa
mov
sub
lahf
out
dec
mov
xor
xchg
xchg
mov
sbb
ss
and
mov
je
add
and
or
sub
mov
in
pop
lea
popf
cwtl
dec
adcl
dec
cmp
xchg
add
add
sbb
dec
dec
mov
in
dec
push
jbe
dec
and
dec
dec
aaa
ret
jg,pt
stos
cmp
outsb
out
xchg
sub
das
movsb
sub
stos
dec
inc
idivb
insl
inc
add
hlt
sub
shr
sti
and
jne
mov
fiaddl
fimull
int3
jmp
pop
sub
add
lock
lahf
sahf
lcall
inc
pusha
jbe
clc
mov
add
out
adc
fnstsw
xchg
pop
idiv
or
sbb
jg
cmc
add
adc
cmp
lahf
or
rclb
xchg
jmp
pop
add
sbb
cmp
js
dec
jecxz
jns
dec
roll
cmp
add
inc
mov
mov
add
jecxz
xor
or
jge
movsb
call
pop
or
xor
insb
out
sbb
or
cs
xchg
popl
mov
rolb
xor
cmp
notl
std
insl
cltd
leave
push
scas
cmp
xchg
xchg
sti
jge
xor
scas
sub
int3
adc
sti
pop
cmc
sti
jb,pn
jno
out
rcrb
pop
shll
rol
repz
push
out
ds
sub
inc
or
sbb
xchg
push
icebp
add
mov
popf
out
rcll
and
iret
add
sub
stc
add
es
sub
jecxz
cmp
adc
jge
xorl
psrlw
inc
mov
clc
movb
outsb
or
lea
rolb
into
cmp
xchg
loopne
mov
dec
add
cwtl
push
in
inc
xor
cmpsb
sbb
or
and
or
or
and
das
pusha
pop
sbb
or
pop
jb
jp
jg
mov
mov
insl
cld
or
mov
xchg
cmpl
adc
bound
mov
adc
inc
or
mov
push
sbb
fisttpl
sub
fs
sbbb
mov
or
test
lea
mov
gs
test
lahf
lea
pop
dec
std
jl
lock
out
in
or
mov
mov
lds
movsl
sbb
imul
add
mov
lret
mov
push
mov
lea
pop
and
pop
rol
repz
cmp
pop
sti
bound
cmovs
mov
adc
outsl
in
xchg
sti
sub
xchg
roll
out
repnz
call
pop
push
adc
mov
movsl
aas
lods
loopne
and
stos
loope
mov
or
lods
inc
sub
or
sbb
xchg
xor
das
addl
xchg
outsb
into
scas
push
pop
ss
or
popf
xor
hlt
jns
jbe
aaa
pop
out
and
lahf
pushf
mov
xor
jno
jo
xchg
mov
add
lods
sub
cmp
sar
sarb
add
inc
xchg
push
ficoms
or
mov
pop
lods
sarb
pop
jge
sub
add
sti
push
aad
sub
and
lret
in
dec
add
rcrl
add
cmp
dec
add
lea
adc
or
inc
ljmp
mov
adc
or
test
lds
sbb
mull
jno
jp
cld
xor
ljmp
lea
sbb
cs
xor
in
adc
xor
jno
adc
adc
int
fucomp
xor
and
hlt
fs
add
adc
xchg
jle
or
fsubrs
jmp
push
stos
xor
lret
add
rcl
ret
add
aaa
notl
or
std
jp
outsl
fisttps
enter
out
pop
push
cmp
sbbb
cmp
gs
inc
movsl
int
push
mov
and
nop
push
fistps
cltd
mov
lahf
dec
sub
and
cmp
adc
stc
aas
pop
add
push
mov
dec
data16
lahf
das
repz
push
gs
mov
xor
push
ret
int
mov
jl
jle
imul
out
fmuls
push
sub
pop
ljmp
cld
pop
push
inc
or
inc
push
and
xor
push
lock
jmp
adc
std
addb
and
push
sub
xor
sub
fiadds
stc
movsl
in
sbb
inc
inc
sub
adc
xchg
add
test
pushf
inc
mov
int3
insl
fsubr
cwtl
add
insb
pop
loop
jl
test
pop
adc
mov
jns
mov
push
cmpsb
jg
adc
dec
fdivs
jmp
test
flds
out
cs
insb
sub
xchg
pop
dec
sti
aas
ret
enter
insl
add
fists
out
jecxz
mov
and
sub
fisttps
adc
push
clc
js
sub
insb
mov
fs
mov
xchg
mov
xchg
mov
into
inc
push
cmpl
loop
dec
mov
ds
mov
sub
shrl
jb
outsb
mov
pop
in
aad
mov
ds
jmp
movsl
or
arpl
orb
push
or
jns
sub
adc
idivb
popf
data16
shrl
jmp
in
test
xor
mov
sbb
out
inc
sub
lret
xchg
sbb
popf
cmp
add
lret
mov
movsl
orb
ret
or
popf
out
aam
insb
hlt
cs
in
mov
out
inc
or
mov
or
stos
add
pop
lcall
daa
std
or
loope
sbb
adc
push
push
dec
jno
xor
mov
outsl
or
out
dec
mov
push
and
pop
lock
and
call
xor
push
cmp
fists
inc
sub
push
scas
rolb
jl
mov
inc
lret
push
fs
xchg
mov
sub
adc
xor
rorb
das
shll
jp
jmp
xor
add
xchg
push
xchg
adc
cld
and
add
xor
stos
inc
or
lahf
inc
clc
cmp
adc
adc
lods
int3
pop
push
sub
cmp
dec
adc
jbe
in
ficompl
mov
push
adc
sub
jae
leave
cld
adc
or
or
push
add
add
sub
int3
and
gs
repz
fnstcw
negb
cld
and
stos
hlt
sub
mov
int
icebp
add
pop
and
jge
mov
int
mov
xchg
das
loopne
sub
cld
sbb
scas
in
mov
inc
lahf
iret
adc
movsb
int
or
cmp
add
jae
dec
jecxz
sti
cmp
ss
movsl
xchg
das
mov
cmp
dec
popf
out
inc
jbe
sahf
sbb
mov
test
fs
out
cmp
push
dec
pop
loop
xor
out
sbb
inc
inc
std
pop
repz
cmp
mov
pop
and
xlat
dec
and
pop
clc
adc
cmpl
xor
and
out
shl
std
test
sbb
mov
xchg
ret
mov
cmc
and
mov
stos
jle
test
cmp
xchg
cmp
mov
insb
or
and
rol
inc
movsb
inc
jp
sub
xor
and
jge
out
testl
pop
je
inc
push
mov
xchg
xor
ja
inc
and
js
fildl
les
sti
cmpsb
mov
push
pop
in
pop
fnstsw
adc
or
xchg
stos
pop
outsl
push
adcb
enter
sbb
add
mov
mov
lea
xorl
in
cmp
sti
xlat
adc
sbb
adc
lahf
xchg
dec
pushf
add
pop
cli
iret
dec
test
lock
mov
fists
jnp
jmp
jo
sub
and
icebp
popf
cmp
sbb
scas
in
insb
cs
nop
pop
sbb
sti
pop
mov
call
addb
sbbl
incb
and
rorb
push
mov
mov
leave
xchg
les
xor
ljmp
mov
pop
in
fnstcw
xorb
sti
xor
dec
lahf
and
jmp
jbe
sbb
mov
shlb
adc
jecxz
xchg
or
xchg
sbb
lods
dec
cmp
and
mov
into
mov
lock
popa
hlt
mov
js
fimuls
add
pop
outsb
mov
push
call
in
and
jl
xor
dec
pop
push
cs
mov
in
cmp
and
aam
lods
cmp
inc
push
or
cmp
movsl
adcb
fisubs
js
xlat
cld
pop
std
sub
dec
popf
mov
rcrb
popf
mov
incb
sub
cmp
mov
call
cmp
std
pushf
jecxz
or
outsl
adc
push
sbb
sub
jle
pushf
sub
adc
sbb
inc
sub
stc
popa
lret
scas
add
and
cld
bound
inc
fs
sti
scas
mov
cmp
enter
mov
test
fisttps
enter
dec
fdiv
cmp
int3
cs
testl
roll
adc
adc
in
or
pop
mov
push
inc
or
dec
std
icebp
inc
fs
popa
lahf
push
std
cmp
lds
jl
test
popa
inc
xchg
lds
and
cmp
mov
sub
imul
xlat
sbb
mov
mov
adc
cld
test
jmp
test
pop
xchg
xchg
inc
shll
pushf
add
sarl
cltd
mov
dec
mov
ret
test
and
fldl
sbb
sub
mov
pop
pusha
in
dec
pop
shr
ss
xor
js
push
sub
cld
dec
dec
fadds
notb
add
push
std
shr
stos
and
pop
ds
loopne
or
dec
cmp
adcb
out
inc
xchg
pop
ret
nop
fnsetpm(287
push
sub
aam
jns
pop
adc
or
inc
jecxz
mov
pop
pop
leave
xchg
test
daa
xor
insl
je
loop
mov
lret
decl
addr16
or
mov
loopne
into
iret
jb
neg
mov
insb
loopne
scas
push
iret
mov
push
and
sbb
inc
jb
leave
adc
stos
xchg
xor
mov
lahf
testl
cmp
insb
imul
dec
add
add
add
add
in
xlat
add
dec
sub
xor
push
dec
cld
insl
cwtl
movsb
int3
clc
cmpsl
insb
mov
cmp
add
inc
jns
sub
and
dec
xor
or
pushf
lock
testb
fdivl
sbb
mov
mov
adc
jbe
mov
xchg
jnp
cmp
ficoms
sbb
push
adc
arpl
dec
push
inc
add
fnstenv
lahf
add
push
inc
aas
jecxz
push
inc
lds
daa
call
cmpsl
pop
mov
push
test
jl
sub
jnp,pn
pop
jl
add
sub
orb
sub
stos
in
fs
stos
roll
dec
in
jle
or
mov
cli
dec
jg
jecxz
or
pusha
push
xchg
std
dec
dec
push
inc
sti
inc
sbb
in
clc
cmp
sahf
sahf
lcall
xchg
bound
add
mov
inc
fiaddl
ja
inc
sbb
mov
mov
or
cmp
adc
or
nop
add
push
add
subb
movb
xchg
orb
stos
push
fcomi
movsl
scas
push
les
and
adc
test
flds
dec
addr16
jns
jmp
hlt
in
and
cmp
lret
call
add
inc
jae
mov
dec
mov
ds
mov
popf
loopne
in
push
cmp
xchg
xchg
es
push
int3
cmp
repnz
mov
lods
lahf
lock
stos
and
or
int
inc
lods
mov
cs
js
gs
inc
outsl
pop
jo
cs
lahf
gs
mov
xchg
lea
mov
test
push
pop
xorb
roll
mov
mov
in
int
or
lds
jp
cmp
dec
mov
or
adc
push
clc
or
adc
and
jne
push
sbb
test
or
mov
pop
imul
stos
cmp
push
xor
sub
dec
xlat
mov
cmp
xchg
dec
pop
sti
test
xor
jge
pop
mov
sar
and
cmc
jl
jne
enter
imul
negl
roll
adc
pop
jnp
stos
mov
xchg
and
sbbb
sbb
xor
or
loopne
int
rolb
adc
push
pop
icebp
cmp
rolb
call
cmp
and
leave
xchg
lea
xchg
jo
sarb
adc
outsb
adc
sbb
pop
les
and
mov
mov
test
in
repnz
pushf
imul
std
pop
push
inc
sbbb
in
hlt
rcrl
nop
in
or
cmp
adc
jg
jae
adc
les
rcll
and
aad
sub
or
sub
rorb
and
dec
stos
xchg
mov
cmc
xchg
nop
or
mov
lret
adc
mov
sbb
std
sbb
mov
sub
aaa
das
dec
mov
shrl
sub
js
lock
xor
flds
cmc
adc
fiaddl
or
nop
inc
dec
into
out
and
fwait
push
icebp
add
mov
les
cmp
dec
and
icebp
add
outsl
test
fildll
das
fs
adc
sub
loope
sub
loopne,pn
pop
cmpsb
or
sets
jb
movsl
lea
scas
enter
fcmovnb
imul
es
sub
sbb
insb
add
fcmovne
movsb
es
je
push
or
add
rcll
add
fwait
sti
sbb
jne
sub
mov
dec
jg
xorb
iret
jnp
mov
inc
cmp
in
jecxz
push
pushf
popf
sti
push
icebp
inc
hlt
and
int
call
cmc
mov
mov
imul
push
jns
mov
aaa
movsb
lods
test
mov
bound
push
dec
test
sub
scas
mov
add
subb
fwait
test
lea
xorb
fnstenv
arpl
mov
test
aad
sbb
adc
add
xor
fnstsw
cmc
jl
int
xor
into
dec
and
sub
cld
test
xorb
pop
mov
int
enter
std
xorl
or
fistpll
inc
pop
dec
lahf
inc
insl
testl
pop
xchg
pop
les
dec
pusha
out
cmp
sub
sub
mov
xor
cli
jge
pop
pop
xor
aam
fs
jl
or
cmc
in
lret
dec
mov
test
sbb
inc
mov
fwait
lret
and
hlt
or
xor
fdivr
mov
mov
divl
sbb
scas
cmp
popf
xchg
jl
pop
xlat
lret
sub
sbb
es
enter
adc
xchg
sub
adc
or
std
dec
adc
sub
insb
or
out
mov
mov
dec
sbb
daa
dec
mov
inc
sahf
adc
and
ds
icebp
pop
idiv
mov
dec
add
fists
pop
lcall
cmp
jmp
jl
sub
mov
mov
xor
jl
mov
insb
fs
adc
xor
jmp
sbb
jle
sub
jnp
or
ja
sti
add
dec
je
sti
mov
mov
jecxz
mov
sbb
cmp
mov
mov
mov
pop
movsb
fists
pop
sub
pushf
insb
cs
out
jbe
cwtl
add
xchg
dec
sub
pushf
cmp
mull
and
inc
mov
add
loopne
fadds
pushf
xor
mov
inc
adc
imul
mov
sub
mov
add
lea
shrl
loopne
insl
sti
mov
xor
les
pop
pushf
or
xor
and
pop
loopne
mov
arpl
jle
addr16
mov
shl
mov
xor
dec
inc
and
or
xchg
push
inc
cmp
xchg
mov
mov
int3
cs
movsb
rcr
outsl
cmpsl
aad
mov
sbb
int
xchg
loopne
out
mov
adc
and
xchg
mov
push
mov
bound
popf
bound
out
cmp
nop
in
xorb
stos
sbb
sbbb
jmp
xchg
xor
cmp
sbb
andl
pop
lahf
inc
sub
out
adc
imul
pop
inc
imul
push
mov
int3
in
add
jbe
and
jl
insb
bound
pop
and
pop
inc
add
jl
xchg
popf
fisubrs
inc
xchg
test
inc
mov
shl
add
sbb
fucomp
int
stos
cmp
sbb
dec
cmc
call
test
cmpsl
mov
and
mov
pop
adc
add
sbb
cmp
aad
push
inc
lahf
outsl
adc
push
insb
mov
sbb
add
fldcw
lret
cmc
ret
dec
xchg
lock
jmp
call
lea
dec
sbb
or
fs
cmp
or
inc
mov
rorb
and
cmp
lahf
fsubrs
les
cmp
or
outsl
and
lahf
pusha
lock
dec
call
aad
in
inc
aas
aaa
fs
hlt
dec
sub
sub
lahf
xchg
in
dec
lcall
lahf
mov
outsl
mov
in
mov
sbb
xchg
aam
xchg
push
jo
add
xor
test
jle
pop
test
adc
mov
mov
dec
sahf
adc
or
and
das
into
icebp
hlt
xor
cli
fst
pop
cmp
xchg
or
nop
xchg
mov
xchg
add
cmp
pop
adcb
repnz
in
sti
adcl
push
push
sbb
add
and
and
jmp
lahf
into
jae
lea
push
leave
mov
or
cld
idivl
dec
jne
test
test
xlat
dec
inc
xchg
cmpsl
and
iret
imull
xchg
push
cmp
fdiv
xchg
insl
cld
pop
push
dec
adc
cmp
or
push
lahf
fidivs
pop
std
pop
les
mov
xchg
adc
and
sete
aam
je
pop
arpl
mov
inc
sbb
insb
mov
int3
movsl
or
and
mov
add
out
stc
pop
or
or
dec
or
cwtl
lea
subl
or
push
out
inc
gs
movsl
iret
lret
mov
and
fs
mov
xchg
or
jp
mov
adc
js
push
xorl
inc
and
or
jle
movsb
mov
in
push
pop
push
cmpsl
add
jnp
xchg
enter
or
jp
and
je
mov
add
push
int
mov
mov
push
mov
rorl
lahf
fwait
roll
or
pop
mov
cmp
loopne
xchg
icebp
stos
pushf
jne
and
dec
mov
loopne
inc
jo
int3
push
add
mov
and
pop
xorl
jae
dec
inc
add
lret
scas
frstpm(287
shrb
mov
std
loopne
mov
roll
mov
push
pop
push
jns
mov
xchg
lahf
mov
jno
scas
cmp
pop
es
push
test
cmp
fcomps
jb
int3
test
inc
sarl
push
pusha
lods
filds
push
orl
repnz
les
int3
dec
jb
addr16
lahf
pop
in
filds
jle
cmpsb
inc
xor
dec
popl
cmp
sbb
mov
into
and
fstpl
xor
mov
adc
pop
add
xchg
imul
dec
jne
push
inc
jmp
enter
bound
adcb
push
inc
jne
xchg
jb
dec
sub
mov
sub
or
add
jnp
or
testb
dec
xor
adc
add
xchg
push
scas
repnz
sti
dec
jecxz
sub
mov
dec
int3
inc
xchg
push
das
fiaddl
mov
int
mov
inc
or
sahf
and
mov
sbb
lret
fwait
push
push
pusha
lods
sub
rolb
aaa
pop
push
ss
ds
shrb
ficoml
fnstcw
xor
xor
sub
call
jle
push
pop
xchg
sub
lret
out
popf
xchg
and
cli
jmp
adc
test
adc
inc
imul
xor
xor
stc
add
ljmp
fsubrs
repnz
mov
push
dec
bound
rcll
or
fwait
push
jg
movb
stos
xor
lret
add
and
pop
sarb
add
sbb
mov
jmp
cwtl
iret
cltd
inc
sub
pop
or
stc
in
call
xor
xchg
inc
pop
popf
pop
add
pop
dec
in
mov
sub
mov
dec
pop
inc
pop
fisubl
add
dec
rcl
xchg
jb
cmp
fadds
jmp
mov
add
cmp
dec
les
xchg
ljmp
inc
cmp
and
aas
std
dec
jae
push
int3
gs
jne
jg
or
xor
pop
inc
shrl
push
dec
jb
jnp
enter
dec
out
sub
out
test
cmpl
ljmp
pop
xor
dec
sub
std
sub
rcll
repnz
mov
stc
lret
mov
test
outsb
out
and
mov
jo
inc
or
mov
test
xor
fsubrl
jbe
add
nop
inc
xor
dec
jbe
xor
sub
andb
aas
cs
xor
int3
and
sub
or
pop
rcr
daa
jb
push
xor
adc
cmp
cmp
xor
mov
inc
fdivs
xor
pop
inc
inc
cmpb
push
xor
sbb
jge
push
mov
cmp
pop
shlb
cmp
xchg
ljmp
add
or
cmc
call
dec
sidtl
pop
jp
js
pushf
jge
jbe
mov
popa
cli
sub
pop
and
dec
daa
push
mov
mov
xlat
iret
cmc
xchg
mov
jl
inc
stos
cmp
mov
jmp
das
cmc
lcall
mov
pop
rcl
lods
int3
hlt
mov
lahf
dec
jae
jecxz
outsb
fistpll
xchg
and
jnp
jb
loopne
insl
orb
jl
out
jns
cmpsb
cmp
stos
daa
pop
cmp
add
jl
cmp
mov
inc
nop
mov
dec
or
jnp
scas
sbb
add
pop
or
stos
adc
sbb
mov
int
les
and
cmp
sahf
cmp
sub
add
ret
dec
clc
and
sbb
inc
cli
rcl
je
lahf
icebp
sub
mov
out
icebp
and
lcall
lds
push
fadd
sub
cmp
inc
stos
jmp
cmp
push
shl
mov
cmp
aad
shrl
dec
imul
mov
adc
fcmovu
add
push
and
xor
mov
mov
mov
sbbl
jno
dec
mov
fstpt
loopne
sbb
cmp
ljmp
bound
mov
clc
and
ret
push
adc
xor
adc
sbb
pushf
cld
cmp
in
jp
jle
mov
outsb
push
jmp
leave
test
nop
ret
xor
jmp
shl
bswap
inc
ret
mov
mov
subb
or
and
sbb
ds
pushf
jmp
insl
dec
test
sbb
aam
xchg
dec
dec
mov
pop
dec
out
ficomps
or
mov
int3
jl
dec
cli
or
shll
lahf
xor
out
int3
shrl
iret
cmp
stos
rcrl
dec
or
jg
arpl
outsl
xchg
mov
push
xlat
leave
sbb
ja
pop
out
sbb
cmp
add
add
mov
in
loopne
sub
shr
mov
icebp
jl
inc
cmpsl
or
pushf
sti
sbb
mov
or
mov
mov
jns
rcrl
faddl
or
repz
sub
sbb
and
sti
cmp
xchg
fnstenv
sub
add
adc
stos
xor
dec
ds
fcomi
push
shll
and
stos
shl
dec
lds
es
adc
stos
fwait
xor
adc
pop
adc
aas
cs
sub
adc
xor
inc
pusha
sbb
in
and
push
xchg
or
adc
push
mov
sbb
movd
lahf
dec
cwtl
stos
push
in
pop
inc
js
dec
lret
or
inc
pop
mov
data16
fildll
dec
adc
adc
cmp
inc
out
or
pop
fists
jno
mov
sub
or
sarl
jns
jnp
add
add
pop
cmp
imul
das
int3
int
lds
repz
push
decb
inc
fcmovnu
lds
push
adc
in
test
push
and
dec
push
or
sub
inc
xor
shrb
mov
push
ss
mov
sub
das
insl
fistps
ljmp
xor
sbb
out
or
pop
int3
sbb
insb
mov
inc
add
jae
cmp
fisttps
jmp
and
push
or
pop
jbe
sub
inc
mov
adc
ret
mov
iret
adc
popf
add
test
sub
fldt
mov
int
xchg
sub
dec
jl
cli
enter
cmc
lods
call
fbld
sub
cmp
mov
psubq
das
js
loopne
clc
pop
stos
pop
adc
test
jge
fucomip
ret
loope
pop
mov
push
xor
bound
jmp
gs
shll
mov
mov
mov
inc
repnz
mov
aam
push
insb
sub
addl
lds
arpl
les
and
fnstcw
jge
sub
jecxz
push
pop
out
fdivrl
pop
test
call
imul
pop
or
iret
add
and
cwtl
rcll
cmpsb
inc
or
pop
lods
push
test
dec
test
xor
pop
mov
ds
pop
mov
lods
cmp
lods
aam
jge
add
mov
imul
lock
mov
fiaddl
pslld
sub
sarb
stos
les
fbld
rorb
nop
out
ds
jns
in
mov
mov
sbb
mov
es
cmp
das
popf
stos
and
cmp
sbb
sbb
cli
insl
in
inc
das
jmp
std
mov
sbb
outsl
mov
add
enter
mov
fwait
and
sbb
lods
mov
aas
test
sbbb
loop
addr16
push
mov
inc
xchg
jl
push
inc
sbb
test
je
inc
push
or
shrb
jmp
add
in
test
fbstp
fst
pushf
sub
imul
clc
das
push
mov
scas
adc
adc
cmp
mov
fnstsw
insl
ss
sbb
lods
test
int
in
cltd
sbb
fbld
movsb
popa
andps
cmp
jle
neg
inc
or
int
dec
jmp
push
push
jge
out
push
mov
imul
enter
adc
lahf
push
pop
stos
std
insl
negb
mov
push
aaa
roll
shrl
repz
jecxz
cmpsb
adc
pushf
xchg
mov
sub
xchg
mov
add
enter
scas
or
add
stos
add
or
sub
mov
adc
in
sub
inc
in
inc
test
inc
pop
scas
xor
add
dec
and
dec
pop
stos
out
pop
cwtl
loopne,pn
in
xchg
xor
out
xor
adc
or
push
xchg
add
and
test
cmp
sbb
or
mov
aaa
movsl
push
inc
and
repz
add
jae
pushf
push
mov
xchg
xor
adc
ret
iret
cmp
inc
lock
sub
sbb
pop
insl
push
sbb
inc
or
pop
sub
or
inc
pusha
dec
sbb
test
filds
iret
or
icebp
out
and
loope
repz
lahf
lret
mov
push
cmpsb
adc
repz
out
aad
and
loopne
mov
push
sbb
pop
pop
inc
push
ds
and
fsts
sbb
les
sbb
cmc
push
bound
test
cmc
lea
test
mov
negl
rcll
add
or
or
repz
out
mov
mov
xchg
cmpsl
mov
ror
mov
push
add
mov
sub
dec
pop
lea
dec
dec
adc
leave
fdivr
call
xchg
repnz
xor
in
scas
insl
jge
icebp
push
ja
sub
or
arpl
sti
push
sub
xor
cmp
ret
and
insb
test
nop
out
mov
mov
sbb
out
fisttps
test
xchg
aaa
pop
cmc
popf
xchg
rorb
gs
jp
std
xchg
loope
int
or
popa
repz
xchg
mov
push
stc
jne
fiadds
arpl
jnp
dec
fistpll
cwtl
filds
xchg
jns
adc
lods
rol
sahf
loopne
jl
popf
ss
jp
adc
testl
jg
call
mov
sbb
add
dec
or
sbb
mov
mov
fs
xchg
dec
arpl
lcall
mov
rcll
and
push
xchg
popf
xchg
sub
sti
inc
sahf
push
loop
jecxz
lahf
cmp
out
mov
ds
add
xor
add
fwait
pop
dec
cli
iret
lret
loopne
cwtl
add
cld
stos
ret
adc
sbb
insl
dec
xchg
or
pop
and
imul
pop
jne
pop
xchg
mull
adc
sbb
jne
cmp
sub
aaa
add
inc
adc
push
stc
cwtl
jp
bound
cltd
jns
xchg
jbe
add
lahf
jl
pop
inc
mov
dec
mov
push
inc
ja
int
das
aaa
xlat
xchg
fstp
sub
fstpl
lahf
xchg
push
mov
add
imul
dec
daa
cmpsl
xlat
repnz
aad
sub
sbb
jno
test
xorl
jecxz
ss
mov
stos
out
mov
sbb
add
cli
cmpsb
xor
stos
inc
and
or
js,pn
jl
mov
pop
je
xor
pop
cmp
sbb
fadds
nop
add
add
adc
xchg
movsb
jg
std
or
and
int3
sub
dec
jl
jecxz
push
icebp
mov
inc
into
iret
in
das
imul
lea
sbb
xor
lahf
icebp
mov
ret
dec
outsb
pop
sarl
das
test
dec
popa
and
mov
and
pushf
aam
out
push
or
jl
inc
fildll
push
testl
out
ja
dec
ret
xor
xchg
call
int
test
int3
add
or
jo
pop
sbb
cwtl
mov
movsl
push
mov
fbld
add
negl
loop
add
jle
mov
cltd
jbe
sub
add
orb
stos
nop
push
xchg
push
push
jmp
call
and
mov
and
xchg
sub
mov
cmp
xor
pusha
enter
outsb
lods
and
nop
push
inc
out
or
jp
mov
jg
add
out
mov
cmp
add
or
test
push
pop
int
and
cmp
pushf
icebp
mov
pusha
call
in
arpl
cmp
xlat
pop
push
sti
fnstsw
aad
pushf
int3
pop
cmp
maskmovq
imull
sahf
xor
stos
ljmp
test
push
inc
sub
fdiv
aas
std
adc
and
or
sbb
mov
sub
iret
and
idivb
pop
push
and
es
fdivrl
jl
ljmp
insb
mov
cmc
out
sbb
pop
lahf
ljmp
inc
lods
pusha
and
or
lea
arpl
mov
push
fisttpll
mov
mov
test
lahf
es
orl
enter
test
repz
inc
scas
rorb
push
inc
in
test
sbb
and
add
and
mov
loopne
nop
mov
push
mov
xor
movsl
xchg
ds
pop
push
out
ret
outsb
scas
jl
or
xor
jp
xorl
cmp
mov
inc
imull
push
lret
lea
mov
in
icebp
lahf
sub
adc
clc
test
xchg
push
pop
mov
pop
rcl
nop
lret
out
add
stc
and
push
sub
sub
std
idiv
repz
xor
sbb
loopne
jl
push
sahf
pop
cmc
jecxz
gs
das
iret
push
repz
dec
sub
lods
jp
orb
cmp
sbb
dec
push
xchg
pop
stc
pop
push
lahf
dec
int
pop
add
js
mov
mov
dec
jo
add
lahf
mov
mov
adc
lods
push
jecxz
ja
mov
mov
and
jno
xor
movsb
popf
sbb
add
or
lahf
stc
lret
xchg
clc
adc
add
mov
mul
jecxz
mov
inc
movsl
or
aad
sub
iret
hlt
mov
clc
jge
xchg
cmp
mov
push
sub
loop
aaa
call
int
add
push
inc
addr16
push
cmp
dec
push
push
pop
inc
xchg
mov
xchg
add
xlat
cmp
cld
repz
into
callw
addb
add
es
xchg
dec
and
sbb
cld
cmp
mov
dec
xor
and
mov
jmp
push
or
or
add
sub
add
lcall
mov
add
test
mov
frndint
int
sbb
pop
push
push
xor
pop
ficomps
sbb
cmpsb
sbb
repz
pop
jecxz
repz
push
push
out
outsl
pusha
fiadds
dec
dec
and
jl
je
pop
or
adc
cltd
rol
iret
inc
jno
mov
jmp
addb
or
xchg
insb
int3
dec
push
xor
imul
iret
fisttps
add
pop
adc
sahf
add
xchg
mov
fdiv
mov
sub
push
pop
iret
jnp
inc
dec
mov
xchg
mov
int3
lret
mov
lea
xchg
pop
mov
fisttpll
cld
les
rclb
incb
fstps
pop
inc
inc
sub
stos
sub
stos
xchg
mov
fsubl
mov
call
repz
push
lea
aad
out
hlt
cld
cltd
mov
adc
hlt
andl
ret
test
or
inc
out
test
sub
cmp
outsl
add
dec
mov
jno
ffree
sbb
mov
xchg
cmpsl
in
push
jne
repnz
push
cld
sub
imull
push
je
jno
pop
repz
lods
movsl
dec
dec
orb
push
push
adc
inc
pushf
jo
or
cmp
jl
iret
inc
call
movsl
cmp
xor
sbb
cmp
xor
mov
bound
jno
repnz
das
or
es
std
mov
clc
into
lahf
fs
enter
idivl
mov
ficomps
xlat
adc
int
mov
ds
lahf
add
sub
call
enter
xor
scas
pop
pop
jp
shrl
adc
cmp
icebp
xchg
arpl
xchg
cmp
rclb
mov
adc
jge
js
mov
fs
sbb
mov
xor
mov
xor
pop
icebp
dec
outsl
scas
popa
hlt
add
scas
pop
insb
cmc
fstps
outsb
xor
push
xchg
cltd
dec
push
adc
cmp
add
stc
sub
dec
insl
jle
pop
in
sahf
adc
test
pop
push
ss
jno
int
testl
mov
out
dec
test
test
mov
or
aaa
gs
jg
inc
mov
scas
mov
add
mov
rorb
sti
cmp
mov
lahf
or
scas
and
mov
sub
xchg
sub
daa
pop
add
sub
add
xor
lds
dec
adc
into
fnstsw
pop
sub
in
mov
jmp
jne
jecxz
pop
movsb
pop
std
scas
sub
sbb
mov
stc
js
add
sbbb
mul
add
add
jnp
ljmp
out
int
cmp
cmp
scas
insl
push
mov
mov
test
and
adc
jo
jge
div
adc
shlb
popf
pop
rolb
dec
fwait
rcll
jp
add
stc
pop
call
sbb
cmp
jne
jb
push
inc
cld
test
mov
push
and
or
insl
dec
movsl
mov
pop
out
aam
sbb
popa
xchg
mov
inc
mov
lcall
sub
sbb
out
xor
shll
out
push
mov
aad
inc
inc
mov
xchg
and
xor
inc
sub
pop
out
push
popa
or
mov
in
sti
or
outsl
push
jge
xor
or
mov
add
cmc
pop
imul
sti
fcomps
cmp
or
out
xor
adc
sub
jnp
fs
sbb
test
pushf
add
cmp
push
in
dec
dec
or
sbb
adc
stos
mov
pop
jl
sub
data16
push
xor
pop
into
leave
push
jbe
int
xor
movsl
pop
outsl
leave
mov
inc
movsb
mov
pop
std
and
and
pop
movsb
insb
pop
sahf
push
addr16
mov
out
cmp
filds
popf
dec
inc
jge
js
xchg
dec
nop
dec
adc
movsl
out
in
mov
dec
lahf
fwait
cmp
lahf
inc
xchg
or
cmp
jns
adc
push
cmp
mov
pop
jns
aad
pop
mov
inc
inc
ret
add
dec
and
add
add
xorb
repz
push
mov
es
or
mov
sbbb
adc
or
push
jo
in
push
adc
popa
mov
cld
mov
xchg
aad
mov
ret
sbb
pop
data16
fisubl
cmp
ret
jg
fincstp
cli
insl
add
add
push
icebp
adcl
fwait
daa
add
or
xor
fwait
jne
or
insb
inc
fidivrl
scas
aad
push
push
bt
mov
test
or
stc
lea
or
cltd
xor
iret
sbb
inc
subl
cli
xchg
mov
pmullw
xchg
mov
push
push
lcall
adc
mov
ljmp
leave
sub
mov
lahf
sbb
mov
mov
xchg
test
fimull
das
push
repz
push
ret
pop
imul
imul
rclb
pop
push
mov
pop
dec
add
pop
cmovnp
icebp
mov
enter
and
movsb
subb
cmpsb
aas
adc
in
test
xchg
jmp
je
sbb
adc
pusha
adc
and
mov
push
push
sbb
cli
clc
sbb
xchg
stc
mov
push
and
jl
pop
or
sar
inc
test
in
cmc
icebp
pop
lahf
add
cmp
icebp
and
cmp
es
cmc
mov
cld
push
add
xorb
jecxz
in
xchg
std
mov
pop
mov
dec
lahf
lds
cli
cmp
test
call
and
xchg
inc
xchg
ffreep
pop
lea
sub
cmp
popa
scas
and
test
cmp
sub
adc
or
push
enter
mov
xchg
addl
imul
in
cli
rolb
fwait
inc
ds
or
movsb
js
out
rcrl
sbb
jp
pop
int
add
daa
pusha
mov
or
scas
or
xchg
mov
popf
sub
std
inc
lock
mov
std
addb
mov
lods
shr
and
add
es
push
or
inc
adc
jle
int
push
xor
jg
cmpsb
sub
xchg
jae
dec
and
mov
das
push
shrb
std
enter
pop
loopne
add
add
out
scas
test
push
or
mov
add
pop
cmp
inc
xchg
cmc
sub
dec
add
cld
jecxz
mov
mov
dec
pop
xchg
je
xor
fldenv
xorb
dec
mov
or
and
adc
dec
sub
cs
adc
pop
das
xor
dec
lock
mov
lods
out
inc
enter
sti
add
xchg
or
das
mov
lea
movl
adc
mov
dec
lahf
inc
in
add
xor
sub
add
sbb
dec
mov
rclb
inc
inc
xor
cmp
pop
push
xchg
xor
nop
cli
push
out
in
push
jl
std
dec
mov
or
cmp
cmp
sbbb
cmpsb
jb
test
adc
bound
aaa
int3
sbb
add
jae
dec
nop
push
in
dec
ret
outsb
dec
pushf
sbb
jge
adc
ficoml
out
jp
xchg
call
fisttps
lods
or
loopne
adc
lds
inc
and
cmp
aad
xor
movsb
sbb
cmp
dec
and
and
or
mov
mov
rclb
add
add
dec
add
adc
cmp
imul
sahf
loope
mov
dec
push
pop
push
push
test
adc
dec
jle
cmp
xor
cwtl
popf
add
sti
int3
aad
aas
adc
push
int
repnz
sbb
add
in
and
pop
pop
xchg
inc
movsl
sti
mov
fwait
adc
and
test
pop
add
bound
cmp
lds
retw
pop
cld
sub
pop
mov
cmp
xchg
movsb
cmp
jne
aaa
xchg
jg
test
add
stos
and
inc
sti
adc
mov
sbb
lods
nop
jl
adc
push
sbb
xchg
sub
pop
and
adc
jecxz
outsl
and
mov
push
enter
mov
jecxz
roll
inc
out
sub
adc
pop
or
inc
daa
lods
cwtl
push
pop
ret
cmp
xor
pop
push
stos
inc
sbb
ja
pop
lods
xor
jecxz
jne
adc
dec
cwtl
pop
sbb
jmp
mov
fldt
ret
jmp
shr
xchg
lret
xor
mov
scas
cmp
xor
sbb
pushf
mov
push
dec
cmpsl
test
ret
mov
into
and
stc
les
xchg
xor
popf
out
sub
nop
mov
fwait
das
mov
add
or
mov
pop
push
xor
pop
and
in
push
and
adcl
mov
sti
negl
iret
lahf
lcall
mov
sbb
leave
cmp
cmp
and
cmc
pusha
pusha
mov
xchg
sti
push
cli
mov
fldl
xor
idivb
lock
es
jle
push
int
pushf
sbb
std
lea
out
xor
jl
outsb
adc
imul
in
dec
lods
lock
cli
icebp
xchg
sbb
pop
mov
adc
xor
addb
and
mov
pop
xchg
mov
arpl
sub
mov
add
xor
lahf
testb
push
jne
enter
out
jle
xchg
mov
ds
add
push
int3
push
cmp
out
mov
adc
jns
and
cld
popf
cmp
jno
loop
sub
push
adc
dec
and
or
inc
test
lds
sbb
push
fists
dec
adc
pop
scas
jl
jmp
push
xor
inc
out
cmp
pop
das
xor
arpl
nop
xlat
or
fidivrs
lock
sti
adc
or
mov
popl
or
iret
pop
out
cld
cmp
adc
repz
stos
imul
test
jbe
inc
dec
ficompl
test
and
sti
dec
lret
add
icebp
test
pop
outsl
and
in
jno
fs
insl
sbb
mov
sub
hlt
iret
adc
pop
push
fistpl
jno
mov
insb
and
cmc
mov
lcall
sbb
xor
pop
dec
dec
cmc
lea
xor
cs
lahf
sub
or
sti
repz
outsb
and
jne
movsl
ljmp
cld
dec
push
pop
outsb
inc
inc
push
mov
jge
or
gs
lret
std
jecxz
stos
xor
and
pop
xchg
scas
and
fsub
jg
jmp
mov
lods
pop
dec
add
push
into
fsubr
lods
or
or
movsb
mov
faddl
fmuls
stos
lods
stos
in
pop
mov
in
outsl
adc
add
sub
rolb
test
add
int3
add
adc
aad
sahf
mov
test
pushf
mov
testb
or
adcb
shll
mov
inc
daa
rolb
and
mov
add
movsb
and
ds
int3
fxsave
sub
sub
push
popf
or
push
fisttpll
pop
lods
jl
les
cwtl
inc
push
or
popf
and
test
and
out
fistl
negb
pop
mov
movsl
pop
lret
push
nop
pop
inc
sub
iret
shll
cmp
adc
add
push
mov
mov
sub
fistpll
mov
push
lahf
subb
out
outsl
addl
mov
movsl
enter
hlt
jl
pop
movsb
dec
rcrb
mov
popa
push
icebp
ds
pop
scas
pop
dec
pop
inc
push
mov
inc
mov
xor
sbb
jae
movsb
add
xor
adc
or
xchg
push
sub
shll
inc
add
push
add
ljmp
insb
shll
in
std
dec
push
lods
push
orl
cmp
test
or
outsl
inc
scas
loope,pt
iret
cmpsb
mov
xor
xchg
mov
mov
mov
dec
sbb
pop
test
add
mov
cmp
pop
lea
stc
fcomip
and
pop
test
mull
iret
adc
aam
les
fistpll
pop
notl
gs
push
mov
mov
add
xchg
rcll
cmp
pop
sub
xor
xor
inc
mov
pushf
cs
sbbl
cmpb
stos
xorl
fimuls
ds
jmp
inc
jae
subb
mov
fisubs
ja
add
pop
cmp
cld
jmp
dec
xchg
call
nop
inc
fstp
mov
xor
fcomps
push
jne
dec
push
add
xor
add
test
sarl
push
and
je
inc
popa
test
cmp
pop
out
in
gs
and
push
frstor
int
xor
jnp
movsl
fwait
xor
lret
in
loope
inc
or
shll
inc
push
inc
mov
orb
mov
mov
outsl
hlt
mov
add
or
adc
addb
sub
adc
lods
insl
sub
pop
mov
cmp
dec
cmpsb
add
pop
lds
sbb
or
fucomi
ret
push
je
dec
aas
idiv
mov
add
call
mov
repz
jae
sub
movsl
xor
addr16
into
jl
or
mov
fcoml
add
inc
test
push
mov
insb
loop
in
fisubs
cmpsb
cmp
fchs
or
dec
rorl
repnz
outsb
nop
out
jle
inc
add
or
pop
loope
mov
hlt
mov
xor
push
add
scas
hlt
lret
mov
enter
cmp
inc
mov
es
in
wbinvd
cmpl
in
push
sbb
mov
dec
cmpsl
inc
pusha
rcl
push
mov
push
nop
int
pop
pop
icebp
inc
mov
inc
and
mov
push
fimuls
mov
cmp
add
fnsave
mov
or
pop
jmp
test
mov
les
pop
popa
push
loopne
aam
push
movsb
sbb
or
pop
sbb
xchg
cltd
inc
sbb
incb
xor
push
pop
mov
mov
add
stos
push
sub
mov
sbb
inc
or
popf
inc
dec
mov
cltd
loope
mov
icebp
std
mov
lahf
or
scas
pop
rorl
push
pop
rcll
or
fldl
mov
shlb
jns
dec
sahf
push
lret
xor
repz
pusha
aam
out
push
xor
mov
lret
push
add
add
les
out
adc
add
dec
push
dec
loopne
xchg
nop
enter
pusha
outsb
mov
bound
cli
push
pop
add
dec
jg
adc
mov
pop
dec
testl
sub
stos
dec
or
lret
pop
cltd
xchg
add
add
add
movsl
sbb
fninit
nop
rolb
cmp
cs
or
lahf
and
xchg
and
inc
stos
shlb
dec
adc
mov
mov
sar
pop
int3
sbb
shrb
call
jge
cli
and
jl
jle
sbb
cmp
fs
insb
push
sarl
mov
push
jne
inc
jg
xchg
push
jmp
pop
sub
dec
cmc
adc
cs
pop
movsb
and
jl
adc
or
popa
adc
lret
stos
test
mov
pop
mov
and
mov
dec
sub
rolb
jmp
cs
adcl
daa
idivl
cmc
fsts
shll
mov
adc
das
sub
jae
idivl
mov
out
or
mov
test
sarb
jno
fwait
cmc
mov
mov
mov
push
or
fidivrl
pop
jp
sti
pop
lret
into
repz
and
les
sbb
push
inc
sbb
dec
push
lahf
aas
dec
xor
mov
aas
arpl
int
sbb
pop
adc
lea
add
ret
inc
call
icebp
push
bound
test
cs
pusha
aaa
xchg
or
lock
cmpl
add
xor
in
inc
lods
mov
cmp
adc
out
mov
and
int3
dec
jnp
pusha
fdivr
or
dec
jg
pop
ret
test
int3
cmc
int
or
out
sbb
mov
push
mov
jp
lods
popa
mov
shrb
pop
popf
push
filds
cmp
jmp
cmpsl
adc
repnz
pop
dec
dec
add
xor
test
in
dec
push
stos
cli
data16
push
lock
xor
add
cld
data16
mov
xlat
cmc
dec
and
cmp
push
sub
nop
dec
xor
addr16
mov
test
nop
movsb
lds
sbb
sahf
sub
or
push
mov
and
sbb
fisttpll
in
mov
or
pop
out
aam
xor
and
and
iret
adc
push
int3
add
mov
adc
dec
shll
cli
inc
fistpl
test
lret
pop
dec
dec
xor
xor
and
dec
das
rorb
mov
jl
mov
int3
flds
pop
je
fisubl
fadds
rol
push
test
mov
shll
out
outsb
clc
test
or
icebp
cmpsl
sbb
push
xchg
jnp
testb
or
add
int3
mov
pop
add
fisttpl
test
mov
mov
jp
mov
dec
add
test
push
pop
pop
aas
ljmp
test
jg
add
in
push
pop
xchg
xor
dec
add
mov
xorb
pushf
nop
push
jbe
cwtl
int
push
pop
cmp
jbe
and
jb
sub
movsb
sub
ret
scas
fdivl
jl
push
xlat
int
xor
xor
adc
push
cmc
ljmp
sbb
pop
out
add
cmp
setle
mul
or
adc
xchg
enter
jno
dec
add
test
insl
lret
jp
push
jmp
and
dec
push
dec
sub
pusha
jl
sub
push
cmp
iret
rol
mov
stc
lock
js
push
int3
dec
mov
jnp
sub
int
lahf
sahf
adc
jno
inc
xlat
sub
movsl
leave
xlat
add
cmp
unpcklps
jl
mov
push
jg
cwtl
mov
jl
orl
push
movsb
xchg
mov
popl
cmp
xchg
test
xchg
mov
or
push
push
fwait
inc
add
sbbl
mov
inc
adc
out
pop
pop
dec
add
out
sub
fstps
push
cmp
add
mov
sbb
ds
jl
and
push
xor
or
adc
sbb
imul
and
mov
mov
out
pop
dec
push
push
popf
stos
aas
mov
fdivrl
adc
push
sub
int
movb
or
push
push
lock
xor
fidivs
adc
test
mov
lods
fadd
out
push
int
xor
das
jb
push
and
sub
cli
and
add
dec
lret
cmp
mov
sbb
das
inc
adc
xchg
sbb
pop
inc
mov
and
es
adc
sbb
inc
nop
in
xor
sub
lods
inc
inc
icebp
outsb
popa
or
cmpsl
inc
lea
sbb
push
int
add
dec
lods
sbb
adc
into
bound
mov
enter
cmp
jae
add
inc
mov
jl
pop
loop
pop
mov
inc
add
push
iret
shlb
pop
test
xchg
cmp
dec
pusha
mov
mov
mov
stc
adc
aas
jmp
pop
and
dec
add
dec
addr16
xor
adc
pop
popf
decb
push
add
call
movsl
imul
jns
and
and
push
imul
icebp
jg
mov
inc
sbb
enter
mov
cmp
jmp
pop
std
cwtl
dec
push
mov
xchg
pop
mov
cld
inc
jne
pop
fst
jb
cmovs
xor
add
ds
fdivrl
push
push
repz
test
or
sbb
js
inc
xchg
push
sti
cmp
lds
pop
cwtl
sub
cwtl
dec
dec
adc
push
cltd
add
pop
dec
and
std
sub
iret
stc
rcll
xor
or
add
cld
lea
in
push
imul
rcrb
sbb
cmp
or
push
in
pop
inc
push
lock
movsl
and
insl
mov
sbb
push
dec
mov
xchg
cmc
sbb
push
sub
jl
adc
or
push
dec
mov
inc
pushf
scas
and
cli
inc
hlt
pop
iret
push
add
push
aas
and
mov
dec
mov
push
repz
cmp
insl
mov
pop
imul
add
sbb
dec
scas
cli
mov
rcrb
or
out
ss
cli
enter
cmp
mov
pop
or
ds
fistps
imul
mov
je
dec
ret
or
sub
mov
push
cs
aas
es
pop
iret
and
sbb
out
and
jecxz
out
adc
sbb
call
dec
incb
aam
inc
sahf
xor
dec
xchg
lret
adc
jle
sub
cmc
push
xor
jns
pop
mov
or
xchg
call
sub
push
movsb
dec
cmove
adc
jge
test
lea
sbb
cs
xor
dec
lods
mov
int
add
test
and
inc
push
adc
movsb
push
cmp
xor
inc
icebp
sub
mov
xor
mov
adc
sti
jae
in
cmpsl
inc
insb
push
pushf
pop
test
xchg
int3
xlat
jae
enter
mov
push
lcall
popf
fcoml
jl
xchg
inc
dec
cmpsb
lock
je
int
mov
aam
invd
call
pop
cmpsl
mov
pop
hlt
dec
and
lahf
and
or
push
scas
xlat
loope
rorb
out
xchg
scas
lea
sbb
dec
rorl
jb
lahf
cmp
and
cmp
cmp
or
xor
lahf
fs
fistps
les
mov
out
pop
sub
mov
add
jge
nop
push
or
adc
cmp
xchg
dec
stos
sub
jle
repz
push
xchg
add
add
xor
inc
iret
leave
jle
iret
add
mov
fbld
inc
inc
cwtl
dec
inc
cli
je
pop
dec
jl
cltd
aas
dec
test
mov
inc
shlb
and
in
mov
es
xchg
lea
cmc
popf
les
add
sbb
movb
pushf
xor
sub
and
out
mov
and
shll
cld
inc
xchg
call
outsb
mov
sbb
mov
dec
stc
cli
and
sbb
mov
xor
pop
xchg
xlat
std
mov
mov
mov
inc
movsl
lea
je
cld
inc
jno
push
pop
jne
inc
sahf
or
cmpsb
outsl
jno
test
push
xchg
add
mov
test
jb
test
dec
push
loop
add
test
xchg
push
and
lret
dec
aam
pop
dec
inc
test
inc
subb
mov
adc
add
test
dec
inc
mov
xor
xor
sahf
cli
xchg
inc
xor
test
push
pop
dec
outsl
mov
les
test
cwtl
adc
xchg
xchg
push
dec
xchg
xor
pop
cmp
mov
arpl
sub
cmc
test
pop
dec
mov
push
enter
xchg
bound
inc
pop
and
cmp
dec
dec
cmp
mov
les
adc
stc
cwtl
sbb
shrb
xchg
out
push
out
adc
push
cmp
fbstp
pop
pop
xor
sub
mov
add
aas
jmp
lods
stc
and
icebp
rol
jge
pop
orb
scas
andb
imul
data16
lahf
outsl
mov
mov
mov
fbld
nop
lahf
sbb
sbb
addr16
call
mov
movsb
negl
aam
enter
scas
outsl
cld
cmp
pop
in
mov
inc
cmp
incl
fcoml
jge
pop
popf
mov
jecxz
inc
xor
repnz
movsb
mov
lret
mov
int
cli
dec
mov
cmp
cmp
jbe
addb
iret
pop
repz
iret
dec
ret
les
or
mov
shll
lods
inc
pop
mov
inc
push
xchg
std
mov
stos
inc
pop
push
or
xchg
mov
mov
stos
pop
pop
mov
lock
enter
mov
pusha
and
or
pusha
scas
inc
pop
sub
add
xor
lret
push
outsb
popa
jns
inc
fisubrs
stc
gs
add
in
cli
sub
lcall
test
push
sbb
inc
inc
xor
pusha
sub
cmp
push
not
or
movsl
cld
frstor
mov
rcrl
mov
and
cmp
ret
mov
push
jb
xor
sub
add
adc
ss
adc
cmc
outsb
arpl
push
sbb
or
insb
adc
rcrb
push
pop
xchg
mov
mov
mov
mov
popa
xorb
jno
test
fs
xor
fsubrp
mov
into
push
sub
adc
and
in
ljmp
jo
dec
pop
dec
mov
into
daa
sub
or
push
aas
add
js
in
stc
scas
push
call
push
sti
xor
stc
xchg
and
pop
sub
adc
test
push
inc
and
push
popf
or
outsb
push
dec
sbb
pop
ljmp
sbbb
sbbl
sbb
movsl
sbb
sbb
push
popa
pop
push
nop
fwait
push
push
rolb
sub
ret
cmp
sub
sarb
lret
nop
pusha
stos
push
nop
mov
cmc
leave
sub
ja
popf
jg
repnz
and
mov
cld
sub
sub
or
push
data16
inc
movsb
movsb
test
cmp
filds
mov
jb
jl
mov
add
cld
into
and
push
push
sbb
pop
in
adc
cwtl
dec
push
aad
adc
jns
jae
out
unpcklps
das
cmp
dec
pop
lcall
jb
xchg
mov
jecxz
or
mov
lahf
int3
shll
and
push
aam
and
pop
cmp
cmc
add
lret
push
call
xor
adc
insb
scas
inc
adc
fbld
ss
rorl
pop
popa
jecxz
pop
dec
adc
movsl
lcall
fnstenv
push
fs
pop
enter
pushf
push
das
fdivrl
pop
and
dec
ds
cmova
cmp
loopne
or
adc
xchg
lea
jg
outsl
dec
xor
cmp
bound
outsb
jle
inc
xor
in
inc
fs
test
loope
mov
mov
nop
fsts
les
adc
and
dec
pushf
mov
in
icebp
sbb
pop
push
jecxz
int
xchg
nop
rcrb
int
lods
cs
call
roll
ds
push
cmp
subb
sub
shll
pop
jle
ror
dec
rcll
lahf
xchg
xchg
inc
pop
add
push
inc
nop
mulb
cmc
pop
push
je
jo
les
lcall
xor
mov
cmp
pop
dec
dec
adc
test
enter
sete
scas
ljmp
dec
xor
jl
push
dec
in
pop
sbb
cs
xor
dec
les
push
pusha
or
scas
pop
shrl
test
aam
and
pop
sbb
test
in
dec
cmp
and
jge
das
scas
inc
mov
sub
cs
popa
add
sbb
scas
jg
repz
mov
dec
lret
call
or
pop
iret
fcomps
testl
repnz
adc
or
mov
ja
lods
divb
jmp
dec
xchg
cmp
call
sub
movsl
icebp
popf
hlt
mov
cmp
fmull
adc
int
add
pop
and
inc
mull
push
and
push
adc
pop
imul
add
fld
mov
and
ja
inc
cmp
push
mov
jo
inc
jge
and
xchg
push
sub
dec
mov
ljmp
lods
inc
mov
test
insb
pop
push
dec
push
ljmp
push
jmp
xorb
fiadds
adc
cmpb
sub
add
add
cmp
mov
inc
add
jns
in
pop
dec
cli
outsb
popf
cli
stos
dec
jecxz
and
push
lock
adc
adc
loop
loop
jb
inc
mov
lock
test
fsubrl
mov
sbb
movsb
mov
inc
pusha
negl
iret
xor
jb
cmp
in
out
add
or
fstpt
gs
cld
loopne
fdivrs
pop
outsl
int3
inc
jle
call
inc
sub
mov
cmp
call
stos
jae
dec
inc
sub
pop
jl
or
iret
or
and
adc
dec
sbb
sbbb
adc
addb
cmp
sahf
cs
clc
jns
test
xor
in
icebp
add
jl
test
shl
testl
aas
sahf
imul
mov
pop
push
add
and
ret
push
imul
mov
jns
push
lahf
mov
scas
and
and
sub
inc
sub
shlb
cltd
outsb
xchg
idivb
fidivl
dec
iret
ljmp
mov
jbe
push
xlat
insl
push
jp
pop
pop
add
testb
lock
dec
ljmp
aad
mov
mov
cmp
arpl
pop
cmc
in
je
movsl
add
pop
cli
xor
sbb
insl
int3
add
or
sbb
gs
xchg
cmpsb
mov
ficoml
lret
or
cli
xorb
mov
popf
and
adc
int
push
iret
fimull
jmp
mov
xchg
mov
jo
or
pushf
adc
int3
out
lret
cwtl
pop
shl
add
adc
xchg
mov
and
cmp
push
sub
push
dec
jmp
inc
dec
or
sbb
cmpsb
pop
cmpl
dec
adc
cld
jl
mov
jb
mov
and
aas
dec
pop
ds
iret
pop
inc
mov
call
cs
imul
lods
jae
jnp
adc
sbb
stos
xchg
inc
int3
ss
pop
fnstcw
push
ja
sbb
addr16
and
enter
fsubs
xor
xadd
add
jecxz
pusha
push
inc
stc
rclb
push
xchg
add
rcrl
mov
mov
mov
adc
xchg
dec
lods
mov
mov
insb
xor
sbb
sbb
adc
ss
loop
adc
dec
lret
lea
mov
imul
inc
popf
add
int
sub
shr
lahf
test
xchg
xor
stc
popa
mov
mulb
popf
pop
rcll
jge
movsl
sub
jns
sbb
dec
and
sub
dec
cmp
push
ds
pop
xor
add
jo
int3
std
test
into
ret
inc
cmp
pushf
xchg
hlt
out
out
out
and
push
mov
hlt
cmc
rclb
or
mov
jecxz
sahf
inc
mov
sbb
jg
xor
jo
scas
aas
pop
icebp
cmpsb
lock
in
mov
les
les
in
mov
push
and
adc
or
mov
sbb
push
inc
inc
jbe
xchg
aad
mov
and
push
sub
out
mov
cld
pop
inc
dec
dec
mov
sahf
sbb
test
dec
dec
mov
and
gs
repnz
jmp
xchg
es
cmc
dec
mov
inc
and
data16
out
adc
or
add
rol
std
rcr
sub
inc
mov
aad
push
jl
jns
sub
cwtl
add
jp
popa
mov
stos
fisubs
jg
addr16
outsl
inc
mov
lret
dec
outsb
aam
notl
fdivrs
mov
je
addr16
sahf
adc
fsubs
repz
or
outsb
push
lock
jno
fldz
mov
add
jno
jmp
cmc
jp
cmp
ss
jle
adc
pop
in
add
test
int3
pop
or
cmp
dec
pop
stos
cmpsb
pop
sub
inc
mov
scas
mov
adc
mov
outsb
subb
pushf
or
push
or
sub
or
gs
je
sub
push
pushf
or
sbb
and
repz
pop
shrb
out
sbb
xchg
push
and
adc
popf
push
orb
add
jno
lahf
cmpsb
mov
xor
xchg
ss
fmull
sub
loopne
rcll
test
out
test
jbe
inc
lods
pop
cmp
xchg
mov
pop
add
sbbl
sbb
and
inc
test
pusha
xchg
pop
xchg
int
push
adc
and
sub
lahf
ss
jg
mov
push
inc
mov
adc
adc
xchg
insb
movsb
mov
pop
xor
test
rolb
adc
test
or
repnz
push
fiaddl
mov
xchg
shrl
fnstsw
inc
or
mov
testl
movsl
dec
xchg
sbb
mulb
xchg
adc
dec
inc
daa
cwtl
pop
mov
in
sbb
popa
lds
dec
and
subb
mov
imul
and
and
add
out
jnp
movsb
jl
jne
sub
std
sub
sbb
pop
inc
mov
fists
pop
xlat
loope
cmp
mov
pop
ja
pop
es
inc
mov
dec
lea
xor
or
adc
push
movl
sbb
filds
adc
les
shr
sub
cmc
push
add
dec
adc
sub
out
cwtl
xchg
dec
out
cs
cld
mov
jne
mov
sub
jecxz
rcll
mov
pushf
sarb
jg
jo
shrb
or
adc
mov
fimull
int
mov
loope
adc
or
out
and
out
lods
rol
sbb
outsl
adc
add
and
pop
xchg
cmp
mov
dec
outsb
push
fidivs
pop
movsl
xchg
ret
cmp
ficompl
popf
dec
imul
in
add
fs
cwtl
jne
es
out
push
sbb
xlat
sbb
test
dec
in
imul
sub
int
ljmp
xor
fwait
repz
mov
cmp
pop
jne
mov
dec
and
mulb
inc
xchg
mov
loopne
and
push
dec
push
out
mov
mov
sbb
push
lea
dec
and
pop
call
xchg
dec
ja
js
mov
pop
mov
aas
xor
stos
pop
ljmp
or
xchg
xchg
test
add
pop
mov
adc
add
inc
mov
push
faddl
adc
lea
mov
movl
and
mov
pusha
test
ret
ljmp
xchg
sub
and
sbb
imul
mov
xlat
adc
inc
ret
stos
test
mov
push
cli
dec
test
adc
sub
push
xor
sbb
pop
out
or
xchg
adc
and
int
add
add
sarb
jge
sarl
or
clc
jae
inc
sahf
push
sub
sub
add
iret
std
mov
stos
movsl
sahf
cmp
inc
jl
out
sub
mov
mov
push
push
call
mov
daa
inc
cmp
jl
aad
sbb
into
push
stos
push
push
ja
mov
lods
sub
lahf
or
jo
xor
jo
push
push
sub
lods
fwait
mov
mov
fcoml
outsl
jecxz
stos
les
jnp
jmp
inc
ret
mov
sahf
sahf
inc
fisubs
inc
xchg
and
xchg
pop
add
sub
inc
iret
mov
lret
xchg
mov
or
jb
add
out
jns
adc
insl
adc
call
push
jb
jmp
out
pop
sub
sarl
scas
movsbl
inc
push
pop
mov
int
cmc
bound
aad
fwait
jno
ljmp
sbb
mov
sub
fdivrp
xchg
mov
mov
push
mov
dec
mov
push
and
ljmp
sub
test
roll
aas
push
or
and
lahf
test
push
mov
std
nop
cld
das
lret
jbe
negb
int3
push
xchg
out
out
or
ljmp
pop
dec
sbb
dec
pop
movsb
mov
jns
and
stos
or
cs
pop
adc
lahf
lea
adc
notl
or
rorl
cmp
jno
mov
lds
push
xchg
and
cmp
lods
cmpsl
sub
xor
mov
stos
fnstenv
push
nop
dec
cs
sub
xor
mov
mov
sub
or
fucomi
dec
push
push
push
ss
sbb
movsl
push
xor
pop
push
pop
mov
adc
in
dec
repz
push
lcall
add
cs
pushf
xchg
or
icebp
cmp
sbb
inc
test
fs
pop
push
mov
adc
inc
push
sub
xchg
or
aam
lea
pop
pop
xor
cld
adc
fldenv
scas
in
jg
call
movsl
and
xor
inc
cs
les
sub
jne
or
push
or
xor
inc
sti
notl
test
scas
fwait
into
jae
adcb
std
cmpb
test
pushf
xor
xor
bound
and
insb
push
mov
or
cmc
mov
clc
int3
fs
lahf
jp
shll
dec
lret
xchg
cmp
mov
dec
mov
pusha
xchg
xchg
inc
adc
cmp
icebp
sub
cld
adc
aad
aaa
mov
inc
pushf
jne
pop
scas
and
inc
inc
mov
loope
lret
dec
jl
mov
addr16
cmp
sbb
cmp
dec
and
mov
fidivs
cmp
loopne
inc
insb
add
xchg
aad
dec
and
dec
aam
push
mov
mov
aam
push
stos
pop
les
push
cmpsb
push
test
sub
inc
xchg
xlat
jp
push
mov
fdivs
add
xlat
pop
push
pop
mov
and
mov
mov
cltd
or
pop
sti
test
rcrb
cmp
xor
rclb
push
lret
jo
mov
inc
popf
pcmpeqw
lea
or
xchg
or
mov
sbb
push
mov
or
sub
and
mov
loop
and
add
mov
icebp
inc
xor
filds
pop
sahf
int3
mov
mov
dec
mov
and
insl
icebp
mov
int
aaa
cmp
and
aas
inc
pop
jmp
adc
cs
out
mov
mov
cmpsl
jl
fimuls
pop
xor
inc
frstpm(287
jne
in
sub
lahf
outsb
sub
stc
bnd
nop
dec
add
stos
icebp
fs
xlat
and
inc
mov
push
js
lds
lret
push
mov
lea
xchg
lahf
js
mov
ljmp
push
nop
icebp
dec
sahf
seto
sub
or
insl
or
mov
lcall
dec
rolb
testb
push
sbbl
mov
stos
lods
call
std
jecxz
pop
ret
xchg
and
sub
push
cmp
mov
push
out
push
out
rcl
ljmp
faddl
dec
enter
xorl
jge
rorl
std
xchg
fwait
or
mov
mov
std
shrl
pop
imul
cmp
in
int
fisubrl
cmpsb
jp
push
dec
cmp
pushf
pop
mov
sbb
inc
jae
lods
xor
mov
mov
jg
add
cmp
scas
neg
push
aam
mov
gs
dec
lahf
adc
loope
inc
repz
out
iret
cltd
lahf
cmp
mov
adc
jecxz
dec
fnstsw
imul
jne
cs
pop
or
iret
data16
mov
mov
dec
jns
ret
bound
imul
out
les
pop
aam
inc
inc
in
mov
xor
inc
sub
pusha
into
int3
xchg
icebp
mov
rorb
mov
test
push
cmpsb
xorb
dec
dec
jns
mov
data16
hlt
jp
inc
inc
outsl
mov
jo
mov
inc
jl
icebp
inc
sbb
push
in
inc
mov
inc
bnd
jb
ljmp
pop
pop
loop
push
es
add
inc
dec
int3
imul
and
sub
xor
mull
mov
sbb
pop
jg
push
ficoms
nop
xchg
scas
test
loop
outsl
xchg
xor
mov
rcrl
xlat
paddsw
mov
inc
pop
cmp
cmc
in
add
adc
adc
add
stos
mov
ljmp
xor
mov
push
pop
inc
cmp
or
push
cld
pushf
mov
or
mov
shrl
ret
test
int3
stos
gs
inc
roll
inc
out
out
std
subps
or
mov
jmp
mov
mov
xor
and
loope
in
inc
hlt
mov
and
pop
fbld
dec
adc
or
jno
fsubs
jmp
mov
movsb
lods
adc
mov
rorl
fcoml
int
lret
and
cmp
mov
add
xor
sub
push
sarl
pop
xor
dec
mov
es
jbe
sbb
xlat
subb
shlb
cmp
shrl
pop
mov
gs
xchg
in
push
out
dec
xor
add
popa
popf
jp
mov
inc
xchg
inc
lods
inc
sub
inc
jo
rcrb
add
pop
out
add
sub
mov
sub
inc
adc
push
inc
pop
adc
and
fwait
push
cmp
mov
pop
jbe
jo
mov
sub
movsb
adc
lret
push
sub
xlat
sbb
push
mov
out
stos
inc
adc
mov
or
dec
ljmp
inc
pop
sbb
xchg
shrl
mov
shl
sub
push
sbb
int
pop
std
adc
sti
xchg
xchg
inc
sbb
push
mov
and
insl
lea
jnp
cld
bound
jp
jg
stos
addr16
xchg
inc
stos
shlb
in
stos
testb
mov
shl
loopne
cmpsl
gs
in
dec
cmp
dec
shll
test
pop
pop
mov
pop
ds
jnp
sub
orb
frndint
inc
call
or
sub
add
movsl
and
movsb
cwtl
ds
stos
pusha
fldl
jl
jb
out
add
pusha
ret
stos
mov
adc
repz
adc
sbb
cmp
and
or
movsb
jne
cmpsl
test
inc
cmpl
movsb
cwtl
int
xchg
dec
les
scas
pop
adc
mov
and
out
or
add
mov
mov
imul
in
cmp
dec
mov
out
rol
mov
insb
push
mov
ret
mov
mov
ss
orl
lahf
add
jmp
dec
jb
inc
push
out
cmp
and
adc
sti
mov
es
mov
add
xchg
testl
ficompl
inc
es
ror
inc
sub
inc
daa
mov
outsb
mov
test
or
push
in
mov
xlat
ficompl
cwtl
clc
js
out
jle
int3
in
mov
aas
dec
mov
dec
lahf
sub
mov
push
rep
call
xlat
mov
mov
push
dec
sarl
lcall
inc
mov
mov
sub
jle
pop
pop
sbbb
hlt
int
xchg
lods
lds
sub
pop
sub
jbe
xchg
outsl
fildl
xor
inc
cmpsb
inc
sbb
test
and
push
nop
call
push
adc
lock
xor
jg
js
push
test
push
lock
lahf
sub
movsl
and
movsb
jg
and
insb
adc
daa
mov
sti
sub
mov
push
movsl
sbb
push
lahf
mov
jb
mov
xchg
pop
or
enter
add
xchg
stos
sub
mov
repz
xor
cs
jmp
fdivs
and
movsl
adc
xchg
mov
je
sub
fadd
adc
pop
jl
xchg
leave
inc
sub
cld
add
daa
in
lods
rolb
nop
clc
xchg
fwait
pop
rol
loop
lahf
push
mov
cmp
push
sub
lds
push
stc
pusha
cmp
inc
stos
sbb
xchg
int
cli
and
dec
out
xor
cmp
divl
sbb
xchg
movsl
inc
add
xor
mov
mov
or
mov
pop
push
lods
mov
xchg
imul
jo
cmp
cmpsb
sbb
fsub
call
sub
stc
push
lret
icebp
inc
and
xchg
hlt
ret
push
and
das
pop
fisubs
push
insb
test
popf
xor
das
xor
xchg
xor
popf
into
enter
xchg
scas
jge
icebp
fisttps
or
xorl
rorb
stc
iret
push
jg
sub
pop
sbb
insl
cmp
xchg
test
adc
call
mov
cmp
xchg
leave
mov
mov
xor
int3
inc
mov
ret
jmp
cld
movsb
or
push
xorb
and
enter
mov
sub
jns
jo
test
inc
test
cmp
add
dec
sbb
inc
jo
xor
pop
or
cld
mov
pop
fiaddl
sub
cmp
cmp
cld
imul
arpl
push
fs
shl
lock
xor
pop
in
jae
inc
fstpt
and
leave
mov
testl
jl
mov
inc
cmp
sub
fisubs
sub
mov
cmc
push
cmp
pop
or
cmpsb
scas
repnz
mov
pop
ljmp
clc
mov
std
or
pusha
jmp
mov
jl
or
adc
push
add
add
mov
add
or
xchg
fs
or
cmp
add
imul
cmp
xchg
mov
jge
jge
sbb
daa
sub
popl
pop
ds
mov
jno
mov
push
cmpsb
sahf
outsb
push
fimull
sbb
std
out
test
inc
cltd
add
xor
shll
xor
push
dec
mov
adc
insb
or
mov
mov
inc
mov
push
dec
or
mov
xor
and
xorl
cli
mov
nop
pushf
jle
mov
or
test
hlt
mov
sbb
adc
push
or
iret
std
mov
mov
int
rorb
xchg
mov
mov
subb
xchg
or
in
popf
test
mov
inc
adc
pushf
enter
pop
insb
add
int3
mov
enter
les
push
adc
adc
cmp
shll
daa
sbb
lock
into
push
cmp
push
sub
in
int3
add
shrl
test
sbb
inc
int
jae
pop
adc
mov
std
sub
sbb
lea
inc
stos
inc
test
lea
sub
cmpsl
cmp
push
dec
adc
dec
jmp
adc
pusha
inc
mov
std
pop
adc
std
push
cmp
add
cwtl
in
dec
pop
mov
and
ja
push
jae
shll
in
das
sbbb
adc
inc
daa
mov
shrl
inc
rolb
sarb
jl
pushf
pushfw
push
add
out
mov
cmp
shrl
sti
mov
mov
sbbb
inc
or
cmp
xchg
xchg
out
sbb
andb
add
xchg
adc
adc
adc
mov
stos
jnp
test
dec
sarb
lea
stos
pop
cmpsl
cs
fcoml
pop
rcrl
jno
scas
vcvtpd2dqx
stc
out
stc
add
push
nop
cs
mov
xor
inc
jnp
pop
inc
shl
ljmp
pusha
jns
and
jnp
adc
and
cmp
fsts
daa
jl
call
into
lcall
sub
sbbl
and
mov
or
jl
and
or
xorl
or
insb
ljmp
add
push
sub
and
dec
add
add
pusha
in
dec
add
jne
ja
dec
xchg
ljmp
shlb
sarl
and
pop
pop
aam
insb
mov
sbb
cmc
int3
xchg
or
sbb
in
in
pop
pop
call
loope
mov
ret
inc
in
pop
cli
sub
int3
shr
and
jne
idiv
das
repnz
dec
push
inc
stos
dec
and
arpl
mov
cmc
push
cmp
push
cmc
in
negl
adc
out
mov
add
popf
lds
cmp
ret
jb
push
push
lahf
addr16
lret
shll
cld
jp
clc
add
adc
adc
add
nop
aas
xor
mov
scas
and
in
jl
cmp
loopne
cmc
push
insb
or
lahf
dec
sbb
lcall
xchg
enter
xchg
addr16
xchg
scas
mov
clc
mov
dec
enter
lahf
jne
sarb
xor
cld
or
mov
sbb
movsl
mov
pushf
cwtl
in
jae
bts
dec
pop
test
pop
repz
pop
push
notl
mov
dec
mov
insl
sbb
mov
add
out
in
call
test
adc
mov
fmull
sahf
enter
add
jl
call
xor
mov
mov
dec
fmuls
push
les
xor
mov
mov
and
test
and
dec
lahf
mov
pop
cmp
shll
mov
adc
mov
push
adc
into
cld
xor
sub
dec
and
andl
xchg
test
mov
inc
nop
or
fcoml
sub
lret
in
cmp
xchg
icebp
adcl
inc
pushf
cmpsl
lret
sbb
jecxz
je
test
dec
stos
call
cmp
dec
adc
or
mov
aaa
test
mov
decl
cmp
daa
icebp
subb
add
jecxz
mov
pop
pop
lahf
xor
movsb
test
xchg
aad
cwtl
test
inc
cmp
cmpsl
ljmp
ds
jl
jns
out
out
mov
mov
mov
ljmp
testb
inc
fidivs
dec
in
jb
jle
in
incb
cmpsb
outsl
add
jg
and
mov
inc
scas
sahf
or
inc
or
xchg
popf
sub
lahf
inc
lahf
add
adc
jl
insb
pushf
xor
jmp
call
push
pushf
inc
mov
xlat
push
stos
push
or
and
dec
out
and
int3
add
xchg
sahf
repz
cmp
sbb
imull
xchg
popf
jbe
xchg
xor
ficoms
lods
imulb
push
iret
mov
iret
ljmp
push
cmp
dec
push
test
decb
adc
lahf
and
xor
cmc
cld
xor
sub
mov
ljmp
xchg
int
xchg
pushf
icebp
cli
repnz
roll
stc
push
stos
jmp
sahf
pop
mov
jb
dec
mov
mov
out
aam
lahf
sub
mov
or
inc
fdivl
loopne
push
test
and
adc
mov
insb
stos
mov
adc
or
xor
es
fsubs
add
in
mov
lea
lds
loopne
int3
sbb
or
mov
ret
hlt
push
xor
add
push
icebp
jmp
add
repz
pushf
pop
insb
add
aas
ret
andb
mov
dec
outsb
les
and
sahf
test
stos
cwtl
jp
mov
cwtl
xchg
outsb
jo
sub
fcomps
das
adc
jbe
test
leave
dec
pop
mov
lds
jecxz
pop
adc
sub
xchg
inc
out
ret
sub
pop
outsl
test
sar
scas
stos
int
xchg
xor
mov
jl
xor
fistpll
mov
rcr
push
jne
mov
dec
icebp
in
jecxz
shl
testl
sbbb
arpl
sbb
int
fistpl
add
shll
cmpsl
mov
lret
cmp
ret
sub
test
cmp
call
shr
or
cmp
pop
repz
xchg
sti
mov
popf
lahf
mov
mov
cld
and
adc
cli
mov
push
add
test
clc
inc
movsl
push
aas
imul
add
xchg
cs
das
xchg
and
rcrb
ss
cmp
and
daa
mov
mov
std
push
rcrb
pusha
add
mov
mov
inc
cmpsb
in
sbb
xchg
and
sub
push
lods
and
cmp
push
loop
inc
call
mov
cmpsl
ja
inc
pop
jl
pushf
out
jmp
pop
rcrb
or
fninit
jne
scas
dec
or
out
mov
dec
fstpl
movsb
stos
test
sub
in
rcrl
dec
jecxz
jnp
movl
push
addl
loopne
loopne
int3
mov
sbb
cmp
mov
add
xchg
pop
fdivl
mov
add
sub
leave
and
jg
fwait
or
cs
jp
lds
lret
rolb
sbb
call
jl
aam
out
xor
pusha
inc
and
call
jae
push
scas
insb
dec
cmpsl
addb
push
sysexit
xchg
imul
sub
mov
shll
ljmp
lock
pusha
jae
repz
or
jmp
push
gs
jns
adcb
movsb
lret
mov
lock
add
mov
out
or
xor
jecxz
sbb
out
or
or
sub
loope
aaa
push
lods
pop
mov
cmpsb
sub
pop
in
jne
icebp
das
aas
lea
sub
cmp
sbb
popf
shrb
fs
adc
cwtl
mov
push
shrl
lret
into
dec
mov
xor
int
out
sarl
dec
fstps
sub
popf
jmp
pop
adc
dec
je
pop
xor
pushf
or
and
test
test
mov
inc
pop
bnd
fwait
push
jno
mov
jbe
mov
les
popa
repz
adc
or
std
adcb
cld
testl
loope
mov
pop
xadd
xlat
cld
jg
in
stc
xchg
gs
outsl
mov
lea
insb
call
and
jo
cltd
sub
std
call
test
repz
jl
adc
push
test
ds
inc
xor
add
jp
cmc
pop
dec
in
sub
dec
jne
mov
adc
lea
incb
push
dec
clc
pushf
push
jns
lahf
jg
xchg
mov
insb
xor
int
std
mov
adc
jg
mov
jmp
test
jnp
add
push
lea
ror
sbb
loopne
pusha
roll
out
push
fsubr
aas
in
fiaddl
mov
or
jg
lret
xchg
sub
xchg
cmp
dec
mov
and
lods
lret
mov
sub
add
loop
mov
inc
mov
push
push
add
testl
lods
push
xor
dec
add
aad
push
fldt
mov
cmp
adc
or
adc
push
call
les
pause
inc
sbb
xchg
out
jg
push
and
ret
jle
aaa
push
in
and
xchg
push
movsb
dec
in
jns
repnz
aas
test
movsl
pop
xchg
ja
fstpl
adc
out
aas
pop
adc
pop
push
mov
inc
push
pop
icebp
cs
je
sub
jo
sbb
or
nop
push
repz
sub
call
scas
loopne
stos
push
shrb
push
cmpb
sbb
sub
adcl
gs
psubb
inc
or
test
xchg
pop
aas
int
es
repz
enter
iret
js
mov
inc
stc
add
inc
test
push
rcrl
stos
add
xor
mov
dec
mov
dec
sub
pop
adc
mov
lods
cmc
lods
mov
adc
call
movsb
xchg
add
pop
adc
mov
cwtl
mov
xchg
sbb
mov
fdivrl
sub
dec
jl
rcrb
out
mov
cmc
dec
mov
xchg
push
mov
stos
xlat
jne
orl
js
in
rclb
leave
mov
fildl
add
or
sub
in
mov
mov
xor
in
les
dec
cmp
mov
idiv
xchg
cmp
or
or
mov
mov
fs
mov
sbbb
test
addb
in
gs
or
push
push
addr16
inc
push
rclb
mov
pop
daa
sub
gs
int
sahf
push
sbb
sub
mov
xor
xchg
lahf
pop
popl
or
clc
cmp
inc
xchg
int
stos
inc
pop
add
negl
add
fistps
mov
jge
cmp
mov
rorl
push
out
mov
cmp
sbb
ftst
xchg
int
xchg
sbb
int
scas
rcll
int
adc
shrl
and
dec
add
scas
mov
int3
mov
pop
int
leave
and
jecxz
and
das
xchg
pushf
jae
mov
adc
mov
xor
xlat
out
dec
cltd
scas
inc
push
jecxz
scas
test
adc
pop
shll
rcrl
pusha
sbb
aad
out
mov
test
out
adc
mov
test
mov
sti
jle
pop
int
jo
push
adc
xor
pop
push
or
push
testb
or
enter
push
mov
sub
in
and
push
cmpsl
les
sbb
filds
mull
sub
mov
imul
int3
mov
fistpl
stos
ds
cmpl
pop
jmp
orl
shrl
adc
ja
mov
push
orb
and
enter
js
inc
sbb
sbb
cmpl
int3
pop
scas
xchg
mov
std
das
cmpb
inc
inc
sbb
addps
movsl
jle
sbb
add
and
les
insl
cld
shl
xchg
std
jae
std
xorl
sub
bound
daa
pop
push
into
xchg
push
push
dec
xchg
jnp
pop
lahf
cmp
push
jmp
dec
mov
mov
stos
aam
cmc
pushf
int
mov
in
lahf
cwtl
aas
enter
add
lea
fsub
shll
sub
jl
xlat
cmp
lcall
cli
mov
pop
fistpl
pusha
jle
addl
es
clc
inc
aas
and
sbb
loopne
and
daa
add
sahf
sbb
lds
in
sbb
adc
mov
sub
sub
aam
lods
dec
pushw
in
mov
dec
add
lds
aam
push
rcrb
in
adc
cmp
jl
jo
push
xor
ret
enter
mov
mov
filds
mov
mov
xchg
cmp
mov
insb
call
ss
jge
adc
and
lahf
mov
mov
insb
adc
fwait
inc
push
cmp
imul
test
fistpll
cmp
ljmp
cmp
push
cmpb
adc
add
movsl
mov
out
nop
je
inc
xor
rclb
and
sbb
mov
or
mov
jge
cmp
imul
inc
mov
loope,pn
push
popf
mov
mov
push
sti
mov
sub
xchg
push
testb
xor
insl
std
inc
lahf
in
sahf
add
pop
mov
lahf
xor
xor
je
pop
mov
lcall
stc
fistps
add
jne
aas
enter
adc
std
xor
fisubs
add
adc
sbb
sub
aaa
pop
or
mov
cwtl
mov
mov
sbb
xlat
jge
push
sub
add
cmc
insl
call
sub
enter
add
sbb
push
hlt
and
and
in
pop
adc
xor
nop
pop
lahf
and
xor
mov
ljmp
cmp
adc
push
sub
mov
cmpsb
dec
int
dec
mov
movl
mov
xorl
repz
or
push
pop
shl
loope
sbb
and
pop
xor
pop
push
lds
fcmovu
jb,pn
loope
push
lcall
idivl
or
sbb
cmp
mov
or
ret
jb
dec
les
pop
fistpl
sbb
sbb
int
mov
stc
int
movsl
jl
push
ss
inc
jno
cmp
and
icebp
sbb
mov
and
jl
xchg
fs
push
jne
sbb
jle
pop
icebp
je
loop
adc
out
cltd
pop
pop
popa
jmp
xor
repnz
sbb
jbe
js
shr
lret
lods
leave
fwait
out
add
int
loop
or
sahf
add
add
daa
inc
sbb
fidivs
pop
cmp
mov
lahf
add
mov
xor
rcrb
push
fsts
sub
pop
xchg
add
pop
sbb
stos
loop
or
adc
push
inc
cmp
xchg
dec
push
push
and
sbb
jg
call
scas
sahf
add
xor
dec
mov
cmp
cmp
notl
into
xor
repnz
inc
pop
dec
adc
mov
jnp
das
sub
sahf
insb
push
cli
fistpl
mov
adc
cwtl
fbld
test
fmul
jbe
sahf
sbb
sarl
out
scas
inc
push
add
pop
fcomip
xor
xor
mov
cmp
cltd
icebp
and
pop
or
mov
cmc
int3
xor
and
inc
in
aas
cld
sbb
jb
adc
cmp
pop
sbb
cmc
dec
jg
test
or
sub
xchg
fbstp
lret
add
fists
mov
xchg
or
clc
xchg
jg
lahf
mov
out
dec
out
xchg
adc
mov
xor
sbb
jb
xchg
mov
push
mov
or
xor
fcomps
mov
add
repnz
dec
xchg
cvtps2pd
fcomps
stos
ret
xchg
addr16
jg
add
adc
mov
and
pop
lret
ficomps
adc
popa
mov
out
dec
aas
mov
mov
mov
rcr
sti
data16
icebp
imul
pop
jp
adcb
or
movsb
scas
xor
inc
xlat
in
lret
es
jno
in
in
mov
mov
mov
leave
stc
insb
sub
out
shl
pop
add
rcll
or
rorl
inc
or
outsl
adc
sub
imull
inc
mov
pop
adc
movsb
mov
mov
cmp
mov
fisubrs
int
sbb
out
and
push
jle
adc
and
adc
call
sbb
fadds
daa
lock
dec
rclb
into
adc
test
xor
pop
sbb
sub
jno
outsb
inc
adc
lret
dec
rclb
inc
repnz
dec
pop
bound
addr16
push
and
out
jb
cmpl
pop
andl
pop
jno
mov
lcall
jns
decb
stc
sti
mov
sbb
push
sbb
pop
loopne
jae
inc
cmp
xor
push
mov
mov
int
imul
mov
cmp
sbb
xchg
jp
bound
cmp
cld
scas
push
movsb
scas
pop
lcall
ljmp
push
pop
mov
sub
idivl
popa
dec
loop
cmp
pop
ja
mov
and
jmpw
pusha
inc
in
int3
add
mov
stos
push
jnp
cs
inc
inc
jecxz
cs
pusha
scas
jb
mov
iret
dec
jl
jb
fmull
jle
sti
jl
cmp
cmp
add
shll
popf
inc
add
jle
int
inc
cmp
in
sbb
jecxz
aas
jmp
rclb
mov
fs
fnstsw
leave
jmp
aaa
call
aas
xor
dec
jecxz
push
jns
hlt
mov
test
and
cmp
adc
ss
mov
rol
jb
ljmp
dec
ret
iret
test
cmc
mov
aam
jo
mov
sub
cmc
xor
insl
or
test
lret
sahf
mov
lret
stos
jne
mov
and
nop
or
add
in
sbb
loopne
dec
pop
std
inc
lahf
int3
cmpsl
xlat
rolb
and
fs
lock
orb
dec
add
clc
push
cmc
les
push
adc
das
add
pop
sub
mov
mov
pop
dec
jle
xchg
lret
push
cld
sub
jae
and
xlat
xchg
stc
daa
imul
adc
dec
mov
pop
push
outsb
xorb
cmp
andl
stos
mov
dec
js
dec
mov
dec
pop
mov
stos
pushf
fs
pop
cmpsl
jb
sub
jo
adc
leave
cld
rol
test
fst
sbb
pop
jmp
mov
arpl
movsl
mov
add
pop
xchg
pop
pop
dec
in
adc
xor
push
out
rcrb
mov
arpl
clc
sub
push
add
mov
jp
add
in
inc
mov
ret
pop
or
loope
pushf
jnp
gs
lods
push
orb
lret
scas
push
repz
pop
push
push
xchg
mov
sub
push
adc
out
cld
xchg
into
shll
pop
dec
and
pop
jo
add
inc
adc
or
sahf
js
jl
xor
in
and
cli
jmp
call
ljmp
movsl
add
xlat
ret
pop
sbb
and
cmp
or
xor
icebp
add
adc
or
mov
inc
shrl
nop
inc
sbb
add
nop
or
push
orb
cld
pop
xor
das
cmp
add
push
cmp
sub
xor
xchg
mov
int3
fwait
sbb
out
adc
mov
cmp
push
sub
mov
xchg
cmp
ret
pusha
aam
mov
sti
es
jns
push
sub
sarl
jns
mov
mov
mov
xlat
adc
cld
ljmp
aaa
jl
andl
inc
inc
mov
sbb
or
pop
sub
mov
pushf
bnd
fsubrl
cmp
jb
mov
imul
pop
adc
int3
inc
or
dec
cwtl
inc
adc
or
in
fisttpll
call
stos
add
ds
dec
aaa
outsb
dec
sbb
and
xor
nop
outsl
pop
pushf
data16
inc
pop
outsb
pop
popa
push
test
mov
xor
stos
mov
sub
cs
and
push
mov
add
sbb
push
bound
pop
movsl
push
lahf
pop
into
popl
sahf
xor
lea
rorl
push
popf
sub
xorb
leave
or
fstpl
sbbl
mov
in
adc
bound
adc
push
fwait
push
cwtl
mov
and
ja
xchg
scas
sahf
out
sar
popl
stos
adc
xchg
imul
scas
adc
cltd
xchg
and
js
jmp
test
mov
dec
sbb
shll
cmpsl
mov
push
gs
shl
adc
sbb
xor
adc
mov
mov
mov
or
mov
inc
cmpsl
push
mov
subb
cs
sub
scas
mov
loope
lods
popa
sbb
dec
add
iret
mov
and
mov
inc
adc
stos
xor
nop
inc
sbb
dec
add
std
adc
and
or
jecxz
sub
push
adc
rorl
cmp
pop
scas
mov
loopne
xor
aas
lcall
mov
rcr
jle
stos
rcll
addb
sbb
mov
cwtl
fildl
popf
sbb
mov
jle
mov
loop
aas
test
cmc
mov
mov
sbb
movsb
xor
sbbl
lea
lahf
ss
fnsave
inc
cli
data16
aad
mov
push
mov
sub
inc
mov
cmpsb
jge
lods
iret
movsl
and
cld
sub
nop
adc
lret
imull
test
popa
xchg
add
leave
mov
popa
fincstp
loop
das
in
pop
or
xor
lea
enter
xchg
aad
cmp
xor
lret
mov
sbbl
les
sub
sub
loopne
add
pop
gs
rcrl
cmpl
imul
push
xchg
cmc
mov
pop
pop
jne
push
out
jns
ror
jecxz
add
inc
xchg
inc
or
pop
fsubr
dec
pop
in
dec
fdiv
imul
dec
test
jp
ljmp
and
sub
pop
insb
ret
cmpsb
iret
cmp
jg
sub
add
inc
andb
fs
adc
pop
jb
or
dec
lock
adc
and
in
add
xchg
sub
cmp
subl
inc
cmc
out
cmpsl
sub
jnp
xchg
into
jo
movsb
repnz
clc
pushf
jmp
push
les
mov
test
pop
jb
test
daa
xor
sub
xor
adc
lods
or
filds
in
hlt
in
sub
mov
pusha
pop
adc
pop
cld
adc
cmp
or
sub
and
cmp
and
xchg
cli
sub
jecxz
or
scas
fldlg2
es
adc
mov
repz
mov
mov
push
stos
cld
pop
sbb
mov
loope
pusha
je
sub
push
std
jmp
dec
cmp
sbb
pusha
jecxz
leave
cld
add
dec
mov
lahf
insb
jmp
pop
adc
jnp
xor
roll
lds
std
iret
stos
test
mov
add
iret
dec
inc
ljmp
and
sbb
nop
cs
cmp
loopne
cmp
pop
mov
xchg
mov
popa
aas
mull
addr16
jno
imul
rorl
or
mov
inc
inc
cmp
aas
xchg
cmp
push
inc
xchg
shrl
sub
or
lock
fldenv
xchg
jge
jl
cwtl
aad
dec
fidivrs
xor
dec
dec
push
mov
lret
stos
push
push
pop
ret
cmpsb
and
pop
fstpt
cmc
pop
lods
inc
mov
push
stos
lret
sbbl
mov
and
stc
xchg
xchg
or
cwtl
inc
xor
sbb
and
jmp
jmp
mov
outsl
mov
pop
push
dec
iret
pop
inc
decl
mov
fwait
and
push
sbb
xor
scas
cmc
xchg
mov
jl
jge
shll
pushf
movsl
out
push
shrd
and
sbb
xor
jne,pt
inc
fmull
outsb
jmp
lods
sbb
int
out
xor
adc
sub
sub
sbb
int
int3
popf
pop
fmuls
cmp
mov
adc
sub
mov
arpl
push
sbb
in
sub
pusha
sbb
sti
js
pop
mov
inc
push
int
and
pushf
shll
nop
loopne
add
pop
jnp
sbb
jbe
mov
jno
loop
iret
and
shll
popl
mov
push
push
cli
dec
out
dec
mov
pop
sub
inc
aam
sbb
stos
push
into
or
push
or
enter
and
outsl
test
sub
sub
mov
in
inc
fsubrl
dec
mov
popf
xor
and
scas
jb
pop
cmp
leave
mov
scas
jne
or
inc
inc
movsl
push
in
rcll
inc
mov
cmpsl
iret
lods
shlb
test
mov
jnp
mov
negb
push
mov
add
inc
mulb
push
fsubrl
xlat
aad
pop
popa
sub
cmp
icebp
dec
sub
add
xor
pop
sti
dec
push
and
jle
aad
xchg
add
and
xchg
bound
cli
adc
push
lahf
int
stos
adcl
test
cwtl
nop
sub
push
inc
adc
ds
mov
out
push
into
mov
aaa
movsb
stos
jl
loopne
dec
pop
inc
lcall
cld
jmp
in
or
inc
loope
ljmp
sbb
add
shrl
in
pop
and
in
adc
sbb
xchg
xchg
cmp
dec
pop
xor
mov
out
pop
push
popf
mov
push
pop
mov
in
inc
xchg
adc
stos
out
sbbb
testl
sub
mov
mov
xlat
nop
das
arpl
int
and
cld
and
icebp
xlat
ljmp
inc
add
scas
or
mov
pop
insb
in
and
int3
dec
sub
inc
ret
or
cld
es
scas
push
out
inc
in
pop
jecxz
mov
xorb
rcll
lock
pop
movsl
int3
repnz
sbb
aam
ret
lahf
jae
and
mov
or
mov
mov
dec
shrl
mov
inc
and
adc
or
sub
test
sub
push
sbb
cmp
lock
ljmp
pop
imul
imul
add
xchg
scas
aad
imul
adc
loop
flds
pop
out
jecxz
lods
int
xor
cmp
inc
jne
jp
pop
add
into
pop
sub
jnp
fmuls
and
pop
push
add
ljmp
nop
cmc
int3
add
test
in
ret
jne
out
xor
xlat
jae
sub
dec
mov
or
in
pop
dec
shlb
jmp
mov
dec
push
dec
fsts
add
pushf
dec
push
jae
xchg
sbb
mov
sbb
cmove
mov
push
mov
popa
fidivrs
das
in
shll
idiv
stos
sub
dec
cmp
sahf
jnp
je
dec
sub
or
sbb
js
icebp
mov
paddw
xchg
dec
call
cmp
call
mov
cli
mov
inc
jg
sub
rorl
mov
nop
xchg
arpl
push
adc
insb
inc
xor
out
pop
call
sbb
adc
jecxz
fsubrs
repz
sbb
sbb
mull
call
mov
sbb
mov
pushf
rcrl
dec
fdiv
add
pop
popa
sbb
fists
pop
popa
push
cmp
out
mov
rcrl
push
nop
push
inc
pop
mov
and
adc
ja
out
test
pop
xor
or
cmp
stos
pop
xor
adc
push
cwtl
push
and
es
xor
loopne
adc
pop
mov
repnz
test
dec
dec
jmp
cmpl
popf
or
repz
xlat
out
je
cmp
inc
ds
dec
repnz
int
and
repz
jmp
push
test
dec
sbb
or
jb
push
out
jo,pt
das
sub
dec
dec
mov
xchg
rol
adc
and
icebp
ret
mov
lods
movsl
frstor
adc
aad
xchg
divl
xor
push
pop
ret
add
xor
dec
push
xchg
inc
pop
mov
cltd
inc
subb
mov
vpaddb
mov
das
adc
sar
xchg
mov
cmpsb
gs
or
jg
fwait
xor
popf
dec
shld
testb
xor
pushf
andl
fcoms
and
xor
pop
add
pusha
or
lahf
inc
js
mov
cld
cwtl
call
push
data16
or
cmp
dec
xchg
push
mov
imul
std
xchg
inc
pushf
insb
test
pop
cmp
mov
test
jns
ja
add
dec
xlat
mov
mov
adc
lcall
or
in
inc
lahf
pop
xchg
add
jg
jno
jo
mov
loopne
test
faddl
subb
adc
jnp
push
in
sbb
dec
nop
adc
insb
popa
pop
mov
xchg
push
aaa
and
movsl
mov
lock
push
adc
out
sub
leave
rcrb
cltd
cmp
sub
sbb
inc
das
call
sbb
and
cli
mov
cmp
and
in
cltd
mov
ds
sbb
dec
cmpsb
jo
iret
cld
movsl
popa
dec
int3
mov
pop
movsl
sub
dec
mov
xor
fnstenv
jge
imul
lods
ror
and
aas
adc
and
xchg
mov
shr
lret
call
sub
sbb
in
push
xor
push
adcb
cmp
pop
fcomi
les
mov
jno
inc
es
testb
push
sub
arpl
sbb
xchg
add
js
cltd
idivl
mov
rcll
addb
and
mov
adc
sub
test
mov
sahf
nop
mov
stos
push
mov
push
bswap
cs
add
test
cmp
frstor
adc
enter
push
mov
es
pop
ljmp
mov
out
jo
inc
pop
and
and
jecxz
dec
int
stc
add
sbb
xchg
sbb
fmul
sar
test
pop
add
sbb
push
loope
push
idivl
cmpsb
test
mov
inc
imul
or
lds
and
fists
xor
lods
pop
mov
imul
sub
or
mov
mov
jge
adc
xor
sbb
mov
or
aas
aas
mov
test
loop
mov
pop
add
inc
adc
out
mov
adc
push
xlat
sbb
pushf
outsl
nop
out
imul
inc
or
xor
fisttps
lahf
cwtl
pop
repz
popf
inc
sbb
out
inc
mov
xor
pop
movsl
add
sbb
adc
adc
nop
mov
xor
add
pop
sahf
inc
cwtl
cmp
cld
and
pop
and
int
sbb
sub
movsb
out
jo
jno
mov
mov
fistpll
pop
dec
push
mov
pop
pop
loopne
mov
pop
nop
jns
rclb
xor
and
ds
mov
push
dec
pop
mov
aaa
inc
pop
out
jecxz
out
test
cmpsl
lret
mov
mov
lock
repnz
push
dec
gs
push
enter
push
xor
call
pop
clc
xchg
xchg
inc
cmove
sbb
nop
pop
dec
aas
jns
ds
mov
jecxz
xor
inc
imul
jecxz
mov
shlb
mov
or
into
insb
mov
sub
or
cmp
mov
jge
inc
fwait
sub
outsb
push
cmp
cmc
insb
lahf
lea
int
dec
xlat
jl
lock
adc
dec
sub
stos
and
mov
loop
xchg
adc
rorl
mov
sbb
dec
lahf
addl
sbb
ja
push
test
stc
aad
leave
rcrl
sub
outsb
mov
and
lods
pop
int3
lahf
mov
pop
fsubrl
mov
test
cmp
or
sub
nop
fiadds
dec
out
sub
sarb
scas
mov
gs
and
cmp
icebp
mov
sub
xchg
fistpll
pop
push
outsl
mov
add
mov
push
aas
in
and
fnstenv
xor
pop
idiv
xor
and
jnp
mov
adc
jno
push
jns
mov
int
fdivl
pop
les
mov
mov
xor
mov
lea
in
add
push
cld
adc
fdivs
adc
or
dec
push
xchg
push
dec
ja
jo
in
sbb
xchg
stc
or
push
js
cwtl
test
lea
jl
lods
adc
stos
aas
and
push
gs
jmp
push
das
add
dec
call
or
and
cmp
dec
aaa
cld
loopne
add
cmc
and
cmpsl
push
add
iret
inc
imul
leave
pop
jg
push
jg
out
mov
add
repz
testl
mov
xchg
fucomip
sub
mov
dec
xchg
jno
pop
sbb
iret
or
inc
out
lahf
add
dec
fidivl
xlat
cli
mov
add
cmp
cmp
scas
cmp
sub
cmc
jnp
inc
insl
call
and
pop
daa
xor
mov
stos
push
cmp
sub
xchg
cmpsl
iret
jno
push
cmpsb
xchg
test
and
mov
push
dec
stos
dec
sti
xchg
mov
test
call
add
stos
pop
jo
push
pusha
mov
sub
and
jae
pusha
mov
add
push
jle
out
call
or
nop
mov
push
clc
dec
pop
add
xor
or
test
popa
inc
test
mov
std
and
stos
cld
sub
xchg
outsl
cmp
sbb
sbb
cli
stc
push
loopne
movsl
jecxz
cmp
mov
testb
adc
sub
jo
in
inc
pop
mov
inc
inc
filds
scas
or
mov
push
add
inc
pop
inc
sahf
add
adc
test
xor
add
mov
and
aaa
jno
mov
mov
mov
mov
sbb
inc
fsubrl
dec
mov
adc
pop
pushf
adc
scas
add
out
xchg
imul
outsl
popf
out
xor
iret
mov
pop
mov
push
or
sysenter
pop
add
in
xor
mov
loope
pop
xchg
adc
aas
jae
pop
xor
decb
int
push
xor
add
loopne
or
pop
xchg
dec
sub
adc
cmpb
fstl
nop
fists
repz
sub
push
and
and
and
call
jo
push
cmp
dec
mov
and
inc
xchg
icebp
adc
add
shrb
sbbl
pop
adc
sarl
sub
fldcw
dec
in
jp
and
inc
pop
mov
cmc
je
imul
cmpsl
popf
aas
dec
add
cmp
test
cmp
xchg
cmc
mov
loop
inc
cmpsl
mov
push
xchg
test
or
push
mov
xor
inc
lahf
icebp
sub
jl
nop
cmp
gs
pop
dec
jg
insb
cld
pop
cs
or
cmp
mov
adc
cld
es
movb
lahf
lret
sub
mov
popf
fadds
push
jge
jle
cld
mov
cmpl
int3
cwtl
mov
cmp
shrl
add
or
and
fstl
add
pop
inc
mov
cmp
push
pop
sti
js
sub
push
test
cmp
shrb
cmp
stos
cmp
mov
mov
mov
lods
cmc
push
xchg
out
fisubl
cmp
in
xchg
nop
pushf
shrl
ds
icebp
pushf
aad
cmp
test
sub
sub
in
stos
cmpl
mov
stos
aaa
inc
je
sbb
rorb
mov
scas
push
shlb
pop
dec
lcall
shr
and
cmp
pop
inc
pop
jo
cmc
dec
jns
movl
cld
cmc
sbb
std
xor
cmp
jl
mov
sbb
adc
pop
mov
push
lret
imul
gs
cmp
or
sub
lcall
and
jns
xlat
xchg
inc
icebp
jl
mov
jecxz
pop
addr16
das
jne
xchg
or
repnz
fdivl
imul
rcrl
xor
out
or
pushf
xor
in
push
movsb
jae
dec
aad
orl
or
jl
nop
jp
aam
xor
pop
addr16
cwtl
xor
inc
jge
jle
cmp
scas
in
mov
mov
push
push
fbld
jmp
cmc
lret
sub
sahf
iret
push
jbe
xor
insb
pop
test
cmp
ja
nop
mov
aad
pop
or
sub
faddl
inc
and
dec
sahf
pop
jb
and
add
fadd
es
add
cmp
call
pop
push
add
test
sbb
sub
lret
repnz
pop
aam
in
adc
aaa
mov
call
sub
xchg
sbb
pushf
mov
jp
sub
sub
cmp
popf
pusha
arpl
loopne
mov
inc
int
out
pop
lock
enter
cmpsb
and
inc
push
or
movsl
jmp
aaa
mov
jbe
cmp
adc
out
jmp
cmpsb
out
push
nop
lods
jno
ficomps
pusha
cmp
jne
out
imul
jmp
pop
mov
jns
dec
into
and
xchg
addr16
out
lahf
jecxz
fsubs
sub
das
xchg
faddl
rcrb
cmp
ljmp
cmp
lahf
pushf
in
jnp,pt
das
sub
dec
sub
pop
xor
cs
inc
fmulp
lea
xchg
rclb
mov
in
mov
add
and
add
sub
sbb
jbe
das
jle
sub
xor
or
cmp
sbb
and
push
dec
mov
lret
push
adc
adc
cs
inc
adc
out
jne
cwtl
movsl
out
xchg
mov
mov
data16
dec
pop
ret
into
and
sub
data16
dec
jno
lcall
rclb
inc
pop
std
icebp
call
icebp
and
es
inc
testb
adc
dec
into
sti
and
loope
cmp
jl
and
dec
roll
mov
call
pusha
and
aad
dec
dec
push
add
out
xor
loopne
idivb
xchg
add
sub
add
stc
jecxz
push
sub
mov
out
mov
add
lcall
lahf
xor
cmp
imul
subb
iret
pop
sub
iret
adc
lahf
xor
xchg
pop
sub
xor
jg
and
sbb
inc
cmp
mov
or
call
std
loopne
adc
nop
pop
sub
scas
adc
fstp
hlt
test
cmp
stos
mov
jne
sbb
push
dec
fs
sub
sbb
adc
pavgb
andb
xor
stc
fisubl
pop
lahf
inc
aas
xlat
fdiv
push
shll
repnz
jl
and
cwtl
and
pop
out
sbb
xchg
and
lock
stc
inc
and
adc
pop
inc
loopne
and
pop
stos
movsb
ja
pop
data16
shlb
imul
ja
xchg
bnd
iret
add
mov
push
test
xor
xchg
xor
cmp
sub
ret
or
shll
xchg
adc
test
mov
lret
and
in
out
xchg
xchg
sti
xor
dec
test
adc
fwait
les
insl
jne
adc
xchg
insl
mov
subl
sbb
sub
fisubrs
je
fldlg2
push
add
sbb
mov
loopne
sar
pop
fs
bound
ret
xor
jecxz
add
add
push
outsl
lahf
dec
sub
out
xchg
mov
xchg
xlat
scas
pusha
or
int
xor
data16
cmp
inc
inc
movl
fsubp
das
jge
jns
jp
int
iret
stos
push
cs
sub
movl
mov
ucomiss
cli
jne
and
pop
lcall
ficoms
add
repnz
add
int3
rol
jb
jge
cmc
sub
and
fsts
jge
cmpsb
xor
adc
hlt
or
jge
pop
sub
pop
std
xchg
call
pop
add
pop
inc
adc
cs
lcall
insb
or
add
jmp
std
xchg
sub
mov
mov
push
lods
and
mov
inc
mov
cld
jl
lods
fimull
ljmp
xor
or
jmp
push
xor
add
inc
cmpsl
mov
inc
out
idivl
sub
push
mov
loopne
stc
cmp
out
aaa
add
mov
pop
dec
and
sbb
ret
jp
dec
mov
popa
arpl
mov
jne
inc
movsb
in
mov
push
repz
inc
sarl
pop
fscale
sbb
mov
shr
lods
sub
sub
in
push
nop
mov
jge
push
xor
dec
mov
je
adc
xchg
roll
mov
lods
mov
cmp
xor
mov
int
mov
jnp
negl
pushf
cld
sbb
and
iret
testb
cmpb
test
jo
jne
lret
mov
test
or
cmp
rcr
xor
xchg
rcrl
mov
jl
dec
int
and
jb
adc
sti
xor
fildll
mov
cmp
and
xchg
pop
inc
stos
aaa
out
xchg
iret
ss
rcll
push
in
insl
jb
mov
push
dec
jae
mov
out
lods
push
rcrb
pop
cmpb
lahf
fsubr
test
xlat
push
sbb
and
xor
pop
sub
push
sbb
cmpsb
test
cmp
sub
cwtl
push
lock
mov
sbb
fs
push
or
stos
ret
inc
sub
test
cmp
testl
movsb
out
cmp
inc
leave
xchg
mov
mov
movsb
inc
mov
xorb
adc
inc
dec
out
xchg
sbb
int
icebp
pop
in
imul
outsl
test
add
dec
out
loopne
out
aaa
out
cmc
xor
add
sbb
xor
call
movsl
adc
cltd
mov
popf
and
or
push
test
and
or
ja
test
mull
bound
pop
test
test
pop
sbb
jl
cmp
jg
stos
data16
jne
scas
sbb
out
push
inc
add
aaa
icebp
popf
xor
dec
es
mov
lahf
rorb
mov
mov
xlat
out
inc
sbb
push
outsb
stos
int
sti
notb
or
int
cli
pop
fisubrs
fsub
adc
pushf
lahf
dec
mov
shrb
inc
jge
inc
mov
stc
push
and
movsb
mov
nop
xlat
inc
push
or
mov
adc
mov
or
or
adc
add
jne
pop
jl
xor
mov
dec
insb
jns
cmp
push
or
inc
iret
stos
lret
lock
es
out
enter
ficomps
js
or
mov
out
xor
leave
es
pusha
jl
sbb
push
pop
xor
adc
rcrl
inc
dec
enter
adc
aad
into
mov
pop
out
mov
add
int
inc
pop
jl
sub
or
nop
or
pop
pop
dec
xor
dec
or
sti
or
testl
nop
mov
stos
mov
mov
cld
push
cmc
jge
test
fsubrl
iret
dec
sub
pop
stos
pop
les
or
sbb
push
push
clc
sarl
xor
push
lods
and
enter
add
nop
int
in
movsl
cmp
stos
xor
scas
jle
ss
inc
xor
fbld
aas
in
insb
push
sub
xchg
mov
enter
mov
add
fcoms
cmpsb
pop
in
cmc
add
cli
nop
cltd
xchg
xchg
pop
jae
mov
mov
push
aam
stc
sbb
mov
mov
adc
push
fucomi
or
cmc
mov
in
cwtl
jp
sbb
and
jl
lds
mov
sub
loopne
inc
ljmp
jns
push
adc
adc
sbb
cmpsl
leave
icebp
push
in
stos
pop
call
inc
aaa
mov
subb
icebp
pushf
cvtps2pd
leave
nop
ja
scas
adc
jno
xchg
or
stos
outsb
out
mov
cmp
pop
jl
dec
add
mov
cmp
dec
fs
ffree
lods
xor
imul
inc
jle
adc
xor
lea
sar
push
xchg
jl
dec
adc
pop
mov
fcoml
scas
or
stos
fisubl
fwait
push
or
and
fisubrs
sarb
adc
lea
stos
gs
sub
or
pop
xchg
pop
cli
mov
add
imul
dec
xchg
dec
test
xor
dec
arpl
mov
or
movsl
mov
and
in
lret
xor
push
mov
nop
stos
add
shrb
imul
inc
inc
insb
pop
stos
inc
fs
sahf
out
cmpsb
imul
cmp
add
popf
sti
test
and
and
insb
in
js
inc
shrl
jae
cli
insb
test
outsl
and
mov
mov
jne
xchg
ret
lahf
fisttps
insb
xor
ret
shl
cmpsb
jno
jl
cwtl
stos
xchg
stc
pop
cli
std
pop
pop
mov
sub
int
mov
fimuls
xor
in
fisttpll
jmp
inc
jns
and
xchg
adc
mov
out
jb
cli
adc
jl
and
push
sbb
mov
and
jg
inc
icebp
dec
insb
sbb
rorl
xor
mov
push
inc
sub
pop
sub
cmp
cld
mov
dec
mov
lret
adc
xchg
cmp
repz
xchg
fldl
sub
cwtl
sub
dec
stc
loope
ret
mov
cmp
and
adc
adc
in
nop
jle
insb
lahf
ss
fucomip
test
or
pop
jg
xor
or
cmp
imul
pop
rcll
sub
mov
xchg
push
mov
inc
xor
push
jp
aam
aaa
and
xor
push
shl
sti
out
jnp
pushf
jmp
adc
fsubrl
test
out
rorl
jl
dec
xchg
jp
pop
xor
xchg
icebp
mov
cwtl
inc
lds
jo
cmp
pop
ja
mov
and
jge
mov
sub
xor
test
fisttps
int
push
or
popf
stos
dec
adcl
inc
jecxz
addr16
and
pop
out
cld
xor
das
dec
lea
mov
sbb
arpl
mov
or
idiv
andb
add
cmp
pop
fists
in
mov
and
stc
xor
dec
adc
in
mov
or
roll
pop
aam
notb
stos
dec
rcll
loopne
adc
pop
push
or
xchg
or
or
add
iret
pop
pop
test
add
inc
push
ljmp
inc
inc
xchg
sti
jno
loop
push
lea
pop
dec
pop
push
dec
push
mov
inc
call
sti
mull
sbb
sbb
clc
cmc
xchg
mov
sub
fs
and
cmp
xor
arpl
pop
xorl
int3
xor
push
lea
daa
test
xor
mov
dec
add
arpl
adcl
test
ss
mov
inc
push
xor
subl
push
lret
shrb
out
mov
add
push
cmp
push
inc
pop
fstpt
sub
or
sbb
adc
call
fcmovb
inc
loop
dec
out
xor
test
les
dec
scas
sub
cmp
cmp
gs
imul
cmc
cld
dec
ffree
cltd
add
mov
sahf
repnz
xchg
jge
aas
or
xor
push
call
sbb
cld
lock
add
pop
inc
or
mov
cmp
cmovp
or
xor
mov
inc
mov
cmp
nop
add
loopne
repz
xor
out
cwtl
jo
sbbb
scas
dec
call
inc
adc
das
dec
sti
and
mov
inc
repz
in
push
ds
dec
popf
bound
enter
mov
int3
loopne
out
push
cmc
rolb
stos
mov
mov
xchg
ret
jl
aas
xlat
insl
and
out
test
sbb
mov
fimull
or
mov
movsb
nop
sahf
sti
mov
andb
xlat
arpl
adc
in
mov
pop
add
jmp
sub
xchg
sbb
adcl
lahf
inc
test
xlat
aad
sbb
inc
adc
push
add
hlt
dec
dec
mov
icebp
pop
test
sbbl
mov
sub
or
call
loopew
movsb
cmp
add
mov
push
idivl
mov
lods
shrl
cli
xchg
sbb
cli
in
sahf
cmp
iret
mov
aas
cs
mov
cli
lods
jo
inc
dec
test
xchg
adc
xlat
add
test
add
adc
jl
inc
and
in
sbb
or
and
xor
jbe
adc
xor
add
test
nop
ret
int
test
adc
inc
rol
cmpl
imulb
xchg
xor
add
cmp
xchg
xor
movsl
inc
mov
gs
int
add
or
inc
sbb
imul
cmpsb
pop
xchg
or
push
push
fstps
inc
in
pushf
push
andl
cltd
fiadds
cwtl
stos
push
scas
pop
sub
mov
hlt
jp
fimuls
in
aam
mov
mov
xchg
cwtl
jae
inc
adc
cmp
xchg
adc
decl
rcll
sbb
dec
in
inc
stos
testb
out
cmp
sti
cmpsb
xchg
mov
and
sbb
cmp
push
lcall
adc
dec
push
out
jo
cmp
adc
outsl
in
sub
jmp
xor
stc
jle
mov
add
push
jp
and
jecxz
repnz
xchg
xlat
mov
xor
hlt
mov
test
jg
aaa
dec
sti
dec
pop
bnd
dec
mov
cmp
mov
xchg
ja
push
arpl
jne
lret
fmull
jo
or
xlat
push
lods
push
fstl
mov
and
fists
xor
shrd
and
cmp
pop
or
adc
push
cmpsl
dec
push
dec
icebp
or
dec
dec
jae
and
pop
cmc
jp
mov
mov
lcall
xchg
mov
pop
stos
inc
scas
push
shl
out
lahf
pop
sub
adc
out
scas
nop
hlt
adc
push
mov
popf
xlat
push
inc
stc
outsb
mov
and
testl
cmp
dec
and
mov
push
pop
filds
stos
int3
sar
stc
nop
data16
icebp
subb
adc
frstor
lahf
or
or
push
loopne
in
cmpsl
in
cli
mov
mov
xchg
pop
test
and
repz
cmp
pop
dec
xchg
xchg
in
lds
test
orb
iret
imul
inc
dec
dec
xor
pop
inc
cld
cltd
jl
and
cli
imul
dec
stos
out
and
cmp
push
cld
and
cmpsb
mov
push
aas
nop
dec
pop
inc
mov
aad
adc
shlb
cmc
int
push
add
push
jne
add
xchg
push
mov
sub
pop
stos
packssdw
mov
pop
jecxz
and
cs
icebp
aad
dec
pop
aas
pop
jle
rclb
sti
inc
xorl
popa
fstpl
test
repnz
stc
scas
xchg
shlb
or
mov
enter
call
dec
shrl
call
mov
cmp
std
inc
sub
loopne
sarl
enter
jb
cltd
sub
or
clc
scas
call
lods
mov
in
or
jecxz
xchg
fistps
cmc
ja
fisttpl
scas
addr16
pop
in
cmp
xchg
and
cld
shlb
xor
push
clc
insb
mov
arpl
inc
jl
movsl
cld
dec
cmp
push
sub
std
es
imul
call
out
cmp
xor
cwtl
mov
xchg
jb
dec
push
mov
dec
icebp
mov
sti
stc
adc
mov
push
aam
insl
inc
test
inc
mov
pop
push
cmp
cs
or
sbb
push
jl
pusha
pop
sahf
inc
call
or
arpl
negl
jae
mov
test
xchg
xor
cmpsb
jle
add
mov
stos
jmp
shll
sub
and
int
pop
aaa
adc
dec
push
inc
jp
jp
jb
movsl
mov
test
jae
jecxz
pop
mov
popa
jb
sbbl
enterw
cmpsl
add
fcompl
popl
jnp
and
sub
or
in
mov
lock
int
xor
dec
and
cmp
adc
mov
and
lods
add
int
test
cld
mov
repnz
cmp
ret
xor
mov
xor
cwtl
xchg
jl
mov
jne
jb
xor
loop
jnp
push
sub
int3
inc
inc
fsubrs
mov
lods
push
cmp
xchg
movsb
and
xor
cld
imul
and
push
push
add
gs
inc
push
adc
xchg
test
jmp
push
cmp
imul
mov
dec
mov
bound
push
cmp
int
arpl
xchg
es
lahf
lea
add
bnd
int3
add
mov
inc
scas
insb
jp
mov
cmc
rorb
out
push
or
inc
mov
pop
jo
sbb
loope
dec
adc
mov
inc
xor
ret
test
jb
shll
pop
add
test
xchg
cmp
fbld
adcl
or
incb
loop
sbb
mov
je
aaa
rorb
mov
push
testl
insl
jbe
ret
data16
cmp
insl
popa
mov
pushf
add
dec
loopne
and
mov
jno
sbb
and
rcll
subb
push
inc
pop
lcall
lds
shll
lret
stc
or
xchg
lret
data16
jmp
sti
xchg
and
push
pop
inc
shll
jle
jmp
jmp
rcrl
lods
fisttps
adc
push
les
xchg
in
movsl
push
call
cmpsb
sbbb
sahf
nop
ss
psignw
dec
scas
xchg
jne
sub
cmc
rolb
sti
test
int
nop
fimull
jp
pop
and
addr16
out
and
loopne
lea
popa
lret
in
les
mov
xor
insl
icebp
jnp
popf
call
cmp
jmp
and
xlat
or
push
mov
xor
inc
inc
push
lahf
out
orb
sbb
dec
mov
add
enter
dec
dec
cmp
and
loopne
outsb
subb
sub
pop
ret
rolb
imul
imul
or
jg
jns
addl
das
sub
les
sarl
mov
cwtl
pusha
mov
push
cmp
adc
cs
push
in
inc
dec
pop
popa
shlb
stos
and
or
outsl
ss
lahf
pushf
icebp
les
pop
psubq
bound
push
test
inc
and
dec
adc
hlt
cld
test
std
push
jg
xor
cmc
or
mov
sahf
pop
into
ficomps
cmp
xchg
sbb
or
out
adc
stos
mov
inc
filds
push
pop
sub
loope
loopne
sbb
add
adc
push
xor
imul
xchg
into
mov
mov
repz
adc
jl
enter
loopne
sub
cmc
int3
xchg
push
or
fs
enter
sub
pop
inc
and
cmp
divl
and
jns
mov
sub
out
int
push
push
sbb
mov
mov
cmpsl
mov
in
jmp
repz
pushf
jge
cmc
pop
addl
inc
mov
sbb
xor
mov
pop
adc
fisttps
imul
loopne
sarl
adc
xchg
rorb
sub
mov
adc
mov
pop
into
jmp
and
inc
cmc
idiv
int3
jo
dec
loopne
push
and
and
cmpsl
xchg
jg
ret
xchg
adc
or
xchg
test
int3
imull
mov
cmp
sbb
popf
inc
data16
sbb
xchg
enter
mov
invd
ficomps
mov
cwtl
enter
int3
mov
pop
out
cltd
scas
adc
xchg
push
fdivrs
cmp
test
jae
sbb
dec
aad
xor
jge
negl
or
jae
cs
lahf
sub
loopne
call
push
and
imul
cmp
jp
test
xchg
dec
pandn
cmp
in
sub
mov
std
sub
sub
inc
dec
je
jnp
mov
insl
iret
dec
pop
testb
push
adc
mov
xchg
pop
sti
sub
jg
iret
cli
blci
dec
fisttpl
hlt
jp
add
test
add
std
sub
and
scas
iret
mov
lea
scas
lahf
push
jne
lahf
xchg
cltd
loope
gs
mov
pop
mov
orb
daa
jle
lahf
dec
jle
adc
fisubrl
fcmovnb
adc
sbb
dec
jmp
out
cs
pop
mov
inc
movsl
scas
pop
dec
insl
xor
jo
jl
scas
cmp
mov
aad
push
jge
lret
pop
inc
popa
add
adc
sub
lret
roll
mov
and
sub
push
mov
iret
cmpsl
mov
cli
sbb
dec
xchg
pop
stos
inc
lahf
enter
dec
imul
popa
hlt
dec
das
hlt
adc
sub
sub
jb
fldt
aas
mov
adc
cmp
add
sbb
push
add
loopne
dec
and
sub
sbb
pop
jge
pushf
xor
adc
mov
sbb
fs
popa
ljmp
dec
fmuls
and
sub
mov
fstp
nop
ficomps
xlat
add
mov
push
das
xchg
mov
filds
lret
jmp
sbb
pop
jmp
xor
dec
pop
xor
sub
clc
and
shlb
int
push
inc
cwtl
sbb
add
xchg
dec
es
or
outsl
cmp
xchg
fisubl
jo
iret
icebp
adc
imul
sti
mov
mov
mov
pop
adc
stos
bound
fcompp
inc
cmpsb
sub
mov
adc
cmp
mov
mov
cmp
cltd
sub
dec
push
cmp
push
nop
xchg
mov
test
inc
push
hlt
pop
into
hlt
push
shr
mov
mov
push
negl
pop
cld
sahf
inc
int3
sub
dec
icebp
test
add
mov
pop
cmp
lods
jg
inc
cmp
fnstcw
fistps
repnz
mov
fisubrl
xchg
mov
out
or
fnstenv
popf
pop
popa
lods
les
call
in
dec
mov
pop
xchg
mov
dec
scas
dec
pop
bound
sbb
lea
clc
and
mov
arpl
pop
rcrb
aad
fildl
fnstenv
repz
sub
mov
jl
cwtl
xchg
jg
xchg
rol
dec
mov
mov
bound
jno
mov
jne
xchg
std
test
lahf
mov
jl
inc
out
scas
jmp
fcompl
fnsave
mov
lahf
pop
adc
push
xchg
xor
data16
clc
adc
or
and
or
dec
push
rol
loop
lahf
in
add
push
inc
iret
in
adc
sbb
divl
mov
jp
pop
jns
cs
dec
mov
nop
mov
lods
orb
ljmp
and
popf
sahf
inc
stos
inc
imul
aam
sbb
push
push
ja
fisubrs
sahf
stc
nop
sbb
sti
fdivr
xchg
adc
scas
cmp
fcoms
xchg
pop
sbb
cld
sbb
stos
call
or
fcoml
andb
mov
jl
in
xchg
mov
test
dec
or
lea
and
int3
jne
jecxz
add
lock
mov
test
push
jge
mov
stos
inc
jle
adc
adc
dec
mov
shlb
cmp
and
repz
mov
scas
and
mov
mov
scas
das
sbb
mov
test
xchg
sbb
shll
repnz
sbb
outsb
dec
push
sub
or
cli
xchg
mov
or
lret
notl
lret
outsb
xlat
xor
xor
out
cmp
adc
inc
sbb
repz
pop
push
popa
jne
les
lsl
jbe
add
mov
cld
mov
clc
add
dec
xor
adc
xchg
mov
sub
dec
push
dec
adc
andb
ss
xchg
or
mov
dec
and
shl
xchg
mov
imul
and
lea
xor
lahf
insl
and
inc
add
dec
mov
cltd
sbbb
push
mov
cmp
jne
lds
outsb
ret
lock
test
pop
pop
popf
outsl
scas
cwtl
gs
cmp
orps
xor
sbb
inc
adc
stos
nop
loopne
pop
stos
cmc
mov
ret
hlt
aas
and
fadds
int
pop
or
cmp
sub
test
inc
cmp
pop
dec
clc
lods
sahf
outsb
mov
dec
ss
cli
loop
sbb
dec
das
cmpsl
fistpl
aas
nop
sbb
xchg
cmp
jmp
int3
jns
sub
or
in
ljmp
outsb
shlb
cmp
mov
rcr
cmp
out
inc
je
inc
pop
push
adc
cmpsl
or
lret
xor
imul
idivl
mov
pop
int3
lret
or
jno
lahf
fbld
cld
sti
cmp
xor
das
jae
add
mov
mov
dec
inc
xlat
jmp
outsb
dec
mov
mov
hlt
sub
lahf
or
test
bndldx
adc
add
sti
into
xor
or
out
mov
scas
lock
sub
addr16
jge
in
sbbb
test
imul
xor
ret
call
jb
in
inc
and
adc
int
test
sete
sub
push
jb
call
xchg
inc
mov
xchg
and
aas
call
mov
scas
mov
mov
fcmovnb
mov
mov
scas
mov
mov
pop
lock
mov
dec
cmp
sbbl
lret
das
add
out
sahf
flds
pop
hlt
stos
pushf
test
jbe
cmc
mov
jecxz
and
cmc
push
sub
sbb
or
out
sub
mov
cld
popa
inc
repz
daa
fcomp
loopne
push
cmc
pop
xor
mov
adc
mov
nop
add
rorl
pushf
int
aam
cld
and
cmc
test
sbb
xor
cmp
cltd
fiadds
sbb
pop
shl
xchg
in
shrl
sbb
jp
fcomps
pop
pop
inc
lock
movsb
xlat
in
mov
movsb
call
mov
and
add
lret
sbb
dec
cs
push
jbe
or
mov
jecxz
jns
rcll
or
jb
cld
adc
lds
and
jmp
fists
and
stc
mov
cmp
aaa
stc
popf
mov
push
addb
test
xchg
out
jl
adc
mov
inc
mov
add
dec
push
test
rorl
and
push
jo
and
bound
shr
sub
xor
fwait
pop
adc
sbbb
or
and
test
or
and
iret
push
scas
inc
jecxz
cmp
xor
jge
dec
dec
lahf
movsb
shrl
mov
jl
and
and
dec
fmuls
dec
and
pop
cmc
sbb
dec
mov
inc
imull
and
lea
xor
jne
inc
dec
into
mov
jno
sub
fsubl
je
ljmp
and
inc
cmpsl
xchg
jns
leave
in
call
and
jo
jae
popa
adc
inc
lods
int
in
inc
xchg
hlt
sub
adc
stos
aas
out
mov
cmpsl
mov
pop
dec
loopne
pop
mov
adc
dec
pop
pop
pop
insb
int
bound
jl
mov
and
adc
dec
jns
xchg
sahf
and
xchg
xchg
repz
push
jmp
aad
lahf
pop
cmp
loopne
pop
jmp
ds
and
sbb
lock
sbb
cmp
movsl
sarb
popf
push
or
ret
rolb
icebp
jle
adc
jl
test
inc
push
push
pop
or
cmp
xor
jmp
inc
mov
dec
movsl
inc
fisttpl
popa
sub
mov
mov
jb
inc
add
push
lahf
jg
and
pop
inc
jecxz
outsl
sub
pop
inc
jle
cs
inc
mov
mov
jmp
mov
int3
mov
mov
push
cmp
out
adc
fdivrp
leave
popf
jno
push
mov
data16
call
mov
lcall
jb
xor
movsl
cs
popf
cwtl
pop
or
mov
out
rcr
dec
pop
pop
sub
insl
cmpl
sub
cs
lods
jb
mov
sub
and
je
or
mov
push
out
or
xchg
aaa
xchg
mov
add
int
jge
push
jg
pop
es
sub
mov
inc
add
fsubrs
outsl
inc
cli
test
sti
pop
cs
add
ss
dec
mov
std
pusha
andb
lods
mov
push
jg
gs
xlat
cmp
push
pop
fsubr
stos
lea
outsb
inc
mov
push
lahf
jne
mov
push
push
lea
cmp
scas
xchg
fists
push
aas
cmc
push
jle
sbb
cli
add
inc
lods
out
jle
aas
pop
ret
movsl
xchg
dec
addb
push
add
mov
andb
syscall
xchg
cmp
das
test
gs
in
sub
push
int3
inc
add
scas
fcoml
stos
int3
or
inc
inc
jb
loop
jl
subl
rcll
out
push
ret
mov
cld
pop
movsl
lea
icebp
mov
cmp
ss
js
outsl
or
scas
mov
mov
fwait
pop
test
sub
jg
in
nop
out
mov
jg
mov
rorb
mov
mov
inc
lock
movsl
lahf
rcl
sub
xor
aam
fdivr
ljmp
dec
mov
in
icebp
adc
movsl
das
hlt
xchg
cmpl
std
and
add
daa
adc
out
jle
push
fistps
sub
xchg
popf
pop
imull
and
mov
ljmp
cli
mov
push
jns
out
push
and
insl
data16
mov
pop
nopl
lock
int
int3
ja
inc
inc
cmp
inc
mov
cmp
cwtl
sub
movsl
mov
mov
in
xor
mov
sbb
or
jp
push
sub
dec
dec
fidivl
icebp
inc
mov
ljmp
icebp
call
adc
mov
subl
dec
pushf
jp
sbb
lahf
aas
push
sub
inc
jnp
dec
stos
int3
pop
xor
in
pop
loop
adc
testb
mov
sub
je
xchg
cld
cmp
int
ds
cmp
scas
test
lods
and
mov
or
dec
inc
and
iret
sub
stos
aas
push
cmp
es
mov
test
stos
dec
inc
mov
sub
rolb
mov
fimuls
insb
push
in
fsubl
sub
pop
cmp
inc
or
rcll
imul
or
lock
sub
sub
push
jg
bound
dec
shll
add
movsb
movsl
sub
dec
pop
stos
test
mov
cmp
dec
arpl
mov
pop
lea
pop
pop
mov
and
inc
pop
test
mov
popa
rorb
dec
pop
add
repz
inc
xor
add
inc
repz
icebp
mov
xchg
sahf
shll
or
cwtl
and
jmp
outsb
dec
adc
inc
test
adc
cmp
adc
lret
add
pop
ds
arpl
or
scas
and
cmc
pop
xchg
push
mov
sti
es
sbb
mov
and
ja
flds
lods
data16
shll
sbb
fcmovb
and
enter
mov
stos
jg
or
shll
std
loopne
mov
ret
out
push
scas
and
fistl
test
sub
push
push
imul
pop
aad
sbb
stos
lahf
inc
cmc
fs
cmp
jg
xor
outsl
pop
mov
aas
adc
sub
xchg
std
mov
aam
stos
add
and
xchg
jae
in
or
stc
jno
xlat
pop
addl
das
aam
mov
sbb
xchg
xchg
xchg
push
mov
add
inc
test
push
adc
mov
dec
das
and
xchg
jge
pop
mov
lret
jns
fadd
fimull
cmp
mov
mov
dec
fistps
or
xchg
test
cmc
sub
xchg
xor
addr16
inc
sbb
pop
aaa
mov
subb
adc
mov
ret
data16
sub
repnz
inc
cmp
stc
ret
jnp
sbb
adc
mov
and
cltd
xor
and
sub
xorb
mov
pop
test
dec
sbb
xchg
add
lahf
push
into
pop
bnd
add
fisubs
out
mov
frstor
sbb
sub
mov
mov
push
jne
adc
stos
mov
aam
mov
inc
faddl
pop
faddp
aas
in
or
push
and
sub
es
ud1
xchg
lcall
rorl
jl
or
dec
movsl
aas
sub
pushf
jl
mov
aas
stc
into
adc
pop
mov
dec
repnz
aas
xchg
out
data16
movsb
mov
or
mov
es
fcomps
stos
lahf
pop
push
movsl
xchg
hlt
mov
dec
iret
xor
jp
pop
inc
push
pop
sbb
out
scas
icebp
pop
add
jmp
cmp
adc
in
outsl
into
repnz
mov
mov
stos
test
test
and
fidivrl
cli
negl
and
adc
cld
rclb
rorl
sub
mov
repz
fcmovnu
or
repz
into
or
shll
or
dec
push
dec
mov
out
jl
fwait
pop
xchg
faddl
xor
sbb
ss
adc
dec
nop
outsl
insl
arpl
mov
lret
adc
xor
lret
fsubrl
fistps
cmp
movsl
in
repz
in
or
hlt
mov
insl
and
lcall
mov
mov
mov
add
cs
repnz
mov
fisubl
xchg
cwtl
pop
in
cmpsl
loopne
sbb
mov
sbb
mov
fnsave
fwait
pop
dec
and
dec
inc
pop
ret
and
fwait
pusha
pop
dec
pop
xor
out
mov
inc
js
out
xor
in
gs
add
push
cmp
dec
push
jle
shr
pop
and
fmull
nop
sbb
mov
add
daa
sti
inc
jne
adc
dec
cmpsl
push
gs
inc
lock
in
xchg
mov
mov
or
dec
jecxz
mov
andl
and
popf
in
jne
lret
jnp
test
inc
or
aad
add
inc
mov
and
out
rcl
loopne
xchg
fildl
sub
mov
jl
imul
mov
jae
outsb
or
sbbb
inc
leave
push
cmp
add
adc
or
push
pop
sub
daa
cmc
and
pop
lods
sub
or
or
sti
stc
imul
xchg
nop
test
leave
xlat
inc
sbb
mov
adc
jnp
inc
adc
std
jae
sub
jl
fdiv
daa
in
fbld
xchg
fcompl
pop
int3
stos
sbb
adc
stos
mov
lret
loopne
sbb
xchg
lods
adc
inc
mov
push
ja
fidivl
dec
jg
gs
roll
push
call
xchg
sti
sbb
sbb
int
fists
sub
mov
repnz
fists
sbb
push
cwtl
mov
int3
sbb
sahf
mov
inc
xchg
mov
inc
lea
or
mov
add
nop
xchg
push
jecxz
lcall
push
fldt
add
xor
pop
cmp
addr16
fisubrl
daa
stos
rcrb
scas
dec
fcompl
xlat
adcb
sbb
popa
xor
inc
cmc
pop
aaa
fs
iret
stos
xchg
stos
xor
popf
add
mov
mov
sub
pop
loop
inc
xor
inc
int
or
mov
outsl
js
nop
sbb
sub
out
mov
pop
jge
outsb
push
cld
insl
add
xchg
dec
jne
pop
push
xor
cmc
je
jecxz
push
jl
mull
lods
push
aas
shr
adc
cltd
daa
mov
xchg
lods
roll
ds
and
shrd
fs
xor
fildll
xchg
test
mov
xchg
les
push
ds
das
xlat
in
pop
fcoms
mov
mov
cmp
mov
pop
call
and
xchg
xchg
xor
test
pop
push
push
mov
lahf
xchg
pop
xchg
out
inc
notl
xchg
mov
ret
dec
mov
std
outsb
push
adc
jecxz
xchg
enter
pop
xchg
inc
cmp
inc
int
xchg
xlat
sub
push
orl
add
shl
stc
jne
jecxz
fnstsw
test
inc
out
lret
idivl
std
jbe
add
enter
sbb
movsl
bound
pop
fmull
pushf
cli
ret
jae
mov
inc
adc
mov
push
add
out
push
jle
ret
inc
lret
pop
cmpsb
dec
add
inc
outsb
aad
lcall
ljmp
inc
mov
aam
push
mov
in
rclb
push
and
pop
mov
mov
or
pop
gs
sub
add
mov
cmc
sahf
in
es
or
loop
add
daa
inc
inc
push
pop
pop
sub
xor
push
sbb
testl
add
jl
or
sti
adc
xor
test
mov
mov
dec
jge
adc
cmpb
fstp
hlt
push
mov
push
jne
pop
iret
ret
mov
xchg
jbe
sub
add
cmp
out
movsl
out
hlt
xor
popa
mov
push
mov
ret
lods
in
int3
aam
xchg
push
leave
addr16
test
push
enter
sbb
xchg
frstor
imul
and
and
inc
repnz
fsts
pop
mov
mov
or
pop
mov
pop
add
or
dec
xchg
xor
sub
pop
icebp
rcll
rolb
push
pop
push
pop
xor
pop
or
int3
push
pop
jbe
insl
xor
test
add
mov
pop
mov
fldenv
fidivrl
insl
mov
dec
pop
loop
mov
push
add
mov
in
cmp
xchg
push
xor
sbb
movsb
push
ret
test
mov
jge
mov
ficomps
repz
lahf
imul
pop
aaa
and
inc
mov
and
pop
sbb
lret
jne
xchg
hlt
or
aas
jo
adc
sub
mov
aas
jnp
push
imul
ret
inc
cld
jp
out
inc
nop
cmp
iret
in
or
repz
int3
les
mov
xlat
addr16
stos
ja
imulb
test
cmc
pop
iret
lahf
fcoms
test
fcmovu
cmp
mov
sub
add
sub
cmp
push
inc
and
push
insb
add
mov
xchg
pop
mov
jno
int
aad
aas
inc
std
pushf
js
push
dec
pusha
push
adc
cmp
fnstsw
xor
adc
adc
pop
push
cli
fdivr
pop
jl
and
mov
in
mov
dec
and
popf
in
int
inc
sbb
cmpsb
nop
call
cmp
iret
hlt
adc
sub
xor
out
adc
cmc
pop
stos
adc
aad
and
or
or
xchg
insb
mov
and
push
cmp
xor
xchg
sbbl
and
stos
addr16
mov
push
shl
enter
cmp
mov
jmp
and
mov
mov
and
xlat
xor
cmp
or
mov
mov
je
and
fbld
push
or
or
pushl
call
sub
outsb
and
inc
call
aaa
roll
mov
mov
imul
fmuls
aaa
cmc
dec
or
rolb
mov
or
or
das
pushf
pop
mov
popa
push
push
pop
inc
mov
push
sub
mov
das
add
mov
jns
dec
test
mov
pop
mov
or
sbb
push
out
mov
mov
push
dec
sub
notl
sub
pop
mov
jmp
adc
inc
out
jbe
sub
mov
and
les
inc
dec
std
xor
ret
sbb
xchg
ror
arpl
sub
test
and
push
fsts
cld
and
js
cmp
int3
sti
adc
sbb
sbb
xchg
loopne
push
pop
inc
sub
scas
lods
xchg
add
dec
in
xor
sub
pop
push
mov
add
clc
enter
pop
mov
cmpsl
jl
and
xor
aas
sbb
std
and
jne
inc
xor
ss
inc
xchg
jae
inc
xor
call
and
mov
daa
leave
add
in
xor
and
lds
cld
cmp
int3
frstor
cwtl
xchg
xchg
push
pop
arpl
ljmp
shrl
pop
mov
decl
popf
fsubrp
pop
aam
mov
mull
jae
scas
pop
xorb
inc
aaa
jno
and
dec
sti
aas
aam
and
and
adc
nop
mov
sbb
filds
outsl
inc
out
int
xchg
inc
mov
leave
inc
movsb
cwtl
jle
pop
mov
adcb
in
cwtl
icebp
or
push
es
push
xchg
or
jl
add
push
adc
xorl
cmovne
push
popf
cmp
dec
loop
jb
jns
mov
pop
fdivp
inc
dec
dec
pop
stos
mov
dec
xchg
xor
loop
pop
pushf
and
inc
mov
pop
mov
gs
dec
cmp
adc
xor
inc
rorb
in
fimull
pushf
mov
dec
pusha
sub
fisubrl
mov
push
pop
mov
pusha
cmp
dec
sub
mov
sbb
dec
sub
inc
pop
loop
cmp
mov
inc
add
in
pop
jmp
lahf
jae
pmulhuw
mov
mov
xor
jl
and
popa
enter
push
inc
lahf
push
idivl
ret
ficoms
jl
push
cli
mov
jl
inc
popf
insb
sub
jnp
pop
add
test
push
cld
rclb
out
jb
loopne
out
push
les
and
lahf
cwtl
punpcklwd
cmp
es
dec
jl
loop
stos
push
icebp
xchg
inc
lods
xlat
or
jp
dec
or
test
movsb
fisttps
fdivrp
pusha
movsl
aaa
les
adc
jo
and
cmpsl
mov
out
pop
arpl
insb
stos
test
adc
int
scas
cmp
mov
or
pop
enter
pop
lock
mov
cmp
loop
mov
fidivrs
in
sbb
inc
icebp
or
dec
scas
cwtl
adcb
int
inc
inc
and
mov
fdivl
jg
leave
stos
and
sbb
mov
call
clc
bt
adc
xchg
test
jo
ds
or
loopne
sub
adc
inc
cmp
xor
out
data16
or
mov
test
pop
dec
pop
mov
xor
insb
add
inc
in
pop
shll
jb
or
and
mov
daa
lea
push
pop
add
or
adc
sbb
xchg
cmp
test
mov
push
mov
scas
inc
lcall
mov
in
jno
lcall
hlt
orl
ss
and
stc
or
xchg
adc
jl
test
and
sbb
iret
mov
or
addr16
cs
insb
imul
test
add
and
ja
jo
pop
pusha
imul
sub
rsqrtps
mov
mov
or
fdivrl
mov
shr
in
cmp
leave
jle
push
add
push
and
mov
mov
les
aas
xor
jp
rorb
in
xlat
xchg
icebp
xchg
outsl
inc
shl
and
mov
mov
rcll
inc
mov
mov
sub
call
jle
fsubrl
add
lods
popa
addb
mov
lret
les
arpl
xchg
sbb
ret
notb
pushf
test
push
push
jl
test
orb
flds
jg
jne
ds
sub
aas
test
lahf
scas
shl
bnd
jnp
xor
dec
sarb
mov
dec
add
int
test
cmp
shlb
fldt
inc
scas
dec
mov
dec
inc
cltd
adc
sub
pop
ds
repz
cli
and
mov
jmp
or
xor
fsubl
push
dec
adc
cmp
int3
sbb
sub
ret
sbb
sbb
xor
xchg
jno
mov
clc
and
and
clc
les
push
xchg
push
inc
dec
add
shl
mov
addr16
xchg
mov
mov
imull
jns
lahf
or
xlat
out
mov
mov
out
daa
das
jo
xlat
int
mov
pop
repnz
jns
dec
dec
and
xor
add
adc
sub
nop
sub
cmp
mov
int
rcll
out
js
xor
mov
xchg
push
adc
cmp
vorpd
sbb
rorl
pop
lods
test
insl
cmpsb
and
stc
lahf
mov
lret
cmp
popf
push
push
jg
int
cmpsb
test
test
inc
cmpsb
mov
rclb
imul
jne
xlat
lea
or
pop
cmc
pop
sub
lret
int
flds
dec
outsl
pop
imul
adc
inc
jp
add
push
pop
in
push
popf
mov
dec
cmpl
mov
test
fwait
popf
adc
pushf
clc
add
in
sub
dec
and
or
mov
sub
pop
sub
and
or
and
cmp
loopne
and
hlt
test
je
out
sahf
aad
cli
or
jl
xor
push
iret
test
pusha
sub
jno
push
fdivrp
adc
loopne
or
stos
out
test
iret
xor
int3
xchg
add
inc
cmp
iret
or
dec
jne
xchg
cmc
xor
xchg
jp
cld
cmpsl
mov
xor
jmp
pop
or
fidivl
sub
sbb
mov
cmp
cmpsb
nop
popa
mov
jp
xor
push
out
cmp
or
cltd
cs
and
xchg
cld
mulb
mov
out
jl
pop
mov
fwait
hlt
push
jno
and
inc
xor
jmp
xchg
cmp
mov
fldcw
pop
fnstcw
xor
iret
lods
or
sbbb
push
mov
adc
ds
std
out
jno
std
or
jge
or
fwait
loop
push
lods
add
pushf
inc
imul
fcoms
mov
mov
mov
ds
testl
cmp
push
jl
bswap
sbb
lahf
push
jns
in
xchg
and
pop
ss
outsl
jnp
shll
pop
xor
sti
negl
and
sbb
notb
add
xor
push
icebp
popa
call
and
add
stos
dec
push
pop
das
sub
cmpb
sbb
sbb
pushf
icebp
mov
xchg
in
andb
pop
xor
pop
std
test
add
and
mov
push
shll
mov
fstl
adc
dec
xchg
pop
or
jl
mov
cmc
and
pusha
repnz
nop
pop
mov
testl
push
stc
xor
cmp
cld
fs
cmp
dec
aad
lea
and
rcll
pop
lahf
push
outsl
fcomip
and
adc
push
and
int3
repz
push
stos
push
xor
popa
cld
cmp
int
xchg
ljmp
cld
sarb
push
popa
scas
lods
sbb
fldl
lret
sub
add
and
adc
out
cmp
mov
mov
and
in
inc
mov
cmc
ds
add
shl
cwtl
cmp
jns
mov
mov
xor
cmpsb
call
popl
in
xchg
imul
fcomps
xor
pop
pop
xor
or
lods
mov
imul
leave
popf
rclb
xor
sbb
cmc
lods
jae
fdivp
dec
lahf
and
out
sahf
jl
and
js
jle
jb
sub
and
repz
notb
shrl
adc
sub
fs
loopne
sti
mov
adc
jnp
dec
pop
scas
fwait
xlat
sbbl
xchg
aaa
stos
xchg
cli
and
jns
pop
cmp
mov
test
xor
sti
inc
les
cmp
push
imul
and
or
imul
into
fsubl
lods
mov
add
jg
aam
int
xchg
fisubs
jmp
inc
add
push
lahf
xor
ss
xchg
jg
in
pop
movsl
adc
push
ret
out
test
or
mov
sbb
sbb
cmp
push
pop
cmp
dec
fdivs
call
test
jo
outsl
loopne
icebp
lret
mov
iret
mov
jg
jns
out
sbb
daa
repz
ret
add
pop
xor
jmp
push
mov
es
mov
mov
dec
fsub
push
mov
test
and
scas
mov
mov
pop
cmp
sub
fnstenv
gs
or
cmpsl
adc
adc
xchg
je
call
or
jb
pop
push
push
push
cld
int
and
iret
pop
pushf
mov
test
sbb
xchg
nop
push
movl
dec
dec
icebp
test
and
push
hlt
mov
push
push
mov
mov
inc
es
push
xor
add
movsl
xor
adc
lret
aad
lcall
mov
sub
push
ror
aaa
int
stc
lahf
rclb
push
test
xor
push
cmp
data16
jmp
fists
fisttps
je
adc
and
mov
jno
fwait
push
push
icebp
mov
mov
inc
mov
cmp
imul
sarl
pop
test
jne
sub
int3
in
arpl
or
mull
in
int3
xlat
sub
fbstp
adc
pusha
movsl
or
jae
sub
sahf
mov
fimull
rclb
repnz
into
lock
add
enter
jae
xchg
dec
sbb
inc
bnd
jnp
mov
jl
lds
inc
pop
add
cmpb
push
dec
cmp
xchg
push
adc
jne
lods
test
or
dec
mov
inc
insb
movsb
nop
shrb
dec
imul
sahf
and
pop
addr16
and
into
sub
shll
push
and
sti
jne
adc
call
jl
enter
and
daa
sbb
jl
out
orl
dec
int3
pop
jecxz
ret
xchg
mov
hlt
shrl
push
jl
inc
pushf
imul
stos
in
inc
popl
je
lea
adc
mov
test
jg
icebp
shlb
inc
mov
push
mov
mov
and
inc
xchg
mov
sbb
jb,pn
data16
add
and
lea
and
mov
sbb
loopne
shll
testl
hlt
andb
xor
dec
xchg
mov
std
pop
sub
cmp
push
adc
fcmovb
sub
inc
and
dec
in
jne,pn
xchg
jb
xor
sbb
out
sahf
jge
gs
inc
cmp
insb
or
scas
add
fistpl
cmpsl
test
cmp
stos
das
push
mov
dec
sbbb
pop
out
lea
test
lods
clc
imul
insl
mov
sub
sbb
cmp
add
add
add
pop
aam
mov
cli
and
sub
rcrl
sbb
add
jge
push
cmp
jne
cmp
iret
pop
imulb
fmull
jns
and
inc
int
adcl
pop
push
out
mov
mov
jo
mov
inc
stos
jns
sub
scas
jnp
cmp
jns
xor
mov
or
out
mov
push
push
int3
or
hlt
adc
sbb
jb
jecxz
cld
mov
rol
sub
fstpl
fcmovnb
sti
and
inc
mov
or
jb
fisubs
std
sub
aam
stos
mov
aad
push
in
xchg
push
dec
pop
push
dec
pop
inc
adc
daa
lret
stos
ljmp
js
sarl
insl
add
sub
cmp
adc
hlt
push
ss
lahf
mov
notb
inc
add
lahf
push
jnp
or
jae
dec
sarb
jl
cwtl
out
inc
add
xchg
enter
push
filds
mov
lods
inc
add
cmp
mov
push
imul
test
sbb
cmp
xchg
int
push
push
sbb
sub
push
mov
lcall
jl
subl
push
jo
or
fstps
push
sbb
adc
addl
rep
inc
loope
sub
aas
inc
lahf
pop
xchg
rclb
sub
and
lahf
jnp
mov
lods
movsl
les
jno
loopne
insl
pop
imul
sbb
fstpt
pusha
cld
sub
or
and
mov
sub
and
int
jo
pop
cld
inc
mov
add
cmp
cmp
mov
add
or
add
and
xchg
xchg
add
cmp
add
dec
push
int
or
push
insb
popf
mov
add
lds
cmp
ficoml
sbb
xchg
dec
mov
jae
adc
int
xor
cld
pop
sbb
or
jo
mov
adc
jne
mov
fsubrl
cmp
xchg
lahf
xchg
sub
int
or
inc
sahf
std
xchg
adc
and
cmc
jp
pop
aad
sub
sbb
adc
cmp
xchg
add
inc
cmpsl
cwtl
and
lcall
arpl
pop
xor
ret
and
fidivs
jp,pt
mov
jnp
xchg
call
subl
sahf
test
add
mov
jp
lahf
push
iret
xchg
bound
aam
sahf
sub
aad
push
fldcw
cwtl
popl
out
subb
scas
iret
xchg
xlat
xor
add
dec
adc
dec
inc
or
pop
out
and
xlat
pop
add
adc
roll
jmp
cld
sub
pop
or
and
inc
or
pop
aad
out
dec
add
sub
call
inc
ret
stc
jge
adc
add
xor
adc
aad
add
negl
xor
mov
add
and
mov
xlat
sbb
data16
call
sbb
xchg
mov
push
or
js
mov
and
cmp
sbb
and
jge
rcll
jne
mov
sbb
xor
sahf
lret
push
sbb
jno
stos
and
or
mov
pushf
lods
jle
mov
mov
je
cmp
mov
xor
mov
out
inc
frstor
sub
cli
jne
test
insb
mov
mov
sbb
out
sub
xchg
or
jg
test
pop
enter
adc
dec
mov
mov
fistpl
adc
andl
dec
inc
dec
jno
repz
sbb
add
dec
call
shll
mov
or
or
pop
sbb
into
pop
pop
sbb
mov
test
push
insb
mov
cmpsb
push
clc
sbb
pop
out
ret
add
pop
test
insl
push
std
outsl
movsl
jge
jns
cmp
jo
fbld
cmp
push
and
outsl
ds
xor
ficoms
or
ljmp
sub
repnz
xchg
pop
call
dec
dec
push
call
jne
xchg
imul
inc
or
out
movl
mov
enter
cli
inc
sbb
cmp
call
out
fists
jbe
insl
add
xchg
movsl
pop
or
loopne
ljmp
lret
xchg
shll
sahf
les
enter
in
gs
sub
lret
iret
pushf
pop
and
or
rol
xor
xor
jne
mov
xor
pop
clc
int3
and
or
popa
imul
into
iret
add
push
inc
push
dec
roll
lahf
leave
dec
movsb
in
cld
stos
xchg
add
mov
xor
cmpl
ja
mul
pop
cli
adc
pop
push
and
add
mov
sub
fstl
xchg
idivb
cmp
or
out
fsts
stc
sbb
mov
push
loopne
pushf
inc
adc
push
xchg
loop
inc
or
add
pop
cld
and
lds
pop
mov
in
mov
sarl
push
jbe
and
adc
dec
imul
pop
jp
adc
leave
fstl
push
mov
mov
test
and
and
cmpsl
push
enter
sub
xchg
aas
pushf
call
arpl
sub
gs
and
jns
and
pop
filds
mov
es
sbbl
pop
and
les
jle
xor
sub
cli
out
pop
shrl
test
and
loopne
cmp
inc
push
xlat
cld
gs
jl
add
and
fcompl
icebp
adc
xor
clc
or
lods
imul
push
sbb
int3
lcall
pop
mov
stos
test
mov
inc
repz
shrb
cmp
inc
add
jp
jg
leave
add
or
mov
mov
mov
inc
testb
aaa
scas
lea
aas
lds
fdivr
int3
jmp
mov
sub
test
ss
pop
outsl
outsl
xlat
or
loopne
int3
dec
push
scas
je
xor
mov
jle
iret
int
test
push
ficomps
fs
pop
das
push
push
xchg
loope
and
int3
or
lds
xchg
cmp
mov
push
iret
iret
sub
mov
popa
outsb
add
and
lahf
push
testb
push
and
xor
sub
scas
out
leave
ds
pop
xchg
mov
in
lahf
xor
add
or
jge
xor
setbe
pop
mov
jle
and
push
push
imul
in
addr16
repz
fbstp
jg
inc
fbld
inc
push
cli
nop
cmp
nop
xchg
call
pusha
push
popa
pusha
mov
dec
jne
and
mov
xor
lcall
sbb
xchg
int
push
push
pusha
pop
mov
inc
xchg
xchg
jne
push
test
ja
xchg
mov
cltd
dec
mov
push
or
dec
cmpsl
outsl
and
bnd
loop
nop
mov
fistl
sub
adc
fbld
in
jno
icebp
popf
add
sub
insl
xchg
or
mov
xor
mov
fildll
stos
mov
iret
call
mov
sub
test
daa
cmc
cli
inc
mov
push
imul
mov
repnz
sub
inc
jnp
jecxz
inc
jne
sti
js
push
aam
out
push
icebp
loop
out
hlt
int
lds
or
ret
jg
xchg
clc
xchg
cmp
imull
adc
pop
andb
pop
jbe
pmullw
sbb
xor
pop
lods
in
sbb
movsb
movsb
adc
adc
mov
roll
cld
or
jge
arpl
xchg
movsl
into
repnz
ds
cs
nop
mov
push
dec
and
adc
lcall
negl
shll
cmp
add
pop
xchg
addr16
stos
lods
lea
add
dec
mov
pop
cmc
sbb
adc
movsb
rcrl
add
pusha
sbb
cmp
or
pop
loop
imul
scas
das
xor
push
add
lock
mov
push
lret
jecxz
es
xor
push
pop
push
out
xchg
mov
bound
push
dec
js
leave
xchg
push
push
xchg
aas
jl
add
icebp
out
push
xlat
paddb
and
lret
cli
pop
pop
sub
fwait
les
add
sub
popf
test
jmp
lret
dec
sbb
xor
cmc
lods
pop
pop
mov
sub
dec
push
test
ds
ds
out
or
dec
mov
xor
mov
xchg
mov
mov
or
and
icebp
std
lods
push
dec
inc
pop
daa
in
cli
or
cmp
sahf
or
or
aas
cmc
imul
pop
push
repz
mov
sub
xchg
loopne
cmc
addr16
add
in
lahf
into
loopne
or
lret
xchg
sub
js
pop
in
sbb
jb
sbb
arpl
dec
dec
inc
cmp
std
enter
stos
into
cmp
mov
add
push
xorl
rcll
mov
icebp
out
aas
inc
pushf
or
stc
mov
cmp
sarb
sub
popa
mov
out
mov
push
ljmp
xor
mov
test
or
cmp
sbb
sarl
or
mov
push
adc
push
cmp
imul
and
fidivs
add
inc
outsb
or
pop
bound
inc
mov
mov
sahf
mov
inc
cld
leave
cld
push
cli
lret
pop
scas
aad
iret
pop
ja
sub
adc
into
int3
mov
push
cmp
mov
sbb
inc
adc
addb
push
mov
jg
aaa
mov
pop
les
sub
enter
int3
mov
mov
jne
test
add
mov
nop
push
lahf
out
cli
js
dec
in
and
jle,pn
or
mov
jmp
xchg
je
dec
xchg
push
into
xchg
sbb
imul
xchg
inc
cmp
jl
xchg
mov
jno
sub
cmp
ds
dec
pop
pop
mov
aas
ret
xor
ret
adc
lahf
adc
daa
add
sub
movsb
loopne
pop
into
push
sbb
test
cmp
add
shr
mov
pop
lds
mov
jbe
das
inc
add
pop
imul
mov
push
in
and
daa
roll
xor
jl
pop
inc
xchg
cld
xor
mov
int3
das
sarl
js
sub
pop
mov
inc
fcmovne
aas
out
rorl
pushf
call
jo
mov
movsl
pop
arpl
mov
mov
lcall
fcoms
cld
insl
les
push
and
imul
cmp
fdiv
inc
outsl
or
test
push
out
sub
jl
pop
xor
dec
insb
sahf
mov
mov
adc
mov
rorb
xor
ljmp
pop
inc
lahf
mov
clc
fmuls
push
divl
mov
mov
pop
mov
mov
jp
push
fwait
lahf
cwtl
in
cld
sbb
stos
pop
cli
or
adc
adc
paddusw
mov
in
lret
in
je
sbb
mov
push
add
jnp
movsb
dec
stc
sub
jb
dec
shll
test
push
pop
cmp
adc
pushf
in
sbb
jp
push
add
imul
xchg
sahf
push
push
pop
jns
or
add
pop
std
int
mov
cmc
dec
sti
adc
icebp
call
les
and
data16
jle
lds
and
push
pop
or
scas
stos
pop
popa
sbb
xor
loope
int
pop
sbb
adc
dec
pop
pop
inc
push
popf
inc
cmp
cli
and
stos
call
push
lds
out
cli
fs
fs
and
iret
aad
and
in
stos
fcmove
sbbl
lds
stos
or
mov
nop
cmpsb
out
iret
inc
mov
sub
adc
pushf
sub
jb
pop
xchg
jns
jl
cmp
test
pop
adc
mov
roll
fwait
jo
add
int3
or
inc
ret
inc
pop
addr16
inc
cli
mov
inc
mov
sbb
int
jno
in
cwtl
aaa
stos
mov
lods
push
aas
dec
push
and
sub
mov
pop
adc
pop
cmp
push
sub
testb
pop
popf
or
inc
dec
testl
lods
pop
push
sub
jg
out
outsb
test
push
and
pop
fldcw
std
jns
push
or
xor
sarb
nop
iret
pop
rol
and
cmp
inc
insb
stc
mov
movsb
mov
adc
push
ja
mov
push
lods
push
and
negl
mov
inc
or
in
inc
jmp
pop
inc
cmp
xor
scas
inc
imul
mov
add
je
inc
mov
pop
repz
jnp
mov
or
inc
adc
jmp
mov
or
sbbl
lods
pop
nop
movswl
repz
push
addl
roll
push
and
fstl
or
inc
ret
mov
loope
add
sub
inc
push
inc
mov
repnz
cmp
xchg
jge
cs
cld
mov
mov
or
insb
mov
bound
cmc
fsubrl
jmp
cmp
dec
mov
in
jmp
test
out
xlat
ret
aas
adc
roll
push
cmpsl
xor
and
cmp
mov
dec
fwait
and
adc
push
int3
mov
sbb
iret
cwtl
stc
nop
sahf
pop
test
push
adc
pop
or
mov
pop
stos
and
add
or
xor
aas
xbegin
dec
xor
mov
xor
mov
sub
add
sub
cmp
lods
sub
push
or
cmp
pop
push
sbb
fists
dec
mov
enter
cmc
fists
repnz
sub
xor
jle
cmp
inc
jne
sti
cmp
cmc
pop
ficompl
pop
sbb
inc
dec
mov
call
cwtl
sub
push
push
xor
adc
push
and
pusha
adc
cmp
sub
loopne
xor
in
push
pusha
mov
cwtl
cld
and
sub
sbb
cmp
fsubrl
cmp
sub
cmp
mov
add
mov
jns
test
sbb
mov
sbbb
movsl
inc
cltd
cld
dec
pop
push
adcl
inc
cmp
add
or
add
pop
js
leave
rorb
sub
fsubrs
mov
ficompl
sbb
movsl
dec
nop
enter
push
pop
and
shr
addr16
rolb
lret
jne
mov
mov
pop
dec
pusha
jns
pop
icebp
inc
cmp
testl
int3
cmp
inc
push
leave
int
mov
jg
cmp
imul
and
negl
pop
call
iret
jl
xchg
lahf
repz
outsl
hlt
sar
mov
aad
into
pop
cs
imul
or
and
pop
ljmp
sahf
sub
cltd
pop
inc
adc
mov
xor
mov
sbb
sub
cmp
adc
mov
or
fs
sub
jge
ficomps
cmp
lods
loopne
xor
and
idivb
incb
clc
popf
jnp
or
sub
and
subb
jne
daa
mov
pusha
mov
out
aam
sbb
aad
outsl
stc
or
pushf
mov
dec
mov
loope
gs
push
mov
dec
popf
andb
or
insl
sub
shlb
push
inc
mov
pop
out
stos
and
pop
adc
insl
dec
dec
cwtl
int
xchg
sub
std
enter
cwtl
aad
add
sti
shlb
or
mov
jmp
adc
pop
or
loopne
call
inc
jl
xchg
push
add
push
test
fs
fadd
pop
sbb
loopne
loopne
mov
add
insb
pushf
cmc
push
sti
and
add
sbb
je
daa
mov
mov
push
adc
pop
xor
and
and
add
mov
ds
push
xor
fs
or
out
enter
jmp
bound
inc
dec
shl
cmp
call
push
andl
push
fldenv
xor
test
dec
xor
or
add
int3
sbb
and
out
inc
in
insl
icebp
mov
mov
ljmp
xor
jg
dec
jle
mov
add
sub
or
adc
fmull
and
sbb
adc
jne
mov
cwtl
mov
dec
dec
jmp
dec
xchg
je
lret
mov
mov
repz
xor
sub
dec
push
pop
inc
fisttpll
jae
ja
test
cmpsb
jle
cld
pushf
cmp
pop
aad
dec
int3
mov
cmp
mov
mov
ljmp
cli
mov
lahf
ljmp
sub
nop
out
inc
push
sbb
mov
inc
out
jns
enter
jl
sbb
xchg
inc
xchg
test
mov
sbb
cmp
or
or
pop
xchg
test
push
filds
and
inc
inc
out
aas
es
xchg
adc
jne
and
or
clc
fmul
cmp
mov
pushf
leave
lods
mov
daa
cwtl
fmull
stos
sbb
jbe
lock
shrl
add
call
in
jb
call
jnp
pop
into
stc
sub
inc
movsb
jae
sbb
sbb
dec
xor
stos
arpl
popf
movsb
dec
xor
clc
add
dec
stos
in
int
cli
fwait
cltd
test
movsl
sbb
or
adc
xor
or
jmp
and
xchg
movsb
cmp
negl
mov
adc
add
mov
and
sub
cmp
push
or
xor
add
dec
push
cmp
add
push
pushf
sub
faddl
insb
cld
lcall
add
adc
cld
call
or
lods
sti
sub
cmpsl
pop
and
jns
repz
sbb
sbb
dec
push
pop
dec
or
pusha
leave
pushf
mov
sarb
stos
mov
fdivrl
loopne
movsb
loop
ss
mov
pop
into
adc
jmp
pop
xchg
inc
fcmovnu
ss
repz
testb
daa
ljmp
pop
mov
jno
cmp
jnp
adc
add
pop
in
aad
stos
push
inc
aad
pusha
test
inc
movsb
in
ja
inc
fsubr
and
addl
shl
orb
adc
dec
sbb
mul
or
cmp
and
in
pop
sbb
icebp
dec
insb
xor
stos
ds
mov
loope
and
sub
movsb
mov
ljmp
or
in
inc
outsb
cmp
add
xchg
jo
sarb
movsl
roll
xor
hlt
data16
mov
push
mov
inc
inc
test
cmpl
adc
test
scas
test
adcb
lods
jmp
pop
mov
mov
sub
scas
int3
insl
cmp
add
cmp
add
loop
stc
stos
scas
dec
bound
sub
add
lds
arpl
fldcw
or
enter
rorb
loop
sub
pop
jg
in
fisubrs
aaa
xor
jle
mov
xchg
ret
xchg
cmp
lds
pop
cmp
scas
inc
sub
je
pop
mov
and
mov
inc
neg
out
sub
mov
js
jne
adc
cmp
mov
sti
dec
movsb
cmp
mov
adc
call
je
fisttpl
test
and
inc
mov
iret
das
pop
cmpl
mov
mov
inc
jno
arpl
mov
jo
inc
es
mov
fdivs
imul
bound
or
aad
rclb
push
dec
pushf
dec
daa
adc
fimull
imul
xchg
iret
pop
jp
pop
stc
xchg
push
inc
adc
or
add
push
add
in
lret
rcll
jns
movsl
scas
or
mov
hlt
jno
movsl
rcll
and
cmpsl
sub
inc
adc
jns
ror
imul
cmp
shrl
mov
mov
add
or
mov
repnz
insl
mov
adc
mov
movsl
push
jge
or
jne
les
cmp
cmpsb
or
xchg
mov
bswap
add
aas
shl
inc
lcall
inc
leave
cmp
mov
xchg
cmp
cwtl
rcr
mov
test
fists
and
push
ror
ss
popa
rorl
xchg
lahf
jmp
loopne
adc
adc
sti
and
jg
adc
int
lahf
mov
mov
dec
bound
xchg
repz
dec
jp
aam
leave
mov
call
adc
pop
sbb
lahf
dec
and
jnp
ljmp
inc
pop
mov
repz
cld
js
loopne
dec
inc
shl
lods
push
inc
ja
dec
enter
insl
sub
mov
adc
imul
fstps
and
xor
mov
pop
mov
mov
popf
inc
cmp
jnp
and
aam
lret
xchg
and
sub
mov
cmpsb
int3
imul
rolb
or
cld
mov
fiaddl
mov
in
test
imul
add
mov
xor
stos
and
sbb
and
outsl
cld
mov
jecxz
or
push
int
pop
dec
sbb
fsts
add
add
nop
and
mov
aaa
mov
mov
xchg
nop
in
cmp
mov
inc
add
pop
shlb
inc
icebp
ret
rolb
xchg
cmp
ds
repnz
mov
or
mov
adc
jb
scas
sub
test
call
icebp
mov
sbb
lahf
cwtl
aaa
arpl
test
pop
jmp
cli
sbb
stos
pop
and
jns
xor
cmp
jl
xorb
cvtps2pi
xor
aam
mov
movsl
dec
test
lock
adc
rcrl
cld
xor
mov
jmp
and
mov
add
mov
and
push
pop
sub
in
shll
scas
test
jl
in
adc
dec
es
pop
movsl
and
and
lods
push
dec
mov
jmp
add
pop
cmp
gs
pop
xor
sub
jns
adc
fdiv
shlb
mov
jmp
push
sub
mov
lahf
pop
sub
cmpsl
out
jle
in
add
push
cmp
jns
repnz
je
pop
xchg
pop
adc
cmc
stos
cli
and
cmp
pop
inc
pushf
cld
aas
push
push
pop
and
dec
incl
mov
jp
push
jb
jb
sub
pop
mov
das
pop
int
int
ss
pop
xor
sbb
and
std
add
stos
dec
add
cld
push
in
jae
dec
jno
push
filds
sahf
pop
inc
lret
addb
jae
jae
jne
lock
subl
pop
jp
cmp
ret
push
push
mov
jmp
dec
or
aas
adc
or
imul
pop
test
jne
and
pop
pop
mov
stos
arpl
mov
adc
and
cmp
xlat
cmp
gs
jp
xor
sbb
jno
jae
and
call
iret
arpl
aad
mov
xor
sti
testb
adc
imul
and
xchg
sti
pop
call
fs
les
dec
mov
lods
jp
pop
sbb
sub
popa
push
add
lock
les
aad
and
add
sbb
sub
std
mov
pushf
sbb
and
mov
jo
idivb
subl
ret
xchg
adc
cmpsl
sub
inc
xor
inc
or
mov
jp
repnz
jmp
xlat
and
xor
sub
insl
test
dec
push
mov
popa
sarl
imul
add
and
aad
loopne
jl
cmpsb
outsb
pop
leave
jno
mov
or
push
ss
xchg
jle
mov
xchg
adc
adc
pop
sub
pop
cmc
insl
insl
icebp
sub
sarl
out
loop
outsb
mov
js
mov
mov
cmpsb
push
add
mov
shll
pop
arpl
sub
stc
insb
mov
sub
jb
pop
iret
and
mov
pop
mov
push
cmp
int3
daa
push
imul
jns
out
push
xchg
and
nop
fwait
jnp
cmp
adc
sub
xor
roll
push
fwait
xlat
out
int3
shll
mov
mov
stc
orl
and
sbb
les
test
js
inc
clc
lods
cld
dec
push
daa
add
test
call
sub
pushf
daa
or
lahf
mov
mov
ret
fucomip
test
or
insb
add
mov
out
jae
lret
pop
sub
xor
call
or
leave
inc
rcll
mov
and
fiadds
mulb
enter
dec
out
stos
push
pop
call
mov
bnd
outsl
push
dec
sub
test
jae
cmp
xor
daa
cmp
sub
xchg
shlb
das
push
pushf
aam
add
test
sub
ret
cmpb
xor
sub
mov
pop
push
dec
cmc
insb
sti
mov
push
aad
push
clc
inc
sub
xor
adc
lret
clc
mov
cwtl
pop
inc
fs
fsts
es
jmp
pop
jmp
xchg
inc
and
add
imul
mov
sub
add
stc
mov
mov
sub
popf
push
imul
push
out
enter
mov
inc
pushf
jl
mov
into
cli
xor
je
addb
mov
cmp
mov
mov
call
adc
stos
pop
sbb
mov
xlat
into
mov
imul
dec
push
movsb
sbb
mov
lret
inc
test
dec
dec
cwtl
cmp
xor
jns
aas
sti
popa
xchg
arpl
and
mov
mov
mov
or
fidivs
icebp
add
arpl
push
sar
dec
add
mov
inc
popa
dec
sub
push
addr16
inc
pop
mov
pop
movsb
cmp
or
loopne
jl
or
cmp
sbb
lahf
mov
cmp
in
xor
mov
pop
icebp
or
and
insb
jl
stc
push
push
jmp
shll
stos
lret
das
mov
mov
xor
sbb
xchg
pop
or
ss
jp
ds
call
pop
push
and
dec
push
ret
mov
out
dec
cli
std
mov
cmc
daa
and
jecxz
xchg
sti
call
xor
outsb
xchg
fbld
out
or
out
xchg
push
jmp
jne
sbb
int
into
jno
push
add
xchg
mov
mov
int
test
sub
cmpsb
sub
inc
insb
and
jb
add
pop
icebp
xchg
gs
mov
int3
lahf
xchg
imul
and
clc
fisttpl
xchg
add
mov
and
les
dec
and
or
mov
test
int
sub
jl
mov
adc
fiaddl
cmpsl
or
jo
adc
int
adc
or
roll
cmpsb
and
inc
pop
icebp
xchg
jmp
popf
push
xchg
inc
stos
insl
mov
jbe
mov
adc
xchg
and
xchg
frstor
daa
pop
lcall
movb
outsl
stc
xchg
fs
lea
clc
adc
mov
ret
xchg
sbb
in
dec
sysexit
pop
fidivs
das
sub
push
add
and
sub
jecxz
mov
aad
iret
mov
xchg
or
inc
pop
cs
dec
push
and
lcall
or
pop
jge
pop
mov
es
lods
dec
aad
and
addr16
in
push
xlat
mull
mov
pushf
in
and
filds
sub
sub
mov
fldl
jl
les
ror
jg
mov
mov
mov
lret
ret
add
inc
push
dec
cmp
pop
sbbb
fimuls
sub
imul
sbb
inc
jne
jne
xchg
push
xchg
scas
inc
pop
push
adcb
aad
or
insl
or
test
outsb
or
inc
sbb
mov
test
loope
mov
mov
jne
mov
lret
loope
sub
icebp
inc
popa
fistps
jae
ja
xchg
mov
push
pop
adc
sahf
in
pop
sub
adc
sbb
add
repnz
xchg
push
cmp
add
dec
or
fiaddl
out
testl
bound
sbbl
int3
jae
inc
int
mov
loop
xchg
lcall
addb
movsb
push
aam
and
and
xor
xor
xchg
lea
or
add
adc
and
sub
and
dec
lods
sti
push
inc
and
nop
stos
mov
mov
sub
mov
enter
lea
jne
xchg
and
stc
popf
push
sbb
aaa
movsb
cmp
mov
mov
xchg
or
cmpsb
ds
adc
int
push
push
lea
popf
cmp
sbbl
jl
les
jnp
jns
xlat
pop
nop
stos
mov
jb
push
psllw
pop
sbb
sti
xlat
flds
or
sub
int
mov
add
shl
int
xor
lahf
stc
testl
mov
int
push
and
add
popf
mov
sahf
fisttps
scas
dec
cmpsl
fucomi
xor
push
mov
loope
cmp
dec
fldenv
rorl
xchg
sahf
jl
outsl
std
stos
in
movsl
sahf
xor
dec
sbb
or
hlt
and
rcll
out
pop
mov
inc
adc
add
cmp
xlat
out
lret
dec
mov
adc
ds
movsb
imul
aad
dec
lock
cmpsl
jge
movsl
fs
mov
pop
xlat
mov
fnstcw
push
jbe
div
xacquire
scas
testl
sub
add
cmp
mov
scas
out
xor
sub
or
add
sbb
mov
mov
orl
sub
mov
dec
mov
push
testl
jge
cmp
fadd
cmp
inc
bound
or
xor
mov
filds
fld
enter
push
test
sub
mov
sub
repz
ret
fiadds
int
xchg
xchg
inc
xor
mov
add
adc
jg
test
dec
adc
repz
sub
and
int3
adcl
dec
push
out
jmp
iret
mov
add
sar
call
insl
mov
cmp
push
adc
xchg
push
dec
jae
xor
jns
cs
jne
sub
adc
adc
test
mov
rorb
sub
movl
stos
dec
xchg
jne
mov
andb
jnp
mov
dec
testl
aam
push
repz
mov
mov
pop
or
sbb
lea
fisubrs
or
adc
fs
aam
ds
push
sahf
add
sub
sub
and
push
adc
pop
mov
cld
ja
in
dec
scas
mov
movsl
mov
mov
or
ficoml
jecxz
int
es
fmull
lcall
lock
xchg
push
or
xchg
mov
cmpsl
jmp
jo
in
mov
insb
cmp
dec
cmp
fdivrs
mov
inc
xlat
jmp
cwtl
fisttpll
ret
add
and
int3
mov
adc
ja
sbb
adc
dec
mov
jnp
insw
loope
push
or
pop
ror
aas
popf
cli
or
push
std
jge
stc
lahf
xor
mov
mov
sbb
inc
jge
iret
ret
pushf
and
dec
xlat
xorl
insl
mov
sub
cli
adc
fsubs
lea
ljmp
mov
aad
xchg
dec
lds
lea
dec
inc
cld
xor
mov
or
lret
fsubp
int3
sahf
or
gs
xchg
cmp
dec
aas
iret
cmp
je
xlat
inc
jo
test
or
rcrl
inc
add
sbb
out
push
mov
gs
or
inc
sbb
jge
adc
fsub
push
imul
in
aaa
push
stc
gs
push
outsb
and
mov
adc
cmp
jmp
xchg
bnd
inc
and
jno
mulb
pop
ret
arpl
mov
inc
jecxz
lret
jmp
sbb
inc
mov
adc
fisttpll
mov
inc
dec
test
xchg
test
sub
and
mov
in
cwtl
dec
rorl
or
sub
stos
aam
lahf
lods
mov
mov
lods
outsb
mov
jbe
cld
jl
insl
and
cmp
cmp
mov
pop
push
insb
sbbl
test
push
dec
dec
lret
xlat
fisttps
mov
scas
imul
into
mov
ja
sub
pop
pop
add
mov
fnsave
adc
mov
ja
and
cwtl
dec
add
cwtl
cmp
cvtpi2ps
pop
lcall
cwtl
pop
cltd
mov
xor
out
sbbb
push
inc
sbb
or
inc
out
pop
das
pusha
pop
cmp
inc
loope
test
add
inc
movsb
scas
insl
add
out
push
push
pop
add
aas
mov
cmp
std
dec
inc
add
pop
jno
rcll
pusha
inc
mov
or
scas
int
and
inc
stos
jnp
mov
push
mov
jo
push
mov
or
inc
inc
testl
mov
pushf
js
addb
inc
mov
sbbb
cmc
lea
xchg
dec
jle
mov
addl
lea
sbb
daa
or
jmp
mov
inc
sbb
pusha
push
inc
adc
and
or
pushf
adc
mov
dec
pushf
jmp
jecxz
inc
fs
sub
mov
add
shl
fcoms
ja
cmp
mov
jp
xchg
sub
ror
rolb
fmull
out
jo
sbb
in
sub
sub
mov
jae
and
lret
cwtl
sahf
stos
loopne
test
or
cmp
fistps
sub
sahf
fcmovu
arpl
popa
sub
stos
pop
xor
sbb
andl
stos
adc
pop
out
sub
test
add
aam
inc
stos
add
and
add
ja
push
int3
or
out
inc
jnp
orl
and
das
icebp
inc
lods
mov
cltd
and
dec
add
xchg
bound
inc
int3
adc
xchg
mov
les
mov
cmp
ds
sbbl
mov
aad
and
icebp
adc
mov
bound
add
dec
stos
xchg
xchg
std
jbe
in
imul
aam
in
pop
in
int
outsl
cmp
in
mov
lods
pop
cmp
cli
std
sub
push
stos
xor
push
xchg
imul
jg
fs
imull
cmovo
xor
mov
xchg
rcll
iret
sub
add
mov
adc
call
jbe
push
mov
xchg
sbb
fiaddl
out
add
rcl
in
push
ret
call
xchg
dec
test
mov
jne
pop
or
arpl
movsb
lahf
frstor
insb
push
fs
icebp
mov
xchg
sbb
daa
mov
inc
sub
lds
or
cmpsl
sub
ds
add
dec
test
popa
add
stos
fwait
xor
movsb
adc
shl
iret
inc
push
push
scas
shrl
or
out
mov
mov
push
xchg
jno
inc
cld
into
sub
in
inc
fisubs
insl
dec
fildl
pop
push
adcb
adc
andl
subl
hlt
jp
xchg
and
or
lock
imul
xor
in
and
and
pop
add
or
call
stos
push
test
lea
ljmp
mov
inc
lds
pop
add
test
fmull
push
add
push
mov
cli
and
cmpsl
sub
fidivrs
lods
cmp
adc
pushf
or
test
pop
adc
pop
test
mov
or
sbb
jns
pop
mov
dec
das
mov
pop
push
jecxz
cli
pop
pop
and
push
or
shlb
lahf
daa
or
xor
lret
aas
inc
divl
mov
add
insb
cmp
sbbb
shrl
pop
jne
jl
push
frstor
enter
cmp
adc
push
mov
mov
ffree
leave
loope
cmp
outsl
dec
sahf
cmp
insl
push
and
xchg
mov
inc
stc
sub
push
mov
sbb
insl
jo
fistpll
sti
popf
cmp
push
push
out
pop
sub
xchg
dec
sbb
pop
out
sub
push
sbb
and
jp
cmp
cmp
pushf
jne
dec
jg
imul
iret
add
sbb
sbb
sub
scas
and
mov
stc
test
cld
pushf
pop
ljmp
or
cmp
aam
int3
in
test
sar
inc
sti
or
pop
sub
dec
in
and
or
push
out
add
std
cmp
cs
push
scas
xlat
pop
cltd
repnz
shlb
dec
jnp
je
jmp
test
call
xor
adc
icebp
sbb
shll
pusha
pop
or
xor
mov
pop
add
in
imul
add
adc
lds
roll
in
push
or
pop
cmpsb
lcall
push
stos
jecxz
inc
popf
fcomps
nop
leave
xor
rclb
xchg
add
jge
mov
inc
iret
push
test
sub
sti
insl
push
and
cmp
pop
dec
icebp
pusha
arpl
add
test
or
push
inc
mov
fisubrl
sahf
orl
insb
out
arpl
rcrl
sbb
fisubrs
es
loopne
repz
mov
dec
jle
stos
push
mov
jl
xchg
sub
or
fwait
repnz
fsubrs
daa
mov
jmp
sbb
fs
dec
jns
xor
mov
aaa
mov
dec
push
or
daa
push
inc
push
sbb
push
xchg
push
dec
lods
out
outsb
and
cmpsl
adc
sub
icebp
jg
daa
int
hlt
mov
adc
dec
es
push
inc
das
mov
popa
in
out
jnp
jmp
jl
sbb
enter
popa
frstor
jne
push
adc
cmpsb
xchg
cwtl
sbb
shrl
mov
fldcw
xor
mov
mov
sbb
dec
ja
mov
xor
cs
test
jb
pop
loopne
in
inc
out
rcl
roll
mov
cmpsl
push
ret
dec
neg
call
fistl
mov
mov
add
jns
pop
shrl
in
addr16
shlb
dec
gs
sbb
mov
jbe
add
sbb
inc
test
pop
movsb
in
add
mov
jmp
pop
in
ljmp
inc
nop
sahf
add
fbld
pop
adc
push
sarb
lea
sub
dec
pop
jg
jg
imul
adc
xor
out
add
add
ret
sbb
inc
pop
mov
mov
adc
add
out
adc
inc
push
and
hlt
mov
scas
mov
sub
test
cmpsb
sbb
insl
mov
gs
lahf
lods
data16
rolb
and
jno
add
or
js
jbe
xchg
repnz
lods
call
sbb
sub
int
std
ficomps
popa
add
push
call
data16
dec
outsb
inc
mov
or
jle
mov
sub
sbb
outsl
push
cmc
push
sub
lret
arpl
push
jge
stc
inc
icebp
push
dec
jnp
ljmp
pop
popf
dec
and
call
lahf
dec
mov
push
out
pop
andl
xchg
and
jbe
js
popa
and
push
cmp
in
mov
stc
pop
incb
ret
lds
pop
int
mov
cmp
pop
mov
sbb
or
lret
sub
aas
pushf
call
pop
mov
pop
add
dec
in
lret
xor
inc
pop
push
not
mov
pusha
daa
stc
push
testb
pop
mov
add
mov
sahf
sub
std
mov
add
lahf
xchg
out
stc
jae
adc
mov
mov
sub
or
int3
and
cmpsl
insb
std
and
popa
dec
xchg
fdivrl
in
dec
pop
lahf
mov
mov
cmp
push
jnp
movsb
stos
mov
cmp
stos
int
test
xlat
xchg
and
icebp
pop
pop
jb
adcl
ljmp
pop
jge
sub
nop
xchg
sub
inc
jb
filds
fdivr
cmp
push
add
lahf
lds
cmp
shl
xor
lock
ret
lods
push
call
loopne
sahf
dec
xchg
push
dec
cmp
jl
lcall
jbe
inc
test
shrl
sti
jo
aad
push
adc
lahf
adc
popf
or
jbe
and
add
daa
mov
cmp
inc
int
insb
dec
add
sub
lods
mov
ds
cmp
cmp
shrl
cmp
movsl
pop
mov
push
repz
mov
addb
aas
jne
popa
rorb
sub
imul
aam
push
jb
pop
inc
pusha
mov
sahf
push
lahf
loope
dec
addr16
pop
xchg
call
mov
mull
cmp
stos
xchg
xchg
popa
bound
push
iret
lcall
negl
dec
sbb
fbstp
sub
push
push
in
inc
orb
dec
cmc
xchg
sti
add
loopne
mov
cmp
jmp
inc
or
add
xchg
mov
add
fdivr
push
inc
test
lahf
cmc
inc
loop
pushfw
data16
stos
lret
fbld
aas
sbb
test
in
pop
sbb
into
cwtl
pop
sti
call
inc
loop
adc
sub
lds
jg
sbb
pop
mov
cmp
xchg
test
add
hlt
out
in
imul
jns
xchg
cmpl
jmp
stos
out
ss
ret
ret
mov
add
xor
pop
inc
dec
adc
mov
adc
mov
cmp
add
fidivs
faddl
sub
inc
cld
jge
mov
push
imul
adc
cmp
out
sub
sti
sub
xchg
mov
stc
xchg
push
xor
and
dec
arpl
sbbb
outsl
div
loopne
in
imul
imul
add
int3
cli
add
or
jno
outsb
loope
cmc
mov
stos
pop
xor
aam
xor
dec
cmp
leave
mov
hlt
repz
jl
cwtl
out
xor
mov
movsl
adc
out
lret
test
xchg
fsub
dec
sbb
pop
pop
sbb
adc
sti
sub
sub
out
dec
out
jg
es
add
xor
mov
add
lods
call
sbb
aad
mov
jno
enter
jg
icebp
lahf
movsb
xchg
into
int
jle
sub
and
jge
cmpsb
xor
ljmp
scas
mov
adc
xor
or
ret
in
adc
push
scas
jmp
int3
movsl
cli
pop
sbb
mulb
jbe
arpl
push
cli
fs
add
or
inc
sbb
test
sub
inc
fistps
testb
dec
lahf
or
mov
add
test
push
pop
in
dec
adc
bound
into
sbb
inc
scas
stos
or
dec
mov
dec
cwtl
stos
push
dec
scas
jecxz
lret
sahf
add
movsl
out
cmp
mov
in
js
xor
mov
insb
sbb
dec
jns
jb
xor
and
stos
jnp
push
or
das
push
and
push
popf
test
icebp
lds
es
inc
scas
scas
pop
sbb
add
inc
ror
push
les
jae
mov
pop
ljmp
enter
hlt
rclb
inc
or
xor
add
outsb
cmp
daa
into
into
pop
fwait
mov
xor
gs
mov
shll
inc
push
setge
mov
push
test
mov
les
cmp
pushf
cmpsb
cmp
add
pushf
jne
jns
test
pop
aaa
loope
pop
sub
jl
lea
cwtl
aas
push
lcall
jno
loopne
leave
pop
cltd
sbbb
xor
xor
sbbl
scas
int
jo
jg
pop
ffree
test
and
pusha
sub
rcrl
aad
or
movsl
add
pop
push
adc
or
add
call
add
fldenv
xlat
sub
mov
rcll
jl
movsb
movsl
fisubrs
xorb
ja
mov
pusha
jl
fstpl
mov
enter
aam
mov
fmull
test
sub
push
jbe
xor
add
dec
pop
sub
or
aad
sbb
cmpsl
xor
test
stc
dec
cli
jns
pop
mov
sbb
pop
lods
inc
sbb
je
testb
or
dec
in
pop
out
cmp
stos
sbb
sub
repz
sbb
ljmp
fldt
sbb
xchg
cmp
sarb
in
or
or
lods
inc
or
pop
test
inc
mov
bswap
jge
push
push
es
lock
xor
cmp
pop
mov
or
adc
sbb
stos
cltd
cmc
xchg
pop
xor
stc
add
push
inc
or
push
pushf
loopne
std
hlt
jns
mov
mov
xor
nopl
mov
es
fistps
inc
or
flds
sub
mov
push
mov
lods
mov
jg
xor
fcompl
nop
xor
or
adc
insl
dec
addr16
dec
call
xchg
pop
or
stos
ret
xor
jge
sti
jbe
mov
testb
call
or
jmp
jl
cli
push
call
lds
imul
nop
adc
js
int
add
or
arpl
pop
test
sbb
jnp
daa
pop
or
repz
icebp
sub
jno
cli
lret
imulb
adc
sbb
inc
xor
pop
add
cmp
xor
mov
out
fs
cld
call
in
repz
mov
dec
xchg
adc
xchg
push
fiadds
ljmp
jne
cmp
mov
adc
testl
jne
out
push
addl
outsb
test
xor
lcall
or
mov
out
lock
mov
cwtl
sub
cmp
xchg
in
sbb
loopne
cmp
push
push
sbb
or
add
sbb
cmp
mov
ret
inc
push
push
shrl
inc
enter
jnp
inc
cmpsl
cwtl
fldenv
xchg
int3
sub
repz
sub
push
or
repz
test
cmpsb
xor
xor
out
ljmp
lahf
nop
dec
dec
jl
mov
fsubs
pop
les
mov
nop
jo
cmp
push
pop
rol
pop
fs
sbb
ss
mov
push
pextrw
push
push
inc
xchg
pop
jo
inc
ficoml
movsb
mov
ret
in
popa
lock
xor
jl
sbbb
adc
pop
js
push
sar
or
mov
dec
xor
test
popl
in
push
adc
mov
lea
ja
mov
adc
dec
fsubr
and
push
dec
xor
adc
sahf
adc
je
sti
push
sub
cmp
and
pop
pop
fs
add
mov
mov
mov
inc
dec
xchg
test
mov
sbb
into
movsb
jecxz
add
mov
lock
sub
popf
aam
data16
cli
push
pop
mov
push
pop
push
outsb
nop
mov
or
sbb
or
add
inc
push
popa
or
out
adc
sti
inc
ret
ficomps
dec
gs
inc
ds
jmp
iret
arpl
mov
push
inc
push
push
push
scas
inc
adc
jne
xchg
sbb
adc
sbb
xor
dec
fcoml
int3
test
aaa
aam
inc
sbb
xor
dec
shll
pop
pop
testb
mov
jns
aam
push
out
adc
dec
lods
dec
add
movsb
lds
pop
sbb
sub
dec
decb
inc
outsl
aaa
aad
or
mov
lds
insl
cli
in
mov
mov
mov
sar
cmp
mov
mov
cmc
and
lea
jnp
shlb
clc
test
iret
test
aam
and
icebp
inc
popa
mov
fbld
or
rorb
stos
mov
imul
pop
push
jp
xchg
orl
lods
or
popf
out
out
sub
test
lods
call
sub
nop
sub
jb
xor
jmp
jb
push
lcall
int3
and
bound
mov
stos
xor
sbb
roll
or
lahf
or
cmpsl
push
xchg
fdivp
dec
imul
notl
inc
mov
ljmp
cmpsl
and
cmp
and
test
jmp
mov
dec
and
xor
out
icebp
dec
outsl
cmpsl
dec
push
mov
orl
cmpsb
push
imul
pop
gs
clc
push
fbld
pop
cmc
int
daa
add
iret
sub
inc
jge
shll
ror
and
imul
icebp
sbb
pop
sar
rcll
sbb
jmp
dec
pop
sub
dec
int
push
push
add
jne
std
frstor
imul
add
push
shll
or
adc
add
add
divl
test
std
repz
nop
test
loopne
pop
cmp
icebp
adc
sub
pop
inc
dec
inc
push
jp
fists
mov
lret
repnz
fwait
lea
test
xor
stos
add
pop
in
push
test
xor
mov
pop
cwtl
add
pusha
xor
or
inc
pop
cmpsl
hlt
ss
pop
pop
enter
adc
inc
in
jns
sub
mov
adc
fistpl
sbb
ja
out
rorb
adc
and
and
cbtw
outsl
cmpsl
jle
lods
out
xor
loopne
pushf
push
fdivrs
push
sub
stos
jnp
sbb
pop
fs
pop
add
adc
int
sbb
loope
std
sti
push
cmc
pop
push
xor
shll
add
adc
dec
std
sub
dec
cmp
enter
and
rcll
out
dec
cmp
sub
xor
or
push
inc
outsb
stos
push
inc
or
add
or
and
imul
int3
iret
in
sbb
rolb
lock
adc
inc
insb
sub
push
lahf
inc
mov
jnp
imul
cmpsb
jmp
lock
push
fldenv
push
xchg
icebp
lret
lock
repz
sub
pop
mov
mov
cld
dec
lods
push
js
mov
mov
cs
dec
je
and
outsb
inc
stc
dec
movsb
push
jns
dec
cmp
movsl
mov
pop
test
mov
call
fildll
mov
in
inc
sub
add
ficompl
cmpsl
mov
or
pop
ja
popa
out
inc
pop
out
and
lret
xor
icebp
or
xlat
mov
rcrl
mov
push
out
push
jle
movsl
lcall
data16
cmp
movsb
pushf
cmp
mov
xchg
mov
mov
mov
scas
insl
out
mov
push
mov
mov
gs
gs
xchg
mov
dec
movsl
add
fimuls
iret
cmp
fs
xor
dec
cmpsl
mov
push
stc
into
push
mov
xor
es
adc
add
push
scas
cld
and
mov
inc
fld
mov
dec
jno
mov
jb
inc
jb
clc
jl
out
ds
fcompl
mov
push
and
sub
pushf
inc
shlb
add
mov
push
and
or
stc
lods
or
inc
mov
cli
pop
sti
movsl
add
jno
push
imul
mov
adc
shr
and
iret
add
pop
xor
inc
es
stos
cmp
cmp
imul
sbb
dec
sub
or
adc
mov
or
sbb
pop
and
or
xor
pop
pop
pop
gs
jg
pop
mov
adc
sub
pop
fisubrl
push
aaa
and
jne
in
and
sub
cmp
aam
test
or
rcrl
add
hlt
mov
push
push
dec
add
out
push
stc
int3
adc
decb
push
mov
das
adc
or
xorl
sar
mov
mov
stc
out
icebp
push
adc
xchg
push
cld
or
insb
aam
pop
dec
dec
iret
js
ret
scas
xor
dec
test
iret
ljmp
adc
cmp
fs
nop
mov
sbb
xchg
xchg
cld
mov
insl
jmp
fdivp
idivl
popf
xchg
or
mov
icebp
mov
cmp
xor
or
mov
stc
dec
lahf
jl
scas
pop
dec
inc
pop
fbld
cmpb
insb
xor
pop
loopne
lods
hlt
rep
aad
sub
mov
push
cmp
sub
dec
and
mov
cmpsl
cmp
dec
xor
and
lods
fisttpll
dec
cmp
loop
popf
pop
push
popa
test
pop
int
mov
lea
xchg
sbb
xor
dec
je
inc
push
arpl
loop
sti
loopne
int3
mov
lcall
xchg
es
imul
and
notl
popf
jo
std
loopne
rcll
cmp
es
test
loopne
stc
sub
testb
or
fwait
sub
fistpl
mov
xchg
in
cld
stos
test
dec
je
scas
lock
lahf
or
xor
nop
pop
push
dec
adcb
mov
shrb
mov
jge
adc
mov
cmp
es
loopne
sub
dec
push
lea
lea
int3
loopne
adc
mov
jns
push
aam
mov
loop
adc
xor
or
inc
cmp
sahf
sub
inc
xor
lahf
aas
dec
jns
mov
or
pushf
xchg
push
push
pop
in
dec
and
orb
es
pop
mov
dec
or
lds
dec
sbb
add
mov
jne
or
sub
insb
sbb
sahf
xchg
cmp
xor
xchg
sbb
push
clc
inc
xlat
rcll
mov
mov
inc
cmc
es
cltd
sub
cmp
jecxz
insb
sbb
stos
lcall
inc
cmp
inc
adc
test
pop
jb
adc
add
cmp
add
dec
adcl
mov
adc
push
pop
push
ret
popf
int
mulb
les
aas
iret
jl
xchg
fcmovne
sub
jno
add
aad
test
jne
pop
inc
mov
push
adcb
pusha
popf
mov
in
cmp
sbb
sub
inc
sub
sahf
sbb
aas
loop
add
push
rol
xchg
clc
dec
shrl
push
popw
or
in
jns
cltd
cltd
loope
mov
fcoms
movsl
dec
pop
jns
in
push
sbb
mov
testb
mov
mov
sub
dec
sub
pop
insl
lret
cwtl
jecxz
xor
fimull
xor
dec
jp
mov
jnp
sbb
xor
fs
push
mul
adc
mov
adc
or
mov
aas
imul
jge
mov
out
hlt
data16
jb
sub
push
adc
out
cwtl
xlat
adc
add
ret
mov
or
and
adc
mov
js
mov
cltd
fnsave
or
aam
adc
sti
mov
fs
pop
mov
daa
push
sahf
and
out
pop
adc
fsubrs
cwtl
adc
cmp
out
jns
add
mov
les
sbb
jmp
inc
inc
gs
and
int
mov
lods
push
push
cli
sub
pushf
mov
inc
inc
jle
test
aas
push
lcall
push
add
jecxz
test
dec
push
or
xchg
and
mov
scas
add
mov
mov
shll
cwtl
je
dec
pop
inc
call
ret
jl
movsb
xor
in
pop
xor
in
lods
dec
xlat
mov
cmp
out
push
cltd
push
pop
aad
xor
int
aam
sarl
adc
leave
lods
dec
and
int
clc
testl
fbld
stos
cmp
push
jns
or
sbb
cli
pop
mov
sub
xor
lods
inc
lret
dec
icebp
xor
jecxz
or
xor
pushf
lods
ja
out
mov
and
cli
jne
popa
fisubs
movsl
sbb
pushf
jle
pushf
stos
inc
ja
fadds
add
inc
lods
test
jnp
stos
or
fisttpll
mov
sub
ret
mov
sub
test
and
mov
xor
push
mov
adc
push
gs
inc
in
xchg
idivb
outsb
sbb
pop
add
sbb
inc
xor
and
sbb
jne
lcall
or
int
and
sub
pop
adc
icebp
movsl
lret
xchg
push
xor
dec
adc
lahf
insl
or
adc
cmp
pop
scas
loopne
stos
xor
xor
movsl
cmp
pop
add
inc
or
mov
dec
ficoms
sahf
sub
mov
mov
test
out
movl
aam
adc
dec
mov
fcompl
mov
jg
lahf
ljmp
jmp
add
notb
jp
adc
jp
call
int
nop
std
inc
mov
dec
adc
sbb
sub
cmp
cld
mov
stos
jp
add
xor
mov
inc
es
out
scas
or
jne
cmpsb
mov
sbb
fidivs
sbb
ds
jns
xchg
jae
or
push
sbb
inc
cmp
std
lock
cmp
push
ret
fnstenv
rcl
stos
and
scas
jl
pop
addb
mov
cmp
sbb
mov
int
adc
xchg
jb
int
mov
inc
mov
sub
out
clc
test
and
out
icebp
mov
pop
push
data16
cld
inc
in
push
push
or
fcomps
mov
or
mov
cwtl
stos
fwait
pop
movb
fadd
and
jecxz
mov
iret
sub
inc
lock
mov
xor
jnp
sbb
out
xchg
lahf
clc
jecxz
and
mov
iret
jnp
cmpsl
jne
insb
int
sahf
cltd
sti
mov
icebp
scas
aas
insl
aaa
mov
jno
pop
mov
cli
inc
insb
sahf
out
sub
scas
push
loop
xchg
dec
push
adc
push
in
sti
jp
mov
insl
mov
mov
inc
int
int
pusha
fs
push
xchg
sub
jnp
fwait
aad
arpl
sub
mov
pop
adc
cmp
test
and
and
out
call
and
sub
rcll
add
xchg
aam
sub
in
xchg
or
xchg
cmp
lahf
mov
add
int
in
mov
sub
jo
pop
ds
fcompl
adc
or
add
inc
pop
and
dec
or
out
jg
xchg
mov
cmp
loope
test
dec
inc
mov
bound
bnd
hlt
or
xor
add
std
xor
mov
mov
repnz
push
pop
pop
loope
les
lahf
ficomps
sub
ret
cmp
mov
or
and
call
dec
jb
jl
dec
dec
popa
rcl
sarb
add
pop
add
mov
imul
cmp
subl
loopne
fcomps
xchg
sbb
push
xchg
sbb
jns
inc
and
test
pop
cmp
and
rol
cmp
aaa
stos
sub
jnp
ja
or
cld
push
icebp
sarl
mov
and
ja
jnp
xchg
sbb
xchg
and
lahf
mov
gs
fmulp
xor
clc
pushf
mov
xor
sbb
movsl
adc
int
jge
lret
imul
mov
or
roll
movsl
in
ljmp
jmp
xchg
aam
test
dec
lods
push
mov
hlt
pop
lds
cmp
aad
push
jle
xlat
sbb
test
fsubs
or
and
sub
add
xor
aas
cmc
pop
add
pop
jnp
jns
jmp
or
mov
push
cmpsl
stos
mov
loope
adc
pop
call
sbb
or
dec
frstor
push
xor
hlt
sub
je
jecxz
js
inc
cmp
leave
xchg
mov
xor
lcall
jb
enter
sub
add
sbb
clc
inc
sbb
rolb
or
jecxz
inc
mov
inc
mov
das
push
mov
adc
call
xchg
cmp
out
shll
rorb
nop
jae
and
aad
xor
push
or
popf
or
mov
js
out
clc
int3
xchg
inc
dec
rcll
inc
push
inc
sub
sbb
adc
and
or
lds
mov
inc
cs
jnp
cld
dec
fildll
xor
push
mov
addr16
sbb
mov
movsb
xlat
pop
sbb
add
push
adc
jo
movsb
jg
movsl
adc
sti
sub
xor
idivb
filds
scas
pop
aad
sahf
leave
int
lock
cmpl
mov
or
inc
or
enter
cld
fs
test
pop
mov
jp
or
shlb
lds
cld
push
sub
xor
push
xor
sti
pop
add
pushf
add
mov
xchg
or
or
pop
adc
sbb
shll
pop
mov
mov
jl
ret
or
cmp
inc
or
adc
cmc
mov
add
push
je
jecxz
div
into
push
punpckhbw
lods
hlt
in
shrl
movsb
mov
sahf
pop
or
pop
and
lret
jne
mov
inc
out
add
cmp
pop
xchg
popa
bound
mov
rorl
scas
pop
stos
dec
or
and
xor
aad
je
push
movsl
dec
mov
sbb
rcrl
shlb
cwtl
test
test
mov
loop
aaa
in
clc
or
jne
dec
inc
or
inc
jno
and
cli
and
mov
or
sbb
xchg
loopne
negb
push
ljmp
jge
icebp
and
cld
jg
stc
mov
or
mov
push
bound
loopne
push
fildll
inc
jns
or
rcrb
bnd
in
pushf
lods
nop
or
mov
out
cmp
xchg
negb
push
imul
jmp
int3
in
mov
add
sbb
adc
enter
cmp
cs
hlt
inc
or
lret
xchg
sub
mov
out
add
or
xor
int3
in
repnz
subb
push
in
test
xor
xchg
aaa
mov
in
shrb
add
fstpl
and
lahf
xor
sub
out
push
mov
jecxz
cmovne
int3
lea
test
xchg
mov
lods
jo
mov
cmp
add
xor
test
leave
push
and
adc
sbb
lcall
jg
xor
push
adc
into
inc
sub
idivl
inc
out
mull
movsb
testb
add
imul
cmp
insl
inc
or
ds
xor
out
push
repz
push
call
jbe
adc
in
jp
movsl
out
shrl
mov
push
out
inc
push
filds
push
lahf
fsubp
icebp
stos
outsl
pop
fnstenv
ficomps
flds
orl
cmp
scas
gs
std
jl
push
sahf
and
push
fstpt
imull
imul
pop
pop
call
cld
mov
xor
clc
and
sbb
and
popf
inc
jb
std
jo
pop
dec
negb
andnps
cs
jbe
and
xor
xchg
cmp
sbb
dec
fidivrl
xor
mov
cmp
call
es
sub
shl
mov
jno
hlt
adc
dec
sti
jo
push
xor
mov
pop
out
fisubl
outsl
mov
fnstsw
and
das
je
dec
pop
add
dec
call
add
pop
inc
pushf
cmp
lret
push
je
out
mov
stc
out
nop
or
test
pop
jg
stos
xchg
inc
push
imul
xchg
inc
pusha
cli
pop
xchg
lahf
out
in
push
cmp
popf
and
and
lods
pop
inc
nop
xor
fildll
cmp
fisubrs
cmp
sarl
ret
cld
in
pushf
xor
adc
adc
xchg
xchg
dec
fprem1
mov
cmc
divb
pop
cmp
lea
or
test
mov
loopne
pop
gs
add
lahf
xor
inc
mov
dec
sbb
mov
push
or
cmp
movsl
push
sbb
jge
aad
shr
hlt
sbb
mov
jecxz
and
cld
sub
add
jl
sbb
mov
movsl
and
das
push
dec
xchg
leave
fucom
pushf
mov
popa
or
pop
je
lock
mov
and
dec
dec
push
gs
int
lds
adc
addb
scas
sarl
pop
imul
xchg
sub
jne
dec
xor
insb
mov
mov
imulb
add
popa
lds
loopne
ljmp
pop
test
lea
sub
push
or
lods
inc
sbb
inc
pop
sbb
insb
push
mov
cmc
mov
xchg
ficompl
movsl
mov
nop
add
scas
fistl
ret
decb
pop
dec
pop
add
mov
test
nop
add
aad
push
cmp
sbb
das
or
pushf
outsb
mov
movsb
mov
inc
add
in
push
fmuls
lds
sbb
movsl
dec
xor
int3
jne
bound
mov
or
cld
mov
popa
call
sbb
sbb
add
mov
dec
test
lock
ds
sbb
sub
pop
ja
stc
adc
arpl
jmp
push
adc
jl
mov
repz
ja
sub
sbb
lahf
and
addr16
adc
sbb
pop
shl
ret
add
inc
sub
jecxz
test
inc
ds
add
dec
hlt
sbbb
pop
shrl
hlt
call
mov
stc
mov
xor
mov
xchg
or
cwtl
push
icebp
xchg
pop
jbe
mov
inc
xor
inc
cs
sbb
cmp
movsb
sti
rorl
push
out
cmp
dec
popa
sbb
loop
imul
mov
es
sbb
ret
jne
test
orl
sbb
out
inc
or
call
rcll
xchg
inc
dec
cmp
inc
xchg
jl
gs
dec
add
ret
adc
add
mov
and
pushf
js
pop
aas
test
sbb
mov
sti
in
fidivl
adc
jl
stc
insb
cmp
mov
testb
push
or
cltd
js
shll
or
pop
or
and
in
roll
pop
cmc
jl
call
insl
xchg
flds
inc
or
stos
mov
int3
test
pop
dec
dec
repnz
cmp
pop
jge
cmc
push
lds
mov
imul
std
int
loopne
lods
aad
pushf
imul
push
int3
pop
inc
pop
cmpsl
call
inc
fwait
outsl
test
sub
jmp
add
mov
test
mov
push
movsl
cmp
pop
movsl
adc
shll
scas
call
pop
mov
repz
add
int
movsl
mov
sbb
shlb
and
scas
add
cmpsb
lods
popf
xor
pop
dec
mov
repz
aad
cld
xor
mov
rcll
addr16
mov
mov
inc
jo
in
push
icebp
jne
pop
pop
or
fsts
sbb
lahf
mov
out
adc
xchg
and
push
nop
pop
sbb
or
push
push
pop
add
xor
testl
xchg
test
xchg
test
pop
lds
lahf
xchg
sbb
cmp
sbb
cli
fcmovbe
pushf
mov
out
addr16
jae
pop
dec
icebp
test
add
add
in
cmp
sub
xchg
dec
lods
pop
daa
repnz
jge
pop
mov
cmp
push
call
aad
cmp
cmpb
cwtl
inc
dec
adc
push
jne
inc
push
in
adc
inc
int
inc
mov
cltd
cmc
movb
jo
xchg
repz
out
push
imul
or
and
sub
jmp
pop
mov
mov
addb
xor
roll
fucomi
cmp
gs
mov
aaa
fidivl
in
imul
jl
sti
xchg
movsl
pop
pop
into
aam
sub
enter
cmp
adc
mov
push
enter
push
ret
mov
xchg
adc
sbb
test
in
testl
sub
movl
outsb
mov
push
jg
ds
out
mov
sbb
pop
popf
es
xor
repz
scas
xchg
bound
gs
popa
stos
inc
jae
loopne
nop
pop
jmp
mov
or
popf
addb
das
in
movsl
push
jecxz
sub
lock
ja
mov
push
ds
jae
and
sub
popf
lret
push
in
and
adc
cmp
mov
cmpsb
cmc
outsb
div
or
add
pop
lods
adc
cwtl
stos
scas
or
jo
xor
into
stc
iret
inc
xchg
sbb
dec
mov
leave
in
inc
loop
xor
iret
movsl
mov
add
or
sti
lods
xlat
pop
sarl
icebp
mov
xor
sbb
pushf
loope
mov
rcr
and
popa
jns
ljmp
jno
int3
fcoml
ds
mov
jmp
cmp
ds
je
push
icebp
test
and
xchg
or
and
mov
pop
enter
or
outsl
test
mov
sub
int
inc
scas
cmpsl
ret
xlat
popa
mov
jl
push
and
jnp
push
mov
xlat
insl
or
movsb
xor
icebp
std
jmpw
imull
push
adc
xchg
inc
and
repnz
jnp
jl
mov
sub
loopne
lahf
enter
sbb
or
je
sub
mov
mov
jmp
ds
sbb
clc
push
cld
idivl
sbb
jmp
mov
lock
jnp
fmulp
popf
jle
pop
cmc
lods
popa
inc
repz
notl
mov
pushf
sbb
and
or
jle
jp
cmp
push
mov
fxch
dec
pop
mov
xchg
jg
pusha
cmp
add
es
pop
stos
dec
sbb
push
adc
insl
jnp
js
cmp
pop
cld
or
repnz
jae
adc
mov
mov
out
pop
sub
mov
xchg
pop
pop
adc
nop
fildl
xor
push
test
movsl
dec
sub
jne
push
xor
push
lea
test
jno
xchg
and
stos
mov
mov
dec
add
popf
push
fdivl
shrl
and
in
in
dec
out
pop
sti
mov
jne
mov
sub
or
push
xor
add
lahf
daa
push
pop
test
call
int
mov
or
fistpll
in
jnp
cwtl
arpl
and
cmp
mov
sarl
inc
cmp
test
mov
sbb
mov
dec
imul
mov
mov
stos
or
dec
xchg
lahf
enter
sarl
push
mov
or
or
add
and
add
pop
mov
cltd
pop
push
adc
cmp
cld
nopl
sub
xchg
and
pushf
in
fsubrp
push
add
out
stos
pop
push
xchg
mov
stos
repnz
and
or
sahf
fstl
pop
dec
xchg
xchg
mov
xor
fs
xchg
aad
adc
mov
movsl
in
inc
mov
xchg
xor
adc
call
adc
jge
xchg
pusha
or
xchg
or
lods
dec
dec
dec
cs
inc
cmpsb
data16
sbb
sbb
out
jp
nop
xor
adc
fiadds
movd
add
mov
push
fistpl
inc
and
mov
aam
adc
and
push
insb
xor
mov
xchg
jl
push
gs
pop
sub
sbb
shrl
lret
lods
bound
push
xor
ss
or
push
negb
adc
aam
push
daa
movsb
xchg
push
gs
inc
and
sbb
arpl
and
out
ljmp
pushf
pop
das
movsb
inc
scas
into
pop
sarl
inc
nop
fsts
sbb
and
les
fidivs
sub
movsl
lods
mov
mov
sbb
fdivrs
ror
int
inc
jnp
cmp
fs
xor
adcl
rdmsr
int
adcb
push
lret
clc
xchg
pop
cs
je
jle
jle
das
fwait
and
loopne
inc
mov
pop
out
scas
sahf
fcomip
pusha
sub
insb
push
inc
sbb
fs
mov
ror
fstpl
in
out
enter
nop
shrb
xchg
pop
jl
fisubrs
sbb
inc
adcb
sarb
xlat
xlat
pusha
pop
push
ljmp
nop
movsl
pop
imul
push
out
add
mov
mov
adc
enter
sbb
lods
cmc
jbe
and
pop
xor
xchg
dec
and
fstp
lea
or
mov
push
bound
fidivrl
popf
and
imull
mov
lods
push
scas
push
repz
dec
fwait
inc
jne
push
pop
mov
in
xchg
sbbl
or
cmpsl
int
mov
push
repz
or
mov
adc
adc
push
mov
jl
and
and
addl
dec
pop
lahf
mov
jo
sub
and
leave
roll
dec
sub
push
cmp
pop
mov
push
cli
daa
in
jecxz
test
push
icebp
fs
or
sub
mov
sbb
call
mov
aam
test
push
orb
xchg
mov
sbb
xor
cmp
jno
adc
and
push
data16
add
cmp
adcb
inc
add
adc
repz
imull
push
dec
push
sbb
jb
cwtl
mov
pop
imul
pop
and
jecxz
dec
das
dec
test
adc
mov
mov
push
mov
cmp
jg
stos
or
and
inc
aaa
out
cmp
push
mov
dec
dec
stos
mov
and
addr16
mov
inc
int3
jl
insb
inc
in
pop
add
stc
sub
push
pop
or
adc
add
xor
push
loop
and
and
and
sub
clc
or
sar
cmpsl
mov
mov
adc
nop
push
popf
or
loopne
lock
les
pusha
rcrl
add
mov
xchg
ds
loopne
jae
mov
mov
aam
negb
clc
add
stos
dec
push
pop
cmp
pcmpeqw
in
lret
movsb
push
pop
mov
repz
mov
push
sbb
pushf
pop
lahf
fbstp
or
scas
and
lds
sbb
sbb
jno
xlat
add
andl
addr16
sbb
frstor
arpl
cmp
cmc
repnz
jno
inc
stos
dec
push
sbb
push
movsb
shrb
cli
cmp
lods
and
inc
cltd
inc
call
in
aad
mov
mov
sub
repz
bound
dec
adc
in
stos
push
loopne
aad
sub
stos
aas
icebp
arpl
in
daa
sub
push
cmpsl
sub
mov
lods
sub
xorl
adc
cld
push
pop
and
jmp
mov
daa
mov
or
adc
and
testl
cmp
push
repnz
loope
adc
pop
sub
rcrb
insl
xor
ss
sub
xor
and
jns
popf
cmp
out
xor
sahf
pop
out
mov
call
adc
cmp
arpl
xor
faddl
ficompl
mov
dec
cwtl
andb
cmp
pop
and
fildl
das
inc
scas
outsl
bound
push
movsl
adc
filds
and
jne
mov
das
sahf
jo
mov
out
inc
in
xor
mov
testb
popf
sti
bswap
jl
inc
dec
mov
daa
cmc
dec
mov
out
stos
sub
push
jg
sub
leave
push
mov
aaa
icebp
pop
jmp
int3
movsb
stos
mov
lcall
test
mov
cmp
pop
arpl
sbb
adc
or
or
fs
sbb
pop
push
xor
pop
push
sbb
out
xlat
sbb
jno
sub
jnp
aaa
jbe
push
xorb
push
xchg
pop
dec
mov
int3
xchg
iret
les
adc
aam
dec
pop
add
daa
test
lea
cmp
mov
pop
cli
inc
aas
adc
adc
jp
repz
mov
pop
push
sub
shll
mov
lahf
clc
dec
jmp
and
push
test
cmc
mov
test
data16
jns
ljmp
sti
sub
mov
fstps
movsl
adc
test
sahf
fidivl
outsb
cltd
sub
dec
mov
jecxz
add
mov
mov
fmull
mov
cwtl
dec
pop
fs
orl
loop
sbb
out
xchg
sub
mov
inc
out
inc
push
out
adc
cmp
xchg
mov
xor
test
sub
pop
sbb
scas
xchg
andb
or
mov
add
jae
int
call
fisttps
in
mov
xor
or
dec
les
cmp
or
push
popa
and
sub
jle
dec
pusha
add
gs
mov
enter
and
or
mov
jg
sub
xchg
fistl
sub
or
cmpsb
sub
cld
cltd
fstpt
cs
aad
pop
nop
test
aaa
dec
test
xor
push
lret
daa
push
mov
lock
daa
dec
mov
ficompl
dec
or
jge
xor
xorb
lods
lahf
adc
add
inc
dec
enter
cmp
and
hlt
inc
test
mov
je
and
jae
lods
jmp
xor
sub
lss
repnz
jno
stos
mov
add
mov
aam
sbb
int
insb
lahf
cli
lock
push
push
std
dec
into
loop
cmp
dec
push
cmpsl
pop
and
scas
loopne
mov
cwtl
shrl
add
stos
aad
cmpsl
ret
dec
push
shl
dec
pop
fisubl
inc
shll
in
mov
or
mov
outsl
and
push
mov
pop
and
inc
incb
out
fildll
push
jb
cli
stos
shrl
imul
test
mov
lods
pop
incl
loopne
mov
sti
adc
push
outsl
test
mov
cld
fcompl
inc
mov
mov
pop
or
inc
mov
mov
dec
add
lock
jns
scas
movsb
dec
ljmp
adc
inc
fiadds
sbb
xor
rcrl
push
sbb
adcb
cwtl
out
inc
fildl
mov
ret
xor
int
mov
xchg
lock
mov
mov
push
lahf
mull
adc
hlt
sbb
pusha
sub
in
and
movsb
cmp
sub
push
cmp
xor
test
jno
push
and
outsl
adc
adcl
push
mov
dec
lahf
and
pop
pop
insb
stos
clc
loop
ret
roll
leave
adc
sbb
cltd
xchg
cltd
cli
xchg
push
pop
sub
sbbl
inc
sub
or
push
cltd
mov
aad
xchg
rolb
xchg
std
std
xchg
pop
stc
mov
sub
push
cmp
dec
or
clc
sti
sub
test
cmp
lahf
out
and
out
insb
push
dec
mov
or
aaa
xchg
push
loope
mov
mov
pop
pop
ljmp
frstor
nop
pop
xor
lcall
fistpl
in
sbb
call
sbb
paddsb
mov
dec
xor
insb
pop
roll
fistpll
sbb
roll
pop
add
shll
daa
push
sub
jp
push
add
mov
sub
nop
mov
neg
aas
dec
pop
stos
popl
clc
or
jle
and
and
push
ds
xor
and
scas
pop
repz
xor
push
imulb
mov
add
fisttps
add
sbb
jae
movsb
cmc
xchg
dec
int
cwtl
jnp
sbb
jns
ljmp
and
rorb
shr
std
add
fstp
or
add
js
sub
lahf
cmp
mov
adcb
and
dec
cmp
ficoms
test
jp
cmp
std
es
ficomps
cmp
cmp
nop
jge
mov
idiv
adc
mov
pop
out
ret
rcr
sub
jae
es
sbb
aas
cld
mov
sti
shrb
inc
and
sub
es
stos
fidivs
inc
add
adc
dec
xorb
loope
stos
das
jnp
pusha
icebp
sbb
mov
ret
dec
jp
push
pop
cmp
and
rcl
inc
xor
dec
and
into
inc
jnp
clc
xchg
fstpt
push
arpl
aam
or
call
xor
mov
dec
imul
add
sbb
push
pop
test
inc
pop
pop
loopne
insb
int
pop
xchg
inc
cmp
lods
icebp
or
sub
push
xor
aam
inc
aam
cmpsb
cwtl
movsl
mov
dec
stc
lahf
cmpb
push
and
pop
pop
dec
add
sbb
mov
scas
nop
data16
xor
popf
aas
mov
rep
scas
out
jae
nop
fdivrl
outsb
mov
aam
inc
data16
xchg
sahf
orl
sub
and
lods
pop
movsl
xchg
mov
xor
cmp
sub
in
push
mov
enter
push
sub
jmp
xchg
mov
pavgw
mov
scas
cwtl
jns
push
out
es
cmpsb
scas
cwtl
dec
int3
outsb
sbb
dec
jg
out
loopne
insl
mov
mov
inc
adc
push
add
movsl
xchg
loopne
sti
mov
push
mov
jnp
in
inc
inc
lahf
mov
in
movsb
jl
push
mov
out
test
dec
inc
sarb
bound
movsb
adc
fmuls
mov
cmp
fdivrp
xchg
dec
jb
xchg
flds
cmc
inc
dec
lahf
pop
and
jns
jge
fs
push
js
pop
pushf
scas
in
jb
mov
mov
cmp
xchg
ds
dec
jle
xor
hlt
xchg
jns
or
daa
filds
inc
mov
pop
sub
cmpsb
cwtl
sbb
out
and
inc
fildll
jns
inc
jno
jge
inc
loop
punpckhwd
movsb
ljmp
shll
nop
imul
sub
push
lods
pop
and
out
push
jecxz
aaa
pushf
mov
ret
movsb
mov
les
sbb
imul
adc
out
pop
lods
jne
dec
std
xor
inc
push
and
pop
in
imul
int
dec
in
aas
xor
stos
popf
cmp
dec
out
int
and
cmc
cmp
cwtl
push
fildll
xchg
cld
pop
call
xchg
or
add
enter
and
cmpsl
xchg
lock
scas
xor
or
pop
sbb
adc
add
jecxz
xchg
jl
add
cmp
adc
mov
dec
fisubl
xor
mov
aaa
pop
or
es
push
stos
add
mov
adc
fidivrs
stc
outsb
adc
sub
mov
dec
xchg
or
or
std
xor
jns
fistps
jno
sbb
pushf
push
mov
jae
in
outsl
mov
jnp
cwtl
mov
movsl
test
push
fmul
pop
jmp
add
rol
adc
pop
push
mov
loope
cwtl
mov
int
lds
and
jmp
pop
pop
fwait
out
xchg
testb
xor
pop
jg
or
dec
dec
inc
inc
cmp
cmp
or
add
aas
shll
adc
pop
xchg
and
and
subl
sahf
icebp
outsl
stos
pusha
into
lods
pop
xchg
stos
dec
setg
loop
insb
mov
pop
test
xchg
cs
mov
imul
and
jg
cmp
cmc
jg
mov
inc
dec
mov
int3
fidivs
push
stos
dec
inc
mov
inc
mov
sub
add
mov
shr
nop
je
and
enter
sub
movsl
and
add
mov
call
push
push
das
adc
push
mov
insb
shll
lods
push
cmp
sub
sti
inc
ss
jl
popf
ret
xlat
add
push
adc
push
cmpsb
jb
mov
pop
gs
lahf
jb
negb
adc
adc
dec
or
mov
js
fxsave
lods
test
fs
lea
sti
push
inc
popf
pop
dec
mov
les
test
jp
jae
lcall
sbb
pop
dec
stos
shll
xor
aam
xchg
push
rorb
cltd
in
xor
sub
test
cmp
arpl
xor
std
jecxz
add
lahf
leave
add
adc
or
xor
pop
lahf
dec
out
sti
stos
adc
andb
lahf
jp
sub
rorb
fsubs
xor
pop
inc
ret
fsts
repz
or
jb
push
jmp
fsts
inc
or
ja
dec
lods
nop
iret
iret
lret
std
inc
add
lods
sar
std
mov
and
popa
daa
push
pop
jno
stos
scas
faddl
pop
fnstenv
cld
dec
jo
pop
and
movsl
cld
jns
xchg
fcmovu
ljmp
pop
lret
mov
mov
push
lahf
mov
jg
repz
cmp
push
mov
xchg
cmp
inc
fmul
pop
mov
adc
pop
lods
mov
sarl
sub
out
cmp
mov
std
mov
rolb
vmovntdq
hlt
sub
cli
push
cmpsb
mov
dec
std
mov
inc
cwtl
shrl
roll
and
sbb
icebp
test
or
cltd
int3
fs
aas
ljmp
out
cs
or
call
sub
mov
inc
mov
mov
imul
pushf
popa
and
sbb
stos
mov
xor
pop
xchg
imul
and
test
lds
xchg
pop
shlb
dec
call
cmp
and
popa
in
in
stc
aaa
sub
pop
movsl
dec
add
and
stos
inc
nop
pop
daa
loope
nop
jae
outsl
ljmp
imulb
mov
jno
shll
clc
dec
testb
and
mov
pusha
mov
enter
enter
push
xor
test
shrb
push
or
pop
adc
xor
mov
pop
push
mov
ds
fimuls
out
shrb
dec
pop
fimuls
bound
cmpsl
jno
mov
sbb
stos
sub
xchg
ds
push
or
inc
ja
mov
adc
shll
lods
lahf
mov
ljmp
insb
orb
cmp
xor
into
mov
push
xchg
scas
test
pop
js
inc
cwtl
adc
sub
insl
mov
testl
stc
pop
jne
pop
iret
shrb
fndisi(8087
xor
push
and
cmp
inc
dec
inc
out
lret
mov
lret
sbb
sub
jl
icebp
sbb
dec
jns
mov
and
loop
or
mov
inc
pushf
jns
mov
push
sbbb
or
pusha
jae
push
adc
scas
call
mov
mov
cs
push
addr16
mov
mov
cmp
adc
pop
enter
nop
stc
mov
cmp
stos
das
testb
inc
and
repnz
cs
add
mov
and
sbb
inc
sbb
scas
call
insb
jecxz
pop
in
test
sbb
nop
std
call
ret
xor
adc
scas
pop
std
xor
or
leave
add
sbb
roll
jnp
lahf
mov
lds
mov
cmp
lods
int
xchg
pop
push
inc
adc
xchg
mov
sub
mov
in
aad
mov
lret
je
addl
sahf
dec
jg
bound
sbb
popa
shrl
push
jno
pop
mov
xchg
push
inc
xor
repz
jg
mov
push
adc
mov
mull
fsts
les
sub
sbb
cltd
jnp
je
and
mov
sbb
shlb
lahf
or
rol
push
loop
fbld
jg
ret
je
js
push
repnz
ret
gs
mov
iret
enter
push
sub
gs
pop
pop
cld
movsl
cmp
jo
push
fcmovnbe
pushf
inc
leave
sbb
sbb
mov
lret
push
lahf
jle
fcomi
pop
adc
test
cmp
mov
xor
cmp
push
insb
lcall
lahf
int3
enter
adc
aam
addr16
jno
ds
push
jb
lods
sub
ljmp
outsl
loopne
insb
cmp
mov
sub
mov
mov
sub
add
cmp
adc
xor
rorl
xchg
mov
dec
mov
xchg
cmp
movsl
pop
adc
or
lods
les
inc
lcall
jbe
dec
cwtl
js
push
pop
inc
xlat
and
xchg
stos
jno
cmp
sub
fidivl
xchg
test
shrl
pop
dec
aaa
data16
pop
loop
and
push
rcl
enter
dec
jge
push
cwtl
loopne
test
sar
dec
subb
mov
pop
mov
push
or
mov
jo
jge
push
lods
test
dec
inc
repnz
adc
push
pop
int3
cmp
fnsave
xor
adc
add
std
jmp
out
pop
rolb
aad
and
sbb
mov
outsb
aaa
sub
xor
in
push
xchg
je
sub
cld
dec
jns
js
dec
mov
cs
sub
xchg
imul
sub
popl
test
rcll
repnz
and
cmp
mov
cwtl
or
loope
setle
xchg
scas
outsb
xor
sti
fdivrl
je
push
movsl
int3
std
out
cmp
push
mov
mov
fdiv
imul
or
shrb
sub
mov
jge
fimuls
push
jecxz
jo
mov
xor
aas
mov
addr16
sahf
add
adc
scas
aam
into
sub
adc
nopl
loope
mov
xor
sbb
pop
iret
shll
test
mov
rorb
add
movsl
dec
cmp
pop
or
sub
inc
js
inc
movsl
lods
jl
and
out
cmpsb
jp
fnstenv
and
cmp
or
scas
movsb
lret
popa
dec
lea
or
fld
ret
mov
adc
or
jbe
mov
or
loopne
jno
mov
out
mov
ret
adc
int3
aam
leave
add
in
fsubrl
add
pop
std
xchg
lret
negb
not
in
mov
pop
mov
lock
inc
cmp
sub
dec
rcrl
outsb
aaa
data16
scas
jle
stos
pop
enter
adc
test
daa
dec
cmp
mov
mov
pop
orl
inc
inc
and
and
sub
jecxz
loopne
filds
xchg
loope
and
out
rolb
inc
and
mov
push
cmp
sub
push
jbe
js
cmp
mov
sub
pop
xor
jg
sbb
xor
ljmp
pushf
lahf
nop
jo
daa
pushf
inc
adc
sub
pop
adc
cmpb
cwtl
cmc
pushf
xor
movsl
std
or
dec
pop
pusha
adc
cli
cs
stos
sbb
ret
mov
dec
push
cmp
sub
sti
xchg
int3
es
dec
mov
outsb
adc
add
lahf
test
pushf
dec
push
rcrl
and
aad
imul
scas
dec
or
or
or
mov
out
jle
test
fcmovbe
popf
sbb
stc
icebp
cmp
test
rorl
lds
out
arpl
and
mov
neg
mov
cs
and
xor
call
pop
aaa
dec
adc
jg
cmc
lcall
and
inc
int
imul
mov
dec
push
xchg
and
or
out
pop
out
rorl
repz
dec
out
push
sub
insl
lahf
repz
inc
mov
mov
inc
jg
call
pop
mov
addb
aad
sub
push
add
pop
stos
arpl
in
scas
pop
imul
add
jle
orb
xchg
shl
xchg
nop
mov
sahf
sub
insb
or
das
dec
sub
popf
pop
mov
arpl
stos
repnz
out
jno
lea
std
add
mov
fnstsw
add
or
mov
and
movsl
push
push
test
sbb
repz
sbb
mov
jl
gs
jmp
adc
sti
pop
adc
pusha
scas
aas
mov
dec
lea
enter
sbb
cmp
mov
fwait
ss
inc
lahf
pop
js
sub
cmp
fbstp
xor
and
xchg
jnp
in
inc
adc
dec
fbstp
out
inc
dec
mov
aaa
out
inc
nop
inc
dec
add
loope
loopne
fimuls
push
icebp
xor
xchg
pushf
fcomps
add
pushf
stc
stos
mov
test
sbb
insl
pop
mov
cmp
sarl
es
pop
or
js
xchg
or
xor
and
adc
call
cmpsl
sub
sbb
in
rcrb
inc
lahf
xor
cli
inc
jo
jnp
mov
jmp
adc
repz
int
cld
out
or
cmc
push
sub
in
insl
fsub
es
jnp
pop
loopne
cmp
or
jl
add
andb
roll
shll
scas
mov
sub
icebp
inc
adc
xor
sbb
xor
mov
nop
testl
insl
in
sbb
or
cld
inc
cmp
insl
sbb
dec
sub
rcll
xchg
cli
das
cltd
or
pop
lcall
dec
sub
or
sti
fsub
add
push
push
addb
mov
xchg
dec
pushf
xor
divl
sbb
sbb
inc
sar
jne
cmp
in
insl
daa
pushf
cmp
test
inc
xlat
loope
lcall
cmp
mov
cmp
fistpl
loope
mov
sub
mov
cli
cld
arpl
mov
jecxz
add
clc
in
out
stos
ljmp
ret
and
int
add
or
subl
scas
mov
push
xchg
cmc
nop
test
nop
mov
and
push
mov
in
out
push
push
and
xor
adc
cmp
push
and
in
int
xchg
inc
sbb
cmpsb
mov
rdmsr
adc
ret
jmp
pop
jl
pop
test
and
mov
add
adc
movsb
inc
mov
xchg
in
not
icebp
lock
pushf
insb
fists
jno
pop
xchg
and
loopne
and
call
lahf
jle
cmp
stos
rcrb
and
pop
scas
mov
sbb
insl
dec
out
lret
add
push
sub
aas
cli
subb
push
shll
mov
sbb
dec
pop
pop
out
sub
sbb
adc
jle
or
dec
dec
imul
outsb
cmp
adc
daa
or
out
xor
inc
imul
sub
out
add
cli
arpl
or
shlb
push
cmp
mov
dec
jae
int
addl
out
jo
and
cmp
lods
xchg
cli
pop
stc
clc
inc
dec
insb
jge
pop
cmpsl
call
in
or
jnp
adc
add
lods
stc
arpl
jae
lcall
movsb
cmp
cmp
and
push
stos
mov
lcall
cmpsl
shll
dec
adc
or
les
mov
imul
cmp
fcompl
push
and
xor
xor
add
repnz
xor
loopne
dec
movsl
or
dec
dec
mov
ltr
movsl
xchg
xchg
pop
inc
cld
fimull
mov
scas
sbb
adc
movsb
fsubrp
mov
inc
jbe
mov
aaa
mov
pop
jge
or
les
out
pop
add
ljmp
sub
mov
int
xor
hlt
test
loopne
xchg
int
mov
insb
dec
cmp
js
sub
adc
aaa
sbb
into
push
push
stos
mov
inc
lret
mov
inc
out
insl
mov
insb
das
cli
jne
push
fdivs
and
inc
fmull
mov
fbstp
dec
jmp
push
push
sub
rolb
into
out
lahf
jns
sahf
dec
jns
shrb
jge
stc
fs
loop
out
insl
mov
or
xor
mov
dec
scas
and
orl
rol
lods
mov
lock
ja
jp
sbb
or
mov
movsb
int
out
in
loop
iret
xchg
mov
push
and
out
mov
cmp
mov
mov
inc
push
adc
xchg
dec
aaa
jb
push
sbb
inc
daa
addb
jbe
repnz
or
iret
and
and
cmp
inc
out
ret
js
subb
arpl
xor
sub
ds
fs
sti
gs
daa
movsb
jae
test
and
xor
jne
push
stos
lcall
adc
popa
jle
hlt
mov
test
icebp
mov
bound
inc
pushf
movsb
push
mov
addr16
iret
cli
mov
jl
inc
mov
pop
and
xlat
add
lahf
in
mov
inc
dec
scas
lcall
xor
test
rcrb
aad
jb
inc
fadd
jns
cmc
pop
je
jne
icebp
inc
mov
push
pop
sub
fs
cld
pop
mov
push
outsl
mov
adc
daa
lods
push
clc
scas
aam
mov
adc
popf
dec
cld
stos
fisubrs
icebp
and
movsl
and
popf
inc
pop
cs
dec
aad
subl
fdivrs
arpl
movsb
cltd
pop
pop
mov
mov
bound
pusha
mov
mov
xor
and
inc
sub
sub
xor
sbb
out
iret
add
cs
cld
jp
lods
or
mov
iret
gs
scas
inc
push
lods
pusha
nop
je
push
cld
mov
sbb
mov
sub
or
jne
mov
dec
push
arpl
pop
push
jno
cmp
cmc
addr16
mov
xchg
fwait
or
mov
xor
add
push
mov
fnstcw
sub
xor
xlat
pusha
cld
jo
cmp
dec
cmp
mov
or
std
push
jmp
cmp
add
adc
dec
and
test
ds
movsb
fucomp
mov
push
and
movsb
dec
mov
push
int
pushf
inc
mov
test
insl
adc
xor
lahf
sahf
out
loopne
inc
movsb
sahf
dec
inc
cli
pop
movsl
out
push
test
out
fs
mov
out
push
xchg
cmp
xlat
in
mov
jmp
popl
inc
sub
fisttpl
test
lahf
adc
aad
mov
fcomp
jo
je
ljmp
jl
and
movsl
pop
pop
mov
jne
and
cmpsb
jl
in
fidivrl
push
push
sahf
movsl
sub
jno
lods
push
add
pop
insl
orb
int3
xchg
pop
pop
ljmp
and
pop
loop
mov
jle
icebp
pop
adcb
pop
out
and
or
roll
shlb
out
nop
movsl
ss
lds
jg
dec
call
imul
push
in
xor
push
mov
cwtl
jg
jbe
pusha
inc
pop
rclb
jp
mov
sahf
pop
imul
xor
dec
sbb
int3
decl
fcoml
mov
xor
pop
xchg
ds
mov
and
dec
mov
pop
stos
jns
jbe
std
adc
ds
dec
pop
pop
pop
mov
cmp
cmp
or
repnz
cltd
inc
cmp
lahf
lahf
sbb
pop
cmp
adc
push
mov
sub
push
fsubs
sub
pop
and
or
add
mov
lock
adc
and
mov
dec
inc
adc
jae
push
ja
jp
std
cmp
js
add
push
mov
push
add
test
outsb
inc
fimull
test
nop
jge
pop
sahf
inc
ljmpw
push
pop
or
cmp
inc
int
sbb
fldl
addr16
addl
xchg
jmp
gs
xchg
fs
add
ljmp
ljmp
negb
ds
jb
inc
dec
dec
jae
fcmovnb
mov
mov
rcl
push
sbbl
jl
inc
lahf
cmp
dec
jle
add
mov
inc
lea
cltd
ss
sahf
outsl
outsb
cmp
xchg
cmp
std
xchg
and
sbb
pop
push
xchg
pop
sub
or
push
movsb
lret
and
mov
xor
sbb
clc
test
stos
add
out
dec
int
jbe
ret
dec
pop
or
inc
call
lahf
out
shrb
mov
mov
test
and
mov
pop
js
mov
int
add
push
dec
sbb
sbb
lcall
and
jne
add
push
push
inc
and
in
cld
jno
add
cmp
adc
ror
and
mov
cmpsb
push
xchg
mov
les
sub
jno
add
pop
imull
adc
mov
ret
test
sbbb
mov
cmp
fnstenv
nop
rcll
sub
sbb
inc
andl
adc
dec
imul
test
inc
daa
repz
or
sbb
jg
pop
mov
mov
movsl
dec
es
iret
adc
dec
rorb
loopne
addb
hlt
jns
mov
int3
fists
mov
das
nop
push
iret
inc
sub
or
dec
mov
mov
cmp
pop
push
push
and
cmp
cld
sub
sub
xchg
mov
mov
movsl
dec
mov
cmp
loop
lahf
adc
movsb
and
lea
dec
inc
mov
adc
cli
push
lock
pop
adc
pushf
inc
faddl
dec
xchg
int3
xchg
pop
adc
outsb
or
hlt
sarl
in
pusha
movd
aas
sahf
shll
and
sub
mov
fidivl
aas
nop
sub
stos
lret
ret
call
cmp
loope
hlt
enter
icebp
pop
push
mov
fistl
jne
and
aas
adc
sahf
jle
test
aaa
mov
sbb
push
je
or
dec
enter
xchg
dec
adc
push
cwtl
outsl
aas
orb
add
push
push
mov
xchg
xor
loopne
lock
sbb
repnz
sub
pop
cmp
inc
dec
test
out
mov
sbb
cmp
dec
out
cwtl
or
lahf
mov
stos
inc
sbb
dec
inc
stos
mov
pop
subl
adc
mov
icebp
scas
mov
out
jmp
repz
jmp
adc
test
adc
jo
cwtl
lahf
mov
orb
adc
sub
mov
push
dec
call
mov
cmp
dec
mov
sbb
dec
cmp
sub
xchg
cmp
pop
stos
mov
push
sbb
mov
test
ficomps
push
pushf
call
pop
pop
ss
xor
sahf
pop
inc
ret
sahf
jb
mov
addr16
sub
dec
lahf
pop
push
pop
ret
fiaddl
ds
rorl
xor
sbb
int3
or
mov
daa
outsl
jns
dec
icebp
inc
cld
mov
cmp
cmpsb
cwtl
fisttps
in
into
and
sbb
notl
shlb
aaa
mov
iret
or
dec
lods
ja
and
and
repz
and
mov
int3
imul
xchg
sarb
ret
xchg
int
jns
push
or
cmp
fstpl
ror
call
pop
test
mov
mov
pop
ds
push
in
cwtl
repnz
lahf
into
jb
push
dec
shl
lea
and
sarb
js
xchg
cmc
push
test
dec
xor
lahf
stos
pop
jns
fs
dec
lret
push
xchg
mov
popf
aam
xchg
leave
aad
xchg
leave
test
push
enter
pop
sbb
or
pop
ljmp
aad
ret
sbb
cmpb
sub
popf
imul
lock
pop
repz
xchg
aas
dec
or
sbb
int3
mov
adc
movsb
scas
sti
cmpb
inc
mov
xor
lahf
ret
outsl
adc
int
in
insb
and
inc
or
shll
inc
sbb
sub
add
mov
sub
or
xchg
sub
cmp
rorl
or
mov
sbb
lahf
push
mov
adc
iret
sbb
mov
mul
sub
mov
sbb
or
inc
cld
dec
sub
jmp
or
jno
leave
repnz
inc
pop
cmc
cmp
or
cmp
inc
cld
out
cmpsb
bts
andl
pop
push
mov
cmpsl
adc
fcmovnbe
movsb
pop
lcall
sub
jbe
or
cmc
int3
and
sbb
rol
mov
adc
jge
shlb
adc
dec
adc
or
fldl
es
in
sub
jne
inc
cli
mov
jno
push
or
stos
out
dec
inc
icebp
movsl
enter
fsubrl
cmc
cld
xchg
mov
out
shll
stos
xchg
das
lock
cltd
mulb
xor
ljmp
dec
or
xchg
sbb
sub
pop
aas
sub
dec
xor
mov
and
test
dec
dec
sti
jp
inc
push
nop
dec
sbb
lds
push
pushf
dec
stc
mov
xchg
fmull
and
xchg
stos
dec
into
insl
sbb
lret
repz
pop
dec
push
dec
dec
jg
int
push
jne
and
cmp
imul
pop
adc
icebp
lods
lret
dec
popf
lock
test
in
xchg
sbb
call
push
cmp
scas
cmc
cs
lahf
and
daa
cmp
push
stc
dec
clc
mov
ds
push
repz
xor
loope
xor
pop
test
push
or
adc
loopne
add
int
popf
or
jne
mov
and
push
pop
pop
cmp
int3
sbb
in
cmp
or
xor
xor
mov
outsb
rcrl
into
xchg
fistpll
test
mov
ds
lods
mov
cld
cmp
jae
sbbb
addl
jns
fwait
jecxz
and
cmp
push
out
pop
fiadds
sbbb
mov
cmp
mov
and
scas
add
xchg
in
adcl
out
lahf
mov
loopne
mov
or
pop
insb
test
cmc
inc
push
sbb
mov
pop
inc
bound
jns
sbb
inc
sub
je
pop
jns
inc
pop
ljmp
out
and
mov
add
sti
in
xchg
add
sub
and
cmpsl
aaa
add
mov
lahf
mov
call
push
jl
cmc
xor
mov
jne
test
sub
js
mov
lds
repz
or
imul
xchg
fstpt
inc
push
push
xor
mov
pop
mov
xchg
mov
inc
fisttpll
sub
xor
repnz
inc
pop
dec
and
adc
clc
fisttps
nop
test
jmp
fistl
dec
fsubrl
sbb
imul
icebp
arpl
popf
pusha
fidivrl
add
xchg
push
cli
push
mov
pop
shll
lret
mov
inc
adc
mov
cs
sbb
les
aas
popa
cmp
addr16
inc
std
popl
pop
xor
lahf
loopne
mov
fstps
mov
cmpl
stc
dec
jb
dec
inc
or
inc
inc
int
test
pop
inc
fldt
lahf
or
out
inc
fstpl
iret
mov
or
mov
inc
xchg
jl
nop
mov
jae
scas
shrl
cmc
nop
pop
sbb
mov
sbb
inc
or
dec
xchg
pop
int
and
push
sbbb
icebp
mov
mov
cmpsl
cmp
or
push
imul
inc
insl
nop
fisttps
pop
lea
xor
xchg
mov
inc
aad
mov
push
std
inc
imul
ret
or
jl
loop
les
sub
mull
lahf
out
push
mov
or
out
mov
pushf
cmp
push
dec
adc
cmc
in
insb
call
push
sbb
shrl
movsb
cmp
dec
or
inc
xor
sub
push
pop
ljmp
push
and
inc
pop
mov
stos
fsubs
mov
mov
jle
cwtl
mov
lods
call
pop
add
add
fucom
jl
ficomps
and
xor
call
addb
xchg
out
mov
movsl
push
hlt
push
in
mov
mov
je
cmp
lahf
scas
pop
xor
scas
xchg
xchg
int
mov
icebp
xchg
xor
fldl
push
jg
inc
jg
cmp
sbb
adc
pop
sub
int3
int
sub
dec
xor
adc
or
adc
and
mov
lods
les
dec
pop
adc
lahf
aad
jne
out
sub
sbb
int3
or
mov
fcompp
mov
sub
sub
test
lret
pop
and
pop
inc
hlt
cld
invd
cmpsb
adc
xchg
mov
and
cli
inc
xchg
mov
test
dec
lahf
jnp
dec
xchg
out
rcll
jb
repnz
inc
enter
add
ror
bnd
cwtl
ficoml
mov
loopne
push
push
shll
decl
jecxz
stc
nop
int
add
xor
lahf
dec
imul
shrb
iret
and
iret
mov
add
stc
inc
int
lret
sub
sub
arpl
cmpsl
dec
mull
je
add
cmp
out
subl
test
or
push
lret
fiadds
xchg
sbb
pop
add
out
inc
ss
inc
push
add
andb
negl
jae
in
hlt
insb
outsb
push
sahf
jl
repnz
cmp
or
and
push
lcall
ficoml
int3
repnz
sbb
stos
jno
loopne
out
sbb
sub
clc
pop
push
sub
es
test
test
hlt
sub
sbb
cli
aaa
jae
jg
dec
add
cmp
mov
fstps
ja
in
and
fbld
push
push
xchg
pop
push
pop
sbb
adc
fbstp
mov
sub
sub
fwait
lods
mov
test
andb
out
jbe
jno
cmpsb
pusha
add
out
mov
insb
xchg
pop
nop
cmp
movsl
and
lods
fistps
lahf
jae
fildll
adc
sub
add
imul
add
repnz
push
lret
or
mov
aaa
adc
adc
sbb
test
mov
sub
cmpsl
or
dec
push
das
cltd
inc
int3
stos
idivb
scas
in
sti
repz
jp
data16
ja
adc
cli
push
testb
dec
mov
or
test
insl
dec
fsubrp
xorl
adc
test
add
mov
push
jae
nop
repnz
pop
and
movsb
dec
xchg
or
cmpsl
or
mov
loope
movsl
mov
negb
out
test
fisttpll
fdecstp
inc
push
sub
imul
pop
mov
lds
outsb
pushf
or
add
sti
mov
addr16
jg
sub
xor
mov
cltd
cs
call
rcll
adc
inc
mov
sub
pop
sub
js
xchg
clc
and
push
dec
nop
jno
leave
mov
test
jnp
es
and
or
or
loop
pop
jbe
lea
outsl
and
and
cmc
in
mov
push
push
lds
iret
pop
ds
incb
pushf
icebp
insl
dec
out
in
mov
sub
mov
insl
jmp
and
or
inc
jne
imul
fidivrs
mov
add
cmp
mov
mov
test
popf
sub
mov
lods
add
sbb
andb
xor
mov
cld
stc
push
add
cmpsl
push
adc
bound
lods
sub
adc
adc
inc
in
sub
test
xchg
adc
or
pop
mov
mov
xchg
jne
in
pop
imul
sarl
ficoml
test
mov
push
mov
jnp
mov
or
push
xor
mov
push
and
xchg
lcall
inc
sti
mov
repz
inc
cmp
les
and
cmpsb
sub
fildl
sub
xor
sahf
scas
bound
mov
vmwrite
jg
or
cmp
xchg
add
sub
pop
mov
mov
andl
mov
mov
aam
test
push
push
inc
dec
scas
rolb
adcb
loope
in
sbb
mov
adc
lret
stos
inc
stc
fbstp
call
push
stos
push
mov
cmp
repz
xor
adc
les
add
ss
mov
cwtl
adc
and
into
pop
icebp
adc
out
popf
push
mov
popa
lods
test
imull
outsl
cmp
mov
cmp
js
jbe
sbb
es
push
mov
xor
pop
dec
cmpsb
scas
push
arpl
mov
scas
das
mov
jns
xchg
sub
lret
shr
icebp
or
pusha
inc
arpl
mov
add
adc
mov
ss
pop
and
stos
test
shrl
iret
arpl
cmp
push
cmp
scas
pop
sbb
nop
push
rcrl
mov
add
xor
cli
cmp
fistps
xchg
fsubrs
pop
aam
cmpsb
push
nop
pop
iret
xor
xor
mov
es
xchg
push
jecxz
cwtl
int
cmpb
call
cmp
jb
ss
fisubl
sbb
insl
jne
mov
subb
push
inc
add
imul
dec
pop
sub
fdivrl
or
sbb
cmp
jl
lods
sub
adc
aam
mov
in
sub
mov
mov
in
add
add
fadds
and
out
push
mov
and
fmull
pop
inc
inc
mov
cld
call
and
call
repnz
loopne
sub
call
adcl
frstor
lahf
outsl
inc
out
sbb
stos
gs
out
xlat
sub
lods
and
paddsw
int
push
fs
jecxz
inc
or
int
fbstp
xor
pop
loope
pop
inc
sahf
xchg
out
stos
arpl
jg
cmp
pop
int
push
lods
push
popf
lock
jbe
cmp
outsb
push
mov
add
dec
test
push
pop
pushf
out
xor
ljmp
pop
lods
out
mov
rol
test
out
mov
dec
mov
add
add
sub
add
pop
pop
jl
dec
dec
pop
add
loopne
in
and
fistpll
or
jo
or
push
push
js
sbb
sub
imul
jae
hlt
sub
inc
jmp
dec
loopne
int
mov
es
adc
imul
clc
or
fsubrp
mov
repz
in
mov
sbb
rcll
pop
addb
pop
orb
adc
jp
rdtsc
lods
scas
cwtl
insb
or
adcl
jl
cmc
jbe
aas
stos
dec
mov
pop
sub
xor
jge
and
cmp
hlt
pop
dec
inc
xchg
cmp
and
mov
pushf
out
lret
adcl
push
or
xchg
jl
sarb
jmp
sbb
pop
clc
aas
test
xor
repz
push
test
repnz
mov
stos
mov
movsl
sbb
ret
xchg
mov
cmp
test
insb
xor
push
int
out
dec
xchg
inc
loopne
fisubl
push
xlat
mov
movsl
mov
test
out
push
xchg
jne
testl
push
pop
xlat
jl
cltd
pop
and
dec
repnz
cmp
cmpb
jb
mov
cli
add
lock
pop
inc
lahf
sti
aas
sbb
aas
call
and
jae
int
xor
cwtl
int
inc
lods
or
mov
add
ljmp
mov
in
mov
and
push
or
lods
xchg
gs
loop
adc
cmp
jecxz
mov
mov
or
mov
shll
xchg
jne
mov
fwait
lcall
fidivrs
add
loop
mov
and
repz
lret
jecxz
pop
in
nop
dec
sub
call
lea
fmull
lret
push
and
cmp
mov
in
mov
gs
jns
mov
es
cmpsl
int3
ja
cmp
pop
sub
bts
jmp
jae
in
cmp
frstor
inc
lahf
mov
adc
cmp
jmp
adc
lret
dec
lahf
nop
cmpsb
xchg
ja
push
addl
cmp
jb
outsb
cmp
fcmovnb
mov
jp
lea
inc
imulb
lock
ror
std
jl
repnz
mov
push
cli
insb
or
mov
dec
adc
bound
movsb
into
xchg
jne
call
cs
mov
movsb
cli
int3
sahf
mov
push
lahf
fiaddl
scas
in
add
dec
icebp
lret
into
dec
pop
ret
insl
test
in
lock
inc
aas
jmp
ds
je
cmpsb
ret
mov
and
pop
outsl
aas
out
nop
cltd
xlat
fwait
hlt
lcall
jne
sub
loopne
dec
shld
adc
sub
mov
cmc
fucomip
jmp
lret
or
mov
incb
popa
and
movsb
test
and
jp
imul
mul
dec
mov
test
inc
pop
mov
pop
lock
jmp
call
dec
lea
pop
ds
int
unpckhps
cmpsl
xor
cwtl
and
hlt
es
mov
mov
cli
mov
adc
xor
jns
sbb
jg
aas
call
add
adc
pusha
and
push
call
sub
inc
push
sbb
call
dec
lock
sub
inc
and
add
in
cmp
mov
dec
out
nop
int
pop
pop
push
mov
inc
jl
sbb
lahf
mov
sbb
loopne
pushf
push
sbb
pop
xchg
test
pop
inc
lahf
push
mov
mov
or
sahf
fistl
xlat
add
or
lret
nop
sbbl
movsl
inc
add
mov
mov
and
divb
insl
mov
cs
push
sbb
inc
lahf
and
ljmp
popa
movsl
xchg
testl
jmp
mov
sub
sti
lahf
int
add
stc
jle
add
jp
inc
in
in
test
and
cmp
add
fcomps
cld
sub
push
mov
push
aad
ds
lock
into
or
and
jp
and
mov
inc
adc
push
xor
push
mov
icebp
fldt
pop
push
mov
iret
in
add
pop
add
mov
push
cwtl
shl
push
loopne
inc
je
add
stos
pop
xchg
mov
andb
xlat
pop
inc
push
insb
lods
loopne
nop
inc
adc
sub
cmp
sub
pop
icebp
lock
push
test
dec
or
mov
xchg
repz
push
inc
push
push
jg
jl
aaa
pop
xor
ss
and
scas
out
lahf
mov
int
int
mov
cli
out
int
mov
inc
popa
out
mov
lahf
xor
inc
orl
pop
mov
sar
vpmaddwd
sbb
enter
lahf
aas
or
sti
pop
lods
popf
in
repz
outsl
jmp
xchg
and
or
stos
andl
mov
cmp
sbb
mov
call
push
cmp
imul
in
mov
std
addr16
icebp
jl
sbb
in
es
cmp
cli
dec
inc
fdivrl
pop
addr16
dec
sbbl
cmp
and
arpl
xchg
movl
mov
mov
xor
call
adc
pop
lea
add
dec
cmp
mov
pop
pop
push
mov
incb
sbb
bound
andb
jmp
orl
cs
pushf
adc
mov
and
cmc
or
sub
adc
cmp
push
int3
icebp
dec
dec
popa
ljmp
jns
pcmpeqw
test
mov
movsl
jl
or
xor
test
popa
push
mov
pop
js
cwtl
jle
jno
lret
stos
cli
mov
fsubs
ljmp
xor
dec
adc
jecxz
int
or
or
scas
mov
xlat
paddw
popf
insb
icebp
dec
add
cld
pop
pop
popf
hlt
inc
ljmp
ror
ss
jae
dec
jae
xchg
pcmpeqd
mov
push
mov
cld
dec
lds
mov
sbb
popf
imul
adc
insb
test
xlat
xchg
or
pop
and
and
adc
adc
mov
inc
mov
nop
dec
xrelease
pop
icebp
sub
roll
daa
dec
pushf
or
cmpb
neg
dec
in
adc
push
jne
stos
cmp
sub
push
and
mov
stc
pop
arpl
cmp
and
jb
sub
fsubs
data16
dec
or
sbb
dec
dec
cmp
push
std
js
xchg
dec
scas
pop
jg
pop
movsl
cmp
call
scas
leave
loope
pop
and
xchg
stc
test
cs
xchg
test
jne
add
fcompl
sbb
movl
pop
push
scas
outsl
bound
dec
and
std
push
andb
xchg
out
mov
ret
push
xchg
rorl
xchg
iret
cmc
sub
mov
shl
ficompl
in
imul
cli
jge
mov
add
test
push
in
mov
repz
nop
popf
std
insl
pop
popf
std
and
mov
repz
dec
in
adc
jnp
xor
push
mov
shrb
popf
pop
dec
repz
push
scas
xor
mov
dec
and
inc
xchg
sti
es
in
mov
fistpl
push
or
dec
mov
mov
jb
ret
xchg
pop
dec
dec
mov
add
or
mov
lahf
dec
les
adc
or
mov
and
aam
ja
lock
mov
and
out
nop
negb
pop
sahf
ds
stos
pop
cld
sbb
jmp
dec
stos
xchg
test
ljmp
pop
dec
repz
sbb
lcall
sti
xor
xor
add
adc
mov
shrl
addr16
pop
faddl
int
xchg
pop
push
lds
and
scas
mov
pop
fisubrs
fidivrs
jmp
int
sbb
test
fadd
mov
in
les
mov
cmp
xlat
fsub
pop
xchg
or
mov
and
mov
aaa
mov
in
test
inc
outsb
sbb
cltd
inc
adc
lods
fisubs
sub
out
pop
inc
mov
rclb
sbb
xchg
and
fisttpll
stc
lods
repz
push
sub
loop
xor
mov
lock
mov
sub
out
cmp
inc
or
mov
sbb
loopne
fldcw
out
fs
nop
push
aas
sbb
pop
addr16
dec
pushf
je
mov
sbb
dec
sub
mov
mov
and
int
xor
test
adc
insb
push
pop
cmp
cmpsb
enter
cli
sahf
add
scas
into
push
jmp
cmp
push
lods
pop
nop
stos
arpl
sub
nop
mov
and
push
das
pop
ss
or
jo
out
cs
dec
dec
sub
out
adc
pop
inc
cli
cmp
xchg
mov
xor
pop
mov
cwtl
popf
lds
fisttpll
stos
aas
hlt
iret
leave
cmp
stc
xor
cmp
rcll
test
ficomps
jl
ja
jge
test
popf
rcrb
adc
or
dec
adc
and
insb
inc
fs
cmc
mov
ret
dec
ljmp
xchg
gs
lcall
cmp
add
add
in
adc
mov
addb
mov
pop
stc
and
jae
sti
in
pop
push
iret
or
cmp
out
mov
mov
add
cmp
inc
cmpsb
imul
aad
dec
xor
movsl
sbb
push
add
dec
out
xlat
imul
mov
xchg
pop
inc
dec
jns
test
lock
pushf
cli
js
xor
nop
mov
out
fisubl
jb
xor
nop
pop
shlb
sahf
mov
jne
xlat
mov
and
inc
nop
mov
xor
push
add
in
test
bound
cmpsl
jbe
or
popa
pop
jp
insb
push
or
cld
bound
jg
jo
dec
pop
jl
je
int
dec
adc
push
mov
cld
aad
xchg
cmpb
sub
mov
sbb
pop
xor
fdivrl
xchg
xor
addr16
fsubl
pop
and
js
mov
xchg
dec
inc
mov
jle
cmp
into
xchg
test
mov
inc
pop
je
inc
pop
push
pop
rcrb
inc
jg
ds
outsl
lods
dec
mov
jge
mov
sbb
adc
mov
fmull
dec
adc
mov
or
mov
adc
mov
xor
sbb
popf
out
fisttps
into
inc
je
and
inc
xor
add
mov
sbb
jge
and
pushf
insb
and
out
ljmp
inc
test
std
inc
xchg
mov
test
xchg
and
pop
mov
sbb
ss
inc
sub
inc
jl
xor
inc
loop
mov
pop
inc
out
scas
or
inc
popf
mov
sbb
or
xchg
and
jl
es
or
inc
in
mov
jl
cmp
out
ret
test
inc
or
inc
xlat
out
or
inc
sub
add
mov
cmpsl
fimuls
inc
mov
gs
adc
add
aad
bound
and
mov
sbb
or
cmp
je
movsb
mov
sbb
movsl
or
inc
sahf
mov
sbb
iret
jl
sbb
inc
or
bound
and
into
mov
sub
and
jl
in
or
inc
push
mov
scas
push
out
add
test
movb
sbb
pop
andl
daa
inc
mov
test
or
inc
test
testl
outsl
sbb
cmc
or
inc
aam
xchg
sbb
inc
mov
les
and
bound
inc
xor
inc
xchg
shlb
add
mov
and
and
sbb
incb
out
scas
mov
test
or
inc
mov
push
inc
lahf
test
inc
into
mov
test
xor
sbb
sub
xlat
testb
mov
inc
std
test
or
sbb
or
xlat
repnz
inc
mov
inc
push
test
or
mov
testl
and
inc
mov
lahf
inc
pop
test
add
out
push
rolb
inc
sub
pop
mov
sbb
sahf
add
pushf
cs
and
cmp
dec
sbb
pop
or
andb
bound
and
sbb
dec
or
inc
popa
or
and
xchg
pusha
sub
mov
and
inc
and
sbb
and
push
daa
pop
sub
aaa
cmp
pop
and
int3
cmp
test
and
pop
inc
out
sahf
sbb
push
xchg
lea
and
inc
testb
add
test
aam
sbb
sbb
jbe
mov
mov
jns
das
test
inc
pop
mov
test
sahf
and
inc
daa
mov
lahf
inc
iret
cmp
xor
and
sbb
xchg
or
inc
mov
bound
inc
fmull
or
add
mov
int
subl
lock
dec
rcll
cmp
mov
sahf
dec
pop
jnp
stos
pop
xchg
pop
or
lds
sub
push
loope
push
add
inc
outsb
mov
lea
or
fs
add
add
sti
test
push
or
neg
mov
sub
mov
mov
lds
add
or
cmp
leave
mov
or
push
movsl
adc
das
int
jmp
loopne
rorl
roll
mov
inc
orb
sbb
frstor
pop
push
push
cltd
adc
mov
xchg
dec
aam
mov
add
xor
in
rcl
cs
popf
sub
mov
pop
les
leave
mov
imulb
push
jl
pop
test
lods
divb
addl
mov
xor
data16
cmp
into
inc
mov
push
xor
daa
jl
cld
cmp
push
sbb
pop
add
fs
cmp
lods
xor
mov
test
inc
mov
and
decb
mov
mov
lds
jmp
add
pop
inc
iret
xchg
adc
aad
sbb
inc
jbe
ss
in
xor
int3
addl
ja
lea
pushf
dec
lahf
xor
inc
inc
pushf
test
mov
leave
xchg
iret
and
adc
mov
repnz
dec
mov
je
movsb
cmpsl
dec
push
dec
add
adc
push
divl
repnz
add
enter
pop
cmc
and
push
sub
or
mov
aas
inc
bound
jge
pushf
and
inc
insb
xchg
sbb
in
dec
mov
xchg
and
rclb
movl
jg
push
mulps
cmpsb
push
shll
xchg
mov
cmp
xchg
fildl
xchg
inc
ljmp
pop
push
sub
xchg
mov
lret
pushf
cmpsl
sbb
pushf
and
mov
je
dec
jge
and
int3
push
outsb
push
roll
lea
iret
push
dec
loope
adc
rcll
pop
cmp
sub
add
and
mov
and
shld
sbb
mov
inc
repz
jb
sahf
mov
pusha
outsb
dec
mov
jge
pop
xlat
mov
mov
scas
jle
fdivl
push
mov
jmp
fidivrl
fcompl
popf
subb
pop
test
mov
scas
cmpl
outsl
pop
push
outsl
xchg
pop
sbb
data16
cmc
popa
cld
outsl
popa
cwtl
dec
cltd
adc
hlt
test
cmp
xor
movsb
dec
imul
cmp
clc
mov
and
aad
or
or
aam
mov
aad
and
xchg
mov
dec
mov
or
aad
xor
and
les
pusha
or
outsb
sub
std
sub
jecxz
cmp
orl
push
insl
inc
mov
stc
add
fnstcw
xchg
mov
rcl
cmp
sti
mov
pushf
mov
or
outsl
sub
jl
xor
inc
fwait
addr16
js
xor
clc
sbbl
mov
jo
lods
xchg
add
daa
aad
hlt
and
xchg
push
add
sbb
inc
mov
sbb
cltd
mov
flds
inc
xor
scas
xor
adc
je
lods
push
rolb
rol
mov
cs
add
sub
fnstcw
fldenv
clc
sbbb
ret
nop
popf
ret
mov
sub
mov
add
lods
lea
lea
xchg
inc
leave
lret
dec
out
adc
xchg
mov
adc
sub
popf
or
es
mov
scas
stos
pushf
pop
jl
sub
dec
jge
in
pusha
add
push
pushf
mov
mov
add
int
cmpsl
test
pop
int3
popf
pusha
lock
add
mov
aas
mov
or
or
fisttps
inc
adc
mov
mov
push
pop
or
add
scas
pop
cltd
add
inc
mov
xchg
sub
in
lods
inc
inc
and
mov
lea
or
add
pop
lcall
sub
xchg
xchg
pop
ds
fs
popf
bound
jp
mov
scas
sbb
and
sub
int
adc
inc
sti
xchg
inc
pop
aaa
add
leave
loope
mov
imul
add
push
aaa
inc
push
fmull
testb
xor
bound
outsb
xchg
cwtl
mov
into
scas
out
dec
sahf
popf
std
push
pop
aas
adc
cmpb
cmc
sbb
int3
insl
jns
xchg
sbb
ret
xchg
imul
pop
outsb
dec
jne
pop
sbb
test
add
cmpsb
or
je
cmpsl
mov
sub
pop
sub
cmpsl
inc
hlt
pop
ss
and
sbb
add
jmp
xor
jl
dec
xor
ds
inc
push
and
push
dec
dec
nop
fimull
pop
xor
add
in
cmp
and
push
outsl
sbb
sub
daa
or
xchg
data16
add
outsb
outsl
mov
adcl
mov
icebp
adc
das
mov
sbb
into
pop
or
lret
iret
bound
xchg
add
sub
and
pop
data16
fs
adc
dec
popf
cmpsb
into
bound
in
jg
or
popf
or
xor
add
inc
or
movsl
pop
movl
mov
mov
push
dec
les
inc
and
nop
lods
pop
orb
les
into
xchg
in
pushf
inc
movsl
out
xor
xchg
push
push
sbb
dec
inc
or
or
sbb
xchg
faddp
and
nop
jne
enter
and
js
mov
mov
mov
test
stc
dec
jl
inc
popf
jge
out
inc
aaa
cmpsb
mov
sbb
dec
dec
mov
sbb
mov
aaa
js
scas
inc
mov
int
lea
int
test
dec
push
shlb
pop
mov
fmuls
xor
mov
push
test
icebp
aad
mov
test
xor
jl
andl
fstpl
and
out
fwait
stc
stos
test
xlat
sub
pop
and
fwait
imul
add
enter
or
mov
xchg
lds
xor
test
jnp
and
adc
mov
sub
and
mov
test
inc
fmulp
xchg
shrl
mov
mov
jne
inc
roll
mov
out
cld
rcll
test
xor
inc
add
jge
movsl
insl
pop
nop
fistl
mov
mov
cmp
sar
mov
popa
mov
aas
push
add
iret
test
sti
inc
cmpsb
xor
push
xchg
or
jge
pop
mov
loope
cmpsb
lret
sbb
pop
push
mov
insb
in
cmpb
orb
mov
dec
stos
daa
pop
and
pop
push
nop
ret
mov
add
mov
xchg
or
dec
repz
sub
cmp
mov
addr16
daa
dec
test
bound
mov
xor
push
pop
insb
jmp
fsubrl
xor
cltd
or
push
inc
xor
enter
pushf
data16
xchg
mov
sbb
mov
pop
movb
idivb
pop
loop
pop
jo
test
or
mov
xchg
jmp
pusha
mov
mov
nopl
xor
es
bound
popf
ds
ljmp
divb
imul
int
xchg
loope
mov
push
push
inc
sub
and
ljmp
sub
sarl
ret
mov
sub
mov
xor
jnp
pop
les
mov
mov
adc
and
cmp
mov
or
aaa
outsb
and
nop
dec
int
cwtl
adc
int
mov
loopne
add
sub
pop
xchg
hlt
push
cmp
mov
xor
add
add
test
out
sbb
mov
popl
call
push
arpl
push
inc
fs
mov
adc
mov
and
pop
test
push
inc
dec
cmpb
and
pushf
fdivrl
add
inc
dec
cmp
pop
les
dec
dec
and
or
pusha
inc
jbe
out
push
push
rorb
mov
push
lea
or
out
setnp
lret
scas
nop
sub
movsb
popf
lods
push
cmp
cld
es
enter
and
mov
leave
inc
insl
cltd
pop
adc
add
lea
inc
cmc
lcall
dec
xchg
push
inc
add
ret
mov
pop
movsl
movl
push
in
xchg
popf
cmpsl
xor
movb
pop
lds
fucom
xor
jbe
inc
mov
sbb
sbb
into
dec
loope
popf
mov
cmp
mov
or
test
sti
aam
sub
ret
sub
inc
inc
push
test
dec
out
jecxz
in
fbstp
sbb
outsl
repz
push
js
ror
in
push
loop
into
aam
mov
add
or
add
roll
test
sahf
dec
les
cmp
inc
je
cltd
in
cmp
pop
sahf
and
mov
mov
pop
lahf
dec
je
mov
add
cmp
push
add
jno
and
xor
call
std
lea
pusha
mov
and
outsb
and
cmp
cmp
jecxz
and
aad
int3
aas
inc
jle
movsb
xchg
pop
in
and
pop
push
nop
in
inc
push
adc
test
ret
sbb
movsb
leave
rclb
mov
out
mov
sahf
jne
mov
pop
xchg
btr
dec
out
mov
adc
punpckldq
ret
add
xor
incb
jns
mov
mov
test
iret
out
sub
mov
mov
test
sub
dec
mov
dec
sbb
test
mov
pop
lds
lods
xor
mov
dec
jno
pop
imul
push
lea
test
into
sub
je,pn
call
sahf
inc
add
lods
mov
imul
aam
pop
inc
sbb
lret
pop
push
mov
daa
insb
jl
test
push
and
aad
push
sbb
sahf
je
es
mov
fadd
pop
js
push
sarb
or
movsl
cld
popf
and
andb
add
add
es
or
int
insb
dec
sbb
aas
sbbl
inc
pop
jo
lea
xchg
fsubrp
sahf
shrb
cs
push
add
pop
mov
and
insb
aas
xchg
js
cmp
add
pop
je
adc
iret
mov
rcrl
lahf
ja
sbb
pop
fadds
out
pop
xor
cs
faddp
ds
sub
gs
pop
mov
in
fnstsw
fiadds
jecxz
imul
mov
das
popf
rorb
data16
popa
push
push
aas
fisubs
pushf
xor
lahf
jp
inc
insb
out
fbstp
cmp
test
fsubl
push
push
iret
test
sbb
scas
rcrl
xchg
fnstsw
add
dec
addb
test
fistps
xchg
sbb
fadd
fdivrl
pushf
rcrb
mov
popa
aam
sbb
pop
es
push
add
or
test
rcrl
dec
daa
add
push
mov
push
cmp
insb
lds
outsb
sarb
sbbb
pop
add
or
sub
hlt
pop
dec
incb
jge
push
scas
fadd
inc
jle
call
dec
fmull
sbb
hlt
enter
aad
dec
cld
push
fistps
imul
in
sbb
sbbb
push
push
sarb
sub
sbb
xor
jecxz,pt
aam
mov
cmp
mov
pop
icebp
jg
ret
daa
je
fsubrl
dec
jge
add
adc
inc
mov
stc
ret
orb
fstpl
cs
inc
adc
sbb
mov
push
sbb
outsb
je,pn
sbb
loopne
pushf
pop
push
jge,pt
add
ret
daa
je
pop
sub
insb
daa
je
jecxz
pop
fidivrs
lods
ret
xchg
pop
cmp
add
pushf
pushf
pop
and
inc
pusha
testb
mov
xchg
cmp
js
rorb
je
sbb
lds
pop
xchg
mov
scas
cmp
push
sbb
mov
xchg
ss
lods
je
jle
xor
sbb
in
or
pop
ds
in
sbb
jl
sbb
test
or
jge
pop
lds
pushf
pushf
sbb
inc
adc
lahf
aas
sbb
dec
jle
test
mov
dec
sahf
sbb
mov
inc
push
aas
es
pop
jl
pop
lahf
xchg
sbb
adc
add
jg
jl
insb
cld
adc
fcompl
pop
lahf
sbb
ffree
fsubp
mov
std
pop
push
sahf
aas
jl
sbb
pop
decb
pop
fdivl
sbb
push
inc
mov
imul
fsubrl
filds
fs
test
mov
pushf
inc
fmull
fstl
pushf
jl
sub
sbb
mov
ficomps
sub
cld
sbb
fists
aam
lea
or
cld
push
xchg
rcl
in
shrb
test
mov
movb
popf
inc
xchg
mov
sbb
into
xchg
cmp
jp
ds
cmpsb
clc
mov
pop
or
add
adc
scas
cs
jno
call
xchg
popa
lahf
or
js
xchg
sbbl
dec
inc
pop
mov
cld
or
push
andl
sbb
jge
adc
push
sbb
sbb
insb
sbb
cltd
dec
cmp
sbb
les
jl
dec
push
cmpb
cld
pop
cmp
xor
xchg
leave
pop
xor
mov
or
imul
pushf
fcoml
ss
les
ret
push
cmp
xchg
pusha
addb
dec
sti
add
lods
pop
sub
mov
sbb
es
sbb
xor
and
and
mov
or
add
mov
inc
orb
add
loopne
jo
add
sbb
add
mov
test
xor
jns
push
scas
call
jnp
add
adc
paddsb
jl
dec
in
or
add
cli
lods
scas
mov
mov
jl
mov
push
fdivrl
sbb
xor
fldenv
add
xchg
outsl
mov
imul
insl
loop
pop
rorb
mov
sti
push
adc
pushf
xor
shl
test
and
fadds
pop
adc
sub
or
xor
pop
ss
cmp
inc
sbb
dec
iret
test
mov
and
jnp
inc
adcb
sbb
xor
pop
sahf
addl
cltd
jns
add
inc
sbb
insb
rclb
push
cmp
aad
fstpl
andb
adc
lds
jns
movsl
sbb
insl
or
pop
ja
jecxz
shl
dec
scas
pop
sti
sub
jae
sub
leave
outsl
call
push
mov
pusha
cmp
cmp
add
pop
add
icebp
dec
sub
leave
faddl
mov
cmp
stc
rorb
mov
out
movb
push
mov
mov
mov
pop
test
andb
insb
mov
push
inc
lods
sub
add
add
mov
xor
adc
not
cltd
rolb
mov
lds
mov
enter
push
leave
xchg
cmp
test
arpl
inc
add
add
xor
pop
push
pop
add
cmp
or
xchg
sbb
mov
jl
mov
adc
dec
inc
jg,pt
push
es
int
shll
movb
int3
ss
mov
lret
enter
popf
sbb
loope
bound
mov
xor
mov
test
xor
cmp
or
push
mov
int3
mov
insb
adc
int3
int
daa
dec
adc
rcrb
and
inc
pusha
leave
int
xchg
jg
xchg
inc
mov
icebp
lahf
cld
push
lea
dec
orl
xchg
popf
scas
cmp
test
cmpsl
imul
cmp
push
out
out
push
add
mov
add
and
mov
xchg
sbb
xchg
fadds
addl
inc
mov
mov
and
pushf
add
mov
dec
push
ja
mov
lahf
cmove
leave
out
insb
pop
push
add
cmp
jmp
mov
add
lods
enter
mov
mov
insl
movsl
cmp
jecxz
pop
pop
xor
push
fnstsw
mov
add
jl
push
or
add
shrb
pop
fstpl
dec
cmp
pop
addb
nop
leave
push
or
sahf
cmp
shrl
shll
pop
xor
pop
dec
cmp
loope
fldenv
adc
add
sbb
test
cmpb
ja
lods
and
sahf
jo
add
sub
mov
jl
mov
sbb
mov
push
out
test
insb
or
sub
adc
adc
push
push
dec
cs
push
filds
xchg
xor
leave
xchg
out
arpl
mov
dec
xor
subl
push
rorb
mov
and
dec
sbb
sbb
pop
sar
insb
jecxz
insb
push
sub
jg
sub
std
or
cmc
aaa
aas
popa
mov
adc
jg
push
pop
cmp
out
lahf
xchg
int
add
sub
jl
dec
push
sbb
mov
sub
cmpsl
cmp
dec
ljmp
fcompl
sbb
mov
mov
xchg
push
pusha
and
cltd
or
fimuls
xor
dec
inc
leave
addr16
scas
shll
int
pop
lds
test
popa
add
jno
lods
or
pusha
mov
in
notb
push
push
dec
sarl
int3
or
fsub
movsl
outsb
and
dec
jl
adc
daa
cld
adc
sarb
pop
js
nop
push
jmp
pop
lods
dec
xchg
ret
sbb
add
sub
fidivrs
cmp
adc
test
jnp
and
inc
adc
inc
ds
pop
out
sahf
sub
je
pop
rcrb
add
scas
pushf
cld
xchg
je
jl
mov
jmp
lock
mov
mov
push
lds
rcrl
mov
ffree
or
cmp
cmp
fs
xor
cmc
inc
fnstenv
mov
jg
inc
andb
stos
jg
in
insl
sub
test
popf
push
xchg
cltd
push
inc
aad
lds
mov
pop
and
mov
pop
cltd
xchg
push
and
data16
and
or
cs
jb
add
test
mov
lock
stc
mov
mov
fildll
cmc
or
mov
scas
ss
cmp
lods
icebp
test
xor
out
dec
pop
mov
mov
frstor
sub
in
vshufps
sub
rcrl
popf
cmp
js
mov
jl
ffree
sbb
adc
dec
fildll
cmp
bound
mov
pop
push
js
mov
pop
pop
jo
pusha
jle
jl
push
ret
popf
jl
mov
push
mov
xor
mov
mov
jle
mov
push
fisubs
aad
fmull
aad
pushf
imul
outsb
sbb
test
adc
sbb
test
sbb
and
jle
sub
scas
and
add
popa
decb
mov
jl
sbb
ds
inc
mov
mov
or
scas
mov
lock
pop
adc
dec
cmp
dec
push
jl
aam
adc
pop
les
mov
xchg
leave
mov
test
mov
xchg
mov
cmp
sub
repz
jge
loop
jecxz
leave
incl
std
sub
test
push
jg
pop
nop
push
xchg
pop
inc
pop
pop
les
pop
xor
cmpsb
movsb
pop
inc
mov
mov
jle
rcll
xchg
mov
jp
jns
les
dec
cmpsl
imul
fiadds
and
lahf
inc
sbb
push
sbb
mov
pop
jl
ds
pop
fimuls
mov
rorb
mov
or
jge
mov
adc
pop
rclb
add
nop
mov
mov
int3
mov
stc
les
and
mov
or
pop
aam
sub
mov
fistpll
repnz
out
inc
dec
repnz
shll
mov
mov
inc
rcrb
dec
lods
cmp
mov
sub
rol
jbe
jl
cmp
lea
cmp
jmp
cwtl
push
sbb
pop
xchg
out
js
push
repz
cld
xor
mov
mov
daa
mov
pop
rorb
jl
adc
jbe
jo
push
frstor
mov
insl
cmp
pop
sbb
xchg
xlat
faddl
mov
sub
jge
inc
adc
mov
jne
scas
adc
lea
mov
dec
cli
adc
sub
push
adc
cmp
xor
les
aaa
xchg
pop
add
imul
add
es
push
rorl
in
pop
out
or
pushf
add
mov
repz
dec
sbb
adc
std
faddl
xchg
push
popf
test
pop
les
xchg
and
dec
cwtl
xchg
fwait
cmp
arpl
stos
inc
push
in
mov
mov
pop
leave
sub
push
mov
jmp
and
popa
mov
dec
mov
mov
push
mov
hlt
mov
mov
add
mov
cmc
lcall
cmp
insb
mov
mov
insb
cmc
sbb
mov
mov
adc
mov
xor
and
cmp
jecxz
data16
movsl
imul
pop
sti
int3
adc
sub
sub
jge
loope
push
adc
jb
and
xchg
pushf
cltd
push
mov
cmp
mov
pop
push
push
daa
pop
adc
mov
mov
imul
mov
sub
add
jp
mov
test
aas
ja
imul
int
dec
lahf
pop
dec
push
cmp
leave
mov
pop
scas
jne
sbb
scas
or
outsl
cli
mov
fildll
mov
or
cmp
std
push
xor
adc
orl
sarl
add
dec
xchg
jle
or
or
insl
test
push
insl
mov
inc
pop
dec
adc
mov
adc
fildll
push
pop
pop
xchg
lods
lods
int
adc
jg
popf
mov
inc
out
adc
xchg
dec
cmpb
add
mov
pushf
add
mov
add
dec
pop
sbb
mov
daa
loop
sbb
sub
or
xor
push
or
push
fistl
push
lds
shlb
push
scas
mov
enter
add
dec
mov
nop
mov
cmp
nop
pusha
mov
cwtl
push
sbb
sub
or
pop
add
and
int3
mov
sbb
mov
sub
push
pop
sub
pmaxub
cmpsl
mov
pop
and
pushf
pop
jne
pop
inc
sbb
fistps
jle
or
inc
mov
dec
mov
and
or
ficomps
cld
pandn
scas
mov
in
sub
jl
mov
jge
sub
ds
mov
mov
mov
and
pushf
outsl
jge
mov
cwtl
rolb
outsb
test
or
dec
faddl
inc
pop
cwtl
lahf
filds
rcrb
pushf
pop
inc
jge
pop
dec
ds
cld
lea
ficoms
inc
cmp
or
mov
test
and
mov
popf
ffree
dec
ds
or
or
xchg
aam
adc
inc
cmp
lods
sbb
xchg
ds
cltd
pop
shll
pop
inc
cmp
cmp
mov
es
decb
frstor
imul
stos
jge
leave
sbb
sub
out
aas
cmp
testl
sbb
pop
ret
xor
pop
xor
dec
lret
sbb
mov
aaa
mov
pop
mov
sub
cmp
cmp
das
add
or
adc
ljmp
sbb
lea
lahf
inc
push
sub
or
in
or
cmp
cld
rcrb
mov
cld
insl
ds
lods
syscall
dec
pusha
cmp
mov
push
es
pusha
and
sbb
scas
xor
or
mov
cmovb
test
cmp
and
or
inc
dec
cmp
jno
pop
adc
or
or
inc
insb
nop
out
pop
cs
and
in
das
sbb
sti
or
pushf
or
or
test
in
cmp
adc
dec
sbb
and
dec
adc
dec
and
pop
dec
sbb
lods
test
in
lea
and
add
and
sub
or
pop
daa
dec
sbb
pop
les
in
lods
sub
inc
mov
mov
into
daa
add
push
les
push
sub
inc
jbe
cmp
insl
mov
fidivrl
aaa
jl
pop
pop
inc
push
sub
sub
lds
push
popf
jns
cltd
loope
mov
nopl
int3
fdivrl
or
je
js
and
fisttpll
lret
dec
inc
les
and
push
nop
hlt
dec
inc
add
inc
scas
inc
add
and
bound
test
or
adc
incb
add
sub
sbb
pop
inc
cmp
sbb
es
lds
sbb
fmull
cmp
or
scas
cmp
les
sbb
cmp
fbstp
sbb
pop
cld
pop
inc
and
pop
test
inc
inc
mov
fldl
test
or
inc
icebp
lret
bnd
pop
inc
or
cmp
sbb
xchg
in
inc
ffree
ds
sub
test
or
inc
cmp
jl
pop
faddl
inc
cmp
mov
xor
pop
pop
rclb
pop
mov
sbb
and
inc
cmp
add
mov
dec
or
mov
mov
jle
inc
test
or
inc
lahf
mov
bnd
push
inc
pop
inc
jne
mov
test
jge
and
inc
insb
sbb
mov
sahf
inc
je
decb
inc
mov
sub
mov
jl
in
fsubr
and
jmp
popf
sub
mov
pop
xchg
mov
pop
or
inc
fisttps
insb
inc
pushf
test
cld
js
pop
inc
test
mov
test
or
fisubs
leave
inc
aas
mov
sbb
cld
xor
and
or
mov
sbb
and
inc
fisttpll
test
xor
xor
cmp
cmp
faddl
cmp
test
inc
push
mov
push
inc
mov
pop
and
popa
mov
sbb
or
inc
cld
mov
pop
inc
jne
mov
jge
jle
sbbl
and
mov
or
inc
lods
mov
mov
fldl
sahf
inc
rorl
leave
or
inc
add
inc
jl
aad
faddl
test
loope
pop
inc
in
pop
or
inc
pop
mov
sbb
fistpll
jl
dec
jl
sbb
inc
sbb
pop
mov
sbb
push
jp
xchg
jle
or
sbb
sbb
pop
lahf
inc
adc
mov
inc
mov
lods
and
sbb
push
lea
rcrb
inc
arpl
incb
pop
sbb
outsl
jl
push
or
inc
fmull
test
inc
icebp
sbb
test
mov
and
or
push
or
in
pop
jecxz
cmp
fcomip
sbbb
pop
cmp
pushf
cmc
or
sbb
popf
sbb
jecxz
cmp
sahf
cmc
or
fistpl
lahf
js
fucomip
sbb
pop
xchg
pushf
out
fcompl
sbb
popf
cmp
or
pop
js
sahf
out
ficomps
mov
lahf
clc
sbb
sbb
sbb
pop
clc
sbbb
or
popf
js
fucomp
push
sbb
jecxz
cmp
jecxz
cmp
lahf
cmc
or
ret
sbb
cmp
pop
cmc
or
out
pop
sbb
jecxz
cmp
pop
cmc
or
or
pop
js
lahf
out
fistps
xchg
js
pop
out
pushf
sbb
jecxz
cmp
popf
cmc
or
push
js
pop
out
sahf
sbb
pop
clc
sbbb
push
pushf
cmp
fdiv
or
popf
out
fstpl
push
clc
sbbb
cmp
fdivp
repz
pop
cmc
or
sbb
in
or
js
fsubr
sbb
sbbb
cmc
or
sahf
js
fdivp
out
ds
out
lahf
sbb
jo
pop
sbb
jecxz
cmp
pop
cmc
or
push
out
pop
sbb
jmp
clc
sbbb
cmp
fcomip
sbbb
pop
cmp
pushf
cmc
or
sbb
popf
sbb
jecxz
cmp
sahf
cmc
or
fistpl
lahf
js
fucomip
sbb
js
pop
js
pushf
out
fcompl
sbb
popf
cmp
or
pop
js
sahf
out
ficomps
mov
lahf
clc
sbb
sbb
sbb
pop
clc
test
pop
enter
std
mov
xor
sbb
scas
mov
mov
sbb
cmp
adc
cld
mov
push
aas
sbb
cmp
outsb
mov
sahf
pop
ret
lahf
imul
outsl
lret
sbb
mov
sbb
add
cmp
daa
cmp
sbb
mov
jne
xor
or
in
or
cs
and
lahf
mov
cmp
cld
mov
std
add
cmp
aas
mov
in
mov
mov
fildll
cmp
dec
xor
std
sbb
out
fstps
jl
in
decb
lods
cmp
cld
fs
or
push
jg
or
or
push
xchg
or
les
cld
push
ret
in
mov
jl
add
clc
gs
inc
cmp
int
adc
cmp
xor
mov
jl
popf
jle
mov
in
aas
test
dec
jl
cs
jl
xor
mov
sbb
dec
xor
pop
push
xor
sbb
cmp
jge
gs
aas
ss
orl
out
adc
mov
cmp
in
mov
or
lods
cld
and
push
sub
dec
aad
ret
mov
jno
ret
dec
cmc
dec
cld
in
cmp
lods
lcall
xorb
mov
aas
sbb
add
pusha
out
stc
cld
or
mov
dec
in
ret
ds
hlt
lret
out
cmp
lods
or
je
adc
mov
fdivrl
push
insb
sahf
and
jl
scas
inc
mov
std
aad
fidivrs
cmpsl
mov
or
cmp
push
cmp
sbb
mov
xor
fcompl
sub
mov
dec
lret
cmp
ljmp
sbb
cmp
lds
sbb
sbb
stos
dec
hlt
cld
ret
add
je
fildl
jl
fsubrp
or
or
add
sbbb
adc
and
mov
jl
sbb
sub
mov
mov
cmp
dec
jl
cmp
xchg
jl
call
prefetch
mov
or
dec
mov
jno
lds
test
jns
std
push
scas
xchg
dec
push
jl
in
test
sub
ds
roll
dec
jle
cs
cld
pop
into
push
add
cmp
out
pop
insb
jne
push
push
pop
mov
fs
add
dec
push
mov
sbb
push
sbb
cmp
adc
pop
sub
jl
sbb
into
cld
jl
flds
lea
push
data16
aas
jg
pop
lcall
aaa
dec
out
ret
add
push
cmp
or
std
cmp
mov
jae
jge
xchg
mov
into
mov
movsl
je
mov
out
adcb
jl
add
mov
cmp
int
and
cmp
dec
add
into
cmpsb
sub
or
cmp
mov
sbb
ret
lret
fimuls
cs
cmp
cmpb
ds
lea
mov
aas
sub
setge
pop
test
jle
insb
sub
add
test
mov
or
ss
sub
push
inc
addr16
rolb
pusha
push
xorl
jg
pop
mov
int3
xchg
inc
stos
push
or
int3
mov
mov
adc
aad
cli
mov
xor
dec
adc
icebp
mov
mov
and
dec
pushf
ljmp
mov
sub
xchg
hlt
lret
mov
cmpsb
push
je
add
fadds
pusha
movsb
add
mov
or
into
movsl
jno
in
rorb
dec
insl
mov
test
mov
xchg
xchg
mov
insl
inc
jl
push
cmp
mov
lods
sarl
inc
lock
in
ja
mov
fdiv
cmc
add
mov
jno
std
mov
imul
sbb
and
call
push
mov
scas
in
dec
lret
outsb
push
je
sub
xor
nop
lods
dec
push
lds
pop
xchg
xchg
nop
js
mull
dec
dec
add
xchg
outsb
cmc
inc
fldl
nop
iret
std
loope
test
test
and
add
call
sahf
mov
movsb
mov
pop
sahf
dec
lods
shlb
jmp
mov
out
daa
cwtl
add
or
lea
sbb
mov
sub
mov
insb
or
mov
and
rclb
jle
fiadds
ja
in
outsl
shll
into
addr16
lods
enter
jl
xor
mov
cmc
cld
in
leave
lcall
insl
mov
outsb
and
mov
test
xchg
insl
int
into
xchg
in
mov
lcall
dec
lea
ds
cmpl
lea
loope
test
bound
bound
hlt
xchg
in
mov
cmp
insl
xor
adc
inc
or
sbb
dec
es
fildll
inc
pop
sub
shlb
idivb
inc
leave
sub
cmp
lods
int3
fisubs
fistps
and
mov
xchg
aam
cmp
ss
pop
inc
int
aaa
lret
rolb
sbb
insl
sbb
lret
xchg
dec
xor
add
jl
cmp
xor
cmpsb
insb
dec
inc
pushf
les
mov
add
xchg
mov
sbb
inc
sbb
dec
addr16
xor
and
or
sbb
sbb
sub
push
popf
add
adc
jmp
sti
push
add
or
push
sbb
daa
testb
adc
inc
sti
imul
xchg
mov
testb
mov
test
fcomps
dec
dec
sti
dec
dec
fsubs
sub
out
lahf
or
adc
push
scas
xchg
push
xor
and
cwtl
cmpsb
or
int
lea
pop
push
cs
orb
out
mov
jp
int
jl
sub
inc
pushf
ds
sbb
int
pusha
cmp
cmp
lds
pushf
sub
loopne
shlb
les
add
mov
fbld
outsl
and
pop
and
outsl
push
outsl
in
lods
xor
aas
std
dec
or
dec
stos
nop
push
push
mov
add
push
sti
add
and
inc
mov
fcomi
rorb
or
mov
rolb
xchg
hlt
faddl
mov
test
jl
xchg
fisttpll
fldl
inc
xor
jnp
lods
dec
insl
and
mov
adc
or
in
jo
sbb
or
aas
add
mov
dec
int
mov
xor
cmp
cmpsl
cli
sbb
add
or
add
mov
idivl
add
sti
adc
sbb
jmp
push
or
add
jl
ds
inc
xchg
add
push
gs
in
scas
jl
popa
lds
mov
cmp
or
and
int3
xchg
adc
lods
inc
add
xchg
push
shrb
in
sbbb
push
cmp
sbbb
std
popf
mov
xor
addr16
jl
popf
push
dec
cmp
mov
mov
mov
ljmp
and
mov
lea
inc
aad
daa
sub
sub
and
inc
ret
les
lea
daa
adc
cs
jl
cs
xchg
repnz
cmp
imul
insl
inc
imul
xorb
mov
push
sub
or
aas
and
xor
sub
and
outsl
loope
loope
loop
adc
in
repnz
ret
cld
pop
gs
jb
mov
cmp
mov
cmp
add
mov
adc
out
push
jge
mov
pop
mov
add
inc
push
or
pop
sub
gs
pop
lahf
xchg
loop
jne
jge
mov
xchg
sub
test
mov
std
clc
push
push
lods
ror
jbe
jmp
sti
fnstcw
inc
fsqrt
cmp
cltd
sub
adc
push
mov
icebp
int3
or
es
add
insb
push
or
incb
clc
dec
cmp
xchg
mov
dec
or
mov
cltd
andl
loopne
int
mov
in
rclb
mov
jbe
jno
dec
flds
mov
loope
test
pop
xchg
cltd
arpl
xor
in
sub
mov
inc
leave
jg
orb
es
mov
int
pop
push
adc
scas
int
sbb
push
out
fmul
adc
cmp
test
or
das
cmp
mov
sbb
dec
and
jbe
cmp
cmp
sbb
xchg
decb
cmp
xlat
lea
adc
inc
addr16
gs
mov
add
dec
mov
adc
insb
add
jno
cli
popf
movl
dec
sbb
sub
mov
inc
add
std
out
add
cmp
mov
jno
inc
and
mov
rcrl
ret
std
lods
insl
pushf
sbb
fildl
push
adc
add
mov
sbb
cmp
inc
out
push
sbb
sahf
jae
jo
mov
mov
out
sbb
call
and
ficompl
in
into
sbb
mov
pop
aas
cmp
inc
cmp
test
mov
cmp
or
sbb
pushf
xor
xlat
xor
xor
jg
xchg
sbb
mov
pop
xchg
fsts
ds
xor
mov
dec
jle
rclb
cmp
sub
cmp
dec
mov
addr16
or
xor
in
cld
cs
jmp
cld
mov
cmp
mov
push
sbb
sbb
stc
cmp
mov
test
cmp
mov
add
jl
inc
xchg
mov
loope
and
push
inc
aas
mov
out
sbb
add
shlb
cmp
bound
aad
fst
push
jmp
xchg
std
mov
std
jo
cmpsb
xor
fsubrl
or
cld
ret
mov
cmp
sub
fucomip
ret
lock
mov
dec
loope
ja
insb
sbb
jl
sar
sub
pop
divb
xor
into
jne
jl
jge
or
lock
fs
orl
cmc
sub
xor
xor
rorb
loopne
enter
les
xor
nop
pop
enter
xor
add
adc
mov
addr16
popf
nop
mov
mov
pop
pop
loope
mov
jne
roll
cmp
jg
mov
inc
mov
push
movsb
stos
repz
jae
aas
lea
jl
gs
fcomps
ret
cmp
mov
mov
add
cmp
push
push
adc
sub
lret
pop
mov
cmpb
cmp
push
xor
mov
dec
ret
mov
cld
fstpl
sbb
jl
cmovne
push
cld
clc
jg
daa
mov
testl
inc
push
cmc
sub
sub
test
cwtl
xor
sbb
movsl
cmpsb
jmp
jle
dec
jecxz
sbb
jecxz
dec
or
aam
cmp
adc
inc
dec
sbb
sub
mov
dec
cmp
fwait
test
sbb
jle
insb
push
in
sbb
or
out
mov
or
fisttps
jl
sbb
or
cmp
adc
inc
or
jb
test
pop
in
loop
in
popa
or
and
test
mov
inc
stc
std
xchg
inc
cmc
les
lods
adc
jg
sub
idiv
and
clc
or
in
xchg
frstor
mov
add
clc
pop
stc
orb
sbb
js
clc
inc
stc
call
lea
push
sbb
adc
and
sbb
mov
sbb
xchg
sbb
nop
and
in
and
or
sub
inc
insb
in
mov
cmp
add
pop
in
dec
stc
arpl
cmpsb
or
sub
and
dec
sbb
ficompl
add
mov
sbb
push
sbb
push
and
jno
or
pushw
repnz
pop
out
cmp
sbb
and
nopl
int3
pushf
mov
inc
popf
xchg
xor
fcoml
sub
ss
inc
cmp
inc
dec
sahf
jns
push
sbb
sub
clc
sbb
int3
pop
xchg
int3
jl
or
clc
xchg
mov
and
cmp
or
add
lods
div
cmpsl
sbb
adc
cld
orl
sbb
cmpb
sbb
and
fcomp
push
cltd
jmp
adc
and
pop
movsb
mov
sub
xchg
add
mov
hlt
stc
mov
mov
pop
or
cmp
cmp
and
pop
ffreep
jecxz
cld
lahf
sbb
flds
cld
cmp
xchg
or
add
sbb
int
xchg
cmp
fadds
bound
cmp
es
pop
push
jp
dec
addb
addb
fcompl
pushf
gs
mov
sub
dec
mov
xchg
sbb
das
push
add
or
sbb
push
sbb
inc
mov
popf
ret
xor
sbb
mov
je
fcmovbe
fwait
sbb
and
cmpsl
popf
dec
mov
or
xlat
lahf
push
xchg
or
cld
js
call
pushf
and
movsb
xor
insl
push
enter
cmc
mov
jge
jns
clc
repz
inc
add
jge
lock
sbb
push
cmp
adc
mov
xchg
jle
cmc
ret
pop
sti
jnp
cltd
scas
fcoms
push
jae
lahf
sahf
aas
mov
cli
in
enter
lea
and
sti
aaa
push
or
push
and
inc
negb
xor
adc
push
stos
int3
mov
es
je
mov
leave
mov
in
inc
vpaddw
mov
mov
push
iret
cmp
aas
int
lahf
mov
cmp
adc
sbb
popf
add
ljmp
or
pop
jae
inc
imul
push
mov
dec
sbb
mov
jb
push
aam
adc
sub
sbb
push
fwait
aad
negl
adc
cmp
or
or
fs
mov
cmp
xlat
addb
sbb
xchg
ss
ficomps
xor
push
jnp
inc
test
lcall
lods
sbb
adc
je
and
push
bound
push
jbe
inc
pop
cmp
hlt
mov
xor
cmp
dec
loopne
mov
mov
sbb
xor
jns
push
mov
mov
lret
lea
lahf
sbb
mov
pop
andb
lods
inc
std
push
in
shlb
insl
je
cmpb
push
xor
outsb
punpckldq
xor
adc
push
sub
adc
daa
and
lods
xchg
rcl
fsubrl
sbb
and
or
loope
mov
in
jbe
sbb
mov
movsl
cltd
stc
sub
or
xor
in
cmp
push
push
cmp
push
adc
call
add
out
push
call
dec
or
jnp
sbb
adc
dec
add
and
sub
push
lcall
aad
pop
push
adc
inc
int3
ds
popf
jb
fsubl
ficompl
sub
mov
fninit
dec
dec
xchg
xor
fcomps
pop
mov
add
dec
xor
mov
pop
scas
daa
ss
shrb
aam
out
xor
jbe
fimuls
jbe
sbb
mov
or
sub
and
mov
sbb
pushf
sub
xlat
sub
or
leave
test
or
cwtl
or
fstl
adc
lds
inc
pop
or
mov
addr16
popf
mov
xchg
scas
mov
pop
ljmp
inc
mov
jnp
test
xor
xchg
aad
test
xlat
jg
jmp
sbb
lods
push
popf
cld
cmp
xchg
dec
push
pushf
inc
inc
push
sbb
aad
aad
add
lock
les
icebp
or
push
outsb
int
inc
sbb
xchg
cmc
dec
fildll
add
pop
dec
fsubrl
cld
pushf
and
dec
dec
jge
lret
jge
pop
pop
mov
jo
or
filds
sbb
jp
dec
xor
cmp
js
inc
cmp
push
cltd
mov
aad
das
and
adc
xor
cmp
sub
pop
cmp
cmp
dec
into
enter
cmp
popa
and
outsb
pop
or
into
and
mov
and
je
sbb
fst
cmp
dec
dec
in
in
xchg
test
arpl
push
dec
mov
shlb
enter
lds
iret
mov
push
cld
mov
dec
in
cmp
cwtl
sti
sbb
fmul
iret
in
fistps
addl
sbb
or
cmp
adcl
pushf
or
xchg
push
inc
adc
fmull
dec
std
loop
jl
xchg
testl
std
and
iret
std
leave
dec
xchg
sub
pop
jge
sbb
stc
std
jg
dec
or
xchg
mov
xchg
leave
push
and
in
add
push
cmp
push
and
test
fstl
adc
sbb
pop
xor
jecxz
pop
push
dec
xor
dec
addl
pop
cmp
jmp
push
pop
add
and
and
jl
sbb
aad
jbe
mov
int
sbb
inc
sbb
cmp
int
mov
cmc
out
and
aas
mov
mov
mov
sub
inc
out
movsb
push
pop
inc
mov
pop
jo
inc
cli
jp
push
dec
xchg
push
sbb
fwait
std
sbb
lea
adc
or
jl
push
mov
std
xor
repz
xchg
or
les
mov
inc
xchg
push
sbb
inc
data16
add
test
movb
jg
cmp
loop
pop
daa
and
mov
xchg
prefetch
or
sbb
popfw
sbb
mov
fadd
adc
mov
insl
iret
pop
and
ret
mov
xchg
pop
and
cld
sub
and
adc
fistps
orb
in
sub
movsb
aaa
ds
and
scas
das
mov
imul
shlb
cld
inc
sbb
cmp
xchg
push
sbb
movsb
jmp
ja
cmpb
cmpb
hlt
sbb
lods
sub
add
aam
jl
outsb
rcrb
not
mov
inc
out
inc
outsb
enter
movsb
imul
sbb
xor
test
cmp
sub
push
iret
and
sbb
test
fdivrl
inc
into
dec
adc
adc
xchg
imul
cwtl
pushf
jl
cltd
pop
cmp
and
rorl
lods
dec
pushf
lock
adc
divl
lods
add
and
and
decb
xchg
sti
mov
mov
cmp
jbe
inc
int
stc
mov
push
sbb
or
jle
mov
jl
loop
fisttpll
mov
inc
cmp
cmp
dec
icebp
ret
stos
mov
xchg
aas
cmp
cld
mov
pop
fbstp
pop
xor
addb
push
cmp
push
and
lock
push
addr16
xchg
or
cld
xchg
lods
sbb
bound
popa
and
cmovl
sbb
scas
dec
sbb
lds
jmp
dec
mov
movsl
subb
mov
cld
pop
push
insb
jle
movsb
sti
fwait
sbb
xchg
nop
inc
mov
xchg
out
jle
xlat
dec
sbb
add
insl
mov
cmp
cmp
popf
aad
out
and
jmp
dec
mulb
mov
cmc
cmpsb
push
or
pop
sub
mov
dec
xchg
into
pop
push
stc
fwait
mov
sahf
or
lds
cmp
cmp
mov
or
and
sbb
xchg
push
mov
cmp
mov
cmpsb
cmp
lea
or
sbb
lea
repz
mov
in
ret
aam
xor
add
fists
mov
pop
iret
jg
ds
pushaw
ds
push
jle
add
outsb
push
xchg
mov
and
push
out
fwait
pop
dec
std
pop
lds
push
lds
gs
xchg
or
sbb
in
leave
jle
and
push
scas
push
push
in
dec
loop
cli
das
jge
push
clc
std
jecxz
mov
mov
in
or
shll
push
cmp
inc
sbb
dec
mov
xchg
cmp
pop
les
sbb
cltd
adc
xor
dec
sahf
xor
sub
push
pushw
sub
jb
pushf
add
enter
movsb
inc
inc
mov
insb
pop
sub
inc
or
xchg
rcrl
mov
and
mov
scas
adc
pop
fiaddl
sbb
rcr
test
sti
ret
test
icebp
orb
icebp
sub
push
call
push
inc
or
int
xor
cmp
add
or
mov
pop
sahf
mov
pop
cmp
mov
cs
and
sub
stos
inc
sbb
pop
push
mov
std
or
pop
hlt
cmp
mov
or
mov
shll
cmp
and
xchg
xchg
movb
scas
sub
sub
aam
bound
pop
std
lock
pop
add
mov
jbe
dec
adc
roll
sbb
dec
sbb
pop
push
sub
cmpsb
mov
in
fistpl
dec
cmp
push
or
mov
imul
stc
xorb
mov
fs
data16
mov
xor
addb
out
rorb
enter
pop
push
cli
ss
iret
mov
andb
and
mov
and
pushf
dec
testb
dec
aas
push
sub
arpl
xchg
aaa
ds
ja
push
cmpsb
sub
xchg
or
mov
push
pop
daa
sbb
insl
inc
jns
stc
inc
sti
jb
push
pusha
fidivrl
pop
gs
mov
lahf
and
and
int
push
mov
inc
fistl
mov
je
adc
gs
sub
push
ds
aas
cmp
sbb
mov
sahf
and
fisubs
jbe
cmp
inc
cli
adc
cs
push
xor
lahf
mov
into
dec
xchg
mov
xchg
je
cld
adc
push
cld
cmp
sbb
out
xor
iret
xor
daa
xor
cmp
dec
jge
or
movb
sti
fsub
icebp
es
mov
into
icebp
jae
or
mov
and
popa
xor
jno
or
cltd
neg
test
les
xor
cltd
daa
clc
add
imul
in
das
dec
lea
cmp
jmp
xor
inc
pop
mov
xchg
mov
fsubrl
or
ja
adc
es
xor
leave
insb
nop
jl
and
pusha
neg
test
ss
xchg
or
lea
addr16
inc
pusha
pop
out
pusha
sbb
arpl
and
hlt
iret
aad
mov
jb
je
inc
and
cld
mov
mov
sbb
sti
xchg
add
iret
xor
pop
pop
in
das
clc
mov
mov
xchg
and
inc
pop
cmp
mov
orl
xchg
or
scas
cmp
add
add
cmp
adc
mov
movsl
in
mov
cli
int
ja
sbb
clc
jecxz
inc
push
iret
pop
jnp
es
movsb
add
lea
jmp
push
xor
push
sbb
push
sub
or
sub
popf
dec
int
fbld
or
into
rorl
mov
sbb
movsl
and
mov
aas
sahf
xor
sbbb
xor
outsb
popa
adc
daa
out
sbb
xlat
pop
popf
jl
mov
jle
cmp
and
xchg
ss
std
pop
je
xchg
movsl
lahf
mulb
sub
jbe
test
cmp
sbb
notb
fisttpll
pushl
cmp
or
mov
addr16
inc
mov
and
sbb
scas
lods
pop
aad
stc
xchg
adc
cmp
xchg
aad
sbb
call
lret
mov
cmp
push
pushf
xchg
rcrl
notb
daa
adc
mov
ret
bound
fistpl
dec
push
out
lcall
sbb
dec
mov
push
fs
sahf
lahf
stos
push
das
xor
fs
inc
loope
into
cltd
inc
out
aaa
int
sbb
lret
xchg
xchg
ss
nop
xor
mov
pop
call
inc
roll
pop
mov
sbb
mov
dec
sub
test
sbb
xor
sbb
sbb
add
iret
or
jnp
pop
cmp
daa
sbb
cmp
lea
sbb
adc
daa
gs
iret
js
addr16
jge
add
cli
bound
jne
cwtl
dec
cld
mov
mov
pop
inc
daa
or
loope
mov
scas
in
icebp
dec
pop
sbb
sub
push
out
sbb
and
pushf
int
jmp
int
dec
aas
in
xchg
dec
dec
pop
and
ret
and
inc
adc
cmp
in
and
lock
imul
dec
or
sub
push
and
in
push
push
jle
or
push
scas
fldt
ret
dec
xor
and
and
mov
push
popf
cmp
hlt
mov
fistps
pop
addb
sbb
inc
mov
xchg
or
ret
cmp
mov
jne
or
cmp
or
xor
test
das
sub
and
sbb
movsb
add
into
mov
adc
jne
das
mov
aas
lea
das
mov
pop
cmp
pop
xor
adc
xor
jge
mov
cltd
popf
mov
hlt
test
adc
cs
sbb
mov
sbb
addr16
or
in
push
adc
cli
or
pushf
adc
mov
sub
or
insb
in
sahf
icebp
into
xor
sbb
lea
pushf
dec
or
ret
dec
aad
or
lcall
pop
xchg
addl
push
push
repnz
movsb
jae
jo
or
inc
pop
dec
and
dec
iret
mov
xchg
mov
sub
inc
adc
xor
loopne
xor
push
inc
testl
les
inc
sahf
cli
xor
cmp
inc
mov
fbstp
mov
mov
mov
dec
cmp
sbb
xor
mov
aaa
fldl
cmpsl
or
jge
test
mov
dec
testl
adc
mov
sahf
push
cmp
mov
push
ficoms
test
or
adc
test
or
sub
xor
xor
test
in
ret
cmp
cmp
push
hlt
fcompl
cmp
xor
and
fmul
mov
stc
and
sbbb
and
jbe
xor
push
loope
daa
xchg
fs
cmc
and
xchg
std
lock
add
aam
push
sub
sbb
gs
mov
adcb
stc
lea
add
mov
xor
std
ds
jmp
cmc
aas
scas
jl
pushf
lahf
repnz
dec
fs
lcall
sub
xrelease
fs
pop
adc
call
test
or
adc
lods
inc
fs
gs
loopne
or
xchg
dec
sbb
sbb
push
and
setne
test
jle
int3
dec
push
jg
jp
lds
pusha
inc
push
and
xorb
adc
repnz
imull
mov
insb
sbb
ljmp
movsl
rcrl
sahf
lods
xchg
out
fsubr
fwait
xlat
shlb
jo
pop
aad
pushf
outsl
or
loopne
sbb
and
sub
mov
incb
ss
call
lahf
repnz
popf
lods
pop
in
mov
add
xchg
xchg
xchg
lea
outsl
jg
dec
into
mov
pop
xchg
leave
cmpsl
test
bound
ficoms
dec
aas
and
std
lcall
data16
xor
jno
cwtl
mov
popf
and
xor
sbb
aaa
xor
inc
push
sub
xchg
mov
mov
mov
in
pop
shl
xor
shll
add
jbe
rcr
aad
das
jle
mov
pop
test
mov
popa
movsb
adc
pop
dec
and
imul
out
mov
lcall
push
movsb
pushf
xchg
daa
std
mov
lds
add
or
jb
inc
xor
and
scas
mov
pusha
lcall
mov
cmp
xchg
fistps
fcoml
and
int3
test
pushf
cmp
mov
mov
test
mov
scas
fldl
push
rcr
xchg
mov
out
add
dec
xchg
out
add
rorb
mov
lods
cwtl
cmp
xor
cmp
lods
xor
jb
std
xchg
leave
outsl
test
or
dec
test
js
cld
clc
pop
mov
or
insb
lea
pop
bound
lods
enter
iret
enter
cmp
jl
test
or
into
push
dec
lea
sbb
sbb
inc
mov
sbb
add
mov
or
push
pushf
and
test
fisubrs
std
and
scas
test
or
sbb
inc
jle
or
test
inc
dec
and
inc
insl
inc
add
test
push
cmp
pop
push
test
or
sahf
push
sub
add
pop
or
insl
cmp
test
fs
inc
pop
push
insb
or
sbb
inc
mov
fisttpll
mov
sbb
add
orb
out
push
jge
inc
pushf
mov
mov
push
insb
nop
add
inc
popl
cmp
sbb
inc
pop
cmp
pushf
test
or
or
movsb
add
filds
mov
js
mov
hlt
adc
add
cmp
mov
mov
call
inc
inc
dec
std
jl
das
sbbb
dec
stos
dec
jno
mov
sbb
jl
subb
loopne
jb
pop
cmp
roll
cmp
mov
out
and
pop
rcr
std
add
cli
sahf
jb
lds
adc
insl
mov
rcrb
faddl
inc
dec
in
testl
mov
or
add
lea
pop
pop
dec
add
ljmp
sbb
int3
clc
test
jns
jge
lods
negl
cmp
jl
or
lea
xchg
inc
fstpl
push
mov
aam
or
mov
fcomps
adc
pop
cld
adc
scas
add
lea
lea
lds
int3
sbb
pop
inc
sbb
jecxz
insl
das
repnz
jbe
xchg
jae
test
out
outsb
int3
and
sbb
scas
clc
ds
jle
lea
add
and
lea
sub
jns
pop
pop
mov
shlb
add
adc
ss
dec
mov
jno
sbb
daa
lods
sbb
lods
xor
add
lea
pop
dec
sub
dec
daa
push
jmp
dec
push
sbb
icebp
int
mov
or
cltd
jle
jge
gs
push
dec
fsubrl
sahf
lods
dec
fadds
add
movsb
dec
xor
xchg
je
xor
mov
sbb
xchg
add
and
xor
psrad
or
lea
scas
popf
sbb
jb
and
add
push
test
mov
pusha
in
inc
dec
xchg
popl
lahf
gs
pop
pushf
push
xchg
lea
insb
lods
ss
movsb
and
push
sub
xchg
mov
lcall
pop
pop
jl
pop
mov
inc
in
inc
repnz
int3
test
pop
fldl2t
daa
and
lea
lods
mov
jg
cmp
add
cs
int3
or
rcrl
das
cwtl
cld
and
inc
adc
cld
cmp
ss
sbb
dec
fcompl
mov
jle
fsubrl
xchg
nop
clc
pop
stc
dec
lods
dec
jl
int3
es
lea
fcompl
and
mov
dec
dec
lea
lods
dec
or
pop
dec
mov
insl
dec
lahf
sbb
jg
push
xor
xchg
pop
xchg
pusha
mov
fcompl
push
incb
das
mov
test
dec
push
pop
out
fs
fistpll
ret
cmp
push
sbb
adc
dec
push
lea
and
add
stos
lods
insb
std
push
fdivrl
xchg
fmul
nop
mov
inc
cmp
and
pushf
add
sbb
jl
fsubs
pop
sbb
pop
lea
outsl
inc
xchg
mov
movsb
sub
loopne
pop
xor
or
lahf
cltd
jl
jle
sub
mov
pushf
out
iret
lret
cmp
sbb
fisttpll
adc
cmp
jo
or
jns
xor
pop
in
loop
jecxz
dec
pop
xor
test
sub
shll
pop
sub
int
push
sub
inc
add
sub
cmp
sub
mov
daa
std
pop
push
inc
mov
and
seto
or
pop
sbb
mov
gs
jl
lea
xchg
inc
lea
ds
int3
lea
popf
push
dec
fcom
sbb
and
pop
push
sahf
xchg
sub
inc
jle
lret
and
cmp
or
cmp
inc
pop
lea
xchg
lds
mov
inc
pop
daa
in
cmc
subl
outsl
dec
test
pop
jo
or
sbb
mov
mov
sub
shll
or
mov
xor
add
cmp
test
fbstp
iret
push
into
mov
mov
cmp
aam
and
popf
sub
insb
mov
pop
mov
sbb
or
lahf
clc
pop
pop
mov
mov
adc
xor
repz
xchg
jl
mov
pop
ret
popf
insl
decb
mov
and
pop
mov
std
in
push
lea
pushf
les
sub
xchg
sahf
sarb
rcr
xchg
lea
sub
inc
push
cltd
les
mov
lds
push
insl
enter
xchg
pop
arpl
sub
popf
cmp
mov
sbb
int
push
and
cmp
out
jg
dec
mov
pop
inc
adc
clc
pop
mov
sub
push
fists
push
pop
mov
lea
pop
fistps
sbb
out
cmp
adc
adc
int
and
ds
inc
adc
sar
or
std
fists
ljmp
push
mov
pop
pushf
clc
sub
jecxz
in
jno
sub
pop
pop
sub
outsl
loopne
and
pushf
les
xor
sahf
in
insl
add
es
lods
out
scas
call
jl
mov
das
dec
inc
mov
jecxz
dec
popf
sub
adc
jle
cs
lods
sbb
or
lock
cs
nopl
lock
xchg
lea
aad
sub
or
hlt
adc
jb
xor
adc
xchg
lea
dec
mov
dec
mov
ret
lahf
jo
jp
xchg
adc
add
pop
jge
mov
adc
out
daa
out
xchg
inc
addl
mov
out
pop
lcall
sbb
lea
dec
cld
pop
scas
add
lahf
push
insb
scas
add
pop
mov
pop
sbb
das
or
shl
std
jns
pop
dec
fmull
lds
shrb
xchg
lea
arpl
cmpsb
fcoml
dec
dec
sub
sub
insl
push
stc
rorb
lcall
sub
das
ds
adc
int
psubusb
orb
das
mov
xchg
in
inc
sbb
fldl
push
outsb
pop
lea
scas
push
push
add
mov
in
scas
pop
xchg
lea
test
mov
outsl
in
iret
or
lea
ss
stos
fsubrl
cmp
out
inc
sbb
push
sub
out
scas
sub
testb
es
xchg
sub
mov
add
cld
mov
add
ljmp
lea
gs
std
xchg
sbb
pop
sbb
int
push
push
sbb
or
dec
lret
pop
adc
dec
pop
push
cmp
lea
jb
or
cmp
mov
std
notb
cmp
inc
fistps
frstor
cmp
or
les
shrd
jno
in
mov
mov
into
jae
sbbl
fistps
std
pop
push
inc
inc
lea
sahf
sub
push
mov
and
sahf
sbb
cmc
sub
pop
in
sbb
mov
les
push
pop
dec
dec
lea
adc
ss
andb
jg
pop
in
ss
dec
inc
arpl
mov
pop
push
push
cwtl
scas
jecxz
in
ss
dec
pop
fistpl
jle
pop
mov
pop
cltd
jl
pop
out
cmp
sbb
mov
inc
fldl
jecxz
mov
mov
ds
fistpl
mov
mov
cld
test
test
sahf
and
xor
xchg
jl
popa
out
iret
adc
jge
inc
aad
ret
and
and
cli
mov
outsl
push
or
jecxz
xchg
loopne
cmp
es
insl
and
fsubrl
pop
das
and
stc
cld
mov
inc
out
iret
ds
into
out
xor
out
daa
lods
lea
sbb
cmp
or
mov
icebp
or
inc
mov
in
and
or
adc
xchg
jns
lea
lahf
outsb
xchg
jl
jge
iret
lcall
and
sahf
imul
sub
int
xor
inc
ja
push
cmp
faddl
mov
pop
and
cs
lea
sahf
test
sub
mov
cmc
mov
sbb
adc
pop
xchg
outsl
subb
add
jl
lea
jge
inc
aas
aas
lods
nop
adc
cmp
es
pop
xchg
ffree
lea
pop
dec
insl
xchg
mov
sub
mov
pop
dec
sub
lahf
push
and
in
pushf
outsl
pop
ret
cltd
cld
dec
sub
lret
out
mov
dec
pushf
lea
mov
mov
xchg
inc
push
pop
mov
xchg
mov
or
das
movsb
movsb
mov
lahf
lock
pop
insb
dec
and
mov
sbb
mov
test
mov
in
and
lea
mov
jecxz
and
and
mov
sbb
test
jl
fsubs
lods
dec
std
je
testb
outsb
cmc
subl
lea
jmp
pop
into
ss
sub
add
push
mov
insl
sbbb
inc
cmp
subl
lea
and
cs
adc
int3
mov
movsb
lahf
aaa
mov
cmp
xchg
and
sbb
cs
lods
inc
les
mov
lahf
cmc
mov
shr
sahf
jns
mov
add
xor
add
pop
lahf
insb
lds
and
cld
clc
pop
sub
mov
sub
pop
jg
xchg
cld
inc
fiadds
cltd
aas
and
sub
insl
and
lods
sbb
das
mov
jl
pop
jle
lods
lea
mov
inc
and
adc
das
in
shrb
das
in
jge
out
xchg
and
js
insl
sub
inc
mov
xor
inc
inc
int3
mov
sarl
inc
es
pop
cmpsb
and
imul
loopne
js
lods
add
mov
aad
adc
inc
ret
mov
ds
mov
iret
lds
hlt
mov
inc
or
jl
pop
push
cmp
and
int
cmpsl
rcrb
sbbl
mov
out
mov
rorb
adc
mov
add
xchg
jmp
in
sub
adc
inc
jecxz
insb
inc
cmp
sbb
cmovp
lods
and
ret
dec
pop
aas
mov
sbb
jle
push
pop
pop
mov
fucomip
sbb
fstpl
pop
adc
test
sbb
mov
fnstcw
lds
cld
mov
sbb
rorb
ret
insb
sub
xchg
cmp
pop
xchg
jecxz
insb
fwait
cmp
sbb
scas
es
pop
push
mov
add
mov
sbb
pop
sbb
jl
mov
inc
jle
inc
outsl
mov
pop
jl
cmp
fdivrl
cltd
xorb
popf
dec
test
das
cld
and
ds
pop
lea
test
pop
dec
fistpll
inc
pop
xchg
js
sbb
sahf
hlt
adc
hlt
inc
jge
pop
or
js
cmp
stos
pop
into
inc
mov
shlb
je
pop
push
pop
mov
test
lret
inc
test
or
mov
sbb
scas
push
ret
sahf
mov
fildll
add
mov
test
jl
cmp
fcompl
cmp
or
cmp
jl
mov
dec
sbb
je
cmp
jno
in
movsb
xor
fidivs
mov
loop
pop
and
inc
inc
repnz
lahf
test
add
inc
jle
add
fcoml
pop
out
mov
insb
add
push
lock
test
pop
lea
mov
push
sub
sbb
cld
test
pop
test
sbb
frstor
iret
outsl
push
sub
mov
js
inc
lea
pop
pop
mov
mov
addr16
cmp
filds
jb
pop
cwtl
jg
int3
sbb
daa
inc
mov
addl
sbb
test
jl
dec
pop
pop
setb
push
push
pop
outsl
aas
mov
mov
cs
cmpl
adc
and
dec
notl
xchg
test
inc
mov
mov
nop
xchg
out
push
mov
inc
popf
fnstcw
inc
popl
xchg
out
mov
scas
inc
filds
inc
cmp
cwtl
mov
test
pop
int
pop
inc
inc
pop
mov
pop
lret
fistpll
jle
cmp
add
pop
dec
cmp
mov
pop
lea
xchg
jb
dec
in
das
es
out
push
sbbl
test
pop
jecxz
outsb
inc
mov
sub
movsb
popa
dec
push
cltd
pop
ret
mov
pop
stos
inc
mov
mov
push
inc
jge
mov
dec
dec
js
lcall
add
cwtl
dec
or
fs
ljmp
nop
lret
dec
push
add
push
mov
pop
pop
sub
mov
fldenv
add
pop
cmp
aas
sbb
cmpsl
fucom
std
inc
or
sbb
mov
push
insb
sub
mov
popf
cld
sbb
xor
pop
mov
push
jle
mov
aas
scas
es
jge
filds
sbb
dec
mov
cmp
in
push
mov
sbb
pop
sarl
push
pusha
cmp
mov
mov
cld
mov
js
sbb
in
push
aas
cmp
pop
sbb
sbb
or
je
inc
std
nop
sbbl
xchg
cld
mov
adc
lods
cmp
sbb
jb
lock
test
xchg
pushf
adc
sub
ret
ja
sub
add
and
or
mov
sub
adcl
inc
pushf
mov
lods
sub
sbb
sub
xor
daa
cmp
cmp
sub
inc
mov
sbb
dec
push
je
push
pop
pop
loope
cmp
sub
insb
jo
mov
cld
js,pt
jl
or
mov
sub
mov
sbb
cwtl
pushf
je
mov
cmp
mov
dec
mov
sub
shlb
mov
or
pop
and
and
int
mov
mov
test
mov
inc
xchg
fldl
cmpb
dec
hlt
jl
cld
mov
or
pop
and
cld
popa
sbb
add
fucomip
std
mov
sahf
push
loope
in
pusha
jl
cs
add
add
or
mov
mov
insl
arpl
test
iret
test
subl
shr
push
sub
pusha
push
ret
mov
into
jl
jecxz
mov
sub
scas
and
into
or
fists
add
mov
or
or
inc
pop
pop
push
loop
mov
popf
arpl
bound
inc
push
in
out
mov
nop
inc
das
inc
das
and
daa
mov
nop
mov
stos
mov
std
enter
das
shlb
mov
dec
cmp
mov
sbb
or
sub
aas
push
pop
pop
pusha
ds
std
scas
mov
or
xor
cmp
bound
mov
call
push
loopne
push
lock
sar
popf
dec
sbb
and
jle
mov
dec
or
sub
mov
add
and
or
popa
mov
int
and
data16
int
mov
pusha
jbe
xchg
adc
cld
int
jg
fmull
xor
add
xchg
das
dec
int
loope
inc
mov
cltd
mov
sub
nop
jne
and
popf
sbbb
dec
fsub
jp
aas
sahf
les
or
push
hlt
adc
mov
shll
add
cmpsb
dec
jno
xlat
sub
inc
push
aas
sahf
add
xchg
jle
and
lahf
jl
cmp
mov
cmp
or
or
insb
adc
push
mov
inc
movsb
faddl
test
aad
pop
dec
adc
cwtl
shrb
popl
ljmp
outsl
subb
push
xchg
pop
and
outsl
add
adc
or
mov
dec
addl
int
mov
cmp
cmp
add
int
mov
call
dec
in
dec
rclb
push
xchg
lods
or
fcoml
push
and
ret
fildll
adc
xchg
dec
rcrl
in
pop
pop
xchg
sbb
push
fcompl
dec
push
adc
xchg
inc
cmp
outsb
dec
ficompl
dec
gs
dec
cmp
and
in
dec
pushf
pop
clc
or
pop
js
hlt
int
adc
fcompl
scas
dec
ficompl
out
lahf
iret
mov
inc
adc
cmp
stos
test
xor
fdivrl
pop
mov
lcall
cld
jg
mov
std
sub
pop
xchg
dec
ljmp
fadd
jae
push
push
push
push
mov
and
and
jl
sbb
xchg
jno
adc
xor
in
add
pop
cmpsl
xor
mov
xchg
xchg
dec
mov
mov
dec
push
pushf
int3
xor
add
cmp
sbb
pop
pop
fsubl
pop
or
lds
ficompl
jecxz
sbb
mov
adc
and
and
movsb
lods
scas
pop
jge
cmp
and
xchg
insl
and
outsb
enter
pop
das
iret
std
iret
inc
fcmovne
and
jb
insb
adc
mov
cmp
pop
clc
push
dec
xor
mov
cmp
and
cmp
pop
push
dec
pushf
mov
dec
addb
cli
adc
cld
adc
repz
faddl
mov
bound
dec
push
sar
mov
cmp
cmp
mov
in
push
dec
insl
mov
dec
cld
nop
jg
xchg
cmp
scas
mov
xchg
js
pop
or
jbe
mov
lea
push
dec
cld
fistpll
sub
sahf
sub
pop
or
hlt
jl
mov
push
jl
inc
das
pop
jno
rcrl
dec
pop
lds
repz
xchg
jnp
inc
pop
outsl
jge
pop
mov
inc
mov
dec
push
push
xchg
test
and
stos
mov
in
xchg
pushf
mov
inc
pop
pusha
pushf
jge
push
out
push
mov
cld
add
mov
inc
imul
add
mov
fdiv
iret
insl
fs
lcall
mov
movsl
mov
fadd
je
jl
notl
add
push
xlat
dec
lods
pop
mov
enter
flds
hlt
mov
sbb
insb
xor
jnp
shrl
lahf
jl
cmp
movl
and
jl
add
fcompl
aas
pushf
jo
pushf
out
shll
lcall
mov
ja
mov
test
dec
push
es
popf
lcall
lea
out
inc
outsl
je
lods
clc
push
in
pop
cld
js
lods
mov
mov
push
scas
adc
pushf
xchg
out
pop
pop
sbb
scas
shrb
adc
bswap
cmp
pusha
cs
xchg
push
and
dec
int3
cmpb
pop
lea
insb
adc
aaa
dec
lock
out
int3
mov
lock
int3
adc
or
pop
dec
roll
insb
add
subl
sahf
cmpsl
xorl
dec
lods
adc
pop
jp
outsl
push
dec
xchg
jle
lea
and
orl
and
int
add
sub
xor
mov
shr
out
out
aad
push
mov
mov
enter
jle
aas
fcompl
pop
dec
scas
pop
pushf
cmc
movsb
adc
sbb
push
jg
lods
inc
pushf
scas
dec
sahf
push
adc
lods
addr16
es
lidtl
test
cwtl
leave
outsb
sub
enter
mov
add
and
fwait
sbb
pop
jb
dec
adc
jne
decb
std
cmp
int3
dec
es
jp
iret
mov
mov
sub
inc
cmp
sti
mov
cld
lods
popf
xor
sub
pop
inc
mov
jne
mov
test
and
movsb
popl
xlat
push
pop
fisttps
movsb
mov
mov
inc
cld
add
xchg
test
jl
mov
pushf
push
jo
loop
dec
out
sbb
mov
pop
mov
insb
jle
jb
xchg
pop
sub
push
lods
dec
out
mov
adc
pushf
enter
or
pop
lods
adc
pushf
adc
mov
pop
push
cmp
fistpll
or
leave
adc
int
push
mov
xlat
mov
in
sti
xor
push
movsb
mov
cld
dec
popa
inc
xchg
mov
aas
jne
fwait
es
int
das
sub
jge
lds
int
cmp
aad
repnz
pushf
shlb
sysret
fstps
or
sbb
pop
ja
mov
or
mov
outsl
add
mov
aad
rolb
pushf
or
jg
pop
mov
cwtl
aas
add
or
lods
mov
insb
xor
add
lds
lea
mov
aad
or
xorl
outsl
aad
jle
mov
jle
cmp
mov
mov
cld
ret
fldl
xor
sub
cs
rorb
test
jno
into
adc
insb
hlt
testl
insl
or
mov
iret
fldl
xchg
dec
dec
test
fadds
add
ljmp
fs
pop
dec
mov
cld
mov
lea
pushf
cmc
pop
sub
xchg
leave
mov
pushf
cmp
push
and
lahf
push
xor
std
sub
pop
loopne
or
andl
adc
in
fstpt
sbb
jmp
xchg
pop
stos
add
pop
adc
mov
sbb
or
ret
adc
int
sbb
push
mov
incl
sub
push
sahf
lds
or
cmp
test
push
adc
scas
ds
cmp
fdivl
jo
add
sbb
cmp
ds
dec
sbb
cmp
add
lods
xchg
in
mov
or
ror
shr
or
lret
imulb
cmp
mov
or
dec
jmp
out
mov
inc
mov
std
cmp
mov
andb
popf
mov
jg
scas
add
ret
cmp
jl
ds
xor
cwtl
pop
insl
jl
pop
jl
pop
mov
lret
cltd
pop
in
push
inc
iret
push
add
push
out
xor
adc
sahf
inc
pop
adc
test
and
in
es
in
lahf
push
inc
mov
lods
xchg
mov
mov
push
xchg
mov
adc
loopne
jb
es
pop
mov
roll
jns
dec
iret
add
xchg
sub
dec
pop
cmp
push
mov
cmpsb
popa
jle
aas
aas
jge
les
dec
sub
sbb
dec
and
lods
xor
cmp
testl
sti
xchg
pushf
subps
adc
add
or
and
shl
movl
test
adc
cmp
sbb
inc
enter
in
sbb
loopne
fsubl
into
xor
mov
xchg
in
les
jl
mov
push
sub
in
or
inc
loope
push
std
sub
or
rol
pop
and
jl
sub
pop
adc
and
mov
subl
push
insl
or
or
insb
mov
js
inc
sbb
cmp
loope
cld
and
mov
pop
jge
xor
inc
popf
insb
cmp
inc
xchg
fisubrs
dec
lcall
and
addl
sti
roll
push
xor
add
loope
jl
mov
cld
fs
mov
mov
in
popf
add
inc
dec
sahf
and
mov
test
js
stos
pushf
lahf
scas
jmp
mov
mov
push
cld
push
nop
or
test
xchg
insb
outsb
ret
inc
lock
lahf
lret
pop
push
leave
dec
cmovne
lahf
icebp
add
fiadds
add
adc
aas
xor
ss
test
into
das
dec
push
mov
fnstsw
mov
cmp
jl
adc
inc
in
pop
and
mov
xor
cld
cmp
cmp
pusha
adc
loope
out
mov
lds
test
push
xchg
push
popa
iret
sbb
mov
lea
lahf
ds
pop
adc
mov
and
in
adc
faddl
or
mov
dec
loope
dec
repz
cmp
int3
push
dec
jl
xor
pusha
mov
push
and
fwait
mov
je
inc
mov
cld
sbb
dec
add
mov
dec
inc
popf
dec
mov
lea
movsl
mov
lahf
inc
or
cmp
inc
stc
jle
lods
lea
jno
out
cmp
cmp
xchg
int
lahf
sahf
lods
jl
roll
mov
inc
lds
leave
lcall
mov
add
or
das
das
cmp
pop
cmp
push
adc
add
jo
inc
jge
inc
mov
mov
sub
or
mov
fstl
call
mov
loope
xchg
sbb
lahf
mov
cs
add
mov
xchg
xorb
push
xchg
cmp
push
or
orb
cmpsb
loopne
inc
pop
sub
scas
cmpb
mov
into
fldenv
fcoml
sahf
jo
pushl
sbb
add
pop
cld
insb
sahf
cmp
cmpsl
jl
les
andb
test
inc
mov
mov
adc
push
sub
shrd
cltd
cwtl
xchg
sbb
or
test
push
in
test
push
std
push
pop
jne
or
mov
loopne
push
xor
out
adc
and
lods
subl
fstpt
mov
mov
mov
mov
data16
cld
dec
test
bound
insb
jp
dec
into
xor
frstor
adc
jbe
insb
cmp
push
scas
test
xor
jmp
cmp
mov
dec
jg
insb
inc
out
push
cmpb
inc
push
pop
mov
dec
cmp
inc
insb
cmp
std
mov
pop
cmp
adc
fs
mov
sahf
dec
insl
xchg
imul
setl
aas
sub
pop
lods
adc
dec
push
cmp
inc
pushf
loop
cmp
jle
dec
or
sbb
inc
add
bound
in
pop
mov
sub
mov
orl
scas
sbbb
cmp
xor
ljmp
pushf
pop
sub
std
inc
lahf
xchg
outsl
push
jle
adc
pop
sub
push
cld
pushf
pop
add
or
mov
jno
mov
fistpl
add
mov
fcmove
ds
faddl
arpl
dec
xor
iret
mov
movsb
lahf
iret
aas
stc
lcall
and
pop
jg
nop
and
mov
aas
mov
lea
fdivrl
inc
add
dec
inc
push
pop
mov
inc
movsl
enter
mov
rorl
jge
push
lods
xor
fisttps
pop
int3
fs
bound
mov
fs
rcrl
stc
jne
cmp
xrelease
into
pushf
out
push
popf
mov
pop
nop
adc
mov
data16
inc
dec
outsb
std
int3
jg
push
call
je
sub
sbb
dec
std
adc
sti
jl
dec
popf
mov
cmp
push
sarb
packsswb
push
and
pusha
in
push
inc
sub
fs
mov
es
ss
dec
mov
inc
pop
xor
aaa
fidivs
add
push
dec
daa
cwtl
xchg
lods
push
test
ja
xor
dec
bnd
out
inc
dec
add
xchg
fnstsw
mov
sbb
cmp
insl
mov
addr16
popl
int3
daa
arpl
notl
insb
int3
inc
and
add
add
and
popa
inc
rorl
sbb
sub
clc
ret
shll
xchg
cmp
or
scas
mov
push
ja
or
popf
xor
mov
sub
pop
sub
xor
fcompl
lea
add
loopne
aam
popf
and
sub
mov
jle
mov
pop
ljmp
fwait
into
or
in
push
jne
ds
add
mov
mov
enter
mov
push
dec
sbb
pop
inc
or
in
stos
mov
push
in
mov
rcl
cmp
popf
setl
add
mov
inc
or
xor
jl
cmp
leave
pop
ret
shll
faddl
and
cmp
cmp
lods
cmp
loope
fsubrl
push
and
pop
into
push
xor
popf
das
dec
inc
push
mov
pop
int
cmc
xchg
xlat
and
ret
adc
cld
mov
mov
jae
dec
jle,pn
lds
dec
push
ljmp
call
cmp
pop
out
aas
inc
dec
push
rolb
leave
outsb
sub
jg
dec
sub
sbb
dec
test
orb
cmp
sub
aad
mov
ficoms
bound
xor
pop
cmp
sub
std
mov
mov
inc
mov
aas
insb
icebp
sbb
push
jb
in
repz
int3
pop
ljmp
insl
sbb
lods
rorl
les
or
jge
lock
out
jg
xchg
mov
scas
cmp
arpl
lock
cmp
cwtl
mov
cmp
push
jle
lds
lea
or
and
scas
insb
mov
xchg
adc
arpl
decb
or
popa
stc
adc
jns,pn
jge
outsb
arpl
scas
dec
inc
jns
shlb
xor
or
aad
dec
das
adc
or
xchg
dec
jge
int
jle
mov
push
lods
pushf
pop
js
cwtl
ret
cli
lods
cli
and
movsl
add
test
sahf
sahf
cmpsl
sub
cld
in
push
aas
test
mov
scas
test
ss
out
das
ficoms
dec
mov
lods
jo
add
aas
and
std
popf
xor
js
std
sbb
push
test
punpckldq
fcompl
push
push
std
pushf
push
insb
mov
cwtl
shlb
lods
das
imul
nop
iret
push
dec
je
pop
xchg
jmp
inc
filds
pop
pop
sbb
xchg
adc
insl
popa
mov
add
or
xchg
or
push
sbb
lahf
inc
pusha
andps
cmpsl
fwait
dec
add
cmp
sub
pop
sbb
jb
push
fdivrl
mov
fs
cs
decl
out
jg
and
int
sbb
pop
pop
push
xor
or
mov
orb
out
sbb
jecxz
mov
ss
mov
loopne
add
pop
dec
pop
add
inc
insb
lods
and
es
in
or
cld
inc
add
mov
fmull
ror
add
mov
dec
movsb
jle
std
pop
jl
mov
cmp
dec
insl
jo
inc
mov
mov
jl
outsb
fs
adc
aad
adc
or
cs
inc
mov
mov
mov
sub
das
hlt
jns
insl
mov
mov
aas
and
sbb
mov
les
je
insb
push
fldl
xchg
mov
mov
mov
outsb
mov
push
jns
mov
dec
push
sub
inc
sbb
in
sahf
subb
aaa
xchg
test
ds
fsubrl
adc
cmp
mov
mov
popa
cmpsb
push
sub
add
popl
aaa
nop
and
or
out
popf
fs
adc
test
dec
lods
testl
inc
ds
out
mov
fsub
aas
pop
pop
adc
sbb
adc
scas
test
xor
jl
pusha
cmp
add
scas
dec
popf
std
in
dec
jp
xorb
pop
mov
cmp
dec
push
mov
fdivr
cwtl
sub
mov
or
jns
xchg
test
lds
xchg
cmp
pop
shl
mov
in
lea
adc
xor
flds
inc
push
sub
add
pop
test
int
add
dec
add
mov
inc
dec
xor
push
push
add
mov
push
mov
andb
mov
or
lahf
loope
mov
lahf
pushf
aas
lods
push
out
pop
sarb
adc
dec
into
lret
iret
nop
arpl
in
adc
mov
inc
sub
and
adc
jg
push
mov
sarl
lods
adc
insb
popa
jle
fwait
xlat
inc
out
xchg
in
ret
mov
nop
jl
subb
push
loop
lods
test
int3
std
jge
lea
adcb
pop
cld
fs
and
or
jl
sahf
leave
mov
mov
popa
pop
mov
adc
imul
pop
jg
xor
outsl
popf
cmp
adc
sub
mov
out
in
mov
jg
test
popf
jle
test
add
sub
sub
sbb
mov
sbb
xchg
sbb
fs
ja
fisubs
push
fmull
cwtl
popf
lea
ljmp
pushf
sar
adc
xor
pop
mov
add
mov
das
rol
sbb
dec
xchg
push
dec
push
int
sbb
aaa
or
add
lods
mov
push
outsl
and
inc
cwtl
mov
xlat
lock
fists
xchg
sub
fcompl
inc
cmp
push
sub
adc
ds
mov
jle
popa
push
dec
push
pop
pop
test
pop
fwait
cld
xorb
sub
mov
and
cmp
mov
sub
jnp
fisttps
push
pop
mov
dec
jl
jo
dec
popl
pop
mov
xchg
pop
sub
mov
xchg
js
xor
jecxz
addl
sbb
mov
and
lds
cmc
xchg
jecxz
pop
or
pop
jl
pop
nopl
pop
jle
js
jl
nop
and
mov
xchg
int
pushf
cmp
dec
dec
inc
andl
test
xchg
fimuls
dec
daa
mov
aas
clc
mov
dec
pop
jl
mov
lods
bound
dec
add
popf
ds
adc
cmpsb
push
jg
lods
sahf
dec
or
cmp
push
icebp
dec
push
int3
pop
add
sti
dec
dec
push
fs
shll
adcb
adc
adc
pop
or
mov
inc
scas
sbb
mov
xchg
out
ror
or
roll
push
sbb
icebp
mov
popf
xor
push
push
into
mov
loopne
mov
sti
push
in
dec
jl
popf
cmp
push
out
pop
lahf
push
popf
mov
nop
mov
pushf
mov
add
fstpl
sbb
lods
jnp
lret
inc
int3
jl
mov
xor
jo
mov
dec
pop
push
push
mov
xor
ja
fnstsw
push
ja
mov
ds
mov
xchg
ds
cwtl
xor
push
lcall
mov
sbbb
lahf
xor
sub
push
add
lahf
scas
or
jns
aaa
xchg
or
popf
lret
add
cmp
adc
sarb
sbb
int3
dec
mov
into
mov
cmp
aad
mull
inc
adc
jg
ds
lds
jecxz
dec
scas
lods
adc
mov
mov
movsb
add
cmpsb
inc
dec
pop
xor
dec
adc
pushf
into
adc
pop
cmp
adc
xor
insb
add
mov
add
add
push
cmp
aam
in
fistpll
xor
lods
inc
in
push
pop
ljmp
insb
add
mov
cmp
dec
movsl
mov
xchg
popf
mov
cmp
pushf
in
push
test
pop
int3
insl
sbb
repnz
dec
pushf
loop
cs
mov
pop
or
sahf
lods
sbbb
ss
push
pop
sbb
dec
push
adc
or
xchg
popf
mov
or
shlb
mov
daa
gs
push
xor
cs
mov
leave
ljmp
fcompl
jg
push
sarl
push
js
outsb
scas
clc
dec
and
push
cmp
insb
fs
lods
jne
subb
xchg
call
dec
in
jl
pop
inc
inc
cmp
mov
punpckhbw
ds
cld
movsb
jle
cli
mov
in
add
popf
je
in
adc
cmp
mov
int3
dec
lods
cwtl
inc
dec
hlt
pop
xor
cld
in
out
fimull
popa
pop
mov
add
xchg
pushf
test
mov
add
fisttpll
pop
in
aad
xchg
mov
mov
sbbb
rolb
gs
cmpb
sbb
leave
mov
int
out
hlt
cwtl
movb
scas
iret
xchg
js
pushf
loope
iret
mov
fdivrl
fsubl
lock
insl
inc
das
xor
ret
xor
mov
in
cld
rcrb
outsl
jg
fs
mov
cmc
jnp
adc
shl
inc
add
mov
push
adc
test
mov
jo
fstpl
xor
jge
push
add
xor
push
sub
orb
rcr
mov
int3
loopne
or
fisttps
push
mov
fucomip
jb
and
test
inc
xchg
dec
jl
mov
sbb
out
push
mov
jnp
xor
movsl
sbbb
int3
inc
mov
or
pop
sbbb
call
mov
insb
pushf
lods
nop
pop
cwtl
pop
or
out
dec
aad
cld
into
imul
inc
dec
fmull
test
push
inc
xchg
mov
dec
jle
aaa
pop
push
cs
add
mov
pushf
pushf
mov
stos
inc
add
test
adc
outsb
push
lods
push
and
lret
push
cmp
pop
push
xor
inc
push
lods
and
test
ficoml
sbb
cmp
int3
aam
mov
cld
jecxz
scas
leave
add
orl
push
test
cmpb
and
test
andb
scas
mov
bound
sub
test
ud2
std
xor
insb
std
jle
sahf
adc
mov
pop
fmull
push
fisttpll
sti
mov
xchg
sbb
loopne
sbb
mov
add
fsubr
mov
pop
pop
mov
xor
test
scas
dec
sahf
or
insl
cmp
jg
or
jp
ret
cmp
mov
and
mov
and
mov
sub
adc
test
fucomip
xchg
jo
ret
adc
iret
inc
repnz
pop
insb
cmp
lret
movsl
and
dec
jg
cmp
xor
xchg
dec
lods
dec
add
fildll
in
enter
sbb
mov
dec
out
pushf
mov
sbb
inc
adc
xor
sbb
or
mov
popf
out
pusha
push
sbb
cs
test
aas
fisubs
push
or
mov
in
jl
leave
and
insb
scas
int3
push
bound
mov
iret
rcrb
lea
dec
dec
push
ds
jb
lods
jbe
test
fnstsw
movsl
sbbl
mov
jg
pop
rcrb
xor
pushf
dec
mov
adc
scas
gs
pop
pop
sub
inc
sahf
aad
popf
enter
jge
sbb
xor
insb
mov
mov
scas
ss
mov
inc
dec
int
pop
out
mov
cmp
in
xlat
ss
cld
pop
cmp
mov
xchg
mov
mov
leave
mov
popa
lea
pop
sbb
mov
push
or
insl
lea
mov
mov
xor
aad
mov
mov
loop
out
push
ds
nop
scas
mov
push
loope
mov
inc
shrb
int
cmpsl
add
adc
insb
fucomip
add
out
out
add
outsl
mov
mov
sub
push
push
inc
lods
arpl
fidivrs
out
gs
call
lods
sub
mov
pusha
mov
xchg
js
dec
xor
inc
sbb
sub
hlt
mov
lahf
imul
out
xchg
sub
into
and
mov
mov
mov
loop
inc
mov
mov
popa
popf
insl
sub
lahf
int3
sbb
imul
aam
int
dec
pop
mov
enter
add
icebp
subb
lods
insl
lods
inc
rorb
inc
push
add
int3
test
int
out
insl
add
fsubrl
adc
xchg
int
cmp
sub
mov
pushf
in
bound
cmp
cmp
sbb
jne
lahf
cmp
fcomps
inc
mov
cmp
mov
pop
push
dec
loopne
cli
into
mov
mov
mov
inc
cli
mov
pushf
hlt
popf
add
int3
pop
aad
inc
loopne
sbb
pop
ret
push
mov
mov
mov
mov
mov
sahf
gs
push
test
outsl
mov
aaa
sahf
cwtl
lahf
les
jl
scas
insl
ret
add
shld
pop
or
add
sbb
ds
xchg
fiaddl
jl
aam
add
mov
leave
in
iret
mov
xor
mov
push
filds
lahf
sub
push
test
cmovl
add
inc
std
shlb
push
scas
mov
pop
jns
aaa
dec
jl
fsubrl
into
adc
or
icebp
gs
mov
add
mov
ja
cwtl
leave
mov
add
int3
mov
int3
jp
popf
mov
fs
adc
jl
or
jge
push
cld
sub
sbb
push
mov
cmpb
add
and
popf
fs
push
or
pop
aas
sub
add
call
loop
mov
insl
cmp
je
les
push
insb
shll
imulb
insb
mov
fmul
lods
bound
int3
int
bound
int
or
leave
test
icebp
adc
dec
rolb
mov
dec
push
or
mov
lea
jg
cmp
push
push
into
lea
mov
add
add
sahf
fadds
pushf
jecxz
adc
call
cmc
jecxz
dec
sbb
insb
add
lahf
sbb
or
and
ret
sahf
lods
fwait
stos
pop
dec
packssdw
mov
xchg
fs
or
xchg
ret
dec
push
insl
mov
movsl
mov
jmp
jecxz
mov
sbb
dec
insb
mov
jg
pushf
jne
jl
gs
shlb
pop
out
movsl
inc
sarl
jle
jp
dec
sahf
push
push
mov
sub
divb
jle
pusha
test
rcrl
mov
daa
sahf
sarb
mov
sub
add
jns
push
inc
loopne
dec
int3
dec
repnz
pop
mov
ficomps
lock
movsl
nop
jb
insl
ficompl
popf
and
adc
push
or
mov
sbb
adc
out
mov
mov
mov
jge
imul
ror
mov
pop
jno
and
sar
ret
and
lods
daa
scas
cld
pop
dec
jb
mov
into
cld
std
insb
cld
fdivl
xor
loopne
stc
mov
lock
fcompl
lahf
mov
inc
sub
cmc
inc
int3
mov
cmpsb
jb
pushf
jl
clc
popf
push
lret
xor
cmc
push
test
or
in
ja
lods
scas
out
dec
add
add
mov
outsb
aas
scas
hlt
orb
lods
lds
and
les
lock
jle
pop
pop
mov
xor
or
ds
and
aam
add
scas
bound
cmp
pusha
sti
test
ds
xor
es
frstor
add
lods
adcl
pop
shrl
push
in
cmp
sbb
push
pushf
mov
call
xor
adc
mov
cltd
std
orb
xchg
pop
popf
or
pop
mov
adc
jl
dec
xor
sub
int
sbb
fs
test
das
movsb
and
sub
and
addl
mov
or
inc
mov
adc
mov
popf
xchg
push
lods
into
add
mov
scas
fbstp
mov
sarb
add
pop
dec
fmul
out
cli
pushf
in
sub
sahf
movhlps
clc
push
sahf
jg
int3
jns
popl
iret
movsb
cmp
cltd
fimuls
push
add
pop
sub
push
popf
es
mov
lock
xor
add
test
inc
int3
or
psubsb
lods
push
insb
fs
in
cltd
mov
fcoml
sub
outsb
std
test
in
pop
mov
sbb
int
iret
lods
sub
push
rolb
int
add
cmp
popl
jg
mov
xchg
mov
popf
fcomps
sahf
das
mov
sub
mov
pop
jbe
mov
fcompl
ds
jge
adc
mov
pop
adc
lock
sub
jns
sahf
mov
cmp
mov
mov
je
fsubl
loopne
sbb
outsl
sbb
inc
clc
jl
ficoms
sub
scas
call
test
aam
cld
insl
into
aas
popa
lds
mov
popf
ljmp
adc
xchg
cwtl
jp
push
loop
mov
cwtl
mov
pop
dec
lods
mov
xchg
test
leave
out
into
pop
loop
mov
cmp
mov
loope
and
das
dec
das
inc
std
ret
mov
xchg
lret
cmp
wbinvd
sbbb
push
repnz
decb
dec
mov
cltd
or
jl
cmp
or
mov
and
je
movsl
jl
mov
jle
inc
sbb
call
add
test
mov
cmp
in
pop
push
sub
gs
mov
int3
pop
insb
push
jp
pop
xchg
adc
and
call
push
mov
popf
cld
dec
popf
sbb
xor
mov
lods
fs
mov
cmpb
or
push
mov
inc
jl
fsubrs
fisubl
js
mov
sbb
push
mov
xor
ficoml
pop
and
sarl
shl
mov
popf
outsb
insb
insb
push
mov
mov
movsb
inc
push
pop
into
mov
mov
mov
pop
xchg
ds
fwait
cwtl
insb
sub
aam
jl
sbb
adc
test
jl
mul
inc
jecxz
mov
test
mov
lret
stos
jl
pushf
test
icebp
mov
dec
test
js
jp
or
leave
mov
push
mov
fwait
or
xor
je
sbb
cmp
aaa
mov
dec
push
or
fisubrs
sbb
add
cmp
popf
lea
adc
mov
arpl
into
cmp
int3
loopne
pop
lds
mov
pusha
xchg
je
mov
mov
cmp
pushf
xchg
test
xchg
ds
frstor
outsb
sub
aas
ss
lds
xor
int
fs
pop
dec
out
sbb
sbb
enter
add
lea
fistpll
lods
mov
fs
cltd
rorb
or
fmul
sub
xchg
pop
cmp
cli
inc
jl
lea
int3
jne
pop
mov
mov
lock
insb
add
insb
stos
fldl
dec
pop
sbb
pop
mov
adc
or
inc
inc
xchg
mov
add
xor
dec
push
dec
cmp
out
popf
inc
push
pop
stos
aas
sub
dec
push
xor
mov
movsb
jae
test
xchg
lea
dec
add
push
push
in
inc
int
insb
movsb
arpl
insb
mov
les
dec
cmp
mov
iret
mov
daa
cwtl
aad
movsb
and
ja
inc
xchg
out
and
and
xchg
out
mov
and
jne
cmp
mov
cltd
pop
jmp
xchg
shll
or
xor
mov
sub
push
rcll
les
cli
cmp
sub
inc
daa
cmc
lods
out
push
mov
stc
and
jmp
mov
shll
aad
push
loope
xchg
popa
add
sbb
xor
adcb
daa
dec
jne
mov
pusha
push
fcompl
icebp
and
mov
pop
js
cmpsl
xor
mov
sbb
inc
dec
test
lea
imul
ds
ds
and
mov
xorl
fisubrs
xchg
cmp
pop
in
int3
dec
ljmp
inc
shll
incb
mov
nop
xchg
push
nop
inc
sahf
addr16
int3
loop
mov
pop
push
out
es
dec
mov
inc
mov
cmpsb
mov
daa
push
pop
sub
and
xchg
popf
sti
das
mov
dec
fldenv
popf
bound
xor
mov
inc
lea
int3
gs
cwtl
jnp
in
popf
mov
lea
jae
sbb
popf
sbb
xchg
cltd
and
loope
mov
push
call
and
mov
outsl
cmp
addr16
popa
jl
daa
test
or
jo
pmullw
mov
push
je
lods
clc
jae
mov
loope
mov
and
mov
imul
cld
das
xor
aas
call
daa
jp
leave
sub
xchg
insb
rorl
mov
movsb
fs
xchg
dec
mov
jge
pop
jb
mov
push
sub
or
test
int3
or
fcomps
popf
dec
aas
mov
ret
mov
push
cs
test
jge
cld
inc
jg
inc
mov
sti
mov
pop
enter
rorl
dec
mov
and
jl
movsb
aas
mov
iret
mov
pmulhw
in
setbe
cli
inc
cwtl
loope
aas
cmpsl
push
dec
ror
dec
out
mov
pop
mov
mov
mov
fadd
mov
out
or
scas
push
into
testl
mov
scas
mov
ljmp
sub
mov
in
dec
ficomps
mov
out
aas
scas
pop
gs
sub
movsl
nop
lahf
push
adc
rorb
xchg
inc
leave
mov
rol
sahf
sub
ljmp
and
out
in
jb
hlt
cmc
test
dec
push
fmul
pop
add
out
adc
sub
xchg
mov
mov
lret
mov
add
jnp
inc
cmpsl
xchg
mov
je
nop
int
pop
cltd
movsl
pop
adc
jae
clc
into
leave
jae
xor
inc
cld
mov
mov
mov
roll
dec
mov
or
scas
sub
test
mov
mov
jge
push
aas
xchg
aam
ds
stos
test
pop
psraw
jno
push
xor
mov
or
mov
cmc
pop
arpl
mov
sbb
push
jno
fstl
mov
jle
addr16
pop
dec
jg
sub
xor
sbb
pushf
lea
adc
or
adc
inc
pop
add
js
aam
fs
push
mulb
pop
jno
stc
subb
nop
mov
orb
out
hlt
in
inc
nop
mov
aad
adc
pushf
sbb
ss
scas
push
inc
push
mov
xor
jae
movsb
xchg
pop
mov
das
dec
add
enter
inc
push
jnp
lret
jl
pushf
loope
xorl
and
jno
jb
sbb
outsl
adc
pop
jne
mov
mov
push
inc
dec
mov
mov
cltd
and
int
and
mov
stos
pushf
fnstcw
push
test
lds
int
xchg
aaa
xchg
xor
fimuls
mov
loop
pop
xor
dec
loopne
pushf
mov
push
cmpsl
sub
mov
mov
pop
sbb
push
shrb
cmp
movsb
dec
hlt
pushf
jecxz
or
cld
mov
jbe
mov
xor
pushf
mov
mov
into
insb
sub
add
shrb
add
xor
jb
test
add
jb
cmp
fnstenv
sub
sbb
arpl
sub
dec
push
sti
mov
je
adc
adc
push
mov
mov
sub
in
inc
pop
mov
sub
and
sti
subb
mov
adc
dec
xor
test
mov
cmp
gs
dec
cmpsb
leave
test
pop
push
push
es
mov
sti
mov
orb
jae
mov
arpl
inc
mov
inc
cltd
xor
cmp
out
xor
mov
subb
push
xor
popa
mov
adc
gs
jno
and
aad
arpl
les
pop
dec
ds
imul
imul
mov
icebp
test
mov
adc
ds
orl
cwtl
maskmovq
notl
es
push
cld
xchg
fnstenv
dec
add
lcall
int
sub
lods
mov
cwtl
neg
lret
jnp
leave
lds
mov
nop
fstpl
mov
dec
push
or
movsl
mov
idivb
xchg
fisubrl
notl
in
cltd
test
mov
xchg
push
jmp
xchg
mov
shld
jns
mov
es
pop
xor
pop
retw
pop
test
and
shl
leave
js
dec
repz
mov
or
pop
inc
rcll
mov
mov
cmpsl
sbb
inc
ffreep
popf
pop
inc
popa
xchg
push
test
bound
nop
cltd
push
mov
test
dec
jl
mov
and
in
out
push
mov
out
sub
pushf
out
repnz
in
mov
and
popa
push
mov
test
bound
cmpl
jno
pop
movsb
cli
cmp
test
jmp
lea
sub
add
leave
sub
cwtl
xchg
in
loope
scas
test
xlat
push
mov
loopne
cwtl
mov
and
bound
mov
pop
dec
daa
scas
mov
sub
repnz
jmp
cwtl
and
fs
jne
mov
jecxz
pop
jns
mov
cmpsl
into
jns
scas
adcl
outsl
add
mov
fs
inc
aad
mov
sbb
xchg
lock
loope
mov
cld
cltd
mov
insb
mov
dec
scas
imulb
enter
imul
lods
xchg
push
into
out
in
pop
xchg
testb
xchg
mov
cmp
mov
lds
sub
mov
mov
cwtl
pop
insb
push
xor
inc
inc
out
les
xchg
popl
popf
pop
mov
sbb
std
and
imulb
sbb
xor
cmp
adc
int
divps
das
sbb
xorl
sub
cltd
or
pop
bound
pop
pop
push
and
push
push
inc
xchg
sbb
das
jbe
pusha
ljmp
mov
leave
xchg
and
inc
fisttpll
pop
jnp
sbb
mov
stos
jle
cwtl
mov
mov
int
pop
dec
iret
mov
push
test
sbb
jb
xchg
push
pop
js
lea
push
mov
lcall
mov
inc
imul
paddsw
and
loop
mov
jp
insl
ret
mov
push
mov
insl
xchg
push
shl
insb
cmp
push
scas
jb
xor
arpl
test
jns
pop
jo
dec
lods
push
icebp
ret
dec
add
and
loopne
inc
sub
enter
lods
jns
insb
gs
ds
sub
dec
popf
pop
jo
mov
pushf
out
xchg
xchg
xchg
addr16
fstpl
or
add
adc
fdivs
lcall
push
cmp
call
insl
mul
dec
mov
clc
mov
fnstsw
push
mov
ret
mov
cs
dec
loop
insl
mov
mov
pop
icebp
push
popf
jge
and
mov
or
mov
sub
cld
jl
dec
and
dec
mov
sbb
push
pushf
mov
pop
mov
data16
jno
dec
jp
pop
and
out
ret
stos
cltd
and
in
pop
outsb
push
mov
loopne
aas
sub
pop
jl
insl
push
mov
dec
mov
fcomi
cs
xor
mov
and
lea
jecxz
test
int
xchg
mov
xchg
dec
mov
pushf
xor
daa
and
or
cmp
or
mov
stos
leave
mov
dec
push
stc
push
out
adc
or
jp
cmp
mov
pop
inc
int
push
pop
int
les
subl
push
push
sub
xor
mov
mov
mov
js
ds
bound
loope
sub
mov
cmpsb
push
xchg
and
jmp
push
das
xor
pushf
push
sub
xor
loope
xchg
cmp
cmp
jmp
loopne
ja
sub
add
push
scas
inc
scas
pushf
popl
xchg
cmp
add
dec
cmpsb
jbe
cmpsl
push
inc
xchg
hlt
push
add
inc
aam
loop
cmp
add
dec
add
add
in
xor
fistl
in
cmp
mov
xor
repz
mov
sbb
shlb
in
pop
push
testl
lcall
cwtl
leave
int
sub
mov
push
cmp
adc
lret
out
mov
pop
cmp
mov
ret
outsl
stos
push
leave
rcll
dec
xchg
arpl
adc
iret
inc
or
mov
inc
sti
loope
movsb
mov
cmp
mov
sub
es
push
cli
movsb
mov
dec
sahf
mov
mov
dec
and
push
mov
ficompl
jle
fdivs
aaa
in
inc
cmpl
loope
mov
sahf
push
lods
lret
cmp
cmc
rolb
lods
xchg
push
sub
cmpsl
stos
and
outsl
pop
dec
dec
sub
adc
repz
into
sub
cwtl
adc
mov
cmp
imul
add
add
sub
mov
sti
repz
sub
inc
sar
pushf
dec
mov
outsl
insl
push
adc
xor
jecxz
movsb
mov
and
inc
in
cmp
sahf
lret
inc
pop
mov
jl
loopne
loope
cmpsl
leave
push
mulb
jne
xchg
hlt
and
clc
into
cmp
pushf
push
aaa
cld
add
dec
sub
xchg
repz
dec
pop
cmp
adc
xchg
inc
je
ret
pushf
xchg
inc
or
popf
sti
inc
mov
cmp
mov
cmp
sub
pop
les
ja
and
sub
mov
jecxz
lock
dec
into
stos
mov
int3
xchg
mov
inc
gs
dec
and
mov
sarl
cltd
dec
adc
in
movsl
cltd
sub
push
into
sbb
pushf
pop
push
mov
fdivr
mov
sti
mov
pop
inc
push
mov
shll
mov
add
mov
pushf
and
lods
and
es
lcall
xor
out
into
into
cmp
aas
or
and
jo
and
sub
jo
daa
scas
popa
sbb
test
int
mov
mov
ljmp
and
adc
xor
cwtl
mov
xchg
nop
scas
subb
movsb
xchg
pop
pop
aam
enter
rol
xchg
xchg
dec
and
js
mov
mov
stos
cmp
mov
int3
iret
inc
adc
sub
mov
hlt
and
and
mov
cmp
sbb
pop
into
insb
movsl
mov
lahf
movsl
jp
test
lods
sbb
jns
sub
push
shrb
inc
int3
movsb
push
jge
fnstsw
or
in
lret
pop
bound
cwtl
subl
nop
cmpsb
leave
mov
rcrl
jmp
push
pusha
pushf
mov
mov
addl
out
sbb
sub
loope
lods
ret
pop
xchg
dec
xor
inc
xor
jns
inc
xchg
das
sbb
mov
lea
push
ja
les
inc
dec
mov
fldcw
cmp
repnz
mov
in
push
lock
inc
mov
lret
jo
mov
test
lcall
lcall
or
aad
mov
sub
dec
call
cmp
inc
addb
leave
push
inc
jmp
fldt
cmp
xor
mov
movsb
mov
loope
test
dec
and
jp
loop
push
jmp
movsl
lea
sub
es
xlat
aas
add
mov
xchg
xchg
fisubl
in
sbbl
add
int3
push
xchg
jmp
rolb
push
push
scas
adc
loop
sub
lret
dec
ss
call
nop
sbb
cs
inc
sub
pop
nop
pop
fstl
mov
and
xchg
bound
mov
subl
movsb
jb
add
and
sub
in
shlb
inc
loope
sub
pop
in
out
movups
ds
xchg
mov
mov
in
les
dec
stc
jp
lcall
sahf
aas
inc
jb
leave
sahf
jae
dec
and
sbb
sub
or
lods
xor
mov
jge
cmp
inc
es
sub
fisubs
flds
out
jp
xchg
adcl
int
jo
mov
call
pop
and
inc
xchg
mov
mov
je
arpl
test
in
aaa
cmpl
cmp
xchg
icebp
clc
adc
fnstenv
push
adc
pusha
js
lcall
and
shlb
xor
sbb
mov
inc
mov
adc
inc
inc
into
cmp
das
cmp
call
sahf
mov
push
and
cmp
into
cmp
and
cmc
add
xor
pushf
stc
xchg
cmp
ljmp
sbb
aad
sbb
gs
xor
stos
mov
jmp
cwtl
aam
xchg
fnsave
xchg
lret
lods
scas
fistpll
iret
stos
mov
loop
shrl
jno
push
jb
mov
sub
dec
out
cltd
dec
mov
adc
xchg
fisttpl
call
lahf
pop
fiadds
pop
lds
jle
or
adc
dec
int
sub
call
aad
fildl
cmp
ds
mov
push
adc
int3
sub
xchg
sub
das
push
scas
js
nop
les
out
jle
aam
lret
mov
arpl
into
or
pop
and
inc
cwtl
ffree
sbb
inc
mov
mov
lods
xlat
in
cmp
xchg
mov
mov
dec
add
sub
stos
mov
pushf
mov
jae
jmp
pop
dec
push
mov
out
cmpl
popf
inc
fidivl
mov
mov
jns
xchg
cltd
jmp
aad
loopne
xchg
lds
or
pop
jae
xchg
mov
jnp
dec
addr16
loopne
xor
loopne
sub
shll
ret
popa
adc
jns
push
and
pushl
leave
add
xchg
pushaw
flds
icebp
or
test
inc
jbe
iret
xchg
dec
pushf
lods
pop
cmp
ficoml
scas
and
ss
dec
cmpsl
mov
xchg
dec
or
inc
je
jl
fsts
cwtl
in
add
mov
mov
sbb
cmp
xorb
pop
in
dec
dec
mov
push
test
push
les
jnp
xchg
xor
pusha
cmp
mov
int
imul
push
and
out
stos
lock
jg
mov
cwtl
add
cmp
dec
stos
mov
aad
jne
mov
pushf
jns
mov
in
inc
sub
or
cmpsl
sub
out
in
loop
and
mov
in
orb
jecxz
pop
int3
sub
push
pop
dec
into
cmpsl
inc
push
imul
test
orl
add
xchg
and
jmp
dec
imul
mov
add
jb
fildll
or
mov
nop
jmp
mov
mov
nop
or
icebp
xor
imul
xchg
push
into
daa
aam
fwait
sub
icebp
mov
das
push
inc
jno
dec
xchg
les
and
adc
aam
shlb
lahf
push
fisttpl
mov
fcomip
mov
and
mov
dec
add
cli
xchg
or
push
and
push
dec
stos
loope
mov
mov
lea
arpl
jmp
clc
fsubl
fisubrs
test
xlat
xor
shlb
push
dec
xchg
into
dec
in
inc
pop
sub
add
loope
cli
int
mov
leave
cmpsb
sub
rcrl
inc
ret
jle
jns
jle
mov
or
jl
cli
fsin
push
sbbl
loope
sbb
sub
inc
rcll
roll
fimuls
arpl
adc
pushf
int
mov
out
in
sarl
imul
dec
ljmp
in
sub
sub
testb
inc
mov
mov
addr16
mov
push
and
push
cmc
and
inc
repnz
xchg
fbstp
loope
mov
movsb
lret
cs
jl
lds
jmp
shrl
fnstcw
push
inc
je
enter
cmp
mov
mov
and
push
inc
repz
pushf
in
adc
repnz
lock
shrl
mov
fwait
popf
lahf
add
mov
adc
test
adc
cwtl
xchg
das
in
push
fimuls
pop
jle
imul
jge
int3
hlt
outsl
push
sub
mov
lret
in
leave
rsm
mov
dec
add
mov
pop
cmp
imul
jne
fsub
test
hlt
shll
rorb
mov
sahf
test
inc
test
and
nop
lods
lahf
jmp
cltd
xchg
mov
pop
gs
rorl
gs
outsl
pop
cld
adc
rcrl
ja
sbb
fsubrl
in
iret
sub
std
iret
ljmp
mov
dec
ss
xchg
lods
push
mov
adc
and
jmp
outsb
popa
push
or
fcomip
shll
mov
jle
addb
mov
mov
repz
dec
or
inc
aaa
jne
cmpsb
fmuls
call
imul
cmp
mov
scas
loop
inc
inc
and
jge
mov
xchg
mov
pop
testb
adc
shr
pop
sub
mov
inc
test
loope
cld
lfs
cmp
in
adc
mov
out
cltd
mov
leave
mov
arpl
movsl
insl
in
mov
mov
xchg
out
jle
add
shrb
fimuls
addr16
nop
shlb
xor
lods
aas
fldpi
popf
cmpl
shll
loop
outsl
cld
push
lods
jb
and
and
mov
sub
stos
mov
cmpsb
sub
or
scas
mov
icebp
adc
into
pushf
stos
cs
adc
mov
cli
fcompl
cmp
jne
popf
aaa
adc
dec
mov
clc
sbb
cmp
push
popf
test
lahf
int3
stc
icebp
inc
aad
mov
addr16
into
or
outsl
in
push
sahf
shll
scas
ds
pop
sbb
lcall
xchg
push
dec
adc
xchg
mov
ds
loop
lcall
push
pop
cmc
inc
xchg
jnp
mov
mov
clc
and
xchg
repnz
mov
inc
repz
dec
or
xchg
in
mov
test
in
and
aam
pop
dec
sub
sub
dec
mov
dec
iret
out
in
cmp
notl
push
jmp
mov
leave
jno
jns
pop
popa
test
xor
xor
lock
jge
xor
mov
inc
xor
adc
mov
mov
xor
faddp
inc
leave
pop
cmc
mov
inc
sub
leave
push
int3
xorb
lock
mov
sti
loope
scas
xorl
pushf
lds
pop
cltd
xchg
test
out
pusha
xchg
mov
hlt
mov
sbb
mov
sbb
xlat
fwait
ror
and
lods
mov
sub
jns
loop
xchg
inc
test
divb
sub
jle
mov
fs
arpl
outsl
jno
cld
mov
and
xchg
aaa
jns
and
scas
sub
xor
es
jmp
mov
mov
pop
push
dec
out
pop
xchg
pop
and
jno
into
sub
and
mov
ds
inc
jp
pop
jmp
aam
cmc
jbe
cmc
push
xchg
int3
xchg
cmp
nop
pop
mov
je
cmpsb
aam
shl
pop
adc
xchg
jecxz
test
xor
stos
es
add
hlt
fists
test
mov
or
sbb
xchg
and
dec
xchg
inc
test
lea
sub
nop
leave
sahf
adc
in
out
mov
cwtl
scas
dec
fisubl
cwtl
push
lds
dec
mov
jb
icebp
sub
dec
xor
arpl
sub
scas
mov
pop
movsl
dec
mov
jmp
shll
dec
in
pusha
xor
inc
jp
mov
lcall
fwait
mov
ret
aas
mov
jno
or
or
out
push
loope
pushf
int3
into
xchg
dec
xchg
or
mov
push
ret
xor
sbb
jb
rorb
es
ret
test
shll
mov
fisubrs
pop
pop
test
sub
imul
shlb
cs
gs
mov
pop
mov
sbb
xor
mov
out
iret
ficoml
xchg
js
xor
and
xor
mov
dec
mov
jecxz,pn
jns
dec
xlat
jb
jecxz
mov
mov
leave
inc
jno
dec
and
mov
jo
subb
mov
aam
aaa
and
xchg
push
stos
leave
push
iret
sti
xchg
cld
loope
loopne
xchg
cmpsl
loope
sub
xchg
je
out
in
pop
xor
lahf
and
adc
movsb
mov
clc
lea
and
pushf
or
call
icebp
in
aad
popf
push
clc
mov
bound
iret
dec
cli
repz
sub
mov
mov
sub
cmp
dec
sbbl
and
scas
or
shrb
cld
mov
dec
sub
sub
leave
inc
mov
cmp
mov
lds
mov
and
pop
inc
daa
lahf
inc
cmp
mov
les
inc
jb
dec
and
inc
pop
into
insl
and
lods
call
out
and
sub
push
es
das
fs
jecxz
popa
in
loope
dec
sub
fimuls
loopne
stc
cmc
push
int3
arpl
out
or
pop
dec
pop
jp
xchg
push
push
mov
nop
aad
mov
xor
mov
mov
outsb
push
sahf
into
mov
pop
inc
xorb
and
arpl
xor
xor
sti
mov
cmp
mov
lret
mov
jp
imul
xor
stos
inc
lahf
sbb
les
cmp
movsb
mov
arpl
jmp
stos
popf
mov
jbe
in
push
out
shrb
adc
insb
outsb
push
scas
jle
out
decl
sub
lahf
cmpsl
inc
into
ja
pop
jb
pusha
leave
mov
daa
dec
test
popa
into
mov
test
cvtps2pi
pop
scas
mov
fimuls
sahf
jb
cmp
testl
inc
pop
xchg
jne
mov
cmp
cmpsb
daa
cmpsb
push
inc
or
mov
in
insb
xor
clc
shll
jne
and
arpl
test
sub
mov
xor
jne
mov
in
xchg
xchg
jnp
adc
lret
int3
outsl
or
sarb
imull
mov
sub
xchg
inc
in
push
xchg
aas
stos
jne
fstl
lcall
aaa
lret
pusha
scas
dec
inc
out
pop
aas
mov
jl
clc
mov
lods
adc
dec
imul
nop
in
icebp
gs
repnz
rorb
repnz
mov
sti
jnp
xor
in
loope
stos
and
jne
mov
aaa
aad
in
inc
mov
dec
ret
xchg
push
lods
daa
popa
xor
icebp
push
sub
push
xor
xchg
cmp
cmp
ret
inc
lret
out
pop
in
cli
outsb
insl
rclb
test
insl
pop
fdivr
mov
inc
mov
jle
mov
mov
sahf
stc
pop
fnstsw
dec
mov
lods
cs
leave
loope
cwtl
jno
dec
push
rcrb
mov
dec
data16
clc
sub
inc
mov
leave
jge
jns
test
dec
mov
fnstsw
sbb
xchg
dec
int3
in
cs
fbld
shr
push
push
cwtl
fstps
sbb
aas
xor
popa
scas
pop
aam
xchg
popa
push
aaa
xlat
jg
xor
nop
pop
dec
inc
cwtl
cld
sahf
lock
inc
inc
sbb
in
mov
fisttps
cmp
xor
mov
and
icebp
ds
shrl
rorb
cmc
inc
push
test
pop
popf
mov
dec
mov
jmp
out
inc
mov
mov
sub
dec
push
pushf
cwtl
mov
and
data16
jbe
es
gs
xor
lret
cmp
jg
test
xlat
cmp
mov
sub
lds
mov
lods
add
push
lahf
cwtl
push
add
rcll
and
mov
call
ss
lods
sbb
cmp
insb
ficompl
jo
sti
stc
pop
test
sub
pop
sbb
xchg
lret
or
mov
jbe
xor
popf
sbb
push
out
sbb
cld
lds
cmp
pop
sbb
jge
pop
pusha
loopne
sub
std
mov
dec
ds
pop
pop
lock
ficoms
std
push
mov
cmp
jle
sbb
popa
sbb
sbb
jg
or
mov
inc
pop
iret
add
frstor
xchg
sbbb
jnp
pop
es
sub
cmp
adc
lods
pop
sbb
sahf
dec
sbbl
pop
pop
mov
std
sub
lcall
add
rcrb
cs
mov
inc
loope
pop
cmp
adc
lahf
fnstsw
xchg
fildll
inc
sbb
push
fimuls
int
cld
dec
pushf
cmp
or
test
call
add
sbb
cmp
es
lea
lds
std
ss
push
pop
inc
jle
push
pop
xchg
jle
cld
popf
cmp
mov
inc
pop
pop
fwait
inc
sbb
pop
lds
pop
jb
mov
mov
inc
cmp
and
add
dec
pushf
cmp
into
dec
push
fmull
fdivrl
inc
in
pop
cmp
dec
sbb
sbb
ds
pop
les
sahf
sub
fimuls
pop
ret
xchg
pop
les
mov
add
mov
mov
pop
jl
cmp
add
mov
aas
pushf
prefetchwt1
bound
insb
pop
xchg
fmull
popf
mov
pop
pop
adcb
jo,pt
pusha
pop
jle
fmull
jge
sub
fidivrs
lahf
ficoms
pop
rcr
add
dec
jg
mov
dec
mov
sbb
sbb
add
pushf
pop
lea
std
iret
jmp
sbb
jl
pop
fcompl
jge
sbb
pop
mov
adc
ds
pmaxsw
jle
roll
sbb
add
pop
les
loopne
sub
mov
daa
fistpll
cwtl
add
ret
les
sbb
pop
pop
adc
lahf
lds
popf
bound
xlat
rcr
mov
push
cmp
lods
jl
pop
lds
cmp
mov
dec
pop
pop
pop
xchg
rcrb
xchg
fisttpll
setl
incl
sbb
push
addl
mov
xchg
cs
insb
cmp
mov
popf
daa
jecxz
xchg
ffree
cmp
add
push
xchg
pushf
or
cld
mov
jle
inc
inc
pop
mov
sbb
mov
int
sbb
fbstp
sarl
decl
pop
mov
dec
pushf
cmp
xor
pop
sbb
mov
jge
pop
popf
xchg
vpunpckldq
insb
push
push
std
mov
pop
subb
sti
aaa
rorl
bound
std
cmp
notl
pop
mov
cmp
fdivr
dec
aam
int3
mov
add
push
mov
jge
fwait
add
loopne
mov
cld
pop
sub
jae
imul
add
orb
xor
push
js
sbb
fs
inc
sbb
jl
push
or
add
mov
dec
dec
sahf
mov
sbb
pop
in
jg
mov
or
or
xchg
pop
mov
dec
inc
out
out
cs
ret
push
nop
pop
mov
adc
and
lods
jns
mov
xor
mov
ds
leave
insl
inc
and
jecxz
es
mov
adc
adc
xor
push
pushf
push
popf
push
and
aam
xchg
sub
bound
bound
in
inc
sbb
inc
lahf
mov
jle
into
pop
push
into
push
dec
sbb
push
or
add
into
sbb
rorb
nop
scas
mov
mov
daa
adc
push
cld
fstl
rcr
sbb
pop
jnp
pop
mov
bound
mov
les
iret
xor
and
inc
out
cs
dec
push
cli
subb
cs
and
sub
cmp
lea
dec
cmp
cmp
or
loopne
insb
lcall
sahf
add
int
inc
mov
ds
out
dec
and
add
xchg
dec
jae
mov
jge
push
lea
out
push
sbb
adc
cli
or
pop
push
adc
pop
jle
ds
pop
sbb
sbb
popa
pusha
sbb
cmc
and
dec
je
mov
mov
mov
mov
mov
sbb
fsubrl
adc
jno
sbb
jno
sub
iret
sbb
jne
xor
and
dec
je
jns
xor
inc
test
fstpl
jge
cmp
jle
subl
test
fisubs
test
mov
or
adc
sbb
and
sub
xor
cmp
sub
fstpl
into
or
dec
sub
imul
inc
std
test
into
ret
cmp
push
xchg
movswl
test
add
mov
push
iret
mov
xor
cmp
lods
xchg
adc
cltd
jl
pop
inc
mov
sahf
lods
add
jecxz
pop
or
hlt
mov
dec
sbb
jl
pop
pop
mov
pop
mov
adc
mov
rcrb
fisttpll
sbb
adc
inc
in
pushf
pop
adc
int
jl
aam
sbb
fsub
shlb
loope
test
pop
jmp
js
in
cmp
dec
xchg
je
dec
mov
cmc
and
or
stc
inc
push
je
jl
jnp
shrb
aas
sub
inc
loop
jbe
mov
add
fldl
ds
movl
adc
add
or
dec
sbb
push
push
adc
adc
or
pop
inc
push
dec
shrb
pushf
fcompl
pushf
popa
sbb
dec
fmull
push
shr
pushf
push
push
sbb
and
pushf
pop
jl
fsubl
sbb
or
inc
fimuls
mov
inc
sub
cmp
push
ucomiss
test
inc
sub
mov
test
inc
ds
and
pop
or
aas
adc
jge
dec
lahf
adc
and
outsl
push
insl
aas
orb
sub
pop
sbb
and
hlt
inc
push
pushf
push
xor
inc
or
pop
or
in
add
mov
adcb
xchg
cmc
inc
mov
cmc
mov
std
pop
stc
lea
lods
or
mov
sbb
inc
es
cmp
xorl
and
adc
mov
xor
adc
pop
xor
xor
lret
and
andb
xor
movl
je
xchg
test
pop
mov
mov
push
adc
push
pushf
aas
jl
mov
jno
or
inc
lea
inc
sub
sub
xor
int
dec
pusha
sbb
pop
push
imul
test
mov
push
lea
mov
subb
adc
int
je
adc
or
pop
pusha
arpl
ds
fs
mov
push
and
insb
push
xchg
jo
cmc
sub
sub
xor
int
jle
cmpb
pop
and
pop
sbb
sbbb
imul
test
les
mov
aaa
sahf
mov
pushf
imul
inc
imul
dec
and
sbb
pop
or
inc
insb
mov
je
js
jl
addb
cmove
or
lea
test
fnstsw
mov
mov
into
inc
dec
test
pop
and
or
inc
jl
pushf
das
lods
and
push
jnp
mov
jne
ffree
sahf
fildl
inc
fucomip
lret
dec
test
into
jno
jg
cmp
fcompl
inc
mov
rcrb
fcompl
push
pop
push
rolb
and
fadd
pop
inc
push
push
pushf
and
cmp
out
decl
in
test
ds
cmc
or
out
int
fmuls
ret
pop
inc
lods
mov
in
jle
xchg
aad
inc
into
cmp
ret
flds
pushf
or
add
xchg
jl
fstl
pushf
addr16
int3
popa
jle
pmaxsw
repnz
mov
jmp
cmpb
lock
call
inc
int
dec
xor
in
jmp
or
push
dec
inc
add
lcall
int3
cmpb
pop
fwait
decb
in
test
in
add
sub
mov
scas
sbb
dec
les
fucom
fisttpll
jno
or
or
mov
mov
or
fmull
inc
push
insb
in
ds
les
adc
mov
in
daa
fnstsw
sti
mov
pop
jbe
lods
in
into
sub
push
loopne
mov
pop
sbb
mov
in
out
std
lcall
bound
dec
js
dec
les
iret
fstl
in
daa
cld
into
mov
mov
sbb
in
ja
pop
sub
mov
mov
jl
pusha
es
sub
in
mov
in
movsb
cmp
orb
push
adc
push
or
xor
loope
imul
inc
pop
in
add
loopne
fstpl
cmp
insl
sub
mov
xchg
add
sbb
pusha
inc
sub
and
js
dec
cmc
fimuls
fnstsw
inc
lea
imul
dec
les
daa
popf
fnstsw
dec
pop
mov
cmp
and
lahf
insl
fisttpll
dec
lods
fisttpll
in
xchg
or
sbb
mov
xchg
inc
dec
xchg
fcompl
cmp
int
push
imul
push
or
sbbb
pop
xchg
lds
in
xchg
pop
mov
pusha
imul
lcall
push
frstor
push
sahf
sub
js
dec
cld
jo
mov
pop
insb
in
movsb
fstl
in
fbstp
daa
fnstsw
js
mov
dec
into
aas
das
mov
add
jo
in
int3
and
mov
loope
scas
je
in
jl
dec
outsb
into
addb
cmpsb
out
mov
push
jle
jl
repnz
push
test
sub
push
or
inc
stos
pop
lea
sahf
xchg
test
mov
ds
push
jecxz
mov
jl
call
in
mov
in
fstpl
insb
adc
push
mov
repnz
popf
cwtl
xchg
mov
pushf
pop
inc
aam
aas
js
dec
mov
popa
pushf
insl
in
out
inc
lods
push
cwtl
in
out
pushf
lcall
and
dec
outsb
or
or
jl
adc
jge
movsb
pop
jge
ret
popf
dec
lods
gs
test
xchg
mov
adc
das
mov
fcoms
ds
mov
pop
mov
mov
in
repnz
insb
es
xchg
dec
sbb
sbb
fcoml
ds
imul
adc
push
outsl
fldl
pop
orb
mov
pop
shr
jg
push
mov
dec
dec
into
mov
enter
fsubrp
std
mov
add
lahf
sub
mov
lahf
mov
scas
rcrb
add
mov
aas
loop
shrb
mov
in
inc
push
adc
iret
fsubs
push
inc
ds
into
and
cmp
push
fsubs
sub
mov
xchg
sbb
out
fsubl
push
inc
iret
in
or
adc
or
pusha
movsl
inc
mov
adc
sbb
sbb
and
sbb
sub
pop
add
xor
xor
sbb
mov
or
push
cmp
add
inc
xchg
or
inc
mov
dec
pop
push
push
or
pop
pop
ds
subb
pusha
rcr
jge
sbb
aas
fimuls
lea
xor
fs
insb
push
in
test
scas
insb
jl
insb
mov
push
pop
fimuls
sub
das
push
pop
into
mov
jg
mov
pop
xor
jb
aas
push
in
das
out
mov
and
dec
cmovo
jle
or
and
dec
shll
das
stc
scas
iret
das
or
dec
fisttps
mov
jl
and
inc
out
nop
dec
testl
jp
jb
xchg
and
sahf
inc
cmp
fisubs
push
shl
push
mov
dec
dec
insb
mov
jg
dec
cmpsl
inc
dec
mov
addl
imul
or
jno
or
push
sub
push
movsbl
sbb
in
sbb
in
xchg
sub
push
or
inc
lahf
hlt
adc
or
mov
pop
out
test
mov
movb
sub
lods
cs
daa
pusha
lahf
jge
adc
lret
pop
lret
adc
push
lea
into
mov
in
add
sub
rclb
dec
popf
and
je
mov
lods
ds
cmp
or
nop
loope
dec
fnstsw
lret
sub
sub
and
lea
push
or
aas
mov
es
pextrw
sbb
andb
mov
popl
pop
and
insb
in
jg
adc
les
inc
push
mov
idivb
popf
push
insl
in
scas
mov
inc
mov
in
dec
adc
lock
adc
pop
pop
lahf
lahf
mov
xor
xor
mov
and
and
xchg
adcb
push
outsb
and
pop
inc
inc
and
xchg
int3
add
and
inc
fbld
and
cmp
js
lods
shlb
fsubrl
out
and
out
inc
fimuls
jle
pop
movsb
mov
mov
pop
sub
sbb
js
pop
pop
lcall
pop
iret
js
mov
mov
push
dec
aaa
es
sbb
xor
mov
or
add
pop
cmp
cwtl
sbb
cmp
daa
ficomps
push
cld
outsb
xlat
mov
adc
push
mov
out
ds
pop
leave
push
jge
or
push
or
inc
loop
mov
faddl
sbb
daa
inc
in
addr16
lods
repz
mov
sarb
jl
ss
lods
lods
inc
dec
cmp
outsl
je
iret
push
jl
mov
and
sbb
mov
int3
inc
jl
pop
pop
in
cld
out
pop
dec
jp
out
in
insb
push
inc
js
hlt
or
das
cmp
iret
fwait
mov
sarl
mov
xor
pushf
or
add
or
push
cmpl
mov
repnz
in
inc
push
push
gs
rol
scas
push
mov
outsb
mulb
lods
imul
fnstsw
imul
insb
or
movsl
mov
and
in
mov
pop
xchg
outsl
push
lret
push
loope
in
inc
xlat
mov
ret
cmp
scas
in
and
loopne
movaps
push
orb
mov
push
mov
lods
pushf
je
add
mov
and
and
ja
fnsave
or
test
sbb
and
jmp
sbb
addb
in
in
and
push
cld
fnstsw
push
or
or
sbb
adc
xor
in
adc
aas
ffree
push
adc
inc
hlt
sbb
subb
push
cmp
repnz
push
cld
fisttpll
or
push
adc
ds
daa
inc
in
ja
fnstsw
lods
pusha
push
sub
and
cwtl
pop
scas
cld
pop
adcb
les
xchg
xor
ds
int
pop
sub
mov
in
shlb
sbb
fiadds
in
stos
in
faddl
aas
femms
fmuls
movsb
fisttpll
jb
scas
out
sub
daa
pop
in
ja
mov
push
insl
adc
aaa
scas
into
lcall
mov
mov
das
loop
cli
test
sarl
dec
mov
pop
shrl
int3
sbb
std
inc
mov
aas
aad
cs
push
pushl
xor
lret
and
into
lea
inc
outsl
test
and
push
and
inc
or
fistps
int3
adc
mov
and
daa
lcall
in
inc
sub
hlt
or
das
rorb
pushf
imul
nop
dec
lods
pushf
xor
sbb
aaa
and
mov
outsl
push
mov
and
pushf
imul
pop
test
mov
mov
cmp
jecxz
mov
cmp
daa
aas
cs
out
int
aas
sbb
popl
pop
jmp
scas
stc
shrl
sti
in
nop
ds
fmull
ds
test
dec
lods
cmovb
fsubrl
iret
and
xchg
jno
cmp
lcall
sbb
loop
and
addr16
pop
mov
adc
push
call
das
sub
push
movsl
ds
insb
jecxz
pop
dec
popl
dec
mov
addr16
lods
iret
mov
insb
nop
loope
lea
adc
jle
mov
mov
xchg
loope
popf
in
in
jns
movsl
das
cld
fstl
or
dec
test
call
lea
test
dec
and
sub
push
push
sbb
rcr
lods
and
dec
pop
out
sahf
nop
loope
or
nop
mov
pop
dec
into
lods
or
std
jno
mov
jg
mov
jg
add
aas
add
pop
into
insb
addr16
push
mov
ja
mov
cmpb
in
pop
mov
mov
mov
insb
aad
in
and
addr16
insb
popl
test
in
and
mov
in
and
jecxz
in
mov
insb
in
push
mov
dec
ret
sarl
ljmp
push
xchg
mov
pop
push
mov
xsavec
dec
popf
lock
pop
xor
in
in
push
or
xchg
mov
outsb
lods
in
lret
mov
jp
push
push
and
insb
inc
out
mov
hlt
in
adc
mov
iret
and
loope
push
mov
insb
lds
mov
ja
xchg
mov
roll
in
dec
rcr
sbbb
in
pop
fldl
testb
inc
jl
xchg
mov
mov
lret
mov
daa
sbb
movsl
in
jae
or
mov
sbb
sbbb
lea
popa
mov
daa
jo
mov
fndisi(8087
fldt
adc
scas
pop
mov
aas
dec
fmull
nop
mov
mov
es
mov
inc
jecxz
subl
inc
nop
sub
mov
ds
pop
xchg
out
popf
jecxz
sub
mov
pop
sub
push
or
mov
or
add
imulb
pushf
rorb
nop
and
movsb
lea
les
arpl
shld
xchg
pop
or
adc
add
iret
hlt
in
mov
xorl
into
mov
in
popa
mov
ds
iret
or
cmp
push
mov
push
pop
or
mov
add
inc
adc
jg
les
in
aas
dec
les
loop
les
orb
xchg
fstpl
sub
or
in
iret
stos
int
mov
std
in
lea
into
mov
and
sar
sbb
aas
pop
or
cmp
inc
loop
iret
mov
dec
and
insb
outsl
push
aaa
jge
inc
insl
sbb
cmp
dec
rcrl
fisttps
and
pop
pop
jge
sarl
pop
fisttps
mov
pop
ds
pextrw
pop
je
jl
nop
lea
sbb
xchg
push
aaa
outsl
mov
shr
lea
lods
inc
push
mov
inc
fcoml
or
les
jle
std
or
sub
push
jge
cmp
add
mov
int3
fs
out
inc
push
sahf
in
pop
out
and
inc
int3
xor
repz
pop
jl,pt
and
int
jmp
fdivp
xor
jo
inc
sti
fimuls
loop
pop
pop
mov
push
stos
push
sub
icebp
lsl
xchg
cld
add
adc
shlb
int3
iret
or
sbb
jl,pt
sbb
ds
mov
push
pushf
andb
sub
lods
lea
in
sub
or
xlat
mov
or
shl
dec
cld
add
in
or
or
xor
fadd
xor
dec
inc
pmuludq
dec
xchg
faddl
lds
sahf
pop
out
lods
mov
cmc
rcr
pop
popf
xchg
arpl
mov
sahf
and
nop
inc
lods
nop
outsb
jmp
or
loopne
and
sbb
fimuls
dec
mov
sub
ret
jl,pn
pop
js
in
inc
mov
movsb
in
pop
dec
jne
dec
add
in
add
mov
in
pop
push
jne
push
sbb
push
adc
std
xchg
pop
inc
in
adc
pop
pop
push
loopne
les
aaa
mov
sub
dec
fstp
pusha
sbb
andb
inc
pop
fcomps
cvtps2pi
sub
stos
push
arpl
arpl
cmp
inc
loop
scas
mov
add
lahf
in
in
push
adc
into
mov
adc
sbb
and
mov
outsl
test
push
and
decb
sbb
xor
jae
sub
and
decb
sbb
adc
push
and
decb
sbb
ret
ficomps
in
les
jnp
jg
gs
ja
aas
in
jecxz
jg
movsb
sbb
insl
sub
fcoml
in
inc
ficomps
out
roll
sbb
ficomps
out
roll
sbb
ret
pop
push
sbb
out
nop
mov
inc
pop
jo
sub
and
and
imulb
popf
add
pop
cwtl
push
mov
jp
in
push
sbb
pop
xchg
inc
iret
iret
or
fldl
lahf
outsl
rcrb
fs
ja
mov
aas
fldl
dec
enter
incb
mov
mov
lods
mov
out
scas
nop
fwait
arpl
orb
popl
xchg
jecxz
pop
cwtl
inc
shll
sub
daa
jp
cmp
ret
add
cmp
fdivrl
cwtl
jne
aas
xchg
mov
test
in
loope
xchg
jg
mov
inc
lahf
jle
or
repz
mov
faddl
pop
repnz
out
aas
dec
lods
cwtl
or
mov
pop
cwtl
cltd
mov
pop
xor
or
sub
stc
lcall
push
inc
pop
cmp
sbb
pop
and
or
pushf
sbb
fsubrs
push
fsubr
sbb
sub
scas
cwtl
xor
jle
xchg
pop
int3
mov
pushf
add
push
pushf
pop
pop
fcomps
pop
fdivrs
pop
fsubrs
dec
jge
jge
outsb
dec
pushf
or
mov
aas
sub
jns
jmp
push
dec
xchg
cmp
pop
int3
push
ds
rorl
mov
into
pushf
mov
cmp
in
popl
adc
mov
rcrb
aas
in
jecxz
adc
jb
es
addr16
lret
jl
fwait
cmp
in
in
cmpsb
popf
jecxz
ret
dec
sub
jbe
fmul
gs
add
insb
sbb
int
add
in
loop
jns
cmp
jp
daa
fbld
dec
fucom
jecxz
addr16
cwtl
sub
cmp
jle
inc
std
into
jle
popf
shrl
lock
in
jecxz
jne
dec
fdivrs
js
mov
lcall
int
mov
nop
out
popa
pushf
mov
lahf
fwait
or
or
mov
push
in
sti
lcall
jbe
cmp
and
sub
out
cli
aad
fmull
dec
outsl
adc
xor
into
pushf
pop
jl
adc
adc
int
in
jl
jns
mov
hlt
in
imul
cs
popf
dec
mov
sub
lods
ds
jecxz
rorb
xor
rcl
imulb
in
cwtl
cmp
dec
cmpb
add
fsqrt
aas
sub
roll
inc
js
insb
sbb
and
jb
push
mov
popf
lcall
aas
sub
jno
aas
fwait
cld
xor
ret
fcompl
push
sbb
inc
xor
in
mov
aas
aas
in
jecxz
sub
mov
iret
mov
lret
aas
into
ljmp
mov
push
mov
aas
aad
in
daa
popf
lcall
lret
shlb
jl
adc
jg
and
pop
decl
jmp
jmp
jp
mov
hlt
jp
sub
aas
mov
in
dec
lahf
out
mov
dec
or
rcl
sahf
insl
mov
dec
mov
mov
andb
jnp
js
cmp
ljmp
int
mov
dec
inc
out
cmp
sbb
mov
dec
adc
lock
test
sahf
scas
inc
pushf
or
and
lret
dec
inc
out
sti
pop
dec
inc
seto
inc
xlat
les
insb
cld
mov
pop
mov
add
fistpl
fcomp
fstpt
inc
jge
sub
int
outsb
or
outsl
inc
out
lret
in
lret
bound
pop
in
popa
out
sub
out
ds
dec
pusha
adc
es
lods
inc
mov
adc
int
mov
ds
push
mov
sbb
jne
arpl
pop
repnz
outsl
inc
pop
icebp
mov
mov
push
in
dec
ds
fsubr
push
not
insl
mov
rolb
jecxz
in
inc
loop
cmpsb
jno
nop
mov
or
frstor
mov
or
sti
mov
scas
lcall
xchg
imul
aam
loope
scas
mov
ret
jmp
dec
sbb
lea
mov
mov
xchg
test
sbb
mov
sbb
add
fiadds
sbb
lcall
xlat
push
mov
lods
jecxz
inc
std
mov
nop
cmp
loope
lcall
pop
push
mov
and
mov
xchg
cmp
pop
scas
ret
and
ficomps
adc
cli
imul
sbb
jecxz
inc
cmp
or
and
pop
lods
pushf
and
jle
scas
cmp
movsb
in
add
or
xor
xor
lods
loope
js
fcompl
cmp
cld
or
xchg
dec
cmp
inc
inc
sub
inc
clc
test
addr16
jb
bound
sub
xlat
xchg
dec
rorb
mov
push
dec
shrb
jl
jecxz
arpl
lea
arpl
stos
jae
int
sti
xchg
pop
and
inc
jg
iret
or
push
cmpsb
icebp
scas
ret
sbb
pop
push
pop
pop
pop
int
loope
or
or
test
pushl
push
dec
lcall
in
popf
dec
pop
fucom
jge
shl
mov
aaa
aad
push
pop
fs
loopne
in
jl
test
loope
test
call
sbb
sub
mov
nop
push
pushf
test
mov
jecxz
inc
cmpsb
les
test
insb
mov
pop
test
mov
pop
and
jo
push
in
in
push
pushf
fwait
pop
push
mov
es
cld
in
lea
jl
sahf
mov
imulb
scas
mov
dec
js
nopl
in
imulb
jl
push
jg
aas
dec
loopne
jg
test
dec
repnz
jl
loope
dec
idiv
inc
addb
gs
cld
dec
fwait
test
aas
in
jecxz
xchg
int3
mov
test
pushf
inc
mov
in
inc
imulb
out
into
push
pushf
inc
mov
in
inc
mov
idiv
decl
aam
sub
lcall
aad
in
pop
fldl
jo
bound
pushf
dec
fsubl
in
sub
pusha
nop
inc
aas
imul
out
jo
sub
movsl
sbb
pop
sub
sub
aas
push
and
imul
int3
mov
in
mov
jo
sarl
ss
jne
push
inc
mov
jnp
test
push
pop
mov
fidivrl
scas
xchg
popf
arpl
jns
sbb
or
inc
or
test
lea
das
movsb
movlhps
or
call
into
mov
lods
lock
xchg
sbb
inc
mov
popf
in
sbb
aaa
lea
in
jecxz
ret
rorl
push
lahf
int
push
push
dec
mov
lea
lea
and
and
mov
and
test
mov
push
and
out
fistps
inc
jle
repnz
lea
es
cmp
xchg
in
pop
lret
hlt
in
push
mov
mov
push
cli
call
shrb
popa
pop
shrl
xchg
dec
pop
lods
fwait
into
hlt
in
mov
adc
imul
lods
lret
lea
in
nop
int
and
ds
xor
int3
fidivs
jp
pop
fcompl
lods
and
in
inc
adc
push
lea
out
mov
ss
jge
mov
in
push
imul
pop
sub
pop
cmp
int3
cmp
fadds
in
and
pop
scas
sub
lods
cmp
popf
in
in
fcmovu
fidivrs
int3
inc
mov
inc
jl
in
inc
adc
pushf
loope
mov
int3
xlat
sbb
adc
pop
into
int3
inc
inc
sbb
mov
lahf
stos
imul
dec
popf
mov
sbb
mov
outsb
dec
out
dec
lcall
inc
mov
out
outsl
jecxz
inc
cmpsb
lds
data16
sbb
aaa
or
outsl
lods
or
cmp
pop
mov
inc
pushf
test
or
push
and
xor
cmp
mov
adc
sti
mov
pop
mov
pusha
bound
aad
jo
bound
punpckhwd
inc
jne
mov
jle
xchg
inc
bound
jge
dec
sbb
xor
mov
pop
mov
aad
je
or
sti
aaa
dec
pop
in
mov
in
sbb
in
gs
push
loope
xor
movsl
in
shll
repz
lea
pop
cmp
insb
loope
movsb
repnz
scas
movsb
cld
rorb
mov
push
test
test
push
rorl
mov
sub
mov
inc
mov
or
xchg
mov
lea
or
or
jl
lea
pushf
popa
les
test
rcrb
daa
lea
rcrb
daa
lea
rol
in
xchg
pushf
cli
or
lea
aam
outsb
xchg
pushf
ds
lret
shr
mov
test
mov
out
and
iret
inc
dec
mov
mov
mov
lea
cmp
loopne
lahf
loope,pn
mov
in
in
clc
fsubr
sbb
popa
in
mov
lods
pushf
lock
lods
jecxz
mov
pop
and
inc
mov
dec
cmc
nop
insb
xor
outsl
test
or
push
hlt
jle
nop
lods
mov
nop
iret
pop
add
in
mov
pop
push
mov
insl
in
ja
pop
int3
push
jbe
and
clc
test
mov
mov
insl
into
gs
jmp
mov
stos
mov
lcall
cld
shl
popa
dec
imul
sbb
jno
std
xchg
mov
stos
imul
or
cld
in
push
add
ja
aas
in
jecxz
push
push
xchg
add
addr16
cmp
ja
xlat
sbb
and
xchg
or
mov
or
loope
mov
in
insb
pop
or
aad
push
call
rclb
js
cwtl
int
push
add
or
std
dec
fisttpll
outsb
ds
mov
imul
dec
pop
sbb
divps
dec
popa
adc
popf
add
mov
into
out
outsb
cmp
sbb
push
addl
or
in
inc
dec
mov
imul
into
hlt
in
adc
dec
pop
sbb
popa
sbb
adc
in
jnp
in
in
lea
test
in
into
add
popf
stos
les
inc
std
idivb
mov
in
sub
shrl
and
in
std
dec
decb
jbe
fidivl
sub
jno
mov
inc
test
into
lahf
dec
pop
aas
loope
mov
in
jns
pop
pop
pop
jecxz
mov
fildll
call
call
xchg
scas
mov
lods
or
scas
scas
jns
outsb
xchg
cwtl
rclb
mov
sub
or
in
in
jne
out
lods
repnz
aam
or
shll
es
push
cwtl
popa
fisubrs
mov
mov
sub
pusha
out
movsb
sub
rclb
sub
or
popa
push
mov
mov
fistps
movsb
push
insl
paddusb
mov
adc
test
faddl
cmp
adc
adc
mov
jo
test
in
mov
setnp
mov
in
aas
cmp
mov
mov
cmp
in
cwtl
cmp
repnz
dec
dec
lahf
sub
cld
mov
adc
sahf
mov
les
dec
push
dec
push
sub
lods
add
mov
dec
or
xchg
fstps
scas
jle
or
sbb
rcrb
sub
jb
out
sbb
mov
mov
int3
cmp
fsubrs
mov
pop
loopne
sub
repnz
outsl
push
shlb
inc
fst
pusha
push
pop
cmp
push
loopne
sub
rcr
in
mov
or
or
test
sbb
sbb
push
sub
in
fucom
adc
fdivrs
loopne
cld
movsl
fucom
push
or
push
push
xchg
dec
add
test
mov
or
or
test
sbb
pop
and
or
call
mov
mov
repnz
cmp
mov
dec
push
gs
pushf
fidivrl
jp
ret
int3
inc
dec
dec
nop
int
inc
push
lods
push
pop
xchg
sub
dec
cmp
or
cld
fdivrl
sbb
outsl
in
in
jne
cmp
or
sub
pop
sbb
and
inc
or
jnp
sub
in
insl
xchg
out
sarl
jb
adc
loop
push
into
das
mov
or
dec
push
scas
push
into
aad
repnz
pop
adc
jbe
test
insb
sub
push
inc
in
frstor
into
mov
popf
icebp
xchg
scas
mov
aas
adc
cli
movsl
std
test
cmp
adc
push
mov
fcompl
cmpsl
pushf
mov
in
arpl
jne
pop
insb
les
fnsave
mov
das
sbb
adc
fcompl
xchg
in
scas
out
sub
or
adc
int3
sbb
pop
inc
in
pop
hlt
rcl
out
add
out
scas
punpcklwd
mov
imul
insl
test
repz
mov
gs
adc
out
iret
punpckhwd
fnstsw
int3
out
or
leave
and
sub
insl
jae
cltd
pop
ds
clc
mov
jno
shl
in
int
push
add
jne
sub
jne
mov
pop
int3
int3
sub
jns
sub
or
mov
mov
dec
mov
dec
mov
push
pop
add
jne
pop
in
xor
fisubrl
in
push
adc
ds
pop
cmp
ds
or
inc
push
or
dec
sub
sbb
sub
movsl
jl
pop
jge
pop
cli
imul
sbb
loop
cmp
insb
mov
les
stos
icebp
cld
mov
push
or
sarb
pop
fsubrl
xor
ret
pop
test
pop
adc
outsb
xchg
js
jmp
clc
outsb
pop
cmp
jne
outsb
pop
xorb
out
imul
popa
outsb
dec
sbb
adc
sbb
mov
fwait
les
jle
adc
sbbb
pop
sahf
sahf
scas
lea
push
push
mov
mov
int
sbb
sahf
sahf
xchg
add
cmp
mov
cs
imul
push
cltd
mov
add
and
lods
gs
pop
outsb
lahf
add
pop
ret
in
push
outsb
imul
inc
dec
in
arpl
enter
decb
in
mulb
dec
lret
movsl
push
inc
sub
in
xchg
enter
popf
in
in
jp
mov
test
test
enter
js
mov
outsl
bnd
cmp
lods
nop
into
lods
in
lods
dec
jg
mov
arpl
in
push
fcompl
in
adc
scas
push
mov
mov
fucomip
sub
enter
js
mov
mov
mov
aad
push
and
iret
push
aad
in
daa
popf
mov
mov
mov
inc
pushf
div
mov
mov
in
jecxz
aas
hlt
mov
sahf
mov
pushf
lret
mov
in
mov
cmp
lret
inc
lods
and
pop
subb
push
mov
in
and
lret
dec
icebp
adc
in
mov
sar
imul
adc
in
xor
pusha
leave
inc
into
hlt
add
mov
in
dec
fsubl
int
mov
mov
adc
fs
jp
cmp
rcll
pushf
sub
add
cmp
out
fdiv
push
push
adc
loop
pushf
ja
out
push
aad
in
sub
jle
push
mov
into
sub
scas
int3
repnz
sub
daa
fdivl
iret
jecxz
stc
mov
mov
inc
push
addr16
nop
push
pop
iret
mov
pop
loope
imul
in
lods
jne
push
aas
in
jecxz
mov
in
iret
sub
in
mov
push
into
hlt
in
popa
mov
fldl
in
les
mov
into
hlt
in
pop
popf
pop
mov
aaa
dec
sub
lret
incl
inc
lods
sub
adc
mov
pop
inc
push
test
icebp
daa
inc
push
in
arpl
insl
into
lods
ret
jmp
jno
mov
in
addr16
cld
ret
cmpb
stc
jb
sub
fdiv
mov
inc
cmpsl
daa
mov
xor
adc
loop
push
push
shlb
scas
mov
stos
test
push
cs
outsb
in
cs
fnstsw
mov
fucom
lock
mov
mov
lods
in
xor
jg,pt
lahf
fmulp
out
mov
popf
jne
fisubrs
add
jo
popf
add
push
pop
jns
repz
push
inc
pop
bound
insb
pusha
sbb
repnz
mov
out
setl
test
cs
mov
cmpb
inc
or
jo
pushf
pop
insl
jecxz
push
mov
sub
pop
lcall
cmp
or
or
fldl
pop
pop
mov
in
and
sbb
test
sahf
mov
insl
and
mov
pop
cs
fdivs
mov
fdivrs
cs
xchg
pushf
pop
imul
sahf
fisttps
ficoml
dec
imul
std
rcr
add
shlb
jp
inc
push
mov
jmp
pop
lods
lods
aam
and
outsb
cmpsb
sbb
push
pop
cmc
dec
adc
lcall
pop
or
jl
jle
sbb
cmp
xchg
pushf
dec
sbb
dec
cld
pushf
pop
fs
push
push
bound
sarb
jecxz
popa
daa
dec
shrb
daa
push
leave
pop
popa
mov
and
out
test
mov
pop
fimuls
sarb
cld
cmp
out
adc
ds
cmpsl
dec
cld
insb
xchg
mov
sbb
jg
sbb
inc
push
mov
lods
lods
int3
and
es
lahf
je
es
sub
jmp
and
movsl
cmp
xor
or
pushf
inc
xor
in
and
sahf
movsl
push
lods
cmp
cmp
dec
pop
ds
das
pushf
jp,pt
inc
inc
cmp
faddl
outsb
outsl
daa
and
mov
jle
dec
jne
cmp
test
sub
cmovle
test
pop
pushf
daa
push
jle
dec
push
pushf
and
cmc
or
dec
pop
jle
pop
and
dec
arpl
mov
dec
scas
bound
int3
cmp
cmp
cmp
in
in
jp
mov
and
dec
popf
loope
sahf
fcompl
hlt
in
dec
jge
fisttpll
adc
pop
dec
pop
std
loope
fdivrl
cs
adc
in
fstl
dec
mov
pop
push
lret
cmpsb
outsl
outsb
inc
aas
mov
insb
out
add
inc
stos
daa
outsl
or
cmpsb
outsl
lret
inc
lods
inc
in
xchg
fnstsw
cs
jne
inc
js
mov
and
sub
imul
xor
loopne
stos
in
cmp
stos
insl
cld
nop
dec
sub
popf
in
jno
xor
jg
andl
cs
jp
jg
in
std
dec
pop
adc
fsub
jp
cs
in
in
shrb
cwtl
cmp
xchg
jle
mov
cld
dec
sahf
psraw
cmp
inc
mov
pop
sbbb
inc
ret
xor
loopne
repnz
and
or
shrl
add
adc
pop
cmc
cs
orb
stos
movsl
mov
in
loope
push
mov
loope
rorl
loopne
int
ja
in
sub
mov
dec
imul
inc
and
jb
sub
mov
sbb
ds
lret
inc
pushf
dec
in
xchg
loopne
insb
sub
repnz
subl
push
hlt
movsb
cs
xchg
push
mov
push
mov
push
jl
iret
stos
std
mov
pop
into
mov
inc
stos
aaa
outsl
and
test
cmpsb
lret
outsl
mov
in
pop
jg
jmp
mov
daa
inc
pop
into
jecxz
in
jg
fnstsw
mov
in
mov
lcall
or
dec
cmp
adc
cmc
cs
add
nop
imul
mov
out
cmpsb
adc
dec
mov
add
cwtl
jns
std
sub
fistpll
frstor
ficompl
sahf
lds
iret
inc
pop
pop
sahf
mov
dec
mov
sahf
outsl
jp
rclb
aad
je
push
int
inc
stos
mov
lods
pushfw
pop
lret
popf
and
iret
inc
cmpb
jecxz
imul
scas
pushf
mov
mov
pop
fcmove
sub
aad
nop
pop
cli
iret
push
mov
fidivs
pop
in
out
iret
or
xchg
out
jl
aaa
or
insl
jno
fmull
lods
in
movsl
aaa
or
addr16
mov
sahf
ds
cmp
adc
jle
rclb
or
imul
or
mov
push
scas
or
jg
loopne
sub
loope
mov
jl
ret
dec
add
iret
hlt
in
imul
fs
daa
inc
dec
into
jecxz
in
in
scas
in
sub
stos
pop
lods
inc
jns
mov
in
dec
rcrb
push
ret
es
lods
inc
lret
cmp
mov
loope
popa
dec
push
into
fisttps
into
xor
dec
hlt
ds
or
xchg
out
imul
pusha
clc
sub
mov
xlat
jge
cld
xchg
inc
mov
scas
push
push
add
add
and
add
insb
or
jl
fmuls
repnz
jl
pushf
or
push
pushf
add
add
xchg
adc
or
pop
pop
cld
popa
adc
cmpb
adc
sbb
fucom
ss
fsubrl
inc
sbb
and
ds
and
test
in
in
fldl
sub
ljmp
nopl
popa
sbb
lahf
fldl
sub
push
or
test
sbb
pop
out
outsl
lods
xor
ds
xor
cmp
dec
pusha
cmp
and
js
repnz
dec
in
inc
cmp
sbbb
in
repnz
dec
inc
inc
pusha
incb
pop
je
dec
cld
add
lods
pop
inc
popa
jge
into
mov
cmp
lods
lea
loope
or
lock
jge
dec
push
sbb
lea
and
dec
mov
scas
add
test
in
dec
popf
ffree
push
push
or
mov
mov
loope
push
push
or
push
pop
in
repnz
pop
push
dec
mov
pop
daa
in
into
lea
pop
mov
iret
or
std
adc
push
push
pop
add
pop
in
out
fldl
stos
dec
sub
mov
in
ja
jbe
cli
push
or
adc
mov
xlat
pusha
repz
pop
dec
push
in
push
jl
adc
xor
dec
push
jo
js
sbb
popl
pop
adc
adc
nop
or
shrl
and
pop
mov
mov
pop
mov
dec
adc
loopne
or
leave
pop
das
xchg
test
fdivrl
repnz
inc
fsubp
idivl
dec
out
xchg
pop
bound
xchg
out
cmp
xchg
outsb
dec
call
cmp
or
mov
or
mov
or
pop
mov
subb
sbb
jae
stc
pop
push
adc
insl
test
pop
gs
mov
and
and
fst
idiv
xchg
mov
or
inc
insb
inc
add
mov
aas
push
sub
inc
sbb
out
push
fmull
int
out
mov
sub
and
dec
fcmovnu
lods
cmp
out
ficoml
jecxz
sub
ficomps
loop
gs
rolb
dec
mov
shll
inc
out
dec
in
popf
dec
pop
jle
or
or
cmp
insl
rcll
int
ljmp
push
fst
jne
xchg
ficompl
lea
repnz
ds
sbb
ds
pop
sbb
aad
cltd
ds
cli
mov
mov
fstps
fidivrs
sub
mov
add
in
jge
pop
outsl
mov
jmp
mov
xor
int3
lea
mov
in
iret
cmp
cmp
loope
sub
pop
inc
popa
or
jne
xchg
mov
add
icebp
jle
pop
ud2
push
mov
jne
lods
shrl
mov
in
xchg
sub
dec
repnz
mov
out
iret
or
in
mov
dec
pop
pop
ds
jl
and
jne
xchg
mov
mov
sub
jnp
dec
and
cmc
sbb
xor
in
mov
add
pop
jbe
and
sti
sbb
and
hlt
das
jne
sahf
ds
mov
lock
mov
cs
stos
ds
rcrl
cmp
push
iret
cmpsb
sub
push
jle
sbb
dec
pushf
inc
stos
aaa
or
inc
pop
rolb
arpl
add
fisubrs
dec
jle
push
insl
scas
out
repnz
inc
ds
sbb
inc
dec
insb
push
and
dec
cmpsb
mov
test
rol
sbb
ret
stos
es
cld
popa
in
xchg
out
mov
popf
in
in
pop
sub
sub
jb
pop
xor
lock
mov
mov
pop
in
push
xchg
nop
in
in
into
das
push
xchg
cmp
sbb
push
rcll
sub
pop
lock
in
xor
mov
scas
sahf
aaa
ficoml
scas
mov
in
pop
sahf
push
mov
and
loopne
lods
sub
push
into
hlt
in
imul
ret
or
aas
les
into
mov
push
aas
cmpsl
movsb
push
push
inc
dec
paddsw
pop
gs
jb
sub
and
popa
je
inc
rclb
sbb
inc
ljmp
cmp
retw
pop
jmp
fisttps
pop
dec
lahf
dec
and
pop
std
gs
scas
popf
in
in
push
imull
rcll
cmp
dec
push
rol
frstor
in
sbb
sbb
and
push
inc
dec
gs
in
jns
faddl
out
loop
sbb
dec
test
mov
test
mov
ret
pop
lds
ficoms
push
sub
jle
jne
outsl
mov
ret
pop
rcrl
mov
jne
test
sbb
loope
sub
xchg
adc
out
add
aas
movl
mov
in
jecxz
out
in
sub
inc
mov
xchg
das
loop
push
pop
hlt
ljmp
test
pop
lea
lea
movsb
jle
iret
into
addr16
jnp
pop
xchg
inc
dec
addr16
mov
jno
dec
pop
add
imul
mov
cmp
inc
out
ds
xchg
sub
imul
mov
out
sbb
pop
lock
xchg
cmp
inc
or
int3
orb
in
xchg
idivb
push
push
mov
outsl
dec
lock
mov
inc
cmpsl
pop
das
sub
or
sahf
lock
popf
jle
mov
imul
ljmp
test
inc
lods
mov
test
out
jge
mov
ja
addr16
addr16
aas
jns
in
jecxz
idivl
mov
imul
imul
sub
subl
fnstsw
aas
subb
push
mov
test
mov
mov
push
data16
enter
mov
popa
fcompl
imull
nop
cltd
pop
push
jge
insl
and
fists
jge
xchg
pop
ds
cli
or
sahf
jge
test
scas
imul
and
hlt
imul
mov
addl
dec
push
jo
sub
and
xchg
insl
dec
pushf
sti
sub
hlt
in
cmp
test
and
movsb
movsb
mov
in
jecxz
ds
test
insl
in
and
movsb
call
lgs
imul
jge
in
in
push
ret
lahf
jne
fwait
mov
mov
sbb
in
in
cmpsb
popf
icebp
dec
fsubl
xor
sahf
pminub
out
fidivs
mov
in
xor
in
sahf
add
imul
dec
insb
sbb
hlt
inc
push
cltd
mov
insb
into
cmp
jbe
stos
sbb
dec
sbb
and
pop
pop
cli
int
lret
faddp
sahf
hlt
and
mov
pop
push
iret
mov
jp
in
sbb
jl
fmuls
fcomps
in
in
jbe
stc
push
cmp
inc
scas
fistpl
cmpsb
push
ret
pushf
push
lahf
rcrl
sbb
rcrl
xor
cmp
fdivrl
fcomp
stos
adc
mov
sbb
mov
cmc
xorb
sbb
inc
or
fcomip
mov
lret
xor
in
jecxz
sahf
mov
in
inc
pushf
fisubrl
in
cmp
movsb
sahf
das
rolb
mov
inc
rolb
into
hlt
in
sub
ds
jne
in
mov
xchg
sbb
js
mov
sbb
insl
outsb
jno
jo
xchg
adc
rcrl
mov
pushf
hlt
cmp
sahf
aad
in
xor
test
stc
adc
iret
mov
mov
push
cwtl
inc
fcoms
sahf
and
mov
sub
mov
lahf
in
pop
mov
lods
mov
mov
rolb
ja
sahf
out
iret
mov
clc
or
jmp
inc
popf
or
sub
movsb
mov
mov
sub
je
gs
call
dec
sub
mov
rcl
out
aad
mov
mov
jl
pushf
fsubl
or
sub
in
add
popa
rcrl
in
dec
rcr
fisttpll
clc
fldt
hlt
in
jne
sbb
mov
pop
in
xchg
das
push
dec
mov
ret
pushf
mov
cmp
gs
test
dec
mov
sbb
and
mov
mov
cld
hlt
in
and
dec
daa
int
push
outsl
in
into
or
pushf
sbb
or
repnz
push
jl
push
mov
push
inc
mov
sti
lods
scas
nop
int
out
mov
es
mov
push
std
inc
aad
jg
scas
fidivrl
and
mov
jl
inc
pusha
flds
jns
lods
fldcw
xchg
das
sub
lahf
sbb
push
cmp
fnsave
idivb
stos
idivb
int
mov
add
into
loopne
insb
pop
adc
cmp
dec
jecxz
xor
sti
test
in
mov
mov
js
nop
pop
jp
cmpsl
adc
add
inc
fists
outsb
out
pushl
outsb
mov
in
lcall
in
jp,pt
outsl
arpl
mov
sbb
int3
outsl
cmp
ljmp
sbb
xor
rcrl
movsb
jl
inc
outsl
dec
xor
leave
sub
push
push
mov
fisubrs
and
rcll
fstpt
in
pop
sub
dec
push
push
pushf
jp
sub
sub
in
and
add
scas
mov
mov
icebp
dec
mov
push
test
sub
ss
sub
mov
addr16
cmp
dec
test
nop
sub
pop
pop
or
cltd
sub
insb
outsl
jp
sbb
jmp
mov
lods
jg
daa
bound
pop
xor
mov
mov
or
inc
cmp
imul
fcmovne
pushfw
imul
lea
jne
mov
mov
ja
test
rclb
mov
arpl
pushf
pushf
sbb
arpl
ret
and
pushf
sub
out
cld
fbld
dec
sub
dec
or
fnstsw
mov
dec
ret
mov
insl
aas
jl
ffreep
daa
shrb
mov
std
and
das
popa
mov
or
jl
rorb
mov
jnp
ds
jecxz
ret
push
outsb
adc
in
daa
sub
lea
hlt
in
mov
inc
xor
fstpl
sbb
sub
jne
xor
sbb
in
mov
call
ret
pop
push
das
adc
in
aas
dec
cmp
or
ds
in
mov
insl
insl
pop
inc
cmp
push
in
lea
cmp
mov
in
pop
out
das
cmpsb
frstor
inc
aas
in
arpl
popf
cmpb
in
rclb
lahf
int
test
lea
inc
rcr
or
jmp
ret
jb
dec
dec
into
and
dec
sahf
sbb
sbb
sbb
ljmp
in
pop
dec
mov
dec
aad
in
xor
call
mov
mov
dec
iret
hlt
in
mov
sub
dec
xchg
sbb
sbb
insl
int
orb
xchg
sub
rorb
in
loope
push
nop
pop
out
push
insl
pop
pushf
cmpsl
sub
cmpsb
mov
imul
dec
lods
insl
jns
ficomps
sahf
je
in
shr
scas
lds
xchg
out
lcall
jecxz
pusha
mov
jns
fidivrs
sarb
jecxz
pusha
mov
out
and
dec
pop
fs
mov
hlt
in
sub
out
sub
mov
sarb
ficoml
pop
adcb
add
xchg
into
pusha
xchg
sub
push
fimuls
cwtl
jns
in
shr
in
shll
dec
mov
push
fdivrl
pushf
pop
je
cmp
mov
inc
jg
pop
cmpsl
cmp
movsb
outsb
gs
lods
sub
jp
push
pop
push
sub
ret
dec
inc
repz
ds
in
in
negb
jns
in
xchg
leave
inc
push
jle
aas
dec
cmp
sbb
cmp
divb
ds
jecxz
mov
sub
stc
mov
iret
jb
dec
mov
out
pop
push
leave
pushf
mov
outsb
push
lea
arpl
hlt
jmp
inc
add
xchg
stc
out
scas
dec
outsl
or
sahf
add
or
fadd
popf
fdivrl
das
in
imul
push
out
pop
arpl
pop
jle
into
and
inc
cli
arpl
or
or
or
mov
outsl
icebp
outsb
or
frstor
ds
and
mov
int
js
insl
mov
mov
jl
rolb
adc
sbb
sarb
test
insl
mov
mov
orb
nop
rclb
pop
nop
rcl
bsf
xchg
bound
mov
int3
jle
xchg
cwtl
loopne
mov
lcall
pop
push
add
and
pop
sub
sub
xor
sub
cmpb
int3
pop
xor
xor
fcoml
jne
mull
outsb
out
cs
shlb
push
fldt
in
gs
dec
faddp
dec
dec
outsl
sahf
adc
mov
test
push
ror
pop
sbb
movsl
inc
ds
in
or
xchg
sub
insl
in
jle
add
fisttpl
jb
test
popf
ret
push
dec
mulb
jg
outsl
mov
jno
out
jb
das
sub
dec
mov
es
int3
cltd
in
inc
in
pop
or
das
or
xchg
mov
pushf
call
pushf
sti
mov
aas
in
jecxz
test
jnp
arpl
leave
cmp
dec
out
cld
mov
cmp
xor
jecxz
inc
pop
fistps
test
push
aas
in
and
push
pop
lcall
pop
jb
das
cmp
das
cld
inc
mov
in
pushfw
stc
pop
cld
popf
in
in
jp
cld
mov
in
and
cltd
lahf
adc
in
and
inc
sbb
jns
lahf
inc
js
mov
jp
lcall
cmp
push
loope
insb
jl
pop
aas
adc
push
fstpt
repz
or
jl
imul
and
lods
inc
lods
es
jns
in
movsb
sbb
fisttps
fdivrl
lea
fwait
sbb
or
sbb
dec
loop
addr16
lods
dec
inc
sbb
scas
sahf
adc
adc
sbb
mov
popf
sbb
dec
insl
inc
jnp
pop
adc
in
mov
or
lahf
aas
iret
push
int3
mov
inc
out
gs
ret
push
inc
adc
pop
adc
es
mov
mov
dec
stos
lds
leave
scas
push
lods
test
repz
or
fisttps
fidivrs
adc
aad
lds
out
xchg
shlb
shl
hlt
insl
test
inc
sahf
pushf
jnp
xlat
push
in
or
pushf
sub
icebp
out
sub
mov
pop
and
scas
and
dec
out
cmp
pcmpgtw
and
jbe
mov
fists
add
xor
dec
es
and
repnz
or
in
in
jb
vphsubdq
inc
in
sub
mov
in
inc
ucomiss
and
jle
jl
sbb
pushf
mov
jo
in
push
mov
and
or
in
ja
cld
push
cmpsl
call
push
test
adc
sub
jo
sub
mov
sbb
arpl
xor
sub
in
outsl
hlt
in
adc
inc
orb
adc
dec
mov
in
in
out
and
addr16
pop
sbb
xchg
cmp
sub
addr16
mov
psrlq
cld
xchg
add
in
sbb
xor
adc
aaa
cld
daa
inc
in
ja
cmp
inc
es
or
in
inc
inc
test
lock
push
inc
jno
popf
add
push
std
dec
mov
imul
lret
sub
jge
ds
dec
fstl
dec
inc
lea
add
sti
adc
out
fnstsw
in
xor
sahf
push
ljmp
mov
mov
xchg
lahf
cld
ljmp
mov
mov
mov
lods
add
insb
lea
nop
cmc
int
jg
imul
push
repnz
in
iret
andl
cmp
arpl
push
inc
test
mov
xor
in
mov
in
int3
adc
adc
inc
shll
aas
xchg
nop
shr
idivl
or
in
xchg
ret
cli
arpl
or
aam
pop
inc
pop
lods
in
pop
jbe
dec
pop
cwtl
in
jns
or
hlt
in
jns
or
add
into
push
mov
add
jle
or
sti
data16
add
popf
in
in
fcompl
sub
pand
sahf
lea
push
in
arpl
cmp
sahf
popa
test
in
pop
mov
pop
in
cmp
jg
out
fldl
fisttpll
pop
mov
das
insl
add
hlt
mov
pop
cld
dec
mov
xchg
jno
std
mov
xchg
mov
fwait
or
jmp
jl
jp
mov
and
imulb
out
sub
sti
fsubrs
stc
sbb
dec
dec
or
pop
mov
stos
xlat
scas
and
scas
mov
fsubp
clc
fimull
mov
jge
das
sub
jmp
push
mov
sbb
adc
hlt
ds
adc
mov
or
or
jp
inc
push
test
adc
jno
or
fldt
and
loop
out
inc
lods
or
test
inc
scas
mov
sub
lods
mov
sub
lds
dec
imul
fsubs
popf
sub
jmp
loope
clc
sbb
in
lods
xchg
mov
xchg
in
jecxz
xchg
fdivr
test
cmp
fsubs
in
lahf
pop
lret
lea
or
rcrb
inc
iret
lahf
push
mov
pop
mov
push
repnz
xlat
mov
mov
ljmp
pop
mov
std
xchg
add
adc
mov
hlt
fwait
mov
aas
pop
jge
mov
sub
fisttpl
inc
mov
adc
jle
xlat
pop
popf
xor
jne
sti
pop
rclb
cmpsl
dec
clc
out
mov
jg
mov
loopne
js
or
jg
movsb
imul
sbb
cld
xor
outsb
loop
fcomp
sub
inc
add
xor
add
mov
sbb
dec
xchg
or
sbb
out
js
dec
lahf
fbstp
adc
cmc
cld
xor
cld
je
cld
hlt
mov
or
lds
or
int3
loope
or
add
test
int3
and
xchg
test
adc
pop
scas
std
mov
xchg
sub
dec
addr16
sbb
sbb
cmp
test
cmpsb
push
push
lds
adc
rcr
hlt
es
scas
mov
cld
add
cmp
fstp
xchg
cmp
in
roll
popf
fisttpll
cld
arpl
out
mov
xor
dec
adc
and
leave
and
jg
jg
jg
inc
cmp
int
mov
mov
in
push
dec
add
pusha
sbbb
add
or
in
andl
je
jl
cltd
mov
test
dec
das
icebp
mov
lods
aaa
adc
and
out
xchg
cltd
inc
fidivrs
xor
in
sbb
imul
test
bound
xchg
adc
or
lods
xor
lea
cmpb
xchg
ljmp
sbb
and
arpl
daa
push
xchg
inc
jle
mov
mov
faddl
xchg
mov
int
mov
das
into
loope
outsb
popf
mov
insb
mov
sbb
pushf
cmpsb
out
arpl
adc
outsb
ds
in
pop
popf
push
in
or
adcb
mov
and
std
andb
addb
pusha
mov
dec
mov
lods
push
inc
adc
xchg
dec
adc
mov
jge
sub
test
iret
xchg
and
lds
adc
aam
pushf
and
pushf
xlat
dec
movsl
mov
mov
dec
jge
cs
inc
scas
arpl
pop
mov
mov
xor
test
daa
jge
sahf
aad
adc
arpl
fldl
int
inc
fisubs
mov
or
dec
movsl
aas
ret
xlat
add
cmp
adc
dec
cmp
inc
aas
dec
mov
sbb
out
jb
arpl
add
dec
aaa
xor
mov
lds
jle
fsubrl
add
fdivrl
fsubrl
jle
pop
xchg
fadd
adc
sti
pusha
bound
sbb
xchg
xorb
cmpsb
clc
arpl
add
push
dec
dec
pop
scas
loopne
and
outsl
call
mov
pop
lret
loopne
rcrl
mov
test
xchg
rcrb
or
arpl
add
test
jg
adcl
andb
dec
cmp
and
xchg
pusha
xchg
and
dec
call
scas
dec
mov
ljmp
notl
push
enter
nop
adc
pop
adc
xchg
jge
cmp
ds
out
sbb
cwtl
mov
out
arpl
sub
sbb
jecxz
jle
pop
pop
jne
xchg
sbb
adc
cmp
les
sub
scas
jle
lcall
je
in
dec
adc
dec
enter
xor
or
sbb
sub
mov
or
outsb
out
mov
sub
or
adc
insl
inc
movsb
aas
xchg
fnstsw
loop
push
daa
pop
std
popa
inc
std
test
insb
leave
mov
subb
outsb
cltd
dec
lods
fnstsw
push
insl
mov
es
aam
dec
push
pop
push
test
xchg
push
xchg
mov
dec
pop
js
sarl
xor
movsb
xchg
scas
and
xchg
int3
push
xor
inc
dec
imul
sbb
push
push
cs
mov
cmp
inc
push
and
leave
es
pop
jl
dec
cmp
int3
mov
ljmp
mov
lods
popf
movsb
je
sbb
sub
and
out
dec
dec
ss
pushf
or
jle
adc
sub
cmp
add
pop
addr16
dec
or
outsb
aam
in
push
or
dec
cmpb
adc
std
inc
in
int3
outsb
mov
adc
bound
sahf
lods
insb
scas
into
mov
add
int3
xchg
std
dec
test
rorl
adc
mov
addr16
inc
pop
test
dec
bound
mov
std
push
nop
sub
movsb
into
into
pop
les
xchg
nop
gs
xchg
imul
lods
mov
pop
mov
cmp
test
insl
mov
mov
pop
push
es
imul
mov
int
pop
push
loope
sub
mov
rolb
pop
push
sbb
sarb
cmp
paddusb
les
dec
fwait
sub
and
xchg
or
cmpsb
add
mov
xor
les
in
sub
mov
add
adc
dec
mov
push
push
int
mov
pop
divb
bswap
xor
or
sbb
mov
pop
ret
dec
xor
xor
mov
scas
dec
in
sbb
das
or
mov
enter
dec
push
inc
lea
scas
std
mov
or
in
and
and
cld
outsl
sbbb
add
mov
dec
cmp
loope
and
addb
mov
rclb
addb
nop
adc
pushf
jo
dec
lret
les
dec
sub
pop
xchg
sub
and
adc
dec
pop
add
sbb
inc
hlt
insl
add
dec
jg
jg
bound
adc
sbb
and
inc
xchg
nop
gs
jl
mov
out
les
and
into
bound
loopne
cmp
nop
push
inc
jbe
lods
or
add
xchg
pop
inc
add
mov
push
sbb
test
push
dec
sbb
add
jl
push
cmp
popf
ret
bound
lahf
les
mov
lahf
ja
pushf
aaa
add
lods
fwait
mov
push
clc
insl
fsub
xchg
fcompl
iret
sbb
add
dec
jnp
aas
push
fsts
or
jb
inc
fdivrl
push
ret
pop
lods
incl
fs
push
insb
inc
shrb
xchg
int
mov
popa
aam
and
mov
inc
pushf
dec
dec
and
cld
pop
shl
xor
or
push
out
mov
cltd
cmp
stc
or
mov
or
ss
sub
pop
insb
cwtl
add
sbb
or
rcrb
adc
arpl
es
jle
xor
inc
cmpsb
loope
movsb
xor
aad
cld
cmpb
cmp
fisubrs
outsl
dec
test
insl
mov
xor
dec
mov
push
sbb
cld
scas
fidivrl
insl
popa
xor
cld
inc
xchg
pop
lahf
outsb
dec
jb
pushl
call
dec
fdivl
outsb
sbb
fs
dec
insb
enter
in
lea
push
shlb
fucom
push
and
bound
mov
into
push
in
lods
test
sbb
into
push
in
lods
mov
sbb
inc
add
xchg
frstor
clc
dec
int
jecxz
lea
dec
insl
insl
lea
mov
stos
xchg
pop
clc
mov
jl
inc
sub
int3
or
xchg
popf
xor
jl
insl
sub
pusha
loopne
push
mov
push
pop
cmp
test
adc
lods
mov
shrb
inc
inc
cmp
nop
xor
inc
mov
or
jle
cmp
inc
stos
mov
stos
inc
mov
mov
add
mov
jne
insb
aam
sub
sbb
sub
pop
mov
insb
lods
mov
pop
outsl
xchg
adc
lds
aaa
sbb
mov
sarb
outsb
test
sbb
in
and
mov
iret
movsl
scas
faddl
scas
lock
test
shl
push
mov
mov
xchg
outsb
or
inc
jge
arpl
or
cld
ds
xchg
inc
cmp
xchg
and
add
pop
push
cmp
cmp
sub
xchg
mov
mov
xchg
xchg
jmp
mov
mov
pop
xchg
out
fistps
mov
push
xor
cmp
pop
je
outsl
mov
insl
push
jno
pop
lods
enter
cld
mov
sahf
mov
outsl
mov
cmpsb
pop
adc
pop
and
adc
sub
sbb
sbb
subb
sub
lcall
inc
pop
int
mov
dec
xchg
gs
loope
dec
and
outsb
jmp
cmp
sahf
pop
aad
xor
sbb
xchg
xchg
filds
ret
xchg
inc
bound
xor
or
mov
aas
jno
mov
jle
pusha
sub
mov
sarl
pop
push
jge
mov
cmpb
das
mov
add
xchg
mov
imul
out
sbb
or
clc
insl
cmp
pusha
and
arpl
stc
mov
popf
sarb
fs
popa
mov
jl
cmp
addr16
jne
in
iret
sbb
adc
lret
cmc
movsb
adcb
insb
popa
xchg
outsb
subb
push
imul
dec
mov
cmpl
add
movl
dec
jg
and
push
dec
cli
shr
push
mov
popf
add
cmp
sbb
test
xchg
add
cmp
fildll
and
fistpl
pop
dec
mov
outsb
das
xchg
pushf
loopne
push
adc
mov
pop
dec
cmp
sub
mov
mov
and
nop
leave
scas
aas
and
in
fisubs
xor
inc
insb
mov
adc
mov
loope
lds
cs
int
ret
iret
pusha
loopne
shrb
les
add
lods
mov
xor
cld
and
mov
pop
or
cli
inc
jle
push
sub
cmovo
mov
cs
mov
dec
xchg
sahf
mov
clc
dec
xor
mov
xor
pushf
jg
pop
xor
inc
pushf
dec
mov
sahf
fsubs
mov
lea
lods
stos
clc
ds
bnd
lea
lret
nop
jle
dec
cs
and
jle
into
outsl
jns
dec
lods
jle
push
xorb
jns
pop
mov
sub
pop
leave
in
into
push
and
sub
sbb
daa
xor
jmp
cmc
mov
or
es
xchg
repnz
xor
xlat
sub
std
daa
mov
inc
lds
xchg
pop
add
push
jmp
push
mov
mov
inc
pop
pop
push
sbb
push
and
cmp
into
fbld
jg
inc
and
out
mov
sub
add
adc
ss
enter
sub
inc
test
dec
inc
andl
dec
iret
test
or
movsl
and
add
idivb
mov
pusha
movsb
es
pop
lcall
popa
lods
dec
popf
inc
inc
xchg
pop
xor
lods
loopne
insb
cmp
fimuls
sbb
push
jno
pop
cli
cltd
popf
ficoms
cmp
fs
loope
mov
pop
in
out
mov
das
aad
movsb
adc
mov
mov
mov
in
cs
xchg
test
sub
mov
fs
gs
push
outsb
pop
inc
jns
mov
cld
xchg
push
adc
sbb
adc
jecxz
mov
cs
xchg
or
jecxz
imulb
es
nop
and
xchg
and
leave
cld
jecxz
sub
pop
cmp
xchg
fwait
outsl
xchg
mov
mov
pop
icebp
xor
mov
ficomps
int3
or
jg
pop
push
sub
imulb
into
sbb
inc
mov
cld
xchg
lcall
pop
int3
lea
xor
int3
in
sbb
pushf
int3
push
push
or
mov
mov
lea
arpl
xor
mov
add
jl
aad
fstl
mov
cmp
jge
dec
pushf
adc
mov
scas
out
cli
out
into
pop
add
mov
movsl
pop
and
in
pop
adc
mov
pop
fsubrl
into
cmp
iret
out
aaa
pushf
sbb
cmc
imul
bound
sub
push
ret
int
fsubr
and
dec
mov
int
gs
in
outsb
dec
cmp
cmp
add
andb
dec
dec
mov
sub
insl
xor
sahf
sub
outsb
and
adc
insb
mov
adc
sub
fisubrs
xchg
shrl
movsl
sub
in
xchg
mov
push
gs
mov
mov
ds
cmp
mov
xor
dec
cmp
cmc
add
icebp
xorb
int3
out
adc
cmp
inc
insb
push
sbb
mov
outsb
push
xor
lods
pop
sahf
adc
fsubs
out
pop
ds
xlat
mov
lods
test
or
jo
aam
fmul
addr16
push
sbb
int3
test
xor
int3
fmulp
cmp
dec
in
mov
add
fmuls
sbb
lds
fsubl
sub
lcall
cmp
les
cmp
sbb
push
outsb
jg
inc
pop
aas
fcoml
or
push
push
sub
fsubl
push
xchg
sbb
and
jge
sbb
adc
pop
int3
mov
push
sub
mov
push
loop
push
mov
mov
leave
adc
ret
movsb
call
mov
cmpsb
insb
adc
inc
aad
cmc
mov
sbb
popf
adc
call
jle
push
push
sbb
aad
pop
movsb
rorb
xor
and
mov
fsts
xlat
push
lods
and
outsb
aaa
nop
xor
movsb
sub
cmp
sub
data16
pop
in
or
xchg
ficoml
push
popf
pop
bound
sub
int3
inc
jecxz
gs
lcall
aaa
mov
int3
je,pt
add
xchg
call
sahf
repnz
out
jecxz
cmp
fcoml
call
push
xlat
int
cmp
call
xlat
inc
test
jne
push
jne
pop
mov
pop
fdivrs
movsl
mov
push
jp
int3
das
push
fstl
or
mov
mov
inc
stos
in
inc
add
mov
popf
cmp
inc
mov
sub
xchg
mov
jp
dec
cmp
push
add
jl
fcmovnu
add
out
push
cmp
adc
mov
and
mov
fildll
add
jl
cmp
xchg
push
lahf
add
inc
call
inc
mov
ja
sub
in
inc
rcr
jl
sbb
jl
push
stos
mov
std
xor
add
mov
jge
adc
cmp
jne
ds
mov
cmp
mov
mov
push
inc
or
outsl
int3
cmc
in
jl
aas
jle
mov
out
mov
or
and
fisttps
jbe
mov
sub
dec
push
out
lahf
xor
add
aas
adc
test
jl
andb
aam
xchg
sbb
sub
adc
mov
pop
mov
push
push
aad
inc
fs
xlat
lds
leave
inc
jge
push
icebp
push
mov
inc
ret
push
dec
imul
and
add
cmp
and
arpl
ficompl
fisttpl
test
mov
loope
in
das
push
inc
xchg
ficomps
xor
pop
mov
push
mov
cmpl
push
adc
mov
push
mov
pop
jg
stos
insb
mov
cltd
xchg
xchg
dec
inc
push
jmp
into
fsubrs
inc
ds
jo
addr16
cmp
sub
neg
setns
in
ja
adc
dec
lds
iret
pop
ret
jl
gs
push
xchg
pop
out
inc
xchg
xlat
daa
cld
push
leave
inc
pop
mov
data16
inc
fisubs
xchg
jl
push
and
dec
jns
mov
ss
pop
aad
dec
mov
push
clc
push
mov
bound
bound
in
lds
cld
dec
push
sub
jns
out
push
adc
dec
pop
mov
fdivl
lods
cmpsl
inc
sub
dec
pop
xchg
inc
add
push
mov
and
nop
pop
and
je
lahf
xchg
fsub
adc
dec
test
fdivl
into
popf
mov
enter
in
psrad
out
leave
or
shrl
test
leave
lahf
jne
inc
pop
mov
xchg
jne
insl
nop
mov
adc
mov
addr16
push
adc
int3
out
movsb
daa
pop
mov
inc
movsl
lods
notb
out
insl
aas
inc
mov
and
inc
int3
test
push
or
faddl
push
sub
xchg
in
dec
dec
add
jge
xchg
or
dec
dec
and
fmull
xorps
lock
xchg
jns
out
fcompl
push
push
mov
mov
cltd
pop
push
add
mov
xor
adc
mov
dec
lcall
push
adc
leave
jbe
sbb
addl
pop
movsl
sbbl
sbb
mov
nop
add
aam
or
int3
aas
je
test
out
mov
mov
pop
lcall
lods
test
cmpsl
mov
cmc
movsb
scas
xchg
xchg
xchg
fsub
mov
mov
in
push
mov
jp
pop
pop
jl
mov
data16
sub
xchg
lods
mov
xor
test
sub
gs
lea
jl
xchg
lahf
pop
leave
popl
mov
mov
xor
rclb
sysret
lods
sbb
dec
addr16
jl
mov
jl
or
aas
bound
push
in
lcall
cmpsb
mov
pop
or
loop
enter
or
das
push
leave
das
into
dec
mov
pop
mov
mov
mov
nop
xchg
add
int3
aam
sub
pop
xor
mov
sbb
push
int
and
loopne
subl
lret
xchg
inc
and
xchg
mov
inc
cmpsb
add
dec
inc
add
lahf
jg
cmp
stos
lods
lods
popf
popa
mov
test
mov
inc
rol
scas
adc
sub
add
add
push
mov
xlat
inc
xchg
cs
xor
and
mov
inc
aam
cld
add
out
and
sub
push
hlt
fsubl
aam
xor
in
cmp
inc
ja
lea
test
adc
adc
sahf
mov
out
mov
sbb
mov
mov
ds
daa
int
ret
aaa
inc
cltd
mov
inc
mov
aad
jne
inc
pushf
add
aad
out
mov
sub
mov
push
aaa
stos
pop
in
xchg
inc
mov
and
xor
test
xor
movsl
and
xchg
jl
fisttpl
dec
inc
pop
inc
int3
add
test
data16
popa
in
daa
scas
int
xchg
pop
xchg
xchg
cmc
outsb
scas
imul
lret
or
mov
nop
loope
mov
gs
nop
les
hlt
dec
es
idivl
in
cmp
mov
xlat
pop
xchg
lea
inc
mov
out
dec
and
jg
das
movsb
jbe
push
and
jg
mov
inc
lea
mov
movsl
push
pop
test
mov
inc
xchg
inc
in
pop
sbb
push
inc
movsl
xor
mov
xor
lock
loope
mov
xchg
daa
dec
inc
sbb
and
pusha
sbb
pop
loopne
and
movsl
xchg
jae
in
leave
nop
lahf
or
lds
cmp
mov
and
sub
mov
xor
mov
fcomp
and
cmp
pop
ret
nop
sbb
dec
dec
icebp
sub
insl
xlat
out
sahf
gs
or
pushf
pop
frstor
iret
dec
or
ss
push
mov
and
cmpsb
arpl
and
jl
sub
lds
mov
push
aas
sbb
das
insb
jecxz
pushf
nop
push
dec
cmpsb
xchg
das
gs
fstps
test
cmp
popa
sahf
and
daa
jle
in
lods
xor
insb
dec
pop
push
xchg
jle
xor
popf
adc
add
jns
xchg
inc
mov
imul
mov
add
mov
adc
fs
inc
pop
enter
mov
fmul
xchg
es
loopne
inc
push
xor
adc
aad
cmp
movsb
mov
xchg
in
fnstenv
cmp
jl
mov
loopne
outsb
iret
cld
dec
add
push
or
outsl
mov
outsb
pop
mov
in
pop
inc
fidivrl
repnz
dec
add
and
loopne
cltd
mov
fnstenv
sbb
shlb
or
and
loope
and
mov
xchg
mov
into
mov
jl
test
mov
out
jne
sbb
daa
sub
push
dec
jne
cld
loope
call
add
cs
out
or
movsl
in
les
mov
jg
lds
rcl
cltd
es
fwait
inc
and
mov
sbb
nop
or
lods
jg
cltd
sbb
movsb
mov
mov
cmp
or
xchg
sub
fs
hlt
cmpsl
pop
push
push
outsb
in
lcall
cmp
fs
sub
add
sub
aad
repz
sti
dec
aad
xchg
push
xchg
mov
and
insl
das
inc
pushf
inc
push
aad
cmc
mov
lea
cli
and
jge
testb
fadds
mov
dec
testl
or
daa
jmp
jg
xchg
hlt
in
aad
push
cld
rclb
inc
je
std
inc
insb
fnstsw
dec
and
add
push
mov
push
outsb
fs
cltd
mov
mov
add
mulb
mov
pop
loope
leave
shl
movsl
imul
lds
outsl
mov
das
dec
cmc
jecxz
add
cmp
adc
aaa
dec
dec
loop
add
cs
mov
push
dec
pop
daa
pop
ror
pop
mov
pop
in
aad
sbb
sub
inc
das
jne
inc
insb
std
inc
in
xlat
in
sub
add
mov
scas
pop
sbb
add
mov
add
xor
and
push
and
inc
lea
scas
inc
rorb
in
xor
bound
cmc
mov
add
xchg
sbb
sbb
inc
add
iret
fwait
xchg
cmp
in
in
sbb
jl
push
scas
mov
mov
push
sub
ret
pushf
outsb
xchg
jp
mov
mov
inc
cmpsb
sub
in
pop
outsb
data16
xchg
shrl
rolb
aaa
iret
gs
loop
inc
into
cmp
lahf
imul
in
andl
int
and
je
adc
dec
leave
out
test
dec
std
mov
mov
mov
daa
cmc
nop
mov
and
cwtl
ficomps
pusha
or
mov
and
xchg
push
push
data16
out
push
push
aam
lods
xchg
pushf
xchg
dec
aaa
scas
xor
xchg
sbb
jbe
pop
stos
paddq
mov
xchg
leave
mov
cmp
cltd
lahf
mov
cmp
mov
aad
xchg
mov
cvtdq2ps
insb
popf
shrb
nop
mov
mov
dec
aas
pop
lea
jmp
scas
addr16
outsb
cld
dec
push
gs
cli
ds
fimuls
ljmp
xchg
push
mov
aaa
jg
call
mov
adc
inc
lahf
addr16
test
add
push
mov
movl
das
ret
in
test
inc
mov
push
mov
jb
pop
popf
lds
jbe
dec
ret
inc
call
cltd
xchg
aam
jae
gs
popa
xor
shlb
dec
test
sub
data16
xor
dec
mov
push
lcall
mov
outsb
and
arpl
in
imul
scas
movsl
iret
ss
xchg
arpl
and
movsl
loope
lcall
jecxz
aaa
out
xor
aad
push
imul
outsb
mov
and
fimuls
add
fiadds
popf
dec
mov
addr16
push
outsb
notl
mov
mov
push
lds
out
mov
lods
inc
movsl
inc
push
jbe
dec
pop
popf
fucomip
inc
xchg
push
adc
daa
outsl
iret
mov
push
xchg
pop
sbb
daa
push
cmp
dec
out
cmpsb
jne
outsl
clc
cmp
movsl
out
jns
sbb
jecxz
adc
movsb
cmp
dec
test
xchg
mov
in
sub
xlat
push
ds
and
push
pop
mov
cli
imul
fmull
sub
sbb
iret
push
rorl
daa
dec
push
jb
fsubl
lret
sahf
stos
mov
inc
jl
sbb
adc
mov
dec
nop
xor
cmpsb
int
loope
push
add
test
pop
rcl
std
inc
or
adc
dec
sub
jbe
cmpsb
iret
jmp
inc
les
cmp
dec
pop
mov
outsb
mov
outsb
mov
jmp
mov
sub
jns
xchg
lea
xor
pushf
mov
adc
dec
repnz
psrld
inc
lods
scas
mov
mov
cmp
push
out
pushf
xabort
add
xchg
imul
push
cmp
jo
jb
cwtl
imul
js
mov
fst
sbb
mov
popa
mov
cmp
scas
xor
jne
push
xor
xchg
xor
jp
dec
sahf
push
mov
lds
icebp
outsl
mov
dec
inc
mov
es
xchg
and
push
loopne
pushf
int3
mov
popw
cli
imul
xchg
mov
mov
jle
sahf
rep
loopne
in
lds
xchg
cmp
xchg
push
out
sbbb
sub
movsl
arpl
lds
mov
ss
sub
jne
xchg
adc
sarl
push
mov
es
push
lahf
in
dec
xchg
outsb
lcall
xchg
shll
xor
mov
sahf
cwtl
sub
mov
addr16
sub
fistps
shlb
sub
das
cwtl
inc
cmc
arpl
add
cmp
subb
ss
mov
outsl
dec
or
xchg
pop
sbb
sub
inc
mov
shll
mov
repnz
sti
push
push
aad
adc
sub
jecxz
dec
mov
pop
nopl
les
aam
mov
pop
push
movsb
inc
adc
notb
xlat
cwtl
and
cmc
inc
shll
leave
xchg
es
jg
es
lahf
pop
outsl
in
jecxz
and
lea
dec
shlb
aam
lret
dec
mov
aaa
mov
in
test
or
int3
fcoms
push
scas
lea
decl
je
gs
adc
stc
cs
ret
xlat
dec
int3
mov
iret
repz
push
jae
mov
cmpsl
lock
call
scas
push
in
popf
decl
cmc
mov
and
push
ret
cmp
cwtl
leave
xchg
mov
leave
jmp
vpunpckhdq
push
rcrb
aam
and
pushf
dec
pop
dec
sub
pop
jae
jmp
aaa
mov
clc
jno
xlat
sarb
mov
mov
gs
lahf
mov
test
adc
hlt
push
fisubrs
mov
and
or
ficoms
dec
jne
sbb
addr16
push
mov
mov
stos
nop
xchg
insl
mov
xchg
adc
xor
dec
aaa
dec
push
mov
push
faddp
shrb
jle
pop
mull
mov
push
pop
lss
movsb
or
xchg
je
inc
daa
les
xor
inc
std
sub
fisubrl
jmp
call
test
lods
dec
out
push
push
inc
fdivs
mov
inc
pop
gs
mov
jne
jns
push
test
push
movb
xchg
mov
xchg
kunpckbw
int
repz
and
outsl
inc
imul
mov
and
or
movsl
xchg
mov
movsb
mov
pslld
cmp
fmulp
push
iret
jecxz
clc
fsubr
fcmovb
and
cmpsl
xchg
lds
mov
lds
cmpsl
dec
push
lods
and
and
fs
int3
test
imul
loop
pop
gs
insl
jbe
xor
jne
sub
out
popf
into
jle
push
bound
pop
sub
in
jns
out
iret
mov
popa
int
mov
mov
pop
xor
xchg
push
scas
ss
push
sub
inc
arpl
dec
imul
and
jp
lds
loop
push
mov
insb
push
dec
scas
mov
ljmp
fwait
pop
ja
scas
dec
add
outsb
cmp
popa
ja
adc
mov
into
imul
jp
iret
repnz
addr16
and
ja
mov
jge
mov
mov
jno
mov
xor
and
in
mov
push
daa
ljmp
lea
xor
xchg
and
out
mov
clc
dec
inc
movsl
or
lcall
push
cmc
fisubl
inc
popa
ds
je
inc
mov
sub
pop
and
sbb
mov
outsb
fxch
dec
movsb
ss
mov
das
mov
dec
xor
in
inc
leave
ja
xor
add
ja
aaa
mov
and
jnp
xchg
mov
int
vpinsrw
inc
mov
mov
jmp
test
int3
mov
fnstsw
sbb
cmc
into
and
mov
out
mov
pop
daa
lods
jne
daa
test
mov
dec
push
mov
stc
sbb
sub
adc
lods
cli
adc
nop
and
inc
sbb
bound
sub
in
mov
cli
push
test
fsubr
addr16
mov
sub
js
xchg
in
push
nop
add
lahf
stc
sbb
sbb
fs
push
shr
lods
repnz
lods
je
mov
imulb
ss
dec
out
sub
add
mov
test
aam
jmp
ljmp
pushf
data16
inc
inc
shlb
pop
cmc
mov
popa
int3
mov
push
push
cltd
lods
test
push
nop
leave
push
push
dec
lret
mov
scas
pop
repnz
cmp
clc
jnp
cli
xchg
stos
mov
leave
outsb
and
mov
cmpb
mov
hlt
ficoms
xchg
jmp
mov
xchg
lods
cwtl
mov
out
xor
test
inc
int
dec
mov
rcrl
push
xor
pop
dec
dec
xor
and
sub
jno
stc
clc
lea
adc
daa
out
and
lds
cmc
mov
mov
pop
cmc
and
fcmovbe
sahf
mov
mov
test
dec
push
ret
sbb
fdivl
scas
aas
in
div
push
push
xor
shl
mov
cmp
out
xor
jle
repnz
lcall
mov
popf
daa
mov
hlt
cmpsl
xor
mov
jl
imul
testb
sub
and
daa
and
cmp
call
gs
xor
and
adc
testl
repnz
mov
cwtl
pop
out
adc
push
mov
pop
xchg
int3
push
mov
aas
push
nop
mov
push
int
jmp
xchg
call
mov
aas
sub
das
cli
sub
sahf
mov
xchg
mov
ss
sbb
or
scas
push
jb
xchg
mov
js
cwtl
imul
mov
loope
enter
inc
rorb
xchg
lds
push
pop
sbb
push
icebp
push
and
into
push
mov
test
mov
int3
xor
push
cmc
cwtl
ret
aaa
out
pop
out
pushf
roll
movsl
jecxz
jbe
push
js
testl
inc
xor
sub
ds
lea
iret
inc
pop
dec
mov
ljmp
pavgw
or
push
cmp
in
add
mov
imul
push
cmp
jne
xor
mov
movsb
ds
gs
sub
mov
sbb
aad
sbb
jl
mov
pop
jb
mov
into
cmc
xor
xor
jns
ja
xor
in
push
xchg
scas
and
inc
insl
addr16
hlt
mov
xchg
mov
nop
ficoml
hlt
mull
popf
mov
xlat
movl
loope
cwtl
outsl
iret
test
or
mov
mov
mov
pop
lock
mov
jo
push
test
pop
fbstp
push
dec
insl
into
mov
rclb
xchg
inc
mov
inc
daa
jne
lret
inc
mov
xchg
shr
xchg
jb
bts
lds
std
push
inc
jno
cmp
addr16
push
xchg
div
mov
sbb
cmpsl
out
sub
mov
les
cmp
out
sbb
pop
popa
insb
jno
pop
xor
fistpl
ja
lods
lds
inc
in
and
jne
nop
cmc
fimull
mov
arpl
aaa
pop
lret
out
sti
cmp
xchg
lock
dec
dec
fiaddl
in
arpl
daa
mov
and
add
int3
lds
sub
int3
ficoml
xchg
inc
inc
pop
fwait
pop
mov
push
mov
sbb
jbe
roll
lds
jae
mov
sbb
arpl
dec
pop
jg
sub
mov
mov
xchg
cmpsb
xchg
mov
lods
inc
adc
stos
in
insl
gs
xchg
fidivrs
add
cmp
mov
lahf
into
loopne
mov
jecxz
jbe
and
pop
insl
jl
push
mov
cmpsl
mov
ret
fimuls
leave
popf
lahf
add
mov
aam
addr16
loope
mov
xchg
mov
fs
jp
cwtl
jo
fistpl
ss
dec
pop
inc
out
fisubl
push
jl
lds
mov
nop
jne
jae
sub
aaa
cmp
mov
gs
test
dec
repnz
iret
jmp
mov
cli
adc
data16
push
dec
mov
sub
out
dec
inc
dec
push
adcl
xchg
les
in
jns
cmpsl
pop
out
sbb
movsb
jne
sahf
or
mov
not
jg
lods
fwait
and
xor
push
lods
xchg
js
sub
mov
mov
and
hlt
bound
cs
daa
xchg
iret
lahf
mov
mov
mov
jnp
hlt
mov
sub
mov
lea
add
xchg
outsl
pop
loope
imul
out
pop
mov
mov
cmpsb
scas
lea
mov
mov
test
dec
stos
adc
xor
or
outsl
sub
insl
push
jne
int
addr16
xchg
jmp
push
daa
push
push
rol
lret
int
inc
and
movsb
and
dec
jnp
adc
pop
cmp
xchg
std
dec
ljmp
in
fdivl
lds
cmp
and
mov
sub
es
push
pop
jp
in
outsb
adc
jecxz
in
jg
data16
sub
inc
hlt
jbe
and
xchg
mulb
gs
gs
and
aas
dec
adc
inc
rorl
xchg
mov
cmp
in
ds
imul
repz
lahf
dec
mov
mov
in
xchg
sub
jae
jmp
adc
dec
stos
in
jne
pop
es
hlt
push
lcall
adc
jbe
mov
and
and
ret
mov
movsl
outsl
xchg
call
mov
lea
sub
ret
sahf
icebp
mov
es
mov
pop
jp
gs
push
stc
fwait
pop
adc
cmpsb
jne
xchg
cmp
in
sub
mov
push
inc
sarl
push
out
inc
stos
daa
add
out
iret
cmpsb
sub
and
push
pop
icebp
mov
adc
insl
in
push
push
ret
out
stc
aad
dec
iret
cli
cmp
popa
mov
rcll
xchg
fsts
sahf
xchg
insl
divb
cmc
xchg
imull
movsl
test
jns
int
jns
mov
popa
lods
clc
mov
inc
mov
dec
jae
pusha
ds
pop
xchg
inc
std
mov
pop
int3
outsb
and
jp
fcoml
xor
gs
jb
mov
shrb
jecxz
jns
cld
dec
inc
pop
int
popf
dec
inc
dec
insl
pushf
dec
mov
inc
cmp
out
push
lcall
jns
ss
adc
js
daa
inc
popa
lods
popf
inc
fstl
dec
je
repz
cwtl
jb
popf
ss
js
mov
movsb
inc
jne
shl
popf
mov
and
fildl
lds
out
inc
dec
mov
iret
sbbl
dec
ljmp
and
jg
test
xor
mov
cmp
imull
or
inc
ljmp
les
mov
fisubs
xor
xchg
inc
mov
rcll
out
or
in
lcall
and
fwait
je
jns
jp
xchg
shll
mov
cmc
jns
in
mov
adc
adc
jecxz
divb
iret
mov
mov
and
sahf
test
hlt
cmp
clc
aam
loop
out
int3
jnp
sub
mov
andnps
mov
test
push
push
mov
push
xchg
jmp
inc
imulb
adc
cmp
hlt
gs
sti
outsb
dec
dec
and
call
imulb
mov
sahf
leave
push
imull
adc
gs
mov
ficompl
shll
pop
outsb
mov
out
stc
inc
popa
mov
inc
mov
mov
push
dec
fcompl
ret
loope
jbe
sbb
fimuls
pop
in
mov
lods
mov
dec
lods
and
psubd
sahf
push
mov
in
ljmp
mov
dec
jae
stc
mov
mov
xor
test
jecxz
sti
dec
jge
pop
xchg
xchg
and
aaa
sbb
mov
divb
dec
shrb
cmpsb
test
pop
mov
movlps
pop
cmp
into
filds
xorb
lahf
mov
out
outsb
mov
push
pop
mov
pop
imul
cli
jbe
mov
push
outsl
pop
aam
cmc
mov
push
lcall
mov
test
ja
push
dec
mov
mov
stos
clc
in
gs
cmpsb
pop
xchg
outsl
cwtl
imul
push
aad
xor
in
into
neg
pop
clc
les
incb
cmp
divl
add
mov
cwtl
clc
and
push
push
dec
das
mov
pop
sub
xchg
mov
push
xchg
mov
push
test
sbb
mov
test
jae
shr
outsb
jb
lds
xlat
jbe
out
sub
or
push
dec
popf
das
in
push
push
aas
icebp
dec
jl
sub
inc
cmc
ds
movsl
sete
dec
gs
jecxz
call
xchg
push
xchg
in
and
rol
sub
inc
ljmp
test
movsb
fwait
pop
sti
jns
cld
out
add
inc
in
rorl
test
ljmp
adc
es
imull
insl
add
push
xlat
jb
cs
rcrl
mov
adc
std
jns
mov
rcll
enter
mov
lcall
jecxz
popf
out
popa
stc
adc
jbe
pop
insl
insl
inc
push
cltd
outsl
mov
je
xchg
push
enter
push
scas
jne
adc
cmpsl
popa
adc
pop
mov
aas
jmp
or
mov
ss
test
xchg
xchg
mov
fs
inc
mov
shlb
jle
mov
xchg
in
into
mov
lods
cmpsl
aad
iret
pop
push
sbb
sysexit
jl
mov
gs
push
mov
in
stos
mov
sti
loopne
cmp
into
sti
loope
je
inc
data16
jecxz
aas
push
xchg
push
inc
push
dec
xchg
and
push
and
hlt
popf
dec
sub
xchg
pusha
ljmp
dec
aam
sub
ds
pop
xchg
test
imul
adc
loopne
sub
mov
out
aam
or
inc
repnz
mov
mov
pop
sub
jno
into
repnz
lcall
in
mov
clc
inc
movsb
cwtl
mov
inc
pop
push
mov
jl
inc
jge
int3
pop
jne
mov
sub
sub
mov
xor
gs
xchg
and
fisubl
jl
mov
and
add
movsl
sbb
jb
lea
lret
into
out
leave
mov
ret
inc
cld
mov
adc
mov
jo
nop
jle
jb
mov
cmovp
mov
xchg
cmp
scas
jge
outsl
ds
mov
insl
sbb
push
inc
pop
mov
in
sbb
pop
loop
out
ds
jecxz
stc
mov
cmp
xchg
xchg
out
punpckhwd
mov
out
aas
mov
and
sub
fsubrs
jne
fldcw
pop
gs
inc
lods
fwait
xor
popa
test
inc
jge
xchg
jbe
into
cmpsl
clc
inc
sub
inc
jb
loope
iret
lea
xor
out
pop
mov
cmpsb
mov
dec
push
jb
mov
vpshufd
ficomps
mov
lds
adc
push
cmpsl
ss
inc
loop
stos
and
ret
fists
repnz
xchg
loopne
hlt
icebp
in
fwait
test
pop
cmpsl
into
out
pop
mull
stos
scas
or
addr16
jno
cltd
sbb
push
int3
push
mov
pop
mov
mov
jno
fdivrl
movb
mov
test
adc
ret
iret
not
lea
jmp
gs
addr16
cmpsb
aaa
mov
and
ds
pop
rcl
out
mov
daa
lahf
sbb
lods
mov
jp
arpl
mov
popa
pop
inc
dec
btrl
shll
aam
ja
cmc
and
or
jl
cmp
jle
cmp
adc
repnz
daa
outsl
lcall
sti
adc
je
xchg
sarl
pop
mov
repz
mov
shlb
jns
jae
push
popa
or
repz
das
and
out
scas
mov
sbbb
push
xor
sub
inc
dec
repz
les
outsl
repnz
ja
cmp
sub
cmpsl
in
mov
jns
jmp
push
cltd
imul
addr16
rorb
mov
jp
mov
and
test
inc
dec
jae
sarb
jbe
jno
push
cli
xchg
or
push
inc
pusha
mov
mov
and
cmc
xchg
dec
shr
and
pop
cmc
out
mov
cld
mov
or
lea
int
adc
mov
divl
dec
jbe
ret
in
dec
inc
pushf
xchg
and
mov
mov
and
iret
out
adc
data16
inc
repnz
mov
mov
daa
cmc
pop
jmp
fistl
scas
ror
mov
push
mov
insl
cmp
lds
lea
es
push
pop
outsl
sub
sti
dec
loope
sbb
in
mov
push
imulb
pop
add
xchg
mov
push
aad
xchg
and
cmpsl
mov
stos
lods
push
loopne
in
mov
sahf
inc
inc
push
lahf
into
pop
nop
outsl
mov
pop
and
inc
mov
shll
pop
lahf
push
sti
jns
fstpl
inc
pop
pop
pop
repz
dec
sbb
out
insb
mov
dec
cmp
sbb
test
insl
in
out
int3
inc
lock
inc
adc
xor
cmp
sub
mov
cwtl
dec
or
or
push
out
dec
lea
lods
dec
mov
fsubl
or
push
jns
test
and
xchg
jb
adc
mov
xor
pop
outsb
pop
rep
lret
scas
test
inc
sub
add
icebp
dec
aas
and
movsl
in
roll
xchg
decl
xchg
mov
jg
out
out
cmc
rolb
lds
sahf
imul
pop
aas
or
mov
dec
xchg
into
ss
lods
dec
xor
icebp
mov
and
call
popf
push
lods
jae
mov
mov
gs
into
lcall
sbb
lahf
xchg
xchg
dec
in
out
xor
or
sub
divb
pop
aad
stc
sbb
out
sub
icebp
xchg
and
adc
mov
jns
fimuls
cmp
sub
xchg
out
in
mov
cmc
fbld
mov
inc
pop
out
xchg
outsl
fcmovbe
add
stos
jecxz
sahf
fdivr
out
in
mov
xchg
and
xchg
imul
xlat
mov
sahf
cmpsl
xor
lahf
xchg
mov
das
and
xor
mov
push
mov
and
in
movsb
mov
clc
jecxz
mov
in
jne
xchg
test
push
movsl
jns
dec
aas
xor
mov
xchg
inc
icebp
cltd
in
sbb
xchg
xchg
ret
lea
fcmovnbe
andb
push
jmp
inc
mov
xor
sti
xchg
dec
cmpsb
mov
xor
xchg
push
lret
cmp
lods
aam
cli
adc
xor
leave
movd
mov
sti
mov
jae
push
js
lcall
movsl
nop
mov
sbb
in
daa
xor
rolb
mov
gs
std
lods
jns
and
imul
lods
ss
inc
xchg
negl
sub
adc
repz
fdivl
mov
jge
addr16
int
mov
je
xor
das
popf
fs
cmp
aad
xlat
push
in
and
ja
xchg
in
jnp
pop
shll
xor
mov
pop
cmpsl
sbb
mov
stos
pop
cltd
aam
fcomi
xchg
mov
fcomip
stc
lock
in
jbe
test
int3
shlb
xchg
arpl
dec
out
test
iret
fnstenv
xlat
lcall
pushf
lcall
mov
jns
lea
cmc
push
lock
inc
movsl
repz
testb
pop
jl
ljmp
jne
aas
cmpsb
mov
stc
popa
xchg
and
pusha
mov
fstps
in
cvtpi2ps
xchg
adc
imul
push
jmp
mov
xlat
outsb
rolb
mov
out
inc
lret
xlat
in
inc
leave
mov
stos
and
pop
jecxz
in
jg
fdivrl
test
nop
mov
cmp
mov
test
daa
in
imul
mov
inc
es
aaa
mov
and
push
fwait
cmc
mov
out
add
mov
cmp
or
push
jne
sbb
stc
push
jp
stos
dec
test
jne
jno
pop
movsb
sub
jmp
inc
in
lahf
inc
jl
imulb
sbb
xchg
hlt
lahf
jne
fidivs
test
mov
mov
mov
jp
sub
ja
adc
orb
mov
xor
mov
mov
sahf
mov
mov
mov
repz
and
cwtl
push
into
sbb
jbe
cltd
sub
test
insl
int3
iret
dec
mov
mov
test
and
push
mov
out
cmp
mov
xchg
test
sbb
and
adc
clc
stc
jl
ret
out
shr
jle
stos
xchg
pop
mov
pop
imul
je
jno
mov
jae
jge
stc
pop
in
addr16
mov
repnz
out
cmp
mov
and
daa
ds
jmp
mov
sub
std
sub
popf
jne
repnz
xor
xlat
test
ret
sbb
loope
test
or
mov
mov
xchg
int3
pop
mov
mov
add
jb
pop
xlat
cli
cmc
iret
insl
add
or
push
loop
cmpsb
and
in
jb
movsl
arpl
and
ja
movsb
popf
mov
inc
or
inc
mov
lret
data16
pop
outsb
or
mov
loope,pn
icebp
and
ret
xlat
sbb
mov
xchg
jmp
sti
adc
call
cmp
mov
inc
pop
test
movsb
push
push
into
fs
inc
repz
jecxz
and
ljmp
test
cmpsb
cmp
mov
icebp
xbegin
mov
adc
pop
push
adc
loop
insl
inc
out
cmp
lahf
loop
and
leave
pop
into
test
cld
push
mov
xchg
and
imul
adc
stos
jnp
scas
sub
jbe
inc
lea
fs
arpl
gs
dec
fldt
addr16
dec
loope
mov
pop
mov
out
push
mov
xlat
scas
mov
mov
pop
jp
gs
pop
sbb
jno
inc
jl
dec
cmp
lods
jns
loope
mov
ljmp
or
pop
ja
stc
cwtl
imul
ret
mov
inc
lahf
lds
push
daa
insb
int
pop
fdivl
leave
es
repnz
adc
fsubl
daa
pop
cmp
sub
xchg
jnp
jae
in
jae
iret
shll
repz
mov
lcall
clc
pop
fwait
lds
push
repnz
xor
push
sub
fistpll
mov
adc
mov
pop
icebp
clc
jne
mov
shll
push
push
in
mov
nop
test
sti
imul
jg
jnp
nop
lds
adc
es
fsqrt
imul
cmc
sahf
jg
ljmp
sbb
jmp
mov
push
scas
xchg
xor
and
repz
jne
lret
gs
xchg
xchg
push
cld
cs
movsb
pop
adc
call
fucomi
xor
shll
je
jns
movsl
sub
mov
dec
push
jno
shrb
push
inc
push
inc
stos
mov
lods
cmp
out
push
out
arpl
mov
jmp
int
andb
push
jbe
push
jnp
jl
inc
insb
gs
cmp
stos
sub
mov
int
or
add
mov
sub
jno
int
pop
push
mov
xlat
sbb
nopl
and
out
sub
nop
add
hlt
pushf
repnz
sub
insl
das
outsb
sub
in
sbb
mov
adc
pushf
jns
out
push
mov
rcrl
mov
aam
jnp
data16
addb
xor
cmpsb
mov
test
pop
mov
sahf
and
lea
testb
sti
lods
sub
jo
dec
xor
mov
dec
xchg
adc
dec
fidivrs
ja
push
xor
push
test
pop
int3
mov
mov
mov
push
cmpsb
lods
jge
cmp
and
jb
cmpb
ljmp
aad
cmp
imul
push
push
pusha
cmpsb
mov
push
loop
add
or
inc
push
out
sarb
inc
dec
into
mov
xor
mov
cmp
pop
lret
lods
sbb
daa
icebp
popl
inc
jle
adc
push
movsb
jns
xchg
sub
data16
inc
subb
out
sub
lods
cmp
roll
in
data16
and
aad
mov
mov
dec
xchg
rorb
dec
sub
mov
sbb
adc
mov
inc
pop
and
popf
int3
mov
mov
movsl
inc
adc
mov
inc
cwtl
or
jno
aam
hlt
fisubs
daa
push
test
in
cmp
mov
aas
rcll
in
pushf
xchg
hlt
xchg
std
adc
xchg
adc
cmp
pop
imul
fldl
into
into
cli
inc
out
mov
adc
xlat
pushf
sub
mov
int
mov
sti
sub
jnp
addr16
push
inc
push
xor
mov
addr16
or
add
cmp
adc
cmp
aam
add
rcrl
dec
faddl
loopne
in
pop
int
aad
fucomp
in
in
or
sbb
sub
cmp
dec
cmc
pop
cmc
push
jp
mov
lcall
cmc
ljmp
cmc
sub
cmp
dec
cmc
pop
cmc
imul
cmc
mov
xor
mov
sbb
aam
in
xor
fsubr
xor
pop
fsub
ds
lahf
test
add
sbb
leave
in
cmp
mov
int3
lahf
fdivl
or
lret
cmp
lret
xor
lret
repnz
xlat
mov
pushf
lahf
mov
iret
fists
sub
out
scas
out
mov
out
out
out
out
pxor
clc
jo
mov
sahf
mov
add
rol
mov
enter
divb
or
shrb
pop
jle
fsubr
mov
loopne
jo
sub
in
mov
clc
sar
loopne
lock
add
adc
and
xor
inc
clc
push
clc
popa
clc
jno
cmp
mov
sar
clc
loope
icebp
clc
add
adc
and
xor
inc
clc
push
clc
clc
jb
cmp
clc
mov
push
xor
into
xor
hlt
dec
sub
lcall
inc
sbb
jge
cli
cltd
pop
sbb
inc
push
in
add
rclb
xor
int3
loope
mov
shrb
add
and
movsb
lahf
cmc
scas
push
mov
fmuls
in
popf
lock
sti
xor
int3
movb
test
loopne
xchg
int
aad
cmc
in
cmc
std
cmc
mov
pop
sbb
insb
dec
call
cmp
jle
lock
test
lds
int
push
mov
sub
cmp
loopne
inc
in
call
sti
cmp
lahf
pop
scas
mov
add
les
and
enter
call
jle
loopne
pop
call
jg
clc
lahf
movsb
scas
mov
sbb
and
inc
sti
sbb
or
pusha
lcall
fdivrl
sahf
add
or
sbb
subl
xor
insb
in
inc
xor
lods
dec
mov
or
dec
cmp
hlt
sub
mov
inc
iret
pop
inc
aaa
cmc
ljmp
cmc
pop
cmc
ja
xchg
and
add
sbb
cmp
push
cmp
cmp
push
add
jge
fldl
sbb
mov
sbb
add
fwait
pop
fwait
jne
xchg
fwait
mov
in
fwait
or
jp
xchg
fwait
mov
into
fwait
ljmp
fwait
pop
xchg
ja
movsb
rcl
aad
fstp
insb
adc
jo
jbe
je
jp
hlt
outsb
enter
jo
jbe
dec
pop
fucomip
cmc
mov
sahf
cmc
scas
cmc
mov
cmc
cmc
pmaddwd
cmc
das
cmc
aas
cmc
dec
cmc
pop
cmc
outsl
cmc
jg
lahf
cmc
scas
cmc
mov
cmc
out
jg
lds
cmp
dec
in
pop
cmc
insb
cmc
jl
mov
pushf
inc
lods
pop
jmp
add
in
out
cld
out
or
out
cmp
out
insl
out
jge
repz
lods
out
mov
out
in
out
std
out
push
out
push
out
cs
ds
pop
out
outsb
repz
mov
sahf
out
scas
out
mov
out
out
out
out
pxor
out
das
inc
push
cmc
pop
sbb
lret
out
fisttpl
rorb
sbb
sub
cmp
dec
dec
pop
mov
lret
mov
pushf
lret
mov
lret
in
lret
cld
lret
or
lret
dec
lret
pop
lret
insl
lret
jge
lret
popf
lret
lods
lret
mov
lret
in
lret
std
lret
push
lret
push
lret
cs
ds
dec
lret
pop
lret
outsb
lret
jle
mov
sahf
lret
scas
lret
mov
lret
out
lret
mov
and
cmp
stc
xor
daa
cmp
dec
inc
mov
jp
lret
mov
lret
xor
addr16
xchg
lret
fcmovne
idivl
aas
je
into
in
in
fwait
sbb
xor
call
pop
cmp
xchg
cmp
add
jecxz
jecxz
jecxz
jecxz
repz
mov
inc
jecxz
jecxz
out
je
in
lds
sbbl
out
std
out
push
divpd
cmc
pop
xor
clc
mov
sahf
clc
scas
clc
mov
clc
out
clc
clc
psubb
clc
das
clc
aas
clc
dec
clc
pop
clc
outsl
clc
jg
clc
lahf
clc
scas
clc
mov
mov
sbb
sub
cmp
dec
hlt
pop
clc
insb
mov
test
jp
pop
mov
out
out
out
jmp
push
ds
int
aad
frstor
shr
pop
cmc
push
cmc
out
dec
adc
mov
cmp
cmp
cmp
cmp
dec
aas
stc
or
push
fnstsw
aad
sbb
cmp
clc
jmp
add
cmp
push
ss
xchg
js
and
add
out
dec
out
gs
jge
push
cmc
sbb
adc
ja
stos
insb
fadd
clc
jb
jo
jbe
je
dec
xor
int
cmp
or
enter
mov
mov
mov
aam
clc
lret
sbb
lret
mov
lods
lret
roll
movsb
cli
mov
int3
aad
inc
sbb
cmc
cmp
and
xchg
dec
rol
mov
in
call
lods
xor
fs
dec
sub
in
and
call
inc
or
adc
mov
mov
int3
scas
add
sub
mov
lret
xchg
lcall
fwait
mov
andl
cmp
pop
inc
je
nop
subl
xchg
inc
cmc
insl
cmc
xchg
dec
mov
out
leave
loopne
in
lahf
sbb
push
xchg
mov
out
xchg
data16
cmc
lret
insb
cli
rolb
pop
jo
jbe
je
jp
sbb
aam
cwtl
mov
std
mov
fcoms
cmpsb
sbb
and
arpl
cmpsl
jp
cld
jp
jp
jp
jp
pop
dec
cmp
insl
cmp
lea
popf
cmp
and
add
std
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
int3
out
scas
out
mov
fwait
dec
lcall
mov
mov
fwait
in
fwait
cld
fwait
or
dec
fimuls
pop
lret
insl
lret
jge
popf
inc
mov
cs
fwait
ds
dec
insl
fdivp
int
aad
insb
leave
call
mov
lods
jb
jo
jbe
sbb
cwtl
xchg
or
imul
lret
sahf
lret
mov
cmc
pmaddwd
cmc
inc
cmc
arpl
jg
fwait
cmc
mov
shl
out
insb
adc
cmp
fs
inc
movsb
pop
xchg
add
ss
iret
jno
out
loopne
in
call
or
and
cmp
sbb
fs
orb
ffreep
out
jmp
les
sbb
sub
cmp
dec
mov
mov
pushf
jecxz
jecxz
jecxz
out
fucomp
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
mov
fucomp
in
out
std
out
push
inc
out
cs
sub
adc
cmp
mov
sahf
and
cmp
mov
jecxz
jecxz
jecxz
int3
je
out
data16
scas
test
iret
clc
out
mov
sbb
mov
insb
dec
jl
aaa
pushf
lcall
fwait
in
fwait
cld
or
cmp
mov
jecxz
rolb
insb
dec
int3
js
test
mov
push
mov
lret
inc
cmpsl
mov
insb
aam
push
loop
jge
scas
and
mov
or
sub
inc
mov
jp
inc
mov
data16
jnp
nop
call
out
pop
in
mov
lods
and
in
sub
mov
mov
clc
adc
sub
dec
clc
jbe
pop
clc
push
and
hlt
jge,pn
je
mov
jle
or
ds
mov
std
push
lahf
push
scas
cs
cld
js
jp
jp
dec
sahf
push
mov
pop
adc
cmc
popa
xcrypt-cfb
push
in
call
jb
jo
jbe
je
push
and
jns
xchg
in
aad
or
adc
out
ljmp
int3
push
dec
mov
mov
mov
fnsave
ss
push
or
lods
cmc
cmpsl
cmc
ret
cmc
fildll
sbb
cmp
jp
js
sbb
fadd
sub
dec
les
sti
xchg
lods
pmullw
pop
cmc
outsb
cmc
jle
mov
sahf
cmc
scas
cmc
mov
cmc
out
cmc
cmc
ja
mov
in
call
xor
and
jecxz
int
lcall
leave
out
jbe
sbb
iret
insl
mov
mov
out
or
stos
shlb
mov
insb
sbb
pop
jb
sbb
fdivl
hlt
ds
mov
ss
xor
shlb
je
pushf
mov
dec
jp
scas
loopne
insl
in
call
jp
fsubrl
jb
push
sub
inc
dec
cmp
cwtl
push
pushf
fwait
lods
xchg
mov
in
cmc
cld
cmc
or
cmc
dec
cmc
pop
gs
cmp
cmp
pop
xchg
clc
mov
mov
pushf
cmp
mov
enter
sub
mov
loopne
cmpsl
int
dec
sbb
cmpsb
sbb
sub
or
and
mov
adc
xor
jle
push
filds
mov
pop
aad
shl
in
xor
push
cmc
jp
lcall
aam
jb
push
jno
lock
and
fbstp
fsub
xor
fnstsw
and
sahf
cmp
or
sub
mov
pop
pop
mov
dec
testb
loopne
jo
mov
inc
inc
in
iret
push
insb
in
sbb
push
cwtl
dec
sbb
mov
dec
lahf
subl
xchg
out
rclb
inc
adc
out
add
aaa
jo
jo
jbe
dec
sarb
pop
cld
cmp
jecxz
dec
jp
xchg
lret
mov
sti
mov
lods
push
cmp
and
fstpl
idivb
addr16
sub
out
int
aad
fucom
in
in
idivl
fisubl
sub
sbb
cld
lods
loope
sti
insb
js
nop
pop
test
in
cmp
jno
movsb
rcrl
mov
popa
adc
inc
sbb
fwait
push
fwait
jp
ficompl
scas
and
push
aas
or
test
add
cmp
cltd
cwtl
aas
lds
sbb
addr16
jnp
xchg
fucomp
cmc
xlat
insb
inc
shlb
jo
dec
enter
xchg
fldl
mov
xor
dec
inc
mov
xchg
or
ret
dec
jecxz
jecxz
mov
out
ds
jp
mov
sub
jp
jp
fisubrs
jb
jo
jbe
je
jp
push
movsl
pop
fucom
and
inc
cwtl
push
sbb
lret
fwait
pop
xchg
inc
dec
fmul
lret
sti
mov
mov
adc
xor
jge
std
or
mov
test
xchg
pop
mov
loopne
jg
cld
mov
and
dec
enter
jne
add
push
shrl
outsl
cmc
pmaddwd
jne
and
dec
add
jecxz
jecxz
jecxz
jecxz
int
out
out
pop
lods
aam
mov
lcall
sub
in
xchg
hlt
jnp
mov
std
dec
cmp
mov
iret
ret
andl
aas
popf
pop
cmp
in
inc
inc
mov
lret
jle
int3
cmc
sahf
cmc
scas
gs
cmp
cmp
cmp
cmp
cmp
cmp
pop
sub
xchg
jecxz
jecxz
jmp
call
out
mov
fnstsw
inc
mov
out
out
lods
loopne
push
gs
aad
push
sub
cmpsl
in
lea
push
int3
pop
outsb
test
jp
jp
jp
dec
mov
pushf
scas
mov
movsb
dec
out
and
adc
fiaddl
les
arpl
test
or
sub
adc
fwait
lret
fwait
repz
jbe
mov
add
lds
int
aad
sub
cmp
popl
pop
lods
addr16
sub
pushf
jle
int
fnstsw
in
cmp
sub
fwait
test
aaa
mov
cmp
mov
test
mov
aas
or
jmp
lcall
sub
cmp
dec
in
pop
cmc
insb
sub
pushf
cmp
xchg
in
cmp
and
cmp
jecxz
jecxz
jecxz
jecxz
jecxz
int3
pop
fucomp
in
mov
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
inc
pop
mov
mov
fwait
scas
fwait
mov
out
repz
fmuls
sbb
cmp
cmp
jno
push
clc
pushf
mov
pop
xchg
insb
pop
in
cmp
sub
dec
fwait
pop
insl
jle
lea
mov
xchg
int
mov
std
mov
int
dec
out
pop
adc
and
sbbl
pop
jecxz
jecxz
int
pop
out
outsl
out
jg
lahf
out
scas
out
mov
jno
data16
mov
jbe
cmp
dec
mov
outsl
push
in
ja
movsb
outsl
into
xchg
push
push
sub
or
mov
add
hlt
and
aas
iret
pop
pop
sbb
fwait
scas
fwait
mov
in
or
sbb
sub
cmp
dec
sbb
insb
fwait
jl
mov
lods
out
mov
xlat
add
cld
cmp
sbb
cmc
dec
stc
pop
cmc
insl
cmc
jge
cmc
popf
xor
and
dec
aas
or
out
mov
lock
xor
clc
inc
xor
aas
cmp
pop
or
cmp
xchg
dec
clc
adc
mov
inc
ret
inc
mov
insl
les
ss
sbb
xchg
dec
dec
lods
stc
push
xchg
lods
pop
mov
rorl
push
inc
and
pop
push
mov
shll
jecxz
jecxz
lods
daa
clc
dec
mov
lahf
mov
js
jp
fisubrs
jb
jo
jbe
je
jp
js
jp
jp
jp
jp
inc
int3
jg
in
pop
and
sbb
sbb
fwait
pop
fwait
insl
fwait
jge
lea
mov
fwait
in
fwait
std
fwait
push
fwait
push
fwait
cs
ds
addr16
outsb
push
push
jg
pcmpgtb
push
aad
fldl
jl
xor
mov
fdivs
push
sbb
das
xchg
aas
jg
pop
out
outsl
push
adc
mov
pop
out
bound
cmp
in
pop
pop
sub
add
mov
clc
in
clc
std
cwtl
push
sbb
dec
fildll
mov
adc
fcomip
cwtl
dec
xorl
jecxz
hlt
and
mov
sbb
or
es
jbe
je
dec
pop
jg
mov
pushf
out
lods
out
mov
fwait
cld
fwait
or
cmp
clc
insl
clc
jge
lea
lods
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
dec
mov
scas
out
mov
fwait
out
xchg
sahf
fdivrp
pop
cwtl
das
sbb
xchg
outsl
jle
out
lahf
out
scas
out
mov
loop
cmp
pop
dec
or
or
sbb
sub
cmp
out
mov
lret
mov
pushf
lret
lods
xlat
add
int3
adc
cmc
cmc
cld
cmc
or
or
int
js
push
popf
or
lret
ffree
in
dec
pop
jno
pop
dec
das
mov
out
outsl
out
jg
out
lahf
imulb
js
jp
jp
jp
fisubrs
jb
dec
sub
dec
sarl
out
mov
pushf
out
lods
jb
scas
or
fcompl
or
cmp
in
iret
lea
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
in
outsb
gs
mov
mov
js
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
inc
mov
insl
push
ret
dec
jecxz
mov
hlt
and
sbb
imul
in
clc
sub
lahf
cmc
xor
shrb
xor
or
cmp
insl
sbb
jp
addr16
out
addr16
out
pushf
jnp
push
decb
pop
lahf
cmc
push
push
ljmp
xlat
sahf
nop
pop
mov
sbb
add
pop
xchg
call
aad
jno
xchg
in
mov
add
cwtl
lcall
xor
push
jns
les
test
int
or
jnp
sbb
jp
dec
push
mov
cmc
ds
xor
aas
inc
hlt
aaa
xor
mov
in
jbe
outsb
push
sub
push
imul
in
sub
inc
int
out
mov
das
in
notl
mov
popa
xor
movsl
add
xchg
clc
stc
clc
push
clc
jb
into
stos
dec
cmc
imul
and
jns
or
xor
pop
mov
in
cli
push
popf
xchg
cmpsb
and
loop
mov
in
movsl
clc
sbbl
loopne
cmp
clc
std
nop
xchg
add
cli
jecxz
jecxz
in
push
sbb
aaa
or
mov
lret
imul
or
jmp
imul
mov
cmc
dec
xor
fucomi
hlt
sbb
inc
cwtl
push
lock
fwait
negb
arpl
mov
iret
out
out
int
cld
loopne
mov
inc
pusha
sarl
jge
xchg
cmc
fbstp
loopne
mov
push
in
pusha
aaa
dec
in
lahf
mov
rol
pop
aad
imul
xor
and
sbb
hlt
popa
pop
in
imul
stos
push
mov
xor
inc
add
cmp
test
out
and
dec
jb
and
inc
shlb
mov
dec
jbe
lret
movl
jecxz
jecxz
enter
mov
cmp
fdivs
insb
lds
dec
xchg
in
loopne
mov
sbb
adc
scas
dec
mov
iret
js
jp
push
icebp
or
bound
cmpsl
and
ficompl
cmp
cmp
or
call
pop
jns
out
int
jmp
cmp
dec
and
adc
clc
cmc
adc
imul
jecxz
jecxz
popf
mov
jmp
cmc
mov
cmpsl
jne
or
adc
and
mov
dec
mov
and
les
add
fbstp
sahf
jle
xchg
inc
in
jne
leave
jne
adc
movsl
inc
jb
fsubrl
lcall
fwait
jnp
mov
mov
push
dec
cmp
adc
es
cmp
scas
shlb
jp
imulb
aad
cli
lcall
xchg
jg
lret
out
out
add
inc
and
bound
add
in
lea
jbe
sti
push
call
nop
das
inc
std
jl
leave
sbb
push
mov
jb
jo
jbe
je
inc
bound
sbb
cmp
mov
int
test
cmp
mov
dec
pop
xchg
mov
jecxz
movsl
and
in
xor
and
les
cld
cs
jge
mov
inc
out
jae
mov
mov
sbb
dec
movsb
or
addb
mov
jecxz
jecxz
jecxz
jecxz
int
xchg
out
dec
out
stos
out
imul
adc
fcoml
test
ret
sbb
outsb
push
jns
and
pop
jg
js
add
sub
pop
fisttps
notl
out
mov
jg
push
cli
ret
call
sub
dec
jns
or
xchg
jne
or
adc
mov
mov
pop
mov
push
jl
imul
rol
int
aad
pop
les
jg
jl
enter
call
jp
js
push
mov
lods
js
dec
xchg
cmp
sti
sub
das
dec
shr
pushf
pop
jns
std
pushf
aam
arpl
insl
cltd
pushf
fs
fmull
xorb
sub
cld
dec
hlt
pop
pop
adc
inc
mov
mov
cmp
pop
cmp
pop
loopne
adc
sbb
cmp
and
mov
ffree
lcall
in
xor
clc
fsubrs
adc
ds
std
push
das
sub
add
inc
xor
cmp
rorl
insb
rorb
mov
xchg
repz
cmp
sub
imul
data16
scas
insb
or
test
shrb
push
lahf
fiaddl
inc
insb
aam
jg
pop
cli
sbb
mov
nop
and
mov
fbstp
out
out
into
pop
and
sub
inc
in
dec
fistl
loopne
xor
clc
cmp
sub
xchg
in
add
pop
xchg
jne
stos
aas
or
sti
jns
dec
cmc
push
mov
mov
pop
mov
jle
incl
push
testb
addr16
fildl
adc
out
mov
cwtl
test
lods
jns
inc
cmpsb
or
aas
sub
xchg
ficoml
pop
dec
ret
out
cmpb
xchg
sbbl
mov
mov
out
jp
outsl
mov
and
dec
xchg
mov
into
sahf
psadbw
mov
test
sub
filds
pop
shrl
out
inc
iret
jno
je
imul
daa
inc
jecxz
adc
lods
push
mov
lods
push
pop
dec
pushf
push
adc
in
dec
lret
movl
sbb
aam
mov
cmp
stc
cmp
fdivrp
pop
adc
pop
mov
pop
mov
insb
or
sub
mov
outsb
pop
enter
out
fs
adc
imul
loopne
call
mov
int
fs
jb
jo
inc
jmp
ss
and
ja
das
push
sub
mov
ret
popa
insb
aad
in
cld
fcoms
prefetch
or
or
movsb
sbb
xchg
inc
xlat
sbb
insb
rclb
xchg
clc
adc
push
mov
lods
jbe
and
xor
xor
les
mov
rcr
mov
cmpsl
ss
cmp
and
mov
lods
frstor
or
xor
and
push
or
add
xchg
inc
dec
scas
cmp
cwtl
inc
pop
es
in
cmc
xor
and
cltd
push
mov
ja
lea
mov
scas
loopne
or
lret
js
and
into
jo
jbe
je
jp
dec
dec
jg
mov
sbb
sub
jl
inc
mov
jecxz
jecxz
jecxz
jecxz
mov
add
adcb
mov
sub
inc
push
subl
pop
movsl
mov
insb
mov
popa
jo
jbe
dec
in
cld
mov
push
dec
jg
int3
xchg
sub
or
fistpl
push
sbb
dec
mov
cmpsl
in
mov
in
fsubr
inc
nop
jns
scas
add
psadbw
cs
dec
fcomip
testl
aam
jb
lock
or
pop
aas
cld
syscall
mov
popf
fs
fistpll
xchg
outsl
pop
lods
jmp
aas
nop
add
and
push
out
aas
or
or
sub
xor
xchg
sti
inc
or
xchg
aas
mov
pop
scas
sub
adc
pop
pcmpeqw
xor
inc
pop
aaa
or
out
ret
jb
je
sbb
cwtl
rcrb
negb
adc
pop
faddl
sub
mov
out
lea
push
sbb
xor
fcoml
sub
es
scas
movsl
repnz
ds
bound
pop
xchg
push
xchg
clc
ss
in
aaa
xchg
inc
nop
pusha
ds
lods
inc
jnp
xor
ds
popa
ss
dec
mov
push
icebp
lea
jb
mov
ss
test
push
jb
xchg
loope
push
inc
pop
or
pop
cld
fbld
jle
jl
aas
ja
mov
lret
pop
call
lahf
adc
ret
cli
int
xor
fildll
and
mov
and
dec
jg
cwtl
pop
rclb
jns
and
or
es
outsb
push
das
js
push
sbb
fs
cmc
call
push
cmp
xchg
out
clc
in
add
in
sub
testb
aaa
jns
data16
and
stc
sbb
mull
cld
call
hlt
push
xchg
inc
mov
fiadds
push
xor
add
adc
adc
in
adc
sub
addb
pop
in
in
cwtl
jo
push
sti
mov
jno
orl
in
cmp
mov
fbstp
dec
aam
pop
inc
aad
sub
lds
sbb
mov
leave
in
nop
push
xorl
fs
jge
frstor
ret
mov
push
pop
jns
xor
pop
inc
xor
loop
xor
stos
and
push
inc
lea
pushf
sbb
pop
and
lcall
in
push
pop
daa
ror
mov
out
sub
xor
arpl
push
sbb
mov
inc
addr16
rcrl
sbb
imul
out
mov
lds
jns
daa
aad
dec
neg
jae
lods
call
cmp
xchg
fisubl
dec
adc
in
cmp
pop
sub
sahf
stos
out
sarb
lods
and
mov
jae
fwait
clc
mov
xor
popf
dec
mov
or
pop
jne
dec
xchg
jle
lret
fiaddl
jbe
movsl
push
and
jo
or
test
cmp
cmp
cmp
cmp
sbb
out
fstps
sub
fwait
repz
divb
jo
dec
sub
pop
xchg
inc
pop
add
cwtl
vphaddbd
popa
scas
pop
mov
int3
test
add
mov
xchg
sbb
mov
or
fdivl
and
test
int3
or
call
fiadds
mov
mov
add
popf
inc
adc
cmpsl
dec
js
cmp
rclb
aaa
repnz
push
or
lds
xor
ficomps
lret
mov
sbb
mov
lds
popa
pop
and
daa
lea
out
jmp
int3
ds
xor
pusha
in
xor
gs
mov
sbb
xlat
xchg
or
aas
cld
or
mov
les
addr16
pop
gs
push
mov
fs
xchg
ret
fs
repnz
mov
push
test
and
ret
pop
sti
mov
xchg
jnp
pop
push
xchg
jmp
mov
push
mov
jno
jg
cmp
call
cmpsb
mov
sbb
lahf
cli
and
pop
cmc
mov
and
pop
xor
mov
insb
xchg
xchg
div
not
rcrl
and
pusha
cwtl
test
dec
push
lea
adc
mov
je
je
jp
pop
mov
inc
adc
test
pushf
jp
js
jp
jp
jp
inc
imul
sahf
clc
pop
clc
jnp
xchg
clc
mov
adc
lea
fs
sbbb
loope
cmc
xchg
adc
out
adc
sbbl
adc
imul
out
cmc
xchg
adc
dec
repnz
aaa
jne
add
stc
int3
push
mov
mov
add
in
nop
cmpsl
xchg
add
sti
fbstp
test
hlt
insb
pop
aam
push
jne
inc
ljmp
fbstp
movsb
pop
test
stos
cmp
mov
out
mov
dec
push
jle
inc
movsl
cmc
stos
cmc
sbb
ja
mov
mov
daa
mov
insb
or
jo
in
addr16
lock
mov
or
mov
pop
movsb
jne
daa
dec
mov
jbe
cmpl
repz
mov
push
xor
xchg
pop
sbb
pop
or
and
push
cmp
cmpsb
xor
pop
add
xor
sub
roll
mov
xchg
fnstsw
inc
add
xor
xor
or
xchg
cmp
sub
sahf
pop
xchg
adc
mull
and
nop
sbb
shl
in
adc
or
cmpsl
jecxz
add
adc
loop
cli
mov
cmp
int
xchg
mov
jno
sahf
cwtl
icebp
add
aaa
pop
out
dec
loop
jp
jp
adc
dec
sahf
in
mov
rcrl
adc
fwait
xchg
orl
fsubrl
iret
push
repnz
jmp
mov
add
mov
sbb
adc
jb
mov
xor
sbb
lahf
jns
test
aas
mov
mov
dec
or
ss
push
pop
fsubs
inc
push
inc
push
outsl
cmp
jg
std
outsb
xor
mov
cmc
fildll
cmp
push
cld
orl
and
mov
jg
jne
xor
cwtl
cmp
and
das
in
lock
sbb
mov
inc
dec
test
les
cmp
loop
lods
sub
roll
push
pop
lahf
in
cwtl
shlb
addl
inc
or
sub
pop
mov
xchg
dec
js
fs
lds
inc
int
mov
push
jecxz
mov
fidivl
mov
mov
xor
pop
test
ds
mov
sub
and
jp
jne
cmp
cmpsl
and
sub
movsb
or
xor
push
push
lcall
cmpsb
mov
out
daa
sub
push
mov
pop
adc
inc
out
mov
mov
cmp
add
rorb
sub
mov
jbe
aas
mov
mov
int
loopne
push
in
in
cwtl
fcoml
sarb
out
xor
adcl
push
push
pop
xor
pop
adc
dec
mov
popa
cmp
repnz
inc
pop
or
out
mov
fidivrs
loopne
enter
imulb
pop
mov
sbb
aad
cmpb
push
mov
loopne
dec
xor
adc
cld
call
fiaddl
in
mov
and
inc
adc
sahf
lods
sbb
test
add
rorb
add
cld
add
sbb
inc
in
mov
pop
add
int3
sub
inc
dec
mov
cmp
jg
cmp
push
in
call
jne
dec
jle
test
mov
mov
test
out
ret
pop
testl
sbb
and
rorb
cmp
sub
pusha
push
fisubrs
sub
in
sbb
jl
movl
fcomps
ljmp
and
int
scas
mov
cwtl
test
or
xchg
iret
stos
fistps
data16
mov
std
xchg
aad
sahf
sbb
pop
scas
mov
out
inc
sub
movsl
sbb
popa
nop
push
mull
movsb
fwait
add
cmpl
inc
pop
adc
mov
mov
cmp
mov
es
je
mov
adc
dec
dec
xchg
enter
xor
jns
insb
clc
mov
mov
nop
add
push
inc
push
xlat
and
cmp
xor
jno
add
test
mov
sub
and
jne
sub
pop
or
ds
int
popa
or
scas
pop
inc
or
mov
ds
lods
push
fnstsw
push
or
jae
pusha
aam
inc
mov
inc
jne
mov
imul
jg
das
push
add
lea
fdivl
addl
fstp
clc
in
push
add
cmp
cmp
pop
or
inc
mov
pop
call
sub
push
mov
in
xchg
push
jmp
push
push
hlt
icebp
ret
outsb
or
cwtl
test
jnp
testb
out
insl
push
outsb
dec
jmp
dec
dec
int3
pop
aam
jne
and
mov
shr
ja
xchg
pop
xchg
xchg
xor
xchg
das
outsb
push
mov
mov
in
ds
and
mov
dec
mov
pushf
loope
adc
push
jle
and
iret
loope
sbb
stos
out
movsw
aam
aas
cmp
mov
sahf
ficoms
loopne
mov
lcall
jo
jbe
add
and
and
dec
insl
pmaxub
or
mov
or
lahf
cmpb
push
push
push
sbb
aas
add
jg
sbb
cmp
pop
pminub
jmp
mov
push
fs
pop
or
sbb
int
and
and
adc
and
in
lods
xchg
push
push
xchg
jno
inc
loop
mov
aam
gs
xchg
hlt
clc
jle
test
add
cmpb
popf
cmp
out
movsb
jb
jbe
inc
or
in
lahf
and
popf
lcall
flds
je
xchg
nop
stc
add
push
into
jno
mov
pop
aaa
or
rcr
xchg
and
inc
ds
xor
sub
ret
or
mov
lods
daa
dec
xchg
or
icebp
pop
fistpll
aaa
fistpll
mov
fists
mov
mov
nop
adc
mov
xchg
fs
jb
arpl
test
inc
dec
xchg
and
ds
mov
mov
jmp
mov
jnp
push
repnz
ljmp
cmp
jo
sbb
cmp
int
loope
je
inc
lods
push
inc
xchg
fbld
and
loopne
inc
gs
orb
daa
outsl
cmp
aam
adc
pop
push
jae
push
xchg
cmpsl
push
cmp
fs
pop
in
xchg
fucomip
inc
and
cmp
mov
imul
movsb
push
lods
jp
cmpsl
cld
inc
lahf
fsubrl
add
mov
mov
std
aas
ror
movsl
popa
daa
inc
sub
xchg
test
jl
fldl
cmpsb
mov
cmc
mov
mov
or
add
jle
mov
int3
pusha
inc
or
mov
test
in
fsubr
xchg
nop
rcrb
in
xchg
nop
fidivrs
jo
dec
or
fs
cmp
sbb
xchg
out
daa
mov
leave
pop
or
imul
mov
loop
iret
push
add
mov
nop
in
jne
insb
pop
sbb
cs
pop
or
enter
rorb
jl
testl
es
mov
push
inc
in
jg
xchg
mov
jecxz
addb
xchg
xor
sahf
jle
xchg
cmp
pmulhuw
adc
idivb
inc
clc
mov
int
push
mov
sub
ficomps
dec
shlb
les
sub
mov
hlt
inc
ljmp
in
xchg
jl
ffree
jne
or
mov
xchg
clc
dec
nop
imul
mov
xchg
adc
cmp
dec
dec
add
push
cmc
xchg
sub
sub
aaa
pop
frstor
imul
and
fbld
ds
int
aad
fnstsw
and
mov
leave
and
hlt
or
inc
pop
bound
inc
ret
inc
out
cmpsl
push
adc
lahf
outsb
dec
ds
mov
dec
cltd
inc
nop
mov
jl
pop
or
aad
scas
pusha
popf
popf
in
nop
in
adc
jg
xchg
mov
rorb
ja
push
pop
shrl
xor
in
sbb
lcall
inc
xchg
mov
inc
filds
cs
xor
mov
out
imul
fs
inc
out
xchg
and
add
xchg
push
fists
push
stc
outsb
divl
jbe
inc
adc
push
stos
aas
xor
xbegin
insl
jo
jo
jbe
pop
dec
or
stc
xchg
jl
into
lea
in
rorb
call
jmp
and
in
int
pop
push
lds
xchg
lahf
iret
pop
rcl
dec
xor
out
sbb
inc
adc
fs
shl
aas
add
rcr
jmp
sbb
test
aaa
ljmp
leave
loope
pop
addl
push
and
movsb
xor
push
bound
in
push
mov
push
movsl
dec
das
jbe
ret
mov
repz
adc
lods
cli
pop
mov
and
addr16
in
ja
pop
adc
je
push
stos
or
add
push
clc
pop
in
addb
call
add
test
jne
in
rolb
test
scas
aad
adc
ret
pop
jl
insb
cld
mov
jl
mov
jnp
les
or
sbb
mov
jno
push
cmp
jbe
xchg
fstpl
cmc
lret
cmc
add
sub
jbe
mov
int3
and
addr16
out
push
movsb
aad
pushf
jno
arpl
mov
xchg
mov
gs
mov
fadd
mov
mov
push
xchg
jbe
push
pushf
push
mov
test
adc
popa
inc
and
popa
arpl
xor
lds
loope
icebp
mov
and
adc
pop
jb
aaa
xchg
out
mov
fisttps
loop
ds
add
or
lret
ffreep
out
sti
lock
int
movsb
mov
stc
cwtl
mov
adc
inc
rsm
inc
arpl
jl
sub
cmpsb
xor
stc
pop
dec
icebp
push
push
jns
or
add
lcall
mov
call
push
push
and
ja
mov
xchg
push
xor
js
or
loopne
dec
mov
pushf
adc
in
out
sbb
add
insl
into
hlt
and
sbb
stc
or
sar
cmp
xor
sub
test
insb
clc
or
idivb
hlt
or
ljmp
push
adc
xor
adc
push
jo
addl
movsl
je
mov
adc
rcr
sbb
add
insl
adc
add
lock
adc
sbb
jb
push
inc
mov
jns
fabs
jae
mov
xor
out
lret
cmp
and
bound
ds
les
enter
sbb
add
shlb
pop
je
inc
hlt
out
push
inc
fsubl
xchg
nop
jne
inc
mov
xchg
nop
call
inc
aam
stc
push
pop
dec
inc
pop
pop
pop
iret
sub
pop
in
nop
jbe
push
jmp
and
pusha
and
cmp
fisubl
sbb
out
gs
mov
inc
or
mov
inc
and
push
push
mull
enter
pushf
insl
mov
xchg
dec
daa
jp
pop
dec
and
adc
dec
leave
push
in
xchg
and
inc
mov
cld
jnp
pop
pop
stc
mov
int3
movsl
rcrb
jge
enter
mov
or
or
cmp
or
add
adc
add
pop
nop
or
dec
shl
hlt
and
mov
sub
int
insb
pusha
inc
mov
cmpsl
sub
sbb
inc
jns
aad
or
mov
enter
addr16
push
mov
gs
xchg
pop
adc
lock
and
loop
cmp
jecxz
sub
dec
out
jl
fistps
ds
aas
stos
outsb
aaa
jmp
int3
sub
mov
xor
xor
xchg
cmp
mov
jle
fsubl
jo
pop
add
call
popa
mov
in
mov
cmp
clc
arpl
pop
push
xor
sahf
pushf
and
ss
jb
out
movsb
or
int3
xor
push
std
dec
jo
ds
outsb
out
mov
clc
inc
pushf
mov
inc
and
or
add
adc
loopne
clc
mov
dec
dec
dec
jg
sbb
jge
ljmp
add
call
out
imul
jb
lods
dec
cli
lock
jns
out
mov
fld
insb
cld
push
jge
cmp
jg
mov
add
sarb
nop
cmp
mov
call
xor
imul
vcvtss2si
xchg
cmp
sub
fsubl
and
jg
adc
popf
push
cmp
xor
outsl
lock
adcl
jge
xor
mov
shlb
xor
or
out
cmp
add
push
popf
mov
sbb
jnp
sbb
xlat
mov
jne
insb
jns
shll
pop
lock
push
and
cmp
and
inc
in
push
cmp
dec
jns
sbb
daa
adc
movsb
in
xchg
loope
or
push
mov
sbb
mov
in
in
call
inc
pop
xor
or
push
mov
jecxz
adc
ljmp
popf
scas
loopne
mov
add
outsb
fisttps
push
aad
les
fcoms
ds
sub
std
popf
loopne
cmc
push
pop
mov
mov
inc
movsl
lahf
mov
inc
mov
ret
ja
sub
lcall
or
stc
mov
ucomiss
insb
and
in
mov
add
jbe
or
rolb
iret
cmp
sub
cmp
xor
mov
jle
lret
inc
add
or
call
mov
jae
in
jle
mov
or
in
pop
mov
lea
addb
push
addl
out
outsb
js
js
jp
push
mov
pop
push
jp
outsl
xor
or
imul
add
in
add
jne
sbb
xchg
sub
add
loope
out
mov
mov
cmpsl
pop
fs
mov
jnp
mov
inc
pop
lods
lods
lock
movsb
jecxz
adc
je
rolb
scas
jne
std
cmp
add
jno
sub
cmp
push
or
insb
imull
lea
dec
xor
or
movsb
add
mov
cmc
and
repz
push
leave
push
lahf
mov
or
adc
cmp
jo
push
or
fdiv
push
jb
dec
or
xchg
rcrl
negb
pop
stos
and
fwait
into
dec
int3
or
mov
lret
js
mov
jge
cltd
pop
lahf
push
push
aad
cmpsl
dec
pushf
jg
scas
jb
pushf
jo
jo
pop
sarb
and
cmp
lret
iret
sahf
popf
ds
test
mov
std
dec
iret
rol
inc
dec
das
dec
cmp
iret
sub
aam
fmull
fdiv
dec
push
adc
and
es
sub
iret
push
pop
in
ljmp
jg
mov
mov
inc
push
cld
xor
hlt
sbb
mov
jg
inc
xchg
xchg
inc
jl
pushf
fisubs
cmpsl
inc
jmp
push
and
xchg
jns
push
and
jmp
jp
sbbl
xlat
sbb
fdivs
or
adc
mov
hlt
pop
cmpsl
and
push
cmpsb
inc
mov
jl
lahf
jne
or
xchg
push
add
idivb
push
lahf
jmp
lahf
jno
int
adc
xchg
sub
mov
movl
dec
arpl
xchg
or
mov
add
cltd
inc
and
push
mov
inc
jns
sub
mov
nop
mov
ja
les
or
xchg
push
sbb
aad
andl
pop
mov
fnstsw
cmp
inc
lock
es
jg
inc
jle
dec
loopne
in
mov
shrb
dec
pop
enter
sahf
fwait
jb
xor
scas
mov
jg
insl
out
test
out
addr16
loopne
pop
add
js
jecxz
xor
dec
add
xor
mov
in
in
pop
sbb
in
add
pop
cwtl
call
pop
and
pop
and
fcoml
lock
lret
mov
outsb
inc
and
addr16
xchg
loopne
adc
jne
adc
sahf
lods
xor
les
and
pop
and
hlt
jmp
push
enter
shlb
pop
inc
mov
loope
mov
or
cmpsl
emms
scas
inc
jecxz
sub
test
lea
push
orl
pop
add
push
inc
mov
rol
mov
add
mov
in
sbb
test
add
xor
push
es
sti
or
pop
lret
ret
add
lahf
and
lcall
cwtl
imul
and
sbbl
inc
sub
adc
mov
loopne
or
and
inc
mov
adc
or
dec
xchg
in
ret
das
stos
outsb
mov
dec
lds
dec
jmp
rorl
or
lds
mull
pop
mov
fidivrl
inc
mov
add
adc
adc
mov
gs
outsl
dec
rcrl
pop
popf
add
xor
and
int
push
fistpll
add
pop
cmpsl
or
inc
jle
fidivrs
in
jns
and
add
pop
test
ds
aad
and
in
mov
lods
xor
xchg
jge
shll
ficompl
test
xor
xlat
cld
mov
push
add
movsb
sbb
clc
and
mov
mov
loopne
nop
mov
hlt
mov
rclb
inc
pop
push
jae
add
xchg
pop
scas
push
mov
adcl
mov
or
xchg
dec
mov
and
pusha
outsb
aad
fbld
push
adc
movsl
sbb
lcall
inc
js
jecxz
test
fisttpll
fisttps
nop
fcomps
dec
aad
out
stos
inc
fwait
std
int
adc
testb
cld
mov
mov
in
cmpl
mov
inc
nop
dec
or
int
lea
cmpsl
sub
xchg
push
outsb
jbe
inc
dec
or
and
movsb
cmc
pop
jne
pop
inc
cld
int
jl
and
and
mov
in
in
add
xor
xlat
jnp
inc
outsb
add
notl
addr16
call
mov
gs
and
cmp
cwtl
pop
or
jle
daa
cli
push
push
hlt
mov
sbbl
ja
mov
xchg
pop
dec
lds
xchg
add
cmp
jl
gs
jmp
pop
dec
inc
push
scas
sub
imul
les
aaa
push
inc
jg
mov
scas
mov
lods
sbb
in
jmp
jne
mov
lahf
push
rolb
aaa
sbb
sub
in
arpl
push
add
push
ss
jecxz
faddl
push
mov
stc
dec
nopl
mov
loopne
mov
in
in
cltd
popa
mov
mov
aas
out
jbe
clc
nop
fimuls
cmc
or
mov
pop
adc
hlt
xchg
mov
js
jp
pop
inc
jle
xchg
mov
iret
nop
popa
sbb
orl
and
fsub
in
sbb
mov
mov
mov
inc
sbb
sub
cwtl
mov
fstl
adc
popf
out
mov
dec
or
push
push
lret
and
ja
jbe
and
je
inc
sarb
push
stc
and
mov
mov
sub
pop
ja
fimuls
push
mov
cmp
pop
in
and
push
add
movsl
push
cmp
xchg
push
mov
cmp
adc
adc
dec
dec
lock
add
add
gs
cltd
div
js
pop
adc
and
bswap
sub
jg
loop
rclb
into
iret
iret
xor
cmp
or
fs
xchg
in
nop
pop
addl
jle
out
jp
inc
rcl
ss
pop
pop
push
repz
sbb
mov
inc
faddp
notl
cmp
inc
jge
ret
or
and
inc
mov
pushl
jg
in
jbe
pushf
xchg
xor
ss
cmpsb
push
inc
sbb
dec
hlt
dec
sub
fists
repz
inc
mov
into
nop
sub
gs
shlb
dec
addr16
xor
scas
idivb
cmpsl
js
inc
testb
clc
dec
jbe
cmpsb
pop
inc
sahf
mov
ljmp
mov
in
adc
loopne
adc
and
xor
insb
in
in
fs
je
test
xchg
sub
in
mov
push
pusha
cmp
push
arpl
arpl
nop
jo
mov
jg
pop
adc
mov
adc
les
out
lds
pop
inc
inc
aam
addb
push
push
and
and
cmpsl
and
xchg
or
sbb
mov
std
or
cld
popa
movsl
div
mov
call
push
or
mov
movsb
int
es
int
bound
cwtl
data16
adc
pushf
jo
nop
in
mov
or
pop
fcmovbe
filds
mov
push
mov
mov
loop
nop
in
lods
vorps
pop
pop
push
pop
or
xchg
inc
into
sub
or
sub
mov
xchg
int
push
aaa
filds
jae
mov
inc
enter
cmp
and
jle
add
in
fistps
fnstcw
push
jmp
adc
dec
xchg
nop
adc
mov
jg
les
loopne
add
mov
ds
loop
or
shlb
push
or
inc
enter
sub
enter
pop
mov
xchg
mov
mov
test
gs
or
adc
push
jg
mov
cmp
or
add
and
dec
add
inc
jb
andl
std
adc
jg
sub
and
mov
and
cmp
stc
int3
mov
lds
adc
fcomp
loopne
and
mov
pop
loopne
mov
add
add
nop
add
movsb
lock
mov
call
xchg
hlt
sub
pop
jle
dec
popa
lahf
out
push
add
jns
movsl
in
test
lret
pop
xchg
mov
xchg
sub
sub
insb
idivb
adc
ficoms
inc
decb
xor
xlat
push
mov
mov
lret
call
sbb
hlt
mov
add
addl
push
ret
stos
jecxz
in
iret
bound
cmp
mov
subb
push
gs
cmp
lds
int
sbb
xchg
push
into
pop
mov
jecxz
cmp
out
cmp
sub
subb
adc
sahf
int3
mov
add
rol
out
sbb
xlat
adc
sbb
outsl
pop
mov
cmpsb
dec
add
cs
mov
loopne
scas
pushf
cmp
sub
in
jno
test
mov
inc
hlt
int
mov
push
outsl
hlt
je
push
jnp
xor
shlb
imul
push
and
jge
mov
sub
loop
pushf
jno
fucomip
dec
lods
fistps
cwtl
add
inc
cmpsb
in
adc
fwait
xchg
je
push
sbb
in
call
mov
xor
push
lea
in
pop
push
or
in
dec
pop
xchg
inc
ret
sbb
cmp
or
xchg
test
mov
movswl
insb
nop
iret
adc
dec
or
mov
js
mov
lea
mov
ficomps
jle
jo
rclb
loop
and
xor
and
aam
and
jp
in
push
stos
add
movsb
in
dec
and
jne
or
in
pop
cmpsl
je
cltd
aad
jo
push
mov
cmp
mov
out
insb
push
sub
sub
pusha
jno
mov
jge
jno
es
jb
gs
mov
int
pop
push
pop
adc
dec
pop
xor
fistpll
mov
adc
mov
xor
in
dec
pop
je
pop
sub
addr16
add
mov
std
cmp
sets
ljmp
mov
clc
jge
jl
adc
ds
push
scas
rolb
fstps
mov
in
fisubrl
xor
pop
in
enter
mov
mov
lahf
call
sub
mov
ret
aas
xchg
imul
sarl
mov
insl
sub
inc
mov
les
mov
out
div
pop
insb
and
pop
in
shl
inc
hlt
loop
jae
dec
jle
ljmp
jge
outsl
aam
mov
push
in
sub
in
xchg
insl
add
add
add
aas
cmp
cld
pop
cmp
outsb
cmp
or
cmpsb
gs
sbb
and
xchg
das
sub
ret
jnp
mov
pop
sbb
sub
aad
iret
push
jecxz
test
data16
sbbl
add
mov
mov
cmc
rcr
xchg
pop
dec
xchg
push
sbb
ds
xor
sub
cmp
dec
cmp
pop
or
mov
mov
out
in
dec
out
js
jp
jp
pop
cmp
pop
jge
call
mov
mov
in
cmp
push
scas
inc
lahf
gs
pop
nop
das
add
dec
jecxz
in
dec
jg
dec
inc
lahf
or
iret
dec
sbb
jp
je
insb
gs
xlat
jp
pop
lcall
jp
aad
adc
lcall
lcall
repnz
jg
outsl
iret
gs
sbb
cmp
outsl
into
mov
mov
cmp
xchg
mov
ja
xchg
fisubs
mov
pop
xor
jbe
inc
sti
mov
mov
clc
sub
cmp
push
and
xchg
pop
mov
mov
daa
gs
scas
aad
ljmp
mov
mov
scas
lods
mov
mov
cmc
jmp
inc
out
popl
in
stos
sub
mov
cmp
scas
addr16
in
in
aaa
pop
jne
rcrb
cs
movb
cmp
shlb
into
aaa
or
sbb
jp
pop
outsb
adc
das
andb
push
push
jp
into
mov
les
push
test
dec
mov
sub
in
and
lods
xchg
lods
jp
push
inc
push
dec
inc
mov
cmc
dec
pop
adc
jle
das
jbe
insb
leave
dec
arpl
fucom
call
push
fst
in
mov
and
test
push
inc
add
push
aad
cmp
push
cmp
xchg
fbstp
inc
shl
mov
repnz
in
lahf
enter
mov
rcll
push
das
inc
sub
rol
outsb
clc
xchg
mov
adc
fadd
inc
ss
cmp
inc
dec
mov
nop
sub
lea
lcall
scas
hlt
mov
or
pop
mov
adc
dec
out
xchg
mov
or
jmp
push
or
pop
std
cmpsl
int3
mov
insl
fwait
jg
loopne
inc
push
or
push
adc
imul
mov
push
push
xor
xor
daa
into
cmpl
lea
imul
dec
xor
xor
cltd
and
pop
push
fstl
out
xor
xchg
mov
and
nop
inc
int
inc
cmp
out
rclb
pop
add
mov
arpl
addl
jle
sub
mov
and
les
cmpsb
loopne
nop
pop
je,pt
in
data16
aad
cmp
and
lcall
cwtl
daa
add
xchg
hlt
xor
xor
xor
insb
mov
imul
pop
jo
pop
xchg
xor
mov
cmp
pop
out
jmp
arpl
cmp
inc
lcall
adc
loopne
sub
in
mov
sahf
cld
lock
cwtl
mov
psubsb
fstps
movb
mov
fbld
movsl
insb
add
push
mov
iret
xorl
add
inc
lods
mov
nop
sahf
inc
insl
js
jp
push
push
push
daa
xchg
cs
dec
mov
sbb
adc
push
adc
or
mov
out
mov
sbb
sub
mov
xchg
movsb
and
inc
inc
inc
fisubl
rdpmc
adc
in
nop
dec
lods
xchg
jp
push
mov
dec
iret
dec
jecxz
mov
sub
cmpl
mov
mov
pop
daa
xor
fwait
imul
cmp
or
outsb
aad
inc
and
add
cmp
aaa
cmpsl
mov
cmpsl
xor
insl
loope
pop
xor
pop
out
movl
jle
sbb
iret
dec
lcall
mov
imul
sub
mov
push
xor
pop
loopne
cwtl
clc
add
aad
js
push
and
push
pop
scas
jl
xchg
pop
lods
and
out
in
cmpsl
cwtl
adc
jne
or
add
enter
jae
inc
push
dec
and
sbb
iret
dec
sub
and
hlt
mov
pushf
mov
mov
push
sub
cmp
aad
enter
sub
fstpt
pop
rorb
mov
rcr
and
fimuls
sbb
mov
mov
subl
imul
adc
shrb
and
or
outsl
xor
mov
pop
mov
cmp
cmc
clc
cmp
out
cmp
inc
fimull
or
divb
cmp
inc
jb
inc
popa
jg
mov
popf
xchg
insb
dec
sbb
pop
sarb
cmp
jg
pop
iret
push
cwtl
les
jge
xor
ret
sub
in
mov
testl
inc
push
mov
rolb
data16
and
jg
cmp
add
into
aas
mov
jg
lods
sti
mov
push
out
in
in
and
andl
stos
or
push
and
rol
das
cmp
test
out
jle
out
jle
pop
lahf
jnp
push
mov
sub
repnz
cld
cmp
inc
push
nop
mov
jne
fidivrs
mov
cmp
jbe
jo
dec
inc
pop
in
enter
lret
inc
pop
fcompl
pop
mov
mov
in
jns
or
xchg
fsts
js
xor
faddl
call
jp
pushf
cmpl
data16
sbb
adc
aam
mov
ds
cmp
push
add
roll
and
push
decb
cmp
testl
xor
cmpsb
xor
dec
nop
pop
cmp
and
les
xchg
push
sub
sub
int
and
jg
das
xchg
outsl
and
addr16
inc
mov
mov
in
in
mov
int3
fsubl
pop
call
mov
ret
aas
test
and
ds
aad
sub
das
inc
inc
aam
lods
leave
int
xchg
es
xchg
movsb
fstpl
adc
arpl
adc
lock
fs
or
mov
and
sbb
int3
mov
lahf
mov
outsl
lods
ss
pop
jp
scas
lods
cmc
in
call
mov
mov
aad
push
pop
faddl
daa
not
mov
pop
and
cmp
fsubs
fbld
out
jb
test
lahf
sub
in
fs
lahf
cmc
negb
jle
mov
call
cld
cmp
push
incl
aas
out
shll
pop
scas
fbstp
mov
mov
pop
mov
inc
lcall
gs
ljmp
sub
sub
dec
fst
cmp
add
dec
iret
push
cwtl
ret
pop
mov
cmc
mov
je
sbb
dec
aad
cmp
pop
subl
mov
movsl
inc
mov
jp
and
pop
movsl
cmp
fs
xorl
xchg
cmpsl
or
outsb
fiadds
jle
cltd
lfs
dec
fwait
xorl
orl
mov
clc
repz
int3
adc
push
out
enter
sub
pop
xor
out
sub
daa
mov
adc
adc
push
mov
das
jle
popf
mov
and
inc
sbb
push
sti
jle
cltd
jbe
dec
push
or
inc
xchg
test
cmc
dec
add
adc
jo
inc
fdivrs
std
push
or
mov
xchg
clc
push
or
and
test
jb
push
sti
shrl
cmp
fiadds
dec
call
and
shlb
dec
mov
sub
sbb
push
jg
cmc
outsb
in
inc
or
out
and
je
shl
nop
mov
ret
adcb
pop
mov
gs
filds
in
movsb
out
xor
and
pop
movaps
test
mov
inc
sub
adc
lcall
repz
inc
mov
loopne
push
add
rcl
pushf
aas
nop
stos
cmp
pop
jecxz
int3
jne
xchg
dec
push
xchg
fildll
adc
mov
lahf
lahf
data16
sub
ljmp
loopne
add
lods
pop
in
mov
add
xor
inc
mov
or
sub
stos
inc
or
fcoml
push
dec
js
sbb
mov
movsl
stos
push
pop
adc
push
add
in
nop
cmp
das
je
movsl
cmp
cmp
mov
into
lds
jbe
dec
mov
out
push
loopne
aam
push
mov
aaa
jbe
inc
mov
filds
out
das
inc
mov
sbb
cli
sub
mov
jle
scas
jp
xor
loope
xchg
jne
pop
cwtl
out
in
mov
inc
in
jnp
xchg
nop
mov
cmp
xor
cld
sub
mov
dec
lea
jno
xchg
hlt
push
clc
push
arpl
mov
scas
push
add
in
mov
out
and
rorl
scas
push
aam
add
xchg
adc
jle
sbb
adcl
out
data16
mov
std
ja
fcomp
xchg
cmc
aaa
insb
dec
dec
leave
mov
jp
movsl
fucomip
mov
xchg
jge
dec
test
mov
pop
fcmovbe
push
pushf
fbld
mov
pop
pop
xchg
ds
sub
je
sbb
insl
pop
into
int3
jl
or
or
jb
inc
mov
out
sbb
cmp
sarb
lods
in
xor
sub
pop
sub
fs
std
dec
mov
push
sahf
sbb
adc
clc
jle
xor
inc
or
xor
loopne
and
sub
pop
sahf
xor
fiaddl
outsb
cmp
test
lds
lret
call
mov
dec
pop
inc
mov
mov
jb
fmull
test
aad
sbb
hlt
or
mov
pop
push
mov
dec
or
ret
jecxz
movsb
das
int
ljmp
mov
andl
fstp
nop
dec
add
pop
hlt
call
pop
lds
mov
and
das
dec
xchg
sub
in
add
mov
scas
xchg
push
adc
mov
movsb
sbb
andl
jns
pop
pop
mov
xchg
push
pop
std
xlat
decb
stos
xor
and
js
dec
xchg
or
push
out
dec
stc
sub
in
mov
into
mov
cwtl
leave
fists
out
push
mov
push
add
push
sbb
mov
pop
mov
jno
pop
lock
scas
outsl
mov
pop
sub
into
cmp
jg
frstor
ja
jo
mov
mov
jne
into
sahf
adc
fimull
xchg
inc
pop
xlat
int
insb
rclb
jg
gs
clc
jbe
mov
test
jge
xor
scas
jo
adc
fadd
lds
in
outsl
add
mov
pushf
mov
int3
enter
inc
loope
xchg
nop
daa
or
or
xor
jns
xor
scas
aad
loop
pop
fwait
mov
pop
mov
pop
shll
mov
and
pop
sahf
jne
ficoms
mulb
sbb
daa
cltd
in
pop
mov
int3
xchg
imul
mov
push
mov
cmc
push
push
in
aaa
fists
hlt
xchg
fists
out
daa
and
scas
and
and
fiaddl
sbb
iret
and
mov
xlat
pop
or
xor
sbb
xchg
jbe
mov
arpl
hlt
jl
xor
stc
xlat
xor
inc
jle
fs
or
cmp
and
ret
je
or
cmc
mov
arpl
test
movsl
mov
fisubl
cli
mov
sub
push
sbb
mov
cmp
sub
cmp
nop
push
andl
orl
cs
jle
jmp
xor
out
and
cmp
arpl
and
imulb
inc
xlat
pop
mull
lcall
in
dec
pop
cmp
sbb
hlt
sbbb
es
mov
push
stos
adc
xlat
clc
rorb
and
cmc
xchg
movb
xchg
lods
lds
in
mov
idivl
fdivl
and
bound
pop
lret
lods
pop
push
fsubrl
and
jge
nop
into
adc
push
or
xchg
outsl
jmp
push
mov
sbb
sub
xchg
push
outsl
arpl
gs
add
lods
in
mov
sbb
movsl
cltd
inc
sbb
daa
add
les
inc
fildll
jne
inc
insb
and
jns
jg
out
add
std
lea
stos
sub
and
cmc
pop
and
pop
insl
sub
jg
pop
out
ja
dec
int
rcrl
scas
push
mov
add
in
lea
outsl
mov
cmpb
iret
or
in
popw
push
mov
pop
xchg
imul
inc
push
cwtl
push
dec
clc
fldl
xor
sbb
in
pusha
mov
cli
cld
and
movb
hlt
loopne
mov
xchg
jno
and
dec
inc
xchg
add
mov
lods
dec
jp
mov
lcall
mov
xor
rorl
push
or
inc
ja
psubb
or
add
sbb
aam
not
imul
js
inc
adc
xor
xchg
push
cld
fsubrl
fbld
in
xchg
mov
dec
faddl
xchg
mov
mov
nop
cmpsl
mov
call
ja
in
mov
and
movsl
and
jle
mov
imul
cmp
nop
cmp
out
cmpsl
in
inc
cwtl
sbbl
nop
cmpl
mov
pop
mov
jns
or
xchg
or
pop
mov
or
xor
cmc
cwtl
mov
test
hlt
and
daa
mov
js
scas
pop
mov
push
push
daa
scas
and
je
mov
cmp
std
pop
scas
cmc
mov
add
std
call
insb
adc
stos
add
pop
fsub
xchg
jne
in
filds
outsb
fistps
scas
cmpsb
mov
movsl
push
daa
test
mov
cs
xchg
into
add
cwtl
clc
adc
cltd
iret
or
xchg
push
testl
out
enter
in
inc
cmc
pop
xor
sub
sub
mov
or
sub
push
in
test
sbb
xchg
mov
addl
outsl
je
cmp
clc
jle
sahf
lea
push
dec
roll
jg
and
xchg
les
scas
cmp
roll
mov
xchg
jecxz
sbb
mov
aaa
inc
xor
cmp
mov
xchg
mov
inc
in
fnstsw
xlat
nop
loopne
in
fs
popa
rolb
lahf
insb
mov
mov
and
in
in
xchg
pop
mov
cmpsb
scas
mov
push
cmp
mov
jl
scas
push
xor
mov
je
add
pop
es
out
or
aas
outsb
lahf
push
mov
jge
xchg
push
lds
mov
adc
cmpsb
push
xchg
mov
cmp
mov
inc
xchg
mov
jge
sub
cli
test
mov
cmc
andl
xchg
sub
mov
cmpsb
shufps
cmp
push
pop
shrb
ret
jnp
pop
mov
mov
jne
push
jnp
jl
or
mov
fs
inc
lock
nop
ret
add
jmp
lods
cmp
pop
jge
cmp
cmpsl
sarl
out
movsb
push
sbb
sub
out
inc
sub
jg
xor
xchg
adc
fisubs
fidivrs
add
loopne
and
call
adc
idivl
test
lahf
push
scas
jbe
push
lods
ret
sti
out
sub
out
mov
stc
popf
sub
jg
testb
pop
andl
in
push
pop
push
nop
jmp
jbe
xorb
popa
add
int3
ss
or
movsl
and
call
fcomip
add
hlt
mov
or
pop
sbb
xor
jp
adc
out
cs
imul
enter
adc
cmpsl
push
int3
jle
xorb
dec
sbb
inc
les
adc
int3
fsub
nop
adc
int3
jae
xor
jno
lret
dec
pop
adc
mov
push
idiv
pop
xor
push
cmpsb
inc
insl
das
insb
mov
jg
adc
jle
cmp
fbld
cwtl
repnz
cmp
pop
pop
sbb
addr16
es
in
mov
add
int
lret
out
jo
test
sbb
pop
mov
insl
xlat
dec
mov
ficompl
fnsave
mov
fisubrs
dec
mov
aas
push
inc
jns
pop
or
jne
je
push
rcll
cmpsb
xor
aas
xchg
xchg
and
in
dec
mov
movsb
pop
cs
and
dec
subl
movsl
mov
sub
mov
movsb
and
xchg
sub
lea
cwtl
cli
sbb
push
jp
mov
call
xorl
in
lea
mov
out
fists
xchg
fcomp
or
sub
in
in
jns
sahf
mov
aad
fst
jne
sub
pop
out
jb
inc
sub
in
pusha
mov
in
and
fildll
test
xor
cmpsb
jle
icebp
out
or
movsl
in
mov
insl
js
rcr
in
jno
leave
std
pop
jb
mov
fiadds
mov
and
push
jl
stos
cwtl
xlat
inc
dec
dec
std
mov
push
and
adc
test
mov
sub
xor
pushf
sub
sahf
popf
cmpl
cmp
scas
movsl
repnz
popw
out
mov
cmp
sub
or
movsb
xor
rolb
gs
je
xchg
pop
inc
adc
cmp
inc
test
inc
and
fbstp
or
lret
and
add
push
xor
in
push
pop
bound
daa
clc
stos
xchg
jo
pop
push
pop
aas
outsb
fucomp
sub
sbb
cwtl
mov
sub
mov
outsl
pop
mov
out
aad
push
in
jg
jecxz
add
popf
movb
out
sbb
inc
repnz
push
ficomps
in
lock
out
push
and
sbb
adcb
arpl
mov
fcomip
outsb
jne
mov
pop
cmp
fbstp
mov
xchg
and
and
inc
jl
sbb
jg
xchg
sbbl
ret
int
xchg
jp
sbb
shrb
xchg
pop
andl
sub
lahf
jge
sub
mov
cmp
jle
add
in
nop
hlt
push
ds
test
sarl
dec
cmp
stc
and
mov
pop
dec
dec
xchg
aas
in
xor
sbbl
in
push
fiaddl
xchg
loop
sub
fstp
imul
jle
mov
lods
jno
lahf
cwtl
mov
int
popf
clc
fwait
clc
xor
lock
add
inc
shlb
mov
iret
pusha
dec
movsb
mov
lret
ss
push
and
xchg
cli
sub
ja
lahf
dec
repnz
out
lea
out
dec
pop
sbb
insl
das
out
inc
into
push
fisttpl
xor
and
fdivrs
notb
pop
pop
jne
pop
push
aas
pop
pop
cmp
pop
or
lds
mov
add
xchg
jle
ljmp
or
pusha
negl
xchg
filds
outsb
scas
pop
jbe
aaa
arpl
pushf
lahf
mov
pop
dec
rcr
mov
adc
cwtl
mov
push
in
into
out
out
dec
rorb
xchg
mov
add
aam
push
scas
mov
fdivrs
lock
int
adc
jle
pop
out
jb
adc
mov
ljmp
inc
xor
xor
mov
aas
inc
jne
pop
inc
outsl
repz
jl
mov
mov
push
jmp
divb
lcall
mulb
imull
push
insb
inc
fbld
out
add
aam
pop
inc
mov
add
scas
jl
mov
pop
xchg
mov
mov
repnz
mov
in
and
jecxz
hlt
test
dec
aad
dec
add
sahf
ss
mov
and
ljmp
out
cli
and
or
jg
js
orl
dec
aas
push
ds
int
call
outsb
sub
or
imul
in
decb
sahf
cmp
inc
add
popf
sbb
cmp
xor
mov
add
iret
das
into
lods
pop
orl
out
fdiv
out
in
mov
sbb
and
and
jno
ljmp
aam
cmp
mov
lahf
hlt
xchg
je
scas
and
or
sbb
hlt
and
outsl
imul
mov
out
fcoms
stc
movhps
pop
pop
inc
and
xchg
hlt
push
out
pusha
mov
and
sub
outsl
in
pop
inc
scas
cli
adc
cmp
nop
inc
aas
aas
imul
xchg
mov
add
repz
jno
ja
nop
je
xchg
jge
movsl
iret
aad
pushf
dec
mov
lea
mov
and
jecxz
dec
aas
pop
test
and
out
push
jle
mov
dec
xchg
pop
pop
and
movsl
push
gs
sbb
outsb
out
pop
and
lds
fs
gs
push
movsb
push
lret
sub
xor
lea
jmp
je
cmp
pusha
mov
push
fildl
ja
dec
add
and
xor
lods
sub
inc
out
clc
adc
sub
les
rcrb
mov
xor
cmp
lcall
sub
inc
inc
scas
or
call
scas
cli
sbb
add
inc
in
mov
std
les
pop
mov
mov
and
lods
sub
adcl
out
lahf
sub
and
cwtl
xchg
or
aas
dec
enter
in
mov
out
or
jo
jbe
dec
dec
pop
cld
pop
push
adc
out
test
and
and
push
pushf
pop
mov
push
lret
xorl
clc
mov
inc
sahf
pushf
and
cli
mov
sbb
inc
push
out
mov
hlt
or
nop
fisubrs
mov
push
clc
cld
data16
movsb
mov
in
jne
cwtl
fcomps
out
jg
xchg
jb
cmp
in
xchg
cmpsl
in
mov
cmp
sbb
orl
push
sbb
sahf
push
aaa
lahf
pop
push
int
popa
add
negl
pusha
sub
pop
or
inc
lahf
xor
test
es
cli
and
sarl
and
mov
aas
xor
iret
inc
in
cmp
sarb
push
xchg
scas
fs
clc
and
jg
jl
std
add
sub
jae
and
std
pop
cs
adc
fucomp
pop
call
scas
jo
pop
lret
sub
into
daa
dec
push
and
in
pop
in
insl
push
pop
jb
cmp
jne
dec
adc
daa
inc
push
pop
cmpsb
or
jo
pop
dec
mov
movsb
lods
int3
out
shlb
pop
adc
dec
mov
cmpsb
cmc
dec
test
cwtl
mov
mov
rclb
lret
cmpsl
and
push
cmp
inc
out
pushf
xchg
cmpsb
scas
inc
pop
mov
dec
pop
lods
lcall
push
pop
jae
lea
push
or
dec
jecxz
sbb
int3
or
sub
loop
jae
inc
fdivs
jo
dec
and
mov
inc
xor
push
loope
or
pop
add
lea
adc
pop
clc
in
add
mov
inc
sarl
mov
in
sbb
xchg
inc
cld
lahf
cmp
push
dec
add
fmull
and
flds
xchg
inc
ja
pop
rorb
fcomps
popf
sbb
jns
mov
data16
jns
pop
outsl
jne
pop
aad
jbe
loopne
mov
push
push
outsb
scas
jbe
sub
jg
push
iret
ret
jb
movsl
sbb
pop
dec
mov
inc
fcomp
push
mov
fwait
outsb
fwait
xchg
inc
out
and
and
lods
int
gs
push
rcr
iret
gs
push
push
cld
ja
jo
inc
subl
jl
fnstsw
aad
cmc
pop
adc
mov
cmpsb
nop
push
push
cmp
xchg
jbe
push
sbb
pushf
jl
mov
jge
and
cmc
mov
daa
cmp
xchg
pop
sbb
mov
jo
inc
lods
pop
fmulp
push
gs
pop
push
sub
fnstsw
jp
sbb
test
sbb
lea
sahf
lock
sbb
push
mov
pop
dec
clc
sti
nop
and
lods
lea
cmc
cwtl
jp
popw
lods
inc
sub
mov
push
cmp
and
push
iret
pop
mov
sbb
cmp
negl
dec
cmpsl
int
je
lahf
out
mov
mov
jnp
xlat
or
in
loopne
mov
or
xor
aas
mov
sub
xchg
xor
push
sub
popf
xor
adc
scas
mov
jg
inc
aam
mov
pop
rorl
and
mov
sbb
pop
jle
xchg
cld
cli
sbb
lock
add
gs
cmp
sarb
inc
and
pop
cmp
fwait
and
shlb
push
ret
cmp
daa
int
jo
dec
mov
sub
cmp
dec
xchg
leave
push
or
sub
inc
cmp
test
imul
roll
xchg
in
daa
lock
jp
xchg
pop
repnz
jecxz
or
mov
cld
mov
push
clc
push
pop
dec
cld
inc
mov
pop
nop
pushf
xorl
or
lods
xchg
mov
fisubs
mov
mov
cmpl
push
fimuls
xchg
jmp
pop
sub
dec
jle
lods
rolb
nop
in
xchg
jle
iret
test
jno
loope
mov
mov
sub
iret
lods
inc
scas
or
add
mov
push
dec
scas
test
scas
mov
test
adc
sbb
mov
inc
push
inc
aad
inc
mov
adcl
add
jecxz
add
jg
cwtl
call
es
pushf
lahf
ljmp
mov
jmp
lahf
jle
dec
int
outsb
jle
push
mov
adc
cmpsb
pop
int3
movsl
loopne
cwtl
movl
inc
je
dec
popa
mov
pop
movb
arpl
mov
or
jge
test
dec
mov
psrlq
xchg
mov
jp
mov
add
daa
xchg
ret
test
cmp
dec
and
idiv
dec
leave
scas
pushl
test
xor
xor
and
popf
lahf
mov
in
xchg
fiaddl
mov
fcompl
and
xlat
mov
adc
jle
into
outsb
fistpll
inc
lret
jle
cltd
push
add
dec
call
outsb
scas
push
scas
dec
clc
mov
in
bound
push
sbb
hlt
movsb
mov
mov
iret
clc
mov
dec
jne
mov
mov
mov
divb
int
and
sub
fstps
xor
iret
gs
dec
outsl
add
popa
or
dec
push
cmpsb
rcrl
cmpl
sub
out
ret
adc
mov
mov
loopne
in
call
sub
add
lds
leave
sub
or
dec
dec
fprem
stc
pop
mov
fisubrs
sub
lcall
push
ss
and
cmp
mov
jne
testl
push
dec
adc
test
mov
adc
xchg
aas
gs
imul
aam
in
pushf
mov
in
mov
test
sbbl
lea
lds
push
adc
ds
and
xchg
addr16
out
lea
dec
adc
mov
stc
adc
shl
scas
adc
int3
mov
in
dec
push
sub
aad
push
out
sub
pop
inc
jbe
add
push
aas
pushf
in
and
movb
xchg
iret
mov
fs
sub
out
mov
add
stos
mov
movsl
or
sub
push
test
aad
pop
add
int
ret
sbb
nop
and
in
into
popa
in
jp
test
adc
push
nop
mov
sub
mov
or
clc
cmc
inc
movsb
and
out
adc
cmp
nop
stos
add
lahf
dec
call
pop
aaa
movb
pop
addr16
sbb
xchg
xor
cmp
xor
int3
adc
and
pop
cmp
and
pop
jp
inc
xchg
cmp
xchg
out
xchg
add
cmc
xor
gs
xchg
adc
bound
mov
arpl
bound
mov
mov
push
loopne
sbb
add
push
sbb
daa
cmp
inc
int3
mov
adc
fildll
push
add
sbb
push
sbb
mov
sbb
adc
cld
les
movsb
add
fimuls
fistps
insb
pop
pop
mov
xlat
dec
sahf
es
nop
out
sbb
fmull
mov
nop
data16
das
and
into
cmp
cmp
fldl
inc
mov
cwtl
inc
cmpsb
fcom
out
dec
jne
insb
or
scas
loop
sbb
pop
addr16
ss
aad
or
jo
lea
ja
inc
adc
in
push
sbb
sahf
out
std
mov
cmp
inc
lahf
out
sub
pop
push
test
jno
insb
cld
ret
adc
insl
rolb
xchg
push
jno
mov
or
out
popw
pop
aaa
pop
fiadds
xor
in
push
and
aam
adc
scas
mov
test
mov
mov
mov
mov
in
int
cld
push
dec
pop
fstl
and
sbb
aas
outsl
mov
pop
lahf
cmc
scas
dec
mov
in
sbb
push
clc
cmp
out
and
inc
lahf
daa
lods
xchg
inc
gs
xchg
push
les
mov
aam
pop
adc
push
enter
mov
or
mov
int
xadd
outsb
in
mov
mov
out
out
or
and
das
inc
cs
mov
int
arpl
xchg
js
dec
xchg
ja
cmpsb
jns
addl
push
aad
xchg
push
and
pop
lods
cmp
push
subl
dec
fistl
dec
in
fs
mul
arpl
ret
ret
jle
mov
shlb
jns
mov
cmp
in
jns
cmp
repz
xor
xor
inc
cmp
and
mov
sarl
mov
or
sbb
subb
push
in
pop
imul
cs
out
xlat
movsb
xor
pop
mov
int
jecxz
mov
dec
iret
jle
pusha
xchg
dec
les
into
dec
pop
push
lcall
fidivrs
arpl
inc
push
movsb
pop
imull
push
or
or
lock
scas
jg
cmp
insb
aad
imul
push
out
pop
dec
mov
repnz
lods
nop
inc
lahf
out
jae
in
and
jg
add
incb
jg
mov
xchg
mov
cmp
or
sbb
cmpsb
popa
cs
shll
sbb
mov
or
test
pop
call
xchg
and
outsb
mov
aad
xor
mov
xor
in
and
mov
scas
xlat
push
mov
xor
pop
icebp
rclb
fwait
inc
fiaddl
std
stos
jg
sub
xor
push
movsb
sub
ja
int3
sub
and
std
fucom
jne
add
mov
shrb
inc
jmp
pop
and
sbb
mov
jbe
and
and
cmp
in
mov
push
add
mov
or
jbe
xor
sub
mov
outsb
jno
xchg
inc
cmp
and
xchg
hlt
mov
scas
insl
cwtl
dec
push
cmpsl
xor
int3
aaa
jecxz
cmc
pop
test
scas
icebp
pop
add
sub
movsl
lea
scas
xchg
mov
mov
mov
gs
mov
xor
jbe
and
inc
fisttpll
jo
push
adc
pop
mov
in
pop
add
pop
int3
cmp
sub
xchg
push
notl
xchg
les
hlt
jb
cs
sahf
insl
sub
imul
or
mov
ret
scas
and
js
pop
in
hlt
ljmp
out
mov
mov
xor
mov
adc
mov
sahf
aas
fsubp
cmp
xchg
nop
push
test
lea
or
xchg
adc
lods
mov
cli
adc
out
movsl
xchg
out
sub
inc
in
nop
rolb
in
cwtl
dec
add
push
or
pop
mov
das
jg
in
repz
cmp
mov
dec
cwtl
mov
pop
and
outsb
nop
jg
pop
cmc
repz
or
mov
aas
aad
pop
mov
pushf
pop
js
ja
jbe
push
jns
movsb
push
and
mov
add
cmp
add
insb
aas
jle
cld
or
in
pop
test
or
scas
mov
movsb
mov
push
popf
loop
cmp
mov
and
mov
push
or
popa
inc
je
push
std
push
in
outsb
mov
jecxz
fdivrl
scas
pop
sub
adc
push
movsl
adc
repnz
push
sahf
and
push
aam
pop
and
test
sub
push
push
sbb
insb
fsubrl
and
mov
xchg
into
dec
aas
adc
sub
cmp
cmpsb
ds
mov
dec
pop
push
mov
pop
frstor
xchg
in
jno
push
into
stos
pop
test
repnz
and
lods
out
or
pop
fsubp
les
jg
sbb
push
cmp
pop
movsb
filds
std
sub
push
es
xchg
aas
fisubrl
je
fbld
xchg
mov
insl
fcompl
sbb
into
mov
sahf
pop
xchg
sahf
cmpsb
test
fisttpl
lahf
mov
xchg
lds
xor
sub
push
lods
lods
insl
xor
clc
cs
sbb
mov
out
bswap
ss
push
outsl
pop
into
scas
dec
mov
out
fucomp
sub
adc
cmpsb
sub
or
mov
adc
int
into
mov
out
outsb
jp
movsb
scas
mov
pop
inc
mov
push
out
out
xor
mov
cmp
mov
xor
push
sbb
sahf
into
dec
int
push
cmp
scas
scas
xchg
push
mov
punpckhwd
push
clc
ret
and
mov
nop
or
in
dec
jmp
movsb
lahf
aam
lahf
les
dec
imul
sbb
test
push
scas
insb
sub
sub
lea
mov
lea
jle
or
popf
sahf
test
sub
mov
orb
mov
mov
fmull
outsb
out
xor
jbe
das
mov
out
inc
push
dec
xchg
jl
frstor
sub
rolb
push
dec
mov
mov
push
mov
sub
inc
incb
stos
or
dec
sub
inc
fs
mov
mov
cmp
stos
clc
add
lods
jge
push
ds
push
fisubrs
mov
lods
mov
jecxz
les
data16
add
push
inc
imul
and
dec
mov
mov
inc
dec
dec
lahf
xchg
dec
cmc
insl
cmc
rorb
cltd
out
or
daa
dec
mov
dec
or
jmp
jmp
in
cmp
sub
mov
leave
pop
cli
cmp
int
mov
test
cltd
clc
jmp
sub
sub
sbb
add
add
je
lock
loopne
jp
shlb
adc
dec
fs
ss
cmc
cltd
loopne
test
add
push
fsubr
pop
jle
loopne
pop
mov
mov
jl
je
std
insb
movsb
in
add
cmp
aaa
push
cmp
jl
std
or
fld
mov
xchg
xchg
mov
xlat
lahf
dec
jecxz
cltd
push
cmp
out
pushf
add
aad
or
mov
jno
jns
add
mov
iret
push
or
jbe
js
jo
or
push
jmp
push
push
xchg
lds
mov
dec
sbb
leave
int
xor
jle
rcrb
push
subb
dec
xor
lods
jl
aas
mov
pusha
dec
mov
lcall
cmpl
inc
mov
mov
mov
mov
test
cmp
add
add
mov
cmp
pushf
xor
into
lea
mov
hlt
jle
rorl
gs
je
inc
imulb
fadd
enter
divl
insl
mov
jp
dec
dec
add
add
sbb
mov
dec
mov
sbb
stc
jg
ret
lcall
addr16
pop
sbb
mov
enter
xlat
and
int3
lret
mov
aas
imul
loop
fwait
xlat
push
ret
sbb
leave
add
repz
lahf
xlat
mov
push
or
mov
inc
das
cs
cmp
dec
push
test
std
das
dec
adc
aam
out
cmpsb
into
xor
pushl
outsb
lods
push
cmc
lcall
pop
movsl
into
xchg
aam
out
je
mov
or
push
pop
int
testb
pop
cmp
sbb
cmc
add
test
dec
lret
imul
lret
lcall
mov
and
imul
jmp
lock
call
movsb
stc
pop
aaa
xchg
decl
leave
mov
call
shll
jno
and
cmp
cmp
dec
mov
mov
sti
out
add
cmp
cli
sbb
dec
inc
leave
clc
std
repz
push
lock
push
inc
mov
out
pop
or
sbb
test
lret
lahf
cmp
jmp
mov
mov
add
repz
adc
mov
aam
jle
inc
and
inc
addr16
sub
call
dec
pushl
fwait
jle
mov
hlt
cmp
flds
mov
jmp
mov
mov
cmp
lock
test
je
movl
pop
sub
shlb
sti
std
in
xchg
sbb
push
std
ficoml
jle
ds
stos
adc
frstor
mov
cmp
lahf
xchg
lcall
pusha
sbb
ret
shlb
jle
aaa
mov
mov
fimuls
or
pop
xor
call
cld
imul
lahf
add
adc
adc
sub
bound
or
dec
sub
outsl
push
mov
mov
push
sbb
mov
sbb
mov
daa
push
jmp
pushf
adc
popf
fwait
xchg
xlat
cld
ljmp
clc
aam
ljmp
in
jmp
sbb
mov
and
enter
movsb
push
jmp
stc
jne
sbb
dec
imul
mov
mov
or
add
imul
leave
cmp
push
sub
cmpsl
adc
cmp
mov
sub
movsb
fstl
int
inc
iret
lods
sbb
sub
mov
fiadds
das
shrb
cld
adc
sbb
arpl
mov
shrb
hlt
rorl
jle
fxch
dec
push
pop
inc
in
pop
inc
fiadds
idivb
dec
adc
jl
lock
lahf
mov
jge
rcrb
adc
fidivrl
pop
cwtl
mov
iret
pushf
mov
or
push
and
cmp
js
sub
cmp
out
add
adc
pushl
lods
pop
addr16
mov
inc
lret
das
out
cltd
call
pop
mov
add
lret
in
in
cld
imul
inc
ljmp
jge
cwtl
jmp
mov
adc
xchg
cld
pop
mov
inc
inc
movsl
mov
mov
jno
push
dec
xchg
dec
jb
aam
loopne
xchg
sbb
cld
mov
inc
mov
adc
sti
adc
mov
mov
xchg
repz
inc
mov
mov
in
jl
inc
inc
hlt
xlat
sub
adc
mov
pop
and
add
inc
cwtl
xchg
add
xor
aas
lds
xchg
in
inc
add
mov
rclb
add
mov
pop
jl
and
stos
rol
popf
cmp
push
or
push
les
insb
dec
mov
xchg
xchg
push
jo
std
repnz
xor
fnsave
jmp
jns
divl
sub
cmpb
push
push
cmp
les
mov
call
and
stos
outsb
push
ljmp
push
xchg
lret
jmp
test
cmp
add
push
psubd
popf
xchg
bound
in
pop
sub
pop
movl
hlt
fcoml
mov
scas
and
add
ljmp
in
incl
mov
call
sbb
dec
jp
mov
add
pop
clc
adc
sbb
lcall
dec
cli
push
adc
and
sbb
scas
dec
mov
jo
mov
mov
pushf
mov
jge
fsubr
sub
in
push
sti
imul
sbb
inc
add
in
jne
xlat
divb
mov
fs
insl
in
daa
out
mov
xor
adc
and
jl
dec
jnp
xchg
cld
sahf
xchg
and
inc
testl
push
pop
std
cmp
aas
mov
jbe
inc
cmc
dec
sbb
ss
sub
push
fmuls
call
sub
xor
pop
pop
js
mov
or
cld
mov
sub
adc
cmp
jmp
xchg
add
pop
dec
lods
call
jle
pop
test
call
dec
mov
clc
and
cmpsb
ja
in
jae
pushl
lock
mov
inc
cmp
out
aas
or
mov
jl
cmpsl
test
mov
test
nop
mov
xchg
jo
inc
es
cmp
jmp
andb
push
lret
inc
scas
pushl
push
pop
xchg
cltd
lods
xor
bnd
in
sbb
bsf
std
and
push
jo
push
mov
add
ret
std
jg
dec
imul
mov
xchg
and
inc
dec
mov
sti
ds
call
cmp
ficomps
sbb
jl
aas
movsl
clc
add
es
add
mov
orl
jb
adc
pop
gs
fbstp
incl
dec
push
dec
js
adc
mov
sbb
jp
inc
jle
push
and
or
or
std
ja
inc
add
cld
data16
notb
mov
scas
pop
inc
fcoml
cli
add
les
sbb
sub
or
dec
add
dec
jmp
cmpsl
inc
sbb
sbb
and
or
int
cmp
mov
add
lea
push
and
xor
fwait
adc
outsb
fs
xchg
cmp
dec
fstpt
repz
incb
jle
xor
call
in
pop
lret
mov
mov
jg
cs
repz
int3
js
sbb
outsl
dec
scas
jmp
stos
imul
push
dec
cmp
fadd
inc
into
cs
call
loopne
mov
pop
shrb
fsubr
xor
sub
pop
or
xchg
clc
rclb
lahf
cmp
js
mov
mov
cmp
mov
jge
std
addl
sub
dec
bound
lcall
rorl
jae
stos
sub
cmp
leave
cmp
pop
in
sbbl
mov
js
incl
enter
in
mov
and
xchg
jo
adc
cmp
movsb
push
data16
pushl
jmp
ds
ficoml
jo
enter
or
pop
fisubrs
fwait
lock
int
mov
lret
add
test
cmpl
dec
ret
ret
adc
sbb
cmp
add
or
cmp
mov
pop
inc
xchg
push
int3
push
sub
dec
sub
push
out
dec
jmp
xor
mov
ljmp
mov
wrmsr
int3
mov
dec
add
sub
xchg
adc
inc
sbb
inc
sti
or
fwait
mov
mov
jle
pop
xchg
add
out
jb
sbb
arpl
fs
bnd
jns
adcb
loopne
loope
lcall
out
xchg
lea
or
ficoml
daa
stos
fdivrp
jg
call
in
imul
iret
test
dec
dec
mov
add
insb
jns
or
cpuid
dec
lods
imul
dec
cmpl
arpl
xor
push
dec
dec
subb
cmp
mov
loope
sub
loope
shlb
out
les
mov
xor
xor
mov
or
add
lock
xlat
bnd
inc
lret
jmp
xchg
add
insl
std
push
negb
lods
sub
sti
dec
es
add
sub
add
in
pop
lcall
xchg
mov
movsb
decl
sti
leave
sbb
or
mov
je
aam
inc
rol
arpl
jmp
in
mov
add
cs
cli
push
leave
adc
xor
sbb
pop
push
add
data16
adc
shlb
sarb
push
push
stos
pop
int3
fsub
idivl
mov
testb
leave
lret
outsb
clc
cmp
loopne
lcall
test
sub
mov
not
inc
xor
cmp
int
dec
jl
jle
clc
popa
pushl
adc
data16
ret
jmp
das
sbb
hlt
inc
jl
mov
jg
push
out
mov
cwtl
aas
adc
mov
lret
test
pusha
xchg
or
lock
jo
mov
cmp
in
leave
xchg
scas
lcall
daa
mov
xchg
xchg
jb
mov
xlat
lret
sar
inc
xor
mov
pop
adc
gs
jnp
repnz
sbb
pusha
nop
hlt
mov
mov
movsl
imul
out
or
daa
cmp
sub
cmp
push
fldenv
add
sti
xor
or
mov
in
outsl
push
xchg
movsb
loope
push
imul
int3
mov
push
fsubrp
aas
nop
jns
ljmp
mov
filds
mov
cmp
sbb
rcrl
bound
leave
sub
pop
pop
inc
jl
into
mov
stc
jne
or
ficomps
inc
mov
jl
or
je
push
jbe
call
mov
mov
inc
and
or
sub
call
das
push
lods
test
mov
mov
sti
adc
rorl
leave
mov
mov
int3
mov
jnp
insl
dec
std
rorb
out
mov
dec
in
out
lret
jmp
pop
out
fwait
xlat
cmp
jmp
imul
jle
aam
outsb
ljmp
repnz
sub
fwait
cltd
cld
and
push
inc
jge
aaa
decl
add
mov
lock
xchg
jo
sbb
adc
push
mov
jmp
mov
rclb
std
decb
pushf
outsl
jmp
xor
or
ficoms
inc
cld
lods
mov
adc
mov
cmp
cs
aaa
inc
sbb
pop
push
ficomps
add
sub
and
iret
mov
xor
in
movl
bound
pop
jae
push
add
push
mov
andb
push
stos
mov
out
jge
xchg
sbb
jno
lods
mov
call
mov
sub
test
jecxz
in
xchg
mov
xor
cwtl
inc
mov
xchg
clc
jp
stos
lcall
jb
sbb
push
or
into
push
roll
call
dec
xlat
mov
jle
pop
mov
add
shrb
in
sahf
xor
sub
push
js
loopne
or
inc
cmp
jae
pushl
repnz
pop
push
cs
hlt
loope
mov
inc
insl
mov
les
pop
frstor
push
mov
adc
dec
leave
and
sbb
mov
test
test
jl
jg
mov
xchg
das
cmp
lret
jecxz
std
push
rclb
pushl
jmp
inc
or
mov
xor
dec
arpl
stos
es
subb
sar
xlat
orl
lahf
jne
pushl
mov
jle
out
test
jg
call
fsub
pusha
cli
pop
insl
pop
decl
ror
xor
mov
test
decl
inc
inc
lcall
fucomp
lods
out
push
sub
gs
xchg
xchg
lcall
loopne
iret
pop
enter
xor
xchg
push
mov
loope
push
add
sarl
sbbl
lods
cld
cwtl
ljmp
or
pop
sbb
incl
icebp
sbb
flds
lahf
jns
ret
das
jge
jnp
pop
ds
sti
lret
test
xor
jle
loop
cld
lock
xlat
lahf
testl
and
call
repnz
imul
shl
shrb
cld
pop
jb
inc
mov
push
cmp
sub
xchg
lock
xchg
cwtl
sar
lret
cmpsl
mov
jne
cwtl
testb
mov
sub
daa
sbb
insb
fs
sarb
out
lds
out
xchg
out
mov
fiadds
jecxz
jge
and
xchg
fsubp
cmp
sub
mov
sbb
adc
mov
gs
inc
fdivl
push
push
fistl
inc
and
mov
dec
xorl
jl
or
out
sub
pop
and
je
pusha
push
cmpsl
push
fbld
cmp
and
pushf
or
lods
aas
test
jae
push
int3
clc
push
mov
lcall
call
gs
pop
pop
loopne
arpl
lods
cmp
push
pop
aas
mov
sub
fmull
mov
cmp
data16
pop
dec
pop
loopne
mov
stos
shr
xchg
mov
jl
mov
out
sahf
jle
repz
sub
push
sub
js
jo
ds
fdivl
shll
sub
dec
outsl
arpl
rolb
mov
dec
xor
push
inc
frstor
fisttpll
mov
dec
rorl
jge
or
ljmp
xchg
or
int
mov
lods
insb
loope
jl
dec
add
mov
lcall
test
sub
mov
rep
push
jmp
pushf
mov
jmp
out
cmc
and
pop
or
xchg
shlb
ljmp
mov
out
arpl
fisubs
add
sub
aam
pop
shll
imul
mov
or
pop
lods
loope
mov
xlat
mov
mov
movsb
xchg
inc
push
daa
movl
fs
inc
xchg
call
pusha
lea
jmp
lea
je
lea
push
pusha
mov
pushf
pushl
lea
mov
xchg
lahf
cwtl
bswap
cwtl
pushl
popl
bswap
pop
sets
setnp
mov
movsbw
movl
pushf
lea
jmp
inc
lea
pushf
mov
lea
call
jmp
push
movl
jmp
pushf
jmp
mov
outsl
aad
je
sar
addr16
in
sbb
lahf
adc
stos
mov
jp
xchg
add
mov
insl
int
mov
inc
cmp
call
sti
mov
and
sar
add
pop
in
jle
xchg
scas
push
out
mov
add
mov
rcrl
int
stos
xchg
scas
dec
fisttpl
loopne
sbb
fidivrs
add
jecxz
aam
lea
not
mov
call
call
lea
je
pushf
clc
cmp
cmc
add
pusha
jmp
shl
and
mov
clc
push
cmpb
pusha
movb
pushf
lea
jne
das
pusha
movzbl
aad
xor
sbb
test
bswap
bswap
mov
test
inc
neg
add
sar
mov
test
test
pusha
call
jmp
mov
movzbw
movzbw
mov
pop
pushf
pushf
pushf
movb
pushl
ret
pushf
jmp
lea
movw
bswap
mov
pushf
lea
call
jmp
inc
pushf
lea
jmp
bswap
test
push
bswap
mov
inc
movzbw
bsf
stc
push
shld
shr
push
test
push
bsf
adc
cmp
push
push
bts
bsf
test
xchg
btr
pusha
mov
pusha
mov
ror
sub
mov
call
cmp
pushf
call
jmp
ficompl
inc
mov
loop
push
or
lret
jp
xchg
sub
int3
pop
mov
inc
hlt
arpl
pop
inc
mov
sar
cmpsb
cltd
nop
sub
mov
pop
daa
add
outsb
movsl
enter
and
mov
ljmp
fimull
sub
push
mov
mov
adc
jne
adc
dec
out
add
or
and
pushf
adcl
cmp
dec
add
pop
fnsave
pushf
sub
addr16
out
inc
and
pop
add
mov
mov
fcomp
ret
aas
jb
jnp
fimuls
call
jle
mov
lea
or
stos
cmpsl
ret
add
inc
movsl
aad
ljmp
repz
scas
rorb
cmp
lea
jbe
btc
bsr
rcr
ror
sub
adc
movzbw
mov
test
mov
cmc
mov
xor
bts
bsr
jae
add
xchg
shr
shl
mov
shl
push
lea
add
jmp
test
mov
xor
btc
mov
pushf
cmc
sub
call
lea
jne
bsr
push
mov
sar
rcr
add
sub
add
lea
cmp
cmc
test
sub
push
pusha
pushl
popl
cmp
cmp
pushf
pushf
pushf
jmp
stc
mov
rol
call
mov
setle
pop
lea
pushl
popl
call
popf
adc
mov
dec
push
adc
movsb
and
pop
stc
inc
test
xchg
jbe
jnp
mov
jb
sbb
out
test
fiaddl
jb
mov
cmc
dec
push
xchg
cs
jbe
movl
push
pushf
xchg
lods
mov
mov
jmp
pusha
pushf
movl
jmp
pop
imul
lret
sbbl
cbtw
inc
call
push
mov
shrb
xor
into
mov
in
mov
loopne
ds
stos
icebp
mov
aaa
fistl
mul
xor
int
vpmacswd
xchg
xor
xlat
cmc
or
jbe
adc
inc
or
sarb
add
jecxz
sbb
mov
and
mov
sbb
testl
dec
jae
or
lret
add
jmp
add
mov
bt
bt
cmc
bt
sub
jmp
push
call
inc
push
xor
and
movsb
stos
rcrb
aad
pop
push
cwtl
pop
cmp
push
inc
inc
xor
push
out
out
ss
cs
or
mov
outsl
ss
adc
cmc
shlb
addr16
inc
daa
xchg
push
mov
adc
addr16
mov
mov
movsbw
lea
call
mov
call
imul
gs
xor
cs
insb
add
rorb
pusha
pushl
ret
pushf
pushl
lea
jae
not
sub
mov
movsbw
shr
movsbl
call
lea
jne
btc
movsbw
mov
test
pushf
cmp
pusha
pushf
lea
ja
mov
pop
mov
lea
pop
not
xchg
movsbw
push
mov
pop
setno
jmp
lea
jne
call
rcll
cmc
mov
and
inc
pop
and
test
and
cli
sahf
nopl
jno
scas
je
cmp
jmp
jp
fsubr
pop
inc
push
sbb
lods
mov
push
lea
icebp
mov
mov
adc
pop
clc
adc
pop
call
and
test
push
jns
pop
orb
scas
leave
dec
and
insl
jp
nop
repnz
pop
push
lds
lret
in
sub
repnz
push
popf
add
cli
mov
imul
movsb
inc
cld
xor
mov
sbb
cli
add
xchg
es
jmp
push
jle
loope
inc
lods
cmp
mov
sub
in
jle
mov
xorl
xlat
and
ret
mov
aad
mov
and
jp
jbe
jge
pop
mov
jnp
push
es
xlat
mov
test
mov
jle
lret
mov
mov
add
nop
push
add
rorl
and
jp
push
les
adc
jecxz
pop
or
mov
insl
data16
push
pop
test
xchg
adc
add
or
stos
xor
aam
pop
popa
stc
fwait
or
iret
add
out
xchg
push
cli
daa
xor
ljmp
outsb
or
insl
out
dec
jne
cmpl
pop
movsl
or
inc
sub
stos
lock
int
xorb
mov
inc
push
lahf
lret
je
in
fisubrl
push
jns
orl
add
pop
pusha
lea
je
bt
pusha
cmp
movb
pusha
pushf
call
xchg
jge
lds
cmpl
lds
lds
jno
addl
jno
add
jge
lds
jl
lds
ja
lds
xorl
insb
in
jmp
call
call
and
lret
add
inc
dec
inc
mov
imul
cmp
rorl
pusha
je
lods
push
jle
xor
cmpsl
mov
fsubrs
ret
jno
mov
mov
push
add
insb
mov
orl
add
pusha
adc
out
mov
mov
mov
insl
test
xchg
mov
sub
sbb
xchg
xorl
mov
andl
jne
js
pushf
inc
jle
aad
jmp
pop
xchg
imul
sbb
jo
insb
icebp
push
jbe
jmp
out
addr16
cli
jns
test
data16
cld
outsb
repz
adcb
popf
push
pop
dec
gs
add
fildl
push
jno
jge
inc
fcmovnbe
jns
mov
jmp
aas
ret
dec
xorb
stos
push
mov
push
test
fs
fsubrl
pop
fidivl
shrl
xchg
add
push
ret
xchg
cld
pop
int3
in
fistpll
daa
jecxz
stc
loop
xor
adc
mov
mov
xchg
shlb
into
and
aas
adc
iret
or
inc
jp
push
and
fwait
loopne
out
xor
daa
mov
dec
ret
addr16
mov
loop
mov
dec
sti
adc
test
push
fwait
or
jns
adc
sub
scas
sub
pop
rol
ja
int
adc
daa
lret
sbb
xchg
jbe
mov
clc
push
adc
jle
inc
push
je
sti
adc
mov
lcall
cmp
mov
pop
call
xchg
scas
scas
test
fwait
and
movsl
jle
fadds
mov
ret
test
pusha
mov
mov
gs
add
popf
or
adc
adc
movsl
sarb
lods
pop
outsb
inc
dec
sbb
mov
push
and
push
mov
dec
test
adc
xchg
pop
jle
cmp
sahf
pop
xchg
mov
jno
inc
mov
in
dec
cwtl
das
mov
xchg
sub
cmpb
fcompl
js
xor
das
mov
mov
mov
arpl
fcompl
je
cmp
inc
fidivs
pushf
jae
movsb
push
in
test
push
mov
xlat
pop
inc
arpl
and
jno
cld
into
mov
ja
in
loopne
mov
mov
andb
push
stos
adc
lret
in
cwtl
lods
jmp
cmpsl
mov
xchg
jg
fs
iret
mov
js
jb
loop
adc
and
mov
or
cmp
inc
movsl
xchg
sti
cmp
ret
pusha
mov
movl
mov
lea
jmp
cmpsb
adc
mov
xor
push
jmp
jge
dec
inc
dec
mov
out
add
je
int
jne
sub
sbb
push
out
add
inc
add
mov
sbb
xor
sahf
jae
pop
xor
scas
mov
shrb
add
insl
hlt
aad
movw
pushl
push
lea
je
jmp
lea
jb
pusha
cmp
pusha
call
rol
push
pushl
cmp
lea
pushf
movsbl
movsbl
lea
pushl
setl
lea
jae
pushf
mov
pusha
lea
ja
pushf
lea
jb
call
cli
xchg
mov
cmpb
and
mov
lods
dec
mov
mov
or
repz
pop
in
cmp
sarb
out
cmpl
icebp
sub
mov
lds
pop
imul
shl
cs
pop
push
sti
mov
mov
mov
imul
cmp
adc
dec
test
fildl
mov
or
or
and
stc
pushf
mov
pcmpgtd
jp
popa
pop
add
mov
shl
rolb
pop
mov
push
xor
mov
or
cmp
out
clc
repz
fwait
ss
inc
cwtl
cltd
sub
mov
or
adc
xor
xchg
inc
out
fcom
gs
imul
jle
enter
or
repnz
mov
adc
pop
je
mov
inc
loope
push
push
jnp
stos
adc
xlat
inc
fidivrs
sbb
inc
xlat
pop
hlt
pushf
xchg
push
add
mov
arpl
jl
mov
out
mov
cwtl
pop
out
adc
out
test
mov
lret
and
dec
xlat
mov
mov
nop
in
shlb
cmp
sbb
gs
cmp
lret
into
subb
outsb
es
push
inc
dec
push
arpl
and
lea
adc
popf
mov
add
dec
pop
mov
lea
or
inc
dec
in
lods
mov
jl
cmc
sbb
in
test
add
mov
pop
mov
in
pop
jno
inc
pop
mov
or
push
lcall
getsec
sbbl
jecxz
test
cs
push
xor
imul
into
xor
dec
mov
scas
scas
mov
lock
push
loope
add
mov
push
dec
fsts
inc
repz
sbb
push
mov
adc
lcall
mov
jae
ljmp
fcoml
mov
add
mov
std
mov
or
outsb
std
lods
lret
outsl
movsb
or
inc
cmp
std
fildll
movsb
sbb
add
push
loope
sub
jb
test
add
inc
cs
jbe
dec
imul
out
lea
and
xchg
in
test
dec
mov
pop
add
sbb
add
xor
test
cld
popa
or
jno
mov
inc
adc
rcll
jne
mov
je
and
ds
in
adcb
xchg
pop
cmp
push
out
jl
mov
insl
jae
dec
inc
xor
sub
lahf
lods
mov
and
enter
cmp
jge
popf
jo
lret
xor
xor
into
fs
ljmp
sub
data16
lea
or
frstor
xor
pusha
popf
adc
or
movsl
jle
pop
pop
xchg
dec
test
mov
jp
mov
mov
pusha
xchg
pushl
popl
cmp
cmc
cmp
pushf
movw
lea
ja
bt
cmp
sub
push
lea
jmp
pushf
ja
jno
test
imul
jae
jbe
mov
cmp
and
dec
inc
dec
push
sub
mov
push
jg
dec
les
cwtl
lret
pop
out
cmpl
or
cmp
cmp
stos
loopne
fsts
cmp
and
mov
dec
aad
push
addr16
push
mov
into
mov
mov
mov
push
stc
cmp
dec
xor
dec
cmpsb
scas
or
into
pop
mov
cmpsb
and
int
mov
in
aad
push
sub
ss
inc
daa
clc
decl
inc
nop
stos
lret
xchg
mov
in
jno
and
jne
mov
insl
ret
dec
cmpsb
lahf
mov
loopne
leave
repz
push
fsubrs
divb
push
xorl
mov
jo
add
bound
scas
aam
cmp
aam
mov
and
xor
dec
std
pop
mov
and
pop
adc
leave
xor
xchg
push
and
loop
jecxz
stos
int
pop
xchg
sbb
mov
xlat
pushl
pushf
mov
lea
jmp
imul
stos
lret
dec
bound
rorl
out
dec
divl
loopne
sbb
pop
inc
iret
pop
stc
enter
dec
outsb
repz
out
lret
stos
into
testw
sbb
icebp
push
lcall
sbb
jbe
out
icebp
sbb
xorb
fbstp
mov
repnz
xor
xlat
dec
sarl
test
fmuls
aas
sbb
adc
cmp
fs
scas
mov
pusha
call
pusha
movl
pusha
pushf
push
pushf
movl
push
lea
jmp
lea
ja
dec
push
dec
inc
pusha
pushl
inc
inc
not
xchg
rcl
sub
rcl
cmc
mov
rcr
mov
cmc
mov
or
sub
mov
stc
cmc
sub
jne
cmc
sub
push
call
movl
call
inc
push
aaa
stos
lret
movsl
ds
pop
dec
out
push
ds
xlat
roll
jg
imul
sub
int3
dec
sti
jecxz
xchg
sbb
mov
jmp
add
mov
popf
add
fidivrs
es
lock
add
cltd
filds
mov
inc
les
sub
add
push
sub
mov
mov
test
cld
in
mov
adc
pusha
dec
cmp
cmp
push
shl
pushf
mov
mov
lea
jg
lods
push
movw
lea
jnp
ror
call
lea
call
call
sbb
mov
sub
sti
add
repnz
push
stc
add
dec
call
add
out
jbe
pushf
call
call
pushf
push
mov
pushf
pushl
push
pushf
lea
jmp
pushf
lea
jne
pusha
call
pushf
movw
call
mov
sbbb
push
lods
inc
int3
xchg
xor
pusha
daa
mov
sbb
pop
push
leave
fcomp
push
mov
iret
ficoms
sub
iret
push
and
out
out
aad
xchg
out
and
mov
enter
shrb
jbe
mov
add
inc
cltd
cmp
cltd
sub
stc
xchg
mov
or
test
xchg
cmp
push
mov
movsl
mov
jmp
add
outsl
mov
insl
insb
dec
xchg
mov
scas
jmp
or
mov
jmp
pop
hlt
dec
aam
aam
dec
addb
xchg
stos
xchg
rorl
rol
sub
jae
xor
test
or
sbb
sbb
lret
xchg
cmp
cmp
call
xchg
rorl
dec
pop
push
push
lea
xor
add
dec
es
fcom
mov
mov
in
jbe
xor
xchg
dec
aad
xor
aas
data16
fs
dec
inc
jbe
xchg
mov
mov
scas
or
mov
lret
mov
cltd
xor
push
mov
test
dec
or
jle
clc
adc
push
aaa
daa
mov
dec
jbe
ds
pop
add
xor
hlt
bndstx
out
inc
pop
push
jmp
andb
inc
daa
xor
mov
jb
jle
sub
pop
aaa
mov
jp
sarb
inc
jno
pop
scas
imull
shl
sarb
sti
or
imul
fsubs
lods
out
iret
call
mov
movb
call
pop
adc
lret
mov
inc
sbb
and
push
hlt
mov
in
imul
repz
stc
lods
mov
and
mov
cmp
adc
xchg
js
ret
icebp
insb
in
mov
inc
cmpsb
jne
movb
push
loope
sbb
inc
inc
or
mov
jmp
into
push
cmp
movsb
pop
rorl
xchg
adc
dec
sub
outsb
pop
mov
adcl
imulb
and
aad
pop
into
xor
stos
mov
clc
leave
jbe
xlat
pop
jmp
daa
frstor
and
pop
cmp
cltd
cs
insl
lds
int
dec
sub
cmp
xor
mov
or
sbb
icebp
mov
fsts
sub
xchg
std
and
popf
adc
sarl
mov
inc
js
popf
cmpsl
adcb
lcall
jecxz
add
je
outsl
fs
gs
imul
add
call
and
dec
ja
pushf
movw
movl
pusha
lea
jmp
bt
cmp
pushf
call
push
movb
call
jmp
lds
cmpsb
lret
mov
and
dec
fldl
sbb
push
popa
jae
int
adc
jb
idiv
outsl
push
pinsrw
cmp
lods
mov
out
jle
int
int
test
das
out
lcall
push
fs
aam
jae
add
push
loopne
mov
into
inc
jne
mov
cs
add
cmc
xor
aaa
push
je
xchg
push
lods
insl
fimull
shl
dec
insb
incl
pusha
nop
add
clc
xchg
test
int
out
mov
jle
int3
pop
xchg
in
sti
mov
xchg
xchg
sub
jb
lret
mov
adc
or
loop
mov
push
sub
fistpll
test
hlt
jge
lret
mov
inc
sbb
in
xchg
cmp
push
mov
jns
neg
ret
aaa
addr16
and
cmp
or
cmpsl
dec
sub
out
mov
sbb
push
sub
mov
or
jno
je
test
es
test
test
pop
fadds
inc
into
sbb
aas
inc
das
sbbb
push
mov
mov
cmp
lods
fildl
clc
stc
andb
mov
fs
jne
pushf
jmp
out
addr16
lret
xchg
lods
mov
sti
mov
int
mov
jno
andb
cwtl
ds
adc
and
dec
mov
jge
push
out
xchg
xor
ret
roll
push
lcall
pop
xchg
sbb
xchg
inc
inc
xor
js
lret
push
jno
pop
or
scas
shrb
in
push
cmc
jl
dec
gs
push
jno
fs
mov
cmp
pop
push
les
flds
cmpsl
stc
dec
ljmp
add
mov
and
cmp
pop
mov
test
arpl
lea
je
push
lea
jmp
lea
je
pusha
stc
pushl
cmp
lea
pushf
push
pushf
pushl
ret
call
push
imul
ficomps
xchg
mov
stos
ret
fldenv
sysret
push
jae
push
arpl
ss
out
inc
out
jns
ss
int3
push
add
cs
xchg
or
ja
cltd
mov
dec
stos
leave
cmp
sub
loope
push
imul
lea
ja
pushf
lea
jb
push
cmc
cmpb
jmp
movb
cmp
movb
mov
pushf
lea
ja
push
inc
not
inc
pusha
inc
cmp
sub
or
pusha
xchg
sub
movzbw
ror
mov
bt
mov
pushl
mov
shrd
jmp
lea
call
call
lea
jne
pusha
pusha
stos
pushf
mov
push
lea
jmp
movb
mov
mov
push
mov
pushl
ret
xor
mov
inc
sub
jae
bsf
stc
shl
mov
pusha
sub
pushl
pushl
popl
stc
cmp
jmp
push
lock
std
std
test
xchg
bound
mov
ret
jns
in
ret
in
es
pushf
mov
pop
jnp
xor
lret
insl
jge
fxam
and
dec
inc
inc
and
aam
pop
lret
add
in
shrl
adc
test
add
xchg
adc
mov
test
pop
ret
in
xchg
push
jbe
adc
inc
insl
sbb
cwtl
out
cmp
adc
inc
ljmp
cmp
scas
sarb
jno
out
sub
fsubr
loopne
popl
rcll
fists
xor
mov
mov
std
mov
lea
inc
sbb
les
pop
call
mov
inc
fwait
mov
into
jne
adc
cmp
pop
jnp
aas
test
sub
pop
pop
inc
mov
jno
mov
sub
pop
jno
imul
outsb
pop
popf
js
mov
sub
mov
std
add
rcrl
test
movl
cmp
pushf
call
not
mov
call
pushl
push
lea
jne
movzbw
mov
pushf
pusha
pushf
lea
jmp
mov
jmp
rep
movzbw
bswap
bswap
mov
pushl
pushl
movl
pushf
lea
jmp
stc
push
mov
or
pusha
pusha
jmp
jmp
lea
jne
bsr
rol
shld
ror
mov
dec
adc
shr
sub
inc
shrd
shl
mov
clc
cmc
bt
cmp
sub
test
pushf
pushf
cmp
pushl
popl
clc
cmp
jmp
popf
cpuid
nop
pusha
movl
jmp
call
jmp
sub
pushf
cmp
pusha
push
jmp
pop
jmp
and
pop
das
movsb
and
shll
add
loop
adc
sbb
int
int3
inc
fnstcw
jge
mov
pop
adc
mov
loope
into
mov
lods
popf
shrl
sub
cmc
imul
sub
mov
jae
jno
jecxz
jae
out
popl
cmpsl
sbb
lock
stos
xchg
mov
cmp
xor
xchg
imul
and
loopne
push
xor
and
push
cwtl
lock
pop
stos
lods
addr16
mov
xor
clc
xchg
or
sub
into
sbb
js
jl
iret
stos
in
sbb
call
lea
jne
movzbw
bsr
sub
mov
or
xor
mov
jmp
movl
movzbw
seta
movsbw
movsbl
lea
call
pushl
pushf
jmp
movl
pusha
pushl
popl
pusha
pushf
movb
mov
pushl
ret
xchg
test
lret
aas
and
add
nop
divb
test
add
dec
imul
je
inc
push
cmp
sub
jge
aam
je
es
in
cmp
inc
adc
inc
adc
xchg
jp
ds
enter
adc
cmp
xor
inc
fwait
mov
shlb
cmc
pusha
hlt
adc
push
xor
lret
and
popa
pop
mov
into
or
shlb
dec
lret
xlat
add
and
sbb
seto
push
cmc
mov
add
clc
add
orl
mov
sahf
lret
inc
sub
nop
mov
xchg
pop
push
daa
xor
jp
lcall
or
mov
mov
cmp
fwait
cmp
dec
test
xchg
cmpsl
lock
hlt
testl
lret
mov
shlb
xor
aas
sarb
mov
iret
jo
pop
push
push
mov
cld
test
loope
xchg
sbb
inc
hlt
gs
lret
inc
pop
outsb
pop
les
lods
fildll
pop
imul
jo
jne
add
rcrl
jecxz
jae
addr16
mov
mov
in
shl
xchg
push
add
mov
pushf
and
xorl
out
mov
nop
jmp
lret
ret
lods
stos
ds
mov
mov
xchg
aam
insl
nop
mov
shrb
cmpl
push
inc
mov
test
jnp
and
in
add
rorl
push
mov
lods
je
mov
sbbl
mov
push
popf
testb
pop
loope
inc
mov
push
jge
jle
js
sahf
push
or
mov
jp
push
scas
mov
push
int
insb
cmpsl
push
out
and
jecxz
add
mov
push
mov
mov
mov
jno
jne
int3
cmp
cli
int
xor
ss
aas
hlt
andnps
sbb
pop
aaa
and
repz
pop
inc
flds
test
popf
ja
xchg
pop
jne
adc
pop
insl
cli
mov
lods
push
pop
inc
rcrl
mov
test
jmp
test
cmp
push
call
mov
pushf
not
call
movl
dec
push
not
jmp
movl
pushf
movl
push
pushl
lea
jmp
pushl
popl
pushl
pushf
pushf
movw
pushl
ret
push
jmp
cmpsb
je
pushf
lret
popl
addr16
shlb
test
lcall
add
lret
aam
loop
ljmp
test
mov
punpcklbw
xor
push
inc
loope
addr16
xchg
jne,pt
mov
aaa
lret
mov
inc
loopne
adcl
rcll
mov
repnz
bt
cmp
pusha
lea
jb
test
cmc
cmp
jp
push
pushf
lea
ja
pushf
shl
cmc
push
add
lea
test
bt
call
jmp
dec
call
jmp
fs
jbe
lret
or
mov
xor
push
pushf
dec
mov
sbb
inc
mov
call
pop
xor
or
push
mov
inc
sarl
pop
push
shrb
loopne
push
xchg
clc
fcoml
call
jns
adc
jmp
mov
fisttps
inc
adc
sub
cmpsb
sbb
cwtl
in
fwait
jno
ret
mov
fisttpl
fwait
add
mov
cmp
test
stc
cmpb
call
jmp
pushf
pushf
repnz
movb
call
dec
arpl
hlt
call
aaa
inc
adcb
or
mov
mov
ja
mov
adc
pop
in
sti
push
mov
jo
cmpsl
push
xor
xchg
sbbl
cmp
ret
sbb
push
sti
xor
out
and
ds
lods
in
mov
jecxz
sti
sbb
and
lock
lds
pop
xchg
test
add
sbb
in
inc
imul
mov
arpl
dec
mov
out
and
cmpsl
cltd
lret
jl
cmpsl
popa
mov
popa
add
and
dec
mov
imul
xor
outsl
mov
xor
fldt
mov
xchg
jo
inc
pop
fdivrl
mov
xchg
test
js
dec
mov
lret
push
js
fistl
xchg
test
pop
das
cmp
inc
in
jle
inc
cltd
lret
sub
mov
or
push
adcl
adc
in
fsub
int3
and
mov
out
in
jp
in
test
sahf
mov
adc
cmp
popl
dec
outsl
cmp
mov
or
push
pop
leave
fwait
loopne
test
shrd
pop
xchg
mov
push
movsb
imul
test
cmp
enter
adc
clc
mov
cltd
out
push
lahf
mov
negb
repnz
pop
dec
aad
enter
ret
ret
popf
or
add
test
test
jmp
lods
lock
mov
push
repz
add
add
xchg
push
lret
xchg
xchg
cs
jb
or
test
popf
shr
jae
in
bound
ficompl
sub
je
dec
insb
add
jle
xchg
mov
jecxz
add
pop
push
add
inc
test
loop
sbbl
sub
pop
jge
scas
cltd
popf
clc
xor
and
dec
scas
mov
pop
dec
cmpsl
adc
repz
lods
test
lahf
movb
pop
jg
gs
and
adc
fdivrp
out
mov
pop
mov
push
fsubs
inc
scas
insb
sti
cmpsl
mov
pop
adc
cmp
roll
out
insl
cmpb
xchg
fcomps
push
push
cmp
adc
or
dec
xor
icebp
dec
pop
addb
ja
clc
xchg
and
push
fistpll
and
add
into
add
lahf
lods
jnp
stc
push
and
mov
dec
das
jmp
ficoms
cmp
pusha
movl
lea
jne
push
push
lea
jmp
lea
jne
bswap
bswap
movb
jmp
inc
mov
jmp
add
mov
mov
test
test
mov
movb
movb
lea
jne
call
jmp
push
push
pushf
movl
pushf
movb
pushf
movb
lea
jmp
test
mov
clc
bt
bt
bt
add
cmc
test
call
pusha
mov
jmp
pusha
call
lea
jae
pushf
movw
lea
jmp
call
pushf
pusha
movl
jmp
pushl
lea
call
pusha
mov
pushf
mov
pusha
lea
jmp
mov
xchg
lret
fs
inc
sbbl
push
loopne
xor
push
fidivrl
cmp
sti
inc
out
popf
lock
mov
aam
movsb
add
pop
out
add
mov
dec
and
test
mov
xor
or
inc
dec
and
jl
into
xor
push
lahf
dec
imul
pop
sub
mov
out
jnp
test
lods
sti
xchg
lret
outsl
loope
jno
pop
inc
ljmp
aad
dec
and
mov
lcall
mov
jns
cmp
sbb
inc
mov
arpl
mov
push
sbb
aam
push
ss
pop
mov
mov
push
dec
sub
fucomi
inc
mov
ljmp
sub
sti
xchg
push
stos
sub
lcall
and
mov
fcomi
add
shll
xchg
scas
stos
bswap
pusha
mov
pushf
movb
pushf
push
lea
jmp
cwtl
in
xchg
lret
lahf
imulb
mov
hlt
sub
mov
sbb
push
scas
push
xor
dec
cmp
and
jb
imulb
out
mov
pop
adc
jns,pn
adcb
or
pop
jo
pop
cld
das
dec
jmp
or
sub
or
jmp
insb
jbe
mov
mov
adc
mov
inc
push
mov
cltd
or
stos
ds
cmp
pusha
or
sarb
inc
xchg
cli
mov
shlb
popf
add
adc
loopne
jl
add
iret
fdiv
lcall
fs
je
bswap
bswap
call
mov
push
movb
mov
pusha
mov
pushf
pushf
pushl
ret
mov
cmpb
mov
add
pop
xchg
pop
fs
jp
lret
or
leave
pop
sbb
popa
or
or
fwait
daa
push
out
mov
cltd
insb
push
scas
lea
push
stos
pushf
das
daa
inc
mov
movsb
aaa
inc
shlb
test
push
int3
xchg
enter
loopne
mov
pop
add
mov
lods
sub
dec
setb
fidivrl
jnp
ds
je
mov
xchg
or
jle
xchg
lret
cld
lock
hlt
imul
sub
movl
clc
sub
adc
rcr
lret
jo
lret
mov
lock
jcxz
push
aam
lcall
cwtl
sbb
cmp
loopne
into
pop
movsl
pop
les
cmp
pop
aas
scas
jmp
leave
mov
rcll
es
out
test
jbe
mov
dec
cmc
imul
popa
inc
adc
imul
ss
pop
dec
mov
stc
das
xchg
inc
push
cs
xchg
lret
jl
fsubl
in
xor
and
sbb
dec
push
dec
inc
pop
hlt
loop
jns
movsb
add
pushf
mov
fmull
jg
in
int3
mov
cmp
into
sti
sbb
jbe
hlt
aad
decb
xchg
out
in
stos
xor
mov
cmp
cwtl
xchg
ror
cs
lret
xor
sbb
dec
and
and
idivl
ret
mov
notb
mov
mov
lcall
subb
sbb
ljmp
cmp
test
pop
mov
adc
or
dec
mov
mov
lock
push
sub
ret
filds
jl
pop
movsl
add
jmp
push
out
shld
xor
int
dec
mov
cltd
outsl
lock
adc
ret
and
bound
xchg
fildl
testb
stc
bt
sub
pushf
mov
jmp
add
add
rcr
rcr
push
cmc
neg
bt
stc
mov
daa
and
btr
rol
sub
movsbw
bsr
shld
push
sbb
lea
push
pusha
das
setbe
mov
sbb
sub
lea
call
lahf
pop
mov
icebp
jle
lret
pop
shl
mov
popf
jle
sbb
or
cmpsl
stos
mov
sahf
inc
xchg
popf
or
scas
inc
cltd
jae
fnstenv
push
or
mov
sahf
push
and
xor
xchg
cmp
icebp
sub
jge
popa
repz
call
bound
or
dec
out
jo
dec
mov
bound
mov
lea
jae
pusha
not
push
call
pushf
lea
jne
pusha
call
cli
loopne
xchg
lret
jno
cmp
fs
cwtl
pop
sbb
push
jne
cs
mov
adc
sub
push
sub
ret
jo
pusha
cmp
int
mov
clc
push
sarl
push
in
and
test
xor
xchg
add
js
push
iret
cltd
outsb
cmp
or
lock
pop
repz
push
jecxz
jg
mov
je
or
dec
and
arpl
cld
xor
lock
int3
rorl
xchg
mov
cwtl
add
xchg
addl
rclb
cld
cmpb
in
mov
cmc
push
stc
push
sub
pusha
call
sub
lret
icebp
pop
inc
or
faddl
or
pop
mov
xor
out
dec
push
dec
fbstp
dec
mov
subb
cmc
cld
iret
out
lods
std
movsb
je
popa
fsub
cld
cmp
lret
inc
xor
pop
mov
mov
arpl
mov
popf
add
cs
xchg
jle
xor
test
lahf
ljmp
aam
iret
sub
lea
pop
sbb
pop
push
inc
push
lret
outsl
fistpll
mov
imul
mov
mulb
pushf
mov
lea
jne
jmp
movb
pushl
lea
call
push
pusha
call
sub
jmp
jno
jnp
lret
insb
negl
arpl
jno
sub
mov
imul
dec
cmp
in
lret
in
sub
lea
lods
shll
testl
sub
mov
cld
and
xor
cmp
mov
int
dec
sub
jle
sbb
mov
inc
cmp
dec
ss
fisttpll
dec
fldenv
in
cs
push
movw
inc
push
pushf
jmp
mov
mov
mov
pusha
push
push
pushl
ret
jmp
call
setg
lods
push
pushl
clc
ror
pushf
pushl
call
lea
ja
mov
call
test
pushf
call
call
push
lea
jb
pusha
pushl
ret
push
lea
ja
test
not
shr
pushf
add
cmp
clc
mov
jmp
cmp
jp
je
test
stc
push
pushf
cmp
push
call
pusha
pushl
not
jmp
pushl
rep
movzbw
movzbw
mov
pushf
pusha
pushf
lea
jmp
pusha
rol
pushf
pushl
not
jmp
imul
lret
xchg
sbb
xchg
scas
rcll
daa
sarl
sub
xor
cli
sub
push
push
sbb
add
jne
xorb
add
lea
cmp
lret
bound
inc
xchg
sbb
mov
call
dec
and
jp
push
dec
sbb
std
push
jo
push
and
add
les
in
and
shr
push
push
lea
jno
lea
jmp
add
add
call
xlat
jne
bextr
adc
sub
out
pushw
sub
addr16
aas
pusha
mov
xor
xor
push
lds
adc
adc
int
lods
cmp
lods
xchg
loope
jnp
adc
pop
xlat
xor
or
pop
xor
xorl
jae
or
into
inc
add
mov
popf
fisubs
jnp
lret
pop
mov
sbb
jl
dec
pop
lret
stos
mov
psubusw
orl
hlt
sbb
dec
xor
mov
lock
inc
pop
mov
into
mov
out
sbb
push
xor
mov
jnp
fiaddl
sbbb
jbe
data16
jae
xchg
jnp
xchg
hlt
inc
outsl
out
enter
mov
lret
sbb
jmp
pushf
scas
jecxz
bnd
arpl
mov
push
pop
nop
pusha
je
inc
cmpsb
inc
push
mov
cmpl
in
dec
push
sub
pop
rcr
and
dec
pop
cmp
xchg
pop
jbe
and
push
adcb
add
iret
lds
lock
mov
inc
nop
js
jo
aam
les
add
xchg
pop
jbe
outsl
sub
push
test
mov
lea
add
lock
and
mov
xor
and
and
xchg
dec
fiadds
xchg
pop
jbe
rclb
test
aam
add
mov
cmp
sbb
cmp
enter
cli
leave
repnz
dec
push
std
or
mov
ds
out
mov
inc
jmp
outsb
rorb
js
mov
pop
lds
push
cmp
and
test
jne
sub
in
mov
adc
or
xchg
call
data16
std
adc
repnz
push
xor
aad
loope
jb
adc
fimuls
mov
inc
in
mov
push
push
or
les
push
imul
mov
ret
cvtps2pd
hlt
lahf
xor
mov
lods
stc
ror
pushl
pushl
not
call
lret
mov
sbbb
cmpsb
jge
mov
fwait
inc
arpl
ljmp
mov
adc
and
incb
or
call
ja
movsl
add
es
sub
push
lea
jmp
pushf
stos
pushl
lea
jmp
pusha
inc
pushl
jmp
lea
je
jmp
add
dec
gs
popa
addr16
outsl
js
add
pushf
imul
pusha
stc
mov
add
pushl
movl
push
mov
lea
jmp
inc
call
call
mov
jmp
add
call
call
rep
bswap
mov
movb
lea
jmp
imul
add
addr16
xchg
test
adc
add
ljmp
into
test
sub
cmc
inc
orl
push
ret
pop
lret
or
mov
push
int
xor
aas
lock
add
negl
loop
jo
das
push
fwait
movsl
pushf
pop
sbb
and
jmp
pusha
pushl
call
clc
test
cmp
jmp
push
jmp
test
sub
push
cmp
cmc
cmp
pushf
pushf
push
lea
ja
clc
stc
push
imul
pushf
clc
add
pusha
push
pushf
mov
lea
jmp
rol
seto
xchg
mov
rol
neg
mov
sbb
adc
shr
shl
push
and
mov
jmp
movl
add
loop
pop
add
add
add
notl
and
add
adc
pop
add
add
add
add
lds
call
fs
je
cmc
add
pushf
lea
jmp
mov
clc
cmp
pushf
pusha
test
push
jmp
lea
jae
jmp
bt
sub
push
lea
jae
rep
not
call
mov
pusha
lea
ja
pusha
sub
pushl
push
push
lea
jmp
add
movw
pushf
pusha
lea
jmp
test
cmpb
and
mov
ret
and
add
bound
fwait
xchg
sub
cmp
dec
dec
filds
ret
add
test
loopne
sbb
faddl
jb
call
dec
xor
cmp
or
sub
leave
ret
test
and
xchg
mov
fwait
inc
dec
xchg
sub
es
mov
idivl
xchg
cmp
orb
xchg
or
jl
and
or
stos
adc
in
adc
dec
loopne
sahf
xchg
cmpl
pushf
xor
ss
pop
adc
xchg
mov
and
sbbb
inc
lret
test
cmp
enter
jb
fwait
sub
lods
clc
cs
sbb
dec
push
inc
mov
ljmp
push
bound
push
aam
imul
jp
mov
sahf
add
jae
lret
mov
sbb
pop
call
mov
pop
hlt
jmp
in
lock
loope
sbb
aaa
sbb
push
cmp
jge
mov
arpl
loopne
stc
dec
jp
mulb
push
arpl
js
dec
inc
stos
js
ljmp
mov
cwtl
cltd
je
pop
outsl
test
divb
push
sarb
aaa
push
mov
sbb
orb
push
sbb
or
sub
ret
xor
jb
lock
inc
mov
fstl
xor
out
outsb
arpl
popf
jmp
js
jb
les
or
mov
mov
jmp
xor
push
cmpsb
jne
add
in
jnp
mov
cmp
dec
stc
add
daa
sub
les
adc
sub
xor
fidivs
outsb
sahf
mov
sti
mov
fcomps
push
sub
movzbw
movzbw
movsbw
pop
pusha
pushf
pusha
pushl
ret
jmp
mov
pushf
push
jmp
movl
push
movb
push
push
lea
jmp
push
xchg
ja
lret
jmp
cli
mov
fldenv
jecxz
xchg
ss
push
push
pop
xor
cmp
mov
outsb
xor
ds
icebp
jle
out
loope
test
add
daa
ds
jbe
fwait
mov
stc
lods
add
cmp
xor
lds
aam
in
push
fwait
cmp
vpxor
xor
sub
jo
js
xorb
into
adc
sbb
data16
add
stos
inc
cmp
loopne
test
or
call
fs
je
jmp
pusha
push
or
pushf
mov
jmp
jmp
add
test
cmp
sub
mov
movsl
fwait
xor
negl
push
insb
cld
sub
xchg
test
push
imul
adc
in
repz
mov
pusha
xchg
cmp
js
dec
sbb
mov
call
lea
lea
not
bswap
mov
mov
movzwl
movsbw
jmp
jmp
cmp
jo
lret
sarl
adc
adc
push
shrl
and
mov
sbb
push
mov
jo
xor
or
dec
jle
es
mov
pop
push
dec
stos
push
enter
push
sbbb
test
and
xor
test
inc
ljmp
and
pop
mov
popa
inc
jae
test
jmp
pusha
pusha
movl
pushf
call
lea
jae
test
cmp
pushf
cmc
cmp
call
pushf
pushf
movl
pusha
pushf
jmp
clc
stc
clc
or
pushf
push
pushf
jmp
lea
pusha
push
pushf
mov
pushf
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
test
clc
call
lds
not
sub
or
mov
pushf
test
cmc
pushf
sub
cmc
jmp
rcl
test
push
shl
not
inc
bswap
and
test
xor
cmp
adc
mov
jmp
bt
sar
mov
cmp
test
test
add
pushf
movb
pusha
lea
jmp
call
pop
add
int3
pop
rcr
pop
addb
dec
rclb
add
pop
rolb
shrb
pop
shlb
addb
rolb
pop
sbbb
pop
rol
pop
adcb
inc
rclb
inc
in
into
pop
rol
pop
add
int3
pop
shlb
pop
add
rcll
add
pop
addb
rcr
pop
rcr
pop
shl
pop
add
rcll
inc
ss
pop
orb
inc
add
rcll
add
pop
add
int3
pop
add
int
rcr
pop
add
rclb
subb
pop
orb
inc
push
pop
add
into
pop
shl
pop
inc
push
pop
rol
pop
rolb
add
pop
rolb
pop
add
int3
pop
rolb
pop
add
pop
inc
fxch
pop
add
rclb
addb
pop
rcrb
inc
sbb
pop
inc
sbb
pop
orb
add
into
pop
add
int3
pop
add
int
rolb
pop
add
int3
pop
rclb
shl
pop
rolb
add
pop
sbbb
pop
add
int
shrb
pop
addb
pop
inc
sbb
pop
add
rclb
rcr
pop
add
rcll
shl
pop
inc
scas
int3
pop
add
int3
pop
rclb
adc
add
pop
add
pop
add
int3
pop
add
rcll
xorb
pop
inc
cltd
rcll
inc
fxch
pop
addb
adcb
loop
pop
addb
subb
pop
addb
add
rcll
rolb
pop
add
int3
pop
addb
inc
jl
pop
add
pop
addb
das
int
inc
ss
pop
inc
fxch
pop
shl
pop
rcrb
pop
inc
add
pop
rcr
pop
addb
pop
add
rcll
add
int3
pop
inc
fxch
pop
inc
scas
int3
pop
add
int3
pop
rol
pop
inc
cltd
rcll
rolb
pop
shl
pop
shlb
rcrb
pop
rolb
add
int
shlb
pop
inc
jl
pop
sbbb
pop
add
rclb
rol
pop
add
rclb
add
pop
shl
pop
addb
pop
shlb
rolb
pop
inc
sbb
pop
addb
add
int3
pop
shlb
and
pop
add
int3
pop
inc
imul
pop
shlb
sbb
pop
shl
pop
inc
in
into
pop
subb
pop
add
pop
add
rcll
add
int3
pop
subb
pop
inc
rclb
rolb
rolb
pop
and
pop
shl
pop
add
pop
addb
inc
add
rclb
rcrb
pop
orb
add
int3
pop
rcrb
pop
add
pop
inc
sbb
pop
adcb
push
rcll
sbbb
pop
rclb
pop
shrb
pop
add
rclb
shlb
pop
add
int3
pop
rclb
dec
int
add
rclb
add
pop
addb
pop
add
rclb
inc
jl
pop
add
iret
pop
orb
add
rclb
add
int
add
int3
pop
rol
pop
rolb
pop
addb
rclb
inc
scas
int3
pop
shlb
shl
pop
addb
pop
rcrb
pop
rcrb
add
int3
pop
rcrb
pop
sbb
pop
shrb
pop
inc
add
pop
rclb
loop
pop
rclb
addb
addb
sbb
neg
cmp
sub
movzbl
pusha
pushl
cmp
jmp
call
jmp
pusha
call
inc
lea
js
mov
pushf
movl
lea
jmp
pusha
pushf
movb
pushf
popl
call
add
push
movb
lea
jmp
call
stc
rol
bts
and
mov
bsf
lea
bsr
lea
add
rol
bswap
not
rol
xor
dec
shl
mov
jmp
pusha
pop
mov
jmp
aam
aaa
mov
mov
test
sub
call
pusha
pushf
popl
pushf
pushl
popl
pusha
mov
pushf
push
lea
jmp
call
mov
lea
jno
pusha
lea
call
jmp
cmc
mov
push
pusha
add
not
mov
pushl
mov
pushf
lea
jmp
mov
pusha
pushf
lea
jmp
mov
jmp
cld
mov
pushf
lea
call
call
call
add
call
pushf
test
mov
stc
cmp
pusha
pushf
add
pushl
pushf
pushf
lea
jmp
pusha
call
mov
push
pushf
movl
pushf
lea
jmp
mov
pusha
push
pushf
jmp
jmp
pushf
popl
call
push
mov
call
jmp
bsr
push
sub
mov
jmp
not
ror
not
ror
seto
setne
pusha
dec
btr
xor
stc
adc
not
jmp
mov
pusha
pushf
popl
mov
push
movl
pushl
pushl
popl
push
pushf
pushf
lea
jmp
xor
jmp
pushf
pushl
jmp
test
push
sub
cmp
call
mov
call
jmp
mov
call
pushl
jmp
mov
pushf
pushf
push
lea
jmp
not
cwtl
pushf
mov
cwtl
setne
seta
mov
pushf
call
push
mov
lea
jns
mov
call
cmp
test
xor
pushf
jmp
btr
bts
sbb
bt
mov
inc
adc
sbb
mov
stc
sub
cmc
cmp
clc
call
call
shl
push
mov
push
call
sar
bts
movsbw
neg
mov
test
test
stc
rol
mov
clc
test
call
pushl
popl
mov
lea
jmp
rol
shr
mov
test
test
sub
pusha
pusha
push
pushf
mov
pushf
mov
pushl
movw
lea
jmp
jmp
pushf
call
pushl
popl
pushf
movb
push
lea
jmp
adc
xadd
dec
bsr
rdtsc
bt
call
sar
add
movzbw
movzww
bt
add
cmc
add
push
add
stc
neg
bt
cmp
clc
not
jmp
push
pushl
popl
pushf
movb
pushf
lea
jmp
mov
movw
pushf
pushf
mov
lea
jmp
jmp
call
pushl
mov
pusha
movw
mov
mov
lea
jmp
and
sar
xor
bt
bt
movzbl
movzbw
pusha
rcr
call
mov
pushf
mov
pushl
lea
jmp
jmp
push
shld
movw
pushf
mov
push
call
mov
bt
ror
cmp
add
stc
sub
mov
jmp
pushl
movw
cmpl
call
xor
mov
jmp
not
and
clc
mov
xor
add
mov
push
pushl
push
inc
bts
neg
movsbw
not
inc
dec
cmc
add
call
add
call
cmc
pusha
ror
test
cmc
jmp
call
jmp
pushl
call
xor
test
test
cmp
neg
movw
dec
push
stc
xor
pushl
xor
cmc
mov
bt
sub
call
call
inc
movzbl
cmc
shl
shld
add
bt
rcr
rcl
shl
neg
movzbw
clc
rol
not
inc
ror
neg
cmc
add
add
bts
mov
clc
add
push
pusha
pushl
mov
pushf
lea
jmp
movw
jmp
mov
pushf
pushf
push
pushf
lea
jmp
pusha
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
cmp
aam
aad
mov
sbb
btc
mov
cmp
call
cmc
shld
mov
pushf
bt
stc
add
pushf
pusha
mov
pushf
pushf
mov
mov
pushf
pushf
pushf
lea
jmp
pushl
bswap
or
bswap
sub
ror
clc
jmp
jmp
mov
jmp
cwtl
mov
clc
mov
jmp
adc
shl
movzww
test
stc
pushf
add
movb
jmp
pusha
cmc
add
pushf
jmp
movl
mov
push
push
pushf
pushl
lea
jmp
pusha
pushf
pusha
call
cld
call
divl
jmp
mov
jmp
jmp
stc
test
mov
jmp
jmp
pushf
mov
pushf
pushl
call
mov
call
bswap
pop
pusha
lea
jmp
stc
call
not
mov
neg
mov
pushf
mov
jmp
sbb
jmp
mov
mov
pushf
lea
jmp
aas
cmp
mov
shl
mov
cmp
clc
add
pushf
jmp
dec
jmp
call
bswap
lahf
pusha
mov
pusha
movw
pushf
mov
movw
jmp
clc
cmp
and
pushf
jmp
bt
add
pushl
pushf
push
pusha
lea
jmp
mov
jmp
pop
bswap
dec
rcl
bsf
jns
not
add
and
test
mov
cmp
push
clc
pusha
add
push
mov
pushl
pushf
movl
lea
jmp
sbb
shl
mov
mov
neg
rcl
not
mov
cmp
call
shld
lea
movzbw
mov
pusha
bt
test
push
add
movw
push
pushf
pushf
lea
jmp
bswap
mov
and
dec
shl
and
pushl
popl
bsf
movl
rcr
sets
xchg
mov
mov
jmp
pushl
popl
pushf
push
movb
lea
jmp
add
add
xchg
xchg
xchg
jmp
cmp
adc
bsf
shrd
and
bt
sbb
or
sub
movzbw
mov
jmp
sub
jmp
cmp
add
pushf
clc
pushl
sub
cmp
jmp
shr
jmp
call
call
call
jmp
mov
push
lea
jmp
sub
call
pusha
cld
cld
pushf
jmp
mov
call
mov
push
mov
lea
jmp
rep
inc
bsr
xadd
mov
pop
bswap
neg
shl
mov
cld
cld
push
call
jmp
mov
call
inc
inc
cwtl
stc
mov
pusha
sub
lea
jb
pusha
mov
pushl
pusha
pushf
mov
lea
jmp
neg
cmc
mov
pusha
cmc
add
pushf
inc
pusha
cmp
bt
neg
call
pushl
mov
push
movb
movl
pushf
lea
jmp
add
pusha
mov
mov
lea
jmp
mov
movl
push
push
pusha
lea
jmp
mov
pushf
mov
push
push
lea
jmp
call
movw
push
pushf
popl
pushf
pushl
popl
mov
mov
lea
jmp
push
cmp
mov
sub
stc
stc
mov
stc
or
pushf
call
pushl
popf
mov
lea
jmp
push
cmc
shrd
jmp
lea
aad
aam
bsr
lea
clc
push
pusha
test
cmp
pushf
push
lea
ja
shr
mov
xor
setle
rcl
lea
adc
pushf
aad
sub
rol
lea
lea
ja
lea
ror
and
rol
and
push
sub
movsbl
mov
push
pusha
jmp
aaa
bsf
mov
push
bt
jmp
call
mov
push
pushf
popl
mov
call
call
pushl
call
cmp
rol
test
sar
movzbl
xor
mov
xor
shrd
pusha
neg
lea
dec
pushf
xor
stc
shr
rcr
xor
ror
movzbl
jmp
test
cmp
cwtl
pusha
clc
bt
bt
sub
cmp
clc
cmc
sub
movw
mov
mov
pushf
mov
lea
jmp
test
sub
stc
cmc
call
movw
stc
add
pushf
pushf
mov
pusha
mov
movb
lea
jmp
mov
pusha
lea
jmp
push
pushf
pushf
popl
push
mov
push
pushl
popl
movb
lea
jmp
mov
jmp
pushf
push
push
mov
mov
pusha
call
bsr
mov
jmp
pusha
pushf
popl
mov
mov
pusha
pushl
popl
movl
movw
mov
lea
jmp
push
mov
pushf
mov
pushl
pushf
mov
call
call
push
jmp
movw
mov
mov
lea
jo
push
pusha
pushf
popl
jmp
call
pusha
mov
movb
pushf
jmp
pushl
jmp
neg
pusha
mov
call
pushf
jmp
pushf
mov
movb
movb
pushf
lea
jmp
pusha
pushl
jmp
mov
pusha
pushl
lea
jmp
sub
push
xchg
jmp
mov
pushf
push
pushl
ret
shld
mov
pushf
neg
shl
pushl
mov
mov
pusha
cmp
bt
add
clc
push
jmp
cmp
push
pushl
popl
cmc
call
test
and
mov
jmp
movb
call
mov
pushf
mov
mov
push
pusha
pushf
call
movb
cmp
add
pusha
mov
pushl
popf
pushf
mov
push
lea
jmp
call
mov
call
push
push
mov
pusha
jmp
call
bswap
lea
call
test
jmp
pusha
sub
movb
movb
call
jmp
shld
btc
and
mov
pusha
jmp
mov
pushl
push
mov
lea
jmp
stc
cmc
pushf
add
jmp
pushf
movw
call
inc
movb
movl
lea
jmp
jmp
jmp
pushl
popl
push
pusha
pushl
pushl
lea
jmp
pusha
call
mov
pushl
pushl
pushf
pushf
lea
jmp
add
pushf
pushl
mov
pusha
pushf
mov
pushl
lea
jmp
xchg
cmc
test
mov
call
bt
add
pushl
pushf
movb
jmp
pusha
mov
pusha
mov
pushf
pushf
lea
jmp
pushl
popl
push
lea
jmp
jmp
shld
mov
ror
mov
stc
test
sub
cmp
shl
push
mov
pushf
call
mov
dec
clc
ror
movzbl
clc
pusha
add
mov
cmc
push
jmp
mov
pop
lea
bswap
mov
pushf
jmp
call
call
movw
call
mov
bt
add
cmc
jmp
push
mov
mov
pusha
mov
pushl
jmp
pusha
add
jmp
add
jmp
dec
bt
add
clc
mov
cmp
sub
movb
call
jmp
call
call
pushl
pushl
pushf
popl
jmp
push
pushf
mov
movb
pushf
pushf
movb
mov
movw
pushf
pushf
mov
lea
jmp
call
sets
sar
inc
mov
jge
push
add
movb
cmc
call
pushf
popl
push
pushf
jmp
call
push
pushf
lea
jne
ror
sbb
pusha
test
mov
cmp
bt
pusha
and
test
bt
cmp
mov
call
neg
call
pushf
popl
movb
jmp
mov
mov
push
pushf
pushf
mov
movb
mov
jmp
pushf
jmp
test
stc
stc
mov
bt
sub
call
call
mov
mov
movl
mov
movw
pusha
lea
jmp
pushf
movl
push
pushf
pushf
mov
pusha
pushl
ret
add
pusha
pushl
lea
jmp
movb
push
mov
jmp
push
push
pushl
mov
pusha
movb
lea
jmp
lea
pushf
mov
push
lea
jmp
mov
movl
lea
jmp
setg
ror
call
neg
pushl
cmp
call
mov
push
lea
jnp
pushf
pushf
popl
call
add
push
pushf
pusha
mov
push
lea
jmp
push
push
mov
movl
pushl
pushf
lea
jmp
movsbw
bswap
movzbw
pushf
pusha
mov
call
call
mov
movb
mov
call
movb
mov
mov
mov
push
pushl
pushf
popl
mov
mov
movl
pushl
popl
pushl
lea
jmp
pushl
popl
pusha
pushl
lea
jmp
bts
mov
cmp
adc
mov
cmp
push
stc
call
mov
pushl
popl
pushf
lea
jmp
mov
mov
lea
jmp
mov
pushf
mov
mov
lea
jmp
movw
pushf
popl
push
bswap
mov
mov
std
mov
lea
cld
lea
call
pusha
mov
mov
pushf
pusha
pushf
movb
mov
pushf
jmp
push
mov
push
movb
mov
lea
jmp
inc
stc
stc
rol
cmc
neg
test
jmp
push
xchg
bswap
not
mov
pushf
mov
lea
movzbw
push
pusha
push
push
not
mov
xchg
pusha
call
movw
pusha
pushf
popl
pushf
pushl
popl
movl
mov
pushf
lea
jmp
pushf
lea
jb
pusha
pushf
mov
pushf
jmp
aaa
neg
mov
adc
mov
push
movw
pusha
add
pusha
jmp
not
pushf
clc
movw
not
movb
bt
push
clc
and
pushf
mov
mov
mov
pushf
popl
pushf
pushl
popl
mov
pushf
lea
jmp
pusha
pushl
popl
pushf
lea
jmp
mov
pushf
popl
mov
push
call
mov
pushf
mov
pushl
lea
jmp
movb
lea
jne
shrd
or
xorb
lea
jmp
shl
mov
push
test
btr
rcr
mov
and
ror
setbe
add
jbe
mov
jmp
stc
bt
test
add
pusha
pushf
pushf
popl
movb
pushl
popl
pushf
lea
jmp
test
add
pusha
movb
jmp
push
call
rep
cmc
mov
add
shrd
ror
mov
pushf
pushl
popf
mov
lea
jmp
shld
jmp
movzbw
shl
sar
mov
bt
add
pusha
movl
pushf
pushf
lea
jmp
pusha
lea
jnp
pusha
mov
pushf
pusha
mov
pushf
pushf
movb
lea
jmp
push
pop
and
bt
shl
btr
mov
test
jmp
mov
pushf
mov
lea
jmp
clc
rol
shrd
mov
pushf
pushf
mov
rcl
mov
pushf
movb
mov
mov
not
bt
not
pusha
jmp
sub
push
pushf
jmp
mov
movb
pusha
pushl
popl
movb
lea
jmp
mov
push
pushf
pushf
lea
jmp
pushf
mov
push
movb
lea
jmp
pushf
call
shrd
push
movb
mov
call
call
rcr
not
shld
inc
bsr
lea
shr
btr
sub
shld
movzbw
shr
mov
adc
sbb
mov
pushf
dec
shl
add
add
xor
mov
cmp
lea
shrd
xor
bsf
bsf
pusha
neg
not
rol
neg
sub
neg
shl
add
jmp
movb
movb
mov
call
jmp
add
pushl
mov
pushl
lea
jmp
mov
pushl
pushf
jmp
pushf
stc
shl
cmc
shr
push
pusha
movb
or
bt
cmc
cmc
xor
movb
inc
pushl
pushf
pushl
decl
pushf
lea
jne
call
pushl
xor
clc
cmc
call
movw
mov
jmp
pushf
mov
pushf
mov
lea
jmp
pushf
mov
movb
pushf
movb
lea
jmp
rcl
neg
adc
mov
sar
sar
btc
mov
call
sub
clc
bt
ror
test
call
inc
dec
test
mov
pushf
pushf
cmc
add
mov
call
pusha
mov
push
mov
push
lea
jmp
add
mov
cmc
mov
push
sub
cmp
shr
pushf
mov
push
pushf
popl
pushl
movl
call
pusha
mov
pusha
mov
pushf
mov
pushf
call
sub
movw
push
push
lea
jne
cmp
bt
call
cmc
add
push
push
pusha
sub
jo
shld
call
shr
movzbl
mov
pusha
pushf
pushf
add
push
push
movb
lea
jmp
pusha
call
call
call
not
bts
mov
push
pusha
stc
add
pushf
lea
jmp
push
lea
jnp
pushf
call
jmp
or
ror
mov
or
shrd
jae
mov
add
mov
pusha
add
call
neg
movsbw
cwtl
mov
bt
movzbl
bswap
stc
mov
call
pushl
popl
pushf
pusha
pushf
pushf
lea
jmp
not
push
cmp
pushf
add
test
call
pusha
push
jmp
jmp
lea
sar
dec
mov
stc
add
pusha
lea
jmp
mov
pushf
pushf
movb
lea
jmp
test
not
rcl
shr
mov
call
xchg
inc
mov
call
sub
mov
pushf
push
mov
mov
push
lea
jmp
pusha
mov
pushf
call
setp
mov
clc
add
pusha
pushf
mov
movb
mov
jmp
push
mov
pushf
lea
jmp
add
pusha
pushf
pusha
lea
jmp
pusha
mov
pusha
pushf
popl
push
pushl
popl
mov
pushf
lea
jmp
pushf
call
mov
call
clc
movsbw
cmc
test
mov
jmp
test
movb
cmc
shl
jmp
pusha
mov
mov
jmp
mov
pusha
push
mov
mov
pushl
movb
lea
jmp
cbtw
movb
test
cwtl
bt
sub
cmp
mov
cmc
cmc
cmc
stc
sub
mov
movw
movb
mov
lea
jmp
pushf
jmp
bt
clc
sub
jmp
mov
pushf
lea
bswap
mov
movw
jmp
std
xchg
not
mov
jmp
stc
neg
btr
sub
mov
neg
or
ror
sar
mov
cmp
sub
test
pusha
shr
mov
pushf
mov
jmp
bswap
pusha
mov
call
bt
cmp
push
shld
jmp
mov
pusha
jmp
call
mov
movb
pushf
lea
jmp
das
shl
pusha
notl
aaa
xor
shl
push
mov
mov
sub
call
bt
adc
mov
not
rcl
sar
rol
pop
aam
pop
bsr
pop
sub
shld
pop
not
shrd
cld
pop
pusha
test
pushl
popf
bswap
mov
cltd
mov
lahf
mov
lahf
mov
pushl
movsbl
mov
not
movsbw
not
mov
mov
movb
pushl
ret
repz
popl
btr
shl
call
push
lea
cpuid
pushf
bt
sub
call
push
lea
je
push
call
add
cmp
clc
inc
mov
clc
clc
push
test
sub
call
bt
rol
bt
mov
pusha
call
pushf
not
bts
mov
push
test
cmp
sub
add
not
mov
pushf
mov
mov
push
pusha
lea
jmp
push
movl
mov
push
movb
push
mov
pushf
mov
movb
push
lea
jmp
call
mov
movw
jmp
push
jmp
clc
add
jmp
or
bts
mov
cmp
cmc
call
