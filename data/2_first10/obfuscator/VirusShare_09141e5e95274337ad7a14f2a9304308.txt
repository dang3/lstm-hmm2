insl
mov
addb
lret
mov
jae
ds
adc
scas
rol
dec
dec
imul
addr16
clc
stos
ret
push
rorl
cmpsb
jns
fadds
mov
push
lock
sbb
add
cmp
sbb
negb
mov
xchg
fidivl
cmp
sti
inc
xor
add
aad
lds
mov
xchg
notl
push
cs
mov
incl
sub
movsb
movsl
pop
jns
jo
cmp
loopne
push
mov
pop
je
cltd
cmp
and
popa
push
pop
jbe
mov
andl
fidivl
sbb
scas
aaa
mov
fidivs
push
sub
sub
leave
aas
leave
ja
jl
insb
mov
pop
mov
imul
mov
stc
add
dec
xor
stos
cmp
dec
bound
outsl
rcll
xor
push
adc
stos
iret
cltd
push
xlat
mov
das
jnp
and
daa
sub
pop
dec
dec
inc
mov
inc
mov
pop
cwtl
xor
popf
imulb
fwait
and
xchg
out
push
dec
int3
lret
jae
lock
mov
mov
xchg
push
and
out
push
push
mov
inc
ret
mov
jno
outsl
xor
fsubs
and
xchg
imul
lcall
in
mov
push
data16
push
pusha
cmp
sbb
outsb
int3
dec
gs
xor
addl
dec
popa
out
popa
xchg
xor
pop
stos
insb
aam
jno
xor
mov
lahf
fs
outsl
mov
dec
cmp
outsb
sub
fucom
mov
nop
mov
inc
ljmp
pop
push
jno
movsl
mov
out
cmc
pop
xor
mov
and
repz
les
sbb
jb
cmp
or
dec
push
outsl
xchg
adc
adc
jb
loope
mov
sub
xchg
inc
sub
scas
dec
sbb
repz
ss
xchg
insb
and
lock
push
imul
jae
adc
arpl
out
cs
jno
pop
scas
xor
loopne
xchg
xchg
imul
pop
xchg
sti
jnp
lahf
xor
cmc
push
pop
sub
sti
shrl
pop
fwait
pop
repnz
pop
push
icebp
leave
je
mov
add
loope
jno
outsb
jnp
sub
xchg
mov
cmc
sbb
xor
cmp
insb
cmp
sbb
adc
xor
add
ja
sbb
inc
addl
loop
push
aaa
jecxz
inc
ss
je
jae
inc
loop
cwtl
lods
mov
or
test
lret
lds
dec
in
jnp
inc
cmp
scas
cld
mov
inc
test
dec
sbb
in
jbe
sbb
and
lea
shrb
call
int3
inc
hlt
sbb
std
and
and
ret
jmp
jl
mov
jno
lds
and
xchg
cmp
stos
dec
popf
dec
bound
test
push
sbb
push
popf
jb
cs
punpcklwd
imul
xor
pop
mov
out
sub
xor
inc
push
mov
aam
jg
aad
addl
add
call
jmp
mov
jl
rcrl
rol
fnstcw
cltd
cli
mov
into
fiadds
movsl
cmp
das
imul
popa
pop
cli
dec
jle
insl
negl
push
xchg
xchg
push
adc
psadbw
test
in
arpl
mov
push
and
jecxz
imul
sti
dec
push
xchg
pop
sub
mov
mov
outsb
add
bound
leave
mov
jb
pop
or
fsubs
jo
in
shrb
test
nop
lret
mov
jmp
xchg
cmp
movntq
out
pop
mov
test
lcall
adc
jle
push
push
test
push
lds
inc
sub
or
and
nop
es
stc
add
jle
or
mov
mov
inc
lods
sbb
aas
add
sbb
jg
mov
sbb
movsl
inc
cs
mov
jecxz
pop
mov
fs
inc
stos
imul
popa
loope
imul
add
jns
imull
push
mov
mov
cmp
subb
dec
fld
cmc
rorb
jmp
sbb
out
cmc
push
adc
inc
test
call
jnp
subb
leave
and
mov
jno
push
dec
nopl
int
and
cmp
data16
mov
and
sub
push
ss
push
into
sbb
inc
adc
push
sub
orl
lods
pop
imul
or
int3
mov
shlb
pop
sbb
jg
mov
sbb
sbb
jl
adc
fistpll
mov
adc
lahf
repnz
lcall
shll
push
loope
dec
daa
pop
pop
fisubl
dec
out
repz
pusha
or
inc
xchg
test
leave
cltd
mov
mov
or
test
jne
or
fwait
sub
jb
pop
dec
addr16
jp
cmpsb
cld
xor
lock
fnstenv
or
out
push
push
daa
or
dec
xchg
cmpsl
in
jge
mov
cmc
inc
push
into
mov
pop
test
mov
jns
or
rcl
iret
popa
sub
repz
add
pop
jbe
test
js
es
ret
out
call
sub
aam
fsubrs
stc
ret
inc
push
imul
push
cmp
stos
stos
sub
pop
daa
mov
jle
jnp
jno
jge
mov
sbb
lds
push
int
cmc
jle
mov
pmullw
cmp
jecxz
pop
push
and
jmp
sbb
and
fildll
cwtl
stos
shrb
sbbl
sub
jnp
movb
mov
fisttpl
xchg
xchg
dec
sub
inc
negb
jmp
xchg
aad
and
xor
dec
or
push
nop
or
mov
lea
and
sub
rol
aad
lods
mov
cmpsb
dec
fsubr
in
pop
iret
call
xor
cmc
dec
and
jno,pn
call
mov
sti
pusha
inc
mov
mov
xchg
adc
push
push
jmp
test
outsl
adc
sbb
jecxz
hlt
dec
xorl
cwtl
repz
mov
rcll
sbb
movb
movsl
xlat
mov
sti
popf
lret
lods
cmp
addr16
sub
les
adc
mov
clc
or
lods
xorl
ja,pn
lret
imull
pop
outsl
clc
fmull
pop
cmp
aam
popl
jl
mov
ret
in
or
lds
loop
inc
sbb
lret
mov
sbb
jno
inc
clc
ja
mov
out
push
lods
call
pop
and
mov
cmp
xchg
aam
stos
pop
aas
inc
xor
cmpsl
sub
jle
jne
in
leave
test
cmpb
lret
bound
dec
and
scas
inc
insl
dec
dec
mov
clc
xor
sub
fcompl
ljmp
adc
popf
inc
dec
mov
sbb
add
in
pushf
xchg
js
imul
add
pop
lds
orl
cwtl
dec
or
pop
mov
pop
xchg
xor
mov
jnp
cmp
jecxz
xor
mov
mov
ret
lods
adc
shrl
jno
ret
ljmp
cltd
push
es
lods
shrb
jbe
test
popa
jecxz
sub
out
fnstcw
into
push
xchg
mov
xor
imul
xor
xchg
jmp
and
sub
mov
lret
mov
xchg
imul
mov
xor
mov
shrl
iret
inc
popf
in
pushf
out
xchg
pop
push
cmp
out
roll
test
jle
or
mov
repnz
sbb
push
inc
adc
xchg
mov
and
in
test
lahf
in
sbb
cmc
push
aam
cld
clc
test
xchg
mov
flds
mov
pop
or
mov
dec
sbb
insb
sbb
std
jns
icebp
mov
and
cmpb
fnstcw
cmp
mov
pop
mov
xchg
lea
jecxz
scas
cld
mov
jmp
test
mov
test
popa
cwtl
fistpll
dec
mov
outsb
les
xor
clc
push
inc
rcr
out
mov
xor
stc
and
pop
xchg
das
outsl
test
imul
mov
push
fisttps
pop
cli
daa
adc
and
mov
dec
jae
xchg
cmpsl
test
add
pop
jo
mov
pop
insb
enter
mov
mov
and
scas
sbb
stc
cltd
push
xchg
fsubrs
cmp
push
fistpll
mov
scas
lcall
leave
inc
cld
inc
xchg
mov
addl
das
push
popf
jae
adc
enter
adc
dec
nop
inc
and
or
xlat
imul
mov
aam
dec
pop
push
sahf
mov
std
inc
sub
xchg
or
push
lods
arpl
int3
inc
fnstsw
outsl
fldcw
mov
mov
inc
or
int3
mov
add
inc
or
push
add
int
adc
ljmp
pop
or
daa
outsb
fimuls
pop
jle
insb
pop
mov
cmpsl
xchg
and
sbb
pop
dec
mov
pop
testb
push
jnp
cwtl
jae
xor
mov
movsb
cmp
jg
rorb
pop
mov
add
pusha
cs
sub
adcb
xchg
insl
fmull
dec
jmp
dec
pop
pop
dec
lahf
inc
cmp
adc
lock
lock
fs
in
inc
test
rorb
lcall
mov
hlt
jbe
out
mov
pushf
push
xor
repnz
fsubp
xchg
mov
mov
dec
inc
lea
lret
aad
sub
loopne
jae
stos
iret
mov
daa
hlt
adc
inc
cmp
add
inc
mov
xchg
lret
mov
dec
xor
fmuls
gs
rcrb
ds
out
jge
icebp
dec
pop
mov
push
cmp
add
xor
xchg
pop
fmuls
rcl
dec
inc
inc
dec
sub
add
push
out
jne
enter
hlt
movsb
mov
js
xchg
scas
pop
jnp
scas
mov
mov
hlt
ret
sub
mov
sbb
aad
or
jae
dec
xchg
push
jnp
push
insl
mov
push
seta
fsts
enter
xor
nop
sub
cmc
repz
ss
inc
and
aaa
mov
push
test
mov
lret
adc
mov
pop
mov
cmp
pop
pop
xor
or
lret
lea
movsb
dec
lods
fdivl
test
rolb
sbb
out
test
dec
push
jbe
arpl
in
shr
test
dec
imul
mov
pop
jle
sub
scas
dec
test
mov
lret
push
test
pop
adc
push
pop
arpl
inc
push
add
data16
je
jg
inc
inc
popf
mov
shl
out
jle
jns
fcmovbe
sub
into
pop
dec
inc
jge
in
pop
in
cmp
xchg
mov
jecxz
sbb
clc
addr16
jecxz
push
jmp
push
or
sbb
out
add
lds
das
mov
jmp
testl
out
jb
dec
repz
mov
bound
fisubl
xor
hlt
sbb
xor
xor
xor
lods
inc
pop
or
ret
cld
and
inc
fdivr
sbb
mov
mov
shll
dec
jae
adc
scas
or
mov
adc
pop
and
sub
sbb
xor
mov
mov
shll
loope
adc
or
ror
daa
lahf
test
pop
xlat
insb
inc
and
enter
push
lret
mov
or
dec
cmc
js
daa
sbb
arpl
sub
add
scas
sti
push
and
push
sbb
sahf
icebp
xor
mov
lds
aaa
cltd
xchg
mov
push
dec
or
xor
inc
les
pushf
jb
xorl
push
sub
idivl
mul
icebp
inc
iret
movsl
int3
cmp
jl
mov
inc
fisttpl
fstps
or
lret
cmp
mov
xchg
push
fistl
mov
inc
jbe
add
mov
mov
jo
inc
jmp
fists
repnz
fs
in
and
or
rcrb
push
push
mov
inc
iret
je
movsl
divb
rcrb
push
cmpsb
adc
push
int3
add
insl
mov
sub
sbb
jl
insb
jno
push
mov
fsubs
mov
js
xor
ljmp
lcall
jno
mov
out
or
sbb
xor
mov
and
mov
bound
outsb
add
cmp
sahf
dec
mov
jb
xchg
scas
fsts
insb
cltd
mov
jne
xchg
ljmp
movsb
out
notb
add
shll
mov
not
add
or
or
stos
das
cmp
rcrl
mov
sahf
cmp
pop
lret
mov
lcall
hlt
jmp
mov
pop
and
rorb
and
and
test
test
mov
mov
jns
enter
adc
mov
ljmp
mov
out
add
cmp
sub
nop
test
pop
pusha
popf
mov
insl
scas
adc
in
rcl
fldt
pop
bound
rol
bnd
clc
stc
jmp
stos
xlat
ret
dec
mov
sub
or
mov
pusha
push
dec
mov
imul
movsb
jmp
dec
sub
adc
sbb
mov
std
xchg
or
pop
and
sahf
and
and
in
sub
stc
and
sbb
and
lahf
jns
xchg
icebp
push
adc
push
cmp
shll
aad
xor
add
inc
movsl
sub
cmp
mov
aam
mov
daa
cmp
cmc
mov
push
pop
addr16
add
das
jne
sbb
movsl
jge
xor
call
jns
cs
jge
xor
adc
addl
test
outsb
cmp
jbe
mov
or
sbb
imul
or
insb
xchg
nop
jl
clc
fucom
fisubs
stos
mov
sbb
test
pop
in
jbe
jle
lods
dec
addr16
test
push
pop
inc
out
jmp
mov
lods
and
stos
dec
xchg
pop
push
and
or
lret
mov
scas
push
fstp
and
sub
adc
jb
sbb
pushf
daa
out
jecxz
jnp
subl
or
and
sub
adcb
scas
popf
in
cmpsb
in
or
and
mov
mull
inc
iret
aad
fcmove
jb
lea
sti
adc
std
stos
lcall
ja
xor
pop
aad
hlt
je
jmp
cmp
test
mov
inc
push
rcrb
gs
ss
adc
push
fmul
or
adc
pop
mov
inc
cmp
cmpsb
mov
inc
sub
outsb
cmp
fildll
filds
int3
daa
push
jo
jmp
and
movsb
push
sbb
popf
sub
mov
or
xor
iret
int3
xor
int3
pop
sub
xor
push
imulb
pop
ss
lret
pop
aad
daa
cmp
mov
insl
xchg
push
rcrl
mov
xchg
stos
pop
int
jbe
mov
mov
pop
cmpsb
in
xchg
push
mov
dec
lock
jbe
leave
fists
xchg
aad
call
cmc
aas
or
dec
orb
sti
sub
jne
push
jo
mov
push
sbb
sbb
xor
inc
loope
shlb
sbb
jl
test
movl
sbb
mov
adc
mov
jnp
sub
sub
scas
add
sub
jo
cmp
out
adc
mov
pop
and
js
sub
sbb
sub
ja
movsb
sub
ret
push
jmp
dec
std
mov
out
mov
outsb
sub
pusha
sbb
xchg
inc
xor
mov
jecxz
and
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
loope
xor
pushf
shrb
idivb
pop
je
xor
faddp
inc
shll
pop
das
test
push
arpl
mov
and
or
test
in
gs
pop
push
xchg
hlt
xchg
sbb
inc
and
lea
mov
shll
pop
push
push
sub
pushf
inc
mov
xchg
jne
test
stc
aaa
dec
dec
cwtl
insl
lret
inc
inc
cmp
nop
shr
enter
mov
les
js
scas
pop
out
pop
mov
mov
sub
xor
cmpsb
mov
orl
push
adc
jo
add
jle
test
pusha
pop
jbe
les
jae
stos
adc
ljmp
sahf
fs
mov
ror
shlb
jge
dec
add
fldl
adc
dec
lods
sbb
inc
inc
pop
inc
stc
mov
out
mov
mov
sub
cmpsl
mov
testl
rorl
inc
push
frstor
fisubrs
pop
test
and
out
sbb
add
fsts
fcomps
ja
add
push
movsb
out
dec
cmp
in
aas
pop
pop
ret
add
inc
adc
cli
add
jp
mov
cmp
iret
pop
dec
push
popa
and
and
adc
jae
mov
inc
xchg
ljmp
jge
sbb
sbb
inc
lcall
nop
mov
fsts
xacquire
inc
gs
push
add
mov
push
movsl
sbb
in
dec
lock
xor
ds
mov
movsb
scas
inc
out
or
push
mov
popf
dec
ds
dec
daa
lods
icebp
repnz
inc
cmp
mov
sub
push
dec
cmp
mov
xor
add
fwait
jecxz
sbb
loop
ss
push
data16
cmp
jl
xor
jb
jnp
scas
test
inc
push
mov
fwait
dec
adc
rcrb
ret
dec
xchg
sti
scas
xor
jns,pt
popa
or
shlb
daa
add
cmpsb
adc
jnp
xchg
popa
cmpsl
data16
cmp
inc
or
cmp
movsb
lret
dec
mov
movsl
xor
in
in
xchg
cmpsl
mulb
aaa
add
jno
lret
jae
mov
fistps
add
add
pmulhuw
or
insb
ss
lods
jmp
mov
aad
iret
mov
imull
ds
add
cmpsl
js
leave
inc
mov
arpl
lret
movsb
into
cli
repnz
mov
mov
out
pop
pushf
in
xlat
add
xlat
into
daa
xor
mov
and
mov
pop
jns
bswap
jmp
cmp
fisttpll
cmpsb
lods
aaa
les
mov
test
sub
sbb
aad
cmc
stos
cmp
stc
rolb
ret
dec
and
sti
push
pop
outsb
loope
jg
insb
fistl
in
adc
daa
in
mov
test
adc
dec
lret
mov
in
mov
cmc
pushf
mov
mov
push
xchg
mov
in
pop
pop
aaa
push
repnz
pop
ror
dec
push
or
jnp
mov
outsl
mov
push
sub
notl
fcmovbe
cli
sbb
ret
cmc
test
mov
mov
hlt
mov
pop
sub
aaa
push
cmc
push
into
pop
sbb
xchg
cmp
push
in
test
xor
ret
xchg
and
insl
lods
jecxz
adc
repz
xchg
xor
imull
mov
insl
xor
int
fadds
xchg
mov
repnz
and
mov
popa
jno
mov
push
daa
cmp
xlat
pop
xor
or
inc
movsl
fistpll
sbb
and
or
mov
setb
aam
lods
push
fimuls
insb
pop
or
jecxz
dec
sub
jb
dec
clc
mov
or
cli
jmp
cmpsb
es
mov
shlb
pop
mov
adc
dec
and
xor
mov
ret
push
and
clc
push
cmp
push
push
and
stos
fnstenv
add
lahf
sbb
sub
test
cmpsl
popw
cld
adc
push
pop
or
arpl
inc
std
loop
stos
stos
cmpsl
mov
inc
mov
gs
jle
test
adc
inc
mov
ljmp
fdivs
or
jecxz
jg
adcl
mov
pop
push
call
call
xchg
fsubr
or
lret
inc
hlt
ret
cmpsb
lret
sbb
jg
inc
jp
loop
push
filds
xlat
push
call
jle
pop
das
ljmp
call
jle
and
xlat
push
call
jle
shrl
sbb
xorb
jge
cli
sti
pop
inc
pop
mov
push
stc
mov
cli
and
outsl
mov
pop
fldenv
popf
imul
fiadds
sub
mov
inc
or
sub
leave
jg
mov
mov
inc
dec
adcl
aaa
icebp
imul
imul
js
incb
cmp
or
and
xchg
push
or
dec
push
int3
push
xor
push
cmp
sub
das
mov
mov
adc
lock
mov
fldl
jbe
mov
dec
jl
sbbl
mov
leave
mov
cmpl
std
xchg
cli
scas
xor
daa
jl
mov
jae
jnp
cmp
aad
js
xchg
xor
testl
fsubr
push
xor
lods
out
add
jo
mov
mov
xor
pop
cli
js
addb
jae
rcrl
cmp
sbb
xchg
cmp
clc
js
xchg
xchg
adc
aas
xor
or
push
mov
mov
inc
mov
rcrb
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
sti
hlt
pop
or
into
add
es
cmpsl
ret
int3
push
sub
stos
ret
pop
lret
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
jne
cltd
jne
pop
dec
cmp
adc
cmpsl
ret
cmp
adc
ror
mov
adc
call
out
adc
mov
adc
mov
out
mov
jecxz
cmp
lods
popf
and
xlat
out
daa
push
je
lret
jge
sub
loopne
xchg
mov
adc
mov
sub
xchg
test
pop
sbb
add
jns
add
ficoml
adc
int
jno
sbb
push
jns
es
call
test
out
and
inc
dec
jns
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
andl
sub
sub
out
cmpsl
ret
aad
data16
into
loop
stos
ret
pop
lret
hlt
mov
shr
xchg
lds
adc
mov
adc
mov
inc
mov
shlb
arpl
lods
popf
and
xlat
out
pop
mov
js
dec
mov
xchg
repnz
lahf
mov
push
adc
and
pop
lahf
or
push
stos
pop
xchg
out
add
nop
add
xchg
es
adc
outsb
scas
push
aas
pop
inc
cmc
es
mov
jg
mov
adc
mov
adc
mov
adc
call
push
loopne
cmp
lods
popf
and
xlat
out
daa
push
je
lret
jge
or
and
inc
adc
in
ljmp
dec
incb
add
mov
pop
add
lods
das
arpl
rcll
sub
shl
pop
and
adc
or
gs
mov
or
jmp
push
sbb
imul
int3
dec
push
cmp
pop
mov
mov
pop
and
movsb
dec
mov
mov
and
mov
push
and
iret
std
movsb
enter
mov
adc
mov
adc
mov
adc
mov
adc
ret
push
sarl
dec
cmp
lods
popf
and
xlat
out
cltd
insl
mov
outsl
fdivs
out
pop
mov
add
inc
arpl
inc
test
out
mov
pop
xchg
xchg
xchg
push
mov
inc
xchg
sbb
mov
or
sub
sbb
sarb
gs
sub
mov
push
fcomp
inc
jne
dec
and
sub
sub
movsb
dec
mov
inc
sub
cs
cmpsl
js
leave
inc
sbb
push
add
enter
out
adc
mov
adc
mov
adc
mov
adc
mov
adc
pop
and
data16
popa
packsswb
lods
popf
and
xlat
out
aaa
mov
or
cmc
or
adc
popf
test
jno
jne
pop
push
cmp
pop
clc
outsb
cmpsl
adc
cmp
add
or
imul
pop
or
xchg
dec
ds
shl
sub
sub
mov
jle
or
jle
jno
and
mov
mov
repz
movsl
fildl
push
mov
pop
hlt
jl
ljmp
or
cli
cwtl
popa
push
push
icebp
test
mov
mov
mov
pop
and
icebp
and
sbb
xor
aam
data16
push
pushf
icebp
lods
and
push
mov
mov
cs
or
sahf
push
lds
xchg
mov
fld1
arpl
mov
xor
insl
and
mov
dec
divl
cmovs
add
lahf
jns
imul
js
test
add
sub
push
xchg
xor
movsb
fcomps
or
xchg
loope
mov
aad
ljmp
nop
dec
icebp
mov
lds
xor
pusha
xor
sti
xchg
mov
into
sub
dec
dec
int3
dec
mov
push
faddl
xlat
fdivl
fnstenv
sbb
mov
sub
loop
js
sbb
mov
popf
dec
int
sub
outsb
mov
je
push
popa
pop
push
mov
das
sbb
lea
pop
ss
ret
call
stc
xor
mov
ja
mov
cmp
popa
test
out
pop
test
in
gs
or
out
cli
sbb
inc
and
push
xor
cld
inc
jmp
rorb
sbb
popa
cmp
sarb
out
popf
dec
push
mov
pop
out
mov
lahf
loope
pop
scas
int
std
mov
inc
ja
test
out
pop
ret
popf
jae
or
ljmp
add
pop
imul
xchg
pop
mov
lcall
mov
pop
cltd
dec
or
enter
cltd
mov
test
ret
shlb
clc
insl
or
call
bsf
inc
imul
push
and
xchg
scas
outsb
mov
xchg
sbb
imul
mov
or
xchg
leave
imul
arpl
cmp
pop
xchg
hlt
add
pop
inc
in
mov
fcomps
xor
stos
js
jl
xchg
inc
pop
jecxz
iret
xchg
mov
lret
shl
mov
jg
jno
ljmp
adc
fsubrl
pop
mov
inc
bsr
pop
rcr
jmp
fiaddl
adc
rcr
mov
add
leave
popa
out
adcl
xor
inc
dec
or
lock
imul
jp
jl
add
xchg
jnp
push
loope
loope
push
jb
push
test
sub
cmc
insl
push
ljmp
loopne,pt
mov
movsl
jo
mov
stos
imul
stos
push
xchg
adc
dec
insb
rol
push
mov
int
in
cmpsb
std
ds
enter
shl
mov
insl
lods
fdivr
out
shrb
mov
dec
loopne
icebp
pusha
sahf
popf
or
jns
std
fisubl
xchg
pop
mov
sub
pop
adc
ret
notw
lods
mov
jo
fwait
sahf
mov
xchg
bound
sub
mov
and
stos
dec
mov
dec
out
out
lods
pop
pop
jg
mov
cmp
pop
inc
gs
jbe
or
int3
jp
lret
repnz
push
push
ljmp
or
lcall
inc
stos
dec
jecxz
pop
xchg
xlat
cmpsb
out
add
loope
xor
inc
das
dec
fmuls
push
mov
xor
mov
xor
dec
mov
mov
jle
inc
xchg
jns
cmpsl
inc
data16
gs
push
jne
or
dec
out
dec
fisubs
sar
mov
mov
std
pop
xor
mov
rorb
lcall
pop
mov
adc
mov
in
lcall
ret
xor
adc
or
add
sarl
add
pusha
testb
push
sub
cmp
or
xchg
shlb
pop
cmpsl
fnsave
add
shr
sub
shrl
push
jle
test
push
mov
sub
push
sbb
lods
and
mov
add
test
dec
in
addl
imul
movsb
ds
cwtl
push
push
dec
into
mov
lock
test
mov
adc
pop
rorb
and
shll
pop
loope
test
and
dec
jmp
jns
xchg
cmp
imul
xchg
sbb
maskmovq
das
rcrl
fcmovnb
push
xlat
cmp
enter
xchg
xchg
push
das
sbb
rol
mov
mov
fs
sub
call
mov
add
cltd
fldcw
fsubrl
pop
ret
aas
iret
or
lock
pop
cmp
jb
loopne
in
adc
push
repz
sbb
sub
daa
mov
in
jo
mov
fsubrs
dec
loopne
test
ja
std
adc
xlat
stos
jmp
mov
push
sbb
adc
loop
push
sub
rcrl
scas
mov
ds
mov
dec
mov
xlat
mov
inc
stos
mov
cmp
or
dec
pusha
in
inc
popa
xchg
jo
jecxz
ja
mov
cltd
rorb
fmulp
out
fstpt
mov
loope
xchg
jge
lret
mov
bound
adc
pop
test
les
les
int3
loop
addl
sbb
sub
shll
rcrb
popf
add
pop
sbb
lea
mov
xchg
cmpsl
mov
pop
outsl
popa
mov
js
xchg
xor
cltd
scas
push
aas
pop
inc
cmc
es
outsb
mov
pop
lret
ficoml
sbb
test
adc
adc
ret
int
cmc
mov
insb
out
adc
test
jecxz
fiadds
or
or
pop
mov
stc
mov
inc
cmpsb
cmc
dec
pop
arpl
loopne
repnz
xor
es
shlb
test
jns
sub
lahf
lods
and
lock
in
rcll
or
int
adc
xor
leave
cmp
stos
xchg
enter
mov
loope
dec
les
stos
or
push
dec
in
into
jno
lea
fs
mov
inc
add
push
subb
cmp
mov
test
sub
scas
xor
add
popf
xor
in
jmp
push
mov
into
loop
or
or
cmp
cmp
clc
js
lods
je
insl
push
loopne
xor
mov
inc
cmp
leave
add
inc
fisubrl
addl
out
push
aaa
addps
hlt
pop
fmull
pop
scas
js
sti
mov
jp
mov
aad
call
and
nop
subl
dec
mov
dec
xchg
shll
mov
icebp
andb
xor
leave
cmp
test
test
fstpl
xor
push
adcl
cld
aas
outsl
adcl
js
rcrb
dec
push
cmp
sti
or
xchg
into
mov
lock
xchg
iret
sub
ds
lahf
out
mov
loopne
ret
push
push
in
xlat
mov
movsl
out
mov
inc
cmp
cmp
clc
js
out
cltd
ss
popf
jl
adc
inc
mov
stc
les
std
cmpsb
sbb
outsl
cs
jno
add
popa
sahf
sub
lea
pusha
int3
mov
or
into
sbb
imul
adc
sahf
sar
sti
push
shll
xchg
sub
jae
cmpsb
fdivrs
jmp
cmc
push
inc
lods
lret
aaa
subl
lea
pop
xchg
cmp
clc
js
mov
xchg
xchg
jns
cmc
pop
aaa
pop
in
ss
ret
loope
cmp
iret
imul
xor
xor
xchg
insl
mov
call
sbb
dec
gs
mov
jge
mov
adc
xlat
jne
cmp
sbb
mov
jae
shll
addr16
dec
mov
dec
xchg
rorl
xlat
bound
or
jno
mov
leave
cmp
mov
lea
push
mov
fiaddl
lods
mov
push
mov
inc
sub
mov
rolb
mov
repnz
or
test
push
clc
ret
jecxz
pop
mov
mov
jg
callw
in
jae
fs
insl
pop
out
or
cld
mov
in
or
jo
push
and
movsb
dec
mov
aam
mov
add
xor
out
repz
insb
int3
in
fnsave
and
cmp
cmp
test
push
jo
pop
lcall
jle
outsb
xchg
cmp
icebp
lahf
movsb
cmp
test
xchg
add
pop
or
sbb
mov
push
xor
xor
daa
loop
xor
mov
loope,pt
pushf
push
pop
ret
mov
xchg
add
or
jg
iret
inc
icebp
scas
fldl
flds
inc
dec
lods
sti
popf
jno
and
mov
xchg
div
outsb
loop
fnsave
dec
jae
pop
movl
repnz
jae
pmuludq
adc
cmpl
mov
or
aad
mov
imul
testl
sbb
repnz
sbb
lret
jo
or
test
fstpl
sub
pop
mov
lcall
cmpsb
arpl
aad
fisttps
jl
dec
push
aam
jns
adc
inc
pusha
out
cmp
les
jnp
addr16
inc
hlt
lods
inc
test
das
test
call
jg
movsl
roll
xor
dec
daa
push
push
xchg
shlb
mov
lret
adc
movsb
mov
dec
fistpll
imul
fs
decb
or
push
cltd
fs
cld
sbb
daa
mov
pop
mov
xor
cmp
add
mov
loope
xchg
bound
pop
hlt
shl
inc
lods
xstore-rng
cmpsl
xchg
mov
fnstenv
cli
outsl
nop
je
sbb
jecxz
pusha
mov
xchg
arpl
push
pop
push
bound
ud0
ljmp
mov
stos
mov
ja
pop
mov
popaw
adc
dec
lcall
jp
fsubrl
push
push
jne
sbb
xchg
adc
inc
popf
or
and
sbbb
sub
outsl
jl
mov
jge
outsb
xlat
faddp
sahf
add
push
cli
pop
mov
loop
int
jb
add
pop
cli
add
dec
aad
xchg
cli
sub
inc
adc
sarb
jecxz
adc
mov
push
jnp
loop
lods
faddl
xchg
jge
sbb
push
add
outsb
jb
xor
push
pop
gs
daa
adc
jns
aad
stos
xchg
inc
nop
add
inc
shll
pop
mov
loop
loopne
sahf
mov
jmp
mov
xor
dec
mov
jecxz
icebp
sbb
mov
mov
mov
test
dec
cwtl
sahf
scas
ret
and
clc
test
fdivrp
loope
add
stos
loop
icebp
jge
aaa
in
xchg
jge
lods
sbb
movsb
ret
out
test
loopne
popf
add
lods
adc
ds
lcall
stos
and
xchg
adc
inc
or
push
and
movsb
mov
mov
pop
ret
mov
popf
lds
cmp
leave
sub
jne
dec
xor
mov
push
ja
mov
xchg
pusha
pop
push
or
divl
leave
cmc
cmp
js
pop
fdivrp
cmp
mov
mov
sub
jbe
jle
inc
movsb
adc
aam
inc
add
lds
inc
pop
mov
mov
bound
lock
inc
sbb
jns
xorb
lods
sub
rcrb
cmpsb
cmp
repz
and
and
push
sbb
push
dec
jnp
mov
pop
pop
pop
es
pop
imul
pushf
cld
xor
pushf
inc
sbb
xchg
cs
inc
enter
jl
mov
jae
rcrl
rclb
cltd
mov
pop
mov
xlat
jns
lods
enter
repnz
test
dec
clc
push
xor
push
dec
mov
mov
mov
dec
mov
push
jnp
push
adc
adc
insl
test
cltd
xor
iret
pop
pop
les
add
fs
xlat
jge
addr16
fld
cld
loope
mov
insl
xor
test
bound
pusha
bound
ljmp
imulb
lock
sub
sub
push
pop
inc
ret
clc
repz
jmp
ds
icebp
rol
xorb
sbb
lret
fildll
push
inc
adc
sbb
mov
scas
movsl
dec
in
enter
push
cmp
cmp
aaa
out
divl
and
lret
mov
iret
insb
dec
push
xchg
dec
sub
push
push
sbb
mov
cmp
sub
and
stc
mov
je
or
mov
cmp
and
sbb
cmpsb
push
cli
fidivrs
mov
sti
cmp
dec
int
test
mov
lret
add
or
mov
or
jo
cli
roll
push
leave
leave
scas
lods
and
xchg
cmp
fmuls
mov
push
jmp
out
ja
jge
xor
movsl
push
mov
push
nop
repnz
lahf
jne
adcl
adc
inc
adc
push
and
out
fists
das
jne
dec
fidivrs
adc
stc
push
mov
cmc
jge
xor
or
sbb
or
rcrl
fisubs
lahf
jle
or
ret
test
cmc
dec
ret
xor
jmp
imul
sbb
add
in
inc
mov
pop
adc
mov
daa
dec
icebp
xor
push
jmp
sbb
es
fistpll
test
jne
dec
mov
jmp
push
pop
dec
stos
sbb
sbb
jo
jl
mov
fisttps
mov
add
xchg
mov
sahf
jle
pop
jp
jmp
movsl
test
aam
cmp
jg
push
sbb
leave
outsl
mov
xchg
call
dec
test
cmp
xchg
adc
adc
mov
cmpsb
testl
je
neg
stos
lea
pop
xchg
cmp
clc
js
roll
arpl
lods
je
out
cli
add
lahf
mov
clc
and
push
les
nop
push
push
into
fcomip
je
imul
out
add
jg
cmp
mov
movsl
lods
sti
sub
out
sub
pushl
jns
adc
adcl
pop
jns
fisttpll
sbb
adc
pop
xchg
cmp
clc
js
imul
add
packsswb
mov
std
iret
mov
test
sub
and
pop
dec
out
push
std
dec
aaa
pop
push
adc
cmp
jbe
inc
cmpsl
push
lret
cmp
dec
bound
pop
aaa
pop
fcmovnb
repz
int3
xor
mov
jg
mov
dec
test
in
mov
repz
adc
sbb
sbb
adc
inc
mov
jg
add
nop
pusha
xchg
or
xor
dec
daa
mov
pusha
rcrl
inc
jp
gs
or
fistpll
test
orl
mov
sbbl
pushf
test
push
xchg
mov
movsb
sub
xor
imul
lods
imul
js
sub
in
cmp
adc
scas
sahf
mov
iret
movl
pop
xchg
enter
cmpsl
stc
mov
or
mov
scas
repnz
movsl
insb
ror
ja
pop
iret
movsl
cmp
stc
mov
mov
cmc
mov
ficoms
mov
push
jecxz
push
jns
je
out
push
xchg
add
adc
cltd
push
jb
aad
mov
pushf
cli
inc
push
addl
xorb
out
jp
mov
je
pop
sahf
dec
mov
out
sub
les
sub
cmc
xlat
and
stc
jg
test
pushf
sbbl
sub
orb
push
mov
int3
popa
mov
mov
insb
xor
daa
call
andnps
mov
pop
dec
or
pop
imul
push
fdivrl
out
inc
cmp
std
in
push
add
mov
dec
fwait
out
ret
mov
arpl
mov
leave
notl
add
icebp
push
jno
and
icebp
jmp
push
call
je
xor
xlat
test
jmp
dec
fwait
out
ret
mov
lcall
adc
divb
dec
pop
or
xrelease
out
or
shlb
mov
cmp
inc
dec
push
aam
mov
xor
xlat
aas
jp
lcall
mov
inc
xchg
popa
test
andl
cmpsb
mov
fldt
das
or
popf
sub
or
xor
xchg
andl
lods
mov
and
fidivl
into
fs
imul
daa
nop
sub
sbb
or
dec
fs
dec
cmp
xor
lock
jne
pushf
add
sbb
aaa
lcall
pop
data16
mov
push
xor
fstpt
sahf
les
inc
add
cld
push
je
fisubrl
add
xchg
fnsave
and
jge
push
scas
lea
push
test
jo
arpl
push
enter
or
add
xchg
cltd
pop
insb
jge
pop
xor
and
mov
imul
jno
js
mov
in
inc
push
idivl
inc
pop
mov
popf
jecxz
data16
aaa
or
loopne
popf
lock
push
push
or
inc
outsb
xor
leave
in
loopne
fimull
sub
dec
test
sub
and
ret
pop
fs
call
add
jno
jno
insb
cli
push
rclb
pusha
scas
xor
outsb
addl
pop
loopne
cli
jnp
inc
out
loopne
outsb
scas
aas
add
xchg
fiadds
negb
mov
das
popa
aaa
adc
test
push
mov
stos
cmp
jle
sub
dec
sbb
sbb
push
in
sub
lcall
idiv
push
adc
or
push
mov
push
jle
dec
mov
test
les
push
mull
and
push
push
adc
jno
loope
cmp
ja
sub
jb
xchg
jle
popf
xlat
mov
frstor
dec
daa
jbe
xor
dec
lahf
lret
xchg
adc
scas
pop
lea
les
pop
xorl
pop
pop
mov
mov
xchg
sbb
rcll
das
fbld
cmp
in
popf
mov
idivl
pop
push
add
aaa
mov
setbe
fbstp
es
xchg
push
mov
leave
add
popa
shll
or
orb
into
xchg
loopne
leave
mov
push
aad
sub
pop
add
pop
out
hlt
movsl
repz
sbb
mov
dec
xchg
outsl
arpl
out
pop
loopne
mov
in
push
shlb
mov
dec
repnz
xchg
sbb
dec
adc
test
test
fmuls
adc
fstp
mov
in
call
adc
mov
xchg
orb
popf
dec
sti
shrb
fs
xor
sbb
cmp
mov
lods
stc
adc
jmp
repz
cmp
push
mov
xor
leave
cmp
icebp
ja
mov
in
call
dec
inc
repnz
dec
arpl
lods
sbb
mov
xchg
loope
call
mov
push
dec
jecxz
xor
xorb
mov
mov
std
lods
dec
rcrl
mov
cmp
inc
dec
xchg
and
pusha
mov
and
shlb
push
jmp
xchg
outsb
inc
ret
jecxz
jle
sahf
movsb
mov
mov
fidivl
mov
jge
test
and
jbe
test
cmc
bound
test
sub
pop
mov
pop
pop
or
and
pop
xor
or
clc
rcrl
das
sbb
push
daa
sti
dec
pmaxsw
cmpsl
cmpsb
in
mov
rcrb
sbb
repnz
fs
or
jno
das
jmp
and
xchg
test
inc
js
fs
ds
xchg
add
adcb
xor
cltd
and
imul
cmp
push
cwtl
mov
mov
das
inc
dec
sbb
sbbb
lock
ficomps
inc
into
ret
sub
inc
mov
pushf
inc
push
cwtl
les
mov
divl
and
add
movsl
jae
add
icebp
and
inc
jl
sbb
inc
in
mov
cli
mov
mov
pusha
sbb
cmp
lea
sahf
rorl
jns
sar
push
pop
add
gs
or
into
and
loop
mov
lea
cs
adc
cmp
fdivs
push
lahf
sub
test
jns
lods
xor
mov
loop
fs
dec
mov
jb
loope
mov
pop
data16
ja
ljmp
mov
push
pop
ret
add
mov
pop
xchg
loope
cmpsb
inc
pop
fwait
insl
pop
arpl
out
rcrb
push
cmpb
add
shr
frstor
pop
add
jl
test
dec
push
add
in
in
dec
and
push
xor
dec
lods
push
inc
mov
movsb
sub
mov
lods
push
adc
lcall
and
pop
add
idivl
std
notb
cmpsb
pop
pusha
push
insl
cmc
daa
adc
cltd
inc
or
xchg
adc
jmp
shrl
xchg
ror
popf
in
ret
movsb
mov
cmp
loopne
push
in
xchg
aam
mov
xor
inc
scas
ds
and
jo
pop
push
xchg
in
ss
push
andb
pop
push
inc
or
out
enter
imul
fnsave
jl
test
sahf
jb
or
imul
fildll
orl
or
je
jg
aam
inc
adc
outsl
lods
jge
ret
fwait
repnz
popf
inc
mov
cmp
inc
sbbl
and
cwtl
push
pop
mov
cmp
inc
jne
std
js
incb
in
or
shll
mov
data16
je
rorb
pop
jb
cmpsl
mov
iret
out
mov
stos
dec
ficoms
add
or
inc
clc
jnp
fwait
lret
call
sti
jmp
push
addl
xchg
sbb
stc
push
adcl
stos
cmp
test
rcrw
out
mov
sbb
stos
push
loop
movsb
je
call
ss
pop
movsb
sub
iret
xor
andl
inc
paddb
daa
inc
sahf
jmp
jp
stos
jg
out
xchg
inc
fwait
jge
push
dec
dec
adc
loope
xor
popf
jnp
loop
xor
inc
lcall
push
jecxz
cmpsl
mov
xchg
jno
outsb
popa
push
aaa
movsb
orb
out
jmp
roll
dec
and
push
mov
inc
adc
jbe
adc
cmp
dec
mov
mov
iret
lahf
xlat
push
mov
leave
cmp
and
ret
std
xchg
mov
jp
mov
popf
jmp
push
push
mov
hlt
xor
lcall
inc
repz
push
xor
jnp
jns
fnsave
mov
aad
pop
push
jae
xor
ss
mov
jbe
sarl
movsb
mov
test
or
sahf
les
testb
bound
fmuls
leave
jl
sti
mov
jg
pop
cli
imul
mov
xor
sub
sub
out
int
fs
sub
int3
mov
pop
insb
sbb
sbb
aas
ret
push
push
cmpsl
dec
cwtl
push
sub
test
fidivrl
lods
pushf
mov
fadds
enter
movsb
das
in
dec
scas
imul
sub
sbb
fsubs
cli
daa
int3
leave
sahf
mov
jmp
mov
and
sbb
adc
das
lahf
hlt
cmp
iret
iret
sub
mov
add
fbstp
jbe
nop
add
out
outsl
push
mov
pop
pop
dec
jl
xchg
clc
or
xchg
ret
imul
movsb
dec
mov
mov
push
dec
out
les
dec
jnp
xor
mov
xor
movsw
push
lods
out
mov
das
mov
mov
push
xchg
or
pop
jo
test
mov
xchg
xchg
inc
testb
cmc
sbb
ljmp
mov
pop
pop
push
jge
jbe
bound
cmp
inc
je
cmp
and
or
dec
popf
and
sbb
je
pop
mov
ret
or
sbb
cld
imul
pop
stos
das
mov
pop
pop
push
cs
jae
lahf
pop
add
flds
fnsave
dec
dec
push
pop
lods
lods
shll
sar
fnstcw
aam
lcall
stos
inc
and
insl
js
in
leave
dec
inc
push
xor
fdiv
and
ss
orl
lret
and
lret
mov
in
sbb
lods
loope
sub
aaa
and
mov
adc
push
cltd
jns
and
shrb
fs
xor
sbb
cmp
mov
cmovno
inc
xchg
jge
daa
test
pop
aad
cmp
or
cmp
imul
mov
in
inc
movsb
mov
js
mov
std
dec
or
in
cmpsl
jg
inc
test
aam
inc
add
nop
mov
lahf
aas
mov
mov
fwait
dec
into
js
sbb
xor
push
aaa
sbb
mov
fnstcw
cs
arpl
dec
mov
ffreep
shl
jns
arpl
add
xlat
and
and
jae
in
lahf
scas
push
mov
pop
pusha
pop
arpl
mov
and
jge
cmp
std
jno
int3
sub
cmp
mov
cmp
mov
sub
inc
jne
push
scas
add
jmp
jecxz
sbb
cmp
mov
adc
and
or
sub
cli
sbb
adc
scas
aas
add
xchg
rcrl
in
lea
xor
aad
push
mov
cmp
out
out
xorb
cmp
sbb
leave
add
aam
inc
pop
lock
inc
mov
incl
test
ret
std
cmp
adc
add
lret
push
mov
in
xor
cmp
out
cmpsl
mov
push
cmpsl
xor
lret
movb
inc
xor
xchg
inc
aas
and
shlb
pop
mov
std
repnz
sbb
pusha
jl
je
out
push
hlt
mov
aad
fistpl
mov
iret
insb
repz
out
mov
push
fisubl
sbb
pop
mov
inc
movsb
das
sub
or
inc
imul
inc
stos
hlt
sub
pop
adcl
test
and
aaa
daa
inc
movsb
out
push
cmp
cmp
cwtl
nop
data16
xor
cmp
mov
subl
jge
mov
sbb
sub
leave
sub
in
andb
adc
nop
sub
pop
inc
add
xor
xchg
sti
insl
mov
or
mov
jle
inc
dec
xchg
ss
cmp
scas
xor
lahf
rorb
cmc
dec
aad
test
lret
fidivrs
dec
jne
add
add
cmp
mov
outsl
iret
ljmp
fisubrl
ret
fisubrl
insb
mov
push
inc
xchg
or
inc
loopne
out
push
fildll
push
sub
arpl
mov
popa
stos
iret
loopne
test
dec
jno
pop
mov
je
enter
dec
das
sti
fstps
sub
leave
inc
adc
jno
jge
aas
lea
push
out
mov
pop
pop
xchg
pop
sub
ds
jns
hlt
leave
or
xchg
mov
repnz
scas
add
push
cmpxchg
stos
cmp
mov
mov
or
push
or
inc
out
dec
inc
test
pop
xchg
mov
push
xor
sub
sub
cmp
les
das
push
inc
adc
mov
cmp
cmpsb
inc
cwtl
insl
std
popf
test
jp
ret
adc
movsb
pop
push
out
outsl
push
mov
pop
pop
dec
jl
movsl
or
inc
cli
lds
ret
adc
loope
dec
cmp
jmp
adc
add
shll
dec
mov
push
xchg
inc
push
stos
jp
mov
jmp
aas
jne
push
dec
pusha
lock
xchg
ret
fistps
out
mov
popf
imul
xor
mov
pcmpeqb
jecxz
push
dec
loope
add
sbb
neg
xor
mov
cli
repz
cmp
pop
xchg
cmp
clc
js
mov
inc
testb
add
xor
out
das
cmc
push
mov
icebp
push
stos
mov
xorl
ljmp
mov
mov
dec
in
mov
mov
mov
jns
loopne
cs
xchg
push
fwait
fwait
xchg
jp
cld
movq
nop
inc
ret
jp
cmp
adc
xor
xchg
xor
call
mov
sub
ficompl
xchg
mov
sub
into
mov
daa
test
call
fistpll
jnp
cmp
fmull
ss
je
lahf
scas
aas
add
xchg
lahf
mov
in
sbb
arpl
cmp
js
push
iret
mov
shrb
lods
cmp
jne
in
clc
js
fdivs
ljmp
cmp
adc
stos
inc
std
fimull
ficompl
xchg
add
leave
fbld
add
inc
pop
xchg
mov
or
adc
loop
push
sbb
push
xchg
int
in
ja
lahf
pop
popa
je
push
jbe
movsl
xchg
out
mov
xchg
xor
jmp
xchg
inc
jns
sti
push
test
pop
dec
inc
addr16
decl
xor
inc
inc
jge
outsl
xor
sbb
adc
pusha
adc
pop
mov
test
mov
mov
jne
repz
sbb
outsb
mov
xor
adc
pop
pop
mov
dec
out
popa
ret
pop
aad
fisttps
addr16
in
mov
push
add
sub
cltd
xchg
out
cmp
mov
in
into
jle
and
mov
test
lods
jo
repz
lods
sub
xor
dec
adc
xchg
xor
bnd
fwait
popf
dec
mov
fistl
cmp
mov
std
push
mov
cmpsl
xlat
adc
push
stos
or
std
js
inc
and
mov
mov
push
jle
into
jle
inc
out
push
and
mov
and
mov
sbb
test
hlt
ja
rorl
cwtl
xchg
cmpsl
out
mov
arpl
ret
lock
out
repnz
lret
mov
out
sub
dec
xchg
mov
aam
out
or
add
sub
bound
scas
scas
push
adc
lods
addr16
lds
pop
lea
ljmp
andb
adc
cmp
pop
jns
in
inc
mov
stc
mov
xchg
outsl
push
mov
pop
pop
dec
jl
jo
fcmovbe
pop
in
cmp
xor
dec
cmp
je
leave
sub
scas
in
cmp
mov
imul
cld
push
or
fidivs
andb
pop
mov
xorl
cwtl
inc
mov
ret
test
ret
clc
adc
add
mov
xor
inc
fcoms
push
cltd
jp
lcall
push
ret
rclb
xlat
and
cmpsl
xchg
in
dec
das
xchg
add
aam
fsubrl
sbb
icebp
mov
sub
mov
adc
ss
push
jmp
aam
or
adc
mov
lods
xor
mov
mov
dec
adc
scas
add
rclb
inc
and
push
in
cmp
sub
cmpsl
lods
outsl
add
mov
jbe
add
cmpsb
out
in
xchg
movsb
push
sbb
and
mov
inc
sti
cltd
sub
out
stc
iret
mov
mov
fdivr
int3
push
fisttps
test
cmp
lock
ficoml
cltd
insb
por
xor
insl
cmpsb
insl
push
xchg
enter
mov
mov
adc
repz
mov
pop
xor
dec
mov
sbb
sti
das
pop
je
clc
cmp
fsts
push
pop
sbb
mov
inc
inc
pop
jnp
sbb
fadds
mov
or
push
adc
adc
push
aad
ds
scas
cmc
jmp
cld
mov
int
scas
repnz
sbb
test
pop
rorb
insb
sub
push
fs
shlb
jle
test
call
push
adc
stos
adc
cmp
jg
call
sbb
add
adc
dec
and
jle
dec
and
scas
or
xor
enter
jo
out
and
in
dec
jg
shlb
jmp
fildll
push
cld
iret
shl
pop
xchg
mov
idivb
pop
test
mov
dec
mov
sbb
push
loope
sarb
mov
stos
mov
fwait
or
mov
pop
xlat
inc
pop
add
ficompl
dec
iret
push
lea
stos
xchg
cmp
xor
and
push
mov
in
aas
jno
mov
in
mov
pop
inc
push
movsb
and
xchg
mov
sbb
xor
jbe
leave
fwait
icebp
mov
popf
add
out
and
rolb
sbb
mov
jecxz
push
pop
sti
dec
jne
scas
bnd
int3
jns
jne
pop
xchg
aaa
loop
dec
in
aad
adc
xchg
xchg
or
xchg
in
test
mov
stc
cmp
leave
dec
adc
addb
arpl
sbbl
stos
and
enter
movsl
sub
xor
push
push
mov
inc
into
aad
dec
jae
mov
ds
hlt
cmp
xor
cld
rorl
push
test
js
push
or
popa
sub
lcall
push
pop
cld
mov
rcll
lea
mov
sti
into
rol
insl
push
sti
xor
mov
inc
fwait
test
sarl
adc
ficompl
adc
pusha
mov
mov
outsb
dec
fstl
cmpsl
test
xor
testb
sbb
xchg
repz
push
rcrl
jne
scas
xchg
cwtl
xchg
adc
test
add
jge
jbe
mov
jg
cwtl
xchg
push
dec
xchg
dec
outsl
ds
ja
cld
ficoms
jae
adc
xor
daa
mov
fwait
sahf
or
push
cmpsb
test
fwait
mov
cltd
pop
sub
arpl
inc
mov
mov
mov
xchg
data16
adcb
leave
in
adc
data16
lret
and
cmp
call
adc
sti
loope
ds
inc
inc
mov
adc
adc
stc
pop
jno
sub
sub
sub
addb
adc
fidivs
sub
popa
add
repz
stos
dec
rclb
pop
sbb
scas
arpl
mov
inc
mov
fidivl
pshufw
mov
arpl
outsl
movlps
or
pusha
and
xchg
mov
dec
sahf
shlb
scas
mov
dec
cs
cmp
add
mov
sbb
jno
add
nop
scas
mov
xor
cmp
std
rorl
cltd
inc
jp
cmc
stos
push
jb
call
sub
and
dec
pop
je
pop
sbb
add
add
jp
mov
movsl
xchg
test
mov
fdivrl
push
mov
lea
add
in
sbbl
adc
push
pop
divb
std
mov
mov
mov
cmp
pop
and
lods
outsl
mov
add
shll
jp
or
push
xchg
jb
pop
cmpsb
ds
fimuls
adc
shl
test
and
mov
lea
mov
imul
cmc
rcrb
mov
push
add
pop
lret
stos
mov
movsb
repnz
xchg
sbb
push
stos
sbb
aaa
in
cwtl
sbb
mov
dec
dec
imulb
or
xor
and
mov
negb
cs
sub
sub
mov
fucomip
addb
leave
iret
jle
lcall
cwtl
push
insl
add
xor
insb
or
mov
add
movsb
sete
int3
fistl
dec
and
xchg
lea
in
jo
dec
sbb
stos
sbb
mov
mov
lea
xchg
add
mov
cmp
jmp
push
imul
inc
xor
repnz
push
mov
push
call
loopne
repnz
mov
lea
rol
sbb
mov
dec
jmp
cmp
adcb
pop
mov
popa
add
or
mov
dec
mov
ficompl
addr16
push
out
cmp
cmp
ja
push
iret
inc
orl
xchg
mov
fldenv
jmp
sbb
sub
stos
int3
sbb
js
inc
outsb
and
mov
dec
pop
fcoml
div
subl
jl
sahf
jne
das
mov
mov
cmpb
cmp
pop
mov
add
clc
stc
outsb
and
dec
outsb
pop
dec
cmp
pusha
xchg
gs
jno
add
add
xchg
mov
mov
out
sub
outsb
adc
aaa
fistps
orb
adc
iret
mov
in
push
dec
jne
adc
dec
jo
test
push
xchg
mov
adc
bound
cmpsl
movsl
and
xor
and
enter
push
idivb
fldpi
xor
cli
jg
xchg
dec
dec
inc
andl
add
nop
mov
sub
add
mov
daa
sti
push
scas
add
aaa
sbb
jb
test
cmp
data16
mov
addb
scas
in
icebp
mov
out
mov
mov
cmp
pop
pop
fwait
or
jbe
sbb
and
mulb
add
outsb
push
bound
push
inc
pop
ja
inc
out
dec
dec
sbbb
popf
rcl
scas
pop
clc
in
test
ret
mov
push
mov
negb
xchg
pop
test
push
mov
mov
jge
pop
xor
andb
xor
in
xor
mov
xor
fmul
xor
adc
bound
xor
int
repz
test
aaa
in
lods
fs
stos
push
jnp
stos
adc
outsb
dec
leave
inc
addr16
mov
cli
push
notb
shrb
dec
push
push
xchg
out
xchg
adc
out
add
sub
popf
and
lods
ljmp
data16
lods
mov
jns
test
or
xchg
and
sbb
clc
scas
divb
nop
inc
call
push
test
sbb
mov
cltd
or
mov
jecxz
mov
mov
mov
les
or
sar
mov
mov
fwait
jne
js
cmpsl
enter
lahf
roll
push
lock
flds
lock
pop
aam
sbb
ljmp
jb
mov
cmpsl
pop
lcall
xor
cwtl
jnp
push
negl
mov
inc
add
popf
add
mov
xor
int3
push
jb
sbb
add
enter
pushf
adc
xor
daa
les
xchg
push
dec
pop
sahf
mov
add
mov
cmp
xchg
and
sbb
inc
imul
inc
xor
repnz
sbb
dec
call
loopne
repnz
mov
lea
and
ja
add
xchg
fwait
lock
fistl
xchg
insb
jno
hlt
leave
rclb
push
ret
xor
std
std
adcl
loop
stos
jbe
cmp
in
cld
jne
and
loopne
xchg
in
clc
sti
pop
and
jge
inc
hlt
xchg
dec
pop
stos
sbb
sub
or
dec
jecxz
rorb
leave
jmp
arpl
mov
push
push
sarb
mov
and
adc
jg
cmpsl
xchg
out
mov
aas
lcall
pop
jge
mov
mov
aam
js
mov
int3
scas
fbld
jle
fnstcw
pop
idivl
out
xchg
call
shll
sahf
lret
stos
ja
sub
clc
negl
sub
icebp
shrl
inc
mov
cwtl
insb
jns
cmp
push
jp
jl
mov
and
cmpsl
or
es
xor
and
pop
mov
xor
test
popa
ja
pextrw
std
push
xchg
cmpsb
cmp
xchg
dec
xchg
cmp
or
push
ficoms
xchg
adc
leave
jb
sub
sbb
out
cmp
pop
jge
aas
pop
mov
icebp
cmpsb
and
cwtl
aam
test
fadd
push
sub
push
jbe
mov
adc
cltd
jecxz
mov
xchg
mov
pop
mov
sbb
xchg
and
iret
sub
insl
xchg
mov
negl
jno
enter
dec
push
in
and
jge
dec
andb
xor
xchg
push
and
jl
gs
out
sbb
and
ss
jno
pusha
shl
add
scas
aas
sbb
fxch
scas
shl
imulb
push
ret
adc
cmc
push
popf
mov
call
pusha
stos
mov
mov
shlb
jle
fdivrs
push
push
cmc
repz
ret
lret
lret
inc
xchg
leave
stos
cmp
xchg
mov
test
pushf
or
push
fcmovnbe
add
push
inc
fcomip
cld
mov
cmp
arpl
jle
dec
enter
sub
mov
mov
push
cli
cmp
sbb
and
sub
and
cmp
fmulp
insb
jns,pt
sbb
inc
mov
jge,pt
inc
mov
mov
mov
fmulp
insb
jns,pt
sbb
sbb
fs
sub
jne
lcall
out
mov
dec
or
mov
jge
dec
pop
push
lea
xchg
sbb
xchg
leave
jne
jp
shll
sbb
movsl
enter
sbb
hlt
lock
push
int3
mov
push
outsl
cmpsb
xor
mov
cmpsl
stos
std
jno
fs
jmp
outsb
mov
mov
cmp
popa
test
out
jne
dec
pop
or
cmp
sbb
dec
js
jp
push
cld
inc
push
repz
sbb
cmpsl
lret
add
ja
jle
les
adc
pop
mov
jge
cmpsb
stos
sbb
inc
and
xchg
xchg
lds
mov
sahf
inc
mov
push
inc
dec
cmp
cwtl
jmp
cmp
insb
inc
jle
dec
enter
sub
mov
aas
ss
push
dec
inc
cwtl
ret
lahf
xchg
ror
sahf
and
add
inc
das
sbb
dec
in
mov
xchg
mov
inc
mov
inc
nop
std
int3
cmp
jl
or
sbb
jo
adc
loop
movsl
dec
in
inc
fs
sti
rorl
xchg
sbb
sbb
mov
sub
xorl
scas
xorl
bnd
dec
test
addr16
cld
fldenv
shll
fadds
or
dec
add
je
sbb
repz
out
xchg
dec
in
les
mov
mov
xchg
push
subl
clc
out
pop
fdivl
jle
or
xchg
movsl
int
jae
cmp
lods
je
cmp
orl
cmp
jnp
test
or
fisubl
sti
call
push
sahf
out
and
sbb
jl
xor
out
gs
and
fisttpll
inc
loopne
dec
inc
xchg
lock
fsubrl
or
or
clc
notl
stos
or
add
and
push
shlb
add
push
or
bound
push
fisttps
add
mov
fsubrs
sub
dec
ret
push
dec
or
pop
xchg
popa
rcrl
int
cmpl
push
call
loopne
cmp
cwtl
popaw
mov
ss
pop
shrl
orl
call
loopne
cmp
xchg
lock
loopne
push
outsb
xchg
aaa
aam
and
add
lret
xchg
int3
dec
dec
xchg
in
bound
insl
cmpsl
je
mov
inc
dec
or
mulb
sbb
data16
pop
cmp
lahf
insl
das
data16
out
jb,pn
call
ficomps
call
repnz
mov
outsl
sbb
clc
ljmp
xchg
xlat
lock
fsubs
lds
imul
jns
cld
mov
cmp
popa
test
out
out
int3
xchg
mov
cmp
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
rcrb
xor
decb
out
adc
mov
arpl
mov
lods
popf
and
xlat
out
daa
push
je
lret
jge
and
push
pop
push
mov
mov
adc
jmp
je
das
js
xchg
lods
je
ja
mov
and
stc
add
lods
dec
movsl
dec
sti
jl
gs
out
sbb
push
jno
mov
mul
push
adc
mov
adc
mov
adc
mov
adc
fisttpl
rclb
arpl
lods
popf
and
xlat
out
mov
pop
mov
inc
adc
imul
cmp
inc
mov
cld
mov
aam
or
pop
dec
lods
push
sti
cwtl
dec
pop
cltd
xchg
dec
xchg
call
incl
push
xchg
mov
push
scas
daa
mov
adc
mov
adc
sbbl
fcmovnb
cmp
lods
popf
and
xlat
out
daa
push
je
lret
jge
or
cmc
dec
or
test
adc
inc
out
sub
mov
js
leave
inc
sbb
push
add
enter
out
adc
mov
adc
mov
adc
mov
adc
jno
and
out
push
cmp
lods
popf
and
xlat
out
daa
push
je
lret
jge
adc
lods
cmpsl
cmp
out
pop
mov
pop
xchg
adc
dec
mov
aas
inc
pop
pop
mov
mov
jbe
aam
jl
mov
sub
lds
jbe
and
iret
stos
ss
push
aas
inc
cs
jp
cmp
mov
icebp
scas
js
pop
adc
in
repz
xor
adc
mov
mov
pusha
mov
xor
mov
cmpsl
rcll
xlat
cmp
cmp
clc
js
and
mov
add
add
xchg
mov
push
scas
daa
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
lods
mov
movsb
imull
xor
mov
lods
popf
and
xlat
out
pop
xor
adc
cmp
cmp
xchg
fwait
pop
pop
popa
bound
cmp
imul
dec
mov
mov
lds
xchg
adc
xchg
mov
lds
fs
xchg
or
or
gs
adcl
push
arpl
subl
push
push
pop
dec
clc
dec
xor
mov
les
jno
test
repnz
mov
cmp
clc
js
adc
mov
adc
sub
or
push
mov
push
sbb
ret
fists
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
js
lods
mov
jo
push
pop
iret
std
movsb
enter
mov
adc
jmp
sub
cmp
lods
popf
and
xlat
out
lods
dec
cmpb
jne
mov
adc
cwtl
sbb
incb
roll
cmpsl
jmp
xchg
dec
pop
push
jns
lea
mov
mov
and
inc
dec
jns
mov
adc
mov
adc
enter
xor
loopne
inc
fcoml
mov
mov
xchg
or
mov
pop
sbbb
outsl
jne
push
xchg
add
adc
jo
and
jo
dec
jne
mov
test
nop
fs
dec
or
cmp
call
mov
ret
lods
mov
mov
mov
out
pop
pushf
in
xlat
add
dec
in
adc
stos
or
popa
push
sub
shlb
mov
mov
sbb
and
shr
scas
scas
jg
pop
mov
mov
xor
mov
pop
clc
mov
cmpsb
xchg
xlat
mov
inc
mov
int3
out
inc
std
cmpsl
fwait
or
mov
push
movsb
pop
inc
jns
and
and
and
sub
shll
insb
pop
les
mov
cmp
mov
addr16
fdivrs
mov
adc
dec
pop
lahf
xor
movsl
mov
imul
not
testl
mov
xchg
sbb
add
adc
cmp
mov
fisubs
push
mov
imull
repnz
ficomps
out
neg
testb
add
shr
mov
ds
fisubs
push
jl
les
mov
fadds
mov
add
mov
rcrl
ss
jbe
std
or
decb
pop
fs
jno
cmpsl
adc
movsl
pop
xor
jmp
pop
jp
fcoml
mov
mov
mov
adc
jecxz
ja
jle
cld
js
loopne
jmp
pop
ljmp
dec
movsl
data16
xlat
xchg
mov
repz
or
hlt
je
imul
cmp
lds
hlt
fdivrl
cs
addb
lods
mov
sub
scas
pop
mov
sbb
jo
shrl
test
in
sti
mov
shrl
pop
cmp
sbb
int
push
rclb
imul
popf
orl
loope
mov
jo
jne
mov
sub
arpl
pop
dec
jb
lock
outsb
shll
mov
xchg
inc
adc
and
sti
ljmp
insb
xor
push
jb
jmp
mov
cmp
cmp
and
not
cli
test
fsubr
dec
jg
xchg
repz
jno
insb
int3
iret
add
sarl
ss
test
cmc
xchg
xor
xchg
mov
xor
ja
leave
testb
add
mov
mov
and
xor
fs
inc
ficompl
enter
in
lock
xchg
and
fistl
testl
out
daa
outsb
lret
or
and
sbb
mov
sbbb
xchg
push
cmpsb
push
je
pop
fs
cli
ja
mov
ss
sub
xchg
dec
dec
test
pop
mov
fisttpl
test
jbe
repz
jbe
addb
out
sub
into
jae
mov
pusha
popf
xor
jb
aam
outsb
inc
bound
inc
dec
inc
xlat
call
bound
push
sub
push
push
mov
pop
mov
xor
mov
js
stc
loope
add
fsubrs
aas
je
into
cmp
mov
cmpl
adc
adc
jbe
sbb
hlt
je
sbb
sbb
adc
dec
rcrb
das
pop
rcrl
js
dec
sarl
or
dec
mov
mov
iret
repz
stos
adc
adc
push
nop
clc
sbb
imul
hlt
shlb
dec
stc
sbb
addr16
mov
inc
pop
ljmp
rorl
push
cld
add
sbb
mov
cmpsl
js
leave
inc
subl
add
sti
dec
inc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
sbb
push
pop
pop
add
es
cmpsl
ret
shlb
xchg
imul
push
notl
call
out
adc
mov
adc
fs
pop
fisttpll
mov
mov
lods
popf
and
xlat
out
pushf
outsb
dec
mov
loopne
cmp
xchg
jo
pop
jmp
sbb
pop
mov
add
sub
mov
movsb
lods
or
insb
je
insb
out
dec
sbb
push
adc
pop
scas
outsb
test
xchg
xchg
loopne
cwtl
enter
xor
loopne
outsb
dec
in
inc
inc
mov
pop
roll
into
sub
add
dec
insb
insl
mov
adc
mov
sahf
add
xor
leave
sbb
es
std
cmp
jne
push
cmp
cmp
fnstsw
mov
imul
xor
mov
stos
dec
addb
cli
inc
dec
iret
sbb
lret
call
adcb
mov
jecxz
mov
fnsave
sub
xchg
sub
divl
pop
cmp
stos
inc
popl
fistl
js
push
outsb
fists
lods
add
out
int3
xchg
mov
cmp
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
dec
jae
aaa
call
or
sbbb
rcll
ds
sbb
and
lcall
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
in
jmp
adc
sub
cltd
add
inc
cmpsl
or
or
pop
clc
addl
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
nop
add
lods
ja
xchg
repz
ret
rorb
dec
mov
ljmp
adc
mov
adc
mov
adc
js
rcrb
mov
es
icebp
inc
outsl
popl
outsb
fisttpll
or
int3
fisttpl
and
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
pop
pop
jecxz
or
fisttpll
sub
adc
enter
xor
loopne
daa
jecxz
jle
ret
fcmovbe
fs
xchg
shlb
xchg
stc
lret
cmp
mov
ret
bound
mov
add
dec
loopne
stc
dec
int3
mov
inc
dec
jns
mov
adc
enter
xor
loopne
cltd
cli
add
sub
in
fs
inc
icebp
and
xor
pop
fucom
jno
addl
mov
adc
inc
mov
repnz
addb
out
xor
cmp
push
loope
roll
pop
jp
cmpsl
repz
dec
mov
add
jge
mov
stc
push
popf
inc
jg
into
into
and
mov
and
jns
mov
cmp
stos
sub
dec
inc
jecxz
ss
adc
out
test
pop
outsl
pop
pop
popa
les
out
sahf
imul
int3
cmpsl
insl
jecxz
frstor
push
arpl
jbe
cmp
cmp
adc
jb
push
test
push
cld
mov
lahf
cwtl
addr16
cmpl
jb
ret
pop
mov
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
andb
dec
vmread
adc
sbb
jnp
clc
jno
ljmp
mov
mov
sub
add
jo
or
adc
cmc
mov
outsb
dec
popl
and
clc
in
cltd
ljmp
xchg
addr16
mov
cmp
lds
mov
add
and
add
add
adc
mov
adc
mov
adc
mov
adc
repnz
inc
lcall
push
adc
pop
push
sbb
lds
jmp
lock
mov
fisttpll
sub
adc
mov
adc
enter
xor
loopne
jbe
sbb
mov
fnstenv
inc
mov
jl
pop
xchg
mov
adc
mov
adc
enter
xor
loopne
subb
mov
test
cmpsb
mov
lcall
pop
xchg
mov
adc
mov
adc
pop
push
sbb
das
movsl
rolb
add
adc
dec
xor
and
daa
sub
inc
mov
mov
std
clc
addl
mov
adc
mov
adc
enter
xor
loopne
mov
cmp
mov
call
mov
cld
mov
adc
mov
adc
enter
xor
loopne
test
mov
sbb
test
xchg
popf
mov
adc
enter
xor
loopne
inc
mov
pusha
mov
adc
mov
adc
divl
pop
add
sub
pop
jg
rorl
mov
cmpsb
icebp
cwtl
adc
fwait
mov
adc
mov
adc
cmp
inc
inc
push
movsl
jae
ficoms
cld
out
fisttps
adc
dec
pop
xchg
imul
sahf
mov
enter
push
cmp
fcmovu
push
adc
outsl
jecxz
fwait
mov
xor
push
scas
daa
mov
adc
mov
adc
bound
jp
jge
scas
scas
mov
adc
enter
sbb
mov
lods
popf
and
xlat
out
lods
dec
cmpb
jne
inc
pop
jg
dec
add
nop
jmp
pop
gs
dec
adc
inc
cmpsb
jmp
in
das
in
in
adc
ljmp
cmp
or
mov
add
jmp
or
jb
jg
test
inc
and
sbb
sahf
sbb
mov
xchg
jae
es
leave
les
loopne
fcomi
sub
fadds
mov
pop
pop
sbb
push
adc
xchg
nop
les
pop
pop
cmp
cmp
clc
js
lret
dec
pop
testb
mov
adcb
push
pop
lock
test
stos
push
jbe
sub
mov
push
clc
xlat
dec
insl
test
cltd
xor
iret
mov
or
insl
les
cmpsl
push
push
sub
inc
cmp
mov
shrl
xchg
pusha
mov
mov
sbb
mov
push
pushfw
mov
xchg
in
dec
in
filds
or
jle
aam
js
push
dec
cmpsl
iret
loop
out
fcoms
jnp
call
pop
fwait
adc
ss
stos
data16
mov
push
and
xor
push
or
jns
out
pop
pop
adc
ljmp
sbb
lcall
dec
test
test
pushf
jecxz
xlat
cs
mov
or
mov
pushf
xor
or
add
cmp
sub
jle
pop
dec
and
incb
mov
jnp
daa
out
stc
mov
adc
mul
sub
mov
ror
andl
lods
xchg
loope
mov
or
flds
jmp
cmp
popf
cli
adc
and
pop
cmp
daa
xchg
psrld
insb
sbb
out
lods
cmc
lods
pop
push
jp
xchg
gs
test
jmp
imulb
shl
sbb
lods
in
adc
mov
xchg
jno
iret
ficoml
shl
rcrb
or
add
sar
pop
mov
adc
inc
sbb
insl
mov
test
sbb
hlt
inc
mov
cmp
jle
jl
mov
outsl
outsb
xor
xchg
test
adc
lret
scas
adc
jns
stc
xchg
sbb
cmp
movsb
movsl
shll
mov
add
in
adc
and
add
push
and
xchg
sub
pop
adc
xchg
addr16
loope
or
or
xchg
push
jle
dec
pushf
or
mov
shl
bound
xchg
mov
jle
je
out
xorl
jbe
push
mov
cmp
scas
in
xorb
cmp
and
aad
sub
mov
adc
xchg
scas
lea
jae
js
mov
outsb
mov
ljmp
or
and
call
or
aas
aaa
jecxz
das
xor
insl
in
sbb
gs
sbb
mov
and
push
xchg
test
sbb
and
addr16
or
and
jo
cmpsl
jb
test
cmp
dec
dec
insb
jb
jp
and
sarb
or
pop
roll
sbb
js
xor
push
pop
das
aad
mov
jl
aam
add
or
shll
xor
ret
mov
je
outsl
add
pushf
cltd
fmull
jmp
cmp
aaa
jle
test
mov
mov
jo
sub
mov
push
adc
outsb
and
mov
scas
daa
in
xor
xor
clc
addr16
xchg
gs
ret
mov
out
jns
movsl
orl
loope
push
loopne
lock
sbb
fiaddl
fnsave
rorb
test
xchg
int3
repnz
push
sbb
cmp
add
inc
mov
sub
gs
fcoms
imul
add
ds
repnz
bound
test
or
jo
filds
mov
sub
fs
imul
inc
mov
jmp
filds
inc
lods
xchg
pop
xor
sub
mov
pop
add
dec
pusha
lahf
lods
cmc
imul
pusha
arpl
sbb
fdiv
ret
dec
xchg
sbb
lret
xor
jmp
mov
and
fs
outsl
mov
or
jnp
lahf
leave
push
or
lock
insb
xchg
or
pop
into
fistpl
cs
jbe
and
push
dec
mov
insb
adc
mov
pop
sbb
mov
jmp
cmp
cmc
gs
jge
cmpsb
xchg
and
paddb
stc
lahf
mov
test
xchg
mov
sub
push
dec
sbb
jbe
adc
add
sub
lods
xchg
cmp
push
jae
sbb
mov
pop
dec
cmp
sti
jns
daa
add
push
inc
adc
mov
fisubl
or
mov
xor
stos
mov
xchg
addl
add
js
pop
push
push
orb
fwait
bound
cmp
jno
xor
mov
lock
mov
dec
dec
sub
dec
cmp
rolb
dec
in
jb
or
mov
cmp
stos
add
js
insb
push
sbb
xor
int
xor
sbb
xor
mov
loopne
add
mov
and
adc
and
in
aaa
adc
sbb
mov
jno
mov
lock
jmp
inc
int3
jp
jge
lods
pop
mov
fld
fwait
or
adcl
add
std
cmp
mov
fsubrs
sub
cmpsl
lcall
add
in
inc
int
pop
aad
mov
mov
dec
mov
cmpsb
mov
mov
adc
dec
adc
pop
les
sti
fidivrs
movsl
ljmp
cwtl
cmpsb
les
ljmp
jns
xor
lods
push
fcmovnb
out
idiv
mov
call
and
mull
std
aas
rolb
mov
negb
sahf
or
dec
sti
imul
pop
add
sub
repz
push
or
mov
add
sbb
out
pusha
scas
cmpsb
iret
je
mov
mov
sbb
xchg
xchg
clc
xor
inc
cmp
sarl
bound
fs
adc
mov
push
outsl
adc
mov
mov
xchg
mov
stos
dec
popa
pop
xchg
inc
das
adc
jl
mov
and
lret
jmp
cs
adc
lcall
xchg
lds
jb
pop
xor
dec
jb
push
es
addb
xchg
sti
pop
in
js
rcrl
push
and
xor
or
test
xchg
cmp
hlt
mov
push
int
or
clc
add
push
sbb
add
clc
sbb
push
das
fnstenv
inc
pop
stos
fidivl
sbb
adc
dec
and
enter
push
mov
adc
bswap
in
cmp
xor
add
in
jl
dec
dec
or
mov
xor
ret
inc
xlat
pop
sbb
xchg
jecxz
and
fnstsw
mov
aad
mov
jbe
js
pop
repnz
mov
loop
sub
cmc
adc
mov
xor
xor
pop
sbb
out
fdivs
push
bound
lcall
cltd
das
adc
inc
int3
inc
in
cli
sbb
loope
sbb
mov
out
aaa
insb
jle
cmp
pop
mov
cmp
sbb
addr16
lret
loopne
rorb
cmp
or
fidivl
loope
mov
fldenv
shl
and
out
repnz
add
mov
pop
add
aaa
int
gs
jle
repz
or
ret
push
xchg
pop
in
fmul
xor
cmp
pop
ja
bnd
add
xchg
stc
sub
push
cmp
inc
and
dec
dec
outsl
jne
mov
pop
lods
or
xchg
cld
fcmovnu
or
mov
mov
lock
sbb
dec
push
mov
in
sub
mov
mov
imul
jecxz
nop
sub
pushf
addr16
inc
pushf
mov
and
xchg
vpminsw
push
cwtl
out
rcrl
enter
in
add
loopne
mulb
ret
mov
std
pop
push
imul
shlb
add
mov
in
fisubrl
and
test
stc
aad
jmp
cwtl
jecxz
sub
ret
hlt
mov
in
cld
mov
aam
sub
cmp
adcl
xchg
push
pop
push
push
outsb
fsubrs
lret
mov
and
push
push
fnstcw
jae
ficompl
jmp
jb
cmpsl
ret
or
lret
lods
pusha
mov
shl
push
add
jl
mov
mov
mov
jl
mov
mov
insb
and
pop
mov
adc
push
mov
add
push
and
mov
shll
movsl
pusha
mov
xor
jnp
mov
test
imul
jg
adc
mov
in
mov
jb
inc
and
in
pop
mov
data16
lock
sub
inc
fwait
jo
sub
or
mov
add
cmpb
push
ljmp
in
jmp
mov
and
cmp
xchg
cltd
std
iret
xor
daa
sti
in
mov
fs
fwait
mov
add
ret
in
mov
jbe
pop
adc
sbb
mov
pushf
adc
mov
jge
rclb
inc
xchg
mov
cmp
lock
jns
xchg
pop
lods
leave
pop
adc
sub
aas
sbb
dec
push
in
ljmp
imul
push
pop
mov
sbb
mov
add
sbb
sbb
lea
aaa
ret
pop
xchg
sahf
lods
and
lds
sbb
sarb
test
paddusw
outsb
popf
movsl
cmp
mov
push
fistps
outsl
jge
cwtl
pop
je
dec
push
enter
arpl
inc
bound
lcall
inc
jge
jno
loop
ljmp
xchg
aad
inc
add
dec
test
adc
xchg
mov
mov
jg
push
test
je
xor
push
xchg
mov
out
sahf
push
add
xchg
in
jmp
mov
cmc
jns
xlat
sub
int
or
lret
incb
adc
in
fwait
in
adc
lea
jae
imul
shlb
mov
gs
icebp
stc
adc
pop
icebp
or
push
repnz
mov
adc
lret
test
pop
add
fwait
and
lods
cli
sahf
jecxz
push
outsl
int3
add
leave
in
inc
add
lahf
ljmp
push
cmp
sahf
or
repnz
sbb
fsts
and
pop
scas
push
mov
imul
pop
insl
les
clc
xor
out
mov
pop
or
and
fwait
mov
cmpb
jge
cmpsl
add
cmp
int3
test
pop
addr16
ss
add
jmp
sbb
lea
or
out
cltd
je
addb
daa
int3
icebp
imul
ljmp
adc
xor
xorl
mov
xor
sub
pop
jmp
jno
jb
aad
shrd
pop
test
push
mov
mov
inc
add
cmp
jbe
mov
mov
mov
push
sub
xchg
cld
add
inc
dec
sub
ljmp
xor
ret
inc
mov
jmp
jno
aas
xchg
out
in
mov
mov
and
stos
les
hlt
movl
movsl
pushf
push
jmp
push
jne
cwtl
mov
push
xor
xor
popa
inc
add
cltd
pusha
mov
inc
jno
sbb
ret
out
sub
adc
pop
fs
lock
out
and
movsb
dec
jecxz
cmp
sbb
jge
push
icebp
cmc
pop
pop
push
cmpsl
jg
push
and
mov
ja
cmp
frstor
jns
jmp
jne
sub
int3
scas
jo
xor
out
divb
fsubl
jbe
out
push
sbb
addr16
jmp
sub
iret
out
inc
inc
sbb
into
fld
les
sbb
js
sbb
and
xlat
aad
mov
pop
js
and
inc
cmp
sub
std
inc
scas
xchg
pop
cmpsb
insl
ja
ss
in
inc
pushl
enter
ja
dec
lret
daa
mov
idivb
cwtl
imul
pop
insl
pop
and
test
lds
dec
lods
sbb
xchg
addr16
push
shrb
xchg
aam
roll
sbb
cmp
testb
je
aam
mov
ss
jns
xchg
or
cltd
pusha
mov
adc
rclb
sub
int3
out
mov
mov
repz
cmpsl
fisubrs
push
xchg
data16
cmp
lods
sahf
rorl
shll
push
adcl
inc
cmp
or
sbb
out
lea
addr16
sbb
dec
adc
fldt
movsb
mov
push
stc
ja
mov
mov
leave
pop
inc
xchg
add
pop
sub
dec
shlb
loope
repz
sbb
int
cltd
jmp
mov
mov
sub
xchg
cmp
or
push
pop
push
push
push
pop
sub
aas
mov
jmp
mov
lds
adc
jmp
pop
sbb
mov
out
push
jle
ds
test
ja
fs
ds
pop
jp
int
jle
out
xor
xchg
mov
adc
insl
add
in
stos
mov
jmp
or
push
sti
sub
push
js
cmp
jle
xchg
ljmp
and
and
push
sti
sub
push
js
cmp
or
sbb
mov
je
sub
test
call
enter
movsl
adc
shlb
xchg
cld
xchg
cwtl
and
test
jmp
mov
repz
and
push
xor
mov
xlat
rcrb
out
in
clc
sub
insl
insb
or
in
add
add
pop
int3
xor
jmp
jbe
inc
pop
lret
ret
out
push
mov
or
testb
in
out
xchg
mov
xor
stos
fsubl
push
mov
dec
add
add
sbbb
repnz
cmp
fistl
sub
or
add
leave
ss
ljmp
xor
and
cmp
cmp
push
repz
out
or
adc
scas
mov
pop
sbb
push
fcmovnbe
icebp
fistl
add
and
jmp
sbb
sub
or
stos
cli
movsb
stos
test
ret
fldcw
xor
adc
mulb
and
fisubl
pop
stos
push
popa
out
lcall
or
dec
pusha
xchg
pop
adc
mov
sub
add
sti
sbb
test
js
jle
adc
pop
xchg
jne
std
orb
cltd
add
jmp
outsl
cmp
jno
push
rolb
mov
pushf
rolb
dec
cwtl
bound
lea
sub
pop
or
aad
or
mov
nop
imul
xchg
fcompp
into
sbb
lds
mov
and
or
in
or
add
int
imul
pop
cmp
insb
rcl
fsubs
mov
roll
in
push
daa
es
xor
jp
xchg
loope
pop
mov
pop
xorl
xlat
and
add
sub
or
mov
insb
shrb
ret
lret
movsl
mov
cmp
adc
mov
call
fists
adc
shlb
movsb
mov
stos
or
stos
add
sarb
xorl
add
push
add
mov
push
cmp
and
stos
or
xchg
pop
mov
xor
outsl
clc
xor
imul
lcall
imul
fmull
xchg
xchg
int3
shr
stos
enter
or
dec
xor
adc
das
orb
xor
jne
jle
out
pop
pop
mov
jns
push
sub
sahf
imull
xchg
jge
cmp
mov
cwtl
ds
fmull
out
xchg
cmp
jb
mov
lds
dec
mov
push
popa
out
lcall
or
js
jl
into
adc
dec
cwtl
xchg
in
leave
cmpsb
inc
dec
inc
in
jmp
lods
dec
aad
or
xorl
cmp
xor
scas
es
ret
shlb
jno
pushf
jmp
test
mov
rcll
mov
rolb
out
andl
and
sti
in
jae
in
js
imul
xchg
fcompp
into
sbb
lds
mov
sub
pop
mov
sbb
jns
aam
jns
mov
lds
inc
adc
gs
pop
cmp
inc
jb
iret
inc
or
std
fsubs
cmp
add
sti
icebp
leave
int3
cltd
je
jb
lahf
mov
xchg
pop
mov
and
xlat
and
fs
fimull
mov
mov
fidivl
stc
and
mov
testl
out
push
dec
in
mov
mov
inc
and
fsub
push
ja
jmp
xlat
out
pushl
sbb
inc
jno
and
cmp
lods
add
xchg
clc
mov
push
pop
dec
out
dec
cli
loop
rolb
mov
cld
mov
repz
pop
mov
mov
mov
hlt
mov
roll
mov
int
cld
outsb
push
pop
cwtl
cmpsb
pop
out
inc
push
and
mov
cmp
popl
rcl
nop
mov
push
lahf
and
stos
ja
xorl
leave
sbb
jbe
fists
aam
fwait
xor
cmp
movsl
loope
xor
sahf
or
mov
loopne
mov
dec
mov
movsb
fisttpll
mov
sub
and
ret
cltd
hlt
pop
mov
fldl
add
outsl
xchg
push
add
pushf
jnp
ret
mov
sbb
out
inc
push
push
lahf
and
or
push
xor
loope
mov
popf
lods
ret
mov
jge
lret
mov
add
sub
repnz
sub
xchg
dec
add
mov
je
jae
mov
outsb
pop
sub
cmpsl
xor
hlt
stc
xchg
jae
idivb
aaa
jl
stc
clc
xchg
icebp
adc
ror
lret
sahf
repz
fcomi
daa
fimull
mov
mov
sub
pop
or
dec
fdivrs
mov
mov
das
sub
sbb
and
xchg
dec
xlat
mov
fwait
lods
dec
ja
mov
xor
add
cltd
aaa
xchg
ret
repnz
inc
dec
or
inc
push
adc
push
lahf
and
or
push
xor
loope
mov
popf
leave
mov
mov
push
adc
xor
test
pop
fisubrs
push
jb
jmp
push
lahf
aas
xchg
ret
xchg
mov
loope,pn
inc
mov
mov
ss
sub
jmp
mov
push
jge
shll
adc
mov
mov
stos
out
inc
mov
xlat
xor
or
pop
mov
call
pop
xchg
fcoml
push
sub
cwtl
stc
out
xchg
mov
mov
pop
ljmp
push
cld
fwait
sbb
in
mov
movsl
and
lods
mov
or
or
test
xor
push
push
push
add
jmp
jno
aas
xchg
out
in
mov
mov
jmp
mov
iret
hlt
add
loop
xorb
ds
sbb
inc
das
push
mov
ret
jno
push
test
inc
lcall
test
mov
mov
mov
sbb
fbstp
rcl
adc
sub
inc
repz
sub
cmpsb
fildll
lods
xor
mov
push
mov
cmc
mov
sahf
xchg
pop
push
lret
mov
xchg
clc
mov
or
cmpsb
test
ret
xchg
mov
int3
cmp
ror
shlb
add
sti
outsl
sbb
pop
jecxz
ss
movsb
jns
insl
jp
pop
mov
add
insb
es
pop
mov
xor
outsl
clc
xor
imul
mov
imul
mov
jo
movsb
mov
arpl
inc
movsl
push
fisttpl
sub
outsb
hlt
sub
pop
mov
dec
bound
xchg
mov
pop
into
ss
dec
adc
mov
xchg
xchg
or
ficompl
dec
fs
push
jne
fistpl
orb
fdiv
sbb
inc
jmp
and
mov
mov
jle
sti
sub
inc
inc
fdivr
mov
sbb
inc
loope
jg
sub
mov
divb
xchg
cmp
pushf
and
sub
cwtl
xchg
pushf
xor
jbe
fcoms
sub
mov
pop
push
testb
roll
and
cmp
cmp
push
repz
out
or
adc
cmp
mov
push
and
test
ficoms
push
cwtl
sbb
loope
xor
dec
inc
mov
stc
cli
mov
int
das
and
and
inc
jecxz
cmpsb
std
shlb
cmp
add
pop
mov
movsb
push
jne
mov
nop
fs
imul
shlb
sbb
jg
in
xlat
sub
out
sub
out
fsubs
dec
gs
stos
mov
inc
aas
or
xor
and
aaa
dec
imull
fbld
mov
xor
ljmp
sub
stc
or
out
sarl
dec
fnstcw
filds
outsl
cwtl
mov
xchg
lahf
and
cmp
or
jno
fadds
pop
sbb
in
test
xchg
mov
jae
in
aas
xchg
fiadds
fdivr
xor
iret
sub
std
mov
push
jnp
jae
mov
mov
js
rol
pop
test
inc
inc
cli
mov
fimuls
jge
sarb
sbb
in
push
call
fnstenv
and
add
cmpsl
pop
shrl
inc
jb
jnp
mov
out
loop
or
lock
divl
xchg
add
jmp
imul
pop
mov
loopne
jne
loop
popf
aam
psubw
xchg
outsb
cli
fisttpll
jecxz
mov
repnz
sbb
int
mov
pop
sbb
call
push
pusha
dec
dec
sbb
dec
jg
stc
push
xor
mov
testl
mov
mov
sub
fwait
mov
and
push
dec
add
addr16
add
mov
cld
stos
cmp
cmp
adc
cltd
pusha
mov
or
inc
adc
shlb
mov
sahf
paddb
shlb
mov
push
mov
mov
cmp
cld
hlt
and
rcrb
inc
adc
daa
mov
loop
inc
jns
nop
loope
rol
or
addl
mov
add
and
add
sbb
lcall
jae
pop
std
push
lods
negb
push
or
fs
loope
dec
add
decb
scas
dec
push
xor
hlt
cmc
push
sub
and
nop
mov
pop
inc
cmpsb
pushf
shlb
lret
cli
mov
jno
xchg
xchg
and
push
scas
stc
iret
outsb
mov
xchg
cli
aaa
addr16
mov
nop
cli
sbb
mov
push
cwtl
pusha
je
and
aad
mov
call
cmpl
lcall
push
test
or
sub
lea
xchg
hlt
jg
and
jns
xchg
xchg
and
push
movsl
test
cmpsb
mov
lock
xchg
mov
adc
cmp
adc
cwtl
and
mov
add
addr16
add
scas
xor
in
inc
ret
mov
add
cltd
pusha
mov
jge
add
xor
and
xor
lods
inc
cmpsl
jle
push
fisttpll
push
pop
movsb
push
jne
mov
push
daa
ss
jne
lock
jno
movsb
mov
int3
mov
fnstcw
jp
popa
shr
sbb
stc
mov
cmp
scas
xor
dec
push
jmp
push
lds
add
adc
jle
or
sbb
lahf
mov
loope
int3
mov
push
arpl
roll
push
lock
fsub
cltd
push
push
jae
int3
cmp
outsl
pop
sbb
or
ja
dec
mov
push
daa
pop
pop
imul
int
push
popf
sub
or
pusha
mov
mov
stos
cwtl
stos
out
push
xor
stos
add
jmp
pop
or
loopne
or
nop
insb
mov
mov
fdivl
cmp
shl
hlt
bswap
adc
sti
leave
fucomi
jmp
and
cltd
leave
sbb
cmp
and
cmp
push
adc
jo
push
add
das
mov
fadds
jns
sbb
push
addr16
dec
add
push
aas
inc
dec
shrl
and
sub
sbb
cmpsl
pusha
lods
sbb
add
loope
xchg
sti
add
insb
jne
in
mov
lret
adc
jl
in
div
and
or
mov
movsb
call
xchg
pop
and
sahf
push
mov
mov
out
mov
inc
in
mov
and
and
mov
sub
push
fucomp
test
adc
or
lret
mov
push
insl
lods
jecxz
repz
or
ljmp
jecxz
mov
mov
stos
insb
repz
pop
rorl
aas
fwait
xor
mov
sub
push
xchg
push
loopne
pusha
fnstcw
inc
push
jae
lret
or
dec
add
addr16
add
lret
cmp
sub
int
adcl
xchg
adc
fstpt
fsubl
jnp,pn
sbb
out
dec
pop
mov
jp
jl
fdivrl
mov
adc
mov
or
cmpsl
in
ljmp
stos
fistpll
ljmp
xchg
dec
add
addr16
add
cmpsb
push
pop
mov
mov
stc
push
push
test
mov
ret
fneni(8087
dec
or
and
cmp
sub
stos
jbe
aaa
movsb
push
jne
mov
add
and
lahf
lret
pop
or
dec
cmp
mov
sub
xchg
add
dec
es
cmp
pushf
and
stos
sbb
xor
lret
pop
xor
scas
sub
es
cltd
pop
mov
mov
jbe
cmpsl
scas
adc
xchg
jmp
sub
sbb
flds
sub
add
xchg
mov
lods
adc
dec
flds
add
aas
push
das
pop
fstps
repz
imull
mov
es
adc
nop
dec
stos
or
in
daa
lcall
aaa
jb
sarl
orl
jnp
lods
testl
imul
sub
mulb
aam
pop
mov
test
mov
mov
mov
sub
test
add
sti
mov
add
leave
movsl
sbb
div
jp
pop
bt
outsl
push
push
cmp
sbb
add
cltd
pusha
mov
pop
aas
inc
jle
hlt
gs
push
push
and
or
mov
push
je
je
pop
push
ret
jnp
popa
adc
xchg
repnz
jne
push
and
dec
push
mov
lcall
mov
mov
push
adc
adc
std
xchg
mov
in
decl
dec
mov
push
pop
pop
fdivrs
imul
xchg
iret
test
cmc
inc
faddl
sub
and
into
pop
jbe
insl
mov
sub
int
dec
mov
mov
bound
cmp
xor
push
cmp
mov
icebp
mov
cs
in
xor
scas
sub
jecxz
movsl
sub
ds
dec
out
xor
shl
inc
xor
jge
add
jg
and
idivb
add
dec
sahf
adc
xor
gs
push
sahf
movsl
arpl
popf
push
sbb
out
sarl
push
jle
jl
pop
mov
inc
add
aas
inc
sbb
lds
lret
stos
fisubrs
xchg
into
sub
sahf
jne
pop
ja,pt
mov
bound
pop
out
mov
pop
mov
push
ja
lcall
push
add
cmp
sub
cmc
sbb
push
mov
xor
push
outsb
shlb
xor
cld
dec
leave
rcrl
fists
xchg
out
sbb
ficoms
mov
mov
loopne
jns
inc
sahf
popa
or
mov
pop
aam
icebp
ss
ds
pop
aaa
add
fstpl
mov
sbb
jl
adc
pushl
add
inc
push
jle
flds
cmpsl
sahf
sar
rorl
dec
lods
jp
jge
pushf
xor
aas
sub
test
repnz
sbb
fdivrl
rorb
mov
fldl2t
in
shrb
mov
fiadds
xor
sti
addl
add
mov
push
push
or
jns
out
mov
lcall
pop
pop
sbb
pushf
mov
lock
lret
cmp
adc
push
lcall
adc
xchg
in
dec
pop
inc
sub
sbb
or
jbe
add
adc
lods
cmc
outsb
cwtl
push
jb
mov
pusha
repnz
mov
jo
mov
test
cmp
mov
cs
cmpsl
js
leave
inc
sbb
push
add
enter
out
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
mov
arpl
aad
adc
shr
insl
fistl
jnp
adcb
hlt
imul
and
divl
test
mov
adc
mov
adc
enter
xor
loopne
mov
push
xchg
mov
stc
stc
cmp
and
add
fbstp
dec
iret
xor
jo
xchg
push
fists
adc
enter
xor
loopne
xchg
sahf
mov
loop
iret
std
movsb
enter
mov
adc
enter
xor
loopne
jg
xor
pop
iret
std
movsb
enter
mov
adc
icebp
add
lods
dec
ss
dec
inc
shll
cmpsl
or
jg
popa
pop
mov
cli
cmp
sub
test
inc
xorb
or
push
mov
jg
mov
adc
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
inc
loopne
mov
mov
scas
lock
sbb
stos
stos
dec
out
xorb
lods
jae
inc
adc
rcl
cmpsl
mov
dec
aam
pop
push
push
stos
cmp
adc
mov
mul
push
adc
mov
adc
mov
adc
sub
dec
inc
jg
mov
lods
popf
and
xlat
out
xchg
into
ja
adc
es
lock
xchg
mov
jg
stc
test
cmp
nop
mov
shrl
insl
daa
rcll
hlt
xor
inc
pop
jb
test
out
inc
sbb
rorb
and
cld
imul
mov
adc
mov
adc
mov
adc
mov
adc
fwait
add
shr
push
sub
or
jns
push
add
mov
ret
xchg
popa
adc
inc
popa
adc
cmpsb
insl
arpl
sub
ret
mov
ss
js
xchg
popa
xor
dec
std
lock
shl
and
or
fstpt
adc
jno
push
inc
jmp
sub
imul
mov
mov
loopne
cmpsl
loope
jecxz
adc
sbb
orb
fdivs
jecxz
stos
pop
ret
jns
mov
ret
sar
inc
test
pop
mull
aas
jecxz
cmp
inc
push
adc
push
push
or
jg
pusha
lea
jae
dec
mov
push
fisubrl
cmp
rcrb
and
int3
cwtl
mov
bound
insl
scas
dec
gs
lret
fcmovne
push
lcall
and
adc
add
stc
sbb
cwtl
loope
inc
push
insl
dec
sub
in
fidivs
sbb
mov
dec
or
xchg
inc
cmp
push
mov
pop
pop
ret
lahf
adc
inc
pop
mov
pop
adc
adc
mov
and
movb
dec
adc
in
out
dec
pop
adc
jge
inc
fmull
std
cmp
xor
aaa
lods
xchg
stos
in
dec
cmp
inc
lds
jb
es
rclb
xchg
inc
push
scas
pop
xchg
flds
in
imull
sbb
fdivrs
xor
fs
les
test
pop
mov
cmpsl
mov
push
test
xlat
outsl
sbb
and
clc
xchg
push
sub
jl
push
in
out
pushf
lods
sub
pop
movsl
jo
push
dec
mov
lea
loop
cltd
jmp
inc
xchg
inc
cmp
fstpt
out
push
cmp
pop
aam
push
sbb
out
xchg
movsb
jnp
stos
cmp
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
xor
iret
in
leave
add
inc
lock
mov
pop
mov
xchg
loop
int3
scas
xchg
pop
mov
or
clc
arpl
mul
push
adc
mov
adc
enter
xor
loopne
repnz
sahf
imul
fbld
sub
mov
rcrb
xor
loopne
jae
clc
scas
imul
mov
fndisi(8087
adc
add
mov
iret
in
pop
outsl
mov
sbb
push
lret
and
out
loope
nop
dec
cmpsl
mov
lds
or
add
push
jne
jle
mov
push
cmpsl
push
repnz
adc
mov
adc
xor
iret
in
cmpsb
arpl
mov
jmp
inc
pusha
aaa
out
add
and
xor
imul
jae
pop
dec
scas
sbb
or
add
adc
mov
adc
jl
jl
dec
xor
and
fadds
fnstcw
std
add
hlt
cltd
xor
out
adc
mov
adc
enter
xor
loopne
mov
cmp
jnp
scas
cli
mov
mov
dec
dec
arpl
cld
mov
adc
mov
adc
inc
xor
jbe
test
mov
add
in
sbb
pop
or
adc
cmp
push
mov
out
adc
xchg
push
insb
pop
out
mov
jo
mov
and
std
jno
lea
or
repz
sarl
inc
inc
andl
mul
push
adc
mov
adc
jb
and
mul
push
adc
divl
pop
add
sub
pop
jg
rorl
jle
test
mov
push
movsb
enter
mov
adc
cmp
inc
inc
push
movsl
jae
into
sahf
mov
push
rclb
adc
dec
pop
xchg
imul
sahf
mov
enter
push
cmp
fcmovu
push
adc
outsl
jecxz
fwait
mov
xor
push
scas
daa
mov
adc
mov
adc
xchg
daa
lods
out
das
in
outsl
xchg
loope
cld
pop
daa
ret
push
imul
icebp
sbb
cltd
sub
dec
fsubr
pop
push
out
scas
mov
and
inc
inc
mov
insb
jb
mov
or
and
lret
bound
sbb
lods
sub
mov
subl
dec
jecxz
out
inc
lea
test
sbb
fnsave
xor
inc
sti
cwtl
lret
push
mov
nop
rorb
in
out
loop
into
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
or
flds
adc
mov
adc
mov
bound
es
pop
mov
shr
sbb
jo
aas
loopne
push
mov
jl
pusha
test
call
inc
test
add
sub
sarl
mov
and
shl
ljmp
mov
in
jl
out
lret
test
aas
loopne
push
mov
inc
cs
cwtl
xchg
mov
adc
stos
jb
cmp
mov
pop
popa
test
in
clc
dec
sbb
and
cmp
pop
pop
mov
decl
stos
adc
ss
pop
daa
mov
lcall
or
or
add
shr
push
test
xchg
xor
or
add
add
mov
test
ja
add
int
lock
dec
add
mov
stos
xor
fdiv
add
mov
xchg
in
ss
mov
lock
push
adc
lock
cs
into
mov
or
out
mov
xor
nopl
jo
jge
cmp
cltd
jg
xchg
call
mov
mov
cltd
adc
or
pusha
scas
in
cmpsl
ja
lods
pop
pusha
icebp
sub
adc
xor
lahf
mov
mov
out
imul
or
push
mov
sbb
ss
lret
test
pop
mov
push
dec
and
outsl
mov
sub
pop
shl
cmp
call
negb
movsb
cli
mov
mov
add
cmp
cwtl
je
ljmp
push
or
sarl
pop
mov
sahf
ret
xchg
movb
push
adc
xor
cmpsl
nop
add
dec
in
lods
es
cmc
pop
movsl
push
test
mov
sub
ret
lods
das
mov
movsb
stos
out
add
call
nop
xor
cmpsl
pop
mov
outsl
aam
pop
loopne
jbe
xchg
or
pop
inc
cs
cwtl
xchg
xchg
push
jmp
sbb
push
and
inc
fisttps
fstpt
sahf
les
inc
add
mov
popf
add
fstpt
lret
mov
jge
mul
sub
ror
lcall
scas
emms
lds
call
sbb
lds
outsl
dec
dec
add
aas
in
insb
mov
outsl
cltd
xchg
pop
fbstp
dec
adc
aam
push
cmp
fnstcw
xor
push
push
mov
imulb
dec
xor
add
xchg
into
xor
and
mov
xor
xchg
out
scas
fwait
cld
mov
or
testb
pop
insb
arpl
xorb
mov
mov
outsb
out
mov
xchg
repz
mov
je
cmc
cli
xchg
and
test
loop
cmpsb
loope
adc
dec
pop
ret
lock
nop
adc
insb
jge
mov
xor
popa
mov
mov
rcl
push
test
push
fsubr
jno
and
stc
lahf
sub
or
cmpsb
pop
inc
push
mov
sub
in
push
xor
adc
icebp
lret
push
out
cmp
dec
cmp
add
push
cmp
scas
out
cmp
shr
or
inc
cmpsb
and
call
int
inc
aas
cmpsb
jle
mov
xor
out
ljmp
idivb
dec
cmp
jg
outsl
fcomp
cmp
lock
loope
hlt
mov
sub
ss
lods
sub
mov
subl
fwait
inc
inc
rcl
adc
cmpsl
dec
ja
out
dec
popa
std
mov
das
stos
xor
xchg
insl
filds
pop
dec
aad
cmpsl
sahf
insb
orb
dec
pop
stos
popa
int3
pop
xor
mov
in
roll
loop
jmp
inc
lods
sbb
jge
add
fnstsw
int
mov
push
inc
icebp
add
lods
dec
ss
dec
xor
add
ljmp
fs
mov
movsb
pop
push
sbb
xor
nop
xchg
enter
jecxz
and
aaa
mov
mov
pop
xor
cmp
imul
inc
fnstcw
cmp
sti
std
xchg
xchg
xchg
dec
in
push
stc
ret
ds
inc
push
adcl
cmp
sbb
out
push
fisttpl
xchg
je
xchg
add
push
mov
jge
jne
out
test
dec
fistpll
xchg
or
lods
data16
pop
sti
shl
and
aas
push
push
inc
dec
cmp
pop
in
xor
dec
into
aas
fisttpll
cmp
sbb
xchg
wrmsr
push
adc
push
test
mov
inc
pop
xchg
fdiv
shr
and
inc
mov
inc
lcall
mov
fdivs
and
add
movsb
jle
insl
ja
cltd
outsl
pop
inc
cs
cwtl
xchg
adc
dec
ja
push
inc
loopne
sub
pop
push
dec
iret
in
mov
stos
push
pop
roll
shll
xor
and
nop
xor
or
add
nop
cmp
dec
cmp
mov
and
inc
pop
dec
jae
shll
sbb
xchg
adc
lods
or
sub
cs
leave
jne
add
add
pop
add
sbb
popa
inc
lcall
mov
and
out
or
push
data16
divb
iret
ss
into
sarl
add
jle
cld
pop
mov
xor
das
mov
jae
out
sbb
mov
push
push
imul
pop
in
push
and
es
adc
mov
mov
insl
ret
mov
addr16
scas
aam
dec
inc
jmp
lea
data16
push
imulb
test
test
xchg
cltd
pop
insb
jge
jne
repnz
rclb
adc
jmp
mov
mov
dec
fisubrs
inc
pop
daa
iret
jmp
test
inc
sbb
ficompl
adc
jbe
test
xchg
pop
stos
push
out
push
daa
subb
sbb
insl
sar
cmp
xchg
pop
test
lcall
int3
pusha
mov
movsl
filds
pop
push
inc
repnz
mov
out
pop
adc
jmp
stos
add
add
inc
push
mov
in
cli
dec
inc
in
aam
arpl
rcrb
sti
push
dec
leave
test
stos
sti
and
xchg
icebp
fcomps
rcll
fsub
repnz
scas
jge
stos
imul
pop
fsubl
mov
sbb
out
mov
mov
sarl
jns
iret
in
mov
mov
jl
aad
mov
cmp
popa
test
out
mov
fcompl
hlt
fld1
sahf
scas
lcall
loop
push
imul
es
lds
adc
jne
bound
fcmovnbe
add
out
scas
idivl
mov
sahf
in
pop
movsb
icebp
scas
jp
pop
popa
in
in
out
js
add
lods
dec
ss
dec
popa
pop
and
idiv
outsb
sbb
jno
das
sub
mov
sbb
cmpsl
lret
add
ja
jle
les
adc
pop
or
push
lock
push
mov
dec
cld
cs
mov
cmpsb
je
push
scas
popf
or
nop
arpl
ret
jecxz
call
or
cld
add
mov
fwait
vpmacssww
pop
jno
in
xor
lods
mov
push
cmp
xorl
cld
test
mov
jb
adc
push
in
xchg
sub
ror
xlat
jbe
shll
cmpsb
scas
in
cs
ljmp
ret
inc
loopne
in
jnp
mov
xchg
scas
pop
add
adc
jne
sbb
clc
add
jbe
inc
iret
mov
or
push
push
aad
mov
pop
sbb
add
jecxz
jl
cmp
fisubrl
add
movsl
gs
mov
mov
dec
add
mov
hlt
mov
jl
push
xchg
cld
or
clc
dec
clc
fstl
pop
mov
and
push
popa
dec
jo
cmpsl
outsl
pusha
addb
daa
mov
inc
test
jbe
mov
cld
lods
or
jne
loopne
or
cld
movsb
dec
jl
mov
lods
cmp
mov
sbb
push
cmp
cli
shrl
lret
pop
decb
nop
pop
xchg
repz
les
jle
mov
add
bound
mov
dec
lods
lods
xchg
shrl
gs
inc
pop
test
call
add
decb
mov
push
jmp
into
stc
xchg
ljmp
arpl
xchg
out
or
shlb
pop
push
jo
pop
and
int
cltd
sub
icebp
fcomip
repz
sbb
jb
leave
mov
pop
cmp
push
lock
cmpsl
sbbb
fs
adc
cltd
js
add
fcomps
movsl
stos
mov
ds
push
add
js
add
aad
daa
aad
loope
mov
or
lahf
xchg
push
cltd
xchg
insb
jns
ds
sub
mov
pop
movsl
inc
mov
add
cmpsl
sti
adc
mov
aam
stos
jae
sub
mov
or
jg
jb
mov
nop
push
aaa
or
pop
lods
sub
mov
subl
push
sbb
adc
bnd
rolb
test
pop
cli
mov
lods
in
faddp
inc
shll
sub
scas
dec
mov
push
inc
enter
xor
loopne
insb
imul
cs
cwtl
xchg
mov
and
push
scas
adc
les
test
xchg
cltd
pop
insb
jge
jne
repnz
rclb
adc
ret
jne
in
fdivs
sahf
mov
mov
jge
test
mov
orl
fwait
inc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
test
add
pop
es
cmpsl
ret
mov
jbe
cltd
test
and
notl
call
out
adc
mov
adc
enter
xor
loopne
dec
jae
aaa
call
pmullw
outsb
les
roll
push
mov
test
lods
int
je
mov
out
out
push
hlt
pop
dec
or
or
mul
push
adc
mov
adc
mov
adc
enter
xor
loopne
mov
out
nop
test
cs
in
jne
jo,pn
sub
or
jmp
das
push
enter
dec
sbb
jmp
outsb
cmp
in
inc
test
add
imul
dec
mov
cmp
ret
cmp
je
mov
sbb
push
add
enter
out
adc
mov
adc
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
inc
shll
cmpsl
or
jg
popa
pop
mov
cli
cmp
sub
test
inc
xorb
or
push
mov
jg
mov
adc
mov
adc
mov
adc
enter
xor
loopne
dec
dec
movsl
int3
hlt
rcrl
aad
adc
shr
insl
or
mov
sarb
clc
mov
and
divl
test
mov
adc
mov
adc
enter
xor
loopne
mov
add
push
pusha
push
xor
cmpsl
scas
xlat
xchg
fs
push
fists
adc
enter
xor
loopne
xchg
sahf
mov
loop
iret
std
movsb
enter
mov
adc
enter
xor
loopne
jg
xor
pop
iret
std
movsb
enter
mov
adc
icebp
add
lods
dec
ss
dec
xor
dec
lds
lock
sbb
stos
stos
dec
out
xorb
lods
jae
inc
adc
mov
sub
pop
ss
pop
pushf
xchg
outsl
sub
stos
cmp
adc
mov
mul
push
adc
mov
adc
mov
adc
xor
iret
in
leave
add
inc
lock
mov
pop
mov
xchg
loop
int3
scas
xchg
or
int
clc
arpl
mul
push
adc
mov
adc
push
or
es
jo
sbb
arpl
lods
popf
and
xlat
out
xchg
into
ja
adc
es
lock
xchg
mov
jg
stc
test
cmp
nop
mov
shrl
insl
daa
rcll
hlt
xor
inc
pop
jb
test
out
sbb
sub
push
jp
rorb
and
cld
imul
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
jle
fcmovb
roll
adc
sub
mov
rcrb
shr
push
sub
or
jns
push
add
mov
ret
xchg
popa
adc
xchg
sub
jne
jb
aas
mov
test
xor
fmull
xor
dec
std
cwtl
mov
in
addr16
cmp
mov
jno
push
inc
jmp
sub
fmuls
xchg
push
jecxz
adc
sbb
push
sbbb
xlat
add
fdivs
jecxz
stos
pop
ret
jns
loopne
out
xchg
cmp
mov
add
daa
aas
jecxz
cmp
inc
orb
cmp
cmp
push
xchg
dec
mov
addr16
cltd
sub
push
mov
shll
int3
cwtl
mov
bound
insl
scas
dec
gs
lret
notb
lcall
movl
sbb
cmpsl
add
push
xchg
test
dec
sub
in
fidivs
sbb
mov
dec
or
xchg
inc
cmp
push
mov
pop
pop
ret
lahf
adc
inc
pop
mov
pop
adc
adc
mov
and
movb
push
out
dec
pop
adc
jge
inc
fmull
std
cmp
xor
adc
dec
clc
dec
dec
dec
cmp
inc
lds
jb
aas
add
bound
subb
xchg
flds
in
imull
sbb
fdivrs
xor
fs
les
test
pop
mov
cmpsl
mov
dec
mov
shrl
xchg
and
clc
xchg
push
sub
jl
push
in
out
pushf
lods
sub
lret
lret
dec
pop
add
add
pop
mov
add
loop
cltd
jmp
cwtl
cmp
mov
jns
inc
out
push
cmp
pop
aam
push
sbb
out
xchg
movsb
jnp
stos
cmp
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
add
int3
call
mov
fndisi(8087
adc
add
mov
iret
in
pop
outsl
mov
sbb
push
lret
and
out
loope
nop
dec
cmpsl
mov
lds
and
jbe
push
subb
repnz
adc
mov
adc
xor
iret
in
cmpsb
arpl
mov
jmp
inc
pusha
aaa
out
add
and
xor
imul
mov
push
sbb
or
add
adc
mov
adc
jl
jl
dec
xor
and
jge
mov
xlat
fs
add
hlt
cltd
xor
out
adc
mov
adc
enter
xor
loopne
mov
cmp
arpl
xor
fidivs
test
jno
mov
cld
mov
adc
mov
adc
inc
xor
jbe
test
mov
add
in
sbb
pop
or
adc
cmp
push
mov
out
adc
xchg
push
insb
pop
out
mov
jo
mov
and
std
jno
lea
or
repz
sarl
inc
inc
andl
mul
push
adc
mov
adc
jb
and
mul
push
adc
divl
pop
add
sub
pop
jg
rorl
jle
test
and
pop
iret
std
movsb
enter
mov
adc
cmp
inc
inc
push
movsl
jae
loop
popa
inc
fistpll
and
jae
dec
pop
xchg
imul
sahf
mov
enter
push
cmp
fcmovu
push
adc
outsl
jecxz
fwait
mov
xor
push
scas
daa
mov
adc
mov
adc
enter
xor
loopne
movsb
sarl
pop
push
pop
je
xor
cmpsb
or
mov
jne
outsb
int
fnstcw
push
loopne
add
orb
cwtl
loop
jbe
cmp
inc
mov
mov
fcoml
dec
push
sahf
mov
mov
push
adcb
push
pop
repnz
sbb
cmp
mov
cmpsb
mov
shll
lock
jb
and
add
mov
into
enter
ret
lock
arpl
lods
popf
and
xlat
out
popf
adc
and
cmp
sbb
cs
push
dec
sub
and
sub
jo
pusha
add
mov
mov
les
insl
jne
sahf
push
dec
or
add
sbb
jne
or
mov
cmp
mov
test
daa
ja
push
mov
je
or
in
pop
push
je
setl
xor
jns
fimull
sub
outsb
dec
pop
movsb
aas
in
loope
lods
cmpb
pop
sbb
ficoml
and
pop
or
dec
scas
stos
cmp
data16
out
dec
and
or
push
pop
lret
cltd
lahf
mov
movsl
mov
in
test
mov
push
cmp
mov
sub
cltd
nopl
push
fisubrs
cmpsl
js
leave
inc
adc
add
jp
aas
or
dec
fadds
loop
aad
gs
ret
adc
mov
pop
or
mov
jge
daa
inc
sarl
cs
pop
mov
fisubs
pop
push
cmp
sub
add
cmp
sahf
cmp
dec
mov
aas
pop
add
fstpt
movsl
std
mov
fsts
aas
pop
inc
cmc
es
sbb
push
lods
in
faddp
inc
shll
sub
imul
jecxz
mov
cmp
lods
popf
and
xlat
out
popf
adc
and
cmp
jmp
dec
js
sarl
iret
dec
cmp
xchg
mov
shlb
or
adc
shl
mov
adc
mov
adc
jl
gs
out
sbb
jae
xchg
dec
jne
rcl
cmp
aas
lods
popf
and
xlat
out
adc
ja
enter
sbb
arpl
and
push
cmp
sbb
jo
pushf
insl
arpl
fmuls
xor
test
dec
dec
lret
jae
clc
insb
and
fnstenv
icebp
jb
cs
jo
push
sub
adc
fisttpl
imul
fdivrs
mov
arpl
inc
shll
mov
push
ret
sti
xor
insb
scas
imul
xchg
or
push
call
fcomps
sbb
imul
lods
xchg
fldcw
lahf
scas
push
lods
in
cmp
sub
shrl
dec
fmuls
xor
pop
xchg
pop
fucomi
sahf
and
push
push
cmp
mov
out
pop
fidivs
lods
enter
jmp
jno
push
sahf
mov
mov
push
adcb
push
pop
repnz
sbb
cmp
sub
push
scas
daa
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
out
shlb
es
cmpsl
ret
pop
xchg
mov
mov
imul
push
notl
call
out
adc
mov
adc
cwtl
mov
adc
mov
lods
popf
and
xlat
out
pushf
outsb
dec
mov
inc
pop
pop
sub
add
pop
fsts
mov
cmp
aas
jnp
sub
shl
mov
push
testl
xchg
cmpsl
test
cmp
xor
jbe
inc
mov
std
push
and
mov
and
pop
divl
sbb
push
addl
imul
pop
pop
lret
incl
jbe
xlat
sbb
dec
cmp
out
xchg
mov
xchg
popa
test
out
pop
test
in
les
pop
ja
jae
dec
sbb
inc
and
push
xor
cld
inc
jmp
dec
fidivs
or
sub
repnz
jns
add
imul
arpl
cmp
enter
push
sub
lods
daa
mov
leave
mov
stc
ror
sbb
cs
inc
cltd
mov
enter
imul
mov
mov
out
and
loope
jo
repnz
pop
xor
imul
nop
xchg
enter
jecxz
lock
sub
push
testl
mov
sub
mov
sbb
ret
adc
in
xor
push
cmp
lods
jmp
outsl
fisttpll
or
cmp
cmp
pop
mov
pop
fdivrs
add
inc
mov
sub
test
dec
sbb
dec
aam
dec
sbb
jae
loop
hlt
subl
fmull
inc
aam
lcall
in
pop
dec
mov
popf
mov
and
int3
jno
data16
stc
leave
clc
inc
pop
add
scas
jle
int
cmp
adc
xchg
jns
in
or
repnz
and
xchg
pop
xchg
cmp
clc
js
mov
rolb
into
and
pushf
add
lods
or
xor
sub
decl
jno
or
xchg
leave
into
bound
or
dec
sub
dec
mov
lret
adc
mov
addb
aaa
inc
or
and
dec
out
mov
cmp
mov
jbe
mov
mov
popa
dec
add
add
xchg
mov
icebp
mov
adc
pusha
inc
scas
ljmp
stos
pop
out
loop
pop
cmp
shrb
xchg
outsl
add
xchg
fstpt
repnz
repnz
push
mov
adcb
mov
mov
mov
xlat
repz
mov
xor
rep
push
scas
xchg
xchg
sti
ret
dec
in
popa
push
cltd
insb
mov
mov
push
and
or
int
cs
out
pop
pushf
in
push
lret
out
scas
jecxz
pop
test
cmp
push
lock
or
mov
das
adc
std
lods
sbb
or
xchg
int3
mov
ss
jno
cli
insb
mov
sti
cmp
or
or
xchg
cmpsl
sub
jns
jecxz
inc
lods
clc
sbb
data16
push
daa
scas
cltd
outsl
adc
pop
push
jnp
add
dec
hlt
jmp
mov
insb
out
adc
shll
sbb
test
cmp
test
dec
sub
out
in
aas
popa
test
out
add
in
hlt
scas
and
ror
idiv
aam
dec
mov
adc
mov
insb
add
jge
xor
and
sub
insb
pop
roll
fs
fiadds
xchg
xchg
push
fdivr
add
fidivl
cmp
or
fs
xlat
push
inc
sub
ficoml
dec
sub
dec
add
jp
call
lcall
dec
imul
mov
fildl
enter
mov
inc
out
add
rorl
xor
loop
adc
lds
aas
xchg
and
hlt
lret
lret
mov
hlt
fs
cmpsl
decb
ds
push
cmp
add
not
lret
nop
adcl
pop
lds
mov
xchg
dec
jo
fmull
inc
cmp
rcr
or
pop
outsl
lcall
sub
sub
mov
subl
fbstp
jle
mov
add
dec
sub
jle
pusha
repnz
sub
sub
and
scas
lods
sbb
push
cli
dec
jb
sub
imul
lahf
test
inc
xchg
adc
jecxz
push
out
jmp
sbbl
stos
and
pop
or
call
imul
xlat
je
dec
lods
sub
mov
subl
pop
pop
xchg
cwtl
push
adc
pop
pop
or
add
nop
and
in
rcll
xor
cmp
mov
scas
test
lods
movsb
push
int3
ret
fmull
mov
push
mov
inc
out
or
les
int3
pop
int
dec
out
int
loopne
jp
subb
ret
pop
ret
xlat
in
or
or
mov
add
xchg
out
sbb
dec
or
call
cmp
add
inc
add
stos
pop
sub
mov
fbld
aas
pop
pop
movsb
pop
icebp
mov
scas
push
lods
loope
adc
loope
mov
mov
and
sub
pop
mov
xchg
sub
out
and
xchg
cmp
jae
test
mov
std
dec
xor
mov
sbb
sub
xchg
cmp
sub
push
mov
icebp
ret
bound
insl
fucomi
mov
jg,pt
pop
mov
jns
fiaddl
lods
push
sbbl
adc
cld
stos
inc
pop
or
jl
loopne
push
movsl
adc
in
inc
enter
xor
loopne
push
xor
jne
iret
mov
xlat
repz
dec
leave
push
pop
push
pop
mov
sub
lcall
inc
cmpsl
adc
mov
lods
fwait
lods
lret
test
scas
jo
cmp
ljmp
packsswb
lods
popf
and
xlat
out
jg
sub
ljmp
in
clc
pop
fistpl
xchg
dec
cltd
and
imul
movsb
fildl
out
repnz
dec
push
push
or
fisttpll
mov
aas
mov
popf
dec
sti
shrb
fs
xor
sbb
cmp
mov
xchg
or
nop
popa
inc
rclb
repz
xor
cmp
inc
mov
pusha
dec
xchg
inc
pop
or
mov
add
dec
jg
pop
ret
pop
xchg
sub
mov
push
xchg
std
jecxz
add
jne
push
sbb
push
inc
jle
clc
loope
clc
mov
movsl
jns
or
push
popf
lcall
pop
pop
addr16
adc
push
mov
cmpsl
cmpsl
cmp
imul
int
imul
loop
test
xlat
shl
pop
imul
les
andl
pop
clc
mov
jmp
out
cmp
mov
popf
dec
sti
shrb
fs
xor
sbb
inc
andl
lahf
rcl
push
orb
popl
pop
mov
xchg
inc
jns
dec
and
bound
mov
cmp
cmp
int3
int
sbb
test
imul
mov
add
mov
int3
rcrb
dec
iret
inc
inc
js
hlt
std
sti
cmp
jge
repz
inc
push
inc
inc
fdivrp
xor
addb
movsb
testl
dec
imul
adc
add
cli
push
adc
aam
jecxz
pop
pushf
lods
fnstcw
repz
jae
or
fistpll
adc
popf
cwtl
out
jecxz
push
add
sub
dec
daa
fisttpll
ds
out
addr16
hlt
shlb
int3
jecxz
pop
cmp
inc
jne
std
js
fs
mov
xchg
sub
test
inc
cld
xor
inc
pusha
and
push
jbe
mov
dec
shr
adc
sub
and
imul
sbb
mov
insb
push
cwtl
and
sub
mov
ret
xchg
mov
jns
mov
les
cmc
and
push
or
out
xor
pop
mov
stos
int
fdivp
xchg
and
mov
cwtl
xor
adc
cmc
sub
mov
nop
mov
std
pop
and
cmpsl
inc
adc
aam
scas
sub
call
das
mov
loopne
dec
sbb
xor
test
mov
popf
int
imul
or
adc
xchg
inc
movb
xor
es
xor
scas
inc
sub
sub
ljmp
movsb
test
insb
jecxz
rcll
push
cmp
stos
mov
and
mov
sbb
and
das
es
pop
xor
repz
jb
adc
fucomip
inc
or
ds
out
cmp
mov
mov
pop
cmp
inc
jne
std
js
fs
mov
xchg
sub
or
mov
cmp
and
das
mov
lahf
dec
jo
fmull
inc
adc
cld
inc
and
adc
jmp
fldcw
repz
add
add
xchg
aaa
inc
mov
jl
pop
xchg
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
dec
jae
aaa
call
or
sbbb
ljmp
pop
xorb
fisubs
or
lcall
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
mov
adc
andb
dec
vmread
adc
adc
bound
sbb
or
testl
fcomip
testl
xchg
add
test
jmp
scas
movsl
andb
xlat
outsb
jle
dec
xor
stos
sbb
xor
xor
push
scas
daa
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
ljmp
in
mov
les
ds
arpl
and
xor
fwait
or
addl
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
push
sub
xor
ret
rorb
dec
mov
ljmp
adc
mov
adc
mov
adc
js
rcrb
mov
es
icebp
inc
push
iret
add
pop
mov
and
sub
int3
fildl
inc
ficoml
hlt
mov
shr
xchg
lds
adc
mov
adc
andb
dec
vmread
adc
adc
addr16
cmp
xchg
sbb
or
sbb
sahf
popa
add
cmpsl
fisubl
jbe
inc
add
mov
adc
mov
adc
mov
adc
enter
xor
loopne
push
dec
aad
xchg
dec
jmp
fisttpll
sub
adc
enter
xor
loopne
fmull
flds
shlb
xchg
shlb
xchg
stc
lret
cmp
mov
inc
outsl
add
push
fstps
mov
mov
add
dec
loopne
stc
dec
int3
mov
inc
dec
jns
mov
adc
enter
xor
loopne
pop
fsts
test
push
pop
in
mov
loopne
and
xor
pop
fucom
jno
addl
mov
adc
inc
mov
adc
dec
inc
xor
cmp
push
dec
imul
cmpsl
repz
push
test
ffreep
mov
and
mov
outsl
xchg
in
pop
cmp
sub
add
push
mov
lea
adc
ror
aam
inc
jecxz
ss
aad
cmpsl
or
shrb
fsub
pop
outsl
pop
pop
popa
adc
or
int3
cmpsl
insl
jecxz
frstor
or
sbb
cmp
cmp
adc
jb
pop
jbe
ret
and
addr16
cmpl
jb
ret
pop
mov
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
js
rcrb
mov
add
fsubs
outsl
inc
jb
enter
int
ja
popa
popf
ffreep
out
dec
adc
jb
pop
sbb
es
push
xchg
add
sahf
and
inc
inc
xchg
lods
mov
mov
xor
push
repnz
adc
mov
adc
mov
adc
mov
adc
andb
dec
vmread
adc
lcall
cmp
int3
jmp
inc
inc
push
mov
mov
sub
add
dec
loope
sub
mov
jo
push
inc
outsl
lea
fisttps
clc
in
cltd
ljmp
xchg
addr16
mov
xchg
xchg
jnp
mov
mov
add
and
add
add
adc
mov
adc
mov
adc
mov
adc
jl
jl
dec
xor
and
mov
mov
adc
mov
daa
clc
addl
mov
adc
mov
adc
repnz
inc
lcall
push
adc
pop
push
sbb
lds
jmp
lock
mov
fisttpll
sub
adc
mov
adc
enter
xor
loopne
cmpl
xor
aaa
inc
mov
jl
pop
xchg
mov
adc
mov
adc
enter
xor
loopne
subb
mov
test
cmpsb
mov
lcall
pop
xchg
mov
adc
mov
adc
inc
mov
and
and
or
loope
dec
inc
dec
cmp
shlb
in
push
pop
or
repnz
jecxz
jne
outsb
jl
push
jecxz
jns
and
dec
jb
jge
fimull
fwait
test
rcll
out
cmpb
filds
fstl
dec
inc
jecxz
ss
mov
pop
mov
xchg
js
dec
aad
push
cwtl
or
in
iret
test
pop
addr16
xchg
push
cltd
add
shll
cmp
inc
sbb
inc
flds
sbb
push
dec
jl
mov
mov
push
mov
int
clc
arpl
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
pop
push
sbb
das
movsl
rolb
add
adc
dec
xor
and
call
push
mov
fnstcw
std
clc
addl
mov
adc
mov
adc
enter
xor
loopne
cmc
jg
sub
pop
sub
sbb
jp
mov
rcrb
xor
loopne
mov
cmp
clc
mov
mov
jnp
outsb
jno
mov
cld
mov
adc
mov
adc
enter
xor
loopne
test
mov
sbb
test
xchg
popf
mov
adc
enter
xor
loopne
inc
mov
pusha
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
jge
out
mov
pop
outsl
outsb
iret
pop
fistps
daa
or
stos
mov
out
mov
xor
aam
cmp
or
cli
mov
adc
mov
adc
enter
xor
loopne
fistl
sti
std
jbe
jg
mov
fndisi(8087
adc
add
inc
inc
push
movsl
jae
fidivl
xor
cmp
and
jae
dec
pop
xchg
imul
sahf
mov
enter
push
cmp
fcmovu
push
adc
outsl
jecxz
fwait
mov
xor
push
scas
daa
mov
adc
mov
adc
jb
and
mul
push
adc
cmp
add
mov
lods
popf
and
xlat
out
xchg
loope
clc
push
lret
ljmp
aas
xchg
fwait
xor
stos
test
jne
and
fwait
adc
imul
mov
subl
arpl
adc
pop
xchg
sub
lock
lret
stc
mov
dec
cmp
cmp
clc
js
roll
pop
lret
adcb
push
pop
xchg
jmp
out
dec
jbe
lds
pop
jl
je
insb
or
pop
shrb
adc
cmp
inc
pop
jmp
cli
test
cmp
mov
inc
mov
popf
push
mov
cmp
mov
push
mov
pop
into
sub
fmull
adc
popa
xchg
mov
div
add
fidivs
xor
and
ret
xchg
in
call
mov
int
mov
jl
push
daa
ret
int3
ljmp
stos
in
jecxz
add
and
lret
xchg
sub
pop
mov
xchg
inc
dec
enter
dec
xor
inc
out
xchg
cld
stc
and
cs
lret
mov
and
sbb
int3
fstps
ficoml
lods
push
sub
test
sbbl
in
adcb
xor
sarl
cmp
addr16
pusha
dec
sbb
icebp
push
out
outsl
clc
lea
ljmp
std
int3
inc
je
aad
shlb
aaa
xchg
lods
cmc
enter
and
push
popf
fldenv
jge
mov
inc
imul
js
sbb
mov
pop
aam
ret
mov
inc
sub
pop
lcall
push
pushf
cmp
inc
xorb
cltd
rcrb
and
add
out
addr16
sbb
pop
inc
loopne
js
adc
test
inc
inc
inc
into
cltd
aam
mov
xor
arpl
fwait
in
adc
adc
push
daa
fwait
push
or
push
jb
push
cmp
mov
xlat
jmp
mov
xchg
mov
pop
pop
mov
pop
or
aas
add
pop
popf
fdivp
sub
es
sbb
mov
and
movsl
or
adc
mov
movsb
and
xchg
cmp
add
jno
ljmp
lods
xor
or
jbe
jbe
cld
lcall
mov
adc
inc
sub
adc
pop
sub
lcall
sub
loopne
mov
sbb
into
add
dec
fisubrl
arpl
out
push
arpl
fs
andb
pop
push
add
jle
sbb
cmp
or
mov
xor
mov
movsb
mov
sarb
or
out
xor
xchg
mov
dec
inc
orl
fadd
fnsave
or
sbb
jns
pushl
jmp
mov
sub
or
xchg
daa
push
inc
sarb
int
js
jbe
add
mov
cmpsb
cmp
pop
jge
push
mov
bswap
out
inc
std
mov
push
push
sbb
test
jp
scas
pop
mov
dec
adc
arpl
sbb
mov
les
rolb
iret
js
push
bound
lahf
popa
push
mov
pop
and
sub
es
data16
in
jb
jns
cmp
jnp
xchg
xor
cwtl
or
bound
sti
nop
shl
jb
stos
push
dec
mov
cmpsb
inc
add
mov
nop
mov
mov
mov
in
pop
jns
fcoms
ret
loop
imul
imul
inc
mov
pushf
inc
push
cwtl
les
mov
mov
dec
xchg
ror
jne
jmp
lcall
pusha
and
dec
dec
lcall
fwait
xchg
xlat
data16
repz
jo
mov
xchg
lock
std
sbb
rcrl
fidivrs
jnp
mov
test
pop
adc
inc
out
dec
mov
adc
cld
movsl
stc
cli
testl
sub
dec
jge
cltd
mov
xchg
sub
pusha
in
jp
pop
mov
aas
pop
out
or
jns
pop
ficomps
into
inc
imul
dec
fsubrp
imul
cmp
pop
adc
inc
insb
daa
jno
loopne
jg
lods
lea
es
sbb
cltd
leave
lret
cmpsb
xor
cmp
lods
and
roll
dec
lea
sti
sti
xor
daa
or
xchg
mov
jne
ret
pushf
inc
push
cwtl
les
mov
les
pop
nop
fsubrs
xor
jb
inc
loop
pop
pop
scas
xchg
dec
sahf
pop
xlat
lahf
sub
sti
xor
mov
inc
jnp
jp
push
or
jmp
fbld
je
and
dec
push
mov
cmp
cmp
cmp
ret
mov
cmp
inc
xorb
test
and
rorl
push
clc
adc
pop
ja
clc
loope
dec
rcrl
std
mov
dec
pop
push
jg
movsl
mov
fisubl
push
out
sbb
xor
mov
jns
or
arpl
cs
xchg
pushf
cmp
std
jo
cmc
rclb
pushf
cmpsl
aam
loope
dec
fwait
shrl
cmp
mov
ret
add
ljmp
aaa
xor
shl
out
gs
js
iret
test
cmp
mov
insb
mov
test
daa
fcmovu
insb
cmc
nop
push
xchg
lods
imul
adc
fs
sub
fs
push
xchg
mov
leave
adc
lahf
outsb
cmp
inc
mov
push
test
push
add
mov
pop
scas
ret
scas
mov
pop
inc
push
insl
enter
in
jle
rorl
push
mov
adc
aas
xor
inc
inc
xor
movsb
mov
divl
push
sbb
lret
dec
sahf
cmpsb
push
scas
sub
inc
and
andl
scas
cltd
test
jne
int
sbbb
scas
jp
je
sbb
lret
fnstsw
clc
repnz
add
roll
jl
arpl
ret
movsl
repz
shlb
orl
jmp
mov
fcoml
xor
mov
loopne
xchg
xchg
and
stc
dec
and
popf
cmp
out
lods
sub
push
insl
faddl
sbb
sbb
addb
int
push
popa
arpl
push
test
lock
or
lds
filds
mov
inc
dec
rcrb
xchg
or
inc
jp
rcl
rcrb
push
movsl
cmp
pop
scas
pop
jns
shll
mov
sub
out
cmp
aam
int3
ja
lock
scas
cltd
test
jne
push
mov
mov
cli
xchg
daa
pop
jns
ds
sub
xchg
push
fists
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
mov
mov
enter
pop
pop
iret
std
movsb
enter
enter
xor
loopne
push
sbb
cwtl
inc
pop
cli
and
add
push
loope
out
mov
adc
int
insb
ss
mov
lods
popf
and
xlat
out
xchg
loope
clc
push
lret
mov
pop
sbb
cs
and
mov
repz
subl
arpl
adc
xor
mov
sbb
pushf
lock
lret
ficomps
call
pop
xchg
cmp
clc
js
and
lock
lret
adcb
push
pop
xchg
jmp
out
dec
jbe
or
mov
cltd
ret
je
insb
or
pop
shrb
adc
xlat
pop
push
jb
outsb
lea
je
in
and
push
rolb
stos
rorl
push
arpl
cmp
adc
cmp
leave
inc
jg
jnp
and
es
xor
xchg
js
push
push
push
mov
stos
and
into
jne
test
dec
pop
pushf
les
mov
int3
mov
cmp
push
repz
in
cmp
lret
adc
cmp
mov
pop
mov
incb
adc
repnz
inc
data16
mov
loopne
mov
or
pop
aas
push
mov
movsl
sti
jmp
inc
outsb
scas
shll
push
lcall
add
mov
cwtl
and
mov
inc
call
sbb
jnp
adc
sarl
ja
xchg
ljmp
pop
pop
adc
fadd
out
gs
cmp
andl
pop
inc
mov
clc
add
push
jo
cld
popf
push
xor
sbbl
out
adc
pop
dec
dec
xor
fcoms
mov
pop
adc
mov
push
test
jmp
adc
and
jbe
mov
xchg
jns
xor
or
ret
pusha
or
xor
pavgw
ret
aam
xchg
add
repz
fcmovnu
test
xor
pop
adc
xchg
imul
mov
mov
mov
xor
cmp
cltd
stos
mov
addr16
xor
sub
jge
in
jmp
sbb
ficoms
fidivl
xchg
xchg
add
repz
fistpl
outsb
shll
pop
scas
int3
push
hlt
mov
movsl
mov
cmp
xor
inc
cmc
icebp
mov
xchg
enter
inc
fisttpll
and
xlat
test
fsubrp
call
loope
daa
gs
and
cltd
cmpl
ja
sub
mov
and
inc
jge
je
cltd
pop
cmp
sub
or
pop
dec
into
movsl
movsb
dec
cvttps2pi
inc
cmp
push
push
xor
push
out
cld
mov
out
shll
stos
cs
cmpsl
js
leave
inc
subl
add
sti
dec
inc
adc
movsl
dec
test
out
je
cs
enter
sbbl
dec
scas
test
cmp
fdivs
jmp
fdivr
cld
aas
pusha
fwait
loopne
addr16
roll
dec
imul
push
mov
xor
inc
aaa
bound
clc
in
pop
sti
aam
add
dec
fs
jecxz
inc
inc
xor
cmc
jae
pop
sarl
push
ss
lret
jl
pop
mov
mov
push
jne
jns
lods
shlb
adc
mov
pop
inc
pop
in
mov
je
sub
movmskps
repz
je
addr16
lea
mov
add
xchg
push
sbb
insl
cmp
xchg
fistpl
pop
dec
stos
mov
in
sar
ror
pop
adc
test
xor
sbb
sub
movsl
add
mov
jo
and
mov
sub
sahf
mov
dec
jecxz
mov
shrl
pop
mov
mov
fistl
fsubs
ret
fld1
mov
add
test
repnz
inc
jp
shrl
cwtl
mov
notb
add
mov
add
out
pop
inc
xor
in
mov
mov
insb
gs
or
jae
sahf
pop
fwait
jne
fwait
xor
or
jge
inc
hlt
insl
jbe
out
les
mov
xor
mov
movsl
rcll
sbbl
pop
push
mov
jg
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
out
movsl
push
psraw
popa
packsswb
lods
popf
and
xlat
out
cmpsb
loopne
aas
add
and
mov
pusha
ds
and
jo
mov
add
cltd
push
pop
dec
clc
dec
xor
jle
mov
dec
sbb
push
adc
ljmp
cmp
loopne
cwtl
mov
adc
mov
adc
mov
adc
mov
adc
inc
test
pusha
ret
cmp
lods
popf
and
xlat
out
mov
pop
mov
inc
adc
mov
cmc
mov
jmp
sbb
mov
xlat
jne
push
cli
or
push
jo
repnz
les
enter
sub
out
sbb
push
jno
mov
mul
push
adc
mov
adc
mov
adc
mov
adc
out
loop
hlt
adc
pop
cmp
lods
popf
and
xlat
out
sub
loopne
stos
xchg
push
cmp
cmpsb
rorl
ss
inc
pop
test
xchg
icebp
adc
inc
mul
cmpsb
clc
int
cmp
orl
xor
cld
and
lods
subl
xor
adc
pop
xor
inc
lahf
dec
jo
fmull
inc
xchg
fidivs
cmp
roll
push
pusha
xchg
icebp
cld
push
dec
sub
jl
and
add
mov
sahf
daa
aad
test
mov
outsl
jnp
mov
leave
dec
fcmovne
fcmovb
mov
xchg
ret
repz
jb
fistps
test
movsl
outsb
jns
cmpsl
fldenv
xchg
scas
jle
roll
add
flds
lea
mov
in
add
and
pop
imul
daa
fstpl
mov
in
cmpsl
andl
and
mov
das
mov
jle
fadd
pusha
ljmp
lahf
dec
jo
fmull
inc
leave
movsl
arpl
and
adc
bound
rcl
sbb
lahf
pop
sbb
int
mov
push
stos
rcr
cli
mov
mov
xchg
aas
jae
xor
mov
mov
sbb
cmp
dec
rorb
popa
mull
cmp
call
jg
movsl
mov
push
addb
data16
fcoml
daa
lahf
je
mov
dec
mov
xchg
lods
ljmp
in
cbtw
or
sbb
push
ficompl
add
inc
sbb
in
push
sbb
inc
cld
push
mov
imul
sbb
pop
jae
mov
push
jecxz
and
pop
loope
push
cmp
mov
adc
sahf
ja
xchg
xor
dec
shll
mov
pop
aam
aad
dec
sahf
popa
lea
and
pop
loope
jnp
int3
cltd
addr16
fxch
cs
orb
xchg
or
jb
repnz
iret
roll
fdivrs
je
dec
xchg
jecxz
movsb
aam
pop
mov
pop
xchg
sbb
aad
sbb
insb
push
and
fsubl
pop
sbb
mov
lcall
pop
mov
rcl
in
jp
iret
roll
jmp
and
sbb
mov
in
ret
loopne
aad
push
pusha
mov
jb
inc
lea
repz
in
mov
dec
icebp
fldenv
add
je
sbb
jecxz
push
lret
fbstp
or
out
nop
stos
cmp
ds
outsb
leave
rcl
lock
mov
stc
lds
pop
sbb
fs
lret
xor
sarb
jecxz
pop
dec
je
adc
int
outsb
mov
out
jbe
sahf
adcb
fs
psubusb
push
cmp
mov
sub
mov
aas
mov
call
fisubl
mov
out
xchg
test
inc
fwait
add
nop
pop
inc
jb
repnz
lea
jmp
sahf
lret
inc
nop
popf
mov
and
popa
shlb
xchg
inc
insb
add
ss
test
cmp
pop
jb
lods
dec
sarb
cmp
pusha
push
out
shlb
jle
mov
andb
push
cli
ffreep
fmuls
pop
stos
aaa
shrl
push
pop
es
dec
push
adc
push
xor
and
jg
mov
popa
packsswb
lods
popf
and
xlat
out
adc
cmc
fdivrl
jl
and
shr
cmp
fs
xchg
je
push
dec
stos
push
cltd
push
mov
scas
mov
adc
mov
div
mov
inc
fs
add
add
xchg
add
mov
mov
mov
aad
push
sbbl
jb
call
xor
xor
and
mov
call
enter
jns
pop
or
mov
jle
ficomps
out
pop
jmp
fsin
add
adc
cmc
sub
fstpt
jno
jae
xchg
dec
push
and
push
cmpsb
ror
dec
mov
push
gs
hlt
xchg
adc
cmc
cmp
mov
add
add
mov
or
rol
pop
sub
clc
std
mov
cmp
xor
pop
rclb
xchg
xchg
pop
js
test
add
xchg
adc
inc
in
push
movsl
or
xor
notb
sub
das
jbe
sub
dec
adc
push
lret
lods
xor
pop
sub
push
insl
popf
jne
push
loope
mov
adc
xor
xchg
xchg
loope
lods
jo
sarl
sahf
stos
push
pop
std
dec
mov
scas
cmp
xchg
add
je
push
pop
test
test
xor
sub
roll
mov
adc
scas
fadds
dec
mov
sbb
dec
sub
sub
xchg
inc
pop
mov
out
ja
fcmovbe
outsb
vrcpps
cmpsl
enter
jecxz
dec
sub
inc
loop
in
cmpb
imul
lahf
inc
mov
dec
xchg
jmp
test
jge
jae
out
out
and
or
lds
mov
sbb
arpl
leave
mov
inc
addr16
inc
ljmp
or
cs
pop
adcl
cmpb
loop
stos
sbb
ficoms
addr16
mov
xchg
inc
divl
fisubs
jne
mov
sub
add
inc
xchg
pop
ljmp
imul
dec
test
add
icebp
sbb
cwtl
mov
das
je
xorl
psadbw
mov
pop
sti
jne
ret
push
lahf
xchg
inc
sub
adc
out
fisubs
xor
mov
mov
push
pusha
inc
adc
out
add
inc
xchg
mov
fcmovnb
cmp
ljmp
js
cmp
pop
jecxz
inc
sbb
stos
loopne
pmulhw
pop
jbe
stc
stc
into
nop
ss
mov
inc
popa
ret
adc
test
es
jmp
pop
fisubs
addr16
outsb
cmp
inc
adc
out
add
inc
xchg
cmpsl
jae
int
xor
sbb
add
or
ds
inc
sub
mov
lods
pushf
push
xor
cmpsb
add
jno
xlat
movsl
mov
pop
sbb
xor
dec
jge
sbb
pop
push
xor
test
lcall
xor
mov
jge
shlb
frstor
sbb
clc
jg
inc
mov
lock
cltd
pop
xchg
mov
aam
push
mov
or
mov
jle
fs
push
sbb
jae
ss
test
pop
cmpsb
cmpsl
dec
jp
add
jne
fucomi
sub
xor
outsl
inc
fnstsw
ret
inc
in
lret
ds
xor
or
add
cli
shl
sub
mov
xor
pop
pop
xor
and
mov
mov
jle
sub
cmp
int
stos
popa
test
outsl
and
call
sarl
iret
lds
mov
scas
loop
pcmpeqw
and
rcrl
ljmp
xchg
cmc
mov
xchg
cmp
popf
pusha
sbb
push
insb
push
push
xchg
xchg
ficompl
movsb
mov
inc
push
adc
js
lds
xchg
test
adc
mov
pop
or
jnp
jo
inc
pop
jmp
cltd
adc
pop
xor
sahf
push
andl
in
ffreep
iret
xor
mov
loop
sahf
in
roll
loop
scas
add
sti
pop
push
ret
shl
jns
repnz
test
inc
cmpsb
lods
jmp
ds
push
or
inc
jo
and
fimull
sub
push
stos
cmp
xchg
xorl
icebp
jmp
xor
aaa
add
or
jp
adc
lret
femms
cmp
mov
sub
popf
xor
mov
icebp
int
inc
stc
rcl
inc
popa
pop
mov
dec
stos
dec
es
add
xor
adc
dec
cli
xchg
es
rcrl
xchg
lods
push
cmp
cmp
sbb
mov
aad
xor
xchg
les
xor
inc
insl
or
les
or
mov
leave
cmp
insb
mov
xchg
mov
repz
stc
movsb
xchg
and
jbe
adcl
je
sti
repz
cli
dec
push
addl
jne
cmp
mov
sub
or
hlt
daa
adc
and
mov
pop
mov
xor
das
mov
mov
scas
cli
clc
dec
jp
xchg
test
test
push
inc
fdivrl
cmp
xor
lods
and
xlat
xor
add
pop
push
jp
jp
pop
adc
cld
xchg
cmp
fcmovnu
insl
jmp
ret
andb
mov
lahf
inc
test
pop
rcr
arpl
jmp
mov
fs
inc
scas
faddl
loope
std
pop
nop
movsb
pop
out
cmp
or
lahf
test
lea
lods
ret
mov
repnz
mov
into
push
fistl
pushf
mov
outsl
jne
mov
in
lret
sbb
loop
mov
test
fidivs
lret
push
xorl
test
gs
adc
test
jmp
or
out
mov
in
pop
data16
loop
adc
rclb
push
jge
jbe
ja
pop
pusha
dec
jg
cmp
fildll
scas
fstps
lds
pop
xchg
in
xor
cld
rclb
test
jmp
and
xchg
jge
sub
scas
icebp
mov
call
sbb
nop
pop
dec
mov
push
mov
pop
leave
jecxz
mov
push
int
int
and
and
in
xchg
lret
mov
cmc
mov
insl
inc
mov
enter
ret
int
push
nop
or
sbb
inc
adc
jecxz
or
xlat
fdiv
mov
lods
mov
cmp
jno
mov
js
outsl
mov
pop
inc
insl
loop
mov
test
gs
shl
pop
fisubl
test
inc
lods
test
ss
cs
push
cmp
int3
jecxz
cmp
bnd
loope
push
xchg
cli
or
out
mov
bound
das
push
pusha
xchg
xchg
ja
ret
in
xchg
lret
loopne
jns
popa
push
repnz
inc
fwait
loope
daa
inc
stos
out
ss
fbld
jo
aam
mov
mov
test
adc
psllw
cmp
mov
inc
cmc
sub
xor
fs
cld
xchg
cli
push
jg
push
xlat
inc
scas
fstps
lds
fucomip
bound
sbb
mov
mov
xor
cmpsl
or
out
mov
pop
daa
or
cmp
imul
sub
pop
adc
pop
mov
or
adc
and
mov
ret
jmp
push
add
bound
mov
pop
sbb
popa
mov
lods
cmc
jb
jb
cli
mov
push
imul
push
pop
pusha
mov
jmp
mov
cld
xor
mov
push
mov
mov
mov
mov
gs
aas
dec
mov
sbb
sub
sbb
pop
fldl
add
sti
fcmovb
jge
cmovg
and
lcall
call
fldcw
fldl
jg
xlat
sub
scas
sub
adc
mov
mov
fcmovnbe
push
dec
add
mov
sbb
or
adc
inc
rorb
cmp
adc
jmp
and
xchg
pop
mov
pop
paddusw
adc
adc
xor
bound
cmpsb
adc
out
sub
push
cmpsl
movsb
push
cmpsb
push
arpl
pop
mov
hlt
outsb
mov
stos
mov
and
imul
sbb
xchg
push
push
adc
cmp
adcb
cmp
cmp
test
inc
mov
inc
stos
sub
cmp
fsts
fildl
lods
inc
xor
imul
adc
scas
sub
sub
mov
cmp
pop
mov
lds
mov
push
push
sbb
xor
push
cmp
push
xchg
out
repz
mov
fucomip
dec
or
cld
out
jne
mov
sbbb
jecxz
stos
mov
fmuls
test
jbe
insb
add
pop
push
pop
pushf
push
lock
andl
nop
xchg
enter
jecxz
daa
outsb
mov
sbb
dec
fisubrs
cwtl
pop
or
sub
andb
jmp
shl
or
mov
cmp
loop
dec
stos
sbb
mov
mov
jne
dec
adc
push
jo
add
push
test
pop
fwait
lods
and
add
push
pop
cmp
js
in
or
aas
pop
into
fs
es
imull
pop
jns
int3
jne
mov
mov
in
jle
imul
adc
jo
sub
or
mov
out
repz
shlb
jnp
cli
sahf
nop
xor
mov
fdiv
sbb
js
sub
pop
pop
imull
mov
call
jo
add
push
inc
ret
inc
mov
es
or
dec
fldenv
dec
adc
cmpsb
or
dec
push
int3
subb
fsubrl
cmp
jno
lea
xlat
test
loop
cwtl
push
lods
scas
cwtl
nop
push
xchg
int3
adc
call
sub
cmp
push
stc
repz
mov
leave
rorl
je
or
je
push
jb
and
test
mov
imul
adc
outsb
movsb
sub
mov
push
addl
adc
cmp
and
mov
bound
aaa
mov
loope
hlt
adc
lret
sub
xor
jle
sbb
scas
lahf
jne
mov
cld
in
mov
dec
sbb
adc
jp
lcall
push
ret
rclb
xlat
and
cmpsl
xchg
in
dec
das
xchg
add
aam
fsubrl
sbb
icebp
mov
sub
mov
adc
ss
push
jmp
aam
or
adc
mov
lods
xor
mov
mov
sub
imul
and
lcall
ficomps
mov
shl
push
roll
adc
cmpsl
cmp
jns
jmp
inc
add
and
jl
ja
movsb
sarl
mov
cmp
cli
ljmp
adc
mov
enter
les
int
add
cmp
gs
fwait
outsb
cmpsl
adc
rclb
lods
das
push
fldcw
adc
fwait
jnp
and
int
mov
jecxz
cmpsb
outsb
xchg
sti
adc
lret
les
cmpsl
cmp
cmc
or
mov
aaa
jns
lea
shll
adc
les
mov
ljmp
adcl
addr16
xlat
lods
mov
lret
insb
fcoms
inc
ficompl
or
dec
loope
pop
gs
mov
adc
inc
xor
mov
les
inc
or
fnstsw
dec
dec
inc
andl
call
xchg
mov
cli
fstpl
mov
pop
rcll
mov
pop
fsubr
in
pushf
sbb
stc
cmp
inc
push
stc
js
mov
shl
sub
lret
and
mov
push
popa
data16
divps
js
dec
lret
jno
xchg
mov
scas
in
mov
push
addr16
sbb
stos
mov
pop
cld
xor
xchg
inc
sub
jp
mov
dec
or
jns
adc
xchg
pop
data16
pop
push
cmp
out
xor
mov
cmp
test
add
jae
adc
popa
pusha
out
jo
push
pop
call
test
call
lock
push
push
sarl
outsb
mov
lods
and
int
jg
addr16
mov
xchg
lods
sbb
out
and
enter
vpsrlw
push
int3
sbb
mov
jb
ja
mov
pusha
lahf
lcall
pop
xor
aas
stos
cmpsl
dec
icebp
hlt
xchg
cmp
inc
inc
popl
dec
in
xchg
leave
jecxz
ds
das
xchg
out
shrl
fwait
xor
push
fmulp
rcrl
pop
mov
lret
mov
mov
mov
jne
pop
mov
mov
dec
mov
pop
sbb
adc
jbe
aas
popf
add
mov
xchg
sub
sbb
inc
and
idivb
push
sbb
xlat
or
fnstsw
add
gs
fsubrl
insl
fbld
push
and
jle
ja
inc
xor
add
jg
dec
lahf
mov
sub
lds
cmp
test
lcall
cltd
jp
lcall
push
ret
rclb
xlat
and
cmpsl
xchg
in
dec
das
xchg
add
aam
fsubrl
sbb
icebp
mov
sub
mov
adc
ss
push
jmp
aam
or
adc
mov
lods
xor
mov
mov
shll
test
cmp
mov
push
jae
mov
xchg
jb
pop
xorl
frstor
mov
sub
jno
fmull
adcb
sbb
popa
in
mov
jns
inc
into
imul
push
ljmp
xchg
mov
addb
xor
jmp
xor
xlat
or
rcll
cltd
aad
pop
push
or
cld
push
sti
mov
jmp
cmc
xor
movsl
cmp
mov
dec
ljmp
bound
popa
xor
inc
mov
out
fsub
adc
and
push
popa
dec
pop
push
xlat
jmp
mov
xchg
adc
lock
int
and
xor
sti
into
jno
xchg
add
sbb
cwtl
push
lods
scas
cwtl
nop
push
xchg
int3
adc
call
sub
cmp
push
stc
repz
mov
leave
rorl
je
or
je
push
jb
and
test
mov
imul
adc
outsb
movsb
sub
mov
push
addl
flds
insl
int3
rclb
jne
int3
jmp
mov
stos
test
sub
push
jae
adc
shlb
adc
mov
out
loope
pop
pop
or
mov
cs
aas
js
xchg
lock
cmp
inc
mov
jl
and
out
inc
mov
lock
fstp
mov
popa
es
dec
add
inc
jo
ja
and
scas
dec
sbb
loopne
mov
adc
lret
cs
dec
xchg
jnp
adc
mov
add
inc
jmp
iret
insl
adc
in
cmp
mov
jnp
mov
mov
push
mov
les
mov
mov
dec
jle
adc
inc
andl
call
xchg
mov
test
fwait
out
lods
mov
popa
es
dec
add
inc
xchg
sub
sbb
loopne
mov
adc
lret
cs
dec
xchg
jnp
adc
mov
add
mov
and
sbb
xchg
shlb
pop
in
mov
lret
pop
pop
mov
inc
xor
mov
les
mov
mov
dec
jle
adc
inc
andl
call
xchg
mov
inc
stc
clc
cmpl
push
pop
rcll
mov
cmpsl
fwait
or
inc
mov
push
mov
sbb
push
mov
adc
lret
cs
dec
and
leave
je
adc
adc
les
xchg
loop
test
stos
xor
jns
movsb
dec
mov
ds
out
mov
icebp
xchg
out
dec
dec
pop
scas
push
aas
pop
inc
cmc
es
pop
inc
cs
cwtl
xchg
popf
pop
mov
hlt
fisubrs
mov
out
pop
pushf
in
push
lret
pop
int3
js
es
and
or
xchg
mov
stos
push
cltd
push
mov
scas
pop
xchg
call
mov
xchg
xchg
aas
lret
jle
out
mov
pop
jl
jne
test
sarl
insb
sbb
arpl
xor
daa
push
dec
push
popa
loop
xchg
mov
xor
push
in
sahf
jle
add
jbe
sub
mov
pop
xchg
sub
adc
sub
ljmp
stc
pop
mov
lea
xchg
jbe
and
outsl
fidivrs
adc
neg
movsb
mov
sbb
or
mov
dec
jo
fmull
inc
and
jae
pop
or
out
mov
adc
scas
mov
fildl
mov
dec
cmp
test
cltd
xor
iret
or
adc
and
test
sub
jns
and
xchg
xchg
out
xchg
mov
pop
mov
in
out
out
inc
add
push
mov
mov
cmp
ret
push
cmp
cmp
imul
jnp
ljmp
push
lock
xor
test
cmp
jnp
fildll
pop
out
or
xchg
dec
mov
xchg
psllq
je
sbb
dec
stos
mov
cmp
push
jbe
ffreep
add
push
sbb
mov
out
out
nop
cli
movsb
adc
mov
sub
stos
cmpsl
dec
sahf
or
pop
cmp
mov
test
int3
sbb
testl
mov
arpl
lret
lcall
mov
imul
jg
and
xor
into
lret
insl
pop
mov
jmp
scas
scas
aas
fidivrs
jb
in
jns
lds
idivl
or
sub
dec
fwait
loopne
flds
jle
call
sub
int
addr16
js
mov
inc
pop
cld
gs
scas
aaa
xchg
daa
enter
out
inc
fadds
add
mov
inc
das
aam
xor
add
add
xchg
repnz
xchg
fs
mov
out
cltd
test
fdiv
movsl
cmp
movl
sub
cltd
cltd
cmp
pop
cmp
ss
dec
inc
fsubp
mov
adcl
xchg
cmpsl
and
or
xor
pushaw
push
push
lret
mov
or
outsb
add
and
dec
and
lret
call
jmp
arpl
jae
jl
gs
out
sbb
push
push
es
ljmp
push
into
push
gs
xor
std
inc
dec
popa
lret
in
sbb
aad
inc
arpl
loop
push
push
xchg
shrd
cltd
into
jne
pushf
into
xchg
push
in
mov
sbb
lcall
jp
imul
pop
dec
mov
mov
ss
rclb
push
sahf
xchg
es
jg
out
shrl
inc
pop
dec
xor
dec
push
filds
push
xlat
mov
ds
push
ss
pushf
xchg
sbb
fstpt
sahf
les
inc
add
dec
test
pop
or
rcll
push
shrb
dec
or
sbb
sbb
cmp
fiaddl
out
xchg
jns
cmp
mov
pop
push
test
mov
push
popf
imul
xor
insl
cmc
es
or
in
xor
movsb
loope
jge
push
shl
lea
test
cld
xchg
in
inc
std
sub
fs
adc
adc
loop
jl
jg
xor
scas
mov
inc
dec
popa
lret
in
sbb
aad
inc
leave
lock
out
xchg
pop
push
push
xchg
shrd
or
mov
push
in
mov
sbb
lcall
jp
imul
xor
xor
jmp
adc
lret
push
or
nop
adc
xchg
xor
push
ljmp
out
cld
lcall
sbb
packsswb
lods
popf
and
xlat
out
inc
xor
mov
push
adc
jne
push
shl
cmp
imul
sbb
sub
inc
arpl
test
mov
xor
xchg
adc
mov
int3
negb
add
mov
cmp
scas
cwtl
rcll
push
movsl
mov
sahf
and
adc
xlat
dec
dec
or
cmp
dec
inc
sub
subps
pop
cmpb
pextrw
xchg
imul
dec
xor
xor
and
jae
out
clc
adc
mov
sbb
inc
jo
xor
mov
outsl
aad
out
movsb
and
dec
jae
or
xor
dec
fdivrs
fucomp
repnz
test
dec
sub
shll
je
mov
test
cmp
and
es
and
pop
or
cmc
mov
and
out
or
insb
cmp
jne
ss
ss
les
or
mov
sub
push
xlat
cmpsl
push
dec
and
mov
add
mov
add
pop
mov
add
daa
das
mov
mov
xchg
push
jge
pop
cmp
mov
xchg
cmp
in
std
jno
int3
sub
sub
mov
mov
int
jne
pop
fisubs
out
xor
leave
cmp
xchg
push
cs
stos
int
and
jl
sub
and
les
out
jb
xorl
cs
mov
sub
sahf
ds
mov
mov
fisubrl
ficompl
es
aas
imul
in
or
data16
loop
inc
pop
es
xchg
std
jno
mov
add
xchg
lret
popf
dec
xor
xor
outsl
lock
int3
leave
xor
repz
mov
sub
or
lcall
pop
insb
mov
sahf
in
sub
pop
iret
and
jge
push
cli
jge
push
je
or
xorb
or
clc
lcall
nop
cltd
stos
shrb
dec
ret
jle
adc
add
inc
jb
dec
and
repnz
adc
and
adc
out
push
dec
sahf
mov
fstl
fwait
mov
pop
clc
push
out
stos
xchg
cmpsl
les
dec
fnop
stc
mov
inc
cltd
ja
jp
imul
pop
imul
jge
add
fdivs
xchg
mov
pop
lods
add
js
imul
adc
adc
sbb
out
mov
cmp
icebp
or
dec
sub
xchg
xor
inc
ret
jg
jge
or
sub
jne
scas
jmp
daa
cmp
lds
pop
xor
push
outsb
cld
mov
inc
and
lahf
fisttps
adc
in
out
out
xor
jmp
xchg
psubusb
std
fbld
in
pop
sub
or
dec
mov
pop
enter
push
in
jle
negb
outsb
mov
adcb
add
call
stc
ds
mov
sbb
jnp
push
inc
add
mov
cmpsl
js
leave
inc
subl
add
sti
dec
inc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
out
cmpsl
mov
bound
unpcklps
mov
dec
fucomip
stos
inc
adc
out
mov
mov
mov
imul
test
js
mov
cmc
fimull
sub
sub
outsl
dec
shrl
stos
nop
xchg
pop
inc
cs
mov
and
jae
daa
mov
pop
and
aas
push
push
inc
jnp
sti
jge
cmp
enter
frstor
in
jno
mov
aad
push
ret
jae
dec
push
insb
std
out
mov
or
cmp
or
loope
scas
nop
jne
loopne
inc
testl
push
xlat
cmp
mov
push
mov
iret
movsb
push
incb
xchg
cmp
sbb
std
fidivrl
sbb
cmp
sahf
push
mov
xor
cli
shlb
xchg
xchg
add
push
imul
sub
cld
addr16
lods
rcr
mov
outsl
xlat
jge
in
cmc
imul
pushf
dec
sbb
in
xchg
insl
les
stos
loop
leave
lods
fisttpll
xchg
shrl
jo
call
add
in
scas
mov
in
mov
pop
xchg
into
test
ficomps
dec
pop
sub
cmp
push
or
sahf
sub
ljmp
jl
cmp
rcrb
out
mov
pop
adc
inc
sub
cld
pop
aas
and
mov
dec
jge
fimuls
dec
mov
sbb
xor
inc
fs
and
lret
int3
rcrb
xchg
mov
fwait
cwtl
insb
and
aam
test
xor
push
push
lahf
lret
test
je
and
and
push
in
cmp
jae
push
mov
fisubl
inc
mov
fildll
es
and
or
push
call
inc
lcall
pop
jle
inc
and
pop
adc
in
insb
sahf
test
fwait
sti
mov
in
or
sti
test
or
int
insb
sbb
cld
mov
scas
jg
or
js
gs
mov
pusha
std
lcall
cmp
repz
std
nop
sarl
movb
cmc
adc
scas
pop
xchg
push
jle
push
dec
push
into
lret
sub
jnp
xchg
dec
xchg
push
dec
ljmp
mov
adc
add
sub
sub
rol
je
xchg
jne
movsb
add
sub
adc
jno
daa
mov
daa
icebp
dec
jg
negb
sbb
pop
ss
and
pop
cmp
xor
daa
jmp
idivl
xor
mov
sbb
jg
cwtl
scas
jp
and
pop
out
test
popa
aaa
inc
pop
or
mov
add
js
daa
xchg
adc
and
sti
out
sub
aad
push
push
add
xorl
xchg
in
dec
inc
js
inc
dec
gs
cmp
jb
cmp
cmp
sbb
mov
daa
or
nop
popf
movsb
sbb
mov
or
outsb
add
cs
mov
inc
aaa
imul
sbb
cmp
ficomps
adc
pop
mov
fisubrl
jnp
ss
pop
and
shr
jne
stc
pop
int
jo
add
cmp
push
sbb
jg
cwtl
xchg
vpmulhuw
icebp
push
les
mov
inc
and
inc
jae
mov
cwtl
adc
or
xor
adc
adc
fmull
fisttpll
test
lods
fistpll
mov
pushf
sub
mul
push
jecxz
mov
ljmp
test
jecxz
mov
xor
arpl
push
repz
sti
loop
mov
xor
cmc
test
jae
insl
ss
in
add
mov
dec
daa
movsl
enter
movsl
xchg
addr16
pop
cmpsl
fsubr
bound
push
and
xchg
filds
pop
pop
add
sub
inc
push
sbb
xlat
mov
fdiv
in
inc
xchg
inc
mov
mov
in
mov
pop
sub
ja
leave
push
ljmp
hlt
xchg
and
in
sub
push
mov
sub
xor
lods
push
jno
xchg
loopne
sbb
push
jbe
push
xlat
jnp
fs
cwtl
test
xchg
mov
adc
fadds
das
xor
pop
pop
mov
jbe
out
pop
or
sub
mov
out
sbb
lods
insl
xor
jmp
jp
daa
popa
inc
sbb
aas
xor
rolb
stos
lods
pop
test
mov
pop
test
ss
test
mov
les
xor
mov
jnp
pop
pop
lods
lds
sub
mov
test
ret
mov
mov
sub
or
dec
jno
bound
mov
bound
dec
xchg
xor
adc
or
adc
sub
jle
cmp
and
push
negb
mov
lret
out
cmpsl
mov
push
cmpsl
xor
popa
and
popa
add
dec
lcall
pop
xor
cmp
hlt
cmpsl
jmp
lahf
and
aas
aad
je
imul
jl
add
mov
lods
into
mov
push
in
pop
dec
in
ret
jo
aaa
lods
iret
idivl
loope
arpl
in
mov
and
sbb
pop
call
inc
xchg
int
xor
pop
ja
addb
sbb
das
add
notl
pop
ja
shll
cwtl
or
sub
push
fnstenv
aad
or
xor
xor
and
jo
adc
int
cmp
in
sti
adc
jmp
push
data16
cltd
punpckldq
fadds
jle
movsl
inc
aad
out
in
dec
mov
xor
xchg
and
in
sub
or
or
pop
insb
sbb
aas
or
or
mov
push
inc
xor
out
je
lret
popa
sub
inc
or
mov
scas
mull
sbb
cltd
jp
or
loope
cltd
in
icebp
out
xor
or
and
mov
and
imul
sbb
or
subb
cmp
add
out
xchg
mov
push
push
ljmp
sub
ret
enter
push
das
enter
movsb
mov
inc
and
adc
lds
sub
popa
js
bound
pop
mov
std
aad
sbb
outsl
sub
xor
ljmp
push
mov
int
ja
and
std
addb
rorl
sbb
test
nop
add
stos
data16
pop
sub
mov
enter
in
push
xor
jecxz
sub
dec
cmp
mov
pop
cs
pop
sub
jb
jecxz
mov
imul
stos
aas
inc
rorb
rorb
cmp
xor
inc
inc
aad
mov
add
sti
mov
pusha
lret
repnz
jo
add
cmpsb
shrl
outsl
ljmp
repz
push
roll
test
inc
xchg
inc
mov
xchg
add
ret
inc
leave
imul
adc
ret
std
inc
dec
cmovns
xchg
adc
mov
into
pop
jae
jmp
push
inc
out
mov
stos
subb
mov
push
jecxz
sub
divb
sub
cmp
inc
mov
push
addr16
loopne
mov
out
xor
cmpb
jge
dec
das
pop
jbe
adc
std
push
or
data16
and
insl
movsb
sub
rclb
inc
call
mov
out
xchg
jecxz
mov
cld
inc
inc
out
ja
and
inc
pop
pop
inc
fadd
cmp
dec
push
pop
add
mov
add
push
cmp
push
addr16
loop
dec
add
add
xchg
repnz
adc
sbb
lds
hlt
lret
lret
mov
mov
fsubrl
mov
mov
lret
pop
or
loopne
mov
xlat
lods
lods
movsl
pop
sub
xchg
or
sbb
dec
arpl
mov
dec
enter
in
shll
cmp
and
pop
push
test
ja
pusha
xor
push
cwtl
cli
mov
cmp
push
xchg
jl
jb
adc
sub
fadds
ret
pop
xchg
in
inc
stos
inc
mov
mov
cs
aaa
mov
mov
lahf
mov
pusha
mov
ror
sysenter
loopne
pushf
das
fisubl
cmp
xlat
fidivl
mov
and
nop
loop
jge
xor
and
pop
xlat
outsl
lock
push
xchg
mov
cltd
sbbb
imul
lock
popa
sti
and
add
fiadds
aad
mov
sub
jnp
cmp
mov
mov
cmp
mov
imul
xchg
fists
insb
xor
out
les
inc
lret
divb
subl
sti
fsubl
imulb
ss
push
jge
bound
cwtl
repz
jge
or
mov
pop
outsb
xchg
xor
and
fildl
sub
mov
in
sub
sbb
xchg
sub
sub
xor
mov
fchs
aaa
inc
mov
cmpsb
xchg
mov
loop
add
movsb
in
addb
push
mov
xor
mov
mov
imul
mov
xor
mov
gs
test
push
int
les
icebp
mov
andb
imul
lds
adcl
sbb
add
in
adc
push
mov
jmp
mov
mov
mov
lahf
push
cmp
es
and
or
addr16
mov
ljmp
cmp
jecxz
push
add
push
fcomip
int3
pop
imul
dec
cli
and
push
and
jne
pop
xor
pop
push
jbe
jae
mov
mov
push
shll
pop
cwtl
jl
jne
sbb
cld
mov
mov
lock
rolb
jle
adc
mov
lret
sbb
add
insl
cltd
sbb
int3
cmpsb
adc
cmp
js
inc
lds
push
popf
sub
stos
adc
aad
test
flds
lret
loop
dec
test
pop
je
movsb
mov
es
xor
stc
ret
or
pop
loope
dec
aaa
push
imul
jb
mov
rcll
pop
call
mov
loope
mov
sub
cli
in
imul
push
ficoml
shr
rclb
jns
xchg
xlat
add
mov
out
inc
jmp
cmp
add
incb
call
shlb
push
imul
shrl
jp
arpl
out
jmp
ljmp
cmp
and
add
add
xchg
xor
mov
mov
adc
mov
xchg
push
mov
mov
xchg
stc
out
lahf
into
and
pusha
insb
sub
lret
xor
notl
arpl
add
push
cmc
mov
push
xor
jge
push
test
or
cmp
mov
push
lcall
inc
pop
xchg
mov
cli
add
test
xor
push
outsb
push
mov
sub
jne
aam
pop
mov
scas
push
push
jp
pop
push
pop
sbb
inc
xor
scas
and
lcall
mov
out
stos
jmp
xor
outsl
and
cli
mov
aaa
mov
xlat
add
lret
sub
dec
push
cmpb
pop
dec
sahf
mov
mov
cmc
mov
std
movsb
pop
xchg
cli
pop
mov
push
fisubl
ret
push
mov
adc
xlat
inc
addr16
push
js
mov
mov
lcall
xchg
cmp
mov
or
jo
mov
xchg
adc
sub
xchg
pop
sbb
das
cltd
jns
arpl
movsl
sti
mov
jecxz
sub
es
aad
inc
adc
pusha
xchg
xor
movsb
push
loope
fistpl
sub
and
inc
clc
in
dec
xlat
push
aad
push
and
mov
add
test
stc
sarb
mov
shr
lret
fwait
int3
filds
lahf
aad
jle
iret
mov
stos
dec
dec
mov
stos
pusha
sub
in
rclb
out
jne
dec
add
je
ja
mov
test
push
push
mov
notb
popa
push
sbb
push
cmp
xchg
pushf
fdivs
les
pop
aas
lahf
lahf
into
xchg
es
push
or
into
or
pop
dec
jg
fdecstp
inc
popa
jmp
out
icebp
test
shr
add
and
dec
pop
mov
shr
and
stos
rclb
mov
inc
pop
dec
jae
or
test
cmp
test
cmp
mov
push
div
gs
ficompl
in
cld
bound
mov
daa
fadd
fimull
push
aad
lcall
nop
arpl
into
and
test
mov
jg
mov
rcl
sub
inc
mov
leave
filds
paddq
movsb
cltd
and
fsubp
add
ljmp
mov
and
push
popf
jp
mov
mov
ljmp
xor
popa
fistpl
aaa
ljmp
pusha
stc
pcmpeqd
fs
lret
stos
enter
dec
lret
out
mov
or
dec
das
mov
sbb
mov
out
jae
scas
jg
or
in
pop
xor
jns
andb
addb
repnz
push
jae
lods
movsb
sti
iret
jne
inc
inc
cmpl
jmp
cwtl
les
mov
pop
pop
push
cmpb
fldcw
out
pop
sub
into
adc
call
sub
mov
cmp
push
add
in
lahf
or
cli
xor
xchg
push
mov
mov
mov
testb
les
push
loop
out
inc
aas
repnz
xchg
in
insb
push
les
fadds
testb
lods
jns
mov
add
rorl
loopne
and
xchg
or
out
or
es
xor
inc
inc
call
mov
mov
xchg
sbb
test
sahf
test
push
adc
pushf
sbb
cwtl
xor
dec
stos
bound
es
sahf
and
xlat
push
push
push
test
aad
inc
add
jg
xchg
mov
jp
stc
mov
adc
cwtl
fbld
lock
mov
pop
outsb
notl
or
iret
inc
inc
cmpl
rol
push
mov
sbb
sub
nop
xor
cmc
jno
testb
jmp
and
sub
into
mov
jecxz
movsb
int3
sbb
xor
add
imul
mov
and
and
pop
cmp
mov
je
pop
shlb
lret
js
inc
pop
xchg
fs
cmpsl
or
xlat
fdivl
cli
push
mov
jmp
shlb
ss
lds
inc
push
mov
fwait
scas
and
stos
repz
shl
subb
inc
mov
jg
xchg
mov
fcomps
or
push
lods
push
mov
and
push
mov
jne
inc
inc
cmpl
cli
jmp
jns
cld
lahf
push
xor
es
mov
push
scas
das
int
push
push
ret
mov
mov
into
mov
mov
test
data16
sbb
xchg
mov
sahf
icebp
pop
loopne
sub
je
imul
jmp
cmc
faddl
cmp
xchg
js
shrl
sub
pop
scas
test
jo
addr16
mov
insb
in
outsb
popa
lods
add
mov
add
out
ljmp
lods
mov
mov
test
push
jnp
sahf
stos
xor
mov
pop
or
gs
sub
fadds
jne
jbe
ljmp
mov
push
dec
scas
lahf
stos
xchg
iret
sub
adc
out
or
mov
cltd
mov
xor
je
push
mov
out
js
mov
cmpb
shlb
mov
jns
push
lret
out
dec
cld
call
xor
xor
push
pop
sub
xchg
scas
inc
mov
add
out
cwtl
sub
rorl
testb
xlat
cs
xchg
mov
mov
out
sub
sub
xchg
add
mov
shll
mov
inc
pop
repz
mov
jmp
test
pop
fidivs
xchg
add
repz
fistl
pushf
test
pop
fidivs
mov
gs
mov
mov
jmp
nop
mov
pusha
test
stc
mov
xor
repz
cmc
in
arpl
dec
or
mov
call
push
adc
jnp
xchg
pop
mov
push
fisubl
ret
push
fstl
jne
inc
fists
sbb
inc
outsl
leave
pop
adc
dec
xlat
enter
jmp
daa
movsb
cmp
dec
rcrl
push
adc
leave
outsl
mov
push
push
in
add
and
subl
xor
outsl
jbe
push
adc
mov
mov
sub
inc
in
js
sti
icebp
adc
stos
loope
out
sbb
pushf
push
dec
pushf
sbb
jbe
and
pop
sub
ja
push
repnz
cmp
dec
repz
sub
dec
add
cmc
aad
and
sub
cmp
xchg
add
mov
popf
andb
js
pop
mov
fmulp
outsb
lcall
ljmp
push
mov
sbb
stos
sbb
pop
les
and
int3
mov
and
test
lret
mov
add
scas
cli
fs
sbb
inc
fmulp
outsb
lcall
insl
lock
popa
and
fs
mov
and
dec
cmp
cltd
inc
dec
addr16
ja
and
xchg
xor
imul
data16
cmp
xchg
or
sub
test
jno
mull
lahf
mov
hlt
aas
popa
loop
loop
dec
fbstp
cmp
dec
rcl
sub
inc
mov
xchg
stos
ret
or
dec
xchg
mov
mov
xor
fcmovnbe
jg
and
pushf
xor
bound
out
test
adc
mov
push
mov
leave
xchg
and
inc
adc
and
in
movsl
mov
rcr
mov
scas
or
mov
mov
ljmp
into
lods
hlt
xchg
movsl
in
mov
ret
push
jmp
xchg
scas
jb
add
push
mov
push
xchg
inc
push
or
adc
sbb
lret
or
in
sub
out
xchg
js
jae
dec
popa
aas
leave
leave
popa
or
dec
dec
and
mov
xor
push
repz
popl
or
xchg
cmp
lret
addb
jno
add
mov
jnp
jl
in
lcall
jmp
adc
xor
nop
sbb
gs
rcr
adc
stos
jno
fsubl
out
lret
loop
lahf
mov
xchg
arpl
or
ja
outsb
shlb
mov
jae
push
das
pop
jmp
daa
cwtl
call
fcompl
sbb
pop
popa
xchg
cmp
int
sub
sbb
dec
lahf
jmp
jae,pn
mov
clc
aam
lret
hlt
sub
in
cld
adc
sbb
stos
std
adc
mul
sub
ja
aas
rorl
rolb
out
dec
xor
test
cltd
add
mov
fcmovu
ret
push
test
in
scas
fsubl
cmp
push
movsl
cld
cmp
jmp
clc
mov
jle
mov
dec
add
pushf
stos
lret
int3
scas
flds
sbb
imul
sbb
push
add
fsubl
dec
int
pop
sub
adc
aad
adc
xchg
imul
into
mov
popf
adc
pop
fcom
sete
lret
pop
xor
movsb
push
push
stc
sub
cmp
iret
and
inc
mov
add
loopne
pop
outsl
sbb
enter
or
pop
pop
packssdw
scas
mov
decl
lea
and
cmc
lock
adc
pop
or
or
add
out
mov
xlat
scas
fs
sub
hlt
scas
fs
bound
lods
jmp
leave
add
mov
jg
mov
cmpsl
xchg
aad
ret
push
add
pop
pop
mov
out
lods
mov
pop
jo
inc
and
lret
sub
pusha
dec
pusha
sbb
adc
jno
ja
fnstenv
jle
dec
sbb
push
mov
ds
test
ljmp
mov
hlt
inc
mov
aam
push
testb
scas
int3
orl
jns
sbb
pop
lods
mov
mov
out
dec
xchg
imul
ds
stos
sbb
pop
int3
pop
arpl
push
push
imul
iret
adc
pop
mov
subl
enter
xchg
and
scas
and
fldt
sub
lret
mov
xchg
out
mov
js
and
test
arpl
mov
or
dec
jb
inc
mulb
jmp
sti
fcom
sub
xor
push
ficoml
adc
test
sbb
mov
in
fwait
call
les
popf
add
ror
outsl
insb
call
lods
into
std
ss
stc
push
mov
push
jno
cmpsl
scas
pusha
xchg
cmp
push
sub
sub
mov
outsl
imull
push
addr16
lea
movl
xor
pop
out
xor
push
add
pop
ret
xor
mov
mov
dec
xor
pop
loop
enter
mov
jmp
inc
jp
mov
mov
pushf
cmc
push
shlb
lahf
aam
pop
lds
inc
pop
fwait
mov
mov
mov
sbb
loop
pusha
imul
cli
leave
movsl
cmp
in
jmp
xor
mov
xor
pop
cmpsb
orb
cmpsb
dec
shlb
dec
mov
sbb
pusha
sub
int
inc
push
sti
in
int3
ret
dec
fadds
lcall
test
insl
inc
loopne
repz
add
mov
cmp
push
shr
sbb
les
mov
js
test
movsl
or
cmp
dec
lods
cmp
ljmp
jbe
adc
cld
adc
dec
mov
mov
mov
xor
jg
fcmove
incl
push
dec
cmp
xorl
mov
in
push
mov
stos
xor
xchg
pop
mov
push
pop
dec
xor
sti
mov
imul
push
js
jmp
les
jb
or
imul
push
cwtl
xor
and
adc
fidivrl
lock
adc
push
push
lock
xchg
aaa
pushf
adc
call
popa
test
jno
std
out
mov
push
mov
ret
jl
cmp
testb
sub
es
push
scas
in
jnp
lret
jg
adc
xchg
xchg
adc
xchg
push
push
test
int3
test
lcall
into
dec
or
outsl
jb
les
movsl
movsl
icebp
in
xchg
popa
cmp
nop
dec
or
xchg
mov
idiv
dec
mov
sbb
mov
pop
leave
mov
in
push
pop
push
cmp
pop
jge
cmp
loopnew
rcr
cmp
aaa
std
movsl
inc
movsb
and
aam
imul
push
pop
add
or
mov
xchg
push
adc
push
subb
and
das
les
int3
je
ja
inc
mov
aad
int3
push
push
aam
ret
pop
jg
lahf
addr16
pop
xchg
sub
mov
pop
or
js
jp
shrl
int3
inc
ret
gs
sub
test
inc
mov
mov
stos
mov
cwtl
insl
xchg
sub
sbb
xchg
or
decl
and
push
sbb
stc
test
stc
push
xor
dec
sub
ret
and
and
cli
or
lcall
push
imul
sub
adc
jb
movsl
adc
lret
loop
pusha
imul
xor
out
fwait
jnp
cmc
cmp
clc
in
shll
push
in
add
xor
pop
push
sub
adc
scas
mov
stos
xor
popf
add
push
ljmp
xor
shrb
enter
call
xchg
mov
addb
inc
pop
push
and
mov
rorb
cld
mov
test
inc
lahf
and
fcoml
ret
dec
xchg
fs
sarl
mov
add
xchg
and
mov
xchg
movsl
pusha
xlat
sbb
daa
out
push
xchg
lock
cmp
rclb
iret
dec
imul
pop
mov
xchg
mov
dec
jno
or
xlat
push
pushf
inc
add
add
jbe
mov
jmp
jp
ret
xchg
test
sahf
pop
fcomp
push
scas
lret
mov
repz
cli
loopne
ds
and
cmc
data16
insl
or
mov
mov
call
into
addr16
or
mov
jecxz
dec
ret
inc
fcmovb
pop
jp
xchg
mov
pop
sti
or
cs
inc
xchg
pop
dec
add
stc
insb
arpl
dec
pushf
mov
add
fiadds
hlt
testb
push
inc
dec
jl
add
push
cltd
cmp
pop
repz
add
test
test
test
dec
mov
push
push
mov
inc
loopne
inc
movsl
mov
ret
sub
fstpl
aaa
adc
push
lret
cltd
or
data16
sbb
rcl
mov
fidivl
pop
adcl
into
push
idivb
mov
adc
mov
das
subb
aaa
stos
adc
roll
sarb
pop
pop
fdiv
push
cmp
arpl
jmp
dec
or
xchg
jb
data16
dec
and
lea
push
dec
arpl
out
subb
pop
cmp
xchg
jecxz
inc
add
insb
in
add
shll
push
xor
pushf
movsb
xor
jp
test
mov
mov
loope
cmp
fsubs
mov
sbb
je
cs
mul
fld
lret
out
pop
cmp
mov
push
sti
xchg
adcb
jo
loopne
ljmp
in
jne
cmp
cmc
nop
int3
adc
lcall
dec
push
test
scas
mov
enter
enter
cmp
rcpps
or
ss
xor
push
testl
xor
nop
stc
jl
and
push
scas
aaa
and
and
arpl
ljmp
xor
sub
iret
repz
lret
addr16
mov
fcomps
cmp
icebp
or
fsubrs
inc
jno
mov
js
out
push
add
fdivrs
repz
ror
into
push
xchg
lret
movb
aas
cmp
or
jae
cmp
mov
jns
mov
fisubrs
inc
lods
repz
or
dec
pop
int
xor
jns
imul
fwait
hlt
xor
inc
ret
std
imul
xor
xchg
push
jg
fnstenv
or
pushf
xchg
adc
mov
pusha
fwait
push
or
fsub
jp
out
and
pop
shrl
cmpsb
lock
jno
jae
pop
scas
arpl
add
dec
and
aad
fnstsw
push
test
add
cmp
cwtl
out
jne
lret
divl
xchg
mov
mov
into
inc
scas
fdivr
sbb
faddl
push
sbb
push
lods
push
cmc
pop
mov
jnp
add
movsb
and
ds
les
stos
push
pop
mov
bound
or
jne
adc
xchg
push
dec
cltd
add
dec
ret
add
lret
in
fstp
negl
outsl
lcall
sbb
aam
arpl
dec
int
sub
sbb
mov
push
or
subb
dec
cmc
and
popa
fwait
mov
mov
icebp
sbb
push
mov
dec
lret
cltd
jmp
addr16
push
sti
and
in
xor
pop
imul
adc
xor
jo
and
outsl
jp
inc
sub
xor
les
mov
pop
jg
mov
jl
add
push
es
clc
sahf
xor
mov
rcrb
dec
test
mov
add
inc
int3
pop
out
in
add
fldl
repnz
add
mov
sub
inc
xor
lcall
adcb
mov
xchg
xor
clc
jg
lods
aam
or
adc
ffree
pop
js
mov
insb
xor
mov
fcoms
ds
sti
hlt
in
loope
adc
add
sub
dec
ljmp
into
sbb
xor
push
and
push
les
nop
cmp
gs
lods
and
add
lods
enter
add
test
xor
adc
mov
adcl
and
dec
pop
and
sub
in
int
push
push
push
lods
or
jle
push
xchg
sbb
or
mov
xchg
jmp
icebp
outsb
push
out
loop
cltd
sub
jp,pt
shr
push
inc
xorb
or
fildl
mov
pop
pop
in
pop
mov
push
pop
lea
jmp
ja
push
rorb
or
repnz
subb
lahf
adc
push
fsts
add
fsub
mov
cwtl
jbe
insb
out
loope
xchg
clc
fcmovb
out
pop
out
fiaddl
lcall
shlb
testb
inc
add
sahf
jle
jbe
pushf
jbe
lahf
pop
sbb
addl
adc
sub
fwait
addl
dec
push
add
and
fcomps
mov
fimuls
mov
sbb
sub
loop
insb
imul
aas
outsw
es
cmp
rcl
popf
fcmovne
jae
fsubp
sahf
add
out
push
ret
aaa
mov
inc
testl
mov
ljmp
xor
or
inc
into
adc
or
jecxz
xor
notb
sub
shlb
add
mov
mov
xlat
test
inc
jmp
mov
aas
pushf
cmp
dec
mov
sbb
in
int
out
cld
out
and
stos
loope
out
sbb
cmp
outsb
jp
xchg
xor
iret
arpl
stos
or
cmp
int
jbe
dec
add
shr
cmpsb
jnp
add
lret
addr16
int
adc
in
xchg
cs
add
or
jmp
sub
lds
xchg
fmul
pop
lcall
imul
sub
rcll
jl
fwait
jge
les
cmp
mov
and
es
clc
dec
mov
push
fidivrs
stc
mov
cmpsb
dec
pop
pop
sbb
cltd
lock
cmp
fisubrs
push
jnp
mov
sbb
add
call
add
popf
inc
repnz
push
jmp
dec
addr16
dec
out
sbb
leave
insl
or
imul
stc
ds
push
ret
out
sub
imul
add
sbb
test
cmpsl
pop
cs
pop
bound
add
das
mov
lgs
cld
lock
hlt
in
in
push
cmp
imul
daa
xchg
mov
fwait
cld
popf
add
sbb
pop
xchg
loopne
mov
cwtl
cmpsl
shlb
xchg
mov
sub
mov
insl
in
ljmp
cmpsl
lds
insl
mov
xlat
sbb
dec
pop
xor
cmp
push
add
jno
icebp
stc
pop
dec
inc
adc
pop
in
xor
xchg
push
xchg
test
stos
ret
arpl
pop
insl
cmp
stos
aaa
movsb
aaa
test
jbe
jae
xchg
stos
stos
mov
cmp
mov
push
pop
scas
inc
shl
mov
lods
pop
into
loopne
add
scas
lds
out
je
cwtl
mov
push
xor
lret
lods
xor
call
add
dec
imul
push
leave
xor
sti
mov
call
pop
or
xorl
pop
xor
sar
inc
lret
adcb
push
pop
xchg
jmp
out
dec
jbe
adc
sub
inc
mov
insb
or
pop
shrb
adc
shll
cmovae
cwtl
pop
jns
push
sahf
inc
outsb
pop
je
push
bnd
mull
and
cmp
sbb
out
fildl
sub
pop
jo
mov
mov
in
lret
pop
add
xor
fmuls
push
iret
loope
in
sub
dec
js
sarl
push
mov
stos
scas
push
shlb
or
lcall
push
adc
divb
sbb
int
lods
cmp
push
lahf
dec
enter
into
les
cli
gs
subl
jae
sbb
mov
outsl
aam
sahf
std
js
ret
enter
inc
cmp
out
mov
add
pusha
and
aas
insl
aad
xchg
arpl
out
pop
and
lret
mov
pop
shll
adc
mov
pop
dec
mov
aad
movsb
stos
sbb
jge
insl
jo
push
jge
or
enter
scas
jb
ficomps
jecxz
pusha
xchg
jns
sbb
push
xor
data16
pop
decb
or
inc
mov
test
xchg
and
js
xor
xor
aad
jecxz
ret
push
outsl
inc
mov
imul
aad
cmpsl
insb
vpacksswb
out
cmp
out
sbb
dec
or
insb
or
push
adc
int3
insl
cmp
ljmp
push
shr
cltd
stc
pop
sahf
push
push
fdivs
das
psllq
pop
jne
jnp
dec
iret
jno
sub
test
push
xor
out
push
sbb
cmp
inc
mov
cmp
push
lea
or
aaa
rcll
push
mov
test
pop
stc
jecxz
pusha
into
in
cmp
cmp
sub
pusha
popa
pop
ds
fnstenv
lahf
aaa
das
inc
and
inc
fcomps
lock
xchg
iret
sub
fidivs
jae
push
sub
jns
inc
jne
ficoms
mov
pop
orb
dec
cmc
add
adc
and
ret
or
inc
mov
mov
ja
int
sbb
test
aaa
cmc
adc
imul
sbb
mov
mov
sbb
orl
jb
cs
lcall
popf
lea
push
mov
mov
cmp
xchg
cmp
arpl
outsl
scas
into
std
lods
jno
and
mov
enter
jne
imul
add
dec
es
or
nop
fmull
add
dec
fdivs
cmc
frstor
jb
gs
xor
push
inc
xchg
bswap
enter
mov
call
mov
push
push
push
mov
outsl
fwait
adc
cltd
adc
leave
mov
mov
inc
add
movsl
loop
and
rorb
frstor
ljmp
gs
push
sahf
sbb
int3
arpl
xor
push
pop
cltd
faddl
popf
cmp
aad
mov
imul
xchg
mov
imul
pop
rcrl
fistpl
flds
aaa
push
jl
pop
jp
movsl
and
scas
jne
sbb
pop
popa
dec
dec
add
out
adc
aam
out
gs
or
xchg
push
scas
xchg
sbb
mov
lret
jp
stos
incb
mov
mov
mov
icebp
das
sbb
popl
mov
les
dec
into
xlat
mov
addr16
xor
mov
sbb
idiv
lods
bound
cmp
dec
jmp
and
test
or
cwtl
movsb
ds
mov
sbb
jl
push
sub
jg
jmp
mov
into
cmp
cwtl
pop
add
ret
cmp
fcmovnbe
in
popf
insl
mov
push
and
jmp
pop
lods
lret
jae
cmp
push
ja
nopl
iret
mov
jne
ljmp
popf
mov
mov
and
scas
cmp
in
popa
jbe
dec
outsb
outsl
std
sbb
pop
icebp
cmpsb
push
mov
es
outsb
pop
icebp
repz
rcl
sbb
sbb
adc
mov
inc
push
inc
les
cli
gs
jo
test
shll
pop
push
dec
scas
add
mov
xor
push
inc
shl
jbe
adc
push
lret
adc
jmp
dec
and
add
movsb
lret
pop
arpl
dec
pop
push
add
fcoml
inc
mov
jo
mov
add
mov
sti
xchg
dec
sti
mov
inc
adc
clc
xchg
stc
mov
dec
mov
adc
pop
xlat
mov
push
fwait
insb
test
int
popa
iret
iret
jg
xchg
jge
sbb
cmp
adc
jl
push
push
pop
ret
mov
stos
push
fwait
shll
shll
orb
hlt
inc
mov
sbb
int3
stc
xchg
repz
aas
add
call
addr16
jo
stc
ja
mov
mov
sub
mov
xchg
xchg
xor
push
sbb
fsubrp
add
jbe
icebp
adc
mov
xor
popf
mov
movsl
imul
add
lds
jmp
sub
xorb
es
dec
mov
dec
fst
flds
and
out
in
es
loop
test
cltd
xor
iret
jns
scas
push
xchg
mov
jns
jmp
testb
out
xchg
sbb
daa
mov
mov
lds
leave
mov
repnz
jl
mov
mov
push
stc
call
jge
lea
test
and
lds
jmp
push
xchg
xor
dec
repnz
out
jmp
inc
pop
sbb
pop
inc
adc
cmp
add
lret
js
ficompl
in
mov
push
adc
or
adc
in
jl
push
push
sub
xor
xchg
lds
shlb
add
sbb
and
test
rcll
and
push
pop
and
std
sbb
or
repnz
mov
mov
cmpb
mov
sarl
dec
xor
jmp
or
pop
imul
xlat
fst
test
adc
leave
movsl
pop
loop
jmp
cli
xchg
fdiv
mov
scas
jge
bndstx
insl
lret
mov
negb
jb
cmc
test
rclb
xchg
push
in
inc
xchg
push
cli
push
push
rcll
cmp
mov
sbb
mov
jbe
in
scas
dec
mov
daa
dec
sub
sub
ljmp
daa
cmpsl
in
jl
int
and
or
test
aad
push
stos
mov
inc
pop
sbb
pop
add
sub
aas
mov
mov
or
push
push
popf
sbb
cltd
jns
fnsave
lret
dec
sub
sbb
loope
jle
mov
popf
jl
stos
lds
or
mov
mov
adc
popa
pop
aas
fs
loopne
mov
mov
fidivs
call
xchg
and
add
mov
mov
setle
xor
sbb
jne
add
mov
cmp
xchg
ficoml
mov
gs
jae
dec
ja
pop
mov
fisttpl
movsl
sub
sbb
imul
sub
sbb
mov
cwtl
jo
test
push
mov
pop
cmp
pop
loop
adc
test
or
add
test
xchg
xchg
xor
mov
dec
je
or
pusha
aad
int
adcb
nop
in
pop
sbb
inc
dec
mov
outsb
mov
inc
or
xchg
pop
cmp
xchg
addr16
ret
pop
jne
mov
cld
cmpsb
jg
loopne
scas
das
jl
popf
dec
xchg
dec
sub
mov
push
fidivrl
movsl
mov
fs
rolb
lahf
or
lds
jns
inc
jo
xor
add
stos
jle
divb
jbe
adcb
dec
lret
xor
mov
leave
cmp
aam
sub
loope
jb
dec
aaa
pop
fstps
xchg
push
repnz
sbb
mov
push
push
fidivrl
xorl
lods
pop
mov
sub
adc
mov
fnsave
lds
sbbb
sbb
add
das
cwtl
adc
push
stc
xchg
xor
inc
test
ficoms
xchg
vpmulhw
pop
out
mov
popa
shll
dec
pop
fcmovnb
jp
sbb
sbb
sub
loope
rol
mov
push
mov
shrb
pop
push
out
or
scas
mov
inc
fnstcw
icebp
and
inc
scas
xor
js
repz
mov
shrb
mov
cmpsl
add
loopne
mov
sarl
dec
cli
sub
mov
add
mov
sbb
fwait
rcl
cld
xchg
jg
inc
push
cmpsb
or
or
mov
mov
add
sub
pushf
jg
ret
mov
cmp
lret
and
shl
cmp
or
sub
jmp
or
fcom
adc
mov
mov
sub
out
pushf
sub
xor
xchg
pop
xor
add
sub
sahf
and
test
lret
mov
pop
xor
mov
test
ret
inc
jne
repz
push
adc
int
dec
out
cmpsb
int
or
adc
adc
or
stc
es
jmp
cmp
pop
push
out
xchg
xor
and
mov
cmpsl
xchg
sbb
add
fistps
mov
or
jp
je
pop
std
shll
cli
dec
add
int
sbb
jns
roll
mov
push
mov
cwtl
sub
push
lea
jecxz
cmp
cmpsb
imul
imul
scas
cs
push
pslld
icebp
add
xchg
push
lock
mov
ret
jecxz
jle
aas
inc
popf
mov
adc
insl
inc
cmpsl
outsl
jo
pusha
add
push
adc
push
mov
icebp
xchg
fimull
jmp
adc
sub
sub
add
jbe
in
sbb
mov
gs
leave
fmuls
test
inc
dec
subb
pop
test
cmp
mov
in
dec
out
sbb
cltd
jns
out
push
cmp
jbe
xor
gs
rcr
into
mov
dec
or
pop
cmp
fsubl
sbb
dec
pop
enter
aad
pop
or
sbb
mov
insl
sub
scas
mov
and
iret
inc
mov
ret
pop
stc
int3
arpl
pop
add
xchg
out
enter
adc
stos
push
xchg
or
int
dec
xlat
add
imul
cmp
loopne
mov
in
dec
stos
xchg
push
push
repz
mov
loope
xchg
sub
mov
loop
push
lret
test
mov
into
mov
pusha
negl
cmpsl
and
hlt
cld
fdivr
lret
jnp
push
xchg
gs
push
addb
in
cmp
loope
jg
mov
aad
rol
loop
or
add
sarb
pop
out
xor
lock
and
jle
or
inc
dec
xchg
and
jbe
ds
dec
lock
xchg
ds
pop
jno
lret
inc
sbb
inc
loope
daa
jae
icebp
or
inc
fstpl
data16
sbb
adc
mov
ljmp
test
push
xor
mov
jl
les
adc
mov
mov
sbb
inc
and
xlat
adc
or
int
mov
cmp
pop
inc
lds
sub
lock
sarb
and
sbb
jle
clc
push
lret
or
lds
and
xchg
mov
jnp
cmp
dec
push
out
xchg
cmp
dec
negl
cmp
or
cmp
mov
push
lcall
and
shrl
pop
in
xchg
ds
lods
push
outsb
push
mov
sub
dec
cmc
add
xchg
adc
lods
jecxz
in
shrl
sahf
push
sbb
cmp
mov
icebp
pushl
aas
das
lock
sbb
cmp
and
dec
das
in
adc
repnz
push
push
push
pop
xchg
mov
scas
repnz
fildll
loop
jmp
pop
mov
and
shr
jb
fistl
add
dec
das
in
xor
es
movsl
out
add
imul
stos
add
clc
xchg
xchg
push
add
cmpsb
je
xor
int3
or
pop
and
dec
fwait
mov
add
push
push
xchg
outsb
cmp
pop
jecxz
sahf
out
and
sub
ror
int3
adc
sub
es
rclb
fidivs
addb
and
pop
mov
fisttpl
jg
cmp
mov
ss
push
sub
popa
dec
add
add
xchg
adc
insb
jge
mov
pop
adc
mov
dec
aas
fdivr
cld
adc
mov
push
sub
test
rorl
negb
rorb
popf
jmp
dec
sbb
ret
cld
mov
in
ja
clc
xlat
cmp
inc
lret
jmp
insb
push
sub
and
cld
sbb
fs
and
scas
cmp
adc
into
mov
ja
rol
fidivrl
add
sbb
cmp
jns
mov
jle
scas
add
mov
ljmp
fisubl
fimuls
rcrl
cli
xchg
xor
stos
das
lret
add
lret
cld
push
mov
in
mov
jp
push
aaa
sbb
ret
js
cmp
mov
fisttps
jle
loopne
cmp
cmc
pusha
and
mov
mov
adc
fnstcw
nop
inc
jae
xor
rorb
data16
mov
aam
push
test
xor
out
push
lods
stos
pop
fwait
sub
das
xchg
cld
in
test
mov
das
mov
imul
loopne
pop
nop
cmp
ss
sbb
test
les
xor
je
xchg
mov
push
mov
fmull
jb
adc
call
aad
mov
or
scas
ret
sbb
add
dec
jo
fmull
inc
or
js
push
jmp
mov
psubw
iret
nop
push
daa
jecxz
sub
adc
pop
fcom
pop
addl
cli
call
ret
mov
out
outsb
test
rolb
dec
fstps
aad
pop
ljmp
sbb
inc
std
adc
add
les
and
adc
sub
mov
adcb
add
cmp
cmp
mov
mov
mov
pushf
mov
jb
adc
aaa
mov
icebp
mov
dec
outsb
iret
sbb
je
and
lods
lret
sub
test
roll
outsb
sbb
cmc
dec
fiadds
outsl
int3
mov
xor
mov
xchg
push
xchg
jg
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
dec
jae
aaa
call
pmullw
outsb
les
roll
push
mov
test
lods
int
je
mov
out
out
push
hlt
pop
dec
or
or
mul
push
adc
mov
adc
mov
adc
enter
xor
loopne
mov
out
nop
test
cs
in
jne
jo,pn
sub
xor
jp
push
dec
sbb
jmp
outsb
cmp
in
inc
test
stos
jbe
jbe
popf
add
mov
dec
cmp
ret
cmp
je
mov
sbb
push
add
enter
out
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
inc
xchg
push
add
repnz
out
cmpsl
ret
stc
call
mov
aam
xchg
add
mov
shr
xchg
lds
adc
mov
adc
pop
inc
mov
leave
cmp
lods
popf
and
xlat
out
pop
mov
js
dec
lahf
leave
pop
xchg
mov
sbb
xchg
movsb
mov
pop
adc
loop
aad
call
into
les
mov
sub
into
push
fisubl
outsl
stc
xor
dec
subb
lods
jg
icebp
lahf
sbb
adc
loop
push
ret
sbb
mov
mov
adc
push
push
push
shr
ss
scas
pop
ds
xchg
sub
mov
jns
xor
pop
pop
cmpsb
es
aaa
sarl
jl
cmpsb
mov
js
sub
xchg
mov
cmpsb
or
adc
repz
in
mov
xchg
cmpsb
push
stc
movsb
xor
xor
and
fisttpl
stos
push
iret
movsl
dec
popf
bound
mull
or
movsl
push
call
jno
push
dec
lds
jp
shll
js
xor
inc
pop
inc
js
mov
sbb
sahf
cmp
cmp
jmp
iret
fisttps
movsb
sbb
mov
or
mov
add
orl
mov
push
daa
aas
fcmovnu
mov
jnp
mov
addr16
pop
push
ret
pop
inc
push
push
test
adc
and
sbb
test
adc
lret
in
out
fdivs
les
loopne
cwtl
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
out
jle
dec
or
mov
lods
popf
and
xlat
out
xchg
loope
clc
push
lret
fsubrl
sub
loopne
jl
imul
negb
push
pop
roll
inc
repz
subl
arpl
adc
leave
ljmp
pushf
lock
lret
mov
movsl
adc
sbb
int
lods
cmp
sub
ret
inc
out
pop
lret
adcb
push
pop
xchg
jmp
out
dec
jbe
movsl
or
ret
je
insb
or
pop
shrb
adc
rcrb
dec
insl
cmp
test
pushf
mov
adc
push
sub
push
leave
cmpsb
imul
into
scas
cli
xchg
pop
cmp
std
mov
dec
inc
repz
outsl
lods
mov
ja
push
cmp
cmp
push
jne
fnsave
jp
inc
aad
subb
es
aad
mov
jo,pn
hlt
jns
inc
pop
mov
dec
inc
lds
xor
xor
ss
movaps
movsb
xor
sub
and
leave
mov
and
ja
cwtl
jmp
xchg
out
mov
cmp
sar
inc
cmp
bound
lret
loope
add
cli
dec
fnstsw
jno
bsr
adc
jecxz
scas
lahf
dec
xor
dec
pop
stc
mov
shl
inc
jnp
imul
in
es
pop
leave
testl
lods
dec
faddl
mov
shlb
add
push
or
out
pop
insb
imul
les
scas
inc
loope
mov
mov
loope
sbb
aad
mov
xor
push
or
mov
arpl
add
add
mov
push
mov
stos
cmpsl
mov
imul
xor
int3
push
ljmp
xchg
bound
inc
les
aaa
cmpsb
dec
add
dec
ss
inc
xchg
movsb
sub
push
mov
push
adc
repnz
or
hlt
imul
inc
jge
jo
out
fs
ljmp
shrb
rcll
lret
and
jle
rol
aas
push
mov
shrb
rcll
sub
inc
pop
mov
xlat
pop
jno
in
sbb
shrb
rcll
test
in
iret
out
adc
lock
rcll
mov
adc
cmp
mov
or
mov
push
inc
push
xor
mov
cmp
lahf
inc
pushf
jbe
out
inc
rcrl
add
sub
out
ja
js
mov
shll
inc
xchg
repnz
add
adcl
xchg
stos
scas
dec
push
xorb
das
loope
add
sbb
push
fcompl
dec
test
cmp
mov
nop
pop
loope
ja
int3
mov
or
addr16
aas
jl
leave
push
xlat
lods
orb
pop
and
test
in
push
das
or
dec
mov
pop
enter
push
in
lahf
dec
adc
fistps
add
mov
sub
mov
adc
jle
or
cli
aas
inc
add
push
ficomps
push
cmp
out
jmp
cltd
inc
lods
adc
mov
inc
ja
pushf
cmp
pop
xchg
add
inc
aas
clc
out
push
push
leave
jo
lds
jp
inc
adc
jnp
and
std
jo
jbe
xchg
and
dec
int
lods
std
jge
js
or
ficoms
insl
push
int
stos
inc
inc
xor
and
pop
mov
cmp
mov
ljmp
xchg
xchg
add
iret
test
repz
lea
pusha
out
divl
inc
xor
ffreep
or
and
pusha
push
pop
in
test
xchg
sub
and
mov
mov
insb
aam
lods
movsb
out
movsb
inc
insl
add
add
das
or
or
rcl
lock
int
test
jns
sbb
jb
popf
mov
jmp
aam
push
stos
jge
or
ja
popf
inc
push
push
leave
jo
lds
lods
mov
dec
fmul
lds
push
sub
fwait
adc
cs
es
xor
lahf
insb
ja
xchg
xchg
ja
mov
lods
cmp
out
mov
out
std
out
cmp
fistl
lods
sbb
inc
int3
fisttpll
jp
mov
mov
lock
int
jp
mov
addr16
and
movsb
dec
mov
jbe
push
adc
jp
mov
jb
jnp
push
push
xchg
sbb
mov
mov
xor
test
xor
test
ljmp
shlb
sbb
cltd
mov
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
out
add
leave
in
mov
cmp
lods
popf
and
xlat
out
gs
mov
inc
cmp
jne
mov
inc
fdivrs
jno
arpl
cmp
cmp
lret
xchg
mov
dec
xor
adc
mov
and
daa
sub
push
mov
dec
in
es
mov
push
nop
or
insl
adc
imul
out
mov
sbb
hlt
std
push
adc
aas
enter
stc
cld
xchg
jmp
cli
mov
adc
into
pop
jl
push
jl
scas
scas
push
aas
pop
inc
cmc
es
outsb
mov
pop
lret
ficoml
out
mov
fcomps
lods
xchg
push
mov
mov
dec
mov
test
movsb
xorl
add
sub
mov
fs
enter
test
mov
dec
hlt
add
std
cltd
mov
sahf
lahf
ror
popf
repz
out
inc
mov
mov
pusha
mov
push
xchg
xor
push
push
arpl
xor
cwtl
cwtl
in
test
push
call
js
cmp
sti
or
mov
pop
sbb
mov
pop
test
in
gs
aas
insb
pop
sbb
inc
and
pop
into
adc
enter
xchg
add
in
loopne
xlat
popf
movsb
jae
sahf
inc
jl
imul
xchg
sub
mov
imul
stos
cmp
divb
dec
sbbb
out
xchg
fwait
xor
and
movsb
dec
mov
mov
cmp
push
and
xchg
dec
jmp
jmp
jne,pt
push
dec
push
xor
add
sarl
sub
mov
scas
mov
dec
dec
cmpsl
xor
jecxz
out
sub
sub
push
dec
leave
sbb
int
lods
cmp
aas
cmc
arpl
mov
pop
and
or
push
mov
xchg
jmp
out
dec
jbe
rorl
aad
xchg
ret
je
insb
or
int
je
aad
into
adc
lods
loop
inc
fwait
xlat
pop
enter
mov
and
fstl
imul
jo
fmull
inc
push
push
sbbl
or
and
jbe
mov
adc
test
jb
mov
sbb
hlt
insl
repz
negb
enter
in
lea
pop
imul
inc
sbb
pop
jl
stos
enter
pop
into
mov
fdivrs
adc
sub
push
lods
sbb
push
mov
xchg
or
pop
inc
jl
push
xchg
pop
ja
mov
cltd
cmc
mov
movb
cmpsb
enter
mov
sub
xor
mov
adc
stos
mov
and
pop
add
mov
mov
pushl
mov
dec
mov
sbb
and
push
xchg
fsubrp
in
dec
sub
sbb
inc
and
push
adc
xchg
cmp
xor
xchg
shll
jo
pushl
into
jno
sbb
push
rorb
fldl
cmp
dec
fwait
cli
orb
cmp
sub
cmc
sti
fildll
sbb
cmc
data16
xchg
or
ljmp
xor
xchg
nop
loope
push
imul
and
pop
cltd
rolb
frndint
jg
mov
sub
xor
adcb
mov
insl
xchg
and
and
cs
lods
nop
and
movsl
add
cmp
xor
enter
sbb
push
test
lahf
cwtl
call
cmp
out
sbb
enter
jge
push
add
mov
sbb
jge
jge
mov
mov
fiaddl
enter
shrb
sbb
test
jbe
mov
xchg
test
lea
and
mov
add
xor
mov
dec
sub
test
jbe
mov
scas
test
sub
out
sbb
div
and
xchg
push
mov
push
mov
insb
or
int
je
aad
into
adc
lods
loop
inc
fwait
xlat
decl
pusha
mov
or
out
mov
xor
or
clc
mov
mov
cld
jnp
jnp
xor
sbb
aad
inc
jg
cmp
in
cmp
int3
cs
add
enter
pop
adc
inc
std
movsl
adc
mov
vroundps
cmpsl
sub
pop
js
mov
call
and
test
in
push
add
push
clc
lcall
inc
aad
out
mov
das
inc
mov
ljmp
jne
out
into
int3
js
ljmp
xor
imul
pushf
stos
pop
mov
add
addr16
jecxz
dec
lods
pop
jecxz
fdiv
leave
push
nop
inc
dec
stos
cmpsl
mov
pop
ja
mov
inc
in
jb
scas
inc
insl
adc
aas
pop
inc
cmc
es
cmp
pop
stc
add
insl
cs
out
pop
pushf
in
xlat
add
adc
mov
out
popf
dec
push
bound
ja
ret
mov
mov
cmc
fwait
xchg
xchg
and
pop
pop
js
jl
cmpsl
ret
push
push
out
adc
jg
aaa
inc
push
push
xchg
inc
data16
sahf
arpl
cwtl
arpl
cmp
add
out
fmuls
push
mov
mov
add
dec
push
loop
pusha
daa
scas
movsl
xlat
mov
lahf
add
push
push
inc
and
jo
jae
sbbb
push
inc
pop
jno
mov
sbb
imul
cmp
xor
sub
mov
push
gs
dec
mov
jecxz
xchg
repnz
iret
xchg
mov
mov
push
sti
and
adc
sbb
or
or
mov
jecxz
xor
sub
pcmpgtw
aad
sub
sbb
or
xor
cmp
lret
pusha
dec
dec
movd
push
pop
sbb
shlb
push
cltd
insb
lods
cmpxchg
inc
lock
xchg
jnp
movsl
hlt
testl
and
cmpsl
iret
ret
pop
inc
jmp
push
jbe
jbe
mov
lcall
and
lods
fdivrl
pop
sti
lahf
pop
mov
test
ljmp
inc
or
fnsave
jmp
xlat
fisubl
dec
add
add
xchg
lods
call
mov
test
outsl
add
fcomps
mov
in
lods
pop
movsb
jb
sbb
in
dec
dec
shr
jmp
jns
fisubl
cmp
mov
inc
or
pop
and
jmp
mov
xchg
fs
test
fdiv
leave
push
nop
fs
mov
pop
push
or
inc
pop
jmp
fstpt
push
in
loop
fildl
or
sub
andb
xlat
xor
add
add
jle
scas
adc
lahf
jl
adc
inc
out
inc
mov
loope
fcoml
pop
push
cmp
mov
xchg
mov
arpl
push
and
mov
movsb
lea
jo
scas
lds
bound
stc
inc
mov
jp
sub
lds
loopne
cmpsb
nop
daa
cmp
movsb
dec
mov
sub
jb
je
outsl
mov
add
or
push
nop
mov
cmp
push
insl
mov
xchg
xchg
fldcw
sbb
inc
and
add
ret
pop
xor
mov
lock
int3
scas
subb
push
outsb
pop
xor
mov
movsb
cmp
mov
leave
or
xlat
in
or
sub
int
push
imul
mov
push
cmp
inc
sbb
cmp
inc
push
and
aaa
mov
dec
mov
pop
sbb
adc
jbe
aas
sbb
jle
xor
scas
addl
test
xor
test
shrl
and
lods
rorl
int
into
xchg
inc
pop
imul
push
roll
arpl
mov
stc
lcall
sub
xor
aas
mov
add
xlat
push
cmp
fdivp
ljmp
cmp
pop
adc
sub
xlat
mov
and
mov
mov
std
repnz
fs
push
dec
inc
fwait
mov
out
insl
jge
inc
pop
mov
add
and
mov
sub
stos
mov
into
push
mov
push
pop
xchg
repz
pop
flds
movsb
rorl
std
and
cmp
into
mov
cltd
dec
sub
cmp
push
ret
xor
imul
daa
sbb
stc
loopne
sarl
pop
js
cmp
sbb
rcl
xchg
fstpl
mov
notl
test
dec
inc
lahf
dec
jo
fmull
inc
mov
imul
cmc
es
mov
mov
push
and
cmp
jmp
push
movl
add
add
ret
int
mov
inc
mov
rorl
dec
pop
or
xor
in
xchg
add
fimull
sub
xchg
inc
mov
cmp
test
adc
lock
out
out
sub
movsb
cmp
mov
ret
lods
out
arpl
cmp
ficompl
pop
scas
pop
add
sub
fisubrl
rcll
sti
xchg
sub
dec
fs
test
fisubl
shlb
mov
mov
sub
hlt
testb
sub
push
cld
repz
sarl
dec
test
cmp
mov
sub
movsb
cmp
mov
test
sub
pop
inc
cli
mov
xor
sti
popf
mov
call
sub
push
xor
roll
stos
jge
loopne
fbstp
push
popa
fidivs
push
xchg
shrl
and
in
xor
jmp
push
adc
and
movsb
dec
mov
pop
push
stos
push
jle
rcl
mov
mov
fdivrl
xchg
int
imul
out
repz
add
cmp
or
or
lods
jne
int
add
or
stos
jmp
jno
add
cmc
mov
lds
sbb
mov
outsb
add
pop
cmp
push
push
sbb
lret
data16
xchg
xacquire
fucomp
jns
xcrypt-ofb
cmpsl
lods
jnp
xchg
arpl
sbb
mov
leave
enter
mov
mov
in
jecxz
lods
cmp
mov
iret
es
mov
call
jne
and
frstor
pushf
cmp
ja
pop
les
roll
xchg
xchg
cmp
cs
jo
dec
xlat
or
cs
fsubl
push
mov
pop
adc
cmp
int
mov
imul
xchg
inc
test
adc
mov
iret
jo
cmp
subl
addl
add
or
stos
xchg
cmpsb
pusha
push
adc
push
sbb
mov
jecxz
or
fwait
out
lret
xor
leave
cmp
aas
test
jg
sbb
xchg
xor
cmp
xchg
shlb
pop
mov
addr16
pop
mov
xchg
push
out
xor
testb
call
cmp
pop
add
pop
pop
mov
cmp
insb
sub
and
sbb
insl
dec
push
pushf
sti
push
icebp
mov
std
fdivr
iret
filds
popf
sbb
push
jns
sbb
cmp
mov
mov
sub
sbb
add
clc
movsl
stos
loope
sbb
mov
jmp
fimuls
fadds
test
std
adc
cmp
add
scas
pop
lret
popa
mov
push
lods
mov
jno
arpl
insb
push
xor
leave
xchg
inc
mov
leave
sbb
je
into
cwtl
fs
sbbl
mov
adc
inc
mov
int
std
ret
add
in
add
imul
inc
push
jno
arpl
testb
fsubrs
cmp
loope
popa
test
out
stos
je
dec
xchg
and
jecxz
aaa
mov
fimull
sub
adc
adc
movsl
mov
daa
rorl
std
and
mov
adc
lret
daa
push
outsb
or
cmp
mov
add
push
fwait
xchg
or
and
push
mov
loop
aaa
ljmp
fidivs
mov
in
sar
int3
pop
cmp
ret
shr
sbb
dec
sbb
popa
shl
sbb
cmp
or
cmpb
clc
mov
in
out
into
sub
cmpsl
and
cmp
mov
je
dec
int
sti
inc
call
push
lcall
gs
out
sbb
inc
sub
push
mov
inc
jne
dec
cli
mov
mov
jp
push
aaa
sbb
or
sahf
cmpb
fimull
sub
nop
jecxz
clc
and
xchg
cwtl
or
mov
icebp
test
push
push
dec
xchg
aas
andb
ret
movsl
push
mov
loope
jno
sbb
xchg
lret
in
mov
sbb
cld
lea
fmulp
pop
dec
push
dec
dec
mov
mov
outsb
mov
cmc
sub
leave
adc
les
jns
pop
xor
mov
cmp
mov
js
mulb
icebp
ljmp
lds
fbld
mov
dec
nop
mov
call
ret
cmc
jae
adc
insb
cmp
sbb
sti
push
test
dec
ficompl
and
movsb
dec
mov
inc
dec
sub
jnp
cs
cmpsl
js
leave
inc
addr16
sub
mov
imul
popa
packsswb
lods
popf
and
xlat
out
mov
mov
pop
in
sub
in
sub
sbb
fdivrl
pop
jecxz
ret
das
sbb
sti
pop
sbb
jecxz
jg
cltd
data16
sbb
fnsave
movsl
cmpsb
pop
out
lahf
inc
into
or
xchg
jecxz
mov
jno
add
int
lret
cltd
and
cmpsl
jg
inc
int3
out
movsb
out
ljmp
cwtl
sahf
jae
scas
fcmove
out
inc
repnz
jecxz
push
iret
scas
push
aas
pop
inc
cmc
es
into
loopne
clc
clc
cmp
jle
out
sbb
inc
pop
cs
out
pop
pushf
in
push
lret
dec
movsb
inc
lods
mov
pop
lcall
int
insl
ret
addr16
sub
jne
add
push
jmp
sbbb
jnp
cltd
fdivs
lret
faddl
fstl
xor
ljmp
bound
xchg
pop
iret
jle
xor
cmp
mov
push
outsb
nop
add
inc
mov
popa
sub
inc
orb
jns
sub
mov
cmc
imul
sbb
and
enter
shl
sbb
and
aas
mov
xlat
add
jae
stos
lock
mull
into
pushf
lock
xor
leave
cmp
insb
ja
lahf
and
sahf
call
popa
cs
popa
test
cmp
aaa
push
cmp
xor
pop
and
cmc
jns
ds
sub
and
push
inc
imul
xlat
add
hlt
lret
lret
mov
mov
push
cmp
xor
mov
outsb
in
fistpll
push
push
add
es
mov
pushf
ret
hlt
mov
inc
testl
pop
cwtl
push
test
ret
in
dec
movsb
inc
stc
mov
cli
cmc
mov
ret
or
inc
and
xor
scas
inc
aas
sbb
mov
enter
adc
scas
into
orl
sub
push
or
xor
mov
jp
cmp
sub
mov
sub
sub
mov
jg
loope
cmp
mov
jns
scas
cs
cmpsl
js
leave
inc
addr16
pop
pusha
jne
jb
dec
in
mov
packsswb
lods
popf
and
xlat
out
enter
loope
sbb
mov
and
lahf
repz
lods
mov
sub
fsubl
mov
and
movsb
dec
mov
jno
jge
push
mov
cmp
xchg
sub
push
pop
pushw
xchg
sahf
inc
repnz
ss
std
aam
xchg
mov
dec
and
enter
sbb
sbb
inc
pop
and
adc
mov
fistps
inc
cmpsl
xchg
ljmp
popa
nop
cltd
xorb
ja
int
mov
enter
or
xor
sahf
push
push
xchg
sbb
fstl
cmp
jno
mov
push
fbstp
jo
inc
add
loopne
pop
repz
xchg
pusha
ss
dec
mov
lret
xchg
inc
jge
shl
inc
jo
mov
jns
dec
push
fcoms
mov
inc
lcall
jnp
stc
mov
lods
dec
adc
push
sti
xchg
pushf
out
mov
ret
daa
mov
inc
inc
add
mov
out
push
mulb
sbbl
test
pop
ljmpw
pop
cmp
repz
inc
pop
hlt
rcll
loopne
mov
fcomps
cmp
push
test
sti
int
lods
cmp
aam
ds
xor
das
stos
jecxz
fisubrl
dec
add
add
xchg
movsb
insl
dec
xor
call
and
mov
mov
lahf
adc
je
pop
adcb
jbe
outsb
cmp
lock
jge
jne
jne
std
dec
sbb
xchg
push
divl
fcomp
sub
pop
sub
push
mov
mov
adc
cmp
mov
jmp
dec
dec
mov
and
jnp
sbb
sub
xchg
add
add
xchg
loope
sbb
js
or
push
adc
adc
jmp
je
cmp
lods
shlb
push
nop
add
fistpll
jmp
sub
push
xlat
mov
mov
and
inc
and
jo
pop
loop
add
sub
push
pop
pushw
xchg
sahf
push
pop
push
add
xor
and
dec
lea
xchg
lret
cmp
and
adc
mov
adc
loopne
xchg
or
test
nop
xchg
lret
dec
jl
mov
push
mov
loop
scas
add
mov
jmp
inc
in
outsb
xor
test
sbb
test
faddl
dec
sbb
shll
aaa
in
cmpsb
leave
push
out
bound
xchg
adc
cmpsl
sbb
jmp
pop
add
imul
fmuls
pop
in
and
scas
outsb
mov
xchg
mov
in
test
jbe
mov
jae
xchg
pop
mov
adcl
jbe
mov
mov
mov
andl
push
fstl
push
xchg
movsb
mov
ret
je
insb
or
pop
shrb
adc
popf
cmp
outsb
xor
arpl
jae
mov
mov
ja
mov
mov
cwtl
sarb
mov
orl
mov
sbb
add
mov
dec
out
fwait
sub
ret
mov
and
pop
sub
das
outsb
repnz
push
fstp
repz
push
call
jmp
mov
popf
xchg
cmp
int
mov
jo
rcr
scas
lds
or
aas
add
cs
pop
pushf
lea
sub
xor
jno
and
mov
in
cmp
out
in
dec
fisubrl
inc
mov
inc
push
adc
xlat
dec
into
jb
or
jecxz
xchg
aam
jno
pop
out
mov
and
jl
inc
lods
fsubs
cli
scas
xor
xor
mov
pcmpeqb
jecxz
push
dec
loope
add
dec
rcrb
dec
sub
lahf
mov
hlt
out
fsubp
fdivrl
aad
push
lock
cmp
and
ljmp
and
sbb
or
lea
addb
int
outsl
popl
dec
aad
cmp
enter
bound
cmp
int3
xchg
dec
lods
sbb
cs
lds
fs
mov
lcall
out
gs
addr16
jo
out
adc
xchg
mov
pop
outsb
xor
dec
cmpsb
mov
mov
daa
std
jae
inc
popf
mov
inc
mov
jg,pn
push
fistps
add
jmp
scas
movsl
dec
popa
pop
xchg
push
cmp
std
xor
addb
movsb
testl
dec
lods
icebp
xor
lods
adc
in
jbe
inc
and
jne
cmp
testb
repz
jns
mov
outsl
mov
lea
cmpsl
and
loope
adc
dec
xor
mov
enter
out
gs
mov
dec
cld
xlat
stos
mov
dec
fidivs
add
in
stos
xlat
sub
cmpsl
inc
sbb
mov
pop
push
and
xor
sub
gs
dec
out
inc
mov
jp
xchg
pop
push
mov
std
push
mov
es
and
repz
jno
or
aaa
dec
out
pop
sti
pop
jns
adcl
cwtl
jne
adc
mov
in
mov
jns
sub
jge
out
mov
dec
fs
sbb
int
lods
cmp
popf
jg
xchg
jmp
js
fildll
mov
push
xchg
mov
dec
mov
clc
addl
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
mov
dec
aaa
js
xor
es
cmpsl
ret
push
fidivs
icebp
aam
xchg
add
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
adc
out
sub
jnp
fisttpll
sub
adc
inc
pop
cmpsb
hlt
adc
xor
cmp
lods
popf
and
xlat
out
cmpsb
loopne
aas
add
push
mov
jge
cmp
int
scas
push
or
xchg
add
fwait
mov
pop
dec
clc
dec
xor
pop
lret
add
push
nop
fsubs
or
ja
dec
je
jnp
leave
xchg
ja
mov
lcall
data16
fists
adc
mov
adc
mov
adc
mov
adc
test
or
cmp
lods
popf
and
xlat
out
pushf
outsb
dec
mov
jae
pop
sub
fsts
lods
ja
mov
mov
cmp
mov
bound
insb
xor
loop
xchg
jmp
and
rolb
adc
mov
sub
out
sub
inc
jmp
rolb
pop
out
and
movsb
dec
mov
cmp
dec
mov
pop
iret
std
movsb
enter
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
push
xor
jle
adc
cmpsl
ret
mov
pop
aam
xchg
add
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
mov
sahf
xchg
int
inc
sbb
mov
adc
enter
xor
loopne
cmp
jl
lret
repnz
out
cmpsl
ret
pop
test
lret
xchg
add
mov
shr
xchg
lds
adc
mov
adc
pop
call
fsubl
mov
cmp
lods
popf
and
xlat
out
mov
mov
cmp
mov
adc
dec
add
jnp
icebp
mov
push
fwait
mov
mov
xadd
lret
ret
mov
subl
mov
mov
jmp
mov
aas
pop
inc
cmc
es
mov
jg
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
lahf
sub
jne
push
std
es
cmpsl
ret
sbb
or
aam
xchg
add
mov
shr
xchg
lds
adc
mov
adc
mov
inc
mov
cmp
lods
popf
and
xlat
out
mov
fiaddl
out
pop
mov
push
cmp
sub
nop
mov
test
push
lea
dec
lcall
cmp
jo
inc
repnz
vhaddpd
pop
and
lds
pop
mov
push
outsl
and
in
out
fdivs
les
loopne
cwtl
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
dec
jae
aaa
call
or
sbbb
push
push
insl
or
and
lcall
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
mov
adc
andb
dec
vmread
adc
icebp
pop
pushf
test
pop
iret
or
sbb
dec
fwait
repnz
mov
add
call
mov
jl
push
mov
and
test
mov
loopne
push
clc
test
mov
fwait
cmp
popa
stos
sub
jnp
adc
popa
repz
cmp
iret
inc
adc
mov
xchg
mov
cmp
adc
mov
adc
mov
adc
mov
adc
andb
dec
vmread
adc
adc
fcomps
and
icebp
xchg
sbb
or
into
push
push
fs
jge
mov
mov
mov
shl
sar
sub
and
je
push
je
dec
xor
stos
sbb
xor
xor
push
scas
daa
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
leave
repz
and
je
add
cmp
xlat
xor
mov
cmp
or
sub
pop
clc
addl
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
into
popa
jae
xchg
sar
repz
ret
rorb
dec
mov
ljmp
adc
mov
adc
mov
adc
js
rcrb
mov
es
icebp
inc
into
out
jmp
or
int3
fcmovnb
int
push
pop
inc
cli
mov
shr
xchg
lds
adc
mov
adc
lcall
test
xor
in
or
out
push
cltd
dec
sub
or
pop
lock
cmp
enter
cmp
xor
aas
bound
test
add
outsb
andl
test
bound
xchg
sub
xchg
push
push
mov
incl
stos
xor
sub
sub
out
sbb
cltd
push
sti
or
fiadds
aam
inc
xchg
adc
sub
out
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
cmp
jl
lret
mov
mov
adc
enter
xor
loopne
icebp
inc
ficoml
hlt
rcrb
pop
iret
std
movsb
enter
enter
xor
loopne
xor
xlat
inc
shlb
push
loope
testl
dec
int3
mov
inc
dec
jns
mov
adc
enter
xor
loopne
add
mov
cmp
xchg
xor
pop
fucom
jno
addl
mov
adc
enter
xor
loopne
dec
jae
aaa
call
or
sbbb
subl
pop
xorb
fisubs
or
lcall
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
mov
adc
andb
dec
vmread
adc
adc
fisttpl
scas
xlat
xchg
sbb
or
push
adc
into
outsb
shl
jg
ret
test
pop
imul
inc
mov
push
je
dec
xor
stos
sbb
xor
xor
push
scas
daa
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
push
push
mov
push
orb
insb
inc
inc
jns
or
sub
pop
clc
addl
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
dec
sub
test
ret
rorb
dec
mov
ljmp
adc
mov
adc
mov
adc
js
rcrb
mov
es
icebp
inc
push
scas
inc
rclb
or
int3
fistpl
jo
pop
pop
mov
test
call
out
adc
mov
adc
andb
dec
vmread
adc
adc
cmp
mov
xchg
sbb
or
xor
mov
ljmp
mov
xchg
mov
popa
mov
adc
mov
adc
mov
adc
lcall
test
xor
arpl
jp
dec
push
lods
pop
jmp
lock
cmpsb
sub
pop
fldenv
cmp
xor
aas
bound
enter
outsb
andl
test
ds
stos
mov
mov
cwtl
and
pop
xchg
push
push
mov
incl
pop
jmp
jne
sahf
inc
sbb
out
sbb
or
and
jmp
or
sbb
lahf
xchg
and
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
adcb
xchg
mov
mov
adc
enter
xor
loopne
mov
aad
test
rcrb
pop
iret
std
movsb
enter
enter
xor
loopne
mov
or
inc
push
loope
testl
dec
int3
mov
inc
dec
jns
mov
adc
enter
xor
loopne
sbb
es
insb
ret
mull
mov
in
clc
addl
mov
adc
enter
xor
loopne
dec
jae
aaa
call
or
sbbb
add
fwait
lret
mov
xorb
fisubs
or
lcall
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
mov
adc
andb
dec
vmread
adc
adc
adc
pop
jbe
xchg
sbb
or
call
out
jne
int3
xchg
push
ja
mov
add
sbb
mov
xor
push
cmp
lcall
adc
inc
lds
xlat
ja
mov
and
push
scas
daa
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
mov
popf
icebp
sbb
inc
fisubrs
jae
mov
lea
and
or
sub
pop
clc
addl
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
lea
cld
je
cmpb
add
mov
xor
ljmp
adc
mov
adc
mov
adc
js
rcrb
mov
es
icebp
inc
xor
pop
addr16
xor
sub
int3
aam
and
leave
std
daa
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
andb
dec
vmread
adc
adc
mov
lock
mov
stos
fadd
orl
adc
push
movsb
xchg
loope
jnp
and
mov
adc
mov
adc
mov
adc
lcall
test
xor
insb
push
or
jmp
lock
rcl
mov
xor
aas
bound
push
sub
scas
sub
lret
test
pop
or
or
cwtl
and
pop
xchg
push
push
mov
incl
ss
push
fnstenv
jmp
sbb
ja
xor
sbb
pop
lret
lods
add
lcall
and
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
cmpsl
cmp
and
xchg
fisttpll
sub
adc
enter
xor
loopne
leave
negl
xchg
pop
outsl
cmp
lret
mov
iret
std
movsb
enter
enter
xor
loopne
xchg
shll
mov
push
loope
testl
dec
int3
mov
inc
dec
jns
mov
adc
enter
xor
loopne
daa
add
loop
adc
cmc
mov
cmp
in
clc
addl
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
push
mov
adc
in
in
sub
in
movsb
int
loop
fisubrl
pop
cli
or
sub
pop
clc
addl
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
bound
fisttpll
test
jge
ret
rorb
dec
mov
ljmp
adc
mov
adc
mov
adc
inc
mov
or
aad
cmp
in
ficompl
xchg
outsl
xchg
les
jnp
jp
cmpsl
repz
sub
sar
jle
xor
push
icebp
dec
outsb
xorb
int
mov
cmp
push
mov
dec
out
xchg
incb
jb
cli
jmp
ja
adc
out
outsl
pop
pop
popa
mov
add
pop
sub
in
push
xor
popf
dec
push
jbe
cmp
cmp
adc
jb
push
rcrb
mov
lahf
cwtl
addr16
cmpl
jb
ret
pop
mov
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
push
pushf
push
std
mov
xchg
inc
jge
sbb
jbe
outsl
or
out
ja
xchg
lods
mov
aaa
fwait
into
shll
or
mulps
or
dec
negl
andb
push
fcoml
rcrb
push
adc
mov
adc
inc
mov
and
and
or
loope
pop
mov
vpcmpgtw
sub
movsb
add
sbb
std
sti
xchg
rcll
outsb
mov
and
dec
dec
jb
lock
shrb
rcll
out
cmpb
cmpl
fucomi
mov
cmp
cli
jmp
dec
or
xchg
js
dec
aad
idivb
ds
push
movb
loopne
xchg
shll
cmp
inc
fwait
cmpsl
pop
push
xor
lods
flds
sbb
push
dec
jl
mov
mov
push
mov
int
clc
arpl
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
js
rcrb
mov
add
mov
mov
int
ja
popa
popf
ffreep
out
dec
adc
xchg
lret
sbb
imul
dec
mulb
and
xchg
addl
stos
xor
push
repnz
adc
mov
adc
mov
adc
mov
adc
andb
dec
vmread
adc
push
adc
lret
mov
inc
push
mov
mov
sub
add
sub
incb
sti
sbb
ret
fisttps
clc
in
cltd
ljmp
xchg
addr16
mov
subb
aas
lock
mov
add
and
add
add
adc
mov
adc
mov
adc
mov
adc
jl
jl
dec
xor
and
mov
mov
inc
dec
adc
cmp
addl
mov
adc
mov
adc
repnz
inc
lcall
push
adc
pop
push
sbb
lds
jmp
lock
mov
fisttpll
sub
adc
mov
adc
enter
xor
loopne
test
enter
xor
jge
sbb
inc
mov
jl
pop
xchg
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
jge
out
mov
pop
outsl
outsb
lods
icebp
jecxz
jecxz
sub
daa
or
stos
mov
out
mov
xor
aam
cmp
or
cli
mov
adc
mov
adc
enter
xor
loopne
subb
mov
test
cmpsb
mov
lcall
pop
xchg
mov
adc
mov
adc
inc
mov
stos
cmp
cli
into
cs
cmp
in
ficompl
xor
inc
push
out
jne
jnp
jp
cmpsl
repz
nop
out
loopne
jmp
incl
jmp
add
jno
xchg
jne
mov
jmp
and
jns
mov
enter
mov
aas
cmp
cli
jmp
cmp
outsb
add
out
outsl
pop
pop
popa
jno
adc
mov
repz
pop
jbe
adcl
jmp
sbb
cmp
cmp
adc
jb
cmpsb
dec
imulb
pop
jno
cwtl
addr16
cmpl
jb
ret
pop
mov
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
inc
mov
and
and
or
loope
stc
adc
inc
popf
inc
repz
push
dec
insb
mov
mov
ret
push
pushf
test
int3
testl
dec
loopw
or
and
dec
dec
jb
push
jl
sub
mov
rcll
out
cmpb
xor
pop
es
xchg
stos
adc
cmp
cli
jmp
xchg
js
dec
aad
inc
dec
adc
inc
pop
jns
jbe
mov
jo
cld
push
inc
imul
clc
or
bndstx
push
dec
jl
mov
mov
push
mov
int
clc
arpl
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
js
rcrb
mov
add
jno
pop
fistpll
in
stos
out
dec
ja
popa
popf
ffreep
out
dec
adc
ficomps
fwait
inc
std
mov
jp
lock
out
xchg
sarl
xchg
addl
stos
xor
push
repnz
adc
mov
adc
mov
adc
mov
adc
andb
dec
vmread
adc
sub
xor
repz
mov
mov
mov
sub
add
dec
push
xor
or
add
dec
inc
clc
in
cltd
ljmp
xchg
addr16
mov
out
es
inc
or
mov
add
and
add
add
adc
mov
adc
mov
adc
mov
adc
jl
jl
dec
xor
and
mov
mov
pop
pop
mov
addb
xchg
mov
adc
mov
adc
repnz
inc
lcall
push
adc
pop
push
sbb
lds
jmp
lock
mov
fisttpll
sub
adc
mov
adc
enter
xor
loopne
xlat
mov
mov
cld
mov
push
and
inc
mov
jl
pop
xchg
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
jge
out
mov
pop
outsl
outsb
in
pop
fnstsw
sahf
pusha
jl
or
stos
mov
out
mov
xor
aam
cmp
or
cli
mov
adc
mov
adc
enter
xor
loopne
subb
mov
test
cmpsb
mov
lcall
pop
xchg
mov
adc
mov
adc
inc
mov
jno
ret
scas
push
fnstcw
addr16
in
ficompl
lcall
movsb
jnp
jp
cmpsl
repz
xchg
je
ret
push
cmc
lock
leave
inc
xlat
inc
sub
pop
jp
lods
cltd
mov
add
push
mov
das
clc
lret
movsl
insl
stos
adc
cmp
cli
jmp
jns
cmc
inc
fsub
pop
outsl
pop
pop
popa
xor
add
in
push
xor
fdivrs
loope
mov
cmp
cmp
adc
jb
adc
outsb
stos
pop
jno
cwtl
addr16
cmpl
jb
ret
pop
mov
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
inc
mov
and
and
or
loope
arpl
or
setb
mov
xor
push
sti
loop
mov
fildll
push
sbb
push
aaa
push
nop
imul
push
jmp
ffreep
push
outsl
test
out
cmpb
mov
sub
and
aas
cmp
cli
jmp
dec
jl
mov
jge
aad
inc
pop
push
aaa
pushf
or
mov
jbe
cmpsb
clc
xchg
shll
cmp
inc
lcall
mov
lds
sbb
push
dec
jl
mov
mov
push
mov
int
clc
arpl
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
js
rcrb
mov
add
cmp
hlt
xchg
sbb
stos
out
dec
ja
popa
popf
ffreep
out
dec
adc
mov
mov
mov
mov
pop
fidivs
jne
xlat
jns
fimull
mov
xor
push
repnz
adc
mov
adc
mov
adc
mov
adc
andb
dec
vmread
adc
mov
xor
call
and
pop
mov
sub
add
popa
shlb
pop
dec
push
pop
fisttps
clc
in
cltd
ljmp
xchg
addr16
mov
scas
mov
jo
inc
or
mov
add
and
add
add
adc
mov
adc
mov
adc
mov
adc
jl
jl
dec
xor
and
mov
mov
cmp
inc
clc
addl
mov
adc
mov
adc
repnz
inc
lcall
push
adc
pop
push
sbb
lds
jmp
lock
mov
fisttpll
sub
adc
mov
adc
enter
xor
loopne
push
das
mov
mov
jno
mov
inc
mov
jl
pop
xchg
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
jge
out
mov
pop
outsl
outsb
ret
dec
or
test
push
je
or
stos
mov
out
mov
xor
aam
cmp
or
cli
mov
adc
mov
adc
enter
xor
loopne
subb
mov
test
cmpsb
mov
lcall
pop
xchg
mov
adc
mov
adc
pop
push
sbb
das
movsl
rolb
add
adc
dec
xor
and
icebp
aad
jnp
mov
in
mov
or
add
addl
mov
adc
mov
adc
enter
xor
loopne
cmpsl
xor
or
sub
mov
rcrb
xor
loopne
mov
cmp
movsl
outsl
jb
pop
jnp
clc
jno
mov
cld
mov
adc
mov
adc
enter
xor
loopne
jnp
lahf
es
ja
mov
fndisi(8087
adc
add
lock
mov
add
and
test
xchg
popf
mov
adc
enter
xor
loopne
sub
push
hlt
rcrb
pop
iret
std
movsb
enter
enter
xor
loopne
sbb
je
scas
orl
or
dec
loopne
stc
dec
int3
mov
inc
dec
jns
mov
adc
enter
xor
loopne
into
pop
pop
xchg
insl
in
adc
in
and
and
xor
pop
fucom
jno
addl
mov
adc
enter
xor
loopne
inc
mov
pusha
mov
adc
mov
adc
pop
push
sbb
das
movsl
rolb
add
adc
dec
xor
and
mov
xchg
sbb
jmp
test
push
or
inc
xor
xchg
mov
adc
mov
adc
enter
xor
loopne
out
pop
hlt
push
in
nop
mov
cmp
mov
rcrb
xor
loopne
mov
cmp
lret
and
out
jg
jnp
push
mov
cld
mov
adc
mov
adc
enter
xor
loopne
mov
ss
xlat
fndisi(8087
adc
add
lock
mov
add
and
test
xchg
popf
mov
adc
enter
xor
loopne
inc
mov
pusha
mov
adc
mov
adc
pop
push
sbb
das
movsl
rolb
add
adc
dec
xor
and
das
adcl
or
inc
xor
xchg
mov
adc
mov
adc
enter
xor
loopne
inc
std
dec
jb
cmpsl
dec
loop
mov
jp
mov
rcrb
xor
loopne
mov
cmp
rorb
lea
push
mov
cld
mov
adc
mov
adc
enter
xor
loopne
and
mov
fucomip
mov
fndisi(8087
adc
add
lock
mov
add
and
test
xchg
popf
mov
adc
enter
xor
loopne
inc
mov
pusha
mov
adc
mov
adc
enter
xor
loopne
subb
mov
test
cmpsb
mov
lcall
pop
xchg
mov
adc
mov
adc
cmp
inc
inc
push
movsl
jae
test
adc
dec
mov
jae
dec
pop
xchg
imul
sahf
mov
enter
push
cmp
fcmovu
push
adc
outsl
jecxz
fwait
mov
xor
push
scas
daa
mov
adc
mov
adc
jb
and
mul
push
adc
cmp
inc
inc
push
movsl
jae
sbb
mov
mov
mov
xor
xchg
imul
sahf
mov
enter
push
cmp
fcmovu
push
adc
outsl
jecxz
fwait
mov
xor
push
scas
daa
mov
adc
mov
adc
jb
and
mul
push
adc
cmp
inc
inc
push
movsl
jae
scas
lock
push
and
jae
dec
pop
xchg
imul
sahf
mov
enter
push
cmp
fcmovu
push
adc
outsl
jecxz
fwait
mov
xor
push
scas
daa
mov
adc
mov
adc
jb
and
mul
push
adc
das
sbb
cmpl
cwtl
shrb
sbb
mov
add
leave
sub
and
jnp
mov
in
cmpsl
jecxz
ja
mov
xor
fstpt
loopne
arpl
popa
pop
dec
adc
int
cmp
addb
scas
cmp
shll
pop
xchg
cmovae
out
fdivl
mov
rorb
mov
mov
lea
add
lea
inc
dec
sbb
mov
sub
or
test
mov
add
push
and
adc
loopne
fucomp
push
out
sub
pusha
lcall
jbe
pushf
pusha
movsb
in
imul
scas
aas
out
lret
sbb
fsts
or
sub
fs
add
in
xor
and
mov
push
mov
in
dec
xchg
pop
pop
sub
xor
stos
pop
xor
enter
iret
pop
push
cmpsl
nop
cs
push
fs
and
fisubrs
adc
std
jb
jl
mov
decl
shlb
je
mov
jp
jecxz
mulb
rcrb
fwait
dec
jbe
lcall
or
or
jbe
dec
into
pop
test
hlt
insb
daa
xor
mov
movsl
jecxz
cmp
mov
insl
mov
aam
xchg
push
fcmovnbe
xor
mov
ja
mov
xor
mov
lods
pop
mov
jle
cmpsl
push
insl
test
cltd
xor
iret
lea
lret
ja
bound
out
mov
push
repz
fidivl
xchg
sbb
pop
add
push
sbb
jno
adc
arpl
daa
stos
sub
das
or
sub
test
movsl
cmp
fs
stos
sub
das
pop
jecxz
sbb
and
roll
test
mov
push
push
jns
or
ja
in
mov
xchg
out
orl
sbb
fisubrl
push
jle
xchg
stos
mov
dec
loopne
xchg
pop
adc
aad
outsb
sub
mov
cmpsl
cmp
jbe
jb
dec
sbbb
or
xor
mov
roll
clc
push
aaa
push
jecxz
fisttpl
xchg
mov
xchg
insb
push
out
pop
jl
leave
sub
cltd
cmpsb
repnz
dec
pop
mov
cs
cmpb
xchg
cmp
mov
lret
inc
mov
mov
jno
cwtl
ret
cmp
xorl
ja
inc
sti
jnp
pop
pop
outsb
out
xor
and
sbbb
hlt
fcmovnb
movsl
mov
aad
dec
stos
pop
xor
mov
mov
shll
cwtl
ret
leave
fcmovne
out
mov
ret
push
adc
loop
mov
lret
xor
push
push
das
iret
dec
push
or
push
lea
pop
pop
arpl
push
add
lds
mov
loop
sarb
enter
dec
sbb
mov
sub
dec
fiaddl
pop
out
xor
addb
int3
ja
mov
pop
xlat
push
add
jecxz
adc
call
mov
sub
adc
in
lock
fisubrl
mov
hlt
leave
aad
xchg
lods
out
pop
pop
mov
call
mov
cmp
imul
or
and
enter
lret
aaa
dec
je
pop
int3
sbb
xchg
fwait
inc
enter
movsl
inc
push
cmp
sahf
mov
add
mov
imul
aas
call
mov
xlat
push
sbb
andl
push
cmc
push
jg
xlat
or
mov
jecxz
xor
xor
stc
mov
ja
mov
push
or
push
loope
sbb
sahf
outsb
adc
xor
sbb
lret
pop
movsb
cmpsb
loopne
and
pop
nop
loope
fdivrs
shll
cmp
dec
mov
inc
inc
add
sbb
inc
jnp
cmp
pop
add
jle
sub
adc
dec
pop
or
hlt
push
pop
push
push
push
or
push
pop
xor
scas
cmp
sub
sbb
int
lods
cmp
add
mov
lods
mov
or
pop
jmp
adc
push
cli
push
cmp
sbb
test
aas
ljmp
mov
test
pop
fistps
pop
jg
icebp
jns
in
lahf
and
jo
xor
addb
mov
sub
mov
outsb
sbb
pop
les
imul
loope
iret
push
add
lds
mov
arpl
or
and
or
and
sbb
outsl
scas
std
shl
dec
adc
push
cli
push
cmp
int
int3
dec
hlt
inc
mov
sbb
xor
decb
stos
push
js
stc
dec
loop
xor
pushf
and
cmp
pop
mov
lds
popa
sbb
cmp
mov
mov
sub
xor
sbb
pop
les
xchg
and
inc
arpl
push
add
lds
mov
or
popf
packsswb
sbb
or
add
pusha
icebp
hlt
loope
nop
test
xchg
mov
xor
mov
test
adc
jnp
lea
test
test
mov
mov
xchg
push
loop
push
call
in
mov
cmp
mov
mov
sub
push
cmp
aaa
mov
sbb
pop
les
dec
inc
dec
mov
add
insb
mov
sub
and
test
sub
fdivrl
stc
push
push
std
fistps
add
jne
sbb
jge
inc
xchg
mov
mov
xor
jl
mov
dec
mov
rcr
mov
or
stc
pop
jle
sbb
jecxz
mov
cmpsl
dec
adcl
mov
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
aas
pop
in
clc
imul
popf
and
xlat
out
mov
dec
add
cmp
cmp
add
jb
pop
lahf
push
cli
data16
xchg
add
dec
dec
sbb
jo
in
scas
xchg
cmpsl
cltd
jmp
xchg
fisubl
das
adc
into
xor
jle
imul
shlb
mov
mov
inc
add
call
mov
shl
not
lods
lcall
dec
daa
test
mov
xlat
out
mov
cmp
in
out
jae
dec
mov
mov
inc
inc
sti
das
inc
negb
iret
test
popa
add
test
fidivl
or
gs
cwtl
pushf
data16
movsb
push
lods
inc
adc
into
mov
jmp
js
jle
pop
decl
enter
fldl
xchg
les
and
stc
mov
mov
cmpsb
mov
jp
mov
sub
andps
and
mov
loop
adc
ss
aas
or
adc
sub
cmpsb
aaa
mov
sub
or
loop
fwait
push
adc
dec
inc
cmp
pusha
or
nop
in
dec
sub
faddl
clc
imul
outsb
sub
mov
test
in
in
je
xchg
ret
pop
jb
mov
add
cs
mov
add
mov
mov
dec
pop
mov
fdivp
arpl
mov
repz
mov
ret
add
jbe
outsb
adc
in
sbb
mov
pop
or
mov
dec
and
sbb
hlt
adc
dec
fsub
mov
iret
xchg
jns
fldcw
xlat
lret
push
jp
mov
orb
lret
xchg
rcrl
jmp
sub
les
and
loope
call
sbb
xchg
mov
rcll
sub
mov
add
jns
es
jecxz
jno
jnp
popf
cbtw
xchg
add
pop
jg
popa
test
out
and
inc
dec
jns
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
shll
popa
packsswb
lods
popf
and
xlat
out
pushf
outsb
dec
mov
movsl
xlat
or
int3
push
push
lods
ja
sbb
jle
fnstsw
mov
testl
jge
add
and
movsb
cld
stos
scas
in
or
xchg
push
out
add
outsl
mov
in
add
pop
mov
ss
loopne
call
add
dec
aas
xchg
sub
xchg
mov
inc
fdivrs
pop
pusha
sbb
movsl
push
xor
outsb
mov
fidivs
mov
jbe
pop
jbe
divb
and
push
xor
inc
sbb
add
into
mov
mov
xor
sub
bound
xchg
mov
sbb
pop
push
dec
mov
cmovp
mul
iret
jg
inc
push
mov
pusha
iret
imul
xchg
arpl
data16
xchg
xchg
cmpsb
cmp
mov
and
sbb
sbb
ds
xor
pop
sbb
cmp
rcl
js
and
lcall
push
push
mov
aaa
cld
insb
jb
out
and
ja
dec
jle
pop
imul
sub
sub
arpl
xlat
jns
mov
bnd
icebp
jle
into
dec
mov
sbb
sbb
and
mov
lret
dec
xchg
push
mov
sarb
xchg
in
fwait
jbe
and
jae
lock
sbb
push
mov
pop
stos
ds
inc
cltd
add
insb
sbb
fldt
push
int3
push
cli
js
xlat
dec
test
ficompl
outsb
insl
movsl
mov
mov
pusha
sub
stc
shrl
or
jne
sbb
dec
in
std
jg
notl
dec
mov
add
into
mov
aad
das
sub
fucomip
cmp
mov
fisubl
adc
pop
icebp
call
enter
mov
jl
pop
jo
aad
push
pop
sbb
mov
inc
in
sbb
int
lods
cmp
aam
and
sti
popa
dec
add
add
xchg
mov
push
scas
daa
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
jbe
push
push
push
rolb
mov
lods
popf
and
xlat
out
lods
dec
cmpb
jne
mov
adc
push
insb
adc
adc
xchg
add
dec
cmc
pop
xorl
cmpsl
js
leave
inc
sbb
push
add
enter
out
adc
mov
adc
mov
adc
mov
adc
cmp
lods
cmp
lods
popf
and
xlat
out
dec
add
sub
mov
int3
mov
sarl
pop
inc
les
insb
mov
xor
mov
loopne
fldt
mov
das
and
ds
xor
push
repz
sbb
adc
std
stos
xchg
fldenv
jmp
mov
icebp
daa
out
fidivrl
stc
out
cmpsl
movsl
nop
add
test
daa
adc
sbb
xlat
pop
and
scas
mov
and
adc
or
les
in
outsl
mov
push
mov
or
aas
adc
xchg
xchg
push
lods
cmpsl
in
pushf
sub
enter
sub
sub
pop
mov
call
xchg
sub
jl
dec
data16
rcr
test
inc
lods
add
jle
fmulp
cmp
insb
ror
mov
outsl
repnz
sti
adc
mov
xorl
jns
add
dec
dec
dec
pop
js
mov
pop
cmc
insb
xlat
ljmp
fsubl
sbb
adc
xor
cld
test
ror
mov
repz
and
les
pop
push
sahf
in
jno
popf
push
pop
sbb
sub
shlb
mov
dec
hlt
jl
cmp
movsb
adc
sub
insl
rolb
inc
rorb
aaa
cmp
jl
xchg
or
xchg
adc
roll
xchg
mov
mov
test
cmp
out
inc
mov
inc
cli
notb
pop
mov
push
push
xchg
pminsw
and
scas
test
adc
aad
ja
push
cmpsl
movl
loope
dec
xchg
aam
mov
enter
push
rolb
cwtl
jbe,pt
sahf
jle
repnz
push
add
lods
adc
push
fistps
aaa
sub
dec
cld
into
es
pushf
insb
stc
cmp
inc
in
nop
jle
inc
sti
not
inc
pop
lea
mov
gs
xchg
sub
xchg
inc
mov
hlt
and
sahf
nop
stos
js
lcall
push
push
loopne
mov
movsb
and
xor
sub
and
dec
fsts
clc
add
adc
and
jns
lahf
push
cli
data16
xchg
add
dec
cmp
rorb
fisttpl
cwtl
cld
lds
dec
add
scas
jbe
aad
inc
test
stos
in
xchg
adc
sub
add
xor
pop
js
sub
cmpxchg
shl
not
lods
lcall
sub
ljmp
push
rsqrtps
sub
ret
popa
cmp
xchg
loopne
or
imul
std
pop
lods
test
fidivl
or
hlt
pop
cmp
movsb
push
lods
inc
adc
pop
cmpsl
sub
fdiv
hlt
ror
out
mov
mov
pushf
movsl
push
xor
cmp
sbb
push
xchg
jne
cs
mov
mov
cmp
push
sarb
aaa
lock
ret
mov
adc
push
nop
lret
dec
mov
inc
add
andl
sahf
push
js
mov
lods
mov
rolb
shrl
dec
push
adc
mov
scas
add
xchg
pusha
or
add
xchg
push
pop
cld
pop
clc
imul
outsb
sub
mov
das
int
mov
or
jl
gs
das
push
cwtl
lods
pushl
mov
and
mov
adcl
mulb
ret
push
adc
push
sub
inc
lret
mov
ret
cltd
scas
push
and
mov
fcmovu
ficompl
divb
adc
iret
sbb
inc
pop
mov
fwait
xlat
xchg
xor
int
mov
stos
shll
xlat
lret
inc
mov
stc
insl
add
mov
or
hlt
inc
mov
lods
sub
add
inc
nop
push
notl
pop
inc
adc
mov
outsb
jecxz
arpl
lahf
dec
gs
rorl
push
and
xor
dec
fildl
cmc
adc
cbtw
xchg
add
cmp
inc
dec
cs
cmpsl
js
leave
inc
sbb
push
add
enter
out
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
dec
movsb
jle
mov
mov
lods
popf
and
xlat
out
mov
fiaddl
mov
xor
pop
pop
pop
pop
inc
push
push
and
and
mov
lahf
aam
push
mov
mov
outsb
push
pop
cltd
add
jns
fldt
mov
fbld
xchg
add
inc
nop
xlat
inc
fsubrs
cmpsl
js
leave
inc
sbb
push
add
enter
out
adc
mov
adc
mov
adc
mov
adc
test
jge
rcr
mov
arpl
lods
popf
and
xlat
out
cltd
insl
mov
outsl
fcoms
cmp
cmp
jbe
mov
divl
scas
push
and
and
divl
stc
shrl
je
popa
inc
lcall
outsb
push
jg
enter
push
sub
lods
or
jnp
leave
sbb
cs
inc
cltd
std
imul
xchg
imul
shl
mov
jp
push
cli
or
push
jo
repnz
add
imul
sbb
push
jno
mov
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
cmp
lods
popf
and
xlat
out
mov
fiaddl
mov
cwtl
test
inc
push
push
and
and
cli
push
mov
pop
or
rorb
js
pop
or
ja
jge
clc
icebp
testl
xchg
out
add
nop
add
std
xor
sbb
icebp
inc
sub
push
fmull
fldenv
scas
popa
dec
add
add
xchg
mov
push
scas
daa
mov
adc
mov
adc
mov
adc
mov
adc
jecxz
fwait
ss
sbb
daa
cmp
lods
popf
and
xlat
out
das
rorl
imull
mov
shll
mov
or
pop
dec
and
test
aad
arpl
dec
mov
out
jae
notb
call
mov
pusha
cmovae
sbb
inc
sbb
or
mov
mov
das
js
cmp
sti
or
dec
mov
sub
mov
and
inc
dec
jns
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
lcall
mov
lods
popf
and
xlat
out
das
rorl
imull
mov
mov
xor
inc
ds
or
lahf
mov
aad
arpl
dec
mov
out
jae
imulb
ljmp
in
enter
hlt
dec
ficompl
scas
ljmp
imul
sbb
cmc
js
cmp
sti
or
test
clc
pop
and
mov
and
inc
dec
jns
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
int3
scas
ret
mov
pop
cmp
lods
popf
and
xlat
out
lods
dec
cmpb
jne
mov
adc
aaa
or
dec
fadds
daa
cbtw
xchg
add
xor
cmpsl
js
leave
inc
sbb
push
add
enter
out
adc
mov
adc
mov
adc
mov
adc
icebp
testb
cmp
lods
popf
and
xlat
out
lods
dec
cmpb
jne
mov
adc
jl
push
mov
cwtl
xchg
add
jbe
imul
adc
inc
sbb
push
add
enter
out
adc
mov
adc
mov
adc
mov
adc
in
xchg
push
cld
scas
inc
pop
cmp
lods
popf
and
xlat
out
lods
dec
cmpb
jne
mov
adc
add
push
cbtw
xchg
add
daa
gs
cs
cmpsl
js
leave
inc
sbb
push
add
enter
out
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
rcll
test
xor
lods
in
mul
push
adc
into
adcb
cmp
lods
popf
and
xlat
out
lods
dec
cmpb
jne
mov
adc
scas
add
ficomps
cmpsl
cbtw
xchg
add
push
cs
cmpsl
js
leave
inc
sbb
push
add
enter
out
adc
mov
adc
mov
adc
mov
adc
das
test
xchg
mov
sbb
mov
lods
popf
and
xlat
out
mov
pop
mov
inc
adc
mov
mov
adc
add
popf
sub
or
push
jo
repnz
inc
lods
hlt
clc
dec
mov
jl
gs
out
sbb
push
jno
mov
mul
push
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
mov
mov
xor
lods
in
mul
push
adc
enter
xor
loopne
jns
dec
imul
xchg
xor
lods
in
mul
push
adc
cmp
sub
cmp
lods
popf
and
xlat
out
mov
fiaddl
mov
and
sarb
icebp
mov
push
push
and
and
lcall
repnz
mov
cli
mov
shll
xchg
call
repnz
lds
mov
jl
sbb
orl
or
push
pop
iret
std
movsb
enter
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
cmp
cmp
lods
popf
and
xlat
out
daa
push
je
lret
jge
jmp
sub
push
add
mov
mov
jno
mov
pop
dec
clc
dec
xor
mov
dec
sar
pop
divb
push
nop
fsubs
in
test
or
int3
movsb
mov
mov
adc
xchg
adc
icebp
fidivrs
call
or
shlb
incl
push
xchg
mov
push
scas
daa
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
inc
ljmp
mov
lods
popf
and
xlat
out
daa
push
je
lret
jge
mov
imul
insl
dec
and
call
mov
mov
mov
pop
dec
clc
dec
xor
leave
repnz
mov
adc
les
out
add
pop
fcoml
stos
test
pop
push
test
jb
loopne
and
lret
frstor
cld
pop
fucomip
and
negb
les
sti
lea
mov
repnz
out
sbb
jnp
repnz
mov
mov
and
mov
and
mov
push
and
iret
std
movsb
enter
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
push
dec
or
ja
cmp
lods
popf
and
xlat
out
daa
push
je
lret
jge
lret
pop
xchg
loopne
adc
ret
or
loopne
mov
clc
icebp
testl
das
jp
cmc
and
ljmp
xlat
adc
push
push
and
and
nop
lret
jne
xlat
out
mov
pop
popf
fmull
int3
fs
mov
fsubrp
mov
cmp
dec
mov
mov
mov
js
leave
inc
sbb
push
add
enter
out
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
adc
jne
adc
pop
ss
sar
decb
out
adc
mov
adc
enter
xor
loopne
add
fadd
gs
inc
lock
decb
out
adc
mov
adc
in
push
ret
scas
lret
popa
packsswb
lods
popf
and
xlat
out
daa
push
je
lret
jge
mov
loopne
or
test
jecxz
push
xchg
sti
bnd
sbb
mov
pop
stos
inc
mov
lret
clc
dec
xor
pushf
test
adc
les
out
cmpsl
mov
dec
mov
add
test
pop
push
test
jb
loopne
and
loopne
push
inc
les
sub
cld
pop
or
lret
ds
add
or
sbb
js
jnp
leave
xchg
ja
mov
lcall
data16
fists
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
inc
pop
jmp
mov
lods
popf
and
xlat
out
daa
push
je
lret
jge
int3
add
test
jp
gs
sub
and
jo
mov
mov
std
int
and
lret
clc
dec
xor
popf
int
mov
jbe
aam
fisubl
add
push
test
jb
loopne
and
pop
sub
adc
movsb
fcompl
pop
icebp
es
push
lahf
adc
out
jnp
leave
xchg
ja
mov
lcall
data16
fists
adc
mov
adc
mov
adc
mov
adc
mov
adc
pop
and
imul
cmp
lods
popf
and
xlat
out
daa
push
je
lret
jge
dec
adc
lret
test
push
mov
int
scas
push
or
or
cmp
lods
repnz
test
fidivrs
call
or
shlb
incl
push
xchg
mov
push
scas
daa
mov
adc
mov
adc
mov
adc
enter
xor
loopne
cld
adc
leave
jp
cmp
ljmp
jl
sar
decb
out
adc
mov
adc
sbb
jno
ds
pop
cmp
lods
popf
and
xlat
out
daa
push
je
lret
jge
mov
pop
bndldx
ficomps
jle
pop
out
sbb
mov
jl
sub
xchg
mov
pop
es
or
shlb
incl
push
xchg
mov
push
scas
daa
mov
adc
mov
adc
mov
adc
inc
leave
aam
arpl
sub
mov
lods
popf
and
xlat
out
daa
push
je
lret
jge
mov
jg
into
movswl
or
data16
sbb
mov
rorl
leave
fdivrs
out
pop
fidivrs
call
or
shlb
incl
push
xchg
mov
push
scas
daa
mov
adc
mov
adc
mov
adc
enter
xor
loopne
sarl
out
imul
leave
js
jns
mov
jo
inc
inc
loopne
dec
testl
add
push
scas
daa
mov
adc
mov
adc
insb
dec
ret
call
cmp
lods
popf
and
xlat
out
daa
push
je
lret
jge
mov
sarb
cmp
data16
and
jo
mov
xor
mov
les
inc
popa
mov
mov
call
or
shlb
incl
push
xchg
mov
push
scas
daa
mov
adc
mov
adc
mov
adc
rorl
iret
pop
dec
outsb
mov
arpl
lods
popf
and
xlat
out
daa
push
je
lret
jge
enter
rcrb
testb
and
jo
mov
pop
or
inc
imul
dec
xor
sahf
insl
xchg
adcl
mov
mov
and
mov
and
mov
push
and
iret
std
movsb
enter
mov
adc
mov
adc
mov
adc
enter
xor
loopne
dec
std
push
arpl
push
mov
jae
sub
popf
xchg
jl
cmc
xor
push
push
dec
testl
add
push
scas
daa
mov
adc
mov
adc
enter
xor
loopne
arpl
jae
pop
push
in
pop
push
lds
inc
xchg
bound
je
pop
or
cltd
and
or
mov
loop
sub
push
scas
daa
mov
adc
mov
adc
push
inc
adc
clc
adc
cmp
lods
popf
and
xlat
out
daa
push
je
lret
jge
in
js
dec
xor
mov
and
jo
mov
nop
out
bound
push
pop
dec
clc
dec
xor
stos
jp
mov
jbe
aam
push
inc
out
and
pop
push
test
jb
loopne
and
int3
int3
cmpsb
push
pushf
mov
lcall
lods
dec
movsl
dec
sti
jl
gs
out
sbb
push
jno
mov
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
andb
dec
vmread
adc
adc
popl
aam
loopne
xchg
xchg
sbb
or
jecxz
cmc
cmpsb
pushf
mov
sbb
mov
rcll
or
mov
or
jle
ja
je
dec
xor
stos
sbb
xor
xor
push
scas
daa
mov
adc
mov
adc
enter
xor
loopne
dec
jae
aaa
call
or
sbbb
pop
push
rclb
xor
fisubs
or
lcall
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
mov
adc
andb
dec
vmread
adc
adc
adc
shlb
jl
inc
xchg
sbb
or
add
in
stc
test
outsb
adc
jno
loope
gs
push
inc
ljmp
je
push
je
dec
xor
stos
sbb
xor
xor
push
scas
daa
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
rcl
test
subl
lods
rolb
loop
into
aad
jmp
mov
lret
or
pop
clc
addl
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
movsb
iret
mov
repz
ret
rorb
dec
mov
ljmp
adc
mov
adc
mov
adc
andb
dec
vmread
adc
adc
pop
inc
lcall
sbb
or
subb
mov
lea
pop
aam
jmp
or
adc
mov
adc
mov
adc
enter
xor
loopne
or
adc
jl
cmp
fisttpll
sub
adc
enter
xor
loopne
sahf
jno
cmp
mov
mov
outsb
inc
mov
iret
std
movsb
enter
enter
xor
loopne
rol
test
push
enter
loope
testl
dec
int3
mov
inc
dec
jns
mov
adc
enter
xor
loopne
pop
mov
dec
add
pop
xchg
out
mov
jmp
pop
fucom
jno
addl
mov
adc
enter
xor
loopne
mov
pop
sbb
hlt
pop
pop
lock
xor
adc
sbb
aam
int3
ja
xchg
mov
inc
mov
push
scas
daa
mov
adc
enter
xor
loopne
jae
pushl
es
cmpsl
ret
movsl
jae
std
lahf
repnz
xchg
add
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
ljmp
inc
pop
xor
or
mov
mov
sbb
aam
int3
ja
xchg
inc
mov
and
push
mov
push
scas
daa
mov
adc
enter
xor
loopne
sub
push
sbb
push
push
adc
cmpsl
ret
jb
mov
lret
xchg
add
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
mov
pop
loope
cs
mov
push
xchg
jg
mov
adc
mov
adc
enter
xor
loopne
mov
fstpt
insl
pop
es
cmpsl
ret
popf
jl
aam
sbb
lret
xchg
add
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
roll
lcall
data16
fbld
mov
aad
mov
mul
push
adc
mov
adc
js
rcrb
mov
add
movsw
push
out
pop
in
stos
out
dec
ja
popa
popf
ffreep
out
dec
adc
pop
scas
add
cmp
jg
cmp
push
pop
out
push
pop
imul
xchg
addl
stos
xor
push
repnz
adc
mov
adc
mov
adc
mov
adc
jl
jl
dec
xor
and
mov
mov
mov
clc
addl
mov
adc
mov
adc
js
rcrb
mov
add
sahf
cmpsl
and
jge
pop
inc
stos
out
dec
ja
popa
popf
ffreep
out
dec
adc
mov
mov
pop
xchg
mov
cmc
mov
cmp
xchg
addl
stos
xor
push
repnz
adc
mov
adc
mov
adc
mov
adc
andb
dec
vmread
adc
in
es
sbb
icebp
test
inc
inc
push
mov
mov
sub
add
and
push
je
xchg
nop
dec
ret
push
and
clc
in
cltd
ljmp
xchg
addr16
mov
mov
cmp
or
mov
add
and
add
add
adc
mov
adc
mov
adc
mov
adc
jl
jl
dec
xor
and
mov
mov
pop
lock
sbb
addl
mov
adc
mov
adc
repnz
inc
lcall
push
adc
pop
push
sbb
lds
jmp
lock
mov
fisttpll
sub
adc
mov
adc
enter
xor
loopne
and
jg
lahf
stos
pop
xor
xchg
das
pop
iret
or
stos
aaa
inc
mov
jl
pop
xchg
mov
adc
mov
adc
enter
xor
loopne
subb
mov
test
cmpsb
mov
lcall
pop
xchg
mov
adc
mov
adc
inc
mov
and
and
or
loope
jae
jbe
rcl
jnp
pop
inc
jb
loopne
data16
aaa
sarl
add
sbb
into
fistpll
std
andb
jb
insb
push
out
aas
rclb
mov
push
outsl
test
out
cmpb
mov
adc
negl
jl
dec
pop
stos
adc
cmp
cli
jmp
mov
push
xchg
xor
xchg
js
dec
aad
mov
divb
inc
mov
mov
xchg
shll
cmp
inc
xchg
dec
xchg
outsb
or
stos
flds
sbb
push
dec
jl
mov
mov
push
mov
int
clc
arpl
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
in
sbb
shrl
sarb
fnstsw
mov
rcrb
lods
dec
ss
dec
jge
out
mov
pop
outsl
outsb
dec
and
loope
rorb
or
stos
mov
out
mov
xor
aam
cmp
or
cli
mov
adc
mov
adc
inc
mov
and
and
or
loope
lcall
addr16
pop
mov
test
aaa
sarl
pop
faddp
scas
cmp
push
leave
xchg
mov
jnp
mov
dec
jb
mov
adc
mov
push
outsl
test
out
cmpb
mov
adc
sub
mov
adc
cmp
cli
jmp
sub
adc
xchg
js
dec
aad
loope
pop
mov
jg
adc
jae
in
iret
or
xchg
shll
cmp
inc
jo
lea
flds
sbb
push
dec
jl
mov
mov
push
mov
int
clc
arpl
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
pop
push
sbb
das
movsl
rolb
add
adc
dec
xor
and
ret
cmp
jmp
pop
test
push
or
inc
xor
xchg
mov
adc
mov
adc
enter
xor
loopne
dec
int3
inc
or
mov
jp
mov
rcrb
xor
loopne
test
mov
sbb
test
xchg
popf
mov
adc
icebp
add
lods
dec
ss
dec
jge
out
mov
pop
outsl
outsb
out
inc
ljmp
or
stos
mov
out
mov
xor
aam
cmp
or
cli
mov
adc
mov
adc
enter
xor
loopne
jno
mov
cmc
xorl
loope
mov
rcrb
xor
loopne
imull
jbe
bound
push
mov
rcrb
xor
loopne
inc
mov
pusha
mov
adc
mov
adc
jb
and
mul
push
adc
jb
and
mul
push
adc
mov
ret
push
fdivrl
mov
lods
popf
and
xlat
out
sbb
mov
pop
pop
xor
fldl
cmp
cmp
cmp
xor
add
sub
push
jne
insl
ret
jg
stos
fs
imul
mov
sbb
shrl
enter
in
inc
outsb
out
inc
cmp
push
add
xchg
aaa
cwtl
sbb
cmp
mov
xchg
ja
mov
inc
and
mov
xchg
jmp
out
dec
jbe
add
push
outsl
notl
xchg
ret
je
insb
or
int
je
aad
into
pop
mov
shrl
gs
mov
stos
dec
inc
push
inc
cltd
imul
add
loope
fisttpl
frstpm(287
jmp
push
das
stos
hlt
pop
dec
pop
inc
stos
xor
das
jmp
xchg
test
xchg
pop
ret
fimuls
mov
lahf
dec
jo
fmull
inc
jmp
jne
jae
push
aas
pop
inc
cmc
es
outsb
mov
pop
lret
ficoml
sub
ja
adc
adc
dec
icebp
stos
lret
mov
pop
mov
fdivrl
dec
mov
adc
daa
filds
xor
dec
pop
or
subb
push
mov
outsb
xor
cmp
insb
xchg
jb
add
scas
out
ss
inc
push
and
mov
mov
push
out
movb
push
mov
xchg
pop
popa
cmp
push
leave
fstpt
sbb
sbb
adc
adc
inc
mov
outsb
jecxz
dec
xlat
ret
xchg
cmpsb
aad
pop
hlt
stos
incb
jbe
fwait
push
gs
jl
subl
xor
push
adc
and
shrl
push
adc
push
call
jns
or
sbb
mov
push
adc
and
shrl
jl
dec
pop
sar
imul
pop
lcall
popf
inc
cmpsb
jl
and
adc
pushf
mov
pushf
jb
mov
mov
jg
or
idivl
lods
js
pop
mov
add
xor
adc
sub
push
fs
insl
mov
in
xchg
mov
out
imul
mov
or
xchg
jle
sub
pop
jmp
lret
lret
imul
xor
lods
fdivr
xor
scas
jle
mov
fnsave
mov
sub
xchg
outsl
rclb
cmp
ss
xchg
test
dec
adc
mov
lret
dec
stc
rcrl
xor
mov
sub
cltd
fs
out
or
aam
lcall
sbb
mov
ss
mov
addb
sub
hlt
std
ja
mov
xchg
ss
fwait
push
vfrczsd
cwtl
lret
jmp
xor
and
mov
sbb
ret
sti
orb
push
imull
inc
jo
xchg
cmpsb
cli
lcall
add
fwait
xor
in
dec
add
or
mov
mov
and
adcl
xor
mov
add
or
dec
cmp
sbb
out
jb
ret
add
or
dec
sahf
test
adc
imul
inc
xchg
out
xchg
ret
xor
push
push
mov
rorl
jae
jbe
call
inc
xchg
pop
pop
aam
sub
jp
jp
test
fnstcw
push
popa
dec
sbb
test
jmp
cwtl
hlt
scas
fldenv
nop
adc
dec
xchg
cmc
adcb
inc
jmp
sbb
pop
popa
inc
pop
rorb
sub
dec
pop
adc
add
call
in
icebp
stc
repz
addr16
fsubl
sub
jmp
xchg
adc
inc
jmp
hlt
sbb
jg
xor
sbb
jno
mov
sub
int3
mov
pop
lock
add
add
nop
dec
mov
cmpsb
push
xchg
test
iret
xor
sub
repnz
mulb
repnz
fadds
inc
icebp
minps
insl
test
das
mov
test
adc
dec
loop
and
mov
nop
in
add
cwtl
out
in
jo
int
xchg
and
mov
jns
out
inc
aam
daa
xchg
add
fmuls
lcall
shrb
or
and
rcll
xor
fstpt
jmp
inc
cmp
xor
cli
in
dec
push
ficomps
int3
push
xorl
icebp
or
push
cli
shll
add
jnp
push
les
lock
sbb
insb
push
out
jl
imul
test
and
adcb
fmull
leave
jmp
xchg
cmp
pop
xchg
enter
jb
movsl
incl
jl
fs
sbb
rorb
or
dec
xchg
rcl
pop
inc
dec
add
mov
pop
imul
clc
mov
icebp
movsb
aam
inc
mov
dec
jle
lahf
adc
adc
lret
mov
movsb
sbb
cmc
rcrb
in
jle
in
jmp
aam
aam
jns
shll
loop
push
arpl
cli
sub
push
aaa
inc
test
lea
xor
out
stos
mov
add
dec
in
nop
push
outsl
push
insb
repz
lds
test
into
lock
lahf
mov
ret
popa
cmp
jae
stos
xor
sbb
mov
push
jnp
popa
movsl
sbb
or
bound
adc
insl
pop
jne
andl
cmp
jno
or
fs
adc
cmp
popf
and
sub
jmp
jmp
mov
add
ror
xchg
movsl
inc
mov
data16
xchg
mov
icebp
mov
pop
cmp
inc
jne
std
js
incb
in
or
movsl
fisubl
aaa
cltd
pop
push
inc
sbb
pop
adc
iret
cmp
sub
loopne
push
push
jmp
movsl
repnz
push
lret
loop
bound
pop
or
leave
ljmp
pop
popa
test
out
dec
outsb
pop
push
call
add
in
pop
inc
mov
xlat
shr
adc
lock
or
ret
in
pop
and
das
jmp
jae
add
push
inc
pop
inc
scas
xchg
daa
aam
adc
sub
push
mov
pop
mov
add
je
jp
and
jp
inc
stos
adc
aad
sbb
or
xor
out
pushf
sar
pushl
mov
jl
adc
call
inc
xchg
lcall
cmp
push
pop
es
pop
inc
dec
xor
adc
inc
mov
adc
inc
stc
insl
jb
mov
jmp
sbb
push
mov
push
mov
dec
cwtl
adc
repnz
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
lcall
xchg
cmp
lods
popf
and
xlat
out
cmp
dec
cmpsl
mov
mov
fldcw
pop
mov
movsb
pushf
mov
xchg
pop
pop
loope
cmc
or
lahf
js
sbb
shrl
enter
jecxz
xor
call
inc
aaa
out
mov
or
push
dec
popa
mov
popa
dec
add
add
xchg
mov
push
scas
daa
mov
adc
mov
adc
mov
adc
enter
xor
loopne
xchg
fisttpll
sub
adc
mov
adc
cmp
xor
add
dec
cmpsb
stos
gs
sbb
xchg
pop
xlat
mov
jno
in
dec
cmp
rorb
ljmp
push
jbe
jns
call
mov
hlt
cmp
add
rcrb
or
aaa
js
ret
jg
addr16
or
fdivr
hlt
sarb
inc
add
xchg
lea
shrb
ja
aad
dec
mov
dec
call
push
rcr
rorl
ret
xchg
fucomi
push
mov
leave
lds
or
ja
inc
stos
mov
or
jae
and
stos
mov
lret
pop
sub
scas
dec
inc
sbbl
into
hlt
inc
iret
xchg
ja
imul
pop
jbe
in
xchg
loopne
sub
cld
fistl
sub
pop
sarl
pop
mov
fdivrs
scas
aad
jge
in
out
imul
repnz
test
mov
xchg
icebp
dec
out
and
lahf
arpl
scas
jae
cmp
int
popf
mov
js
mov
xchg
sub
push
outsl
test
in
push
mov
gs
mov
sbb
xor
int
sar
adc
or
rclb
sti
fisubs
cmpsb
dec
out
cmp
or
stc
sub
push
lods
or
sub
mov
or
sub
inc
sbbl
into
lods
push
loopne
aas
pop
into
push
test
test
es
xchg
mov
inc
cmp
in
xor
dec
cmp
mov
imul
dec
jp
icebp
sbb
or
push
jbe
int3
jbe
push
xchg
cli
insb
mov
sub
aas
outsb
and
adc
mov
std
ret
lods
test
mov
xlat
inc
shll
lds
mov
pop
push
fadds
dec
or
xor
aaa
sbb
mov
pop
loope
pop
gs
add
fisubl
mov
inc
inc
fwait
aaa
rcrl
jb
jecxz
xor
xor
sub
xor
out
mov
and
cmp
clc
adc
inc
add
adc
subl
mov
mov
inc
jbe
and
std
out
mov
mov
mov
jns
cmp
inc
xlat
lret
lock
stos
and
sub
cltd
aaa
dec
mov
arpl
adc
sub
int
bound
aas
xchg
shlb
scas
aad
or
lea
outsl
call
scas
mov
mov
or
xchg
mov
lahf
dec
and
ret
xlat
lods
aas
jo
pushf
cmp
imul
rcr
ljmp
rcl
pop
in
jp
outsl
fstl
into
and
lods
fists
add
xchg
insb
mov
jb
mov
notb
fs
mov
inc
ret
push
ret
cwtl
ret
adcl
imul
xor
rolb
and
mov
push
xlat
push
call
test
sti
jmp
cmp
cli
popf
stos
and
adc
jmp
pop
push
sub
sbb
sbb
jp
push
sahf
dec
cltd
cmp
xor
dec
outsl
aam
jecxz
lea
in
std
sbb
mov
mov
gs
lcall
ret
jns
push
insl
repnz
daa
dec
fidivrs
push
icebp
nop
jnp
and
mov
and
movsl
adc
stc
push
sub
add
cmp
add
inc
jne
test
ja
adc
gs
movsl
in
inc
loope
mov
push
mov
xchg
xor
dec
dec
adc
push
pusha
add
or
pop
pop
outsl
loope
xor
xchg
cmp
scas
out
inc
cli
add
pushf
mov
ljmp
outsl
int3
pop
divb
dec
jnp
fsts
cmp
mov
testb
pushf
insb
sbb
leave
add
leave
into
pusha
push
cwtl
int
push
adc
cmpsb
mov
dec
inc
xor
ret
jecxz
dec
out
pusha
or
xchg
call
push
dec
jnp,pn
xor
cwtl
outsl
and
inc
pusha
orb
in
fcomip
mov
push
nop
xor
push
dec
sbb
sbb
cltd
sub
jmp
xchg
dec
pop
dec
outsl
add
enter
sbb
xchg
mov
lret
popf
popl
es
add
jo
inc
sub
daa
sbb
lea
xor
or
leave
iret
adc
sahf
pusha
add
push
sbb
xchg
jb
inc
inc
mov
es
out
idiv
mov
shlb
call
call
iret
ret
pusha
ljmp
lock
xchg
and
pop
and
push
into
mov
push
les
push
pushf
fwait
pop
lods
out
mov
jno
lahf
je
xor
pushl
push
inc
add
fwait
scas
xchg
add
test
push
ret
mov
pop
pushf
mov
ret
into
movsl
or
mov
dec
inc
or
cmp
pop
jo
arpl
push
sbb
cmp
popa
mov
das
xchg
ljmp
sarb
mov
jo
and
shrl
mov
sub
in
dec
test
std
ljmp
mov
add
aad
dec
shlb
dec
dec
and
lcall
popa
inc
fisttps
inc
mov
jg
xorl
fldt
jae
aad
fs
fidivl
lea
scas
insl
test
xchg
jmp
mov
xor
rcrb
lahf
xor
pushf
in
repz
pushf
daa
stos
adc
mov
fnstcw
sub
sbb
cs
les
xor
clc
outsl
aad
pop
xchg
bswap
call
inc
cltd
mov
pop
sub
cmpsl
mov
jno
std
push
push
sbb
and
mov
cmp
clc
push
lods
or
imul
and
shr
mov
stc
stos
pop
rcl
or
cmp
mov
in
xor
js
and
mov
push
in
inc
pop
or
dec
xchg
imul
add
mov
add
push
mov
mov
cld
sub
mov
xor
daa
lret
or
lret
outsb
add
pushf
fmul
jmp
bound
push
insl
jecxz
cmp
dec
lds
stos
int3
js
mov
push
dec
idivb
mov
sar
pop
mov
mov
pop
lcall
sub
das
mov
fistl
sub
add
out
mov
sbbl
push
fisttps
mov
arpl
mov
and
sbb
push
sbb
mov
mov
cmp
gs
mov
push
sbb
in
test
xchg
cmp
mov
pop
je
xor
cltd
pushf
fsubs
adc
push
cwtl
jle
dec
andl
pusha
adc
stos
add
shll
jl
and
stos
std
lret
repz
fcomi
in
sahf
jge
std
xchg
out
dec
mov
pusha
xorl
fwait
clc
scas
stos
sub
dec
and
jns
sarb
cmp
push
push
inc
push
sahf
test
call
push
dec
je
movsl
sti
in
out
frstor
xor
mov
fdivrl
sarb
out
inc
jbe
lods
add
pop
mov
add
js
mov
fnsave
sahf
pop
push
cmp
divb
testl
jg
mov
inc
sti
outsl
push
pop
fs
xor
out
stos
shll
xchg
subl
push
aam
repnz
fxch
push
sbb
and
xchg
adc
ret
inc
mov
push
rcrl
mov
test
clc
sub
mov
cltd
movsl
adc
xor
in
sub
out
lret
sub
fsubs
sub
imul
aas
stos
es
inc
daa
setne
mov
jmp
pop
push
ljmp
mov
push
or
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
movsb
xchg
icebp
and
es
cmpsl
ret
or
aam
xchg
add
mov
shr
xchg
lds
adc
mov
adc
mov
jl
aas
push
xor
arpl
push
lds
xchg
pushf
call
movsl
xor
pop
cmpl
dec
js
fwait
das
lods
and
es
sub
cmp
pusha
roll
sub
scas
sbb
push
idivl
jns
cmc
xchg
push
pop
test
out
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
scas
aad
or
lea
mov
stos
cmp
ja
jl
xor
fisubs
jmp
loope
push
mov
testl
mov
mov
dec
push
jle
subb
cltd
into
icebp
movsl
scas
ds
xor
jg
lret
test
and
push
repz
cmp
icebp
cmp
hlt
imul
and
mov
push
mov
inc
out
sarb
xchg
shll
repnz
jmp
testb
movsb
cs
push
fdivs
push
bound
push
mov
inc
ja
xchg
out
imul
and
cmp
loopne
mov
call
in
push
push
pop
push
cli
or
stos
data16
movsb
xor
leave
push
fisubl
jae
add
lahf
pop
lods
sbb
outsl
or
cmp
popf
test
sbb
cwtl
pop
arpl
insb
subl
jns
ljmp
scas
xchg
jge
stos
pop
or
daa
or
sub
add
mov
add
imul
xchg
fwait
jl
popf
test
sbb
cwtl
pop
arpl
insb
subl
jns
ljmp
ljmp
mov
pop
pop
adc
mov
add
sub
add
popf
fdivs
jno
and
dec
pushf
mov
insl
std
pop
jb
nop
testb
mov
jbe
jns
sbb
jo
inc
ss
xor
pop
xor
orl
cmp
nop
sbb
fsts
and
xchg
testb
rcrl
mov
sub
jp
adc
ljmp
test
dec
scas
pop
jns
dec
in
imul
xchg
mov
mov
jno
mov
mov
or
mov
icebp
adc
sub
adc
pusha
xor
pop
fistl
xor
fsubr
xchg
or
xchg
fcmovnb
mov
imul
mov
int
cmovge
aad
mov
dec
data16
and
bound
shl
jmp
mov
pop
xor
mov
lcall
lret
jle
jno
roll
dec
into
loopne
hlt
loope
xlat
lods
or
adc
les
add
inc
pop
jnp
cmpb
jmp
ja
cld
add
lret
and
inc
popf
std
push
pop
in
mov
and
xchg
movsb
lea
js
scas
add
xchg
mov
adc
adc
es
mov
sub
daa
mov
fsubrs
aas
je
into
cmp
cltd
xor
popa
push
movsl
or
pop
sahf
push
mov
aad
divb
lret
int3
call
cmc
sbb
push
pop
cld
neg
and
push
aaa
or
mov
and
in
pop
cmp
lahf
cmp
jns,pt
mov
add
gs
pop
and
xor
out
xor
aad
imul
and
insl
lds
mov
pusha
lock
or
in
lahf
mov
insl
mov
inc
outsb
dec
cmp
push
clc
sbb
les
loop
jmp
jbe
push
punpckhdq
mov
push
stos
data16
lcall
movl
pop
xchg
mov
lods
mov
mov
mov
ds
mov
push
jnp
mov
dec
leave
imul
mov
sub
in
jne
mov
clc
shrl
imul
aas
pop
fnstsw
mov
lods
bswap
test
inc
rolb
push
rcll
xchg
pop
fcomi
aad
mov
inc
add
int
imul
mov
nop
ds
mov
add
inc
daa
jecxz
and
jmp
stos
out
ds
inc
jns
xor
xchg
cmp
sbb
aas
sarl
dec
push
sahf
push
dec
mov
add
mov
inc
jbe
int3
scas
nop
adc
test
imul
std
cmpsb
add
in
mulb
jnp
and
cmpsb
in
push
aas
lods
std
int3
inc
je
aad
shrb
ljmp
repz
imul
dec
incl
or
pop
mov
sbb
mov
pop
decl
stos
adc
negb
push
cltd
in
mov
jg
lods
pop
mov
popf
jno
insl
cmp
xchg
xchg
pop
lret
fcoml
add
popf
fdivs
jno
and
fldenv
dec
dec
mov
leave
mov
xchg
xor
aam
int3
std
lcall
xchg
sbb
mov
stos
fidivrl
adc
fstpl
mov
inc
mov
inc
sbb
icebp
jo
out
into
mov
out
es
sub
pop
xchg
popf
test
popf
xchg
insl
in
ret
hlt
mov
icebp
inc
scas
in
or
out
stc
inc
dec
pusha
sbb
mov
out
imul
rcrb
int
jp
mov
pop
pop
xchg
xchg
xchg
add
cmpsb
push
ja
rol
leave
mov
fucomi
cmp
test
stc
jae
sbb
ljmp
or
sbb
out
add
ss
sub
or
xchg
out
jb
iret
in
or
inc
push
mov
adc
ja
call
dec
in
push
sarb
push
pop
mov
adc
mov
lcall
stos
fadds
dec
mov
mov
call
pop
mov
faddl
pop
in
mov
loope
sub
test
incb
dec
mov
push
hlt
ds
cmpb
out
dec
fdivrs
sub
adc
loopne
into
aad
fs
incl
push
jo
or
pop
outsb
jbe
cmp
dec
aas
ja
call
push
aas
repz
mov
push
dec
call
sbb
push
insl
insb
inc
or
inc
sbb
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
negb
inc
pushf
mov
gs
enter
ret
jg
sarb
push
xchg
sbb
iret
pop
pop
fmulp
jne
sub
mov
popf
mov
xor
mov
sub
add
or
arpl
mov
bound
ficomps
daa
and
adc
addr16
or
sarb
arpl
jmp
and
in
mov
sub
pop
or
cld
sahf
sbb
jne
fdivs
rolb
jge,pn
mov
cmp
mov
enter
out
xor
push
adc
insb
jge
cmp
out
push
outsl
das
inc
jl
jbe
push
mov
int
insl
addr16
xchg
pop
ss
aad
xchg
in
mov
mov
sbb
lcall
cwtl
bswap
pop
movsb
insb
enter
cltd
dec
dec
das
inc
iret
mov
ds
jns
arpl
sbb
les
bound
xchg
enter
jecxz
ss
sti
ljmp
sub
jne
adc
xor
aam
add
aam
fld
add
in
popa
push
adc
leave
jae
pushf
lods
cmp
pop
push
test
inc
loopne
xchg
sub
pusha
adc
les
inc
clc
push
add
adc
mov
mov
cmp
jbe
sbb
loop
insb
cmp
jmp
stc
push
scas
shrb
add
inc
xchg
loop
push
in
mov
mov
ror
jmp
push
enter
pop
pop
sub
in
and
cmpl
mov
cltd
insb
cltd
nop
jne
push
jo
push
rcl
push
and
or
xchg
cmp
clc
js
xchg
mov
mov
jge
inc
andl
xor
mov
loop
shl
push
dec
ljmp
nop
push
in
mov
repz
and
mov
call
shlb
mov
jmp
ret
push
js
and
jbe
les
test
scas
jmp
xchg
in
aaa
mov
sahf
xor
popf
outsl
mov
dec
sbb
leave
xchg
mov
je
xor
je
jle
xchg
call
jbe
mov
je
sar
ljmp
mov
fsubrs
sbb
mov
shrb
dec
mov
jp
sub
mov
push
jge
imul
bound
mov
push
sbbl
sahf
test
xchg
test
jge
add
mov
ret
nop
jmp
inc
and
and
je
aad
shlb
gs
xor
in
lods
push
sub
daa
xchg
icebp
insb
mov
dec
sub
sub
cmp
mov
dec
add
pop
cmp
jnp
mov
or
sbb
out
addr16
xchg
xor
cmpsb
fstps
or
push
iret
daa
mov
xchg
push
jns
xor
ret
adc
jp
data16
inc
cwtl
insb
inc
insb
fs
or
jmp
lcall
sarl
arpl
jle
pop
push
pusha
push
test
inc
loop
int3
subb
aad
pop
nop
jl
or
jno
lahf
clc
xchg
pop
mov
mov
cmp
cmp
xor
mov
enter
inc
fisttps
add
outsl
pusha
jp
and
mov
nop
aaa
push
cmp
add
rcr
cwtl
mov
xchg
mov
xor
pop
out
push
pop
add
or
jnp
cltd
shlb
push
pop
adc
sub
xchg
sbb
in
add
pop
les
xchg
test
orb
dec
addb
aad
xor
mov
adc
pusha
lcall
sti
add
inc
adc
ja
iret
popf
popa
fcmovnb
mov
mov
fstps
je
cmpsb
jmp
xchg
mov
mov
outsb
xor
push
add
add
lret
and
mov
popa
mov
es
xchg
fsubrs
jb
pop
movsb
jnp
lods
mov
xchg
push
jns
xor
ret
sub
jbe
cld
pop
inc
jbe
scas
fnsetpm(287
inc
call
xchg
or
insb
push
add
inc
addr16
js
fnstcw
xchg
pop
fldt
xor
adc
in
data16
inc
adc
xlat
mov
ret
inc
shll
pusha
out
rolb
insb
xor
cmp
adc
or
mov
sub
das
sbb
aam
int3
ja
stos
adc
and
ja
add
pop
hlt
fadd
sbb
xchg
in
test
fs
jbe
scas
sub
stc
fwait
lahf
adc
sbb
add
xchg
push
mov
jp
xor
popa
adc
sbb
popf
push
std
lcall
sub
pop
mov
xchg
enter
jecxz
pop
push
outsl
mov
cmpsl
jnp
lds
popf
push
xor
mov
inc
sarl
cs
pop
add
movsl
std
outsl
and
or
sub
loopne
pusha
pushf
fcoms
sahf
sub
call
lahf
clc
ficompl
mov
iret
out
dec
frstor
mov
int3
cmpsb
or
dec
or
cmp
push
xchg
mov
in
mov
ds
pop
mov
cmp
dec
cwtl
push
mov
mov
xlat
jp
xchg
insl
aaa
das
hlt
jle
mov
xchg
xchg
inc
fldenv
pop
and
pop
roll
cmp
sbb
aam
mov
dec
cld
pop
hlt
fs
mov
inc
arpl
fstps
sar
xor
repnz
and
cmpb
xchg
out
xorb
loop
out
cld
lcall
shl
lahf
jg
pop
jmp
icebp
into
dec
inc
adc
iret
test
mov
in
or
out
mov
jno
out
andps
mov
mov
sbb
cmp
sub
sbb
mov
xchg
fdiv
pop
repz
sbb
negb
and
sub
shll
mov
js
xchg
pop
in
and
aad
les
ss
xchg
movsb
jbe
int3
out
ret
push
push
pop
push
int
xor
fmul
pushf
sbb
sahf
jp
or
mov
or
js
adc
imul
jno
dec
flds
mov
push
cmp
jge
adc
xchg
jno
jnp
mov
pushf
loopne
loop
mov
push
out
fiaddl
mov
adc
adc
dec
jno
push
mov
mov
mov
sbb
sub
call
out
pusha
outsl
mov
jl
cltd
mov
push
loop
adc
ss
lret
popa
clc
pop
bound
call
icebp
push
push
cltd
adc
sub
sub
mov
repnz
iret
iret
dec
sahf
add
adc
aad
test
repz
inc
mov
fmulp
nop
pop
fldenv
sbb
inc
push
push
mov
jae
jge
fildl
out
xchg
mov
mov
lret
pop
mov
cli
out
test
mov
fnstcw
iret
lea
and
or
push
leave
and
pop
in
test
xchg
imull
jle
ret
out
jl
inc
or
mov
pop
dec
mov
mov
ljmp
add
cmc
call
sti
dec
loop
jmp
fstps
and
push
rcll
adc
loop
sahf
jmp
sarb
or
xor
adc
inc
shll
jb
lods
cmpsb
out
inc
fisttpl
push
pop
inc
and
js
jb
push
push
hlt
les
jge
and
fwait
and
adc
fsubrl
adc
imul
or
pushf
out
and
push
push
aam
out
pop
rorl
clc
arpl
sbb
imul
mov
add
xchg
jns
setge
cld
adc
xor
pop
jmp
mov
nop
subb
cmc
jle
in
dec
adc
mov
inc
mov
in
push
jl
cltd
mov
aaa
inc
xor
jge
cmp
ds
mov
dec
mov
fiaddl
push
sub
or
aad
sbb
int
mov
jnp
mov
sbb
push
jno
or
sub
lods
in
ss
dec
stc
das
sbb
sbb
mov
aad
pop
inc
lcall
aaa
add
gs
shlb
movsl
jo
popl
ret
sbb
aam
std
add
decl
nop
or
fs
and
popa
xor
nop
add
push
inc
pop
loopne
xor
movsl
lds
xchg
push
mov
into
sbb
or
pop
xchg
and
dec
dec
enter
xor
mov
incb
cmp
scas
or
adc
inc
das
push
mov
push
mov
mov
dec
jnp
in
fldl
test
dec
sub
dec
jmp
push
rcrl
les
int3
xchg
cmp
push
push
push
out
sub
lret
sub
mov
sbb
xchg
xchg
jmp
xchg
sahf
xchg
sub
lods
gs
sbb
shlb
pop
dec
mov
filds
pop
or
mov
ds
fbstp
lret
xlat
jmp
andb
ret
aas
push
loopne
arpl
cmpsb
mov
or
icebp
pop
jb
gs
pushl
cmpsb
test
ret
dec
sbb
xchg
xchg
add
mov
mov
xor
pop
lret
dec
mov
xchg
cmp
jecxz
pop
or
sbb
lods
and
roll
mov
movsb
cli
inc
dec
inc
push
pop
cltd
mov
xor
out
arpl
loopne
jg
mov
push
mov
aam
mov
aam
push
xchg
jb
or
cmp
cmp
enter
enter
inc
aad
xchg
push
lcall
dec
push
inc
lods
xchg
lock
bound
xchg
cmp
pop
pop
aas
pop
iret
and
mov
mov
jle
jle
or
sub
adc
iret
mov
pop
push
jbe
imul
testl
cwtl
in
pop
negl
leave
scas
cmp
or
jno
and
mov
test
std
push
mov
mov
add
frstor
cmp
cs
or
stos
dec
pushl
mov
fwait
jne
xor
pop
jmp
imul
sub
testl
adc
cmpxchg8b
dec
cli
scas
cmpsb
and
xor
cmpsl
add
sbb
mov
sbb
push
add
push
xchg
sbb
dec
sahf
pop
jne
xor
pop
imul
jbe
filds
pop
mov
sahf
sarl
std
es
ljmp
pop
addl
push
or
inc
inc
cmp
bound
pop
int3
sbb
mov
pop
lock
xchg
xor
push
push
mov
push
repz
mov
aaa
shl
mov
and
lods
add
idivb
jnp
lahf
mov
fildll
xchg
mov
sub
ficomps
add
add
test
frstor
or
ds
stc
mov
mov
jge
shl
cmp
dec
push
sbb
in
shll
dec
sub
iret
pop
mov
imul
lret
or
inc
movd
jne
dec
pop
or
dec
stos
daa
fucomip
mov
das
mov
sti
stos
jns
lock
push
loop
sbb
mov
arpl
adc
std
outsl
and
xlat
in
out
inc
out
inc
ljmp
cmp
lods
mov
push
fildl
and
xchg
in
jecxz
fsubl
mov
in
xchg
pop
sahf
cmp
orl
jecxz
mov
loopne
cmp
inc
imul
jge
xchg
pop
mov
pushf
notl
fiadds
stos
xor
fbld
mov
jl
out
sbb
stos
imul
cs
xlat
cmpl
dec
or
pop
cwtl
jae
xor
imull
test
lods
sbb
ja
sti
xchg
nop
xor
sbb
mov
cmp
mov
push
push
mov
xor
cmp
lahf
leave
pop
and
add
subl
aad
xor
js
push
outsb
movsl
mov
dec
test
and
test
iret
sub
xor
jne
cmp
jl
imul
lods
fcmovnbe
add
out
scas
not
out
xchg
dec
adc
pushf
iret
test
mov
divb
dec
pop
or
cmpsl
mov
mov
sub
dec
add
pushf
push
mov
sub
out
rolb
sbb
xchg
pop
test
test
cli
notb
jae
mov
push
or
push
xchg
mov
test
loopne
inc
push
adc
sbbb
aas
sahf
mov
mov
cmp
mov
inc
pop
mov
push
mov
fisubrs
jb
fisttps
pop
sub
shll
adc
pop
inc
adc
cmp
cs
mov
mov
mov
js
cltd
sti
orb
add
dec
repz
repz
dec
push
js
inc
jle
sarb
mov
adc
popa
and
jne
mov
push
ljmp
sahf
xor
stc
push
in
insl
mov
push
xchg
jle
call
test
dec
sub
pushf
pop
imul
xor
push
data16
sbb
mulb
mov
xchg
add
xor
push
mov
jle
or
lcall
pop
iret
out
clc
inc
xchg
cmpsl
hlt
mov
pop
out
test
je
pop
inc
aaa
adc
outsl
jnp
rclb
xor
adc
mov
mov
lahf
dec
popf
test
sti
add
sbb
adcl
cmpsl
ljmp
scas
inc
les
lods
scas
inc
mov
cmp
xor
out
pusha
push
mov
pop
addr16
sub
shll
dec
jbe
sub
std
imul
jle
xor
sub
push
pop
loop
fdiv
or
stc
stc
loope
leave
fmuls
xlat
xor
inc
shrb
push
xchg
imul
dec
push
mov
sets
mov
cmc
jl
clc
incb
out
int
out
pop
sti
je
mov
xlat
xchg
cmp
addl
dec
mov
clc
cmpsl
jecxz
fnsave
test
ja
test
jp
sbb
daa
inc
push
jecxz
add
je
push
inc
hlt
fcoms
push
sub
add
insb
mov
lock
push
jle
scas
push
out
stos
xor
jecxz
add
cs
push
dec
in
xor
push
dec
pop
mov
addr16
pop
test
push
mov
js
lock
cltd
or
imul
out
movsl
arpl
mov
sbb
fidivs
sbb
pop
adcl
idivl
or
lea
cmp
ljmp
mov
or
push
pop
and
push
outsl
adc
adc
insb
push
mov
dec
cmp
loopne
fildll
mov
dec
mov
lock
mov
adc
xor
std
lods
fs
cli
stos
fldenv
lods
jno
pop
or
jle
enter
pop
push
call
lret
xchg
pop
leave
scas
loopne
cwtl
loop
aad
add
xchg
mov
inc
and
lret
hlt
fwait
pushf
inc
jecxz
sti
loop
or
jae
mov
xchg
sub
xchg
inc
test
cmp
es
xor
sbb
xchg
jbe
jp
pop
push
aam
jns
fwait
movsl
xlat
inc
dec
out
dec
dec
inc
pop
lds
push
scas
lods
lods
sub
mov
subl
pop
pushf
dec
dec
lret
gs
jle
mov
xor
push
testb
adc
iret
sbb
gs
jne
dec
sub
test
pop
add
add
xchg
test
out
sbb
xor
sbb
negb
fs
inc
test
daa
or
aaa
xor
pop
adc
or
lock
xlat
adc
jno
lock
decb
mov
push
fcomi
add
mov
mov
inc
ja
faddl
mov
cmp
cltd
out
cmp
xor
sbb
lret
out
sub
sbb
mov
push
adc
push
cld
aas
scas
outsl
pop
inc
cs
cwtl
xchg
lods
notl
cs
out
pop
pushf
in
push
lret
in
sub
loope
push
daa
sbb
mov
or
pop
aaa
push
mov
mov
jl
cmp
clc
data16
xchg
add
mov
sub
sbb
xchg
push
inc
insl
fildl
push
cld
push
add
stos
xchg
sti
outsb
inc
mov
push
inc
or
xchg
sbb
sti
or
leave
and
jnp
and
push
hlt
jecxz
push
sbb
cmpsb
sbb
xchg
jae,pn
ljmp
mov
out
mov
hlt
aas
xor
xor
jnp
fcmovne
icebp
xchg
lahf
roll
loopne
push
push
arpl
fadd
push
mov
icebp
insl
sub
scas
lcall
icebp
loopne
or
and
cmp
adc
sbb
sub
ret
pop
aad
lods
ljmp
outsl
jmp
outsb
movl
mov
and
call
inc
test
and
sub
rolb
ret
mov
mov
lds
sbb
shl
popa
pop
fidivs
xchg
testl
addr16
adc
mov
jae
add
ret
dec
xchg
or
mov
rcrl
fiaddl
lcall
cmp
adc
insl
out
xchg
push
push
js
lods
pop
xor
or
fiadds
sub
inc
cwtl
or
mov
sbb
ret
insb
push
icebp
inc
addb
sub
dec
pop
fs
mov
xor
inc
xchg
scas
or
xchg
loopne
mov
adc
dec
jns
cmpsb
push
clc
jb
dec
lahf
call
xchg
xor
or
cmpsb
scas
mov
out
mov
xchg
lds
es
sbb
dec
aam
lea
shll
cs
jnp
xchg
enter
stos
or
roll
loopne
push
push
arpl
adc
push
test
adc
fs
sti
xchg
sbb
mov
cs
cmpsl
js
leave
inc
addr16
pop
jno
mov
jo
mov
lods
popf
and
xlat
out
daa
push
je
lret
jge
sub
cmp
push
jns
xchg
cs
imul
push
scas
into
bound
add
cmp
popa
mov
mov
out
or
dec
sbb
push
adc
ljmp
cmp
loopne
cwtl
mov
dec
outsb
lret
xchg
sub
arpl
lods
popf
and
xlat
out
daa
push
je
lret
jge
push
sub
loope
cli
xchg
sarl
xchg
cs
xchg
push
inc
movsl
push
push
scas
into
bound
es
sbb
adc
arpl
sub
mov
mov
mov
js
leave
inc
addr16
pop
cwtl
adc
dec
shr
bound
mov
lods
popf
and
xlat
out
movsb
loopne
icebp
cmp
pop
ret
out
cmp
insb
aaa
mov
xchg
jne
jmp
sub
pop
dec
in
es
jo
aaa
lock
inc
popl
aam
aas
push
xor
js
jl
xchg
xchg
jae
push
mov
out
es
push
mov
xchg
jge
xchg
ja
pop
and
lods
js
ja
pop
mov
in
call
jae
sub
fisubl
pushf
jecxz
in
fidivrs
shll
ja
pop
and
mov
fcom
cmp
jmp
scas
push
leave
pop
cmp
sbb
adc
push
sbb
dec
out
jecxz
jne
test
dec
pop
push
jmp
and
into
inc
in
stos
xor
clc
gs
rcl
gs
inc
fildll
lods
sub
int
cmpl
jmp
and
lcall
std
dec
or
pusha
push
push
jl
lods
jo
mov
in
or
jo
and
adc
push
outsl
jp
and
outsb
xchg
inc
rep
adc
imul
int
mov
pop
mov
out
fcoml
jbe
std
mulb
loope
xchg
pop
push
clts
aaa
jno
cmp
cmp
fcoml
cmp
xchg
lahf
negl
add
cli
jmp
cmp
loopne
cwtl
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
mov
push
dec
lcall
out
cmpsl
ret
and
aam
xchg
add
mov
shr
xchg
lds
adc
mov
adc
sahf
scas
mov
shl
xchg
mov
push
scas
daa
enter
xor
loopne
mov
es
adc
adc
cmpsl
ret
lods
dec
mov
lret
xchg
add
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
sub
jmp
xlat
out
cmpsl
ret
lcall
aam
xchg
add
mov
shr
xchg
lds
adc
mov
adc
mov
pop
sarb
mov
lods
popf
and
xlat
out
lods
dec
cmpb
jne
mov
adc
flds
push
das
pop
and
xchg
add
mov
push
outsl
jne
test
out
and
inc
dec
jns
mov
adc
mov
adc
enter
xor
loopne
dec
in
sub
jl
and
lock
xchg
add
cmp
add
loop
lcall
ja
mov
gs
mov
adc
mov
adc
sbb
sbb
jmp
in
mov
cmp
push
jno
das
push
outsl
add
lret
pushf
pop
aaa
dec
pop
mov
jmp
and
xchg
add
test
ds
push
pushf
and
jmp
mov
adc
add
inc
add
test
mov
xlat
outsl
pop
je
inc
pop
andl
pushf
adc
jle
outsl
adc
imul
cmpsb
sbb
mov
inc
xchg
xchg
jmp
enter
cmpb
jg
sub
mov
push
mov
sar
jp
pushf
cmp
push
popf
fucom
mov
inc
cmp
clc
and
sub
xchg
pop
mov
inc
adc
insb
and
out
data16
dec
movsl
cli
cmpsl
test
sbb
jg
push
adc
test
scas
sub
sahf
xchg
aam
add
ret
in
or
call
push
lcall
push
pop
insb
or
outsl
scas
push
int3
scas
or
daa
pushf
adc
mov
test
cmpsl
dec
jmp
xor
ljmp
jge
xchg
pop
ljmp
movsb
sbb
dec
cmpsl
or
xchg
sub
push
dec
int
out
outsl
aas
mov
mov
push
out
out
arpl
push
aas
stc
repz
les
stos
jb
movsb
fidivrs
xor
push
ret
sbb
loop
loope
inc
ret
fidivrs
xor
sub
outsb
aaa
imul
fimull
negb
and
add
and
in
xchg
stos
pop
push
xor
sbb
mov
push
pop
pop
gs
jbe
popl
mov
hlt
aam
cmp
sub
dec
cmpl
xor
cwtl
insb
ja
repnz
and
mov
aaa
mov
out
adc
arpl
mov
roll
aad
cld
mov
pop
mov
inc
pop
std
and
sbb
pop
mov
add
add
test
loop
aaa
ret
gs
fnstsw
push
xor
das
xor
rcrb
or
jecxz
pop
outsl
aaa
out
in
and
mov
hlt
hlt
fidivrl
push
sbb
fsubp
adc
iret
xchg
adc
sub
jge
push
jno
cwtl
ret
cmp
jecxz
test
add
out
int
inc
mov
push
negl
rclb
push
mov
call
scas
cmpsb
or
js
rep
jmp
xor
and
mov
pushf
push
das
jae
imul
lods
std
inc
js
subl
ss
shlb
add
inc
xor
ljmp
mov
cmp
pop
call
push
and
or
pop
bound
js
xlat
pusha
mov
hlt
inc
shl
pop
dec
inc
xor
hlt
fwait
js
ja
loop
mov
and
xchg
and
or
pop
fstpt
ret
sub
sti
arpl
shl
pop
dec
inc
xor
ret
push
xchg
vandps
mov
loopne
push
arpl
adc
pop
bound
sbb
inc
mov
xchg
fstpt
lahf
push
lock
ret
xor
or
xlat
push
incl
addb
repnz
adc
pop
testl
cmp
lret
lret
mov
ffree
xor
aad
sub
jae
cs
hlt
mov
lds
rcrb
xchg
stc
push
mov
in
sub
xchg
les
call
sbb
scas
cld
and
cmpsl
cmp
adc
adc
fsubrp
inc
clc
xor
or
repnz
jno
imul
pop
pop
sbb
xor
mov
or
jbe
std
pop
inc
lds
pop
jnp
inc
inc
mov
push
cmp
inc
xor
xor
add
adc
pop
fldl
push
and
aaa
pop
sub
stos
add
fldl2e
outsb
sti
fldt
mov
mov
loop
pusha
loop
sar
push
mov
pop
pop
or
or
mov
add
lods
sub
outsb
add
cwtl
repnz
sub
subb
clc
test
add
popa
lea
xor
adc
mov
loope
aas
jp
pop
inc
es
shll
inc
pusha
mov
int
shl
xchg
aaa
mov
lds
les
test
shll
arpl
sti
or
cmp
and
or
out
dec
cld
outsb
fidivs
jp
inc
ja
mov
fsub
imul
cmc
mov
pop
hlt
mov
inc
push
out
xor
es
ss
outsl
sbb
mov
scas
dec
inc
sbbl
into
fsts
repz
add
pusha
je
mov
out
inc
cmc
adc
decl
pop
push
lcall
fstpl
fs
cmp
or
aas
lret
adc
movsb
add
sub
mov
xchg
sbb
xor
xor
in
pop
cwtl
mov
lret
sarb
popf
sub
lds
addr16
push
or
xchg
out
andb
fmull
lods
sbb
call
int
dec
popa
test
out
daa
fldcw
mov
xor
push
or
icebp
ss
push
adc
mov
jmp
sbb
lods
in
jecxz
or
cmpsb
enter
into
sub
or
cltd
enter
orb
pop
mov
pusha
lcall
push
ror
stos
cld
xlat
lods
and
sarl
pushf
lcall
movsb
push
leave
cmp
inc
lods
loopne
push
cmp
mov
mov
scas
arpl
leave
push
pop
mov
mov
cli
sub
dec
push
jno
data16
jnp
popa
daa
push
int3
divb
and
ja
aam
or
sub
cmp
dec
xor
lret
xchg
lods
or
xor
and
cmp
loopne
jmp
pop
mov
nop
and
testl
sub
loope
jp
lret
xor
sub
ja
test
xor
out
test
pop
jno
mov
pusha
jns
inc
mov
in
cmp
sbb
mov
or
jne
and
sbb
subl
fs
and
push
clc
in
sub
and
test
inc
popa
add
mov
test
push
jbe
out
xchg
jle
push
test
adc
jne
mov
negb
mov
mov
movsb
fisubrl
jns
out
test
pop
push
cwtl
or
scas
es
jecxz
xor
adc
lea
out
clc
mov
sbb
test
mov
jnp
jo
cmp
ss
subb
xor
fstl
in
mov
push
inc
mov
mov
add
fcompl
pop
push
sahf
bound
xor
in
jb
in
mov
std
pop
sub
nop
cmc
movsl
fnsave
inc
pop
or
push
ja
imul
xchg
subb
adc
stos
pushl
iret
and
push
orl
push
xchg
pop
push
ficoml
ss
shl
std
mov
fisttpl
int3
sti
popa
push
rclb
or
outsb
testl
inc
lds
leave
mov
outsb
cmp
in
aam
fsubl
xor
fildl
add
icebp
jmp
enter
jns
push
ror
stos
cld
xlat
lods
and
sub
iret
ds
cs
andl
movsl
enter
stc
cmp
mov
push
ds
mov
mov
xchg
in
xchg
mov
pop
sub
push
jb
lds
ret
and
mov
adc
rorb
test
test
mov
or
popf
fs
cmp
ss
aaa
or
pop
pop
imul
imull
cmp
pop
mov
push
pusha
loopne
xchg
cmp
or
mov
inc
cmpb
push
pop
jge
and
and
xchg
mov
dec
pop
or
sti
lea
mov
mov
mov
sub
cmp
xchg
notb
xchg
push
push
inc
ret
push
sub
cmp
mov
idivb
inc
pusha
aad
and
cmc
pop
icebp
shr
xor
add
or
decb
jo
insl
cmp
pop
push
test
imul
or
rorl
mov
inc
out
rorl
out
fcompl
inc
imul
mov
sti
mov
cmp
pop
mov
ds
sti
adc
jne
into
cmp
push
je
outsl
cmpsl
in
mov
inc
and
cmc
repz
sbb
pop
inc
jmp
rolb
lcall
icebp
jno
inc
je
fcoms
sub
cmp
jmp
jmp
lret
mov
lret
lcall
or
mov
push
cmp
aaa
xchg
push
adc
rorb
test
adc
mov
scas
scas
jle
subb
jge
arpl
imulb
inc
ja
or
jmp
xor
add
les
ja
inc
ljmp
ret
mov
mov
das
outsl
jae
lods
test
jg
mov
test
sbb
jmp
push
ret
dec
pusha
push
mov
addr16
out
xor
aam
pop
aam
clc
sahf
insb
cltd
jns
aas
push
adc
fstp
pop
loopw
lahf
xchg
and
shlb
lahf
jnp
outsb
mov
pop
lret
ficoml
outsl
push
orb
adc
roll
pop
out
xchg
ret
sti
imul
sub
mov
sub
js
imul
faddp
sub
push
or
mov
mov
outsl
push
shr
push
jbe
mov
call
outsb
dec
xchg
incb
lock
je
push
movsb
and
aaa
aaa
xor
mov
call
jg
movsl
inc
mov
adc
je
pop
stos
gs
xor
inc
pusha
or
adc
les
and
push
daa
mov
out
sbb
xlat
xor
ret
iret
enter
and
dec
movsb
sub
mov
scas
xor
add
std
mov
or
inc
push
xchg
notb
pop
lods
mov
sbb
ds
xor
jnp
scas
testl
lods
popa
adc
test
sarl
addl
rcl
sub
cmp
clc
sub
xlat
add
call
popf
dec
inc
loope
hlt
adc
add
leave
xor
dec
dec
addr16
ss
push
pop
loopne
ss
cltd
out
sbb
adc
jmp
cmpl
jno
adc
stos
push
hlt
cmp
cmp
jg
mov
enter
imul
clc
dec
mov
pop
mul
jg
sbb
insl
or
call
shl
xlat
mov
mov
xor
inc
aam
jl
dec
xchg
adc
mov
push
std
dec
repnz
shlb
popf
lret
jnp
push
sub
jns
movsb
dec
mov
mov
daa
bnd
jge
mov
int
xor
mov
out
sub
dec
int
mov
loopne
pop
mov
adc
lret
popf
movsl
roll
cmp
jb
sbb
rcrb
arpl
outsl
scas
into
std
int
or
xor
push
push
aam
and
xchg
arpl
ja
mov
mov
mov
in
or
dec
mov
jns
movsb
dec
mov
xchg
and
cmpl
in
mov
ret
fs
cmpsb
and
adc
fs
jbe
sti
or
ljmp
or
rcrb
sub
popf
lds
mov
jns
sbb
push
rcrl
dec
or
push
pop
add
or
mov
jg
dec
lock
in
or
dec
xchg
xor
iret
adc
scas
sub
jbe
or
into
mov
xchg
xchg
jns
xchg
mov
mov
dec
add
add
xchg
repnz
adc
sbb
aad
cmp
lret
lret
mov
jb
pop
int
mov
adc
insl
je
cmc
testb
lds
cmpsb
pop
mov
orl
cmpsl
jnp
mov
dec
rcrl
rcrl
jecxz
xlat
insb
inc
xchg
cwtl
cmpsl
add
sahf
and
adc
xchg
jns
cmpsb
jmp
and
outsl
dec
jge
test
movsb
sti
cmpsl
testl
add
sub
out
add
inc
xchg
sub
cmpsb
ja
cli
test
mov
cmp
inc
lock
inc
jecxz
cmp
in
loopne
cmp
insb
add
xchg
shl
pop
or
xorb
push
mov
int3
divps
pop
shl
in
lret
xchg
mov
outsb
in
inc
xor
mov
bound
bnd
mov
gs
int3
pushf
dec
sbb
mov
in
or
call
pop
loopne
scas
lods
test
lea
add
push
xor
xor
jl
jnp
jge
xchg
jmp
shrl
daa
sbb
push
sbb
push
mov
fbld
pushf
fildl
ljmp
movsl
dec
fdivrp
je
sub
loop
add
mov
sbb
lds
out
test
sub
repz
xor
or
lcall
ret
or
aas
or
jbe
cmp
adc
ss
ret
cs
je
inc
inc
pop
and
int
ffreep
add
or
sbb
bound
sbb
mov
pop
stos
and
adc
imul
lods
out
shrb
dec
sbb
or
pop
jecxz
shl
hlt
push
mov
adc
dec
mov
jnp
je
scas
movsb
sbb
rclb
inc
xchg
sbb
inc
dec
jecxz
pusha
inc
jle
push
jbe
push
or
cmp
or
repz
lcall
fisubrs
inc
jnp
ret
shlb
mov
mov
push
out
fists
dec
xor
jb
push
push
fnstsw
cmp
insl
dec
mov
xchg
adc
sar
sub
test
outsl
out
pushf
mov
add
loop
push
xor
rcrl
cmp
or
les
cli
dec
dec
outsb
enter
inc
ficoml
inc
cmpsb
test
pop
test
pop
stos
adc
divl
in
ds
cs
decb
ds
adc
xchg
dec
and
pusha
lret
loope
inc
xchg
push
cmp
ss
out
sbb
sarb
push
cmp
fs
push
in
xor
cmp
pushf
xchg
mov
push
xlat
push
dec
test
gs
stos
or
xlat
mov
xor
rcrl
test
ret
push
adc
or
enter
idivl
les
aam
mov
das
adc
sbb
push
in
loopne
mov
mov
arpl
inc
xchg
mov
std
xor
push
mov
and
bound
andb
cmp
lock
mov
or
or
inc
sahf
mov
or
int3
and
pop
sub
sbb
dec
movsl
rclb
mov
dec
sbb
cmp
sub
add
dec
fmull
mov
out
fs
shlb
mov
mov
xorb
mov
frstor
or
pop
loopne
dec
out
pop
out
sub
sbb
fildl
adc
lods
in
outsb
dec
nop
jg
popl
cmpsl
add
sahf
cmp
and
js
dec
cs
ljmp
clc
xor
sbb
ret
fwait
mov
push
mov
add
and
xchg
das
or
pop
cmpsb
xor
pop
subl
cmp
pop
lret
dec
adc
xchg
push
dec
sbb
xchg
push
out
push
adc
imul
rcl
out
je
js
adc
xor
pop
test
and
and
xor
gs
mov
xchg
inc
rolb
lret
mov
xor
test
sub
inc
mull
arpl
insl
test
mov
adc
xchg
sbb
mov
fdivrl
push
aam
jge
leave
push
jno
out
aad
mov
cmp
xchg
dec
inc
mov
lret
jge
or
cmp
mov
in
mov
lahf
adc
cmp
sub
inc
mov
fiaddl
push
out
mulb
scas
fs
push
fisubl
cwtl
mov
addr16
mov
aad
dec
jne
mov
in
loopne
pushf
pop
aas
cmc
pop
mov
push
cmp
lods
stos
repnz
mov
ficompl
jle,pt
push
jo
pop
and
push
pop
jl
daa
xor
or
popf
sarb
pop
sub
lods
jmp
loop
sbb
lock
push
pop
lea
call
adc
aad
sbb
insb
test
add
das
push
lods
outsl
xchg
out
int
fs
sub
pop
pop
dec
jl
es
int3
jmp
fcmovb
fcompl
lea
arpl
xchg
cs
out
and
xchg
decb
repnz
jbe
sahf
jne
imul
push
lret
outsb
scas
lea
xchg
mov
loopne
jp
lret
ret
fmuls
mov
shrb
sbb
dec
cmp
cmpsb
and
sbb
clc
pop
std
aaa
xor
pusha
loop
xor
xor
cmpsb
push
dec
lret
jb
mov
xchg
cmp
mov
ja
rcr
sub
ss
popa
loopne
push
mov
mov
das
loope
sub
dec
call
fs
cmpsl
testl
mov
push
iret
ror
lock
movnti
lahf
adc
cli
sbb
cmp
sub
in
push
das
inc
ret
dec
movsl
fnstenv
jne
int
aas
es
push
adc
cmp
scas
sti
mov
sub
cmp
test
push
and
add
jge
sbb
stos
jne
jmp
dec
xor
movsb
into
enter
pop
cld
ljmp
mov
in
ret
sub
cmp
repnz
and
decb
imul
mov
sahf
and
inc
mov
jo
aad
test
sbb
pop
mov
lock
mov
ss
loop
insl
data16
xchg
imul
mov
out
inc
adc
sbb
pop
int3
and
fsts
xchg
insl
xchg
out
fisubrl
and
xchg
push
mov
mov
rorb
pop
sbb
pop
popa
repz
sahf
sbb
or
pushf
cmp
inc
cmp
test
fnstcw
sahf
aam
dec
andb
pusha
xor
add
lahf
mov
fisubrl
ljmp
pusha
testl
xchg
jns
sbb
out
std
movsl
dec
fdivrp
mov
push
adc
mov
mov
stos
std
loopne
xchg
or
test
sub
jno
adc
jg
inc
pop
cmp
mov
pop
sub
stc
aas
or
jbe
cmp
jns
gs
jbe
clc
ret
or
fldl
xchg
int
push
in
sbb
lock
cltd
pop
ljmp
out
sbb
jmp
imul
pop
sub
shll
es
mov
std
jne
aas
mov
je
sbb
pop
lds
cmp
pop
imul
dec
ret
rcr
pop
inc
and
push
pushf
cmpb
push
loopne
xchg
mov
std
sarb
add
aaa
pop
mov
daa
adc
pop
jne
popf
pop
ds
aaa
test
and
arpl
fs
mov
mov
test
pop
add
mov
push
push
out
add
out
mov
push
scas
fimull
mov
inc
mov
adc
flds
sarl
das
xor
add
pop
dec
js
xor
xor
jmp
jnp
jecxz
pop
cmp
in
and
xchg
mov
sub
adc
sbb
sub
fwait
repz
push
and
mov
xchg
aad
xchg
dec
dec
dec
aad
jmp
out
bsr
dec
mov
call
mov
aas
ds
dec
pop
or
lret
and
dec
pop
xor
pop
jmp
js
inc
sti
insb
inc
shll
arpl
sub
test
fs
or
in
mov
inc
xchg
in
jl
and
and
sub
fdivs
inc
xchg
je
jne
inc
inc
cmpl
sbb
lahf
stos
lcall
clc
inc
or
stc
test
into
dec
clc
lea
lret
sub
and
and
sub
sbb
xchg
push
dec
inc
sbb
pop
js
fidivs
cmc
cmp
out
sbb
or
into
dec
addr16
and
adc
ljmp
stos
les
stc
loopne
rcrl
loope
jae
pop
iret
lret
outsb
aas
jle
mov
pop
xor
jmp
sahf
push
nop
popa
scas
adc
cmpsb
cmp
mov
mov
leave
pop
out
int
call
xor
test
sub
and
fld1
out
insl
xor
enter
jae
repnz
xchg
rorb
std
add
mov
mov
mov
mov
dec
jge
push
cmp
fld
into
sahf
adc
dec
in
scas
jb
jmp
enter
gs
mov
xor
xchg
jo
sub
outsb
mov
negb
pop
xor
gs
push
xor
mov
jne
xor
jb
lea
inc
mov
lahf
sbb
ret
insl
enter
dec
test
mov
outsl
aaa
xlat
repnz
dec
stos
mov
ds
test
stos
xor
imul
add
xor
cmp
jecxz
iret
push
out
mov
cmpsb
test
mov
mov
push
mov
push
and
xor
mov
fidivrs
push
push
mov
dec
push
fldcw
int3
shr
xor
xor
xor
flds
adc
cld
in
mov
sarb
inc
insb
inc
in
push
or
sbb
stos
jnp
mov
pop
testb
xorb
cmpsl
aaa
pop
add
mov
enter
or
test
mov
push
mov
mov
jbe
rorb
pop
stc
jle
lock
sub
mov
mov
cmpb
mov
jle
inc
dec
xlat
nop
cltd
jge
arpl
jae
jnp
pusha
daa
xchg
fsubl
cmp
hlt
jo
dec
outsl
pop
repz
jg
cmpl
shrb
inc
dec
sbb
xchg
xor
mov
inc
sub
cwtl
lea
test
or
fsubr
enter
dec
xor
std
jb
ffreep
jno
lret
mov
adc
cmpsb
adc
jp
mov
ds
not
xchg
data16
xor
insl
push
in
lods
mulb
sbb
mov
inc
data16
loope
and
cmp
insl
inc
add
std
mov
dec
sub
mov
loopne
fsubp
movsl
inc
xchg
into
jge
dec
mov
push
jae
mov
mov
and
movsb
dec
mov
movsb
sub
or
cmc
stc
adc
mov
cmpsl
movsb
ljmp
or
stos
sbb
xor
lcall
or
inc
jg
jecxz
in
pop
pop
lds
in
ret
sub
das
xchg
nop
push
int
scas
outsl
jno
ret
dec
cmp
stc
push
outsl
adc
pop
lds
mov
cwtl
push
mov
adc
or
sti
sbb
jne
out
mov
ss
loop
push
test
xor
jae
shl
in
mov
rcr
arpl
sbb
sub
mov
mov
fstl
xchg
pop
std
pop
ret
fldln2
fcmovne
js
sbb
std
fidivrs
lcall
lcall
lods
cmp
hlt
mov
push
mov
or
mov
imul
inc
adc
inc
adc
out
push
shlb
scas
out
outsl
arpl
loop
mov
dec
loopne
pusha
cmpsb
sbb
lods
aad
out
xchg
mov
push
not
and
pop
push
inc
jmp
shl
inc
adc
mov
dec
mov
push
sarl
out
push
jne
cmp
in
xchg
or
xor
lret
pusha
xchg
mov
dec
jl
lret
dec
jge
mov
jmp
cld
insl
xor
mov
enter
lock
push
pop
lea
add
mov
mov
push
iret
push
int
add
das
push
lods
outsl
jge
push
fists
inc
and
dec
jl
es
int3
jmp
cmp
cmc
jmp
jae
inc
andb
enter
push
ja
sbb
cmp
les
call
arpl
aam
lods
xor
ds
daa
out
jmp
call
jle
in
lock
mov
add
repnz
aam
addr16
data16
push
call
and
js
mov
xchg
mov
xchg
das
imul
and
xchg
xchg
sub
mov
pushf
sub
mul
aaa
cmc
ja
push
jo
popa
fsubr
in
rcr
adc
dec
cmp
jb
ror
mov
pop
rcr
pop
pushl
sub
xor
mov
adc
in
aas
movsl
gs
mov
mov
subl
pop
and
mov
add
xor
adc
mov
add
fistpl
mov
cld
dec
int
push
jp
addr16
test
jbe
insb
jbe
inc
scas
cmp
cmp
push
rorb
mulb
leave
cmp
lahf
dec
mov
jbe
inc
lcall
and
push
pop
mov
jae
cmp
iret
dec
mov
inc
jmp
add
xchg
ljmp
adc
outsl
adc
mov
mov
jmp
iret
dec
inc
pop
popf
pop
jnp
adc
pop
jno
push
ficomps
mov
fdivs
jmp
sbb
pop
cmc
pop
js
cltd
rorb
lret
cwtl
je
int
mov
jge
aam
xchg
fwait
jno
push
sub
inc
mov
fwait
idivl
pop
add
lods
add
xchg
scas
adc
insb
ficompl
xchg
rcr
or
sahf
jle
dec
mov
pop
adc
sbb
mov
int3
mov
dec
jne
loope
out
sbb
lods
mov
add
pop
popa
in
gs
stos
jmp
sub
dec
add
movsb
popf
xchg
fdivp
push
fdivrl
mov
hlt
loope
inc
mov
daa
jns
mov
inc
data16
loope
add
push
dec
ret
out
mov
jbe
outsb
mov
xchg
inc
in
xchg
pop
push
add
xchg
into
jge
dec
mov
pop
imul
out
xchg
fwait
and
movsb
dec
mov
xlat
insl
push
cmc
daa
icebp
cmp
test
cmpb
mov
out
stos
repnz
popa
jbe
inc
out
out
mov
arpl
jg
lahf
ss
lahf
leave
js
sbb
std
fidivrs
cld
lods
mov
inc
nop
jbe
clc
sbb
icebp
lds
inc
scas
icebp
popa
and
or
daa
jl
inc
xchg
push
int
inc
test
sbb
cwtl
sbb
lods
mov
fsubs
xchg
sub
aaa
cwtl
fbld
andb
movsb
sub
negl
dec
repnz
xchg
mov
aam
xchg
lret
jns
add
jle
ljmp
sbb
pop
jo
xor
push
sub
andl
loope
int
daa
scas
in
frstor
pusha
adc
hlt
push
js
jmp
mov
or
sti
andl
and
out
fwait
push
and
jge
repnz
and
pop
pop
jno
push
mov
scas
xchg
mov
add
test
inc
mov
mov
repz
movsl
jbe
cld
cmp
or
and
js
in
jns
movsl
rolb
or
leave
mov
push
mov
lea
adc
cmp
mov
mov
testl
dec
mov
pop
in
mov
shrl
fcompl
mov
mov
add
add
lea
aaa
ja
sbb
loope
fnstenv
jne
int
pop
fstpl
sbb
mov
dec
loopne
fwait
andb
insb
jae
fsubrs
sbb
arpl
push
clc
popa
test
out
dec
outsb
pop
push
call
shl
clc
cltd
fimull
sub
inc
sbb
and
mov
mul
adc
punpckhwd
mov
xor
lock
fstpt
std
es
popf
lret
loope
iret
lcall
or
jmp
rcr
add
jnp
fisttpll
mov
orl
sbb
outsl
rcl
lahf
sub
lret
jb
cmp
int3
scas
std
jg
jl,pt
fldenv
je
adc
sti
mov
fstpl
pop
sahf
idivb
int
cmc
shlb
pop
vucomisd
xor
outsl
test
leave
push
mov
cs
imul
jb
add
mov
dec
and
mov
add
mov
jmp
nop
in
pop
push
into
xor
ds
jo
sub
and
popf
stos
push
and
ljmp
inc
push
out
dec
subl
arpl
sub
mov
shl
push
mov
cli
mov
loope
sub
xlat
add
mov
je
xlat
mov
and
mov
imul
xchg
adc
bound
dec
shlb
mov
call
gs
dec
dec
fstpl
data16
sbb
adc
imul
insb
inc
sti
aad
jb
adc
jmp
jne
add
ss
sub
pop
dec
scas
mov
orl
or
shll
jne
pop
movsl
int3
jmp
cmp
dec
adc
fldcw
pop
xchg
dec
xor
pop
push
mov
mov
sub
hlt
cmp
cmp
clc
js
in
pop
inc
cmpsb
sub
js
mov
hlt
roll
das
fdivs
enter
pop
xor
mov
cmpsl
push
jmp
sbb
je
mul
mov
push
push
test
rcrl
sbb
es
stos
jnp
jl
enter
mov
es
or
xchg
stos
adc
cmc
mov
loop
fists
sub
xlat
add
cwtl
arpl
bound
cmp
enter
loope
stos
int3
sub
xlat
push
mov
out
xchg
cld
mov
aas
outsl
dec
jb
mov
loope
lret
aaa
mov
fsts
popf
outsl
inc
testl
xor
jl
ret
pop
clc
loop
jle
mov
and
faddl
ss
sti
rol
call
fsubl
stc
imul
ret
repnz
and
adc
out
orl
xchg
xchg
out
data16
xchg
jp
mov
loope
and
ss
rorb
fisttpll
inc
sbb
fwait
dec
add
xor
shlb
jne
ljmp
arpl
xor
sar
xor
scas
cmp
jns
push
loop
and
fstpl
data16
sbb
adc
jecxz
in
pop
cli
add
repz
mov
cld
mov
setno
dec
clc
in
shll
cmc
add
aaa
jmp
or
mov
arpl
in
mov
mov
clc
mov
jne
pop
mov
stc
cmpl
add
fcmovnu
mov
sti
and
push
mov
aam
mov
imul
cwtl
pop
inc
pop
xor
clc
mov
xchg
xchg
subl
sub
out
ret
sub
inc
xchg
repnz
mov
mov
cmpb
inc
xchg
push
and
sub
divl
aas
scas
popa
jbe
out
mov
mov
out
inc
andb
adc
jne
fnsave
enter
and
adc
jno
mov
xor
fs
negl
pop
adc
mov
push
ja
jmp
rorb
mov
xchg
push
arpl
nop
cmp
mov
sub
dec
cmp
push
lea
inc
jmp
xchg
in
aas
ja
cli
jno
in
pop
movsl
xor
inc
roll
std
pop
sbb
or
adc
mov
xchg
outsb
cmpsl
dec
adc
les
inc
lods
inc
lock
add
xor
loopne
fmuls
cs
and
stc
xor
cmp
stc
sbb
dec
rcr
js
std
and
sub
sbb
push
js
sub
test
mov
inc
lcall
mov
pop
insl
push
cltd
cwtl
mov
inc
xor
jg
jnp
imul
adc
mov
cli
xchg
mov
movsl
testl
data16
sub
xlat
push
mov
mov
adc
pop
push
jbe
lds
sub
mov
stos
rcr
cmpsb
inc
jo
ret
xchg
nop
ds
inc
sub
or
cmpsb
adc
lcall
cmpsl
lock
cmp
mov
or
subl
cmp
cmp
pushw
jb
jmp
outsl
outsb
cmp
scas
cltd
insb
mov
and
imul
pop
nop
lahf
in
inc
lods
pop
jg
sub
push
dec
ficoms
mov
jg
icebp
lods
jno
mov
push
mov
cli
xchg
mov
testl
or
hlt
inc
mov
jle
xor
rcll
in
in
and
in
sub
cld
sbb
mov
sahf
ss
mov
pusha
inc
mov
mov
ljmp
dec
sahf
dec
scas
mov
orl
sbb
mov
xor
cwtl
nopl
inc
orb
cmp
pop
addr16
lcall
mov
pop
push
jo
jge
stos
faddl
int
xchg
pop
addr16
push
int
enter
pusha
jge
mov
pop
xchg
jecxz
mov
xchg
add
and
addr16
fsubp
and
sbb
mov
je
in
add
mov
leave
cmp
rep
adc
loop
sahf
sbb
stos
aam
add
loope
addl
fwait
pop
sub
push
xchg
lret
or
xor
push
arpl
or
xchg
pop
rcr
jno
gs
xor
mov
sti
and
scas
or
ja
pop
iret
in
mov
hlt
jb
mov
inc
jecxz
jbe
mov
push
adc
push
xchg
test
push
xor
cmp
sahf
test
pop
lret
push
sbb
pop
pop
js
push
lods
or
cli
jg
cmpsb
dec
mov
cmp
mov
std
shrb
or
inc
adc
push
inc
xor
sbb
sbb
adc
adc
shll
insb
jp
add
sarl
stos
xor
cmp
dec
out
gs
xchg
lahf
pop
ud1
jae
sub
scas
sahf
enter
dec
aad
insb
inc
movsl
push
xchg
mov
sbb
imul
mov
sbb
or
js
xchg
mov
sbb
push
arpl
jg
push
sub
push
sti
into
lods
rcrb
mov
roll
sub
jnp
int
ret
sbb
cmpsl
adc
test
cwtl
xchg
and
jl
dec
sbb
gs
mov
imul
addb
ds
jno
and
test
or
inc
jo
xchg
enter
jle
mov
jno
xchg
fidivs
jno
sbb
iret
push
jecxz
push
xchg
fiaddl
divb
fcmovu
orb
lcall
lods
sbb
mov
fimuls
arpl
dec
jp
fisubs
dec
icebp
stc
les
sti
xor
mov
das
mov
xorl
orl
lcall
add
insl
ljmp
orl
icebp
xor
dec
cwtl
jp
jle
dec
testb
icebp
mov
pop
fsubr
jne
xchg
leave
dec
and
cltd
leave
pop
in
and
aad
les
xsaveopt
dec
hlt
fwait
push
divps
push
mov
push
mov
out
lods
adc
lods
scas
fisttpl
jmp
pop
dec
jge
cmp
inc
popa
aad
and
cmp
nop
dec
es
mov
mov
or
inc
outsb
mov
shlb
add
xchg
mov
das
xor
adc
bound
or
imul
out
jbe
incl
movsb
repnz
cltd
aaa
inc
sub
or
cmpsb
adc
aam
mov
or
ja
and
fistps
in
sbb
and
add
sbb
scas
adc
push
sti
and
scas
or
ja
pop
iret
in
mov
loop
xchg
jl
jno
loope
movsb
jnp
xor
mov
push
sub
inc
shl
pop
lea
pop
outsb
sub
push
cmp
pop
mov
push
xchg
cmp
jge
daa
testl
jnp
sbb
hlt
or
dec
add
in
sbb
mov
xchg
mov
jb
push
sti
and
scas
or
ja
pop
iret
in
mov
popa
hlt
pusha
jp
icebp
shlb
and
xchg
das
in
std
adc
xor
push
arpl
js
push
xlat
push
aas
jb
jns
imul
sbb
daa
cmp
xchg
xor
add
in
outsl
jg
mov
lock
cmp
xchg
scas
scas
divl
mov
cwtl
shrl
int
adc
sbb
xchg
loope
and
sbb
imul
mov
dec
fcmovu
mov
xchg
adc
sbb
fcoml
rorl
jl
xor
sti
and
sbb
jmp
aaa
aas
and
dec
jne,pn
or
inc
jp
pop
adc
movsl
jo
push
andl
mov
mov
inc
xchg
push
mov
into
xor
pop
nop
stos
xlat
mov
out
popa
mov
ljmp
xchg
fwait
xorb
pop
and
add
fimull
cmp
xor
sbb
cmpsb
xor
aaa
cmp
lds
sahf
scas
push
imul
xor
mov
add
in
sbb
push
push
out
test
pusha
jecxz
repnz
jns
dec
cmpsl
enter
dec
mov
pop
add
xor
movsb
inc
sub
xor
ss
aam
xlat
mov
incb
je
fisttpll
mov
pop
fucomip
pusha
push
pushf
adc
or
stc
adc
loopne
pop
xor
mov
xchg
mov
mov
ficompl
enter
pop
inc
cmc
es
outsb
mov
pop
lret
ficoml
lcall
mov
lahf
adc
xchg
in
jmp
outsb
pop
out
stos
rorl
lret
cmp
aam
fimuls
pop
in
or
das
daa
imull
push
stos
sub
mov
push
loopne
push
xor
addr16
lock
and
jo
mov
lea
lahf
push
lahf
ret
pop
dec
js
sarl
sti
sub
cmpsb
xor
leave
cmp
ret
in
sbb
mov
or
lahf
cmpsl
mov
pop
gs
xchg
sbb
fstpl
into
add
sarb
sub
sub
scas
xor
add
addl
fildl
push
stc
cwtl
out
xchg
sbb
jns
movsb
dec
mov
xchg
nop
adc
lret
adcl
mov
incb
push
sti
jl
fld
pop
xchg
or
sbb
ror
sahf
fcompl
loop
adc
pop
push
adc
arpl
and
fldt
fs
int
les
cld
enter
into
popa
repnz
rep
push
hlt
cmp
inc
mov
scas
popa
test
out
aad
or
lea
loopne
jp
inc
dec
sub
inc
es
icebp
mov
xor
test
sub
cmp
jl
in
out
push
sbb
es
sbb
mov
jbe
add
mov
andb
inc
jns
adc
bound
scas
fadds
bound
aaa
sub
cmc
js
jg
sub
cmp
aad
push
mov
cmp
mov
push
movsl
pop
sub
and
aas
mov
fisttpl
out
fistl
lahf
or
lds
jns
inc
jo
xor
mov
outsl
aad
mov
mov
cltd
cmpsb
xchg
pop
pushf
mov
jge
call
movsl
int3
bound
mov
xor
sbb
sbb
leave
sbb
and
xchg
mov
jg
movsl
lret
lcall
cli
sub
test
arpl
test
movsb
cs
push
ds
cwtl
lock
int
insb
imul
pop
inc
cs
cwtl
xchg
mov
and
fsubr
pop
pushf
in
xlat
add
decb
out
inc
call
xlat
insb
in
popf
insl
mov
push
dec
mov
sbb
inc
out
adc
loop
aad
cmp
enter
scas
icebp
dec
xchg
dec
jbe
mov
fs
cmp
jl
xor
cwtl
cmp
outsb
cmc
cmpsl
inc
and
ljmp
orl
push
cmp
fsts
mov
test
push
mov
out
or
shrb
leave
dec
push
inc
leave
xor
inc
clc
ret
std
lret
mov
sub
mov
or
xor
es
shlb
inc
or
ret
jmp
mov
sti
push
movsb
mov
jae
mov
iret
enter
lods
into
push
pop
mov
jp
mov
adc
in
mov
dec
cmp
fimuls
out
jge
adc
or
cmp
adc
popf
jmp
cmp
pop
bound
mov
aaa
xor
mov
out
adc
loop
aad
cmp
imul
loopne
ret
rcl
imul
add
sub
cwtl
jg
fistpll
push
aas
add
fcoml
xchg
sysexit
mov
cmp
mov
mov
bound
sbbb
xchg
stos
jb
inc
lahf
dec
jo
fmull
inc
les
sub
cmp
out
int
enter
jge
into
sbb
xchg
adc
sbb
shll
mov
add
pop
dec
jmp
fisubrs
scas
inc
fwait
outsb
in
cmpsl
aaa
std
repz
sub
aam
movsb
jns
pop
dec
adc
int3
mov
mov
lcall
adc
dec
dec
and
loop
mov
mulb
leave
cmp
es
ja
cs
inc
sub
ljmp
push
stos
aas
aaa
mov
cs
cmpsl
cmp
pop
jo
xchg
shrl
pop
pushf
and
mov
std
cmpsb
xor
ds
xchg
bound
popa
lods
out
jo
push
sbb
xor
add
push
fwait
or
stos
jae
mov
movsb
jecxz
or
jbe
or
into
out
cltd
ss
popf
jl
out
push
jg
xadd
popa
dec
add
add
xchg
repnz
adc
clc
add
cmp
hlt
lret
lret
mov
add
xchg
popa
jp
jle
push
mov
sbbb
add
icebp
cmp
outsl
imulb
mov
in
rcll
sub
mov
sub
inc
cld
ficomps
fwait
pop
mov
add
lcall
hlt
mov
test
mov
cltd
int
and
and
cmp
and
pusha
js
pop
fdivs
dec
mov
dec
add
sub
ss
mov
test
inc
outsl
gs
mov
mov
arpl
shrb
sti
rcpps
sti
or
cs
inc
inc
mov
mov
adc
fiadds
rolb
xor
daa
das
jnp
mov
sbb
mov
ja
push
ficoms
addr16
or
cmp
ds
push
lock
xchg
inc
hlt
addb
test
add
mov
push
arpl
fwait
icebp
in
fstl
jbe
xchg
pushf
adc
addr16
in
scas
mov
cmp
or
daa
into
pop
mov
insl
scas
aad
aas
lcall
loopne
xchg
jo
lds
or
rorl
xchg
xchg
sub
in
mov
cmp
hlt
jno
clc
push
insl
mov
add
jno
mov
mov
lret
adc
or
xchg
in
lahf
dec
jo
fmull
inc
je
pop
inc
stc
ret
clc
adc
data16
adc
jae
mov
loopne
sbb
jmp
inc
push
jb
mov
adcb
mov
aas
push
jp
pushf
mov
xor
aam
add
arpl
bound
ret
dec
fwait
and
mov
xchg
jmp
mov
mov
sbb
jae
xchg
shrb
push
push
xchg
lret
sub
cmp
dec
das
sti
fstps
sub
cmp
aaa
into
jno
ficomps
sub
sub
mov
addb
mov
fs
add
pop
popf
js
repz
call
movsb
jns
pop
dec
adc
pop
add
sarl
ret
cmc
repnz
xor
cmc
fwait
test
add
cmc
les
cmp
je
adc
loope
sub
ljmp
sbb
imul
pop
cmp
lahf
mov
push
xor
pop
aaa
mov
andb
jge
xor
xor
cs
cmp
lods
scas
mov
and
jge
cmp
std
jno
int3
sub
sub
mov
add
pop
repz
add
leave
addr16
ret
leave
out
cmp
stc
inc
jge
mov
sub
iret
mov
mov
jecxz
std
add
push
pop
jno
sbb
cmpb
jne
dec
push
inc
sub
mov
cli
cld
sub
jmp
dec
xor
ljmp
loope
test
mov
stos
bound
sbb
lods
push
cmc
bound
sub
cmp
jno
movsl
mov
sub
dec
aas
and
xchg
jmp
push
mov
out
out
ds
push
int3
lds
pushf
fcmovbe
mov
sub
test
jb
xor
inc
sahf
ret
lods
int
pop
sbb
aaa
push
sbbl
inc
lea
ja
imulb
pop
loop
andb
in
outsb
sbb
xchg
add
aaa
xor
rcrl
mov
lods
enter
xchg
shlb
jl
xor
test
sub
mov
dec
loop
stc
cmp
scas
lea
inc
and
inc
or
stos
sbb
test
add
push
and
and
jb
or
add
xchg
mov
nop
packssdw
jae
push
push
mov
add
adc
test
push
mov
stos
cmp
mov
out
daa
cmp
mov
testl
je
scas
and
lock
jnp
inc
in
je
leave
sub
bound
or
sub
jae
insb
adcl
rcll
dec
xor
ja
ret
cmp
adc
or
mov
stc
cmp
adc
adc
cmp
add
push
mov
daa
xchg
mov
arpl
leave
ret
and
ret
jecxz
jle
out
pop
ror
push
adc
mov
or
sub
pushf
pop
mov
xor
hlt
pop
lret
add
lock
je
push
aad
ss
fcoms
imul
add
pop
and
mov
addr16
lret
mov
dec
xchg
ss
imull
xor
sub
add
mov
cmovae
sbb
andl
pop
sar
iret
pop
mov
mov
jp
lds
and
out
in
enter
push
test
outsl
cwtl
data16
leave
push
xchg
cld
shl
movsb
clc
add
aaa
or
cmp
scas
push
imul
fiadds
inc
movsb
stc
cmp
shl
sbb
insb
addl
jnp
rorl
xchg
stos
jae
sub
mov
push
push
orl
inc
mov
lea
sti
sti
outsb
adc
movsb
das
or
dec
mov
pop
enter
push
in
lock
movsb
jne
cmpsb
outsl
jg
fwait
or
sub
popf
mov
xor
mov
cmp
or
lods
cwtl
mov
ret
adcl
jmp
or
ljmp
jbe
push
es
ja
test
push
jns
push
cmp
mov
sahf
push
jle
jge
mov
pop
xor
fldcw
mov
pop
test
pop
movsl
fisubrl
jmp
into
lock
divl
lcall
mov
mov
pop
xchg
cmp
clc
js
div
mov
das
ds
push
sub
out
add
lahf
mov
and
ja
cmpsl
add
inc
int
push
es
insb
nop
mov
xchg
or
xchg
std
int3
mov
push
push
jmp
loopne
adc
popa
add
jmp
sub
push
or
scas
ljmp
mov
mov
push
inc
aam
adc
testb
clc
aam
ret
jnp
lock
imul
or
aaa
pop
push
or
loop
inc
inc
fisubl
mov
or
xchg
and
sbb
and
jle
and
lret
mov
mov
xor
mov
in
popa
dec
add
add
xchg
mov
pop
mov
lahf
mov
sub
adc
adc
lds
les
xchg
fldcw
lahf
scas
push
lods
in
cmp
sub
mov
adc
mov
inc
orl
pusha
orb
in
fbld
int
and
fwait
out
out
dec
imul
je
cld
outsl
or
or
xor
addl
sahf
cmp
icebp
mov
or
mov
sbb
push
stos
call
add
add
out
in
hlt
xchg
fstpl
add
daa
ja
push
mov
je
or
in
pop
push
je
sahf
mov
mov
test
xor
les
insl
in
jl
das
std
test
cmp
call
add
mov
jbe
inc
inc
fsubrl
daa
inc
mov
inc
stos
and
push
or
out
imul
pushf
sub
pop
stc
adc
push
add
sub
add
xchg
leave
lahf
sbb
adc
xchg
lods
sahf
sub
cltd
dec
add
stos
or
mov
mov
push
jg
je
ret
adc
lcall
imul
and
dec
jp
rcl
stos
int3
mov
jne
inc
push
je
in
adc
ret
int
cli
js
push
outsb
ror
xlat
and
mov
out
pop
pushf
in
data16
insb
dec
fidivs
pop
test
loope
push
mov
push
aas
push
jg
lods
test
out
push
adc
in
sbb
sub
cli
and
mov
push
or
imul
cmp
pop
fcmovb
ss
es
iret
sub
mov
or
aam
mov
add
mov
lods
pop
insb
in
xchg
je
cmp
xchg
test
shlb
add
or
push
mulb
mov
cmp
xchg
jns
lds
in
and
fnsave
adc
jmp
jg
repnz
test
mov
pop
push
sbb
fdivrp
dec
cwtl
jb
add
and
aam
ljmp
fildl
cltd
inc
pop
jle
pop
fnsave
dec
inc
mov
stos
cld
enter
lods
inc
push
roll
shr
xchg
stc
ret
mov
push
xchg
mov
fnsetpm(287
push
lock
loope
mov
pop
adc
and
fdivrl
mov
add
adc
stos
idivl
dec
popa
iret
jbe
jae
mov
fisttps
jge
and
jbe
inc
iret
cltd
rcll
add
aaa
xlat
sub
mov
jo
out
clc
mov
cwtl
insb
scas
and
inc
add
mov
aad
in
and
das
mov
mov
cmp
lods
xor
cmpsl
insl
movsb
push
dec
jno
or
inc
and
add
js
pop
mov
addr16
sub
popf
aaa
mov
mov
cmpsb
sbb
cltd
lds
lock
sbb
cmp
scas
insb
mov
je
jb
pop
mov
pop
jecxz
xchg
not
std
scas
inc
mov
dec
add
repz
test
shl
and
cmp
imul
repz
mov
fimuls
lock
shlb
iret
cmpsl
ss
cwtl
cli
or
sub
subb
bound
push
pop
inc
ret
mov
std
inc
sbb
daa
sub
mov
mov
fnstsw
pop
lcall
sbb
jl
fcmovu
cli
and
xchg
adcb
aaa
push
in
xlat
insl
dec
xlat
jnp
add
ret
push
outsl
mov
add
pop
xchg
cs
cmc
sub
sub
adc
stos
jne
push
je
testb
loope
loopne
jle
stos
jne
sti
insl
jns
rolb
nop
push
int3
sub
sub
cmc
rcll
pop
arpl
sti
xor
sahf
xor
push
fisttpll
dec
shll
lret
popa
call
cmpsb
rorl
shl
sub
inc
movsb
jl
repz
icebp
push
lods
mov
movsl
mov
sbb
popf
xor
mov
pushf
addl
stc
xchg
adc
int3
mov
jne
push
out
es
pusha
adc
dec
aaa
jbe
das
mov
mov
out
adc
lds
sub
inc
mov
mov
ret
inc
inc
lods
aad
push
repnz
in
pushf
push
cmp
scas
aas
cmp
push
clc
out
sbb
out
inc
repnz
aas
push
jnp
aas
xor
out
add
es
pop
fidivrl
xor
insl
out
lock
out
pop
mov
mov
cmp
aam
jge
inc
aam
fldenv
xchg
cli
jbe
out
jae
pop
dec
shll
xor
adc
xchg
mov
rclb
jecxz
mov
lahf
andl
pop
push
aam
mov
fld
in
mov
jecxz
in
jo
adcb
cmpb
mov
nop
pop
mov
fistps
inc
dec
adc
fbstp
sbb
inc
popf
gs
iret
or
movsl
repz
push
imul
mov
out
bound
shl
push
sub
rclb
insb
enter
arpl
pushf
jecxz
jns
dec
push
inc
shl
inc
add
xor
fcom
les
mov
pop
lea
movsl
in
iret
push
xchg
inc
jp
loope
pop
sbb
loop
fstp
loopne
cmpsl
push
jb
lods
push
sti
lret
pop
mov
xchg
fisttpl
cwtl
xchg
cmpsl
out
mov
sub
pushf
shlb
or
xchg
mov
popa
fmulp
inc
out
xchg
cmp
in
push
insb
and
xor
adc
inc
push
sub
cmp
fadd
into
add
imul
scas
gs
out
ret
push
push
mov
xor
in
mov
mov
and
xor
stc
mov
jo
sahf
push
inc
movsl
sbb
cmp
cwtl
xchg
dec
stos
sbb
mov
shl
jp
sti
jb
notb
testl
dec
jbe
leave
mov
notl
bound
sbb
sahf
notl
cwtl
pop
jmp
mov
std
out
loopne
mov
adc
mov
out
adc
xchg
jg
pop
fwait
test
xchg
mov
test
dec
sub
xor
dec
test
repnz
out
xlat
adc
xchg
stc
test
ja
adc
loop
jb
mov
jo
hlt
je
mov
push
mov
inc
out
and
dec
mov
mov
ljmp
fbld
mov
hlt
roll
mov
ss
fs
ss
or
and
mov
dec
ds
mov
insb
aam
lods
movsb
or
movsl
fisubrl
lods
xor
dec
xor
test
das
leave
cs
mov
adc
ljmp
mov
jno
xchg
push
jne
cmpsb
xchg
mov
sub
or
push
repz
sahf
icebp
icebp
lods
movl
test
cmc
cmp
pop
pop
clc
ss
int
pop
icebp
push
mov
sbbb
mov
cmp
inc
fildll
or
cmp
jae
push
popf
pop
jno
and
ficomps
rcrb
nop
mov
and
mov
pop
and
xchg
rcll
add
shrb
lods
bnd
lds
and
es
rcrb
mov
inc
movsl
rcrl
jae
mov
and
jmp
mov
loopne
dec
add
push
rorl
push
test
jle
add
test
mov
mov
daa
dec
dec
jno
test
aam
out
mov
jecxz
lcall
push
cli
invd
and
ret
ljmp
sbb
hlt
dec
stc
push
sub
sbb
cmp
fcmovnbe
clc
test
iret
xchg
cmp
mov
icebp
pop
loope
sahf
and
icebp
push
popf
ds
or
or
fimuls
es
dec
fdivs
in
push
mov
outsl
push
mov
mulb
enter
sbb
jl
imul
xchg
lds
jb
rcr
aas
negb
das
clc
sub
pop
dec
adc
push
clc
fdiv
cwtl
jg
imul
adc
ret
pop
dec
in
jb
stc
mov
mov
ret
mov
scas
push
dec
repz
sbb
pop
pop
and
aaa
mov
lds
jb
sub
movsl
jnp,pt
inc
xchg
mov
arpl
fs
sub
or
mov
bound
in
decb
jg
stos
adc
xor
mov
and
in
sub
sub
mov
fiaddl
mov
or
bound
push
cmpsb
adc
xchg
or
adc
push
outsb
push
mov
sub
andl
and
sahf
jecxz
mov
dec
fstl
pusha
dec
insl
ds
mov
jae
cmp
outsl
shrl
jne
cmp
sbb
and
test
clc
orl
cmp
int
jp
or
jno
jecxz
dec
add
stos
icebp
loopne
adc
dec
add
xchg
int3
dec
sar
incl
imul
aam
jne
mov
xor
adc
int3
add
and
add
add
push
movsb
cs
aaa
mov
mov
cmc
lret
dec
adc
inc
or
inc
shrb
mov
add
cmpsl
cmp
mov
xchg
sub
aaa
dec
loopne
outsl
fst
pop
jnp
push
outsb
clc
inc
mov
adc
cmp
or
inc
xchg
cld
cmp
xor
test
sub
cmp
inc
sub
push
jecxz
mov
and
mov
out
cwtl
cmpsb
out
sbb
or
into
dec
jmp
xlat
sub
lret
shll
test
jecxz
iret
stc
dec
call
hlt
push
cmpsl
sub
push
call
lods
adc
scas
push
aas
pop
inc
cmc
es
outsb
mov
pop
lret
ficoml
inc
loopne,pt
adc
adc
mov
shll
lahf
pop
psubq
inc
cmp
sub
aad
dec
test
xorl
add
dec
pop
or
xchg
or
out
daa
scas
push
insl
add
or
cmp
dec
jmp
push
cwtl
cmc
or
enter
sub
adc
inc
xorl
fidivl
jne
pop
mov
scas
fsin
ret
sub
sbb
or
cs
test
add
jp
push
sbb
cmp
mov
loopne
xor
mov
ljmp
cmp
ss
sub
sarb
and
popf
jno
mov
and
mov
mov
push
pop
add
adc
data16
inc
pop
mov
sbb
jns
insl
loope
push
dec
xor
mov
sbb
iret
call
test
daa
bnd
mov
push
dec
pop
xor
mov
mov
je
mov
cltd
loopne
lcall
arpl
lods
sbb
jp
and
cmp
jno
pop
sbb
inc
jno
in
mov
mov
lret
sbb
aas
outsb
in
xor
pop
xchg
xor
or
xrelease
and
mov
inc
es
sub
daa
cmpb
lret
ret
icebp
mov
sti
hlt
subl
dec
sub
in
iret
cmp
orb
cmp
je
pop
shlb
mov
sub
ss
insl
mov
add
jne
fcoml
mov
jge
add
cli
shl
push
shl
mov
pop
jle
movsl
push
pop
pop
push
fidivl
in
inc
popf
cmp
mov
jl
jb
mov
jmp
popf
cmp
loopne
cwtl
test
dec
cs
dec
cwtl
jle
stos
cld
sbb
dec
addr16
dec
xor
nop
ret
xchg
fiaddl
lahf
clc
clc
pop
or
sahf
fadds
pop
xor
ja
cwtl
mov
rcrb
adc
or
xlat
fisttps
adc
pusha
pop
popa
gs
push
lea
in
aad
push
cmp
or
pop
stos
divb
mov
gs
cltd
pop
jecxz
jp
or
sti
imul
mov
adc
incl
xchg
mov
loop
in
negb
rorl
and
mov
cmc
adc
and
enter
push
movsl
mov
sbb
sub
and
jns
xlat
dec
jb
inc
mov
shr
fmull
lret
add
sub
push
movsl
js
hlt
cmp
fisttps
mov
in
mov
pop
sbb
mov
push
cmp
addr16
insb
mov
cmpsb
ja
ret
dec
fwait
jmp
push
cmpsb
inc
cwtl
mov
testb
inc
xchg
sbb
fisubs
mov
push
sub
push
movsl
js
and
ja
roll
cmp
ss
aaa
icebp
decl
test
ds
push
enter
xor
loopne
jge
int
pop
xor
mov
pop
loope
jns
pop
je
xor
test
dec
xchg
movsb
outsb
sub
mov
or
int3
cmp
push
inc
pop
movsl
adc
inc
jo
cmp
mov
shrb
notl
fsubrs
aas
je
into
cmp
fnsave
push
sti
or
int3
cmpb
sbb
push
pop
push
pop
dec
seta
cli
shlb
sbb
into
mov
bound
mov
mov
mov
imul
or
push
mov
test
jno
pop
jg
clc
sbb
add
jle
inc
jmp
dec
sahf
dec
pop
arpl
addr16
adc
xor
div
sub
lahf
cmp
cmpb
lods
bnd
sub
mov
fsubl
inc
cld
push
jb
aaa
push
outsl
push
and
iret
mov
cs
das
ss
ds
clc
nop
mov
into
fnstcw
xor
add
push
fldt
adc
addr16
xchg
cmpsb
cmp
insb
sti
in
mov
mul
aas
out
mov
ja
icebp
sbb
pop
push
lods
sbb
adc
xchg
notb
mov
jae
dec
leave
ret
lret
sbb
inc
inc
push
movsl
jae
icebp
ss
xor
xor
out
push
sub
sbb
xor
jb
adc
daa
movsb
mov
xchg
push
pop
xchg
jns
mov
lock
ja
cmp
add
and
xchg
mov
testb
xorb
hlt
sub
jne
jmp
andnps
sub
adc
mov
sarl
jnp
xor
shrb
test
dec
test
dec
imul
cmpsb
mov
int3
inc
je
aad
sarb
xchg
lret
and
mov
mov
sahf
pop
sbb
leave
pop
fsts
fstpl
dec
ds
sahf
shlb
push
mov
sbbb
outsl
jne
push
xchg
inc
add
jg
jmp
pushf
cmp
cmp
fstps
das
test
fistps
lret
pop
jp
and
inc
fadd
sbb
xchg
sbb
jne
ds
outsb
stc
sbb
cmpsl
inc
negl
popa
icebp
adc
xlat
lods
repnz
pop
mov
mov
mov
das
scas
lret
mov
add
shrl
loopne
push
out
gs
lret
jle
sbb
in
sarl
mov
inc
inc
mov
insb
imul
pop
add
sbb
mov
outsl
jne
push
xchg
xor
loop
int
std
je
xchg
jnp
pop
test
add
push
out
scas
sbbl
das
push
inc
add
push
mov
sub
mov
fnstenv
cmp
fs
lods
pop
xchg
fcomip
movsl
jno
cmc
sub
dec
daa
add
mov
adc
pop
mov
push
in
call
cmp
jnp
int
and
cld
js
cli
sti
cmp
push
pop
iret
fwait
mov
daa
push
xor
in
iret
shll
enter
daa
sub
addr16
pop
sub
les
jg
rorl
je
mov
jmp
das
pushf
mov
sub
testl
xchg
or
push
push
or
push
sbb
dec
rol
xor
pop
push
and
adc
xor
push
iret
lods
cld
fsubrl
insl
pop
arpl
push
aad
lea
pushf
ljmp
sub
fisubs
mov
lea
rcrl
cmpsl
dec
dec
aas
cmp
mov
fnstenv
pop
xchg
inc
cmpsb
cld
adc
lcall
push
testl
fimuls
jp
bound
ss
inc
movsl
or
arpl
lock
js
xchg
lahf
daa
mov
ja
jecxz
adc
dec
push
repz
add
aaa
sbb
cwtl
fwait
mov
call
fisubrs
push
xor
pop
mov
adc
dec
cld
inc
sahf
and
aaa
and
aam
xlat
cs
mov
movsb
jp
test
mov
sbb
xor
cmp
cwtl
addr16
call
mov
ret
mov
leave
cmp
pop
pop
imul
lea
std
ret
pop
gs
cmc
mov
lds
adc
shl
das
push
fwait
xor
sbb
negb
jns
outsb
mov
add
inc
xlat
sub
xchg
push
sbb
jo
adc
int
jl
bound
movsl
xchg
imul
out
push
cs
fcoml
lock
hlt
cmp
or
mov
fcmovnu
int
inc
rcrb
xor
clc
stc
outsb
and
call
stc
pop
cwtl
clc
idivb
xchg
adc
or
add
cwtl
sub
in
pop
das
mov
pushf
pop
pushf
push
jp
and
sbb
inc
jno
test
bound
dec
sub
jmp
mov
push
push
or
mov
popf
lods
jp
sbb
push
dec
subl
push
shl
mov
mov
scas
push
inc
aam
shlb
and
adc
scas
pop
sarb
push
jmp
or
inc
xchg
xchg
add
cmp
sbb
sbb
adc
push
loope
push
push
xor
adc
fstl
hlt
mov
push
xchg
mov
dec
mov
into
arpl
add
jge
es
cmp
xchg
xchg
out
xchg
mov
cmp
jns
sub
stos
int
mov
jg
pop
outsb
jl
push
js
sub
rolb
jnp
pop
out
mov
testb
sbb
testl
movsl
or
insl
fwait
inc
mov
sub
repnz
pop
stc
cmpsl
jns
xor
ss
loope
test
push
pop
sub
sarb
jge
push
dec
sub
mov
rol
dec
add
mov
sbb
sub
sub
aaa
imul
int3
add
jnp
xchg
xor
push
mov
out
inc
jecxz
dec
inc
pusha
shrl
sbb
es
dec
xchg
pop
stos
pop
inc
inc
sub
in
outsb
xchg
inc
data16
imul
rcll
add
lret
sarl
mov
inc
sti
std
stc
add
movsl
mov
push
xor
ja
xchg
mov
insb
ja
fwait
dec
imul
fidivrs
adc
inc
sahf
dec
pop
mov
enter
sub
mov
mov
dec
iret
das
sbb
pop
cli
cmp
xchg
cld
ljmp
or
pop
dec
pop
sub
jno
daa
insl
imul
clc
dec
dec
xchg
push
je
push
movsb
dec
mov
push
lcall
push
jge
movsl
sub
scas
ja
cmc
cmp
push
and
outsl
psubd
sbb
pop
xchg
cmp
test
mov
out
push
fiaddl
pop
pop
movsl
sub
inc
fwait
cli
adc
jmp
fldenv
pop
push
jns
mov
sub
cmpsl
aam
xlat
fimull
sub
icebp
sub
jmp
movsl
sbb
cbtw
aas
dec
sub
inc
inc
jns
pusha
loope
mov
push
and
adc
or
xchg
mov
in
push
test
out
das
hlt
inc
add
add
lea
mov
popl
lea
stos
ds
stos
ret
cltd
jnp
ds
push
xchg
pop
out
addr16
sahf
and
push
outsb
jl
fbstp
sub
aaa
sub
push
cltd
mov
cmp
adc
inc
out
add
aam
or
dec
mov
xor
fisubl
popf
mov
lcall
jecxz
data16
repnz
mov
adc
test
aaa
les
sbb
mov
std
pop
clc
mov
mov
fstpl
sub
mov
mov
inc
cmp
adc
dec
xor
jb
mov
out
outsb
stos
mov
fwait
rorb
fnstcw
sbb
mov
in
xor
push
add
ds
dec
push
and
sub
pop
or
pop
adc
or
lds
jl
push
out
xchg
shlb
popa
xchg
bndldx
and
xchg
or
xchg
and
sub
test
and
cmp
jb
or
sbb
push
repnz
fcmovne
inc
sbbl
mov
inc
or
das
mov
fisubrl
xchg
mov
cmp
jg
cmp
pop
jecxz
out
lahf
inc
nop
mov
mov
and
jecxz
outsb
push
jno
shll
mov
mov
add
jl
shlb
push
movb
bound
mov
add
int3
fs
gs
cld
pop
xchg
je
or
pop
test
xchg
out
sbb
or
into
aad
mov
imul
xchg
jg
push
adc
lret
inc
nop
popf
mov
mov
fcmovbe
cs
cmpsl
js
leave
inc
addr16
imul
dec
shlb
ret
je
insb
or
pop
shrb
adc
aad
mov
in
fisttpl
and
xchg
sti
mov
into
imul
sbb
test
add
mov
xchg
and
xorb
mov
outsb
jae
cld
scas
aas
das
pop
shlb
push
adc
xor
sub
sbb
adc
out
scas
mov
dec
divb
inc
add
call
cmpsl
push
rcl
sbb
inc
add
push
fildl
or
xchg
xor
fisubrl
pushf
stos
xchg
test
mov
adc
enter
fimull
in
sarl
bnd
mov
arpl
push
mov
xchg
mov
jle
into
sbb
cmc
mov
xchg
sbb
in
cmp
fstps
xor
and
scas
cmpsl
push
mov
lods
or
mov
cmp
mov
shlb
sbb
rcll
enter
xchg
push
xchg
cli
ret
ja
pushf
add
pop
jnp
mov
push
push
push
push
inc
lahf
int
jmp
and
inc
out
jle
jne
sbb
cmp
pop
test
adc
jecxz
inc
call
aad
ret
pop
jno
in
xchg
cli
cmp
bound
or
js
sbb
jmp
mov
into
sub
or
fsubrs
jb
pop
fwait
dec
jp
sbb
enter
and
inc
pop
inc
pop
push
xchg
push
rdpmc
je
loope
and
mov
test
int3
fucomp
fldcw
mov
push
int
inc
arpl
add
mov
cmp
lods
adc
test
loop
push
bound
fldln2
mov
cmc
rcrb
mov
dec
lahf
cld
inc
je
push
and
aaa
cltd
leave
push
cmpsb
repz
loopne
stc
mov
cmp
push
dec
repz
add
lahf
in
test
repz
xor
sub
mov
add
movsl
out
loope
pop
out
adc
std
ds
lcall
call
sub
xchg
aas
fistl
mov
ss
roll
pop
mov
pop
loopnew
jns
inc
sub
cmpsl
ja
cli
out
lods
jge
xor
das
jbe
scas
xor
push
rorb
push
push
das
gs
rcrl
sbb
mov
das
addr16
pop
jl
fisubs
js
jnp
mov
es
add
or
repnz
or
popa
adc
mov
add
sbb
sub
or
dec
js
scas
cmp
ror
xchg
jle
loop
sti
jbe
xor
in
sahf
in
in
add
lods
imull
repnz
mov
popf
hlt
mov
sub
mov
jo
lret
insl
xchg
loop
fldcw
std
mov
mov
ss
pop
out
xor
or
cmpsl
out
js
icebp
sub
xor
cltd
pop
bound
aas
sub
mov
ljmp
lahf
cmpsb
fisubs
xor
insl
dec
insl
xlat
pusha
fstp
loope
cmc
stc
mov
add
jecxz
imul
test
adc
push
je
adc
push
out
dec
andl
sahf
pop
cli
rsm
scas
loopne
in
push
inc
imul
dec
xor
push
lods
sub
mov
test
cli
jp
test
arpl
pop
repz
es
pop
mov
cmp
stc
jnp
mov
or
jbe
push
incl
xchg
lret
xorl
fbld
outsl
xchg
das
cs
xor
fnstenv
mov
in
pop
inc
inc
js
lods
sti
jb
cmp
lret
iret
mov
pop
jmp
sbb
inc
mov
mov
lods
xchg
add
inc
or
in
xchg
roll
cli
fstpt
hlt
sub
adc
push
mov
aas
repnz
mov
inc
cmpsl
shlb
pusha
mov
int
dec
scas
fldenv
insl
mov
dec
sti
test
sarl
mov
xor
mulb
nop
dec
mov
dec
outsb
imul
ss
ljmp
sti
cmpsl
pop
das
repz
sbbl
sub
pop
imul
ffreep
xchg
sbb
test
in
ffreep
iret
xor
stos
les
loopne
cwtl
out
loop
mov
pop
mov
and
cwtl
imul
xchg
add
cmp
sbb
sub
push
sarb
vmulpd
xchg
inc
push
scas
repnz
jg
and
lret
testl
gs
test
mov
lods
out
popf
lock
cmp
lret
loope
leave
cmp
jo
mov
push
orl
roll
mov
lods
adc
lret
mov
adc
sbb
lret
es
push
incl
out
aaa
inc
sbb
push
ja
dec
dec
pop
pusha
outsb
add
push
mov
enter
sahf
inc
push
popa
sbb
xchg
arpl
sub
popa
inc
arpl
loop
addr16
xchg
test
pop
aas
inc
int3
cmc
lds
fisubl
push
adc
cli
ror
out
dec
pop
shll
addr16
loope
or
or
pop
shlb
out
rolb
movsl
adc
pop
adc
ss
das
cmp
cmp
lret
lret
mov
add
xchg
xchg
cs
ret
pop
cmc
xor
enter
into
int3
sub
pop
inc
mov
std
xchg
daa
insl
imul
clc
dec
out
bound
pop
and
cwtl
ret
aad
add
jae
enter
mov
push
push
lea
jnp
pushf
cmp
sarb
lret
test
rcrb
adc
mov
pop
lcall
jmp
inc
push
das
lea
lods
scas
jae
cli
adc
fcoml
scas
cmp
push
fld
pop
insl
lock
outsl
mov
std
out
hlt
arpl
pop
mov
int
incl
mov
dec
push
shrb
les
loop
es
mov
mov
out
mov
push
daa
insl
stos
hlt
mov
dec
lods
mov
rorl
insb
roll
adcb
cwtl
scas
cmpsl
and
stos
mov
je
test
insb
push
push
fadds
fnstenv
ds
js
nop
inc
xchg
sub
push
lret
push
loop
mov
mov
filds
cmp
mov
ja
or
and
ret
fstps
mov
in
stos
xor
in
das
and
and
sbb
cmp
mov
pusha
outsb
subb
outsl
and
jbe
pop
cmpsb
into
cmpsl
addr16
jnp
sbb
in
mov
xchg
jo
push
sub
dec
subb
into
xchg
push
inc
sub
jge
or
sub
je
jle
jnp
repz
fwait
sti
xor
popa
cmc
out
inc
jae
je
add
cmp
loop
cs
shl
rorb
lret
adc
test
nop
dec
mov
add
rcrl
xchg
jne
in
or
mov
scas
or
jne
lcall
pop
pop
inc
jno
lods
pushf
mov
loope
test
aaa
addb
jmp
out
mov
inc
pop
pop
push
test
addr16
sub
xchg
xor
pop
sub
lods
jb
rorl
jo
aas
jg
loopne
jnp
sbb
push
fsubrl
pop
mov
ja
pop
pusha
dec
jg
cmp
subb
pop
cmp
inc
xchg
add
inc
lcall
bound
pop
sbb
test
aas
inc
mov
nop
cmp
daa
push
fldt
jnp
add
jg
adc
fildll
xor
lret
adc
aam
cli
loop
jnp
xchg
cld
pop
loope
cli
rol
in
push
pop
std
out
push
imul
sbb
ds
inc
jo
jmp
cmp
mov
sbb
push
adc
ror
push
popa
push
ja
shlb
mov
inc
jg
lds
dec
ret
pop
push
mov
xorl
add
xchg
pop
repnz
push
out
shr
pop
stos
in
dec
hlt
push
add
fdivrl
out
rcll
dec
cmp
rcll
sahf
loop
push
xchg
mov
std
pop
movsl
repz
lods
das
mov
popa
rclb
lret
jno
pop
test
test
stc
inc
pop
mov
adc
inc
mov
and
loop
jl
or
insl
pop
mov
pushf
lahf
add
xchg
xor
nop
add
mov
cmp
in
outsb
test
inc
adc
jns
mov
jb
mov
scas
insb
xor
push
and
adc
repz
jmp
pop
fneni(8087
addb
add
jno
push
repnz
mov
pop
jmp
mov
xchg
xor
push
dec
icebp
push
push
into
cmc
movsl
ljmp
fbstp
and
loopne
stc
lock
sbb
adc
mov
pop
call
sbb
fisttpl
mov
cmp
sbb
xchg
jge
mov
or
jp
lret
xchg
mov
mov
pop
cmp
rcrb
movsl
les
movsb
jg
cmp
hlt
dec
push
or
jle
in
out
lret
ror
cmp
cli
pushf
js
push
cmp
ljmp
mov
fadds
enter
insl
adc
inc
paddusw
jp
xchg
pop
jg
cwtl
pop
or
sbb
fldl
push
icebp
negb
std
test
test
push
mov
mov
insb
insl
stos
inc
sahf
gs
out
add
mov
pop
js
outsl
ss
lret
sbb
and
pop
xchg
mov
divl
iret
lcall
movb
fimull
stos
mov
and
or
jmp
cmp
jle
lret
jnp
roll
pop
mov
orb
cmp
insl
in
xchg
test
daa
sub
or
shrl
mov
in
mov
in
out
cld
or
pop
dec
sarb
cwtl
jge
das
cwtl
inc
pop
hlt
leave
push
sub
mov
jle
jle
aaa
enter
addr16
out
and
mov
jecxz
sub
lret
pop
mov
add
daa
or
fdivs
sbb
cmp
mov
fidivrs
or
fstl
sti
pop
scas
mov
sub
add
lret
clc
lds
repnz
fstl
mov
aam
adc
push
cwtl
jno
xchg
les
jmp
inc
push
pop
movsb
pop
popa
daa
arpl
cli
lahf
paddusb
mov
fdivs
dec
add
fisttps
aas
cmp
ret
inc
xchg
mov
mov
ljmp
sti
mov
xchg
pop
bound
jne
jnp
loope
imul
mov
cltd
int
mov
mov
aaa
push
adc
mov
pop
xchg
movsb
daa
xchg
xchg
and
icebp
nop
mov
mov
daa
mov
gs
add
mov
add
sub
je
stos
pop
mov
rorl
movsb
lret
fisubs
fxch
push
je
cli
repz
stos
nop
pop
fs
xchg
in
test
xchg
adc
scas
push
test
and
or
mov
jae
jne
dec
push
sub
push
jl
pop
outsl
out
jmp
mov
mov
ljmp
jae
and
dec
stos
jp
sti
cld
sarb
fsubs
jle
mov
pop
sub
movsb
pop
cmp
lds
insl
in
rcl
jmp
adc
leave
ss
add
inc
push
sbb
and
shll
mov
out
repz
imul
ficomps
xorb
sahf
and
add
loop
sbbb
aam
add
cs
cmp
mov
leave
pushf
decb
mov
les
repnz
push
arpl
aam
xchg
and
push
cmc
mov
xchg
add
fldt
outsb
cvtps2pd
lds
movsb
stos
aad
hlt
in
push
cmp
pop
cmp
mov
mov
cmpsl
in
ffreep
iret
xor
stos
les
loopne
cwtl
mov
xchg
inc
popa
jecxz
adc
cltd
data16
or
fldenv
mov
adc
jb
decb
outsl
ret
pop
je
sub
rclb
sub
mov
out
fimull
jb
sbb
mov
sbb
jno
mov
cld
adcb
sbbl
fbld
pop
mov
mov
pop
jmp
imul
inc
jb
mov
rorl
or
mov
shlb
add
out
jl
dec
mov
imul
gs
call
mov
sti
push
xchg
loopne
mov
scas
cli
sti
sub
dec
and
sbb
in
stc
je
cmc
inc
jo
aam
mov
mov
mov
out
mov
fdivl
pop
pop
jns
dec
adc
xor
inc
cmc
adc
add
jno
mov
into
std
fnsave
pop
push
lcall
call
sarl
lahf
imul
push
imul
aad
ja,pn
hlt
xchg
mov
lods
sub
stos
and
pop
dec
pop
faddp
popa
stos
jmp
lret
inc
xor
adc
cmp
enter
sbb
pop
call
repz
sbb
imul
mov
jmp
testb
pop
cmp
mov
jecxz
outsl
cmp
lods
sbb
cs
add
lea
in
mov
mov
adc
and
loop
fldcw
data16
xchg
sahf
ret
xchg
in
fstl
divl
pop
and
fsubp
mov
xor
sub
dec
push
cmp
mov
adc
andb
call
adc
mov
fdivrs
scas
mov
out
scas
inc
loope
jg
xchg
xorb
aaa
lret
clc
test
push
aas
fidivs
outsb
repnz
xor
pop
ret
adc
cmp
dec
mov
es
sti
cmpsb
jb
testb
rorl
inc
cmp
je
fdivr
push
repz
pop
scas
or
or
insl
jge
xor
pusha
pop
dec
or
stc
ja
bound
mov
pop
scas
sbb
insb
cmp
sub
adc
push
mov
push
loop
out
pop
rcll
sbb
push
cld
outsl
sbbl
mulb
sbb
sbb
sub
aad
add
shlb
inc
jnp
aad
cmpsb
mov
bound
mov
lods
push
mov
mov
loope
lods
fcoms
dec
pusha
sbb
ret
mov
loopne
push
cmp
aas
fists
sarl
xor
and
push
jns
mov
testb
mov
scas
daa
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
scas
xor
lahf
cmp
lods
popf
and
xlat
out
daa
push
je
lret
jge
popl
pop
cli
stos
jmp
mov
adc
add
add
mov
incb
add
mov
and
arpl
shll
adcl
cmpsl
and
enter
xchg
xor
sarb
es
call
test
out
and
inc
dec
jns
mov
adc
mov
adc
mov
adc
mov
adc
out
arpl
mov
cmp
lods
popf
and
xlat
out
mov
fiaddl
out
pop
mov
dec
xchg
hlt
inc
sbb
sub
pop
jo
jb
divl
rorl
sbb
xchg
and
pop
test
leave
mov
dec
ljmp
iret
mov
push
in
ljmp
jo
stos
mov
adc
cwtl
cwtl
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
popf
iret
xor
or
popa
packsswb
lods
popf
and
xlat
out
daa
push
je
lret
jge
test
sbb
test
jns
cli
pop
scas
mov
lds
xchg
mov
or
mov
lret
sarl
outsl
fildl
or
adc
push
sbb
test
cmp
sbb
push
lods
mov
aad
mov
pop
and
pop
ljmp
fidivrs
call
or
shlb
incl
push
xchg
mov
push
scas
daa
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
inc
xchg
adc
xchg
fisttpll
sub
adc
enter
xor
loopne
sbb
clc
cwtl
mov
inc
dec
jns
mov
adc
enter
xor
loopne
frstor
push
sti
es
cmpsl
ret
push
fistps
pop
fcoml
lock
call
out
adc
mov
adc
fnstsw
repz
cmp
cmp
lods
popf
and
xlat
out
pop
mov
js
dec
gs
pushf
add
adc
or
lods
lods
xchg
clc
xor
mov
rcrl
xor
cwtl
inc
aad
xchg
push
mov
mov
stos
negb
and
xor
lret
sarl
outsl
lret
movsb
fmuls
dec
ljmp
cmp
dec
ljmp
repnz
or
into
lock
pop
mov
or
push
mov
push
sbb
ret
fists
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
js
rcrb
mov
es
icebp
inc
cwtl
add
in
imul
int3
fcmovnb
pop
sub
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
dec
jae
aaa
call
or
sbbb
mov
mov
xorb
fisubs
or
lcall
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
mov
adc
andb
dec
vmread
adc
adc
popa
in
sub
scas
xchg
sbb
or
sbb
jno
cmp
sub
call
cmp
lcall
add
inc
insl
setbe
dec
xor
stos
sbb
xor
xor
push
scas
daa
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
cmpsl
mov
and
sbb
in
xchg
or
or
fimuls
or
pop
clc
addl
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
mov
mov
mov
and
repz
ret
rorb
dec
mov
ljmp
adc
mov
adc
mov
adc
js
rcrb
mov
es
icebp
inc
and
stc
dec
mov
add
test
or
int3
fcmovnbe
pop
mov
xchg
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
ret
push
xchg
fucomp
xchg
fisttpll
sub
adc
enter
xor
loopne
jo
loop
lret
and
mov
xor
iret
std
movsb
enter
enter
xor
loopne
loopne
mov
cltd
sarb
mov
jl
ds
dec
loopne
stc
dec
int3
mov
inc
dec
jns
mov
adc
enter
xor
loopne
pushf
repnz
mov
pop
leave
or
pop
push
and
xor
pop
fucom
jno
addl
mov
adc
enter
xor
loopne
dec
jae
aaa
call
or
sbbb
movsl
fcomps
sub
mov
xorb
fisubs
or
lcall
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
mov
adc
andb
dec
vmread
adc
adc
popl
scas
mov
stos
fadd
orl
pop
dec
aas
pop
mov
add
adc
dec
negl
in
xchg
cmp
inc
insl
setbe
dec
xor
stos
sbb
xor
xor
push
scas
daa
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
arpl
mov
xor
movsl
pop
push
les
lret
in
push
adc
sub
pop
clc
addl
mov
adc
icebp
add
lods
dec
ss
dec
leave
mov
sub
jge
mov
pop
repz
ret
rorb
dec
mov
ljmp
adc
mov
adc
mov
adc
js
rcrb
mov
es
icebp
inc
out
xchg
xchg
stos
in
jge
test
or
int3
fildl
jb
cltd
test
sbb
call
out
adc
mov
adc
enter
xor
loopne
imul
jae
jle
lods
xchg
fisttpll
sub
adc
enter
xor
loopne
arpl
sbb
dec
pop
mov
xor
iret
std
movsb
enter
enter
xor
loopne
in
adc
mov
aaa
xchg
mov
jl
ds
dec
loopne
stc
dec
int3
mov
inc
dec
jns
mov
adc
enter
xor
loopne
dec
fs
or
push
lods
add
mov
adc
in
pop
fucom
jno
addl
mov
adc
inc
mov
loop
cld
clc
mov
aad
pop
clc
aas
test
jmp
dec
dec
jnp
jp
cmpsl
repz
and
xlat
xchg
jle
jecxz
enter
mov
sub
pmaxsw
push
lret
pop
xchg
out
mov
push
mov
fsubrl
pop
scas
test
cmpl
mov
movsl
pop
pop
fsub
pop
outsl
pop
pop
popa
test
xchg
call
or
sarb
pop
sub
jmp
sbb
cmp
cmp
adc
jb
out
shrl
inc
stos
pop
jno
cwtl
addr16
cmpl
jb
ret
pop
mov
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
inc
mov
scas
dec
mov
and
pop
clc
aas
test
inc
mov
jnp
jp
cmpsl
repz
enter
add
enter
add
pusha
lret
fisubl
aad
and
and
dec
lahf
int
add
push
mov
pop
and
xlat
shr
cmpl
cld
pop
pop
xchg
adc
pop
pop
popa
movsb
test
gs
inc
push
or
sarb
sbb
mov
jbe
cmp
cmp
adc
jb
stos
pop
jno
cwtl
addr16
cmpl
jb
ret
pop
mov
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
js
rcrb
mov
add
clc
fwait
cwtl
in
fiadds
int
ja
popa
popf
ffreep
out
dec
adc
es
orl
inc
cmp
xor
xchg
movl
mov
xor
push
repnz
adc
mov
adc
mov
adc
mov
adc
andb
dec
vmread
adc
rorl
dec
dec
call
fiaddl
push
mov
mov
sub
add
or
jo
lods
inc
std
mov
and
clc
in
cltd
ljmp
xchg
addr16
mov
aas
pop
test
or
mov
add
and
add
add
adc
mov
adc
mov
adc
mov
adc
jl
jl
dec
xor
and
mov
mov
jbe
mov
addb
xchg
mov
adc
mov
adc
repnz
inc
lcall
push
adc
pop
push
sbb
lds
jmp
lock
mov
fisttpll
sub
adc
mov
adc
enter
xor
loopne
je
ja
add
mov
jle
loop
or
inc
mov
jl
pop
xchg
mov
adc
mov
adc
enter
xor
loopne
subb
mov
test
cmpsb
mov
lcall
pop
xchg
mov
adc
mov
adc
inc
mov
pop
pushf
and
lea
pop
clc
aas
test
xor
jnp
jp
cmpsl
repz
arpl
inc
xchg
mov
in
inc
out
ja
loope
ja
dec
fwait
ljmp
mov
jb
add
push
mov
mov
mov
jl
in
js
dec
mov
ljmp
fsub
pop
outsl
pop
pop
popa
push
shufps
inc
push
or
sarb
mov
sbb
sbb
cmp
cmp
adc
jb
rorb
in
pop
add
pop
jno
cwtl
addr16
cmpl
jb
ret
pop
mov
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
js
rcrb
mov
add
dec
repnz
mov
scas
inc
stos
out
dec
ja
popa
popf
ffreep
out
dec
adc
dec
pop
jmp
or
xchg
push
push
mov
mov
xchg
addl
stos
xor
push
repnz
adc
mov
adc
mov
adc
mov
adc
andb
dec
vmread
adc
hlt
push
xchg
mov
dec
call
fiaddl
push
mov
mov
sub
add
or
std
lret
in
pushf
mov
popl
and
clc
in
cltd
ljmp
xchg
addr16
mov
jle
addr16
jge
lds
mov
add
and
add
add
adc
mov
adc
mov
adc
mov
adc
jl
jl
dec
xor
and
mov
mov
dec
cwtd
adc
clc
addl
mov
adc
mov
adc
repnz
inc
lcall
push
adc
pop
push
sbb
lds
jmp
lock
mov
fisttpll
sub
adc
mov
adc
enter
xor
loopne
mov
sbb
push
pusha
mov
out
das
js
aas
scas
aaa
inc
mov
jl
pop
xchg
mov
adc
mov
adc
enter
xor
loopne
subb
mov
test
cmpsb
mov
lcall
pop
xchg
mov
adc
mov
adc
enter
xor
loopne
mov
cmp
popa
rcr
xchg
push
mov
jno
mov
cld
mov
adc
mov
adc
inc
mov
and
and
or
loope
popf
icebp
mov
push
fdivp
in
call
stos
div
sub
popa
mov
loopne
sbb
sbb
dec
jb
out
imul
push
outsl
test
out
cmpb
adc
fistpll
repnz
cmpl
mov
inc
and
pop
push
dec
jecxz
xchg
js
dec
aad
or
scas
ds
inc
insl
sbb
cltd
mov
shll
cmp
inc
arpl
out
jbe
int
flds
sbb
push
dec
jl
mov
mov
push
mov
int
clc
arpl
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
pop
push
sbb
das
movsl
rolb
add
adc
dec
xor
and
shld
adc
cmp
enter
aas
cmp
xor
xchg
mov
adc
mov
adc
enter
xor
loopne
sub
and
mov
sub
mov
rcrb
xor
loopne
mov
cmp
aaa
xchg
sub
mov
push
mov
cld
mov
adc
mov
adc
enter
xor
loopne
test
mov
sbb
test
xchg
popf
mov
adc
enter
xor
loopne
inc
mov
pusha
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
jge
out
mov
pop
outsl
outsb
or
hlt
pop
inc
daa
or
stos
mov
out
mov
xor
aam
cmp
or
cli
mov
adc
mov
adc
inc
mov
and
and
or
loope
jmp
cmc
into
pop
cltd
int
xchg
lock
push
cld
ror
scas
rcrb
lret
sub
inc
roll
jno
out
dec
icebp
mov
dec
jb
or
cmp
cmc
or
push
outsl
test
out
cmpb
inc
sbb
movsb
fiadds
fstps
in
js
dec
mov
sub
inc
repnz
xor
xchg
js
dec
aad
rol
xchg
and
out
jle
xchg
xchg
shll
cmp
inc
jbe
sub
cli
cli
mov
flds
sbb
push
dec
jl
mov
mov
push
mov
int
clc
arpl
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
pop
push
sbb
das
movsl
rolb
add
adc
dec
xor
and
cmp
aaa
cmp
enter
aas
cmp
xor
xchg
mov
adc
mov
adc
enter
xor
loopne
mov
pushf
lcall
fnstsw
mov
rcrb
xor
loopne
mov
cmp
insl
clc
nop
xchg
scas
aas
fidivs
mov
cld
mov
adc
mov
adc
enter
xor
loopne
test
mov
sbb
test
xchg
popf
mov
adc
enter
xor
loopne
inc
mov
pusha
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
jge
out
mov
pop
outsl
outsb
rolb
ljmp
fs
mov
xor
aam
cmp
or
cli
mov
adc
mov
adc
enter
xor
loopne
cmp
pop
fnstcw
fndisi(8087
adc
add
lock
mov
into
subl
mov
fndisi(8087
adc
add
inc
inc
push
movsl
jae
cmpsl
cmpsb
and
sub
imul
jae
dec
pop
xchg
imul
sahf
mov
enter
push
cmp
fcmovu
push
adc
outsl
jecxz
fwait
mov
xor
push
scas
daa
mov
adc
mov
adc
movsb
inc
dec
in
int3
mov
jno
mov
lods
popf
and
xlat
out
cmpsl
sbb
repz
scas
rclb
and
nop
stos
mov
lahf
mov
scas
leave
adc
aad
fidivs
pop
push
pop
in
dec
je
push
xor
sbb
add
nop
add
scas
push
aas
pop
inc
cmc
es
mov
jg
mov
adc
mov
adc
mov
adc
mov
adc
jb
and
mul
push
adc
ds
daa
and
ja
js
mov
lods
popf
and
xlat
out
cmpsl
sbb
repz
scas
xorl
cli
out
cmp
pop
mov
adc
aad
fidivs
pop
jno
add
xchg
dec
je
push
xor
sbb
add
nop
add
scas
push
aas
pop
inc
cmc
es
mov
jg
mov
adc
mov
adc
mov
adc
mov
adc
lret
pop
es
aas
arpl
push
nop
dec
jecxz
outsb
sahf
in
mov
adc
mov
adc
lea
mov
sbb
or
cmp
jne
mov
enter
mov
adc
enter
xor
loopne
pop
fsts
test
mov
pushf
or
hlt
xlat
cli
jb
mov
or
mul
push
adc
mov
adc
mov
adc
enter
xor
loopne
pusha
push
rcll
pop
lahf
stos
es
cmpsl
ret
add
fisttpl
ljmp
hlt
mov
shr
xchg
lds
adc
mov
adc
sub
mov
cmp
lods
popf
and
xlat
out
hlt
mov
into
xchg
enter
xchg
out
shl
ss
mov
out
int
enter
xor
out
mov
mov
inc
movsb
sbb
pop
mov
jno
xchg
dec
jl
in
add
addr16
lods
pushf
xchg
outsb
dec
xchg
incb
pop
daa
adc
lods
rorb
mov
mov
stos
fsubrs
pop
jg
movsl
cmp
movsl
icebp
dec
xchg
dec
xchg
or
xorl
pop
push
and
fcmovnu
cmp
pop
loope
cmp
fcomps
mov
test
mov
cmp
in
mov
lock
lret
fwait
add
adcl
int3
mov
sbb
jb
xchg
daa
pop
pusha
dec
bound
lods
add
xor
dec
jbe
push
je
lods
sbb
roll
roll
addr16
js
mov
sbb
push
rorb
mov
cmp
add
xor
mov
aas
jnp
ror
mov
fmull
jb
add
xchg
or
lea
add
popa
daa
jbe
push
and
insl
cmp
dec
or
mov
outsl
add
mov
jg
jg
rclb
mov
sbb
jecxz
jecxz
shrb
rep
push
hlt
cmp
stos
mov
pop
inc
jecxz
ljmp
repz
aaa
test
scas
xchg
xor
aam
adcl
inc
xchg
and
in
int3
int
jl
add
jno
dec
loope
cltd
inc
out
daa
jo
in
sahf
pop
jg
mov
add
mov
lgs
gs
adc
jbe
cld
sub
xchg
lret
test
jo
fmull
inc
mov
jge
mov
sub
gs
pop
inc
or
xor
testb
or
es
mov
icebp
jbe
es
leave
stos
jecxz
mov
mov
mov
in
arpl
outsl
scas
into
std
jne
lret
lods
cmp
les
stc
cmpsl
push
xor
mov
insl
pusha
pop
ljmp
jbe
cli
outsl
mov
scas
das
and
push
scas
xchg
sarl
aas
pop
inc
cmc
es
outsb
mov
pop
lret
ficoml
push
or
adc
adc
lcall
xchg
jecxz
dec
sarl
mov
sbb
pop
adcl
stos
cmp
mov
or
ret
std
jb
or
loop
enter
push
pop
pop
es
inc
mov
xor
xchg
inc
push
mov
hlt
xchg
movsb
push
cmpsl
dec
jmp
pop
mov
cmp
push
enter
roll
xor
ret
imul
jno
in
sub
movsl
lret
lcall
cli
sub
test
arpl
movsl
xchg
push
mov
cmp
loope
adcb
jecxz
xchg
divb
mov
dec
sti
shrb
fs
xor
sbb
cmp
mov
daa
pop
inc
andl
and
mov
xor
sahf
popl
shlb
cmc
movsb
mov
fcmovnb
adc
add
mov
sub
pop
loopne
cmp
sub
into
inc
fnstcw
push
negb
data16
push
cmpl
sbb
push
stos
jge
testb
test
movsb
call
xor
aas
test
or
xor
or
xor
es
shlb
les
xorb
jp
loope
sbb
in
jns
movsb
dec
mov
and
fisubl
stc
ret
aad
cli
int
add
cmc
lods
lods
inc
int3
outsb
fucomp
outsl
in
inc
rcl
out
cmp
lock
lret
push
not
ror
xchg
pop
cmp
inc
jne
std
js
fs
mov
xchg
sub
imul
sub
scas
sub
movsb
out
adc
xlat
pop
xor
shlb
jns
adc
cmp
inc
dec
xor
fdivs
mov
pusha
orl
pop
add
adc
mov
test
into
mov
sbbb
and
insl
jbe
add
mov
andb
inc
jns
xor
lods
cmp
fdiv
jmp
insl
test
xor
lock
push
sbb
inc
jo
xor
lock
cmp
movsb
insl
jge
das
cs
inc
xor
bound
nop
mov
xor
mov
imul
pop
jle
inc
dec
cmp
loopne
adc
mov
and
push
ds
dec
sub
push
cmp
push
je
xor
mov
jge
std
jo
sarl
or
xchg
ds
push
fdivs
mov
testb
out
mov
mov
out
pop
fsubrl
mov
rcrb
fsts
lds
rol
mov
in
or
outsl
dec
sub
dec
add
ret
jae
jbe
lret
imul
push
movsb
imulb
push
rorl
xchg
xchg
sub
in
mov
cmp
hlt
jno
add
cmp
dec
ja
ljmp
lret
adc
and
and
mov
sti
ret
push
loope
sub
add
subps
pop
std
popf
sbb
stos
cmc
movsb
stos
push
pushf
dec
sub
jge
mov
inc
and
insb
add
lcall
jmp
or
inc
adc
shr
cmp
cmp
clc
js
jae
sti
dec
out
add
je
push
add
stos
icebp
loopne
push
imul
jae
add
pop
mov
andb
jno
jae
outsl
inc
lods
and
jae
sub
mov
or
xchg
sub
push
movsl
xor
push
mov
adc
mov
lcall
mov
and
dec
daa
je
pop
cld
mov
repz
jp
jne
mov
jb
call
int
mov
push
push
sbb
mov
imul
jnp
cmpsb
stc
jmp
ficoms
jno
inc
aaa
popa
pop
push
mov
orl
cmp
cmp
clc
js
in
leave
decl
in
dec
adc
aam
rclb
dec
add
or
jl
stc
ja
push
lea
dec
push
mov
mov
sub
push
cmc
lret
cmp
dec
cmp
and
cmc
stc
aam
hlt
jle
lock
cmp
pop
les
mov
mov
je
ficompl
loop
aam
mov
push
push
pop
push
sub
push
xchg
lock
jge
mov
pop
dec
jb
add
les
jmp
loop
aas
gs
pop
lock
popf
roll
sti
lret
pushf
mov
insb
aam
lods
movsb
adc
divl
mov
imul
das
cmp
les
push
sub
insb
jae
sahf
cmc
sbb
fidivl
jns
sub
xchg
jae
adc
mov
jbe
outsb
aaa
push
je
dec
dec
in
inc
pop
mov
adcb
jmp
sbb
push
imul
and
andl
es
push
sbb
sub
pusha
inc
sbb
pop
xor
shll
mov
mov
jmp
mov
push
out
xor
jno
or
aaa
dec
int3
sub
adc
imul
loopne
adc
xchg
and
push
add
adc
push
fbstp
push
mov
xchg
cs
jne
cmpsb
inc
push
jae,pt
call
cmpsl
sub
and
mov
shll
out
push
xor
xchg
mov
shlb
mov
out
out
adc
sbbb
mov
inc
enter
rol
mov
scas
loop
cmp
dec
ds
cmpsb
ret
mov
mov
jnp
fstps
mov
cmp
push
mov
and
lcall
out
iret
sub
outsl
rorb
and
push
pop
xchg
repz
cmp
or
pop
fsubrs
mov
pop
mov
sbb
shrl
mov
adc
push
fbstp
push
mov
repz
pop
out
pusha
add
out
lods
pop
ror
mov
test
pop
subb
ljmp
add
sub
add
xchg
into
dec
adc
movsl
sti
xchg
rolb
les
push
imul
sub
outsb
jne
addl
pop
and
push
addr16
mov
iret
test
sbb
sbb
adc
mov
loop
fdivs
sub
adcb
inc
or
insb
jnp
test
jmp
mov
xchg
jp
inc
push
scas
xlat
mov
mov
mov
jmp
mov
mul
aas
leave
pop
dec
mov
mov
xor
sti
mov
ret
or
add
roll
dec
mov
push
inc
mov
loopne
orl
mov
sbb
ret
pop
jb
inc
add
bound
sbb
popf
fimuls
insb
les
mov
push
sbb
leave
pop
jmp
push
mov
mull
lea
jb
mov
cwtl
sub
inc
stos
push
ret
push
jo
loopne
out
les
int3
mov
and
mov
rcrl
div
jbe
pop
fcmovu
fildl
mov
cmpsl
sub
fidivrl
cwtl
cltd
push
lea
mov
add
hlt
pushf
stc
dec
inc
add
inc
sub
mov
pop
xchg
sbb
scas
xor
xchg
mov
addr16
leave
xchg
xor
loop
push
cmp
loope
das
enter
or
jg
pop
fcmovb
pop
jb
push
xchg
mov
into
mov
push
push
cmp
dec
inc
xor
nop
cmp
pop
xchg
repz
fisttps
lcall
pop
dec
dec
cmpsl
aaa
pop
xor
loopne
mov
mov
bound
cmpsb
mov
les
jmp
add
in
rorl
pusha
jecxz
add
xor
and
dec
divb
xchg
mov
adc
mov
mov
loop
cli
inc
insb
lods
int
sub
push
fs
rorb
scas
mov
leave
sbbl
mov
or
xchg
and
lock
mov
enter
outsb
mov
mov
arpl
push
sbb
mov
add
fbstp
clc
sub
out
loopne
mov
insl
neg
push
or
jge
aaa
xor
lahf
ja
lret
pop
dec
outsl
mov
js
jl
fcoms
ss
cmc
rorl
jo
rcrb
xchg
add
int
sarl
pop
out
jge
sar
fcoms
lock
pop
jecxz
add
es
fwait
push
es
in
sub
sub
sbb
cmp
insl
pop
add
dec
lcall
jno
adc
pop
add
inc
scas
xchg
cltd
and
sbb
sub
mov
jo
pop
sub
test
jb
xor
inc
sahf
ret
lods
fstpl
jmp
insb
in
insl
xor
arpl
lahf
addl
stos
nop
mov
push
xlat
stos
pop
push
push
pop
call
mov
insb
pop
xor
bound
mov
shrb
leave
dec
cld
xchg
mov
inc
xchg
inc
test
xchg
daa
out
jmp
call
jle
dec
das
into
nop
dec
cmc
ds
push
hlt
mov
stc
mov
cmp
and
jmp
sbb
jge
je
lock
xor
adcl
mov
add
repnz
push
cli
dec
xchg
pop
and
dec
sub
xor
ret
add
mov
xchg
jb
outsb
mov
mov
push
mov
inc
out
out
fiadds
fstpl
data16
sbb
adc
stc
test
dec
lock
leave
pop
ljmp
aas
jl
mov
jb
pop
pop
dec
leave
or
pushf
clc
dec
sbb
lock
xchg
pusha
test
insb
sbb
sub
mov
or
sbb
cmpsb
leave
adc
dec
cmp
or
dec
insb
cld
ss
mov
insl
jge
sahf
jmp
fidivs
cmp
jb
mov
lea
loopne
shrb
lods
add
lds
jne
movsb
cmc
push
ljmp
fcomp
in
xchg
mov
cmc
cmpsb
pop
pushf
out
push
mov
vminss
sub
cmp
mov
add
enter
inc
xchg
ljmp
test
or
outsl
das
adc
ss
rcrl
inc
pop
or
gs
add
xor
xor
or
mov
call
roll
lods
pop
cmpl
inc
add
ja
ds
mov
pop
fs
sub
out
leave
jo
mov
lock
adc
push
add
lret
and
and
push
mov
sub
fld1
scas
cmc
push
inc
add
push
jl
movsl
subb
sbb
jl
sti
fisttps
loop
push
mov
push
sbb
rcrl
mov
mov
mov
push
or
lcall
sti
subl
stc
fwait
cmpsl
aad
das
lret
pop
jl
addr16
cmc
fcoml
ja
daa
jge
adc
flds
sub
add
out
cld
push
mov
sub
mov
inc
adc
xchg
mov
and
out
call
aam
sbb
pop
scas
shll
in
pop
add
fsubr
sub
push
test
pop
jle
mov
and
dec
xor
xchg
popf
xchg
cmpsl
sub
ljmp
pop
mov
mov
adc
roll
repz
jno
into
sbb
cs
mov
push
fucom
mov
or
mov
iret
pop
xor
fcomps
xchg
pop
dec
lods
loope
aam
jb
sub
fninit
clc
inc
leave
out
jecxz
cwtl
sub
loopne
mulb
sbb
xlat
mov
add
dec
pop
push
fistps
sbb
nop
dec
sbb
adcl
jecxz
sub
dec
stos
test
scas
inc
lcall
xchg
divl
sbb
sarl
dec
gs
cmpb
push
pop
inc
mov
test
sub
sub
sbb
je
jg
or
mov
and
sub
sbb
cwtl
dec
cwtl
mov
lods
mov
adc
imul
jne
push
xchg
jl
hlt
ficoms
hlt
mov
xchg
in
adc
ss
data16
fistpll
jecxz
pop
or
loopne
sahf
aad
mov
popa
mov
dec
adcb
sub
gs
xchg
xchg
aaa
dec
xchg
lods
add
inc
mov
lret
mov
out
lock
jg
and
mov
movsl
out
inc
dec
leave
cmp
lds
test
in
adc
mov
roll
sbb
jns
pushl
cmc
push
stos
cmp
add
xchg
sub
add
mov
mov
mov
jge
mov
adc
add
jno
ret
mov
pop
add
lock
sahf
ja
mov
shr
insb
dec
ljmp
clc
sub
loope
add
xor
inc
pop
or
adc
je
jp
cld
loop
jl
dec
adc
fstl
fcompl
cmp
mov
sti
and
mov
pop
sub
loope
mov
int3
ss
rorl
aam
fldcw
out
ret
stos
ret
es
jecxz
dec
cmp
das
ljmp
sbbb
xchg
imul
fs
jmp
insl
or
out
scas
loope
mov
cld
movsb
fidivrl
or
inc
sbb
jb
or
ss
xchg
sbb
inc
or
jae
shr
loope
pop
pusha
mov
mov
lret
jmp
mov
dec
and
shlb
test
or
xchg
xor
ds
movsb
dec
es
mov
jp
and
in
shl
stc
or
mov
pop
int
lock
ror
jp
pop
cs
stos
cmp
mov
or
jge
stos
int3
ljmp
call
movsl
mov
mov
xchg
xchg
jecxz
xor
adc
xchg
dec
je
std
shrb
arpl
jbe
push
icebp
insb
insl
jp
xchg
enter
dec
les
cmp
ret
rclb
ret
dec
add
push
icebp
adc
fldenv
movsb
add
xor
ret
mov
inc
out
pop
ror
inc
adc
mov
jg
pushf
and
scas
jae
nop
ret
mov
jo
sbb
and
sbb
jge
mov
daa
jmp
add
repz
pop
icebp
loopne
mov
pop
inc
js
or
stc
fnsave
jo
xor
ret
mov
aas
push
fsubp
loope
lret
jl
addl
add
cwtl
sbb
xchg
and
bound
shlb
pop
paddw
mov
inc
xchg
fdiv
insb
ds
pusha
jmp
push
int3
and
idivb
dec
in
test
mov
es
nop
adc
sub
dec
loope
stos
loopne
mov
repz
and
imul
call
andb
sbb
int
cmc
into
roll
and
dec
jg
icebp
sub
jp
inc
ret
sub
xor
sub
jge
mov
in
ss
xor
add
mov
dec
test
push
and
aad
xlat
jmp
aam
lods
mov
ja
and
inc
cmp
cmc
ljmp
loope
or
icebp
ret
dec
outsb
test
shll
mov
rol
mov
outsb
push
lahf
bound
mov
jo
outsb
test
xor
mov
frstor
dec
lret
adc
cmpsb
pop
insb
fwait
lahf
or
pop
fxch
outsb
cmp
adc
or
pop
cmp
pushf
cli
insb
insb
popf
adc
cmp
pop
adc
ljmp
and
pushf
push
pop
mov
mov
sub
pushf
cmp
xor
adc
adc
enter
mov
lods
jp
mov
jbe
loopne
aam
push
andl
mov
jne
jl
push
add
ret
cltd
insb
xchg
sbb
aaa
or
or
test
cwtl
lock
lock
xchg
int
pop
mov
lret
dec
xchg
icebp
fs
mov
or
push
push
dec
sub
pop
dec
or
inc
jnp
repnz
push
std
ret
cmpsl
lret
xor
lret
clc
mov
sub
jnp
mov
xchg
and
pop
jl
cmp
xchg
clc
out
in
xor
xor
arpl
jmp
mov
inc
or
int
stos
outsl
xor
adc
cmp
push
imul
pop
mov
pop
pop
fdivl
cmc
cld
xor
adc
cmp
icebp
loopne
adcb
fdiv
jle
je
push
mov
pop
add
ficoml
lds
iret
aas
dec
je
mov
adc
inc
or
inc
push
push
xor
cwtl
jecxz
pop
repnz
jb
ror
push
outsl
test
add
adc
sbb
lds
stos
cmpsl
dec
faddp
insl
mov
jmp
aam
sub
std
adc
enter
jae
and
js
mov
orl
or
inc
dec
jg
neg
pop
int
sahf
xchg
pop
dec
sub
and
push
fwait
add
pop
lcall
jg
test
fdivrs
cmp
negb
adc
sbb
sahf
dec
xchg
fisubrs
jp
dec
mov
pop
xchg
fistl
dec
jp
jle
mov
lods
xchg
jns
sub
or
xor
icebp
imul
adc
xchg
adc
or
push
lahf
cli
sbb
add
jb
mov
and
aad
insl
movsb
pushf
cmp
rcll
cmp
jl
mov
out
test
gs
les
jle
or
sub
xchg
cs
and
push
dec
pop
sbb
sbb
lahf
scas
push
xchg
out
xchg
add
into
sub
in
mov
ss
mov
insl
shll
add
stos
scas
pop
sub
push
xlat
xchg
jle
xor
mov
outsl
mov
fwait
mov
dec
fwait
shlb
lcall
jo
push
in
push
lock
inc
mov
push
jo
push
sub
clc
movsl
mov
imul
stos
push
cmp
adc
loope
sbb
ret
int
mov
adc
aas
add
adc
imul
add
xchg
daa
add
jb
mov
inc
cld
loopne
adc
mov
std
adc
adc
iret
push
mov
ljmp
inc
xchg
sbb
pop
push
mov
subb
sub
push
push
push
sbb
jecxz
add
add
bound
cltd
xorps
loopne
push
test
and
mulb
mov
mov
and
gs
pop
fwait
cmc
add
push
test
popa
sub
fsubl
and
lret
ret
out
shrb
mov
cmp
rorl
inc
push
add
mov
push
sub
xchg
inc
decl
je
leave
loope
loop
push
sub
fidivrl
mov
shll
test
sub
pop
and
fstl
pop
push
jl
bound
bnd
das
stos
hlt
xor
mov
cmp
push
push
imul
js
xor
push
addr16
andb
sbb
sbb
jge
enter
pop
sub
mov
cmc
sub
inc
adc
dec
lcall
mov
addr16
push
xchg
imul
pop
mov
rcrl
cwtl
ds
xchg
pand
adc
sbb
and
sbb
sbb
scas
in
mov
mov
adc
mov
test
jnp
adc
sbbb
stos
enter
bound
or
sbb
jp
jge
inc
js
lds
aad
call
cmc
mov
sub
imul
rcrl
iret
incl
aam
ret
push
mov
cmp
ret
inc
cmpsb
and
pop
or
sbb
sbb
cmp
push
cwtl
adc
xor
mov
adc
xchg
jecxz
jg
add
cmp
and
mov
mov
int3
dec
inc
icebp
cwtl
inc
sbb
push
push
sti
ret
xor
pop
es
add
xchg
xor
lock
sub
mov
shl
jl
sub
jb
lea
xchg
dec
jg
sbbl
leave
subb
xchg
in
pop
jb
pop
dec
cmpsl
sub
add
xor
fdivrs
jmp
mov
jecxz
outsl
sbb
insb
add
cli
dec
jno
sti
aas
pushf
cwtl
dec
leave
adc
xchg
cmc
loop
sbb
lods
xchg
cmp
jne
inc
push
mov
mov
test
mov
push
roll
loopne
xchg
add
jne
jnp
add
movsl
xor
inc
pop
std
iret
mov
div
xor
xchg
subl
lods
jo
mov
test
call
and
outsl
mov
das
adcb
mov
pusha
roll
xor
ret
pop
mov
cwtl
rcl
jae
scas
sahf
sub
mov
sub
pop
mov
sbb
fcmovnbe
sbb
sbb
mov
inc
fdivrs
ret
ljmp
and
shrb
lahf
insl
fbld
pop
sahf
or
in
dec
jecxz
lahf
mov
jns
mov
aas
loop
sbb
inc
sbb
popa
mov
aas
xlat
mov
aas
aaa
sbb
push
pop
xadd
rcrb
shr
cmp
push
in
push
mov
andb
outsb
cmp
jo
xchg
push
jecxz
and
imul
lahf
jno
mov
rcrb
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
xor
xchg
adc
sub
mov
lret
push
sub
mov
rclb
push
outsb
jp
movsb
and
and
and
xchg
xor
or
test
add
adc
iret
in
jbe
loope
push
lcall
cmp
xchg
adc
outsl
jle
insb
pop
jg
xchg
pop
pop
insb
lods
mov
les
je
insb
or
pop
shrb
adc
je
inc
mov
mov
add
fcompl
dec
imul
mov
cwtl
daa
imul
xor
mulb
invd
push
xchg
std
int3
inc
je
aad
shlb
stc
push
jmp
pushf
cmp
lds
std
in
ret
fcoml
int
addr16
sbb
jl
js
and
pop
rclb
cmpsb
jg
icebp
cmpsb
leave
jo
lds
and
je
mov
sub
sub
add
stos
sub
imul
mov
leave
fsubs
cltd
notl
inc
mov
and
lds
movsl
pop
mov
jo
test
bound
jns
inc
mov
pop
dec
pop
jno
jae
inc
dec
outsl
cmp
ret
cwtl
mov
mov
and
xchg
jge
int3
outsl
and
fdivr
push
sbb
sub
iret
ja
jbe
dec
mov
ficoms
mov
mov
shrb
ds
sbb
xor
add
or
lahf
lds
cmpsl
and
ja
daa
in
or
jmp
push
xor
adc
mov
out
sahf
and
adc
mov
out
rep
je
adc
ficoml
pop
jno
jae
es
lcall
lea
cmpsl
and
adc
mov
adc
daa
mov
dec
jl
popa
insl
negl
pslld
ror
test
and
cld
xor
test
aaa
cmpsl
scas
icebp
xchg
fimuls
push
sub
lds
mov
leave
leave
fs
iret
in
popa
fistpl
jae
lcall
or
jns
jg
push
sbb
cmp
lods
mov
js
xchg
test
mov
dec
jmp
push
add
fs
imul
sub
xor
cpuid
mov
add
mov
in
popa
fistpl
jae
lcall
cmc
std
adc
push
out
leave
push
es
pop
and
sub
fsubl
bound
fldenv
rolb
cwtl
mov
adc
cmp
mov
lea
cpuid
mov
jo
adc
ret
jae
lcall
int
sbb
or
std
add
loope
cmp
loopne
shlb
xchg
xor
jmp
pop
fidivs
mov
ss
cpuid
mov
movb
pop
ret
jae
lcall
xchg
lret
mov
mov
mov
dec
sahf
decb
cmpsl
out
jmp
inc
mov
test
mov
mov
pop
inc
push
out
orl
bnd
fisubrl
jg
ret
daa
rcr
sbbl
jmp
sbb
movsl
cs
sbb
fmull
aad
sarl
fmull
inc
loope
push
or
loopne
icebp
push
cwtl
popa
insb
push
xchg
lea
xor
mov
ja
je
inc
std
stc
pushf
cwtl
jae
test
mov
lods
push
lock
lock
cwtl
das
xor
pushf
pop
notl
sbb
push
cmp
inc
lahf
dec
jo
fmull
inc
shlb
ret
push
dec
mov
add
cmc
jns
sbb
out
ret
sub
pop
stos
cwtl
js
xor
pop
or
jle
jns
xlat
notl
sbb
mov
mov
shlb
jo
fmull
inc
cmc
xchg
in
inc
arpl
sbb
inc
jl
outsb
mov
pushf
pop
dec
jg
in
int3
mov
jbe
mov
push
pop
out
cmp
jg
ret
daa
sar
js
fisttpll
adc
sbb
popa
pop
scas
jae
cmp
lahf
dec
jo
fmull
inc
outsb
mov
arpl
xlat
pop
scas
or
out
fwait
jg
lret
jb
in
xchg
xor
push
cmp
mov
out
and
lock
lock
xchg
fwait
push
test
insl
into
clc
inc
mov
mov
lcall
lahf
dec
jo
fmull
inc
cld
rolb
dec
and
add
push
cld
xchg
mov
xchg
sbb
jmp
int3
call
lcall
dec
or
sub
push
sbb
lret
add
add
pop
pop
and
loop
cmpsl
in
ffreep
iret
xor
stos
les
loopne
cwtl
notb
jno
dec
dec
jno
loopne
adc
icebp
push
fstpl
add
cmp
gs
in
into
shlb
mov
repnz
adc
xchg
xor
xor
pop
mov
push
push
mov
test
ja
add
pop
jo
sub
pop
aam
sub
std
sub
pop
aam
outsb
sub
inc
orl
andb
add
push
jmp
mov
mov
test
call
add
jo
daa
out
add
add
dec
lcall
cmpl
into
hlt
dec
ds
inc
sub
arpl
lahf
mov
in
lods
cmpxchg
or
xor
jle
pop
xor
jg
mov
inc
je
out
and
and
sub
sub
fidivs
xchg
outsl
stos
stos
push
sub
movsl
fimull
lcallw
mov
fs
adc
stos
les
mov
push
jle
ljmp
stc
aas
push
mulb
cmpsl
push
nop
xor
sahf
fldz
cmpsl
or
xchg
inc
or
push
and
imul
data16
arpl
sahf
xor
mov
jno
scas
subb
icebp
cwtl
xor
nop
and
arpl
je
pop
imul
pop
scas
and
ret
das
inc
rcll
mov
mov
lds
dec
mov
cmpsb
lret
lahf
gs
adc
rorl
push
scas
and
enter
xchg
rcll
loop
loope
test
jae
dec
add
add
sbb
sub
xchg
and
push
sbbl
rol
and
out
cmp
cmp
out
call
sbb
sbb
loope
sub
in
pop
or
mov
and
inc
jecxz
mov
movl
ret
mov
imul
xlat
add
dec
repz
fdivs
scas
push
lock
and
icebp
sub
into
je
cmp
cmp
sarb
or
mov
jg
stos
mov
addb
sub
adc
xlat
push
test
dec
ds
xor
pop
jne
movsl
jne
dec
pushf
test
rolb
hlt
mov
lahf
pop
adc
faddp
mov
adc
adc
pop
int
xor
test
aad
pop
mov
inc
xchg
mov
pushf
xor
dec
idiv
jecxz
ja
or
enter
and
fsubr
push
adc
push
mov
xlat
push
call
adc
mov
xchg
xorb
lcall
cmp
pop
add
stos
inc
cld
jo
leave
mov
lret
pop
mov
ljmp
jecxz
or
pop
push
mov
sbb
mov
mull
jl
imul
ret
pop
cmp
enter
xchg
imul
popa
inc
popf
mov
dec
sti
es
movsl
stos
hlt
fidivrl
in
imul
mov
xor
lods
mov
push
inc
inc
adc
outsl
gs
sub
or
aam
cltd
popf
mov
aaa
push
pop
lcall
jae
inc
mov
lds
sub
lahf
dec
fsubrs
loopne
fwait
outsb
int3
out
mov
pop
or
int
ljmp
das
dec
jmp
lods
incl
std
xor
xchg
push
cmpsb
rolb
jo
int
hlt
inc
sub
pop
mov
ss
adc
aas
enter
andl
repz
inc
mov
ja
rcll
lods
jae
cmpb
jge
adc
and
mov
loope
mov
fld
aad
das
lds
fdivs
stc
pusha
daa
sub
push
lods
mov
gs
mov
inc
loope
rcll
jae
lock
add
push
mov
gs
loop
sbb
dec
jl
cmc
pop
rcl
mov
nop
pop
adc
scas
pop
ret
dec
in
icebp
es
jne
adcb
movsb
in
dec
ljmp
stos
mov
jb
fs
dec
std
and
outsl
jge
fiadds
adc
jnp
or
cwtl
and
out
loopne
iret
pop
xchg
je
jecxz
push
call
mov
shrl
push
sti
jnp
xchg
and
sbb
jge
adc
mov
add
loope
mov
fld
aam
idivb
mov
dec
xchg
shl
mov
into
lds
push
lods
mov
insb
dec
inc
in
test
push
sub
out
scas
test
in
push
jl
jge
adc
or
mov
scas
cli
push
add
jne
fcomp
add
cs
testl
mov
pop
mov
ljmp
mov
sub
xor
pop
lahf
xor
mov
enter
pop
sub
lock
dec
cmpb
mov
cmp
pop
dec
cmp
mov
lods
jmp
ret
std
xor
xchg
fidivrs
mov
jne
out
or
cmp
jns
cs
in
aad
ds
icebp
incb
and
js
inc
div
mov
sub
ffree
cwtl
add
pusha
pushf
mov
rcl
xor
sbb
sbb
sbb
gs
inc
out
sahf
push
cmp
adc
mov
psadbw
jae
sub
icebp
jae
insb
pop
ljmp
in
or
jb
xchg
xor
lcall
push
mov
add
nop
hlt
sbb
paddb
jns
icebp
scas
shlb
add
out
jl
dec
mov
sbb
stos
inc
fs
mov
mov
or
arpl
inc
mov
dec
cmp
cltd
lea
ret
rolb
insb
inc
mov
jg
loopne
loopne
ffree
bound
fscale
xor
xchg
out
inc
lahf
add
aad
adc
hlt
adcl
xor
lods
adc
mov
aas
inc
and
adc
sub
dec
aam
xchg
imul
fiadds
enter
xchg
cmp
shl
jecxz
adc
adc
hlt
adcl
xor
lods
adc
mov
aas
inc
and
adc
cmp
in
jmp
std
xor
xchg
push
mov
lods
adc
hlt
adcl
xor
lods
adc
mov
aas
inc
and
adc
fldenv
inc
sbb
add
dec
call
outsb
mov
dec
push
aad
test
ss
imul
or
sbb
daa
roll
sbb
dec
pop
push
and
mov
pop
test
push
sbbl
inc
add
adc
aaa
jl
int3
sub
inc
jnp
je
mov
mov
cmp
lret
ret
jp
pop
imul
sbb
fnstsw
cmp
push
mov
aam
es
addr16
jno
pop
test
clc
or
or
add
nop
jne
adc
outsl
add
incl
test
mov
mov
rcrl
mov
xchg
cmp
fbstp
fdivr
andb
loop
mov
pop
scas
cmpb
pop
int3
jmp
xchg
scas
jns
sub
movb
scas
dec
xchg
adc
or
xchg
or
adc
jns
sbb
mov
test
xor
jp
mov
fnsave
mov
add
xlat
xchg
je
pop
and
cld
arpl
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
add
xchg
mov
iret
shl
xor
jl
cmp
scas
lret
jno
mov
in
clc
pop
add
push
mov
jg
mov
dec
sti
jne
dec
add
xor
lcall
movsl
out
add
dec
mov
nop
hlt
sbb
paddb
jecxz
inc
fildl
adc
leave
decb
sahf
and
or
fistpll
fadd
jo
dec
mov
out
sbbb
scas
insb
movsl
xchg
inc
enter
mov
test
dec
xor
test
daa
in
scas
mov
mov
scas
jle
incl
aas
push
jo
mov
add
lret
popf
ret
mov
inc
jne
mov
push
or
and
stc
inc
inc
ss
ficompl
push
dec
shrb
icebp
sbbl
jbe
xchg
or
clc
mov
or
jecxz
push
mov
jl
push
movsb
xor
dec
lcall
mov
mov
lcall
pop
je
pushf
xchg
stos
cli
ret
nop
shlb
sbb
xchg
jp
lcall
int
jle
push
in
push
cmp
xchg
push
shlb
and
mov
aaa
addb
dec
xchg
push
js
mov
pop
mov
aaa
mov
fimuls
call
mov
sahf
fsubs
mov
adc
xchg
push
lods
enter
add
xlat
adc
or
jp
xchg
sahf
pop
xchg
push
lea
lcall
or
call
insl
cltd
pop
pop
inc
test
pop
sbb
or
dec
sub
in
fldcw
in
cmp
fildll
push
sbbb
jl
dec
lods
notl
push
dec
scas
stos
hlt
fstl
sub
fcoml
sub
xchg
cwtl
int3
cmp
ljmp
inc
jb
cmpsb
mov
jmp
fsubl
mov
out
jecxz
push
mov
jl
push
movsb
xor
mov
jge
in
aas
sbbl
orb
enter
add
dec
aas
adc
inc
cli
lcall
mov
inc
jmp
out
cmp
mov
or
movsb
jmp
inc
mov
test
lret
addl
inc
in
mov
mov
subl
xchg
push
jge
xorb
out
sub
imul
fildl
rcrb
xchg
jmp
sarl
imul
in
and
add
xchg
jbe
xchg
or
sbb
xchg
bound
sar
fstps
mov
inc
cltd
xchg
xor
or
sbbb
cmp
xlat
arpl
mov
jbe
arpl
nop
stos
lret
xchg
push
push
lret
popa
clc
pop
bound
lret
xchg
imul
out
inc
in
ret
lods
out
jo
jae
add
xchg
pop
or
mov
add
leave
fisubrs
mov
inc
cltd
xchg
xor
push
lock
sub
or
aaa
data16
mov
bound
sar
fstps
mov
inc
cltd
xchg
xor
stc
sbb
popa
jecxz
call
call
mov
sarl
in
xchg
xchg
loope
shll
adc
pop
movsl
cmpsb
stc
add
inc
decl
les
and
cld
jno
xor
sti
mov
js
imul
push
cs
dec
lds
fnstsw
insl
jle
data16
inc
jns
xchg
xchg
js
adc
ret
dec
decb
fdivr
dec
sbb
addr16
sbb
pusha
and
sub
jge
cmp
call
xchg
int
rorb
add
aaa
dec
lods
cmpsb
imull
jne
enter
test
jg
cmpsl
out
adc
push
jne
pop
inc
lret
sbb
in
inc
in
mov
xor
repz
adc
stos
sub
mov
pop
mov
cmp
mov
mov
cmpsl
xchg
xchg
add
jb
leave
xor
cmp
jmp
arpl
dec
dec
lret
addl
inc
in
mov
mov
subl
xchg
pop
jnp
add
sub
imul
fildl
rcrb
xchg
jmp
daa
jecxz
jg
arpl
pop
mov
in
pop
shrl
cwtl
rorb
or
sbb
lcall
jle
sub
xlat
xor
jecxz
xchg
out
cs
xchg
adc
icebp
push
xchg
xchg
sahf
ret
shlb
xchg
int3
push
sti
pop
les
mov
pusha
push
jl
pop
dec
dec
sbb
or
jnp
and
push
sub
jns
push
sti
xorl
flds
lds
cmp
pop
xchg
push
pop
inc
mov
movb
or
aas
les
cmpsl
mov
xchg
mov
inc
mov
ret
adc
push
xchg
cmpsl
pop
dec
mov
lods
fildl
test
xor
xor
cmp
xchg
ss
push
mov
in
xor
loope
and
add
into
std
mov
sahf
fdivs
push
or
sbb
pusha
das
insb
scas
cmp
or
sub
mov
andl
add
rorl
out
xchg
inc
shrl
dec
and
or
insl
scas
mov
aad
dec
lret
das
or
sbb
jo
xor
xor
dec
ja
shlb
cmp
lea
dec
push
scas
mov
push
jle
sub
lret
loope
mov
mov
scas
arpl
dec
dec
inc
roll
je
fwait
inc
leave
ret
dec
mov
rcr
clc
inc
jmp
mov
xor
inc
jp
and
push
add
daa
fstpt
int
outsb
jl
and
and
or
in
pop
clc
sahf
notl
icebp
lcall
nop
mov
in
aad
ds
icebp
incb
and
leave
shrb
test
mov
push
jae
or
fwait
scas
jge
sarl
hlt
mov
ficoml
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
cmp
inc
inc
push
movsl
jae
cs
push
test
popf
fucomi
mov
pop
mov
mov
mov
test
iret
mov
mov
push
ds
pop
lds
pop
pop
push
mov
in
mov
and
xor
jp
xchg
mov
mov
lods
std
cmp
sbb
pop
div
and
sbb
stos
shlb
dec
nop
cmp
movsl
mov
or
push
ja
pushf
add
lea
mov
sbb
movsl
pop
jno
push
or
jno
pop
cmp
cli
out
test
outsb
movsl
push
xor
cmc
or
sbb
pop
add
sub
add
mov
lods
cs
aam
fdivrs
cmp
lds
sub
mov
test
push
ljmp
sub
jno
jg
and
inc
out
xor
push
scas
lods
shrl
mov
pop
mov
in
mov
int
push
fmul
push
loop
sub
scas
fwait
mov
mov
out
mov
mov
xor
push
and
jecxz
lock
mov
sub
sbb
xchg
or
mov
lods
repnz
mov
sub
push
inc
pop
mov
jge
movsb
mov
sub
inc
mov
shrl
out
sbb
push
fcmovbe
test
shlb
and
mulb
push
fnsave
pop
enter
out
cmpsl
js
cli
cwtl
mov
inc
push
rorl
mov
jecxz
adc
mov
fstpl
mov
xor
test
das
pushf
sbb
mov
loop
and
xchg
sub
pop
in
mov
popf
push
movsl
jo
jp
or
lds
loopne
xor
fldenv
orl
or
cmp
je
lahf
xchg
test
addb
jo
add
and
notb
cmp
in
xor
imul
add
jg
jae
dec
jmp
or
ljmp
das
faddp
jno
sbb
les
push
orb
xlat
shl
inc
dec
cmp
popf
sbb
das
fidivl
repz
popa
jmp
addl
inc
push
popa
sub
outsl
sbbb
filds
mov
insb
int3
sub
jmp
mov
ljmp
xchg
xchg
inc
mov
es
adc
dec
dec
in
add
xchg
or
mov
stos
mov
lods
inc
pop
dec
fmull
push
rep
bound
mov
pop
dec
fiadds
cmc
or
push
lret
int3
gs
sub
mov
pop
push
or
daa
adc
out
insl
push
hlt
mov
xor
into
sbb
and
call
add
mov
xchg
lahf
dec
daa
sbb
adc
ss
into
arpl
jp
repz
jnp
out
pop
dec
mov
inc
lods
xchg
out
mov
dec
pusha
push
inc
pop
dec
mov
out
adc
adc
insl
aas
daa
or
test
nop
jno
pop
inc
in
aaa
out
dec
and
filds
outsb
int
movb
out
enter
outsl
dec
adc
sar
ja
sti
mov
movsl
jp
dec
adc
insl
pop
imul
out
in
sbb
sahf
loopne
jle
das
inc
icebp
out
and
pop
ds
push
gs
xlat
rcrb
inc
pop
pop
dec
aas
mov
lret
fstps
or
xchg
cmp
add
outsl
shlb
repz
pop
rol
fwait
in
jnp
ret
dec
es
pop
sbb
or
or
rcl
daa
mov
jmp
jne
push
pop
jl
cmp
stos
fisubrl
sub
jle
test
mov
pop
sbb
add
fiadds
adc
imull
push
push
cwtl
sub
mov
xor
xchg
sub
xchg
aam
mov
jg
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
fsubl
cwtl
jl
fdivrl
test
mov
mov
lods
arpl
jno
loop
jo
cmc
sti
pop
fidivs
sub
pushf
cmpsb
out
lret
jg
dec
cld
movsb
test
xor
out
incb
std
inc
jl
imul
mov
mull
cmp
mov
adc
sbb
mov
inc
nop
sbb
xor
sub
out
subl
stos
adcl
stos
adc
cmp
mov
mov
or
or
or
cli
mov
pop
sub
movsl
jmp
stos
cltd
pop
cmp
inc
mov
cmp
in
sbb
mov
daa
clc
jecxz
jmp
add
mov
jns
mov
imul
imul
xor
lret
mov
jg
xor
test
sub
push
pop
adc
arpl
mov
and
out
loopne
xchg
sarl
movsl
sbb
inc
shlb
pop
mov
lds
jb
mov
loopne
adc
pop
icebp
nop
dec
clc
add
lret
and
mov
repnz
jo
add
sbb
xlat
stc
stos
xor
xchg
jp
addr16
jmp
fidivrs
mov
xor
stc
movsb
cmc
mov
inc
push
mov
das
out
cmpsl
mov
addr16
mov
shll
xor
mov
mov
bound
loop
cmpsb
lcall
add
sbb
in
into
or
mov
mov
inc
addr16
jmp
fimuls
outsl
pop
xor
sub
fsts
cmp
sar
xchg
xchg
aam
and
testb
call
adc
loopne
stos
iret
lods
lock
shlb
mov
xchg
xchg
pushf
inc
shlb
pop
jbe
cmp
mov
cmc
roll
fldl
xlat
mov
call
mov
mov
mov
pop
sbbb
outsl
jne
push
xchg
xor
pop
xchg
int3
mov
pop
xor
add
adc
mov
stos
cmpsb
add
inc
cwtl
jge
xchg
clc
out
imul
dec
xor
inc
outsl
aaa
nop
and
ss
add
lea
xchg
scas
inc
cmpsb
std
je
loop
bound
scas
and
ret
loope
add
clc
fistps
adcl
addl
repz
mov
xor
stos
cmp
inc
dec
imul
out
mov
dec
cwtl
jmp
jae
jae
psllw
lock
cmpl
jbe
test
mov
popf
jno
insl
cmp
mov
jns
daa
pop
xor
sbb
sub
jecxz
inc
push
mov
xchg
mov
sbb
add
sub
movsb
pop
aad
clc
movsl
testb
sarl
loopne
aaa
inc
sub
daa
adc
sbb
sbb
jmp
in
popa
pushf
mov
xlat
into
mov
push
cmp
push
iret
push
jo
jecxz
adc
into
push
sub
pop
pop
popa
cld
mov
mov
jb
mov
test
and
loope
sub
adc
cmc
jl
jmp
xor
iret
mov
push
cmpb
into
xlat
int3
dec
pop
cmpsb
jnp
jb
mov
dec
std
fidivrs
sbb
cmp
push
scas
dec
inc
sbbl
into
pop
cmp
lock
mov
data16
bound
fsubp
rclb
pop
sbb
imul
jle
or
mov
pop
fisttpl
sti
stc
pop
mov
popf
jno
insl
cmp
popf
or
test
add
popf
fdivs
jno
and
inc
out
es
xor
mov
lret
mov
rolb
shlb
ret
fistps
fmuls
stos
xchg
jmp
lret
jns
adc
in
fmul
aam
clc
movsb
les
out
cwtl
push
notl
in
dec
sbb
dec
pop
jo
push
push
mov
xchg
cmpsl
sbb
cmp
xchg
cmp
jnp
out
rorb
lret
outsl
loop
inc
pop
test
rcrb
push
js
xor
push
cmc
add
adc
jns
test
pop
sbb
mov
addr16
xorb
or
sbb
pop
inc
into
xchg
sbb
fsubrs
repnz
movsl
mov
push
scas
daa
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
push
pop
andl
popa
packsswb
lods
popf
and
xlat
out
hlt
mov
into
aas
test
std
daa
std
jae
push
jb
mov
nop
ja
and
push
dec
into
idivb
sbb
jl
test
xor
outsl
aas
mov
push
dec
push
xchg
pop
mov
daa
sub
mov
rcll
and
push
out
aam
jns
push
jl
push
insl
mov
push
mov
mov
inc
popa
dec
or
notl
lcall
jns
movsb
dec
mov
cmp
inc
mov
sbb
inc
jae
and
push
mov
or
adc
xor
lods
dec
xor
push
xchg
pop
scas
out
rorb
fidivl
push
jp
inc
mov
mov
pop
cmp
sub
inc
fld
cmpb
push
scas
xchg
dec
lcall
fcoml
mov
repnz
lcall
push
mov
push
js
mov
xchg
inc
sbb
pop
ret
or
aad
add
movsb
rolb
insl
xor
adc
add
lea
add
xlat
jp
stos
mov
jmp
insl
cmp
dec
or
mov
outsl
sub
xor
and
add
or
roll
adc
lret
adc
sbb
or
xchg
insl
inc
iret
aaa
mov
rcr
out
std
cld
lret
xor
mov
cmp
pop
sbb
or
test
daa
push
mov
push
mov
add
xor
xchg
xchg
push
pop
lock
nop
cmc
enter
popf
sub
iret
in
outsb
test
sub
aad
mov
imul
fsubrl
pop
pop
jne
shlb
push
jno
xchg
inc
ret
sub
sbb
iret
rcrl
in
jmp
sub
hlt
xor
lods
dec
xor
cmp
adc
sub
jmp
mov
test
push
arpl
outsl
scas
into
std
jne
lret
lods
cmp
lock
imul
loop
jbe
lcall
push
push
mov
movsl
addb
dec
fdivs
ret
dec
out
lahf
outsb
cmp
test
out
pop
test
in
gs
repz
mov
sbb
inc
and
es
jle
fwait
pop
insb
xchg
xchg
sbbl
repz
imul
or
out
dec
inc
jecxz
stc
les
movsl
imul
hlt
and
push
sbb
mov
mov
dec
cmpsl
jno
fcomp
jmp
sbb
jne
sahf
inc
adc
push
subl
lret
sahf
popf
jbe
scas
sub
jae
loopne
rcl
clc
xchg
ret
sti
or
jp
cmp
test
jae
imul
adc
and
sbb
call
out
mov
mov
test
mov
cs
cli
sub
fld
cmpb
xor
push
xchg
mov
cmp
mov
leave
cmp
arpl
pop
stos
adc
lcall
ljmp
push
pop
and
insb
xchg
sub
push
data16
arpl
mov
enter
mov
cmp
cmc
adc
mov
adc
mov
in
stos
pop
jns
popa
repnz
rep
push
hlt
cmp
push
cmp
outsb
dec
and
sub
scas
test
fistl
mov
mov
sub
mov
mov
inc
aam
jl
pop
in
jp
xor
scas
fbld
sbb
pop
jge
aas
pop
mov
imul
xor
es
and
imul
mov
in
lret
pop
xchg
imul
mov
mov
adc
movsb
mov
lcallw
adc
js
push
mov
andl
sbb
addl
and
popa
fdivrs
fnsave
sub
fisubs
std
mov
mov
mov
pop
loop
mov
inc
sub
icebp
xlat
pushf
sbb
inc
clc
mov
or
mov
push
push
dec
or
jb
and
insl
movsl
js
cmp
hlt
aam
sub
movsl
lods
or
adc
in
inc
cmp
adc
popf
or
pop
push
imul
and
jecxz
mov
cli
xchg
fsubrs
xor
mov
lret
push
jp
mov
lahf
sbb
rcl
and
mov
ljmp
or
movsb
dec
mov
pop
push
push
mov
sub
inc
adcb
or
stc
sti
ss
push
sahf
sbb
int
or
out
xchg
xchg
imul
adc
and
lods
sarb
jo
mov
xchg
js
aam
mov
mov
mov
add
arpl
mov
xlat
sub
pop
xchg
aam
push
popf
dec
js
pop
fsts
sbb
les
loopne
fsub
pop
mul
cmpsl
call
push
xchg
pop
aam
push
repz
sbb
mov
out
cmp
rclb
cmpsl
jnp
ljmp
leave
push
mov
int
and
mov
outsb
mov
or
enter
or
inc
out
cmpsb
xor
outsl
shr
pop
fstpl
data16
sbb
adc
pushf
imul
mov
rol
pop
fsubp
ds
cmp
loope
xchg
lcall
sub
arpl
arpl
sbb
and
push
dec
mov
je
subb
and
insb
mov
outsl
ret
sar
pop
add
xor
jp
pop
inc
push
jg
push
inc
fisubl
inc
outsb
in
enter
or
adc
mov
mov
jecxz
and
adc
or
leave
jnp
addb
lock
pop
mov
subb
mov
inc
out
test
sub
mov
fstpl
data16
sbb
adc
dec
fstl
xchg
cs
lahf
fstp
ss
imul
inc
int
cmp
adc
add
jae
sub
push
and
ljmp
and
mov
andl
sub
movsl
add
fbstp
repnz
push
and
xor
xchg
sub
mov
rorb
mov
das
dec
stc
jno
cmp
cmp
std
imull
mov
ja
or
xchg
xchg
aaa
pop
test
mov
xchg
pop
lock
adc
and
fwait
call
lcall
shll
ficomps
lds
outsb
jo
cmpsb
mov
leave
in
jg
je
loop
in
mov
sti
into
jne
icebp
dec
out
pop
or
cmp
mov
lock
push
ja
in
fsubrs
jl
std
mov
mov
jb
stos
lods
imul
xchg
rcll
mov
mov
inc
mov
mov
push
mov
xor
inc
bound
jbe
adc
ficompl
out
sbb
or
into
adc
xor
cmc
js
jmp
adc
pop
inc
pop
dec
xchg
xchg
mulb
push
imul
lds
popf
push
ret
xor
call
addr16
add
sbb
test
cltd
push
cli
pop
loopne
cwtl
adc
mov
adc
mov
fdiv
out
dec
in
lret
div
and
ljmp
sti
xor
insl
and
aas
cld
jp
cmc
shl
or
push
adc
dec
sub
push
int
jnp
mov
sub
jle
outsb
cmp
aaa
push
xchg
dec
dec
popa
pop
push
mov
xchg
sub
push
out
push
xor
div
mov
das
loop
jno
mov
fmull
xchg
movsb
mov
subb
inc
push
jmp
jmp
sub
fwait
cmp
rcll
pop
inc
xor
nop
push
mov
mov
jb
mov
mov
or
jnp
es
mov
arpl
mov
sbb
dec
mov
loope
dec
jns
rorl
cmp
mov
jo
scas
push
gs
xchg
aad
int3
jecxz
pop
cmp
mov
mov
sub
ret
mov
and
jns
pop
lock
out
sbb
in
inc
sahf
jne
divb
inc
push
sub
jp
lcall
fists
jp
out
and
and
and
or
inc
gs
sbb
xchg
sub
scas
push
xchg
cs
add
pushf
cmp
push
xchg
and
cmpsl
jge
or
cmp
add
cmp
and
js
push
adc
mov
mov
pop
xchg
mov
or
mov
in
cmpsl
loopne
imul
int
lds
lahf
jns
inc
mov
int3
cmp
iret
jge
sub
subb
mov
dec
pop
cmpsl
ljmp
jno
push
js
test
dec
and
movsb
dec
mov
fimull
mov
cs
out
lret
lds
pop
and
rcrl
pushf
mov
sub
sbb
stos
cwtl
jl
loopne
stos
mov
fsubs
jns
int
data16
sbb
loope,pn
outsl
mov
mov
push
mov
andl
cmp
mov
adc
adc
out
jo
lcall
lcall
mov
fs
jecxz
std
jp
popa
push
mov
mov
aad
adc
adc
int
mov
inc
sbb
jg
outsl
mov
mov
sbb
jp
mov
out
sub
leave
notl
loope
adc
cmp
or
aam
rorb
lret
aad
rcl
fs
popf
subb
neg
lret
fs
scas
mov
push
add
dec
cli
xchg
dec
rorl
rolb
jl
push
mov
andl
stc
pop
add
adc
jnp
push
ror
dec
mov
inc
js
cmp
fdivs
cmpsb
addr16
or
cmp
adc
insb
scas
addl
cli
aaa
dec
cmp
scas
push
jnp
xchg
mov
xchg
ljmp
sbb
jp
mov
out
sub
mov
stos
movsb
xor
mov
iret
mov
lea
mov
sub
push
dec
push
fisttpll
jo
pcmpeqb
jecxz
push
dec
aaa
add
mov
aam
ficomps
xchg
cltd
mov
iret
add
sub
shl
icebp
out
ss
dec
jl
or
lock
mov
jbe
xor
pop
scas
in
arpl
sub
cmp
pop
stos
in
sub
mov
roll
aad
mov
outsb
aad
das
lret
pop
jl
and
mov
pop
push
cmc
jns
lret
mov
pop
cwtl
add
test
cmp
add
pop
add
sub
cmp
xor
jle
cmc
push
adc
fs
dec
sahf
mov
lahf
roll
pop
and
enter
add
bound
pop
stc
pop
sub
mov
push
je
sbb
add
cli
ja
mull
sarl
in
mov
out
mov
inc
sti
pop
pusha
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
xlat
mov
cmp
lods
popf
and
xlat
out
daa
push
je
lret
jge
mull
push
arpl
jo
cli
mov
xchg
jecxz
xchg
mov
ret
das
xor
dec
ljmp
jmp
js
xchg
xor
cltd
scas
push
aas
pop
inc
cmc
es
outsb
mov
pop
lret
ficoml
add
adc
mov
mov
lahf
adc
je
pop
adcb
cwtl
adc
push
jl
shrb
sub
ss
or
ds
sbbl
sub
mov
inc
popl
pushf
mov
movsb
rolb
xchg
pop
inc
je
loop
add
rcl
and
mov
jp
repnz
jae
push
inc
icebp
mov
add
push
pop
jmp
mov
cmp
pcmpeqd
out
xchg
mov
cmp
data16
xchg
popf
aad
pop
push
jl
mov
popa
out
cmp
pop
int3
inc
mov
lahf
arpl
jg
sar
xchg
adc
inc
xor
nop
std
stos
ss
mov
and
bound
ficompl
hlt
test
scas
xchg
in
or
mov
lahf
jp
pop
leave
fldcw
jno
lock
push
jae
jmp
adc
js
loopne
xor
dec
xlat
mov
and
aam
inc
mov
aaa
jno
incl
scas
enter
test
fistpl
repz
pop
or
push
lock
and
cmp
addb
lret
adcb
push
pop
xchg
jmp
out
dec
jbe
jecxz
jns
aam
sub
sbb
push
mov
xlat
in
mov
jg
lods
mov
dec
or
mov
lret
fstpt
in
pushf
arpl
mov
and
push
icebp
sbb
cli
insb
adc
sbb
ret
rcrl
stc
pop
int
mov
sub
xchg
sub
pushf
and
pop
in
mov
pop
call
aaa
pop
push
out
das
mov
mov
cmp
add
xchg
push
test
jecxz
xor
insb
jno
ss
inc
dec
xchg
jecxz
push
mov
sub
mov
shll
jecxz
mov
sub
negl
mov
repnz
rcr
leave
dec
mov
cmp
mov
idivb
ljmp
cmp
arpl
adc
xchg
ret
cmp
jnp
xchg
mov
inc
enter
fisubrl
rorl
xchg
and
cwtl
aam
out
or
mov
sbb
sbbb
leave
addr16
jl
sub
xchg
add
push
fidivrs
enter
push
push
push
sbbl
inc
inc
push
movsl
jae
cli
jmp
es
and
fmull
jmp
das
and
inc
jae
stos
aad
imul
and
iret
std
movsb
enter
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
push
addr16
push
xor
dec
jae
mov
lods
popf
and
xlat
out
daa
push
je
lret
jge
sahf
in
mov
ds
mov
adc
and
jmp
jbe
xchg
mov
inc
rcll
sarl
outsl
loope
fcompp
subl
test
into
mov
cmpsb
iret
test
cltd
paddd
dec
push
sahf
dec
shr
xor
mov
mov
inc
es
call
test
out
and
inc
dec
jns
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
pop
aam
std
push
popa
lcall
aas
lods
popf
and
xlat
out
pop
mov
js
dec
insl
cmpsb
scas
movb
shlb
movsb
test
mov
ss
fwait
addr16
fs
stc
push
cmc
ja
nop
shll
sti
mov
cmpsl
mov
mov
pop
jl
lods
sbb
inc
xor
push
dec
dec
mov
scas
pop
sub
jns
pop
test
xchg
hlt
mov
add
addb
popf
jo
stos
mov
adc
cwtl
cwtl
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
inc
fildl
pop
fisttpl
es
cmpsl
ret
add
fcmove
mov
mov
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
enter
cmp
stc
das
es
cmpsl
ret
inc
lret
jmp
mov
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
jno
arpl
int
inc
sbb
mov
adc
mov
flds
mov
lods
popf
and
xlat
out
daa
push
je
lret
jge
push
fcompl
pushf
mov
xchg
jecxz
xchg
mov
ret
das
xor
dec
add
enter
sbbl
arpl
cltd
scas
push
aas
pop
inc
cmc
es
outsb
mov
pop
lret
ficoml
mov
inc
mov
lahf
adc
out
jmp
jns
enter
jae
xchg
hlt
and
nop
mov
pop
add
inc
pop
xchg
sbb
mov
nop
loopne
inc
push
mov
and
jnp
loope
sbb
stos
dec
loop
cmpsl
mov
push
xchg
mov
xor
stc
iret
push
jo
inc
movsb
in
cmp
fstl
fcoml
cmp
xor
mov
ror
stos
push
and
mov
neg
ja
popa
dec
sbb
testb
pop
xchg
test
inc
push
test
lods
dec
pop
mov
mov
hlt
and
imul
jecxz
xor
xchg
jp
cs
mov
inc
loope
aaa
jmp
mov
jb
js
or
inc
cltd
lea
mov
out
xchg
jge
mov
add
add
xchg
xchg
sti
jg
pop
pop
pop
je
push
aas
jae
ljmp
bound
sub
data16
scas
dec
and
jmp
sbbb
test
mov
rcll
insl
jb
inc
mov
enter
test
fistpl
add
imul
mov
push
and
mov
sub
stos
inc
and
lret
mov
cs
test
shll
shrl
jle
imul
sub
xchg
xchg
xchg
popa
int
mov
jmp
and
adc
int3
ret
out
push
inc
int3
icebp
push
push
arpl
xchg
fsubrp
movsb
or
cmc
fcomi
inc
jecxz
pop
push
fcmovnbe
enter
dec
push
std
inc
ror
xchg
mov
push
mov
shlb
jae
push
mov
rol
cmp
push
jecxz
ds
jae
or
cmpsb
xor
test
inc
xchg
and
inc
repnz
loopne
mov
movsb
movsl
mov
rorb
insl
push
and
dec
cmp
fsubrl
cmp
stc
fwait
popa
lcall
and
push
pop
push
scas
jae
repnz
in
fnstsw
pushf
pop
sub
out
in
addr16
or
test
adc
bound
in
add
out
ss
mov
lods
jns
fistps
inc
mov
pop
inc
insb
fmull
mov
adc
inc
movb
push
scas
pop
clc
jge
popa
ds
int3
cmpsl
mov
lahf
int3
out
es
mov
jb
stc
push
jo
mov
aaa
stos
pop
cmpsl
mov
xchg
cmp
scas
idivb
inc
or
mov
testl
fdivrp
lock
xchg
mov
cmp
call
push
adc
aaa
mov
jle
mov
xchg
xchg
and
imul
ret
nop
mov
repnz
fcompl
jb
jge
mov
mov
xchg
pop
pop
fsubrl
inc
mov
jmp
inc
dec
pop
xchg
jns
in
jle
push
mov
hlt
push
mov
mov
cmp
adc
divb
adc
cmc
mov
add
enter
lcall
adcl
adc
xor
daa
pop
or
lods
test
sbb
ret
sarb
jae
out
and
cmp
push
push
pop
sahf
and
or
cmc
mov
add
popa
sbb
mov
loopne
mov
loopne
lcall
cwtl
dec
outsl
xlat
sbb
imul
cmpsl
mov
mov
leave
xor
insb
frndint
and
xchg
leave
inc
adcl
mov
arpl
sub
dec
and
and
push
les
cli
mov
and
aas
mov
jl
repnz
dec
lahf
add
iret
loop
fcmove
mov
jb
inc
add
leave
inc
adcl
mov
insl
aad
mov
stc
sub
dec
and
or
rorb
dec
ss
pop
xchg
and
jmp
inc
lods
or
movlps
mov
outsb
jns
add
aas
rorb
jge
sbbb
and
divb
xor
push
xor
adc
cmp
cli
mov
cli
int3
xchg
mov
cmp
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
lods
cmp
es
cmpsl
ret
or
mov
fxch
xchg
pop
ljmp
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
inc
cmpsl
pop
cmc
mov
and
inc
dec
jns
mov
adc
cld
lea
mov
cmp
lods
popf
and
xlat
out
daa
push
je
lret
jge
jno
push
cmpb
xchg
jecxz
xchg
daa
and
jnp
ret
das
xor
dec
int
mov
cmpsb
dec
js
xchg
xor
cltd
scas
push
aas
pop
inc
cmc
es
outsb
mov
pop
lret
ficoml
pop
inc
jg
adc
adc
je
pop
adcb
cwtl
adc
mov
imul
adc
nop
or
xor
mov
pusha
adc
fwait
ljmp
mov
movsb
std
iret
add
push
adc
push
pushf
int3
lahf
xlat
inc
rolb
inc
je
loop
add
rcl
and
mov
jp
repnz
xlat
fstl
cmpb
data16
shlb
push
cmp
cmp
pcmpeqd
out
xchg
add
leave
add
cmp
scas
test
push
imul
mov
scas
pop
and
cmpsb
sbb
push
mov
mov
rcrb
enter
aad
cld
jbe
iret
xor
stc
clc
xchg
cmp
mov
fists
pop
fidivrl
js
test
jo
inc
jmp
roll
pop
pop
xor
mov
pop
ss
mov
cwtl
xor
movsl
add
push
bound
aaa
into
sarb
inc
into
sbb
into
pop
cmp
jmp
push
out
inc
pusha
or
cmp
loopne
cwtl
jle
fisubl
inc
jge
arpl
or
inc
mov
aaa
sbb
xchg
sti
pop
push
inc
mov
outsl
orl
lods
inc
arpl
aaa
xchg
dec
in
sbb
daa
xor
pushf
popa
ljmp
sbb
popa
mov
scas
mov
rcll
jno
mov
xchg
adc
js
dec
data16
sub
mov
mov
jb
add
adcb
icebp
icebp
dec
insb
hlt
leave
out
or
adc
lahf
dec
je
popa
rclb
imul
add
imul
lea
shl
sbbl
scas
jge
mov
fldl
and
sbb
xor
fcmove
subb
in
insb
rcrb
push
rcrb
sbb
mov
in
dec
push
popf
inc
pushf
pop
push
jne
aad
dec
inc
stc
add
call
js
jo
sbb
shr
inc
or
xor
iret
lods
xchg
pop
jmp
push
icebp
adc
bound
dec
and
testb
dec
std
pop
push
sahf
bound
xor
and
icebp
inc
add
sub
stos
cmc
or
add
adc
push
cli
popa
jb
into
out
rcl
out
add
adc
repz
and
and
out
sub
aam
mov
mov
push
inc
fidivs
cltd
mov
in
lcall
inc
xor
ret
sub
ss
loop
fnsave
sub
clc
into
xlat
sub
dec
test
shlb
iret
dec
call
lret
cmp
test
cmp
dec
cmp
add
jle
fprem1
fstl
in
lret
mul
pop
sbb
cmpsl
fmulp
out
cltd
mov
sbb
jle
push
inc
cmp
adc
jbe
dec
xchg
in
mov
cmpsb
stc
shll
imul
ja
popa
dec
sbb
testb
int3
xor
ljmp
mov
xchg
jno
andl
out
shrl
icebp
inc
push
es
cmpsb
in
dec
adc
xor
scas
notb
mov
fimull
fcmovnbe
pop
sub
cmp
movsb
arpl
xchg
sbbb
vminss
adc
mov
ret
pop
jl
adc
mov
out
sub
cmp
ja
jnp
xor
incb
and
jo
fs
lret
push
xor
xchg
in
xchg
popa
xor
out
sbb
sar
sbbl
out
testl
mov
sahf
jmp
ja
jmp
movsb
sbb
mov
loope
pop
shlb
test
pop
stos
sub
loop
fisubrl
ljmp
lret
sahf
mov
leave
fidivrl
jecxz
push
pop
into
repnz
adc
idiv
cmp
mov
sbb
lret
int
test
jmp
das
mov
into
repnz
mov
xchg
lea
insb
imul
push
jns
mov
jnp
add
fidivl
int3
cmp
sbb
imul
mov
jne
popa
mov
scas
mov
add
lock
imul
lods
es
movsb
pop
andl
in
inc
xchg
in
sbbl
push
sub
notl
push
inc
pop
sub
mov
inc
inc
push
movsl
jae
dec
lret
add
insb
addr16
je
sbb
out
cmp
mov
int
cli
fisubl
aad
fists
adc
lret
lds
cmpsl
sbb
push
mov
mov
mov
inc
push
cmpsl
and
inc
stos
lahf
and
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
mov
loope
or
add
adc
cmpsl
ret
fldt
pop
ljmp
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
inc
and
fidivs
add
dec
int
inc
sbb
mov
adc
xchg
pop
add
cmp
lods
popf
and
xlat
out
daa
push
je
lret
jge
jg
dec
jle
sub
insl
mov
xchg
jecxz
xchg
add
fwait
sbb
xor
dec
imul
cmp
push
aas
pop
inc
cmc
es
outsb
mov
pop
lret
ficoml
sub
jge
mov
mov
lahf
adc
je
pop
adcb
cwtl
adc
push
jl
shrb
sub
ss
or
enter
js
repnz
enter
add
or
cmp
and
pop
or
pop
insl
sub
std
lret
lds
test
mov
jno
popa
pop
int3
mov
ficoms
sub
inc
fdivs
in
mov
dec
dec
ja
lea
dec
ss
dec
imul
scas
sbb
clc
aas
xor
int
jns
inc
je
push
pop
inc
mov
fstpt
jo
nop
mov
cmp
push
cmp
sub
ret
lea
mov
mov
xor
xor
pushf
mov
aas
cmp
bound
adc
sbb
or
shrb
sub
dec
jecxz
in
sub
jmp
vphaddbd
ja
adc
pop
mov
notl
mov
sar
jge
sub
fdivs
mov
push
xor
popa
test
cmp
out
incl
andl
nop
xchg
enter
jecxz
add
dec
pop
shr
mov
sbb
roll
insb
dec
ljmp
jae
dec
gs
repz
dec
mov
jecxz
mov
push
push
mov
and
xchg
push
push
sbb
cmp
cmpsb
bound
push
outsb
leave
stos
add
adc
mov
testb
or
sbb
dec
xor
add
xor
push
pop
ss
or
int3
test
mov
loopne
fs
arpl
dec
sub
repnz
or
insl
push
jle
leave
call
dec
dec
fadds
push
inc
test
mov
push
sub
lcall
push
ss
jb
je
loope
jae
mov
inc
sarl
mov
mov
aaa
lret
sub
js
mov
xlat
push
dec
mov
rorb
sahf
cmp
cli
cmc
cs
mov
pop
outsb
call
test
imul
hlt
add
or
ror
lock
sub
and
push
enter
cltd
mov
leave
dec
ss
push
cld
and
pop
pop
fwait
stos
xor
cmpsl
repz
pop
mov
out
insl
inc
and
jno
in
aad
imul
sub
cltd
inc
cmp
outsb
ficompl
sub
std
and
sub
pop
lret
sbb
rcrb
add
xor
sub
push
imul
movsb
sbb
shl
lods
icebp
clc
sbb
into
jp
sbb
push
adc
cwtl
add
mov
sti
xor
repz
das
clc
fcoml
push
xor
addr16
fldcw
sub
inc
das
mov
adc
test
stos
cmpsl
add
inc
jmp
in
sub
lds
mov
pusha
add
std
int3
inc
je
aad
shl
pop
out
mov
mov
push
push
test
inc
dec
jns
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
and
ljmp
adc
cmpsl
ret
test
xchg
pop
ljmp
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
hlt
push
xchg
mov
inc
sbb
mov
adc
push
inc
pop
pop
and
adc
subl
push
aas
or
in
or
adc
test
or
fdivrl
cmpsl
adc
dec
jmp
fnstsw
icebp
popa
cmp
out
stos
and
push
cmp
adc
mov
in
push
lea
push
pop
xchg
xchg
sahf
push
mov
dec
and
dec
rclb
xchg
sub
jmp
add
pushf
insl
dec
jl
xchg
sahf
push
adc
in
ret
gs
stos
mov
inc
mov
cmc
out
sbb
fmulp
pusha
fstl
pop
cltd
out
scas
testl
ds
and
bound
roll
fldl
dec
out
std
mov
xor
push
rolb
push
int
arpl
and
ror
mov
rcr
ljmp
cmc
or
cli
sub
fsubl
insl
cmpsb
aad
daa
lea
lret
fistpll
aam
mov
jecxz
jnp
js
adc
inc
cmp
ret
xchg
ljmp
aaa
xor
xor
scas
repz
lret
adc
es
sbb
rorl
add
shll
dec
and
int3
rorb
in
pop
mov
mov
xchg
shrl
jno
inc
push
movsl
test
arpl
mov
pop
add
in
into
dec
lret
mov
cmp
mov
add
arpl
pop
and
push
pop
repz
movsl
sbb
or
insb
xchg
mov
loopne
xchg
xchg
imul
add
adc
std
jbe
lods
fdivrl
dec
pop
jmp
adc
add
jle
dec
outsb
cwtl
dec
mov
adc
scas
or
pop
and
sbb
pop
fnstsw
jecxz
jns
xchg
push
sub
sahf
mov
push
mov
jne
sbb
xchg
je
xchg
add
out
add
int3
mov
xchg
xor
inc
cltd
pop
xchg
dec
lea
lea
hlt
fisttps
in
mov
pushf
int
xchg
pop
or
push
push
ret
aam
dec
xor
xchg
and
aas
adc
lret
sahf
imul
into
cs
mov
or
je
pop
mov
sub
xor
sti
ljmp
mov
test
sti
lret
lcall
add
pop
stos
xor
dec
xchg
inc
mov
mov
or
movsl
cmp
leave
aad
sbbl
lods
xchg
jmp
mov
idivb
add
jne
mov
adc
pop
add
hlt
push
lahf
mov
cltd
and
push
pop
lods
and
insl
jmp
add
sbb
push
pop
jge
lods
jl
sbbl
out
cli
mov
lock
mov
add
mov
push
xchg
cmpsl
sub
mov
jo
mov
mov
sti
cwtl
test
inc
pop
rol
jae
cmp
mov
stos
pop
call
enter
jl
sbbb
shll
adc
jne
sarb
ficompl
sbb
and
aam
mov
clc
movsb
es
imul
insb
pop
cmpsl
popf
sbb
jmp
push
push
sbb
or
repnz
pop
mov
or
mov
jmp
sti
adc
hlt
scas
stos
jle
scas
fcompl
hlt
lret
lret
mov
pop
jb
cmpb
xor
xchg
outsb
xchg
xchg
jge
out
xchg
sbb
loop
test
rcrb
popa
repnz
xlat
addb
push
in
out
mov
or
movsb
mov
js
leave
inc
mov
arpl
lret
mov
xchg
clc
inc
test
dec
arpl
int3
adc
jl
push
loopne
imul
out
dec
xchg
dec
mov
inc
int3
adc
jl
push
loopne
cmc
jge
sahf
pop
or
lret
dec
cmc
push
push
loop
add
nop
mov
pop
push
xor
mov
mov
ret
xchg
jmp
cwtl
add
fdivs
ds
xchg
pushf
idivl
hlt
xchg
inc
scas
daa
enter
dec
sbb
nop
scas
jno
pop
stos
jmp
orb
mov
call
jp
arpl
je
sub
xor
lahf
push
sub
out
sub
sub
outsb
mull
or
adc
mov
out
dec
pop
and
xlat
mov
out
lock
in
sub
mov
orl
lret
mov
jle
and
pop
lcall
push
repz
inc
std
or
je
inc
mov
xchg
cwtl
or
sub
push
scas
daa
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
sahf
in
aad
xor
arpl
lods
popf
and
xlat
out
daa
push
je
lret
jge
aaa
jle
pop
push
fwait
std
cmp
out
pop
mov
and
lahf
int
jmp
jbe
xchg
mov
es
jno
xor
xor
clc
lods
xor
ja
add
mov
cld
jge
lret
lret
icebp
xor
mov
ds
dec
mov
js
push
mov
cmp
sub
xchg
fcompl
cmpl
int
gs
repz
lods
dec
movsl
dec
sti
jl
gs
out
sbb
push
jno
mov
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
and
fucomp
movsl
cmp
lods
popf
and
xlat
out
pop
mov
js
dec
enter
dec
xchg
push
jae
xchg
xor
imul
inc
inc
movsb
cmp
and
push
mov
orb
scas
cs
lods
push
mov
divb
push
nop
fsubs
imul
leave
sbb
cs
inc
cltd
mov
repz
xchg
dec
dec
pop
sub
mov
mov
lods
push
sti
cwtl
sbb
roll
loope
popa
dec
add
add
xchg
mov
push
scas
daa
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
push
repnz
je
fdivrl
adc
cmpsl
ret
es
or
mov
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
mov
xchg
mov
es
cmpsl
ret
mov
inc
xchg
pop
ljmp
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
jecxz
out
int
dec
jno
and
inc
dec
jns
mov
adc
inc
enter
aam
mov
mov
lods
popf
and
xlat
out
lcall
mov
das
js
mov
call
ficompl
cmp
ss
lahf
aad
mov
cltd
push
cmp
and
lock
cmp
out
lcall
test
push
mov
xchg
fimull
lcall
xchg
mov
dec
out
lods
and
ds
popf
push
or
fadds
ret
jmp
cmpsl
xchg
cmp
int
test
out
pop
test
in
gs
xchg
push
mov
sbb
inc
and
lret
addr16
lock
shlb
scas
jle
mov
test
jecxz
mov
push
out
mov
mov
and
xor
jbe
lods
cmp
cmpb
testb
jp
jmp
xchg
iret
sarl
xchg
getsec
int3
fimull
adc
or
aam
pop
inc
repz
stc
mov
xchg
or
cs
iret
in
jl
dec
ja
addl
adcl
dec
in
mov
das
mov
daa
ja
and
aaa
push
mov
movsb
mov
fcompl
or
mov
daa
push
addl
mov
mov
mov
cmp
xor
and
ds
sahf
lods
cld
das
jne
adc
fbld
inc
dec
mov
xchg
cli
push
cmc
dec
stc
pop
movsl
add
mov
shll
jg
cltd
xchg
addr16
push
aas
cs
test
or
sbb
jns
movsb
dec
mov
and
cmp
repz
es
loopew
cmc
sbb
gs
mov
xorb
sbb
mov
lret
imul
std
in
and
repnz
fnstenv
mov
call
push
jne
add
aam
cmp
cmc
aam
pushf
or
inc
jp
pop
adc
dec
in
sub
xchg
out
mov
test
rcr
test
inc
sub
ret
fcoml
cmp
mov
mov
xchg
xlat
fxch
cmp
push
rolb
faddp
mov
add
jmp
xchg
push
mulb
push
jno
mov
fistps
aaa
pop
pop
jge
add
lea
add
bound
mov
xor
stos
loopne
jg
jmp
je
shrb
mov
mov
pop
dec
in
std
movsl
dec
sarl
dec
pop
stos
mov
repz
mov
jge
ljmp
mov
lahf
jnp
jg
in
xchg
cmpsl
or
mov
outsb
outsl
jmp
xor
xor
mov
sbb
ret
jb
js
or
pushf
addb
and
imul
pop
leave
test
adc
xchg
dec
xchg
pushf
jmp
gs
in
jmp
lods
and
jo
and
imul
or
fwait
mov
popa
lds
cmpsb
sbb
bound
mov
js
icebp
add
aam
ficompl
popa
call
xor
int3
xchg
sub
shll
sahf
mov
sti
imul
movsb
mov
clc
popa
fstpt
pop
sbb
and
sbb
inc
nop
xor
xor
xchg
jmp
dec
adc
sub
cmp
dec
jb
ljmp
and
es
inc
xchg
sub
xchg
push
popa
out
xchg
cmpsl
pop
pop
mul
inc
mov
cltd
lret
loopne
psubusb
outsl
cmp
les
cmp
inc
je
push
xchg
inc
inc
das
bound
addb
jmp
fiadds
scas
dec
push
imul
mov
test
repnz
xchg
xor
sbb
jae
push
add
leave
fsub
insb
int
pop
cmpsb
fstpt
push
xor
outsb
movsb
adc
xchg
cmp
lahf
mov
xchg
sarb
mov
aas
test
cmp
fidivrl
sub
enter
pop
pop
xlat
gs
mov
hlt
pop
mov
push
inc
subb
jecxz
xor
loop
adcl
sbb
jno
sbb
sahf
sbb
jp
push
mov
sbb
xor
sbb
mov
inc
adc
insb
test
mov
fbld
dec
jne
loope
out
sbb
sub
dec
jg
sbb
cmpsl
leave
rolb
mov
jle
jl
jmp
jmp
lock
adc
frstor
sub
int
stc
jo
xor
sbb
push
pop
xchg
lods
jg
sbb
repz
outsl
jl
adc
lret
repz
jns
xor
test
fiaddl
xchg
push
adc
stos
lret
clc
in
inc
or
popa
sub
sbb
sbbb
dec
mov
inc
fiaddl
jge
xor
sbb
push
out
lcall
bound
fdivrs
push
gs
ja
push
push
jno
mov
mov
add
lds
add
push
andl
test
arpl
sti
pop
aam
cli
dec
repz
pop
cwtl
xchg
cmpsl
out
mov
divl
stc
call
ficoms
inc
lcall
imul
je
ja
push
scas
outsl
sub
mov
mov
jo
pop
pusha
enter
jae
cmpsl
xchg
int
ret
xorb
leave
cmp
pop
fcmovnu
jle
pop
sub
push
das
or
mov
inc
jb
inc
in
xor
roll
and
sbb
into
cmp
es
sbb
push
push
xchg
pop
ja
xchg
loope
sbb
sbb
adc
stc
xchg
call
and
and
ss
icebp
popf
mov
mov
pop
pop
xchg
xor
out
cmp
sub
outsl
pop
xchg
mov
sbb
dec
aam
sets
daa
pushf
sbb
cmpsl
jae
mov
test
es
sbb
adc
inc
mov
in
mov
mov
clc
mov
sbb
sbb
adc
stc
jle
mov
out
subb
push
fcomip
arpl
push
stos
scas
inc
out
and
jle
jl
repz
subl
out
ds
lods
or
cmp
jb
dec
repnz
inc
int
cmp
jl
pop
stos
jnp
lret
dec
cmp
out
loopne
and
mov
rorl
cmpsl
xor
scas
pcmpeqd
xchg
bound
jb
mov
push
add
inc
aad
jg
sub
adc
pop
popf
aaa
insl
rcrl
mov
test
ljmp
dec
add
mov
pusha
aam
es
sahf
leave
adc
sahf
fisubs
push
sub
pop
cmp
sub
push
push
out
pop
shl
cmp
rcrl
dec
fisubrl
cwtl
and
mov
and
shrl
cmp
or
adc
pop
cmp
add
pushf
movsl
jl
lcall
or
pop
shl
add
std
fbstp
mov
leave
cmp
out
inc
pop
mov
pop
mov
sti
sub
inc
lret
dec
xchg
jl
jp
fisubl
add
ja
outsb
adc
mov
dec
lods
rolb
pop
je
cltd
push
enter
ret
cmp
and
loopne
out
test
ss
loope
mov
push
pop
adc
ss
add
dec
lds
cmp
mov
ret
xor
sarb
movsb
faddp
mov
aas
cmpsb
dec
ss
pop
data16
push
mov
inc
outsl
xor
shrb
test
cmp
mov
out
nop
dec
add
sarb
jns
lea
jae
shrl
pop
mov
sbb
rorl
jle
sbb
sub
icebp
aam
cltd
dec
dec
inc
shl
push
and
leave
sub
out
daa
test
mov
cltd
lret
sar
cmp
fs
cmc
lcall
ljmp
int3
mov
and
das
jmp
jns
push
dec
adc
fsubl
mov
out
sti
fs
cmp
xor
jle
test
jp,pt
adc
nop
je
xchg
xor
cmpsb
mov
fcmovb
jl
rolb
cs
mov
das
nop
ja
jl
and
subb
mov
adc
sub
xchg
leave
data16
test
mov
jo
mov
sbb
jle
sbb
aam
mov
mov
in
mov
xchg
adc
push
into
add
sbb
sbb
adc
outsl
mov
inc
add
mov
xchg
adcl
mov
inc
cmp
lea
push
mov
insb
mov
jo
xor
jge
cs
pop
pushf
mov
in
xchg
jnp
mov
fcomi
push
roll
ret
lods
js
push
lret
sbb
jns
dec
pop
addl
and
sti
sub
arpl
jns
pop
sar
xchg
adc
or
fs
cwtl
pop
mov
notb
dec
movsw
push
bound
int
shlb
pusha
pop
and
mov
push
sarb
push
ds
sti
ss
xor
inc
xlat
loopne
test
push
xchg
jnp
add
fsubrs
adc
rolb
cs
mov
xchg
enter
xlat
test
push
fdivl
dec
test
gs
test
aad
neg
dec
and
cmp
sbb
int3
jmp
mov
add
inc
mov
mov
push
dec
cmp
sbb
adc
mov
jnp
arpl
je
dec
and
sarb
mov
jb
inc
adc
imul
sub
xor
adc
xor
mov
adc
stos
clc
add
xor
imul
in
outsb
sbb
xor
in
inc
jbe
lods
sbb
sub
dec
or
rcl
push
jae
sbb
fnstsw
in
sar
dec
lret
rol
fistpl
mov
fcomps
out
push
pop
enter
jo
dec
cmp
ficompl
dec
call
test
jecxz
pop
add
imul
js
inc
mov
dec
pop
imul
mov
lret
cltd
adc
stos
and
addr16
loopne
lods
bound
and
cs
insl
dec
mov
test
loope
or
sbb
jle
sbb
mov
mov
add
inc
mov
mov
mov
inc
adc
dec
xchg
adc
movsb
call
popa
mov
mov
mov
push
dec
jge
push
sub
adc
lea
mov
dec
cmpsl
cld
push
push
jge
push
pusha
jg
pop
in
cmpsb
or
aaa
aaa
mov
push
imul
or
jnp
js
xchg
clc
push
and
das
mov
sub
fs
add
rcll
fwait
jns
addr16
xchg
push
pusha
es
xor
mov
fldlg2
pop
mov
in
and
xchg
jle
ficomps
cld
lret
cli
rclb
push
orb
dec
mov
mov
shlb
push
xor
mov
or
imul
xor
xchg
loope
mov
popf
jp
out
pop
psadbw
iret
repnz
lret
fisubs
mov
jo
xchg
adc
sub
loop
or
je
pop
fwait
xor
push
je
imul
sbb
fld
mov
jb
mov
lea
clc
in
cmp
xchg
add
cmpsb
cmp
xchg
inc
xor
fildl
mov
fs
sbb
sbb
lods
sbb
add
jb
in
fidivrl
stc
enter
in
fwait
loope
xor
jge
popf
scas
jne
xor
iret
mov
filds
cld
cmpsb
ret
fimuls
rcl
mov
rcl
mov
jae
cmpl
imul
fadds
es
push
aaa
idiv
enter
je
jl
xor
stos
and
addr16
data16
cmp
mov
test
scas
pop
xchg
das
mov
sbb
jle
sbb
sbb
addr16
inc
jle
mov
in
mov
pop
xchg
aas
add
ret
mov
sbb
adc
mulb
sub
cmp
mov
stos
loopne
mov
leave
and
iret
out
and
outsl
or
adc
push
mov
leave
ret
sbb
mov
into
out
test
out
mov
aaa
pop
and
mov
mov
jp
cmpsl
push
test
loop
sbb
aam
insb
dec
push
or
inc
push
out
pop
or
xchg
cmp
hlt
daa
cld
fimuls
in
pop
fstpt
inc
loopne
jg
xchg
shrl
insl
xchg
inc
pop
lret
hlt
sbb
or
fs
int
out
pop
dec
mov
inc
inc
icebp
test
popl
pop
push
add
push
addl
mov
popa
scas
ret
inc
mov
test
aam
repnz
idivl
outsb
jecxz
es
xchg
hlt
xchg
stos
ljmp
popf
ds
xor
insl
mov
jo
push
adc
push
out
or
cmp
xchg
push
and
cltd
lahf
dec
les
test
mov
inc
jmp
dec
push
fdiv
add
sbb
inc
or
xor
gs
imul
data16
pusha
jle
adc
sub
mov
out
pop
add
jb
or
mov
add
jno
pop
into
inc
test
xor
dec
in
xchg
push
lods
add
mov
add
das
rorl
pop
push
mov
inc
out
and
je
ds
int
ss
lret
js
shr
repnz
jbe
mov
mov
mov
push
lcall
xchg
mov
repnz
cli
push
imul
sbb
jae
mov
dec
mov
push
or
inc
push
cmp
xlat
xor
clc
out
pop
fwait
push
push
push
pop
ja
outsb
push
ja
or
lds
fbstp
xchg
popf
sarl
lock
and
mov
cmp
in
adc
xchg
cmp
ret
scas
add
ljmp
xchg
lcall
mov
mov
sbb
cmp
sbb
or
pop
rcr
movsb
xor
xchg
js
popf
popa
cmovns
and
out
cli
outsb
ja
enter
jae
aaa
xchg
out
push
or
ljmp
aam
push
mov
push
mov
fistps
inc
pop
leave
les
imul
outsb
lcall
xchg
lret
pop
push
add
inc
lahf
in
stc
adc
adc
pop
mov
jp
das
jno
fbld
dec
sahf
fucomi
fcompl
or
out
hlt
sbb
jp
sub
mov
xor
cmp
jb
jecxz
adc
push
outsl
or
cli
sbb
dec
in
fcmovu
add
jae
mov
mov
xchg
pop
ret
pop
cmp
jb
data16
arpl
sbb
sti
cmp
shl
mov
inc
cmpsb
notb
fldt
rcll
ret
sbbl
data16
and
lea
ja
push
and
je
insb
rorl
dec
xchg
in
sti
jmp
cwtl
aam
mov
push
mov
mov
mov
fdivp
xor
mov
adc
shrl
jmp
psubb
mov
pusha
aaa
jle
mov
push
repz
dec
adc
andl
lret
outsl
xrelease
aas
push
mov
jo
outsb
xor
fimuls
shlb
mov
inc
shlb
rcrb
or
adc
test
jle
aaa
movsl
gs
mov
mov
out
sbb
stos
jle
mov
xor
jge
xchg
xor
adc
cmp
mov
xor
and
mov
test
aad
push
mov
pop
les
std
rol
jb,pt
sub
incb
inc
dec
and
fcomps
fsubrp
xchg
inc
fidivrs
ret
add
add
jle
mov
bswap
push
dec
and
mov
lcall
jns
pop
push
inc
test
xor
push
xchg
stc
cmp
mov
xchg
scas
sbb
fcomi
ss
cmp
mov
test
pop
fistps
pop
inc
int
call
mov
daa
lock
fildl
jo
xchg
mov
lcall
popl
hlt
mov
add
fs
cmp
leave
sahf
push
jno
add
and
jae
cmpl
imul
xchg
mov
rcr
mov
divl
mov
xchg
or
xlat
cs
orl
je
out
je
ljmp
int
popa
cmpb
sub
push
push
cwtl
fildl
dec
push
push
js
stos
out
scas
iret
js
fnstsw
inc
adc
fucomi
test
out
xchg
sub
cltd
lcall
jno
mov
rcrl
insl
dec
inc
sub
pop
push
or
push
inc
scas
cltd
fstp
pop
and
xor
pushf
push
cwtl
cmp
enter
mov
inc
fldenv
xor
inc
test
int
jg
stos
xor
cmp
inc
sbb
out
jecxz
repz
dec
cld
jb
insb
scas
aam
push
pop
sti
call
dec
push
aas
dec
or
sbb
iret
shrl
enter
daa
mov
hlt
fs
fnstcw
lods
mov
cli
mov
lock
int3
pop
or
push
inc
scas
cltd
fstp
pop
and
xor
pushf
push
cwtl
cmp
enter
mov
inc
fldenv
xor
inc
test
mov
dec
and
inc
sbb
out
jecxz
repz
dec
cld
jb
insb
scas
aam
push
pop
sti
call
mov
addr16
cmp
out
jg
dec
inc
sub
xor
inc
lahf
inc
ret
aam
shlb
inc
sti
xor
stos
pop
rorb
cli
por
sbb
sti
insb
scas
aam
push
pop
sti
call
int3
out
sub
out
pop
fs
push
in
call
lea
mov
dec
cmpsl
cld
stos
mov
loope
mov
fmull
fnstsw
lods
xchg
mov
cmp
jbe
mov
aad
lods
mov
movsl
fbld
cli
dec
mov
push
loop
int
cmpsl
add
inc
enter
aam
data16
xlat
aad
adc
ds
pop
call
or
xchg
mov
sbb
and
mov
push
popa
popa
push
cmpsb
shr
ss
in
jmp
lods
cwtl
mov
inc
daa
push
push
sti
rclb
mov
mov
sbb
gs
mov
add
xchg
loopne
dec
xchg
and
std
insl
mov
clc
jmp
int
pushf
fstp
jl
mov
pushf
out
adc
lods
adc
dec
int
aas
sbb
loope
imul
inc
loope
mov
adc
mov
sarb
loope
inc
cs
roll
fmull
jl
and
xchg
mov
xchg
dec
inc
xor
mov
fsubrl
sbb
sbb
push
test
lahf
pop
mov
sub
mov
xchg
add
daa
ret
cmc
mov
sbb
loopne
shrb
lods
inc
jno
ljmp
fmuls
xchg
inc
inc
cmp
add
add
jae
out
lock
inc
mov
dec
sub
mov
mov
add
lods
aaa
push
add
bound
icebp
mov
pop
sbb
add
jge
adc
out
pop
dec
mov
shlb
movsl
sub
inc
sub
pop
jmp
aas
imul
push
dec
stos
cmp
test
shlb
push
outsb
movb
movsb
mov
test
xor
fcmovnu
loop
test
ss
lds
mov
push
pop
xchg
es
mov
jg
ret
popl
or
sbb
fistl
push
popa
loope
adc
xchg
mov
cmc
stc
lahf
sub
adc
inc
cmp
cmp
shll
dec
xchg
xchg
cwtl
jecxz
lea
shlb
divl
cmc
inc
call
out
mov
lods
push
push
adc
punpckhdq
repz
cltd
mov
or
ret
outsl
mov
fcomp
push
sbb
jle
xbegin
cmpsl
ja
xorl
int3
fidivs
mov
mov
mov
add
lods
push
push
adc
jo
pop
das
mov
jmp
les
xlat
ss
cmp
push
dec
movsl
and
cmp
xorl
jg
int
popa
cmpb
sub
push
push
cwtl
imul
mov
mov
ret
push
rolb
inc
jecxz
filds
shlb
or
int3
xchg
dec
mov
daa
or
fnstenv
mov
xchg
or
push
mov
pop
mov
xchg
lds
sahf
push
fsubrs
adc
sub
mov
cmp
bound
addr16
rolb
scas
dec
cmpl
jg
lods
mov
shl
ja
mov
pushf
addl
aad
and
cmp
ficoms
jecxz
jp
xor
incb
sbb
lret
lret
cltd
pop
and
cmc
sub
adc
xchg
in
sarb
push
fsubrs
adc
sub
mov
cmp
das
adc
movsl
jo
aad
lods
jno
inc
sbb
out
jecxz
repz
dec
cld
jb
insb
scas
aam
push
pop
sti
call
test
sbb
mov
scas
shl
pop
rol
push
movsl
add
sar
ss
xor
inc
xlat
loopne
test
or
push
add
sub
mov
sub
jecxz
scas
dec
cli
adc
outsl
adc
scas
loop
loop
cld
xor
mov
mov
fmull
fnstsw
scas
fs
push
pop
popa
rep
js
cwtl
mov
in
bnd
pop
hlt
push
out
inc
int
push
and
mov
rol
cs
mov
stos
insl
aas
mov
push
mov
inc
rcll
outsl
jl
adc
lret
mov
push
sarb
sbb
negb
out
xchg
shlb
out
or
dec
mov
xchg
mov
inc
outsl
push
out
out
sbb
mov
aad
lods
mov
xor
loopne
mov
scas
add
inc
xchg
imul
inc
add
incb
outsl
fs
test
ss
fbstp
mov
popf
cmp
or
cmpsl
js
leave
inc
mov
arpl
lret
outsb
fsubl
ljmp
pop
pushf
in
subl
adc
xchg
sub
lods
sbb
jnp
and
xor
lea
icebp
pop
in
mov
lock
jns
aam
mov
daa
push
and
mov
add
add
xchg
repnz
adc
cmp
loop
arpl
pop
cmp
lret
lret
mov
aaa
sbb
fcmovb
and
xchg
xchg
push
mov
xchg
lock
mov
xor
fimull
and
loop
sbb
divb
sbb
or
in
fisubrl
sbb
and
in
out
xchg
inc
bound
icebp
stc
dec
jns
arpl
repnz
mov
xor
xchg
rorb
jl
test
pop
sahf
add
cmp
sahf
xlat
mov
ret
lret
xchg
push
fldt
push
stc
popa
sub
or
push
ja
pushf
add
in
rolb
mov
push
scas
int
mov
loop
jns
mov
cmp
test
push
stc
stos
cmc
in
lret
mov
lods
outsl
shl
sub
mov
mov
notl
jno
outsb
scas
jle
xchg
or
xchg
shrl
fs
mov
push
jl
pop
and
cmp
stc
out
mov
sahf
andl
inc
xchg
push
fcoms
lcall
fidivl
repnz
lret
inc
pusha
dec
mov
lcall
xchg
mov
sbb
test
inc
xchg
call
aam
fs
test
mov
cmpsl
js
leave
inc
mov
arpl
lret
mov
subl
js
ret
push
pop
push
dec
sub
cld
mov
sub
notl
xlat
repz
fcoml
je
dec
test
imul
test
les
mov
int3
push
out
inc
inc
popa
in
push
jge
xorl
pushf
mov
fcompl
inc
mov
mov
movsl
loopne
inc
lea
cmp
push
jno
dec
mov
jp
hlt
roll
imul
xchg
cmp
int
repz
icebp
xor
push
pop
pop
sub
mov
xchg
sub
jae
mov
push
sub
mov
pop
das
ja
out
hlt
std
hlt
mov
xorl
push
adc
sub
lret
or
jns
mov
ret
mov
out
sbb
sub
mov
jmp
mov
test
fildl
iret
std
movsb
enter
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
or
jno
lds
adc
cmpsl
ret
repz
push
inc
icebp
xchg
pop
ljmp
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
mov
pop
mov
movsl
add
and
inc
and
cmp
cmp
cmpsl
sahf
or
movsb
jmp
std
inc
adc
loope
iret
ljmp
outsb
sti
inc
enter
test
popa
pop
xchg
scas
test
lea
mov
fnstsw
xchg
mov
push
scas
daa
mov
adc
mov
adc
mov
adc
enter
xor
loopne
jl
jb
iret
push
cmc
adc
adc
cmpsl
ret
cs
cmc
lahf
sbb
lock
call
out
adc
mov
adc
enter
xor
loopne
sub
sub
test
sahf
fadds
fstl
jae
inc
and
clc
out
repz
xchg
xchg
xchg
les
test
inc
mov
into
andb
insl
arpl
adc
mov
adc
faddl
sub
dec
dec
cmp
lods
popf
and
xlat
out
daa
push
je
lret
jge
mov
bound
inc
mov
xchg
jecxz
xchg
mov
ret
das
xor
dec
call
in
hlt
dec
js
xchg
xor
cltd
scas
push
aas
pop
inc
cmc
es
pop
xor
adc
les
cmp
adc
mov
fidivrl
popf
test
fdiv
fidivrl
jbe
lea
mulb
aam
lods
fdivl
lods
lret
add
sbb
mov
xchg
cmp
cmpsl
mov
pushf
or
ss
imul
out
ss
push
sub
outsb
das
scas
add
in
pop
arpl
aaa
stc
ret
mov
jns
mov
nop
pop
lods
dec
cld
push
mov
sahf
or
jbe
mov
stos
inc
adc
pop
fs
es
mov
dec
inc
cmp
or
cmp
in
xchg
pop
inc
pop
jne,pn
orl
mov
mov
mov
fsubrl
out
fists
and
dec
xchg
add
push
fwait
push
sbb
aaa
cli
cmp
and
or
outsl
sbb
jg
andb
iret
mov
xlat
movsl
jae
jl
js
and
pop
xchg
rcrb
xchg
bts
mov
xchg
pop
mov
fst
push
mov
rolb
push
sbb
pop
mov
rcrl
fstl
mov
iret
cmpsl
cmp
stc
xor
aam
rcr
add
movsb
adc
inc
test
mov
inc
sub
mov
mov
push
int3
jo
test
filds
dec
mov
or
movsb
xchg
fcomi
lret
or
aam
add
push
mov
movsb
push
mov
jne
jns
pop
outsl
mov
shr
pop
or
fwait
mov
scas
push
cmp
mov
decb
cwtl
add
pop
xor
jae
jl
xlat
int3
mov
fcomp
jnp
mov
pop
pop
pusha
mov
dec
xor
xchg
imul
addr16
xchg
fidivs
cmp
sub
cli
repnz
xor
cs
scas
test
push
jns
iret
mov
push
andl
push
adc
push
jbe
js
add
aam
xor
pop
aaa
mov
in
mov
jge
ja
jle
outsb
jo
cmp
jle
push
xor
cmpsb
and
jno
data16
or
jo
dec
in
nop
jp
outsb
ret
adc
inc
push
into
mov
ja
out
sub
push
pop
int3
scas
jns
ja
js
std
fbld
adc
pop
arpl
aaa
stc
ret
mov
adc
aaa
mov
in
mov
jge
ja
jle
loop
sub
xchg
outsb
scas
clc
push
movb
test
repnz
inc
xor
mov
nop
aad
sbb
pop
enter
pop
mov
imul
iret
lods
data16
dec
dec
jnp
mov
ret
and
in
rcll
fdiv
sbb
fwait
dec
stos
add
ds
inc
aaa
in
fsubrl
jmp
inc
rcr
in
xchg
enter
jecxz
test
aad
popf
add
dec
fisubrs
xchg
sub
jmp
xchg
push
mov
leave
push
cmp
cmp
push
lahf
flds
inc
xor
aam
std
scas
sub
movsb
dec
mov
mov
and
mov
push
and
xor
and
mov
imulb
push
ret
adc
sti
dec
test
jo
loop
scas
xor
cwtl
or
loop
hlt
insl
xchg
inc
inc
cwtl
cmpsb
xchg
sub
sub
mov
test
push
mov
fucomp
adc
or
lds
bound
nop
sub
mov
dec
ret
mov
mov
das
sub
subl
pushf
mov
iret
jbe
icebp
xchg
lds
and
xchg
mov
push
jne
addr16
inc
rcl
mov
scas
out
pop
outsl
std
int3
inc
je
aad
rcl
inc
movsb
push
or
sbb
not
lret
or
clc
hlt
jp
aam
ss
out
xor
dec
lahf
mov
sets
pushf
sub
push
inc
xor
sub
icebp
stc
dec
xchg
lret
dec
sub
je
divb
iret
sub
jne
aam
add
push
xchg
mov
fisttps
jge
and
jbe
mov
dec
js
movsb
ret
sbb
mov
cmp
xlat
mov
movsb
sbb
cmp
jo
xchg
arpl
aad
or
jl
push
not
std
imulb
dec
adc
sahf
add
adc
hlt
push
mov
jnp,pt
adc
aaa
aad
cmpsl
inc
push
xlat
arpl
ficompl
aaa
or
dec
cld
xchg
adc
xchg
pop
cs
push
das
fbld
aam
mov
jp
outsl
push
inc
subb
dec
mov
stos
aam
outsb
mov
mov
or
pop
outsl
repz
lods
inc
sub
mov
adc
xor
inc
push
xchg
insb
dec
fidivrl
ds
lcall
pusha
inc
xchg
inc
je
xor
sti
sub
rol
test
dec
adc
jmp
mov
cmc
cmp
xchg
aas
lods
fadds
aas
cli
addr16
cmp
push
and
push
les
jecxz
test
jecxz
pop
add
xchg
push
imul
clc
lods
mov
fs
fs
ljmp
dec
cmp
int
loope
jb
mov
fsubl
nop
in
rolb
jne
cmp
and
imul
in
cmpsl
scas
push
aas
pop
inc
cmc
es
mov
jg
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
rorb
push
es
cmpsl
ret
into
pop
stos
fmull
loope
das
cmc
xchg
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
loopne
xor
cmp
sbb
mov
adc
enter
xor
loopne
adc
je
insb
dec
gs
cmpsl
ret
ss
dec
enter
loope
das
cmc
xchg
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
jp
ss
jae
cmp
sbb
mov
adc
icebp
add
lods
dec
ss
dec
popa
pop
and
inc
sbb
dec
push
dec
test
in
in
sbb
aad
inc
sub
adc
cmpsb
loope
aad
loopne
push
xorb
cld
or
lcall
mov
int3
int
cli
js
push
outsb
outsl
xchg
fnsave
leave
adc
push
rcrb
xchg
arpl
mov
repz
cmp
shll
movsl
cwtl
fists
cli
pop
push
or
mov
aad
les
xchg
jecxz
inc
xchg
pop
dec
lcall
icebp
insl
fisubrl
jp
in
or
popa
outsb
pop
lds
mov
icebp
inc
pop
mov
and
and
cmp
adc
mov
fbld
rcrb
fdivrl
mov
fiadds
lods
sbb
sarb
mov
into
cs
xor
or
aaa
adc
js
mov
xchg
dec
pop
pop
pop
pop
daa
mov
lahf
shrb
jg
test
jl
and
int
paddsb
cs
jge
dec
dec
out
outsb
jmp
movsb
pop
shll
shll
scas
or
pop
inc
lea
cmp
inc
pop
std
ja
push
aad
push
loope
adc
mov
cmp
sti
and
mov
xchg
cmpsb
cmp
and
push
sbb
adc
sub
mov
mov
std
imul
or
mov
cmp
int
movsl
sub
sbb
test
mov
adc
and
shlb
ss
cmp
scas
test
mov
mov
outsb
mov
and
gs
sub
xchg
mov
sub
add
sbb
sub
int
dec
and
lds
adc
jb
movsl
and
mov
out
fwait
ljmp
pop
into
cld
pop
dec
push
stc
inc
clc
add
cld
adc
loopne
cltd
mov
icebp
repnz
int3
cltd
cmpsb
jecxz
pushf
dec
loopne
aad
repnz
jecxz
mov
cmp
push
ljmp
inc
lahf
jecxz
and
xlat
and
or
inc
dec
nop
xchg
push
push
jge
or
mov
pop
and
cltd
push
fiaddl
xor
jns
xchg
enter
call
scas
lahf
incb
sub
and
mov
lcall
orb
pushf
mov
cmp
jl
cltd
mov
out
lcall
iret
mov
and
lahf
rol
insl
cld
pop
je
mov
cwtl
dec
sahf
dec
or
xor
cmp
inc
lea
push
dec
into
loope
ds
test
inc
mov
in
sub
in
lea
cmp
cmp
fidivs
fnstsw
mov
add
fsubrs
dec
sub
adc
loop
ret
jnp
popa
xchg
insb
inc
jno
sti
in
xchg
xor
mov
push
jo
mov
testb
adc
fdivrp
or
loopne
inc
fsts
mov
push
push
mov
dec
lods
aam
push
mov
mov
movsb
push
jae
cmp
sub
mov
ficompl
fwait
into
sub
jo
sub
out
loopne
mov
sub
cmp
mov
xor
fwait
cmp
rcrl
gs
adc
pop
filds
mov
shll
and
adc
es
push
call
outsl
inc
add
subb
repnz
pop
or
cmp
gs
xchg
int3
shlb
sbb
jl
cltd
mov
aam
xlat
in
sbbl
or
daa
sbb
stos
cmp
je
pop
and
inc
and
xchg
mov
popf
and
lods
lods
cld
jg
dec
fldcw
cs
jmp
sar
xchg
xor
test
loop
shrl
das
out
outsl
jecxz
sbb
xchg
out
inc
jmp
or
jp
addl
jmp
into
dec
mov
mov
popf
aas
in
sub
iret
stos
cld
mov
ficoml
shlb
mov
and
dec
mov
sub
sub
mov
xchg
popa
mov
lea
aam
jb
out
in
jmp
rorl
sahf
inc
shlb
in
mov
aam
lds
pop
or
pop
aaa
inc
xlat
fs
cmpsb
addr16
mov
lahf
mov
lds
lahf
push
fbld
loopne
mov
mov
stc
aas
mov
mov
dec
mov
sub
push
xchg
rolb
fidivs
cld
scas
mov
aas
stos
js
mov
rol
out
call
int3
pop
push
jns
and
mov
std
aaa
jae
insb
jnp
push
adc
rorl
inc
inc
enter
pushf
mov
sbb
std
push
arpl
xor
addr16
orl
sbb
fistps
insl
mov
cmp
sbb
xchg
and
sub
adcl
ret
pop
fucomip
fwait
jp
xchg
push
jae
hlt
mov
jg
add
sbb
mov
pop
push
inc
mov
sbb
insb
push
sbb
xchg
sarl
dec
mov
icebp
mov
push
cmp
cmp
or
fsubrl
mov
sbb
cmp
mov
jno
fisubrs
inc
dec
inc
push
push
or
ljmp
cli
repz
mov
fsts
mov
dec
adc
add
mov
orb
xchg
or
dec
pop
jae
sub
fidivrs
cmp
xor
div
cmpl
xchg
xchg
sti
push
ret
jmp
sarl
pushf
xor
sbb
repz
divb
xor
add
pop
pop
xor
cld
cli
fwait
xchg
adc
outsb
mov
nop
pop
mov
ret
outsl
cmp
testb
into
sub
dec
sub
repz
cmpsl
imul
stc
loopne
sbb
mov
jge
pop
xchg
mov
ds
bound
shlb
inc
in
cmpsl
pop
insl
inc
adc
xorb
ret
mov
jge
leave
fisubrs
push
sbb
and
psubd
dec
out
movsb
push
mov
pop
push
fnstenv
sbb
repnz
adc
and
jecxz
cli
xchg
aaa
scas
pop
in
add
lcall
inc
sbb
fsubrs
mov
clc
mov
mov
jo
in
adc
mov
xchg
xchg
jbe
jg
push
pop
cmpsb
jae
and
clc
aaa
or
les
imul
and
jp
iret
mov
jecxz
std
mov
or
xchg
into
xor
dec
pop
jb
stos
int
cli
add
xlat
neg
call
sbb
pop
push
inc
ljmp
inc
add
pop
sbb
push
test
jecxz
adc
pop
fwait
adc
pop
or
testl
mov
orl
lcall
jns
scas
outsl
mov
fadds
or
xchg
fcoms
xchg
push
mov
dec
cmp
ja
xchg
dec
fildl
pop
jge
pop
repz
push
mov
cmp
sahf
xor
lcall
pop
imul
sub
mov
lcall
pop
fmul
lods
xor
fwait
push
mov
mov
mov
gs
pop
and
pop
movsl
cmp
pop
ficomps
mov
out
push
cmovae
aas
idivb
cwtl
out
xchg
outsl
in
push
repnz
xor
sbb
mov
leave
mov
and
insl
pop
pop
inc
loopne
aas
or
and
add
pop
mov
jg
or
fwait
pop
sahf
and
loop
adc
clc
sbb
mov
pop
in
add
lcall
push
lret
add
icebp
xchg
enter
stc
xchg
adc
dec
dec
mov
push
jecxz
ficompl
jg
sbb
jg
push
pop
cmpsb
jae
stos
pop
sbbl
je
pop
cmp
mov
popa
stos
mov
jae
jmp
out
mov
or
dec
loope
lret
hlt
dec
pop
jb
stos
int
cli
add
xlat
neg
call
sbb
pop
push
inc
ljmp
mov
nop
dec
sbb
inc
or
stc
push
pop
mov
scas
leave
loop
xor
test
test
aad
imul
fldenv
sub
or
fisubs
fs
xor
sub
cmpsl
movsb
in
push
pop
and
ficoms
test
cmp
andb
jns
cwtl
mov
cmc
mov
outsb
out
lods
pop
jmp
mov
xor
outsl
adc
fmull
fldenv
xchg
adc
adcl
test
pop
push
test
xchg
mov
out
xor
adc
mov
push
cs
xor
or
mov
mov
xor
in
lods
push
add
iret
inc
push
stos
popf
xchg
inc
push
and
pop
xor
cmp
je
xchg
ror
ja
mov
pop
test
in
cmp
adc
mov
or
add
adc
scas
add
test
jmp
xor
add
loope
xor
icebp
adc
cmc
pusha
lods
dec
cmp
icebp
shl
inc
xchg
cmc
fwait
popf
pop
jg
xchg
cmp
out
add
xchg
lcall
or
scas
mov
notl
push
sub
lret
jp
mov
push
or
sub
mov
mov
arpl
adc
inc
dec
xchg
mov
stos
inc
ret
in
pop
and
jmp
stc
sub
sbb
popa
sbb
dec
sub
aad
mov
push
out
punpckhdq
stos
jge
iret
aad
or
cmp
loopne
xchg
inc
dec
ss
call
or
inc
push
cmp
loop
add
in
iret
subb
imul
push
pop
add
testb
data16
push
in
loopne
mov
xor
int3
dec
inc
dec
loopne
mov
or
ret
cmp
jge
pop
mulb
das
aas
sub
scas
loop
je
iret
xchg
shlb
dec
xchg
xchg
loop
jo
push
cmp
xor
jg
or
sbb
mov
lds
rcl
fsubrl
bound
add
sbb
pop
dec
mov
mov
aad
sahf
nop
or
mov
push
cmp
add
add
add
pop
push
push
js
xor
jbe
sub
outsl
jp
idiv
mov
gs
jnp
xchg
jle
add
pop
and
inc
sub
stc
pop
stos
popa
fldcw
imul
rolb
popf
mov
sti
ficompl
xor
and
call
rorl
gs
mov
lcall
lret
mov
out
jmp
xlat
negb
cld
iret
stos
adc
push
xchg
push
lds
lret
scas
mov
pop
pop
adc
in
mov
lcall
push
mov
gs
ljmp
inc
sbb
xor
in
xchg
rcl
notl
or
stos
insb
fxch
std
in
in
fistps
divb
fchs
dec
leave
xchg
add
sub
sub
mov
jbe
gs
sbb
dec
xchg
notb
enter
mov
xchg
jg
outsl
or
add
adc
das
pop
jne
jl
inc
outsb
sarb
mov
sub
mov
sub
aad
xor
push
mov
pop
sbbl
mov
xchg
jmp
dec
sbb
aaa
cmp
cld
pop
mov
mov
xchg
jno,pt
add
icebp
xchg
enter
push
data16
loope
mov
or
push
stos
cmp
ret
int
mov
roll
test
and
sti
std
or
fwait
xor
aad
pop
xchg
mov
fstpl
xchg
xor
ss
lret
lahf
mov
or
inc
add
sub
mov
fcmovnu
jge
push
or
mov
push
xor
mov
or
mulb
pop
add
bound
out
and
dec
xchg
mov
pop
sbb
sub
outsl
shll
dec
and
loopne
inc
or
and
repz
dec
shr
popf
iret
shrb
sub
xchg
leave
push
fldt
mov
dec
and
fisubrs
sbb
inc
test
mov
xchg
push
sbb
or
mov
mov
out
ficoms
insl
jg
and
add
pop
enter
mov
sarl
xor
inc
jecxz
cmc
call
rorl
imull
mov
out
ja
sbb
or
fldt
into
je
insl
popf
insl
into
addl
nop
jmp
mov
push
gs
add
test
jp
sbb
pshufw
cmpsl
arpl
repnz
adc
pop
inc
xlat
fmul
cmpsb
mov
pop
xor
fistl
repnz
test
jbe
jle
mov
push
outsb
push
mov
sbb
scas
sbb
lea
movsl
mov
pop
sbb
push
and
pop
imul
xor
leave
or
clc
outsl
out
into
test
push
mov
lods
adc
rclb
arpl
les
ljmp
dec
cmp
movsb
es
mov
jecxz
lcall
or
jb
stc
gs
and
ret
mov
and
push
decl
subl
lret
icebp
pop
mov
xchg
lret
adc
in
xchg
cmp
fcomi
inc
lret
mov
inc
test
out
adc
mov
int
adcl
or
xchg
fisubrs
xchg
pop
pop
insb
lods
mov
or
hlt
xor
or
outsb
int
fnstcw
jmp
pushf
fwait
pop
mov
cmp
sarb
sbb
xor
popl
cmpsb
and
fldl
sbb
mov
in
addr16
in
cwtl
notb
jmp
jnp
mov
dec
cmp
into
xchg
lods
jae
outsl
test
idivb
ret
fmul
cltd
xor
stos
pop
jno
pop
fldt
xor
test
push
push
nop
jmp
inc
scas
push
fyl2x
mov
jmp
mov
or
pop
aaa
cld
sbb
cmpsb
xchg
jp
fsubrl
hlt
aad
cmp
pop
fcmovnb
cs
sar
int3
mov
testb
adc
stos
outsl
fstps
xlat
mov
push
scas
insl
out
fiaddl
mov
add
imul
cmp
das
mov
add
sbb
out
lock
je
add
jecxz
push
aas
pop
inc
cmc
es
sbb
push
ret
or
xor
je
insb
or
outsb
int
fnstcw
xor
xchg
jle
and
jb
sub
in
add
in
out
lock
sub
fs
mov
mov
repz
imul
bound
or
addl
push
lcall
ljmp
mov
push
jp
mov
addr16
xor
lods
cmp
negb
lret
mov
xor
insb
scas
outsl
pop
inc
cs
cwtl
xchg
pop
lret
adc
xchg
xchg
cs
out
pop
pushf
in
xlat
add
pop
pusha
mov
pop
jb
popf
push
cmp
add
xorb
fcmovnbe
inc
mov
test
test
xchg
adc
push
mov
daa
push
jg
inc
push
test
imull
add
pop
jp
cmp
sbb
or
lds
adc
in
insl
inc
repz
push
or
pop
imul
jo
popf
xor
xchg
jg
fucomi
data16
shl
jmp
pop
mov
cmpsl
cmp
xchg
sub
push
sarl
and
cmc
fcoms
enter
aas
nop
out
push
leave
cmc
test
mov
syscall
imul
inc
jnp
cs
loopne
ror
cmp
andb
ffreep
and
outsl
addr16
outsb
jbe
mov
sbb
and
xchg
cld
cmpsb
and
dec
mov
mov
ror
or
jb
insl
mov
xor
gs
mov
sbb
xor
cmpb
loope
leave
in
cmp
les
pop
cli
subb
and
dec
pop
xchg
outsl
sub
mov
gs
test
inc
xlat
mov
aas
pop
inc
cmc
es
mov
jg
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
icebp
add
lods
dec
ss
dec
popa
pop
and
lods
mov
jo
fadds
mov
xor
adc
xor
fimull
jl
sbb
push
inc
orb
push
fs
jns
pop
xor
outsb
nop
push
jle
fstps
repz
or
xchg
add
mov
insb
out
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
in
clc
shl
sub
arpl
lods
popf
and
xlat
out
cmpsb
loopne
aas
add
sub
out
fwait
pushf
jno
in
sbb
mov
jnp
and
imul
hlt
mov
push
imul
fwait
xor
xor
adc
ja
cli
jno
sub
ljmp
mov
bound
repz
cmp
loopne
cwtl
mov
adc
mov
adc
mov
adc
mov
adc
add
imul
mov
adc
test
fs
mov
lods
popf
and
xlat
out
daa
push
je
lret
jge
and
shr
rclb
negl
mov
inc
ret
das
xor
dec
lahf
sar
xor
dec
js
xchg
xor
cltd
scas
push
aas
pop
inc
cmc
es
mov
xchg
jecxz
xor
shrl
scas
mov
repz
pushf
add
insb
mov
or
mov
in
mov
loope
imul
sbb
pop
andl
out
pop
sbb
test
push
cld
leave
cmp
xlat
div
xlat
sahf
fnstenv
mov
push
cmc
nop
lods
lcall
adc
cmpsb
mov
fistps
cmp
mov
and
aam
mov
sar
sbb
add
cmp
popa
mov
lods
imul
adc
sbb
mov
fistps
xchg
jbe
xchg
loop
sbb
pop
mov
mov
movsl
or
loop
mov
shl
pop
movsl
data16
add
dec
insl
xchg
rcll
fdivrl
test
xchg
adc
dec
jg
sbb
add
incl
jb
ret
imul
xchg
cmp
ja
jne
mov
adc
adc
fwait
repnz
xchg
push
mov
out
mov
in
imul
add
in
pop
cmp
jnp
pushf
pop
mov
out
dec
sbb
push
adc
ljmp
cmp
loopne
cwtl
bound
or
cli
pop
cmp
add
adc
mov
pop
scas
fwait
adc
cmp
or
sbb
xor
call
sub
in
cli
xor
cmp
shl
lds
ret
xor
and
or
out
cmpsb
ret
adc
sbbb
ljmpw
push
icebp
clc
dec
jmp
xchg
ja
sbb
mov
mov
nop
out
push
pop
pusha
dec
sbb
icebp
push
dec
sbb
jmp
dec
jb
lods
mov
add
add
add
aam
bound
lods
inc
aam
ljmp
fcomps
ret
push
fcmovb
fsubrs
xor
inc
mov
or
cli
es
scas
mov
ss
jbe
in
mov
cld
bound
and
das
jo
rcll
xchg
adc
xchg
add
rcl
cli
mov
mov
mov
lods
push
imul
mov
cmc
sub
jne
aas
dec
notb
mov
lea
clc
aas
cwtl
int
sub
mov
scas
lret
sti
jmp
xor
test
sbb
xchg
mov
aas
mov
orb
jno
jnp
mov
enter
or
sub
inc
mov
xchg
lret
xchg
fidivs
cmp
shll
data16
out
bound
pop
push
or
gs
and
repnz
sbb
lret
pop
inc
jbe
pop
fdivrl
ljmp
mov
dec
mov
test
nop
fldt
scas
add
add
sub
frstor
jmp
int3
call
je
or
sbb
pop
jns
lahf
enter
push
lds
xchg
or
mov
mov
pop
lods
or
and
test
shrl
inc
jg
andl
sub
pop
fidivs
outsb
fidivrl
fcmovb
jle
loope
outsb
movsl
mov
mov
xor
mov
stos
loopne
sub
mov
pushf
mov
cmpl
fimull
fdivl
push
fdivrs
arpl
dec
lret
int
inc
movsb
inc
and
arpl
pop
sub
pushw
cmpsb
les
stos
jae
lods
or
and
test
divl
loop
pop
pop
sub
popa
pop
push
fstpl
adc
push
aas
lods
pop
mov
outsl
icebp
leave
adc
shlb
addl
jno
scas
scas
int
mov
adc
scas
push
dec
mov
stos
add
add
cmp
pop
mov
sub
sbb
xor
mov
imul
cmc
jle
or
cmc
repnz
adc
dec
mov
push
pop
cmp
lret
lret
mov
pop
jb
cmpb
mov
outsb
xchg
xchg
jge
out
xchg
dec
addl
es
movsb
fsts
adc
sub
mov
js
leave
inc
mov
arpl
lret
mov
in
xlat
cs
out
pop
pushf
in
push
lret
xchg
add
jbe
sub
xchg
cmp
jo
es
or
test
lret
dec
mov
mov
mov
pop
das
push
jecxz
fldenv
cmpsl
push
std
xor
in
push
repz
lods
jg
jmp
rol
outsl
inc
sub
mov
and
sbb
ja
sbb
inc
jne
cmp
daa
dec
lret
adc
vmread
adc
xchg
shrb
aaa
xchg
fisubrl
adc
divl
sti
iret
shrb
pop
or
inc
rcl
mov
hlt
jno
or
int3
inc
je
aad
rcl
inc
movsb
push
or
mov
mov
decl
repz
mov
pushf
lahf
inc
loopne
in
out
lods
inc
divl
mov
loop
jle
adcb
imul
out
mov
cmp
data16
xor
in
mov
mov
sbb
add
scas
add
mov
fisttps
jge
and
jbe
mov
cltd
push
in
repnz
cld
in
sti
out
sub
xchg
or
xlat
mov
movsb
sbb
inc
fisubs
call
aad
or
jl
push
testl
dec
icebp
dec
push
push
or
sahf
lcall
cwtl
fsubs
push
jmp
repz
cmpb
cmpsl
inc
push
inc
sub
push
pop
dec
mov
repz
jp
or
and
test
adc
fisubs
cwtl
sub
pop
sub
popa
sbb
icebp
xorb
cmp
add
mov
and
je
cld
adc
jo
test
bound
aam
sub
adc
or
inc
mov
jmp
xchg
das
lret
out
sbb
mov
daa
sarl
loope
jns
push
mov
das
inc
ss
lahf
stos
fwait
movsl
cmpsb
fdivr
add
inc
bound
inc
cmp
inc
bound
mov
lock
push
sbb
xchg
dec
fadd
cli
inc
stos
test
cmp
push
push
jmp
outsb
iret
inc
inc
sub
add
ror
out
push
inc
test
xor
xchg
and
ret
cmpb
and
setg
fwait
adcb
cmp
mov
pop
jb
sub
xor
decl
clc
pop
pop
cmp
mov
pushf
scas
dec
insl
mov
pop
inc
cmc
es
mov
jg
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
enter
xor
loopne
pop
fmuls
cmp
adc
cmpsl
ret
test
mov
mov
loope
das
cmc
xchg
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
rcl
inc
adc
pop
cmp
and
inc
dec
jns
mov
adc
enter
xor
loopne
dec
dec
popf
fs
gs
es
cmpsl
ret
rolb
push
popa
jbe,pn
mov
push
das
cmc
xchg
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
nop
sbb
inc
test
dec
jns
mov
adc
enter
xor
loopne
leave
sbb
adc
adc
es
cmpsl
ret
addr16
in
inc
test
mov
push
das
cmc
xchg
xchg
hlt
mov
shr
xchg
lds
adc
mov
adc
enter
xor
loopne
ljmp
mov
inc
dec
jns
mov
adc
or
in
cmp
lods
popf
and
xlat
out
js
mov
cmp
jnp
js
js
insl
cmp
mov
xor
xchg
push
xchg
adc
adcb
pop
push
cmp
lcall
orl
int
inc
add
aaa
fwait
pop
cmpsl
pop
loop
cli
mov
ds
icebp
pop
sub
mov
int3
xchg
outsb
dec
xchg
incb
lock
add
ljmp
out
outsl
subl
dec
mov
daa
push
push
cmp
mov
dec
addl
xlat
fidivrl
fld
add
test
mov
fisttpll
out
cmp
enter
mov
test
adc
pop
mov
dec
out
adc
xor
add
push
cmpsb
xor
cld
mov
dec
xchg
inc
outsl
and
out
push
xchg
push
inc
lahf
dec
jo
fmull
inc
pop
jg
lcall
repz
cs
jle
lods
sbb
dec
into
movsb
push
xor
sbb
sub
movups
jle
in
sbb
iret
pop
frstor
push
jge
test
dec
loope
cmp
push
dec
jb
mov
lds
mov
fisttpl
and
cmp
cmc
sbb
das
lahf
and
cmc
or
cmp
jae
cwtl
popa
repnz
rep
push
hlt
cmp
loopne
inc
jno
add
lret
popa
insl
dec
mov
sbb
xchg
test
mov
fisttpll
out
cmp
enter
test
mov
out
pop
lock
je
xchg
mov
lea
sub
and
into
loopne
lret
jecxz
inc
std
push
adc
mov
sbb
aad
notl
popa
and
pop
mov
mov
dec
or
push
hlt
mov
jp
mov
addl
jb
lcall
rcrb
aaa
pop
mov
cltd
adc
insl
inc
lahf
ljmp
mov
shlb
fcmove
outsb
aas
stos
sarb
mov
add
pop
xchg
jno
mov
cld
xor
jno
push
cld
outsl
int3
pop
lcall
mov
les
movsl
sub
ret
mov
sub
lods
push
sbb
jbe
mov
xor
movsb
sbb
mov
inc
cs
fists
pop
mov
cltd
adc
insl
inc
lahf
inc
cmp
xchg
cld
cmp
sbb
mov
dec
xor
in
addr16
pop
dec
enter
movsb
cmp
fstpl
fwait
jmp
sbbl
lea
push
fildll
mov
decb
mov
lock
daa
push
mov
xchg
xchg
jns
jns
clc
jno
pop
dec
popa
dec
add
add
xchg
repnz
adc
sbb
mov
inc
loop
mov
stos
and
mov
clc
test
fadd
negl
xor
das
jnp
mov
shrb
pop
das
shl
add
test
mov
jo
cs
add
mov
sbb
sti
pop
sbb
movsb
lds
les
add
inc
mov
je
repnz
dec
out
fildl
cmc
cmpsb
daa
sbb
dec
sbb
push
adc
je
sbb
icebp
dec
out
pop
or
cs
jge
push
pop
add
cmp
out
sarb
in
mov
inc
scas
inc
dec
add
int
jbe
or
jns
scas
inc
or
sbb
repnz
and
jecxz
mov
fidivs
pop
pushf
mov
insb
aam
lods
movsb
iret
xor
fcoml
mov
leave
cmp
dec
jecxz
xor
lock
cld
xor
enter
and
pop
dec
sub
sbb
out
lods
adc
arpl
out
jae
leave
add
mov
lds
sti
xchg
in
sub
pop
mov
mov
leave
cmp
dec
xor
pop
dec
fisubrs
and
mov
push
mov
test
sbb
movsl
rol
mov
fmuls
insb
pop
fistps
loopne
aam
jl
jg
mov
mov
outsb
push
call
pop
jge
aas
pop
mov
insl
fsubrl
add
iret
mov
aas
sub
orl
loopne
lds
xchg
ret
cmp
dec
mov
sub
icebp
lock
and
rcrl
shlb
aam
xor
pcmpgtd
mov
std
leave
es
jcxz
test
lds
sbb
xor
pushf
sbb
pusha
push
dec
jnp
dec
inc
inc
xlat
fistps
xlat
add
arpl
cwtl
xchg
fcoml
fwait
ljmp
and
cld
xor
jno
push
sub
pop
inc
xchg
sbb
push
xor
adc
daa
push
or
clc
mov
push
and
call
idiv
js
pop
mov
scas
out
mov
adc
push
jmp
dec
pop
dec
or
mov
shlb
sub
mov
xchg
xor
ficompl
es
int3
sbb
jmp
cmp
dec
mov
fisttps
lds
into
stos
daa
xor
cmp
jo
into
loop
adc
data16
sbb
adc
aad
test
push
ret
lea
push
cmp
ffree
sub
ds
dec
add
cmp
xor
mov
movsb
mov
xor
or
aaa
dec
mov
enter
roll
ljmp
daa
push
adc
outsb
xchg
bswap
push
fwait
lods
jle
xchg
or
sahf
mov
adc
adc
nop
or
inc
mov
insb
xchg
sub
push
insl
and
mov
leave
xor
daa
in
out
data16
dec
loope
mov
leave
cmp
mov
or
out
pop
mov
pushf
int
sub
lock
pop
xchg
dec
mov
or
ss
orl
sahf
lahf
aas
shlb
lret
sahf
cltd
pop
add
fdivs
sbb
add
pop
xor
cmp
jo
mov
mov
adc
in
pop
or
lahf
arpl
test
movsb
daa
in
enter
nop
aas
pop
cmp
jbe
lods
push
leave
or
in
sub
out
mov
adc
mov
xor
sbbb
divb
icebp
lret
pand
mov
push
cmp
dec
out
nop
add
push
movsl
leave
fisubl
sub
or
sub
sbb
ss
pop
cld
dec
mov
clc
aad
sbb
divb
mov
cmpsb
add
xor
fistps
ret
inc
sti
sub
aam
addb
lret
mov
push
or
pop
push
xor
int
and
fxch
mov
jmp
pop
mov
in
fistl
shlb
popa
mov
in
or
mov
xchg
sbb
imul
add
test
pop
lret
cmp
inc
test
imul
dec
push
jp
xor
sbb
mov
enter
cld
mov
dec
inc
aas
sub
jns
pop
cli
je
sbb
xor
leave
cmp
dec
mov
test
call
movsl
scas
data16
xchg
pop
push
in
xchg
icebp
push
mov
mov
bound
jo
sbbb
mov
adc
and
clc
sbb
adc
cmpsl
aas
jmp
and
dec
push
popf
dec
sti
shrb
fs
rclb
pop
sti
es
scas
xor
enter
sub
loope
inc
dec
scas
test
aad
mov
mov
loope
lock
mov
xchg
sbb
xchg
adc
ja
mov
shlb
icebp
lods
mov
mov
or
scas
and
push
fwait
mov
jne
jp
pop
jmp
out
dec
mov
orl
or
xchg
jmp
push
and
mov
mov
add
push
cmp
into
cmp
cli
cmp
cmp
rolb
pop
adc
push
push
add
pop
adc
pop
pushf
sahf
sub
js
lea
jnp
mov
scas
or
imul
adc
push
out
xchg
xchg
out
fs
pop
popf
cmp
and
xchg
ror
lock
xchg
shr
or
lods
push
bound
mov
push
mov
andl
dec
sub
lods
pop
xor
shlb
xor
mov
add
cmc
shl
aaa
ret
mov
adc
aaa
fcmovne
dec
mov
insl
adc
dec
cli
stos
mov
push
add
loopne
sub
jb
mov
cltd
sub
filds
adc
sbb
hlt
xchg
das
pop
rcrl
mov
inc
aad
push
cwtl
xor
push
or
cltd
lods
sub
negb
lahf
xchg
shlb
cs
push
pop
cmp
or
notl
int3
repnz
popf
xor
int
push
mov
test
or
das
lret
add
enter
and
push
xor
lret
mov
faddp
sbb
clc
jle
add
lret
inc
mov
insl
sbb
jge
adc
out
mov
sbb
and
adc
pop
and
or
out
push
clc
sbb
mov
scas
lret
xor
mov
aam
bound
xchg
fiadds
dec
lock
insb
test
scas
divl
xchg
sub
jmp
add
cltd
jb
xlat
sbb
sbbb
fwait
inc
fists
mov
and
outsb
xchg
je
sbb
inc
push
sbb
mov
not
mov
xor
push
call
and
xlat
mov
push
mov
dec
xchg
xor
cmp
lret
out
shlb
mov
out
lcall
addr16
push
jecxz
mov
sbbl
xchg
hlt
push
jne
mov
insb
das
daa
fs
push
sbb
daa
sbbb
push
xchg
pop
push
in
outsl
dec
enter
mov
sbb
lret
dec
sahf
inc
xchg
xor
jp
repnz
push
pop
or
pop
aam
aad
adc
sbb
aaa
mov
and
iret
movsl
enter
loope
int
pop
or
add
add
out
mov
fidivs
daa
imul
mov
sbb
fs
stc
repz
loopne
cli
cmp
xor
mov
pusha
popl
dec
xchg
icebp
xor
xchg
test
push
ss
fsts
stos
cltd
test
pop
xlat
cwtl
jmp
cmp
jne
lret
into
cmp
and
cld
or
pop
mov
xchg
pop
and
aad
paddsb
sub
and
ja
mov
push
dec
push
inc
or
roll
ljmp
add
or
mov
adc
mov
xchg
add
inc
cli
out
push
and
add
mov
sub
les
out
aad
es
outsb
mov
sbb
shll
cmp
fmuls
jecxz
push
nop
dec
push
mov
scas
scas
push
aas
pop
inc
cmc
es
pop
inc
cs
cwtl
xchg
cmc
xchg
pop
lea
jnp
test
mov
pop
dec
rolb
iret
inc
xlat
aad
mov
mov
cmp
dec
pop
pop
mov
push
mov
cmp
mov
xor
mov
xor
pushf
jecxz
xchg
inc
push
and
sbb
pop
dec
out
pop
mov
xor
and
push
mov
insl
xchg
imul
dec
xchg
es
mov
sbb
insb
repnz
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
sti
jne
mov
lock
pop
lods
mov
sbb
fwait
inc
movsl
dec
pop
sahf
das
adc
stos
cltd
xor
stos
inc
add
icebp
push
gs
int
cmp
mov
dec
push
fiadds
inc
js
cmp
in
popa
fwait
cmp
push
sbb
scas
jp
andl
int
mov
cmp
sub
pop
sub
cmp
lahf
or
ds
mov
mov
pop
pop
pop
xlat
adc
lea
or
fisubs
hlt
dec
inc
xchg
out
iret
cwtl
sub
xor
cmp
jns,pt
mov
sar
dec
fstpt
cwtl
xor
hlt
js
jg
mov
sbb
sbb
imul
mov
and
rorl
push
addr16
aam
out
mov
sub
out
in
sbb
inc
xchg
inc
mov
jp
or
adc
xchg
ret
push
inc
and
adc
in
mov
jecxz
dec
movsl
dec
adc
out
xchg
and
sub
add
mov
movsl
mov
inc
stc
adc
inc
jo
pop
push
mov
inc
out
xor
mov
dec
sbb
jne
outsb
inc
xchg
leave
mov
sbb
fdivrl
dec
and
xor
jns
das
pop
sbb
and
orl
jl
data16
push
je
sarl
lea
ss
sbb
mov
inc
inc
lret
loopne
sub
push
sbb
stc
pop
insb
addl
in
mov
into
insl
subb
pushf
sbb
rsm
push
test
out
and
xor
mov
push
test
movsb
cmp
int
and
add
jmp
imul
dec
aad
mov
inc
pop
ss
jno
or
pop
iret
mov
sbb
inc
cld
mov
sarl
addr16
dec
and
xlat
push
mov
repnz
sub
leave
dec
movsb
iret
dec
xlat
outsb
jg
cmpsb
xchg
or
pop
sbb
fdivl
movsb
hlt
mov
push
jbe
cmpsb
flds
cltd
mov
rol
loopne
push
xchg
cmpsl
sub
push
xchg
arpl
bound
push
push
mov
in
sub
xchg
and
mov
subb
fsubr
mov
fnstenv
rorl
mov
call
sub
sub
cmp
mov
push
ss
mov
arpl
loop
jae
and
ret
fisubl
inc
cmp
push
pop
ljmp
pop
sub
push
gs
xchg
sub
inc
shlb
in
aad
lcall
sbb
sbb
push
adc
sti
pop
cmpsl
mov
pusha
clc
in
lahf
outsb
sbb
gs
push
sbb
aam
inc
daa
js
mov
dec
add
frstor
jge
pop
inc
cwtl
cwtl
imul
inc
sub
or
in
push
xchg
ljmp
imul
xchg
lret
sarl
psubw
cmp
cld
adc
test
fwait
pop
xorb
lcall
jns
pop
mov
inc
pushf
scas
aam
dec
arpl
ret
mov
sbb
outsl
xor
push
jae
dec
into
xor
push
daa
sub
mov
push
popa
sbb
xchg
push
cmp
mov
jno
out
dec
and
pop
andl
dec
andl
pop
or
stos
mov
repnz
punpcklwd
adc
mov
mov
xchg
and
into
outsb
xor
or
sbb
push
fadd
pop
test
std
add
sbb
cmpsb
cmpsl
test
out
sbb
mov
das
xchg
movsl
push
or
sbb
divl
push
mov
xor
dec
lret
dec
outsb
or
enter
and
pop
xor
cmc
jge
dec
push
mov
pop
cmp
jecxz
stc
xchg
pop
cltd
push
mov
dec
xchg
pusha
jg
aam
mov
mov
or
adc
jbe
jne
inc
lahf
movsb
dec
cmpsb
adc
out
test
js
cmp
ja
pop
or
test
push
dec
dec
add
xchg
mov
jge
movsl
xor
mov
outsb
cli
insl
xchg
cmpsb
sub
leave
clc
call
adc
xchg
mov
icebp
push
ror
mov
add
cmp
cmp
push
iret
les
push
loopne
jb
pop
cld
leave
or
xlat
mov
inc
dec
push
stos
cli
cld
ss
pop
test
pop
xor
adc
mov
sbb
lahf
push
out
insl
push
lods
mov
jmp
inc
adc
add
jae
mov
dec
mov
in
idivl
mov
xlat
cmc
hlt
and
jns
outsl
daa
and
fs
cld
lcall
or
adc
pop
mov
push
subl
mov
leave
and
sbb
lcall
adc
lods
xchg
push
jecxz
lahf
test
cmp
in
test
jb
popa
mov
mul
mov
mov
clc
movsb
fidivl
push
clc
mov
jg
xchg
mov
iret
xchg
sbb
jle
test
add
addb
or
xor
sub
inc
ja
xor
dec
or
roll
xchg
inc
into
test
dec
add
lods
jo
sub
push
fdivrl
pop
test
cmpsl
pop
jbe
mov
or
lret
mov
and
mov
hlt
jle
cmp
int3
dec
cmp
push
movsb
sub
jb
xlat
int
lock
adcl
xor
mov
loope
lock
jo
ret
ss
in
jno
mov
popa
mov
imul
insl
lds
je
cmp
inc
jno
jecxz
insl
movsb
sbb
lods
inc
or
lea
fimuls
mov
pop
fsts
adc
imul
cli
adc
sub
in
xchg
add
dec
fildl
nop
lahf
dec
adc
sti
push
adc
mov
roll
cmpsb
ret
int
pop
into
dec
mov
cwtl
add
lret
push
and
cmp
adc
movsb
jl
cltd
mov
out
and
jge
pop
sbbl
push
aad
clc
out
push
mov
mov
popl
inc
int3
sbb
mov
outsl
lods
pop
mov
pop
adc
pop
adc
sbb
pop
lock
cs
std
lds
fsub
test
or
cmp
push
sar
orb
je
aaa
scas
xlat
dec
or
cmpl
pop
jl
jmp
mov
jmp
aam
adc
inc
cmp
adc
movsl
dec
ret
jb
or
xadd
push
jo
and
fisubl
or
in
andl
jmp
push
lcall
add
and
insb
movsb
mov
xor
popa
sbb
xor
mov
je
into
cmp
xchg
stc
sbb
sub
fcmovnb
xchg
sahf
push
add
cmpsb
dec
add
in
mov
cmp
mov
fimull
add
mov
int3
inc
push
aas
negl
repz
sub
jo
lahf
mov
sub
pop
sbb
sbb
jmp
in
icebp
jg
call
jb
mov
iret
ljmp
mov
stos
add
xchg
jns
lahf
mov
mov
or
aam
lds
mov
cmp
push
or
in
outsb
gs
div
outsb
test
inc
stos
mov
sbb
cmp
or
icebp
inc
arpl
xor
bound
hlt
mov
out
cmp
sbb
jnp
mov
mov
pusha
stos
cmp
xlat
cs
sub
add
dec
data16
adc
cld
push
add
push
mov
out
outsb
and
mov
jns
iret
inc
rorb
adc
cmpsb
push
aas
shll
shr
cmpsl
jne
push
mov
mov
cs
adc
sub
hlt
out
clc
add
push
imul
jl
inc
sub
roll
xor
mov
mov
adc
call
test
or
ffreep
lods
cmp
enter
push
ret
pop
lret
mov
insl
int
lea
xor
sbb
js
pop
add
daa
test
inc
stos
push
xchg
pop
out
stc
mov
test
and
jecxz
popf
jb
push
mov
mov
clc
outsb
ret
or
or
or
scas
ss
mov
lods
jns
jecxz
lret
int
bound
inc
push
jmp
rol
int3
mov
je
and
sub
push
test
inc
outsl
mov
jns
cmp
xchg
cmp
pop
dec
mov
in
aam
xchg
xor
dec
push
sub
outsb
pop
arpl
negl
call
jle
test
mov
aad
mov
gs
nop
nop
push
xlat
and
adc
rcll
arpl
cmp
popa
jbe
or
in
sbb
mov
push
pop
stc
imul
test
pop
xor
iret
push
mov
fwait
mov
lods
jns
adc
sub
or
sarl
pop
mov
jne
sub
adc
repnz
mov
or
pop
add
xchg
push
cs
js
mov
testb
xchg
pop
rolb
mov
subb
add
pop
in
mov
nopl
ret
mov
jo
inc
mov
imul
sub
jne
xor
and
push
and
rcr
adc
push
adcb
pop
out
movsl
or
inc
jno
mov
enter
inc
inc
mov
pop
push
dec
adc
mov
mov
call
std
pop
sub
push
xor
gs
add
in
ret
mov
stos
sub
lock
adc
rorl
imul
mov
inc
xchg
push
inc
sahf
clc
das
adc
jle
mov
mov
out
or
fistl
inc
xchg
push
cli
movsl
cmp
inc
out
out
or
mov
xor
jae
int
mov
inc
pop
push
pushf
sbb
shlb
leave
inc
add
sbb
das
push
mov
fldenv
in
xchg
jae
mov
xchg
push
sti
push
dec
in
jmp
jno
addr16
xor
out
pop
andl
cs
out
jle
out
out
imul
imull
in
add
shlb
xchg
inc
mov
jl
in
and
sub
pop
mov
ja
push
pop
sbb
cmp
push
push
and
jns
std
shlb
loope
test
and
cwtl
mov
jne
test
jb
lods
into
aad
out
inc
fiadds
pop
fmuls
ljmp
mov
or
push
cld
and
mov
mov
cmc
xchg
fcomi
sarb
out
mov
mov
imul
pusha
out
bound
pushf
inc
repnz
push
cmp
loope
pop
add
and
dec
ja
add
mov
push
fadds
xchg
cmp
push
popf
movsb
std
mov
cmp
mov
cli
or
xor
or
lods
xchg
aaa
arpl
and
adc
repnz
push
push
sbbl
push
mov
pop
jbe
xor
mov
std
lds
xorps
aaa
dec
mov
mov
xchg
cltd
mov
push
or
xchg
sbb
icebp
test
mov
cmp
add
test
test
lods
and
call
popa
divb
push
mov
adc
stos
daa
movsl
cmp
sbb
loop
lods
mov
daa
push
les
cmp
lahf
test
adc
dec
cmp
ja
out
outsl
sub
pop
inc
outsl
xchg
or
data16
or
push
jb
int3
call
dec
stos
lods
push
cli
push
push
inc
mov
lea
or
stc
jnp
adc
mov
lcall
jb
lods
jne
sahf
ja
int3
inc
cmp
dec
inc
in
mov
or
push
dec
mov
xchg
imul
pop
adc
adc
nop
push
scas
mov
mov
repnz
add
das
xchg
movsb
jbe
int3
sub
lcall
cmp
stos
adc
add
cmp
and
adc
sti
jne
adcb
test
mov
pop
jns
dec
inc
xor
or
push
push
inc
repnz
and
jp
cmp
rorb
mov
imul
add
xchg
jecxz
subl
jmp
aas
fimuls
dec
xor
pop
push
shlb
cmp
popf
cmp
jge
pop
jne
mov
fists
outsl
mov
push
pop
adc
cs
femms
dec
jne
mov
sahf
dec
aad
mov
jae
cmpsb
adcb
es
adc
and
xlat
pushf
divb
movsl
outsl
sbb
or
pop
mov
jo
dec
ja
ds
lods
imul
stc
xchg
cmp
repz
orl
jae
xor
cmc
jge
dec
push
mov
pop
adcl
push
pop
jb
cmp
mov
fisubrl
push
push
pop
jl
inc
inc
pop
inc
xchg
push
jo
rcll
xor
xchg
jo
stos
movsl
js
stc
pop
cs
mulb
jbe
and
push
fnstenv
rorl
mov
mov
std
add
dec
jns
jl
xor
testb
mov
dec
sti
xor
jl
aam
bound
loope
fcmovne
sbb
adc
and
xor
cmc
jge
dec
push
mov
sbb
clc
aaa
addr16
insb
mov
dec
jg
imul
scas
sbb
in
dec
add
or
inc
call
jo
push
sub
jmp
mov
test
pop
loope
rorb
pop
inc
lcall
adc
pusha
data16
repnz
movsl
shl
jne
fsubr
sub
int
inc
jg
or
insl
mov
mov
mov
rol
rcll
xchg
addr16
xchg
out
mov
clc
fisubrl
lock
or
cltd
sub
insl
sbb
and
pop
inc
jp
mov
push
in
mull
push
push
outsb
push
mov
sub
push
sub
mov
ficomps
mov
arpl
inc
movsl
push
push
cmp
jb
stc
inc
pop
in
add
and
sar
xchg
pop
aaa
test
xchg
stos
out
and
leave
test
repz
fnstsw
cmp
enter
sbb
jns
push
mov
sub
xchg
sti
jecxz
pop
loopne
adc
or
push
push
mov
in
sub
xchg
and
mov
pusha
sub
xchg
jge
push
lret
fs
cmc
pop
test
lret
add
and
call
in
aam
and
fwait
dec
mov
fidivrl
nop
ss
mov
ja
xor
pop
add
cmp
jae
pop
mov
and
xor
dec
push
out
daa
mov
inc
jne
mov
rol
rcll
xchg
addr16
xchg
out
sbb
jne
repz
xchg
jae
stos
dec
pushf
xchg
imulb
sarl
jb
dec
or
out
daa
push
adc
push
dec
xchg
mov
ljmp
xlat
popf
loopne
push
and
cmp
mov
in
xor
mov
jo
aaa
arpl
insb
xor
or
lret
push
fxch
sbb
mov
ret
hlt
aam
fistps
and
outsl
push
xor
pop
testb
mov
scas
fsubrl
fistps
iret
mov
leave
das
inc
inc
sahf
or
jmp
jne
pop
sbb
mov
js
test
mov
and
push
jle
and
add
iret
bound
push
cmp
testb
sbb
outsl
jne
int
inc
out
add
mov
insl
aad
insb
mov
xlat
inc
or
xor
addb
popa
cmp
aam
fnstcw
fidivs
xchg
ljmp
or
inc
cmp
lods
sub
sub
pmulhuw
fsubrl
dec
mov
push
push
rorl
cwtl
inc
mov
rorl
mov
adc
jle,pt
xchg
ds
add
enter
mov
lds
rclb
outsl
cli
ss
shlb
cmpsl
or
or
inc
cmc
fidivl
in
sub
aaa
mov
xlat
aaa
jbe
jp
in
sub
push
or
adc
js
cmp
cltd
and
fs
test
and
out
lds
xor
ret
xlat
pop
pop
movsl
cs
adc
sub
mov
mov
lea
fs
imul
je
daa
mov
sahf
push
shr
aad
add
int
scas
jl
xchg
notl
into
in
add
dec
insl
repz
icebp
jo
out
dec
rol
cmp
loopne
mov
ljmp
cmp
dec
addl
pop
xchg
out
push
int
cmp
stos
ja
subb
rcrb
shlb
pop
int
ds
push
aas
das
call
fs
ret
gs
cli
cltd
sbb
or
in
sub
xor
fstps
mov
xor
call
cmp
mov
mov
adc
test
lea
lods
std
dec
les
sub
sub
dec
es
roll
gs
ja
in
or
or
jmp
test
clc
sbb
ss
popf
pop
push
cmp
push
iret
push
jo
mov
idivb
or
jo
icebp
sbb
cltd
fs
xlat
loop
mov
jno
rcr
subl
cli
int
adc
aad
fmul
mov
cmp
ret
imul
sbb
mov
inc
ret
mov
ss
jo
idivb
nop
pop
or
jne
addr16
cmp
mov
cwtl
scas
pusha
lods
cmpxchg
sbb
aas
pop
div
jae
icebp
push
and
test
cmpsb
sub
jmp
andb
aaa
sbb
mov
jbe
or
lret
ja
adc
xchg
mov
stc
mov
je
scas
mov
push
push
jge
andb
jg
and
add
outsl
dec
xlat
in
movsb
pop
jbe
xchg
mov
fstps
fs
mov
push
aam
xor
jg
pop
lahf
pop
movsl
leave
outsl
mov
fucomp
mov
and
clc
popf
in
or
jb
mov
mov
mov
mov
xor
jl
testb
adcb
ja
xchg
mov
loop
and
xchg
ljmp
in
imul
stos
outsb
push
adc
cmp
and
pop
inc
add
mov
sarb
ret
into
loop
xor
push
cmp
arpl
fisttpl
scas
test
stos
jnp
in
cmp
pop
cli
cld
clc
pop
sub
inc
cmp
mov
mov
and
sub
mov
inc
xor
dec
mov
lods
add
fildll
and
jo
outsl
lds
pop
xor
scas
mov
data16
sbb
outsl
xchg
pop
rcll
ja
cmp
dec
push
daa
stos
pop
push
out
xchg
inc
and
xor
xor
add
xchg
in
mov
inc
pop
pop
repnz
dec
les
lock
jnp
std
push
out
lds
adc
xchg
and
in
lods
testl
incb
adc
xchg
bound
sbb
push
out
mov
push
fstl
jb
sub
mov
inc
jecxz
or
inc
inc
jle
scas
dec
add
pop
adc
fdiv
sub
ljmp
fwait
int3
pop
xor
jge
shrl
push
dec
cltd
or
push
pop
or
push
ds
loope
xchg
push
insb
inc
lds
and
jle
dec
dec
jecxz
pop
mov
icebp
jo
lods
cli
mov
loope
movsl
cmp
jmp
mov
cld
lret
enter
mov
neg
outsb
xchg
or
das
icebp
sbb
leave
pusha
dec
xor
fcmove
xchg
call
jbe
fs
or
adc
fdiv
sub
push
jne
fwait
int3
pop
xor
jge
sarl
mov
dec
push
pop
or
outsl
push
cmp
xor
mov
fstpt
loopne
dec
jecxz
pop
mov
icebp
jo
lods
cli
mov
pop
push
lock
cmpsl
push
out
dec
mov
fiaddl
add
jl
mov
neg
adc
mov
loope
out
mov
adc
ret
jecxz
mov
jl
stos
lock
push
push
fnstenv
iret
in
or
dec
push
mov
or
sbb
xlat
stos
mov
addb
cmc
mov
repnz
jmp
sbb
andb
add
in
and
ss
movsl
xchg
mov
push
into
rorl
push
fsubs
fwait
jne
stc
cmp
retw
dec
std
out
into
cmc
sbb
cmpsb
xchg
fwait
shlb
ds
fisubrs
pop
mov
or
sbb
fsubs
out
xor
fcomps
cmp
mov
push
adc
loope
and
sbb
jecxz
sub
adc
push
pop
cmp
imull
jnp
dec
js
push
xchg
loopne
pop
test
ja
bound
pop
add
stos
orl
stos
mov
daa
insl
iret
mov
jbe
push
pop
add
cmp
aad
fstps
add
xchg
movsl
es
rcll
mov
mov
lahf
jge
lock
mov
arpl
jmp
push
push
jmp
push
mov
cmpl
jo
dec
imul
in
cmp
and
inc
ret
cmp
or
in
movsl
popf
std
mov
icebp
iret
into
mov
je
lcall
push
mov
clc
pusha
cmp
out
dec
and
and
loopne
add
fsubrp
fidivrs
insl
lcall
sub
adc
insl
fdivrl
gs
mov
ret
dec
sbb
iret
cwtl
lods
and
mov
push
imul
inc
les
imul
mov
sub
mov
jne
push
xchg
jae
std
movsl
or
cmp
push
xchg
mov
jns
shr
loopne
and
add
lahf
les
lods
es
and
pop
sbb
cld
lea
inc
shr
pop
aaa
mov
xlat
mov
and
jg
cmc
in
cmpb
lret
xchg
lahf
add
mov
xchg
testb
jge
mov
aaa
xchg
or
data16
rol
push
mov
je
xor
out
fidivrs
insl
lcall
movsb
fxch
or
ljmp
fdivrl
gs
push
js
mov
roll
xor
cwtl
lods
and
mov
push
imul
int
inc
loop
stos
imul
sub
xor
adc
les
or
and
popf
sti
test
sbb
mov
sub
ffreep
mov
punpckhdq
adc
jg
insl
fildl
divb
push
mov
pop
adc
out
xor
sbb
mov
sti
adc
adc
cwtl
inc
cmpsl
mov
arpl
lret
xor
icebp
xchg
insb
pushf
call
mov
insb
jecxz
sti
mov
enter
xor
and
cmp
sahf
ret
mov
mov
pop
dec
push
pop
jge
and
pusha
pusha
adc
add
into
mov
xchg
into
inc
xchg
ret
fildll
xor
orb
das
rcr
aas
dec
popf
mov
mov
push
inc
mov
enter
xor
and
cmp
enter
jecxz
enter
push
jbe
xor
inc
xor
fcomp
enter
int
testb
jle
fadds
in
leave
dec
mov
out
dec
test
aad
ret
inc
test
out
fisttps
sbb
fsubrp
icebp
test
jle
insl
fistpl
inc
and
dec
add
int3
repnz
cmp
popf
mov
mov
xor
lret
jmp
imul
sub
jnp
es
insb
loopne
mov
js
xorb
or
cmp
cmp
fisttpl
adc
adc
inc
mov
add
pop
imul
xchg
jle
xor
mov
dec
push
rcl
adc
xor
push
insb
dec
mov
imul
stc
fldl
sbb
cmp
imul
test
cmc
push
sbb
push
mov
jp
test
pop
xchg
or
add
push
sub
push
iret
arpl
test
test
iret
xchg
cmp
popf
sub
out
test
test
in
and
dec
gs
outsb
lret
int
push
loope
out
ss
fsubrs
aas
je
into
cmp
mov
lock
xor
dec
imul
bound
mul
scas
xchg
lock
push
or
pop
test
pop
pop
or
push
sbb
cmpsb
inc
aaa
inc
mov
outsb
xor
mov
and
sbb
das
mov
bound
inc
xor
fwait
add
fs
push
iret
xor
pop
jno
xchg
mov
gs
and
mov
cmpsb
loope
pop
stos
mov
stos
addr16
loopne
xchg
iret
rol
dec
ss
fldl
aaa
pop
fs
pop
mov
mov
mov
pop
loope
push
stos
and
roll
push
shlb
subb
test
dec
loopne
outsb
xchg
and
lret
pop
dec
add
shlb
push
mov
xchg
cmp
xchg
mov
xchg
data16
xchg
lcall
out
mov
adc
jo
add
adc
loopne
or
rorb
pusha
xlat
adc
int
pop
flds
cltd
mov
rol
lods
jnp
cmp
add
roll
in
aad
lcall
jp
pusha
dec
mov
pop
add
cmp
std
xchg
push
push
mov
mov
sti
mov
or
pop
pop
xchg
dec
ljmp
movsb
fwait
mov
xor
adc
xchg
jne
push
push
loop,pt
rcr
ret
mov
nop
pop
sub
fmull
js
sbb
movsb
in
adc
xchg
mov
test
inc
pop
gs
fldcw
sbb
cs
mov
div
imul
sbbb
and
mov
mov
les
cltd
clc
inc
add
aas
repz
add
shlb
or
out
lcall
out
cmp
inc
and
fadds
cltd
rep
mov
jne
mov
aas
pop
pop
jle
add
and
pop
jbe
sbb
jmp
sub
xor
push
out
xchg
test
sub
out
pop
mov
or
cmpb
movsl
fwait
dec
xchg
leave
cmp
cmp
push
lods
push
idivl
adc
sbb
jmp
or
or
add
enter
rorb
mov
lods
xor
xor
lahf
mov
aad
inc
push
adc
jl
cmp
arpl
aad
ret
fildll
xor
orb
push
inc
cmp
into
xchg
sbb
shl
xchg
aad
out
xchg
cmp
xor
or
roll
pop
or
test
inc
cltd
fisttpl
popa
in
jae
add
in
fs
jg
pusha
movsb
xlat
in
pushf
out
pop
mov
call
int
dec
pop
xchg
sub
inc
sub
lds
pushf
out
pop
mov
mov
inc
push
inc
int
dec
pop
xchg
sub
in
aam
das
ficoml
call
mov
mov
push
jmp
incb
lea
adc
dec
dec
ss
pop
imull
fldenv
mov
mov
std
int3
loop
push
and
push
mov
fnstcw
call
test
adc
adc
sbb
mov
sbb
add
push
imul
push
pop
in
push
ds
sub
sub
scas
gs
cmpsb
jl
jle
inc
loop
stos
imul
sub
xor
adc
les
or
cltd
push
dec
cld
incl
ffree
loop
dec
dec
or
sub
ffreep
mov
cmp
sbb
jecxz
mov
fiaddl
sbb
xchg
and
push
mov
pop
adc
out
xor
push
or
adc
adc
cwtl
inc
cmpsl
mov
arpl
lret
inc
imul
iret
jo
aaa
xchg
cli
in
es
cltd
sbb
ja
pop
in
test
movsb
mov
xor
call
outsl
inc
push
mov
add
pusha
in
daa
push
pushf
fiaddl
shlb
in
aad
lcall
scas
daa
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
dec
fldenv
stc
pop
jecxz
xor
inc
xlat
cmp
stos
fsubrs
loope
test
mov
xor
rcr
sbb
arpl
aaa
or
cmc
xor
leave
pop
xchg
inc
mov
lods
xor
sub
out
or
cmp
xchg
aas
cli
sbb
adc
cwtl
sbb
inc
les
lods
scas
mov
and
lds
aas
adc
pop
jnp
sub
mov
xchg
xchg
jmp
std
popf
sub
cmp
lsl
pushf
mov
rcrb
sub
sub
mul
or
movsb
jbe
imul
sub
insl
pop
ret
stc
and
sbbb
mov
out
xor
dec
cld
mov
test
add
insb
popl
and
pop
mov
push
aaa
fwait
in
pop
push
out
mov
xchg
scas
mov
pop
add
adc
std
enter
lcall
ljmp
pop
mov
dec
jl
out
and
jno
xlat
imul
dec
cwtl
cmpsb
xor
jmp
aaa
fwait
in
pop
push
cli
push
ds
mov
push
inc
sub
cltd
mov
fldl
imulb
cs
out
xchg
rcr
out
xchg
cltd
fsts
enter
shlb
das
cmp
mov
xchg
mov
imul
pop
les
dec
leave
pop
sub
sbb
mov
sbb
stos
pop
mov
call
test
cwtl
out
xchg
or
pop
xchg
outsb
pop
and
sbb
sub
out
dec
jbe
test
clc
movsb
mov
cld
loop
scas
cmp
mov
jge
fwait
xchg
jmp
stos
rorb
sub
xchg
and
mov
jp
or
push
mov
cs
mov
xchg
bound
push
pop
pop
loopne
dec
iret
push
cmp
mov
imul
cltd
jle
dec
pop
je
insb
stc
dec
jle
jle
push
add
fidivrl
inc
ja
fcomp
xor
mov
mov
mov
push
xlat
sub
int
cli
shll
shll
in
jg
adc
xchg
mov
mov
subl
pushf
aas
cld
negl
xchg
fmul
jnp
mov
in
loopne
push
xchg
data16
push
mov
push
push
stos
lahf
pop
xchg
mov
pop
lret
jmp
inc
outsb
cli
insl
xchg
cmpsb
sub
pop
xchg
adc
dec
mov
sub
lock
push
cltd
xchg
sub
in
or
jle
cmpsb
add
jmp
loop
pusha
cltd
pusha
xlat
bound
jecxz
sub
xor
pop
xor
jbe
mov
push
call
jge
cmpsl
sti
scas
or
pop
xor
jbe
imul
and
int3
sub
push
mov
cmp
jg
xchg
adcl
xor
lods
dec
mov
sub
pop
mov
je
sbb
out
cmc
aad
inc
cli
repz
test
into
jno
xor
mov
xor
adc
in
cli
inc
ljmp
popa
fst
rolb
sbb
pop
push
sahf
push
push
or
and
lods
test
dec
shlb
ljmp
cwtl
push
movsl
adc
push
arpl
inc
cwtl
pop
cmpl
mov
mov
adc
jecxz
dec
sbb
and
cmp
addr16
or
addb
or
mov
loope
aam
sub
popa
pop
cmp
cmpsb
fsubrs
pop
xor
adc
repz
std
dec
ret
lret
adc
outsb
xlat
movsl
nop
adc
mov
iret
and
adc
in
inc
mov
add
insl
gs
fbstp
inc
cmp
aas
hlt
shll
mov
xor
popf
stos
pop
dec
call
pop
das
cmp
push
add
call
je
push
fisttps
hlt
sbb
and
jp
insl
icebp
push
jmp
xchg
jne
jae
xchg
andl
jo
rcl
mov
fldl
lcall
test
push
sahf
sub
jl
pop
push
testl
das
sbb
sti
pop
sbb
xor
dec
xor
out
push
pop
test
sbb
add
pop
sahf
cmpsl
aam
jo
push
ljmp
test
int3
or
ss
mov
outsl
bound
cmpsl
shll
shlb
popf
mov
jmp
push
nop
adc
fsubrl
pop
loopne
inc
lock
into
ds
cmp
sbb
lahf
orb
repz
sahf
xchg
ja
mov
lock
in
ficoml
pushf
ficomps
xchg
xchg
push
jp
loope
shrb
subl
jns
sub
dec
inc
mov
lods
pop
mov
fnstcw
add
in
cli
insl
xchg
cmpsb
sub
pop
xchg
adc
add
jle
xor
imul
cmp
push
outsb
iret
nop
or
repz
fs
js
dec
fcmovb
pop
push
icebp
mov
mov
cmp
incl
orb
inc
xchg
icebp
imul
aas
ficoml
adc
ja
mov
adc
inc
sbb
into
pusha
xor
sbb
mov
test
mov
outsb
shll
pushf
out
sti
test
or
xchg
push
cmp
fidivrs
hlt
loope
jp
jge
push
push
pop
jecxz
popa
repz
xchg
sub
adc
adc
mov
inc
movsl
clc
mov
pop
jns
pop
je
xor
hlt
mov
popf
mov
in
out
jo
mov
sahf
test
out
xor
loopne
xor
or
cli
dec
add
pusha
inc
cwtl
mov
pop
dec
test
and
or
push
cmpsb
cmpsb
dec
pop
loope
iret
sbb
cmpl
idiv
jmp
jge
push
jne
pop
enter
orb
ja
lea
sahf
add
or
jb
ljmp
mov
or
pop
cld
dec
push
sti
mov
dec
inc
out
xor
sbb
out
test
adc
adc
push
lock
pusha
outsl
out
lds
nop
xchg
push
cmp
push
mov
mov
loope
inc
lds
and
cmp
scas
test
imul
stos
dec
into
outsl
pushf
add
lock
repz
xchg
out
out
lahf
sbb
mov
les
jae
sub
flds
sub
adc
cmpl
stos
jmp
sub
push
cld
or
mov
ficoml
icebp
xor
xor
jnp
pop
push
ret
popa
inc
cli
dec
jge
jno
sti
xor
mov
mulb
iret
out
add
ret
sbb
test
test
lea
mov
add
sahf
mov
lret
dec
jge
cmp
cmp
cmpsl
and
stc
mov
jns
push
jl
icebp
jl
iret
inc
sbb
mov
fimuls
sbb
sub
jge
cmp
sbb
out
mov
shrb
das
xchg
mov
call
ja
xchg
push
cmp
mov
add
push
adc
cwtl
sbb
pop
xchg
push
pop
push
inc
fnstcw
add
pop
fldt
and
into
jne
cs
outsl
xor
cmp
dec
mov
sbb
push
mov
enter
loopne
pop
test
push
xlat
jge
repnz
pop
outsb
sub
jne
out
les
jo
or
mov
loope
inc
rclb
movsb
pop
push
push
sti
clc
cs
scas
popa
les
xlat
lods
push
shrb
mov
insl
pop
dec
imulb
mov
int3
iret
mov
in
pop
mov
stos
mov
clc
aad
xchg
mov
enter
test
or
xorb
jle
not
push
pop
adc
add
in
outsl
adc
loopne
cmpsb
icebp
nop
lock
dec
insl
mov
xor
pop
cld
loope
jecxz
mov
xor
xchg
sti
and
xchg
adc
dec
dec
adc
sub
rcr
dec
into
roll
adc
mov
add
sub
sarb
xchg
sub
xchg
into
loopne
test
fwait
out
mov
rorl
cltd
insb
add
inc
mov
cmp
lods
or
in
mov
lock
pop
addb
ret
enter
stos
out
into
in
mov
mov
sbb
and
pop
mov
push
fbld
xchg
pop
and
xor
jg
ficomps
lods
and
popf
mov
jp
shrl
test
sub
insl
nop
push
mov
test
data16
and
movsl
repz
insb
mov
sar
mov
leave
push
adc
je
mov
out
xchg
in
mov
dec
lret
imul
and
push
cmpsb
sbb
inc
xor
pop
mov
xchg
hlt
sbb
and
jp
insl
icebp
push
jmp
xchg
jne
jae
xchg
andl
jo
loop
inc
mov
jno
icebp
xchg
mov
pop
je
xor
movsb
ficoml
xchg
es
adc
div
or
dec
int3
or
or
movsb
bsf
push
cmp
in
aad
lcall
lret
xchg
sub
mov
cmp
mov
xchg
pop
psubusb
ds
xor
movsl
sahf
add
aas
push
sbb
mov
movsl
mov
push
stc
xchg
xchg
in
rorb
ds
clc
xlat
lods
add
sub
fisttps
mov
xor
cmpl
fdivrp
push
sub
and
mov
aad
adc
icebp
decl
popf
ja
out
mov
xchg
idivl
iret
or
xor
pop
push
xchg
pop
cmpsb
jns
pop
je
xor
push
into
add
rcrb
fwait
push
push
add
in
addr16
mov
xor
aaa
int
jg
sbb
outsb
dec
faddp
or
lea
dec
int3
push
aas
mov
test
ret
push
jmp
sub
or
leave
lods
fdivrl
mov
xchg
dec
das
addb
es
fs
xlat
lods
fdivrl
lea
cmp
ljmp
inc
push
mov
icebp
mov
rcll
lods
into
inc
jmp
mov
ljmp
popl
cmp
xchg
sub
mov
xchg
imul
mov
mov
fisttpl
in
call
rcrb
out
test
idivl
mov
xlat
xchg
ret
hlt
or
xor
jb
int3
mov
sarb
fwait
push
sarb
mov
leave
lds
or
jge
inc
std
lahf
sub
mov
or
push
icebp
cmp
leave
mov
dec
xchg
cs
and
xor
xchg
mov
lret
pop
jo
and
pop
sahf
mov
sub
icebp
notl
lret
loope
dec
rolb
fwait
test
cld
cmpb
dec
jecxz
popf
stos
add
and
xor
cmc
xchg
jmp
insl
push
insb
add
xchg
mov
pop
je
xor
les
loop
stos
inc
mov
xchg
pop
lcall
movsl
pushf
xchg
ja
imulb
outsb
mov
xchg
fcomps
in
shlb
pusha
xchg
mov
pop
mov
mov
xlat
mov
mov
jg
inc
inc
push
mov
mov
shlb
jmp
xor
shlb
mov
iret
shlb
dec
push
andl
mov
xor
mov
out
cmp
out
in
idivl
mov
xlat
xchg
iret
sti
add
push
push
push
jns
push
idiv
jg
clc
sbb
ret
imul
sub
mov
je,pn
jp
jle
xchg
pop
jg
fs
sub
push
mov
adc
es
xchg
or
and
outsl
and
je
pop
cmpsb
imul
mov
dec
inc
dec
cmp
jno
gs
sub
pop
lcall
fidivrs
or
mov
xchg
inc
inc
cmp
push
cmc
flds
xor
inc
in
loopne
pop
insb
outsl
xlat
bound
xor
sbb
mov
stos
push
pop
sarl
cmp
aas
pop
mov
jl
test
push
pop
sarl
cmp
mov
xchg
ljmp
inc
sbb
outsb
out
sahf
sbbb
add
and
pop
dec
xchg
repnz
pop
sub
push
aaa
fldt
push
js
lret
aam
pop
or
and
mov
adc
push
ss
les
pop
insb
or
idivl
aad
sbb
or
insb
jne
jne
mov
gs
sub
addl
inc
fwait
aad
pop
add
lret
je
fdivrl
popa
lcall
and
push
mov
movsb
mov
jg
and
push
xchg
adc
shlb
pop
cmp
fsubrl
cli
scas
insb
pop
mov
jmp
push
push
and
cmp
pushf
dec
or
push
push
add
in
and
test
into
jno
xor
mov
xor
or
jle
mov
pop
fiadds
loopne
xchg
lods
push
dec
insb
loopne
jmp
test
idivl
mov
xlat
aas
mov
sbb
in
mov
sar
std
mov
sti
mov
cmp
addr16
ret
int
cmpsb
mov
mov
test
xchg
rcrl
cmpb
pop
pop
sub
pop
insl
xor
imul
stos
inc
rorb
in
push
rorl
arpl
pushf
dec
lock
insb
mov
das
pop
dec
aam
mov
iret
jne
pop
push
jle
in
pop
fcoml
scas
push
sarl
arpl
xchg
into
loopne
test
cld
popa
imul
add
fstl
iret
int3
mov
std
pop
insb
outsl
xlat
bound
mov
pop
mov
adc
mov
sub
call
iret
xorb
pop
movsl
dec
outsb
cli
insl
xchg
cmpsb
sub
dec
imul
fldcw
pop
iret
int
mov
and
fwait
bound
fists
lds
or
lods
test
idivl
mov
xlat
sbb
mov
scas
push
shlb
jge
adc
jne
pop
push
shr
data16
js
shlb
mov
cmp
mov
lret
lahf
movsb
mov
push
cmp
push
mov
ss
icebp
push
daa
ds
dec
mov
hlt
or
in
data16
pop
pop
lahf
and
cmp
sbb
subl
scas
inc
pop
or
daa
lahf
je
sub
mov
add
cmp
inc
jmp
jb
jbe
out
dec
mov
aad
pop
mov
sahf
lret
fldl
mov
es
cmp
psubusb
mov
mov
subl
nop
ret
cmp
push
pop
cwtl
dec
cwtl
push
inc
shll
sti
mov
mov
pop
add
xchg
sbb
fs
addr16
or
cli
push
adc
movsb
sub
dec
jp
xor
xor
subl
fldcw
mov
pop
shrb
cmp
lret
lcall
pushf
push
loop
aaa
stc
iret
mov
aam
jnp
in
jg
and
imul
in
xor
popa
andb
mov
dec
xlat
andb
xchg
cmp
mov
xor
xor
out
into
xchg
movsl
xor
aaa
inc
pop
test
mov
xchg
fsubr
decl
mov
pusha
daa
cli
xchg
inc
das
test
je
inc
pushf
mov
sbb
out
aam
mov
jp
mov
mov
lock
xor
sarl
xor
or
popa
shrl
dec
out
fcoml
hlt
stos
ja
pop
push
mov
jle
leave
pusha
repz
add
xor
stc
scas
jne
insb
mov
add
sbb
imul
xchg
mov
testb
pop
iret
rcll
xchg
jecxz
into
pusha
dec
in
sub
push
xchg
xlat
jg
and
rcrl
outsl
aam
jle
pop
test
pusha
jg
sub
mov
enter
cmpsb
push
xchg
call
test
sti
mov
push
mov
out
xor
inc
jae
add
adc
sbb
push
jne
xchg
mov
iret
js
cld
jb
mov
cmpsb
out
xlat
push
fcmovu
lods
mov
or
aad
jecxz
xor
dec
pop
cs
outsl
adc
lret
out
dec
xchg
pop
jnp
mov
out
repnz
xor
movsl
push
push
jg
hlt
add
arpl
xchg
call
mov
sub
fldcw
pop
repz
sub
lods
mov
test
loope
dec
pop
daa
arpl
push
incb
pop
incb
call
inc
bound
pop
push
lods
call
cmc
push
pop
pop
shlb
call
cwtl
push
sbb
dec
adc
movsb
mov
in
imul
int3
repnz
sarb
push
jl
pusha
dec
fmuls
js
mov
cli
mov
dec
sarb
mov
fwait
mov
shl
dec
fadd
sub
push
mov
inc
mov
sahf
inc
insb
int3
pop
cld
mov
sub
outsb
cmpl
iret
xchg
fsubp
jno
and
jge
sub
out
cwtl
stos
fsubrs
in
mov
fisttps
test
jb
push
movsb
shrl
rcr
test
test
mov
cs
popf
das
fs
xchg
fists
loopne
ds
in
mov
test
lock
fsubrs
or
sbb
in
aad
adc
dec
mov
cmpsl
jl
and
xchg
lock
inc
orb
mov
adc
mov
int3
sbb
or
add
jl
mov
fists
add
mov
lods
dec
cwtl
jae
push
xlat
dec
mov
cmp
cmpsb
xchg
jnp
daa
out
push
push
jne
adc
mov
jmp
push
cmp
adc
and
xchg
sbb
dec
push
imul
jae
mov
test
bound
xchg
or
sbb
and
mov
inc
mov
jno
mulb
mov
pushf
imul
test
lods
jge
scas
push
insl
mov
in
jb
jns
sub
int3
and
rcr
sbb
scas
inc
enter
inc
arpl
cmp
test
bound
or
arpl
scas
aam
dec
arpl
xchg
mov
stos
inc
adc
notb
jns
call
jo
hlt
cmpsb
das
out
push
inc
jae
fistps
jecxz
pop
insb
mov
sbb
inc
adc
xlat
inc
es
faddl
jo
das
push
aam
add
dec
mul
add
push
lods
cs
jle
push
dec
cld
movsb
fs
test
ficoms
sbb
scas
cs
mov
mov
mov
inc
push
popa
leave
int
or
pop
xchg
arpl
rolb
push
addr16
cmp
aaa
cs
pop
mov
mov
mov
cmc
out
aas
fcmovnbe
js
fs
xchg
in
dec
into
test
data16
and
pop
and
jne
adc
ret
scas
push
mov
jecxz
pusha
mov
pop
pushf
jbe,pt
cmp
cmc
in
or
std
mov
jo
sbbb
sub
adc
test
movsb
cmp
mov
jmp
sub
rorl
pop
aaa
xchg
push
inc
movsl
adc
movsl
mov
pushw
ds
in
ljmp
clc
rol
mov
dec
movsb
lods
inc
les
pop
xor
iret
lods
sahf
test
nop
add
jbe
sbb
mov
xchg
fsub
popa
push
std
xchg
pop
popf
sbb
jmp
xchg
loopne
xor
and
or
sbb
sbb
xchg
into
loopne
test
inc
push
mov
notl
adc
aas
and
sub
xchg
xchg
mov
cmp
cltd
rorl
lea
mov
insl
jp
inc
ljmp
in
das
test
jp
or
orb
push
push
add
adc
movsb
orl
sub
fdivrp
xchg
repnz
call
jne
dec
scas
dec
lcall
jmp
sbbl
pop
aaa
add
push
dec
fsubrp
ljmp
or
sbb
xchg
sarb
iretw
pop
pushl
mov
iret
test
cmp
out
sti
pop
cmpsb
mov
repz
lods
repnz
jb
jns
pop
je
xor
push
addr16
mov
fimull
shr
or
into
jl
in
adc
adc
sbb
sbb
insb
dec
jns
ds
jb
rclb
sbb
lds
aaa
notl
insb
fisubrs
pusha
or
jne
cmp
inc
and
inc
mov
xlat
in
test
or
mov
sub
push
mov
dec
call
mov
int3
das
aad
das
out
cmp
pop
out
mov
loopne
jge
dec
jbe
mov
subb
mov
std
push
adc
push
out
pop
out
cmp
loop
ret
or
push
dec
or
pop
mov
dec
cmpsl
and
dec
pop
pop
and
jne
adc
lea
push
mov
loopne
push
in
adc
enter
mov
push
adcb
jg
lods
cmp
into
test
data16
and
adc
mov
andb
xchg
leave
pop
push
cmp
js
bound
mov
jl
dec
mov
jns
iret
ljmp
insl
pop
lods
push
xor
mov
in
sarl
pop
loope
mov
popa
lcall
mov
adc
mov
cs
std
or
notb
loopne
jne
hlt
ret
xor
pop
sbb
aaa
aad
ror
out
xor
or
ja
mov
outsl
es
hlt
xor
xor
dec
aas
movsl
xlat
jb
clc
stc
cmp
push
mov
shrb
out
cmp
mov
sbb
push
dec
xor
jge
mov
xlat
inc
adc
push
mov
test
sub
std
lret
mov
xchg
pushf
cmpsl
adc
or
mov
jbe
xchg
loopne
fwait
dec
out
add
pushf
pop
in
inc
mov
lods
pushf
mov
sub
jecxz
cld
ret
pop
fistl
push
mov
and
into
inc
lahf
test
and
repnz
push
jp
cld
mov
pop
jp
adc
lahf
adc
out
pop
inc
jno
je
pop
lods
mov
aam
call
je
pop
ja
aas
pop
inc
cmp
push
mov
cmpsl
sbb
push
lock
push
push
jnp
es
scas
dec
sbb
adc
mov
add
sub
sub
mov
adc
sbb
inc
das
lret
xor
lret
orb
xor
aad
xchg
add
cmp
pop
mov
add
lahf
fldt
popa
mov
flds
sbbb
outsl
jne
push
xchg
dec
rorl
push
xchg
jo
int3
das
stos
and
or
add
sti
dec
mov
push
arpl
mov
inc
inc
scas
jb
or
jno
push
fisubrs
and
jmp
loope
and
mov
or
mov
mov
repnz
icebp
mov
daa
push
pop
stc
insb
xchg
xchg
rcrl
mov
dec
push
or
pop
imul
push
mov
cmp
mov
repz
cmp
mov
push
ljmp
sar
cwtl
imul
aaa
orl
mov
repz
mov
nop
xor
inc
call
cmp
shlb
in
aad
lcall
loopne
mov
cmp
nop
push
cmp
out
mov
pop
popf
add
inc
inc
repnz
adc
imulb
outsb
mov
xchg
fsubrs
fsub
fsubrp
rorl
mov
pusha
xchg
mov
incl
sti
loopne
sub
repnz
sub
mov
rol
test
paddd
jp
xor
divl
cltd
push
or
push
in
dec
mov
clc
ja
cmp
subl
pop
lea
imulb
je
inc
lods
mov
inc
xchg
sbb
inc
jns
gs
stc
mov
test
iret
or
fbld
sbb
mov
dec
jae
and
rclb
sbbl
test
rol
xor
shrb
loop
jne
not
jle
xchg
movsb
aas
push
adcl
inc
push
mov
or
mov
and
pop
mov
xchg
hlt
sbb
and
jp
insl
icebp
push
pop
jmp
lods
or
pop
mov
loope
and
mov
or
mov
cld
rcl
mov
push
rclb
mov
enter
jg
mov
jg
pop
add
je
sbbb
outsl
jne
push
xchg
and
sbb
cmp
sub
mov
addb
rcrb
pop
cmp
subl
pop
mov
rcll
sub
lea
incl
test
add
push
pop
popf
add
mov
cmp
rorl
aad
jg
leave
enter
push
fcmovu
push
ret
cmc
pop
xchg
adc
mov
xchg
adc
mov
dec
fldenv
stc
mov
loopne
push
mov
and
push
fbld
and
ljmp
pop
mov
test
jns
jl
orl
push
imul
call
mov
pop
push
pop
popf
add
inc
inc
repnz
mov
sub
push
dec
arpl
movzwl
loopne
call
push
jne
pop
inc
inc
xorb
xor
negb
push
aas
sub
jae
xchg
pop
push
xchg
pop
cmpsb
mov
xchg
adc
mov
mov
xchg
inc
add
enter
add
cmpsb
inc
dec
push
clc
clc
mov
push
sub
mov
test
sub
fiaddl
sbb
xchg
fcmovnbe
mov
test
int
mov
sub
mov
call
lds
ret
mov
loop
gs
inc
rcr
insb
inc
std
jo
enter
or
pop
xor
jbe
movsl
std
dec
sbb
pop
ja
into
testb
xor
sbb
xchg
imul
mov
and
fcoms
test
fsub
aaa
xchg
inc
lret
xlat
mov
fs
xchg
hlt
pop
ds
fwait
pop
stc
xor
jo
add
sub
dec
dec
loop
sahf
or
movsl
lea
adc
aad
mov
add
ja
xor
lock
sbb
mov
and
sbb
int3
es
xchg
mov
sarl
mov
cld
mov
les
fisubl
inc
push
xor
rcrl
push
in
jle
add
scas
call
and
xor
xor
or
pop
mov
sti
push
sub
pop
mov
das
mov
std
arpl
mulb
add
pop
js
mov
popf
jno
insl
cmp
mov
xor
push
add
addb
xchg
ficoml
xchg
jl
lods
loopne
add
in
cmc
sub
bound
mov
xchg
imul
adc
inc
push
popf
jle
xchg
pop
scas
inc
les
lods
scas
mov
mov
pushf
xchg
ja
imulb
outsb
mov
xchg
fdiv
cmc
fcmovne
mov
push
and
imul
push
and
cli
mov
add
stc
pusha
sbb
mov
add
or
test
dec
and
xchg
rcrl
repz
mov
sub
cmp
cli
xor
mov
or
mov
mov
jp
mov
mov
shlb
push
sub
mov
stos
in
cmpsl
in
enter
cmpsl
adc
cmpsl
xor
xchg
js
scas
push
fbld
xchg
and
pusha
jo
les
outsl
or
push
push
nop
into
sti
mov
cld
mov
and
mov
int
push
jp
mov
fadd
cmpsl
xchg
lret
cmpsl
outsl
rolb
scas
bound
add
xchg
xor
jecxz
bound
xchg
pop
jecxz
xor
push
sbb
cmp
or
pop
adc
cmpsl
add
pminub
jnp
mov
xor
inc
inc
add
push
xchg
adc
mov
and
rol
xadd
push
jnp
xchg
pop
push
subb
imul
pop
aad
std
adc
in
daa
lods
and
push
mov
cmp
hlt
adc
mov
cwtl
scas
movsb
cmp
lods
lret
popf
mov
ficomps
mov
leave
adc
decl
shlb
cmpsl
int
loop
les
xor
jo
out
cld
mov
bound
inc
and
pushf
js
in
adc
inc
or
cmpb
gs
add
in
push
cltd
sbb
hlt
cmc
subl
sub
shl
push
or
or
xchg
test
ret
out
mov
xchg
mov
sti
or
mov
movl
ret
negb
iret
in
loopne
pop
insb
outsl
xlat
bound
xorb
outsl
inc
jo
arpl
or
push
scas
mov
sbb
sarl
pop
je
xor
adc
enter
arpl
popf
xor
sub
sbb
xor
shll
sahf
pop
int3
adc
imul
ror
divl
test
dec
out
mov
repnz
sti
stos
imul
jl
mov
movsb
push
in
imul
jbe
outsl
push
std
sbb
xor
mov
or
or
and
lret
dec
xchg
mov
fldcw
push
test
rcrl
into
in
out
adcl
aaa
pop
ficoms
push
int
push
xchg
inc
jo
pusha
insb
divb
jns
mov
push
dec
inc
addl
scas
mov
bound
jae
fldl
fistl
add
cmpsb
sub
pop
xchg
adc
dec
mov
sub
push
cmp
into
shrl
movb
dec
subl
std
data16
repnz
jmp
inc
cwtl
and
inc
sub
cld
inc
xor
mov
faddl
lret
xchg
pop
pop
in
sub
dec
mov
xchg
mov
pop
ja
lret
sbb
fmul
jno
xchg
mov
cmpsb
subl
aam
lret
or
out
push
hlt
pop
dec
in
rorb
pop
sbb
lahf
and
orb
xchg
rcl
shlb
cld
cmp
mov
push
in
or
mov
xchg
inc
inc
cmp
push
outsl
das
push
xchg
cltd
mov
inc
mov
dec
push
loope
pop
fisubl
clc
lock
into
ds
cmp
sbb
sar
lahf
arpl
add
enter
add
push
cmp
enter
lea
das
sub
das
test
dec
dec
addl
xchg
xor
into
or
adc
add
dec
out
scas
push
addr16
test
rcll
roll
stos
dec
ret
mov
fnsave
jp
jp
out
fwait
xchg
push
push
jb
adcb
pop
jns
sbb
sti
fildll
sub
push
out
cwtl
push
rcr
mov
pop
sub
xchg
imul
ds
ffreep
pop
mov
incl
inc
in
int3
sub
dec
mov
jae
mov
stos
or
in
xor
iret
adc
fnclex
es
out
insl
ss
das
fwait
dec
jmp
add
adc
xchg
xchg
dec
mov
je
fsubrl
mov
shrb
out
daa
adc
in
pop
and
nop
scas
pop
es
stc
aam
pop
das
ss
inc
dec
test
add
mov
cmpsl
les
xchg
or
cmp
hlt
clc
pop
iret
xchg
fwait
dec
add
mov
jl,pn
sub
fildl
adc
push
sbb
push
imul
dec
xchg
dec
loope
cmpl
int
mov
xchg
ja
iret
push
into
pop
dec
loope
cmp
dec
clc
sub
testl
dec
sub
mov
jns
cmp
out
xchg
ret
add
push
fistpll
orl
cmp
jnp
fstps
fiaddl
ficoms
test
stc
imul
sbb
or
loope
cwtl
sub
sti
jecxz
push
xor
jge
iret
sub
pop
fidivs
xchg
cld
test
mov
int
cmpsl
inc
dec
xchg
in
cltd
xchg
sbbl
jnp
loop
or
sbb
jbe
jbe
ret
out
add
push
or
out
insl
push
pop
dec
call
xor
out
es
fnstsw
scas
add
lds
cwtl
std
out
test
jne
loope
dec
dec
adc
inc
push
fcomps
jl
pop
loope
in
or
dec
cs
push
mov
sbbb
faddl
cmp
sti
std
jp
mov
sahf
or
outsb
in
movsb
ret
dec
cmp
push
lret
leave
je
insb
or
and
add
insl
add
jbe
fidivrs
jnp
out
mov
push
xlat
sub
mov
inc
testb
addb
xor
es
pop
out
call
adc
idivl
mov
xlat
dec
push
inc
and
inc
sbb
push
xor
xchg
xchg
and
aam
data16
test
pusha
add
push
gs
dec
dec
in
mov
fidivrs
mov
ss
inc
mov
pop
std
shll
stc
mov
lret
daa
jns
push
add
mov
jl
adc
push
sbb
daa
lret
mov
fstpt
adc
movsb
daa
mov
jne
xchg
pop
pusha
push
dec
pusha
filds
or
aam
jnp
popa
dec
adc
or
mov
and
xchg
imull
push
lret
call
push
sarb
xchg
push
sub
mov
fs
sub
pop
pop
sub
dec
dec
lahf
sub
repnz
icebp
rcrl
xchg
inc
push
dec
mov
xchg
cmpb
add
and
pop
mov
xchg
insb
inc
arpl
fdivrs
adc
mov
les
lods
pop
mov
loop
in
mov
stos
mov
imul
aas
add
into
loope
dec
dec
or
or
scas
mov
xchg
jmp
stos
xchg
mov
nop
mov
or
adc
lds
test
jae
popl
dec
adc
adc
rcrb
fnstenv
jp
inc
hlt
pop
popa
jo
xor
cmp
push
loope
outsl
adc
sub
or
mov
loope
or
and
xchg
pop
sti
mov
mov
nop
sbb
mov
popf
mov
insb
out
push
mov
xchg
into
std
lea
push
rorb
les
gs
and
lret
pop
jl
cltd
mov
mov
inc
push
push
fsubl
jo
mov
xor
lods
pop
cltd
fidivrl
clc
mov
or
loopne
push
or
push
cmp
lods
test
cld
jae
sub
dec
or
mov
pop
cmp
inc
insl
insl
xor
sub
out
cld
cmpsl
mov
xor
sbb
fsubrl
xchg
mov
sar
clc
mov
je
stos
clc
pop
stos
in
jle
sub
pop
arpl
inc
mov
lcall
dec
mov
lods
mov
cltd
fmulp
frstor
jge
jb
test
cmp
jle
or
lock
daa
push
cmp
dec
outsl
fdivrl
push
jg
scas
nop
xchg
enter
jecxz
mov
idiv
std
scas
je
sub
mov
inc
pop
xor
push
daa
xchg
mov
and
jae
sbb
xchg
mov
jnp
inc
inc
pushf
scas
aam
dec
arpl
stc
std
push
hlt
xchg
xor
ror
push
jl
pop
mov
sbb
call
insb
pop
leave
or
loopne
pop
xchg
rolb
pushf
or
cli
xor
jb
test
inc
ret
daa
or
add
cli
out
in
fwait
inc
sub
pushf
fistpll
dec
icebp
jg
push
lret
imul
add
sahf
push
dec
mul
sub
fs
inc
inc
sbb
sub
or
push
popf
sbb
sbb
movsb
mov
into
push
push
popa
add
imul
sbb
out
mov
mov
je
lahf
dec
imul
les
in
sbb
popf
movsbl
mov
daa
mov
dec
enter
mov
adc
mov
xchg
cmp
mov
mov
imul
mov
rcr
je
fs
sbbl
test
mov
mov
loopne
imul
outsb
roll
cwtl
aam
lea
jp
repz
adc
xchg
dec
hlt
inc
sub
xor
pusha
sbb
adc
aas
lea
test
adc
roll
sbb
mov
in
inc
sbb
subl
movsb
inc
push
and
push
sbb
mov
pushf
test
int
divb
or
and
ret
das
mov
pop
mov
fildll
sarb
xchg
into
loopne
test
inc
ja
call
test
test
inc
xchg
or
xor
movsb
fldenv
inc
and
ret
or
pop
inc
stos
add
bound
pop
jp
lock
fistps
cmpsb
sub
into
mov
aad
test
push
popf
cmpl
jecxz
jmp
loope
cld
nop
loope
dec
xchg
movsl
inc
in
stos
flds
sub
sarb
fmuls
add
inc
lcall
popa
push
cmp
dec
jb
sahf
xchg
mov
dec
inc
ljmp
add
hlt
cwtl
mov
add
jmp
aaa
xor
push
pop
and
test
scas
out
mov
and
insl
mov
out
iret
pop
sbb
mov
in
and
leave
mov
insb
xrelease
fcmovnu
test
jl
lods
andb
iret
out
dec
adc
pop
lret
les
mov
adc
loope
mov
sbb
cmp
das
repz
pop
sarl
cmp
nop
and
movsl
inc
dec
ucomiss
scas
adc
jo
mov
mov
push
outsb
sub
mov
imul
stos
and
lret
xchg
fidivs
std
lock
jge
fwait
cmc
filds
pop
insb
adc
cmpsb
test
dec
or
xchg
dec
inc
addl
dec
adc
cmp
cmp
insl
inc
mov
int
pop
mov
xchg
cmp
movsl
sbb
insl
jmp
insl
mov
cs
js
ret
je
sub
sti
std
enter
into
aam
int
and
xchg
lea
adc
loopne
xchg
add
mov
sbb
jle
pop
and
xchg
adc
dec
jne
push
xor
clc
jg
sbb
jo
dec
ljmp
lret
cmc
mov
hlt
pushf
or
orl
mov
fninit
xlat
dec
js
push
das
sbb
mov
push
pop
daa
lcall
mov
loopne
pushf
cmp
adc
mov
push
out
mov
or
insl
sub
pop
fistpll
scas
les
test
ret
push
sbb
loop
daa
imul
icebp
cmpsl
das
xchg
js
jg
fnstenv
xchg
sti
ljmp
mov
adc
mov
leave
inc
cld
cmc
lods
dec
push
dec
mov
xor
cmpsl
xchg
ja
js
adc
ror
add
fld
insl
out
lcall
add
dec
orb
xor
jg
xchg
fmull
pop
loopne
cmp
mov
aas
movsb
ficoml
xchg
es
aad
add
and
inc
sub
inc
adc
je
out
lahf
and
mov
or
mov
insl
hlt
out
scas
outsl
mov
gs
inc
mov
pop
out
popa
rcrl
lds
leave
pop
lods
mov
cmp
xchg
push
xchg
fsubl
hlt
cmp
pop
into
sti
inc
jne
jo
mov
pop
and
push
adc
xchg
or
adc
push
push
repnz
cmp
or
aad
or
loope
fs
sbb
mov
out
ficoml
push
sub
or
je
bound
int
outsl
fdivs
pop
inc
ljmp
mov
pop
aaa
pop
cli
pop
nop
mov
pop
jno
test
push
mov
ss
cmp
adc
pop
lea
cmp
js
jbe
pop
and
push
pop
loop
mov
dec
fstl
jle
adc
mov
jne
inc
lods
in
clc
jmp
cmp
loop
dec
ljmp
rolb
nop
pop
jne
fnstcw
aad
or
mov
aas
xchg
flds
push
inc
push
or
sbb
push
sub
fidivl
jmp
cmp
loop
dec
ljmp
in
xchg
lock
push
push
jp
mov
xor
add
mov
lret
scas
xor
jl
jg
push
xor
inc
inc
pop
pop
test
out
daa
fildll
outsb
movl
jg
into
mov
jp
cli
insl
xchg
cmpsb
sub
cmp
push
fdivs
jmp
pop
push
imul
xlat
andb
xchg
cmp
mov
xor
xor
fdivl
inc
in
xor
test
rclb
pusha
idivl
mov
mov
or
xchg
out
jnp
sbbb
mov
fwait
es
adc
in
inc
mov
shll
sbb
int
in
lds
add
pop
adc
in
inc
mov
dec
cmp
mov
or
and
mov
push
daa
cmp
sub
lret
adc
out
lea
stos
mov
dec
in
scas
stc
hlt
pop
sahf
and
add
cmp
icebp
loop
cmp
dec
sbbb
inc
out
pop
push
mov
movsb
cli
mov
popf
xchg
ds
adc
jno
mov
enter
sbb
and
shll
iret
stc
cmp
roll
pop
push
mov
cmp
icebp
xchg
mov
cmp
mov
mov
jl
repz
shll
cmpsl
jns
xorb
bound
sbb
mov
and
in
pop
mov
pop
loopne
mov
loop
pop
dec
mov
xor
sahf
mov
push
lds
cmp
es
ds
xchg
mov
sbb
add
mov
mov
dec
mov
mov
cli
lods
shll
bound
cmpl
std
out
cmp
aam
incl
stc
push
push
out
popf
push
push
test
push
cmp
rorb
in
leave
push
xor
jecxz
rorb
cmpsb
hlt
fnsave
sbb
jne
mov
scas
or
sbb
hlt
ss
lahf
sarb
mov
xlat
push
xchg
in
inc
sbb
mov
test
data16
fnstcw
outsl
data16
mov
je
sbb
and
jp
insl
icebp
push
add
enter
add
push
cmp
enter
lods
movsl
mov
out
lds
mov
cmc
xor
fnsave
shlb
in
aad
lcall
mov
pop
psubusb
ds
xor
movsl
sahf
add
aas
push
sbb
mov
movsl
mov
push
stc
xchg
xchg
in
rorb
ds
clc
xlat
lods
add
sub
fisttps
mov
xor
cmpl
fdivrp
push
sub
and
mov
aad
adc
icebp
decl
popf
ja
out
mov
xchg
idivl
iret
or
xor
pop
push
xchg
pop
cmpsb
jns
pop
je
xor
clc
movsb
mov
shrl
daa
inc
sbb
in
dec
push
adc
cltd
pushf
sbb
shr
push
inc
cmp
test
inc
fucom
sbb
and
test
xor
into
adc
out
lea
inc
iret
hlt
lds
fisubrs
dec
xchg
imul
mov
inc
ds
daa
in
cmp
and
mov
mov
sub
dec
jp
xor
pop
xchg
enter
add
mov
fstpt
mov
mov
imul
sbb
jae
or
mov
or
pop
xor
jbe
xchg
flds
jbe
xchg
mov
lret
pop
nop
xor
mov
ret
pop
lret
xor
xchg
inc
dec
out
xchg
leave
mov
cld
aam
nop
loop
sub
aam
mov
test
paddd
jp
xor
setl
add
push
test
dec
add
pushf
pop
lods
ret
inc
sbbb
outsl
jne
push
xchg
mov
loop
and
outsb
mov
xchg
fdivrs
dec
or
jg
mov
pusha
xchg
mov
mov
sub
push
xchg
or
rdpmc
pop
xchg
arpl
outsl
mov
dec
sbb
aaa
pop
and
sub
mov
shl
out
sbb
clc
dec
cmp
pop
mov
stos
inc
ljmp
xor
jmp
out
stos
in
pop
std
daa
outsb
cmp
cmp
leave
fnstcw
aad
or
fldt
cmp
add
jg
outsb
sbb
mov
and
jp
push
mov
ret
out
stos
in
lds
pop
mov
inc
popf
mov
fsubs
cltd
and
xor
mov
sbb
and
stos
repnz
outsl
ret
xchg
or
leave
lahf
mov
jecxz
jne
mov
lock
rcll
movsb
in
imul
cmp
mov
or
test
xchg
mov
fbld
aas
inc
ja
mov
arpl
xchg
into
loopne
test
mov
xchg
add
stc
xor
test
sub
stos
pop
push
and
fsts
in
pop
lds
out
lahf
insl
cmp
mov
xor
push
push
or
dec
jo
push
cmp
enter
mov
mov
or
add
das
cmpsb
popf
repz
mov
sub
les
adcl
xor
inc
fwait
ret
lods
loopne
xor
sbb
repnz
push
outsb
iret
nop
or
repz
outsl
adc
imulb
in
idivl
mov
xlat
rol
adcl
ljmp
pop
jns
xorl
cltd
test
idivl
mov
xlat
test
daa
inc
xchg
and
sub
dec
xor
mov
cmpb
ret
jbe
adc
gs
enter
sbb
movsb
add
test
lock
mov
xor
xchg
mov
xchg
ss
sub
jnp
ljmp
subb
push
pop
insl
mov
lods
pop
jl
jo
or
adc
xlat
jle
cwtl
ficoml
mov
scas
pusha
repnz
jp
insl
aaa
fidivrs
rorl
js
lock
lret
cmp
test
ret
dec
jmp
lahf
and
mov
in
mov
push
or
mov
bound
ljmp
push
mov
mov
cli
pop
ficompl
test
mov
jg
mov
div
pop
jl
fcoms
and
xchg
insb
pusha
jns
jmp
pop
outsl
xchg
stos
cmc
pop
push
rclb
out
ret
lock
pop
jge
add
xchg
into
loopne
test
pop
ds
sahf
insl
div
add
outsb
sbb
dec
and
inc
add
stos
push
cmpsb
sbb
lea
xchg
out
mov
xchg
jns
aas
fwait
sub
or
or
cltd
test
in
idivl
mov
xlat
adc
xchg
push
add
inc
rolb
iret
movsl
stos
das
xchg
lret
fldcw
mov
adc
dec
pop
xchg
out
decl
xor
sub
mov
aas
daa
adc
jp
sub
lret
adc
mov
movsb
mov
roll
cmp
dec
mov
push
and
lahf
in
pop
jle
xchg
inc
dec
out
xchg
leave
mov
pop
adc
sub
jo
cmp
mov
leave
pop
push
pop
and
xchg
jns
repnz
iret
imul
test
jnp
and
stos
js
rorl
push
iret
xchg
cli
dec
bound
add
jmp
dec
ret
cltd
lock
imul
fnstsw
bound
ljmp
push
mov
mov
cli
pop
ficompl
test
mov
jg
mov
mov
ds
aas
fcoms
and
xchg
insb
pusha
jns
jmp
pop
lahf
in
ds
jo
femms
iret
sti
gs
cltd
sarb
mov
dec
add
inc
push
inc
pop
mov
push
outsb
iret
nop
or
repz
lret
aas
inc
icebp
sbb
jg
pop
jecxz
nop
push
mov
testl
or
in
inc
mov
shll
sbb
icebp
xchg
mov
scas
mov
jg
repnz
lea
clc
gs
clc
jo
outsb
sub
int
fs
gs
mov
and
shll
iret
stc
cmp
mov
inc
pop
inc
loop
xorb
loop
mov
inc
fidivs
mov
cmp
jle
pop
daa
rcrb
xor
jae
jl
xor
xchg
ret
dec
in
mov
test
sti
xchg
xor
sti
inc
std
mov
jmp
inc
imulb
dec
pop
jno
and
test
into
jno
xor
mov
xor
or
jle
mov
xchg
push
arpl
rorl
adc
mov
xlat
aas
mov
sbb
in
mov
rcrl
div
lret
orl
jae
and
rcll
inc
jbe
pop
in
loop
push
in
jp
pop
out
subl
cmp
add
bound
cmp
or
cmp
repnz
xchg
stos
cmp
imulb
jo
out
lea
lods
mov
pushf
cmpsb
ss
mov
inc
mov
adc
lahf
or
push
inc
mov
adc
add
pop
mov
das
adc
sbb
dec
push
std
std
xor
sub
add
push
xchg
mov
loopne
push
lds
std
fwait
subl
stc
push
add
dec
fcompl
xor
js
mov
imul
push
rep
cli
insl
xchg
cmpsb
sub
fdivl
call
lds
rcl
aas
push
xor
loope
gs
inc
rcr
insb
lods
mov
push
sbb
cmpsl
rorl
pusha
dec
pop
xor
jbe
mov
dec
insl
stos
lods
mov
mov
jns
sbb
push
add
imul
mov
sub
sbb
cmpsl
or
dec
shrb
pop
dec
mov
aaa
lea
add
stc
pusha
out
jb
mov
xchg
inc
adc
cmp
pop
dec
mov
aaa
lea
mov
pop
push
sbb
and
or
sbb
in
add
pusha
or
mov
imul
sub
rcll
lretw
pop
jno
imul
sahf
jbe
std
and
call
mov
test
cmp
sbb
cltd
test
mov
lock
leave
push
call
add
mov
or
adc
shl
mov
daa
std
adc
in
inc
mov
add
xor
push
insl
pusha
xchg
xchg
mov
push
std
pop
xchg
inc
and
xor
jp
xor
fs
and
sub
jmp
xchg
add
lock
dec
pop
cmpsl
ljmp
add
push
cld
or
fbld
dec
call
jbe
add
sbb
das
cmpsb
icebp
xchg
fcompl
stc
pop
mov
push
ret
fninit
xlat
dec
js
push
adc
push
mov
rcll
mov
pop
jecxz
xor
ljmp
pop
xchg
mov
xor
leave
jp
rorl
xor
pop
pavgb
jnp
test
mov
mov
arpl
imul
push
out
mov
jb
sub
jnp
dec
push
xchg
nop
adcb
cltd
cltd
ficoms
ds
xchg
je
adc
cmp
movsb
sub
jl
sub
cli
imul
mov
push
mov
leave
mov
mov
mov
sub
aas
pop
cmpsb
lds
lret
imul
add
jp
cs
push
out
inc
push
cld
imul
icebp
pop
cli
popa
lret
addr16
popf
frstor
jecxz
dec
js
push
xor
xchg
into
xchg
sbb
nop
leave
sbb
or
and
add
or
xor
mov
jp
cmp
pop
fiadds
test
pop
and
sarl
cmp
push
dec
sbb
fsubr
dec
je
sbb
mov
or
lret
cmpsb
and
inc
jle
inc
je
push
sbb
cmp
push
mov
test
idivl
mov
xlat
jne
jno
jbe
lahf
mov
popf
adc
add
jns
enter
enter
dec
popa
sub
lods
xor
loop
negb
ljmp
pusha
stc
mov
and
inc
inc
push
movsl
jae
std
ret
xchg
out
je
or
scas
test
out
jge
add
sub
imul
pop
mov
clc
cmp
pop
jg
arpl
sbb
sub
mov
inc
in
push
mov
inc
cmp
push
minps
adc
ss
adc
fnstenv
aas
sub
in
inc
mov
dec
cmp
push
repnz
cmpsl
out
mov
aad
loop
icebp
pop
xlat
cmp
xchg
inc
aas
xchg
das
mul
dec
cmp
imul
push
sub
repnz
ljmp
push
adc
leave
shll
js
or
cmp
pop
shlb
lea
pop
psrlw
adc
dec
pop
xchg
popf
fcoml
das
repz
cmpsl
jno
scas
add
xorb
in
lret
inc
sub
push
jmp
fucomip
in
std
scas
mov
stc
lea
sub
sub
rcr
pop
scas
lock
bound
mov
sbb
dec
insl
mov
xor
fiadds
shr
adc
into
sbb
xchg
jl
pop
sbb
jne
int3
faddl
fists
arpl
xor
adcl
mov
or
jge
inc
insl
mov
cli
adc
mov
xchg
es
pop
adc
int3
mov
adc
adc
inc
xchg
push
sbb
out
lds
addr16
bound
push
into
mov
sbb
pop
lock
push
lock
push
aas
ss
test
ret
insl
xor
pop
fwait
movsl
pusha
mov
mov
test
fucomp
xor
fiaddl
inc
dec
mov
jbe
sbb
insl
mov
cli
adc
mov
xchg
es
pop
adc
int3
mov
xor
fiadds
xchg
push
sbb
out
lds
addr16
bound
push
into
mov
sbb
pop
lock
push
lock
sub
enter
adc
inc
dec
lcall
imul
inc
imul
inc
repnz
mov
sbb
pop
movaps
popf
xchg
mov
sub
outsl
test
and
xor
mov
ret
pop
mov
movsb
scas
sbbl
pop
push
int3
cmp
test
mov
pop
int3
jno
push
repz
mov
and
and
xor
nop
stos
ret
test
dec
sub
add
pusha
mov
aaa
fidivrs
pop
shlb
and
mov
jbe
icebp
mov
and
scas
adc
add
in
and
test
into
jno
cmp
xchg
inc
aas
xchg
das
test
sbb
mov
push
xchg
shr
cmp
cmp
mov
jnp
push
aam
cwtl
shll
xor
sbb
or
jbe
enter
xor
popa
ja
sub
enter
cld
shll
cli
frstor
data16
push
mov
sbb
xchg
in
mov
sbb
sti
pop
sbb
xor
dec
xor
out
push
pop
hlt
int
push
mov
iret
cmpl
movsb
inc
andb
mov
imulb
testl
add
outsl
std
mov
push
xchg
test
dec
sub
add
pusha
cs
fadds
inc
pop
mov
xchg
inc
add
enter
add
push
cmp
enter
lods
movsl
mov
cmc
pop
mov
mov
mov
test
paddd
jp
xor
adc
jbe
sbb
jp
test
mov
fiaddl
xchg
roll
jl
xchg
ljmp
imul
jns
mov
icebp
imul
stos
lahf
mov
aas
test
inc
push
ss
add
frndint
outsb
mov
xor
jmp
roll
ds
xchg
cld
jmp
cmp
pop
lock
outsl
or
add
jecxz
dec
xchg
clc
movsl
jb
mov
push
cwtl
pop
or
scas
loop
sti
stc
notb
xchg
shlb
sahf
xchg
inc
pop
pop
clc
fsubr
div
add
mov
je
aas
ret
and
in
fs
xor
and
jmp
clc
call
icebp
stos
jns
and
xchg
cmp
mov
dec
or
or
outsl
jle
or
adc
and
sbb
xchg
in
mov
sbb
sti
pop
sbb
xor
dec
xor
out
push
pop
iret
inc
loope
rorl
jl
sub
inc
pop
rolb
sbbb
movsl
add
imul
std
scas
enter
xor
popa
ja
sub
mov
jg
mov
fnstsw
loope
push
aas
movsb
ficoml
xchg
es
mov
fistpl
mov
addr16
arpl
adc
test
cmpsl
pop
add
cmp
jno
fwait
ret
sbbl
pop
pop
or
jmp
cmpsl
pop
pop
icebp
push
int3
dec
adc
pop
jb
add
jp
adc
adc
stos
inc
pop
dec
adc
mov
sbb
sti
pop
sbb
add
push
mov
mov
mov
xchg
mov
mov
dec
test
test
and
lock
js
roll
add
pop
std
inc
or
and
mov
mov
and
sar
sub
aas
subb
in
jp
sub
cltd
inc
push
stos
sbb
int3
pop
pop
scas
shll
jbe
sbb
jp
test
mov
xchg
jl
cld
xchg
or
jne
aaa
lahf
inc
jb
or
fists
int
pop
idivl
push
inc
or
es
dec
mov
ret
jo
dec
test
adc
mov
add
fists
int
pop
idivl
push
inc
or
es
pop
mov
xor
push
mov
lods
jp
scas
pop
push
stos
test
lods
xor
add
fsubrs
repz
cmp
mov
inc
cmpsb
out
push
aas
pop
xor
rolb
stos
fldt
push
insb
add
mov
shr
fidivl
push
push
iret
push
jo
daa
aam
push
xchg
in
jae
push
jge
xchg
xchg
lret
dec
ficoms
imul
pop
out
mov
lahf
sub
push
sub
test
jnp
cmpsb
inc
test
cltd
es
dec
ja
repnz
mov
lahf
lahf
or
lret
leave
scas
das
sbb
pusha
stos
jnp
iret
sbb
data16
pop
aas
lods
jmp
pop
pop
mov
cs
lods
lcall
addb
lret
pop
mulb
lock
pop
es
repnz
lcall
and
insb
mov
inc
loope
addr16
aaa
repz
rol
or
xchg
inc
cs
push
aas
add
clc
call
or
jne
in
sub
in
lods
dec
clc
lods
or
data16
mov
push
pop
popf
add
inc
inc
repnz
adc
imulb
outsb
mov
xchg
fdivr
lret
jbe
bound
adc
and
push
test
fcom
out
fimull
cld
mov
out
outsl
xor
pop
mov
pop
aad
jno
xchg
stos
dec
inc
jbe
cmp
pop
jmp
rcrl
int3
dec
adc
pop
out
mov
adc
dec
je
jmp
outsb
loop
cld
pop
and
jae
clc
mov
mov
xchg
cs
and
or
add
int
daa
sarb
in
jmp
xchg
sub
jg
and
icebp
pop
sbb
xchg
cltd
cmpb
adc
popa
cmp
outsb
cli
insl
xchg
cmpsb
sub
les
out
imul
or
cmpsl
in
mov
test
add
clc
inc
inc
flds
inc
dec
mov
mov
sbb
out
aam
add
pop
jle
cld
xchg
sbb
xor
das
jbe
lahf
push
push
lcall
adcl
ljmp
data16
hlt
jle
stos
sbb
pop
call
pop
mov
inc
sarl
out
dec
ja
add
popf
mov
push
les
add
cmpsb
sub
les
out
imul
or
mov
ljmp
jbe
jl
mov
adc
add
and
push
mov
mov
jns
inc
mov
xor
cld
es
lods
mov
int3
ret
mov
mov
fs
ret
adc
xchg
pop
es
push
notb
negb
mov
enter
jecxz
aam
lods
aam
add
out
jo
push
cmp
enter
pop
in
push
cmc
xor
int
jge
lock
data16
push
fadds
rcrl
mov
call
jne
mov
outsl
inc
mov
sub
and
loopne
xchg
sub
scas
pop
mov
push
and
mov
jecxz
dec
sub
js
pop
dec
outsb
lret
inc
sub
jnp
mov
mov
dec
dec
mov
adc
sbb
xchg
in
imul
cmpsb
sub
and
pop
mov
and
outsl
adc
jp
sbb
sub
scas
push
lret
xor
adc
push
push
sbb
inc
or
cmc
mov
xchg
pop
add
push
cltd
iret
cmc
outsb
aas
push
sub
fdivrs
outsb
sub
inc
loope
addr16
aaa
inc
sahf
add
jl
dec
dec
sbb
pop
or
or
mov
sbb
xchg
jl
push
cmp
clc
cli
nop
inc
push
sbb
adc
push
pop
movsb
xor
repnz
jle
lcall
movsl
adc
movsl
mov
inc
imul
mov
and
test
dec
mov
arpl
dec
adc
dec
mov
xor
leave
arpl
jle
cmp
dec
loop
in
xlat
mov
cli
ds
and
repz
fs
mov
in
clc
xlat
lods
or
sbb
hlt
ss
lahf
sarb
addr16
pop
nop
mov
sbb
mov
test
jmp
or
mov
sbb
outsl
mov
xchg
add
sbb
inc
mov
jle
outsb
pop
push
xor
fildll
outsb
sti
mov
and
inc
jno
subl
cmp
aad
shll
out
push
cmp
sub
ss
je
sbb
sar
lahf
arpl
cs
cltd
roll
cmc
inc
ss
or
or
int
or
aam
enter
mov
add
out
mov
pop
xchg
dec
add
mulb
xchg
inc
xchg
mov
and
cli
adc
icebp
nopl
cltd
cmp
xor
mov
sbb
sub
mov
nop
mov
js
sub
sarl
mov
or
addr16
in
rorb
in
adc
add
ljmp
outsb
sub
fnstsw
lret
sbb
insb
fimuls
add
push
call
or
or
ds
popa
inc
xor
mov
jne
sbb
and
and
jo
and
pop
das
mov
push
pop
xor
pop
adc
pop
cmp
xlat
int3
dec
lret
cmc
add
lret
sub
std
push
lahf
int3
pop
mov
mov
jb
mov
fbld
mov
or
inc
pop
icebp
sbb
jl
push
jbe
pop
xor
sbb
out
aam
into
dec
dec
sub
daa
jae
pop
and
or
adc
stos
ret
fsubs
jae
std
dec
movsb
in
std
aas
popl
pop
xor
mov
mov
cmp
add
mov
inc
xchg
nop
cmp
imul
gs
rorb
out
dec
pop
jno
mov
mov
in
and
out
pop
add
add
lds
sub
fmull
xchg
loopne
call
mov
in
clc
xlat
lods
inc
pop
dec
adc
inc
movsl
adc
rorl
insl
inc
mov
movsl
test
sbb
aaa
clc
jmp
add
jmp
pop
mov
mov
mov
cltd
mov
mov
jge
loop
sub
push
scas
daa
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
dec
dec
jbe
mov
pushf
stos
xchg
or
push
sbbb
xchg
adc
shrl
fstl
push
arpl
mov
daa
sub
xchg
inc
xchg
mov
cs
js
das
mov
push
call
dec
aaa
mov
pop
add
mov
cmc
xchg
into
mov
pop
jp
push
fnstenv
pop
jbe
sbb
mov
jge
jmp
subl
lret
mov
jnp
adc
fstp
fs
lea
mov
push
fidivl
in
fdivrl
lds
insb
out
xchg
add
pop
fcmovnu
or
push
cmp
mov
xchg
xlat
mov
pop
lahf
sbb
pushl
or
lahf
mov
mov
jnp
adc
cmc
push
inc
adc
mov
push
jmp
js
adc
sbb
dec
cmpsl
or
pop
popa
xchg
pop
dec
clc
outsb
and
lret
mov
loopne
jmp
inc
bound
pop
jae
sarl
inc
push
call
lods
and
fimuls
mov
inc
push
jmp
add
cmc
fs
cmpsl
addb
cmpsl
and
add
mov
adc
rcrb
scas
jo
xchg
adc
xchg
roll
inc
cld
push
das
jbe
out
jae
sti
push
pushf
dec
and
inc
inc
and
sbb
cwtl
add
les
pop
add
mov
inc
xor
adcb
notl
push
inc
push
mov
popa
mov
in
cmpsl
cmpsb
push
sar
fildll
and
in
dec
aas
scas
jle
pop
mov
into
fdivrl
adc
xchg
pop
jg
dec
cmc
mov
cltd
mov
test
sbb
xor
and
movsb
fdivrl
jb
jno
jecxz
aad
dec
dec
mov
sub
pop
lock
scas
dec
jecxz
lds
push
add
insb
xchg
scas
adc
cld
push
test
xchg
add
sarl
or
fwait
lret
gs
cli
je
lea
sahf
adc
cmc
negl
jle
jp
xchg
mov
inc
mov
xor
add
inc
mov
and
sbb
fs
or
or
pop
adc
in
cmpsb
and
testl
icebp
inc
or
cmp
mov
ss
loope
or
adc
and
mov
std
psrld
mov
mov
hlt
enter
jns
jbe
jns
mov
lods
loopne
sub
dec
and
in
push
movsb
aam
in
inc
mov
daa
lcall
repnz
movsl
jmp
xor
adc
fsubs
inc
test
leave
daa
lahf
jae
xorb
mov
gs
sbb
popf
pop
sub
mov
out
fwait
adc
dec
addr16
ja
lods
lahf
repnz
cwtl
or
cmpsl
and
pop
jl
inc
pop
xor
fidivrs
xor
cmp
shlb
xchg
jmp
dec
sbb
and
or
insl
fisubrs
adc
scas
in
mov
subb
pop
lret
pushf
shl
xchg
sub
add
or
testb
inc
bound
pop
addr16
bound
sbb
lcall
pop
or
lahf
subl
mov
adc
call
std
dec
rcrb
push
sbb
jb
out
xchg
stc
ror
jecxz
insl
cwtl
sbbb
and
enter
out
icebp
cmp
test
jno
dec
dec
repz
dec
pop
ret
sahf
call
add
adc
out
ret
imul
lret
jae
jl
add
xchg
pop
rep
dec
fidivrs
jo
push
sti
fs
jp
fadds
inc
cmc
int3
dec
movsb
js
aad
out
xorl
pop
mov
out
repnz
and
pushl
fcompl
call
jns
inc
jmp
mov
sub
es
xor
add
push
hlt
sbb
pushf
fisubl
das
outsl
xchg
mov
mov
mov
or
xchg
sub
xchg
xchg
sub
test
jbe
cmpsl
int3
sbb
jo
jecxz
adc
jns
mov
fisubl
push
ss
pop
pop
sbbb
insl
mov
and
sub
les
enter
add
pop
mov
stos
fsub
and
xor
aas
aas
sub
fdiv
push
adcl
in
aas
dec
jnp
xor
lcall
xchg
mov
inc
mov
xor
add
inc
mov
and
sbb
fs
or
or
pop
ss
mov
movsl
mov
aaa
inc
pop
dec
icebp
inc
or
cmp
mov
ss
loope
or
adc
and
mov
std
psrld
xor
ficompl
or
lea
jbe
jns
mov
lods
loopne
sub
dec
and
in
push
movsb
aam
in
inc
mov
daa
lcall
pop
lret
sbb
scas
iret
or
cli
or
fsubs
inc
test
leave
daa
lahf
jae
xorb
mov
gs
sbb
sub
loopne
outsb
inc
gs
les
or
push
pop
adcb
mov
sti
pop
mov
repnz
jns
mov
frstor
dec
into
xlat
jbe
fisttps
push
ljmp
lret
imul
and
ss
orl
loopne
mul
jb
aaa
push
mov
jge
testl
lcall
fiaddl
cmp
aad
pushf
inc
push
dec
fsubrs
pop
into
xor
sarb
pop
sbb
push
loope
mov
popa
xor
inc
rcr
push
mov
sub
and
cs
sbb
fdivr
or
xchg
mov
jb
inc
insl
addr16
lret
sbb
adc
adc
fsubs
inc
int
nop
sbb
xorb
mov
gs
sbb
sub
loopne
outsb
inc
gs
les
ds
push
jmp
orb
adc
dec
xor
add
jns
mov
frstor
dec
into
xlat
jbe
fisttps
push
ljmp
lret
shrl
xchg
pop
movsb
sbb
mov
popa
orl
loopne
mul
jb
aaa
push
mov
jge
testl
lcall
fiaddl
cmp
aad
pushf
inc
push
dec
fsubrs
pop
mov
mov
aam
inc
cs
popf
out
shll
lahf
inc
adc
popa
xor
inc
rcr
push
mov
sub
and
cs
sbb
fdivr
or
xchg
mov
jb
inc
mov
fstpt
loopne
xlat
adc
mov
scas
adc
fsubs
inc
int
nop
sbb
xorb
mov
gs
sbb
sub
loopne
outsb
inc
gs
les
ds
jae
movl
mov
test
mov
pop
mov
repnz
jns
mov
frstor
dec
into
xlat
jbe
fisttps
push
ljmp
lret
or
sbb
pinsrw
orl
loopne
mul
jb
aaa
push
mov
jge
testl
lcall
fiaddl
cmp
aad
pushf
inc
push
dec
fsubrs
pop
test
icebp
rorb
lret
loop
cld
cmpsl
cmp
adc
popa
xor
inc
rcr
push
mov
sub
and
cs
sbb
fdivr
or
xchg
mov
jb
inc
mov
or
mov
lods
pop
pushf
sbb
arpl
int
nop
sbb
xorb
mov
gs
sbb
sub
loopne
outsb
inc
gs
les
ds
stos
push
popf
mov
repz
rcrb
xor
sti
pop
mov
repnz
jns
mov
frstor
dec
into
xlat
jbe
fisttps
push
ljmp
lret
cmp
and
jmp
jae
orl
loopne
mul
jb
aaa
push
mov
jge
testl
lcall
fiaddl
cmp
aad
pushf
inc
push
dec
fsubrs
pop
loop
mov
daa
mov
adc
mov
popa
xor
inc
rcr
push
mov
sub
and
cs
sbb
fdivr
or
xchg
mov
jb
inc
jle
gs
push
cmp
leave
jb
bound
xor
dec
mov
arpl
int
nop
sbb
xorb
mov
gs
sbb
pop
int3
and
psubw
mov
repnz
mov
xchg
fsub
dec
in
test
fimull
ds
gs
cltd
call
jae
jbe
dec
rcll
push
cmpl
xor
push
icebp
pushf
sahf
push
adc
test
cmp
add
and
add
add
pop
jbe
popf
lock
cmc
cltd
dec
sti
out
inc
sub
xor
sub
push
lcall
inc
movsl
jnp
cmpsl
mov
out
jno
arpl
int
dec
dec
addr16
push
std
pop
sub
aas
push
cltd
cmpsl
iret
lds
test
leave
or
or
adc
xchg
lahf
mov
jnp
loopne
mov
mov
negl
ds
jne
push
mov
and
sub
enter
or
fs
xchg
add
loop
roll
jns
in
ret
test
cmc
test
mov
pop
pop
add
xchg
loope
cmp
fs
test
mov
test
mov
push
imul
stc
and
loope
ret
insl
ficompl
inc
cmpsb
cs
cmc
dec
jnp
hlt
int
mov
jae
test
jmp
repnz
adc
jmp
scas
xchg
insl
scas
adc
fsubs
inc
xor
movsb
xor
xor
gs
sbb
pop
int3
and
psubw
mov
pop
add
push
popa
cli
cwtl
js
leave
add
mov
dec
in
test
fimull
ds
gs
cltd
call
jae
jbe
dec
rcll
outsl
insb
call
fstpl
mov
gs
push
adc
test
cmp
add
and
add
add
pop
jbe
popf
rorb
inc
stos
mov
insb
push
mov
xor
pop
xchg
rcr
and
std
push
lcall
inc
movsl
jnp
cmpsl
mov
out
jno
arpl
int
dec
dec
addr16
std
jns
lock
out
incb
mov
and
cwtl
test
leave
or
or
adc
movsl
out
pop
lcall
inc
stc
dec
sbb
ucomiss
dec
jne
push
mov
and
sub
enter
or
add
fstl
xor
icebp
mov
xchg
pop
hlt
sub
prefetcht2
push
ja
les
pop
add
xchg
loope
cmp
fs
test
mov
test
mov
shlb
push
fsubrl
in
add
ret
insl
ficompl
inc
cmpsb
cs
cmc
dec
jnp
hlt
int
mov
jae
test
in
mov
fidivl
pop
lret
loopne
xchg
loope
adc
fsubs
inc
xor
movsb
xor
xor
lcall
cmp
lock
mov
adc
sbb
loope
add
jle
fdivrl
xorb
rorl
push
lods
adc
sbb
mov
push
pushf
xchg
xchg
cmp
pop
inc
data16
movsl
and
imul
xchg
into
ret
inc
jno
xor
pusha
ss
jg
fwait
mov
mov
jns
and
pop
jge
test
jno
xlat
lods
dec
push
outsl
cld
sub
add
xchg
je
mov
cmp
ja
xchg
pop
in
add
or
xchg
mov
cmp
stos
cmpsb
insl
mov
inc
movl
push
es
push
decl
lcall
insb
pop
cld
scas
sbb
push
xchg
push
cmp
jp
in
xor
cmp
xlat
xchg
stos
stc
cld
mov
or
pop
push
dec
enter
xchg
pop
cmp
out
adc
adc
xchg
std
and
imul
or
aam
rcll
xchg
loop
pop
fcompl
mov
outsb
dec
mov
push
int3
add
popf
cltd
sbb
sbb
rcpps
xchg
dec
ret
jp
push
xor
mov
loop
add
push
aaa
stos
adc
dec
push
lods
inc
sub
scas
pusha
xor
mov
cli
jae
mov
pop
stos
lea
pop
scas
sbb
jmp
scas
in
sbb
mov
mov
jl
sbb
sbb
mulb
mov
test
int
aad
fdiv
icebp
lcall
icebp
cmp
mov
divb
dec
dec
repz
push
push
in
or
mov
push
out
mov
and
shlb
aaa
jb
and
and
das
mov
jnp
and
lret
loop
jl
push
mov
dec
sahf
push
ljmp
jmp
insb
adc
stos
and
repnz
ja
xor
dec
xor
daa
mov
stos
lcall
add
xor
pop
rcrl
cwtl
aam
push
cmpsb
mov
cmp
inc
push
ds
adc
push
cmp
mov
popa
or
pop
push
push
adc
jae
aaa
pop
ss
lods
cmp
jge
pop
fimuls
mov
mov
dec
push
arpl
push
rcr
mov
xchg
mov
and
loope
sub
leave
sbb
inc
push
inc
test
jne
push
popa
das
mov
andl
roll
sub
mov
xlat
call
fnstenv
repnz
sbbl
jge
iret
sbbb
inc
popf
mov
stos
mov
push
mov
xchg
mov
aaa
movsb
pushf
push
outsl
add
adc
jb
in
les
mov
movsb
push
pushf
add
dec
mov
push
outsb
cwtl
sub
or
imul
and
mov
cmc
js
pop
dec
mov
mov
adc
lods
cmp
jmpw
pop
mov
fisubs
insl
mov
and
mov
enter
add
notb
ds
sub
out
std
or
gs
lds
stos
xor
pop
add
movsl
xchg
xchg
sub
ja
repz
sarl
data16
and
xchg
mov
jle
mov
xchg
dec
sahf
xchg
push
jmp
insl
xchg
cmpsb
sub
pop
xchg
adc
xlat
mov
loopne
sbb
ds
xor
mov
xor
push
xor
pop
sub
cltd
cs
in
push
mov
add
mov
bound
leave
pop
sub
hlt
scas
mov
data16
sbb
std
mov
cmp
add
int3
sbb
in
stos
int3
sub
push
push
addr16
mov
cmp
rorb
das
or
xchg
push
fistpl
rolb
daa
cmp
or
cld
mov
icebp
enter
mov
int
cmp
cld
fs
xchg
insl
xchg
cmpsb
sub
pop
xchg
adc
xlat
mov
loopne
sbb
ds
xor
mov
xor
push
xor
pop
sub
cltd
cs
or
imul
add
jge
xor
cmp
cwtl
dec
mov
rol
arpl
rcll
xor
adc
sub
jns
sub
popa
cmp
ret
inc
pusha
test
adc
mov
stos
cmpsb
add
inc
cwtl
jge
and
outsl
xchg
jle
dec
lods
mov
pushf
sahf
inc
xchg
loopne
xorb
sahf
inc
mov
xchg
inc
popa
jecxz
adc
cltd
data16
or
dec
aam
jae
dec
cwtl
and
hlt
sbb
adc
cmp
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
add
cmp
lods
popf
and
xlat
out
cld
fadd
in
cmp
push
into
scas
dec
out
adc
gs
xor
pop
cmp
dec
sbb
push
cmpl
inc
pcmpgtw
mov
ds
jl
aad
insb
inc
sbb
push
jl
out
and
leave
pop
lds
pop
mov
ret
mov
dec
sub
shll
mov
cltd
cmpsl
icebp
mov
mov
ficompl
icebp
js
inc
jno
fucomp
shll
xchg
testb
fnstcw
lock
pop
pop
out
cmpsb
shl
mov
inc
mov
je
dec
mov
sti
jns
jb
inc
aaa
adc
sbb
inc
jg
cmp
loopne
cwtl
sbb
or
cmp
lods
popf
and
xlat
out
shrb
cld
adc
pop
ficompl
cmpsb
sub
cmp
dec
lds
jle
cmpb
push
and
pop
sbb
mov
fiadds
insl
push
shrl
fldenv
add
jge
lds
xchg
sub
lods
xor
xlat
inc
xchg
in
lock
inc
cmc
jo
dec
mov
inc
lods
int
xor
jne
xchg
mov
dec
push
push
cmp
cmp
fmull
ljmp
aaa
or
or
push
mov
cltd
cmc
cmp
imul
adc
jl
add
fistps
pop
out
iret
popf
xor
xor
in
lea
push
xchg
mov
add
aaa
aam
popf
fidivrs
sbb
sbb
xchg
in
jp
popa
cwtl
add
jae
ret
clc
xchg
and
pop
sbb
push
xchg
pop
imul
testl
push
mov
push
movsl
repnz
loope
lret
orl
js
mov
mov
mov
aas
pop
rolb
movsl
cli
push
sbb
inc
les
lret
and
add
mov
dec
orl
xchg
mov
push
pop
xor
call
mov
inc
xor
pop
add
jge
test
jne
xor
insb
and
es
pop
xchg
add
pop
imul
xchg
mov
ficoms
lret
arpl
rcll
mov
fnsave
xchg
stos
lret
sbb
ret
shlb
jl
insl
rcrb
test
xchg
fstl
dec
out
jns
push
jns
mov
das
and
pop
xor
out
mov
mov
adc
test
out
out
dec
sarb
lret
fimull
test
add
mov
out
andb
xchg
push
inc
mov
adc
mov
loop
mov
inc
out
sub
push
jbe
mov
adc
cltd
jecxz
mov
sub
inc
fdivs
in
aaa
arpl
out
out
xchg
lea
rolb
stos
xor
lds
or
cwtl
push
mov
xchg
sti
sub
mov
out
mov
and
test
adc
add
popa
int
push
call
fs
stos
rcll
jno
andl
sbb
cmpsl
sbb
loopne
sub
int
cmp
outsb
xorb
cmp
movsb
push
aas
and
inc
lcall
dec
enter
inc
or
inc
xor
movsl
cmp
pop
into
aad
clc
iret
push
add
jne
xor
cli
add
aam
addr16
mov
dec
sbb
mov
repz
mov
xchg
jl
sbb
push
ror
push
sub
push
movsb
in
and
aad
les
cmc
mov
das
loop
push
shlb
in
fmull
push
dec
mov
inc
out
cs
nop
pop
xchg
push
and
leave
repnz
sbbb
push
out
adc
into
pop
adc
enter
rcrb
pop
lahf
cmc
data16
mov
pop
frstor
fs
dec
pop
push
jle
in
loop
mov
cmp
xor
jmp
mov
add
aam
lock
pop
add
xchg
sub
outsl
and
icebp
fbstp
pop
insb
les
or
aad
popf
das
cmpsb
popf
shll
lret
ret
mov
popf
in
pop
mov
les
and
out
cmpb
rorb
inc
jo
lock
sahf
fistpll
dec
jno
cmp
outsb
xor
push
adc
inc
getsec
or
adc
shll
push
in
mov
test
outsl
xchg
lret
sbb
and
xchg
in
iret
jnp
stos
cmp
out
pop
push
popa
ss
fisttpl
scas
xor
push
add
mov
getsec
or
adc
shll
push
in
mov
test
outsl
xchg
lret
sbb
and
xchg
in
iret
jnp
stos
cmp
out
pop
out
jecxz
jb
pop
sbb
test
ljmp
or
xor
jge
das
and
jnp
jbe
fwait
mov
imul
xchg
out
xor
jb
in
into
and
data16
sbb
cld
sbb
pop
scas
mov
insb
aas
mov
aam
push
inc
stos
in
out
loop
mov
cmp
mov
push
cmp
inc
test
add
movsb
jl
cltd
mov
jnp
and
push
add
inc
push
inc
scas
inc
call
jl
sbb
loopne
xchg
push
ja
cld
ficoms
pop
sahf
lret
pop
nop
mov
sbb
repz
pop
shl
ret
fbstp
jmp
mov
mov
in
out
or
and
dec
pop
mov
lret
aam
mov
adcb
xchg
cmp
inc
inc
out
es
adc
out
mov
push
pushf
lods
stos
xchg
mov
ror
bound
cmc
or
sbb
pop
imul
sub
int3
pushf
dec
stos
xchg
fwait
stos
and
inc
mov
roll
mov
mov
adc
les
mov
jns
sub
icebp
lds
dec
mov
inc
pusha
xchg
cmp
jae
jmp
xor
or
repz
popa
and
sbb
imul
adc
out
arpl
jecxz
pop
cmp
inc
jne
std
js
fs
mov
xchg
sub
idivl
pop
addr16
stos
pop
mov
fcoml
cmp
mov
mov
sti
addr16
mov
mov
lods
rcrl
lsl
mov
xchg
push
es
cmp
xlat
iret
cmp
cmp
xchg
and
push
add
inc
push
inc
scas
inc
dec
mov
pop
sti
loopne,pt
xchg
push
ja
cld
ficoms
pop
sahf
lret
pop
nop
mov
sbb
repz
pop
mov
mov
das
lahf
rcrb
scas
sbbl
sbbb
dec
in
out
or
and
dec
pop
mov
lret
aam
mov
adcb
sub
xchg
testl
cs
loop
push
f2xm1
ja
stos
xchg
mov
insl
adc
or
add
les
ljmp
xchg
mov
in
and
xlat
and
xchg
popa
mov
js
jmp
in
mov
adc
les
mov
jns
mov
scas
popa
rorl
add
int3
pop
fs
mov
jg
jae
jmp
xor
or
repz
sbb
jbe
xor
gs
test
xchg
fwait
jne
in
cmpsl
add
cmp
inc
jne
std
js
fs
mov
xchg
sub
stc
mov
addr16
loop
sub
push
push
mov
mov
sti
xor
jne
movsb
mov
cmc
fmuls
add
mov
xchg
push
es
cmp
ljmp
cmp
xchg
shrb
cld
cmp
dec
sbb
or
inc
inc
ljmp
lock
add
inc
add
mov
jle
inc
dec
inc
mov
movsl
adc
dec
rolb
sbb
push
mov
cmp
out
jb
pop
push
das
or
sahf
sbb
add
and
aaa
clc
addl
sbb
jne
rorb
push
in
jmp
idivb
insl
cmp
out
xchg
fmuls
cmp
nop
add
or
add
stos
xchg
pop
mov
cmp
sbb
xchg
push
sub
and
cld
iret
ret
or
and
inc
aaa
add
xchg
stos
push
cmc
jae
push
dec
imul
xchg
jbe
dec
or
mov
lea
xchg
inc
fidivrs
test
icebp
imul
push
outsl
add
negl
fdivl
xor
inc
sahf
ret
lods
fstpl
jmp
insb
in
insl
xor
dec
adc
jmp
in
dec
fisttpl
jle
mov
mov
addl
enter
cmp
cli
sub
imul
jle
call
pop
sbb
cmp
dec
repz
cltd
shl
pop
adc
jo
adc
dec
out
add
cld
mov
sbb
hlt
push
insb
push
jp
in
loope
dec
mov
xor
dec
repz
mov
xor
inc
imul
sub
sbb
data16
jge
pop
jns
adc
mov
mov
mov
sarl
mov
sahf
shlb
and
dec
repz
test
jo
sbb
sub
dec
jmp
xor
dec
repz
pop
pop
cmp
or
dec
mov
pop
enter
push
in
sbb
jl
loop
loopne
xor
inc
nop
into
jl
gs
out
sbb
int
out
inc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
scas
das
or
mov
lods
popf
and
xlat
out
xchg
loope
clc
push
lret
mov
pop
sti
sarl
imul
push
adcl
lods
cmp
or
inc
pusha
js
aaa
dec
jne
mov
nop/reserved
inc
and
xchg
and
repnz
mov
cmp
flds
mov
inc
pop
mov
push
lods
in
xor
mov
dec
mov
adc
dec
xchg
stos
das
lds
mov
sbb
stc
loopne
xchg
xor
or
loop
out
icebp
stos
jg
ljmp
jg
sub
leave
ja
int
sbb
mov
inc
in
imul
loope
sbb
pusha
cmpsl
shl
mov
test
ss
cwtl
inc
je
mov
clc
ljmp
cmp
ds
mov
and
stos
and
stos
push
jecxz
outsl
and
mov
loope
loopne
adc
shr
pop
xor
out
pop
imul
mov
mov
sub
outsb
adc
xchg
sub
push
popa
fcoms
inc
pop
out
pop
clc
adc
mov
jo
cmp
jns
sub
jns
mov
adcb
xchg
push
mov
jbe
ret
adc
sub
or
jp
movsb
xchg
jp
test
xchg
leave
adc
lods
inc
in
mov
fmull
xor
addb
bound
in
adc
sub
iret
or
add
xchg
adc
sbb
roll
jo
jge
imull
push
push
push
lea
pop
or
xor
stc
cmc
mov
inc
sub
ljmp
in
rclb
sbb
ret
test
out
cmp
or
add
fiaddl
mov
mov
lds
push
test
cs
pushf
movsb
arpl
or
xor
sub
nop
rcrb
xor
sub
pop
pop
int
dec
inc
and
and
cld
subb
sahf
pop
cmpsb
out
inc
cmp
add
inc
pop
jg
jns
pusha
sbb
and
mov
in
sbb
mov
dec
test
out
outsl
arpl
xchg
movq
adc
les
add
jbe
stos
fsubrp
push
pop
and
das
shrb
adc
sti
mov
stos
fnsave
stos
xchg
shlb
mov
insl
inc
jmp
mov
cmc
loope
rolb
push
xor
jg
add
fs
dec
push
fsubl
loopne
jg
test
jle
test
call
mov
insl
push
jmp
xor
dec
test
je
outsb
pop
jmp
mov
jns
sub
jge
lcall
inc
push
mov
ja
shl
subl
jecxz
jnp
or
xlat
xor
jne
lods
lret
jns
sbb
jns
jnp
lret
push
orb
jae
or
or
jns
add
and
dec
dec
lods
enter
xor
movsl
push
in
or
sbb
imul
inc
cs
nop
sub
cli
test
mov
jg
xor
xor
jnp
push
loopne
sub
add
jnp
loop
add
sub
dec
stc
inc
lock
adc
push
pop
add
cmp
into
inc
cmp
fwait
in
or
jb
xchg
pop
or
mov
sub
cmp
imul
push
sub
pop
insb
rcll
or
mov
stc
and
sub
jle
mov
repnz
xor
loopne
call
sub
and
je
outsl
cmp
mov
jg
inc
aaa
add
xchg
cmp
imul
lcall
loop
aaa
call
jp
mov
inc
inc
stos
jmp
fsubl
xchg
fwait
cltd
jp
call
mov
sub
ficompl
sub
inc
fdivs
in
jp
ret
outsl
or
in
incb
scas
mov
xor
arpl
push
and
int3
xchg
mov
cmp
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
arpl
lods
popf
and
xlat
out
cld
fadd
in
cmp
rclb
test
adc
sub
arpl
in
movsl
ret
sub
mov
sub
shrl
pop
and
jo
mov
dec
xor
repz
fcmovbe
add
jge
popf
xchg
mov
leave
cmp
cwtl
mov
jno
xlat
pop
sbbl
push
mov
push
jo
push
iret
or
cli
ret
in
dec
imul
jbe
push
or
lea
es
mov
and
mov
leave
shl
inc
lahf
dec
jo
fmull
inc
iret
les
popf
xor
pop
inc
cmc
es
outsb
mov
pop
lret
ficoml
mov
xchg
adc
mov
mov
lahf
adc
addr16
inc
insl
sub
xor
xchg
aam
int3
xchg
cmpl
jle
mul
sub
xlat
ja
mov
sti
ljmp
mov
ficomps
inc
sbb
add
pushf
sbb
imull
xor
mov
push
ret
fnstcw
ret
lock
jg
test
cli
int
aad
xor
imul
push
clc
sub
xchg
pop
mov
std
aad
outsl
ljmp
push
leave
dec
in
imul
shr
add
data16
lods
mov
outsb
and
insl
lcall
push
out
inc
movsl
iret
xchg
das
add
fcmovnu
fisubrl
fcomi
sarb
clc
xchg
xchg
les
mov
xchg
xor
in
sub
cmp
pop
je
out
mov
add
dec
mov
scas
cmp
mov
add
aam
fld
cmpb
in
inc
push
mov
imul
sti
xor
mov
fsts
sbb
cmpsb
sbb
xchg
cmp
clc
js
add
push
js
add
test
jle
iret
mov
aas
sbb
stos
scas
lds
xchg
and
mov
push
leave
pop
cmp
aaa
enter
int
jmp
mov
jns
sub
jge
lock
xchg
mov
loop
xchg
movl
je
and
lcall
adc
ja
push
mov
bound
pop
lahf
jae
add
sbb
push
ret
or
stc
fildl
lea
cmp
pop
sarb
cmp
pusha
ljmp
xchg
fmull
or
adc
jmp
fimuls
adc
rcll
mov
add
xchg
sub
cmp
pop
cld
sbb
jo
lea
jbe
shrl
fstp
cmpsb
push
mov
push
and
movsb
daa
xor
out
add
imul
mov
jne
andb
aas
cmp
mov
pop
sub
shr
cmp
sub
movsb
addr16
xor
leave
cmp
pop
xlat
push
pop
arpl
xor
stos
adc
adc
bsf
inc
or
xor
xor
loopne
stos
push
lods
push
fstl
lahf
or
lds
jns
inc
jo
xor
mov
outsl
aad
in
or
adc
cmp
fdivrl
push
dec
ret
cmp
aas
ljmp
add
fidivrl
dec
inc
lret
arpl
sbb
out
hlt
int
mov
cmp
mov
add
or
mov
jbe
pop
add
mov
imul
sti
xorb
jo
orb
das
dec
in
rep
das
pop
inc
test
ret
mulps
cld
adc
fbstp
mov
leave
cmp
cs
mov
insl
inc
out
gs
rolb
fsubrs
xchg
jp
fdivr
or
push
jo
cmpsl
mov
enter
stos
and
mov
mov
enter
and
movsb
sbb
sub
lret
stos
add
fistps
imul
xchg
les
push
das
ljmp
mov
js
imull
xor
ljmp
sbb
cmp
fbld
xchg
sbb
adc
test
das
xlat
subl
mov
fidivl
rcl
jb
pop
jae
and
jge
cmp
std
jno
int3
sub
sub
mov
stos
aam
lret
pop
icebp
xor
test
testb
and
stos
leave
repnz
adc
fs
insl
xchg
pop
jp
int
mov
sub
jle
or
popf
inc
mov
roll
out
pop
push
lret
xlat
arpl
test
sbb
movsl
push
push
repz
sbb
fisttps
shlb
dec
or
movsb
jb
inc
add
push
and
push
js
arpl
mov
les
pop
int
outsb
imul
lahf
dec
cmpsb
xchg
dec
movsb
mov
fstpl
mov
mov
adc
cmp
add
insb
test
scas
add
andb
div
lahf
movsb
int
cmpl
loop
imul
xchg
testb
pop
sub
cs
icebp
add
aam
xlat
cmpsl
jle
lods
sbb
jmp
hlt
inc
int3
sub
mov
inc
sbb
push
mov
fnstsw
jns
flds
aas
sti
loopne
out
push
sbb
inc
lock
outsb
stos
and
cs
cs
inc
inc
mov
and
test
sbb
js
inc
ret
inc
out
xchg
cmpsb
cmp
nop
jecxz
push
jbe
lret
imull
xor
mov
push
ret
fstps
leave
sub
pop
and
cmpsl
lea
sbbb
mov
out
add
int3
addb
cmp
mov
sbb
adc
jns
add
int
data16
lods
mov
outsb
and
insl
lcall
rclb
leave
je
push
in
adc
fcomi
sarb
clc
xchg
xchg
cmp
push
fs
push
pushf
sahf
mov
decl
inc
decb
divl
lods
push
ficomps
pop
add
aam
or
fsubrp
add
fldenv
jbe
push
mov
imul
sti
xor
mov
flds
sub
xchg
cmp
clc
js
icebp
add
pop
inc
and
mov
jle
iret
mov
aas
sbb
stos
scas
aad
cmp
add
or
xor
imul
stos
pop
jmp
mov
jns
sub
jge
or
addr16
loop
xchg
movl
je
data16
cmpsb
lahf
outsb
inc
in
aas
data16
ja
mov
jp
lret
push
outsb
cli
sub
or
fwait
push
pop
mov
outsb
lods
sarl
or
rolb
pop
scas
cmpsb
push
jnp
sbb
push
outsb
mov
add
xchg
sahf
flds
stc
rorb
xor
pushl
out
pushf
mov
jl
mov
pop
lock
test
sub
mov
push
add
outsb
or
fxch
adc
mov
sub
push
int3
dec
fstpt
mov
data16
inc
notl
leave
stos
cltd
jle
fnstenv
inc
xchg
outsl
mov
xor
hlt
fucomp
shl
add
shl
xchg
loop
push
arpl
cli
sub
test
arpl
push
lds
xor
ss
loope
in
xor
or
inc
xor
scas
jnp
jno
mov
loop
mov
clc
addl
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
xchg
inc
popa
jecxz
adc
cltd
data16
or
fsts
jle
dec
mov
dec
inc
push
insl
push
or
outsl
inc
xor
cwtl
cwtl
pop
sbb
outsb
cli
insl
xchg
cmpsb
sub
mov
stc
stc
jno
popf
rcrb
lods
mov
outsl
jg
scas
lret
cmpl
jg
inc
inc
and
dec
pop
mov
inc
inc
in
xor
imul
cmp
mov
xor
sub
mov
test
dec
ret
bound
sub
mov
dec
add
sub
jno
mov
xor
loope
dec
mov
mov
dec
popa
mov
repz
cltd
jecxz
arpl
bound
daa
xchg
lcall
cmpsb
push
jne
out
cmpsb
or
jg
shrb
shll
mov
lock
mov
in
ljmp
mov
adc
mov
xchg
xor
add
sbb
xor
lea
or
pop
daa
ror
cmp
loopne
mov
scas
test
push
dec
ja
ret
iret
adc
cs
jo
adc
subl
mov
adc
sub
int
sub
outsl
mov
jmp
popf
loop
xor
dec
mov
pop
cld
pusha
and
rcrb
icebp
adc
pop
xchg
rolb
push
lds
jle
int3
stos
es
je
pop
lret
add
pop
or
pop
aaa
mov
mov
push
ds
dec
movsl
pop
fs
jno
sub
adc
cs
or
arpl
dec
add
pop
movsb
mov
dec
mov
pop
mov
fwait
mov
test
add
push
mov
adc
loope
and
out
lds
in
mov
push
and
cmc
adcb
mov
enter
mov
popf
cmp
insb
and
jbe
leave
push
push
lock
sub
aam
cmpl
inc
lock
popa
dec
dec
aaa
jo
lret
sbbl
loop
cld
pop
and
cli
jle
cwtl
jb
cmpsl
fnstsw
sub
jns
repz
stc
mov
gs
cmpl
sarl
out
cmpsl
movsl
mov
test
jmp
pop
sub
push
pop
loop
imul
or
rcrl
sti
pop
lcall
xor
sub
in
pop
xchg
mov
in
nop
sar
add
or
lsl
inc
lcall
sub
clc
out
scas
adc
jle
mov
imul
mov
hlt
mov
addl
and
mov
cli
jns
mov
scas
imul
jnp
adc
xorl
int3
call
test
jl
mov
push
add
imul
jo
std
push
xor
lea
in
cmp
jmp
or
xchg
lahf
sub
lret
push
dec
lds
cmpsl
dec
psubq
sub
jl
add
inc
jnp
ror
cld
cld
sbb
add
or
ja
jecxz
ret
or
ss
into
or
pop
push
pop
outsl
filds
cmpsl
push
ljmp
popf
push
dec
pop
xor
sahf
ljmp
sub
push
and
mov
sti
push
in
mov
push
out
bound
jl
jbe
aas
outsb
cmp
arpl
pop
mov
or
mov
mov
popf
lret
inc
push
stos
lret
out
sub
jne
mov
cltd
push
daa
test
dec
stc
pop
sbb
sarb
xchg
gs
xchg
movsb
sar
cmpsl
dec
add
dec
inc
mov
cmp
stos
fcoms
pop
fisttps
test
adc
mov
shrb
sbb
jno
and
test
xchg
ljmp
cmpsl
pushf
ficoms
adcb
mov
xchg
lods
stos
sub
cli
mov
dec
add
lock
push
mov
test
mov
and
fstps
cld
shl
cld
adc
cmp
mov
push
incb
mov
dec
push
xor
mov
cltd
pop
add
rcrl
mov
push
mov
cs
pop
lret
sub
mov
lsl
and
push
push
lds
cmp
jbe
adc
pushf
xchg
sub
mov
cltd
dec
jae
sub
pop
inc
push
ffree
decb
jmp
mov
lock
add
ljmp
adc
jno
or
pop
imul
mov
in
rcrb
mov
enter
xchg
adc
es
in
stc
gs
or
sbb
push
je
xor
and
dec
jns
pop
cltd
push
cs
push
lahf
xchg
hlt
repnz
outsb
adc
adc
cld
xchg
aam
cmpsl
aad
add
std
pop
cmp
sbb
mov
mov
shlb
in
loop
ss
jne
xchg
adc
inc
cwtl
inc
pop
push
inc
mov
xor
mov
int3
push
or
cmpsb
or
push
pop
adc
sub
mov
movsl
mov
arpl
or
imul
test
xchg
cmp
addr16
repnz
js
dec
pop
shlb
pop
cmpsl
push
jne
arpl
mov
push
repz
cmp
in
pusha
sbb
push
dec
jae
loope
or
xor
lret
imul
and
mov
lea
cmp
jp
movsb
sbb
mov
ja
jae
mov
mov
popf
inc
xor
push
sbb
std
out
adc
in
mov
add
push
jbe
xor
or
mov
xchg
mov
xor
pop
or
adc
adc
cmc
pop
cwtl
push
xor
push
mov
xor
xor
push
push
sub
push
stos
iret
adc
cs
or
jne
loope
mov
dec
lret
cmp
push
aad
pop
push
cli
xchg
lods
pop
std
addr16
and
outsl
dec
call
lds
and
fcmovne
repnz
xor
mov
xchg
dec
les
loope
pop
xchg
dec
lret
mov
push
inc
jno
sahf
hlt
mov
sbb
iret
outsl
hlt
lods
push
faddp
xorl
add
jnp
outsb
test
shrb
pop
push
cltd
shll
jae
jg
aaa
pop
fisttps
push
test
aam
mov
punpckldq
stc
xchg
in
dec
movsl
pop
fs
xchg
leave
sub
data16
mov
push
cmpxchg
mov
mov
arpl
ja
or
cmp
loope
int
shlb
aas
iret
jp
repnz
scas
insl
sahf
inc
mov
pop
pop
pusha
test
lahf
sbb
stc
or
stos
mov
inc
lods
pop
cmp
scas
sub
sbb
aam
fistl
les
or
inc
mov
push
mov
inc
popf
cmpsl
outsl
iret
inc
xchg
stos
arpl
cmp
outsb
shll
insl
jne
repz
rcrb
xchg
arpl
push
gs
push
dec
push
xchg
add
inc
pop
int3
shl
jo
xchg
adc
or
push
popa
lods
insb
adc
hlt
leave
repnz
es
or
dec
cmp
pop
jb
mov
rorl
pop
outsl
inc
shlb
in
aad
lcall
nop
out
enter
sub
lret
enter
call
jg
stc
cs
push
nop
push
push
pop
add
ret
js
add
addb
pop
or
push
jae
mov
cmp
pop
popa
mov
pop
sarl
shrb
cmpsl
test
mov
and
hlt
cmp
pop
push
sub
jb
iret
arpl
scas
aam
dec
arpl
pop
daa
and
inc
inc
pushf
scas
aam
dec
arpl
sbb
imull
je
inc
insb
mov
inc
out
mov
cmp
add
pop
cmp
mov
xlat
int3
dec
push
inc
xor
dec
sbb
ja
punpckhdq
movsl
xor
mov
jge
pop
jb
outsb
imul
mov
out
cmp
xchg
jge
imul
arpl
adc
and
push
test
aad
push
mov
push
cld
xor
push
stos
xor
inc
push
ja
xor
movsb
xchg
pop
pop
inc
xor
mov
and
sub
xchg
push
mov
decl
push
ja
xor
insb
xor
popf
lahf
test
imul
xor
lret
sbb
jnp
mov
push
push
add
push
inc
das
xor
xorb
hlt
sub
ss
xor
insl
loop
pop
scas
jg
dec
sbb
es
add
loop
adc
jae
jb
push
ficompl
bound
push
mov
push
pop
add
jae
bound
dec
data16
xchg
pop
clc
arpl
ja
aaa
dec
push
xchg
and
sbb
cmp
shrl
shrl
adc
lods
mov
js
push
xchg
stos
xor
enter
push
cli
sbb
testb
inc
outsb
loop
cmpsl
mov
scas
int
or
scas
dec
inc
sbbl
into
mov
mov
lret
xchg
ljmp
ret
dec
sub
add
and
inc
mov
mov
inc
insb
pop
xor
xchg
aaa
movsb
test
inc
shlb
in
aad
lcall
imul
inc
cmpsl
lret
enter
or
outsl
add
pop
das
and
push
adc
dec
out
call
and
cltd
mov
hlt
stos
aam
nop
sahf
mov
mov
orl
sbb
xchg
push
and
dec
stos
lahf
pop
xchg
mov
in
push
in
mov
pushf
scas
aam
dec
arpl
jo
sub
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
pop
shrb
cltd
pop
xchg
div
mov
mul
push
adc
stc
data16
jbe
mov
push
icebp
pop
mov
loop
push
jns
inc
sub
mov
or
push
pop
arpl
outsl
insb
test
jg
or
cmp
push
jg
stos
pop
aas
mov
test
out
or
loopnew
sbb
call
and
aas
mov
out
mov
adc
or
cmp
insb
dec
test
mov
orl
cmp
test
repnz
pop
lahf
aas
lahf
sub
insl
jno
repnz
dec
aaa
sbb
xchg
in
cmp
jg
js
rcr
rcr
ret
push
sbb
mov
fwait
mov
xor
xchg
lods
fildl
lock
mov
ljmp
jl
std
movsl
insl
xchg
jb
mov
xchg
add
and
cmpsb
loope
push
inc
adc
mov
std
xchg
outsl
xor
fistps
in
sbb
cmp
call
xchg
movsl
imul
lcall
cld
paddusw
call
incl
cli
imul
sbb
in
push
cmp
shll
ja
out
push
cmpsb
ljmp
mov
jg
fisubrl
das
mov
js
test
shlb
stc
fwait
pusha
sti
xchg
xchg
push
stc
jns
vpcmpeqd
jecxz
lods
cmc
pop
sbb
sahf
mov
or
push
mov
sti
cmp
scas
adc
inc
div
dec
cmp
fcom
mov
pop
sub
cmp
sahf
sub
pushf
js
mov
movsl
inc
lret
out
add
dec
or
rcll
and
cmp
and
imul
mov
adc
push
outsb
loope
mov
add
add
jge
jl
pop
xchg
sub
sar
int
shrl
dec
negb
add
mov
bnd
in
shlb
or
data16
scas
add
inc
or
in
push
ret
out
lret
sbb
lret
out
and
mov
adc
cs
jne
fstps
mov
xor
push
inc
stc
dec
inc
xchg
ret
and
call
imul
stos
lods
inc
add
pop
loop
scas
mov
fcom
stos
lods
pusha
dec
lock
pop
push
add
mov
and
leave
jbe
roll
rcrb
int
mov
fmulp
jns
inc
add
fucomip
daa
jno
xor
sbb
notb
out
clc
mov
outsl
pusha
mov
fimuls
aam
push
inc
cltd
mov
dec
nop
imul
add
lret
pop
mov
out
test
aas
pop
shll
std
inc
mov
sub
insl
test
cltd
xor
iret
rorl
mov
ret
cmp
movsb
fmul
adc
out
in
fwait
pop
jle
pusha
bound
popf
pop
dec
cmp
ja
addr16
mov
mov
ficompl
xlat
cwtl
ss
lds
test
cmp
stc
cmpsb
pop
push
or
out
ja
xchg
lret
adc
xor
clc
mov
repz
fistpl
lgdtl
cltd
rcrl
xchg
and
aaa
imul
js
xchg
pop
sub
enter
cmc
inc
cmp
fdivs
popa
mov
ret
xchg
cwtl
movsb
cwtl
xchg
sbb
mov
or
sbb
xor
jmp
jb
pusha
sbb
insb
lock
mov
fdivr
mov
rolb
mov
sahf
jmp
clc
fs
outsb
in
adc
and
inc
dec
sbb
ss
push
mov
int
daa
xlat
mov
mov
inc
fimuls
loope
cmp
ljmp
fmull
mov
lods
or
xor
test
mov
inc
sub
in
scas
sbb
flds
or
pop
mov
or
das
fstpt
xchg
in
ret
ljmp
lock
push
lahf
xor
inc
lret
jne
push
in
jecxz
inc
fldenv
mov
int3
pop
dec
add
adc
inc
push
add
jecxz
das
mov
xchg
jbe
clc
push
pop
pop
jno
rcll
out
mov
pop
pop
in
stos
inc
jns
fisttpll
jnp
adc
and
insl
xchg
xor
mov
test
adc
stc
mov
fidivl
mov
lock
or
out
adc
sub
mov
in
bound
jg
sbb
lods
jp
jp
lea
std
xchg
mov
orl
push
adcb
test
test
lahf
xor
cld
sarb
xchg
out
push
sub
jl
ret
in
mov
iret
test
mov
leave
cltd
cmc
mov
cltd
out
into
push
sbb
ljmp
inc
push
int
dec
mov
loopne
test
xchg
jmp
insl
shlb
fwait
cmpsb
mov
scas
into
les
pop
movsb
cwtl
mov
lret
add
or
mov
pop
cs
outsl
xchg
mov
out
shrb
push
mov
mov
cwtl
cmp
pushf
ds
dec
dec
mov
pop
data16
into
mov
fdivr
sub
ror
xor
mov
inc
mov
sbb
xchg
bound
sahf
mov
addr16
das
jo
cmp
mov
les
xchg
and
mov
mov
lods
addr16
les
out
cmp
fadds
les
aas
rdpmc
xor
and
jmp
into
sbb
scas
cmp
movsb
outsl
xlat
jno
xor
gs
push
cmpsl
inc
stc
mov
mov
or
mov
shrl
jl
cwtl
cld
adc
sub
testb
stc
sbb
inc
or
int
cmp
pop
cmc
xchg
jmp
jp
inc
rclb
fs
daa
lds
aad
push
movb
adc
out
and
cmp
pop
fimull
cld
jp
jne
pop
enter
add
sbb
pop
pop
push
jl
adc
mov
imul
adc
xchg
push
and
xchg
xor
je
adc
js
or
sub
sub
inc
mov
iret
sbb
outsl
cmp
cmpsb
jg
lods
movsl
aad
mov
cmpb
popa
imul
lods
ffree
mov
pop
cmp
lock
std
mov
sbb
in
movsb
mov
lcall
ret
mov
test
fldt
adc
je
test
or
mov
sub
push
scas
jb
inc
call
pop
jle
ljmp
imull
iret
dec
rorb
insl
loop
jnp
pop
pop
arpl
xchg
out
dec
shrd
push
sbb
inc
aas
push
rorl
dec
sbb
scas
out
mov
add
shl
sti
push
jb
movsb
int3
adc
sahf
dec
mov
mov
cmp
icebp
push
xchg
pusha
in
sub
std
test
ljmp
pop
or
mov
int3
push
push
mov
dec
aaa
push
jmp
gs
inc
cmp
iret
or
paddsw
sbb
dec
add
xchg
daa
ret
pop
dec
cli
gs
cmpsb
fisubrs
xor
push
lahf
imul
testb
sbb
inc
aas
es
xchg
pop
dec
lret
mov
data16
jnp
stos
pop
add
pop
insb
es
mov
bound
repnz
je
sti
mov
iret
mov
addl
cmp
push
in
push
movsb
xor
in
nop
imul
fs
xchg
bound
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
cmp
iret
adc
shlb
adc
lds
mov
jge
in
jns
pop
sub
je
cmc
stos
mov
and
mov
data16
int3
push
xchg
xor
bound
add
push
sbb
jmp
lret
leave
ret
dec
xchg
mov
in
add
sub
xchg
jae
clc
push
fnsave
jns
stc
sar
out
sbb
into
mov
popf
xlat
cmp
fstpt
das
mov
out
adc
mov
insb
xor
sbb
jg
add
mov
outsl
lods
mov
push
ror
mov
cltd
sbb
mov
in
aad
sar
repnz
pop
dec
pshufw
mov
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
loope
xchg
dec
dec
xchg
outsl
aad
outsb
cmp
and
call
nop
movsl
xor
sbb
adc
sarb
bound
sbb
scas
test
push
adc
xlat
das
jnp
sbb
daa
imul
addr16
xor
mov
xchg
call
sbb
insb
ret
outsb
pop
clc
jmp
pop
aas
or
pop
push
add
mov
mov
inc
je
push
cmp
stos
aam
xor
mul
push
adc
mov
adc
mov
adc
mov
adc
cli
pmaxub
and
imul
addr16
cwtl
ljmp
pusha
shrl
pop
clc
jmp
pop
rcr
mov
push
push
xchg
push
ds
xor
mov
push
mov
ljmp
mul
push
adc
mov
adc
mov
adc
mov
adc
xorl
jg
jne
add
add
sbbb
add
push
jbe
jmp
repz
mov
xchg
lods
in
push
test
dec
loop
jnp
insb
mov
les
push
dec
enter
aad
and
adcb
dec
fldenv
push
sbb
add
rorl
add
lock
add
push
adc
and
in
data16
and
cli
xor
rcrl
add
add
mov
lock
sub
mov
rclb
jnp
jg
push
nop
outsl
ja
sbb
mov
or
mov
shr
loopne
cs
xor
adc
mov
imull
push
repz
cs
push
jns
push
repnz
test
push
jbe
fdivrs
jge
in
shlb
dec
xor
add
repnz
mov
sbb
dec
jnp
xchg
dec
incb
repnz
pusha
cmp
adc
fsubrl
into
int
dec
xchg
aaa
sarl
clc
xor
sub
jmp
xchg
dec
xor
adc
pop
insl
fimull
jecxz
sub
mov
mov
leave
mov
inc
add
mov
ret
inc
push
lea
or
add
std
push
add
ret
mov
mov
aaa
mov
in
mov
cmpsb
std
ds
xchg
adc
and
addr16
add
dec
in
cmp
jmp
repnz
adc
sub
and
movsl
xorl
dec
ds
nop
icebp
jg
and
test
push
rcrl
stc
fldt
cmc
pusha
xchg
mov
push
inc
lea
cltd
pusha
in
mov
int
rclb
ret
or
lcall
lea
into
xchg
cmp
test
rolb
subb
mov
cmp
cltd
inc
jl
ficoms
lods
mov
sahf
push
mov
add
push
dec
xor
loopne
test
js
imul
push
add
xchg
sub
fdivrp
xor
cmpsl
js
mov
sub
bound
jp
xor
shrl
cmc
clc
movsb
imul
loope
lods
jmp
push
mov
jmp
push
xor
sbb
mov
lods
mov
sahf
push
jb
jnp
movsb
clts
dec
mov
mov
stos
roll
nop
mov
fwait
push
lods
imul
fmuls
adc
sub
and
lcall
push
int
push
inc
int3
add
add
insl
sbb
rcrl
fldcw
popf
jae
inc
cwtl
pop
ret
enter
xchg
gs
push
insl
mov
xchg
call
jne
ficoms
lods
mov
sahf
push
pop
pop
ror
xor
fs
mov
jne
outsl
jno
fwait
sbb
push
cmp
pop
test
cmp
repnz
or
push
pop
ret
repnz
sbb
subl
cmp
scas
loop
lahf
adc
sub
xchg
pushf
idivb
mov
xchg
gs
push
insl
mov
dec
cmpsb
hlt
mov
adc
inc
in
scas
sub
outsb
test
jecxz
xor
mov
cmp
push
icebp
ret
and
mov
push
ret
and
roll
movsl
leave
xor
lret
mov
imul
mov
stos
push
fstpl
sarb
sub
jecxz
cmpsl
pop
ljmp
adc
mov
popf
mov
or
imul
mov
and
jns
adc
push
mov
jmp
add
dec
add
push
fildl
sbb
pop
repz
mov
push
sbb
shlb
mov
jmp
das
mov
js
dec
scas
lods
stc
push
sub
stc
inc
movl
rcll
mov
pop
in
jg
pop
mov
xchg
jb
outsb
divl
std
push
mov
fbld
cli
sub
inc
xchg
and
pop
inc
inc
rorl
sbb
ret
ss
inc
sbb
fbstp
jecxz
cmp
push
inc
xchg
mov
popf
or
bound
mull
pushf
test
sub
jno
adc
mov
push
test
cmp
jb
call
ljmp
std
fs
cmc
pusha
sub
out
cmp
cmp
xor
add
mov
cmp
das
push
jb
cmp
cwtl
in
and
sbb
dec
adc
gs
dec
lock
jg
sti
dec
arpl
push
repnz
and
lods
dec
dec
fists
and
testb
jae
pop
sbbb
cld
clc
cmp
int
es
mov
mov
dec
psubw
push
push
xor
mov
fldenv
and
jl
rdtsc
sbb
and
mov
cmpsl
or
add
xor
xor
xchg
cltd
add
mov
lods
test
stos
scas
xor
jbe
cld
call
sub
push
aaa
mov
jns
xchg
int3
insl
adc
into
inc
jge
iret
add
sbb
and
ds
cmp
sti
test
orl
add
aam
push
mov
sub
push
loope
test
jb
sub
imul
xchg
inc
clc
popa
jnp
xor
mov
or
out
js
add
clc
pop
adc
adc
stos
inc
cmp
lods
jmp
adc
fwait
add
push
jnp
mov
sahf
sbb
test
cmpl
push
movsb
int
pop
xchg
mull
clc
rcrl
popa
xchg
mov
add
fisttpll
xchg
lods
das
sub
sbb
mov
ret
aam
jne
aaa
xchg
insb
jmp
mov
xchg
xchg
jecxz
inc
pop
cmp
test
ss
push
pop
int3
or
xor
sub
xchg
xor
mov
vmptrst
xchg
daa
fmul
daa
test
data16
outsb
adc
sub
divl
and
dec
jno
sbbb
test
cld
mov
nop
pop
sub
fsts
insl
cmp
mov
negb
rcll
adc
push
and
jmp
pop
in
adc
xchg
data16
pcmpeqd
xchg
and
int
nop
and
add
mov
jo
xor
stos
jmp
shlb
push
shr
aaa
sti
inc
pushf
mov
or
mov
lods
mov
dec
xchg
lahf
mov
jle
out
cmp
inc
push
pusha
jbe,pt
mov
adcl
clc
lods
fcmovb
cmp
push
dec
mov
ljmp
xchg
add
les
verw
mov
adc
call
and
pushf
aam
xchg
or
movsb
push
fstps
imull
xchg
xlat
sbb
roll
hlt
jmp
cs
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
sbb
push
outsl
inc
pop
xorl
and
adc
mov
adc
data16
xchg
jne
or
pop
sbb
adc
test
jmp
add
mov
adc
mov
adc
sbb
nop
dec
in
shll
test
mov
test
push
adc
jg
aas
enter
lock
lds
stos
jne
and
push
adc
imulb
cmpl
mov
dec
imul
or
adc
xor
push
rorl
pop
add
push
addr16
insb
lods
or
lcall
mov
inc
insl
movl
movl
mul
push
adc
mov
adc
mov
adc
mov
adc
inc
mov
mov
inc
lds
stos
jp
jle
and
rcrb
ret
outsb
and
call
int
mov
mov
lods
mov
sahf
push
pop
addr16
mov
aaa
pop
add
push
cmpsb
repnz
jle
or
popf
xchg
adc
cld
mov
pop
cmovge
add
dec
cltd
pop
inc
nop
fdivs
movsb
sub
push
add
push
adc
mov
adc
mov
adc
mov
adc
xchg
mov
in
jns
xchg
out
leave
sbb
adcl
push
adc
call
inc
xchg
pop
out
in
mov
inc
movsl
add
and
addr16
lret
clc
cmp
stc
add
rcrl
mov
out
adc
mov
adc
push
fmull
popa
sti
cmp
push
ss
and
push
mov
adc
cmp
outsl
cld
jecxz
mov
xlat
lods
cmp
lcall
sbb
sub
shl
and
cmp
in
push
jle
pop
call
mov
xor
mov
call
xlat
mov
cs
testb
push
mov
sahf
loope
cmp
or
xchg
adc
jno
cmpsl
push
out
fs
push
push
enter
aam
out
push
sarb
push
adc
loop
xor
adc
inc
pusha
mov
push
sahf
mov
test
inc
and
inc
pop
mov
js
cltd
cmp
add
sub
fstl
mov
test
mov
cmp
pop
subl
imul
add
adc
movsb
std
dec
push
jb
pop
mov
mov
les
mov
push
and
and
rcrb
outsb
xchg
es
out
pop
ja
push
sbb
pop
bound
arpl
std
sbb
in
into
fists
jae
fcoms
pop
lret
xchg
mov
imul
in
cmp
lret
repz
pop
aam
call
lret
adc
andb
cltd
iret
sbb
push
jnp
inc
divb
sbb
mov
out
mov
dec
aaa
filds
je
lock
jne
jnp
shl
hlt
repz
and
lret
test
ljmp
jo
and
mov
aaa
addr16
mov
mov
sub
xchg
jns
scas
jb
push
das
xchg
xor
lods
out
cmc
cli
sti
sbb
loop
xchg
sbb
inc
inc
imul
jb
popa
push
popa
adc
stos
cli
xchg
xchg
jno
into
cmp
push
xchg
lcall
push
jl
push
aam
or
call
in
mov
bound
pop
and
jb
movsl
stos
int3
insl
push
lret
cmp
cmpl
test
xchg
xor
mov
adc
mov
je
ret
jb
clc
jecxz
insb
aam
inc
sti
xchg
xor
sub
inc
aas
in
mov
xchg
push
xchg
mov
popa
push
hlt
add
aas
push
xor
das
push
insb
fwait
data16
jle
js
movsl
xchg
dec
xchg
pop
daa
adc
js
add
fwait
cwtl
ds
push
push
mov
shlb
xchg
ss
popf
daa
add
ljmp
add
cld
cmc
adc
push
movsb
dec
fldl
sub
inc
dec
sbb
pop
int3
pop
xchg
mov
loope
mov
add
xchg
cmp
pop
das
pop
dec
dec
mov
test
out
jg
dec
out
cmpsl
mov
pinsrw
jbe
mov
rorl
xor
arpl
or
mov
cmp
or
cmpsb
lcall
sub
mov
xchg
mov
pop
ja
repnz
or
jl
push
mov
daa
pop
int
and
adc
insl
or
int
mov
lret
imul
into
jno
bound
stos
in
cmp
push
cwtl
mov
lret
mov
aad
mov
jb
inc
lds
es
add
jo
fbld
or
lods
xlat
xor
pop
into
dec
lcall
sub
jmp
xchg
mov
mov
ja
incl
test
mov
inc
cld
movsb
repz
leave
push
inc
pop
sub
fucom
cmp
rorb
loop
gs
loopne
xchg
xchg
pop
xchg
pusha
lahf
hlt
pop
mov
outsb
nop
pop
add
jae
dec
sbb
pop
push
les
push
pop
mov
adc
and
mov
sahf
dec
fildl
shl
dec
jecxz
sbb
inc
fidivs
jne
pop
jmp
or
sbbl
lret
xor
addr16
xor
sbb
xor
push
iret
dec
stos
mov
js
cmp
mov
insl
stos
jae
push
push
ljmp
pusha
dec
cmp
pop
dec
push
add
scas
fidivrs
leave
mov
out
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
aas
cmc
repz
push
loopne
sti
pop
in
cmp
rolb
lahf
xor
mov
push
adc
fcom
xchg
dec
sub
push
les
adc
xor
xor
jnp
adc
push
mov
sub
xchg
sub
shlb
xor
popa
pop
sub
fstps
ljmp
jae
or
inc
clc
into
jb
mov
adc
jb
push
xchg
fs
popa
cwtl
std
lods
mov
adc
mov
adc
mov
adc
mov
adc
aas
cmc
repz
push
loopne
dec
mov
cmp
and
mov
inc
fnstcw
out
adc
sub
movsl
std
jle
lcall
dec
xor
aas
xchg
xchg
out
arpl
xor
test
mov
mov
inc
cmc
repz
xchg
pop
addr16
mov
adc
imul
shll
dec
insb
jnp
mov
adc
mov
adc
mov
adc
xlat
mov
mov
test
xchg
adc
or
fmuls
xchg
mov
inc
add
jecxz
pop
lods
ja
push
in
jbe
and
push
jae
pop
mov
inc
lret
ret
negl
jge
out
incb
dec
xor
xor
nop
inc
or
push
stos
cli
nop
in
iret
pop
clc
loopne
push
adc
loop
xchg
arpl
adc
sbbl
mov
pop
sahf
mov
push
sbb
xchg
popf
mov
dec
test
mov
loop
pop
adc
xchg
pop
sub
sbbb
dec
jmp
xchg
enter
movswl
push
and
notl
mov
mov
cmp
shrl
inc
mov
loop
mov
sarl
and
enter
mov
pusha
xor
pop
inc
pop
aad
adc
pop
adc
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
decl
ret
das
insl
movsl
cmp
das
insb
shrb
sarl
sahf
insb
mov
addr16
pop
mov
xchg
adc
mov
in
inc
aad
mov
rol
sub
or
enter
bound
xchg
movsb
sub
push
add
push
adc
mov
adc
fdivrl
andb
xchg
inc
repz
cmc
in
sarb
enter
jl
and
or
jae
popa
stc
lods
into
mov
insl
inc
sbb
mov
and
inc
adc
cltd
lods
push
sub
enter
cmp
push
push
lcall
insl
arpl
adc
mov
adc
popf
cli
lods
xor
mov
mov
push
mov
sahf
pop
xchg
xor
push
adc
cmc
push
xor
mov
adc
mov
in
push
call
ret
add
inc
dec
dec
out
add
and
popf
pop
ljmp
movl
mul
push
adc
or
jecxz
pop
add
iret
cld
sbb
jnp
push
je
sub
and
xchg
cmc
dec
fmull
xchg
sbb
mov
pop
out
nop
scas
mul
xlat
xorb
or
dec
bound
mov
scas
test
sbb
dec
clc
jno
js
loopne
xchg
cs
and
cmpsl
xchg
mov
push
xchg
or
cmc
mov
mov
mov
test
xor
pop
mov
clc
inc
jmp
jno
sbb
inc
jo
outsl
movsb
or
mov
inc
cld
in
jp
outsl
hlt
xchg
pop
xlat
nop
dec
cli
mov
jle
push
out
outsb
fdivl
add
out
mov
mov
std
dec
dec
cmp
test
insb
cmp
jns
lods
mov
xchg
dec
push
arpl
into
sub
or
xchg
or
and
loopne
sti
lods
mov
icebp
push
mov
adc
jae
mov
and
fcoml
dec
cmp
vsqrtps
xchg
leave
mov
xchg
pushf
fstpt
jle
ss
test
mov
xor
into
adc
pusha
mov
fdivp
dec
cmp
pop
loop
pop
ja
cld
shr
jae
out
cmp
cmp
and
xlat
xor
in
aam
in
and
mov
dec
jg
lcall
sub
add
adc
ss
int3
dec
add
inc
clc
jns
imul
lea
and
rolb
xor
iret
iret
jecxz
cmp
testl
out
mov
mov
xchg
xor
dec
or
loopne
mov
les
out
stc
adc
scas
popf
mov
sahf
testb
es
sub
mov
adc
xor
in
inc
adc
fidivrl
inc
mov
and
xor
scas
std
lock
adc
movsl
mov
inc
int
mov
pop
mov
test
jle
loope
dec
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
jno
in
push
mov
and
sbb
sbb
push
push
insb
pop
mov
mov
rorl
dec
out
inc
cwtl
ds
out
shl
jb
pop
xor
mov
icebp
cs
test
push
fldt
insb
pop
mov
mov
insb
data16
mov
dec
mov
xor
fidivs
icebp
mov
js
mov
push
xchg
in
and
jecxz
pop
and
cs
test
iret
xor
dec
push
insb
pop
mov
mov
push
or
fldt
mov
ficoml
stos
loop
leave
lods
fisttpll
pop
dec
lcall
inc
loope
inc
add
imul
sub
and
lock
cs
test
aas
jb
movsb
xor
push
insb
pop
mov
mov
mov
mov
mov
mov
aaa
adc
lods
js
adc
in
dec
and
repz
or
xchg
cli
mov
pusha
mov
cmp
cs
test
rorl
and
insb
pop
mov
mov
fsubl
imulb
int
dec
fbstp
lock
les
xchg
mov
cmp
aad
stos
std
xchg
je
dec
mov
pop
movsl
out
and
imul
xchg
mov
xchg
pop
iret
or
test
je
sbb
mov
dec
cwtl
mov
push
cld
fs
mov
mov
cmp
xor
shll
jno
lret
dec
ss
or
in
test
cmp
mov
lret
ja
pop
popf
icebp
xchg
mov
fdiv
js
jbe
pop
rol
add
daa
cmp
fdivl
pop
gs
imul
popf
les
outsl
push
adc
xlat
imul
lock
sarl
sbb
pop
mov
pop
push
sti
icebp
push
xchg
cmp
or
dec
stc
int
mov
mov
xchg
and
int3
arpl
xor
clc
xor
jp
lcall
je
outsl
sub
xlat
sub
dec
cmp
pop
cmpsb
sub
insb
pop
ret
cmp
inc
les
sahf
xchg
mov
mov
pop
popl
push
jmp
xchg
fildl
gs
fldcw
xor
sbb
idiv
mov
add
ror
arpl
std
test
call
sub
add
icebp
ljmp
pusha
bound
test
push
fstps
lea
out
add
stos
pop
xchg
iret
mov
xchg
xor
lret
mov
xchg
ret
sbb
inc
mov
aaa
loop
das
cmpsb
test
cmpsb
fsubl
subb
aad
xor
sub
lret
jne
dec
pop
rorb
stos
dec
jp
fcmovnbe
or
jo
mov
mov
sbb
in
fmuls
sbb
lahf
mull
les
push
call
scas
imul
movaps
cmp
cmpsl
xlat
add
fucomi
call
or
sbb
addr16
in
imul
jecxz
mov
cs
and
sub
lcall
fs
in
xor
mov
cmovp
inc
movsl
cld
mov
jnp
es
data16
inc
push
lcall
arpl
outsl
popf
and
jno
push
mov
xchg
int
cli
repz
loopne
adc
mov
test
add
cmpsl
sub
pusha
jp
add
push
mov
add
lods
popa
push
fdivs
sbb
xchg
jge
inc
mov
ljmp
pusha
pop
xor
repnz
filds
push
xchg
cld
daa
sub
daa
jl
repnz
fst
leave
add
pop
aad
icebp
add
ja
int3
fisubl
nop
push
add
jmp
and
pop
push
sbb
mov
iret
dec
dec
inc
iret
cmovs
sbb
sub
popf
mov
outsl
mov
pop
xor
outsb
mov
shrl
sahf
sub
mov
mov
fdivrl
fmuls
es
je
cltd
jmp
xorb
gs
outsl
push
or
dec
icebp
and
movsl
pop
scas
add
xor
sahf
adc
aad
in
rorb
outsb
fidivs
add
cmp
sub
pop
xchg
shlb
lret
or
pop
jmp
push
jg
js
dec
rorb
sbb
jge
inc
bound
test
adc
subb
dec
push
divb
fwait
pusha
das
push
mov
cmp
cmc
mov
lods
ljmp
mov
pusha
cli
fildl
popa
outsb
push
jae
loopne
cmp
mov
std
mov
xchg
add
cmp
sti
add
mov
dec
jbe
xchg
sahf
pop
sub
pop
addb
ret
gs
scas
dec
rcrb
push
mov
jnp
or
stos
adc
mov
rcll
aas
mov
ret
aam
aaa
idivl
xor
xlat
scas
lea
sti
popa
mov
repz
xchg
out
sub
add
push
arpl
push
or
mov
dec
mov
in
fwait
dec
add
jbe
ret
jne
mov
out
out
jb
movsl
jmp
movsb
sub
push
add
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
lds
sub
sarl
jo
mov
sti
jbe
mov
sub
xor
push
cs
mov
dec
int
adc
and
mov
je
push
fnstsw
xchg
push
push
add
dec
mov
mov
sahf
push
adc
mov
movsl
or
dec
hlt
sub
and
aad
mov
lds
push
xchg
pop
loopne
pop
inc
push
mov
push
xor
pop
sbbb
dec
sbb
enter
dec
rcll
and
es
decl
mov
roll
inc
sub
ficomps
adc
out
dec
sub
ficoms
lods
mov
sahf
push
pop
popf
dec
roll
mov
sti
jne
std
in
call
lods
ss
pushf
and
pop
clc
push
mov
xor
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
int3
mov
mov
pop
dec
dec
mov
sub
inc
push
sub
push
sbbb
jle
push
dec
call
sbb
dec
xchg
jne
lods
and
pop
mov
scas
push
cli
outsl
jmp
cmp
or
repz
pop
and
adc
sub
imul
mov
jne
lea
lea
mul
push
adc
mov
adc
mov
adc
pusha
adc
mov
adc
ja
js
lahf
lods
aas
push
stos
push
mov
inc
inc
mov
mov
movsb
push
cmpsb
and
add
xor
sti
push
cmp
sti
or
jecxz
pushf
pop
fimuls
mov
mov
outsb
sub
popf
lcall
call
adc
mov
je
out
inc
xor
lret
out
cltd
int
pop
or
sub
ljmp
mov
rorl
addr16
loopne
mov
jge
pop
and
xchg
ljmp
add
add
leave
int3
ret
out
jp
lret
daa
ljmp
mov
xchg
cmp
mov
lock
inc
adc
add
sarl
push
jne
scas
shl
add
add
retw
dec
repnz
in
lahf
inc
adc
je
cmc
add
jb
add
mov
gs
sub
seta
ja
mov
lds
stos
xchg
push
and
jnp
in
mov
push
mov
aam
das
push
arpl
popf
add
shrb
add
mov
sub
and
subb
std
gs
dec
and
sub
adc
jns
mov
cmp
fs
xor
xor
repnz
xor
or
aad
xchg
xchg
fmuls
dec
cmpl
push
xchg
cwtl
sub
push
dec
jge
out
cmpsb
stos
lcall
lahf
cmp
jmp
mov
adc
push
and
sub
push
fmuls
cmpl
jb
push
sbb
lods
jmp
stos
inc
mov
iret
out
push
ds
ret
test
out
add
pop
mov
scas
push
rcl
add
pop
rolb
dec
jo
adc
dec
xor
cmp
adc
mov
sub
xchg
mov
pop
fnstsw
ja
ret
add
mov
lcall
rorb
popa
ds
pop
ret
divb
iret
sbb
pop
mov
jo
mov
xlat
int3
arpl
sub
push
sub
out
dec
loop
mov
call
repz
icebp
jg
daa
push
adc
xchg
in
in
ja
sub
outsl
jmp
inc
hlt
inc
and
mov
push
dec
insb
inc
cwtl
and
jbe
lahf
jle
cs
pop
jmp
xchg
xchg
ja
add
test
pop
inc
je
mov
rcrl
add
cmp
clc
dec
inc
dec
aas
sbb
outsl
adc
mov
fistpll
push
add
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
in
pushf
mov
add
mov
xor
jmp
and
icebp
icebp
lods
das
cmp
and
out
adc
mov
adc
in
jle
xchg
jae
cmp
jb
jecxz
aam
icebp
pop
cld
mov
sarl
pop
cld
dec
pop
sub
pop
test
sbb
sbb
cmp
mov
andl
push
adc
mov
adc
mov
adc
or
or
pushf
mov
add
lret
subl
mov
lret
push
push
into
xor
loopne
mov
adc
mov
adc
inc
mov
stos
and
shl
mulb
stos
push
xchg
test
test
pop
testl
xchg
add
pop
sbb
xchg
mov
cmp
mov
adc
mov
adc
mov
adc
pop
fnstenv
and
or
sbb
movsb
mov
mov
mov
lea
cmpsb
jle
ret
push
sahf
ds
scas
addr16
scas
aad
lea
ficoms
lods
mov
sahf
push
into
scas
lds
jbe
mov
jae
add
pop
and
sti
mov
das
pusha
cmp
in
insb
leave
mov
std
repnz
stc
xchg
jnp
dec
adc
push
testb
inc
mov
nop
sbb
outsl
mov
or
cmpsb
mov
test
add
xor
pop
jp
or
fnstsw
or
insb
popa
in
mov
lods
mov
sahf
push
xor
inc
jbe
jecxz
frstor
inc
sti
adc
dec
fidivs
lret
pop
xchg
scas
or
pop
or
add
aas
mov
sub
cmpsl
orl
push
xor
sbb
out
jae
repnz
jns
ljmp
xchg
es
mov
mov
addb
add
sarl
cmp
or
pop
stc
neg
xor
adc
xchg
cltd
pop
dec
jp
sub
ss
sub
cmp
pop
clc
cwtl
cmpsb
or
negl
cltd
and
rcrb
adcl
adc
sbb
pop
insw
xor
pop
xchg
loope
jae
sbb
dec
dec
push
inc
rolb
sbb
xchg
ljmp
clc
mov
imul
jnp
bound
leave
push
mov
adc
xor
adc
and
arpl
outsl
test
int3
std
push
push
mov
fildl
jb
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
cmpsb
sub
lods
leave
or
pmuludq
into
add
push
add
pop
adc
jne
pop
shlb
cmp
jg
fwait
decl
dec
xor
cmc
lea
mov
aaa
imul
test
in
mov
mov
lcall
ror
testl
xchg
leave
sub
xor
fs
cmp
xchg
xchg
fxch
loope
scas
sub
es
adc
add
popf
push
insb
outsb
fistps
repnz
ljmp
add
inc
xor
mov
add
xchg
cmp
jge
rcr
sub
cli
xchg
mov
fistps
test
pop
and
and
lea
imul
pop
dec
shll
leave
fwait
inc
xor
test
and
mulb
daa
mov
jge
jbe,pn
sub
pop
push
or
fs
jnp
inc
lret
repnz
inc
hlt
inc
pop
pop
jmp
subb
frstor
dec
or
and
loopne
rorl
mov
xor
adc
sti
push
xchg
enter
xor
pop
or
jb
adc
faddl
popf
xchg
into
lcall
add
jmp
lcall
sub
cmp
add
jns
pop
jecxz
cmpsl
jbe
push
mov
mov
out
adc
mov
mov
xchg
cmp
jge
stc
mov
fistl
ret
fidivrl
dec
int
push
jne
push
inc
shlb
insl
arpl
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
rcl
mov
jbe
or
dec
sbb
pop
or
mov
js
mov
adc
cmc
xchg
sbb
test
fnsave
leave
mov
dec
sbbb
mov
inc
stos
jbe
mov
notl
pop
inc
adc
dec
adc
xor
sub
ljmp
daa
jo
cmc
mov
cmp
xchg
sbb
adc
cwtl
add
add
shlb
adc
outsb
fwait
popa
cwtl
or
mov
inc
clc
les
cmp
into
sub
inc
es
test
and
or
shlb
inc
push
push
jl
gs
das
push
cwtl
mov
das
pusha
dec
arpl
xchg
pop
punpckhbw
popf
cld
rclb
int
push
into
test
dec
in
xchg
sbb
adc
gs
and
jle
xor
adc
inc
adc
add
aam
xchg
ljmp
faddp
lret
push
lret
xchg
insl
fstps
je
inc
xchg
outsb
int
sub
fs
cltd
sub
jle
push
sub
inc
jo
ljmp
cwtl
xor
aad
fwait
xchg
xor
in
jo
mov
dec
add
mov
mov
fs
lahf
pop
mov
arpl
mov
xor
adc
sti
dec
xor
xor
sub
mov
outsb
out
push
in
push
fbstp
lea
popa
hlt
jbe
xchg
mov
and
add
dec
popf
cwtl
cld
lds
dec
cltd
xchg
mov
into
xchg
xchg
fs
fsub
dec
or
into
push
pop
out
pushf
push
outsb
fs
inc
fs
lahf
pop
mov
arpl
out
addb
add
ficoms
lods
mov
sahf
push
insl
push
mov
movsl
xchg
pop
jne
jmp
pop
sub
movsl
fcomps
aam
add
gs
adc
cmpsb
mov
loopne
std
pop
xor
mov
rorb
dec
mov
inc
cwtl
jbe,pt
sahf
jle
adc
sub
aas
stc
mov
sbb
insb
mov
dec
dec
or
or
loopne
lods
jp,pt
mov
xor
adc
xchg
sar
cmp
insl
jge
out
and
or
addr16
pop
add
aaa
mov
pusha
mov
stos
lock
test
aaa
das
hlt
adc
xor
mov
mov
int
sbb
sti
sbb
ljmp
mov
mov
aas
js
sbb
and
shlb
imul
push
lods
mov
sahf
push
imulb
cltd
adc
loopne
sub
mov
xchg
cltd
mov
pusha
xchg
fidivrs
jg
mov
push
xchg
jge
repz
sbb
xor
fldcw
cmpsl
adc
inc
call
cmp
or
out
add
sub
imul
popa
ja
mov
and
shlb
and
aam
sarb
cmc
xor
adc
shrl
ljmp
jo
or
inc
clc
jnp
loop
fsubs
in
sub
mov
push
je
test
cmc
jne
adcb
xor
cmp
ljmp
and
ds
stos
fcmove
jl
mov
add
xor
sbb
jo
fdiv
and
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
pop
xchg
daa
push
dec
adc
ljmp
pusha
ret
cmp
sub
push
xchg
inc
sbbl
jne
or
fsubs
inc
xor
js
test
xor
mov
adc
mov
adc
insb
loop
rclb
ret
inc
sbbl
ss
subb
jmp
sahf
xor
jo
add
xchg
mov
sahf
push
and
mov
cmpsl
mov
pop
pop
dec
sbb
adc
pop
lods
xchg
ja
mov
inc
out
xchg
push
mov
adc
mov
adc
mov
adc
mov
adc
add
test
fs
addr16
shlb
xor
std
pop
leave
test
mov
inc
or
mov
xchg
mov
adc
fwait
imul
lock
cmpsb
in
popf
xor
cmp
mov
pop
call
mov
adc
mov
adc
mov
adc
loope
push
ror
push
xchg
fwait
xor
add
lret
and
mov
inc
cs
shlb
pop
cmp
dec
lods
cmp
movsb
xor
adc
lea
mov
sub
lods
int
add
adc
mov
adc
mov
ljmp
fwait
xor
add
lret
and
repz
andl
pop
cmp
es
test
xor
adc
mov
inc
xor
lcall
adc
xchg
dec
xchg
xchg
int3
rol
fldenv
adc
mov
adc
lcall
sbb
pop
out
sarb
scas
insb
jne
lret
test
movsl
cmp
push
adc
sarb
xor
imulb
push
test
and
and
mov
adc
loope
push
ror
push
xchg
aas
aad
ljmp
mov
shll
mov
adc
insb
loop
rclb
sarl
xor
mov
in
mov
adc
or
cs
xchg
ja
adc
out
mov
mov
lcall
xor
in
jg
xor
mov
adc
xor
or
mov
ja
adc
out
mov
mov
push
test
loope
mov
call
cmp
call
dec
inc
sub
rcrl
cld
ss
mov
adc
mov
adc
pop
sahf
mov
cmpsl
fwait
xor
add
lret
add
lea
and
cs
out
lahf
shr
or
cmpsb
popa
jmp
movsb
sub
push
add
push
adc
mov
adc
js
adc
lret
mov
cmp
xor
cmp
or
mov
cmpb
mov
ficoms
lods
mov
sahf
push
ds
mov
mov
pop
pop
dec
loopew
aad
or
dec
lods
inc
out
jb
push
fdivrs
lods
add
mov
adc
mov
adc
mov
adc
mov
adc
add
test
sub
pop
push
xor
std
pop
leave
test
cli
push
or
xchg
xchg
mov
adcb
or
repz
aas
xor
add
sbb
dec
pop
mov
adc
mov
adc
mov
adc
movsb
mov
pop
vandpd
fildll
mov
or
gs
add
dec
addb
scas
push
imul
insl
and
pusha
in
int
mov
rorl
mov
sahf
push
dec
loop
test
in
or
ficoml
mov
or
push
adc
mov
adc
movsb
jo
call
ficoms
into
jmp
and
cmp
fwait
sahf
xor
insl
and
pusha
add
sub
ficoms
lods
mov
sahf
push
out
pop
pushf
dec
shl
lock
add
lahf
jmp
ljmp
push
adc
mov
adc
xchg
movsb
cmp
push
lcall
jnp
pop
xchg
dec
xlat
nop
mov
mov
adc
ret
or
push
movsl
lds
loop
inc
fwait
add
xor
inc
out
pop
cli
mov
adc
movsb
mov
pop
vandpd
fmull
adc
mov
inc
shlb
adc
js
adc
lret
mov
and
xchg
iret
pushf
lods
popf
scas
mov
mov
mul
push
adc
rcl
mov
jbe
or
add
mov
mov
les
inc
push
mov
xor
mov
adc
mov
ljmp
icebp
add
mov
mov
add
ret
stc
adc
jl
pusha
arpl
cmp
push
add
mov
into
stos
adc
push
imul
sbb
adc
mov
adc
rcrl
es
in
push
sbb
and
sbb
fsubs
in
lahf
cmp
adc
adc
negl
mov
daa
les
aaa
push
xor
jb
pushf
mov
idivb
xchg
xchg
sub
out
cli
cmp
pop
push
hlt
adc
pusha
and
ss
jl
sub
mov
xchg
dec
add
movsl
xchg
rclb
icebp
mov
out
push
into
push
in
xor
movsb
sub
push
add
push
adc
mov
adc
mov
adc
nop
sarl
std
ljmp
mov
sbb
mov
aas
mov
adc
jnp
or
inc
pop
mov
xor
mov
pop
lret
add
sub
mov
sbb
push
bnd
in
js
je
xor
subb
xor
data16
lcall
dec
test
ss
into
fucomi
or
fnstcw
jns
cmp
or
cltd
sbb
jp
cmpsb
daa
mov
mov
xchg
fnstsw
xchg
cmp
js
bound
popa
push
dec
leave
in
or
fisubs
adc
mov
adc
mov
adc
mov
adc
mov
adc
xchg
pop
sub
pop
sarb
xchg
add
xor
das
pop
sbb
out
adc
push
rclb
mov
subl
or
lcall
pop
sbb
mov
jnp
imul
add
and
adc
mov
iret
inc
lds
rol
push
dec
mov
sar
xor
jmp
pop
ljmp
addb
xor
clc
adc
sbb
in
pop
das
xor
stc
fldcw
int
push
jne
hlt
stos
loope
dec
mov
sub
cmp
or
jbe
push
test
lods
leave
xchg
xor
outsb
movsl
dec
xchg
sbb
nop
icebp
js
out
jg
push
insl
das
cwtl
and
push
cld
cmpsl
lods
jno
mov
push
test
or
xorl
sbb
mov
jmp
jo
push
sbb
movl
out
hlt
and
pop
inc
negl
pop
cs
lcall
sbb
repz
mov
popf
call
lret
xor
push
and
sub
push
mov
push
insl
ret
push
roll
pop
pop
les
insl
mov
jle
inc
sbb
mov
aad
xchg
dec
cmpsb
push
in
push
test
push
rorb
add
fisubl
push
push
scas
pop
cmp
xchg
dec
arpl
jmp
dec
ja
sbb
ljmp
xchg
repz
jnp
dec
xchg
or
test
and
fs
icebp
pop
je
ss
xor
xor
mov
dec
mov
fldt
mov
int
test
cmp
imul
movsl
jno
movsb
jae
mov
sub
arpl
adc
cmova
lock
sub
je
adc
call
faddl
das
pop
pop
je
jecxz
pop
or
dec
jnp
mov
int3
in
iret
sub
mov
dec
xchg
cmc
inc
fs
xchg
sbb
stc
pop
test
pop
rcll
jmp
cmp
cmpsb
lahf
out
add
push
sbbl
adc
pop
lea
rclb
out
test
mov
sahf
mov
adc
clc
and
out
push
popa
int
xchg
scas
dec
xorb
inc
pop
std
xchg
fldenv
jno
movsl
ret
out
sbb
pminub
out
jle
test
insl
addr16
adc
adc
and
xor
fmul
pop
test
pop
sbb
imul
test
movsb
pop
icebp
mov
sub
in
dec
pop
sbb
stc
pop
bound
push
sbb
mov
nop
inc
mov
or
test
mov
int3
push
mov
xchg
cld
sbb
mov
orb
sub
sub
in
mov
mov
push
dec
lcall
cmc
sub
adc
cmpsl
popf
daa
ret
lret
xor
xchg
or
cli
or
jnp
mov
mov
sbb
ds
xchg
or
mov
xchg
inc
out
pop
cmp
fisubrl
insb
imul
dec
loope
push
lret
pop
gs
inc
fdivl
or
or
test
insb
test
mov
xchg
in
sub
stos
pop
les
test
push
sahf
mov
inc
inc
cmpsl
loopne
dec
dec
mov
add
pop
push
sbbl
push
dec
ja
fnstcw
hlt
fsubs
jg
and
push
inc
add
xchg
cmp
xchg
insl
shlb
pminub
jl
das
xchg
clc
iret
sbb
lea
rcrb
ret
cwtl
inc
sbb
rorb
aas
jb
scas
xchg
jb
xor
fs
mov
and
sahf
out
mov
inc
ret
push
xchg
xlat
repz
cmp
push
push
sub
stos
inc
cld
sbb
test
psrlq
push
lcall
lret
cmp
stc
push
fdivrl
test
imul
mov
out
sti
enter
je
rcll
cmpsl
sbbl
or
inc
orb
jl
out
pop
pop
and
test
pop
push
loope
mov
adc
daa
xor
fidivrs
clc
push
mov
cmp
push
mov
xor
insl
std
clc
mov
and
roll
inc
xchg
pop
addr16
jns
mov
ror
push
sahf
in
nop
sbb
sbb
adc
data16
mov
bound
add
mov
lcall
mov
mov
fldl
sbb
cmp
xor
call
sbb
into
dec
loop
mov
lds
push
aam
push
iret
testb
shlb
lods
add
xchg
stc
sahf
mov
insb
push
mov
push
call
fdivl
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
bound
dec
inc
loopne
adc
repnz
mulb
sub
ja
notl
sbb
lahf
xchg
sbb
nop
adc
ljmp
mov
out
adc
mov
adc
mov
adc
fistpl
jmp
push
mov
shl
mulb
and
dec
inc
lea
dec
imul
jmp
pop
rcll
fdivp
popl
or
cwtl
cmp
js
mov
adc
mov
adc
mov
adc
xchg
add
sahf
mov
pop
in
fs
mov
or
jmp
lcall
sub
dec
shlb
std
lret
incb
xor
jecxz
push
addl
arpl
push
adc
mov
adc
mov
adc
mov
adc
cwtl
out
arpl
sahf
mov
pop
in
pop
test
xor
xlat
fsub
dec
pop
in
or
lcall
repz
ret
rol
gs
adc
jge
incb
xor
add
test
daa
arpl
xchg
dec
daa
mov
int
push
mov
adc
mov
adc
mov
adc
mov
adc
imul
repz
sub
mov
sub
xchg
icebp
add
mov
mul
push
adc
mov
adc
imul
repz
sub
test
cmp
add
icebp
add
mov
mul
push
adc
mov
adc
dec
shrl
lds
imul
movsb
inc
xor
adc
xchg
push
dec
dec
push
pusha
cwtl
push
movb
outsl
lret
popa
loope
or
or
cli
testb
cmc
leave
arpl
mov
inc
cmp
pop
stc
outsl
loop
cmp
push
push
sub
and
adc
shll
jle
cmpsl
call
fldt
push
sbb
push
mov
loope
jl
push
sti
nop
inc
cltd
jp
pop
mov
add
cmp
dec
imul
mov
push
lock
stos
leave
mov
pop
push
mov
mov
sahf
sbb
mov
and
testb
cmc
sub
lods
cmpps
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
test
fwait
push
jmp
inc
movl
cmpxchg
jecxz
frstor
adc
pushf
jae
cmp
xor
ljmp
xor
and
xor
shll
ja
gs
ljmp
in
mov
mov
cmp
push
sub
fs
flds
lahf
shlb
mov
jmp
fisttpl
cmpsb
inc
mov
push
aaa
inc
jb
sub
insl
lret
fsts
mov
test
add
shrb
mov
pusha
mov
jge
fmul
push
mov
jne
push
outsl
jnp
and
mov
jne
es
push
mov
sahf
cld
jmp
arpl
inc
lods
jae
add
cmp
mov
xchg
push
mov
push
mov
call
or
sti
pop
push
in
xchg
subl
pop
adc
pop
xchg
adc
mov
insl
xor
fidivs
pop
loopne
xchg
sahf
mov
mov
or
dec
pop
inc
cltd
movsb
call
movsl
outsl
pop
push
lahf
sbb
or
xchg
mov
rcr
xchg
loope
mov
cltd
fsubrs
sti
pushf
xchg
shl
mov
aas
in
mov
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
jae
andl
add
movsb
jae
mov
leave
mov
jg
cli
mov
outsb
mov
cmpsl
inc
mov
adc
pop
jne
popa
fnsave
sbb
je
pop
in
pop
xchg
add
jp
xchg
inc
jmp
lcall
lock
jle
pop
inc
scas
push
fs
fldenv
fsubrp
dec
push
mov
movsb
mov
jle
mov
adc
mov
adc
mov
adc
ret
enter
dec
test
sahf
mov
pop
in
cmp
lods
sbb
ljmp
jmp
lcall
mov
jecxz
mov
sub
xor
shll
add
mov
jle
mov
adc
mov
adc
mov
adc
stos
mov
jae
push
xchg
mov
in
pop
fldcw
push
mov
icebp
mov
sub
lea
notb
pop
mov
adc
pop
fnstcw
and
inc
pop
jne
cltd
nop
xlat
push
pop
lods
dec
jl
or
lret
xchg
addl
sbb
mov
adc
leave
loopne
xor
je
xchg
je
int3
pop
in
fbstp
sarl
test
addr16
fisubrs
lret
sbb
sbb
push
adc
sub
mov
adc
add
lcall
add
dec
mov
adc
mov
push
sahf
mov
pop
in
dec
add
mov
and
outsb
fdivs
dec
dec
and
hlt
or
data16
push
xchg
das
or
jge
das
aad
das
dec
or
jns
jo
xor
mov
inc
mov
adc
mov
adc
mov
adc
mov
adc
js
adc
or
mov
pop
in
stc
and
mov
sbb
and
adc
mov
push
adc
sbb
es
decb
jge
das
aad
cmp
and
pop
ljmp
push
mov
adc
mov
adc
mov
adc
mov
adc
cmp
mov
data16
adc
push
inc
imul
lahf
gs
call
int3
movsb
lret
sbb
inc
jecxz
mov
into
jge
leave
dec
xchg
mov
push
and
jno
frndint
and
inc
aam
es
imul
dec
hlt
ja
retw
sarb
out
out
sbb
les
scas
mov
xchg
fldcw
loop,pn
mov
add
jp
movsb
dec
test
ficomps
ret
or
aam
sahf
and
loope
imul
jo
or
loop
adc
push
arpl
outsb
sahf
test
push
adc
jns
rcrl
inc
dec
pop
and
scas
and
cs
ret
sbb
int3
cwtl
fwait
push
sbb
fwait
sub
stos
mov
fistps
lock
xor
cmp
cmp
sbb
repnz
sub
mov
mov
mov
movsl
rolb
sub
xor
ucomiss
fs
mov
adc
pop
dec
mov
sahf
add
jecxz
push
int
adc
mov
xchg
sahf
loopne
pop
mov
or
jb
adc
and
sbb
jle
insl
push
negl
data16
xchg
and
add
mul
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
add
push
push
cmp
jl
inc
add
pop
mov
clc
inc
call
rcll
out
xchg
lcall
adc
movsl
fs
adc
loopne
imul
inc
cmp
mov
adc
mov
adc
cwtl
adc
rcrl
loop
int
xchg
sbb
mov
loope
rcrb
cmp
or
lods
fwait
popf
mov
sahf
scas
enter
dec
fcompl
mov
dec
add
repz
adc
mov
adc
jge
dec
xchg
pop
jbe
rolb
loop
outsb
fisubrs
sub
popa
cmp
mul
push
adc
insb
inc
repnz
fdivp
fldenv
inc
sbb
outsl
scas
pop
shll
adc
jle
cld
or
dec
sub
jns
pushf
pop
fldpi
dec
and
push
dec
pop
mov
mov
insl
lret
inc
sti
sarl
mov
mov
push
adc
mov
adc
mov
adc
mov
adc
les
sarb
inc
test
test
add
int3
out
and
xor
ds
pop
dec
out
mov
cmp
test
inc
add
test
sbb
mov
xchg
push
push
cld
inc
ret
fadds
or
arpl
dec
sub
pusha
xor
jp
cli
dec
repz
bound
popf
sbb
mov
insb
jg
jge
mov
adc
mov
jge
push
dec
and
jno
jmp
test
xor
mov
enter
out
mov
push
and
push
push
aaa
cmp
cmpsb
scas
jne
mov
cltd
jp
gs
dec
mov
enter
aam
loope
sbbb
les
mov
dec
mov
xor
jno
rcl
cmp
lds
sub
dec
sbb
dec
dec
pop
movsb
rcll
dec
and
push
xchg
addr16
mov
movsb
push
hlt
fimull
mov
popa
jno
icebp
stos
cld
push
outsl
mov
jnp
cs
das
movsl
mov
add
mov
xchg
cmp
in
jmp
in
mov
xor
pop
pop
roll
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
xchg
ret
sbb
outsb
gs
adc
inc
cli
ret
jae
out
mov
fistl
jbe
mov
jle
popa
mov
mov
pop
cs
ljmp
mov
mov
sub
out
adc
mov
adc
mov
xor
push
xor
or
xchg
out
adc
stos
and
lea
ja
jns
inc
cli
ss
mov
or
push
bound
push
sahf
sti
dec
add
out
js
lret
mov
shll
jne
shlb
cmpsb
push
mov
add
sbb
mov
sbb
sbb
movsb
jb
push
cld
jmp
adc
cli
mov
add
jb
adc
into
mov
mov
out
testl
mov
and
loop
imul
inc
fimuls
dec
rorb
pop
pop
jmp
in
testl
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
lods
.byte
pusha
call
pop
sub
mov
mov
push
pop
add
xorb
cmp
je
cmpl
jne
mov
add
xor
push
xor
mov
cmp
je
mov
add
mov
cmp
jne
add
push
mov
cmp
jne
sub
push
mov
mov
call
mov
pop
mov
add
call
pop
dec
jmp
pop
add
dec
jmp
mov
mov
popa
jmp
push
push
dec
not
and
mov
pop
pop
ret
pusha
xor
inc
nop
dec
xor
mov
mov
pusha
call
popa
add
sub
loop
popa
ret
push
mov
mov
push
pop
inc
mov
dec
shl
mov
dec
mov
shl
sub
mov
xor
sub
mov
shr
xor
sub
sub
mov
shl
sub
mov
xor
sub
mov
shr
xor
sub
sub
sub
dec
jne
pop
mov
mov
ret
hlt
push
inc
add
add
add
inc
add
das
mov
inc
pop
mov
fsubrs
ror
dec
pop
pop
