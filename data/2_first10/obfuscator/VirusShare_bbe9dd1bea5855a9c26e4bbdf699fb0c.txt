inc
pop
add
adc
xchg
in
aam
inc
dec
adcb
jo
into
pop
andl
xchg
or
ret
test
push
int3
mov
in
pop
mov
je
nop
repz
out
push
int
dec
sbb
push
sub
ja
lods
ja
push
xor
scas
jbe
gs
xlat
mov
mov
cmp
int
mov
in
and
adc
pop
adc
and
adc
mov
dec
cmp
pop
out
call
sbbl
subl
mov
jo
bnd
add
repz
xor
xchg
sub
sub
dec
adc
popa
fwait
bound
inc
arpl
cltd
jnp
and
jg
cmp
divl
cld
pop
sbb
or
das
xchg
or
sbb
jo
enter
je
sub
cld
jns
mov
jnp
mov
mov
push
push
mov
or
mov
mov
cmp
mov
jb
cmp
jb
cmp
jb
cmpw
je
cmp
jae
mov
mov
cmp
jne
pop
pop
ret
int3
push
mov
sub
andl
push
push
push
pushl
call
cmp
jb
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
add
cmp
mov
mov
jbe
cmp
movswl
mov
jae
mov
cmp
jae
mov
cmp
jb
mov
add
cmp
jb
mov
mov
add
mov
lea
mov
mov
mov
movzbl
mov
movzbl
sub
jne
mov
mov
mov
sub
mov
cmpb
je
incl
mov
mov
mov
movzbl
mov
movzbl
sub
je
test
jl
jle
xor
inc
test
je
mov
inc
cmp
mov
jb
mov
pop
pop
pop
leave
ret
mov
mov
add
mov
jmp
xor
jmp
push
mov
sub
push
xor
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
mov
push
push
mov
mov
mov
pop
pop
lea
mov
cmp
jb
lea
cmp
jb
lea
cmp
jb
mov
push
pushl
call
mov
lea
push
pushl
call
mov
lea
push
pushl
call
mov
mov
cmp
jbe
mov
lea
push
push
call
push
pushl
lea
push
mov
lea
call
add
xor
lea
mov
add
mov
inc
add
cmp
jl
cmpl
jbe
mov
lea
push
mov
sub
push
push
call
mov
mov
lea
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
mov
push
sub
push
push
call
push
push
pushl
call
push
push
call
push
mov
push
push
call
push
pushl
push
call
mov
movzwl
push
pushl
lea
push
call
add
pushl
mov
push
push
pushl
mov
pushl
pushl
call
pop
pop
mov
pop
leave
ret
add
add
hlt
insb
pop
cmc
jl
fs
add
fcmove
sub
adc
roll
insl
dec
cmp
jle
jne
mov
mov
mov
lcall
mov
shrl
push
in
pop
jl
mov
enter
enter
push
aas
out
sti
push
xchg
ss
sbb
ja
insl
mov
fwait
fcmove
scas
sbb
rorb
rclb
dec
pushf
test
mov
sbb
mov
cs
inc
das
out
jo
mov
jns
aas
pop
cmpl
xchg
out
sti
enter
leave
dec
shrl
push
shll
aaa
mov
or
movsl
sub
test
xor
fcoml
fs
mov
mov
mov
mov
mov
ret
jne
add
shl
mov
in
mov
xchg
dec
xor
leave
push
inc
jns
mov
add
mov
jp
cmp
mov
outsl
test
jns
xchg
and
adc
cli
xor
dec
bound
push
push
push
or
sahf
mov
fsubrs
out
ss
es
loop
inc
mov
push
xchg
lods
les
lret
adc
rolb
sbb
jle
jp
pop
cmp
xor
jo
inc
ret
cmpsb
lock
dec
push
fstl
jg
pop
mov
dec
addr16
lds
out
sub
outsl
mov
cmp
mov
daa
mov
xor
pop
or
xchg
adc
xchg
outsb
imul
jge
add
push
add
mov
pusha
jo
or
dec
fsts
mov
enter
push
adc
and
or
orl
leave
lock
xchg
jne
cld
mov
test
enter
fidivrl
xchg
sar
in
int3
fsts
jbe
loop
and
ss
cmp
xor
pop
fidivs
insl
data16
adcb
adc
lcall
mov
push
or
dec
mov
fiadds
icebp
add
mov
add
iret
sub
jnp
pop
add
outsb
mov
xor
mov
add
mov
jnp
stos
frstor
cmp
out
scas
jb
add
test
ja
insb
loopne
cmp
push
mov
pop
out
sub
outsl
mov
testb
mov
mov
lret
mov
sub
lock
xor
pop
xchg
cmp
xchg
into
lahf
cmp
add
push
pop
dec
cmp
jo
jb
push
push
add
xchg
or
fidivrl
lds
jmp
jno
dec
icebp
stc
dec
push
add
xchg
cmp
sbb
pop
jb
jb,pn
sub
inc
add
ss
add
mov
dec
add
pushf
push
add
ret
add
push
je
pushf
add
add
stos
cmp
sub
push
sub
push
mov
xchg
mov
xor
mov
inc
sub
sbb
imull
add
pop
insl
lods
and
lret
icebp
push
sbb
xchg
pop
cltd
fadd
or
fldenv
mov
test
add
mov
or
mov
test
jo
sub
gs
xchg
je
dec
iret
out
pop
aaa
fcompl
cmp
pop
push
push
scas
out
or
rclb
push
stos
mov
aad
or
pop
divl
addl
lea
adc
sahf
add
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
rcrb
test
jmp
faddl
lds
fdiv
pop
mov
aam
dec
rcll
xor
pop
out
adc
and
sub
mov
lret
mov
lret
mov
lret
xor
and
add
cmp
add
rorl
push
loop
fidivrs
xchg
push
pop
negb
cmp
mov
mov
mov
pmulhuw
cs
repz
cmp
cmp
loop
flds
lret
cmpsl
mov
push
jnp
dec
jle
mov
jmp
and
call
pop
in
mov
shr
or
loope
es
lret
out
xlat
xchg
mov
fwait
mov
mov
mov
or
mov
xor
sbb
mov
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
out
xchg
cmp
mov
lret
mov
lret
mov
lret
sub
jnp
sbb
test
inc
in
xchg
inc
movsb
icebp
push
cli
or
inc
mov
lret
out
xchg
mov
cmpsl
daa
xchg
rcll
cli
pop
xchg
out
mov
movsl
jp
add
subb
pop
bound
lret
inc
nop
lahf
fisttpll
aaa
or
sti
outsl
sbb
test
aas
sbb
mov
and
xrelease
lret
mov
outsl
lods
repz
mov
adc
xor
xchg
mov
sub
and
shlb
jl
mov
lret
or
sbb
aaa
mov
push
dec
aam
adc
push
cmp
or
and
inc
mov
lret
jb
cli
aaa
jae
and
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
pop
xor
ret
lret
mov
jnp
nop
in
adc
dec
fwait
pop
ret
mov
ds
pop
loopne
outsb
out
clc
xchg
inc
aas
dec
pop
cmpsl
lcall
pop
mov
sbb
ljmp
mov
push
inc
mov
and
mov
push
mov
leave
dec
rclb
xor
adc
sbb
fs
mov
loopne
xlat
cmp
pop
popa
lods
in
and
xchg
test
cltd
icebp
scas
leave
mov
add
adc
sub
gs
dec
xor
bound
xor
test
fistl
mov
dec
mov
pop
xor
aas
pop
cli
jnp
xchg
dec
jle
iret
stos
es
pop
in
loope
insb
mov
mov
cwtl
or
add
jbe
sbb
loope
sbb
in
es
mov
sub
adc
add
mov
and
sub
sbb
jb
jge
into
lods
adc
lods
packuswb
popa
inc
jg
rcrb
mov
test
sarb
xchg
jl
xchg
mov
mov
cmp
out
push
stc
pop
sahf
sub
mov
ja
and
test
mov
adc
xor
adc
push
in
push
ljmp
cli
xorb
or
mov
mov
dec
fidivl
int
jg
xor
push
repz
push
and
lds
dec
mov
push
shll
mov
xchg
cmp
mov
stos
mov
jmp
add
push
cmp
es
test
aad
xchg
insb
fiadds
cwtl
jns
cli
adc
xchg
sti
fwait
dec
cmpsl
test
das
xchg
jne
add
jae
dec
jle
xchg
dec
or
add
inc
xchg
mov
cmpsl
mov
popa
lret
cmp
nop
xor
out
dec
inc
in
or
fs
mov
sub
in
xchg
bound
pop
mov
movsb
mov
mov
out
and
in
cmova
pop
imull
daa
mov
imul
sub
dec
cwtl
jmp
test
fbld
mov
loopne
mov
cs
fs
xchg
dec
inc
adc
xor
push
sub
and
pop
repz
mov
inc
lret
sbb
or
or
lcall
xchg
fcomps
aaa
jae
push
and
imul
test
sbb
test
incb
outsl
insl
add
or
call
lock
cs
outsb
push
and
sub
sub
mov
dec
add
mov
xchg
cs
mov
cmp
mov
xor
mov
fistps
ss
jnp
cmpsb
xor
cmpsl
ret
mov
inc
int3
std
outsb
mov
mov
sbb
dec
inc
xchg
outsl
pop
push
mov
repnz
mov
rcl
and
test
or
pop
leave
fidivs
mov
sub
adc
lods
push
pop
xor
inc
lret
mov
insl
lahf
movsl
push
stos
xchg
lods
dec
dec
mov
movsl
insb
mov
jns
std
or
aam
repnz
xor
sbb
cld
sbb
fistl
mov
sbb
jmp
and
push
inc
mov
dec
rolb
movd
stos
xchg
call
adc
push
mov
ret
jg
inc
sbb
mov
outsl
and
or
std
xchg
imul
clc
jns
push
cmpsl
mov
outsb
daa
fldcw
mov
cmp
aam
mov
fdivs
lret
xlat
rcrb
sbb
test
inc
sbb
loope
loope
aaa
insb
sub
popa
pop
outsb
jns
mov
cmp
mov
das
in
mov
arpl
js
fstpt
adc
loopne
cmpsb
or
test
cmpsl
mov
cmp
int
jb
lock
mov
jmp
popf
pusha
sub
stos
push
out
lahf
outsl
in
out
and
jl
out
mov
lret
inc
out
movsl
jle
xchg
push
addr16
sbb
pop
add
adc
xor
push
sahf
or
dec
xchg
insl
mov
mov
xor
mov
mov
call
jmp
aas
and
loope
es
jns
pop
cwtl
movsl
sub
mov
jmp
insb
sbbb
adc
jb
mov
outsl
add
das
fisttpll
fcomps
pop
push
ja
pop
cs
insl
loope
shll
outsl
fimull
push
adc
add
add
outsl
mov
scas
and
adc
pusha
cmp
repz
dec
dec
lea
call
repnz
mov
jle
test
sub
push
pop
out
pop
cs
jae
sbb
sbbl
jmp
jg
mov
and
jmp
pop
pop
test
cltd
ds
sbb
mov
stc
xchg
enter
inc
or
sub
cltd
cli
push
sar
rcrb
ss
mov
adc
out
cmp
inc
sbbl
mov
pop
or
imul
xlat
xor
aaa
test
push
jno
cmp
cwtl
movsl
sub
mov
sub
fbstp
mov
mov
xlat
rorb
and
push
pushf
call
mov
pop
loopne
stos
cmpsb
inc
fdivrl
push
in
daa
je
cmc
pushf
insb
jg
ja
addb
mov
out
or
add
inc
and
or
out
out
push
adc
stos
fnstsw
cmp
into
and
dec
imul
jle
cmp
push
lods
dec
push
push
aad
adc
xchg
sub
loopne
fstpl
pop
mov
shll
gs
lods
jp
sahf
and
or
jle
pop
movsb
or
aam
int3
enter
in
push
pop
pop
fsts
ret
mov
push
cmc
cmpsl
popf
fidivrl
andl
dec
xor
jmp
jg
mov
sub
jge
dec
pop
outsl
ret
insb
mov
stos
lret
inc
jmp
sub
xor
sub
jno
jge
sbb
inc
scas
movsl
or
add
enter
cli
cmp
aam
out
add
mov
in
inc
inc
cli
into
test
lods
jb
push
or
xor
cmp
jbe
shll
jp
inc
iret
adc
icebp
fwait
cmc
xchg
mov
and
or
sahf
cmp
int
or
lret
dec
xchg
addr16
xchg
xchg
mov
in
fwait
xor
mov
pop
push
dec
sub
rcll
or
aaa
bound
and
mov
cltd
bound
lock
sbb
dec
jg
and
cmp
xorl
cmpsb
sbb
mov
shrl
stc
adc
mov
xor
and
in
bound
adc
loopne
shl
add
jmp
shlb
aad
mov
mov
out
popa
sbb
adc
sub
lcall
testl
sbb
jae
subb
xchg
sub
or
fcompl
mov
push
aas
xchg
ficoml
or
xor
and
add
xor
daa
mov
mov
mov
mov
arpl
out
test
arpl
negb
jbe
scas
cmp
mov
in
call
outsb
or
jg
push
int
jle
mov
out
xchg
outsl
test
mov
jb
inc
inc
test
sub
xchg
insb
jmp
cmpsb
out
xchg
cmpxchg
mov
outsl
add
das
fisttpll
call
jp
nop
aad
and
inc
stos
dec
aaa
movsb
pop
mov
jge
aas
push
jg
pop
mov
xlat
dec
in
insb
jns
jp
ja
or
jno
xchg
fadds
push
es
jne
insl
jae
fldcw
jp
ja
or
sbbb
inc
mov
xchg
sub
icebp
or
repz
imul
sbb
jnp
sub
mov
outsb
leave
inc
out
jp
pop
xchg
xor
cmp
dec
les
in
testb
jne
pop
repz
lods
or
das
jo
mov
repz
add
dec
std
sbb
outsl
and
sbb
ljmp
fldl
add
cmp
and
and
mov
popa
addr16
data16
daa
pop
mov
sti
mov
jb
and
ds
cltd
xor
into
das
xchg
mov
mov
inc
mov
push
fisttpll
xchg
pop
dec
adc
ljmp
das
aam
pop
mov
out
fsubrl
sbb
jp
jo
mov
inc
outsl
dec
xchg
outsb
scas
ds
je
sub
cmp
mov
pusha
xchg
pop
rorb
mov
shlb
out
fistl
lret
sub
mov
stos
jle
loop
pop
or
xchg
mov
or
mov
into
je
jp
cmpsb
cmp
fmul
jg
mov
adc
dec
push
jae
sbb
mov
insb
push
mov
ffreep
in
cmp
inc
xor
xchg
rclb
divb
ret
mov
shll
loop
in
cwtl
iret
cltd
xchg
add
fmuls
clc
aaa
divl
cwtl
les
lea
popa
scas
loopne
mov
pop
je
sete
xchg
push
pop
xor
pop
jecxz
cmp
jb
flds
push
and
outsl
stos
and
subb
fldl
sbb
xchg
cmpsb
adc
out
push
outsb
inc
mov
inc
cmp
push
mov
mov
mov
popf
popa
repnz
jno
pop
pop
sbb
stos
fs
ss
ljmp
jae
rclb
jo
lods
leave
popf
in
lcall
test
sahf
fcom
js
lock
inc
cld
push
popf
dec
cmp
test
movsb
xchg
adc
cwtl
push
clc
lcall
dec
lcall
push
int
cli
xchg
xor
sbb
mov
ja
in
dec
fsubl
stc
fidivl
dec
test
orl
lret
cmp
scas
lods
lret
jge
sbb
mov
jecxz
lock
mov
pop
add
dec
mov
ret
shl
loope
sub
jne
bnd
adc
cld
aaa
js
clc
movsb
jns
inc
inc
test
inc
mov
jecxz
dec
sub
cs
add
scas
and
out
push
mov
nop
fdivs
filds
xor
mov
push
pop
loopne
lds
rcrl
ja
ss
xchg
dec
sub
sub
in
jmp
cmpl
mov
outsb
pop
push
mov
je
inc
mov
cmp
cmp
xor
arpl
jle
fdiv
data16
and
sarb
mov
pop
and
iret
fistpll
in
dec
sbb
incb
xchg
and
mov
ljmp
xchg
or
test
in
jmp
or
pop
xchg
mov
pop
je
sti
push
dec
scas
pushf
das
pop
in
ret
movsl
lds
adc
loop
xchg
sarl
adc
inc
rol
jae
movsl
test
imul
pop
lds
aaa
sub
lock
xchg
aaa
dec
enter
out
fildl
pop
mov
dec
mov
mov
aaa
mov
cwtl
test
or
int
outsb
jne
aad
vpmullw
dec
out
xchg
mov
jbe
mov
loopne
xchg
loopne
pusha
rclb
bnd
push
pop
sub
sbb
sub
fbstp
cli
mov
lret
xchg
cmp
shrb
sbb
lods
jmp
mov
xchg
push
xor
nop
scas
or
or
mov
je
je
lods
jmp
decl
int
rcrb
add
cmp
rolb
xlat
inc
fisttpll
pop
fadd
dec
int3
cmp
adc
loop
imulb
movsb
jle
sar
cmpsb
or
jbe
xchg
push
out
rcr
das
inc
in
stc
pop
lods
cs
orb
mov
frstor
out
sbb
lock
test
lcall
int
adc
push
arpl
pop
inc
out
jl
and
dec
jnp
jle
popa
daa
xchg
ljmp
xchg
mov
mov
lret
popa
ja
mov
push
sbb
push
and
sub
adc
and
mov
std
test
sahf
ss
lcall
mov
xchg
jnp
xchg
lret
push
andl
adc
lock
outsl
sub
mov
adc
test
cmpsl
xor
lds
cltd
int3
adc
adc
int3
aad
mov
mov
out
icebp
mov
pushl
vpaddsb
dec
lcall
cwtl
or
clc
push
cmp
jle
scas
aaa
mov
fdivr
mov
xchg
loop,pn
aaa
jecxz
fiadds
jmp
addr16
rclb
bnd
aam
xor
arpl
das
sub
ljmp
dec
push
dec
pusha
inc
sbb
mov
push
sbb
adc
cmp
imul
popf
stos
fnstcw
out
fistps
cli
movsb
add
fwait
sbb
inc
xchg
inc
mov
aam
mull
mov
adc
cmp
mov
xor
in
jo
shlb
out
cltd
pop
sbb
xor
mov
jge
adc
scas
pop
test
int
iret
shlb
and
in
cmc
push
scas
xchg
xor
stos
push
pop
inc
cld
popf
mov
cs
data16
imul
push
popf
jmp
sbb
push
pop
imul
test
add
dec
sarl
jmp
xchg
imul
jmp
mov
jl
jno
call
pop
mov
in
xchg
mov
loop
pusha
ret
dec
lods
shlb
jbe
outsl
rorb
jno
xlat
frstor
lret
and
inc
inc
data16
cmc
shl
mov
adc
fmul
or
mov
push
enter
jno
jge
cmp
jns
sub
dec
push
jno
mov
dec
jg
ret
pop
in
imul
enter
pop
cmpb
lea
shlb
jmp
push
ret
add
add
cmpsl
jg
test
pop
pop
inc
cmpsb
or
gs
push
dec
insb
test
shr
cmp
fidivs
int3
jbe
xchg
pop
lds
xor
push
jno
lret
jno
mov
xor
scas
inc
jge
mov
mov
adc
pop
adc
cmp
and
pop
std
dec
loope
mov
mov
lahf
mov
inc
pop
insb
sahf
pop
dec
mov
notb
pop
rorb
add
xchg
adc
cmp
inc
outsb
jns
lods
ret
pusha
outsb
or
ds
mov
enter
leave
stos
ds
cli
mov
fwait
mov
add
std
mov
ss
roll
imul
into
loopne
push
mov
in
or
dec
nop
add
xchg
adc
stos
cmp
dec
aaa
shlb
mov
push
es
fidivrl
sahf
pop
mov
or
and
fisubrs
jg
stc
inc
add
fwait
inc
and
adc
cmp
into
insl
add
ds
std
add
pushf
ret
dec
xchg
repnz
cmp
and
xlat
icebp
rcll
arpl
repz
pop
call
add
xchg
mov
inc
mov
lds
outsb
or
jo
mull
xchg
cmp
pop
xchg
les
pop
call
mov
or
jmp
loopne
fcmovu
xlat
test
in
or
dec
jo
hlt
gs
jno
push
in
inc
out
mov
push
add
and
add
or
hlt
stc
nop
fists
or
lret
ret
es
and
jo
mov
push
negl
outsb
pop
mov
daa
push
or
mov
je
add
jnp
data16
push
dec
mov
mov
inc
lea
insl
lea
dec
lods
fidivs
mov
and
jo
dec
popf
add
imul
aaa
lock
sahf
mov
mov
popa
mov
mov
repnz
imul
fisubl
sub
repz
xorl
mov
movsl
shlb
jmp
push
dec
push
xchg
ja
pop
dec
push
out
cmp
push
jae
sbb
sub
outsb
lea
icebp
popa
xchg
mov
pop
mov
into
incl
repz
xorl
out
inc
mov
push
pop
jge
sub
mov
sub
mov
std
inc
not
or
and
lahf
xchg
xor
adc
add
jp
icebp
mov
js
scas
in
call
sub
cmp
or
pop
jmp
lea
jae
or
dec
in
fimull
test
push
cmp
hlt
sbb
inc
cli
popf
adc
or
sarl
movsl
js
sbb
cmp
lahf
sub
pop
and
popa
inc
into
out
aaa
lds
jmp
cs
or
pop
and
xchg
mov
mov
cmp
daa
jp
adc
xchg
leave
sbb
stos
shl
mov
mov
cmp
in
stos
lock
push
scas
add
popa
jae
out
pop
jmp
mov
outsl
inc
lahf
dec
imul
shlb
push
sbb
xchg
push
xor
push
test
in
ret
dec
repz
jne
and
xlat
push
mov
dec
push
pop
mov
aad
fsubrs
sub
je
dec
sub
sahf
mov
cmp
jbe
xchg
push
fst
ds
mov
ret
and
jl
notl
sub
in
lock
lahf
dec
inc
and
imul
stc
fisubs
imul
scas
adc
mov
cmc
and
dec
or
lea
or
xchg
sub
psubq
or
inc
jnp
xchg
idivl
cmp
test
in
cmc
mov
jns
push
sub
aaa
adc
jne
adcb
out
inc
or
or
and
mov
ja
inc
repnz
adcb
lods
dec
js
cmp
push
loope
jne
sbb
dec
mov
xor
ds
scas
mov
lret
cmp
ficoml
mov
popa
nop
in
or
or
xchg
arpl
mov
push
add
popl
dec
fs
xchg
mov
xor
or
shufps
lahf
jne
cli
sbb
rol
xchg
jnp
mov
lock
cmp
mov
or
push
adcl
xor
sbb
jl
lock
sarl
mov
test
xchg
jnp
mov
and
loopne
aam
es
xor
pop
out
std
inc
adc
sti
and
adc
lock
sbb
adcl
decb
adc
dec
sbb
testb
mov
jp
into
and
sub
movsl
mov
mov
pop
xor
icebp
js
ljmp
int3
jmp
adc
xchg
jnp
pop
jmp
adc
jno
xchg
jp
pop
divb
or
scas
xchg
arpl
icebp
mov
lods
out
mov
and
sbb
or
in
adc
jae
jle
popf
xchg
push
pop
lret
jl
in
xchg
repz
xchg
mov
mov
dec
mov
inc
adc
jne
cmp
or
arpl
push
dec
cmp
and
movsb
arpl
xchg
jp
aaa
es
sbbl
cmp
mov
fiadds
xor
xor
push
into
cmpsb
jbe
stos
clc
popa
mov
and
sbbl
inc
loop
pusha
sbb
data16
fsubs
rorl
pop
xchg
cmpsl
call
sbb
sti
and
xchg
push
sti
jae
popf
test
xchg
stos
iret
mov
pop
imul
loopne
xchg
rolb
ja
lcall
dec
xchg
out
jae
mov
in
jge
loopne
or
sbb
adc
jne
data16
xchg
repnz
rcll
jg
cld
sahf
loop
outsb
cmp
mov
sub
jae
lods
pushf
test
pop
inc
iret
insb
cld
test
andl
mov
fsubrl
in
and
loope
int3
mov
cmpsl
add
xchg
xor
mov
clc
or
xchg
insb
out
lock
and
cmp
cwtl
cltd
pop
sbb
push
test
sahf
sub
inc
rcl
adc
xor
aaa
nop
testb
sub
jb
insb
cmpsb
jl
jl
push
sub
push
mov
jg
cmpsb
xor
add
xlat
cmpsb
popa
jmp
push
adc
inc
movsl
xor
push
cltd
jg
call
cmp
cmp
shlb
mov
mov
or
mov
mov
or
mov
mov
or
mov
je
mov
add
push
loop
dec
mov
sbb
sub
mov
das
test
mov
push
enter
push
inc
call
fcmovbe
pop
inc
xchg
cmc
jl
inc
iret
out
movsb
das
out
pushf
out
and
lahf
sub
mov
jg
into
jle
lahf
pusha
mov
aad
inc
into
push
popf
repnz
mov
lret
jo
cmp
sub
mov
data16
andb
fs
lods
stos
mov
lret
inc
mov
dec
mov
pop
lcall
xchg
xchg
push
orl
push
std
or
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
push
das
sbb
sbb
jmp
lret
pop
and
push
addb
xchg
rorb
outsb
cmc
xchg
inc
scas
jge
cmpsb
divl
ret
mov
inc
jo
inc
sti
fcompl
mov
push
fcoms
push
pop
stos
jge
mov
jae
test
scas
cld
xor
dec
cmp
fdivp
xor
inc
nop
xor
outsl
out
repz
or
sub
sub
or
inc
and
mov
xor
fmul
pop
or
add
nop
mov
dec
gs
repz
pop
call
scas
shl
mov
cmp
jl
cmp
std
les
jmp
sub
push
push
mov
popf
fwait
mov
cmp
jle
inc
loop
and
adc
jl
or
stc
int
stc
fwait
pop
dec
add
stos
cmp
inc
orl
andb
or
pop
rcr
sahf
or
cmp
idivb
pushf
out
mov
out
cli
or
and
push
and
in
jecxz
int3
push
mov
xchg
jle
cs
push
fsubs
add
jb
outsl
arpl
mul
sub
sahf
dec
mov
arpl
popf
fcomps
lea
in
cmpsl
fdivs
test
fwait
mov
imul
popf
mov
push
pop
jns
add
adcl
cwtl
ficompl
inc
repz
insl
call
xor
push
sub
inc
sbb
enter
mov
push
pop
dec
push
dec
mov
orb
push
sbb
fidivl
bound
ficoms
mov
inc
aam
das
and
jg
cwtl
sub
cmc
and
lods
jb
xchg
fistl
mov
or
inc
bound
hlt
jns
pop
and
ds
sbb
inc
sub
lock
mov
fdiv
leave
xchg
dec
es
pop
lcall
push
jle
int
xchg
sbb
pop
out
mov
sub
scas
aaa
decb
jecxz
mov
mov
mov
fmull
jb
addr16
fdivrs
xchg
rclb
divl
sbb
xor
sti
add
hlt
in
xchg
jb
ret
xchg
or
mov
dec
jb
xchg
jno
ret
xchg
outsl
add
xor
mov
cmp
cmpl
jg
daa
adc
pop
in
mov
arpl
in
push
jbe
rorb
dec
push
and
pop
pushw
mov
push
mov
aas
mov
imul
add
loope
jecxz
and
mov
push
mov
jbe
test
or
shlb
arpl
pusha
outsl
out
rorl
jle
sti
or
cmp
in
inc
idivl
mov
push
dec
insb
sbb
ret
out
push
out
sbb
or
xor
dec
dec
jb
test
clc
mov
add
lret
push
out
lret
pusha
lea
out
inc
fdivrs
pop
xchg
popa
int3
lahf
jge
or
rcrl
sbb
xor
dec
sahf
xor
out
sub
hlt
mov
outsb
sbb
das
popf
sbb
jno
lret
pusha
pusha
je
xor
cmp
out
mov
sub
pushf
pop
push
daa
decl
mov
xchg
insb
pop
fs
loopne
in
fwait
jle
xor
cmp
dec
test
std
pusha
sbb
pop
cmp
or
mov
xchg
sub
mov
fists
ja
xchg
mov
push
cmp
mov
inc
lods
jbe
cmp
popf
push
pushl
sysenter
xor
mov
mov
push
mov
jns
pop
add
repz
pop
mov
stos
mov
in
hlt
ds
aas
pop
fs
xchg
leavew
xchg
fninit
in
insb
jl
lods
filds
mov
fs
movb
popf
pushf
in
mov
or
mov
jne
mov
and
dec
jns
mov
testl
lahf
xor
pop
fbstp
jnp
xorl
nop
adc
xchg
add
clc
xor
cwtl
lret
push
push
sarb
aam
xchg
cwtl
popa
push
pusha
lea
negl
cs
dec
adc
mov
movsl
cmp
or
and
xchg
and
add
adc
mov
pop
push
jmp
cli
notl
pop
imul
adc
lcall
ret
shlb
movsl
sbb
inc
sbb
hlt
push
mov
cmpsb
outsb
sbb
out
add
push
ja
ljmp
or
xor
mov
ret
rcrb
mov
lahf
sbb
push
movsl
xchg
xchg
jg
fldt
aas
mov
lds
mov
cli
mov
lea
dec
mov
cltd
subl
push
mov
lgs
fcom
cmp
imul
mov
fsubrl
loopne
lret
and
imul
push
lret
inc
fnsave
in
add
xlat
stc
fwait
and
push
adc
dec
push
leave
dec
popa
mov
mov
xor
mov
test
push
lret
movsl
test
cli
and
push
pop
or
incl
sub
mov
fwait
jbe
or
mov
mov
jl
stc
xor
mov
add
adc
jmp
mov
aaa
pushf
inc
inc
or
inc
dec
test
adc
lods
cltd
xor
cmp
pop
stc
inc
pop
loop
adc
aaa
fs
cmp
mov
outsl
xchg
andl
std
dec
push
in
out
jle
out
mov
ret
das
dec
and
daa
das
cmpsl
fwait
repz
pop
clc
loope
push
xor
mov
inc
xchg
or
cmpsl
sbb
js
push
xor
jns
loope
jge
push
mov
mov
movsl
in
dec
pop
inc
xchg
or
ficompl
xchg
fwait
push
ret
adc
movsb
cltd
adc
add
push
mov
movsl
inc
mov
xor
sarl
push
lods
fcomps
dec
jp
jmp
js
loopne
pop
popf
stos
adc
inc
mov
stc
mov
mov
push
mov
jb
imul
jbe
stos
sub
inc
int3
mov
subl
xlat
je
cs
sub
es
lret
inc
negb
xchg
lret
testb
sub
mov
xorb
fs
sti
call
adc
in
mov
mov
or
push
js
jbe
fldcw
jecxz
lcall
popf
ss
mov
xchg
ljmp
mov
fstpt
stos
push
lret
lea
andb
jle
mov
sti
jge
ja
fsubs
mov
das
fstpt
mov
mov
push
sub
cmp
sub
sahf
sahf
pop
mov
sub
cmp
inc
cmpsb
scas
and
adc
mov
and
repz
es
rorl
out
xchg
add
lea
xor
xor
lock
stos
mov
inc
loop
push
mov
fnstsw
jne
xlat
push
icebp
leave
popa
jp
test
sti
lock
mov
sbb
js
sbb
pop
scas
lret
jne
xor
push
cmp
sbb
mov
add
popf
mov
dec
pusha
movsb
mov
fistl
in
jo
imul
add
pop
test
rcll
and
fmul
jo
das
mov
fs
pop
ret
xchg
imul
mov
outsb
jle
in
jmp
and
inc
push
xlat
dec
cs
decb
mov
inc
xor
mov
xchg
imul
std
jne
adc
lret
loope
mov
pop
add
mov
lahf
icebp
add
in
jnp
test
adc
sub
movl
orb
int
lds
cs
shrl
test
pop
popa
loopne
outsl
mov
loop
add
xchg
fnsetpm(287
jns
daa
jle
mov
data16
push
or
int3
scas
xchg
mov
loope
inc
push
mov
cmp
out
dec
mov
sub
scas
mov
mov
lret
lea
mov
lcall
imul
fistpl
xchg
xchg
stos
dec
mov
jp
rcrl
adc
inc
stos
outsb
jns
adc
xlat
ss
add
mov
and
sbbl
lods
ja
cld
int3
sbb
test
lret
cld
outsb
inc
cli
fucom
std
mov
ja
xor
mov
enter
or
jecxz
mov
and
sub
in
movsb
fiaddl
mov
xor
ja
rolb
cltd
inc
cmp
sub
repnz
jg
out
rclb
popf
mov
xchg
jg
xlat
shlb
loop
in
add
out
push
rolb
inc
mov
out
cmp
sub
inc
add
xor
xorl
test
insb
pop
or
popa
push
sbb
mov
xor
jmp
cmpsb
cmp
push
push
in
sub
jl
sbb
xchg
faddl
movsb
movsb
aad
aaa
lret
xor
in
push
ret
imul
and
test
add
fcoms
mov
mov
xchg
and
push
mov
mov
dec
pop
jmp
push
adc
jg
testl
lret
fcoms
movb
testl
push
leave
ficomps
shlb
icebp
push
arpl
ficompl
xor
mov
cli
movsl
sbb
loopne
sbb
push
das
movsb
out
in
aaa
call
rcll
dec
cli
xchg
popf
jmp
jl
adc
dec
lcall
pop
mov
mov
movsl
dec
stos
inc
aam
dec
lret
into
icebp
cli
mov
popa
ss
aam
popa
pushf
loope
dec
stos
jb
push
xchg
push
in
sbb
into
fcmovu
fldl
lock
cli
mov
mov
je
xchg
arpl
and
jecxz
cmp
call
mov
movb
popf
xchg
or
lds
or
sub
stos
jnp
cld
xchg
loopne
clc
lock
sbb
dec
xor
xchg
mov
icebp
mov
lods
addr16
pop
xor
adc
or
jnp
and
mov
jle
push
push
cmp
pop
outsl
loope
and
in
loopne
pop
ret
ror
jno
add
mov
sahf
mov
subb
mov
mov
lods
in
xor
decb
mov
jecxz
sub
jo
daa
and
xor
cltd
lods
xlat
dec
aad
push
in
adc
jns
or
movsb
xor
push
sub
adc
add
pop
or
lahf
movups
mov
dec
lahf
movsl
packssdw
adc
sbb
sub
cltd
push
int3
mov
andb
jle
mov
sub
xor
push
in
sbb
aas
enter
outsl
clc
mov
dec
cmp
in
sbb
call
mov
icebp
in
loopne
jo
test
movsl
mov
notl
inc
cmp
dec
pop
push
lds
or
sbb
pop
data16
push
fimuls
nop
hlt
arpl
mov
ljmp
mov
adc
test
decl
ret
xor
cmpsl
inc
mov
adc
push
jg
jp
pop
cmc
repz
addr16
mull
mov
mov
inc
cmp
mov
add
pusha
adc
lds
xor
and
js
or
mov
pause
sub
jp
and
inc
mov
fdivrs
addl
out
jns
xor
movsb
mov
xchg
mov
dec
movsl
loope
xor
jns
mov
sbb
jg
ret
outsb
shlb
sub
inc
fs
push
xchg
mov
mov
xchg
addr16
pop
push
and
nop
adc
call
aas
in
rcrb
loopne
or
adc
fsubl
loop
int
ss
push
test
mov
out
push
ss
scas
mov
or
add
cltd
push
test
stos
mov
cmp
sub
arpl
inc
adc
cmp
adc
add
sub
jno
pop
push
dec
mov
incl
mov
jl
lock
fdivp
repnz
rcrb
xchg
sub
xchg
jns
mov
xor
cmpsl
push
xchg
pop
and
xlat
dec
imul
push
int
movsb
arpl
lods
adc
inc
adc
jg
xchg
mov
mov
xchg
push
cmp
cmc
add
and
sbb
jg,pn
adc
imul
std
insb
add
fdivr
xor
push
inc
push
push
nop
stc
lods
inc
or
ret
mov
jp
mov
lock
out
jae
pop
js
enter
cli
add
jne
cmc
add
sbb
iret
add
push
mov
or
je
and
and
pushf
and
subl
mov
adc
mov
dec
cltd
shrl
adc
sub
mov
jle
cmp
mov
pop
dec
out
cmc
popf
imull
xor
hlt
movsl
std
mov
pushf
pushf
in
lret
mulb
inc
and
and
mov
sbb
pop
mov
test
repz
push
test
xchg
aaa
xchg
test
enter
or
fcom
mov
and
addr16
add
dec
inc
sahf
xor
jg
es
push
lea
jbe
rorb
jno
pushf
les
sbb
lret
gs
test
js
adc
cmpsb
xchg
cltd
fptan
adc
lahf
clc
inc
dec
inc
inc
fisttpll
xor
jle
into
jge
pop
sub
sbb
mov
cmp
fldcw
cld
push
bound
lea
pop
adcb
into
push
cmp
mov
cmp
scas
fstl
cmpsl
jmp
out
jle
les
btr
ljmp
inc
aas
outsb
sbb
fidivl
inc
xchg
mov
mov
sbb
cmp
decb
into
iret
xchg
test
out
mov
inc
ds
popa
pop
adc
or
xor
cli
mov
inc
xchg
xchg
addr16
and
aas
adc
mov
push
xorb
mov
jae
mov
out
pop
and
mov
subl
xor
fildll
adc
in
mov
sub
cld
andl
sti
fs
push
pop
movsl
sub
add
mov
movsl
cmp
push
inc
sbb
ljmp
mov
inc
mov
out
aas
imul
std
add
repz
mull
pop
mov
adc
push
repz
popf
mov
iret
fstp
mov
sub
vphaddbq
test
in
jp
lcall
inc
call
push
cmp
jnp
xor
sbb
push
lret
push
xchg
into
hlt
jnp
shrl
dec
sbb
push
pop
in
cmp
fidivrl
dec
mov
es
test
sbb
popf
mov
fidivrl
js
mov
ljmp
xlat
fbld
out
pusha
pop
pop
xor
sub
add
push
jne
mov
out
sbb
cmp
sub
or
cli
mov
mov
adc
or
std
sub
inc
jbe
pop
mov
outsb
idivl
adc
inc
sti
bts
add
or
jp
mov
mov
aas
add
mov
cltd
jp
dec
pusha
in
out
mov
imul
bound
xchg
jne
mov
pusha
fst
mov
cmp
movsl
pop
rcrb
xlat
mov
push
jp
mov
jnp
repnz
mov
test
mov
inc
ret
xchg
pop
adc
push
add
push
xchg
inc
cmp
mov
rorb
push
add
int3
xchg
push
cs
fistpll
lds
push
mov
xlat
fdivp
adc
jbe
insl
push
xchg
aaa
in
aam
outsb
icebp
xchg
adc
lea
lcall
test
xor
lahf
lea
mov
inc
imul
aaa
sbb
pop
or
fdivp
pop
pop
fdivs
mov
fs
in
mov
cs
cltd
cmp
sbb
adc
add
sahf
adc
add
jmp
mov
daa
jns
cmp
jns
popl
lcall
insl
sub
push
test
rorl
arpl
aam
stc
imul
ljmp
out
inc
pop
push
mov
mov
jmp
nop
pop
insb
jns
sub
push
push
test
fidivrs
push
fildl
push
je
test
dec
add
jo
inc
stos
hlt
mov
inc
pop
mov
fs
xchg
fdivs
and
in
in
rcrb
and
push
xor
pop
mov
or
out
mov
xchg
inc
pop
mov
aaa
mov
insb
xorb
fwait
pushaw
inc
pop
cmp
mov
lods
mov
movsb
fsubs
out
mov
sbb
and
mov
xchg
push
mov
movsb
xor
xor
xchg
add
xchg
div
in
xorl
jb
mov
and
xor
lret
xchg
and
pop
enter
mulb
gs
ret
mov
int3
push
adcb
jns
sub
mov
mov
les
xor
jns
mov
inc
loop
hlt
xor
out
mov
inc
insl
repnz
ret
xor
sub
fcoml
pop
xchg
fcom
push
sbb
jne
or
pop
mov
ret
imul
push
imul
lock
scas
orb
cmp
jb
gs
pop
mov
outsb
mov
dec
mov
xchg
mov
int3
out
jnp
jg
cmc
cltd
sbb
pusha
test
repnz
pusha
jb
in
cwtl
mov
mov
test
incl
push
adcb
xor
div
adc
jg
mov
icebp
cli
stc
mov
stos
out
in
and
sbb
pop
subl
iret
mov
fwait
outsl
out
into
shrb
mov
lcall
lods
jbe
cmp
mov
xchg
mov
lock
cwtl
mov
pop
sbb
mov
jle
sbb
sti
dec
add
and
and
icebp
je
es
push
mov
add
sbb
mov
mov
leave
andl
cmp
xorb
inc
dec
inc
icebp
out
loop
xchg
out
jecxz
xor
fsts
lret
popf
in
adc
mov
das
cwtl
fldt
push
int
sbb
mov
int
fldt
mulb
dec
mov
icebp
hlt
adc
es
pop
fadds
pop
sbb
lock
fdivl
cs
and
pop
ss
js
mov
fstpt
inc
dec
add
jle
insl
or
in
cmpsb
mov
ret
outsb
pushf
push
es
sbb
mov
mov
inc
xchg
mov
lcall
sbb
test
and
sbb
shll
push
xor
cld
cmp
movsl
int3
lcall
inc
repnz
lods
push
sub
adc
movsl
mov
faddl
mov
sub
jl
mov
mov
loop
imul
adc
xchg
out
dec
xchg
lods
push
mov
cmp
clc
pop
xchg
mov
sahf
jbe
outsl
pop
add
jge
xlat
adc
xchg
dec
loopne
cmp
incl
adc
roll
xchg
test
push
sar
jge
push
orb
out
repz
sub
leave
dec
in
loop
jmp
sub
pop
sar
adc
pushf
push
jno
aas
fwait
push
test
cld
ja
fcomps
sbb
movsb
cmp
and
popf
ja
sti
dec
repz
sub
add
xchg
outsl
dec
xchg
mov
loop
push
cs
add
test
lds
jbe
xorl
jg
cli
jl
mov
add
lods
xchg
jge
jmp
dec
xorb
cmp
sbb
lea
enter
popf
test
or
out
mov
sub
dec
imul
mov
pop
cmp
addr16
push
xchg
repnz
rclb
xchg
mov
xchg
or
pop
jg
scas
outsl
sub
mov
scas
aaa
nop
mov
std
pop
xchg
fdivs
push
and
pop
lods
subl
sbb
test
mov
lret
pop
insb
dec
ret
dec
or
push
dec
in
aas
stos
lret
push
cmc
ds
xlat
cmp
insb
xchg
fistps
jns
sbb
call
mov
mov
loopne
xchg
stos
in
aam
mov
and
sub
into
inc
xor
jle
mov
mov
mov
loope
dec
pop
rclb
inc
test
sub
test
jnp
mov
outsb
jle
inc
fninit
jle
fwait
insb
psubsw
lret
push
mov
mov
cmp
les
cmpsb
add
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
js
arpl
jg
fisubrs
cwtl
jle
pusha
es
mov
lret
mov
lret
dec
je
mov
add
push
loop
dec
mov
sbb
sub
mov
das
test
mov
push
enter
push
inc
call
fcmovbe
pop
inc
xchg
cmc
jl
inc
iret
out
movsb
das
out
pushf
out
and
lahf
sub
mov
jg
into
jle
lahf
pusha
mov
aad
inc
into
push
popf
repnz
mov
lret
jo
cmp
sub
mov
data16
andb
fs
lods
stos
mov
aaa
fnstsw
sti
add
pop
psubusb
sub
je
jbe
lcall
mov
insl
sbb
frstor
dec
jle
ror
and
xchg
and
rol
dec
popf
xchg
lods
test
pop
mov
mov
mov
scas
mov
mov
lock
pop
std
popl
jl
fildll
js
int
fsubrl
es
je
test
mov
mov
xor
js
xlat
add
sbb
mov
xor
clc
or
jno
or
cmp
mov
repz
bound
xchg
sub
pop
rolb
rclb
mov
adc
push
pop
and
aad
mov
jbe
jnp
in
dec
pushl
pop
pop
jno
jp
bound
fcomi
rolb
xor
or
icebp
push
fcomps
pop
out
xor
xchg
testb
std
push
sbb
es
test
into
pop
outsb
add
sub
dec
sbb
test
lret
and
cltd
inc
sahf
ficompl
mov
stos
pop
insb
mov
cmpsl
in
das
and
adc
add
loopne
jno
lods
clc
out
adc
fidivrs
inc
dec
in
dec
jmp
fadds
jecxz
and
es
pop
test
test
and
imul
shll
adc
test
sbb
jg
out
dec
jb
push
add
mov
push
mov
flds
dec
ss
jns
in
jb
cmpsl
repnz
dec
jl
mov
out
adc
sbb
lds
adc
jne
jnp
sub
loop
xchg
xchg
jg
lcall
scas
inc
lret
cs
or
xchg
rolb
inc
and
pop
push
outsb
fs
sub
dec
out
mov
sub
mov
or
mov
mov
fimuls
sub
fidivl
rclb
inc
jo
mov
pop
push
frstor
adc
les
mov
and
test
mov
add
adc
dec
inc
jl
neg
pop
arpl
in
mov
shrb
loop
mov
adc
sti
frstor
movsb
gs
test
add
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
cld
inc
or
sahf
leave
mov
lds
subl
dec
push
sub
push
pop
scas
xor
bound
aas
shl
sub
fbstp
mov
xor
shl
inc
in
pop
mov
je
leave
sub
mov
outsl
dec
adc
and
add
mov
and
and
add
lcall
pop
leave
icebp
dec
or
push
xchg
in
cmp
cltd
xor
rcrb
push
popf
repz
cmpsb
lahf
test
push
cmpsb
pop
outsb
inc
add
push
out
sbbl
mov
sahf
gs
inc
imul
pop
inc
mov
push
std
mov
mov
push
mov
inc
push
insl
rorb
push
jecxz
mov
push
loopne
xor
arpl
cmp
push
test
shlw
and
mov
push
sti
cld
loopne
pop
or
inc
ret
mov
add
fistps
mov
xchg
fs
shll
shr
int3
dec
setno
xor
in
in
cld
or
adc
shll
sub
stos
pop
jle
scas
and
filds
scas
cmp
jg
mov
lods
fisubl
inc
add
fwait
rorb
dec
aad
add
and
fsub
out
xchg
mov
jl
insl
jmp
lahf
mov
xchg
sbb
icebp
inc
push
movsl
mov
cwtl
sahf
decl
inc
das
push
loopne
jnp
dec
pushf
sbb
inc
dec
push
cs
jmpw
pop
jg
adc
xor
out
repz
add
cmp
push
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
scas
lret
jae
cwtl
inc
orb
or
mov
and
insb
dec
xchg
cmp
push
dec
cmpsl
adc
fmull
test
mov
leave
mov
push
addr16
call
mov
push
stc
popf
test
in
in
jge
in
ficompl
push
mov
fstpl
imul
push
divps
fdivs
enter
push
sub
inc
cmp
daa
and
fstl
int3
push
dec
sub
jge
rclb
into
enter
xor
pop
or
mov
pop
es
jmp
rclb
lock
mov
repz
xlat
dec
add
lahf
sbb
imul
shl
ljmp
xchg
test
cmp
pop
xchg
lods
fildl
fnstenv
add
mov
mov
mov
mov
push
push
call
in
xchg
loop
add
and
fldt
movb
out
and
xor
ja
icebp
or
icebp
adc
sti
fisubs
cs
ljmp
jg
test
mov
add
dec
and
rorl
shrl
push
sahf
fcmovnu
jns
push
sahf
icebp
mov
in
jnp
repz
and
cmpsl
sbb
fdiv
loop
std
aad
mov
mov
icebp
sub
mov
lret
sar
mov
sbb
jg
loope
mov
popa
mov
mov
out
shll
stc
test
mov
cs
adc
out
jb
xchg
test
scas
mov
mov
add
out
xor
dec
cmpsl
mov
mov
imul
mull
sub
sti
xchg
popf
popa
and
lret
jg
mov
mov
xchg
inc
or
and
imul
loop
push
imulb
incl
mov
call
xchg
inc
pop
or
int3
dec
cmp
pop
rolb
jnp
sbb
shll
push
insl
test
or
fists
cmp
inc
jns
fisubl
dec
sbb
outsb
lcall
fiaddl
xor
jmp
int3
cmpsl
cmc
divb
icebp
mov
repnz
lods
xchg
jp
popf
cs
dec
or
imul
int
add
movsl
sti
pusha
jl
ret
pop
jno
adc
xor
in
lret
mov
xchg
inc
test
xor
sub
xlat
mov
shrb
xor
lds
or
sub
sti
in
dec
sbb
out
push
ja
jge
leave
cmp
divl
fstp
jns
push
fistpl
rclb
inc
in
push
sub
in
out
jo
inc
movsl
sub
push
ss
movsb
push
stos
imul
cmp
jbe
xchg
mov
dec
lahf
mov
mov
add
add
mov
in
aas
mov
cltd
mov
je
inc
or
adc
sbb
rcll
xchg
pop
fmul
sub
test
jbe
push
dec
dec
sbb
mov
adc
sub
imul
pop
xlat
repnz
mov
xchg
hlt
add
inc
mov
pusha
and
rcl
push
fimull
cmp
sbb
hlt
int
scas
das
lods
and
cltd
stc
insb
int3
mov
mov
jle
cltd
xor
in
push
jl
add
push
pop
cmc
adc
cmp
jp
and
dec
xor
mov
xchg
sub
fdivrl
inc
inc
adc
loopne
lods
rorl
insl
mov
dec
inc
inc
inc
rorl
shlb
in
jne
and
dec
sbb
cmc
adc
sub
nop
add
mov
shrb
bswap
pop
inc
mov
imul
rcrb
xchg
push
jecxz
jl
or
test
iret
in
jp
call
mov
ret
aas
sbb
cmp
stc
pop
push
das
daa
adc
sub
in
xorl
nop
jns
adc
arpl
stos
addl
and
xchg
cmp
push
xchg
stc
xor
pop
push
testb
aas
inc
dec
test
lcall
daa
scas
movsb
fwait
sbb
mov
fsubrl
repnz
dec
je
out
inc
and
push
cmpsb
enter
mov
or
push
in
inc
or
idivl
repz
cmp
or
mov
inc
outsb
in
dec
test
cmp
mov
sub
push
or
sbb
push
sub
pop
xchg
pusha
mov
aaa
mov
popa
call
sub
inc
jecxz
inc
and
mov
push
push
ljmp
cmp
dec
dec
inc
divb
arpl
test
push
les
xor
dec
or
lcall
and
inc
lock
test
mov
movsl
mov
xorl
push
fadds
sbb
sub
xor
ret
jb
jo
sti
push
nop
mov
loopne
in
mov
sahf
dec
fmul
adc
xorl
decb
je
stos
icebp
pushl
sub
ret
add
xor
insb
les
adc
add
popf
fisttpll
mov
mov
mov
icebp
fldt
std
dec
test
adcb
aam
xor
and
ficoml
xor
dec
jbe
sarl
adc
stos
mov
xchg
xchg
ljmp
jg
sub
mov
push
andl
cmc
mov
sbb
jns
popf
js
push
mov
xchg
shll
enter
mul
rcl
inc
jle
jae
fmull
ret
add
pop
arpl
cs
out
daa
and
or
das
cmp
hlt
push
lock
cmp
pop
lcall
into
addr16
inc
jecxz
xchg
cmp
sub
ja
jns
jb
push
jb
stc
lret
pop
test
dec
mov
push
out
and
aam
shlb
mov
stos
pop
dec
cmp
sahf
add
sub
jl
push
jae
sbbl
fimull
div
repnz
dec
mov
or
pop
cmp
fcmovnu
sete
sbb
out
push
push
imul
jp
xchg
stc
fisubrs
mov
imul
push
data16
xchg
xor
mov
inc
sub
out
inc
xor
mov
rcrb
in
enter
out
xchg
out
mov
jae
sub
adc
jmp
ja,pn
in
add
and
aam
cs
imul
movsb
cld
dec
adc
xchg
cli
rcr
in
xchg
and
arpl
jg
push
adc
mov
or
sbb
movsl
mov
sbb
jb
cli
sub
fimull
mov
rorb
cmp
sbb
push
clc
shrl
pop
jp
jp
test
mov
xlat
pop
stos
fisubl
or
push
jg
jne
ja
inc
adc
out
xorb
ret
sbb
out
hlt
in
pop
movsb
je
push
sbb
push
fcompl
xchg
pop
gs
cmpsb
lahf
sahf
inc
insl
es
mov
outsl
popa
iret
xor
push
or
dec
mov
xchg
push
fildll
pop
inc
mov
flds
dec
pop
add
repz
xchg
pop
adc
jb
lock
nop
sub
mov
push
repnz
lods
loop
out
push
mov
stc
xor
shlb
repnz
stos
je
lds
xorl
push
dec
scas
fnstsw
push
and
fwait
pop
fidivrs
push
push
mov
test
test
or
inc
mov
std
dec
imul
out
add
add
or
push
inc
inc
or
ss
dec
fs
or
xchg
adc
adc
and
pop
outsb
out
xor
sub
jge
icebp
jecxz
sti
sub
push
add
jae
xor
in
mov
lods
dec
add
inc
mov
mov
sbb
add
int3
pop
aam
inc
sub
jge
imul
insb
aad
and
cmpsb
fwait
mov
adc
or
out
hlt
adc
push
pop
jmp
clc
pop
repnz
mov
dec
cs
fimull
adc
cmc
adc
imul
sbb
mov
jnp
mov
cld
jmp
daa
sbb
dec
sbb
add
fldcw
jae
bound
repnz
mov
outsl
push
cmpb
pop
aad
test
or
adc
push
push
aam
lds
cmc
fs
ljmp
scas
adc
in
loop
int
or
lods
adc
cmp
mov
imul
push
sub
cltd
or
sahf
add
ja
pop
data16
pop
push
enter
out
push
shlb
cmp
pop
jmp
cli
mov
fcoml
leave
jmp
loope
movsw
mov
nop
adc
push
lock
or
lcall
mov
push
mov
cmp
mov
jl
mov
push
shr
push
mov
push
mov
mov
mov
movl
movl
mov
mov
mov
shr
add
shl
add
xor
mov
add
xor
sub
mov
shr
add
mov
shl
add
xor
mov
addl
add
xor
sub
decl
jne
mov
mov
mov
add
decl
jne
pop
pop
pop
leave
ret
int3
and
outsb
dec
mov
ss
pusha
or
data16
fdivrp
lea
cld
pop
faddl
bound
sbb
cltd
and
cmp
loop
cmp
fisubrl
cmp
push
aaa
adc
mov
mov
ret
adc
xchg
dec
insb
daa
pop
lahf
sbb
les
popf
mov
testl
inc
adc
mov
mov
popf
push
test
cmp
dec
ljmp
jmp
and
push
nop
sbb
adc
shrl
xor
push
enter
test
cli
cmc
fadd
out
fcomps
shrb
fildll
fcomi
lock
xchg
cmpl
sbb
jl
mov
adc
xor
add
xchg
add
add
jmp
xor
inc
lods
dec
clc
jo
pop
adc
push
push
clc
out
cmp
syscall
or
mov
rcrb
push
xlat
data16
andl
push
xor
mov
std
test
iret
std
push
ficomps
leave
sbb
in
pop
subb
fiadds
sub
addr16
mov
mov
mov
xor
fs
iret
ficoml
les
add
pop
repz
and
mov
ja
mov
jle
mov
push
nop
movb
fldln2
sbb
push
add
mov
cmp
cmp
dec
sub
jbe
push
aas
mov
loopne
popf
jle
push
mov
lods
add
push
ja
fmul
ja
in
lcall
adc
push
fsubl
out
cmp
movsb
mov
jne
outsl
mov
scas
cmp
jg
sbb
sti
shrb
cmpsl
rorl
incl
repnz
addr16
les
add
jo
bound
adc
je
leave
daa
mov
scas
or
ret
fsubrs
mov
ljmp
adc
rol
mov
push
sub
