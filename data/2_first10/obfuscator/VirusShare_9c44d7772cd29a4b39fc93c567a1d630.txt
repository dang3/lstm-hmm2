push
call
ret
ret
push
rep
cmp
cmp
jmp
push
mov
std
icebp
jae
dec
pushf
mov
add
mov
cli
or
sub
adc
fneni(8087
jl
mov
or
adc
rcl
mov
ret
clc
pop
jne
sub
mov
inc
fsubrs
sub
adc
mov
adc
mov
pop
in
jmp
adc
lret
jnp
xor
or
mull
pop
fbld
test
sbb
pop
push
out
out
sti
mov
jnp
addr16
cmp
in
out
sbb
xor
xchg
repnz
call
js
data16
mov
push
mov
das
jmp
aas
sub
push
jae
xorb
hlt
or
imul
add
neg
jg
arpl
mov
xchg
push
cwtl
and
inc
push
dec
mov
je
lcall
inc
cwtl
int
ss
xchg
dec
sbb
pushf
mov
in
mov
and
cltd
jbe
push
adc
mov
cmpsb
jae
mov
inc
js
lea
ret
sti
pop
imul
aaa
call
xchg
push
and
adc
jl
loop
push
movb
mov
sarb
leave
test
or
mov
repz
fadd
xor
clc
roll
insb
lret
xchg
adc
loop
inc
scas
inc
inc
movsl
lret
dec
cmp
jp
repz
iret
stc
sbb
out
sub
and
sub
mov
cmp
test
pop
inc
scas
dec
lods
xchg
dec
icebp
js
lods
push
jae
faddl
adc
pop
icebp
sub
mov
xor
inc
sbb
pop
ret
fs
mov
enter
xorb
push
add
je
mov
gs
es
xlat
inc
cmp
fidivs
jle
ds
rcrb
js
jnp
dec
cmp
adc
pop
in
call
xor
pop
xchg
aam
out
in
push
mov
clc
popl
cmp
out
in
cmp
fwait
je
pop
mov
cmpb
jb
add
call
sti
push
add
push
jnp
sbb
pop
loop
cmpl
popa
cmp
movsb
or
scas
fidivl
cmp
arpl
sbb
jecxz
cs
pusha
je
dec
inc
stos
test
fisubrs
popf
mov
or
xchg
stos
or
inc
insl
adc
test
lcall
xor
inc
pusha
inc
fdivrs
call
stos
xor
and
insb
popa
sbb
out
loope
stos
mov
jg
pop
jge
cmp
es
add
lret
pop
xor
out
push
jmp
gs
es
nop
or
fdivrl
imul
inc
adc
lods
sub
cwtl
jbe
add
mov
mov
xchg
or
pop
icebp
or
fs
or
scas
cltd
popf
popf
imul
adc
lret
inc
pushf
xchg
and
lahf
incb
push
dec
fwait
in
or
add
xchg
aam
popf
pop
cli
inc
mov
sub
or
test
inc
stos
pop
push
jae
mov
mov
jo
lret
cs
ljmp
aas
lret
cltd
daa
xchg
add
adcl
xchg
mov
inc
pop
jmp
pop
pop
aam
loope
or
xchg
movsb
or
lea
mov
cmpsl
mov
pushf
popf
and
mov
pop
push
fmull
dec
fisubrs
inc
scas
je
cmpl
lds
popf
jae
daa
dec
pop
pushf
stos
ds
sar
aas
repz
faddl
nop
jp
imul
xchg
adc
mov
sbb
dec
cmp
jmp
sub
leave
out
pop
dec
or
xchg
data16
or
pushf
test
mov
rcrl
lds
push
int
mov
sahf
xchg
mov
push
cmp
shlb
bound
imul
mov
mov
out
test
or
jge
test
or
sub
mov
aad
push
out
faddl
cmpsl
adc
sti
pop
jle
movb
aad
ja
fsts
loopne
mov
lret
cmp
out
sub
add
mov
lea
adc
jne
testl
lcall
pop
lods
lcall
and
out
mov
ljmp
and
out
rcr
enter
push
pop
add
push
insb
nop
roll
cmc
mov
daa
jns
dec
mov
ljmp
jb
push
addr16
popf
jns
mov
jb
adc
xchg
aam
inc
add
fucom
dec
pop
add
cli
xor
popf
nop
setb
adc
mov
shr
mov
jne
out
jle
mov
stc
sbb
sar
pusha
daa
addr16
mov
xlat
addr16
setg
leave
push
adc
or
add
sub
testb
sbb
xor
push
inc
arpl
dec
mov
pop
push
hlt
xchg
cmpsb
cmc
ret
test
xlat
cld
stos
bound
incl
push
pop
mov
lret
and
push
fwait
mov
addb
push
xchg
cwtl
mov
cmp
mov
out
enter
xor
inc
or
xlat
movsl
pop
ret
or
jno
or
sbb
add
outsb
and
and
ficompl
scas
push
cs
add
adc
push
cmp
js
lock
xchg
or
push
orl
jl
shlb
int
inc
ja
cltd
xor
cmp
int3
or
xor
mov
jge
adc
jmp
imul
into
sub
or
imul
cmp
jl
cmpsl
xor
xchg
enter
rcrb
pop
mov
mov
or
inc
xchg
jae
dec
inc
mov
aad
imul
xorl
pushf
and
xor
neg
xlat
mov
test
test
dec
in
jle
scas
xchg
iret
dec
dec
mov
nop
popf
sub
fstpt
mov
dec
or
lahf
clc
and
icebp
ljmp
shrb
scas
test
jle
enter
mov
mov
jo
lcall
lods
sar
ret
lret
arpl
add
and
cmc
or
mov
mov
je
inc
push
adc
sbb
int
cli
mov
test
cmp
xlat
shll
mov
dec
xor
adc
sarb
test
sahf
insl
adc
push
jg
mov
mov
pop
js
gs
sub
sti
xor
scas
inc
std
call
leave
cmc
jne
push
out
pop
and
jl
fwait
mov
iret
inc
push
pusha
mov
or
mov
push
jle
in
xor
adc
insb
insl
cmp
test
jno
mov
in
fdivrp
pop
mov
in
xor
popf
xor
xor
cmpsl
js
xchg
clc
add
fidivs
cltd
jne
and
sbb
add
pop
add
dec
add
clc
xchg
pop
fstps
sbb
pop
cld
sbb
sub
test
sub
push
push
dec
cmp
iret
loope
adc
adc
pop
or
lods
jbe
scas
and
loope
pusha
dec
in
in
hlt
inc
sbb
mov
fdivrl
push
sub
cmpsl
pop
and
jge
icebp
out
bound
in
lds
cmp
sub
jl
dec
mov
hlt
or
out
es
imul
xchg
or
fimuls
int3
les
mov
int
mov
imul
loopne
jle
pop
stos
pushf
sub
ds
sbbl
scas
pop
and
sbbb
cmp
xchg
lods
jno
popf
adc
into
sahf
je
jno
jge
imul
sub
stos
cmc
cmp
outsb
aad
loope
pushf
jo
sbb
mov
xchg
add
mov
mov
cmc
inc
test
pop
cmp
and
or
or
test
test
imull
fidivrs
xor
sti
lock
stos
mov
jns
push
sbb
xor
or
inc
inc
sbb
add
pop
xchg
notb
push
jae
sahf
outsl
cltd
outsl
xchg
sub
hlt
and
inc
cs
mov
mov
pop
lds
mov
fstps
jle
cmp
push
push
popf
mov
movsl
mov
faddl
mov
mov
int3
add
xchg
pop
lret
das
mov
mov
cmp
jmp
bound
jb
imul
add
mov
cmp
ret
ficomps
pop
movsl
mov
pop
mov
ljmp
jbe
and
pop
fdivs
dec
test
xchg
stc
movsb
push
mov
dec
pop
or
pusha
nop
inc
xor
mov
xor
pusha
roll
jns
out
call
mov
bound
pop
mov
enter
je
fstps
jmp
imul
imul
mov
sub
jecxz
test
or
adc
mov
lret
push
into
mov
fimuls
scas
test
pop
add
out
sbb
dec
jl
sub
sti
mov
inc
jle
mov
add
cmp
addr16
inc
push
cmp
aaa
xchg
test
lret
and
mov
pop
stos
sbb
sbb
cmp
inc
pop
adc
xchg
cmp
mov
dec
push
push
mov
add
xor
push
push
aam
push
stos
loop
ret
fists
dec
xlat
repz
clc
jb
adc
in
clc
jno
sub
enter
outsb
add
push
xor
xchg
clc
out
add
sub
dec
pusha
inc
test
stos
aaa
push
rdtsc
sar
mov
cmp
dec
cli
ret
loopne
ja
addl
je
mov
sbb
xchg
xchg
xor
fwait
xor
mov
xchg
cwtl
fbstp
pop
mov
pminub
pop
test
jno
mov
inc
adc
xor
jmp
cmp
adc
lahf
cmp
mov
cmp
scas
js
fsubs
test
jge
aad
cs
sahf
ljmp
leave
icebp
sbb
in
pop
pop
pop
pop
xchg
or
int3
imul
lahf
pop
imul
nop
xor
leave
in
adc
mov
pop
mov
out
or
insl
jne
fbld
xor
push
or
push
inc
pop
scas
xchg
adcb
mov
xchg
jg
cld
stos
rorb
or
cld
adc
andb
xchg
lahf
fwait
sbb
jae
jbe
mov
pop
out
adc
repz
mov
jae
insb
mov
adc
xchg
adc
out
xor
pmulhuw
xchg
test
sbb
inc
mov
stos
in
mov
mov
lods
pusha
nop
xlat
sub
stc
pop
js
sahf
xlat
xor
or
neg
outsl
cmp
pop
push
and
and
fcom
test
movsb
xchg
xor
xlat
lret
lret
dec
js
adc
pushf
adc
push
rcll
sbb
out
dec
inc
sbb
dec
cmpsl
aam
cmpl
test
es
js
test
sbb
and
mov
and
push
repnz
jg
cmp
fdivl
jmp
add
jl
adc
loop
mov
hlt
add
adc
daa
pop
mov
aaa
popa
js
inc
sahf
sub
jmp
mov
pop
jae
sbb
mov
sub
stc
push
mov
push
xchg
inc
jmp
cli
sub
lods
inc
pushf
lea
lods
shll
icebp
xorl
sbb
mov
pop
pop
mov
outsl
insb
orl
bound
or
cmp
loop
pop
loop
pop
push
notl
je
inc
mov
sbb
xchg
mov
push
fsts
push
lcall
mov
push
stc
jmp
jmp
jne
cmp
push
xchg
push
adcl
lock
and
rolb
pop
rcrl
cmp
scas
aam
adc
push
cmp
test
fistpll
iret
repz
aad
or
ja
mov
mov
inc
dec
mov
xchg
sbb
inc
ljmp
scas
mov
cmp
sarb
sahf
cli
imul
push
jmp
mov
test
or
push
dec
movsb
mov
xor
xchg
shrb
jns
fdivrs
insb
jmp
mov
pop
rorb
andl
lret
cmp
mov
in
out
dec
in
and
mov
mov
mov
cmp
enter
mov
sbb
dec
xchg
insb
mov
test
dec
mov
fsubl
ja
ja
add
ficoml
jne
xor
mov
jo
aam
push
dec
jge
test
insl
mov
xlat
xchg
sahf
mov
pop
popf
adc
and
aam
mov
inc
popa
out
inc
loope
iret
cmp
fidivrl
lods
inc
mov
push
jae
arpl
pusha
sarb
ljmp
adc
sahf
jmp
imul
mov
sbb
adc
pushf
fiadds
pop
mov
jl
jecxz
push
xchg
mov
xchg
cmp
mov
subb
xorb
lods
sub
push
inc
jg
add
fnstcw
pop
jb
popa
nop
cwtl
repnz
popa
sbb
jnp
or
cmpsl
jno
loope
ljmp
push
sbb
ret
jecxz
cmpsl
loopne
inc
push
fscale
jecxz
push
dec
stc
out
inc
fstpt
pop
jmp
cmpl
or
enter
sub
mov
xchg
insb
mov
cltd
mov
mov
bound
rcll
sbb
sbb
jl
enter
pop
xor
sti
adcb
cmc
mov
sub
or
lods
cmp
mov
or
je
test
jne
sbb
jnp
push
sub
sub
mov
addr16
xchg
dec
jb
in
repz
pop
sub
dec
incb
insb
addb
lret
mov
je
push
call
aad
mov
sbb
adc
sub
pop
sbbb
lds
sbb
xchg
inc
mov
jns
pop
sahf
iret
pop
das
or
dec
add
fdivr
fdivr
lcall
sub
jbe
inc
inc
sub
xor
jmp
insb
jmp
bound
dec
in
daa
arpl
mov
int
mov
adc
jp
xchg
mov
jecxz
and
pop
xchg
cltd
addb
stc
xlat
add
cmc
lods
jle
sub
sbb
push
mov
inc
sbbl
pop
daa
push
movsl
pop
fistpll
and
mov
or
push
test
pusha
sbb
push
sbb
lods
pop
loopne
inc
mov
in
dec
push
div
and
dec
xchg
mov
lds
jae
inc
adc
xchg
jbe
enter
movsl
shlb
add
adc
sbb
sbb
jg
loopne
push
in
inc
sbb
and
jo
js
add
inc
stos
pushf
scas
xchg
jb
shr
cmpsb
pop
fsubl
add
sti
add
mov
jne
addl
cltd
jmp
repnz
test
in
mov
xchg
push
pop
int3
imul
loop
jle
ret
inc
popf
dec
sub
mov
fbstp
mov
or
scas
out
subl
xlat
js
inc
loop
pop
test
popa
es
mov
aam
ret
pop
push
aaa
and
and
lea
sub
mov
xchg
push
sub
les
adc
mov
xchg
idivb
in
fs
test
xchg
mov
fildll
shlb
test
and
cmp
jg
fs
and
pop
into
ret
jecxz
jg
dec
in
sbb
inc
test
dec
cld
inc
ret
rcll
adc
jmp
dec
leave
paddusb
negb
fwait
fs
rcr
sbbl
mov
test
sbb
ss
and
jle
pop
roll
push
call
cmp
xchg
imul
aaa
xchg
jb
xchg
dec
cmp
nop
lods
iret
sbb
fldenv
lock
fisttps
dec
jp
sub
bound
es
cmp
cmp
cmpl
lret
jb
ret
jne
sub
xbegin
jne
data16
dec
mul
mov
mov
and
pop
cmp
outsb
inc
jbe
mov
fldl
ret
adc
xchg
push
ds
cmp
shrb
icebp
jbe
mov
cmp
mov
pop
ja
insb
into
and
lods
sbb
stc
jb
mov
test
jl
ror
mov
cmp
adc
cmpsl
add
fcmovnbe
shll
int
scas
dec
sbb
cltd
negb
das
add
push
aad
mov
pop
hlt
outsb
fsubr
pushf
pop
loopne
add
push
cld
mov
xchg
loopne
lods
mov
je
jnp
iret
add
stos
pop
mov
and
call
jae
cwtl
in
mov
je
lods
push
pop
in
test
out
cltd
movsl
loopne
cmovnp
push
pusha
sar
imull
imul
push
pop
push
sti
jno
outsb
lock
sub
testb
lret
hlt
out
push
lcall
inc
shl
out
xchg
add
insb
add
ds
jnp
mov
sti
iret
jle
lahf
jb
or
sub
or
pop
sbb
mov
outsb
sub
out
loope
sub
xchg
cli
lret
scas
shll
sarb
outsb
aad
xchg
pushl
decl
jne
cmp
mov
sarl
stos
xchg
push
push
push
in
mov
out
decl
clc
inc
in
push
pop
mov
cmc
xchg
cmp
push
lods
fisttps
fisubl
push
jne
sub
sub
aaa
shr
mov
fwait
push
sbb
aaa
das
lea
gs
lods
cwtl
je
and
sub
dec
sarl
loop
adc
xchg
stos
mov
pop
cmpl
popl
mov
mov
pop
adc
shll
lcall
xchg
or
aas
test
popf
xchg
and
stc
cmpsl
jns
jl
jl
pop
fsubp
in
lret
sub
inc
mov
xor
repz
xchg
xor
dec
xor
ja
or
mov
in
jne
mov
popa
jae
push
add
lahf
fwait
xor
jp
add
mov
xlat
fmull
and
mov
and
sub
pushf
lret
cmp
fisubrl
loope
xchg
mov
aam
leave
sub
mov
movsl
inc
cmp
ficoml
xlat
xchg
cmp
popf
aam
xor
insl
ljmp
pop
xor
inc
aam
lods
or
imul
sbb
repnz
clc
push
jecxz
fsincos
shrl
inc
or
adc
add
lods
pop
mov
ss
and
and
xchg
sbb
xchg
pop
and
xchg
pop
mov
cmp
and
gs
gs
xchg
inc
xchg
popa
push
jo
jle
xchg
fstl
cmp
add
mov
fnstsw
adc
ss
xchg
inc
dec
into
cmp
popf
cmpsb
cmp
mul
push
add
mov
inc
bound
adc
mov
mov
fmull
scas
je
xor
aas
inc
in
stos
and
dec
pop
xchg
cld
test
inc
jno
xchg
iret
jbe
cmp
sub
dec
jne
addl
push
mov
roll
out
lahf
sub
fwait
popf
leave
mov
xchg
add
jbe
mov
cmp
mov
xor
sub
adc
dec
pop
adc
sti
std
lock
stos
mov
pop
movsl
insb
cmpsb
ret
or
loope
jbe
mov
pop
int
mov
mov
loopne
jnp
jbe
gs
xchg
mov
jmp
pop
jmp
fs
pop
addr16
shll
adc
aad
adc
fistps
daa
scas
stos
inc
shrb
inc
xchg
cmp
mov
and
fs
cmp
repnz
insb
mov
push
arpl
shr
sarb
int3
sub
outsl
mov
xchg
rcll
in
cld
add
add
scas
sbb
loop
int3
fists
pop
stc
mov
inc
push
stc
popf
dec
out
divl
call
aas
test
sub
test
out
xchg
lcall
inc
cmpb
daa
cs
pop
push
or
cld
adc
jnp
mov
in
xchg
es
jge
mov
loopne
cli
test
inc
adc
mov
push
add
test
stc
mov
inc
out
cmp
shlb
or
sbb
cmpsb
in
int3
pushf
push
mov
leave
mull
sub
push
lods
out
aas
addb
xchg
imul
xor
iret
sbbb
stos
fcompl
js
mulb
cld
icebp
dec
imul
cmp
data16
sahf
jg
adc
sub
xchg
js
inc
mov
mov
and
lret
push
cmc
mov
pop
adc
pop
test
iret
fwait
jbe
movsl
mov
adc
mov
enter
xor
fcmove
testl
sbb
pusha
pop
xor
push
cli
insb
push
out
push
stc
je
add
ljmp
push
ja
mov
or
xchg
pop
and
xor
int
repz
inc
mov
rcr
mov
repz
sbb
push
pop
dec
sahf
sbb
pop
lret
imul
out
dec
stc
mov
cmp
xor
into
fmuls
cmp
icebp
adc
daa
mov
fwait
adc
dec
lea
rol
push
test
jbe
sub
outsl
adc
out
das
cmova
cmpsl
cmp
call
push
flds
lret
hlt
and
out
ss
into
cld
sahf
pop
cwtl
pop
call
mov
pushf
lret
cld
xchg
xchg
scas
ja
mov
sub
imul
sahf
aaa
and
lea
cli
mov
pop
scas
dec
push
repnz
scas
push
mov
push
loopne
inc
test
call
inc
or
out
jp
in
int3
lret
nop
dec
mov
mov
jo
pop
dec
inc
mov
rcl
and
pop
jmp
add
and
dec
ret
cmp
popf
sbb
inc
ljmp
ret
mov
xchg
roll
ret
push
hlt
push
or
ss
xor
push
call
ret
push
std
into
mov
jb
in
icebp
nop
sbb
pop
not
std
outsl
pop
lock
imul
sub
mov
ds
fistl
xchg
out
push
repnz
imul
xor
cmpsl
cld
testb
iret
ret
xchg
push
cmpsb
sub
lock
rolb
add
clc
xchg
push
popf
pusha
mov
shlb
hlt
or
pop
cmc
push
scas
mov
in
cmp
dec
lcall
and
lahf
addr16
mov
into
mov
add
cmp
inc
lret
xchg
movsb
int
repnz
fsts
adc
mov
dec
mov
pop
jb
or
ret
jle
mov
mov
mov
cmp
outsb
xchg
dec
subb
scas
bound
ss
iret
inc
into
sbbb
enter
insb
loop
dec
and
call
push
out
jb
repnz
or
pushf
mov
push
repz
mov
ja
hlt
cmp
shll
addl
mov
inc
sarb
xor
fmull
inc
loop
dec
xor
pop
pop
xorb
xchg
pop
dec
in
and
mov
hlt
pusha
sub
imul
inc
mov
xchg
ror
jo
ljmp
neg
pop
mov
testb
sub
cmpsb
in
scas
divl
mov
xor
and
jl
fbstp
ljmp
push
stos
icebp
in
adc
and
popf
mov
outsb
xor
pop
scas
fdiv
lock
js
mov
lahf
push
mov
inc
lret
movsb
xchg
pop
ds
pusha
add
mov
xor
jbe
sbb
jne
mov
test
dec
test
lods
inc
cmc
inc
mov
roll
and
in
rclb
aam
pop
inc
or
cmp
cmc
test
push
mov
xchg
or
lods
loope
add
pop
insl
lock
mov
bound
icebp
sub
test
dec
hlt
add
mov
ret
xchg
sbb
jbe
fiaddl
and
inc
fs
xor
movsb
loopne
add
cmpl
jnp
int3
fwait
mov
cmp
fistps
movsl
nop
iret
jecxz
xor
jbe
idivb
cwtl
bound
movnti
dec
insb
out
xchg
shr
call
add
ret
in
cmc
pop
ss
pop
jo
pushf
loopne
mov
scas
scas
xor
inc
cmpsl
data16
dec
push
lds
push
mov
dec
cmp
jle
insl
xlat
scas
pop
add
inc
lds
xlat
inc
or
push
test
or
mov
dec
push
xchg
orl
push
sbb
sub
mov
xchg
mov
jno
es
adc
add
cmp
xlat
rorl
outsl
gs
jp
inc
mov
jo
mov
jecxz
cmp
push
xchg
adc
push
test
sbb
and
call
xor
icebp
fsubrs
ret
fcomi
cmp
sub
lods
je
adc
decb
cmp
std
loopne
xchg
sub
sbb
inc
or
mov
xlat
hlt
rorb
pop
fisttpll
and
movsb
adc
jge
adc
fildl
fs
pop
outsb
adc
cmp
xor
push
add
js
sahf
cli
out
xor
movsl
out
or
roll
inc
rclb
xlat
pop
iret
popa
nop
dec
jl
mov
inc
xchg
test
and
lods
jae
push
insl
mov
push
sub
push
xchg
xor
lock
data16
mov
and
mov
push
lcall
jo
dec
andb
inc
loope
inc
shll
add
into
inc
cmpl
jo
mov
js
mov
jb
push
in
push
or
jp
xchg
mov
mov
cmp
nop
push
fmull
jg
ja
mov
xchg
pop
pop
icebp
mov
push
ds
xor
xor
adc
fimuls
out
cmp
mov
fstpl
inc
aaa
mov
out
fidivrs
das
xchg
mov
loopne
add
and
pop
cmp
es
push
je
jae
in
mov
aam
in
sbb
inc
divb
jbe
repnz
aam
lcall
outsl
adc
pop
xchg
invd
nop
mov
dec
cmc
dec
dec
push
leave
fdivrs
cmp
push
clc
clc
aam
push
out
inc
jmp
testb
in
lret
cmpb
sub
lahf
xchg
hlt
fsubr
jge
imulb
das
mov
inc
push
mov
fimuls
cs
mov
enter
mov
das
fisubrs
cld
mov
and
pop
cwtl
mov
pop
dec
jbe
inc
imul
mov
jb
out
test
jl
mov
jne
jne
add
mov
push
rorb
movsl
stos
jge
nop
mov
push
dec
push
pop
mov
and
push
cmp
add
scas
int3
mov
insb
xchg
clc
add
data16
addr16
pop
ret
and
xchg
insl
popf
jae
mov
jbe
sbb
pushf
cmp
inc
adc
into
mov
call
test
ret
cmp
jl
push
leave
icebp
mov
jne
ret
jns
pop
stos
pop
in
cmp
ja
dec
jle
inc
clc
inc
add
shlb
shrb
ds
and
test
shlb
in
mov
in
sub
inc
out
in
pop
ret
jne
pop
xor
fs
dec
and
orl
arpl
imul
int3
in
out
out
repz
sbb
dec
aas
xchg
cmp
test
push
pop
adc
movsb
adc
sub
and
push
popa
or
cltd
sbb
push
ret
xor
sub
sub
jg
push
ss
fisttpll
cli
dec
xor
sub
inc
mov
mov
clc
imul
xchg
inc
xchg
cld
popf
iret
xor
mov
xor
cs
test
mov
mov
or
lcall
daa
icebp
stos
xrelease
mov
push
lods
xor
dec
js
xchg
popf
fwait
sub
das
push
test
rorl
stos
pop
loope
cli
cmpl
fdivrs
or
jg
cld
dec
test
call
dec
decl
mov
and
xchg
mov
cmpb
pop
in
pop
mov
cs
loop
icebp
dec
cmc
push
iret
adc
aas
inc
and
mov
adc
push
sti
xor
cwtl
jp
imul
mov
add
nop
dec
adc
xlat
daa
ret
dec
mov
test
adc
jle
sub
cli
mov
aaa
int
lds
mov
push
ds
mov
jp
sbb
inc
mov
adc
inc
out
sbb
and
adc
scas
jmp
dec
andb
inc
orb
loop
das
fidivl
push
or
loopne
rcrl
mov
ds
push
pop
push
aaa
cs
push
cmp
stc
movsl
mov
aam
xchg
and
gs
lcall
hlt
mov
cld
call
xchg
xchg
rcr
sub
dec
add
jns
pusha
xchg
xor
cmp
push
adc
enter
jecxz
not
xor
es
sub
sbb
clc
int3
inc
aas
sbb
cld
shrb
add
and
mov
inc
cmp
repz
les
mov
dec
push
les
cwtl
or
jge
imul
shrb
cld
test
aas
xchg
lahf
add
ljmp
sbb
in
pop
add
sub
pop
or
xor
scas
pusha
jo
mov
test
jns
outsl
xor
pusha
out
insb
lret
cmpsl
dec
mov
sbb
jae
stc
xchg
lret
push
in
mov
fisubl
nop
ficomps
rcl
sbb
jg
jecxz
iret
xchg
lock
xchg
arpl
clc
cltd
jae
imul
in
in
jne
cmp
lret
outsl
clc
pop
cmpsl
jo
add
push
stc
add
cmp
es
pop
pop
negl
les
cmp
lock
test
rcr
lock
add
ja
cmp
arpl
mov
add
test
mov
mov
mov
jge
rorb
iret
cmp
popf
jne
fdivrl
mov
sub
jecxz
mov
inc
add
push
sbb
push
dec
cld
sarb
lret
push
push
push
push
iret
fs
xchg
dec
or
mov
add
mov
xchg
push
std
pop
lods
insl
ljmp
outsl
aas
dec
cld
inc
cmp
mov
pop
bound
adc
or
add
mov
xor
mov
jnp
in
addr16
sahf
cmpsl
dec
lret
dec
mov
inc
mov
fsubrs
stos
xchg
jge
jg
sub
xchg
cmpl
mov
push
adc
sbb
imul
mov
cmpl
add
jns
and
sbb
cmp
divb
dec
dec
inc
rcr
sbb
stc
sbb
adc
adc
inc
push
imul
in
stos
in
popa
push
stos
out
sbb
jne
inc
aad
test
gs
bound
cmp
ret
mov
stos
adc
aad
in
fwait
adc
cmpsl
sti
mov
cmp
ret
inc
lret
push
ljmp
xchg
inc
xor
cmp
push
adc
outsb
push
xchg
jle
rcrb
sbb
lock
xchg
mov
in
cmc
lods
add
cmc
adc
cmpsl
sbb
cmpsb
inc
mov
lds
cmp
lds
mov
lods
pop
cmp
pop
data16
sbb
pusha
in
movsb
aam
sahf
cli
mov
and
stc
pop
dec
loop
nop
enter
mov
sbb
fbld
or
jle
call
je
outsl
mov
inc
subl
lcall
pushf
push
or
mov
in
aad
jae
xchg
add
sbb
mov
movb
push
mov
in
popa
in
in
sbb
rorl
mov
inc
pushf
adc
mov
fcmovb
repz
in
mov
std
std
stos
xchg
insb
inc
mov
movsl
mov
jne
aad
xor
dec
shlb
cmp
or
pushf
sbb
iret
stc
aaa
in
setl
lods
sub
clc
push
mov
dec
imul
adc
std
jns
lods
xor
mov
dec
sahf
push
xchg
aas
lahf
pushf
loopne
inc
and
mov
xchg
mov
cmc
ret
je
mov
xchg
into
mov
mov
rdpmc
sti
jbe
mov
fbstp
fsubrl
cmp
test
ja
mov
pop
pop
scas
push
inc
int
nop
push
test
sti
aas
rcr
or
sahf
inc
jo
andb
movsb
mov
in
mov
push
fs
out
scas
mov
stos
or
pop
mov
jmp
and
pop
je
loop
xor
mov
imulb
cmpb
outsl
xlat
out
mov
mov
mov
sbb
jnp
jne
cwtl
call
sub
fiaddl
sub
push
addr16
and
ds
sub
sbb
rcrb
or
aaa
addr16
lcall
popa
scas
add
fldcw
hlt
mov
sub
inc
mov
or
xor
dec
int3
mov
je
sbb
popl
int
xchg
push
push
and
lret
pop
dec
mov
xor
xchg
inc
in
rorl
mov
int
test
push
cmpsb
sbb
push
add
cld
dec
cmp
out
bsr
mov
adc
push
jo
outsl
iret
push
fucomp
bound
xor
dec
jnp
pop
orl
and
sti
rolb
push
jle
sbb
inc
mov
orb
push
jne
inc
stos
jle
xchg
cwtl
push
shlb
mov
sbb
test
scas
lock
mov
xor
popa
dec
mov
adc
and
and
sub
rorb
jnp
scas
aam
xchg
sbb
push
mov
enter
xor
or
enter
out
cwtl
das
loopne
fwait
xor
stos
dec
roll
scas
pop
and
adc
xchg
adc
nop
mov
adc
and
sub
lods
jg
lea
test
in
aad
rcll
xor
pushf
aas
decb
add
aad
xchg
popf
sarl
lods
sbb
imul
bound
out
in
inc
add
loop
mov
sbb
loope
mov
ja
sbb
push
mov
sar
inc
cld
mov
decb
adc
movsl
xor
mov
xor
pop
popf
sub
das
xor
mov
test
leave
dec
pop
lock
mov
and
test
mov
cltd
icebp
shrb
pop
jle
pop
jle
mov
js
mov
pop
pop
push
jb
add
add
gs
scas
movsl
mov
sbb
lods
pop
insb
pop
leave
jnp
icebp
lret
sub
icebp
in
aad
inc
js
pushf
pop
inc
or
ret
popf
sub
dec
daa
stos
rorl
in
dec
mov
test
xchg
xor
inc
inc
or
lret
xchg
xor
add
mov
or
inc
lret
jmp
ss
adc
pop
cli
push
cld
cltd
or
xor
and
push
xchg
cwtl
int3
xchg
test
push
xchg
jnp
fs
in
mov
pop
cmp
jle
xchg
es
mov
notb
xchg
dec
cltd
test
push
scas
out
into
into
or
into
sbb
mov
sub
add
repz
inc
xor
das
shlb
sbb
scas
add
mov
or
xchg
sub
je
daa
pop
int
sub
xchg
pusha
jmp
sahf
cwtl
lods
mov
out
insb
arpl
aad
lahf
jnp
pushf
push
sbb
inc
es
dec
inc
cmp
sub
sub
imul
into
fwait
adc
stc
ljmp
push
in
push
push
cmpsl
std
fsubl
stc
jmp
leave
pushf
sub
call
jae
mov
test
into
in
xor
cmc
pop
xchg
test
or
add
enter
push
leave
inc
and
xchg
cmp
lahf
sbb
xlat
stos
adc
lods
add
cld
xchg
in
rcl
daa
jmp
adcl
xor
sbb
push
lcall
or
test
dec
mov
gs
mov
mov
les
call
xchg
out
pop
out
or
pop
addr16
xchg
mov
stos
add
fxch
fistpl
in
aas
xchg
lret
popf
fucom
movsb
push
mov
int3
inc
push
ja
and
sbb
sti
push
mov
mov
fwait
sbb
cmp
jb
push
pushf
cmp
subb
and
mov
rcl
and
pop
xor
jno
ja
jne
push
cmpb
das
cmp
cmp
rol
enter
mov
jo
shlb
fisttpll
lret
or
sar
and
movsl
aam
jecxz
sarl
popa
sar
imul
outsl
dec
mov
push
lock
fwait
enter
jl
shll
jbe
imul
mov
adc
fwait
or
je
add
push
push
int3
ret
or
jecxz
add
insb
xlat
jmp
push
lret
mov
push
sub
or
and
mov
mov
fstpt
dec
ja
jmp
add
inc
push
dec
mov
or
cs
ja
ss
repnz
push
sarl
jp
xchg
push
jl
testl
std
lret
sub
int3
out
popa
jp
int3
popf
sub
dec
pop
jnp
jae
push
mov
mov
xchg
movsl
iret
pop
push
or
pop
icebp
push
and
fmulp
and
out
pushf
xlat
pop
cmpsb
mov
addr16
or
enter
lahf
ljmp
dec
and
pop
push
add
shll
scas
lds
dec
xor
mov
push
pop
std
and
dec
inc
test
mov
mov
dec
xchg
les
xor
mov
mov
ja
loop
lret
bound
jo
lahf
lock
leave
push
and
xchg
popf
jne
add
lods
jge
sti
aas
mov
rol
rol
mov
and
cmp
pop
mov
in
jae
xchg
pop
pop
aaa
mov
jle
xor
push
cmc
push
sub
add
dec
inc
jb
orps
fbld
push
jb
lds
dec
inc
cld
add
cmp
xchg
or
scas
push
aam
stos
xchg
rcrb
xchg
xchg
movsl
push
outsb
inc
pop
js
insl
in
pop
cwtl
mov
ret
mov
ljmp
jae
jne
xor
rcll
xor
int
fiadds
jmp
iret
xor
lods
xchg
mov
xchg
cmpsb
les
lods
pop
data16
or
aad
jecxz
sub
push
xchg
xor
sub
aas
dec
aad
iret
aad
mov
lret
repz
out
dec
cli
imul
mov
inc
repz
pop
stc
js
stos
adc
out
jae
shll
cli
xchg
sbb
adc
addr16
cltd
outsb
lods
in
sbb
hlt
add
testl
mov
clc
out
fiadds
fbstp
int
cwtl
mov
mov
lea
xor
js
mov
dec
insb
fbld
xchg
sub
mov
sbb
push
insb
jmp
or
push
scas
mov
push
push
cwtl
call
imul
inc
jns
imul
shlb
push
call
addr16
aam
adc
xor
mov
sbb
inc
adc
jl
andl
push
inc
mov
sbb
cld
sahf
fisubrl
aaa
test
int3
sub
ja
inc
cmpsl
inc
push
fnsetpm(287
mov
mov
mov
mov
adc
dec
cmp
js
scas
pop
les
mov
push
ret
jg
inc
pop
jns
call
pop
inc
movl
mov
push
lods
fadds
sub
mov
clc
sbb
push
add
mov
bound
sub
add
and
hlt
pop
mov
aaa
cmp
cmp
std
mov
and
int3
or
xor
sub
pop
fistps
jg
inc
xchg
les
mov
add
shr
int
pushf
je
xorb
stos
mov
jne
pop
mov
push
hlt
jecxz
pop
fisubs
push
aam
xchg
jb
push
cs
shr
mov
and
pop
jno
imul
test
dec
leave
stos
pop
jecxz
push
cmc
mov
or
cmp
inc
aam
test
jo
aas
cwtl
and
inc
arpl
xor
mov
cltd
out
sbbb
out
xor
xor
ljmp
jl
pushf
adc
fidivs
or
push
cmpsb
mov
sub
mov
mov
pop
lock
fiaddl
xor
pop
pop
adc
sbb
cmp
sub
mov
adc
jbe
popa
fsubr
cmpsb
adc
pop
inc
push
add
mov
stos
movsl
test
lock
ret
adc
jle
mov
pop
jmp
xlat
aam
or
and
lcall
mov
popf
fdivrl
mov
stos
repnz
mov
xor
dec
mov
lock
ss
sbb
mov
aaa
pop
popf
xchg
push
add
je
xchg
adcb
into
dec
sbb
adc
cmp
push
in
xor
in
and
es
test
in
das
int3
rorb
inc
fidivl
adc
hlt
std
sarb
xor
mov
lret
loop
jl
shl
inc
mov
cld
fdivrs
cmp
jle
push
call
ds
push
dec
sbb
lret
or
jge
sbb
mov
or
imul
repnz
sub
stos
push
xor
iret
ret
and
fistl
cmp
int3
xor
test
int3
ss
scas
xchg
mov
pop
jne
out
shlb
out
push
xorl
adcb
cmp
jg
jne
int
imul
jl
gs
and
pop
pushf
add
cmpsb
aas
jl
orb
and
push
xchg
mov
cmp
int
out
lds
repnz
adc
inc
dec
enter
jge
imul
ret
incl
cmp
mov
inc
js
hlt
adc
jl
adc
xchg
pop
cmp
in
sti
inc
mov
dec
push
mov
outsl
ret
das
fimull
mov
cmp
jl
cmp
mov
mov
fisubl
jae
loopne
sbb
xchg
iret
jle
loopne
and
adc
shl
sub
add
push
cmp
cmp
pop
stc
mov
pop
mov
aas
mov
pop
into
xor
fwait
popf
inc
xchg
pop
rcr
cmp
push
mov
sti
and
shr
pop
loop
push
std
out
sub
lods
stc
jo
push
out
dec
sub
jo
std
lcall
cli
or
cld
fiadds
jp
imul
imul
js
mov
cmpb
stos
and
jbe
pop
push
cld
xchg
sub
sahf
push
pop
mov
mov
dec
fists
shll
aam
aas
ds
imul
outsl
mov
out
adc
xchg
xchg
mov
cmp
stc
cmp
and
aas
push
mov
aam
je
mov
push
lods
jle
cmp
mov
notb
sub
pop
mov
push
dec
lret
fsub
mov
test
mov
mov
mov
or
ret
sub
and
add
loope
dec
ds
xchg
push
dec
mov
mov
mov
in
dec
pop
lahf
mov
cmp
call
add
sbb
mov
xchg
cmp
pusha
and
aam
sbb
dec
insl
jl
in
out
sbb
fmull
stc
push
ljmp
xchg
inc
xorl
xchg
pop
adc
push
imul
xchg
pop
mov
je
mov
cmp
clc
scas
and
sub
inc
cwtl
dec
sub
fwait
cwtl
lea
faddl
push
adc
xchg
xor
cmp
cmp
cld
push
jge
mov
pop
repnz
jmp
aas
pop
xor
repz
test
cwtl
shlb
pop
jb
xor
iret
fisttps
lret
mov
cmp
sub
testl
lcall
loopne
or
repnz
nop
dec
lods
mov
test
sbb
mov
fucomi
shrb
mov
inc
sub
outsl
sub
gs
xor
mov
inc
jbe
sbb
movsl
sub
mov
out
sub
push
insb
pop
lock
incl
loopne
mov
sbb
add
mov
sbb
xor
into
xorb
mov
mov
pop
repnz
stos
cmp
add
pop
nop
xor
push
sub
push
cli
je
fsubl
jp
fstpt
mov
adc
imul
cmc
sbb
xor
adc
insb
movsb
in
bound
xchg
rcrb
fidivrl
dec
mov
js
cwtl
mov
outsl
dec
push
icebp
into
xchg
fisttps
jb
dec
in
bnd
dec
push
cmp
sbb
dec
filds
push
lds
push
subb
fcmovb
pop
mov
dec
pop
cwtl
jmp
insl
ja
push
mov
leave
jno
addr16
mov
xchg
mov
int
enter
sub
jmp
sub
mov
fcmovnb
imul
jmp
sub
lcall
repnz
and
mov
enter
xor
imul
adc
and
pushf
insl
mov
dec
or
cmp
pop
dec
std
mov
leave
xor
xchg
pushf
cmpsl
push
cltd
pop
inc
add
cmpsb
sbb
pop
stos
jns
xchg
adc
adc
std
mov
or
jmp
jb
and
lcall
dec
jg
leave
lds
arpl
xchg
jae
mov
sub
dec
mov
gs
test
fistpll
push
inc
push
ja
inc
jge
ds
xchg
mov
mov
dec
and
mov
sahf
dec
jns
inc
cmp
outsb
push
mov
int3
lcall
mov
mov
adc
inc
bnd
xchg
dec
rorl
frstor
outsl
in
mov
or
lcall
movl
pop
fwait
xor
xorl
inc
andb
enter
jnp
pop
stos
mov
out
adc
push
out
lods
bound
adcb
scas
scas
pop
lods
and
hlt
xchg
lret
jnp
xchg
inc
addl
push
out
rcrl
or
js
xor
jo
aam
mov
or
lock
mov
test
sbb
or
adc
fs
js
xchg
mov
daa
push
sbb
imul
mov
out
mov
and
mov
sub
or
cmpsb
pop
cmp
rol
mov
lds
imul
xchg
movsb
out
aas
xor
cmpsl
test
outsb
js
pop
sub
cmc
test
sbb
into
dec
test
es
sbbl
or
jmp
cltd
movsl
mov
mov
inc
inc
in
mov
adc
mov
mov
cmpsl
cs
xchg
dec
jne
add
mov
movsl
inc
or
cltd
stos
ficompl
mov
cmp
bound
addl
ljmp
pop
rcr
xor
out
fs
pop
mov
cltd
push
xor
rolb
test
jo
iret
stos
fxch
into
nop
outsl
movsl
add
std
stos
cmp
and
pushf
and
fsubr
sbb
dec
jecxz
xchg
scas
clc
push
cwtl
repz
pusha
mov
icebp
cmpsl
cltd
outsb
fcoms
dec
ja
cli
outsl
imul
daa
sbb
lcall
add
sub
or
fidivrs
aad
dec
mov
pop
daa
push
mov
mov
mov
daa
mov
stc
cld
insl
aam
mov
jecxz
ret
sahf
popf
repz
clc
icebp
jns
mov
or
mov
gs
or
inc
dec
iret
sub
push
out
stos
push
nop
or
add
les
es
outsl
add
cmc
xlat
data16
pop
adc
jae
fwait
das
into
pop
sbb
testb
out
lret
jecxz
sub
test
popa
fidivs
mov
stos
pop
pushf
dec
data16
mov
mov
andl
sub
pop
in
sub
test
dec
jns
pop
jb
pop
adc
xor
sbb
xorb
lcall
arpl
lea
jo
adc
daa
xlat
rolb
xchg
aad
xorl
xlat
in
jl
lods
subb
sarb
mov
sub
gs
and
lods
pop
aad
mov
sarb
and
aad
add
jg
add
test
mov
mov
out
jmp
xchg
jns
jge
cli
popa
sahf
fcompl
and
sarb
sbb
xor
cmp
movsb
mov
jle
mov
mov
mov
pop
inc
lods
sub
mov
cld
inc
pushf
xchg
inc
dec
int
data16
sbb
aaa
popa
xchg
xlat
push
out
pop
pop
pop
notb
dec
mov
jns
mov
jmp
sarl
mov
shrl
ss
cmp
and
xor
in
fcomps
dec
int3
lods
add
data16
idivl
clc
in
cmp
outsl
and
xchg
fldcw
push
ror
and
in
incl
sbb
or
js
int
xlat
in
sub
xchg
fdivrl
jbe
pop
and
out
sub
sub
inc
das
dec
pop
add
mov
jl
or
repnz
loope,pn
ss
jno
jl
imul
imul
mov
and
push
adc
xchg
call
inc
push
xchg
fidivs
push
leave
xor
lcall
fiadds
lods
pop
mov
repnz
dec
dec
lods
jge
sbb
mov
gs
int
test
inc
xor
dec
pop
or
repz
push
fimull
jle
sub
scas
jo
mov
or
fisubrl
roll
hlt
jle
jbe
cmpsb
xchg
aam
movsl
sbb
lods
mov
fwait
sub
rclb
insl
dec
xor
or
adc
jno
mov
push
push
add
popf
das
pop
rorb
add
mov
daa
std
jmp
test
mov
add
sarb
negb
xchg
pop
mov
mov
mov
pop
pop
repnz
jae
push
jae
shlb
test
and
push
mov
hlt
jg
jp
jmp
into
adcb
ja
cli
cmp
mov
stos
xchg
jmp
push
negl
pop
cmp
cmpsb
dec
and
sub
rcr
inc
pusha
xchg
dec
repz
into
sbbl
movlps
push
mov
popf
sub
ds
add
cmpsb
hlt
sub
push
repnz
xchg
mov
jnp
je
dec
push
dec
out
out
xchg
xchg
sbb
dec
sbb
lahf
imul
test
add
addr16
push
jle
cmpb
loop
cwtl
mov
out
xlat
pop
popa
inc
lahf
fildl
inc
bound
jnp
xchg
inc
mov
jge
fnstenv
add
fmulp
lcall
in
js
dec
jno
lret
loope
ds
xchg
ljmp
cmp
icebp
popf
inc
jns
sbb
int
xchg
inc
fiaddl
sti
les
cmpsl
and
adc
mov
je
jae
sub
test
pop
mov
or
pop
inc
test
pop
jbe
or
pop
and
jne
bound
dec
test
adc
sti
push
test
pop
lea
ret
scas
addr16
inc
shrl
xor
ret
adcb
shll
idiv
xchg
into
call
shll
mov
pop
out
jne
stc
mov
iret
lret
fidivl
or
and
rcrb
sub
test
pop
mov
sar
mov
mov
add
rcrb
lea
icebp
add
jmp
push
pushf
aad
out
jb
mov
cs
mov
pop
mov
aam
mov
popa
add
jp
inc
hlt
dec
mov
lret
dec
repnz
shr
cmp
sarl
add
rcrl
jae
mov
adc
movsb
out
dec
jns
inc
mov
xor
add
cld
push
pop
pop
adc
sbb
call
test
or
xor
xor
xchg
jge
adc
loop
repnz
mov
fs
sbb
loope
loop
cmpl
fs
push
mov
mov
mov
mov
and
sub
cli
addr16
fidivl
mov
xchg
mov
dec
xchg
adc
sub
out
and
xor
pop
fsts
mov
xor
cwtl
or
pop
inc
xchg
xor
add
dec
and
add
jae
idivl
inc
pop
pop
sub
sarl
xor
cli
pop
outsl
sub
cmpsb
cltd
fildl
jns
jbe
jmp
add
scas
dec
and
movsb
ds
int3
jno
test
mov
test
mov
adc
pop
scas
xchg
xchg
out
push
out
add
mov
cmp
mov
jbe
adc
pop
sub
adc
fsts
push
test
je
mov
lcall
sub
mov
scas
fs
push
push
sti
wrmsr
int
pop
mov
jl
mov
jo
dec
xor
mov
pop
lea
mov
jne
sub
out
mov
popa
dec
or
adc
jbe
mov
jno
add
cmp
iret
push
fldt
repnz
inc
es
mov
divl
jp
adc
inc
insl
sarl
jne
cli
clc
repz
call
shlb
xor
mov
sbb
pop
sub
das
movsb
jae
sub
bound
das
mov
jb
jmp
mov
mov
mov
ret
cmc
sbbb
int
jbe
add
ljmp
mov
or
pop
fdivrs
les
mov
xor
repz
insb
xchg
mov
pop
sub
lods
sti
add
insb
push
push
fidivl
push
pop
repnz
mov
push
and
jnp
stos
lahf
inc
arpl
arpl
cmp
sbb
xor
xor
mov
minps
cwtl
inc
and
popf
iret
lcall
pop
cmp
pop
adc
push
xchg
sbb
scas
jge
and
or
pop
faddl
push
dec
test
and
fnsave
mov
fcomps
xor
and
test
fcoms
popa
lret
inc
das
out
lds
cmpsb
sub
adc
inc
aaa
retw
loope
fbstp
incl
outsb
push
push
pop
sti
sub
push
dec
lds
pop
xchg
dec
mov
cmp
inc
out
shrl
inc
jne
repz
adc
dec
xchg
pop
clc
cmp
das
mov
xor
sub
and
xlat
mov
ss
xchg
add
cmp
add
dec
cmp
jb
xlat
cmpsl
cmp
outsl
gs
loope
fimuls
push
fdivr
arpl
adc
cs
mov
mov
jns
mov
xor
lds
aad
push
mov
mov
stos
aaa
sub
fiadds
push
mov
adc
ret
push
push
push
shll
out
inc
sbb
cmp
jecxz
popa
fistl
mov
jae
jg
pop
and
imul
ret
ret
divb
lcall
popa
repz
cvtps2pi
pop
popf
mov
lea
jle
adc
outsl
push
mov
push
sub
or
mov
mov
push
mov
out
dec
mov
fidivrs
scas
push
xchg
fstpl
xchg
sbb
mov
cli
shll
mov
ljmp
pop
inc
popf
jecxz
out
dec
leave
push
cli
rcl
push
sbb
cmpsb
mov
fbstp
adc
insl
insb
sbb
lcall
js
inc
fsubp
test
sbb
pop
ljmp
fiaddl
jge
not
nop
scas
call
outsl
lret
les
fldcw
and
or
je
and
cmpsb
cmpb
xor
mov
mov
mov
add
push
dec
pop
inc
js
pop
int
sub
dec
in
mov
adc
inc
jne
or
out
push
push
jmp
dec
test
pop
daa
sub
mov
and
sbb
je
in
adc
cld
fstp
xchg
push
mov
clc
lcall
mov
aad
sahf
movsl
mov
inc
jle
and
lret
icebp
shll
xchg
bound
xchg
xor
shll
mov
subb
sahf
stos
sahf
push
pop
adc
mov
and
mov
pop
mov
scas
sbb
repnz
shr
cld
sbbb
add
cmp
dec
mov
cs
in
mov
sub
cmp
ljmp
adc
cmp
fcomps
inc
mov
pop
test
lea
mov
into
les
sbb
rolb
imul
stos
cmpsl
mov
jb
call
xlat
gs
imul
sub
imul
roll
or
xor
pop
hlt
in
int
dec
repnz
cmpl
aad
aas
scas
sub
addr16
sbb
imull
out
insb
fsubl
out
add
mov
cs
push
jno
popf
mov
xchg
sbb
clc
push
jae,pn
je
sbb
enter
in
pop
repnz
xorb
jmp
movsb
jns
sbb
dec
cmp
sbb
roll
push
adcl
sbb
fisttpl
outsl
adc
adc
cltd
jl
clc
scas
push
push
or
test
xor
jp
aad
test
or
movsl
ds
daa
aam
out
orb
outsb
sbb
outsb
rolb
sbb
in
cmp
dec
idivb
std
stos
dec
add
mov
jle
dec
xchg
data16
ss
dec
or
push
les
sbb
xchg
push
repz
fstl
jno
out
ljmp
push
stc
adc
data16
sbb
push
lock
frstor
xor
sub
dec
xor
xchg
rclb
outsb
and
out
push
push
imull
push
out
dec
and
popa
js
xchg
ja
xlat
dec
add
cmp
scas
cmp
mov
pop
mov
pop
scas
add
or
call
pop
cmpb
xor
xor
jns
xchg
in
inc
pop
mov
dec
sbb
xchg
cmpsl
xchg
fdivrl
int
fsubrp
insb
inc
mov
sub
dec
imul
pop
mov
fnstsw
xorl
int3
icebp
inc
sbb
mov
dec
xchg
aad
sti
ss
bound
data16
fldenv
aas
in
fdivs
inc
push
xor
incl
xchg
stos
mov
mov
fmull
fstps
jno
mov
and
stos
mov
fildl
and
inc
mov
movsb
cwtl
out
jle
cmp
aas
cmp
xor
pusha
shll
sub
cmp
pop
js
add
fmull
popa
jne
dec
sub
mov
ss
cmpsl
dec
pop
sub
mov
mov
dec
stc
inc
nop
lret
sbb
or
mov
jecxz
jno
cs
mov
mov
dec
inc
out
aaa
rcl
xlat
sti
mov
cmp
mov
jg
aad
ss
pop
push
fsubrs
in
xchg
repz
mov
shrb
pop
mov
es
add
xchg
inc
repnz
push
ljmp
inc
xchg
test
xchg
and
adc
pop
jecxz
stos
int
mov
pop
dec
sub
sahf
xchg
mov
mov
jmp
add
dec
jecxz
pop
dec
ds
or
sar
push
cmp
jb
push
push
mov
push
enter
fnstsw
xchg
mov
movsl
lret
add
dec
inc
dec
lahf
int3
daa
ja
cmp
xlat
jge
popw
testl
cwtl
aad
jge
rcrb
cmp
iret
jne
xor
stc
fsts
pop
clc
and
aaa
xchg
add
add
mov
adc
mov
inc
jnp
cwtl
pop
push
out
jb
inc
daa
idivl
shll
cmp
dec
cmpsb
or
test
aam
cmp
enter
bound
xchg
mov
sbb
jg
mov
mov
sub
inc
clc
popa
mov
les
adc
neg
test
lods
repnz
jg
push
cmp
in
pop
test
fisubs
xchg
ret
stos
push
inc
mov
dec
xlat
pusha
movsb
jp
sub
enter
mov
mov
stos
and
push
jbe
mov
out
push
pop
fwait
lahf
iret
arpl
pop
lds
ljmp
ret
int3
sti
dec
pop
sub
pop
jae
data16
jo
aad
je
or
dec
in
sahf
aaa
popa
loopne
add
or
sub
adc
gs
sbb
lock
data16
movsb
nop
mov
insl
sub
inc
notb
jmp
cli
xchg
enter
imul
daa
push
ja
imul
push
es
add
ja
aam
inc
dec
add
pcmpgtw
inc
test
int
lods
dec
jo
outsl
cmpl
cli
sbb
dec
cmp
jnp
dec
loopne
sbb
ret
or
dec
xlat
xchg
jnp
sub
cli
sahf
pop
dec
sub
pop
sbb
in
rcl
xor
jb
push
mov
add
rol
shll
jg
clc
jae
sbb
mov
dec
push
push
xor
add
ficoml
mov
xor
js
ret
pop
mov
pusha
out
push
insl
lods
addb
push
test
jb
add
ds
inc
and
iret
lret
stos
leave
jae
add
frstpm(287
mov
jmp
push
mov
out
mull
mov
cltd
movsb
cld
pop
daa
daa
push
or
test
cld
addr16
adc
mov
xor
das
movsl
cmp
and
insb
sub
orb
sbb
add
sbb
push
stc
add
mov
inc
cmpsb
dec
mov
ja
mov
inc
clc
stos
and
or
jmp
pop
mov
push
sbb
cmp
or
mov
movsl
fdivl
mov
aaa
mov
sub
fwait
or
mov
mov
sbb
sbb
pop
mov
insl
movl
jmp
xchg
mov
and
or
scas
cmp
adc
cld
icebp
pop
adc
cmp
inc
scas
inc
xlat
pop
loopne
mov
les
negb
mov
add
iret
aad
dec
pushf
mov
lock
push
popa
push
test
call
jnp
ss
inc
mov
or
mov
adcl
jge
xlat
test
std
hlt
shr
xchg
xor
pop
es
ficoms
mov
push
aas
scas
add
lahf
mov
xchg
popf
adc
outsb
ret
xchg
jmp
pop
sbb
mov
lods
popf
jle
mov
xor
pushf
rorb
enter
dec
mov
mov
aam
mov
in
sbb
lahf
push
and
bound
aaa
insb
jb
shl
loope
movsb
aam
or
push
iret
daa
xor
cltd
push
repz
jnp
push
add
shlb
adc
insb
xchg
jp
jl
idiv
mov
and
jno
aaa
pop
out
rol
sahf
add
cmpsb
out
mov
cmp
dec
mov
add
xor
jne
scas
or
jne
test
into
idivl
popa
mov
xlat
ss
pop
and
mov
mov
insb
jge
mov
jg
test
pop
aaa
loope
mov
dec
es
sub
cmpsb
cmp
mov
xor
add
cmp
aas
fistpll
mov
out
jecxz
xor
sub
mov
add
clc
cld
cwtl
call
and
insb
add
cmpsl
adc
out
or
repnz
dec
leave
cmp
mov
push
aaa
popa
je
rcrb
xchg
int
cmp
add
sahf
popa
push
mov
in
adc
xchg
push
mov
into
adc
mov
add
push
cmp
out
pop
cld
push
rcrl
lcall
add
out
faddl
stos
aad
movsl
mov
arpl
fs
pop
mov
pushl
push
es
pop
mov
jge
xchg
repz
loopew
mov
add
in
inc
int
incb
xchg
scas
out
add
mov
call
cmp
pop
arpl
jmp
push
scas
mov
mov
push
push
ss
sub
in
sub
imul
lods
aas
xchg
jno
and
push
outsl
push
ja
cs
pushf
insl
push
pusha
lods
mov
lock
jg
mov
or
dec
sub
push
js
push
add
add
shlb
out
mov
push
adc
test
push
lret
std
les
jg
subl
insb
test
lret
jecxz
and
inc
es
es
jmp
jl
movsl
xor
adc
addr16
lcall
fsubp
and
int3
push
insl
and
std
dec
push
jle
js
testb
cmp
adc
jb
rcll
mov
ret
xchg
and
test
out
xchg
js
add
popa
mov
jge
xchg
jle
js
xchg
scas
test
dec
jb
repz
ds
fiaddl
mov
add
adc
xor
pop
fnsave
push
sub
dec
adcb
mov
dec
jcxz
mov
xchg
jno
inc
stc
pop
scas
mov
adc
mov
lock
jmp
xchg
ret
lsl
mov
push
aam
mov
je
ds
and
sub
rclb
mov
xchg
or
lock
add
inc
mov
loope
dec
cmc
loop
into
out
dec
fisubrs
lret
cmpsb
jmp
pop
sub
test
inc
pop
sbb
cwtl
or
cmp
out
sub
icebp
jae
aas
jns
jle
xor
inc
stc
insb
mov
mov
or
add
rcrb
xchg
inc
js
test
mov
mov
push
sarl
xchg
leave
cli
out
mov
sub
nop
adc
out
cmp
add
xor
mov
push
mov
out
sbb
decb
jmp
or
pop
repz
cmc
out
add
sbb
cld
in
fsubl
sahf
outsb
inc
leave
xchg
mov
repnz
cmp
xor
mov
rclb
xor
cmc
xorl
jle
cmpsl
out
adcl
pop
scas
mov
mov
pop
daa
ret
lock
idivb
and
lds
pop
cmp
sub
xchg
aad
adc
xlat
xor
jb
sbbl
dec
cmp
insl
mov
lods
pop
bound
add
sbb
sbb
imul
jle
push
iret
fstpt
push
or
pop
jge
fstps
lock
out
iret
dec
aam
xlat
xchg
cs
enter
jmp
adc
cmpsb
in
mov
dec
dec
xor
insb
clc
int
insb
jle
add
inc
fsubl
test
mov
pushf
std
inc
sbb
jns
lods
rcr
pop
cld
es
out
ljmp
subl
push
add
jbe
push
repnz
push
sbb
jae
int3
or
push
mov
sbb
push
jecxz
sub
lds
icebp
int3
jo
jg
adc
adc
pop
sti
lea
inc
daa
mov
pop
adc
cmpsl
push
cmp
lret
stos
push
mov
jns
jmp
and
inc
call
into
sub
nop
inc
hlt
loope
cmpsl
mov
aad
pop
cwtl
sub
das
fs
lock
fwait
add
popf
stc
xchg
or
pop
leave
inc
sub
fsubrp
movsl
imull
inc
mov
fs
add
daa
shlb
mov
or
jb
add
popf
push
inc
and
mov
xor
cld
cli
ja
shl
pop
jb
ja
rcll
pop
push
xchg
adc
loope
xchg
sbb
sbb
mov
cwtl
push
mov
or
dec
xchg
js
leave
mov
insl
mov
sub
outsb
fiadds
sbb
lret
fsubs
push
aad
scas
mov
clc
jecxz
andb
push
push
int
xchg
fldt
sbb
jg
dec
jne
mov
adc
push
mov
push
nop
stos
sbb
int3
adc
daa
imul
pop
cmp
lea
lods
std
inc
jmp
test
fistl
ror
pop
into
out
jo
adc
sbb
scas
adc
add
sub
pop
or
call
mov
popf
fcmovb
lahf
sub
jl
mov
add
pop
xchg
adc
pop
push
int
mov
dec
inc
mov
shr
in
pop
push
das
push
es
je
mov
repz
mov
pop
mulb
scas
pop
mov
dec
mov
push
hlt
pop
mov
dec
in
js
cmpsl
roll
aam
adc
xor
cmpsb
xchg
mov
inc
adc
icebp
js
notb
or
ret
aas
pop
cwtl
mov
xchg
mov
mov
cmp
mov
out
fwait
jne
stc
aad
mov
push
lahf
scas
and
subb
pushf
pop
lds
dec
les
cmc
pop
sar
jmp
adc
sub
leave
push
iret
inc
xor
cltd
fdivrs
scas
lds
fldenv
cs
arpl
or
fidivl
jbe
mov
push
aaa
in
cmpsb
pop
mov
mov
test
push
nop
ds
mov
loopne
xchg
cld
jae
push
ds
adc
and
mov
sarl
das
sub
xchg
mov
pop
add
pushaw
pusha
or
and
cmp
lods
loope
and
sbb
mov
lahf
xor
scas
sub
push
fisttps
cmp
inc
mov
nop
xlat
push
cmp
fnsave
loop
out
xchg
xor
mov
mov
mov
lea
inc
lahf
jns
push
dec
dec
xor
sti
or
dec
xor
jmp
je
mov
scas
jmp
and
shll
fstpt
xchg
lcall
inc
sbb
and
push
lods
jbe
sub
iret
sub
in
out
shll
icebp
daa
pop
pusha
inc
repz
mov
loope
jo
pop
lods
fsubl
imul
mov
mov
nop
xlat
jecxz
jb
fsubs
mov
fadd
cmp
dec
rclb
mov
cmp
sub
jno
cli
lret
shrb
movsb
les
xchg
jns
stos
insl
scas
int
in
nop
test
xchg
int
jecxz
cmp
xchg
mov
les
arpl
aam
dec
addr16
movsb
fdiv
push
push
js
push
insb
jns
mov
jecxz
inc
inc
gs
in
outsb
stos
xchg
xchg
jg
aad
mov
and
sub
adc
mulb
aas
push
jae
ss
push
add
cmpsb
xor
jno
call
movb
clc
movsl
lea
cmp
inc
push
sbb
mov
cmp
sub
cld
jae
cltd
mov
dec
mov
ss
push
sbbl
jns
cmp
aas
push
mov
cmp
cmp
cmpsl
jmp
stos
pop
rol
push
mov
in
popf
jle
push
add
mov
adc
xchg
sub
dec
dec
dec
loop
push
idivl
scas
icebp
jns
jo
xor
inc
xor
dec
call
mov
pusha
dec
out
pusha
test
xchg
lea
addr16
pushf
arpl
mov
mov
lock
adc
out
adc
sahf
jbe
test
mov
rcrl
fldenv
cmp
mov
pop
sub
xor
movsl
fwait
inc
scas
jmp
stos
jl
xchg
sub
pop
hlt
cmp
sub
mov
inc
inc
repz
out
hlt
les
ret
inc
xlat
cwtl
lret
dec
push
or
rcrl
add
xchg
and
push
jae
sahf
mov
cmp
inc
sbb
ds
mov
sbb
pop
sub
into
out
scas
xor
in
cmp
jge
out
or
rclb
lahf
loope
popa
movsl
sbb
add
dec
sub
ss
fcmovu
pop
sub
imul
push
add
and
jb
dec
sbb
jl
mov
repz
mov
inc
orl
xor
test
movsl
sub
jno
sub
jo
sbb
imul
adc
fcmovnb
push
pop
adc
popf
fisttpl
fldenv
mov
push
fstl
adc
push
fisttps
cmpsl
mov
jl
xchg
movl
pusha
pop
jecxz
push
popa
aaa
fwait
test
sbb
out
cltd
xor
iret
and
and
jnp
sub
insb
mov
es
mov
xor
rcrl
out
pop
ja
xor
std
sbb
mov
ret
mov
fstl
in
pop
cmp
ds
lods
lret
test
bound
pop
and
lahf
fisttpl
add
dec
repnz
inc
jb
scas
jl
jmp
inc
mov
stos
in
cmp
inc
lock
adc
pop
fistps
outsb
push
in
cmp
and
lahf
add
mov
fmull
sti
mov
and
pop
test
jno
icebp
dec
loop
inc
es
adc
jnp
jmp
jns
out
mov
test
push
daa
push
nop
inc
enter
mov
es
push
test
inc
cmp
insl
sbb
ret
loopne
xor
pop
push
lods
sbb
lock
push
out
call
cs
fcompl
mov
mov
jge
repz
repnz
push
testb
cmp
adc
jecxz
pop
cmp
pop
mov
jae
das
cmpsl
mov
jp
cmpsl
xor
push
xchg
out
clc
xchg
ffree
adc
ds
add
jp
sbb
xchg
mov
pop
inc
adc
dec
insl
stos
fildll
pushf
scas
pop
mov
add
pop
cmp
aam
or
mov
rclb
out
aad
cmc
movsl
cmp
fwait
gs
sbb
xlat
adc
jbe
adc
mov
jb
out
in
scas
jbe
hlt
je
dec
jnp
push
cmpsl
push
push
push
cmp
mov
mov
push
inc
jp
push
push
fwait
repz
lods
pop
mov
sub
and
out
clc
mov
jnp
insl
mov
in
subl
loopne
rclb
adc
inc
in
aas
sbb
insl
adc
mov
in
sbb
data16
pop
or
mov
rclb
sbb
mov
aas
xchg
mov
lods
or
pushf
sub
push
gs
mov
test
or
clc
cmp
add
fidivrs
mov
xchg
xor
sub
fsubs
arpl
push
xor
adc
pop
or
mov
out
dec
es
sub
mov
pop
sbb
push
push
inc
mov
icebp
jmp
aaa
add
dec
adcl
mov
rcr
xor
sbb
pusha
in
mov
lea
add
mov
mov
mov
sub
jns
add
jns
scas
push
cmp
sub
lea
jo
test
mov
sub
lods
mov
mov
fisttpll
repz
shlb
mov
mov
mov
push
xor
sub
pop
xchg
mov
push
sarb
cmp
loop
and
mov
sbb
xor
xor
popa
mov
ljmp
rcll
dec
inc
pushf
imul
push
xchg
push
and
xor
xchg
jge
bound
dec
loop
fs
add
xor
mov
jbe
jno
pop
out
sub
xchg
std
mov
loopne
add
cs
jno
sub
daa
jo
out
in
inc
testb
inc
jecxz
inc
xchg
and
stc
popf
push
rcrl
and
sub
insl
pushf
inc
sbbl
loopne
mov
or
jl
pop
repz
sub
cmp
mov
or
add
movsl
inc
sbb
push
cmp
cwtl
mov
sub
sbb
or
fisubs
push
mov
lock
rclb
xchg
push
in
out
sbb
mov
subb
icebp
or
cmp
dec
xchg
lods
repnz
sub
and
out
mov
mov
in
xor
pop
leave
popf
jbe
pextrw
pop
add
test
cmp
stos
or
stc
test
test
mov
pop
mov
inc
lret
mov
mov
scas
mov
adc
mov
ljmp
sbb
jmp
jne
enter
and
in
jl
dec
flds
sub
and
add
mov
cmc
nop
jnp
es
mov
lds
enter
shll
fsubrl
jae
push
in
cwtl
push
das
pop
sbb
push
dec
ds
sub
xchg
xor
push
adc
scas
jge
dec
push
cmp
inc
jmp
push
jno
loop
nop
and
xchg
cli
push
mov
jbe
pop
or
xor
adc
mov
test
ja
jge
mov
pop
push
push
and
mov
in
adc
pusha
sbbl
ljmp
nop
sti
pop
mov
cli
jno
xchg
lahf
push
cli
loopne
jae
lret
test
cmp
mov
or
mov
mov
inc
and
and
notb
mov
movsb
push
jbe
rcrl
jo
js
xlat
jnp
cmp
dec
inc
fimull
das
push
popf
cltd
cmp
fisubrs
mov
cmp
and
insl
cmp
dec
jge
xchg
or
or
fwait
mov
dec
add
int3
push
dec
jecxz
test
ds
mov
sub
inc
push
jl
in
dec
out
cs
outsl
dec
out
xlat
sbb
repz
hlt
sub
push
push
cmp
pusha
shll
inc
push
cwtl
pop
cmpsb
leave
jns
into
cmp
add
adc
fs
mov
mov
sub
push
fwait
sub
mov
jo
adc
test
dec
bound
subb
push
je
mov
mov
aad
pop
or
sbb
jecxz
stos
loope
stc
std
mov
add
fisttps
les
ret
ds
xor
mov
inc
out
aam
lret
arpl
cmp
jbe
cmpsb
andb
cmpsb
fsubrs
lock
sbb
test
pop
fmuls
loope
sub
sbb
mov
dec
sbb
inc
das
lcall
jge
jl
lret
push
lea
or
negl
aam
jecxz
scas
clc
adc
or
repnz
fbstp
adc
adc
repnz
sbb
inc
outsb
outsl
mov
and
les
hlt
sti
add
fxch
leave
pop
dec
cmpsl
andb
aad
mov
xchg
test
inc
pop
xchg
icebp
lods
cmp
out
jge
jecxz
cmpsb
pop
out
enter
xchg
push
push
lret
in
call
inc
mov
jns
adc
dec
and
mov
pop
xchg
cltd
adc
dec
cmpsb
lods
ss
xor
aad
orl
mov
ds
popf
adc
cmp
popa
mov
es
out
ljmp
and
das
pop
pop
jo
push
insb
pop
scas
mov
dec
push
pop
ret
sbb
sar
pusha
test
mov
xchg
daa
stos
add
add
repz
aaa
clc
mov
add
cltd
inc
or
push
test
aam
pop
sti
xor
imull
aam
sbb
or
mov
pop
xor
and
fistl
fwait
cmp
inc
pop
imul
mov
mov
fstl
and
cwtl
cmp
mov
mov
lds
test
xchg
aas
add
jae
push
in
insl
icebp
dec
iret
imul
add
gs
mov
push
mov
pop
int
daa
stos
pop
ss
movsl
faddl
test
and
outsb
xchg
sub
movsb
imul
out
lret
ds
mov
enter
adc
test
mov
in
inc
mov
sti
and
sbb
icebp
fs
into
adc
xchg
xlat
ja
arpl
arpl
pop
adc
add
out
inc
imul
shr
mov
push
sub
mov
cmp
jge
jbe
and
leave
lcall
ss
adc
shrb
xchg
push
add
pop
sarb
xorb
or
subl
das
xor
dec
pusha
dec
pop
cmp
add
xor
dec
sbb
push
and
jle
and
lahf
jl
pop
add
inc
ds
add
mov
out
dec
cmpsl
out
jp
sar
mov
gs
cwtl
scas
and
dec
fsubl
sub
xchg
mov
push
xchg
lret
pop
dec
xor
cmp
dec
cmp
sub
and
inc
dec
mov
xchg
sbb
popa
hlt
inc
and
add
insb
lock
push
mov
pop
jle
iret
mov
repz
pushf
sti
clc
jg
fwait
nop
push
push
jb
adcb
adc
fcomps
mov
lret
stos
dec
xchg
imul
int3
sub
stc
ret
lret
sub
cltd
dec
lahf
cmpl
inc
mov
cmpsl
icebp
fnstcw
xchg
orl
xchg
jnp
fistps
jns
lret
int3
loope
xchg
gs
inc
dec
pushf
pop
test
push
push
lcall
fs
pop
jge
pop
adc
mov
mov
xchg
xchg
jbe
push
test
cltd
push
pop
das
adc
sbb
cmp
sub
popa
repz
ret
in
mov
mov
and
sbb
sbb
xor
bound
jne
mov
fmuls
mov
or
test
dec
fldcw
dec
xor
insw
scas
aam
and
pop
das
scas
cmpb
or
pushf
call
out
adc
jb
push
aas
ret
push
stos
dec
cmpsb
adc
sub
adc
jne
xor
test
cmp
push
scas
xchg
xchg
jne
add
pop
in
call
imul
cmp
push
xlat
sub
sub
mov
mov
js
cs
push
xchg
or
mov
xchg
jmp
jg
jnp
sub
mov
jg
jg
sub
outsb
rcl
jb
xchg
mov
mov
jp
sub
fsub
testb
xchg
xchg
jb
xchg
clc
mov
shlb
xchg
dec
adc
imull
movsb
or
cld
mov
in
and
inc
push
push
add
inc
adc
add
cmc
fsubrs
adc
in
sbb
add
sub
sub
xor
add
lret
sbb
ret
stos
addl
insl
fisttpl
dec
shl
mov
pop
or
lods
mov
mov
mov
lock
inc
jle
xor
mov
lea
and
jns
retw
imul
mov
adc
adc
push
push
out
or
sub
fucomip
dec
fimull
pop
sbb
faddl
mov
pop
cmp
adcl
mov
or
cmp
stos
xchg
push
add
push
pop
ret
lods
test
push
fnstsw
aaa
outsl
xchg
or
mov
and
cmp
add
aam
call
xchg
adc
ror
adc
ret
test
aad
cwtl
or
push
lahf
and
inc
add
cwtl
adc
xchg
or
mov
and
xchg
ret
cmp
ds
push
das
leave
shrb
in
not
test
mov
clc
sbb
std
mov
push
push
jns
sarb
pop
cwtl
fs
les
sub
mov
in
outsl
adc
mov
pushf
popa
jg
push
int3
xlat
es
xchg
stc
shl
jns
sbb
lret
pop
push
or
frstor
jno
adc
mov
scas
aaa
pop
mov
dec
andb
and
mov
fisubl
aad
cmpsl
movsb
xchg
push
cwtl
scas
mov
jae
cmp
loope
pusha
ja
sbb
aaa
into
cltd
lock
inc
inc
pop
jnp
jmp
sub
movsl
add
hlt
cmc
sub
or
fildll
stc
xor
mov
faddl
out
inc
mov
push
mov
in
and
sbb
in
sarb
xchg
enter
and
gs
dec
leave
push
int
xchg
lea
in
xchg
dec
das
js
xchg
and
sbb
cmpsl
stos
lods
pop
in
lret
push
bound
mov
lret
mov
or
push
imull
ret
mov
lock
cli
jnp
or
out
and
jp
mov
test
adc
add
jecxz
scas
mov
loopne,pt
outsl
push
and
cli
arpl
addr16
movsl
negb
or
adc
jb
loope
nop
insb
mov
cmpsl
jle
mov
mov
into
adc
inc
in
lods
int
and
jge
xor
dec
call
sti
repnz
lock
adc
lock
imul
jge
pop
jmp
insl
std
loopne
jmp
lods
add
pop
rcrl
or
jmp
ja
dec
ss
inc
insb
imul
or
and
push
icebp
jne
fwait
push
sbb
movsl
xchg
xor
pop
fimull
mov
das
leave
inc
adc
hlt
xchg
or
mov
mov
lret
inc
mov
cwtl
push
mov
xchg
push
inc
jecxz
xor
out
jmp
cmp
or
dec
lods
aas
xchg
repz
bound
hlt
dec
rcl
mov
xchg
xchg
stc
imul
ret
sub
test
outsl
xchg
dec
dec
xchg
orb
mov
jne
push
and
sbb
or
mov
repz
jmp
jae
add
inc
imull
rcrb
push
cmp
frstor
out
and
dec
xorb
add
pop
jp
jbe
adc
mov
mov
add
xor
mov
lret
mov
inc
xchg
push
jp
stos
rol
adc
xor
cmp
pop
in
out
in
jmp
mov
test
jl
adc
daa
fnsave
lea
pop
mov
jne
icebp
pop
dec
inc
fmuls
pop
push
xor
push
jne
iret
adc
lock
inc
jno
mov
mov
lret
xor
inc
mov
sbb
sbb
mov
xchg
jge
pop
ficomps
ret
push
jbe
addl
ss
je
mov
fisttps
push
decl
sub
out
xchg
fcmovbe
lods
push
ljmp
mov
mov
lock
dec
cmc
stos
test
xchg
sbbb
gs
scas
call
pop
mov
mov
cli
push
jp
or
pop
test
lea
js
mov
jo
pop
fdivs
pop
dec
cmp
xchg
das
ja
jle
loopne
test
xorl
fwait
inc
sub
subl
aas
ficompl
adc
push
aam
negb
mov
or
fs
aaa
sti
and
fdivp
cwtl
pop
fucomp
dec
cli
nop
fsubr
add
movsb
repnz
loope
into
pop
js
loopne
jmp
dec
divps
pop
mov
inc
clc
cmp
dec
aas
jg
add
inc
pop
fisttpl
out
sbb
inc
dec
jae
in
jp
jbe
cmpl
adc
shl
sub
or
inc
addr16
jnp
hlt
gs
pop
shl
out
mov
xchg
repz
nop
gs
cld
mov
shlb
jg
fnstcw
testl
sub
or
stos
gs
loopne
daa
add
xorb
inc
pop
sarl
lea
out
cmp
inc
dec
mov
rcl
rorb
shll
ret
lahf
sub
hlt
aaa
loop
pop
hlt
neg
mov
aad
jg
aam
pop
fs
mov
adc
adc
mov
sbb
jmp
mov
push
fadd
inc
adc
mov
push
inc
pop
sub
dec
push
push
sbb
imul
fucompp
je
add
jp
imul
inc
cmpsl
fildll
sbb
je
aad
sbb
jno
testl
fsubrs
ljmp
mov
lods
inc
dec
dec
jno
jle
push
aaa
pop
pop
dec
hlt
cmp
pop
dec
pusha
push
push
jbe
cmpsl
xor
frstor
pop
ss
ret
mov
push
jo
mov
jl
testb
inc
js
mov
into
or
loope
jae
pop
jp
repnz
test
dec
mov
dec
mov
xor
test
pushf
xlat
fs
sub
insb
sub
adc
inc
std
pushf
cmp
push
jecxz
scas
pop
cmpsl
cmp
inc
test
mov
mov
and
inc
jp
rcrb
push
mov
inc
sti
imul
in
sub
mov
pop
loope
bound
fdivl
loope
push
xchg
inc
inc
jge
jle
inc
mov
pop
jmp
xchg
and
jns
pop
push
dec
or
rcpps
aas
push
out
add
int
dec
aam
pusha
push
sub
jbe
cmp
xchg
mov
iret
aaa
xor
sub
mov
scas
mov
add
fnstsw
inc
lea
mov
push
in
mov
test
xorl
fistl
and
jecxz
aad
bnd
repz
xor
std
sbb
hlt
push
mov
sub
adc
inc
xchg
test
lea
mov
andl
shlb
loop
mov
jno
ljmp
ljmp
fiadds
clc
sub
fldenv
sub
jo
sub
xlat
jmp
fistpl
outsl
add
movsl
mov
cltd
out
sahf
add
pop
adc
scas
pop
jmp
test
outsb
test
mov
cld
adc
mov
test
aaa
inc
int3
lret
test
mov
mov
inc
jecxz
outsb
xlat
mov
pop
rcrl
add
out
dec
or
into
vcmppd
test
aam
rclb
pushf
and
jge
xor
ret
fstpt
repz
insl
pop
sbb
dec
add
fsubrl
inc
shlb
fsubp
faddl
dec
cs
shll
mov
sbb
test
sub
aad
or
push
push
push
dec
jp
lods
and
pop
out
adc
jb
leave
in
mov
adcb
sbb
dec
and
mov
imul
jmp
js
xchg
scas
sbb
imulb
dec
xorb
int3
and
decb
fwait
dec
inc
call
inc
sarb
sub
mov
sbb
add
and
out
mov
js
imul
xor
mov
jo
int
xchg
mov
jecxz
lret
in
jge
out
lea
or
inc
adcl
adc
cmc
mov
out
pop
pop
into
sub
imul
mov
or
roll
mov
imulb
inc
mov
test
jp
and
adcb
push
xor
mov
cmp
in
outsl
xor
or
xor
faddl
add
push
jnp
jb
or
pop
loop
push
and
jg
add
fcompl
call
sti
hlt
and
push
dec
lods
mov
jne
sub
les
repnz
or
rclb
sbb
add
xchg
jge
arpl
sub
ja
arpl
les
ffreep
mov
jmp
das
iret
int3
cmp
jo
mov
cmp
rorl
or
into
aas
stos
push
xchg
sar
loope
sahf
jnp
in
or
insl
dec
outsl
repz
push
pop
mov
dec
in
iret
pop
and
aam
rcrb
inc
push
inc
pushf
ret
adc
out
outsl
and
bound
out
nop
or
mov
mov
and
push
push
xor
push
test
adc
and
mov
repnz
dec
enter
js
cli
xor
inc
cmp
xchg
or
sub
add
fmul
rorl
test
aam
out
or
ja
xor
cld
aaa
loopne
xchg
sub
aaa
jno
inc
and
fldt
adc
cmpsl
rclb
mov
loopne
cmp
mov
out
fsubs
and
loope
push
push
adc
cli
sbb
ds
es
mov
push
sti
cwtl
sbb
add
sbb
clc
jo
or
add
mov
fs
test
test
imul
mov
jbe
cltd
sbb
mov
lea
xchg
les
iret
mov
rcr
push
lret
push
js
adc
mov
jmp
adc
outsl
pop
bound
pop
outsb
mov
das
fs
pop
addb
pop
push
xchg
xor
ret
push
into
add
or
mov
icebp
inc
lock
in
push
add
subb
and
sbb
push
lcall
lods
nop
jp
mov
inc
arpl
jg
mov
popa
dec
sbb
aam
pop
pop
fisttpll
out
inc
jmp
repz
ss
xchg
and
add
aas
cwtl
jge
js
data16
ja
sbb
jnp
mov
mov
sbb
pop
pop
jns
fsubl
xchg
xor
scas
rcrb
dec
dec
ds
outsb
jp
xor
jnp
push
adcb
pop
test
fisubl
push
or
sbb
mov
in
mov
dec
jbe
sbb
aad
or
xor
out
ds
scas
and
mov
pop
adc
push
pushf
outsb
pop
or
out
jae
dec
cmp
xor
mov
pop
add
dec
sahf
fwait
pop
addr16
inc
cmpsl
ret
imul
jns
sub
adc
inc
fs
xor
mov
xchg
and
xchg
sbb
testl
pop
pop
ret
adcb
inc
xchg
cmp
cmc
cmc
cwtl
enter
aad
shr
rclb
xchg
push
or
sbb
and
pop
or
movl
sar
andb
inc
adc
mov
and
pop
jns
jge
or
jns
fcomp
arpl
jo
mov
call
xor
pop
test
aaa
xor
adc
pop
dec
xchg
pop
btsl
clc
movsl
in
aas
in
daa
mov
push
pop
pop
jo
scas
out
adc
aam
pusha
jbe
aas
fimull
jge
push
and
mov
cwtl
jmp
adc
js
pushf
xchg
imul
pusha
mov
push
in
in
jge
or
popa
jbe
lcall
sub
enter
mov
jl
insl
je
xchg
mov
jns
mov
pop
clc
sbb
les
inc
adc
pop
sub
lods
pop
adc
fdivrs
jns
nop
out
jb
pop
and
xchg
sub
enter
test
mov
aaa
xchg
push
push
icebp
cli
sub
cmp
dec
cmpsl
dec
pusha
mov
mov
push
bound
or
push
inc
cmp
jmp
jbe
repnz
rcr
push
ret
pop
fs
inc
jae
bound
es
mov
lret
test
subl
xorb
bound
iret
bound
push
orps
mov
arpl
loop
xor
cmpsl
div
jno
sub
cmp
cmp
out
xor
outsl
call
iret
adc
pop
push
or
push
cld
pop
pop
push
xorl
jmp
and
int
sbb
dec
repnz
inc
add
lds
sub
aam
movsl
adcb
cli
rcl
xor
shlb
add
mov
sub
int
mov
aas
mov
sbb
adc
push
mov
jge
decb
lret
sub
add
test
xor
fs
mov
mov
xchg
jmp
push
and
xor
add
call
and
jmp
fbld
in
mov
js
cmc
jmp
dec
lods
test
lods
xchg
cmp
addr16
xor
fwait
std
xchg
int3
or
aaa
loop
in
push
mov
mov
xchg
add
sub
sarl
pop
aaa
stos
push
sub
pop
jo
mov
shl
push
test
push
and
ja
sub
fiaddl
adc
test
jmp
mov
movsb
je
pop
shll
xchg
mov
fimuls
cmp
test
pop
sbbl
data16
add
mov
adc
test
jns
jle
js
das
mov
or
imul
mov
push
test
iret
adc
adc
cmc
stos
push
sub
jne
pop
and
insb
adc
and
mov
dec
test
popa
cld
hlt
lea
in
fld
pop
mov
pop
pop
and
popa
push
retw
jns
arpl
mov
sysret
pop
sbb
popa
push
lds
jl
stc
cmc
fs
push
add
pusha
mov
cmc
nop
push
sbb
jmp
and
movsl
cmpl
adc
xchg
adc
loope
test
repnz
in
ret
subb
mov
in
stos
arpl
ret
mov
cmp
std
mov
push
cmp
xor
ret
imul
jbe
inc
push
or
mov
in
es
cmpsl
les
dec
gs
jge
shlb
pop
xor
popa
mov
pop
mov
xchg
adc
mov
jg
xlat
pop
jns
inc
lahf
fists
pop
inc
jbe
mov
add
adcb
data16
add
imul
fildll
inc
and
and
adcl
lds
pop
popa
hlt
add
push
ds
outsb
into
dec
pop
out
pop
pop
jno
xor
adc
repz
repnz
movsb
pop
sbb
lods
dec
mov
adc
shlb
js
mov
int3
inc
negb
cmc
test
std
or
insb
cmp
push
and
fstpt
pop
push
data16
mov
lods
mov
and
mov
inc
addr16
daa
dec
cld
ret
pop
sbb
cwtl
xchg
sub
push
repz
add
into
into
add
pop
js
popa
fidivrs
stos
es
fisubrs
mov
jne
and
imul
cwtl
fwait
add
jnp
dec
ja
jmp
and
clc
sbb
aam
mov
lahf
into
fcmovnb
lahf
ficompl
adc
lcall
jb
stos
add
test
stos
jg
xchg
in
dec
xchg
mov
lods
xchg
mov
inc
inc
lds
xor
inc
and
shrl
mov
or
sub
sub
adc
pop
pusha
mov
xchg
mov
dec
mov
mov
mov
dec
cld
lret
pop
mov
insl
jae
js
jne
popa
cltd
dec
in
fs
roll
imul
add
lret
das
dec
mov
stos
cmp
jbe
mov
sbbl
imul
xor
mov
hlt
mov
fsubrs
adc
loop
sub
in
xlat
sbbb
xchg
test
or
lods
add
sub
pop
xor
push
mov
jmp
mov
jne
fdivrs
std
cmp
stc
push
arpl
mov
lahf
adc
or
lcall
gs
push
lods
movsb
mov
or
subb
dec
dec
loopne
push
scas
nop
lods
mov
pushf
incb
fbstp
lods
inc
and
xor
and
not
out
repz
scas
push
out
pusha
cld
mov
movsb
int
mov
mov
fisubl
inc
inc
int3
sbb
insl
lret
das
stos
push
int3
jns
out
sbbl
dec
out
fldl
cmp
sub
in
movsl
sub
mov
sbb
sub
adc
mov
jo
fbstp
jnp
pop
lcall
mov
sbb
mov
sbb
sub
mov
ds
in
add
std
addr16
xor
mov
sbb
mov
add
add
mov
dec
adc
les
push
add
and
shrb
mov
pop
jge
dec
outsb
ss
cwtl
mov
mov
and
call
lcall
lahf
movsl
int3
insb
lods
fisubrs
add
incb
gs
push
add
pop
inc
pushl
mov
stc
push
jnp
add
loope
ror
pop
mov
negl
es
es
in
jae
dec
mov
aam
ss
cmp
cld
sub
push
ret
mov
fisttps
dec
into
sub
adc
daa
outsw
popl
ret
cltd
stc
xor
sbb
mov
and
push
shl
jle
dec
mov
add
xor
roll
ljmp
loop
xchg
push
adc
mov
mov
int
push
ret
shrb
shlb
cli
shll
daa
or
mov
push
rclb
push
pop
push
nop
adc
imul
jbe
or
sbb
push
xchg
ffreep
xor
mov
data16
loope
mov
jecxz
repz
or
leave
push
push
xor
lret
mov
out
xor
pop
aad
inc
rolb
test
push
add
xchg
sbb
pop
cld
test
sbb
in
fidivrs
push
pop
adc
andb
in
sbb
mov
repz
xchg
daa
sbb
repz
iret
cltd
mov
jecxz
ret
inc
mov
inc
mov
add
test
scas
or
sub
adc
jecxz
sbb
cmp
mov
out
mov
dec
add
sub
dec
out
cs
cs
xchg
fisubs
xchg
fistl
jle
insl
lock
add
and
insl
jbe
shll
or
loope
and
pop
pop
addr16
xor
mov
inc
or
push
xchg
nop
cltd
ss
dec
shll
jmp
pop
inc
shlb
aaa
fwait
mov
lahf
enter
in
dec
xor
movl
out
adcb
rcrl
push
aam
sarb
test
cmpsl
mov
bound
aad
jo
sub
ret
mov
movsl
rol
push
data16
sub
or
mov
jl
mov
and
sub
punpcklbw
sub
imul
lds
jg
jb
dec
test
inc
and
int
push
ja
mov
push
lock
jbe
enter
test
jg,pn
inc
mov
in
scas
loopne
ljmp
and
out
pop
mov
mov
push
xchg
jbe
mov
test
in
mov
test
or
arpl
in
sbb
mov
stos
push
aas
inc
or
cli
sbb
stos
cmp
mov
jne
mov
jg
outsb
loop
sub
mov
loop
aad
stc
inc
mov
push
and
daa
fisttpl
scas
mov
cmp
add
jo
mov
in
imul
adc
insb
test
int
cmc
fsubp
loopne
pop
aas
and
jmp
sarl
mov
mov
push
or
outsl
mov
dec
rcrb
imul
mov
sbb
mov
jno
inc
popa
stos
hlt
leave
hlt
lock
stos
push
jmp
scas
popf
call
mov
lods
aas
int3
and
mulb
movsl
loope
inc
xchg
mov
pop
sbb
outsb
jp
lcall
dec
das
mov
jnp
dec
aas
mov
push
sti
nop
punpckhbw
hlt
sub
mov
add
cmpsl
mov
addb
pop
andb
xchg
adc
jmp
pop
push
in
adc
jecxz
js
lret
and
jb
hlt
insl
insb
cmpsb
or
or
neg
repnz
push
das
ljmp
mov
push
xchg
cmc
mov
lods
loop
int
mov
lahf
inc
xor
fsubl
xchg
or
pop
jecxz
jmp
inc
cmc
incl
jmp
add
aam
push
xor
repnz
mov
out
movsl
in
cmpsb
dec
adc
adc
fistpl
or
icebp
dec
repz
lret
push
dec
cmp
fsubs
mov
xchg
lds
mov
xchg
sub
xchg
adc
sahf
add
in
and
in
call
jno
cs
fidivs
sti
pusha
jbe
out
fcmovnbe
mov
int3
inc
mov
pop
cmpsl
pushf
push
push
pop
mov
sub
cwtl
dec
div
ja
lock
mov
lods
push
mov
inc
or
or
push
xchg
in
dec
push
enter
sub
out
dec
bound
push
fcmovnbe
cld
sub
fimuls
mov
mov
mov
mov
ret
insl
ret
sub
push
xor
add
imul
pop
add
mov
dec
cmpsl
dec
xor
mov
arpl
clc
mov
loope
ret
and
mov
and
out
jle
popf
popf
mov
xchg
adc
insb
push
int
imul
sbb
insl
add
ljmp
xchg
mov
mov
movsb
fiaddl
push
insb
push
scas
cmp
fsin
mov
dec
xor
adc
cltd
mov
pop
mov
mov
jae
scas
ret
jb
add
cmpsb
mov
cs
aam
mov
xchg
jno
inc
add
ret
lahf
xor
cmc
cmpsl
sahf
out
inc
cmc
test
xor
int
movsb
pushf
fdiv
ror
xchg
push
dec
lock
mov
sahf
pop
jge
and
icebp
aas
cmp
rclb
ret
pop
xchg
js
pop
mov
je
add
mov
pop
imul
cmc
mov
xor
testb
and
in
cmp
inc
lods
movsb
sub
or
push
inc
das
ljmp
icebp
push
jge
or
stos
movsl
fs
popf
stc
je
sbb
adc
aas
int3
insl
jnp
push
loope
lret
aas
sub
cmp
loopne
cmp
push
in
mov
repnz
push
das
int3
nop
jne
in
or
jl
out
cs
subb
lods
cmp
lods
adc
or
cmpsl
push
sti
xor
shlb
test
stos
xchg
in
sbb
fwait
adc
mov
push
popa
je
leave
imul
fimull
or
cmp
gs
jb
scas
into
sub
sarl
scas
leave
push
ljmp
cmp
jle
jb
xchg
sahf
and
cmc
mov
adc
out
mov
and
cmpsb
pop
xchg
sbb
add
adc
fs
imul
jne
insb
push
sbb
sub
sarl
ret
cld
jmp
mov
mov
dec
ficoms
and
pusha
je
ds
rorb
jo
push
fcomp
icebp
mov
xor
jg
pop
xchg
and
xchg
push
imul
push
int3
push
out
mov
xchg
sbb
test
test
std
clc
or
jns
in
xchg
or
or
cmpsb
pop
fdivrl
cmpsl
xorl
out
lds
fiaddl
mov
push
fadd
inc
xchg
dec
adc
or
xchg
mov
xlat
mov
xchg
popa
clc
addl
dec
jbe
outsl
fmull
mov
jecxz
mov
and
dec
loopne
add
sub
nop
testb
inc
sub
out
notb
pop
xchg
push
mov
xor
cltd
pop
dec
dec
out
mov
sbb
in
mov
lods
bound
lock
test
sbb
jnp
cmp
insl
mov
rorb
lods
pop
cmp
sti
pop
jg
cmovg
popf
mov
imul
push
pop
loop
bnd
dec
inc
sub
cmpsl
test
sub
pcmpeqw
dec
dec
test
pop
pop
jo
jo
loope
push
das
sbb
inc
dec
inc
add
jo
push
jg
pinsrw
jnp
int
jno
ljmp
movsb
xchg
test
fsubrl
xchg
and
pop
scas
push
and
div
or
jecxz
dec
xor
pop
pushf
pop
push
and
add
add
and
inc
jmp
and
iret
outsl
dec
mov
push
sbb
fdivrs
ret
push
fildll
and
pop
outsb
out
negb
popa
mov
cmp
push
scas
iret
mov
cs
pop
pop
sbb
pop
mov
mov
dec
stc
sub
fsubr
dec
aaa
xor
dec
fwait
cmpb
movsb
mov
in
ja
rolb
add
fnstsw
mov
dec
sub
mov
ja
lods
cmp
clc
fwait
pop
push
mov
pop
pop
lea
mov
das
mov
fsubrs
stos
inc
pop
mov
loopne
mov
aaa
lock
dec
rolb
lods
sub
or
imul
mov
jmp
pop
mov
arpl
xchg
jno
pop
inc
or
lock
mov
and
lods
enter
push
add
cmp
rcrl
gs
aam
mov
adc
dec
mov
in
push
in
cmpsl
stos
mov
in
mov
adc
xor
aam
cmc
pop
mov
inc
jo
ja
mov
xchg
movsb
push
adc
pop
jno
cmpsl
dec
iret
in
or
loop
gs
ljmp
aas
xor
inc
jb
xchg
dec
xchg
ret
cmc
mov
inc
mov
adc
jle
mov
jecxz
roll
dec
ja
mov
out
xchg
adc
sbb
or
adc
dec
mov
add
add
jo
adc
orl
ljmp
inc
mov
mov
jle
pop
jge
mov
xchg
fcomi
fbstp
xchg
xchg
cmpsl
and
cs
inc
jmp
mov
pop
mov
rorl
mov
dec
lret
xchg
jmp
xor
sub
jmp
jns
ljmp
and
ror
bound
movsl
sbb
xchg
mov
in
mov
daa
mov
push
sbb
cmp
jae
push
xor
fists
sub
or
mov
shl
scas
pop
shrl
add
jp
push
cmp
sub
sahf
outsb
imul
mov
and
push
test
sbb
jnp
mov
push
mov
es
pop
xor
cmp
jne
ja
ds
fnstenv
ret
push
mov
cmpsb
outsb
cmp
repnz
hlt
cwtl
and
divb
lret
mov
lret
xor
inc
and
xchg
popa
movsl
mov
or
adc
cmp
mov
sub
mov
jge
insb
adc
loope
jge
dec
fnstenv
adc
mov
jae
shll
xlat
lds
cmc
mov
push
stos
mov
push
adc
sbb
ret
das
jl
pop
xor
rcll
dec
dec
lds
dec
xchg
or
fisubrl
xchg
sub
enter
mov
imul
xchg
scas
shrl
or
inc
adc
xchg
mov
retw
pop
mov
dec
push
sbb
push
in
or
jge
in
loopne
mov
sbb
ret
mov
orb
or
add
xor
jg
lds
mov
out
loopne
cli
push
adc
mov
fimuls
and
add
ror
popf
fildl
fwait
in
sbb
jnp
std
nop
ja
movsb
mov
lahf
and
cli
ljmp
int
mov
dec
mov
mov
pushf
inc
push
xor
arpl
mov
or
mov
xchg
pusha
dec
push
addr16
sub
rorl
popf
popf
mov
rclb
out
in
test
sub
je
jecxz
xchg
out
sarb
iret
sbb
sbb
shlb
cmpsl
push
loope
xchg
cs
pusha
cmp
leave
test
mov
movsl
outsl
orl
mov
pop
std
mov
xchg
xchg
addr16
outsl
inc
cmp
les
and
jne
add
data16
pop
mov
or
sub
pop
mov
out
jg
insb
xor
jbe
sbb
or
test
sbb
pusha
xchg
inc
sub
sbb
mov
xchg
push
or
mov
mov
mov
sub
pop
inc
pop
push
shll
inc
icebp
add
iret
or
popf
sbb
sub
mov
aaa
leave
push
testb
nop
cmp
out
lods
sub
aaa
imul
jge
push
leave
aaa
mov
or
add
ret
scas
add
cld
inc
loope
sub
push
ljmp
or
jne
lret
add
add
sub
lock
fs
or
pop
insl
lcall
outsb
sar
sarl
sub
adc
les
inc
lock
pop
pop
testl
in
mov
jns
pop
or
out
ja
test
jmp
xlat
jp
out
daa
xchg
push
dec
imul
fwait
jns
bound
shll
fildll
mov
cli
ret
sbb
into
out
pop
das
dec
sub
and
ds
notrack
xchg
adc
adc
out
sub
and
cmp
xor
push
sbb
adcl
xor
push
cmp
movsb
cltd
push
jae
pusha
and
lds
rolb
sbb
dec
mov
daa
xchg
out
xchg
scas
xchg
test
mov
lahf
push
test
ret
cmpsl
repz
inc
pop
out
lods
sub
jge
int3
in
jl
in
mov
subb
pop
mov
xor
pop
je
pusha
cwtl
inc
cld
pop
fcmovnb
lods
cmp
rcrb
das
fwait
mov
ja
stc
jg
cwtl
jbe
cmpsl
aam
test
icebp
add
jno
cs
jns
pop
loope
xchg
ficoms
jecxz
das
xor
mov
cmpsl
popa
push
inc
add
xlat
mov
in
sbb
jae
cmc
adc
scas
rorl
pop
xchg
xor
gs
xchg
mov
stos
cmp
rcll
popl
mov
outsl
sub
jg
outsl
mov
sbb
loope
mov
sub
stc
cld
sbb
and
add
and
std
dec
sbb
push
jae
pop
pushf
add
jmp
mov
or
mov
icebp
push
out
mov
add
mov
mov
dec
mov
cmp
push
in
vmulss
pop
xor
ret
dec
jae
xchg
add
lods
mov
fcomi
int3
stc
jnp
pop
stos
js
xchg
ja
mov
mov
jp
cmc
shlb
fdivrs
mov
xchg
fwait
ja
sub
and
xchg
push
pop
xchg
hlt
imul
jle
cli
fdiv
xchg
lea
jno
inc
outsb
sub
mov
arpl
or
adc
mov
popf
dec
and
jno
sub
xchg
daa
jne
and
call
adc
sbb
and
sbb
es
or
cltd
jo
sbb
jecxz
dec
cmpsb
sbb
add
and
and
insb
cmc
jo
fcoms
in
clc
cmpsb
or
js
es
movsl
pop
jp
push
mov
les
movsb
add
imul
int
cmpsb
fs
mov
and
ja
movsb
or
das
es
xlat
push
xchg
leave
sbb
xor
and
or
lea
popa
imul
mov
aam
stos
fcmovnbe
push
pop
xchg
rorl
mov
filds
mov
or
or
xchg
ret
scas
or
adc
pop
and
push
out
xchg
gs
ret
pop
inc
xor
lods
outsl
fcmovb
xchg
loope
pushw
subl
mov
cld
sub
cltd
pop
add
inc
pop
int3
jmp
dec
jns
imul
add
lock
loope
shld
push
jmp
shll
jg
repnz
adc
push
rcrl
push
push
cmc
push
or
mov
cld
shll
jl
sbb
in
enter
or
mov
mov
lods
mov
jmp
add
xor
mov
inc
xchg
mov
adc
shl
pop
ja
pop
add
idivb
es
pop
js
pushf
or
push
cmp
jecxz
call
jle
push
mov
mov
gs
scas
add
vprotw
jbe
clc
fstpl
movsb
pop
scas
sbb
ljmp
fistl
cmpsb
jl
rcr
mov
adc
ret
imul
xchg
mov
sub
mov
and
sub
dec
sub
fdivrs
call
stos
mov
test
ss
inc
add
push
lret
mov
fidivrs
cmp
pushf
xorl
sbb
sub
inc
pop
mov
jg
or
test
mov
mov
and
xor
push
push
dec
es
shlb
add
and
inc
hlt
jg
into
push
ret
lods
and
loopne
sahf
and
outsb
imull
xlat
out
mov
cwtl
push
movsl
jno
cmpsb
inc
cmpsb
dec
scas
shlb
clc
or
out
and
outsb
mov
icebp
lds
cmp
sub
xchg
add
mov
cmp
loope
filds
add
cmpsl
jne
mov
sub
xchg
push
call
cmp
mov
push
popa
xor
pop
mov
mov
add
adc
lods
sub
shll
push
mov
cltd
call
leave
xchg
jo
stc
mov
into
orb
movsb
fidivrs
jmp
xchg
int3
add
stc
or
ljmp
jae
cmp
out
xor
pop
mov
pop
or
data16
sub
scas
mov
adc
lods
xchg
cmp
mov
cmc
push
jnp
mov
subl
notb
sbb
add
cmp
lock
push
iret
scas
adc
mov
lret
out
mov
lahf
shll
rorb
aas
inc
rcl
jo
daa
xchg
sbb
sub
in
cmp
jo
mov
les
or
pop
aas
out
cmc
fstpl
les
jns
jp
cli
rolb
mov
dec
and
test
jnp
mov
sarb
push
sub
test
cmp
ljmp
xchg
cmp
or
push
sub
andl
cmp
fcoml
add
outsb
mov
stos
cmpb
into
jl
dec
aad
inc
cli
cwtl
cmpsb
push
xchg
scas
popa
loop
out
in
lods
inc
das
hlt
push
cwtl
lahf
mov
stos
mov
and
inc
out
aam
hlt
xlat
pop
clc
mov
cwtl
gs
add
jecxz
xor
in
lds
in
imul
mov
hlt
lock
xchg
paddsb
sbb
or
jb
fisttps
xlat
fs
sub
dec
sbb
dec
int
jns
mov
fisubs
pop
sahf
iret
imul
sub
push
cmp
hlt
out
inc
sbb
add
neg
sub
shl
arpl
push
sub
insl
add
adc
clc
in
leave
cmp
push
xchg
pop
xchg
jg
mov
inc
pop
mov
rcr
cmp
jmp
pushf
adc
push
cwtl
mov
cmp
in
pop
stos
fistps
and
fnstsw
xchg
or
jnp
jge
test
int
mov
ret
mov
add
dec
and
ret
adc
out
push
pop
cld
and
push
inc
sub
push
aaa
cmc
rcll
push
lret
jmp
inc
add
fildl
loopne
add
xchg
jbe
xchg
and
cmp
fstl
jge
jne
jmp
jl
xchg
push
sbb
sbb
pop
mov
jp
xchg
stos
pop
repnz
xchg
int
ljmp
hlt
es
shlb
mov
mov
jae
imul
or
xchg
dec
jmp
sub
mov
xor
mov
pop
divb
ja
and
mov
pop
js
movsb
mov
mov
insl
sbb
inc
fstl
les
lds
pop
xor
add
popf
pusha
aam
mov
mov
out
inc
push
iret
dec
add
xlat
aas
fisttps
push
jecxz
dec
jmp
int3
push
jno
setno
fmul
arpl
push
sti
out
xchg
sbb
or
rcrl
push
icebp
sub
in
imul
ret
movsb
jne
test
add
cmp
sub
pop
dec
outsl
adc
dec
stc
xor
add
fidivl
mov
push
insb
fs
popf
or
ss
push
addr16
rdtsc
mov
jmp
jmp
cmp
add
or
ds
inc
jp
aaa
fildll
loop
scas
lret
pop
mov
xchg
mov
sub
cli
inc
xchg
xor
sbb
pusha
xchg
repnz
xlat
sti
out
or
out
or
and
js
stc
push
les
pop
mov
shll
add
repnz
das
xchg
jmp
daa
fldl
add
inc
lock
test
and
ds
mov
or
shlb
pop
and
add
inc
sahf
fs
aaa
pop
ret
mov
or
add
mov
and
xlat
sub
xor
add
and
inc
xor
andl
movsl
loopne
fidivrl
xor
scas
xchg
cmp
out
lahf
and
push
lods
mov
mov
xor
rorl
aaa
sbb
jae
add
fcmovu
roll
idivl
adc
mov
fwait
fs
out
test
push
xor
or
jp
decb
lds
hlt
jne
mov
jb
inc
push
sub
jle
mov
mov
test
push
or
in
ja
arpl
daa
pushf
les
rcrb
imul
mov
jne
or
int
dec
adc
jle
cmp
daa
movsb
push
aam
xchg
jecxz
lea
sub
imul
sbb
dec
adc
into
adc
gs
sub
inc
sbb
out
fstpt
in
int
adc
mov
mov
push
int3
inc
js
xchg
cmp
in
leave
pop
cltd
ror
cltd
lods
fidivl
das
addr16
fsubs
bound
sbb
sub
sbb
clc
ss
mov
cmp
mov
pop
sbb
push
pop
inc
cmp
xchg
mov
nop
fwait
jno
or
and
addr16
mov
push
mov
jbe
out
xrelease
mov
mov
xchg
testl
les
pop
aad
in
sahf
fcomip
jl
xor
pop
push
stc
popf
cli
xchg
mov
in
cli
sbb
loopne
cmp
adcb
push
pop
aas
lret
loopne
sbb
mov
push
xchg
loope
dec
aam
pop
sbb
add
xor
popf
rcr
push
loope
outsb
lea
dec
fidivrs
mov
dec
std
rcrb
shll
and
aas
xchg
in
mov
mov
adc
aaa
sub
fsts
adc
cmpxchg
addl
adc
aaa
sbb
sbb
adc
inc
or
call
jp
imul
lods
cmp
add
or
sbb
call
orb
mov
inc
sbb
push
dec
dec
jmp
ffreep
mov
lea
icebp
insb
stos
dec
test
imul
sub
repz
mov
mov
dec
push
loope
push
ror
adc
vsqrtps
movsb
sti
ret
pop
loopne
bound
cli
adc
xchg
inc
jmp
into
data16
and
mov
outsb
in
repz
jmp
or
add
pusha
sbb
sbb
stos
dec
movsl
inc
cmp
pop
fcoml
or
mov
push
out
mov
sbb
test
or
inc
xchg
inc
lods
mov
testb
mov
xchg
shlb
push
sti
and
repnz
cmp
mov
outsl
add
jnp
call
jnp
adc
pop
cmp
hlt
ljmp
icebp
mov
stos
arpl
adc
sbb
test
push
xchg
movsl
fsubs
dec
rclb
nop
adc
inc
outsb
fisubl
mov
adc
add
or
cmp
or
ds
idivb
movsb
mov
add
pop
cld
xchg
xchg
in
push
pop
mov
mov
out
popf
lods
xor
andl
push
lret
add
jge
clc
mov
les
ljmp
shlb
jle
dec
shl
aas
jmp
and
cld
jo
push
cmp
mov
pop
inc
imul
push
test
cwtl
mulb
xor
movsb
rorb
dec
pusha
movsb
iret
add
testb
ret
imul
dec
adc
enter
repz
into
jae
jmp
scas
fldl
cmpb
push
mov
cmc
sbb
lcall
call
adc
mov
dec
xchg
mov
imul
sbb
addr16
in
and
leave
inc
rol
adc
cld
fisttpl
mov
jp
in
scas
sbb
adc
cmc
shl
mov
sub
and
sarb
movsl
arpl
pop
in
pop
push
data16
scas
stos
sbb
jp
imul
inc
lahf
aaa
push
mov
mov
in
unpckhps
push
mov
lret
cmp
test
in
xor
cmpb
imul
mov
mov
jl
mov
push
add
cmp
mov
add
test
inc
mov
pop
mov
jb
lds
pusha
fs
push
xchg
das
fwait
lock
sub
or
lods
pop
insb
scas
inc
mov
mov
data16
push
dec
stos
mov
mov
repz
sub
mov
nop
shll
and
jmp
jbe
xor
and
jl
adc
int3
mov
mov
add
scas
push
and
popf
pop
fcompl
cmc
mov
scas
sub
or
pushf
xor
icebp
sbb
and
outsl
sbb
sahf
test
repz
jb
popf
add
pop
push
dec
das
shll
cmpsl
inc
jecxz
xor
or
cmp
shrl
dec
lock
push
xor
dec
andb
ja
add
adc
in
les
rorl
cmp
mov
je
adc
cs
inc
push
jge
mov
and
hlt
nop
dec
xor
shrl
popa
xchg
mov
pusha
daa
jmp
push
repnz
push
andb
add
pop
jno
lock
loopne
push
idiv
imul
jg
rclb
mov
dec
dec
imul
lods
ljmp
shl
scas
das
pop
mov
es
mov
in
arpl
jl
adc
clc
insb
aam
js
rcl
jo
jle
lret
adc
pusha
gs
cmp
sbb
xchg
imul
sbb
test
add
push
scas
fldl
mov
mov
clc
xorl
xor
divl
sub
test
sti
jae
sub
testb
lock
mov
ret
mov
sbb
jle
fbld
xorb
push
or
test
movsl
lock
push
pop
lods
add
sbb
sbbb
mov
mov
push
shlb
ficomps
push
xor
pusha
ljmp
inc
pop
rclb
and
mov
cltd
rcll
mov
and
lds
idivl
or
pop
pop
mov
icebp
sub
adc
adc
pop
dec
push
mov
imul
std
sbb
push
daa
popa
gs
jl
shlb
jne
repnz
imul
inc
sbb
aad
fisubs
mull
sub
jle
std
pop
jb
add
in
cmpsl
mov
lret
push
movsl
sub
stos
aaa
leave
roll
sbb
outsl
pop
jno
rcrl
pop
lahf
or
movsl
sbb
jno
and
dec
mov
mov
inc
dec
out
fldcw
es
mov
push
cmp
inc
int3
or
mov
mov
stos
arpl
repnz
daa
decl
sbb
call
jo
jl
push
aaa
es
xor
push
mov
pop
sti
daa
sbb
and
cwtl
clc
push
fs
sbb
mov
dec
popf
nop
mov
clc
jp
inc
mov
jle
lods
mov
ss
pop
outsb
je
pushf
sbb
mov
popf
push
xlat
cmp
je
shll
inc
push
jg
jecxz
ret
sbb
push
dec
and
cwtl
leave
and
imul
pushf
add
jp
insb
mov
or
fwait
jmp
pop
push
bound
jp
dec
xchg
fs
data16
xor
add
lea
cmpb
inc
cmpsl
outsl
popf
add
adc
sti
cmp
dec
scas
lock
mov
lret
push
jmp
cmpsl
or
imul
xor
mov
popf
jbe
sbb
pop
shrb
sub
and
cmp
les
inc
outsb
xchg
add
fstpl
sarl
lret
sbb
stc
cmp
rcrl
insb
mov
rcr
or
mov
ja
mov
scas
das
test
das
or
ss
inc
ja
or
ret
std
sub
lret
mov
cmp
jb
nop
mov
dec
jo
dec
imul
in
call
dec
adc
mov
jp
stc
frstor
popf
cmpsl
and
lods
les
shll
push
test
cmpsb
ja
les
decl
loope
push
xor
cmp
insl
jg
xor
jl
and
adc
jns
stos
cmp
dec
add
call
and
into
adc
int
cmp
in
adc
out
popf
enter
fistpll
imul
inc
into
fwait
aam
and
cmp
mov
arpl
cmp
out
jo
sub
pop
rcr
jne
and
pushw
aam
push
pop
movsb
fidivrl
fisttpll
int3
or
lcall
daa
test
data16
or
inc
nop
mov
add
fcompl
push
mov
jle
clc
repnz
jmp
cmp
outsb
push
push
xchg
dec
mov
outsl
shll
mov
cmp
cmc
ror
jbe
xor
push
fdivr
xlat
std
push
sbbb
or
add
xor
test
mov
jo
lcall
add
in
cmc
sti
aaa
popl
gs
int3
push
mov
inc
jae
xor
cltd
imul
test
inc
mov
jmp
or
mov
cmc
clc
sub
mov
dec
es
dec
dec
push
ljmp
andb
lock
push
scas
insb
xchg
inc
mov
pop
push
pop
cmpl
mov
repz
in
movsl
repz
insb
dec
xchg
fcoms
test
lea
sbbl
popf
jbe
inc
adc
outsb
in
test
fldt
mov
mov
pop
mov
push
out
insb
shll
and
out
add
loop
inc
cmp
std
xchg
pop
mov
outsb
push
xor
out
push
inc
addr16
fcomps
push
mov
or
push
mov
jnp
fdivl
adcl
xchg
push
xor
cmp
aas
push
xor
sti
inc
imull
icebp
add
loop
jmp
aaa
dec
or
fsub
xchg
xor
and
cli
adc
aas
scas
sbb
fbstp
dec
popl
fwait
push
pop
cs
cmp
int3
xlat
adc
push
fidivrs
insl
xor
dec
andb
aad
sbb
mov
inc
mov
call
lods
jb
aam
mov
mov
sub
mov
iret
pop
mov
out
mov
sub
out
add
loop
sbb
lds
mov
xchg
sub
lahf
mov
loopnew
pop
mov
jne
pop
xor
inc
int3
cmpsb
xor
or
repnz
mov
cmpl
rolb
cmp
ja
addl
movsb
push
mov
loop
pop
inc
test
rorb
sbb
or
cmp
lahf
fld
lahf
cli
inc
rcr
mov
mov
stc
add
and
add
sub
and
xchg
cmpsb
fisubrs
pop
pusha
dec
dec
mov
and
test
xchg
pop
aas
jo
insl
sub
addl
mov
cmp
insl
loope
cmpsb
inc
jl
jbe
pop
les
dec
mov
adcl
lds
or
jecxz
je
xlat
push
pop
push
je
add
negl
shrl
sub
sarb
movsb
scas
out
xor
mov
stos
adc
inc
mov
mov
dec
jmp
cmp
dec
test
sbb
dec
cmpsb
or
cs
fists
add
xor
dec
in
xchg
mov
stos
rclb
lret
ret
add
sti
sahf
xchg
mov
or
cmp
movsb
sub
pop
jge
cmp
dec
xor
jecxz
loop
into
push
cld
je
xor
lahf
mov
ret
fwait
push
xchg
fcmovnb
dec
push
lods
aam
and
aas
iret
push
lret
mov
fwait
stc
lods
js
loope
and
mov
cwtl
aad
cmp
cmp
fmuls
mov
pushf
mov
sarl
std
rorl
sahf
jns
jne
cmp
dec
in
out
in
jb
push
in
mov
lret
inc
aas
cmp
lds
imul
push
mov
sbb
jmp
or
xchg
mov
sub
js
outsl
lock
test
movsl
addr16
jbe
imul
scas
jbe
imul
inc
pop
cmpsl
sbb
or
scas
jne
enter
cmp
jp
fmulp
xor
push
mov
test
sub
or
shll
push
and
and
mov
repz
cmpsl
xchg
cltd
mov
insb
imul
les
test
cmp
loopne
repz
cld
mov
mov
int3
push
in
das
aam
dec
dec
int3
pop
sbb
inc
cmp
mov
cmpsl
fwait
lods
je
out
cltd
pop
add
add
roll
sub
aas
jne
jmp
dec
stc
movsb
out
push
cs
cmp
dec
dec
push
imul
sti
mov
jo
mov
addl
mov
cld
loopne
scas
sbb
adc
xlat
push
jmp
adc
adc
mov
testl
das
mov
fstl
repnz
cmpsb
cltd
or
or
movsb
jl
dec
push
cmpsb
stos
and
cld
test
hlt
pop
and
cld
stos
fisttpl
icebp
cmovnp
mov
mov
sahf
movsl
pop
jmp
imul
std
test
into
or
stos
sbb
int3
pop
ljmp
cmp
cmp
cltd
outsl
gs
jl
jnp
jle
pop
pop
cli
sbb
stc
mov
or
negl
or
mov
mov
icebp
lret
push
scas
pop
lret
mov
out
pushf
aaa
push
imul
mov
pop
aaa
sbb
lret
jmp
cwtl
ret
into
dec
ljmp
jecxz
mov
adc
lret
out
insl
mov
sub
ds
push
lods
pop
push
push
sti
push
cmp
jecxz
adc
add
repnz
popa
out
xor
add
sub
int
inc
sti
rorl
pop
mov
out
mov
adcb
es
mov
movb
sbb
fdivr
test
sub
xor
cmp
dec
xchg
mov
push
loopne
cmp
mov
aas
stos
insb
pusha
and
cmc
dec
in
xlat
jecxz
add
xchg
vmptrst
movsb
out
push
iret
sub
mov
push
test
test
jecxz
sub
sub
cmp
adc
fiadds
pushl
bound
lret
cmc
insb
or
arpl
lods
cmc
push
insb
or
dec
icebp
adc
and
or
push
sub
xlat
cmpl
dec
xchg
xor
adc
push
into
sti
or
cmovae
ljmp
sbb
xor
addr16
sahf
sub
cli
push
inc
xor
std
or
es
divl
lret
push
pop
mov
add
mov
mov
movsl
sbb
add
int
lock
in
stos
xchg
mov
jge
sti
xchg
dec
cmp
cwtl
pop
push
push
add
and
sbb
pushf
dec
inc
or
sahf
lret
pop
cwtl
jno
dec
push
cwtl
inc
in
xlat
jmp
outsl
xor
mov
mov
and
mov
sub
dec
sub
dec
jl
adc
push
jne
xchg
bnd
pop
jo
int3
adc
add
in
sub
mov
outsl
movsb
jne
adc
lock
xor
pop
stos
loopne
popa
xchg
cld
addl
mov
pop
sbb
mov
xchg
test
xor
sbb
stos
cs
mov
pop
popa
test
xor
shrb
scas
mov
jbe
mov
test
cmp
push
cld
notl
pop
and
popf
cmp
pop
sbb
jb
cltd
cld
push
mov
cs
and
mov
lods
mov
jb
arpl
inc
arpl
hlt
fs
sub
or
leave
ljmp
mov
add
lock
push
mov
int3
or
cmp
pop
loope
shll
popa
add
jno
jno
jnp
dec
and
xor
xchg
sbb
pop
adcb
pop
jb
mov
jo
pop
add
mov
icebp
add
add
cmc
sbb
mov
stos
es
xchg
jmp
lds
pop
loop
cli
into
mov
fidivs
das
outsb
scas
cli
sub
rolb
fwait
mov
mov
adcl
adc
sbb
icebp
lea
bound
mov
nop
jns
xor
xchg
outsb
jo
jns
es
jg
add
mov
sub
rol
adc
pop
dec
leave
and
repnz
sbb
add
adc
cltd
sbb
lret
jge
iret
fs
push
lods
push
psubusw
mov
pop
imul
loopne
add
repnz
pop
std
cmp
sub
test
pusha
and
push
mov
pop
loopne
or
lea
scas
iret
or
out
lds
sub
add
leave
mov
jnp
repz
fsts
test
mov
mov
andb
clc
xchg
sub
ja
call
roll
fdivrp
cmc
sbb
sbb
jae
aaa
fcmovbe
cli
out
xchg
xchg
outsl
cltd
sbb
rorl
xor
and
push
addr16
dec
lcall
pop
stc
cs
stos
cmp
sub
mov
adc
enter
testb
jecxz
pop
test
sbb
ficompl
sub
in
lret
fwait
cld
cli
xor
xchg
jno
fcmovnu
in
test
rcl
gs
pushf
add
insb
in
jns
icebp
jae
aas
sarb
cmp
pusha
out
cmpsb
xchg
jne
mov
mov
cwtl
enter
cld
or
gs
mov
ret
sti
pop
mov
dec
dec
add
push
fadds
sbb
ret
lock
fmull
xorb
jmp
xchg
adc
mov
and
std
int3
das
out
repz
cmpsl
iret
xor
sub
aaa
mov
leave
ret
mov
std
ret
fistpll
and
fcmovbe
aad
fildl
in
icebp
sbb
rolb
vpmacswd
jmp
or
adc
mov
sbbl
push
decl
inc
push
mov
in
sti
jno
and
xor
lods
scas
inc
add
ret
jno
hlt
subb
push
cmpsl
dec
xchg
and
lcall
dec
jns
mov
pusha
das
add
mov
js
cmp
in
jb
mov
jbe
sahf
out
out
and
aas
imul
mov
hlt
fs
es
nop
add
aas
loop
push
adc
pop
xlat
xchg
mov
cs
inc
pushf
out
loop
stos
push
lcall
test
outsb
mov
data16
icebp
inc
call
push
rorb
aam
popf
movsb
mov
addb
jmp
add
cmp
in
inc
fisttpll
and
and
sub
mov
inc
jmp
add
and
mov
pop
popf
mov
leave
mov
repz
fwait
and
mov
mov
sub
xchg
fists
pop
push
int
ret
enter
cmp
xlat
addr16
mov
rcrb
pop
xchg
dec
or
mov
adc
stos
sbb
add
jae
lock
insl
jbe
sub
mov
xor
les
jl
dec
ja
lods
dec
jnp
mov
out
pop
or
nop
cmpsb
sbb
int
jl
mov
fnsave
in
dec
arpl
ficoms
fistpl
shll
shl
sub
cmp
add
cwtl
incl
jmp
xor
pushf
and
movsl
cmp
xchg
sub
mov
aas
call
xchg
pop
call
subl
fists
fidivrl
cli
mov
cmp
mov
jmp
aad
adc
ss
mov
ret
mov
test
push
add
ret
or
lret
ret
pop
test
jle
pop
or
pop
loop
mov
xchg
ficoms
lods
push
xor
xlat
adc
movswl
adc
or
outsl
xorl
aas
inc
rolb
xor
lods
or
ficompl
and
inc
adcb
mov
cs
pop
sub
pop
into
mov
push
push
es
in
adc
movsb
cmp
jo
jbe
arpl
xchg
or
and
jle
orb
xor
rclb
sbb
and
dec
cmp
movsl
pop
cmpl
mov
lea
mov
out
or
lds
inc
push
sbb
mov
dec
ss
shll
out
sarb
jge
mov
mov
push
dec
sbb
add
or
in
pop
clc
pop
mov
sahf
jbe
cmc
jl
pop
dec
cmp
xorl
push
jecxz
dec
mov
movsb
mov
lds
and
mov
jnp
into
mov
jle
dec
add
dec
test
divl
imul
loop
pop
or
push
popa
jnp
mov
and
inc
loope
mov
mov
push
cmp
imull
sbb
in
sarl
lods
xchg
sahf
inc
lock
sarl
jbe
xchg
loopne
subl
loopne
mov
fmuls
mov
mov
xor
das
out
cmpsl
pop
popa
sar
hlt
inc
mov
dec
xchg
rcl
mov
dec
ljmp
and
fcmovnb
aam
mov
addr16
ja
adc
out
jb
push
lods
ljmp
lds
cmpsl
push
pop
mov
dec
fcoms
sbb
cmpsl
pop
sub
mov
call
jle
lods
or
insl
push
lahf
add
pop
cmp
nop
or
in
fisubl
lods
mov
mov
xor
out
stos
pop
aas
std
not
pop
sub
gs
dec
jge
add
js
or
shlb
ret
and
jbe
sbb
or
aas
push
inc
iret
sbb
in
and
dec
inc
mov
icebp
mov
cmp
sbb
xlat
mov
dec
ds
aas
pop
shl
ret
mov
clc
jns
add
es
push
mov
test
neg
jbe
xchg
push
inc
sbb
xchg
push
xor
imull
or
push
int
adc
enter
das
dec
inc
aam
pusha
daa
lahf
lea
jge
out
add
fadds
outsl
call
dec
jae
insb
push
pop
adc
fnsave
sub
push
adc
gs
add
fwait
mov
ja
push
xor
jne,pn
dec
and
jne
scas
sahf
aam
mov
sub
icebp
jns
hlt
xor
fs
pop
inc
mov
lock
outsb
push
bound
aaa
sbb
pop
jge
mov
mov
fidivrl
enter
lock
stc
cwtl
dec
cmp
stos
ret
sbb
push
mov
jp
fsubp
mov
loop
xchg
jnp
or
std
mov
xchg
dec
insl
lahf
and
in
inc
dec
mov
xchg
lds
mov
dec
mov
cld
jnp
fdiv
sbb
mov
sub
cmp
or
out
shll
loop
sar
outsl
push
sub
or
in
mov
cmp
push
out
sub
fidivs
aad
sub
out
outsb
mov
xor
inc
adc
pop
popw
push
hlt
addb
nop
stos
xor
push
fiaddl
dec
jp
push
mov
dec
lret
enter
or
arpl
jle
pop
or
aam
es
jg
push
xor
addr16
data16
xor
xchg
lahf
sub
xchg
sbb
iret
mov
stos
lods
notb
xor
or
nop
mov
test
mov
pop
mov
or
mov
orb
ret
cmp
scas
fcmovu
icebp
inc
pop
xchg
and
or
dec
popa
aas
stc
repz
xor
das
aaa
add
in
jmp
cmpb
xchg
sub
dec
cmpsl
fimuls
xor
push
subb
cmp
jb
xor
enter
popf
rorb
mov
insb
inc
sub
jge
sbb
ret
out
dec
and
push
add
xor
adc
push
cmp
push
push
jne
cli
xor
mov
mov
jmp
mov
ds
dec
or
or
inc
cli
mov
stc
mov
mov
cltd
push
sub
dec
sbb
or
or
cmp
sarl
or
dec
icebp
enter
repnz
imul
mov
daa
stos
das
add
outsb
data16
pop
push
lret
inc
jl
repz
jp
aam
and
scas
subl
daa
cmc
inc
xor
clc
dec
in
sbb
aas
shlb
mov
daa
jne
push
jp
in
sub
adc
cltd
lods
jno
dec
testl
fwait
test
stc
push
and
or
lea
push
imul
imulb
cld
mov
mov
ret
hlt
mov
mov
cltd
pop
dec
ss
je
push
xor
lods
mov
stc
fdivrp
and
xchg
push
cltd
movsb
mov
negb
nop
test
pop
leave
in
mov
in
sub
xchg
xchg
xor
rcrb
push
jb
cld
inc
scas
fs
cli
stos
int
sbb
mov
adc
xchg
loope
icebp
mov
pushf
mov
mov
test
push
mov
mov
add
stos
std
js
pop
cli
mov
mov
xchg
and
cmc
sub
scas
lret
dec
xor
out
mulb
insb
mov
in
push
push
ja
mov
shlb
mov
lcall
cmp
dec
js
or
xor
add
in
iret
outsb
or
cmp
cs
inc
pop
jmp
repz
inc
addr16
cmp
xor
rolb
mov
add
jnp
jnp
loop
out
flds
mov
cmp
ja
sub
leave
mov
jl
pop
xchg
xchg
xchg
dec
cmp
and
ficomps
call
rcrb
sbb
fadds
dec
lcall
push
jle
cmc
add
mov
sbb
or
dec
std
dec
mov
mov
add
cmp
push
outsl
rolb
jne
jecxz
out
pop
stos
push
dec
shrb
cmc
repz
sub
cmp
stos
shll
fwait
push
aaa
fldenv
clc
gs
fsts
fmull
nop
sub
jle
push
insl
inc
cmp
out
xchg
test
inc
loop
shlb
out
aaa
pop
adc
fwait
inc
int
dec
lods
push
push
jp
xor
mov
mov
and
mov
ja
cmp
cmc
inc
icebp
pop
adc
xlat
pop
dec
push
jecxz
sub
sub
push
fldcw
out
imul
aaa
adc
inc
test
adc
xor
sbb
jg
test
mov
lahf
mov
out
popf
push
mov
mov
pop
xor
lahf
push
ds
mov
mov
fsubrl
fcoms
pop
outsl
add
xchg
movsb
push
pushf
lahf
cmp
mov
pop
gs
or
hlt
enter
insl
popf
rcrb
jmp
int3
fucomip
fsubrs
push
dec
out
jg
out
mov
xor
sti
aas
aaa
ss
mov
inc
sahf
hlt
push
icebp
shl
jne
pop
negb
adc
cld
inc
subb
aas
adc
push
jnp
add
inc
in
mov
pop
mov
aas
movsl
mov
je
sub
mov
dec
sub
pushf
add
mov
out
pop
mov
cmp
and
in
mov
inc
xlat
inc
test
leave
jp
jne
clc
jle
sarl
mov
in
cmp
das
stos
enter
int3
mov
mov
inc
mov
insb
cmp
enter
test
lods
adc
scas
fldenv
je
push
testl
lods
and
mov
divb
cmpsl
xlat
iret
aas
hlt
aaa
sbb
int3
add
cmp
clc
outsl
mov
mov
cmp
add
scas
ds
cmp
sub
test
test
inc
repz
out
repz
shll
pop
paddq
fs
scas
loop
mov
stc
call
xchg
xchg
std
fcom
dec
cmp
sub
pop
mov
stc
movsb
mov
or
cltd
mov
aas
or
mov
xchg
decb
fldl
jecxz
sbbb
jbe
inc
mov
jl
imul
mov
cmp
jp
mov
shll
sbb
jge
stos
cmpsb
shlb
shrl
cmp
mov
test
stc
pop
xchg
mov
insb
mov
mov
jmp
jno
test
and
das
test
mov
test
cmp
jb
adc
push
dec
jnp
jnp
movsl
dec
add
xchg
adc
shll
mov
cli
or
and
add
mov
add
pop
icebp
imull
lcall
dec
stos
xor
repnz
mov
and
mov
cmp
lock
and
dec
cmp
lea
sar
idivl
lods
sbbl
divl
pop
jle
mov
popf
mov
jmp
js
pop
cmp
inc
lcall
nop
push
xchg
bsf
lcall
fstpt
xchg
jecxz
inc
jo
cli
int
adc
mov
sbb
hlt
rcll
scas
shl
dec
xchg
sub
cmp
pop
out
mov
xchg
adc
add
xchg
dec
or
sub
push
sahf
scas
test
repz
add
add
add
dec
mov
js
fisubrl
jmp
cld
mov
push
cmp
icebp
add
mov
cmp
mov
cmp
cs
sbb
mov
add
repz
xchg
lock
fst
addr16
addl
push
pop
jb
sbb
pop
rcl
fucom
pop
jbe
xchg
ret
daa
push
jg
pushf
in
cmp
push
lret
xchg
push
jecxz
dec
imul
lds
mov
pop
test
stos
stc
push
push
and
add
test
dec
mov
xchg
sub
sbb
mov
inc
fstpt
push
mov
cmp
mov
mov
aam
cmp
dec
sub
addr16
insb
cmp
and
xor
or
or
icebp
mov
sarl
mov
lock
add
fstpl
jb
je
mov
pop
xchg
incb
dec
jne
je
pop
dec
loopne
xchg
fst
imul
pop
xor
pop
or
sbb
mov
sbb
jecxz
pusha
rcrb
sub
xlat
cs
jnp
jno
aad
movsl
movsb
lret
and
lods
inc
add
jp
mov
or
mov
push
stos
leave
add
push
jbe
idivb
jae
xchg
inc
shrb
data16
adc
lds
add
inc
sub
sbb
scas
pushf
pop
stc
and
aas
cmpb
repz
imul
int3
xchg
mov
outsl
mov
sub
xor
lds
out
inc
push
push
mov
dec
dec
loope
stc
int
je
in
or
loope
xor
push
mov
jnp
cmp
xchg
out
ret
push
xchg
mulb
mov
inc
repz
lret
aad
cmp
movb
xchg
mov
clc
icebp
pop
jne
fildll
call
push
mov
cmc
sub
sub
mov
inc
adc
lahf
mov
xchg
shlb
adc
aad
push
adc
xchg
mov
push
mov
mov
addr16
leave
jmp
jecxz
jne
sub
pop
lock
pop
pop
notl
out
cmpsl
xor
add
dec
imull
push
mov
mov
mov
and
pop
push
in
roll
and
cwtl
push
fwait
sub
loope
xchg
or
sbb
pop
dec
pop
adc
fisubs
dec
xchg
or
lret
add
jb
arpl
inc
scas
pop
jns
test
enter
xor
mov
adc
push
pop
xchg
jl
sub
fisubrs
jl
push
into
popf
inc
testl
std
ret
dec
pop
ret
loope
repnz
shr
jae
xchg
int
rol
repz
cld
lods
inc
gs
sarb
add
stos
sub
ret
fldl
rclb
cmp
dec
negl
jmp
popf
add
xchg
pusha
or
xchg
ret
pop
dec
sbb
pop
clc
mov
mov
jge
out
sbb
fidivl
lcall
sahf
call
movsl
pop
jp
inc
adc
stos
lods
xchg
lret
ja
jmp
sub
dec
jbe
fwait
mov
add
notl
mov
xchg
inc
inc
mov
mov
lcall
xchg
out
ss
or
sbb
addr16
in
iret
mov
imul
inc
jmp
xor
repz
jns
stos
shl
cli
shrl
ret
outsb
jo
js
add
pop
xor
cmp
cs
int3
pop
cmp
loopne
je
adc
in
icebp
xor
and
stos
lcall
sbb
push
insl
xlat
push
dec
mov
in
mov
xchg
jb
xchg
iret
sarb
xchg
add
out
imul
test
std
jge
mov
or
pop
dec
leave
clc
dec
in
loop
push
and
mov
repz
int3
xchg
imul
lods
jl
pop
xchg
test
push
sub
add
xchg
xchg
pop
xchg
lea
jmp
xor
aaa
xchg
cli
pop
js
icebp
lods
out
and
push
movsb
push
xchg
rcrl
movsb
jg
fisttpl
cmovb
cmp
gs
fdiv
jecxz
rcr
outsl
in
cs
fsts
xchg
sahf
adc
push
pop
aaa
cmpsb
ret
call
mov
mov
and
add
jb
cmc
xchg
lods
mov
mov
jae
insl
pushf
insl
dec
xchg
popf
rcrl
test
or
lret
frstor
insb
jmp
je
or
inc
std
jl
scas
outsl
push
imul
cmp
add
call
sub
push
cli
jge
nop
add
repz
in
cmp
or
add
outsb
rcrb
shlb
xor
lods
shrb
std
sbb
jae
mov
movsl
lock
lcall
loopne
mov
cmp
pop
jmp
add
lea
mov
mov
call
jne
mov
xlat
xor
sti
jae
sbb
mov
and
mov
sarl
clc
ss
test
sbb
jmp
insl
xor
call
mov
fsts
cwtl
daa
das
aaa
orb
sbb
add
std
sbb
data16
push
push
or
inc
shll
mov
out
bound
fs
xchg
cmp
dec
stos
cmc
pop
mov
dec
sbb
cmp
lock
sbb
jle
xchg
gs
iret
les
imul
cmp
push
int3
dec
lods
and
pusha
aaa
inc
scas
aad
mov
fiaddl
sbb
pop
xrelease
sub
lret
lods
pop
or
mov
push
les
mov
imul
xchg
enter
xor
or
dec
xor
cli
and
pushf
push
or
add
or
test
mov
aad
sbb
popa
dec
add
mov
adc
and
mov
sbb
fadds
lods
push
ret
dec
std
leave
pop
add
pop
pop
call
sub
sub
pop
xchg
aad
add
cmc
pusha
adc
add
inc
fldt
popf
enter
fs
into
jnp
cmpsl
fcomi
nop
das
mov
inc
jns
dec
movsb
sub
lret
mov
in
inc
jp
adc
or
jp
clc
add
jae
insb
sarl
shlb
mov
sub
repz
mov
aad
int3
xor
imul
in
and
pop
cmpsl
je
inc
inc
icebp
adc
mov
in
push
adc
daa
xchg
mov
xchg
xor
xor
cmc
popf
fimuls
and
xor
insl
jno
mov
dec
push
pop
loopne
lds
out
lcall
sbbb
add
inc
mov
jle
or
mov
test
ja
fcomi
imul
out
add
sub
sbb
or
je
sub
arpl
jl
ret
lahf
rcll
jge
call
stos
cmp
lds
fidivrs
inc
jo
push
push
adc
mov
or
cld
xlat
sub
dec
jno
in
mov
js
aad
sub
cmp
inc
jmp
pop
loope
testb
aaa
xor
mov
int3
sbb
jl
dec
inc
popa
jge
dec
out
es
aas
add
jo,pt
test
xchg
lahf
sbb
mov
lock
lods
ja
stos
sub
mov
loopne
pop
call
pop
shrb
insl
pushf
fidivrs
cmp
xor
pop
mov
or
sbb
inc
daa
mov
jl
jno
mov
pop
xchg
and
sub
std
mov
or
inc
adc
pop
mov
xsaves
and
lret
pop
iret
lret
aaa
repz
scas
addb
sbb
adc
mov
mov
cmp
cs
mov
loopne
xor
or
mov
scas
push
movsb
fmull
jl
imulb
xor
mov
sti
mov
jnp
mov
call
mov
xor
push
test
dec
dec
lcall
cmp
test
and
aad
fs
lret
test
repnz
movsl
pop
arpl
jae
insb
and
pop
ret
mov
add
cmpsl
push
jp
push
inc
lahf
out
jge
cld
aad
mov
std
lods
inc
xor
mov
inc
mov
dec
jnp
adc
jno,pn
adc
orb
or
mov
inc
push
lcall
and
shld
gs
fisubl
inc
xchg
cmpsb
aam
repnz
xlat
mov
fisubrl
cli
js
and
push
repnz
push
insb
fnsave
dec
in
sbb
adc
pop
adc
lock
aad
idivb
xchg
sar
xor
adc
sub
sbb
test
les
push
pop
mov
sbb
mov
rcrl
add
mov
xor
es
mov
mov
mov
icebp
inc
xchg
inc
and
push
das
outsl
fs
int3
add
jns
neg
jno
push
imul
fsubl
push
sbb
mov
mov
mov
mov
lret
dec
mov
loope
nop
and
pop
mov
ljmp
xchg
pop
sub
in
or
lods
jmp
jp
jne
ret
or
fcoml
imul
push
les
bnd
add
dec
test
pop
sub
jmp
or
mov
jne
mulb
ret
add
cmp
push
pop
aam
js
std
pop
sbb
cmp
pop
ret
mov
js
push
inc
pop
dec
pop
mov
mov
bound
stos
xor
mov
inc
pop
adc
or
pop
jne
cwtl
pop
popa
pop
push
mov
mov
pop
sub
or
adc
fs
mov
adc
fcompl
data16
xchg
dec
pop
clc
in
repz
mov
add
dec
lret
inc
inc
outsb
mov
aad
stos
shr
mov
push
pop
and
fisttps
adc
adc
loopne
mov
mov
dec
std
icebp
out
cmpsb
lods
fld
outsb
fs
mov
fisttps
mov
popa
inc
mov
adc
adc
mov
scas
in
dec
or
movsl
cmp
mov
pop
shll
jg
aam
shll
dec
push
int3
or
push
lds
mov
add
xchg
xor
imul
imul
adc
vdivss
and
xchg
lods
cld
cwtl
inc
ret
push
xchg
or
outsb
das
sub
scas
mov
xor
inc
fcmovne
test
push
hlt
clc
data16
mov
push
mov
movsl
cld
dec
cmpsb
arpl
cmp
mov
sub
std
cs
cmp
mov
stc
mov
je
loop
dec
sbb
arpl
inc
mov
sahf
lock
nop
push
shrl
test
xchg
xchg
iret
and
mov
push
std
cli
imul
sbb
dec
addr16
xor
add
addr16
xor
sbb
or
push
or
pop
mov
cltd
out
and
test
addr16
cmp
fisubrs
jmp
xor
push
cmp
icebp
mov
in
roll
sbb
lods
dec
dec
cwtl
cld
loopne
rcrb
adc
rcrl
or
insb
sbb
adc
lods
icebp
mov
jge
lods
xor
or
rcrl
mov
nop
data16
pop
int
insb
inc
repz
fists
pushf
jo
pusha
mov
cmpl
adc
xchg
clc
sub
inc
or
sti
sub
mov
cmp
add
inc
cmp
mov
or
ljmp
mov
int3
push
and
jle
lret
test
mov
xor
das
add
ljmp
gs
mov
xchg
xchg
mov
neg
test
adc
repnz
push
mov
jnp
jae
jnp
scas
mov
adc
leave
pop
call
xchg
jl
sub
aaa
inc
xchg
mull
fbld
adc
fcomi
stos
sbb
ds
mov
sub
imul
fdivl
jno
pop
xchg
inc
cmp
xchg
std
sub
mov
shll
sbb
stos
movsb
rolb
ret
flds
push
inc
lock
push
in
push
sbb
dec
int3
mov
data16
daa
cli
ljmp
int3
cmpsl
push
insl
dec
or
lea
sahf
into
js
sbb
push
add
push
int3
cli
les
lea
add
adc
sub
xor
aas
xchg
std
pushf
repnz
stos
fwait
icebp
sub
icebp
jge
mov
je
xor
xlat
jl
xor
cmpsb
xlat
dec
fcoms
sub
push
xor
cltd
ds
dec
shll
ljmp
xchg
lea
shl
repz
mov
scas
inc
aam
cmp
push
cltd
outsb
xchg
jb
lds
and
push
add
push
add
cmp
lds
out
test
popa
popa
mov
rorl
push
adc
dec
cltd
mov
sbb
xor
push
mov
inc
mov
push
pop
lahf
sub
adc
push
jo
jns
push
jl
jb
push
jmp
cltd
outsl
lahf
jb
mov
add
dec
cmp
pop
mov
lret
in
ss
push
cmpsl
mov
decb
dec
js
cmpsl
shll
xor
or
mov
lret
insl
jne
outsl
test
sub
mov
dec
stc
aaa
and
jecxz
xor
adc
icebp
adcl
mov
int
cmpsb
aas
xchg
pandn
and
push
adc
inc
gs
jl
sbb
cmovg
lahf
mov
cmp
cs
add
pop
std
and
pushf
repz
sub
aam
pop
jcxz
rolb
fwait
in
bound
mov
orb
insb
scas
cmp
mov
lcall
aas
aaa
mov
jno
lcall
dec
pop
stos
fmuls
in
dec
and
mov
orb
test
pop
ljmp
and
nop
mov
repz
rorl
add
xchg
cmp
or
repz
inc
pop
sub
repz
cmp
call
sub
pop
fadds
enter
push
xor
enter
in
pop
adc
cmpsb
test
jno
mov
pop
flds
cmp
fldenv
mov
imul
pusha
inc
rol
fs
push
fldt
cmp
dec
adc
lahf
adc
in
addr16
imul
int
dec
or
cmc
adc
rorb
scas
mov
ja
adcl
push
and
ret
ret
scas
arpl
enter
dec
push
mov
jp
pop
xor
inc
sti
js
and
xchg
sbb
daa
inc
jg
rcll
dec
rorb
mov
dec
pop
das
rolb
arpl
in
popa
repz
xorl
jge
aam
fimull
adc
pop
mov
xor
mov
xor
mov
scas
mov
movsb
cmpsl
je
pop
or
cs
outsb
aad
aam
cmp
shlb
and
mov
push
test
pusha
jo
aas
jne
xor
mov
mov
mov
scas
popf
outsb
fcoms
jns
stos
flds
mov
push
rorl
ja
push
sbb
insb
inc
xor
rcrl
imul
jp
pop
imul
jle
rclb
leave
imul
lahf
jns
sti
xlat
jae
lcall
dec
cld
dec
dec
adc
push
push
lods
loope
fdivl
adc
mov
ljmp
push
lret
push
stc
lds
pop
inc
cmp
push
bound
dec
movl
push
inc
cltd
mov
je
in
inc
addb
lret
push
data16
xchg
sete
fsubr
pop
mov
mov
dec
push
mov
aam
fwait
into
and
push
add
jb
int
rol
adc
data16
push
xchg
nop
pop
adc
scas
jne
pop
jmp
cs
push
dec
inc
xlat
pop
cmc
out
jns
pop
lret
scas
xor
pop
inc
adc
addl
sahf
out
inc
dec
adc
ja
lret
in
adc
pushf
sbb
push
adc
mov
adc
xchg
cwtl
repnz
dec
and
stos
cmpsb
mov
test
repnz
ret
xchg
cmp
pushf
jae
imul
fwait
jns
pop
sbb
and
testb
lods
fst
xchg
pop
fmuls
jmp
int
or
and
mov
and
cwtl
sbb
jecxz
jb
fadds
mov
aaa
mov
sbb
fwait
pop
jecxz
scas
mov
mov
ja
fdiv
pop
shr
das
mov
and
repz
sbb
outsl
sbb
xor
cwtl
popa
inc
inc
sti
arpl
jbe
nop
mov
imul
add
dec
jne
fistps
ds
aaa
jl
sahf
inc
dec
mov
cmp
gs
jl
bound
and
pop
ficompl
or
lret
shll
adc
bound
inc
sbb
push
jbe
or
mov
lods
nop
repz
js
xchg
vpaddusb
cltd
data16
adc
push
jg
daa
popf
sti
in
mov
xchg
cmp
cli
cmc
and
imul
sbb
xchg
add
dec
cmpsl
add
adc
rol
dec
sub
push
mov
sub
jnp
inc
sub
loope
stos
jmp
leave
lds
outsl
and
sub
gs
sti
sbb
add
ret
fstpl
adc
sbb
cmpps
hlt
xchg
je
dec
mov
mov
cmpsl
lock
pop
and
jbe
loop
daa
movsb
leave
outsl
push
es
rorb
movsl
mov
jno,pt
xor
jmp
aaa
stos
jecxz
sbb
push
jne
aas
inc
mov
aad
jmp
fcmovne
pop
insl
stos
out
adc
shlb
icebp
push
or
lods
lods
loope
nop
ljmp
lods
lcall
mov
push
push
ss
mov
add
push
outsl
pop
or
jp
jo
xor
inc
sub
stos
mov
inc
pop
dec
pop
imul
icebp
movsl
cmp
push
mov
sub
sbb
jp
xlat
js
xor
push
pushf
and
outsl
adc
pop
mov
mov
jp
pop
je
leave
cmp
inc
cwtl
push
mov
jmp
dec
lea
cmp
ret
mov
xchg
push
add
out
dec
jae
and
jle
dec
mov
lret
pop
or
mov
inc
push
adc
stos
enter
imul
xlat
pusha
js
mov
lock
or
sbb
mov
lret
nop
cmp
imul
lods
stc
sbb
in
je
xchg
pop
outsb
jns
inc
fldl
jno
sub
insl
scas
rcrl
and
js
mov
mov
lods
jmp
fiadds
mov
call
or
mov
cwtl
mov
cli
mov
outsl
mov
sub
xchg
decl
data16
ret
roll
mov
insb
adc
pop
pushf
lret
add
fiaddl
cmc
inc
addb
xor
fbstp
dec
push
push
xchg
mov
shlb
mov
dec
xor
sbb
stos
in
cmpsb
adc
jmp
hlt
mov
sarl
sbb
adc
or
jae
cmpl
push
sbb
xchg
lcall
jns
xchg
stos
dec
stc
adc
out
jne
fcoms
push
cmpsl
xlat
mov
inc
and
cmc
push
sub
aad
lea
mov
into
js
jg
rcrb
std
lods
jp
sahf
xchg
test
pop
mov
lcall
inc
sbb
sbb
mov
daa
push
movsl
jmp
jge
ffree
cwtl
jge
aam
mov
mov
imul
cmp
dec
cmp
add
out
dec
subb
add
xchg
sbb
mov
xlat
out
into
adc
fcoms
fbstp
jg
mov
addr16
outsb
rcl
jnp
data16
je
pop
push
jmp
sar
decl
mov
add
cmpsl
jg
loop
sahf
int
mov
inc
xchg
iret
stc
and
mov
push
mov
dec
sbb
mov
push
out
sub
or
subl
in
ljmp
movsl
cmp
cmp
xlat
adc
add
inc
and
or
cmp
ja
adc
push
ds
mov
inc
loop
xchg
xorb
gs
mov
mov
pop
sbb
stc
call
xchg
xchg
mov
jl
sbb
fcomp
adc
inc
stos
popa
cmpsl
js
xchg
in
mov
fiadds
cmp
pushf
adc
cmpsb
mov
call
push
and
push
call
ficompl
cs
js
into
shrb
faddl
xchg
fwait
xchg
cmp
sub
mov
mov
or
push
imul
or
sub
adc
dec
jbe
repnz
fs
ss
jb
adc
stos
mov
mov
push
mov
jno
lahf
pop
scas
sub
es
inc
xor
gs
push
xchg
mov
sub
xchg
push
sbb
in
mov
push
jecxz
inc
or
push
lods
push
sbb
mov
lret
idivb
lock
bound
test
xchg
das
lods
inc
fmul
sub
mov
fisubs
pop
push
cmp
dec
xchg
pop
jg
aam
cwtl
stos
pop
and
jmp
inc
sbb
dec
xchg
rcr
and
sahf
or
dec
and
sbb
pop
jle
pusha
scas
mov
fidivs
and
jl
add
nop
faddl
inc
dec
ror
lahf
xor
in
jg
and
fisttps
leave
cld
push
jb
fxch
sub
aad
pop
push
adc
cld
subl
pop
fwait
sbb
mov
addl
js
js
dec
mov
and
cmpsl
aam
cmp
in
gs
adc
xor
cli
add
fldl2e
cmp
inc
mov
fcomp
int
addr16
sub
gs
inc
nop
sub
xchg
mov
mov
mov
add
inc
sbb
test
call
movsb
test
fists
add
fs
outsl
mov
xor
xchg
in
ja
in
mov
dec
cld
and
pop
xchg
outsl
cs
repz
loopne
pop
enter
or
adc
popa
push
sub
ljmp
mov
pop
jne
and
mov
cld
adc
mov
mov
loope
jle
ljmp
in
das
xchg
cs
lret
jecxz
iret
cmp
ss
rcrl
mov
lock
mov
lret
in
dec
sahf
aaa
add
adc
or
adc
andl
frstor
mov
imull
push
aad
fs
jb
pop
ss
adc
or
mov
mov
jg
ret
mov
pop
call
push
andb
mov
jne
loope
cmp
iret
pop
xor
inc
mov
xorl
mov
lahf
push
mov
add
das
psllq
shll
cmp
mov
lea
adc
xchg
cmc
jae
dec
push
dec
imul
push
sahf
jg
lods
das
inc
jp
idivl
stc
shl
add
jns
xlat
cmp
outsb
js
push
jl
cld
pop
data16
push
ret
mov
cmp
sbb
jb
std
jnp
jb
les
lods
movsb
sbb
test
push
out
cmpsl
lods
out
mov
shrb
and
test
cltd
punpckhdq
mov
outsb
jecxz
in
or
sbb
lahf
pop
outsl
outsb
sub
shlb
pushl
in
fs
loopne
adc
push
movsb
mov
cmpsb
and
inc
jle
pop
in
sbb
ficoml
add
les
int3
arpl
jbe
aas
xchg
mov
mov
clc
inc
fs
arpl
xor
jb
cmp
pop
imul
push
popf
jae
shll
cmp
push
xchg
sub
push
or
push
inc
aam
test
and
push
das
sbb
orb
dec
xchg
pop
or
mov
fstl
ret
in
push
ds
and
shlb
or
sarb
and
daa
push
mov
cmp
xor
fsqrt
mov
aad
cli
cld
call
arpl
daa
push
scas
clc
mov
xlat
aam
fsubl
hlt
pop
jns
fistl
movsl
jnp
push
and
dec
xchg
enter
inc
dec
shl
mov
imul
push
sti
mov
arpl
jno
pop
mov
out
test
mov
cltd
in
push
sti
push
lock
sub
ss
repnz
mov
push
xchg
lock
add
sbb
jecxz
movsl
xchg
stc
cmp
mov
push
enter
inc
fcomps
xchg
mov
inc
inc
int
cmp
rolb
mov
cmp
mov
aam
cmp
in
adc
mov
inc
sti
xor
sub
or
ss
decl
adc
nop
adc
inc
mov
inc
sub
adc
ficoms
push
add
xchg
lahf
push
xor
fwait
imul
fsub
or
nop
cld
jecxz
mov
xchg
sbb
rolb
jb
dec
sbb
ror
stos
sub
adc
cltd
sbb
out
and
addr16
cltd
sbb
xorl
stc
out
inc
mov
adc
inc
lret
pop
fwait
add
or
and
je
ljmp
and
jl
dec
mov
mov
rol
dec
pushf
mov
lock
stc
xchg
or
bound
les
xlat
mov
push
ds
out
cld
out
push
inc
ret
xlat
adc
push
jecxz
or
jg
psrlq
dec
outsl
dec
xor
pop
and
dec
leave
lods
jb
stos
inc
lea
inc
mov
sahf
aaa
imul
and
or
xor
sub
cld
cmpsb
roll
pop
or
das
push
out
push
mov
jecxz
in
clc
shrl
push
xchg
aas
hlt
adc
shrl
or
mov
cld
jnp
push
ja
das
dec
notl
lods
ret
sbb
cli
push
in
pop
mov
inc
push
outsb
cld
stc
insb
sbb
mov
push
sub
cmp
xor
mov
cmp
sub
xchg
insb
push
jg
or
mov
clc
mov
cmp
in
jle
inc
mov
pop
sub
stos
orb
adc
and
pusha
dec
out
jge
fiadds
and
movsb
push
mov
dec
rcrb
and
lods
sbb
and
mov
adc
jg
addr16
iret
arpl
rol
in
inc
cld
dec
ret
add
fsin
cmpl
jb
mov
jo
mov
mov
cmpb
lods
jp
int3
mov
jp
ljmp
push
stos
inc
cmp
xchg
out
cmp
mov
mov
loope
or
cwtl
push
popf
fistpll
lds
sub
push
push
inc
mov
mov
aad
push
inc
sub
into
dec
adc
adcb
les
sbb
test
mov
sbb
jns
adc
test
push
xor
adc
outsl
sub
in
les
inc
xorb
mov
fdivrs
jl
inc
push
push
mov
test
imul
cmp
dec
pop
and
and
test
jmp
popf
pushf
pushf
shlb
shll
push
aad
cmpsb
stos
cmpsb
aam
mov
shr
into
cmpsb
sub
pop
les
xchg
dec
sub
adc
lods
mov
stos
jae
cmpsb
cmp
xchg
jge
jmp
pop
mov
xor
test
bound
mov
in
and
pop
les
cld
mov
fiadds
mov
add
andb
add
inc
inc
sbb
fisubrl
lret
das
loopne
ljmp
push
adc
xchg
push
nop
cmp
mov
lds
sti
cmp
lods
dec
cmp
cmp
addr16
aad
popa
sbb
fwait
dec
les
test
aam
repz
loop
or
push
cmp
add
lods
xchg
sub
xor
jge
xor
add
test
iret
or
call
or
sub
jmp
arpl
mov
and
or
roll
mov
jno
jns
sub
xrelease
jno
mov
mov
add
pushf
in
insb
js
fcmovnu
adc
test
or
sub
scas
sub
aam
mov
mov
clc
into
icebp
jg
and
lock
stos
jmp
shrl
or
mov
xchg
imul
mov
dec
ss
mov
mov
arpl
xchg
arpl
rorb
mov
pop
pop
test
jbe
adc
rcll
pop
and
sub
cs
push
jmp
or
cmp
mov
adc
or
dec
inc
add
lret
sbb
int3
add
inc
out
ss
add
imul
imul
std
mov
sti
pop
dec
sub
sbb
cmp
ret
stc
sub
outsb
cmp
fimuls
mov
addr16
pushf
xchg
pop
inc
ljmp
xchg
mov
pop
mov
and
insl
push
out
cmc
movsb
mov
std
push
outsl
in
pop
jb
mov
jmp
push
fs
enter
or
cmp
cmpsb
subl
lret
movsb
icebp
scas
adc
sub
pop
cwtl
iret
sbb
push
movsb
mov
icebp
push
nop
lret
inc
cmpsb
data16
jne
mov
lea
jne
call
in
outsb
mov
sub
stc
cli
sti
out
imull
ret
lods
stos
test
mov
or
jns
fldcw
push
pop
jnp
pop
mov
daa
inc
mov
add
sahf
movsl
fdivrs
jp
and
xchg
or
jmp
js
mov
aam
mov
mov
jecxz
xor
lods
cmpsl
adc
aaa
pop
jle
adc
dec
push
cld
fisttpll
adc
xchg
cmp
or
fistpl
sbb
jns
stos
fldl
xchg
cmpsb
mov
push
es
jecxz
mov
or
inc
and
ret
js
or
add
scas
xchg
mov
adc
mov
vphaddubd
push
and
jp
sti
clc
scas
jno
dec
mov
cmp
adc
aam
add
fdivrs
aaa
fs
iret
mov
and
movsl
mov
and
ss
xchg
mov
pop
pop
int
cmp
add
mov
aam
or
xor
pop
mov
mov
push
push
inc
imul
push
repnz
adc
mov
into
clc
ds
les
mov
out
cld
mov
insb
xchg
pop
call
push
jb
fstl
into
adc
and
cld
ljmp
aam
xor
jb
arpl
outsb
cmpsb
xor
mov
pop
jbe
and
and
rclb
fstps
lcall
cmp
mov
das
add
sbb
and
inc
add
push
mov
cmpsl
pop
shll
das
inc
pop
out
mov
add
str
and
out
cmp
adc
xor
lea
pop
popa
add
cmpsb
mov
cmp
sbb
mov
xor
dec
dec
sub
lock
mov
cwtl
lcall
loopne
mov
pop
adc
cli
sahf
js
popa
mov
xlat
es
fidivl
mov
loop
jbe
or
rorl
ss
pop
ret
sub
jl
hlt
push
lock
dec
xchg
mov
and
and
sbb
pushf
jg
cmp
jle
mov
push
sub
push
gs
dec
nop
pop
cmp
pop
xor
pusha
scas
shll
pushf
mov
or
push
addr16
xlat
xor
push
sbb
pop
loop
sahf
cwtl
fwait
inc
mov
stc
adc
rclb
mov
iret
jecxz
push
sbb
in
sub
cmpsl
scas
add
cltd
sub
cld
out
sub
dec
sbb
daa
cld
pop
cli
xchg
mov
adc
pop
mov
rcrb
and
stos
nop
and
dec
cwtl
mov
ljmp
mov
sub
jge
shll
movsb
sbb
adc
into
dec
mov
sahf
xchg
adc
mov
stos
sti
push
mov
push
arpl
mov
test
pop
adc
lock
inc
cmpsl
add
mov
hlt
mov
dec
push
dec
insl
jle
mov
rorl
mov
test
mov
xchg
repz
jge
and
mov
insl
sub
jge
mov
sub
and
or
lods
lods
adc
and
out
mov
sub
inc
test
pop
xchg
pop
test
add
lahf
sub
fwait
repz
cmc
in
push
je
jno
pop
and
jg
pop
or
aad
hlt
cmc
lahf
sub
add
mov
sub
into
mov
loope
sbb
ror
push
xchg
push
fst
das
pop
mov
xchg
sahf
pop
adc
out
or
out
jg
lds
in
pop
ljmp
push
dec
inc
iret
in
dec
outsb
lret
pcmpgtw
push
int3
pop
sar
cmp
sbb
cld
cltd
pushf
insb
xchg
ja
leave
sbb
mov
cmpsb
adc
fisttpl
jbe
xor
cli
lcall
cmp
repz
push
lods
into
or
dec
repnz
mov
jnp
xor
jg
or
es
std
sub
cmp
nop
xchg
cmc
jecxz
clc
cmpsb
outsb
pusha
xchg
js
mov
lret
lret
pop
popa
pop
ds
ret
inc
insl
add
mov
adc
jle
jecxz
jno
lea
mov
xchg
jecxz
aas
cmp
rcrb
ret
popf
cmpb
and
pop
adcl
and
push
rolb
mov
mov
fsubrp
je
call
es
loope
scas
dec
adcb
mov
cli
decb
cmp
sub
dec
or
mov
cs
pop
iret
cmp
iret
ficoml
test
outsl
lods
xchg
in
xchg
icebp
adc
xchg
in
jns
popa
jecxz
fs
xor
stos
inc
orb
xchg
in
std
mov
cmp
inc
adc
and
in
push
ret
bound
cmp
xor
xchg
mov
pop
es
ds
lea
bound
lods
cmp
or
fwait
jne
xchg
in
adc
push
jae
es
mov
sahf
nop
sahf
mov
add
not
cmp
mov
outsl
jae
cs
or
xor
pop
mov
adc
sbb
jl
inc
mov
test
cs
fdiv
sub
push
ffreep
xchg
or
ret
mov
xor
cmc
movsl
les
fstl
sbb
out
int3
jbe
int3
jmp
pop
cwtl
xchg
test
or
dec
xchg
subb
ljmp
sub
call
fidivs
lods
inc
dec
jo
scas
push
ljmp
sub
jb
adc
lods
cmp
fidivs
fadds
flds
fcmovnbe
jge
or
inc
fwait
adc
cmp
das
xchg
lahf
outsl
dec
mov
dec
shll
mov
jne
sbb
xor
mov
or
xor
test
in
or
push
popf
pop
push
xchg
pop
mov
sbb
mov
into
imul
jg
lret
xor
mov
push
clc
push
lcall
test
pop
rcrl
sub
pop
pop
pop
sti
lret
xchg
sbb
and
and
sbb
add
cwtl
mov
aad
sahf
cltd
jge
adc
inc
jne
inc
sti
dec
ds
fstps
fdivrl
or
or
pop
xor
pop
pop
xchg
mov
or
es
mov
fiaddl
scas
pop
scas
imul
push
testl
shrl
nop
repz
adc
add
mov
sbb
jne
fnstcw
faddl
outsb
push
jne
pop
lods
out
mov
jo
xor
mov
enter
adc
in
mov
incl
mov
movsb
lds
das
rclb
fucomip
sbb
cs
and
pop
mov
jle
cmp
cltd
and
cwtl
pop
andb
scas
sbb
imul
fsubs
scas
xor
lods
and
dec
stos
mov
jns
push
out
adcl
std
rol
andl
dec
dec
xor
int3
jo
iret
daa
pop
inc
icebp
sti
mov
push
mov
add
je
xchg
enter
push
jb
push
cmp
push
and
into
pop
jg
lods
addr16
jg
insl
fistpll
popf
fnstcw
fidivl
xchg
cmp
push
mov
mov
lret
out
sbb
scas
call
das
shl
push
jne
mov
lcall
loopne
xchg
sbb
ss
js
pop
outsl
mov
jno
xlat
add
sbb
mov
sub
data16
out
iretw
or
mov
or
insb
push
in
inc
addr16
lret
pop
fstp
enter
cmp
lcall
es
xorl
pop
lds
lea
shl
lds
jo
das
fsubs
ficoms
adc
add
repnz
fwait
mov
jecxz
mov
and
xchg
xor
mov
lea
adc
jge
mov
pop
pop
mov
popa
in
push
inc
push
sub
xchg
cmpsb
lock
jbe
inc
imull
mov
mov
ret
jne
fucompp
test
pop
add
rclb
icebp
mov
enter
faddl
dec
outsl
movsl
es
push
or
jbe
mov
enter
js
cmp
mov
insb
push
test
dec
or
lds
xor
jno
ret
notb
js
cs
and
and
cmp
shrb
lret
xchg
data16
outsb
inc
adc
sbb
add
stc
pop
dec
sbb
or
push
or
ja
mov
cmp
out
adc
addr16
xor
cmp
jecxz
jb
jge
jmp
xchg
lcall
repz
stos
hlt
mov
xchg
jle
dec
push
fdivp
mov
lds
nop
push
ret
in
in
ret
roll
mov
clc
sub
adc
movb
aad
imul
cmpsb
lods
stc
or
gs
xor
lret
popa
enter
ja
jno
or
enter
js
shrl
fidivrs
mov
enter
inc
sbb
cmpsl
and
outsl
cltd
in
insb
inc
insl
jno
mov
pushf
xor
int
push
rorl
jno
or
inc
push
inc
push
add
testb
repz
stos
push
xor
dec
push
or
xlat
mov
insl
scas
pop
cmp
ljmp
lea
pop
js
or
jno
das
dec
mov
push
inc
mov
inc
mov
push
mov
add
repnz
addb
outsl
dec
adc
clc
adc
jp
fnstcw
ret
lea
shll
test
clc
xchg
pop
insl
nop
hlt
das
icebp
add
addl
inc
mov
pushf
sbb
fisttps
rcll
xchg
xor
fldcw
incb
cmp
fiaddl
jnp
dec
add
int3
inc
mov
adc
inc
jns
lret
cmc
add
jnp
jl
push
shl
mov
mov
mov
add
pop
pop
adcl
scas
pop
mov
lds
mov
outsl
inc
stos
jno
fdivrs
pop
ret
and
popf
in
xor
lods
clc
rolb
or
ljmp
xor
es
ficomps
add
pusha
jge
xor
int3
add
nop
imul
outsl
jl
inc
imul
rol
adc
movsb
and
sbb
jp
aaa
sub
sbb
fidivl
sbb
addb
or
xchg
pushf
adc
mov
mov
loopne
insb
mov
addr16
jb
cmp
xchg
ja
mov
stos
jbe
dec
shlb
push
and
fdivrl
cmc
stos
push
sbb
push
outsb
popf
jns
cmc
xchg
call
fwait
inc
mov
xchg
sarb
mov
add
in
xchg
lds
lcall
mov
pop
dec
xor
dec
jb
or
add
cmpsb
test
outsb
adc
sti
push
push
hlt
fsubl
pop
ds
pop
adc
subl
out
out
jl
adc
pop
cs
int3
xchg
pop
movsl
inc
lods
stos
aaa
enter
fistps
nop
cs
mov
fisubl
daa
test
imul
push
imul
adc
and
mov
adc
add
or
adc
dec
mov
xchg
push
xchg
and
push
mov
hlt
jge
int
sub
adc
or
arpl
mov
call
adc
pushf
xchg
sbb
enter
jae
ret
cmpb
fisubrl
lods
psubsb
or
into
jmp
idiv
mov
clc
push
out
lcall
cmpsl
sub
sbb
shlb
cmp
pusha
test
xor
sub
or
iret
cld
shrb
repz
clc
cs
sub
andb
addr16
es
or
adc
and
pop
inc
das
and
and
xchg
mov
adc
or
mov
rcll
or
inc
push
out
mov
inc
dec
adcb
jmp
gs
cltd
cltd
mov
fistps
loop
loop
push
dec
aad
arpl
aam
xorb
cmovb
rorl
add
cwtl
pop
pop
or
fwait
pop
out
repnz
mov
data16
or
mov
jl
lahf
js
mov
mov
lret
pusha
test
jge
jae
out
add
addr16
clc
xor
sahf
ja
dec
jno
mov
inc
out
jge
aad
xchg
pop
xor
repz
push
mov
scas
sub
xchg
js
sub
out
jecxz
sbb
adc
and
je
or
imul
arpl
bound
punpcklwd
cli
sbb
inc
push
cmpsb
jl
int3
dec
fcomps
mov
mov
je
sbb
in
pop
dec
mov
outsl
cmpsl
rorl
jge
push
adcl
stos
inc
push
cmc
jge
cmp
push
std
mov
push
push
xor
xlat
shr
pop
xchg
cmp
imul
mov
outsb
mov
inc
cmpsl
push
orl
decb
in
test
add
mulb
sbb
mov
cmpsb
les
cltd
addr16
test
stos
mov
call
imul
jno
or
inc
ja
sub
je
xor
in
jns
pushf
stos
scas
stos
mov
cmp
push
aaa
ret
xor
adc
test
xchg
rorb
test
ret
test
test
sub
ret
fucomp
pop
in
sti
fimuls
jae
int
push
je
add
pop
aas
pushf
dec
fistpll
sbb
lret
lret
sub
push
cmp
and
pop
ljmp
mov
loopne
mov
aam
inc
rolb
fsubrs
in
test
ret
adc
push
imul
xchg
in
andb
testb
mov
dec
xor
sub
push
stc
xchg
xchg
push
fwait
loop
loop
cmp
or
rorb
popa
shlb
stc
inc
ljmp
sbb
jo
or
pop
fsubrs
xor
gs
or
xlat
sbbl
sahf
jmp
push
mov
add
inc
pop
pop
mov
sbb
aad
mov
call
pop
inc
fmulp
je
addb
or
mov
stos
dec
dec
mov
and
mov
loope
or
rcr
stos
in
sub
enter
push
adc
mov
inc
repnz
test
xor
cmp
in
mov
movsl
dec
jb
or
jb
inc
adc
lcall
mov
add
xorl
adc
mov
cmp
cmpsl
jbe
outsl
and
pop
xor
fsub
push
leave
sub
mov
pusha
inc
pop
fwait
xchg
ret
mov
data16
push
jp
out
sub
dec
test
xor
cwtl
jle
jmp
call
push
pop
sub
pop
jmp
scas
pop
repz
inc
and
adc
arpl
test
mov
mov
and
cmc
push
enter
pop
inc
jp
sub
cmp
cli
jae
arpl
clc
leave
clc
jp
jno
jno
mov
jl
scas
int3
mov
add
add
jl
lds
push
dec
mov
or
in
sbb
pop
cmpsb
cmp
add
add
sbb
jp
inc
scas
cmp
je
or
pop
call
dec
xorl
adc
testl
adc
pop
icebp
and
rorl
fucomi
mov
call
pop
mov
mov
jns
sbb
sub
add
mov
lret
sbb
gs
icebp
mov
fisttps
sbb
push
and
cmp
push
jne
dec
fwait
aam
insl
jp
adc
cmp
test
insb
adc
jae
xor
js
push
stos
in
push
add
jne
orb
daa
adc
out
lods
xchg
cmp
lea
add
in
ret
mov
push
outsl
lahf
push
sub
gs
clc
dec
mov
jp
pop
xor
inc
lahf
push
mov
add
fidivs
ret
jo
or
ret
or
xchg
inc
hlt
inc
adc
pushf
xor
mov
dec
inc
xchg
mov
jns
and
jmp
sahf
jecxz
leave
xor
and
adc
repnz
pop
aad
xor
adc
fadds
cli
jb
inc
and
mov
push
adc
sub
sbb
sbb
mov
add
out
and
pop
push
add
shlb
sbbl
clc
inc
cmpsb
hlt
leave
out
push
nop
int3
int3
inc
cmp
jne
inc
lods
cld
sti
xor
sub
mov
pop
daa
cmp
mov
call
xlat
lods
rcr
and
inc
jmp
inc
xor
mov
fwait
lahf
or
mov
insl
inc
and
mov
mov
icebp
jae
and
loop
insb
jb
js
jle
mov
fidivl
insl
lahf
lret
mov
and
rol
cmp
cld
add
popa
clc
inc
xor
mov
mov
dec
push
pusha
push
stos
test
ljmp
pop
roll
pusha
popa
dec
mov
add
pushf
mov
sub
cmp
xchg
jp
add
add
mov
mov
cmpb
icebp
or
mov
shrb
roll
lods
sbb
cmp
cld
push
or
or
call
mov
aas
and
mov
mov
xchg
mov
test
fdivs
add
lea
or
mov
mov
pop
xchg
ds
jle
lds
ret
dec
adc
idivb
enter
push
fnstenv
push
cmc
lock
fnstenv
xor
and
push
in
scas
loope
xchg
inc
movsl
inc
xlat
cmc
cmp
lahf
lcall
scas
dec
imul
cmp
xor
mov
lret
mov
cs
cld
push
mov
jno
push
mov
pop
mov
ds
int
push
xchg
je
ret
jle
lret
sbb
inc
mov
shl
fcompl
dec
push
fs
cmpb
inc
repz
mov
xor
insb
mov
xchg
mov
push
jnp
cwtl
push
mov
std
repnz
jne
xchg
pop
dec
enter
fs
mov
xchg
lods
add
je
mov
mov
aaa
mov
out
push
mov
pop
imul
mov
push
xchg
repnz
push
scas
xchg
cld
or
aas
aas
jle
cs
mov
rcll
nop
fists
and
les
int
mov
cmp
ficoml
pop
mov
daa
adc
imul
adc
sbb
or
jae
dec
xor
daa
adc
rcl
rcr
add
into
mov
cmp
add
mov
adc
add
sub
call
loope
push
xor
pop
pop
xlat
sahf
fstpt
outsl
imul
xchg
push
inc
call
aas
outsl
add
lds
pop
mov
sub
adc
pop
cmpsb
mov
xor
cltd
lock
scas
inc
dec
mov
add
fidivrs
rolb
test
jb
pop
mov
cmp
stos
ja
popa
pop
xchg
call
and
movsl
sti
inc
jl
scas
aaa
filds
xor
or
push
dec
or
repz
nop
inc
cs
enter
adcb
mov
sub
mov
mov
inc
lret
xchg
ds
xor
mov
imul
xchg
cmpsb
jb
adc
lods
nop
mov
ret
cmpsb
jle
out
or
std
fs
mov
jl
out
jns
mov
hlt
adc
xor
push
dec
daa
imul
cmpsb
out
outsb
cltd
and
sub
scas
outsb
push
in
pop
ja
test
push
mov
sbb
xchg
es
jbe
bound
xor
xchg
mov
mov
jl
lods
lock
mov
adc
push
arpl
leave
and
ja
push
cwtl
inc
jbe
data16
cmpb
ja
cltd
adc
push
xchg
cmp
xchg
lret
ja
xchg
pop
arpl
pushf
cs
les
clc
aad
ljmp
adc
cmp
sti
sub
mov
sbb
lret
pop
mov
xor
jl
daa
jne
jle
push
or
fwait
mov
sbb
into
or
push
xchg
add
out
rcrl
cmp
jecxz
adc
divb
mov
push
cmp
leave
inc
clc
notb
mov
movsl
lret
mov
push
push
xchg
and
push
rorl
inc
sub
sub
popf
int3
sbb
adc
jne
xchg
pop
enter
aam
xchg
or
imul
cld
test
sub
leave
ficoms
xorl
popa
jne
inc
xchg
and
xchg
mov
into
enter
clc
pop
movb
cmpsl
bnd
dec
cmp
adc
cld
stos
insb
push
jno
jmp
imul
js
push
stos
and
and
stc
loopne
scas
pop
xchg
ja
repnz
ljmp
push
inc
addb
inc
movb
icebp
aas
out
mov
loope
testl
sub
or
aas
das
dec
inc
push
outsl
aas
dec
aad
and
inc
and
mov
mov
jo
mov
sbbb
mov
adc
cmp
mov
mov
cmp
cmp
out
dec
bound
inc
stos
je
mov
sub
sbbl
or
movsl
mov
adc
push
cmp
fiadds
inc
ss
push
sbb
out
icebp
add
cmp
mov
arpl
fprem1
sbb
pusha
mov
jno,pn
inc
test
push
aam
filds
jp
lahf
pop
fs
mov
lock
idivb
repz
test
mov
mov
popa
mov
mov
jb
int
mov
mov
xchg
es
pusha
cli
leave
cmp
clc
mov
mov
xor
data16
jmp
xchg
ds
jns
sti
outsb
pop
insl
mov
mov
mov
pop
in
pslld
dec
cmp
daa
push
dec
ret
pop
mov
imul
inc
lds
ljmp
add
adc
movsb
nop
add
les
pop
add
pop
sahf
ror
mull
jnp
in
addb
dec
jne
mov
xor
add
dec
mov
push
loop
inc
xchg
insb
out
pop
pop
aas
add
fxtract
notl
lret
and
pop
outsl
xor
sub
loopne
bound
jno
cmpsl
fidivrs
jbe
aas
stos
push
jns
daa
sarl
sub
mov
cmp
aaa
stc
cmp
xor
adc
push
aam
ret
bound
mov
fadd
fisttps
and
jle
sbb
fiaddl
ljmp
mov
ja
outsl
lds
repnz
out
xchg
stos
in
lock
mov
jg
cmp
hlt
mov
daa
sahf
leave
lret
xor
mov
loope
mov
mov
mov
test
scas
jle
testl
mov
xor
and
sub
cmp
imul
xor
adc
test
cmp
push
leave
repnz
pop
xchg
push
inc
mov
push
mov
pop
push
lock
inc
rcrl
pushf
push
call
int
or
mov
add
sbb
enter
add
xchg
out
sub
cmp
add
les
adc
pop
mov
insl
movsl
jmp
iret
in
shlb
mov
jmp
cli
xlat
jb
mov
daa
imul
cmpsb
pop
aas
pop
fstl
cmp
es
adc
std
loopne
push
in
add
into
xlat
mov
sub
imul
mov
aaa
lahf
outsb
dec
mov
jbe
xor
int3
cmpsl
adc
loope
add
dec
pushf
fisttpll
hlt
insb
mov
sub
inc
int
stc
or
addr16
jmp
arpl
lods
push
pop
fs
sub
mov
push
pusha
mov
cmpsb
xchg
filds
xor
add
test
pop
pop
mov
push
notb
ljmp
xor
xchg
adc
in
incb
dec
pop
or
std
ret
out
sub
pop
add
lahf
mov
mov
test
pop
sbb
ds
shlb
cmp
fisubrl
call
shlb
call
cmc
mov
cltd
sbb
repnz
call
or
sub
scas
lret
sub
jns
mov
mov
inc
cmp
lods
mov
mov
push
and
in
push
adc
dec
in
push
and
mov
cmp
clc
jne
in
rcrl
decb
mov
mov
add
mov
push
push
das
stos
push
jbe
out
popf
push
inc
imul
inc
mov
jle
repnz
lahf
mov
jmp
adc
iret
mov
repnz
mov
mov
imul
dec
pop
mov
call
out
inc
xor
mov
scas
push
clc
cmp
test
ja
hlt
rcll
lret
add
scas
dec
jns
pop
jns
clc
jno
hlt
iret
and
shlb
scas
dec
xor
imul
cmp
mov
or
clc
stos
xchg
jnp
push
lcall
mov
dec
xchg
aaa
jl
mov
popaw
mov
push
push
inc
pop
add
ja
pop
cltd
out
fs
xchg
out
xor
xchg
cmc
cltd
jmp
xor
popa
out
ds
inc
insb
les
das
mov
fwait
mov
testl
jb
mov
fdivrp
fs
add
jp
mov
push
in
or
stc
add
sbb
lea
lea
int
out
adc
out
in
out
inc
adc
cltd
mov
mov
cmp
jle
adc
stos
jecxz
ss
jge
jg
sbb
ror
lea
inc
xor
dec
ret
push
fsts
or
dec
repnz
sub
in
push
sub
push
mov
pop
sbb
arpl
gs
inc
lret
sbb
dec
and
mov
xchg
cmp
nop
push
jge
cmp
mov
aad
cltd
lods
inc
rolb
cmp
daa
into
push
sti
or
notl
fbstp
mov
sahf
out
lods
sub
sub
mov
sub
rclb
sbb
cmp
mov
mov
daa
lahf
jae
inc
adc
inc
add
push
stos
rcrb
aad
add
and
je
adc
pop
es
sbb
sahf
mov
cmp
out
xchg
daa
into
jae
ds
lock
gs
add
push
movb
stos
xor
push
mov
push
rcrb
subl
jmp
xchg
lret
xchg
test
push
mov
stos
aas
addr16
mov
inc
inc
fstl
mov
pusha
fsubs
je
sti
ds
aaa
sbb
push
xor
mov
ds
jae
mov
sub
and
push
xchg
rolb
mov
popf
jge
and
rorb
sub
pushf
jnp
fwait
in
adc
stos
inc
mov
ja
test
stos
cmc
sti
jge
cmp
mov
pop
xlat
push
ja
das
arpl
jb
je
adc
gs
gs
arpl
xchg
push
fistps
and
lods
call
push
mov
shll
cmp
or
cmp
les
mov
mov
lret
sarb
jecxz
out
popf
adc
pop
test
dec
pop
adc
sub
in
popa
inc
mov
cmp
xchg
repnz
push
sbb
push
add
js
sti
out
sub
xlat
popf
push
int3
repz
pop
push
sahf
jae
adcb
pop
cmp
fwait
sbb
std
push
es
and
mov
cmp
xchg
fidivl
push
sub
enter
out
icebp
ja
sbb
hlt
sti
or
mov
push
ror
xor
xchg
aaa
fsubrs
sbb
mov
cmpsl
mov
push
fcomi
out
jno
iret
push
push
mov
pop
add
outsl
icebp
popa
or
or
outsl
hlt
roll
test
imulb
xor
daa
cmp
movsb
push
mov
in
outsl
mov
sub
dec
xor
xchg
mov
mov
lock
out
lcall
cwtl
mov
sbb
test
cs
pop
popw
jnp
std
cli
jnp
xchg
test
iret
xchg
mov
and
mov
testb
xchg
insb
mov
or
jne
push
xchg
dec
jb
iret
add
insl
mov
nop
and
adc
mov
mov
add
sub
inc
rclb
xor
jge
add
scas
xchg
lock
mov
pop
mov
fists
int3
mov
shrb
and
lock
loop
roll
jge
xorb
aad
mov
adc
lock
dec
mov
psubq
sbb
int
aam
popf
pop
jae
les
das
fistps
inc
sbb
push
or
cltd
stos
adc
fbstp
adc
sub
pop
and
scas
jg
adc
pop
sbbb
negl
xor
pand
jae
inc
mov
mov
xor
mov
or
test
cmpsl
shr
je
dec
mov
not
insb
test
push
dec
mov
jmp
mov
inc
sbb
cmpsb
jl
cmp
cmpsb
sub
repnz
andl
and
icebp
les
or
inc
cltd
div
and
dec
div
push
lods
lahf
and
inc
and
jno
push
xchg
push
mov
jnp
outsb
and
mov
xchg
fsubs
sub
loope
dec
jb
std
and
inc
cli
and
and
push
push
cs
js
xor
repz
repz
fdivrs
clc
or
nop
lahf
add
pop
sbb
add
icebp
sarl
inc
inc
and
sahf
xor
out
cmp
pop
mov
jns
fwait
aas
fidivrs
loope
add
insl
imul
push
and
adc
ffreep
aad
mov
es
repnz
push
jb
loopne
add
fildl
push
mov
stos
pop
pop
cmp
add
mov
fdivl
sbb
and
pushf
xchg
ret
sbbb
jge
aas
imul
mov
mov
pop
js
dec
sbb
mov
stos
imul
sub
and
adc
jb
js
into
cmp
xchg
mov
cld
dec
pop
idivl
lods
sub
xchg
sbbl
das
mov
scas
cs
loop
in
push
dec
out
pop
fisttpl
cli
sub
jb
add
cmp
jae
pop
loope
std
push
dec
xchg
mov
push
push
nop
cmp
imul
add
xchg
xlat
test
sti
addr16
in
cltd
stc
sbb
inc
ja
or
push
ret
insl
nop
sbb
sub
mov
cmp
xchg
mov
push
and
sti
aad
cmc
test
inc
stos
fcmovnb
movsb
fcompl
jg
sub
loope
sub
data16
or
das
inc
mov
pop
lds
inc
jecxz
mov
ret
cwtl
imul
test
jl
add
dec
pop
cmpsl
mov
into
stos
or
pop
push
scas
jmp
sub
xor
adc
loopne
hlt
push
add
mov
pop
lcall
xchg
lds
adc
jae
fsubrs
dec
call
cltd
inc
jp
pop
fistpl
ret
mov
inc
xchg
loop
movsb
fisttpl
aam
test
push
mov
icebp
cmp
jns
mov
mov
and
cltd
dec
aam
pop
mov
dec
lock
les
mov
lea
mov
inc
or
rcrb
insb
andb
std
cmpb
test
xchg
mov
aas
bound
mov
movsb
jne
jmp
cmp
mov
jmp
push
or
pop
aad
pushf
ja
dec
in
mov
sub
icebp
pop
rcrb
mov
stc
mov
mov
dec
mov
sbb
dec
aaa
lahf
daa
clc
mov
and
int
bswap
jl
es
mov
jle
sbb
mov
xor
mov
adc
enter
jecxz
dec
push
repnz
movsb
nop
mov
mov
xchg
mov
mov
mov
xchg
xchg
cld
and
push
movsl
mov
mov
pop
in
pop
dec
jb
repnz
pusha
aad
dec
scas
ss
out
xor
mull
dec
pop
or
and
ret
sbb
scas
jnp
cmpsl
push
ja
dec
rcll
sti
in
shrl
push
outsl
bnd
out
int3
jge
mov
movsl
jae
test
jmp
fwait
lret
mov
inc
jge
push
xor
xor
xchg
jg
pop
jns
mov
add
dec
mov
mov
xor
sub
in
testl
stos
out
mov
xorl
mov
mov
xchg
mov
sub
cs
push
fisubl
mov
adc
bound
push
dec
sub
xchg
push
fld
cmpsb
xchg
adc
dec
cmp
xor
enter
dec
shll
sbb
bound
jne
data16
cmpl
iret
cmp
or
mov
pop
and
aaa
out
in
les
addl
dec
dec
jnp
lcall
inc
pop
dec
xchg
mov
data16
push
push
es
jbe
mov
nop
xchg
aam
lods
fists
pop
xor
out
sbb
popa
jle
std
mull
inc
sbb
aam
sbb
test
lret
mov
add
xchg
outsb
adc
mov
inc
sahf
jns
cwtl
dec
sbb
es
js
mov
stc
pop
adc
jo
rcl
mov
mov
ret
sbb
cwtl
dec
rolb
jmp
int
popf
jmp
xchg
popa
adc
cmp
add
lea
lret
mov
pop
dec
dec
in
sub
ret
shlb
jb
bound
xchg
ffreep
repnz
cli
inc
and
mov
cmc
push
mov
and
loopne
push
dec
lret
sub
mov
psubusw
cltd
mov
stc
subb
aam
enter
jnp
in
aam
aad
mov
add
push
mov
jmp
ret
dec
push
adc
lret
mov
xchg
clc
push
xor
aas
dec
outsb
lock
pop
jne
mov
inc
gs
ror
mov
out
inc
mov
lahf
add
mov
jp
sahf
aaa
icebp
data16
aam
inc
push
in
mov
dec
and
mov
inc
ret
test
cmp
cli
fnstenv
scas
mov
fwait
push
xchg
or
xor
xor
test
out
mov
call
movsb
inc
arpl
pop
xchg
call
stc
mov
insl
dec
jae
sub
add
call
frstor
sub
mov
add
xchg
cli
push
xchg
imul
repnz
and
jl
sub
mov
test
lcall
lret
cmovg
adc
rcr
ja
pop
int
pop
xchg
mov
xor
dec
sbb
iret
sbb
push
inc
lcall
popf
mov
icebp
data16
adc
xor
sbb
lock
lahf
adc
fcomip
pusha
fsubl
gs
pop
fcoms
or
jg
mul
cmp
mov
push
mov
std
and
gs
xor
pop
lahf
imul
pop
rol
es
scas
dec
clc
cli
push
stos
es
mov
mov
cmp
out
lret
fldcw
loopne
cmp
jl
dec
sahf
cltd
add
aas
mov
lock
cwtl
add
jl
ss
xchg
insl
push
shl
dec
popf
loopne
jl
enter
dec
movsl
jno
inc
cmpsb
cli
in
sbb
fs
push
lahf
dec
sar
push
ffree
out
lcall
push
pop
mov
cmp
inc
mov
mov
in
mov
mov
lcall
stc
or
jnp
cld
es
imul
test
mov
ret
inc
into
mov
ret
fwait
push
cld
inc
mov
push
lds
xchg
test
fldpi
inc
xlat
or
cmp
mov
cmp
fwait
pop
xchg
mov
jg
addr16
mov
jl
stc
into
int3
jmp
mov
mov
addr16
pop
neg
test
jmp
es
shlb
or
adc
cmpsl
imul
pop
enter
cli
jecxz
mov
jbe
dec
mov
inc
int3
push
and
rcll
and
and
hlt
jbe
inc
dec
subb
sub
adc
mov
or
lods
mov
aam
fstpl
movsl
dec
movsl
fisubs
lret
xor
test
add
flds
inc
in
or
shrl
negl
add
xchg
adc
jb
nop
arpl
pop
adcl
fsubrs
imul
mov
push
shr
mov
hlt
and
mov
repnz
icebp
imul
sub
into
and
arpl
pusha
int3
mov
leave
lea
aad
inc
and
test
mov
movsl
jl
cmp
and
mov
xor
loopne
mov
mov
jno
repnz
dec
or
lods
push
mov
icebp
fucom
pop
xchg
inc
in
cmpsl
lock
push
and
jg
xchg
and
ss
in
sub
adc
adc
mov
shlb
jp
nop
rol
xor
fimull
cmpsl
mov
pop
xor
lods
add
shlb
add
loop
sti
insl
shrl
and
iret
push
xlat
sbb
add
xchg
ficomps
inc
psrld
and
jge
xlat
lds
mov
pop
mov
cs
mov
add
ds
jb
loop
pusha
sub
daa
insl
lahf
mov
cmp
dec
lret
mov
popa
mov
and
sbbl
jge
pop
jg
xchg
cmpsb
cmc
push
xchg
lods
test
push
sbb
imul
jmp
scas
jecxz
adc
and
or
pop
lock
sub
enter
mov
dec
dec
stc
jge
adc
pop
ja
dec
mov
mov
movsl
sbbl
shll
lods
cs
dec
mov
lahf
mulb
cltd
adc
sub
and
movsb
xchg
push
out
mov
divl
test
addr16
std
push
mov
lret
cmpsb
push
xor
xchg
test
lods
or
sbb
lahf
push
pop
cmp
ret
hlt
jno
mov
cmp
popa
loopne
rorb
jp
sub
testl
or
and
enter
mov
push
pop
sub
rclb
cmp
data16
rcrb
sarl
iret
out
sbb
mov
fsubp
leave
cmc
inc
xor
les
popa
pop
testb
cmp
cmp
ret
xchg
adc
ss
xor
xchg
test
lahf
jl
cmc
stos
jnp
mov
outsb
xchg
es
mov
outsl
adc
sbb
inc
add
mov
dec
lahf
dec
lret
in
shll
sbb
lret
sarl
test
lret
jg
out
cmp
push
ja
push
fldt
push
neg
pop
xchg
fsts
aaa
or
mov
jmp
fisubrs
das
ljmp
inc
dec
inc
push
fcompl
addr16
push
ds
cmp
or
decl
jnp
sbbb
pop
mov
out
scas
std
arpl
nop
pop
aaa
iret
xor
out
pop
ljmp
fs
outsl
pop
or
mov
nop
and
rorl
mov
pop
mov
cmp
inc
and
cld
push
push
in
xchg
loope
mov
adc
lret
test
push
push
pop
inc
and
sub
sub
stos
fs
add
cmp
sti
aam
cmp
cmc
xchg
les
movsl
inc
lods
aam
mov
jmp
dec
fsubrl
repnz
aad
in
adc
add
call
sbb
mov
xchg
pop
push
setg
aaa
rcrl
xchg
inc
fs
out
shlb
pop
fildll
lahf
popa
push
test
icebp
out
testl
lock
jno
pop
ret
xor
lahf
and
mov
subl
xor
jge
mov
pop
lahf
insb
pop
in
sbb
fildl
adc
aas
fsubs
adc
clc
rcrb
loope
xchg
aad
and
xor
cmp
push
ror
jecxz,pn
test
shrl
inc
clc
dec
fldl
xchg
test
imul
scas
pop
daa
adc
fists
xor
out
ds
inc
movsb
ds
xchg
jo
pop
push
lds
pop
push
and
sbb
xchg
xchg
fnstsw
scas
daa
sbb
js
lods
jge
cmp
sub
scas
sub
mov
test
ficompl
std
cmp
ja
mov
jmp
sub
mov
pop
add
scas
mov
dec
lcall
jecxz
decb
add
cltd
mov
outsb
js
insl
mov
ret
sub
pop
lock
in
arpl
and
jne
mov
mov
xor
pop
inc
arpl
and
std
sbb
cmp
sub
int
mov
lods
aam
fisubrl
inc
pop
dec
repz
pop
cmpsb
push
mov
js
mov
adc
sub
jae
nop
out
cmpsl
insb
cmp
clc
sub
cmp
mov
js
mov
fmull
addr16
imul
sahf
adc
data16
imul
andb
sbb
dec
repnz
sti
dec
and
jmp
jmp
icebp
adc
pop
xchg
and
lahf
and
add
mov
out
in
in
xor
xchg
mov
bound
es
xor
xchg
scas
icebp
stos
mov
push
xchg
pop
and
xor
dec
add
sub
and
and
add
bound
subb
das
stc
fstl
push
push
shrl
sub
xchg
xchg
sti
sbb
mov
pop
ja
cmpsl
add
daa
lret
sbb
jp
ret
mov
imul
arpl
jmp
mov
push
out
push
xor
jne
test
sbb
movsl
adc
dec
xor
mov
inc
insl
mov
dec
adc
das
scas
sbb
jne
jecxz
sbbl
mov
sub
fwait
xor
add
fistl
cwtl
mov
nop
stos
inc
cmp
repnz
mov
xor
test
data16
xlat
cmc
leave
xor
shrb
jge
cld
ja
push
popf
dec
mov
push
push
test
push
pop
cmp
rolb
ret
lds
push
mov
mov
in
cwtl
xchg
into
scas
mov
or
clc
xchg
rolb
out
pop
pop
mov
and
cld
lds
add
lea
cld
add
dec
movsl
fcmovne
xor
lahf
inc
ljmp
test
iret
pop
mov
cmp
stos
dec
orb
daa
dec
fidivrl
mov
xor
or
and
pushf
push
in
mov
xchg
mov
sahf
xchg
add
fs
std
push
rcrl
into
jecxz
inc
int3
rcll
rorl
or
sbb
sbbb
sbb
test
in
mov
pop
or
daa
clc
mov
jp
outsl
call
push
xor
repz
lds
test
out
enter
xor
jne
xchg
lods
cmp
inc
xlat
nop
je
std
mov
enter
pusha
sahf
sbb
xor
push
in
pop
add
jb
mov
xchg
mov
loopne
pop
stos
outsl
mov
aad
in
push
mov
mov
jle
ror
jge
add
repz
push
loop
incl
pop
mov
adc
sbb
adc
jbe
shrb
scas
jb
add
jae
aam
lret
ret
push
inc
pop
shll
adc
imul
adc
and
das
xchg
scas
jl
rorb
push
mov
mov
inc
pop
adc
test
loopne
jle
xor
sbb
dec
xor
arpl
es
inc
test
jo
jg
sbb
sub
jns
aaa
call
aaa
inc
inc
xor
jmp
and
dec
ss
aad
jno
or
adc
inc
adc
mov
mov
inc
lds
lods
adcb
cmp
lds
pop
pop
loopne
jne
or
jns
mov
push
adc
mov
mov
cs
sbb
xchg
pmuludq
rorb
lcall
add
rcr
jmp
outsl
pushf
je
adc
cmc
pop
sbb
cs
and
aam
movsb
fistl
loope
ljmp
mov
xlat
push
dec
jmp
inc
arpl
jp
mov
movl
sbbb
insb
lds
push
arpl
out
xor
mov
mov
and
cmpsl
jge
xchg
sub
mov
out
test
dec
mov
das
jp
fmull
cmpsb
inc
and
push
inc
dec
inc
cmpsl
sahf
and
pop
inc
stc
or
in
sub
clc
push
movsb
and
jmp
mov
jge
int3
add
icebp
jle
push
add
and
xlat
mov
mov
jle
daa
mov
fs
stc
hlt
xchg
push
jns
jle
loop
mov
dec
mov
sbb
or
bound
cmp
adcb
or
push
fwait
cmpsl
add
jb
incl
cld
inc
and
testb
pop
aaa
clc
xchg
rorb
lods
pop
sub
das
mov
cmp
jg
sbb
inc
push
js
xor
fisttpl
test
cwtl
arpl
cs
sub
push
inc
shrl
jne
ret
out
mov
pop
iret
push
xor
jp
inc
bound
inc
add
xor
xchg
xchg
negl
inc
dec
adc
xchg
repz
fwait
into
or
dec
jle
dec
insb
daa
xchg
int3
cmpsb
mov
inc
push
sub
movsl
inc
mov
jp
aas
push
xchg
inc
xchg
sbb
xor
cs
cltd
cmp
add
push
mov
jge
adc
insb
sbb
or
or
push
jl
movsl
and
mov
ret
dec
push
push
ljmp
out
iret
cld
sbb
loope
imul
das
push
cmp
inc
sarb
push
and
out
adc
imul
ljmp
mov
add
imul
xor
pop
divl
imul
or
mov
sbb
sbb
jne
out
pop
test
lahf
gs
shrl
popf
sub
jne
or
aam
adc
pop
daa
fsubl
add
out
and
repz
push
sbb
push
jb
aaa
mov
daa
adc
and
xchg
cmp
add
jns
ret
push
cli
lods
sti
pop
mov
rclb
ss
fs
pop
or
out
sarb
int3
pop
mov
mov
and
lock
cmp
cmc
stc
fildll
rcll
lea
shlb
rorb
jg
ljmp
lods
outsb
aad
outsb
adc
sub
fs
popf
das
cltd
ljmp
outsl
push
out
shll
xchg
mov
mov
cmp
dec
lea
jo
cwtl
sbb
cmp
xor
add
rolb
test
loopne
imul
pop
push
push
adc
mov
std
loop
and
sbb
jno
xor
je
enter
iret
repnz
push
divl
repnz
out
ljmp
aas
jne
in
or
pop
jg
loope
sarb
dec
xchg
adc
pop
adc
pop
push
repz
repz
mov
jae
hlt
sub
fcoms
out
mov
lods
daa
and
adc
xchg
mov
push
dec
mov
jne
idivb
dec
int
fidivrl
cmp
xorl
add
jge
cmp
or
add
fadds
mov
sub
mov
repnz
in
out
pop
push
dec
pop
cmp
xor
jge
mov
call
lcall
hlt
jne
and
pop
mov
mov
mov
cmpsl
je
loope
loope
push
mov
je
in
push
lret
or
sub
das
mov
mov
data16
pusha
push
mov
adc
stc
add
xor
or
mov
mov
je
sub
dec
in
and
jnp
fstps
adc
and
mov
dec
insb
jae
push
cld
cld
xchg
mov
add
sub
dec
cmp
ds
xchg
sbb
inc
sbb
cwtl
and
xchg
sub
nop
ds
and
aaa
inc
sarb
jb
inc
out
jge
fs
sti
movsb
push
or
loopne
add
data16
mov
add
pop
in
push
fildll
mov
arpl
pop
jnp
mov
sub
into
bound
orl
sarb
push
loop
inc
pop
das
jb
pop
jecxz
out
rorb
ljmp
fidivl
sbb
pop
xor
jecxz
xchg
loopne
out
aam
test
xor
leave
icebp
sahf
mov
sbb
adc
out
jo
xor
lods
das
fnclex
cmp
fistpl
fldl
enter
pop
mov
roll
mov
xor
xchg
push
fbld
test
mov
testw
pop
je
pop
mov
pop
add
xor
dec
mov
cmpsb
cmp
and
outsb
push
data16
ret
mov
mov
sti
ljmp
aas
lods
pop
dec
les
sbb
dec
loop
daa
pop
hlt
xchg
pop
mov
mov
and
adc
in
mov
mov
cmp
icebp
mov
in
and
xchg
xlat
jp
sbb
pop
lea
je
test
lret
adc
pop
shr
cmp
inc
cmp
out
scas
clc
push
cmp
push
fdivl
divb
inc
mov
rorb
repnz
test
push
push
out
mov
cltd
and
lock
je
or
jb
mov
test
addr16
movzwl
in
enter
sbb
sub
cmp
adc
add
sub
mov
cli
fldt
loope
xchg
pop
lea
mov
mov
cmp
jo
sbb
outsl
xor
in
int
push
fidivrl
dec
imul
fwait
cwtl
mov
insl
mov
shl
mov
or
sub
insb
push
sbb
mov
enter
out
dec
sbb
xor
addr16
cmp
xchg
or
int
jecxz
xor
fisubrl
nop
inc
loopne
mov
pop
divl
iret
jmp
jge
sub
sub
dec
pop
cmp
ja
sbb
enter
pop
in
cbtw
aam
xor
mov
jl
mov
out
and
jne
and
into
pushf
sarl
lahf
int3
adc
inc
sarl
lods
popf
mov
repnz
stos
cmpl
loop
mov
pop
enter
mov
leave
gs
in
je
xor
aad
sbb
xchg
scas
xor
dec
test
stc
jp
clc
mov
pop
adc
xchg
and
int
rol
xor
je
dec
jmp
dec
push
sbb
cmp
push
lds
jne
add
add
inc
cmc
and
inc
xor
add
sbb
es
loop
shl
push
stc
mov
pop
mov
sbb
or
jp
push
and
mov
cwtl
mov
ja
cmpsl
test
test
push
xor
aam
cmpsl
out
sub
rcrl
xor
mov
data16
lea
mov
cli
sahf
gs
sbb
arpl
cmpsb
in
rclb
dec
ljmp
push
cmp
leave
and
cmpb
daa
adc
mov
cld
cmpsb
stos
cmovno
sub
ret
push
mov
in
lret
and
sub
push
xlat
rcrb
insl
movsb
popa
in
adc
je,pt
adc
mov
dec
sub
adc
cmp
pop
stos
andb
mov
mov
clc
jb
and
dec
sbb
scas
xchg
inc
mov
addr16
sbb
in
out
mov
mov
add
fwait
repnz
insb
fcompl
popf
aad
out
add
mov
inc
add
cmpsb
int
and
sbb
aad
loope
cmpsb
inc
js
les
daa
or
sub
inc
and
lahf
pop
add
mov
xlat
lods
out
mov
movsl
fld
xchg
pusha
pop
mov
xor
pop
sbbb
into
dec
sub
mov
push
adc
outsl
leave
sbb
xchg
xchg
sub
popf
fdivp
popa
sbb
cmp
int
sub
xor
mov
sub
adc
xor
ja
sub
push
hlt
scas
and
enter
inc
dec
add
loope
icebp
push
mov
lods
jmp
jge
mov
pop
push
lahf
in
iret
cmp
mov
sub
xchg
jmp
jo
in
in
insl
push
push
lds
popa
test
mov
mov
or
xor
ljmp
cmpsb
sub
rcrl
mov
dec
call
adc
jnp
call
lret
mov
xchg
jecxz
sub
and
push
push
aad
jl
mov
sub
in
push
outsb
popf
shlb
repnz
icebp
mov
das
call
push
pop
data16
into
fistpll
mov
ret
repnz
dec
adc
jmp
pusha
xchg
adc
mov
adc
push
fistps
and
jecxz
inc
xor
add
push
xchg
pushf
and
enter
sbb
push
mov
gs
xor
push
add
loop
and
in
frstor
ficoml
mov
xchg
dec
sub
cwtl
arpl
loope
or
fstpt
arpl
aam
fcmovnbe
cmp
push
aaa
dec
or
into
leave
adc
jle
test
push
hlt
iret
ss
outsb
push
xorb
jae
clc
lea
frstor
push
mov
int3
les
dec
pop
daa
imul
mov
popa
enter
aaa
jne
iret
mov
das
pop
jle
mov
cmp
mov
dec
inc
lahf
fst
mov
test
fdivrl
jmp
mov
mov
jl
mov
xor
cmp
data16
out
popf
xor
icebp
pusha
xor
mov
int3
pusha
push
test
ret
sbb
dec
mov
xor
xchg
jne
daa
std
test
fadd
mov
inc
pop
jle
fistl
jecxz
add
mov
sub
or
xchg
add
jl
out
and
mov
dec
mov
lods
dec
test
pop
les
lcall
push
dec
insl
imul
ljmp
mov
mov
push
jb
sbb
and
push
je
mulb
adc
pop
leave
out
sub
leave
sbb
mov
movsl
and
ds
adc
icebp
mov
dec
push
add
call
inc
push
cmp
lds
mov
in
int
scas
add
fidivrs
sbb
and
lea
fdivl
cli
and
pop
incl
xchg
fidivs
popf
adc
sti
sub
mov
jo
dec
subl
scas
push
inc
xlat
mov
cmpsb
loopne
adc
pop
int
mov
jno
stos
jmp
sub
xor
ljmp
fwait
dec
add
sub
push
mov
or
jno
sti
test
mov
push
cmpsb
lcall
call
sbb
test
les
loope
xor
and
push
xchg
adc
or
xor
fmul
insl
jae
mov
xchg
or
negb
inc
ds
push
cmpsl
lret
or
sub
jno
xlat
adc
outsb
sbb
sbb
jmp
enter
pop
je
push
and
and
imul
stos
pop
push
inc
adc
test
stos
outsl
pop
jmp
or
push
scas
in
jbe
xor
mov
adc
icebp
es
fisubrl
or
add
jmp
add
cmp
fsubrl
or
or
movsl
lods
enter
add
and
cwtl
cmpsb
pop
jb
and
shl
lock
in
cmp
dec
jecxz
int
and
nop
xchg
movsl
lock
clc
mov
inc
inc
lahf
pop
inc
sbb
je
or
push
fbld
popa
dec
iret
clc
mov
popf
fnstenv
xchg
repz
pop
clc
xor
mov
xchg
pusha
cltd
jne
sub
push
xor
fldt
fdivrs
cmpsw
out
sub
pop
xchg
add
imul
fs
vcomiss
enter
mov
rol
fstl
fwait
es
out
inc
sbb
ret
or
fistl
andl
push
push
addb
dec
inc
push
call
mov
loope
sahf
mov
ret
sbb
cmc
fistpl
sbb
push
mov
dec
push
std
sub
cmc
mov
dec
or
mov
icebp
out
popa
ret
lahf
add
sub
out
sbb
stos
cltd
pop
jl
flds
aad
je
jne
jnp
dec
pop
adc
push
dec
jmp
cli
xchg
cmp
add
adc
add
inc
pop
pushf
and
adc
push
sub
cmp
lods
movsb
es
imul
cmp
mov
jns
jno
lea
bound
sarl
imull
js
loope
sbb
ret
or
push
mov
test
xlat
adc
scas
sarb
in
push
test
inc
jg
mov
mov
or
mov
adc
std
fisubrl
pop
loope
ss
in
or
lods
lock
mov
push
inc
ds
out
xchg
jge
test
add
fiadds
push
fidivrl
push
ret
scas
jp
mov
adc
ret
notl
cmovge
outsl
int
out
adc
xor
lods
idivb
pop
mov
fwait
add
mov
sub
insl
add
scas
test
or
adc
and
and
cmp
mov
push
cltd
addb
and
stos
jge
cmpsb
inc
sub
inc
fisubrs
xor
incb
nop
out
movsl
xchg
and
imul
xchg
dec
aas
lea
test
call
dec
and
sahf
pop
jmp
addr16
push
or
inc
hlt
sahf
xchg
inc
xor
mov
and
fstpl
pop
mulb
shlb
dec
scas
cmp
rorb
dec
fbld
mov
mov
lret
dec
int3
xor
jecxz
jne
movsb
mov
data16
sub
push
andl
arpl
xor
push
cmc
scas
into
adc
push
icebp
mov
stc
sahf
dec
push
idivb
mov
jl
pop
in
mov
mov
sbb
cmp
rcl
cmp
inc
push
sarl
sbb
adc
les
and
js
add
fcomi
jmp
in
ss
fs
adc
mov
out
push
push
xchg
dec
enter
jle
psllq
or
cmp
jle
sbb
mov
lods
out
pop
aam
sub
fisubl
xchg
push
inc
add
out
cmp
ret
sbb
jb
and
xchg
jmp
inc
mov
lcall
pop
sarl
sbb
push
out
pop
xlat
test
sub
dec
icebp
in
lods
add
sarb
das
ljmp
popa
xor
stos
lods
jne
add
push
sti
int3
cmp
add
imul
cmp
xor
xchg
ds
in
xchg
jbe
outsb
inc
xor
dec
mov
imul
mov
pop
sti
popa
clc
jb
mov
push
ja
or
cmp
or
or
dec
jp
sbb
cmpsl
sbb
cmp
mov
mov
iret
mov
iret
or
fcoms
dec
stos
rclb
inc
clc
aas
lcall
lahf
mov
enter
rcrl
inc
mov
stos
fst
imul
out
sbb
gs
int
aas
cmpb
jae
movl
enter
xor
sbbl
and
out
out
pusha
arpl
mov
xchg
mov
inc
out
fcomps
les
cli
push
nop
popa
cwtl
shr
mov
popa
jmp
je
or
xchg
mov
pop
cmpsb
ret
adc
pop
jle
add
fsubrl
mov
jl
cwtl
pop
or
push
imul
jp
movsl
pop
add
shlb
sbb
aaa
daa
popa
addr16
jle
mov
pushw
jl
mov
or
mov
lock
push
js
cmp
movsl
sbb
xor
dec
fwait
lahf
and
insb
xor
sahf
xchg
cmp
cld
aaa
mov
xchg
inc
cmp
testb
push
imul
lret
xchg
adc
dec
dec
lret
loop
dec
aaa
adc
push
mov
jno
xchg
push
rclb
jg
pop
das
sub
jo
pop
sti
mov
dec
add
mov
outsb
out
insl
js
fsubs
add
cmp
push
jle
jne
arpl
xor
lods
fimuls
mov
stos
fs
popf
ja
inc
sahf
dec
lcall
inc
negb
gs
cwtl
sbb
or
push
imul
adc
lret
jg
out
or
pop
sarl
xchg
int
sbb
gs
push
dec
setno
ds
outsw
ret
push
arpl
mov
mov
rol
cld
inc
add
in
dec
imul
shlb
fnsave
add
lret
mov
adc
std
xor
mov
push
pop
pop
mov
cmp
and
in
test
dec
jno
jns
fsts
outsl
and
jp
icebp
push
xchg
or
mov
pop
cmp
shll
jl
addr16
lahf
loopne
xchg
adc
pop
iret
in
inc
jno
dec
xchg
push
clc
jg
ret
xchg
inc
into
stc
fsubrs
xchg
cmp
adc
push
loope
out
loope
push
arpl
add
add
mov
mov
add
sub
roll
jbe
mov
addb
pop
imul
out
ret
fucomip
jne
fiadds
lock
mov
push
mov
mov
sub
aad
out
int3
dec
sti
gs
push
mov
popa
jecxz
fadds
sub
xlat
insl
adc
or
pop
lds
xlat
insb
loopne
jmp
pop
fcompl
enter
or
das
out
movsl
xchg
mov
cltd
cmp
push
out
push
into
sbbb
dec
xchg
add
ror
negb
bound
cld
les
jmp
lret
cmp
outsb
jge
in
packuswb
popa
mov
enter
rcr
push
pop
sbb
mov
sbb
int3
xor
faddl
sub
inc
jle
nop
push
not
je
inc
mov
jno
push
ret
loopne
idivb
jbe
std
fwait
add
ret
sarb
imul
movsb
jecxz
fs
sahf
sub
lea
add
stc
jg
pop
shl
sbb
outsl
and
sub
sub
push
jo
fwait
push
rclb
loope
pop
xchg
inc
cld
sub
mov
or
imul
clc
mov
xchg
aaa
stos
and
sbb
dec
mov
lods
xchg
int
loop
faddl
jg
lcall
lea
pusha
pop
inc
dec
lods
sub
mov
jecxz
xor
and
mov
out
sbb
mov
push
cmc
shl
and
push
into
xorl
dec
outsl
pop
and
les
or
aas
pop
std
out
addr16
sarb
push
mov
push
pushf
mov
and
pusha
inc
pop
sbbl
stos
cmp
psadbw
xchg
pushf
mov
dec
incb
add
fnstenv
scas
dec
pop
pushf
pop
or
xchg
mov
cld
loope
std
fwait
jecxz
jo
push
into
loope,pt
ljmp
mov
lea
rorl
les
push
arpl
pop
faddp
sub
notl
sub
pop
cmc
or
push
out
xor
lahf
mov
mov
pop
pop
inc
mov
mov
loopne
mov
roll
jbe
loopne
iret
repnz
addr16
aad
inc
sub
adc
scas
mov
inc
test
dec
stos
stos
dec
push
mov
xor
push
xor
and
iret
push
jns
jmp
and
nop
push
pop
xchg
sbb
jo
cmpsb
jge
inc
push
pop
push
aam
ret
cmpsb
jne
dec
jno
lock
lds
mov
rol
mov
fcomps
sub
push
out
sbb
sbb
lea
scas
inc
jne
xchg
jno
mov
std
das
mov
cmp
xchg
cmp
inc
dec
outsb
scas
shl
loopne
mov
incb
cmp
negb
pushf
inc
cld
out
adc
mov
jmp
and
cmp
xchg
in
xor
shrl
imul
inc
inc
jp
inc
cld
fisttps
sbb
adc
mov
out
mov
cmp
ja
xlat
sub
sbb
push
cmc
dec
xchg
test
fwait
gs
lea
outsl
out
or
and
cmp
xchg
addr16
in
shlb
fsubr
lock
push
outsl
fstps
gs
pop
push
push
aam
sub
add
lcall
sar
push
repnz
mov
lcall
lret
lods
cmp
mov
in
mov
test
xchg
jb
jecxz
iret
inc
sbb
pop
jecxz
sti
das
inc
xchg
cmp
mov
jns
in
inc
sub
ljmp
inc
lcall
subl
in
jo
in
testb
pop
inc
stos
mov
out
loop
into
imul
js
enter
cmp
mov
xor
sbb
cmp
inc
nop
iret
repnz
std
push
mov
pop
and
or
rol
ret
ret
cmp
jg
gs
jns
cmp
scas
dec
mov
mov
or
xchg
jo
or
adc
push
rol
imul
push
popf
cs
mov
ret
push
lods
into
rcrb
lods
fwait
pop
push
xor
jg
addr16
test
xchg
and
int3
cmpsb
scas
pop
sbb
gs
mov
loopne
loopne
mov
sbb
push
mov
out
mov
std
mov
lods
hlt
fwait
inc
arpl
and
cmp
lcall
add
lea
call
jne
movsb
sti
call
sub
shlb
adc
inc
push
popf
or
nop
mov
subl
push
xor
dec
sub
lds
outsl
out
jmp
xor
lods
stos
xchg
in
mov
jle
xchg
add
mov
dec
dec
ja
xchg
add
push
pop
or
push
les
or
int3
mov
mov
mov
mov
jae
xchg
sbb
dec
iret
xchg
es
outsl
rcll
divb
scas
cld
sarb
pop
out
inc
cmp
int
push
xor
and
and
pop
lcall
inc
je
push
sahf
inc
push
xchg
sar
shlb
les
adc
adc
pop
rolb
jge
pusha
pop
hlt
pop
icebp
jecxz
in
shlb
xor
pusha
add
pop
fstps
push
nop
dec
pop
and
xchg
xchg
or
xchg
call
push
repz
push
cmp
test
sti
int
push
popa
xor
cmp
aaa
sbb
inc
xchg
jbe
push
xchg
jg
mov
sbb
xor
into
mov
mov
add
scas
push
xchg
sahf
roll
adc
insb
pusha
jno
es
jp
xchg
pop
add
sub
mov
in
mov
add
push
mov
ljmp
arpl
sbbb
in
inc
inc
std
lds
jns
cmp
xchg
and
dec
lret
cmp
or
mov
xor
insl
cmpsb
xchg
sbb
jnp
xchg
repz
fstps
int3
sbb
xchg
lret
sbb
mov
cmp
lcall
sbb
jo
or
mul
loopne
or
sti
clc
or
sbb
xor
mov
out
test
push
or
dec
dec
imul
mov
insl
inc
loopne
pop
test
jp
pop
inc
sbb
fsubrs
sbb
or
sbb
mov
xchg
xchg
insl
fidivrl
fisttps
pop
lcall
aad
mov
loop
ja
push
lahf
jno
outsb
or
outsl
inc
mov
sbbl
adc
jle
in
push
in
lock
or
cmpsl
lea
add
aad
inc
data16
test
jle
pop
add
jne
cltd
xor
pop
ret
cli
in
inc
push
andl
in
mov
enter
sub
fs
mov
xchg
sub
cli
fadd
inc
loope
clc
adc
mov
xor
mov
inc
cmp
addr16
dec
jnp
xor
or
sti
jne
lods
mov
imul
pushf
outsl
fcompl
outsl
stc
pop
xlat
xchg
cmp
pop
mov
aas
js
xor
arpl
sarb
cld
out
cmp
lret
pop
inc
inc
pop
sub
into
mov
lods
loop
sub
sahf
pop
sub
cmp
les
into
mov
jns
and
scas
jo
icebp
lret
jns
mov
test
dec
adcl
mov
xchg
jecxz
pushf
push
shl
lret
nop
jge
and
pop
push
shr
je
cmp
fs
cli
pop
or
pop
mov
jecxz
mov
std
add
rcll
sti
test
xor
sub
data16
cmp
loope
add
xchg
pop
dec
xchg
sub
mov
xchg
pop
add
or
cltd
jbe
mov
arpl
aas
mov
clc
sbb
push
mov
movsb
and
dec
xor
into
jecxz
mov
mov
sbb
jg
xor
jo
mov
pop
cmp
xor
or
out
dec
cmovp
mov
cmp
lods
aas
imul
int3
inc
call
or
outsb
inc
std
lods
movsb
mov
push
les
ret
jb
push
ror
mov
movaps
xor
mov
push
rcr
in
test
jbe
std
sbb
jg
adc
mov
jge
xchg
stc
sbb
jmp
test
fidivl
add
cmpsb
push
xchg
ljmp
sub
mov
adc
stc
enter
mov
in
jne
rcrb
inc
inc
fmull
lock
int
sbb
ret
push
fistps
nop
mov
sbb
inc
mov
sbb
mov
rorb
jmp
pop
int
hlt
push
test
filds
push
push
pop
jo
lods
test
xchg
jae
les
sbb
xlat
mulb
int
mov
inc
xor
and
and
stos
jb
cmp
lahf
dec
cmpsb
cmc
pop
xchg
mov
lcall
test
xchg
adc
lcall
aam
es
inc
vcvttss2si
push
lret
mov
mov
pop
sbb
sbb
pusha
dec
lock
mov
sti
sbb
dec
push
inc
decl
add
cmp
inc
icebp
mov
shrb
adc
sbb
xor
stc
xorl
adc
push
mov
int
je
xchg
xchg
xchg
outsb
cmpsb
adc
test
stc
sahf
loope
mov
xchg
push
dec
fstps
sub
sbb
adc
mov
jo
pop
mov
push
push
gs
cmp
mov
push
jl
jge
inc
lcall
ljmp
mov
lea
nop
nop
dec
stos
aaa
sub
sbb
clts
sub
cmpsl
or
xchg
call
aas
push
pop
in
push
out
push
mov
sub
jns
sbb
sub
jmp
jp
sbb
inc
jno
inc
ljmp
adc
mov
dec
aaa
fs
inc
push
jle
sub
push
je
js
push
inc
js
fistpll
es
jl
jecxz
push
les
xchg
orb
mov
xor
push
xor
mov
sbb
add
test
pop
repnz
adc
cmp
inc
xchg
les
mov
xor
movsl
pop
dec
dec
sbb
mov
incl
imul
ret
pop
out
movsb
cmp
or
lret
cmp
sahf
add
add
rcr
incb
shl
inc
daa
pop
or
popa
push
pop
mov
shll
dec
jge
outsl
inc
cmp
inc
xchg
lods
jno
movsb
jae
sarl
popf
lea
adc
dec
cs
das
dec
xchg
sarl
ret
sar
or
xor
dec
jp
xlat
xchg
cli
cmpsb
repnz
sbb
inc
ljmp
pop
inc
fildll
push
lock
fldl
mov
test
lock
cs
push
out
cltd
movsl
popf
xchg
rcrl
push
dec
xchg
and
sbb
es
popa
loopne
out
test
mov
jg
mov
dec
mov
jecxz
mov
lret
and
inc
imul
pop
push
sahf
jl
and
shlb
inc
push
jle
shll
roll
lcall
in
sti
cmp
rcrl
jns
push
push
repz
movsb
add
loope
iret
rorl
sub
or
mov
add
jle
insb
ror
mov
mov
sbb
flds
mov
ljmp
sahf
push
arpl
fnstsw
test
cltd
jnp
and
arpl
dec
insb
in
and
fmull
sub
cld
jb
and
popf
mov
pop
leave
add
inc
pop
or
mov
outsb
cmpsl
inc
lods
fisttpll
popf
fnsave
jl
orl
ljmp
fdecstp
inc
sbb
leave
xchg
ret
xchg
movsl
aad
add
popf
adc
inc
lea
push
push
ret
cmp
add
in
push
loopne
or
scas
sub
inc
push
cmp
mov
jb
pusha
cltd
jbe
rcrb
push
dec
jae
scas
hlt
pusha
mov
mov
jne
xchg
cmp
xchg
loope
pop
sub
ds
xor
push
pop
iret
cmpsl
jbe
dec
movsl
sbbl
pusha
arpl
ja
sub
popa
stos
imul
repnz
xchg
test
xchg
xor
and
ficoms
pusha
jne
fbld
pop
jl
cmp
ret
sub
andl
adc
sub
sub
pop
jne
out
sbb
xchg
lods
push
inc
aad
lods
jae
adc
rcrb
out
inc
dec
sub
in
xchg
cmp
fadd
lret
mov
lods
add
sub
orl
mov
imul
dec
mov
idiv
sbb
test
fcoms
outsl
lods
inc
push
pusha
dec
mov
stos
jl
mov
xor
and
incl
sub
incl
jne
dec
mov
fldt
push
push
xchg
cmc
shrb
mov
sbbb
movsb
fbstp
mov
lahf
cmp
or
mov
sbb
int
aaa
js
in
xchg
push
xor
xchg
lea
xlat
pop
mov
mov
test
sbb
fstl
mov
bound
stos
and
das
mov
pusha
jg
outsl
jno
mov
clc
icebp
fisubl
insl
imul
cs
xorl
mov
sbb
stc
pop
imul
stos
or
int
jb
fdivl
pop
lahf
push
notl
std
xchg
out
xor
pop
push
mov
fisubs
sub
outsb
inc
sub
sbb
mov
test
xchg
push
jl
shrb
add
push
cmc
mov
lret
cmp
lcall
repnz
add
sub
mov
mov
add
lahf
stos
out
sub
add
insb
pop
pop
sbb
imul
adc
and
mov
lcall
inc
lock
inc
sub
push
movsb
adcb
in
sbb
rclb
scas
adc
jp
mov
rorl
shrb
bound
jge
dec
fisttps
fadd
sahf
cmp
iret
insb
mov
sbb
test
mov
push
ss
push
lods
cmp
xchg
out
std
scas
adc
mov
and
inc
jp
mov
lret
into
jmp
mov
test
std
and
pop
jo
popf
sbb
pusha
movsl
add
jp
xor
mov
in
gs
clc
scas
jg
in
stos
js
jle
mov
outsl
jns
repz
push
jmp
mov
mov
and
scas
dec
mov
inc
push
or
fnsave
icebp
mov
cwtl
loope
cmp
pop
cmp
test
outsl
adc
test
ss
mov
mov
cmp
xchg
popa
inc
add
in
pushw
lds
inc
aas
mov
dec
sub
mov
cmp
stc
push
rcll
and
addr16
xor
inc
fldenv
insl
jg
mov
sbb
push
movsb
xor
gs
dec
clc
sbb
pop
xchg
jge
sub
gs
incl
in
and
xchg
in
lods
cs
pushf
mov
add
fidivl
mov
dec
rolb
lahf
jns
lea
fst
fiaddl
mov
and
jmp
xor
inc
scas
movsl
int3
imul
sub
dec
xor
xchg
je
roll
lods
leave
clc
mov
gs
jmp
cld
rorl
push
push
inc
push
push
lds
lods
pop
pop
and
icebp
jno
aam
push
push
mov
mov
pop
jge
lea
stos
incl
fdiv
push
dec
sub
outsl
shrb
rcr
outsl
push
insb
and
mov
dec
xchg
clc
or
dec
cmp
jg
mov
adc
inc
xor
inc
rcrl
mov
adc
shlb
jl
push
push
insl
xchg
movsl
push
test
or
mov
cmp
insl
rolb
add
or
mov
lea
into
cmp
imul
sarl
jle
adc
lcall
cmp
mov
inc
xor
out
sub
jg
lret
push
ficoml
stos
and
mov
lock
mov
dec
inc
outsb
fwait
dec
dec
fidivl
lcall
xor
mov
sub
insb
mov
xchg
repnz
push
inc
not
pop
mov
mov
dec
aam
in
inc
jg
xor
sub
mov
insb
fucomp
mov
aam
dec
cmp
imul
mov
cmp
repnz
lret
and
adc
in
imul
cmp
adc
jbe
add
jecxz
leave
lods
sub
jmp
cltd
mov
lahf
mov
fcomps
dec
sysenter
pushf
mov
dec
jbe
ret
test
iret
sub
popa
dec
js
dec
out
out
jae
call
inc
inc
bound
movsl
mov
dec
testb
xor
fs
sub
xor
cmp
sub
lock
xchg
sub
jo
in
or
inc
push
and
inc
push
lock
pushf
mov
addr16
xor
mov
mov
jo
jb
push
clc
ss
push
fcmove
jl
jne
ficoms
sub
dec
lods
inc
leave
das
xor
ficoms
rol
popa
mov
adc
and
ret
sar
std
sti
or
rcl
cmp
nop
add
mov
inc
and
adc
test
test
mov
stos
or
inc
inc
mov
mov
jb
sarl
fsubl
inc
leave
enter
das
sbb
leave
int
mov
jae
dec
ljmp
adc
mov
lcall
jnp
xor
das
ror
pop
or
mov
push
imul
inc
es
mov
dec
jp
inc
xchg
lock
mov
cli
xchg
inc
cwtl
ret
rol
and
stos
push
ret
mov
mov
mov
add
test
or
lret
sub
jl
pop
mov
ss
adc
pop
push
push
imul
lret
cld
jns
test
jbe
pop
or
adc
mov
dec
lds
xor
out
daa
cmpsl
xchg
mov
pushf
push
int
adc
pop
insb
cli
iret
or
and
mov
dec
jl
out
inc
sbb
xor
jo
xor
or
mov
jle
mov
mov
add
mov
push
cmpsb
insl
cmp
sti
test
push
jb
jecxz
cmpl
push
push
mov
xor
in
ljmp
jae
ret
inc
pop
jb
jb
jp
out
xchg
dec
and
aad
fcomip
and
cwtl
adc
sub
out
cmpsl
cmpb
inc
and
dec
xchg
addr16
dec
scas
es
xor
jmp
mov
scas
push
add
jne
enter
mov
inc
movsb
push
and
pop
je
xor
imul
inc
into
mov
jae
das
sub
nop
shl
popf
or
mov
es
mov
out
and
sub
xchg
pop
adcb
pop
dec
jl
dec
insl
pop
lds
dec
insl
mov
scas
cmp
outsb
mov
dec
push
call
dec
test
stos
dec
add
mov
lahf
inc
gs
inc
into
dec
call
push
jae
mov
cmpsb
pop
aas
gs
rorb
lahf
jns
nop
test
jns
cmp
stos
rorb
sbb
insb
iret
mov
call
xor
lods
and
das
jmp
ss
in
or
xchg
std
mov
stos
imul
fnsave
jg
inc
xchg
enter
hlt
and
rcrb
shll
jo
arpl
adc
pop
jle
scas
pusha
leave
dec
jae
cmp
inc
sbb
outsb
popf
std
fildll
push
repz
jnp
aas
mov
test
jecxz
enter
fs
andb
mov
add
pop
or
mov
or
clc
scas
adc
loopne
nop
mov
lret
lcall
inc
lcall
sub
pop
mov
int3
inc
mov
je
cmp
xchg
mov
dec
cmp
push
adc
jecxz
mov
fs
jbe
and
mov
jnp
adc
mov
inc
lcall
sub
into
and
mov
test
mov
subb
and
shrb
push
push
mov
enter
mov
mov
sbb
aaa
and
ljmp
dec
and
add
movsb
xor
push
mov
mov
sbb
adc
pop
cmpsb
jbe
pop
adc
flds
fadds
lods
xchg
lcall
shl
popf
xor
loopne
aam
cmc
pusha
push
out
out
xchg
cs
push
xchg
insb
fisttps
popa
popa
mov
clc
stc
mov
popf
sti
mov
xchg
rcrb
outsb
mov
add
pop
add
fmull
scas
xchg
jmp
loop
inc
mov
or
test
and
dec
jmp
fistps
dec
pop
dec
xor
pop
lds
mov
xchg
in
sahf
aam
dec
push
push
std
aaa
inc
leave
test
lds
xlat
dec
push
mov
xchg
sbb
cmpsb
fs
mov
inc
cmp
xor
xchg
movb
mov
adc
xorb
xor
fdivl
test
xchg
dec
jne
push
add
je
xlat
loopne
dec
fdivrs
ret
clc
inc
inc
jge
cmp
jb
fs
daa
mov
ds
dec
dec
sub
sbb
adc
jl
test
and
inc
mov
xchg
mov
dec
jl
mov
sub
arpl
push
fnstcw
mov
into
sbb
adc
or
xchg
in
sub
and
adc
push
cli
ja
repz
push
push
push
or
jnp
outsb
int
push
xor
jb
in
into
hlt
ret
mov
pop
mov
push
cs
jge
lcall
aam
ljmpw
rorb
mov
push
pop
jp
rolb
ret
aad
mov
or
pop
stos
aas
sub
cmp
dec
dec
xor
adc
imul
mov
dec
les
xchg
cmp
adc
outsl
push
sbb
scas
or
add
aad
movsb
addr16
or
add
aam
insl
or
js
leave
pop
lods
and
int
das
mov
or
jne
sbb
pusha
bound
xlat
ljmp
cld
push
gs
les
cld
bound
ret
into
mov
xchg
in
ljmp
or
or
push
jg
push
xchg
push
mov
inc
or
bswap
out
pop
inc
inc
xor
dec
inc
test
push
lret
xchg
aaa
test
xchg
loope
inc
jnp
int
inc
orl
push
fstl
mov
jb
fxch
stos
aad
mov
pop
out
xchg
mov
and
ret
rclb
sbb
sbb
bound
mov
fcomps
xorl
loope
cwtl
movsb
pop
pusha
mov
xchg
jno
icebp
mov
sbb
rol
xchg
mov
bound
fldt
scas
test
sti
dec
mov
adc
jo
pop
mov
enter
out
push
xor
or
arpl
cs
mov
xor
insb
sub
loop
test
jecxz
sub
loope
xor
push
aam
int
mov
jbe
dec
sbb
inc
or
lahf
test
mov
dec
cmp
sub
addr16
jne
jg
cld
or
rcrb
in
adcb
push
dec
ss
mov
test
sbb
sbb
in
push
pop
push
and
jno
cmp
mov
mov
or
xchg
arpl
cmp
ja
xchg
int3
jecxz
dec
or
pop
xor
mov
and
mov
push
iret
and
jb
sub
cli
pop
movb
mov
ret
in
add
aas
aas
scas
hlt
pushf
movb
lret
sub
ds
xchg
jbe
cmp
sets
cmp
je
js
mov
and
orb
ds
imul
lds
mov
mov
out
jle
pop
scas
or
inc
ret
push
out
rsm
xchg
into
insb
sarb
mov
mov
popf
xor
mov
xor
cmp
cs
push
mul
pop
test
cld
hlt
xchg
mov
mov
push
enter
mov
add
xchg
enter
inc
mov
inc
ret
jne
out
ret
mov
outsl
stos
xchg
ljmp
sbb
mov
and
jmp
mov
bound
das
jecxz
cwtl
in
dec
adc
dec
ja
sub
insl
popf
cwtl
das
mov
push
scas
xlat
lret
aaa
sbb
sub
sbb
outsb
xlat
out
lods
ret
mov
ret
pop
mov
shlb
negl
xchg
inc
fsts
adc
pushf
mov
insl
xchg
sub
pop
leave
fucomp
push
xchg
mov
cmpsb
or
lea
lret
push
cwtl
push
sbb
adc
stos
sbb
push
mov
dec
int
xchg
cmpsl
pop
das
pop
dec
add
ljmp
push
push
stos
inc
push
cwtl
out
lahf
test
outsl
lcall
xor
std
pop
scas
popf
bound
xor
mov
notl
leave
sbb
xlat
or
pop
xlat
repnz
adc
movsl
ret
cwtl
cmpsl
inc
dec
fnstcw
xchg
aad
das
aad
push
xchg
test
push
add
aam
out
arpl
lcall
jb
test
daa
jbe
mov
das
mov
xchg
gs
leave
adc
pop
push
es
je
sbb
mov
push
pop
pop
or
xlat
inc
mov
and
dec
xchg
je
ja
aas
sti
or
mov
adc
gs
in
mov
jbe
lret
and
mov
or
and
mov
and
fwait
int3
xchg
aas
mov
popa
lret
lcall
insb
aad
enter
dec
pop
scas
jno
in
scas
push
ljmp
loope
fidivrs
pop
jl
inc
outsb
mov
dec
and
sbb
sub
pop
je
push
dec
xlat
mov
jle
cs
negl
movsl
lods
and
cmpl
sahf
test
push
push
popl
lods
push
int3
hlt
mov
mov
fsub
jb
jmp
sbb
nop
add
sbb
pop
into
xor
cmpsb
sarl
std
aaa
pop
and
mov
ret
xchg
jge
aaa
call
pop
es
addr16
mov
dec
add
xor
jbe
push
pushl
and
dec
xor
mov
pop
add
xchg
lahf
popl
leave
sbb
mov
cs
shrl
mov
repnz
mov
test
xor
inc
rcl
inc
ss
repz
pop
fadds
loopne
cmp
imul
xchg
pusha
adc
cld
in
inc
rclb
inc
jecxz
sub
mov
push
aad
push
and
add
jbe
aam
aaa
mov
test
movsl
or
mov
or
test
inc
or
lahf
mov
loopne
repz
stos
inc
jns
outsl
mov
int3
jnp
cltd
jb
out
add
ret
popf
dec
xchg
mov
jb
xor
ret
test
loopne
mov
negb
push
nop
lods
pop
add
fcmovbe
and
test
sbb
push
push
dec
repz
loop
add
lods
repnz
push
je
lds
popa
enter
ljmp
dec
or
fcmovu
cmp
inc
enter
popa
subb
enter
scas
cli
or
xor
jne
sbb
xor
or
cmp
icebp
and
lcall
cltd
test
dec
in
inc
hlt
clc
je
xchg
fildll
adc
dec
pop
pusha
pop
inc
add
aaa
cld
mov
rcrb
lods
popf
sbb
imul
jmp
cmp
mov
lret
out
cvttps2pi
jbe
out
std
jl
sbb
dec
in
out
inc
add
popa
fisubs
in
mov
scas
xchg
ret
loopne
movl
movsl
adc
pop
les
mov
imul
mov
push
repnz
int
or
lcall
icebp
xor
packssdw
fwait
sbb
add
mov
not
ljmp
popa
xchg
xor
lahf
scas
out
jl
ret
aad
mov
sbb
mov
jge
mov
push
aam
pushf
mov
add
sub
pop
jno
mov
jle
mov
push
xor
push
mov
outsb
rclb
sbb
mov
jmp
inc
inc
adc
sbbl
mov
jl
into
dec
fucomi
pushf
pop
inc
pop
pusha
lret
jne
add
add
mov
test
hlt
lods
lret
jle
cmp
ror
lods
call
or
icebp
xchg
push
call
addr16
dec
push
das
rorl
xor
movsb
or
insl
mov
xor
jle
xor
add
dec
add
jnp
sub
pop
push
adc
imul
aam
filds
xchg
std
mov
mov
mov
outsl
or
mov
and
mov
mov
adc
push
xchg
loop
and
cs
int3
fwait
mov
sub
cld
adc
xchg
pop
mov
fsubs
sbb
pushf
clc
mov
call
push
in
xchg
shll
jg
cmp
inc
xor
lods
lahf
je
xchg
mov
add
mov
clc
int3
test
adc
arpl
inc
mov
dec
cmp
cld
bound
mov
sbb
jb
rcr
mov
pop
push
push
es
imul
ret
mov
inc
inc
jl
inc
or
es
jle
div
push
and
cld
popf
push
and
jg
jle
and
repz
and
mov
pop
pop
cmc
pop
dec
test
fs
push
and
pop
cli
mov
bound
decl
idivb
lahf
out
xlat
push
imulb
pop
push
in
or
inc
adc
in
pop
or
fnsave
std
add
fmuls
jmp
inc
mov
ljmp
scas
fadds
jb
mov
lret
xchg
sbb
jae
cltd
mov
lahf
pop
hlt
rorb
jns
rorl
mov
ljmp
cmp
push
sbb
out
add
jg
and
push
inc
stc
mov
and
cmp
jmp
sbb
insl
aas
jp
jae
test
insl
jg
xor
js
adc
and
jno
outsb
insl
repnz
ja
mov
jge
lahf
in
orl
cmc
imul
adc
jmp
pop
sub
pop
lea
sbb
xchg
pop
jne
pop
mov
ljmp
insb
lods
gs
jle
imul
in
and
add
inc
adc
xchg
inc
jmp
stos
sub
sbb
arpl
mov
pop
jne
jmp
push
sub
add
sub
sub
dec
mov
mov
fwait
test
into
movl
sbb
jb
in
xchg
nop
xchg
jo
push
mov
lahf
gs
stos
fnstcw
fcompl
pop
out
in
ret
jnp
fadds
mov
test
imul
in
and
shrb
or
adc
out
push
lret
or
bt
aam
std
imul
mov
popf
adc
xor
aad
mov
dec
and
shlb
test
incb
insl
bound
enter
pop
les
mov
pusha
sub
out
aaa
mov
or
xchg
lret
fs
jae
div
in
mov
out
test
mov
cmp
inc
movl
dec
add
xchg
ret
inc
popf
repz
fimull
pusha
mov
ljmp
das
adc
adc
out
inc
fiadds
std
lock
rcr
or
sub
ljmp
sbb
shlb
popl
bnd
push
mov
data16
imul
out
sbb
mov
push
dec
dec
jbe
pop
pushf
lods
popa
adc
pop
cli
jbe
aad
ds
push
or
mov
mov
mov
fs
pop
out
or
jg
inc
sbbl
movsb
loopne
daa
scas
inc
out
loop
sub
ret
repnz
sbb
mov
mov
or
pop
xchg
iret
sub
adc
aad
sbbl
lahf
leave
inc
test
cmpsl
ret
sub
adc
push
pop
fsubl
nop
lret
out
je
push
mov
adc
js
enter
test
and
enter
lds
xor
faddp
and
or
fmuls
push
pop
mov
int
add
pop
clc
sahf
dec
icebp
lods
push
sti
pop
mov
enter
in
mov
addl
fwait
xchg
jg
xchg
push
inc
xor
sub
inc
xor
arpl
loop
das
mov
js
test
cmp
add
cmp
ds
je
lret
stos
push
pop
inc
mov
repnz
cmp
jecxz
call
ss
mov
or
xchg
sbb
cwtl
cltd
dec
shl
rol
movaps
inc
pushf
xchg
in
cmp
aad
leave
lock
or
jno
in
dec
inc
mov
fdivr
sub
xor
pop
sbb
sub
mov
test
gs
push
loopne
hlt
sub
push
orl
xor
jge
mov
daa
jb
clc
inc
loopne
lock
dec
ljmp
test
cmp
daa
jno
inc
xor
xchg
xlat
pop
bound
sub
mov
sub
mov
lahf
add
jo
scas
push
adc
xorl
xchg
xor
outsl
imul
nop
inc
xor
jno
mov
adc
es
test
shrl
mov
add
jbe
sbb
aaa
into
out
cmp
pop
xor
or
mov
mov
popf
in
cmp
test
in
adc
out
push
add
call
ret
ljmp
or
or
jae
in
test
in
jg
xchg
int3
or
lods
dec
test
pop
cmp
xchg
add
sbb
or
or
test
int
aaa
sub
movsb
push
or
lret
add
loope
les
rorb
sub
cmc
sbb
cmp
adc
lods
in
lods
push
lret
rclb
mov
sbb
push
inc
in
arpl
cmp
inc
imul
cltd
mov
data16
push
cmpsb
iret
rorl
leave
cs
mov
sbb
out
mov
or
sahf
xlat
aaa
push
add
addr16
sub
sub
shll
pop
jg
mov
mov
ss
or
mov
jne
mov
xchg
movsb
call
pop
push
cmp
sar
sbb
pop
arpl
xchg
outsl
xor
ljmp
fisttps
popa
pop
adc
or
cmpsb
cmp
jo
mov
test
lea
mov
sti
sahf
and
lods
mov
incl
jp
and
wbinvd
repz
scas
out
bound
pop
arpl
mov
adc
sbb
cli
xchg
mov
enterw
push
and
mov
pop
push
and
in
sarl
push
and
fs
or
mov
in
lahf
push
fsts
jb
dec
inc
ss
loopne
jno
or
enter
xchg
sub
out
sbbl
sbb
jl
mov
or
and
addb
adc
mov
sbb
mov
stos
out
add
push
out
call
fwait
mov
fisubrs
insl
popl
dec
stc
mov
scas
gs
push
lock
aad
nop
sub
push
fsubrl
adc
sub
sub
popf
xlat
cwtl
mov
xchg
movsl
xchg
or
leave
orl
stos
sub
std
jecxz
mov
outsb
loop
fisttpll
aam
cmc
xor
mov
mov
rorl
jo
cmp
mov
and
lock
std
je
fs
in
mov
xchg
xor
sub
test
clc
add
inc
aas
pusha
pop
sbb
jle
fldcw
jp
pop
aad
sbb
push
cmpsb
sti
push
push
fisubs
dec
mov
and
sbb
loop
mov
cmp
and
and
jb
mov
xor
in
or
arpl
in
xor
pop
lret
lret
iret
mov
or
ret
mov
and
popa
icebp
mov
sbbl
jmp
mov
outsl
mov
das
sbbl
pop
jp
cmp
jnp
cld
arpl
inc
pushf
repnz
ljmp
js
mov
push
jns
mov
aam
dec
pop
cwtl
and
lcall
sbb
pusha
push
or
shl
in
out
jne
inc
jmp
lods
pushf
test
scas
or
popa
shll
sub
rorb
mov
in
rorb
inc
in
aaa
inc
stc
out
lahf
xchg
fdivs
inc
iret
sti
cmpsb
or
adc
adc
push
xchg
or
insl
sbb
dec
pushf
js
dec
subb
mov
add
and
jnp
pop
push
mov
push
insl
lahf
les
sbb
mov
mov
jns
push
inc
dec
xchg
test
xchg
push
xorb
sub
adc
pop
lock
inc
sbb
int
cmpsl
cmpsb
std
pop
mov
inc
add
lahf
sub
arpl
lret
lods
orb
fwait
jno
cmp
and
pop
ds
cmp
xor
cmpb
mov
or
repnz
dec
jnp
inc
dec
pop
jp
cmp
popa
pop
dec
jmp
lock
repnz
mov
sbb
sbb
or
popa
cli
push
ljmp
ja
lret
test
sub
or
mov
adc
push
stos
aam
popa
test
fcomps
mov
int
clc
aad
insl
cmc
insb
cmp
mov
loopne
adc
int3
xchg
fdivrl
aas
jp
lods
repnz
das
cmp
cmpsb
aam
mov
mov
xchg
imull
rolb
sti
sarl
xor
jne
outsb
mov
sub
call
pop
push
sub
or
cmp
shlb
repz
movsl
xorl
sbb
sbb
jo
ss
push
aad
sub
push
out
jno
lcall
popf
repnz
dec
cli
mov
mov
and
dec
dec
xchg
jae
xchg
pushf
test
lock
test
dec
push
std
jge
in
jecxz
dec
pushf
xor
pop
mov
push
inc
cmp
add
cmp
scas
adc
fildll
mov
das
iret
adc
sbb
aaa
int
mov
inc
je
xor
xchg
adc
lret
xlat
add
cmp
sbb
adc
mov
sub
sbb
lret
std
rclb
sbb
test
xor
gs
ficoms
pop
clc
pop
inc
stc
xchg
rolb
shlb
ds
pop
sub
mov
push
scas
push
outsl
pop
fwait
lds
nop
test
cmp
rcr
out
jne
jmp
and
dec
dec
pop
enter
pop
mov
jle
cmp
cmp
mov
xchg
out
les
xchg
inc
adc
test
scas
addl
sbb
jge
int
mov
jae
push
inc
mov
jb
inc
data16
fisubl
lahf
mov
adc
cmpps
lds
add
jg
scas
xor
nop
test
repz
mov
addr16
or
les
xchg
decl
stc
pop
mov
stc
mov
test
jns
stos
and
adc
fdivs
ds
mov
lahf
out
inc
ss
push
sub
pop
jnp
ret
shrb
jnp
imul
les
jno
jecxz
pop
adc
stc
fs
fcoml
mov
sbbl
sub
xor
scas
mov
int3
notl
cmpsl
mov
xor
iret
sub
push
inc
sarb
pop
orl
sbb
mov
mov
jns
and
sahf
sbb
adc
sarl
adc
aam
popf
popa
push
outsl
push
jp
loop
adc
dec
mov
int3
pop
shll
inc
push
xchg
jnp
js
pushf
jne
add
lods
dec
jae
push
out
mov
xor
out
addl
inc
shrl
out
outsb
aas
fcoms
inc
xchg
movsb
cmc
out
add
or
lret
aas
enter
push
inc
aaa
jno
pop
xchg
test
int3
in
pop
mov
adc
jl
add
xchg
sub
arpl
dec
cmpsl
xchg
jmp
dec
jno
pop
leave
imul
icebp
cmp
inc
ret
aas
push
xchg
addl
adcb
inc
fisttps
push
lret
cmp
clc
aaa
mov
sbb
lahf
push
sub
leave
loop
xor
mov
jnp
int3
arpl
pop
ds
dec
push
test
mov
mov
cld
xchg
jne
pop
cltd
xchg
scas
xor
rcll
idivl
stos
sub
leave
loope
les
xchg
fidivrs
cmp
lds
outsb
test
and
nop
jae
xchg
dec
jl
push
add
jp
add
lret
or
sub
andw
aas
push
pushf
aam
push
or
cmp
in
shl
sub
pop
insl
out
or
int3
fldl
sbb
xchg
sbb
mov
sahf
mov
shrl
nop
or
mov
xchg
xchg
mov
test
jp
xor
inc
outsl
mov
scas
aaa
ret
mov
push
mov
shr
les
pop
mov
or
and
inc
mov
loopw
fs
hlt
and
loopne
sti
sti
mov
dec
dec
and
jecxz
xchg
jns
jl
in
xor
xchg
push
sbb
cmp
mov
push
mov
mov
cmp
mov
mov
ds
in
inc
mov
jne
movsb
dec
mov
cmpsb
aas
dec
das
cmpb
jns
and
mov
add
pop
ds
subb
add
paddusw
bound
ljmp
stos
or
jne
subl
aas
aad
inc
dec
jne
sbb
cltd
leave
fstpt
gs
xor
ljmp
jno
xor
ljmp
sub
mov
ret
ss
jb
push
stc
mov
int
pop
cmp
jmp
add
jb
pop
push
dec
and
in
mov
cmp
push
mov
das
fidivrs
pop
sbb
push
pop
sub
jno
jae
push
subl
push
sub
sbb
or
mov
push
xorl
ficompl
cwtl
add
inc
call
sbb
cmp
inc
mov
mov
adc
cmp
iret
test
push
bound
call
adc
adc
pop
xor
mov
pop
xchg
add
pop
xlat
mov
xchg
test
jbe
sub
imul
push
lret
mov
daa
shrb
push
jb
push
out
add
push
shrb
lahf
dec
mov
pop
rclb
bound
das
push
jmp
aam
movsb
bound
ficomps
fbstp
add
aad
out
scas
out
fcompl
int3
cmp
ss
frstor
jae
addr16
mov
out
add
xlat
test
inc
sarl
test
mov
nop
pusha
sti
pop
mov
in
or
mov
sbb
sbb
mov
test
int3
adc
pop
mov
xor
out
and
sbb
and
mov
imul
stc
js
push
lods
das
jmp
notb
les
lods
inc
daa
cmpsb
push
negl
cwtl
int
cld
hlt
cmp
xor
loopne
pusha
enter
dec
push
xor
aas
imul
mov
inc
loope
fmuls
call
jne
in
xor
dec
aam
xchg
and
mov
mov
mov
adc
stc
gs
cli
ds
sub
xor
in
outsb
cmp
jge
andb
adc
add
mov
jbe
adc
sarb
and
lods
aas
test
or
divl
push
aad
xchg
repnz
shlb
mov
mov
adc
sar
popa
pop
test
sub
sbb
test
push
mov
push
test
call
leave
mov
pop
push
xchg
push
mull
dec
hlt
pop
dec
iret
lahf
outsb
mov
subb
sbb
mov
sbb
push
fldt
sahf
jge
push
push
sbb
sarb
movb
cmc
outsb
cmp
iret
mov
test
iret
mov
rcr
adc
sti
test
pop
mov
pop
sbb
jne
xor
mov
loope
mov
and
cs
data16
add
jge
and
int3
sti
cltd
int
rcrl
mov
and
fs
xchg
ljmp
test
pop
sti
cmp
add
inc
sbb
insb
dec
add
push
pop
push
mov
adc
xor
out
fnsave
jle
mov
push
jne
xor
addr16
mov
subb
adc
or
adc
xor
mov
pop
mov
pop
jecxz
mov
in
dec
fdivl
loopne
stos
jb
push
mov
xlat
jmp
scas
jmp
icebp
out
cli
fistpll
shll
inc
xchg
push
mov
mov
into
xlat
mov
push
fmuls
sbb
xchg
sbb
and
jnp
mov
xor
dec
mov
push
repnz
loopne
int3
xchg
cmc
dec
fstpt
mov
gs
cmc
mov
mov
in
js
mov
and
push
cs
sti
fsubrp
xchg
pusha
outsb
pop
les
lods
jbe
aaa
and
clc
rep
popa
test
jbe
imul
aaa
testb
mov
push
pop
xchg
and
cmp
in
pop
repnz
cmp
aas
popf
loope
add
in
mov
push
xchg
stos
lods
lock
xchg
aas
stos
sub
push
std
and
sub
xor
aaa
add
fsubrl
lods
xor
test
frndint
inc
cmp
sub
je
dec
add
adc
xchg
jbe
divb
outsl
dec
xchg
dec
mov
sub
fidivs
push
fucom
jb
pop
lret
cmp
test
in
xchg
ja
rorl
imul
scas
stos
mov
and
push
mov
movsl
sahf
ret
push
lods
or
push
or
inc
jno
push
mov
out
xor
xchg
xchg
mov
imul
mov
adc
shll
inc
inc
mov
dec
add
or
aad
popf
cmc
push
xchg
stos
ret
jle
mov
into
fsubs
icebp
mov
out
fdivrs
data16
mov
inc
xor
icebp
inc
sub
es
int
fstps
bound
aaa
xchg
adc
dec
ret
and
pop
movsb
iret
add
pop
push
mov
loop
in
jmp
daa
xchg
xchg
ja
cld
sub
inc
rclb
jecxz
and
movsl
fdivrp
addr16
repz
jle
cmp
imul
dec
pop
push
and
dec
push
ljmp
mov
sahf
ja
mov
inc
push
pop
sub
int3
insb
outsb
repz
pop
cmp
subl
arpl
sbb
lods
fnstsw
xlat
lahf
xor
pop
mov
outsb
inc
jae
and
test
leave
pop
cwtl
mov
movsl
dec
mov
lss
pop
adc
fisubrl
int
add
adc
and
test
inc
push
mov
loope
jecxz
fwait
repnz
pop
push
dec
push
cmpsl
push
hlt
loop
stc
les
dec
add
inc
ret
loopne
cltd
aam
inc
sti
iret
or
xchg
or
inc
cwtl
add
push
cli
mov
mov
cmp
or
push
push
cs
insb
inc
fiaddl
loopne
xor
sub
push
ja
leave
or
lods
push
aaa
cltd
sbb
stos
fidivrl
sbb
movsb
xchg
mov
dec
cmp
and
jmp
adc
rolb
jl
mov
sbb
sahf
fidivrl
insl
adc
adc
hlt
int
int
pop
scas
push
fwait
jae
int
lds
fldl
addb
xor
sbb
roll
cmp
xor
mov
or
lahf
dec
jg
test
dec
dec
xchg
insb
and
jmp
dec
pop
inc
sahf
out
js
rol
mov
mov
stc
dec
movsl
loope
fidivrs
pop
jae
aam
fdivrs
mov
push
fcoms
scas
scas
xchg
in
and
outsb
push
cmc
push
pop
outsl
mov
xchg
mov
rcrl
inc
mov
call
and
mov
jp
mov
bound
icebp
ret
adc
ljmp
lock
mov
pop
mov
push
loopne
cmp
pop
out
mov
add
clc
dec
jmp
sbb
sbb
ret
pop
scas
inc
outsl
xchg
inc
xchg
dec
pop
mov
cmp
mov
and
out
pop
mov
bnd
mov
lahf
and
pop
push
push
rol
lret
cmp
sbb
jg
fldt
jl
adc
cmp
in
push
addr16
je
dec
sbb
and
mov
sar
pusha
fnstenv
shr
test
adc
xchg
xor
or
xchg
xchg
push
lods
add
insw
xor
jae
cmc
mov
sbb
aad
insl
mov
inc
sub
sbb
in
test
testb
jb
pop
push
add
stos
jb
and
out
call
pop
das
movsl
mov
ja
pop
push
push
jge
repnz
hlt
or
mov
lods
jecxz
aaa
add
pop
imul
cmpsl
adc
mov
fbld
jae
dec
int
aad
jg
xchg
inc
loopne
aas
pop
rorb
mov
and
faddl
adc
lods
mov
loope
clc
mov
fwait
sahf
and
inc
in
stc
sbb
and
sti
inc
mov
ja
mov
dec
mov
fdivrp
shlb
lret
xchg
add
sub
and
movsl
das
daa
mov
cmp
pop
push
cli
scas
adc
std
ds
add
cmp
sub
jecxz
dec
aaa
cmc
sbb
xor
xor
lds
cmpsb
mov
in
ja
pop
test
inc
inc
imul
pop
popf
inc
inc
jo
jns,pn
test
xor
fldt
jecxz
lret
inc
dec
push
outsl
std
sub
adc
add
add
iret
xor
mov
cld
js
repz
in
jnp
jnp
push
xor
fldl
cmp
jnp
push
cmp
pop
jp
sti
adc
pusha
xchg
cmp
mov
jg
lods
pop
add
dec
arpl
xchg
test
pop
adc
das
data16
push
dec
sbb
sub
dec
mov
mov
add
loopne
sub
lods
adc
sub
imul
mov
in
testb
push
pop
add
aaa
icebp
push
cmpl
cmp
push
sbb
cld
lahf
dec
fstpt
adc
stc
adc
into
into
jmp
jp
mov
mov
inc
pop
inc
adc
sbb
clc
push
andb
xchg
cmp
inc
jbe
jbe
enter
inc
aam
popf
popf
xor
int
test
push
or
daa
faddl
repz
std
cmovo
or
aaa
repz
xchg
iret
fisubrl
push
inc
mov
movsl
dec
test
js
dec
and
push
mov
add
leave
push
pop
push
xchg
jle
nop
test
inc
push
xor
es
mov
cmp
add
cmpsb
in
pop
cmc
push
bound
orl
sub
jno
jge
mov
jns
in
mov
mov
in
fdivr
mov
push
jg
jmp
shlb
push
fcmovnbe
adc
add
mov
ja
inc
pusha
mov
mov
push
fisubs
pop
sbb
push
orl
lock
negl
fistl
jno
mov
sahf
lcall
orl
sbb
jle
add
inc
xchg
mov
dec
test
cmp
xor
stc
push
cmp
test
jle
repnz
fldl
dec
mov
sbb
xchg
pop
cmc
cwtl
aaa
jmp
sarl
ljmp
xchg
ja
ret
push
inc
addb
jp
rorl
pusha
jb
sub
daa
mov
jae
out
and
cs
bound
add
into
outsl
cmpl
data16
cmp
mov
lods
outsb
shlb
adc
test
mov
roll
in
mov
xor
movl
test
mov
fs
jbe
lahf
movsb
xor
push
fs
pop
js
aas
orl
test
add
add
in
lcall
xlat
sbb
lock
hlt
pop
and
rorb
xchg
lcall
popf
cmp
pop
mov
scas
mov
jge
das
psllw
arpl
and
out
call
fidivrs
or
inc
inc
mov
sub
pushl
adc
imul
cmp
pushf
push
mov
mov
lret
push
inc
fadd
xchg
imul
push
insl
sahf
ltr
inc
inc
decb
xor
test
xor
sbb
ds
adc
pop
and
mov
dec
das
sub
scas
jmp
dec
jns
shll
aas
cmp
popf
push
add
add
je
mov
aad
adc
fs
lods
lcall
movsb
outsb
dec
das
aam
int
push
insb
mov
frstor
add
mov
inc
xchg
sbb
test
mov
fildll
mov
cmp
ds
js
loope
stc
lret
repz
or
lahf
cmc
mov
shrb
xchg
pusha
sbb
in
cmp
inc
hlt
stc
xor
mov
imul
mov
ret
push
sub
lods
aas
xchg
aam
cltd
outsb
dec
push
repnz
pushf
int
push
repz
in
mov
fwait
lds
mov
insb
adc
cltd
addr16
pop
pop
scas
mov
push
dec
out
sarb
rolb
sbb
inc
xor
inc
scas
movsb
mov
aaa
fcmovu
pop
sbb
adc
push
pusha
inc
cltd
push
or
incb
icebp
fiaddl
dec
and
sbb
test
and
xchg
pop
lahf
add
xor
or
sbb
addr16
dec
or
fcomip
fisubrl
imul
cs
xchg
xchg
out
jbe
mov
loope
aas
add
cli
jns
pop
popa
movsl
cli
std
dec
mov
jnp
inc
push
dec
push
xchg
repnz
push
out
jne
push
pop
je
sbb
mov
mov
jecxz
pop
pusha
int3
jb
out
push
sahf
je
xchg
pop
add
sbb
int3
xchg
pop
jno
popf
in
les
leave
ljmp
insl
repz
mov
mov
insl
or
outsb
cwtl
sbb
sbb
xor
scas
jge
and
or
test
add
insl
mov
mov
enter
in
mov
add
cmp
sbb
sbbl
or
sarl
mov
mov
jnp
ret
and
sbb
imul
fwait
out
scas
mov
and
dec
push
push
mov
inc
ss
and
pushf
leave
fnstcw
cs
cmc
cmp
aaa
dec
insb
fadd
test
pop
xor
dec
jne
jmp
pop
pop
ds
mov
jo
and
jbe
nop
adc
jo
sbb
push
cmp
test
sbb
insb
fldenv
sti
aaa
mov
in
mov
fwait
ljmp
cmp
jne
inc
jmp
push
sar
xchg
enter
adc
fnstsw
popa
jle
movsl
imul
stos
out
mov
ds
mov
adc
popf
adc
mov
jge
cmc
ja
lret
sbb
bound
mov
pxor
push
sbb
push
xor
sbb
mov
dec
fdivrl
bound
nop
sub
dec
push
cmpsl
in
xor
out
es
jp
xor
mov
xchg
inc
les
imul
outsl
xor
sbb
inc
nop
aas
xor
cmc
mov
jbe
jg
je
mov
xor
inc
pop
inc
stos
xchg
pushf
or
in
fldcw
pop
push
dec
mov
push
mov
xor
inc
and
cmpsl
push
jae
lods
sbb
mov
loop
pushf
sti
sbb
sti
ljmp
and
cmpsl
jecxz
or
sub
xchg
popa
jge
cmp
and
inc
xchg
aad
mov
jnp
mov
add
testl
flds
xor
push
in
loop
xchg
adc
mov
cli
leave
or
pop
mov
sbb
and
clc
insl
pop
pop
icebp
cmpxchg
lret
in
dec
faddl
aas
push
adc
jo
mov
dec
test
and
mov
fwait
cld
stos
mov
pushf
jecxz
sarl
cmp
pop
ss
xchg
add
pop
pusha
shll
or
jecxz
mov
aas
push
sbb
xchg
adc
sbbl
mov
enter
push
adc
mov
scas
movsl
call
push
inc
sub
cmp
mov
inc
loop
pop
adc
add
mov
add
jecxz
pop
cmc
xchg
fndisi(8087
xchg
popa
jle
or
xor
push
lret
movsl
scas
push
lcall
inc
xor
or
sahf
and
mov
xchg
cmp
shl
data16
insb
push
les
push
push
mov
xchg
inc
xchg
lods
sti
adc
xor
and
leave
jns
jb
ss
icebp
or
xchg
test
repz
imul
pop
pop
incl
add
arpl
dec
add
push
fs
aam
iret
jle
ljmp
fistps
flds
xchg
sub
inc
and
aas
mov
mov
imull
sub
jns
mov
sbb
movsl
xchg
inc
mov
mov
std
repnz
je
jae
jne
push
cmp
movsb
mov
pop
push
mov
pusha
and
mov
pop
adc
jmp
xchg
orb
or
mov
inc
adc
sbb
popf
dec
popa
imul
movsb
mov
iret
inc
sub
mov
shrl
std
lcall
ljmp
adc
ss
repnz
mov
mov
and
test
xchg
int
out
or
or
xchg
nop
ds
push
adc
push
mov
jmp
lcall
iret
inc
mov
rorl
cmpsl
dec
dec
loope
int
popf
cli
ret
stc
je
cwtl
xor
inc
push
inc
or
mov
jecxz
lods
aam
mov
mov
inc
mov
mov
sbbl
xor
mov
cmp
test
cmp
movsl
push
jae
loope
jbe
ljmp
dec
jp
ljmp
xchg
std
idivl
ja
in
pop
mov
sub
cmp
or
pushf
push
insb
jl
fs
pop
ljmp
shll
jns
in
add
pop
lods
xchg
icebp
add
mov
ret
sub
push
xchg
pushf
adc
repz
sub
loop
insb
pop
into
shlb
push
inc
mov
hlt
repnz
ret
cs
in
stc
add
mov
and
fs
or
xchg
stc
jae
pop
lds
test
mov
xor
cmpb
adc
inc
fldl
cs
cmp
pop
out
insb
aaa
jb
mov
ret
cmp
in
sarb
jecxz
ret
arpl
push
and
lahf
mov
fs
pop
xchg
push
pop
mov
aam
or
or
aad
repz
and
lahf
scas
or
cmp
ja
sbb
pop
stos
shlb
aaa
imul
mov
loopne
call
push
add
dec
push
xchg
enter
setle
stc
sub
stos
rcll
jg
std
inc
inc
notb
jmp
cmp
inc
sub
cmp
addr16
test
std
ficoms
call
xorl
stos
pop
pop
jle
or
daa
imul
xchg
cwtl
pop
lea
adc
test
and
cmp
push
add
mov
xor
mov
cmp
mov
xchg
roll
jge
mov
jg
dec
mov
pushf
and
imul
mov
lcall
rorb
inc
jne
xchg
pop
jb
out
lock
rcl
mov
sub
mov
orl
mov
test
shl
cmpsl
inc
push
sbbl
bndstx
ret
sub
sbb
mov
popa
xor
out
mov
insl
jne
repz
mov
movsb
jno
mov
aas
xchg
out
xchg
cmpsl
mov
mov
mov
adc
dec
lods
cld
filds
cmp
mov
fwait
adc
mov
sub
and
or
mov
jnp
in
negb
mov
ficoms
inc
fisubl
fists
adc
sub
into
jo
rorl
call
pop
call
inc
fiaddl
sbb
mov
imulb
mov
mov
sti
xor
and
clc
push
inc
cmp
xchg
outsl
cmp
xlat
lret
test
xchg
xor
push
xchg
sbb
cs
js
std
ds
xchg
mov
enter
js
movsl
shll
xor
lcall
push
push
in
inc
out
repz
fs
jae
loop
xlat
popa
loope
push
mov
jne
adc
cmp
cmp
pop
inc
and
add
ja
push
mov
xchg
js
imul
pusha
sbb
xlat
inc
xor
sbb
jp
or
data16
and
xchg
pop
mov
adc
or
dec
loope
pushf
test
cmp
adcb
xchg
enter
jmp
dec
mov
mov
insb
jle
in
pop
arpl
add
lret
sbbb
jbe
adc
out
push
push
push
lret
ror
std
mov
mov
divb
ficompl
orb
adc
mov
gs
sub
jle
bound
cmp
pop
fdivl
mov
dec
sbb
jns
xchg
test
mov
xchg
fs
jmp
xchg
xchg
xchg
cmp
and
xchg
jns
add
lret
ljmp
popf
movsb
loope
fwait
cmp
add
popf
aas
dec
jns
mov
jmp
mov
and
sub
mov
shll
inc
fadds
std
and
outsl
dec
test
sbb
testb
dec
in
sub
dec
xor
pop
xchg
xchg
mov
mov
push
mov
pusha
js
fbstp
mov
js
fiaddl
jb
pop
mov
or
push
cli
loopne
repnz
stc
fisttps
lods
bound
mov
jmp
push
mov
xchg
cld
inc
dec
sbb
adc
mov
out
sub
sti
fsubl
clc
aas
rcrl
mov
jns
adc
jnp
addr16
xchg
mov
lea
cmp
or
push
insl
lret
jge
pop
or
idivb
mov
pop
dec
ja
fs
roll
fsubs
fldcw
daa
sbbb
mov
push
sub
fstps
pushf
mov
jecxz
inc
mov
adc
sbb
or
out
dec
fldl
sahf
cltd
scas
xor
aaa
mov
sti
mov
fsubl
jp
fsubs
push
xor
sbb
nop
mov
add
shlb
mov
orl
lods
and
shlb
jl
lret
sub
mov
dec
mov
fisttpll
shl
insb
and
xor
ljmp
add
jl
and
mov
sarb
push
and
lds
pop
loopne
sbb
dec
jnp
les
adc
and
repz
mov
or
lcall
les
addr16
cmp
and
xchg
shll
push
jb
mov
jp
inc
dec
fdivl
add
add
js
cmc
pop
and
xor
push
sub
xchg
int
mov
sub
push
push
lods
dec
imul
imul
sub
push
ja
les
xor
dec
cmpsb
popa
inc
mov
imul
scas
out
imul
mov
popf
sar
mov
es
cmp
pop
imul
dec
loopne
insl
adc
pop
rcr
sub
sbb
cltd
add
in
xchg
nop
jmp
mov
test
fldcw
sti
jno
mov
inc
cli
xchg
movsl
xor
add
cmp
jo
std
pop
and
push
push
idivb
fidivs
cmp
dec
xor
pop
pop
dec
test
fiaddl
int
mov
push
pop
hlt
lock
mov
std
negl
add
inc
push
je
in
je
mov
inc
push
repnz
test
push
sbb
cmp
sub
sbb
sti
shll
in
lret
push
add
or
sbb
push
push
xor
fmull
jb
test
push
repnz
out
cmpsb
mov
inc
orl
imul
sub
dec
ret
cmp
imul
lods
cmp
inc
jmp
dec
add
xchg
inc
in
cmp
sub
popf
int3
adc
ficoms
or
mov
lea
leave
add
stc
pusha
gs
push
leave
push
sbb
mov
push
mov
xor
adc
fnstenv
fsubl
lods
dec
loope
cmpl
aas
cmp
ret
inc
rclb
jne
jge
mov
pop
pop
lcall
mov
add
lock
cmp
loop
andb
jg
push
push
mov
fisttps
bnd
mov
push
inc
fsubs
dec
inc
ret
cld
cs
pop
jecxz
xor
sar
xlat
mov
mov
imul
xchg
sub
les
test
jb
fisubrs
mov
mov
jecxz
jns
xchg
js
xchg
arpl
pop
xchg
mov
add
push
das
faddl
or
or
fsubr
test
outsb
scas
out
adc
stos
xor
stos
fistpll
outsl
movsl
inc
lods
out
lret
movsb
adcb
xchg
mov
aam
mov
insb
inc
stc
sbb
mov
jne
std
pop
jecxz
loopne
inc
dec
inc
imul
or
fsub
jns
cmp
sub
sbb
pushf
test
mov
or
and
lret
add
or
add
mov
jl
lods
cld
dec
imul
xchg
fdivrs
loop
mov
inc
mov
or
adc
imul
call
lret
mov
negb
imul
and
fiaddl
xor
push
insb
test
xor
mov
and
movsl
inc
cmc
pop
xor
fldenv
fadd
dec
jp
mov
push
push
jg
or
adc
fnstsw
and
scas
enter
mov
addr16
icebp
sbb
jge
pop
addr16
sti
fsub
xchg
subl
and
jge
or
pop
cmpsb
inc
adc
scas
jb
mov
or
and
or
pop
mov
cwtl
add
mov
cmp
mov
out
dec
lret
and
mov
daa
sbb
push
cmpsl
cmp
fwait
dec
push
fcomp
das
mov
mov
dec
adc
hlt
test
push
cmpsb
lcall
cmp
into
mov
aam
nop
xlat
adc
dec
pop
cltd
jp
push
inc
sub
daa
aas
out
mov
jecxz
movsb
cmpsl
bound
cmp
test
xor
fadd
or
fmull
sbb
jb
pop
sub
dec
jns
mov
ficoms
pop
aam
inc
jb
mov
dec
daa
adc
dec
fwait
jne
jno
inc
push
dec
xor
jno
inc
insb
xchg
jle
ja
ja
out
mov
mov
or
push
dec
or
pop
mov
lods
xchg
mov
ja
out
sbbl
push
div
cli
push
adc
cmp
out
loop
xor
pop
adc
lods
clc
fsts
add
push
popa
test
test
pop
inc
pushf
mov
jne
sarl
jecxz
loope
push
xchg
or
ds
in
lret
je
filds
inc
fwait
popa
pop
int
out
lods
cli
sbbl
jmp
cltd
aas
mov
jp
mov
fisttpl
jbe
popf
out
ja
ret
lock
cltd
andl
mov
in
js,pn
nop
push
hlt
sbb
pop
cs
xchg
sub
jno
push
push
adc
test
add
mov
jle
clc
pop
jmp
imul
xchg
mov
xor
mov
pop
mov
pop
xor
insl
stos
insb
loop
rcrb
sub
mov
out
insl
xor
or
pop
in
outsl
xorl
inc
xchg
mov
sub
pop
cmp
andl
adc
cmpsl
pop
pop
add
sti
inc
pop
mov
xor
je
jmp
jno
pop
xchg
push
lods
addr16
ljmp
sti
in
stos
push
pop
scas
mov
dec
aam
xchg
and
inc
movsb
mov
push
movsb
mov
mov
js
xchg
pop
pop
es
js
aam
and
cwtl
cmpsb
repnz
dec
xor
pop
ljmp
mov
mov
imul
xchg
fwait
cmp
fdivrp
imul
dec
add
and
mov
pop
movl
fcompl
or
cli
shrl
jg
inc
repnz
and
pop
xor
push
xchg
gs
mov
pop
cmpsl
dec
mov
push
mov
fisttpll
mov
enter
sub
test
sbb
push
sub
add
mov
adc
bound
mov
je
js
sbb
pushf
jbe
lret
mov
aad
loope
pushf
or
lods
sbbl
jb
pop
mov
leave
stc
adc
push
test
call
add
adc
mov
lahf
popf
je
sbb
or
mov
pop
lret
and
and
lsl
test
push
out
pop
or
jo
pop
in
jns
push
js
push
push
ret
orl
jg
jge
stos
cmp
or
popl
xchg
push
aaa
xchg
push
cmp
popf
pop
movsb
or
in
and
cmp
sbb
mov
cmp
fisttpl
jecxz
xor
cmpsl
push
mov
rcr
mov
pop
into
adc
pop
fildl
sti
xor
cwtl
in
mov
xlat
daa
cwtl
fucom
js
cmpsl
add
mov
popf
mov
mov
add
add
flds
mov
add
xchg
push
add
sti
or
repz
or
imul
sbb
lret
mov
jbe
imul
ja
sarl
xor
push
fists
roll
adc
cmp
movl
pusha
lods
fmull
mov
mov
fsubs
cli
push
xchg
pop
mov
xchg
notb
aam
xor
fwait
sbb
sarb
pushf
inc
loope
cltd
stos
inc
mov
int3
add
and
dec
mov
scas
jge
jecxz
adc
out
inc
stos
shrb
push
fsub
add
push
mov
mov
push
xchg
mov
jge
mov
daa
repnz
jmp
fiaddl
pop
les
movsl
aad
adc
jp
sub
cmp
xchg
add
negl
lods
lods
sub
pop
lds
gs
pop
nop
data16
cmp
pop
inc
scas
add
daa
mov
dec
push
xorl
xchg
out
jne
sub
loopne
cmpsb
xchg
mov
jne
jmp
ffree
imul
adc
jne
aam
sbb
pop
lcall
mov
scas
mov
inc
or
mov
pop
dec
add
cmc
sub
lea
movsb
and
xorl
shl
movsl
cmp
and
ss
in
lret
xchg
es
dec
stc
push
ret
mov
sub
outsb
pop
aaa
ds
inc
dec
pop
mov
mov
scas
sub
jecxz
mov
int3
loop
out
mov
hlt
inc
and
lret
js
into
in
cltd
cwtl
push
loop
jns
lea
inc
out
fwait
mov
cmp
sbb
mov
inc
out
iret
cmc
push
cmpsl
idiv
ffree
enter
shl
ficoml
sbb
or
add
xor
add
jl
push
in
xchg
dec
jae
addl
mov
mov
push
pusha
dec
cmp
mov
outsb
add
xchg
xchg
shlb
cmpsl
cltd
sub
push
adc
rcr
sti
aas
push
aas
lcall
dec
loopne
mov
imul
adc
mov
jns
stos
push
mov
int3
daa
and
mov
test
xor
dec
stos
xorb
sbb
ret
lret
xchg
and
adc
pop
push
and
je
or
test
sub
inc
lret
mov
clc
pop
add
aaa
in
sub
xor
inc
clc
ficoms
clc
and
ret
xchg
or
in
and
pop
mov
sub
out
test
daa
ds
fucomi
pop
xor
fisttpl
mov
scas
loope
push
gs
fsubs
shrb
pop
adc
mov
call
cltd
pop
into
stos
shl
add
mov
ss
js
lds
jae
shll
bound
sbb
shlb
out
dec
jge
jl
das
inc
pop
add
lahf
mov
out
cmp
adc
cmp
mov
rcr
dec
mov
lods
push
jbe
cmpsb
pop
push
adc
mov
clc
or
xor
sub
sbb
pop
jg
jl
shrd
sti
imul
das
fnstsw
popf
xor
lods
jmp
push
loope
aam
sbb
jmp
aas
sub
pop
out
and
mov
inc
dec
daa
dec
push
pop
insl
in
fcmovu
add
mov
daa
test
mov
pop
push
stos
cs
or
cmp
or
xor
or
sbb
cvtdq2ps
or
repz
mov
push
jns
mov
jmp
mov
negb
mov
shrl
aam
adc
movswl
shlb
mov
sahf
inc
bound
mov
cmp
pusha
mov
int
jmp
iret
loop
mov
repz
xchg
into
mov
jno
rorb
pop
mov
lret
adc
cmpsl
jno
mov
inc
fisubrs
xchg
mov
push
fsubrs
sbb
icebp
xor
insl
lods
xchg
or
cmp
inc
jno
push
jb
sub
mov
and
jmp
push
out
je
dec
mov
sub
jo
mov
sbb
cs
mov
imul
or
add
and
inc
mov
lds
sub
loopne
pop
sbb
nop
popa
cmp
mov
cltd
inc
sub
and
test
repz
sub
adc
out
imul
sub
xchg
inc
sbb
pop
sti
mov
mov
inc
ds
pop
sbb
and
and
or
or
mov
jmp
gs
rolb
jae
in
int3
enter
jl
add
and
js
and
mov
test
add
and
pop
add
sbb
shl
mov
xor
jb
loop
es
push
test
sbb
movsb
pop
aas
push
add
pop
xchg
loopne
fs
popa
loop
enter
movsb
or
dec
stc
ja
mov
shrb
out
xor
mov
jns
and
pop
ret
jnp
sub
adc
nop
ljmp
xor
fimuls
mov
repz
mov
push
lds
sbb
inc
nop
gs
pop
hlt
push
lock
sarb
xor
mov
aad
mov
ret
mov
push
dec
push
adc
xor
jns
cmp
xor
mov
bound
test
mov
lret
add
mov
jecxz
mov
stos
push
dec
repz
mov
fnstsw
jmp
sahf
and
inc
mov
fnstcw
lock
pop
pop
aas
stos
out
add
add
mov
or
inc
xor
push
popf
movsb
out
pushaw
cmp
push
xlat
push
ljmp
scas
pop
jnp
add
lcall
xchg
dec
mov
repz
imul
cmp
enter
idivb
out
or
arpl
mov
in
fidivrs
pop
out
test
lret
test
pop
imull
mov
test
push
out
cs
or
dec
cmpsb
sbb
dec
adc
sub
sbb
mov
jnp
cld
cmpsl
or
out
lcall
mov
xchg
fldl
mov
mov
lcall
sbb
pop
push
lea
mov
mov
scas
push
mov
ret
mov
jecxz
mov
in
mov
fiaddl
ret
or
fmuls
add
out
scas
mov
js
leave
pop
cs
mov
jle
imul
adcb
insb
jecxz
pop
fldl
jae
iret
cmpsb
je
jnp
inc
sbb
test
outsl
outsb
int3
mov
leave
out
popf
and
inc
mov
in
cmp
test
dec
insb
notl
xchg
inc
orl
sbb
cmpsl
adc
push
rcrb
mov
in
xchg
sbb
out
xor
add
pop
sbb
dec
mov
jns
outsl
xchg
jbe
add
adc
mov
and
inc
mov
idivl
addr16
push
mov
aad
jo
in
cmp
movb
jg
mov
lret
rcrb
inc
clc
cltd
jns
enter
jns
je
mov
push
pop
mov
push
stos
imul
lret
mov
adcl
scas
sub
xor
insl
sub
cmpsb
xor
jecxz
iret
cmp
mov
or
sti
mov
into
shlb
call
add
leave
mov
arpl
jg
xor
and
icebp
and
fstpl
mov
mov
imul
stc
mov
rcrb
fldcw
test
mov
or
adc
adc
sub
aad
sarb
movsb
sub
imul
xor
xchg
add
test
mov
dec
ss
mov
pop
pop
mov
mov
mov
cli
in
xchg
push
cwtl
add
aam
or
clc
loopne
mov
pop
ljmp
dec
popf
aam
or
loop
out
clc
scas
pop
mov
daa
notb
xchg
je
es
insb
shl
or
repz
aaa
xchg
jo
outsl
scas
xor
movsl
cmp
popa
outsb
jmp
adc
out
push
fmuls
sbb
mov
lret
push
pushf
into
shlb
outsb
lods
lds
cmpb
cmp
lcall
jmp
inc
xlat
lock
and
cmpsl
shll
mov
sbb
mov
jns
push
pop
mov
movl
das
mov
xor
loop
jns
std
xchg
mov
fidivl
dec
dec
xchg
mov
or
pop
mov
xchg
andl
test
or
or
sub
and
gs
daa
enter
imul
jne,pn
call
push
mov
sub
and
xchg
push
inc
inc
test
jle
mov
xchg
mov
out
pop
sbb
xchg
xor
je
cmc
dec
aam
cmpsl
mov
xor
rorb
aad
jmp
insb
test
repnz
mov
xchg
je
scas
fisubrl
jp
leave
inc
sbb
sbb
bound
push
pop
pop
or
sub
repnz
xchg
lds
mov
out
pusha
insl
add
negl
pop
pop
scas
addr16
and
popf
pusha
xor
out
fwait
xor
hlt
lret
push
cmpsl
push
xchg
mov
push
sub
xor
or
jp
pop
ficomps
in
inc
mov
dec
sub
mov
test
pushl
outsb
ret
roll
fldt
dec
adc
mov
xor
dec
ljmp
adc
mov
dec
xchg
lods
jg
imul
adc
ret
sub
cld
sbb
das
sub
pop
inc
imul
sbb
scas
push
adc
xor
bound
dec
cmp
cwtl
mov
mov
out
sbb
outsb
xchg
addr16
cs
mov
lcall
jns
sub
or
sbb
out
lods
movsb
mov
fs
movsl
lods
pop
add
mov
fisubrs
ds
sbb
mov
xchg
add
mov
stos
pop
mov
fnstenv
inc
pop
jmp
mov
loop
scas
mov
fwait
xchg
imul
ljmp
lds
mov
pop
fisubl
adc
xchg
mov
or
mov
mov
mov
mov
stos
pop
cli
xlat
push
aad
outsl
pop
loopne
xchg
ret
stos
mov
cmp
dec
repz
cwtl
jle
add
or
daa
rcll
pushf
ds
jnp
jno
jp
mov
fildll
pop
shll
repnz
arpl
fildll
jecxz
xchg
xchg
sbb
pop
stos
out
popa
scas
lea
mov
aam
testl
pop
xchg
cmpsb
and
inc
jl
jbe
add
xorl
lods
dec
mov
adc
cmp
popa
mov
xor
sub
inc
cmpsb
mov
dec
and
aaa
push
iret
arpl
sbb
sub
in
dec
xchg
call
loop
inc
es
sti
dec
call
pop
sarl
dec
push
dec
push
sahf
dec
ret
loop
add
inc
sbb
loopne
ret
ret
fcmovne
cwtl
adcl
aaa
stc
pushf
mov
pushf
xor
pop
mov
sarb
mov
dec
adc
mov
mov
rorb
dec
loopw
xor
mov
ljmp
and
call
pop
mov
rcrb
loopne
out
out
fidivl
in
cmp
mov
shll
fisttps
int
jb
lds
je
stos
jg
or
imul
adcb
mov
pop
int3
call
repz
mov
mov
icebp
cmp
insb
add
or
gs
mov
and
mov
inc
insl
gs
push
pop
aaa
dec
lahf
enter
mov
jecxz
jl
sbb
pop
xchg
jns
mov
mov
pop
sub
das
add
push
xlat
jecxz
sbb
add
adc
loopne
xchg
aam
push
push
jmp
dec
push
mov
dec
cmpsl
jb
lds
movsb
push
aas
cmp
aam
rcr
push
mov
pop
fisubs
cmpsb
cmp
dec
int3
lods
sti
dec
test
mov
xlat
sarb
or
or
pop
xchg
sbb
cmpsb
inc
loopne
mov
mov
inc
jg
pop
test
jmp
int
lahf
pop
xchg
dec
jno
cmc
orb
sbb
pop
stos
cmp
iret
push
jne
test
push
lods
jp
sbb
scas
xrelease
lock
aaa
lret
sbb
loope
int
data16
movsl
and
jge
sahf
inc
movsl
adc
sbb
xor
xchg
mov
out
adc
or
ds
test
push
stos
adc
adc
mov
shrb
pop
rcrl
xchg
push
ret
mov
out
ja
aam
clc
cmp
pop
xchg
add
push
inc
insl
addb
jnp
xchg
pop
pop
xchg
ret
cli
in
jmp
xor
iret
lcall
jae
imul
jg
test
sbb
and
jmp
call
nop
rcll
cmp
pop
inc
mov
lods
mov
xchg
cmp
aam
add
jno
jecxz
jg
jb
ds
ja
clc
icebp
push
pop
cld
mov
sbb
out
icebp
jbe
pop
mov
xlat
cmc
push
mov
repz
ds
mov
mov
and
and
loop
scas
shll
jge
jb
push
jmp
or
and
mov
xchg
fbstp
test
iret
testb
push
into
test
jnp
mov
jnp
xchg
push
xchg
jl
dec
cmp
lret
mov
xor
data16
dec
sbb
mov
mov
lds
dec
mov
push
outsb
popa
in
mov
sub
mov
popf
scas
clc
xchg
je
or
cmp
mov
mov
scas
push
xchg
imull
push
xor
int3
int
push
test
repnz
inc
cli
stc
and
mov
ja
cmpsb
jg
imul
inc
jg
jl
pusha
dec
dec
fnstcw
sbb
stc
sub
xchg
push
mov
xchg
lcall
push
into
add
lcall
leave
pop
stos
sub
pop
or
sub
lods
xor
push
jbe
sub
mov
mov
shr
lret
aam
es
test
adc
add
mov
scas
mov
cmc
xchg
aad
push
shrl
mov
jbe
incb
xchg
xlat
mov
jg
int3
mov
jo
push
leave
mov
dec
pop
leave
inc
lret
and
test
mov
outsb
into
leavew
or
dec
jge
dec
in
aam
mov
ror
ja
inc
mov
jp
mov
xchg
mov
ss
or
push
icebp
and
stc
pop
test
mov
sbb
cmp
jno
pop
lret
pop
mov
mov
imul
imul
mov
mov
sar
lret
jmp
push
pop
mov
mov
icebp
mov
and
push
inc
cmp
mov
cmp
cmp
cmp
or
in
xchg
cmpsb
or
xor
xor
mov
mov
js
add
xor
or
add
push
jnp
mov
push
adc
xorl
nop
hlt
in
addb
in
jmp
adc
push
out
mov
adc
dec
jl
ljmp
cmp
lcall
pushf
pop
jo
dec
xchg
pop
mov
mov
cmp
jge
mov
mov
adc
pushf
xchg
add
xchg
cs
xchg
inc
xchg
ljmp
xchg
dec
dec
js
inc
sahf
adc
pop
shrb
dec
jecxz
pop
sbb
nop
stc
enter
mulb
add
imul
pusha
mov
dec
add
and
cmpsb
and
and
in
add
aad
les
xor
mov
sbb
sub
das
xchg
push
iret
xor
cmp
icebp
int
push
sub
insl
xor
xchg
mul
loope
pop
add
fisubrs
or
sti
popf
jae
icebp
mov
jae
sarb
mov
lock
jbe
mov
push
dec
sbb
push
lret
out
data16
inc
pop
mov
pop
inc
mov
int3
test
outsl
push
shlb
xor
sub
jbe
or
dec
sbb
es
mov
ja
xor
inc
mov
adc
mull
inc
or
fwait
adc
insl
cmpsb
lret
lahf
mov
sbb
icebp
mov
mov
es
mov
push
add
movsl
xchg
add
cmpsl
mov
aad
ja
push
sub
sub
insb
mov
aaa
repz
inc
pop
pop
std
sub
ds
rcrb
push
cli
push
cmp
fcmovne
loope
addb
pusha
inc
dec
gs
jb
and
adc
bound
leave
pop
sarb
sbbl
mov
fildll
shll
push
ljmp
push
inc
or
cmp
mov
cmp
pop
nop
fisubrl
sahf
out
lods
je
lahf
mov
loope
mov
fprem1
cmc
xchg
incb
or
dec
jmp
xor
and
add
cmp
pop
dec
cmp
push
movb
cmpw
nop
jne
jge
out
out
mov
mov
jno
jl
shl
mov
push
adc
or
or
les
repnz
mov
fsub
ret
mov
test
push
fbld
out
orl
pop
cmp
adc
mov
insl
mov
inc
stc
out
sbb
xchg
pop
ret
ficompl
lcall
clc
loop
scas
jle
clc
mov
cld
dec
and
and
cld
addl
call
add
das
xlat
out
rcll
jbe
int
add
jp
int3
adc
ss
mov
push
mov
cmp
fnstenv
enter
push
mov
scas
shr
pushf
lret
lahf
xor
jne
push
popf
jmp
in
leave
cs
sub
jo
or
or
fistpl
jp
shrb
stc
or
jno
test
inc
and
out
push
jmp
call
xchg
mov
sbb
fs
push
adc
test
stos
dec
cmp
ret
arpl
jnp
jg
divps
cmp
mov
pop
inc
pop
sbb
or
inc
cwtl
push
mov
or
inc
jl
push
subb
popa
cmp
mov
leave
scas
push
xor
ja
lock
jb
ja
addr16
movsb
nop
mov
orb
adcb
xchg
out
jb
andb
test
fcmovnu
push
pop
mov
adc
negb
cmc
gs
jnp
lret
jo
mov
addr16
push
jmp
mov
mov
cmpsb
pop
xor
insl
fcmovnbe
loope
mov
pop
jbe
cmpb
inc
pop
pop
adc
dec
insl
cmp
incb
insb
sub
aad
ror
dec
popa
mov
cmp
xor
add
int3
cmpsb
jne
pusha
filds
mov
jge
aad
fs
je
repnz
adc
dec
add
mov
jo
or
add
iret
dec
or
mov
cmp
add
mov
mov
adc
mov
sub
into
leave
push
sbb
mov
mov
or
inc
mov
addr16
int
movsl
dec
sahf
clc
stc
sbb
xor
sub
loopne
sahf
dec
xorl
lock
sti
stc
push
lret
jb
jecxz
outsb
sbbb
adc
sti
cmpsb
es
sti
es
mov
push
and
adc
cli
mov
test
mov
fdivr
test
xchg
cmc
loope
loope
xor
cmp
mov
js
shlb
xor
jl
rolb
dec
sub
dec
sub
adc
jae
call
outsb
push
pop
fsts
jno
sbb
or
ljmp
pop
cwtl
xor
add
fsubs
jg
mov
lcall
lock
bound
lret
mov
sbbb
decb
mov
dec
fiaddl
xchg
aad
mov
and
popf
lock
xor
or
test
daa
fstpl
cltd
push
int
cmp
sbb
sbb
movsb
int3
cmp
and
xchg
jae
aaa
loope
mov
adc
xchg
inc
fs
and
es
imul
mov
int3
mov
cmp
loopne
aam
jmp
pop
loope
jae
jg
or
add
mov
outsl
lds
ja
sahf
ljmp
or
test
push
adc
or
repz
lods
ss
repnz
movsl
inc
push
jno
ret
roll
inc
cmpsb
ficompl
fcomps
out
mov
sub
scas
stos
addl
cmp
push
mov
out
pop
or
test
cmc
cltd
outsl
std
pop
add
push
dec
nop
adc
stos
js
or
sbb
mov
leave
je
fildll
mov
insl
or
add
add
or
pop
ret
pop
jnp
clc
inc
add
insl
sub
or
imul
sbbl
sbb
sub
and
into
cmc
xchg
inc
dec
out
sub
pop
lds
cmp
cs
sbb
jno
movb
xor
or
xchg
pop
or
push
pop
cmpsl
pop
std
pop
xor
lea
sbb
lahf
jmp
cmpsb
xchg
xlat
data16
rcrl
shll
jl
ds
imulb
push
adc
mov
scas
in
xchg
jmp
fldl
mov
mov
add
add
push
dec
push
cmpsb
repz
bnd
repz
fstps
push
mov
mov
data16
mov
cmp
dec
fsubrl
mov
data16
xchg
ret
mov
or
cmpsl
lahf
call
int
jecxz
jecxz
in
ja
mov
stos
jnp
les
test
call
mov
mov
mov
ja
dec
mov
test
pop
adc
lahf
push
jle
sub
mov
int
xchg
or
das
test
lret
jge
rcrl
jg
cmp
sbb
call
jbe
mov
or
cmp
inc
mov
mov
cmpsl
fildll
test
sub
push
or
jns
and
and
lods
jae
inc
out
cli
dec
imul
xorb
xchg
idivb
je
orb
out
jl
imul
inc
jnp
subl
outsl
mov
adc
or
inc
xor
cwtl
sub
jb
test
or
mov
push
popf
pop
movsb
stc
mov
test
add
pop
outsl
test
and
mulb
or
in
jae
insl
and
add
dec
fucomip
je
sar
mov
inc
adc
rcll
mov
lods
sbb
cmp
test
cwtl
cs
xchg
cmp
xor
adc
cs
movswl
add
in
inc
pop
ljmp
mov
adc
cmpsl
pop
insb
inc
in
sbb
mov
xchg
xchg
loope
outsb
scas
xor
int
push
sub
inc
pop
je
mov
cli
jne
fs
or
mov
xlat
push
inc
enter
fimull
push
mov
push
arpl
pop
inc
add
lods
mov
sbb
cmp
repnz
fwait
out
inc
leave
inc
xlat
push
js
pop
cmp
mov
mov
sub
jl
sub
fsubrl
cmp
clc
push
gs
push
lods
inc
mov
cmpsl
sahf
in
and
dec
fistl
test
rol
push
cs
sbb
cmp
mov
std
mov
mov
and
das
mov
arpl
ljmp
inc
aas
jnp
stc
aad
sub
mov
jbe
les
outsl
pop
or
js
and
xor
xchg
add
adc
int
sarb
or
sub
xor
std
iret
movsl
jmp
cmpb
xor
jg
adc
add
scas
bswap
xchg
lcall
inc
lret
jecxz
jns
test
jl
hlt
sahf
rcr
or
cmp
xlat
push
sarb
mov
pushf
iret
stos
xchg
pop
jle
pop
leave
dec
daa
lods
lds
adc
lods
xchg
push
xorl
loop
dec
cld
pop
pop
pushl
push
aad
cmpl
dec
cmp
repz
xor
lock
rorl
push
mov
fsubl
fistps
mov
cld
mov
inc
outsb
ss
hlt
shl
dec
pop
fadds
sahf
xchg
call
dec
sub
rcrl
jb
fcmovb
jnp
xchg
dec
cs
xchg
dec
sub
aas
push
in
ljmp
inc
adc
jp
insl
cmp
int
js
xchg
mov
sbb
pop
pop
xor
add
arpl
icebp
push
push
sarl
jg
xchg
mov
hlt
ror
stc
lock
sub
dec
aas
test
in
and
mov
imul
decb
cmp
xor
bswap
pop
jb
or
sti
jp
cltd
mov
xchg
shll
das
cmp
int3
fcomi
jae
adc
insl
popf
jge
lahf
movsb
lahf
iret
in
pop
jnp
or
pop
inc
pop
stos
in
lods
stos
in
dec
out
and
fs
pop
rorb
jl
lods
sbbl
pushl
and
repz
inc
lea
popf
cmc
iret
or
aam
movsb
divb
mov
xchg
sub
mov
fsubrs
mov
hlt
std
ret
adc
pop
pop
pop
ds
mov
jmp
stos
fnstenv
sub
mov
addr16
and
mov
fnstcw
push
jg
imul
arpl
and
mov
mov
inc
mov
gs
dec
mov
jae
mov
dec
sbb
add
xchg
add
xor
add
mov
out
fnstcw
mov
test
jne
sbb
jo
xchg
inc
mov
add
jns
lahf
or
stos
pop
xchg
xchg
xorb
hlt
jmp
pop
xorb
movsl
sbbl
in
push
xchg
xchg
lahf
cltd
ret
fadd
bnd
sub
mov
shlb
cltd
and
mov
test
push
adc
jmp
pushf
jbe
data16
enter
mov
cli
dec
mov
jl
fldcw
dec
jne
sub
xlat
fistps
jmp
or
sub
mov
cmp
test
mov
nop
fs
rorl
das
arpl
adcb
rcrl
push
inc
jns
loop
pop
jmp
ret
cltd
pop
push
xor
mov
popf
cmp
cld
imul
push
mov
jns
mov
jg
jo
push
push
jb
ljmp
jno
iret
insb
push
inc
sub
push
sub
mov
lea
or
xchg
mov
int
adc
cmp
cwtl
sub
dec
jl
clc
pop
leave
push
cld
and
pop
jge
scas
fnsaves
dec
mov
cmp
cmp
xchg
and
adc
xchg
xlat
int
jmp
aas
testb
adcl
push
popf
into
lock
inc
stos
jae
mov
loopne
stos
idivb
mov
je
lcall
rorl
inc
sub
jo
lock
mov
mov
loopne
push
push
add
iret
in
jmp
les
rol
or
push
inc
add
mov
xor
dec
mov
and
sbb
jmp
shll
pop
xchg
dec
adc
and
divb
rcrl
sbb
push
mov
ret
in
mov
mov
adc
mov
ficoml
mov
dec
in
mov
sub
and
ds
call
adc
sbb
mov
out
xchg
scas
clc
movsb
mov
push
ret
loop
aaa
outsb
cmpb
mov
into
rorb
stc
sub
fisubrl
push
cmp
cmp
cmpsb
adc
ret
mov
ret
lods
mov
popa
neg
adc
xchg
or
sub
push
push
cwtl
cmp
es
mov
pop
jae
out
mov
sbb
xchg
stos
rcr
fucom
mov
jo
or
mov
clc
cs
data16
sbb
sub
pop
jg
push
sbb
cs
ficomps
jne
sbb
jns
mov
sbb
std
stc
mov
ljmp
push
xlat
mov
mov
mov
addl
out
sbb
bound
xor
cmp
xor
adc
mov
mov
inc
popf
lahf
in
clc
outsb
push
mov
mov
in
inc
outsb
shll
sbb
fstpl
out
fstps
jae
pop
or
in
add
insb
mov
shrb
mov
fs
into
mov
pop
inc
xor
sub
sbb
adc
sub
sub
iret
add
dec
fstl
das
stos
rorl
sub
xchg
mov
pop
xchg
sbb
das
es
inc
cmp
xchg
sbbb
or
rcrb
roll
in
and
in
sub
ss
aam
mov
mov
pop
ljmp
aad
imul
mov
inc
fwait
mov
add
cld
pushf
cmpb
dec
sub
jns
loope
rclb
jb
fsubr
xor
jbe
ret
fdivs
lahf
and
mov
or
dec
sbb
sahf
sbb
sub
in
dec
fcomp
mov
xor
mov
aas
cwtl
push
fsubrs
or
stc
and
in
sub
push
das
aam
dec
xor
inc
in
dec
out
test
mov
xchg
jnp
pop
pop
cmc
add
and
mov
push
pop
pinsrw
hlt
idivb
dec
jbe
call
adc
sbb
and
pop
pushf
js
lcall
mov
int
mov
mov
dec
adc
jno
or
mov
sbb
sbb
sbb
fwait
lock
add
js
push
fwait
push
lods
gs
ret
jge
xor
adc
js
inc
or
dec
dec
inc
jne
cmp
push
push
mov
cmp
xlat
fistpl
pusha
mov
pusha
pop
jp
lds
in
cmpsl
out
sbbl
sub
sub
repz
pusha
fsts
aad
inc
jge
loope
and
dec
add
icebp
and
push
xor
addr16
sbb
mull
lods
xchg
xchg
and
add
or
sub
lods
push
daa
js
adc
adc
push
fsubl
pop
or
out
std
mov
mov
lods
mov
sub
xor
shll
push
add
cmp
jbe
mulb
sbb
jo
imull
adc
loop
sub
and
jne
add
insl
and
pushf
jmp
aas
add
pop
test
adc
mov
mov
outsl
test
xlat
mov
dec
sahf
ljmp
ljmp
pop
sbbl
out
jmp
std
fldl
in
ds
dec
sbb
dec
sahf
cmp
mov
outsl
fdivrs
jb
jbe
dec
rcrb
xor
push
cmp
orb
stos
adc
hlt
xchg
mov
xchg
hlt
dec
inc
jecxz
mov
add
push
notl
jno
imul
in
fwait
movsl
and
mov
sbb
lock
pushf
out
cmpsb
in
nop
dec
movsl
xor
dec
inc
xchg
outsb
popa
int3
inc
out
out
nop
imul
fildll
xchg
insb
mov
mov
fwait
clc
add
push
xchg
lods
rclb
fldenv
movsb
mov
test
fstpl
ljmp
lods
cmc
sahf
movsl
test
jge
adc
loope
repnz
add
hlt
scas
jae
pop
adc
xor
jp
push
pop
sbb
jg
cmp
fistl
jno
add
fiadds
push
inc
adc
lret
test
pop
js
pushf
in
mov
outsl
mov
xlat
sbb
xchg
fnstenv
hlt
dec
rolb
ss
mov
inc
inc
loop
std
and
filds
push
arpl
stc
dec
enter
ss
jo
imul
and
dec
and
jle
mov
mov
mov
mov
mov
inc
cli
xchg
ds
leave
lods
sbb
cld
push
inc
xchg
js
test
mov
rolb
pop
ficoml
movsb
shrb
lods
ret
cli
mov
insb
mov
pop
popf
cld
cmpl
testl
mov
jl
les
xor
push
out
xchg
sbb
lods
test
push
js
or
mov
int
inc
aad
or
mov
or
in
inc
leave
ret
call
rorb
in
or
hlt
sbb
hlt
xor
sbb
clc
ret
hlt
push
mov
pop
pop
push
nop
fwait
jp
xchg
inc
rcrl
scas
test
push
push
add
iret
pop
fistps
imulb
xlat
dec
fwait
movsl
adc
fstpt
push
sub
mov
adc
or
pop
outsl
jnp
imul
stos
inc
jp,pt
icebp
call
dec
mov
push
idiv
gs
cmp
mov
cmp
sub
cmpl
sub
cwtl
jb
adc
xor
push
jns
mov
jg
dec
add
dec
pop
add
push
dec
nop
rcll
sub
inc
inc
lock
sub
mov
pop
aam
js
int
int3
ss
cmp
xor
mov
adc
outsl
mov
cmp
adc
push
out
cld
mov
cli
cmp
jbe
inc
sbb
mov
aam
xchg
lcall
iret
xlat
stos
aaa
adcl
or
push
in
testl
mov
int
xor
mov
shrl
sbb
popf
and
loop
andb
mulb
xor
cmp
aas
sub
push
pop
gs
or
fidivrs
fcmovu
out
cli
ja
fwait
outsb
dec
xor
fistpl
movsb
and
sub
mov
imul
mov
in
fisubl
cltd
and
inc
sbb
stos
jecxz
pop
sub
cmp
insl
mov
das
and
lret
jae
push
dec
jmp
icebp
fs
flds
mov
inc
repz
fildll
mov
adc
int3
sub
fs
out
out
jb
loopne
in
test
icebp
addr16
int3
dec
leave
mov
adc
callw
or
es
pop
imul
push
scas
jg
test
jb
cmpb
mov
jno
and
cmp
das
jnp
loop
push
jge
pop
mov
xchg
jp
push
sub
dec
leave
sbb
or
mov
push
dec
lods
hlt
jmp
sbb
and
orl
and
xlat
fnsave
xor
daa
add
lret
dec
clc
nop
fistpll
out
movsb
push
cmp
add
sub
cmpsl
enter
cmp
xchg
lea
pop
loope
pop
jmp
add
ret
pop
jmp
dec
lds
inc
jmp
cs
leave
in
int3
dec
lcall
push
dec
shlb
ja
mov
push
in
out
sub
mov
pop
cmp
mov
cmp
call
mov
dec
push
pop
push
mov
repz
cmp
shrb
loopne
mov
pop
flds
xlat
push
mov
in
das
test
mov
loop
fwait
dec
addr16
mov
xchg
rorb
mov
jmp
in
xor
iret
sub
data16
test
and
jno
inc
adc
xchg
pop
push
xor
xchg
lock
movsb
push
lahf
jl
inc
mov
add
push
stos
sbb
mov
test
test
and
fdiv
clc
jno
out
rolb
sbb
sub
aam
dec
ja
test
xor
xchg
bound
and
xchg
mov
sbb
cmp
mov
push
add
cmpsb
lds
icebp
fimuls
sahf
dec
fisubs
movsl
aaa
mov
add
dec
popa
inc
lds
dec
out
loope
stos
mov
pop
aam
iret
cmpsl
aad
xor
mov
shll
dec
jmp
aas
mov
movsl
and
dec
js
and
dec
leave
xlat
test
lods
loopne
loop
pop
enter
or
es
lahf
mov
add
mov
push
mov
mov
push
xor
mov
xchg
shll
imul
stos
sub
xchg
cmp
pop
xor
lods
pop
mov
test
add
ds
jns
daa
jle
int3
jno
jle
test
sub
fimull
cld
cmp
jge
scas
mov
mov
insb
fbld
enter
test
cmp
loop
adc
in
leave
leave
out
lods
push
push
xchg
sub
mov
arpl
jl
and
pop
out
sub
cmp
xchg
cmp
fiadds
xor
sub
iret
xor
pop
fnsave
jge
xchg
jns
lea
cmpsb
xchg
push
sub
pushf
mov
addl
add
sbb
movsl
mov
fcoml
sbb
push
jne
mov
outsl
mov
orl
int3
xor
sti
sti
or
rcrb
xchg
mov
sbbb
mov
sbb
cmpsb
mov
inc
rol
dec
out
arpl
jne
mov
mov
flds
cmp
out
or
rclb
fimuls
into
xor
movsb
add
cs
ljmp
fwait
mov
aaa
cmpsl
icebp
push
cmp
jns
jl
fisubrs
test
xchg
sbb
mov
xchg
aaa
push
cmpl
cltd
mov
movsl
lahf
pusha
loope
scas
inc
jb
or
cwtl
loopne
aas
lods
divl
mov
and
dec
imul
mov
outsl
push
ja
cmp
pop
shll
loop
or
int3
mov
cli
push
jae
adc
jle
dec
pop
rcll
loope
lcall
and
lock
cmovns
inc
ljmp
lret
cmpsl
arpl
lods
fpatan
addr16
pop
inc
lods
ret
stos
jecxz
inc
dec
cli
fmul
enter
push
and
cli
imul
movsl
mov
mov
icebp
movb
xchg
lcall
jb
fiaddl
mov
cmpsb
xor
je
cld
sub
leave
scas
ret
mov
mov
jbe
mov
xchg
pop
jbe
push
mov
cltd
sbb
loop
mov
add
filds
loopne
jge
sub
outsl
lods
inc
imull
mov
push
add
dec
cmp
popf
loopne
jne
cli
jne
leave
sbb
outsl
dec
jno
pop
ret
inc
mov
clc
insl
adc
test
and
inc
pop
pop
cmp
test
add
ret
jb
cmc
mov
push
sbb
lret
std
or
sbb
cmpsl
nop
xor
roll
jb
into
testb
call
sbb
ss
ss
fs
mov
aas
dec
fdiv
jmp
xchg
dec
aam
popa
fsubrl
add
adc
add
pop
mov
adcb
push
dec
and
pop
iret
push
mov
xchg
popa
push
imul
add
js
mov
rcll
in
xchg
ret
jl
std
mov
rclb
rcrb
inc
sbb
or
xor
xchg
fwait
std
cmpsb
scas
adc
jg
pop
shl
mov
jo
jnp
jno
cs
mov
test
icebp
in
xchg
xorl
fldenv
cmp
aad
jg
add
gs
cmp
xchg
popa
test
jmp
jae
push
inc
sub
jp
push
ret
dec
add
lret
pop
rorb
adc
mov
nop
ret
rclb
mov
sub
and
je
cmpsl
xor
pushf
lret
xlat
lods
out
and
push
mov
push
and
xlat
lret
dec
dec
add
adc
hlt
movsl
jnp
ljmp
sbb
lea
pop
dec
out
add
or
sbb
cs
jno
push
push
dec
rcrl
inc
dec
test
add
push
or
cmp
fwait
sbb
jnp
xor
push
jns
cmc
shrl
sbb
mov
sub
dec
pop
pusha
and
adc
aad
xlat
mov
lods
inc
roll
xor
pop
inc
and
in
sub
inc
add
sbb
mov
jge
xchg
into
pop
pop
pusha
xor
inc
inc
and
ret
sub
lods
add
pop
jge
ds
cmp
insw
jle
fsin
mov
fsubl
push
jecxz
into
jo
pop
aam
and
adc
adc
loope
out
scas
inc
aas
and
leave
cmp
scas
lahf
mov
sti
jmp
insb
fmulp
bound
and
mov
xchg
lods
add
ds
pop
cmp
jbe
push
data16
adc
add
xchg
xlat
iret
cmpsb
sbb
xlat
loope
mov
xlat
shll
mov
xor
int3
negb
int
orl
movsl
movsb
mov
ficoms
stos
pusha
push
jle
sub
inc
fiadds
stc
mov
mov
mov
popf
lahf
sbb
mov
add
mov
mov
cmp
or
sbb
inc
inc
mov
or
enter
mov
or
movsb
outsl
push
sub
pop
pop
hlt
xor
and
add
pop
movsl
xor
mov
add
sbb
or
pop
jo
repnz
xchg
lods
push
pop
rcll
enter
js
xchg
dec
loopne
mov
mov
cmp
pop
jae
or
imull
mov
cmp
daa
in
das
pop
xor
loop
mov
arpl
or
aaa
xchg
mov
or
xor
pop
das
ret
pop
pusha
jmp
push
or
sbb
mov
aas
negb
or
les
pop
stos
mov
push
daa
lods
sbb
mov
push
jmp
outsl
das
aad
pushl
into
mov
movl
mull
shll
sbb
pop
ret
mov
pushf
and
cmp
pop
shr
mov
fildl
std
sti
pop
sbb
cmc
push
mov
cmp
xchg
pop
into
cltd
js
push
pop
or
das
mov
arpl
xor
aaa
xor
mov
shl
inc
push
cltd
mov
pop
xchg
pop
cs
mov
or
xor
out
or
clc
popa
mov
in
imul
sub
lods
sti
stos
cmp
cli
cltd
jno
mov
cmp
cmp
xor
ret
mov
call
xchg
repnz
ss
scas
sarl
ret
inc
push
sbb
inc
xor
stos
shr
jge
pop
adc
sarl
aad
outsb
test
loope
clc
test
je
movq
mov
insl
and
jo
dec
ds
mov
mov
pop
out
mov
jg
and
shlb
jle
iret
repz
mov
lds
jmp
shr
cmc
pop
mov
divl
xchg
out
inc
ja
fidivl
ret
mov
or
sbb
aad
data16
movsl
fsubl
sub
sub
in
xchg
movsl
dec
scas
xchg
add
or
adc
add
pop
in
jns
sub
scas
pop
mov
xchg
lock
rorl
push
jne
movsb
mov
clc
pop
or
push
mov
xchg
dec
push
popl
jne
popf
sahf
dec
popa
sub
lret
divl
out
mov
ret
sbb
ja
enter
xchg
mov
cwtl
inc
add
lods
movsb
sbb
push
inc
cmp
cltd
cmp
and
out
bound
test
decl
mov
hlt
stos
jg
inc
xor
push
mov
adc
push
jne
fisubrl
add
push
movsb
fdivr
mov
mov
inc
mov
shr
dec
mov
mov
or
cwtl
mov
push
out
and
push
xlat
sub
repz
mov
cmp
cmp
cmpsl
or
loopne
xchg
in
mov
dec
adc
aad
sub
xchg
lret
test
les
xor
in
iret
fisttpl
lcall
scas
mov
movsb
push
push
cmp
rorl
inc
sub
fs
mov
pop
stos
inc
pop
dec
mov
sub
sbb
imul
adc
add
and
mov
adc
mov
int
rcll
sbb
ss
xchg
xor
inc
mov
fbstp
insl
xchg
dec
adc
push
scas
add
shr
xchg
rcll
into
and
mov
or
jp
cli
jo
movsl
ja
leave
cmpsl
push
pop
enter
cmpl
in
jmp
cwtl
es
cli
or
mov
cltd
xchg
outsl
gs
and
sbb
stos
test
cltd
mov
cmp
call
cmpsb
out
inc
mov
push
ja
sbb
jecxz
and
xor
mov
pusha
jecxz
test
push
fnstcw
jns
adc
orl
fcoms
and
xchg
loop
shlb
adc
mov
dec
pop
push
popf
xchg
pop
rcrb
incb
xchg
lahf
mov
push
mov
mov
imul
into
or
je
pop
mov
test
mov
add
adc
xchg
popf
inc
aaa
mov
dec
push
lock
mov
jge
fs
aas
sti
lret
les
sti
pop
icebp
xchg
adc
mov
popf
lret
or
cwtl
cmpb
pop
mov
frstor
orb
test
cmc
sbb
popf
leave
rcrl
in
sti
mov
out
mov
lods
cltd
cmpl
cwtl
mov
out
addl
mov
shlb
insb
sbb
mov
cs
sbbb
cmp
push
or
es
mov
std
xor
test
adc
nop
mov
push
arpl
mov
xor
dec
sbb
mov
out
test
mov
xchg
inc
fdivl
mov
sub
js
dec
icebp
or
adc
mov
imul
mov
js
unpckhps
mov
push
out
idivl
mulb
enter
push
roll
mov
xchg
dec
adc
dec
imul
push
shl
cs
push
fists
or
ficoms
cmp
adc
mov
rorb
and
in
mov
in
xchg
rcll
insb
shll
push
push
xchg
js,pt
jp
sti
xchg
mov
sbb
and
xchg
adc
xorb
mov
xor
lahf
test
pusha
mov
stc
lods
or
mov
mov
lcall
insl
in
pop
add
ljmp
pop
sbb
xor
push
movsb
push
leave
aam
les
movsb
sti
pop
cmp
gs
call
dec
mov
xchg
ret
push
cmp
imul
insb
cmp
push
lea
ret
mov
lods
fiaddl
leave
mov
insb
push
pop
loope
and
in
push
push
mov
dec
or
in
xchg
push
cmc
pop
cltd
jns
mov
arpl
cmc
ficomps
xor
ret
xor
out
push
test
push
gs
gs
add
and
loopne
mov
sbb
dec
arpl
sub
movsb
mov
add
add
aas
xchg
pop
js
mov
pop
arpl
adcl
jne
push
es
cmp
insl
sarl
or
jecxz
xchg
mov
lret
cltd
outsb
add
mov
in
cli
dec
pop
dec
dec
pop
cmp
push
pusha
jge
or
adc
sbbl
push
sarb
pop
push
dec
popa
pop
inc
movsb
mov
sub
rcrb
test
fistps
dec
lcall
repnz
xchg
xchg
rcll
xchg
das
pop
pop
out
cmp
lret
cmpsl
addr16
pop
cli
cmpsl
cltd
cltd
mov
jle
stos
dec
arpl
gs
jmp
sub
out
pop
push
inc
xlat
fs
fwait
mov
jp
clc
sub
cli
into
rorb
lods
in
fbstp
jp
dec
add
in
sub
pop
sub
and
je
xchg
and
movsl
out
mov
hlt
xchg
out
cmc
inc
test
icebp
or
pusha
xchg
cmp
and
in
sbb
dec
idivl
mov
lods
mov
ss
jmp
dec
add
xchg
aas
and
jbe
adc
aam
sbb
cs
lcall
xchg
jne
aaa
mov
out
or
and
pop
scas
fs
sub
mov
in
fmuls
mov
movsb
pop
adc
ja
lahf
nop
xlat
mov
icebp
push
jmp
jp
mov
cwtl
mov
out
cmp
loopne
add
scas
jne
adc
ja
inc
addr16
pop
adcb
push
dec
jnp
lcall
movsl
jp
jnp
repz
xor
sbb
shl
imul
jp
add
xor
sub
sbb
cmp
cwtl
xlat
in
in
sub
dec
adc
xor
stos
or
ret
shl
xor
out
mov
cltd
adc
shlb
dec
inc
aaa
int3
std
lcall
fadds
adc
loope
inc
imul
stc
xlat
lret
stc
stos
xchg
or
jnp
adc
mov
add
pop
push
jmp
data16
pop
fbstp
mov
sub
sbbl
inc
outsl
in
mov
xchg
xlat
subb
imul
push
and
decl
mov
inc
movsl
xchg
inc
leave
ljmp
add
insb
sbb
cmp
mov
fxtract
cmpsb
jne
mov
cmp
in
mov
adc
int
lahf
fisubrl
inc
ret
dec
decl
test
xor
pop
loop
xchg
scas
negl
fwait
xchg
mov
mov
insb
mov
pop
stos
push
bound
jae
call
inc
enter
jg
xor
mov
xchg
iret
push
lcall
mov
test
inc
xchg
aam
push
mov
push
cmp
decb
mov
out
enter
or
mov
ss
xcrypt-cfb
cmpsl
popa
and
into
punpckhdq
sbb
cmp
xor
xor
push
and
fidivrl
mov
lea
addr16
push
sub
mov
ret
cmpsl
dec
cs
mov
in
sbb
sahf
lcall
jae
add
movl
or
insb
in
jmp
adc
sbb
add
pop
lret
sbb
push
xor
jge
fstpt
aam
push
push
pop
add
lods
xchg
jo
jg
pop
loopne
call
cwtl
mov
adc
mov
in
data16
fnstsw
cmpsb
lcall
jl
lahf
jo
faddp
je
or
cmp
jp
movsb
and
lods
mov
sub
inc
lahf
sub
jg
loope
cmpsb
lret
addr16
nop
and
pop
push
xlat
jg
sarb
enter
add
in
addr16
cld
ljmp
and
dec
sti
or
iret
cmp
push
cltd
test
cmp
adc
lret
cmp
sub
aam
jb
jb
mov
dec
loopne
mov
mov
popf
push
push
mov
xchg
fnsave
xchg
test
call
test
pop
pop
popa
mov
sbb
lods
popf
lods
xor
xchg
push
and
or
push
cmp
dec
lret
xor
push
pop
rcrb
divb
jp
movsl
jg
inc
dec
cltd
fs
add
mov
das
xor
je
daa
push
fs
and
int3
mov
xchg
ud0
mov
test
es
mov
adc
pop
out
inc
imul
mov
sahf
mov
lret
jmp
cmpsb
cmp
out
push
std
aad
push
or
imul
push
mov
aas
stc
aaa
cmpsl
movsb
mov
add
or
add
mov
fistps
lret
rcrb
call
inc
popa
pushf
mov
dec
test
into
mov
pop
loopne
shl
and
jecxz
mov
sub
pusha
pop
cs
mov
bound
ret
ja
adc
and
fisubrs
sbb
ljmp
lods
pop
sub
and
imul
ficomps
pop
call
ljmp
fimull
pop
in
add
push
shll
out
mov
xchg
cmp
pop
xor
mov
mov
lods
xchg
sbb
sub
jp
xor
pop
add
shlb
es
jle
std
mov
push
das
loope
and
mov
mov
cmp
adc
ljmp
jl
cltd
jge
adc
insb
push
push
int3
stos
push
call
fstp
movsb
fadds
push
out
add
popf
mov
jo
xchg
iret
pop
mov
xchg
loopne
mov
mov
in
push
cmp
les
inc
inc
hlt
daa
jg
mov
sti
xchg
adc
jns
inc
movsl
dec
out
sbb
fwait
cmpb
dec
mov
sbb
fimull
test
push
lret
cld
jnp
shrb
or
mov
pushw
push
inc
pop
push
xor
fsubp
sahf
mov
and
mov
sub
pushf
fldt
test
in
push
mov
push
dec
out
xchg
sbb
and
mov
les
xlat
fdivs
call
push
push
aas
insl
pushf
xchg
das
push
outsl
push
and
aad
xor
pop
into
test
add
cmpsb
lds
and
add
mov
push
or
negb
mov
movsl
cmp
dec
movsl
in
scas
pop
lret
popf
loope
mov
int
fmull
jecxz
pop
iret
inc
xchg
inc
in
mov
fpatan
iret
mov
or
inc
pop
sub
stc
cmp
dec
mov
fs
jle
push
popa
outsb
loopne
adc
orl
inc
ss
imul
xor
pop
lods
test
cmp
jae
sub
hlt
ror
rdmsr
outsl
sbb
xor
sbb
iret
movsl
scas
or
or
aad
cmpb
xchg
and
in
fs
nop
adc
and
adc
jge
or
rep
arpl
lcall
sarl
leave
jle
loop
mov
rcr
sti
xor
in
push
sub
or
sti
inc
call
push
mov
cmp
lahf
xor
push
adc
mov
xchg
sbb
xchg
in
adc
mov
testb
loop
ja
jnp
dec
xchg
into
mov
repz
lahf
cs
xchg
or
call
push
std
out
or
testb
not
jno
pop
add
jbe
call
repz
jmp
nop
int3
test
lahf
outsb
subb
stos
cmp
aas
push
cmp
icebp
xor
fistl
fcomps
jg
test
lret
mov
data16
lret
not
test
cmp
jnp
dec
and
jmp
cmp
enter
stos
aad
insl
mov
or
pop
jae
sahf
mov
lods
mov
negl
gs
lods
sub
and
and
shlb
push
jle
xchg
jg
scas
hlt
xchg
push
iret
jmp
xchg
pop
popf
adc
je
jge
dec
cmp
fdivrp
ss
xor
push
outsl
sti
notl
pushf
xor
sub
jecxz
mov
ljmp
mov
mov
inc
dec
mov
test
mov
jno
jp
ret
mov
sahf
cmp
jge
imul
sub
daa
fidivrl
jo
mov
leave
mov
mov
xor
push
fmul
mov
or
cmp
leave
jae
bound
push
jae
sub
mov
mov
or
mov
sbb
xchg
mov
repz
outsb
xor
push
sub
mov
sub
adc
sbbb
pop
in
jo
shlb
sbb
loop
add
xor
push
push
add
lret
mov
mov
es
mov
and
xor
clc
shl
sbb
mov
mov
movsl
fwait
pop
jns
or
nop
fwait
push
sbb
pop
mov
xchg
add
dec
push
and
in
out
test
sub
cmp
push
pop
out
cmpsl
nop
mov
pop
imul
or
repz
adc
push
mov
test
les
mov
das
and
mov
or
or
cmc
imul
rolb
push
mov
inc
xor
xchg
shl
outsl
popf
mov
jae
push
inc
pop
xchg
jg
int
mov
jbe
cmc
adc
rorb
lock
xlat
movsl
sub
frstor
push
xchg
sbb
sub
lahf
push
mov
push
ds
mov
ja
jmp
adc
inc
ds
mov
mov
cmc
or
mov
cmp
into
pop
aam
pop
mov
out
lret
popa
cld
sub
iret
inc
mov
mov
and
mov
sub
cli
lret
jecxz
out
or
mov
push
mov
jge
lods
test
pop
fwait
enter
fld1
int3
cwtl
in
adc
push
subl
jl
fisubs
popf
or
xchg
iret
xchg
fimull
mov
adc
fs
inc
xor
cmp
jns
js
je
fists
out
mov
dec
xchg
jecxz
std
xchg
adc
jns
add
pop
sub
ss
loopne
leave
das
jnp
and
sub
andb
movsb
mov
adc
mov
mov
dec
sbb
pop
jb
orl
pop
gs
je
pop
pop
lods
add
push
sub
push
addr16
fcoml
into
fnsave
and
push
xlat
jle,pt
cmp
out
stos
adc
sbb
call
cmpsl
adc
dec
and
xor
push
xchg
int3
push
adc
mov
sti
mov
les
inc
addr16
dec
jge
iret
cmp
cmc
into
or
jno
fildl
fld
aam
test
sub
xor
push
or
sub
rorb
test
aam
hlt
std
or
psrlw
xchg
mov
dec
jge
das
mov
sbb
nop
jo
int
jp
lcall
jge
and
add
dec
inc
repz
sbb
fnstenv
or
js
les
or
push
pop
push
aam
pushl
xor
jne
ret
scas
subb
push
mov
lret
ficompl
hlt
inc
cld
test
inc
inc
cld
mov
repz
xor
rcll
fistps
and
push
in
loop
frstor
adc
jnp
ret
adc
loop
fisubrs
jno
ljmp
cmp
pop
cmp
ret
insb
push
pop
roll
jno
stos
int
cmp
movsb
sbb
and
mov
ret
or
js
movsb
push
and
mov
dec
lcall
dec
jne
adc
jo
cmp
pop
insb
adc
sub
jns
lea
jnp
addb
stos
push
or
aas
push
dec
mov
add
movsb
and
outsb
xchg
in
fidivrs
mov
test
pop
mov
dec
out
das
pushf
fwait
mov
pop
mov
rep
mov
lods
les
aas
cmp
cmc
aam
sbb
fiaddl
add
sahf
lods
sbb
push
mov
push
or
dec
jne
and
test
push
lock
lods
push
cmpsb
inc
cmp
rcll
or
xchg
std
test
or
fstpt
add
mov
adc
mov
mov
dec
inc
cmp
ret
addr16
insb
and
xlat
daa
mov
std
mov
inc
mov
fs
pop
sahf
std
popa
ds
sbb
jp
call
sub
imulb
inc
adc
arpl
add
cmp
lods
jecxz
lcall
enter
xchg
mov
dec
xchg
cwtl
sti
adcl
cmpsl
xlat
xor
movsb
xor
push
adc
je
inc
or
dec
push
jp
mov
inc
dec
cmp
or
scas
repnz
repz
inc
push
jne
sahf
xchg
outsl
andl
mov
in
icebp
or
adc
loope
mov
add
iret
stos
test
add
test
dec
movsb
and
mov
les
das
sub
cltd
mov
shlb
int
inc
adc
cmp
and
xchg
fs
or
iret
mov
gs
mov
das
data16
cmp
adc
pushf
and
in
out
cmp
fwait
push
push
andb
in
xor
adc
loop
shlb
xchg
push
dec
shrl
stos
mov
stc
pusha
push
fs
test
mov
negb
ret
ror
lcall
dec
mov
test
cmc
sub
adc
adc
and
cmp
shlb
jnp
imul
xchg
in
push
xchg
dec
jge
inc
sub
jns
clc
lock
inc
dec
pusha
outsl
mov
fimuls
inc
sub
and
dec
fadds
aam
sub
dec
cs
mov
out
add
inc
rolb
inc
xor
sbb
shrb
push
add
cld
int
stos
push
in
sbb
cmp
bound
jecxz
movsl
jmp
pop
xchg
dec
jb
cmpsl
pop
jg
and
add
pop
ret
push
or
pushf
add
add
xchg
fucomp
test
mov
sub
scas
cmc
lock
in
ret
jno
jmp
gs
sub
ljmp
or
pop
pop
inc
leave
shl
xchg
fsqrt
cld
mov
sub
int
pop
xor
call
lds
sbb
pop
and
xchg
adc
sti
lods
dec
inc
cmp
cmpl
sahf
xchg
cpuid
shll
mov
mov
inc
sbb
xchg
xor
fisubrl
inc
int3
sub
les
add
lods
rclb
xor
loope
adc
xor
ficoml
mov
fldt
popf
lock
int
ficomps
push
mov
pop
sbb
lea
push
or
out
mov
sbb
notl
test
push
adc
fimull
jmp
cmc
arpl
shll
xor
arpl
adc
xor
dec
xchg
inc
pop
test
fwait
or
mov
into
cltd
inc
or
mov
outsl
mov
out
dec
pusha
add
aam
rcll
test
mov
dec
sub
mov
imul
roll
sub
lods
xorl
stos
repz
rep
icebp
xor
xchg
into
mov
mov
pop
lcall
jne
je
test
cmp
mov
clc
sbb
pop
cwtl
sbb
xchg
pop
cmp
imul
or
dec
iret
pop
cmp
mov
push
pop
adc
imul
cli
adc
sbb
lahf
movsb
inc
sahf
mov
cmc
or
add
mov
mov
sahf
stos
cmpsl
data16
roll
stos
xchg
jns
adc
dec
outsl
pop
mov
scas
mov
pop
test
adc
pop
or
es
xchg
insl
stos
scas
pop
sbb
mov
mov
mov
rcrb
jg
out
adc
test
dec
lods
and
add
sub
or
sti
xchg
inc
js
sbb
popa
fstpl
sub
fmull
clc
lea
mov
xor
and
fdivl
cmp
aas
mov
pop
movsl
outsb
dec
pop
dec
xorb
and
xor
adc
sbb
jmp
je
xchg
adc
adc
stos
pop
or
mov
sub
int3
popa
inc
mov
pushf
sbb
xor
subb
pop
sub
push
cmp
or
add
xchg
xchg
adc
lock
push
aam
int3
mov
test
lds
push
jmp
push
add
jnp
mov
mov
push
push
aaa
push
mov
xchg
and
out
adc
jno
aam
jl
scas
add
add
push
mov
mov
cmc
push
int
cmpsb
inc
enter
es
loop
lea
pop
andl
cli
ficomps
popf
mov
into
cwtl
xchg
mov
dec
shlb
push
push
in
cmpsb
lahf
sbb
and
jmp
ret
jmp
nop
xchg
arpl
inc
mov
loop
dec
sub
ret
loopne
jo
fstl
pusha
les
or
jno
or
jbe
sti
push
or
es
mov
and
mov
arpl
aam
shlb
pushf
out
imul
jns
insl
imul
mov
leave
enter
cmc
sub
fists
std
dec
shll
jnp
ds
arpl
test
push
subl
sub
fsubs
mov
lods
aad
lahf
adc
mull
lods
cmp
cmpl
sarb
pop
enter
cmc
test
es
fs
adc
daa
and
das
mov
jno
pop
icebp
push
mov
ja
lds
pop
shr
nop
jbe
adc
out
ljmp
fisttpl
jge
cmpl
fdivrs
lahf
push
cmp
adc
insb
mov
cmpsb
lea
and
jp
dec
mov
lock
stc
pop
jne
push
mov
mov
mov
adc
sbb
dec
pusha
fdivp
in
orb
aam
je
xchg
lret
repz
cwtl
push
sbb
xor
shrl
das
mov
mov
movsb
dec
pushf
mov
push
ret
pop
pop
mov
or
and
and
mov
and
gs
mov
jp
lods
or
and
mov
cli
xor
stos
in
subb
push
aaa
enter
sti
imul
fisubrs
fwait
xchg
call
inc
call
loope
shlb
std
inc
inc
out
cmpsb
and
jnp
pop
mov
push
daa
repz
test
out
jae
insb
add
loope
cwtl
pop
jp
call
cmp
movsl
pusha
push
push
rorb
jg
inc
stc
daa
cmpsb
or
cmp
mov
dec
fstpl
add
mov
sbb
xor
out
xor
ss
and
lds
movb
sbb
aam
mov
xor
or
xchg
push
movsb
out
out
push
lods
xchg
inc
mov
faddl
sbb
xlat
jmp
fsubs
pop
ds
xor
adc
jl
imul
sbb
lock
xchg
sub
call
fsubrl
outsb
push
les
scas
mulb
in
aad
push
icebp
cmpb
test
inc
mov
pop
sbb
mov
or
cmp
dec
cmp
nop
mov
adc
mov
add
imul
nop
adc
into
adc
sbb
fs
push
mov
jl
add
repnz
and
lret
push
xchg
pop
or
sub
into
push
insl
pop
cmp
test
push
mov
sbb
stos
loope
aaa
fistpl
pop
mov
xchg
stc
push
cmp
test
mov
stc
insb
sub
inc
pushf
pushf
jge
loope
sarb
stos
mov
leave
mov
les
filds
mov
or
pop
or
loop
outsl
pushf
aam
mov
adc
subb
push
movsb
ret
fisttpll
mov
xor
add
int3
insl
mov
dec
int3
push
xchg
in
push
jae
test
dec
push
mov
xchg
jmp
movsl
dec
xchg
adc
mov
fucomp
in
jg
insb
sub
nop
in
xor
aaa
jno
adc
cmp
popa
pop
fwait
mov
loop
push
fmulp
scas
out
in
lahf
dec
call
xor
push
mov
xor
js
mov
jb
sub
dec
sub
pop
imul
jge
cmp
xor
in
cmp
dec
jbe
bound
outsb
ljmp
mov
pop
push
jge
xor
add
or
out
push
out
in
mov
hlt
imul
sbb
inc
or
sbb
pop
fiaddl
ficompl
pop
push
mov
jp
push
xor
shr
or
subl
lahf
push
test
imul
sbb
out
cltd
into
inc
jo
iret
pop
pop
outsl
jb
mov
pop
jno
dec
mov
ds
je
mov
push
or
cmp
or
sbb
cmpsb
push
xchg
jmp
rcrl
inc
jns
sti
loope
push
nop
stos
out
inc
loop
sti
test
dec
add
in
rcrb
mov
out
pop
push
sub
push
and
mov
cmp
or
adc
and
inc
hlt
mov
iret
and
inc
mov
ljmp
orb
jno
dec
xchg
aaa
popl
push
and
dec
mov
movsl
pop
xchg
mov
ret
mov
lcall
sbb
xor
dec
and
hlt
pusha
jae
mov
pop
out
out
mov
cmc
mov
cmp
mov
daa
and
in
enter
out
dec
pushl
mov
inc
pop
push
and
insb
fsts
fdivrl
mov
cs
rorl
lcall
popf
in
xchg
or
mov
jns
jne
and
cmpsl
into
test
es
inc
outsb
fldcw
dec
xor
cmpsb
incl
sub
xor
add
mov
ret
pop
fistps
mov
lds
mov
jo
and
das
jnp
sbb
add
loope
mov
xchg
lcall
xchg
xor
jmp
insl
dec
fldlg2
fldenv
and
mov
jg
fcmovu
mov
adc
mov
cmpsl
add
roll
push
ljmp
sahf
sbb
mov
call
fwait
outsl
cmp
add
cs
mov
jbe
pushf
shl
scas
shlb
and
and
aaa
or
or
icebp
fs
jne
lea
cld
cmpsb
mov
xchg
cmp
pop
inc
pop
sti
inc
xchg
xchg
fcom
jecxz
fimuls
loop
fcoms
bound
dec
and
loope
gs
ja
loope
xchg
dec
and
xchg
movsb
push
jmp
insb
mov
inc
filds
test
xchg
jecxz
pop
jnp
pop
xor
mov
out
in
pop
and
stos
xchg
jbe
pop
fstpt
inc
in
lret
int3
xor
lret
ret
insb
mov
dec
mov
jb
xchg
jns
jmp
rcll
cmpsl
negl
lret
or
jbe
in
rcrb
cmp
in
bnd
gs
cmp
cmp
jb
xor
fadds
push
nop
ja
mov
xor
jnp
sahf
push
sti
push
pop
cmpsl
imul
shlb
rcrb
cmpsb
icebp
mov
mov
add
icebp
gs
out
mov
nop
fsubrs
cmp
fwait
jmp
sbb
mov
xor
faddl
out
dec
insb
in
cmp
sbb
outsb
daa
je
jo
aaa
orl
or
push
sti
sub
idivl
push
shlb
in
cs
pop
movsl
jge
sub
jnp
jge
cmpb
xor
outsl
lea
dec
fimuls
inc
out
adc
jecxz
xor
mov
pushl
sbb
adcb
xchg
fisttpll
mov
xchg
fcomps
in
bound
push
sbb
or
push
pop
add
push
mov
loop
push
mov
jo
scas
scas
push
fstps
sbb
lea
gs
sub
adc
pop
pop
hlt
xor
mov
fwait
imul
mov
mov
xchg
stos
mov
dec
mov
or
xchg
mov
cmp
mov
mov
sub
inc
scas
sbb
adc
mov
das
call
sarl
pop
test
sbb
mov
push
scas
jne
frstor
jle
jle
mov
fsubrs
xchg
aas
cwtl
loopne
fstpl
xor
loop
rorb
and
ja
insb
mov
pop
test
mov
loopne
inc
stos
push
mov
les
in
pop
mov
xor
outsl
push
stos
popl
repnz
xor
ja
icebp
adc
sbbb
or
jmp
insl
aad
push
stc
push
test
rolb
loope
lret
aad
ficomps
neg
mov
lds
popf
lea
ss
and
push
xchg
ljmp
mov
in
cmp
loopne
xor
pop
jnp
dec
push
inc
flds
sub
orl
sub
test
arpl
jle
orl
test
in
loopne
jecxz
cwtl
push
aam
out
sbbb
xchg
jge
cwtl
and
sbb
dec
test
xor
in
or
mov
adc
push
push
cmp
push
stc
mov
adc
rcr
leave
mov
iret
sbb
mov
cld
fdivrs
cmp
hlt
and
cld
in
test
test
cmc
xchg
outsl
insb
sbb
mov
out
lcall
lds
aad
xchg
mov
out
mov
popa
jge
test
push
roll
in
ss
jb
mov
in
or
iret
push
inc
fwait
ljmp
icebp
push
mov
cmp
sub
shll
jae
mov
xchg
mov
test
lahf
mov
enter
add
insb
dec
jno
push
cmp
rcrb
xor
sub
mov
fildll
repnz
stos
ss
pcmpgtd
adc
xor
sti
icebp
xor
xchg
outsl
and
fs
jo
mov
dec
mov
jge
push
mov
ret
out
sbb
inc
sbb
imull
mov
insl
aaa
aad
pushf
xchg
xchg
popf
popa
sub
icebp
cli
push
sub
das
ret
cmp
xor
ficomps
aaa
xchg
std
jns
fldcw
test
test
adc
xchg
inc
outsb
sbb
push
mov
bound
mov
call
cltd
stc
adc
jae
cmp
cmp
or
jle
les
sub
and
repz
mov
xchg
movsb
imul
lcall
scas
xor
inc
jle
stc
fisubrl
popa
aas
mov
jge
adc
sub
pushf
or
es
std
cmp
mov
lea
popa
cmp
jl
xchg
cltd
or
mov
movb
adc
pop
cli
add
jp
test
pop
scas
lock
push
inc
arpl
push
xchg
xchg
into
adc
pop
jnp
xor
ja
cmp
xchg
jb
adc
std
test
mov
or
jne
xor
sub
sub
inc
cs
mov
test
loop
push
bound
cmp
dec
loop
shrl
stos
pop
pop
push
jmp
pop
lret
int
ljmp
jbe
sub
add
call
imul
mov
inc
mov
rcll
push
xor
or
das
or
xor
or
push
je
hlt
xor
pusha
cmp
adc
mov
clc
mov
fwait
jp
dec
mov
xlat
in
xchg
pop
popf
adc
mov
in
and
cwtl
and
outsb
push
pop
pop
ficomps
pop
out
pop
mov
lret
xlat
mov
insb
adc
or
insb
repz
push
fstl
pushf
inc
jbe
stos
ja
pop
or
inc
mov
pop
je
or
aaa
mov
loop
das
fbstp
cmp
ret
loop
jb
popf
sub
scas
ficompl
add
mov
and
out
adc
ret
mov
add
shll
lret
cmp
in
mov
jecxz
jge
push
in
imul
and
cmp
sbb
roll
and
and
xor
xchg
cmp
stc
shrb
adcb
pop
dec
mov
mov
lea
adc
das
and
ret
les
mov
cmc
outsb
inc
sbbl
test
mov
cs
pushf
lds
cmc
stos
mov
aaa
push
cs
and
lds
jne
fcom
repnz
jae
lcall
mov
pop
jmp
fidivrs
xlat
sub
sub
ret
jns
and
adc
mov
adc
cmp
pop
or
div
mull
lods
xchg
sbb
in
push
xchg
dec
cmp
pop
rol
int
jecxz
inc
cltd
loopne
cmpsl
jnp
in
test
aad
fs
dec
in
sahf
cmp
jnp
mov
cmpsl
test
cmp
ljmp
cmpsb
fiaddl
int
test
push
add
mov
cld
inc
mov
inc
lcall
ret
out
ljmp
popa
in
and
jb
adc
xchg
jno
jl
xor
sub
outsb
mov
pushf
mov
shlb
in
cmc
inc
int
push
arpl
cs
ret
shr
sbb
icebp
decb
ficompl
push
or
test
negb
rorb
pop
xor
push
incb
test
scas
xchg
jbe
xchg
inc
leave
rorb
cmovl
ror
mov
xchg
out
adc
mov
mov
ds
sbb
gs
push
mov
je
push
add
mov
mov
test
sbb
xchg
add
mov
shll
lds
inc
fwait
xor
arpl
add
aad
lret
arpl
mov
popf
xor
mov
loope
mov
sti
push
xor
in
jecxz
cmp
enter
ljmp
fsubp
dec
xchg
push
mov
call
test
insl
popf
sub
in
ror
jno
mov
arpl
dec
lret
mov
lods
sbb
call
in
xchg
insb
mov
outsb
pop
daa
inc
aad
lock
dec
dec
or
gs
and
lods
rcrb
mov
xchg
jbe
stc
aam
pop
push
pop
add
movsb
mov
jl
lods
jl
testb
sbb
imul
in
fidivrs
decl
daa
lahf
push
xchg
add
inc
push
xchg
sub
fsubrl
inc
pop
xlat
scas
xor
fmuls
xchg
push
mov
mov
int
divb
dec
inc
dec
mov
mov
outsb
call
pop
mov
jge
inc
fs
cmp
fists
jp
ds
rcrl
inc
mov
dec
sub
pop
insb
in
dec
or
push
popa
mov
cmp
xchg
vpandn
pop
mov
outsb
test
push
inc
loope
sub
xlat
mov
lods
rclb
les
cmp
xchg
fdivs
pop
js
ds
outsl
mov
pop
mov
aad
addr16
fcoml
cltd
inc
aaa
test
add
clc
mov
ds
xor
repz
jl
vaddsd
iret
inc
inc
dec
sbb
in
popf
xlat
mov
cs
je,pt
sub
ds
dec
out
lret
mov
jge
ljmp
icebp
or
jnp
xchg
scas
mov
pop
sub
add
bound
mov
mov
leave
test
inc
cli
mov
ret
xor
mov
jno
adc
xchg
cli
aas
int3
into
xchg
xor
fnsetpm(287
out
mov
inc
and
dec
fnstenv
rcrb
jns
dec
cltd
addr16
push
outsb
cmp
test
cmp
in
addr16
leave
clc
stos
daa
std
aas
mov
push
insl
and
sbb
movsb
repnz
mov
js
inc
loop
popa
push
testb
adc
push
xchg
fwait
pop
xchg
movsb
fcmovnu
dec
icebp
sbb
lods
jmp
je
mov
fsubrs
xchg
ficoms
cmpsb
jne
xchg
imul
movsb
pop
fistps
mov
int
adc
xor
inc
flds
push
xchg
fnstsw
mov
xchg
mov
leave
addr16
xchg
ljmp
rclb
mov
push
xchg
pop
or
andb
pop
out
int
lods
imul
push
adc
repz
lods
jbe
mov
sub
repz
loop
push
pop
cld
std
mov
int3
int3
lea
pop
xchg
fidivl
sbb
inc
push
push
xchg
xchg
idivl
roll
cld
repz
cmp
xchg
or
leave
jbe
jne
jge
in
push
push
daa
push
and
mov
adc
fcomp
mov
xchg
test
popf
or
lret
mov
jns
clc
mov
mov
xchg
subl
jg
inc
and
sub
imul
cmp
xlat
sub
dec
xor
negb
sub
sbb
dec
pop
fs
sbb
push
or
fmul
cmp
xor
xchg
cmc
xor
imul
jbe
lods
mov
pop
outsl
data16
inc
sbb
lock
sbb
add
jnp
push
das
jge
into
daa
jmp
add
stos
xor
jne
popa
aam
popf
movsb
push
jecxz
lds
mov
repz
xchg
dec
std
cmp
adc
incl
les
sar
popl
fisubl
hlt
xor
fcmovbe
or
decl
jno
rclb
outsl
stos
jle
mov
jmp
mov
ja
lea
mov
mov
sbb
adc
sub
ljmp
je
cmp
adc
fst
push
push
mov
jb
dec
or
stos
mov
aam
std
and
test
outsb
popa
scas
lret
xlat
push
dec
add
neg
or
mov
stos
pop
or
cltd
add
icebp
popa
push
outsl
and
cmp
add
adc
imul
clc
sbb
jle
aaa
dec
fsubrs
and
lods
pop
mov
test
adc
dec
or
cmp
dec
cli
xorb
fcmovb
dec
int3
pop
repz
bound
test
sbb
xchg
test
push
dec
clc
ds
std
xchg
dec
dec
js
push
mov
sbb
dec
mov
lds
es
dec
mov
aas
cltd
jne
data16
jmp
xchg
push
ljmp
push
bound
out
fdivs
xchg
shrl
jno
stc
bound
idivl
lret
cmpsl
and
dec
pop
outsl
cmpl
fwait
or
lods
lahf
jnp
daa
pop
xlat
cmp
pop
std
pusha
ficompl
cmp
inc
dec
clc
and
int3
mov
leave
mov
push
add
bnd
stos
or
into
scas
je
dec
jmp
push
xlat
aam
jg
das
in
xor
lret
je
test
sbb
dec
mov
xor
cwtl
jno
mov
mov
and
sbb
adc
in
or
push
and
pop
xchg
lods
rol
ljmp
jne
in
jmp
xlat
pop
cmc
enter
jb
mov
and
test
and
add
xchg
loop
jb
gs
sub
dec
clc
cmp
into
enter
cmp
out
cld
daa
jne
jl
mov
and
fnstcw
dec
jl
addb
cli
std
aaa
mov
push
jne
ret
fsubrl
push
jl
fildl
mov
jge
dec
jo
push
inc
sub
fistpll
add
sbb
xchg
enter
add
cltd
mov
pop
testl
leave
xchg
lock
and
std
dec
sbb
hlt
mov
movsb
mov
add
xchg
aas
xor
out
daa
xor
pop
mov
inc
in
jecxz
mov
mov
push
out
cs
or
fmul
stc
gs
jo
testl
dec
push
mov
in
mov
loopne
dec
mov
out
gs
daa
xlat
push
pop
cmp
xchg
add
leave
and
mov
mov
sbbl
cs
jge
fmull
add
adcb
cmp
dec
inc
mov
sar
dec
adc
lods
push
mov
stc
and
jnp
xchg
dec
popl
sarb
loop
or
xor
sbb
cmc
xor
cmp
mov
adc
mov
scas
push
outsl
addl
adc
fdivr
hlt
shl
out
aas
xchg
bnd
mov
ss
add
adc
cmp
iret
jp
cmpl
push
jne
mov
push
mov
cwtl
xchg
mov
and
scas
dec
mov
mov
sbb
mov
inc
loop
pop
out
fisttps
or
dec
gs
fstps
xor
aas
sub
sub
xor
mov
xor
xorb
repnz
in
xor
sbb
dec
cmp
shlb
cwtl
outsb
loopne
dec
mov
lock
sub
and
test
imul
sub
scas
add
xlat
xchg
fidivs
scas
cmpsb
lock
outsb
loope
xor
dec
adc
sub
mov
pop
sbb
rcll
sub
xchg
xchg
imull
xor
aaa
inc
sub
mov
scas
mov
and
or
adc
add
sub
ja
inc
jb
flds
adc
add
test
mov
js,pt
mov
je
roll
or
xor
dec
or
xor
test
mov
fbld
xor
mov
jmp
push
push
fdiv
jg
test
fnstenv
mov
jecxz
add
hlt
aaa
or
sub
pop
sbb
and
aaa
sbb
mov
pusha
mov
xlat
daa
jge
aad
int
sbb
iret
movsb
fmuls
pop
push
shrb
popa
cmpsb
mov
ficoml
adc
dec
dec
sbb
jo
cmpsb
lret
aas
mov
inc
add
xchg
ljmp
dec
sbb
jecxz
ja
cmc
pop
scas
int
jle
pop
adc
ret
imul
mull
shlb
test
in
mov
int
xchg
inc
mov
pushf
jbe
xor
jno
call
mov
sahf
nop
aad
cmp
pop
adc
stc
or
in
mov
mov
xchg
cmpsl
pop
mov
mov
test
pushf
ja
in
add
add
imul
frstor
test
pop
fidivl
rcrb
int
jl
sub
inc
test
out
daa
jnp
loop
fnstenv
aam
xor
push
cmp
jb
dec
sub
sahf
mov
push
fcomps
out
sub
insb
stos
stos
stc
and
dec
cmp
adc
mov
or
shrl
shll
popa
mov
lods
jmp
jae
fwait
dec
fs
aaa
cmc
push
jbe
call
cld
inc
js
int3
cmpsb
adc
adc
inc
addl
dec
lahf
pop
sahf
pop
rorl
cmpsb
mov
or
hlt
ret
adc
pop
cmp
stos
cmpl
inc
insb
insb
icebp
ds
adc
lods
xchg
sbb
dec
sarl
addr16
xor
in
cmpsl
push
sbb
in
insb
push
lea
jae
sub
pop
or
lods
lret
hlt
pusha
fisubs
pushf
adc
mov
cli
insb
mov
icebp
je
fwait
inc
sbb
jo
jmp
xor
aaa
add
sub
or
xchg
insb
out
mov
arpl
scas
lret
fstp
ret
mov
int3
push
jno
andb
adc
fisubrs
inc
mov
pop
cmp
xor
call
or
xchg
sub
adc
mov
mov
imul
and
cmp
mov
mov
mov
xchg
or
mov
mov
dec
fwait
jno
xor
idiv
es
sarb
mov
loop
andl
pop
and
fcomip
das
fisttpl
and
nop
or
cmp
pop
jp
cmp
inc
and
cs
or
call
add
xchg
dec
and
arpl
movsb
insb
cltd
test
mov
cs
sub
outsb
or
xchg
stos
sbb
fstpt
mov
rolb
fs
fnstcw
jle
mov
into
sub
lcall
mov
movsl
loop
pop
lock
pop
push
xlat
adc
xor
enter
dec
xchg
push
cmp
mov
inc
sub
pop
fsubs
push
test
and
gs
pop
icebp
test
mov
nop
outsl
push
je
pop
cltd
fiaddl
and
stc
and
aam
sub
pop
push
xchg
lret
lret
scas
or
inc
mov
fninit
insl
cwtl
sahf
mov
xor
andl
jbe
int3
add
sbb
jp
mov
in
pop
dec
les
and
ret
repnz
fstpt
mov
shlb
pop
adc
or
push
cmp
loope
sbb
dec
out
pop
movsb
lahf
and
xor
std
cmp
addl
mov
sldt
lods
outsl
xor
jle
xchg
add
test
push
sbb
arpl
push
aad
lea
inc
pop
addr16
cmpsb
mov
imul
aaa
outsb
movsb
adc
int3
fcoms
lea
xchg
aad
in
aam
or
cmp
mov
fcoms
into
stos
std
stos
popa
insb
mov
mov
loopne
lcall
gs
lret
dec
iret
jmp
daa
gs
mov
pusha
dec
cmp
jp
hlt
adc
jl
scas
push
cmp
lods
sbb
loopne
test
pop
dec
test
pop
xor
mov
inc
arpl
xchg
aam
mov
ret
pop
sub
pop
mov
xchg
cmp
fwait
dec
fidivl
mov
fidivrl
push
clc
sbbb
sbb
insl
in
fs
push
sub
jnp
ss
sbb
in
pop
ret
pop
lea
push
fucom
mov
push
xchg
aas
push
adc
add
mov
mov
cld
jecxz
fcmovne
and
ret
outsb
xor
sbb
outsb
bound
xor
dec
mov
enter
sub
push
fadd
mov
mov
aaa
enter
lret
sbb
decl
add
sub
dec
xchg
push
in
insl
push
xchg
sub
popa
pop
sahf
or
mov
xchg
popa
jmp
int3
ret
dec
mov
cmp
mov
ss
or
cmp
roll
aaa
lret
movsl
add
push
fs
mov
out
enter
loop
scas
adcl
jb
testb
jle
clc
or
lods
mov
es
cmp
pop
cmp
nop
insl
inc
sub
cltd
lock
js
fcmovb
pop
icebp
xor
mov
mov
daa
cmp
out
stos
std
xor
cli
leave
leave
movsl
insb
movsb
lcall
cmp
sbb
popa
or
jb
xor
int
dec
data16
cmp
test
and
sbb
inc
sub
aas
or
icebp
inc
cmp
ljmp
or
cmp
sbb
xlat
cmp
and
mov
jbe
xor
add
aad
ret
mov
pop
fistpll
add
jmp
mov
fs
sbbl
movsb
push
nop
rorl
and
loop
and
dec
push
dec
loopne
repz
push
in
in
push
push
stc
in
lahf
insb
dec
shrl
fwait
sbb
push
inc
mov
add
mov
mov
jne
push
adc
xchg
push
popf
and
icebp
jae
fwait
das
insl
cmp
adc
jbe
les
xchg
mov
sbb
lods
add
call
shlb
mov
mov
inc
jle
xchg
sub
adc
pushf
push
ljmp
stos
cwtl
aam
leave
pop
lret
stos
sub
dec
cmp
push
mov
repnz
mov
mov
xchg
mov
das
xchg
pop
rorl
jg
mov
orb
pop
clc
jb
mov
sub
repz
fmuls
in
xor
sti
pop
aad
and
cmp
push
inc
nop
sbb
adc
xor
loopne
ljmp
cmp
jbe
mov
or
lret
adc
xchg
test
jmp
inc
xlat
adc
jb
dec
cmc
mov
mov
sbb
ja
subb
and
add
das
popf
test
movsb
sub
rorb
stos
mov
xor
test
and
cmp
test
mov
movsl
pop
les
sbb
dec
add
lds
pushf
cmp
or
je
push
sub
mov
jns
mov
mov
insb
sbb
xor
mov
pushf
std
mov
pusha
fmuls
push
mov
add
ret
mov
cld
adc
dec
sbb
and
or
rcr
jae
sbb
pop
sbb
into
add
aam
pop
sub
xchg
lds
daa
mov
in
je
or
dec
mov
lret
enter
in
int3
in
xor
adc
sub
std
jge
rcrl
add
test
add
insb
push
xchg
or
pushf
pop
std
xor
dec
jle
inc
test
and
int
inc
notl
xchg
icebp
popl
cmpl
int3
mov
movsl
ret
fistps
aas
js
pop
mov
and
mov
daa
jno
mov
sahf
aam
jge
ljmp
ljmp
repnz
gs
lcall
aam
xchg
jbe
push
jnp
inc
imul
dec
lret
lret
aaa
push
in
int
popa
xchg
test
jnp
imul
lret
sbb
adc
clc
cwtl
mov
inc
orl
push
xchg
pop
xchg
arpl
mov
out
gs
push
xchg
dec
pop
outsl
pop
cld
nop
in
mov
add
in
cmpl
sbb
es
nop
pop
out
adc
jne
xchg
stc
mov
sahf
stos
and
xchg
jp
ljmp
pop
xchg
mull
imul
mov
aas
add
rorb
mov
daa
call
jns
negb
addl
cmp
test
addb
lret
mov
out
imul
xlat
xor
stos
pop
push
push
adc
mov
or
sbb
out
out
pop
or
mov
enter
pop
mov
adc
lds
push
dec
sarb
jecxz
sti
push
cmp
test
icebp
div
dec
cmpsb
dec
mov
test
jae
mov
mov
repz
aam
mov
jns
cmpsb
cld
add
sarb
push
fnsave
pop
jmp
mov
jl
ljmp
push
stos
pop
iret
incb
in
pop
fwait
adc
mov
xchg
int3
fstpl
aam
sub
and
and
cmp
sbbl
and
nop
push
jge
sub
cwtl
xor
out
xor
or
and
pusha
xchg
shll
and
mov
das
orb
je
push
xchg
movsb
or
aam
push
mov
popf
mov
lods
jae
mov
loope
insb
push
or
mov
mov
repnz
fwait
int3
fldenv
mov
icebp
xor
cmpsl
out
inc
dec
push
xor
out
push
mov
lret
jg
ja
and
out
lods
dec
lret
jne
cmpl
lret
jp
or
hlt
jbe
mov
mov
pop
mov
notb
cld
mov
in
mov
popa
push
push
cmc
loop
jnp
cmpsb
ret
push
js
mov
popa
pushf
lret
shrb
jno
cmp
out
cli
inc
in
inc
into
jecxz
gs
sarl
xchg
movsb
mov
cmpsb
aas
sub
xlat
sbb
out
push
cmp
ror
cmp
gs
push
xor
and
jae
jg
xchg
mov
rcl
aam
mov
loopne
push
mov
cld
adc
xor
in
movsb
pop
dec
dec
inc
jb
pop
pushf
nop
jbe
rolb
push
stc
sti
mov
or
sub
xchg
lods
adc
iret
jae
clc
jne
inc
and
repz
push
lcall
in
push
lods
rclb
xchg
push
scas
adc
dec
mov
or
fists
inc
fstps
cmp
xor
int
mov
mov
lods
addr16
cmpsb
add
mov
push
ret
pop
icebp
or
fucomp
inc
cs
sub
cmp
pop
and
insl
or
mov
hlt
mov
push
pop
mov
int
xchg
cwtl
aaa
lret
lods
ss
hlt
push
imul
arpl
lds
jl
std
xor
aad
ds
cmc
pop
dec
and
mov
lcall
mov
outsb
sbb
xlat
adc
inc
dec
mov
pop
add
outsl
push
test
jmp
mov
pop
int3
lods
stos
jb
jp
push
mov
leave
mov
dec
daa
fimull
and
jl
mov
adc
mov
push
dec
or
mov
arpl
je
outsl
shll
in
or
aam
dec
pop
push
addl
out
cmp
jmp
fwait
adc
movsb
mov
sub
sub
xor
sub
mov
mov
in
cwtl
rcl
jp
in
push
mov
mov
dec
or
pushf
xchg
in
outsb
fwait
lahf
push
cmc
mov
and
mov
pop
outsl
fisttpl
scas
jnp
sub
push
sub
rcr
loopne
cld
stos
xor
rclb
push
push
mov
mov
test
jnp
mov
pop
or
dec
add
fsqrt
adc
stos
int
out
dec
subb
sbb
mov
ficompl
push
mov
fldl
mov
lds
mov
lds
and
push
pop
sub
divl
xchg
es
jp
jno
mov
inc
jne
jbe
mov
push
cmpsl
ja
xor
add
loope
mov
test
mov
stos
movsl
and
cs
push
fildl
cmp
dec
mov
lods
mov
and
jno
adc
test
outsb
lds
and
dec
cmp
bswap
inc
or
or
mov
mov
dec
add
loop
adc
rol
or
fsubs
bound
movq
loope
xchg
sub
sub
sub
jnp
movaps
mov
pushf
mov
mov
aam
cmp
jo
mov
jae
sarb
icebp
out
pop
in
sub
jmp
inc
push
or
mov
mov
scas
mov
push
inc
adc
mov
daa
out
rcr
pusha
ret
mov
push
cmp
add
cmpsb
dec
fsubl
add
fwait
add
lds
inc
scas
cs
push
cli
ds
mov
gs
stos
xchg
mov
outsb
dec
sbb
or
sub
fidivl
ds
ja
push
fldt
mov
ficompl
popf
in
dec
lods
push
insb
jno
mov
lock
jl
adc
inc
fldl2t
mov
test
and
int
test
roll
mov
lods
sahf
sbb
test
lods
pusha
call
pusha
mov
jb
adc
lea
add
lret
jb
arpl
aas
pop
xchg
mov
sbb
movswl
dec
pop
dec
loopne
dec
pop
jb
arpl
xor
mov
vmwrite
sbb
in
frstor
out
insl
cmovo
shlb
or
rcll
fsubs
add
fwait
inc
inc
xchg
icebp
cmp
cltd
imulb
cmp
repnz
inc
xchg
cmpsl
lcall
aam
insb
dec
iret
lds
add
scas
insb
hlt
fildl
loop
mov
lcall
incl
std
mov
hlt
ja
in
mov
fdivl
inc
bound
scas
lods
cmpsb
lahf
dec
cli
cltd
push
nop
jl
or
adc
inc
adc
lock
in
add
sub
pop
inc
mov
es
pop
call
lcall
jns
nop
rolb
clc
mov
mov
gs
mov
aas
pop
push
sbbl
mov
repnz
sbb
xor
addl
jge
out
push
rolb
das
lret
cmp
mov
inc
push
fisubs
cmp
inc
jl
pushf
fstps
lods
insb
cmp
fnstenv
ss
pop
addl
mov
jl
into
out
outsl
mov
clc
pop
scas
xchg
stos
xor
jle
cmc
lea
pop
xchg
cmpb
stos
je
dec
xchg
or
mov
test
mov
push
sbb
xchg
imul
hlt
loope
mov
or
jmp
push
add
jmp
jecxz
lret
push
cltd
xchg
dec
cmc
jge
mov
orb
or
shlb
or
fcoml
sub
divb
mov
lahf
xchg
ret
add
and
lret
hlt
push
addr16
in
lret
repnz
mov
rol
ret
and
jb
mov
jle
rcl
jb
xchg
movsb
das
pop
jns
push
or
stos
cmp
arpl
lea
cmpsl
dec
push
push
sub
sbb
xlat
lods
das
xchg
in
fstp
subl
pushf
inc
fistps
cmp
fdivs
jbe
out
xor
les
mov
mov
ret
jl
sbb
xchg
inc
jbe
dec
pop
fwait
push
repz
pop
adc
movsl
das
ljmp
imul
push
adc
jge
xchg
or
adc
inc
cltd
repnz
dec
or
ss
mov
jo
clc
lret
popf
movsl
xchg
fstps
and
clc
in
cmpsb
stos
inc
fists
mov
ffree
insb
stc
ljmp
lcall
out
pop
mov
insb
adc
push
jle
pop
add
inc
lea
loope
je
cmp
cld
imul
push
scas
scas
sub
aaa
shrb
daa
test
andl
dec
dec
orb
xor
sbb
mul
xor
or
fwait
mov
add
test
sbbl
test
dec
into
scas
xor
or
movsb
sbb
inc
jns
in
add
push
dec
jns
xchg
adc
out
push
insl
mov
mov
pop
jo
mov
and
dec
dec
mov
cmp
rcr
call
enter
sbb
mov
enter
test
pop
and
insl
pushl
and
xor
cltd
out
cmp
imul
xor
loope
or
mov
in
jmp
mov
mov
ljmp
daa
jecxz
out
std
mov
das
or
nop
cmc
loop
dec
push
in
sti
pop
push
inc
inc
jae
out
jno
addb
jg
pop
xchg
daa
in
test
cmp
inc
cmp
push
cltd
std
aas
cmp
sbb
and
pop
or
and
sbb
sub
fcompl
sti
sbb
inc
repz
xlat
dec
cwtl
test
pop
cli
aas
adc
in
add
int
xor
mov
popl
mov
jmp
jle
loop
cmp
rcll
call
adc
repnz
push
in
lret
mov
jo
lcall
xchg
xor
pusha
cmc
rolb
cmp
inc
jbe
loopne
in
pop
out
repz
shl
jmp
loope
shlb
dec
ret
or
add
stos
jnp
mov
loope
or
hlt
jecxz
popf
jl
int
aaa
inc
loop
adc
mov
cltd
ret
cmp
loop
inc
out
fisubrl
leave
repz
and
sub
out
adc
idivb
xor
gs
cmp
sub
aad
push
push
mov
push
outsl
xor
outsb
cltd
add
and
icebp
jae,pt
cmp
pop
or
shll
or
and
lret
mov
out
sub
and
test
inc
lcall
xchg
cmpsb
repnz
mov
mov
sub
pop
es
mov
arpl
daa
mov
xchg
aad
sub
mov
xor
scas
mov
mov
mov
in
jo
lock
pop
pop
xor
in
aaa
or
sub
jnp
or
das
roll
adc
xchg
outsb
nop
lock
shlb
loopne
and
jne
xchg
inc
outsl
push
cld
jge
sbb
lock
pushf
add
jns
xchg
mov
cmp
cmpb
lods
insb
test
xchg
jmp
inc
adc
xchg
xchg
pop
add
jb
daa
push
into
nop
inc
cmp
shlb
jnp
and
add
hlt
and
loopne
inc
jnp
icebp
sub
outsb
mov
repz
or
imul
pop
sbb
inc
mov
movsb
xor
dec
ds
pop
mov
stos
faddl
in
bound
orl
mov
xchg
or
adc
int3
imul
inc
mov
nop
lcall
and
stos
pusha
cwtl
aam
mov
int3
cli
lds
repnz
dec
das
jge
sti
leave
std
lock
sub
sbb
loopne
iret
or
mov
mov
mov
icebp
addl
pop
jl
jmp
xchg
int3
or
idiv
and
jnp
lret
jno
push
mov
mov
mov
mov
xor
loopne
in
push
xor
sub
dec
and
xchg
std
shl
mov
xchg
das
add
xor
inc
mov
mov
mov
xor
pop
cs
bnd
popa
adc
into
stos
adc
pop
add
loopne
lret
fldcw
push
loop
and
and
or
push
xchg
jnp
xor
xlat
out
stos
mov
add
subb
out
test
xchg
aam
cwtl
xlat
insb
adc
out
outsl
lret
in
adc
jmp
pop
jns
xchg
outsb
cmp
out
scas
subb
fstps
xchg
and
insb
arpl
xor
jnp
mov
adc
mov
dec
out
shll
fwait
xor
push
test
push
addr16
ljmp
mov
lods
sbb
adc
push
fst
xchg
lret
adc
and
fisubs
and
xor
xchg
and
xchg
mov
adc
icebp
sti
xchg
adc
lods
test
imul
xor
scas
add
push
outsl
push
add
dec
inc
into
sbb
mov
or
jcxz
inc
insl
xchg
xrelease
pop
insb
pop
ret
cmpl
aas
pop
fidivs
jecxz
lds
push
fstl
ret
sub
sahf
xor
jecxz
ret
add
mov
rcll
les
pop
mov
push
popf
sub
sbb
aad
mov
out
das
lret
xor
cs
or
lds
pushf
push
test
mov
fsubrs
rcr
fwait
sub
mov
cmpsb
fistpl
pop
dec
xor
mov
xor
inc
dec
pop
mov
in
or
and
sbb
adc
mov
fsubrl
out
fadds
shll
fsubrl
and
add
push
fbld
push
rcrl
int3
out
notl
pop
rcrb
std
data16
jns
jns
fs
js
add
dec
fdivs
fistpll
jp
xchg
xor
cmp
andb
inc
jmp
fcoms
sti
add
dec
sarb
push
cmp
xor
test
lock
push
xchg
and
sbb
jno
xchg
aaa
leave
pop
pop
imul
enter
or
in
mov
outsb
pop
add
fnstcw
mov
mov
add
sub
insb
bound
out
cli
and
adc
dec
dec
cltd
shr
adc
dec
and
push
push
dec
scas
mov
scas
mov
mov
jl
cwtl
js
jb
mov
adc
hlt
dec
ds
aas
test
lahf
jmp
dec
repz
fmull
sti
cmp
sub
push
adc
lods
xlat
xor
jmp
rolb
stos
sbb
addr16
notb
in
adc
mov
aaa
sbb
in
out
jp
mov
pop
jle
bound
enter
aam
mov
mov
outsl
test
addr16
lds
loope
push
and
insl
mov
jge
stos
leave
nopl
xchg
mov
popf
mov
out
push
jp
stos
ss
pop
mov
mov
jmp
add
mov
inc
dec
insb
lcall
ret
dec
ret
aam
loop
mov
xchg
jne
mov
sbb
testl
stc
push
cmp
mov
xchg
xor
ljmp
in
push
ret
xchg
aaa
xchg
xchg
xor
adc
inc
mov
adc
sbb
outsb
inc
mov
xor
and
mov
ss
mov
dec
sbb
fs
inc
xchg
pop
mov
pop
sub
jns
lods
scas
xchg
fidivrl
or
inc
mov
adc
jecxz
sub
sbb
les
cs
jg
mov
push
shl
cmp
lods
pop
lret
dec
xor
cmpb
fstpl
pop
xor
mov
inc
mov
push
jnp
xchg
mov
inc
mov
cli
test
lea
push
lahf
pop
notb
mov
pop
ss
inc
add
lock
push
add
ljmp
loopne
push
rcll
cmc
cmp
out
dec
in
dec
pusha
loope
adc
or
mov
js
adc
lock
pop
jmp
adc
leave
sbb
mov
mov
idiv
pop
mov
xorb
cmc
push
mov
push
dec
dec
fsub
add
pop
lcall
push
mov
call
jae
insb
jge
movsl
push
inc
adc
mov
fldl
push
into
insl
test
andb
jbe
inc
jo
fs
mov
mov
mov
mov
fidivrs
xchg
jl
aad
mov
in
movb
mov
mov
les
stos
popa
and
push
scas
popa
cmp
jne
in
test
mov
push
mov
mov
sub
sbb
and
and
sub
adc
mov
jb
dec
mov
sbb
scas
jge
lcall
adc
loop
les
lds
push
adc
das
insl
xorb
mov
cmp
push
lods
rorb
scas
aad
ljmp
mov
sahf
sahf
jnp
aam
pusha
dec
repz
nop
cmp
push
fucom
pop
pop
cmc
je
stc
stos
cs
sub
fscale
stc
cmp
mov
pop
out
dec
incl
int3
sub
jae
arpl
mov
pop
mov
lods
lcall
jo
movsb
insb
and
scas
jmp
or
xchg
xor
cmpsb
adc
in
pusha
sbb
mov
jle
scas
or
data16
push
imul
jnp
mov
inc
out
mov
pop
movsb
sbb
js
jmp
sbb
imull
mov
into
push
inc
scas
std
lcall
mov
sti
inc
dec
adc
out
jl
sbb
cmp
fidivrs
lcall
cmp
out
pop
outsl
out
cmpsb
movsb
addr16
mov
les
sub
jbe
lret
mov
popf
mov
clc
xchg
dec
push
lock
popa
scas
sub
xor
mov
movsb
or
pop
or
xchg
popf
mov
js
pop
pop
aaa
inc
scas
sub
mov
movsb
packsswb
xchg
add
mov
add
xchg
sub
and
aaa
les
out
and
inc
xchg
xchg
decb
dec
js
adc
xchg
xor
es
cmpsb
jp
or
bound
outsl
ja
out
push
clc
cmp
int
mov
dec
dec
or
sub
loope
hlt
out
push
scas
addr16
cmp
insl
es
lock
xchg
sbb
nop
cli
inc
mov
jno
mov
sub
fisubrl
push
lods
inc
pushf
xlat
ds
cmp
mov
pop
mov
or
add
movsb
xorb
cmp
pushl
sub
sub
jb
stos
and
nop
push
xchg
daa
xchg
popf
testl
or
out
mov
push
inc
push
push
lods
dec
les
sub
jp
in
nop
mov
push
mov
mov
xchg
ss
mov
mov
or
js
adc
xor
pop
pop
sub
jne
pop
nop
xchg
fs
mov
jge
inc
cmpsb
xor
les
adcb
xchg
fstp
ret
in
bound
xor
popa
stos
jae
mov
or
ja
inc
in
das
es
or
pop
jno
popa
fs
cmpb
or
pop
dec
push
jnp
sub
mov
dec
and
icebp
xor
out
and
fs
test
inc
inc
and
pop
xchg
in
or
pop
xchg
mov
cmp
add
mov
push
mov
and
sbb
sbb
outsb
hlt
dec
sbb
xor
mov
cmp
jle
jmp
fwait
test
loopne
jp
push
dec
cmpsb
in
push
fdivrl
bound
push
lcall
jae
enter
insl
dec
nop
add
mov
adc
pop
mov
and
xchg
das
mov
call
xchg
sub
mov
xor
pushf
aas
js,pt
or
pop
xor
or
lret
mov
jnp
lods
jl
jle
lahf
frstor
and
in
cmp
in
repnz
lret
cmp
cmpsb
stos
adc
mov
dec
pop
mov
jl
add
push
mov
daa
out
mov
loopne
inc
in
fistpl
sbb
jns
pop
add
xchg
daa
popa
jae
test
add
icebp
dec
jbe
push
adc
sub
mov
ret
push
scas
xor
scas
stos
pop
push
flds
xchg
push
movsl
ja
add
enter
xorb
jle
xchg
inc
fdivrl
jb
add
incl
sbb
mov
ja
mov
jl
loope
scas
mov
lods
add
jecxz
daa
mov
ret
bound
xchg
add
rep
xchg
pop
jle
push
mov
xchg
shlb
movsb
ucomiss
mov
xchg
mov
out
btr
xchg
or
push
add
ret
jno
cmp
lods
jns
push
mov
in
push
jne
shll
ja
outsl
pop
pop
sub
stos
pop
jle
xor
in
lret
bound
jge
and
jb
mov
xchg
add
pop
xor
pop
iret
sbb
push
adc
popf
sti
and
leave
sub
out
movsb
imul
or
push
lret
cmp
das
mov
mov
pslld
pop
nop
lea
xlat
adc
xor
es
dec
pusha
shrb
push
adc
in
pop
cltd
xchg
xor
cltd
and
inc
push
es
mov
movsb
popa
sahf
movsl
bound
and
jbe
std
mov
or
mov
dec
xchg
mov
push
mov
add
cmp
cld
imul
jg
push
inc
dec
mov
test
inc
cwtl
or
sbb
in
ljmp
adc
jno
repz
aam
call
cmpl
mov
js
insb
mov
push
gs
data16
das
out
xchg
nop
in
dec
aam
sub
fbld
or
xchg
imul
and
dec
pusha
jo
cmc
jl
repnz
pop
daa
inc
scas
push
cmpsb
jne
push
or
sbb
fs
scas
cs
jae
jecxz
mov
cli
dec
subl
mov
lods
into
pop
les
xlat
sub
jp
fidivl
lcall
das
lret
push
int3
sar
bound
xchg
mov
nop
jg
or
enter
jnp
ret
mov
cs
or
repnz
movsb
cmp
popa
inc
loope
insb
xchg
pop
add
pop
clc
sti
push
and
movsb
fsts
push
and
sbb
call
insb
cmpsb
pop
push
xor
repnz
xchg
aaa
fnstenv
mov
sub
xchg
fs
and
gs
mov
test
push
push
int
push
shrb
imul
xchg
lcall
das
and
push
cmp
hlt
ljmp
imul
jmp
popa
adc
jno
out
mov
bound
sbb
pop
lcall
clc
adc
pop
mov
daa
int3
add
aad
fildl
adc
fchs
orl
add
clc
dec
mov
mov
lock
nop
adc
mov
loope,pn
into
dec
jbe
popa
jecxz
mov
jb
inc
enter
call
loop
nop
into
jno
fistps
sub
fsubrp
push
fwait
hlt
ds
jo
mov
add
adc
in
mov
xor
pop
xchg
mov
rcrl
push
sbb
test
int
jne
fmuls
rorl
imulb
adc
and
mov
call
push
xor
loopne
cmc
scas
test
enter
sbb
jecxz
ret
cmp
mov
or
lods
pop
mov
push
xor
lahf
loop
dec
shr
mov
cmc
jp
push
int3
aam
mov
mov
mov
sti
add
add
pop
push
lahf
hlt
cmp
mulb
cmpsl
insl
pushl
cmp
in
xchg
dec
sub
mov
xor
fs
add
or
mov
xchg
inc
outsl
jbe
insb
and
pushf
movsl
push
mov
lahf
into
fs
ljmpw
pop
mov
mov
movsb
mov
pop
xchg
cld
mov
sub
push
hlt
and
lods
in
mov
xor
pushf
pop
shlb
mov
mov
popa
inc
jae
mov
fisubs
dec
xchg
lahf
xchg
cmpsb
outsb
mov
test
dec
mov
mov
mov
push
loopne
xor
jle
jnp
cmp
mov
shlb
scas
push
cli
sub
adc
xor
jno
mov
insb
cmp
ds
push
xor
aam
and
sub
cli
sub
ljmp
mov
dec
pusha
in
ret
xchg
and
sub
into
dec
lret
bound
popa
rclb
fwait
mov
mov
adc
rcrb
lods
cmpsl
fwait
out
mov
lods
mov
dec
dec
lahf
nop
inc
pop
cltd
mov
test
pop
sti
inc
mov
add
jns
mov
cwtl
adc
mov
push
insb
popa
loop
mov
pop
pop
dec
push
jbe,pn
pop
sarb
sti
call
mov
cmp
xchg
push
loope
dec
push
inc
sub
and
stos
add
cld
divb
xchg
dec
pusha
mov
adc
sbb
sbb
insb
push
rol
adc
mov
out
out
mov
in
sub
divl
inc
push
arpl
or
adc
repz
add
sti
sub
negl
or
inc
and
leave
mov
fidivl
mov
js
popa
or
adc
inc
push
rcr
mov
jnp
push
lea
mov
in
push
add
fsubp
push
jecxz
mov
insb
mov
js
pop
jb
cli
lcall
jns
movsb
test
adc
xor
push
sbb
lcall
mov
adcl
mov
dec
cmp
jmp
mov
movsb
ret
push
stos
unpckhps
jmp
loopne
orl
xchg
cmp
rcrl
xchg
in
mov
xchg
pop
les
faddl
outsb
jl
aam
popf
adc
or
insl
pop
int3
fstpl
xor
lahf
mov
jp
jl
in
pop
and
jo
icebp
aaa
fistl
mov
xor
add
xor
fs
and
mov
les
repz
aas
in
rcr
inc
mov
dec
lods
ror
in
subl
lds
jns
hlt
jle
jge
cmc
vpmulhw
int
mov
mov
and
pop
cmp
fidivs
inc
inc
push
frstor
insb
pop
cmp
mov
call
incl
imul
bound
sub
pop
jmp
fmull
sti
rorb
sbb
cs
fisubs
sti
rcrb
inc
lea
pop
fnstcw
incl
and
js
into
loop
aaa
fwait
push
mov
jns
loope,pn
test
insb
and
dec
cltd
sub
and
fimuls
ss
popa
mov
pop
sbb
sbbb
mov
ljmp
repz
add
popa
push
jge
into
lret
jmp
mov
mov
popa
ret
dec
xchg
push
rcll
inc
in
vmulss
sar
jo
inc
cs
mov
imul
jns
adc
popa
aas
cmpsb
lea
daa
xor
out
pop
pop
pusha
arpl
jge
aas
ret
test
pushl
mov
fdivrs
xchg
or
add
insb
jnp
movsb
push
push
mov
xchg
jle
push
jmp
mov
aad
cmpsl
cwtl
sub
test
outsb
daa
fwait
xchg
xchg
cmc
jno
stos
xor
sub
orl
sbb
xchg
cmp
mov
push
adc
daa
iret
test
mov
out
xor
in
sub
bound
jmp
test
jp
aad
mov
jecxz
adc
insl
mov
adc
nop
test
mov
sti
ret
mov
nop
cmp
adc
and
mov
dec
or
mov
mov
sbb
pop
rcr
cmp
mov
fcmovb
mov
arpl
pop
je
jecxz
stc
mov
data16
add
adc
nop
xchg
pusha
adc
add
xor
push
icebp
xchg
test
push
bnd
add
sbb
into
imul
mov
cli
in
and
lret
add
ret
xchg
push
es
subl
mov
and
rolb
adc
invd
rorb
insb
lods
adc
in
xor
dec
jbe
lds
mov
inc
xor
into
jae
imul
subb
add
sbb
and
mov
fidivl
out
das
xchg
inc
mov
aaa
pop
repz
inc
lret
push
negl
push
test
movsb
rcll
lea
sahf
enter
xchg
xchg
mov
jg
iret
xchg
lods
adc
fdivr
sub
out
dec
addb
js
bound
shrl
xchg
ljmp
bound
push
sbb
pushf
adc
testl
sbb
scas
dec
enter
xchg
cld
xchg
leave
mov
xchg
addr16
xchg
xchg
cmp
popa
lods
gs
add
add
xor
xchg
in
ss
jne
popl
out
adc
stc
pushf
dec
xlat
pmaxsw
mov
jns
adc
and
dec
lcall
mov
aas
test
repnz
rcll
sahf
je
ss
xlat
xor
mov
stos
inc
icebp
jecxz
fiadds
inc
mov
shlb
sub
sub
pop
jl
xchg
adc
sbb
mov
push
das
pop
mov
pop
test
fcoml
and
mov
mov
cli
dec
jno
or
or
sub
adcb
xchg
clc
test
mov
shl
add
adc
cmp
jne
data16
xchg
daa
popa
imul
sahf
lret
bswap
mov
nop
aad
dec
pusha
inc
xor
in
mov
jo
mov
rcll
xchg
je
dec
test
jno
mov
aam
dec
cmc
add
test
dec
dec
stc
xor
dec
mov
fbstp
and
testb
stos
jmp
sub
inc
fcmovnbe
dec
ror
pusha
mull
mov
pop
repz
fdivr
imul
outsl
aad
pop
mov
and
jmp
xchg
gs
push
lcall
lock
xchg
mov
mov
add
mov
cmpb
cmpsb
aad
addps
lret
xchg
cmpsl
int3
inc
ficompl
imul
mov
xchg
mov
add
jbe
pop
jmp
xchg
mov
sub
mov
sahf
lcall
sub
dec
or
fdivs
sbb
outsl
add
movsb
out
je
pusha
inc
xorb
mov
fs
jl
jbe
pop
cli
lret
cmp
and
and
mov
fcmovu
pop
mov
jo
jmp
xor
push
test
fs
push
jo
stos
adc
cwtl
mov
cltd
pop
ljmp
dec
not
fnstenv
lret
add
mov
cmp
test
fdivs
push
inc
xor
jns
add
pop
clc
cs
mov
or
bound
ja
cmpsl
pop
insb
cmp
jl
ret
sub
and
leave
add
jmp
data16
jns
dec
push
les
sub
ja
rorl
std
clc
xchg
mov
mov
cli
aam
shrl
mov
lods
xchg
or
movsb
mov
cld
ljmp
add
dec
or
not
nop
hlt
aam
repnz
stc
mov
ss
das
inc
cmp
sub
pop
or
test
jle
pusha
mov
xor
or
aam
jg
or
jnp
adc
jecxz
or
lds
cmp
mov
jnp
daa
pop
add
imul
es
imul
scas
fistpll
pop
int
xor
adc
cmp
push
fsubl
xchg
int
rcr
sub
push
hlt
jne
scas
xchg
test
jb
mov
jns
negb
cmp
sbb
dec
jmp
icebp
popf
xchg
jae
mov
mull
loop
push
dec
lret
add
stos
adc
jnp
ret
fstl
jns
add
dec
xchg
sbb
aad
imul
mov
insb
lcall
pop
pop
sub
in
jge
dec
mov
std
xchg
or
push
cld
push
sbb
pop
enter
dec
xor
fldcw
loop
dec
mov
push
dec
in
xchg
xchg
notl
mov
dec
pusha
xor
mov
jle
iret
sti
push
test
xchg
std
stos
inc
fdivr
call
sbb
sub
sub
pop
dec
repz
cmpsl
cwtl
cmp
lock
adc
mov
sub
das
sub
inc
test
dec
mov
shrl
add
cli
adc
sbb
lret
xchg
xchg
xor
iret
xchg
loop
pop
clc
jp
sbb
popa
mov
imul
add
mov
mov
adc
out
stos
push
push
jne
cld
sub
out
incb
stos
outsl
insl
pop
xchg
out
xchg
addr16
scas
push
imul
ret
mov
mov
push
mov
test
sbb
sbb
sbb
dec
xchg
call
and
cs
add
cmc
enter
fisubl
scas
pop
xchg
adc
mov
mov
mov
mov
and
sahf
js
iret
mov
xor
enter
mov
call
xchg
sub
push
mov
sbb
dec
aaa
sbb
dec
mov
push
add
lret
sahf
mov
push
jne
ljmp
sbb
push
cld
lock
xchg
adc
lods
inc
aam
cs
ljmp
jb
lcall
pop
stos
dec
adc
out
ja
xor
in
pushf
push
mov
rep
jmp
add
mov
mov
aas
std
enter
ja
ljmp
xchg
cmpsl
mov
push
inc
cmp
ja
jg
leave
sub
test
in
repz
xchg
pop
adc
cmp
iret
dec
xor
ficoms
inc
mov
popf
or
cwtl
in
ljmp
int
ljmp
cmp
icebp
mov
loopne
in
xchg
test
cmp
xchg
sbb
push
inc
mov
in
add
cmp
rclb
imul
sub
outsb
jno
jb
jl
inc
sbbl
mov
sbb
ss
mov
sub
movsb
and
aam
xchg
dec
insl
or
inc
rorl
mov
aad
iret
dec
stos
push
test
sbb
idivl
push
loop
ja
pop
or
cmp
cmpsb
out
xchg
leave
push
add
inc
mov
enter
adc
leave
dec
mov
insl
jg
fsubrl
fdivrl
sbb
das
jns
es
and
adc
pop
mov
movsb
cmp
or
aad
or
lcall
in
out
fs
push
hlt
shlb
sub
aam
test
inc
xor
mov
jbe
pushf
or
sub
add
lods
out
cmp
jb
out
lret
fsubrs
icebp
xchg
inc
inc
xchg
push
push
loop
int3
push
subb
orb
stos
vpmuludq
cs
push
pop
ror
sbb
and
fstpl
lcall
jle
roll
mov
je
cmp
mov
fsubrl
mov
imul
stos
and
int
shr
xchg
jge
in
subl
jns
jp
pop
cmp
push
pop
test
sub
mov
cltd
sbb
cld
int
adc
insb
out
adc
and
adc
hlt
jmp
ret
ret
xor
adc
rorl
lea
loopne
mov
adc
and
dec
out
sbb
dec
mov
mov
adc
in
movsb
mov
add
pop
jns
inc
test
adc
inc
fisttpl
mov
stos
mov
mov
cmp
mov
sub
repnz
es
shrl
sub
mov
xchg
rcl
inc
push
xchg
mov
rcrl
cmc
jecxz
fs
shrb
imul
sbb
cmpsl
mov
sub
add
lret
lcall
or
mov
fimull
mov
pop
cmc
sbb
repz
add
lock
fisttps
push
rcr
or
imul
mov
lds
out
in
in
inc
mov
push
push
inc
jb
test
repnz
dec
loopne
lods
xor
fistps
cmpsb
jbe
mov
ja
iret
fs
aaa
test
mov
outsl
rorl
xchg
jae
lahf
mov
cmp
sub
lock
hlt
mov
xor
dec
mov
mov
mov
cmp
dec
cli
movsl
pop
cwtl
repnz
ss
mov
out
mov
jge
push
test
mov
inc
test
enter
es
adc
or
out
xor
and
aaa
jp
imul
inc
mov
mov
dec
rolb
hlt
test
xchg
repnz
mov
dec
mov
adc
mov
loop
scas
add
repz
or
notb
or
popf
das
int
xor
sahf
test
add
out
outsl
bound
sbb
pop
divl
popa
push
cwtl
int3
xchg
test
outsb
int3
sbbl
cmp
pop
pop
gs
aam
movsl
mov
cmp
mov
and
xchg
cmp
stos
int3
pushf
aas
jno
ljmp
lahf
movsb
aad
adc
add
adc
adc
lret
cmp
sub
sbb
add
sarb
cltd
mov
push
sub
add
imulb
pop
xor
pop
add
ljmp
sbb
add
pop
add
pop
inc
cmp
leave
mov
jnp
sub
cwtl
push
movsb
mulps
jmp
push
pop
iret
sub
sub
sbb
data16
fbld
subl
insb
sar
aad
add
test
push
inc
rcl
adc
je
xchg
fildll
add
or
mov
sti
loope
jae
loope
xchg
mov
sub
sti
xor
aas
xor
dec
fisttpll
xor
jg
push
outsl
cmp
xchg
call
adc
jecxz
fldt
test
sbb
jbe
push
iret
mov
fnstcw
fldenv
in
aad
mov
sti
mov
iret
xchg
pop
enter
test
xchg
cltd
xor
jae
iret
xor
movsl
test
pop
fistl
rclb
lret
add
add
and
mov
xor
sti
push
imul
fidivs
sub
cmpl
or
movsl
mov
or
fnstsw
in
xchg
mov
shll
xorl
add
pop
sahf
adc
and
jle
icebp
adc
pusha
ds
add
cli
mov
iret
and
cli
int3
sbb
mov
or
push
xchg
js
nop
test
mov
mov
pop
fildl
add
adc
and
fstl
push
xor
sub
cmp
mov
pop
hlt
cltd
punpcklqdq
subl
jmp
imull
pop
pop
xor
xchg
arpl
call
aaa
add
mov
bound
pop
test
fistps
mov
aas
and
xor
or
hlt
jo
push
stos
jb
sbb
je
shlb
add
rcrl
ret
jo
mov
jmp
pop
mov
stc
test
dec
sbb
mov
xor
lcall
xlat
sbbb
popw
dec
scas
loopne
popa
fldl
stc
jnp
scas
mov
xor
test
mov
mov
cmp
mov
pushf
mov
fs
sbb
sbb
lcall
sbb
jmp
mov
out
mov
nop
sti
fimuls
pop
repz
in
jge
jne
dec
jle
call
sub
nop
xor
mov
daa
cltd
sar
mov
cmp
out
inc
sahf
cmp
pop
es
nop
lahf
pop
mov
add
dec
push
out
sbb
adc
mov
cmp
xor
ljmp
mov
inc
stos
or
out
jnp
push
shll
mov
mov
or
jmp
test
ss
inc
mov
movsb
flds
or
cld
stos
sub
aas
inc
jae
das
or
xchg
pusha
in
idivb
outsb
fistps
lds
mov
xchg
xchg
inc
jne
fisubrl
sti
vpsllw
lret
inc
cmpsb
decl
pop
lret
lcall
cmp
inc
outsl
das
mov
rorb
ja
mov
fimull
mov
sub
jae
pop
jp
jb
cwtl
jge
jp
push
fwait
or
mov
xchg
in
sbb
in
mov
sbb
lcall
dec
xchg
sub
or
jno
lods
and
arpl
inc
mov
inc
lahf
int3
pop
xchg
cmp
frstor
jb
sbb
jmp
lahf
arpl
jmp
shlb
push
stos
in
mov
insb
mov
push
and
repnz
ljmp
adc
jns
or
mov
shlb
sbb
xor
xchg
das
mov
in
and
lret
jne
insl
aaa
dec
mov
and
inc
push
popf
fidivs
lock
dec
inc
call
xor
cmp
sub
push
call
dec
pop
or
and
ljmp
in
jne
fstl
cmp
cmp
sub
repnz
je
scas
ja
out
clc
adc
jmp
push
push
mov
push
sub
popf
dec
push
outsb
shlb
mov
pop
cwtl
adc
push
lahf
lcall
adc
in
push
xor
lahf
dec
pop
hlt
jne
inc
fsubrp
cmpsl
sbb
loopne
xchg
pop
cmp
xor
inc
mov
mov
aaa
pop
sti
adc
into
mov
and
pop
mov
sahf
inc
jb
ljmp
lods
cld
in
sbb
push
xchg
push
or
jge
xor
jg
jge
jae
add
in
imul
rclb
rcrb
add
loop
ds
addl
mov
inc
cmp
mov
fnsave
mov
sub
sub
ja
rol
inc
jg
push
cmp
pop
push
xchg
mov
movsl
stc
add
dec
rorl
aas
mov
xor
fcmovu
jge
gs
loopne
int3
xchg
sub
mov
jno
jno
shll
push
pop
xchg
sbb
cmpsl
outsb
cmp
inc
lcall
lods
mov
mov
mov
in
jg
sti
ret
jnp
sub
jecxz
xchg
pop
adc
mov
or
and
xor
mov
mov
lea
lods
lock
lret
sbb
mov
ss
add
xor
cs
iret
or
adc
jo
loop
loope
xchg
cs
sub
fsubrs
xchg
pop
addr16
and
dec
xor
fadd
cmpsl
xor
aas
in
loope
in
je
inc
or
xchg
pop
fdivrl
push
arpl
cli
cwtl
jnp
sub
mov
popf
mov
js
jbe
or
pop
mov
adc
sbb
outsb
dec
lret
jmp
pop
stos
je
pushf
add
les
repnz
mov
mov
jp
out
rcll
jne
les
aas
pop
stos
adc
arpl
iret
fisubrl
push
push
out
pop
popf
jae
mov
xor
sub
addb
hlt
loopne
data16
scas
dec
push
mov
or
imul
push
push
int
mov
test
dec
cmp
js
push
add
push
sbb
dec
loop
mov
jno
mov
inc
jmp
jg
push
jb
insl
aaa
adc
mov
dec
pop
inc
rolb
popf
loope
out
ljmp
sbb
sbb
pushl
mov
xor
icebp
scas
xchg
in
cmpsb
movsb
mov
loopne
add
clc
adc
mov
aaa
ja
negb
das
ficompl
adc
inc
negb
loope
fisttps
push
dec
add
jns
popf
cmp
push
std
push
aam
fwait
mov
clc
adc
test
jl
aas
iret
insl
cmp
aam
mov
sub
pop
aad
cmp
sbb
rcrl
or
mov
sub
mov
inc
imul
sub
stc
add
mov
insl
cmp
mov
pop
out
int
adc
jns
pop
enter
sti
inc
jp
js
xchg
dec
mov
pop
sbb
ljmp
mov
imul
jp
dec
popa
adc
mov
fstpt
into
inc
arpl
lea
mov
push
xchg
in
aam
or
sub
out
loop
faddl
xor
xchg
sarl
sub
sub
mov
test
mov
cmpsl
xor
jbe
je
in
add
push
test
shl
mov
xchg
inc
rorb
call
inc
push
xor
repz
push
cmp
movsl
mov
push
jb
pop
sub
xorl
fwait
pop
jg
in
popf
or
arpl
insl
mov
lods
inc
xchg
cmp
mov
mov
scas
jno
movsb
xlat
dec
sub
adc
add
xor
xlat
adc
mov
and
xchg
mov
xor
adcl
push
fistl
mov
sub
int
inc
int3
push
test
mov
imul
jecxz
sub
adc
inc
ficomps
sbb
mov
mov
mov
xor
mov
hlt
xchg
insl
adc
sahf
fsubs
lcall
sub
mov
push
stos
call
in
test
ss
out
inc
rorb
xchg
nop
sahf
popa
rcl
pop
mov
pop
into
dec
ret
push
jecxz
lcall
cmp
and
bound
std
sbb
dec
lret
inc
dec
cs
jle
fwait
popf
adc
loopne
mov
or
insl
scas
xchg
sub
pop
cld
sbb
push
aad
scas
dec
sub
jnp
mov
cmp
dec
sahf
test
ja
dec
dec
cmpsl
fcomps
xchg
or
aam
xchg
in
fcoml
jo
xor
call
sbb
lcall
jge
pop
adc
and
out
mov
popa
xor
jne
fwait
mov
popf
xchg
add
push
js
mov
outsl
out
inc
add
pop
xor
adc
sub
dec
adc
jo
stos
or
xchg
and
popa
mov
and
push
mov
fists
fnsave
xchg
and
pop
imulb
je
scas
stc
adc
movsl
jae
sbb
add
mov
mov
mov
xchg
pop
pop
adc
insl
xor
dec
push
out
mov
dec
push
lret
dec
in
jb
roll
pusha
std
lahf
mov
leave
mov
insb
movsb
int
push
mov
shrl
aad
movsl
neg
add
aam
loope,pn
push
test
idivl
adc
jnp
xchg
inc
push
sub
xchg
mov
iret
add
push
inc
imul
add
out
mov
mov
std
dec
fs
jb
xchg
adc
je
fcomps
icebp
loopne
mov
arpl
in
dec
mov
into
call
popa
jge
inc
roll
imul
pop
mov
xorl
ret
or
xor
divl
push
jno
mov
stos
inc
js
lods
mov
xor
fcmovu
inc
pop
sub
lahf
pop
mov
out
xor
or
push
in
xchg
js
stc
mov
push
and
xor
int3
cmp
jbe
sbb
jg
cmc
fstpl
arpl
mov
nop
dec
mov
sub
ja
pop
ret
lea
or
pop
nop
clc
jbe
ljmp
dec
sbb
jnp
mov
cli
sbb
repnz
ja
shlb
fs
mov
mov
fmuls
push
sub
lods
jne
imul
lcall
shll
leave
mov
inc
flds
or
sub
arpl
sahf
add
in
jns
xchg
dec
jne
out
jnp
or
mov
mov
daa
jp
fiaddl
cmc
fwait
gs
in
call
cs
xor
add
xchg
pop
in
sbb
fstl
test
and
out
xchg
test
fiaddl
mov
icebp
xchg
out
or
jo
add
pop
push
push
sbb
sbb
outsb
inc
sub
and
push
or
mov
mov
test
sbb
outsl
adc
out
xchg
loopne
imul
jmp
outsb
cmp
loop
cs
push
mov
inc
ljmp
ja
or
rorl
mov
movswl
push
jno
fcoms
je
pusha
mov
mov
out
scas
adc
dec
bound
gs
jne
mov
ror
daa
pushf
jge
sti
int
hlt
fwait
daa
mov
inc
xchg
mov
pop
fwait
dec
and
mov
push
jne
jne
cld
sub
xor
cmpsb
ljmp
pop
cmp
sbb
push
push
and
movsl
xchg
push
pop
xchg
xchg
imul
dec
insl
xchg
push
ret
or
mov
dec
jmp
push
insb
mov
cld
inc
nop
cmp
mov
jge
xchg
mov
mov
push
cli
sbbb
pop
orl
pop
out
loop
jb
mov
adc
lock
push
mov
dec
ja
inc
inc
or
aaa
mov
loop
adc
out
push
dec
xchg
jge
rcrb
xchg
data16
movsl
insb
adc
repz
pop
arpl
in
mov
lock
or
fs
in
ds
ljmp
das
lock
and
xchg
loopne,pt
lcall
adc
lds
pusha
xor
cmp
dec
out
push
sbb
inc
xor
lret
xchg
or
mov
jmp
roll
cmp
push
push
jg
cs
enter
imul
push
push
int
cmp
rcll
xchg
ljmp
push
pop
sbb
mov
jle
mov
push
std
test
in
movsl
cmpsl
jle
loopne
xchg
xor
mov
into
mov
daa
enter
xor
rcll
xor
call
int3
xchg
cld
int3
sub
inc
insl
mov
in
mov
fisttpll
pop
dec
int
cmp
call
add
dec
fdivrl
jns
pop
sub
inc
in
jne
lods
gs
and
xor
add
js
jno
daa
dec
mov
cmc
loopne
push
icebp
aad
or
push
sub
arpl
xor
sahf
rolb
xlat
shlb
jo
ljmp
inc
clc
and
clc
push
jecxz
lods
call
add
sbb
movl
pop
sti
lret
or
out
gs
shlb
jl
mov
out
fdivrp
in
mov
xor
sub
cmp
mov
ja
mov
es
jbe
dec
insl
movsb
notb
addb
enter
xor
out
fists
ljmp
int3
aaa
pop
sub
mov
xchg
xchg
int
lret
pop
xchg
pusha
mov
out
sbb
adc
mov
inc
pop
cmpsl
and
cwtl
inc
mov
push
popf
push
or
aaa
jmp
push
inc
sbb
push
cmc
xchg
mov
push
stos
or
jmp
xor
cmp
mov
lods
lods
mov
inc
xor
xchg
adc
push
inc
pop
push
sub
fs
outsb
sub
or
pop
bsf
xchg
lahf
mov
xor
sbb
lea
repnz
lock
in
fwait
mov
push
xchg
or
and
jnp
aam
jp
dec
cmpsb
xchg
cmp
mov
xlat
sarb
hlt
shrl
mov
stos
sub
fwait
clc
loopne
out
xchg
enter
cs
addb
popa
inc
sbb
pop
adcl
pop
stc
sti
jne
sahf
mov
cmpsl
sub
pop
je
popl
jle
cltd
push
sbb
or
ret
in
mov
sti
imul
mov
sub
mov
fisttps
push
inc
enter
sahf
ud2
mov
inc
out
mov
inc
and
fs
push
cmp
mov
xchg
imul
out
pop
movb
sbb
imul
xor
imul
xlat
cmp
inc
push
test
xchg
dec
dec
fdivrl
fldenv
sub
mov
int
fwait
mov
push
inc
cmpl
je
dec
inc
dec
jns
jle
fdiv
fistpl
add
je
js
sbb
out
sbb
sbb
push
dec
out
je
xchg
rcrb
enter
fadd
fwait
adc
outsl
iret
adc
into
test
scas
xchg
inc
test
outsb
cli
cld
mov
ljmp
gs
adc
pop
and
cmc
mov
xchg
sub
jg
pop
xor
inc
in
loop
call
add
arpl
daa
mov
fdivrs
mov
add
xor
cmp
clc
std
xor
inc
out
pop
lahf
xchg
dec
lea
and
adc
dec
or
fistpl
mov
shlb
push
xchg
fsts
gs
jp
pusha
fildll
cld
sahf
cmp
pop
mov
dec
ss
sti
stc
push
aam
stos
inc
test
std
and
xchg
in
cmpsl
push
sbb
stc
adc
push
scas
shr
inc
scas
fstl
pop
sbb
pushf
mov
lods
adc
aam
xchg
mov
out
daa
lock
mov
enter
dec
rorb
xchg
push
jmp
sub
mov
jae
add
jle
in
adc
clc
cli
out
xor
lcall
inc
xchg
lods
loopne
cmpsb
or
imul
pop
inc
fnsave
push
movsl
or
outsb
dec
fs
data16
pop
rcr
sub
daa
adc
sub
mov
ret
and
push
pop
enter
push
call
mov
not
call
pop
ret
leave
cli
xchg
jp
adc
add
sub
repz
push
push
mov
sbb
adc
imul
sahf
int3
mov
push
xor
cmp
push
mov
dec
or
mov
out
xchg
push
adc
mov
sub
fsub
mov
mov
add
fisttpll
pop
jae
in
pop
mov
test
pushl
xchg
fcmovnb
mov
push
notb
nop
or
cmp
data16
movsb
mov
and
sti
cmc
add
mov
lcallw
adc
int3
leave
xchg
je
push
xchg
add
mov
std
test
subb
in
fbld
xchg
push
outsl
push
xchg
scas
aaa
sbb
test
push
bound
jno
fcmovnu
je
das
sbb
pop
add
out
mov
xor
cmp
popf
addr16
mov
mov
nop
cli
adc
xchg
scas
push
mov
inc
pushl
dec
push
scas
or
movsb
add
sbb
mov
movsb
jne
lea
in
outsl
cmc
add
dec
sub
cmpsl
mov
mov
aaa
push
pop
mov
sub
adc
dec
es
push
std
xchg
into
push
rolb
cltd
add
enter
test
test
test
xor
mov
arpl
and
sbb
inc
pusha
in
dec
enter
cmpsl
push
xchg
jb
dec
fiadds
inc
popf
ret
dec
test
xchg
pop
into
cmp
dec
dec
ret
pop
or
and
aaa
ficoml
aam
mov
pop
fbld
jno
jp
fstps
call
iret
outsb
nopl
in
fs
imul
cli
mov
mov
imul
cltd
add
add
addr16
and
mov
sub
jb
jle
loopne
pushf
btc
shl
sub
add
mov
push
inc
int
push
movsb
mov
jae
das
mov
sbb
push
int3
lret
repnz
mov
subl
mov
repnz
sub
and
int3
add
popf
mov
pop
xchg
mov
adc
enter
pop
repnz
and
jmp
ficoms
jl
std
outsl
xchg
ljmp
test
mov
sub
ljmp
cmpsb
imul
and
adc
xchg
adc
add
pop
sub
nop
popf
js
popf
int3
imull
xchg
push
bound
sahf
mov
mov
mov
aad
xchg
add
icebp
and
cmp
jecxz
or
insb
cwtl
push
add
loope
xchg
pop
adc
test
dec
inc
lret
jp
flds
jecxz
sbb
cmc
sbb
repnz
sub
sub
and
mov
insl
ljmp
fstps
xchg
cmpsl
cmp
pcmpeqw
or
fadd
lea
int3
ljmp
je
and
sbb
xchg
dec
cs
dec
out
jecxz
aam
fwait
jecxz
mov
mov
int3
scas
cmp
push
mov
sub
xor
sub
jne
xlat
imull
and
cmp
sbb
std
sbb
call
movsl
aas
dec
or
push
mov
jae
movsl
inc
mov
not
ffree
mov
scas
inc
mov
adc
mov
mov
out
push
hlt
clc
dec
rclb
sub
sub
sbb
lret
out
aad
mov
push
or
lahf
in
pop
xor
dec
insb
mov
pop
pop
xor
adc
push
pop
pop
mov
xchg
gs
mov
cwtl
xchg
xchg
sbb
sub
xchg
cmp
dec
int
dec
inc
in
add
push
fsub
loop
sub
lahf
loope
pop
movsl
mov
inc
cmp
fiadds
push
mov
test
ret
jg
mov
test
out
test
inc
and
repnz
sub
sub
xchg
stc
stos
inc
dec
in
push
cmovle
sbb
push
push
push
stos
movsb
adc
inc
sarb
inc
inc
out
std
shl
fmuls
idiv
adc
inc
in
and
lds
lahf
mov
int3
imul
je
popf
mov
jp
or
iret
iret
fildl
clc
popa
fwait
rorb
inc
pop
mov
or
xor
loope
call
jne
dec
jge
int
stos
sub
scas
lahf
xchg
sub
into
push
pushf
pusha
mov
mov
jo
lods
cmp
mov
jne
push
fidivrs
outsb
mov
mov
and
test
sbb
push
notb
cmp
nop
fs
sti
xchg
pop
cmp
loopne
xorl
pop
xchg
bound
out
aad
xor
loop
ds
ret
xor
inc
mov
xor
vandnpd
or
lahf
rcl
incl
in
orb
cmpsl
pop
jo
lea
clc
lahf
push
sahf
or
jmp
push
jp
int
lret
jl
call
sub
mov
or
push
mov
cld
inc
dec
mov
cmpsl
std
add
cmpb
mov
stos
mov
into
gs
shrb
adc
pop
in
stos
jmp
in
inc
add
popa
lods
adc
inc
popl
cmp
out
filds
sti
loop
adc
cmp
mov
and
and
ficompl
imul
cs
or
sbb
aam
test
pop
loope
sbb
mov
push
pop
out
inc
pop
aam
bound
mov
cltd
jmp
sbb
cwtl
jmp
stos
dec
mov
cmp
jno
sbb
std
push
out
mov
push
pop
adc
inc
imulb
xor
xor
add
mov
std
push
and
xchg
adcl
stc
cmpsb
or
pop
jp
inc
shl
movsb
aas
inc
mov
pusha
adc
shll
push
inc
loopne
cmpsl
mov
aam
orl
push
adc
popf
test
adc
and
pop
jmp
mov
dec
test
hlt
cmpsl
adc
add
pop
inc
stos
repz
xor
fdecstp
and
mov
adc
or
cmp
sbb
in
adc
in
lea
xchg
and
fs
push
push
sbb
dec
and
cmpsb
stc
mov
adc
sarb
mov
xchg
lahf
mov
pop
mov
adc
xchg
dec
adc
andl
xchg
sub
push
addb
dec
test
mov
mov
cmp
fcmove
push
js
imul
or
test
xor
push
cmp
pop
unpcklps
jecxz
dec
and
or
dec
out
pop
rol
lock
dec
add
cmp
stos
xorl
sub
imul
movsb
sarb
mov
ret
rclb
popa
mov
or
jb
mov
orl
or
pop
push
rcrl
xor
add
mov
inc
mov
fwait
sub
ret
inc
cmp
xor
sub
add
je
repz
mov
dec
pop
xchg
jnp
adc
arpl
lcall
stos
mov
jo
daa
fnsave
jecxz
shl
ret
dec
mov
js
mov
jg
xchg
shlb
daa
mov
add
outsb
jns
mov
into
mov
ja
mov
lds
pop
repz
jns
or
push
test
in
sbb
adc
mov
mov
addr16
pop
pop
jbe
sbb
add
outsl
mov
js
clc
sti
sub
int3
andl
sub
fiadds
je
jp
sbb
mov
and
lret
jne
cli
push
xchg
jge
arpl
insb
sub
pop
out
jecxz
cmc
xor
jnp
test
in
ljmp
lea
stos
cltd
sbb
push
repz
xor
mov
add
pop
mov
dec
ficoml
arpl
jbe
pop
movsl
lods
inc
dec
cmp
inc
in
ljmp
shl
pusha
push
dec
jge
cmpsl
xchg
jo
shr
div
push
add
lds
pushf
leave
xor
loopne
jle
sahf
ljmp
dec
movl
loopne
jmp
or
mov
push
cld
in
inc
jb
loopne,pn
xchg
rcll
fmuls
scas
int
adc
stos
add
pop
xchg
nop
out
jg
and
dec
icebp
mov
dec
mov
movsb
cs
in
cmpsb
insl
js
test
ja
mov
or
stos
in
ss
inc
addr16
sbbl
and
movups
sti
and
cwtl
cld
add
mov
lock
cmp
push
daa
imul
or
pop
push
push
xchg
push
push
jnp
fidivs
xor
imul
fldt
popa
cmpsb
inc
arpl
ss
mov
mov
inc
das
ljmp
or
add
popf
xor
mov
lea
dec
jmp
outsl
cltd
or
push
mov
in
xchg
adc
cmp
cld
cltd
aas
orb
cmp
pop
cwtl
push
add
scas
pop
fistps
adc
ja
insl
adc
cli
lock
stos
mov
mov
or
stos
dec
jle
pop
stc
imul
addl
int
add
or
xchg
sbb
cmp
jmp
pop
push
mov
rcl
test
mov
push
mov
sbb
gs
jl
out
pop
mov
std
jmp
inc
test
aaa
or
sbb
out
ljmp
inc
mov
sub
dec
scas
push
dec
sbb
mov
dec
nop
dec
mov
inc
popf
or
loope
and
inc
pop
mov
sti
and
cmp
mov
adc
aam
pop
cmp
popa
cli
jo
arpl
loope
cmp
jno
push
inc
sbb
into
jbe
push
repz
jp
ficompl
push
lea
iret
pusha
mov
fdivs
fisubs
das
sub
lods
and
mov
pop
mov
fs
idivb
push
int
shrl
int
sub
fdivrs
hlt
fstl
add
mov
sbb
mov
jnp
cmp
aaa
adc
lret
js
arpl
lods
xor
mov
jno
xchg
sbb
fidivl
cwtl
add
sub
leave
inc
pop
cmp
push
xor
mov
cmp
pop
jno
sub
dec
sbb
loop
out
add
aaa
movsl
mov
add
clc
sbb
sub
andl
xor
ret
push
int
push
mov
pop
test
loopne
lock
or
xchg
stos
outsb
cmp
test
and
pushf
jns
jge
sub
jp
sbb
fwait
into
inc
clc
fnstcw
lods
test
pop
mov
xchg
sarb
ljmp
xor
cmp
push
push
enter
sbb
cmpl
jnp
bound
pop
jle
jns
jg
jp
ljmp
xorb
mov
icebp
test
loop
sarb
adc
jmp
xor
insl
shrb
movsb
mov
cs
pusha
rorl
repz
int3
adc
decb
sub
cmp
mov
push
sbb
cmp
imul
icebp
inc
stos
push
cmpsb
push
xor
dec
negl
dec
shrl
xor
fnstsw
int
mov
addl
out
or
cmc
mov
popf
fnstsw
imul
xor
xor
popf
shrb
push
xor
mov
dec
add
cmp
mov
gs
mov
arpl
adc
into
dec
test
test
fstpl
mov
inc
test
mov
rorl
add
popa
insl
les
rorb
jb
ja
aas
lret
pop
mov
jmp
xchg
aam
mov
push
addr16
lret
sar
mov
cmpb
loop
push
cli
mov
inc
push
out
popa
or
mov
ret
mov
test
fistpl
ss
daa
adcl
jbe
aas
lea
insb
sti
mov
dec
test
aas
inc
mov
cmp
pop
imull
dec
pushf
cwtl
test
sbb
push
iret
pop
adc
mov
jle
rol
adcl
cmp
int
or
xchg
rep
push
add
adc
jmp
rolb
and
mov
std
lods
cmpl
pop
inc
mov
sbb
call
mov
pop
stc
xchg
mov
mov
jmp
mov
ret
sbb
jbe
xchg
dec
fs
mov
or
sbb
subb
pop
mov
mov
inc
push
test
insb
xor
outsl
and
repnz
ret
mov
xor
aad
ljmp
dec
movsb
les
pop
loope
add
dec
xor
hlt
aaa
adc
shll
ret
cwtl
pop
jbe
adc
and
mov
dec
fldt
and
mov
test
pop
mov
out
mov
shrb
ja
mov
les
jg
movsb
arpl
xlat
inc
jge
sbb
dec
xchg
movsl
repnz
stos
xor
sub
mov
fisubrs
stos
gs
sub
mov
adc
insl
push
dec
pusha
stos
adc
add
or
sub
movsl
jns
hlt
xchg
insb
lret
into
imulb
outsb
sbb
adc
sub
jge
or
ret
push
jl
jle
je
push
cld
icebp
mov
mov
lahf
out
jl
push
pop
negb
lret
push
sub
push
mov
mov
jnp
add
lds
popf
or
add
sbb
mov
add
sub
sahf
fnstcw
dec
xchg
jo
or
rolb
dec
jno
and
shlb
or
xchg
movsb
clc
mov
pop
mov
push
mov
das
jg
inc
adc
or
mov
lea
into
xor
mov
inc
mov
sahf
lahf
mov
pop
popf
adc
dec
mov
das
bts
scas
ss
jns
std
cltd
sahf
jns
push
mov
mov
arpl
fiadds
arpl
mov
aaa
jecxz
dec
bound
lcall
or
aas
inc
mov
xchg
test
incl
jns
in
mov
les
es
int
in
and
and
lahf
daa
mov
jecxz
insl
jbe
mov
cmp
and
and
imul
in
loop
jbe
call
mov
push
subl
arpl
mov
jne
jae
push
jle
pop
cmp
mov
dec
jns
sbb
aaa
sub
jmp
add
int3
test
mov
push
into
sbb
aad
inc
test
xor
testl
mov
or
push
ss
mov
adc
sub
ss
inc
jmp
sahf
je
jbe
adc
andl
push
lret
push
inc
or
loopne
pop
pop
mov
shlb
xlat
mov
cltd
mov
adcl
das
mov
mov
fisttpll
pop
mov
pop
sub
sahf
dec
jmp
cmc
or
out
or
and
orl
jle
add
in
leave
jbe
outsb
xchg
adc
es
inc
in
pop
xchg
dec
lock
xor
ficoml
test
pop
sub
cli
pop
aaa
lea
pop
mov
push
arpl
xchg
and
adc
fnstcw
cmp
aam
cmp
mov
jae
aad
lods
loope
jmp
adc
invd
jge
data16
xchg
pop
stos
jmp
push
in
ja
aad
scas
push
push
push
mov
sub
and
xchg
negb
cmpsb
scas
inc
ret
jecxz
add
push
sbbb
sub
or
fiaddl
add
xchg
dec
and
push
arpl
in
mov
jnp
xor
xor
ljmp
cmp
iret
ficomps
pop
push
rcrl
clc
iret
leavew
inc
or
jbe
imul
pop
pop
xchg
roll
cmpsb
xor
inc
mov
les
cltd
cmp
outsl
mov
orb
and
loopne
jne
int
aad
or
outsb
cmpsb
pop
cmpsb
jb
mov
add
mov
ret
mov
adc
mov
sbb
sub
int3
xchg
jge
test
cmp
jb
add
je
dec
inc
pop
scas
push
cmp
fimull
mov
and
cmpsl
mov
mov
mov
sub
lods
xchg
sub
into
test
adc
jb
sub
pusha
incl
adc
inc
push
mov
divb
sbb
pushf
pop
or
out
sahf
dec
adc
cmp
int
movl
push
add
bnd
or
not
int3
insb
std
fsubrs
push
cltd
sbb
jo
movsl
and
xor
imul
int
lea
aaa
inc
fcoml
mov
fldln2
fwait
cmp
inc
clc
faddl
push
popf
xchg
test
fisubs
mov
xchg
adc
fwait
hlt
sbbb
pop
push
or
lcall
inc
or
jmp
popa
push
dec
xor
loope
lret
jl
and
cmpsl
jno
push
xchg
mov
aad
sub
xchg
mov
mov
add
out
cltd
push
std
enter
jle
ljmp
dec
dec
and
pop
jnp
sub
add
adc
xor
imul
dec
push
jns
mov
and
das
cmp
jnp
into
mulb
and
test
inc
xorl
in
scas
cmp
xchg
leave
mov
pop
jecxz
add
js
cmp
or
add
jno
sub
dec
movaps
push
jo
ja
and
mov
mov
push
cltd
negl
inc
lea
sbb
imul
stc
stc
loopne
add
push
push
popf
fcmovu
cs
push
inc
nop
nop
xchg
and
mov
mov
xchg
js
mov
jo
mov
and
pop
dec
jmp
popf
fnstcw
movsl
shr
fldt
mov
push
cld
lret
fcmovne
mov
jmp
loopne
jno
in
das
cmp
dec
das
loope
pop
xchg
xchg
hlt
mov
jnp
andl
mov
into
push
add
cmp
mov
movsl
orl
sbb
lock
push
shlb
mov
data16
lods
and
lahf
mov
in
adc
sub
adc
fwait
js
test
movsl
push
mov
into
int
or
xchg
mov
fisubrs
mov
out
sti
icebp
int
movsl
sub
insb
add
xchg
fsubl
fbld
xchg
aad
fnstsw
outsb
daa
mov
inc
mov
cmc
mov
sar
lock
mov
ret
sbb
ret
xorl
pusha
xor
mov
jmp
cmp
bound
pop
mov
mov
mov
dec
xor
repnz
insl
out
mov
push
mulb
pop
cltd
mov
push
cmp
sub
pop
push
ja
push
loope
add
jnp
mov
fimull
into
mov
add
iret
mov
shlb
shr
jbe
cltd
mov
mov
pop
mov
pushf
push
ret
aaa
jmp
xor
sbb
mov
lods
repz
xchg
rol
mov
push
das
sbb
fs
mov
loopne
int
fiaddl
ds
sbb
gs
lea
inc
gs
cmp
shlb
mov
jmp
stos
jp
sbb
mov
fidivrs
cs
pop
fdivrs
ljmp
movsb
dec
add
fiaddl
fwait
xchg
cmpsl
cli
nop
sbb
scas
pop
in
inc
es
fwait
popf
popf
push
test
sub
adc
repnz
mov
jg
adc
inc
std
in
punpcklwd
push
jne
insb
xor
pop
movsl
and
push
fs
ret
lcall
rclb
pop
add
cmp
sub
pop
sbb
outsl
in
loopne
sub
dec
int
ds
ljmp
or
cmc
or
les
xchg
in
pop
das
out
cmc
and
stos
inc
or
sbb
or
mov
sbb
dec
or
push
sbb
adc
scas
es
sbb
hlt
inc
sub
test
test
mov
push
cmp
ror
jno
lret
jle
sub
push
fwait
xchg
je
ss
xor
push
adc
push
mov
cmc
movsl
cmp
add
adc
pop
and
or
cmpsl
out
test
lcall
or
das
lds
sbb
push
pop
sub
repz
lret
jns
push
jp
mov
dec
leave
mov
and
gs
cmp
sub
pop
shrb
and
popa
aam
or
lcall
imul
cmp
inc
or
or
jne
mov
rcr
sbb
push
add
popa
sbb
es
xor
sbb
jbe
out
lods
lahf
inc
pop
or
inc
add
xchg
or
ret
fadd
push
add
or
leave
or
sbb
inc
loope
dec
dec
dec
dec
push
mov
jmp
out
xor
jno
mov
push
inc
mov
jnp
sti
inc
testl
jae
ret
mov
fwait
dec
andl
pop
iret
lahf
mov
dec
sub
xchg
loope
sbb
lds
pusha
and
clc
ret
stc
dec
jo
sbb
push
fdiv
out
int
inc
fcoml
out
cltd
sbb
mull
repz
imul
jb
repnz
popa
scas
add
push
add
test
xchg
inc
mov
mov
lahf
xor
es
xor
jns
insb
xor
mov
pop
mov
gs
scas
daa
add
insl
sbb
add
and
shll
push
repz
mov
xchg
and
pop
test
out
test
or
push
ljmp
mov
mov
and
lcall
dec
xor
or
test
push
mov
push
icebp
gs
dec
aaa
push
ljmp
sbb
test
jae
mov
push
and
or
add
jnp
or
je
cmp
push
cwtl
inc
sub
cmp
scas
add
pop
mov
jae
movsb
clc
add
cwtl
push
xchg
scas
in
pop
ljmp
inc
jo
and
and
cmp
xchg
jle
mov
rorl
inc
sbb
lret
pop
add
fildll
repz
enter
jae
sti
pop
sbb
xchg
scas
outsl
xchg
sti
jno
and
into
fwait
outsl
inc
cmpb
add
int3
jge
bound
shl
ss
test
jo
add
jmp
pop
clc
pusha
aaa
jecxz
jecxz
and
pop
outsb
fcomip
sbb
dec
adc
add
mov
fs
fidivrl
jae
in
push
mov
stos
push
ret
jp
outsb
jp
out
adc
add
insl
mov
fisubrs
mov
pop
outsl
adc
cmp
pop
mov
sbb
fwait
mov
jl
xchg
insb
pop
push
stc
shll
or
mov
ss
mov
cwtl
stc
js
push
loope
imul
pop
mov
ret
pop
pop
rcrb
xchg
mov
adc
add
ds
pop
int
ret
dec
mov
int
icebp
and
push
cmp
sarl
stos
test
loope
push
ljmp
mov
fsubs
repz
fistps
cmpsl
sbb
pop
hlt
push
xor
lods
les
lds
scas
jmp
es
add
int
mov
out
lock
cmp
ret
push
sbb
inc
mov
pop
aam
xor
dec
cs
call
cli
out
mov
push
aas
ljmp
pop
lcall
push
outsb
in
dec
mov
and
jmp
test
test
shrd
cmp
add
or
ret
push
dec
push
add
mov
ret
mov
inc
test
mov
inc
mov
je
and
sbb
int3
dec
out
mov
mov
xor
ljmp
lret
xchg
cmp
and
mov
mov
jb
pop
mul
pop
mov
mov
inc
pop
sbb
stos
aad
or
xchg
stos
stos
xchg
pop
subl
les
push
test
xchg
jge
iret
pusha
dec
mov
hlt
call
loop
pop
int3
mov
popf
movsb
popa
inc
fwait
fwait
rcrl
mov
or
fisubrs
notl
xchg
push
ret
gs
pop
pop
mov
pop
xor
dec
scas
adc
mov
and
test
es
push
enter
scas
into
xlat
les
cmp
mov
jnp
mov
jae
call
ficoml
test
stos
and
stos
adc
sti
daa
lds
arpl
xchg
shr
repz
das
mov
push
outsb
fidivs
adc
push
cmp
stc
fisttps
mov
subl
sub
jp
rcll
or
mov
hlt
dec
addr16
xor
fildl
aad
cmp
pop
mov
imul
notl
sarb
add
adc
xor
repnz
push
lea
pop
xchg
xor
and
add
pusha
scas
popf
loopne
add
cld
cmp
mov
sahf
repz
jle
adcl
push
jno
xchg
mov
out
scas
pop
imul
xor
fsubs
es
lahf
xchg
cmp
push
dec
out
test
xchg
sbb
mov
lds
jmp
arpl
pop
lock
ret
xchg
call
insb
mov
push
aas
mov
movsb
push
mov
dec
sbb
daa
pop
cltd
dec
cmp
push
scas
ficoms
adc
mov
sbb
lods
add
not
push
xchg
loope
cmpl
mov
pusha
fidivs
cmc
loopne
jno
call
outsb
push
stos
or
and
adc
add
icebp
add
rcr
jb
pcmpgtw
pop
sub
adc
adc
scas
or
mov
cld
and
mov
mov
sbb
stc
jge
jo
jecxz
ret
shl
stc
mov
sub
in
push
push
mov
push
sbb
mov
cmp
mov
sub
mov
jmp
xchg
outsb
mov
loop
mov
insb
ret
scas
in
repnz
out
aas
adc
pop
jp
loop
lods
mov
jp
xchg
mov
inc
or
es
cmp
sbb
and
aam
jne
inc
sbb
jbe
repnz
lcall
mov
xchg
in
andb
mov
insl
sbb
or
out
test
add
pop
mov
mov
lahf
cmpsb
cli
cmp
or
xchg
xor
adc
jbe
lea
mov
adc
cli
mov
push
or
enter
cltd
mov
pop
movsl
mov
add
inc
data16
push
jmp
and
cwtl
bound
lahf
jne
dec
ss
cmp
sbb
add
pop
sub
pop
inc
lret
shlb
mov
inc
aaa
loopne
mov
jae
push
xchg
xchg
pushl
mov
sub
shlb
push
addr16
mov
inc
cwtl
ds
mov
das
xchg
adc
mov
stc
out
nop
lcall
push
jle
lret
mov
int
popf
enter
and
dec
shl
lret
cmp
jnp
mov
push
cld
adc
mov
lods
negb
push
xchg
jmp
shlb
dec
jbe
out
icebp
add
mov
mov
in
pop
ljmp
and
icebp
mov
mov
or
dec
jecxz
jge
xchg
pop
and
test
push
jle
mov
ja
rolb
mov
mov
scas
or
or
sbb
ja
testl
mov
dec
pop
sbb
loop
adc
ljmp
or
out
sub
clc
and
and
out
test
xor
xlat
in
out
jmp
mov
std
inc
ja
mov
pop
pop
ret
mov
add
xor
xlat
mov
or
rcrb
mov
popa
push
mov
orb
xchg
filds
lret
mov
repz
push
test
sub
mov
mov
add
jge
in
test
mov
dec
addr16
xchg
lea
dec
and
clc
or
adcl
fsqrt
stc
lds
in
imul
pop
dec
pop
pop
mov
out
fwait
js
mov
jmp
les
imul
enter
jecxz
mov
les
push
int3
in
xor
notb
hlt
adc
inc
push
stos
jp
push
adc
or
jmp
cltd
repnz
repz
ja
test
cmpsl
and
push
jbe
mov
int3
jge
sub
cwtl
test
adc
cmc
lret
fadds
xor
xchg
xor
cmc
enter
test
push
in
in
add
daa
sub
int
and
inc
adc
mov
pusha
testl
xor
cmp
loop
sar
mov
mov
lock
std
jbe
mov
das
fdivrs
xchg
mov
or
jns
ljmp
push
jno
xor
out
mov
lock
incl
cli
in
fsub
lahf
push
incl
mov
jle
fbstp
and
pop
adc
scas
mov
js
push
adc
call
mov
adc
lahf
mov
mov
sbb
dec
mov
mov
sub
popa
add
pop
imulb
jge
in
push
loopne
dec
add
aas
icebp
shlb
stc
cmpsl
inc
fstpl
loopne
cmp
cltd
xchg
push
inc
adc
bound
fisttps
leave
mov
leave
mov
sbb
cmp
push
repz
rcr
pop
mov
ss
dec
ljmp
mov
xlat
push
add
aam
inc
shr
enter
icebp
push
and
sbb
rcrb
xor
and
imul
rolb
scas
outsl
clc
dec
std
jecxz
sbb
fiadds
jo
xchg
in
pop
outsl
xchg
stos
fwait
movsb
sub
cmp
std
cmp
ret
mov
pmaxub
shlb
in
cmpsl
or
mov
add
jo
jp
aaa
mov
mov
jae
push
gs
fimuls
push
xchg
test
pop
cmp
fsubrl
push
add
stc
jb
adc
test
jne
or
mov
fmull
gs
xchg
pop
mov
lea
mov
cld
xchg
xchg
movsl
hlt
adc
mov
loope
leave
push
div
aaa
add
jae
inc
xchg
sbb
sub
lret
shlb
fildl
lds
push
adc
repz
out
cltd
cmpsl
adc
ds
add
jns
and
cltd
push
push
pop
ret
inc
jp
cltd
popf
pusha
sub
mov
sub
xor
jecxz
outsb
pop
or
lock
dec
jnp
sbb
push
sarl
xor
daa
pop
js
stos
and
fistpl
outsb
scas
test
push
inc
dec
cmpsb
and
out
push
daa
into
lahf
dec
je
adc
xlat
lods
daa
imul
adc
movsb
lahf
mov
push
mov
cmpsl
dec
clc
inc
inc
addr16
cmpsb
fcmovne
lock
test
jp
adc
sbb
sbb
cmp
add
add
lret
mov
ljmp
out
mov
pop
inc
mov
jmp
jg
fisubrs
idivb
sub
fnstsw
adc
in
js
mov
xchg
iret
inc
int3
or
add
cs
push
xlat
jecxz
xchg
lods
cwtl
loope
repz
jp
push
or
push
repz
or
es
or
sub
shr
and
lret
aas
cs
mov
push
push
and
les
sbb
loopne
scas
lcall
cmp
cltd
sbb
sbb
or
into
das
sbb
andl
push
scas
gs
sti
es
icebp
cmpl
aad
aaa
push
inc
and
lret
push
mulb
xchg
cmp
leave
dec
mov
fldl
out
mov
bound
std
mov
mov
cs
stos
mov
cmp
into
icebp
cmpl
sbb
lods
cld
dec
aam
orl
sub
xlat
sub
adcl
out
sub
push
insb
mov
mov
cmpl
aaa
mov
div
xchg
pop
fs
jno
shll
lods
mov
mov
jno
and
test
jecxz
adc
mov
int3
mov
into
sub
call
lret
shl
xchg
je
mov
sbb
enter
or
xchg
cmp
lahf
xor
cmp
sub
sbb
jns
arpl
and
sbb
mov
stos
jo
xchg
in
mov
int3
sbb
pop
xchg
add
lret
mov
fs
rorb
pop
mov
int3
pushf
sub
out
cld
vpsubb
xlat
mull
gs
cmp
cwtl
xchg
popa
shrl
mov
les
repnz
rorl
push
jmp
dec
jb
or
pop
mov
inc
sarl
jecxz
sarl
inc
mov
ss
rcrl
aas
loope
pop
enter
mov
add
daa
pop
add
jbe
inc
out
jne
lcall
inc
xchg
adc
add
in
add
sbb
ljmp
mov
inc
lods
cmpsl
notl
repz
jns
inc
in
push
push
inc
dec
orl
movsl
dec
sbb
aam
dec
dec
push
jns
push
dec
movsl
adc
xor
push
sub
xor
lods
jo
stos
cmp
pop
or
xchg
hlt
fwait
adc
enter
pop
movsl
sti
mov
ja
loope
cld
in
xorl
xor
enter
movsl
fdivs
sbb
jo
cmpsb
stos
les
mov
bswap
std
pop
pop
scas
pop
xor
jp
xchg
fcomip
add
sub
pop
clc
push
aam
or
cmpsb
lret
subl
or
inc
sbb
idiv
and
ret
out
popf
push
test
in
xor
push
xlat
in
lcall
add
loop
push
push
scas
cmp
inc
fldl
lods
mov
lds
and
cmp
adc
inc
test
ds
inc
mov
sbb
ja
inc
movsb
mov
test
nop
mov
push
out
leave
stos
divb
inc
mov
aam
sbb
shlb
or
lcall
loopne
adcb
outsb
push
insb
mov
cmpl
pop
rclb
xor
jae
or
cmp
scas
mov
add
mov
les
mov
lock
and
iret
and
clc
fldt
cmp
or
sub
fidivs
nop
push
leave
loop
mov
cli
cld
xchg
insb
lods
mov
mov
hlt
rol
call
mov
adc
push
push
in
xchg
and
aad
fcmovnbe
fildl
xor
sbb
xorb
push
lahf
cmp
xor
cmp
iret
mov
mov
movsb
rclb
xchg
call
nop
jno
jge
add
mov
rorl
jns
cs
mov
push
mov
push
cmpsl
xor
shr
cli
fldl
movsl
popa
popa
sbb
dec
dec
in
jge
jecxz
lcall
sub
shl
sub
repz
xchg
inc
xlat
scas
xchg
xor
adc
or
push
fwait
adc
mov
test
xchg
xchg
lds
cmp
inc
jns
sub
mov
shlb
mov
inc
xor
pop
ffree
out
call
push
imul
rol
push
mov
sbb
cmp
xor
adc
xor
cmpsl
mov
fdivrs
sub
lds
or
je
push
popa
stos
or
in
data16
push
pop
inc
aas
imul
ds
cltd
add
lea
repz
loop
gs
aam
sbb
shrl
xchg
mov
ret
xchg
mov
scas
push
xor
jno
mov
push
dec
mov
pop
xchg
inc
sub
add
jecxz
or
mov
xor
in
mov
add
out
jge
ljmp
mov
inc
test
push
popa
aad
sbb
out
shll
movsl
loope
loopne
jbe
dec
xchg
movsb
out
mov
clc
fcmovb
or
js
push
stc
out
mov
popa
and
and
fcoml
xchg
pushf
push
inc
xchg
fidivs
in
xor
lahf
mov
lcall
jecxz
bound
or
fsubrl
aaa
push
mov
mov
jno
outsl
or
scas
iret
out
sti
stos
add
mov
fisubl
sti
pop
and
loope
sarb
imul
sbb
mov
lcall
xor
cli
mov
js
pop
shll
xor
pushf
ret
push
and
movsl
mov
push
into
dec
cltd
scas
jmpw
movsb
sahf
loopnew
ficompl
jl
mov
lret
cltd
repz
pop
jp
aam
test
sahf
xchg
test
int3
lcall
jae
idivl
mov
fimuls
aam
dec
xor
icebp
popa
dec
cmp
mov
pushf
cmp
inc
cmp
mov
lahf
cmpsl
fcoms
das
push
dec
fnstenv
int
or
and
fwait
lret
data16
cli
add
or
mov
xchg
dec
jo
push
popf
xchg
mov
xchg
mov
cs
sbbb
leave
pushf
add
addl
sub
dec
pop
mov
je
leave
pop
sbb
fcomi
shlb
insb
inc
push
xor
cmp
loop
jle
arpl
dec
inc
icebp
movsb
inc
add
cld
add
pop
sti
mov
mov
mov
in
dec
mov
add
test
pop
push
idivb
jge
rcrb
adc
out
mov
push
sbb
push
inc
xor
mov
sub
imulb
mov
cli
fs
sub
inc
jo
xor
pop
shll
or
iret
jg
add
sbbb
add
add
mov
inc
lret
cmp
and
or
dec
add
mov
jns
enter
rol
mov
sahf
mov
dec
or
call
xchg
mull
jb
mov
sub
push
push
lock
pop
xchg
pop
mov
xor
inc
xchg
or
scas
je
mov
xchg
xchg
or
stos
fnstsw
dec
imul
dec
xchg
cli
push
xchg
push
cmp
dec
xor
dec
fucomp
iret
sti
dec
xchg
loopne
lahf
fwait
xor
pop
call
jne
xchg
sub
xchg
call
cmp
mov
rcll
pop
mov
out
rcrl
outsb
aam
arpl
sahf
cmp
cmp
add
cmp
xchg
mov
insb
in
dec
adc
sbb
stos
popa
fistl
adc
in
out
ret
dec
mov
in
daa
lods
fidivrs
and
and
lods
pop
insl
add
jmp
in
cmp
fldl
push
daa
sub
inc
cld
dec
idiv
xchg
push
xchg
mov
pop
xchg
push
test
call
test
ret
jge
mov
in
fsubs
mov
mov
lcall
cmp
pushf
inc
dec
sub
aaa
lock
insb
pop
fwait
push
out
mov
xchg
jae
and
ljmp
add
call
mov
push
sub
sahf
cmp
shlb
test
rcll
mov
push
and
imul
fists
cmp
mov
mov
in
es
cmpsb
std
clc
or
movb
and
sub
sti
or
test
cmp
mov
aas
push
insl
pop
inc
mov
mov
mov
fdivr
jno,pn
jecxz
push
scas
stc
xor
add
add
and
in
iret
xchg
mov
xchg
movsl
cli
and
xor
aam
sub
scas
aad
gs
les
int
pusha
in
aam
jo
xor
pop
in
dec
or
or
test
inc
fcompl
es
test
loope
fwait
push
and
mov
bsf
cmpsb
mov
mov
mov
jo
into
or
lcall
out
lret
popa
adc
and
bound
fcomps
mov
or
cmpb
inc
and
dec
jecxz
mov
adc
ret
in
aas
and
sub
sub
pop
test
std
nop
aas
mov
cmp
fidivrs
jno
push
sub
adc
fcoms
cltd
or
repz
outsl
mov
mov
loope
out
out
mov
shl
push
jmp
jne
lcall
in
jne
inc
jge
daa
add
mov
in
mov
jb
outsb
lods
or
out
cwtl
lock
add
rorb
out
sbb
je,pt
ljmp
push
mov
mov
cmp
scas
ficoms
cmp
int
int
xor
dec
addb
nop
cltd
jnp
pop
sub
push
addr16
test
xchg
out
in
lods
xchg
inc
jg
inc
out
lcall
rcll
cmp
and
push
gs
and
sub
push
or
inc
push
lahf
dec
test
call
push
dec
xchg
xchg
movsb
loope
nop
xor
fs
mov
cmpsl
iret
cmp
std
inc
adc
gs
aaa
loop
lock
push
fldenv
loopne
fdivrs
mov
or
imul
or
mov
cld
aas
cs
and
jo
out
aam
std
fisttpll
imul
fistps
xchg
xchg
pop
sbb
xchg
sti
cmc
mulb
mov
mov
adc
test
jnp
adc
push
cmp
aam
mov
call
das
inc
push
and
adc
mov
insl
inc
sbb
imulb
movsl
fwait
add
out
pop
pushf
pop
mov
mov
lock
jge
xchg
sbb
and
and
cmp
and
fwait
iret
enterw
mov
adc
int3
xchg
pusha
les
addl
dec
and
xor
test
dec
fiaddl
adc
mov
or
lods
mov
xchg
cld
sub
and
addl
mov
mov
aaa
pop
jge
xor
sub
mov
in
add
cli
mov
sub
cs
mov
arpl
and
adc
push
sahf
xor
stos
out
addl
pushf
negb
sub
mov
jbe
and
in
dec
add
enter
dec
dec
movsl
dec
or
add
ficompl
adc
mov
sub
loope
fildll
dec
jae
or
std
fisubrl
sub
inc
mov
or
pop
adc
loop
out
push
cmp
jo
cmp
adc
out
outsl
sbb
adc
pop
or
xlat
aaa
iret
scas
sti
sbb
mov
scas
lds
movsl
jecxz
sbb
mov
movsl
loopne
mov
movb
mov
ljmp
or
dec
adc
movsb
imul
rorb
inc
mov
fwait
jns
ret
test
aaa
add
out
imul
add
add
shlb
lea
adcb
test
test
int
mov
adc
mov
push
or
addb
inc
jae
ficomps
add
push
pop
icebp
fcmovnu
aaa
pop
jb
push
out
xor
add
mov
fstpt
out
andl
outsb
xchg
into
or
nop
inc
inc
inc
out
mov
int3
fistl
fadd
es
nop
pop
xchg
mov
out
shrb
jno
cmp
and
and
hlt
movsl
outsl
jne
push
mov
xchg
hlt
pop
xchg
mov
addr16
bound
add
xchg
clc
add
fsts
cmp
pop
sbb
nop
cmp
adcb
fmul
lea
inc
mov
inc
or
das
and
mov
inc
iret
mov
test
mov
cmp
test
and
jg
lcall
int3
lea
push
and
pop
sub
jecxz
xor
xchg
add
mov
adcl
aad
add
cmp
dec
sub
adc
pop
push
pusha
mov
sbb
popa
daa
repz
outsb
xchg
mov
js
mov
sub
inc
lahf
sub
fsubs
push
ret
mov
xchg
and
mov
pop
popa
jmp
inc
fcomp
jae
mov
test
fisubrl
shrl
adc
mov
push
jb
mov
fbld
lock
bound
mov
dec
stos
sbb
aad
cltd
je
enter
mov
popf
xor
repz
dec
stos
pop
sbb
in
sub
cmp
push
rorb
fisubs
sbb
and
bound
leave
adc
push
inc
fisttpl
mov
dec
adc
jae
cmc
mov
pop
dec
lahf
cltd
jle
push
out
cmp
cmpsl
inc
add
jno
adc
xor
shl
cmp
jnp
or
sub
mov
and
adc
movsl
mov
lcall
sbb
mov
sbb
push
cmp
je
jae
dec
addb
jmp
inc
fistpll
jo
mov
fimull
cld
aas
xor
leave
repz
or
xor
leave
inc
inc
insl
jo
lret
mov
add
insl
add
sahf
in
add
scas
aaa
mov
test
mov
jo
mov
or
sbb
icebp
cmp
insl
bound
jmp
xchg
fdivr
jne
push
jbe
ret
jnp
cmp
xor
iret
out
sbbb
inc
and
mov
mov
lahf
adc
test
mov
xor
out
push
jns
xchg
cmpsl
scas
and
push
in
pop
rcrl
ja
dec
jne
lea
xchg
aam
dec
xor
lock
call
sbb
aam
movsl
xor
dec
xor
xchg
mov
fldt
push
aas
test
push
pop
cmp
inc
xlat
sub
sbb
jecxz
in
mov
ror
xor
adc
jl
mull
dec
inc
or
pop
fs
pop
sub
push
jo
mov
cs
xchg
das
hlt
insb
cs
and
stos
adc
jno
mov
in
sbb
insl
mov
xor
sti
cmc
xchg
pop
sub
scas
or
push
adc
push
rcrb
mov
cmp
sub
ret
mov
pop
lea
mov
test
cmp
xchg
sbb
icebp
jb
push
jp
sub
inc
test
out
dec
cmpsb
dec
cmp
fcoml
lret
jle
xchg
pusha
mov
fcomps
pusha
pop
mov
ret
push
fcmovne
sbb
out
test
cltd
fiaddl
adc
jmp
jp
cmp
xchg
ja
jae
movsb
fstl
cli
cwtl
ja
or
and
sarb
push
into
pop
pop
ss
mov
pop
decl
cmp
ror
or
dec
insl
lock
cwtl
les
out
dec
movb
pop
das
mov
cmc
xor
xchg
mov
cmp
mov
shr
in
push
mov
add
popa
hlt
int3
or
mov
add
les
cld
addb
cmpsl
push
dec
jns
xchg
cltd
lds
mov
and
test
insb
test
nop
inc
repz
inc
push
or
dec
in
sub
and
pmulhuw
fldt
ss
gs
xchg
sbb
in
nop
xchg
push
adc
rolb
push
adc
inc
mov
stc
in
jne
fs
mov
es
sti
pop
xor
outsb
leave
mov
sbb
bound
int
shll
inc
and
mov
lret
mov
arpl
imul
iret
sbb
dec
dec
inc
cmc
sbb
xchg
add
jb
sub
add
mov
leave
inc
inc
mov
movsl
rcr
roll
push
jl
jo
mov
pop
fwait
aaa
lahf
mov
sahf
cwtl
and
mov
dec
jecxz
fs
pop
cmp
and
and
int3
inc
and
jb
sarl
or
inc
stos
push
adc
push
adc
jnp
lock
adc
jp
nop
or
inc
int3
sub
loope
push
jae
push
add
jo
inc
cmp
and
sbb
out
pop
push
sub
fldcw
sbb
and
lock
ret
dec
mov
mov
mov
push
stos
cmp
lods
push
push
inc
dec
ret
mov
push
popa
adc
pop
dec
and
daa
cmc
fsubl
aam
and
aas
fdecstp
and
shll
jnp
adc
mov
inc
push
jno
inc
stc
adc
aaa
jg
cmpsl
stos
push
lock
gs
jno
ja
rcrb
cmp
das
mov
cmpsl
and
shrb
cmp
out
sbb
notb
fbstp
call
aas
repnz
mov
lods
xchg
popa
scas
push
outsl
push
jnp
xor
adc
loope
aam
mov
fdivs
dec
mov
aam
insb
add
jmp
dec
repnz
popf
lahf
add
or
or
aam
push
mov
sarl
movsl
or
adc
sub
imul
bnd
lods
sub
rorb
cltd
leave
ret
mov
mov
xorl
xor
repz
hlt
xchg
ds
cmp
mov
sbb
out
roll
push
mov
inc
cmp
shl
sbb
mov
push
xor
ret
jmp
je
cmp
and
pop
out
pop
enter
inc
add
mov
mov
mov
lret
loope
je
shr
arpl
sbb
sbbl
adc
push
stc
insb
pop
push
mov
jp
mov
mov
cltd
div
stos
mov
add
shll
push
jnp
in
mov
out
test
mov
cld
xlat
push
mov
jmp
addb
ljmp
repnz
iret
in
or
jecxz
pop
jno
enter
mov
sub
jp
and
loop
in
scas
mov
daa
fistpl
jae
lahf
in
cwtl
dec
add
sarl
int3
in
fwait
adc
push
or
inc
add
aad
call
stos
imul
aas
into
pop
lcall
out
imul
fidivrs
mov
loop
imull
add
or
loop
repz
adc
test
inc
pop
test
pop
in
sub
pushf
and
and
es
fs
push
out
mov
mov
stos
inc
push
fistpl
fldt
sub
out
fstl
lahf
jp
pop
cmpsl
data16
sub
icebp
cs
ret
xchg
add
sbb
fadd
dec
loop
add
push
aaa
aaa
sub
cli
and
out
xor
mov
mov
pop
sbbb
cmc
or
call
lods
loope
jbe
js
adc
popa
adc
or
mov
and
sbb
dec
xor
arpl
xchg
cmp
mov
mov
cmp
xchg
pop
dec
or
xor
dec
sti
repnz
xchg
insb
mov
pop
lretw
push
out
cmc
out
es
dec
pop
inc
pop
pop
out
std
sbb
mov
pop
mov
shrl
add
scas
enter
fisubs
xorb
int3
xor
insl
movsl
mov
repnz
dec
leave
into
xor
dec
sub
test
icebp
pop
push
mov
inc
cmp
dec
cli
xchg
mov
pop
push
jo
mov
sahf
outsb
push
lahf
outsl
loopne
outsl
sbbb
inc
in
addr16
notl
std
inc
icebp
mul
jge
xchg
add
xor
mov
into
cmp
inc
fsubrl
loop
lahf
cwtl
fisubrl
jl
incb
pop
fwait
data16
out
jb
pop
pop
xchg
fisubrs
out
cmp
inc
pop
scas
lock
dec
xchg
push
push
sbb
mov
out
xchg
mov
dec
cld
sub
sub
and
inc
lcall
loope
push
out
pop
insb
pop
mov
movb
pop
out
sub
push
push
shrb
or
jae
sbb
je
std
lock
dec
cmc
jg
pop
fucomp
iret
cmp
sub
and
clc
rclb
dec
pop
repz
fists
mov
pop
push
cmc
fidivrs
mov
loop
jo
in
sbb
jmp
jo
sbb
out
stc
ret
xchg
cwtl
cmpsl
mov
jecxz
adc
insl
pop
add
xor
mov
scas
jmp
fs
mov
decl
cmpsb
mov
fisttpl
je
loop
jb
incl
out
insb
scas
jl
jge
roll
fcoms
mov
jne
stc
mulb
adc
xlat
xor
and
pop
out
sbb
lock
push
fwait
je
cmpsl
pusha
pop
jno
mov
mov
cli
incl
jae
xor
xor
daa
cmpsb
ret
adc
lea
mov
sarb
xchg
push
mov
mov
fwait
dec
jb
fs
jl
paddsw
je
pop
lds
lds
shl
aaa
jb
rcl
push
lret
sub
test
jp
sub
fisttps
xor
bound
sbb
ret
push
inc
aam
clc
sbbl
mov
xlat
xor
sbb
push
fstps
xchg
dec
imul
inc
push
sub
fimuls
clc
jecxz
push
rclb
jno
mov
push
fbstp
xlat
and
repnz
aam
pushf
push
mov
jbe
mov
add
ficoms
test
cs
jo
rolb
fisttpll
jns
dec
adc
dec
das
std
jnp
arpl
cmpsl
lods
hlt
popf
es
push
or
movhps
fsubs
js
leave
scas
xchg
pop
inc
sarl
push
mov
adc
jnp
cmpsb
xchg
pop
lods
nop
inc
sbb
fstl
call
arpl
popa
push
out
sbb
jecxz
cmp
scas
test
mov
inc
lahf
popa
sub
or
xchg
dec
sbb
addl
lcall
out
fdiv
xchg
imul
sub
scas
aas
pop
xor
cs
jns
sub
xor
daa
mov
clc
adc
or
loope
or
fstpt
in
jns
or
lock
xor
lret
jecxz
add
fdivr
sub
add
cmpsl
mov
sbb
test
enter
or
testb
movsl
repz
mov
cmp
inc
mov
pushf
sub
dec
stos
testb
sbb
inc
cmp
in
lret
movsb
mov
xor
xchg
out
hlt
mov
adc
int
cwtl
out
inc
ss
in
ss
out
lahf
call
ljmp
dec
cmp
fstl
push
adc
pop
and
movl
mov
fidivrs
sbb
iret
or
loope
push
es
add
in
push
pop
jg
icebp
mov
inc
mov
cltd
jecxz
in
jmp
dec
inc
lods
xor
repnz
cmp
xchg
fdivs
pop
cld
add
pop
jns
call
pop
push
jmp
std
or
xchg
in
xlat
cld
xor
dec
dec
jecxz
icebp
fldenv
lahf
aam
mov
popa
mov
jmp
add
jp
push
mov
dec
pop
xor
lods
loopne
push
out
enter
dec
xchg
mov
faddl
xchg
add
bswap
aam
in
sti
or
pop
nop
push
xchg
out
mov
cmp
loope
sti
test
rorl
or
sbb
mov
out
cmp
lods
cmp
rorl
xor
stc
xchg
inc
lahf
test
jae
sub
rcrb
fnstcw
sti
sahf
cmp
push
mov
mov
xchg
adc
mov
push
cwtl
and
aaa
jl
and
movsb
push
jne
jecxz
fs
add
aaa
leave
ljmp
arpl
fiadds
data16
fistpl
stos
loopne
cld
push
iret
add
or
orl
int3
mov
jbe
pop
lds
loope
mov
adc
popa
lds
daa
xor
in
ret
insl
inc
fisttpll
out
or
sbb
jmp
cmp
outsb
mov
lods
std
ja
xchg
cmp
bound
push
jmp
adc
lock
mov
es
dec
pop
xlat
inc
gs
adc
adc
cmpsb
cmp
scas
in
rolb
sar
mov
jl
insb
arpl
cmp
outsl
ljmp
add
and
xchg
push
xchg
test
ficompl
popa
scas
rcll
xor
mov
dec
sbb
insl
adc
pop
or
inc
sahf
out
xorl
dec
pop
pushw
aad
lret
pusha
aaa
xor
fsubr
mov
lret
test
xchg
out
aad
add
es
xor
add
dec
shrl
aaa
adc
adc
test
shll
mov
mov
movsb
mov
pop
pop
adc
pop
xchg
out
push
out
call
cmp
mov
xchg
popa
aam
jl
or
in
cmp
aaa
mov
sub
shrb
insb
out
or
jl
lock
dec
insb
jnp
jns
popfw
insl
cli
pop
arpl
xor
ds
es
daa
xchg
sbb
lds
mov
ljmp
fstpt
mov
mov
inc
xchg
rorl
adc
pop
xchg
mov
jne
leave
ja
mov
push
cmpsb
xchg
cmp
popa
xchg
mov
jg
in
xchg
insb
mov
cmp
adcb
xor
push
shrl
loop
xchg
xchg
movsb
mov
imul
subl
push
addr16
daa
dec
sub
sar
mov
pop
xchg
fwait
adcb
and
push
fsubrl
jmp
movsb
xorl
ja
ds
sbb
or
in
pop
clc
arpl
insb
scas
addb
jmp
das
pop
push
leave
mov
xor
xchg
mov
xchg
enter
xor
mov
push
mov
dec
jl
in
test
test
fwait
mov
push
ljmp
aas
ja
mov
jp
mulb
xor
test
xchg
mov
enter
or
jg
mov
popa
into
daa
and
call
xor
push
jecxz
sbb
sub
sbb
mov
aad
mov
xor
fnstcw
imul
lods
jecxz
jbe
or
loopne
push
inc
arpl
pop
jl
xor
pop
insl
out
es
push
xchg
mov
lret
xchg
adc
aaa
orb
bound
out
pop
mov
sbb
cltd
loopne
inc
jno
fisubrl
scas
pop
int
popf
xchg
dec
dec
sti
pop
dec
imul
cmp
pop
mov
ja
xchg
adc
stos
andb
popa
ljmp
xchg
cmp
aas
mov
ja
lea
icebp
and
or
pop
sub
mov
aas
shlb
push
mov
inc
push
mov
xlat
imul
sub
es
dec
cs
mov
pop
insb
repnz
cld
insb
adc
fisubrl
xchg
pop
shll
movsl
jo
dec
push
enter
stos
jne
cmpsl
in
ret
and
out
inc
mov
in
inc
xor
cmpsl
jp
push
mov
jns
fdivrs
sbb
pop
cs
cmp
mov
insb
pushf
sbb
js
xchg
xchg
mov
or
sti
inc
xchg
jl
mov
pushf
cwtl
adc
daa
xor
loop
mov
stc
loopne
nop
mov
pushf
loope
rclb
mul
mov
and
adc
idivl
sahf
int
imul
pop
xchg
and
testl
mov
iret
push
lds
daa
fsubs
fcmovb
scas
stos
xor
dec
dec
ja
mov
call
call
insl
mov
xor
add
cmp
sub
sub
push
and
sbb
repz
fs
mov
inc
jmp
mov
rcrb
pop
popa
repz
pushf
idivb
or
cmp
or
sbb
mov
icebp
rorl
xor
or
sbb
and
icebp
adc
mov
mov
mov
in
adc
push
pop
data16
popa
out
into
mov
jb
or
rcll
leave
xor
inc
aam
dec
jbe
and
cltd
ja
push
xchg
push
in
mov
sub
je
add
sbb
xchg
xchg
dec
mov
mov
bnd
inc
mov
and
sbb
dec
push
adc
loopne
stos
jns
adc
cmp
in
xchg
pop
loopne
call
pop
sbb
in
or
jle
shr
cmp
lods
jo
shll
or
mov
into
sub
loopne
cmpsb
jle
mov
inc
test
jbe
jae
test
push
test
loop
jl
push
inc
outsb
sbb
test
mov
sbb
push
out
je
push
pop
and
flds
into
mov
fdivrs
mov
xchg
cmp
femms
mov
and
imul
and
xchg
shl
es
fwait
sbb
popf
inc
mov
dec
and
test
cs
fldl
jne
jo
aam
in
adc
sub
fcmovnb
mov
mov
sbb
out
and
je
push
pop
pop
fcmovnbe
dec
cmp
cmp
or
cwtl
mov
fwait
push
mov
pop
std
push
rcll
cmp
sub
enter
xchg
aad
xchg
repz
fs
xor
mov
cmp
jle
jg
dec
sbb
fs
inc
icebp
jnp
sub
test
push
mov
add
fwait
and
sbb
inc
jecxz
popa
pop
cmc
inc
dec
aam
xlat
gs
enter
out
add
jo
inc
in
fdivs
mov
sbb
out
cmp
cs
xor
stos
mov
loop
popa
or
cli
push
pop
ret
push
and
pusha
js
and
dec
xlat
or
loop
and
int3
stos
fimull
jl
mov
fs
scas
aad
aas
es
pop
test
in
test
cmc
jae
in
pop
test
ss
shl
jne
sahf
cwtl
xchg
into
jne
push
pop
sub
lods
scas
icebp
daa
mov
xor
cmp
ror
les
jecxz
jno
in
sbb
fbstp
inc
push
push
jns
mov
adc
lret
jle
ds
outsb
xchg
je
mov
adc
lea
or
pop
js
push
jg
aam
scas
sub
pop
sbb
push
pop
lods
jae
insb
or
cwtl
in
imul
negb
push
ljmp
add
jns
daa
push
out
push
mov
pop
clc
hlt
daa
add
xlat
dec
rorb
add
out
or
xchg
ret
insb
jl
jp
aam
mov
das
clc
enter
inc
pop
repnz
js
or
add
cmp
mov
sbb
xchg
pop
inc
call
mov
scas
pop
push
call
aas
inc
rcrb
jle
mov
adc
sub
mov
xor
mov
cmc
push
rcrl
arpl
sbb
sbb
shrl
mov
lret
add
and
cmpsb
stc
xor
inc
fdivs
mov
cmp
cmp
xchg
lahf
push
mov
into
pusha
rorl
test
or
sbb
xor
pop
and
in
into
inc
sub
sbb
cmp
int
cli
push
clc
out
dec
icebp
imul
or
out
mov
sub
in
sbb
push
dec
nop
ds
lahf
pop
lret
fcom
stos
push
rorb
aad
shrl
es
aaa
repz
fstpt
add
jno
mov
movsl
arpl
push
cmp
mov
add
or
inc
popa
cmpsb
push
xor
imul
dec
push
lock
mov
and
xchg
push
xchg
mov
sub
xor
lret
or
mov
jle
cmpsl
lahf
jno
stos
push
sub
nop
mov
dec
adc
inc
aad
int
xor
outsb
cwtl
sub
dec
push
cmpsb
jg
popa
fnstsw
jl
jl
mov
stos
ret
dec
jne
mov
adcl
sub
or
nop
jne
loopne
pop
xor
cmp
daa
add
adc
pop
icebp
cmp
mov
dec
sbb
or
jns
xor
dec
jo
int3
xor
push
mov
fdivrs
or
enter
and
pop
sub
fisttpl
push
into
ret
leave
js
sub
mov
clc
xchg
int3
stos
imul
jns
xchg
outsl
insl
xlat
inc
lret
rcll
mov
inc
ja
pop
xchg
sbb
and
xchg
int
mov
pop
test
push
jbe
lods
fwait
mov
mov
dec
call
mov
mov
dec
cmp
ljmp
sahf
repnz
or
lods
cmpl
mov
adc
push
or
jp
xchg
push
jmp
outsl
js
cs
cmp
loopne
js
ret
sbb
mov
in
xlat
push
adc
inc
enter
call
jp
sub
rcr
mov
cmp
xor
cwtl
std
sarl
and
add
cmc
mov
lcall
cs
bound
pop
mov
jno
adc
push
daa
aam
clc
lahf
inc
out
pop
mov
data16
xchg
xchg
and
loopne
pop
xor
int
push
jbe
js
xor
cli
dec
lahf
xchg
bound
add
je
scas
cmp
inc
fiaddl
add
pop
inc
lea
je
or
lea
xchg
mov
lahf
es
rcrl
mov
jne
ja
out
adc
pop
rorb
lret
pop
mov
or
sub
je
imul
inc
and
sti
fmuls
outsl
jno
rolb
cld
lea
add
cli
cmp
mov
mov
clc
test
pop
add
jns
pop
push
gs
mov
cmc
xchg
inc
jecxz
mov
push
sbb
enter
mov
adc
mov
pop
jmp
stos
cs
sbb
mov
test
testl
iret
sub
cltd
addr16
jecxz
ljmp
icebp
pushf
jns
mov
add
jecxz
nop
pop
mov
xor
xchg
clc
xlat
pop
and
lahf
enter
shlb
lea
inc
add
lret
mov
lea
sahf
push
inc
and
sub
add
jnp
jge
cmc
adc
mov
and
shlb
xlat
push
test
sub
push
jno
pusha
push
or
pop
sub
mov
imul
iret
adc
inc
rorl
or
ret
fisttpl
jg
nop
lds
popf
rorb
cmpb
add
sub
scas
xor
std
leave
in
dec
or
ljmp
jae
les
pop
mov
and
and
sarl
in
cld
int
and
sub
pop
adc
push
loopne
outsl
xchg
jmp
movaps
mov
gs
jae
jmp
pushf
loope
shl
cld
inc
add
add
cli
dec
jb
lret
lock
in
nop
js
sti
jg
sbb
repnz
incl
fstpt
rcll
lods
std
inc
rcl
xor
out
pop
dec
out
pop
cmpsb
insb
sbb
fnstcw
mov
add
add
add
or
hlt
loop
mov
and
push
ss
add
les
pop
in
jae
dec
or
xchg
pop
lcall
dec
enter
mov
imul
das
xor
outsb
add
scas
add
dec
sti
dec
cld
push
inc
inc
push
je
mov
add
cmp
jecxz
pop
fwait
lcall
or
notl
fwait
xchg
outsb
add
fcomi
xor
bound
sbb
fmull
add
sub
add
inc
les
clc
and
mov
inc
cmp
or
and
insl
pop
and
and
cmpsb
incl
ret
jnp
and
cmp
jge
inc
arpl
call
adcl
or
daa
bound
xorl
ds
mov
ss
rolb
push
mov
sbb
cltd
mov
inc
xchg
inc
push
inc
in
lock
sub
push
mov
hlt
adc
xor
fwait
pop
test
xor
sbb
subl
maskmovq
hlt
bound
std
incl
imul
movsb
aad
les
int
mov
adc
andb
insl
xchg
cmp
and
shrb
ljmp
fidivrs
mov
insb
mov
add
aad
in
xor
enter
sbb
outsb
inc
mov
and
sub
dec
push
mov
or
pop
push
sub
xchg
jo
cwtl
mov
imul
data16
lahf
aam
ja
shrl
mov
xchg
push
and
stos
xor
xchg
xchg
or
cmp
sub
and
pop
fmull
in
addr16
je
in
out
mov
dec
test
shll
cld
jge
sub
andb
and
ret
insb
repnz
add
pop
sbb
js
enter
movsl
aaa
inc
inc
out
mov
insb
cmc
fwait
shrb
call
pop
mov
sbb
test
dec
xchg
jge
jmp
scas
cmp
aas
cmpsb
jns
fwait
gs
lods
push
subb
cwtl
outsl
or
dec
adc
pop
cltd
fimuls
lea
stos
lods
push
insl
scas
nop
push
fdivrl
frstor
sub
jle
js
fdivrs
jl
rep
enter
iret
cmp
or
mov
out
push
add
sbb
in
mov
repnz
lods
mov
xor
pop
xlat
push
test
je
mov
mov
arpl
push
pop
ja
dec
push
stos
sbb
push
add
mov
js
xor
imul
pop
jmp
mov
movsb
sub
faddl
lods
movsl
pop
pop
andb
push
loopne
stos
adc
cmc
mov
jbe
jbe
xor
out
jmp
xchg
aam
mov
xchg
or
rorl
jne
xchg
mov
lahf
fildl
mov
mov
inc
sub
jae
xchg
popf
push
cmp
icebp
add
in
dec
mov
sbb
jns
add
push
inc
dec
psubd
out
imul
and
xor
or
sarl
ret
add
lahf
push
lock
ljmp
dec
outsl
lret
add
and
xchg
insl
lods
aas
xchg
mov
mov
call
imul
push
adc
mov
cmp
lret
imul
mov
sub
loopne
js
pop
mov
adc
push
sbb
push
call
stos
je
pop
cli
pop
jecxz
jns
mov
nop
fwait
stc
and
out
jne
stos
ret
fcomps
insb
cmc
int
pop
add
pop
jns
mov
sub
xor
pop
xchg
cmp
scas
dec
in
sub
mov
scas
ret
ret
push
mov
test
push
cmc
and
cmp
jbe
xlat
xor
arpl
in
xor
pop
fstpt
and
mov
mov
pop
loop
mov
bound
scas
mov
inc
push
mov
imul
xor
hlt
push
dec
pop
rclb
popf
sbb
sub
mov
or
xchg
ds
ss
mov
cmp
mov
mov
aad
mov
dec
aaa
shlb
fwait
inc
aaa
testl
cmpsb
mov
ss
xor
inc
inc
add
inc
mov
pop
insb
mov
sub
movsl
and
lea
test
xchg
and
or
and
ja
repz
fstps
sbb
bound
sub
cmp
and
inc
mov
out
push
daa
stos
mov
cmp
xchg
fnstenv
jp
bound
mov
sbbb
cmpsl
dec
sub
pop
push
sub
sbb
call
dec
mov
pop
aaa
sub
daa
js
push
popf
dec
cld
clc
xchg
gs
cld
sub
adc
das
test
fmulp
js
pop
inc
mov
or
movsl
and
fwait
shl
pusha
outsl
xchg
adc
in
cmp
mov
push
or
sub
push
sbb
lret
popa
fstpt
int
loopne
shlb
ss
ret
pop
divb
xchg
mov
pusha
arpl
or
rol
mov
xor
enter
mov
mov
shrl
cmpsl
stc
outsb
inc
clc
cmp
stos
neg
push
std
lahf
mov
aad
jo
mov
pop
out
aas
xchg
js
sti
jae
insl
iret
popf
push
shlb
incl
das
adc
inc
sub
ja
adc
fwait
dec
dec
add
jmp
xor
cmp
imul
pop
aas
push
or
out
mov
xor
inc
add
ds
ds
jo
lcall
iret
xchg
call
dec
hlt
and
inc
iret
scas
dec
pushf
pop
or
jecxz
inc
pushf
add
add
dec
shll
divl
or
xor
repz
mov
fnstsw
xchg
out
mov
or
sahf
lea
push
xor
xchg
fimuls
push
into
push
inc
into
xchg
test
push
jae
in
fiadds
mov
inc
dec
mov
out
mov
std
push
out
mov
pushf
push
out
jns
pop
adc
cs
mov
outsl
inc
sub
mov
push
int3
pop
clc
adc
shll
lods
jo
push
mov
mov
mov
inc
movsb
inc
je
cli
pop
jmp
xchg
push
jnp
nop
mov
movsb
arpl
mov
sub
sub
pop
xchg
fs
inc
sub
xchg
stc
and
sub
mov
dec
and
es
sub
outsb
loop
leave
inc
push
xchg
mov
je
lret
fisttpll
inc
jo
insl
xchg
inc
lods
sbb
sti
iret
imul
xor
cmpb
aam
sub
aam
sub
push
lret
sbb
cli
imul
mov
cmc
leave
sti
or
fdivr
pop
jno
int
push
out
jp
je
adc
cli
in
push
data16
stos
push
imul
adc
enter
leave
dec
cmpsl
jne
sbb
mov
mov
test
adc
push
xchg
jg
in
inc
pusha
pop
rcrb
and
adc
call
cmp
inc
xchg
xor
scas
lahf
ss
iret
jbe
sbb
xchg
outsl
push
jge
cmp
mov
xchg
pop
xchg
lods
mov
sbb
repz
xor
inc
jbe
movsl
jbe
in
jle
loope
mov
mov
cwtl
test
ret
lret
loopne
cmpsl
push
jl,pt
cli
mov
bound
push
faddl
nop
jbe
insl
pop
dec
out
loope
fmull
insb
jns
sbb
jmp
dec
mov
aas
push
jne
ljmp
test
scas
inc
das
jmp
xchg
icebp
dec
push
outsb
fwait
leave
and
fistpll
jo
push
dec
mov
aad
int3
fistl
xchg
add
inc
fcomip
inc
hlt
pushf
out
pop
punpcklwd
adcl
fmulp
cli
mov
shr
push
fsubr
ret
mov
jl
lds
add
jge
pop
pusha
inc
inc
clc
sub
adc
aad
dec
gs
enter
test
cmpb
fwait
in
sbb
popf
add
sbb
movsl
into
push
pushf
push
testb
aad
push
mov
insb
cld
push
jno
xlat
mov
mov
out
push
test
push
dec
in
sti
mov
repnz
sub
inc
int3
ds
in
aaa
mov
inc
outsl
jo
pop
cmpsl
jb
sbb
lods
xor
ss
dec
push
cmp
push
shrb
pop
mov
icebp
ret
shlb
mov
pop
test
adc
movsl
mov
jge
int
jg
fisubrl
mov
xor
inc
stc
sub
mov
mov
negl
outsl
push
jae
mov
sahf
rcrl
add
gs
sub
repz
push
cmp
aad
les
aaa
jg
test
pop
pop
and
or
in
jmp
or
jns
outsl
sub
imul
and
pop
dec
cmp
shl
inc
out
rolb
dec
imul
jno
pop
or
call
sbb
dec
mov
jnp
ret
fucomip
cli
cmp
mov
insl
lahf
ret
out
lcall
out
cli
xchg
outsb
pop
xor
jno
xor
js
ret
in
imul
jl
call
cltd
mov
jns
cli
lea
push
mov
ficoms
push
sti
adc
call
mov
mov
cmp
sti
inc
or
jb
mov
sarl
adc
imulb
cs
pop
mov
jl
pop
and
xorb
test
and
in
dec
mov
cli
push
dec
aad
data16
xchg
dec
stc
fadds
lods
xor
jb
fisttpl
js
pop
fucom
or
xchg
cmpsl
mov
push
cs
lock
aaa
aad
repz
movsl
mull
dec
cli
out
std
jb
out
mov
scas
rol
and
and
dec
xchg
sub
mov
aam
xchg
pushf
dec
jle
or
iret
pop
dec
inc
fcomps
int
push
cwtl
insl
jae
sar
sub
into
inc
scas
ret
loop
inc
in
mov
std
xor
and
sarl
sub
lds
lods
pop
sub
sub
inc
sub
nop
lret
sub
test
stc
xor
fisubs
cli
cmp
mov
ljmp
jo
ja
or
pushf
scas
adc
mov
xchg
cmp
jbe
jge
dec
mov
jge
or
push
es
into
jo
stc
fs
fisubrl
add
add
out
jle
xchg
enter
adc
movsl
xchg
das
inc
dec
and
jb
pop
sub
cmc
shll
int3
shrl
inc
sub
sub
insl
jbe
lcall
dec
repz
and
pop
mov
push
jno
jge
xchg
dec
jl
cmp
push
and
xchg
loope
and
cmpb
jge
int
ret
xor
movsl
insl
dec
es
fdivs
in
fsubrs
hlt
inc
imul
idivl
test
cmc
cmp
sub
xchg
test
sti
orl
push
xchg
mov
arpl
jge
jp
fistpll
inc
pop
rclb
rorl
cwtl
inc
dec
or
ficoms
sti
mov
xchg
and
add
out
jne
daa
push
push
sbb
ds
movsl
pop
ljmp
or
lret
lret
icebp
stc
push
mov
inc
call
ljmp
jae
movmskps
lahf
or
movsl
int
out
adc
dec
sbb
gs
inc
aad
dec
addl
loope
or
xchg
shll
mov
mov
dec
enter
xor
insl
adc
sub
jb
sub
sbb
or
pop
mov
xchg
aad
ja
fmul
adc
filds
int3
mov
xor
add
inc
fldcw
push
ja
inc
shrb
inc
cmpsl
jmp
jecxz
push
xor
lods
jle
arpl
sbb
pop
leave
add
test
inc
pusha
inc
inc
test
and
lods
cli
test
xor
push
mov
out
popf
add
adc
movb
sbb
scas
call
sbb
imul
pop
fmul
mov
addr16
mov
sbb
fimuls
ficompl
cmp
je
xchg
shr
xor
adc
clc
fnstsw
mov
push
xor
mov
inc
js
mov
xchg
push
ljmp
xchg
xor
outsb
xor
push
cmp
aas
push
jmp
es
clc
push
inc
jnp
adc
xchg
insl
stos
adc
push
mov
add
test
outsl
test
jecxz
mov
es
nop
sbb
icebp
jge
shrl
icebp
gs
xor
add
pop
notb
stc
in
popf
dec
xchg
add
iret
mov
xor
fistl
mov
es
ret
sbb
pop
lea
cli
out
mov
fucom
inc
push
adc
loop
imul
jo
out
mov
shll
pop
aam
outsl
mov
movsl
lds
in
rolb
dec
cmpsl
es
enter
scas
pop
push
inc
mov
hlt
add
mov
and
xchg
faddl
lret
mov
mov
or
push
repz
inc
jne
xchg
icebp
icebp
xor
data16
sarl
fs
push
dec
out
push
data16
in
inc
data16
lret
and
sbb
mov
out
insl
xchg
sbb
loopne
mov
jb
mov
mov
ret
lds
or
mov
popf
and
repnz
dec
and
insl
mov
stos
dec
pop
cwtl
std
jge
jmp
cmp
aad
icebp
fs
mov
mov
stos
cmp
jle
or
sub
mov
loopne
imul
mov
outsb
popw
xor
add
mov
mov
adc
pop
add
enter
mov
pop
rolb
mov
mov
xchg
mov
push
call
popf
and
sti
mov
les
cli
imull
add
xchg
jle
mov
enter
inc
inc
adc
cmp
pop
pop
int3
iret
add
enter
daa
pop
jl
and
lock
xor
pusha
mov
xlat
leave
inc
ret
adc
icebp
inc
ret
sbb
pop
mov
lds
sub
hlt
xor
mov
roll
pushf
mov
fstpl
fisubrs
sub
mov
dec
pushf
push
subb
lock
popf
loopne
std
testl
jmp
gs
in
xchg
mov
push
xor
inc
adc
jg
ds
inc
pop
inc
stos
pushf
sbb
not
aaa
pop
arpl
jae
std
stos
cmp
cmpsb
scas
insb
push
jbe
addr16
and
mov
mov
inc
dec
xchg
push
dec
cld
fisubs
push
fsincos
xchg
mov
inc
imul
sbb
cmpsb
sub
inc
push
dec
dec
aad
inc
cmpsb
loopne
inc
push
push
imul
mov
repz
lods
or
push
xchg
lret
push
xchg
mov
aad
xchg
iret
jne
scas
xchg
mov
out
pop
sub
sbb
shlb
xchg
fwait
imul
arpl
insb
aam
loopne
adc
shl
stos
dec
test
pop
movsl
xchg
in
push
das
das
insl
xchg
stc
dec
jle
and
clc
xchg
xchg
leave
cmp
ja
repnz
or
mov
or
ja
xor
aad
ljmp
sbb
mov
pusha
mov
ret
xor
push
adc
push
push
jmp
data16
dec
gs
sub
bound
ret
repnz
xlat
xor
pop
push
adc
pop
xchg
clc
mov
mov
clc
or
cmp
lock
cmpsl
sub
in
rorl
dec
into
dec
inc
adc
or
or
outsl
mov
iret
ret
add
mov
mov
scas
cmpsl
xor
or
jae
pop
xchg
push
pop
and
daa
lcall
xor
jne
inc
int3
cs
loope
cmp
ja
je
sbb
xor
fs
jno
ljmp
sub
add
xor
xchg
push
movsl
sub
inc
in
sbbb
leave
jge
and
out
andb
xchg
mov
or
dec
stos
pop
notl
cmp
dec
je
adc
pop
pop
movsl
inc
xorl
addr16
mov
insl
fstpt
fs
pop
jns
mov
mov
fcoml
dec
push
pusha
cmpsb
xor
inc
fdivr
adc
outsb
dec
xrelease
sub
add
mov
sub
and
aaa
shlb
xor
mov
in
mov
mov
data16
js
or
int
sub
iret
jg
dec
sub
jae
or
loope
es
jge
jmp
lahf
adc
push
add
push
add
mov
sub
inc
sbb
push
cltd
adc
mov
push
arpl
mov
jo
lods
add
fimuls
pop
rclb
mov
pop
jp
push
lock
addb
adc
cmc
ljmp
fwait
out
pop
mov
or
in
aas
mov
into
adc
dec
imul
int
aam
xchg
mov
sti
je
xlat
cmp
aaa
dec
sub
scas
clc
and
add
outsb
dec
or
sbb
xchg
outsl
ficoms
push
mov
aad
loope
icebp
rcll
stc
cmpsb
jl
in
pop
or
les
mov
mov
stc
decb
sti
dec
add
cmp
out
and
mov
add
repz
xchg
adc
or
adc
mov
adc
aaa
mov
cmp
push
rorb
xchg
xor
arpl
push
mov
aad
fdivl
hlt
push
xor
mov
sbbb
mov
in
arpl
cmp
es
rol
loopew
sub
std
jle
pushf
fdivl
movsl
out
addr16
dec
sub
push
cwtl
stc
imul
mov
add
test
insl
pop
in
roll
sub
inc
or
out
jae
or
dec
ret
imul
push
or
xor
fs
xor
cmpsl
push
mov
pop
push
aaa
repnz
lds
sbb
jmp
lret
jge
push
test
sbb
push
cmp
scas
movb
add
jge
outsl
icebp
adc
test
ds
inc
xchg
push
mov
hlt
adc
fcmovnb
and
nop
mov
pop
ds
jmp
and
orl
push
dec
mov
xchg
xchg
jb
lock
ja
push
cmp
mov
out
ljmp
mov
jns
in
jle
outsl
xor
cmp
adc
shll
inc
or
fwait
dec
andb
cmp
loopne
js
mov
ljmp
stos
lretw
stc
lea
jle
jle
sbb
mov
or
sarl
xchg
pusha
aam
sub
popf
aaa
inc
adc
adc
adc
shll
sub
movsb
shrb
push
test
or
sahf
xor
lds
mov
mov
aas
jnp
pop
dec
outsb
out
pop
cmp
mov
loopne
pop
bound
mov
movsb
dec
xlat
ret
inc
jne
adc
loopne
test
scas
std
aad
jecxz
icebp
jecxz
test
jl
dec
mov
loopne
sbbl
mov
cwtl
xlat
out
push
sub
jb
mov
add
pop
mov
or
or
sbbb
or
lock
push
aas
mov
xorl
jbe
mov
icebp
fdivrs
xor
pop
mov
stos
add
scas
int3
pop
clc
outsb
mov
ljmp
iret
std
rorl
scas
mov
push
jecxz
dec
pop
jl
nop
jge
mov
pop
adc
pop
adc
mov
lods
cld
stos
mov
sbb
dec
ljmp
sbb
sbb
add
mov
inc
cld
scas
pop
lds
cmp
fcomps
mov
sub
sub
xchg
lahf
lea
mov
sbb
and
cwtl
rol
and
and
add
sbb
into
mov
or
push
loopne
jae
iret
sbbb
mov
out
movsl
rclb
ffree
sti
jl
cmp
cmp
mov
out
fs
ss
dec
and
sub
add
xchg
mov
xchg
inc
and
stos
pop
ds
mov
adc
mov
divb
fidivl
mov
pop
sbb
xchg
push
jle
dec
dec
pop
xchg
movsl
dec
dec
mov
sub
addr16
in
sahf
xchg
popa
jbe
jae
inc
ds
add
pop
dec
push
idivb
into
adc
daa
push
fs
lock
bound
mov
cmc
mov
push
jmp
inc
jnp
inc
jne
add
insl
jo
xchg
xlat
mov
add
fwait
mov
insl
inc
pusha
sub
scas
xlat
dec
jnp
movb
mov
pop
mov
testb
xorl
inc
ss
dec
mov
cmp
cmpsl
xor
sahf
aam
pop
mov
mov
aam
dec
dec
es
lcall
jecxz
add
clc
jge
mov
lds
jg
adc
sti
stos
dec
add
jl
ljmp
push
and
shr
imul
xchg
sub
into
fisubs
xor
in
sbb
test
add
loop
ja
push
pop
pop
mov
leave
mov
adc
pop
inc
les
dec
inc
std
scas
arpl
clc
sub
xchg
addr16
push
dec
mov
mov
mov
in
movsb
xchg
ljmp
xor
or
inc
andl
hlt
xlat
stc
test
pop
cmp
ss
into
add
js
add
cs
add
add
scas
jmp
nop
sub
xor
icebp
inc
rorl
andb
rolb
fbld
scas
cmp
roll
or
daa
iret
popa
in
inc
jns
icebp
add
nop
sbb
fildl
testl
shlb
mov
sbb
pop
sbb
or
xor
mov
out
ljmp
lods
and
cmp
sahf
lahf
pop
repnz
jp
and
jb
sbb
push
push
xchg
push
adc
and
sbb
jecxz
dec
cltd
sti
lcall
xchg
addr16
and
das
rcl
pop
fildl
ljmp
dec
inc
sub
mov
jne
xchg
jmp
xor
sub
sbb
jne
cmc
push
test
xchg
leave
and
xchg
out
stos
lcall
or
fisubrs
stos
cltd
xchg
fnstcw
push
addr16
mov
jmp
xlat
inc
mov
lds
inc
and
pop
jecxz
xchg
js
lret
and
jle
lret
outsb
setnp
imulb
jl
inc
stc
mov
ficoms
aad
test
jge
or
adc
xchg
push
xchg
push
test
movsl
dec
call
sbb
inc
push
cmp
add
add
cmc
dec
mov
lea
je
add
das
sub
sarb
add
mov
filds
stos
js
test
call
out
fwait
mov
dec
sub
xchg
ss
jge
es
inc
cmp
frstor
flds
outsb
xchg
or
sbb
push
dec
rcrb
jbe
cwtl
sub
fwait
test
add
add
mov
daa
pop
mov
out
inc
movsl
sarl
xchg
mov
imul
and
cmp
xor
mov
rorb
stc
pop
lcall
cmpsl
sub
push
inc
repz
mov
mov
xchg
fwait
pop
pop
jno
bswap
call
sub
pushf
sahf
xchg
nop
rorb
cld
pusha
pop
test
adc
sbb
testl
out
pop
cmc
sub
das
stos
outsl
push
adc
and
xchg
inc
push
jns
or
or
mov
cmp
add
inc
mov
push
mov
out
ja
fnstenv
scas
jmp
mov
adc
sbb
inc
and
mov
jle
idivl
jmp
lods
sbb
mov
ficoms
add
inc
ret
leave
sub
dec
leave
pop
sbb
push
or
jne
test
int3
call
push
xchg
mov
es
push
int
repnz
call
mov
add
jge
push
ljmp
sub
xor
jns
add
imul
dec
fimull
jecxz
pop
out
mov
jae
in
adc
fs
aam
or
inc
sbb
adc
add
cmc
ret
sub
xchg
pop
inc
fnstenv
rcr
push
cmc
fucom
stc
fistpl
add
lret
or
mov
enter
pop
add
repz
jmp
pop
xor
or
inc
push
mul
je
mov
inc
mov
lea
insb
push
les
cmp
push
js
sub
out
dec
jo
pop
jne
push
jo
repnz
push
lret
inc
pop
fwait
push
mov
andl
lock
outsl
adc
inc
xor
cmp
divl
aas
adc
add
je
adc
imul
or
mov
push
sub
adcb
sti
in
test
cmp
xchg
lods
sub
lret
lods
sub
das
ja
sti
or
xchg
daa
mov
mov
xor
cmp
inc
clc
pop
stc
push
je
hlt
cmp
mov
lcall
lock
loop
mov
push
repnz
stc
fwait
dec
out
movsl
in
cmpl
imul
fwait
pop
repnz
mov
dec
push
xchg
movsl
cmc
lea
out
std
or
mov
cwtl
int
push
int
enter
dec
call
cmp
jmp
mov
add
push
imul
js
mov
and
sub
jge
mov
push
mov
sub
icebp
arpl
rcrl
push
xchg
sub
sub
mov
inc
jecxz
test
repz
sub
test
and
sub
imull
jge
xor
jmp
cmp
adc
test
int3
lods
out
sbb
shll
xor
xchg
cmc
jns
mov
add
jo
push
movsb
or
adc
movsb
mov
std
imul
movsl
movsl
adc
sbb
gs
sbb
call
jecxz
stc
cli
and
mov
mov
dec
xor
or
es
lds
popa
stos
call
aam
in
pop
or
cmp
fistpll
iret
push
inc
aas
inc
xchg
std
ja
stc
and
insb
add
mov
pop
rorb
scas
mov
clc
sbb
mov
mov
popa
add
cwtl
test
inc
mov
pop
and
and
mov
xchg
sbb
xchg
push
jb
call
popf
cwtl
or
sahf
mov
lods
call
pop
mov
jne
rcll
subl
and
sbb
lcall
mov
test
cmpsl
out
inc
and
fsubs
jae
icebp
jns
add
shl
mov
add
xchg
repz
in
jp
inc
push
push
push
imul
adc
jno
pop
sbb
jns
jmp
jl
icebp
insl
out
and
push
jmp
inc
sbb
div
loop
aam
sub
outsl
mov
xchg
lret
lods
lahf
dec
ljmp
mov
xor
cwtl
inc
aaa
push
add
adcb
mov
dec
shll
pop
lea
nop
shlb
repnz
enter
mov
and
mov
arpl
cld
add
cli
cmp
mov
in
imul
loop
mov
popf
in
nop
xlat
and
dec
adc
inc
sbb
nop
dec
in
pop
pop
mov
sub
jae
jno
adcl
mov
adc
adc
mov
sub
sbb
ss
jo
inc
adc
pop
jns
xchg
ds
mov
ljmp
les
pop
xlat
pop
inc
xchg
sub
fmull
shll
adc
loope
mov
data16
xchg
test
shll
ljmp
lock
pop
push
mov
pop
or
test
jnp
mov
push
loop
sahf
dec
mov
mov
add
inc
rcr
xor
cmp
movb
mov
pop
push
jb
jp
sbb
arpl
fistpll
xchg
je
sbb
jl
aad
inc
dec
cmpsl
mov
pop
repnz
push
outsl
xchg
xchg
push
bound
xchg
sub
je
xor
cmp
lret
je
lds
test
test
ffree
push
rolb
mov
orl
ret
dec
aas
insb
fdivs
lds
gs
pop
dec
leave
cmc
jge
jg
sbb
push
arpl
or
xchg
roll
fistps
mov
iret
add
fcomp
and
and
inc
adc
mov
dec
inc
jle
insb
gs
outsl
mov
mov
int3
pop
adc
clc
or
insl
push
or
mov
int3
test
pop
push
icebp
dec
adcl
push
xchg
loop
add
xchg
fsubr
sbb
std
xor
push
mov
enter
subb
sbb
pusha
mov
jecxz
shrl
pop
cwtl
pop
sbb
push
inc
lods
mov
mov
in
mov
xor
cwtl
mov
add
and
or
fcomp
imul
ss
pushf
jle
fstpt
scas
push
xchg
shlb
es
inc
mulps
push
outsl
adc
mov
dec
mov
pushf
jmp
dec
sbb
popf
adc
into
dec
jno
jle
lods
fcoms
push
cmp
icebp
lods
mov
shlb
fwait
iret
and
dec
loop
test
sub
popf
lods
out
cltd
jno
dec
movsl
mov
imul
icebp
repz
out
movsl
in
pop
fmul
pop
pop
out
adc
sub
cli
push
push
sub
xor
xlat
push
bound
xor
or
call
xor
xor
push
dec
push
movsl
mov
test
ret
dec
out
push
pop
cmpsl
pop
pop
les
pop
cmc
mov
xchg
into
or
ds
cltd
adc
xor
push
out
mov
popw
mov
mov
or
bnd
nop
es
fsubrl
jno
xchg
mov
in
cmp
mov
adc
lret
cwtl
xor
mov
test
movsl
jl
imulb
lock
mov
movsl
out
push
or
rcrb
sub
adc
cltd
dec
jecxz
cmp
add
sahf
sti
fldl
test
push
clc
fcomi
push
xchg
dec
je
cs
adc
bound
rcll
outsl
dec
outsl
xchg
xchg
repz
mov
in
xchg
inc
clc
mov
bound
lea
sub
cmc
in
push
orl
mov
sub
mov
mov
enter
push
cmp
outsl
or
push
push
push
inc
and
enter
in
in
xor
and
pop
mov
xchg
orb
cli
aaa
outsl
repz
into
jge
cwtl
xorl
and
xchg
sub
fst
shlb
je
fadd
lret
xchg
rclb
xlat
leave
dec
int3
cmp
pushf
rcll
jp
scas
ret
bound
mov
mov
add
fldt
nop
adc
popa
sti
stos
outsb
fs
stos
jb
push
sbb
stos
dec
leave
data16
movb
insl
mov
into
xor
rcrl
xchg
xchg
jmp
cmp
mov
test
fstp
pushf
pop
xchg
push
mov
push
adcl
cld
rcrb
loop
call
push
sub
mov
fst
sub
mov
push
or
add
cmp
add
ds
cwtl
jl
mov
sti
fisttpl
popf
mov
out
or
hlt
dec
xchg
sub
and
mov
fistl
stc
inc
leave
jp
aam
xor
xchg
or
mov
or
add
pop
daa
dec
scas
xchg
inc
repz
dec
outsb
push
lcall
aad
scas
inc
lods
pop
lret
xor
sub
push
insl
dec
mov
fsts
fadd
in
stos
or
lahf
push
test
ja
pop
push
pop
aad
xchg
cmp
pusha
sbb
icebp
mov
push
sub
lret
mov
adc
xchg
pop
pushf
pusha
fstl
push
xchg
fs
dec
lcall
mov
cmp
es
mov
adc
popa
ljmp
std
xchg
rorb
cmp
je
or
nop
xchg
aad
jmp
loopne
imul
pop
shlb
mov
sbb
pushf
scas
and
pop
out
popa
daa
pop
jge
dec
rsm
xchg
pusha
add
inc
ja
pop
pop
ret
lods
and
add
or
and
or
aas
aad
out
mov
mov
mov
mov
add
add
mov
add
cltd
gs
rolb
mov
rcl
in
push
sbb
jp
jmp
dec
arpl
data16
ds
leave
mov
or
or
sbb
inc
std
out
scas
cli
lods
cld
repnz
inc
lods
xchg
scas
pop
repnz
push
stc
xchg
jl
mov
mov
fcompl
jae
inc
cmp
es
xchg
xor
in
push
mov
sub
mov
pop
pop
ficomps
test
mov
cmp
lock
xchg
ret
rolb
pop
xchg
add
sbb
xchg
imul
cltd
xchg
test
xor
sub
or
xor
lock
mov
lret
cltd
cld
mov
int3
push
lds
fs
out
rorb
jge
addr16
std
aam
cmp
fucomip
sbb
mov
jns
in
repz
inc
adc
mov
call
mov
dec
push
lea
fiadds
sbb
ffree
cmp
aam
sub
imul
inc
mov
push
adc
mov
jecxz
cwtl
lahf
or
outsb
jno
pop
addr16
repz
stc
pop
jne
lods
xor
cmp
testb
inc
cltd
and
int3
push
xor
xor
fucomi
push
test
inc
lods
pop
xor
xor
xchg
arpl
jnp
cmp
mul
dec
imul
int3
mov
test
lods
xchg
mov
inc
mov
pop
loopne
fdiv
rclb
cli
je
jbe
movsb
cli
sti
push
pop
leave
jl
add
icebp
xchg
sbb
pop
sbb
sub
icebp
push
or
push
insb
or
adc
loop
test
rorl
adc
shrl
loope
aam
adc
orb
sbb
jae
xorl
push
fnsave
out
pushf
subl
push
dec
cmp
mov
sbb
popf
inc
or
rcll
xchg
pop
jl
sbb
and
xchg
push
jl
jb
movsl
cmpsl
xchg
aam
xchg
mov
xchg
movsl
fidivrs
sarl
sbb
sub
lea
push
jae
lock
push
adc
in
imul
or
lahf
ss
jo
xchg
jbe
cs
testl
lret
insl
fiaddl
insb
inc
pop
movsl
cmc
sbb
mov
icebp
imul
int
or
lods
inc
dec
outsb
dec
sbb
jo
aaa
lret
mov
and
xchg
dec
mov
mov
movsb
sbb
mov
sti
movsb
xchg
mov
jl
or
stos
push
incb
push
sarl
scas
mov
or
sbb
push
dec
mov
fdivl
shrl
sub
lds
pop
fisubrs
adc
fstpl
call
mov
add
fcoms
int
xchg
cmpsl
loopne
scas
sbb
mov
cmp
jge
adc
inc
loope
mov
jne
clc
inc
fistl
dec
scas
mov
int
xor
pop
sub
mov
sub
push
outsb
jne
outsl
push
and
sbb
sti
sub
out
and
imul
sti
test
stos
ss
es
mov
jo
adc
cltd
fistpll
fs
lock
add
dec
adc
sub
or
and
xlat
iret
adc
dec
dec
ljmp
inc
mov
fcmove
stos
je
inc
sbb
lock
divb
test
jno
xorb
sarb
sahf
out
fisubl
dec
out
jecxz
and
cli
in
sbb
dec
fisttps
lahf
jge
aad
or
pop
mov
mov
jo
or
mov
and
and
fistps
sbb
orb
pop
ljmp
nop
cmpsl
cmp
nop
ds
cmc
push
je
adc
or
mov
mov
or
jae
shll
loop
or
xchg
xchg
push
mov
imul
jns
insb
cmp
cmp
jne
rcll
pop
adc
xor
sbb
in
gs
push
push
adc
adc
pop
cltd
push
push
test
popf
mov
sbb
out
push
ljmp
ss
icebp
xlat
inc
out
icebp
lods
pop
xchg
jle
cs
adc
fbld
fildll
adc
push
adc
cli
mov
adc
push
fistpll
cmpb
fimull
cmp
jle
int
jl
pop
fcoml
insb
xor
popf
push
mov
mov
in
int3
es
iret
push
les
pop
xchg
movsl
int
je
insl
sbb
jmp
mov
xlat
in
lds
int3
scas
es
addl
outsb
mov
mov
addr16
mov
mov
jne
adc
lods
push
int3
pushf
int
outsb
pusha
int
in
pop
insw
add
test
and
push
fs
lret
stc
adc
add
icebp
enter
xor
mov
mov
sub
fsubr
mov
push
test
sarl
loopne
stc
fnsave
mov
movsl
mov
jno
stos
ss
roll
xchg
out
hlt
sarb
int
mov
clc
addr16
sbb
adc
daa
and
push
in
ret
mov
sub
std
adc
sub
jp
lods
adc
jae
mov
ja
pop
test
mov
fs
repnz
rcl
test
sub
popa
mov
mov
ss
inc
insb
inc
out
pop
dec
or
sbb
mov
jp
mov
mov
in
jp
popa
push
or
ret
xchg
mov
ret
and
std
sbb
fcomps
cmp
icebp
mov
mov
cmp
mov
and
mov
add
scas
es
xchg
xlat
sbb
xchg
clc
into
xchg
adc
out
sub
scas
push
mov
jae
call
rcl
movsl
inc
icebp
mov
push
adc
in
lret
outsl
xchg
scas
xchg
xchg
cwtl
and
mov
lret
sarb
outsl
cmp
adc
sub
fistps
push
test
icebp
stos
cmp
cwtl
add
fstl
pop
lds
addr16
data16
enter
adc
inc
mov
lret
imulb
mov
dec
lock
jecxz
pop
inc
xor
loope
inc
dec
stos
iret
push
call
push
mov
fs
mov
data16
mov
xchg
shl
out
adc
mov
sbb
out
pop
sub
clc
ds
jmp
cmp
pop
inc
fistpl
pusha
pop
xchg
push
addr16
adc
in
sti
loop
fsubr
push
push
mov
or
inc
repnz
add
jl
or
testl
in
testb
mov
mov
in
pop
cltd
cmp
and
clc
insb
mov
ja
jp
outsb
fsubrs
mov
mov
adc
xor
or
jge
push
rorl
test
psubusb
imul
dec
es
push
or
xchg
xchg
mov
xchg
xlat
jl
xchg
enter
cli
dec
out
imul
xor
push
mov
jle
ret
jno
out
mov
and
mull
stc
adc
cli
stos
dec
outsl
cld
mov
fldt
out
xor
jg
lcall
or
xor
mov
in
adc
or
pop
push
btsl
mov
dec
pop
adc
or
pmulhw
imul
out
jp
mov
push
sar
cmpl
cmp
xor
push
pushf
dec
or
add
js
jecxz
sub
sti
inc
add
sub
imul
divl
arpl
dec
fisttpll
loopne
test
push
mov
scas
jp
push
mov
jnp
pop
insb
jae
mov
jg
outsb
mov
es
mov
imul
inc
mov
pop
in
cmp
xor
mov
pusha
mov
lcall
mov
pop
into
sbb
sbb
and
inc
adc
daa
arpl
movsl
sti
rclb
scas
in
cmp
adc
arpl
mov
xor
mov
mov
jo
idiv
idivb
in
je
or
pop
in
adc
fildl
pop
int3
inc
or
mov
js
hlt
push
hlt
push
mulb
in
mov
inc
bound
dec
cmp
add
inc
neg
xchg
aas
loopne
dec
inc
inc
sub
xchg
dec
lods
cmc
dec
les
out
inc
sbb
xor
cmp
pusha
fnstenv
mov
and
push
mov
push
or
jo
inc
dec
mov
push
sbb
addr16
jno
leave
sbb
addr16
cmp
or
xchg
mov
push
push
js
adc
mov
jno
xor
dec
mov
sub
pop
call
decl
and
aaa
out
scas
dec
sbb
mov
out
jns
in
test
adc
fwait
aas
push
sbb
je
jg
mov
cwtl
gs
xor
add
jmp
shrb
jmp
push
mov
add
call
leave
aam
mov
mov
ljmp
in
cwtl
in
movsb
in
or
aaa
lds
cltd
fstpt
and
jne
ljmp
outsl
pop
mov
fcmovnu
dec
loopne
adc
add
ds
div
push
test
cmpsl
mov
fildll
push
sbb
or
iret
jno
mov
push
xor
xchg
pusha
sub
adc
jecxz
xor
mov
lods
dec
or
push
je
ljmp
push
mov
arpl
arpl
icebp
popa
mov
outsl
popa
inc
lcall
sbb
ljmp
mov
cmp
xor
fcomip
dec
pop
sub
sbb
out
mov
fstpt
inc
imull
sbb
clc
xor
jl
push
sbb
repz
push
sub
in
mov
mov
les
das
or
stc
push
lcall
gs
pop
out
jnp
jg
pop
hlt
movsl
in
jbe
dec
ja
test
or
xchg
les
xchg
out
loop
sbb
pusha
xor
jno
jmp
fadds
xor
sbb
mov
mov
cmpl
sub
notb
aaa
jo
jp
mov
std
mov
movsl
adc
cmp
xchg
shl
fwait
mov
mov
call
cld
hlt
push
sbb
dec
jg
xor
xlat
pop
sbb
xlat
mov
xor
int
jle
mov
sbbb
mov
adc
jne
shlb
movsl
mov
mov
pushl
adc
notl
push
and
data16
xchg
nop
int
out
or
mov
jecxz
loop
cmp
push
pop
clc
jle
xor
sti
add
movsb
fcomi
sbb
pushf
imul
test
pop
add
xchg
sbb
aad
sbb
cltd
mov
fidivs
xchg
sahf
popf
lea
add
jge
icebp
sbbl
mov
test
faddl
xorl
jnp
adc
fs
xor
nop
fiadds
xor
jmp
addr16
mov
jl
xchg
mov
mov
mov
rorl
jnp
mov
sub
inc
mov
popa
pop
xor
aad
lea
aas
jg
prefetchw
or
mov
icebp
test
jge
leave
ret
mov
out
jae
bound
popf
push
sub
hlt
add
gs
mov
jp
pop
pop
pop
in
jno
out
fcoml
xor
lret
jb
loop
push
push
mov
adc
lret
add
and
jmp
imul
lret
imul
int
and
aad
jnp
push
arpl
out
cltd
pusha
xor
dec
je
int
subb
cmp
sbb
je
sbb
pop
or
pop
out
and
sbb
fmull
aas
push
jp
sub
push
shrb
cmpsl
jg
mov
addr16
out
scas
xchg
lods
dec
roll
aas
test
je
inc
loop
call
cmpsb
addr16
dec
mov
jmp
mov
add
dec
ds
popf
pushf
leave
movsl
lahf
dec
loope
imulb
mov
negb
daa
loope
cltd
mov
xor
nopl
cs
mov
shl
jae
test
insb
mov
inc
fnstcw
push
test
xor
pop
xchg
mov
sub
testl
cmp
loop
int
pop
adc
xor
cmp
cmpsl
movsl
push
call
inc
fildll
xor
dec
mov
ret
adc
dec
insl
mov
repz
sbb
and
cmp
ss
lahf
or
js
mov
pop
add
cmp
inc
ret
ja
loopne
jmp
clc
nop
pop
lret
test
xor
int3
or
in
aas
int3
dec
movsb
incb
je
sarl
lahf
jmp
mov
movsb
fdivrs
push
stc
into
scas
mov
lea
add
jl
test
sub
pop
orl
sub
mov
mov
fildll
repz
cmp
notl
sub
cld
iret
xchg
repnz
sub
shlb
xor
imul
movsb
test
jg
out
add
cltd
in
psubd
movsb
test
shlb
dec
push
ljmp
xchg
gs
mov
bound
jl
mov
fimuls
bswap
lds
test
mov
shlb
push
or
jg
inc
mov
aad
mov
insl
pop
or
mov
jno,pn
sub
ja
enter
mov
cmpsl
add
out
sbb
and
insb
mov
bound
ja
inc
fwait
cmp
jne
ficoml
cmp
movsb
jb
stos
lret
mov
mov
test
cs
mov
sub
fbld
std
test
clc
je
sti
out
push
das
scas
daa
inc
jns
sub
enter
das
push
cmp
cmpsl
sahf
dec
imul
mov
xchg
orl
push
dec
cmp
adc
or
dec
frstor
pop
pop
mov
adc
push
or
nop
jns
mov
in
hlt
pcmpeqb
loopne
jle
ret
lahf
sahf
cmpsb
add
stc
xor
movsl
jg
punpcklwd
sub
insl
mov
fisttpll
popf
xchg
ret
fdivl
ficoml
dec
xlat
push
adc
clc
xor
push
mov
mov
cli
lock
clc
push
adc
call
mov
mov
pop
popa
jne
mov
cmp
ds
nop
test
call
lahf
int3
dec
dec
cmp
xor
std
js
xchg
in
mov
mov
stos
pushf
sub
dec
pusha
inc
rclb
ljmp
fnstcw
pop
mov
out
hlt
xor
cmp
sarl
pusha
or
or
fwait
xchg
aaa
scas
test
mov
mov
jecxz
xor
cltd
bswap
test
aas
mov
push
adc
jg
je
arpl
out
clc
lret
add
imul
out
pushf
inc
sarb
out
mov
jecxz,pn
rclb
jo
pushf
cmp
aad
cwtl
mov
fsubs
mov
lock
ret
nop
arpl
movsl
test
insb
pop
adcb
subl
lds
pop
mov
or
out
adc
mov
add
mov
jno
and
ror
push
or
stc
add
or
mov
rcrl
sbb
lahf
xchg
arpl
lret
mov
mov
mov
insl
icebp
jecxz
ret
iret
push
vpsrad
ror
adcl
lods
jns
mov
cmp
push
inc
xchg
scas
adc
out
int
lods
int3
pop
jge
lds
cltd
in
das
mov
outsb
dec
cmp
jecxz
sti
movsl
mov
dec
inc
sbb
outsb
in
jno
fwait
jo
cmc
pop
test
pop
adc
fdivl
cld
stos
stos
addb
or
cmpsl
xlat
cmp
jne
ja
gs
dec
imul
xor
push
fdivl
stos
xchg
and
inc
aam
div
add
aas
push
out
mov
movd
cld
mov
addr16
or
and
out
xchg
mov
and
std
inc
push
icebp
out
mov
je
insl
push
cmp
mov
mov
push
pop
popf
addl
popa
ret
jle
loop
adc
test
jle
ja
inc
aam
sbb
mov
mov
inc
mov
push
cltd
cmpsl
out
inc
cmpsb
das
cwtl
movsl
xor
aam
leave
xor
popf
pop
xchg
adc
mov
lcall
xchg
add
cmp
mov
adc
xlat
ss
xor
sti
outsb
xor
dec
mov
leave
sub
push
vpaddusw
mov
mov
mov
mov
into
stc
sub
or
test
jecxz
mov
repnz
cmp
std
mov
and
roll
jbe
xchg
es
in
mov
imul
imul
insl
movsb
sub
add
imul
add
mov
shll
mov
lea
lds
shl
push
enter
jnp
inc
rclb
insl
loopne
in
std
std
adc
jb
nop
sarl
lcall
pop
aaa
add
fistpl
hlt
filds
ss
pop
data16
inc
iret
adc
add
and
cmpsl
add
shll
or
push
mov
fiadds
xchg
adc
add
or
jle
xorl
cmp
aas
dec
mov
mov
mov
mov
push
and
cltd
push
inc
add
adc
testb
jle
jp
adc
arpl
inc
push
mov
inc
sahf
inc
rcrl
loop
xchg
cmp
sub
daa
out
jne
in
mov
aad
add
adc
jne
out
mov
jmp
icebp
rorb
outsl
or
mov
mov
leave
dec
iret
insb
xchg
pop
insb
ljmp
cmpb
mov
pop
jae
mov
arpl
psubusw
popa
and
mov
std
shrl
pop
int3
bound
inc
jae,pn
cwtl
in
xlat
jne
shrb
jno
dec
sbb
dec
dec
sahf
ficoms
daa
push
ret
mov
stc
xchg
add
xchg
and
aam
lahf
fidivl
inc
jbe
ret
mov
mov
cmp
call
cmp
ljmp
aam
enter
outsl
or
sub
arpl
insb
insl
cld
loopne
mov
pop
addr16
mov
in
test
xchg
outsb
into
mov
addr16
pop
add
std
push
lea
xor
jae
test
and
decl
bound
sbb
inc
push
fisttps
or
test
lcall
pop
xchg
cld
dec
in
repnz
loopne
test
pop
inc
add
dec
xchg
pop
mov
repz
mov
icebp
stos
and
jge
fwait
pop
frstor
dec
jle
mov
imul
xchg
out
pop
cs
cmpsb
int3
xor
subl
hlt
inc
inc
dec
fdivs
fstl
push
dec
aad
out
cmp
loope
jmp
mov
inc
cmc
addr16
jmp
jp
filds
jae
jg
push
inc
js
push
mov
jmp
cli
inc
adc
inc
aam
les
movb
negl
movsb
pop
sub
in
mov
pop
cs
push
mov
jl
mov
pop
mov
sub
pop
jne
sbb
in
cs
shl
adc
cs
pop
sarl
scas
fmulp
pop
jmp
fwait
loope
cmc
cs
jl
aaa
lds
mov
xor
mov
jmp
loopne
pop
fadd
push
femms
orl
jl
xor
inc
dec
push
pop
insb
xor
lods
mov
and
xchg
mov
cmpsl
int
cmp
xchg
jmp
jb
adc
stos
mov
cmpsl
mov
test
pop
test
mov
nop
and
lods
push
insl
insl
les
pushf
mov
sbb
enter
add
mov
xchg
lcall
pop
mov
ret
ss
cltd
lea
xorb
clc
cmp
xchg
sbb
insb
and
adc
ss
dec
inc
xchg
sbb
lods
jge
cmp
sub
cmp
adc
ret
jmp
shll
jne
jb
add
outsb
cmp
stos
call
pop
sub
mov
inc
notb
js
sub
mov
das
mov
adc
pop
jge
adc
add
mov
xchg
sub
add
push
xor
or
stos
imul
pop
mov
push
xchg
pmaxub
inc
outsl
insb
je
xchg
lcall
stc
pop
jmp
sub
popf
in
mov
lret
out
mov
das
fadd
notb
cmp
cmp
push
je
add
mov
lea
lahf
push
or
dec
data16
push
sub
ds
sub
adc
xchg
aam
sub
mov
mov
cltd
push
int3
xor
ja
mov
es
pop
js
rorl
jl
lds
adc
mov
scas
repnz
and
fisttpll
sarb
dec
cmp
pavgw
or
push
popa
sbb
mov
andl
and
pop
xchg
adc
lock
add
arpl
inc
and
test
xchg
and
call
push
iret
in
test
clc
fiaddl
fs
out
add
dec
sar
daa
pop
rorb
shl
mov
nop
enter
inc
push
jne
inc
stos
xchg
cmp
pop
pop
lock
xor
outsl
xor
call
jmp
inc
jb
jmp
mov
jmp
jae
jg
out
add
or
or
subl
loop
stos
cmp
pop
stc
adc
mov
dec
js
inc
sub
adc
fdiv
inc
adc
dec
das
addr16
jl
cs
fwait
mov
ja
mov
sbb
subl
in
pop
ja
xor
jbe
cmp
stos
movsb
and
dec
push
push
mov
insb
jecxz
enter
mov
add
pop
fs
lret
mov
jne
fdivrl
mov
cmp
loop
dec
into
sbb
int
push
cmp
mov
sbb
xlat
fdivs
fwait
lock
pop
loop
lea
or
fcomps
mov
xor
push
sub
fistpll
movsb
cld
shl
ret
dec
xchg
push
mov
inc
sbb
icebp
sbb
add
push
insb
xor
or
jl
test
mov
or
xchg
icebp
cmp
pop
inc
xchg
push
xchg
stos
js
dec
out
mov
int3
cmp
jno
inc
mov
xchg
pop
xlat
cmp
aas
fisubl
xchg
jns
movsb
lcall
mov
test
lods
push
fwait
add
hlt
scas
xor
mov
pop
xchg
mov
lock
loopne
out
push
mov
adc
pop
fidivrs
sub
nop
dec
cltd
inc
cmp
je
sub
pop
xchg
cld
fnstenv
push
adc
lcall
scas
aaa
cmp
add
icebp
int
cld
fisubrs
imul
das
bound
stos
cmp
stos
add
mov
dec
jle
mov
mov
push
inc
lret
or
aaa
dec
aad
mov
loope
int
insl
mov
movntps
cmp
fistpll
js
push
push
cmp
xchg
and
divb
sbb
andb
lea
mov
cld
push
fwait
adc
ret
ss
push
stc
lds
adc
jl
jno
mov
ret
mov
and
fcoml
dec
add
xor
xor
inc
lock
xchg
imulb
jle
fwait
push
mov
sub
pop
xchg
icebp
add
inc
jecxz
jne
repnz
jge
pop
fcomi
lods
push
adc
leave
pop
loopne
cmpb
bound
cmp
mov
movsl
mov
cmp
sub
sub
shll
push
mov
push
iret
xor
arpl
jmp
or
push
push
fldenv
lret
xor
xchg
cmp
push
inc
fwait
pusha
or
or
pop
out
add
pop
adc
pop
fwait
add
addr16
and
hlt
sub
shll
pop
lock
sub
mov
ss
push
or
dec
nop
dec
pop
cltd
sub
roll
pop
out
adc
shrb
cmp
das
mov
mov
sahf
jle
xor
xor
or
jbe
ret
fsubs
rolb
push
jle
je
sahf
shll
repnz
adc
lcall
ret
mov
es
jle
mov
pusha
arpl
cmp
xor
pop
pop
xchg
loope
adc
call
pop
adc
into
mov
pop
sub
stc
int3
lcall
or
test
mov
int3
dec
mov
ret
pusha
call
inc
jle
fidivs
dec
or
push
push
ds
dec
out
or
pop
vfmsub231ss
sub
outsb
bound
insb
hlt
cld
push
sarl
pop
cltd
lcall
mov
test
sbb
lods
pop
mov
mov
push
push
pop
test
xchg
inc
xchg
adc
xchg
fimull
xchg
jg
push
pusha
mov
repz
and
in
xlat
dec
test
or
pushf
iret
sbb
int3
dec
test
add
pop
mov
addl
lods
xchg
cmp
push
lea
je
jl
into
sub
nop
dec
out
and
adc
cmp
mov
popa
bound
pop
and
outsl
add
cmpsb
les
mov
test
call
lds
xor
and
fistpll
sub
es
out
push
sbb
push
dec
jg
daa
mov
xchg
mov
or
mov
fs
add
loop
jl
or
adc
adc
popf
jl
cs
adc
sub
in
add
inc
rorl
gs
xor
aam
mov
test
int3
pop
loope
int3
cwtl
mov
test
sti
dec
pushf
std
mov
sbb
inc
cmp
cmpl
jmp
enter
loope
into
xor
push
mov
mov
sub
stos
pop
dec
bound
jnp
adc
mov
jae
cmp
loop
and
lea
cmp
sbb
cltd
inc
sbb
or
adc
or
test
pop
xchg
data16
fwait
iret
pop
pop
jbe
lods
sub
fdivrs
mov
std
insb
mov
xchg
xchg
pop
icebp
aas
sbb
jp
sub
xlat
sbb
and
sarl
add
xchg
push
mov
cmp
out
mov
adc
aaa
sbb
jae
lret
cmp
fwait
cmc
push
and
sahf
test
leave
mov
jno
xchg
movsl
pop
mov
sbb
mov
xchg
push
loope
add
loopne
insl
jecxz
cmp
or
mov
mov
or
inc
push
mov
mov
loope
xchg
inc
push
add
rcrb
jno
fucomi
mov
mov
inc
fwait
loope
jns
push
cli
shlb
shrb
mov
dec
fisubrl
xor
loop
xchg
jnp
mov
das
add
cltd
or
pop
aam
sub
sbb
cmp
int3
in
push
push
sub
std
mov
stos
gs
ja
mov
lock
adc
or
or
xor
add
out
aas
fwait
sub
mov
lahf
iret
add
ja
pop
iret
sbb
xchg
not
out
test
addr16
hlt
xchg
jae
add
mov
mov
mov
or
mul
xchg
cmpsb
adc
push
dec
fwait
sbb
pop
test
stos
es
popa
sbb
xor
into
mov
insb
xor
mov
push
pop
push
cmp
jnp
pop
aam
jecxz
sbbb
adc
icebp
stos
cmp
sub
xlat
dec
mov
push
ja
cmp
pop
rcrl
sub
push
jb
les
lcall
stos
inc
pop
or
ja
lret
xor
xchg
dec
popa
and
sbb
clc
out
jle
push
mov
movb
jg
arpl
dec
add
jns
cmp
dec
jno
push
mov
int
and
jl
push
and
pop
add
mov
fisttpll
lds
lea
or
or
adc
inc
cwtl
mov
jmp
ror
pop
inc
cwtl
out
push
xorb
adc
xor
clc
fstpt
icebp
cltd
inc
inc
mov
mov
fstpt
cmp
out
mov
test
dec
xchg
sub
daa
daa
or
mull
lods
cmp
mov
and
les
add
imulb
popa
std
jl
inc
push
repz
sahf
fldcw
add
test
les
fcoms
sbbl
nop
xchg
xlat
aam
jb
movsb
call
les
sbb
jne
js
mov
test
mov
xchg
shl
sbb
ss
int
ljmp
imull
outsl
shll
aaa
mov
out
sub
pshufw
jle
dec
xchg
xchg
jbe
test
cmpsl
lock
rcrl
mov
and
sbb
or
cmp
xchg
mov
mov
sbb
adc
jno
in
sub
aam
or
clc
pop
pushf
bound
inc
imul
mov
daa
and
das
in
mov
jnp
pop
fcoms
mov
push
adc
mov
xlat
loop
fiadds
mov
out
pop
sbb
shll
jmp
jmp
inc
add
xor
hlt
mov
jnp
sbb
xor
cmp
out
cmp
inc
test
pop
sti
inc
cmpsb
enter
test
mov
test
inc
lret
rcrl
stc
and
inc
test
test
xchg
fildll
inc
js
push
rolb
test
dec
pusha
or
xlat
inc
mov
rcll
mov
pop
jecxz
inc
or
pop
imul
repnz
arpl
movsl
repnz
je
push
add
xor
push
jmp
push
and
daa
fldenv
and
or
fdivs
pop
call
or
out
jns
xchg
lahf
xor
loopne
aad
js
out
pushf
lock
dec
rcr
cs
xor
xor
out
addb
dec
int
ljmp
test
jno
pop
jge
pop
aad
stc
pop
adc
jge
jg
sbbb
sub
lea
dec
addl
xchg
push
mov
pop
pop
mov
into
cmp
mov
aad
fcmovnb
push
push
cmp
gs
scas
inc
add
xor
cmpsl
cmpsb
xor
cmp
lcall
imul
cmpsl
dec
lock
inc
cmpsb
into
mov
testl
aaa
test
xor
repnz
jns
dec
test
push
sub
sub
scas
decb
mov
je
push
test
cmp
jmp
pop
dec
ret
or
cs
add
push
das
jl
pop
push
adc
push
push
pop
adc
cmp
sub
add
lock
sbbb
and
das
imul
push
adc
scas
sbb
pop
ss
pop
cmpsb
dec
dec
fwait
jg
cmp
dec
mov
push
adc
inc
jecxz
divl
xor
sub
pushaw
aam
mov
cs
push
inc
sbb
test
shr
popf
mov
push
mov
mov
jae
jne
adcl
cli
lods
xchg
fbld
sarl
add
test
push
mov
fdiv
add
cmpsl
sub
push
int
add
imul
into
std
or
cs
cwtl
sub
cmp
pop
shl
jno
sahf
cmpl
inc
paddsb
jecxz
lock
dec
in
mov
add
adc
inc
loop
jmp
lds
hlt
fisubrs
pop
inc
add
adc
bound
jbe
mov
xor
ja
arpl
mov
cltd
mov
sar
idivb
push
sti
movsb
sbb
outsl
arpl
mov
rclb
movsl
outsl
push
inc
jecxz
cmc
or
cmc
push
pusha
lcall
adc
cwtl
imul
rcr
test
aad
ja
xlat
xor
adc
into
scas
and
pop
mov
push
and
pop
jb
lea
loop
ds
les
mov
aaa
and
mov
mov
jge
fbstp
in
cmp
and
rol
sub
xchg
add
fwait
shrb
mov
scas
scas
add
orl
mov
ret
lret
sbb
aaa
mov
sbb
mov
mov
not
lret
or
dec
mov
insl
ret
je
cli
fstps
cmp
cmc
pop
or
mov
jp
fwait
push
je
dec
xchg
add
jne
je
in
mov
adc
and
push
push
je
shlb
icebp
cmp
xor
or
iret
lret
dec
sbb
adc
sbb
into
cmc
stos
cmp
rcrl
dec
jl
cmpsb
jp
mov
rolb
push
js
dec
sub
or
or
jbe
iret
pushf
mov
sub
cltd
push
aaa
scas
mov
in
push
pop
or
jne
xchg
or
bound
dec
push
add
mov
push
push
sub
or
push
cmp
pusha
fs
mov
dec
lret
loopne
dec
rcr
mov
mov
outsl
movaps
jecxz
arpl
xchg
add
mov
psubq
mov
sub
int3
cmp
push
mov
inc
pop
sbb
fiaddl
adc
sbb
dec
and
movsl
scas
jbe
adc
mov
orl
addb
jp
gs
lahf
xchg
cli
ljmp
push
inc
cltd
add
sbb
mov
notl
jmp
cs
popf
pop
loopne
icebp
les
shlb
pop
aaa
daa
std
js
inc
dec
les
mov
mov
mov
xor
pop
or
inc
addl
push
inc
mov
push
dec
loopne
xchg
inc
xor
js
adc
inc
inc
add
je
aaa
jnp
push
lea
and
pop
xor
outsb
add
int
fwait
bound
inc
les
mov
testl
jo
jecxz
pop
jl
cmpsb
pop
gs
jp
push
ljmp
sbb
stos
call
adc
addr16
cmpsl
insl
popa
inc
xor
push
and
sub
mov
fprem1
mov
jns
sbb
gs
int
mov
xchg
jnp
dec
and
jge
lret
sbb
jae,pn
loope
jecxz
call
add
push
push
daa
cmpsb
or
divb
or
mov
jmp
push
cmc
and
ljmp
mov
int3
in
dec
ret
int
int3
jmp
pop
cwtl
out
xchg
clc
loop
fdivs
lcall
push
pop
dec
dec
inc
lock
mov
inc
pop
cmpsl
imul
fcomps
adc
mov
mov
sub
pop
hlt
daa
adc
push
clc
and
iret
mov
addl
in
inc
sarl
pop
sbb
leave
or
push
mov
fmulp
sbb
sbb
es
mov
les
insb
cmp
sbb
fisttpl
or
sbb
inc
decl
cmp
popfw
pushf
mov
sub
adc
mov
jnp
jbe
pop
xchg
outsl
mul
pop
mov
xor
arpl
xor
les
xchg
cmp
push
test
mov
add
xor
xor
addl
cmp
int
cmp
js
mov
int3
jp
fiadds
outsl
pop
insl
mov
push
loop
aaa
out
test
cmp
add
jg
fcmovne
add
aam
ret
jne
cld
sbb
push
call
jae
ds
or
movsb
sbb
cmp
jmp
mov
push
push
push
sbb
dec
test
pop
arpl
das
inc
cli
data16
clc
sar
jae
sub
aad
add
popa
dec
pop
xchg
fsubs
dec
ds
out
mov
push
cmp
stc
pop
mov
inc
add
outsl
ss
leave
pop
sub
jecxz
jo
and
sbb
int
mov
stos
addb
xor
push
push
push
xlat
ss
notl
insl
sub
ss
mov
outsb
inc
xchg
cmp
aam
add
ss
pop
add
popf
aam
div
xchg
stc
xchg
adc
pusha
enter
lods
std
aaa
data16
test
mov
fdivl
aas
inc
enter
test
shrl
jne
mov
inc
aaa
or
dec
lret
lret
mov
scas
push
inc
pop
xchg
lods
insb
and
add
std
rorb
je
sti
add
sub
shr
sub
aam
out
push
into
cmpsl
stos
dec
fdivs
movsl
mov
sub
mov
xlat
pop
or
dec
sbb
push
and
lock
push
mov
pop
fldcw
xchg
xchg
sbb
mov
mov
pop
pop
leave
pop
or
call
mov
stos
test
adc
je
insb
pop
mov
adc
add
xchg
jns
dec
aas
jmp
lret
xchg
call
aam
mov
cld
scas
xchg
push
test
xlat
pop
fldenv
xor
clc
add
push
xchg
adc
ja
sub
movsb
lret
and
inc
sub
xor
adc
sar
clc
icebp
aas
lret
adc
or
push
int3
mov
push
push
scas
jmp
nop
mov
mov
and
mov
cwtl
std
pop
cwtl
adcb
data16
sbb
je
push
mov
andb
mov
xchg
push
mov
xchg
xchg
xchg
mov
sahf
iret
cmp
call
pushf
iret
jae
jno
push
fs
pop
movsb
xchg
sbb
and
ja
and
sub
das
scas
and
cli
dec
fnstcw
mov
dec
lea
pop
sti
inc
sub
sub
aas
xchg
mov
sbb
pop
mov
mov
push
sub
repnz
testb
mov
and
fists
mov
lods
testl
fsubr
xchg
in
in
lcall
inc
and
pop
stos
push
xor
repnz
rclb
push
fidivrs
dec
mov
inc
sbb
xor
stos
inc
mov
mov
or
dec
add
add
call
ljmp
jecxz
sti
jg
push
inc
fsubrs
scas
cmp
cld
pop
pop
les
mov
call
xchg
add
xlat
negl
sub
mov
mov
stos
setg
icebp
xor
sub
insb
mov
dec
xchg
mov
jns
arpl
sub
xchg
dec
int
in
imul
stc
add
adc
mov
mov
mov
jb
xor
mov
inc
pop
scas
pop
pop
icebp
pushf
mov
adc
in
pop
mov
jl
mov
add
jecxz
dec
dec
andb
addl
fucomip
andl
adc
pop
not
xchg
dec
pop
adc
push
ljmp
dec
jl
cli
sub
mov
mov
push
fcompl
call
add
xchg
pop
ljmp
add
lds
rcll
pop
dec
ret
inc
jecxz
stos
loopne
lahf
roll
mov
cmp
mov
mov
bound
push
scas
mov
lea
repz
mov
and
in
and
inc
inc
inc
inc
cmp
pop
test
stos
fucomip
mov
das
push
and
mov
or
sbb
mov
sub
ret
in
pop
adc
scas
sub
inc
repz
mov
push
xchg
or
jnp
push
push
mov
xchg
mov
sbb
jl
pop
mov
push
lcall
xchg
dec
cmp
out
sbb
fnsave
inc
out
sbb
js
sub
aas
xor
cmc
out
add
inc
or
push
jmp
int3
xchg
dec
adc
pop
add
test
cmc
loopne
popa
loope
mov
mov
div
xchg
xor
and
push
mov
pushf
test
jecxz
cmp
dec
shlb
in
lcall
loope
out
aam
push
jo
cmc
mov
ss
jno
inc
lods
in
jg
or
and
adc
jbe
gs
pop
pop
mov
sub
mov
mov
insb
sub
mov
in
rolb
lea
or
pop
inc
xor
sub
icebp
stc
pop
and
mov
push
clc
jg
movlps
lock
inc
or
daa
dec
adc
in
add
xchg
test
xchg
push
inc
sub
cmpsb
or
ss
fucomip
mov
inc
add
hlt
and
push
enter
pusha
push
inc
nop
addr16
pop
mov
mov
jle
add
aas
sbb
or
mov
sbb
xor
jbe
push
push
popa
pop
dec
pop
xor
or
orb
sub
pop
push
subl
push
outsl
or
jnp
mov
aad
dec
mov
in
bts
xchg
xor
mov
sbb
push
into
in
mov
pop
cmpsb
aam
add
movb
ss
xlat
dec
pushf
mov
add
pushf
aad
es
inc
push
push
cmpsl
pushl
leave
cmp
mov
dec
popl
sub
push
mov
mov
int
lret
dec
pop
push
in
ds
lock
lock
lds
fcoms
mov
dec
sbb
dec
das
andb
inc
or
test
rcll
test
sbb
ljmpw
fdivs
add
aaa
pop
rclb
in
cmpsl
mov
cmp
cmpsb
dec
push
fldt
and
mov
inc
jmp
stc
mov
lret
movsb
pop
imul
adc
lret
orb
xchg
xchg
mov
aas
popf
pop
adc
and
jl
pop
shl
mov
dec
fs
adc
mov
jnp
cmp
or
int3
ja
cld
cwtl
bound
xchg
mov
inc
or
cs
pop
jmp
in
adc
lds
cmp
cmc
hlt
push
push
aas
add
call
imul
push
or
inc
int3
std
push
adc
push
shll
out
out
add
imul
and
aam
xlat
mov
addl
lock
aad
inc
pop
xchg
push
mov
dec
mov
ja
jae
mov
je
sub
pop
adc
das
dec
outsl
add
hlt
loop
int3
pop
jns
hlt
sti
test
out
xchg
cmc
ficompl
std
add
cmc
mov
in
pop
imul
mov
ret
and
push
pop
mov
pop
push
adcl
mov
stc
adc
stos
and
mov
mov
adc
iret
je
fwait
jnp
fmuls
add
stos
arpl
mov
cmp
jmp
xchg
sahf
ret
fld
js
in
stc
ljmp
pop
add
sbb
hlt
fnsave
cwtl
xor
sbb
xor
in
lock
sbb
std
pop
inc
aas
pop
fidivl
or
lret
lock
out
or
nop
cmc
subb
bound
or
add
adc
roll
pop
cmpl
js
js
in
xchg
pushf
jg
les
js
pusha
pushf
dec
pop
in
jbe
popf
sub
or
in
pop
or
out
xor
pushf
or
cli
add
inc
aaa
fsubrs
mov
cmp
xchg
lcall
pushf
leave
subb
mov
pushf
mov
repz
dec
idiv
movsb
push
mov
ja
adc
loope
or
pop
adc
pop
pop
sub
xor
jbe
jbe
jb
jo
mov
aas
push
mov
jno
mov
or
adc
orb
jge
xchg
xchg
int
es
rcrl
test
mov
inc
pop
push
and
mov
push
rolb
xchg
mov
mov
ret
dec
add
jno
and
lock
mov
cltd
shlb
fcompl
mov
cli
scas
popf
dec
nop
pop
jmp
std
sub
add
sarl
outsb
hlt
mov
xor
adc
inc
out
mov
sub
mov
jmp
shll
aam
push
cli
sti
xchg
pushf
mov
jg
pop
lea
out
fadds
data16
mov
mov
adc
jecxz
push
adc
sbb
enter
aas
pop
xchg
xchg
xor
xchg
es
xchg
rclb
add
imul
adc
pushf
inc
sbb
xchg
int3
mov
lret
nop
pop
xor
adc
fstps
mov
add
inc
in
and
in
inc
scas
add
call
jl
push
mov
sahf
cltd
leave
mov
std
push
mov
mov
mov
cmp
loopne
add
mov
shll
movsl
push
cmpsl
mov
cmpsb
cmp
pop
pusha
clc
sbbl
shll
cmpsl
dec
and
or
clc
insl
jle
add
cmp
fistpll
sahf
jg
push
add
dec
cmp
cmc
fcompl
in
cmp
or
inc
and
cmp
in
sti
test
mov
lock
mov
sbb
test
neg
cltd
jg
sbb
pop
fidivrs
dec
lret
in
dec
call
arpl
bnd
test
repz
xor
sbb
dec
mov
sub
jecxz
lret
jmp
sti
inc
mov
adc
bound
enter
push
push
xchg
jecxz
sar
enter
arpl
lcall
es
jae
movsb
clc
pop
or
sarl
into
push
jg
mov
mov
pop
xor
mov
pop
adc
divl
mov
dec
popa
lahf
daa
je
mov
xor
loopne
push
stc
sub
jg
mov
mov
mov
cmc
icebp
mov
sbb
inc
mov
je
scas
jns
and
xchg
mov
fsub
cmp
adc
xchg
push
fsubrl
out
jmp
outsl
lret
pop
out
nop
jmp
lds
fcmovnu
inc
jae
and
stos
xchg
cltd
cmp
add
popf
sub
inc
mov
sub
cld
adc
es
icebp
in
shlb
outsb
inc
lds
movsl
inc
cmp
and
xor
js
cwtl
mov
outsl
stos
mov
jp
xor
ret
jns
mov
pushf
mov
mov
call
pop
dec
mov
mov
push
das
mov
mov
decl
or
xchg
mov
in
lea
popf
cwtl
ja
loop
repnz
jg
insb
bound
jl
inc
sbb
lcall
sahf
adc
mov
fdivs
jmp
pushf
clc
mov
das
in
adc
pop
xor
sbb
mov
loop
stos
stos
mov
inc
mov
lock
cmp
mov
out
dec
outsl
xchg
testb
xchg
out
ret
mov
clc
xchg
xchg
addr16
sbb
mov
orb
cli
test
out
scas
add
fs
cwtl
std
and
fisttpl
insl
add
mov
stc
hlt
in
sahf
neg
dec
divb
ss
add
jnp
jo
fdivrl
mov
jp
xchg
int3
mov
cltd
outsb
push
cmp
sub
push
mov
fs
adc
inc
jmp
pop
int
ljmp
in
dec
jg
mov
add
or
add
and
loop
movsl
xor
movsb
jecxz
outsl
sarb
or
mov
add
jl
ja
sub
jp
sarl
ja
aas
jl
repz
xchg
out
xchg
mov
push
adc
adc
mov
sub
jnp
xchg
pushf
inc
pop
jmp
mov
and
mov
movsb
push
push
in
xchg
mov
addr16
int
and
push
push
pop
sti
push
ret
dec
mov
cltd
push
push
cmc
aas
and
xchg
dec
inc
fwait
and
and
stos
mulb
mov
xchg
mov
stos
mov
fmull
idiv
cmp
push
add
insb
and
in
cmp
mov
stos
icebp
int3
and
push
or
int
mov
ds
adc
std
xchg
movsb
cmpsl
fldenv
fnstcw
or
or
jecxz
dec
pop
mov
into
fwait
ret
data16
and
sbb
pop
and
sbb
mov
cmp
mov
fsubs
push
lcall
fcomp
movsb
cmp
mov
mov
xchg
mov
push
insl
ds
mov
jmp
sti
push
in
xor
faddp
fbld
and
xchg
inc
insl
mov
dec
mov
mov
inc
imul
lea
cmp
test
stc
imull
and
mov
mov
out
in
arpl
ret
inc
mov
adc
adcb
dec
int3
mov
out
sbb
scas
adc
mov
sahf
cltd
mov
mov
neg
fdivrl
pop
mov
pushl
inc
imul
in
mov
ljmp
mov
shl
or
xchg
rcrb
push
dec
shr
fldt
sbb
gs
imul
inc
or
cmp
push
inc
stos
add
add
pop
sub
pop
mov
scas
cli
or
cmp
jno
xchg
mov
sub
cld
cmp
ja
and
bound
iret
addr16
sar
or
jnp
jb
sahf
sub
insb
sub
pop
cmp
mov
mov
loope
aad
les
lock
addr16
sahf
je
fwait
es
xor
sub
into
ret
lds
dec
sti
into
adc
push
popl
lahf
daa
mov
jl
mov
inc
mov
out
in
lret
int
lea
dec
cmp
push
out
fistl
add
fidivrl
pop
enter
mov
out
xchg
pop
adc
sbb
jne
sub
sub
pop
inc
cltd
pop
dec
mov
mov
loop
xor
into
sbb
cmp
xlat
cmp
jno
jbe
and
bound
or
cmp
faddl
jmp
into
add
pop
sub
movsl
jo
dec
lcall
push
aaa
dec
arpl
xor
push
clc
push
stos
cmp
je
mov
lock
cld
inc
push
push
cmp
mov
sub
out
jl
fld
hlt
xchg
mov
outsl
fsub
sbbl
xchg
in
sbbl
lcall
fdivl
jne
adc
movsb
les
int3
xchg
es
bound
flds
sbb
ret
cmp
outsl
ljmp
lcall
mov
sbb
sbbb
sub
das
jp
pop
fisttpl
rclb
popa
iret
std
cmc
ljmp
mov
repz
in
insb
popf
pop
and
test
jne
xor
scas
lret
push
dec
out
lcall
mov
bound
aad
ret
sbb
push
inc
ret
std
lret
repnz
sub
nop
pop
icebp
and
inc
sbb
and
out
psllq
iret
or
fistpl
xorb
jl
mov
fwait
xchg
xchg
negb
fcomip
sub
and
mov
mov
cwtl
out
cmp
dec
push
pop
sbb
xchg
jnp
inc
cmc
dec
jle
push
jbe
je
aaa
and
je
dec
shlb
push
aas
adc
lds
lods
sbb
push
xor
lods
and
cmc
inc
shll
outsb
pop
outsb
cmp
push
cmc
loopne
pop
sbb
fmull
in
sbb
jnp
fs
testb
push
pop
ss
xor
fiaddl
sbb
mov
push
pmulhw
pop
push
pcmpeqb
sub
xor
ljmp
in
and
xchg
ret
and
outsb
pop
loop
movsl
inc
xorl
xchg
cmpsb
or
das
or
nop
jns
sbb
fcmove
scas
lcall
sti
xchg
in
jb
outsl
in
movsl
push
ret
adc
mov
mov
aaa
xor
adc
dec
test
mov
and
repz
add
out
mov
inc
inc
cld
xchg
iret
pop
push
or
push
mov
cmp
lret
repz
pop
inc
leave
inc
dec
or
push
rorl
std
cmpsb
ljmp
push
sahf
insb
fsubp
nop
test
in
jno
movb
test
aad
push
mov
jne
sahf
xor
into
sbb
push
fwait
push
cmp
scas
rolb
mov
mov
imul
xor
xchg
in
in
dec
sub
mov
andb
bound
lds
test
cmpsb
lock
lcall
pop
pop
ret
mov
xor
lret
in
jo
xchg
je
repnz
jmp
nop
and
loopne
les
dec
push
pop
cmpsl
push
stos
pop
push
push
dec
pop
mov
rcll
adc
movb
out
in
lea
mov
xorb
in
sub
xor
xchg
dec
push
cmp
mov
and
adc
out
jbe
mov
sbbl
jne
stos
jbe
jne
or
sbb
dec
test
test
push
sbb
insb
adc
ret
mov
rorb
xor
icebp
aam
lcall
push
sbb
pop
push
mov
jle
push
int3
xchg
scas
cmp
es
inc
icebp
outsl
inc
jl
in
mov
add
in
mov
add
aad
sbb
push
jno
arpl
dec
sbb
xchg
sbb
jle
cmp
dec
popf
mov
pushf
jmp
xor
into
xchg
xchg
das
sbb
xlat
lret
xchg
fs
sbb
pop
cmp
push
and
fisttpll
and
pop
data16
add
and
xor
pop
xor
sar
mov
ret
pop
inc
test
lret
and
jae
xchg
push
push
inc
data16
push
push
mov
sub
stc
in
cmp
das
mov
add
push
jns
dec
jle
or
adc
mov
imul
imul
mov
mov
mov
inc
stos
mov
pop
or
mov
sbb
daa
out
add
subb
repz
fadds
sub
push
xchg
iret
push
mov
pop
push
inc
sub
in
in
push
dec
or
in
pop
stos
sahf
loopne
into
push
jae
xchg
cwtl
loopne
jbe
jecxz
inc
and
xlat
mov
movsb
ds
repnz
or
inc
xchg
pop
or
int
lret
xchg
and
xchg
outsl
repnz
mov
andb
push
stos
shlb
jno
frstors
ret
les
push
pop
and
in
push
jo
xchg
or
mov
pop
dec
and
test
pop
clc
add
add
sub
or
cmp
sub
dec
mov
popl
inc
insl
mov
xchg
dec
adc
out
les
ja
jnp
mov
insl
sti
adc
dec
inc
lret
rorb
cmp
pop
loope
sahf
es
cmp
cmp
adcl
inc
les
mov
xor
sarl
mov
mov
lods
xchg
or
push
vaddpd
cmpsl
es
mov
mov
pop
lcall
movsb
push
and
mov
dec
sarb
xchg
test
addr16
sub
jl
ret
add
jmp
mov
xchg
adc
pop
sbb
in
das
fisttps
push
fidivrs
lock
adc
out
push
push
sbb
pop
call
adc
mov
pop
push
mov
inc
mov
lock
pushf
insl
sarl
mov
ds
mov
imul
icebp
jbe
f2xm1
jnp
mov
sbb
jecxz
hlt
sbb
lahf
mov
mov
scas
or
ja
jp
push
das
mov
insl
pop
cmp
hlt
sbb
lret
xor
outsb
mov
repnz
lds
and
lea
sub
mov
jp
ret
incb
test
mov
jnp
inc
mov
movq
aam
lock
sbb
sub
leave
mov
xchg
push
lcall
add
aad
nop
and
inc
jge
xchg
xor
mov
push
mov
sub
test
aas
loop
pop
fmuls
ret
mov
dec
sbb
xchg
or
sub
sahf
shll
scas
movsl
stos
lahf
int3
inc
mov
jmp
nop
rcll
mov
js
scas
xchg
in
js
es
mov
pusha
call
ja
movsb
into
mov
les
int3
cmp
jle
in
cmp
ret
fidivrl
mov
es
sub
loopne
and
inc
sub
out
pop
repz
xchg
rorb
popa
nop
cmpsb
stc
cmc
add
cld
sub
fdivs
lret
clc
and
nop
xlat
sbb
add
scas
cwtl
not
sub
xchg
cmpsl
sbb
sub
pop
aad
movsb
mov
out
les
int
cmp
scas
pop
push
scas
xchg
loopne
ds
mov
xchg
mov
shrb
add
cwtl
mov
aas
mov
pusha
mov
xor
mov
lret
push
sbb
cwtl
mov
cmp
inc
push
mov
mov
cltd
xor
pusha
add
mov
mov
das
out
xor
pushf
data16
pushf
sub
sarb
cltd
mov
push
mov
or
in
int
cmp
pop
jns
repnz
pop
xchg
jbe
xor
jo
add
jg
sbb
pop
cmp
mov
add
cmpsl
inc
stos
ja
int
mov
pop
mov
dec
test
adc
fidivrl
dec
imul
dec
mov
xor
jp
out
in
jae
psrlw
pushf
imul
inc
imul
cmpsl
ret
mov
inc
insl
push
sbb
mov
aas
and
fdivs
adcl
xchg
pop
loopne
and
inc
pop
inc
cmp
mulb
fiaddl
stos
fistps
pop
decl
in
aas
jne
lods
stos
mov
jnp
inc
mov
jl,pt
mov
jmp
cs
lock
arpl
popa
sbb
add
sub
mov
xor
out
push
add
stos
xor
fwait
hlt
pushf
fbld
mov
dec
add
hlt
icebp
subb
inc
dec
jbe
inc
dec
push
xor
ficoms
mov
call
in
cmpsl
xchg
cmp
jae
cmc
xlat
ja
aaa
outsb
shrl
addr16
outsl
arpl
mov
hlt
fs
xchg
fwait
pop
pop
add
daa
and
xchg
in
lcall
dec
mov
dec
jo
mov
mov
push
aad
dec
icebp
xchg
mov
push
mov
dec
push
mov
pusha
mov
fisubs
jb
mov
dec
out
push
xchg
lods
push
or
testl
mul
dec
out
xlat
add
mov
dec
and
int3
dec
jne
xor
mov
fstpl
or
cmpsb
and
dec
mov
mov
iret
and
push
in
inc
mov
out
sbb
shll
ror
jne
dec
call
ret
adcl
fisttps
push
rol
xchg
in
fs
xlat
loope
or
lods
fiaddl
sti
in
mov
out
sarb
cltd
xor
shlb
shll
and
ja
xchg
mov
imul
and
sar
or
hlt
and
jb
add
aad
mov
xor
mov
mov
aad
push
inc
jne
xchg
and
pop
in
jg
pop
rclb
pop
fwait
fs
hlt
into
mov
mov
xchg
jns
mov
rorl
cs
xor
jnp
xlat
cmp
mov
mov
repnz
cmpsb
pop
test
hlt
ss
sub
in
ss
mov
dec
mov
sbb
xor
lea
pop
mov
fisubrs
aad
jecxz
xor
ror
repz
xor
cmp
out
dec
mov
jl
mov
mov
push
dec
lock
dec
lea
iret
jge
js
mov
lods
in
jae
or
ja
pop
sbb
or
inc
icebp
add
pusha
sbb
and
or
add
mov
arpl
das
jno
sub
dec
stos
cli
mov
or
mov
stc
jmp
inc
or
imul
in
div
inc
daa
scas
rorb
inc
mov
fdivr
pushf
or
mov
std
ds
xchg
dec
fstpt
mov
idivb
adc
lcall
lcall
jp
fstpl
decl
mov
inc
mov
push
push
outsl
das
add
add
and
xor
sbb
fiaddl
mov
js
sti
xchg
xchg
sub
pop
xchg
movb
mov
mov
xor
not
inc
out
mov
rcrl
imul
xor
ja
dec
xchg
int
ret
lcall
popf
cmp
mov
adcl
fucomi
xchg
inc
dec
insb
jecxz
xchg
xor
mov
push
jo
dec
push
psrlw
add
xlat
rorl
lds
ds
xor
enter
pushf
push
outsb
out
and
or
mov
fstps
sbb
imul
leave
mov
mov
pop
pop
add
icebp
xchg
add
divb
mov
inc
dec
dec
iret
dec
push
dec
jg
xchg
dec
roll
aas
popa
cmc
cld
mov
cmp
mov
dec
push
dec
daa
gs
cmpsl
dec
or
dec
divl
dec
ret
loop
int3
mov
je
jge
clc
outsl
sub
shr
xor
xchg
bound
aas
xchg
adc
jne
mov
lret
jle
fcompl
rorb
pop
movsl
jmp
sbb
or
bound
insb
lds
pop
inc
mov
sub
jp
int
cmp
shlb
and
sahf
arpl
int
cwtl
es
push
mov
lea
adc
xchg
xchg
sbb
fs
mov
sti
insb
and
sbb
iret
addr16
jbe
fmul
outsl
rorb
movsb
pop
shl
mov
push
lock
xchg
fs
clc
mov
hlt
jb
in
xorb
stos
loope
clc
icebp
les
inc
rorl
jle
lods
jle
popf
cmc
in
imul
push
sti
sbb
cmp
clc
rclb
das
in
setle
cmpsb
adc
pusha
movsl
pushf
test
xor
fcomps
pop
push
adc
mov
sarb
mov
jecxz
xor
shlb
lods
xchg
dec
out
xchg
mov
test
fildll
add
ret
sbb
aam
out
jmp
je
mov
in
leave
push
int
nop
ficomps
xchg
inc
sbb
mov
inc
ds
adc
aam
add
adc
mov
sbb
ja
mov
sahf
enter
jo
test
mov
sub
or
mov
or
pop
adc
gs
mov
divb
std
shrl
fiadds
jp
mov
hlt
jge
dec
cmpsb
push
hlt
testl
push
add
loope
jle
jle
fdivl
cltd
lcall
lahf
push
pop
adc
les
dec
aas
stos
cmp
jbe
lock
rol
rcrb
cltd
xchg
inc
rcr
xchg
das
call
xchg
div
and
push
dec
mov
repnz
or
fidivrs
pop
les
insb
mov
push
out
les
ret
unpcklps
xchg
dec
and
sbb
cwtl
mov
and
mov
mov
hlt
cmp
clc
dec
push
scas
in
cld
xchg
sbb
into
xchg
out
std
mov
addr16
cmp
out
imul
fs
lods
roll
mov
xor
lret
inc
jl
mov
lock
push
scas
addb
loopne
popl
icebp
sbb
pop
xchg
aaa
mov
or
jmp
or
adc
xchg
mov
movl
in
dec
jnp
xor
and
sub
cmp
pop
aad
lods
lret
cmpsb
scas
js
adc
mov
fcoms
push
xor
mov
lret
ss
or
sbb
adcb
pop
clc
xchg
pop
add
dec
fisttpl
scas
nop
je
jb
jg
push
sbb
testl
movsb
out
cmpsb
fs
les
mov
cmc
decl
in
ljmp
push
pop
mov
xor
mov
lahf
call
mov
stos
sti
cmpsl
sti
mov
sub
jmp
scas
push
decl
or
xchg
mov
xchg
sbb
stos
mov
jnp
out
or
dec
pop
pop
shrl
lods
cmpsl
mov
mov
fsubl
adc
mov
idivb
mov
enter
fnstsw
outsb
mov
push
pop
pushf
inc
adc
push
inc
out
cmp
jle
mov
pop
pushaw
adc
aas
inc
xchg
dec
rclb
push
dec
test
mov
ffreep
jns
jne
sub
sub
sbb
inc
push
rcr
mov
in
pop
dec
sbb
clc
scas
lds
sub
push
stos
cmp
pop
lds
int3
or
addr16
aad
dec
inc
sbb
xchg
push
insl
and
and
jecxz
pop
or
sbb
xor
adc
les
mov
xchg
mov
std
mov
std
jl
andb
sbb
lods
sub
cmp
sarl
fisubrs
and
js
test
shll
fidivrs
jb
loop
addr16
repnz
repz
sub
fcompl
and
addr16
hlt
cmp
add
mov
inc
stos
push
hlt
shrb
push
and
shrb
mov
fsubr
fstl
sub
mov
fucomp
mov
mov
dec
imul
add
lock
cmpsb
sub
out
in
adc
inc
jp
sbb
jp
and
and
int3
push
push
nop
stc
hlt
ret
adc
cmp
test
mov
incl
rcll
dec
adc
cmp
fiaddl
push
cmp
pop
mov
cmp
mov
lods
sub
insl
cmp
aad
in
inc
mov
xchg
push
dec
mov
pop
pop
pop
mov
mul
gs
roll
cmp
xchg
pop
ja
mov
push
mov
pop
lahf
pop
pop
mov
loop
ss
xchg
leave
sbb
lret
and
scas
iret
out
insl
pop
mov
fdivrs
in
pop
sub
xchg
movsb
sti
sub
dec
sub
inc
lods
shrb
push
insl
mov
xor
cmp
jmp
lcall
ljmp
mov
xchg
jp
out
sub
cwtl
xor
fistpl
sub
out
repnz
fcmovu
arpl
inc
cmp
pop
filds
dec
adc
mov
add
cld
fnstenv
decb
call
cwtl
stc
xor
sahf
dec
stos
add
mov
pop
push
mov
sbb
rcr
jno
inc
jae
pop
fsts
outsb
loope
fdivr
cmpl
stos
and
jns
push
and
jge
xchg
aas
jg
ljmp
xchg
fistpl
and
xor
xchg
pop
and
add
stc
inc
add
outsb
cmp
neg
cld
cmp
mov
ss
pop
pop
sahf
mov
in
in
mov
pusha
dec
xchg
setnp
leave
jg
dec
xchg
fwait
sub
bound
inc
fnclex
insb
aas
int3
shrl
sbb
mov
adc
pop
call
dec
lret
mov
sbb
scas
int3
mov
es
and
jbe
lret
out
gs
mov
sbb
cmp
cli
add
jnp
out
fsubrl
xlat
jge
push
lods
jecxz
loopne
loopne
sti
xchg
lcall
repz
imul
mov
cs
pop
add
jno
lods
push
cld
jnp
js
fdivr
push
sub
add
jecxz
jp
je
and
rcl
mov
sub
xchg
dec
and
aaa
dec
inc
call
mov
js
stos
psllw
push
cld
lahf
xchg
testl
mov
popa
test
stos
mov
mov
xor
mov
and
jb
xchg
insl
dec
mov
push
xor
jns
cmp
add
rorb
xor
je
rcrb
xchg
faddl
add
int
dec
mov
stos
or
pop
sbb
fadds
mov
shll
cltd
sbb
lahf
test
xor
inc
lock
js
push
jmp
mov
sub
cli
add
outsl
push
js
stos
js
jp
sbb
ds
xor
inc
ss
insl
and
insb
cltd
test
jne
inc
popa
sbb
pusha
and
mov
decb
pop
call
dec
jmp
lret
das
data16
fcom
ljmp
lcall
aaa
mov
cmpsl
rol
andl
or
mov
add
imul
push
cmp
fucomip
mov
imul
xchg
push
and
cmpsb
lret
pop
loope
shll
jecxz
push
adc
sbb
mov
mov
xchg
jl
imul
adc
inc
ss
pop
mov
inc
adc
aad
fs
xchg
inc
xchg
sti
jp
jo
xchg
jbe
add
and
es
jp
icebp
fmull
adc
notb
and
mov
pop
test
mov
and
int3
ljmp
cmp
shll
fs
rclb
test
cs
repnz
mov
mov
cmpsl
jo
std
sbb
subl
ret
inc
iret
mov
fmull
testb
lds
out
xchg
es
or
imul
outsl
inc
dec
call
lea
cmpsl
cmp
imul
int
ret
inc
cwtl
ss
fimuls
inc
xlat
clc
pop
xchg
hlt
mov
test
dec
fsubs
mov
inc
daa
arpl
push
icebp
cmpl
cld
xor
and
sub
ds
and
pop
scas
push
out
mov
call
scas
fcompl
and
jbe
cli
or
adc
sub
insb
fadd
sbb
jg
and
or
idivb
and
jo
movsb
enter
push
adc
jns
mov
xor
subb
data16
in
aad
xchg
cmpsb
sbb
sbb
lds
das
test
outsl
lret
xor
mov
imul
jle
loope
adc
xchg
pushf
ret
nop
lret
mov
inc
jns
rcrb
test
repnz
push
out
xor
aas
push
test
fcmovnbe
movsb
addr16
pop
push
jecxz
imul
rolb
loop
lretw
pop
or
lds
mov
in
adc
mov
dec
push
push
and
xchg
inc
and
cmc
dec
imul
cmp
jb
gs
inc
sub
mov
daa
sbb
ret
push
iret
and
mov
cli
push
aam
jb
xchg
js
cmpsb
mov
aam
or
popa
aad
popa
wbinvd
cwtl
jae
shrb
xchg
aam
pop
rclb
testb
pop
xchg
mov
cwtl
xor
push
mov
test
xchg
sbb
je
pop
mov
cmpsl
push
je
mov
rcrb
xchg
dec
lods
sub
jns
fxch
xchg
arpl
and
or
sbb
fcmovnb
int3
or
and
lea
mov
fs
and
shll
fwait
xlat
je
nop
mov
clc
lds
inc
push
repz
rcr
and
jnp
xchg
jnp
loop
shrl
sub
sbb
test
mov
mov
in
xor
outsl
sub
insb
mov
xor
loop
adc
cmp
cld
cmp
jle
imul
adc
sbb
dec
lahf
loope
mov
imul
pop
adc
in
iret
jl
xchg
fistps
shrb
sti
int3
inc
loope
lock
xor
call
lcall
adc
adc
adc
testb
pusha
mov
jmp
push
xor
cmpsb
mov
cwtl
ljmp
mov
and
test
push
add
mov
pop
inc
pushf
dec
mov
sahf
cmp
inc
dec
mov
sub
xchg
es
adc
shufps
pop
stos
movsb
dec
fidivrl
cmpsl
inc
xor
lahf
sbb
aam
vorps
mov
xlat
mov
dec
enter
insb
xor
push
out
out
and
push
fdivl
test
push
inc
test
cmp
das
pop
decl
pop
or
ret
push
add
cmp
and
dec
imul
sbb
fdivrl
mov
addl
inc
adc
jg
in
mov
sub
aad
ljmp
push
shrl
push
pop
jge
aam
movsl
cmp
mov
lds
jecxz
inc
sbb
fsts
add
xchg
movsb
pop
loope
int
and
sbb
sub
push
inc
xlat
push
xor
sar
jno
rorl
xchg
sbb
in
loop
lea
shlb
xor
jne
mov
test
es
loop
jno
add
sbb
jbe
enter
mov
lret
ret
xor
xor
xor
mov
xor
and
push
and
mov
pop
fsub
sub
jb
in
xchg
xor
xor
in
mov
jmp
inc
es
jbe
mov
mov
jle
fs
mov
add
ret
iret
je
sar
pop
mov
add
pop
nop
add
pop
xor
ss
sub
in
inc
loope
fcmovu
leave
push
fisttps
stos
mov
pop
cli
loope
xor
mov
prefetch
or
or
cmc
sbb
out
scas
fsubl
mov
ljmp
daa
mov
loopne
mov
add
dec
push
stc
jmp
sub
lods
push
jp
cmp
push
adc
popa
add
xchg
xchg
in
push
ja
dec
lret
in
fmull
outsb
add
and
std
add
enter
jge
pop
ret
adc
pop
outsl
out
js
cmp
fisttps
cmc
jno
les
gs
loop
lahf
daa
jp
lods
pop
inc
jae
shrl
inc
call
mov
cmp
jp
xchg
aam
out
dec
mov
mov
lret
inc
cs
insb
in
dec
xchg
data16
in
mov
add
dec
pusha
xor
or
mov
inc
pop
and
dec
mov
ja
jae
jl
int3
in
xlat
filds
movl
xchg
arpl
xchg
adc
adc
mov
inc
or
fdivr
sarb
int3
dec
movsb
inc
and
mov
mov
pop
shrb
int3
mov
fildll
jl,pn
adcl
pop
inc
movsb
repz
sub
mov
loop
pop
push
fs
xchg
push
jno
daa
mov
je
jb
hlt
rcr
clc
xchg
fwait
clc
push
into
sbb
mov
out
test
outsb
mov
jo
sub
jno
lcall
lods
call
clc
pop
mov
pop
shll
mov
push
mov
add
icebp
push
mov
adc
mov
into
cmp
or
test
xchg
scas
xchg
add
push
push
fwait
xchg
leave
std
xchg
test
gs
lcall
sub
dec
xchg
mov
das
test
and
pop
xchg
sbb
mov
sti
jecxz
jbe
shrb
add
push
into
or
cmc
push
xor
dec
mov
mov
pop
push
adc
cli
testb
aad
mov
neg
inc
out
cmp
movsl
push
popa
lods
aam
adc
sub
das
xchg
fldt
fiadds
jmp
test
mov
push
mov
jne
pop
xor
xchg
mov
or
rcrl
mov
pusha
outsb
inc
mov
sub
dec
jge
pushf
xor
ljmp
or
mov
jg
adc
xchg
gs
test
mov
in
jg
in
ffree
mov
sub
stos
jl
out
xor
inc
gs
ja
mov
push
fisttpl
mov
cs
or
ljmp
or
mov
jae
sbbl
testl
xchg
lret
cli
or
jbe
push
cltd
inc
aad
inc
bswap
jge
test
mov
jp
xor
mov
int3
xor
ret
in
imulb
xchg
sub
sbb
pminsw
jmp
cmp
jl
in
insl
add
push
xchg
sahf
std
cwtl
icebp
and
imul
cmpsb
xchg
lock
mov
pop
roll
es
mov
loopne
cmp
les
in
loopne
and
addr16
xor
jg
jle
inc
sub
filds
cmpsb
or
adc
xor
insb
mov
jmp
cld
dec
push
nop
cwtl
test
mov
daa
outsl
pop
ss
inc
cmp
loope
mov
adc
inc
movsb
data16
test
in
push
xlat
sarl
sub
and
cmp
xor
pop
adc
nop
xor
jge
es
test
add
rcrl
pop
les
lea
jns
inc
jge
faddl
add
bound
daa
movsl
pop
jg
dec
dec
fs
mov
inc
adc
aaa
in
not
testl
cmp
sbb
mov
add
and
arpl
mov
in
pop
sub
cmc
sub
in
dec
sbb
dec
adc
ss
mov
imul
or
fiadds
push
xor
dec
mov
test
mov
stos
divb
aaa
jne
cmc
adc
out
mov
jecxz
jg
lods
test
jae
mov
popa
ja
push
fnsave
fnstenv
jo
aas
push
cs
into
xor
jmp
mov
push
add
mov
add
add
sub
arpl
push
sbb
stos
lahf
cs
pop
inc
and
dec
lods
cmp
or
mov
xchg
lea
sbb
inc
shl
mov
inc
das
rcrl
je
cwtl
in
dec
mov
mov
mov
cmpsb
push
aad
adc
lahf
sub
ja
xchg
sbb
pop
movsl
inc
shll
xchg
pop
ret
mov
repz
enter
leave
mov
in
push
js
push
enter
cmp
xor
push
cmpsl
push
mov
jge
xor
xor
mov
push
xor
mov
xchg
push
inc
add
popa
jbe
mov
sub
pushf
dec
or
rol
xchg
cmpsb
stos
sbb
decl
or
pushf
frstor
jmp
sbb
or
fs
sbbl
div
dec
out
fwait
scas
fcmovne
push
jno
adc
xor
xchg
loop
cwtl
clc
or
push
aam
dec
rclb
push
mov
aaa
sbb
jle
fwait
dec
mov
jmp
dec
mov
jmp
repnz
mov
in
cmpsl
sbb
orl
fsubs
dec
scas
in
xchg
stos
repz
ss
cli
pop
mov
xchg
sbb
je
add
jmp
mov
jg
xchg
sub
xchg
dec
aaa
xchg
sbb
mov
test
insl
ds
jno
or
ss
cmp
popa
lock
stos
loope
leave
cld
sub
pop
mov
insl
push
cmp
cmp
pop
repnz
and
stc
inc
xchg
movsl
jl
push
cli
mov
repz
mov
jo
jl
sbb
xchg
mov
and
es
insb
fs
stos
cmp
inc
xchg
jge
mov
sbb
add
adc
pop
add
push
mov
add
mov
ds
push
stos
and
inc
sar
test
insb
xor
push
cmp
mov
imul
push
cld
rcrb
ret
test
jecxz
jecxz
push
imul
or
jge
sub
sahf
jae
mov
lea
and
movsl
xor
loopne
fistpl
loopne
lret
jecxz
lret
push
or
adc
sbbb
dec
pop
lds
mov
hlt
addb
dec
mov
inc
ss
jle
add
fwait
sbb
mov
sub
or
jbe
jp
ja
mov
repz
popa
stos
lcall
xchg
push
pop
inc
push
bound
push
fcompl
ljmp
mov
cmc
push
hlt
xchg
lahf
scas
add
dec
pop
add
cmp
xchg
cmp
push
out
std
test
data16
outsl
mov
bound
adc
and
out
xchg
fiaddl
jecxz
int3
pop
mov
leave
das
rcr
adc
mov
push
mov
pushf
pop
lcall
bnd
or
inc
test
dec
jbe
fcmovb
daa
test
fmull
push
outsl
ja
fildll
mov
inc
sub
in
jmp
ds
mov
mov
mov
jnp
popa
mov
fdivs
sub
out
filds
clc
inc
shll
out
dec
add
cwtl
push
popf
jg
pop
mov
roll
sbb
sub
lea
mov
in
lea
xor
add
jae
dec
dec
aas
push
mov
mov
scas
test
sbb
xchg
into
or
lods
sbb
movsb
jne
sti
mov
dec
popa
test
fcmovnb
insb
push
icebp
stos
xchg
das
in
xchg
jge
xor
mov
and
mov
adc
ret
and
adc
cmp
repnz
mov
mov
scas
int
aas
cmp
pop
rclb
inc
add
test
int
icebp
mov
mov
or
push
jle
in
mov
dec
roll
dec
movsb
cmpsb
xchg
inc
aam
inc
xchg
repz
insb
out
xor
xchg
mov
lcall
jmp
mov
xchg
inc
xor
jecxz
mov
mov
xchg
loope
mov
sbb
mov
dec
mov
mov
movb
mov
fcomip
mov
in
popa
jmp
fwait
in
add
into
out
int3
das
in
mov
popf
mov
imul
pusha
rcl
call
aad
sbb
xor
jbe
sbb
push
cmpb
std
mov
pop
xor
pusha
sub
test
sub
in
hlt
push
jae
aam
inc
stos
jge
sbb
loopne
out
xchg
mov
push
sbb
fmull
loope
pop
lcall
imul
xorb
push
test
test
lds
mov
andl
xchg
fstpt
xchg
lock
clc
dec
test
pushf
and
push
mov
sti
push
test
ret
or
jp
ss
outsb
sub
mov
add
mov
in
cmp
pop
xchg
cli
lock
out
popa
cmpb
dec
jno
lods
or
popf
popf
mov
ljmp
ss
cmc
iret
enter
mov
sub
jge
cli
pop
sti
pushf
negb
mov
xchg
adc
inc
mov
lods
sub
movsl
in
mov
and
xchg
mov
loope
mov
or
jb
cmovl
mov
dec
and
loop
adcb
pop
shlb
push
mov
stos
lret
xchg
int
mov
cli
mov
lods
enter
sub
sbb
lea
in
popf
cmpsb
shl
xchg
rcr
mov
mov
daa
mov
xchg
pop
lock
push
bound
and
shll
sbb
inc
sbb
jge
jge
jbe
xor
repz
and
sub
push
pop
sub
mull
mov
mov
pop
add
push
stos
push
jns
push
xorl
lock
std
les
mov
fs
mov
dec
jne
dec
mov
rclb
fidivs
nop
sbb
pop
roll
cwtl
roll
inc
iret
icebp
and
push
inc
jp
mov
cmp
gs
mov
data16
lahf
adc
call
aaa
mov
mov
cmc
loope
imul
aas
mov
in
or
push
int3
lcall
push
lret
pushl
xor
xchg
dec
in
push
loope
and
jge
mov
mov
mulb
pop
sbb
xor
in
xor
mov
adc
push
fsubrl
cmp
shlb
hlt
push
cmp
pop
sahf
daa
or
ss
je
push
popa
pop
shlb
cmc
in
jae
ja
mov
push
cltd
insl
pop
mov
xor
bswap
inc
ret
xor
cmpb
lods
push
mov
and
add
and
int
jge
jo
push
std
movsl
and
add
and
sbb
adc
pop
sbb
ret
sub
movsl
stc
and
sbb
xor
out
mov
mov
mov
imull
out
pushf
sbb
das
inc
loope
in
insl
dec
jl
stos
sub
or
das
xor
push
ret
push
jmp
cmc
es
add
out
test
es
lret
lea
outsl
sub
cli
lods
push
outsl
pop
sbb
jne
or
push
das
cmpsl
pop
mov
lret
push
push
push
sub
fwait
mov
jne
into
js
andl
iret
mov
cwtl
mov
lret
push
fdivs
adc
dec
lret
mov
into
jnp
xor
pop
jge
sub
into
xchg
dec
pop
inc
sub
push
xchg
repz
ret
pop
sub
fs
jmp
sbbl
and
lods
sbb
pusha
add
call
jge
adc
sbb
pop
jo
mov
and
mov
mov
push
test
push
loop
mov
push
jb
pushf
jno
lds
call
mov
mov
mov
nop
je
xchg
cli
or
inc
xor
add
loop
dec
nop
mov
pop
mov
mov
inc
in
jne
rolb
dec
out
in
out
repz
stc
add
lea
xchg
lods
sbb
mov
mov
daa
inc
jae
insb
mov
add
add
in
imul
es
outsl
dec
and
data16
push
cmp
adc
sub
ret
imull
loopne
mov
popf
test
adc
fcoms
dec
loope
and
mov
fxch
or
scas
insl
in
xchg
addr16
dec
lds
or
cmpsb
ja
sbb
pop
filds
outsb
cmp
xor
es
test
outsb
sar
jno
repnz
je
xor
loopne
sub
fstpt
mov
fisubl
sbb
pop
xor
pop
lret
mov
mov
push
fistl
add
mov
insl
jmp
test
sub
sbb
mov
xchg
ret
sub
and
adc
lret
dec
mov
insb
je
xchg
lret
sarl
sbb
dec
in
push
mov
cmpsl
mov
jmp
sbb
lods
sbb
dec
jns
pop
adc
cmpsb
popa
in
jmp
inc
fldt
and
fadds
mov
xchg
adc
lds
scas
mov
clc
sub
daa
loop
push
mov
imul
pop
pop
dec
pop
jns
pop
lods
mov
xlat
pand
dec
jl
fs
xor
stos
divl
mov
and
adc
dec
jle
and
sbb
pushf
inc
jne
sub
sbb
inc
sbb
subl
ret
hlt
imul
fsub
fsubs
mov
pop
xchg
cmp
and
mov
add
or
sub
sbb
stos
int3
test
jmp
dec
pop
inc
cmpsl
aaa
cwtl
mov
push
jae
out
inc
cmpsl
jo
pop
les
leave
push
mov
cmpsl
cmpsb
sbb
adc
out
gs
inc
cld
daa
xadd
sub
scas
push
cwtl
in
dec
icebp
xchg
pop
in
inc
imul
push
add
loop
pop
arpl
sbbb
adc
adc
add
in
mov
cld
cld
hlt
mov
cld
sub
mov
or
inc
das
mov
sub
sub
bnd
xchg
iret
ja
xlat
stc
add
mov
pop
add
insb
inc
xchg
das
inc
xor
icebp
sbb
in
lret
in
push
testl
movsl
xchg
jle
lret
jg
shll
bound
out
adc
sbb
outsl
idivl
sbb
dec
pushf
push
outsb
fcoml
or
push
out
xchg
cmpsb
loopne
pop
add
fstpl
sub
out
push
hlt
mov
sbb
pusha
icebp
and
mov
jnp
dec
test
push
push
xchg
out
mov
ljmp
xchg
inc
xchg
or
cmpsl
addr16
sbb
push
mov
test
test
sbb
out
xchg
in
stos
jnp
push
xor
adc
and
popl
mov
out
add
dec
push
sub
mov
movsl
push
sub
xor
or
mov
add
and
daa
out
jne
mov
mov
inc
jo
or
in
xchg
out
or
xor
je
leave
nop
test
or
inc
cmp
repz
xorl
out
popa
test
icebp
push
sahf
lret
and
jns
push
bound
jle
pop
and
rolb
and
xor
jp
pop
push
loope
data16
or
fcmovnu
int
inc
ja
mov
xor
inc
stos
scas
scas
in
cmp
jle
nop
hlt
sbb
jl
pop
lds
sub
sub
cld
cmp
cmp
jne
scas
or
and
xor
cmp
add
mov
rcrl
jb
push
and
mov
leave
cmpsl
sub
sub
test
push
xor
mov
cmc
or
movsb
std
xchg
pop
or
mov
push
mov
sub
mov
xor
mov
aam
pop
mov
sub
sbb
sbb
sbb
or
outsb
mov
mov
push
inc
pushf
inc
sub
mov
xchg
cmpl
mov
hlt
aam
adc
add
push
jle
inc
xor
jg
es
pop
iret
push
dec
inc
cmp
lea
roll
sub
pushf
add
add
out
xchg
or
jl
add
ss
mul
jg
dec
lds
sti
leave
call
push
cmp
outsb
js
lods
push
sub
out
push
pop
rol
push
movsb
rol
imul
sbb
push
mov
push
das
inc
and
mov
xchg
std
aad
xor
inc
in
sub
push
in
popf
or
into
ds
fdivl
dec
and
and
mov
fisttps
push
cmpsb
pop
jne
test
cwtl
fucomp
leave
aam
fcom
loope
sbb
mov
and
mov
cli
dec
lret
shrb
rol
mov
and
sbb
and
xor
and
lret
ror
push
fstl
test
jae
jp
and
movsl
into
sub
sbb
inc
jnp
daa
insl
movsl
dec
push
imul
dec
sar
fcmovne
jae
iret
rorb
roll
stos
out
inc
call
cmp
lods
aad
roll
sbb
mov
das
int3
pop
lock
xlat
fucom
xchg
jp
cli
es
add
int
in
cmp
mov
out
ja
pop
test
hlt
fnsave
stos
repnz
or
mov
and
frstor
js
arpl
mov
stos
sub
sub
pop
leave
ret
lret
cld
mov
pop
inc
fdivl
jle
sbb
fdivp
addr16
insb
sub
inc
dec
dec
stc
xorb
test
lock
fidivl
dec
lret
pop
clc
fsubl
lea
mov
shrl
add
inc
ret
inc
sub
sub
std
pop
pop
out
sbb
or
dec
sbb
std
out
cld
les
jbe
or
stos
pop
inc
adc
imul
dec
push
add
in
leave
mov
xor
cmpsl
mov
push
pop
fdivrl
mov
mov
rclb
pop
dec
pop
mov
adc
outsl
xchg
push
jbe
lahf
shl
cmp
mov
daa
xor
push
adc
add
xor
ds
mov
adc
in
xchg
aaa
cltd
lea
xchg
sub
movsb
jbe
insb
rcl
mov
mov
sub
xlat
push
rorb
es
mov
push
sti
push
mov
push
ljmp
mov
ljmp
rclb
xchg
dec
jle
add
fwait
or
mov
push
sahf
xor
popa
mov
fsubl
cltd
aam
xchg
add
inc
inc
out
add
xchg
fisttpll
test
dec
jae
mov
pusha
loope
xor
cmp
mov
rclb
jno
xchg
sbbl
bound
mov
clc
xchg
push
mov
sub
add
repnz
ret
cmpsl
nop
lock
test
int
stos
in
xor
add
and
or
pop
mov
rcrl
popa
iret
daa
adc
bound
pop
and
mov
cwtl
cltd
imul
cmp
ffree
sbb
dec
les
mov
pusha
sub
cs
aaa
pop
push
call
cld
pop
mov
arpl
test
lcall
arpl
les
out
xor
decb
fcomps
sbb
sbb
dec
mov
or
sub
adc
mov
mov
adc
pop
lret
stc
cld
sbb
test
or
mov
jle
sbb
pusha
jns
scas
sti
lods
pop
sti
pop
clc
fistps
dec
inc
jl
xchg
fwait
mov
pop
fadds
cmpsb
stc
xorb
lret
mov
sbb
adc
xor
mov
sarl
and
and
sub
dec
xchg
ds
into
jge
popf
jle
xor
cmp
push
cmc
mov
mov
dec
dec
lea
push
cltd
xlat
in
int
pop
jmp
and
mov
xchg
adc
dec
mov
imul
sbb
mov
mov
mov
cmpsb
mov
sbb
sbb
test
fisubl
cmp
inc
jnp
hlt
fwait
cli
mov
jle
adc
push
xchg
repnz
adc
insb
scas
test
scas
dec
cmp
xor
push
or
ret
cmp
notl
push
xor
sarl
dec
xor
push
dec
push
pop
mov
adc
inc
iret
xor
mov
bound
aaa
icebp
clc
ret
cwtl
icebp
mov
jnp
xlat
mov
test
dec
xchg
rol
xor
or
pop
inc
mov
cmp
pushl
fdivrp
push
adc
inc
stc
lea
xchg
dec
jmp
out
sbb
pop
ljmp
dec
mov
data16
dec
loopne
mov
aaa
lock
push
lahf
stc
enter
push
add
lds
in
nop
neg
mov
jmp
cmc
dec
push
xor
out
cmc
push
rcrl
add
divl
pop
hlt
dec
mov
jb
das
dec
inc
scas
movsb
rcl
sub
jmp
push
pop
push
jo
imull
mov
pop
and
decb
push
mov
les
shl
xorb
sub
lcall
ret
lods
mov
or
xchg
sbb
popa
loope
or
sarl
jae
sbb
cwtl
jle
push
out
pop
pop
jns
cld
cmpsl
push
cld
dec
fdivrl
fadd
mov
mov
xlat
fldcw
sbb
xchg
cmp
or
sbb
clc
addr16
xchg
and
pop
lods
and
cmp
gs
lret
popa
and
sti
xchg
in
cmc
push
jno
fcomps
cmp
push
sti
int
dec
or
movl
fsubr
adc
jle
enter
inc
dec
enter
rcll
mov
fwait
lods
xor
loope
fnsave
dec
fwait
stos
sub
xchg
repz
enter
bound
dec
jecxz
ficoms
sub
fsubrp
daa
sbb
or
cmpsl
out
daa
negb
xor
cmpsb
and
or
xlat
sbb
jnp
sbb
mov
cmp
das
out
lret
sete
xor
mov
xchg
in
add
fsubrl
dec
mov
fs
sahf
jo
aaa
mov
xchg
sub
iret
xchg
xchg
lahf
jg
pop
xchg
aas
test
outsl
add
and
mov
and
test
pop
push
std
push
mov
jae
dec
push
adc
lea
insl
in
sub
adc
inc
stc
rolb
inc
popa
test
sbb
inc
add
stc
lods
mov
insb
xchg
sbb
xlat
in
and
xor
into
lea
push
xchg
push
inc
stc
mov
gs
fisubrl
sbb
out
aam
or
loopw,pn
push
and
sar
ds
scas
enter
mov
cmp
push
aas
dec
fsubs
sti
stos
sbb
push
mov
mov
jmp
adc
fldt
push
mov
push
in
mov
sbb
inc
lret
ss
cwtl
and
pop
mov
inc
cmp
push
jne
mov
jp
and
adc
jno
cmp
jmp
fcmovu
xor
jge
test
push
add
cltd
jmp
or
faddl
inc
jecxz
out
inc
rcrb
repnz
daa
mov
adc
enter
daa
mov
mov
pop
hlt
dec
aam
out
mov
test
mov
shrl
mov
sbb
out
test
xchg
and
fnstcw
mov
jne,pt
push
add
sbb
jecxz
jbe
shlb
adc
inc
sub
push
adc
ret
sbb
pop
cmp
pop
mov
sbbb
dec
xor
or
mov
xchg
rcrb
push
mov
rcl
ret
loopne
xor
repnz
push
cmp
mov
sarl
adc
shlb
mov
push
xchg
jmp
and
ljmp
mov
movsl
mov
mov
jae
ror
xchg
out
xor
cmp
stos
ret
ljmp
and
cli
sub
adc
mov
xor
jle
aam
or
outsl
out
add
xchg
sub
es
cmp
xor
xchg
inc
mov
sub
xchg
inc
dec
xchg
std
div
sahf
repz
sbb
test
xchg
ja
sbb
push
sahf
dec
in
fsubs
cmc
push
sub
sbb
push
pop
stc
cmpl
lahf
inc
cmpsl
dec
inc
andl
pop
movsl
jg
out
add
popa
movsl
xchg
das
pop
sbb
shrl
fnsave
sti
jb
and
lods
aas
cwtl
fdivrl
into
inc
push
sub
mov
pop
fcmove
arpl
sbb
lcall
sub
cmp
outsl
xor
rolb
nop
hlt
mov
cmpsb
call
pop
xchg
cs
in
fiadds
push
mov
inc
xorb
adc
push
adc
fidivl
and
push
mov
shl
cmpl
jp
insb
adc
mov
jo
push
jmp
js
add
inc
arpl
inc
xchg
sti
mov
popl
fstps
xchg
jnp
popf
xchg
ljmp
xchg
in
add
sti
mov
xchg
xlat
mov
nop
stc
outsl
jb
mov
adc
pop
jbe
mov
xchg
ret
add
jb
decl
je
lds
pop
mov
jne
popa
ret
mov
icebp
fsub
mov
negl
push
xchg
addr16
jmp
out
enter
in
xor
ds
push
fistpl
in
and
xchg
push
lods
xor
das
mov
ljmp
mov
shlb
test
push
sbb
test
nop
sub
pop
sti
add
mov
rcr
xlat
push
jge
iret
loope
popa
subl
stc
xor
jecxz
ret
lret
lods
dec
xor
scas
lcall
pop
inc
inc
movsb
sbb
ss
cmp
loopne
add
das
pop
rol
or
push
ja
pop
cmpsb
push
loop
mov
out
mov
cmp
shll
mov
je
mov
mov
cmc
ret
not
enter
loope
sub
mov
pushf
mov
xor
bound
fs
cld
es
shlb
rorb
dec
or
jne
out
lcall
push
push
roll
imul
imul
push
xchg
pop
inc
sub
jecxz
inc
cpuid
pop
inc
rolb
xchg
bound
jecxz
dec
in
sub
and
jbe
xchg
push
icebp
sbb
inc
cmp
jg
xor
out
mov
adc
out
mov
sbb
call
clc
cmpsb
movsl
xchg
ret
sub
adc
push
fisubrl
pushf
sahf
inc
lret
mov
scas
pandn
ret
add
push
xchg
dec
test
imul
add
sub
jg
lods
xchg
cmpb
dec
and
push
scas
sti
fs
stos
pop
out
aaa
cmpsb
insl
stos
out
fisttpl
xor
mov
mov
es
cmpsb
mov
cmp
adc
movsl
mov
sbb
dec
imul
sahf
jbe
pop
inc
push
push
mov
sub
shl
cli
imul
sbb
mov
pop
enter
adc
jb
dec
cmpsb
pop
aad
dec
lea
fldt
loop
push
ss
mov
into
daa
xchg
mov
cmp
inc
in
jbe
cltd
sbb
xchg
aam
mov
stc
out
loopne
outsl
jbe
mov
adc
insl
push
push
jle
ljmp
dec
lcall
lods
shll
iret
cli
xorl
lahf
pop
pop
clc
data16
inc
shll
jo
enter
cltd
fisttps
sahf
pop
mov
shl
cmp
jne
and
clc
dec
pop
sbb
or
adc
cmpsb
push
imull
sbb
int
hlt
xchg
fistl
mov
pop
adc
jbe
jo
xor
lds
lock
cmp
mov
inc
repz
xor
push
frstor
shll
jp
repz
in
cli
cmp
push
jnp,pt
jecxz
xchg
ljmp
inc
std
jb
cmpsl
loop
xchg
popf
int3
daa
aas
sub
inc
jb
nop
dec
insl
jnp
push
mov
xlat
sti
jno
cmp
inc
and
lock
xchg
add
stc
rolb
or
pop
insb
push
jge
shrl
lods
mov
mov
cmp
cld
xor
push
arpl
stc
mov
mov
insb
push
cmpsb
addr16
cmpsb
jns
lock
sahf
sbb
fwait
pop
je
repnz
popa
add
or
cs
sub
xchg
nop
mov
jg
arpl
cmp
adc
addr16
inc
aaa
test
out
xor
sub
dec
leave
movsb
mov
dec
sub
jmp
inc
das
and
dec
mov
lret
into
frstor
icebp
lock
fsts
out
push
xchg
aaa
jae
or
pop
loope
adc
pop
rcl
mov
aad
pop
shr
cli
xor
popf
lret
push
loop
scas
inc
jbe
cmp
inc
je
daa
dec
jmp
or
ret
add
cmp
jae
popa
movsb
icebp
cmpsl
or
imul
daa
lods
leave
int3
shr
xchg
dec
dec
sbb
lret
ljmp
and
mov
cmpl
push
or
add
sahf
lock
pmullw
xor
in
aas
push
ret
stos
dec
xor
sbb
fiaddl
inc
xchg
or
pop
lock
int3
insl
sahf
adc
pop
scas
frstpm(287
cmpsb
std
stos
pop
inc
mov
les
loopne
test
pop
xor
xchg
movl
or
mov
loope
cs
mov
cltd
rorl
les
stc
cmp
push
movl
push
cwtl
out
out
test
lea
scas
insb
not
mov
inc
addr16
jmp
adcl
cmp
mov
lods
ficoms
fcmovb
shr
es
fcomp
or
fcmovu
sub
xchg
out
and
clc
and
or
repz
fcoms
jb
test
mov
test
movsl
push
inc
add
sbb
sub
popa
fldt
push
jae
test
jb
and
clc
movsb
sbb
dec
cmp
adc
adc
inc
in
push
cmp
repz
xchg
not
scas
and
inc
scas
mov
cwtl
loop
adc
pushf
outsb
adc
pusha
aad
mov
and
stc
push
jg
dec
sbb
nop
and
dec
icebp
imul
mov
fwait
add
clc
sub
cs
mov
imul
div
insb
xor
clc
sarl
inc
mov
fcoml
adc
jecxz
insb
idivl
mov
sarb
and
mov
in
push
xor
mov
ja
mov
pop
and
in
xor
loope
incl
xlat
shlb
loopne
lahf
dec
push
xor
fwait
sub
movsl
fs
jne
rorb
sbb
fmuls
cmp
rcrl
dec
fisttpll
ds
leave
jl
lds
cmpsl
sub
int
jl
inc
adc
xchg
sub
mov
xchg
outsl
sbb
and
fistpll
lahf
imull
dec
enterw
sti
fcoml
or
clc
in
dec
pop
add
arpl
xor
inc
or
clc
add
jnp
lods
adc
das
jns
stos
or
and
leave
dec
in
mov
adc
arpl
rolb
jo
popf
cmp
jp
in
mov
es
dec
fsubs
ret
adc
subl
sub
sub
lcall
enter
adc
in
xor
dec
lds
push
pop
repz
test
loopne
cmp
push
push
pusha
mov
adc
js
pushf
filds
cwtl
sub
sbb
nop
mov
bound
sub
push
mov
rcl
mov
or
push
test
call
js
in
icebp
push
dec
test
call
mov
aad
jl
push
add
repnz
iret
jp
hlt
cli
test
pop
pushf
pop
popf
cmp
sbb
jp
xchg
jno
cmp
lds
cmp
stc
xchg
xor
cmpl
lret
push
pop
mov
add
sbb
inc
sub
ret
dec
iret
stos
cmp
stos
pop
stos
push
nop
dec
repnz
fneni(8087
inc
inc
rorl
repnz
xchg
push
push
jge
hlt
lcall
xchg
sbb
inc
xor
jne
arpl
pop
fsts
dec
dec
mov
push
mov
sbb
inc
mov
xor
cwtl
mov
jecxz
fnsave
iret
push
mov
outsl
das
je
mov
fnsave
mov
jne
movsb
mov
or
xor
mov
sub
insb
sub
pop
push
imul
js
jae
mov
clc
ja
inc
std
insl
dec
pop
jecxz
mov
insb
jmp
sub
jne
jno
push
ds
sbb
dec
daa
push
gs
and
xchg
lods
sbb
mov
jns
or
lds
das
cmpb
push
aas
call
add
or
dec
faddl
adc
sbb
mov
sbb
xchg
repz
push
mov
fiadds
inc
jp
sbb
gs
add
leave
jg
test
shr
loope
shrb
push
fists
into
push
cwtl
adc
mov
mov
imul
addr16
dec
jg
out
xor
int
inc
mov
jg
lcall
arpl
cmpsb
xchg
pop
push
jno
sbb
in
mov
roll
xchg
jg
pop
mov
mov
call
pop
mov
and
ja
add
add
jecxz
sub
fwait
fs
lea
addr16
sbb
in
data16
idiv
loope
xchg
pop
or
mov
cmpsb
and
ja
movsb
jmp
inc
call
sub
mov
cltd
xchg
ja
fidivrl
shll
daa
push
mov
rorl
dec
adc
in
cmpl
cmc
pop
loop
jmp
pop
divb
sbb
xor
adc
and
sub
rol
mov
bound
xchg
fisubl
jae
adc
fidivl
or
fwait
scas
mov
mov
insl
fstpt
andl
jge
push
lods
mov
mov
mov
inc
fwait
add
int3
pop
loopne
lods
push
ja
xchg
clc
andl
enter
add
jmp
jb
lods
int
fnstenv
inc
sub
xchg
xchg
sbb
je
push
adc
mov
xchg
and
and
fimull
iret
cmpsb
sbb
sbb
mov
sub
not
dec
fs
xor
aad
cmc
xor
lods
faddp
les
jmp
inc
ret
pushf
add
bound
cmpsb
aad
cltd
dec
rolb
mov
sub
inc
jmp
lcall
int
fcomip
iret
stos
jmp
cmp
scas
and
ja
jns
lds
into
and
jg
bound
xchg
mov
in
inc
pop
jecxz
lcall
out
andl
test
add
jge
jno
testl
mov
pop
sbb
xchg
ljmp
push
jle
and
mov
mov
icebp
in
aad
dec
frstor
divl
repz
pop
rorl
into
sub
sysret
mov
das
adcl
in
inc
jae
cmp
repz
sbb
insb
or
sbb
mov
or
mov
xchg
repnz
xlat
rclb
pop
xchg
out
push
arpl
in
sbb
and
mov
or
sub
out
sarl
int3
jnp
mov
out
loope
stos
add
and
dec
or
fstp
loop
adc
jecxz
cmp
js
or
in
ret
addb
ficoml
andl
aam
or
push
adc
mov
cmp
fcom
movsl
in
gs
sbb
mov
dec
popa
lcall
jp
sbb
mov
inc
xchg
mov
xchg
cmp
movsb
jno
negb
xor
lcall
test
sbb
dec
xchg
jns
or
aad
adc
ja
xchg
mov
dec
movsl
cmpb
and
cld
scas
flds
jmp
jnp
mov
sub
push
sub
mov
xor
mov
pop
mov
sub
pop
sbb
in
mov
fmulp
nop
mov
dec
jne
inc
divb
xlat
lret
xor
cmp
data16
cltd
jns
pusha
push
rol
jmp
pusha
nop
sti
inc
mov
sub
icebp
jae
insb
lds
inc
in
xorl
dec
pop
mov
test
cmpsl
int3
xchg
enter
mov
fldcw
fsubp
inc
add
mov
pusha
outsb
inc
dec
pop
fcmovnu
mov
jp
lds
rclb
cmp
cmp
popa
sarb
xor
popf
in
inc
mov
push
jbe
or
dec
push
ret
xor
mov
add
das
mov
popf
out
adc
cmc
je
push
test
cld
xor
cmpsl
mov
mov
loope
btr
dec
or
in
xchg
add
mov
stos
fldcw
std
lahf
jle
movsl
scas
shlb
mov
aaa
mov
jne
dec
xchg
pushf
fs
out
stos
bound
inc
mov
test
sub
and
cmc
sbb
popl
aad
dec
pop
bound
adc
push
xchg
pop
xlat
mov
or
mov
iret
mov
mov
dec
or
lahf
test
cmpw
out
push
in
adc
sti
gs
movsb
mov
add
popa
cmpsb
mov
loopne
lcall
or
adc
enter
icebp
bound
ds
into
dec
mov
sub
adc
add
cltd
lea
fsubrl
int
out
sarb
mov
jns
mov
inc
gs
jne
data16
xor
add
sbb
inc
add
inc
or
subb
push
push
fldenv
js
push
daa
int
jmp
xchg
sub
dec
xorl
sub
sub
xchg
fnstcw
in
jl
lds
arpl
int3
les
pop
inc
xlat
filds
jb
add
jmp
js
push
sbb
std
cmp
pop
andl
ds
loope
icebp
cltd
stos
idivb
pusha
inc
mov
dec
fnclex
xor
iret
mov
jmp
add
xchg
lds
inc
fstpt
daa
pop
inc
adc
sbb
stos
aam
je
sbb
push
cmpl
add
imul
push
popa
mov
nop
add
subl
scas
les
inc
dec
dec
lcall
movsl
pushf
jbe
add
add
add
jmp
aaa
xorb
push
dec
mov
sbb
inc
fucom
xchg
mov
fwait
sbb
shrl
adc
xor
stos
adc
mov
mov
jnp
xchg
mov
xor
pop
pop
fnstsw
and
mov
jp
xorl
movsb
outsl
movsl
xor
push
outsb
imul
jae
mov
les
mov
pop
stos
stc
movsb
or
enter
push
pop
leave
sub
push
std
inc
mov
fnstenv
and
jo
adc
icebp
jg
pushf
mov
and
push
ja
ja
jno
les
imul
mov
xlat
sub
sbb
xchg
bound
xor
add
xchg
sub
mov
sub
xor
or
fdivrl
sbb
subb
cmp
rcl
cwtl
mov
xchg
idivb
arpl
push
lea
and
mov
scas
popf
mov
mov
loop
mov
cwtl
xlat
int3
cwtl
hlt
les
imul
or
aam
cltd
and
aas
ret
outsb
data16
outsw
hlt
push
pop
xlat
pop
cmc
out
push
xchg
xchg
mov
mov
pop
cmpsl
pop
out
xchg
popf
dec
xchg
insb
xor
loopne
pop
lret
rcr
or
je
imul
and
pop
jecxz
icebp
and
jae
int
daa
ds
daa
xor
mov
cld
cmp
inc
lods
out
xchg
xchg
jecxz
lods
push
cmpsl
push
mov
rorb
jns
mov
mov
jp
xor
push
dec
int3
dec
cld
xchg
repz
test
xchg
in
enter
jecxz
shll
adc
ret
jbe
loop
inc
adc
out
sbb
add
or
and
scas
lret
xor
and
mov
cmp
cmp
mov
int3
outsb
shll
pop
pop
shlb
cmp
sub
push
stos
cld
movsb
popf
jns
xor
aaa
cmpsl
jo
test
movsb
lret
inc
ljmp
ret
cwtl
xchg
mov
in
mov
push
push
mov
sub
jae
faddl
mov
push
mov
enter
mov
jp
iret
cmp
lret
lea
push
les
inc
fstl
jo
push
nop
lret
xor
jne
lahf
or
mov
cmpsl
subl
cmp
shl
aaa
stc
sbb
mov
adc
loop
mov
and
jno
pop
mov
es
jle
in
js
imulb
insb
jecxz
test
imul
jmp
incl
out
es
inc
or
das
xchg
mov
test
cmp
mov
jl
ljmp
sub
data16
fldcw
in
jg
pop
outsb
test
fs
sbb
jecxz
xor
cmp
xchg
cmp
test
pop
stos
dec
ret
mov
loop
lret
xchg
adc
mov
in
pop
out
push
cwtl
push
sub
inc
jge
cmp
aad
pop
fimuls
ret
cmp
sbb
xor
js
hlt
adc
sbb
mov
inc
imul
stos
or
add
and
mov
daa
addr16
ds
lods
xchg
jae
xor
dec
cmpsb
enter
inc
fdivs
mov
ret
lock
xchg
fs
insb
xlat
das
mov
scas
js
pusha
jecxz
jmp
mov
in
mov
inc
rolb
vmwrite
xchg
sbb
push
aad
mov
shrl
frstor
icebp
adc
and
sbb
sahf
ss
dec
xor
faddl
rcr
sbb
or
nop
addw
add
add
or
dec
sub
xor
lret
ljmp
nop
fisubs
xor
loope
xor
imul
lock
xor
in
daa
cmp
sbb
movsl
jbe
ret
rolb
and
pop
outsl
daa
jle
mov
out
dec
sbb
xor
fidivl
xlat
rcrl
fs
inc
movsb
dec
sub
imul
iret
inc
insl
sar
mov
cmpsb
xor
push
push
mov
lods
xchg
subb
add
dec
or
pop
orl
loope
fwait
pop
add
mov
fs
test
fs
and
rclb
cmp
adc
fidivrl
add
repnz
mov
pop
pop
jle
jne
inc
data16
xchg
hlt
add
stc
and
mov
fs
pop
lret
lea
pop
add
adc
jge
arpl
and
out
push
push
ja
inc
je
mov
xlat
imul
pop
xchg
push
and
filds
mov
aaa
outsl
cmp
mov
stos
or
repnz
in
hlt
pop
jp
xor
outsb
mov
fildll
sub
sbb
cmp
movsl
call
jge
sub
shl
sarb
int
fildl
sub
inc
push
adc
ljmp
in
pop
xchg
out
test
stos
jae
rcl
fcoms
adc
jns
es
inc
ret
data16
enter
jmp
xchg
mov
mov
daa
lods
pop
jb
cltd
leave
pop
mulb
mov
cmpsl
sbb
sbb
int
inc
mov
loop
fnsave
aad
sub
xorb
xor
enter
lock
lds
mov
xlat
xchg
inc
push
or
xchg
sbb
movsl
sti
or
mov
orb
mov
fsubl
xor
and
inc
fwait
dec
mov
int3
or
sahf
mov
mov
ds
sti
leave
int
in
mov
sbbb
cmpsb
xor
movsb
cmc
mov
scas
into
inc
pop
jp
sti
mov
mov
or
sub
lcall
push
cmpsb
fisubrl
mull
pop
dec
getsec
cwtl
push
stc
jmp
test
repz
mov
adc
ja
push
es
and
cs
repnz
in
in
sub
ret
sub
stos
es
push
or
addr16
xchg
mov
cmc
in
jne
mov
sub
mov
mov
sbb
sbb
pop
stos
dec
aas
mov
int3
das
icebp
cwtl
dec
jecxz
repz
inc
adc
inc
mov
lret
mov
aaa
sarl
in
shrl
pop
lods
in
xor
gs
movsb
stc
dec
add
test
insb
pop
out
mov
add
pop
and
sub
stos
orl
and
fstps
shlb
cmp
and
sbb
pusha
dec
int3
mov
inc
test
xchg
insl
jbe
xchg
pusha
mov
adc
add
jle
and
inc
push
jbe
pop
rorb
leave
jbe
add
cwtl
jmp
imul
je
push
nop
mov
push
aaa
sub
mov
in
lahf
shlb
arpl
pop
xchg
xchg
add
inc
and
aam
push
ret
inc
ss
outsb
inc
adc
iret
into
or
push
int
adc
or
out
or
mov
mov
xchg
inc
ret
rorl
rcrb
movsb
push
decl
push
mov
pop
lcall
inc
negb
inc
xlat
lods
shll
xchg
repnz
test
iret
xchg
out
jne
cwtl
arpl
dec
mov
inc
jp
pop
sub
loopne
sti
leave
call
sahf
add
outsb
add
and
inc
jl
xor
jp
mov
arpl
and
and
rolb
sub
fnstcw
mov
jns
roll
sub
rorb
cltd
push
mov
lcall
pusha
sub
inc
dec
xor
push
iret
daa
xchg
ja
cmp
or
xchg
hlt
push
mov
aaa
push
orb
test
clc
std
lret
mov
jno
aaa
mov
dec
shll
cli
and
add
mov
push
mov
push
test
mov
jmp
and
jge
xor
mov
std
adc
and
int3
sub
aad
sub
and
faddl
inc
shl
pmulhuw
scas
iret
fsts
ljmp
pop
enter
into
mov
jg
fists
push
negl
aas
fmulp
pop
paddsb
push
movsl
shll
add
push
insb
lcall
pop
in
mov
lcall
data16
ficoms
jp
insb
cld
sbb
pusha
sub
and
lock
pop
stc
cmc
insb
xor
lcall
in
inc
lret
and
stos
inc
fidivl
fstpl
jnp
dec
adc
sbb
outsl
xlat
xchg
jle
je
ret
jne
push
stc
fstpl
das
dec
and
pop
adc
test
das
cmpsl
xchg
push
mov
jge
sbb
mov
shll
les
cmp
jnp
divb
jne
iret
lret
aaa
dec
mov
or
jmp
xchg
inc
mov
sbb
ret
int
mov
xchg
pushl
jg
pop
fs
mov
movsb
dec
outsb
mov
addr16
add
inc
mov
sbb
scas
insl
sub
mov
shll
xor
pop
out
jmp
movsb
jnp
fisubl
pop
sbb
adc
ret
mov
sti
cmp
fdiv
and
jae
pop
roll
scas
rcll
pop
test
and
flds
xchg
jbe
out
push
xchg
repz
je
sbb
xchg
faddp
loopne
repz
sub
sub
jmp
jg
movsb
sti
mov
subl
jbe
cltd
mov
mov
in
mov
jno
arpl
cmp
xor
jge
or
mov
daa
adc
cwtl
dec
iret
mov
push
pushf
imul
imul
sbb
sbb
pop
adc
loopne
loope
xchg
test
movsl
cmpsl
adc
jno
fisubl
xlat
shlb
and
repnz
pushf
or
pop
lock
lcall
sbb
and
in
mov
mov
lea
lods
loopne
inc
cli
jmp
cltd
mov
mov
ret
push
adc
add
ret
aad
push
repnz
sbb
mov
pop
push
push
fs
pop
cmp
sbb
faddl
test
add
movsb
pop
inc
adc
clc
fwait
mov
jne
sbb
testb
loopne
jb
insb
or
popf
lds
lods
pop
push
adc
push
pop
adc
mov
add
cmp
pop
pop
jl
and
jl
adc
imul
test
iret
enter
mov
and
lea
mov
inc
push
mov
imul
fmul
add
in
mov
in
xchg
movsl
adc
popf
jmp
sbb
xchg
xchg
inc
test
mov
outsb
stos
hlt
mov
das
sti
pop
std
nop
inc
loop
loope
dec
add
mov
cmp
xor
loopne
dec
testb
add
nop
hlt
das
xor
inc
or
push
jge
push
jg
sarb
scas
mov
or
inc
push
mov
pop
loop
or
sbb
out
sbb
shl
push
push
in
lock
test
imul
push
push
mov
sbb
cmp
popf
inc
js
pop
or
jnp
scas
adc
add
lret
mov
push
aad
movsl
xchg
push
rcr
sub
push
xchg
and
add
ja
in
out
bnd
jne
sub
in
stos
test
cmp
shrl
sub
lcall
aas
pop
fwait
mov
or
popa
xchg
pusha
adc
xchg
aad
les
xor
fstl
mov
dec
shrb
mov
xchg
jo
push
flds
cmp
cmc
in
psllq
dec
lods
ljmp
xor
mov
ds
out
clc
pop
push
sub
push
or
xchg
xlat
push
out
es
daa
sub
repz
mov
repz
cmpsl
sbb
mov
add
cmp
pop
add
movsl
jecxz
push
mov
jmp
push
lods
jbe
sahf
mov
test
jp
jmp
or
xor
inc
loop
or
ret
int
mov
movsb
rcrb
cmp
or
mov
sub
sub
mov
ljmp
into
xchg
rorb
add
aaa
cwtl
or
sub
jmp
je
test
clc
xchg
out
adc
sbbl
sbb
bound
mov
inc
cmc
shlb
push
push
xor
inc
jns
mov
ucomiss
mov
xor
cli
hlt
xor
push
hlt
lret
fisubl
sbb
mov
jae
jp
inc
adc
pop
repnz
mov
push
ss
dec
sbb
js
sti
jno
movsb
inc
mov
in
xchg
jecxz
cld
movl
pop
inc
mov
mov
adc
pushf
sti
sub
cmc
dec
pop
sbb
mov
aam
outsl
fldl
sub
ds
mov
jge
push
lcall
sti
jge
daa
jl
mov
lods
pop
jae
sarl
sbb
imul
xchg
sti
dec
dec
dec
mov
push
cmpsb
xchg
fmuls
mov
sbb
aad
inc
inc
push
and
adc
mov
pop
popa
cli
out
jnp
cwtl
mov
cmc
pop
rcl
push
fcomps
jns
add
inc
bnd
inc
pushf
std
lahf
lret
mov
mov
stc
sbb
je
mov
jne
test
push
loop
cltd
or
in
aaa
inc
imul
xor
in
cmp
sbb
scas
adc
adc
test
xchg
mov
sub
sub
jno
mov
inc
fscale
add
inc
icebp
mov
pop
dec
imul
std
into
arpl
inc
adc
and
int3
push
movsb
mov
leave
mov
roll
jge
scas
add
sbb
sti
ljmp
out
mov
mov
outsb
or
imul
addb
cltd
insb
cmp
dec
cmp
shlb
push
stos
xlat
pop
decl
pop
xlat
shll
lock
jmp
pop
and
mov
ljmp
sahf
movsl
mov
or
mov
jmp
aas
sub
ljmp
or
inc
mov
shlb
add
cmp
mov
pop
idivb
push
sub
xchg
repz
xchg
push
les
xor
bound
cmpsb
iret
inc
repz
jl
or
xchg
cmpsb
ret
inc
mov
jmp
xor
aas
mov
sub
push
push
mov
ja
mov
push
popa
pop
push
dec
inc
or
mov
cmp
stos
sub
ficoms
out
dec
push
pop
push
pushf
and
xor
push
fldenv
mov
out
or
std
mov
mov
rcrl
sbb
pop
into
mov
or
mov
add
insb
xchg
adc
fisubs
hlt
fistpll
ja
xorb
addr16
aas
mov
mov
or
push
in
dec
mov
push
mov
jno
out
fwait
push
clc
shr
lahf
sub
js
jne
ds
cmp
clc
popf
fsincos
std
pusha
ljmp
push
adc
mov
lods
push
shl
cmpsl
jnp
lcall
fs
scas
push
sub
pop
xchg
xchg
fwait
bound
mov
fstl
into
rep
daa
mov
scas
int
sub
mov
pop
mov
subb
jns
idivb
in
push
xchg
lret
lds
jmp
jmp
add
inc
scas
cmc
xchg
sti
call
xchg
xor
push
xor
mov
xchg
mov
in
sahf
pop
mov
in
es
push
jne
psubusw
andl
jmp
and
lock
movsb
dec
stos
xchg
sbb
mov
pop
aam
adc
sub
seta
xchg
and
adc
adcb
xchg
mov
lret
loope
gs
dec
test
sbbb
cmp
out
dec
mov
cld
je
and
es
or
lods
pop
enter
inc
cwtl
inc
icebp
or
jne
add
insl
jle
xor
mov
mov
jo
inc
fwait
nop
add
test
les
fwait
outsb
xlat
push
and
scas
sahf
inc
fmul
dec
add
das
dec
fbstp
xchg
pushl
inc
out
aam
dec
xor
sti
lods
gs
mov
push
jnp
or
pusha
or
addr16
jb
xor
ja
xchg
loop
push
mov
notb
notl
test
aaa
push
mov
dec
shlb
sbb
jmp
and
fnstenv
aad
xchg
ret
test
lret
ljmp
sbb
shrb
jo
fiadds
dec
inc
push
jns
push
mov
jnp
mov
mov
sub
ds
jnp
loope
movsl
addr16
mov
insb
jne
dec
insb
or
fiaddl
jl
push
cld
sub
xor
inc
loope
mov
jg
push
stos
adcb
or
fadds
dec
addb
leave
sbb
outsb
sub
push
imul
inc
jecxz
popa
incb
inc
outsl
mov
js
cmp
mov
mov
and
jg
pop
mov
sub
sub
xchg
outsb
test
fistps
stos
stc
aas
mulps
sahf
jae
xor
mov
sub
mov
push
mov
or
push
pop
cmpsb
and
mov
sub
imul
jg
testb
aad
lahf
in
xor
pop
add
sub
pushf
mov
addl
sahf
dec
loop
ret
loopne
add
and
xchg
jne
insb
lds
scas
nop
sub
adc
out
movsl
bound
mov
icebp
dec
xchg
divb
andl
cmp
dec
loop
xlat
sub
sarb
scas
pop
in
pop
add
pop
pusha
adc
xlat
and
push
pop
adc
arpl
mov
adc
pop
int3
cmc
dec
pop
inc
test
mov
cmp
jno
leave
movsl
ja
ret
xor
cmpsl
and
out
xchg
je
dec
call
or
push
xor
dec
shlb
lds
pop
repnz
fistps
rorl
fcmovb
xchg
cmp
cld
jge
push
sti
lock
call
in
push
sbbb
add
int
xchg
cs
xchg
add
mov
mov
mov
xchg
loop
mov
dec
repz
lret
test
dec
sbb
les
push
mov
push
int3
into
jno
leave
nop
inc
push
insl
adc
jo
addr16
rorl
pusha
add
fucomip
xchg
sub
cmp
fsubrs
shld
cld
rorl
push
mov
add
mov
or
aaa
push
adc
add
test
xor
sbb
in
mov
push
or
clc
aam
pop
pop
add
pop
or
dec
sub
cmp
pusha
cltd
jl
mov
iret
sub
xchg
lock
and
dec
sub
jbe
cli
stos
or
adc
sbb
push
loop
jnp
insb
adc
sub
out
sub
mov
cmp
sbb
pop
xchg
mov
int
lret
push
sbbl
ja
andl
cwtl
shrb
lret
mov
mov
in
out
cmc
or
or
mov
jmp
add
cmp
jl
loop
or
lahf
mov
cmp
stos
test
or
pop
push
push
adc
stos
fs
push
aam
sti
mov
jne
and
mov
mov
xor
adc
pop
push
pop
out
aam
testl
inc
dec
divl
mov
sti
cmp
adc
std
shll
daa
lea
leave
adc
std
insl
xchg
popa
dec
sub
dec
and
jle
pop
fidivl
andb
mov
aam
orl
cmp
in
je
xor
aaa
insb
test
inc
push
movsl
or
shll
lds
loopne
test
sbb
ja
mov
aas
adc
lds
cltd
push
pop
xor
mov
mov
shl
jae
mov
jle
add
fldl
inc
jecxz
fs
xor
adc
mov
xchg
cltd
jne
es
iret
sbb
sub
test
jle
lods
xor
xchg
lcall
loope
jo
movsb
aam
pop
or
xchg
and
push
jbe
push
jecxz
pop
xchg
and
fs
pop
stos
out
out
xor
jge
xor
flds
mov
push
xchg
sbb
ret
fsubl
lods
jp
ret
mov
xor
mov
popa
sub
push
test
mov
add
add
gs
cltd
mov
fnstcw
int3
jp
pop
inc
mull
jo
pop
mov
in
and
push
movsl
test
mov
jns
and
and
or
dec
add
mov
ret
adc
aad
pop
loopne
xorb
mov
lcall
pop
adc
sub
daa
fiaddl
xor
push
std
mov
xchg
fmul
adc
jae
xlat
mov
add
test
inc
lock
inc
jp
mov
dec
xchg
lea
pop
mov
jmp
mov
int3
sub
pop
push
lods
das
adc
out
rcrb
outsb
mov
push
mov
jle
js
pop
adc
mov
xchg
jecxz
cltd
inc
pop
push
lcall
andb
dec
sbb
ret
pop
dec
movsb
pop
repnz
shlb
sub
mov
lret
lods
andb
sbb
add
loopne
inc
add
popa
fidivrs
mov
sbb
adcb
cmp
xor
pop
xchg
jg
cmp
test
xor
sub
rolb
movsl
cmpsl
bound
mov
or
icebp
rcrl
lock
test
lcall
jmp
imul
rcrb
mov
mov
push
pop
mov
fucom
cmpsb
aad
loope
inc
push
jmp
mov
outsl
mov
test
xchg
test
jg
iret
mov
negl
popa
out
cmp
add
dec
xor
add
fmuls
fimull
push
cli
dec
rsqrtps
addl
push
aad
fidivrl
testl
sub
sbb
mov
xor
rcll
cli
mov
jmp
daa
scas
push
pop
call
arpl
ret
repz
mov
cmp
inc
or
jnp
outsb
scas
in
decl
cmp
stos
inc
ss
popa
gs
mov
xchg
imul
scas
lea
xchg
xchg
cwtl
out
and
std
mov
pop
pushf
icebp
xor
movsl
mov
and
inc
pop
cli
sbb
pop
in
rcll
and
pop
add
adcl
jle
in
cmpsl
push
add
mov
sub
movsl
lea
jg
mov
pop
sbb
sbb
cwtl
aam
mov
ljmp
xor
data16
pop
adc
negb
add
in
sbb
adc
addb
leave
and
test
cli
stc
movsb
test
cmpsb
push
mov
xlat
scas
sbb
sub
sarl
mov
pushf
mov
inc
stos
and
xchg
adc
gs
addr16
or
jmp
daa
out
xor
xor
and
ret
cmp
pop
iret
popf
mov
sub
pop
mov
xorl
int3
dec
sub
addr16
dec
cli
xchg
mov
lcall
mov
stos
cli
xchg
sub
clc
outsl
sbbl
add
aas
int
aaa
out
shrb
icebp
sub
inc
xchg
push
popl
aas
fsubp
jbe
js
movsl
xchg
and
jp
jge
sbb
addr16
clc
cmpsl
mov
daa
mov
xchg
dec
mov
scas
inc
sub
lock
xor
lahf
aam
pop
daa
ret
or
and
jae
neg
xchg
mov
xor
imul
or
mov
adc
mov
sub
cmp
inc
pop
cmp
inc
or
adc
pop
inc
fwait
mov
repnz
cld
mov
mov
daa
or
jne
ja
xchg
fcoms
or
scas
mov
jle
lds
out
push
dec
xorb
mov
call
mov
fisubs
ja
aaa
jb
inc
divl
mov
shll
and
daa
lock
mov
mov
mov
cmp
clc
aam
mov
pop
or
and
mov
mov
xor
lods
mov
and
sbb
insl
xor
sbb
mov
mov
adc
mov
sbb
mov
shr
imul
sbb
fsubl
xchg
outsb
pop
inc
sbb
pushf
pusha
idivl
xchg
adc
mov
mov
inc
xchg
out
pop
imul
mov
test
inc
jp
mov
ds
push
sti
aad
insb
jl
inc
sbb
sub
push
mov
sub
mov
xorb
test
jge
clc
xor
stc
and
fisubs
loop
mov
or
ss
xchg
mov
fs
push
in
mov
push
mov
adc
fistps
sbb
jns
mov
adc
sub
jns
sti
push
sub
mov
xor
xlat
arpl
xchg
test
repz
bound
cmpsl
add
mov
mov
sbb
fwait
ret
xchg
into
arpl
xor
addr16
loope
int3
cltd
and
incl
push
cmpsb
xchg
add
je
call
fstps
into
iret
inc
call
inc
jp
add
sbb
in
test
and
aas
cmp
popa
add
adc
jnp
mov
xchg
lods
xchg
out
inc
ljmp
repz
enter
les
cmp
dec
rcl
push
out
push
lods
adcb
popa
adc
xchg
test
dec
aam
push
idiv
ss
pushf
daa
sbb
mov
call
icebp
xor
adc
mov
jae
adc
add
adc
clc
je
jae
mov
mov
out
out
ret
outsb
stc
lahf
lret
sub
xchg
sbb
adc
mov
xchg
sbb
xchg
jp
fistpll
scas
test
sbb
add
test
data16
mov
movsb
lds
add
jb
sub
enter
push
push
sub
bound
cld
sub
ja
mov
mov
call
xlat
sbb
push
in
dec
mov
ret
dec
pop
push
testl
arpl
add
fsubs
daa
push
or
stc
gs
bound
incb
xlat
repz
subb
mov
inc
shrb
loope
outsb
ljmp
dec
je
test
stos
stos
cmp
jge
add
shl
mulb
nop
lcall
mov
push
dec
cltd
inc
test
adc
ret
mov
mov
mov
sahf
iret
bound
add
rolb
mov
iret
test
mov
popa
aam
pop
jg
mov
xchg
lret
push
call
insl
test
push
mov
dec
stos
sub
add
pop
mov
jl
mov
cmp
or
push
push
ret
lock
xor
stos
aaa
cmp
sub
jl
jmp
fbld
scas
adc
pop
and
cmp
mov
cmc
cmp
and
outsb
sbb
dec
fildl
popa
cmp
popf
jmp
into
addr16
dec
push
stos
sub
jo
inc
fs
cmp
and
insb
add
das
pop
mov
sub
lahf
cmpsl
xchg
leave
fimull
dec
sbb
push
iret
arpl
and
xor
inc
loop
outsl
mov
fs
ss
loope
and
sets
lret
sbb
pop
in
xchg
fs
cmp
pop
sbb
pop
xchg
mov
out
dec
xor
push
jl
mov
cmp
test
repnz
push
inc
adc
fwait
stos
cmp
imul
or
je
dec
insl
add
test
js
loopne
mov
cmp
outsb
test
outsb
bound
pop
mov
inc
es
inc
addl
inc
sarb
mov
fsub
loope
mov
in
popf
lods
aaa
or
pop
jmp
clc
cli
mov
jns
mov
mov
pop
xor
sub
xlat
lods
push
fiaddl
fs
mov
or
adc
cwtl
scas
cmp
es
in
ljmp
scas
push
mov
push
sub
divb
mov
xor
mov
nop
cld
cmp
mov
ds
dec
push
pop
mov
add
sbb
push
xchg
dec
sub
or
push
lock
lcall
popa
lahf
sbb
shlb
adc
xchg
dec
or
pop
push
add
popf
sti
inc
scas
in
ret
stc
dec
cmp
mov
outsb
jno
inc
xor
jecxz
cmp
or
inc
cltd
lahf
shr
dec
mov
xchg
lcall
push
bound
sub
dec
lods
jecxz
sub
or
xchg
pop
out
sbb
mov
jl
push
mov
ret
mov
push
orl
push
loope
push
pop
int
add
inc
fistpl
push
jmp
scas
sbb
stc
xor
call
mov
shr
cmp
cld
xchg
bound
xor
pop
pushf
incb
or
loop
cmpl
jns
lods
sbb
mov
ds
sbb
pusha
lds
ds
out
cli
sti
ja
xchg
loop
in
lea
test
dec
hlt
add
inc
xchg
mov
icebp
lret
push
pop
sub
push
mov
orl
cmpsl
cmp
sub
sbb
dec
jb
mov
or
adc
aaa
sbbb
jne
lret
outsb
inc
inc
xor
pop
int3
push
push
xor
jge
add
jg
popf
inc
nop
mov
ljmp
adc
xchg
data16
cmp
jmp
lret
adcb
mov
push
sbb
jbe
dec
push
or
mov
neg
pop
fdiv
xchg
fcoml
rcrb
mov
cmp
mov
push
mov
fadds
pop
or
sub
daa
popf
mov
shr
insl
shlb
fwait
xor
mov
xchg
into
loop
mov
sub
jne
cmp
scas
test
je
jecxz
dec
movsb
repnz
cmpsl
je
jle
mov
fidivrs
add
enter
out
out
pop
dec
cltd
andl
shlb
or
int
add
icebp
mov
test
push
dec
dec
pop
adc
or
jp
popf
sahf
fldcw
pop
sahf
push
rcrl
xchg
fucomi
mov
pushf
sub
push
sbb
enter
jnp
inc
das
mov
enter
andl
xchg
insl
pop
xor
push
fistl
or
sbb
mov
xorb
sub
cli
dec
dec
adc
data16
xchg
loop
das
aas
jmp
scas
sub
dec
in
out
push
add
cld
and
mov
push
pop
and
inc
insb
xor
xchg
mov
shrb
out
adc
cltd
je
icebp
outsb
lahf
add
movsb
pop
sub
xor
stos
mov
xor
loopne
stos
mov
push
sbbb
jnp
stc
sahf
cmp
rolb
cmp
fsub
lahf
jno
mov
or
out
sbb
adc
jae
xchg
mov
add
rol
mov
add
stos
push
sbb
adc
das
inc
and
test
sub
inc
or
int3
ds
pop
xor
mov
jl
mov
lea
mov
or
outsl
cmp
stos
adc
push
call
popa
push
mov
scas
rcrl
push
es
in
sarl
xchg
mov
mov
outsb
rcl
outsb
mov
mov
imul
insb
xlat
inc
pop
pop
lcall
mov
lcall
fcoml
aaa
and
movsl
mov
adc
pop
sub
outsl
sbb
cmp
jo
dec
addb
and
adc
movsl
dec
mov
mov
mov
stos
fcoms
fcomp
push
iret
push
std
movsl
inc
jnp
imul
repnz
aas
xchg
mov
fidivrs
pop
jmp
inc
stos
inc
push
dec
lret
out
jo
sub
mov
in
pop
push
xor
and
inc
mov
mov
fs
orb
or
jnp
sub
hlt
jl
ds
lock
sub
negb
imul
popa
out
push
out
and
sub
les
pop
push
and
pop
push
pop
mov
js
das
sbb
test
cltd
scas
fildl
stos
loope
iret
push
lods
int
push
mov
into
popf
or
lds
aad
shr
test
dec
mov
sti
mov
pop
ss
in
xor
jb
out
mov
dec
lahf
int3
push
jmp
js
pop
xchg
xor
xchg
aaa
sub
aam
orb
mov
aaa
stos
inc
add
add
mov
mov
mov
in
sti
jecxz
out
mov
fld
aad
lods
outsl
inc
shll
add
in
cltd
ss
in
mov
jb
mov
int
lahf
ret
sbb
jle
stos
divl
das
insl
scas
shrl
inc
sbb
mov
je
cld
pop
outsl
cltd
mov
xchg
cmc
fists
fdivrs
cmp
bound
insb
or
push
jecxz
aaa
outsb
popa
mov
mov
testl
ljmp
fldcw
xchg
mov
xchg
dec
jmp
xchg
inc
leave
mov
shr
lods
insb
mov
mov
or
cltd
stos
popf
cltd
adc
out
and
mov
int3
dec
dec
test
inc
data16
inc
dec
mov
mov
mov
sbb
lea
mov
aaa
mov
inc
jmp
jno
sub
hlt
xchg
xor
mov
xlat
aad
fcompl
adc
pushf
pop
cmp
test
cs
les
bswap
dec
push
add
pop
mov
fsubl
out
filds
push
sbb
sub
leave
int
mov
mov
mov
mov
add
jp
into
lahf
das
imul
rolb
or
cmp
pushf
cmp
out
xor
jecxz
loop
sahf
adc
sub
xor
fisubrl
mov
mov
inc
inc
jnp
fidivrs
push
mov
push
inc
cmp
rcrl
jmp
inc
aas
pop
out
sbb
iret
loopne
sub
inc
xlat
push
dec
stc
iret
aad
loope
arpl
or
lock
testl
fcoml
fucomi
push
inc
inc
movl
inc
dec
out
jb
leave
call
xchg
cwtl
push
push
repz
call
repnz
out
pop
lods
test
mov
pop
sbbb
iret
cmp
out
lahf
jno
fsubrs
mov
loop
in
arpl
mov
out
add
rorl
repz
andl
add
sub
jbe
add
ret
jp
aam
into
and
fcoml
icebp
lcall
lea
outsb
out
cwtl
lock
push
or
movsl
sub
lods
pop
sbb
stc
rcr
xchg
iret
cmp
fmul
in
loopne
fwait
out
jmp
push
enter
dec
sahf
lock
fwait
adc
arpl
mov
aas
push
aam
jbe
xor
cmp
scas
jg
mov
inc
mov
or
repnz
subl
and
repz
and
xor
ret
adc
mov
inc
xor
pop
cmp
fiadds
fnstsw
pop
sub
inc
fsts
push
fs
loopne
pop
sbb
loope
push
push
pop
les
out
scas
mov
mov
arpl
or
fsubs
bsf
push
addl
ja
dec
dec
das
data16
xchg
movsl
xchg
sub
int3
and
fcoms
jmp
sahf
mov
sub
inc
inc
ljmp
cmp
daa
iret
sub
inc
xchg
cmp
lcall
xchg
mov
jge
mov
inc
jl
and
sub
pop
das
lcall
add
dec
scas
sub
outsl
sbb
hlt
lea
pop
mov
inc
lahf
pop
sbbl
dec
or
adc
cld
ret
sahf
cmc
fwait
negb
popa
cmp
fldt
fs
mov
loope
inc
and
pop
mov
ljmp
in
es
xchg
push
and
push
dec
movsl
sub
mov
xlat
std
jmp
shl
xor
testl
mov
push
mov
call
push
imul
jne
jl
mov
and
and
push
pop
xchg
mov
arpl
sbb
cmp
xor
fwait
pusha
push
cmpsb
xor
pop
jo
subb
je
inc
mov
fisttpll
lods
push
fst
or
or
adc
dec
adc
adc
test
xchg
rclb
xor
int3
push
and
mov
in
push
xor
push
test
sarl
into
push
leave
push
and
push
orl
popa
aaa
xchg
lock
or
cmc
les
mov
mov
cmp
les
push
lahf
enter
push
xor
sbb
sbb
std
xor
jo
sub
add
scas
lea
jb
sub
aas
xchg
cmpsb
stc
cmova
shrb
jbe
dec
xlat
jne
adc
sti
or
mov
mov
sbb
leave
hlt
lds
jbe
or
scas
mov
push
icebp
sbb
or
std
sub
lcall
pop
mov
xor
mov
jecxz
cmp
aas
pop
repz
insb
jbe
pushf
adc
test
mov
jno
lods
xor
inc
outsl
jnp
add
mov
add
mov
repz
push
mov
inc
insl
adc
shll
cmpsl
ret
or
stc
pop
mov
ds
push
int
push
into
std
xchg
xchg
das
jge
loop
cwtl
sti
add
fsubrl
mov
mov
pop
int3
push
out
loopne
fsubrs
iret
xchg
in
clc
dec
aad
hlt
and
xchg
mov
aam
pop
and
cmpsb
mov
inc
pop
ret
xchg
rorb
in
push
arpl
movsl
push
das
or
in
test
or
push
cld
pop
fisubrs
dec
in
iret
sbb
aas
mov
mov
pop
push
sarb
mov
repnz
insl
push
sbb
add
xor
in
pop
sbb
rorl
cmp
outsb
and
or
jae
xchg
shll
push
xor
cmp
jnp
dec
and
mov
in
jb
aaa
adc
cmp
test
les
add
addr16
mov
cwtl
cmpsb
je
sti
push
xor
push
jp
sbb
ss
mov
inc
push
sub
popl
popf
add
sarb
mov
sbb
add
ret
mov
xchg
or
push
mov
ja
xchg
pop
pop
int
in
adc
xor
in
mov
cli
stc
nop
pop
push
xor
cli
jmpw
sbb
mov
fstl
xchg
add
mov
mov
ret
addr16
icebp
mov
push
fisubrs
cmp
push
lahf
cmp
lea
jne
jle
sahf
negb
fnstenv
in
adcb
jmp
inc
outsl
dec
jno
push
jle
mov
fstl
or
xchg
repnz
fdiv
cmpsb
imul
jle
rcrl
mov
mov
and
inc
cmp
outsb
mov
testl
sub
xchg
lcall
negl
inc
mov
mov
xchg
and
dec
push
cmpsl
xchg
jg
cmp
ds
fimull
xor
pushl
in
jns
or
adc
inc
out
hlt
mov
mov
std
push
sbb
lea
ja
iret
inc
inc
push
sbb
xchg
inc
mov
dec
inc
dec
add
xchg
sub
mov
jnp
cmp
stos
aad
xor
and
aas
jl
fwait
insb
scas
lea
jmp
mov
gs
jge
jne
sub
dec
scas
push
repnz
mov
testb
dec
dec
in
movsl
sub
dec
lahf
adc
mov
test
lods
mov
mov
mov
negl
and
cmp
jbe
cmpsl
lahf
pop
push
stc
pop
filds
out
test
lea
inc
imul
dec
lahf
loope,pt
jle
dec
xchg
ret
neg
adc
pusha
mov
jbe
test
ja
jbe
cmpsl
jp
jecxz
and
xchg
ljmp
in
cli
movsl
sarl
rcl
or
cli
pop
xor
sar
adc
push
imul
xchg
jmp
test
pop
or
mov
jnp
shl
fs
fidivs
xchg
fidivrl
sahf
fbstp
scas
xchg
dec
jns
je
loopne
pop
aaa
mov
in
dec
in
push
rcr
int3
leave
sar
sbb
sub
fimuls
dec
out
rdtsc
nop
or
push
sub
loope
in
or
and
fmuls
xor
call
clc
lods
jno
mov
xor
je
or
popf
loopne
movb
dec
mov
mov
rorl
or
insl
out
fldenv
ja
cmovno
mov
push
dec
dec
xor
mov
or
xor
loope
mov
xorl
xlat
repnz
xchg
in
push
mov
shrl
mov
xchg
mov
mov
cwtl
push
inc
fldenv
subb
add
jne
call
cmc
roll
testb
jmp
mov
scas
jle
adc
sti
imul
jge
gs
jg
cli
xchg
mov
popa
sbb
testb
pushw
cli
adc
into
dec
dec
sub
movsb
push
aas
push
lret
inc
outsb
int3
flds
mov
cs
dec
int3
imul
xor
mov
push
rep
popf
lret
jge
pushf
cmp
add
mov
mov
mov
cli
ja
pop
cmc
in
lcall
add
lods
test
jecxz
inc
icebp
xchg
xor
fldpi
sbb
enter
scas
shll
xchg
in
xchg
pop
in
or
call
adc
hlt
inc
cmp
subb
inc
enter
stos
add
sbb
adc
cli
jecxz
aas
stos
dec
mov
pushf
push
cs
adc
sub
inc
lret
add
jnp
test
adc
incl
popf
jge
or
pusha
ret
push
rcl
jne
insb
pop
jecxz
xchg
pop
outsb
daa
idivl
aad
cwtl
inc
xor
pusha
out
lods
mov
aas
into
adc
push
xchg
and
push
sub
fsubrs
popf
inc
adc
iret
xchg
lock
push
sub
enter
enter
xor
xchg
and
loope
inc
sub
mov
sub
fwait
jo
mov
cmp
idivb
add
loope
repz
insb
cltd
lods
push
call
ret
inc
jl
shl
xchg
mov
or
jp
jnp
daa
daa
sbb
fcmove
xor
in
jg
lods
inc
fcomps
shll
pop
push
ds
and
xchg
pop
fcmovnu
test
lret
push
and
jb
sub
into
das
loope
clc
adc
test
sub
movsb
xor
jae
xor
scas
jmp
in
push
clc
or
sbb
and
dec
aaa
je
or
ss
mov
mov
xor
lds
sbb
inc
bound
inc
or
sbb
sbb
les
push
sbb
shr
outsb
adc
add
icebp
xchg
ficomps
mov
jmp
dec
and
gs
outsl
push
or
mov
outsb
xchg
ja
sbb
pop
push
adc
lods
pushf
arpl
push
push
inc
fbld
push
daa
ja
mov
xlat
fs
jecxz
inc
arpl
jg
ftst
xchg
rolb
xchg
mov
inc
nop
jnp
ret
out
stc
pop
xchg
repz
scas
inc
push
cmpsl
sarl
xchg
inc
push
repnz
xchg
popf
mov
scas
xchg
pop
in
xchg
mov
les
push
daa
mov
mov
rcll
add
cmpsl
sbb
xor
dec
out
or
mov
dec
testl
xor
mov
jns
test
inc
mov
cmp
scas
lcall
xor
mov
jno
repnz
jle
jle
jmp
sbb
out
jl
inc
push
sub
mov
in
sbb
push
leave
sub
or
ror
inc
jne
dec
lret
cmp
test
dec
call
jno
lea
pop
xchg
jb
fwait
mov
aas
call
test
test
dec
mov
jne
repnz
subl
push
pop
or
clc
mov
andb
fists
andb
dec
in
inc
dec
cmp
sahf
adc
jmp
hlt
mov
loopne
mov
mov
jmp
mov
fsubrl
add
dec
xchg
imul
mov
fsubrl
fs
repz
sbb
and
dec
xor
imul
jne
push
cs
push
test
stos
or
inc
jno
nop
dec
fsubrs
and
mov
ljmp
sbb
cmp
leave
adc
stos
sbb
sbb
sbb
jg
out
add
cmp
les
or
lea
pop
sub
fldl
mov
outsb
daa
cli
ds
stos
jecxz
xchg
and
ret
sbb
jp
pop
out
into
nop
fbstp
jg
dec
loop
and
lods
push
xor
inc
sbb
cmpsl
mov
pop
in
loop
mov
movsl
icebp
jmp
pop
stos
clc
inc
add
dec
lret
fdiv
in
nop
mov
add
int3
or
sub
jmp
xchg
push
or
sbb
jmp
sbb
mov
test
insb
aam
leave
lcall
xchg
mov
jno
push
xlat
sbb
mov
xor
sbb
sub
cmpsb
repnz
addb
cmpsb
add
jb
ja
hlt
aad
push
dec
fnstsw
push
jp
movhps
pushf
xchg
fimuls
out
js
mov
xor
insl
xchg
out
jl
cmpsb
xchg
cmpb
loop
and
lods
cli
sti
loop
pop
rorb
cmp
stos
scas
pusha
fldl
lret
cmp
bound
icebp
leave
lds
inc
dec
xchg
js
cmc
adc
mov
test
daa
push
in
dec
fcmovu
jno
in
cmp
ljmp
jbe
adc
xchg
xor
jl
inc
xor
cwtl
dec
les
sbb
or
jecxz
fwait
or
imul
jp
cmp
add
rclb
in
push
outsb
test
cmp
and
sub
stc
data16
inc
xchg
pop
dec
inc
lods
mull
pusha
and
fldl
test
scas
and
lock
adc
adc
movw
jae
dec
xor
fcomi
xor
and
lock
f2xm1
movsb
dec
jmp
cltd
xor
mov
loope
in
mov
jnp
pop
dec
enter
imul
add
insb
mov
aam
rcrl
sbb
xor
stc
or
int3
lret
cmp
or
data16
dec
jae
icebp
int
jo
lret
pushf
jl
xchg
mov
or
or
cmp
jnp
sbb
ret
test
arpl
fs
push
repz
sub
pop
shll
mov
stos
push
xor
adc
mov
scas
push
mov
int
repnz
and
sub
sbb
mov
add
xor
aas
jno
inc
std
out
cmp
jae
xor
fdivs
call
out
testl
into
ror
sahf
cmp
jno
add
lret
repnz
loopne
push
sub
test
mov
aaa
fistps
nop
xorl
nop
lods
fs
mov
mov
xchg
nop
stos
sub
je
and
pop
mov
and
xchg
mov
cli
stc
je
inc
sti
and
mov
ret
mov
jae
mov
mov
in
fidivs
fcompl
push
fistl
adc
nop
iret
mov
out
ljmp
test
add
mov
or
mov
sbb
lods
aas
cmpb
sub
ljmp
sub
mov
sbb
in
clc
stos
mov
gs
rolb
ljmp
push
jno
lahf
in
cmp
jge
loope
cli
and
popl
mov
inc
xor
and
cmpsb
cmp
mov
cmp
out
popf
sub
xchg
ds
mov
lock
or
jmp
pushf
insb
mov
adc
mov
cli
xchg
repnz
popa
xchg
in
pop
outsl
out
lahf
in
inc
add
sbb
jle
xor
lods
push
push
jne
daa
xchg
mov
call
jge
andl
cli
sub
sti
mov
test
mov
adc
loope
int
cmp
out
shlb
out
pop
inc
jae
pop
mov
divb
ds
lock
cs
or
mov
cmp
or
imul
shlb
adc
inc
enter
stc
sub
scas
mov
repz
sbb
add
aaa
leave
jbe
pop
push
inc
pop
outsl
jmp
mov
or
add
in
lea
into
jbe
fs
mov
into
fldt
pop
pushf
ja
mov
add
sahf
mov
push
sbbb
pop
pop
jbe
pop
idivb
test
push
jne
lret
jle
pop
push
imul
js
cmp
data16
loopne
mov
inc
add
adc
bound
outsb
inc
int
pop
data16
es
in
or
fistpll
lret
mov
mov
push
bound
dec
add
fistl
push
out
mov
ret
sub
mov
test
pusha
adc
pop
testb
out
inc
adc
add
loope
jne
subb
dec
cwtl
and
cmp
push
mov
inc
adc
jae
mov
add
xchg
out
xchg
scas
shrl
mov
fwait
inc
cs
sbb
xchg
test
pop
mov
adc
test
std
shlb
mov
rclb
or
adc
mov
mov
dec
mov
pushf
js
outsb
sub
mov
subb
or
add
fcomps
ss
ret
outsb
enter
mov
call
mov
xchg
dec
scas
sub
mov
rorb
push
idivl
adc
aas
fcomps
and
xchg
popf
in
pushf
push
int
pop
divb
mov
lods
jo
sti
xor
fxch
cli
push
lods
outsl
push
sahf
or
nop
stos
mov
fcmovnu
mov
pop
fsubs
into
xchg
mov
into
mov
dec
mov
int3
adc
je
sbb
es
xchg
jo
inc
outsb
in
faddl
js
loop
mov
inc
pop
stos
jnp
or
rcrb
scas
rorb
mov
or
add
bound
xor
inc
inc
cmp
mov
pop
sbb
mov
rcl
out
cmp
cmpsb
stc
stc
jbe
mov
mov
xchg
pop
dec
inc
in
mov
push
xchg
xchg
or
cs
jmp
xor
pop
decb
jle
xorb
jecxz
iret
mov
sar
pop
sub
and
lods
and
outsl
dec
xlat
test
aas
jne
pop
outsb
mov
es
ret
dec
jle,pn
and
in
cmp
lret
popa
mov
add
lods
xchg
jmp
jp
cmp
mov
loope
popa
insl
icebp
lahf
mov
add
fiadds
rol
jge
rclb
pop
cmpl
out
sbbb
popf
dec
pop
mov
gs
cmp
mov
mov
or
push
cmp
in
ljmp
add
push
iret
insl
scas
cwtl
lock
test
sti
pop
mov
xlat
inc
or
scas
mov
fwait
loop
jo
cld
jbe
int
cmc
xor
mov
jle
in
mov
inc
icebp
psrlw
aam
in
or
mov
jae
xchg
inc
jne
mov
jo
mov
mov
xchg
or
das
push
clc
scas
xsave
adc
mov
imul
dec
je
xor
lods
cmpsb
pop
fstpt
lods
xor
sahf
scas
mov
mov
mov
cmp
xor
jle
xor
mov
xchg
mov
mov
push
dec
movsl
cmp
dec
es
aad
test
outsb
cmc
neg
jle
adc
xchg
xchg
jo
les
cwtl
or
rcrb
sub
and
inc
fwait
adc
and
xchg
std
sub
sahf
jmp
fsubrl
pusha
jmp
jmp
jne
cmpsb
or
jno
fldcw
or
cvtps2pi
adc
pop
jg
in
popa
push
stos
aam
lahf
call
nop
mov
jmp
adc
sub
cwtl
shll
add
or
or
daa
test
mov
lret
ljmp
and
lds
outsw
mov
in
xor
hlt
fadds
jo
cmpsb
and
cmp
data16
mov
mov
lret
xchg
andb
xor
sub
repnz
jb
pushf
jge
test
push
mov
or
cmpsl
fwait
insl
inc
mov
int3
clc
repnz
mov
inc
sub
push
lcall
fwait
sbb
mov
fwait
in
mov
fisttpl
in
add
dec
add
mov
and
incb
push
cli
jl
sub
xchg
out
sub
shufps
push
adc
pop
inc
pusha
lahf
movsl
ss
xchg
mov
xlat
movsb
cld
outsl
adcl
iret
outsl
stc
xchg
mov
mov
xor
dec
push
mov
std
mov
aaa
pop
es
rorb
mov
scas
or
lret
ret
dec
loopne
ds
out
movsl
xor
add
mov
das
leave
mov
xor
cmpsb
mov
xchg
out
or
test
in
mov
and
jbe
movsb
int3
lahf
repz
inc
repz
sbb
inc
lahf
dec
es
addr16
jmp
mov
sub
mov
push
xchg
inc
mov
sbb
xor
mov
push
out
int3
stc
add
cmp
push
cmp
mov
cwtl
pop
sahf
outsl
add
je
das
mov
test
xchg
sub
mov
cmp
pop
loop
xchg
sahf
and
add
mov
inc
inc
mov
sbb
mov
pop
cmp
lods
rol
mov
bound
cwtl
cs
fsub
xor
arpl
aad
out
mov
jle
daa
jne
sarl
jbe
stc
pop
ret
jg
dec
fcmovnb
daa
sbb
dec
mov
sub
mov
lods
clc
sbb
sbb
ljmp
mov
or
lret
xchg
jecxz
insb
in
movsl
mov
pop
clc
push
adc
out
xchg
popf
xor
loop
pop
mov
adc
aam
fscale
cmp
mov
out
fiadds
cld
inc
and
push
push
mov
bound
mov
adc
imul
nop
je
dec
xchg
dec
xor
stos
push
fdiv
fstp
ret
sub
sub
das
mov
pop
ds
mov
push
in
ss
pop
shll
int
adc
dec
mov
imul
jne
jnp
jecxz
push
scas
push
aad
sub
sbb
aas
mov
jne
jge
or
stos
push
inc
and
fstps
mov
jg
aam
mov
mov
sub
scas
adc
repnz
ficomps
jmp
xchg
xor
cmc
sbb
cmpsb
and
fldt
out
jo
int
scas
sbb
cmp
mov
mov
push
push
frstor
xchg
and
pop
test
xor
sub
ja
stos
popa
adc
add
cwtl
in
shlb
sbb
xchg
test
mov
adc
sti
enter
fwait
xor
daa
inc
rolb
movb
jmp
xor
ret
mov
icebp
and
mulb
mov
js
mov
xchg
loopne
jg
cmp
cmp
sti
jmp
mov
fstp
xlat
mov
aam
mov
test
inc
cmc
stos
cmp
dec
cmp
addb
mov
aas
aam
insb
roll
sahf
pushf
adc
orb
mov
lret
incl
fwait
inc
stc
dec
cs
add
sub
out
jmp
mov
push
cwtl
sbb
insl
ja
imul
push
stc
cwtl
jecxz
add
ret
cmp
add
decl
mov
push
mov
jne
subl
outsb
in
jno
mov
cmp
sub
cmp
lahf
cwtl
add
test
and
adc
mov
ja
mov
bound
iret
fcoms
jno
cmp
jmp
sbb
insl
or
cli
jg
sbb
push
popa
mov
repz
mov
pop
pop
ljmp
fwait
mov
inc
cs
outsl
cli
int3
dec
out
mov
adc
sbb
mov
imul
jnp
mov
cld
outsb
jo
lcall
call
scas
pop
pop
sbb
xor
jns
pushf
cmpsl
iret
pop
and
lret
add
xor
xor
push
pop
sub
stos
subl
test
mov
and
std
jge
out
movsb
or
sbb
leave
xor
dec
lahf
mov
push
cli
mov
out
pop
sbb
mov
or
insl
cmp
mov
pop
int
jge
adc
inc
int
gs
pop
fs
jbe
loop
add
lcall
aam
nop
add
add
jle
xor
push
and
insb
loop
nop
andl
into
aaa
pushf
out
es
filds
sahf
or
jno
pop
xor
and
xchg
mov
std
mov
add
mov
cmp
imul
add
pop
mov
es
stc
adc
jmp
jp
mov
jo
dec
bts
fisubl
adc
insl
test
push
mov
aaa
in
mov
imul
fidivl
sub
add
xor
or
inc
add
mov
pop
jge
mov
jecxz
mov
push
add
xor
jno
sub
mov
out
and
movsl
out
mov
mov
out
scas
xchg
or
in
mov
push
lock
or
in
cmpsl
fisttps
mov
xor
js
sub
sub
mov
or
clc
inc
andl
jns
dec
mov
inc
cmpsl
loop
xchg
outsl
xchg
add
add
ja
fstps
add
into
jge
aas
ret
negb
ret
outsl
pop
shl
out
rcrl
mov
cmp
add
aam
jnp
dec
fildl
std
clc
idivb
out
daa
push
mov
mov
xor
push
jo
push
xor
add
mov
fwait
jle
sub
adcl
pusha
sub
jns
jae
pop
rclb
add
out
fwait
pushf
push
int3
scas
adc
mov
nop
cmp
add
std
pop
xor
lret
sbb
test
bound
or
dec
fcmovnu
popa
mov
sbb
xchg
and
xchg
xor
sbb
aad
addr16
sti
adc
mov
inc
int
aad
mov
xlat
bound
xor
sbb
mov
jl
lcall
call
pushf
jmp
sbbb
sub
movb
bound
das
jl
popf
inc
xor
loopne
mov
das
sbb
and
lcall
lea
and
int3
stc
push
scas
in
mov
cmp
test
insl
xchg
or
pusha
xor
notb
call
fdivs
cmp
int3
in
add
or
push
mov
pop
ja
xor
daa
out
imul
xchg
inc
dec
jns
mov
sub
xor
jne
adc
jbe
push
mov
push
fs
fisttpl
mov
xchg
cmpl
das
cmp
repnz
push
lods
test
loop
incb
into
mov
push
sub
cmp
repz
jmp
sbb
stos
sbb
inc
sub
mov
jb
insl
adcb
inc
lea
jl
iret
enter
pop
add
xor
roll
mov
int
mov
or
adc
lret
aaa
add
adc
sub
scas
or
mov
sahf
ret
xchg
clc
fidivs
mov
xchg
movsb
pop
loope
and
bound
mov
mov
ljmp
pop
push
ljmp
xchg
test
icebp
mov
push
mov
out
inc
fs
and
push
mov
jle
int3
mov
jbe
out
adcl
inc
lret
or
jns
cld
in
xor
filds
dec
cltd
push
xor
pop
imul
movsl
sub
mov
cmp
mov
loopne
and
fistpl
mov
cmp
lcall
clc
jg
adc
call
in
inc
jle
xchg
or
mov
xchg
lahf
cmp
push
nop
jbe
mov
or
inc
sar
pop
lret
call
cmc
pop
lock
xor
adc
int
xor
and
sarl
outsb
stos
arpl
jl
push
dec
movsb
data16
add
inc
sub
xchg
mov
jl
call
dec
std
push
sbb
out
lods
mov
rorl
nop
movsb
out
cltd
and
cmp
jp
cmp
adc
insl
nop
stc
mov
out
xchg
push
bound
inc
mov
pop
xchg
enter
adc
mov
les
adc
mov
and
adc
sti
xorb
scas
insb
subl
or
xchg
dec
scas
insl
clc
icebp
dec
sti
push
addr16
xor
dec
mov
arpl
add
jno
les
push
cmc
loopne
sarl
inc
dec
lea
cli
mov
es
fdecstp
dec
mov
ret
and
mov
mov
pop
scas
add
sub
popf
dec
jb
mov
scas
or
sbb
mov
out
lret
jno
scas
jno
mov
clc
mov
jne
adc
popa
es
test
mov
mov
add
mov
in
enter
jbe
dec
fdivrl
fildl
incb
adc
jo
pop
mov
dec
inc
sub
jbe
sbb
mov
sub
dec
insl
xchg
pop
paddd
xor
lds
stos
inc
stos
movl
test
addl
lret
add
out
push
adc
hlt
jmp
fldt
and
pop
xor
imul
sbb
mov
dec
lea
xchg
pushl
loope
or
popa
push
jno
lds
pop
xchg
loope
mov
dec
pop
gs
mov
outsl
iret
rcrb
imul
sahf
fsub
pop
and
adc
sub
cmpsb
inc
mov
vcvtps2dq
insb
mov
pop
test
pop
jo
ficoml
subl
fildll
bound
test
cld
loope
or
push
lods
shlb
aad
add
lds
jne
addb
ss
dec
test
je
mov
or
int3
in
inc
or
xchg
inc
gs
je
push
out
cwtl
inc
leave
inc
repnz
adc
movsl
push
push
mov
aas
dec
add
in
data16
ja
pop
pop
daa
cmp
rorl
call
xchg
loope
shr
nop
or
pop
push
fwait
xor
jno
sti
cmp
js
jecxz
sbb
pop
shl
jae
cmp
mov
push
cmc
pop
inc
popf
cmp
sub
fbstp
ret
adc
sub
stos
addr16
push
add
or
cmp
mov
mov
jae
adc
in
xlat
sbb
dec
out
push
out
xchg
test
fisubrs
mov
xchg
mov
push
cmp
lea
mov
and
adc
and
pop
add
jle
push
flds
es
cmp
std
ljmp
out
add
xchg
ds
scas
shlb
pusha
lea
stos
in
xchg
mov
push
into
and
stos
mov
jne
xchg
or
or
mov
jno
rol
pusha
jno
dec
xchg
and
outsl
adc
lds
out
mov
pop
in
fs
push
ss
push
fdivrp
repz
xchg
push
pop
out
je
jno
call
stc
sub
fidivrs
xlat
aas
mov
add
std
movsb
in
sub
jmp
das
jbe
inc
das
out
xor
xchg
std
cmp
add
jp
fs
fisubrl
inc
xchg
incl
cmpsl
test
repnz
sti
andl
and
jl
push
ret
wrmsr
arpl
mov
pop
or
icebp
popa
clc
or
out
stos
popa
add
ja
adc
in
dec
out
cmp
lea
dec
xchg
sahf
mov
fdecstp
rolb
cmc
pusha
mov
daa
mov
out
lcall
lock
testl
mov
sub
mov
cmp
call
mov
jbe
sbb
shlb
loopne
inc
sub
add
int
and
mov
dec
jb
ja,pt
imul
icebp
repnz
sub
jns
mov
sbb
adc
int3
in
sbb
loope
dec
inc
and
xchg
scas
pop
mov
stos
pusha
xlat
or
insl
mov
rolb
test
xor
shrl
imul
lock
add
test
stos
insl
in
dec
and
test
rorl
call
fnstenv
lock
lret
mov
lcall
and
call
fstps
add
call
sub
jnp
jmp
push
out
cwtl
adc
ret
xchg
cli
jmp
sub
pusha
pop
mov
test
mov
add
cmp
or
test
pop
jg
subl
sahf
rcrl
pushf
xor
popa
enter
outsl
mov
jp
sub
add
out
cld
out
inc
cmp
inc
sbb
jecxz
pop
repz
stc
sbb
lods
daa
aad
xor
ljmp
add
pop
mov
adc
mov
sub
fwait
pop
cltd
repnz
jmp
jg,pn
dec
in
aaa
push
xor
stc
scas
in
cmpsb
in
adc
imul
jle
dec
iret
jnp
sahf
xchg
mov
into
push
loop
addl
dec
and
add
adc
imul
jne
js
rolb
lods
jnp
sbb
inc
adc
insb
icebp
pop
arpl
and
lcall
lcall
adc
test
sub
xchg
rcll
adc
out
xchg
loope
xor
sbbl
ret
mov
adc
sub
inc
cmp
pop
ljmp
cmpsl
fdiv
fwait
mov
pop
enter
rcrb
das
js
xor
and
sbb
push
dec
out
sbb
movlps
fwait
mov
mov
add
dec
or
test
mov
call
outsb
addr16
dec
movsb
pop
scas
and
aam
out
lods
jmp
cld
push
adc
aam
incb
dec
icebp
les
in
mov
pop
fs
push
adc
outsb
push
mov
icebp
mov
sub
push
mov
sarb
pop
mov
pop
sbb
dec
in
adc
push
jl
out
jns
xchg
inc
pop
push
jae
rorl
dec
lods
mov
mov
test
push
and
lret
es
clc
sub
dec
mov
sbb
mov
lock
cmp
pop
cmp
jb
nop
sub
mov
cs
push
loop
sti
and
imul
insb
outsl
mov
in
dec
xchg
jae,pn
mov
pop
cmp
ja
dec
add
mov
fimull
out
call
in
push
outsl
adc
cmpsl
mov
cmp
call
sub
mov
push
dec
cmp
sbb
pop
add
jbe
aaa
outsb
adc
not
lods
outsb
test
push
call
addr16
outsl
lds
jb
inc
insl
mov
repz
xchg
scas
popf
lret
ficompl
sbb
sub
cwtl
and
jge
fwait
mov
dec
test
rcrl
bound
mov
xorl
loop
or
mov
dec
das
insb
mov
inc
pusha
clc
adc
lds
aam
push
push
nop
in
adc
mov
fbstp
nop
inc
pop
or
push
cwtl
dec
jg
push
and
jae
and
mov
add
adc
imul
cltd
pop
inc
scas
dec
adc
mov
push
or
push
mov
xchg
test
sbb
xor
icebp
adcb
sub
sbb
daa
popf
sbb
fistpl
dec
aaa
mov
out
sub
sub
jg
dec
stc
popf
daa
scas
lock
fistpl
dec
pop
xchg
mov
rep
std
pop
jb
in
movsb
adc
and
mov
cmpsb
aas
je
gs
jnp
and
aas
and
pusha
inc
daa
stos
outsb
aam
xchg
and
enter
and
pop
inc
daa
mov
int
je
cwtl
mov
inc
or
roll
imul
mov
lds
sar
clc
mov
sbb
xchg
lahf
fs
movsb
aaa
popl
call
je
cld
xchg
xor
xchg
lods
cmp
mov
cs
add
paddq
movsb
cwtl
movsl
out
test
jno
cmp
fs
add
leave
aaa
add
push
dec
mov
xchg
lds
or
or
push
in
icebp
pop
inc
jl
ficoml
aam
popf
iret
dec
cmp
dec
cmc
lock
add
scas
in
fcomps
mov
sbb
ljmp
cmpsl
and
xor
mov
pop
cmpsb
out
leave
sbb
test
ja
aad
inc
cmp
jo
adc
repz
jno
dec
mov
sub
sbb
cmc
sub
sbb
mov
jg
fistl
push
jp
sub
shrb
push
push
loopne
aad
je
icebp
mov
pop
shrl
add
jl
cwtl
sbb
mull
cmp
mov
push
aad
outsl
sbb
pushf
repz
insb
testb
pop
add
and
adc
daa
ljmp
adc
cmp
push
insl
hlt
testb
jle
bound
sarb
mov
xor
in
gs
and
lret
and
xor
push
subb
xchg
mov
fnsave
xchg
lock
icebp
test
pop
bound
or
imul
dec
fnstcw
insl
xchg
fs
push
lds
sbb
popf
nop
icebp
daa
cmc
data16
inc
xchg
mov
pop
jns
es
outsb
and
mov
fs
shl
sub
pop
les
or
idivl
out
sbb
pop
in
pop
repnz
xchg
adc
imul
adc
inc
lahf
push
sub
mov
cwtl
push
mov
enter
in
int3
rorb
in
loop
cmp
int
ja
push
clc
mov
scas
inc
aaa
test
dec
cmp
mov
cld
in
mov
or
je
pop
inc
jg
xor
push
push
cmp
adc
xchg
cli
popa
fstl
and
pop
int
xlat
adc
popa
out
mov
mov
inc
lcall
fisttpll
lds
or
je
and
lahf
lock
cld
sub
mov
out
int
std
stos
pop
std
mov
fnstenv
mov
enter
adc
push
insb
xchg
jp
mov
mov
rcrb
push
adc
pop
cs
insl
dec
int3
fsubs
xor
in
clc
cmc
mov
push
das
or
xchg
or
cmp
dec
inc
sub
xor
cld
pop
pop
push
cmp
adc
out
aas
mov
mov
stos
cli
inc
fisubs
jns
cwtl
mov
movb
shll
jb
cwtl
mov
push
popf
inc
les
push
adc
shll
shlb
stos
add
xor
cmp
ljmp
lea
add
push
aad
push
or
mov
adc
pop
scas
clc
aaa
scas
inc
mov
jno
sub
hlt
lret
mov
inc
lcall
jp
push
dec
cld
jbe
lds
sbb
iret
pop
or
shl
test
aad
fnsave
pop
imul
test
dec
in
jnp
inc
subps
sbb
cwtl
imul
sbb
out
aaa
inc
mov
or
push
inc
xchg
sub
mov
pop
and
fmull
sti
dec
cltd
push
dec
dec
not
gs
jo
xchg
lock
aad
cmp
and
sub
lods
jecxz
mov
jne
jle
loope
pop
jno
inc
js
xor
imul
push
lock
or
repz
sub
push
aad
jo
fldcw
xor
out
popa
stos
les
mov
sub
adc
sub
shlb
incb
mov
inc
pushf
addb
rcl
sub
shl
lcall
pop
mov
pop
cltd
ss
push
test
leave
jle
and
fidivrl
mov
cltd
cli
mov
mov
sub
test
add
into
out
shlb
dec
hlt
adc
hlt
cmp
xor
and
pop
into
pushf
push
sbb
stos
add
int3
push
inc
cmp
push
mov
iret
ss
adc
sub
xor
test
es
jb
addr16
test
rcrb
outsl
xor
incl
adc
faddp
lcall
mov
xchg
popf
jbe
push
and
cmp
xchg
adc
sarl
scas
sub
pop
jb
push
xchg
cmp
inc
shl
das
cld
mov
lea
dec
sub
pop
inc
sub
xchg
inc
sub
fwait
push
jg
std
push
mov
fwait
out
int
add
aad
and
sbb
inc
rolb
adc
pop
dec
xchg
ds
xlat
gs
out
call
test
data16
repnz
cmp
cmpsb
or
aas
mov
cwtl
fwait
jecxz
inc
and
idiv
in
jmp
and
xchg
out
dec
fnstsw
xchg
xor
jmp
add
cwtl
push
add
pop
and
mov
sub
mov
or
aaa
inc
mov
dec
dec
insl
and
add
lods
in
imul
in
pusha
mov
xchg
sbb
cmp
mov
in
dec
sub
mov
mov
lock
pop
insl
rolb
fbld
stos
popf
sub
cmp
xchg
movsl
jp
xchg
add
sub
jmp
inc
adc
fsubrl
pop
xchg
sbb
loope
mov
sti
in
add
pop
loope
call
push
cld
jo
sarb
lods
ror
mov
or
shlb
mov
lcall
ja
dec
or
into
fwait
jnp
push
dec
mov
push
jecxz
push
push
icebp
xchg
inc
push
and
cmpsb
and
mov
loopne
jnp
adc
in
xchg
stc
test
xor
outsb
adc
mov
arpl
sti
pop
pop
push
xsavec
mov
mov
push
cmpsb
cmpsb
xor
sub
cmp
pop
inc
dec
xor
es
leave
xor
cmc
imull
pop
shrb
push
lret
sub
inc
test
inc
push
stc
dec
ljmp
adc
shlb
jnp
sbb
and
popa
jg
clc
stos
jmp
xor
pop
addl
cmp
mov
rorl
fildl
pop
faddl
adc
lods
fdivp
push
iret
lret
xchg
stc
imul
mov
sarl
cmpsl
stos
out
mov
xchg
jbe
pop
pop
iret
dec
xchg
fstpl
ret
dec
pop
xchg
adc
jecxz
aaa
ret
or
fwait
xor
mov
push
pop
lea
pop
push
fisubrs
mov
or
int3
cmp
jg
scas
add
xchg
jb
cmpsb
cwtl
mov
add
dec
inc
adc
push
jne
outsl
mov
xor
outsb
lock
fisttpl
sbb
shlb
int3
testl
mov
jo
xchg
xchg
pusha
insl
cmp
popf
adc
clc
push
push
cmp
cmp
cli
sbb
addb
dec
cld
sub
test
mov
cmp
popa
leave
mov
negl
mov
data16
fmuls
cmp
pop
dec
stos
fucom
mov
adc
movsl
scas
xchg
pusha
xlat
mov
rcrb
aaa
push
push
push
sbbl
outsb
adc
in
mov
addr16
insb
push
in
pop
dec
dec
dec
pop
hlt
int3
or
pop
jno
mov
xor
push
movsl
bound
mov
gs
negl
jmp
out
inc
popa
jmp
jbe
mov
pusha
repz
jns
xchg
gs
stc
dec
add
inc
out
fldenv
rcrb
mov
sbb
jbe
or
inc
data16
shr
gs
pop
pop
or
enter
stos
lret
inc
test
xchg
int
bound
sub
dec
jmp
pop
pop
jae
mov
push
mov
push
cmp
cmp
cmpsb
sbb
push
shll
sub
flds
jmp
pop
jmp
add
xor
and
arpl
xchg
lret
mov
sbb
mov
imul
out
jb
jbe
ja
in
xchg
adc
shrb
or
data16
mov
dec
pop
pop
cmpsl
lahf
nopl
mov
cmp
adc
cmp
inc
push
mov
aaa
mov
mov
rorb
adc
add
fcompl
push
push
mov
cli
in
movsl
mov
test
into
or
and
ret
push
ret
imul
or
xor
in
cli
mov
adc
push
das
mov
jo
subb
cmpsl
pop
jl
lock
mov
repz
mov
shr
inc
dec
cltd
out
sbb
adc
nop
pop
ret
dec
push
mov
pop
subb
arpl
jmp
clc
hlt
cmp
shrl
sahf
stc
xchg
xchg
dec
insb
inc
imul
enter
icebp
mov
pop
add
adc
arpl
push
lock
cmp
jp
fildll
push
mov
sub
xor
push
sbb
push
and
decl
jne
cmp
mov
pop
gs
and
push
shl
jns
adc
and
mov
out
pop
jecxz
and
push
cltd
sbbl
lahf
inc
dec
lods
lods
mov
jbe
sub
sub
mov
divb
jmp
mov
aaa
es
mov
dec
shlb
inc
dec
incb
imul
addb
insb
mov
mov
fldt
fnstcw
push
pop
out
fs
call
aas
dec
xchg
sub
bound
cwtl
push
jb
add
sub
cmc
xchg
jl
out
out
inc
push
imul
pop
jne
notl
stos
dec
nop
iret
cmp
adc
pop
testl
shrl
push
jp
pop
xchg
dec
push
add
cmpsb
insl
jmp
in
mov
insl
adc
mov
scas
lds
and
and
xchg
adc
std
leave
add
jecxz
dec
push
fmulp
repnz
sub
add
arpl
cmp
or
sarb
pop
das
sub
xchg
sub
xchg
in
std
add
push
pop
sarb
inc
push
mov
push
hlt
mov
lea
adc
cmpsl
xor
mov
pop
xor
adc
mov
push
adc
pop
sbb
jg,pn
mov
out
push
pop
inc
push
out
pop
push
sbb
push
adc
popa
or
popa
mov
mov
rclb
lret
dec
insl
lds
lahf
ljmp
inc
les
jmp
ret
fldt
insb
and
gs
sbb
test
adc
cmp
mov
mov
and
cmp
movsl
cmp
ja
add
cmp
xchg
sarb
and
sub
inc
xchg
jae
mov
sti
mov
enter
add
ja
xchg
or
xchg
mov
test
push
dec
les
loopne
mov
std
lods
push
notl
inc
cmp
es
shlb
mov
mov
call
test
into
pop
xor
adc
pop
push
jb
and
mov
pusha
ljmp
xlat
stos
in
xor
mov
pop
mov
or
or
push
rolb
in
aaa
sahf
push
and
fisubs
xchg
jns
rol
push
inc
mov
jmp
stos
fsubs
mov
mov
push
int3
aam
xlat
mov
dec
sub
in
popa
shlb
popf
lock
or
mov
inc
shlb
fcmovnu
mov
cmp
mov
push
andl
xchg
dec
out
mov
push
sbb
sub
add
xlat
into
gs
dec
sbb
pop
movsl
dec
ret
inc
fnsave
test
sbb
jmp
sub
lcall
je
sub
loopne
popa
out
xlat
and
mov
or
mov
mov
push
ljmp
xchg
ret
popf
enter
xlat
cmp
inc
add
push
movsb
pop
pop
mov
cmpsl
mov
pop
sub
loop
add
mov
dec
push
mov
cli
jb
jmp
xchg
push
sub
pushf
ret
aad
push
inc
in
cmc
jno
inc
iret
sbb
or
pushf
mov
scas
addr16
fs
and
int3
mov
fsubrs
sub
addr16
push
mov
insl
jnp
leave
or
push
pop
mov
fldt
adc
cli
pop
pop
push
adc
push
lods
xchg
push
mov
mov
fwait
shl
mov
in
call
loope
scas
pop
lods
popf
mov
sti
adc
and
cli
bound
clc
dec
jne
push
push
push
hlt
mov
in
and
push
int
push
cmp
movsl
jmp
inc
mov
repz
push
cs
xchg
sub
and
insb
ret
adc
jnp
js
push
add
xchg
scas
cmp
inc
loopne
iret
ljmp
testl
popl
lods
negl
outsl
adc
xor
sti
dec
test
jne
adc
or
mov
imul
nop
cmp
fsubrl
or
rcll
jg
xchg
stos
lret
adc
dec
dec
int3
sub
mov
imul
notl
arpl
test
xchg
jbe
pop
jle
xchg
es
outsb
iret
ja
into
mov
xchg
mov
mov
repz
and
dec
pop
clc
sar
stos
dec
imulb
push
int3
jne
lds
pop
xchg
pushf
cmp
cld
sbb
jg
hlt
cmp
sbb
dec
and
pop
pmaddwd
mov
xor
shll
cmp
js
lgs
iret
mov
into
and
xchg
sbb
dec
jo
push
dec
les
daa
out
mov
icebp
or
mov
out
cmpsl
jg
push
fmul
repnz
ljmp
aas
and
push
push
stc
xchg
les
in
mov
or
push
xchg
mov
mov
fiadds
sub
out
inc
es
push
rcrb
inc
jecxz
in
xchg
dec
das
cmp
test
mov
orb
mov
pop
loop
mov
addr16
jl
or
push
mov
in
pushf
pop
je
fisubl
push
push
sub
mov
mov
outsb
jb
call
cmp
cli
sub
popf
into
dec
mov
adc
sahf
sahf
jno
sahf
mov
enter
pop
pushf
addr16
mov
lea
mov
pop
dec
adc
sbb
add
out
arpl
into
inc
push
adc
aas
xor
pop
dec
mov
stc
cmp
imul
sub
aas
iret
out
cvtdq2ps
jle
pop
aad
xchg
pop
dec
sbb
call
sub
into
inc
dec
push
addl
sbb
sti
mov
dec
push
into
mov
scas
rcl
cmp
push
sarb
lahf
andb
jne
mov
inc
mov
repnz
xchg
xchg
mov
in
aas
lret
push
push
mov
jmp
jmp
sbb
sbb
sahf
jge
sbb
push
das
mov
sub
and
sbb
sbb
sahf
mov
sbb
adcl
inc
xor
adc
or
xor
and
push
xor
cmpsb
push
roll
out
outsl
dec
sbb
out
gs
xlat
sub
sub
mov
mov
lret
out
cmpb
ljmp
shlb
or
jecxz
add
cmp
sbb
aad
and
cmpsl
shll
xor
mov
mov
mov
aam
fcomps
jl
fcoml
mov
mov
ret
test
and
adc
xchg
enter
repnz
mov
xlat
out
cli
lock
fidivl
push
jno
add
xchg
adcl
xchg
jo
pop
int
and
jns
xchg
cmc
ret
pop
jb
in
aad
fsubp
mov
push
jg
pop
imul
dec
or
sub
hlt
subl
addr16
or
mov
mov
adc
dec
bound
mov
mov
in
fistpll
push
add
lds
pop
dec
pop
dec
adc
push
outsb
sub
push
in
stos
cmp
jmp
jne
mov
push
orb
ret
pop
jo
leave
bound
cmc
pop
cwtl
jae
inc
or
mov
into
jo
das
nop
test
inc
orl
bound
les
adc
jmp
ljmp
cmp
cmpsb
xlat
mov
stc
test
nop
and
xchg
out
pop
sti
sbb
imul
cltd
outsb
pop
mov
lahf
pop
xor
add
or
and
sahf
mov
dec
mov
mov
cmpsl
popf
test
add
rorb
std
stc
xchg
in
outsl
dec
neg
stos
xchg
test
outsb
lods
xchg
mov
inc
imul
lods
icebp
repz
adc
lds
mov
mov
hlt
arpl
push
mov
lods
ljmp
pop
lds
mov
xor
xor
jns
xor
insb
xchg
out
or
mov
and
dec
and
mov
adc
push
nop
in
pop
cmpsl
dec
or
mov
cld
popf
pop
pop
out
hlt
xchg
sub
xchg
repnz
aad
loopne
es
sub
lea
or
jl
arpl
sbbl
iret
push
jns
xchg
mov
int3
cmp
mov
and
scas
push
push
xor
ret
data16
mov
ret
inc
sub
jno
and
xchg
fimull
pop
xor
rcr
push
insl
bound
fcomps
js
jecxz
sub
or
sbb
xchg
out
out
mov
jae
outsl
xchg
jg
mov
pop
repz
mov
xchg
les
dec
insb
lea
sub
inc
sub
lret
pop
addr16
cmpsl
and
fcoms
aaa
aad
ja
mov
aaa
mov
or
jg
pop
gs
into
hlt
mov
jno
inc
dec
mull
nop
repz
ret
pop
cmp
mov
dec
or
pop
outsl
mov
and
sbb
clc
add
shl
cwtl
dec
fisubrl
xor
adc
rclb
loope
mov
push
adc
mov
adc
or
dec
decl
mov
jns
cmpsl
jae
inc
fsubs
sbb
call
and
out
arpl
mov
outsl
push
cmc
mov
call
mov
push
in
sub
insb
mov
out
mov
das
cmp
inc
jecxz
adc
ljmp
mov
jbe
mov
mov
ret
mov
rcll
movsl
push
flds
scas
push
cmp
and
and
shrb
insb
inc
mov
movsl
test
cmp
sbb
sbb
ja
adc
dec
js
jne
lret
addb
loopne
ret
in
out
in
fnstsw
jg
inc
mov
push
sub
inc
mov
sbb
das
ret
xchg
outsb
push
add
cltd
pop
push
movsl
in
jbe
or
push
sbb
push
not
dec
pop
lcall
imul
and
pop
push
mov
and
push
sub
sub
sub
xor
push
mov
out
add
arpl
cli
or
mov
inc
sub
mov
lea
xchg
push
je
and
loope
jbe
fcomps
add
inc
pusha
into
sbb
mov
xchg
ficompl
mov
lret
sub
inc
mov
add
ljmp
xchg
cmc
sarb
mov
xlat
shrl
dec
ja
clc
js
add
xchg
insl
shlb
mov
fmulp
adc
mov
xchg
inc
repnz
fwait
xchg
shll
mov
xor
jns
bound
or
daa
lock
ret
andl
inc
pop
fmull
inc
sub
xor
xor
or
movb
std
stos
sarl
test
loopne
or
cs
adc
push
mov
cmp
stos
adc
mov
sbbl
sbb
popf
inc
sbb
or
ficompl
xor
or
jmp
jp
lods
int3
dec
aas
icebp
cltd
pop
repnz
popf
push
out
push
into
fmuls
xor
scas
imul
add
cmp
mov
imul
xchg
imul
out
inc
repnz
sbb
push
out
mov
cli
xor
sbb
adc
dec
lods
fcoml
ljmp
roll
sti
push
mov
js
pop
fisttps
or
xchg
cmpsl
fdivp
lods
xchg
push
movsb
pause
adc
arpl
pushf
push
insb
lcall
add
ss
mov
sbb
and
rcr
aad
push
rcll
jl
mov
sbb
inc
cli
into
sbb
and
lea
cld
test
out
jnp
push
fnstcw
es
xor
ss
mov
call
dec
fcmovbe
or
sbb
sbb
enter
mov
int3
jnp
mov
push
push
faddl
popl
lds
adc
sbb
mov
pop
fsts
add
cmpsl
fwait
add
xchg
inc
dec
flds
test
pop
scas
push
adc
cld
xchg
xchg
inc
test
push
add
in
add
in
xor
pusha
out
stc
cmpsl
xor
sarb
movsl
mov
fadds
popf
jo
jle
push
shlb
jmp
jbe
movsl
inc
out
pop
xor
and
sub
repnz
xlat
mov
out
xor
ss
xchg
adc
pop
rclb
andl
mov
scas
jp
mov
xor
inc
add
xchg
lock
addps
out
imul
fmul
js
xor
test
in
mov
adc
adcl
mov
adc
push
jne
loopne
mov
mov
pusha
lahf
and
pop
sub
fsubrl
insl
ss
mov
push
push
pop
mov
xchg
mov
cld
push
test
lret
stc
push
fmul
sbb
out
sti
mov
movd
popa
lahf
gs
arpl
pop
pop
int3
fdivrl
jp
repnz
mov
adc
jo
sub
jmp
mov
outsl
and
sub
mov
ja
ret
xchg
enter
cmp
mov
jb
negl
addr16
mov
xor
push
add
imul
xor
inc
movsb
jae
lret
sbb
mov
outsb
dec
jns
stos
adc
xor
incb
xor
loop
imul
lods
or
nop
bound
shlb
loop
and
popa
mov
push
fdivrs
mov
sbb
mov
add
cwtl
mov
invd
push
icebp
mov
gs
scas
cmpsl
fdivs
mov
cmp
or
in
test
cmpsl
adc
icebp
cmp
sub
push
loopne
mov
or
xchg
cmpsl
mov
lret
push
scas
jns
outsb
add
jg,pn
lret
add
xor
jmp
cmp
jmp
sub
mov
cmpsl
pop
iret
push
inc
in
adc
lret
sub
cmp
in
add
mov
je
lret
into
sbb
xor
jb
ret
std
pop
push
pop
ret
out
push
arpl
lods
jecxz
adc
sub
mulb
xchg
mov
call
xchg
inc
jge
rcrb
sbb
jp
ret
mov
mov
or
pop
cmpl
jge
shll
loope
aam
sbbl
rorl
adc
repnz
lcall
jne
test
notl
stos
mov
jae
call
jnp
sbb
outsb
fiaddl
enter
xor
cmpl
inc
hlt
cs
test
push
movsl
push
ja
bnd
push
rcl
push
inc
in
sbb
push
sub
cmp
test
jle
imul
xchg
pushf
andl
ret
add
pop
aas
adcl
jns
lret
pop
fs
lock
or
push
sti
test
mov
pop
pop
rcrl
adc
test
push
adc
js
dec
std
ss
les
aaa
iret
fsts
mov
push
aad
add
inc
inc
add
jbe
xor
insl
insl
pop
dec
jns
jmp
popf
sub
call
xchg
mov
and
aas
sahf
dec
push
stos
dec
lods
in
lret
xchg
ja
fists
loopne
out
cli
mov
cld
sbb
jns
repz
xchg
test
and
sub
sbb
mov
icebp
movsl
stc
leave
int
cli
xlat
mov
add
xor
sbb
mov
push
dec
cmp
jns
rcr
xor
jl
mov
jle
pop
adc
push
movsl
lods
sahf
aas
fnsave
in
push
xchg
outsb
pop
repz
jae
mov
imul
push
xchg
or
fsubrs
jb
imul
lea
pop
xor
repnz
cwtl
iret
cmp
ja
arpl
and
outsl
fnstsw
sbb
fs
int3
fwait
int3
sbb
outsb
out
dec
cli
inc
stos
add
shrl
dec
mov
movsb
pop
incl
push
pop
adc
dec
loopne
pop
add
fbld
mov
scas
jmp
mov
adc
fsubr
data16
sbb
decb
jne
jl
adc
or
dec
sub
jge
mov
push
aaa
jmp
add
xchg
inc
cmpsl
into
out
adc
dec
shll
mov
movsl
scas
mov
jae
adc
push
leave
dec
repz
cmp
ljmp
xor
dec
shlb
sbbb
gs
xchg
jle
sub
cmp
aad
popf
shll
xchg
mov
icebp
sarl
test
sub
aaa
test
lea
mov
loopne
in
ret
xor
ret
mov
add
cmp
iret
add
int
insb
rolb
jne
jl,pt
loope
ds
mov
test
popf
rol
dec
jp
aad
mov
shrb
push
inc
sti
dec
push
into
push
pop
cld
sub
jle
lea
mov
add
mov
mov
lret
je
shl
ss
sub
jl
in
adc
inc
mov
push
adc
rclb
or
mov
in
fwait
jns
mov
adc
int
push
andb
mov
int
int
mov
std
xlat
pop
and
sbb
movsl
insb
xchg
popf
out
cwtl
clc
aaa
mov
mov
in
aas
ljmp
bound
pop
les
dec
mov
mov
inc
aaa
mov
xchg
lea
int3
fwait
adcb
loop
xchg
ss
mov
mov
sub
xorl
test
and
popl
call
mov
push
mov
movsl
add
into
mov
mov
test
lds
in
push
in
cli
xor
jg
adc
xor
xor
fst
pop
je
repnz
inc
or
mov
xchg
xor
push
aad
jo
jge
in
add
orl
mov
mov
pop
insl
addb
popf
push
insl
cld
insl
leave
push
add
mov
push
lods
lock
push
cmp
lret
ret
cmp
push
xchg
xchg
ficoml
arpl
shl
push
or
inc
or
int
icebp
fmul
push
jbe
and
outsb
inc
inc
mov
roll
mov
cmpxchg
cltd
or
lcall
ret
mov
mov
lret
mov
sub
and
mov
pop
jo
xor
mov
cli
lcall
test
pop
lods
pop
icebp
add
push
mov
out
neg
loop
enter
inc
inc
or
fisubrs
not
clc
frstor
repz
outsb
sbb
loop
jne
push
in
subb
mov
lea
andb
fsubrl
addr16
mov
dec
jp
clc
xchg
mov
out
xor
push
out
lods
jecxz
mov
adc
pop
fbld
out
cmp
cmc
pop
add
incl
lret
into
movsb
lods
inc
inc
dec
out
aas
push
jb
push
in
pop
or
gs
mov
xchg
popa
add
arpl
cmpsb
ljmp
inc
jg
cs
xchg
scas
fcmovb
cwtl
repnz
or
jo
es
ds
inc
sbb
sub
mov
sbb
fwait
xor
hlt
in
or
or
enter
imul
shlb
ds
pushf
fmull
ljmp
subb
iret
sub
sbb
push
mov
xor
xor
xor
cmpl
add
aas
mov
and
mov
aaa
cwtl
lret
call
lret
jle
pushl
fistps
int3
out
or
sbb
dec
ss
mov
add
movsb
mov
dec
aas
mov
mov
repnz
sbb
ret
push
in
or
pop
and
cmp
shlb
lds
xchg
test
les
js
jle
add
jmp
inc
cmpsl
fisubrs
inc
addr16
fcompp
into
out
push
or
icebp
jge
lret
bnd
push
xchg
sub
sub
dec
push
insl
jg
mov
popa
stos
insl
std
push
mov
add
fdivp
push
shld
ficomps
int3
mov
xor
cmpsb
movsl
sub
int3
or
jge
add
std
inc
je
idivl
mov
jp
xchg
mov
mov
ljmp
and
cmp
fcmovnu
jp
xor
mov
popa
push
mov
icebp
adc
pop
test
out
dec
leave
and
sub
nop
mov
test
sub
pop
push
insl
mov
cwtl
test
xor
insl
inc
hlt
lods
nop
cmp
imul
std
incl
mov
ja
add
pop
cmp
cmp
aas
add
jo
mov
cli
push
cmp
xchg
call
xchg
sub
cs
rep
dec
popf
lgs
or
mov
out
mov
pushf
iret
hlt
adc
ret
lret
xor
faddl
cmpsl
sub
xchg
imull
hlt
rcl
xorb
scas
fimull
or
pop
jle
dec
cmp
cmpsb
or
inc
loop
mov
inc
hlt
aad
int
jne
mov
jmp
jne
outsb
and
sbb
sbb
add
push
daa
mov
divb
adc
mov
dec
mov
adc
push
xor
cltd
fs
dec
test
pusha
adc
cltd
mov
pop
mov
pop
fdivl
xor
inc
inc
mov
in
xchg
pop
push
idivl
ret
out
fidivrs
and
repz
pop
cwtl
stos
mov
lret
out
jae
scas
push
insb
test
mov
dec
jns
inc
xor
and
sub
out
pushf
in
jnp
pop
xor
sub
xchg
inc
xlat
inc
and
push
push
cvtdq2ps
test
jge
mov
fimuls
pushl
push
mov
sbb
xor
loopne
mov
js
fucomi
lock
jbe
and
mov
sti
scas
push
rorl
and
add
push
dec
lock
cmpsb
mov
mov
adc
or
adc
ja
inc
xchg
mov
lods
jmp
in
jg
and
mov
imul
xor
mov
andb
jne
inc
stc
cmp
ret
imul
ficomps
mov
in
ds
mov
les
imul
and
push
mov
and
inc
mov
dec
stos
jae
pop
cltd
cltd
jb
mov
mov
subb
je
add
repnz
popl
inc
mulb
or
dec
push
mov
sbb
inc
aad
nop
pop
bound
sub
in
mov
mov
mov
mov
jbe
sbb
push
inc
outsb
outsb
enter
pop
sbb
push
sbb
cltd
fstpl
mov
repnz
jno
mov
insb
loopne
lods
add
pop
lea
push
out
sbb
clc
add
cs
test
leave
ret
dec
xchg
mov
aam
lcall
rorb
jbe
fiadds
clc
xchg
jge
cmp
leave
xor
jno
add
scas
test
mov
ret
out
jbe
fwait
std
shl
cmpsb
gs
cmpsb
or
mov
pusha
in
adc
xchg
leave
fs
cmp
mov
mov
pushf
xor
push
stos
out
and
sbb
jne
pop
push
clc
negb
cli
mov
or
mov
daa
push
sbb
loope
mov
test
mov
enter
in
fadds
jae
push
adc
push
fiadds
out
insl
dec
dec
in
push
mov
sbb
loope
insl
lock
cmc
stos
xor
cmp
jne
sbb
iret
rorl
dec
sbb
test
cli
cltd
cmpsl
cs
mulb
jno
fs
cld
leave
pop
dec
pushf
ljmp
mov
mov
aam
loop
jl
dec
pop
enter
sbb
mov
out
push
mov
xor
mov
outsb
jecxz
pop
cmp
pop
jno
loope
shrl
mov
xor
lea
push
popf
jecxz
mov
sub
xchg
inc
mov
scas
mov
adc
fwait
dec
mov
sub
je
or
dec
pop
pop
addr16
mov
adc
jle
insl
mov
das
incl
or
xchg
lcall
stos
and
dec
or
lcall
xchg
and
inc
mov
gs
inc
fs
test
jae
daa
stos
add
pop
mov
icebp
push
clc
fnsave
xchg
sub
js
scas
addr16
xchg
mov
outsb
push
stos
mov
sbb
push
repz
jbe
mov
sub
imul
sbb
arpl
fsubs
fldcw
and
movsb
sbb
inc
adc
fnsave
ja
filds
adc
inc
loope
cwtl
add
cmpsl
pushf
sbbb
lods
lret
jno
push
jbe
rcrb
adc
and
sbb
idivl
aad
jp
clc
adc
mov
repz
lock
mov
arpl
jmp
mov
lret
cmp
insb
ljmp
in
mov
fmull
dec
inc
xor
lods
ja
mov
xlat
je
js
cmp
rorb
testl
mov
cli
test
mov
jnp
fldl2t
mov
notb
pop
imul
mov
out
lcall
js
add
mov
mov
cli
sub
iret
dec
out
push
fsubl
mov
mov
add
mov
and
lcall
adc
xor
cwtl
jno
adc
xor
xor
out
cli
and
fimuls
jno
jge
movsb
leave
ret
rorl
test
sub
mov
jmp
mov
cwtl
icebp
lds
jge
cmc
push
jecxz
cmp
mov
adcl
xlat
jbe
adc
inc
inc
sbb
pop
test
cmpsb
pop
xchg
add
adc
cmpsb
aaa
jmp
daa
flds
xlat
fildl
inc
movsl
or
aaa
sub
mov
movsl
adc
out
push
cmp
mov
inc
mov
aam
push
sub
pop
dec
sbb
cwtl
testl
sbb
lret
je
xor
fucom
lret
pop
pop
sub
dec
inc
in
push
loop
movsl
sub
sarl
arpl
sub
jp
or
mulb
out
mov
push
outsl
dec
cmc
aaa
mov
sub
inc
cmp
adc
cmp
scas
cmp
xchg
mov
lods
add
sub
pop
push
xchg
test
lods
inc
mov
rcpps
dec
push
or
xchg
cmp
mov
sub
xlat
lea
pop
stos
int3
cmp
mov
dec
mov
add
loope
sub
in
aad
mov
cmc
ja
jo
out
insl
mov
icebp
sbb
shr
data16
cltd
iret
out
mov
popa
mov
js
push
orl
cli
mov
and
pop
or
push
xchg
aam
mov
or
mov
mov
add
aad
scas
gs
xchg
push
pop
mov
test
and
jno
fs
xchg
into
ficompl
jmp
inc
lahf
sub
jp
icebp
leave
in
pop
sub
mov
sbb
push
lcall
loop
jmp
inc
loop
scas
dec
and
mov
inc
adc
cmpsb
sub
mov
xchg
mov
fs
jne
daa
sarb
aad
lods
mov
jno
fldenv
jbe
fstpt
idivl
aam
push
xchg
sti
mov
fdivrl
fdivrs
and
mov
sarl
inc
sub
sub
hlt
das
mov
out
int
or
mov
push
cli
inc
add
out
fidivrs
adc
cmp
stos
push
lea
and
cmp
and
fbld
inc
inc
pushf
mov
in
sub
push
scas
push
sarl
xorb
in
ret
pop
icebp
insb
test
out
scas
les
sbb
shrb
pop
in
push
sbb
push
sub
mov
cwtl
repz
lret
in
fcomip
fildll
mov
add
flds
movsb
sub
out
testb
loop
push
push
push
outsb
and
or
jmp
mov
rol
pop
jmp
outsl
insb
cmp
jmp
inc
in
xor
xlat
loopne
mov
outsl
movsl
pop
lret
addr16
add
xchg
jp
je
leave
dec
mov
xlat
lods
in
clc
hlt
aam
jmp
out
jecxz
xor
mov
pusha
enter
in
daa
mov
mov
add
scas
jbe
inc
dec
jmp
or
cltd
aam
jo
or
dec
popl
repnz
fcmovb
in
jb
sub
or
lret
jb
out
cltd
pop
idiv
fisttpl
int3
rorb
or
push
xlat
jmp
std
int
mov
inc
subl
xorb
mov
push
leave
jge
es
addb
xchg
pop
repnz
mov
ret
adc
adc
adc
enter
cmp
push
cmp
lcall
and
push
mov
mov
adc
xchg
jns
inc
cld
fwait
mov
adc
cmpb
jge
mov
push
nop
add
push
mov
incb
stc
mov
stos
ljmp
adc
or
or
fnstenv
adc
add
and
jo
xor
fdivrs
push
jo
mov
rclb
mov
push
shlb
fimuls
xlat
adc
add
mov
jo
lea
pop
xchg
sbb
fldl
mov
addr16
scas
popa
jno
jo
mov
std
leave
bound
push
xchg
xchg
mov
outsb
pop
jl
sbb
leave
sub
mov
dec
cli
into
mov
aas
jo
aad
jecxz
jne
cmp
jp
sub
div
rorl
push
ret
mov
add
in
ror
popf
add
inc
imul
and
or
pop
xchg
fs
push
sub
xor
pop
jns
mov
mov
lret
shlb
int3
cmp
mov
loopne
xor
lea
add
fildl
fisttps
cmp
inc
iret
xor
push
push
push
and
sbb
gs
mov
xchg
dec
inc
xor
dec
aam
inc
cs
popa
lret
mov
mov
mov
out
push
loopne
and
sbb
add
jg
sbb
or
mov
test
lahf
jmp
orb
jmp
dec
add
xchg
es
bound
mov
cmp
xchg
cmp
shll
addr16
shll
addr16
rcl
sub
or
dec
in
cwtl
xor
mov
sub
jl,pn
jns
ret
jbe
cs
data16
inc
xchg
sub
jecxz
int3
mov
inc
popl
mov
mov
test
ljmp
sbb
cmpsb
les
fbstp
xchg
cs
loopne
pop
push
jne
mov
xchg
dec
loope
enter
sub
jns
pushf
imul
xor
add
sbb
in
inc
push
adc
or
xchg
sbb
mov
test
mov
jo
jne
ja
lods
out
mov
decl
sbb
addr16
jno
jae
dec
xchg
or
addr16
in
stos
cmp
icebp
dec
subb
popa
mull
lret
mov
pop
xchg
stos
rorb
loopne
pusha
sahf
lods
pop
nop
loopne
in
test
adc
fcompl
pop
adc
into
adc
xchg
out
mov
push
scas
pop
dec
cld
jecxz
and
rcrl
sub
bound
pop
repnz
lcall
std
hlt
mov
imul
imulb
ss
or
add
pop
in
sub
fldl
dec
in
loop
cmp
mov
pop
fucomi
pop
mov
mov
add
inc
mov
xorl
dec
mov
pop
cmp
jns
and
daa
fnstenv
lods
add
sub
mov
das
pop
xor
orb
xchg
jge
insb
outsl
inc
cmp
cmc
push
mov
lcall
mov
jle
in
je
push
sti
add
jge
bound
jmp
mov
pop
fs
aam
aam
xchg
int
in
mov
add
inc
movsb
movsb
sahf
xchg
pop
clc
cmp
pop
jmp
scas
xchg
adc
xor
or
adcb
sbb
or
jb
xchg
xchg
shll
jae,pn
loopne
out
xor
mov
aam
dec
fidivrs
xchg
shlb
loopne
xchg
divl
inc
ljmp
fwait
jo
mov
sbb
push
es
cmp
pop
ret
mov
push
push
ret
mov
test
arpl
iret
mov
cld
cwtl
insl
inc
test
aam
lcall
cld
sub
xchg
ss
out
sub
dec
cld
lcall
cmpsl
mov
dec
jmp
xlat
push
fs
bound
mov
stc
cwtl
ds
mov
mov
or
dec
dec
rclb
jo
adc
or
or
mov
add
inc
dec
xor
je
in
dec
push
mov
add
js
pop
iret
lret
daa
xchg
scas
xchg
int
mov
popf
mov
push
cli
push
stos
rolb
hlt
cmp
inc
insb
lret
ret
cmpsb
cmp
fwait
add
mov
clc
mov
ja
addr16
sbb
xchg
xlat
out
or
and
enter
lea
ljmp
sbb
out
cmpb
pop
loopne
inc
movsl
faddp
movsl
cli
mov
mov
outsb
outsl
mov
cmp
add
push
mov
lret
mov
adc
bt
fsubl
scas
fiadds
sarl
mov
outsl
cli
test
add
mov
dec
shll
lret
jg
pushf
sahf
xchg
mov
inc
mov
cmp
dec
cmp
pop
std
mov
rcr
pop
jp
or
sub
cmp
lea
decb
negl
scas
scas
dec
in
mov
mov
mov
test
test
push
xor
sub
dec
incl
fs
leave
in
lret
enter
ret
out
fdivs
cmpsb
fimuls
xchg
inc
inc
cld
test
adc
pop
jno
daa
mov
mov
jp
cwtl
imulb
xchg
xadd
cs
lock
mov
push
andb
cltd
in
in
pop
inc
into
frstpm(287
idiv
pop
popf
inc
test
cmp
daa
mov
add
dec
imul
mov
loope
mov
js
popf
loop
mov
pop
icebp
imul
ret
inc
hlt
jae
and
dec
cmp
mov
cwtl
in
pop
out
out
testl
pop
cmp
mov
popa
sbb
mov
xor
xor
fs
mov
or
aas
cs
clc
out
fcmovu
repz
push
mov
lods
lret
and
cwtl
pop
cmpb
xchg
cwtl
pop
icebp
loope
movsl
cmpsb
push
in
fildll
loopne
test
lods
mov
mov
xor
xlat
cmpsl
scas
cld
jae
loop
test
push
mov
lret
sub
and
cmp
fs
sbb
or
xchg
fdivrs
in
fwait
pop
adc
mov
sbb
imul
lret
and
sbb
rcrl
out
aaa
popf
or
shlb
test
int3
fcomp
pop
shll
dec
pop
jno
push
xchg
xchg
cli
add
pop
mov
fwait
inc
iret
jle
aaa
mov
dec
iret
jp
scas
jo
jle
inc
sub
lock
mov
and
movsl
decl
rorb
push
adc
jns
stos
sbb
adcb
adc
and
stos
jg
sbb
cmc
mov
fidivs
inc
stos
add
push
ss
int
push
loopne
dec
dec
jecxz
xor
js
xchg
gs
out
cmp
mov
ja
jns
dec
into
cmp
out
sub
data16
push
out
popf
pop
pop
push
adc
cmpsb
pop
les
jmp
into
mov
dec
imulb
jg
stos
aad
xorl
inc
lret
mov
mov
add
fdivrs
xor
and
sbb
lahf
mov
mov
xor
jmp
scas
ds
in
cld
jle
repnz
shlb
mov
mov
aad
cmpsb
sbb
mov
add
repz
lods
or
ret
push
xchg
cmpsl
int3
lahf
pusha
sti
push
daa
or
popa
std
pop
loopne
adc
push
repz
mov
pop
mov
jg,pt
adc
jle
mov
cmpsb
dec
add
ret
sbb
cld
push
dec
mov
xchg
ds
jnp
push
mov
mov
sbb
pop
imul
mov
mov
mov
sub
pushf
mov
cmc
mov
mov
xor
or
inc
adc
pop
and
mov
mov
ds
daa
outsb
jo
jecxz
sub
xchg
lcall
fs
sti
test
jp
cmpsb
adc
xor
mov
insl
stc
sbb
lods
aaa
cmp
dec
nop
cltd
loope
divl
push
push
adc
loop
es
cmp
aam
sti
sti
out
arpl
push
push
clc
ret
sub
notl
divl
mov
insl
push
sub
and
fucomi
out
clc
and
addr16
shrl
adc
sbb
mov
loop
push
sar
jb
repz
ss
push
bound
sub
add
add
mov
jp
movb
mov
add
bswap
pop
jmp
pushf
ss
jnp
mov
pop
xor
push
pop
call
out
dec
pop
das
xchg
addr16
aaa
xorb
int
test
jg
mov
std
testl
cmc
enter
add
roll
xchg
push
es
mulb
ja
jb
sbb
mov
cmp
test
lods
jae
push
xchg
xor
sub
add
dec
pop
lods
test
call
fsubr
push
sub
pop
cltd
test
scas
push
in
or
pop
adc
or
cli
sbbl
mov
clc
push
mov
in
and
inc
aaa
lcall
std
pop
xchg
or
in
scas
testb
je
gs
jns
popf
xor
in
jp
xchg
test
mov
popf
pusha
push
adc
std
mov
mov
sbb
out
shl
cmp
jno
nop
jb
insl
rorl
in
ret
lcall
cld
ds
adc
shrl
push
fildll
loope
movsl
or
mov
gs
aam
lods
pop
mov
jecxz
mov
mov
cmp
mov
xchg
loopne
testl
add
push
adc
scas
jne
shlb
les
pusha
insb
ret
push
rcl
push
loope
dec
mov
lds
iret
push
xchg
jbe
add
mov
cwtl
xor
add
mov
mov
pop
and
add
test
push
leave
les
pop
daa
daa
stos
ss
push
add
pop
cmpsb
or
ja
sub
movsl
popl
movsb
xor
mov
add
frstor
push
cwtl
jle
cmpsb
xchg
inc
adc
add
adc
test
lock
add
adc
addr16
pop
or
popa
rol
or
icebp
xchg
scas
sub
lods
push
xor
and
mov
in
xchg
pop
lcall
pop
push
sbb
inc
dec
or
xor
jge
jl
push
fisubrs
and
push
add
int3
cli
mov
pop
mov
xorl
out
cmp
rclb
adc
xchg
jno
in
inc
cmc
add
ljmp
js
and
js
or
dec
xchg
pop
push
and
addr16
sbb
insl
xor
mov
aad
sub
dec
sub
pop
push
out
sti
leave
and
call
jb
dec
inc
jae
daa
je
lock
call
xchg
das
pushl
cmp
mov
pusha
mov
aam
clc
loop
and
sbb
or
push
jge
mov
movsb
bound
imul
cmp
fwait
out
loope
call
or
add
sub
add
es
lea
test
out
xlat
mov
ror
cmp
jmp
scas
sub
es
sub
and
out
push
into
idiv
icebp
add
mov
cli
mov
pop
out
out
bound
jns
lcall
jns
sbb
cmp
aam
int3
mov
cmpsb
cmp
jnp
mov
sub
mov
rcll
imul
xlat
cmp
sub
push
loop
pop
cmp
cmpsl
rorl
mov
shrl
mov
xchg
adc
lret
ds
lods
jns
lods
xlat
icebp
sbb
or
ja
fstps
cmc
mov
shlb
cwtl
inc
sub
mov
es
mov
push
dec
sti
push
cmpsl
cld
xchg
in
sbb
aas
out
pop
inc
mov
mov
test
jb
gs
lock
mov
and
pop
sbb
jo
push
push
sub
pop
xlat
jbe
ds
xor
cmp
add
inc
dec
pop
lcall
outsl
xchg
test
sub
shlb
jle
in
push
arpl
mov
lret
sub
roll
sbb
out
pop
lcall
cmc
test
fildl
out
xlat
and
add
jg
cwtl
mov
jnp
or
fdivr
test
and
arpl
and
mov
xchg
jecxz
adc
ret
sbb
mov
repnz
hlt
lret
inc
pop
subb
icebp
dec
mov
in
in
inc
ficoms
in
test
imul
mov
scas
test
lods
std
nop
or
dec
rclb
xor
or
sbb
xor
test
ljmp
fmull
imul
scas
xchg
frstor
jge
dec
mov
idivb
fwait
and
inc
sub
repz
in
cmp
pop
in
inc
push
pop
inc
pushl
mov
jae
xor
or
outsb
adc
scas
maskmovq
testl
cli
out
jle
jge
mov
aad
es
ds
outsl
mov
jae
xor
out
pop
ljmp
mov
and
push
testb
push
addl
and
inc
jne
push
push
add
jge
jmp
rcr
push
ret
sti
inc
jmp
scas
push
dec
dec
pop
or
arpl
leave
mov
mov
push
xchg
mov
cmp
xor
push
mov
add
cli
icebp
stos
push
rclb
scas
adc
push
loopne
push
imul
push
inc
popf
aam
fwait
dec
lods
pop
jae
insl
mov
lea
fs
inc
or
and
test
in
fldcw
push
adc
jl
lcall
mov
pop
fs
arpl
inc
fdivs
push
cmp
out
ret
jmp
sbb
sub
clc
ss
stos
cmp
testb
dec
scas
out
or
neg
into
push
scas
jns
movsl
push
andb
push
sbb
arpl
mov
cs
push
gs
cmpsb
dec
movsb
in
push
lock
addr16
test
jb
xchg
imul
inc
mov
jno
mov
sbb
add
into
je
imul
and
xchg
mulb
sbb
notl
mov
popf
jnp
popf
inc
xchg
push
push
enter
imul
xor
pop
cld
mov
lret
stos
jge
mov
ljmp
dec
xchg
dec
mov
sbb
pusha
pop
scas
mov
out
jne
outsb
cwtl
shll
push
sub
xchg
lods
sbb
sbb
jnp
jl
pop
aam
dec
movsb
out
movsl
fcom
push
out
pop
rcpps
cmp
out
jle
sbbl
in
shll
movsl
ret
int
rolb
out
cmp
popf
push
arpl
inc
mov
movsb
pop
lea
xlat
jecxz
popa
and
mov
mov
fldt
aaa
xorl
pop
pop
cld
mov
inc
jecxz
sub
inc
pop
push
cmp
mov
int3
xchg
aam
lea
or
xchg
xchg
stos
jo
sti
push
pop
or
push
adc
or
sub
nop
inc
sbb
jnp
outsb
sub
sbb
scas
out
push
cld
lods
sti
insl
xchg
mov
imul
adc
mov
sbb
jnp
in
cltd
push
and
dec
pop
es
out
cld
movsl
mov
xchg
movsl
mov
bound
dec
sbb
aaa
dec
in
into
xor
jg
mov
in
imul
subb
mov
ss
mov
jns
enter
aam
mov
push
aaa
aam
push
jge
and
cmp
pop
or
sub
dec
pop
add
imul
pusha
sbb
imul
fcompl
clc
push
cmp
popf
clc
push
xor
pop
push
stc
pop
jae
and
dec
hlt
jne
ds
mov
mov
imul
ss
mov
pop
movsl
push
cmp
mov
shl
inc
in
xchg
inc
cs
insl
test
push
mov
das
mov
sbbb
jmp
pushf
mov
dec
jno
mov
push
mov
sub
cmc
and
aas
pop
cmp
xchg
mov
shrl
adc
inc
push
and
xor
mov
cmp
sbb
pop
or
mov
mov
xlat
inc
mov
fcmovnb
xchg
and
fcom
or
xchg
mov
mov
sahf
lret
negl
xor
add
push
lea
int
pop
ja
shll
jle
inc
jle
xchg
push
add
xchg
out
push
lds
not
or
lret
testl
pusha
incb
pop
pop
or
in
xchg
stc
cli
inc
fidivs
and
insb
adc
outsb
es
sub
in
insl
cli
inc
mov
hlt
push
sub
cmp
xor
mov
lea
out
jns
rolb
sbb
jge
push
pop
data16
shrl
sub
inc
rcll
cli
or
mov
cmp
xlat
xchg
shll
or
lods
lret
movl
and
lock
mov
movsl
nop
xchg
roll
or
punpcklwd
dec
jbe
cli
addr16
and
notl
out
mov
xor
dec
xlat
in
mov
call
xchg
fidivl
xchg
xor
mov
ds
pop
fld
arpl
clc
and
mov
les
sbb
iret
shlb
insl
out
insb
into
push
mov
jae
push
call
sub
lea
sahf
lret
mov
adc
cmp
inc
lods
pop
into
push
addr16
in
cmp
mov
clc
push
jmp
insb
mov
stc
add
iret
gs
mov
std
and
out
insl
jne
adc
pop
sbb
jp
dec
sbb
ret
lret
icebp
push
mov
stos
ja
inc
pop
aaa
mov
cmp
mov
into
mov
or
mov
push
shr
scas
mov
adc
push
add
aam
or
repz
add
stc
and
dec
arpl
test
pusha
adc
jne
mov
or
mov
jnp
add
sub
pop
xchg
mov
fnsave
jmp
sub
test
mov
andl
lret
fldcw
and
popa
cwtl
or
dec
dec
xchg
push
adc
dec
xchg
and
in
xor
out
sub
push
bound
or
popf
jp
add
cltd
das
mov
in
stos
sbb
and
pop
xchg
addl
mov
loop
mov
pop
mov
add
test
lods
les
fstl
test
pop
adc
flds
push
sbb
cs
push
xchg
xor
sub
mov
mov
pop
lods
movsb
add
dec
and
ss
das
jne
negb
mov
popa
mov
ljmp
mov
aaa
xchg
daa
cwtl
push
movsl
push
stc
sbb
fcmovu
xlat
addl
shl
add
shlb
push
xchg
fldt
das
xchg
xchg
jp
add
push
dec
aaa
int
mov
mov
ljmp
cld
pop
loop
fidivrl
fidivs
sahf
ljmp
mov
or
pop
push
test
dec
dec
xchg
or
mov
xlat
movsb
jge
mov
pop
hlt
jae
and
in
lods
imul
jb
popa
outsb
ljmp
lret
ljmp
add
or
scas
mov
sub
jl
push
jnp
or
and
pop
popf
int
push
sub
push
insb
sahf
int
pop
ds
arpl
popa
inc
xlat
lods
adc
cmp
iret
dec
xchg
mov
inc
jns
inc
jge
or
adcl
push
xor
lods
push
scas
sbb
sbb
mov
imul
ja
mov
addl
lcall
add
enter
sub
xchg
sbb
popf
inc
loope
out
movsl
dec
sbb
out
fisubrs
adc
sub
cmp
sti
sbb
or
push
add
cmp
hlt
aam
rclb
daa
aas
inc
aaa
fmul
mov
sbb
mov
rol
jnp
fiaddl
in
xchg
into
inc
into
push
outsb
je
fdivl
ja
mov
inc
xchg
or
dec
add
shrb
jge
xor
pop
repnz
push
or
sub
negb
les
sub
inc
addl
inc
fcompl
add
cwtl
inc
int3
mov
shlb
cmp
fdivs
lock
je
cld
or
loop
enter
xor
sub
mov
fptan
aam
push
imulb
jge
adc
dec
in
add
ss
iret
jae
mov
inc
sub
faddp
fmull
repz
lcall
cmp
aam
jno
and
adc
popa
sbb
lcall
daa
add
inc
ja
shl
adc
add
xchg
cltd
xor
dec
add
pop
adc
mov
int3
insb
cld
push
pop
adc
idivb
push
mov
push
pop
ror
and
mov
jae
iret
adc
out
sbb
mov
in
shl
aas
hlt
mov
push
mov
mov
in
add
js
sub
sub
leave
add
push
or
std
out
enter
icebp
dec
lds
adc
push
shll
xchg
push
orb
divb
mov
fsubrl
cmp
cmp
popa
adc
xor
fists
lret
popa
xchg
xchg
adc
insl
or
sbb
hlt
xor
sbbl
xchg
or
dec
dec
pop
jp
pop
fistpll
incb
sub
dec
push
lods
dec
pop
stos
mov
jno
mov
jo
rcrb
inc
arpl
test
nop
adc
sub
or
adc
popf
and
lds
cmp
jle,pn
xchg
test
xchg
negb
pusha
pop
movb
mov
jnp
or
and
fdivl
idiv
mov
hlt
rcrb
in
sbb
leave
pusha
test
aam
push
sbb
cwtl
icebp
lret
dec
xor
es
sub
call
pushf
call
jle
jb
addr16
stos
outsb
cmp
push
retw
cli
popa
int3
jb
clc
sub
sti
push
sti
popf
add
dec
add
push
inc
mov
rcl
repnz
pusha
push
dec
xchg
mov
lcall
inc
mov
mov
cli
xchg
mov
sub
aad
xor
mull
mov
pop
dec
jge
int3
cmpsl
dec
test
push
push
std
hlt
notb
mov
shr
push
jg
mov
loope
fdiv
mov
icebp
mov
repnz
add
pop
lret
fstps
es
dec
pusha
push
ret
dec
popf
push
frstor
and
and
adc
add
sub
leave
imul
les
xor
sub
out
cmc
subl
sarl
sub
testl
mov
cmpsb
mov
push
xorl
mov
jle
pop
pop
shr
mov
adc
cmpsb
pop
adc
or
push
cmpsb
pop
arpl
rolb
jo
inc
and
cmpsb
cmc
test
out
lea
cmpsl
mull
push
scas
dec
cmp
mov
sbb
clc
fnstsw
std
pop
jnp
cli
stc
aas
push
adc
out
pop
mov
sub
adc
add
cmp
pop
cs
xor
je
dec
in
inc
mov
push
xor
hlt
test
cmpsl
les
ret
mov
sub
dec
jge
xchg
push
stc
aad
pop
adc
test
mov
xor
jbe
jmp
mov
ret
xchg
inc
xor
das
data16
dec
into
dec
xchg
pusha
rorb
push
jmp
pop
adc
cmc
das
in
repnz
push
mov
cmp
push
call
adc
dec
pusha
jmp
cmpsb
xlat
pop
movsl
push
mov
out
jp
jp
mov
sub
shlb
sub
push
into
jmp
adc
in
push
dec
and
sub
int3
mov
xchg
lods
imul
ficomps
or
sbb
xchg
sarl
cmp
ds
cs
leave
xchg
add
and
outsb
pop
mov
sbb
pop
loop
dec
add
dec
inc
mov
dec
jmp
imul
pop
ja
push
fnsave
into
xchg
rcr
call
roll
outsl
inc
in
xor
mov
movsl
or
and
adc
mov
add
pop
jne
in
mov
sub
xchg
in
lret
dec
mov
or
call
lods
mov
dec
addr16
dec
cmc
push
add
fs
jmp
enter
add
or
xchg
data16
mov
xchg
jl
fisubrs
clc
dec
mov
pop
sbb
add
mov
jg
mov
adc
dec
dec
lods
mov
inc
and
fisubs
push
pop
dec
cld
mov
daa
in
ficoms
pop
shrb
or
jbe
outsb
and
inc
mov
xor
sub
and
jg
jae
jb
stos
sti
into
xchg
outsb
movsl
xchg
orl
dec
inc
pop
jge
sbbb
jo
lods
and
mov
pop
fbld
inc
subb
push
in
cwtl
das
xchg
fnsave
ds
xlat
aam
mov
stc
movsb
mov
insb
pop
es
into
addr16
fdivr
scas
pop
push
push
xchg
ficoml
cs
xchg
movsl
cmpsb
or
cmp
cli
jo,pt
scas
cltd
inc
mov
xor
lret
sahf
enter
cs
mov
xor
mov
subb
iret
imul
adc
mov
push
cld
sbb
in
popa
into
xor
pusha
cltd
ljmp
or
cmp
insl
jbe
cmp
add
mull
outsb
sti
mov
repnz
xor
lock
movsb
mov
mov
mov
aaa
cmpsl
add
mov
adc
insb
xchg
out
cmpps
sbb
icebp
decb
mov
fcmovnu
bound
jmp
pop
aas
fsts
cmp
and
fcmovne
enter
icebp
out
jb
xchg
inc
jl
fimull
fists
mov
inc
int3
xchg
mov
scas
lds
aas
rcll
aaa
or
movsb
pop
mov
xor
jmp
inc
enter
push
cvttps2pi
jno
iret
lea
inc
add
jp
cmp
dec
ja
fs
loop
dec
dec
inc
add
test
test
jnp
es
push
mov
mov
ret
or
push
shll
daa
test
mov
scas
shrl
inc
icebp
mov
stos
hlt
mov
cwtl
cmp
xchg
push
aas
pop
mov
loopne
sbb
loop
push
test
test
lock
cmp
mov
loop
sub
rolb
fwait
gs
or
push
lods
jmp
cmpsl
push
dec
mulb
or
in
jb
push
xchg
popf
mov
xchg
bound
in
test
dec
mov
or
adc
xlat
hlt
repz
lcall
sbb
mov
cmc
sub
js
mov
outsl
pop
mov
stos
pop
imul
inc
cmp
cld
sarb
mov
movsl
jecxz
mov
mov
test
or
stos
push
test
cltd
mov
js
pop
sub
push
push
mov
xlat
test
sbb
lods
xchg
dec
fwait
jmp
gs
pop
repnz
popa
mov
ret
lods
lea
outsb
cld
add
ja
pop
dec
repnz
imul
ljmp
pushf
sarb
inc
data16
and
loope
ja
cmp
subb
test
dec
and
test
mov
jae
sti
dec
sub
xchg
sahf
stos
sahf
loopne
xchg
mov
stos
cmpsl
xlat
into
jl
iret
adc
and
ret
in
and
jae
cmp
fsubrs
movsb
mov
sbb
pop
sub
movsb
xsaveopt
icebp
add
test
add
jnp
adc
ds
ja
loope
inc
fimuls
or
movsl
xor
pop
outsb
lods
mov
and
mov
adc
hlt
scas
push
out
cli
testl
imul
mov
rclb
or
cli
aaa
mov
ljmp
jbe
inc
push
mov
jmp
fwait
cld
test
sbb
and
add
jno
in
cmp
sub
es
cmp
mov
mov
push
ds
adc
out
mov
push
or
loopne
push
int3
in
shlb
pop
lock
loopne
push
sbb
popa
lcall
sahf
mov
pop
cmp
pop
adc
pop
inc
enter
xlat
clc
adc
mov
imul
push
in
mov
dec
pop
jno
test
ret
push
cmpsb
mov
outsb
or
fists
shrb
or
das
or
je
push
add
pop
ret
int
pop
enter
pop
les
repnz
repz
outsl
stc
inc
loop
dec
je
mov
mov
sbb
pop
inc
push
dec
mov
sahf
sub
lock
int
pop
and
sbb
enter
pusha
cmpsb
out
sbb
rol
xor
cmp
fsubrl
mov
test
fisttpll
subl
dec
jnp
jle
adc
cli
adc
mov
mov
xchg
jne
mov
loopne
mov
jmp
push
test
outsl
xlat
loopne
push
lret
ret
arpl
in
nop
sub
sub
out
fsubs
mov
jge
icebp
orb
mov
xchg
add
mov
mov
cmpsl
rclb
mov
jnp
repnz
stos
into
sbb
andl
push
pop
clc
sbb
hlt
sub
xor
pop
dec
outsb
pop
adc
mov
adc
clc
sbb
or
inc
add
mov
insl
mov
movsl
sub
ljmp
cmp
imul
adc
lock
mov
jl
or
or
movsb
push
add
push
sti
in
or
adcl
outsl
hlt
ret
jbe
xchg
arpl
dec
mov
cmp
inc
inc
enter
jl
fwait
iret
negb
inc
mov
es
inc
rcrb
cmp
sbb
addb
scas
xchg
xor
pop
mov
mov
inc
xchg
sbb
dec
jae
push
lret
sbb
add
xor
sbb
cmp
xlat
call
addl
or
lea
and
dec
sub
sbb
addr16
data16
cwtl
idivl
inc
mov
mov
fldenv
dec
xlat
outsl
idivl
loopne
adc
push
or
and
ret
out
rcr
sbb
imul
addl
and
movsb
rcrb
xor
xchg
or
add
sbb
clc
or
jmp
xor
bound
xchg
movsb
ljmp
and
mov
enter
or
cli
adc
sub
into
enter
fsubr
stos
lret
lcall
xchg
mov
push
sbbl
in
pop
out
cmpsb
jp
aam
cmpsl
mov
in
or
jnp
dec
lahf
andb
sti
pop
adc
in
in
loop
fdivl
fsubr
xchg
jecxz
mov
cmp
je
pop
mov
mov
cmc
shlb
lcall
sub
xchg
xchg
jl
jnp
fisubrs
add
je
sub
shll
scas
outsl
and
cmp
cmp
mov
inc
imul
mov
lahf
js
jmp
push
test
and
clc
sbbb
adc
or
xchg
inc
pushf
add
pop
adc
outsl
sbb
mov
cwtl
xchg
in
int
push
mov
xchg
cmp
in
ret
iret
imul
call
in
lret
dec
cmp
inc
inc
out
cmp
fisubs
les
scas
push
lods
sbb
int
xor
repz
mov
in
or
mov
test
std
pop
mov
dec
sbb
mov
fimull
mov
dec
mov
in
cmp
popf
mov
or
xor
xchg
push
push
sbb
out
dec
ss
imul
repz
adc
inc
orl
mov
or
aas
adc
push
outsb
or
insb
mov
sti
cmpsb
test
in
sbb
xor
scas
lods
adcl
push
mov
inc
or
mov
das
mov
gs
sbb
out
shll
adc
adc
mov
popf
push
inc
sbb
mov
inc
jbe
int
rolb
and
mov
stos
cli
jg
inc
je
outsl
xor
cmpsb
lea
push
outsb
js
iret
xor
call
lahf
ss
mov
adc
pop
popf
xchg
in
push
jl
dec
cwtl
mov
dec
aam
js
jl
mov
fiaddl
pop
adc
or
or
mov
inc
mov
and
pop
dec
jg
mov
mov
sub
stc
stos
adc
stos
mov
add
jnp
inc
fimuls
pop
es
mov
and
inc
sti
sbb
mov
mov
dec
ret
movsl
sbb
loop
clc
insb
test
xchg
sbb
cmp
inc
rolb
mov
inc
cmpsb
cmpl
mov
push
jne
outsb
mov
push
out
das
dec
lock
int3
cs
add
pop
jbe
pop
pop
dec
pop
or
mov
push
push
loopne
jbe
addr16
cltd
mov
dec
daa
fxch
cmpsb
push
or
xchg
out
popf
dec
sub
or
loop
dec
cmp
mov
push
test
daa
shlb
outsb
dec
pop
aam
mov
inc
mov
inc
xchg
fdivrl
mov
stc
ja
cld
mov
xchg
ljmp
loope
rcrl
out
xor
add
jmp
or
jmp
pop
loop
lcall
cmp
hlt
xchg
add
push
pop
loopne
lret
ljmp
xor
shrb
rcrl
fwait
mov
into
sub
add
jne
out
cwtl
inc
imul
lret
rcll
gs
push
js
loopne
sub
or
sbb
fisubrs
jmp
test
movsb
bound
daa
xchg
sub
mov
sub
iret
cmp
cmp
outsl
push
fidivl
inc
inc
dec
sbb
aam
dec
sar
arpl
es
cltd
push
nop
ss
sub
jno
cs
jmp
dec
adc
adc
stc
dec
clc
insl
mov
xlat
mov
xchg
clc
xchg
sarl
int3
ljmp
cld
pop
xchg
or
add
jle
mov
inc
stos
xor
push
std
adc
lds
test
imul
push
cmp
add
loope
ret
xor
cli
add
mov
xor
ss
test
inc
pop
int3
loope
test
adc
inc
mov
mov
cmpsl
dec
sbb
negl
xor
into
inc
cmp
cmp
and
idivb
shrb
call
stos
repz
rol
sbb
pop
cwtl
fstps
mov
loopne
out
idiv
jl
repz
mov
adc
mov
dec
cmc
pushf
repz
mov
push
ret
roll
sub
ja
cmp
lret
mov
cmpsl
adc
add
movsl
mov
inc
loopne
arpl
mov
mov
pop
ds
ljmp
loope
cmpb
cmc
push
mov
test
ret
ret
testl
fcoms
dec
sub
push
jg
sbbl
fwait
mov
cmp
jle
cmp
dec
xor
rorl
cmp
lea
ret
pop
mov
int
bound
add
xchg
and
fsubl
movsb
dec
jno
movsl
add
push
jp
xor
sbb
ds
add
cli
addb
sbb
sub
pop
cmpl
jle
cld
mov
fadd
push
lahf
jg
iret
dec
xchg
movsl
cmp
push
add
add
inc
mov
pusha
out
shl
mov
aaa
fwait
mov
cmp
test
ja
or
mov
push
mov
mov
add
and
insl
mov
and
push
sub
mov
jecxz
insl
jge
pusha
js
repnz
xchg
dec
pusha
lcall
popf
test
daa
xchg
imulb
add
sbb
push
sub
adcb
addr16
cwtl
imul
rcrl
dec
inc
out
cmp
mov
and
stc
pop
mov
lods
adc
mov
sub
pusha
daa
inc
sbb
sub
jge
xchg
pop
mov
mov
mov
aaa
lcall
out
std
fwait
in
stc
rclb
jg
out
out
sahf
lock
lcall
add
scas
and
testb
addr16
arpl
xchg
movsl
push
pop
fldpi
xchg
roll
push
inc
add
call
negb
daa
sbb
repnz
jmp
mov
std
mov
inc
xchg
ss
ds
aaa
out
pop
dec
push
xor
pop
popf
adc
mov
xchg
out
inc
xor
sub
sub
xor
fadds
out
and
cmp
nop
xor
or
fimuls
roll
xchg
mov
pushf
loope
dec
ret
xchg
aam
out
inc
dec
adc
pop
lret
shl
fwait
mov
repz
ja
mov
lea
mov
dec
enter
jl
adc
sahf
pop
and
cs
or
lea
addb
xor
test
mov
adc
xchg
dec
test
nop
mov
or
fmuls
inc
cmp
cmc
mov
repnz
aaa
ret
int
xchg
hlt
cld
jbe
shrl
push
xor
add
dec
shlb
lahf
mov
jecxz
outsb
xchg
jge
jne
push
es
mov
popa
jge
adc
test
xchg
test
mov
sub
rorl
mov
mov
cmp
fistl
jmp
leave
jno
or
mov
xor
pop
fs
cmp
add
sbb
xor
pop
pop
inc
cmp
adc
or
cmp
push
dec
ss
mov
pop
mov
push
lods
test
push
xchg
push
adc
mov
lret
out
shrb
pop
cs
divb
adc
mov
or
sarb
in
or
jge
xchg
movsl
sahf
or
gs
cmp
dec
dec
and
dec
sbb
pop
popa
pushl
push
inc
pop
sub
sbb
mov
push
repz
ljmp
inc
pop
cmp
jp
push
add
push
je
sub
pusha
stc
lret
pop
out
xor
in
dec
mov
xchg
ljmp
xchg
dec
jmp
hlt
dec
sub
lret
mov
dec
pusha
mov
nop
mov
aam
push
sti
inc
outsl
jg
dec
inc
xchg
mov
fadds
bound
push
test
push
inc
call
test
xlat
jbe
push
ret
movsl
adc
pusha
or
or
out
dec
sub
jae
leave
scas
cmp
push
push
fnstenv
adc
cs
mov
push
pop
xor
adc
jl
in
jns
cwtl
imul
sbb
mov
or
mov
and
inc
pop
je
shll
insb
mov
or
push
repnz
cmp
xor
fnsetpm(287
outsb
push
push
mov
add
and
pusha
fiaddl
scas
inc
inc
adc
and
out
inc
cmp
aam
cli
rcl
lahf
mov
sub
cli
fistl
test
fs
mov
cld
hlt
andb
mov
ret
rcrb
andb
rclb
jo
inc
pop
add
bound
ret
mov
movsl
xlat
out
syscall
or
fwait
das
notb
rcl
sti
andb
shlb
outsb
aam
mov
xchg
pop
or
loope
fstps
addl
insl
cmp
dec
push
inc
sub
mov
push
sub
mov
arpl
rolb
or
imul
aas
adc
xchg
jb
inc
aad
pop
push
adc
lret
fwait
mov
jle
sub
mov
cmp
mov
lods
sahf
leave
cltd
jg
or
repz
inc
add
mov
movsb
jnp
cmp
add
clc
inc
mov
jnp
or
mov
xchg
shr
dec
and
and
xchg
std
inc
lea
sub
cmp
fisttpll
daa
add
sub
imul
pop
sti
pop
jg
xor
and
test
ds
jmp
xchg
mov
push
xchg
out
and
addr16
inc
inc
push
iret
mov
xor
mov
xchg
movsl
fildl
test
inc
push
repnz
aad
jns
ror
repnz
sbb
sahf
fsubrs
xchg
cmpsb
pop
mov
push
enter
js
sti
mov
push
int3
sbb
repnz
rcr
test
pop
ds
sub
sub
xor
inc
cmp
scas
dec
mov
jns
fld
cmp
lock
test
mov
sub
mov
incl
fmul
test
push
rcrl
in
lea
lods
push
fwait
clc
mov
fidivrl
ljmp
mov
xchg
push
out
pop
int
lcall
add
pop
ret
cmp
ds
inc
aaa
gs
insl
ret
inc
mov
fsubs
xchg
xor
jne
sbb
mov
cmp
stc
sti
shl
jp
jb
rolb
mov
aam
jne
out
mov
arpl
adc
test
repz
mov
inc
mov
mov
rcrl
cmp
push
stos
xchg
ficomps
xor
pop
outsb
mov
cwtl
aas
test
and
jbe
in
dec
in
jl
in
loop
jbe
insb
push
sti
adc
ss
mov
add
and
stos
jns
pop
js
mov
jecxz
mov
testl
and
mov
shll
mov
les
adc
adc
stos
dec
xor
mov
xchg
imul
pop
pop
lea
cli
push
and
ret
pop
testl
xchg
cltd
sti
mov
xor
sbb
pop
cld
cmp
adc
pop
push
add
add
gs
dec
xchg
mov
jbe
dec
inc
iret
push
jg
lods
je
push
cmp
repz
je
lret
insb
repnz
lret
push
rcll
pusha
jle
mov
dec
add
xlat
sub
pop
shlb
mov
aam
push
xchg
stos
xlat
imul
xor
push
sbb
imul
hlt
insb
lock
pop
mov
pop
jmp
pop
gs
les
jne
and
aas
insl
aad
cs
mov
dec
es
xchg
xorl
push
insl
roll
sub
into
mov
inc
das
pop
mov
sub
inc
pop
in
push
add
push
add
jmp
je
ret
mov
pop
fwait
int3
out
loop
pusha
push
cmp
mov
ret
dec
js
outsb
push
leave
mov
test
xor
jmp
repnz
mov
loope
fcomi
addr16
mov
add
sahf
add
loope
cmp
lds
xlat
daa
dec
addr16
fisubrl
sub
movl
mov
sbb
pop
lcall
js
sub
pop
rcrl
sahf
pop
cld
jp
sti
sysenter
pop
dec
aad
sbb
jb
pop
dec
and
lods
push
lock
xchg
mov
mov
cs
loope
jno
ja
xchg
cmp
cmp
push
pop
mov
cmp
mov
xor
ljmp
outsb
sbb
jg
push
mov
out
mov
repz
rcrb
or
dec
sub
fisubs
sbb
mov
out
adc
cmpsb
rolb
rorl
cmp
xchg
sbbb
xchg
lock
pop
enter
repnz
mov
scas
and
sub
imul
clc
pop
inc
or
cmp
mov
mov
mov
daa
push
pop
dec
stos
lret
push
in
out
in
inc
ja
pop
xlat
aad
sbbb
sub
pusha
inc
and
mov
flds
into
jb
inc
bound
adcl
pop
jae
jp
leave
idivl
stos
aaa
cs
xor
outsb
jo
cmp
popa
pop
inc
and
jle
sbb
stos
mov
or
and
sbb
sbb
lods
mov
push
mov
xor
jb
ljmp
subl
test
mov
pop
dec
cli
xchg
pop
hlt
fs
mov
pop
mov
mov
repz
lahf
and
jno
or
fdivl
fsts
js
jge
lret
es
mov
std
shrb
fdiv
lods
lds
fmul
jae
mov
and
test
push
mov
and
mov
dec
aas
adc
pop
mov
inc
push
out
push
xor
cld
and
sub
xchg
bound
test
cmp
pop
sahf
mov
fldl
xchg
scas
out
xor
xor
out
aas
test
jns
js
pop
add
out
nop
jno
push
ss
sbb
add
mov
icebp
xchg
or
inc
sub
out
xchg
xchg
pop
dec
xchg
outsb
roll
test
cs
outsl
popf
cltd
test
xchg
xlat
jmp
repz
jbe
mov
lds
sbb
leave
leave
sbb
mov
pop
neg
jae
jl
outsl
cmp
dec
jae
push
imul
frstor
adc
cmpsl
cld
cvttps2dq
jl
adc
loopne
ret
das
jecxz
popf
mov
push
or
lcall
cmp
fldt
sbb
lcall
sbb
test
cmp
lahf
dec
popf
inc
pop
shr
lods
xchg
mov
rorb
push
mov
mov
call
inc
adc
in
sbb
sub
mov
sbb
cwtl
cmc
in
ljmp
pop
mov
shll
mov
in
cli
jne
inc
mov
mov
ret
sub
adc
decb
fldenv
outsb
pushf
stc
push
clc
inc
and
mov
mov
push
je
iret
sbb
je
daa
cmp
pop
mov
sti
ja
outsl
inc
ret
test
je
lret
cmp
fcmovbe
imul
cmp
test
pushf
xchg
mov
movsl
dec
push
inc
jl
mov
sarb
jae
testb
mov
scas
mov
mov
fdivrs
mov
cmp
out
and
or
xchg
pop
daa
xchg
jl
outsl
push
dec
inc
cmp
inc
xor
xor
rorl
sbbb
imul
push
test
fnstenv
in
xchg
add
mov
arpl
les
enter
jp
jmp
xor
adc
dec
push
sti
test
push
test
pop
mov
les
sahf
cmpl
push
sbb
in
jmp
std
xchg
cmp
xchg
icebp
fldcw
aas
test
mov
int
dec
inc
mov
addl
leave
adc
add
pop
jb
shrb
cmp
ficoms
dec
js
das
call
sub
push
imul
sub
fcoms
push
daa
fcmovu
sahf
mov
pop
popf
shrl
imul
fnsave
jnp
xchg
push
cmp
push
dec
lcall
fldl
in
sbb
jnp
xchg
inc
jnp
sbb
or
xchg
inc
xor
test
test
or
outsb
pop
imul
int
addb
mov
shll
js
jns
loopne
test
ret
stos
push
sub
out
jl
mov
sar
iret
sti
pop
aad
jl
dec
loop
mov
out
fs
jmp
and
add
test
cli
sbb
inc
ret
jle
sbb
jl
push
mov
int3
and
repnz
rolb
inc
cwtl
mov
test
mov
enter
rorl
cmp
lret
insb
sub
mov
int3
pop
roll
nop
mov
dec
mov
sti
jb
push
jecxz
pop
iret
outsl
int3
ret
jge
nop
mov
outsl
add
aaa
pop
cmp
push
mov
mov
pop
jo
mov
mov
fidivl
mov
lods
adc
xor
or
pop
test
fldenv
in
mov
xor
out
lret
in
andb
mov
or
clc
push
sub
fstpl
mov
out
mov
mov
sbb
push
mov
or
add
and
add
xor
xchg
lea
aad
mov
loopne
mov
mov
push
jno
sub
push
mov
push
nop
lahf
xlat
add
aaa
clc
lock
jecxz
cmp
add
push
loop
lock
je
push
daa
jb
ja
push
add
scas
mov
xlat
mov
jnp
subl
cmp
adc
sbb
sarb
mov
outsl
stos
rcr
mov
test
dec
mov
add
mov
std
xor
insw
cltd
mov
nop
aaa
nop
inc
cmp
and
mov
fidivrl
mov
sbb
ljmp
scas
mov
mov
sbb
or
pop
sub
inc
mov
mov
sub
sbb
adc
jno
stos
fistpll
test
movsl
mov
fcompl
sub
insb
sbb
mov
mov
push
dec
cltd
push
jnp
roll
int
mov
jg
adc
jmp
movsb
cmc
gs
sub
cmpsl
jne
nop
dec
adc
pop
push
addr16
dec
mov
adc
dec
xor
popa
jge
lods
cmp
push
popl
in
in
inc
jne,pt
sbb
pop
repz
pop
sahf
add
xchg
pushf
into
mov
dec
lret
pop
ljmp
sbb
or
sti
gs
mov
add
fwait
imul
dec
icebp
fisubrs
push
fwait
jae
or
jnp
out
fcmovnb
pop
loopne
mov
jmp
into
or
out
notb
cwtl
sbb
jns
mov
ror
adc
fimull
inc
lret
sub
pop
insl
lock
outsb
nop
add
mov
mov
fcmove
ret
repz
outsb
outsb
add
das
mull
das
fcmovu
arpl
xchg
insb
mov
cmpsl
ret
mov
shl
outsl
aas
pop
fnstenv
mov
dec
aas
popa
call
jne
pusha
cmp
movsl
mov
scas
subb
mov
push
outsb
scas
leave
dec
cli
lahf
inc
pushw
jo
inc
out
aam
into
enter
cmp
adc
js
lahf
dec
mov
test
sarl
dec
cmp
mov
divl
mov
lds
add
mov
xchg
adc
outsl
xchg
arpl
add
outsb
and
adc
fidivrl
dec
pop
pop
js
mov
rcr
pop
lahf
rorl
lock
movsb
jno
push
mov
jae
dec
divl
fstpl
loopne
and
push
sbb
js
popa
fimull
push
push
mov
into
xchg
jae
mov
rcl
ret
lods
adcb
shl
dec
test
push
aad
dec
cmc
call
nop
fwait
sub
hlt
fisubrs
scas
cmc
pop
mov
sub
add
jb
lret
or
dec
pmaxsw
inc
dec
push
pop
cmp
cmc
cmp
cmc
out
xchg
enter
out
cmp
mov
imull
in
cwtl
sti
pop
mov
dec
mov
xorl
outsb
xor
mov
jp
loop
fsin
clc
fs
ja
cmpsl
scas
lret
xor
push
pop
cld
icebp
cli
adc
xchg
out
lds
rcrb
rorb
mov
les
mov
push
lock
push
out
dec
cmpsl
and
mov
mov
lods
jo
dec
rorl
repnz
or
test
les
out
lret
vcvttsd2si
fldcw
dec
jo
jnp
stos
jno
shr
aad
and
push
xor
jbe
sub
fstps
test
gs
jo
dec
push
loop
cs
mov
mov
daa
in
ljmp
cmp
cmp
inc
xchg
and
xchg
and
jge
add
xchg
leave
lahf
and
inc
les
sti
ret
and
cmp
sub
or
jbe
mulb
xchg
mov
xor
jno
cmp
ret
loopne
in
jmp
ds
mov
mov
lret
clc
adc
mov
aas
pop
lods
cmp
insb
fcom
popa
push
add
stc
cmp
clc
inc
mov
dec
bound
add
fistps
jl
lds
idivb
cmpb
cmpsl
and
pop
sbbl
mov
adc
mov
insb
movsb
rolb
adc
js
xor
lea
aas
mov
mov
mov
jnp
imul
sbb
push
mov
stc
jb
pushf
mov
sbb
je
stc
notl
sbb
pop
xor
addl
dec
arpl
pop
adc
decl
xor
es
fsts
loope
dec
and
std
sahf
movsb
xchg
push
rorb
imul
and
add
dec
jns
cmp
mov
push
out
pop
sub
cmc
mov
rorl
inc
or
mov
cwtl
stos
lahf
push
test
fisubs
andl
and
sub
aaa
xor
loope
cmp
mov
inc
pop
loop
repnz
daa
pop
fcompl
push
pusha
adc
pop
mov
dec
aas
cltd
mov
pop
sub
iret
mov
loope
cltd
pushf
mov
jmp
data16
in
mov
dec
loopne
ret
das
push
sbb
pop
movsl
cwtl
aaa
xor
mov
jl
rolb
popf
leave
add
push
add
sub
inc
fisubs
mov
pop
ret
cs
cmc
lahf
jg
fst
xor
add
adc
sahf
add
dec
sarl
pusha
jae
xchg
push
and
cmp
pop
aaa
je
cmp
push
pop
rolb
dec
mov
push
jns
jne
jle
mov
mov
mov
int3
cmp
add
jl
jae
lcall
xchg
pop
sahf
sub
cmpsb
jle
push
notl
xor
adc
adc
sbb
xchg
out
jp
mov
sub
stos
bound
ds
or
cli
jmp
sub
xlat
loop
outsl
ja
mov
bound
cmp
cmp
fistps
js
bound
movsb
lret
pop
cmp
push
mov
sbb
inc
push
inc
push
adc
or
mov
mov
sbb
popf
and
inc
dec
out
fs
adc
xor
adc
mov
fildl
adc
loop
xor
in
push
mov
inc
xchg
jns
cld
sahf
test
jl
mov
movsl
adc
outsb
loopne
mov
call
pop
mov
sub
cs
rclb
cs
std
jmp
outsl
and
cmp
stc
cmpb
push
mov
push
pop
negb
bsr
cs
jecxz
xchg
push
out
add
aad
movzbl
jge
sbb
mov
cmp
sub
xchg
add
not
je
mov
sub
jg
sti
jnp
sub
pop
pushf
adc
lock
scas
fnstenv
jg
pushf
mulb
fisttps
or
sbb
adc
cwtl
in
enter
ficomps
or
imul
sbb
das
fdivp
emms
outsb
shlb
mov
and
inc
mov
stos
test
outsb
add
cmc
push
add
ja
gs
jbe
and
mov
add
scas
subl
and
xchg
in
pop
out
jl
adc
std
aas
sub
mov
sbb
das
loop
movsl
add
popa
loopne
fcoml
cmp
mov
adc
mov
cmp
pop
sub
stos
lods
cmp
xchg
insl
pusha
dec
or
je
lods
icebp
or
lea
push
fpatan
das
or
xchg
cmp
xor
movsl
in
mov
out
xchg
fdiv
lcall
jl
gs
sub
push
movsb
adc
push
sbb
xor
stc
cmp
sbb
xchg
jae
jo
sbb
pusha
pop
stc
dec
imul
or
cmp
lret
push
iret
xor
jp
cmpsl
xor
mov
test
leave
popa
push
adc
jb
cmp
adc
xor
sbb
lahf
inc
or
push
sub
mov
and
jne
and
scas
cmp
jbe
scas
nop
orb
pop
cmpsb
mov
inc
push
popf
cmp
stos
and
int
sbb
cltd
dec
xchg
sub
stos
nop
clc
mov
mov
mov
mull
mov
cmp
outsb
mov
jp
leave
cs
scas
or
xchg
mov
mov
and
icebp
das
push
insb
fadd
sub
jae
fs
mov
sbb
int3
test
jne
int
aam
nop
imul
daa
repz
in
cmp
lcall
out
lods
xchg
push
pop
fs
mov
cmp
sbb
jp
add
mul
popf
cmp
push
jle
inc
pop
cmp
lods
push
xchg
outsl
mov
and
data16
ficompl
push
sub
mov
pop
mov
cwtl
xchg
stos
push
push
sahf
push
repnz
stos
rol
aas
mov
dec
adc
inc
popa
mov
dec
xchg
adc
inc
xchg
dec
fildl
lcall
enter
pop
popf
add
fimuls
dec
pop
push
fildl
shrb
sahf
rcr
cmpsl
xor
dec
fwait
jb
rcll
xchg
xor
pop
pop
add
rol
xor
ss
cmp
mov
rcll
pop
imul
ljmp
pop
sbb
out
sbbb
push
jg
or
dec
jae
jl
or
mov
ja
mov
jns
sub
out
pop
push
test
loop
leave
je
int
adc
cmp
xchg
or
sahf
push
int
sarl
in
roll
pop
mov
cld
push
inc
mov
test
sahf
xchg
xchg
andl
push
pop
pop
adc
jae
xchg
mov
sub
bound
into
fsubrl
sub
jbe
fsubrs
test
js
adc
push
adcb
pop
pushf
jb
into
das
cs
stos
pop
aam
fldcw
sbb
subb
jns
mov
xchg
cmp
pop
xor
add
notl
fisttpl
mov
es
ret
adc
fldl
in
hlt
cmp
pop
fistpll
cmp
lods
cmp
addr16
das
jle
bound
test
and
mov
dec
stos
std
pop
iret
xor
cli
fcomps
test
roll
in
mov
inc
lcall
sub
dec
test
std
mov
filds
pop
jnp
pop
pop
imul
cmp
aad
inc
ljmp
hlt
xchg
shr
fsubl
hlt
notb
mov
sbb
xchg
pusha
stos
loop
mov
sahf
mov
mov
mov
out
push
mov
push
sub
je
sub
jmp
mov
xchg
push
sbb
mov
mov
jmp
mov
ficoms
xchg
into
sub
hlt
jb
sub
cmc
shl
add
fwait
aam
cmp
xchg
scas
enter
sub
call
arpl
movsl
mov
addl
xor
popf
add
adc
or
and
dec
sbb
test
stos
xchg
pop
mov
into
nop
push
jns
aad
inc
sub
out
fimull
pop
ss
xor
mov
imul
popa
insb
sub
daa
lock
xchg
stos
xchg
mov
push
cwtl
rolb
add
dec
pop
xchg
jl
mov
xor
cmp
jo
cmp
or
jge
rcrb
out
push
inc
std
cltd
xor
and
sbb
add
call
mov
insb
xor
jl
push
stos
pop
push
pusha
push
sbbb
mov
mov
sarb
cmovg
cli
orb
cmpsl
ljmp
sbb
divb
outsb
int3
dec
popf
sbb
jbe
jmp
cmc
gs
shll
subb
jge
add
add
mov
mov
aam
loop
pushf
lock
fildl
xchg
dec
mov
dec
jb
lock
arpl
in
rcr
fucomip
push
mov
fwait
ror
mov
pop
data16
add
sub
outsl
jecxz
outsl
loopne
data16
jo
and
adc
sbb
pop
or
and
lods
mov
fdivl
scas
int3
pop
mov
cli
aam
fisubs
xor
cmp
push
jmp
outsl
dec
mov
jmp
xor
loop
clc
push
pop
in
hlt
cmp
stos
cs
sbb
xchg
mov
jl
adc
xor
jmp
push
bound
cmp
lret
mov
mov
lock
aad
aas
hlt
lcall
jl
jg
jl
mov
jecxz
repz
sub
rcl
sbb
xchg
mov
xor
loop
add
jbe
push
mov
adc
sub
xchg
lcall
mov
pushf
pop
xor
in
push
mov
mov
sbb
mov
xchg
loop
pop
in
jo
scas
sub
adc
icebp
arpl
mov
in
movsb
unpckhps
negb
adc
add
xor
or
inc
lock
xchg
jl
xor
dec
out
xchg
ror
repnz
jns
push
stos
addl
and
mov
call
and
sub
cwtl
xchg
lods
xor
in
cwtl
sub
outsl
pusha
inc
mov
bound
jae
cli
stos
loop
mov
and
ret
mov
fadds
mov
mov
push
pop
call
cmp
lret
clc
enter
mov
adc
clc
hlt
or
or
sub
arpl
xchg
jg
pop
push
imul
aam
add
sbb
pop
sarb
pusha
lret
pop
xor
cs
movsl
push
ds
cs
rcrb
jle
jmp
xor
rolb
mov
and
lcall
or
insb
in
lcall
int
test
in
add
jmp
fdivl
imul
mov
lret
cmp
sbb
pop
push
fmul
lods
mov
jns
imul
inc
inc
dec
stos
cmpsl
pop
idivl
add
jge
loope
sub
fidivrs
xorl
push
dec
xor
mov
jmp
or
mov
fnstenv
or
mull
sbb
stc
out
idivb
fisttps
cli
mov
jg
jecxz
mov
xor
fstpt
mov
and
call
unpckhps
shl
cmp
fs
pop
mov
stos
adc
sbb
ds
mov
or
mov
scas
pop
xor
fadds
sbb
adc
in
lcall
pop
andb
in
imul
sub
sbb
pop
dec
mov
cmp
insl
adc
ror
jae
sub
pop
jp
ljmp
mov
mov
andl
push
outsl
cmp
leave
neg
cmp
mov
push
pop
or
add
mov
pop
fdivrs
xchg
js
push
adcb
xor
xchg
adc
enter
ds
rcll
add
aam
xor
xchg
mov
sub
scas
fisubl
sbb
jns
xchg
and
mov
jns
cmp
dec
xchg
or
inc
mov
nop
mov
sbb
and
loopne
mov
xlat
repnz
fst
orb
pop
xchg
mov
mov
mov
outsl
cltd
xlat
lahf
loop
mov
xchg
outsl
push
fildll
push
fwait
mov
sub
push
daa
push
sahf
jbe
mov
movl
lds
lret
addr16
push
dec
leave
and
out
or
popa
loop
cwtl
push
pop
and
sub
push
in
inc
cld
shrl
jmp
insb
push
mov
repnz
sub
bound
xor
cmp
rorb
test
hlt
test
mov
cwtl
inc
inc
pop
push
xor
movsb
cmp
xchg
dec
jmp
push
out
test
xchg
clc
repnz
dec
sub
cmp
rorl
add
mov
scas
inc
es
cltd
pop
inc
sbb
jl
in
add
addl
jg
cmp
add
insl
je
fwait
outsl
rcl
inc
mov
iret
inc
and
pop
sti
cmp
lock
cmp
or
idivl
push
in
cli
int3
loop
cmpsl
mov
adc
xor
xchg
mov
add
xchg
lcall
mov
aam
push
pop
push
stos
int
mov
jp
dec
xchg
stos
shrl
in
das
std
jp
popf
lcall
bound
fsubs
cmpsl
test
xchg
pop
cwtl
and
insl
cwtl
push
inc
adc
sahf
out
bound
call
add
cmp
inc
imul
push
jbe
fistpll
subb
sbb
xlat
ds
inc
lea
out
pop
dec
dec
mov
sbb
sub
and
ret
cs
xchg
insb
clc
jae
dec
mov
shl
fsubs
dec
daa
push
xor
jb
mov
andl
sub
fnstcw
xchg
jne
sbb
jo
cmp
inc
js
xor
lock
or
fsts
mov
and
pop
sarb
dec
shrb
lcall
inc
dec
mov
xchg
cmp
cmpsl
dec
repz
fwait
mov
fcmovu
add
or
out
xchg
lcall
orl
and
js
sahf
je
xor
mov
and
pop
mov
sub
pushf
imul
mov
cmp
or
mov
outsl
mov
rorb
sub
xor
rcl
xchg
out
push
leave
outsl
jne
pop
sub
outsl
test
mov
iret
mov
push
mov
and
adc
mov
daa
popf
cmp
xchg
pop
fstpt
adcb
adc
mov
enter
mov
xor
cmc
jmp
pop
sub
nop
nop
test
ljmp
aaa
ss
mov
subl
aad
cmp
ret
mov
dec
push
add
lods
sub
clc
cmp
int3
or
outsb
lahf
adc
int3
fnstsw
adc
pop
nop
jle
mov
cli
movsb
push
xchg
xor
pop
sbb
scas
pop
cld
push
je
cmp
mov
andl
lea
cmp
aaa
or
cmp
jecxz
mov
ficoml
dec
or
or
cmp
xchg
sahf
ret
mov
test
aaa
roll
mov
jno
jb
fimuls
jnp
shll
pop
jp
or
pop
mov
and
adc
mov
call
das
lret
jno
push
lods
jmp
icebp
mov
inc
call
incb
movsl
rcrb
fadds
inc
jbe
push
dec
pop
mov
add
fidivrl
mov
mull
push
in
dec
ljmp
out
andl
call
in
call
mov
jle
inc
mov
insl
xchg
imulb
ret
popf
or
jnp
jmp
adc
bound
jno
pop
pop
ret
jae
imul
mov
bnd
cmp
stc
xlat
sub
lea
scas
iret
lods
xor
call
imul
stc
mov
jl
adc
and
andl
enter
and
xor
ret
testb
dec
int3
mov
lcall
push
test
cltd
test
mov
push
mov
daa
and
insl
pop
test
cmp
cmpb
sub
push
push
stos
ja
xchg
loopne
repz
push
jne
cwtl
or
push
add
je
or
out
xchg
insl
ss
xor
es
sbb
sub
xchg
ret
fnsave
popa
mov
cmc
and
aam
int3
mov
ret
add
int
add
loop
popl
xchg
in
adc
inc
mov
and
jmp
mov
fisttps
test
inc
sub
cltd
mov
int
fistpll
fwait
mov
inc
dec
leavew
notl
in
pop
dec
or
fwait
test
sbb
aad
sbb
xchg
add
pop
les
pop
xor
xchg
out
adc
or
cmp
push
in
xlat
decb
dec
push
lret
ds
push
cmp
inc
mov
xchg
xor
dec
xorb
sub
mov
adc
xorl
lea
add
pop
cmpsl
dec
and
pop
lret
push
cli
out
popf
pop
ret
cmpsl
fisttpll
or
jns
jnp
mov
add
stc
dec
pushf
xchg
icebp
jae
jl
push
sub
jmp
fldcw
cmp
subb
or
dec
insl
or
mov
filds
mov
or
lahf
mov
aam
das
or
push
inc
nop
inc
sarb
popa
jbe
cmpsb
aam
mov
sub
and
clc
dec
lret
ljmp
cmp
out
repz
lcall
loope
rcll
sti
or
mov
cs
or
popl
addr16
adc
lods
mov
jge
dec
dec
mov
leave
call
cli
and
inc
add
lret
pop
push
add
out
cmpsb
pop
push
push
inc
das
rcll
lea
fwait
pop
push
arpl
and
push
jns
push
pop
outsb
negl
ljmp
cld
cmpsb
mov
add
out
dec
ss
cmpl
add
mov
loop
jno
jmp
xor
aad
pop
jg
mov
jecxz
and
jge
jns
cli
repz
cmp
jnp
mov
inc
and
and
cwtl
mov
idiv
test
shll
shrl
mov
mov
getsec
movsb
or
ja
pop
stos
jg
xchg
les
iret
jns
insl
mov
jmp
fsubl
or
push
test
scas
dec
mov
test
add
sahf
repnz
inc
add
shrw
push
and
mov
mov
pop
jnp
dec
jb
cli
stos
push
push
pop
cmpsl
cltd
repz
repz
xchg
lods
xor
jb
test
xchg
loope
stos
cmp
cmpsl
inc
jp
sti
cmp
push
push
or
add
popf
push
jp
push
and
popf
xchg
inc
push
out
aam
in
inc
pop
sarl
xlat
push
out
xchg
repnz
mov
push
sub
test
ds
addr16
loopne
inc
das
pop
out
xchg
int3
jb
fwait
nop/reserved
push
ficomps
and
sbb
daa
popl
loop
cmpsb
mov
jge
out
pop
adc
notb
add
inc
incb
loopne
clc
pop
dec
call
arpl
jae
mov
scas
push
mov
test
pop
ss
ja
fmuls
add
mov
cmp
inc
icebp
clc
daa
xor
test
or
cmc
fwait
jle
push
out
rclb
xrelease
or
dec
rclb
cltd
xor
mov
cmp
cld
mov
xchg
or
push
rcrl
inc
pop
sbb
out
push
mov
xlat
mov
xor
mov
sbb
jl
jo
loopne
and
idiv
insb
add
and
inc
sub
mov
jg
dec
cltd
sbb
ss
cld
sbb
imul
dec
fbld
sbb
inc
in
leave
mov
pop
sbb
daa
popf
loop
mov
adc
insb
adc
insl
push
fistps
data16
ds
and
repz
out
adc
out
sti
gs
outsl
pop
pop
dec
xlat
jae
xor
mov
mov
add
test
iret
mov
pop
iret
je
mov
add
jo
mov
inc
sbb
test
add
out
add
stc
pop
dec
mov
adc
stos
xor
or
jo
inc
fwait
cmc
in
dec
jnp
adc
dec
or
cmp
mov
fists
sbb
dec
in
pop
insb
sbb
sub
movsl
and
mov
sub
inc
movsl
clc
mov
and
divl
decl
mov
or
sub
stos
dec
sub
iret
push
into
fildl
enter
dec
adc
inc
push
and
mov
cmp
mov
add
pop
out
mov
xchg
jo
and
or
decb
rcll
cmc
xchg
push
dec
mov
cmpsb
add
mov
psubw
inc
mov
or
mov
int3
dec
lods
aaa
in
lods
cmp
andb
orl
pushf
fbstp
in
dec
push
xorl
gs
icebp
xchg
sub
or
dec
dec
adcl
cmpsb
xchg
leave
fstps
inc
xor
incl
mov
cmp
outsl
scas
dec
rorl
cmp
lcall
jae
enter
cmp
pop
sbb
pop
fdiv
or
dec
pop
pusha
lds
xor
ss
sbb
lods
add
sbb
fcmove
out
and
push
cmp
or
cltd
or
insb
in
mov
push
fisttpll
out
add
sub
jno
dec
ret
sbb
jo
lods
jb
jmp
or
mov
jecxz
std
push
ja
xchg
inc
sub
arpl
jecxz
rol
popf
adc
cmp
or
mov
mov
mov
dec
add
mov
frstor
pop
jmp
adc
lods
adc
jle
pop
std
movsl
leave
pop
lods
dec
jb
inc
add
xchg
fwait
rorl
scas
popa
out
dec
iret
xor
fwait
xchg
js
mov
xchg
cmp
stc
inc
and
sti
repz
sahf
rcrb
rclb
inc
stos
les
addr16
mov
push
ja
mov
fsubrs
loopne
aaa
inc
mov
cmp
cmpsb
mov
dec
push
adc
mov
test
pop
addb
inc
mov
neg
das
scas
data16
mov
dec
sti
xchg
sti
mov
inc
mov
pop
jnp
loopne
mov
sbb
mov
mov
mov
jge
mov
inc
flds
mov
es
imul
sbb
adc
sbb
fs
stos
jo
subb
cmpsl
xor
xor
mov
in
jno
das
shll
inc
pop
cli
add
dec
in
push
adc
push
enter
inc
mov
push
pop
dec
loopne
or
dec
sbb
inc
test
fwait
xlat
pop
sarl
xchg
xlat
arpl
dec
mov
popf
mov
jmp
repnz
pop
xor
mov
cld
sbb
push
inc
jg
scas
mov
insl
test
push
imul
jae
sub
push
push
jo
fwait
iret
cld
push
add
push
lods
ljmp
lods
fnstcw
adcb
dec
push
pop
jo
add
nop
rorl
sub
call
mov
mov
pusha
pop
jecxz
and
nop
mov
ja
and
cmp
xor
jne
out
push
mov
scas
push
pop
loope
loopne
jl
notl
inc
sub
imul
push
mov
and
jo
repz
mov
pop
loope
lret
mov
and
scas
mov
inc
gs
pop
mov
pop
gs
repz
outsl
sub
adc
adcb
push
add
shl
jne
ss
lret
mov
fstpt
js
push
mov
mov
in
push
repz
pop
xor
std
xchg
outsb
add
sub
imul
or
movsl
mov
mov
cmpb
mov
or
lods
shrl
test
mov
pop
in
xchg
in
push
mov
in
ja
pop
xchg
pandn
dec
mov
repz
mov
shlb
push
ss
add
add
movsb
push
flds
dec
mov
sub
aas
cli
enter
adc
daa
aad
les
mov
push
pop
lahf
jl
cld
pop
or
xorl
pop
loopne
xorb
mov
out
dec
outsb
int3
in
mov
pop
cmp
stos
lds
dec
hlt
sarb
das
imul
dec
stc
add
dec
sbbl
daa
adc
sub
adc
int3
sub
scas
insb
sar
scas
adc
or
out
sti
mov
sahf
mov
jo
sbb
pop
insb
mov
xchg
xchg
pop
scas
repnz
add
lcall
adc
ds
out
add
sbb
sub
std
push
cltd
jae
dec
push
pop
push
sub
or
aam
aad
aam
fildl
mov
mov
mov
test
pop
jecxz
mov
sahf
out
mov
cltd
insl
or
imulb
xlat
in
fsubs
out
ljmp
dec
lret
jo
cwtl
lcall
or
mov
mov
inc
push
xlat
inc
test
out
faddl
daa
outsb
in
in
push
popf
enter
imul
andb
popf
jae
pop
and
dec
sbb
adc
test
add
xor
adc
negb
shlb
outsl
sbb
in
or
jno
jne
and
mov
std
ret
incb
sub
lahf
jmp
mov
adc
pop
cli
lock
pop
xchg
fildl
pop
xchg
dec
pop
adc
cmp
or
cli
popf
cmp
fs
movsb
adc
push
xor
lds
loope
gs
fisubl
jb
push
xor
pop
in
rol
jg
mov
jns
jmp
jl
jbe
mov
inc
push
test
inc
sbb
and
push
push
add
mov
addr16
inc
push
inc
cmpsb
push
faddp
test
and
jg
ljmp
test
sub
mov
dec
sbb
cmpl
rclb
jnp
lea
or
pop
mov
lds
dec
filds
in
push
aad
iret
cs
push
test
cmp
sub
add
enter
push
fs
pop
push
or
jns
or
xor
mov
push
rclb
and
adc
sti
sbb
jg
popa
ret
insl
out
test
pop
and
notl
ret
push
sbb
mov
push
insb
cmc
jg
pop
orb
std
push
xor
xchg
mov
xor
stos
or
mov
xchg
iret
loop
aad
je
movsl
test
xlat
popa
push
mov
in
pusha
pop
dec
lods
out
mov
mov
repnz
pop
lea
aaa
pop
cld
int
jb
mov
lcall
adc
and
push
lcall
mov
cmp
cmp
dec
add
jg
andl
xchg
inc
xor
fcmovb
jnp
fdivr
repnz
add
test
movsb
cmp
imull
and
add
sbb
ss
xchg
pop
test
mov
cmp
in
jo
adc
push
mov
mov
pop
das
xlat
sbb
loop
mov
in
jg
push
gs
in
add
push
ljmp
mull
cmp
sub
stos
xor
cmpsl
jmp
movsl
cmp
ja
int3
lcall
pop
daa
mov
push
subl
data16
stos
push
dec
push
inc
add
adc
xor
pop
scas
inc
loopne
in
insb
push
fisubl
and
rolb
push
divb
xchg
mov
and
inc
mov
and
or
mov
jl
pop
loop
out
mov
or
addr16
call
lds
cmp
mov
jg
mov
or
ds
out
sub
fsubs
and
pop
push
push
pop
push
hlt
push
movsb
out
testb
add
fisttpll
cld
fnstenv
push
ret
out
xchg
aam
sbb
sbb
push
xlat
sti
and
imul
fsubrs
inc
xor
test
repz
shl
movb
sahf
test
cli
adc
test
xchg
xor
fwait
fs
sub
lock
jp
gs
ja
xor
lds
adc
jle
outsb
cli
mov
lret
jo
aam
xchg
test
jp
fwait
mov
outsl
roll
shll
push
in
pop
inc
and
stos
mov
pusha
in
scas
cwtl
mov
movsb
push
mov
addr16
cmp
xor
sub
fstpl
cmp
adc
div
jg
cltd
cltd
loope
and
cltd
das
inc
sbb
push
xchg
or
dec
cmp
xor
lea
enter
add
mov
stos
cmp
mov
out
jmp
shl
lea
sbb
dec
cld
jg
rolb
imul
out
scas
fwait
pop
pushl
inc
addr16
add
movsb
movsl
insl
xchg
or
cmp
fstpl
pop
out
xlat
mov
cmpsb
lcall
ficoml
pop
stos
arpl
pop
mov
mov
push
je
loope
popa
cmc
push
mov
lret
ret
cltd
incl
jg
shrl
rolb
ret
inc
or
pop
call
or
cmc
mov
xchg
pop
and
ret
insb
or
cmp
sbb
sarl
cld
cmp
imul
lods
rsqrtps
xchg
rorb
repz
movsl
jns
xor
inc
outsb
pop
out
pop
cmpsl
pop
fildl
push
cli
lds
cmc
sbb
insl
xor
incb
jp
mov
addr16
rcl
stos
fcomp
int3
or
push
mov
jge
in
dec
mov
and
inc
loop
xor
cli
push
mov
sub
or
sub
push
and
xchg
mov
push
std
cmc
sbb
xor
xchg
jle
pop
mov
out
push
pop
and
xchg
gs
pop
mov
push
mov
or
adc
loopne
add
jl
ficoms
arpl
out
cmp
pop
xchg
repnz
addb
pop
mov
mov
fnsave
adc
lea
scas
xor
rorl
mov
test
in
insl
xchg
iret
dec
ds
shll
adc
cmp
pop
in
jmp
les
mov
and
aaa
sbb
stc
clc
or
push
scas
sbb
das
shlb
mov
mov
jnp
push
movb
dec
jmp
jo
xor
stos
aaa
dec
xchg
loop
lcall
mov
outsb
sahf
jo
xor
in
inc
add
mov
mov
inc
roll
mov
popf
xor
pop
leave
mov
icebp
xchg
out
ficomps
ss
int3
pop
mov
add
mov
add
sub
dec
jmp
int
lods
fisubrl
arpl
jne
shlb
mov
out
sbb
lds
cmpsl
mov
fwait
jle
push
das
add
add
stc
lods
fsts
test
ret
xchg
test
pop
jmp
mov
mov
cmc
xchg
aaa
cmp
lock
mov
pusha
xor
mov
mov
add
pop
sub
sub
dec
xor
fisubl
mov
jae
aam
and
mov
pop
xlat
lret
lcall
add
jp
data16
add
xchg
rorb
out
jnp
push
lret
add
cmc
jns
loopne
in
ds
imul
pop
ss
mov
shll
xor
sbb
jno
dec
cltd
cmp
push
lock
and
push
lods
xchg
lods
jb
call
xchg
push
inc
pop
iret
cmpsb
iret
cltd
add
loop
or
pop
notb
cmp
test
shl
inc
mov
in
cli
jge
loope
pushw
cmp
mov
pop
outsb
jno
in
fs
xorl
xchg
dec
imul
insl
outsb
lret
shll
mov
and
jne
or
push
imul
movsl
dec
cmp
call
or
jb
push
sbb
or
adc
rcrl
incl
xchg
xor
testb
push
mov
into
push
xchg
dec
test
ret
lods
les
arpl
or
mov
xchg
dec
xlat
mov
dec
adc
xchg
daa
popa
add
sahf
clc
or
cmp
nop
in
test
mov
div
sbb
xor
adc
pop
mov
jmp
adc
cmp
insl
push
mov
into
mov
jle
adc
jl
jb
mov
lods
mov
dec
pop
cmp
lcall
mov
lcall
sarb
mov
mov
pop
cwtl
mov
jmp
loopne
cmpsb
rcrb
add
mov
aaa
das
adc
push
dec
shrl
movsb
ficomps
arpl
cmp
sbbb
idivl
and
mov
xchg
pop
mov
pop
jne
add
incb
repnz
dec
je
cltd
push
repnz
add
jo
inc
fsubrl
bound
jge
inc
lret
sub
and
and
or
test
outsl
cltd
push
cmp
xor
adc
outsl
mov
aad
lcall
xor
add
push
sub
pusha
hlt
add
mov
pop
sbb
mov
fstpt
push
btc
push
or
jmp
jo
xor
std
mov
lds
mov
or
sub
inc
je
fs
lods
std
rep
pop
xchg
jmp
dec
ret
or
std
jns
sbb
jmp
loope
outsl
int3
aad
outsl
inc
mov
aam
inc
cmc
ds
jne
fsin
fadd
addr16
fidivl
adc
and
or
ds
mov
jg
shrl
push
fbstp
push
ss
or
add
mov
and
dec
jns
fs
mov
mov
lea
aaa
adc
iret
cmp
hlt
adc
cmp
mov
adc
mov
pop
dec
or
icebp
adc
loope
push
in
xor
negb
mov
cmp
mov
mov
pop
dec
pusha
dec
inc
sbb
adc
addr16
aas
sahf
fisubrl
cmpsb
sbb
pop
arpl
add
inc
sbb
jp
and
movsl
xor
movsb
and
mov
adc
add
push
test
mov
adcb
mov
add
dec
jg
mov
scas
shl
pop
dec
pop
sbb
sbb
inc
and
fcmovnb
idivl
push
imul
mov
and
ja
pop
js
dec
outsl
push
les
mov
daa
arpl
insb
adc
xor
sbb
add
popa
loop
mov
pop
mov
jnp
into
and
in
popf
mov
adc
add
repz
mov
xorl
lds
hlt
or
repnz
in
dec
ja
movb
pop
and
xchg
enter
cmc
or
jge
push
jp
xchg
push
and
fadds
lret
lret
jno
mov
xor
fldcw
push
and
rcrl
arpl
pop
in
jecxz
pushf
or
cli
in
test
loopne
or
jnp
add
jl
push
pop
pop
sbb
xchg
in
add
mov
sub
int
enter
test
ja
push
sub
push
jg
dec
js
loop
lds
add
movsb
add
mov
pushf
inc
dec
mov
fldenv
inc
mov
cmp
pop
add
pop
and
pop
shll
jecxz
aaa
cmp
xor
aas
adc
push
mov
push
cli
sub
mov
sti
mov
popa
mov
xchg
mov
adc
mov
add
out
xor
lcall
mov
lcall
cmp
xchg
call
movsb
xchg
into
js
xor
xor
mov
mov
sbb
adc
xchg
or
cltd
push
mov
in
shl
mov
mov
andl
push
inc
and
push
negb
sub
fisubrs
mov
cmp
ljmp
ret
sbb
filds
int3
xchg
cmp
add
pop
iret
xchg
lcall
push
adc
sub
xchg
in
mov
dec
add
fistpl
jno
in
push
sub
enter
pop
dec
inc
jbe
jl
lahf
dec
shll
sbb
xor
mov
stos
repz
sti
gs
scas
rcl
cmp
leave
cwtl
mov
dec
pushf
mov
lcall
imulb
dec
mov
mov
subl
iret
add
mov
sbb
in
mov
pop
inc
push
push
leave
dec
sbb
ds
lock
insl
loop
adc
cmp
add
decl
std
push
aas
dec
insb
int3
jno
jbe
fsub
call
jl
mov
pop
sbb
ret
or
mov
dec
adc
xor
and
aaa
xlat
sbb
fistpll
cmc
mov
jae
inc
sti
inc
aam
push
jmp
push
xor
sti
repnz
test
lock
stos
pop
cmp
lds
mov
popa
inc
lods
pusha
stos
sub
xor
enter
mov
or
test
mov
sub
iret
mov
das
mov
push
fs
dec
fstps
aad
sbb
push
stos
rcrb
push
jae
inc
lret
dec
fdivs
push
ds
cli
pop
loop
push
push
xlat
xor
push
mov
ret
arpl
mov
ret
jecxz
push
jb
mov
cmp
les
or
xor
or
inc
lods
in
push
mov
mov
xor
out
xorl
arpl
rcrb
and
paddq
sub
aam
insl
push
cld
les
xor
xor
or
or
mov
push
dec
mov
cmp
xor
xchg
jae
jne
push
sti
fnstcw
dec
movsb
das
mov
lret
push
sbb
data16
add
fidivs
adc
enter
push
xor
jbe
push
dec
sub
shlb
lock
enter
xchg
jb
lea
pop
or
jne
xchg
aaa
add
das
sbb
sbb
mov
out
outsb
and
mov
add
inc
mov
mov
mov
into
incb
lret
jecxz
adc
fdivl
iret
inc
mov
scas
add
into
pop
dec
mov
mov
push
pushf
popa
dec
lds
pop
jg
mov
es
sti
pop
xchg
or
sbb
inc
add
cmp
movsb
lea
pushf
mov
sarb
scas
xchg
call
dec
insb
lds
cmp
sti
in
mov
fmuls
inc
das
dec
dec
test
xchg
popa
xchg
inc
or
aaa
fmull
sub
and
push
xor
icebp
jo
pop
mov
sub
jmp
dec
mov
sub
and
mov
xor
lods
dec
cmc
ss
inc
push
lods
cld
out
call
add
xchg
ds
xor
adc
jae
pop
pushf
pop
es
cmp
loope
fcompl
xor
out
ss
aas
arpl
cmp
int
bound
ja
jne,pt
mov
movsl
test
sub
push
adc
stos
decb
xchg
mov
sbb
adc
fwait
push
cli
ror
sbbl
dec
hlt
mov
xchg
movsl
pop
add
mov
jge
clc
aaa
mov
sbb
cs
es
scas
aam
nop
cmpsl
and
loop
mov
cli
lods
mov
fsubrl
jecxz
jmp
pop
repnz
cs
pusha
loop
mov
pop
outsl
fistpl
fs
int3
adc
lret
int
inc
mov
rolb
xor
cltd
xor
cmp
stos
push
iret
xor
sbb
and
aas
arpl
loop
inc
xor
jae
pop
or
sbb
popa
xchg
pop
stos
and
out
das
mov
into
cmp
jb
xor
xchg
movsb
mov
lods
mov
adc
mov
mov
dec
adc
in
shlb
sbb
stos
xchg
sub
dec
roll
mov
sub
pop
mov
mov
pop
lods
out
pmulhw
sti
test
add
xor
lahf
cmp
ss
dec
hlt
cltd
insb
mov
and
adc
testb
adc
push
sub
push
repz
mov
pop
sub
test
jg
mov
dec
and
and
and
test
mov
insl
call
popa
dec
push
push
lods
adc
jnp
pop
or
xchg
shl
bound
repnz
xor
into
mov
dec
scas
cs
push
mov
mov
pusha
push
mov
jl
into
jbe
lock
movsl
icebp
cmp
and
pop
and
cld
xor
test
and
test
jl
outsl
cmp
movsl
jecxz
mov
sbb
jecxz
jle
xchg
sub
hlt
int
lock
call
lock
push
stos
jb
jmp
inc
rclb
repnz
sahf
rcrb
leave
mov
fwait
add
add
inc
mov
jl
pop
sbb
jmp
pop
lock
pushf
xor
cmpsl
xorl
add
outsb
jmp
mov
push
or
mov
leave
add
lods
loopne
mov
cmp
fcoms
ljmp
adc
iret
push
mov
push
leave
iret
dec
or
or
bound
xchg
cltd
push
pop
push
fbstp
ds
repnz
jmp
imul
xchg
xchg
mov
xchg
dec
push
mov
pop
iret
daa
in
fcom
add
cmp
test
lea
jne
ljmpw
cmp
jbe
ljmp
clc
pusha
jo
and
outsl
xchg
mov
sub
dec
add
je
iret
push
movsb
cmp
popa
sbb
mov
push
jne
scas
ficomps
adc
std
add
mov
or
push
ret
sub
mov
into
cmc
mov
jbe
push
ljmp
mov
movsb
xor
out
popa
jae
aas
sub
jbe
rcll
mov
mov
les
jae
adc
shlb
xchg
cld
insl
lahf
loopne
lahf
inc
sbb
sar
fadds
imul
stos
mov
add
mulb
insl
sbb
xchg
in
jns
push
rclb
cmpsb
push
lds
mov
pop
push
mov
movsl
cmp
lret
push
jmp
adc
cltd
in
mov
pop
and
sbb
add
in
ds
mov
lret
shrb
outsl
ret
pop
movsl
sbb
incl
jle
jno
mov
divb
jns
mov
push
push
or
mov
push
push
int3
loope
clc
loopne
rclb
add
in
mov
es
cli
mov
pop
in
ret
jecxz
adc
adc
data16
imul
lea
aam
push
mov
xchg
mov
pushf
in
fcmovu
jae
pushf
pop
cmp
test
arpl
jge
stos
pop
insl
xchg
in
scas
add
cmpl
add
cmp
movb
dec
ljmp
movb
push
dec
test
fsubl
scas
icebp
jge
imul
insl
lret
and
sub
xchg
xchg
imul
stc
pop
enter
dec
jg
daa
sub
stc
inc
stos
repz
popf
adc
daa
xchg
dec
mov
inc
add
cmp
lret
inc
mov
test
xor
and
loop
and
mov
xor
pushf
push
inc
sub
or
ret
pop
cltd
xor
aam
std
mov
rcll
push
inc
mov
xor
cmp
mov
xchg
xor
push
xchg
mov
fsts
ljmp
inc
lahf
cmp
ljmp
ret
fwait
aad
pop
mov
fcmovnb
js
popf
push
pop
aad
adc
mov
cmpsl
mov
roll
outsb
mov
lods
xor
sub
xchg
mov
sub
test
add
dec
adc
insb
mov
add
xchg
lret
jmp
shlb
inc
mov
lock
jno
sbb
pushf
in
mov
paddsw
shll
jle
mov
insb
jo
jno
pop
mov
cwtl
inc
pop
test
shll
ljmp
aaa
xchg
inc
sub
jg
mulb
lods
fisubl
sub
jmp
lea
mov
cld
push
fnstenv
mov
pop
pusha
xchg
fistpl
inc
jae
mov
test
aaa
lods
clc
pop
hlt
inc
out
mov
mov
add
gs
xchg
jnp
scas
add
scas
out
in
in
cwtl
and
stc
fsubl
aam
or
mov
sahf
imul
lahf
sub
cs
outsl
pusha
es
pop
jp
lods
lcall
je
xlat
jns
lods
jbe
add
xchg
inc
push
iret
mov
mov
and
imul
gs
inc
jbe
xchg
xor
mov
or
pop
cltd
pusha
rcr
aad
jge
mov
lret
dec
mov
sbb
popf
push
ljmp
lds
ret
mov
lods
aas
cmovs
adc
aad
mov
cmp
mov
cmpsl
loop
mov
sub
and
repnz
popf
jb
jo
xor
sub
xchg
mov
cmpsb
mov
jb
xor
fisttpl
inc
fs
xchg
mov
dec
sub
dec
faddl
lods
xchg
adc
xchg
test
jo
push
stos
leave
test
ljmp
into
pushf
mov
imulb
mov
mov
sub
mov
sub
lret
fisubl
js
add
jne
xchg
in
mov
cmc
rorl
cld
xchg
sub
cmp
cs
inc
xchg
mov
in
inc
inc
jecxz
mov
int3
pop
mov
push
jmp
pop
icebp
jbe
mov
jge
push
repnz
inc
jp
adc
pop
shll
mov
jo
jg
jo
addr16
lods
hlt
jo
dec
jg
fbld
test
mov
iret
faddl
mov
fucomp
push
dec
movsl
and
idivl
pop
std
jmp
cltd
lret
lods
ja
mov
mov
lods
xchg
fadd
mov
jg
lea
pusha
or
movsl
jbe
aam
jmp
pusha
fsubs
daa
adc
test
std
xchg
xlat
rcl
push
add
divl
mov
es
push
lods
and
lcall
test
bound
jbe
sarl
cmp
imul
aas
jbe
sub
in
test
dec
es
add
jbe
sbbb
aas
lods
ss
xor
call
es
add
loopne
cmp
les
and
xlat
in
cwtl
sub
xchg
ss
das
lahf
dec
mov
in
fsts
rorl
push
jl
sbb
test
int3
dec
sbb
inc
pop
adc
insb
fnsave
jbe
add
jns
cmp
push
push
jle
inc
repnz
jmp
cmc
inc
add
test
or
add
inc
adc
lock
mov
lods
shlb
xor
leave
mull
insl
rorl
in
gs
add
neg
shr
xor
or
iret
out
xchg
fistpll
push
bound
bound
dec
cld
call
xchg
add
sbb
xchg
xlat
bound
sarl
inc
clc
mov
cmp
arpl
jp
test
fistpl
iret
add
rorl
inc
dec
and
pop
out
pop
pop
loop
xchg
mov
popf
pop
rcll
jmp
sub
mov
cmp
sub
cmpsb
daa
mov
fcomip
es
cmpsb
jo
and
xor
rcrl
cs
push
nop
bound
xlat
or
and
fs
xchg
pop
loope
je
sbb
movsl
leave
lahf
clc
inc
fs
gs
cli
or
pop
testb
fdivr
stos
bound
arpl
in
mov
mov
pop
jmp
mov
std
lea
into
rolb
jmp
dec
outsl
push
scas
jmp
xor
sub
add
enter
sbb
mov
in
and
fwait
jno
xchg
jge
fnstsw
inc
jae
pop
adc
pop
jge
fsubp
mov
mov
push
aad
xor
xchg
test
std
xchg
lcall
in
leave
xchg
ljmp
mov
into
test
push
xchg
jns
sub
dec
enter
push
ss
loop
jo
pop
mov
fildll
jmp
rol
sbb
idivb
adc
lahf
addr16
push
mov
mov
out
leave
leave
mov
sub
dec
xor
std
push
fimuls
lret
mov
dec
dec
or
jae
cmp
xchg
mov
test
rol
pop
dec
xor
adc
and
add
dec
sub
inc
stos
jge
nop
clc
int3
daa
and
ret
sbb
xor
cmp
inc
pushf
mov
sahf
jae
movsl
inc
es
mov
inc
call
or
cmpsl
mov
jl
rcrb
cwtl
mov
jle
xchg
sub
iret
stos
inc
es
sbb
or
lock
pop
xchg
call
fsubp
test
push
inc
sbb
cltd
pop
sub
xchg
cltd
and
inc
lock
fst
pop
adc
imul
pop
fsubl
dec
mov
add
push
andb
ds
imul
fs
and
pop
addr16
push
jle
mov
lahf
rol
addr16
jne
dec
bound
push
das
jmp
insb
inc
adc
iret
sbb
in
movsl
jge
adc
cmp
stos
jle
insb
popa
pop
adc
xchg
sub
out
add
enter
sub
adc
mov
sub
std
mov
adc
hlt
popf
jmp
fisubrl
and
pusha
sub
and
xchg
pop
test
fistpll
mov
loopne
mov
xor
loop
cmpsb
rolb
adc
das
mov
push
push
mov
pop
imulb
add
shl
call
fimull
sbb
test
and
or
sbb
jg
cwtl
outsb
mov
iret
adc
rcl
stos
test
pop
mov
jmp
sbb
jo
xchg
rolb
mull
pop
mov
imul
inc
int
push
xchg
sub
leave
loope
movb
in
push
ret
fadds
and
inc
inc
sub
int3
sub
and
mov
add
pop
popf
mov
mov
sub
or
ss
and
sti
cmp
add
cmp
sti
adc
push
pop
or
imul
in
shrl
rorl
adc
outsb
jle
mov
mov
popa
es
pop
insb
stc
movsl
pop
in
leave
mov
pop
mov
lret
xchg
test
fcoms
xlat
jle
or
out
jle
add
inc
movsb
push
inc
scas
outsb
fsubr
xchg
xchg
jecxz
and
push
and
test
push
xlat
loop
xchg
test
insb
jo
or
scas
lret
mov
dec
movsb
push
movsl
mov
cmp
adc
push
sub
inc
push
pop
or
dec
sbb
mov
adc
loop
pop
ret
jne
testb
add
inc
repnz
mov
sub
outsl
push
pop
pop
or
sbb
jl
lret
inc
mov
mov
cmp
xchg
add
dec
ss
ss
jns
mov
test
lds
out
or
cmp
inc
call
in
or
xor
mov
xchg
cmp
loopne
cmp
in
mov
xchg
pusha
lret
ds
rcrb
fwait
aas
push
pop
pop
in
pop
nop
push
mov
mov
mov
aam
xchg
scas
pop
adc
fsubr
iret
cltd
adc
icebp
jae
test
or
add
adc
push
add
ret
push
outsb
cmpsb
xor
sub
xor
lds
mov
aad
mov
push
jno
jp
sbb
inc
pop
cmpsl
lods
iret
jo
ljmp
ljmp
mov
inc
pop
int3
inc
in
fstpt
add
cs
and
push
jns
cli
and
mov
mov
add
cwtl
std
mov
pop
test
mov
mov
mov
addr16
data16
dec
out
rorb
jo
aaa
cld
dec
cmpsl
insb
es
test
loope
inc
lds
lods
xchg
pop
push
ja
lahf
mov
sub
lock
ret
mov
jns
add
stos
or
stc
aaa
inc
push
sbb
out
loop
mov
xchg
andb
or
jno
cwtl
pop
mov
hlt
or
mov
pop
mov
subl
call
fwait
lret
jmp
rcll
jbe
inc
js
fidivl
cmp
pop
mov
dec
sbb
shll
faddp
push
jno
adc
mov
aam
fsubrs
popf
mov
cmp
cwtl
sub
mov
inc
pop
xor
xor
mov
aaa
push
cmp
mov
andb
adc
mov
les
mov
jns
cmp
jg
mov
flds
and
shl
shll
mul
inc
insl
or
aas
mov
mov
fsubs
icebp
std
je
add
jo
pop
test
arpl
mov
push
pop
fldcw
xchg
arpl
nop
or
and
sbb
add
loopne
sub
ds
int
xchg
subl
xchg
push
lock
xor
jno
cmp
bound
inc
arpl
xchg
mov
xor
nop
sahf
ss
out
xorb
fimuls
clc
bound
scas
aam
mov
cmp
sbb
xchg
mov
inc
inc
inc
mov
pop
std
and
cmp
jns
pop
lock
scas
stos
pop
add
fcmovnu
mov
push
inc
fmull
idivl
sub
fwait
mov
ja
push
fs
sub
mov
inc
popf
mov
and
mov
imul
xchg
and
test
cmpsb
icebp
sbb
ja
inc
aam
mov
sub
outsb
loop
cmp
push
mov
sub
push
outsb
dec
xor
fdivs
sahf
inc
mov
shl
or
addr16
leave
lods
rclb
stos
pop
ja
lret
xchg
push
or
stc
pop
and
bound
jle
shl
cld
or
out
lods
cltd
sub
stc
pop
ds
sub
fstpt
dec
and
lods
xchg
dec
ficompl
sbb
dec
sbb
sub
dec
xor
mov
fisttps
flds
inc
inc
mov
xchg
sar
xlat
sbb
jge
std
stc
in
pop
lahf
adc
movsw
std
into
cmp
mov
pop
lret
and
das
cld
push
and
mov
pop
cwtl
fisubrs
xchg
pop
adc
cs
jo
icebp
stc
jl
insb
fistl
jae
or
cmp
pop
xchg
daa
jmp
pop
xor
lret
sti
pop
sub
test
jmp
movsb
mov
clc
ja
jae
ret
lock
gs
shlb
loopne
stos
mov
push
xlat
addl
inc
pusha
mov
lahf
adcl
mov
inc
dec
add
sbb
dec
pop
push
test
ds
hlt
dec
divl
pop
jo
push
cwtl
jmp
leave
dec
mov
push
rorb
dec
fsubl
divb
jo
shlb
jbe
mov
insb
jp
loop
cmp
cmp
lcall
repnz
lods
cmp
ret
outsb
dec
movzbl
push
pop
cmp
dec
push
test
scas
jge
sti
mov
jp
sti
pop
pop
iret
bound
in
sbb
mov
jns
ja
xor
push
out
cld
test
cmp
cld
test
les
push
cmp
dec
fcmove
pop
mov
pop
xorb
lret
pop
mov
sahf
aad
dec
test
cmp
ja
bound
mov
popa
xor
lret
testl
mov
lods
add
scas
shrl
call
mov
inc
jg
push
jne
cwtl
sbb
mov
imul
aas
int
fimull
shrl
mov
cmp
mov
popf
add
sub
push
sbbb
pop
inc
js
idivl
mov
mov
insb
pop
push
std
cmpsl
fnstcw
push
addr16
xchg
pushf
pop
xor
xchg
fwait
call
in
inc
push
hlt
or
xor
jns
push
mov
push
mul
or
and
sbb
testb
mov
push
push
sbb
movb
fcoms
lcall
xchg
jle
enter
sub
mov
sti
nop
jge
xchg
call
ss
pop
sarl
in
sub
nop
push
jl
adc
mov
sbbl
div
int3
xor
leave
cld
shrl
push
shll
sub
pop
mov
in
add
iret
sbb
xor
and
ss
test
lods
clc
repz
dec
repz
je
std
xor
test
adc
lahf
dec
inc
into
test
sti
insl
jb
xor
icebp
scas
pushf
mov
test
or
mov
inc
std
xor
lcall
notl
push
jmp
lret
sub
ds
push
adc
rorb
sbb
out
mov
gs
cmp
jb
xchg
dec
rcl
out
adc
cmp
jne
xor
addb
dec
out
jbe
mov
repnz
xchg
inc
fnstcw
xor
inc
rol
sbbl
lods
shrl
ret
inc
fcomp
jmp
imul
mov
xchg
bound
lods
push
and
lahf
fs
xor
and
call
mov
or
inc
cmpsl
ret
xchg
rcl
scas
in
push
xchg
xor
xchg
mov
dec
mov
fdivrs
mov
fdivl
jp
cmp
push
roll
add
aas
mov
mov
imul
repz
test
lret
pusha
mov
sbb
loopne
lods
daa
jns
js
sub
scas
popl
fsubl
cwtl
adc
sbbl
or
out
iret
mov
loop
add
leave
test
lcall
xchg
or
xchg
cmp
into
stc
push
mov
es
push
lahf
movsb
dec
add
testl
and
jp
jb
xlat
cltd
dec
add
pop
ret
iret
in
mov
int
xchg
mov
mov
add
mov
mov
lock
out
inc
pushf
xor
xchg
bswap
add
int
mov
xor
scas
popf
mov
outsl
mov
push
paddd
fwait
push
xor
out
fwait
inc
pop
fdivl
ja
push
fistpll
sbb
inc
fwait
std
insl
lahf
push
das
out
dec
rcr
subb
pop
cwtl
bound
and
jecxz
pop
mov
test
insb
xchg
inc
popf
xchg
mov
ljmp
out
push
test
xor
and
sarl
aaa
in
incl
push
test
add
and
mov
mov
lock
cmp
mov
test
popa
mov
scas
add
push
gs
loop
add
adc
js
cmpl
jns
push
and
or
push
push
mov
push
lahf
or
jle
xor
mov
push
xchg
cli
daa
xchg
sub
mov
mov
mul
sbb
mov
xchg
mov
mov
jno
add
das
ljmp
frstor
arpl
push
mov
scas
xor
mov
push
jmp
sti
mov
adcb
subb
cmpsb
add
cmp
test
in
fucomip
xchg
test
test
add
pushf
cli
xchg
jp
inc
inc
sbb
cmc
mov
pushf
dec
adc
in
inc
and
mov
fistps
test
cmp
nop
jp
es
enter
nop
add
lret
xor
add
lods
ja
mov
lret
shlb
sub
pop
imul
enter
popa
outsb
inc
fbld
push
pop
shlb
dec
push
icebp
test
incl
and
cmp
push
clc
xchg
jmp
sti
inc
sbb
in
add
jle
lret
in
lahf
xchg
pop
jg
xchg
subb
adc
ljmp
stos
sub
sub
lods
popa
cltd
rcrl
iret
js
outsl
das
sbb
sub
push
inc
fsubs
fdivrs
sub
subb
pop
pop
mov
xchg
sub
pop
filds
popa
hlt
and
imul
and
push
mov
nop
xchg
xchg
fs
mov
in
in
mov
sub
xor
jns
repz
push
xchg
les
mov
xchg
stc
xchg
jne
push
sbb
test
mov
out
mov
in
xor
int3
es
mov
das
outsb
mov
cwtl
xor
inc
sub
xchg
sub
dec
fnsave
ds
xor
push
push
lret
rcl
sbb
pop
xchg
jo
cld
and
mov
xchg
std
call
test
dec
test
adc
sti
sub
jmp
lret
fisttps
jo
popf
cltd
inc
mov
idivl
fdivs
xchg
pop
xor
addr16
shrb
pop
and
jp
pop
sbb
push
xor
sub
pushf
aas
fsubrp
inc
add
lahf
cli
mov
cmpsl
pop
xor
cld
pop
mov
xbegin
das
icebp
aaa
sbb
insl
push
sub
mov
bound
mov
xchg
out
add
pusha
jb
ffree
and
insl
loope
fstps
loop
sbbl
pusha
mov
fsubrs
cmp
fucomip
cltd
in
cmp
inc
ret
pop
jge
movb
adc
push
fisttpll
mov
stos
lret
stc
sar
jae
pushf
xchg
addb
outsl
and
xchg
iret
mov
movsl
xchg
cld
addr16
das
cmp
lcall
arpl
mov
mov
movl
xor
das
dec
repz
mov
inc
stos
sbb
sbb
xor
stos
cltd
xor
lods
je
push
inc
adc
das
hlt
fstp
jnp
mov
cli
mov
or
xor
and
cltd
sub
repnz
and
cmpsb
or
fisubl
lods
jmp
jb
mov
or
jmp
sbb
cmpsl
and
stc
add
pop
fwait
test
ss
into
jp
adc
lods
sub
insl
xor
cs
sbb
pop
incl
mov
aas
in
gs
add
xchg
mov
lahf
sti
dec
mov
push
gs
cmp
or
push
roll
pusha
add
mov
or
add
fsubp
sbb
scas
adc
sbb
jg
sahf
add
sahf
imul
dec
je
std
dec
cvtps2pi
ljmp
sub
sahf
aam
pop
mov
pop
mov
aas
jbe
ljmp
and
dec
mov
and
mov
mov
and
dec
add
mov
or
in
pop
out
xchg
pop
xor
mov
or
inc
pop
pushl
pusha
ffree
sahf
lds
sbb
pop
adc
incb
setae
movsb
outsb
mov
sub
lahf
mov
inc
push
iret
and
xchg
stc
cmpsb
fnstcw
les
aaa
mov
xlat
ds
dec
lods
cmp
lods
loop
sbb
sbb
imul
sub
sub
ljmp
lret
mov
sub
test
pop
xchg
push
adc
repnz
leave
dec
retw
mov
imul
dec
into
and
jbe
divb
cmpl
fmul
add
das
cmp
jge
cwtl
or
sarb
sbb
xor
cs
dec
add
mov
push
sbb
cmp
xor
cmp
inc
sbb
inc
scas
mov
int3
or
mov
sbb
stc
adc
inc
pop
mov
cmp
xchg
scas
adc
fcoms
inc
pop
xchg
insl
ret
xchg
out
data16
testl
out
xchg
in
pushf
fldl
ret
cmpsl
filds
cmp
mov
jp
sbb
movsl
lea
inc
pop
loopne
cld
je
xorb
sub
fld1
mov
inc
data16
xchg
xchg
mov
or
test
xchg
shr
and
sbb
es
iret
std
nop
je
push
pop
pop
xorl
in
or
add
xchg
add
mov
loopne
ljmp
push
mov
test
jge
mov
cmp
mov
jae
addl
add
xor
pushf
and
xchg
ljmp
pop
cs
add
adc
cmp
rcll
inc
aam
inc
mov
mov
stos
mov
in
push
add
add
sub
push
sub
iret
data16
push
in
nop
mov
mov
out
adcl
mov
pop
adc
cmp
add
fs
test
push
pop
pop
aaa
or
mov
mov
cmp
mov
lea
jg
xchg
adc
mov
hlt
nop
imul
out
lods
repz
das
roll
add
mov
add
mov
jns
loopne
fcompl
sub
xchg
pop
sub
mov
sbb
and
adc
sbb
push
repz
dec
xlat
loopne
and
push
popa
xorl
adc
add
inc
stos
inc
mov
push
icebp
xor
inc
xor
add
cs
loopne
repnz
mov
sarl
xor
inc
mov
nop
pop
push
cmc
call
fidivl
mov
add
jno
or
nop
jo
test
mov
bt
mov
push
or
and
or
fisubrl
xorl
push
adc
stc
mov
xchg
push
jns
sbb
or
sahf
stc
testb
fsubrs
mov
jns
sub
aam
jle
push
cmp
dec
out
cld
jl
mov
mov
loope
mov
stc
mov
cmp
xchg
or
mov
ret
dec
push
in
jg
mov
xor
add
lret
fwait
xchg
pop
add
jnp
aad
adc
lods
ja
mov
movsl
sti
fidivs
jnp
push
mov
mov
push
cwtl
ret
call
add
mov
push
call
shrl
and
iret
ds
rcrb
divb
les
outsb
lods
pop
sbb
mov
mov
mov
sti
imulb
iret
ret
into
rclb
jge
inc
push
sub
sbb
jbe
xor
hlt
bound
mov
xor
cmpsl
repnz
aas
cltd
push
push
inc
add
movsb
imul
sahf
xor
fdivrl
cmp
int3
fdivs
rol
and
enter
and
pop
or
andl
inc
test
pop
gs
popf
fcmovne
adc
sbb
pop
mul
pushf
pop
gs
and
mov
pop
out
and
xor
out
out
call
inc
xchg
push
sbb
or
mov
sbbb
push
add
cmp
ret
popa
pop
lods
aaa
xchg
test
push
mov
lret
dec
lea
ds
popl
fcoms
adc
push
lret
je
mov
movsl
xchg
inc
fmul
in
rcrl
insl
pop
out
push
xchg
cld
pop
movsl
scas
inc
ret
ret
lret
jle
fwait
jp
mull
and
sbb
int3
push
lea
das
ja
xor
notl
aam
sub
push
andb
inc
mov
pop
into
xchg
xor
mov
mov
loopne,pn
scas
rolb
pusha
sbb
movsb
mov
rorl
ret
fwait
outsl
mov
xor
mov
out
aas
push
cmp
shll
xchg
mov
nop
sahf
std
popa
add
es
add
arpl
lret
xor
inc
js
les
or
and
xchg
mov
dec
jl
xor
lock
mov
pop
loop
cmp
mov
cwtl
shl
dec
int3
popa
pushf
dec
notl
hlt
fists
sub
or
sub
push
cmp
xor
xchg
adc
scas
rorl
addr16
gs
pop
lcall
gs
scas
sarb
xor
push
test
xchg
push
enter
xchg
imull
push
add
xchg
jne
das
aas
cmpsb
mov
and
sahf
xchg
dec
xor
movsl
lret
mov
in
pop
in
jb
mov
mov
dec
jle
rorb
negl
sahf
test
cmp
xchg
cmpsl
mov
adc
rolb
pop
mov
adc
leave
jmp
dec
rcll
adc
insb
push
jle
push
jno
insb
leave
push
add
inc
jns
mov
mov
scas
mov
push
iret
test
adcb
mov
jmp
add
cwtl
push
nop
jo
dec
imulb
call
push
mov
fcomi
fisubrl
fldcw
js
fcoms
jo
or
dec
cmpsb
xorb
push
xor
loopne
push
imul
sub
xor
xor
add
mov
adc
rorb
sub
fwait
hlt
ljmp
mov
iret
andl
lock
std
scas
out
push
movsl
cmpl
dec
popa
lods
mov
fs
mov
les
lods
idivl
sbb
adc
cmpsb
cmp
les
sub
inc
stc
testl
fcmovb
sbb
sbb
mov
cmp
push
faddl
sub
sub
xchg
jne
push
jg
aad
xchg
and
and
xchg
mov
daa
shl
cmp
imull
adc
and
sub
arpl
lea
mov
test
jb
addr16
andb
inc
fldl
xor
jae
test
mov
hlt
xor
push
icebp
dec
xor
out
and
lret
sbb
jb
xor
fisttps
push
test
sbb
xor
mov
in
or
test
aas
jg
inc
adc
dec
ret
sbb
pop
inc
sbb
jp
jl
or
xor
lods
adc
ds
ficoms
ucomiss
push
or
add
lds
rcll
and
fwait
adc
fisttpll
scas
out
lock
lock
xor
xchg
xchg
lods
aam
xor
jmp
je
add
fnstenv
add
and
repnz
imul
dec
std
movsl
and
aam
lock
mov
pop
js
mov
imul
xor
push
pop
jmp
lahf
sbb
ret
cmp
xchg
je
ljmp
push
cmp
mov
mov
sbb
xor
jns
into
inc
jg
pop
in
and
mov
push
out
adc
popf
and
gs
push
mov
shlb
inc
mov
mov
rorb
dec
add
push
hlt
test
pop
push
add
sbb
pop
and
test
adc
outsb
add
imul
dec
cmp
mov
adc
or
add
cmp
push
mov
sbb
mov
pop
cmpsl
push
dec
add
push
mov
mov
push
repz
add
sbb
mov
mov
cmp
xchg
dec
pop
out
mov
in
sbb
and
cs
imul
mov
je
push
stc
mov
inc
imulb
inc
or
or
adc
sti
pop
cmp
pop
dec
or
cmpsl
lret
popf
pop
or
add
in
cltd
jecxz
jmp
lods
mov
repz
jl
insl
push
testb
orl
aam
call
sbb
pushf
fsubs
psadbw
xchg
loop
sub
popf
testb
pusha
jo
sub
and
stc
dec
rcr
dec
cmp
lcall
ret
and
push
jne
shl
imul
roll
rorl
mov
lods
dec
je
negb
lods
cmpsb
cwtl
jae
ret
jb
repnz
enter
lcall
in
out
xchg
stos
push
or
jo
hlt
insb
push
add
jmp
push
shrl
fstpl
pop
bound
sti
pop
sub
cltd
pop
and
jecxz
repz
loop
mov
aaa
add
and
dec
add
mov
xlat
cli
sub
clc
imul
jl
loop
mov
loopne
scas
adc
xchg
fimuls
sbb
mov
mov
jno
iret
sub
lahf
xor
clc
add
inc
inc
aas
dec
cmp
lds
push
mov
stc
push
lock
pop
xor
xor
jbe
and
sahf
pop
xor
imul
ss
cmpsb
cmpsb
jmp
insb
mov
das
adc
fcmovu
mov
pop
push
fwait
ret
mov
iretw
xor
mov
sbb
jno
mov
add
ret
pushf
fdivrl
xor
cwtl
lds
mov
inc
icebp
cmc
jge
dec
jb
pop
jl
jno
or
int3
push
andl
jl
xchg
ja
pop
sub
inc
sub
inc
stc
fldl
mov
xchg
sahf
lock
inc
imul
xchg
pop
fistps
cwtl
fsubp
mov
xchg
imul
cmp
cs
in
push
jle
ja
or
dec
xchg
stos
scas
outsl
cmp
in
outsl
xchg
cmp
mov
fcmove
adc
jno
push
xchg
sub
int
xor
sbb
jae
push
xchg
xor
gs
mov
mov
test
xor
jns
popf
xchg
adc
pop
je
lret
mov
mov
and
nop
rclb
test
sahf
sbb
push
mov
jmp
sbb
popa
or
cmc
lret
mov
cmp
sbb
les
or
or
in
push
xchg
insl
and
mov
mov
sub
and
push
outsb
fidivrs
aam
sbb
xchg
adc
cmpsl
inc
adc
xor
pop
bound
in
jnp
xor
mov
outsb
mov
pop
inc
mov
mov
ja
fistpl
jecxz
push
mov
xchg
cmc
notl
cmp
mov
push
movsl
mov
outsb
js
insl
pop
rorb
rclb
mov
push
lods
nop
dec
jl
jb
or
repnz
fsubrl
push
hlt
js
push
jnp
cmpsb
enter
cwtl
stc
rcl
fwait
jge
icebp
add
repnz
add
std
xchg
push
sbb
jbe
xor
fistpl
mov
aam
cmp
ror
ret
test
xchg
nop
xor
dec
out
lahf
leave
inc
xchg
lret
adc
pop
daa
int3
pop
pop
cmp
dec
xchg
ret
mov
mov
ret
aas
test
cmpb
jmp
mov
cmp
inc
sub
push
xor
js
test
xlat
out
outsl
aam
in
push
add
mull
movl
call
sub
out
mov
or
sub
or
fisttps
mov
sub
scas
out
leave
fnstcw
mov
fdiv
insl
clc
sbb
dec
add
lock
in
daa
call
add
and
sahf
add
add
inc
cmp
xor
jno
sbb
aaa
orb
imul
insb
popa
sbb
mov
les
fnstenv
sbbl
pop
mov
mov
jmp
scas
jno
add
xor
clc
addr16
loopne
mov
sub
mov
in
sub
push
das
mov
pusha
add
dec
shll
cmp
xorl
xor
push
cmp
fists
mov
jbe
js
add
jmp
js
fs
imul
lods
and
mov
dec
addr16
flds
and
adcl
mov
push
xacquire
jg
stc
arpl
push
adc
cmpb
xchg
sbb
jb
adc
lods
jge
sbb
lods
outsl
call
sar
xor
filds
ljmp
add
adc
adc
mov
shlb
xlat
add
leave
add
and
add
add
push
ret
lea
sbb
mov
sbb
stos
cwtl
sbb
sub
adc
out
cmp
and
mov
adc
and
sub
stc
loop
andb
ret
ficoml
xor
adc
decb
xchg
test
pop
icebp
int
fucompp
push
aas
lods
ret
lods
data16
aaa
jl,pn
inc
inc
out
daa
inc
pushf
ja
shlb
xchg
mov
daa
pop
sub
orb
cld
enter
jg
movsb
xor
fstpt
dec
hlt
mov
mov
push
in
or
sbb
in
lock
xor
xor
outsb
decb
push
xor
mov
mov
lods
mov
sarb
jbe
adc
and
imul
xchg
jne
mov
int
test
lock
sub
test
pop
mov
loop
fmull
add
stos
sbbb
push
adc
pop
cld
mov
movsl
mulb
sbb
push
fcmovne
add
adc
jae
inc
jecxz,pn
jp
mov
loop
orb
mov
test
cwtl
mov
xchg
jo
mov
jge
in
ja
sbb
hlt
push
into
mov
xor
clc
mov
out
jmp
insl
jbe
jg
pop
into
out
test
mov
jg
inc
push
xchg
cmp
push
rcrb
mov
pop
ret
and
fwait
in
stos
js
leave
lret
lods
adc
jnp
push
xchg
sbb
mov
inc
adc
xchg
fldlg2
faddl
inc
xlat
into
jno
cmp
jmp
sbb
push
or
xchg
mov
ja
rorb
arpl
lock
sub
jne
add
sbb
jmp
repnz
sbb
add
push
xor
add
cld
js
dec
int
cmp
lock
lcall
lds
xlat
jnp
pop
lahf
mov
fidivl
mov
test
call
mov
outsl
ja
arpl
in
roll
pop
inc
inc
mov
int
add
insb
jbe
mov
daa
lods
fs
pusha
pop
cld
jg
inc
fst
adc
fcomi
push
xchg
adc
mov
jecxz
sub
add
std
stc
jnp
rclb
incb
jo
out
adc
fildl
jnp
push
int
cli
jle
into
pop
pop
les
lock
and
push
dec
mov
mov
and
dec
loop
ss
jecxz
in
pop
jp
lods
inc
dec
mov
adcb
rcrl
pop
mov
mov
dec
cmp
sbb
jg
sbb
scas
inc
sbb
lea
test
cmpsl
icebp
rclb
loop
fdivrl
and
hlt
scas
push
mov
mov
gs
shlb
fs
stos
xchg
icebp
fmull
mov
xchg
jnp
scas
mov
pop
adc
mov
lea
test
sarb
pop
pop
cmpsl
popa
stos
out
stos
mov
xor
jg
mov
cwtl
enter
xor
mov
mov
jne
jecxz
popf
ljmp
add
push
jns
mov
jle
push
push
sbb
mov
mov
std
xchg
sub
test
jb
mov
sbb
rcrb
push
sahf
push
insl
out
push
cltd
mov
sub
lret
inc
mov
inc
mov
rorl
cmpsl
mov
mov
test
push
and
out
push
mov
adc
cmc
movsl
ljmp
shll
rol
pop
leave
addl
jo
xchg
loop
cmpsb
push
mov
bound
push
rcll
shll
pushf
stc
ss
insb
fs
sbb
negl
push
insb
test
jno
loope
mov
jae
pop
lahf
rcll
xchg
sbb
adc
add
sbb
and
mov
sbb
push
xor
inc
and
mov
mov
out
xor
pmaxsw
sbb
add
jnp
xchg
scas
loop
movsb
ja
frstor
or
les
or
es
frstpm(287
cmp
or
out
addr16
daa
xchg
addr16
pop
mov
roll
into
out
xor
xchg
loopne
js
rolb
fcompl
xor
sub
into
into
pusha
call
cmpb
sub
inc
fiaddl
xor
je
imul
xor
repnz
xor
xchg
dec
dec
pop
je
sbb
push
movsl
les
xor
and
adc
cmp
rcll
lcall
idivb
xchg
add
fsubrl
icebp
xchg
cmpsl
add
fildl
mov
mov
ds
nopl
test
out
pushf
loopne
adc
mov
cltd
pop
sahf
xor
or
das
mov
jp
jg
inc
adc
ret
push
push
mov
adc
xor
cmp
fwait
mov
push
or
testl
lret
icebp
xor
inc
shl
dec
xchg
in
xor
inc
das
sbbb
inc
imul
fldenv
cmc
shll
je
lds
pop
aam
push
dec
negb
cltd
lahf
mov
outsb
xchg
ret
nop
fs
xchg
push
mov
push
pop
adc
sbb
popa
jno
xor
shl
in
loope
in
mov
push
inc
jmp
mov
sbb
xchg
cmp
or
mov
aad
mov
sbb
xor
sbb
push
lahf
sarb
mov
mov
push
les
lret
dec
lret
cmp
inc
xor
or
and
pop
cmp
stc
fisttps
jecxz
push
xchg
aaa
fwait
clc
je
mov
pop
mov
sahf
push
xchg
add
mov
xlat
mov
inc
sub
in
mov
push
loope
lock
adc
cmpsb
jge
lret
pop
mov
test
fs
fdivs
adc
ds
shll
imul
pop
fists
pop
adc
hlt
and
aaa
fcomi
and
adc
gs
scas
xor
mov
lock
aas
shll
stos
add
lea
xlat
rorl
mov
jecxz
mov
aam
arpl
mov
sub
mov
sbb
loop
and
xor
inc
outsl
rcrb
pop
leave
pop
jle
stos
sub
pop
loopne
jne
imul
addr16
hlt
ret
stos
dec
sbb
or
lcall
pop
out
adc
jbe
jmp
imul
gs
ficoms
sbb
mov
ljmp
les
in
ds
rolb
jg
iret
add
xor
mov
test
xchg
push
sarl
mov
dec
addr16
dec
sub
aaa
mov
cmc
repnz
sbb
pop
jnp
push
add
loop
add
std
sbb
jns
cmp
fisttps
fildl
adc
sbb
mov
jne
mov
daa
test
mov
addl
loop
pop
pop
add
mov
sub
adc
arpl
xchg
push
adc
cli
popa
movsb
lock
pop
shrb
icebp
jmp
addl
pushw
jns
mov
stos
in
dec
roll
incl
adc
xchg
or
jnp
shl
jl
add
xor
adc
mov
adc
xchg
sti
and
fnsave
push
adc
int
das
and
icebp
inc
push
dec
and
xchg
test
sahf
clc
repnz
push
sbb
orl
fwait
mov
xor
aad
leave
sub
gs
mov
shlb
add
lock
imul
rorb
dec
dec
arpl
scas
std
repz
push
dec
mov
ja
dec
push
mov
sti
ja
cmpsl
and
sub
mov
mov
sbb
aam
je
int
movsb
xchg
mov
jno
inc
xor
pop
or
mov
out
lahf
testl
sub
jmp
test
mov
iret
and
fcomps
imul
sbb
mov
test
and
iret
les
pop
bound
and
add
stc
pushf
loope
xor
push
mov
rorl
or
call
shll
mov
xchg
mov
xor
arpl
das
xor
out
rorb
pop
push
inc
outsb
inc
mov
adcl
subl
cmp
fwait
repnz
cmp
shl
rcr
mov
xchg
push
and
ret
fsts
or
inc
add
cmpsb
xor
sbb
jge
dec
mov
call
inc
or
cmp
mov
xor
cmp
scas
icebp
or
jno
int
cmp
jp
mov
movsl
daa
mov
or
inc
lea
sub
mov
pop
shlb
in
mov
mov
daa
popa
or
lods
mov
daa
adc
stos
rorl
xor
lret
mov
inc
cmp
jl
outsb
jbe
dec
push
shlb
out
imul
movsb
cmp
sub
sub
mov
mov
fnsave
push
dec
jg
fbstp
in
push
ret
ret
mov
mov
adc
inc
jp
inc
gs
addr16
inc
dec
lods
mov
iret
les
pop
lcall
lock
hlt
mov
add
adcl
sub
idivb
jae
xchg
ficoml
movsb
sahf
into
lds
in
outsl
push
ret
sub
dec
push
xchg
adc
movl
jae
xchg
test
push
cmc
loop
jp
pop
cmp
insl
push
mov
mov
add
mov
xchg
in
pushf
subl
icebp
scas
mov
repnz
and
and
popf
cmp
nop
push
imul
stc
mov
push
pop
push
and
enter
cwtl
lret
mov
pushf
stos
or
cwtl
insl
jp
movsb
xor
push
and
push
pushf
mov
and
push
jg
clc
aaa
test
pop
jmp
jb
dec
outsl
cmp
mov
fs
lods
jne
lds
cwtl
repnz
xor
push
adc
inc
mov
mov
nop
sbb
xor
iret
outsb
mov
pop
lret
loop
dec
mov
mov
divb
mov
fnstenv
sbb
pop
inc
mov
xchg
lock
mov
das
lods
sbb
outsb
mov
and
popa
je
je
aad
ljmp
out
popl
add
and
bound
add
push
fwait
lahf
stc
jno
or
movsb
testl
pushf
pop
cmp
sti
stc
and
sbb
movsl
outsl
sbb
inc
add
push
adc
xchg
repz
sub
add
arpl
mov
scas
clc
mov
sbb
fnsave
mov
out
rol
test
fwait
push
dec
arpl
jns
gs
fbstp
push
jbe
pop
mov
jbe
lcall
xchg
cmc
mov
loope
ds
movsl
aaa
sti
fcoms
xchg
arpl
mov
push
jmp
dec
xchg
and
lods
icebp
sbb
cmpsb
or
jb
mov
repz
jb
dec
ret
push
sub
not
sbb
leave
push
insl
in
mov
push
repz
mov
add
dec
cmp
pop
dec
aad
sahf
mov
pusha
out
leave
xchg
incl
adc
fildll
mov
popl
ja
xor
stos
insl
mov
scas
xchg
mov
gs
out
push
gs
in
fs
mov
jb
sbb
shll
icebp
add
pusha
test
push
mov
cmpl
mov
mov
lahf
fdivrl
stos
or
dec
lock
mov
ret
nop
xchg
push
fistl
sbb
cmp
pop
cmc
pop
jae
xor
push
jbe
cmp
mov
sahf
fistpl
out
movsb
jl
mul
inc
add
sbb
rorl
mov
push
xchg
dec
lahf
mov
sbb
pop
ret
and
pop
outsl
mov
es
iret
out
xor
add
push
jge
popa
popa
fisubrs
fldenv
in
cmp
xchg
or
iret
lcall
test
fmul
roll
xor
mov
shl
pop
push
repz
lods
test
dec
mov
shrb
test
cmc
mov
fnsave
adc
dec
aas
xor
lea
jge
inc
jno
add
sub
negl
push
movsbl
jnp
xor
rcr
jle
push
loop
ficoms
push
jp
or
jge
ret
cwtl
jp
imul
adc
int
or
iret
cmp
or
das
sub
mov
xchg
mov
sbb
push
inc
pop
sub
jle
cmp
les
in
mov
mov
cwtl
xlat
sub
push
ret
xchg
sub
cmp
imull
push
sbb
xchg
clc
es
cmpsl
sbb
std
add
leave
aam
sbb
sub
aas
and
loop
push
mov
in
fiaddl
test
cmp
lea
xor
fimull
sti
popa
pop
or
lar
inc
mov
pop
add
in
das
push
out
arpl
lock
jnp
decb
out
cld
inc
jno
dec
pop
sbb
mov
lret
stos
add
mov
stos
and
cmp
cmp
xchg
js
adc
adc
xchg
lcall
or
lcall
pop
pop
nop
xchg
add
cmpsb
mov
stos
xor
imul
add
ljmp
arpl
addr16
and
iret
test
xchg
or
xlat
cmp
int3
jmp
aaa
out
jns
cltd
adc
pop
sbb
sub
in
negb
xchg
fstps
iret
cmpsb
inc
mov
mov
hlt
enter
lds
lock
sbb
pop
dec
arpl
xor
pop
sub
jmp
jg
jge
roll
nop
mov
fstpl
shrb
popf
dec
inc
insb
jmp
flds
fstps
out
test
gs
pop
sbb
scas
xor
mov
ja
out
push
and
xchg
out
enter
cmp
subl
mov
fmull
mov
xor
shl
cmp
sbb
lock
jo
icebp
cld
pop
cld
andl
inc
shlb
and
shrl
scas
xchg
xchg
je
out
enter
inc
daa
test
rcll
and
lret
fistpl
enterw
mov
in
aad
dec
loope
int3
cmpsb
mov
xor
jl
xor
mov
fsts
outsb
lcall
or
mov
lock
mov
inc
arpl
cmp
aas
lcall
mov
or
mov
sti
outsb
jle
leave
sbb
pop
push
inc
insl
xor
pop
push
or
xchg
jb
mov
mov
sbb
icebp
jb
insb
xchg
sarl
jge
add
xchg
call
in
mov
inc
mov
lods
mov
out
mov
insb
jl
aad
mov
pushf
inc
lods
shl
int
fucomi
cltd
insb
shlb
pop
mov
dec
xchg
mov
fprem
push
lea
lret
sub
cmp
push
mov
inc
mov
mov
lock
jmp
leave
aad
mov
xor
ror
sarb
rorw
insb
int
mov
and
imul
aas
adc
jecxz
les
cmp
cmp
pop
movsb
mov
rclb
push
push
pop
dec
jnp
jecxz
pop
mov
xchg
pop
aad
mov
jl
inc
add
add
jg
add
fidivl
movsb
jg
sub
mov
sbb
data16
push
inc
mov
mov
pop
imul
les
cwtl
jle
jle
push
dec
push
addl
or
add
xor
scas
sahf
mov
cmp
xchg
movsb
dec
push
jmp
xor
push
jge
inc
movsl
std
adcb
lods
or
aaa
or
fisubl
pop
add
and
data16
mov
dec
dec
inc
nop
dec
xchg
dec
lahf
push
mov
shrl
jns
inc
pop
cmp
out
out
or
cmp
repz
pusha
push
iret
inc
mov
shll
scas
adc
sbb
fucomip
sbb
in
sbb
pusha
sbb
mov
arpl
arpl
aad
inc
inc
mov
inc
jnp
std
mov
mov
push
push
cmp
es
and
mov
xchg
pushf
adc
int3
imul
xor
incl
jle
decl
mov
cmp
sbb
aaa
cli
fstps
xchg
movsl
ds
sub
ljmp
roll
jp
movsb
pop
out
out
sbb
push
or
push
push
jnp
incl
push
outsb
pop
add
divb
mov
jbe
add
jge
mov
push
jge
push
mov
sub
adc
jne
mov
mov
add
xor
or
hlt
rorb
fcoml
int
adc
loopne
inc
cmc
pushf
mov
addr16
dec
decl
movsl
jle
dec
xchg
sub
or
std
dec
jmp
lods
lock
xchg
lret
mov
adc
adc
bound
aad
xor
mov
fistpl
cmpsb
push
jge
jns
inc
or
mov
in
pop
bound
ds
cld
mov
fnsave
push
loope
push
adc
js
mov
mov
cld
popa
in
inc
shlb
ret
push
push
ficoml
mull
mov
dec
xchg
mov
daa
test
out
stos
sub
dec
pop
adc
push
pop
mov
bound
sub
pusha
ret
rcrb
addr16
int
sub
sbb
pop
fisubl
repz
add
lcall
and
fldl
out
dec
or
xchg
mov
iret
iret
push
cmc
ljmp
addb
adc
mov
loop
in
xchg
adcl
jno
sar
icebp
adc
outsl
and
jae
ret
cltd
shll
aad
mov
lret
insb
pushf
lock
outsb
dec
xchg
fisubrl
mov
lret
xorb
nopl
rcll
int3
repz
inc
jb
sbb
push
jb
out
rcrl
test
mov
cmp
xchg
mov
jae
iret
xchg
sbb
pop
cwtl
mov
in
pushf
add
fidivrl
xor
rcll
gs
pop
hlt
out
sub
jg
xchg
or
enter
push
pop
repz
adc
and
push
xchg
adc
int
push
dec
lock
lret
sbb
cmp
fisttpl
das
cmp
pop
rclb
xorl
push
dec
mov
adc
les
jecxz,pn
mov
dec
push
or
xchg
jecxz
add
fcoms
inc
flds
testb
loopne
data16
fwait
ds
mov
adc
lcall
or
pop
mov
fisubl
cld
push
out
cwtl
out
out
stc
jae
or
mov
sti
pop
pop
mov
pop
mov
push
push
dec
scas
fwait
sub
lea
adc
aaa
inc
inc
mov
mov
sub
sbb
into
dec
fiaddl
data16
or
cmp
repnz
jbe
mov
std
jg
mov
jl
std
xchg
cmp
fdivr
add
ljmp
xchg
jmp
je
inc
stos
xchg
fwait
push
mov
call
or
mov
pop
into
xchg
lods
push
xorl
mov
jl
call
jnp
jmp
subb
mov
mov
and
mov
and
and
add
xchg
push
inc
stos
pop
cmpsl
fldenv
fsubl
pop
inc
dec
insl
lock
xor
mov
jo
std
movsb
movsb
mov
imul
cmp
jmp
xlat
test
aam
imul
sahf
hlt
shlb
adc
das
mov
nop
loop
fsubrl
or
mov
aaa
sub
sub
cs
mov
xchg
mov
mov
ficomps
push
or
cwtl
lods
inc
fbld
push
jmp
ss
in
jecxz
mov
jne
aad
and
xchg
push
into
sub
jbe
mov
stc
or
inc
xor
push
push
jbe
test
sarl
xchg
jbe
mov
mov
sbbb
push
sbb
pop
enter
mov
inc
add
ds
fadds
mov
int
cld
scas
mov
inc
push
cmpsl
test
clc
mov
pushf
dec
fldl
xchg
ljmp
mov
je
push
sbb
mov
imul
cmp
inc
xlat
fsub
xchg
mov
je
sbb
mov
out
std
and
push
jb
push
shll
repz
icebp
jle
imul
xorl
addl
push
rolb
mov
push
mul
mov
mov
cmp
test
jle
dec
xor
mov
mov
xor
ret
add
mov
stos
imul
outsb
fsubl
outsl
nop
push
cwtl
test
shlb
jl
ret
loope
movsb
insb
add
lock
outsl
fst
daa
outsb
adc
push
mov
or
ret
jno
movsl
cld
xchg
jnp
jmp
inc
sub
jb
push
out
outsb
in
fdivrl
jp
mov
test
enter
and
adcb
mov
inc
or
pop
or
sbb
mov
popf
inc
inc
sub
test
outsb
lahf
out
fs
rcl
push
jmp
cmpsl
mov
jg
cmp
xor
cwtl
jmp
fwait
and
jmp
lea
jae
cwtl
jge
mov
pop
or
std
jnp
xchg
mov
clc
mov
ret
out
cwtl
movsl
lods
push
jae
outsl
cmp
mov
dec
int3
sub
or
dec
add
mov
dec
sarl
dec
cmp
mov
add
inc
int
loope
fwait
sbb
mov
jg
cld
aaa
out
lret
xlat
inc
cmp
push
lret
stos
stos
dec
rcr
fistps
filds
movsl
sbb
jl
fbld
cmp
mov
push
adc
adc
jns
cmp
stc
jl
or
mov
pop
mov
movsl
scas
ja
dec
fisubs
push
es
incb
jae
mull
dec
mov
jae
stos
and
inc
fadd
xchg
scas
xchg
pop
or
lds
ret
mov
in
rolb
aas
and
add
dec
mov
pop
add
inc
rcll
jb
dec
or
mov
inc
sbb
push
decl
inc
mov
xchg
jge
fldcw
mov
push
dec
loope
pusha
jge
xor
and
shlb
repz
bound
loopne
or
xchg
jg
cmpsb
or
out
push
cmpsl
cmpsb
and
and
mov
fadds
pop
add
js
xchg
stc
push
fistl
sbb
outsb
cmp
in
mov
mov
orl
adc
or
sarb
or
aam
addl
cmp
cmp
mov
stos
mov
pusha
mov
aas
pop
or
pushf
mov
fwait
sub
punpckhbw
add
stos
dec
xchg
adc
outsb
in
pop
cld
clc
arpl
xchg
loopne
pop
mov
xchg
fs
fmuls
scas
inc
sbb
scas
xor
insb
pop
lods
cmp
cmp
jnp
xchg
xchg
icebp
push
pop
push
jne
iret
in
xchg
repz
xchg
or
or
call
popa
rclb
daa
or
mov
push
jg
push
test
mov
pop
xchg
mov
pop
out
xor
jbe
pop
mov
xor
test
jno
das
cld
movsb
aam
sarl
pushf
push
or
jnp
fs
push
rcrl
loope
lcall
xchg
dec
and
add
xchg
sub
loope
inc
dec
lods
or
cwtl
add
mov
les
scas
mov
mov
loopne
aam
adc
and
cmp
sahf
lods
hlt
cmc
enter
add
xor
dec
push
adc
xchg
rclb
leave
inc
and
pop
jnp
and
mov
faddl
mov
jae
push
movsb
mov
leave
or
repnz
cmp
cmc
adc
je
daa
mov
lcall
sbb
int
fidivrl
iret
mov
js
test
mov
jp
jp
xor
fsubr
movl
lcall
lret
inc
jmp
mov
mov
in
arpl
cmc
in
fistl
pop
xchg
mov
popa
and
or
rorl
sub
and
cltd
aaa
mov
daa
loop
xchg
scas
xchg
xchg
loopne
add
mov
sbb
mov
mov
daa
jmp
mov
into
push
and
dec
into
mov
loopne
pushf
lea
adc
fists
and
sub
sysenter
rcrb
push
jae
xor
sahf
shrb
loop
mov
cmp
insb
mov
mov
mov
daa
jo
or
pop
fimuls
jl
xchg
xchg
xchg
add
daa
sbb
mov
dec
leave
repnz
xchg
mov
lret
mov
jae
in
cs
sbb
jg
shl
aad
decl
mov
mov
xchg
inc
dec
xor
out
mov
ljmp
repz
dec
and
or
test
push
push
push
push
loop
mov
jmp
xchg
xor
ret
andb
cwtl
ja
out
dec
push
jl
pop
aad
lea
scas
outsb
xchg
jae
stos
jmp
mov
and
inc
push
lods
sub
sbb
stos
xchg
jmp
rcr
lds
mov
sahf
mov
lcall
adc
push
sbb
dec
repz
popa
adc
ja
jb
mov
popa
rcrb
enter
imulb
ret
int3
clc
cmpsl
dec
mov
testb
and
scas
cmpsl
es
cli
repnz
add
xlat
hlt
mov
gs
mov
movsl
jo
jae
inc
cli
bound
cs
mov
leave
adc
aaa
hlt
in
std
xor
mov
lock
fisubrl
and
sti
inc
xchg
dec
adc
sbb
xchg
movsb
or
aam
add
loope
fwait
jo
sbbl
int3
mov
js
fcmovne
aas
push
pop
xchg
mov
icebp
push
into
mov
outsl
fs
inc
call
movsl
pop
out
movsb
mov
into
cs
lcall
loope
or
push
inc
pop
inc
cmp
aaa
cmp
sar
inc
push
aas
rclb
imul
jno
dec
mov
dec
cld
xor
out
push
sub
sub
push
sahf
xchg
mov
xchg
sub
mov
out
xor
out
mov
mov
rcrl
or
sub
jns
fisttpll
add
xchg
fcmovb
push
xor
jmp
mov
mov
cs
mov
mov
inc
out
imul
pop
push
jp
out
push
add
out
ficoms
sub
sbb
lods
xor
xchg
xchg
hlt
xchg
cmpsl
scas
mov
mov
in
sarl
mov
cmp
cmp
andb
jp
pop
cmp
dec
dec
inc
daa
fcmovb
inc
push
rorb
stos
ret
in
dec
dec
xor
adc
ja
rcrb
xchg
cmpb
pop
push
cmp
xchg
or
pushf
movsl
ret
xchg
pusha
jmp
mov
mov
into
mov
sarl
aam
sahf
mov
mov
sbb
loope
cmp
xor
into
pop
cmpsb
shrb
cli
pop
pop
and
cltd
push
enter
xchg
outsl
stos
lcall
xor
mov
push
adc
rclb
or
sub
mov
ds
aam
lret
mov
xchg
cmp
das
sbb
in
aas
lret
inc
inc
pop
ljmp
mov
cli
push
cli
sub
dec
fs
jl
sub
std
test
jns
lds
nop
xchg
sub
dec
sub
mov
ret
xchg
sbb
and
scas
flds
cli
pop
rcrl
std
and
xchg
repnz
mov
fadds
add
mov
pusha
push
cmc
stos
xchg
mov
sub
xchg
mov
mov
dec
pop
arpl
enter
lcall
fstps
mov
shl
adc
push
fdivrp
or
jae
pushf
les
jbe
xchg
add
inc
icebp
sbb
sbb
jecxz
and
push
je
dec
sub
xor
mov
mov
jmp
lahf
fnstsw
xor
sahf
dec
jnp
lock
out
test
dec
leave
jmp
scas
mov
fcomp
inc
sarb
dec
outsb
subl
xchg
mov
ficoms
xlat
push
fldl
and
sbb
cmp
orb
jno
movsl
ljmp
cld
je
and
sarl
mov
sbb
push
movsb
lret
call
xchg
pop
call
jbe
fld
imul
mov
adc
imul
mov
adc
xchg
pop
out
mov
rorl
xor
enter
mov
mov
mov
jp
dec
bnd
cmpl
mov
inc
adc
mov
insl
mov
xor
pop
inc
mov
out
jo
into
and
test
pop
or
orb
jp
pop
notl
leave
fimull
or
pop
test
in
cs
aam
xchg
addr16
pop
jl
inc
xchg
mov
fwait
pop
push
jnp
leave
pop
push
adc
fnstenv
sbb
jbe
add
ret
jg
js
leave
sub
adc
mov
jmp
cmp
or
arpl
fiadds
fldenv
jecxz
je
jo
cmp
and
jnp
cmp
aaa
pop
imul
mov
mov
sub
mov
loopne
inc
lds
and
lds
add
inc
jg
arpl
cmpl
lea
popf
test
lods
mov
mov
pop
outsl
repnz
hlt
fcomp
adc
mov
loope
jge
outsb
int3
sbb
aam
xchg
mov
push
outsb
les
jne
mov
sbb
xor
mov
ret
sub
jb
jnp
xchg
ss
mov
xchg
mov
insl
nop
icebp
aam
test
lcall
aaa
ret
or
sub
xchg
mov
adc
ja
mov
and
jno
mov
out
fst
xor
fucomi
push
mov
and
pop
pushf
xor
fldt
ret
xor
cli
bound
hlt
push
or
add
cwtl
ds
or
push
dec
and
sbb
data16
cwtl
mov
add
rcr
jnp
pop
xlat
mov
les
mov
add
push
imul
add
push
push
hlt
dec
add
stos
lea
push
fstpl
insl
lock
push
int
mov
mov
pop
jecxz
dec
rcll
pop
jne
imul
xchg
sbb
out
ja
mov
pop
mov
in
es
sahf
xlat
js
inc
outsl
outsl
mov
xchg
cmp
xor
cmpsl
xor
aaa
in
int3
fcomip
adc
int3
sar
sub
test
out
and
and
stos
inc
lahf
add
sub
mov
mov
hlt
icebp
pop
inc
adc
leave
mov
xchg
sbb
inc
or
or
in
nop
inc
int3
nop
ret
icebp
mov
and
psadbw
fistpl
es
insb
jnp
or
sub
addr16
mov
fwait
sahf
mov
pushl
jmp
push
sbb
xor
into
inc
mov
in
insl
xchg
cmp
adc
repz
xchg
xchg
or
lods
in
push
mov
das
cltd
les
pop
mov
push
fnstenv
jo
jbe
push
sbb
jnp
cltd
outsb
fwait
loope
out
push
pop
xchg
std
test
aas
push
mov
add
shrb
mov
xchg
inc
lret
stos
and
rclb
mov
inc
rolb
orb
mov
and
lock
mov
cmp
add
or
rcrb
inc
outsl
lock
inc
jg
movsl
add
repz
jo
push
inc
lahf
sub
dec
xchg
or
ss
inc
and
inc
in
int
lret
je
sbb
pop
js
outsb
add
mov
fdivs
mov
lahf
xchg
mov
loopne
mov
movsb
loopne
fucom
inc
fsubrl
add
xchg
inc
xorl
push
std
cwtl
fmull
orb
into
jb
adc
hlt
mov
push
xor
lods
fdivrs
fldt
adc
jae
xchg
mov
lds
push
jecxz
jb
pop
movsl
mov
jns
imul
sbb
cltd
scas
xchg
dec
subb
test
inc
mov
or
add
xlat
outsl
mov
int
and
dec
aam
dec
test
or
dec
stos
dec
xchg
cmpsb
dec
jp
add
push
inc
dec
inc
clc
fiadds
jecxz
and
xchg
stos
jecxz
lcall
stos
lret
jns
push
mov
adc
mov
jecxz
pop
enter
lret
loopne
pushf
test
leave
push
mov
iret
mov
je
xor
mov
dec
mov
je
adc
std
mov
repz
hlt
push
jb
xlat
movsb
and
or
adc
sbb
dec
cmpsb
icebp
aam
dec
xchg
sahf
popa
fiaddl
push
jbe
dec
mov
adc
jo
and
or
mov
add
divl
and
inc
and
aam
mov
cmpsb
jbe
xlat
lods
xor
repz
out
dec
scas
mov
xchg
shrb
mov
lds
shrl
fcompl
pop
mov
pop
fxch
lcall
pop
xor
and
cmpsb
aad
cwtl
stos
data16
in
mov
clc
xor
insb
das
cli
push
xor
aaa
mov
mov
filds
jg
mov
rol
sarl
mov
jg
icebp
sub
insl
add
pop
mov
cli
fsubrl
js
test
repz
mov
shl
sbb
lea
addr16
add
add
loope
mov
xlat
jecxz
fldt
mov
lock
into
out
js
hlt
test
std
mov
cltd
insb
mov
xchg
and
fsubrs
std
aas
pop
fwait
aas
jno
mov
sahf
xchg
rorb
inc
orl
push
fsubs
fucomip
push
in
sub
inc
stos
cwtl
lret
stc
jge
pop
jl
jmp
loopne
lea
mov
jg
xchg
mov
sar
xor
addb
insl
mov
cmp
mov
dec
and
inc
add
inc
lds
xchg
inc
mov
sub
leave
in
jecxz
fldcw
push
mov
lret
movsl
dec
jne
mov
movsb
out
rcrb
int3
cmpl
add
pushf
in
cmp
push
stos
cltd
push
sub
frndint
mov
inc
add
pop
inc
inc
add
mov
or
cmp
xor
sbb
mov
adc
sub
add
push
lret
xchg
cmp
xlat
repnz
rorb
jmp
ds
nop
mov
inc
insl
in
push
int
push
mov
add
out
fildll
mov
nop
in
sub
dec
inc
jns
in
in
mov
in
sti
mov
daa
pop
scas
fldl
dec
mov
mov
stos
rcrl
popa
jbe
bound
cmp
jmp
cmp
aaa
inc
cmp
aam
lds
cmp
or
mov
ds
rcll
sahf
or
fbld
mov
sbbb
cmpsl
xor
cwtl
push
dec
lahf
outsl
ja
push
jo
mov
mov
sbb
mov
divl
jmp
sbb
jbe
lcall
xchg
push
lods
or
jne
xchg
add
repnz
inc
das
add
adc
cwtl
push
sub
fimull
cli
pop
ljmp
jge
sub
repnz
mov
bnd
cmp
repnz
xchg
stos
xchg
xchg
add
pop
push
mov
hlt
push
mov
call
cmp
js
sahf
insb
cltd
push
icebp
jmp
outsl
ja
jbe
sub
les
pop
or
xor
xor
push
pop
fsubs
adc
jns
daa
jno
xchg
jno
xchg
pop
ss
jns
add
adc
mov
jne
dec
xlat
mov
cmp
adc
fidivrs
test
les
test
fsubrp
pushf
xchg
pop
push
mov
jne
fs
xor
pop
std
stos
xchg
cmpb
jbe
sbb
pop
into
pop
dec
aam
popa
jge
mov
mov
lahf
mov
add
inc
cltd
cld
movsb
xchg
jmp
cmp
or
fnsave
das
imul
out
and
cld
jns
in
and
aaa
das
mov
mov
inc
mov
popf
aad
mov
jne
ficoml
fmull
in
aam
mov
add
xor
in
ret
es
or
mov
insb
fldcw
test
lret
jmp
mov
pop
sbb
or
add
imul
mov
hlt
in
push
fnstenv
pushf
mov
adc
push
jecxz
ret
xchg
push
fwait
jnp
sub
mov
lret
sub
mov
gs
nop
in
cmpsb
push
sub
arpl
aam
jo
out
or
jbe
dec
mov
sarl
xchg
push
clc
inc
out
jp
sub
es
pop
jb
dec
inc
pop
jle
jle
scas
popa
inc
mov
stos
pop
lods
push
insl
aaa
loopne
push
dec
shlb
xchg
aas
jmp
cmp
mov
sub
xchg
mov
cltd
pop
push
mov
or
ss
inc
inc
das
je
mulb
enter
out
xor
xlat
inc
lods
fsubrp
outsl
mov
insl
inc
xor
xchg
pop
aaa
sub
fwait
adc
sbb
push
adc
cmp
xlat
or
pop
dec
jl
push
dec
dec
mov
loop
sub
ds
pop
repnz
mov
sub
xchg
adc
das
or
cwtl
xchg
cmp
movsb
mov
shrl
loopne
aaa
popf
popa
subb
lret
mov
pop
xor
cmpsl
cli
leave
ret
lods
imul
std
addb
cwtl
int
dec
mov
outsl
stos
xchg
es
adc
gs
movsb
mov
aam
dec
push
mov
mov
jnp
mov
popf
lods
ret
ret
fcoms
mov
dec
cld
addr16
add
ret
mov
ss
mov
push
or
adc
lods
xchg
mov
push
fmull
rorl
or
add
adc
popa
stos
mov
dec
xor
cli
lock
pop
repz
or
jecxz
pop
movsb
mov
sub
push
cmc
pop
imul
sub
cmp
sub
pop
push
mov
aas
lock
fcoml
dec
mov
imulb
stos
nop
sub
mov
loope
pop
cmp
movq
popf
jb
push
cmp
dec
imul
add
cmc
pop
aad
es
clc
mov
enter
sub
add
jle
jg
mov
popa
jnp
inc
mov
orb
cld
or
xchg
push
sbb
lahf
xor
pop
mov
je
test
add
mov
leave
iret
dec
push
push
sahf
leave
xchg
cld
mov
sahf
gs
outsb
mov
out
fsubs
das
push
or
sbb
bound
imull
jle
aas
cmp
aas
out
and
popf
push
icebp
les
es
sbb
shlb
fimull
jbe
and
cmp
adcl
adc
out
jl
subl
inc
jecxz
jl
enter
jecxz
icebp
imul
cmp
and
pop
mov
mov
fstl
popa
into
mov
jge
cli
repz
push
sbb
fistps
jae
and
and
rclb
cmpsl
jns
ret
aad
adc
cmc
cld
mov
jle
dec
cmp
inc
pop
ja
sub
loopne
fadds
adc
dec
push
fwait
xlat
mov
inc
lea
lods
test
out
or
or
int
aas
rol
add
pop
xor
iret
jns
aaa
cmp
cs
cmp
xor
or
adc
das
lods
adc
fisubs
mov
pop
out
mov
or
pusha
cmp
stos
jno
test
and
pop
sti
sub
pop
leave
or
mov
fsubrl
idivl
jmp
xchg
mov
push
popa
movsl
or
lcall
test
mov
push
mov
aad
cli
sub
fstps
xor
dec
xor
out
lock
xchg
push
pop
dec
ficomps
pop
sub
out
fwait
xchg
subb
gs
and
aam
hlt
xchg
in
lret
hlt
popf
leave
pushf
dec
sbb
call
in
aaa
pop
dec
sub
shrl
xchg
and
test
sbb
ficoms
data16
sbb
push
outsb
movsb
imul
mov
dec
insl
add
dec
out
leave
mov
sub
cmc
stc
sbb
or
cli
aas
fabs
xchg
test
fwait
jmp
xlat
adc
dec
xor
mov
test
fstl
cmp
jne
mov
js
mov
pop
fwait
mov
push
pop
push
mov
jp
cltd
sbb
push
lds
mov
hlt
ljmp
out
jmp
pop
adcl
insl
movsb
stos
out
mov
movsb
xor
adc
xor
pop
mov
cmp
jae
sub
mov
orl
or
andb
jmp
cwtl
mov
ljmp
cld
jge
cmp
xchg
cmp
call
cld
push
ja
jl
mov
inc
mov
xchg
in
pop
aad
push
cmp
sar
add
scas
sub
or
inc
std
cmp
lret
stos
inc
insb
and
popa
lock
vmulps
ret
jge
fisttps
dec
mov
ljmp
jl
mov
out
fs
xchg
xlat
xor
jg
aam
lcall
lahf
or
inc
xor
pop
pop
mov
enter
push
adc
xor
xchg
popf
cmp
nop
fistl
daa
xlat
int
repnz
out
ret
mov
jecxz
jmp
sbb
xchg
repz
stos
or
xor
push
test
loopne
add
adc
mov
fstps
xchg
inc
aam
shl
add
and
outsl
push
fadds
out
leave
dec
sbb
fildll
or
inc
and
jecxz
adc
mov
das
add
jbe
xor
push
int
inc
push
test
lahf
repz
pop
pop
mov
sbb
push
push
xor
cs
lcall
or
ja
pop
loopne
repz
push
or
pop
xchg
add
cmc
add
das
repnz
jmp
insb
rol
lret
std
and
cli
cmp
mov
adc
rcl
jbe
cli
shl
jnp
nop
adc
mov
scas
jnp
data16
jmp
and
leave
sub
cltd
push
nop
mov
sub
mov
xchg
dec
and
nop
movsl
out
mov
push
loope
mov
leave
inc
inc
xor
ja
inc
push
adc
sti
scas
out
andb
out
xor
js
insb
xchg
sbb
inc
pop
ret
push
push
imul
jns
jmp
std
push
les
out
adc
pushf
das
pop
add
movsl
sub
jl
into
cmp
or
add
cmp
js
fstpt
inc
adc
sahf
in
xchg
adc
jle
xor
out
jge
sbb
imul
repnz
in
test
adc
mov
je
mov
fwait
push
mov
iret
roll
pop
aaa
in
sarl
push
dec
mov
mov
rol
clc
adc
adc
or
xchg
jne
push
jge
or
lcall
or
pop
daa
lcall
mov
leave
mov
das
xor
cmc
insb
out
outsl
dec
out
mov
push
xchg
jbe
sbb
ret
sub
mov
lret
add
sbb
stc
mov
dec
cmc
mov
inc
in
sub
mulb
xchg
nop
jno
add
sar
cmp
mov
jmp
pusha
mov
xchg
push
sub
fsubrs
icebp
and
hlt
shlb
cmp
push
out
xchg
mov
and
std
push
xlat
repz
lahf
rcrl
lds
sub
nop
clc
xchg
pop
pusha
arpl
popa
pop
push
jp
clc
iret
fld
jecxz
fidivrs
imul
add
out
int3
cmp
mov
outsb
cltd
mov
xor
xchg
mov
sub
mov
xchg
in
push
repnz
iret
sub
jae
js
sub
xchg
lock
into
push
call
sbb
adc
mov
sub
lret
sub
xchg
or
push
fsubrp
push
jbe
xchg
adc
popa
aam
dec
mov
adc
negl
jb
aaa
ja
fcmovnu
sbb
stos
sahf
imul
xchg
scas
fidivl
pop
pop
adc
xor
sbb
dec
sbb
inc
lods
sbb
test
inc
hlt
.byte
and
mov
sbb
and
jb
add
xor
rcll
fsubr
mov
and
jg
les
sbb
test
mov
repnz
sbb
call
aad
cmpsl
jbe
fsubl
sbb
xlat
movsl
xchg
inc
push
inc
jnp
fldln2
or
rorl
cld
mov
cmp
or
lret
stos
or
mov
add
repz
inc
xchg
test
and
popf
test
inc
push
jmp
loop
int
inc
push
movhlps
out
imul
xchg
fidivrl
mov
pop
ret
or
push
push
dec
stos
ja
shlb
in
nop
cmpsl
mov
aad
and
adc
jl
jne
mov
push
and
std
data16
mov
lret
xchg
pop
cmp
mov
xor
xor
jmp
es
dec
lds
inc
xchg
mov
ret
dec
dec
mov
pop
clc
jno
and
push
les
sahf
mov
dec
pop
cmp
pushf
cmp
ljmp
ljmp
int
xor
pop
or
lock
iret
ds
dec
xchg
mov
pushf
cmc
add
mov
scas
adc
dec
or
mov
in
jp
mov
in
jo
enter
cmp
scas
sub
pop
test
xor
aas
mov
outsl
mov
ja
fildll
loop
mov
xor
push
sti
pop
test
mov
jnp
dec
std
int3
mov
dec
in
sarb
jnp
out
push
mov
pop
or
pop
orl
stc
jge
mov
das
pop
test
aam
jbe
outsb
push
cmc
pop
nop
fidivs
and
adc
jno
fs
cmp
or
or
fiaddl
push
rcrb
fcom
push
insb
sub
mov
scas
mov
xchg
hlt
hlt
cmpsb
jmp
outsl
sbb
es
popf
out
xchg
pop
push
mov
dec
mov
movsl
xlat
mov
push
push
or
fistpll
fsubrp
dec
push
inc
out
gs
push
inc
lods
mov
in
test
into
insb
rolb
jnp
sbb
sbb
popf
jo
js
jne
cmp
mov
jno
cwtl
jnp
lods
mov
pushf
ret
movsl
or
imul
decb
pop
jge
sbb
imul
add
out
lea
iret
sbb
xchg
push
bound
fldenv
push
sbb
lret
ljmp
and
mov
push
cmp
dec
dec
add
shl
mov
dec
or
jg
bound
enter
jmp
sub
cvtps2pd
or
orb
loopne
sti
mov
push
push
lret
mov
or
loop
fs
insl
repz
sub
test
call
pop
dec
adc
cmpsl
mov
mov
jbe
and
ja
or
fildll
mov
cltd
push
cmpsl
je
outsl
add
aas
mov
into
test
repz
lcall
jno
cmp
popl
out
cmpsl
sub
pop
outsb
mov
inc
popf
lcall
sbb
repz
int
aaa
jg
sub
repnz
inc
ss
popa
jo,pt
call
cmp
add
fstl
mov
mov
dec
mov
xchg
mov
mov
dec
cmp
rclb
adc
lds
in
out
mov
inc
mov
ja
lret
mov
pop
lret
and
or
fisttpll
adc
aas
mov
aaa
int
mov
pop
sbb
ss
cmp
pop
scas
fists
xor
cwtl
mov
fmulp
mov
adcl
ret
mov
dec
and
sti
inc
mov
js
repnz
cmp
jo
or
pop
popa
sub
stc
mov
jno
pop
js
lahf
dec
pop
adc
jl
mov
popf
mov
test
adc
fnstcw
adc
push
cld
sub
arpl
jmp
in
push
loopne
pusha
call
jl
xor
outsb
pop
inc
dec
mov
sub
mov
xor
jae
bound
into
dec
mov
pop
in
xchg
mov
pop
mov
pop
pusha
mov
or
mov
cld
push
pop
movsb
out
push
lcall
cld
pushf
jg
inc
int
dec
outsb
in
sub
inc
adcb
adc
push
out
xchg
push
fsubrs
lods
bnd
push
jg
inc
or
ret
mov
pushf
inc
mov
xor
sbb
push
adc
test
jecxz
dec
fists
cld
movsb
aaa
cmp
sub
add
sub
mov
paddsw
mov
lea
mov
stos
lock
pop
mov
idivl
inc
inc
ljmp
xor
push
or
ds
inc
sbb
movsl
jecxz
cli
stc
and
movsl
adc
add
mov
ret
jle
orl
insl
cmp
nop
pop
cltd
scas
shll
addr16
lcall
out
mov
andl
xor
xchg
push
inc
mov
ja
and
repnz
add
mov
addr16
push
xor
xchg
into
xchg
xchg
dec
jecxz
sti
cltd
adc
fcoms
xchg
pop
call
bound
dec
push
sbb
jnp
aas
or
test
xchg
lret
fs
icebp
adc
jbe
pop
outsl
arpl
xchg
xlat
or
cld
ss
pushf
shll
push
mov
xor
pop
fwait
sub
adc
jle
andl
movb
add
mov
mov
jnp
scas
dec
data16
in
lds
insl
daa
pushf
jb
int3
mov
adc
cwtl
mov
sbb
mov
jb
mov
or
stos
lret
xlat
inc
mov
lea
add
push
pop
icebp
outsl
mov
insb
pushf
shrl
bound
push
pop
sub
daa
out
dec
pop
push
jo
adc
xchg
inc
add
jbe
jne
mov
sub
fsubs
add
dec
lods
shlb
cmp
dec
pop
xor
mov
je
pop
ja
xchg
fisubrl
clc
nop
xor
cli
outsb
ret
lea
out
call
mov
adc
jg
push
add
std
sbb
int3
outsb
mov
ret
lods
sahf
mov
fs
cmp
push
cmp
mov
cmp
pop
cwtl
shlb
mov
aam
int3
dec
movsb
leave
jbe
repnz
add
icebp
add
xchg
iret
pop
cmp
mov
ds
aas
in
mov
insb
pusha
or
cltd
in
inc
pop
flds
inc
add
loop
aaa
jns
lds
lret
mov
and
add
jo
das
xlat
sub
icebp
and
adc
and
pop
xor
movl
or
and
and
cmpsb
filds
dec
dec
xor
leave
mov
jns
rclb
popf
ret
lret
mov
adc
xor
mov
mov
cwtl
fsubrs
not
shl
mov
sub
push
scas
mov
aad
movsl
scas
pusha
fs
or
adc
jbe
stc
pop
jb
inc
mov
shll
loope
cmp
xchg
dec
fisubl
hlt
cmp
fstpt
xor
testb
push
dec
mov
into
scas
xchg
outsb
fadds
rcrb
mov
or
mov
stc
adcb
mov
int
out
mov
dec
xchg
pop
adc
cmp
xchg
dec
mov
mov
fiadds
cmpsb
pusha
shl
push
inc
pop
or
mov
mov
inc
sahf
negl
mov
ljmp
rcl
add
fcomps
xchg
inc
mov
pop
xchg
popa
push
cltd
lahf
mov
xchg
pop
clc
daa
jecxz
sahf
pop
lock
mov
mov
sbb
pop
mov
pop
rcrb
js
rclb
sub
stos
fsubl
lcall
dec
jge
les
add
push
arpl
nop
push
dec
pop
popa
fwait
pop
and
lret
ljmp
inc
jns
cmc
sbb
push
jb
pop
repnz
iret
clc
mov
xchg
jns
andb
dec
test
xchg
repz
jnp
pop
lret
imul
pusha
cld
test
int3
stos
mov
out
add
cs
push
int3
add
popa
test
aam
and
jg
rcrl
bound
xor
pop
mov
aad
in
ret
sbb
fwait
mov
sar
fwait
adc
pop
call
and
xchg
mov
xchg
mov
xor
out
mov
outsb
push
sub
push
inc
movsb
outsb
es
jg
lret
fs
cmc
mov
fidivs
cltd
call
pop
dec
aam
xorb
xor
popa
push
dec
mov
rorl
push
jne
daa
mov
inc
lret
lcall
aad
mov
outsl
push
and
lods
data16
je
pop
pop
mov
add
jl
cs
sahf
add
cli
jp
stos
mov
aas
imul
mov
lret
movsb
int
mov
out
pop
mov
mov
inc
pop
mov
in
xor
adc
lcall
mov
pushf
inc
inc
inc
push
pop
add
jns
push
xor
xorl
fbld
push
inc
sub
cmp
lds
adc
outsb
outsb
stos
ja
es
push
dec
sbb
stos
dec
pop
mov
mov
dec
je
fisubrs
in
add
lods
pop
subl
push
ja
lret
add
jo
adc
movsl
je
loop
xchg
jne
jbe
stos
push
add
mov
xchg
mov
pop
adc
in
adc
lahf
push
negb
loop
mov
dec
mov
xlat
add
inc
or
sbb
push
mov
sbb
nop
xchg
mov
lods
pop
fstp
movl
and
inc
enter
fwait
insl
ret
sub
jno
aas
mov
je
hlt
adc
call
loop
je
aad
push
mov
pushf
sub
xor
sbb
xor
int
dec
xor
subl
sub
mov
pushf
xchg
idivb
mov
dec
inc
pop
and
push
push
pop
dec
nop
or
pop
add
icebp
jb
adc
stos
push
and
imul
cli
js
xor
jl
jno
rorl
push
shld
inc
imul
sbb
mov
data16
cmc
mov
xlat
adc
rcrl
dec
fcom
dec
xchg
mov
pop
arpl
add
prefetch
daa
mov
clc
adc
orl
xor
cmp
fnsave
cltd
cmpsl
cmp
and
negb
sbb
test
or
rclb
xchg
ret
mov
fwait
jg
cmp
inc
sti
out
xchg
imul
inc
movsl
xchg
cmc
mov
cs
andl
ret
and
mov
andb
cmpsb
movsl
nop
xor
mov
jmp
inc
mov
jg
je
pop
lahf
aam
mull
cmp
ljmp
jns
out
pop
stos
fiadds
sti
add
in
sbb
add
or
leave
push
outsl
cmp
repz
cwtl
test
add
mov
incl
add
loope
sub
jae
arpl
mov
call
or
xchg
stc
cmp
jno
aas
inc
fwait
popa
loope
ret
fldenv
mov
dec
mov
push
and
mov
cmp
leave
mov
ret
cmpsb
lahf
add
movsl
push
and
push
insl
xchg
push
mov
mov
in
leave
subb
rcr
fucom
mov
jo
cmp
popf
jbe
leave
push
in
mov
sbb
icebp
int
pop
loope
pop
xchg
add
cwtl
or
lock
pop
pop
aad
pop
into
xchg
or
in
int3
ret
dec
jge
cmp
and
pop
fistps
cld
out
sub
mov
bound
mov
mov
xchg
popa
pop
jecxz
cmpsl
xor
mov
insb
or
xor
xchg
out
mov
es
mov
xor
add
or
fidivrs
sub
lcall
popf
mov
mov
dec
test
mov
fistpl
les
les
inc
dec
adc
push
push
and
xchg
pop
scas
rcrb
or
fimull
lock
imul
out
scas
ret
jno
sub
pop
enter
test
jae
pop
adc
push
jge
inc
jecxz
xchg
aas
insb
push
test
cmpsl
sbb
aam
mov
inc
cmp
enter
gs
sub
jne
neg
sbb
rcrl
inc
mov
pop
xchg
and
sbb
or
hlt
push
jl
inc
push
xchg
dec
pop
popa
icebp
aad
mov
add
adc
js
push
mov
popf
mov
lcall
push
mov
stos
xor
fbstp
call
mov
mov
cmpsl
fisubl
gs
es
sbb
ret
and
xchg
icebp
or
rcrb
pop
jecxz
sarb
imull
push
fs
pushf
les
jle
inc
test
cli
bound
cltd
sti
insl
lcall
pop
cmp
cli
pop
sub
mov
cmp
xorb
loop
loope
inc
hlt
loope
jnp
aas
ds
push
dec
mov
adc
nop
addr16
fwait
xchg
jno
push
xchg
push
shrb
js
pushf
icebp
and
fisubrl
cmp
xor
adc
jbe
stos
in
dec
call
cmpsb
ja
xchg
in
es
ret
fildll
cmc
in
aas
pop
pop
lret
add
push
in
enter
into
inc
adc
ds
lods
movsl
push
mov
in
push
inc
repnz
sub
or
ret
pop
inc
lods
andl
jge
xchg
call
sti
mov
sbb
or
sub
xlat
xor
sub
mov
jns
jmp
and
dec
repnz
dec
adc
sbb
jmp
ljmp
stc
sarl
loop
cmpsb
and
out
cmp
adc
inc
mov
mov
add
leave
adc
ja
popf
push
pusha
mov
jmp
cmc
or
ja
popf
imul
scas
repz
sbb
or
fidivrs
mov
cmp
add
lock
cmpsb
adc
mov
dec
aaa
cmp
mov
mov
repz
out
jne
enter
addb
add
add
je
mov
sub
and
shll
push
outsb
int
mov
aad
lods
cmc
pusha
pop
rcll
jne
jne
push
push
jnp
push
push
jle
inc
pop
pop
xchg
and
xor
out
cltd
hlt
pop
cwtl
and
jns
xchg
ss
jp
xor
jne
xor
add
inc
lds
dec
push
mov
movsb
lcall
mov
js
popf
mov
jmp
lahf
pop
lret
mov
loop
fidivrl
cmpsl
clc
jbe
lahf
mov
mov
xchg
sbb
xchg
xchg
inc
sbb
cmp
xchg
and
xor
jno
cltd
loop
mov
pop
movsb
stc
xchg
cmp
test
xchg
das
test
lods
xlat
inc
xor
lret
lea
dec
jnp
push
lcall
pop
push
push
mov
sbb
or
xorl
push
pop
adc
xor
xchg
ja
scas
dec
jb
push
aas
hlt
ret
lds
cmp
outsb
mov
addr16
test
je
divl
pop
or
sar
cmp
movsb
in
imul
imulb
cmpb
dec
icebp
int
jns
push
dec
xchg
add
sub
sub
addl
or
ljmp
jae
aad
xor
mov
mov
mov
pop
mov
movaps
out
cmpsb
mulb
outsl
bound
push
add
cmp
add
mov
test
ds
subl
mov
and
scas
loop
mov
mov
xchg
insb
adc
sbb
cmpsb
sub
sbb
jge
or
adc
cmc
mov
cmp
subl
xchg
mov
sub
test
lods
aam
frstor
cmpsb
pushl
or
mov
incl
and
dec
fsts
jg
jns
movsb
sub
fsubrl
scas
push
test
out
pop
pop
stc
push
xchg
inc
xor
cmp
bnd
iret
xchg
in
int3
cld
lea
or
inc
outsb
and
sbb
rcll
mov
adc
mov
mov
sti
lahf
leave
ret
lret
xchg
frstor
ret
sbb
and
in
adc
mov
test
xchg
cmpsb
inc
arpl
xchg
sti
xchg
in
popf
lods
sbb
popa
xor
jne
movl
aad
gs
dec
cli
jp
cmp
arpl
dec
adc
inc
push
imul
insl
ljmp
dec
shlb
loope
xchg
inc
cmp
pop
xchg
push
inc
and
mov
jnp
ret
shlb
and
loope
cli
mov
cmc
sub
gs
mov
mov
or
sbb
pushf
push
into
ret
loopne
xlat
add
xchg
sbb
aas
popa
dec
push
mov
mov
mov
test
or
mov
out
jge
scas
aam
bsf
mov
and
mov
subl
fmull
sti
fidivl
bound
jl
xchg
outsl
jp
mov
pop
lret
scas
popf
movsw
mov
ficoml
fwait
cmp
mov
repz
xchg
adc
push
xlat
push
call
sbb
jecxz
dec
pop
je
gs
sti
es
fcoml
sar
xchg
adc
jl
dec
sarl
jl
or
dec
test
push
ss
mov
andl
addr16
xor
adc
es
inc
fisttps
inc
stos
imul
ror
inc
mov
lret
or
sbb
xchg
rorl
test
jae
out
cli
dec
aam
fildll
test
cmc
jo
fwait
pop
push
jne
aad
adc
lahf
xor
xor
adc
fsubp
sub
push
cs
sbb
out
inc
inc
or
add
mov
xchg
test
jnp
fildll
mov
jno
mov
aaa
and
jnp
lock
data16
sub
or
mov
and
mov
cmc
testb
push
jne
pop
aaa
hlt
js
rcrb
in
cmp
ret
jnp
hlt
test
rolb
xorb
mov
test
aam
call
adc
cmp
jge
bnd
mov
cmpsl
adc
ljmp
mov
jnp
mov
or
jbe
test
aas
jnp
push
clc
mov
push
mov
jle
ljmp
jge
pop
dec
mov
dec
les
in
cltd
pop
mov
or
lret
icebp
dec
push
sub
sbb
mov
popf
xchg
inc
or
jmp
jnp
es
scas
and
or
xchg
xchg
arpl
cmp
fisubs
in
sbb
aaa
sbb
mov
adc
or
mov
pushf
and
xchg
adc
sub
imul
rorb
mov
jbe
shrl
out
mov
mov
mov
mov
dec
ret
dec
push
jb
rol
popa
mov
or
jge
repz
mov
sbb
cltd
cltd
ja
mov
jmp
clc
cmpsl
and
jns
sahf
mov
sbb
mov
popa
sbb
cmp
and
dec
in
pop
stos
xor
repz
int3
lcall
jo
push
jg
jecxz
mov
mov
lret
cmp
inc
mov
mov
div
outsl
lret
add
ljmp
mov
and
xor
xchg
mov
adc
insl
cmp
inc
loopne
cmp
ret
into
es
fmull
data16
in
aas
and
push
aas
ljmp
enter
push
repnz
test
inc
loop
lea
and
int3
mov
leave
hlt
nop
mov
insl
fstpt
add
in
cltd
cwtl
enter
int
js
lret
hlt
push
les
xchg
dec
push
jge
cmp
ss
adc
jl
das
pushf
add
lahf
pop
popf
jbe
xor
std
sbb
mov
dec
mov
jp
sahf
into
or
stc
sbb
xlat
mov
or
loop
mov
cmp
rep
dec
in
mov
sub
shrb
jp
cld
and
gs
adcb
outsb
mov
mov
xlat
sub
mulb
iret
dec
sbb
xlat
dec
aam
nop
sbb
outsl
or
clc
pop
movsb
mov
test
mov
cmpsl
in
dec
mov
fs
pop
mov
cmp
fstl
cmc
cmc
fdiv
mov
ret
inc
mov
les
gs
inc
incl
fcmovnu
testl
sub
mov
sbb
and
movsb
lahf
fldt
movsb
xchg
sub
dec
push
addr16
int3
fimuls
mov
js
push
push
cmp
int3
cmp
les
lock
xchg
stos
ficompl
xchg
in
lret
fmul
out
add
rcrb
into
adc
shll
popf
fsubs
xchg
in
push
sbb
ds
shll
testl
adc
imul
adc
mov
cmp
or
rcll
shll
push
imul
inc
pop
or
xor
mov
or
js
cli
lock
jp
push
testl
daa
jecxz
std
dec
xchg
xchg
or
or
dec
stc
outsb
mov
pop
mov
mov
call
nop
or
test
out
aam
pop
int
xlat
mov
insl
mov
dec
push
inc
xchg
sarb
ret
lods
cmp
pop
ljmp
test
icebp
fbld
dec
sbb
sbb
mov
sbb
dec
shlb
inc
in
leave
in
cmpsb
movsb
rol
jno
movsl
push
adc
fstpl
jae
leave
daa
cli
aad
ljmp
pop
ret
aas
add
adc
js
cmp
es
js
lea
lahf
and
cltd
insb
jg
cmp
add
addr16
mov
inc
xchg
mov
out
jle
cs
and
pushf
xor
mov
mov
pop
push
jp
pop
jbe
pop
xchg
ja
xor
lcall
aam
repnz
xchg
sub
add
sub
in
mov
jne
loope
adc
mov
arpl
outsb
shlb
and
push
and
pop
scas
adc
andl
mov
bound
pop
xchg
ret
iret
xchg
aaa
cltd
sarl
shlb
fnstsw
test
sub
or
popf
cmp
mov
adc
or
jmp
lahf
loop
mov
mov
and
pusha
xor
xor
mov
pop
adc
les
adc
pop
pop
call
test
int3
and
in
cs
sub
lock
jecxz
xchg
sbb
leave
ret
mov
repz
pop
dec
imul
int3
add
lea
mov
das
ja
addr16
pop
mov
loop
or
lds
mov
jns
pushf
movsb
rcll
xor
mov
add
adc
test
bound
mov
adc
rcll
repz
push
roll
inc
pusha
lahf
pusha
dec
arpl
xor
cmpsl
and
add
lret
mov
loop
jno
jmp
and
int3
cwtl
mov
scas
outsb
mov
fdiv
ljmp
fldcw
clc
pop
and
bts
sub
dec
dec
sub
jp
call
xorb
je
in
fs
fnstcw
cmp
cmp
xor
lods
stos
lds
daa
xor
inc
movb
cli
dec
cmp
out
or
jp
push
loop
inc
dec
pcmpeqw
xor
call
out
leave
or
mov
lock
sbb
pushl
int3
sar
sbb
jae
mov
ljmp
sub
test
sub
push
mov
popf
xor
and
iret
test
or
daa
dec
push
and
xchg
add
inc
cmp
and
lods
nop
push
inc
inc
fcomps
mov
pop
push
or
jmp
xchg
fstp
push
push
fcmovbe
xor
shrb
mov
scas
movsb
mov
xchg
add
movsl
pop
push
inc
mov
outsb
cmp
gs
decb
pushf
les
pop
pop
add
adc
outsl
in
adc
dec
lar
lret
mov
into
adcb
xor
out
sub
out
js
adc
mov
int3
jg
cmpsl
andb
ret
out
push
or
jge
aaa
hlt
mov
aad
ljmp
dec
pop
fwait
in
jp
dec
cmp
ret
insl
iret
cld
pushf
and
xor
cmp
xchg
lret
neg
push
xchg
push
jbe
pop
ljmp
cmp
or
hlt
shll
negb
roll
push
ljmp
jns
add
lahf
xchg
push
rcrb
inc
les
inc
dec
cmp
cmp
lods
mov
sbb
and
xor
imul
pop
dec
test
push
xchg
cmp
jecxz
jns
sub
mov
lret
rolb
dec
jg
es
cmp
fldt
in
pop
add
cld
stos
inc
ret
outsb
jp
mov
popa
lcall
bound
xchg
sub
push
sbb
mov
enter
sti
loop
push
inc
stos
loope
xor
dec
pop
dec
mov
hlt
or
xor
add
cmp
sub
jl
aaa
dec
or
add
or
jle
les
sub
adc
push
xor
mov
jg
in
rolb
pop
jge
cmp
dec
pop
insb
push
rcl
add
in
gs
xchg
dec
mov
movsb
lods
push
daa
and
sbb
mov
mov
jle
mov
leave
pop
mov
outsb
add
push
icebp
stc
and
adc
pushf
jno
xchg
in
mov
cmpsl
push
sbb
jg
push
pop
call
pusha
mov
in
push
cmp
out
cmp
and
xchg
adc
gs
mov
sub
dec
pushf
or
xor
xchg
push
push
xor
std
or
adc
repz
xchg
cmpsl
cmc
add
nop
js
in
aam
pop
and
dec
push
xor
pop
ja
mov
loopne
adc
sar
aaa
add
js
dec
pusha
jmp
jno
inc
imul
leave
les
xchg
push
repz
xor
mov
mov
mov
js
mov
sar
pop
sbb
cld
inc
lods
xchg
sti
ds
or
jge
iret
pop
pop
rolb
js
cmp
jecxz
roll
push
add
in
and
or
jl
cltd
pusha
cmp
outsl
sbb
xor
push
sti
stc
in
and
mov
lock
clc
fcomps
in
push
mov
lret
daa
and
pop
jl
and
push
and
aad
loopne
cmp
ja
in
mov
xchg
or
xchg
in
shlb
lret
fs
lcall
add
jns
xchg
in
sub
inc
cmc
dec
mov
cmp
std
movsb
mov
ss
mov
stos
mov
jnp
mov
pop
push
pop
mov
lock
push
mov
mov
rcl
push
fs
mov
call
das
out
or
pushf
cmp
mov
fimull
sahf
in
ss
xlat
mov
std
shll
jne
push
test
pop
adc
cmp
idivl
mov
js
or
mov
and
fcomi
or
jmp
xlat
pop
mov
sbb
cmp
lret
inc
and
cmp
xchg
xor
gs
push
xchg
decl
stos
pop
pushf
ret
lods
adc
push
push
in
mov
outsl
xor
imul
scas
push
dec
lcall
outsb
mov
and
inc
js
inc
xor
pop
jle
hlt
mov
mov
sbb
out
sub
add
or
dec
push
pop
add
mov
icebp
add
or
pop
rorl
mov
gs
je
xor
or
es
xor
pusha
dec
lods
out
xor
sbb
lods
mov
fsubrp
cld
aaa
push
mov
pop
jns
stc
movsl
push
arpl
adc
push
jle
je
fnstcw
xor
mov
mov
fnstsw
daa
clc
loope
lock
dec
mov
clc
sahf
push
add
stos
jae
lea
or
sub
bound
mov
test
mov
cmc
xor
mov
fidivs
movsl
clc
out
aas
xchg
mov
add
xchg
mov
pop
pushf
loop
jmp
or
mov
inc
cltd
inc
les
out
sar
pop
mov
lea
stc
movsl
pop
enter
cmp
into
neg
fidivs
cltd
inc
cmp
inc
mov
lret
iret
adc
ret
cmp
push
push
jb
cmpsl
push
lods
mov
push
cmpsb
dec
fs
mov
xor
cmovs
stc
xor
dec
inc
daa
lods
shlb
mov
daa
jae
insb
and
xchg
jp
xor
dec
pusha
dec
dec
fistpll
or
push
mov
shll
jecxz
stc
and
ret
lock
sub
scas
in
pop
inc
cmc
rcrb
push
daa
and
xor
mov
cmc
stos
insl
pop
jp
cmp
arpl
shlb
push
mov
fwait
jge
mov
sub
cltd
nop
aam
mov
bnd
ljmp
inc
adc
clc
adc
xor
jmp
pop
cli
dec
ret
and
aad
aaa
pop
call
xchg
pop
cwtl
mov
mov
mov
pushf
insl
fwait
mov
cs
sahf
mov
push
loop
aad
cmp
push
dec
and
sbbl
mov
and
fsubrl
into
jp
lret
aad
sub
jo
movsb
jl
nop
clc
dec
pop
fcmovb
xor
cwtl
push
xor
stos
xlat
dec
xchg
push
ret
test
pusha
push
ljmp
repnz
jb
xchg
ffreep
jecxz
dec
xchg
fdivs
ret
sub
mov
hlt
mov
inc
scas
outsl
mov
or
lret
jp
je
int3
xor
mov
ss
or
sbb
lock
jnp
cmp
mov
clc
das
push
push
out
xlat
lret
push
test
iret
dec
addr16
push
scas
inc
inc
mov
lock
fcmovnb
pushf
push
or
test
bound
popf
pop
cs
or
jnp
in
dec
push
dec
xchg
sbb
sbb
enter
mov
jle
cltd
or
pop
jbe
add
dec
sarb
lock
pop
mov
jle
and
and
mov
sbbl
pop
jns
xchg
leave
jge
js
sub
lret
rcrb
adc
push
movsl
pop
rcll
cmp
inc
xchg
std
pop
add
mov
in
mov
adc
cmp
jle
iret
mov
jbe
and
in
adc
dec
shrl
in
add
add
mov
dec
sub
jle
push
pop
and
repz
out
xchg
cmp
fcom
jmp
frstor
push
ss
test
adc
rcll
inc
dec
push
or
push
add
pusha
jae
int
cmc
inc
jecxz
add
adc
inc
movsb
cmpsl
push
and
imul
add
mov
rcrl
scas
xor
ljmp
inc
insl
cmc
xchg
lahf
ljmp
xchg
pop
popf
cmp
dec
fidivrs
ret
cmp
sbb
xchg
mov
test
cld
jp
ljmp
mov
jecxz
outsl
adc
call
jle
mov
into
add
jecxz
fs
insb
cld
jg
jb
faddl
enter
pop
pop
js
movntq
out
mov
push
ror
lret
pusha
fs
imulb
dec
mov
xlat
pusha
lret
fisubrs
mov
pushf
sbb
out
iret
inc
jmp
sub
add
xorb
sub
fsts
out
andl
sub
pop
and
jl
fidivrl
stos
push
sbb
add
jmp
lock
xor
add
and
push
insb
stos
mov
pop
or
repnz
data16
push
cmp
insb
sti
sub
ss
nop
push
cmp
pop
fdivrp
jbe
cmpl
fcompl
daa
imul
leave
add
rcrb
add
or
push
insb
mov
xchg
out
add
pop
movsl
mov
push
jnp
jae
push
iret
popa
jne
bound
inc
sub
jns
dec
mov
fdivs
sahf
into
movsl
daa
pop
jl
pop
dec
or
pop
mul
lods
and
jbe
iret
adc
ja
std
cmp
xlat
jp
pop
aam
enter
inc
inc
jge
adc
fisttpll
push
push
test
daa
xchg
ja
jg
or
pushf
sub
cmc
imull
int3
push
push
rolb
sub
dec
add
or
push
ret
loop
loop
stos
jbe
int
sbb
sub
int
fnstenv
or
jne
lcall
dec
xor
adc
cmp
bound
pop
hlt
ret
jg
sar
sbb
dec
mov
pop
mov
xchg
arpl
aas
out
inc
xor
push
es
jae
in
mov
imul
iret
push
sub
adc
push
sub
hlt
mov
shlb
mov
shrb
sbb
lods
cmp
push
sbb
jp
push
popf
sub
dec
sub
in
mov
add
int
gs
mov
mov
leave
sbb
out
ds
mov
jb
adc
cli
in
inc
cmc
xlat
int
enter
out
cwtl
out
mov
dec
pop
xchg
mov
cmp
cmp
or
sub
xchg
mov
mov
test
fistps
enter
stc
inc
xchg
lahf
call
and
cld
xor
xchg
call
mov
in
jmp
roll
insb
cmc
xchg
lcall
mov
stos
pop
jecxz
idiv
stos
cs
fildl
or
loope
fnstcw
fldt
loopne
fidivrl
and
sub
push
stos
mov
jmp
fdivl
and
pop
push
ret
aad
adc
rcrb
mov
jecxz
sub
aaa
cmpsl
std
sbb
xor
arpl
cwtl
aam
gs
in
push
lea
or
mov
xor
mov
inc
add
sub
jo
cmc
mov
jmp
lahf
loopne
fdivrs
xlat
ja
in
push
jmp
fbstp
mov
inc
jbe
xchg
xor
mov
loopne
sbb
push
cmp
call
sbb
shlb
out
outsb
dec
out
mov
adc
push
les
mov
lods
rolb
fisttpll
into
stos
fcompl
lret
loop
mov
pop
lahf
pop
sub
fsubrp
push
sub
cmpsb
cmc
lods
aam
mov
leave
push
lret
and
xor
cmpsb
lret
stc
sbb
pop
out
add
jbe
je
add
ret
cmpl
out
mov
js
jmp
mov
push
mov
lds
cmp
or
xchg
add
jnp
mov
out
push
cmp
mov
or
or
pop
sbb
pop
mov
pop
rolb
notl
lods
xor
adc
repnz
adc
cwtl
lea
add
shl
mov
cmp
xchg
mov
in
and
sbb
popa
and
js
lods
jns
and
inc
insb
dec
or
mov
loopne
repnz
xor
jno
es
mov
inc
enter
and
xchg
add
push
mov
outsb
in
test
int3
add
mov
add
icebp
mov
cmp
jns
movsl
xchg
mov
xchg
repz
jecxz
sbb
adc
jg
xor
ja
lds
mov
or
sar
jg
and
mov
jmp
pop
and
rol
shll
xchg
gs
xchg
jnp
add
lret
shlb
sbb
mov
pop
out
add
fsubrp
dec
cwtl
aam
cmp
mov
in
push
pushl
add
test
leave
push
rorb
mov
mov
in
pushf
push
inc
ds
add
cmp
js
sub
or
xor
adc
daa
add
and
xchg
arpl
dec
out
adc
out
jle
aad
lds
lds
sub
xchg
dec
xor
js
mov
mov
inc
aad
fldcw
or
xor
mov
fwait
ljmp
mov
xor
test
nop
test
mov
sti
mov
insb
mov
leave
cmp
es
inc
mov
ss
es
push
pop
jb
repz
test
repz
push
subl
scas
xor
xlat
ficoms
xor
aas
jnp
cmp
rorl
mov
push
pusha
ss
lret
mov
pop
shl
lret
ss
cwtl
lds
mov
mov
shrb
push
add
xchg
cwtl
dec
xchg
cmp
mov
fwait
xor
add
pop
das
and
cmc
inc
cmpb
iret
dec
add
fnstsw
mov
mov
les
inc
or
and
pop
sbb
es
out
cmpsl
mov
incb
sub
inc
in
lds
mov
push
xchg
daa
cmp
iret
int
clc
sbb
sub
cmp
inc
or
lock
std
scas
test
mov
jge
push
jne
xchg
lds
push
sbb
sbb
nop
adc
inc
testl
sub
pop
movb
call
push
mov
xchg
pop
inc
loope
add
repz
pop
lret
gs
outsb
mov
int3
adc
jmp
inc
push
and
jecxz
inc
cmp
sbb
repnz
divl
sbb
dec
gs
push
mov
outsl
and
and
lds
loop
inc
fsubrl
nop
adc
jno
mov
cs
mov
loop
inc
cmp
pop
mov
mov
fmuls
andb
mov
scas
jle
or
int
xchg
push
jne
fnstsw
sub
xchg
and
and
push
pop
lock
aam
pop
in
mov
outsl
bound
pop
cmp
push
ljmp
movsb
outsb
mov
pop
data16
into
les
ja
sub
clc
jmp
enter
stc
adc
mov
sbb
cmp
mov
mov
xchg
pop
pop
dec
popf
sbb
mov
repnz
mov
mov
insl
xor
aaa
mov
xor
stc
in
out
xor
repz
pop
mov
mov
xchg
cld
pop
int
xchg
ret
mov
pop
xor
cmp
jo
jp
lahf
jle
mov
arpl
imul
leave
int
cmpsb
xor
lcall
xor
push
sarb
lds
dec
fwait
lret
into
ficoms
dec
int3
push
mov
jl
repnz
xor
sub
push
pop
scas
adc
int
mov
xchg
mov
sahf
xchg
mov
shlb
mov
add
scas
mov
lret
xor
or
adc
sbb
fstpt
mov
cmp
mov
mov
or
and
add
lret
jg
fst
out
jne
cli
sahf
popa
rcr
enter
es
pop
subb
cmp
les
cld
xor
and
mov
int
stos
stos
pop
sub
or
push
call
jmp
mov
inc
jle
cwtl
xchg
fwait
mov
sub
cli
mov
int
scas
std
sbb
sbb
mov
mov
loopne
shlb
dec
jae
mov
jno
cmp
jl
push
mov
cld
fwait
pop
or
cmp
push
inc
inc
sub
mov
jmp
repnz
mov
or
aas
js
out
push
jne
insl
jo
mov
fs
popa
mov
bound
mov
mov
push
dec
cmp
out
imul
stos
ljmp
aaa
mov
xor
push
cmp
add
fnstenv
or
push
pop
or
adc
xor
jnp
stos
dec
stc
cmpsl
test
mov
enter
cwtl
ret
dec
aam
daa
push
loopne
ja
cli
cs
and
xchg
sbb
stos
jne
dec
or
int
mov
loopne
sub
and
push
insb
push
sahf
xchg
mov
pop
cwtl
bound
not
dec
orl
add
and
xor
insl
dec
test
leave
call
sbbl
pop
hlt
mov
jno
ljmp
add
xchg
scas
sub
mov
xchg
xchg
in
adc
out
loopne
push
aam
scas
andb
and
jecxz
out
mov
pop
data16
cmp
repnz
ss
popf
push
sub
ficoms
fisubs
mov
xor
push
repz
jo
adc
les
popf
insl
lret
mov
jecxz
jecxz
dec
sar
push
fs
clc
nop
fistl
addr16
mov
mov
lea
pusha
fdivl
sbb
mov
ret
dec
bound
mov
std
out
push
int
mov
cmp
ds
pop
cmp
test
or
inc
rorb
repz
sub
testb
scas
and
inc
or
inc
push
ret
mov
sbb
xchg
mov
pop
jmp
mov
outsb
inc
out
push
sub
nop
test
cmp
adc
addl
push
pop
outsl
sbb
mov
xor
jno
in
inc
sbbl
sbb
cmp
fwait
xchg
repnz
xor
ljmp
aad
mov
push
fisttps
das
xor
nop
shll
and
in
dec
sub
movb
jge
and
in
gs
sti
stc
bound
mov
mov
mov
nop
ljmp
andl
loopne
dec
adc
in
outsl
push
subb
dec
pop
iret
or
shl
popf
out
addb
dec
ja
lds
or
dec
xchg
aam
test
sbb
and
add
call
cltd
sbb
cmp
out
push
das
das
push
pushf
outsl
push
stos
mov
pop
push
and
je
loopne
loope
loope
cmpsb
sbb
ljmp
fsubrs
xchg
dec
outsl
mov
and
xor
push
call
stos
adc
adc
mov
lods
mov
push
push
adc
sbb
cltd
fs
mov
sub
cld
pop
inc
mov
movsl
inc
es
js
es
mov
jns
aaa
xchg
xchg
jnp
cmp
pop
or
push
sub
pop
xchg
pop
insl
js
loope
lds
fbld
mov
inc
das
cld
mov
jnp
movsl
cmp
ja
jb
jl
mov
mov
mov
push
push
or
xchg
inc
or
hlt
outsl
imul
imul
dec
lods
or
xchg
xchg
repnz
xor
call
or
lock
notb
or
push
enter
bound
frstor
xchg
loopne
mov
js
pcmpgtb
movsb
mov
sbb
pop
jbe
popa
rorl
pushf
mov
adc
push
xchg
test
jmp
adcb
cmp
sbb
sahf
jmp
adc
push
pop
cmp
sarb
ret
sub
pop
or
sub
loope
adc
cs
lcall
or
insb
testb
nop
loope
stos
sbb
pop
mov
and
fwait
mov
cmpsl
push
in
jmp
lcall
inc
mov
fildll
popf
push
out
mov
lret
xor
push
ljmp
cmpsb
popf
cmp
and
mov
xchg
mov
bound
arpl
jmp
cmp
inc
shlb
inc
out
push
lret
mov
push
sub
xor
pop
es
sub
nop
mov
jno
cmp
rol
push
cmpb
lods
popa
inc
adc
icebp
push
inc
xor
sub
stc
es
xchg
mov
push
mov
cs
cmp
jle
insl
mov
mov
mov
mov
inc
jecxz
jmp
cmp
pop
dec
sub
mov
in
and
jo
jae
in
dec
jb
add
shlb
enter
dec
loopne
and
sbb
stc
mov
es
cmp
mov
xchg
ljmp
adc
out
clc
stos
and
inc
sti
sbb
sti
pushw
sti
sahf
jl
lods
or
sahf
or
into
lahf
lahf
shrb
stos
push
lahf
xchg
sub
pop
and
rorb
pop
paddw
mov
sbb
jne
push
sti
arpl
xchg
xlat
adc
xor
pop
negb
pop
stos
movsb
and
sbb
movsb
daa
loop
dec
cs
sbb
test
sub
adc
cmpsb
mov
mov
lahf
cmc
lea
iret
mov
mov
jge
ret
sbb
xchg
stos
fdivrl
fucom
lods
xchg
pushf
fdivrp
into
stos
je
cld
sahf
xor
mov
vandps
fldenv
dec
and
int
jo
inc
inc
xor
fisttps
xchg
ja
daa
cltd
push
aam
imul
mov
cmp
int
pop
push
out
popa
orb
outsb
hlt
bound
push
test
mov
add
and
test
out
push
subb
xor
jecxz
jb
into
dec
sub
jno
cmc
mov
push
lea
mov
jecxz
cmp
lret
pop
push
push
xor
out
cmpsl
mov
cmc
sbbl
and
outsb
add
jle
push
jecxz
addl
pusha
or
pop
add
adc
inc
or
push
notl
cmp
pop
mov
iret
popf
sub
movhps
in
jmp
pop
test
xchg
scas
mov
dec
out
jb
lahf
pop
in
jo
dec
dec
jge
mov
inc
ror
repnz
mov
not
adc
ljmp
mov
shrb
ficomps
dec
fistl
dec
fistpll
dec
xchg
shlb
bound
dec
xor
inc
lods
lea
mov
jg
add
push
insb
fdivrl
inc
dec
ljmp
aam
bound
out
addr16
and
sub
ficoml
mov
or
sub
shll
add
hlt
inc
mov
idiv
mov
mov
lret
pop
xchg
hlt
test
dec
jbe
push
lret
ror
out
pop
lods
loopne
test
jb
jge
enter
popf
add
sub
insl
sbb
jg
dec
lret
cmp
pushf
cli
jb
xchg
cwtl
add
cmp
sahf
mov
adc
pushw
jecxz
jmp
stos
sub
cmp
fucomi
push
mov
sbbl
fiaddl
xchg
inc
adc
dec
mov
call
cmp
sahf
ficomps
or
pop
clc
lret
mov
int3
sub
xor
in
add
fistps
stc
mov
mov
mov
push
insl
sarl
jae
mov
fcmovb
push
popa
aas
inc
pop
pop
mov
add
imul
push
sbb
mov
pop
ds
sbb
sbb
repz
pop
mov
sbb
shll
cld
mov
xchg
pop
clc
rclb
jle
cmpsb
faddl
leave
hlt
iret
mov
rcl
out
mov
outsl
sarl
call
aad
add
ljmp
push
mov
cmp
jle
jae
bound
cmc
mov
cmpsl
vpmaxsd
jmp
sub
jge
je
jge
ss
cmp
mov
mov
jns
cli
bound
jbe
loope
bound
or
gs
fs
inc
lods
sub
mov
adc
sub
nop
jns
jmp
push
dec
hlt
adc
push
fstl
enter
fwait
lcall
lods
xor
mov
mov
pop
add
les
outsl
rcr
inc
dec
out
loop
cmp
add
daa
add
inc
cmpsl
faddp
xlat
je
clc
pop
dec
stos
xchg
les
es
cmp
xor
dec
xchg
out
pop
lahf
or
and
jl
jne
pop
aad
arpl
xchg
sti
aam
fnsave
dec
aad
pop
sub
enter
xchg
hlt
test
movsl
mov
jae
inc
nop
mov
mov
addr16
or
lcall
xchg
fnclex
pop
movsb
loope
stc
cmp
mov
xchg
ja
int
filds
dec
sbb
and
movsl
jo
xchg
data16
adc
pop
mov
and
cmc
loope
sbb
ljmp
xor
bound
cmp
and
call
fs
and
fdivrl
test
popf
or
and
popf
mov
mov
pop
and
std
pop
mov
xchg
dec
ficoms
adc
shl
sbb
push
pop
pushf
addl
pushf
scas
sbbb
mov
aas
xor
frstor
sbb
mov
neg
cld
jo
inc
adc
imul
mov
jp
mov
jp
inc
dec
mov
negl
cwtl
test
push
mov
cwtl
push
jl
aam
loopne
add
cs
imul
aaa
sbb
push
sbb
pop
dec
cs
jbe
cld
ret
mov
pavgw
rcrb
dec
pop
stos
aaa
push
adc
mov
cmp
fistpl
pusha
es
or
xlat
clc
sbb
xchg
stos
sub
ljmp
inc
mov
cmpsb
idivb
jp
fucomp
and
cwtl
push
mov
stos
dec
jbe
bound
dec
xchg
cli
pushl
stos
fildl
xor
add
loope
ret
mov
push
cmc
add
cmc
jl
leave
dec
jns
pop
mov
push
je
jne
orl
jecxz
dec
call
pop
pop
or
lahf
jno
add
add
test
lea
mov
inc
data16
mov
data16
dec
inc
subb
imul
sti
out
and
jmp
adc
sbb
or
jg
mov
mov
pop
add
pop
test
jge
enter
mov
jne
pop
fwait
push
cmp
cmp
ret
sbb
jo
push
sbb
into
fidivrl
lock
sub
jbe
mov
test
jp
sub
xchg
call
and
mov
imul
das
xchg
test
mov
das
jno
mov
mov
xchg
repnz
repz
lods
cmp
cmc
pop
cwtl
inc
mov
jns
mov
add
inc
sbb
or
fisttpl
repz
hlt
mov
sahf
or
decb
dec
dec
push
jmp
gs
jno
adc
ja
add
xchg
repnz
or
shlb
mov
mov
cmp
xor
adc
jno,pt
sbb
aad
and
mov
pop
fildl
mov
shrb
xlat
sbb
fdivr
and
xchg
jnp
lock
sub
and
sbb
idiv
mov
inc
pop
and
arpl
sahf
inc
repnz
daa
iret
cmp
les
add
cld
cmc
cltd
out
aad
add
sbb
popf
mov
mov
rorl
push
lcall
pop
cli
lcall
fs
sbb
pusha
scas
nop
leave
cmpsb
out
fcomi
pop
loop
rorb
addb
stos
xor
jne
mov
lock
loope
fs
and
jne
pop
mov
mov
test
lods
movsl
jbe
pushf
leave
cs
jmp
cmc
mov
push
bound
lods
bound
mov
or
sbb
sar
mov
into
in
dec
lret
inc
xor
addl
jne
push
xchg
rcrl
out
andb
lahf
sub
cmp
leave
xchg
jle
add
xchg
sti
fs
xchg
shll
imul
sub
xchg
push
repz
aad
fnsave
fs
sbb
mov
and
xor
xchg
mov
jg
xchg
mov
mov
inc
sub
dec
xorb
loopne
add
pop
or
int3
jnp
fldl
sub
lea
dec
js
pop
xchg
cli
stos
and
fdivs
xchg
gs
repnz
inc
and
adc
rcll
dec
lret
cld
sbb
inc
lods
pushf
fisubrl
dec
gs
icebp
stos
ljmp
fisubrs
jae,pn
or
int
mov
mov
pop
test
enter
sbb
dec
xor
addr16
cmpb
pop
xor
or
das
adc
lock
cmp
cmp
xchg
scas
cmp
lahf
and
mov
fcomip
mov
sub
aad
xchg
loope
enter
sbb
dec
sbb
sub
mov
ja
jge
xchg
jne
sti
unpcklps
inc
pop
ljmp
out
push
xor
dec
jg
sub
jo
andb
lds
enter
daa
into
cmc
mov
stc
xor
in
sti
test
push
repnz
lcall
push
fdiv
xor
adc
adc
loop
push
es
ror
out
outsb
dec
inc
ret
mov
xor
clc
mov
ficompl
stc
add
dec
clc
dec
ret
push
aaa
mov
arpl
add
cmc
lret
mov
iret
sahf
pop
frstor
xchg
push
add
test
or
lds
xor
xor
xchg
jp
and
pop
mov
ret
mov
sub
fucomp
and
and
xchg
ret
mov
les
pop
lock
jo
and
sub
ja
dec
pop
lods
xor
aas
push
mov
sub
xor
push
pop
aam
loope
inc
mov
and
out
sti
xor
fstl
test
inc
mov
lret
jb
imul
mov
sub
iret
xchg
mov
cmp
ja
jecxz
jnp
cs
push
je
adc
and
decb
filds
sub
cmc
loop
test
fldt
sbb
addr16
mov
das
mov
add
bound
dec
enter
mov
mov
ret
sbb
out
repnz
xchg
jecxz
clc
movsb
xor
cmpb
and
imul
jecxz
je
push
or
fistps
push
cmpsl
dec
pop
test
adcb
jecxz
sub
add
cmpsb
in
data16
mov
jmp
incb
pop
add
je
scas
arpl
outsl
ret
sahf
scas
push
dec
jno
scas
xor
test
test
mov
popl
and
rclb
xor
out
sbb
sub
bound
orl
in
dec
sub
xor
notl
xchg
les
push
fisubrl
ja
or
inc
fists
pop
xlat
pushl
pop
cmc
mov
jno
pop
jmp
jns
enter
imul
pop
mov
aas
fsubrp
adc
or
push
push
mov
add
pop
xchg
cmpsb
iret
jle
adc
testl
sbb
arpl
in
sbb
mov
movsl
jg
and
xchg
xchg
mov
cli
aam
add
lahf
pop
xchg
pop
jne
mov
leave
jge
fildl
nop
xchg
mov
jne
enter
dec
ret
pop
scas
jl
inc
sbb
sub
out
in
gs
ss
push
and
test
sub
mov
xchg
lea
inc
inc
insb
enter
xadd
jns
imul
mov
xchg
mov
xor
fwait
es
ret
fucomi
mulb
sbb
js
mov
addr16
jp
into
cld
repnz
xor
les
jae
daa
mov
mov
xchg
cwtl
xchg
mov
xchg
mov
popa
xor
add
mov
fistl
outsl
adc
lahf
sbb
test
inc
ss
sbb
mov
pop
xchg
sti
pusha
xchg
fstps
jo
cmp
adc
xchg
mov
je
into
mov
mov
scas
fcmove
xchg
rorl
xchg
cltd
leave
cli
pop
imul
push
insb
ljmp
cmpsl
dec
movsl
cmp
repz
aam
lret
adc
das
mov
jne
sbb
pop
fstl
pop
fs
arpl
xchg
inc
jns
ret
fldcw
pop
icebp
push
test
push
loop
aad
imul
repnz
mov
in
imul
aad
mov
lcall
inc
xchg
loopne
out
pop
mulb
jg
imul
push
repz
pop
xchg
or
dec
adc
sbb
push
lds
add
jecxz
stos
and
arpl
test
push
xor
mov
adc
add
inc
adc
lods
inc
or
les
and
ljmp
push
cmp
je
stos
daa
pop
mov
sbb
cld
je
imulb
push
scas
data16
mov
or
xor
inc
push
test
mov
stc
xor
sbb
jg
xor
add
rolb
and
mov
push
fldcw
out
shlb
mov
fstps
lock
je
cmpl
pusha
js
je
cmp
jb
punpckhbw
xor
outsl
in
push
shll
mov
movsb
pop
arpl
cltd
or
aaa
jae
pop
push
mov
je
or
push
pusha
adc
pop
xor
fbstp
sahf
jl
cmpsl
mov
push
adc
inc
adc
inc
adc
mov
mov
adc
shrl
mull
pop
inc
mov
dec
push
add
leave
icebp
repz
push
pop
mov
ds
dec
out
push
mov
push
pop
push
jg
cltd
arpl
in
jns
dec
and
mov
jnp
das
dec
or
rcll
xor
mov
enter
adc
dec
mov
mov
push
inc
mov
add
mov
hlt
jg
sti
repnz
enter
push
pushf
out
aam
cmp
popa
pop
jecxz
sbb
xchg
and
cmp
mov
aaa
xchg
out
lret
decl
xor
into
sub
push
xchg
xorl
fucomi
mov
dec
stos
mov
pop
cli
icebp
lods
fcompl
add
addl
inc
adc
lea
loope
aam
xchg
dec
fcompl
fisubrl
clc
aam
imul
fistps
nop
arpl
in
mov
outsl
mov
mov
fs
inc
adc
xor
mov
sarb
xchg
in
lods
imul
jae
xor
sbb
loop
and
popl
into
idivb
add
jle
xor
push
or
lock
pop
mov
push
gs
rcr
lret
mov
aaa
sub
outsb
xchg
leave
fucomip
mov
cmp
push
xchg
pop
int3
pop
sbb
gs
out
mov
daa
loopne
mov
cmp
sbb
and
xor
mov
adcl
push
mov
or
lea
mov
nop
add
pop
dec
test
inc
pop
sbb
std
insb
cltd
push
aas
or
gs
sbb
adc
int3
inc
pop
dec
ret
dec
shll
popa
loope
adcl
mov
lahf
xchg
adc
inc
sub
in
cmp
dec
cmp
cmp
push
mov
insb
push
daa
repz
inc
out
leave
daa
jecxz
dec
mov
xor
in
mov
add
pop
jge
int3
fmuls
test
push
adc
lods
jno
iret
insl
mov
fistpl
xor
adc
insb
fisubs
leave
or
and
jo
fsubl
ret
enter
cmp
add
in
lds
inc
jle
push
and
sub
sbb
int3
inc
xorb
icebp
and
dec
and
out
sub
stos
jno
sub
sti
mov
sti
and
jecxz
iret
jp
inc
ljmp
xchg
jns
in
mov
rcr
cmp
imul
mov
pop
jno
movb
jbe
sub
cwtl
inc
xor
and
add
xor
dec
push
shrb
sbb
test
xchg
add
leave
loop
lret
jl
push
add
out
mov
rolb
pop
mov
gs
outsl
pop
mov
lock
add
fmuls
and
push
imul
outsb
daa
dec
mov
xchg
mov
jbe
xor
lahf
aam
lcall
and
jbe
xor
lret
xchg
add
das
ret
pop
mov
jg
enter
lods
sub
cmp
insl
and
popf
sub
ffree
mov
out
cmpsl
jecxz
mov
xlat
out
clc
int
in
sbb
jns
movsb
sahf
mov
mov
sub
dec
mov
adc
test
scas
xchg
test
adc
fs
cwtl
leave
mov
je
mov
leave
mov
scas
jb
sbb
cmpsb
pop
jbe
test
sahf
sub
or
ljmp
test
mov
pop
push
lock
mov
fidivrl
ss
pop
push
pop
incb
sarl
iret
stc
into
out
cmp
inc
sub
sbb
push
icebp
jmp
movsl
lock
or
xor
push
add
ja
fs
lret
dec
lods
mov
cwtl
sbb
dec
adc
push
mov
sub
icebp
lret
jnp
cmp
not
push
inc
mov
and
cs
and
cmc
lahf
add
jmp
mov
out
dec
dec
hlt
jno
in
xor
push
inc
push
xchg
push
xor
popf
mov
sub
jg
arpl
adc
das
repnz
in
or
or
mov
jb
pusha
adc
pop
inc
insb
push
adc
sahf
push
sbb
cmpsl
jecxz
rclb
cltd
jne
inc
mov
mov
inc
dec
adc
dec
fdivs
or
inc
lock
add
lods
push
iret
xlat
cs
cmpsb
pop
addr16
xchg
pop
sub
in
cli
and
add
popa
mov
inc
imull
xchg
cmc
dec
ss
sbb
testb
loope
out
mov
add
or
fstl
cmpsl
lea
jg
das
fwait
or
and
sbb
lds
movsl
mov
cmpsb
mov
aaa
mov
outsb
jae
ret
dec
jo
xchg
xor
stos
ss
pop
pop
inc
or
add
inc
pop
roll
adcl
cmpsl
xchg
and
fstps
or
clc
add
outsb
mov
sbb
inc
int
jo
adc
mov
mov
popf
inc
mov
sub
loop
pop
dec
out
xchg
pop
or
aas
enter
mov
lcall
mov
mov
sbb
mov
into
gs
mov
inc
cmp
adc
or
mov
jo
popf
push
loopne
xchg
and
xchg
das
pop
jmp
jmp
ja
in
xchg
push
rcrb
stos
mov
ss
stos
adc
stos
jge
ret
mov
shll
in
jnp
add
mov
cmp
mov
sbb
ret
jl
lods
and
lcall
lock
sti
dec
jmp
scas
outsl
ljmp
repnz
sbb
ja
ret
insb
ss
loop
mov
arpl
push
and
stos
lea
lock
scas
mov
lcall
out
das
fsubp
jecxz
dec
mov
movsb
or
jbe
dec
lds
mov
mov
outsb
mov
shll
lret
inc
stc
sbb
test
xchg
jecxz
jmp
insb
sahf
inc
mov
out
dec
out
xchg
push
and
xchg
jns
popa
xchg
rcrb
iret
ljmp
sbb
test
jae
faddl
pushf
adc
leave
mov
lock
push
xchg
imul
jnp
xchg
imul
sbb
adc
or
xchg
insb
xlat
fs
pop
popa
adc
cs
adc
test
or
pop
push
and
cmp
out
dec
push
movups
lahf
nop
mov
jb
adc
inc
cltd
cld
sahf
xchg
sahf
mov
fwait
mov
loope
dec
push
dec
xor
stc
or
iret
xor
clc
sub
push
push
pop
cs
or
pop
push
push
cmp
mov
sahf
sub
fcoml
add
push
push
xor
or
sarl
cmpsb
pop
and
or
out
pushf
add
cmp
int3
pop
faddl
mov
or
cmc
xchg
xor
and
dec
out
mov
fiadds
inc
aam
inc
ret
je
popl
mov
add
cmpsb
lods
sti
pushf
jge
insl
cs
in
insb
lahf
pop
and
push
pop
jmp
adc
adc
frstor
outsb
subl
test
xchg
lods
call
shlb
lods
cli
cmp
pushf
ja
movnti
adc
lret
xor
push
loopne
cs
mov
inc
sbb
fistl
stos
and
pop
cld
pop
mov
pusha
xchg
jnp
pop
mov
and
fsubrs
cmp
test
nop
aas
cmp
jns
inc
push
je
add
xor
ret
mov
ret
cltd
in
inc
mov
out
test
in
xchg
push
lods
cmpsb
mov
sbb
sub
out
adc
xor
iret
stos
inc
pop
mov
add
mov
add
nop
xchg
call
or
mov
sbb
pop
mov
mov
aaa
xchg
shlb
mov
add
fs
jmp
jns
push
sti
stos
xor
sub
jno
lcall
das
cmp
dec
pusha
call
mov
cltd
fcoms
cmp
addr16
pop
lret
xchg
add
iret
add
and
mov
lcall
mov
dec
dec
cwtl
jnp
cmp
mov
fcmovb
test
adc
sub
inc
pop
cld
out
in
repnz
push
repz
mov
cmpps
popa
jne
cmp
es
std
add
fdivs
repnz
mov
fldenv
dec
xchg
test
push
subl
cltd
cmp
pop
jle
and
sti
out
jl
xchg
pop
pop
imul
vcvtps2ph
mov
fists
lods
popa
jle
mov
shll
fucomip
roll
xor
stos
inc
xlat
xor
cmp
dec
lahf
sub
mov
inc
ljmp
pop
fiadds
out
mov
mov
cwtl
cmp
test
fdivs
adc
int3
pushf
pop
mov
out
insb
shlb
clc
inc
jne
shlb
out
xor
push
and
pop
mov
xor
fildl
mov
imul
lret
cmp
mov
dec
jmp
mov
cmpsb
inc
sahf
pop
jne
fdivs
rorl
mov
push
pop
mov
fwait
xchg
xorl
subb
sub
adc
aam
dec
je
clc
xor
jl
loope
push
les
jp
dec
out
xor
aam
jg
push
testb
sbb
lret
mov
xor
inc
shrb
jmp
and
aaa
mov
jl
dec
xchg
xor
fsubrl
inc
stos
jo
dec
xchg
mov
push
mov
push
xchg
push
adc
add
inc
pushl
and
pop
andl
push
icebp
and
test
in
pop
jge
rol
xchg
inc
xchg
mov
inc
les
push
loopne
sbbb
cld
cltd
cmpsb
mov
out
cmc
mov
dec
inc
popa
push
sbb
xor
pusha
adc
jmp
mov
jle
sbb
pop
out
adc
and
adc
push
cli
and
mov
mov
fldcw
sub
ja
cs
out
ljmp
xor
out
mov
pop
mov
pushf
add
xlat
push
mov
inc
jge
in
xchg
test
test
loopne
xor
cmp
dec
xor
mov
add
mov
ss
add
shll
outsl
popa
sub
xchg
or
pusha
imul
int3
shr
call
daa
fldenv
pop
adc
idiv
cmpsl
jnp
mov
jno
jns
inc
sbb
mov
hlt
aad
pop
repnz
mov
int
sbb
jg
cmp
and
jae
fmuls
push
clc
xchg
sbbb
mov
in
mov
test
mov
aad
sbbl
test
int3
mov
rorl
loope
in
push
push
out
mov
aas
or
lret
clc
sub
or
lcall
clc
push
dec
mov
fucom
in
ljmp
lods
xchg
movsl
lods
test
iret
jo
xchg
repz
cld
aaa
ret
popf
inc
lret
pop
jmp
lahf
pop
jbe
lock
xchg
dec
mov
inc
sbb
shll
mov
cltd
add
adc
mov
hlt
dec
sub
lods
lahf
xor
and
nop
arpl
fwait
in
out
je
xchg
out
addr16
cmc
shl
sahf
in
mov
or
and
push
add
pop
add
dec
lret
inc
add
dec
inc
jb
mov
pop
inc
mov
pop
leave
push
psraw
lods
push
sub
ret
repz
mov
push
cmc
clc
cld
xchg
insb
fsubl
lahf
dec
jnp
adc
inc
dec
aas
mov
mov
adc
clc
faddp
lods
mov
mov
push
pop
adc
test
pop
inc
das
and
cmp
es
rcrl
cmp
pop
jae
push
lea
mov
ret
mov
cwtl
fucom
inc
push
repnz
in
xor
pop
out
xor
sub
mov
dec
mov
in
pop
ret
jle
sbb
sub
xchg
adc
mov
int
jnp
dec
add
and
movsb
sbb
shll
call
pop
push
jb
iret
adc
mov
fs
add
icebp
jne
mov
jb
dec
xor
mov
cmp
lds
dec
pop
into
rcrl
mov
stos
out
mov
pushf
ds
leave
jne
xchg
mov
ret
xlat
mov
repnz
in
sahf
pop
xlat
popf
sbb
cld
fidivrs
out
mov
inc
mov
aas
xchg
daa
int
int
mov
adc
mov
pop
inc
mov
fisubrs
xchg
loop,pt
sbb
subb
inc
pop
push
pop
cli
adc
imul
iret
or
jecxz
adc
push
fstpt
push
data16
outsl
fstpl
aam
pop
inc
xchg
cmp
jl
dec
ds
mov
lret
aam
fwait
mov
sub
xor
roll
xor
lock
xorb
cmp
std
aas
adc
or
ret
stos
pop
jae
adc
cmp
push
add
sub
dec
cld
daa
and
test
jecxz
fistl
out
pop
les
scas
negl
cmpsb
into
scas
inc
sbb
data16
in
call
mov
push
mov
std
sub
cmp
sbb
ds
mov
sbb
sbb
mov
mov
push
bound
push
mov
cmp
sti
test
mov
cmpl
out
push
sub
push
das
mov
jle
nop
jg
es
roll
or
jo
rorl
jb
mov
pop
stos
ja
push
xor
loope
pop
cmpsl
stc
aam
aas
xchg
sbb
dec
pop
push
cltd
ret
mov
mov
xchg
iret
int3
aam
cmpsb
dec
sub
daa
cwtl
testb
xchg
cld
aam
fldz
push
insb
jb
xchg
ror
add
xchg
arpl
pop
iret
pop
xchg
jns
sub
fbstp
fdivrs
lds
pop
loopne
dec
insb
hlt
stos
lods
scas
cmovbe
cmp
insb
aam
fistps
jo
aas
rorl
sbb
xchg
shlb
addb
adc
loop
in
inc
xchg
and
rcrb
mov
leave
xor
outsl
dec
jle
add
jns
adc
lret
out
out
lret
mov
xchg
pushf
iret
mov
xchg
or
cltd
xor
and
pop
mov
fsubrl
push
xor
popf
cld
mov
xchg
fimull
into
les
out
cmp
sbb
mov
push
add
mov
in
call
mov
cmp
mov
ret
mov
cmp
sub
adc
mov
pop
lea
sbbl
sub
outsb
push
cmp
or
mov
or
adc
cli
test
xor
adc
imul
into
sar
and
mov
fstp
mov
aaa
cmp
lods
test
push
loopne
fisubrl
push
out
mov
scas
repnz
clc
outsb
jmp
xor
lea
add
out
daa
std
cmp
xchg
addr16
std
into
push
stc
cmpsb
xchg
enter
mov
addb
test
sub
inc
movsb
ljmp
pop
dec
jg
dec
mov
mov
repnz
cmc
fsubrp
aas
inc
aam
fistpl
aam
sti
jns
cs
rolb
xchg
and
scas
in
lock
sahf
adc
or
xchg
or
sbb
mov
and
mulb
mov
or
sbb
mov
add
fwait
or
or
inc
minps
xlat
inc
jno
ss
fisubs
cltd
lcall
xchg
adc
ljmp
scas
mov
pop
jecxz
sbb
loop
std
fs
push
popa
rorb
enter
sahf
test
decb
xchg
ja
outsb
addl
mov
xchg
mov
scas
ret
add
jno,pn
sub
sar
and
xchg
jo
jb
movups
ss
jb
sbb
jmp
jecxz
xchg
inc
xor
pop
sub
push
push
cs
jmp
and
cmp
push
fiaddl
xlat
lods
repz
or
jns
pop
add
add
jae
or
jo
aad
shlb
rolb
add
stc
jns
mov
daa
inc
xchg
mov
call
repnz
dec
adc
js
add
xchg
insb
iret
outsl
sub
cld
stos
jp
mov
inc
jno
test
jae
shrl
cwtl
fsubrs
mov
andl
adc
xor
add
std
push
ror
push
push
pop
mov
add
repz
je
sub
push
adc
xor
imul
loope
adc
scas
ss
sub
cmp
mov
into
adc
mov
xor
cli
push
lods
push
lret
mov
imul
push
sbb
sub
lcall
mov
mov
gs
arpl
rcr
into
jmp
or
scas
xor
jecxz
insl
mov
stos
js
in
mov
mov
xlat
xchg
inc
imul
aam
pop
mov
call
cmpsl
hlt
imul
cmpsl
cli
or
mov
pop
fstps
pop
hlt
inc
loopne
addr16
mov
cli
or
subb
sub
or
pop
iret
adc
addr16
repnz
xchg
stc
andl
or
enter
or
xorl
push
cwtl
pop
fwait
sti
lret
ss
or
dec
sbb
jb
mov
test
stc
jmp
subl
rcrl
imul
cld
pop
fiaddl
aam
in
in
adc
mov
jns
arpl
dec
movl
cld
ss
xchg
pusha
loope
andl
sub
mov
ja
idivw
icebp
mov
cmc
daa
into
fcoms
enter
pop
aas
mov
mov
sub
cld
int3
shll
mov
daa
mov
imul
jnp
out
inc
shlb
stos
jne
and
jmp
repnz
dec
or
insl
in
sub
pusha
mov
pop
dec
je
xchg
dec
adc
repnz
fadds
and
push
sub
stos
xchg
dec
lret
xor
lods
jecxz
ja
cmpsb
call
mov
pop
in
cld
icebp
add
xchg
jecxz
cmp
inc
clc
cmp
adcl
bound
dec
sbb
inc
call
cmp
lea
imul
and
push
inc
xor
mov
iret
cmp
pop
lds
jne
cld
aam
and
and
mov
push
out
shrl
cmpsb
popa
insl
jg
cmp
fdiv
lods
cmc
jecxz
mov
jmp
sarl
rorl
rcrl
les
sti
mov
pop
outsl
cltd
jns
stc
mov
sub
in
loop
in
cmp
scas
rolb
add
jl
rcll
jo
xor
add
xor
adc
in
shr
or
lret
adcl
mov
ficomps
push
popf
icebp
cmpl
mov
js
neg
sub
rcrl
popa
andb
and
mov
stos
test
cmpsb
repz
jo
jns
rorb
leave
push
aaa
imull
adc
cmpsb
pop
loop
adc
add
xor
sbb
ret
or
push
out
xchg
mov
adc
mov
in
in
insl
pop
movsb
jnp
out
pop
out
sbb
std
addl
inc
addr16
push
js,pt
and
fnsave
and
push
das
jno
andl
cmp
popa
gs
mov
into
fwait
ljmp
dec
pop
insl
and
daa
sbb
sbb
das
add
push
inc
cltd
imul
pop
inc
push
jnp
and
les
mov
cs
jp
imul
push
xchg
xlat
or
cmpsl
mov
push
push
push
cmp
adc
cmp
mov
loop
gs
aaa
mov
mov
jnp,pn
jae
cmpl
push
or
push
andl
dec
pop
in
xchg
inc
pop
cld
out
movl
push
jl
mov
jp
cli
sbb
das
sbb
push
mov
and
add
mov
jp
addr16
je
sbb
dec
popa
sahf
add
xchg
xor
fstpl
stos
cmp
call
mov
rcrl
xchg
clc
sub
aaa
push
mov
sti
jmp
push
push
mov
fnop
pop
and
mov
pop
or
cli
sub
xchg
push
pop
sub
sub
mov
cmp
jnp
fcomps
jnp
aam
jae
jne
mov
mov
les
out
pop
ret
push
sbb
sti
push
xchg
cmp
outsl
js
test
add
jp
mov
ficoms
add
rcll
mov
jno
ljmp
dec
mov
loopne
adcb
rorl
addr16
fs
ljmp
fildll
cmp
pop
ret
bound
test
imul
out
or
sbb
push
xor
or
add
ficoms
mov
addl
xchg
lock
dec
sbb
in
add
test
push
sub
cwtl
or
xor
push
out
int
movsb
xchg
js
testl
bound
jge
out
xchg
xor
mov
cmpsl
stc
mov
pusha
cld
mov
xchg
repnz
pop
xchg
cmp
mov
jge
or
inc
out
ret
dec
mov
std
ds
push
lods
fistl
sarl
loope
bound
js
testb
daa
in
shll
test
add
mov
movsl
jmp
push
lods
and
or
js
nop
call
mov
cli
mov
jg
mov
lret
xor
bound
icebp
rcrb
ret
ljmp
inc
xchg
out
dec
inc
sbb
stos
or
inc
xchg
push
mov
ficomps
lods
adc
repz
inc
push
push
mov
xchg
push
inc
ds
pop
push
xchg
sub
sbb
ret
xchg
jmp
sbb
pop
xchg
rcr
mov
das
jo
mov
cmp
push
cltd
cmp
ja
jmp
mov
pop
mov
mov
ds
lahf
in
aad
mov
xor
testl
pop
fidivrl
in
clc
push
loope
inc
les
sub
push
push
mulb
outsb
cmp
sbb
das
adc
inc
into
dec
pop
jp
fbld
mov
xor
sbb
bound
inc
jnp
ret
sarl
add
in
ss
add
movsb
cmc
inc
gs
jb
popf
cmc
xor
pop
add
dec
rorl
mov
jbe
ret
dec
movsl
mov
dec
adc
aad
mov
dec
das
jae
add
mov
cmp
xchg
jl
rorb
xchg
out
xor
xor
lods
mov
mov
std
push
sbb
and
dec
add
gs
mov
cmp
add
or
fwait
cmp
cmc
sbb
addr16
push
mov
cltd
push
in
sti
or
inc
out
fbstp
scas
xchg
shlb
inc
add
iret
jb
push
jb
lock
add
jbe
aam
and
push
sti
jo
lock
leave
mov
dec
cmp
ss
iret
into
sub
ds
jns
pusha
and
inc
jmp
sbb
out
ja
push
jnp
das
cmp
pop
std
sub
jo
lcall
mov
loope
rcl
ss
push
bnd
mov
lock
push
mov
xchg
cmpsl
bound
and
push
push
add
popf
aad
test
out
lret
repz
stos
imul
movsb
clc
xor
in
and
dec
push
add
rcll
mov
loopne
sub
adc
aaa
sub
pop
scas
push
xor
mov
mov
xor
les
mov
inc
shrb
test
inc
push
mov
cmpsb
fwait
cmp
fwait
pusha
mov
mov
lock
xor
lahf
jge
and
jle
repz
daa
adc
jecxz
shlb
roll
into
push
in
cmpl
cmc
pop
fadds
outsl
push
cld
jnp
sbb
adc
dec
xor
lods
dec
jo
mov
jne
insl
xor
ficoms
adc
fwait
jnp
aas
cmpl
push
rcll
mov
subb
mov
cmp
pop
jb
push
sub
push
push
or
xor
stc
mov
int3
out
push
mov
push
jnp
stc
call
cmp
adc
ljmp
cmp
int3
aaa
daa
fstpl
je
cld
pop
mov
and
mov
add
add
inc
xlat
mov
fucomi
inc
jp
adc
or
xchg
push
outsb
test
dec
mov
fxch
imul
loop
lret
stos
les
fsubrs
out
fimull
sbb
mov
lock
fnsave
es
mov
cmpl
and
pop
pusha
enter
int3
push
je
add
mov
aaa
cmp
lds
lahf
cli
movsb
sbb
inc
cmpl
es
sbb
cwtl
mov
negb
inc
mov
test
in
push
dec
dec
xor
test
mov
cmp
adc
rcll
dec
mov
sbb
xchg
fs
jp
mov
int
push
fcomp
lods
push
sbbl
jo
cmp
cmp
cmp
loop
dec
adc
inc
fs
sbbl
xor
jne
adc
leave
shrb
stos
pop
leave
push
or
inc
cs
dec
mov
sub
std
fildl
xchg
inc
xchg
bound
sub
adc
xchg
mov
repz
xor
adc
mov
fsub
and
sti
or
jnp
je
cmc
into
sub
push
mov
jle
xchg
jmp
xlat
dec
or
jge
cltd
dec
lret
xchg
push
shl
sbb
dec
mov
xor
divb
sub
add
pushf
fisubs
sub
lahf
mov
add
add
mov
scas
xor
dec
ret
imul
mov
std
push
mov
push
dec
lahf
ss
lcall
movsb
sbb
and
pushf
or
sub
aam
int3
mov
not
notb
fdivrl
cmp
xchg
sub
jge
movsl
lahf
xchg
mov
mov
cwtl
rolb
sti
stos
xchg
mov
sub
out
mov
push
xor
cwtl
push
fadds
in
xchg
jp
repz
inc
enter
push
jge
cmp
repz
cmpsb
xor
mov
pop
sub
jmp
lock
push
cld
sbb
pop
leave
cwtl
lcall
mov
int
les
addr16
or
mov
in
xchg
shll
mov
inc
jb
xchg
int3
popf
sub
mov
lea
dec
xchg
jnp
cmpsl
sub
lea
pop
push
jge
mov
cmpsb
mov
and
mov
mov
fsubr
xor
mov
aad
and
jge
aas
cmpsl
cmp
es
test
mov
inc
lahf
add
push
cli
jae
push
gs
xchg
cmp
cmp
mov
or
lods
loope
insl
repnz
inc
push
mov
aam
or
pop
enter
cmp
inc
and
inc
fxch
xchg
add
inc
inc
popa
inc
psadbw
ja
loop
out
rcr
sbb
inc
jbe
mov
fsubrl
dec
inc
or
inc
mov
subb
xchg
arpl
cmpb
mov
movsl
dec
sbb
sub
fcomps
loope
add
aam
inc
adc
movl
jne
xor
orb
fdivrl
int3
push
jae
mov
sbb
mov
sbb
outsb
imul
enter
xor
jecxz
out
idivb
fistpll
push
mov
jo
pop
inc
add
xor
cmp
sahf
and
mov
mov
or
push
mov
or
sub
add
leave
dec
push
clc
xor
arpl
test
fcomip
and
push
push
jo
add
hlt
add
adc
cmp
fmul
vpmulhuw
mov
mov
jbe
inc
js
movsb
or
pop
nop
jo
sub
add
mov
inc
inc
xor
mov
inc
jbe
add
imul
cmp
mov
js
lods
stc
push
add
jl
sbb
and
fistpl
stc
push
push
pop
or
xor
xchg
mov
adc
sub
and
movsl
mov
xchg
push
sbb
fs
fcoml
dec
sbb
repnz
xor
aam
mov
push
mov
adc
push
sub
jb
pop
cmp
mov
out
add
das
std
rclb
sub
mov
aas
cmp
stos
dec
fidivrs
fcomp
bound
arpl
iret
xor
cli
in
sbb
and
ficoml
into
into
shll
mov
scas
test
inc
addr16
ret
or
pop
loop
in
inc
scas
mov
pop
add
and
out
or
cwtl
test
ret
mov
xchg
imul
cwtl
f2xm1
or
add
push
adc
xchg
push
mov
mov
xchg
mov
and
dec
fsub
sub
xor
xchg
sbb
dec
cmp
jmp
dec
out
bnd
not
dec
leave
in
cmpsl
jns
pop
cmp
in
adc
jno
xchg
push
xchg
sub
sti
fstpt
sti
push
xchg
and
jge
ret
sbb
aaa
daa
ret
fisttpll
adc
push
push
xchg
icebp
mov
pop
fsubrs
outsb
mov
and
movlps
jp
sbb
or
inc
fwait
es
cmp
mov
sbb
xchg
orb
scas
shlb
add
out
stc
mov
jae
aad
repnz
lods
xchg
mov
sbb
pop
repnz
xchg
cmp
fnstsw
jecxz
data16
xor
push
pop
push
sti
lret
in
pop
lcall
cmp
movsl
mov
inc
or
out
bound
inc
xchg
xor
sub
int
jae
xor
clc
sbb
cmp
mov
jne
xchg
sbb
test
in
sub
jecxz
and
pop
fcmovu
push
aad
out
inc
repz
and
xor
lock
in
call
or
jae
mov
xor
add
mov
fstl
rcll
lret
adc
popa
sbb
add
addb
jge
shrl
pop
ret
pop
pushf
jg,pt
inc
xchg
jno
push
daa
jg
sub
aam
adc
push
cwtl
insl
dec
sub
sub
lods
jl,pt
nop
imul
aaa
addr16
lret
cmp
xchg
mov
insl
sbb
lods
js
dec
cli
pop
ret
inc
or
adc
and
sbbl
and
sbb
insb
jmp
jae
lock
adc
into
mov
movsl
sub
pop
pop
push
jle
ja
fwait
aam
mov
cmp
xor
pusha
inc
stos
xor
call
mov
mov
jns
jecxz
sbbb
mov
loope
lods
aam
fisttpl
cmp
daa
lret
pusha
sahf
clc
xchg
outsl
stos
push
idivl
jecxz
add
jl
stc
js
das
xchg
imul
cld
adc
fstpl
daa
bound
cmc
sbb
out
mov
stos
out
mov
fs
adc
push
dec
sub
arpl
loope
jle
lea
shll
loop
ja
mov
and
push
pop
jle
cmp
js
jecxz
lds
xlat
rclb
jg
and
outsl
adc
push
leave
iret
pop
mov
xor
into
fcompl
pop
xchg
imul
mov
or
dec
fldz
and
stos
fistpl
xor
adc
push
cld
call
inc
stos
mov
sub
mov
hlt
aaa
imul
mov
test
scas
sbb
arpl
mov
mov
out
outsl
add
push
and
insl
loop
hlt
xor
aam
pop
mov
imul
loope
lods
push
mov
das
jg
dec
mov
test
jnp
cltd
stos
jecxz
out
js
cmpsl
mov
popf
addb
jne
notl
push
out
ds
mov
mov
out
es
out
jb
sub
out
ret
mov
and
xor
ss
sbb
adc
out
cmp
cmp
sbb
push
push
mov
out
sbb
jmp
pop
ret
mov
push
pop
addr16
adc
dec
cli
out
sub
push
les
clc
inc
mov
push
test
cmp
pop
sbb
dec
inc
out
aad
mov
xor
out
dec
aad
cs
push
movsb
les
sbb
pop
loope
sti
xchg
inc
push
jp
dec
fs
xchg
push
lea
in
sub
add
hlt
scas
in
and
fwait
xchg
mov
bound
and
mov
jmp
sbb
mov
jnp
in
pop
xchg
int3
mov
call
inc
int
lret
in
jecxz
adcb
loop
dec
sub
lea
rcll
xchg
xor
orb
mov
push
out
je
push
xor
daa
push
mov
add
test
cmp
xchg
lods
cmpsb
mov
hlt
shll
fs
test
pusha
sti
setle
nop
mov
inc
mov
into
out
lret
loop
incl
outsl
dec
sbb
jg
rol
or
sbb
loop
adc
xor
test
iret
xor
outsb
mov
or
into
aad
inc
lods
xchg
adc
dec
mov
and
repz
jb
or
mov
inc
imul
jl
aas
sahf
idivb
jle
and
jp
int3
push
out
cs
aaa
loope
push
xor
cmp
leave
addr16
mov
mov
ja
dec
mov
add
lods
cld
into
not
stos
sarl
scas
push
sbb
nop
push
mov
aam
in
mov
gs
adc
sub
idivb
sbb
stos
ss
sub
lahf
insl
mov
call
stos
xor
xchg
inc
mov
inc
push
iret
sahf
sub
pop
sub
repz
orb
ljmp
dec
outsb
test
fs
icebp
movb
jmp
lret
faddl
icebp
inc
lods
or
std
mov
test
ljmp
sbb
and
ljmp
arpl
jb
scas
push
jg
notb
pop
inc
cmc
inc
jl
add
or
cwtl
push
inc
add
out
jne
push
lahf
add
fisubrl
testb
ret
mov
mov
mov
lahf
scas
sbbb
out
leave
sub
mov
mov
std
pop
mov
or
outsb
mov
jae
sti
inc
pop
and
negb
cmpsl
pusha
orl
rol
add
mov
mov
movsl
leave
pop
add
push
xchg
arpl
push
xchg
aaa
rorb
in
or
cmp
iret
enter
lcall
push
inc
popa
jo
or
mov
sbb
aas
pop
fwait
pop
push
jecxz
mov
xchg
push
xor
test
test
sbb
pop
jb
jg
aad
lods
cmp
cs
enter
pop
pushf
pop
sbb
sub
push
xor
pop
pop
cmp
mov
movsl
lods
and
call
jo
jmp
lock
jbe
stc
cmp
pop
xchg
pop
cmp
pop
jno
push
push
push
insl
pop
adc
inc
push
das
inc
int
loopne
and
inc
faddl
shrb
cmpsl
in
pop
data16
and
mov
push
add
mov
les
mov
hlt
sub
test
pop
das
mov
out
xchg
push
adc
add
rcr
fstps
jmp
mov
jp
sub
stc
add
sbb
cli
mov
repnz
and
das
jl
inc
mov
adcb
jbe
mov
add
and
cmp
cmp
dec
mov
mov
cmpsl
add
lea
pop
jp
inc
aam
enter
rcrl
jb
mov
out
cmp
mov
jle
mov
cltd
sub
or
or
mov
push
lods
adc
je
aaa
dec
in
mov
sti
jmp
fldcw
adc
or
mov
fistpll
ss
les
pop
inc
gs
repz
ljmp
xorb
enter
rolb
push
xchg
xor
xor
iret
push
push
cmpsl
xor
les
popa
inc
pop
in
subl
fs
daa
je
mov
shrb
js
sub
jnp
dec
into
ss
xlat
push
flds
fdivl
les
cmp
mov
xor
sbb
push
les
sbb
dec
ja
call
or
dec
sbb
and
sar
lcall
jo
add
add
or
sahf
jmp
vxorps
mov
jl
insl
sub
or
jb
outsl
aam
lea
mov
xchg
mov
hlt
jns
pusha
int3
sbb
pop
enter
ret
inc
xor
push
scas
adc
cld
std
sub
lahf
add
shrb
xchg
ss
or
ljmp
inc
out
jl
jno
jle
mov
cwtl
pop
pushf
dec
push
mov
mov
mov
sub
pop
jae
or
dec
lahf
gs
cmpsl
ficompl
out
aad
add
dec
loopne
mov
js
push
xor
sbb
mov
lcall
loopne
je
mov
xor
stc
rorl
shlb
adc
push
decl
lods
pmullw
add
lods
add
xchg
rorl
xlat
dec
mov
idivb
pop
adc
rcrl
xchg
inc
xor
jnp
enter
test
sbbb
std
adc
mov
out
jae
lret
dec
lds
push
jo
add
push
xchg
ds
and
dec
lret
pop
aaa
mov
bound
xchg
add
mov
outsb
adc
push
jmp
movsb
xor
test
xor
add
pushf
sub
sbb
out
cltd
aaa
xchg
jl
inc
mov
pop
mov
xchg
jp
das
jns
add
dec
mov
sub
and
mov
cmp
xor
or
sbb
xorl
out
mov
out
mov
xchg
xor
into
and
insl
mov
pop
arpl
mov
push
scas
pop
adc
xchg
jmp
mov
xchg
jo
xor
xchg
dec
or
data16
sub
dec
push
add
mov
mov
xchg
inc
stc
sub
test
insl
mov
cmp
mov
add
ja
outsl
leave
out
cld
jmp
jecxz
fsubr
adc
sbb
out
jmp
or
call
xor
pop
fstps
dec
cmc
aaa
fcomi
in
add
out
mov
push
xchg
push
shlb
rorl
sbb
cs
pop
or
adc
shrb
pushf
or
and
sub
adc
or
outsl
push
add
push
mov
in
pusha
testl
mov
push
mov
cmp
shrb
mov
mov
push
imul
dec
in
test
lcall
pusha
cli
mov
xor
push
jo
cmp
mov
jbe
mov
icebp
bound
adc
fwait
inc
lahf
mov
mov
lahf
loope
enter
cmpsl
add
push
aam
js
imul
xor
xchg
inc
mov
push
inc
and
cltd
pop
fsubrp
cmp
dec
mov
xor
dec
dec
inc
push
shlb
mov
jge
in
and
subb
out
adc
adc
mov
xlat
sub
jns
adc
cmpsl
gs
push
mov
pushf
cmp
out
sti
xor
push
dec
xchg
xchg
pop
testl
and
or
sub
xchg
in
daa
mov
ja
pop
out
or
xor
mov
cmp
xor
testb
inc
adc
lret
stos
lods
daa
xchg
shll
pop
push
mov
push
stos
ret
xchg
and
lret
mov
mov
dec
lock
xor
cmpsb
clc
icebp
sahf
ret
pop
repnz
fldcw
ret
lret
daa
jb
pop
xchg
jno,pn
sub
hlt
mov
pop
dec
aaa
lahf
mov
hlt
sbb
fst
jno
int3
inc
push
and
cltd
js
mov
test
das
jne
mov
xchg
ja
cmpsl
mov
mov
push
in
sbb
mov
cmp
mov
mov
dec
and
clc
shlb
adc
repnz
mov
sub
jp
push
popa
pop
add
xchg
xchg
test
mov
idiv
outsb
pop
subb
cmp
sub
mov
pmuludq
xlat
cmp
test
adc
cmp
and
jmp
xorb
je
clc
sarl
adc
sbb
jne
int3
lds
shrl
sub
out
subl
inc
std
add
jae
aad
dec
popa
fdivrs
das
pop
dec
inc
adc
lods
xor
lods
jns
xlat
pop
adc
mov
sbbb
sub
insb
aam
js
pop
sbb
pop
pop
out
lea
add
out
cmp
dec
out
and
stc
pop
scas
test
dec
in
call
movsl
cwtl
and
mov
jae
adc
scas
xchg
outsl
push
scas
cmpsl
repz
in
sbb
push
xor
shl
mov
addb
inc
fisttps
sub
div
jns
inc
sahf
imul
push
cmpsb
daa
into
stc
imul
xlat
and
repz
mov
out
mov
cmp
int3
dec
lcall
loopne
sti
ds
add
mov
lds
mov
or
out
popf
das
xor
sub
ret
push
cmp
test
xor
mov
dec
jl
gs
mov
fistpll
outsb
mov
bound
cmp
lret
gs
repnz
jb
stos
and
mov
sub
pop
mov
mov
jmp
sti
mov
sub
jecxz
ja
cmp
and
call
xlat
sub
adc
flds
das
call
lret
lahf
mov
push
mov
ds
inc
add
pop
pop
leave
das
jp
mov
pop
add
ja
add
dec
outsl
icebp
mov
cmp
xchg
or
mov
inc
sbb
jmp
je
add
cld
loopne
sahf
stos
ja
cwtl
jge
mov
mov
mov
add
add
add
insb
mov
mov
roll
clc
pop
faddp
adc
inc
push
les
addr16
test
jmp
xchg
lahf
lcall
push
xchg
daa
mov
mov
ret
xchg
hlt
ret
stos
jg
xlat
leave
and
adc
jp
push
and
mov
inc
imul
xlat
cwtl
es
rol
cmp
and
adc
dec
ret
aaa
popf
mov
leave
rcl
test
hlt
push
movsl
jecxz
jl
ficomps
inc
sbb
mov
xor
fisttps
es
jbe
xor
lods
sub
adc
jb
cmp
sbb
sbb
mov
std
hlt
mov
nop
mov
pop
ret
dec
mov
mov
or
and
jbe
and
pop
xor
cmp
aas
out
push
hlt
push
lods
push
in
mov
test
xchg
lods
sbb
cmpsl
xchg
test
inc
popf
data16
jg,pt
adc
dec
mov
push
push
and
xor
xchg
xchg
in
aaa
inc
jo
aad
push
inc
fdivrl
popa
jbe
sbb
jmp
mov
add
inc
or
lock
xchg
sub
pop
out
pop
imul
pusha
jp
adc
cwtl
shrl
fucom
jne
pop
inc
into
push
aam
add
mov
mov
adc
push
addl
gs
xlat
pop
pop
adc
push
push
inc
stc
aad
fisubrs
cwtl
adc
inc
xorl
sti
pop
sub
outsl
ljmp
cmp
mov
ret
orb
and
shrl
jg
push
pop
inc
add
test
adc
imul
and
shlb
iret
mov
push
xor
pop
dec
xlat
inc
xor
nop
cwtl
pop
or
xchg
fisubl
pop
imul
mov
ret
mov
dec
inc
test
rorb
mov
and
or
mov
mov
js
negl
adc
mov
cwtl
pop
test
pop
inc
in
je
fidivrl
mov
imul
mov
xchg
fistps
adcl
imul
xor
test
or
cmp
or
orb
push
pusha
jmp
cli
iret
js
mov
xor
clc
adc
bound
or
xchg
adc
mov
mov
inc
and
outsl
pop
cmp
push
inc
pop
push
sbb
cld
int3
cmp
lea
push
inc
mov
mov
jmp
pop
xchg
testl
fcmovnbe
pop
xor
push
and
and
sub
ss
in
jo
mov
pop
movsb
shlb
push
push
mov
mov
jns
add
shl
mov
pop
xor
mov
xor
sub
mov
outsl
xchg
mov
and
clc
ret
cmp
repnz
vpunpcklqdq
gs
loope
sbb
out
pop
test
loopne
scas
popa
out
ret
mov
lar
cmp
cmc
mov
bound
sbb
jl
pop
daa
es
inc
mov
hlt
or
loope
dec
ret
sub
out
dec
sbb
xor
fidivrl
orb
mov
xor
jb
pop
add
out
pop
sbb
or
call
pushf
push
out
or
lods
mov
xchg
enter
push
dec
shrb
xchg
jns
lret
imul
cwtl
popa
xchg
sub
test
jne
inc
or
shrb
pop
mov
inc
mov
ljmp
mov
and
and
cmp
xor
xor
xlat
pusha
jecxz
fcomps
out
cltd
nop
fcoms
in
or
aad
mov
outsb
hlt
fldcw
adc
repnz
inc
inc
cmp
lods
test
push
jmp
xor
add
jmp
pop
sub
push
mov
scas
sub
in
xlat
in
cmc
pop
and
testl
or
ret
lahf
pop
push
cmpsl
cmp
add
xchg
mov
aam
mov
scas
cmp
push
mov
aad
in
adc
pop
clc
cltd
out
jns
push
sbb
test
sub
jle
shll
or
jl
sti
loope
pop
and
bound
xor
addb
add
push
push
xlat
fs
orb
mov
xchg
xchg
mov
cmp
pop
mov
sysret
mov
stos
loopne
and
push
cmp
fldt
jecxz
mov
mov
shlb
mov
nop
rcrl
popa
jnp
jo
push
xchg
cwtl
lahf
lods
cmp
mov
imul
mov
lahf
cs
push
sub
ljmp
push
aas
xchg
clc
repz
out
divb
shrl
push
mov
lods
mov
loop
fcomp
and
pop
pop
mov
in
rorb
repz
adc
jl
icebp
sub
es
sub
and
test
fisubs
mov
sub
in
xor
cmp
dec
dec
sbb
aam
jle
sbbl
mov
vcvttps2dq
mov
jp
out
xchg
inc
test
adc
outsl
pop
call
sub
pop
inc
lods
mov
lock
mov
addl
mov
dec
dec
ljmp
push
test
ja
pushf
std
rcr
repnz
scas
popf
pop
mov
adc
aam
pushf
dec
icebp
test
mov
mov
and
adc
mov
and
xchg
add
imul
out
scas
enter
shl
mov
pop
jecxz
dec
movb
fidivrs
sub
xchg
xor
and
push
call
popa
test
fiaddl
movsl
outsl
and
xor
mov
jl
add
js
sub
in
mov
andb
and
test
int3
test
inc
daa
and
roll
rol
jle
or
xchg
dec
xor
in
pop
inc
das
sub
mov
sub
fdivs
jns
ljmp
cs
and
sub
mov
repnz
loope
xchg
ljmp
pop
dec
jne
popf
fwait
push
ficompl
xchg
out
mov
sub
sub
xor
and
leave
stc
enter
xor
aaa
mov
sub
jg
pop
jg
aas
lahf
jp
rclb
ja
andb
xchg
mov
xchg
popa
divl
cmp
lahf
je
aad
mov
dec
push
or
ret
add
jb
test
test
loopne
lret
adc
sbb
addl
push
xorb
js
out
sbb
je
insb
mov
and
cmpsb
fisttpll
xchg
or
pop
std
scas
or
movsb
or
sarb
sub
outsl
test
mov
add
inc
dec
xor
sub
push
jb
cmpsb
je
mov
movsl
mov
sbb
mov
cmp
pop
adc
lret
lods
mov
pop
and
lahf
jl,pt
les
xlat
sahf
cltd
jl
add
andl
call
dec
push
push
andb
push
daa
cmp
adc
jge
adc
cmpsl
fsub
mov
mov
dec
inc
stc
jne
and
lahf
mov
cmpsb
mov
lods
push
fnstenv
dec
mov
sbb
fnstsw
in
lcall
rcrl
in
cmp
ret
pop
xor
insb
mov
adc
fwait
cwtl
jle
enter
stc
mov
sub
sub
pusha
and
repz
dec
mov
sbb
movsb
ficomps
push
testl
sbb
test
sub
sbbb
movsb
pop
jb
leave
jb
push
outsb
dec
scas
or
add
jne
inc
push
pusha
lea
jp
subl
mov
out
mov
call
mov
pop
cmpb
aaa
cmc
ds
mov
out
out
jle
and
inc
xchg
push
push
sub
push
aaa
call
pop
ret
mov
add
fsubs
ror
push
add
leave
sarb
lods
sti
pop
in
sahf
imul
pop
lea
dec
aam
mov
and
fdivrs
jnp
fistpl
loope
and
fwait
xchg
testb
adc
loop
inc
jae
roll
jl
push
negb
jo
mov
lcall
leave
dec
adc
pop
adc
fwait
jbe
ret
fwait
pop
mov
cmp
sub
cmc
add
xchg
pop
gs
inc
jp
fidivrs
shl
cs
cmc
cltd
stos
push
repz
ljmp
cmp
cld
daa
popf
adc
push
xchg
fisubl
sub
daa
adc
fmul
mov
xor
fisubl
sbb
and
push
outsl
mov
movb
pop
scas
pop
ds
cltd
jmp
nop
scas
aam
push
pop
and
sbb
jp
or
mov
lods
mov
xor
movsb
stos
and
pop
fs
xchg
fidivl
mov
out
rorl
xor
mov
pop
xbegin
adc
popa
in
call
jbe
cmpb
imul
push
pop
push
sbb
lret
arpl
outsb
bound
mov
jns
cmpl
call
sub
rcll
scas
pusha
jg
dec
push
jo
lods
cld
aas
xor
and
dec
pop
cltd
movsl
mov
and
inc
xchg
sub
mov
shlb
mov
pop
test
sahf
loope
ror
xor
inc
jno
cmp
fwait
cmp
in
loope
cmp
push
movsl
or
pop
xorb
fdivr
or
mov
xor
cs
sbb
sub
sub
mov
wrmsr
push
pop
mov
imul
mov
push
mov
or
and
lret
adc
fcoml
das
push
mov
inc
in
mov
sub
out
pop
mov
mov
sub
inc
xchg
push
imul
dec
pop
pop
xchg
sbbl
pop
xor
out
jno
mov
fiadds
out
icebp
iret
inc
cltd
jne
iret
mov
jge
jmp
jb
in
das
dec
pop
mov
lods
ja
mov
inc
pusha
add
and
cmpsb
call
ja
out
xor
and
dec
xchg
cmc
pop
leave
out
das
xchg
out
mov
test
or
jo
dec
data16
jg
leave
fmull
mov
mov
inc
sbb
mov
push
movsb
adc
enter
pushf
push
pop
leave
jmp
mov
fcompl
ja
jo
push
xchg
jns
inc
das
mov
stos
lcall
and
les
xor
call
xor
lea
test
inc
pmaxsw
outsl
mov
addr16
insl
cld
push
dec
sub
hlt
incl
cld
mov
insb
sbb
sahf
push
rcl
mov
pop
or
popf
dec
xlat
lret
sub
xor
in
or
andb
enter
jge
mov
loop
aas
inc
lods
imul
rcrb
scas
inc
sbb
cmp
iret
adc
dec
aad
mov
lock
hlt
and
insl
dec
cltd
pushf
lret
fdivrl
test
mov
mov
cltd
adc
je
ss
mov
das
fistl
inc
mov
rcrl
notb
aam
push
xlat
mov
into
xchg
add
jle
jg
xor
mov
loop
mov
pop
dec
mov
push
add
aad
and
pushf
ss
insl
cmp
adc
pop
sub
js
das
mov
sub
ja
sub
lods
and
jmp
neg
pop
ret
clc
repnz
jecxz
pop
jge
pop
test
mov
ret
jp
int
mov
inc
sub
mov
dec
sbb
ljmp
dec
dec
inc
shr
popf
nop
adc
jecxz
cmpsl
popf
psrlw
sbb
hlt
dec
lods
sub
pop
mov
and
mov
cltd
jno
shl
sub
dec
movsb
int
fcoml
in
das
push
sub
mov
xchg
jae
dec
pop
or
ret
insb
rclb
lock
lret
imul
push
jg
lret
enter
mov
fldcw
btr
lods
je
dec
pop
pmuludq
push
rolb
adc
mov
insl
lea
test
cmc
scas
mov
dec
ds
fldlg2
cmpsl
pop
fdivl
pop
mov
nop
xchg
sub
mov
rep
insl
cwtl
lcall
pop
out
adc
sbb
out
and
mov
aaa
ret
sbb
mov
and
mov
imull
in
and
sbb
and
inc
dec
fisttpl
pop
pop
outsb
inc
cmp
imul
leave
jb
adc
push
jecxz
dec
sahf
jge
pop
mov
inc
sbb
inc
enter
dec
mov
testb
sbb
fcmovne
hlt
xchg
mov
rorb
xor
popa
insb
xor
cmp
or
adc
arpl
dec
pop
nop
mov
jg
lods
jmp
or
js
add
jne
icebp
lret
ret
dec
xchg
dec
out
xchg
mov
loop
add
js
cmp
mov
inc
notl
loop
xchg
cmp
shl
fstpl
mov
ds
adc
inc
xchg
adc
adc
ljmp
xchg
mov
hlt
mov
aaa
stc
movsl
aam
jmp
stos
pop
lret
mov
add
xchg
cmpsb
and
or
sub
add
mov
or
xchg
ret
mov
mov
in
rcrl
or
xor
sbb
pop
fcmovu
lret
sti
mov
stos
int
mov
in
mov
jbe
fistps
lret
inc
add
xor
jmp
pop
insl
jbe
ret
sbb
jne
push
lret
push
daa
jne
lahf
test
jo
xor
jno
mov
mov
pop
mov
lds
mov
add
push
fwait
mov
push
call
repz
pop
jo
daa
xchg
movsl
xor
and
xchg
sbbl
adc
add
sbb
fwait
clc
imul
mov
add
push
mov
test
cmp
cmpsb
test
popf
and
sub
pop
int3
fcmove
adc
aaa
sbb
xchg
pop
daa
cld
jmp
imul
jecxz
add
mov
add
jmp
sbb
push
push
pop
out
ljmp
sub
movsl
loopne
cmp
inc
mov
jge
mov
mov
je
arpl
mov
popw
aaa
orb
pop
xlat
xchg
adc
fidivrl
and
sub
pop
mov
sub
enter
stos
fcomip
scas
setge
push
add
push
insl
jnp
jnp
cmp
push
loopne
ret
sbb
pop
xchg
dec
xor
into
push
sbb
das
sub
and
shlb
test
dec
out
sub
mov
notb
sub
ret
pusha
jmp
in
sub
data16
adc
push
adc
xorl
inc
addr16
push
stc
popf
mov
pop
into
push
aas
jo
dec
mov
shr
add
cmp
adc
pop
or
pop
inc
ficoms
xor
add
mov
xor
ret
sub
or
mov
cwtl
ror
les
enter
gs
out
jge,pn
push
test
in
clc
dec
pop
ds
sarl
pop
jmp
xor
in
fs
fstl
and
ljmp
sub
push
push
jnp
sbb
scas
in
fs
daa
jg
xchg
dec
push
pop
and
or
shll
pop
jb
cwtl
jecxz
pop
inc
sbb
xchg
sbb
lret
mov
fistps
cmp
arpl
das
or
pusha
fistpll
int
adc
jmp
lods
inc
addr16
push
add
pop
fsubl
or
fstpt
mov
sbb
scas
testb
hlt
adc
cmpsl
xor
xchg
mov
out
cmp
mov
test
mov
or
add
faddl
sub
testl
stos
rcll
dec
repz
mov
cmpsl
sti
movl
sbb
sub
pop
dec
repnz
loop
pop
int
push
or
icebp
cwtl
js
xchg
mov
test
out
movsb
gs
aad
jle
sbb
rclb
lea
cli
shlb
jl
xlat
ljmp
loop
imul
and
in
aaa
pop
pop
dec
jge
test
xor
sbbl
inc
adc
jmp
outsl
mov
outsb
int3
jb
mov
push
lds
ret
add
mov
and
subb
dec
pop
mov
lods
imul
jnp,pn
or
cmp
in
cmp
popa
inc
adc
mov
loopne
dec
rclb
inc
aam
ret
or
test
cmp
test
outsl
sbb
cwtl
push
pop
sub
sub
xrelease
pop
inc
sbb
or
lcall
outsl
mov
cmc
js
fcmovbe
sbb
mov
popa
mov
rolb
mov
or
sbb
mov
dec
mov
or
push
jl
jo
rolb
out
insl
lods
in
outsl
mov
cmp
xor
mov
aad
cmp
aaa
xorb
xor
cs
xchg
push
js
fwait
enter
jo
jb
adc
or
int3
cmp
les
jmp
adc
int3
mov
ret
aas
int3
iret
and
sti
push
lods
mov
dec
into
insl
inc
in
dec
aam
insl
daa
lcall
pop
sarb
movsl
rclb
iret
dec
movsl
xor
adc
ds
popa
add
cld
add
mov
nopl
sbb
xchg
pop
mov
mov
pop
inc
inc
pop
aad
les
xchg
dec
mov
xorb
pop
lock
push
dec
cmp
dec
dec
mov
inc
mov
mov
dec
cmpsb
jnp
mov
mov
adc
insb
bound
cltd
cmp
out
mov
or
std
mov
rcll
mov
int3
cld
pop
icebp
xor
lea
test
dec
cwtl
out
mulb
in
mov
xchg
push
int3
shl
gs
in
adc
cltd
xlat
or
sub
insl
add
repnz
divb
nop
mov
xchg
sub
das
push
or
lahf
lods
or
or
mov
daa
lods
dec
pop
test
lds
mov
out
mov
addr16
dec
mov
pop
pop
dec
pop
fwait
pushf
aam
push
xchg
xchg
xor
mov
lret
cmpsl
jp
sbb
jno
loop
pop
mov
mov
cwtl
jnp
xchg
push
mov
out
mov
mov
lcall
push
mov
cmpsb
adc
into
subb
insb
jnp
in
jae
mov
in
jmp
inc
fists
rcll
inc
sbb
add
pop
cmpsb
out
aam
addr16
lcall
subl
mov
fdivrs
stos
cmpsl
fimuls
jo
movups
lcall
xorb
outsb
mov
loopne
jnp
aad
cmpsl
add
cltd
mov
movsl
test
xchg
push
int3
cmp
inc
cltd
fucom
ja
cmp
lock
pop
sbb
ficoml
cmp
ffreep
dec
mov
jmp
std
lds
mov
jbe
cli
xchg
adc
int3
adc
and
fstp
imul
shlb
rcrb
cmc
inc
jo
inc
cmp
pop
mov
cmp
mov
mov
call
push
insl
mov
popf
push
sub
cmpsl
dec
sbb
hlt
inc
iret
xchg
jo
mov
sbb
test
call
ret
imul
pop
mov
pop
scas
add
push
xor
rcl
push
mov
movsb
mov
and
orb
subb
or
or
movsb
lahf
mov
sub
cmp
aaa
mov
fsubr
add
cs
loope
cmp
icebp
sbb
testl
gs
xchg
cmc
inc
ljmp
and
jmp
sub
je
push
pop
sarl
shl
jo
js
jl
xchg
and
fidivl
jo
out
cmp
xchg
push
iret
sysenter
lds
andl
add
adc
jb
orb
mov
mov
or
or
nop
repnz
mov
adc
insl
sbb
mov
mov
dec
mov
dec
cli
sbb
mov
cmp
push
mov
loope
pop
lret
outsb
jmp
dec
add
jle
mov
ret
mov
pop
nop
lock
sahf
nop
fistpll
jae
lcall
inc
arpl
xor
stc
cld
out
adc
mov
decl
and
push
pop
imul
and
leave
ror
xchg
js
in
sbb
outsl
push
inc
xchg
mov
lea
lds
cmp
mov
mov
popl
scas
out
push
mov
and
sbb
mov
push
adc
das
cmpl
pop
cwtl
frstpm(287
bound
xor
or
mov
aad
cmp
sahf
xor
sub
push
adc
mov
inc
adc
enter
lret
pop
in
xchg
cmc
adc
add
mov
mov
iret
aas
push
clc
subl
xchg
insl
fnstenv
jecxz
ja
hlt
inc
dec
mov
test
mov
xor
repnz
dec
xchg
dec
adc
xchg
xlat
xor
iret
aam
test
das
movsb
orl
or
jnp
pop
int
jmp
push
jecxz
cmp
cmp
push
lods
popf
xor
cli
sub
inc
lods
xor
out
mov
lods
pop
lods
xlat
and
into
jbe
sbb
mov
sar
cs
push
out
dec
xchg
push
testl
js
or
daa
mov
dec
inc
dec
cmpsb
jb
jbe
or
imul
pushf
sbb
fwait
nop
push
leave
scas
xor
mov
cmp
std
push
js
arpl
test
push
or
cld
fcmovnbe
push
inc
orb
xchg
sub
stos
add
imul
ljmp
mov
out
andb
pushf
gs
cmp
push
mov
mov
or
mov
gs
popa
xor
add
and
dec
stos
adc
add
push
in
xor
xorl
xor
xchg
jo
xchg
mov
mov
call
or
sbb
fnsave
cmp
in
adc
sarb
sti
adc
jbe
int
or
gs
ja
aad
fcmovnb
push
mov
xchg
and
xchg
and
and
popf
sarl
dec
mov
or
and
adc
ret
mov
adc
cltd
pop
js
testl
xor
sub
subl
cltd
xor
sub
pop
inc
nop
std
enter
mov
test
enter
cmp
aam
out
cmpsl
cld
dec
mov
cmp
inc
mov
sbb
in
mov
fs
mov
ja
lea
fyl2x
lcall
imul
in
mov
adc
add
push
enter
mov
stos
icebp
cltd
aam
push
fisttpl
xor
ljmp
push
jp
adc
mov
jge
scas
push
add
and
push
inc
and
jmp
mov
cmpb
mov
test
mov
sbb
movsl
jne
repnz
daa
jbe
pop
sub
adc
insl
addl
adc
ljmp
cmp
jb
jl
cmp
mov
int3
loope
int3
cltd
in
inc
inc
jp
mov
mov
jbe
js
cs
test
ret
pop
xlat
sub
inc
and
sti
aam
push
icebp
stos
pushl
sub
sbb
mov
je
iret
jge
daa
lahf
ds
jge
scas
repnz
and
stos
add
xchg
xchg
mov
and
mov
lahf
data16
leave
or
inc
push
mov
and
mov
imul
jae
fs
xchg
fsubs
mov
into
mov
out
jmp
imul
adc
adc
xchg
sahf
xor
sbb
mov
and
push
sbb
and
adc
aaa
dec
in
mov
pop
fwait
jge
and
mov
sub
jo
jge
je
sahf
loope
mov
das
push
fistl
movl
sbb
mov
jge
shrb
sub
stc
enter
add
dec
cli
adc
and
roll
leave
push
sbb
popf
test
fldl
sbb
ss
and
xor
out
sub
rol
xor
push
mov
mov
dec
mov
rorb
jo
push
imul
cmp
or
cwtl
cs
cmpl
pop
push
cs
inc
xbegin
fcompl
in
test
int3
cmp
lds
and
push
ds
xchg
jl
test
rolb
xchg
mov
fnstcw
inc
shl
mov
rolb
cmp
std
fistpll
jecxz
push
pop
mov
xchg
lea
or
lock
pop
and
fistps
adc
in
or
mov
xor
in
xor
rcrb
ret
cmp
jb
dec
fldenv
xchg
in
out
mov
imul
test
sahf
push
stos
dec
cwtl
shlb
mov
inc
movsb
adc
aad
mov
pop
jge
sub
sbb
sub
mov
push
pop
sbb
icebp
into
cmc
dec
je
in
lcall
lock
arpl
or
xchg
mov
aad
inc
inc
das
cwtl
dec
cmp
sarb
xchg
push
enter
lcall
xor
hlt
xor
dec
and
loope
mov
adc
gs
aam
sbb
pop
and
pop
or
mov
pop
shl
cmpsl
pop
xor
mov
push
pop
adc
test
jle
add
in
mov
push
pop
lahf
xlat
mov
or
popf
aad
add
in
pop
fs
fimull
pushf
cmp
fnstcw
daa
imul
int3
mov
les
jp
adc
inc
xor
dec
insb
aam
or
dec
xlat
imul
test
bound
dec
jg
loopne
scas
and
inc
in
inc
inc
mov
mov
push
lods
jo
in
in
jb
sti
push
push
cli
aad
or
out
lret
sbb
mov
pop
loop
fnstcw
pop
les
mov
xor
popf
pop
hlt
aas
mov
mov
mov
popa
sti
js
xchg
pop
cli
sub
inc
mov
pop
mov
ljmp
cmp
imul
xor
push
repnz
push
vpmacssdd
cmpsl
ja
add
loopne
addb
add
enter
cmpl
lret
sub
sbb
push
sub
lret
jne
xchg
rcll
add
pop
xchg
out
adc
inc
loop
xchg
call
mov
out
mov
sbb
mov
cmp
dec
push
clc
sbb
inc
dec
sarb
inc
mov
shlb
mov
repnz
std
adc
xchg
test
or
cs
mov
lods
out
jb
es
test
daa
jae
arpl
out
sbb
rorl
xchg
push
and
and
pop
rolb
mov
inc
push
aam
dec
xor
sarb
push
js
mov
cltd
aad
inc
xor
mov
bnd
lret
xor
xchg
inc
fdivrs
jg
pop
sub
and
jl
je
sarl
jl
shl
testl
addr16
in
dec
shrb
xchg
adc
xor
lds
out
sbb
jge
mov
add
jns
jecxz
push
mov
test
clc
jmp
push
enter
mov
pop
push
jbe
inc
nop
inc
roll
push
inc
xor
push
je
inc
and
add
das
gs
xor
inc
add
cmpsl
int
out
lds
hlt
lret
jecxz
and
push
push
cld
and
imul
push
lds
sahf
test
inc
pushf
inc
mov
mov
mov
adc
sbb
mov
ret
dec
daa
mov
mov
push
popa
inc
aaa
pop
adc
shll
jmp
push
xor
xchg
push
xorl
popa
adc
fidivs
movsb
xor
imul
cwtl
sub
jne
mov
inc
mov
lret
mov
sbb
push
mov
mov
shr
jo
fisubs
or
aas
cmpb
mov
add
lds
pop
nop
mov
push
lods
shll
jb
lcall
cmp
dec
jno
popf
adc
add
cmp
fstpt
fdivl
gs
xchg
pop
mov
jle
adc
add
rorl
inc
mov
aas
mov
enter
sub
fisubrs
test
pop
jle
xchg
pop
mov
dec
push
add
sahf
xor
sub
lds
rcl
jbe
mov
sbb
push
dec
leave
mov
mov
jle
pop
stos
add
das
jno
cmp
test
push
and
jge
jmp
xacquire
xor
or
hlt
cld
or
lds
test
cltd
xchg
pop
popa
clc
pop
outsl
sbb
inc
mov
sti
jmp
mov
dec
lock
jg
scas
test
lahf
pop
push
push
pop
mov
push
jae
sub
fwait
cmp
jnp
inc
and
jmp
dec
fnsave
sbb
test
in
mov
xchg
add
pushf
loope
lret
pop
adc
dec
adc
xor
pushf
xor
mov
lods
lret
push
test
pop
out
mov
aas
sub
cmc
jmp
push
push
insl
out
into
push
es
mov
repnz
cmp
sub
cwtl
cmp
pop
loop
daa
xchg
sbb
pop
pop
sbb
je
cmc
adc
sbb
jb
mov
push
and
cmp
xchg
push
push
scas
add
iret
repnz
and
outsl
lret
cmpsl
cmp
pop
fwait
jne
pop
ja
int3
push
ficoml
mov
ss
dec
lret
leave
clc
adc
lret
push
add
outsb
mov
cs
sbb
xchg
mov
mov
stc
mov
mov
pop
cmpl
sub
stc
xchg
sbb
jecxz
add
test
popf
mov
cltd
movsl
int3
movsl
sti
fs
add
push
push
cmc
loopne
or
xlat
dec
push
enter
mov
cld
bound
dec
push
or
enter
lahf
add
cs
sbb
jmp
jmp
bound
dec
out
aas
rclb
shrl
fwait
idiv
insl
push
fwait
jl
scas
aaa
icebp
jp
popa
adc
or
adc
fsub
sbb
and
push
sbb
mov
mov
mov
hlt
rcrl
mov
mov
aaa
jbe
cmp
sahf
jns
cmc
pop
xacquire
ss
or
mov
lock
pop
mov
sahf
push
inc
or
hlt
int
pop
mov
ja
mov
inc
lock
pop
push
sub
test
fdiv
out
add
push
sti
mov
xchg
ret
jecxz
je
andb
fwait
and
sbb
scas
mov
dec
mov
std
arpl
lock
stc
inc
add
clc
fbld
inc
dec
lock
sbb
iret
jp
pop
loopne
adc
jg
or
in
orl
pop
cmp
std
popa
jl
xchg
lods
add
pop
xchg
or
adc
pop
mov
lret
adc
repz
push
dec
jmp
lods
mov
xlat
sub
popl
bound
xchg
fsubs
jb
sub
push
add
in
and
nop
push
dec
cmp
mov
das
std
pushf
insl
bound
mov
fisttpll
jne
mov
dec
xorl
pop
mov
jns
mov
mov
jne
or
xor
mov
mov
cltd
or
xchg
jbe
in
cmp
scas
xchg
inc
jno
cli
and
cmpsb
rcl
add
mov
icebp
sbb
adc
stc
ret
xchg
ljmp
pop
push
sahf
add
pushf
adc
adc
loope
sub
lods
xor
cmc
divb
enter
inc
push
mov
xor
xor
mov
daa
rolb
pop
out
mov
xor
fildl
out
ret
std
fwait
pop
repnz
mov
jmp
pusha
jmp
jl
pop
jae
les
jl
or
jmp
cld
mov
adcl
adc
mov
shrb
push
and
lcall
inc
mov
ljmp
call
or
ret
cmp
cmp
lock
xchg
daa
outsl
sbb
flds
inc
lahf
cmp
fsts
fistpl
add
outsl
mov
adc
loope
push
scas
mov
repz
or
cmpsl
les
lret
fwait
out
mov
fisttpl
int3
test
sahf
push
fidivl
add
mov
mov
movsl
out
add
cmp
push
mov
jmp
cwtl
jns
mov
push
lods
aaa
and
mov
test
add
mov
mov
popa
or
mov
cwtl
pop
enter
jp
jbe
cltd
pop
or
push
mov
sti
lret
push
out
inc
mov
scas
imul
fld
in
or
aam
mov
mov
out
mov
push
xor
jae
movsl
fs
push
aad
ror
lcall
dec
fnstenv
adc
add
sub
int
pop
and
jp
xor
faddl
test
andb
xchg
enter
dec
lds
in
outsl
xor
inc
in
push
cli
jg,pt
pop
adc
lcall
rcll
orl
adc
cs
out
pop
inc
mov
adc
cld
jno
iret
sbb
stos
incb
and
mov
sbb
jg
push
icebp
movb
add
add
push
lret
and
out
fistps
cli
stc
jo
jae
cmp
mov
xor
xchg
imul
incl
mov
xchg
in
push
add
in
in
xor
mov
xor
add
cmp
xor
cmp
dec
cld
stos
adc
xor
jo
adc
int
push
es
nop
mov
cmp
fidivrl
jae
std
jnp
and
adc
lret
cwtl
cmovs
push
mov
xor
jp
and
inc
push
jge
insl
adc
dec
pusha
lea
insb
pop
push
bound
pusha
mov
mov
fimuls
ds
cli
jns
sahf
inc
into
cmpsb
rcr
in
insb
cs
mov
xchg
mov
xor
int3
in
mov
xchg
iret
iret
jp
push
jno
ds
jecxz
out
shll
enter
mov
add
inc
shrb
pushf
out
sbb
scas
or
sti
aas
es
or
mov
addr16
cld
pop
jb
and
lods
mov
leave
test
mov
add
sbb
das
add
fnstenv
push
je
scas
jo
loop
inc
movsl
xor
pop
fidivs
int
mov
jbe
clc
xchg
mov
incl
and
in
jmp
mov
mov
xchg
push
sbb
popa
mov
add
inc
sub
and
aas
dec
xor
mov
sbbb
arpl
and
andl
cli
push
pop
lret
cmpsb
cwtl
jnp
in
shlb
fcmovbe
js
movsb
roll
push
aas
jp
add
and
pop
or
ret
bound
loop
jo
mov
jbe
popa
shll
call
jl
sub
ret
or
push
ret
xchg
out
mov
or
test
xchg
adc
je
unpckhps
shlb
mov
mov
sub
pop
rcr
push
iret
jecxz
addr16
ljmp
lds
sub
sbb
mov
outsb
ljmp
ret
dec
and
jo
push
xchg
ficomps
cmpsl
inc
dec
push
add
add
mov
cs
lcall
insl
mov
test
pop
jle
mov
jb
xor
xchg
jmp
jg
scas
stos
mov
mov
jmp
gs
sub
ret
jns
int
or
mov
xchg
pop
out
mov
inc
fldenv
int
cltd
mov
pop
jae
cmp
pushf
in
fcmovnbe
movsb
pop
cmp
jg
rcr
cld
add
pop
ljmp
jge
imul
mov
ret
or
jbe
xor
push
js
or
jb
sbbb
mov
jbe
sub
orb
ljmp
test
iret
dec
push
lret
cmc
pop
mov
inc
pop
mov
jp
jne
mov
add
clc
ss
stc
push
repnz
mov
push
ja
lock
les
pusha
in
test
jl
scas
sub
xchg
lret
shrl
xor
lret
pop
call
test
imul
jne
stos
popf
xchg
sub
mov
scas
sub
sub
scas
jne
push
outsl
fidivrl
push
xor
cmpsl
xchg
push
lods
int3
jmp
test
fdiv
movb
les
push
faddl
nop
jle
out
mov
mov
bound
dec
adc
xor
jno
repz
int
int
pop
arpl
add
push
xacquire
xchg
xor
movsl
cld
movsb
dec
cmp
mov
iret
add
call
xor
test
sbb
imul
xor
and
jns
dec
test
lods
lock
in
mov
test
rcll
add
xchg
mov
in
icebp
das
xlat
lock
imul
add
add
mov
xor
jb
or
push
or
jae
cmp
and
lea
std
bound
pop
aam
ss
sbb
loopne
outsb
xor
pusha
lods
test
pop
xchg
pop
cmp
insl
mov
int3
mov
jl
pusha
mov
mov
imul
fsubrl
addr16
xlat
es
fisttpl
mov
insl
arpl
sub
jg
test
loope
sahf
cwtl
jno
jns
inc
and
loope
xlat
mov
stc
inc
lret
roll
fidivs
sysenter
aad
cli
sahf
fwait
imul
loope
dec
lea
ss
adc
aad
inc
lods
or
icebp
imul
cmp
iret
xchg
and
rcrb
and
jo
out
cmpsb
fdivl
int
jb
popa
movsl
out
testb
adc
je
mov
and
aam
rclb
adc
adc
and
loop
jecxz
sub
mov
adc
push
xor
pop
clc
loopne
inc
leave
mov
out
insl
mov
mov
rorl
mov
and
into
xchg
cmp
es
ret
cmc
xchg
pop
fwait
enter
push
push
xor
add
mov
imulb
sub
sub
out
jg
pop
cwtl
std
pop
xchg
cmp
daa
sbb
cmp
jl
insb
mov
mov
jno
fisttps
fcomi
fstpt
out
inc
int3
push
mov
cmp
or
or
fdivrl
sbb
pusha
pop
add
fldt
loopne
xchg
call
in
add
movsb
push
add
jns
jg
ror
add
dec
sbb
sub
xor
push
mov
icebp
inc
les
out
shrl
imul
pop
hlt
lds
negb
incb
repz
push
insl
hlt
xchg
fs
cmpsb
imul
aam
mov
adc
xchg
fldcw
stos
cmp
jg
sub
out
jmp
test
hlt
and
dec
fdiv
int3
pop
shlb
mov
mov
jnp
aad
repz
push
or
jns
xchg
data16
add
add
loop
stos
cmp
cmpsl
xchg
pushf
jno
insb
cmp
mov
out
ds
mov
mov
jbe
sbb
push
adc
push
jp
pop
movsb
inc
add
push
subb
fldt
and
jbe
mov
jmp
and
in
pop
cmp
and
pop
adc
outsl
cld
pop
stc
lcall
jp
xchg
adc
cmp
push
mov
sub
insb
lret
lret
int
adc
jnp
pop
clc
enter
mov
ja
ficompl
enter
push
xchg
jecxz
cld
fs
nop
or
cmpsb
jge
sti
lret
in
pushf
test
cmpsl
je
lcall
es
push
fldenv
notb
dec
mov
sti
subb
add
fs
pushf
loope
pop
xor
adc
addr16
jnp
inc
dec
outsl
sti
or
sub
mov
jb
adc
cltd
dec
mov
and
xchg
inc
mov
movsl
ja
stos
popf
lods
ja
jnp
rolb
rcrl
cmp
sub
jns
add
inc
pop
xor
sub
xchg
adcl
mov
fcmovne
mov
outsb
es
dec
add
adc
jge
in
xchg
xor
repz
mull
push
dec
in
pop
jge
xchg
or
notl
in
sbb
cmc
push
cli
cmp
call
adc
out
addb
in
scas
inc
xor
ljmp
or
cli
jle
pop
cmp
push
mov
dec
fmull
mov
xor
not
rcrl
int
in
jl
mov
pushf
cmp
jl
stc
data16
stos
pusha
lcall
cmp
popf
and
pop
mov
xor
fmuls
sub
ljmp
or
xor
jbe
call
dec
fists
out
push
ret
adc
mov
aam
xor
subl
xor
mov
pop
inc
inc
loopne
xchg
stc
orl
push
ret
lahf
sbb
dec
push
in
mov
push
icebp
sbb
push
sub
loope
ret
loope
pop
fisubl
cli
dec
movl
or
xlat
das
lcall
and
rcr
ficoms
stos
push
inc
aas
lahf
adc
adcb
or
sbb
enter
in
or
xorl
out
adcb
imull
mov
push
pop
rclb
pop
fistpl
xchg
fisubrl
mov
fisubrl
sub
int
fimuls
xchg
sub
cmp
push
ss
mov
cmp
add
repnz
and
pop
adc
enter
and
and
sub
or
data16
jmp
es
inc
frstor
or
jae
cli
sbb
lds
push
push
xchg
daa
fcmovu
loopne
jmp
mov
lods
jo
pop
lahf
int
mov
icebp
cmp
and
push
sub
pop
cmp
xchg
stos
inc
pop
xor
xchg
jg
adc
test
and
sbb
frstor
stos
add
popa
or
leave
test
mov
xchg
daa
repz
xchg
lods
sbb
insl
sub
jecxz
fwait
mov
add
fildll
gs
jg
aas
adc
pop
lahf
stos
mov
mov
and
push
lretw
cmpsb
scas
stos
rcll
dec
pop
adc
mov
push
enter
rorl
or
push
in
xor
dec
stos
imull
nop
mov
int3
xchg
int
ret
insb
jmp
mov
xor
arpl
scas
hlt
sub
sarl
sbb
movsb
stc
sbb
add
push
pop
xor
cmpsb
rcrb
addr16
push
out
lret
jno
mov
pop
add
dec
sbb
adc
push
cwtl
pop
and
mov
lods
adc
movsl
insb
daa
sub
push
inc
cmpsl
stos
adc
or
cli
stos
addr16
inc
jnp
movsl
outsb
and
je
out
mov
and
pop
push
std
mov
dec
xchg
lret
cmp
inc
sbb
out
jmp
leave
add
mov
repnz
xchg
test
ficoml
inc
or
or
add
es
leave
cmpsb
xor
lods
or
in
leave
mov
mov
xor
cwtl
insl
enter
loope
mov
test
push
add
inc
insl
call
push
repz
enter
mov
jge
jp
sub
cmpsl
dec
push
xchg
mov
pop
jp
inc
sub
jg
rcr
loope
or
in
popa
les
fimuls
and
xor
bound
stos
je
dec
xchg
stc
in
dec
adc
daa
repz
sbb
or
dec
cmp
or
adc
shl
out
addr16
aam
daa
xchg
seta
test
sbb
cs
popf
xor
jp
adc
pop
sub
cmp
mov
test
mov
call
mov
mov
es
inc
jbe
es
in
xlat
jb
xchg
hlt
fdivrs
notl
iret
mov
out
pop
jne
jge
push
push
aam
jb
das
lahf
add
flds
fs
lds
bound
dec
movsb
dec
push
and
ficomps
loop
mov
cltd
push
fisttpll
dec
mov
js
lret
cs
insl
jb
dec
push
xor
leave
mov
jno
fisttpl
push
sbb
xor
sub
or
int
sub
mov
sar
xorb
push
xchg
xor
dec
mov
or
xorb
pop
subl
outsb
mov
cli
testb
mov
lret
xchg
sbb
dec
mov
pusha
inc
outsl
inc
jge
rorl
mov
add
fwait
jns
mov
or
xchg
dec
jmp
test
xchg
pop
jb
popa
pop
xchg
sbb
popa
xchg
mov
push
icebp
dec
jg
xchg
in
jns
roll
pusha
notl
sub
jae
lret
incl
or
jns
add
nop
xor
popf
jns
push
add
pushf
cltd
adc
xchg
mov
daa
or
es
cmp
in
inc
cld
push
rcrl
jne
jl
jg
xor
and
push
sub
xchg
fs
divl
xchg
shrb
push
clts
xchg
sub
arpl
shrl
cmc
and
jnp
inc
sub
mov
mov
mov
arpl
xchg
bound
or
dec
mov
shlb
lods
popa
mov
push
dec
sub
xchg
push
orb
pop
and
ss
ret
push
mov
cmpsl
mov
ja
jae
xor
leave
adcl
mov
ret
push
jnp
inc
mov
jp
aas
mov
inc
dec
and
int
xchg
pop
test
lods
and
sbbl
mov
adc
dec
dec
lds
and
dec
pop
add
add
push
icebp
xor
pop
negb
outsb
adc
push
push
into
popf
ret
add
arpl
adc
sub
xor
jmp
mov
les
or
test
push
xchg
dec
xchg
lock
mov
insl
in
sarl
jmp
test
aas
mov
lea
inc
sbb
popf
jle
mov
fdivp
sub
cwtl
xor
fwait
xchg
mov
out
inc
nop
xlat
aad
rorl
xlat
adc
adc
mov
sbb
loope
jae
sbb
add
mov
popa
sub
mov
lahf
sbb
aam
sti
mov
mov
and
push
or
aad
dec
loope
testb
and
jns
mov
add
cmp
pop
cmpsb
jmp
divl
mov
and
outsl
push
roll
ret
xor
cmp
je
bnd
mov
jbe
popa
stos
js
sub
xchg
jbe
gs
pop
adc
sbb
les
repz
mov
xor
jmp
das
inc
lret
lea
rcrl
ret
add
outsl
mov
je
fwait
or
sbb
xchg
jge,pn
mov
mov
hlt
sub
in
ja
sub
jle
sub
and
pushf
pop
or
adc
sbb
push
inc
mov
aaa
adc
aad
xchg
adc
outsb
std
adc
js
mov
mov
shl
mov
cmp
inc
jb
movsb
stc
dec
dec
mov
pop
xchg
add
cmp
loopne
sub
jbe
sti
ja
sarb
ficoml
mov
cs
gs
sbb
negb
fldt
out
lret
push
imul
jge
or
inc
sub
adc
pop
aad
sbb
int3
xchg
and
push
repz
lods
fisubrl
cwtl
xor
sahf
dec
jecxz
mov
adc
inc
repz
pop
jbe
fidivrl
mov
fisttps
imul
xor
jne
inc
inc
mov
rol
aam
push
jle
push
dec
in
jge
xchg
mov
inc
outsb
pop
dec
hlt
pop
test
add
xchg
mov
cmpsl
pop
pop
in
std
mov
xlat
test
mov
push
je
xor
ds
lock
in
and
idivl
movsb
pop
inc
mov
push
xchg
pop
lret
mov
or
dec
jno
adc
xchg
daa
cmp
jno
scas
jne
add
shrb
mov
clc
cld
sarb
cmpsl
fs
sti
ret
scas
fdivrl
stc
cmp
loop
mov
dec
sbb
jl
inc
ret
test
int3
aaa
mov
call
ret
jge
jmp
repnz
sar
pop
dec
sahf
jns
adc
jg
dec
or
cmovo
add
scas
xor
add
mov
ds
std
lds
dec
dec
adc
fcoms
orb
inc
out
scas
push
icebp
popl
shlb
addr16
fdivl
jns
gs
or
data16
lods
rolb
jo
shr
mov
jo
xlat
cmpsb
and
dec
pop
inc
ds
and
jns
ret
cmp
jbe
xor
and
call
cmp
xchg
lret
pop
sti
and
pushf
in
ret
call
pushf
es
or
das
enter
jnp
into
add
gs
adc
imul
ljmp
test
dec
icebp
iret
sub
inc
das
xchg
fwait
test
sar
je
enter
mov
pop
enter
das
inc
popf
add
repnz
scas
inc
pop
call
cwtl
nop
mov
inc
out
imul
in
int
inc
ret
sbb
lcall
cli
mov
lcall
xor
stc
push
scas
mov
push
aad
int3
cmc
iret
sbb
xlat
mov
mov
jbe
loop
js
mov
lock
cmpsl
ret
inc
imul
popf
adc
inc
mov
daa
ljmp
push
loopne
fimull
inc
lods
fmull
sahf
and
shl
cmp
cmp
insl
int
scas
jmp
mov
push
fs
mov
dec
aaa
inc
mov
cltd
jle
pop
lret
dec
mov
and
iret
lret
cmpb
xor
or
and
cli
add
loopne
xchg
push
ret
sbbl
mov
sbb
andb
dec
into
add
inc
push
lods
addb
cmc
jne
pop
sbb
test
test
js
decb
je
or
cmp
sub
lcall
je
xor
or
jmp
pushf
cmp
rcll
in
mov
sub
mov
lods
shlb
sbb
inc
mov
jo
push
add
out
fisttps
out
pusha
sahf
jns
push
aas
pop
bound
ljmp
out
lds
das
mov
cmp
or
dec
cwtl
popa
sti
daa
into
out
mov
add
mov
push
testb
jg
aam
push
stos
ret
cmpl
mov
adc
pusha
or
inc
jge
pop
mov
xchg
ret
jno
xchg
stos
sbb
cmp
pop
mov
xor
dec
out
pop
jl
cli
icebp
and
in
lret
mov
test
add
int
fsubrs
pop
add
xchg
sahf
mov
add
stos
loopne
cmp
data16
mov
inc
xor
xor
mov
es
fisttpl
ja
jecxz
movsl
int3
enter
std
movsl
mov
and
sub
incb
cmp
or
push
decb
dec
and
sahf
mov
xchg
inc
leave
enter
fcoms
clc
cmp
leave
bound
es
fsubrl
xchg
sub
cli
into
sbb
jns
mov
les
insb
and
or
test
in
shl
sbb
ljmp
cmpsl
mov
and
sbb
fsubs
and
test
stc
adc
push
aas
das
adc
push
cmp
sbb
out
or
into
pop
jmp
cwtl
cmp
call
sub
add
roll
icebp
pop
push
repnz
xchg
test
je
out
push
ror
push
sbbl
push
mov
std
mov
or
filds
fs
cwtl
sahf
cmc
sub
test
and
loop
and
imul
xor
push
aaa
push
jbe
jno
insl
lret
iret
out
pop
out
jbe
adc
rcll
outsl
divb
in
pop
and
clc
jnp
sub
fiadds
loope
xor
inc
dec
outsl
adc
cmp
cmp
fistl
hlt
xchg
sbb
scas
inc
push
push
addps
fsubrl
mov
mov
mov
idiv
add
or
mov
mov
fbstp
sub
inc
push
xchg
jecxz
add
xor
push
sbb
xor
roll
cs
xor
mov
test
add
push
pop
movsl
mov
sub
sbb
out
das
aas
push
and
in
fildll
in
ljmp
mov
and
out
mov
enter
push
cmc
insl
sub
shlb
mov
inc
jnp
xor
add
sbb
cmp
pushf
mov
cmpsb
test
aas
mov
je
popa
iret
dec
movsl
idiv
mov
add
add
xor
pop
in
inc
push
push
xchg
pop
push
sub
push
subl
xchg
pop
and
mov
sbb
ljmp
out
call
je
add
pop
mov
mov
adc
jne
roll
add
dec
pop
aad
pop
dec
mov
lock
xchg
mov
test
loopne
call
mov
add
inc
out
or
daa
aas
add
call
jne
dec
xchg
les
test
sbb
in
mulb
xor
lds
fstps
les
das
inc
fsubrl
int3
loope
inc
jb
adc
fs
movsb
jl
dec
adc
sbb
lods
das
jmp
jnp
dec
or
stos
pop
push
lcall
dec
test
int
das
xchg
mov
and
fdivrp
mov
cwtl
jle
ja
push
faddl
mov
cmc
jbe
fwait
xor
and
roll
ds
push
bound
push
push
fldenv
sbb
inc
mov
or
repnz
call
push
push
js
cmpsb
out
inc
dec
sub
cli
into
daa
xchg
cwtl
push
inc
ret
stos
aam
mov
shrb
xor
in
xlat
cmc
jge
cltd
or
repz
push
fsub
sbb
jg
mov
in
or
icebp
xchg
dec
xlat
fsubrs
add
nop
sbb
lea
mov
xchg
stos
outsl
shll
jb
iret
out
scas
out
dec
dec
sub
out
dec
int3
add
fucomi
mov
rcl
or
in
inc
cmp
xor
aam
xor
xchg
int3
jnp
and
jb
ljmp
insl
fiaddl
out
fldt
or
mov
cld
mov
addr16
out
push
addl
xchg
fiaddl
outsb
xor
incl
dec
xchg
inc
push
sub
jnp
dec
cmc
imull
push
mov
imul
dec
mov
movsb
inc
xchg
adc
es
ljmp
xor
bound
out
cmpsb
jg
mov
inc
xchg
std
pop
lea
pop
or
cmpsb
pop
cmp
xor
pop
jbe
xchg
test
imul
xchg
jne
add
mov
sub
jb
sub
cmp
rorl
add
inc
pop
mov
loopne
stc
mov
adc
and
out
rcrb
push
rol
shrb
sbb
xchg
mov
dec
sub
stos
and
add
std
pop
in
adc
gs
mov
pop
or
lahf
aas
aad
add
nop
dec
fldenv
jle
fisttps
inc
add
mov
stc
inc
pop
jle
daa
pop
and
or
loop
sub
cmpsl
add
adcb
idivl
movsb
add
dec
pop
in
sub
mov
pop
cltd
clc
pop
cmp
arpl
inc
push
aad
cmp
imul
hlt
add
insl
scas
sub
xchg
into
sbb
inc
adc
movsl
pop
outsb
clc
js
insb
add
popfw
es
repnz
lret
sub
or
cli
shll
adc
jae
std
inc
push
fiaddl
fwait
mov
and
pop
and
cwtl
jo
fstps
mov
es
cmp
adc
or
jae
sti
lds
scas
push
or
push
pop
insb
subb
nop
jns
inc
je
mov
insl
loop
mov
push
lahf
in
and
inc
cmpsl
pop
adc
sub
and
outsb
pop
jp
scas
adc
movsl
pop
rcl
cmpsl
jne
mov
lret
xchg
sbb
int
jmp
jns,pn
stc
decb
cmp
xor
loop
or
cmp
adc
jp
and
pushf
cmp
add
or
das
rorl
inc
jge
xchg
or
inc
pop
xor
addb
mov
add
pop
in
fwait
cmpsl
adc
mov
push
dec
pop
push
fistpll
sub
pop
or
lock
lahf
dec
aaa
enter
aad
pop
dec
popf
pop
jbe
incb
dec
mov
mov
in
sub
pop
jae
inc
stos
jne
sub
stos
mov
sbb
push
pushf
les
mov
mov
dec
pop
movl
dec
jo
cmc
lods
movsb
mov
sbb
test
fcmovnb
or
xlat
pop
add
push
add
cmc
scas
subl
aam
movsl
mov
dec
loopne
sub
jae
pop
jbe
adc
xlat
das
jo
mov
mov
add
mov
fwait
and
movsb
data16
imul
inc
testl
sbb
out
andb
add
int3
aaa
cmp
cli
insb
cmc
rorb
inc
push
lds
or
pop
in
inc
push
cltd
adc
lret
fldenv
or
cmp
jg
out
jns
xchg
xor
xor
jo
int3
cli
adc
mov
loope
mov
push
inc
or
xchg
dec
mov
jp
inc
xor
int
inc
into
mov
push
sbb
sbb
in
jg
jge
insb
and
fists
or
std
test
addl
push
shlb
loopne
push
inc
jnp
lds
inc
mov
cmp
dec
hlt
shl
repz
stc
hlt
gs
pushf
xchg
outsl
mov
sub
xchg
pop
aas
enter
loop
xchg
xor
insl
pop
push
pop
push
inc
push
mov
sub
sbb
aam
dec
xchg
mov
nop
es
push
fst
cmp
stc
insb
mov
daa
std
push
mov
adc
test
aad
es
movsl
lods
clc
daa
rcl
dec
xor
jno
sub
xor
pop
cld
jae
outsl
loope
adc
push
jno
xchg
in
mov
repz
rorl
mov
mov
add
cwtl
out
cli
adc
push
das
test
int3
insb
mov
jo
aas
adc
xor
sub
aam
out
loopne
pop
adc
and
cld
ja
or
jbe
pop
mov
nop
pushf
push
and
jns
pop
and
push
in
jp
lods
enter
repz
vminss
jbe
roll
getsec
cmp
ret
pushf
xor
cmc
mov
cwtl
pop
into
sub
sti
mov
stc
jp
and
out
aaa
imul
sub
test
push
imul
mov
jmp
rcll
imul
out
sub
jb
test
jno
fimull
imul
push
aaa
sub
mov
mov
add
gs
sahf
jmp
and
fbld
mov
inc
mov
mov
and
addr16
orps
shlb
mov
movl
mov
out
pop
aam
sbb
int
jge
mov
pusha
test
pop
inc
mov
pushf
cmpsl
mov
sbb
aas
std
lods
add
mov
push
sti
pop
cmp
jbe
xor
jecxz
cmp
mov
and
mov
mov
stos
xor
mov
fs
sbb
jge
xor
mov
push
and
loopne
rorl
and
push
fldl
repnz
loopne
lock
outsl
xor
negb
repnz
adc
push
clc
outsb
loopne
pop
xchg
out
lds
pop
mov
scas
pop
cmpsl
pop
add
xchg
into
gs
std
int3
bswap
push
mov
jnp
add
hlt
pop
or
rcr
cmp
in
ja
dec
lods
sti
mov
adc
scas
int
into
cmc
add
cmp
out
mov
leave
cmpsb
jg
imul
adc
dec
lcall
lcall
in
movsb
call
outsb
aam
jb
stos
std
xchg
pop
push
out
sar
mov
int3
outsl
cmc
xchg
lahf
int3
int3
scas
int3
cmpl
jecxz
pusha
and
xchg
pop
loope
hlt
jbe
jmp
dec
sub
popf
daa
icebp
dec
sub
xor
xor
jp
xorl
in
mov
push
cmp
mov
mov
mov
inc
rol
mov
sbb
outsl
pop
es
cmp
sbbb
jecxz
fistpl
out
add
jns
fsubrl
mov
bound
jb
lods
or
adc
insb
enter
ds
pop
incl
mov
out
es
bound
pusha
dec
scas
adc
test
jecxz
sbb
test
sqrtps
or
les
dec
std
sub
sub
shll
inc
fisttps
add
dec
inc
clc
ficoml
mov
fsubl
xor
out
cmp
sbb
arpl
jp
push
add
call
repz
jne
test
hlt
lahf
jb
and
mov
cmpsl
adc
mov
push
out
fnstcw
sub
dec
add
stos
inc
jmp
jg
out
add
pop
add
imul
jae
and
sbb
sub
dec
mov
aas
icebp
fimuls
lds
cmp
xor
xchg
pop
push
adc
jecxz
pop
adcb
xor
pop
outsl
or
jmp
mov
jne
int
outsb
xor
cmpb
push
in
jno
mov
mov
xor
fsts
leave
mov
outsb
dec
outsb
stos
add
into
stos
xchg
std
movsl
jns
loop
adc
dec
push
daa
sub
mov
jle
xchg
cmc
xor
jbe
adc
push
adc
fiadds
test
mov
mov
cmpsl
test
xchg
push
jno
loop
insl
adc
fs
js
mov
add
dec
mov
lods
and
test
sub
adc
xor
sbb
pop
mov
jmp
and
test
push
push
jmp
cmpsb
nop
aam
mov
je
fwait
mov
mov
or
outsl
pusha
xor
into
pop
test
es
fwait
lock
inc
mov
sub
movsb
xchg
xchg
sahf
xchg
xchg
enter
sub
ret
test
adc
cltd
push
popl
mov
mov
mov
addr16
add
ljmp
ds
fdivr
insl
jle
xchg
ret
out
arpl
cmpsl
call
movsb
das
ljmp
dec
aam
insb
push
lods
pop
imul
push
stos
sbb
mov
xchg
dec
stos
sbb
dec
pop
cmc
jae
adc
mov
addr16
fucomp
inc
adc
addb
aam
mov
mov
mov
outsb
xor
inc
and
mov
stos
jbe
push
jl
insb
inc
and
sbb
dec
and
xchg
mov
out
or
out
pop
xor
stos
xor
dec
sub
inc
mov
pop
fimuls
xor
xchg
sub
add
rorb
pop
or
iret
xchg
outsl
mov
cmc
icebp
nop
dec
and
mov
dec
cmc
dec
jge
pushf
pushf
popf
fdivl
push
push
sbb
test
push
mov
dec
pushf
fcomi
es
repz
mov
pop
ljmp
in
subb
dec
xchg
stc
fcomps
push
mov
cmpl
pop
scas
mov
and
push
jmp
adc
jge
jl
insl
push
popa
sub
pop
pop
sbb
outsb
xlat
xorb
sti
cmpsl
arpl
daa
mov
push
jnp
adc
sbb
cs
and
stos
mov
imulb
scas
dec
jmp
jbe
sti
popa
jno
ret
push
push
mov
mov
push
pop
mov
jge
popa
inc
leave
les
pop
push
ja
test
cmp
in
mov
repnz
or
xchg
or
jg
add
fsubrs
xor
sbb
push
das
xchg
push
not
ficoml
pop
adc
lahf
inc
adc
jae
mov
or
cmp
xor
stos
shrb
push
call
scas
mov
js
je
aaa
sbb
and
xor
js
cmp
out
loop
sub
int3
shl
cltd
pushl
xorl
add
stc
nop
inc
arpl
add
cmp
ds
shl
sub
scas
push
out
insl
ret
test
inc
fistpl
dec
out
mov
ficoml
mov
cmp
popa
push
xor
in
ss
mov
shlb
nop
push
xor
xchg
sub
inc
dec
adc
pushf
mov
fs
scas
outsb
cmc
xchg
or
pop
inc
loop
jno
mov
dec
cltd
mov
adc
lret
pop
notl
in
push
js
jecxz
mov
lea
rolb
dec
mov
xor
xor
jg
addr16
mov
xchg
add
cmpsl
sbb
or
mov
sub
in
adc
movsl
and
ficomps
leave
mov
mov
sarb
adc
cmp
xchg
movsl
sti
testl
adc
lock
or
jns
cmp
les
or
ret
insl
scas
xchg
fldl
mov
jns
pusha
mov
das
mov
pop
scas
lock
push
cmp
push
adc
pop
push
in
sbb
cmpsb
ret
add
imul
mov
inc
sbb
dec
dec
cmp
adc
nop
mov
inc
xchg
cmpsl
inc
popl
fbld
or
enter
xchg
stc
and
xor
pusha
insb
test
and
pop
mov
xchg
out
negl
fnsave
rolb
mov
or
xor
pmaddwd
cmp
ret
mov
mov
push
leave
shll
imul
nop
jns
popf
out
mov
jb
cmp
xor
jne
push
jno
int
mov
loope
push
cli
inc
xchg
cmp
pushf
stc
pop
adc
inc
mov
pop
out
mov
out
adc
pop
stc
cli
and
add
or
cwtl
dec
jno
hlt
test
loopne
pop
lds
push
outsl
int
jne
or
jecxz
nop
into
mov
insl
movsb
dec
mov
push
cwtl
adc
push
mov
in
es
out
mov
mov
ds
mov
add
leave
jle
mov
mov
jbe
cmp
mov
pop
mov
cmc
mov
pop
adc
enter
adc
xchg
test
sub
push
push
aaa
sbb
and
and
aam
xor
jmp
data16
dec
loop
repz
jnp
or
xchg
test
dec
mov
mov
xor
aaa
lods
mov
adc
xchg
push
nop
cmpl
jo
ficompl
sar
add
or
or
xchg
and
cmp
xchg
out
sub
inc
out
cltd
pop
cmpsb
mov
bound
sub
fisttpl
inc
and
dec
fists
aam
sub
stos
xor
cmpsl
mov
insb
mov
xchg
outsl
push
mov
mov
cmc
mov
loop,pt
aam
xchg
negl
jo
lock
xor
int3
idivb
fwait
dec
std
sbb
leave
inc
subb
ret
adc
mov
movsb
pop
mov
mov
stc
xlat
pop
iret
aam
inc
push
push
popa
mov
sarl
and
fnstcw
pop
mov
dec
sbb
dec
subb
push
icebp
jb
jg
ficoms
jne
scas
cmp
repnz
pop
inc
dec
pop
xlat
mov
lods
fcomp
sahf
int
adc
sbb
jl
or
jmp
mov
in
add
add
pop
shrb
movsl
out
pop
stos
sbb
mov
inc
out
js
jl
imul
cmp
mov
pop
push
push
mov
fwait
repz
ljmp
inc
or
jp
xchg
inc
xchg
and
cltd
inc
mov
add
mov
sahf
jno
xor
sbb
pop
das
ss
pop
cmp
push
ret
scas
ffree
stc
aad
cmp
iret
push
shll
sub
xlat
pop
mov
stc
frstor
xchg
pop
or
inc
push
test
lds
movsl
movb
scas
pushf
xor
loope
adc
dec
add
scas
mov
imul
jo
lcall
movsl
insb
int3
mov
mov
sbb
out
cmp
rcll
xchg
xor
jge
cli
sbb
mov
sub
mov
fbld
repnz
push
push
outsl
cmp
dec
fdivrs
ss
push
xchg
sub
sbb
or
arpl
push
mov
adc
mov
insb
icebp
add
testb
ret
adc
sbb
mov
fldl
cmp
xor
pop
jg
xor
lret
xchg
ljmp
cli
xchg
cmc
mov
mov
mov
hlt
adc
sbb
gs
jb
lods
pop
mov
call
mov
adc
mov
xchg
xor
test
push
vpackuswb
inc
sub
mov
fstl
cld
js
scas
dec
dec
aas
fbstp
adc
mov
roll
or
jp
imul
test
sub
jno
aaa
seto
add
sub
xchg
jae
push
xchg
jge
cmpsb
mov
dec
fnstcw
inc
popf
imul
divl
push
mul
pop
xor
pop
popa
sub
jnp
push
loopne
ljmp
inc
xor
fcmovne
cmp
cmpsl
dec
xor
lret
repnz
cli
add
out
mulb
bound
iret
push
adc
and
jmp
cmpsl
pop
iret
inc
and
mov
imul
popf
hlt
jbe,pt
jl
jb
add
inc
cmp
aas
xor
int3
fs
or
add
mov
mov
pop
out
dec
add
ds
leave
mov
ljmp
jae
jle
and
call
jne
push
imul
jb
pop
xor
mov
inc
pop
xlat
mov
mov
in
nop
fsin
stos
jno
daa
xlat
in
lea
lret
xor
pop
scas
jecxz
push
mov
push
inc
ds
add
ficomps
andb
dec
jp
pop
insb
stc
mov
icebp
jg
lea
loopne
ds
mov
paddsw
sti
cmp
or
imul
insl
ljmp
fstl
sahf
jge
xchg
cmp
pop
inc
cmp
adc
xchg
sub
and
mov
jp
repnz
rolb
jns
int3
arpl
xchg
xchg
in
ror
adcb
xchg
jle
push
cmp
repz
mov
push
push
fadd
icebp
xor
bound
test
pop
add
inc
mov
jae
in
cmp
inc
mov
push
test
xchg
fdivrs
and
dec
enter
orl
mov
jns
mov
jp
ds
pop
add
imul
cs
mov
jae
adc
fisubrl
fiadds
inc
aam
xchg
aas
push
cwtl
cld
mov
push
enter
cmp
inc
push
testb
jae
xlat
cmpsb
push
mov
push
mov
jge
je
sbb
sbb
iret
movsl
sbb
pop
xchg
xchg
add
push
xor
or
sbb
pop
adc
loop
push
movsl
xchg
ret
mov
addb
popf
cmp
in
inc
jo
orl
icebp
pop
jle
or
push
or
nop
stos
jae
fiadds
inc
dec
cmp
sbb
sub
cs
adc
cwtl
int3
mov
sbb
out
pop
adc
xchg
mov
lret
lret
cmpsb
push
and
movsb
xchg
cmpsl
mov
dec
lea
mov
jo
cmp
pop
mov
aad
sub
pop
xchg
xor
adc
add
push
popf
mov
jb
xchg
es
roll
xchg
clc
ja
mov
inc
xor
sub
push
mov
mov
jb
shlb
pop
roll
dec
je
jmp
les
fstps
jl
push
xchg
addb
inc
mov
out
mov
push
mov
and
cwtl
xor
mov
sbb
mov
lahf
int
cmp
les
xchg
mov
mov
scas
or
push
push
pop
xchg
lods
xchg
test
xor
and
mov
movsb
loope
lahf
add
push
xchg
mov
stc
mul
push
test
ja
aad
pop
xchg
stos
xorl
sbb
lar
pushf
mov
jns
or
mov
lea
jnp
add
add
stc
and
jbe
push
dec
pop
sbb
jmp
int3
lods
adc
adc
pop
insl
add
in
fisttpll
pop
out
push
cmc
push
inc
stos
idivl
adc
pop
shlb
dec
mov
pop
mov
mov
je
add
jbe
mov
sbbl
mov
cld
call
nop
add
inc
inc
scas
pop
or
mov
dec
in
out
adc
adc
adc
fisubl
pusha
inc
pop
jle
sub
xchg
push
dec
jno
push
jecxz
outsl
int
fbstp
pop
push
push
js
jecxz
pop
rclb
aam
sbb
pop
and
or
repnz
and
fstpt
add
push
hlt
mov
inc
mov
imul
shr
xchg
add
dec
jp
jno
fsubrs
mov
cwtl
fildll
in
inc
cmp
sub
mull
or
jge
mov
in
mov
cmp
lea
mov
fdivp
scas
pusha
out
pusha
add
ds
out
xor
int
jl
push
mov
xor
jne
fwait
loop
clc
je
lea
adc
rcrl
loope
add
and
xor
insl
adc
push
test
adc
cmpsb
movsb
sbb
aaa
jp
xor
pop
xor
xchg
mov
repz
lods
dec
dec
sbb
cwtl
lea
loop
int
insb
mov
mov
data16
sub
xor
sbb
call
pushl
rol
cmp
outsb
adc
pop
add
xlat
je
cmc
sub
inc
movsb
xor
cmp
sub
cmp
xor
add
lods
cmp
mov
or
test
mov
add
loop
or
cmp
pop
fistpll
pop
sub
push
fisubs
mov
ljmp
imul
mov
sbb
jno
pop
add
mov
mov
dec
lret
sbb
mov
shrl
or
faddl
push
add
xlat
add
movsl
mov
pop
mov
clc
ja
or
adcl
sbb
dec
aad
xchg
mov
insb
xor
sti
loope
cmpsb
jne
mov
loopne
and
cld
dec
dec
push
sbb
xchg
leave
and
loope
ror
dec
xor
or
pop
lret
jb
lret
cmpl
out
push
mov
insl
mov
sub
ds
xchg
and
rorl
dec
push
push
out
mov
pop
stos
in
aad
movsl
pushf
fstl
sub
push
cld
xchg
pop
inc
mov
mov
rcr
imul
cmp
and
jno
ljmp
call
not
lret
and
pop
fildll
xchg
sub
into
int
dec
xchg
xor
cwtl
mov
bound
lods
enter
and
pop
orb
and
lcall
push
mov
xchg
mov
push
add
pusha
pusha
or
ja
je
insl
stc
lea
ja
or
inc
push
add
lahf
jecxz
movsb
bound
test
cmp
push
shrl
into
iret
sysenter
pusha
or
vfrczsd
sar
push
fistpl
adc
test
cmpsb
dec
ret
push
into
jg
cmp
testb
push
outsb
sti
pop
sti
les
mov
loop
call
mov
mov
sti
or
add
hlt
fsubr
ds
mov
push
jecxz
and
ljmp
out
mov
pop
jl
gs
mov
sub
push
into
jmp
negb
inc
shll
loop
or
pop
fwait
mov
pusha
repnz
add
out
aas
mov
movsb
pop
jne
cmp
outsl
adc
sahf
imul
mov
dec
mov
lea
inc
idivl
adc
es
stos
test
loope
out
or
add
adc
xor
dec
sub
push
sbb
mov
mov
shll
mov
sbb
push
xor
data16
leave
je
cmpb
pop
mov
insl
rclb
mov
repz
adc
xlat
nop
cmpsl
lods
scas
lds
pop
out
pop
rolb
xor
add
repz
xchg
dec
and
or
mov
xchg
jbe
shl
push
test
stos
push
rcrl
adc
stos
mov
ret
or
mulb
jns
cmp
les
add
ret
pop
push
popf
es
call
aas
mov
es
mov
cld
or
jge
movl
aam
xchg
jecxz
mov
cmc
mov
xor
adc
sahf
out
mov
push
sub
jbe
int3
jecxz
neg
or
adc
pop
mov
jb
cltd
fbld
ficompl
jg
pushf
pop
int3
mov
hlt
add
sbb
aam
pop
bound
mov
lds
scas
sub
add
imul
stc
sub
mov
insl
or
push
inc
fsubl
int3
mov
push
iret
cs
push
dec
pop
and
rcr
iret
int3
ret
loopne
jmp
xor
lea
inc
ss
test
ret
loop
je
add
inc
adc
xlat
nop
adc
aas
mov
std
jle
test
jg
jl
push
insl
cmp
pop
jl
cmp
jmp
jb
push
sub
divl
movsb
enter
pop
test
sbb
adc
ss
loop
push
sbb
add
inc
adc
push
lods
pop
out
inc
lcall
pop
outsl
xchg
loopne
jno
insl
fwait
mov
jns
pop
add
je
mov
ss
je
aaa
pop
push
mov
add
jno
sub
mov
pop
xchg
sahf
fdivrs
pop
mov
imul
cmp
repnz
call
shr
pop
adc
mov
stos
fnstenv
mov
addl
shrb
nop
imul
mov
jg
dec
int
mov
add
shll
sarl
in
loope
add
test
ss
imul
pop
or
aad
rep
sub
sbb
xchg
pop
adc
shl
sahf
in
xchg
lret
addr16
xor
aam
rcll
divl
lods
and
fnsave
lods
jnp
adc
adc
cld
mov
imul
pop
decl
mov
nop
sbb
movsb
push
jmp
ret
cmp
aam
pop
adc
mov
outsl
std
adc
cmp
inc
mov
mov
les
adc
cmc
cli
xlat
push
dec
push
imul
push
cmpsb
jo
outsb
adc
pop
sub
inc
js
inc
test
popf
push
loope
and
cli
test
scas
jp
iret
cli
mov
fcompl
mov
dec
aad
cmp
test
add
loope
ljmp
xor
rcrb
pop
sub
loope
popf
dec
dec
and
mov
push
lock
test
fidivl
lds
pop
lret
xlat
stc
sbbl
push
mov
mov
jg
arpl
pop
shrl
mov
inc
xor
sub
in
inc
and
lea
adc
inc
js
cli
cmpsb
cmp
cmp
imul
push
add
test
mov
shl
test
jmp
push
lahf
pop
jno
iret
sbb
and
add
repnz
xchg
movsl
pop
sub
and
test
aas
or
sbb
fildl
sbb
adc
pop
out
jb
jbe
mov
dec
inc
stos
pop
out
clc
push
ret
lret
sbb
sarl
jmp
pop
ret
mov
lock
ljmp
xor
mov
in
jmp
mov
cmp
inc
jns
mov
test
push
push
push
jb
mov
das
push
ret
cs
inc
xchg
or
jmp
xchg
jecxz
sub
jl
mov
out
dec
jmp
pop
sahf
in
lret
push
pushf
decl
pop
push
mov
cld
out
sti
jp
sbb
mov
sub
pop
shll
jo
inc
push
adc
mov
fcom
jno
sbb
sbb
add
sahf
out
loopne
movsb
jbe
cwtl
push
lea
add
rcll
dec
mov
sti
fdivr
push
lret
jmp
aad
push
push
pop
jle
ljmp
arpl
les
or
insb
or
repnz
xchg
jns
sbb
aas
je
pop
ret
outsb
xchg
cmp
pop
xchg
adc
mov
das
push
pop
test
bound
add
inc
jg
add
dec
lret
push
out
jecxz
and
pop
daa
or
leave
ja
adc
jmp
sbb
mov
xchg
sub
jmp
sbb
dec
repnz
cmp
inc
pcmpeqd
dec
daa
cmp
loope
cs
mov
mov
and
std
adc
ss
jnp
push
mov
int
mov
dec
scas
fwait
clc
and
mov
jbe
fistps
or
lods
mov
mov
add
and
test
push
or
xchg
ja
mov
mov
out
and
outsl
lock
xchg
nop
enter
cmp
or
xorb
mov
imul
add
sbb
je
out
lahf
in
jmp
pop
and
mov
cwtl
imul
push
idiv
xchg
inc
adc
aaa
out
pop
out
jns
call
fcomip
push
inc
mov
into
lahf
inc
movswl
pop
push
aas
sbb
test
inc
xchg
ficomps
addr16
movsl
sahf
test
repnz
mov
xchg
mov
imul
xchg
inc
loop
out
aad
or
dec
scas
xchg
xor
adc
and
xor
ljmp
inc
push
enter
jmp
js
jno
sub
mov
aaa
cmp
push
mov
jb
addb
mov
data16
add
ss
movsb
cs
or
mov
adc
aaa
xor
mov
rolb
fmull
jno
mov
jle
xor
inc
sbb
mov
lcall
popa
lahf
cwtl
mov
adc
xchg
lret
stos
mov
push
push
jae
pop
test
cmp
push
cmp
scas
repnz
sbbb
inc
lea
xor
hlt
rorb
sbbl
out
adc
lret
dec
cmpsl
aad
in
pop
imul
fdiv
cld
fbld
push
xchg
dec
jl
enter
jae
inc
jne
loopne
aas
lret
mov
inc
fisubrl
fsubs
jnp
and
push
or
repnz
rdtsc
push
lock
inc
sbbl
jecxz
inc
aad
mov
sbb
fld
mov
test
fiaddl
je
pop
gs
inc
bound
pop
xorb
sbb
shll
das
aaa
enter
out
imul
call
pop
pop
xor
add
sbb
cmp
and
int3
push
loopne
add
clc
lret
mov
adc
movsb
test
or
jb
jmp
jl
push
jecxz
fs
cs
pop
xchg
movsl
xchg
test
lahf
insb
xorl
test
sar
xlat
push
imul
subl
push
and
push
addb
xchg
into
leave
xor
stos
mov
adc
pop
inc
dec
lcall
fcoms
sti
mov
mov
scas
xor
adc
sbb
into
push
sub
mov
ror
in
xchg
jno
adcb
xchg
mov
addl
jg
mov
call
mov
pop
jb
rcll
stos
mov
jno
push
adc
sub
movsl
xlat
lods
mov
push
mov
push
lea
sbb
and
repz
dec
push
xchg
ret
sbb
xor
adc
mov
xor
sbb
mov
leave
or
inc
mov
mov
scas
pop
sbb
jecxz
dec
es
fcmovne
out
sbb
adc
and
leave
jle
xchg
lret
out
adc
pop
cmpsl
jne
loopne
std
test
adc
test
js
cld
lahf
lret
cmp
daa
dec
lods
es
and
aad
jae
stc
mov
push
out
cmp
mov
dec
cld
inc
cld
test
and
leave
popf
pop
call
in
stos
lahf
or
adc
sbb
mov
insl
push
sbb
xor
sub
scas
jg
mov
cmp
mov
xchg
and
xchg
popa
scas
dec
pop
lods
inc
sub
xchg
scas
jp
movsb
jb
out
je
int3
jge
adc
cmc
mov
gs
jbe
fstpt
add
pop
add
push
mov
push
repz
daa
pop
jecxz
mov
push
mov
js
xor
leave
xchg
sarb
sbb
lcall
cmpsb
pop
cmp
insb
dec
xchg
mov
jb
inc
lods
testl
js
stos
sub
loope
mov
jno
out
cli
movsb
iret
mov
mov
dec
xchg
xchg
es
test
lods
add
cltd
mov
or
jge,pt
lock
pop
icebp
xor
cmpsb
jecxz
push
xchg
inc
sahf
or
xor
scas
and
loopne
stos
add
in
popf
test
orl
lods
subl
xor
push
cli
out
xlat
adc
mov
shlb
mov
adc
and
inc
cmp
mov
lcall
cmp
popf
cltd
lods
movd
stc
xchg
arpl
pusha
sti
popf
jmp
sti
xor
xchg
cwtl
fisubrs
leave
jns
cltd
adc
sub
dec
sub
loop
xorb
mov
pop
and
movaps
sub
fidivrs
iret
xchg
sbbb
add
mov
inc
out
jmp
clc
push
cmp
movl
dec
fisubrl
add
in
sub
add
loop
or
cmp
dec
pop
push
mov
mov
push
lods
stos
inc
outsb
js
xor
es
dec
mov
insb
mul
jns,pt
lret
adc
push
fxch
mov
push
rcll
in
inc
push
test
imul
jmp
div
lahf
insb
ret
adc
sbb
xlat
movl
cmp
mov
push
sub
mov
push
inc
xor
ljmp
jnp
mov
mov
inc
lret
pop
add
push
sub
popa
pop
add
clc
jecxz
pop
sbb
out
rcll
cmp
add
or
xchg
push
lods
mov
out
aam
add
and
test
int3
dec
stc
mov
call
cli
cld
or
jno
mov
movsl
stc
mov
cmc
mov
bound
jg
lcall
scas
pop
jo
jo
cmpsl
aas
cmp
mov
dec
lret
dec
inc
mov
mov
hlt
fildll
dec
inc
jno
jo
adc
push
int
mov
shlb
repnz
cwtl
and
repnz
xchg
clc
int3
add
std
test
pop
test
jne
and
jns
and
xor
mov
or
cmp
ret
icebp
pop
add
jo
adc
int
hlt
or
or
pop
lahf
xchg
xor
sbbl
mov
loope
xor
lock
sarb
xor
bound
movsl
ss
mov
mov
sbb
lcall
cmp
les
mov
scas
push
repz
subb
xor
mov
dec
rcrb
das
inc
imul
mov
jnp
or
add
pop
mov
loop
clc
int
mov
into
cmp
mov
jmp
std
mull
stos
cmpsb
xchg
jmp
sub
xchg
int
popa
aad
jecxz
inc
push
in
test
mov
and
sbb
xchg
push
ret
bound
fcoms
push
jnp
dec
out
lods
mov
fistl
jno
sbb
push
jnp
mov
ficoms
insl
cmp
adc
jge
ja
loopne
adc
das
mov
or
add
jae
jmp
or
mov
pusha
aam
mov
fldcw
push
fs
dec
push
loope
mov
xor
xor
mov
pusha
test
cwtl
xor
or
ds
push
pop
or
lods
xorl
imulb
push
scas
mov
push
mov
faddl
ret
push
and
popa
or
xchg
aam
mov
dec
inc
push
xor
mul
jb
mov
clc
xchg
es
test
push
dec
pusha
push
mov
jge
push
mov
imul
incl
lahf
sub
fdivs
fldt
sub
outsl
jle
inc
pop
enter
outsl
and
in
aad
mov
imul
push
hlt
push
push
aaa
add
aam
add
imul
fdivr
mov
fwait
mov
movsl
push
mov
push
icebp
dec
pop
psubsb
push
lods
jmp
rolb
adc
xor
dec
lret
xchg
mov
sbb
cmp
or
cmp
shrb
fs
pusha
idivb
xchg
out
movsl
inc
inc
or
loop
inc
ret
mov
int3
cld
dec
xor
xchg
cmc
insb
stos
adc
mov
loope
add
dec
dec
aad
adc
popf
and
add
xchg
ja
cmpsb
aaa
inc
into
push
mov
test
imul
cli
mov
negl
aad
sahf
insb
mov
addl
jnp
jmp
push
insl
xor
or
gs
outsl
mov
movsb
xchg
jmp
iret
call
mov
setns
sbb
xor
sub
mov
mov
mov
fwait
add
sub
adc
jp
adc
cli
movsb
jnp
dec
gs
jb
push
test
xchg
ret
pop
and
pop
inc
pop
adcl
xchg
mov
and
rclb
into
xchg
iret
push
scas
sub
jecxz
out
jo
and
dec
pop
cmp
out
sbb
or
lods
std
int3
mov
sbb
push
das
xor
pop
adc
fdivs
lret
fsubrs
sbb
xchg
pop
xor
lock
inc
mov
fidivl
in
mov
mov
ljmp
ffreep
adc
mov
xor
movsl
scas
lock
pop
push
nopl
loop
push
sbb
js
into
rcr
stos
sbb
mov
xlat
insl
mov
adc
xlat
pop
mov
fistps
pop
hlt
pop
das
sbb
stos
sbb
jbe
shrl
push
addps
rclb
sbb
pusha
push
cmp
cld
push
lret
xchg
push
cmp
and
mov
testl
mov
xlat
sbb
dec
clc
pusha
xor
icebp
jp
aaa
and
aad
adc
pop
scas
jo
push
pop
sti
movsb
inc
mov
sbb
ljmp
mov
adc
js
fisubl
mov
fwait
push
ljmp
sbb
ret
cs
mov
dec
xchg
mov
sub
dec
sbb
aad
aam
cmpsl
repz
hlt
jmpw
xor
push
in
test
decl
sbb
test
sbb
inc
add
adc
shr
ja
divl
mov
pop
pop
das
adc
out
xchg
mov
push
add
loopne
xor
inc
fwait
xor
jne
lret
icebp
into
dec
mov
notl
mov
scas
adc
pop
jge
mov
rorl
movsl
jno
mov
aas
inc
lahf
jmp
add
adc
jmp
iret
outsl
stos
adc
cs
xor
jno
and
push
sub
icebp
cmp
pop
aaa
dec
fucomp
and
popa
push
inc
xorb
nop
aad
cmc
dec
out
repnz
call
and
aaa
push
push
jbe
inc
inc
lods
dec
dec
inc
or
data16
imulb
and
int3
imul
jno
roll
insl
push
jge
jge
cmp
lods
rclb
ret
dec
fsubrs
inc
test
jno
cmpl
insl
icebp
or
cltd
sarb
or
out
adc
sub
sbb
repz
sbb
int3
mov
test
mov
pop
das
mov
daa
dec
nop
and
loopne
inc
pop
rcll
pop
or
pop
iret
jne
out
inc
mov
subl
les
lock
iret
js
js
fsubrp
push
mov
xor
dec
add
lds
mov
push
and
jmp
mov
das
sarb
aaa
ja
loop
lods
shrl
aaa
shlb
aaa
inc
fs
movsl
stc
xchg
enter
cli
cs
mov
fwait
out
out
push
xchg
ja
pop
test
fistps
or
lret
fsts
and
push
and
divl
xchg
xor
jne
mov
fimuls
outsl
sbb
push
out
add
sbb
fnstsw
lds
and
xchg
sbb
or
jb
sti
cli
pop
repz
aas
or
roll
xor
cmp
imul
idivb
mov
lea
and
mov
mov
pop
out
ret
pop
mov
mov
aaa
insb
dec
and
sub
js
shll
imul
mov
loop
ljmp
enter
insb
push
add
mov
jb
inc
inc
dec
cvtdq2ps
arpl
mov
xchg
hlt
xor
rclb
into
rclb
inc
daa
xchg
xor
sbb
enter
pop
or
and
jle
xor
xchg
dec
pop
repnz
jno
out
and
leave
pop
in
pop
int3
xor
test
je
jb
in
pop
lahf
repnz
pop
loop
inc
mov
pop
pop
ret
mov
jecxz
inc
push
outsb
xor
jecxz
jb
jnp
arpl
add
xor
sub
add
pop
jmp
test
pop
sub
xchg
popf
sub
or
pusha
test
fcoms
cmp
out
mov
ljmp
clc
sbb
xlat
out
fwait
shlb
rcrl
lcall
xchg
dec
inc
mov
mov
call
std
test
add
sbb
sbb
lcall
mov
loop
je
or
mov
sbb
cmc
lahf
aad
inc
cs
std
loope
lods
or
pop
dec
insl
xor
add
jno
dec
movsb
dec
add
lcall
imul
ljmp
dec
dec
cmc
movsb
lret
cmp
or
pushf
or
les
sarb
dec
fistps
int3
inc
jne
xor
sbb
mov
add
sarb
cltd
mov
filds
jmp
inc
fcmovb
add
sbb
loope
ds
xor
test
dec
subl
jecxz
cs
push
pop
pop
ficoml
xchg
push
cmc
cmpsb
xchg
fwait
clc
xor
and
and
and
clc
and
cld
xor
outsl
dec
push
pop
xchg
jne
cld
push
adc
lds
cmpsl
pop
arpl
xor
les
in
add
sbb
mov
lahf
mov
mov
inc
sbb
mov
pop
lcall
inc
pop
pop
enter
adc
sbb
push
fildll
and
int3
int
lret
std
gs
jb
pusha
dec
xor
mov
push
cltd
cmp
clc
jno
mov
movsl
sub
cltd
inc
in
dec
dec
inc
xor
push
inc
aam
xchg
adc
fisttps
lock
push
cmp
stos
shrl
jae
or
mov
or
pop
sub
aas
orl
roll
xchg
pushf
std
mov
test
inc
adc
pop
mov
fidivrl
test
or
fbstp
jnp
add
divl
mov
dec
ret
push
fildll
loopne
mov
scas
call
jno
mov
les
insl
sbb
add
adc
sub
int3
adc
mov
ret
out
mov
in
popa
jo
ficoms
sbb
adc
dec
ss
adc
pusha
in
mov
jp
ficoms
and
out
flds
loop
lcall
sub
in
mov
push
in
push
in
xor
lcall
xchg
test
loop
imul
in
out
xchg
data16
adc
xchg
icebp
hlt
cmp
scas
push
or
inc
push
iret
ss
pop
pusha
or
xchg
jbe
sub
pop
rcll
mov
loope
in
incl
pop
test
and
mov
jp
dec
leave
or
pop
pushf
pop
xlat
imul
ljmp
hlt
mov
stos
and
bound
dec
mov
add
inc
or
dec
sbb
incl
jp
outsb
adc
sbb
test
stos
push
std
and
lds
std
add
pop
jge
les
in
sahf
inc
fstl
inc
pop
inc
sub
in
and
notb
push
ficompl
loopne
cmpsb
cld
pop
arpl
dec
push
jp
mov
dec
imul
test
push
sbb
roll
push
mov
fcoml
pop
ficoms
test
push
scas
xchg
mov
insb
data16
outsl
rcll
in
es
test
shlb
jle
shlb
sub
clc
jo
daa
out
pop
repnz
adc
dec
lret
outsb
sub
xchg
lods
adc
movsl
jb
dec
pop
das
cmp
mov
jb
inc
sbb
stos
lea
call
pushf
xchg
sahf
pop
mov
xchg
push
push
add
popa
xor
inc
jecxz
ret
lock
test
or
mov
jg
add
sub
scas
out
xchg
fistps
sbb
rorb
pop
pop
leave
xor
sti
jle
ret
lods
or
ss
sti
cmp
inc
les
cltd
movsl
adc
mov
and
ret
mov
pop
mov
push
dec
push
jo
aad
or
push
data16
outsl
cmpsl
add
inc
fidivrs
push
xchg
xchg
testl
cmp
ret
nop
leave
sbb
adc
test
sbb
inc
mov
pop
je
mov
popa
jnp
sbb
push
xchg
xchg
push
mov
xchg
stc
int
iret
and
sub
fistpll
cmove
add
xor
dec
bound
mov
jne
mulb
fisttpl
jg
iret
pop
inc
scas
inc
xchg
pusha
cmpsl
stos
rolb
lahf
sub
xchg
push
aam
cltd
cmp
push
jno
sbb
jno
inc
sub
out
cmpsb
push
in
into
and
mov
cmpsl
scas
mov
mov
or
adc
add
cmpsl
dec
xlat
xchg
sub
and
popa
push
mov
pop
lret
mulb
adc
and
ja
les
pop
sub
shlb
jl
scas
dec
jle
pop
sub
les
sub
scas
xchg
sbb
inc
cmp
into
inc
sub
mov
mov
movsb
lret
or
adcb
js
cmp
inc
cmp
sarb
xchg
cmp
ds
shll
and
mov
pop
dec
mov
mov
inc
mov
mov
push
loopne
ret
ss
push
outsb
jne
loopne
aaa
sahf
test
rclb
mov
jecxz
ficompl
dec
sub
jmp
pushf
mov
nop
push
shrb
cltd
mov
fdivl
mov
jl
jne
cmp
fmull
int3
aad
xor
jmp
shrb
push
pop
jne
pop
mov
lret
lock
pminub
insl
pop
push
repz
daa
sbb
lods
inc
fildll
sahf
int3
pusha
adc
sub
mov
adc
loope
cs
outsl
xchg
repnz
loope
sbb
bound
push
dec
jne
adc
loopne
dec
shll
pop
mov
xchg
imul
push
test
inc
mov
data16
xor
sar
mov
sbb
lahf
cmp
test
insb
inc
sbb
daa
std
scas
popa
mov
inc
xor
bound
push
pushf
adc
call
adc
decb
push
fwait
lret
lret
sbb
or
push
decb
push
movsl
stos
mov
lock
jmp
daa
xchg
push
into
mov
add
ret
jmp
stc
lods
loop
pop
pop
and
clc
notb
stos
fbld
mov
fsubrs
fiadds
sub
mov
sub
insb
sbb
int
or
dec
clc
insb
loope
imul
stos
cmc
pop
or
jo
enter
clc
cwtl
jne
pop
xchg
jmp
pop
repz
out
sub
sub
mov
and
mov
lds
scas
rcrb
add
fdivrs
cmp
push
push
dec
add
fdivp
out
lahf
dec
bound
sub
xor
mov
fisttps
mov
push
adc
push
in
mov
add
fcoml
in
mov
cmp
xchg
test
cltd
movsl
pop
and
mov
xor
adc
nop
in
sub
popa
inc
imul
mov
ret
jp
mov
fdivs
dec
nop
mov
mov
decl
cmc
mov
popf
arpl
inc
pop
pop
ds
popa
shlb
xchg
sub
ficomps
cltd
jg
adc
pop
pop
jne
sysenter
ss
cmpsb
dec
orl
decb
push
pop
jmp
jg
pop
push
pop
add
sbb
add
sti
div
int3
ja
fisubs
pop
lret
stc
add
enter
inc
in
sub
sarl
sbb
jge
loop
and
mov
dec
jp
repz
xor
hlt
dec
xchg
mov
into
sbb
dec
inc
mov
jnp
aad
adc
pushf
xor
int
xchg
xchg
push
and
and
adc
js
xor
in
call
jbe
repz
lods
jne
into
inc
push
add
repz
jge
mov
shll
sahf
mov
push
movsl
sbb
loopne
dec
xchg
sub
mov
scas
cld
xchg
out
ljmp
aaa
xchg
cltd
mov
sub
mov
sbb
test
enter
ja
xchg
scas
mov
and
subb
or
addr16
pop
aad
cld
mov
xchg
sub
leave
nop
mov
scas
sti
mov
or
ss
adc
mov
scas
pop
sbb
lcall
xor
mov
cmp
stos
lahf
les
fnstsw
shll
pusha
test
test
xchg
xchg
dec
adc
dec
les
subb
jecxz
test
fdivrl
push
popf
cmpsb
mov
inc
cwtl
cmp
dec
outsl
adc
stos
xchg
int
aaa
and
scas
pop
dec
dec
insb
jnp
xchg
hlt
jne
mov
and
jmp
pop
or
ja,pn
sub
or
pop
shl
sti
xchg
adc
cmpb
scas
pushf
sbb
sub
jecxz
mov
xchg
fcoml
stos
outsl
rorl
stc
ds
jns
jb
or
lret
inc
enter
jl
pop
xchg
rcrb
mov
test
out
inc
inc
sub
or
fistl
inc
sub
sbb
out
stos
shl
push
lock
or
in
fisubl
adc
mov
pushf
push
add
ja
test
pop
adc
sahf
xor
and
lds
ja
or
mov
pop
in
subl
inc
icebp
lahf
sti
mov
mov
xchg
lea
mov
arpl
jle
sbbb
xchg
dec
clc
cmp
xchg
cld
pusha
adc
aaa
arpl
insl
jb
sbb
test
scas
nop
ds
mov
cs
sbb
ja
fucom
sbb
lods
nop
xor
mov
mov
ret
or
fucomip
push
and
cmp
sbbb
pop
std
mov
mov
cli
xchg
push
mov
repnz
sbb
push
mov
push
mov
or
and
jge
fildll
and
cmpsl
jnp
pop
push
rcl
andb
pop
or
mov
dec
scas
imul
andb
ja
gs
cwtl
mov
mov
sahf
ret
push
and
mov
andb
lods
into
jge
mov
test
data16
fcmovne
jecxz
gs
pushf
dec
dec
sub
ds
mov
xchg
xor
dec
adc
imul
adc
jmp
xor
test
sbb
inc
pushf
sub
xchg
ds
dec
repnz
jp
ss
andb
xchg
inc
ds
pop
pop
sbb
arpl
cmpsb
sbb
movsb
lret
pop
setp
fisubl
push
ds
aad
or
sti
arpl
push
jp
xchg
xor
xlat
imul
sbb
jnp
popa
stc
lock
out
inc
fisubs
aaa
out
pop
mov
fidivl
in
outsb
subl
fbld
jle
es
negl
jnp
mov
lods
outsl
pop
in
and
jo
int
mov
jle
mov
pusha
inc
stc
xchg
inc
sbb
insl
popf
mov
mov
lret
pusha
mov
push
sbb
jp
and
mov
outsl
inc
scas
nop
imul
pop
cmp
mov
jl
out
mov
adcb
and
roll
pop
jno
dec
outsl
xorl
getsec
cld
ret
jae
fsubrs
aam
jae
int
pop
xorb
dec
fs
mov
inc
test
lds
fnstcw
repnz
cmp
gs
sbb
out
sbb
mov
ret
pop
xor
adc
xor
loop
or
inc
mov
sub
mov
jnp
dec
mov
or
xlat
jmp
push
xchg
repz
ret
lods
in
lahf
insl
mov
scas
popa
sbb
inc
xorl
shll
cld
fs
push
xor
pop
sub
push
adc
or
xchg
movsl
mov
je
xor
in
data16
inc
mov
xchg
mov
pop
cs
bound
mov
mov
mov
mov
sbb
sub
jbe
xlat
xchg
nop
cmp
mov
add
pop
mov
shrb
aam
push
sbb
fchs
add
xchg
jo
jp
daa
scas
aam
fsubrl
sbb
imul
lds
or
in
je
out
aad
loope
ret
aas
vmwrite
fistl
inc
mov
dec
push
icebp
push
int3
out
cli
testl
dec
xchg
testb
cmp
hlt
movsb
xchg
and
sti
and
fistl
fldln2
enter
rcl
ljmp
out
je
mov
iret
sub
inc
int
xor
jno
inc
sub
insb
mov
push
in
fildll
cmp
into
push
mov
jb
sbb
xchg
inc
push
xchg
cmp
pop
cmp
and
pop
lret
movsb
stc
mov
cmp
aaa
xlat
popf
int
mov
cmp
shll
sbb
clc
and
xor
mov
mov
fidivs
sbb
cmp
xor
mov
jp
push
hlt
mov
addr16
cmc
insl
sbb
mov
cmp
or
cmp
scas
dec
xor
fs
out
push
inc
lds
cltd
out
push
jae
jo
dec
add
lret
outsl
xchg
ret
sbb
mov
and
leave
in
in
ja
fs
mov
popa
addb
push
add
dec
xor
and
popa
enter
adc
adc
dec
jb
push
gs
xchg
pop
std
data16
aam
aad
mov
sub
out
lret
sbb
and
outsl
pop
adc
scas
test
add
outsb
pop
or
fidivs
aam
out
mov
mov
xor
xlat
mov
dec
mov
mov
push
or
push
mov
xchg
cmovs
in
incb
sbb
jne
sti
or
mov
addb
or
xchg
enter
jle
fiaddl
loopne,pt
sub
jp
mov
call
add
ret
push
ja
clc
or
and
pop
or
jl
and
outsb
cmp
mov
stc
sbb
and
xchg
mov
push
and
cmp
jmp
dec
sbb
sbb
test
and
xchg
and
dec
out
mov
shll
sbb
ljmp
push
adc
pop
rclb
jg
andl
inc
mov
sbb
pop
setb
mov
mov
int
int
cmp
pop
push
mov
jae
xchg
fcomps
pop
mov
push
or
push
jbe
loopne
adc
inc
ja
dec
add
stos
inc
cs
into
and
jno
negl
lds
sub
add
stc
inc
repz
loope
imul
rclb
mov
cmc
mov
enter
push
insb
push
test
pop
addr16
cmpl
xlat
in
xor
outsb
lods
in
imul
cli
insb
sub
cmc
movsl
dec
test
repnz
and
cmpsl
test
int3
mov
arpl
jns
sbb
and
cmp
fmuls
inc
sti
xor
into
adcl
iret
in
out
and
popf
mov
sub
add
lcall
adc
push
jmp
lods
mov
lcall
mov
sub
aaa
jl
mov
dec
stos
test
ja
jge
dec
lahf
stc
pop
jb
jo
fdivr
add
jg
pop
repnz
mov
gs
jmp
dec
add
into
mov
hlt
inc
addb
arpl
movsl
sti
mov
idivb
jae
aad
fcoms
jg
lret
hlt
mov
leave
paddsb
lahf
push
daa
dec
sub
arpl
int
outsl
hlt
pop
mov
lahf
lcall
add
cmp
adc
pop
sbb
and
iret
push
mov
data16
inc
insb
xchg
or
test
sub
das
js
lret
xchg
sahf
dec
cmp
fsts
fdivr
jne
or
xor
jecxz
push
stos
mov
out
jne
std
ljmp
cmp
dec
mov
cwtl
cmc
inc
cmp
pop
aam
arpl
xchg
mov
roll
scas
out
movsl
inc
out
cmp
movsb
fcmovnb
dec
mov
je
icebp
mov
cltd
pop
rorb
dec
and
test
lret
inc
fisubl
or
mov
sbb
pop
fnstsw
movsb
dec
dec
adc
jp
sbbb
cmp
test
cld
jp
sarl
sub
push
push
mov
fnsave
xchg
mov
ficoml
inc
pop
icebp
inc
push
push
insb
mov
pop
pop
dec
ror
scas
dec
push
xchg
jae
xor
push
int
leave
mov
aas
addr16
inc
and
mov
cmpsb
stos
sbb
adc
mov
xor
daa
pop
into
xor
xchg
nop
shl
sub
or
popf
hlt
jmp
imul
push
jge
sub
out
sub
shll
daa
enter
jecxz
mov
mov
fwait
add
iret
mov
mov
pop
sbb
outsl
sti
jno
hlt
mov
cmpsb
fbstp
ror
push
insb
repz
ret
ret
xor
jnp
sarl
loopne
xchg
movsb
mov
jmp
pop
cmp
or
daa
rol
mov
xchg
jns
arpl
daa
aaa
add
ljmp
lds
movsb
and
xlat
daa
clc
mov
xor
es
lret
add
loop
mov
jmp
adc
sbb
xchg
mov
sbb
or
add
push
push
inc
adc
xchg
pop
imul
lahf
iret
daa
in
xchg
lds
insl
fwait
pop
pusha
sub
jbe
xor
mov
inc
push
inc
outsl
sbb
ror
mov
mov
sub
mov
cmpb
pushf
xchg
mov
js
out
vpavgb
aad
and
adc
pop
and
or
shll
and
sbb
jnp
cmp
repz
lods
xchg
jbe
lods
out
movsb
out
rcl
fwait
jge
dec
jge
cltd
insb
sub
nop
fidivrl
adc
daa
jg
mov
in
leave
jae
pushf
test
loopne
pusha
mov
icebp
fisubl
lods
insb
inc
mov
fcmovb
mov
in
insb
mov
push
sub
inc
inc
repz
test
cld
add
sarl
lret
and
in
dec
adc
sbb
xchg
fs
add
loopne
js
pop
jne
ss
jmp
jns
in
aam
cs
imul
ss
aam
imull
fdiv
cmc
adc
dec
push
add
dec
adc
insl
sbb
cmc
cmpsl
mov
aam
nop
sbb
cmp
out
push
ja
js
call
push
in
cmp
scas
pop
shll
push
cmp
push
mov
mov
add
mov
push
cmp
lods
jecxz
icebp
mov
jmp
cmp
add
sub
and
les
cmp
xor
jb
pop
lret
in
movsb
inc
pop
or
mov
jge
orb
fiaddl
push
xorb
dec
mov
xchg
adc
inc
int3
test
shl
mov
jl
cli
sbbl
fbstp
lret
push
mov
mov
movsb
out
mov
fldt
fidivl
sbb
xchg
push
and
or
add
nop
mov
jge
fnstsw
add
imul
adc
adc
std
mov
ss
mov
das
jp
jne
ss
loopne
lds
inc
js
xchg
jecxz
pop
and
xchg
fwait
add
rep
or
mov
adc
out
add
pop
sahf
cwtl
cmp
scas
popa
nop
pop
sarb
pop
std
in
ret
push
movsl
lock
mov
or
popf
xchg
adcl
jbe
ja
hlt
push
fstl
out
lods
sbbb
lret
shrl
mov
mov
mov
pop
pop
sbb
jns
addb
out
jne
or
pop
cmp
pop
xrelease
cld
pop
test
xor
mov
jmp
jecxz
mov
push
mov
sbbl
sbb
adc
pop
push
dec
dec
add
jae
sbb
mov
loope
mov
pop
adc
sbb
xchg
add
add
inc
outsb
cmp
insl
icebp
popf
cmp
jae
clc
push
jecxz
pop
add
repnz
popa
xor
dec
sahf
gs
lret
mov
mov
dec
lret
mov
in
cmp
jle
jo
add
pop
or
lds
add
and
iret
inc
shlb
xchg
add
movsl
inc
fsubrl
inc
lcall
xchg
mov
out
adc
sbb
data16
insl
dec
mov
and
leave
insl
fiaddl
clc
and
cmpsl
in
into
leave
cmp
push
int3
add
adc
add
mov
push
xchg
mov
cmpsb
cmpl
mov
sti
xor
in
mov
outsl
or
jle
ficoml
adc
ds
incl
bound
cs
mov
mov
and
movsl
mov
scas
test
xchg
pusha
mov
sarl
jb
hlt
inc
fisttpl
adc
stc
or
leave
or
sahf
in
push
add
sarb
in
adc
push
jg
jb
cwtl
jb
fnsave
inc
mov
rcrl
sti
popf
jmp
xor
inc
add
loope
mov
sbb
fadds
cwtl
sbb
scas
jge
mov
sub
sbb
xchg
sub
dec
pop
in
loopne
cmp
clc
or
ljmp
imul
icebp
iret
push
psrad
psraw
sub
ds
xchg
mov
and
loope
or
jnp
push
cmp
pop
fdivrl
inc
fwait
lods
add
inc
mov
popf
jle
jl
sarb
cmp
or
jmp
xchg
push
lahf
dec
out
mov
aaa
or
loopne
jmp
andl
mov
mov
cmpsl
outsl
adc
sbb
mov
fisttps
adc
fadds
leave
cmp
sti
int3
faddp
sub
fbstp
ret
mov
hlt
lock
stos
add
pop
xor
cmp
sarl
int
fnstsw
mov
mov
das
mov
fnstsw
outsl
in
ffree
adc
inc
es
jge
and
lds
inc
and
xchg
dec
es
push
daa
dec
int3
cmp
aad
mov
shlb
into
mov
fstps
mov
je
fldt
cmp
inc
mov
loope
bound
adc
push
push
mov
js
lock
mov
inc
add
mov
inc
mov
jecxz
mov
add
aas
outsl
enter
cltd
dec
lea
aam
add
adc
repz
mov
jae
or
test
movsb
aad
mov
inc
jns
add
push
scas
jp
mov
sub
inc
mov
hlt
addr16
jmp
aam
xchg
push
or
cld
mov
pop
fwait
push
mov
and
inc
mov
or
inc
bts
scas
fcmove
sub
cmp
xor
or
sub
test
mov
mov
pusha
es
sbb
mov
xchg
scas
pop
sti
xchg
cli
cli
out
incb
rcrl
xor
xchg
pop
loope
xor
shll
pop
repnz
dec
adc
sub
leave
pop
mov
ja
shll
repz
sti
jae
dec
addr16
pop
xor
pop
in
out
sbbb
enter
sub
pop
mov
fwait
mov
add
and
rclb
cltd
mov
jne
adc
data16
cltd
fidivrl
out
and
sub
insb
es
out
ss
in
in
inc
pop
out
in
xchg
mov
bound
jp
jle
xor
and
jp
mov
jns
inc
testb
adc
aad
ret
pop
xchg
inc
inc
les
dec
add
mov
subb
mov
movsl
and
pop
scas
sbb
daa
aas
insb
aas
cmp
mov
push
nop
add
push
jmp
sbb
cmp
jno
dec
in
lret
or
nop
out
mov
mov
loope
mov
std
cmp
sbb
lret
ret
in
jo
lret
push
inc
mov
mov
mov
pushf
fimull
inc
cld
xchg
and
aam
mov
sahf
xchg
push
fcoml
ljmp
nop
xor
cmpb
sub
or
mov
outsl
push
idivl
addb
cmp
lcall
cmp
movsb
xchg
ret
or
push
and
sub
and
push
lods
or
sub
incb
ds
jae
push
in
add
xor
or
or
cmpb
dec
shlb
repz
and
addr16
test
ret
inc
imul
push
xchg
or
pop
adc
cltd
mull
add
sar
dec
stos
inc
adc
pop
fiadds
xor
xchg
shlb
fsubrl
mov
stos
add
pusha
dec
xor
daa
nop
stc
jo
stos
xchg
adc
imul
hlt
int
in
add
movsb
scas
inc
test
lods
pop
jmp
xchg
in
fists
push
in
daa
cmp
iret
sub
ja
xchg
add
jl
insl
shrl
dec
or
sti
jo
cmp
sub
jne
push
lds
test
addl
std
adc
cmp
add
rclb
nop
scas
inc
cmpb
daa
mov
push
or
push
push
xchg
ret
sub
es
ror
cmp
xlat
jl
push
mov
dec
loop
jmp
add
jbe
pop
lahf
jp
dec
cmp
insl
addl
outsb
stos
mov
xlat
push
cmc
mov
xor
push
sub
or
sub
call
dec
jns
add
sbb
leave
push
lea
out
dec
push
orl
add
xchg
mov
push
test
in
out
adc
cwtl
cmp
ror
inc
out
xor
scas
pop
nop
jl
addr16
xor
lahf
cmpsb
adc
dec
pop
jecxz
jl
and
sub
outsl
pushf
inc
xchg
and
lods
adcb
sahf
xchg
mov
add
inc
push
cmpsl
ds
popf
shl
inc
xchg
jle
insb
or
popa
test
aas
pusha
add
pop
ror
or
lret
pop
pop
movsl
lods
lahf
sbb
pop
ror
lahf
add
les
and
push
pop
out
stos
aam
push
adc
mov
pop
jle
test
imul
in
sbb
or
mov
dec
pop
adc
dec
mov
mov
adc
cmp
out
pop
rorb
popf
cs
xchg
inc
jb
sbb
jbe
loop
cltd
inc
js
inc
add
or
test
fs
popa
aas
jbe
jecxz
sbb
sti
pop
xchg
test
cmp
aaa
ficomps
xor
pop
imul
call
pop
insb
mov
jg
in
inc
mov
adc
sbb
ficoml
push
aam
pop
lcall
xor
repnz
push
push
movsb
push
add
arpl
repz
es
mov
push
pushf
inc
sub
lahf
out
call
rorl
mov
insb
xor
adc
test
lret
cs
enter
loope
fs
inc
add
push
icebp
add
sub
les
lea
cld
sub
cs
imul
fbld
std
jmp
sub
xchg
int3
xchg
cwtl
xor
fnstsw
gs
pop
sbb
icebp
dec
push
jl
icebp
lea
hlt
sbb
mov
xor
sub
xor
imul
je,pt
adc
test
cltd
stc
sub
fisubs
mov
mov
and
adc
out
xor
imul
js
icebp
dec
xor
outsb
sub
aad
inc
cmc
pop
stos
adc
inc
sti
aas
stos
pushf
dec
xchg
cmpsb
popf
dec
jb
mov
push
shll
xchg
pop
aad
lock
sub
sbb
push
mov
push
jb
xchg
dec
sub
and
cmp
jo
push
outsl
insb
pop
or
and
fwait
clc
out
sub
cmp
cmpsb
out
inc
pusha
cmp
push
cmp
xchg
dec
jno
add
nop
cmp
inc
stos
dec
jp
es
mov
push
add
mov
lcall
sbb
mov
lcall
imul
push
aaa
or
pushf
sub
add
dec
test
lahf
mov
shll
mov
jno
fcmovnbe
jb
pop
cmc
cmp
lock
xchg
dec
loope
loope
jne
fst
add
imul
dec
jp
cmp
stc
lock
push
fnstcw
dec
pushf
sbbl
scas
dec
enter
mov
cmp
inc
fnstsw
ret
jmp
sbb
dec
mov
jg
dec
sahf
jecxz
dec
mov
cmp
loopne
stos
das
xchg
lds
gs
fsubs
iret
mov
lods
xor
cwtl
pop
cmpb
or
jmp
leavew
xchg
ret
ljmp
bound
scas
jmp
mov
xchg
cmp
mov
mov
std
push
cltd
addr16
inc
add
cmp
and
cmp
out
inc
push
je
std
pop
jo
aaa
jb
ret
mov
scas
push
iret
mov
pop
push
and
xchg
jns
test
je
jno
nop
stc
scas
int
out
push
cmp
or
loop
insb
xchg
xchg
sbbb
add
mov
andb
sbbl
or
pop
out
inc
mov
xor
push
pushf
sbb
in
push
mov
int
or
mov
js
fcoms
inc
jmp
test
push
jecxz
jg
and
repz
adc
push
fnsave
push
jne
or
out
out
cli
lea
or
fmull
pop
jp
sub
lods
adc
sbb
call
jmp
or
mov
iret
sahf
xor
cwtl
push
push
mov
mov
fisttpl
gs
cmp
sub
lcall
imul
addr16
lock
mov
pop
inc
dec
add
inc
pop
sub
mov
in
in
iret
out
jmp
gs
ja
cltd
insl
dec
int
inc
enter
inc
xlat
sub
fmull
popa
sub
in
into
sub
dec
popf
ljmp
xor
adc
call
inc
testb
hlt
jp
clc
mov
mov
aad
sbb
enter
pop
fxch
inc
lea
lret
sub
mov
scas
cmp
xlat
pop
push
call
add
aas
jno
inc
test
mov
shrb
cmp
data16
out
dec
lds
and
into
push
lock
fwait
and
sbb
xchg
shlb
test
or
mov
sbb
es
int3
dec
ret
loop
dec
pop
cwtl
popa
xor
mov
dec
out
push
push
sbb
pop
mov
je
mov
jecxz
jp
jp
inc
fidivl
mov
js
jb
addr16
mov
xchg
push
icebp
stc
adc
and
jne
push
and
es
add
ret
fs
xor
add
dec
mov
inc
jae
and
aas
popa
dec
and
dec
xor
out
jae
aaa
jge
mov
mov
andl
aad
mov
push
jno
mov
xchg
pop
gs
mov
in
pop
pushw
inc
int3
mov
cs
cmpsb
adc
sub
adc
lock
mov
push
sbb
jnp
outsl
aaa
add
cmpsb
mov
lcall
call
scas
push
cli
push
jmp
aam
and
outsb
jle
mov
rol
outsl
cld
jne
in
and
mov
mov
insl
or
mov
bound
jne
pop
xor
int3
dec
add
push
mov
leave
add
movsb
dec
fisubl
test
iret
aas
scas
adc
dec
dec
fisttpll
and
stc
push
push
insl
or
pusha
adc
test
adc
inc
cmp
adcl
repnz
push
jnp
cmp
xor
sub
xor
lock
rcrb
outsl
push
inc
jl
lret
iret
incl
sbb
testb
add
xlat
jae
dec
repnz
or
subl
cs
dec
out
pop
es
dec
inc
dec
cmpsl
mov
in
lods
push
or
push
pop
lret
and
mov
xchg
out
jle
insl
mov
ret
sbb
or
fcoms
rorl
cmpb
xchg
bound
adc
ja
sahf
sub
lock
roll
pop
ffree
mov
es
ss
xor
mov
push
outsl
pop
dec
cmp
movsl
lret
dec
sbb
sahf
cmp
loop
mov
lds
cli
and
stc
rorl
ss
ficoms
cmp
nop
iret
and
addr16
sbb
mov
imul
xchg
pop
mov
fs
sbbl
adc
repnz
out
lret
fildll
mov
std
cwtl
mov
and
movsb
shl
mov
stos
sub
imul
loop
and
cmpb
int3
out
cmpsb
dec
sub
lds
shll
scas
stc
mov
fistl
adc
cmp
xchg
in
lods
jp
ret
pusha
data16
repz
repz
cmpsl
inc
jns
jne
inc
sahf
repz
and
pop
nop
xchg
icebp
cld
xor
jg
cmp
mov
push
dec
test
sbb
repz
mov
lahf
xor
mov
lock
lea
shr
cmpsb
mov
inc
pop
pusha
test
inc
daa
loopne
cmp
out
lcall
xchg
pop
add
lea
xor
es
daa
mov
mov
rcl
lret
cmp
fst
cltd
push
mov
push
movsl
insb
xchg
add
jae
std
sahf
fdivrs
aam
enter
jle
or
pop
and
jne
dec
je
rcll
cmp
add
test
outsb
loope
push
imul
jns
daa
push
inc
and
pop
loope
pop
cmp
jecxz
mov
fidivs
sub
jns
mov
sub
scas
add
icebp
hlt
dec
fmul
xlat
cmp
notl
or
dec
inc
push
and
mov
mov
aas
xchg
jo
jns
pop
push
test
test
aam
and
xchg
call
inc
fucomip
mov
and
sti
cmc
fdivrs
sbb
pop
dec
repz
loopne
jle
insb
adc
pop
stc
and
lcall
mov
loopne
sub
pop
ss
or
and
xchg
mov
test
push
mov
push
add
push
sarb
xchg
adc
dec
xchg
cmpps
mov
pop
push
fsubl
adc
cli
sub
cwtl
cmpb
jne
cmpsb
shlb
xchg
sbb
int3
out
or
inc
mov
movsb
xor
mov
insl
out
rorb
popa
arpl
icebp
sbb
outsl
fistpl
add
xlat
imull
orb
push
jo
inc
hlt
test
jnp
int
push
das
mov
pop
add
pop
jle
fnsave
sti
arpl
pop
jg
pop
data16
ror
and
add
jne
sub
mov
popf
stc
jl
ljmp
adc
dec
fnsave
inc
fcoms
test
ja
mov
rclb
push
movsl
xor
or
movsl
movl
inc
popa
sbb
ljmp
sub
test
mov
lret
adc
jecxz
inc
pusha
xchg
add
inc
inc
xchg
imul
pop
pushf
repnz
inc
mov
sub
sbb
xchg
out
insb
imull
cmp
rclb
hlt
jne
jecxz
sahf
or
enter
jae
mov
sahf
lahf
pop
enter
lea
lahf
jnp
sub
stc
pop
lods
or
mov
pop
inc
sarb
xor
cld
pop
cmpb
mov
jae
pop
mov
pop
push
insb
jmp
mov
jg
and
out
lcall
jns
es
icebp
xchg
ret
jae
stos
adc
xchg
and
outsl
lcall
sbb
movsl
or
pop
pop
xchg
cmp
push
lret
aas
in
adc
out
int3
xchg
mov
dec
mov
dec
add
sub
movsb
xchg
in
repnz
idivl
xchg
daa
lock
stos
in
adc
and
jnp
cmpsb
loope
pop
lods
test
outsb
shl
cmpb
test
mov
shrb
mov
add
inc
out
mov
fsubrs
push
or
inc
imul
pop
movsb
xchg
add
lahf
cltd
mov
jne
cmpsl
xchg
in
mov
lds
inc
push
jmp
sbb
add
mov
fisttpll
cltd
es
xchg
daa
pop
gs
mov
sub
insl
pop
ja
aaa
aas
cmp
pop
lds
push
rorb
lods
fs
mov
sbb
repz
pop
cmp
xorl
mov
sbb
fidivl
mov
xchg
or
sub
mov
movsb
xchg
mov
cmpsl
dec
add
xor
sbb
insl
insb
icebp
mov
test
sbb
ret
sub
mov
pop
iret
in
stos
cmp
pop
rcrl
lock
inc
inc
sti
sbb
mov
mov
inc
dec
test
xor
sub
add
jmp
or
imull
sub
mov
lret
orb
adc
xor
loop
stc
and
scas
or
jp
cmp
mov
lea
test
xchg
add
dec
push
aad
push
outsl
cld
lret
ja
mov
rorb
add
and
sahf
cmp
xchg
jl
aaa
cmp
mov
dec
shrb
mov
scas
je
out
cli
cmp
mov
into
adc
and
js
mov
dec
scas
andl
lret
add
or
gs
pushf
inc
pop
daa
or
loope
std
dec
enter
popf
sub
test
fimuls
mov
dec
int3
and
inc
sub
xchg
push
lea
cmp
in
int
xchg
out
sbb
xchg
xor
enter
inc
clc
arpl
stos
popa
orl
lock
jmp
addr16
and
add
lods
stos
mov
and
dec
dec
lods
adc
jle
enter
xchg
sti
bound
xchg
cli
cmc
xor
jle
jae
add
mov
or
jno
ss
dec
rol
repnz
cmp
jmp
push
sub
test
mov
shlb
dec
stos
sarb
mov
out
std
int3
lods
fisubs
mov
dec
adc
mov
hlt
stc
or
dec
addr16
insl
les
mov
push
push
negl
or
xchg
outsl
call
push
pop
mov
lcall
jb
sbb
xchg
rcl
xchg
insb
ret
sub
pop
xor
mov
repnz
ja
nopl
xor
or
fwait
movsl
fdivrs
dec
xchg
neg
or
scas
mov
in
dec
xlat
popa
xorl
fbstp
or
das
pop
xor
pop
mov
push
cmpsl
pushf
sub
jns
loop
sbb
mov
pop
imul
xor
daa
push
jp
xchg
inc
fsubrp
push
dec
adc
popf
test
ds
add
mov
orb
and
mov
mov
and
adc
cwtl
dec
stos
pop
inc
mov
fs
lods
mov
jl
into
add
add
and
mov
pop
jb
arpl
add
inc
xor
sub
pop
dec
lods
mov
mov
cmp
outsb
or
das
outsl
mov
rolb
cmp
fdivrs
pop
sbb
add
xchg
scas
fucomp
inc
icebp
mov
outsb
insl
jg,pt
sbbl
mov
xchg
addb
stos
ret
lock
cmpsl
and
bound
pop
in
sbb
xor
xchg
push
mov
sar
scas
cwtl
xchg
dec
xlat
sbb
lods
push
neg
adc
sbb
test
ss
ror
into
adc
int3
mov
shll
push
push
adc
add
jno
and
insl
add
movsl
and
fucom
lods
mov
lahf
out
je
cli
mov
xchg
roll
dec
into
dec
xor
adc
jge
mov
das
das
or
cmpsb
dec
ret
mov
mov
push
daa
cmp
mov
add
inc
sub
in
or
inc
sti
lret
sbb
dec
jns
pop
or
push
shll
push
add
jbe
imul
adc
jno
xor
addr16
cmp
stos
cmp
movq
rcrl
dec
jecxz
je
mov
sub
sbb
push
dec
push
sbb
sub
in
mov
pop
lcall
out
repz
mov
mov
jmp
mov
sti
insl
shrl
push
mov
xor
in
rcr
int
int3
lret
xchg
ja
push
adc
addr16
mov
js
mov
add
inc
and
pop
pop
push
negb
into
and
inc
dec
mov
cmp
push
xchg
sti
jmp
sub
jo
jl
mov
mov
bound
std
pop
das
push
or
sbb
hlt
pusha
pop
loop
mov
pop
sub
mov
jge
lea
test
lock
mov
and
clc
gs
subb
push
pushf
imul
jns
mov
jmp
add
leave
push
stos
sub
popf
add
aad
lret
dec
sub
inc
ret
aad
jae
sub
sbb
and
stc
fmulp
mov
mov
jp
pop
bound
push
dec
and
lds
push
or
mov
push
hlt
hlt
pop
cmp
icebp
icebp
out
aam
popa
push
pushf
cmc
xor
sbb
cmp
lret
jmp
ss
xchg
mov
dec
das
out
push
insl
dec
cmpsb
sub
jl
dec
sbb
fisubl
and
xchg
jne
repnz
xor
cld
push
in
jg
repnz
cmpsb
sbb
add
outsb
movsb
stos
mov
inc
rclb
adc
lds
clc
outsb
pop
flds
sbb
stos
in
mov
gs
test
fucomip
push
ret
mov
inc
adc
push
add
cmc
mov
push
add
jle
pop
sbb
aas
add
dec
jle
push
scas
mov
repnz
pop
je
stos
daa
bswap
jmp
xchg
mov
ss
test
pop
fstl
mov
shl
fists
sub
lret
or
ss
cmpsl
imul
mov
add
test
sbb
mov
aam
xchg
fsubp
adc
cmp
jmp
push
or
fimuls
xchg
jne
popa
cltd
adc
inc
in
out
cs
jp
sub
cmp
sbb
or
ljmp
jmp
aam
stos
outsl
loopne
mov
push
fsubrs
cmp
sub
negl
mov
or
inc
mov
jbe
jno
in
pop
and
add
and
and
sub
and
dec
aaa
xchg
sbb
mov
shl
xchg
cmpsb
pop
loope
popf
lods
test
lea
adc
iret
int3
lahf
pusha
add
out
inc
ds
lods
sbb
dec
filds
jg
in
and
xchg
ss
dec
bound
push
xchg
inc
mov
mov
cli
adc
arpl
popf
in
mov
fwait
in
mov
xor
or
sbb
inc
push
out
shr
pop
inc
imul
call
outsl
sbb
or
push
dec
jb
cmpl
jecxz
add
fs
mov
hlt
add
jae
aaa
and
xor
jne
xor
or
sahf
sbb
repz
notb
jae
jmp
data16
jecxz
jnp
out
into
sub
das
call
fldl
and
repnz
xlat
mov
add
fwait
es
jb
xor
mov
push
push
xor
shlb
fwait
aam
int3
cmpl
data16
push
push
mov
and
mov
ljmp
jle
pop
jl
fmuls
sbb
mov
mov
xchg
fdivrs
xor
jecxz
or
mov
cmp
xchg
fildll
pop
scas
mov
andl
aam
push
sub
pushl
and
adc
push
adc
roll
mov
scas
pop
inc
mov
or
xchg
fsts
lock
adc
sbb
xchg
cmp
dec
jp
je
arpl
add
data16
push
aad
int3
subl
pop
xor
push
fnsave
sub
push
lret
or
mov
xorl
mulb
sbb
das
shlb
jg
mov
adc
push
iret
stc
cmp
fcompl
xor
sti
sub
jno
aas
xor
imul
fistl
pop
jecxz
jbe
mov
shlb
adc
les
fucom
bound
in
jg
xor
testl
adc
adc
roll
ret
mov
mov
or
mov
cld
jmp
lea
push
cmp
pushf
pop
inc
push
lahf
xchg
jns
cmp
sub
js
sbb
ror
int3
clc
hlt
xorb
mov
add
xor
pop
sub
dec
int
mov
mov
sub
sbb
mov
and
sub
dec
rol
fidivrs
xchg
adcl
pop
jae
jb
push
sbb
in
mov
cmp
mov
mov
fcomip
outsb
fwait
sbb
sbb
cwtl
mov
pop
cwtl
xchg
jl
pop
inc
push
fisubrl
fildl
imul
cli
cmpsl
loop
pusha
mov
pop
dec
dec
jge
fsubs
pop
jno
in
push
mov
mov
adc
pop
pop
mov
jo
mov
mov
lds
das
stc
cmpsl
loop
cltd
mov
popa
fwait
pusha
std
vpmadcswd
and
out
outsl
adc
sbb
cs
subl
mov
xchg
push
jb
add
add
aad
in
ja
xchg
mov
lahf
sbb
mov
mov
outsl
push
jne
adc
mov
scas
or
pushf
or
incl
aas
mov
and
insb
pop
in
dec
sub
xchg
push
lahf
mov
in
movsb
mov
rol
adc
ja
ja
andb
xchg
jo
cmp
mov
mov
scas
mov
mov
xor
or
cmpsl
pop
lds
inc
mov
in
aas
mov
adc
lahf
cmpsb
lock
dec
mov
stc
cmp
jnp
fs
movl
add
sbb
lds
in
jmp
and
stc
bound
xor
stos
ret
cmp
fsubrp
add
mov
arpl
in
mov
xor
test
xchg
inc
push
adc
out
push
sahf
mov
xorl
cltd
inc
aaa
and
stc
ja
or
es
pushf
roll
rcl
push
jbe
outsl
repz
add
jecxz
push
mov
xor
sbb
and
js
mov
jae
mov
xchg
repz
stos
pop
daa
sbb
pushf
fwait
dec
and
mov
jno
add
scas
repz
mov
sub
cs
mov
fwait
aas
push
aas
out
fs
mov
movsb
cmp
sub
outsb
pop
out
pop
inc
js
fsubs
out
fidivs
notb
out
lret
mov
testb
enter
stos
push
flds
pop
mov
cmc
sub
xor
inc
push
notb
in
inc
cli
jg
in
hlt
push
cs
sub
das
dec
loop
inc
or
outsl
sbb
xchg
subb
and
test
out
cmp
out
adc
ficompl
cmp
mov
sbb
aam
notb
mov
stos
dec
sub
adc
cs
cld
arpl
jecxz
outsb
jnp
jnp
inc
dec
std
rcr
pop
dec
and
addb
enter
adcb
adc
scas
popf
or
or
mov
cld
mov
popa
addl
ja
outsl
or
pop
cltd
les
lods
mov
incb
gs
dec
xlat
adc
mov
or
pop
mov
jge
ljmp
rcrl
mov
sub
xchg
shrl
inc
jnp
mov
gs
sub
adc
mov
outsb
push
adc
pusha
dec
and
loopne
lods
mov
adc
xchg
fisttpll
jne
sbb
pop
lods
push
fsubs
sub
ja
cmp
lahf
sbb
mov
inc
sub
loop
or
jle
aaa
dec
dec
jle
inc
stc
imull
outsb
inc
adc
push
scas
aaa
popf
ret
inc
cmpsb
iret
pop
cltd
mov
mov
and
jg
adc
stos
cwtl
ja,pt
lcall
xor
lock
mov
test
push
ret
sahf
cmp
pop
mov
fs
xchg
cmp
xchg
jle
lahf
int
add
add
mov
xchg
mull
out
out
into
or
pop
and
aad
mov
and
mov
shr
xchg
push
mov
cmp
adcl
add
pushw
jp
dec
mov
icebp
add
cmovae
mov
add
dec
jo
aad
fwait
cmpb
fistl
movsl
push
aas
mov
push
xchg
and
cmp
int3
pop
sarl
xlat
fiadds
adc
dec
call
inc
mov
dec
adc
adc
sar
insl
sbb
les
sbb
adc
pop
scas
into
jns
dec
jp
nop
sbb
sti
pop
xchg
jp
pop
xor
cs
imul
push
mov
xor
push
pop
xor
idiv
push
out
xor
pop
mov
scas
in
or
sar
repz
scas
jl
inc
outsl
xchg
add
adc
inc
js,pn
pop
data16
out
icebp
cld
push
fistl
subl
outsb
mov
fbld
cld
in
dec
fldpi
fprem
daa
or
int
scas
outsb
movsb
mov
mov
sbb
out
xchg
addl
pushf
pop
test
aaa
push
add
ja
popf
mov
adc
mov
je
sarb
jecxz
xchg
insb
loope
xchg
loop
inc
aam
flds
sbbl
stos
cltd
insb
les
jno
cmp
out
pop
sti
dec
aas
jle
xchg
dec
jno
and
pop
repz
les
jo
jg
mov
mov
adc
out
xchg
sub
stos
dec
mov
mov
cmp
enter
jl
enter
lock
cmpb
clc
js
mov
out
sbb
jmp
in
xchg
shrb
subl
ret
sahf
stc
std
sbb
xlat
loope
and
sub
mov
ficomps
xor
adcl
lds
nop
push
pop
cmpsb
or
insl
pop
pop
adc
mov
inc
ljmp
adc
mov
enter
jp
pop
cmp
pop
dec
or
mov
ljmp
mov
stc
stos
push
mov
mov
lret
ret
add
adc
cmp
push
movsl
mov
jg
add
sti
mov
test
decb
into
and
loope
mov
cli
and
data16
lcall
in
in
or
inc
pop
push
add
addb
mov
cmp
jecxz
enter
dec
pushf
subb
loopne
loope
sbb
lock
push
push
lret
jns
mov
repz
icebp
sub
call
loopne
dec
test
pop
repz
sarl
popa
mov
or
mov
cmpsl
sbb
movsb
loop
adc
jecxz
ja
and
inc
xor
xor
cwtl
xorps
mov
jb
aas
imul
inc
add
leave
mov
stos
jo
movsl
call
push
push
test
roll
inc
xor
lds
push
cli
leave
pop
js
dec
out
push
add
and
outsl
mov
inc
mov
xchg
aas
mov
jp
js
mov
xchg
jg
jmp
les
mov
adc
jnp
nop
pop
cld
bound
xor
mov
jno
js
lods
ror
adc
stc
out
jae
popa
and
mov
inc
pusha
jmp
push
pusha
cmc
xchg
mov
ja
lock
pop
and
jb
mov
in
outsl
and
mov
xchg
subb
sbb
int
hlt
ret
add
or
mov
lahf
cmpl
lds
jmp
ljmp
movsl
int3
and
loopne
arpl
cmp
je
cmp
cltd
divb
push
sar
jle
sub
outsl
hlt
add
xor
scas
cmp
sub
push
loop
mov
xchg
stc
dec
leave
iret
push
inc
test
jle
in
or
das
mov
add
inc
sarl
sub
pop
lret
sbb
popa
sub
int3
add
sub
iret
imul
sbb
jne
add
cmpsb
push
fimull
push
scas
les
je
and
or
xchg
into
scas
pop
jp
pop
or
jne
mov
push
mov
test
aam
mov
mov
adc
push
and
mov
xchg
ficoml
lea
loopne
mov
aam
dec
dec
cmp
cmpsb
and
pop
and
je
rcl
lahf
sub
dec
movsbl
rorl
mov
iret
jl
pop
or
push
pushl
cmc
daa
stos
in
or
mov
sbb
jbe
insb
mov
aas
xor
cmp
out
movsl
addr16
aaa
cmp
ret
jb
mov
xor
test
cli
and
sub
stc
xor
sub
cwtl
pop
mov
aaa
rolb
add
fsubs
repz
xor
inc
xchg
xor
shlb
in
mov
mov
pop
sub
pop
mul
xlat
xchg
cmc
adc
pop
pop
rep
xor
fcompl
sarb
flds
xor
or
sub
not
imul
adc
divl
add
pop
pop
dec
mov
push
mov
scas
daa
sbb
ds
paddw
xor
std
xchg
mov
stc
jl
dec
cmpsb
xchg
popf
jno
call
scas
mov
fldcw
ss
jbe
out
stos
std
cmpsb
xchg
cmpsb
movsl
pop
inc
je
jne
in
dec
jg
mov
push
push
rep
out
movsl
aaa
int
dec
or
out
lcall
mov
leave
jg
cltd
cld
dec
jl
imul
pop
pop
dec
int
xor
push
pop
inc
in
mov
stos
mov
or
stc
stc
push
js
adc
lea
shll
add
pop
cwtl
repnz
cmp
imul
and
outsb
jbe
jns
inc
rclb
shll
jge
push
and
mov
jecxz
cwtl
frstpm(287
sub
call
cmp
mov
push
out
fidivrl
insl
mov
pop
out
cmp
stos
int
les
fdivl
and
orl
repnz
fsubl
dec
xor
out
xlat
sbb
shll
popa
gs
cmp
add
xor
push
jnp
push
xchg
jnp
in
out
mov
sti
xor
push
repz
lret
icebp
mov
outsl
outsl
sub
mov
sub
lods
movsb
push
push
mov
cld
xor
addl
push
aaa
lods
testb
lods
arpl
insl
mov
xorb
sbb
leave
cwtl
lods
jl
mov
adc
jae
dec
je
xchg
pop
iret
outsl
jmp
jle
aaa
enter
loop
jge
test
lea
cmp
int
mov
mov
cwtl
outsl
outsb
fldt
shll
dec
cmp
mov
pop
addr16
inc
gs
pop
adc
rcrb
ficompl
scas
ss
jmp
scas
mov
mov
sub
sti
scas
add
in
sarb
xchg
stc
jle
sbb
aam
pop
xchg
dec
inc
daa
xchg
loope
and
push
dec
loop
outsb
fdivr
sub
adc
add
out
es
push
scas
inc
out
pop
push
cli
xor
push
cmp
loop
gs
cmp
xchg
je
xor
sub
jo,pt
hlt
out
add
xlat
insl
test
pmaddwd
jmp
divb
adc
xor
and
cmpsb
mov
or
imul
shrb
mov
shrl
gs
sbb
hlt
add
dec
or
nop
js
xor
push
lret
push
and
aam
fs
jmp
repz
add
xchg
push
jge
dec
xchg
les
shlb
loopne
and
pop
lret
int3
les
punpckhwd
int3
mov
and
loop
jg
jl
inc
jecxz
ret
sbb
push
fcomi
fld
dec
or
or
pop
xorl
inc
jno
fwait
or
dec
sti
clc
shlb
loopne
xchg
les
outsl
add
pop
xchg
jae
cmc
imul
and
push
adc
inc
xorb
out
pop
loop
pop
or
mov
arpl
je
mov
stos
inc
mov
aam
shlb
mov
and
dec
pop
rorl
aam
add
push
and
dec
jge
mov
stc
adc
inc
cld
dec
pop
iretw
je
sahf
fcompl
cwtl
sbb
inc
mov
inc
xchg
lahf
add
loop
rclb
ja
cmp
mov
add
sahf
je
fdivrs
cmc
and
aam
fisubrl
daa
jp
pop
pop
xlat
arpl
add
jae
xchg
pop
xchg
bound
adc
mov
pop
gs
in
call
xchg
sub
pop
or
subb
in
lods
mov
push
les
jmp
das
adc
xchg
mov
bound
push
jle
dec
daa
inc
mov
inc
dec
test
lds
popf
adc
mov
shll
mov
negb
jmp
or
mov
movsl
push
push
xchg
push
movb
mov
or
fcomps
mov
sbb
xchg
cmp
cltd
je
mov
iret
and
xor
xchg
inc
pop
pop
and
add
push
lret
xor
fsubr
movsb
ret
push
sbb
mull
je
repnz
mov
mov
adc
mov
es
jae
pushf
cmp
mov
add
test
aam
icebp
inc
imul
pop
mov
push
jge
hlt
add
mov
iret
cli
sub
inc
cmpsl
mov
or
xchg
inc
stos
push
xchg
stc
push
adc
fsubs
or
lahf
aaa
mov
pusha
aad
mov
shlb
jns
pop
xor
test
mov
addb
inc
movsb
jae
jno
jge
pop
pop
xor
lret
push
cli
int
das
int3
in
cmpsb
sub
mov
push
imul
push
inc
push
cltd
lods
sar
pop
adc
inc
xchg
fdiv
dec
mov
cmp
jns
stos
daa
hlt
sub
sub
push
dec
push
out
mov
push
in
fs
push
cmp
ret
in
push
notl
add
pop
jle
dec
icebp
pand
xchg
xchg
jecxz
mov
ds
jbe
in
dec
les
adcl
fldpi
repnz
icebp
nopl
mov
mov
adc
ret
inc
jns
movsb
imul
cmp
jae
and
push
or
jno
xchg
xchg
mov
testb
sbb
imul
push
repz
adc
pop
add
cmp
stos
js
mov
loop
icebp
sub
xchg
sub
dec
or
fld
mov
pop
add
xchg
dec
push
test
push
idivl
pop
lock
setle
jnp
xchg
adc
jne
or
add
test
ja
mov
popf
jno
sub
jno
test
push
data16
adc
repnz
bnd
aaa
cmp
cltd
outsl
test
arpl
cs
adc
sar
les
dec
sbb
cmp
sbb
and
test
cltd
mull
hlt
loope
or
push
shrb
pop
xchg
cli
xorl
test
push
dec
ljmp
xor
test
cwtl
inc
arpl
lret
int
cmc
inc
iret
fcmovnb
push
aad
ja
test
clc
outsl
dec
inc
xchg
pushf
lods
or
lcall
aad
popf
fnstsw
test
sti
ds
dec
add
popf
sub
pop
pop
cmp
cmp
add
movsb
in
mov
fs
xchg
mov
mov
clc
mov
and
jge
dec
jne
fs
or
pop
mov
pusha
stos
lods
cmp
scas
jno
addb
or
jns
push
adc
shl
sbb
dec
in
xchg
xchg
add
add
aaa
test
ret
hlt
test
add
sbb
lods
cs
inc
jno
fmuls
lret
rorb
mov
xor
or
lods
lods
fs
mov
xor
ret
pop
add
popaw
xlat
in
ror
xor
lea
enter
cmpsb
std
cs
and
lahf
addl
jne
mov
aas
cmp
mov
cltd
lods
jno
add
sbb
and
and
xchg
push
push
xlat
jns
int
or
mov
insb
dec
hlt
jns
aam
push
shl
and
dec
xor
mov
std
out
sub
movsl
xchg
cmpsl
jp
loopne
jecxz
inc
fs
aas
repz
xchg
fwait
out
xchg
leave
xchg
inc
cli
push
lret
lret
loope
ss
pop
push
or
xchg
add
xchg
xlat
imul
out
mov
test
pop
in
and
lret
push
cs
test
ja
enter
dec
shlb
popf
jmp
fmul
mov
mov
push
lret
orb
sbb
mov
repz
sub
in
rol
pusha
daa
cmp
mov
fldcw
popf
adc
rorl
lahf
mov
jns
negb
push
ror
out
cmp
sub
xchg
jle
jae
stos
bnd
outsl
xlat
int3
lahf
mov
jo
push
bound
das
repnz
push
mov
or
lcall
pushf
xchg
sbb
pop
lret
jmp
sahf
outsl
adc
pop
incl
fldl
pop
out
sbb
das
test
das
dec
cmp
lret
cmp
ret
aas
cmc
je
je
push
jp
xor
rclb
in
fmull
jp
ss
cmp
xchg
cmpsb
sub
and
inc
repnz
in
sbb
icebp
adc
out
xlat
add
inc
roll
add
out
dec
jmp
mov
ds
push
mov
cmpl
jp
xorb
adc
jno
imul
cli
shrl
xchg
cwtl
push
sbb
cld
inc
dec
mov
mov
sub
mov
sub
push
cwtl
push
adc
fnsave
rcl
ds
sbb
and
add
push
ret
std
cmp
cmpb
cli
rcll
pop
mov
xor
js
jnp
inc
dec
pop
xchg
dec
xor
loop
int3
add
dec
pop
insb
mov
push
rorb
or
inc
rcll
or
push
push
add
jnp
sbb
adc
repnz
push
dec
fidivrs
cmp
in
in
jmp
out
xlat
mov
mov
ret
jns
push
dec
mov
shl
out
xor
dec
pop
aas
push
idiv
xor
out
sti
or
lods
mov
ss
xlat
cltd
push
nop
and
xor
xor
sar
jge
stos
bound
dec
mov
lds
xor
add
adc
outsl
outsl
adc
inc
mov
int
cmpsb
sbb
cld
nop
aas
lret
mov
clc
loop,pn
loope
stc
cltd
daa
cmpsb
jle
shll
icebp
mov
stos
repnz
inc
add
lahf
xchg
mov
mov
add
inc
dec
in
xchg
iret
jmp
jnp
sbb
cmpsb
iret
or
inc
cs
mov
xor
xchg
jl
int
xlat
in
xor
jmp
mov
or
lods
inc
icebp
sbb
lock
adc
fwait
or
testb
pop
adc
cwtl
mov
mov
lds
or
push
out
ss
repz
jmp
int
mov
mov
bound
lock
add
clc
mov
push
sub
cld
lret
sbb
fs
xchg
jmp
jno
inc
push
arpl
pop
or
xor
mov
sub
xor
or
rcl
and
dec
inc
xor
test
out
in
mov
mov
loopne
std
enter
inc
dec
pop
insl
and
or
xor
cwtl
xlat
dec
sub
sub
jbe
mov
jp
in
daa
ja
and
daa
push
fsubs
xchg
movsl
and
mov
lods
aas
fimuls
out
and
les
cmp
jg
push
sti
sub
sahf
sub
cmpb
pop
shrb
imul
xlat
mov
gs
sub
add
xor
push
imul
aas
mov
xor
scas
and
push
mov
arpl
mov
cmpsl
mov
shlb
aam
test
mov
jg
inc
iret
xor
out
adc
fwait
call
jp
or
add
cmp
push
jae
pop
pop
outsl
ret
jbe
push
das
sahf
sbb
add
iret
iret
jb
xor
pop
pop
jno
imul
cmc
adc
cmpsb
fmull
mov
lret
lods
adc
cmc
sub
sti
aad
xlat
inc
push
inc
sbb
ss
outsl
inc
cmp
and
lcall
cmpsl
leave
test
push
daa
adc
in
mov
jmp
xchg
out
mov
xor
insl
xchg
dec
push
add
xchg
xchg
arpl
pop
jge
imul
xor
pushf
popf
dec
adc
ljmp
fists
lods
jno
rep
insb
or
imul
pop
or
test
das
sub
loop
xor
xor
push
jno
in
and
mov
sbb
jnp
add
pop
jl
xor
jl
push
mov
mov
lahf
shrb
jp
loope
add
fnstsw
aaa
into
xor
fst
mov
js
push
mov
fmull
jp
popl
mov
jae
sub
mov
cmp
fdivrl
data16
inc
add
and
mov
movntps
add
cmp
push
sbb
add
ss
cmp
clc
jb
add
lret
and
mov
bnd
lds
fs
jg,pn
sub
sbb
jae
lahf
xor
outsl
sub
xchg
aam
movsl
push
mov
test
sbbl
jb
test
lahf
lods
ljmp
scas
gs
aam
push
push
sti
push
jnp
loopne
adc
into
jg
add
pushf
data16
cld
mov
cs
pop
pop
in
in
fs
aad
std
adc
add
test
inc
fiadds
xlat
mov
mov
pop
fidivs
jae
lret
lea
sbb
mov
stos
mov
sbb
xchg
xchg
movsl
movsb
fidivs
dec
repnz
out
sbb
jbe
mov
pop
xchg
test
dec
sbb
jo
test
add
dec
dec
pop
xor
xor
lock
daa
sahf
mov
sub
adc
adc
jo
mov
fildll
nop
or
pop
dec
mov
push
ss
je
and
mov
add
xor
adc
jmp
push
xchg
xor
jle
fcompl
ss
inc
mov
fsubl
repz
mov
incl
aas
jmp
fisttpll
fcomps
mov
sub
jno
pop
cmp
sbb
xchg
xor
sub
sub
sbb
int
xor
cs
adcb
test
movsb
pop
xor
xor
pushf
es
jne
xor
push
mov
or
jne
adc
jecxz
cmpsb
cmpsl
addl
in
inc
aas
lock
jg
dec
jne,pt
ds
jnp
xchg
xchg
test
imull
lods
lods
sub
push
push
cmc
in
imul
ficompl
data16
js
mov
out
jne
add
and
clc
addr16
nop
dec
ljmp
arpl
hlt
pop
outsb
shll
adc
mov
ficompl
fyl2x
pop
mov
mov
pop
adc
test
gs
test
or
sub
mov
leave
xchg
dec
push
fstl
xchg
xchg
jns
stos
ror
push
lret
je
mov
pop
adc
lret
stc
mov
insb
out
jne
lds
push
mov
and
dec
pop
bound
sub
jne
imul
sub
add
and
gs
jo
and
jp
jg
or
clc
push
adc
in
sbb
sbbb
mov
pop
loope
sarl
jns
mov
ja
notb
int
lcall
ret
js
dec
aam
fidivs
pop
lods
lcall
aad
fwait
into
pop
out
push
iret
push
sahf
inc
mov
jnp
hlt
sbb
sub
aas
inc
jns
pop
stc
and
fildll
lods
icebp
sarb
repz
or
hlt
ss
iret
cmp
notl
into
test
aad
les
sub
push
xchg
inc
xor
lea
cmp
mov
cli
mov
ret
or
sbb
xorl
loope
sub
lcall
out
jecxz
jnp
mov
loope
xor
inc
jp
outsb
ds
sub
xchg
jmp
push
add
es
sub
in
jns
stos
sub
cmpsb
fdivr
sarb
jno
fmull
push
in
adc
or
xor
cmc
fcmovbe
call
call
or
push
add
lahf
sub
cltd
fistpl
cmp
fwait
push
out
sbb
ror
inc
cmp
xchg
adc
mov
test
out
sbb
cs
in
popa
pop
das
sbbb
fiadds
xor
iret
xchg
je
ret
das
lret
or
mov
mov
xchg
pop
lods
dec
push
addr16
inc
push
shlb
and
pushf
aas
dec
sbb
jns
ficoms
xchg
mov
add
in
fwait
pop
inc
xor
fucomp
nop
mov
dec
popa
inc
js
xchg
adc
imul
inc
into
movsl
out
iret
stos
and
add
sbb
lea
xor
and
dec
xchg
movsb
mov
cmp
mov
subl
jmp
cld
lods
cmp
or
xor
cmpsl
add
push
cmp
sarb
bound
inc
mov
adc
lcall
pop
add
mov
sbb
adc
add
dec
lret
int
arpl
cli
sub
hlt
pop
addr16
in
dec
jle
mov
dec
fsubp
push
lods
pop
inc
lds
mov
jno
cmpsb
test
xchg
and
cmc
cmp
int
movl
xchg
jle
dec
inc
inc
sub
lock
or
lock
sub
out
in
jp
push
sbb
sub
push
dec
push
jg
js
shll
or
dec
test
ds
sub
loop
push
dec
lret
cld
or
xchg
movsb
mov
pop
cmpsl
dec
xlat
sub
cmc
inc
in
add
cmp
pop
xor
inc
jns
add
pop
pop
dec
testb
jo
jne
out
in
inc
adc
dec
inc
add
mov
fisubs
mov
and
movsb
icebp
mov
out
jno
int
mov
incb
or
stos
pop
subl
sahf
dec
icebp
pusha
outsl
and
and
xchg
jno
out
fdivs
jbe
int3
in
mov
push
cmp
or
push
mov
mov
inc
call
xor
ja
push
das
subl
mov
cmp
inc
mov
mov
xor
mov
push
cs
mov
adc
ss
fdivr
mov
pushf
cld
jle
add
add
add
mov
xchg
mov
aas
ja
leave
dec
push
mov
or
push
adc
fwait
pop
cltd
subb
add
mov
push
xchg
fdivp
xor
movsl
mul
pop
xchg
test
test
fidivs
ljmp
aad
lock
mov
out
bound
cmpps
outsb
jbe
in
insb
cmp
fucomp
mov
adc
mov
cmpsl
lock
push
es
jl
gs
sbb
inc
bnd
pop
push
insb
and
and
sti
fs
lods
pushf
jns
add
outsb
imul
out
mov
addr16
or
xchg
lods
sub
xor
aad
pop
aaa
js
test
sahf
xchg
lret
setno
or
or
mov
mov
mov
jl
dec
das
xor
fwait
movsl
push
stos
ret
fildll
fs
mov
add
int3
push
test
enter
cmp
addr16
sbb
insb
mov
dec
or
mov
jae
lock
sbb
mov
push
push
jl
cli
outsl
xor
mov
iret
mov
fcompl
dec
fisubrs
shr
jp
out
aas
xor
and
add
adc
add
xlat
cmp
cmp
aad
fcmovnb
lea
add
ja
push
cs
or
out
jmp
outsl
aas
pop
jne
incb
inc
xchg
andl
imul
cmp
pop
pop
mov
push
in
in
cmc
xor
xor
rorl
dec
mov
stos
fstl
imul
aam
scas
or
test
mov
xchg
sbb
int3
imull
out
in
or
mov
fdivrs
pusha
xor
push
insb
sti
mov
lret
in
xchg
sub
mov
scas
jecxz
rcr
dec
fcmovb
pop
sti
divl
aam
lods
in
push
inc
sub
popa
sti
repz
insl
lret
je
mov
inc
cs
push
testl
cmp
jno
mov
mov
aad
mov
mov
sbb
leave
ffree
pop
dec
pop
sbb
push
mov
stos
pop
add
xor
shrb
pop
xor
push
aaa
xchg
sbb
loope
cltd
xor
xchg
mov
std
mov
addb
xchg
mov
mov
shrl
mov
pop
aaa
jo
sbb
xchg
bound
xor
call
xchg
mov
mov
ret
fistpl
dec
jo
loopew
inc
adc
pop
mov
pop
mov
in
mov
lret
mov
test
or
xor
or
test
dec
sti
xchg
adc
xor
sub
jb
push
loope
fisubrl
fstpl
inc
pop
jb
push
push
lock
pop
xor
push
lret
rcll
jae
mov
pop
xor
gs
fsubs
lcall
ds
push
mov
bound
add
push
dec
fdivrs
repnz
xchg
inc
fnstcw
in
cmp
std
xchg
xor
movl
xchg
popa
lret
cs
adc
xor
lahf
nop
xchg
ret
fldenv
leave
dec
sub
xchg
mov
icebp
mov
imul
dec
xchg
daa
mov
inc
shll
push
mov
outsb
mov
or
push
sbb
fmull
enter
lcall
in
ljmp
push
jno
mov
pop
xor
pushf
repnz
pop
hlt
js
pop
mov
loop
das
mov
push
enter
or
out
pop
sbb
pop
mov
jp
push
push
addr16
lea
daa
pop
cmc
xchg
imul
movsl
jg
push
es
mov
add
movsb
decb
imul
test
lods
lret
dec
push
ljmp
pop
xorb
mov
xor
out
loope
je
xorl
enter
enter
push
mov
push
dec
xor
call
and
outsb
test
and
nop
mov
lds
sbb
inc
lahf
adc
mov
push
aas
cmp
mov
mov
pushf
repnz
add
and
or
cs
jns
pop
dec
mov
adc
jno
cwtl
adc
rcrb
add
mov
mov
shlb
cmpsl
sbb
sbb
fbld
cwtl
add
lock
fbld
into
pop
lods
mov
and
int
repz
pop
loop
jecxz
dec
lret
push
inc
jne
add
or
repnz
sbb
js
maxpd
or
int3
daa
pushl
insl
dec
pushf
xchg
cmp
inc
add
pop
xchg
es
xchg
jge
dec
inc
adc
imul
lea
bound
adc
mov
jge
stc
outsl
jnp
rcl
inc
sub
fcmovne
inc
cli
push
icebp
cmp
jno
dec
js
push
pop
stos
mov
push
call
es
add
stc
pop
shl
je
pop
stc
push
jmp
sarb
mov
mov
rcrl
jl
rcl
enter
rclb
adc
aas
mov
push
xchg
ja
fwait
xchg
aaa
aad
xor
adc
je
pop
negl
pop
add
scas
roll
mov
cmp
icebp
sbb
hlt
lods
adc
pop
xchg
pop
cld
pop
add
insb
sbb
add
ds
adc
aad
add
fsubrs
mov
sti
add
mov
add
aad
out
lds
cmp
jb
or
ret
xor
loope
adcl
dec
lret
mov
int
imul
mov
mov
sub
jmp
into
cld
push
mov
outsb
jmp
shlb
mov
movsb
and
mov
lods
add
push
fcoml
xor
cmp
stc
call
sub
sarl
push
jmp
jecxz
fldcw
fcomps
insb
es
adc
add
std
loopne
std
cltd
dec
pop
pop
mov
stc
cmp
test
push
push
popa
cld
das
pop
xor
lret
ja
cmp
mov
push
std
or
push
insl
adc
jno
push
out
repnz
lds
shll
stos
data16
lock
cwtl
mov
jne
jbe
lea
xchg
in
xchg
cwtl
mov
shrl
push
cmpsl
push
pop
mov
xor
gs
sub
push
inc
lahf
pop
cltd
sbb
push
xor
int3
jle
push
fcomip
lret
add
je
jno
int
cmp
daa
fstpt
jge
icebp
and
sbb
aas
js
pop
push
aad
andl
mov
fwait
dec
sbb
std
jae
lret
xchg
fsubrs
xor
or
pop
pop
cltd
push
cmp
call
int3
inc
daa
aaa
xchg
je
sbb
lods
aas
adc
or
mov
pushf
jb
dec
adc
jno
add
or
mov
inc
sub
addr16
fstpl
lock
cmp
sub
push
pop
push
rcrb
in
or
push
movsb
mov
inc
add
xor
fldl
jne
pushf
cwtl
inc
out
daa
add
aas
inc
xchg
fadds
in
push
fstl
jmp
and
inc
lahf
jb
adc
xchg
addl
into
cld
jl
sbb
push
inc
repz
stos
sub
mov
addb
insl
pusha
je
xchg
imul
int
jae
adc
loopne
xlat
add
hlt
and
sbbb
outsb
inc
loop
add
mov
push
adc
mov
fsubl
and
sbb
sub
mov
fildll
and
jle
cmp
jne
pop
mov
fwait
lcall
pushf
xor
jbe
xchg
fadds
cmp
cmp
adc
rolb
ficompl
cwtl
inc
out
cld
pop
fucomip
das
aam
push
sub
sbb
bound
inc
sbb
mov
dec
dec
cmpsb
test
mov
stos
xor
mov
cld
pop
js
push
lea
test
lcall
inc
loope
pop
lcall
shrl
ret
mov
mov
call
je
cli
jno
cmpsb
test
cmp
mov
cmc
jne
lret
clc
dec
scas
mov
and
in
dec
dec
imul
fcoms
dec
ljmp
jg
popa
loopne
and
pusha
in
aam
insb
pusha
xor
pop
mov
pushf
sub
cmp
out
call
sahf
js
fcmovu
cld
pop
fs
mov
cmpsl
push
imul
mov
jo
arpl
js
mulb
xlat
xchg
jne
mov
and
mov
pop
rcll
xor
mov
or
in
cmp
mov
shll
xchg
sti
loop
or
or
adc
pop
into
imul
push
fmull
pop
test
pop
mov
jb
ficompl
and
cmp
ds
xchg
imul
test
mov
lods
cmp
push
mov
enter
push
and
lcall
xchg
lods
cmp
inc
stos
dec
adc
icebp
lea
mov
xchg
aas
and
adc
push
mov
pop
pop
xor
fs
cli
push
push
push
cwtd
jmp
ds
inc
outsl
sbb
mov
dec
cmp
gs
loope
and
push
pop
pop
xlat
lds
sbb
insl
push
test
les
mov
dec
mov
out
mov
scas
cmp
iret
sahf
cld
cmp
fidivrl
clc
inc
adc
push
movsb
add
iret
xor
pop
pop
pop
pop
xor
shrb
xor
aam
imull
mov
test
xchg
lahf
mov
push
xor
push
lds
or
xchg
jbe
btc
inc
sarb
mov
sti
ja
mov
add
xchg
js
es
fs
mov
cmp
pop
in
pop
lods
mov
inc
les
sub
movsl
js
ljmp
or
jl
inc
icebp
add
xor
pop
mov
mov
cmpl
pop
test
test
jno
data16
clc
mov
push
test
inc
mov
push
add
movsl
xorb
ja
dec
mov
pop
movsb
inc
jo
or
rorb
mov
sub
es
pop
or
ret
andb
xor
cmc
sub
cltd
and
movsl
in
hlt
or
ss
adc
or
loop
and
fsubrl
mov
xchg
pushf
fildll
inc
jg
das
push
xchg
adc
sbb
mov
loop
pushf
ja
inc
xor
bound
add
adc
sbb
leave
xor
lods
pop
inc
xor
sub
mov
mov
and
lret
sbb
imul
fcmovne
push
xchg
xchg
hlt
aam
ret
fwait
scas
dec
mov
inc
xor
or
mov
xor
lret
in
cltd
pop
enter
mov
stc
pop
mov
daa
xor
jbe
cmp
xchg
adc
jmp
xchg
and
mov
stc
and
nop
pop
jne
mov
sbb
mov
jae
inc
or
fldl
or
jnp
rclb
dec
bound
xorb
sub
pop
cltd
cmp
xchg
push
test
fbstp
push
lcall
stc
mov
lock
jnp
jbe
or
fwait
add
sub
in
in
ljmp
pop
xor
mov
ss
mov
mov
mov
js
jnp
mov
or
mov
xchg
insl
mov
loop
mov
stc
jg
fcmovu
add
jl
insb
push
jle
dec
lds
aaa
pop
sub
lea
jmp
out
push
mov
inc
jno
xchg
cmp
and
call
jmp
mov
xchg
cltd
sahf
mov
and
les
mov
imul
pop
pop
cmc
xor
ret
or
xchg
fmulp
dec
pop
mov
jecxz
mov
repz
fsubrl
and
lret
mov
jg
mov
mov
dec
cmp
adc
test
out
leave
jle
or
fldcw
pop
push
test
loop
inc
jl
movsb
das
xchg
push
cmpsb
popa
push
loop
loope
iret
test
push
push
or
xchg
mov
or
pop
call
ss
lods
fwait
push
push
addr16
xor
mov
push
mov
bswap
mov
pop
xchg
pop
sub
fcmovnb
sbb
jge
add
cmpsl
mov
jbe
mov
or
or
fwait
rorl
jne
aas
jns
mov
cmp
movsb
push
addr16
lret
cmp
rorl
push
stos
add
jno
inc
imul
mov
pop
jecxz
cltd
cmp
test
inc
popf
sub
outsl
fldl
push
gs
jae
aaa
jno
clc
adc
pop
dec
movb
sbb
xchg
inc
add
push
ja
xchg
mov
out
movsb
add
ret
stc
add
adc
daa
push
dec
les
sbb
test
jnp
and
xorl
scas
test
sti
inc
inc
or
cmp
cmp
xor
mov
push
xlat
add
sub
xchg
inc
rorl
aam
mov
jl
imul
mov
cld
xchg
sub
cltd
pop
out
cmpsl
xor
jae
nop
mov
push
mov
mov
dec
hlt
mov
insl
cmp
add
or
and
arpl
sahf
arpl
lods
jnp
dec
mov
pushf
xchg
mov
pmullw
mov
lods
fildll
inc
cmc
pop
jne
add
daa
scas
xlat
jge
mov
pop
cmp
repz
pop
dec
cli
imul
sub
movsb
sub
test
aad
xchg
repz
add
lds
cmp
adc
pusha
out
icebp
mov
aad
push
mov
add
in
in
ja
pop
ror
sub
xchg
mov
roll
pop
gs
dec
mov
sbb
aas
mov
outsb
lcall
out
pop
outsl
cmp
add
and
in
jg
inc
mov
and
sub
and
jge
lods
ljmp
iret
cmc
jp
cmp
arpl
mov
add
leave
sti
cwtl
mov
shll
jae
pop
dec
es
mov
cmp
mov
add
push
inc
inc
ds
aad
add
out
mov
and
sarb
movsb
jp
pop
jno
fcmovnbe
push
aam
lret
inc
adc
out
cs
je
jle
adc
rol
mov
xor
cmp
scas
inc
adc
and
push
inc
sub
xlat
jns
jmp
or
ds
sar
cmp
mov
cmpsl
int3
daa
add
mov
cmpb
movsl
cmpsb
sub
pop
add
mov
lods
push
cmp
fisttpl
xchg
mov
push
and
dec
sub
mov
cmp
lret
aas
dec
and
sti
stos
push
sar
pop
push
push
les
daa
cld
jp
sub
add
enter
data16
scas
scas
cli
scas
lods
or
out
xchg
in
mov
mov
or
lcall
jne
rcrb
xchg
loop
dec
stos
movsl
int
add
jle
lcall
push
test
push
fidivl
xor
pop
sub
out
push
out
cmpsb
scas
add
dec
std
xchg
dec
ljmp
leave
insb
cmp
xchg
scas
sbb
scas
aaa
int3
xchg
loope
test
mov
and
imul
lret
clc
cmpsl
push
push
fs
inc
stc
leave
push
mov
loop
das
fildll
mov
inc
add
pop
dec
mov
pop
mov
sbb
vandps
in
das
js
xchg
fstps
jmp
push
movsl
inc
int3
adc
adc
mov
shrb
dec
lret
mov
jne
jecxz
int
imull
dec
xor
fsubl
push
testl
xchg
aaa
cs
xor
pop
mov
xchg
mov
mov
adc
cmpsb
in
repnz
cmp
js
gs
sbbl
in
jb
mov
or
mov
inc
fwait
int3
sub
ja
sbb
add
repnz
in
cwtl
in
outsl
sbb
in
rol
lea
insb
rorl
inc
sarb
pop
jo
subb
xchg
xor
push
jecxz
sub
outsl
addr16
test
mov
pushw
fistpll
adc
or
cmpsl
add
jecxz
jbe
dec
or
aad
cmc
push
xor
outsl
mov
fildl
dec
cmpsl
pop
cwtl
inc
fidivrs
push
push
xor
push
add
push
lret
dec
jle
sbb
fimull
ljmp
jns
xchg
or
pop
dec
lock
mov
add
add
xchg
fldcw
adc
dec
rcll
sahf
in
push
cli
inc
pop
test
or
mov
inc
or
insl
cmp
jae
call
dec
jo
cmpsl
movsb
clc
outsl
inc
sub
xor
sub
cmc
push
pop
and
cmpsb
enter
pusha
mov
push
aad
jge
jnp
push
mov
aaa
jmp
sbb
pushf
scas
lret
in
add
jl
icebp
nop
repnz
sbb
daa
call
inc
into
cs
aaa
loope
lcall
divb
mov
iret
cs
inc
push
insb
repnz
jle
movsb
xor
inc
insb
sub
adc
or
or
adc
inc
imul
popf
xor
xor
cld
out
mov
jbe
adc
insl
decb
xor
add
jp
cmp
scas
mov
pop
dec
lret
adc
pop
mov
push
push
leave
stc
xchg
cmp
shll
add
push
sub
movaps
out
insl
popf
cmp
cmp
jecxz
sar
popa
leave
insl
in
hlt
or
sub
loopne
out
test
xchg
or
insl
lods
jl
dec
test
insl
pusha
inc
push
gs
insb
mov
xchg
push
fisttps
push
inc
std
pop
out
out
sahf
mov
jns
daa
andl
les
loope
xchg
cwtl
arpl
push
jnp
call
xchg
mov
or
jne
mov
cmp
inc
inc
and
adc
popa
and
inc
mov
sub
dec
jno
cmp
out
jmp
stc
jno
xchg
mov
adc
int
sub
or
cli
push
test
pop
push
or
iret
imulb
cmp
shlb
loopne
adc
repz
rol
stos
pop
addl
cmc
adc
cmp
push
mov
lret
inc
das
cmpsl
mov
xor
lods
repnz
pmullw
lods
pop
sahf
movsl
cltd
test
movb
pop
fists
lcall
jp
push
outsb
or
enter
cld
mov
sahf
lret
sbb
pop
or
mov
mov
mov
lods
mov
xchg
cltd
push
jge
test
jbe
push
add
cmp
addb
dec
and
sbb
les
dec
and
jl
out
fnstsw
fnstcw
fwait
mov
adc
stos
pop
ljmp
inc
adc
or
inc
xchg
xlat
cwtl
inc
push
cmpsl
add
push
je
mov
xchg
mov
and
xor
mov
jle
mov
jl
rorl
cwtl
ja
popa
adc
mov
jbe
in
xchg
addr16
mov
add
adc
ficoml
inc
fnsave
bound
sti
mull
cwtl
nop
add
mov
fidivs
fstl
fmull
cmp
fadd
jl
push
pusha
enter
jge
mov
sub
or
aaa
xchg
sub
adc
mov
pop
jmp
mov
sub
and
add
idivl
mov
addr16
mov
lea
xchg
lds
or
aad
xor
pop
inc
fdivr
pushf
push
popf
jae
xchg
insl
dec
jno
mov
jmp
xchg
cli
outsb
aad
test
cmp
fisubl
int3
mov
mov
dec
mov
shr
or
dec
cmp
pusha
push
fucomp
ds
jmp
and
imul
inc
add
dec
add
in
sub
out
mov
frstor
add
fmul
sbb
cmpsb
stos
int3
iret
mov
mov
mov
lahf
sbb
js
mov
mov
mov
rolb
adc
xchg
jg
fwait
rolb
ret
call
lock
cltd
sbb
out
cmp
loopne
enter
in
movsl
push
xchg
sbb
ror
jnp
loopne
and
shlb
or
mov
jns
data16
scas
mov
aad
andb
ljmp
cmovne
and
xchg
inc
dec
jnp
cli
sbb
dec
cmp
jnp
arpl
pop
xor
sbb
sahf
loopne
cmpsb
and
fidivl
mov
inc
out
test
xchg
cwtl
mov
push
xlat
int
fdivrs
pop
and
call
movsb
sbb
mov
cmp
and
mov
repnz
xchg
cld
mov
or
hlt
push
fmulp
inc
das
mov
outsl
shlb
imul
fcmovbe
aas
test
lahf
out
inc
push
inc
mov
push
add
and
imul
ja
fdivs
sub
je
popa
sub
ret
xchg
jb
push
mov
add
push
xor
mov
jp
push
lahf
fcmovnbe
data16
aam
inc
loopne
push
mov
shl
sbb
cmpsl
xchg
into
je
fldcw
sbb
mov
adc
xchg
and
test
out
and
je
stos
cmp
jns,pn
sbb
dec
pop
cli
aad
bound
cmp
mov
addl
and
push
movsl
xlat
or
jnp
sub
negb
add
cld
int
xlat
sbb
cmpsb
sub
xchg
mov
rorb
testl
inc
fcmovnu
mov
add
out
sbb
xchg
dec
mov
ja
adc
sbb
cmp
inc
iret
adc
xchg
cmp
shrl
daa
sub
aam
inc
ret
fs
mov
sbb
sub
rorb
pop
cwtl
pop
pop
jl
fs
dec
inc
jmp
dec
and
inc
mov
mov
push
push
push
adc
insb
and
inc
lods
sbb
add
mov
cwtl
pop
scas
or
fs
and
fstl
push
into
pop
lret
faddl
mov
pop
in
div
int
pusha
mov
xchg
dec
lods
cltd
xchg
add
jge
mov
lahf
je
sbb
sbb
xor
and
iret
mov
leave
add
fdivrs
sub
push
int
push
shll
mov
xchg
inc
dec
sahf
pusha
mov
mov
cltd
cmp
dec
jno
pop
push
mov
or
push
ret
sbb
sbb
or
loope
add
jb
mov
push
imul
imul
or
inc
cmp
stos
pop
and
lea
cmpb
and
dec
push
les
gs
cmp
popf
test
xor
bound
xchg
test
loop
shlb
dec
add
icebp
adc
frstor
sbb
mov
and
cmpb
aaa
and
xorb
mov
idivb
test
mov
leave
jnp
xchg
or
dec
mov
jno
push
stos
lcall
xor
add
cmp
push
and
out
or
pusha
push
call
sahf
in
lret
loop
mov
xchg
mov
dec
divb
jbe
inc
mov
hlt
dec
push
lahf
imul
sub
sbb
adcl
mov
xchg
jne
int3
push
rcrl
std
mov
add
cmp
repz
inc
cmpsb
add
add
jge
inc
test
shrl
out
cmp
mov
ret
sbb
lds
xchg
jnp
adc
lcall
mov
cmp
xorb
outsl
icebp
pop
mov
test
fdivrs
out
dec
lods
inc
pop
lea
push
xor
cmp
flds
xchg
in
or
pop
adc
cmp
out
ljmp
aaa
inc
sbb
or
lods
scas
sub
or
xchg
dec
pop
pop
dec
ja
pop
pop
and
mov
call
test
js
rorl
add
movb
mov
mov
outsl
repz
cltd
mov
sub
push
loopne
orl
pusha
pop
add
das
sahf
sahf
je
add
inc
or
or
ja
cmp
and
mov
mov
and
daa
iret
fwait
cmp
out
std
in
test
dec
add
fisubl
shl
stos
sahf
pushf
sbb
lock
mov
add
lahf
jmp
std
add
in
inc
or
push
sarl
pop
ljmp
gs
insb
mov
sbb
stos
push
js
aad
shrb
xchg
cmp
ja
mov
aaa
jae
mov
cli
insb
adc
adc
adc
sub
or
movsb
fisttps
jecxz
in
adc
clc
push
fisubrl
cmp
adc
jns
mov
mov
call
in
cmp
pop
and
sub
popf
cmpsb
aas
test
or
shl
stos
fcoml
or
jo
push
loope
aad
mov
dec
popa
iret
bound
mov
ss
icebp
or
or
push
stos
movsl
ljmp
jo
mov
fcmove
push
push
cwtl
and
cmp
popa
mov
loope
sbb
lods
es
aas
adc
dec
add
jecxz
mov
aas
call
xchg
repz
loope
or
sbb
lds
out
xor
push
sti
arpl
jmp
lods
rclb
lahf
bound
inc
ret
push
mov
popf
stos
ljmp
in
outsb
mov
push
inc
repnz
stos
imul
or
sti
jb
fwait
fs
dec
mov
sub
jae
mov
jmp
aad
jge
mov
xchg
sub
rcrb
aad
out
into
sahf
int3
rclb
xor
jnp
andb
into
lock
out
pushf
cltd
mov
in
push
mov
gs
mov
frstor
adc
xchg
xor
ret
fisubrs
adc
pop
mov
cmp
adc
or
and
cmp
mov
ret
nop
dec
pop
into
cwtl
pop
and
xchg
sahf
loop
adcl
inc
fsincos
push
fistps
fldl
inc
loop
pop
lea
and
jle
inc
bound
adc
shrl
ja
mov
ljmp
cmp
loopne
or
nop
add
std
repnz
popa
cmp
sbb
call
sub
insl
out
imul
sbb
enter
jae
mov
adc
xchg
imul
or
mov
lahf
je
jbe
outsb
icebp
cmc
sub
dec
movsb
mov
loopne
rolb
lret
xchg
pop
outsl
jbe
andl
cwtl
add
dec
out
and
icebp
push
adc
pop
inc
push
es
pop
sub
xor
lea
fcompl
sub
jp
sbb
jle
int
data16
jae
sbb
mov
int
pop
xor
sbb
push
movsb
pop
cmp
pushf
mov
insl
call
inc
dec
es
mov
aas
or
jno
popa
jmp
insb
cmp
cmp
iret
sub
fs
outsb
loop
stos
int
mov
mov
xchg
cli
out
cmp
ja
sub
into
mov
push
subb
loop
jl
cwtl
arpl
pop
jae
adc
pushf
adc
stos
lock
test
sbb
push
dec
test
pop
pop
js
adc
inc
scas
ret
pop
stc
push
jge
mov
outsb
mov
sub
dec
adc
adc
ds
xchg
or
or
xor
mov
ficoml
mov
sub
popa
std
sub
mov
xchg
out
gs
lods
push
pop
clc
repnz
dec
jl
add
in
pop
and
or
fwait
mov
xcrypt-ecb
cmpsl
or
push
aad
adc
mov
sbb
push
addr16
ds
jae
scas
add
and
jg
lods
pop
enter
mov
mov
adc
jmp
loop
or
or
ret
fildl
jne
lret
inc
fmul
jno
xor
out
imul
loope
hlt
pushf
xor
in
into
cmpsl
lahf
dec
orl
mov
mov
inc
mov
adc
dec
and
test
mov
jbe
aad
inc
sub
pop
cmp
jne
dec
jl
inc
or
push
mov
and
loope
xor
dec
or
sub
rcrb
mov
lahf
push
dec
and
mov
incb
jb
xorb
rol
xor
pop
in
ja
inc
cmp
loop
andb
fwait
pop
and
lock
mov
sti
leave
pop
mov
adcl
jae
int
in
pop
cmp
jne
aad
lods
dec
adc
mov
or
mov
outsb
xor
imul
inc
jecxz
pop
and
mov
push
push
lock
push
jp
stos
dec
push
sbb
pop
mov
in
jbe
push
xchg
outsb
mov
sbb
stos
jno
adc
test
ficoml
es
fwait
outsl
mov
inc
jae
jae
mov
pop
mov
sbb
dec
adc
mov
push
jo
adc
push
sbb
pop
xor
into
fidivrl
int
mov
fimuls
and
call
sti
leave
into
sbb
imul
and
mov
adc
pop
mov
mov
push
icebp
bound
xchg
mov
imulb
push
mov
ss
mov
ds
dec
icebp
adc
loop
jp
aad
xlat
faddl
sahf
aam
call
xor
imul
mov
inc
mov
sbb
sub
ds
pusha
or
cmp
xchg
loop
fidivs
popa
pusha
in
int
adc
ror
dec
and
mov
fidivl
jo
cltd
add
dec
leave
adc
fsubrs
mul
dec
add
adc
add
mov
dec
mov
movsb
jge
bound
adc
adc
fldt
lcall
outsl
je
fisubl
push
and
es
pop
sub
jge
pop
jne
dec
sbb
and
mov
add
sbb
cmp
dec
fiaddl
pop
jo
sub
nop
xorl
cmpsl
aam
int3
and
push
fsts
fidivs
mov
cmpb
xchg
cs
xchg
xlat
mov
lret
jle
loop
shll
je
inc
or
push
mov
mov
out
loopne
call
xchg
push
lds
mov
dec
mov
loopne
xchg
xor
xor
and
pop
or
lods
sbb
jnp
adc
xlat
mov
into
cld
in
jg
ja
das
or
and
cld
cmp
mov
mov
mov
dec
pop
jae
aam
sub
or
scas
into
pop
sbb
popf
call
int
rorb
fistpl
in
stc
adc
imul
loopne
fs
jmp
jb
aam
xor
xchg
aam
xchg
nop
jp
dec
cmp
fcmovu
sub
ja
ror
push
nop
ret
cltd
sbb
sbb
data16
xchg
lret
stos
movsl
fincstp
fs
mov
pop
lds
sub
mov
int3
aas
mov
in
mov
jge
scas
pop
nop
in
adc
sbb
sbb
stc
push
add
sbb
les
sbb
pushf
dec
sub
aad
add
add
loopne
aam
out
bound
pop
pop
negb
scas
in
jg
test
sahf
jae
mov
xchg
fsts
inc
adc
mov
lods
hlt
xor
mov
push
cmp
xchg
hlt
ljmp
pop
inc
loope
pop
inc
enter
jb
cmp
fs
pop
stos
hlt
cmpl
mov
mov
xor
aas
sysret
mov
mov
sti
ret
jns
idiv
xchg
rorb
cmc
daa
xchg
inc
lds
sbbl
xchg
push
xor
lahf
sub
fadds
sbb
lcall
fs
add
cld
xchg
sahf
icebp
rolb
fs
jnp
lret
or
int3
pop
push
stc
jb
and
mov
dec
mov
jmp
sub
sub
cmp
inc
or
loope
push
jne
jle
xor
push
inc
jle
cs
add
icebp
loopne
in
jns
adc
pop
inc
repnz
xchg
ss
lret
inc
das
mov
inc
mov
mov
jbe
sbb
das
dec
xchg
jge
enter
mov
lret
loop
push
xor
icebp
dec
data16
push
xor
test
dec
das
dec
scas
mov
inc
xor
dec
ja
xor
mov
nop
shrl
sub
inc
mov
popl
mov
mov
popf
xchg
das
xchg
xlat
cmp
pop
push
pushl
mov
pop
and
xchg
or
nop
mov
add
cmp
push
dec
rcl
mov
add
cmp
movsb
cli
arpl
jle
sarl
adc
test
xor
xchg
jmp
sarb
les
fnstsw
or
sub
cmp
js
cmp
sahf
jle
in
test
push
sub
add
icebp
and
ljmp
addr16
cli
and
push
xor
loop
mov
movsb
int
mov
jmp
sub
int
cmp
mov
into
mov
lods
fnsave
movsl
jno
es
pop
mov
dec
lahf
xor
sbb
rorl
sbb
mov
dec
and
test
jae
sub
sub
aaa
es
pop
or
jmp
mov
xchg
les
scas
mov
add
push
aad
dec
negb
sbb
dec
adc
int3
cmpl
mov
cmp
mov
outsl
ss
sbb
push
popf
lret
adc
pop
pushf
into
add
inc
and
je
ss
lock
jo
ja
fcmovnb
ds
scas
scas
mov
loopne
gs
jp
ljmp
mov
aad
dec
dec
sti
jno
push
inc
into
mov
jns
test
stos
cmp
inc
insl
into
xor
push
inc
mov
aad
aaa
icebp
xchg
pusha
loope
nop
kxnorw
push
sub
jo
mov
xchg
and
sahf
loopne
jl
xor
xor
pop
jecxz
mov
dec
stos
and
decb
stos
inc
rol
mov
sub
xchg
xchg
mov
ss
add
in
lock
push
adc
test
faddp
adc
jo
fisttpl
sbb
rclb
inc
ja
mov
mov
jp
clc
sub
sub
aad
xor
cmpsl
or
mov
sbb
mov
out
jecxz
lahf
insb
jo
xchg
add
sub
das
jg
scas
fdivp
dec
jmp
add
icebp
sbb
sbb
je
stc
in
mov
add
ror
stos
and
sub
rorb
mov
mov
jle
pusha
cmpsl
test
or
in
xchg
cs
sub
fisubrl
mov
xchg
sbb
pop
jge
nop
mulb
xor
xchg
inc
stos
cmpsb
xchg
sbb
mov
call
mov
fmuls
adc
mov
pop
push
pop
or
inc
cmpsl
sbb
mov
icebp
test
mov
stos
add
rcr
nop
mov
bndldx
pop
popa
inc
fucomp
movsb
adc
push
lahf
and
shrb
ja
cmpl
xlat
decl
inc
adc
icebp
ret
mov
in
ret
shr
inc
into
mov
mov
fbstp
ss
ret
test
in
push
scas
and
dec
sbb
arpl
gs
and
dec
sub
out
add
mov
fcomps
pop
add
mov
fisttpll
pop
subl
or
pop
dec
adc
test
addr16
or
jo
cmp
pop
aaa
mov
jno
loop
aam
andl
loopne
popf
ret
rdmsr
mov
dec
shrl
cmc
arpl
andb
shrb
aaa
pop
pop
sub
jecxz
pop
data16
nop
lock
mov
sbb
cli
sti
cmp
xchg
or
jb
push
fmul
ss
shrb
jl
das
leave
dec
jne
lock
jno
add
inc
ja
adcl
xlat
xchg
aaa
mov
inc
sbb
adc
push
std
cwtl
inc
pop
jmp
lfs
rcll
ret
adcl
sbb
mov
cmp
leave
adc
pop
nop
shrl
dec
stos
test
adc
pop
xchg
pop
dec
sbb
cmp
and
ret
ret
push
lret
cwtl
fmulp
fistps
or
xor
mov
jecxz
mov
pop
mov
pop
cmp
pop
add
ljmp
adc
test
aad
add
rcrl
cli
cmp
jge
test
push
or
dec
iret
ret
mov
mov
mov
mov
iret
dec
loope
or
mov
hlt
pop
fdivrl
jne,pt
insb
fnstsw
lahf
add
test
pop
inc
xchg
adc
mov
pop
mov
popf
loop
into
adc
inc
push
or
jg
sbb
aaa
sbbb
shlb
fisttps
lret
cwtl
je
mov
pop
int
cmp
leave
call
dec
lcall
push
aad
sbb
dec
test
push
inc
cwtl
icebp
mov
test
or
xchg
dec
fsubrp
in
mov
sbb
dec
mov
in
xchg
test
pop
iret
shlb
mov
xchg
imul
mov
sbb
mov
inc
mov
into
xchg
loope
daa
push
add
cld
or
nop
shlb
ret
xchg
jg
arpl
into
shrb
xor
push
je
fstps
cld
jbe
jnp
pop
jl
pop
push
pop
jo
cmpsl
les
add
and
xor
mov
adc
cs
or
pop
mov
insl
jmp
int
xchg
inc
adc
xchg
jnp
lods
add
hlt
ds
or
pop
inc
mov
in
dec
adcl
insl
nop
push
mov
mov
imul
sbb
fiaddl
adc
sub
jns
fcomi
fmulp
loope
lds
and
ficomps
fwait
or
fwait
js
sbb
stc
shll
test
imul
pop
bound
mov
xor
loope
mov
stc
cmp
mov
movl
adc
aaa
ds
add
popf
ljmp
sub
cwtl
sti
adc
add
in
lret
out
decb
ss
push
jns
mov
ljmp
dec
cmp
mov
out
imul
sbb
adc
movsb
outsb
clc
div
popa
jle
add
arpl
cmp
adc
es
daa
mov
pushf
insb
adc
add
mov
or
xchg
xor
inc
insb
iret
or
mov
lcall
mov
int3
sti
jbe
fwait
cmp
lods
or
lret
inc
jmp
xchg
sub
cwtl
repz
cmp
jno
stc
xchg
enter
cmp
les
jns
or
stos
pop
jmp
sub
in
fcoms
rcr
xor
push
pop
push
test
push
pop
add
and
repnz
fsubrl
or
and
shrb
sub
mov
lret
lcall
in
aam
mov
xor
inc
bound
orb
fwait
mov
xchg
mov
bound
hlt
je
pop
push
les
mov
mov
xlat
jge
fadd
test
fisubrl
test
idivl
mov
out
aaa
fsubs
sbbl
fbstp
out
push
xchg
pop
inc
jl
mov
push
ret
loopne
pop
inc
mov
dec
add
mov
and
mov
add
pop
cmpsl
jg
out
mov
mov
and
or
sbbl
addr16
cli
push
movsl
or
and
xchg
aaa
xlat
pop
jno
mov
rcl
and
add
jnp
in
fldcw
xchg
outsb
cmpsb
push
dec
pop
mov
dec
sbb
addr16
rcrb
cmpl
mov
and
jge
xchg
pop
push
push
repnz
addr16
ljmp
cmc
aaa
lret
push
sub
cmp
cmp
add
scas
push
rclb
outsb
outsl
shrl
cs
add
and
and
xor
xorl
out
addr16
pop
mov
fimuls
aad
pop
sbb
mov
pop
sti
dec
cltd
lea
sub
lods
push
lods
repz
dec
mov
inc
or
add
notb
icebp
dec
push
or
mov
cwtl
jl
mov
pop
mov
aad
insl
sub
mov
sbb
ficompl
mov
in
pop
out
add
and
adc
sbb
mov
mov
ds
imulb
outsb
sub
popa
xchg
out
outsb
mov
mov
ja
push
mov
adcl
or
mov
pop
mov
stc
mov
int3
add
and
daa
outsb
insb
jns
in
lds
lret
dec
fnstsw
mov
ljmp
popf
xchg
lods
cli
mov
enter
outsl
repz
dec
inc
xor
shl
lods
or
sbb
sub
push
adc
mov
or
lea
add
test
sub
xchg
mov
xchg
add
xor
inc
lahf
cmp
lea
pop
xor
inc
fs
push
mov
mov
fisttpll
push
adc
dec
clc
cmp
xor
shll
test
es
inc
dec
dec
andl
test
movsl
sbb
fwait
stos
cmp
xchg
add
lret
mov
and
xor
cmpsb
adc
std
jp
in
test
cmpsb
cmp
dec
mov
into
inc
popa
loop
cmp
push
rolb
and
push
iret
xor
mov
mov
mov
or
es
sbb
pop
pop
loop
sbb
ss
adc
in
gs
jmp
xor
test
arpl
and
mov
or
mov
lcall
adc
xor
xchg
mov
lods
scas
adc
shlb
inc
lock
scas
push
scas
outsl
pushf
jp
dec
int
mov
mov
or
xchg
pop
call
in
adc
or
jecxz
dec
pop
mov
dec
add
inc
pushf
lret
loope
gs
decb
pop
xor
aam
push
sbb
sub
insl
rcrl
cmp
cmc
dec
repnz
dec
psubusb
outsl
mov
rcl
insl
into
movsl
xchg
dec
or
daa
incl
xor
test
aad
xlat
push
int
adc
sarl
cmpsb
out
or
les
popf
aas
les
popa
push
cmpsb
adc
sub
add
leave
pop
dec
inc
add
incl
lahf
mov
sub
adc
mov
jle
xor
dec
add
imul
cli
add
or
or
sub
cmpsb
dec
mov
or
mov
test
std
xchg
imul
outsl
inc
lret
add
add
xchg
lret
xor
mov
xor
push
in
shll
popf
add
ret
cmpsb
pop
rep
cltd
cmpl
jge
leave
dec
shl
rcr
adc
sub
ds
clc
cld
and
inc
mov
dec
and
fmul
lods
push
cmp
popa
jae
ljmp
js
loop
lahf
adc
inc
dec
mov
test
mov
imul
in
sti
mov
mov
test
sub
out
push
lods
cmpsl
jns
imul
cltd
rolb
mov
sarb
push
sbb
xor
call
sbb
or
sub
ret
xchg
mov
xor
push
xchg
test
fsubl
aas
mov
or
addr16
or
mov
adc
stos
fdivrl
adc
sbb
adc
fnstsw
fcoms
mov
iret
cmp
mov
gs
xchg
ss
in
cmc
jbe
sub
js
inc
bound
push
iret
mov
mov
and
or
loope
push
lahf
xor
mov
in
out
inc
test
cmpsl
cmp
jno
mov
mov
cmp
enter
pop
hlt
xchg
nop
leave
cmp
pop
jle
add
jae
inc
dec
stos
pusha
stos
cltd
aas
mov
fs
xchg
icebp
mov
sbb
sbb
push
inc
cmp
xchg
lea
pop
stc
adc
or
or
repnz
ljmp
scas
rcll
pop
and
push
ds
mov
loopne
mov
xchg
or
clc
or
xchg
out
inc
mov
mov
test
ljmp
icebp
pop
xchg
xor
sub
dec
cmp
fimuls
ljmp
jno
mov
in
inc
push
lahf
cld
or
leave
mov
lds
xor
or
lods
shlb
stc
sub
or
mov
jge
jno
lea
push
nop
jecxz
jo
add
xchg
push
push
cmp
ret
test
jge
stos
mov
or
xor
push
pop
add
pushf
divl
cmpsb
rcrl
pushf
jbe
out
adc
inc
add
int3
lret
xchg
jge
divl
fdivrs
aad
sub
push
jb
mov
out
pop
in
fldt
dec
sub
adc
fimuls
outsb
adc
int3
and
add
shll
or
decl
jno
dec
out
lds
cli
int3
jle
sub
pop
lds
dec
pop
pushf
lds
dec
mov
mov
shlb
insl
mov
xor
daa
mov
fdivrl
lahf
inc
add
add
aam
enter
jg
out
push
es
sbb
mov
jo
xchg
cmpsl
out
dec
faddl
xchg
or
xchg
mov
subb
push
cmc
adc
dec
xchg
or
jmp
fistpl
xchg
dec
out
mov
add
aaa
jmp
sarb
sti
sbb
mov
add
dec
mov
xor
shll
xchg
cld
mov
notb
sub
ret
pop
sbb
mov
xchg
sub
shrl
xchg
daa
jecxz
mov
pop
mov
fwait
test
adc
add
aad
cmp
mov
jae
mov
dec
mov
add
xor
mov
mov
sti
dec
push
or
sub
vorps
ret
pop
test
insb
enter
inc
xor
sbb
lcall
and
sub
cmp
hlt
mov
mov
mov
mov
push
cmpsl
fcoms
cmp
in
stos
stc
sti
lock
jecxz
push
mov
sub
out
cmpsb
lahf
mov
mov
sbb
lret
pop
mov
or
jg
dec
push
mov
adc
push
jo
insb
repz
fcomps
es
test
push
cmpb
xchg
out
sbb
cmp
jmp
das
fdivrs
adc
je
xor
lods
imul
mov
cmp
repnz
xor
in
std
test
pop
outsl
out
pop
ds
mov
ljmp
sbb
stos
push
out
add
mov
aam
repz
xlat
ljmp
aaa
inc
in
sarl
js
loope
xor
inc
or
out
ss
or
xlat
jbe
mov
int
mov
popf
jle
cld
enter
xchg
and
iret
mov
in
inc
lret
jb
adc
and
adc
data16
mov
push
sbb
mov
or
inc
xor
push
xchg
popa
sbb
sbb
popa
xchg
sub
push
out
jmp
jl
add
adc
outsb
inc
lds
mov
push
or
mov
mov
aad
push
call
int
jno
outsb
insb
and
jo
mov
sbb
mov
stc
lret
fwait
shrb
shlb
jo
mov
jne
out
iret
add
fcomps
loop
repz
lods
mov
mov
insl
dec
mov
in
adc
mov
jae
mov
test
xor
cwtl
or
cwtl
cmp
mov
jg
mov
xchg
cmc
fsts
mov
and
std
fsts
fnsave
out
sbb
popf
fucomi
ljmp
inc
aaa
pop
mov
push
jmp
add
imulb
gs
pop
inc
mov
loop
mov
popa
and
outsl
sub
xor
jnp
cmp
sub
movsb
dec
adc
lds
std
inc
lret
or
test
stc
repnz
shlb
clc
test
cs
pop
xchg
push
mov
jle
rcl
in
sti
test
rcrl
inc
ret
call
add
in
inc
mov
js
leave
iret
and
je
insl
sbb
out
cmp
push
mov
dec
inc
xchg
lea
repnz
sar
jns
xchg
pop
inc
addl
jae
cltd
in
testb
outsl
nopl
xchg
xchg
add
jmp
jae
mov
jle
sahf
mov
je
and
popa
in
rcrl
dec
icebp
mov
jno
adc
pop
xchg
push
jp
inc
std
inc
dec
pop
or
aaa
sub
lods
les
lods
sbb
pop
or
push
shll
jl
sbb
mov
test
pop
outsb
dec
fldl
inc
dec
inc
cltd
rorl
nopl
loopne
lret
cltd
inc
adc
push
xor
jle
push
mov
mov
jae
rcll
xor
shrl
data16
push
mov
lods
or
sub
call
negl
es
mov
fmull
aad
pop
aad
clc
loop
sub
mov
and
push
rol
adc
push
add
mov
test
insb
xchg
jg
leave
cmp
cld
add
and
xchg
mov
fs
jp
xor
pop
pop
jecxz
xchg
bound
jnp
insl
sbb
gs
inc
stc
and
sti
inc
inc
lahf
or
loope
vmread
cmpsb
xchg
cmp
jb
mov
out
push
negl
inc
push
cmp
xchg
mov
orl
lret
clc
notb
mul
pop
cmp
lcall
xor
jmp
mov
imul
mov
mov
mov
jge
clc
mov
or
adc
scas
inc
inc
or
and
stos
xchg
mov
pushf
outsb
push
sbb
pop
mov
mov
dec
sub
jbe
test
inc
nop
roll
hlt
dec
hlt
mov
in
xor
and
lret
xchg
push
push
into
leave
mov
flds
pop
mov
adc
imul
sbb
add
or
push
orb
xchg
jmp
xchg
add
jo
jl
push
push
push
push
jmp
dec
pushf
dec
mov
sti
lods
jmp
lret
or
xor
sub
inc
sub
cmp
cs
dec
dec
inc
cmp
sbb
fildl
lock
in
mov
std
rcrb
ds
add
clc
call
sub
icebp
cmpsl
out
jnp
mov
lcall
dec
push
jb
insb
mulb
mov
icebp
out
cli
loopne
mov
xchg
aas
sbb
sub
xchg
mov
adc
mov
in
insb
cmc
xchg
pop
mov
test
inc
sub
outsb
push
ret
adc
pop
popf
mov
pop
xchg
cli
jp
and
cmp
loop
shrb
cltd
mov
int
push
push
fidivrs
adc
faddl
loop
sbb
inc
sub
sbb
jle
iret
lcall
cmp
in
outsl
mov
xchg
mov
jge
dec
test
xchg
lock
cld
mov
cmc
jo
or
or
xchg
sarl
stos
dec
mov
fdivrs
pop
fidivl
cld
xor
cmp
aam
mov
iret
repnz
mov
testb
dec
dec
mov
sbb
int
sbb
fwait
or
stos
jo
lock
rcrl
and
sbb
in
mov
mov
repnz
adc
rcll
mov
cmpsl
popa
int
or
cmp
jbe
scas
xor
adc
orl
out
inc
scas
dec
pop
int3
jo
push
add
out
leave
or
frstor
cmp
out
jmp
cmp
loopne
je
gs
add
bsr
jg
dec
dec
fisttps
cmp
sub
test
adc
lods
mov
push
jecxz
icebp
rolb
and
lret
xor
dec
mov
or
sbb
or
and
movsl
jns
imul
shr
ja
std
outsl
mov
loop
cmp
adc
add
pop
and
or
cmp
pushf
test
add
pop
lea
mov
repnz
into
not
fisttpll
lret
movsb
cmpsb
xor
sbb
jmp
scas
or
xchg
mulb
idivb
js
inc
mov
xchg
sub
mov
mov
jbe
sub
mov
xor
mov
cli
shr
mov
addr16
add
xor
mov
jbe
popa
aas
cwtl
add
sub
xchg
outsb
mov
jb
out
cmp
lahf
stos
out
cmp
mov
jp
jb
in
test
adc
jge
lds
ja
jo
stc
aas
inc
mov
cmpl
jg
add
cwtl
cmp
and
adc
sbb
sub
pop
es
lret
mov
lods
stos
add
das
aad
ss
or
std
sbb
add
sub
lret
push
sub
or
shlb
js
les
xchg
inc
mov
mov
mov
dec
fidivl
pop
mov
imul
mov
xchg
cmp
mov
cmpsl
mov
or
sub
ss
pop
cmp
or
dec
xchg
and
dec
jmp
mov
mov
or
mov
push
mov
imul
out
fistpll
xor
aas
cmpsl
imul
test
bound
push
lods
js
mov
sub
sub
cmpsb
push
push
fsubrl
and
in
xchg
mov
pop
mov
mov
or
adc
inc
fdivl
mov
xor
ss
int
dec
addl
push
lds
push
imul
xchg
xchg
cmc
sbb
cmc
mov
clc
rolb
lcall
lret
addr16
in
sub
ret
and
pop
add
push
les
xor
cmp
adc
lcall
adc
std
push
pop
loopne
imul
cmp
mov
and
adc
test
xchg
jb
jbe
repz
jl
pop
push
sahf
pusha
inc
cmp
xchg
pop
xor
mov
jmp
sub
add
addb
or
divl
mov
loopne,pt
ds
mul
leave
cld
lret
jne
sbb
adc
pop
scas
jnp
xor
inc
dec
xor
fmuls
aad
adc
cwtl
in
cld
sub
inc
push
cmp
push
imul
out
dec
out
out
stos
ss
imul
cmp
pop
xor
add
inc
dec
dec
sub
scas
js
push
ror
push
cmp
pop
mov
movsl
iret
mov
js
inc
xchg
adc
es
cmpsb
in
add
popa
popf
andl
jg
pop
in
popa
out
lcall
xchg
leave
arpl
sbb
cmp
stos
scas
mov
xor
fcompl
adc
xor
or
inc
adc
stc
pop
xor
inc
lods
xor
cmp
add
js
add
ja
push
xorb
pop
mov
cmp
mov
and
nop
jae
jge
call
lahf
jmp
inc
xchg
dec
and
and
mov
stc
adc
and
cmp
shl
subb
push
or
cld
pavgb
sub
xchg
testl
pop
dec
mov
adc
dec
insb
cs
jge
mov
sub
cld
insl
mov
dec
mov
push
arpl
out
lods
adc
mov
mov
xor
inc
push
adc
cmpsl
pusha
xor
test
js
fadd
sbb
out
cmp
jbe
sbb
aad
stc
fiadds
inc
stos
jmp
pop
rcll
aam
lret
mov
rcl
outsb
in
pop
add
imul
ret
fstpt
push
dec
in
inc
mov
mov
or
aam
xor
sbb
mov
stos
xchg
test
std
xchg
je
pop
scas
hlt
sbb
pop
aad
pop
aad
mov
lds
lret
adc
or
cmpsl
push
sub
sbb
lods
lds
mov
mov
jno
push
or
and
or
imul
lock
aad
divl
jae
and
xor
testl
mov
enter
mov
pushf
sti
mov
or
or
xor
cmpl
add
test
mull
imul
lret
sub
sbb
les
jg
insb
dec
jl
popa
pop
mov
call
cld
xchg
mov
popf
push
ljmp
jne
outsb
aam
and
lcall
cmp
test
lret
not
mov
cmp
test
mov
stc
xor
push
push
sahf
test
out
stos
je
pop
cmc
addr16
fs
inc
cmc
push
test
or
pop
mov
mov
push
jecxz
into
dec
mov
pushf
es
lcall
push
cmc
jl
pusha
dec
gs
and
js
jns
fbld
jne
int
pop
or
loope
or
xchg
pop
insl
fisubs
test
cmp
test
shlb
std
fs
jmp
or
dec
dec
inc
std
add
sbb
mov
in
addr16
es
stos
test
jb
icebp
subl
movsb
mov
leave
sbb
sub
pop
push
mov
xlat
das
fsubs
mov
pop
mov
jle
xor
outsb
ja
inc
mov
cmp
out
shll
shr
add
jecxz
add
xchg
xlat
xchg
loop
rclb
lods
ret
sbb
xor
cmp
test
adc
jle
pop
scas
arpl
jmp
fdivr
mov
mov
lret
insb
push
push
cmp
in
ret
add
pusha
lcall
mov
xchg
enter
lcall
cld
pusha
push
movsb
jg
or
xor
fildl
or
mov
inc
xchg
add
xchg
cmp
insb
jl
and
insb
mov
icebp
bound
fistpl
test
push
xchg
push
jle
ds
lahf
push
out
pop
mov
iret
clc
xlat
push
and
sahf
test
test
popf
mov
push
cmp
xor
pop
xor
mov
fiadds
xchg
jnp
outsl
aad
cmp
pop
lcall
cs
dec
in
std
lret
adc
mulb
cld
sub
fst
faddp
idivb
cmp
je
mov
mov
push
mov
lods
jnp
ja
xor
add
jmp
fcoml
dec
jg
xchg
mov
mov
js
rcpps
mov
adc
pop
jbe
jns
into
popa
xchg
jo
popl
stc
lahf
inc
adc
lods
addr16
std
cwtl
int
or
jg
add
push
mov
jnp
testl
jb
es
nop
add
pop
mov
scas
push
jnp
sahf
outsb
jne
outsb
cmp
mov
mov
andb
xor
minps
jo
std
push
mov
ja
inc
dec
add
pop
fsubs
roll
mov
int3
and
clc
xchg
hlt
imul
lcall
pop
xchg
lds
jne
push
lcall
incl
rcl
roll
xor
decl
jmp
dec
adc
jns
add
call
mov
aam
mov
dec
sbb
jno
cmp
mov
addl
sub
mov
jmp
and
shl
jmp
insb
push
stos
xchg
popf
js
mov
lock
clc
xor
stc
pop
push
rcl
rorl
mov
in
fs
stc
cmpsl
push
les
jp
imul
jae
rcll
jne
pushf
in
jle
pop
mov
cmp
mov
ret
js
adc
pop
repnz
mov
xor
bound
jnp
mov
fdivs
gs
jmp
pop
stc
xchg
int
ret
jecxz
lret
sub
xor
jl
sub
mov
lret
repnz
enter
jge
xor
add
dec
jle
iret
cmp
pushf
nop
call
mov
fwait
jmp
add
adc
ljmp
aaa
cmp
xor
inc
dec
stos
inc
in
or
jns
or
lahf
and
mov
push
cmp
adc
dec
test
mov
dec
lods
lret
outsl
cltd
jecxz
pusha
xor
sub
shl
xor
mov
and
add
dec
inc
lods
push
or
add
mov
lods
jo
mov
out
mulb
jo
dec
pop
loopne
lahf
jb
sbb
iret
popf
xor
insl
and
enter
push
dec
aam
dec
pusha
inc
sub
mov
stos
inc
inc
in
movsl
jno
jbe
xorl
aas
cmc
xor
mov
xchg
lock
inc
dec
ds
ds
cmpsl
sub
imul
adc
dec
dec
pop
adc
xchg
aad
adc
mov
xor
or
sub
lcallw
int
mov
cltd
mov
sbb
fcmovnu
fistps
or
insb
mov
cmp
mov
push
mov
adc
sub
into
xchg
test
jns
sub
clc
addr16
dec
jae
lea
stc
ficoml
adc
addb
jnp
pop
lret
mov
mov
add
or
in
sbb
ret
push
xchg
cld
mov
sub
cmpsl
jae
test
add
xchg
add
and
fistpl
adc
mov
add
arpl
fs
ror
dec
out
mov
mov
dec
icebp
std
push
jnp
aas
push
mov
popf
cli
jecxz
fwait
mov
rclb
pop
adc
push
jle
out
lahf
or
in
dec
fdivs
das
mov
pusha
xchg
mov
add
ficompl
int3
add
push
sub
roll
mov
lret
enter
fistps
cld
or
xchg
fcmovbe
ds
outsl
and
nop
pop
stc
inc
enter
lea
mov
dec
out
xchg
ret
jmp
mov
dec
popa
clc
mov
or
sub
inc
ffree
adc
nop
xchg
sub
iret
fs
mov
icebp
lock
loopne
out
and
mov
xchg
icebp
gs
mov
inc
cmpsb
lahf
xor
shrb
cmpsb
popf
xchg
sti
add
test
movsb
cmc
pop
pop
and
push
xchg
iret
xor
push
lcall
ds
xor
adc
mov
aaa
ljmp
nop
in
mov
fnstsw
int3
repnz
lahf
xchg
adc
xchg
pusha
fistpll
mov
fistl
inc
mov
pop
sbb
lods
mov
in
xchg
out
sub
add
mov
dec
cli
jl
notl
inc
sbb
fnstsw
jmp
mov
popf
jmp
sbb
or
dec
lahf
jmp
fsubl
jbe
xchg
jno
popf
jmp
fimull
jl
hlt
jge
int3
sub
test
jecxz
and
mov
clc
jg
movsl
dec
dec
pop
sub
fsubp
mov
lea
pop
mov
cmpsb
ret
mov
adc
push
xor
rolb
aad
or
push
xchg
test
mov
add
xchg
cmpsl
mov
or
movl
aad
cs
daa
leave
jecxz
inc
pop
add
fiaddl
inc
sbb
stc
inc
mov
orb
jle
outsl
in
adc
rcrb
sub
int
mov
sahf
mov
pop
int3
pop
sbb
jne
sub
sarl
test
xlat
rorl
push
inc
mov
repz
lahf
cld
jne
into
jl
or
movsb
ret
test
es
mov
sub
mov
push
sub
shrl
leave
mov
arpl
xchg
leave
jmp
ljmp
ret
mov
jl
sti
mov
mov
es
jl
jno
inc
iret
int3
dec
add
sub
lds
xlat
mov
jge
pusha
rcrb
mov
push
mov
sarl
sub
mov
adc
jge
arpl
in
inc
pop
adcl
scas
adc
mov
adc
xchg
mov
fdivr
in
cltd
aam
adc
add
and
cmp
dec
sbb
cmpsb
add
mov
out
jmp
jne
test
mov
cmp
pusha
xor
push
std
into
mov
jp
fbstp
test
add
loopne
jae
adc
shll
fstps
sub
mov
out
fadds
call
fsubl
xchg
push
inc
aaa
jae
clc
cmp
cmc
mov
aam
pop
mov
mov
aad
outsl
loopne
das
fsubrl
add
popf
add
fidivrl
mov
xor
jle
cmc
xchg
xchg
xorl
mov
sub
mov
pop
mov
ret
add
cli
xchg
pop
push
lock
or
cmpsl
xorl
sbbl
pusha
ret
mov
sahf
lods
movsb
ljmp
xchg
mov
orl
rcl
ror
je
mov
roll
mov
neg
int3
addr16
sub
xor
dec
pop
lahf
lret
push
bound
scas
lods
lret
xor
int
in
cmp
mov
mov
lcall
data16
cld
imul
mov
stos
fstps
sbb
mov
push
mov
insb
fsubr
jns
dec
test
push
xor
hlt
cmp
mov
loopne
daa
fwait
and
inc
mov
xchg
push
mov
cmp
sub
hlt
cmp
fcomps
mov
cs
dec
cmpsl
sbb
inc
adc
cmp
pusha
arpl
test
add
test
mov
je
adc
insl
sub
sub
outsl
pop
icebp
lds
mov
addr16
xchg
mov
stc
cs
cmp
testl
jb
outsl
imul
cmp
test
je
xchg
repz
in
incb
nop
or
mov
das
sbb
add
or
jmp
jge
clc
stc
sbb
sbb
lret
je
mov
arpl
push
add
or
adc
jmp
out
push
rolb
add
jb
xor
lds
fs
lods
xchg
add
push
add
push
test
xchg
out
into
or
repnz
inc
mov
rcrb
sub
and
mov
stos
pop
mov
stos
dec
ja
out
sbb
test
push
shr
xchg
inc
fsts
movsb
insl
aaa
push
push
inc
add
jg
jge
insl
adc
pop
arpl
cltd
dec
xchg
stc
add
mov
dec
and
sub
gs
fbld
fmull
add
sub
mov
test
adc
ds
lcall
rorb
dec
sahf
rcll
mov
mov
test
mov
out
ret
mov
je
stc
leave
mov
jge
loopne
int
add
and
xchg
imul
inc
cmp
mov
xor
mov
jno
pop
out
enter
insl
shll
jae
cmp
push
test
cmp
and
aam
je
xchg
icebp
push
repz
int
outsb
inc
int3
stos
aaa
test
subl
adc
repnz
inc
clc
fisubrl
adc
aaa
mov
pushf
mov
out
in
out
dec
add
fcom
xlat
xchg
sbb
jns
fs
rcl
mov
or
jnp
loope
cmp
adc
jg
mov
ds
cmpsl
jecxz
jne
in
xchg
test
add
test
xor
stos
push
dec
lods
xor
push
lret
jge
push
int
xor
sar
shrl
lea
adc
adc
int3
jp
repz
stos
jnp
inc
pop
push
cmpsl
jbe
loope
xor
or
or
xor
push
hlt
mov
pop
aad
push
push
out
outsl
pextrw
adc
test
sti
shll
ret
xchg
dec
int3
nop
or
movl
lea
ljmp
add
pop
fdivr
xchg
push
les
out
dec
popf
fld
or
leave
jmp
mov
push
mov
push
hlt
dec
js
cmc
lret
mov
imul
fcomps
dec
adc
xor
inc
push
cmp
icebp
lock
pop
xchg
inc
sti
sub
adc
dec
mov
jle
add
sbb
and
pop
out
stos
fistpl
out
jb
mov
shlb
cmp
and
pop
les
xchg
stc
dec
xchg
aam
aad
xchg
and
cmp
outsb
rorl
imul
mov
leave
mov
repnz
add
ret
xor
aaa
push
movsl
pop
das
dec
add
sub
sbb
xor
cmp
int
repz
dec
addl
jmp
add
sub
out
jns
mov
outsl
lahf
mov
fiadds
notl
xchg
sbb
dec
mov
je
jnp
sbb
andb
sbb
roll
clc
mov
fsubl
cmp
jge
jb
dec
bound
and
mov
mov
cmpsl
lahf
daa
mov
fucomp
xchg
jl
dec
out
sub
arpl
add
aam
jnp
sahf
repz
push
cmc
ja
add
loope
sbb
addr16
adc
dec
jae
add
sbbl
shll
xor
insb
out
loope
lea
int
mov
lock
and
hlt
leave
sub
dec
jne
xchg
and
jle
xchg
adcl
scas
pop
lret
imul
xor
cmp
jne
xor
mov
je
pop
bound
cmpsb
in
shlb
cmp
mov
mov
loope
push
bound
inc
aam
ss
sarl
mov
xorl
or
inc
jnp
mov
mov
xchg
push
fldl
cmc
and
insl
fsubs
leave
or
dec
dec
movsb
pop
cmp
lcall
and
adc
mov
push
jp
add
fwait
insl
xor
or
ja
adc
js
lds
out
fdivrs
mov
loopne
jle
lret
jno
ret
test
mov
mov
pop
lock
sub
sbb
sbb
xor
stc
mov
jmp
dec
xchg
bound
movups
push
popf
or
enter
sbb
mov
adc
aam
adc
jge
mov
enter
pop
lods
adcl
movsl
pop
aam
adc
xchg
push
addl
lret
dec
ds
xchg
or
mov
loope
mov
inc
repz
lods
leave
lea
rcrl
hlt
in
xchg
sbb
push
addr16
cwtl
lahf
test
lods
js
out
pop
pop
inc
dec
mov
inc
lds
jb
mov
mov
rcll
mov
je
jo
in
std
sub
sub
add
mov
push
das
mov
aam
sahf
mov
and
dec
scas
xlat
jnp
fstps
pop
cmp
pop
std
push
sub
inc
or
mov
jo
iret
sbb
inc
pop
mov
sbb
sbb
test
push
xchg
mov
or
xchg
jae
pushf
cltd
mov
les
jp
xlat
out
adc
jo
sti
cltd
jbe
and
inc
movsb
or
xchg
push
xorl
adc
jae
adc
mov
push
or
pop
push
lds
rcr
test
loop
nop
jne
mov
mov
xor
xchg
mov
sub
ficompl
mov
mov
lods
rcll
test
adc
lret
pusha
fisubs
and
or
int3
push
pop
pop
push
sub
into
xchg
pandn
dec
lds
aaa
adcl
add
sbbl
pushf
xor
dec
int3
cld
mov
pop
push
and
inc
mov
movb
popf
xchg
cltd
mov
repnz
in
ljmp
sbb
shrl
lods
mov
jp
inc
jns
or
adc
cli
jp
ret
mov
jns
push
and
mov
popa
in
and
xlat
cmp
repnz
lds
aaa
or
xor
test
jp
xor
add
mov
xchg
in
adcl
mov
mov
mov
add
mov
loopne
add
cmp
mov
adc
xchg
fnstenv
test
add
dec
sub
enter
notl
mov
xchg
cmpsl
sub
xchg
push
and
test
das
push
dec
int
test
inc
dec
leave
sbb
fildll
jno
sahf
mov
and
adc
lcall
or
movsb
sbb
aam
aaa
inc
shr
into
jmp
shlb
arpl
pop
shrb
pop
xchg
sti
clc
mov
lcall
mov
mov
out
mov
jo
and
lods
lods
push
inc
movb
add
fcoms
adc
cltd
cmpsl
js
mov
mov
scas
and
movsb
add
xor
xchg
repnz
scas
push
enter
xchg
fbstp
add
sub
fiaddl
jl
or
in
arpl
jns
and
sahf
sub
pop
sbb
cmc
or
jae
cmp
jnp
loopne
xchg
inc
mov
cmp
xlat
add
jns
int3
lret
hlt
xchg
popa
xor
add
pop
lods
stc
mov
sbb
outsb
lock
push
mov
gs
imul
arpl
lock
pop
dec
pushf
scas
aaa
jp
sysenter
inc
nop
enter
mov
ljmp
xchg
cltd
add
mov
jbe
stos
sub
nop
js
inc
insb
jp
jbe
lods
adc
pop
int
imul
add
lock
aas
aaa
test
lcall
add
lret
sahf
stos
pop
cmpl
std
std
daa
cltd
rorl
jmp
fldenv
aas
add
jmp
xor
mov
dec
hlt
das
std
arpl
je
in
dec
dec
xchg
sahf
adc
insb
mov
cmp
cmp
addr16
lock
add
insb
arpl
scas
aad
lret
mov
or
rclb
cmp
pop
loopne
inc
scas
movsl
insl
testb
mov
repz
hlt
xlat
call
jns
das
dec
fstps
je
test
xchg
and
mov
call
mov
fcomps
pop
lret
and
pop
in
cmp
test
test
and
cmpsb
mov
rol
mov
mov
nop
imul
jne
and
mov
jg
push
jns
mov
subl
rorb
dec
scas
mov
pop
sub
repz
sub
ret
nop
mov
or
mov
mov
cmp
mov
mov
push
push
leave
xchg
shrb
jge
push
sbb
iret
rcrl
cmp
mov
fwait
stos
aam
xor
or
cmpsl
sarl
inc
inc
mov
rep
xor
cmpsl
add
cwtl
pop
loope
ljmp
xchg
dec
mov
inc
adcb
in
add
xchg
mov
mov
adc
sub
jmp
mov
or
fneni(8087
pop
testb
add
ljmp
and
subl
pop
ja
bound
cwtl
pop
mov
mov
sti
mov
sub
lock
sbb
std
sbb
fisttps
test
mov
sbb
test
aas
cmp
std
sub
lahf
stc
gs
mov
dec
cwtl
loopne
pop
mov
nop
in
push
ja
popa
rol
inc
inc
aam
push
rclb
mov
mov
mov
xchg
sarl
mov
add
or
xor
test
add
push
push
cwtl
lret
sbb
popf
mov
imul
leave
push
out
in
outsb
std
or
stos
mov
stos
bswap
mov
add
scas
mov
or
mov
in
xor
xchg
or
insb
test
clc
mov
jnp
or
daa
int3
fisttps
js
shll
add
shll
enter
dec
insl
das
clc
xor
sarl
cwtl
sbb
pop
dec
mov
mov
add
fnstenv
movsl
nop
jo
fsubrs
cwtl
xchg
sub
adc
jge
mov
inc
jo
ret
nop
jbe
and
cmp
xor
and
fsubrl
out
inc
outsb
addr16
mov
add
dec
call
add
rorb
fdivs
sub
pop
repz
push
clc
jo
in
out
and
push
nop
push
js
and
in
in
mov
jl
push
cwtl
std
xchg
dec
push
imul
lods
cmpsb
movsl
inc
subb
ret
cli
jno
jge
sbb
aam
add
and
enter
mov
dec
or
pop
xorb
loop
dec
jl
sti
rcrl
loopne
lods
push
jecxz
mov
popa
mov
sub
push
das
and
or
pop
jnp
repz
popf
addr16
adc
mov
cmpsl
mov
mov
dec
pop
out
loope
sti
lea
pop
push
std
inc
sbb
aam
push
lds
push
adc
inc
out
lods
xor
and
xlat
les
jl
gs
sub
mov
jne
pop
adc
in
addr16
jns
and
cmp
jmp
test
int3
xor
mov
xchg
cwtl
fstpl
mov
xor
jecxz
adc
mov
inc
in
jp
lahf
xchg
int3
push
and
js
fwait
jae
sub
push
jo
sbb
mov
pop
push
cmpsb
data16
and
ja
out
cli
aaa
ds
stos
jno
dec
add
stc
mov
jge
sahf
xor
mov
push
mov
xchg
cmp
insb
ror
adc
lods
ds
jp
cmpsb
xor
add
pop
dec
mov
mov
push
inc
push
dec
dec
sub
js
test
cmp
mov
sbb
int
outsl
xor
lret
sbb
cmc
sti
cmp
es
sbb
bt
sub
adc
cmp
jae
push
pop
ret
mov
mov
cmp
pop
push
inc
cmp
in
int3
rcl
xor
mov
popa
and
mov
enter
fnstcw
add
xchg
fdiv
sub
jl
dec
lret
imul
sbbb
xor
and
xor
dec
push
lock
mov
in
xor
int3
or
adc
imul
add
pop
jmp
ud0
jmp
pop
add
out
adc
leave
mov
lods
xchg
mov
pop
inc
lea
into
inc
mov
fsts
fsubp
sbbb
xor
cmpsl
cmp
mov
dec
test
fcomps
out
aaa
xor
push
push
xchg
fdivrl
loop
mov
test
push
invd
les
cmp
addb
dec
push
jge
enter
movsb
insb
inc
push
or
cmp
outsl
std
scas
js
adcl
xchg
jmp
add
lcall
jge
shlb
jmp
add
in
pusha
pop
jns
inc
mulps
rclb
lock
fstp
cmpsb
jmp
shrl
lahf
xor
mov
out
xor
dec
test
xchg
adc
pop
int3
mov
mov
or
cltd
mov
outsl
fildl
sti
ja
or
cmpsb
jecxz
sbb
ljmp
out
jl
and
lret
movsb
in
cmc
jle
sti
cld
pop
aam
inc
sahf
dec
insl
test
mov
fsub
jl
sarw
xchg
push
out
neg
pop
insl
mov
push
mov
in
pcmpeqb
pop
sub
sti
xor
xchg
mov
xchg
mov
jp
xchg
stos
mov
cmc
pop
div
lods
mov
inc
lods
pop
push
mov
mov
int
add
or
jae
xor
cmp
dec
xchg
outsb
aad
addr16
pop
sbb
mov
out
lret
cmc
ds
movsb
outsb
lcall
or
je
and
jl
push
scas
adc
mulb
int3
ja
xchg
dec
fidivs
mov
and
mov
andl
inc
stos
popa
sti
pusha
std
in
push
xchg
daa
pop
xchg
cmpsl
mov
mov
push
jnp
scas
cwtl
or
cmp
movsb
dec
leave
push
sub
sbb
mov
aam
test
or
aam
mov
cmp
imul
inc
or
lret
adc
dec
jl
lret
cmp
pop
insl
adc
fsubl
fdivrl
outsl
mov
dec
arpl
inc
adc
push
or
lea
pop
add
insb
iret
dec
mov
incb
inc
adc
das
mov
test
ss
and
inc
cmpsb
int3
loope
cmp
loopne,pn
mov
add
out
xchg
dec
xchg
xchg
les
and
mov
aaa
sbb
bound
dec
imul
out
rcl
jne
sar
xchg
push
mov
mov
jmp
repz
mov
imul
or
push
or
jmp
ffreep
sti
inc
pop
orb
jp
mov
jge
sbb
cs
jnp
ret
mov
pop
stc
xchg
sbb
popf
or
jmp
insb
leave
fnsetpm(287
mov
mov
pop
or
fisttps
jb
dec
jmp
es
sti
adc
jno
mov
lcall
adc
lret
xor
mov
or
xlat
xor
fwait
das
test
int3
pusha
test
popa
mov
mov
jo
sub
fcmovnu
and
fcmovbe
aad
call
pusha
or
cmp
in
adc
fldenv
pop
push
mov
xchg
outsb
sub
mov
pop
jp
adc
or
add
dec
cs
mov
xor
mov
in
mov
js
in
int
aad
fldenv
dec
fbld
mov
in
inc
outsl
shrl
mov
xchg
popa
sub
or
es
mov
push
out
jne
jbe
ss
adc
lods
pop
popf
mov
in
mov
cltd
mov
adc
lret
movsb
xor
arpl
gs
out
adc
out
pop
pop
sbb
sbb
js
shlb
sbb
pop
pusha
aam
into
xor
mov
inc
push
gs
sub
popf
ljmp
movsl
mov
out
mov
dec
mov
cmp
sbb
mov
cli
loopne
sbb
shll
std
sub
arpl
sbb
sarl
pop
fistps
fwait
sahf
ret
and
sub
js
mov
mov
fwait
cmp
sbb
xchg
mov
xchg
dec
or
ss
and
lods
inc
mov
mov
lret
in
or
xchg
lea
jl
ret
xor
pop
sarl
xlat
imul
cmp
or
icebp
push
mov
sub
loopne
xchg
mul
sti
jg
mov
or
pushf
call
jbe
adc
pop
inc
sbb
mov
pushf
outsb
mov
bound
mov
xchg
sbb
mov
and
xchg
xlat
mov
cwtl
iret
push
es
outsb
xchg
fbld
dec
clc
imul
cld
dec
pusha
ljmp
frstor
ljmp
leave
dec
movsl
jns
pop
xchg
push
xor
loopne
mov
mov
pop
mov
fisttpl
xlat
addr16
add
outsl
pop
dec
xor
movsl
xchg
mov
int3
push
out
sbbl
push
scas
sbb
push
outsb
cmc
aas
sbb
cmpsb
rorb
hlt
add
into
cmp
sub
stos
shr
mov
mov
movsb
xor
ror
loope
out
mov
aas
icebp
lock
fistpl
mov
cs
jb
xor
test
xchg
push
repz
jnp
movsl
sbb
mov
ljmp
cmp
arpl
xchg
adc
fdivrs
pop
cmp
jg
jge
bound
stos
xor
inc
pop
movsb
jb
rcll
jb
add
jnp
push
push
add
and
push
adc
into
dec
mov
loopne
jl
mov
cmp
xor
pop
cmp
outsb
mov
lods
pop
adc
push
cli
loope
nop
add
dec
mov
arpl
push
adc
shll
push
aad
movsl
sbb
or
lods
mov
sti
dec
mov
mov
sub
repnz
and
imul
push
push
int3
aad
inc
pop
lahf
les
shr
mov
subl
scas
pop
pusha
inc
fucompp
dec
dec
imul
add
div
mov
push
jae
pop
dec
bound
out
int
adc
or
test
shlb
fwait
nop
shll
sti
insl
pop
mov
incb
loop
or
popf
aam
push
mov
ja
dec
mov
adc
sbb
ljmp
sti
mov
cmpl
ljmp
pop
adc
mov
movsb
fstps
pop
lcall
pop
mov
sub
jle
mov
and
fs
mull
stos
mov
popa
jno
ret
dec
cli
jl
shll
lods
sub
add
das
adc
dec
push
fwait
sbb
push
dec
adc
jp
shr
and
push
jne
push
jp
mov
mov
in
pop
sbb
std
dec
rcll
ds
sarl
sub
scas
push
cmp
add
jecxz
and
das
mov
mov
xor
xchg
mov
pop
pop
in
or
mov
cmp
fisubl
jle
lods
mov
or
sbb
xrelease
iret
cld
push
std
xor
imul
pop
unpcklps
and
imul
mov
inc
adc
leave
rolb
sub
pop
int
sub
mov
insl
vandps
cmp
mov
add
push
pop
jnp
mov
push
mov
add
ljmp
jo
xchg
push
xchg
cmp
jge
pusha
dec
mov
cmc
cmp
mov
shrl
jg
jnp
and
cmp
idivl
std
lret
aaa
lret
or
adc
loopne
or
aas
jecxz
or
or
push
mov
or
adc
mov
pop
sub
push
or
lahf
shll
cwtl
aad
push
seta
add
adc
ja
lock
mov
push
pusha
add
jns
xchg
pop
mov
adc
push
mov
jg
leave
call
sub
fucomi
test
xorl
mov
cmpsb
mov
ret
dec
xchg
cmpsl
xchg
push
adc
dec
pop
mov
cwtl
pop
jecxz
add
cmovno
int3
scas
pop
mov
fisttpll
jl
fildll
je
or
pop
out
test
adc
sbb
sti
xor
movsl
or
push
out
das
mov
loop
add
daa
or
and
jg
sbb
int
pop
xor
sbb
movsb
cld
dec
push
jmp
pop
mov
pop
mov
pop
dec
push
mov
shrb
int3
and
add
or
add
pop
ljmp
xchg
insb
pop
dec
in
adc
fldenv
lcall
xchg
mov
push
sub
orl
xor
sbb
mov
cmp
rcrl
or
mov
je
pop
push
lock
mov
lcall
jne
aaa
je
subb
dec
mov
rorb
ljmp
iret
fcmove
into
insl
jae
popa
sbb
sbb
inc
std
mov
fmuls
out
loop
out
jns
dec
popf
mov
mov
loope
adc
aas
adc
cmp
fdivl
inc
cli
lret
push
out
fdivrs
mov
add
std
dec
rcl
mov
dec
test
xchg
add
add
dec
in
int
fwait
mov
fisubl
clc
push
push
shrb
lea
mov
imul
pop
andl
aas
into
jo
xorl
sbb
sub
aam
push
add
movsl
lock
push
xchg
shrb
neg
add
test
fcmovnbe
jne
mov
xor
adc
dec
dec
daa
pop
insl
push
or
push
dec
daa
add
bound
hlt
pop
rorb
call
or
in
rcll
popa
xlat
xor
sub
xchg
arpl
inc
sbb
aas
sti
faddp
xchg
xor
rolb
xor
dec
imulb
xor
andb
imul
xlat
loopne
or
push
fdivl
pop
stos
sub
xchg
and
mov
sahf
jge
mov
mov
mov
imul
and
js
aaa
out
pop
ficomps
pusha
lcall
xor
add
xchg
mov
jne
ret
add
or
inc
mov
fdivrs
nopl
mov
sub
inc
mov
lods
mov
test
jnp
jle
lods
lods
and
lahf
and
mov
sbb
mov
adc
lahf
scas
pop
imul
cli
inc
add
jl
inc
and
arpl
add
jge
movb
mov
call
loope
add
test
pusha
fisubrs
mov
xchg
xchg
push
scas
mov
outsl
mov
in
sbb
fbld
sub
mov
iret
les
mov
dec
stos
ret
aad
sub
clc
mov
dec
pop
sub
in
lret
cli
cmp
lret
ret
xchg
in
inc
adc
hlt
jae
fs
outsb
clc
jb
mov
cmp
xor
inc
mov
adc
push
sub
and
sbb
jns
jecxz
out
or
enter
cltd
sti
jne
dec
add
les
lcall
repz
dec
mov
test
adc
popa
hlt
out
jp
jo
cmpsb
pusha
jp
dec
sbb
or
lods
cltd
mov
test
gs
subw
int
xchg
push
dec
test
cmp
arpl
and
xor
bnd
std
dec
push
pop
cmp
fmull
and
lahf
sbb
mov
pop
push
and
mov
mov
xchg
xor
hlt
mov
mov
shrb
sahf
or
lods
cmp
out
sti
jb
cmp
or
jae
jmp
or
xchg
xor
jno
aaa
insb
fimull
mov
ficomps
mull
stos
sub
dec
pop
sbb
sbb
loope
in
xchg
sub
call
cmp
jno
out
call
sub
in
int3
add
in
mov
call
add
or
dec
mov
fldl
xor
int
xor
mov
shrl
fdivr
fidivl
mov
sub
scas
pop
negl
xor
fdivl
loopne
push
in
sub
xor
fistl
fildl
add
add
loop
mov
enter
loopne
jbe
imul
pop
icebp
loop
mov
into
sub
mov
mov
adc
int3
xor
inc
nopl
cmp
and
push
mov
in
xor
test
fimuls
frstor
and
and
adc
sub
ds
sbb
dec
xchg
mov
jne
lret
pop
push
rcrb
xchg
cmp
js
xchg
mov
call
fldl
pop
jo
int3
gs
adc
pop
movsl
js
dec
test
add
adc
sbb
shll
stos
push
jbe
ds
dec
dec
xor
adc
mov
in
and
leave
xchg
mov
xor
dec
imul
into
sbb
fnsave
pop
arpl
cmp
push
rol
leave
and
aad
cmpsb
std
insl
adc
pop
adc
or
xchg
arpl
das
dec
xchg
mov
cld
sbb
mov
inc
pop
pop
xchg
aas
push
mov
sub
je
ret
repnz
mov
xor
popf
shll
popf
ficoms
jg
xor
push
les
pop
push
rclb
daa
xor
add
jmp
sbb
test
or
jmp
mov
xor
insb
mov
mov
popf
lcall
sub
fistps
dec
sbb
loope
xchg
aas
fwait
push
in
clc
jae
mov
mov
aas
pop
leave
and
push
ret
shl
inc
pushf
imul
movsb
icebp
daa
lea
test
cmp
xchg
repz
xor
nop
subl
test
rclb
in
inc
call
mov
xor
into
rcll
xor
push
mov
and
mov
and
xchg
insl
mov
pop
push
sar
push
adcb
out
stos
andb
in
pop
imulb
sbb
es
fisttpll
mov
cmpsb
push
sub
xchg
jbe
sub
aad
pop
mov
mov
fcoms
mov
enter
jge
or
and
push
inc
mov
inc
pop
cmp
lret
out
out
in
cs
sbb
push
push
subb
arpl
inc
dec
push
xor
in
push
dec
outsb
aam
pusha
repz
sti
mov
xor
mov
jne
mov
inc
fcmovbe
or
and
ret
out
xlat
cwtl
adc
adc
enter
test
jae
mov
pop
test
fwait
cmp
xlat
int
xor
mov
xchg
int
sbb
out
testl
mov
pop
mov
push
dec
cmpsl
push
testl
popa
aaa
js
pushf
arpl
test
jns
rcl
push
leave
or
jo
arpl
mov
imul
push
mov
fldcw
cld
je
outsb
dec
xchg
outsb
mov
test
xor
pop
push
lret
enter
lret
enter
sti
imul
mov
stos
rcr
into
push
or
mov
call
jae
sbb
rolb
adc
lods
shlb
xchg
sbb
stc
jae
shrb
ret
xor
xchg
mov
push
test
cli
cmp
cmpsl
inc
pop
mulb
jb
push
or
mov
sbbl
jne
movsb
lods
dec
outsb
or
mov
sbb
outsb
push
dec
fisttpl
les
lods
loope
cld
and
inc
cmpsl
int3
test
cmp
dec
inc
lock
xlat
cmp
stc
insl
xchg
lret
jae
push
inc
sbb
jo
arpl
gs
pop
push
jp
add
lock
mov
or
icebp
xor
insb
inc
jmp
mov
inc
out
add
aaa
movsl
fwait
cmc
pop
lahf
push
xchg
pushf
out
xchg
mov
iret
push
rcl
sbbl
mov
pop
stc
jg
mov
xchg
aas
mov
movsl
pusha
xchg
xor
repz
push
inc
xchg
pop
sahf
dec
dec
cmp
sti
jns
pop
xor
insl
push
lds
scas
adc
jo
cwtl
dec
aam
enter
push
divb
iret
dec
fs
bound
xor
jecxz
popf
xchg
cmp
lds
adc
fstpt
sti
add
push
lea
mov
popf
xchg
popa
xor
jle
pop
loope
cmpb
leave
jg
repz
pop
gs
mov
andl
mov
testb
insl
dec
pushl
fwait
lods
xor
inc
mov
enter
insb
mov
idivb
xor
sub
shlb
xchg
jns
mov
cmp
push
or
add
xchg
aaa
pop
jbe
jge
pop
stos
jmp
xor
sub
test
sbb
jnp
sbb
jp
icebp
out
pop
fadds
push
iret
adc
cld
imul
mov
mov
mov
dec
xchg
arpl
xchg
lea
out
push
or
push
fistpl
mov
call
fcmovnb
sahf
movsb
sub
push
in
inc
fcompl
insb
adc
lods
dec
nop
aam
rorl
cmp
movsb
adcl
xchg
or
jmp
mov
fistl
ret
pop
add
fwait
jl
rorl
mov
push
cmp
mov
lods
push
insl
and
mov
cld
mov
sub
ja
gs
jg
std
lcall
cmp
in
sti
inc
inc
out
std
std
add
data16
lahf
aad
loope
ljmp
sbb
pusha
out
daa
mov
aaa
add
xor
jo
lods
mov
xchg
mov
mov
sub
xchg
mov
aaa
push
stos
xchg
jp
jmp
std
jmp
lcall
xlat
jmp
shrl
inc
mov
int3
stos
xor
stos
lret
or
push
push
mov
jne
mov
mov
popl
cmp
je
pop
mov
mov
add
cmp
into
mov
xchg
adc
lock
mov
fmuls
xchg
and
mov
in
fnstsw
add
cmp
gs
add
int3
bound
jbe
ss
rorl
lock
mov
or
ret
push
xchg
adc
dec
jecxz
push
out
pminsw
push
xor
mov
or
mov
dec
cs
out
into
push
and
jecxz
out
xor
ret
lds
sti
ret
fbstp
and
mov
cwtl
jl
repnz
and
sbb
mov
mov
test
sti
push
stc
xor
aad
bound
mov
jp
in
pop
mov
mov
and
mov
cmpsl
push
negl
jo
fstpt
mov
sub
in
out
dec
jecxz
ds
or
xor
aaa
out
mov
mov
data16
inc
and
les
cli
add
rcll
arpl
movsl
push
cmp
sbb
xchg
push
inc
jle
insl
push
dec
mov
push
push
aas
in
mov
and
pop
test
cltd
sbb
push
push
jbe
mov
xor
push
xchg
ss
sbb
fisttps
and
gs
jecxz
test
or
push
movl
sbb
mov
fbld
sub
fidivrs
shrb
dec
push
lea
popf
fbstp
inc
scas
imul
mov
outsl
arpl
ds
scas
sub
mov
sbb
jg
mov
repnz
inc
cmpsl
fwait
cmp
je
call
pop
add
xchg
sbb
xor
or
lcall
ds
inc
enter
shl
mov
lret
addb
xchg
add
xchg
into
cmc
xlat
imul
jl
xchg
pusha
lcall
hlt
and
and
jmp
mov
out
ljmp
xorl
outsl
pop
push
ffree
or
popl
push
stc
aad
aad
or
or
and
pcmpgtb
mov
fstpl
sar
push
decl
mov
inc
iret
lods
or
xchg
out
scas
mov
cwtl
mov
cmp
and
enter
rol
aad
xor
cld
fsubs
sub
pop
push
out
cs
dec
and
add
mov
nop
or
push
addr16
dec
adc
movsb
inc
int3
mov
inc
push
fwait
sbb
mov
pop
add
mov
sbb
sbb
sbb
jbe
mov
sub
lahf
fucom
cmp
or
stos
add
xor
or
adc
or
ret
jge
pop
jmp
les
pop
aam
inc
xor
shlb
hlt
bound
ss
into
mov
sbb
arpl
popf
xchg
nop
push
adc
sbb
aam
pop
loope
mov
jb
dec
sahf
sahf
bound
cld
lock
jmp
cmp
jmp
inc
arpl
pop
test
push
daa
mov
inc
jne
outsl
jp
ljmp
sub
stos
lcall
or
sub
xor
in
jge
xor
popa
pop
pop
cmc
mov
and
add
pop
pop
je
dec
jnp
sbb
adc
push
std
je
xlat
data16
xchg
push
pop
mov
or
test
sbb
scas
jbe
shll
js
subb
insl
add
add
cmp
cmpsl
push
lods
ror
xchg
js
xchg
xchg
inc
mov
push
cmpsl
inc
fildll
mov
pop
dec
daa
xchg
imul
stos
enter
lret
inc
add
and
mov
adc
push
adc
imul
mov
es
and
mov
popa
jge
mov
and
into
aas
in
dec
inc
pop
or
xchg
jae
dec
and
sub
in
or
push
iret
arpl
out
bound
pop
in
inc
mov
out
pop
push
in
add
adc
stos
outsb
jl
stos
mov
inc
addb
shlb
mov
and
rcl
cmp
dec
shrl
adc
imul
xchg
push
cld
mov
jno
sub
mov
lock
mov
cs
shll
test
mov
sbb
sbb
mov
and
mov
or
jle
push
dec
jmp
cmc
xor
shrl
cmpsw
mov
lcall
xor
stc
adc
cmp
into
mov
les
jae
and
outsb
mov
loop
mov
jg
cwtl
pop
sahf
es
adc
sahf
outsb
out
jge
mov
ja
jo
dec
cwtl
aaa
pop
jns
pop
mov
adc
xchg
sbb
mov
jo
test
pop
push
or
outsb
xchg
adc
cld
cmpl
or
scas
popf
pop
mov
sbb
lcall
sub
int3
xchg
out
xor
lret
int3
xchg
in
pop
clc
jns
sub
sahf
scas
mov
mov
and
movsl
movsb
mov
daa
or
sub
xchg
mov
jle
pop
test
and
push
push
jp
ret
test
aas
in
pop
pop
sbb
mov
dec
inc
dec
cli
xchg
jle
or
jbe
scas
push
mov
fcomps
xlat
push
pushf
call
mov
mov
orb
dec
test
dec
hlt
jecxz
out
mov
cwtl
andb
mov
sahf
adcl
add
popa
les
addl
inc
cmc
and
cs
mov
pop
jns
ss
xchg
mov
fsts
sub
addb
push
lods
push
xor
mov
enter
jmp
cmp
insl
inc
sbb
pop
adc
pushf
xor
pop
xlat
xor
sub
jns
aam
push
std
mov
inc
pop
in
push
lcall
dec
xchg
xchg
sub
lods
adc
push
inc
mov
inc
gs
pop
dec
jne
pushf
jae
adc
shl
cmpsl
pop
pop
mov
shld
sarb
jl
stos
hlt
pop
xor
aam
push
clc
adc
shlb
cmp
bound
add
in
mov
in
test
mov
inc
add
mov
mov
push
inc
movsb
loopne
jp
xor
mov
imul
mov
pop
outsl
lret
sbb
mov
mov
mov
aas
jns
push
in
dec
in
rorl
aas
add
cmpsl
xlat
jne
movsl
clc
mov
prefetch
cmp
stos
or
insl
and
int
xor
imul
int3
xlat
ret
sub
sbb
mov
mov
bound
notl
xor
mov
mov
cmp
leave
aaa
outsb
adc
xchg
or
call
adc
ljmp
push
loop
sub
clc
push
cs
movsb
xorb
pusha
call
aad
es
test
je
les
add
mov
mov
mov
out
xor
jb
adc
add
jnp
aas
add
shrb
clc
in
imul
push
mov
sub
pop
aam
pop
mov
adc
mov
lcall
andb
jl,pt
addr16
xchg
ja
in
scas
inc
pop
aaa
dec
test
adc
add
xchg
inc
arpl
push
nop
hlt
dec
jno
cld
lcall
cli
sub
add
lret
push
shlb
cmpsl
xchg
inc
stos
iret
sub
pop
add
jbe
icebp
mov
sbb
rcll
sub
data16
iret
adc
push
lods
sahf
mov
je
adc
lea
cmpsl
mov
aam
dec
jp
sub
idivb
jl
test
bound
lds
jecxz
mov
fcmovne
cmpsl
insb
lret
xchg
shl
or
and
push
pop
or
fcmovb
ret
aam
mov
xchg
xor
push
jno
mov
les
or
xchg
pop
push
mov
fldt
push
fadds
pop
movsb
ss
ja
ds
sti
sahf
pop
test
mov
inc
xor
add
adc
or
mov
adc
shll
push
jnp
xchg
sbb
and
push
pop
jae
sbb
imul
inc
pusha
or
nop
ror
in
ljmp
pop
add
mov
nop
js
xor
mov
mov
inc
xchg
scas
dec
xchg
loopne
mov
mov
stos
push
icebp
push
or
icebp
movsl
adc
adc
stos
push
dec
into
repnz
ljmp
adc
loope
add
pop
roll
push
jne
ret
mov
icebp
repnz
sub
mov
mov
mov
mov
pop
mov
pop
mov
out
mov
add
or
dec
or
daa
arpl
aad
dec
sub
dec
fld
fcompl
adc
sbb
xor
pop
mov
in
movl
mov
push
test
cmc
add
and
dec
dec
popf
test
lret
xor
jecxz
jno
repnz
xchg
insb
clc
mov
test
jno
or
scas
les
adc
mov
sahf
sub
fld
jae
dec
jno
imul
cmpsb
adc
add
movsb
mov
inc
test
jecxz
sti
inc
or
cmpsb
scas
or
outsb
popf
inc
scas
dec
outsl
pop
jnp
xlat
stc
leave
ja
mov
hlt
icebp
jae
xor
jmp
leave
out
insb
jae
je
shrl
jae
jb
xor
xor
out
lods
nop
add
sbb
popf
call
shll
dec
shrl
pop
ja
push
mov
and
inc
cwtl
jae
lds
js
sub
jge
aas
fsubp
and
test
mov
push
sbb
outsb
mov
sbb
mov
ret
inc
mov
sub
pop
mov
aad
sbb
pop
pop
mov
cld
aaa
jp
shll
in
mov
jg
das
xlat
fbstp
enter
dec
cltd
pop
ficomps
pushf
push
lods
loopnew
dec
je
dec
lret
mov
dec
sub
adc
aam
add
cmpsb
mov
scas
gs
jg
pop
and
jl
loopne
in
mov
leave
imulb
lret
jae
fadds
push
dec
dec
rol
stos
mov
pop
mov
jl
aad
xor
jo
or
add
fildll
bsf
mov
sahf
dec
movsl
pop
xor
je
sahf
sub
mov
divb
dec
lds
cld
xor
mov
pop
dec
mov
dec
cmp
out
dec
bound
loop
mov
cmp
jnp
xchg
in
fcomps
cmpsl
fstpt
adc
das
mov
sbb
inc
les
outsl
syscall
mov
add
xchg
xchg
aad
sbb
in
jbe
mov
sbb
mov
dec
inc
outsb
mov
xchg
jg
mov
sbb
jne
mov
mov
enter
xor
insb
nop
xor
imulb
ret
das
or
xchg
jl
jns
out
cmp
dec
lea
lock
loope
insb
xor
rclw
xlat
dec
cmc
fadds
imul
and
cmp
es
sub
sbb
imul
pop
xchg
or
aad
pop
rol
pushf
pushl
xlat
pop
fimull
mov
and
mov
cmp
mov
fnsave
iret
xchg
stc
add
jg
push
into
aam
inc
out
push
mov
shr
jno
cltd
jg
int
inc
stos
mov
fidivs
mov
inc
aas
lods
loope
leave
lods
jg
sub
rolb
mov
inc
fucomp
sbb
les
call
sti
mov
xor
adc
or
cmp
push
inc
lret
out
fnstenv
lock
xor
cmpsb
jp
add
sarl
hlt
bound
or
or
out
push
pop
xchg
adc
xor
sbb
iret
jmp
push
sbb
nop
lods
fsubrp
je
inc
hlt
sbbb
mov
add
pop
xchg
inc
mov
push
inc
or
add
int3
jp
or
ror
mov
mov
in
mov
xor
jge
mov
xor
mov
push
add
xchg
cmc
mov
xchg
sub
jnp
sti
inc
xchg
mov
movsl
les
xchg
adc
loopne
insb
xchg
fadd
outsb
xor
mov
lods
jge
aas
xchg
loope
cltd
shlb
ja
add
xor
cmp
in
and
mov
xchg
sbb
pop
cmp
daa
xchg
and
scas
test
xchg
clc
adc
gs
subl
imul
ret
es
aaa
fnsave
dec
ss
xor
dec
mov
pop
nop
xchg
mov
xor
shlb
pop
push
jmp
movsl
inc
jne
lea
sbb
popf
jno
lcall
or
test
sbbl
ss
ret
pushf
fstl
nop
bound
pop
pop
rep
aam
inc
mov
fdivrl
jle
sbb
adc
cmp
push
add
fwait
mov
push
mov
xchg
popf
add
in
ror
loope
push
icebp
and
pop
push
lds
sub
and
push
jae
add
lcall
xor
jecxz
cmp
rcr
mov
andb
ja
divb
push
outsl
inc
mov
sub
xor
in
out
add
and
push
cli
cmpsl
xor
mov
loope
inc
xor
lcall
jo
mov
adc
mov
repz
mov
xor
cs
lret
test
outsb
sub
lahf
push
sbb
inc
dec
or
scas
mov
adc
cmpsb
inc
sti
lea
xchg
jb
lea
insb
jbe
loop
lods
popl
js
ret
dec
inc
sub
sub
mov
data16
adc
jecxz
xchg
incb
mov
add
jbe
stos
jbe
mov
fists
xchg
pop
sbb
mov
lahf
and
xchg
push
stc
out
dec
imul
cmc
push
mov
fisubrs
jg
jbe
add
inc
in
fmull
and
or
imul
cli
jl
sbb
fwait
iret
pop
sub
jno
sbb
dec
pushf
into
mov
out
inc
movsb
into
mov
sub
mov
sbb
push
fmuls
jmp
cmc
lret
inc
mov
setp
pushf
cmc
bnd
lock
xor
and
mov
push
mov
scas
add
sbb
dec
js
sbb
mov
out
movsl
insl
sbb
aad
inc
mov
cmp
and
inc
cmp
push
add
pop
jecxz
test
and
push
xor
popf
add
es
adc
sbb
mov
daa
lcall
movsb
fiaddl
pop
shl
mov
push
popfw
cmp
cltd
pop
ds
xor
inc
icebp
stos
aaa
mov
addl
out
std
in
jp
lret
cmp
sbb
daa
popf
rcll
bound
mov
inc
xchg
fcomp
loop
cmp
cli
pop
lods
in
push
imul
adc
in
inc
mov
subb
jle
jle
je
mov
add
xchg
push
lock
into
add
cmp
cmp
lahf
fsts
dec
and
sahf
pop
ds
addr16
fisttpll
fcoms
jo
xchg
imul
addb
lahf
test
testb
imul
test
int
shr
xchg
mov
scas
adc
adc
out
mov
xor
mov
into
in
hlt
xor
cmp
mov
or
and
pop
cltd
mov
icebp
jecxz
cmc
xor
das
xchg
dec
cli
or
inc
daa
out
mov
mov
and
test
test
push
flds
outsb
add
mov
inc
adc
sub
mov
cli
push
adc
test
loop
jae
mov
mov
ret
sbb
xchg
repz
cs
negl
adc
ret
dec
push
in
and
outsb
push
fmul
jmp
mov
push
roll
push
mov
es
xlat
xor
mov
xor
inc
fisubrl
adc
mov
mov
sbb
fidivrl
cmp
and
pop
sbb
sbb
jno
push
pushf
xchg
aam
mov
cmpsl
arpl
push
xlat
mov
gs
pushf
dec
cltd
inc
sbb
add
xchg
or
ljmp
mov
adc
cld
mov
je
sub
test
xor
incl
addr16
jbe
sub
push
sbb
insb
lea
jae
xor
dec
or
pop
wrmsr
into
mov
test
lret
mov
out
mov
mov
mov
mov
push
mov
lods
xchg
cmp
movsb
add
mov
mov
xchg
lock
lods
out
sub
dec
and
jle
test
int
aad
push
dec
clc
bound
and
test
mov
dec
rorl
pop
cmp
mov
out
lahf
jecxz
clc
scas
lods
arpl
test
lock
adc
f2xm1
or
pop
xchg
popf
or
cwtl
jne
dec
icebp
insl
dec
inc
mov
stos
mov
mov
int
es
mov
repnz
les
nop
mov
jecxz
data16
cmpsb
adc
inc
aad
mov
or
aas
dec
xchg
out
ret
xorl
pop
add
push
mov
push
stc
nop
icebp
adc
cltd
lods
dec
mov
add
stos
inc
jg
adc
jnp
roll
pop
icebp
mov
ror
sub
test
cli
xchg
jne
push
bound
adc
test
cmpsb
stc
push
adc
andb
or
inc
cmpsl
pop
das
jle
mov
pop
pop
mov
sub
popf
jno
cld
daa
sti
xor
fsubrs
lods
xchg
stos
pop
outsl
mov
push
loop
xor
insb
enter
push
inc
insb
xchg
pop
dec
cli
mov
repz
mov
movsb
push
aad
mov
loope
sbb
cmp
jg
sti
xchg
lahf
fsubr
std
notl
jl
cmp
insb
clc
inc
jmp
push
mov
dec
push
pushl
imul
cmpsl
pop
mov
add
pop
pop
fwait
add
popf
movsl
adc
test
adc
xchg
inc
shlb
mov
loope
jb
cmp
ljmp
inc
into
mov
xor
adcl
sar
jmp
or
ficompl
int3
push
push
mov
hlt
sbb
adc
cmpsl
mov
jg
mov
outsl
lret
addr16
push
int3
push
and
xlat
push
imul
int
rorb
xor
pop
mov
xchg
aaa
fld
push
lods
sbbl
fistpll
out
cwtl
jmp
leave
or
cmp
sub
cltd
in
sbb
pushf
cmc
mov
lock
and
loope
jle
adc
jne
mulb
adc
add
xor
lea
or
rcr
pushf
jbe
push
mov
xor
add
bnd
cmp
inc
ss
push
mov
int3
mov
in
je
dec
xchg
in
inc
dec
pop
lcall
loopne,pt
inc
cwtl
lahf
in
or
push
inc
icebp
fisttps
mov
xchg
adc
xchg
push
cmp
lock
aas
lahf
enter
push
dec
and
cli
test
stc
dec
outsl
xor
bound
add
test
inc
add
and
sbb
cmp
xchg
stos
or
adc
mov
push
sub
sbb
mov
and
data16
aam
enter
out
add
js
jp
lods
push
jle
sub
pop
mov
les
xchg
mov
xor
mov
in
leave
lret
sbb
orb
clc
out
jns
jne
cltd
cmp
leave
push
rorl
std
add
push
test
xor
xchg
mov
jge
sub
sbb
orb
jmp
jl
xlat
mov
out
fisubrs
mov
imul
pop
mov
push
mov
jo
jecxz
jge
enter
jl
cmp
out
mov
pop
mov
shlb
and
ja
xor
sbb
mov
addl
push
bound
fsqrt
sbb
setg
rcr
or
xchg
incb
test
das
push
jl
xchg
fldl
adc
out
push
pushf
pusha
xor
push
ja
loope
cmpsl
mov
cli
movsb
cmp
dec
ljmp
lock
cmp
out
ja
mov
pop
loopne
addb
sub
inc
outsb
imul
cli
and
cmp
and
addl
jno
pop
mov
sub
stos
xor
xchg
sub
adc
inc
adc
sub
mov
jmp
outsl
or
aad
or
xchg
int3
bnd
xchg
pop
jge
xchg
cmp
stc
cmp
out
jbe
sti
movsb
fidivrs
bswap
cltd
mov
jne
dec
sbb
cmc
xchg
sub
xor
sbb
push
cs
push
or
pop
loop
cld
dec
inc
ret
pusha
mov
mov
or
mov
add
data16
mov
addr16
insb
push
movsb
shlb
dec
xchg
sbb
loope
aas
push
mov
dec
je
shlb
fidivl
rorb
outsb
xor
cmpsb
test
rorb
sub
inc
push
cmc
mov
imul
pop
outsb
pop
pop
lret
inc
sub
xorb
mov
sub
repz
ficomps
xlat
add
iret
popa
xchg
sbb
cmp
add
cmp
pop
sti
xchg
insb
sub
daa
les
fldcw
pop
fadds
ss
test
je
or
sub
insb
popf
mov
jg
hlt
push
adc
aam
dec
sub
mov
pop
ss
mov
ljmp
loope
incl
fidivs
xor
push
mov
jg
sub
test
mov
jne
cld
sbb
sub
daa
mov
sbb
fs
movsb
xchg
add
cmp
push
add
mov
fldenv
test
inc
jecxz
es
mov
js
or
jae
pusha
sbb
xor
sbb
jg
inc
imul
icebp
pop
fsubl
jmp
push
loopne
pop
aam
pop
daa
popa
mov
sub
mov
xchg
repnz
pop
sub
loopne
mov
mov
push
loop
test
mov
andb
hlt
iret
insl
imul
fisubrs
pop
mov
push
dec
dec
divb
sti
dec
push
lea
xchg
cli
loop
or
push
out
test
inc
jmp
fucomp
out
xorl
cmp
adc
jle
sub
sti
xor
and
push
je
inc
lea
mov
jbe
mov
pop
insl
pop
cmp
jge
push
dec
xor
loopne
cld
leave
jmp
sbb
mov
mov
push
xchg
inc
addr16
shrl
mov
cmpsl
push
mov
pusha
js
int
pop
cld
fisttpll
int
daa
lods
scas
inc
mov
jno
sub
pop
dec
cmp
lahf
rclb
add
lret
push
in
mov
sub
jecxz
jnp
inc
nop
nop
xchg
dec
xor
adc
fstpt
in
jle
ret
or
lcall
fiaddl
outsl
pop
int
mov
jp
fdivs
int3
mov
es
lea
pop
jp
scas
lret
inc
fucom
jge
jne
nop
jmp
scas
loopne
ljmp
and
sbb
popa
sbb
lret
jae
sbb
xchg
mov
push
arpl
out
and
loop
iret
insb
xlat
xchg
sub
fbld
pop
lds
in
popa
pop
mov
icebp
scas
ret
loop
jnp
mov
mov
cmp
sbb
mov
add
loop
mov
pop
nop
icebp
jge
scas
cwtl
mov
ficoms
in
cmp
jle
dec
inc
loopne
add
in
sbb
adc
pusha
jbe
mov
inc
ds
mov
inc
call
movsl
sti
mov
stc
inc
imul
je
push
lods
sbb
and
add
fcmove
repz
es
pop
mov
ficoml
pop
repnz
jge
mov
cmp
dec
adc
fidivl
mov
sti
add
out
mov
fcoms
in
divl
cltd
dec
jmp
out
enter
rcrl
add
pop
add
xchg
cmp
adc
mov
add
push
dec
add
xchg
cpuid
ljmp
out
xlat
rcr
jne
daa
movsl
cltd
mov
add
js
shlb
cmp
ret
stos
dec
mov
mov
shr
xor
call
xor
les
movsb
enter
ret
dec
pop
xchg
sub
dec
sub
cmpsb
adc
inc
shl
xor
mov
or
movsl
rcr
ret
out
loop
outsb
into
das
pop
jmp
inc
xchg
fwait
lods
push
push
ljmp
push
int3
add
mov
dec
into
cmp
pop
out
negb
push
mov
add
and
insl
xor
mov
inc
fs
sbb
roll
mov
jno
sbb
add
ljmp
push
push
adc
sub
push
jbe
pop
push
inc
jle
mov
push
xchg
les
jnp
lret
mov
sbb
ja
cli
out
mov
call
mov
fidivrl
push
aaa
push
repz
inc
scas
xor
sub
pop
push
rclb
mov
mov
cmp
rolb
inc
psubsw
jg
fsubrp
push
imul
mov
pop
sti
fisubrl
shlb
into
mov
sub
repnz
or
and
mov
adc
shll
mov
ret
adc
dec
inc
xchg
cmp
add
cmp
icebp
pop
sub
aad
je
les
cmp
adc
out
adc
mov
xor
cwtl
xor
mov
adc
insl
fdivrp
clc
pushl
rep
shlb
fwait
mov
push
nop
push
andl
imul
vphaddbw
cs
xor
test
popa
dec
cwtl
mov
int
pop
mov
clts
and
ja
icebp
shll
jne
mov
sub
mov
push
lods
popf
push
movsb
gs
repnz
push
cmpsl
lds
mov
pop
pop
fmull
mov
loop
mov
cli
incb
xor
gs
cmp
out
push
xchg
aas
push
cmp
push
mov
iret
outsb
or
stos
int3
sbb
test
enter
hlt
out
pushf
xor
imul
imulb
sbb
jbe
adc
inc
jae
push
leave
out
pushf
xor
fldenv
sahf
in
inc
inc
pop
jle
or
mov
mov
std
inc
notb
test
repz
inc
fstpl
dec
mov
vcvtdq2pd
cld
dec
dec
xor
shr
data16
stos
dec
das
mov
hlt
cwtl
popf
lahf
lea
addr16
aas
sbb
push
dec
repnz
cltd
dec
pop
outsb
pop
je
movsl
rcr
data16
lods
inc
fimuls
cld
mov
popa
add
pop
mov
inc
fs
fsubr
add
jo
mov
mov
lret
mov
addr16
pop
xchg
mov
lods
xor
xchg
push
in
push
mov
stc
pop
adc
mov
out
mov
push
xchg
je
shlb
mov
in
push
sbb
add
pop
out
or
fistps
fidivrs
bound
shlb
mov
rcrb
ds
bound
jno
fs
mov
xchg
repz
iret
fbld
movsb
inc
sub
mov
jl
aam
adcl
lock
add
add
mov
mov
mov
sar
mov
mov
mov
adc
and
test
ds
dec
out
lea
mov
mov
mov
and
push
mov
lods
xchg
fisubs
pushf
cmp
mov
add
aad
mov
dec
sub
mov
and
xchg
notb
loope
jo
cmpsl
xchg
inc
jbe
loop
rcrb
adc
ret
jl
ja
stc
test
pop
sub
cmp
sbb
mov
mov
cmp
and
clc
cld
jge
repnz
xor
mov
pop
repz
jle
xchg
sahf
adc
jle
scas
mov
sbb
in
sbb
dec
lods
jecxz
jo
pop
xor
xchg
push
fstpl
jmp
imul
test
jg
pop
and
mov
push
jnp
and
mov
pop
test
mov
jnp,pn
sub
aad
cmp
ror
in
push
cmpsb
sbb
xchg
push
push
in
jne
nop
pop
scas
cmpsl
inc
in
jmp
dec
jb
hlt
sbb
out
xchg
xchg
inc
repnz
jne
cmc
cwtl
mov
std
sbb
popf
push
dec
sbb
aam
ss
dec
call
xchg
add
xchg
mov
mov
mov
mov
imul
push
js
imul
andb
lret
arpl
xchg
pop
mov
cmp
rol
std
gs
dec
and
negl
dec
cmpsl
mov
addr16
dec
mov
cmpsl
push
mov
jg
cmpl
xchg
fwait
std
push
sbb
sbb
sub
cs
cwtl
jbe
int3
adc
sbb
shlb
loope
jle
in
out
fstpt
sbbb
push
outsl
inc
loope
and
in
lods
or
push
xchg
jnp
iret
dec
mov
js
je
sbb
dec
stos
jmp
sub
in
cmovle
in
incl
movsl
popa
pusha
mov
add
aam
add
and
loope
testl
xor
mov
mov
pushf
adc
or
mov
adc
add
ss
inc
loop
mov
push
rcrb
cmp
xor
and
imul
jle,pn
sahf
loope
push
addr16
sub
push
push
xchg
cmp
mov
pop
hlt
popf
jg
arpl
movsl
jp
dec
push
sub
out
in
jns
stc
lret
jmp
scas
mov
hlt
inc
inc
mov
fnstcw
push
push
cltd
sub
inc
jo
sbb
cmc
sub
stos
pop
xchg
je
popf
popf
dec
mov
into
ret
stc
fldcw
or
lock
inc
fisubl
std
lret
jae
pop
shr
xchg
out
push
les
pop
inc
mov
add
ret
mov
or
lods
jbe
es
pushf
and
loop
scas
lock
add
clc
inc
mov
pop
jbe
imul
push
push
bound
mov
bound
pop
cwtl
cmpsl
xor
aad
mov
notl
repz
ljmp
cli
jle
pusha
enter
imul
out
call
dec
clc
lret
cmp
mov
sbb
pushf
sub
sbb
pop
bound
cwtl
mov
sarl
fsubs
add
pushf
pop
push
lcall
xlat
aas
pop
outsl
inc
push
lods
inc
inc
xlat
cmp
ja
and
mov
xor
cmpsb
jb
ljmp
ljmp
cmp
cli
jo
dec
sub
or
out
jo
outsl
cmpsb
dec
scas
faddp
loop
imul
pop
test
xchg
insb
pop
std
movsl
inc
out
jne
dec
popf
mov
inc
inc
emms
mov
push
jmp
dec
rorl
adc
into
and
lret
jae
enter
scas
dec
and
push
cmp
repnz
sbb
in
lea
adc
mov
sub
cmpsb
sbb
xchg
ss
mov
push
fsubs
pop
stc
stc
push
es
push
scas
jns
stos
and
sbb
push
jns
add
jle
or
inc
insl
dec
xchg
xor
jmp
sti
ljmp
repnz
cmpsb
pop
cld
mov
mov
mov
std
testl
int3
in
push
fiaddl
hlt
and
jle
into
fisubl
mov
xlat
lret
shll
adc
movsb
inc
fsubrs
pop
and
lahf
icebp
clc
fisubrl
js
mov
loop
and
push
cmpsl
push
mov
fisttps
xlat
pop
hlt
mulb
insb
pusha
out
and
push
nop
popa
sbb
sbb
cwtl
clc
daa
shll
add
cmc
mov
adc
int3
and
xchg
push
into
pop
lcall
jl
hlt
lret
fcoml
pusha
xchg
mov
push
sar
adc
sbb
pop
adc
xchg
mov
or
mov
in
fdivr
or
inc
jle
das
enter
es
mov
or
mov
sub
xchg
notl
inc
sbbl
jnp
cmp
imul
xchg
stos
stos
cmp
xchg
cli
push
lret
shlb
push
xchg
xor
or
shlb
xorb
push
sti
xor
and
sub
nop
and
cmpsb
lahf
sbb
mov
in
repnz
aam
sub
cmp
xor
imul
mov
or
jnp
mov
imul
std
sub
fdivs
mov
push
mov
ja
out
jg
shlb
cltd
popa
jae
and
in
ljmp
xor
dec
xchg
add
mov
pop
loopne
cmp
or
or
jno
sbb
mov
mov
gs
or
inc
adc
adc
in
ss
pushf
or
scas
fists
mov
out
int3
push
in
xlat
sbb
jmp
mov
roll
jae
mov
pop
nop
adc
int3
cltd
xor
inc
lods
cmp
lods
popf
ret
xor
inc
jae
mov
out
mov
fwait
ret
mov
les
mov
adc
push
and
push
and
dec
push
out
pop
jg
scas
ret
cmpsb
in
cmpsb
fwait
test
jns
fisttpll
test
fldcw
scas
and
ret
iret
jle
test
lcall
cmc
pop
mov
jg
pusha
imul
jge
mov
loopne
pop
or
xlat
cmp
icebp
bound
xor
scas
cmp
arpl
pop
aam
nop
sub
lods
sub
mov
xchg
repnz
push
pop
dec
mov
cmp
ljmp
cli
mov
in
xchg
cmp
les
jle
mov
xchg
or
pop
inc
cwtl
and
or
enter
cmp
daa
movsl
mov
test
cmp
and
pop
ret
sarl
popf
inc
lret
aaa
and
lahf
es
ret
dec
adc
jg
adc
jae
jle
sub
testb
scas
jae
dec
and
sub
mov
and
xchg
adc
inc
xchg
mov
cld
test
cmp
fdiv
cmp
jns
icebp
mov
rorl
cmp
ret
into
mov
cmpsb
call
mov
leave
and
jmp
add
inc
push
sub
int3
les
je
std
xor
xchg
and
aad
jge
dec
add
scas
xor
cmc
lret
xor
sbb
sti
dec
cli
or
inc
scas
repnz
pop
sar
fbstp
dec
cmp
fs
pop
pop
jne
ret
movsl
push
lods
add
fsubrs
imul
cli
sbb
bound
jb
pop
ljmp
rorb
sbbb
cmp
in
movb
js
add
stc
sub
mov
mov
enter
sbb
movsb
jmp
fidivs
jnp
sbb
addr16
push
cmpsb
lock
int3
cmc
sbb
cmpb
push
popf
outsl
add
in
push
mov
test
push
aaa
fistpll
dec
cmpb
loopne
stc
aad
add
mov
cmp
pop
xchg
std
in
ficoml
rol
icebp
orl
mov
ret
jp
jl
popa
xlat
mov
lods
dec
xor
cmp
je
push
es
cs
stos
sahf
pushf
inc
repnz
xor
and
xchg
or
jl
and
ss
dec
popa
push
les
xchg
lret
inc
mov
mov
cmpsl
aaa
mov
push
icebp
out
mov
shrl
fwait
xor
arpl
xor
lock
imul
jmp
add
sbb
in
adc
aad
cmp
fdivrl
int3
fidivrs
cmpl
push
lea
push
mov
lret
bnd
pop
mov
repz
mov
aad
mov
mov
xchg
xchg
dec
adcb
add
xor
add
xlat
fwait
xchg
call
inc
mov
ss
test
add
aas
std
jg
push
lahf
mov
fnstsw
jge
jns
lret
cmp
mov
mov
and
stc
movsb
add
inc
cld
popa
ret
imul
cmpb
and
fsts
dec
pushf
push
js
cmc
inc
cmp
rorl
jb
pop
nop
and
movsl
stos
in
loop
pop
loope
push
jg
adc
roll
in
jno
lods
xchg
mov
pop
in
cmp
ja
and
jle
push
and
shrl
add
sub
test
lahf
xchg
xor
or
xor
sbb
push
filds
popf
ror
mov
mov
pop
push
mov
jge
arpl
fisttpll
sti
mov
out
and
mov
repnz
xor
pushf
xchg
xchg
jle
add
mov
sti
push
fistps
into
inc
movb
movsb
dec
jle
lds
aas
mov
out
push
es
jb
inc
pop
imul
es
mov
outsl
leave
mov
inc
and
xlat
push
leave
mov
in
sahf
out
popf
insl
in
mov
pop
sbb
rorl
or
cmp
or
aas
movsl
movsl
jne
dec
int
push
mov
xchg
out
push
jle
test
mov
frstpm(287
ret
cwtl
imul
add
outsl
int
fcmovne
mov
pusha
test
mov
roll
andl
test
out
xchg
sub
or
xchg
adc
stos
clc
rcrl
inc
xor
pop
aaa
jl
dec
cmp
cs
bound
pop
cmp
mov
push
sti
inc
or
mov
shr
add
fistpl
hlt
cmpsl
rorb
and
imul
neg
sbb
rcr
rclb
mov
jne
movsl
push
and
sub
dec
test
je
cltd
xor
xchg
cmpsb
cld
push
mov
xor
mov
jge
ja
fwait
iret
jecxz
add
ljmp
push
sbbb
sahf
push
mov
sub
es
push
gs
mov
mov
add
notb
std
sarb
dec
pop
cwtl
popf
or
jno
in
hlt
inc
jno
dec
mov
dec
es
pop
aad
ja
add
ss
cmp
pushf
mov
dec
jno
xchg
mov
cmp
enter
mov
xor
fisubrs
inc
jo
cwtl
arpl
and
pop
adc
rol
pop
rorb
sti
popl
xor
andl
and
scas
repz
and
push
push
or
fiadds
dec
js
push
fwait
adc
ja
icebp
daa
mov
test
cwtl
sbb
mov
push
mov
jecxz
cli
xchg
mov
push
inc
push
iret
push
repz
push
roll
lret
and
sub
push
pop
rorb
daa
pop
test
lret
rclb
xchg
into
xor
les
adc
sbb
sub
bnd
sti
xchg
daa
pop
add
sbb
mov
cmp
insb
push
push
xor
and
lret
outsl
aad
push
in
outsb
push
lret
gs
out
insl
ja
cmp
dec
int
pop
push
dec
pop
cld
xchg
jno
mov
fsub
shll
dec
fwait
sub
dec
rorl
jecxz
or
fdivrl
cmp
mov
jle
pop
cmpsb
fists
add
insl
test
scas
and
addr16
sbb
je
out
adc
add
lock
jge
dec
xchg
roll
sbb
loope
push
jl
inc
mov
jle
dec
mov
pop
movsl
loopne
cld
scas
std
xor
pop
call
dec
mov
mov
mov
test
pop
mov
mov
in
mov
sub
ss
cmp
or
and
xchg
lods
mov
mov
loope
pop
mov
jmp
dec
cmp
jne
repnz
pop
mov
xlat
xor
or
roll
ja
insb
sub
push
mov
add
push
or
cmp
shrb
cmc
push
pop
mov
pop
add
xor
fwait
cmp
ljmp
ss
sub
pop
mov
cmp
je
xor
out
je
in
popf
mov
pop
dec
sub
xchg
mov
mov
cld
xor
insl
dec
jmp
dec
adc
lds
mov
add
daa
repz
out
adc
inc
data16
dec
cltd
divps
in
jo
jbe
sbb
faddl
lock
mov
push
bound
adc
push
cmp
push
xchg
pop
push
pushf
lea
data16
shlb
dec
cmp
jnp
push
ss
cld
mov
ucomiss
sub
xchg
out
xchg
xchg
sbb
fwait
shrl
imul
cld
or
jno
inc
xor
push
ret
lock
shr
jg
add
subl
cmp
repz
cmp
xchg
shrl
and
mov
jae
test
movsb
sub
mov
cmp
jnp
aas
lea
and
scas
dec
xorb
ljmp
pop
add
add
and
sti
into
imul
push
cli
push
adc
inc
and
pop
pushf
lcall
test
cld
mov
mov
dec
nop
mov
mov
in
xchg
cmp
lods
xor
outsb
mov
imul
outsb
cmp
rcr
push
popf
dec
hlt
adc
mov
fiaddl
dec
dec
shlb
mov
insb
pusha
mov
and
mov
pop
cmpsl
ret
or
cmpsl
icebp
inc
rclb
cmp
out
lock
ror
lds
push
xor
pop
mov
dec
popf
jnp
lods
out
inc
xor
popf
sbb
and
rorb
inc
jl
fnstenv
and
out
jl
and
jo
or
test
cmp
leave
orb
test
decb
jg
dec
sub
aas
pop
lret
mov
cmpsl
dec
in
pushf
push
mov
subb
push
sub
mov
or
adc
es
iret
cmp
mov
punpcklbw
fldenv
idivl
mov
cli
add
jp
or
sbb
lods
or
mov
mov
ljmp
test
sbb
xchg
insb
or
out
out
lds
jl
mov
pop
xchg
inc
es
cmp
xor
mov
lret
adc
das
movsb
aam
test
xacquire
pop
data16
pop
fs
fbstp
xchg
nop
out
ficoml
mov
int
and
call
addl
or
add
mov
scas
out
add
fs
decb
ss
inc
nop
rorb
push
lcall
cmpsl
cwtl
scas
pushf
stos
xlat
push
pop
mov
sbb
enter
scas
ret
shll
mov
pop
mov
jb
xor
mov
push
xchg
mov
inc
jne
je
mov
dec
xchg
scas
pop
gs
test
jge
mov
jecxz
mov
std
or
mov
inc
lret
sbb
xchg
jmp
cmc
bound
jmp
bswap
lds
pop
mov
inc
dec
adc
gs
jecxz
dec
stos
dec
arpl
inc
push
fs
inc
shll
jns
ficoml
imul
push
add
xor
lret
inc
jp
icebp
fs
mov
mov
fistpll
add
mov
inc
insb
mov
lahf
in
pop
lcall
mov
or
mov
int3
daa
lahf
rcl
add
in
xchg
dec
pop
ret
sub
imul
xchg
flds
sbb
adc
fdivrs
pop
js
cmp
lret
flds
test
push
mov
cmpsl
jmp
enter
mov
cmp
lods
popa
mov
pushf
jg
and
inc
shrl
adc
sub
jge
lcall
iret
and
adc
adc
cmp
pextrw
xor
ja
stc
pop
lods
dec
xchg
sbb
aad
ja
out
mov
mov
mov
push
lcall
shll
aaa
add
xlat
jbe
movsl
sub
pusha
mov
dec
orb
cltd
sbb
inc
in
fidivrl
cs
scas
in
gs
shl
aad
mov
sysexit
scas
or
addl
ret
mov
cli
lods
xchg
and
fistpl
aad
xchg
mov
out
cmp
movsl
in
sub
mov
adc
xor
adc
sbb
aas
lret
inc
adc
mov
or
lock
push
sti
sub
addr16
push
mov
sbb
clc
sub
ds
xchg
cmp
xor
jg
mov
adc
enter
idivb
pop
xor
xchg
pop
loopne
adc
mov
jp
out
sbb
jbe
sub
dec
jne
cwtl
ss
test
test
int
fidivrs
icebp
mov
ds
cmpsb
lock
rol
push
clc
dec
ds
or
cmc
push
out
pop
popf
sbb
aad
dec
jns
call
pop
stos
pop
sub
mov
repz
and
leave
dec
les
push
push
inc
enter
inc
sti
jmp
and
adc
test
mov
test
jno
sbb
test
std
pop
std
jb
adc
aam
testl
xchg
jbe
dec
stos
mov
enter
outsl
aam
mov
sub
je
sub
in
call
iret
addr16
not
push
lea
rolb
xor
fldenv
in
push
icebp
pop
mov
cmp
mov
pop
pop
inc
dec
cmpsb
push
xlat
and
jle
loop
cmp
shl
jnp
lds
push
das
daa
ret
inc
les
and
add
pcmpeqb
adc
je
pop
xor
cmp
fdivr
cli
push
xchg
mov
sub
sti
jb
fcomps
adc
inc
jg
out
fwait
mov
adc
enter
sub
adc
call
mov
fildl
fiaddl
movsl
jnp
adc
arpl
ret
shrb
dec
jle
pop
sbb
mov
mov
shlb
push
adc
ljmp
ljmp
jo
lret
notb
sbb
roll
adc
insl
inc
es
std
cmp
push
mov
popf
mov
lret
inc
pop
dec
cmpsb
sub
cmp
mov
addr16
xchg
inc
pushf
xor
loop
add
inc
movsb
lods
shr
and
mov
add
inc
sbb
pusha
lahf
inc
xor
cmc
push
xchg
mov
mov
cmc
int
jnp
dec
pop
les
pop
insb
lahf
sub
dec
call
sub
inc
mov
push
xchg
fisttpll
add
mov
mov
mov
sar
mov
fstl
mov
wbinvd
es
fiaddl
adc
mov
stos
sub
jae
push
dec
test
int3
xchg
in
mov
nop
jno
insb
and
hlt
adc
pop
pop
sahf
mov
jns
mov
movsl
pop
mov
add
mulb
pop
xor
scas
fs
nop
xchg
insb
std
inc
mov
mov
cmp
insl
repnz
mov
mov
jg
and
repnz
out
add
pop
nop
popa
roll
aaa
mov
mov
scas
int
sahf
lds
jne
lret
mov
ds
fistpl
sub
cmp
jge
pop
mov
data16
fiadds
adc
sub
mov
imul
add
cmpsb
add
data16
inc
mov
mov
bound
into
xchg
sub
ljmp
or
repz
repz
cmpsb
inc
cmpsb
sub
std
add
jns
jns
ljmp
cmp
adc
mov
and
xchg
xchg
push
movsb
xchg
push
cmp
mov
sbb
inc
outsl
fcomps
and
call
scas
out
cmc
pop
sbb
in
dec
cmp
xor
cmc
sbb
rcrl
pop
mov
dec
mov
sub
xor
add
lods
rcrb
pop
ss
pop
jno
inc
pop
mov
aad
or
lods
or
dec
fiadds
nop
adc
mov
jb
in
rclb
insb
jl
repz
cwtl
push
jg
loopne
cmp
jb
jae
hlt
mov
fwait
or
jmp
and
fidivl
sub
mov
imul
mov
jp
mov
sub
mov
in
cld
mov
mov
add
daa
cmp
aaa
incl
icebp
ss
adc
fwait
pop
sbb
jnp
or
mov
mov
sarb
arpl
outsb
lods
out
mov
mov
xorb
imul
out
jne
inc
pop
pop
adc
jecxz
mov
jne
iret
adc
scas
sub
popf
aaa
fwait
test
enter
movups
outsl
mov
xchg
loopne
inc
dec
insl
repz
add
in
jle
sub
loop
jne
push
cli
fwait
int
jmp
cmpsb
std
psrad
lods
fs
cmp
mov
fwait
or
aas
iret
sahf
push
xchg
in
rorl
sahf
pusha
lcall
jge
mov
sub
cmpsb
adcb
cmpsb
add
pop
xlat
inc
pop
imul
scas
shl
outsb
es
movb
push
rcrb
cltd
sub
aam
cmp
xor
xchg
outsb
stc
pop
std
add
xor
fcoml
inc
jae
jg
dec
cs
pop
inc
inc
ror
jge
adc
iret
aad
fs
sti
mov
sbb
or
loop
lret
loope
mov
ja
out
jno
and
xor
cmpsb
call
pop
pop
adcl
and
pop
fcmovnb
push
out
add
and
adc
jo
push
xor
pop
xor
inc
mov
mov
adcb
mov
dec
xchg
sub
jg
push
inc
into
jnp
cld
mov
in
mov
mov
pop
ret
jge
cmpsl
movsb
xor
mov
dec
sbb
out
inc
jb
sub
xor
cmp
xor
xor
jnp
push
inc
push
dec
test
test
ds
test
fstpt
call
pop
push
outsb
mov
push
out
pop
das
jle
out
pop
xlat
test
xchg
aam
add
xchg
mov
int3
dec
cmpsb
roll
mov
inc
dec
pop
pop
cmp
adc
out
mov
xchg
and
rolb
jbe
xor
or
fdivl
mov
push
jae
dec
xor
arpl
lret
lods
push
dec
test
gs
push
pop
aaa
shll
pop
mov
sar
fs
into
pop
push
xlat
sahf
pop
fstps
add
test
mov
lds
mov
pop
rcll
popf
gs
push
in
xchg
and
dec
xor
scas
clc
jbe
inc
inc
call
pop
mov
iret
lcall
stos
sub
arpl
pop
xchg
stc
cs
push
cmp
push
stos
ds
or
popa
cmp
je
jb
popa
add
lock
movsl
mov
add
xor
rol
and
int
iret
ljmp
call
adcl
xchg
ja
mov
jo
shll
imul
mov
les
push
dec
xlat
sbb
push
fs
inc
xor
pop
pushf
mov
inc
es
imul
mov
pusha
pop
xchg
or
dec
xchg
add
and
inc
outsb
lcall
inc
fists
inc
sbb
lock
loope
push
jmp
mov
ret
mov
cmp
movsb
xor
ss
pop
jbe
imul
test
loopne
pushf
aad
jmp
addb
out
mov
adc
or
in
insb
subb
in
test
jle
rolb
lcall
sub
fwait
orb
and
rcr
sub
cmp
clc
sbb
js
xchg
and
fiadds
mov
jl
icebp
rcrb
stos
shl
je
sbb
andb
inc
adc
xor
pop
scas
daa
fistpll
push
mov
add
test
mov
xchg
xor
jmp
xchg
stos
ficomps
das
lcall
nop
pop
gs
inc
lret
scas
int
dec
pop
icebp
out
sub
mulb
pop
pop
push
and
jne
sub
int3
mov
dec
jbe
push
adc
cs
cltd
scas
dec
mov
cmc
stc
es
out
cmpsb
popf
fwait
lret
mov
cmpsl
movsb
stos
inc
inc
daa
sbb
mov
das
xchg
lcall
jg
sbb
xor
in
outsl
cmp
lcall
imul
popf
mov
adc
les
xchg
shl
mov
mov
mov
xchg
nop
imul
lret
mov
or
cmp
js
int3
call
cmp
mov
cmpsl
icebp
loopne
daa
lcall
movsl
sbb
mov
mov
rcr
and
mov
bndldx
out
jg
jnp
test
mov
ja
or
pop
cmp
inc
or
or
add
ljmp
add
enter
xlat
xchg
sbb
mov
inc
sbb
lods
jg
aam
pop
es
lock
insb
or
roll
mov
sti
notb
xor
icebp
mov
out
leave
xor
cmp
mov
or
push
add
insb
cli
and
fsubl
js
add
ror
pop
shlb
pushf
push
mov
test
push
pusha
cmp
orl
mov
mov
ja
push
int3
jmp
inc
mov
push
fbstp
or
push
inc
subl
clc
ret
inc
pusha
test
xor
scas
js
daa
xchg
scas
ljmp
mov
lods
loopne
loope
mov
sbb
mov
cmpsl
add
xor
sbb
fldl
into
ret
insb
mov
inc
js
jne
fiaddl
outsl
push
add
push
jne
out
mov
xor
cmp
sub
jae
mov
loopne
cmpb
cmpsb
jno
leave
loope
cmp
ret
stos
xchg
mov
lds
orb
jmp
fwait
in
sti
mov
pop
pop
lret
leave
pop
iret
cld
fwait
and
ljmp
insl
std
arpl
inc
imul
in
push
dec
aas
pop
mov
mov
mov
pushf
rdtsc
insb
or
aad
mov
add
jg
or
or
sub
or
cmpsl
mov
fdivr
jmp
inc
pop
push
pop
xor
jge
js
pusha
mov
push
push
es
jns
insl
in
lea
test
adc
jb
enter
mov
jns
jnp
cwtl
cmp
shll
inc
and
test
into
loop
mull
movsb
clc
in
jns
in
out
lea
js
jae
ficoms
test
jle
pop
xor
push
mov
cmc
xorb
pop
sarb
int3
push
xor
test
test
xchg
pusha
push
test
sub
sbb
inc
lcall
push
mov
popf
push
jne
mov
sbb
mov
xchg
jle
and
imul
add
mov
cmp
mov
or
mov
or
jb
sub
mov
mov
mov
nopl
xchg
xchg
or
push
in
pusha
les
adc
jb
cmpsb
and
in
fs
add
in
push
popf
and
out
or
imul
aad
jne
inc
push
inc
ja
push
movsb
in
in
pop
cwtl
push
mov
in
movsl
push
mov
lods
lahf
les
and
ficoms
sbb
std
mov
sbb
out
cmp
cmp
mov
daa
adc
push
cmp
mov
push
clc
scas
inc
mov
gs
adc
test
lock
cmp
rol
lods
lcall
xchg
cmp
adc
dec
sbb
jp
or
lret
mov
xchg
mov
sub
xchg
jo
push
mov
fcomip
and
test
mov
dec
ljmp
dec
or
pop
jnp
push
jnp
mov
bound
cltd
sbb
bound
loope
add
mov
push
rcrl
imul
xchg
mov
mov
stc
mov
testl
mov
movsb
aam
movl
pop
adc
dec
cmp
pop
shrb
movhps
jmp
rorl
arpl
inc
ds
movsl
out
adc
rclb
mov
push
mov
jnp
lods
cmp
cwtl
cwtl
lahf
cmpsl
jp
sub
jb
fildl
push
push
sub
int
add
hlt
xchg
pop
add
jp
inc
sub
or
inc
stc
xchg
pusha
ficompl
roll
dec
repnz
sub
data16
leave
inc
iret
popa
mov
cmpsl
lahf
cli
mov
stc
jnp
pop
test
repnz
je
push
sub
pop
xchg
leave
xor
push
mov
and
in
loop
inc
jl
lea
data16
sub
out
add
hlt
pop
mov
pop
jl
insb
stos
mov
movsb
jg
call
mov
fsubs
jo
dec
pop
xor
loope
call
xchg
pop
data16
inc
inc
out
mov
adc
mov
sub
add
adc
xchg
inc
int
adc
lock
bound
mov
or
out
or
xchg
inc
push
aad
adc
test
shrl
xor
mov
inc
mov
pushw
xlat
push
jbe
mov
in
mov
les
pushf
mov
jb
jne
lods
fcmovnu
cwtl
jns
fimull
xchg
mov
aaa
dec
xor
dec
daa
insb
mov
mov
cmp
cld
jmp
push
sahf
add
in
mov
mov
aas
imul
insb
or
mov
ljmp
shl
test
mov
push
mov
idiv
negl
in
lock
adc
stos
cmp
sbb
cld
jb
or
cmp
arpl
das
inc
push
xchg
jno
add
push
fcomps
out
push
mov
ja
stos
fstps
pop
cmpsb
push
mov
mov
xor
or
push
mov
fidivrs
push
and
gs
sub
push
adc
pop
push
in
leave
cmp
xchg
and
fnstenv
push
mov
das
aad
icebp
jp
xchg
mov
cmc
jnp
add
test
push
xchg
scas
std
outsb
jle
jmp
xchg
xchg
test
xor
add
loopne
cld
in
scas
mov
gs
decb
add
mov
test
popf
mov
pushf
xchg
hlt
mov
addr16
xchg
cs
popa
pop
fldcw
hlt
fistpl
or
pop
sti
xchg
cmp
xchg
ret
sub
stc
mov
mov
out
mov
nop
jne
dec
hlt
jo
mov
mov
gs
xor
jle
mov
mov
mov
jecxz
mov
mov
or
sub
or
fbld
xor
unpckhps
testl
or
mov
movsl
das
mov
addr16
or
scas
and
dec
mov
lahf
and
in
js
jg
outsl
hlt
lret
jg
pusha
jo
cmc
orb
xchg
pop
cmp
sti
pop
loope
push
lret
in
movsl
xor
fwait
push
shlb
or
into
addb
xor
push
in
add
insb
sub
cmp
push
pop
shll
and
xor
cmpb
adcb
cmp
and
mov
jmp
lret
push
mov
dec
cltd
std
in
scas
enter
push
or
mov
dec
data16
pop
sbb
in
dec
cmp
jne
cltd
enter
es
xor
stos
nop
mov
jne
inc
lret
sub
fldcw
lock
scas
adc
nop
hlt
out
fldlg2
and
jmp
ja
add
sub
jbe
xor
xor
push
jle
aam
dec
leave
inc
scas
movsb
push
stos
in
dec
dec
arpl
lods
nop
push
addb
subb
push
or
repz
lock
pop
ret
mov
and
jb
addr16
push
mov
mov
mov
test
sub
insb
lahf
cmpsl
mov
js
cli
cwtl
sbb
idivl
out
sbb
cmp
lret
pusha
inc
std
aam
and
outsb
xchg
push
insb
and
push
std
shll
or
push
aaa
iret
les
mov
stc
test
push
shrl
imul
and
fdivl
cs
adc
xor
push
push
push
cmp
xor
out
mov
pop
idivl
sbbl
in
mul
jle
xchg
pop
popa
cmpsb
push
mov
xor
arpl
iret
in
cmpsl
rorl
aas
jmp
dec
xchg
push
jbe
sbb
jb
fistpll
inc
cmp
adc
mov
aad
adc
inc
mov
cmpsb
jl
stos
in
in
pop
and
fs
adc
out
ds
into
jno
pop
push
loopne
mov
dec
ss
or
sub
ds
jbe
lods
mov
jl
add
sub
cmpsl
or
cmp
pushf
mov
rcrb
sti
pop
and
ds
pop
push
aaa
sbb
xor
cmp
xchg
add
pop
push
flds
lods
sub
pop
fimuls
jge
mov
xchg
cmp
mov
and
mov
add
rcll
xor
xor
xchg
aad
scas
cmpsl
push
shl
popa
lods
add
and
jge
hlt
inc
lcall
mov
call
pop
xchg
out
mov
xchg
push
popf
jmp
out
int3
mov
ret
leave
subl
add
sub
push
mov
sar
cmpsl
bound
sub
cmp
ret
or
testl
shll
stos
jl
pop
jb
xchg
frstor
out
loopne
rorl
stos
gs
jl
call
popa
popa
das
adcl
shlb
cmp
fmuls
xchg
xchg
mov
enter
inc
das
cmc
imull
stc
pushf
lret
cli
stos
cmpsl
imul
mov
shll
adc
into
fcoml
jae
xor
xor
fdivrl
rclb
aad
push
adc
xchg
push
jnp
mov
cmp
leave
les
jle
out
adc
dec
jg
idivl
pop
sub
inc
sub
inc
and
mull
push
inc
into
xchg
lds
push
mov
push
clc
xchg
dec
jge
test
ljmp
add
loop
lcall
scas
mov
pusha
mov
mov
jmp
adc
test
fucom
adc
iret
mov
incb
mov
mov
nop
je
mov
dec
sbb
cmpb
int3
in
fsubl
insl
xor
pop
ficompl
pop
jae
jg
add
jno
out
xchg
stc
jle
cmp
sub
push
adc
xlat
dec
cltd
and
incl
stc
in
push
cwtl
insl
adc
stos
jne
js
mov
mov
lret
inc
adc
cli
adc
push
xchg
les
and
mov
pop
mov
pop
add
xor
mov
sub
jnp
lret
mov
jge
xor
sbb
push
xlat
out
sbb
sbb
pop
push
ret
mov
mov
mov
jae
int3
lret
adc
lahf
push
or
sbb
add
sarl
pop
shrl
nop
cmp
lret
nop
out
dec
jl
nop
repnz
mov
popf
rorl
xchg
mov
aas
inc
jne
lcall
aas
mov
cmp
divb
stos
xchg
pushf
ds
stos
in
pop
xchg
lcall
aaa
mov
sbb
shll
pop
sti
les
or
dec
repz
push
outsb
shrl
adc
cmc
mov
or
movsl
cwtl
scas
mov
in
sahf
mov
ja
hlt
clc
xchg
into
jne
mov
ficoml
enter
cwtl
xchg
nop
mov
imul
add
xor
sub
mov
call
xchg
inc
push
push
lods
mov
shrb
adc
adc
lods
out
and
icebp
jnp
inc
iret
jmp
adc
jge
out
mov
loopne
outsb
cli
push
iret
loopne
and
je
mulb
scas
mov
ret
outsb
ret
out
cmp
test
js
adc
addl
sub
fmuls
in
lret
jo
xchg
dec
rorl
dec
arpl
fbstp
jg
shll
cmp
icebp
and
popa
push
mov
push
sbb
jo
lahf
inc
pop
notl
push
js
xor
pop
dec
es
pushf
mov
inc
mov
iret
mov
dec
sti
add
mov
data16
es
addr16
add
mov
mov
dec
pusha
sti
lock
cli
push
mov
ljmp
cmp
das
out
pop
sub
cwtl
mov
push
or
es
mov
fwait
arpl
imulb
xor
xchg
jl
stos
xor
stos
jmp
imul
daa
stc
mov
mov
ss
int3
fnstsw
and
imul
jp
jb
add
movsl
xor
jl
js
xor
sub
fisttpl
out
mov
dec
incl
dec
push
xchg
loopne
mov
cmp
mov
mov
and
imul
jmp
lret
test
pop
aad
pop
sahf
repnz
fwait
scas
push
inc
and
adc
in
and
xor
xlat
ljmp
xor
fs
adc
jb
aaa
mov
ret
pop
sub
xchg
dec
cmp
mov
fwait
dec
adc
push
cmp
sbb
xchg
imul
mov
adc
inc
or
insl
fsubp
sub
xor
lret
adc
mov
push
ss
inc
lock
jno
popf
mov
mov
mov
push
push
loope
sti
int
mov
cld
push
loop
repz
in
loopne
xchg
cmp
jno
add
jnp
sbb
adc
shrb
sbb
cmpsl
dec
xchg
dec
sbb
push
dec
insl
lea
mov
punpckhwd
sti
dec
and
jnp
addr16
stos
or
out
es
push
divb
mov
inc
mov
mov
jb
cmpsb
pop
leave
sbbb
push
std
sub
inc
cmp
xor
push
cmpsl
jae
cmp
outsl
jno
inc
xlat
pusha
push
jae
flds
aaa
push
les
pop
test
test
ret
gs
push
out
inc
fiaddl
jnp
dec
cs
addr16
gs
mov
les
or
lahf
inc
sbb
xor
adc
inc
inc
cli
mov
sbb
dec
inc
ds
cli
shlb
std
mov
adc
call
lret
inc
icebp
or
fisttpll
mov
or
mov
subl
pop
roll
addl
cwtl
sbb
inc
enter
aam
pop
add
je
push
shll
stos
in
sbb
pop
aad
jmp
sarl
hlt
and
dec
lods
daa
push
xor
adc
iret
dec
ret
add
movups
or
loopne
outsl
xchg
inc
dec
mov
fsubr
pop
push
dec
push
stos
inc
decb
add
in
xchg
int3
cmp
pushl
hlt
mov
stos
adc
leave
andl
dec
int3
sbb
jmp
push
les
mov
sbb
es
rolb
test
pusha
inc
enter
insb
imul
cmpsl
or
inc
adcb
sub
mov
mov
pop
mov
popa
rclb
sbb
add
mov
or
jb
test
push
pushf
sbb
push
cld
sbb
sbb
aas
rcll
test
xlat
mov
pop
adc
adcl
or
pop
mov
repnz
sahf
pop
dec
jne
xchg
mov
sti
pop
icebp
loopne
js
stos
mov
jle
insl
xchg
in
push
into
or
jp
xor
pusha
xchg
mov
imul
add
add
xor
xorl
xor
daa
cli
sbb
insb
jmp
daa
xorl
xchg
out
dec
pusha
or
outsl
mov
xchg
lahf
dec
xadd
ret
je
jg
pop
test
jne
call
sub
mov
pop
jb
xchg
stos
ss
or
fldenv
and
push
jl
mov
adc
es
jg
mov
dec
pusha
sub
aas
push
int3
hlt
xchg
or
std
sbb
popf
lods
sbb
xor
mov
mov
das
lret
shrb
mov
sbb
movsb
dec
arpl
sbb
out
out
bound
add
movsb
cld
outsb
push
enter
lds
shlb
rolb
and
sti
pop
les
jbe
inc
mov
inc
ret
loop
add
cmp
mov
jp
or
js
or
popa
mov
or
sahf
add
dec
xchg
mov
xchg
cwtl
inc
mov
jno
sbb
lret
lcall
jmp
addr16
in
stos
mov
push
test
fucomi
xor
cmc
pop
les
sub
xchg
jp
pop
test
xchg
stos
fisubrs
sbb
std
push
stc
sub
push
pop
pop
iret
ficompl
adc
fst
fs
fwait
xor
lds
pusha
jae
inc
movsb
repz
sti
out
sbb
repz
cmp
ja
push
pushf
adc
mov
sahf
cmpsl
push
mov
stos
pop
jp
sub
cmp
inc
xadd
pop
mov
arpl
xchg
mov
adc
or
insl
xchg
ret
pop
mov
sub
push
mov
sub
cmp
cmp
bound
aas
call
das
inc
inc
cmc
push
fdivrl
and
mov
pushf
scas
outsb
aas
sub
adc
enter
imul
xlat
shrl
mov
push
stos
sarb
xor
lds
loope
and
xor
pop
jo
lock
push
loop
cmp
jmp
mov
and
addr16
mov
aas
jae
pop
lcall
xor
ljmp
add
xchg
xor
bound
pop
fwait
push
jno
sbb
ret
sub
or
fcmovb
pop
les
fnsave
sbb
fwait
dec
mov
mov
add
jl
push
adc
dec
jl
popa
inc
pop
lods
imul
insl
jp
lret
adc
sbb
test
popa
and
jp
movsb
aam
and
repnz
in
sub
popf
data16
inc
lds
push
jmp
in
mov
pop
cmp
adc
jns
jb
pop
in
daa
xchg
into
push
scas
mov
in
mov
out
aad
cmpsb
xor
lods
jo
cli
in
jo
xchg
xor
pop
cmp
adc
mov
xor
sahf
cwtl
rclb
sub
das
mov
data16
mov
jle
addr16
bound
or
jb
lahf
xor
bound
loopne
sub
pop
lcall
dec
lods
jp
rorb
mov
in
add
xor
pop
js
aas
int3
cmp
mov
pop
insl
cwtl
mov
cmc
and
bound
xchg
push
sub
xchg
addr16
jnp
jnp
cmp
cmp
adc
sarl
cmp
sti
into
jl
addr16
sti
lret
aas
lock
pop
repz
arpl
and
and
mov
lock
in
imul
rcl
jns
or
and
push
clc
gs
js
stos
push
nop
fistpll
inc
jbe
inc
mov
mov
jg
jnp,pt
add
mov
cmc
mov
add
sbb
pop
ret
fisttpl
xor
cmp
jge
out
ret
pop
adc
xor
fmulp
test
or
pop
push
enter
jne
xchg
ja
mov
mov
pop
orl
and
lahf
stc
sub
daa
push
call
pop
lds
push
mov
loope
sti
jl
pop
or
sahf
and
fnstcw
mov
fldenv
es
or
into
out
cmp
sahf
pop
mov
inc
int
fsubs
and
push
stc
cmp
sub
dec
or
xchg
js
inc
sbb
mov
test
hlt
cmp
inc
stos
lret
test
rorb
jl
loopne
xchg
sbb
aaa
ljmp
in
xchg
sahf
jbe
jb
or
mov
and
mov
roll
insb
and
mov
jle
push
repnz
inc
stc
push
mov
enter
inc
ss
mov
bound
std
lods
int
repz
ret
push
pop
ds
inc
cmp
xor
mov
pop
rol
leave
fisubl
ss
or
addr16
inc
xchg
jecxz
push
xor
adc
adc
mov
in
cli
pop
ret
or
xchg
push
inc
addr16
cmp
mov
test
test
les
push
sub
scas
mov
outsl
test
out
pop
jl
loope
or
xor
sbb
stos
jb
mov
pop
push
pop
mov
ds
mov
sbb
ret
int
fldcw
je
mov
push
mov
lds
push
jno
xchg
popf
xchg
cmp
dec
push
jp
fcoms
insl
adc
mov
mov
mov
pop
hlt
push
test
mov
sub
xor
jno
ret
outsl
jo
xchg
inc
jae
xor
dec
add
out
sub
je
js
aaa
sti
push
push
loope
adc
fdivs
movsb
insb
mov
dec
shr
sub
test
test
jecxz
test
sub
and
rolb
push
test
pop
mov
outsb
sbb
loop
repz
mov
andl
adc
add
sbb
fisttpll
xor
dec
mov
jge
addb
rclb
mov
test
into
popa
data16
repnz
stc
inc
cmp
pop
xor
or
fwait
xchg
mov
enter
aad
fcmovnbe
dec
daa
jmp
imul
mov
rcll
fnstcw
mov
mov
enter
mov
xchg
and
repz
ljmp
inc
out
xor
imul
cltd
and
shrl
mov
popf
ds
imul
xchg
sub
in
dec
in
mov
clc
test
hlt
test
lahf
fldt
jge
mov
ss
shll
pop
mov
iret
mov
out
in
aad
jns
stc
push
inc
arpl
push
cwtl
push
xor
cmpsb
repnz
aad
pop
js
negb
leave
mov
push
xor
dec
cmp
mov
lcallw
fdivl
lahf
testl
adc
fidivl
xor
add
jns
adc
rcll
jns
loopne
ds
dec
daa
xor
add
mov
hlt
hlt
les
cs
mov
sub
dec
rolb
add
cmp
loop
popf
adc
loop
outsb
in
sbb
mov
divb
inc
mov
push
push
mov
add
and
fimuls
and
dec
ja
add
mov
xor
add
lcall
into
mov
sub
pop
scas
xor
popl
shrb
jnp
jne
cmpsl
mov
cmp
mov
data16
jp
std
dec
movsl
or
mov
icebp
int3
cmc
int
xchg
es
insb
insl
sub
mov
adc
call
movsb
mov
jno
mov
lret
xchg
jmp
loope
imul
addl
cmp
push
popa
push
addr16
xor
adcl
scas
and
inc
jle
sbb
xchg
test
cwtl
lock
and
lret
aas
inc
fcoml
in
xchg
and
int3
pop
add
stos
jecxz
jb
push
sbb
mov
repnz
sbb
push
out
inc
or
inc
adc
fs
bound
push
or
push
cltd
fsubl
jnp
push
cmp
outsb
mov
pop
bound
push
add
adc
leave
stos
push
aam
mov
add
ficompl
dec
mov
divb
nop
lea
pop
mov
sbb
testb
mov
and
lret
daa
and
pop
xchg
cmp
jns
xchg
sbb
mov
push
out
sbb
aam
push
stos
orb
push
mov
or
and
stos
xchg
pop
es
dec
push
sub
and
cld
outsb
sub
fisttpll
and
inc
jns
scas
sub
pop
push
outsb
adc
push
stc
es
or
outsl
add
fisttpl
in
sar
stos
push
les
push
cmc
in
aas
adc
shlb
icebp
jo
loop
dec
inc
fcos
dec
mov
mov
iret
push
sub
sub
sbbb
stos
out
imul
dec
rcrb
mov
adcl
lcall
xchg
lds
push
cmp
xor
cmp
sbb
scas
das
xchg
dec
je
rcrl
push
add
out
dec
push
cltd
out
test
lret
fbstp
or
pop
jns
imulb
jbe
lea
aad
sbb
int3
add
dec
cmp
xchg
popf
addr16
jb
fnstcw
cltd
xchg
mov
xchg
xorb
sbb
mov
cmp
out
insb
loope
cmp
fcoms
mov
mov
xor
mov
mov
inc
mov
mov
out
push
adc
imul
out
adc
adc
dec
cs
push
sub
in
jb
sub
movsb
stc
jp
lock
movb
mov
dec
jle
sbbb
push
jb,pn
jecxz
hlt
add
mov
jl
cmpsb
fs
popa
adc
adc
lea
push
adc
sub
inc
ds
hlt
push
sub
sub
in
shll
sti
cmp
scas
sti
lahf
gs
pop
and
xchg
enter
sbb
sahf
orb
data16
imul
and
les
fisubrs
insl
xor
xlat
inc
cld
jo
pop
or
popf
or
in
rcrl
dec
cltd
sbb
mov
fwait
int
popa
in
mov
mov
repnz
cmp
jle
movsb
lock
mov
and
mov
lods
sbb
dec
mov
push
scas
cltd
jecxz
mov
add
dec
fdiv
xchg
in
sub
sbb
fbld
mov
and
mov
cmpsl
or
add
xor
xchg
cli
js
cmp
lea
in
lds
sbb
sub
adc
rcrb
rcl
pop
pop
sbb
pusha
loopne
rolb
adc
sbb
mov
mov
mov
inc
xor
addr16
mov
mov
faddl
loop
outsb
sbb
push
rorl
sar
movsl
inc
incl
sbb
lock
dec
xor
pop
inc
add
ss
pusha
lods
sub
and
dec
rclb
movl
jnp
inc
xor
sahf
stos
push
add
test
add
jbe
call
add
pop
inc
in
fsts
out
sub
aam
mov
fsubl
les
enter
insl
rorb
sub
and
fistpl
fcomps
cmc
cltd
rcl
int3
aaa
cli
jns
xlat
fidivl
xor
inc
insl
out
jg
jmp
jecxz
inc
ja
cmp
xchg
mov
xchg
push
sbb
and
push
call
pusha
adc
imul
out
mov
jo
mov
in
or
add
cwtl
sbb
mov
fmull
push
inc
fdiv
scas
inc
int3
mov
fwait
push
sub
mov
das
cmpsb
enter
mov
and
jno
js
insl
cmpsb
dec
and
add
rcrb
orb
cwtl
inc
mov
loopne
pushf
notb
xchg
push
stc
lret
jg
ja
jnp
mov
sbb
pop
lret
jge
cmp
cli
mov
andps
push
sbb
sarb
jae
inc
out
outsb
jne
dec
adc
cmc
dec
out
test
mov
pop
ds
cmp
push
push
mov
outsl
push
in
insb
jno
fdivrl
les
sub
cmp
iret
out
cmc
xor
lahf
repz
mov
mov
insl
test
and
rorl
mov
dec
xchg
jns
das
icebp
fs
sub
sub
xor
pushaw
jns
ret
ret
mov
cmp
dec
and
inc
out
pop
fldt
xor
std
call
push
push
push
pop
ret
aam
into
push
lods
xor
addr16
int3
mov
mov
mov
faddp
aas
inc
testb
popf
mov
roll
mov
mov
das
and
jns
adc
add
jnp
push
fistps
out
add
cli
fisubrl
push
addr16
pop
add
xchg
sbb
add
cmp
push
rclb
imul
cmp
clc
jg
push
cmc
frstor
jbe
mov
lea
testl
pop
out
sub
leave
jb
pop
dec
and
push
int
push
scas
andl
xor
push
or
sub
repz
mov
pop
sbb
iret
lcall
mov
mov
add
push
lods
mov
inc
stc
mov
mov
mov
jp
lock
sbb
lock
scas
movsl
dec
adc
fldl2e
push
jo
pop
dec
add
inc
fisubrs
mov
inc
xor
pop
aad
pop
fistl
mov
push
mov
mov
xchg
add
adcb
aad
mov
sahf
push
adc
cmc
loope
and
xor
sub
jmp
cs
std
cmp
and
adcl
adc
rorb
pop
aas
xor
inc
repz
hlt
mov
int3
inc
pop
ret
out
leave
scas
add
mov
cmp
mov
repnz
es
gs
push
or
inc
pop
dec
mov
pop
cmp
ljmp
sahf
mov
inc
pushf
ficompl
scas
lcall
jl
lahf
mov
mov
jb
clc
jle
out
sbb
dec
inc
jnp
sbbb
call
pop
xchg
sub
mov
pop
enter
bound
jp
test
pop
outsl
push
insl
pop
push
in
cmp
bound
dec
call
ss
jle
addl
dec
push
loopne
mov
dec
cltd
jb,pt
or
dec
addl
ja
fadds
jge
cmp
fnstsw
test
mov
push
lds
mov
out
add
cld
push
add
mov
icebp
arpl
xchg
mov
test
dec
jge
les
adc
push
jp
rcrl
sub
xchg
dec
nop
js
cmp
insb
push
mov
sbb
xchg
in
mov
in
addr16
mov
mov
xor
jbe
pop
cmp
jecxz
jbe
inc
mov
stos
xchg
aas
fcmovb
dec
out
leave
insb
outsl
xor
mov
testl
ds
pushf
clc
jp
pop
lds
pop
adc
cld
fs
jl
iret
ffree
sub
test
popf
arpl
xor
dec
das
pop
sar
add
les
cltd
ror
xor
xor
fs
movl
sub
rcr
push
punpcklwd
mov
cmp
rep
hlt
rorb
xchg
and
dec
addl
or
push
ret
inc
mov
adc
call
cmp
inc
cmp
stos
lods
mov
testl
xor
les
nop
add
or
jle
jle
sbb
arpl
mov
xchg
mov
mov
xor
sti
icebp
xor
cwtl
cld
sti
mov
or
cmp
hlt
xor
and
fisttpll
xor
daa
pop
out
cs
jle
cli
mov
sbb
xchg
push
jg
jae
dec
mov
jmp
fcomps
lock
nop
aaa
outsb
insl
jp
ret
mov
push
addr16
sbb
fs
aam
mov
arpl
jbe
aad
addr16
arpl
pop
mov
popf
mov
dec
inc
pop
xchg
xor
std
repz
xor
jbe
aas
xchg
mov
loop
pop
test
stos
add
jb
sarl
push
push
int
cmp
shlb
and
rcrb
in
addr16
ret
test
dec
fisttps
in
inc
mov
imul
push
mov
push
dec
jbe
xchg
dec
mov
arpl
scas
cmc
or
mov
lret
outsb
mov
les
fcoml
gs
push
and
cmp
add
or
xlat
adc
jp
mov
xchg
xchg
mov
mov
xor
mov
sbb
cli
and
inc
push
popa
jmp
cmp
call
data16
das
jge
lods
push
aad
cmpsl
fwait
movb
adc
pushf
xchg
dec
insb
sub
stos
xor
mov
out
bound
mov
fmull
push
add
icebp
adc
fsubrl
mov
adc
lahf
inc
xchg
enter
jnp
inc
dec
daa
daa
ss
outsb
mov
push
cmp
mov
sub
lds
push
cmpsb
sbb
adc
inc
mov
jnp
sub
sub
pop
dec
xlat
scas
pop
outsl
push
adc
xchg
and
xlat
push
xchg
out
outsl
nop
pop
pop
shrb
sbb
pop
sarl
bound
aas
jbe
inc
mov
dec
cmp
test
outsb
jno
ret
pop
adc
jmp
and
fsubl
push
mov
mov
fcmovb
mov
lds
mov
and
or
lret
inc
mov
mov
iret
inc
mov
inc
inc
sahf
sbb
add
add
cmp
cs
fsubr
or
insl
mov
addr16
scas
ja
dec
cli
movsl
sarl
sbb
mov
lret
sub
lret
test
in
test
add
sub
loopne
andb
mov
xchg
mov
and
jl
mov
push
jne
les
jg
push
mov
outsb
xor
pop
push
inc
inc
popa
mov
andl
jbe
popf
js
fstl
mov
loop
outsl
xchg
push
fdivrl
shlb
pop
insl
or
pop
xor
xor
mov
call
sbb
ss
and
aad
out
xorb
mov
jno
dec
sub
mov
fisttpl
popf
pushf
addr16
imul
aam
mov
add
out
cmp
dec
loop
sub
iret
dec
push
jge
idivb
nop
inc
mov
je
mov
or
in
or
fsts
pop
in
cmc
adc
addr16
cmpsl
cmpsb
rorl
jo
sti
add
adc
aam
repz
aaa
push
cmpsb
mov
adc
mov
cmp
iret
gs
dec
mov
xlat
sbb
mov
loop
scas
jg
loope
fyl2xp1
out
out
pop
nop
jg
lods
cmp
iret
shr
xchg
stos
cltd
sbb
enter
testb
es
movsl
test
and
jge
outsb
xchg
out
or
xor
inc
jmp
loop
sub
imull
cmpsb
inc
daa
ret
dec
leave
clc
gs
adc
mov
adc
decl
mov
xchg
mov
in
and
ja
fmuls
je
xor
fdivl
adc
mov
sti
mov
push
orl
in
aas
sub
rolb
sti
sti
and
int3
lods
sbb
rcrl
gs
pop
sub
dec
lret
mov
inc
and
jp
pop
int3
xchg
int
fcoms
xchg
and
addr16
xchg
mov
mov
lds
rcrl
lahf
fldenv
out
xchg
movsb
loopne
mov
lock
arpl
repnz
jl
insl
xor
fisttpll
sub
int
push
sbb
dec
mov
loop
mov
int3
mov
fsts
xor
jnp
dec
inc
mov
loop
sbbb
lcall
stos
xchg
mov
std
addr16
mov
adc
sbb
pop
inc
mov
std
mov
movb
push
cwtl
and
pop
sub
cmp
popf
xchg
push
sub
jmp
pop
mov
bswap
leave
jbe
mov
mov
bound
sti
test
stos
lahf
fistl
add
or
mov
nop
adc
dec
pop
or
xchg
or
ja
cld
ret
sti
mov
pop
pop
bound
nop
outsl
pop
mov
pop
sbb
dec
mov
push
xor
add
fld1
mov
rol
add
push
jmp
adc
xchg
cmp
sbb
xor
out
gs
scas
add
sbb
sub
push
inc
cmpsl
int
pop
cmp
jle
push
add
and
inc
push
mov
pop
or
and
push
subl
leave
adc
push
je
mov
jae
dec
mov
pop
call
loope
sub
fiaddl
out
or
ja
add
lock
jp
mov
xchg
lds
scas
loope
in
setle
adc
movsb
cwtl
dec
std
mov
iret
clc
pop
mov
lea
jle
mov
mov
stos
sub
repz
pop
adc
mov
cld
inc
les
sarb
sbb
lds
repz
fsts
mov
inc
pop
insb
popf
xor
dec
nop
fwait
adc
int3
xchg
inc
cmc
cmp
xchg
hlt
inc
lret
mov
flds
push
xor
jmp
cmp
push
dec
pop
je
js
jnp
push
jle
test
rcrl
xor
adc
xchg
xchg
mov
or
jle
fstpl
jns
in
popf
es
inc
fcompl
enter
mov
aaa
rcrl
or
push
adc
sbb
jmp
outsl
xor
out
sub
ja
inc
stos
rorb
xchg
inc
mov
and
int
dec
jnp
inc
idivl
shlb
jmp
xchg
mov
imul
sbb
rorb
cmp
mov
mov
nop
stos
repnz
aas
lds
xor
std
out
mov
rolb
imulb
xor
sbb
xorb
or
jmp
add
mov
fadd
or
int
rclb
lcall
mov
mov
lret
push
cmp
cmp
jbe
push
out
dec
clc
ja
subl
pop
in
pop
inc
or
add
xor
fisubrl
in
jle
sub
cmpsb
push
lods
sbb
in
adc
int
pop
inc
add
or
xchg
jne
movsb
jo
in
xchg
lahf
icebp
push
inc
imul
xchg
repnz
daa
push
jae
or
fidivrs
fs
dec
ficomps
or
aam
shr
cmp
add
pop
jmp
pop
sub
fwait
rorl
inc
push
roll
xor
or
cld
pop
addr16
add
xor
movsb
jmp
fwait
fisubrl
jne
clc
popf
ficoml
into
mov
pushf
mov
push
push
cmp
mov
mov
mov
mov
cmc
in
orl
hlt
xor
ja
jb
js
ljmp
jo
sbb
in
and
and
xchg
xor
dec
xor
les
jge
sbb
add
mov
lds
movsl
inc
mov
dec
mov
ret
adc
adc
fdivs
add
out
das
jns
cmp
es
pop
mov
movsb
repnz
iret
data16
add
rclb
push
cmc
inc
in
dec
lock
shlb
mov
addr16
ror
int
insb
cmpsb
mov
pop
dec
add
mov
inc
mov
imul
mov
pop
adc
stc
aaa
push
push
mov
xor
push
pop
mov
adc
and
xor
mov
pop
sbb
cmpsb
sbbb
sbb
out
mov
pop
mov
xchg
cmp
pop
adc
jmp
leave
fdivl
push
ret
lods
mov
jp
or
mov
pop
stos
dec
inc
scas
dec
sub
push
fcompl
sub
xchg
pop
fadds
jp
sbb
jo
push
and
out
fisubs
ds
test
int
shll
std
fiaddl
push
pop
scas
into
pop
xchg
mov
addl
mov
imul
xchg
test
push
scas
xlat
pop
add
push
xchg
test
jge
cmp
push
jl
jo
icebp
push
sbb
push
jno
mov
cmpsb
dec
test
pop
outsl
sub
test
rcrl
xor
adc
pop
pusha
dec
mov
xchg
in
fnstcw
jnp
mov
sbbb
or
cmp
inc
inc
enter
cmp
rcrb
pop
test
sub
xchg
mov
das
cmpb
mov
jge
or
out
pop
or
dec
sti
push
push
leave
push
icebp
pop
jecxz
fcoms
scas
push
or
mov
pop
imul
inc
pop
dec
lods
dec
xor
mov
cs
pusha
jns
xchg
insl
jbe
dec
iret
jle
cli
mov
mov
adc
insl
inc
push
pop
loopne
cli
das
in
jo
mov
jno
sti
js
in
icebp
cmp
pop
test
clc
pop
or
lret
xchg
lcall
shrb
pop
pop
fildll
adc
push
or
psubb
jae
jae
int
int
and
sti
xor
inc
sbb
dec
sbb
and
lods
dec
ljmp
hlt
add
adc
in
pop
xchg
mov
pop
lcall
orb
jbe
les
fwait
dec
test
add
push
out
adc
repz
int3
mov
mov
and
sbb
cwtl
mov
test
frstor
adc
dec
and
aad
inc
cmp
mov
ja
imul
mov
ljmp
and
jle
std
push
lods
into
jp
pushf
lods
and
pop
loope
and
int
jns
jl
cmp
xorb
push
aam
jge
pusha
das
repz
cs
push
iret
lret
or
mov
test
daa
lret
pop
dec
and
push
xchg
clc
dec
addl
in
pop
add
insl
ret
into
mov
fwait
mov
mov
mov
addr16
cmp
mov
aam
jae
movsl
popf
imul
std
das
jecxz
push
and
sub
inc
sbb
mov
or
insb
push
jbe
mov
add
shll
addr16
mov
cmp
inc
mov
xchg
sbb
mov
js
lods
movsb
inc
mov
dec
mov
aaa
xlat
je
cmp
pushf
jae
loope
pop
loopne
jno
xor
hlt
daa
shl
cwtl
loop
xchg
jl
je
xor
dec
xchg
je
mov
dec
pop
mov
mov
test
test
sbb
jo
jmp
loopne,pt
push
mov
clc
cmc
push
inc
sub
lret
loopne
ljmp
jb
jl
insb
xor
fidivrs
ja
push
xchg
mov
or
xor
xchg
jne
xlat
jle
cmp
sub
lock
adc
mov
fstps
and
sbb
divb
dec
mov
xorb
adc
cmp
dec
ja
cmp
cmp
mov
pop
cmpsb
cld
mov
aas
mov
cld
pop
lahf
xchg
mov
out
inc
hlt
and
cmp
shrb
mov
xchg
cld
push
mov
or
das
stos
sbb
into
jge
or
dec
and
xchg
or
mov
or
cmp
push
xchg
movsl
out
and
xchg
xchg
cmp
jge
jp
flds
sub
pminsw
dec
out
adc
jno
pushf
and
pop
lds
mov
cwtl
ljmp
aad
jne
dec
dec
inc
pushf
xor
js
sbb
das
int3
addb
dec
inc
push
fs
gs
in
dec
repz
inc
testl
cmp
daa
mov
cmp
out
and
mov
movsb
int
adc
or
repz
loop
xchg
mov
pushf
push
xchg
xchg
jle
les
loop
insb
shrl
mov
stc
pop
sub
and
mov
mulb
jg
daa
sbb
imul
jecxz
xor
or
ljmp
mov
dec
push
mov
push
in
push
ss
fbstp
dec
mov
dec
pop
pop
or
pop
lock
inc
es
outsl
add
lods
sbb
lcall
sub
jb
aaa
insb
mov
out
or
daa
mov
dec
mov
jl
clc
add
nop
es
or
js
rcll
repnz
mov
xchg
hlt
xor
sti
rcrl
pop
lock
gs
movsl
push
adc
lcall
shrb
loopne
scas
pop
out
mov
ds
or
jmp
bound
in
int3
mov
cmpsb
repz
push
push
mov
mov
filds
bound
inc
xchg
pop
mov
jne
mov
je
adc
sub
mov
push
xor
or
push
jbe
xchg
nop
dec
decl
xor
inc
dec
aam
fwait
or
ljmp
mov
das
cmp
or
incb
lret
cmp
cmp
stos
leavew
loop
mov
out
es
inc
mov
outsl
iret
hlt
inc
or
dec
sbb
lea
jmp
mov
adc
mov
mov
or
cmp
inc
les
div
data16
dec
mov
std
push
out
loop
pop
mov
jne
sahf
add
leave
lock
jb
call
icebp
adc
les
das
outsl
rcll
jge
fyl2x
sub
in
jge
adc
loop
dec
mov
sub
mov
push
mov
xchg
mov
aaa
adc
add
mov
xchg
or
mov
add
gs
in
stc
pop
mov
loope
stc
dec
jb
cmp
clc
xor
sti
adc
nop
push
cltd
push
movsb
jbe
cmp
or
dec
lds
std
imul
mov
inc
pushf
xchg
out
lret
adc
cmp
push
ja
push
xchg
inc
lret
shll
repz
push
fidivrl
pop
cmp
adc
xacquire
sub
or
dec
fisttpl
repz
xor
rcrb
jmp
ret
dec
rorl
data16
push
stos
push
lock
in
mov
das
adc
je
js
xor
inc
scas
push
inc
arpl
daa
lods
aad
testb
jmp
or
push
js
mov
mov
outsl
and
lret
rolb
ljmp
addr16
sti
cmpsb
mov
pushf
lcall
aad
xchg
pop
pop
mov
adc
xor
or
shr
nop
or
inc
das
sub
mov
jmp
jmp
xchg
mov
aad
adc
sbb
sbb
pop
mov
or
cmpsb
int
fistl
xor
jge
loope
out
xchg
in
xor
sub
outsl
jbe
inc
test
dec
sbb
loopne
bound
stc
xor
addr16
repnz
xchg
cli
stos
jbe
or
push
pminsw
mov
stos
popf
int
repz
or
movsb
and
sbb
int3
ss
iret
and
push
out
add
addr16
clc
and
repnz
mov
sub
movsl
stos
lahf
sti
push
pop
ret
cs
neg
loop
xchg
pop
fsubrp
stos
mov
data16
scas
and
lcall
shrl
push
jnp
pusha
push
xor
xor
inc
jl
xchg
int
xor
or
lahf
stc
aam
mov
mov
shll
sbb
subb
and
int3
dec
cmp
add
sub
jnp
test
sbb
insl
test
sbb
mov
sbb
imulb
dec
iret
test
mov
test
punpckldq
dec
pop
gs
xchg
pushf
and
stos
std
or
inc
and
test
sub
mov
add
out
mov
sbb
lock
jno
pop
pop
add
cmpsl
jmp
in
pop
sub
ss
mov
sub
add
cwtl
out
pop
push
mul
cmpsl
ja
ljmp
cltd
lcall
sub
adc
pop
jo
mov
loopne
idivl
out
sub
lods
loopne
int3
rolb
xlat
cmp
mov
dec
in
inc
shrb
push
les
orl
fs
std
popa
int
scas
fcmovnu
stos
sub
clc
jge
cwtl
sti
mov
mov
je
iret
or
add
cmpl
mov
inc
cld
fiadds
pop
lods
pop
add
add
mov
mov
mov
out
mov
jle
idiv
pop
les
pop
and
or
testl
shll
jb
les
sub
jmp
ss
xor
mov
fistpl
shl
sub
jge,pn
push
shl
inc
mov
repnz
divb
incl
movsl
fsts
sti
push
dec
arpl
mov
pop
repnz
push
pop
out
dec
pop
mov
lret
push
sbb
or
mov
inc
sub
or
outsl
int
pop
popa
xchg
dec
or
pop
mov
mov
adc
hlt
cmp
push
int3
xchg
cmp
cmpsb
and
loop
les
xchg
cmc
dec
fistpl
sub
mov
xor
sub
fsubl
push
adc
pop
scas
aad
adc
push
push
pop
or
mov
add
aam
lcall
lods
les
es
outsl
insb
xchg
insl
rcrb
test
or
inc
sbb
stos
jne
gs
push
mov
adc
mov
jbe
pusha
std
add
sahf
sbb
sub
fsubl
in
cmp
mov
jle
adc
pop
dec
and
lea
ljmp
jl
mov
pop
cmp
xchg
rol
pop
lret
cmpsb
popf
push
push
dec
in
cs
sti
enter
outsl
repnz
int3
add
sbb
push
int3
mov
lock
js
mov
jl
xor
dec
in
pushf
fstpt
xor
pop
mov
adc
push
cmc
popf
pop
push
es
mov
and
cmpsb
into
dec
test
mov
ja
in
jns
mov
lcall
repz
lea
lock
testl
cmpsb
dec
jnp
jo
fisttpl
fiadds
and
pusha
inc
adc
pop
insl
shll
mov
xor
sahf
mov
mov
popa
pop
imul
nop
mov
call
movsl
fstpl
call
pop
inc
pop
loope
data16
fmul
dec
push
or
mov
push
mov
mov
aaa
lods
dec
cwtl
xchg
jl
les
ror
ficompl
int
pop
clc
pop
aas
ja
fsubrs
clc
mov
jl
dec
mov
jae
aaa
in
bound
push
mov
pop
test
mov
adc
push
das
cmpsb
xchg
mov
cltd
insb
cmp
jns
cmp
adc
lods
pop
leave
xchg
lea
xchg
jmp
mov
xchg
subl
push
pop
inc
inc
mov
call
adc
in
xchg
or
jl
dec
mov
lahf
add
push
xor
andl
mov
in
xchg
pop
insl
insl
cwtl
data16
cmp
inc
popf
cmp
and
mov
xor
and
or
scas
negl
loopne
or
push
pop
mov
and
test
inc
push
test
call
test
popf
xor
cs
shlb
xor
stos
aaa
jmp
mov
nop
mov
xchg
push
xchg
rclb
shlb
or
in
test
or
and
cltd
punpckldq
popf
push
shr
push
mov
jns
xor
mov
mov
fistps
push
leave
push
xor
inc
aas
jnp
movsl
sub
adc
add
or
mov
push
lret
fcomps
sbbb
nop
cmp
pop
fcompl
cltd
js
pop
xor
xchg
arpl
icebp
jmp
mov
pop
pop
shl
dec
inc
imul
int
cmpsb
jb
shll
pop
or
and
xchg
cmpsl
dec
mov
sbb
mov
xchg
icebp
stos
cmp
sub
or
xchg
or
popf
orb
shrl
imul
dec
add
pop
test
cltd
imul
jne
addl
not
push
push
ss
pop
push
mov
icebp
nop
iret
xchg
loop
mov
pop
cld
adc
pusha
out
xchg
loop
aaa
incl
xor
sbb
movsb
sbb
fildll
and
fadd
int
enter
addr16
mov
mov
fsub
in
aad
imul
cltd
sbb
sbbl
pop
lcall
and
dec
je
jbe
sbb
sbb
cs
aad
or
imul
xchg
fs
jns
xor
push
lcall
ja
xchg
push
les
out
mov
jle
push
loop
cs
adc
jo
cmp
cli
xchg
inc
call
xchg
testl
aad
adc
add
or
ja
jmp
in
mov
iret
xchg
sahf
outsl
push
sbb
mov
cmp
jge
sbb
adc
mov
sbb
aam
jmp
xchg
mov
repz
popl
mov
jno
xor
enter
sbb
cli
ficoml
xchg
jno
or
push
add
pop
jecxz
es
movsb
xor
daa
mov
push
sub
xor
push
sahf
es
xchg
orb
push
mov
pushf
incb
xor
add
repnz
or
daa
or
test
fwait
mov
scas
jae
bound
adc
mov
and
in
inc
xor
pop
sub
adc
cwtl
jl
adc
lods
mov
std
or
push
in
xchg
adc
pushf
xchg
mov
inc
jo
mov
negb
pushf
mov
push
lods
jbe
jae
ja
push
or
sbb
lea
sbb
xchg
test
or
shll
ret
je
adc
vpshuflw
or
sub
cltd
dec
mov
inc
notl
sub
ss
pop
inc
orb
add
xadd
scas
sbb
cmc
pop
mov
test
dec
inc
jle
jae
fsubrl
sbb
xchg
push
and
cmpb
ret
aad
fstpl
push
repz
jne
jbe
jae
leave
test
popa
dec
call
xchg
jbe
sub
scas
pop
jl
divb
inc
jge
ret
cmp
mov
lret
mov
es
out
mov
pop
scas
repnz
lea
push
in
or
pusha
xor
mov
and
movsl
sub
cli
daa
mov
shld
or
loopne
pop
scas
add
xor
out
mov
dec
sub
add
mov
enter
lock
lahf
mov
mov
adc
imul
hlt
dec
dec
or
sub
aam
jo
loop
and
or
jo
cmp
outsl
adc
jae
push
dec
inc
stos
mov
cli
stos
popf
aas
sub
js
imulb
mov
sbb
ljmp
add
das
xor
bound
fadd
jne
push
movsb
mov
mov
daa
adc
sub
fcompl
dec
mov
pop
fs
mov
nop
cmpb
mov
jbe
xchg
jo
aas
aad
mov
inc
mov
pusha
adc
or
lock
dec
cmpsl
repnz
pop
jmp
stos
mov
shlb
lret
outsb
xlat
lret
in
movsl
and
jne
in
jne
testb
loopne
das
inc
fdivrl
cmc
mov
rol
mov
jae
mov
mov
jb
jl
or
xor
out
pop
xchg
hlt
lret
push
mov
in
daa
push
push
push
loop
dec
orb
sbb
add
into
xor
jmp
pop
insb
scas
add
test
pushf
adc
aad
ret
ficoml
inc
call
lret
sti
adc
add
push
loop
les
adc
repnz
jbe
test
add
cltd
das
stc
mov
sbb
dec
mov
adc
push
nop
dec
push
or
data16
pop
mov
adc
scas
dec
jae
lods
dec
xor
rol
mov
xor
xor
je
xor
mov
jbe
jl
xchg
inc
pop
lcall
jp
jns
aaa
inc
mov
cmp
inc
and
mov
pop
pop
lea
fsubrs
pop
adc
fucomip
xchg
xchg
fidivs
lock
loopne
shl
dec
sub
or
imul
lea
icebp
aaa
pop
push
add
pop
xchg
test
insb
sar
pop
or
pop
int
adc
or
push
aad
sbb
das
sbbl
dec
lret
pop
add
es
xor
sub
sub
repnz
jle
sbb
cmp
in
mov
push
xor
hlt
mov
cmp
cmp
xor
sub
mov
pop
or
js
lcall
jns
mov
dec
pop
xchg
mov
scas
push
in
in
pop
push
mov
push
cmp
mov
popf
cmp
repz
outsb
mov
and
push
pop
fiadds
dec
adc
insl
data16
push
dec
cli
orl
hlt
out
sahf
data16
adcb
shl
push
mov
pushf
pop
sub
nop
aad
dec
pop
je
push
mov
mov
add
and
test
sahf
mov
dec
movsb
mov
mov
inc
ds
push
emms
xor
in
mov
xor
adc
cmp
cmpsw
dec
incl
xchg
fiadds
xchg
fildll
scas
nop
leave
inc
xchg
shll
dec
xor
ja
lea
xor
sub
add
notb
adc
ret
xchg
dec
testb
cld
pop
sub
lcall
inc
jge
fstl
or
mov
or
popa
loopne
lods
bound
shlb
mov
mov
mov
pusha
out
scas
and
inc
fisubrl
push
mov
or
xor
xlat
movsb
mov
int
add
pop
pushf
daa
add
ja
or
mov
sti
xchg
jmp
cmpsb
dec
sub
aas
xorl
cmp
std
push
call
adc
xor
pushf
imul
std
lds
lcall
adc
pop
cmp
das
adc
cmc
jns
sbb
std
insl
mov
cmpsb
ds
lret
push
and
movsl
jmp
pushf
loope
aad
nop
mov
ss
arpl
mov
add
mov
cmp
stos
roll
shlb
inc
or
iret
adc
jbe
sub
mov
add
sub
add
adc
and
xor
rorl
jmp
sbb
out
dec
mov
pop
add
push
mov
push
dec
or
mov
test
aaa
pop
sbb
jmp
jns
jb
addr16
push
sti
mov
addr16
xchg
xor
iret
jmp
dec
packssdw
fdivrl
inc
jecxz
popa
into
rolb
mov
ret
or
in
mov
daa
out
add
pusha
outsl
lock
jne
pop
jne
dec
iret
arpl
push
cwtl
mov
dec
addr16
add
inc
outsl
movsl
pusha
nop
mov
mov
popf
mov
or
ja
sub
inc
bnd
out
adc
push
shl
push
cmp
aaa
pushf
mov
fcomps
inc
mov
das
mov
ljmp
notl
int
test
bound
mov
sub
fmulp
ret
nop
add
repz
inc
add
mov
push
ret
ljmp
int
outsl
jge
jg
inc
adc
in
stc
mov
mov
or
out
sbb
pop
ret
pop
adc
fnsave
and
dec
mov
out
sbb
xchg
pop
lods
cmp
xor
inc
sub
repnz
xlat
loopne
cltd
adc
mov
movsb
lahf
mov
lahf
lds
lea
ja
push
jne
sahf
in
popa
cmp
mov
mov
xor
shl
shlb
xchg
lds
gs
mov
mov
ret
mov
sbb
mov
pushl
jmp
sbb
in
int
fldt
out
imul
jle
and
idivb
daa
lret
xor
sbb
lock
ret
lret
push
mov
push
jns
sahf
push
pop
xor
pusha
and
cltd
push
push
push
inc
sub
loopne
xor
xchg
and
or
movsb
subb
outsb
test
mov
ret
lret
sbb
loopne
mov
test
ja
jo
dec
outsl
das
rcll
mov
cmc
xor
out
rol
adc
fldcw
fwait
jmp
cmp
popa
jne
icebp
bts
fsubs
test
jmp
sub
inc
pop
test
mov
cld
mov
add
mov
shll
jmp
pop
out
fsubr
dec
push
mov
sub
push
push
adc
mov
jl
in
std
das
loop
xlat
imul
sar
sbb
outsb
mov
sub
xlat
mov
lock
into
mov
sub
inc
lea
jns
ja
lods
push
pop
or
int3
popa
or
sti
lds
mov
add
xchg
cltd
mov
cmpsb
clc
js
cmp
in
stc
aaa
mov
dec
lcall
hlt
pop
push
cld
in
nop
call
push
jnp
jo
sub
mov
fcomip
or
sbb
xchg
pop
jbe
sub
jne
push
xchg
xor
jne
push
jp
in
lods
or
add
sub
push
mov
fiaddl
mov
and
and
fsts
jl
ljmp
lds
shll
cwtl
lea
mov
lock
insb
lods
xchg
push
xchg
repz
shlb
and
lods
cmp
sbb
pop
mov
mov
add
cmpsl
mov
xchg
pop
pop
cld
ss
fcmovnb
shlb
les
fnsave
mov
out
hlt
insl
add
iret
add
call
roll
ds
arpl
call
outsl
sub
int
cmp
lahf
out
imul
cmpsl
outsb
mov
push
stos
adc
addr16
std
xor
int3
mov
jl
scas
ret
out
mul
adc
out
adcl
jl
fs
fbstp
call
pop
popf
add
arpl
outsb
andb
add
lahf
ljmp
inc
loop
orb
mov
lods
gs
loopne
sahf
aad
mov
push
push
aad
repz
mov
sbb
adc
adc
lea
mov
mov
xchg
xor
mov
inc
mov
push
movsb
xor
jle
sarl
aam
shlb
and
je
add
stc
sub
mov
xor
xchg
lods
add
cli
and
dec
fwait
xchg
cli
mov
test
inc
push
fstps
pop
or
ljmp
and
idivb
mov
adc
dec
xchg
dec
xor
out
aaa
mov
fidivrl
jo
or
sbb
das
dec
lret
lret
push
jbe
xchg
fcmovbe
imulb
fists
dec
push
mov
dec
ds
sti
icebp
imul
jae
ljmp
jns
xlat
add
pop
sahf
xor
scas
sub
pop
jg
cltd
sti
push
mov
mov
into
add
and
push
inc
xchg
xor
push
push
les
notb
xor
adc
pop
adc
test
enter
sub
movsb
cmpsl
aad
xchg
lds
out
mov
cwtl
bound
add
sub
mov
and
mov
jg
je
out
dec
inc
clc
addr16
push
aam
dec
insl
leave
jne
scas
iret
cld
test
sbb
stc
and
stc
xor
icebp
jmp
jmp
cmpsb
xor
sub
add
cmp
sbb
adc
cmp
add
cmp
test
push
sub
sub
or
pop
out
and
sub
xor
xchg
int
pop
inc
cmpsl
pop
push
sbbb
xlat
into
rol
pusha
lea
inc
mov
popa
inc
in
push
sub
rcr
inc
inc
rcrb
aam
or
push
jge
push
sub
std
js
sub
popa
loope
popa
mov
int
and
jb
mov
mov
sbb
pop
mov
push
pushf
push
mov
daa
dec
dec
inc
out
mov
lea
xchg
pop
adc
xor
imul
fldl2e
sbb
js
mov
lret
inc
mov
adc
out
out
sub
aam
pop
sub
or
movsl
cmpsb
jmp
pop
or
and
arpl
xor
and
clc
push
xor
loop
mov
aad
xchg
push
stc
negb
icebp
mov
add
xor
pop
or
mov
xchg
dec
xor
mov
insb
mov
test
cmp
adc
out
add
jle
das
jmp
movsl
pop
or
nop
dec
or
xor
mov
sub
out
cmp
lods
lods
pop
stos
ss
fimuls
cwtl
pop
sahf
mov
inc
xchg
cmp
sub
dec
and
fdivrs
sti
ss
jg
sarl
js
jge
sub
imul
pop
mov
pop
das
cltd
imul
popf
adc
add
inc
xchg
ja
dec
je
dec
inc
pop
in
mov
push
out
orl
inc
or
mov
shlb
ss
loopne
idivl
push
jp
les
sarl
int3
xchg
jmp
insb
fidivrs
sub
xor
pop
cmpsb
inc
pop
inc
xchg
inc
imul
add
add
cmp
xor
xor
mov
insb
addl
nop
incb
add
repnz
jle
loop
push
ret
jns
cmp
add
addr16
loope
jl
xor
stos
jle
dec
jmp
push
jo
sbb
lcall
inc
arpl
aaa
mov
in
mov
push
fwait
dec
push
loop
fcmove
enter
push
and
nop
stos
mov
lea
add
dec
fnstcw
or
shlb
in
aas
jo
add
xchg
sub
add
xchg
arpl
mov
push
mov
shrb
rcrb
inc
subl
in
sti
inc
mov
ss
add
loopne
ss
cmc
jge
mov
xor
das
mov
add
pop
dec
dec
fwait
lahf
mov
mov
inc
pop
js
jmp
in
dec
ss
xor
jge
cmp
and
inc
pop
into
push
jg
jecxz
cmpsl
leave
mov
mov
mov
xchg
mov
sub
js
test
addr16
call
lods
push
xchg
inc
mov
mov
fs
or
hlt
cmc
jnp
outsl
pop
pop
test
inc
mov
cmp
out
push
sub
mov
xchg
sub
dec
jmp
and
repz
arpl
dec
out
pop
in
cwtl
dec
sahf
adc
adc
lret
testl
test
push
iret
jo
pusha
inc
aaa
lods
xchg
mov
mov
mov
cmpsb
mov
les
add
push
cmp
fldenv
dec
xor
jbe
cltd
xchg
dec
and
js
cmp
sbb
fadd
es
cwtl
cmpb
dec
nop
rol
cld
cmp
sti
xchg
xor
xor
fmul
clc
adc
sahf
pop
xlat
or
sub
push
xchg
sub
pop
es
or
movsl
ss
inc
movb
inc
out
inc
xchg
test
cmp
out
adc
repnz
cld
stc
cli
sub
iret
hlt
push
push
add
adc
jl
jp
mov
fmuls
jecxz
in
cmp
jbe
dec
push
jmp
fisubrs
xor
test
or
or
jno
aas
fmul
push
dec
xchg
mov
cwtl
cmp
clc
into
enter
in
fcmovne
fstp
lret
ljmp
jl
dec
fwait
inc
push
ljmp
and
cld
insl
mov
iret
cli
jecxz
scas
mov
insl
adc
popf
in
cmpsb
xchg
negb
sbb
shlb
lcall
cwtl
jecxz,pt
mov
xor
roll
xchg
movb
sbb
mov
jbe
rcl
push
push
mov
fadd
inc
mov
int
ficompl
rcrb
test
jmp
or
sbbl
lret
pop
imul
mov
out
and
jo
popf
nop
mov
out
das
cwtl
loopne
inc
dec
xchg
test
mov
mov
in
and
inc
sub
pop
clc
pop
inc
arpl
stos
pusha
je
repnz
xchg
sbb
and
rcl
and
mov
dec
lret
hlt
pop
adc
jmp
aas
fstl
and
sub
add
out
jmp
sbb
and
pop
xchg
inc
cmpb
popa
fildll
adc
fwait
dec
mov
and
dec
sbb
lahf
mov
push
iret
push
adc
jae
and
clc
jge
idivb
xchg
xor
sub
in
mov
mov
inc
inc
jns
fsubrs
cmpsb
jno,pt
sbb
int3
mov
cmpsb
sarb
in
fisubl
jg
es
and
pop
cmp
inc
les
dec
dec
xor
xchg
cs
lock
pop
xor
adc
out
mov
adc
inc
fisttpll
test
sbb
xchg
sbb
and
mov
and
sbb
imul
lret
and
mov
mov
pushf
lods
xor
inc
ficoms
andb
in
ret
mov
or
mov
mov
inc
xchg
gs
adcl
pop
je
jnp
cmp
hlt
xchg
adc
inc
jp
sub
sub
add
inc
xlat
fcmovbe
dec
mov
inc
cmp
cmpl
sti
cmp
jo
mulb
mov
and
iret
ja
popf
cltd
mov
lea
insl
fsubs
mov
inc
shrb
pop
in
repz
loopne
push
sbb
roll
in
adc
dec
pushf
mov
scas
pop
add
fldt
scas
pop
les
int
in
fisubrs
mov
or
inc
jne
mov
sbb
jae
mov
mov
in
scas
sbb
sub
push
sbb
sub
das
add
push
mov
idivb
dec
fidivrl
stos
pop
cmp
cmp
pushf
add
nop
dec
icebp
movsl
lea
ja
inc
insl
hlt
sbb
cmc
sub
out
addb
popa
fsubs
sbb
mov
in
out
pop
inc
testb
pusha
inc
inc
push
push
xor
or
int3
pop
movsb
js
pop
inc
pop
and
jb
jl
nop
pop
outsb
aam
fnop
inc
adc
loop
lret
out
xchg
cli
sahf
add
pop
leave
or
ret
imulb
std
dec
repz
fs
cmp
xlat
icebp
push
data16
dec
push
mov
daa
add
into
cmc
sysexit
adc
push
ror
jp
and
add
mov
popf
ljmp
pop
jnp
push
cmpb
repz
jno
imul
or
mov
enter
mov
andl
jbe
test
aad
cltd
sub
pop
pop
adc
xorl
inc
out
fildll
test
xchg
xor
pop
cli
pop
sti
mov
insb
mov
lahf
sbb
loop
mov
push
xor
xchg
dec
push
ss
sub
sbb
add
clc
scas
adc
out
jecxz
jb
pop
add
inc
aam
sub
mov
or
test
cmc
pop
or
inc
jle
gs
int3
ds
mov
movsb
das
add
shr
cmp
lcall
loope
cli
dec
ss
lret
jmp
push
shlb
jp
jae
mov
outsl
xchg
xchg
les
inc
dec
out
adc
iret
sarl
fstpt
pushf
in
add
ja
cmpsl
inc
hlt
pop
dec
add
fwait
imul
call
cmpsb
push
aam
sbb
out
fldcw
adc
out
add
sub
push
outsb
cmp
gs
xchg
fs
out
les
jle
sbb
mov
mov
sbb
sbbb
adc
xchg
sbb
cwtl
xchg
push
pop
mov
dec
adc
push
dec
hlt
addr16
stc
adc
and
mov
pop
adc
jo
jmp
dec
mov
sub
pop
adc
sbb
ret
popf
jbe
jne
jg
push
sbbl
sti
cld
xchg
jg,pn
cmp
mov
sahf
enter
add
hlt
movsl
sub
iret
and
andb
pop
xchg
mov
xchg
adc
aas
sub
or
lcall
mov
inc
cmp
out
repz
bound
repz
fstpl
insl
xchg
or
rorb
popf
sub
loopne
push
icebp
sub
jb
mov
fnstcw
xor
test
scas
rol
jecxz
decl
mov
lods
into
rorb
movsl
jbe
mov
jl
and
lret
cmc
int
and
add
jge
call
mov
and
pop
dec
jo
mov
icebp
xchg
pop
bound
cmp
xlat
pop
mov
aaa
adc
aam
xor
daa
mov
in
aaa
pop
push
mov
inc
ljmp
sbb
repz
cmpsl
insl
outsb
adc
or
or
adc
inc
test
loopne
inc
mov
add
ds
into
cmp
lea
clc
dec
daa
int3
ja
fcmovb
leave
push
sbb
sbbb
cs
push
add
and
push
xor
add
cmpsb
sub
xchg
lods
rolb
flds
push
inc
cmp
inc
addr16
stc
jg
cmp
es
jmp
ja
push
aad
not
ja
rorb
xchg
pop
dec
loop
and
or
call
sahf
pop
sub
fldenv
push
sbb
xchg
testb
xchg
add
mov
sbb
loopne
daa
mov
jecxz
jns
push
xchg
bound
in
pushf
testb
or
repz
push
movsb
jne
mov
dec
aad
inc
xchg
xor
push
xchg
sub
pop
mov
jbe
dec
mov
pusha
push
loop
jnp
ljmp
sub
lret
push
inc
leave
jp
mov
inc
xor
dec
mov
mov
mov
inc
or
xor
add
jp
rorb
cltd
enter
adc
leave
les
popa
sbb
pop
push
out
ljmp
xchg
pop
push
aam
mov
mov
fidivs
pop
les
iret
ret
inc
dec
movsb
fildl
xchg
outsb
jmp
nop
jmp
pop
ret
sbb
gs
pop
idivl
cwtl
cmp
in
cmpsl
jmp
add
testb
scas
ja
in
push
popa
xor
cwtl
dec
scas
jg
inc
or
xchg
inc
shrl
mov
aas
add
inc
movl
or
les
int
in
push
fwait
stc
imul
jae
push
js
push
mov
lcall
cmp
pushf
cmp
pop
xor
loopne
and
out
int3
push
and
imul
das
mov
or
imul
sahf
dec
adc
mov
imul
dec
in
outsl
mov
arpl
mov
stos
push
out
ja
pop
jne
loop
pop
in
pop
xchg
data16
lds
sub
xchg
push
lds
adc
push
rorl
xor
lods
ret
dec
sbb
sub
push
inc
xchg
loopne
enter
dec
jle
mov
sbb
mov
sub
mov
rcr
fisttpll
xchg
sarb
test
gs
addb
jg
inc
cmp
fildll
xor
cli
xchg
jnp
mov
fstl
xor
sub
pop
mov
add
fistl
sbb
popf
adcb
lock
mov
btcl
adc
mov
movsb
aaa
xchg
jno
mov
inc
lea
pop
test
mov
mov
mov
xchg
pop
sbb
lds
nop
cmp
mov
mov
cmp
push
jle
sbb
push
addl
mov
mov
sub
cmp
lahf
enter
push
jp
and
sub
mov
insl
in
pop
mov
xchg
xor
lcall
das
inc
in
call
xchg
lds
in
pop
lods
gs
jle
dec
pop
xor
bswap
sbb
push
cli
fiaddl
sbb
in
push
stos
sub
dec
sub
fnstenv
mov
pop
movsb
imul
sbb
das
xchg
ja
pop
xchg
dec
iret
mov
roll
sbb
mov
jmp
lock
cmp
mov
lods
cmp
leave
cs
pop
pop
dec
lret
and
movsl
pop
pop
sub
pusha
scas
xchg
cs
pop
xchg
inc
stc
rolb
mov
mov
into
clc
testb
mov
pushf
push
xchg
cld
adc
adc
dec
lahf
test
das
or
cltd
jae
out
leave
and
fsubrl
adc
mov
mov
fcomip
cli
ficompl
test
loope
mov
xor
push
fistps
cmc
lret
sbb
popa
and
add
sub
es
xchg
into
ljmp
pushf
mov
fwait
mov
mov
lcall
fidivrs
iret
adc
lds
and
cli
inc
out
push
inc
popf
pop
jge
push
inc
ffree
outsb
pcmpeqb
loop
in
push
testl
pop
cmp
rol
out
and
test
test
adc
xor
dec
std
add
mov
daa
push
shll
push
or
scas
cld
repz
push
inc
aaa
mov
rolb
and
stos
scas
mov
into
imul
dec
divl
sbb
push
push
mov
lods
sub
and
jnp
cli
movsl
movsl
ds
stos
inc
push
jbe
ljmp
xor
cmc
push
mov
push
lret
mov
jmp
and
pop
sbb
xchg
pop
lea
pop
into
jmp
cmp
mov
out
daa
lret
stos
and
mov
pop
out
push
call
inc
sub
inc
icebp
mov
out
jb
test
shr
push
xor
andb
shl
loope
jae
test
pop
out
test
and
sub
mov
into
mov
test
icebp
inc
inc
rcrl
sub
sahf
xchg
aaa
adc
rcrb
pop
inc
adc
pop
dec
pop
cmp
sbb
mov
lea
mov
aam
mov
mov
je
xlat
mov
ret
sub
jmp
mov
add
push
add
mov
add
dec
inc
aam
jnp
out
xor
ja
adc
rolb
dec
stos
rorl
sub
inc
mov
ror
shlb
loope
test
popa
pop
int3
mov
push
jl
aam
dec
stc
jl
je
mov
mov
jae
movsb
dec
adc
insb
cltd
lods
pop
or
aas
or
and
stc
fwait
jl
xchg
je
mov
jle
mov
mov
push
push
clc
sbb
pop
push
adc
ret
sti
mov
push
or
ficoml
pop
inc
push
jg
out
jo
pop
mov
imul
test
mov
mov
hlt
dec
mov
vmovdqa
outsl
ret
jo
push
cmp
in
dec
jle
lcall
dec
mov
movl
pop
push
jl
push
dec
aad
in
pusha
fwait
push
jnp
pop
movsb
xchg
inc
mov
mov
lds
stos
xchg
movsb
mov
cli
les
cmp
or
dec
inc
sub
pop
mov
enter
cli
cmp
xor
xlat
roll
jmp
fldt
sbb
mov
pop
push
push
mov
adc
cmp
sbb
push
pop
add
nop
cmp
leave
xor
mov
decl
push
subl
das
lods
popf
sarl
xchg
push
psubsb
aam
adc
fdivl
add
mov
push
pop
je
jmp
xlat
and
and
cmc
push
dec
sbb
or
stc
push
insb
or
ds
ret
cld
dec
jecxz
adc
je
dec
stos
out
movsl
int3
shlb
sbb
push
mov
movsl
and
cmc
rorb
cmp
and
fwait
add
lret
add
mov
ret
dec
in
mov
sub
popa
cmp
mov
cli
mov
test
pop
js
lea
push
adc
dec
loop
imul
xchg
data16
mov
jne,pt
cld
popa
sub
push
shlb
jg
mov
jmp
jmp
or
mov
in
and
dec
sbb
xor
and
inc
add
sub
pop
cmpsb
loope
pop
or
out
mov
xchg
ja
subl
and
jmp
and
mov
lret
and
jns
dec
je
xlat
or
jle
xchg
cmp
jg
out
adc
mov
jecxz
sbb
and
cmpsb
mov
jmp
outsb
fwait
pushl
jae
xchg
inc
fbld
xor
mov
outsl
and
cmp
sub
lds
bound
adc
cmp
pop
mov
sbb
pop
sub
addr16
push
int3
int
jbe
insl
cmp
jmp
inc
fs
inc
add
int3
loopne
ds
mov
mov
test
sbb
outsl
cmp
fcmovbe
pop
fcomip
cmp
inc
sbb
mov
test
adc
into
out
xchg
fisubs
sub
or
cwtl
outsl
roll
mov
sbb
jge
pop
pop
sti
cwtl
inc
xchg
out
and
insb
pop
xchg
mov
sub
lods
iret
or
stos
mov
aaa
xor
or
lds
adc
pusha
pop
popf
sbb
test
inc
or
mov
and
pop
mov
sti
repz
adc
dec
add
sbb
jmp
ss
adc
aad
xor
mov
cld
push
and
and
mov
in
mov
sbb
or
cs
ljmp
mov
jge
test
pushf
jmp
dec
in
xchg
repnz
imul
xchg
loop
cmpsl
inc
scas
iret
xor
pusha
jmp
and
cmp
or
cwtl
mov
lods
cmp
jns
sub
test
sub
ss
ss
mov
aas
ud0
mov
dec
push
fwait
rorl
push
xchg
xchg
into
pop
dec
and
jl
sbb
mov
das
jmp
ret
or
bnd
data16
lahf
aaa
and
push
les
sbbl
inc
into
imul
inc
je
ret
data16
loopne
mov
xchg
xor
imul
cmp
ja
lret
dec
push
scas
in
pminub
dec
dec
dec
and
mov
popl
sbb
hlt
xchg
or
xlat
loope
add
pop
add
mov
push
pop
push
cld
or
xor
lea
adc
lea
mov
push
aad
dec
rolb
pop
negb
adc
aas
xchg
je
pop
pop
loopne
shr
lcall
pop
in
mov
jb
sub
push
rcl
stos
cmpb
add
add
ret
add
in
loopne
add
jl
ret
and
std
out
and
ljmp
bound
cmp
sbb
adc
and
mov
aam
insb
les
inc
xor
mov
scas
xor
movsl
mov
ja
ficomps
mov
push
xorl
xchg
cmp
in
pop
test
lcall
aaa
in
repnz
and
popf
stc
jecxz
imulb
fs
rcrb
mov
sarb
in
xchg
pusha
repnz
jbe
lret
iret
adc
mov
jge
mov
or
adc
pop
jb
lahf
sbb
mov
pop
popf
lret
shrb
jmp
js
pop
inc
mov
iret
mov
div
test
cmpb
xor
cmp
mov
mov
mov
int3
nop
fists
mov
mov
sub
inc
adc
cmpsb
jecxz
pop
cmp
fsubr
mov
pop
in
sub
inc
adc
sub
dec
push
mov
and
in
push
imul
rolb
jno
dec
shrb
sbb
jno
lret
or
xor
icebp
int
mov
xor
and
mov
addr16
negb
cmpsl
xor
sub
dec
mov
outsb
loop
or
orl
fbstp
lock
pusha
je
and
dec
aam
xchg
cmp
xor
stos
dec
lds
xor
dec
fistps
scas
fsubrl
scas
inc
cli
imul
cmp
mov
mov
popa
or
xchg
pop
add
into
fisubl
mov
xchg
hlt
divl
push
mov
movsl
daa
mov
mov
insb
roll
mov
cs
xor
fstps
js
xchg
dec
dec
shl
jecxz
pop
sbb
xchg
dec
pop
pop
and
aam
jge
add
xchg
stc
push
inc
inc
scas
and
ljmp
imul
inc
mov
aam
faddl
mov
out
fcmovnu
inc
mov
adc
xchg
mov
mov
jo
jno
inc
cmpsb
dec
cmp
xchg
cs
ljmp
imul
ret
mov
pxor
mov
pop
clc
add
pop
dec
in
push
int
inc
repz
pop
mov
das
ror
xchg
movd
mull
adc
mov
in
mov
add
rorl
adc
mov
mov
xchg
mov
loopne
fsubl
cs
out
cmp
sbb
adc
decb
ds
cmp
mov
mov
fdivs
in
push
icebp
fpatan
das
xchg
mov
rorb
or
cmp
cmp
ljmp
cmpsb
fcmovbe
test
enter
int
lods
mov
and
xchg
fwait
insb
out
ljmp
or
ds
lea
in
outsb
int
mov
xor
rcr
in
clc
pop
add
lock
xorb
mov
sub
mov
aaa
sbb
or
insl
cli
pop
pop
push
sub
and
gs
mov
pop
dec
pop
repz
push
mov
ficoms
aad
lret
daa
push
pop
jae
pop
jg
aam
ficoms
add
sarb
bound
sbb
fbstp
mov
repz
dec
loope
ret
add
sub
cwtl
or
xchg
xchg
call
jbe
adc
lea
popl
xor
fdivs
sbb
pop
fld
push
or
stos
rorb
movsb
pop
inc
push
mov
xor
fnstsw
les
insb
pop
adc
jne
xchg
sbb
mov
rcl
mov
out
push
push
ss
adc
inc
sarb
out
lcall
iret
repnz
lcall
push
in
lcall
push
sub
les
call
xchg
in
and
int
insl
gs
dec
add
xchg
push
les
jbe
cmp
aam
or
test
stc
les
mov
push
call
mov
dec
mov
or
xchg
in
dec
lods
insl
movsl
sahf
inc
or
cmp
add
mov
pop
inc
push
and
int3
lret
sbb
cmpb
int3
mov
lods
jle
rcrb
das
and
adc
roll
fisubrs
mov
cli
aas
int
ficoml
cmp
xchg
cmp
jmp
sbbl
pop
mov
repnz
outsl
cmp
fndisi(8087
xor
or
inc
lret
stos
gs
shr
push
mov
xchg
sti
outsl
shlb
test
inc
cmp
push
ret
and
sub
sbb
test
rorb
cmp
out
or
popf
pop
xchg
popf
pop
iret
or
into
testl
and
sbb
cmp
packuswb
jp
sbb
fwait
dec
mov
popf
leave
jae
and
cmp
mov
pop
fs
std
dec
cltd
mov
cmp
push
mov
imul
sbb
enter
pop
pop
mov
in
lods
insb
xor
sub
cmp
jnp
mov
es
dec
add
test
scas
jbe
xor
jle
mov
addr16
adc
jns
lods
leave
roll
sarl
andl
xlat
aam
xchg
sahf
lods
daa
xchg
out
inc
push
mov
cmp
xor
mov
andb
dec
sub
cmp
add
mov
xchg
mov
stc
mov
insl
sbb
mov
ds
dec
mov
les
enter
pushf
aam
in
jnp
pusha
xor
insb
outsb
movsl
and
shrl
scas
adc
pop
add
outsl
dec
or
mov
adcl
test
sbb
mov
rorb
pushfw
popa
iret
mov
vpaddd
xchg
dec
sbb
push
ss
pop
nop
lea
subl
js
push
repz
push
outsl
shlb
mov
mov
cld
cmc
sarl
pop
mov
sub
cmp
adc
jle
sbb
cld
lcall
jl
push
adc
nop
andb
jne
push
lcall
ja
adc
adc
dec
sbb
xor
sub
push
cmp
lcall
cmp
iret
xchg
dec
aad
incl
popa
pop
add
jnp
xchg
or
movsl
xchg
nop
stos
arpl
push
mov
std
lahf
aas
rclb
adc
cmpsb
or
insl
cmp
jmp
into
and
cmp
inc
or
fadds
popf
out
xor
clc
mov
and
lahf
mov
std
sbb
loope
push
stc
fs
xchg
stc
cli
ljmp
push
cmp
movsl
inc
scas
stc
or
sub
pop
add
lahf
cmp
cmpb
lcall
pop
mov
sbb
jp
les
or
out
adc
in
push
adc
mov
dec
call
lret
jae
adcl
dec
mov
cmp
arpl
loopne
pusha
out
in
jmp
fisubrl
and
pop
push
jne
and
daa
gs
lret
lods
pop
jb
cmpsb
out
fisubrs
mov
cmp
mov
push
in
mov
repnz
imul
nop
bound
jge
xchg
sbb
push
mov
push
push
sti
cmp
je
fsubr
sti
pop
push
divl
scas
cld
push
sbb
pop
ljmp
adc
stos
pop
xchg
sub
stos
je
dec
inc
pop
out
lods
fwait
movsb
lret
adc
scas
daa
das
enter
leave
xor
push
pop
cmp
push
push
ret
sbb
mov
gs
adc
lds
add
add
push
aas
in
je
iret
std
fcoml
fnstsw
sub
cwtl
adc
dec
sbb
mov
cmp
dec
stos
nop
bound
add
jne
lds
push
cwtl
in
push
div
sbb
test
orl
lcall
outsl
clc
test
jecxz
test
fildll
jns
andl
or
cwtl
test
out
jge
inc
or
inc
inc
jno
in
bound
clc
movb
xor
mov
je
addr16
mov
xlat
sarb
out
jb
in
cltd
fwait
adc
push
adc
or
and
jp
jbe
jp
movsl
enter
popa
sbb
jle
jl
dec
jo
test
out
and
decb
icebp
push
sbb
rcrl
sub
xchg
xor
sub
mov
jae
das
div
int3
sahf
xor
data16
clc
adc
loop
push
cmp
jge
mov
sahf
add
scas
cltd
out
mov
adc
in
sub
cwtl
dec
mov
arpl
aad
pop
insl
adc
push
jns
addr16
cld
add
outsb
mov
lret
out
fstpl
mov
leave
mov
push
test
adc
cld
iret
aad
addb
mov
adc
mov
arpl
ficompl
stos
addr16
push
inc
das
hlt
sub
add
ss
hlt
mov
dec
test
in
les
xlat
mov
xor
lea
cmp
roll
shll
std
cmp
dec
or
mov
xlat
mov
insl
pop
push
orl
icebp
into
lret
and
aas
mov
fnsave
xchg
into
sub
imul
iret
cmp
xor
addr16
mov
cmpsb
iret
std
repz
sti
jnp
std
push
fistps
lret
push
out
xchg
or
jmp
xor
cmp
dec
add
lea
sbb
mov
shrb
xlat
or
jnp
fwait
test
aad
inc
jg
cmp
movsb
xchg
sub
xchg
or
in
ret
mov
inc
mov
fwait
cmp
clc
pop
sahf
into
mov
lret
aaa
sub
mov
mov
sbbb
add
lds
test
pop
mulb
xchg
test
mov
ja
or
sub
push
ret
cmp
mov
sub
or
arpl
popf
push
jbe
inc
jg
cli
arpl
ljmp
sub
cld
xchg
shlb
push
mov
sub
add
mov
rcrb
lods
gs
push
jae
mov
gs
ret
add
or
xor
decl
jp
cld
cltd
pop
push
repz
inc
xor
or
test
loope
push
les
mov
adc
adc
sub
xchg
scas
xor
iret
jns
mov
call
aaa
scas
arpl
pushf
adcl
add
mov
loopne
pop
cltd
mov
shrb
jb
lret
fistpll
stos
sub
outsb
iret
push
jne
jmp
into
push
cmp
loope
jle
push
add
or
xchg
fwait
addr16
add
sbb
sub
inc
test
jno
fucom
lods
lock
cmp
inc
outsl
and
cmp
fdiv
jl
arpl
pop
xor
xor
jle
lods
fdivr
sbb
dec
sbb
push
dec
cs
in
lds
mov
jl
in
sbb
xchg
add
ss
inc
pop
stos
jns
mov
xchg
sub
shll
xchg
mov
cmc
js
lcall
sbb
icebp
scas
and
dec
inc
jb
jnp
cmpsl
aaa
insb
sub
xor
sub
xchg
fidivl
and
mov
icebp
or
pop
jae
sahf
fcmovnu
pop
clc
push
pushf
lock
sbb
loop
xor
out
jecxz
insb
rcrl
adc
jnp
mov
mov
aad
js
shlb
sbb
xchg
in
cmp
add
repnz
jmp
dec
scas
inc
mov
cltd
loope
push
addr16
nop
jbe
sub
sub
cli
jecxz
cmpsl
pop
rolb
popa
pushf
inc
adc
in
cmp
inc
out
push
pop
dec
pop
adcl
add
lcall
fdivs
add
lock
loop
mov
clc
scas
fisubrl
mov
jnp
arpl
mov
out
dec
pop
and
cmp
inc
rorb
mov
mov
sub
jge
jbe
dec
iret
test
pop
mov
scas
ss
push
ds
adc
divb
cmp
sahf
or
cwtl
repz
push
hlt
lea
imul
add
jns
test
adc
push
dec
xchg
in
mov
ljmp
int3
jp
bsr
xchg
xchg
xor
mov
popa
jns
rcrl
mov
divb
stos
icebp
lods
mov
scas
popa
mov
or
mov
push
and
sbb
dec
cmp
dec
push
and
sbb
addl
sbb
sbb
in
data16
adc
jnp
lods
enter
jno
dec
insl
push
es
adc
mov
jecxz
push
popa
mov
jp
jge
call
mov
inc
shlb
sub
and
sub
push
aaa
shlb
shrb
and
ror
fdivrs
nop
inc
dec
and
sbb
cmp
xchg
adc
mov
jo
orb
jbe
loopne
cmp
fisubl
push
ljmp
notl
orb
xor
clc
push
sub
mov
sub
pandn
inc
fnstsw
les
pop
ret
inc
or
and
or
mov
jo
stc
pushl
dec
test
or
jle
shll
adc
add
repnz
xor
inc
cs
mov
pop
push
mov
in
or
add
mov
leave
push
xor
add
cmpsl
mov
inc
dec
ss
int
adc
sbb
rcr
scas
cmp
push
scas
stc
scas
mov
jno
push
xchg
aam
mov
dec
call
scas
negl
pop
popf
call
rclb
pop
mov
sti
mov
dec
test
icebp
popf
mov
outsb
xlat
insb
in
mov
mov
cmp
sbb
icebp
mov
call
push
cli
dec
mov
gs
xchg
fisubs
cld
in
jno
hlt
jg
dec
pop
push
mov
xchg
adc
jb
push
imul
lods
out
mov
rorl
push
fmulp
and
mov
aad
jbe
jno
jo
sbb
sub
rorl
jbe
cltd
pop
mov
fwait
sbb
cmp
int
fucomp
mov
imul
inc
push
push
mov
push
inc
pop
pop
ja
sbb
mov
sbb
and
mov
and
adc
mov
xchg
seta
stc
pop
fmul
cmp
fdivs
add
frstor
pop
leave
aas
pushl
sbb
mov
jmp
cltd
jl
pusha
jmp
cmp
and
cs
cmpsl
or
adc
jbe
cmp
mov
sbb
js
push
adc
dec
xor
das
mov
adc
das
imul
pop
shll
js
sahf
fnstcw
xchg
or
into
dec
and
outsl
in
jnp
or
lds
es
clc
and
xchg
cmc
xor
hlt
push
mov
and
je
and
sub
xchg
xchg
daa
adc
and
in
fnstcw
and
iret
aaa
leave
xlat
gs
push
jmp
mov
jecxz
cmp
sub
jmp
and
xchg
lods
shrb
stos
lock
jbe
sbb
add
out
jno
mov
cs
mov
fcomps
xor
xor
lahf
loopne
popa
add
stos
movsb
ds
adcb
xchg
int3
sub
mov
dec
jbe
xchg
pop
adc
mov
call
mov
jb
inc
gs
js
jl
outsl
fidivrl
std
ret
mov
xchg
cmp
out
lea
adc
into
repnz
add
jecxz
loop
insb
xchg
xchg
and
in
stos
scas
push
sbb
leave
mov
mov
jg
les
in
sbb
cwtl
sub
cmp
and
jecxz
fildl
jl
rol
enter
in
and
push
outsl
and
repnz
sub
or
in
push
and
bound
cltd
xchg
ret
adc
fsubl
or
stc
xor
push
imul
cmp
xor
sub
ds
lret
idivl
gs
cmp
outsb
xorl
fcomps
test
ret
int3
or
jmp
test
xor
jae
in
sarl
sub
test
cwtl
stos
sub
mov
fstl
les
xchg
sbb
push
push
xlat
xor
addb
ficoms
imul
in
mov
loopne
push
pop
adc
push
mulb
mov
cmp
int3
sub
fdivrs
cld
loope
add
fimuls
push
dec
in
mov
mov
fistpll
stos
inc
int3
inc
cli
cmp
adc
mov
std
sbb
add
and
push
ja
sub
push
inc
mov
lds
add
and
int3
ss
add
mov
xchg
sarl
mov
subb
or
cmp
sarb
outsl
shlb
xchg
jl
mov
dec
aas
sbb
outsl
jnp
mov
test
push
mov
mov
mov
adc
mov
mov
jge
cmp
cltd
jge
sti
outsl
clc
enter
lea
xor
pop
insl
xor
xchg
push
mov
pop
inc
mov
xor
popa
sbb
adcl
repnz
test
mull
or
enter
lret
je
mov
dec
sub
mov
mov
push
xor
push
out
jo
aaa
mov
outsb
dec
imul
insb
cmp
fwait
xor
sub
xor
mov
jmp
add
repz
xchg
push
daa
dec
xor
cmc
fldcw
xchg
mov
mov
or
les
xor
sbb
or
stos
xor
loop
cmp
pop
fistps
out
push
mov
mov
mov
lret
push
xor
inc
std
and
mov
clc
hlt
lods
push
loop
lods
dec
adc
sub
xchg
ss
or
pop
add
js
sub
loopne
inc
popa
in
ficoml
and
cwtl
cltd
fs
fldcw
sbb
pusha
cmp
iret
push
int3
push
ret
adc
inc
xchg
repnz
in
adc
jae
rcrl
pop
jl
inc
les
cltd
add
pop
sub
xchg
xchg
xchg
add
into
outsb
scas
out
stos
jns
lods
mov
fldcw
shrb
test
xorl
xor
js
out
sarl
out
mov
mov
andb
repz
int
jns
mov
mov
cmp
xchg
pop
mov
mov
shr
dec
rcrb
shlb
mov
clc
dec
out
out
jmp
orb
cli
jmp
pushf
int3
adc
mov
jne
dec
push
jo
sbb
lods
lahf
adc
scas
hlt
jne
sbb
into
push
and
adc
outsl
sub
push
xor
andb
inc
outsb
ja
ljmp
inc
movsl
scas
adc
dec
xchg
mov
loope
leave
dec
mov
filds
adc
test
add
mov
sbb
lret
fmul
xchg
les
adc
notl
fdivrl
dec
cld
push
dec
fisttpll
shl
dec
cmpsb
cs
mov
call
jnp
clc
inc
js
push
cmp
out
jb
inc
sbb
xchg
add
mov
jle
iret
add
jb
call
inc
aaa
jmp
mov
jns
mov
jg
cli
inc
insl
xor
shlb
sar
mov
mov
push
into
jne
in
pop
adc
ret
out
mov
out
sarb
mov
sahf
and
dec
stos
insl
clc
push
jl
mov
xchg
testl
fists
cli
pop
adc
outsl
xchg
dec
adcl
xor
dec
lea
in
out
dec
out
dec
and
fwait
push
mov
add
imul
mov
inc
lock
aaa
inc
xor
adc
enter
mov
push
inc
xor
add
lret
clc
cld
pop
xlat
out
adc
xor
add
aas
aad
clc
mov
push
sub
cmp
jbe
push
mov
enter
mov
cmc
mov
mov
int
insl
lods
movsb
adc
in
sub
fs
lret
xchg
in
push
shlb
jp
mov
jno
lahf
and
dec
push
test
cmpsl
out
js
movb
and
cmp
bound
das
xor
stc
in
mov
movsl
jp
inc
movsl
pop
test
test
and
xchg
and
jnp
sbb
inc
mov
mov
and
aad
les
orb
or
push
ret
pop
add
icebp
mov
mov
stos
mov
fmulp
icebp
xchg
dec
fdivp
cltd
jle
dec
frstor
out
clc
std
scas
mov
stc
xlat
insb
fnstcw
repz
cwtl
or
pop
lahf
cmpsb
pushf
lahf
icebp
lahf
pop
repnz
fbstp
xorb
hlt
cwtl
movsl
add
push
pop
ds
pop
xchg
movzbl
pop
stos
xchg
lods
adc
test
pop
inc
cmc
jns
cmp
mov
adc
mov
push
enter
xor
xor
das
mov
xor
mov
add
jmp
ficompl
adc
pop
xor
aam
pop
mov
sbbl
inc
movsb
lret
fmull
sbb
rcrb
cmc
fs
enter
dec
push
dec
jecxz
arpl
push
out
sub
cmpsl
sbb
repnz
cmp
xchg
sub
xor
xchg
imul
inc
dec
sbb
rclb
xchg
mov
call
cltd
jnp
stc
inc
pop
jo
int3
fsub
mov
xchg
movsb
and
mov
mov
cld
mov
ret
out
adc
fimull
pop
fwait
aam
or
add
and
dec
cmpb
mov
cltd
or
sti
les
outsl
icebp
fdivr
loopne
sar
ss
sbb
test
data16
pop
xchg
rcr
imul
cmp
aad
daa
pop
jl
ret
lds
mov
iret
or
test
out
pop
imul
mov
std
dec
pop
mov
add
pop
roll
mov
pusha
into
jl
xchg
lea
aaa
iret
mov
test
inc
jecxz
les
mov
std
mov
icebp
pop
jl
inc
sub
dec
movsl
mov
repz
sar
pop
sbb
pop
pop
push
ja
jno
push
dec
jl
fdivrs
sub
mov
adc
aad
sub
inc
outsl
sbb
jbe
sub
addr16
in
loope
sub
into
shll
adc
dec
leave
lods
add
das
lret
popa
into
cmp
lret
adcl
inc
dec
pop
rorl
in
imul
mov
mov
push
push
aad
add
jns
jno
test
in
push
ljmp
movsl
xchg
xchg
mov
jecxz
or
jne
sbb
push
dec
es
bound
rclb
inc
fcompl
push
rorl
movsl
xor
push
jb
mov
pop
mov
sub
loopne
adc
aad
fnsave
stos
mov
pop
pusha
mov
aas
push
pop
hlt
mov
imul
inc
xor
jge
scas
stc
rcr
mov
enter
leave
jb
or
push
in
and
addr16
jp
add
add
mov
ret
nop
mov
jmp
xchg
daa
stos
sub
popa
lcall
xchg
hlt
mov
push
and
adc
fimuls
mov
pop
sahf
sub
push
fbld
out
cmp
cmp
aam
push
movsb
mov
out
seto
mov
cmpsb
arpl
cltd
cmp
jp
not
jae
add
popf
pushl
mov
pop
jle
fstps
xlat
arpl
mov
and
pop
lods
ljmp
dec
add
mov
xor
xchg
popf
and
jp
fistps
mov
cmc
push
sbb
pop
fcomps
mov
or
lods
sub
mov
fnsave
sub
popa
pop
cltd
sti
in
std
mov
rcrb
inc
dec
inc
xchg
and
cltd
je
sbb
and
mov
lcall
jmp
out
dec
in
jecxz
popa
int
jp
lret
ds
sub
std
push
or
lea
mov
lods
cmpl
ficoms
adc
inc
icebp
push
ljmp
jno
nop
out
push
mov
int
mov
out
test
cld
je
pop
add
pop
jmp
cld
adc
out
int
outsb
imul
mov
ret
out
sbb
push
cmpsl
sub
mov
int
cmp
push
std
sahf
jae
cld
out
mov
clc
je
pop
xchg
movsb
mov
xchg
ja
mov
push
movsb
gs
xchg
nop
mov
sahf
jae
jecxz
int
push
lods
cmp
mov
sahf
mov
jno
adc
xchg
xchg
sbb
jl
enter
hlt
fidivrl
jge
adc
cmp
jp
adc
hlt
daa
push
and
sbb
mov
xchg
and
jg
in
pop
dec
mov
call
aaa
push
pop
out
xchg
push
push
xchg
in
es
xor
cs
jno
fstps
dec
testb
cmpsl
es
lods
mov
dec
cld
sbb
jge
incl
sub
insl
lret
aam
rcl
in
lahf
popf
pop
stc
test
pop
stos
shl
ret
push
cmpsl
mov
sbb
or
pushf
adc
rcl
adcl
add
pop
push
mov
inc
js
xor
int
rcrl
add
cmp
sahf
push
mov
jmp
sbb
xchg
xchg
add
jo
lcall
arpl
xlat
mov
adc
cmp
jmp
aas
loop
inc
scas
dec
popf
fmuls
movsb
inc
and
xchg
test
mov
das
sbb
and
or
imul
and
sub
mov
or
mov
pushf
or
xor
fcomip
fwait
push
outsl
vhsubpd
das
jle
sub
pop
test
cmpsl
or
mov
enter
loopne
sbb
mov
scas
mov
pop
cmp
adc
or
pop
fldl2t
lret
repnz
mov
pushf
add
jg
xor
dec
ja
lods
into
fiaddl
add
addr16
fimull
lods
jle
sub
rcl
jno
ret
xor
ret
adc
fwait
scas
lretw
imul
inc
push
roll
in
test
insl
and
enter
scas
push
xchg
sub
dec
push
jae
jmp
push
addr16
sti
xchg
fwait
xchg
mov
pop
bnd
cs
push
pop
shll
push
shrb
ret
repz
int3
pop
inc
daa
or
xchg
rcrl
andl
imul
dec
adc
rcrb
sub
mov
roll
test
cmp
scas
xor
adc
aad
loopne
mov
cmc
int
pushf
and
and
sbb
iret
mov
cli
bound
imul
les
aas
cmp
jle
sbb
rorb
jne
inc
jae
push
mov
mov
stos
jb
insb
jne
popf
insl
xchg
pop
jae
fwait
push
xor
push
lods
das
and
pop
inc
out
add
aas
aad
add
in
push
lock
pop
and
repnz
js
mov
xor
aaa
sub
push
cmpsb
xchg
push
imul
xor
adc
cmpsl
or
xor
sahf
xchg
dec
lock
mov
sbb
and
arpl
mov
sbb
adc
mov
in
aaa
lahf
mov
xchg
sbb
mov
push
jl
arpl
loop
or
inc
push
iret
out
dec
jo,pn
or
cld
dec
jo
inc
hlt
adc
mov
push
xchg
or
mov
or
fnstenv
rsqrtps
jmp
xchg
fidivrl
popa
xor
xchg
jnp
les
rolb
sbb
push
sbb
repnz
iret
aad
stos
popa
aam
test
call
pop
fldl
lret
repz
dec
jnp
cmpl
inc
stc
out
stc
dec
es
ret
push
cltd
jge
sbb
in
jp
int
push
ds
jg
add
mov
mov
cmpsb
xor
xor
int
jae
jmp
negb
push
xlat
add
sahf
sbb
in
or
and
mov
ret
outsb
jmp
movsl
aad
push
arpl
mov
mov
jns
push
testl
xlat
pop
mov
cmp
fwait
out
jg
xchg
repz
imul
mov
fnstenv
cmpsb
dec
push
jo
stc
mov
outsb
jb
mov
aaa
dec
mov
mov
push
push
dec
outsb
fisttpl
aaa
sub
cmpsb
xchg
pop
adc
push
push
sub
fldenv
mov
fnstsw
pop
mov
lret
jg
inc
xchg
stc
les
int
xor
pop
push
mov
movsb
call
lea
dec
sub
add
ret
lret
aas
inc
mov
mov
mov
cmpsl
repnz
out
jo
loopne
enter
jnp
mov
je
les
or
arpl
sti
or
leave
jno
xor
inc
pop
or
data16
cwtl
imul
cmc
fcmove
movsl
and
les
mov
mov
in
pop
cmpl
out
pop
popf
dec
movl
push
cmpsl
push
js
mov
movsb
loop
push
lods
xor
pop
sbb
lahf
lods
xchg
sub
push
lret
stos
sub
add
int3
lcall
inc
insb
and
jl
repnz
adc
mov
mov
add
and
dec
ja,pt
call
jecxz
ss
jnp
pop
dec
hlt
loop
stos
aas
insl
cmp
sub
lcall
int3
mov
jnp
lret
and
fcomps
sahf
mov
stos
lea
fwait
les
jge
push
xchg
fstps
xchg
hlt
gs
cmp
adc
insb
mov
inc
fs
pop
fucomp
sahf
repz
push
lods
or
ret
insb
jo
mov
xchg
repnz
and
loopne
lock
pushf
mov
push
jg
insl
sbb
xchg
cmp
mov
mov
stc
and
pop
push
insb
push
push
fists
jae
lahf
mov
cmc
lock
out
lds
sarl
ds
adc
lret
dec
mov
cli
out
out
sbb
and
repnz
push
sbb
shl
cmp
ret
xchg
and
xlat
or
xor
pop
ret
dec
xchg
push
jnp
jns
das
mov
dec
in
clc
pop
aam
rcrl
shll
pushf
sbb
ret
shr
mov
mov
daa
lret
andb
jle
mov
mov
mov
push
lret
inc
add
inc
ret
add
shl
call
adc
clc
out
cmp
dec
cld
inc
ja
cmpsb
cmc
dec
test
jno
imul
or
enter
cmp
fidivl
lret
push
xchg
mov
or
mov
out
jno
xchg
cwtl
adc
sub
mov
and
jge
push
jecxz
sbb
dec
xor
xchg
ret
rolb
push
and
jns
cmp
mov
iret
lret
xchg
lods
aad
jnp
mov
enter
jnp
xchg
jae
jb
sub
nop
decb
sbb
fmull
jmp
ficomps
shrl
jno
pop
xorb
cmp
aaa
pop
sbb
mov
sbb
in
js
mov
xchg
lret
or
mov
into
outsl
mov
push
pop
push
test
jmp
sbb
lret
js
xchg
adc
fs
push
daa
addr16
pop
cmpsl
mov
daa
mov
push
add
aam
push
cld
mov
popf
scas
add
and
sub
loopne
imul
mov
out
mov
outsl
inc
pop
shll
xor
mov
fcmovnu
out
add
mov
insb
pop
jg
aaa
cmp
mov
inc
insl
pop
and
das
dec
and
push
push
cltd
jge
out
push
cli
ds
jne
cli
mov
daa
cld
orl
mov
test
call
xchg
in
sub
jp
mov
mov
sub
or
pop
rorl
dec
jne
pop
mov
push
fmuls
cwtl
add
lret
loope
inc
in
jecxz
dec
out
jg
mov
mov
push
sub
cmp
add
fdiv
mov
gs
gs
cli
ret
mov
loope
push
sbb
or
mov
adc
dec
das
cmp
mov
push
lahf
cltd
add
mov
xchg
add
or
jae
adc
xchg
out
jmp
push
jb
insb
dec
cld
sbb
xchg
push
fs
subl
jbe
in
xchg
jns
fmul
sub
jmp
xchg
dec
test
inc
pop
adc
adc
shrb
xchg
sbb
lcall
inc
pop
arpl
ds
fildll
int
sub
leave
outsb
bound
pusha
inc
cld
cmp
sub
xchg
nop
lcall
xchg
negb
or
fbld
cwtl
mov
push
add
sbb
and
jle
add
je
jne
dec
rorl
js
push
xor
and
test
repnz
aaa
pop
jnp
xor
xor
imul
loop
mov
and
cmc
inc
or
mov
loop
or
or
dec
cmp
cmp
gs
mov
ficoml
or
fistpll
cmp
out
popa
sbb
xorl
xchg
and
addr16
jo
jp
call
mov
sub
pop
sbb
mov
sbb
mov
dec
mov
fwait
test
in
add
add
movsl
decl
loope
ds
mov
jbe
and
adc
test
pop
mov
cmpsb
ss
les
ftst
pop
sahf
sub
lods
dec
popa
das
and
mov
popa
inc
push
sbb
dec
pop
push
cmp
pop
push
repz
cli
pushf
icebp
ljmp
jmp
stos
or
mov
std
lcall
or
cmp
je
cmpsb
iret
mov
sbb
or
and
iret
rcr
aam
fidivrs
aad
in
jecxz
sbbb
sahf
add
mov
js
xchg
dec
je
push
fdivs
popa
inc
nop
sbb
xor
inc
jg
les
xorb
test
dec
mov
stos
add
imul
ror
xor
and
loopne
cmp
rolb
inc
stos
repnz
test
shrb
mov
mov
scas
lds
sub
mov
repz
push
or
out
gs
mov
cmpsl
fs
fsubr
rcll
mov
adcb
orb
jl
push
dec
pop
int3
sbbb
jnp
xor
testl
outsb
mull
pop
add
iret
std
enter
int
fdiv
addr16
add
lret
cmp
std
mov
xchg
sbb
dec
es
testb
inc
pop
push
fidivrs
ss
pusha
cltd
lret
inc
es
mov
inc
push
sahf
mov
fmuls
sub
dec
ja
data16
xor
mov
insl
inc
pop
ja
jae
mov
ja
test
push
sub
or
mov
add
sbb
andl
lret
xchg
add
cltd
rolb
cmc
push
inc
insl
adc
xor
mov
jae
popa
aam
je
lock
js
aam
pushf
cld
add
ret
mov
sbb
jl
dec
in
hlt
sbb
push
dec
scas
xor
add
and
cmp
jmp
push
js
enter
push
inc
popf
pusha
es
xchg
std
insl
fistps
add
cmpsb
xlat
xchg
pop
push
enter
sarb
fidivl
imul
ficompl
cmpsb
mov
push
xorb
je
jmp
or
call
outsl
or
test
test
pop
pop
xor
out
cmp
je
dec
inc
stos
xor
test
repnz
pop
or
test
adc
lret
sti
mov
pslld
je
das
xchg
adc
jae
inc
ds
xchg
jl
and
enter
mov
das
roll
inc
add
pop
es
xchg
enter
pop
sti
adc
pop
push
sbb
cmp
add
aad
stos
mov
add
fs
mov
es
xchg
and
cwtl
pop
sub
fldenv
and
int3
and
inc
or
mov
outsb
dec
lea
es
fs
mov
add
push
lock
jnp
imul
shr
test
sbb
movsb
jmp
rcll
sub
sub
aaa
cs
push
xchg
pop
push
sbb
and
inc
push
pop
cmp
push
mov
sub
sbb
pop
dec
loopne
aam
scas
mov
adc
dec
insl
sahf
adc
icebp
or
int
dec
shl
mov
enter
add
push
je
jns
jae
mov
adc
out
popa
outsb
call
sti
outsb
jecxz
insb
js
push
xor
xor
test
mov
lahf
jle
xlat
cwtl
hlt
xor
int
push
nop
sbb
sub
cld
movaps
fwait
xor
jnp
in
outsb
mov
inc
insl
sub
add
data16
mov
dec
cmp
mov
out
jns
outsl
sbb
mov
fidivrl
inc
mov
add
jbe
adc
push
test
les
jae
xor
sub
dec
dec
adc
movsl
xchg
lods
je
aaa
js
stc
xlat
jo
hlt
mov
dec
xor
jle
cmc
mov
ds
sbb
outsb
mov
cmp
callw
decl
in
add
int3
xlat
sti
aam
jnp
sar
sbb
aam
push
mov
ja
inc
cmp
out
push
arpl
push
cmp
push
mov
dec
sar
cmp
pop
stc
mov
inc
addr16
lret
jb
pop
lret
mov
mov
jno
pop
int
pop
mov
cli
cmpb
xchg
jae
sub
mov
notb
into
mov
fwait
sbb
lds
jne
and
sbb
mov
das
mov
movsb
pushf
sbb
lret
in
lret
ss
sbb
cli
cmc
cmpsl
cmpsl
imul
pop
push
fists
sub
jno
lock
test
xor
daa
xlat
cmpsl
pop
or
cli
and
inc
test
mov
in
out
lods
jecxz
mov
jnp
lea
lea
dec
inc
xlat
pop
mov
aaa
cmpsl
xchg
xchg
shr
addr16
movsb
das
jg
loopne
sahf
pop
arpl
cmpsb
cmp
rcrl
pusha
push
stos
cmc
ljmp
jno
cwtl
jecxz
iret
mov
pop
xchg
outsb
fisubs
jecxz
and
repnz
inc
rcl
xlat
imul
lds
push
xchg
xchg
xor
or
sub
leave
aaa
push
enter
aas
mov
into
or
rep
adc
sbb
leave
test
mov
fbstp
pop
das
dec
or
shrb
cmp
outsb
xor
ljmp
arpl
mov
mov
insb
dec
pushw
les
std
and
inc
lret
adc
shll
xor
dec
mov
push
shl
mov
outsl
fdivrs
inc
dec
popa
xchg
sbb
cld
daa
repnz
dec
push
lods
xchg
lock
test
jle
add
sbbb
arpl
sbb
shll
and
inc
mov
lcall
mov
aas
in
sbb
js
test
push
divl
popf
pop
mov
add
cmp
je
ss
lock
sbb
fsubl
mov
loop
mov
push
sbb
loopne
cmpb
mov
pop
mov
ja
int
fcmovnb
mov
mov
jnp
push
xchg
inc
clc
in
inc
sahf
ja
mov
push
jge
lahf
fdivr
mov
mov
nop
add
mov
xor
ja
test
dec
stos
test
in
cmp
or
inc
in
jl
inc
adc
adc
pop
bound
pop
push
sub
jb
push
add
pop
add
jae
mov
dec
or
adc
jle
mov
scas
inc
cmpl
dec
cld
sub
enter
subb
mov
stc
inc
outsb
mov
sub
sub
pop
lods
mov
sub
dec
mov
dec
div
iret
sbb
lea
fdivp
aas
xor
lock
ss
xchg
xlat
jl
mov
sub
xorb
iret
mov
mov
pop
pusha
addr16
inc
xchg
add
dec
iret
sbb
inc
cmp
lods
push
inc
mov
cmpsl
icebp
mov
mov
mov
fsubrl
add
pop
xchg
mov
cmp
lret
fisubs
xchg
pop
or
sbb
test
and
repz
ror
icebp
hlt
mov
in
aam
jg
stc
dec
jne
adc
out
adcl
sub
push
inc
inc
fadd
mov
dec
xor
shl
lahf
mov
and
inc
jb
sbb
mov
pop
stos
loope
lock
out
imul
mov
xchg
xor
push
sub
jmp
pushf
cmp
jb
mov
sti
test
and
js
sub
mov
nop
pop
mov
outsl
ds
jg
push
dec
cmp
scas
push
pop
add
sub
cmc
outsb
pop
mov
add
dec
rorb
mov
xchg
out
pop
push
dec
lds
sbb
les
cmp
orl
push
sbb
cmp
scas
sub
mov
mov
aaa
mov
mov
rorl
add
adc
test
jl
xor
mov
cld
xor
sbb
mov
inc
aad
or
out
orl
inc
push
push
fisttps
in
je
cmp
mov
cmc
movb
pop
ja
sub
sub
cwtl
xor
xchg
inc
xchg
inc
push
push
dec
in
inc
sub
dec
sub
ljmp
pcmpeqd
ljmp
mulb
push
and
sub
lret
into
js
sar
add
and
outsb
incb
ljmp
imul
test
mov
imul
mov
dec
sbb
xor
jmp
xor
push
push
dec
add
aad
cwtl
test
sub
lcall
mov
outsl
movsb
cmp
adc
das
xor
scas
mov
imul
xchg
shll
addr16
push
or
mov
fsubrl
data16
mov
mov
mov
inc
push
flds
inc
jl
mov
arpl
cld
in
loop
mov
inc
inc
sbb
xchg
sub
jmp
lcall
pop
loop
int
adc
mov
arpl
fbstp
adc
aas
adc
sti
adc
jl
jbe
add
sbb
add
into
ja
jp
ljmp
repnz
lahf
lds
jp
pop
add
out
insb
mov
jmp
shrl
sub
fiadds
add
in
out
jmp
adc
xorl
mov
int
repnz
cmpsb
out
mov
insb
mov
in
outsb
mov
sbbl
inc
mov
pop
ja
insb
daa
inc
mov
dec
push
xchg
js
enter
lds
int
add
push
xchg
inc
data16
pop
add
pop
lea
in
xchg
arpl
sbb
dec
xor
push
jmp
cmpsl
pop
ret
fstl
arpl
dec
cs
mov
lods
mov
pop
ret
sti
cmp
inc
sbb
or
push
test
jg
jp
clc
adc
xchg
repz
mov
fisttpl
add
mov
in
addr16
mov
test
pop
add
mov
or
ficompl
in
xchg
lret
xchg
sarb
dec
iret
mov
jnp
sarb
and
xchg
das
icebp
clc
mov
and
mov
ret
insb
mov
in
push
mov
mov
mov
pop
insb
add
mov
mov
movsb
push
mov
xor
cltd
mov
add
jb
mov
iret
push
mov
push
push
repz
xchg
inc
sub
lret
dec
test
cmp
sub
mov
xchg
pop
cwtl
sbb
out
dec
std
mov
dec
jne
gs
stos
dec
pop
xchg
leave
int
aas
daa
sub
dec
clc
mov
outsb
jmp
aam
daa
xor
inc
sub
arpl
sub
test
cs
cmp
pop
xchg
jne
jae
inc
sbb
ja
jns
pushf
cwtl
movsl
cli
test
popa
in
mov
fcoms
inc
mov
mov
sub
mov
mov
add
ret
mov
pop
mov
push
pop
arpl
push
dec
mov
fnstcw
jno
insb
es
popf
ja
je
mov
mov
add
inc
pop
jl
dec
out
xchg
cmpsb
scas
mov
cmp
in
imul
insl
xor
mov
popf
mov
mov
leave
pop
repz
enter
into
push
in
dec
mov
enter
xchg
arpl
jns
add
ror
mov
out
jnp
cmp
adc
jb
loope
and
decb
pop
inc
lret
adc
xchg
mov
fisubs
mov
adc
adc
push
imul
dec
int
xor
addl
outsb
dec
mov
js,pn
adc
xchg
push
iret
cld
mov
insb
and
xor
xor
push
lcall
push
dec
mov
xchg
add
aas
jno
or
xchg
aam
xchg
addr16
xlat
pusha
xchg
mov
clc
cli
add
neg
pop
sub
je
lods
popa
inc
ja
xor
mov
imul
rcl
shrl
xor
jns
and
in
fisubl
fstps
cli
mov
and
pop
jge
in
cmp
xchg
jmp
jecxz
mov
mov
fsub
scas
ss
push
or
lret
pop
lret
xchg
fsts
fstpt
pop
xchg
add
mov
gs
jmp
mov
lcall
xor
push
sahf
mov
jp
jmp
aad
clc
xchg
or
xchg
adc
mov
or
jne
outsl
negb
scas
stc
pop
leave
ljmp
dec
ss
xchg
xchg
leave
push
adc
cmpb
test
in
adc
mov
aaa
rcll
mov
ljmp
sub
insb
orl
imul
mov
jns
cmp
leave
dec
inc
xor
call
mov
fwait
outsb
xor
sbb
lea
push
decl
enter
in
and
push
jne
pusha
jmp
test
jb
outsb
xlat
arpl
push
mulb
fldl
jp
inc
sub
lret
out
cmp
cmc
jp
insl
mov
xlat
dec
sub
jg
clc
add
sbb
cmc
lcall
add
stos
int
sbb
mov
mov
adc
xor
cmp
in
add
iret
sti
cmpsb
sbb
stos
or
imul
xorl
dec
cwtl
sub
enter
lods
popf
push
mov
push
sub
xor
sub
js
jmp
cld
mov
lret
and
inc
leave
pop
pop
movl
pop
mov
jno
icebp
call
mov
aam
test
lds
mov
enter
orb
mov
push
loop
insl
pop
mov
mov
je
jo
mov
daa
pushf
push
jge
jp
subb
xchg
stc
mov
shll
push
sbb
jns
mov
xor
sarl
pop
mov
ss
pusha
dec
ljmp
mov
dec
add
jmp
xchg
das
cld
test
jg
pop
test
push
fldl
mov
adc
jl
mov
sub
inc
js
incl
jge
dec
ret
xor
es
lahf
mov
sub
dec
sbb
jb
add
jp
inc
jp
add
arpl
and
cs
or
je
daa
xlat
shll
notl
push
xchg
outsl
inc
das
pop
push
stos
mov
jmp
fwait
scas
sub
sbb
mov
and
cltd
outsb
imul
and
xchg
or
dec
xchg
adc
or
push
leave
adc
out
jmp
jbe
in
adc
and
add
faddl
lea
aaa
sbb
jle
or
cs
push
jl
mov
mov
sbbb
das
mov
sub
stos
jmp
adc
adc
push
flds
adc
or
stc
adc
mov
scas
jb
inc
adc
xchg
aad
rcrb
lods
mov
insb
js
sbb
xchg
dec
push
mov
imul
cmp
cmp
or
add
dec
jl
call
or
mov
clc
adc
std
jb
clc
fistl
xchg
fnstsw
push
xchg
negl
or
icebp
sbb
ret
mov
xor
cmp
orb
fcmovb
jae
push
jne
insl
das
daa
push
lret
sbb
pop
cltd
push
pop
hlt
loop
cmpsl
lret
pop
shl
ss
aam
and
sahf
pop
sbb
xor
or
mov
popa
add
xor
je
dec
xor
mov
sbb
xchg
mov
cmp
les
test
cmp
mov
sbb
add
jb
sbbb
imul
inc
jp
mov
movsb
mov
mov
sbb
cwtl
sub
xchg
xorb
gs
movsb
int3
cmpsb
decl
lret
mov
inc
xchg
loop
or
xor
dec
mov
aad
in
push
dec
in
neg
jae
xor
push
lea
insl
sbb
imul
adc
stc
jg
adc
jge
fstpl
mov
roll
mov
xchg
add
xor
testb
sub
push
inc
sub
addb
mov
mov
mov
in
mov
imul
movsl
data16
stc
imul
inc
mov
jecxz
mov
hlt
and
lcall
fnstsw
dec
inc
fidivl
testb
jmp
imul
jp
lret
shll
mov
dec
mov
xchg
fs
ljmp
jle
adc
pop
imul
mov
push
inc
sub
cmp
sub
cmp
cmpsb
mov
ret
lahf
add
leave
pop
sahf
in
stc
or
cmp
or
das
lret
jecxz
cli
fadd
ret
mov
pop
outsb
jecxz
jb
pop
mov
into
icebp
in
pushf
sbb
mov
add
in
and
stc
push
pop
mov
movsb
xor
mov
ror
fsubrl
jns
push
stos
loop
ja
insl
iret
daa
xchg
lds
xor
add
jle
inc
cmp
outsl
sti
fiadds
jg
lret
adc
jl
or
movsl
xchg
jl
sub
repz
test
or
inc
push
ret
dec
xchg
movsb
mov
imul
into
push
cmp
or
pop
sti
mov
stos
inc
movsb
sbb
mov
xor
movl
push
fisttpl
dec
or
stos
lcall
data16
addb
out
fsubs
xchg
loope
outsl
in
sbb
push
inc
ljmp
mov
mov
insl
addr16
and
push
nop
push
push
jp
aaa
pop
cld
into
jbe
or
xchg
jb
cmp
loope
xchg
and
push
gs
decb
jl
push
in
out
repnz
repz
gs
xchg
mov
jecxz
pop
cmp
push
lock
and
mov
imul
clc
push
dec
fbstp
cmp
jns
pop
aaa
loopne
into
inc
push
and
xor
fmull
movsl
pushf
nop
adc
inc
imul
shl
jmp
pop
rorb
mov
scas
ja
pop
xor
imul
out
and
out
mov
pop
incl
add
xchg
roll
xlat
hlt
aam
scas
add
sahf
mov
push
push
loopne
rol
fucomip
mov
jg
lods
jb
fdivl
jbe
or
loop
dec
loope
xor
bound
or
cmp
xchg
fwait
mov
xchg
xor
out
push
mov
push
stos
ss
cmp
mull
sbb
pop
xchg
and
mov
fwait
pushf
insl
xor
movsb
out
adc
fsts
cmp
dec
lds
adc
inc
cltd
sub
xor
pop
push
or
into
lea
daa
jns
pop
push
leave
in
sarl
sub
adc
jb
mov
es
fbstp
std
insl
ficompl
stc
jb
movsl
cld
cli
inc
insb
pop
pop
mov
sbb
test
xchg
and
pop
movsb
cwtl
mov
pop
mov
pop
es
dec
jle
sbb
std
or
stos
outsl
mov
les
rcr
mov
rolb
sbb
fcmovnu
jecxz
mov
or
iret
inc
sub
mov
sar
cmpsb
mov
pop
or
mov
jmp
mov
stos
movsl
test
cltd
jb
adcb
lahf
pusha
sti
or
fcmove
es
dec
add
lock
push
sbb
and
sbb
push
loope
and
xor
fcoms
iret
in
ja
mov
inc
jae
mov
fisubrs
mov
mov
mov
or
lret
clc
je
sbb
and
or
in
jle
repz
test
add
out
out
sub
cmpsl
mov
and
mov
inc
push
push
loope
push
std
pop
inc
sti
ja
jg
daa
aaa
xchg
sub
lods
sub
aad
jge
mov
scas
mov
cmpsb
popa
or
add
dec
sbb
jp
dec
sbb
repz
lods
addr16
shlb
dec
test
aam
lock
jge
mov
into
ss
cli
out
cmpsb
pop
mov
sub
cli
ret
xchg
mov
cmp
orl
pop
mov
psubusw
lods
push
push
xor
or
push
push
xlat
mov
push
push
inc
orb
sub
lock
negb
inc
enter
pop
imul
out
outsb
aad
inc
xor
mov
xchg
mov
nop
push
dec
cmp
negl
mov
icebp
mov
and
lods
xor
outsl
jl
out
xchg
adc
inc
inc
adcl
movb
xchg
cs
les
adc
sahf
sub
pop
sub
push
aam
ret
jp
push
mov
ljmp
repnz
call
cld
popf
int3
ret
push
xchg
cmp
xchg
imul
push
sbbl
mov
xchg
inc
and
pop
fisubs
loope
push
rcrb
sti
dec
or
mov
push
xchg
cltd
push
jb
repnz
cmp
inc
aad
or
jmp
aad
mov
les
add
pop
xchg
inc
xor
mov
sahf
data16
aam
arpl
and
inc
in
enter
pusha
sti
jg
cmpsl
sub
jecxz
insl
xchg
cmc
in
sbb
hlt
jb
insb
pop
sub
cmp
ds
cmp
inc
xchg
mov
jno
repz
sub
arpl
and
jge
loopne
iret
jno
sbb
pop
lret
cmp
scas
test
mov
sub
repnz
cltd
stos
daa
icebp
pop
es
mov
push
fsubrs
sarl
push
shlb
bound
js
push
leave
jo
jns
std
sub
push
lret
or
mov
xchg
add
mov
ds
ds
xor
mov
sbb
cmpsb
jg
push
ret
test
dec
repnz
inc
and
push
push
push
rorb
mov
fwait
mov
std
ljmp
pop
xchg
xchg
addr16
bound
sub
xchg
scas
inc
xor
out
popa
dec
sub
push
std
add
adc
hlt
or
iret
push
mov
rcll
jo
jle
mov
lret
lret
enter
xchg
xor
add
jbe
push
mov
cmp
inc
in
pop
sub
loope
mov
sub
mov
and
jne
icebp
insl
xchg
sbb
andl
adc
cwtl
loop
pop
xchg
daa
cmpsl
sub
pop
jns
cmpsb
lock
sbb
adc
outsb
and
xchg
push
mov
sbb
mov
jmp
sbb
cmp
push
sarl
inc
mov
jb
jecxz
das
cwtl
jmp
fs
xor
insb
add
cmp
xchg
stos
sbb
adc
fs
add
inc
and
rorb
dec
pusha
cld
mov
mov
mov
lds
imul
loop
inc
into
ds
and
dec
fidivs
repnz
push
cli
dec
gs
iret
dec
xchg
jp
clc
aam
test
lret
mov
xor
movsb
push
ljmp
cltd
popl
sahf
add
xchg
ret
pushf
pop
lcall
push
sub
stos
stc
push
leave
addr16
adc
pop
mov
stos
push
xchg
mov
dec
lods
push
mov
adc
in
push
jecxz
fsts
pushf
movb
push
adc
mov
pop
ss
repz
cmpsb
mov
in
insb
sbb
mov
int3
inc
jnp
aad
xlat
mov
adc
mov
jb
cmp
mov
jb
outsb
lcall
int
lret
mov
fistpll
inc
xchg
sti
dec
adc
xchg
ss
jp
add
jne
lcall
pop
sub
push
jp
lods
popa
lret
lds
pushf
xchg
inc
dec
xchg
adc
jl
push
push
loop
ljmp
mov
imul
je
xor
out
dec
pusha
ds
popa
fwait
mov
fdivs
or
or
insl
fdiv
inc
in
lret
loopne
pop
xchg
cli
or
sbbb
jg
imul
rcll
or
jg
and
jmp
pop
and
push
loopne
add
les
add
mov
or
pop
jecxz
and
ficoml
xchg
lret
cwtl
adc
loopne
inc
addr16
cs
jge
mov
mov
data16
adc
pop
jl
mov
hlt
ret
outsb
sbb
stc
arpl
xor
in
dec
xchg
mov
pop
pop
adc
int3
mov
mov
push
cmp
and
sub
pop
and
nop
mov
xchg
push
jmp
xchg
lcall
stos
adc
sbb
fcomps
out
push
or
jo
cmpsl
outsl
mov
push
out
daa
sarb
xchg
mov
add
rolb
lahf
call
fisubl
outsb
mov
mov
stos
pop
adc
repz
in
sub
outsl
fdivrp
jmp
fwait
mov
aad
sahf
adc
cmc
outsb
xchg
testl
je
inc
lret
call
jne
fcmovb
pop
push
mov
mov
push
mov
inc
dec
inc
and
fs
jecxz
pop
sti
pop
mov
cld
ret
push
inc
in
cld
fmuls
pop
lea
shl
mov
xchg
push
inc
and
test
test
incl
dec
loop
dec
faddp
sub
ficomps
jg
ror
lods
xchg
pop
jmp
xor
cli
pop
pop
aas
shl
jg
push
mov
mov
xchg
popf
and
jp
or
push
sub
aad
sub
outsl
incb
mov
test
mov
roll
pop
out
das
lahf
xor
cmp
and
and
xor
mov
cmp
int
rolb
mov
push
rorl
sub
push
sbb
cli
rcll
fstps
movsb
arpl
adc
mov
push
inc
das
out
xchg
idivb
loopne
pusha
sahf
ljmp
repz
fcmove
cmp
push
xchg
filds
cmp
push
loopne
mov
icebp
jp
aas
adc
mov
scas
int
clc
sti
fldl
or
pop
cltd
mov
stos
loope
cli
xchg
jae
pusha
inc
adc
movsb
dec
dec
or
adc
adc
shrl
sub
aas
push
adc
ficoms
in
sub
inc
aas
clc
cmp
mov
subl
mov
mov
and
dec
rorb
out
int
fildll
shrb
cmp
adc
pop
shlb
movsl
mulb
push
out
aad
or
insl
xchg
inc
sub
adc
sarb
pop
into
fcmovnb
and
sub
loopne
out
shll
mov
mov
mov
ja
inc
mov
aas
sub
icebp
out
jb
es
mov
xor
lea
rol
fsubs
mov
sub
mov
dec
scas
xchg
cmpsb
cmp
xor
and
xlat
pause
sbbb
daa
shr
lods
inc
nop
out
add
test
mov
loopne
xchg
mov
mov
jmp
movsb
notb
xchg
push
insl
cmp
adc
adcb
xchg
dec
lods
popa
movsb
test
and
sbb
add
js
xchg
lock
mov
jle
mov
adc
mov
test
addr16
cli
das
lods
fildll
idivb
and
ss
mov
das
into
pop
add
push
mov
ss
stos
or
mov
jb
pop
out
cmp
push
push
and
xor
xlat
dec
pop
ficomps
lahf
jae
rol
jle
lcall
inc
stos
lret
mov
fnsetpm(287
xor
sti
cwtl
xchg
sub
inc
aad
cmp
jb
je
sbb
imul
outsl
push
push
and
fstps
jp
and
out
pushf
test
inc
cmp
loope
in
aas
jo
adc
xor
jae
pop
icebp
xor
outsb
arpl
shlb
and
mov
adc
lret
xchg
shl
xchg
pop
scas
add
enter
xor
sbb
xor
fnsave
ret
mov
test
sahf
lods
mov
push
cld
sub
les
mov
aad
sahf
imul
or
sti
lret
mov
into
ret
jbe
out
dec
xchg
mov
and
inc
pop
cmpl
sbb
imul
popf
dec
adc
stos
push
fadds
int
adc
leave
subb
lahf
xor
pop
inc
cld
pop
es
inc
clc
adc
jne
xchg
mov
or
and
jle
or
enter
enter
lcall
mov
rcrl
mov
arpl
xchg
out
xchg
div
pop
xlat
sbb
sarl
stos
mov
pushf
inc
scas
or
push
jmp
or
pusha
or
fwait
ss
aam
push
push
lock
stos
jge
insl
and
push
mov
push
dec
xchg
outsl
xor
sbb
daa
xchg
sbb
jae
sub
jl
inc
fmull
fisubrl
dec
sub
pusha
cmp
dec
sti
das
bound
jns,pt
add
adc
lock
xor
dec
sub
mov
fistps
push
xor
out
or
jg
mov
push
leave
or
outsl
movsb
mov
fisubrs
cmpsl
adc
in
int
lret
int3
dec
jne
jle
test
pop
aam
xchg
aad
test
outsb
or
sbb
or
push
lahf
jle
or
mov
pop
jae
int
mov
mov
mov
sarl
in
jge
inc
sti
lret
sbbl
jns
das
mov
jb
hlt
out
mov
sbbl
pop
push
inc
jecxz
fisubrl
xchg
and
stc
jnp
call
xchg
pop
inc
mov
movsb
pop
mov
push
cmp
inc
push
sub
adc
mov
push
pop
push
aad
xchg
and
sbb
add
out
test
sub
dec
xlat
xor
dec
mov
into
aad
fcompl
test
mov
test
enter
imull
add
sahf
pop
mov
or
lea
pop
test
enter
je
dec
jb
repnz
hlt
loope
pop
lea
leave
add
push
fdivs
add
dec
cmpsl
mov
adcb
fwait
push
cmp
loop
lea
xchg
les
sub
test
test
sbb
sbb
fs
repnz
mov
sti
fmuls
mov
xor
jns
inc
add
or
sub
cmpsl
xchg
inc
fsub
cmp
dec
cwtl
in
lea
adc
xchg
fstps
inc
jge
xlat
rcrb
daa
or
fbstp
pop
lret
xchg
and
or
and
or
adcl
aaa
push
jne
jecxz
leave
pushf
inc
cltd
mov
aaa
adc
icebp
mov
lahf
iret
mov
pop
test
push
out
pusha
pop
inc
push
fiaddl
dec
mov
and
je
xor
mov
clc
scas
add
movsb
aaa
mov
push
add
inc
cmp
test
lock
inc
aaa
inc
aad
in
jae
iret
mov
xchg
aaa
mov
push
xchg
jmp
mov
fpatan
imul
inc
sub
jecxz
loop
stos
or
sub
lock
pop
je
jecxz
add
adc
arpl
mov
push
stos
in
push
adc
mov
subl
jecxz
dec
and
adc
or
sub
je
movntq
pop
rcrl
out
ret
xor
add
in
adc
mulb
inc
scas
repz
repnz
jns
data16
and
and
sahf
daa
adc
test
aad
or
lds
cs
inc
in
stc
mov
push
daa
inc
outsb
or
in
pop
repz
sub
in
push
xor
mov
xor
test
mov
push
adc
shrl
es
xor
je
add
mov
xlat
out
mov
jns
outsl
inc
push
rclb
scas
add
hlt
and
or
xchg
aad
push
cmc
out
mov
roll
pop
cmp
pop
iret
dec
scas
fisubl
jo
pop
inc
jle
and
sar
in
jae
in
add
ret
pop
push
sub
mov
mov
jecxz
addr16
cwtl
lods
or
aad
pop
push
int
in
lds
das
out
lret
inc
das
push
cli
dec
cld
dec
sub
xor
arpl
je
xchg
mov
sbb
fistl
inc
mov
cli
mov
aad
xchg
push
movsb
inc
pop
aaa
mov
inc
sahf
push
es
es
sub
jns
outsl
push
sub
and
mov
xchg
mov
mov
jmp
adc
pop
cmp
in
loopne
dec
push
inc
dec
repnz
pop
mov
rcrb
movb
daa
add
xchg
int3
jnp
dec
jg
cmp
push
jge
and
mov
pop
add
jnp
or
push
movsl
imul
sbbb
sbb
mov
inc
adc
imul
bnd
sbb
out
call
jg
mov
mov
movsl
rorl
enter
ficompl
push
jge
adc
mov
addb
gs
add
mov
popf
sbb
fs
pop
mov
bound
pushf
fbstp
mov
cli
dec
test
enter
ja
jb
pop
data16
roll
int3
jae
xchg
repnz
cmpsb
call
and
cs
xlat
inc
xlat
daa
and
xchg
push
adc
jle
xor
nop
pop
add
mov
inc
imul
ret
movsb
out
sarl
cwtl
fistpl
fucom
inc
cmp
test
pop
scas
ds
into
movsb
or
mov
stos
mov
in
lea
adc
mov
sbb
push
sarb
mov
bound
enter
nop
ret
fldl
addl
test
test
and
jl
in
dec
clc
pop
sub
inc
out
jmp
test
lods
xchg
xchg
jecxz
repnz
clc
or
sqrtps
push
movsl
mov
out
xor
cli
add
clc
lods
mov
cmpl
adc
sub
icebp
ds
or
push
ret
insb
dec
xchg
pop
lock
sahf
or
int3
jns
aas
loopne
jl
cmp
inc
lret
xor
mov
insl
mov
or
sbb
pop
xchg
addl
stos
lods
hlt
nop
and
das
mov
pop
and
std
push
cli
adc
pop
dec
sub
mov
xchg
lods
pop
pop
mov
enter
and
or
sbb
add
pop
lock
movsl
inc
iret
lret
in
leave
lods
mov
or
mov
push
sbb
jno
scas
shlb
sbb
cltd
aam
arpl
add
into
outsl
mov
in
shlb
adc
push
fsts
and
jecxz
les
jno
pop
add
int
jl
cmp
out
lock
xor
jle
inc
pusha
faddl
into
movsl
ja
mov
hlt
inc
pushf
into
cs
or
cmpsl
mov
adcb
mov
pop
fwait
clc
sub
push
loope
icebp
gs
xor
insb
and
sahf
testl
sub
outsl
adc
and
pop
sub
imul
in
inc
sub
addr16
xor
sub
leave
mov
push
push
push
mov
and
shlb
out
fsubrs
imul
xchg
jo
jl
daa
jb
pop
push
sbb
shrl
xor
inc
lcall
enter
add
out
out
pop
dec
push
cmp
das
iret
sbb
jae
cmpsb
stos
add
adc
pop
mov
push
iret
adc
shll
mov
daa
adc
mov
idiv
mov
out
push
push
pop
xor
outsl
dec
sahf
fs
inc
dec
lock
outsb
pop
mov
mov
pop
pushf
mov
fcmovnbe
call
mov
popf
fdivrp
xchg
jae
pop
movsl
mov
arpl
adc
sub
sbb
je
js
sub
jecxz
sbb
les
cmpsb
cmp
pop
aam
test
into
movsl
jl
push
mov
roll
push
out
xor
sub
sub
dec
mov
and
pop
fisttpll
lcall
sbb
sti
sbb
mov
push
dec
cwtl
mov
inc
push
fiaddl
rclb
lods
or
xchg
inc
xor
out
jg
inc
lods
xchg
lods
mov
pop
sarb
pop
cmovns
sbb
xchg
push
insl
sub
or
in
pop
lods
inc
les
jbe
daa
out
mov
mov
inc
cmp
xchg
mov
adc
xor
lods
in
int3
nop
push
hlt
sbb
jae,pn
mov
popa
jnp
lock
loope
push
jge
mov
adc
mov
subb
scas
ds
mov
ret
pop
push
sar
sbb
testl
dec
fmuls
es
jg
inc
and
sbb
jp
test
lds
pop
aas
xchg
lea
lret
pop
stos
insl
sbb
in
inc
int
cltd
out
mov
jae
mov
mov
xchg
pop
ds
push
mov
dec
and
addr16
leave
imul
jb
insb
mov
rorl
pop
adc
js
shr
adc
push
pop
std
push
nop
das
mov
lods
mov
mov
jae
mov
ret
ret
cmp
sub
in
das
pop
insl
and
shll
and
ficoms
subb
push
jp
jmp
bound
cmpsb
call
insb
mov
in
fdecstp
jb
push
scas
lret
movsl
pop
aaa
mov
pop
stos
push
neg
pop
subl
loop
and
and
inc
sbb
push
jae,pt
dec
cmp
loop
fcomp
pusha
bound
mov
pop
mov
std
inc
sbb
xchg
cltd
pop
adc
mov
adc
test
out
cltd
js,pn
loope
ds
cwtl
and
in
daa
cmp
in
inc
mov
sub
aaa
in
xchg
ljmp
fcomip
jl
sbb
sbb
or
lods
outsl
fdivr
or
mov
rcl
data16
scas
pop
dec
add
pusha
dec
js
and
sbb
leave
sbb
dec
ja
sbbl
or
sub
les
rcl
ret
fsubrl
jne
pushf
cmp
sbb
fdivrl
insb
cld
inc
mov
out
js
add
ljmp
cmpsb
movb
outsl
stc
mov
movl
cmp
cvtdq2ps
inc
icebp
fwait
in
call
and
call
jae
mov
test
enter
imul
mov
mov
mov
mov
loopne
jle
and
mov
push
rcrb
cld
das
repz
adc
out
clc
adc
insl
mov
add
mov
cmp
xor
cmp
mov
stos
push
cmp
sahf
std
sti
aas
out
fcompl
or
jmp
outsl
ds
xor
mov
sub
in
ret
dec
sarl
xchg
or
insl
push
lcall
push
sub
jae
lds
repz
cmp
mov
and
jo
aad
and
mov
leave
and
out
push
cli
int
adc
mov
stc
xchg
fisubs
lods
in
nop
mov
inc
rol
inc
jae
pop
add
xor
stc
das
bswap
push
xorl
imul
lds
mov
mov
push
ljmp
data16
jnp
ljmp
and
je
add
xorl
push
bound
sub
out
mov
std
push
in
cmc
pop
lods
dec
pop
fsubs
daa
dec
cld
jbe
mov
cmp
popf
scas
jecxz
cmc
cmp
imull
imul
cmpsl
cwtl
xchg
cld
fnstsw
xchg
xchg
pop
fidivrs
mov
leave
jae
test
xlat
cmpsl
and
shr
xchg
hlt
and
or
xchg
mov
mov
movsb
sbb
cmp
sti
pop
icebp
mov
xchg
jmp
insl
decb
xorl
mov
xchg
fimull
jg
inc
fidivs
stos
mov
xor
into
sahf
xor
and
pop
jne
xor
xchg
dec
fs
fists
jmp
jl
pop
inc
inc
std
aad
dec
inc
sub
cltd
adc
xor
mov
lcall
imulb
sbb
lock
mov
add
cmp
ret
int
loop
mov
and
push
adc
xchg
rolb
push
pop
popf
and
icebp
xlat
sub
mov
xlat
dec
rorl
pop
and
pop
mov
stc
outsl
xchg
mov
repz
mov
aaa
sbb
push
hlt
mov
clc
sub
sbb
outsb
aam
push
and
div
ret
cmp
add
inc
fdivrl
add
dec
rcl
gs
jl
orb
xchg
sbb
jns
pushf
sbb
psubq
movsl
iret
xchg
cmp
ja
aas
pop
sub
xor
jmp
int3
insb
rcrb
data16
sub
inc
pop
addr16
lret
adc
loope
mov
addr16
stc
punpcklbw
or
pop
inc
cmp
in
or
push
hlt
adc
add
dec
repnz
enter
cmp
sbb
adc
inc
mov
movsb
cld
push
rcrb
jnp
lds
inc
xor
mov
mov
in
or
adc
lret
sbbb
fucom
sti
jno
insb
mov
out
inc
xchg
lock
mov
in
jecxz
push
mov
test
fs
xor
adc
leave
adc
lock
pop
lods
ret
fists
jecxz
aad
xor
xor
repz
ret
xchg
add
push
mov
mov
pop
push
adc
add
cmp
push
dec
ret
sti
dec
mov
inc
loop
popa
cwtl
ffree
adc
jge
aad
adc
cltd
mov
fdivrp
cmc
push
loop
xchg
sbb
xor
cltd
mov
cs
adc
lret
repz
clc
inc
cmpsw
or
push
movsb
leave
mov
icebp
pop
outsl
sbb
bnd
mov
divl
cmp
sbb
sti
inc
ds
gs
inc
inc
shl
jle
adc
xchg
cltd
add
stos
pop
cmp
adc
xchg
xor
push
aam
mov
into
jg
push
jns
aas
mov
sub
inc
mov
enter
jne
adc
fsubl
add
dec
sub
or
je
adc
ficompl
push
arpl
shll
sbb
dec
insl
dec
inc
push
loopne
xorb
dec
pusha
fistpll
xchg
loop
cltd
dec
adc
stos
nop
insb
repz
in
push
pop
or
mov
dec
out
push
lahf
add
es
mov
pop
cmpsb
sub
xchg
xlat
filds
out
pop
repz
jp
lds
loope
push
cltd
push
adc
movsl
aam
sub
fldenv
sub
mov
adc
insb
sub
lds
ret
mov
mov
ss
int3
lods
aaa
add
pop
pop
inc
jl
pop
test
jge
add
xor
insb
fnstenv
pop
pop
push
fbstp
ja
dec
test
mov
push
xlat
je
rcll
inc
iret
push
outsl
jno
gs
fimull
dec
xor
popf
movb
mov
cltd
int
xchg
pusha
out
xchg
lahf
mov
jge
adc
imulb
cmp
les
mov
in
sbb
adc
mov
pop
nop
fsubrl
sbb
out
dec
lret
es
sahf
daa
inc
xor
repz
inc
pusha
xchg
pop
mov
push
imul
jbe
das
lock
mov
aaa
adc
test
mov
or
sahf
daa
add
insb
xchg
icebp
xchg
into
test
inc
imul
mov
push
int3
ss
mov
inc
lock
push
aad
mov
dec
imul
lret
out
aas
ds
rcl
jb
in
add
test
mov
or
pop
enter
mov
cmp
loope
xchg
add
and
out
pop
xchg
cs
sub
sbb
in
enter
hlt
push
jl,pn
dec
push
fwait
sub
clc
pop
mov
sub
data16
cmp
inc
test
add
cli
adc
mov
ret
jnp
sub
mov
lcall
mov
cmp
mov
adc
or
imul
pop
mov
cmp
sbb
sub
insb
cmpb
maxps
pop
jge
inc
cmc
inc
lds
int
xchg
jnp
shl
add
jne
jno
stos
imul
cmpl
push
pop
sub
sbbb
in
js
xor
repz
xchg
sub
sbb
dec
mov
data16
cs
addr16
cmpsb
cmpsl
mov
xor
and
dec
in
sbbl
insl
cmc
gs
out
fdivrl
lret
popf
mov
sahf
mov
mov
clc
sbb
and
mov
fscale
cmpsl
rcr
jg
std
pop
push
lods
lret
xchg
daa
lods
mov
stc
fldl
shl
mov
ljmp
jle
push
sub
or
cmpsb
adc
jmp
fdiv
dec
adc
lret
cmp
jns
mov
mov
jb
imul
pop
shlb
inc
pop
or
sahf
push
imul
jo
xor
dec
in
mov
sub
xor
test
sarl
mov
xor
inc
imul
pop
cmp
adc
sahf
mov
xor
in
pushf
inc
sti
out
mov
lods
push
arpl
pop
push
sahf
mov
pop
adc
or
movsl
adc
shrb
ja
test
inc
cli
xlat
mov
mov
fistpl
daa
lcall
outsl
imul
movsl
in
xchg
xchg
insl
dec
xchg
out
lea
popa
mov
or
test
gs
cmp
push
mov
lret
sbb
xchg
dec
dec
mov
movsl
mov
sub
dec
das
adc
dec
pusha
pop
les
cmc
jle
int
fs
lcall
sub
insl
cmp
sub
fldt
dec
dec
cmp
stos
mov
shll
mov
fucomp
out
pushf
aaa
cmp
and
and
pop
mov
xor
sub
push
add
pop
push
adc
sub
lret
cmc
sub
enter
add
jns
aas
nop
imul
hlt
dec
and
mov
push
dec
xor
aam
ljmp
imul
call
inc
push
cmp
das
pusha
imul
scas
jl
andl
mov
insl
scas
xchg
sbb
mov
loop
pop
mov
mov
cmpsb
adc
repnz
loope
sti
gs
rcll
jb
or
leave
out
push
add
mov
fistps
sub
lret
cmpsb
and
xor
lods
or
xor
dec
lret
add
dec
pop
dec
fistpl
fcomps
movsb
data16
push
mov
dec
andl
push
stos
mov
pop
cmpsb
mov
mov
jae
loopne
inc
stc
xchg
cmpsb
lcall
hlt
push
scas
cli
cmp
pop
clc
out
ret
mov
pop
test
jbe
mov
js
lods
mov
lahf
push
adc
or
mov
xchg
scas
insb
lods
jmp
jne
jnp
jae
xchg
jae
sbb
sbb
and
mov
adc
adc
xor
out
pusha
inc
push
fisubrl
mov
mov
jg
lods
std
adc
test
fsubr
adc
pop
add
stos
mov
ret
sbb
sbb
clc
adc
pushf
lods
add
cltd
mov
repnz
ja
inc
sub
pusha
or
fcomi
and
frstpm(287
push
jns
aam
mov
xchg
popf
adc
add
mov
shlb
cmpsb
add
inc
cmp
mov
push
fwait
not
add
stos
daa
or
fidivs
pushf
lods
push
popf
push
clc
xchg
test
pop
lock
xchg
jmp
cmpsb
mov
rclb
icebp
dec
inc
mov
cmpsl
dec
inc
test
lock
scas
dec
mov
or
xor
fmull
xor
and
push
pop
lock
fcompl
dec
push
js
add
fs
jnp
ss
pop
div
aaa
sub
mov
dec
adc
mov
push
cmp
rolb
xor
xor
lret
cmp
xchg
mov
mov
add
test
call
popf
test
fwait
into
pop
push
xchg
gs
jge
dec
xor
es
loope
icebp
test
sbb
rorb
mov
inc
rcrl
shl
push
sub
ss
insl
gs
jp
xor
clc
ja
mov
imul
pop
sbb
dec
outsb
push
paddsw
xor
push
test
aaa
xlat
inc
sub
xor
mov
sbb
ret
test
mov
fnstsw
lret
jmp
stc
jae
stos
pop
int
pop
orb
fnstcw
mov
movsl
repnz
pop
out
mov
call
cli
movsb
mov
cltd
dec
inc
push
or
bound
or
xchg
add
xchg
xor
outsb
sub
test
rcr
xchg
dec
loope
adc
addl
dec
xchg
mov
loop
rorb
test
add
mov
faddl
jge
jp
roll
dec
mov
ret
push
fcompl
push
lret
loop
push
and
imul
inc
adc
mov
mov
shlb
sbb
add
test
les
mov
in
sbb
adc
sbb
mov
mov
cmp
mov
dec
cs
in
lret
pop
lahf
push
mov
test
cld
lret
cmp
jecxz
lds
subb
sub
notb
in
and
inc
cld
rcl
adc
and
ficoml
push
and
inc
js
in
mov
inc
ljmp
mov
xchg
mov
inc
cmp
dec
scas
icebp
cli
addr16
sbb
add
push
jp
dec
in
inc
sub
cmp
bnd
xor
lds
mov
cmp
pop
lods
lods
push
jl
sbb
imul
jle
fucom
test
ss
lret
mov
imul
sbb
mov
cmp
inc
out
lahf
xchg
andb
test
fildll
sbbl
jle
flds
ljmp
sub
rorl
sti
adc
std
out
cli
push
pusha
std
mov
and
pop
xor
mov
adc
pusha
push
and
push
jae
std
and
adc
les
dec
into
arpl
aad
pop
jmp
subl
fcomps
aaa
lock
lcall
fwait
pop
mov
fbld
sbb
cld
test
mov
pop
dec
mov
es
lahf
and
xchg
outsb
adc
mov
lods
cltd
xchg
push
adc
clc
lcall
xchg
ja
ljmp
outsl
imul
jecxz
pushl
jne
xchg
aad
sub
sbb
into
mov
inc
mov
push
mov
xchg
enter
rcrl
push
call
lahf
aad
loope
pop
pop
cmp
cmp
data16
sbb
out
fs
shlb
push
in
outsb
and
pop
or
cmp
jae
and
mov
or
pop
lods
arpl
jo
or
push
adc
adc
xchg
jmp
shrl
stc
pop
or
pop
mov
lods
aas
jns
out
mov
sub
mov
les
or
scas
mov
insl
ss
pop
loope
push
je
movsl
sub
add
inc
pop
jb
jb
mov
bound
xchg
push
add
popf
addr16
ja
into
add
testb
lds
inc
cli
lahf
sub
mov
mov
pop
inc
mov
das
mov
rcr
imull
lods
lods
movsb
sub
dec
stos
sbb
mov
mov
ja
and
popf
mov
pop
pop
psubsb
lods
sub
or
int3
jae
dec
mov
inc
andb
fnsave
jmp
xor
inc
dec
fwait
jnp
dec
addr16
arpl
cmpsl
loop
mov
push
cmp
dec
inc
mov
mov
aas
pop
dec
fld
xor
and
cmp
xchg
mov
fadds
jb
shll
int3
pop
aad
push
adc
insl
out
xor
pop
jbe
fwait
push
add
and
adc
jmp
cmp
lret
jp
adc
mov
jae
je
xchg
adc
dec
lock
popf
sbb
mov
pop
nop
cmc
push
mov
mov
mov
xor
cmp
lock
fsts
adc
mov
xchg
pop
in
lahf
pop
jmp
pop
mov
outsl
rcrb
mov
mov
pop
test
mov
push
xchg
cmp
pop
js
xchg
pop
inc
stc
push
popf
xchg
inc
jecxz
cmpsl
dec
mov
and
pop
push
popa
arpl
scas
mov
enter
in
cmp
test
or
add
or
adc
outsl
push
je
pop
or
movsl
push
std
out
lock
pushf
pop
and
xchg
mov
and
fbld
jmp
or
pop
xor
ss
adc
jl
mov
cli
or
xchg
inc
jno
mov
or
dec
mov
add
mov
enter
fistps
xor
imul
dec
jae
and
movsl
jle
sub
jmp
loope
sahf
sbbl
sub
xor
jmp
xchg
ror
andb
lea
mov
push
mov
xor
cmp
insb
adc
pop
mov
cli
mov
fisttpll
cld
cmpb
mov
stos
iret
inc
cmpsb
add
mov
mov
add
jg
xchg
lahf
mov
shlb
leave
sbb
in
push
clc
xchg
jmp
mov
mov
dec
pusha
dec
aam
mov
adc
dec
cmpsb
jns
sbb
mov
jnp
sub
adc
xchg
out
push
repz
jmp
push
test
mov
pop
lcall
pop
fisttpl
inc
xchg
out
es
push
mov
scas
sub
cwtl
lods
sub
xrelease
lret
xchg
mov
iretw
sbb
fwait
outsb
or
or
jmp
call
xchg
sub
sbb
sbb
test
lret
pop
sub
sbb
push
loop
sbb
pushf
dec
inc
mov
aaa
mov
dec
add
lods
mov
imulb
inc
sub
lds
xor
adc
pushf
js
mov
in
ss
and
out
test
lahf
das
push
stos
ret
fs
cltd
je
bound
ss
mov
and
jo
nop
adc
cwtl
std
cmpsb
push
in
inc
pop
in
push
inc
idiv
pop
adc
jmp
mov
sub
sub
cltd
roll
xchg
xchg
push
sbb
aas
mov
subb
or
mov
jmp
inc
aaa
pop
cmp
les
dec
test
pushf
cmp
mov
and
and
cmp
test
jl
mov
pusha
or
xor
pop
ss
aas
sub
mov
mov
loopne
loopne
in
adc
pop
mov
cmp
pop
adc
push
cmpsb
lret
mov
icebp
inc
jge
test
cmpsl
inc
mov
lods
std
int
sbb
gs
and
out
lret
sub
insb
inc
addb
lds
js
dec
xchg
xchg
inc
fs
xchg
lods
into
jno
enter
in
mov
pop
arpl
pop
mov
mov
in
lea
sub
jmp
pop
mov
mov
fnstsw
push
xchg
les
std
sub
pusha
lock
jg
cmpsb
call
push
shrl
or
fs
insl
out
and
dec
mov
cmc
jg
sbb
xor
mov
mov
dec
mov
and
out
jl
xor
or
pushf
xor
xor
clc
mov
xor
jp
stos
test
xor
cmp
or
sahf
add
jle
and
cmp
std
insl
sbb
xchg
mov
sub
jbe
xlat
cli
fsubrl
test
imul
jb
push
fstpt
mov
es
push
inc
mov
mov
sub
xchg
sbb
rolb
adc
ds
je
cmc
mov
push
int3
mov
sbb
mul
add
lret
xchg
add
nop
sub
dec
mov
xor
inc
pop
push
in
ljmp
mov
add
bound
cltd
xor
jbe
jmp
out
jle
insb
outsl
xchg
add
xor
cmpsb
popa
sbb
and
cs
cmp
cmpsl
jge
pop
shll
dec
dec
sahf
fnstenv
jecxz
cmp
add
mov
out
test
mov
or
lds
xor
and
jnp
add
in
dec
xlat
ret
test
mov
push
jp
push
cmpsl
sub
std
bound
lret
or
mov
push
testb
mov
out
and
pushf
push
test
lods
sbb
sub
mov
imul
daa
jne
testb
jb
and
mov
mov
dec
mov
and
nop
add
lahf
test
mov
std
lcall
movsl
adc
out
mov
divb
outsb
jae
jecxz
jno
sbb
xor
pop
add
xor
sbb
add
push
push
inc
mov
rorl
popf
lahf
inc
xchg
paddb
sub
jle
sbb
xchg
cmpsb
std
and
xor
pop
fisubrs
jge
sub
jg
ret
cmp
aaa
dec
sub
nop
jae
adc
shl
nop
and
and
enter
aad
outsl
sbb
ficompl
sub
pop
mov
mov
scas
scas
lret
imul
fadds
cmpsb
add
xor
imul
pop
pop
in
out
push
push
out
arpl
scas
xchg
rcll
cmovbe
insb
mov
negl
fisubs
gs
enter
pop
repnz
push
or
push
sub
push
xor
outsb
imul
fwait
fs
lcall
mov
test
insl
ss
es
xchg
fwait
add
adc
xchg
push
cltd
fbstp
dec
rcrb
adc
test
fimull
or
adc
mov
fwait
mov
push
movsb
jge
xlat
loop
mov
add
fdivp
dec
repnz
imul
adc
cs
repnz
xchg
mov
loopne
iret
push
movsb
mov
stc
hlt
pop
mov
xchg
add
push
inc
test
loopne
add
int
das
test
cltd
mov
int
test
and
in
cwtl
loopne
add
adc
mov
add
sub
mov
shlb
jecxz
je
push
scas
popf
and
mov
xor
sub
imul
push
ret
loopne
insb
mov
cmp
bnd
sarl
aas
mov
jle
sti
xchg
adc
sub
sbb
sbb
xchg
xchg
xor
mov
cli
out
aaa
ljmp
jmp
movsb
into
dec
clc
lahf
sbb
aad
mov
sbb
cli
test
ret
xor
sbb
mov
sbb
fdivs
shlw
xchg
sbb
sti
jle
xor
sub
dec
test
inc
inc
rcrl
in
in
inc
jnp
cld
mov
lahf
add
inc
pop
adc
mov
jmp
neg
pop
fisubs
add
fsubrs
lret
add
popa
test
xor
xchg
sbb
mov
sbbb
lods
cmp
fisttpl
mov
inc
popa
and
subl
fcom
aam
mov
fnstsw
pop
arpl
out
orb
push
dec
dec
cmp
imul
lods
xor
inc
and
push
stc
xor
push
lcall
cmpsb
gs
mov
cmpsb
jo
cs
or
les
in
jbe
mov
ja
in
loopne
rcrl
cmpsb
sbb
jecxz
sub
popf
imul
sbbl
jne
push
aad
xchg
aas
and
lods
jb
out
mov
inc
jo
push
cmc
incl
ja
and
fistl
stos
dec
mov
inc
sbb
test
imul
ljmp
sub
lods
rep
test
loopne
ja
imul
mov
pmulhw
jp
mov
subb
pop
test
pusha
push
insl
loopne
fcomps
push
xchg
lods
mov
xor
jge
sub
jge
ja
orb
push
cli
shlb
pushw
cwtl
lods
cmp
push
push
data16
lcall
dec
aad
es
sbb
dec
fsubs
lods
popa
dec
movsb
jge
inc
mov
bound
ja
flds
push
xlat
cmp
add
cli
dec
and
in
movsb
sub
stc
andb
pop
in
gs
gs
mov
mov
daa
push
lret
mov
inc
shrl
dec
inc
mov
xchg
jle
mov
shrb
pop
stos
adc
data16
sbb
push
and
inc
roll
jl
lahf
rolb
in
or
rorb
jae
and
sub
aam
js
push
das
dec
pop
add
xchg
push
fnstenv
outsb
rorl
sar
mov
mov
mov
movsl
mov
xchg
in
push
sub
leave
hlt
bound
scas
movsl
loop
repz
shll
pusha
dec
add
rolb
cmp
push
andb
mov
xor
fsubr
pop
ja
sub
in
xchg
jno
dec
pushf
mov
mov
dec
adc
std
loop
mov
cmp
pop
pop
dec
dec
pop
push
bound
adc
cld
lds
pusha
ss
aaa
inc
es
or
out
pop
mov
add
shll
rolb
dec
fwait
imul
mov
pushl
lods
or
shrb
test
repz
mov
cmc
inc
daa
rorl
fs
icebp
adc
and
pop
cmpsl
mov
in
aad
xchg
das
and
sub
and
fildll
cmp
fstps
into
fcomps
jle
insl
out
inc
mov
es
lods
hlt
fisubrs
inc
leave
frstor
jns
push
out
lret
shlb
adcb
inc
fdivrl
test
inc
pop
pop
mov
or
xchg
nop
cmp
in
sysret
mov
inc
xor
dec
aaa
out
mov
pop
and
jecxz
in
xchg
les
ficoml
in
pop
xchg
popf
iret
lds
dec
mov
je
cmp
and
inc
ljmp
sbb
dec
and
xor
in
mov
fs
dec
cmc
push
sub
adc
push
lahf
pusha
popf
movsb
ficoms
loop
jg
dec
xchg
sbb
imul
movsb
bound
adc
mov
sahf
fstp
mov
lret
sub
sbb
push
insl
out
loope
mov
movsl
xor
mov
xchg
xor
xchg
mov
sub
int3
xchg
push
mov
bound
push
xchg
jns
add
inc
fcmovbe
aam
pop
jb
insl
mov
aam
iret
rcrb
jb
imul
cmpsl
pop
xchg
jne
adc
int
bound
lret
sarb
mov
and
push
adc
rclb
clc
movsl
push
ret
repz
mov
dec
loope
jl
rcr
sbb
rclb
loope
cltd
mov
fwait
lcall
mov
daa
jo
imul
mov
in
subl
mov
mov
jb
xchg
jb
pop
sbb
js
pop
sti
cmp
xorb
ds
bound
push
test
xlat
dec
jle
push
xor
push
jae
pop
stos
sbb
out
cmc
aad
mov
fs
push
mov
mov
ss
sahf
pop
sbb
into
and
inc
cmc
out
popf
aam
dec
aas
outsb
cmp
mov
loopne
and
xor
dec
lods
push
add
inc
mov
add
es
mov
das
jl
mov
lock
push
xor
seta
sbb
imul
test
cmp
push
aaa
mov
call
adc
inc
in
or
repnz
mov
notb
inc
xor
xchg
xchg
inc
or
rol
mov
dec
adc
add
es
mov
ret
mov
sub
jmp
or
pop
out
fbld
push
aaa
jecxz
jge
mov
cld
iret
cmp
pop
cli
jecxz
push
mov
out
cmpsl
and
mov
adc
mov
adc
mov
pushl
ljmp
xchg
sbb
xchg
xchg
ret
cmp
mov
test
mov
lods
ficoml
cmp
sbb
cmp
sahf
jb
mov
push
push
jmp
imul
mov
scas
sub
lcall
stc
mov
sub
push
scas
jecxz
sub
xor
or
mov
add
lock
mov
stc
pop
scas
add
push
pop
sub
test
push
xor
push
test
dec
es
cmp
lahf
cmpsb
lcall
icebp
aaa
dec
jae
jle
mov
dec
jmp
cmpsb
mov
inc
push
icebp
push
pop
adc
adc
or
mov
sub
xor
jmp
and
inc
jns
pop
xor
or
movl
imul
adc
mov
lock
rorl
vsubpd
or
cmp
aam
negb
mov
jnp
jns
int3
out
test
pop
push
dec
mov
jne
mov
push
cmpb
js
call
scas
je
mov
fimuls
sbb
cmp
cld
mov
push
scas
cmp
xor
fsubs
push
aaa
inc
jne
pop
mov
xchg
cwtl
dec
push
cmp
cmpb
sub
sbb
mov
pop
cmp
and
sbb
mov
sub
mov
xchg
out
and
rolb
rol
mov
dec
mov
std
imul
in
push
lret
popa
aad
sbb
out
adc
jecxz
loopne
cltd
cmc
mov
push
mov
pop
jge
sub
popf
xchg
pop
push
push
mov
ss
out
dec
orl
rorb
cwtl
cmp
xlat
rcll
ret
fisubs
push
rol
push
stos
out
out
cmp
jl
xor
or
or
fcomps
xchg
add
mov
subb
jecxz
addb
gs
mov
shrb
xlat
cwtl
loop
and
scas
fisttps
and
inc
xchg
adc
fldt
das
dec
cwtl
dec
and
mov
and
icebp
inc
mov
mov
jae
sbbl
clc
ds
test
xor
lock
loopne
jne
xlat
enter
pop
mov
popa
pop
jae
in
adc
notl
sub
das
jbe
cli
cld
and
popa
jns
jl
sub
and
adc
mov
ret
das
andb
inc
jl
add
mov
mov
xchg
pusha
pop
jmp
inc
icebp
mov
xor
mov
popa
push
loopne
outsb
jmp
ffree
lret
rcrl
jne
jp
std
mov
xchg
movsb
out
dec
mov
ss
insl
xlat
movsl
int3
sub
or
enter
ret
push
pop
jle
aam
loop
lods
mov
out
mov
shr
shlb
movsl
out
xor
cmp
in
jecxz
dec
aaa
jns
fmull
imul
dec
cli
pop
int3
fcompl
mov
dec
pusha
jbe
mov
or
inc
mov
or
ja
fs
je
or
cltd
ret
outsl
sarl
scas
push
mov
mov
in
sub
add
jecxz
add
inc
pop
push
lds
pushf
out
sub
sbb
stc
lods
movsb
cltd
adc
adc
or
and
inc
xorb
orb
jno
ret
nop
loopne
mov
mov
push
ret
sbb
sbbl
sub
mov
in
pop
movsl
pop
repnz
out
sarl
sar
out
mov
xlat
sbb
js
ljmp
ss
std
jae
int
notb
fisubrs
icebp
cmp
push
xor
xlat
loop
and
aam
inc
push
dec
shrl
pop
cmp
lds
jecxz
xchg
xor
add
cmp
aaa
sbb
and
test
aas
ret
sub
fs
dec
jmp
arpl
rol
and
dec
or
hlt
and
xlat
sub
mov
fnclex
gs
out
sbb
add
mov
or
imul
adc
scas
movb
sub
or
mov
mov
sub
fcmovnbe
mov
shl
add
dec
xor
mov
hlt
or
pop
xor
stos
pop
aam
test
in
rcrl
in
int
das
cmp
adc
adc
ja
jle
movsl
push
and
js
dec
cmc
sar
shll
jbe
add
ljmp
mov
pop
mov
jle
out
mov
sub
mov
setb
int
dec
das
cmp
jbe
repnz
adc
out
cltd
js
mov
stos
scas
or
ljmp
push
std
pop
mov
dec
adc
cmp
imul
lcall
jno
mov
sbb
push
pop
add
arpl
sbb
add
stos
push
sahf
out
gs
rorb
or
jo
ss
sbb
inc
jb
xchg
mov
jmp
aaa
loope
ficompl
add
rcl
std
adc
js
push
in
pop
int3
sub
mov
xor
fucom
dec
fucom
inc
adc
inc
sub
sti
adcl
subl
mov
push
je
jb
push
sbb
addb
call
mov
or
ds
jne
push
stc
movsl
push
xchg
inc
stos
mov
pop
aaa
dec
jp
cwtl
mov
sub
neg
mov
mov
push
sbb
xchg
aad
arpl
sbb
inc
test
insl
jae
loop
sub
adc
orb
mov
xchg
ds
idiv
stos
cmp
cmpsb
and
repz
arpl
rorl
push
pop
or
sbb
jne
repnz
xor
pop
lods
dec
inc
lret
insl
dec
rorb
loopne
rcrb
dec
lock
jmp
or
push
jae
movsl
xchg
pop
jnp
push
sbb
push
test
bound
mov
pop
imul
or
pusha
jecxz
or
push
daa
pop
mov
xrelease
add
adcl
cmp
rolb
test
or
addl
pop
jae
mov
push
jmp
cmpsb
iret
mov
fwait
gs
pop
cmp
pop
add
fwait
es
loop
inc
ud0
pop
xchg
les
stos
cmp
mov
adc
sarb
stos
js
cmc
or
pop
shll
xchg
mov
repnz
jmpw
xor
cmp
incb
in
test
roll
fwait
addr16
cmp
xor
push
jle
and
imul
leave
sahf
push
push
lret
loopne
xchg
mov
lds
into
pusha
ret
test
out
shrb
fnsave
stos
clc
inc
cli
lret
add
jae
cmpsb
scas
fsubrs
int3
outsb
idivl
xchg
jp
jb
or
sub
push
inc
mov
cmpb
test
movsb
xchg
pop
arpl
jmp
pop
cmp
jmp
and
jnp
outsl
pushf
jne
xor
or
xor
jne
adc
dec
mov
rclb
dec
and
cmpsb
adc
roll
fcoms
lret
js
test
or
jmp
jno
xchg
and
or
dec
sbb
dec
into
jb
test
cmp
pop
inc
jne
mov
outsb
mov
jmp
jno
pop
mov
out
hlt
cmp
movsl
cltd
cmp
lahf
aam
jbe
sbb
push
and
cli
jle
xor
gs
in
fcoml
push
xor
mov
sti
or
xchg
sub
out
dec
jne
stc
or
ror
push
dec
or
mov
cs
jle
mov
mov
cmp
es
in
mov
push
ds
jge
sbb
xchg
jmp
outsb
sub
jle
aam
mov
sub
xor
in
inc
push
clc
mov
xor
sbb
ss
adc
das
push
cmpsb
push
gs
jge
pop
dec
orl
incb
outsb
and
push
repnz
cld
mov
scas
fxch
push
test
mov
sbb
std
mov
add
xchg
and
test
lahf
push
mov
jne
out
inc
or
adc
xchg
add
shll
mov
shll
dec
lds
pop
push
pop
add
mov
jno
notl
add
add
cmpl
insl
out
xor
dec
scas
inc
scas
leave
jge
les
jle
mov
pop
inc
lahf
sub
mov
jae
clc
xor
mov
or
inc
mov
and
pop
cmp
xor
dec
mov
xchg
scas
mov
lret
push
test
in
lds
inc
or
fcmovnu
and
push
in
cwtl
push
sbb
mov
std
xchg
jae
loopne
int
and
fidivs
xchg
mulb
push
mov
sti
pop
pop
jo
mov
mov
outsl
imul
stc
popf
decb
or
adc
aaa
lret
mov
xor
in
daa
orb
dec
add
fwait
jmp
jge
mov
sbb
xchg
mov
fs
pop
call
aas
add
fadd
test
sub
lock
lods
les
movsb
test
shll
addr16
xchg
rol
jg
inc
mov
stc
sub
adc
mov
jbe
call
add
les
adc
inc
xchg
mov
mov
mov
roll
enter
sub
and
cwtl
stos
dec
pop
sub
mov
in
dec
xor
pop
pop
mov
jmp
cmp
sub
mov
int
mov
mov
test
lret
mov
xchg
into
loop
push
xchg
mov
addr16
and
popa
popf
inc
pop
xchg
pop
dec
cmpsb
into
sub
jmp
sub
je
sbb
mov
xchg
pop
icebp
pop
xor
iret
mov
incl
push
popa
sbb
ret
adc
sbb
jmp
addr16
dec
sub
ror
cmp
mov
jl
adc
pop
adc
sbb
dec
mov
add
test
jo
es
scas
popf
sbb
shrl
lcall
mov
imul
mov
fs
mov
scas
loop
fmull
fldt
mov
ja
cmp
jbe
movsb
mov
or
cmpsb
jne
and
xor
pushl
nop
push
sub
jno
lcall
test
in
ret
les
mov
in
fnstcw
leave
mov
mov
outsl
fs
in
mov
inc
jb
std
out
fwait
mov
imul
loope
loopne
mov
jmp
adc
in
cltd
xor
mov
in
fmull
pop
sub
push
aaa
daa
pop
rol
mov
bound
mov
popf
repnz
mov
lock
pop
mov
push
jge
fs
enter
mov
repnz
xchg
push
test
arpl
shll
add
stos
pushf
or
push
pop
lea
ljmp
xchg
xchg
ss
or
cmp
sbb
insb
push
push
insl
js
out
and
sbb
pop
dec
sub
sbbb
scas
repz
fdiv
rcrl
sbb
xchg
jl
mov
xor
rcrb
and
mov
je
loopne
pop
pop
orb
xchg
mull
das
sub
inc
pusha
push
outsl
out
sub
stos
sbb
lea
dec
scas
call
pop
stos
fldl
mov
sub
jnp
popl
mov
jns
cmp
outsl
aad
repz
imul
jge
das
jp
movsl
push
inc
pop
in
inc
int
lcall
mov
push
dec
adc
jmp
daa
aad
ffreep
push
or
mov
add
mov
or
cltd
cmpsb
dec
pop
loop
inc
prefetchw
dec
inc
in
push
pop
je
outsl
cmpsl
mov
mov
and
mov
jecxz
push
push
ss
add
jae
daa
rclb
mov
inc
imul
cli
gs
incb
xor
adc
xor
adc
lods
rcll
mov
inc
pop
push
lret
mov
scas
lods
sbb
xchg
jae
and
push
fstpl
adc
and
cmpsl
cli
loope
jp
testl
adc
mov
mov
aam
jns
scas
mov
sbb
les
cmp
mov
xor
jb
adc
mov
mov
out
mov
sub
mull
and
mov
add
xor
out
jns
jo
mov
sub
jl
cmp
add
mov
leave
xor
addl
sahf
outsb
lahf
sub
jae
in
hlt
out
sbb
cmp
outsl
rcrb
jae
je
neg
add
iret
mov
sub
divb
adc
push
sahf
pop
pop
negb
ret
ficompl
sbb
mov
ror
cmp
lcall
pop
fmulp
lods
cs
testb
dec
jl
fs
push
mov
mov
ret
in
call
outsb
loop
cs
xchg
inc
dec
push
mov
dec
jne
rcrb
xchg
shrl
pop
adc
xchg
xchg
in
mov
int
pop
outsb
mov
xlat
cmp
mov
out
imul
pop
movsb
fimull
je
daa
sarl
cmc
push
inc
rorl
arpl
mov
bound
jnp
sub
int3
lea
adc
add
into
sub
imul
sub
xor
add
rorb
in
adc
imul
cmpsb
sub
cmp
pop
xchg
ss
jbe
arpl
aas
jl
movsl
lret
cmpl
js
cmp
repz
xchg
pop
push
repz
mov
inc
push
dec
lcall
fidivs
aaa
loope
xchg
popa
es
xchg
arpl
in
mov
inc
pop
insb
mov
mov
push
adc
or
rorb
insb
mov
lods
cmp
inc
inc
inc
loopne
stos
sub
and
imul
lret
mov
sbb
leave
sbb
push
incl
dec
pop
xlat
lahf
sbbl
mov
pop
inc
mov
mov
jns
nop
jecxz
out
aas
rorb
dec
dec
fwait
scas
imul
inc
xchg
jecxz
dec
aas
test
mov
mov
cmp
xchg
add
mov
push
pop
nop
sahf
das
inc
jg
lock
lds
adc
ja
std
fldt
mov
pop
sub
mov
push
icebp
mov
mov
rcl
adc
shl
lahf
fwait
mov
cmpb
pop
dec
and
jge
pop
xchg
jb
pop
jl
rep
cmpsb
iret
js
lods
and
aam
jo
sbb
repnz
xor
xchg
pop
jp
cwtl
notl
cmp
inc
fld
fistps
lret
sbb
movsb
pop
test
mov
cmp
outsl
inc
das
in
loopne
clc
cmp
inc
inc
cltd
inc
xor
outsl
inc
dec
cs
dec
mov
sbb
and
sub
cmp
mov
lahf
pop
int3
fcoms
repnz
dec
add
insl
cmc
push
rcrl
push
js
int
out
pop
pop
leave
sarl
scas
pusha
testl
addr16
push
aad
nop
dec
shlb
mov
push
push
mov
mov
movsl
mov
cmp
cwtl
fwait
xlat
popf
in
int
lods
out
xchg
push
or
clc
loopne
lods
adc
in
mov
or
test
add
mov
and
jne
aaa
mov
dec
iret
fnsave
and
bound
push
jno
rep
in
gs
push
outsb
cmp
and
in
pop
ret
mov
movsb
fcomp
stos
cmp
mov
repz
inc
push
js
mov
push
jne
pop
adc
mov
add
mov
or
pop
fs
xor
adc
jl
popa
iret
lcall
fimull
data16
shr
mov
cmp
mov
fwait
movl
mov
cwtl
scas
mov
jb
fildll
dec
shll
adc
movsb
fucom
push
adc
or
mov
and
dec
std
sub
inc
sbb
inc
pop
test
push
insb
aad
cmp
sub
cld
outsb
aam
adc
mov
das
fidivl
es
insl
addr16
sbb
in
inc
mov
leave
sbb
mov
xchg
add
dec
jae
add
and
push
push
into
xchg
movsb
daa
fidivrs
sbb
fnstsw
loope
add
ljmp
int
ja
adc
add
test
pop
icebp
scas
cmp
mov
push
movsl
cli
das
arpl
divb
jae
mov
pop
leave
mov
fistps
mov
ljmp
cmp
rorl
mov
and
popa
aaa
or
aam
sub
aam
push
dec
adc
out
push
xor
xchg
mov
mov
or
pop
cs
cmp
lock
and
int3
cld
mov
xor
shrb
es
imul
mov
in
and
outsb
and
sarb
jp
bound
pop
jmp
sub
stos
push
loope
sbb
sbbb
or
lcall
sub
movsb
popa
addr16
mov
cmp
push
mov
adc
fiadds
cmp
mov
movsb
ja
mov
pushf
sub
enter
ret
dec
adc
jae
adc
jge
push
inc
add
mov
imul
rolb
jno
ja
mov
shll
sbb
scas
popf
mov
xor
outsl
pop
push
cmp
xor
rcl
insb
into
mov
sbb
inc
pop
dec
lahf
loopne
leave
in
or
inc
push
stos
mov
jmp
inc
test
out
in
jg
ret
cmpsl
out
mov
stos
xchg
or
dec
es
add
arpl
fld
lock
cmpsb
mov
out
out
mov
nop
push
lea
stc
gs
xor
mov
inc
jno
sub
test
in
push
lret
loopne
call
push
ja
push
and
daa
adc
inc
jo
xor
es
cmp
jns
or
int3
ret
mov
insl
and
push
popa
les
lods
push
stos
mov
mov
movsl
stos
push
xor
inc
cld
leave
test
jl
popa
mov
xor
fistpl
mov
lods
jns
xchg
aad
icebp
outsl
in
loop
cmc
pop
dec
aam
xchg
lcall
xchg
sbb
lds
pop
sbb
mov
or
sub
pusha
out
mov
out
mov
ss
push
dec
mov
lods
icebp
test
dec
fcompl
shl
fnstsw
test
inc
lahf
enter
cmpsl
imul
xchg
mov
test
jmp
lcall
loop
int3
insl
notb
dec
mov
std
ss
fdiv
cmp
sbb
pop
lods
adc
daa
and
dec
mov
mov
shlb
int3
into
push
jmp
cmp
sub
icebp
ds
cli
lods
outsb
js
sub
cmp
daa
mov
loopne
jle
cld
dec
push
push
push
mov
lret
call
xor
testb
dec
or
pusha
inc
inc
jg
add
hlt
mov
fsubs
in
mov
mov
mov
and
xchg
out
je
je
or
je
dec
ret
lcall
int
scas
push
movsb
sbb
mov
aad
imul
subl
pop
fcmovu
out
lret
mov
or
adc
jg
jno
jae
push
pusha
push
loope
popa
ds
jle
pop
fnstenv
cld
repnz
inc
aas
push
pop
icebp
adc
inc
mull
imul
push
inc
push
or
fadds
xchg
and
xchg
sub
add
push
and
stos
hlt
push
int3
jbe
xchg
mov
fidivrs
mov
inc
adc
pop
rorb
daa
or
fstpl
das
cmp
fcoml
mov
xchg
push
push
sub
pop
enter
enter
test
cld
xor
pop
ficomps
inc
popf
leave
add
push
mov
xchg
xlat
cmp
lea
mov
or
fistpl
adc
cld
mov
mov
adc
mov
cli
sbb
lods
popf
dec
dec
cmp
dec
call
fsubl
jns
sub
xchg
xor
imul
inc
dec
pop
in
pop
and
daa
inc
iret
pop
cmp
fimull
mov
sub
jp
faddl
dec
jmp
add
scas
dec
imul
sbb
repnz
inc
adc
int
push
and
ficomps
std
xor
jns
adc
sbb
or
pushf
std
mov
push
xchg
cmpsb
xorl
push
push
xor
jo
std
or
mov
loop
sub
or
decl
jae
xchg
mov
pop
in
daa
rorl
mov
cmp
add
sub
das
outsb
jne
push
cli
out
pop
mov
cli
xchg
repnz
mov
sub
lret
and
push
aas
sbb
mov
xchg
bound
sbb
or
popa
pushf
push
lret
dec
mov
cmp
fadds
out
jle
cmpsb
xchg
mov
pop
insl
lcall
push
nop
jp
movsl
jnp
cmpsl
cmpsl
xor
mov
shr
xor
mov
jmp
test
jno
dec
es
jl
fistpl
add
dec
mov
loopne
fstl
push
fisttpll
pop
add
ja
push
pop
cmp
add
lcall
mov
call
loope
hlt
test
adc
les
mov
mov
stos
push
stos
addb
popf
or
add
cli
inc
out
out
ret
mov
jnp
jbe
fdivs
fnstcw
jge
sbb
pop
push
out
gs
mov
test
xchg
adc
jns
dec
dec
jle
and
inc
pop
loopne
subl
scas
mov
ljmp
imul
xor
dec
adc
inc
xor
mov
dec
sub
cltd
jl
sub
int
lret
xor
pop
mov
mov
mov
and
xchg
ss
daa
add
mov
js
inc
mov
pusha
mov
xchg
add
jp
add
aas
jo
sbb
xrelease
jge
mov
sar
in
inc
push
movsl
adc
mov
mov
das
lret
mov
cmp
mov
mov
bound
nop
inc
cmpsb
inc
std
loopne
sub
lock
inc
iret
dec
cmpsb
out
mov
jns
xor
test
push
cmpb
mov
cld
pop
sub
cmpsl
push
xchg
sti
fistps
inc
xorl
push
in
push
mov
push
mov
int3
add
fdivl
and
fwait
mov
mov
jne
xchg
inc
mov
int
daa
xchg
dec
repz
daa
mov
cmp
mov
dec
inc
mov
inc
xchg
lods
xor
xchg
mov
dec
jmp
mov
aam
subb
inc
mov
ja
dec
jo
jo
imul
shlb
inc
or
hlt
andl
lock
push
leave
fs
inc
and
fucom
sub
sbb
pushf
push
sbbl
xlat
pop
test
sbb
mov
xchg
flds
push
push
leave
or
dec
inc
hlt
add
outsb
lcall
ljmp
dec
xor
sbb
xor
imul
je
ljmp
lds
adc
imulb
in
sahf
ret
pusha
add
imul
repnz
hlt
mov
push
inc
and
xchg
xchg
movsb
push
daa
dec
pusha
xlat
das
dec
jmp
xor
fs
push
jge
shrb
js
insb
sub
test
mov
hlt
push
mov
pcmpeqw
jnp
mov
xchg
testb
mov
nop
mov
push
das
sub
sub
jns
mov
add
das
xchg
sbb
adc
jb
pusha
mov
in
loopne
mov
std
jbe
push
lcall
ds
sbb
push
stos
push
sub
in
ret
in
cwtl
pop
inc
mov
push
sbb
xchg
scas
dec
add
xorl
ss
pop
jno
js
jle
xor
push
aaa
pushf
into
inc
es
xor
in
add
stos
pop
mov
imul
inc
lcall
aaa
cmp
pop
icebp
fildll
lcall
pop
sbb
loope
and
clc
mov
daa
stos
jecxz
dec
push
rcrb
xchg
xchg
pop
mov
mov
ret
lea
add
lcall
inc
inc
stos
dec
popf
mov
push
mov
jbe
add
sub
pop
enter
outsb
inc
pop
pop
pop
fcoms
adc
mov
aaa
mov
adc
out
push
adc
in
mov
loope
scas
mov
sbb
aaa
inc
jae
int3
xor
xlat
flds
stos
dec
mulb
xchg
cs
bound
gs
adc
cmpb
xlat
into
iret
ja
js
xor
sbb
imul
in
jbe
mov
xchg
div
push
fiadds
cmp
into
jmp
mov
xchg
mov
imul
xchg
loop
jnp
pop
inc
pop
push
pusha
les
xchg
mov
or
out
inc
lods
push
loopne
xchg
xchg
rcrl
mov
dec
or
inc
or
addr16
imull
pop
cwtl
shl
xchg
add
or
mov
mov
sahf
push
jo
les
les
pushl
repz
les
es
cld
xor
sbb
xor
popa
repnz
xchg
inc
mov
shrl
mov
sbb
or
jnp
cmpsl
inc
or
sbb
and
lahf
fdivrs
aam
add
daa
ds
movsl
cmpsb
pop
inc
lahf
mov
cmp
hlt
dec
jnp
das
xor
ficomps
add
in
inc
inc
push
add
in
cmp
mov
insl
mov
sub
jbe
in
inc
in
dec
pop
push
and
es
jb
fistpll
xchg
fcom
jmp
mov
cmp
popw
or
dec
push
shr
and
test
std
fldenv
dec
and
and
mov
mov
mov
es
flds
mov
std
out
out
sbb
pop
icebp
xchg
dec
lret
stc
cld
mov
cmp
or
or
push
adc
push
mov
xor
jp
jne
mov
setno
pop
in
inc
out
jge
inc
adc
jno
scas
loopne
pop
push
pop
loop
call
jecxz
pusha
pop
mov
outsb
xchg
sahf
mov
dec
and
jmp
add
aad
pop
repz
xor
push
or
push
jle
sbb
push
inc
std
rclb
push
mov
ss
jp
mov
xchg
cmc
xchg
jp
pop
push
and
ss
mov
in
insl
push
cmp
push
inc
dec
push
cmp
leave
mov
dec
fstl
mov
push
mov
nop
mov
test
das
dec
inc
inc
movsl
leave
sub
jne
push
push
or
repz
pusha
jle
push
add
stos
test
mov
cmp
mov
sub
xchg
pop
rcl
or
outsl
xor
insl
loope
movsl
and
mov
adc
cmpsb
pop
imul
dec
popf
xor
imul
push
stos
push
hlt
out
jmp
int3
mov
jae
cmp
ds
movsb
js
aaa
iret
test
enter
mov
test
es
jne
mov
ds
jbe
push
pushf
mov
xchg
test
test
or
dec
enter
dec
xchg
lret
pushl
testl
ljmp
sarl
rcrb
sbb
or
push
popf
lea
stos
lcall
dec
pop
xchg
mov
test
mov
jge
dec
adc
loopne
imul
xchg
cli
aam
out
mov
ja
cmpsl
lret
jp
or
sbb
adc
mov
mov
xlat
mov
and
ret
lret
xchg
call
movsb
mov
das
pop
fwait
and
in
dec
dec
orl
cmp
xchg
addr16
sbb
rorb
ret
jnp
fcompl
xchg
aaa
mov
cli
or
xchg
sbb
ret
xor
or
pop
jmp
lcall
or
sub
mov
clc
xchg
xor
xor
negb
mov
and
and
orb
hlt
add
push
insb
fdivrl
pop
mov
shl
loop
xor
pop
sbb
aaa
xlat
jp
add
mov
mov
sti
fiadds
arpl
and
iret
mov
xchg
inc
push
cmpsb
mov
pop
idivl
adc
dec
jo
jbe
pop
inc
sub
pop
push
insb
mov
xchg
push
mov
mov
and
iret
xchg
aam
cmp
xlat
jns
mov
and
sub
or
mov
lds
movsl
add
jecxz
lock
ja
ficoml
in
and
jp
popf
es
out
and
push
push
ret
leave
lea
cmp
mov
jns
pop
mov
sub
mov
cmpsl
cmp
sbb
jnp
add
in
sbb
cwtl
xchg
and
shl
jbe
xchg
fisttps
mov
pop
pop
and
or
jge
cmp
shrl
ss
addr16
pop
dec
movsl
jecxz
push
jnp
or
lahf
pop
and
pop
inc
popfw
pop
inc
cs
dec
cld
ds
xchg
inc
mov
sbb
imul
jb
sub
int
lret
xchg
mov
inc
push
jo
sbb
addr16
subl
add
mov
in
push
test
ja
mov
enter
frstor
fwait
jb
or
mov
das
popa
pop
dec
xor
sub
leave
or
mov
xchg
mov
outsb
and
loope
lahf
cmp
jo
sbb
mov
fldl
sub
sti
cmp
popf
jle
test
int3
lock
cwtl
dec
rcl
mov
idiv
pop
mov
dec
mov
adcl
jae
cmp
inc
loop
cmp
mov
cmp
mov
adc
es
xlat
jle
inc
and
je
shl
les
pop
subl
push
pusha
pop
cmc
rep
add
outsb
adc
inc
mov
and
gs
adc
cmpsb
in
fwait
or
mov
xor
mov
xchg
pushf
fldenv
dec
dec
dec
dec
dec
jl
out
jns
lods
cmp
scas
sub
jl
adc
jge
ja
rorb
xchg
sti
xchg
loope
clts
imul
or
inc
arpl
outsl
push
adc
rclb
sahf
jge
sbb
ljmp
mov
fisttpll
jp
in
lea
sahf
test
out
push
adc
jecxz
call
sub
bnd
lret
inc
test
mov
in
ss
test
loopne
xchg
lods
orb
xchg
sbb
mov
and
adc
lcall
jmp
pop
pop
xor
cmp
pop
pop
arpl
push
fnstsw
dec
add
clc
push
push
cmp
mov
loope
jb
fnstsw
lahf
repnz
jno
addr16
xor
xchg
fcoms
push
xchg
inc
xchg
inc
jnp
pop
jae
repz
pushf
das
out
test
mov
and
inc
fsubrs
sti
in
in
es
sbb
xchg
adc
mov
push
push
subl
dec
stos
jg
loopne
testl
imul
sub
enter
out
jge
mov
push
popa
incl
imul
clc
push
sub
jo
push
add
mov
mov
pop
or
cmp
lds
lds
xor
xchg
pusha
in
adc
add
lea
andl
movsl
push
dec
in
sub
js
clc
mov
std
jns
mov
ffree
and
sbb
outsl
inc
mov
mov
js
dec
fisubs
cmp
iret
test
mov
and
sbb
push
dec
movsl
mov
pop
call
xchg
outsb
loopne
mov
hlt
insb
fistpl
bound
add
sbb
jle
addr16
out
inc
pop
xor
pop
lcall
or
lahf
sub
push
jno
int3
loop
outsl
lcall
jno
jmp
mov
int3
clc
imul
inc
cltd
lret
sub
rol
xor
push
mov
in
dec
call
data16
xchg
call
pusha
xchg
stc
ds
frstor
std
fmuls
das
sub
ret
add
test
lret
or
add
or
cmp
mov
cmp
into
and
sub
xor
popa
push
sarl
sbb
mov
mov
scas
add
aad
mov
out
es
sbb
iret
mov
ds
fwait
inc
lahf
adc
sub
cli
cli
jnp
cmp
cmpsb
int3
adc
jae
imul
push
mov
xor
sahf
inc
sbb
lods
mov
and
mov
cli
jnp
divb
movsb
es
xor
fidivrs
fistl
add
xorl
cmovbe
insb
into
and
fcoml
cmp
sbb
cmp
xchg
pop
jae
adcb
mov
pop
daa
pop
add
jae
addb
mov
arpl
dec
inc
inc
push
and
sub
push
gs
ss
sub
je
call
jbe
inc
push
xor
cwtl
xchg
ljmp
cld
and
loope
sti
jmp
mov
cld
movsl
fchs
xchg
add
mov
cs
and
push
xchg
jb
sub
je
cmp
xor
out
vpsubusw
pop
dec
jne
out
test
cmpsl
xor
sub
ret
pop
and
rclb
mov
jbe
jmp
cmp
jbe
test
rcl
xor
mov
icebp
rol
inc
in
push
daa
fcoml
xor
scas
mov
cmpsl
bound
call
sub
ds
cmp
fildl
mov
int3
fidivl
mov
mov
gs
ja
out
icebp
dec
js
sbb
mov
popf
dec
inc
and
jnp
mov
sub
repnz
push
call
jmp
mov
mov
in
test
jp
xchg
in
inc
insl
sub
inc
mov
push
insb
nop
rol
push
adcl
sarl
sbb
mov
xor
arpl
xchg
sbb
nop
stos
adc
stos
gs
xchg
inc
test
outsb
mov
inc
ds
lret
shll
mov
das
mov
fstl
cmp
push
inc
mov
lret
sub
sbb
push
aaa
mov
lahf
adc
movsb
int3
and
adc
pand
das
stos
test
jb
rcrb
sub
xchg
push
sub
cltd
jae
add
movsb
repz
add
push
out
pop
lea
fucomi
mul
mov
inc
jnp
or
sub
lcallw
xchg
sub
pop
scas
inc
xchg
inc
mov
into
push
xchg
imul
stc
pop
push
sbb
jg
out
arpl
test
cmpsl
mov
cld
test
fstps
pop
xorl
sbb
jle
push
mov
shrl
test
jbe
mov
adc
xchg
cmp
xor
push
add
je
out
or
clc
jo
push
int3
mov
inc
sbb
hlt
shll
lea
fdivs
stos
mov
bound
notl
push
xchg
shrl
jge
popf
stos
out
sti
push
rcrb
pushf
mov
scas
dec
push
cld
outsb
mov
add
das
test
test
pop
mov
mov
sub
icebp
and
jecxz
adc
sbb
mov
imull
loopne
fidivrl
mov
ret
mov
mov
adc
mov
outsl
mov
lock
lcall
adc
fldt
mov
adc
stos
adc
ret
push
ret
pop
or
and
roll
and
enter
or
push
lahf
or
sub
sub
lods
mov
dec
add
push
popa
out
inc
pop
sub
inc
xor
pushf
cmp
mov
subl
sarb
and
dec
jnp
cli
push
sbb
lahf
push
jnp
pop
jg
clc
test
stos
and
push
notl
xor
dec
dec
cmp
pop
sbb
popa
movsl
add
fisttpll
leave
jg
lods
out
pusha
nop
or
xchg
mov
mov
xchg
sbb
daa
pop
cmp
inc
or
xchg
cmp
push
dec
outsb
test
sbb
push
lea
ljmp
outsb
adc
mov
push
shlb
bound
jae
mov
bound
lea
xchg
push
aaa
js
jns
loope
cmp
push
fdivrl
loopne
mov
mov
cmp
cmovge
cli
fnsave
mov
pusha
sub
pushl
scas
adc
fildll
pushf
adc
cmp
ja
sbb
jb
mov
mov
inc
jae
sbb
addr16
daa
pop
das
jg
jecxz
rep
stos
test
sbb
imul
decb
push
sub
lods
mul
pop
sub
popf
add
xlat
dec
sbb
pushf
xor
daa
lret
push
and
jmp
ja,pt
cwtl
stos
xchg
test
or
cmpsl
jl
cmc
pop
rcll
xlat
pop
pop
sub
stos
aad
mov
cwtl
in
pop
in
sbb
sub
cmp
ja
xchg
js
mov
sbb
arpl
adc
mov
jne
xchg
aaa
push
and
shr
repnz
stc
adc
dec
mov
es
dec
and
push
js
push
aas
cmp
cmp
xchg
icebp
fcoml
push
shll
dec
loop
mov
ljmp
push
lock
inc
and
mov
mov
add
adc
mov
sti
mov
xchg
pop
dec
or
sti
sub
loop
ret
mov
pmullw
sbb
addr16
andb
insl
jge
jae
fwait
push
jl
mov
fidivrl
and
cld
out
xchg
add
mov
push
xor
addr16
jp
push
ljmp
sbb
xchg
mov
fs
bound
or
xchg
dec
pushf
adc
push
mov
xor
xchg
jbe
popf
cwtl
push
mov
fwait
jmp
inc
mov
xor
pop
fildll
xchg
sub
loopne
inc
imulb
test
push
mov
xor
jl
jne
adc
lret
sub
loopne
inc
imul
adc
lods
mov
les
fwait
xchg
xor
xor
add
jg
add
in
mov
push
mov
mov
pop
sbb
pushf
rorb
add
negl
dec
cmp
pushf
movsb
push
dec
aad
jae
push
inc
push
xlat
and
daa
pop
fsubrs
xchg
mov
clc
je
inc
and
mov
cmpb
fmuls
js
push
mov
sbbb
test
ret
and
ljmp
add
popf
fldcw
inc
mov
and
or
dec
stos
adc
pop
test
xor
jle
out
jnp
call
arpl
cmp
dec
aam
cmp
pop
mov
mov
pop
imul
testl
in
mov
mov
push
lds
sub
or
cmp
or
jnp
int3
pushf
xor
aas
mov
pop
xchg
dec
cmpsb
jge
mov
xor
inc
scas
int3
fistl
das
jns
dec
xchg
fwait
sub
xchg
sbb
cmpsl
lods
sub
pushf
dec
scas
and
mov
imul
adc
xor
imul
ret
mov
inc
dec
jns
xor
mov
mov
clc
push
pop
out
ret
addr16
test
mov
lds
icebp
fbstp
dec
add
push
stc
test
dec
data16
sbb
arpl
mov
shlb
scas
sbb
add
fidivl
dec
into
pop
inc
fbstp
dec
in
xchg
out
shll
pop
ss
push
mov
divl
inc
mov
cltd
xchg
jnp
je
fwait
js
je
mov
sbbl
adc
lods
adc
mov
push
outsl
out
dec
jecxz
rclb
dec
mov
lods
xor
imul
mov
lret
inc
dec
pop
jno
push
jle
push
mov
out
test
push
ret
xor
pop
lods
xor
mov
dec
and
fmul
xchg
cmc
cmp
xchg
sub
std
sub
cmc
add
pop
loopne
and
ret
pusha
add
sub
jmp
cmp
jns
adc
sub
xlat
mov
xor
call
pop
cmpsl
lcall
or
les
mov
call
inc
jno
push
test
pop
fsubp
xor
push
and
inc
movsl
mov
add
scas
ret
adc
cltd
cmpsl
mov
cwtl
or
mov
push
jae
out
sbb
jle
inc
jo
iret
in
pop
in
add
out
sub
sbb
icebp
rclb
flds
insb
inc
mov
adc
sbb
out
out
sarb
imulb
dec
jp
adc
inc
jmp
or
mov
push
fwait
cmpsb
sub
out
es
aam
dec
cld
enter
call
sub
push
push
and
xchg
das
xorl
mov
out
pop
ret
jmp
inc
push
mov
lret
scas
addr16
adc
mov
push
xor
add
rolb
out
mov
movsb
cmp
add
sub
sub
aad
and
outsb
movsl
lcall
call
pop
fsubl
xor
cmp
add
loopne
das
mov
sbb
xchg
test
jmp
adc
ret
mov
jp
xchg
lods
js
mov
or
xlat
stc
inc
jp
and
and
fsub
pushf
repz
mov
adc
push
xor
lea
add
pop
push
cmp
sub
addr16
mov
mov
pop
jnp,pt
stc
mov
cmp
les
mov
fnstcw
lcall
imul
add
in
sti
ss
jb
sub
loope
and
test
cli
push
sub
leave
cs
clc
iret
sbb
mov
ret
inc
ss
dec
ja
leave
lds
ret
ret
push
mov
and
sub
pop
imull
add
repnz
xor
cltd
add
inc
dec
mov
mov
xchg
jecxz
mov
sub
mov
mov
sub
dec
clc
sub
push
push
sub
insb
repnz
ljmp
out
popa
outsl
cli
lcall
out
adc
je
and
or
mov
movsl
insl
dec
stos
das
test
leave
dec
enter
jge
fcom
ret
and
popf
and
fcoms
jae
cmp
lcall
in
mov
and
inc
test
jg
in
sub
lea
test
add
mov
xchg
jmp
inc
push
jge
dec
mov
imul
inc
in
jno
jns
xor
je
ss
loopne
mov
dec
sub
cs
sbb
mov
pop
pop
scas
stc
pusha
add
push
lcall
ret
xchg
mov
xor
pop
mov
mov
loopne
inc
mov
out
lahf
out
xchg
int
cmp
xchg
push
lret
mov
imul
mov
rorl
pop
add
lahf
mov
idivb
push
in
ds
pop
in
ds
ret
fdivrl
test
hlt
pop
jg
test
mov
dec
mov
inc
sbb
cmpsl
push
test
and
push
movsl
dec
pop
push
nop
bound
mov
es
stos
sub
xchg
pop
dec
aam
fidivs
jl
stos
sbb
xchg
pop
ss
dec
pop
popa
mov
stos
ss
in
xor
xchg
mov
mov
bound
fdivrl
jmp
stos
hlt
sbb
in
inc
lahf
push
mov
lods
scas
jns
data16
jb
mov
xchg
cmp
pop
test
cli
and
mov
fcomp
mov
sub
mov
ror
adc
push
loop
or
popa
inc
push
or
push
jle
pop
pop
mov
sub
mov
and
in
jecxz
mov
arpl
aad
push
mov
stc
cmpsl
ja
mov
cmp
scas
adc
pusha
arpl
sti
popf
mov
stos
mov
in
ss
xor
jo
xchg
sbb
flds
jp
test
popf
jo
push
pop
shld
test
test
lds
mov
fistps
pop
decb
add
loopne
frstor
cmpsl
adc
pop
xor
repnz
jmp
aam
xchg
out
lds
lods
negb
ljmp
cmp
imul
les
mov
movsb
jmp
dec
rorl
out
popa
sbb
jne
sbb
sub
sbb
imul
xchg
lcall
jge
and
sahf
lret
frstor
ds
pop
in
nop
dec
inc
mov
pop
jge
and
fiadds
movsl
sar
fcomp
pop
std
cmc
jb
inc
lds
and
subb
xchg
addb
fyl2x
pop
xchg
inc
movsb
outsb
fwait
dec
jle
leave
movsb
pop
sub
dec
dec
jne
mov
shr
scas
jns
jae
mov
dec
out
fwait
push
cltd
cli
push
push
push
fidivs
repz
sahf
mov
fisubs
push
inc
cwtl
jne
fistpl
sahf
push
cwtl
fmul
push
int3
push
sahf
jl
ss
aad
jo
je
js
jo
lcall
pop
ret
push
fdivs
mov
call
mov
mov
pop
movq
cld
repnz
mov
out
xchg
pop
mov
jno
jl
shl
xorl
xchg
inc
jb
add
ret
in
cmp
jp
shlb
adc
lea
xlat
fstps
sub
cmpsl
outsw
add
sahf
mov
js
dec
stos
inc
mov
rcl
nop
inc
pop
repz
bswap
sarl
lret
push
xchg
inc
cltd
lods
fcomi
and
rol
cltd
fwait
jnp
lds
loop
add
jl
jnp
mov
stos
jb
clc
sub
gs
testb
sbb
jbe
push
mov
xor
out
add
and
in
dec
fsubrl
mov
cmp
test
pop
testb
ror
stos
xchg
xor
xchg
jecxz
rcll
push
test
and
dec
fldl
aas
stos
inc
xor
fsubr
pop
dec
in
xchg
stos
cmc
or
pop
push
fimull
adc
pusha
adc
xchg
push
fildll
push
mov
mov
pop
adc
pop
cmp
imul
push
inc
pop
cmp
js
or
mov
mov
xor
ds
mov
sub
xor
push
sub
imul
ret
insl
sbb
sub
es
stc
adc
xchg
lds
dec
bound
popf
add
pop
xchg
nop
inc
das
rol
cmp
rcl
test
mov
stos
push
and
mov
sbb
sbb
ss
out
xchg
cmp
stos
jbe
scas
loopne
push
icebp
xlat
in
adc
pop
lods
shll
sub
ss
and
dec
dec
test
push
sub
test
or
outsb
adc
aad
sbb
sbbl
xchg
jno
ljmp
mov
jl
mov
dec
cmp
jno
xor
std
push
ja
mov
mov
mov
test
mov
adc
inc
ja
repnz
iret
and
dec
loop
lret
push
and
out
outsl
cmpsl
jo
nop
mov
mov
mov
dec
mov
popf
mov
xor
pop
shlb
into
fwait
jle
mov
push
ret
push
sbbl
xchg
shlb
jle
sub
fnstsw
mov
mov
cwtl
mov
clc
inc
ja
in
lods
sub
push
xor
roll
jnp
sbb
xchg
outsl
push
sbb
les
stos
addr16
inc
sar
insb
das
adc
cld
enter
mov
sbb
jmp
popa
popw
pop
mov
stos
mov
xor
insl
test
jno
lods
xor
into
mov
push
adc
les
out
arpl
ds
push
ds
push
mov
xchg
fst
js
and
loopne
lret
push
dec
aad
mov
mov
push
test
push
lock
nop
mov
test
or
pop
mov
stos
rcrb
mov
out
xlat
and
mov
xor
dec
pop
push
mov
cwtl
loope
mov
or
jecxz
test
insl
sti
insl
pop
and
test
adc
jbe
mov
sub
dec
nop
andb
mov
inc
mov
pop
test
ja
cmc
jnp
insb
inc
mov
dec
inc
insl
xor
push
add
es
push
lahf
sub
ja
xchg
shrl
mov
fstpt
adc
mov
andl
out
int3
andb
or
adc
repz
shrb
xchg
test
push
xchg
mov
inc
pop
in
push
mov
insl
xor
sbb
aam
lods
cwtl
mov
mov
popf
das
sti
test
xor
push
sbb
pop
aad
and
sbb
jne
je
xor
mov
sahf
mov
adc
mov
movsb
jmp
cmc
imul
mov
pop
fnsave
inc
xor
xor
in
add
mov
add
aad
and
inc
pavgw
sbb
popf
popa
sbb
pop
into
lods
bound
adc
adc
outsl
mov
push
push
sbb
insb
faddl
cld
mov
push
roll
lods
in
lea
xchg
cs
mov
mov
imul
aam
jbe
jne
in
jmp
and
test
out
scas
adc
in
flds
mov
lods
xchg
cmc
sbb
jb
rcr
dec
fwait
dec
push
shrb
ret
cmp
orb
xlat
imul
jge
xlat
fs
pop
mov
mov
xchg
loopne
int
pop
aam
or
fdivl
pop
cmpsl
xchg
mov
pop
push
jne
scas
jg
cmp
push
repz
dec
sub
test
cmpsl
mov
pop
repz
pop
ja
mov
pop
icebp
in
stc
inc
mov
pop
hlt
stc
ror
push
pop
test
xor
insb
adc
inc
lock
dec
repnz
sti
fmuls
ja
mov
sti
int
xchg
jne
or
inc
shlb
mov
or
jp
lret
into
xchg
push
pop
jae
lods
inc
pop
push
cmp
and
xor
adc
ret
adc
stos
outsl
xor
fistps
xchg
popf
jp
out
push
movb
aas
jae
jle
pop
sub
cmpsb
mov
sbb
mov
push
jge
sbb
and
push
cmp
popa
inc
fistpl
test
fnstcw
pop
push
fisubs
bound
out
test
fistpl
mov
out
pusha
and
test
mov
dec
shlb
mov
mov
loope
mov
pop
pop
lea
cmp
scas
icebp
pop
andb
xchg
dec
sahf
std
or
mov
push
mov
sti
outsl
or
movl
repz
jbe
adc
jb
imul
in
jns
call
pop
mov
js
jbe,pt
cmp
cmpl
cwtl
arpl
cvtps2pi
hlt
push
shl
into
int
ret
int
jb
mov
pop
ljmp
loopne
jbe
andb
adc
pop
xor
dec
out
ficoml
push
int
mov
pop
pop
out
mov
or
fcmovnbe
pop
jo
jl
xor
jp
mov
pop
push
repnz
mov
popa
ret
movsl
jnp
in
jnp
and
jl
jmp
movsl
add
std
dec
loope
sbb
push
inc
inc
scas
mov
mov
push
and
mov
rcll
and
mov
fwait
and
mov
call
sbb
roll
xchg
push
xchg
popf
mov
ret
cmp
fwait
popaw
leave
xchg
lods
fnstcw
dec
xchg
mov
push
or
fnstsw
mov
fstl
pop
push
jge
out
filds
mov
mov
jnp
push
xchg
ficomps
mov
out
mov
mov
mov
inc
cwtl
sbb
or
jle
and
jns
out
mov
add
sbb
cmp
outsb
mov
xchg
popf
xchg
push
pushf
fmuls
fcmovbe
cli
scas
loope
les
push
dec
lock
or
push
adc
popa
dec
sub
xor
shl
mov
ret
in
shll
add
shrl
pop
mov
mov
push
mov
in
xchg
cmc
sub
jns
jb
mov
push
mov
mov
gs
in
cmp
in
daa
rorl
or
mov
add
cmovno
call
lret
and
out
mov
test
fcoms
std
rorb
insb
push
gs
dec
jae
sub
out
cmp
subb
pop
out
popf
and
or
into
xor
mov
scas
jecxz
mov
cs
inc
mov
cmp
out
jg
cmp
mov
sarl
pop
and
sub
das
in
mov
ja
mov
push
push
aad
mov
shll
mov
pop
ret
push
dec
stos
hlt
stos
loopne
lods
xor
mov
sbbl
shlb
xorl
cmp
cltd
f2xm1
lods
xchg
in
sub
mov
push
xchg
fldenv
hlt
cmp
jmp
iret
in
lcall
mov
push
push
test
jp
or
cli
orl
jns
jae
aad
dec
mov
nop
lret
data16
mov
jg
test
sti
jo
push
test
push
jge
jle
mov
and
out
lahf
cmpsl
out
xor
les
dec
das
cwtl
lret
jne
lret
xor
cmp
das
adc
outsl
dec
aam
cltd
je
mov
roll
xor
in
push
adc
sahf
cmp
cmpb
sub
sbb
jecxz
js
shl
aas
daa
xor
lock
xor
dec
lds
xor
add
and
push
in
sarl
rcl
mov
cmp
xor
push
pop
push
test
fstpl
add
pushf
mov
test
lods
mov
mov
push
inc
int3
jno
adc
mov
xchg
outsl
xchg
stos
xchg
and
mov
in
fbstp
xchg
push
stos
push
jb
outsl
xor
push
ljmp
inc
rcll
adc
or
pop
mov
inc
lret
add
inc
or
lcall
cmpsl
std
sub
push
fistpl
les
into
loop
pop
mul
into
ss
fcomi
jne
mov
mov
push
add
flds
fs
adc
int3
mov
call
adc
inc
jnp
fcmovne
jae
sbb
cmpsl
inc
cmp
xor
sbb
add
leave
pop
or
popf
pushf
pop
in
and
mov
ds
xchg
lods
mov
cmp
jmp
cmp
xor
sbb
js
jmp
mov
mov
das
jecxz
xor
or
dec
sub
fldl
jp
test
cmp
lea
cmp
cld
aad
int3
adc
repnz
test
mov
jmp
fimull
dec
xor
repz
push
jno
aas
pusha
cltd
rclb
mov
jle
xor
xor
jb
repnz
pop
pop
jnp
xchg
in
pop
lea
add
dec
xchg
sbb
in
lods
sbb
insl
pop
dec
ds
mov
jne
out
cmp
aas
push
pop
repz
scas
hlt
sub
or
jecxz
out
and
or
aaa
lret
inc
mov
mov
jbe
sahf
push
fisubs
or
in
ficoml
push
xorb
xor
je
sub
call
stos
int
push
sti
mov
iret
test
imul
icebp
dec
dec
mov
or
xchg
add
fildl
out
xchg
dec
jbe
stc
xor
mov
lcall
mov
xor
pop
sub
movsb
push
scas
lock
iret
out
loope
sarb
seta
fs
imul
xchg
add
mov
add
dec
add
mov
rcrb
jg
lcall
out
jne
push
enter
addr16
push
loopne
repnz
sub
testb
and
lock
mov
repz
push
adc
daa
xor
sub
mov
out
add
xchg
fildll
inc
and
xchg
sti
loop
rclb
ds
divb
jb
ljmp
push
push
movsb
push
sbb
stos
lea
push
add
vminps
jbe
popa
arpl
adc
xor
inc
das
pop
sahf
repz
or
lods
stc
jmp
adc
push
std
pop
mov
sbb
out
sub
xorl
and
in
mov
cmp
cmpsb
loope
fs
test
push
cmpsb
stc
or
adc
rcrb
jo
adc
mov
cmp
fldt
cld
jo
xor
mov
sbb
movntps
dec
pop
xor
fwait
imul
outsb
cmp
mov
pushf
jae
jmp
shl
sahf
int3
or
xchg
stos
sub
sub
inc
fildl
xchg
dec
out
das
jge
push
outsb
lret
xchg
idivl
pushf
and
mov
jle
or
xchg
ja
aad
aam
fwait
sub
xchg
pop
pop
aam
arpl
push
vcmptrue_usps
or
or
mov
cmc
mov
mov
out
dec
scas
sbb
push
repz
xor
sub
outsb
sub
roll
push
jno
cwtl
pusha
push
mov
in
dec
cmp
cwtl
push
cltd
nop
mov
int3
sbb
mov
out
jb
xchg
into
cli
xor
and
inc
and
ret
mov
sbb
sub
imul
fdivrl
cli
cltd
int
mov
out
jae
xchg
adc
pmullw
ss
mov
cmp
popa
cltd
xlat
sbb
jg
out
cmp
roll
fwait
ret
shll
push
nop
iret
sub
mov
xchg
push
jb
or
stos
mov
mov
hlt
mov
dec
insl
jb
das
lock
mov
and
jne
mov
das
push
pop
adc
cmp
out
aaa
add
push
adcl
cltd
and
nop
bound
sbb
mull
fidivrl
pusha
sbb
mov
jg
push
loope
jmp
add
xor
sbb
xchg
fistpll
pop
cmpsb
push
sub
gs
push
ljmp
sbb
lar
fimull
fmulp
jg
pushl
dec
cmp
lods
sub
int
ret
xor
mov
int3
out
and
fwait
ss
ficomps
loopne
ret
out
or
nop
sbb
stc
adc
leave
enter
shrb
or
pop
mov
cli
jmp
inc
mov
pop
or
int
push
dec
cmc
pop
mov
mov
cmp
xchg
ret
mov
jbe
xchg
outsb
inc
push
in
xchg
and
jns
movsb
js
mov
and
daa
fs
dec
leave
aam
fistps
fimuls
push
in
lret
lahf
push
lahf
sbb
add
scas
insb
dec
aam
push
inc
xchg
and
jae
sbb
ljmp
test
aad
aam
mov
shll
mov
mov
or
out
adc
leave
cmpl
cmpsl
mov
clc
sub
inc
les
les
jecxz
mov
mul
cmp
jne
lahf
dec
imul
jmp
cmp
adc
fistpl
aaa
and
movl
lods
fs
push
sahf
aas
push
dec
daa
mov
mov
jg
ja
cmp
mull
shll
adc
xor
lods
shll
pop
scas
add
xor
cltd
adc
inc
push
mov
ret
into
pop
push
int
push
aas
stos
or
xchg
or
push
mov
dec
out
xchg
add
push
push
pop
sti
mov
cmpsb
cltd
imul
mov
imul
adc
xchg
push
leave
lods
sub
jne
add
lods
int
shlb
jno
push
test
dec
push
lahf
ret
xchg
adc
out
pusha
test
push
cs
mov
dec
mov
push
mov
fucomi
mov
cmp
or
out
test
and
xchg
inc
pop
pop
push
dec
into
int3
pop
cmpl
js
fmull
lcall
add
sub
jmp
loope
pop
divb
inc
inc
les
mov
sbb
icebp
jge
pop
mov
fsub
test
mov
out
call
mov
jp
push
fwait
pop
stos
test
int3
xor
inc
cmpb
movsb
into
stos
aaa
insl
sbb
data16
add
sahf
push
xor
gs
mov
inc
outsl
rorb
push
push
cmc
loopne
push
lea
add
sbb
int
and
cmpsb
aas
jl
jae
xchg
inc
pop
inc
pushf
aaa
pop
fwait
xor
jg
jge
daa
adc
lods
push
mov
iret
js
mov
or
movsl
cmpsl
test
push
sbb
movsl
dec
mov
dec
shll
pushf
shrb
push
mov
pop
cmp
adc
int
mov
xchg
xchg
pushf
xchg
mov
dec
jae
xor
idivl
out
add
inc
daa
sbb
push
push
push
or
xchg
lahf
jmp
push
sahf
add
dec
cmp
sub
scas
sbbb
jl
xchg
arpl
pop
out
push
push
out
push
std
stos
and
and
mov
xchg
gs
mov
lret
add
aam
dec
test
jne
sbbl
adc
lahf
xchg
leave
inc
jae
inc
jb
aaa
loope
mov
and
jge
jnp
xchg
lret
pop
and
dec
or
scas
sub
stc
xlat
jg
popa
out
flds
xor
rcll
push
and
or
push
adc
out
mov
jecxz
pop
out
mov
adc
fdivl
bound
ds
xchg
push
movd
mov
xor
mov
xlat
pop
mov
pop
jnp
xchg
lock
xchg
jg
xchg
jae
push
xchg
adc
negl
cmp
into
push
cmp
pop
subl
inc
dec
leave
daa
mov
out
mov
and
pop
dec
xchg
cmp
xor
cmp
shrb
dec
cli
fmull
mov
out
mov
add
cmp
jle
mov
lret
cmp
sbb
out
loop
stos
je
cmp
and
ret
inc
lods
incl
mov
hlt
mov
out
mov
sub
js
in
lods
jb
pusha
mov
les
cmpsb
pop
push
pop
mov
pop
or
add
sahf
sbb
dec
cmp
push
dec
test
ja
push
xchg
xchg
movsb
push
shrl
cmp
shll
addl
mov
sub
lea
aam
ret
jle
dec
adc
mov
jge
xchg
out
mov
mov
cli
push
rcll
decb
push
xchg
pop
dec
pop
sbb
lcall
add
lret
les
push
je
bound
gs
lods
hlt
pushf
and
ds
dec
nop
repnz
and
jae
into
stos
fildll
arpl
jecxz
inc
bound
scas
pop
insb
sub
jne
roll
arpl
fwait
xchg
xor
pop
lcall
xchg
fidivs
cmp
fcoms
pop
inc
pop
int
pop
movsb
jle
pop
ss
jo
dec
add
adc
adc
pushf
and
inc
cmp
in
xlat
outsb
jbe
inc
xor
dec
jno
mov
or
fisubs
jno
jmp
dec
mov
rorb
sbb
hlt
push
into
pop
or
fnstenv
enter
push
popa
les
mov
pop
out
insw
pushf
xchg
add
filds
mov
mov
dec
jo
mov
mov
mov
js
nop
enter
mov
leave
pop
xchg
jge
sub
vcvtps2pd
xchg
ja
cmp
pop
cs
add
aas
nop
fidivs
cmp
dec
jae
jmp
adc
sahf
scas
movsl
pop
add
test
scas
mov
imul
shll
sbb
or
xchg
pop
xchg
mov
adc
pop
xchg
fdivrl
lcall
adc
int
adcb
cs
sub
testb
xchg
xlat
in
aas
lret
ret
lret
insb
test
ret
cmp
sbb
cmp
xor
imul
aaa
mov
test
cmpsl
cmpps
mov
stos
rorl
cld
add
mov
cmpsl
aad
sar
std
std
jno
dec
add
add
or
pop
and
jnp
ds
stc
push
pop
mov
test
iret
stos
inc
add
push
mov
mov
adc
or
mov
test
and
lds
adc
and
xor
xchg
add
cmp
adc
mov
mov
sub
loop
push
pop
ficoms
in
in
cli
pop
jmp
dec
sub
dec
dec
pop
stos
sbb
aad
pop
jbe
adc
pop
sub
and
call
mov
xchg
and
sub
add
push
mov
push
or
inc
mov
and
mov
jnp
inc
xchg
mov
add
ljmp
or
icebp
sarl
lcall
cmp
pushl
adc
mov
mov
sbb
out
data16
jb
popf
jmp
push
rcll
cmp
test
jmp
mov
pcmpgtw
call
outsl
xchg
dec
add
jl
fwait
dec
in
inc
xchg
lods
inc
dec
shlb
cmp
cmpsb
je
sub
call
push
sti
cmp
inc
adc
jle
fcomps
test
das
pop
jne
shrl
mov
call
outsb
ss
imul
mov
addb
sahf
or
mov
jno
dec
pop
add
fbld
push
adc
and
adc
jecxz
decb
sbb
mov
into
jno
loopne
or
popa
or
mov
or
dec
repz
sbb
push
imul
outsb
jae
mov
in
lcall
fnstsw
stos
sub
xchg
cmp
push
dec
jno
enter
fwait
adc
sbb
xchg
mov
pop
sub
icebp
xchg
andb
and
ds
lret
mov
push
sbb
sar
add
dec
push
bnd
jne
cmp
aam
aad
xchg
jecxz
sbb
lods
push
or
aam
mov
jbe
insl
cmpl
mov
inc
pop
es
aaa
adc
sahf
cmp
test
jnp
jmp
push
xor
jbe
mov
loopne
adc
dec
dec
xchg
and
xchg
pminsw
pop
aaa
mov
das
mov
mov
imul
insb
mov
mov
jne
pop
gs
add
push
cltd
cmp
pop
call
in
cwtl
call
iret
sahf
cmp
and
ret
mov
jnp
fdivr
pop
cld
in
cltd
xor
aas
and
and
mov
push
dec
sub
rol
pop
mov
jbe
ret
add
lahf
hlt
ds
adc
ficoml
outsb
scas
cmp
sub
push
sbb
pushf
imul
aam
and
xor
mov
in
movsb
dec
cmp
lods
inc
mov
pop
leave
inc
aad
or
sbb
cmpsl
mov
popf
cli
lcall
mov
adc
mov
jae
pop
xchg
cmp
ja
sahf
jns
cmp
fwait
lock
or
or
xor
jl
loopne
mov
inc
push
rorb
test
and
lea
mov
ret
push
xchg
daa
in
mull
je
in
bound
leave
fcmovbe
lea
adc
mov
and
jmp
fistl
sahf
xchg
sti
pop
add
xor
push
mov
mov
ret
cmp
into
and
test
cmp
mov
pop
or
scas
stc
cmpsb
int3
pop
shrb
aad
lods
mov
inc
cmc
push
lcall
inc
jecxz
pop
rclb
iret
loope
insl
jnp
pushw
cmp
fxch
push
cmc
xchg
xor
daa
in
loope
dec
xchg
arpl
in
lret
push
sub
mov
fmuls
sbb
push
sbb
jge
ficompl
test
xchg
aaa
xor
mov
ljmp
inc
into
test
or
jae
mov
mov
mov
jns
adc
mov
xchg
aam
aaa
rcll
xchg
call
leave
xor
cli
cmp
lds
dec
mov
lahf
arpl
xlat
ds
cmpsb
lods
xchg
out
bnd
enter
stos
and
lahf
addl
or
movsb
push
ja
push
inc
out
aas
addl
push
out
dec
lea
dec
add
jg
iret
rcrl
mov
aaa
ret
add
sbb
push
shl
mov
mov
and
rclb
addr16
xchg
ljmp
mov
sbb
jg
cmpl
and
in
and
data16
sbb
lcall
push
push
xchg
orb
jnp
scas
xlat
adc
xchg
xor
sbb
mov
push
arpl
push
add
add
mov
divb
push
loopne
shlb
lahf
fucomip
stos
popf
rorb
xchg
lea
or
sub
pushf
push
jl
mov
in
mov
xchg
lcall
scas
inc
push
adc
test
dec
adc
push
repnz
push
mov
push
mov
xor
insb
sub
jmp
movsb
loop
push
jmp
js
and
inc
push
je
stc
scas
ja
sub
jne
ds
arpl
movl
mov
xchg
movsb
movsb
jno
push
aas
movsl
dec
int3
ret
or
loop
jmp
fmul
dec
push
scas
les
andl
mov
outsb
mov
jmp
mov
mov
stos
or
mov
lds
mov
cli
push
cmpb
adc
mov
dec
fistl
pop
dec
mov
jmp
dec
shl
jp
pop
jp
and
cli
jmp
push
cmp
sbb
adc
and
jmp
and
mov
mov
inc
mov
sti
stos
in
scas
fsubrp
popf
outsl
cs
dec
pop
sbb
mov
sbb
inc
cli
jg
daa
or
shll
lods
push
mov
sbb
or
jmp
xlat
aas
stos
imul
loope
mov
in
sahf
push
jne
fimuls
into
xchg
sub
test
pop
mov
pop
jg
stos
stos
push
addr16
pop
ljmp
sbb
nop
xor
dec
sub
xchg
cmp
gs
lahf
dec
mov
js
sbb
mov
testb
jmp
inc
push
das
lahf
icebp
int3
inc
pop
lock
mov
xchg
punpcklwd
ds
xor
ljmp
mov
cmpl
les
movsl
stos
dec
dec
xchg
mov
add
lods
jo
mov
pop
sbb
mov
hlt
int
insl
int
inc
jno
outsb
pop
sti
xor
xor
and
clc
stos
in
fdivl
mov
daa
jl
mov
lret
inc
jo
mov
pop
or
ret
cli
adc
mov
fidivs
pop
outsl
negb
dec
hlt
sub
call
or
out
sbb
and
into
mov
roll
dec
data16
lret
pop
mov
mov
cs
and
hlt
xor
sub
jb
cmp
iret
mov
xchg
stos
stc
inc
xlat
push
scas
pop
and
cmpsl
cmp
sub
pusha
rol
jle
pop
test
mov
mov
lret
scas
sbbl
dec
inc
fwait
dec
mov
mov
mov
cmp
inc
lea
add
xchg
mov
xor
pop
cmp
mov
add
repz
insl
mov
jns
arpl
pop
mov
stos
clc
pop
icebp
ljmp
pop
sahf
push
ret
rolb
shl
push
inc
outsl
mov
and
out
scas
adc
inc
rol
and
lods
pushf
sub
and
fidivrl
add
loope
cld
and
insb
rcrl
or
idiv
out
insl
mov
jmp
std
sbb
xchg
addr16
pop
negl
pusha
jecxz
fsts
xor
pop
roll
xor
push
test
adc
jl
loopne
stos
rep
fbstp
jb
xor
les
sahf
pop
mov
aaa
rolb
loope
inc
ljmp
bound
inc
push
mov
push
repnz
adc
insb
sbb
sbb
inc
pop
inc
mov
or
scas
stc
incl
push
outsl
rcll
ret
sarb
je
fcoml
pop
inc
xchg
fsts
sub
mov
pushl
clc
fdivs
jp
rcr
out
mov
and
mov
enter
adc
push
pop
mov
sahf
mov
push
sbb
xor
frstor
inc
xlat
push
xor
sarb
sti
adc
mov
les
bound
adc
es
or
cmc
cmp
aas
icebp
das
outsb
xchg
push
out
or
sub
push
pop
add
out
popf
pop
mov
jge
cld
add
and
cmp
fnstsw
cmpsl
xchg
jle
call
lods
call
jmp
or
mov
outsl
test
test
jne
subb
inc
push
pop
xor
pop
xchg
add
mov
lret
cs
add
int
mov
mov
lock
es
xchg
lods
sub
pop
push
sti
xor
and
push
jmp
iret
enter
pop
cli
dec
int
iret
mov
iret
xchg
or
mov
stos
xlat
or
bnd
dec
jl
mov
xchg
repz
or
pop
fnstcw
movsl
mov
cmc
and
in
ss
not
loope
and
repz
dec
std
lods
lea
cmpsb
cmp
jne
mov
sub
or
icebp
mov
cmpsb
jl
imul
adc
inc
mov
lahf
insl
jnp
filds
cmpsl
push
sbb
and
loope
jp
adcl
enter
ss
xchg
mov
mov
mov
add
cltd
jns
hlt
pop
xchg
jbe
stc
xchg
lods
mov
pop
push
popf
mov
fiadds
xchg
ret
shll
push
and
icebp
test
xchg
or
cmc
out
lods
fwait
cli
sub
pop
insl
add
push
inc
out
xor
push
sbbb
inc
inc
mov
add
dec
nop
dec
shl
add
test
insl
mov
and
jp
bound
stos
mov
test
xchg
xchg
fstps
xor
aas
cli
adc
or
mov
cmpb
dec
pop
push
pop
subb
sbb
arpl
stos
iret
js
in
sbb
sbb
and
into
lods
test
sub
pop
inc
rcl
dec
fadds
cmc
dec
dec
rcrl
xor
dec
mov
pop
adcb
sbb
mov
shlb
pusha
pop
jp
jge
push
dec
int3
mov
mov
mov
data16
fcomps
scas
xor
or
rcl
mov
push
mov
or
es
lods
mov
sarb
cmpsl
push
and
mov
xor
xor
push
add
fs
insb
mov
xchg
ret
test
repnz
test
sti
dec
and
adc
shr
sub
xor
mov
bound
sub
lret
mov
pop
rolb
mov
dec
jb
xchg
out
cli
addr16
xor
je
adc
push
inc
inc
jmp
jo
dec
jo
ljmp
xchg
inc
push
mov
xchg
jl
jbe,pn
dec
stc
pop
icebp
and
ret
out
mov
dec
daa
mov
push
aad
push
push
lods
inc
dec
loopne
aam
jmp
data16
out
jo
add
mov
ja
push
ret
outsl
popa
dec
lcall
cmpsl
add
mov
scas
insb
and
scas
xchg
cs
mov
push
inc
xchg
add
gs
nop
iret
ret
int3
out
jo
loope
mov
jmp
mov
sbb
and
mov
or
cmpsl
sbb
inc
xor
das
push
shlb
sti
and
repz
fistpll
jo
push
mov
dec
lods
pushf
pop
cmp
add
divl
mov
outsl
hlt
das
dec
xchg
xchg
mov
push
loopne
cltd
pushf
jne
add
mov
dec
fnstcw
jb
and
pop
jno
daa
mov
les
sub
and
dec
test
or
imul
mov
cmpsl
dec
mov
sub
addr16
pop
lods
mov
sti
sbb
movsl
inc
icebp
xor
lods
xchg
jge
insb
imul
push
ret
pop
mov
inc
mov
ret
pop
pushl
or
and
popa
pop
arpl
cltd
loope
add
popa
mov
push
loope
neg
sub
das
dec
data16
xchg
fwait
insl
mov
or
pop
ss
mov
fisubs
mov
pushf
loop
mov
es
dec
movsb
push
mov
mov
test
ret
pop
cmp
popa
cmp
loop
lea
rclb
xor
mov
negl
mov
mov
hlt
ret
mov
dec
shl
mov
ss
cli
je
lret
pop
test
in
nop
ljmp
and
bound
or
cmp
into
xor
pop
push
jle
sub
sbb
gs
or
cmc
and
test
gs
das
mov
sbb
push
nop
sti
xlat
fsubrs
mov
aam
mov
push
xchg
js
xchg
mov
daa
jo
sbb
inc
in
jp
dec
hlt
mov
ficoms
jns
sub
ss
daa
fwait
ds
cld
lock
mov
mov
and
push
adc
int3
lock
aas
into
push
add
push
mov
and
sbb
adc
cli
cmp
fcoml
pushf
sub
cmp
outsl
mov
inc
xlat
mov
push
jbe
xchg
subps
insl
cmp
cmp
fisubs
adc
push
outsl
push
mov
sti
inc
outsb
imul
or
xchg
pop
mov
cmp
mov
jl
mov
pop
cli
jecxz
cmp
add
sbb
loope
or
jbe
in
inc
dec
out
insb
push
outsb
push
call
jg
add
lahf
push
int3
mov
add
adc
sub
cmp
mov
int
xorb
sub
add
mov
xchg
ret
jl
js
jmp
popa
push
cmp
repnz
mov
lcall
mov
pop
fs
jbe
mov
or
jns
xchg
lret
sbb
jo
and
jne
xchg
adc
sub
jmp
test
cwtl
or
ljmp
bound
dec
add
je
xchg
pop
out
mov
in
push
jo
mov
sbb
sbb
fs
jp
inc
or
lcall
mov
and
lahf
loope
push
mov
int3
test
cmp
adc
rcrb
aad
mov
cmp
jecxz
sbbl
push
mov
fnstcw
ror
push
mov
fstl
or
dec
push
fisttpll
test
lahf
jle
cwtl
pop
scas
cli
jg
xlat
xor
test
pop
sbb
adc
outsb
xor
sarl
mov
ret
movsb
push
mov
aam
mov
inc
or
inc
mov
xor
rclb
adc
inc
pop
inc
mov
add
sti
mov
ret
xchg
push
and
arpl
call
repnz
into
cmp
out
mov
sbb
repz
fildl
adcl
gs
mov
jno
dec
dec
pop
mov
push
scas
movsb
jmp
cltd
pop
jmp
je
jns
aam
enter
jmp
lahf
lds
mov
aam
dec
ja
and
cmp
shrl
xchg
sbb
cmp
sub
xchg
pop
xor
sti
fcompl
xor
add
push
mov
xchg
add
mov
xor
and
mov
sub
loop
mov
insb
or
fcomp
mov
mov
inc
inc
sbb
inc
add
lods
xor
push
out
enter
jecxz
in
or
push
lods
insl
pop
jno
arpl
or
fwait
mov
ret
fdivrl
inc
dec
jp
ret
sub
jno
mov
jbe
and
cli
scas
es
xchg
fsub
in
push
ljmp
adc
push
pusha
xor
in
pop
rclb
jmp
push
pop
xchg
sbb
jg
cmp
daa
out
sub
cmp
sarl
or
repnz
cli
daa
das
add
mov
dec
xor
push
mov
push
scas
pop
xchg
mov
add
hlt
pop
mov
nop
mov
inc
xchg
sbb
into
mov
call
cmp
iret
cld
lea
and
cltd
sti
dec
mov
jle
xchg
xor
sbb
and
sub
mov
jo
or
cmp
push
adc
mov
les
scas
dec
lock
and
fstl
inc
push
xor
lods
dec
out
adc
lahf
xor
pop
cmp
or
inc
jmp
jge
jnp
fistpl
mov
jle
pop
bound
fiaddl
addl
imul
imull
sub
and
outsl
ds
push
push
test
dec
test
xlat
adc
jne
int
movsl
lret
data16
jne
sahf
cmpsl
cmpsb
ret
js
lret
cmpsb
arpl
mov
fiaddl
nop
repz
mov
inc
cmp
lahf
pop
dec
mov
leave
xchg
add
repz
js
jmp
mov
sub
inc
imul
fnstsw
cltd
mov
jl
out
mov
int
adc
into
mov
ja
pop
ljmp
inc
sbb
push
and
push
inc
dec
and
movsb
mov
dec
mov
loopne
rcl
or
mov
cmp
cmp
xchg
and
shlb
nop
push
and
sub
mov
aas
jno
pop
rorl
inc
movsl
mov
in
jmp
pop
push
lcall
fiaddl
movsl
cs
xor
mov
mov
or
add
xor
adc
imul
push
and
jb
addr16
divl
cwtl
inc
jl
imul
cmp
add
fidivs
les
sub
jne
gs
xor
test
sti
push
sub
jp
mov
cmp
psrlq
xlat
stc
sub
sub
js
xlat
xor
stc
mov
ja
sub
fstpt
addr16
push
xor
cld
inc
sub
in
push
loopnew
xchg
mov
jnp
into
mov
fisttpll
gs
andb
pop
xor
js
xchg
jle
xor
in
outsl
push
cli
mov
loope
fs
add
and
inc
adc
mov
sub
int
xchg
push
push
outsb
pop
sbb
xor
cli
add
xor
xchg
push
js
fnsave
jecxz
jb
in
or
fs
jge
sti
mov
pop
mov
or
test
out
jno
mov
fadds
dec
inc
xor
mov
mov
ds
jp
jne
pusha
sub
std
dec
xor
test
leave
scas
jb
xchg
fidivs
fcomp
cltd
or
and
ret
rol
testb
xor
inc
and
inc
dec
bound
adc
add
icebp
nop
arpl
pop
je
repz
add
push
mov
inc
add
pop
test
sub
imul
in
xor
aad
mov
inc
lret
xor
jne
xchg
lea
add
cmp
pop
inc
xchg
pop
dec
gs
and
xchg
dec
adc
popa
inc
xchg
out
xchg
addr16
dec
test
rclb
sti
aad
cmp
lods
jl
mov
dec
push
xor
scas
adc
jge
mov
push
ljmp
mov
fistpll
in
pushf
test
xor
sahf
sbb
cld
ret
and
mov
pop
mov
jmp
mov
jmp
pushf
mov
inc
mov
test
sub
xchg
dec
or
jne
sub
lds
and
cmp
cmp
sub
xchg
lahf
mov
idivl
mov
jbe
push
je
pop
pushl
pop
int3
add
pop
stc
adc
outsl
jge
mov
xchg
xchg
mov
sub
pop
das
mov
adc
aas
mov
or
ret
inc
mov
add
std
daa
pop
sbb
ljmp
sub
imul
nop
mov
adc
mov
mov
push
sub
sub
or
or
mov
dec
dec
sarb
or
pop
xor
outsl
lds
sub
mov
jae
xchg
fwait
add
lds
stos
or
or
sti
push
inc
sub
inc
repnz
dec
cmp
movsl
inc
loopne
dec
or
jno
test
xor
xorps
in
adc
fdivs
add
divl
cli
push
inc
inc
mov
cmp
jle
jne
lret
outsb
dec
les
push
mov
loopne
sti
inc
pop
push
sbb
sub
xchg
call
push
subl
mov
negb
clc
jbe
dec
and
ret
sbb
pop
lds
out
xchg
mov
and
dec
test
and
cli
xchg
cmc
fistl
and
cmp
pushf
pop
sub
scas
insb
adc
sbb
test
mov
and
sbb
mov
lret
push
icebp
jno
inc
aam
mov
pop
ljmp
cmp
ret
lcall
repz
pop
sbb
cmpl
lgs
xor
jns
sub
cmp
test
push
pusha
cmp
mov
pop
ret
negb
test
mov
dec
imul
mov
xor
adc
mov
jle
mov
jae
or
inc
mov
jnp
fwait
sub
xchg
popa
mov
and
test
stos
pop
loope
leave
cld
xchg
aam
jno
into
repz
xchg
cwtl
das
iret
adc
jecxz
xor
mov
xchg
jl
into
outsb
mov
pusha
rdmsr
mov
out
mov
lcall
daa
pop
push
xchg
jg
loope
out
repz
push
mov
jmp
aas
cmc
repnz
ficompl
mov
ss
js
lret
inc
aas
dec
mov
ds
or
lds
xor
es
sbb
pop
mov
in
test
pop
sbbb
xchg
shlb
mov
pop
notb
lods
cli
mov
dec
in
es
jle
xchg
sti
cmp
aaa
dec
lock
add
pop
popf
mov
outsl
shrl
xchg
add
jmp
push
aaa
sbb
ds
or
jl
dec
fcoms
sbb
insb
mov
cli
xlat
out
les
mov
pop
or
movsbl
inc
in
loopne
pop
inc
fs
fcomps
test
lods
movsl
rorb
mov
scas
adc
sub
call
sub
nop
iret
addr16
jo
pop
ss
out
out
push
cmpl
cli
roll
pop
or
xor
int3
das
popf
out
fldenv
enter
test
in
fwait
cmp
pop
insb
pop
fstps
sbb
inc
adc
pusha
push
pop
mov
in
sti
xor
dec
xchg
push
cmp
add
outsb
into
sbb
sti
lea
scas
xchg
or
xlat
mov
xchg
pop
cmpsb
mov
or
imul
jno
bound
add
inc
xchg
outsb
ret
push
xchg
mov
cmc
test
andl
or
fmuls
mov
push
jo
mov
mov
adc
mov
ja
mov
dec
sub
mov
jnp
xor
xchg
and
sub
fldcw
lods
mov
daa
xchg
jl
xor
mov
push
les
sarl
dec
dec
aam
jmp
addr16
int3
sub
aas
dec
jno
lods
pop
cmovne
fadds
push
xchg
mov
mov
out
inc
out
ja
push
xchg
sub
or
mov
adc
pmullw
jge
jae
sub
fldcw
xchg
incl
dec
dec
repnz
cmp
mov
sub
shll
pop
inc
enter
sbb
jp
mov
cmp
jecxz
cmpsl
mov
xchg
jecxz
cmp
test
mov
sbb
xchg
cmp
inc
fs
int
pop
test
sti
dec
push
rolb
cmp
sarb
cli
leave
push
inc
add
js
mov
mov
bound
mov
into
inc
fisubrl
mov
call
lds
dec
rcr
mov
mov
jmp
mov
lret
lcall
pop
aaa
stc
mov
cmpl
hlt
xchg
sbb
mov
adc
rdpmc
adc
xchg
xor
mov
inc
ljmp
jl
out
lea
gs
adc
jnp
xor
in
out
leave
pop
push
setnp
push
scas
xchg
dec
mov
push
xor
cmc
xor
lahf
ljmp
cmp
sbb
cld
sar
push
xor
stos
pushf
push
inc
decb
loop
rcrl
outsl
out
iret
popa
or
pop
movsb
lea
fldenv
inc
push
add
jl
loopne
cmp
jnp
sub
and
inc
fldcw
mov
rcl
dec
pop
imul
pop
or
or
jmp
fadds
inc
repnz
stc
add
and
xor
inc
or
popf
mov
sbb
pop
sub
loop
orb
pop
imul
sub
pop
imull
mov
cld
pop
aaa
shl
dec
pop
mov
mov
inc
das
shlb
push
or
pusha
arpl
jo
lahf
cld
mov
pop
test
inc
dec
add
xchg
jne
inc
sarl
repnz
fidivrs
lds
and
imul
cmc
dec
sti
test
into
jmp
push
ja
cli
or
jmp
xchg
shl
jbe
jno
xor
aas
in
pop
enter
xchg
inc
std
jle
loopne
icebp
int
xchg
push
xchg
fsubrs
sbb
mov
daa
cltd
lret
jnp
dec
mov
push
cmpsb
mov
adc
mov
pop
inc
or
outsb
into
rorl
jae
push
sub
fsts
xor
jnp
pop
in
shrb
pop
push
imul
mov
mov
or
pop
mov
bound
mov
mov
imul
ret
ret
inc
adc
cld
sub
fisttpl
jo
mov
and
imul
shl
inc
sahf
sub
mov
clc
jns
mov
push
sub
mov
jno
add
shlb
cmp
cli
out
sbb
aam
push
pop
jbe
xor
adc
sahf
repnz
mov
dec
stc
fs
xor
xor
hlt
sbb
in
xchg
mov
add
lcall
cli
test
fwait
mov
aam
daa
test
lds
cmpsb
stc
jbe
mov
mov
xor
xor
pop
mov
xor
loop
ret
cmp
movsb
mov
stos
xchg
push
cwtl
lcall
or
xor
sbb
push
mov
mov
xchg
js
sub
pop
inc
loope
sub
push
xchg
lea
mov
ljmp
mov
inc
xchg
notl
and
jno
cmp
adc
jecxz
ja,pn
sbb
lds
inc
imul
cmp
dec
pusha
test
add
stos
dec
ss
loop
fnstsw
call
sbb
and
add
out
hlt
lahf
sbb
adc
in
mov
sub
mov
popf
loop
fwait
jl
inc
insl
adc
mov
sub
cmp
fwait
pop
adc
push
lods
sub
pop
mov
or
jae
loopne
loop
lods
pop
call
push
lahf
mov
gs
enter
push
enter
xor
nop
movsb
bswap
ljmp
shl
insl
fdivs
pushf
sub
mov
lods
jbe
roll
icebp
cmp
sub
and
xchg
sub
fdivrl
mov
ficoml
sbb
js
pop
cld
iret
cmpsb
or
xlat
and
call
pop
insl
ret
out
push
and
pop
sahf
inc
fnstenv
lods
push
daa
dec
dec
mov
sar
pop
cmp
mov
push
push
or
xor
adc
mov
cli
cmp
or
popa
push
rcr
xchg
nop
push
fldcw
cli
mov
mov
sbb
pop
sahf
fst
mov
jle
xor
pop
jmp
bts
pop
jo
enter
repnz
popf
fcmovne
jno
mov
xor
cld
loope
dec
push
jmp
je
sbb
lods
cmpsb
aad
orl
mov
xadd
mov
sbb
rcr
sbb
mov
jecxz
ret
ss
movsl
je
adc
cmpsb
pop
loopne
jmp
xor
jns
aam
add
lods
test
mov
push
aas
jb
and
mov
mov
aam
aad
out
sbb
imul
addr16
repnz
push
or
xchg
addb
mov
jno
leave
lods
sahf
jb
jnp
jle
mov
push
sub
test
mov
test
and
push
adc
push
sbb
dec
and
repnz
popf
aam
xorl
out
mov
mov
fadds
xchg
inc
xchg
mov
out
test
mov
push
pop
sub
in
cmpb
ret
ljmp
leave
add
es
sarb
or
jle
adc
mov
add
adcb
dec
icebp
dec
idivl
cld
aad
out
sub
das
lret
loope
mov
mov
addr16
andl
xchg
in
mov
cltd
xchg
xor
pusha
fsubrl
adc
mov
cmpsb
ds
sub
inc
jge
add
popa
dec
add
repnz
and
jp
movsb
ror
scas
xchg
sbbl
and
out
rorl
shrb
mov
aaa
std
xchg
in
jo
push
mov
negl
pusha
rcll
push
pop
movsb
fidivrs
out
lcall
jnp
out
mov
add
cld
cltd
mull
out
lahf
cwtl
dec
stos
jns
push
xor
pop
cld
sub
pop
imul
pop
pop
insl
mov
cmpsl
push
fnsave
push
movsl
ljmp
ja
push
lahf
movsb
mov
xchg
in
xor
shr
xchg
jg
das
cmpsl
push
out
push
xchg
sar
in
cli
mov
mov
push
rcll
mov
inc
out
sub
mov
push
adc
cmp
fsubrs
jno
jmp
pop
mov
lock
jb
ja
dec
push
into
aad
rclb
insb
add
xchg
pop
inc
xor
sahf
pusha
rorb
jmp
test
negl
add
cmpsl
sbb
or
fsubl
xchg
xorb
incb
xor
and
jnp
dec
testb
push
ljmp
sub
inc
or
mov
test
push
repnz
out
inc
jmp
or
mov
sub
mov
jns
scas
lods
out
les
inc
xchg
movsl
fadd
jl
xlat
mov
icebp
cmp
sar
leave
pop
mov
loopne
mov
je
notb
stc
push
pop
data16
mov
or
shrb
mov
cmpl
xchg
negl
loope
out
xor
mov
cmp
mov
insb
adc
push
fdivrl
fisttpl
bound
push
ds
incl
int3
pop
lods
outsb
test
bound
xchg
jecxz
add
cli
cli
fdivp
xchg
int
pushf
rorl
cld
in
push
jo
fistps
test
mov
arpl
clc
pop
lret
jmp
mov
fs
inc
inc
pop
mov
lods
and
popf
pushf
mov
aas
lret
and
out
insl
mov
cmp
loope
shrl
repz
arpl
into
ds
ss
arpl
pop
jns
test
icebp
cmpsl
lock
mov
mov
lret
pop
scas
cltd
dec
movsl
lahf
xor
xchg
dec
pop
ficoml
rorl
roll
xchg
dec
dec
ds
sbb
clc
stc
js
jg
xchg
test
jae
shll
cltd
add
mov
push
xor
test
mov
mov
adc
cmpsb
out
push
push
subb
mov
xchg
push
push
adc
cmpsb
ror
loop
mov
or
dec
loop
inc
dec
pop
lods
bsr
sub
adc
out
xchg
push
mov
mov
xchg
jb
sub
std
adc
cmp
sub
xchg
movsl
test
pushf
lea
sqrtps
scas
inc
ret
inc
xor
dec
outsl
cmp
das
adc
sbb
or
push
negb
xchg
or
mov
inc
add
jne
int3
xchg
aaa
daa
outsb
cmp
add
pop
int3
mov
lods
cmp
gs
or
jo
popa
jnp
mov
or
pushf
push
lcall
bound
dec
xchg
mov
out
das
std
pop
out
pop
orl
dec
pop
sub
sbb
lods
loop
mov
push
insl
mov
rcrl
enter
sub
cmp
pop
sbb
jmp
add
fbstp
mov
lahf
mov
mov
repnz
add
jb
jmp
mov
push
sub
mov
loopne
ss
es
iret
jmp
and
std
rcll
cwtl
rcrl
mov
test
ljmp
and
xchg
pop
adcb
js
lods
repz
push
call
mov
lods
outsb
mov
cmp
sbb
jl
mov
jecxz
push
inc
mov
in
mov
sub
test
and
push
mov
cmpb
movsl
xchg
sub
sub
push
fdivrs
dec
sub
xchg
add
mov
xchg
repz
sub
fwait
aaa
xchg
xor
add
and
sbb
pushf
in
dec
jnp
pop
and
in
inc
ror
sub
fmulp
loop
aaa
or
xchg
ret
mov
inc
std
bound
cmp
ret
or
jecxz
xor
fdivs
sbb
add
negb
aas
sarb
inc
mov
inc
in
jbe
in
inc
xchg
mov
lcall
lock
scas
mov
lea
std
inc
and
push
inc
stos
xchg
push
or
sti
add
stos
cs
sbbb
mov
jnp
fisttpll
jb
cmp
jo
and
ret
push
xchg
rcl
sbb
data16
ja
test
and
cli
sbb
push
jno
push
mov
out
mov
or
stos
pusha
push
enter
xchg
push
cmpsb
xorl
dec
fidivrs
scas
mov
scas
mov
mov
call
push
mov
jo
mov
inc
into
xlat
and
loopne
lahf
xor
mov
and
frstor
lcall
mov
mulb
fwait
xor
pushf
mov
sub
sub
add
movsb
cmp
sub
out
inc
insb
dec
ljmp
inc
mov
lds
mov
adc
insb
push
cwtl
sbb
ss
fsts
mov
sub
dec
je
sub
add
aas
jmp
or
or
mov
fs
lock
or
pop
in
ret
jbe
inc
mov
cmp
in
testb
inc
or
xor
jb
push
xor
cmpsl
rorb
push
xor
test
or
and
xor
rcrl
mov
fmuls
int
ret
xor
pop
mov
inc
daa
fidivrl
test
lock
mov
dec
mov
pop
ret
loopne
xchg
pop
mov
dec
imul
ss
pop
adc
enter
add
ret
dec
lods
lock
push
lea
jmp
scas
insl
add
pop
add
in
mov
fs
loope
push
outsb
xchg
mov
cmp
loop
ret
out
pusha
daa
lds
imul
cwtl
inc
ret
nop
xor
dec
icebp
movsb
sti
push
push
fcomps
rclb
stos
sub
inc
out
mov
mov
sar
arpl
push
xor
jbe
stos
and
pop
pop
shlb
addr16
imulb
popf
mov
loop
mov
xor
inc
lahf
imul
mov
mov
push
test
adc
or
sbb
in
jb
stc
test
pushl
add
out
sbb
inc
mov
push
cmc
mov
outsb
fs
nop
aaa
mov
fildl
xor
pushf
pop
cli
gs
jge
lahf
aad
jle
add
mov
mov
xlat
int
inc
or
xchg
sbbb
xchg
loop
pusha
add
pop
repz
repnz
cmp
ret
add
adc
sbb
dec
popf
cmp
adc
imul
mov
jno
insb
jns
popa
pop
les
mov
cmp
icebp
dec
lea
jae
dec
sbb
pop
cltd
inc
mov
pusha
xchg
stos
mov
jle
out
enter
dec
in
lock
stc
out
mov
cltd
adcb
inc
call
and
adc
inc
gs
mov
aaa
jmp
out
aaa
and
jl
sub
xchg
fs
mov
movsb
in
inc
jmp
pop
push
jns
inc
out
out
and
popf
clc
or
sbb
test
pop
pop
pop
add
fwait
pop
xor
sub
dec
std
outsb
out
ljmp
inc
dec
popf
insl
inc
xchg
nop
cmp
mov
arpl
clc
stc
lret
inc
inc
std
pop
jb
fimull
push
jmp
cmp
dec
cmp
jecxz
add
out
or
xchg
out
or
gs
insl
movsb
test
jmp
xor
stos
pop
inc
adc
ljmp
mov
dec
popa
push
mov
movsb
xchg
xor
js
imul
pusha
pushf
push
cmpsb
movsl
mov
mov
inc
pop
mov
adc
lods
mov
std
cmp
stos
jns
push
daa
mov
ljmp
jno
clc
jg
or
movsl
insl
push
mov
ss
jb
adc
js
mov
inc
iret
xor
pop
mov
in
cwtl
aas
add
and
jmp
jno
ret
xor
push
andl
ret
movsl
mov
int
mov
mov
inc
inc
dec
or
push
sub
and
mov
cmp
lods
das
nop
push
stos
mov
pop
cmp
sbb
sub
or
push
dec
movsl
aad
pop
or
cmp
aaa
xchg
cmpsb
or
xor
fidivrs
stc
adc
dec
xor
pop
lods
gs
cld
mov
int
sti
push
fnstenv
pop
int3
ljmp
aaa
fisttpl
je
in
push
sahf
xor
stos
mov
or
add
int
enter
outsl
pop
outsl
pushf
add
sub
pop
xor
xor
fistl
addr16
out
cmp
pop
sti
ss
outsl
cmp
push
mov
push
test
fsubs
pop
fwait
les
mov
ret
xchg
adc
bound
test
lret
inc
mov
jmp
and
inc
lods
xchg
cld
fdivrl
stos
xchg
aas
jb
mov
sub
js
lcall
scas
ljmp
fwait
push
jmp
mov
sbbb
jae
dec
jge
nop
call
fwait
add
in
dec
xchg
jg
cld
jns
es
fdivrs
stos
lea
adc
scas
xchg
dec
pop
sub
adc
loopne
inc
in
jmp
jg
dec
out
xor
movsl
xchg
mov
les
out
rolb
mov
mov
out
lret
cmpsb
and
mov
scas
mov
leave
jnp
jle
repnz
or
lds
add
ljmp
dec
ds
dec
adc
or
iret
or
mov
out
outsb
hlt
je
mov
jbe
arpl
rcr
jb
xchg
push
mov
add
js
scas
out
in
mov
movsl
lahf
je
cmp
or
jnp
mov
inc
add
cmp
into
and
scas
mov
dec
inc
adc
push
xor
repnz
xchg
and
fwait
pop
test
movsl
aaa
sti
mov
jbe
xchg
mov
mov
std
push
insl
inc
fldt
test
adc
mov
out
mov
ds
cwtl
mov
or
mov
and
ds
lcall
sbb
mov
pop
cs
mov
rclb
inc
out
mov
xor
pop
test
mov
or
outsl
pop
cltd
inc
xchg
inc
and
cltd
test
decl
les
test
out
dec
ret
jae
in
test
and
aaa
push
fcomip
push
das
and
ret
or
aas
int3
jle
or
ret
cmp
cs
pop
mov
jns
into
lahf
bnd
loopne
pop
mov
je
sbb
mov
ljmp
insb
xchg
js
mov
stc
int
push
cmp
mov
inc
rcl
adc
pushf
inc
ljmp
fnstsw
sub
pop
les
cmpsl
or
xorb
imul
sub
fadds
scas
xlat
ficompl
sbb
test
jecxz
push
dec
test
adc
lret
and
inc
xlat
cmp
jne
mov
adc
cmp
xor
cmp
out
xchg
lods
mov
clc
push
imul
push
push
mov
adc
xchg
push
push
or
add
mov
cwtl
cmp
xchg
rcr
mov
fnsave
icebp
test
fstp
cmp
lea
outsl
or
in
push
das
aam
sub
adc
pop
mov
sub
lret
cmp
popl
adc
pop
loop
mov
adc
filds
mov
insl
fsubs
pusha
and
fldcw
pop
jl
lods
in
adc
push
cltd
testb
push
pop
xor
sahf
push
dec
mov
lds
pop
ss
or
iret
or
and
pop
mov
pop
fistpll
push
repnz
add
adc
and
cmp
push
adc
pop
jl
dec
test
adc
or
in
pop
bound
add
mov
fistpll
lock
dec
xor
ljmp
xchg
mov
mov
test
jge
in
xchg
fadd
push
jae
or
imul
xchg
popa
js
out
pushf
adc
cld
mov
cmp
cmpsl
dec
push
sub
loopne
xor
mov
dec
enter
loop
ja
cmp
dec
std
ja
mov
dec
fcos
insl
rorl
pop
push
lahf
xor
pop
dec
repz
fsubrl
mov
insl
stos
scas
xchg
outsl
cli
xchg
mov
pop
cli
ljmp
mov
call
fs
icebp
nop
enter
push
into
push
outsb
ja
pop
push
or
sbb
sbb
xchg
mov
xor
xor
lds
or
jp
jae
inc
psadbw
adc
mov
jmp
in
loope
dec
xor
popa
fistpll
dec
dec
or
mov
loope
movzbl
jnp
inc
lods
pop
sbb
mov
xchg
sbb
mov
jb
push
in
push
xor
imul
lods
mov
out
pop
or
adc
mov
das
jo
dec
fstl
add
pop
jge
cmpsb
push
gs
mov
lcall
jne
or
cmpb
iretw
lds
xchg
popf
les
sti
enter
jmp
pusha
arpl
push
loopne
mov
aam
xor
push
push
pop
jmp
fisubrl
add
daa
cmp
pushf
mov
xchg
aaa
inc
ja
sahf
push
mov
je
pop
test
mov
enter
jge
and
in
jae
xchg
lahf
cltd
flds
aad
or
mov
imul
data16
jl
jnp
mov
lahf
es
insb
xorb
mov
adc
pusha
mov
stos
fwait
push
out
push
jecxz
mov
imul
add
stos
cwtl
or
cmp
pop
test
sub
sub
dec
cmp
bound
fs
dec
aas
aad
test
xchg
int
lcall
fstl
mov
add
jecxz
test
int
insl
out
pusha
stc
popf
xlat
insl
testl
fs
testl
dec
mov
mov
push
add
rcrl
cwtl
mov
hlt
mov
popf
lods
mov
in
xlat
jg
mov
negb
fistl
aad
pop
or
bound
insl
add
adc
iret
outsb
repz
xchg
mov
mov
adc
cld
push
pop
add
adc
inc
orb
test
das
pop
rsqrtps
imul
mov
xorb
sub
and
aas
fcoms
mov
bound
or
hlt
jae
pop
jle
fadds
test
sub
mov
cmp
xchg
shrl
fisttps
sar
aas
cmpsb
mov
mov
xlat
or
xchg
aam
cld
mov
ret
adc
mov
adc
dec
mov
add
fs
icebp
inc
clc
jo
std
das
fbstp
mov
insb
cltd
in
scas
or
or
dec
xor
addb
ljmp
inc
sub
push
adc
xchg
aam
mov
cmpsl
push
jnp
int3
test
pushf
gs
lock
in
daa
int3
adc
inc
mov
outsb
mov
cmp
sub
pop
and
push
and
mov
mov
enter
scas
mov
fstl
cld
into
aas
push
adc
inc
sub
loopne
popa
pop
cmp
cmpsb
adcl
jp
or
sbb
cld
ljmp
ds
mov
decl
out
xchg
je
fcomp
ds
cmpsl
cmpsl
stos
cmc
adc
icebp
add
xor
dec
lahf
pop
jae
cltd
sub
hlt
andl
dec
cmp
pop
xlat
clc
push
outsb
arpl
lret
pop
or
in
mov
jp
xor
jecxz
arpl
popf
add
popf
into
popf
mov
xor
test
push
fsubr
jnp,pn
nop
enter
inc
jl
movsb
add
xor
int3
push
fcompl
ja
mov
scas
fxch
mov
inc
call
add
in
lods
sub
popf
addr16
cmp
pop
incb
insl
adc
push
lea
jno
add
jmp
and
push
fsubs
scas
stos
jl
mov
sbb
jae
add
dec
das
or
insl
das
mov
out
ficoml
jae
add
pop
add
cmp
pop
hlt
inc
xor
ja
xchg
xor
js
xchg
call
dec
sub
adc
and
out
out
fidivs
adc
push
cmp
icebp
fistps
shl
jle
push
add
pop
call
jle
xor
mov
mov
sahf
cs
test
sub
int
dec
mov
fdivl
sub
add
add
sub
sub
inc
movsb
testb
dec
sbb
js
cmp
ret
stc
es
or
mov
loopne
int
rorl
pop
dec
cmp
mov
jmp
xchg
jge
push
jle
loope
call
imul
mov
and
stos
push
pop
inc
jp
movsl
jecxz
fndisi(8087
add
es
jnp
rorl
in
fwait
sbbb
sub
das
inc
mov
shlb
test
xor
lret
or
cli
sub
mov
into
pushf
jmp
jbe
int
flds
dec
xchg
mov
pop
push
push
sub
push
adc
sbb
roll
cmpsl
ret
aaa
fisubrs
andb
sub
pop
es
pop
sbb
jne
mov
dec
orl
sub
sbb
das
jns
leave
or
cmp
jecxz
mov
adc
adc
inc
sti
jne
adc
xor
jmp
cmp
fwait
int
lcall
inc
push
movsb
or
push
inc
cltd
mov
inc
mov
ud2
push
fiaddl
ds
sbb
mov
stos
adc
mov
test
jbe
int3
sahf
jne
test
imull
jle
pop
xchg
movsb
mov
scas
sar
scas
fildl
sbb
inc
in
sub
xchg
ret
xor
shlb
and
xor
les
shlb
loope
inc
cs
push
dec
pushl
nop
xchg
mov
icebp
add
out
push
cmp
mov
mov
lock
cmpl
mov
xchg
dec
pop
div
aaa
addl
push
int3
xchg
jge
push
mov
inc
pop
out
push
inc
cmpsl
sub
fwait
sbb
xchg
pop
xor
iret
das
scas
cmc
push
outsb
lret
pop
and
mov
xchg
cmpsl
int3
movl
adc
push
lods
test
hlt
addr16
or
inc
cmc
int
dec
lret
out
test
int3
cmpl
push
sub
and
pop
push
cmp
xor
xchg
inc
dec
mov
les
sub
mov
popa
ss
mov
adc
adc
pop
cmpsb
in
sarl
call
andb
sub
filds
jno
push
ficoml
dec
inc
hlt
mov
adc
out
repz
mov
fisttpll
rolb
pop
xchg
out
into
xchg
repnz
arpl
stc
ja,pn
popf
or
movsl
mov
fs
push
scas
nop
inc
pop
pusha
mov
mov
pop
fmull
fsubrl
pop
or
test
lea
jae
loopne
mov
out
ja
xor
sub
sub
push
mov
out
icebp
rclb
loope
cmpb
fldenv
mov
movsl
sub
inc
stos
sbb
sbb
inc
xor
mov
repz
pop
adc
rorl
aad
mov
xchg
icebp
lret
std
cmc
pop
jl
jne
into
jp
jge
mov
xor
repz
data16
sbb
add
or
mov
inc
test
jg
xchg
int3
dec
out
dec
mov
mov
test
mov
roll
fs
inc
aam
addr16
divb
cmpsb
daa
mov
sbbb
sbb
jns
jbe
sbb
xadd
adc
fdivr
push
dec
push
push
push
clc
jmp
addl
mov
fstp
or
das
lret
or
and
xchg
dec
das
mov
nop
xchg
lret
xchg
int3
xor
repnz
and
ficoml
int3
les
pop
in
pop
fsubl
test
adc
pushw
sti
lret
arpl
sbb
mov
lahf
mov
in
dec
jo
rcll
aam
and
cltd
out
sbb
ljmp
pop
mov
ja
xchg
xlat
jae
sbb
and
sub
mov
adc
popa
jae
mov
push
mov
pushf
ss
mov
jns
int
addr16
dec
dec
and
pop
repz
adc
je
mov
ds
icebp
or
mov
arpl
sbb
mov
pop
pop
ret
push
jg
daa
push
jns
cmp
push
jp
aaa
inc
jecxz
mov
lea
aaa
pusha
leave
loope
jge
aad
daa
mov
pop
fwait
jecxz
aas
int3
jmp
frstor
loopne
inc
pop
adc
dec
xchg
imul
hlt
adc
and
push
or
xor
xor
dec
imul
fsubrp
ja
adc
push
and
mov
and
mov
dec
mov
adc
test
xor
mov
xchg
testb
outsb
xor
mov
shll
jge
imul
adcl
rcl
or
cwtl
lret
mov
add
ljmp
mov
mov
out
ss
imul
sub
xchg
loop
inc
inc
mov
mov
pop
push
or
sbb
mov
data16
or
bound
adc
cmpsl
scas
cmpsb
sbb
xchg
pop
aam
lcall
test
sbb
cmp
add
mov
push
xor
int
repnz
loopne
pop
gs
adc
and
insb
xorl
loop
mov
push
pop
pop
mov
and
pop
cmp
sub
js
aaa
add
out
loopne
ja
jne
xor
push
popl
movsl
cmp
ja
repnz
shrb
lret
pushl
and
bound
push
scas
jmp
inc
xor
xor
or
in
or
mov
ja
push
fwait
add
mov
xchg
pusha
push
sub
xor
adc
mov
call
push
mov
iret
xchg
ljmp
xor
push
popf
outsl
nop
xchg
xorb
fcmovnb
test
mov
shrb
loope
cmpsl
arpl
in
pop
imul
cmp
inc
push
sbb
aad
xchg
decl
xlat
xchg
rcll
lahf
xchg
dec
test
or
xor
mov
cmp
arpl
adc
inc
inc
adc
sbb
int
inc
lcall
sbb
aas
jp
rcl
jle
adc
aas
pop
out
sti
dec
shlb
loopne
ret
mov
movq
enter
xor
in
jmp
jne
sbbb
sahf
fwait
les
orl
rorl
sub
mov
dec
out
mov
lcall
dec
out
repz
add
out
mov
adc
in
mov
push
movsl
mov
dec
insl
orl
int
shrl
cmpsb
inc
icebp
xchg
arpl
push
sub
sahf
add
fdivrl
pusha
call
mov
sbb
xor
xor
aam
mov
sbb
pop
iret
repz
xchg
test
dec
dec
pop
fbstp
fadd
pop
pop
cmp
fwait
cli
scas
xor
test
adc
cmc
inc
cmp
pop
testl
fidivrs
into
jne
jg
dec
pop
les
dec
add
sbbb
test
push
jge
or
repz
js
xor
xchg
pop
push
cltd
sub
loope
pop
movsb
jns
mov
ljmp
sarb
fidivl
lea
xor
mov
pushf
pop
outsb
insb
mov
cmpsb
rorb
test
push
repnz
shl
jmp
push
push
scas
sub
push
push
cmpsl
orl
in
popa
call
adc
dec
daa
inc
and
pop
popf
aaa
push
xor
cmp
das
sbb
repnz
sub
jp
out
pushf
cmp
int
inc
fmuls
fisttps
mov
mov
add
imul
cltd
mov
push
test
pusha
add
icebp
xor
call
fsubs
aaa
add
jmp
aaa
inc
lcall
imul
jl
cmpsl
nop
lret
mov
std
jge
movsb
les
pop
dec
mov
sbb
in
adc
out
mov
test
push
shll
ror
mov
jb
mov
add
adc
cmp
xchg
shll
fcomps
addr16
xor
fs
js
mov
insl
insl
mov
movlps
test
cwtl
push
lahf
neg
mov
add
sub
mov
lods
xchg
mov
jno
or
lcall
into
sahf
mov
ret
cmp
nop
adc
shlb
sub
add
cmp
push
pop
nop
add
sti
pop
pop
cmp
mov
je
xor
xchg
mov
and
or
aaa
std
movsb
testb
dec
jle
out
push
aas
adc
sbb
andl
jb
jb
xchg
push
xor
lret
pushl
subl
mov
shlb
jg
jecxz
inc
les
in
push
push
jecxz
xchg
inc
lods
push
out
scas
les
lods
aaa
fldt
sbbl
lahf
inc
arpl
dec
or
fwait
xchg
jmp
jge
add
aam
mov
add
std
ja
repz
loopne
or
cmp
cld
mov
pop
sub
mov
bound
out
adc
cmp
cmpsb
mov
or
adc
jnp
add
mov
scas
cmp
or
dec
cmpsl
shl
repz
sahf
aam
call
jno
movsl
jmp
test
daa
add
lea
or
add
and
cmc
aad
xchg
outsl
adc
push
fcoms
push
mov
lret
cmp
adc
sub
pusha
addl
mov
cmp
mov
adc
repz
out
pop
sub
iret
jne
call
cli
fsubl
icebp
bnd
add
scas
cltd
faddl
jae
pop
push
xorl
sbb
out
lcall
add
insl
sarb
push
aam
test
inc
sub
mov
iret
aad
mov
pop
lcall
shlb
outsl
ficoml
aas
es
or
xchg
cmp
or
leave
popf
xchg
jno
and
inc
cmp
scas
cmp
sarb
sarl
std
fistpll
clc
or
push
int3
shr
sub
pop
lcall
sub
movsb
js
imul
out
adc
out
sub
hlt
pop
dec
jl
and
inc
dec
scas
xor
push
in
pop
add
fstps
push
mov
jge
jnp
insl
push
mov
jmp
add
xchg
push
cli
movsb
addb
outsl
flds
adc
test
out
sbb
imul
push
jge
rcrb
cmpsl
xchg
or
jne
addr16
daa
adc
mov
adc
pop
int
xchg
lret
push
clc
nop
aam
push
fdivs
dec
sbb
push
outsl
adc
repz
jl
mov
enter
in
sarl
adc
dec
aas
sbb
xlat
ja
mov
in
adcl
mov
mov
pushf
mov
fcoml
iret
inc
test
sbb
and
sahf
dec
cwtl
in
arpl
out
jp
mov
stos
les
push
push
call
in
clc
clc
inc
pushf
sub
pop
arpl
mov
test
and
mov
jl
sub
movsl
enter
mov
out
mov
push
push
rcll
xchg
cmp
push
sub
test
mov
out
cwtl
or
mov
rcrb
sub
push
adc
xchg
jb
dec
sub
dec
out
imul
imul
sub
in
fucomi
adc
push
adc
pop
mov
stos
out
jge
in
ds
and
pop
inc
ss
sbb
xorl
fdivs
inc
nop
dec
or
jmp
loope
addr16
mov
jo
cmp
jns
rcrl
out
or
clc
sti
stos
jne
pop
nop
mov
mov
mov
imul
fistpl
les
lcall
push
addr16
push
sub
xchg
into
aad
sbb
or
jae
fs
int3
sbb
cmp
or
pop
or
sbb
push
pop
fisubs
movsb
dec
test
sbb
pop
out
out
xchg
pop
xchg
cs
xor
jmp
rcrb
mov
mov
cltd
int
es
push
or
or
testl
test
cwtl
pop
adc
push
xchg
xchg
iret
dec
stos
inc
jbe
pop
or
imull
test
movsl
xchg
xchg
mov
aas
or
mulb
in
and
jp
nop
aam
lret
mov
shlb
cmc
sbb
push
bound
into
cmp
aas
test
add
sub
cmp
rcl
popa
fisttps
aas
icebp
pop
cmp
div
jl
pop
jne
mov
cmp
lahf
insb
adc
test
mov
cli
addr16
lods
add
adc
push
sbb
fsts
or
repz
add
sbb
in
popf
jne
test
mov
sbb
sbb
pop
or
stos
dec
sarb
add
mov
dec
add
and
xchg
test
inc
ret
aaa
stos
icebp
sub
test
cmpsb
jno
sbb
and
stos
xor
cwtl
jno
ret
push
mov
mov
and
mov
and
outsb
call
idiv
stc
pop
pop
fisttps
mov
mov
addl
out
scas
mov
addl
cmp
xchg
test
cmp
mov
xchg
je
fwait
lods
rclb
mov
mov
jle
mov
xchg
lea
sub
fmull
add
mov
or
xor
stos
xchg
xorb
xchg
cmp
xchg
mov
movsb
gs
enter
dec
push
sub
push
cld
jecxz
ds
or
mov
cmp
aam
loop
mov
dec
subl
icebp
int3
push
push
int
push
in
mov
add
popf
push
shll
jle
mov
sub
jns
push
cld
adc
popf
jge
test
cltd
das
sbb
rolb
add
rolb
xchg
popf
sbb
ret
cmpb
add
sub
push
sub
dec
or
popf
dec
xor
pop
out
dec
sbb
lcall
loope
jg
outsl
das
mov
ja
popf
outsl
xchg
ja
aas
add
mov
jne
mov
lock
cmp
xchg
mov
ss
inc
mov
js
mov
mov
jl
pop
rcrb
inc
xor
adc
cltd
push
xchg
pop
into
rol
test
or
sarb
xor
mov
mov
cmp
or
push
xchg
lods
sbbl
repnz
lods
jp
xor
sbbb
imul
into
mov
aas
fidivl
ficoml
mov
popa
int3
adc
adc
out
fcomp
je
loopne
and
imul
test
pop
popa
pusha
clc
lock
out
nop
inc
xor
xor
cwtl
test
adcl
jns
loopne
aas
adc
push
pop
jne
mov
outsb
xchg
in
pop
arpl
mov
jne
mov
add
or
pop
subb
outsb
cmc
sbb
js
sbb
mov
pop
sti
jg
inc
pop
xchg
sub
xor
adc
notb
lods
add
pop
jno
and
cmp
mov
xor
dec
cmp
adc
pop
bound
xor
movsl
loopne
cmpb
test
dec
nop
sub
push
cmc
pop
push
fisubl
add
cmp
cmp
xchg
pop
fs
jb
insb
inc
jo
push
dec
outsl
dec
push
cmpsl
dec
sahf
in
popf
cmp
jnp
push
cld
sti
mov
mov
jle
fisttpl
cmp
aam
and
in
mov
daa
jae
test
adc
test
sbb
and
sbb
dec
and
int
daa
xor
fnstcw
prefetch
adc
out
xor
inc
xor
iret
out
adc
aaa
popf
mov
leave
sbb
xor
ja
or
cmp
js
dec
enter
icebp
arpl
jbe
inc
std
fildll
mov
test
jecxz
push
jge
pop
sbb
scas
xchg
inc
insb
cmpsl
push
and
cwtl
aaa
fcompl
fs
cli
jb
out
push
lret
rorb
push
cmp
xor
or
xor
mov
sbb
cmc
adc
sahf
pop
int3
cs
adc
insb
add
int
mov
sbbb
int3
inc
cmc
outsl
arpl
imul
jae
insl
inc
mov
pop
movsb
cmp
add
dec
pop
scas
mov
iret
fstl
mov
paddd
pop
fwait
daa
cmpsl
daa
mov
test
cwtl
cmpb
push
loop
sbb
rsm
add
lods
enter
cmp
fcmovb
cmp
or
xchg
ds
rorl
in
jmp
cvtpi2ps
int3
push
movsl
lret
xchg
cltd
sbb
sahf
mov
adc
cmp
aam
mov
loopne
jmp
dec
fldcw
mov
int3
pop
mov
fwait
jne
daa
fisubs
jb
dec
push
ja
add
jo
or
cmp
mov
sbb
or
sub
int
dec
sbb
or
add
mov
adc
inc
lcall
cwtl
hlt
pcmpgtd
movsl
adc
jge
jnp
jl
xorb
out
push
mov
and
push
jns
aaa
xchg
jnp
mov
into
out
and
imul
cmp
mov
and
inc
pop
mov
fs
pushf
insb
dec
loop
pop
loopne
push
fmuls
adc
adc
lock
fimull
ljmp
pop
in
cmp
es
jo
sub
add
mov
add
adc
sti
dec
push
push
sub
push
inc
push
sbb
pop
rcr
stos
xchg
sti
or
adc
push
mov
adc
rcrb
or
push
ss
mov
cltd
sbbl
push
rol
mov
sub
addr16
pop
mov
mov
in
push
jmp
jecxz
data16
out
test
sbb
data16
cmp
lea
xchg
lcall
je
fidivl
sub
shll
aas
dec
or
rolb
loope
pusha
push
cmp
xor
sbb
dec
movd
enter
lods
inc
cmp
out
adc
mov
pop
lock
mov
jmp
cltd
fistps
test
imul
std
ret
insl
xchg
add
jo
or
out
enter
iret
out
or
mov
dec
mov
xlat
jae
dec
stos
or
pop
sub
push
add
dec
and
mov
mov
cs
jo
jo
push
imul
xchg
add
inc
dec
and
aad
inc
repnz
sub
cs
jae
push
clc
es
out
adc
adc
out
pushf
lds
sbb
and
mulb
xorl
xchg
mov
icebp
rorl
mov
mov
std
mov
idivb
loopne
pop
adc
lds
or
mov
fwait
jge
fsubl
add
aas
adc
out
mov
add
push
js
and
dec
pop
jnp
movsw
push
fcmovu
adc
je
out
rorb
sub
mov
mov
pop
inc
push
mov
es
jp
cmp
cwtl
mov
mov
fdivrs
adc
rcrb
loope
sysexit
cwtl
sbb
jo
pop
pop
inc
repnz
pop
sub
xchg
pop
inc
rcrl
jge
pop
push
popf
stos
das
js
gs
xlat
fdivs
mov
and
divl
push
fildll
mov
shl
js
cmpsl
add
out
inc
xlat
lock
fcomps
stos
mov
mov
or
std
ficomps
sub
xchg
leave
scas
sbb
mov
fstpl
das
xchg
or
adc
jmp
cmc
adc
lock
mov
lret
ret
xchg
das
dec
ljmp
pop
and
dec
out
rolb
lret
mov
add
mov
call
pop
movsl
mov
cmp
jbe
adc
or
je
mov
outsb
aaa
out
jge
bound
imul
fwait
mov
push
arpl
inc
js
push
mov
std
popf
in
rol
sbb
mov
jge
sbb
fldcw
fwait
mov
sub
cmp
ret
cmc
ljmp
jge
push
dec
jo
aaa
or
in
imul
mov
mov
jno
xchg
rclb
mov
adc
dec
mov
pop
xor
xchg
pop
out
lret
loopne
daa
mov
cmp
lock
jo
lcall
jo
insl
or
and
mov
pop
ret
jge
cld
fsubrs
cmp
lahf
in
loope
pop
shl
push
div
dec
cmp
loopne
inc
cli
aas
rcrl
xor
in
and
in
mov
push
fwait
hlt
fidivs
shrl
in
sub
fcomps
mov
push
and
jg
mov
sub
xchg
cmp
ret
xchg
fistl
roll
and
negb
dec
cltd
lods
jmp
pop
adc
sub
out
lsl
cmpsl
clc
les
call
xlat
mov
mov
or
stos
rorl
cmpsl
inc
mov
and
shr
fdivr
push
mull
adc
add
cli
or
and
out
ja
sub
arpl
cmc
in
mov
adc
jo
ret
lea
push
cmp
add
mov
xor
and
outsl
aam
sbb
test
adc
pop
scas
std
gs
shrl
cwtl
add
add
or
mov
mov
adc
xchg
jle
mov
test
outsb
outsl
jecxz
ret
inc
sarb
xchg
adc
scas
cmpl
movsb
mov
inc
mov
inc
lods
jns
add
dec
clc
pop
jl
cli
test
lret
cmpsb
cmpsb
xor
inc
dec
mov
and
pusha
cmpsl
out
arpl
push
adc
mov
jb
popf
jno
dec
dec
sbb
or
push
push
cmove
push
icebp
xchg
dec
popf
add
jle
sbbl
mov
in
and
icebp
sub
dec
adc
mov
add
loop
movsl
out
or
cmp
fwait
jmp
cwtl
fimuls
mov
push
mov
ja
mov
push
mov
fsubp
xlat
in
inc
stc
push
push
mov
and
adcl
aaa
inc
mov
movsb
les
inc
js
ret
stc
dec
cmp
ret
xchg
sti
add
ljmp
cmp
add
ficomps
and
add
inc
cmp
nop
xlat
pop
pop
insb
and
sub
dec
cmp
fwait
sbb
push
mov
and
mov
out
xor
inc
lahf
lods
das
aam
pop
out
rorl
adc
dec
insb
fs
mov
mov
push
rorb
lods
mov
jae
pop
in
shll
pop
jge
mov
xlat
sarb
insb
outsb
cmp
cli
xchg
and
pop
fidivs
adc
sarb
es
adc
or
insl
jmp
das
call
fcmovbe
hlt
movsl
int
in
sbb
pusha
mov
ds
ljmp
lahf
jb
sti
andb
cwtl
jmp
gs
popa
or
je
pop
loopne
lret
push
popf
or
mov
and
or
adc
or
or
jo
dec
dec
cwtl
dec
movb
and
fsubs
clc
jmp
push
xchg
in
jo
and
fldt
add
cmp
rcll
subl
push
popf
sbb
push
js
sub
xor
xor
lret
inc
jbe
xor
int
test
sbb
mov
aam
lods
mov
and
test
stos
lcall
outsb
adc
inc
xor
loope
inc
and
xor
test
dec
add
test
int
loope
hlt
mov
cwtl
mov
push
xor
loop
mov
cltd
xchg
xchg
cmp
or
iret
mov
adc
roll
pop
lods
xor
shl
xor
out
out
xor
adcl
mov
addl
iret
push
arpl
mov
add
js
loop
xchg
popf
ret
sub
push
cmpsb
iret
mov
imul
add
jae
jno
push
fcoml
pop
popf
jbe
out
dec
out
std
sbb
ss
sbb
push
adc
push
cli
mov
cmp
xchg
mov
iret
jmp
adc
je
pop
sar
or
pop
push
cmp
dec
es
jo
lahf
cmp
stos
arpl
inc
sub
xor
scas
push
xor
xchg
push
push
push
bound
and
inc
xchg
inc
add
rorb
mov
data16
xchg
push
iret
xor
repnz
cmp
jg
call
dec
test
sbb
lods
pushf
sub
repnz
xor
into
sbb
or
mov
dec
icebp
mov
mov
or
sbb
das
es
lahf
mov
lcall
push
stc
mov
out
or
pop
je
ss
mov
out
aas
and
mov
xchg
or
lods
and
cs
test
out
std
sti
jg
push
add
subb
push
and
es
mov
jg
mov
mov
jno
push
xchg
jns
sub
add
inc
or
mov
jne
ljmp
sub
scas
sbb
pop
in
xchg
sub
xchg
lock
sti
lods
dec
test
pop
lock
xor
xchg
xlat
mov
xchg
repz
mov
cmpl
imul
pop
adc
mov
xor
repnz
fstl
xor
aad
xlat
shrb
gs
jns
int
and
inc
sbb
jge
es
jl
notl
ja
andl
add
ljmp
mov
arpl
aam
mov
lds
jge
mov
lea
fstpl
push
add
hlt
pop
jg
loopne
insl
divb
inc
in
cmp
mov
stos
icebp
inc
loope
pusha
fbstp
adc
inc
mov
cld
push
add
popa
popa
lods
mov
cmpsl
push
sbbb
outsb
inc
bound
int3
pop
int3
jmp
int
in
scas
negl
xor
mov
jp
int3
rolb
or
adc
std
mov
add
iret
cmp
sbb
data16
mov
mov
mov
imul
and
lods
jg
pop
loope
decl
decl
jecxz
fsubs
mov
ficompl
aam
insl
jns
mov
pop
sbb
dec
ficomps
das
add
mov
insl
sarb
xchg
push
cmpsl
jae
xor
mov
sub
sub
je
cmp
rolb
jg
cmp
clc
cs
pop
imul
jge
fsubrs
sub
cmp
or
xchg
nop
movb
push
push
add
push
push
sub
adcl
into
pop
and
lods
stos
test
stos
xlat
cvttps2pi
nop
in
pushf
imul
dec
push
imul
mov
es
jno
mov
sti
in
rolb
jns
or
add
inc
stc
aas
movsl
push
dec
jo
lock
das
pop
stc
repz
jo
movb
gs
ret
and
cmp
jge
push
mov
push
push
idivl
lods
sub
fisttps
mov
push
cltd
jp
sbb
imul
mov
insl
arpl
aam
dec
and
test
push
cmp
pop
fisubs
or
jl
call
mov
or
mov
inc
xlat
pop
scas
shrb
imul
icebp
and
mov
data16
jge
pop
push
or
mov
hlt
and
xchg
inc
and
fisubrs
add
or
and
shrb
jne
lret
les
mov
ljmp
incb
push
int
dec
and
xchg
fadd
mov
inc
mov
out
sbb
sbb
push
leave
in
sub
push
push
inc
stos
loop
icebp
movb
movsl
push
mulb
sub
mov
mov
loope
push
sbb
jge
cmp
jl
pop
lds
mov
loopne
mov
ret
jns
imul
pop
push
dec
lret
fistpll
cmp
cmpl
push
sbb
das
mov
pop
sarb
cwtl
out
loop
push
lahf
shll
jp,pn
pop
fnstenv
or
shll
jp
arpl
faddp
das
mov
sub
push
mov
xor
js
jne
pushf
adc
mov
cli
sub
add
lahf
jge
aaa
mov
xor
push
sbb
sub
ss
mov
adc
cmp
and
pop
or
xchg
push
cmpsb
jmp
and
jnp
outsl
jge
jns
pushf
pop
lock
jmp
sbb
xchg
in
test
lret
loop
scas
jle
jge
push
xchg
inc
adc
popa
xlat
pop
psubw
clc
lods
jg
mov
mul
add
cmp
sarb
and
mov
test
inc
jns
sub
and
xchg
pusha
clc
push
mov
cmpsb
stc
js
dec
adc
push
jae
xor
pop
arpl
les
mov
ds
mov
scas
lea
rcl
mov
sub
and
inc
mov
or
stc
mov
adc
push
push
cmp
dec
arpl
pop
or
or
xor
mov
bound
cmp
or
sub
pusha
shl
push
shl
mov
jae
sbb
push
lock
mov
adc
sub
ljmp
incb
lahf
cmp
notl
outsb
adc
cmp
xchg
or
lock
test
call
ret
dec
jg
dec
inc
clc
dec
mov
xchg
sbb
in
cmp
jecxz,pt
fimull
and
mov
repnz
enter
sbb
mov
mov
xor
sbb
out
sbb
test
jge
leave
arpl
sar
jmp
xchg
orl
pop
sbb
div
push
cmpsb
xchg
adc
clc
repnz
and
cld
lods
aas
in
dec
pop
mov
inc
cmpb
xchg
pop
shlb
sti
xchg
mov
imul
les
aad
inc
mov
stos
js
inc
in
lea
xchg
rclb
int3
jg
lock
outsb
das
in
mov
push
sahf
aad
hlt
stos
dec
sbb
push
cmp
cwtl
into
jp
and
jne
rcrb
or
push
xor
jg
leave
lods
lock
and
xor
gs
mov
dec
fcompl
scas
xchg
mov
pop
push
or
sti
push
fdivrs
push
cld
insl
enter
je
xchg
or
pop
data16
popf
jmp
int3
lcall
cmp
cld
std
insb
jne
xchg
mov
mov
pop
sbb
cwtl
mov
rorb
mov
out
ja
inc
sub
and
push
scas
aas
xchg
cmc
dec
movsl
xchg
sahf
jle
mov
daa
mov
lret
cmp
push
sub
or
add
daa
pop
iret
and
enter
sahf
mov
jne
js
jbe
xor
pusha
push
ss
dec
cmc
mov
xor
lcall
or
std
cli
xchg
ffree
or
dec
xchg
and
pop
jecxz
mov
cmp
je
jb
js
bound
pusha
es
cmp
lret
mov
cld
cmpsl
dec
xchg
push
add
fimuls
lds
sbb
loopne
test
fsubl
pop
jp
sahf
xchg
mov
mov
pop
push
or
push
iret
jl
push
pop
cmp
add
cmp
imul
add
dec
nop
cmpsl
pop
xor
jno
pop
in
add
sbb
xor
rol
jmp
pop
lcall
aad
stos
out
push
loopne
xor
in
add
lcall
and
sbb
divb
jmp
inc
pushf
mov
add
fcoms
add
sub
pop
jg
add
xor
andb
xchg
fdivrs
or
js
push
xor
xor
in
test
mov
cmp
push
add
adc
xchg
adc
fldl
movsb
xchg
jmp
add
push
sahf
sbb
neg
stos
jmp
ret
adc
mov
scas
test
test
or
and
inc
scas
shrl
stc
push
imul
enter
xor
push
lret
and
push
inc
js
dec
cld
sub
mov
insl
in
sub
pop
xchg
xchg
push
in
shll
add
clc
xchg
and
fidivl
pop
pushf
jp
scas
jne
popf
mull
inc
pop
pop
insl
pop
outsl
enter
push
mov
and
xor
pop
stc
jbe
divb
pop
ret
jl
in
jae
call
jbe
orb
out
pop
sbb
mov
or
add
dec
frstor
cli
mov
ja
cmp
inc
inc
jo
aas
je
ficompl
jns
pop
enter
rorb
sub
jmp
int3
scas
in
xorl
xorb
and
cltd
test
mov
xor
push
popa
subb
cmp
inc
or
out
mov
push
iret
inc
test
lods
ds
xor
mov
or
and
push
dec
daa
xchg
lcall
jnp
add
sub
push
xchg
inc
pavgb
xchg
sub
out
or
call
and
lods
xor
push
inc
mov
ds
pop
dec
mov
sbb
cmp
xor
jmp
jl
xor
lock
mov
mov
pushf
subl
pusha
xor
stc
out
cmp
mov
cmpsl
push
sub
jge
fisttpl
adc
ret
push
orb
mov
xor
jp
mov
ja
aas
addl
fstp
push
test
outsl
in
adc
sub
fnsave
enter
std
test
popa
clc
push
addr16
jbe
vpmulhw
and
mov
cmc
mov
jecxz
add
inc
inc
insb
mov
sarb
mov
mov
fs
dec
cmc
xor
jne
fildl
and
out
int
mov
push
pop
in
stos
imul
mov
loop
or
out
sub
repnz
gs
sub
jge
in
jnp
movmskps
sarl
push
jo
insb
add
fwait
pmuludq
insl
movsl
jg
iret
arpl
jae
pop
pop
sbb
outsb
push
lret
xchg
in
pop
loope
outsb
xchg
into
inc
inc
ffreep
cmp
inc
cmp
dec
jbe
jg
mov
jecxz
inc
pop
sti
mov
mov
outsb
je
inc
fs
push
mov
movsl
test
dec
call
pop
or
add
and
mov
mov
es
shr
jnp
sub
pushf
jns
or
adc
cltd
mov
or
repnz
adc
enter
mov
adc
lds
incl
out
lea
ja
iret
jp
pushf
addr16
pop
loope
sub
repz
cld
sbb
xchg
sahf
cmp
mov
fsubrl
fsubrl
ss
and
idivb
inc
and
movsl
lret
cmp
mov
stc
mov
lea
sub
jno
leave
mov
and
cmp
push
icebp
mov
inc
mov
adc
inc
jecxz
icebp
inc
iret
xchg
pop
mov
push
push
dec
mov
adc
rcrl
adc
push
cmp
mov
sub
scas
jb
mov
cwtl
leave
xor
add
int
and
enter
dec
xchg
or
sub
scas
lret
dec
mov
push
out
bound
shll
and
lods
xor
mov
mov
mov
jle
addr16
mov
and
mov
lret
jne
mov
mov
mov
imul
pop
pop
aaa
cltd
sarb
ficomps
imul
or
sub
scas
or
dec
shrb
sub
mov
in
in
xor
dec
repnz
sbb
xor
mov
cmp
mov
or
daa
aad
push
cmp
ja
popf
and
dec
lods
lret
sti
cmp
xchg
dec
push
mov
testb
test
dec
fidivrl
inc
clc
aas
pop
sahf
cmp
daa
cmp
inc
sub
test
and
mov
hlt
mov
push
andb
inc
inc
ss
out
push
jg
cmp
inc
mov
jl
dec
shrb
sbb
push
mov
faddl
rclb
sub
jg
and
fdivrl
cmp
aam
xchg
js
out
test
mov
jecxz,pt
stc
mov
lock
test
mov
scas
outsl
pop
dec
dec
xchg
hlt
stos
rclb
imul
out
jmp
fiaddl
rclb
xchg
insb
int3
dec
and
inc
inc
rsqrtps
arpl
pop
add
or
sbb
pop
out
lret
cmp
push
mov
mov
adc
push
mov
and
sub
mov
xchg
pop
fstpt
loopne
adc
mov
dec
jp
dec
sti
pop
inc
test
adc
sub
negb
cmpsl
jp
add
pop
mov
xor
enter
leave
mov
pop
cmp
cmp
lds
rcrl
jne
dec
mov
mov
arpl
pop
inc
xchg
pusha
adc
and
xchg
lret
mov
lock
and
repnz
rolb
test
jmp
xchg
push
addr16
xchg
xchg
scas
and
xchg
test
jbe
fs
cmp
jae
lods
shll
aas
or
in
push
fwait
add
pop
ja
outsb
test
loope
mov
mov
loop
mov
fwait
in
lock
movsl
sahf
cmp
loopne
repz
mov
shll
xchg
insl
push
dec
rorb
stc
div
ret
inc
xor
mov
ret
leave
hlt
movsl
cmpsb
in
xor
rorl
fistpll
push
push
ljmp
es
sahf
dec
inc
out
das
and
mov
add
stos
divb
dec
xchg
andb
mov
pop
pop
push
mov
cmp
mov
pop
jo
test
push
add
das
les
into
xchg
popf
push
popf
sbbl
iret
cmpsl
pop
mov
icebp
push
xchg
bound
sti
adc
std
lret
in
sub
loope
mov
mov
mov
jmp
mov
ficomps
dec
inc
movsl
cmp
filds
lea
mov
or
mov
int
in
jno
outsb
push
shl
sti
test
lea
repz
dec
mov
inc
insl
lods
fiadds
fs
not
fdivrl
insl
jge
mov
hlt
gs
push
mov
xchg
jo
mov
pushf
xor
mov
jne
sarl
xlat
add
xor
xor
loopne
ret
sub
mov
int3
mov
mov
mov
les
popa
xor
jmp
xchg
add
mov
scas
pop
push
inc
cmpsl
or
arpl
pushf
daa
sub
xor
mov
lea
rcr
mov
sub
fisttpll
mov
test
insb
push
out
in
insb
cmp
push
mov
cmp
push
pop
jbe
push
lea
flds
data16
stc
repnz
imul
lret
jne
pushf
xlat
and
leave
ds
into
jb
or
mov
mov
es
xor
xchg
xlat
cmc
pop
inc
sbb
test
testb
lods
loop
mov
sti
sbb
add
pusha
xchg
mov
popf
pushf
adc
stos
xor
std
push
push
mov
loope
dec
fstl
imul
inc
mov
pusha
inc
rorl
stc
imul
push
jbe
inc
loope
ja
add
jg
inc
es
not
add
mov
int3
stc
enter
bound
or
cli
mov
xchg
shll
test
mov
and
xchg
addr16
cmpsb
loope
lret
cli
cmp
mov
dec
shlb
sahf
mov
cmpsb
xchg
and
ljmp
dec
arpl
xlat
jp
int
ret
inc
sub
mov
in
test
cltd
sar
or
shll
jnp
dec
add
mov
cwtl
test
inc
imul
repnz
lcall
adc
in
cmp
out
lahf
dec
push
rcrl
push
int3
dec
dec
xchg
cli
dec
pusha
rorb
xchg
and
add
jo
xor
inc
fcompl
jecxz
push
adc
popf
shlb
lcall
fistpll
cmpsb
lcall
xchg
and
insl
das
fcoml
dec
inc
add
push
cmc
adc
lock
adc
in
xor
adc
lock
in
pop
mov
or
aas
xchg
adc
jo
jle
xor
call
cmpb
cltd
nop
inc
ficoms
sbb
rol
std
jmp
lds
xor
mov
addr16
imul
stos
out
jae
fwait
or
aam
in
mov
mov
or
jb
lock
inc
inc
loopne
sub
mov
mov
inc
dec
xchg
mov
dec
lahf
jmp
mov
test
sub
sbbb
dec
in
mov
xchg
cmp
sahf
mov
dec
subb
or
push
cmp
fbstp
cwtl
rcrb
xchg
dec
pop
js
add
sub
jno
xorb
sub
cmp
or
in
mov
aad
into
xor
xor
popa
xor
xor
adc
xor
jbe
sbb
jnp
and
roll
repz
and
inc
cmp
loopne
jo
jne
xor
or
add
xchg
push
xor
in
loopne
sub
jb
popf
pusha
fwait
jg
scas
xchg
movsb
or
mov
and
push
repnz
pop
aaa
jb
sbb
dec
int3
sub
pop
repz
jp
inc
mov
mov
cld
or
out
shll
ret
pop
ja
inc
pop
add
sub
inc
es
das
push
jns
dec
je
jne
in
push
scas
mov
add
sbb
cmp
insl
shl
pop
inc
mov
jp
mov
jae
jge
xor
xor
dec
pop
imul
cli
aas
iret
stos
les
pop
cmp
int
dec
test
loope
loope
and
push
mov
mov
add
and
ret
aas
std
pop
cli
mov
popl
lret
xchg
lcall
icebp
xor
push
pop
jle
pop
scas
pop
jnp
xchg
into
in
loopne
mov
insl
pop
or
aaa
es
pop
fsubrl
leave
push
and
jne
xor
call
sbb
shrb
pop
inc
test
cltd
lods
dec
jne
pushl
pop
mov
pop
xor
xchg
ja
mov
and
pop
call
insb
repnz
sub
jb
xor
jae
rolb
rorb
sti
push
add
inc
outsl
fcoml
icebp
fisubl
out
in
xchg
jg
pushf
sub
push
push
and
push
sub
shlb
adc
mov
lods
js
sahf
jg
movswl
in
sub
into
ja
insl
xor
or
int3
sbb
sub
jmp
add
xchg
frstor
scas
scas
jno
out
jmp
ljmp
xchg
adc
pop
lret
mov
stos
mov
adc
and
lods
mov
aaa
sub
lods
dec
mov
add
fsts
inc
mov
rcl
popf
ja
out
sti
lods
push
mov
mov
repnz
jns
rolb
mov
inc
into
or
mov
outsl
arpl
xor
rcl
scas
jmp
jbe
out
jle
decl
shrl
inc
in
aas
push
push
inc
mov
jnp
cmp
or
test
mov
jbe
cmp
out
jl
sbb
call
aam
jmp
jbe,pn
add
jg
sub
xor
or
adc
faddp
sub
add
lret
push
or
xchg
mov
pop
or
testl
lods
ret
sub
push
cwtl
or
or
push
popf
or
not
and
fs
push
ds
movsl
push
cmp
dec
aaa
and
mov
movsl
leave
insl
in
pushf
sti
int3
jno
inc
sbb
movsl
push
jge
jne
ret
inc
mov
shrb
and
jle
test
stos
rorb
jge
out
or
mov
add
or
adc
sbb
and
aas
xchg
or
xlat
pop
xor
mov
pop
sti
out
mov
sub
pop
repnz
test
ss
adc
fisttpl
ret
sub
stos
jecxz
out
mov
xor
pushf
daa
and
rcr
aas
push
arpl
out
les
dec
dec
adcl
negb
jg
mov
sbb
dec
popl
and
fs
jmp
test
imul
pop
outsb
cmp
xor
loopne
and
in
mov
or
mov
aam
pop
je
int
hlt
jo
stc
and
mov
out
add
cltd
cmp
stos
nop
pop
inc
shlb
sti
xor
in
sbb
pop
cmp
lods
and
pop
xchg
jns
jecxz
pop
cld
lds
xchg
push
and
test
jnp
cmp
repz
sti
inc
mov
test
std
sub
shl
jl
mov
clc
stc
xchg
lret
sbb
jnp
mov
jp
lcall
jge
mov
or
xorb
mov
mov
in
cwtl
and
dec
nop
ss
pop
cli
adc
mov
mov
call
sbb
or
and
add
bound
cmp
xlat
out
jo
jnp
jns
sar
gs
xchg
divb
mov
iret
mov
hlt
jge
jmp
movsb
pop
and
sarb
lea
dec
daa
pop
cmp
stc
and
inc
dec
cld
dec
jns
lods
aaa
mov
outsl
add
inc
in
loopne
mov
test
pushf
test
int3
aad
mov
lds
fildl
xor
adc
cmpsl
ss
cmp
add
decb
mov
pop
push
lcall
mov
mov
mov
lahf
ss
jnp
mov
cmp
fldl
and
dec
mov
ljmp
mov
xchg
call
adc
xchg
cs
sub
xor
cmp
add
push
fcomps
or
sbb
out
mov
inc
insb
imul
adc
cs
sub
outsb
ljmp
adc
inc
inc
pop
jb
cmp
adc
arpl
ja
adc
inc
fdiv
or
mov
adc
pop
mov
mov
push
pop
pop
pop
outsl
sahf
lock
or
pop
xor
outsb
mov
insl
jmp
mov
xor
push
je
int3
xchg
das
adc
out
xchg
jns
mov
enter
and
mov
loop
add
and
sbb
arpl
pop
mov
sbb
mov
add
mov
xchg
sbb
sbb
cmp
xor
adc
gs
ror
push
shrb
sbb
cmp
arpl
call
sub
cmpsb
pop
push
xor
mov
mov
iret
fcompl
movl
push
aam
pop
sti
rorl
push
push
mov
pop
jle
stc
cmp
cmp
test
test
nop
aam
and
cmp
pop
repnz
adc
jl
aam
jo
hlt
cmpsl
jle
mov
cld
add
loop
les
sbb
fidivs
das
mov
pop
and
daa
cmp
mov
pop
inc
and
pop
xchg
mov
jne
lahf
pushf
lea
scas
cmp
mov
cmp
into
mov
and
idivb
in
sbb
adc
out
sahf
lods
in
test
nop
les
xor
xor
stc
scas
cmpsb
mov
std
insl
cltd
loopne
sub
or
xchg
add
xchg
pop
mov
push
sbb
fisubl
jge
push
lidtl
push
and
loopne
test
sahf
xor
loopne
xor
popa
xor
fcoms
mov
cmp
push
adc
xchg
sub
subl
push
icebp
arpl
mov
cli
test
les
imul
setnp
hlt
lock
xchg
sbb
mov
jg
xor
mov
sbb
rcll
pusha
mov
inc
jbe
out
add
mov
sbb
xor
or
xchg
xchg
scas
adc
mov
push
cwtl
or
dec
jae
inc
push
aad
ljmp
sbbl
lahf
inc
and
repnz
pop
sbb
mov
insb
add
wbinvd
rorb
mov
cli
add
xchg
add
cwtl
pop
add
ljmp
shr
xchg
js
sub
ljmp
inc
test
faddl
insl
loope
sbb
sub
or
and
or
or
movsb
shrb
mov
mov
in
sub
mov
sub
mov
in
push
mov
cs
pop
mov
cwtl
xchg
sub
clts
repz
mov
cmp
pop
mov
and
in
cmp
sub
sub
mov
dec
xchg
fs
cmp
inc
int
or
sbb
sub
mov
ljmp
xor
xchg
iret
mov
sbb
mov
pop
sub
mov
cld
cltd
fsubl
int
push
sbb
cmp
inc
lcall
int3
fisubrs
js
stos
movsb
xchg
mov
jnp
push
in
out
adc
pop
adc
lcall
push
xor
sarl
mov
movsb
sub
add
sbb
and
and
add
ljmp
shrb
jp
mov
jo
fnstenv
pop
rcll
outsb
mov
jle
lea
sub
add
push
in
pop
lds
mov
stos
adcl
lret
popa
mov
adc
xchg
ficoml
clc
push
sbb
mov
push
imulb
stos
add
jp
shrb
leave
xor
scas
mov
or
dec
sub
mov
scas
fidivrl
scas
ret
hlt
testl
inc
in
push
xor
xorl
test
aaa
stc
mov
mov
dec
xor
int
dec
mov
jge
pop
je
inc
jne
imul
repnz
xor
adc
sub
pop
lret
js
cld
pop
cs
inc
cmp
xchg
mov
and
arpl
sahf
out
or
add
out
lret
int3
movsb
cmpsb
mov
xchg
lret
sub
lcall
jle
aas
jp
jp
mov
push
icebp
jbe
adc
ja
fs
repnz
repz
push
pop
push
sahf
xchg
jne
test
pop
pusha
lds
mov
je
mov
and
mov
jg
xchg
inc
aad
mov
jno
cmpsb
out
rorl
sbb
cmp
mov
cs
cmp
aas
add
pop
and
mov
ficompl
bound
ror
sbb
push
pop
add
inc
add
call
je
lret
rorb
mov
fbstp
popf
pop
sub
adc
lock
outsb
out
dec
mov
push
test
repz
pop
ror
lret
pop
in
pop
stos
cld
loop
jp
inc
lret
mov
mov
es
add
pusha
mov
pushf
xchg
test
arpl
cmpsb
push
pop
mov
mov
pop
adc
and
lods
xor
sarb
clc
push
fnsave
lret
insl
addr16
shlb
arpl
sarl
shrb
jle
hlt
cs
mov
incl
dec
sbb
jbe
insl
cli
dec
push
sbb
adc
xor
insl
xchg
mov
ds
xchg
mov
fistpll
mov
jns
in
sbb
inc
sub
dec
and
xlat
xlat
add
mov
cmc
mov
adc
inc
aad
aam
stc
jns
mov
aam
das
mov
mov
test
cltd
aam
fsubs
insb
arpl
sbb
fsubrl
ret
mov
push
mov
cmp
stos
xchg
jo
scas
jo
fnstsw
hlt
nop
and
dec
jae
add
mov
cltd
adc
jnp
push
xchg
mov
dec
inc
jbe
test
clc
les
das
or
movsb
sbb
inc
or
repz
inc
lret
jg
and
test
movsl
data16
mov
je
xor
push
adc
clc
inc
cmc
dec
enter
jbe
sub
aad
dec
pop
test
and
bound
fwait
inc
loop
mov
sbb
mov
and
or
xor
sbb
outsb
sbb
push
adc
cwtl
pop
movsb
sbb
jae
cmp
dec
call
jle
pop
fists
sbb
les
adc
or
sub
cmpsb
mov
mov
test
in
mov
adc
fisttpll
outsb
or
inc
adc
shl
popl
fbld
adc
test
mov
loop
das
sahf
in
jg
js
cmp
inc
and
push
lahf
clc
aaa
pop
stc
adc
imul
mov
xchg
outsb
adc
mov
ret
mov
loopne
fwait
adc
in
hlt
repz
repz
adc
sub
repnz
aas
inc
adc
adc
xchg
sub
push
or
bound
jo
leave
jb
into
daa
mov
mov
push
cld
cwtl
addb
mov
or
xchg
pusha
adc
mov
pop
or
cmp
xchg
jnp
mov
and
loop
xlat
shll
mov
adc
add
andb
das
push
lret
popf
mov
repz
xchg
fisubrs
mov
jno
mov
aam
repnz
cmpsb
mov
xor
mov
xchg
popa
and
call
add
cmp
xchg
inc
xchg
ficomps
ret
mov
xor
mov
push
bound
adc
jae
leave
test
xchg
push
add
rcr
scas
fidivs
sbb
adc
mov
pop
xchg
xor
or
test
xor
push
push
idivl
xor
pop
lds
repnz
outsl
adc
mov
sahf
insl
gs
idivb
and
cli
fs
or
and
cltd
ret
scas
mov
ficomps
mov
jns
xor
mov
bound
add
popa
pusha
add
leave
repnz
aad
or
xor
push
out
cmp
push
sbb
push
and
lds
inc
test
mov
add
add
mov
and
scas
clc
in
movsl
cmp
jne
dec
loop
outsl
stc
push
mov
cmp
cltd
cmp
mov
das
in
repz
out
mov
aad
mov
cmc
or
adc
jp
outsb
leave
add
sbb
or
flds
mov
inc
movsl
nop
pop
stos
pop
insb
rolb
rorb
push
pushf
push
ficoms
jb
sub
mov
sub
fbstp
mov
test
jb
xor
and
add
fwait
lcall
movsl
and
std
cli
cld
and
adc
testb
fnstcw
and
pop
out
repnz
test
imul
add
les
xlat
adcl
cmp
repnz
and
dec
lods
movsb
icebp
out
repnz
aas
mov
cmp
test
mov
xchg
mov
pop
sbb
addl
test
fwait
in
std
mov
fs
cmpsb
mov
push
jns
std
push
insl
sbb
jge
or
loopne
adc
sbb
mov
in
cwtl
ja
sub
sub
repnz
aas
add
arpl
cmp
xlat
adc
mov
mov
add
mov
inc
sbb
loop
pop
daa
pop
push
or
loope
fs
add
ljmp
stos
pop
scas
pop
rcrl
xchg
int
gs
inc
shll
loopne
outsl
pop
shrb
add
nop
dec
add
sti
jp
dec
fisubrl
pop
adc
test
daa
jp
rcll
or
repz
fcoms
mov
adc
shl
dec
jns
fwait
or
inc
imul
into
mov
loop
cmp
push
xchg
aaa
pop
add
stos
dec
cmpsl
dec
in
jge
jns
mov
lahf
xchg
outsb
mov
pushl
mov
jns
repnz
lret
or
pusha
sub
push
mov
stc
pop
jne
jns
bound
clc
mov
out
lret
cmp
orb
addr16
out
shlb
stos
pop
mov
aaa
imul
push
push
scas
cwtl
fdivrl
aam
pop
cwtl
cmp
and
pop
roll
mov
ss
ret
jnp
enter
ficompl
pop
inc
fiaddl
sbb
fs
mov
adc
xchg
push
stc
subb
je
in
mov
int3
movsl
inc
std
fnstsw
mov
insl
dec
fdivrs
add
mov
lret
jb
sub
adc
push
dec
mov
cmp
and
dec
cmpsw
divl
sub
call
inc
loopne
cltd
xor
arpl
xor
mov
fadds
mov
mov
mov
sub
xchg
jbe
pop
xlat
and
in
push
into
dec
mov
cltd
pop
push
mov
jle
pop
mov
mov
mov
jg
or
aad
shlb
out
js
jno
aaa
pusha
xor
fstpl
sub
mov
addr16
inc
leave
sbb
in
out
stc
repnz
movsb
in
xor
sub
nop
pop
das
cmp
add
shlb
jno
lret
jge
dec
push
in
push
ds
or
inc
aam
stc
mov
xorl
jo
lcall
sbb
sub
test
xlat
scas
fmulp
dec
lea
or
or
pop
fwait
mov
aaa
xor
ret
add
push
sub
and
cmpsl
jo
aaa
xorb
adc
pop
mov
paddusb
xchg
aaa
out
aam
icebp
mov
add
sbb
lds
outsl
sbb
repz
lock
roll
xlat
pop
pop
out
mov
ror
lret
mov
in
fldt
sub
jae
sbb
aad
pop
xor
cld
nop
mov
bound
xor
in
test
minps
std
je
adc
cmp
push
mov
outsb
out
sbb
push
shlb
mov
pop
xchg
mov
shrl
repnz
dec
mov
push
sti
test
addr16
js
xrelease
jl
mov
fists
loopne
ja
int
data16
daa
icebp
icebp
fldcw
sub
mov
sub
adc
mov
jo
mov
dec
shll
cmp
iret
mov
mov
je
aas
sbb
lock
repz
pop
jne
mov
xchg
icebp
mov
fs
jl
mov
xor
test
insb
jmp
leave
sub
insl
fldt
mov
scas
cli
adc
mov
xchg
xlat
mov
adc
mov
aaa
push
adc
lods
cmc
das
sub
fldl
cltd
xchg
and
ret
shl
mov
lock
fldt
ja
movsl
xchg
dec
sub
jle
pop
fnstsw
xchg
test
add
mov
or
das
fldl
packssdw
and
cmp
lods
inc
lds
sti
and
mov
mov
adc
sbb
mov
lods
xor
and
jmp
ljmp
mov
pop
xchg
add
pop
cmpsb
out
pop
lods
in
cltd
data16
in
lods
add
mov
stc
repnz
and
ret
movb
in
xor
repz
mov
jnp
jge
add
xorl
in
pop
or
xchg
je
mov
dec
stos
fnstenv
and
lahf
lcall
mov
lods
mov
fcmove
shrl
cli
scas
test
cmp
sbb
push
pop
fidivl
mov
fdivrs
sub
cmp
cmp
mov
adc
daa
cwtl
cmp
jne
xchg
mov
into
in
pop
xchg
lods
jp
sbb
inc
push
add
pop
lcall
aam
repnz
ss
mov
cmp
inc
mov
loop
sbb
push
ljmp
add
cmp
jecxz
incl
popa
dec
dec
mov
add
adc
scas
cmp
push
jns
shl
mov
inc
xor
daa
cmpsl
add
add
jl
xchg
cs
and
stos
or
icebp
sub
inc
push
stos
adc
test
outsl
out
adc
jne
xor
jp
outsl
push
rcrl
fistpll
imul
icebp
repz
js
or
xlat
lret
stos
mov
xor
push
mov
js
lods
fiadds
xchg
dec
xor
cmp
idiv
stos
xchg
push
mov
rcrl
push
sbb
cwtl
fistps
nop
inc
daa
jmp
or
addr16
je
mov
jecxz
fists
sarb
xchg
lods
lods
lahf
ljmp
jae
inc
mov
clc
push
leave
ja
test
lahf
and
xorb
repnz
fadds
ret
mov
sbb
sbb
es
movsb
cs
sub
scas
out
sbb
push
mov
mov
out
sbb
mov
jnp
xchg
loop
adc
lahf
into
call
xchg
cmp
shl
lock
data16
ja
add
jge
push
inc
int3
and
inc
rorl
or
scas
scas
stos
and
mov
outsl
in
mov
dec
sti
xor
in
cwtl
mov
icebp
je
jb
cmp
jge
dec
int3
out
xlat
hlt
xor
mov
out
fldl
xchg
test
mov
movsl
mov
xchg
mov
push
xchg
daa
mov
frstor
xchg
mov
adc
pop
pop
inc
in
rclb
fwait
in
mov
lods
inc
fldcw
mov
jge
clc
cmc
adc
cltd
mov
mov
push
jae
loope
std
test
jno
sub
icebp
popf
mov
notl
mov
cwtl
adc
push
in
jp
mov
outsb
mov
mov
test
inc
loop
push
mov
fisttpl
mov
aaa
cmp
mov
adc
daa
adc
pop
nop
xor
sahf
in
mov
mov
or
movsb
ret
test
jmp
mov
sub
arpl
aaa
push
aas
pop
mov
mov
inc
fwait
pop
inc
xchg
push
fidivs
std
cmpsl
std
adc
xchg
movsb
jnp
jp
push
test
mov
mull
cltd
lret
mov
inc
jl
pop
adcb
dec
ss
iret
std
hlt
mov
ja
repz
mov
push
fnstcw
dec
mov
pop
enter
popf
shrl
cltd
mov
sub
and
ret
and
pop
cmpsb
es
mov
xor
adcb
aam
add
xor
mov
jle
xor
sub
mov
jle
sbbb
adc
pop
popa
sbb
xchg
sarb
sub
cwtl
mov
pushf
xor
outsl
mov
icebp
adc
jge
mov
shll
xchg
aas
xchg
repz
movsb
repz
pop
dec
xchg
xchg
pop
add
xor
adc
pop
sbb
mov
and
or
cmp
orb
ja
fdivs
pop
pop
sbb
sbb
lret
sbb
adc
cmp
sbb
bound
out
mov
dec
fistps
inc
jmp
enter
push
movsl
cmp
outsl
sub
or
dec
cmp
aaa
jp
xchg
repnz
lds
jle
sbb
cmc
and
mov
jnp
bnd
sbb
or
xchg
mov
inc
shld
cltd
xor
daa
dec
ja
push
fstpt
rorl
out
data16
fldenv
pushf
mov
xor
inc
xorb
adc
shll
jge
fcoms
negb
inc
add
mov
pushf
or
sbb
adc
cwtl
call
inc
mov
jmp
dec
rcrl
loopne
cmpsb
inc
pop
cmpsb
popa
and
shl
cmc
aas
arpl
popa
xchg
xchg
cmp
cmp
stc
jmp
inc
loopne
dec
adc
jp
aaa
add
xchg
cmpb
test
ror
cli
rcrl
xor
xchg
jb
sti
push
pop
sbb
mov
rcl
push
loop
in
inc
jne
sub
test
mov
movsb
fs
fmulp
and
rorb
in
add
fcmovbe
sbb
dec
imul
jg
pop
or
scas
and
das
mov
insb
imul
xchg
mov
pop
add
pop
in
dec
push
lods
and
lods
out
push
mov
mov
pop
repnz
les
cld
mov
and
push
pop
pusha
fs
xchg
and
sbbb
shlb
push
fldl
fadd
out
cmpsl
jnp
int3
sbb
icebp
imul
push
mov
dec
or
mov
in
push
pop
dec
sar
dec
out
mov
push
push
stos
js
cltd
outsb
jne
dec
movsl
pop
arpl
icebp
ret
cmc
aaa
cmp
icebp
jbe
xor
sbb
push
dec
mov
loope
nop
sub
cltd
mov
mov
mov
xor
jmp
cmpsb
adc
or
cmc
sar
gs
or
mov
test
mov
movsl
pop
dec
lods
shr
jns
std
jae
aad
jns
and
addr16
or
sbb
jmp
idivb
cmpsb
std
jl
add
xchg
xchg
mov
sub
sbb
lahf
mov
leave
add
pop
aaa
insb
push
xchg
fcom
mov
orl
dec
xchg
lcall
and
add
inc
pop
jmp
dec
sbbl
xlat
lret
jle
inc
push
mov
xchg
test
pop
test
outsb
pop
push
lret
push
inc
inc
aaa
ficomps
lret
out
jne
jl
not
adc
aas
or
pop
xchg
data16
fs
jbe
adc
push
pop
pop
shlw
cmp
adc
mov
mov
daa
test
xchg
mov
dec
mov
mov
loop
push
cmp
add
hlt
jge
pop
push
gs
stos
adc
inc
push
stc
inc
xorb
test
aaa
mov
or
loopne
stc
jb
cmc
js
stos
dec
add
repnz
pop
mov
bound
pop
sub
movsl
in
rcr
or
scas
pushf
cmp
mov
pop
sub
ret
je
dec
push
xchg
lock
and
and
adc
aaa
sahf
xchg
movsb
movsb
jl
push
add
shr
cltd
scas
clc
jne
icebp
jne
sbbl
push
push
push
fistl
inc
nop
jo
fiadds
enter
cmp
addr16
flds
in
pop
cwtl
insb
shl
fucomp
faddp
fadd
mull
popa
jnp
sub
ss
push
popf
push
sbb
jbe
xchg
jge
bound
stos
cmp
push
mov
xor
jp
push
lret
insb
xor
jo
repnz
inc
arpl
push
xchg
mov
sbb
xchg
xchg
out
or
iret
inc
test
js
rcll
std
mov
add
cmc
or
sub
sub
and
ss
loopne
arpl
dec
xchg
addl
inc
addr16
pop
fwait
add
cmp
call
cmp
push
mov
int3
mov
sub
inc
sahf
push
cmc
xor
push
mov
fs
dec
arpl
inc
mov
jp
push
lds
push
inc
sub
rcrb
ljmp
imul
cmpsb
jno
adc
shrl
dec
or
jmp
push
xor
pop
push
xchg
push
add
push
ja
in
pop
fsubp
hlt
mov
pop
jno
mov
mov
pop
cltd
lret
fwait
jne
pop
jbe
repz
jmp
jo
stos
je
cmp
bound
daa
xorb
mov
fsubs
mov
je
sub
xor
call
or
in
xchg
xchg
pop
aas
mov
jnp
adc
jne
mov
inc
mov
leave
iret
mov
loopne
jbe
adc
outsb
fwait
xor
dec
push
and
stos
dec
out
inc
sahf
adc
imul
test
std
ds
outsl
out
ja
fnstsw
xchg
clc
das
subl
inc
push
push
inc
and
sbb
ss
hlt
push
outsl
outsl
adc
inc
xchg
sub
adc
int
fstl
nop
xchg
outsb
loop
and
adc
std
lahf
fbld
movsl
push
jbe
lods
mov
xchg
fistpll
pusha
push
stos
insb
mov
inc
sahf
lcall
arpl
imul
push
outsb
subl
ja
dec
roll
imul
incl
cmp
mov
adc
int
mov
push
stos
psrlw
push
stc
adc
pop
mov
fs
rcl
cmp
and
test
outsb
xchg
inc
imul
adc
fildl
mov
arpl
cmpsl
pop
test
test
movsb
push
testb
mov
stc
jg
or
arpl
xchg
jne
test
lahf
and
iret
call
iret
mov
jmp
xchg
sahf
movsl
ss
add
into
mov
add
and
aaa
cmp
mov
movsb
jae
out
fwait
aad
and
shll
adc
inc
cmp
or
push
sbb
lods
jp
mov
xor
sub
lods
mov
push
out
hlt
adc
int
les
test
adc
inc
aam
pop
and
je
push
inc
inc
notl
jnp
lods
pop
mov
dec
cmp
xchg
dec
in
push
sbb
sti
push
lret
ficoms
xor
and
popa
push
inc
adc
cmpsl
cmpsb
ret
popa
jnp
jecxz
outsb
add
push
popf
or
jnp
mov
loopne
test
insb
in
or
xchg
cmp
pop
mov
jle
xchg
jne
jb
ja
pop
nop
scas
mov
sbb
dec
or
xchg
aaa
or
cmpsw
ret
mov
jg
arpl
mov
cld
shll
mov
popa
ja
gs
out
mov
add
scas
pop
lret
loop
sahf
cmc
in
cmp
xchg
jnp,pt
inc
jne
sahf
mov
and
push
shll
les
stos
adc
cmp
movb
aam
in
mov
xchg
sbb
sahf
lods
jg
mov
and
jl
cmc
adc
repz
repz
sbb
mov
jnp
xchg
aas
mov
xchg
pop
stos
sbb
xchg
pop
jl
rcr
sti
nop
inc
xor
adc
jg
stos
add
fists
mov
test
jecxz
loope
adc
icebp
ja
fwait
xchg
jbe
gs
outsb
sub
and
data16
jbe
bound
clc
jp
addr16
data16
inc
cmp
xchg
sub
cmp
cwtl
xor
push
xor
xchg
or
sbb
add
mov
popf
mov
xlat
mov
mov
dec
lahf
subl
cs
push
aad
imull
and
and
dec
mov
hlt
mov
negb
mov
fwait
mov
ljmp
fidivl
mov
sti
ss
and
dec
lea
repnz
fisttps
aam
int3
adc
daa
pushf
mov
aad
inc
aas
jns
test
xchg
xchg
stos
stos
nop
add
icebp
test
xchg
xchg
cmpb
inc
fisubrs
push
push
pop
jo
in
mov
int3
int
pop
ds
fnsave
shll
cmp
incl
unpckhps
add
xchg
inc
jb
sub
leave
lds
push
lods
ret
arpl
jge
inc
enter
orl
int3
mov
andl
inc
push
imul
push
cmp
push
inc
jnp
sbb
dec
into
ds
popa
inc
sbb
mov
cltd
and
and
inc
shll
lock
scas
or
fs
cmp
lahf
movsb
movsl
fdivl
push
out
adc
out
or
mov
lods
out
ds
xchg
push
lods
out
push
inc
push
ljmp
ds
adc
push
ja
adc
jg
adc
sbb
repz
idiv
inc
sti
add
dec
leave
sets
and
mov
clc
popf
pop
mov
or
gs
and
xchg
cli
xchg
and
add
outsb
cmp
ds
fdivrs
add
xor
out
sub
or
adc
int3
mov
enter
lock
enter
sbb
div
sub
and
jl
push
icebp
push
mov
sbbl
or
mov
les
cmp
adc
xchg
leave
adc
inc
outsl
xchg
cwtl
or
daa
jp
mov
inc
out
icebp
daa
idivl
cltd
in
xlat
jge
ficompl
jo
pushf
push
repz
sbb
mov
push
mov
adc
ljmp
pop
in
adc
add
xor
in
adc
je
jmp
dec
data16
or
jmp
add
sub
test
jno
cld
popa
inc
rorl
jmp
subb
pop
push
mov
mov
out
adc
push
jb
pop
xlat
bound
xlat
out
jbe
call
inc
jge
imul
xor
dec
xchg
out
arpl
jmp
repnz
adc
scas
mov
rcrl
xchg
hlt
cs
mov
out
orl
sbb
jl
mov
ljmp
inc
xor
mov
push
jg
cmpsb
and
in
cmpsl
ret
dec
cmp
je
inc
movsl
mov
std
arpl
test
cld
inc
xchg
int3
dec
mov
je
insb
test
mov
fcomps
add
sub
test
mov
shrb
ret
std
add
rolb
aas
mov
inc
rclb
cmpsb
xorl
sub
or
jg
cs
lock
imul
push
pushf
pop
sbb
hlt
dec
out
sub
xchg
adc
repz
inc
pusha
pop
lock
xchg
je
popa
dec
jno
stos
inc
call
cmp
xor
das
and
out
xlat
cmp
mov
shll
sahf
mov
add
rclb
out
push
sbb
int3
adc
fnsave
test
push
test
add
and
inc
cmp
and
std
into
sar
jns
out
and
mov
xor
mov
stos
mov
mov
jnp
lahf
cmp
out
add
inc
sub
add
pop
mov
iret
sahf
pop
test
push
add
cmp
loop
test
paddsw
lret
in
push
ret
push
push
dec
lea
or
int
pusha
mov
in
cwtl
and
dec
jecxz
xchg
mov
pop
dec
lock
loope
sub
addl
inc
xchg
icebp
subl
in
fistpl
insl
pop
xchg
mov
aaa
je
push
scas
jg
mov
pop
cmp
cmp
jp
xchg
inc
jnp
pop
mov
cltd
mov
xchg
and
cmp
or
push
jb
scas
insl
in
ret
xchg
cmp
pushf
push
das
cltd
mov
idivb
adc
mov
mov
lock
divb
mov
xor
dec
jb
gs
orl
and
sahf
cmp
push
cmc
mov
lods
xor
sub
icebp
push
mov
or
mov
fildll
popa
test
out
inc
jg
pop
fisttpll
jecxz
jnp
mov
shufps
inc
mov
mov
outsb
push
rcr
dec
sub
mov
fnstcw
icebp
add
mov
cwtl
xchg
mov
iret
xchg
mov
xor
and
and
aam
and
fwait
das
imul
inc
xor
xor
into
push
add
and
push
cmp
sub
dec
into
sbb
xchg
sub
pusha
sbb
out
test
sub
dec
adc
pusha
push
dec
fwait
mov
insb
xor
jns
xor
call
aas
pusha
jecxz
imul
add
scas
and
sbb
sbb
shr
es
mov
push
push
xor
repz
cmp
mov
cmpsl
stos
jnp
insl
fldenv
pop
arpl
pop
lcall
add
lret
rcrl
sbb
xchg
and
mov
add
mov
sar
fmulp
xor
popa
inc
divl
cmp
sub
inc
lods
dec
pop
repnz
subb
push
sub
cmp
mov
ds
inc
enter
popa
daa
cmpsl
das
mov
jl
and
dec
orl
mov
clc
inc
fstps
enter
loopne
adc
sbb
push
push
lock
push
fnsave
call
or
clc
hlt
sbb
sub
pop
sbb
push
stos
pop
push
lods
into
sbbl
repz
xchg
fiaddl
loopne
or
sub
or
movsl
mov
jbe
ret
push
mov
pop
lret
outsb
aad
xchg
jge
push
push
loopne
in
popa
jb
mull
sbb
int
mov
sbb
jne
jnp
testb
in
mov
dec
fwait
divb
dec
jp
addr16
ret
inc
add
mov
ret
sbb
mov
or
xchg
int3
jae
mov
cmp
idivb
fstps
es
add
and
orb
insb
or
hlt
xchg
pusha
outsb
inc
jge
in
adc
inc
mov
sbb
add
das
push
xor
xchg
dec
mov
mov
mov
int
sti
daa
scas
add
lods
sbb
aas
fwait
stos
stos
lahf
sbb
xchg
mov
jae
or
jge
fs
mov
xchg
fildll
es
mov
js
jle
dec
sti
setb
or
inc
pop
mulb
xlat
or
fchs
jne
push
sub
fiadds
out
adc
cmp
je
inc
inc
ss
and
ret
arpl
xor
or
call
bound
fstpl
cmp
ss
inc
dec
sahf
add
rcrl
popf
lret
shr
insl
out
sub
mov
jp
jb
push
cli
fbld
pop
jecxz
mov
ret
xor
mov
out
sbb
push
pop
repz
insl
aaa
jl
sbb
clc
inc
sub
xchg
ficoml
jns
mov
aaa
lret
in
and
cmpl
xchg
jnp
jae
fnstenv
add
test
repnz
in
icebp
outsb
cmc
popa
leave
and
xor
lds
jecxz
pop
push
cmp
mov
inc
mov
movsl
xchg
jmp
xchg
stos
clc
xchg
jae
ja
std
or
test
lods
sub
mov
push
fs
call
out
push
in
aam
xchg
scas
push
xchg
jp
adc
daa
jecxz
mov
pcmpgtd
cmp
jne
sarl
insl
cmp
adc
movsb
inc
xchg
cmp
mov
mov
sbb
sbb
xlat
das
mov
ficomps
push
loop
push
inc
cli
pop
and
in
mov
push
adcb
stc
adc
lea
mov
pop
cs
cmp
in
and
xor
jae
add
xlat
or
xor
push
stos
mov
mov
fs
mov
and
xchg
ss
mov
and
push
psubusb
sub
loopne
shlb
into
and
cli
push
sahf
aas
or
insl
jle
sbb
call
pop
das
rorl
add
mov
inc
sbb
rcll
mov
and
fdivl
mov
cmc
in
ss
cltd
rcll
cmpsb
or
std
pop
cmp
mov
fidivs
cmpsb
fs
xor
xchg
push
pop
or
jg
aam
push
divl
push
dec
rcl
inc
not
int3
not
xlat
insb
loope
loop
in
lcall
mov
jnp
push
pop
xchg
cli
outsb
sbb
out
lods
jae
xlat
in
or
subl
lods
xorl
mov
sbb
jge
sub
leave
dec
rorl
shlb
add
xor
fldl
mov
ljmp
out
or
je
push
ljmp
xor
xor
popa
jl
sahf
loop
sti
mov
inc
pop
mov
loop
popa
cs
push
push
jo,pt
push
scas
das
add
sbb
xor
sti
or
repz
mov
pop
rcr
add
and
cli
cld
and
test
jp
shrb
push
mov
test
rorb
push
loope
pushf
imul
iret
es
rcll
popa
fs
adc
push
mov
adc
xchg
xchg
or
mov
add
insl
fcomps
add
lds
outsb
bound
inc
lods
andl
mov
nop
popa
push
pop
inc
cs
imulb
aad
int
scas
fs
pop
sahf
mov
iret
and
negb
int
adc
imul
scas
fwait
pop
imul
test
stos
adcl
ret
jmp
push
test
pop
not
frstor
pop
xor
loope
es
jp
add
ret
pushf
fdivrl
mov
test
mov
mov
repnz
adc
dec
aaa
stos
hlt
cmp
nop
shl
testl
push
sub
pop
mov
push
pushf
pop
test
psrlq
dec
and
jle
int3
push
xlat
and
arpl
out
scas
xchg
xor
cld
fldl
outsl
cwtl
icebp
sahf
iret
jbe
mov
popl
mov
outsl
sub
test
push
mov
icebp
add
jg
push
inc
cmp
cltd
cmp
jecxz
push
mov
scas
xor
ljmp
jnp
movsl
sub
dec
cld
movb
lret
mov
mov
js
xchg
and
inc
jecxz
pop
lods
xlat
sbb
jno
or
sub
mov
sub
sub
push
adc
ror
lods
sub
test
stos
push
out
or
push
ret
mov
cmp
hlt
mov
ljmp
jb
mov
lods
jge
xlat
outsl
ljmp
fstps
jp
push
dec
js
orb
decl
jle
inc
movsb
nop
mov
scas
lret
push
push
inc
or
inc
push
repnz
jecxz
rcl
dec
sbb
ja
sbb
mov
inc
sub
or
and
loopne
iret
lock
loope
sbb
ret
pop
pop
jecxz
popf
dec
mov
dec
fsubrl
es
mov
pushf
sbb
jae
jno
push
mov
test
jmp
test
scas
pushf
cmc
xchg
jmp
ret
cmp
adc
ljmp
mov
mov
enter
push
loope
jmp
insb
aaa
arpl
fs
cmpl
dec
fmull
frstor
rcrl
fmuls
dec
sub
das
xchg
xor
cmp
stc
pop
lret
dec
sub
add
out
das
call
sbb
data16
dec
jne
rolb
outsl
js
pop
push
push
test
addr16
xor
int
int3
mov
scas
leave
xchg
jl
cmc
inc
and
mov
enter
int3
xchg
popa
or
mov
cmpsl
cli
mov
jno
and
dec
and
mov
adc
jle
add
shl
js
js
scas
out
xchg
pushf
imul
xlat
and
xchg
sbb
outsl
loop
jnp
and
popf
xchg
sub
xchg
inc
fisttpl
sub
mov
jo
jno
clc
xchg
mov
and
cmp
shl
cmp
push
fsubrs
add
push
mov
mov
xchg
pop
lds
fistpll
push
xchg
pop
iret
movsb
jmp
in
fidivrl
mov
add
out
lods
mov
cli
dec
cs
jle
sbb
dec
mov
jle
sarb
arpl
sysexit
pop
fldenv
xor
in
jl
in
dec
popa
cmpsb
lock
xlat
mov
addr16
xchg
jmp
dec
lret
inc
add
cmpsl
lock
test
push
fidivrs
iret
cmc
pushf
pushf
and
xchg
xor
mov
scas
or
dec
clc
and
lret
sbb
pop
sbb
mov
sbb
pop
aas
adc
scas
or
xchg
inc
push
cltd
mov
fidivrs
lds
test
xor
xchg
cmp
stc
lods
push
jmp
add
scas
add
sbb
cmp
mov
sub
pop
cli
insb
jno
push
inc
cmp
mov
inc
sti
inc
int
mov
or
push
push
out
mov
jno
pusha
test
lock
cmp
lea
push
inc
push
cmpsb
jbe
sub
xor
pushf
es
fisttpl
cs
ljmp
mov
mov
inc
imul
xchg
inc
and
cmp
es
jne
pop
push
mov
cltd
fildll
dec
inc
shl
cmp
or
mov
pop
jmp
and
adc
outsb
insl
addr16
adc
or
lret
jmp
xor
dec
daa
insb
xor
std
pusha
movsl
jns
cs
fcompl
aas
jbe
fstl
xlat
push
iret
sahf
into
leave
ds
push
inc
xor
hlt
lcall
push
cmp
divl
sbb
js
xor
nop
aam
test
mov
jnp
scas
push
in
push
jge
mov
or
loop
dec
pusha
bound
and
cmp
mov
xor
xchg
loope
icebp
nop
jne
sbb
jecxz
mov
pop
mov
sbb
or
enter
cltd
pop
nop
pop
outsl
wbinvd
push
xor
inc
mov
cmpsl
lsl
frstpm(287
adc
push
pop
fmuls
jnp
mov
std
dec
jns
push
pop
aad
test
outsl
dec
mov
mov
push
jo
xchg
cwtl
adc
es
pop
cmp
outsb
jp
push
mov
ret
rclb
adc
call
cmpsb
call
mov
icebp
lock
xchg
adc
ret
imul
xor
sarb
push
mov
aam
xchg
lret
imul
or
pushf
sahf
mov
loope
mov
inc
aam
cmp
insl
les
repnz
rorl
push
mov
nop
pop
cmp
xchg
aam
mov
and
fstp
xor
lock
fsubrl
bound
and
cld
shl
mov
inc
fwait
les
push
call
mov
push
sahf
lcall
aaa
push
mov
test
pop
out
dec
xor
ja
xchg
mov
sub
stc
shll
movsb
enter
repnz
pop
sbb
repz
cmc
dec
lea
lret
or
push
cmpsl
sbb
addl
cmp
and
xchg
icebp
mov
sarb
or
sub
cmp
mov
out
rcrb
lahf
jmp
add
pop
enter
fstpl
inc
les
das
adc
ss
fsubrp
aam
sub
fidivrl
inc
adc
pop
sub
insl
push
inc
aaa
jae
rorb
cmpsb
jg
adc
push
add
ja
pop
mov
in
sbb
mov
fld
test
add
rcl
bound
outsb
xor
roll
mov
es
rorl
mov
ret
xchg
lret
sub
scas
popf
mov
pop
mov
or
lret
iret
and
xor
scas
xor
mov
leave
add
enter
xchg
pop
in
ljmp
aad
pop
push
mov
and
xchg
sub
pusha
mov
popf
hlt
into
aas
int3
out
test
int
add
loop
xchg
jge
mov
cmp
outsl
fs
jns
and
imul
xor
loope
sbb
ret
rolb
push
daa
call
add
xor
push
inc
cltd
sub
jb
mov
xchg
cmc
cmp
cmc
ficoms
test
and
iret
les
or
sub
cltd
xor
and
push
das
inc
shrl
or
loopew
movsb
jb
pop
fbld
or
cmp
daa
lret
xchg
cld
dec
fcmovnb
ja
fildl
arpl
ja
mov
inc
cmp
lods
pop
mov
negl
movl
cmp
scas
negb
je
out
xchg
sbb
mov
test
mov
loope
sub
mov
test
adc
rorl
xchg
in
pop
add
mov
scas
fidivrs
xor
jecxz
shlb
mov
push
rcrl
inc
cmp
pop
inc
cs
or
mov
mov
aad
fsubs
aam
or
repz
push
or
xlat
shrb
rol
iret
xor
xchg
adc
or
jge
dec
cmpsb
jle
cmpb
dec
sub
jg
fwait
xchg
cmpsl
in
xchg
outsb
sub
insl
pusha
int3
ds
jmp
xor
fdivs
out
icebp
or
pushf
mov
jp
int3
outsb
inc
arpl
jge
inc
xorl
xchg
mov
mov
dec
js
mov
call
jmp
and
xor
orl
pop
mov
loope
cmp
jl
dec
sub
aas
test
aaa
sub
jg
xchg
mov
in
in
fistl
addr16
push
xlat
hlt
incl
into
xchg
ds
mov
stos
jno
clc
fildll
xlat
add
inc
xchg
out
xchg
sti
data16
mov
outsl
pop
fwait
cld
test
jae
loopne
iret
dec
and
hlt
jbe
cmpsb
fs
or
pop
ss
mov
jnp
xchg
iret
jecxz
mov
loope
inc
ja
insl
pop
mov
xchg
loopne
jnp
mov
mov
and
scas
imul
and
xorl
test
pusha
pop
sub
repz
pop
push
enter
stos
pop
in
jno
jmp
adc
jle
sbbl
ret
into
repz
aas
dec
lods
arpl
andl
dec
push
hlt
iret
cli
imul
inc
stos
pop
cmpsl
push
cltd
cld
pop
inc
mov
push
imul
shll
fbld
enter
sbb
xor
jle
in
or
incb
aas
in
test
mov
in
mov
call
push
cltd
jmp
notb
pop
xchg
shll
imul
cmp
push
mov
xchg
cmpsb
loop
das
cmp
scas
scas
dec
and
sub
fwait
and
fs
test
ja
mov
push
pop
nop
ja
jp
arpl
adc
mov
in
addr16
iret
loope
call
sbb
and
inc
xchg
lcall
and
pop
add
daa
jmp
push
lea
fs
sbb
arpl
mov
jge
movsl
jns
iret
and
leave
dec
mov
jp
push
addr16
jmp
aad
loop
cmpb
cmpsl
test
lretw
test
imul
mov
enter
repnz
popl
das
pop
loope
push
push
push
sub
popa
leave
push
mov
aas
mov
sarb
lds
mov
lret
push
xorb
negb
xlat
add
jge
mov
mov
or
mov
cmpsl
outsl
jmp
adc
mov
inc
popl
jb
dec
in
les
call
jle
test
mov
fcmovnu
jmp
cmp
pop
scas
adc
jp
cmpsb
imulb
fwait
jbe
flds
xor
pusha
iret
pop
mov
xor
lods
fldl
divb
or
xchg
xor
jl
sub
add
fcomi
outsl
mov
or
xor
pop
mov
xchg
mov
mul
ja
jb
inc
sbb
cmpl
scas
jg
aad
sbb
out
push
imul
outsl
cmp
mov
mov
push
mov
cmpl
arpl
cmp
add
jle
cmp
in
ficompl
xchg
aaa
scas
inc
and
sub
or
inc
xlat
jp,pn
adc
adc
popf
adc
movsb
imul
aaa
xchg
ja
inc
jl
push
cltd
out
and
push
jb,pt
cmp
and
add
ficoms
inc
hlt
sub
stc
and
push
pop
in
inc
add
add
sbb
mov
clc
fcomps
sub
fsubs
adc
fbstp
jecxz
and
jne
xchg
mov
lret
jl
push
inc
testb
or
cwtl
and
jo
mov
pop
test
pop
fadds
jnp
cmp
sub
mov
out
pop
cltd
add
push
ja
loop
mov
insl
fcomps
inc
inc
pop
xor
jg
rcrb
fs
sub
int
mov
push
or
shlb
lock
and
and
push
push
xor
mov
mov
rol
leave
and
inc
mov
xchg
cs
movsb
sarl
jmp
imull
ljmp
insb
add
lock
add
clc
mov
bound
je
and
popa
mov
mov
filds
cmpsl
lcall
das
incl
mov
mov
mov
nop
mov
ds
and
lods
lods
add
sbb
add
jns
scas
mov
sbb
inc
and
es
roll
movb
roll
jno
add
loop
push
inc
int3
dec
push
fcomp
xchg
mov
sub
out
sub
sub
mov
mov
inc
imulb
mov
mov
push
jp
xchg
test
cmpsb
popf
fdivs
fldz
pusha
add
sub
add
cli
jb
or
push
jnp
jns
outsl
push
mull
cld
jb
and
lock
adc
xchg
sub
imul
mov
jno
leave
lods
sub
scas
sbb
push
sbb
sbb
icebp
cmp
test
xchg
dec
add
push
adc
dec
into
jl
ljmp
mov
stos
popf
cltd
jnp
clc
out
insb
mov
jb
add
andl
mov
test
gs
push
shll
int
lcall
les
in
sub
cmp
shrl
test
mov
popl
jecxz
or
in
or
push
or
cmp
aas
aas
inc
mov
lea
cld
and
jecxz
stos
sub
sbb
jbe
clc
cmpsl
hlt
mov
push
jb
in
out
fucomip
fcompp
fs
sub
adc
lret
lcall
scas
adc
mov
dec
out
mov
push
cmc
xlat
dec
xlat
scas
push
in
and
xchg
add
mov
cld
xchg
push
inc
mov
jge
popa
push
lea
cmp
lods
adc
jae
cltd
aad
and
xor
repnz
or
xchg
lods
dec
push
cs
movb
pop
fnstcw
mov
jmp
mov
fwait
notb
sub
decl
or
pop
xor
cmp
fistpl
cld
and
aaa
and
int3
mov
cmp
leave
lret
jmp
ljmp
lcall
inc
fs
xor
mov
mov
shr
or
mov
mov
jl
xor
push
pop
xchg
xchg
push
aam
cmp
mov
cmp
and
sbb
les
dec
int
pop
xor
das
jns
mov
inc
adc
xorb
adc
out
sti
ds
pop
mov
cltd
cmp
xor
lretw
das
mov
and
ljmp
jno
jecxz
das
data16
ret
adcb
pop
push
lods
incb
and
mov
clc
xorl
in
data16
out
push
and
mov
cmp
add
int3
pushf
mov
or
cli
pop
adc
jle
bound
mov
cmp
cmc
add
mov
int3
mov
and
mov
push
cmp
adc
fisttps
or
adc
inc
jp
mov
mov
repnz
push
mov
data16
cmp
fcoms
repz
shl
cmp
xchg
call
test
push
rcrb
and
add
cmp
push
xchg
loop
in
mov
enter
pushf
pop
inc
cmp
or
cmc
hlt
inc
dec
mov
insb
enter
and
and
and
loopne
or
inc
xchg
bound
xchg
dec
adc
add
cmc
or
gs
inc
iret
xor
jecxz
xchg
inc
cmpsl
sbb
in
std
dec
pusha
mov
sub
fstps
fstps
lea
into
add
mov
inc
into
or
push
dec
testb
jecxz
fadds
dec
and
pusha
movsb
inc
cld
mov
dec
in
jge
sub
inc
mov
cld
lods
cwtl
adc
std
xor
inc
xchg
call
xchg
je
mov
sub
jmp
jne
sub
shr
push
ret
mov
repnz
mov
mov
add
testb
arpl
pop
test
or
outsb
or
mov
shl
xchg
add
dec
adc
stc
movsl
sub
inc
mov
insb
insl
and
call
rcr
divb
lods
and
mov
mov
cmp
jle
loopne
mov
outsb
sub
xorb
dec
mov
xchg
add
inc
cltd
push
or
dec
in
ret
dec
into
dec
test
mov
mov
cmc
sub
rorb
imul
arpl
mov
out
jmp
scas
or
in
jge
jb
jno
repnz
sahf
out
test
xor
std
mov
adc
pop
test
fcmovnbe
imul
sub
inc
lds
add
xor
popa
insl
pop
fsubrs
insb
inc
jl
icebp
in
fwait
mov
mov
mov
mov
leave
sbb
pusha
jae
call
int3
cwtl
stos
les
mov
ds
push
ror
jmp
jmp
adc
rcl
into
in
mov
out
mov
stc
cmp
pop
xor
xchg
lahf
mov
mov
sub
test
cmp
cmp
or
lods
scas
adc
push
and
pop
popl
dec
pop
and
xchg
popf
shrl
js
ficomps
sbbl
ror
shlb
call
adc
int
xor
and
pusha
push
fstpl
outsb
push
cmp
outsl
jae
jnp
test
outsb
lret
stos
out
push
or
jge
dec
jle
inc
mov
xlat
push
push
rolb
mov
and
loopne
xchg
or
mov
pop
insb
mov
lret
mov
cmpsb
andb
mov
fnstenv
leave
mov
xchg
lret
mov
push
cmpb
nop
mov
mov
insb
mov
add
jp
adc
xor
cmp
mov
aas
loopne,pt
xchg
mov
stos
mov
out
aad
dec
mov
push
hlt
cld
xchg
add
leave
imul
cmpsb
adc
jns
xlat
or
ret
clc
stos
lret
mov
lods
lock
mov
mov
xor
mov
xorl
sti
out
lahf
adc
into
mov
add
mov
and
xor
dec
in
fadds
mov
in
cmpsl
and
clc
sub
push
and
mov
ss
pop
std
and
stos
push
jmp
mov
addl
rclb
stos
or
lds
loopne
rorl
out
fidivrs
ret
jbe
jo
xchg
push
jae
fisubs
pusha
shl
push
adc
xchg
mov
js
in
cs
filds
cmc
rolb
aad
cmp
test
sarl
add
sbb
mov
dec
mov
rcll
pop
sub
add
int3
ret
imul
insl
sbb
xor
in
imul
push
mov
pop
jbe
mov
jl
faddp
rorl
mov
int3
mov
jne
xor
cwtl
xlat
into
mov
push
unpckhps
in
push
and
or
add
test
inc
sbb
mov
das
out
or
pop
aad
mov
xchg
sub
out
push
jo
mov
sbb
or
ljmp
xchg
cld
roll
inc
shl
daa
outsb
lcall
das
daa
jg
lcall
testl
or
in
xor
inc
mov
adc
jp
jno
in
mov
in
push
cmp
popa
mov
cmc
jo
out
jp
mov
xchg
ss
ret
adc
lods
mov
jmp
add
lods
xor
jae
and
aas
lock
pushf
mov
imul
or
pop
and
adc
push
gs
dec
testb
rcl
inc
xchg
and
jg
or
and
add
adc
ror
push
test
mov
cltd
leave
mov
daa
ljmp
inc
nop
push
inc
dec
dec
cmp
cld
push
xchg
jl
mov
inc
xchg
push
cmp
ret
jmp
inc
leave
arpl
jb
sub
stc
xor
cmpsb
int3
test
enter
mov
out
aaa
loopne
inc
sub
push
test
mov
insl
add
ja
pushf
int
pop
pop
sub
cmp
push
cmp
or
scas
mov
js
ss
xchg
ljmp
iret
add
das
sti
shrl
cmp
pop
int
movsl
pop
inc
lcall
xor
dec
sub
dec
adc
mov
gs
jecxz
push
xchg
add
and
loopne
insb
addr16
mov
stos
data16
mov
test
sub
loop
je
cld
pop
subb
icebp
xchg
cmp
push
leave
rorl
mov
fwait
push
mov
jb
and
mov
dec
lds
cmp
push
cli
mov
adc
lcall
ss
orb
idivb
jge
cmp
sbb
cmpsl
jle
cld
mov
jno
dec
mov
add
pop
cmp
loopne
lahf
jb
rcl
xchg
lods
faddl
call
inc
sub
pop
scas
xor
fs
xchg
insb
pop
int
movsl
in
stc
xor
push
xchg
jnp
adc
cs
jo
sbb
in
lods
lcall
jg
inc
aas
or
int3
iret
shll
push
int
mov
adc
inc
arpl
inc
add
xor
mov
adc
pop
mov
in
inc
xchg
push
pop
and
dec
aaa
sbb
in
rcrb
mov
mov
pop
cmp
and
negl
imul
test
in
sti
adc
dec
dec
pop
inc
dec
imul
dec
js
sbb
cmp
int3
sbb
and
jbe
mov
lret
mov
int
movsb
add
ret
or
sti
mov
mov
and
xchg
push
dec
dec
jle
push
dec
test
addr16
sbb
hlt
leave
mov
and
sub
mov
dec
or
cmp
leave
je
mov
and
jbe
and
pop
mov
jbe
sbb
mov
in
and
aam
sub
ljmp
sub
inc
sbb
fsts
jge
pop
and
jmp
push
pop
xchg
imul
add
out
lea
mov
ffree
adc
add
data16
mov
dec
dec
push
or
aam
and
xorl
scas
fiaddl
inc
fisubs
insl
insb
jno
in
ficoml
adc
dec
lcall
mov
shl
jmp
ret
lds
cmp
imull
xor
dec
push
mov
lods
dec
dec
popf
bnd
xchg
sub
fcmove
je
cmp
mov
inc
mov
std
sub
les
fcomi
pop
xchg
adc
and
fwait
repz
stos
sbb
pop
repz
mov
and
xchg
outsb
inc
push
adc
push
pop
fstpl
lret
aaa
mov
mov
mov
lcall
jns
push
jne
mov
jmp
sub
sbb
mov
jno
dec
add
mov
std
pusha
and
push
scas
jle
insb
or
push
cmp
pushf
rcl
push
adc
int
pop
imul
dec
dec
xchg
xchg
pop
push
push
push
or
inc
and
or
rcrb
cmp
notl
jne
dec
cmpsl
fbld
adc
cmp
cmpsl
imul
xor
pop
in
or
and
cmp
inc
sub
fmull
ds
test
repnz
mov
push
cmp
adc
xchg
inc
xchg
ret
pop
cmp
mov
xchg
cmpsl
xor
xchg
mov
repnz
lds
jne
mov
pop
adc
into
mov
into
add
out
stos
jne
fcoms
mov
jle
push
sahf
jnp
ja
inc
fsubrs
ds
out
add
ljmp
das
lods
popf
ret
stos
pop
loop
or
inc
push
lods
jnp
inc
cmp
pop
loopne
push
rcl
pop
jne
cmpsl
aaa
rcrl
je
sti
jbe
jo
sahf
loop
adc
imul
push
sbb
mov
int3
loopne
inc
push
jno
pop
lret
imul
pop
gs
adc
lahf
loopne
ret
mov
fistl
pop
movsb
enter
mov
lea
subl
jp
loop
push
in
push
xchg
cwtl
xchg
mov
add
call
pop
movsb
test
sbb
mov
or
testb
jno
pop
jnp
mov
push
sbb
loope
mul
movsl
clc
mov
mov
mov
mov
enter
dec
inc
xchg
stos
fldt
xor
jmp
int3
repz
or
inc
sbb
into
ret
xlat
addr16
push
fisubl
cmp
sub
out
or
orb
and
or
dec
test
mov
xchg
add
addr16
dec
ljmp
inc
xor
push
dec
leave
and
jbe
sub
add
mov
or
jns
mov
jo
push
xchg
scas
ficoms
sti
mov
andl
jp
jle
jge
aad
test
mov
pop
and
ficompl
int
sahf
or
pushf
or
jbe
dec
pop
mov
clc
xchg
lods
orb
mov
mov
cmp
mov
and
pop
sub
mov
xchg
jne
mov
in
inc
or
sub
lcall
cwtl
mov
jmp
pop
and
in
cmpsb
hlt
pop
mov
pushf
shrl
push
aam
add
dec
push
mov
test
sbbb
pop
mov
shlb
in
out
mov
pop
adc
mov
adc
inc
mov
push
push
cmpb
jle
lret
push
adc
andl
inc
cmp
ja
adc
repnz
fistps
xlat
mov
fcoms
fsubs
out
mov
popf
sbb
test
dec
jae
testb
sub
pop
push
inc
dec
and
or
push
mov
std
xor
mov
cmp
icebp
daa
add
xchg
cwtl
int
xchg
sbbb
and
lcall
sbb
mov
cmpsb
and
mov
jb
lods
rcll
mov
sub
add
cmp
xchg
fnstcw
enter
jnp
nop
cltd
out
std
sahf
sub
ss
xchg
hlt
mov
test
push
pop
inc
loopne
lret
pushf
push
push
xchg
push
xlat
sub
adcl
sub
mov
adcb
mov
cmp
out
push
stos
outsb
mov
nop
dec
jmp
dec
inc
cmp
decl
cmpb
and
and
adc
jae
mov
in
imul
jge
or
pop
jge
mov
fdivs
xchg
push
inc
arpl
lahf
aaa
test
or
push
or
push
ljmp
xor
gs
rclb
sub
sbbb
mov
cmp
cli
add
insb
inc
push
out
sub
adc
loop
fnstenv
out
mov
pop
das
sar
mov
jne
int
out
sbb
addr16
xchg
into
fsts
pop
cltd
cmp
je
mov
clc
adc
cmpsb
loopne
cmp
addr16
sub
pop
push
fsubrp
or
fidivrs
fsub
adc
xor
iret
clc
xor
enter
int3
push
in
dec
lcall
or
add
pushf
sbb
cmp
ret
enter
inc
sub
inc
jmp
xchg
sarl
lds
stos
jl
mov
mov
lock
pop
xchg
ror
add
pushl
mov
mov
insb
xlat
inc
add
pop
lahf
dec
lahf
push
add
daa
test
jg
stos
loop
nop
mov
jno
xlat
jle
outsl
jecxz
xchg
insl
mov
loopne
addr16
lret
int3
add
pop
jge
ja
xchg
mov
scas
faddp
lcall
adc
mov
dec
pusha
add
pop
mov
mov
cmp
outsl
adc
xchg
mov
sub
imul
jecxz
push
jge
cmp
mov
popf
sub
out
bnd
frstor
sahf
dec
xor
or
push
nop
adc
mov
and
sub
add
xchg
mov
int3
and
addb
fcoml
lea
dec
push
and
adc
adc
sti
pop
or
jge
and
dec
fisttpll
loope
push
pop
mov
jb,pt
rol
add
xchg
insb
mov
xchg
xor
pusha
jge
mov
addl
call
xor
fdiv
fiaddl
je
rclb
and
fs
adc
mov
imul
rorb
sbb
mov
in
xchg
into
fisubs
mov
es
pop
sbb
sbb
enter
fistl
and
mov
xor
stc
jecxz
xor
lea
in
push
lret
aam
outsl
mov
cmp
inc
cmp
push
ret
out
out
pop
jb
push
dec
idivl
inc
dec
mov
or
jge
fisttpl
sub
cmc
adc
gs
jecxz
std
and
mov
dec
pop
inc
sahf
lods
xchg
scas
shl
dec
mov
add
mov
pop
push
fldt
or
mov
insl
in
push
pop
les
outsl
outsl
pusha
sub
inc
dec
cltd
sub
subb
xchg
sbb
or
push
pop
int
jns
mov
xor
adc
jbe
jl
daa
fnstenv
mov
jae
mov
pop
movsb
aam
push
test
ja
mov
mov
dec
fsubp
movsb
sbb
dec
popa
in
push
aas
pop
loopne
jns
ret
jbe
pop
ret
mull
aam
in
es
enter
scas
mov
push
in
test
fs
cmpsl
in
stc
mov
fs
xchg
testl
idivb
insl
jo
xchg
fistpll
shr
mov
push
jns
mov
pop
jne
lea
and
push
sub
icebp
pop
stc
notb
cmpb
cmp
daa
mov
push
add
hlt
pop
popa
mov
lock
fst
in
jmp
lock
mov
mov
daa
mov
jbe
pop
dec
repnz
es
or
push
mov
cmpsl
mov
ds
in
lret
int
psubsw
aaa
sahf
fs
or
outsl
pop
cmpsb
inc
sbb
mov
ss
xchg
aaa
ss
fmuls
jmp
pop
jne
inc
jmpw
or
out
shlb
scas
cmp
mov
cwtl
in
mov
push
out
fwait
jb
aam
sub
inc
hlt
movsl
cmc
adc
adc
lcall
pop
push
int
push
cmp
aas
push
cmp
aaa
repz
jg
pop
repnz
xor
scas
pop
ret
test
push
inc
xchg
outsb
stc
jne
stos
pop
pop
or
cwtl
sbb
cmpsl
and
dec
ds
cmp
push
inc
fs
aaa
mov
xor
and
pusha
sbb
ret
out
jp
mov
sbb
push
test
mov
leave
pushf
xor
xor
popa
and
dec
jp
push
movzbl
test
cmp
xor
jmp
inc
addr16
iret
add
push
xchg
pop
pushf
xrelease
pop
add
cs
jge
xchg
in
sbb
out
outsb
das
mov
arpl
dec
mov
jp
xor
es
gs
mov
pop
mov
sbb
cld
mov
arpl
pushw
stc
jae
popa
pushf
clc
mov
push
in
sbb
loopne
test
lods
movsb
add
jmp
scas
inc
mov
dec
nop
sbb
shll
aad
outsb
stos
cmpsl
jns
rorb
arpl
addr16
xor
scas
xchg
cli
cld
pop
mov
ljmp
into
inc
insb
mov
pop
xor
hlt
sarl
and
out
push
xor
popa
xor
cmc
mov
mov
inc
je
push
adc
aaa
lahf
pop
jg,pt
dec
enter
pop
and
fstpl
jp
xor
dec
xchg
aas
mov
xchg
cmp
les
hlt
gs
lods
mov
int
imul
cmp
mov
push
xchg
xchg
cwtl
subl
pop
jno
lds
stc
xor
test
xchg
cltd
in
movsl
and
test
sbb
and
push
test
add
fwait
jecxz
gs
stos
movsl
cwtl
pop
test
je
bound
add
dec
mov
cmpsb
sarb
mov
pop
inc
movsl
repz
sbb
adc
sti
loope
mov
jbe
imul
cmp
push
lret
push
fistps
cs
sbb
push
mov
lea
cmp
cli
clc
cwtl
add
jmp
xchg
movsb
cmp
xor
outsl
mov
cmpsb
cwtl
jnp
xchg
cli
dec
push
dec
mov
inc
test
cmp
cld
jl
icebp
adc
data16
jl
out
cltd
cmc
scas
or
inc
cwtl
adc
imulb
sbb
inc
dec
xchg
shufps
inc
pop
xor
enter
cli
or
leave
andb
mov
fbstp
es
sub
xor
push
lcall
pusha
test
sbb
and
arpl
ret
dec
inc
cmp
test
mov
scas
jns
dec
mov
shll
mov
das
dec
in
inc
mov
pop
lahf
mov
insl
sahf
decl
movsl
hlt
ljmp
leave
adc
mov
push
lret
out
dec
mov
xchg
push
mov
enter
inc
pop
dec
mov
adc
jmp
or
mov
jnp
sbbl
test
adc
clc
sub
testb
orb
jecxz
xchg
add
movsl
frstor
mov
jle
icebp
pop
out
repnz
push
faddl
fcoml
jb,pn
mov
xlat
add
adcb
xlat
xchg
sub
push
jge
adc
mov
repz
sub
push
lea
push
addr16
mov
out
dec
fwait
or
adc
mov
inc
inc
inc
inc
mov
push
lea
adc
into
sub
lea
add
jmp
clc
xchg
lret
and
push
das
loopne
push
icebp
ja
cmpsl
mov
push
sahf
notl
inc
dec
dec
rol
int3
pop
push
cmpsl
dec
push
stos
imul
and
ret
cmp
cmpsb
cltd
sbb
mov
or
jno
addr16
fimuls
xlat
push
xchg
out
fldl
or
ljmp
ficomps
cmc
mov
ss
jl
roll
sub
adc
and
aas
jl
xlat
dec
sbb
cmp
fcomp
pop
push
stos
inc
clc
xchg
mov
sub
jne
fsts
aad
adc
xor
jne
cmp
nop
pusha
jo
sarl
mov
or
or
cmp
mov
mov
call
pop
mov
and
cmp
lods
mov
mov
int
push
loopne
push
lret
iret
test
xchg
sbb
sbb
sbb
outsb
and
repz
add
push
test
mov
fisttpll
and
dec
movsl
dec
iret
add
mov
xor
and
dec
cs
popf
aaa
or
repnz
addr16
mov
ror
sbb
cmpl
call
xchg
ss
xchg
arpl
mov
pop
mov
lret
lea
fldenv
outsb
mov
lret
out
jmp
or
out
inc
jne
mov
jnp
movsb
cwtl
and
subb
or
xchg
lods
sub
pusha
xor
cmpb
lahf
mov
mov
mov
lret
addr16
mov
stc
andb
adc
inc
test
aas
stos
aam
test
add
int
subb
adc
jno
jle
enter
repz
sbb
sub
data16
fldenv
inc
add
push
mov
mov
mov
dec
xchg
mov
fld
jecxz
jns
mov
ret
inc
imulb
mov
sbb
or
ds
shr
jne
dec
shl
lcall
pop
lret
outsb
sbb
adc
ljmp
pop
mov
clc
inc
jmp
int
xor
cwtl
push
adc
not
and
divb
scas
xchg
jnp
dec
cmp
push
sahf
fisubrl
mov
std
jo
cld
pop
mov
adc
or
dec
push
xchg
outsl
cmp
fldenv
mov
icebp
ljmp
subb
cmp
xchg
dec
jno
jle
jecxz
mov
gs
stos
js
cwtl
aad
push
pop
pop
outsb
dec
adc
add
add
sti
repnz
test
je
cmp
fildll
orb
sub
testb
mov
js
sub
data16
mov
xchg
bound
leave
pop
mov
jge
test
ret
imul
jl
mov
xchg
scas
fwait
arpl
inc
fcmovb
int
daa
data16
lods
sbb
dec
mov
fwait
sarb
out
sti
not
ror
sub
roll
or
ljmp
xchg
imul
sub
shll
rorb
loopne
ror
ret
jns
cltd
jg
dec
lea
es
mov
mov
pop
add
and
test
add
in
out
les
cli
lret
adcl
sub
pop
shll
ret
jae
lcall
mov
int3
push
into
push
les
adc
orl
xlat
mov
dec
push
sti
ret
cwtl
sti
jecxz
insb
popf
aaa
push
ss
and
arpl
cmpl
jne
or
inc
xchg
aas
test
push
jl
pop
negb
imul
mov
adc
scas
sub
jne
cmp
adc
lods
in
mulb
push
sbb
push
cltd
push
jnp
fcoms
jns
pusha
mov
push
dec
outsl
pop
adc
dec
not
popa
adc
mov
imul
jp
mov
adc
jb
bound
fbld
addl
mulb
mov
push
das
pusha
push
xchg
xlat
pushl
test
sbb
movsl
gs
dec
or
add
push
int3
das
xchg
sbb
mov
xor
dec
mov
push
pop
push
pusha
push
in
int3
adc
aas
jmp
push
mov
or
mull
and
mov
push
in
sub
test
adc
push
rep
xor
sub
loop
js
push
loope
xchg
or
cmp
imul
daa
and
fldenv
xchg
data16
dec
cmp
jnp
push
mov
pushf
add
jae
es
pusha
push
dec
or
jae
and
in
xchg
cli
loope
xchg
cld
test
scas
pop
and
adc
jmp
sbb
lods
jp
jg
xor
mov
push
call
mov
daa
push
lret
cmp
mov
sahf
paddusb
fcoms
xor
gs
repz
jecxz
aaa
dec
je
mov
cs
dec
insb
out
insb
out
mov
popf
mov
fists
subl
out
and
sub
ret
cmp
into
inc
sahf
sti
jmp
repz
fdivrs
aas
or
ret
xor
stos
je
push
add
or
lea
mov
andb
xor
xchg
jne
or
call
sbb
mov
push
push
or
scas
xchg
inc
dec
inc
lds
fsubrp
push
fistl
xchg
pop
sub
shrl
mov
aaa
jnp
pop
call
jge
xor
aad
std
ljmp
fidivrs
cwtl
cs
lret
in
pop
test
mov
push
push
jg
aad
add
loopne
mov
inc
mov
inc
jecxz
cwtl
xor
mov
xchg
cwtl
in
cmp
dec
pop
or
shlb
mov
int
je
add
sbb
stc
mov
call
jle
add
cmp
jb
push
icebp
sub
out
mov
loop
imul
mov
test
sub
mov
ficompl
jo
pop
data16
pop
pop
daa
sbb
scas
mov
xchg
add
icebp
inc
xor
es
shl
jl
xchg
clc
stos
ljmp
sbb
pop
popa
into
pop
rcll
dec
push
ljmp
call
push
sub
or
pop
add
les
call
mov
pop
or
iret
sbb
lock
ja
enter
jo
mov
lret
jo
mov
lahf
in
mov
aad
clc
push
inc
mov
mov
mov
cwtl
jno
or
add
int
std
and
lcall
fildl
into
ret
jno
sub
sub
push
call
test
repz
orb
out
lods
pop
in
shr
or
cmpsl
repnz
outsb
inc
add
push
outsl
inc
repnz
rcl
jne
pop
push
cmpsl
sub
fidivs
cmpsl
out
xchg
push
cmp
pop
out
adcl
adc
int3
jae
mov
pop
pop
xor
mov
out
in
xchg
das
cmova
ja
inc
pushf
inc
mov
ljmp
cld
cld
popf
addb
fisubs
clc
scas
mov
cltd
stos
mov
cwtl
mov
jno
mov
psubusb
mov
xorl
pop
jae
xchg
mov
adc
pushf
push
jb
pop
incl
sbbl
scas
jecxz
fwait
pop
aaa
xor
cld
ret
and
rorl
push
shld
add
xchg
outsb
mov
gs
add
push
fwait
mov
sarl
out
sbb
insl
fs
pop
testl
shlb
mov
fsts
sbb
outsb
inc
cmp
xchg
pusha
push
clc
dec
lret
sbb
outsb
lea
lods
cmp
icebp
xchg
cmp
aaa
pop
in
jecxz
lds
prefetch
push
imul
cld
mov
shlb
adc
out
test
jo
dec
insb
addl
pop
cltd
mov
sbb
sub
lret
outsl
sub
ss
lods
cmp
std
lods
xlat
daa
filds
inc
add
mov
fidivs
clc
icebp
xchg
std
jge
mov
sub
nop
gs
and
push
adc
in
sbb
jg
dec
mov
jnp
cwtl
sbb
addb
xchg
lcall
in
sbb
jmp
fiadds
inc
loopne
dec
in
mov
push
xchg
loopne
push
lods
inc
ljmp
sbbb
inc
mov
out
pop
mov
in
in
cmc
inc
or
push
popf
lods
in
subb
jle
mov
xchg
mov
std
mov
dec
sbb
and
std
jb
pop
aad
cmp
out
xchg
cwtl
popf
adc
push
mov
mov
sbb
xor
leave
movsb
pusha
xlat
mov
jecxz
idivb
sbb
out
xchg
sbb
mov
and
add
stc
adc
mov
rorl
and
jae
mov
je
stos
aam
jg
mov
pop
adcb
fs
int
push
cmp
mov
push
cmp
cmp
jle
jo
mov
stos
mov
cltd
push
movsb
lods
shll
pop
jne
jb
jl
jl
xor
adc
mov
xor
daa
pop
and
jbe
cld
jp
xchg
stos
mov
jne
cs
push
iret
lds
and
in
ret
xor
bound
pop
cmp
jbe
cmpsb
sub
sbb
pop
fs
nop
lds
test
cs
xor
sub
push
frstor
xor
aam
in
mov
sub
scas
ret
jl
or
dec
cld
inc
fmull
test
ffreep
jne
push
push
mov
xchg
iret
jbe
sbb
into
jne
cmp
clc
std
inc
cld
xlat
push
icebp
ficoms
adc
xchg
add
test
shlb
outsb
mov
icebp
lret
adc
mov
push
jae
sub
and
dec
mov
mov
loope
outsl
dec
lret
xchg
andb
js
mov
mov
push
pushf
pop
adc
lret
mov
adc
scas
bound
repz
stc
js
lret
inc
js
testb
in
test
pop
test
jb
dec
cmp
jo
test
mov
jnp
inc
hlt
js
inc
mov
rorl
das
sahf
cmp
push
xchg
mov
jl
lcall
pop
jbe
inc
pusha
jno
inc
out
and
pop
out
mov
add
adc
movsl
stos
ja
sub
dec
xchg
lret
outsl
cs
sbb
xchg
push
fs
lock
adcb
lret
mov
out
stc
push
jb
loope
xor
jne
xchg
mov
pop
hlt
inc
mov
sub
and
push
mov
dec
fcomps
add
not
push
push
xchg
adc
push
adc
iret
addr16
xor
or
call
mov
jnp
clc
repnz
mov
or
fxch
pop
dec
repnz
mov
adc
fs
xchg
mov
rcll
arpl
push
jo
mov
xchg
xlat
pop
stos
sbb
outsl
dec
sti
out
adc
in
daa
iret
mov
xchg
cmpsl
shrb
pop
insl
cmp
stos
xchg
xchg
push
jb
jecxz
jg
mov
cmpsb
inc
int3
movsb
in
dec
mov
out
ficoms
cmpsb
cmp
shr
jl
sbb
sub
dec
dec
mov
pop
int3
xor
lret
jp
scas
xor
and
jl
mov
inc
jno
pop
dec
xor
daa
lea
xchg
and
mov
inc
out
mov
cmp
sub
call
push
pop
rorb
xor
inc
mov
add
pop
or
imul
std
test
pusha
out
xor
daa
cmp
fs
mov
jo
mov
inc
stos
fsubl
aas
cmp
inc
ljmp
inc
push
in
xchg
ds
sbb
jno
mov
sub
lds
fisttps
aad
push
fmuls
pop
test
adc
int3
xlat
shl
fildl
popa
fistpl
inc
xchg
ret
pop
adc
sti
add
add
xchg
push
or
lods
jno
les
add
das
or
jnp
add
add
fs
xor
pop
jne
sub
pop
and
dec
bound
cmpsb
fldt
int3
add
popa
outsl
and
lcall
and
xchg
clc
xor
and
rcrb
out
daa
add
cmc
daa
imul
jns
cmpsb
xor
push
movsb
iret
popa
xor
aad
ret
lock
out
ja
in
pop
cmp
outsb
mov
and
mov
loope
loop
out
cmp
cs
mov
loop
add
sbb
jecxz
int
push
xchg
insl
mov
inc
icebp
mov
out
mov
repz
sub
aam
xchg
jns
shl
mov
mov
dec
mov
mov
add
sbb
mov
lea
and
lock
mov
add
loope
mov
pop
ja
out
in
dec
test
pop
cli
sbb
mov
testb
dec
pop
lret
sbb
or
lahf
add
icebp
push
mov
sbb
outsl
sarl
pusha
lret
rcll
push
test
or
mov
push
ror
mov
hlt
imul
jae
push
dec
mov
jp
fs
sbb
loope
in
mov
notb
xchg
add
out
int3
cmc
sbb
ds
les
fs
aas
xor
in
fcmovnb
adc
iret
xor
and
rcrl
pusha
test
mov
rcrl
dec
cwtl
push
mov
jge
adc
rcl
push
adc
insl
jne
sbb
mov
mov
test
pop
andl
push
mov
sub
sbb
int3
inc
xchg
ljmp
ret
ficoml
mov
test
mov
cwtl
leave
sahf
lock
sub
xchg
inc
fldl
insl
clc
clc
leave
pop
mov
inc
repnz
loope
xor
push
popf
repz
cmp
jle
sbb
ret
shrl
jb
jp
sub
pop
ss
fstl
les
ffreep
sub
pop
out
pop
out
lds
stos
std
cmpsb
adc
gs
stos
test
popa
xor
gs
fdivrl
mov
pop
dec
rorl
sti
push
and
and
cld
and
dec
mov
sbb
and
mov
xor
fdivrl
adc
sbb
jp
js
sbb
sub
add
push
decb
xchg
stos
or
ljmp
push
aam
sub
test
in
jno
adc
and
mov
in
in
jo
push
jecxz
xor
pop
sub
stc
inc
inc
lret
shlb
push
call
xchg
lods
clc
xchg
outsl
roll
and
cmpb
jmp
xchg
sarl
shrl
add
ret
sti
into
jae
insl
in
mov
jne
rcl
sub
xor
jecxz
pop
dec
insl
inc
aas
xlat
scas
stos
test
pop
divl
shlb
pop
call
test
fwait
mov
lock
enter
pop
cmpb
out
dec
xchg
mov
or
inc
arpl
std
xchg
aad
cmp
sub
clc
inc
jb
and
sbb
out
jns
or
mov
xchg
pop
push
cwtl
push
leave
xorb
outsb
fcomps
cmp
out
adc
iret
inc
lcall
mov
jge
adc
rorb
rep
aaa
jne
in
mov
push
xchg
mov
scas
gs
scas
movsb
icebp
pop
cmp
jo
and
xor
cmp
mov
insb
add
aam
frndint
adc
jl
mov
lahf
movsl
xorl
pop
icebp
dec
jle
cmp
jmp
inc
inc
dec
test
dec
inc
imul
inc
sarb
sbb
mov
xor
out
loopne
jecxz
icebp
inc
pusha
cmc
inc
lea
inc
loopne
xor
stc
nop
xor
in
and
mov
pop
cmpsl
dec
test
mov
repnz
and
in
fld
ret
ret
std
lahf
and
imul
inc
sub
inc
cli
mov
dec
add
add
dec
mov
mov
push
and
movups
push
inc
mov
add
jno
push
dec
and
push
es
inc
sarl
mov
loop
sti
movsl
pop
loopne
xchg
xor
mov
pop
xor
jg
arpl
gs
pop
loop
loop
dec
loopne
leave
jno,pt
in
and
pop
mov
out
push
mov
push
jg
add
dec
cmpsl
push
test
cmp
mov
add
sbbb
je
out
popa
scas
ljmp
rcl
sti
push
add
jle
mov
int
dec
jbe
cmc
rcll
and
pop
xchg
nop
sbb
add
js
sub
movsl
ret
cmpsl
mov
pop
xchg
mov
shll
testl
mov
aad
xchg
sub
xor
mov
aad
out
mov
inc
mov
cmpsl
sbb
shrl
add
test
ds
mov
cmp
mov
sahf
push
push
xchg
add
out
mov
test
aaa
mov
push
xchg
movsb
out
lods
clc
aas
or
addr16
pop
adc
xchg
repz
jg
inc
in
sahf
pop
in
sub
jge
cmp
call
cmp
sti
scas
push
test
mov
pushf
in
dec
in
mov
lods
mov
cmc
mov
mov
shlb
dec
push
scas
mov
in
int
pushf
xchg
push
or
sahf
sbb
imul
clc
outsb
add
jecxz
in
aad
fidivrs
push
push
test
add
jno
shlb
in
fldt
mov
push
sub
aas
dec
in
xchg
pop
mov
inc
es
xchg
bound
int
xchg
xchg
movsb
push
sbb
js
dec
faddl
dec
cld
adc
xor
cld
add
test
mov
mov
out
pop
jns
mov
adc
iret
fdivrp
pusha
fwait
xor
hlt
movsl
fwait
push
jne
pop
dec
jns
mov
sub
fadd
ss
ret
cmp
xchg
sub
push
xchg
ljmp
lret
xchg
add
repz
jle
fwait
mov
mov
jecxz
sbb
push
xor
jne
add
or
std
in
inc
or
fs
cli
test
stc
mov
imul
and
out
xor
add
pop
fistl
dec
iret
mov
std
adc
lahf
mov
lds
xlat
cmp
sbb
addr16
lahf
lret
fidivl
or
dec
sub
lock
cld
aaa
push
xor
divl
fldenv
push
bound
xchg
sbb
inc
sbb
stos
pop
add
sbb
leave
shl
out
or
int
sub
inc
pop
xor
jnp
test
dec
pop
mov
adc
dec
cmc
je
test
mov
bound
popa
or
test
push
jnp
jo
shlb
add
inc
cmp
push
lret
outsl
mov
iret
sbb
push
dec
loop
popf
je
inc
sub
pusha
movsl
fs
xor
lea
cwtl
mov
add
xchg
dec
shll
je
cmc
mov
xchg
leave
inc
fdivrp
jle
mov
jmp
xor
cmc
sbb
enter
std
mov
mov
add
int
shrl
pushf
call
jge
mov
push
clc
loopne
pop
jnp
inc
out
lods
push
std
lods
imul
dec
or
add
out
cwtl
inc
dec
and
testb
jg
scas
inc
xor
dec
xor
mov
or
rcrl
pusha
fs
mov
mov
popa
test
lret
push
in
sbb
mov
or
loope
clc
lahf
dec
pop
mov
aas
fisttpl
sbb
lea
adc
add
mov
inc
mov
imul
mov
rcrb
fldcw
fiaddl
push
mov
call
hlt
add
lret
int3
inc
clc
dec
or
pop
push
stos
mov
addr16
adc
stos
adc
arpl
cmpb
cmp
mov
pop
lods
loopw
hlt
je
lcall
loopne
repz
add
pop
addr16
sub
incb
les
and
idivb
addb
or
inc
aaa
pop
mov
push
push
data16
sbb
fisubrl
fistpl
insb
inc
pop
xor
xchg
push
mov
sub
cmpl
in
jbe
and
int3
adc
stc
or
sbb
xchg
icebp
test
mov
xchg
sub
leave
xlat
xchg
and
je
adc
lods
inc
inc
push
cmp
sbb
in
and
xor
sti
jge
ja
sub
nop
cmp
dec
or
lods
and
std
xchg
jo
mov
pop
fimuls
sub
imull
or
pop
scas
mov
adc
pushf
mov
les
mov
test
or
repz
mov
scas
jl
shrb
mov
ljmp
mov
ja
mov
push
movsl
lret
fstl
and
push
mov
imul
mov
mov
push
in
inc
scas
lahf
dec
in
cmpsb
mov
inc
sbb
mov
jl
or
sub
std
rep
mov
or
cmpsb
int3
mov
push
and
dec
inc
addr16
out
out
pop
dec
into
mov
xchg
sub
or
cmp
ds
add
push
sbb
xchg
sub
repz
addr16
aas
sbb
xchg
push
aaa
mov
cmc
lea
cmp
dec
lret
iret
xchg
push
add
inc
xor
inc
dec
test
mov
adc
cmp
lea
and
fstp
pop
mov
sub
mov
aaa
gs
aas
mov
xchg
jecxz
out
fwait
xchg
cmp
shl
mov
mov
test
xor
out
test
scas
and
jno
sbb
cmp
mov
lahf
test
sbb
jle
gs
mov
das
xchg
lea
sbb
or
sbb
jle
mov
sub
pushf
dec
pop
fwait
stc
addr16
cmp
scas
sub
mov
scas
pop
push
fnstcw
add
inc
lcall
xchg
das
stos
push
xchg
push
mov
insb
insl
mov
push
dec
jb
outsb
or
cmp
jo
pushf
jne
xor
push
cmc
repnz
adc
nop
push
push
into
popa
jp
in
fidivrl
fwait
and
lods
xchg
lret
pop
xlat
xchg
cmpsb
inc
and
mov
test
addl
adcb
dec
inc
pop
rol
sbb
push
addb
cmp
jg
dec
scas
and
and
push
js
xchg
xor
xchg
cltd
jmp
nop
je
imul
dec
mov
lret
cltd
jecxz
xor
mov
mov
xor
mov
cmp
mov
imul
idivl
addb
jae
fimuls
mov
cmpsb
sbb
bound
xor
jge
push
xchg
cmpsl
pop
adc
mov
and
xor
dec
shrl
int
jmp
dec
push
jae
mov
pop
xor
clc
adc
and
aad
adc
xchg
pop
jge
mov
adc
sahf
imul
test
xor
sub
pop
dec
aam
dec
dec
sbb
jecxz
pop
push
aad
subl
int3
fmuls
lods
enter
jmp
lret
dec
push
jmp
out
clc
pop
jnp
mov
lds
lret
call
inc
stc
insl
pop
ds
insb
mov
dec
cmp
jns
mov
sbb
in
dec
int
push
jle
repz
mov
xchg
test
jnp
mov
lods
stos
sbb
sbb
js
sbb
xor
xor
mov
outsb
repz
jne
repnz
xchg
aaa
push
pushf
pop
ljmp
in
loopne
cmpsb
jnp
jnp
jo
jmp
mov
nop
mov
fdivrl
mov
push
mov
add
xchg
xlat
sbb
popf
sbb
into
xchg
aam
inc
test
cltd
test
fildll
stos
push
jae
push
pop
in
sub
aad
js
cmc
inc
pop
sbb
int3
mov
mov
xor
loop
iret
jo
in
aaa
inc
cmp
and
mov
je
lds
gs
movsl
or
cld
fbld
or
shll
test
and
mov
arpl
leave
push
jae
cmp
xor
pop
insl
jle
lcall
pop
sbb
xor
bnd
or
or
mov
xor
out
aam
mov
cmp
cmc
push
cmpb
xor
lcall
loop
ljmp
pop
pop
imulb
and
sub
jp
push
rorb
lahf
aaa
ja
enter
iret
jmp
out
test
hlt
mov
in
cmp
push
dec
mov
pop
or
pop
push
or
lock
mulb
mov
mov
push
lcall
push
lds
cmpsl
fs
cmp
das
js
add
xor
stos
stc
pop
jmp
test
int
iret
mov
leave
dec
sub
sti
sti
and
jo
jmp
mov
mov
pop
enter
cmpsl
gs
mov
jge
mov
insl
pusha
in
fdivs
aad
mov
lods
push
ja
sub
mov
shrb
and
or
cmp
ds
testl
lods
adcb
dec
fistpll
push
jae
cmp
xor
fmuls
or
lods
out
push
arpl
push
mov
jnp
sahf
test
fisubrl
mov
sbb
aas
fs
xchg
sbb
rcrb
sbb
sarl
jne
fisubl
mov
lcall
push
ret
mov
lock
andb
fwait
cld
xchg
into
popf
jns
push
push
movsl
arpl
cmpsl
or
sbb
mov
ds
and
fdivrl
shrb
mov
cld
icebp
xchg
cmp
into
add
xchg
mov
cmp
adc
adcl
adcl
int3
js
int3
pop
arpl
sub
out
xor
pop
sbb
mov
test
adcl
adc
cmp
out
sbb
aam
add
shl
mov
bound
inc
push
std
mov
inc
fiaddl
inc
insb
in
insb
cwtl
neg
sub
mov
adc
cmpsb
adc
jecxz
jecxz
rorb
mov
movsb
mov
jb
push
ja
mov
sbb
add
push
add
add
sbb
cwtl
sbb
ljmp
js
out
stos
lea
fs
sub
fdivp
call
es
xor
int
add
sbb
cltd
fdivrs
mov
dec
adc
rol
lods
pop
clc
inc
out
push
pop
es
lods
ljmp
lods
mov
int
cmpsl
test
xor
mov
adc
gs
fbstp
lds
xchg
jge
push
lds
dec
aaa
enter
stos
sbb
sub
xor
fst
lods
scas
xlat
jg
pop
xlat
cmp
mov
pop
pop
push
cmp
shlb
stos
test
dec
jae
clc
inc
je
lock
jnp
ja
repnz
xchg
hlt
mov
jns
push
idiv
clc
cld
jg
xchg
fcomps
in
fmuls
xchg
sub
mov
add
cmp
adc
sub
bound
xchg
fnsave
mov
cmc
jne
cmpsb
xchg
bound
ret
push
pop
mov
jnp
pop
setp
pop
clc
inc
ljmp
cmpsb
cmp
js
jno
out
aaa
mov
je
inc
sarb
xchg
cld
add
out
dec
pop
ja
add
imul
lock
subb
pop
sub
in
loopne
xlat
pusha
fistps
or
aad
popf
mov
push
sub
or
lock
or
xchg
vminsd
test
pop
aad
mov
mov
fldt
scas
jno
ljmp
call
lret
ret
sbb
xor
xor
pushf
repz
aam
out
mov
ja
sub
mov
loop
out
mov
add
ficoml
mov
mov
loop
pop
popa
jae
lret
pop
add
pop
dec
or
cmp
pop
mov
mov
out
fnstcw
pushl
jecxz
mov
push
push
sahf
ret
in
test
fchs
xor
ss
stos
setb
xor
js
inc
jmp
test
shll
cmc
sti
mov
pop
inc
mov
ret
shlb
jg
pop
rorb
pusha
cmpl
inc
scas
pop
stos
mov
fildll
roll
lds
sbb
hlt
nop
sbb
inc
imul
mov
dec
inc
or
cmpsb
stc
subl
mov
icebp
jmp
sarb
xor
mov
mov
in
bnd
int3
test
xor
adc
pop
mov
dec
sti
fs
sar
sbb
adc
popf
cmp
lds
mov
pusha
sub
xchg
jnp
ss
xchg
fbstp
shlb
inc
push
mov
lds
jmp
xchg
xchg
inc
mov
js
repnz
jo
mov
sub
jbe
add
stos
add
imul
fsincos
pop
ss
adc
aam
xchg
dec
xchg
repz
mov
data16
out
dec
not
add
sbb
pop
sahf
decl
popf
shll
mov
push
inc
in
cmp
mov
hlt
lods
add
lods
leave
out
adc
sub
mov
pop
leave
xor
out
xchg
pop
and
mov
jno
test
fs
sbb
out
inc
xlat
add
xchg
cmp
push
pop
shrl
shrb
outsl
rorb
mov
pop
hlt
and
mov
movsl
sbb
lea
xchg
cmpsl
and
scas
xor
sub
jo
in
ja
cmp
icebp
adc
stc
js
xchg
add
and
jbe
loopne
mov
add
or
push
repnz
ret
inc
cs
xchg
inc
stos
lahf
into
repnz
sbb
lahf
inc
and
inc
jmp
lds
jbe
jne
cli
notb
out
into
mov
mov
test
mov
xchg
out
push
mov
in
and
or
pop
xchg
fwait
mov
push
dec
sub
cmp
or
inc
aaa
inc
insb
xor
int
jmp
pop
fcmovne
ds
setne
or
mov
dec
ret
fcoml
or
cli
lock
mov
ffreep
and
add
jl
jle
pop
xor
or
xor
inc
inc
inc
idiv
mov
push
mov
cmp
cmc
mov
gs
jno
and
dec
xchg
and
rolb
inc
dec
or
stc
push
scas
xchg
xor
inc
push
mov
aas
sub
sbb
pop
loope
stc
pop
dec
lock
xor
mov
push
fidivrl
xor
in
fidivs
ljmp
jnp
mov
cmp
addl
ficoms
mov
filds
dec
ret
and
dec
inc
in
lds
pop
out
and
or
mov
xor
enter
outsl
cli
imul
jl
ja
aam
jl
popa
lods
cmpsl
jne
mov
fs
mov
subl
enter
aam
aaa
inc
gs
inc
jno
xchg
stc
fstpl
cwtl
add
shl
add
add
sub
call
mov
mov
xor
outsl
xchg
inc
lret
jmp
pop
mov
cmp
mov
pop
sahf
and
aas
test
cmp
sti
jecxz
inc
test
test
loopne
lret
jmp
pop
fwait
sub
adc
inc
aam
sub
adc
push
test
rorb
aad
push
pop
and
movups
xchg
adc
out
dec
adc
xor
push
int
jmp
sub
mov
jmp
xchg
insb
inc
xchg
xchg
cli
mov
pusha
sti
pop
pop
mov
mov
jge
push
repnz
incb
lods
pop
mov
pop
scas
mulb
negb
mov
test
cwtl
mov
dec
adc
xlat
dec
pop
or
inc
mov
pop
pop
ss
cmp
push
rcll
sahf
mov
and
ret
cld
mov
fnstsw
stc
or
inc
xchg
cmp
lea
gs
mov
arpl
jecxz
pop
inc
hlt
out
cmpsb
addr16
pop
decl
cltd
lahf
xor
mov
dec
clc
dec
pop
test
or
fcoml
or
add
out
mov
push
pop
cwtl
into
mov
cmpsl
push
js
testl
jge
orl
pop
pusha
js
and
push
mov
add
cmp
push
mov
loope
sub
movsl
fldenv
pop
addb
les
cli
push
inc
pop
mov
pop
cmc
push
add
test
outsl
sub
xchg
jno
dec
leave
xor
arpl
repz
inc
adc
sbb
pop
ss
push
add
int
scas
cmp
mov
jae
dec
cli
push
jnp
aaa
inc
lods
jge
addr16
out
cltd
arpl
mov
xchg
mov
inc
hlt
adc
xor
cld
shlb
and
sub
ret
loop
fadds
and
xchg
adc
and
pop
mov
and
sbb
xor
mov
fwait
inc
pop
jl
js
sbb
cmc
pop
in
out
icebp
jecxz
shlb
lret
fisttpll
insb
xchg
loope
outsl
roll
jns
mov
inc
push
cmp
add
jae
push
mov
scas
fstpl
cltd
mov
adc
cli
loope
adc
leave
mov
and
pop
cld
scas
outsl
fsub
in
rorb
mov
lods
cmc
push
jl
jne
rcll
int
mov
or
jne
stc
imul
mov
ds
pop
loope
xor
cmpsb
shlb
sub
mov
jne
stc
sub
and
mov
into
adc
mov
fidivs
insl
arpl
repz
lods
adc
fwait
ret
and
jp
pop
js
cmpsl
enter
test
icebp
imull
add
mov
mov
out
mov
rorl
and
js
lods
imul
aad
add
movsb
sbb
jl
and
pop
adc
cmp
push
push
add
pushf
sbb
or
inc
xchg
xor
mov
mov
cmc
jp
scas
lods
cmpsl
jns
push
enter
jno
add
leave
add
push
mov
aaa
jmp
xchg
rorl
xor
ja
xchg
mov
repz
popa
cmpsl
loope
addr16
inc
sub
mov
fdivs
mov
aam
aaa
sub
sub
push
lahf
push
jbe
xor
into
xchg
sub
and
ficoml
sbb
int
jl
jl
rorb
scas
icebp
aad
ret
jle
mov
movsl
mov
fwait
inc
arpl
inc
pop
in
cmp
push
push
out
insl
lds
dec
cs
dec
out
jne
stos
lods
adc
jns
xor
xlat
push
fmuls
loopne
loop
cmpsb
sti
inc
gs
jne
jl
cmpsl
push
sbb
fnstcw
and
and
gs
ljmp
fdivs
arpl
out
and
ds
out
jns
add
shrb
pop
push
and
mov
dec
xor
lds
das
ja
jmp
pop
add
cltd
mov
mov
cmp
mov
mov
es
testl
pop
test
call
xchg
push
int3
pop
out
pop
jbe
jge
aam
fldenv
sti
test
mov
xchg
jmp
sub
inc
jbe
adc
mov
bts
pop
lods
inc
pop
rep
jns
lock
add
das
fbld
pushf
cmp
pop
and
pop
aad
mov
imul
mov
mov
inc
xchg
add
sub
cltd
lcall
pop
push
imul
and
or
xchg
into
push
sbb
shlb
into
cli
pop
cwtl
dec
pop
into
xchg
pop
out
xchg
sub
push
icebp
bound
cld
pusha
jns
lods
movsl
or
adc
adc
test
jbe
hlt
pop
daa
cs
pextrw
xorl
shll
mov
inc
mov
jmp
fcmovnb
jmp
push
pop
sbb
push
aas
or
jo
or
and
testb
inc
mov
jge
sbb
xchg
jge
fwait
pop
xor
in
lcall
filds
shlb
subb
add
in
or
cld
sub
mov
pop
pushl
loope
test
jle
dec
xchg
shll
mov
push
jecxz
xor
in
out
or
add
mov
clc
adc
jnp
or
cmp
inc
jl
sub
in
lahf
in
test
out
fmull
push
icebp
data16
out
inc
lret
ljmp
leave
scas
cmpl
outsb
add
xchg
cmp
push
push
xor
je
adc
mov
jno
addr16
mov
outsl
clc
subb
pop
xchg
in
mov
or
adc
sbb
pop
outsl
popf
xor
sub
pop
adc
popa
testb
push
and
rorl
jno
and
test
insb
xor
pop
stos
clc
sbb
dec
jb
xor
mov
test
dec
adc
mov
mov
lds
mov
jg
mov
sbb
sub
je
cli
gs
std
repz
in
iret
repnz
andb
adc
cwtl
lods
repnz
pop
add
push
hlt
movsb
or
dec
ret
push
jo
push
dec
inc
jg
and
inc
cmp
jle
mov
xor
jp
dec
stos
loop
je
movsl
push
mov
mov
movsb
mov
xchg
mov
shll
in
cmp
jmp
aad
mov
jo
loop
jns
adcl
inc
adc
mov
sub
cmp
mov
je
movsl
push
sbb
jp
loop
dec
out
aas
movsb
xchg
push
into
and
mov
and
pop
xor
rcll
cmpl
clc
or
and
cmp
arpl
mov
je
aam
sarl
mov
es
jne
mov
or
pop
mov
push
and
mov
out
xchg
cs
sahf
loop
scas
not
aad
cli
shlb
sub
add
jne
lret
in
clc
out
sub
fidivs
enter
sub
cmc
xorl
xchg
cmp
arpl
aaa
dec
cmc
insb
out
xchg
dec
out
push
cmp
xor
inc
add
dec
aam
push
and
inc
pop
xchg
push
mov
int
jbe
inc
or
sbbl
mov
xchg
or
mov
loopne
cs
rolb
mov
pop
cmp
cmp
jl
dec
cmp
clc
fs
xchg
pop
cwtl
test
or
adc
adc
adc
xchg
push
sbb
faddl
xchg
and
ss
and
sbb
pop
aaa
daa
fstp
sbb
pop
ja
cmpsb
pop
jecxz
mov
nop
into
pop
push
sub
imul
shl
mov
mov
push
fwait
js
pop
shl
test
add
lods
jbe
shlb
loop
divl
push
jb
movsl
adc
in
testl
js
jo
nop
sub
js
jns
cmp
daa
out
mov
push
sbb
lret
adc
push
push
jecxz
fisttpl
cmc
mov
js
imul
data16
adc
ffree
out
and
into
dec
add
gs
add
jns
jmp
lret
inc
in
add
jmp
sbb
in
insl
stos
or
xor
add
jns
aad
cmp
xchg
adc
leave
or
scas
push
lret
jbe
lret
xor
adc
fnclex
test
in
imul
bound
push
clc
test
fisttps
std
inc
or
clc
mov
push
cmpsl
add
sahf
mov
das
sub
jecxz
add
in
cmp
pop
adc
gs
cmp
mov
jecxz
imulb
xchg
loopne
cmp
xchg
inc
add
mov
mov
adc
xchg
lahf
in
pop
enter
push
orl
iret
ja
test
mov
std
push
xchg
mov
lods
ret
pusha
loope
cmp
pop
fsubl
lock
lods
jl
adc
out
pop
pop
cmpsl
cmc
outsb
lcall
push
mov
enter
cmovg
aas
sbb
or
dec
lea
cmp
adc
pop
and
out
test
fmuls
and
roll
xchg
inc
aam
or
mov
imulb
out
das
sub
in
xor
shll
in
mov
xor
popf
in
sub
xor
adcl
sub
push
push
push
sbb
cmp
psubusw
xchg
fs
dec
mov
int3
out
sahf
js
ret
cmpsl
out
fst
add
xchg
adc
clc
and
cwtl
adc
call
cmc
int3
movsl
push
push
inc
mov
pop
pop
mov
push
push
ljmp
arpl
mov
outsb
xlat
out
loopne
xchg
fidivrs
test
scas
scas
ret
loop
mov
sbb
mov
add
nop
rorb
test
je
mov
push
fs
mov
enter
mov
int3
test
das
push
push
test
add
dec
push
inc
or
in
mov
xorb
in
stos
ss
sbb
mov
test
imul
pop
push
push
repz
stos
mov
cli
mov
arpl
call
cmpsl
xor
or
jns
std
pop
or
rcrb
inc
and
int
ss
icebp
mov
pop
xchg
fmull
outsb
pop
in
mov
je
mov
stc
jl
jo
in
sub
sub
dec
test
cmpsb
inc
aad
add
leave
pop
push
or
sub
sub
inc
adc
inc
mov
pop
mov
pop
push
call
mov
cmp
cmp
or
adc
out
outsl
data16
cmp
orl
icebp
addb
pusha
enter
sbb
inc
std
aas
xchg
pop
ljmpw
cmp
gs
push
imul
push
lods
cmp
sti
mov
in
lock
mov
mov
mov
popa
or
fwait
out
or
push
nop
arpl
jns
rcr
cmp
mov
sub
sbb
ror
fsubrs
shll
in
sbb
int
jg
lds
ror
cmpsb
or
js
hlt
adc
push
cmp
inc
sbb
scas
mov
testb
push
sti
mov
sysret
push
pop
mov
mov
mov
scas
repnz
xchg
test
in
in
jns
or
or
xor
push
jp
cmp
xor
dec
pop
orb
insb
pop
xchg
sahf
pushf
add
push
std
pop
movsl
stc
pushf
dec
mov
mov
pop
stc
jl
aaa
dec
adc
push
and
dec
inc
cmp
xchg
sbb
pushf
icebp
mov
fstps
jl
or
ret
xchg
jge
movsb
or
sub
jb
pop
stc
mov
pop
pop
pop
cmpsb
and
cmpsl
out
pop
sti
cmovp
sbb
stc
jecxz
test
and
jno
aad
fmuls
push
je
nop
mov
xor
sahf
in
sahf
lods
jl
inc
fstps
clc
cs
fildll
sub
rorl
fsubr
jg
cmp
loop
cltd
adc
cmp
shrb
mov
arpl
xor
cmc
aam
adc
and
das
dec
bound
outsb
cli
addr16
sahf
xor
mov
adc
popa
xchg
frstor
pop
outsb
adc
pushf
mov
jbe
mov
aad
and
sub
ljmp
jbe
js
adc
jbe
std
push
fbld
sti
ret
repnz
push
aad
mov
pop
out
xor
xor
mov
rol
test
push
lock
repnz
or
inc
lret
fnstcw
xor
push
mov
in
and
insb
daa
mov
or
mov
call
rorl
aas
jbe
enter
notl
jmp
jns
fs
test
inc
mov
inc
out
daa
shl
adc
sbb
test
inc
dec
pusha
inc
js
mov
cwtl
cmp
cs
mov
and
repz
xor
movsl
mov
in
jmp
pop
xchg
mov
dec
lret
fdivrl
clc
into
sub
xchg
pop
ret
pop
imulb
sbb
sub
adc
movsl
dec
out
mov
adc
loope
dec
leave
xor
out
in
mov
adc
clc
sub
imul
movsl
xor
mov
fs
insl
xchg
out
lret
lock
adc
push
pop
and
mov
or
push
jnp
fisttps
pop
stos
pop
sbb
fisubs
xadd
in
inc
popf
dec
mov
es
adc
xchg
push
stos
pusha
bound
sbb
in
sbb
jp
mov
pop
sbb
test
js
xlat
sbb
add
popa
int3
movsl
mov
add
ja
outsl
dec
pushf
ss
xchg
dec
jae
repz
outsb
lock
sbb
adcl
mov
or
sahf
or
mov
test
jge
data16
popa
jb
shlb
rcrl
mov
movsb
popf
pop
cli
pop
lret
in
push
mov
jge
popf
sub
clc
lcall
das
dec
and
aam
fldenv
popa
mov
push
mov
jb
mov
lahf
shll
add
push
aam
std
and
fs
and
shrl
mov
push
ja
push
xor
add
pop
add
mov
lret
icebp
stos
pop
lea
xor
jno
jecxz
and
push
int3
sub
xchg
mov
lret
pop
adc
pop
pop
push
scas
in
mov
mov
lds
fbstp
sbb
dec
into
adcl
ss
nop
mov
sbb
std
mov
dec
ficoml
mov
bound
push
loopne
icebp
daa
mov
xchg
sub
sub
scas
jae
shl
and
push
push
and
add
out
add
movsb
cmp
lcall
push
adc
iret
jle
mov
jo
shrl
push
mov
dec
or
mov
dec
and
mov
bound
sub
cld
je
or
aam
stos
inc
pop
fwait
xchg
mov
and
sbb
cmp
into
inc
mov
dec
mov
lret
mov
cmp
mov
shr
cs
sbb
sbb
push
sub
dec
mov
cmp
popa
ljmp
insb
scas
cmp
jb
jne
pop
ret
addr16
aas
lock
inc
stos
gs
out
incb
ds
fsubp
jns
scas
mov
es
adc
out
fs
or
iret
inc
cmpsb
daa
mov
dec
cmc
mov
jl
pop
push
stc
mov
push
and
mov
push
mov
les
push
daa
adc
aaa
jle
cmc
jge
mov
xor
nop
aaa
and
cld
sub
aad
fs
movsl
popa
mov
les
sbb
rol
lcall
mov
mov
jbe
mov
enter
xchg
jbe
in
pop
sbb
dec
js
pop
xchg
jl
je
xchg
in
cltd
jne
pop
sarb
sbb
push
or
movsl
pusha
ss
cli
mov
aas
in
bound
sarb
add
test
sub
jmp
jae
mov
test
rorb
pop
inc
sti
add
or
pusha
jo
xor
gs
incb
mov
pop
fcmovnb
jae,pt
jb
les
in
push
gs
ss
fs
cmpsl
sub
fwait
cmp
xchg
scas
icebp
out
pop
daa
pop
mov
das
lea
mov
jg
in
js
and
incl
ljmp
sarb
testb
jl
fcmovnbe
sub
xchg
mov
notl
loope
push
pop
scas
test
fimull
leave
fcmovnb
outsb
hlt
add
pop
xchg
aas
pushf
dec
jns
test
jp
into
sub
cmp
dec
bound
fnsave
cli
mov
repnz
cmpsb
fs
sbb
sbb
xor
or
mov
mov
or
sub
fyl2xp1
push
mov
icebp
mov
and
xchg
push
inc
adc
int3
pushf
jb
sbb
lret
jbe
and
push
ret
je
les
das
sti
xor
outsl
ja
and
or
scas
int
pop
pop
inc
push
push
into
mov
pop
mov
test
int3
xlat
push
inc
bound
test
std
or
faddl
test
out
dec
push
xor
iret
add
sub
xor
xchg
pusha
jge
pop
mov
xlat
inc
mov
push
call
sbb
fstl
jmp
lahf
jb
mov
test
and
mov
xor
mov
jnp
stos
lret
push
mov
popa
outsl
scas
xchg
mov
add
dec
cmp
repnz
shll
pop
rol
jne
lcall
imul
popl
fdivr
cmp
xchg
sarb
and
lods
sahf
mov
or
in
sbb
dec
out
int3
ret
aad
fidivrl
test
lods
adc
and
mov
sar
cld
mov
or
sti
ljmp
push
sbb
jnp
push
jns
jle
sbb
div
aad
movsl
pop
mov
xchg
sbb
push
mov
add
push
pop
xlat
add
jg
daa
cs
adc
movsb
jmp
push
popa
mov
jl
sbb
lret
adc
ror
sbb
mov
xlat
sub
or
ret
push
int
jns
jnp
cmp
aad
inc
dec
sub
push
jmp
mov
jmp
xchg
cli
xchg
cwtl
les
add
cwtl
push
push
push
xchg
aas
sub
cmp
jns
pop
in
cmp
sub
push
push
or
push
dec
cld
mov
rcll
ficompl
mov
and
pusha
adc
fnstcw
pop
push
sbb
pop
pop
xlat
ret
pop
mov
mov
cwtl
mov
mov
outsl
testb
aaa
push
inc
add
data16
dec
je
rol
xchg
pusha
adc
shrl
mov
fistps
xchg
outsb
ret
movsl
and
push
outsl
and
ds
cmpsl
mov
in
pop
in
sub
cmpsb
xchg
aam
pop
sbb
scas
and
add
adc
and
cmc
icebp
jl
gs
addb
dec
jnp
xchg
rcr
or
push
push
inc
aam
lock
sbb
orb
mov
add
stos
sahf
mulb
mov
sbb
mov
mov
mov
inc
cmp
jnp
and
mov
cmc
mov
mov
xor
insb
sar
fiaddl
sub
and
int
push
es
jnp
xorb
lret
dec
imul
sbb
rorl
loope
cmp
adc
lods
fsubrl
dec
cwtl
shl
outsl
or
lods
xorl
std
push
xor
mov
movsb
inc
xor
pop
es
and
mov
dec
push
arpl
fs
add
imul
adc
sub
xor
mov
outsb
test
sub
jns
aaa
stos
sub
jg
cmpsb
mov
mov
fwait
addr16
shlb
stos
xor
loop
ret
std
dec
push
hlt
mov
pushl
testb
pop
pop
fisttpl
mov
fwait
add
xchg
push
cltd
outsb
or
sub
data16
aad
xor
cmpsb
mov
pop
jecxz
or
inc
icebp
jle
push
cmp
and
in
mov
fildl
push
fwait
pop
pop
xchg
or
xor
inc
xor
loope
add
xchg
addl
fdivr
jecxz
pop
jecxz
sub
maskmovq
punpckhwd
sbb
xchg
lea
mov
sub
cld
jbe
js
aas
push
dec
inc
mov
mov
sbb
push
xlat
and
xor
jecxz
dec
cmp
push
push
fisubs
outsb
out
sbb
sbb
push
mov
cmpsl
sbb
inc
testl
mov
and
and
data16
adc
daa
sub
adc
push
iret
mov
add
mov
pop
lret
push
bound
mov
cmc
xchg
or
xchg
xchg
daa
xor
ja
add
lods
xlat
jae
aad
xor
out
sti
ret
ret
xchg
push
sub
xchg
mov
cmp
inc
or
mov
sbb
test
adc
cs
adc
sub
xor
push
mov
adc
test
stos
insb
pop
mov
lret
scas
addb
jge
push
mov
jl
test
outsl
inc
mov
mov
xlat
mov
push
mov
and
pop
dec
sbb
fwait
repnz
inc
adc
cmpsl
mov
sbb
nop
clc
mov
inc
add
aam
or
jp
and
push
test
cmpsb
or
sbb
and
xor
pop
mov
fadds
adc
jo
inc
jl
and
lret
subb
mov
mov
dec
icebp
sbb
iret
jl
popf
addl
imul
je
jge
adc
add
xchg
pop
fwait
loope
stc
push
add
cltd
sub
int
mov
shufps
pop
out
pop
add
andb
sub
lea
add
clc
adc
dec
je
cld
scas
jp
arpl
mov
dec
stos
inc
or
sbb
mov
pop
inc
lods
jae
incl
clc
subl
rolb
jnp
mov
mov
jnp
aad
scas
sub
mov
pop
idivb
xchg
in
push
pop
jmp
lds
loopne
mov
scas
popf
mov
or
enter
arpl
xor
dec
sub
adc
clc
lret
cwtl
xchg
js
sub
xchg
sub
mov
stc
loopne
imul
jnp
ja
xchg
pop
and
test
xchg
dec
rorb
dec
push
adc
sbb
fs
ret
sub
int
loop
adc
sub
enter
fwait
mov
inc
jns
out
adc
into
mov
xlat
pop
arpl
out
add
scas
aaa
rorl
mov
sbb
in
or
pop
mov
dec
pop
ret
jne
and
and
add
stos
ljmp
sarb
push
sbb
xor
add
jmp
js
lret
jne
xor
ret
arpl
leave
stc
gs
push
add
add
push
inc
and
aam
jl
cmpsl
lea
dec
mov
sbb
pop
imul
mov
mov
daa
addr16
ljmp
add
mov
adc
push
mov
jp
in
outsl
pop
lcall
aaa
dec
fldt
out
lock
sbb
into
or
mov
fcmovnu
jns
aas
aam
dec
ficoml
cmpsl
popf
ja
nop
xorl
cmp
lods
lds
lcall
bnd
cmp
insb
mov
mov
push
sub
push
mov
or
xchg
in
out
pop
iret
mov
sahf
inc
mov
jns
cld
ficompl
int
pop
fcmovbe
int3
cmp
cmp
out
daa
mov
or
jge
lods
flds
dec
test
cmc
add
cwtl
sub
xchg
jge
xchg
sub
imul
cs
std
jle
add
and
jae
sub
in
fisubrs
out
pop
dec
xchg
and
jnp
rol
inc
fimuls
adc
push
cs
push
rorb
add
test
rcrl
sti
imul
xchg
sbb
call
fildll
sub
adc
sarb
inc
inc
fistl
mov
push
out
pusha
or
call
lcall
sbb
popa
fistl
stos
mov
sahf
mov
sub
push
push
cmp
jae
add
gs
rol
das
xor
pushf
jae
hlt
or
mov
sbb
cmpsl
movl
cs
sbb
popa
ljmp
repz
fsubr
insl
jg
cltd
or
push
pop
pop
addb
in
cmp
ss
cmpsl
imul
test
inc
dec
mov
dec
adc
lret
and
adc
jb
xchg
mov
faddl
faddl
pop
push
bnd
inc
adc
cwtl
dec
mull
pusha
or
jns
inc
or
andl
mov
mov
sub
jmp
adcl
stos
push
dec
push
std
jl
addr16
stos
pushf
repnz
les
fists
add
iret
xor
ds
jl
lcall
add
mov
push
push
push
and
pop
movb
jg
mov
and
ljmp
xor
mov
jns
imul
idiv
dec
repz
clc
and
inc
mov
pop
inc
pop
pop
inc
cmp
test
out
movsb
xlat
lock
add
mov
rorl
mov
test
imul
das
dec
ds
cwtl
out
adc
add
mov
imul
pop
pusha
in
mov
out
pop
dec
add
fistps
mov
and
cwtl
push
ja
inc
xchg
int3
subb
and
jbe
add
imul
aam
fildl
mov
out
sub
cmpsl
ja,pt
imul
mov
out
mov
xchg
sub
movsb
cmp
pop
lret
sub
jl
sbbb
add
xchg
scas
push
test
inc
shll
cmp
adc
movl
cmpsl
xchg
push
and
fiaddl
arpl
pop
cmpsb
xchg
repz
cmp
nop
pop
popf
adc
aas
sub
leave
cmc
mov
in
jbe
dec
lea
shll
popf
mov
mov
mov
pop
sub
xor
jmp
mov
call
pop
int
add
int
and
aaa
lock
xchg
cmp
mov
xchg
in
mov
sbb
adc
mov
nop
xchg
in
and
or
sarb
clc
mov
nop
test
lds
or
xchg
stos
js
mov
arpl
stos
dec
xor
sbb
push
mov
xor
daa
push
enter
js
mov
dec
jbe
sub
cmp
test
aaa
hlt
pusha
sub
ss
popa
pop
sub
pop
add
push
inc
shrl
jbe
xchg
push
ret
dec
cmp
lcall
jl
pop
leave
mov
jp
cmc
mov
ds
rorl
jne
and
fs
xor
outsl
cmp
jecxz
out
xchg
sub
sub
insb
jbe
xchg
pop
mov
xlat
neg
dec
enter
test
pop
and
sbb
aam
jns
shll
push
or
loope
bound
call
fldenv
sub
loopew
dec
push
push
clc
inc
push
out
jle
test
sub
lods
ds
aad
jo
dec
mov
xchg
nop
add
rolb
loop
lret
out
jns
or
pop
lcall
or
mov
shrb
cld
in
lock
adc
ret
mov
enter
inc
add
cmp
movsb
sbb
jmp
xchg
xor
sub
rcll
xchg
leave
inc
or
sbb
sbb
adc
clc
ficomps
arpl
shlb
mov
aam
idiv
cmp
xor
in
sti
jnp
sahf
enter
scas
and
cmp
aas
inc
xor
outsb
sub
jno
test
data16
cmp
cwtl
movb
dec
lods
cmp
jg
xchg
stos
stos
mov
stos
pushf
pop
loop
dec
xchg
bound
sub
pushf
fidivrl
push
push
adcl
jmp
push
imull
or
pop
and
shr
lods
divl
pusha
leave
mov
add
pop
icebp
jns
movsb
ds
inc
dec
push
mov
mov
adc
xor
inc
dec
aaa
pop
lahf
mov
roll
mov
jb
jp
push
adc
push
mov
xor
push
pop
jo
sub
cmp
je
mulb
and
in
sub
xor
mov
call
into
xchg
xor
mov
pop
insb
lret
mov
inc
out
or
shll
rcl
out
lock
pop
fcoms
popa
xchg
std
sub
xchg
les
shlb
int
pop
sbb
inc
sbb
inc
mov
popf
xchg
add
imul
inc
imul
stc
aaa
jb
push
sbb
mov
mov
cmp
or
das
pusha
xchg
xorb
dec
dec
out
push
icebp
icebp
aas
hlt
in
or
mov
pushw
xlat
out
arpl
mov
sub
adc
in
call
scas
dec
repnz
cwtl
int
ds
out
or
in
push
pop
jmp
into
pop
mov
ret
shll
inc
jle
sti
push
push
rorb
dec
push
mov
cmp
jb
popf
pop
jo
pop
std
cmp
aam
nop
pushf
xor
cmp
and
popa
rolb
xor
shrb
cwtl
repnz
sbb
negl
inc
mov
fs
xchg
xor
sti
jbe
xchg
sub
xchg
ss
jo
clc
jbe
mov
mov
dec
sbb
arpl
in
push
cmp
add
jns
test
pop
mov
mov
fsubs
nop
xchg
repz
daa
std
outsb
dec
xchg
pop
pop
popf
xchg
std
cmp
rclb
sub
imul
icebp
jmp
repz
cmp
test
jg
cmp
mov
add
sbb
push
shl
push
sub
lock
push
cmp
int
pop
lods
inc
fisubs
incl
roll
scas
ja
cmpsl
jno
scas
cltd
mov
xchg
popa
cmpsl
test
dec
xchg
xor
push
push
push
pop
xor
xorb
mov
in
push
add
cmpl
pushf
and
ret
mov
sbb
sbb
push
push
pop
adc
jae
stc
out
cmp
add
notb
push
adc
pop
repnz
push
leave
mov
xor
repnz
cmp
or
sarb
xor
cwtl
sbb
or
push
mov
dec
mov
dec
xchg
and
and
rcl
push
shll
xchg
mov
and
movsb
andb
and
sbb
out
push
inc
in
jo
cmp
test
fists
xchg
adc
inc
pop
out
loopne
inc
in
add
repnz
push
push
mov
fcoml
xorl
sub
scas
call
js
fadds
jb
jecxz
popa
les
cmovns
jb
ret
mov
out
sbb
and
mov
xchg
test
es
arpl
dec
fimull
repnz
jb
add
push
sub
shll
cmp
test
xchg
out
xor
mov
in
or
loope
sub
dec
int
inc
push
cld
aad
pushf
push
lods
push
sub
fcmove
cli
movsl
push
mov
test
mov
jae
sti
push
pop
jp
adcb
lea
lock
aas
cli
pop
popf
stos
jl
js
push
push
pop
ret
xor
xlat
nop
lods
and
jl
xadd
cmpsb
es
push
int
push
adc
sahf
jp
stos
jns
ret
xchg
push
mov
out
jecxz
sub
ret
mov
sbb
and
push
sahf
pop
stos
xlat
fidivrl
push
xor
rorb
fcomi
and
adc
adc
aad
out
cmpsb
cmp
mov
inc
loopne
sbb
dec
cmpsl
subl
stc
int
sub
sti
inc
pop
bnd
sbb
cmp
popf
xchg
mov
mov
mov
mov
dec
dec
adc
orb
mov
je
mov
std
push
mov
sub
push
sbbl
pop
jmp
inc
push
push
sar
mov
pushf
cmp
es
sti
xor
inc
sub
adc
arpl
ficompl
mov
arpl
mov
fstpt
and
push
jo
repz
mov
dec
mov
dec
sub
icebp
fstpt
call
iret
xlat
inc
pop
push
test
dec
fwait
push
mov
shlb
in
in
adc
repnz
and
and
daa
mov
and
iret
fs
je
pop
pusha
stc
dec
test
xchg
sbb
loop
sti
sub
es
jecxz
ret
xor
test
cmp
push
movsl
fdivp
mov
xchg
out
insl
pop
hlt
sub
ljmp
mov
rolb
pop
pop
stos
sbb
aaa
and
inc
int3
inc
popa
or
sahf
lds
mov
fdiv
fdivrl
jmp
mov
jge
jle
dec
mov
aaa
sbb
cmp
or
sahf
xlat
out
stos
xor
pop
add
adc
movsb
mov
xor
and
or
aam
pop
lcall
fdivrs
mov
ret
aam
pop
fildl
and
out
mov
mov
inc
mov
xchg
pop
shll
sbb
pop
jno
push
sub
adc
fstps
ficomps
add
pop
jne
imulb
lods
hlt
or
adc
sar
inc
aas
push
daa
out
popa
and
mov
loopne
mov
int
in
cli
in
mov
jge
fadd
sub
push
stc
cmp
mov
movsl
repnz
add
jmp
mov
comiss
mov
inc
pop
push
mov
push
sub
mov
pushf
lods
mov
lods
push
ret
xchg
leave
cmp
mov
imul
lret
rcl
mov
pop
dec
data16
loop
lret
cs
movsb
inc
bound
fidivrl
mov
enter
sbb
push
ds
leave
popa
jno
dec
add
or
mov
mov
dec
or
push
gs
cltd
or
dec
ss
fwait
sbb
js
mov
sbb
cli
fdivl
dec
ja
ss
add
ja
dec
or
adc
aas
mov
scas
jne
adc
fisttpll
jno
das
daa
loope
mov
mov
les
mov
sarl
xlat
clc
aam
arpl
push
rorl
xor
mov
andl
add
mov
movsb
stos
adc
pop
inc
xchg
aam
pushf
int
data16
or
jae
jbe
jecxz
xchg
fmulp
mov
outsl
jb
jb
or
mov
dec
sbb
jb
and
push
cltd
xor
scas
outsl
dec
testl
cld
jne
negl
imul
xchg
pop
rolb
aas
add
outsl
lret
xchg
pop
clc
sub
fwait
push
and
aam
pop
mov
imul
push
pop
jo
dec
jge
xchg
mov
cmp
pop
in
inc
outsl
shl
push
pop
cmpsl
into
mov
mov
inc
lock
int
dec
out
mov
push
or
sub
or
inc
sub
xchg
jg
push
aam
js
jno
iret
add
mov
loop
lea
popf
lea
aam
mov
scas
imul
mov
pop
aad
dec
jg
addl
jle
stc
lock
nop
repz
cmp
sbb
in
inc
mov
movsl
lret
out
fwait
cmp
cmp
push
stc
jecxz
fldcw
pop
jo
dec
push
pop
rorl
jno
sbb
addr16
iret
mov
jecxz
push
xchg
mov
cwtl
mov
lahf
mov
adc
pop
movsl
in
out
jecxz
addr16
int3
cld
mov
movl
push
sbb
hlt
inc
pushl
ja
xor
sub
sub
sbb
or
lods
inc
add
stos
pop
call
std
mov
mov
adc
int3
mov
push
jbe
mov
loope
ret
cltd
add
pop
add
cmp
mov
inc
jbe
xlat
pop
popf
jb
aam
cs
inc
shlb
lret
inc
fadds
and
jnp
pop
test
into
push
adc
dec
mov
aam
adc
inc
ss
insl
faddl
mov
cmp
dec
orl
lahf
pop
ljmp
mov
icebp
test
dec
mov
jmp
cmp
or
mov
cs
cmp
scas
fnstenv
push
add
sbb
dec
int3
sub
sbb
pop
js
pop
imul
orl
imul
dec
mov
fmull
icebp
add
in
push
and
popf
lahf
stos
mov
cmpsb
xchg
sub
jl
ja
iret
stc
jns
inc
jne
decb
xlat
jne
lock
mov
sarl
sbb
fcmovnb
in
les
pop
movlps
fmull
xchg
out
push
dec
repnz
cmp
dec
xor
iret
pop
mov
rcrl
push
xor
ffree
mov
pop
mov
lret
inc
adc
cmp
repnz
mov
enter
sub
cmp
enter
mov
inc
sub
cmpsb
icebp
pop
jecxz
out
push
inc
push
xchg
sbb
leave
or
lcall
addr16
cld
stos
xchg
bound
ficoml
call
mov
push
popf
aaa
mov
or
xor
dec
and
mov
sub
loop
adc
xor
arpl
jp
xchg
xor
inc
out
inc
jne
imul
dec
xchg
sbb
mov
rolb
call
enter
push
pop
xlat
sti
ficoml
pop
cmp
and
nop
lods
inc
add
mov
and
fs
push
sti
xchg
and
sub
cld
cmp
sar
shlb
cld
ret
out
fsubp
adc
cmp
shrl
call
inc
std
rcl
das
push
and
popa
jne
fs
cmp
xchg
lods
mov
mov
arpl
andb
mov
mov
push
dec
sub
xchg
data16
test
cmp
insl
push
jnp
mov
dec
ss
jmp
in
jecxz,pn
and
fldt
cmp
mov
mulb
inc
pop
fwait
sbb
push
mov
loop
push
sbb
loop
iret
lcall
dec
jne
xchg
fimuls
es
sahf
sub
outsb
and
js
xchg
les
jnp
sbb
mov
jo
push
insb
imul
lret
push
fldenv
mov
push
xchg
lds
fidivrs
or
mov
cmp
jle
push
test
out
add
inc
pop
out
loop
shr
out
sahf
pop
cltd
insb
mov
mov
xor
push
cld
mov
push
loopne
add
in
sbb
sahf
out
pop
nop
jb
push
je
push
push
pop
inc
mov
pop
fsubp
push
mov
push
stc
xchg
lret
fwait
and
test
arpl
movsb
test
dec
and
xor
pop
xchg
add
flds
enter
pop
inc
sbb
js
test
movsl
fwait
xor
lret
xlat
ficoml
in
mov
push
lret
cltd
lret
inc
mov
mov
lods
xor
and
std
mov
jbe
inc
test
adc
into
jp
or
or
and
out
je
dec
add
inc
fdivl
rcrl
sahf
inc
push
jmp
ds
out
push
in
mov
xchg
fs
addr16
out
xor
mov
adc
cmpsl
jb
xchg
inc
inc
les
cmp
cmp
mov
mov
or
mov
and
push
pop
sbb
pop
cmpb
popa
xchg
xor
mov
push
mov
aam
loope
mov
xor
orl
pop
xlat
cmp
mov
pop
jb
fisubrs
adc
sub
stos
testl
jmp
fs
push
test
jmp
aad
movsl
call
aam
pop
stos
jg
jecxz
cmp
fsubrl
test
movsb
std
imul
dec
xchg
push
loope
ret
test
in
mov
mov
mov
xchg
sbb
push
imul
lcall
pop
and
mov
lock
xor
xchg
shrb
or
mov
shlb
add
jnp
xor
sub
cltd
js
add
arpl
icebp
leave
jbe
inc
fnsave
dec
lds
mov
xchg
mov
adc
pop
add
shlb
jae
scas
bnd
jnp
jnp,pn
mov
xchg
push
out
and
fsubl
adcb
pop
ja
and
out
test
pop
int
sbb
sub
and
es
jb
lods
gs
push
lret
mov
ss
pushf
pop
jno
in
or
and
inc
sub
sub
lods
fidivs
leave
movsl
sub
stc
xchg
mov
add
idivl
cmp
bound
mov
mov
movsb
inc
and
stc
mov
dec
hlt
fidivs
jp
shl
sub
out
jne
sbb
xchg
ja
popf
in
imull
and
dec
push
and
pop
inc
mov
mov
mov
addb
sti
repz
pop
cmp
mov
jbe
sbb
inc
dec
mov
ljmp
inc
cltd
mov
jns
pusha
mov
mov
test
xchg
fwait
pop
iret
push
test
daa
dec
jg
je
jmp
dec
insl
call
jns
fwait
stc
xchg
jns
inc
mov
rol
jnp
add
dec
loop
subb
bound
sub
arpl
test
or
rcrb
sub
divb
and
dec
sbb
lock
fidivrs
orl
pop
shl
fidivrl
xor
push
jmp
popf
jno
mov
sub
xchg
int3
inc
int
out
dec
sub
lods
sub
pop
mov
mov
lea
mov
fsubr
mull
xor
pop
outsl
xchg
jecxz
mov
ret
cmp
mov
test
lret
test
push
cmp
xor
pop
ja
jbe
pop
mov
jge
sub
movsb
mov
rcl
icebp
inc
jge
mov
xchg
jge
aad
out
mov
xor
pop
test
and
rcl
xor
out
push
lret
mov
cs
mov
out
mov
std
dec
push
gs
pop
int3
cmp
les
add
push
bound
push
arpl
sbb
xchg
adc
and
mov
ret
xor
jbe
mov
dec
mov
or
xor
or
std
jecxz
cmpsl
or
add
pop
cmpsl
pop
fmull
popa
sbb
push
push
lock
ficompl
imul
and
movl
pop
movsl
inc
and
adc
push
dec
jecxz
hlt
inc
jg
jns
jno
sbbl
rol
rorb
mov
xchg
mov
or
xchg
lret
insl
dec
loop
add
movsb
pop
or
xorl
cmp
pop
or
mov
xchg
ljmp
fstpt
xor
cmpsb
inc
pop
dec
loopne
loope
test
out
mov
jb
test
popf
pop
mov
mov
dec
pop
and
sbbl
pop
add
enter
outsb
cmp
push
out
cltd
and
lret
leave
pop
push
not
hlt
xchg
negb
into
stc
mov
decl
cwtl
push
cmpsb
pop
pop
loopne
jnp
dec
insl
add
mov
adc
sbb
repz
jecxz
mull
btr
nop
call
das
add
cmpsb
inc
sbb
inc
fmull
movsb
out
jmp
es
aaa
and
inc
out
adc
out
xorb
fs
aaa
jge
into
dec
ss
pop
pop
movsb
mov
aas
pop
or
cmp
cmp
inc
pop
pop
popf
mov
aam
arpl
andl
movsb
hlt
or
repnz
int3
jne
ja
sub
inc
out
stos
sti
ds
inc
imul
insl
jecxz
addl
rcrl
add
lret
sub
dec
adc
pop
int
dec
vpsrlw
mov
adc
mov
cmp
cs
out
push
stos
movzbl
cmp
arpl
cli
call
inc
push
mov
fidivrs
xchg
sbb
repz
fstps
mov
es
popf
scas
out
push
lock
out
mov
mov
jo
dec
adc
pop
jp
pop
fs
or
push
out
std
mov
aaa
mov
rolb
inc
adc
stos
dec
stc
dec
pop
iret
fisttps
ficoms
mov
inc
inc
or
pushf
lcall
ret
jge
add
sahf
cltd
cld
lcall
ret
jle
mov
dec
push
in
pop
mov
or
xchg
cmp
push
lret
test
fcmovbe
push
adc
pop
push
fsubl
and
pop
jbe
sub
sti
arpl
jns
mov
addr16
outsb
cmp
leave
push
rol
sti
mov
data16
mov
or
lahf
stos
cmovne
pusha
inc
mov
mov
push
icebp
dec
or
mov
mov
xor
stos
push
repz
cmp
add
popa
mov
mov
leave
and
les
pop
ror
insl
sbb
popa
jno
or
frstor
pop
xor
movsl
sahf
sbb
jmp
cmpsl
pop
imulb
repnz
sarb
out
inc
mov
int
jae
pop
xchg
adc
scas
adc
imul
js
mov
fdivs
cli
insb
lods
aad
xchg
loope
xlat
mov
dec
andl
sbb
sub
dec
push
fsubs
push
pop
mov
iret
bound
jl
inc
gs
xchg
and
push
imul
ljmp
iret
repnz
lret
mov
nop
paddsb
add
neg
movsb
sar
ds
in
mov
and
rcrb
inc
lret
inc
sbb
mov
mov
xchg
inc
push
mov
mov
into
test
mov
pop
jge
sub
fbstp
cs
sbb
dec
jle
not
push
cli
in
or
fdivl
xor
popa
sub
in
mov
xor
aam
test
in
stos
pop
iret
cmp
fdivrs
jp
sbbl
xchg
cltd
enter
lea
add
adc
xor
xlat
mov
test
push
mov
and
dec
andb
andl
or
mov
inc
jne
adc
cmp
pop
jbe
inc
cmp
and
lods
mov
adc
mul
stos
icebp
inc
out
mov
aad
in
push
lock
lret
mov
xchg
ds
and
sbb
repz
pop
jmp
pop
sbb
cmp
fdivl
ljmp
mov
mov
push
jmp
aas
nop
aam
flds
and
std
jmp
cmp
aad
push
ret
pop
clc
and
cmpsb
pop
sub
and
inc
xchg
cli
ficomps
xor
cli
add
or
aaa
adc
xchg
mov
push
add
mov
out
xchg
and
mov
or
fwait
pop
loopne
movsl
inc
jae
adc
push
push
or
dec
cmc
sub
ret
fwait
out
xor
push
xchg
sti
xlat
enter
xrelease
negb
int
and
mov
loop
imul
imull
in
jb
ja
js
pop
inc
or
test
nop
and
pushf
rcl
call
pop
xorl
aam
cmpsb
imul
lret
sbb
xor
and
or
subl
pusha
sti
and
mov
mov
hlt
sti
xchg
movsl
sbb
dec
cmp
jo
insb
leave
or
pop
sub
or
push
add
jecxz
jbe
bsr
jno
jecxz
lds
out
xor
pop
movsl
dec
sub
mov
mov
int3
xlat
add
leave
jo
pop
xchg
mov
cmpsb
daa
mov
jb
jp
out
test
jns
push
xlat
push
imul
in
add
in
mov
rcr
inc
in
sarb
pop
mov
adc
mov
out
sub
ss
sti
mov
pop
adc
insb
inc
out
fxch
pop
and
mov
add
lret
aam
lods
xor
repz
sti
pop
cltd
data16
adc
ds
mov
mov
sahf
inc
cmc
fimull
les
pop
lret
and
sarb
pop
jb
mov
mov
mov
mov
sub
loop
sbb
ret
ljmp
cmp
and
sub
pop
cmp
ret
push
mov
outsl
mov
and
dec
ljmp
dec
jb
icebp
mov
xor
pop
jge
adc
stos
cmp
les
addr16
fwait
mov
imul
jb
or
out
enter
pop
add
nop
push
jo
int
xchg
es
push
hlt
shl
mov
pop
lret
bound
subb
push
gs
inc
inc
out
cmp
or
mov
test
in
pop
jno
dec
movsl
dec
sbb
or
xchg
dec
xchg
add
add
inc
dec
iret
xor
sbb
sub
mov
pop
or
enter
es
adc
es
fs
sbb
push
xchg
inc
xor
pop
xor
or
jno
cli
dec
ret
cmc
mov
xchg
cmp
stos
imul
movsl
popa
add
xlat
xor
nop
mov
or
sub
movsl
adc
fistpl
pop
adc
and
push
xchg
lret
mov
push
push
clc
iret
push
mov
inc
jb
rorl
fidivrs
xchg
out
pop
repnz
mov
jmp
jae
cmp
mov
std
push
mov
fwait
pusha
xlat
sub
adc
xchg
push
fcomi
arpl
roll
or
ljmp
sub
andb
mov
enter
ret
cli
push
sbb
in
jecxz
mov
xor
and
divb
scas
lcall
jge
cmp
ret
out
cwtl
idiv
leave
mov
inc
sbb
int3
inc
pop
or
outsb
jns
add
dec
in
jecxz
das
mov
movsb
jbe,pt
test
out
fcmovbe
pop
stos
sbb
hlt
rol
xchg
dec
add
shl
out
lds
shl
iret
in
mov
js
out
or
pusha
mov
pcmpeqb
shll
xchg
pop
cld
addl
icebp
in
fisubs
push
jle
ljmp
aam
pop
out
mov
pop
lcall
xchg
jnp
sbb
xchg
xchg
mov
loopne
add
mov
push
jo
fildll
pop
ljmp
scas
mov
sub
push
out
int
das
mov
jne
dec
add
je
filds
mov
les
out
or
loop
sahf
orl
xor
cmpl
repnz
mov
test
mov
sahf
bound
or
stos
popa
push
mov
call
daa
js
sub
dec
jb
pop
inc
push
fldenv
lret
xchg
mov
and
iret
outsl
lock
cwtl
mov
and
outsl
cmp
pushf
push
repnz
test
ss
adc
stos
and
cld
pop
scas
push
cmp
add
fistps
dec
jle
sub
pushf
mov
jno
dec
test
cmp
shlb
push
clc
pop
sub
jmp
pop
push
in
test
and
fcomps
mov
loope
mov
fistpl
pop
jmp
rep
jecxz
std
cmp
push
js
idivl
xor
mov
jle
icebp
mov
hlt
lea
mov
dec
enter
imul
push
cmp
cmp
mov
add
mov
lods
lret
nop
xchg
mov
nop
inc
addr16
je
jo
pop
fidivrl
popa
cli
mov
cs
repz
jb
pop
add
dec
push
leave
fsubr
xchg
lods
mov
xchg
stos
out
clc
inc
or
push
xchg
add
ficompl
sub
or
cmp
mul
mov
loopne
arpl
js
mov
repz
jmp
inc
ljmp
cwtl
lods
xchg
ljmp
lahf
cmp
jecxz
pop
lret
outsb
sbb
push
cmp
dec
data16
mov
xchg
into
pop
mov
imul
les
lret
or
or
jns
adc
inc
shll
ja
jne
ljmp
or
or
xor
mov
enter
ds
imul
das
xor
jnp
xor
mov
outsl
aad
out
xchg
mov
pop
push
fildl
jg
movsl
lods
lcall
inc
loope
addr16
push
stos
adc
mov
fldt
push
lds
cmp
xor
xchg
rcrl
push
fwait
out
mov
arpl
mov
add
mov
rcl
cmp
or
push
loopne
loopne
daa
dec
dec
xlat
cmpsb
popf
add
lock
loope
push
mov
cwtl
lret
scas
lret
ret
jl
xchg
jnp
jg
mov
lods
jg
and
and
xchg
sbb
jae
sahf
mov
xchg
mov
push
cmp
adc
sahf
mov
aad
cltd
fs
roll
push
pop
xchg
cwtl
sub
divb
push
and
imul
mov
or
jmp
mov
mov
inc
out
sub
in
pop
enter
adc
cmpsb
sti
call
mov
cli
or
mov
arpl
xor
dec
mov
cmp
shll
mov
fistpl
insl
pop
cld
mov
mov
pop
or
cmp
mov
push
pushf
shlb
testb
sub
lahf
inc
sbb
mov
adc
das
insb
imul
lods
xchg
and
add
push
out
xchg
and
enter
mov
push
enter
jo
ret
sub
rorl
dec
pop
xorb
aad
mov
push
dec
ss
lahf
mov
xor
cmp
hlt
dec
mov
xor
fwait
push
ja
or
adc
cmp
nop
ds
lcall
aam
int3
pop
xor
sbb
out
outsl
test
insb
or
xchg
aaa
dec
test
data16
fsubrs
movsb
arpl
cwtl
bound
mov
adc
pop
mov
js
xchg
and
test
add
add
fsubs
sub
jge
dec
and
pop
pop
xchg
out
jle
daa
out
jge
in
mov
mov
nop
scas
xchg
jo
outsl
xchg
mov
push
notl
mov
outsl
adcb
fisubs
sub
adc
leave
leave
cli
and
cmp
rcr
xchg
clc
xchg
pop
cld
cmp
jl
or
dec
mov
es
jp
adc
mov
addr16
std
adc
dec
mov
or
add
inc
inc
dec
jge
insl
jnp
mov
sub
outsb
or
out
push
sub
arpl
jno
mov
pop
imul
out
in
addr16
cli
lods
or
repnz
push
divb
cltd
loope
xor
ret
fsubrs
mov
xchg
outsb
test
int
jl
cmp
fst
pop
test
adc
cs
sbb
adc
push
sbb
roll
ja
sub
bound
pop
inc
js
cs
push
dec
inc
ds
outsl
adc
ucomiss
cli
std
dec
mov
adc
movaps
inc
js
sbb
scas
xchg
pop
jnp
push
mov
push
push
cwtl
sbb
fwait
shrb
pop
dec
lret
push
jns
aad
cmp
test
inc
in
repnz
aaa
mov
out
cmp
aas
testl
sub
push
jbe
hlt
xor
dec
jae
mov
loop
ss
lcall
push
fwait
and
push
cmp
sbb
pop
pop
std
xchg
imul
mov
popf
test
xlat
ljmp
in
iret
hlt
cmpsl
pop
out
xor
in
les
adc
jne
inc
sub
mov
call
pushf
imull
mov
loope
jp
jb,pn
add
stc
xchg
test
out
into
fwait
adc
dec
jns
and
movsl
movsl
fstpt
loopne
mov
sahf
xchg
movl
push
shll
mov
stc
lret
shl
clc
sahf
in
sub
xchg
adc
or
dec
mov
xor
xchg
pop
call
sub
lret
dec
pcmpeqd
out
push
pop
fcoml
pop
cmp
push
adc
xchg
and
mov
xor
cltd
cmp
dec
cmp
xchg
cmp
sbb
into
mov
pop
inc
cli
jns
loopne
icebp
icebp
popf
es
jno
sbb
xchg
insl
cwtl
mov
and
xchg
push
adc
cwtl
pop
negb
popa
add
push
in
nop
push
mov
ss
mov
fisubs
jae
faddl
jmp
or
mov
lods
lret
rorl
mov
xchg
daa
sbb
adc
mov
lcall
push
outsb
xchg
jnp
push
in
test
gs
jb
sti
imul
test
daa
sbb
mov
mov
popf
jno
and
mov
push
cmp
and
xor
push
test
sbb
push
mov
lods
pop
lret
xor
shll
int
mov
fwait
or
outsl
mov
cld
sbb
push
negb
jbe
and
mov
and
imul
mov
cs
lds
ret
cld
add
xchg
popa
push
push
mov
insb
xchg
or
dec
mov
sti
incb
repnz
mov
out
out
test
cmp
xchg
mov
mov
sbb
or
or
mov
inc
xchg
data16
sbb
sti
jp
insb
or
mov
aam
mov
fs
scas
cwtl
hlt
out
and
mov
sub
xchg
or
mov
mov
hlt
mov
aaa
mov
addr16
divb
mov
in
push
insb
mov
es
sar
aas
jno
mov
int
fldpi
imul
fwait
adc
pop
call
mov
xor
add
arpl
stc
mov
test
out
jg
push
lret
cmc
hlt
cmp
gs
inc
sbb
insb
sub
cmp
cmp
sub
inc
pop
into
add
adc
mov
sbb
out
push
mov
cmp
xlat
fst
addr16
popa
push
jb
xchg
aas
jmp
dec
inc
sub
sbb
fnsave
cmpsl
es
jmp
or
mov
leave
adc
xchg
adc
sub
gs
ret
add
sub
jne
push
nop
sub
cwtl
sbb
mov
test
pop
daa
mov
les
subb
add
mov
mov
rclb
pop
out
dec
ror
insb
cmc
jae
and
movsl
out
jo
jp
sbb
test
sub
aam
dec
insb
aam
push
insb
mov
or
stc
mov
frstor
dec
daa
inc
test
clc
xchg
and
popa
enter
andb
out
push
lea
lcall
inc
mov
push
inc
and
adc
and
inc
and
xchg
push
xchg
imul
sbbb
lods
adc
lret
xor
xor
and
dec
rcr
or
xor
mov
icebp
call
jle
cmpsb
fwait
sub
bound
cmpsl
jo
idivl
ja
aas
cmp
pop
outsb
add
idivl
mov
and
or
xor
mov
dec
push
inc
pop
jbe
inc
or
sub
shlb
data16
movsb
mov
push
repnz
xchg
bound
faddl
ljmp
loopne
cltd
pop
repz
rcrl
shlb
inc
sbb
xor
mov
iret
xchg
jl
mov
xchg
xchg
loope
shll
cld
push
rol
inc
rcll
repz
addr16
push
gs
adc
jbe
mov
mov
enter
inc
inc
es
fdivrl
loopne
sbb
scas
pop
fldlg2
dec
decb
cmpsb
outsb
call
shr
jecxz
push
iret
lret
jg
arpl
cmp
xchg
daa
scas
neg
std
shlb
mov
inc
lahf
ss
mov
out
inc
lea
js
test
ss
aas
nop
dec
in
cmc
aad
mov
mov
dec
sbb
fsubr
lods
add
lods
jle
sbb
fs
test
xor
xchg
movsb
push
int3
pop
mov
xchg
hlt
inc
cmpsl
fs
push
jne,pn
enter
inc
jnp
icebp
mov
or
cmp
cmp
mov
mov
jbe
fwait
jae
je
or
jle
mov
xchg
pop
sti
and
add
lret
dec
mov
dec
movsb
call
jne
pmaxsw
jmp
cld
int
cmp
insb
dec
clc
dec
mov
mov
fsts
rorb
add
lods
mov
rol
popf
hlt
mov
or
ljmp
out
add
cmp
fistps
and
or
xchg
cmc
dec
scas
negb
mov
add
inc
mov
std
push
fs
enter
xor
call
rcrl
insl
cmpsl
leave
push
rol
adc
test
in
hlt
aam
sti
pop
mov
mov
xorb
popa
rcl
xchg
sub
mov
leave
mov
stc
sahf
mov
adc
mov
mov
in
add
push
std
mov
jb
mov
popa
push
hlt
jb
shl
sub
arpl
repnz
mov
sti
movsl
ljmp
cmp
mov
sub
leave
imul
aam
add
test
rclb
cmp
inc
sub
push
or
lds
or
mov
mul
jbe
scas
adc
cmp
arpl
mov
pop
xor
inc
xor
mov
insl
enter
mov
loop
jmp
add
ja
mov
ret
adc
cmp
cmp
inc
lock
and
push
or
mov
xor
mov
sub
and
cmp
pop
add
ret
insb
adc
out
out
cmp
pop
and
cs
or
je
mov
test
sahf
in
jl
ficomps
sub
lret
sbb
mov
push
loopne
mov
jmp
or
scas
addr16
addr16
arpl
add
sub
popa
je
inc
orb
push
je
into
loop
add
cmp
int
mov
lods
mov
add
loope
jge,pt
adc
inc
shl
or
jno
xor
nop
push
jno
inc
jo
xchg
mov
inc
gs
int3
inc
adc
jmp
or
pop
or
add
lds
imul
stos
movsl
cmp
mov
in
dec
mov
xchg
gs
dec
push
adc
add
ja
ret
xchg
out
lds
call
fdivs
push
fisubs
addb
mov
mov
adc
xlat
inc
neg
sbb
push
lock
jmp
dec
cmpsl
loop
pop
jge
in
jmp
and
dec
sbb
repnz
push
lret
aaa
fimuls
sub
adc
mov
lock
outsb
sub
inc
adc
in
push
fwait
dec
orl
fadds
xor
outsl
data16
stc
adc
jbe
inc
mov
aad
cmp
jne
fiaddl
frstor
idiv
xlat
mov
out
dec
adc
aaa
insb
fidivrl
jo
lret
and
and
lret
leave
shl
mov
stc
sbb
mov
ds
inc
andb
cmp
in
xchg
push
arpl
xlat
inc
fdivr
jnp
pop
loop
jge
fsubrs
push
xchg
xchg
cli
sbbl
sbb
sbb
xchg
std
xchg
and
sub
dec
in
jle
dec
pusha
test
loope
mov
je
pop
add
add
mov
mov
stos
xor
pop
push
icebp
pop
mov
xchg
inc
cmp
push
and
sub
mov
mov
std
sarb
push
push
call
cmp
xchg
out
addr16
sub
push
dec
or
test
test
mov
mov
call
nop
scas
sbb
lds
mov
push
jb
inc
push
cltd
inc
mov
fnstcw
mov
xor
repz
clc
mov
ret
hlt
inc
aas
xor
push
test
lock
mov
and
scas
jns
xchg
pop
mov
rcrl
loope
cmpsb
std
or
mov
add
dec
int
out
enter
test
out
imul
mov
and
nop
jp
mov
in
shrl
dec
test
lods
jmp
mov
fwait
pop
pop
pushf
jp
jge
cmpsb
je
out
push
ret
out
scas
adc
mov
mov
shlb
ffree
cmp
inc
sahf
pop
xor
mov
sbb
or
pushf
inc
mov
lcall
jmp
sub
or
mov
ret
std
pop
scas
pop
in
dec
dec
cmp
popa
sub
push
push
out
jp
fadds
test
xchg
movsb
push
scas
jb
xchg
and
mov
xchg
es
mov
mov
push
mov
sub
mov
lock
xchg
loope
lds
shlb
es
lock
stos
push
and
xchg
push
jne
jnp
int3
cmpsl
and
pop
out
jg
sbbb
push
rol
clc
inc
rclb
jb
add
mov
push
sarl
dec
ljmp
es
add
adc
fs
imul
and
and
pusha
cmpsb
mov
shll
pop
es
adc
ja
andl
xchg
mov
and
fsubs
test
lds
add
lds
dec
add
push
arpl
std
mov
nop
in
js
and
mov
pop
xor
jo
push
sahf
mov
stc
adc
negb
mov
cmp
push
rolb
stc
mov
nop
aam
fsubrl
pop
fldpi
add
xchg
push
outsb
cmpb
xor
inc
inc
cli
test
lods
inc
or
xchg
mov
jge
loopne
mov
outsl
dec
fcmovu
cltd
push
mov
les
push
jp
out
pop
adc
jp
inc
sbb
push
add
xchg
xorl
mov
repz
adc
push
lcall
mov
lret
je
test
xchg
fs
fstpl
jp
cwtl
in
je
xchg
jg
pop
jae
sbb
sbb
push
stos
mov
dec
dec
cmp
sub
aad
or
add
insl
jmp
add
ds
aaa
test
popf
shrd
jg
movsb
jmp
sti
add
push
out
imul
notl
add
jb
sub
cmc
xor
and
popf
jo
jb
mov
pop
sub
sub
jge
ljmp
cmp
mov
pop
out
xchg
mov
inc
test
ljmp
mov
jle
pop
mov
lahf
repz
cmp
sbb
and
mov
cmc
sbbl
ds
clc
andb
arpl
cld
test
push
movb
or
xchg
aam
or
or
idivl
xchg
pushf
inc
sub
mov
je
shrl
mov
or
into
xor
cs
out
fadds
stos
mov
jb
jge
fsubrp
inc
mov
shl
das
xchg
sbb
mov
dec
roll
cltd
js
mov
adc
push
jo
mov
aam
insl
sahf
je
nop
mov
cmp
jb
jne
inc
xor
or
mov
adc
xchg
mov
gs
xor
fidivl
cmp
dec
scas
enter
mov
push
stc
test
in
inc
stos
inc
and
cmp
pop
mov
pop
dec
fnstcw
pop
out
sahf
cmp
mov
movsb
push
iret
sbb
ds
fstpl
fldcw
sbbb
mov
dec
mov
dec
and
popa
jmp
mov
dec
popf
cmp
inc
sti
mov
mov
sti
sub
sbb
cmpsl
rcrl
or
cmpsb
cwtl
mov
xchg
inc
scas
inc
repz
sti
jae
mov
xor
dec
cmpsb
lcall
inc
mov
xchg
mov
push
fsubl
movsl
stc
imul
dec
cmpsl
push
popa
jp
and
popf
add
cwtl
test
aaa
icebp
add
pop
je
jle
insb
js
scas
pmulhw
xchg
sub
cmp
sub
test
into
xchg
gs
scas
insb
mov
cmc
sbb
xchg
pop
enter
pop
or
fdivrl
mov
pop
cmp
mov
bound
fs
add
mov
adc
stc
push
cmp
scas
jnp
or
mov
dec
stos
xchg
jg
sbb
jge
xor
sub
mov
inc
or
xchg
mov
call
jnp
adc
lahf
es
imul
insl
mov
shr
out
addl
les
mov
mov
inc
fcomps
insl
and
push
stos
mov
sbb
add
sbb
sbb
movsb
cmp
mov
call
push
and
popf
int3
add
inc
mov
and
mov
in
cmp
dec
fisubl
mov
push
sub
mov
pop
addr16
fldcw
clc
pop
xorps
das
ret
push
inc
or
outsl
adc
je
nop
or
xor
stc
xchg
loop
or
sub
cmp
push
or
mov
or
test
int3
cmp
loopne
pop
daa
mov
mov
rcr
fdivl
fcomip
inc
rcrl
dec
push
jmp
push
lahf
pop
sbb
xchg
lret
das
cld
inc
ja
outsl
fwait
sub
movsl
push
mov
mov
test
lods
pop
inc
push
push
insl
jecxz
add
into
cs
sbb
mov
jne
clc
dec
imul
nop
adc
mov
scas
cld
roll
pop
movsb
cmp
stc
mov
push
gs
insb
dec
push
mov
push
les
fs
jmp
insb
dec
leave
adc
movsl
mov
and
push
fs
fwait
cmp
aam
jl
inc
cmp
mov
int3
push
les
cmc
add
pushf
imul
jl
pushf
loope
test
out
sbb
int
cmp
add
add
or
push
and
sbb
mov
pushl
cmp
pop
js
sbb
mov
test
xor
or
or
sub
add
and
daa
ret
icebp
jge
gs
sbbl
js
lods
lret
call
push
test
push
xchg
add
js
or
lods
fnstsw
stos
pop
jmp
cmc
fsubrs
lret
mov
mov
sbb
add
jl
xchg
xchg
xor
push
sub
movl
orps
push
scas
jecxz
fmuls
mov
ja
jo
daa
mov
arpl
into
pop
xor
lcall
mov
outsl
aaa
dec
cmp
mov
rcll
push
outsb
pop
xchg
lret
aas
adc
imul
jbe
ret
add
out
inc
mov
or
insl
repnz
xor
mov
mov
mov
xor
fisubrl
and
mov
sub
cmp
mov
push
xchg
push
mov
popa
stos
push
aaa
xor
mov
popf
lahf
push
mov
mov
divl
pop
in
xor
mov
add
pop
lock
in
stc
add
mov
and
jne
cmp
push
jne
out
inc
pusha
push
negb
outsl
testl
sbb
mov
mov
in
lcall
push
repnz
and
popa
clc
sub
lret
dec
cmp
inc
push
cmovle
mov
xchg
jmp
lods
xor
xlat
mov
test
insb
sbb
or
cmc
es
mov
insb
orl
fimuls
int
sub
push
jo
int
ss
jg
sbb
jge
cltd
sub
stos
cmp
jge
xor
aam
push
jmp
dec
decb
push
cmp
stc
fwait
push
enter
mov
shrl
shll
dec
jb
rcl
es
test
ss
jecxz
movsl
pop
imul
or
adc
iret
sub
cwtl
int3
inc
mov
js
outsl
stc
aad
adc
ds
fcompl
js
push
aaa
jmp
inc
popa
sub
mov
mov
dec
xor
jno
inc
sahf
add
das
movsb
or
jne
test
add
in
xchg
cwtl
jns
inc
cltd
lock
inc
cmp
lahf
jb
xchg
lds
push
mov
push
cltd
push
lods
or
cld
test
pusha
testl
adc
roll
mov
cltd
je
xor
ljmp
push
xchg
xchg
stos
adc
inc
out
add
ja
pushl
stc
adc
movsb
mov
lea
testl
das
sub
mov
jp
xchg
push
stos
rorl
push
xlat
loope
insb
jae
inc
test
jl
addr16
lret
popa
or
testl
dec
jae
dec
add
push
andl
mov
shrb
inc
fdivrs
outsl
insb
mov
push
pop
push
xor
pop
xchg
inc
mov
and
jns
loop
fdivr
xor
fiadds
mov
add
cmc
dec
or
shlb
jle
faddp
arpl
sbb
pop
mov
std
adc
dec
sub
jo
dec
repz
jo
add
xlat
in
pop
loopne
mov
mov
mov
inc
movsb
adc
or
movsb
sbb
sbb
lcall
jg
popa
outsb
int
mov
add
cmpsl
into
movsl
push
incb
je
xchg
adc
stos
sub
mov
mov
and
and
out
add
into
xor
pop
nop
sub
mov
mov
mov
mov
cmp
in
adc
imul
adc
repnz
push
arpl
aas
int
sub
pusha
jno
fmuls
mov
mov
xrelease
jecxz
std
shl
arpl
xchg
out
jae
cmp
cltd
mov
shll
sub
sub
sbb
lcall
mov
or
jne
stc
xchg
out
sub
outsb
or
imul
push
cmp
mov
scas
cmp
int
xchg
push
mov
lock
pop
rolb
jb
sub
jmp
xchg
in
insl
add
movsl
fwait
mov
sbb
mulb
popf
inc
cs
mov
dec
test
or
mov
inc
inc
sub
dec
aas
push
sub
xchg
mov
push
mov
sub
mov
addr16
jmp
mov
mov
out
fidivrs
popf
push
mov
repz
jb
nop
data16
mov
sbb
jns
outsl
inc
dec
add
fsubrs
lret
sub
pop
mov
jo
or
jecxz
jge
pop
mov
mov
pop
jmpw
push
mov
fidivl
icebp
pop
pop
nop
pop
mov
out
xlat
sub
sub
xchg
hlt
popa
adc
sub
lahf
call
imull
insb
pop
xor
and
out
jmp
adcb
or
js
rclb
pop
jmp
in
push
cmp
jb
jle
jl
clc
cmpsb
xchg
adc
xor
lahf
lods
add
sbb
cmc
cltd
pop
pop
call
fstpt
mov
adc
imul
data16
fisubrs
mov
pop
xchg
dec
cmpsb
xor
xlat
xchg
and
adc
add
xchg
int3
jmp
loope
adc
gs
aas
je
lock
leave
mov
xchg
or
mov
or
sbb
xchg
cmp
aaa
mov
cmp
mov
adcb
adc
adc
in
lods
mov
cwtl
hlt
sub
xchg
push
mov
mov
mov
push
push
inc
movsl
mov
mov
and
adc
popf
pop
les
sbb
xchg
and
jecxz
xchg
insb
lret
decl
es
outsb
xor
mov
mov
les
dec
and
in
adc
cmp
inc
xor
and
xor
xchg
push
insl
fsts
jmp
lds
mov
mov
imull
movsb
dec
mov
sbb
fldenv
fadds
fwait
jl
push
xchg
inc
xchg
ret
and
jae
push
xchg
jmp
rclb
fs
jg
rolb
addb
in
add
je
aad
cmpsb
cltd
cmp
lods
pushf
imul
mov
cmp
sub
fiaddl
icebp
pop
data16
call
ja
out
and
lds
iret
fsubrl
sbb
pop
clc
sbb
sub
movsb
inc
and
pusha
xor
sub
dec
in
cmp
xchg
push
stc
mov
cltd
lahf
mov
jge
and
mov
xor
sbb
lahf
dec
decl
aaa
int3
outsb
mov
enter
or
stos
fmulp
in
js
push
popf
call
cld
inc
mov
pusha
loopne
mov
fists
push
pop
in
sbb
adc
push
push
xor
mov
jp
enter
mov
push
pusha
icebp
cmp
lret
dec
or
push
leave
fwait
stos
dec
add
pop
daa
push
mov
pop
sub
lret
cwtl
mov
and
inc
xchg
stos
pushf
lock
addr16
mov
imul
lods
rep
xchg
push
leave
add
or
icebp
test
add
mov
jnp
inc
addl
dec
xor
fdivrs
push
pop
sahf
scas
mov
negl
push
loopne
push
push
stos
inc
xor
dec
ss
xlat
data16
jbe
sub
cmp
mov
ficomps
shrb
insb
pop
enter
or
arpl
mov
repz
dec
ret
in
pop
into
inc
bound
outsl
lahf
hlt
inc
idiv
add
lcall
push
testl
xchg
repz
dec
sbb
xchg
or
add
inc
scas
inc
xchg
xor
fnstsw
cmpsb
fcoms
cmp
jne
xchg
inc
add
out
out
lcall
sub
adc
leave
in
xchg
aad
sub
clc
mov
sub
jnp
das
je
or
mov
mov
inc
sbb
adc
adc
rclb
andb
xchg
push
fstpt
aaa
xchg
dec
xor
js
enter
jae
sbb
out
xor
cmpsl
shll
xor
xlat
icebp
lds
cmpsl
push
mov
fbld
and
xchg
mov
xchg
sahf
cmp
inc
pop
movb
pop
sbb
or
pop
sub
imul
xor
ds
xlat
sarb
push
sbb
test
inc
iret
cs
ss
xor
xor
mov
mov
and
and
mov
mov
popf
adc
and
lcall
jmp
pop
popa
fadds
fwait
dec
arpl
lret
data16
push
test
dec
cmp
hlt
sub
sarb
jo
arpl
insb
jns
adc
sbb
mov
mov
pop
int3
sub
xor
sti
cmp
shll
add
std
or
or
imul
aas
fistpll
mov
dec
push
shlb
repnz
push
jmp
and
sarl
lahf
je
ret
loopne
jl
pop
xchg
jns
sahf
dec
outsb
push
push
test
mov
insb
mov
inc
ja
sti
inc
arpl
shrb
push
dec
jns
je
cltd
cmp
xor
loope
push
sub
sbb
jge
ret
inc
mov
lods
lods
xor
lock
or
cmp
xchg
xor
adc
sub
mov
ret
dec
enter
das
movsb
dec
fs
jecxz
xorb
jbe
jb
cmp
shll
std
mov
enter
in
adc
mov
cmp
jns
cld
push
sub
jns
push
xor
jle
xor
xchg
outsl
xchg
push
pushf
imul
jle
js
inc
sub
js
daa
inc
loop
out
loop
repnz
inc
mov
mov
lahf
into
add
jns
pop
movsl
ret
mov
cmp
shll
mov
adc
ljmp
xor
xchg
nop
jno
mov
xchg
loopne
das
pushf
arpl
pop
mov
xchg
push
sbb
pop
and
dec
pushf
dec
lcall
and
inc
add
fisttps
mov
rcl
out
sbbl
push
lret
cmp
or
test
push
add
add
cld
sub
clc
mov
xor
int3
xlat
or
dec
mov
mov
add
jns
mov
dec
xor
add
addb
jmp
sahf
jb
pop
arpl
daa
cmp
push
jne
sbb
cmp
or
xchg
inc
ret
inc
push
mov
aam
cmp
stos
in
and
sarl
sbb
in
cmp
cmp
adc
mov
cmp
scas
add
repnz
inc
xchg
mov
iret
jmp
addb
scas
loopne
xor
mov
sbb
mov
mov
test
shrl
pop
popf
pop
jae
push
inc
jnp
test
cwtl
mov
stos
xchg
cs
loope
lods
push
mov
push
mov
lret
jp
jae
je
inc
imul
std
and
daa
jnp
push
jp
jge
mov
repz
sub
add
cld
sbb
xchg
adc
adc
inc
sub
and
notb
scas
add
sbb
jnp
sub
pop
mov
dec
cmp
call
movsl
jne
mov
push
mov
clc
in
jle
test
push
popa
leave
sti
cmc
sub
xlat
dec
and
mov
cmc
dec
sarl
jmp
and
xor
shrl
rcl
out
mov
push
push
jb
xchg
dec
stos
ds
js
rcrb
sub
xchg
or
andb
and
test
nop
inc
sub
call
mov
sbb
call
inc
add
mov
bound
add
sbb
and
std
ljmp
add
jmp
pushf
push
popa
sub
pop
mov
movsl
leave
adc
mov
movsb
int
idivl
xlat
pop
sbb
in
stos
aad
in
add
imul
aad
scas
mov
jb
pop
pop
out
sub
fwait
loopne
sarb
xchg
mov
push
mov
sub
pop
cmpsb
dec
push
sub
cmpsb
rclb
daa
mov
aaa
jg
fwait
pop
or
sub
in
jno
add
repnz
mov
mov
dec
push
dec
push
mov
pushf
or
add
mov
cltd
imulb
int3
dec
out
shrl
sub
jnp
cltd
addr16
rorl
test
movsb
sbb
dec
sub
testb
pop
in
cmpsb
repz
mov
xchg
int
pop
shrl
and
loopne
iret
xor
iret
push
shll
and
add
std
dec
inc
dec
cmpsb
fs
rol
sub
add
xlat
fs
pop
dec
fsts
lret
imul
cwtl
inc
stos
mov
or
add
orb
or
sbb
push
movsb
cld
pop
dec
push
pop
addr16
mov
push
aaa
pop
and
idivb
jg
ja
nop
stc
jmp
cmpsl
mov
mov
cmp
lret
out
mov
dec
repnz
mov
xor
les
sbb
or
loope
mov
xor
sarb
or
cli
lret
daa
insb
hlt
add
daa
lret
int3
cltd
mov
dec
int3
mov
icebp
or
lret
hlt
xchg
and
xor
sarb
mov
daa
ss
shll
fwait
mov
mov
test
icebp
push
cs
shll
imul
and
adc
loop
scas
cmp
mov
into
imulb
adc
out
pop
cltd
stc
xor
in
push
in
or
movsl
mov
fwait
stos
call
push
int3
or
nopl
mov
sub
out
sarl
and
orl
daa
call
repnz
mov
cltd
mov
fidivs
scas
xor
fldt
mov
cld
lock
adc
loopne
xor
stc
fs
lcall
lods
sbb
insl
jle
arpl
xchg
into
mov
sbb
xor
pop
mov
cmpsb
cld
int3
and
add
movl
xadd
adc
aas
outsb
jle
test
adc
jb
leave
cwtl
stc
lret
xor
fbstp
adc
add
push
sbb
loop
inc
mov
cmp
cmp
dec
dec
cmp
pushf
iret
or
orb
hlt
out
push
sbb
clc
pop
and
ret
fwait
mov
mov
mov
popa
icebp
int
shrb
in
add
jg
jl
ja
push
roll
sbb
jge
jnp
stc
push
or
push
jnp
mov
mov
xchg
or
testl
dec
xor
sub
shrb
dec
push
sahf
lcall
jb
movsl
xlat
inc
mov
lret
mov
jmp
mov
pop
rclb
cmp
push
lds
fidivrs
clc
js
push
cmp
outsl
mov
mov
xor
and
loope
aaa
clc
and
sub
rcrl
pop
add
cmpsl
xchg
fcoml
or
loope
sti
lods
negb
push
jecxz
lret
cmpsb
add
push
dec
cmc
cmc
test
xor
xchg
inc
nop
cs
push
hlt
cmc
ffree
or
mov
xor
ret
test
jne
pop
ljmp
test
movsb
cltd
out
fbstp
int
or
mov
push
pop
andl
inc
xor
add
out
push
sub
pushf
pop
cmp
mov
sahf
mov
cmpsb
lret
adc
in
dec
jge
sub
mov
lret
cmpb
push
jb
orl
mov
mov
pop
push
inc
xchg
jecxz
cmp
aaa
xor
inc
outsb
lods
cwtl
aaa
pop
xchg
ds
incl
and
pop
fsubrl
cmp
fwait
cwtl
fldcw
xor
scas
popf
ss
pop
cld
stc
pop
out
jne
push
lds
sbb
cwtl
lret
mov
cs
sbb
inc
mov
fistpll
push
inc
loopne
sbb
add
add
subl
cmp
mov
idivl
fbld
js
sub
jb
push
dec
rcll
mov
add
loopne
cmova
mov
push
xor
mov
mov
and
sub
mov
mov
out
sub
hlt
scas
push
mov
stc
inc
jns
cmp
inc
stos
xor
mov
cli
adc
dec
jge
fnstenv
test
or
fisttps
jae
cmpsl
pop
aad
mov
pop
mov
out
aaa
aam
popa
xchg
fwait
dec
xor
add
lock
lcall
inc
daa
cmpsb
inc
ret
pop
lea
jne
pop
stc
pushw
pushf
sbb
dec
divb
jb
fbstp
test
xchg
cmp
jg
mov
mov
aas
mov
pop
or
pop
sub
add
jns
test
mov
les
daa
pop
add
popa
insb
jp
jb
fisttpl
dec
out
dec
mov
push
push
les
fsubrs
inc
add
push
sbb
and
dec
imul
pop
jo
cmp
cmp
andl
pop
xchg
into
add
push
pop
incb
sbb
int3
inc
ret
mov
call
inc
fs
sbb
or
or
nop
lds
loop
movsl
push
pop
sarb
adc
test
push
fwait
daa
pop
fwait
jg
cld
xchg
jo
mov
xchg
mov
mov
cmp
lds
jb
aaa
subl
hlt
sub
inc
pushf
push
test
pop
ret
sub
aaa
ja
mov
in
and
xchg
adc
push
vmovss
inc
dec
cmc
jmp
mov
inc
mov
jl
inc
sub
mov
das
push
fldenv
xor
lock
mov
jge
cmp
jo
pusha
jne
jns
ja
inc
mov
pop
push
mov
xor
jae
jns
in
fsubr
or
inc
sub
ss
mov
fs
pop
jg
mov
insb
mov
test
push
push
das
inc
cld
jl
adc
dec
cltd
and
movsl
mov
xchg
test
xor
pop
pop
daa
mov
jo
aaa
stc
lret
or
mov
jno
xor
scas
lods
lea
jno
mov
ficompl
mov
orl
xchg
jl
mov
scas
pop
push
jae
jg
mov
test
mov
insb
xchg
jbe
fldl
imul
loop
pop
rcr
mov
sub
dec
jle
mov
xchg
popa
lods
cmp
std
xorl
dec
std
mov
or
or
pop
fldt
cwtl
fs
push
insl
in
into
xlat
lret
jnp
call
leave
or
cltd
sbb
inc
jbe
xchg
subb
cmp
scas
sbb
fisubrl
fnstenv
sub
push
mov
mov
jge
jb
les
adc
aam
test
fcomps
or
cltd
or
jmp
push
cwtl
cli
mov
aaa
mov
cmp
add
das
shrb
and
fisttps
or
repnz
fsub
xchg
jne
xlat
mov
iret
xchg
shl
adc
sub
pop
test
or
xchg
popa
gs
mov
xor
ljmp
stos
loop
test
pop
lock
icebp
push
inc
jp
in
mov
xchg
sub
dec
xchg
jbe
cltd
xlat
mov
pop
mov
adc
inc
or
xlat
lods
jae
mov
jo
cmpsb
insb
xchg
ss
fnstcw
clc
cmpsb
cmp
out
in
jmp
xchg
sub
and
shll
rcrb
cmp
mov
inc
push
adc
or
cmp
mov
ss
xchg
jae
mov
insw
loopne
jmp
in
notl
mov
lret
lock
mov
adc
xchg
xor
dec
hlt
ret
or
ss
mov
or
sub
mov
mov
lret
leave
pop
sti
imulb
lret
jno
pop
adc
outsl
push
dec
pop
or
in
sbb
or
loop
mov
inc
jnp
dec
xchg
jns
or
xchg
sbb
fwait
pop
jo
cmp
dec
imul
sbb
mov
movsl
test
sahf
add
or
and
push
out
pop
pop
push
pop
mov
je
aam
inc
push
dec
jle
ret
mov
insl
nop
mov
xchg
mov
push
jmp
loope
dec
inc
insb
lds
clc
scas
test
inc
jle
enter
sbb
inc
sbb
add
in
cwtl
popf
data16
in
andl
push
dec
iret
adc
adc
insb
mov
sub
movsb
or
cmp
pusha
lahf
push
sbb
xor
dec
bound
insb
movl
andl
add
inc
or
push
das
adc
pop
or
pop
jmp
or
dec
xchg
xorl
xchg
and
fbld
xchg
jb
fldl
push
roll
shl
js
fsub
imul
mov
arpl
test
fwait
mov
fldenv
sarb
mov
test
enter
push
mov
and
repnz
adcl
dec
add
subb
jecxz
mov
add
in
and
sub
dec
repnz
cmp
xor
aam
dec
xor
or
pop
jle
mov
lret
shrl
andb
iret
push
into
adc
push
and
push
mov
ficomps
fwait
xchg
push
xchg
push
adc
in
ds
pop
sbb
icebp
mov
cmp
dec
popf
push
jb
sbb
mov
adc
cmpsl
nop
jne
stc
fimull
cmp
cs
push
inc
ljmp
mov
adc
pop
cs
push
push
fidivl
sub
into
orb
lock
or
mov
dec
mov
pop
fstpt
cltd
mov
ss
ds
popa
mov
dec
sti
stc
arpl
lret
adcb
fucomip
andl
insb
add
xchg
sbb
ret
adc
and
dec
inc
sbb
jge
sbb
cmp
ljmp
cmp
adc
inc
inc
cmp
xor
push
cmc
mulb
and
and
cmpsb
pop
mov
or
xorl
adcl
push
enter
jbe
imul
mov
loop
adc
and
add
imul
call
push
mov
add
pop
shrl
repnz
inc
inc
pop
aaa
or
mov
call
add
imul
test
rol
inc
push
xor
rorl
push
rorl
cmpsb
repnz
inc
xchg
dec
loopne
out
inc
enter
mov
hlt
sbb
out
cmpsb
outsl
cmpsl
fstl
scas
shl
sub
inc
rclb
add
xchg
outsl
data16
lods
dec
lcall
pop
adc
mov
mov
sub
addb
or
out
jle
inc
sbb
and
sti
fistps
in
dec
jle
jle
repz
es
sarb
sar
jae
loop
push
ss
leave
inc
pusha
das
leave
pop
xchg
ret
adc
jp
pop
mov
push
rorb
push
sub
adc
popa
adc
xor
push
std
mov
cld
jecxz
repnz
jns
pop
filds
mov
insb
adc
push
xlat
push
cmp
mov
cmc
lret
mov
sub
and
lret
out
inc
and
subb
call
xor
inc
hlt
in
mov
mov
sbb
test
xchg
stc
hlt
dec
cmpxchg
sub
rolb
sbb
data16
shlb
xor
hlt
jp
ror
mov
rcll
mov
cltd
lret
dec
xchg
jmp
xor
jns
out
adc
insl
sub
enter
ds
inc
outsl
lods
pop
jb
stos
aas
xchg
pop
sub
cmc
loop
add
popa
mov
out
ljmp
cmp
sahf
inc
ret
pop
xchg
mov
jnp
sbb
out
in
sahf
cmc
cltd
inc
mov
cmp
inc
lea
imul
pop
pop
mov
jne
out
bound
icebp
stc
inc
jbe
fsin
mov
lods
jge
mov
fiaddl
in
lcall
inc
out
push
ljmp
mov
push
mov
movsl
sub
push
stos
fwait
lock
int3
arpl
imul
mov
sub
sub
and
jge
and
adc
fdecstp
and
hlt
add
test
in
adc
ja
es
out
mov
mov
mov
jns
mov
into
mov
pop
push
adc
pop
movsl
test
addb
adc
sbb
jbe
lods
mov
sub
fcoml
push
mov
xor
lcall
icebp
rorb
jl
push
cmp
jle
sub
sbb
cs
sti
inc
sbb
or
cmpsb
dec
out
rol
mov
repnz
dec
test
ja
mov
cmp
sbb
pop
jns
fildl
js
pop
dec
repnz
xlat
fimuls
jo
arpl
hlt
mov
xchg
push
and
xlat
push
or
cmpl
sbb
add
clc
imull
mov
aam
imul
mov
fsin
arpl
add
loop
mov
mov
xchg
pop
sbb
jp
mov
test
rcll
push
mov
push
push
lret
nop
insb
xor
sahf
ret
add
sbbb
mov
jo
fnstcw
or
ds
push
push
push
xchg
scas
sbb
push
out
stos
inc
cli
mov
or
call
jmp
fnstsw
jae
dec
adc
div
push
cs
inc
in
negl
fists
in
in
cld
scas
or
inc
push
add
sbb
lahf
test
fwait
jb
and
movsb
jle
fcoms
cmp
out
push
sub
ja
into
loopne
out
les
and
push
pop
gs
arpl
push
xchg
xchg
push
cmp
rorb
rcll
xchg
dec
and
movsl
shlb
pop
ljmp
add
test
add
stos
xchg
clc
pop
mov
xlat
jecxz
adc
test
xlat
mov
sbb
sbb
popa
adc
subl
int3
mov
push
add
je
mov
shlb
xchg
aam
pusha
add
bound
ljmp
popf
arpl
decb
fdivl
inc
popa
mov
les
adc
pop
imul
repz
test
shlb
sbb
xor
add
add
inc
sub
stos
repz
cld
mov
sbb
and
sbb
fcom
sbb
cmp
xchg
call
imul
std
icebp
jle
outsl
or
call
sub
mov
add
jge
push
testb
xchg
scas
das
add
ss
cmc
in
inc
int
test
cmp
repz
ret
scas
adc
jmp
mov
leave
mov
adc
lahf
sti
inc
mov
cltd
dec
sbb
lea
xor
cmpsb
fxch
mov
pop
push
test
add
ret
es
jge
or
xchg
sti
cli
xchg
into
into
movsl
pop
sbb
daa
jmp
arpl
je
and
lret
fisttps
jns
leave
daa
or
and
lret
frstor
push
call
xchg
add
dec
sub
mov
cli
or
ds
andl
and
movsb
pop
out
cmpl
fnsave
mov
inc
jbe
stos
mov
gs
mov
shlb
inc
mov
sbb
xchg
pop
mov
or
in
fcompl
clc
punpcklwd
inc
xor
sub
xor
loop
cli
mov
xor
lahf
fptan
dec
fcomip
jbe
sub
add
sbb
into
repz
xor
sbb
addr16
imul
es
jne
mov
push
jae
lea
inc
stc
arpl
mov
shll
dec
jbe
mul
xlat
push
lock
lea
les
sarl
push
jp
movsl
dec
inc
dec
cwtl
pop
pop
mov
dec
aam
jae
xlat
js
jl
lret
mov
cmp
jno
inc
add
lahf
xor
leave
lds
mov
mov
fsubs
mov
jecxz
cmpsl
pop
dec
jb
mov
sbb
lcall
push
ret
or
jmp
nop
pop
or
add
movb
int
mov
enter
and
stos
xchg
sub
xchg
cmpsb
iret
sbb
arpl
and
jecxz
xchg
daa
jp
dec
mov
movsl
insl
adc
iret
je
add
sbb
cmpsb
or
js
cmpsl
jmp
mov
jecxz
dec
inc
pop
sbb
pop
ss
add
sbb
xor
pop
sbb
add
jo
hlt
or
cmp
sub
jae
xorl
aad
enter
mov
cltd
sub
fcoml
repnz
dec
jb
jns
sbb
push
xchg
sub
push
test
mov
stos
aad
testl
mov
fcoml
in
loopne
add
jno
and
mov
shr
icebp
loop
mov
mov
push
mov
xchg
sub
outsb
aaa
mov
or
incl
jo
fimuls
mov
fs
mov
and
jb
daa
imul
fwait
outsb
out
out
or
std
xchg
add
jnp
ja
pop
aaa
sub
dec
inc
test
cmp
shr
test
jne
sub
push
lret
lods
lock
jl
push
das
cs
fnstsw
pop
enter
pop
xchg
movsb
lret
int
mov
test
jae
ljmp
fcmovne
xor
cmpsl
and
test
sahf
call
fdivrs
sub
mov
sbb
sbb
jae
push
xchg
xchg
sbb
jns
mov
push
sbbl
xor
into
mov
adc
sub
out
jge
or
es
jg
sub
imul
push
dec
jl
enter
stos
adc
xor
cmc
mov
aaa
sbb
add
icebp
and
fnstcw
popf
xchg
push
push
lret
push
xchg
xchg
push
or
cld
dec
lcall
imul
ds
dec
add
or
push
push
outsb
pop
jb
cli
mov
les
cmpsl
lods
rcrl
dec
cltd
sbb
rcr
sub
sub
add
jae
sub
jne
testl
scas
out
fwait
jecxz
cld
or
sub
stc
push
mov
push
sti
loopne
adc
add
pop
or
out
pop
push
fbld
adc
mov
or
call
sbb
push
inc
or
inc
mov
push
repnz
cltd
shlb
insb
jmp
xor
sbb
add
les
and
in
and
cmpl
mov
jae
cmp
movsb
shll
lcall
int3
shlb
sbb
adc
pop
mov
jg
ja
and
shlb
mov
lea
hlt
outsl
insl
pop
adc
add
jno
push
adc
push
ret
cmp
and
cltd
inc
nop
add
les
data16
mov
decl
divb
dec
pop
and
in
loopne
sub
scas
bound
dec
test
popa
mov
mov
out
push
lret
mov
cmp
shrl
push
adc
jne
or
sub
push
dec
loop
sbb
jmp
pop
or
daa
mov
inc
jp
jbe
cmp
jno
fmull
xchg
mov
test
add
movb
push
mov
push
dec
cmp
and
jne
leave
jg
leave
scas
xor
mov
fadd
mov
pop
stos
stos
push
pop
js
push
fdivl
loop
mov
daa
rcrb
mov
push
mov
pop
mov
dec
pop
test
cli
mov
cmpsl
stos
fucomi
out
pop
sarl
addb
sub
ret
xlat
pop
outsl
ja
fldenv
mov
add
or
jb
sub
fadds
and
xor
gs
push
mov
mov
pop
lea
cmp
sbb
stos
cmc
xor
filds
inc
jg
ja
int
aad
aad
leave
subb
inc
imul
jae
mov
dec
push
es
mov
cli
fdivrl
loope
lock
out
sub
leave
cmp
pop
add
in
mov
adc
sub
cwtl
sbb
pop
cs
aas
pop
cld
scas
cmpsl
mull
and
adc
sub
push
xor
aaa
push
and
cwtl
shrb
mov
and
out
add
in
cmp
mov
shrl
cmc
xor
pop
ficoms
call
std
in
mov
push
sub
mov
cmp
stos
test
mov
cwtl
or
jbe
adc
mov
movsl
lock
pop
cwtl
les
scas
xchg
ljmp
pop
jge
mov
push
aam
jne
hlt
aaa
sbb
fsubrs
leave
push
push
mov
xor
jle
dec
cmp
and
adc
sarb
pop
pop
pop
push
sti
shl
dec
imul
push
shlb
jp
mov
inc
and
pop
cltd
neg
mov
pop
lea
or
lahf
cld
push
sub
test
imul
jnp
lcall
inc
or
xchg
jb
fidivl
dec
fcomp
cmp
subb
xor
fadds
loopne
movb
pop
xchg
xchg
lret
mov
xchg
jb
xchg
fmulp
add
lahf
inc
dec
scas
push
loope
pop
aam
mov
les
int3
and
xor
out
in
lods
leave
insb
and
das
mov
repnz
jmp
into
idiv
inc
mov
in
sti
and
sbb
ret
subb
push
outsb
fstpt
or
scas
sbbb
cmc
mov
cwtl
mov
jge
pop
pushf
stos
imul
or
popaw
push
lret
js
push
and
in
inc
std
xchg
mov
push
inc
bound
sub
sahf
mov
sbb
fsts
stos
xor
xor
pop
mov
sub
push
xchg
xchg
sub
fidivl
out
shrl
loopne
mov
or
cmp
rcrb
inc
test
jp
pop
test
mov
add
push
movsb
inc
in
cmp
inc
push
fisubrl
or
ss
pusha
jecxz
outsl
add
repnz
pushf
clc
lahf
icebp
mov
fsubl
jae
sub
call
add
xor
icebp
nop
add
add
mov
jns
notl
je
andb
pop
push
push
jp
cmp
sahf
sbb
test
sub
stos
icebp
mov
icebp
ret
ds
and
pop
or
sub
sub
jbe
es
stos
sub
lock
push
loope
xchg
jl
add
add
mov
add
arpl
jl
lcall
pop
sar
sbb
pop
mov
sub
out
cltd
pushf
subb
ret
ljmp
xor
scas
jecxz
sub
and
xchg
xor
aaa
loopne
ja
daa
jb
fidivl
flds
mov
or
movsl
das
in
dec
das
push
cmp
sub
inc
inc
jae
jae
out
icebp
lock
dec
push
pop
push
mov
xlat
scas
std
xor
das
out
adcb
lods
jmp
mov
or
imul
call
xor
mov
sub
sub
cmp
pop
mov
mov
dec
pop
cltd
or
bound
ds
rolb
mov
cmpsb
or
sarl
xchg
add
sub
int3
jbe
cmpsb
adc
ret
ss
mov
xchg
mov
jbe
jl
pop
sahf
sbb
rorl
pushf
xchg
mov
dec
add
xchg
dec
inc
xor
int3
or
add
in
stos
test
cwtl
xor
out
pusha
adc
push
sahf
es
pop
jnp
or
push
adc
or
fbstp
lret
sbb
je
pop
iret
into
hlt
mov
sbb
or
dec
fsubrs
in
bound
hlt
inc
sbb
fldenv
loop
int
mov
out
xlat
jae
out
adc
aaa
bound
pop
mov
push
adc
lds
out
daa
fistps
lea
imull
jb
cmp
inc
inc
mov
sbb
sub
ret
push
pop
orl
mov
and
les
cmp
aad
jo
mov
out
stc
xchg
xor
ret
js
lds
orl
sbb
jo
pushf
inc
mov
jmp
mov
lcall
pop
insb
sbb
cmpsb
mov
incb
adc
es
xchg
std
jae
int
fadds
and
push
push
push
pop
movsb
aas
shll
pop
cwtl
sahf
add
pop
fsubs
or
movsb
push
xchg
cmpsb
mov
cwtl
and
jno
and
shl
popa
push
mov
add
imul
mov
bound
mov
sub
push
scas
pop
jnp
imul
adc
pop
cmp
fildll
push
shll
push
ja
fsubr
push
inc
pop
mov
cmp
inc
pop
in
aam
push
fxtract
lods
pushf
testb
nop
in
adc
mov
add
pop
pop
fdivr
mov
jl
ljmp
stos
lea
rorb
push
imul
in
popa
cltd
fstl
adc
pop
xchg
out
dec
mov
push
imul
pop
and
sbb
in
mov
fldcw
jl
lods
cmp
xsaves
adc
rorl
xor
out
cmpsb
jbe
jecxz
dec
mov
das
ret
in
jg
mov
repz
add
pushf
jl
mov
mov
ds
and
lods
mov
mov
sub
xor
jbe
push
out
xchg
sub
cmp
jge
push
neg
inc
imul
outsb
and
sub
inc
or
mov
mov
xor
or
jo
xor
xchg
fidivs
je
shrb
out
clc
mov
stos
pop
movsl
mov
data16
jp
in
add
push
fistpl
gs
cwtl
imul
imul
add
fsubp
clc
pop
jnp
inc
mov
leave
scas
pop
or
pop
and
sbb
fstpt
or
mov
sbb
adc
mov
and
sbb
insl
ja
lods
in
push
test
mov
in
xchg
sti
cmp
int
xlat
mov
mov
imul
xchg
js
pop
push
jg
mov
jp
jge
mov
xorl
xor
mov
mov
or
in
xor
repnz
xchg
add
jne
push
xchg
cwtl
jg
pop
loopne
or
pop
sub
jp
dec
mov
stos
and
into
pop
int3
popa
cld
imul
jno
cmc
push
test
inc
int3
sub
mov
ss
add
cli
arpl
push
icebp
dec
outsb
add
add
ficompl
push
je
ds
aad
notb
push
mov
arpl
aaa
int
pop
es
adc
loopne
dec
pop
sahf
sbbb
dec
mov
push
jno
mov
mov
jg
movsl
test
mov
aad
pslld
addr16
ja
cmp
jb
in
leave
stos
sbb
div
test
leave
outsb
orl
ret
leave
mov
movsb
shrb
jecxz
dec
mov
sbbl
fisubrl
das
jo
or
pop
cmp
and
add
dec
jb
lret
ss
jno
cs
mov
lods
dec
enter
jb
xchg
shrl
xor
mov
mov
lods
or
cmc
nop
out
stos
sahf
inc
addl
decb
mov
stos
out
jle
scas
cwtl
cli
outsb
icebp
call
adc
rolb
xchg
loop
cwtl
mov
scas
sub
sub
pop
pop
insb
mov
adc
insb
xchg
pop
iret
mov
push
lock
int3
fcmovnbe
mov
inc
pop
push
sti
ds
xor
pop
mov
jge
push
push
cli
bound
test
test
dec
imul
lcall
das
mov
push
shrd
leave
out
loope
ss
dec
imul
jl
gs
rcl
mov
rcrl
sub
out
gs
xchg
fwait
call
adc
pop
js
dec
add
in
les
ja
add
test
mov
and
inc
push
mov
pop
pop
adc
or
xor
adc
in
andb
mov
adc
and
addr16
es
out
sub
rcl
xor
mov
mov
imul
inc
dec
add
pusha
or
jnp
pop
adc
add
sti
fwait
sub
addr16
or
mov
mov
lea
fcmovnbe
in
lds
stc
sub
mov
into
cmp
adc
sbb
subl
addr16
ljmp
sbbl
pop
xchg
int3
mov
cmp
mov
mov
stos
and
xchg
gs
jo
mov
mov
push
aaa
lods
repnz
popf
bswap
and
loop
sbb
icebp
cmp
and
imul
rcrl
add
push
inc
sti
ss
fdivrl
or
sub
mov
cmp
mull
in
push
insb
shll
out
and
mov
pop
test
jg
push
xor
aaa
in
dec
mov
movsb
cmp
lret
sarb
mov
cltd
in
lods
sbb
mov
or
out
test
notb
cmc
jmp
inc
inc
outsb
je
and
movsl
arpl
das
imull
lret
inc
jmp
scas
movsb
cmp
ljmp
add
shr
xor
pop
into
es
pushf
push
jcxz
mov
pushf
mov
js
xchg
lds
adc
popa
es
dec
jnp
sub
dec
enter
rcrb
xchg
les
and
pop
sahf
jbe
movsl
les
popf
xchg
push
popa
mov
loopne
jnp
scas
sub
lahf
adc
pop
adc
or
fcompl
movsb
aad
rcr
cltd
sarl
dec
and
mov
inc
xor
xchg
mov
out
inc
pop
jno
loop
inc
jge
xchg
leave
add
in
push
jbe
adc
into
add
jno
xor
cld
add
fwait
pusha
pop
jo
sahf
cld
and
pop
cmp
stos
out
dec
loopne
pushf
adc
int3
dec
xor
lcall
mov
fildl
mov
mov
pop
nop
xchg
ror
xor
fisttpll
ret
cwtl
or
int3
jmp
dec
addb
push
fidivrs
aaa
inc
xlat
pop
xor
dec
mov
inc
push
jmp
mov
push
xor
clc
filds
mov
pop
jnp
aad
mov
xor
add
push
inc
xchg
dec
push
mov
mov
pop
inc
rcll
fsubrl
stos
cmpsl
jecxz
cmp
inc
add
pop
cs
sub
test
jo
loop
out
dec
dec
lret
test
xchg
jae
ret
xorb
mov
mov
pop
pop
push
xor
push
inc
ds
movsb
enter
add
xor
sbbl
adc
adc
mov
xchg
call
aaa
adc
mov
dec
inc
mov
test
mov
stos
pop
fstpl
outsl
je
adc
clc
pop
sbb
or
push
adc
clc
pop
jecxz
and
xchg
insb
push
sahf
les
test
sbb
cmp
cwtl
push
cmp
or
xchg
test
pop
mov
sahf
xor
push
inc
lods
cli
popa
mov
lea
mov
xchg
mov
push
arpl
movsb
ss
pop
pop
mov
das
dec
ja
mov
shl
dec
scas
nop
mov
sbb
outsl
dec
testb
addl
dec
loope
lea
push
test
pop
sbb
mov
fisttpll
insb
cmp
lret
int
inc
imul
outsb
push
add
sbb
in
lcall
push
sub
push
jne
xchg
add
jo
cmc
aam
cmc
jbe
add
enter
cmpsb
inc
xchg
dec
jge
jp
dec
fmull
dec
aaa
sbb
lock
pop
cmp
fmul
pop
jbe
dec
ljmp
xchg
or
mov
gs
sahf
sti
add
mov
mov
adc
cs
xor
sub
test
out
scas
jno
mov
and
sub
sub
loopne
pop
icebp
jo
mov
xcrypt-ecb
mov
cmp
mov
call
ja
sbb
mov
pop
pop
cltd
fdivp
cmp
mov
cmp
sbb
xchg
fmul
xchg
pop
jl
push
nop
dec
pop
mov
adc
jmp
enter
xchg
scas
and
mov
mov
xchg
adc
bound
fmuls
inc
mov
jo
ja
xchg
ds
icebp
inc
add
stos
cmp
mov
pop
fnstcw
xrelease
test
cmp
add
icebp
dec
jae
dec
xchg
aam
and
sbb
fs
test
cmp
fwait
mov
xor
arpl
push
fists
mov
pop
xor
gs
lock
fisubl
or
pusha
roll
xor
xchg
inc
sub
das
jae
jb
jge
lahf
or
out
cmpsb
dec
sub
rolb
xlat
xchg
mov
xchg
stos
data16
add
icebp
xor
outsl
sub
aaa
aas
ret
xor
fidivs
in
xchg
push
lret
inc
dec
mov
sub
add
sbbl
xchg
fidivrl
cwtl
pop
xchg
mov
pop
enter
jmp
and
jecxz
add
pop
mov
jbe
mov
xchg
jnp
rcrb
sub
and
cld
push
pop
adc
push
movsb
pop
out
xor
inc
aaa
testl
jbe
outsb
outsb
adc
loop
mov
shll
aas
fadds
mov
push
test
inc
sub
in
mov
sbb
inc
cltd
add
inc
div
imul
mov
jns
push
out
icebp
je
bound
and
push
xchg
cmpsb
jl
pusha
mov
ljmp
mulb
fs
insb
jp
xor
jo
das
in
lds
movsb
cmc
std
and
icebp
in
xor
loope
jno
and
inc
mov
mov
or
jmp
icebp
dec
sbb
cmp
xor
sbb
mov
push
arpl
stos
in
nop
pushf
rcll
fcmovnbe
loop
sahf
test
sbb
push
punpckhbw
xor
adcl
fdivs
les
loop
test
mov
pop
mov
add
fs
jns
out
jg
rclb
pop
add
mov
cmpsl
adc
mov
sbb
mov
subb
dec
scas
cmp
call
dec
cltd
cmpsb
add
xlat
or
inc
pushf
icebp
dec
out
stc
loope
adc
repz
lds
mov
pop
sub
push
insl
push
loopne
add
xchg
sub
jmp
xchg
push
xor
notl
fadds
xchg
dec
iret
xor
xchg
std
sbb
cmp
fwait
push
testb
fdiv
es
out
mov
mov
mov
and
mov
inc
cld
shlb
andl
add
cmpsb
jo
or
cmp
repnz
ss
stos
out
fisubrs
out
mov
rcrl
repz
icebp
repz
push
pop
sub
adc
mov
rcll
in
inc
inc
jp
daa
loopne
and
mov
or
pushf
ja
push
movsb
nop
lds
jne
push
xchg
cmpsl
ljmp
test
sahf
mov
mov
lods
push
lret
stos
mov
repnz
mov
sbbl
mov
pop
rorb
mov
out
es
int
adc
fidivl
outsl
bound
test
imul
jae
mov
int
cltd
cmp
adc
or
dec
loop
dec
sarb
mov
mov
out
or
mov
repnz
ljmp
or
jle
sbb
mov
sbb
jge
mov
out
mov
icebp
mov
dec
lea
add
pop
mov
xchg
xchg
inc
xchg
call
aas
das
lret
gs
jecxz
aaa
fcmovnbe
inc
test
in
dec
push
inc
mov
insl
dec
xchg
push
dec
lahf
inc
out
sbb
push
mov
xor
out
lea
insb
or
jbe
cmp
push
leave
shl
and
pop
cs
jo
aaa
fnstenvs
mov
or
jno
mov
xor
or
lods
dec
cmpsl
and
dec
repnz
jge
lds
jae
pop
cmpsl
movsl
in
push
cmc
arpl
fnstenv
in
jb
test
stos
ficoms
loope
cmp
jno
iret
nop
pop
lds
inc
imul
in
xchg
sbb
arpl
sbb
lods
outsl
test
xchg
adc
mov
and
or
add
inc
xor
jns
inc
loop
sbb
jge
push
jno
xlat
mov
fidivs
inc
jle
dec
xor
scas
pushf
aad
imul
push
incl
and
movsb
loop
outsb
stos
add
pushl
stos
bound
xchg
pop
and
mov
pop
out
std
and
pop
mov
adc
gs
and
aad
aas
pop
ljmp
push
or
pushf
add
jno
sub
and
cli
lret
and
dec
inc
and
add
les
add
clc
lock
push
aad
mov
clc
daa
mov
push
jmp
sub
jne
mov
ljmp
out
inc
nop
leave
jp
in
xchg
aas
dec
scas
mov
popf
aad
mov
das
imul
cwtl
or
lret
mov
adc
jo
xchg
and
das
fisttps
lcall
dec
pop
add
dec
xchg
pushf
push
push
ret
je
xlat
cmp
jmp
mov
into
xchg
xchg
ret
add
movsb
jge
xor
lea
insl
mov
cmp
negb
jle
subl
test
lods
mov
inc
add
shlb
cs
xor
and
add
in
loopne
lcall
into
push
outsl
dec
cltd
cli
cmp
lds
mov
fnsave
in
add
iret
ljmp
jb
ds
aas
xchg
adc
and
push
sbb
mov
aad
pusha
and
testb
mov
sbb
loopne
mov
dec
jb
push
outsb
into
int3
dec
das
push
loop
add
jecxz
stc
jge
sbb
xchg
pop
shl
fdivrp
mov
mov
mov
push
mov
ret
cli
mov
fs
ljmp
or
push
xchg
jmp
cmp
pop
adc
insl
mov
in
sbb
and
insb
dec
push
dec
inc
adcb
pop
test
lahf
xor
lods
push
sub
fldl
popl
sub
dec
cmp
adc
shr
pop
std
shlb
addr16
cmp
and
xor
inc
push
add
inc
dec
push
adc
dec
pop
push
ss
out
cmp
enter
outsl
xchg
test
push
ljmp
pop
lods
cwtl
sbb
push
lods
xchg
leave
mov
fucom
fs
or
cmpsl
sbb
std
mov
flds
cwtl
leave
xor
jo
jge
outsb
jp
add
mov
jne
fcom
jl
popa
and
ret
xchg
mov
enter
aam
jmp
xchg
cmp
inc
pop
inc
fnsave
movsb
and
and
cmp
movsl
push
divb
and
push
sbb
mov
mov
ror
push
fdivs
sti
adc
mov
or
fs
mov
lods
push
aas
lahf
sub
test
dec
sbb
push
xchg
sub
cltd
enter
mov
xchg
inc
adc
ret
clc
fcmovnbe
jbe
pop
rcrb
pop
jbe
mov
fwait
pop
pop
incl
push
aaa
shll
in
xchg
addr16
roll
xor
loope
in
jns
mov
repz
push
ficoml
mov
xchg
inc
xchg
mov
sub
sub
lcall
pushf
mov
stc
cmovns
loope
inc
xor
fsubl
mov
mov
pop
jmp
sbb
int
scas
or
mov
dec
lcall
jg
sub
adc
dec
or
in
push
icebp
repz
in
popa
mov
add
testb
cmp
mov
mov
insl
xchg
xor
xchg
arpl
lahf
inc
inc
cs
lea
out
xor
fwait
out
sbb
dec
pop
inc
cmpsb
jmp
xorl
ret
mov
cmp
or
pop
jnp
add
sahf
mov
or
and
imul
popl
shll
xchg
xchg
xchg
mov
xchg
daa
popa
adc
xchg
push
out
pminsw
je
shl
mov
mov
imul
and
ret
jl
dec
fistps
orb
mov
jmp
sbbl
or
dec
mov
pop
or
daa
fisttpl
pop
sub
rcrl
addb
outsl
rcl
mov
dec
pop
in
jbe
mov
dec
jo
jae
or
pop
stc
in
or
mov
jns
sbb
xchg
sub
pop
pop
and
imul
sahf
fs
lock
loop
push
fsubrl
out
fimuls
mov
xor
ret
orl
or
xorl
pop
mov
enter
or
lods
adc
mov
jge
and
mov
stos
add
out
cltd
scas
mov
in
jne
lock
je
subb
inc
push
dec
adc
movl
mov
xor
movsb
lahf
lcall
hlt
pop
outsl
jnp
mov
cli
pop
adc
mov
clc
fisubs
dec
fildl
movsl
mov
sbb
fcoml
mov
xchg
push
jno
xor
lret
sahf
test
sti
cmp
jmp
xchg
or
addr16
push
xor
dec
jl
push
movsb
scas
jp
adc
stos
out
loopne
push
jl
sub
outsl
test
pop
lahf
mov
loope
repz
xchg
and
pop
add
repnz
xchg
pop
xchg
mov
popa
sub
dec
inc
jns
imul
jg
lea
jae
push
fstps
add
das
lock
sbb
imul
adc
xchg
cld
pushf
jmp
cmp
je
and
mov
add
or
ja
ja
mov
and
cli
inc
psrad
sbb
mov
dec
ss
ds
mov
ljmp
xor
xchg
sarl
mov
insl
xchg
jae
hlt
xchg
inc
jmp
cmp
test
ficomps
pop
in
fnstenv
pop
pop
arpl
push
daa
cmp
push
out
dec
lods
dec
jnp
and
mov
or
lret
mov
adc
iret
xchg
pop
dec
lock
pusha
jbe
adc
aad
insb
push
adcl
scas
push
rcrl
inc
xchg
clc
dec
arpl
neg
insl
mov
dec
aas
dec
sub
or
sar
ret
clc
mov
adc
rcr
ljmp
scas
rolb
flds
jmp
xchg
mov
pop
sbb
je
cmp
popf
std
arpl
icebp
cmp
in
adc
out
xor
dec
jp
dec
jmp
shlb
clc
and
pop
xor
xor
add
mov
imul
imul
push
sbb
negl
pop
outsb
scas
out
pop
icebp
push
sub
test
xchg
xchg
nop
das
incl
xchg
sti
jecxz
or
stos
insl
xlat
mov
inc
xchg
sub
lcall
int
fsts
adc
xor
cmp
jo
lea
call
hlt
daa
add
call
mov
repz
notl
mov
popa
mov
fs
subb
jl
into
mov
das
cmp
inc
gs
bound
xchg
and
dec
sbb
iret
inc
les
jge
es
push
mov
lods
stos
jmp
repnz
jb
sub
aas
in
fmull
cmpsl
lahf
aaa
pop
incl
mov
sub
pop
jecxz
push
lcall
xor
movsl
push
jge
bound
inc
in
js
clc
rol
sbbl
popa
aam
adc
mov
sahf
mov
cwtl
test
mov
pop
jmp
push
popa
mov
sbb
sbb
mov
enter
js
aam
sbb
lret
lahf
pop
inc
fstpt
fwait
cmpsl
in
sbb
movsb
outsb
pop
mov
fldcw
aad
adc
fistpl
aas
pop
shlb
pop
and
nop
lea
and
into
lret
dec
add
jle
movsw
push
in
iret
scas
fwait
cmpsb
mov
push
imull
lods
xchg
jle
add
lods
mov
sbb
out
sbb
inc
xchg
stos
pusha
dec
jns
jmp
icebp
leave
insl
jmp
mov
sub
jnp
icebp
inc
int
lea
push
sbb
in
imul
cmp
lret
pushf
push
sbb
dec
adc
and
adc
and
push
xor
inc
inc
popa
mov
lea
mov
out
xchg
push
movsl
lea
mov
or
mov
aad
mov
cltd
mov
adc
and
les
mov
out
out
push
jmp
jl
jmp
aas
imul
mov
ficomps
mov
in
push
or
mov
jge
out
mov
inc
or
cld
xchg
or
sahf
jno
test
repz
enter
mov
inc
pop
or
ret
mov
sbb
lods
adcb
mov
int3
sub
pop
sarb
flds
fnsave
movsb
sbb
mov
cmp
inc
inc
lea
out
dec
jecxz
jb
shrb
aaa
popf
lds
and
add
mov
out
rcll
bound
push
lcall
repnz
pop
jle
xor
movsb
out
sbb
xor
mov
add
xor
add
inc
push
pop
or
je
ficoml
mov
repnz
add
mov
jno
movsl
imulb
jbe
mov
test
sub
mov
xchg
into
les
dec
xlat
mull
mov
std
jae
jb
pop
in
fs
insl
add
adc
lods
push
enter
add
call
inc
and
lcall
arpl
push
lock
mov
adc
orl
mov
jns
cmp
cs
jns
xor
sbb
insl
mov
inc
addw
outsb
mov
mov
dec
into
inc
ret
leave
in
sub
dec
scas
lret
movb
mov
sub
orl
out
loope
jg
adc
repz
jle
mov
xchg
insb
dec
nop
stc
inc
stc
mov
test
aas
xchg
mov
push
and
sahf
cmpb
mov
pop
mov
hlt
pusha
out
xchg
in
jl
sbbb
and
adc
mull
rorb
mov
std
mov
xor
push
shll
lods
out
jecxz
cmpsb
xor
lret
or
or
dec
mov
hlt
pop
pop
lcall
lock
fistps
sub
jae
push
push
jge
testl
pop
ret
sub
add
shll
lret
lods
lcall
jl
in
dec
push
mov
mov
repnz
in
popf
push
ja
in
pop
aad
clc
mov
icebp
ljmp
sahf
mov
or
loopne
xchg
add
jae
aam
pop
mov
dec
dec
fs
xor
inc
stc
push
je
bswap
sbb
sbb
cmc
xchg
outsl
xor
jae
mov
pop
lods
jle
stos
lods
fmull
or
loope
dec
ret
outsl
cli
rcl
leave
push
and
mov
js
in
subl
fdivrs
push
mov
popa
xor
push
dec
xchg
mov
push
ja
sbb
push
mov
clc
into
dec
stos
pop
sub
dec
sbb
cmp
mov
outsl
jae
pop
jg
inc
or
inc
and
cmc
pop
mov
jo
arpl
popl
jae
mov
pop
mov
lock
jle
dec
ja
xor
mov
stc
orb
lds
ss
hlt
mov
in
call
jns
fnstcw
loope
add
repz
int3
inc
stc
mov
xchg
lahf
out
es
mov
and
push
push
dec
push
sub
out
lcall
mov
jl
jno
rorl
std
int3
je
lods
sbb
stc
imul
lcall
sbb
fildl
mov
in
dec
adc
jl
sub
jbe
mov
dec
sbb
sbb
repnz
xor
out
cmp
push
out
dec
jnp
mov
xchg
jb
das
xchg
lock
pop
sub
fwait
call
pop
lds
cs
sub
loop
repz
ret
cmp
and
jno
xor
sub
xor
pop
fcom
add
neg
push
testl
iret
jo
lea
push
test
xor
xchg
iret
and
xor
pop
lcall
xor
icebp
push
jae
cmp
mov
cmpsl
mov
mov
ljmp
in
mov
adcb
out
jecxz
xor
jne
push
inc
enter
xchg
bnd
imul
lcall
sub
cmc
sbb
in
mov
cwtl
pop
stos
testb
sahf
xor
out
loope
dec
decb
pop
shrl
out
roll
or
inc
cmpsl
fisttps
and
les
fs
pop
sub
xorb
xor
bound
or
je
mov
incl
ljmp
imul
adc
pop
das
lahf
add
cmpsl
jg
sub
sub
cli
pop
sub
mov
je
nop
sbb
lret
add
mov
lret
or
rolb
jns
jge
cmp
push
jl
adc
xchg
int3
mov
ud1
jmp
push
mov
xlat
add
repz
arpl
sub
test
popa
fbld
aam
ss
inc
mov
and
xor
leave
inc
cld
sbb
adc
lods
cmpb
sbb
xor
cmpsb
jmp
movsb
leave
dec
clc
fs
lods
push
push
mov
mov
add
cltd
xlat
lret
jno
test
inc
add
out
iret
or
test
loopne
ljmp
mov
mov
jl
push
pop
push
adc
mov
cmpsb
fscale
loopne
mov
push
mov
or
pop
cmp
push
into
mov
cmpsl
xor
mov
movsb
push
loopne
daa
adc
add
pop
dec
jl
cmpsl
mov
or
xchg
adc
push
mov
mov
adc
jae
mov
sub
xlat
xor
or
cmp
fldenv
iret
rcll
lahf
outsb
pop
out
fidivs
or
pop
dec
cld
out
test
in
push
mov
fchs
iret
sbb
add
pop
and
inc
inc
fsub
mov
repz
js
repz
shlb
shll
xor
jne
icebp
and
cmpsl
push
shll
je
adc
xchg
repz
jae
test
pop
sarl
aaa
lods
cmp
lret
dec
push
or
adc
push
push
cmp
cmpsb
jle
xchg
cwtl
xchg
mov
in
adc
outsb
aas
mov
inc
mov
js
aam
sahf
out
pop
repz
shlb
loopne
cmp
pop
loope
push
icebp
ja
add
xchg
adc
aam
sbb
repnz
in
push
sbb
xor
sbb
add
stos
or
negb
sbb
xchg
shlb
pop
push
aam
les
jno
inc
aam
pop
mov
jle
sub
inc
ret
cmp
lods
sub
jl
ljmp
stos
shll
out
cld
adc
shrb
cmp
test
nop
sub
or
notl
or
jmp
clc
repz
inc
xor
pop
add
xchg
into
mov
loop
mov
xlat
adcl
pushf
adc
jno
xchg
push
adc
sub
pop
outsb
push
inc
call
and
aas
outsl
mov
cmp
xlat
jbe
inc
in
adc
xchg
hlt
mov
pop
cmp
scas
repnz
adc
mov
jo
push
mov
jmp
inc
popa
sbb
xchg
js
aad
int3
push
vpmacsdql
dec
and
idivb
push
dec
xor
push
fsubp
addl
stos
mov
int
lret
test
outsb
into
add
fs
gs
scas
xor
sar
add
mov
adc
xlat
imul
fsubl
or
adc
dec
mov
push
cwtl
into
xchg
imul
mov
push
and
pop
jle
xchg
mov
push
mov
ljmp
lret
lock
popa
stc
pop
cli
sbb
popa
negl
nop
and
dec
dec
sar
insl
jnp
lds
movsl
test
orl
ret
cwtl
xchg
test
cmp
shlb
mov
and
cmp
cmpsb
xchg
fcmovne
push
push
out
xor
outsb
inc
xor
mov
lret
dec
xor
sahf
roll
or
loope
and
sbb
mov
pop
pop
call
jo
xchg
xchg
sbb
mov
pusha
sub
xlat
pop
mov
lds
data16
test
pop
sbb
test
sbb
dec
lcall
cmp
cmp
dec
ret
aad
xchg
js
jo
into
clc
lds
and
out
cmp
inc
and
roll
dec
mov
pop
fistpll
scas
scas
jmp
and
inc
mov
xchg
or
cltd
stos
mov
sbb
iret
fcom
test
cmpsl
ja
and
push
enter
scas
or
pop
loopne
mov
mov
jo
pop
loope
jge
inc
pop
push
fxam
pop
adc
jne
mov
roll
mov
test
mov
jae
push
adc
sbb
mov
jbe
sub
mov
lea
andb
and
xor
cmp
push
adc
sbb
fmuls
mov
mov
mov
pushf
inc
test
and
pop
in
cli
add
outsb
sub
aam
pop
outsl
loope
xchg
adc
mov
push
jbe
in
push
jle
pop
jecxz
mov
imul
popf
push
ja
and
lods
lea
xor
negb
xor
pop
dec
pop
mov
or
icebp
es
sub
xchg
es
push
add
sub
into
out
in
push
idivl
mov
test
pop
clc
or
xchg
jl
or
jp
test
fistpl
cmp
jl
jne
fildl
fs
xchg
das
push
repnz
nop
xchg
arpl
adc
mov
jnp
sub
cmp
cmp
cmp
mov
or
push
xchg
sbb
sbb
stc
js
pop
dec
lret
not
dec
movsb
inc
mov
and
ja
xchg
fcmovnbe
sub
sbb
jp
add
movl
pusha
lods
or
push
repnz
jge
mov
pop
dec
je
push
pop
mov
push
dec
sbb
sbb
js
lods
cs
mov
or
daa
outsl
jmp
rcr
clc
hlt
sub
lcall
scas
outsb
movsl
js
cmp
arpl
mov
fstpt
hlt
push
mov
sbb
sbb
inc
pop
lahf
ljmp
lret
add
insb
pop
cvtps2pd
fstl
jne
mov
sub
and
sub
cmp
fnsave
fs
and
jg
pop
je
rcrl
sti
cmp
mov
imul
jae
insb
xor
mov
inc
movsb
mov
mov
sbb
sub
pop
stos
pusha
jecxz
and
push
mov
xchg
push
stos
insl
pop
and
adcb
mov
sbb
out
aam
pop
dec
les
add
and
cmp
inc
lds
mov
cli
jb
add
cmpsl
mov
popa
sbbl
sarl
jg
pop
jb
outsb
out
std
inc
roll
stc
mov
repnz
xor
pop
and
xor
xchg
xchg
dec
mov
sub
push
shr
fidivrl
sub
jns
vstmxcsr
scas
outsb
or
dec
test
pop
ds
add
call
cld
cmp
mov
inc
paddsw
ja
je
outsl
in
dec
dec
lods
lahf
sub
mov
mov
cld
mov
cld
out
pop
xchg
or
cs
mov
jne
jge
mov
lea
scas
test
lea
popa
push
mov
mov
pop
je
mov
mov
fwait
iret
in
mov
jne
jne
and
lret
mov
mov
mov
repnz
mov
xchg
aad
dec
adc
popa
hlt
sahf
scas
xor
scas
push
lret
fcomps
dec
mov
cmpsb
push
push
jg
fldt
pop
push
ficoml
fsubl
ds
fisubrl
mov
shl
sub
aaa
pop
jnp
push
inc
pop
xchg
adc
xor
pop
mov
push
and
mov
push
cld
push
hlt
and
addr16
outsb
mov
pop
or
jb
loope
push
inc
and
push
adc
clc
movsb
inc
xchg
arpl
push
dec
jnp
loope
pop
push
lret
ficomps
mov
xor
ss
insl
mov
xchg
sbb
xor
out
sub
pop
bound
lods
add
movb
stos
fidivrl
mov
push
popa
fnstsw
fdivr
sti
sbb
leave
imull
push
dec
push
aas
push
mov
jl
pop
sub
or
xchg
push
stc
or
cmpsb
push
addr16
repnz
xor
aaa
lock
inc
push
mov
jecxz
and
movsb
inc
and
loopne
sbb
xchg
nop
add
push
pop
dec
fnsave
sub
and
jnp
cmpsl
pop
les
lahf
add
mov
add
push
jge
dec
cmp
or
mov
fcmovnb
lods
loop
shl
xchg
outsb
rcrb
lds
mov
mov
lods
xor
adc
adc
lcall
rcl
subl
mov
mov
xor
jle
dec
jle
or
xor
gs
xor
xor
leave
push
mov
and
mov
cmp
push
pop
jnp
fimuls
inc
push
pop
test
mov
adc
xchg
cmp
scas
push
fwait
bound
fbstp
adc
sub
pusha
dec
stos
es
test
orb
and
scas
xlat
add
enter
scas
test
shll
test
out
arpl
and
push
push
sub
fstps
mov
and
mov
lea
pop
bound
and
mov
push
dec
rcrb
and
sar
mov
pop
sub
jnp
push
push
into
leave
mov
enter
mov
and
pop
mov
add
add
xor
lret
xor
xlat
imul
xchg
mov
aad
in
icebp
orb
int
stos
xchg
sbb
adc
dec
imull
xor
xchg
mov
sub
mov
loope
outsb
and
pop
gs
in
out
mov
ficompl
sub
dec
push
push
mov
mov
in
add
sbb
xlat
ss
sti
incw
imul
out
ss
xorl
cwtl
mov
cmpsb
push
pushf
sbb
jg
pushl
std
mov
inc
add
out
sub
xor
push
movsb
or
mov
test
adc
or
xor
ss
addr16
inc
jne
xchg
and
jns
mov
pop
adc
lods
xor
data16
mov
mov
out
jmp
fs
sub
mov
jne
dec
jecxz
mov
sub
adc
insl
adc
int
mov
test
int
mov
dec
es
push
in
shll
test
jmp
pop
loopne
gs
ds
icebp
dec
xchg
pop
imul
mov
xchg
push
pop
mov
sti
jmp
push
adc
aam
test
pop
arpl
cmp
push
pop
ljmp
pushf
setno
pop
inc
je
test
jmp
icebp
in
fs
repnz
pop
es
sub
sbb
insl
outsb
dec
mov
scas
sub
cs
call
mov
or
pop
jle
lret
es
pop
sbb
jmp
sarb
pop
lahf
outsb
inc
pop
mov
aas
popa
lock
and
xor
xchg
xlat
nop
jbe
cld
clc
cmp
jg
jne
dec
mov
cs
adc
inc
pop
repz
mov
pop
aad
mov
test
mov
aam
mov
ja
inc
dec
int
pop
jle
testl
insl
stos
lods
dec
test
inc
lcall
inc
int3
std
sahf
stos
cli
imul
andl
push
repnz
cmp
sub
sub
pop
jl
cli
fidivs
in
dec
dec
mov
int
push
xchg
xchg
xor
mov
xchg
cs
adc
push
loop
mov
sbb
stos
shl
push
mov
mov
jge
fidivrs
add
neg
int
imul
add
xchg
sbb
lds
jmp
imul
bound
xor
push
mov
push
cmp
mov
mov
push
jns
movd
shlb
aam
xchg
insl
pop
dec
aaa
pop
mov
inc
mov
ret
cli
lock
cs
lret
mov
push
ret
mov
add
ja
iret
xor
insb
push
lret
and
adc
sti
mov
mov
mov
xchg
icebp
out
adc
sarb
sbb
sbb
mov
pop
mov
mov
jne
es
cmp
add
imul
cmc
iret
push
iret
push
cmp
jg
out
xchg
ja
test
and
aas
inc
aad
imulb
pop
adc
cmc
cmp
pop
pop
push
scas
pushf
xor
inc
rolb
inc
mov
popa
jecxz
and
bound
sbb
imul
ja,pt
jno
add
jle
or
jns
push
jle
fcompl
pop
pop
adc
loop
cmp
fsubrs
nop
jl
add
pop
cmp
out
xor
mov
aas
inc
cmpsl
jg
scas
sub
dec
pop
adc
je
inc
inc
sahf
inc
or
push
int
push
jno
sahf
imul
mov
decl
je
fld
mov
push
pop
imul
loope
aam
dec
sub
aas
ds
push
xchg
inc
push
pusha
cmp
notl
mov
sarb
out
inc
inc
out
push
lret
add
aaa
dec
incl
cmpb
out
and
adc
mov
cmp
loope
iret
daa
mov
pop
jo
mov
aas
jo
xor
repz
movsl
mov
sub
or
das
popf
and
in
dec
aad
xchg
sbb
mov
test
add
in
in
sub
sti
xchg
hlt
pop
rcrb
notb
std
xchg
les
ljmp
hlt
xor
mov
xor
xchg
dec
add
inc
push
mov
adc
test
xchg
dec
out
xor
int3
sbb
sahf
xchg
dec
imul
imul
lret
pushf
sbb
dec
dec
pop
in
xor
xor
inc
jae
pusha
sti
icebp
ljmp
clc
aam
shll
mov
popf
sub
int
dec
jge
push
xchg
sahf
push
cmp
pushf
pop
push
shrl
into
sub
les
roll
cmp
lret
out
scas
xor
lds
mov
xchg
test
in
aad
dec
popa
xor
push
pop
movsl
jmp
daa
bound
jg
pop
mov
movsb
jl
dec
push
sbb
std
and
mov
xlat
je
movsb
ja
sub
scas
clc
and
mov
inc
imul
popa
pop
shrb
ljmp
dec
xchg
sbb
rcl
sbb
inc
jnp
aam
ficompl
inc
inc
shrb
mov
mov
pop
ljmp
cltd
iret
xor
jno
lods
lea
sti
ret
mov
sbb
sahf
or
jb
jecxz
ljmp
clc
stos
xlat
pop
xchg
cmp
out
inc
mov
lahf
andl
ds
inc
mov
mov
jae
in
mov
lods
cltd
or
push
clc
sub
sub
orb
cli
movsl
dec
mov
cltd
jnp
popf
mov
js
sub
mov
not
ret
pusha
xchg
and
fs
xor
or
test
adc
inc
aaa
inc
stc
call
cmp
cmpsl
jg
outsl
iret
addb
in
or
data16
fucompp
xor
leave
pop
addr16
test
add
sub
fidivl
cwtl
mov
pusha
cmp
addr16
add
push
pop
or
dec
in
aaa
incb
sbb
loope
mov
data16
testl
leave
mov
mov
and
jecxz
dec
pop
popa
cmp
mov
or
add
out
xchg
xor
shrl
add
adc
mov
inc
mov
lds
sbb
cmc
in
ja
dec
int3
pop
dec
xchg
mov
scas
test
stc
rcl
pop
jmp
fdivs
insl
xchg
dec
or
lock
lret
aaa
or
adc
dec
adc
xchg
sub
rorb
fcmove
pop
sub
pop
scas
inc
dec
inc
lods
dec
sub
and
cmp
push
fwait
adc
icebp
xor
push
lock
insl
sbb
popf
jecxz
loopne
bound
lods
jno
inc
sti
push
dec
pop
mov
mov
jae
int3
lahf
add
movsb
imul
fimuls
pop
lahf
adc
sub
sbb
mov
nop
lods
in
lahf
push
roll
popa
icebp
add
icebp
or
dec
out
lea
inc
push
iret
bnd
mov
mov
cld
leave
addr16
scas
js
xor
in
pop
inc
sbb
push
pushf
xchg
mov
ss
pop
icebp
mov
mov
mov
aam
pop
push
inc
push
gs
pop
inc
hlt
loop
nop
int
in
push
roll
pusha
stc
push
jg
lods
sub
mov
hlt
and
divb
cltd
xor
je
pop
mov
sbb
test
pop
inc
repz
xchg
add
adc
popf
sub
mov
aad
push
gs
push
pop
outsl
jne
or
daa
adc
aaa
jl
jb
pushf
outsl
jmp
sub
ja
bound
push
daa
test
loope
imul
subb
pop
popa
inc
call
mov
dec
push
and
dec
mov
cmp
jl
pop
push
xor
xchg
mov
and
mov
or
insb
inc
cmp
call
dec
std
mov
mov
stc
sbb
or
dec
arpl
adc
mov
je
pop
or
repnz
or
push
lea
adc
cmp
fidivrs
es
mov
adc
mov
push
dec
add
pop
nop
iret
lret
jmp
test
pop
pop
std
clc
jmp
jnp
repz
cmp
mov
xchg
out
and
adc
addr16
add
jp
xchg
stos
adc
mov
ficoms
frstor
adc
xchg
jl
test
jmp
xchg
xchg
cmp
je
pop
in
das
out
scas
fdivl
divb
iret
mov
xor
sbb
fmull
sub
jae
notb
mov
clc
aaa
mov
dec
push
mov
cltd
push
in
out
mov
xchg
outsl
mov
in
adc
push
loop
fsubl
rolb
jl
cmp
add
lret
fnstsw
pop
ja
sbb
jecxz
into
add
or
xor
daa
insw
xchg
lcall
push
sub
es
into
pop
add
sub
inc
into
rorl
lcall
out
out
mov
test
inc
test
pop
sbb
enter
loopne
push
xor
add
scas
xor
loopne
jg
mov
in
call
jae
cmpsl
inc
xchg
xor
nop
inc
pushf
and
xchg
xor
sub
into
ds
push
shr
lahf
sub
dec
mov
add
jmp
cmc
mov
and
sub
mov
hlt
aaa
xor
xlat
jnp
inc
fnstsw
push
nop
inc
cmp
mov
mov
push
lock
dec
add
sub
mov
enter
xchg
je
loopne
jnp
popf
push
jo
push
gs
xchg
test
outsl
cld
and
and
or
mov
adc
pop
out
ljmp
xor
mov
ret
xchg
nop
xor
push
cmp
or
or
int
ror
call
jmp
stc
shrl
fisttpll
jbe
jno
stos
rcll
add
cld
ret
inc
xlat
jnp
lods
aad
movsl
push
add
xor
mov
cmc
xchg
fcoml
push
and
movsl
dec
ja
pushf
fildll
in
jecxz
sbb
mov
jp
shll
and
jbe
imul
sub
inc
loopne
test
xor
dec
cld
mov
cmp
or
add
cli
jle
aaa
jg
insb
push
int3
ljmp
icebp
jae
rcrl
mov
jne
add
inc
jae
cli
xchg
cmp
xor
pop
mov
inc
das
lods
sahf
sub
test
pop
pop
push
jne
sub
sub
cltd
cmp
mov
test
pop
mov
adc
jo
ffree
out
xor
cmp
aam
adc
in
lret
pop
sbb
sub
pop
and
sub
and
dec
enter
mov
push
jmp
and
inc
jns
cmpsb
lret
sti
pushf
mov
jns
popa
add
faddl
inc
push
divb
inc
pop
dec
gs
movsl
lds
das
arpl
cmc
jle
mov
in
insb
lahf
sub
cmc
lock
dec
sbb
lods
dec
add
jg
inc
inc
scas
dec
inc
dec
gs
push
movsl
inc
inc
add
cmp
or
int
hlt
jnp
imul
popa
pop
xchg
fisubrl
cwtl
mov
popf
adc
loopne
adc
lret
mov
pop
fidivl
xlat
negb
stos
adc
xor
jp
fsub
inc
mov
push
mov
fadds
imul
add
enter
sahf
inc
cs
sti
mov
aaa
lahf
daa
adc
or
sbb
std
push
sbb
fiaddl
sub
repnz
nop
xchg
or
leave
stos
popa
idivl
notl
enter
loope
and
loop
scas
iret
lea
pop
sbb
xchg
xor
je
xor
jo
cmpsl
icebp
xchg
pushf
aam
or
xchg
in
repnz
jmp
sbb
push
xlat
xchg
rol
xor
jmp
lcall
adc
adc
push
adc
mov
imul
int
out
cmpsl
ror
popa
xchg
lock
pop
sub
pop
stc
mov
subb
in
cld
lods
push
popf
fnstsw
dec
icebp
test
push
jae
mov
or
stc
add
sarl
rcr
test
xchg
adc
out
inc
gs
ss
jo
inc
or
xor
cld
sti
xlat
or
adc
dec
into
adc
mov
movsb
dec
test
dec
mov
cmp
dec
mov
lret
push
movsl
xlat
jge
inc
fwait
xchg
mov
cltd
sarl
and
add
sahf
inc
movsl
adc
outsl
mov
inc
dec
je
test
push
aad
mov
cmp
sahf
dec
out
fs
adc
ss
xchg
add
gs
mov
mov
aam
out
andb
aam
inc
in
push
or
mov
add
xor
and
hlt
mov
or
mov
test
pop
or
sbb
fildll
or
repz
cmp
add
repz
and
je
push
bnd
add
mov
cmpl
test
mov
sub
mov
xlat
fistpll
imul
jns
pop
mov
jbe
shl
adc
inc
aad
imull
cwtl
imul
mov
imulb
roll
push
stc
outsb
cli
rcrl
fnsetpm(287
mov
cmp
es
xchg
cmpsb
movsl
addb
in
jbe
movsb
xchg
xchg
dec
dec
jns
aam
scas
into
cltd
jnp
mov
xchg
stc
dec
mov
jo
xchg
mov
outsl
xadd
ds
jae
and
cmpsl
mov
sub
jmp
fcoml
mov
inc
aaa
in
cmp
or
cld
xor
jmp
shll
enter
jle
repnz
jnp
pop
mov
mov
jo
push
data16
flds
inc
lods
ds
jo
add
jnp
rclb
jno
sub
loope
subl
scas
rorl
lods
or
cmp
pop
dec
js
sbb
cmp
or
sbb
fidivs
xor
ret
and
stos
push
sbb
cltd
aas
fidivrs
sbb
loop
popf
sub
rolb
fnsave
inc
dec
idivl
in
dec
or
loopne
cwtl
xor
roll
xor
mov
ret
pop
or
xor
xorb
mov
repnz
cmp
jmp
fs
fisubrs
push
jle
xchg
push
or
hlt
cmpsl
mov
jo
jmp
push
aas
mov
add
cmp
stos
sub
ja
jbe
arpl
in
add
and
push
push
stos
mov
arpl
add
jb
pop
jecxz
movsb
call
data16
xor
xchg
mov
stos
fistpl
add
inc
mov
es
insl
push
fcmovb
add
push
or
ret
mov
aaa
cmp
xchg
int
out
cmp
mov
insb
lock
jecxz
and
pop
stos
inc
mov
mov
jo
dec
pop
int3
jns
sbb
push
mov
sbb
xchg
test
icebp
fisubrl
cmp
fidivrs
test
arpl
adc
nop
sub
ret
cs
mov
in
enter
mov
or
mov
adc
imul
call
hlt
pop
push
lahf
mov
inc
jbe
cli
int3
mov
fcompl
sbb
test
icebp
mov
pop
jge
xlat
add
test
or
pop
inc
adc
das
push
mov
repnz
call
clc
out
mov
dec
jecxz
pop
push
roll
sbb
add
in
inc
add
jp
enter
movups
cwtl
aaa
adc
gs
push
xchg
jl
test
loopne
out
rorb
cmp
ljmp
dec
fbld
rorb
je
xor
cmpsb
je
lret
mov
daa
and
mov
pop
push
lret
dec
sub
mov
cs
test
dec
lret
roll
data16
push
jmp
shll
lea
adc
xchg
ljmp
inc
out
sbb
ljmp
dec
test
ja
and
shlb
dec
mov
in
cli
cld
xchg
inc
repnz
lret
push
xchg
push
push
popf
test
inc
shrb
jecxz
and
mov
shl
repz
pop
mov
call
int3
pop
insb
ror
lds
add
sub
jge
xchg
lock
dec
mov
push
repz
in
aaa
pushf
or
sub
pusha
cmc
mov
nop
pop
loope
fisttpl
cltd
and
dec
jbe
fcompl
lods
lcall
pop
xchg
clc
jne
xor
cmp
in
mov
mov
xchg
dec
shrb
test
movsb
push
addb
inc
in
inc
arpl
inc
mov
pop
or
pop
and
daa
add
adc
sbb
je
mov
data16
out
or
pop
or
ljmp
fidivs
sbb
lock
repnz
pop
cltd
cmp
arpl
sub
add
sbb
popa
sub
jg
mov
pop
nop
dec
fistpll
es
outsl
fsubs
sbb
mov
test
in
mov
jecxz
imul
pusha
in
jmp
lods
pop
xor
aam
dec
out
in
sub
mov
inc
and
jbe
push
cmp
xchg
sarl
cmpsb
in
jbe
lods
lods
dec
push
push
inc
stos
and
fimuls
mov
xlat
repz
aad
imul
push
shrl
pop
xchg
daa
scas
aam
jns
scas
or
inc
adc
cmp
or
push
out
cmpsl
ja
std
and
mov
jb
pop
leave
dec
les
adc
mov
sbb
lcall
dec
add
cwtl
lcall
push
adc
fsubs
pop
fcoms
mov
mov
push
in
hlt
aas
jge
repz
mov
mov
fs
out
repz
mov
add
shrl
or
fwait
outsl
fidivrs
sub
mov
jmp
inc
jno
adc
or
ljmp
sbb
enter
mov
mov
mov
push
imul
xor
sbb
and
sub
int
inc
add
in
loope
xchg
std
cmp
cld
jmp
imul
sbb
test
push
outsl
in
pop
in
xor
inc
or
inc
loope
in
enter
pop
lock
xor
aam
xchg
sub
loop
lods
ret
addl
cltd
aam
cltd
fiadds
add
out
adc
add
lcall
mov
mov
mov
xchg
inc
jnp
mov
rcll
dec
mov
cmc
sti
cmp
jge
rcr
jecxz
outsl
or
iret
cmp
add
mov
jbe
mov
imull
xchg
xor
repz
faddl
pop
jg
rcrb
ret
mov
pusha
lock
dec
sub
inc
mov
outsl
outsb
xlat
mov
ljmp
insl
lret
out
fmul
add
push
in
popf
sbb
push
scas
icebp
xchg
push
or
lret
je
imul
push
iret
lods
into
divl
sbb
inc
ficomps
mov
and
pop
imul
cmp
cmp
pop
jne
and
mov
or
inc
and
mov
dec
xor
add
shll
lretw
push
jl
cmp
inc
clc
mov
xor
mov
daa
or
xlat
cmc
and
inc
mov
lea
repz
sub
scas
mov
pop
pop
mov
test
cmp
and
and
mov
imul
mov
imul
sub
inc
insb
inc
loopne
xchg
lds
mov
movzbl
test
lret
mov
adc
in
movsb
sbb
lret
test
dec
cmp
push
ret
in
shrl
jmp
mov
loop
cmp
test
or
and
xchg
mov
add
fsubr
loope
pop
jp
sbb
sub
inc
sti
inc
adc
ljmp
fldt
mov
mov
filds
sub
std
iret
clc
sbb
icebp
hlt
jbe
add
mov
mov
xchg
jbe
ljmp
jg
mov
jbe
sbb
push
mov
jno
sarb
mov
and
shll
lahf
mov
data16
sbb
push
out
shrb
or
testb
gs
outsb
pop
sbb
in
sub
in
cmp
daa
push
js
push
sub
xor
icebp
xchg
xorb
sub
fcoml
jmp
mov
daa
jmp
or
aaa
mov
mov
mov
adc
jo
popf
inc
add
das
add
xchg
cmp
dec
jo
dec
sti
idivb
out
lret
fptan
imul
dec
push
mov
call
fstps
hlt
xchg
dec
push
or
xor
push
and
mov
outsl
or
dec
les
fwait
mov
ja
cltd
lea
pop
std
mov
xor
cs
scas
lock
push
stc
hlt
mov
sub
scas
dec
sti
push
icebp
or
mov
loopne
push
pop
mov
in
lock
fwait
inc
dec
jno
lods
mov
or
mov
mov
xor
dec
jg
xorl
sub
jno
lret
mov
mov
ror
sbb
push
push
iret
push
stos
jb
and
cmp
pop
push
cmp
out
jne
aaa
cmp
mov
sarb
repz
cmpl
cmp
or
jge
loope
mov
rolb
cmpsb
push
pop
mov
sti
in
sub
jmp
push
cltd
fcomi
inc
dec
jp
mov
lock
int3
push
jge
xchg
add
mov
pop
pop
fists
ss
inc
push
adc
inc
and
rcrb
mov
push
xchg
xchg
jns
pop
jl
cmc
jle
pop
bound
test
add
mov
push
jbe
dec
push
mov
jno
add
dec
and
sti
aad
popa
scas
cs
mov
ljmp
xchg
dec
dec
je
aad
mov
mov
pop
push
loop
dec
xor
sbb
mov
movsl
cs
aas
mov
lock
add
lods
fistps
push
jne
je
and
lret
and
cmp
dec
push
bound
sbb
outsb
jmp
shlb
or
push
insb
inc
xor
xchg
rorb
mov
sti
mov
insl
loop
lods
out
ljmp
scas
mov
addr16
push
mov
aad
rolb
pop
mov
dec
rcll
inc
fwait
lret
jns
inc
xor
cmp
imul
imul
mov
es
sub
imul
and
sub
mov
imul
cmp
bound
sub
std
fwait
push
mov
xchg
popa
sub
test
jecxz
mov
sub
xchg
and
rcrb
fildl
stos
outsl
ret
sahf
jg
ja
out
and
or
push
cmp
scas
add
cld
pop
divb
mov
cmc
adc
add
push
mov
aas
addl
mov
testb
lcall
les
or
fwait
in
inc
pop
aad
jne
sub
cmpsw
inc
sub
xorb
stos
jae
lods
jnp
inc
popf
cmp
or
test
es
sub
shrd
daa
imul
inc
cld
sub
je
loope
test
mov
cmp
loope
shlb
imul
loope
mov
mov
adc
inc
stos
stos
bnd
sub
cmpsb
jge
push
push
andb
cltd
adc
ja
scas
inc
cmpsb
shr
inc
mov
inc
movsb
test
idivb
loop
in
outsb
inc
inc
mov
pop
fidivs
xchg
add
mov
jns
inc
addr16
push
ja
xlat
xchg
mov
bound
dec
in
jb
scas
inc
test
imul
sub
pusha
xchg
gs
pop
movb
and
push
mov
xchg
in
dec
insb
fmull
rcr
sbb
filds
lock
push
dec
push
jg
rcrb
clc
punpckhwd
insb
cmc
sbb
in
push
bswap
and
pop
ds
das
leave
jns
mov
flds
mov
fwait
sahf
popa
push
enter
dec
inc
clc
dec
jb
sub
or
iret
add
xchg
mov
imul
sbb
leave
shrl
subb
cmpsl
lret
xor
clc
mov
pop
mov
lcall
inc
push
mov
jb
hlt
push
sbb
mov
int3
mov
cmp
sbbb
add
std
scas
inc
les
arpl
push
iret
xor
mov
iret
cmp
ror
push
aas
aas
cmpsb
notb
cltd
popf
movsb
and
movsb
xor
cmp
repz
arpl
nop
pop
mov
outsb
jno
mov
shrl
cmp
adc
jb
lock
mov
or
jmp
sub
jo
cmc
out
adcb
and
das
sub
stc
add
lcall
es
and
push
xchg
test
cld
aam
out
cmp
sahf
adcb
ss
inc
mov
icebp
cmp
enter
ret
mov
jg
and
fwait
inc
pushf
leave
inc
add
mov
or
outsl
out
or
fdivr
cwtl
xchg
movsl
les
in
or
out
mov
imul
or
push
push
cmp
or
mov
outsl
xchg
push
mov
aas
or
ds
mov
andb
insl
cltd
adc
add
ljmp
or
jl
or
loope
mov
xor
lcall
inc
mov
cmp
sub
cmpsb
mov
push
mov
adc
and
mov
cmpl
ja
adc
jl
dec
xor
insb
shlb
and
xor
cmp
push
gs
jmp
sbbl
movsl
ljmp
jg
mov
pop
cmc
lret
cmp
lcall
adc
xchg
iret
lcall
mov
and
xor
clc
int
push
add
test
dec
lods
xchg
test
out
push
push
cltd
sarb
and
testl
loop
or
lea
pop
and
ds
add
mov
inc
icebp
jg
jg
mov
out
xor
fwait
shr
dec
test
fcoml
shl
lods
mov
popf
fstl
outsb
mov
loop
pop
mov
add
je
cmpsb
flds
cmp
into
testl
lods
add
fisttps
add
mov
xchg
in
shlb
or
outsl
jge
mov
inc
xor
std
xor
push
in
lcall
pop
xor
fwait
and
xchg
cmp
jo
adc
xchg
dec
out
cli
cmpsb
add
rorb
popf
fidivs
loope
scas
int3
and
aas
pop
push
pop
xchg
cld
out
insl
or
test
jecxz
enter
scas
xor
pop
dec
mov
loop
sub
jnp
sub
pop
sarl
bound
ficomps
ja
lods
clc
cmp
gs
xchg
lock
jecxz
cmpsb
arpl
ret
jno
cmpsl
lret
inc
testl
jmp
int
std
xor
push
jne
mov
loopne
inc
jns
ja
mov
popa
lock
jns
inc
add
pusha
jno
shlb
mov
pop
inc
lock
movsb
insl
dec
stos
test
sbb
push
push
and
mov
lret
mov
pop
lods
test
xchg
daa
scas
testb
outsl
add
enter
mov
add
push
loopne
inc
and
std
shl
xchg
add
leave
lods
push
xchg
test
inc
pop
jp
mov
cmp
pusha
stos
cmp
out
test
pop
push
inc
icebp
clc
insl
xchg
xchg
jne
mov
shlb
in
lock
lds
testb
xchg
dec
xor
sub
and
cwtl
xchg
or
push
mov
lea
pop
jmp
clc
cmpsb
push
pop
mov
test
inc
aam
or
aas
mov
dec
out
in
inc
aaa
aam
fsubl
xor
test
cmc
or
mov
fcmovnu
jmp
aam
mov
dec
fldt
fistpll
popa
xor
xchg
popa
xchg
shll
ljmp
adc
rorl
pop
ja
fwait
negl
mov
jo
cmp
jae
dec
frstor
push
and
push
addr16
push
notb
dec
pop
and
test
into
mov
fldcw
dec
sub
adc
mov
pop
pop
outsb
cmp
insb
pop
sbb
pushf
jmp
ret
fwait
insb
cmp
ret
adc
pushf
inc
nop
and
and
xchg
jg
jl
adc
or
aam
out
into
inc
push
adc
jge
mov
cs
imul
dec
imul
lret
and
lret
dec
std
mov
xor
test
xchg
in
loopne
add
dec
inc
jl
jns
test
push
hlt
xor
or
or
mov
dec
jmp
pop
cmp
outsb
dec
fldt
jnp
adc
scas
jae
test
pop
fcmovnu
pop
negl
sub
mov
cmp
insb
pop
pop
cwtl
out
aaa
inc
loop
jle
push
out
inc
daa
insb
add
mov
call
push
adc
or
gs
popf
add
orb
mov
inc
mov
cmp
inc
sti
loopne
lods
fists
addb
jb
xchg
mov
les
adc
xor
fs
cmp
ret
insl
in
ss
adc
mov
les
lock
cmpsb
mov
pop
mov
inc
push
scas
test
sub
lods
pop
jno
lret
jl
sub
negl
or
xor
sub
pop
or
hlt
xorl
adc
and
mov
cmp
cmp
pop
shll
addr16
cltd
xchg
cmp
cmpxchg
cmpsb
jmp
rcr
jp
bound
in
add
mov
fists
sub
scas
pop
mov
test
bnd
jl
adc
sub
dec
popa
jmp
or
je
xchg
ljmp
pop
cld
popf
shl
sub
dec
xor
sbb
rcrl
adc
add
push
jp
aam
icebp
fcmovb
imul
jle
push
outsl
push
xchg
aam
jns
pop
imul
jg
inc
adc
xchg
mov
inc
pop
stc
pop
jnp
mov
das
xchg
fs
leave
jl
gs
rorl
or
sbb
insb
jno
popl
push
push
mov
in
add
movsb
clc
aaa
stos
and
ret
fcoms
pop
push
jns
ffreep
mov
movsb
add
mov
jo
dec
aam
in
imul
in
add
mov
mov
jmp
add
inc
add
test
bnd
inc
cmp
jb
stos
mov
mul
sub
adc
outsl
loop
mov
xchg
inc
push
aad
js
imul
fdivrp
sti
jle
jbe
xor
std
add
mov
div
dec
cmp
and
pop
insb
inc
call
movsl
sbb
fcom
sar
xchg
mov
arpl
xlat
mov
icebp
jg
clc
pop
loop
sahf
mull
scas
rorb
jle
mov
dec
scas
mov
add
call
mov
outsl
mov
out
enter
inc
mov
std
or
cld
pop
lea
mov
or
sbb
sbb
mov
int
sub
push
sbb
in
mov
push
sub
cmpsb
sub
mov
mov
sbb
add
out
xchg
mov
cmpl
in
and
pop
mov
inc
mov
sbb
add
lcall
and
or
loop
jnp
mov
rcl
xchg
push
movsb
push
test
dec
jl
sbb
mov
pop
rorb
lret
and
stos
add
icebp
outsb
mov
mov
push
push
fbstp
push
cmpsb
sub
rcrb
mov
or
aas
pop
mov
xchg
pop
loop
sub
out
ds
xor
outsl
stc
dec
xlat
pushf
lea
pop
push
cmp
aaa
add
addr16
arpl
int
sub
daa
cmp
ucomiss
les
out
adc
jae
and
dec
and
fdivr
jo
or
push
clc
mov
shll
xchg
push
cmpsb
push
sbb
mov
lods
ljmp
test
cltd
mov
adc
pop
pop
movsl
adc
xchg
ret
inc
repnz
sets
sub
mov
dec
pop
dec
mov
jp
insb
and
fs
inc
mov
dec
push
jb
aam
jle
leave
adc
testb
loop
push
in
sete
cmc
sbb
neg
adc
mov
and
lret
inc
pop
scas
arpl
sbb
inc
shrb
mov
add
jg
mov
add
sub
subl
mov
gs
push
mov
roll
push
mov
lea
int3
pop
test
sub
adc
je
push
push
fwait
inc
push
lods
cmp
addb
fiaddl
inc
sub
push
daa
cmp
stc
cltd
jne
ret
sbb
or
in
pop
hlt
icebp
fidivrl
and
mov
mov
sub
inc
cli
or
mov
adc
mov
imul
sub
test
mov
xor
mov
xchg
xor
imul
fmulp
frstor
add
dec
xchg
or
add
xchg
jbe
jle
or
or
ljmp
push
cmp
add
jns
or
add
test
movsl
js
xchg
sbb
adc
mov
data16
jg
mov
andl
mov
fistpll
pop
and
mov
ljmp
icebp
cli
rcrl
jg
xor
mov
and
push
cmpsb
scas
ror
xchg
rep
lea
or
sbb
add
mov
maskmovq
testl
lods
popa
mov
in
hlt
mov
lcall
pusha
xchg
outsb
xchg
int
inc
std
enter
cmpsl
and
add
mov
or
lds
iret
cli
or
jmp
lock
adc
mov
or
aam
dec
movsb
ja
inc
pop
repz
dec
push
sahf
xchg
cmp
push
and
jg
sti
jecxz
dec
test
ljmp
lahf
jbe
push
addb
mov
dec
adc
repz
xchg
mov
pusha
jl
and
add
fcmovu
leave
xlat
nop
imul
mov
outsb
mov
xchg
popl
sbb
jno
cmp
and
test
xchg
test
mov
mov
sbb
xchg
aas
sarl
movsb
mov
lods
fcoms
pop
xchg
xchg
sub
xchg
fcompl
xchg
pop
nop
ja
aas
fwait
iret
xchg
mov
sub
and
rcll
push
sub
cmpsb
lods
mov
mov
inc
pop
movsb
mov
add
in
sub
push
pop
fwait
lret
outsb
data16
pop
shll
dec
test
jo
test
jl
jecxz
lock
arpl
xlat
adc
movsl
loop
jb
das
inc
adc
stos
ficomps
scas
dec
push
test
insb
mov
or
imul
mov
sub
xlat
inc
add
xchg
outsl
mov
int
cltd
fistpl
pop
sub
pop
pop
adc
lods
xorl
inc
cwtl
xchg
jmp
iret
inc
xor
sub
jne
cwtd
outsb
out
stos
jmp
inc
jge
in
cmc
clc
cwtl
out
repnz
outsb
xchg
push
pop
cmp
dec
pop
inc
into
shlb
mov
mov
mov
mov
leave
addr16
jp
enter
fstl
sarb
into
pusha
jecxz
cmpsb
stos
int3
sub
fsts
mov
fsts
jmp
fdivrs
lods
push
jo
mov
pop
into
mov
movsb
sub
lcall
mov
push
movsl
loopne
jne
mov
aam
cmp
fsubl
movl
aas
jmp
dec
mov
dec
lea
push
xchg
xorl
pop
fisubs
jb
cli
mov
inc
imul
xchg
or
mov
push
out
xchg
lods
xor
push
ljmp
movsl
pop
push
and
push
mov
int3
iret
orb
ret
movsb
xchg
pop
pop
push
jg
pop
popf
adc
sub
enter
xchg
mov
mov
popf
aas
xor
inc
jns
rol
jb
stos
inc
sub
mov
hlt
inc
add
mov
sub
loope
loope
xor
push
shll
loope
cmp
outsb
shll
arpl
adc
push
mov
jg
cwtl
adc
gs
scas
adc
sti
imul
mov
or
jecxz
push
arpl
push
sahf
sbb
fistpll
dec
inc
mov
mov
and
arpl
xchg
insb
jno
mov
jbe
and
xchg
and
aaa
push
and
pushf
inc
mov
pop
leave
js
push
imul
push
ljmp
add
leave
pop
or
sub
mov
mov
dec
sub
loopne
movsb
push
cmp
dec
ficoms
add
leave
dec
mov
pop
inc
cmp
jecxz
test
and
cmp
mov
mov
iret
mov
lret
jnp
movsb
stos
rorb
mov
ret
push
dec
idivl
out
cmp
shll
or
pop
std
adc
shrl
inc
lcall
inc
xchg
push
jae
mov
jne
adc
pusha
mov
and
hlt
movsl
sbb
ljmp
jle
or
push
add
cmp
addr16
cli
test
cld
mov
xchg
adc
int
sub
xchg
xchg
stc
sbb
les
add
and
mov
xor
pop
add
and
push
dec
mov
aaa
push
notb
push
sub
sarl
jl
sbbb
aaa
enter
scas
test
pop
mov
rcl
loopne
push
gs
mov
das
sbb
mov
pop
cld
call
movsb
add
notl
add
ljmp
jge
mov
adc
add
sarb
lds
cmpsb
and
repz
mov
shrl
popa
add
pop
adc
jb
pop
dec
inc
sti
mov
inc
in
inc
loopne
test
jno
and
pop
in
mov
mov
mov
pop
call
pop
push
or
push
dec
adc
stc
dec
cmp
mov
out
or
sub
jae
xchg
jno
xchg
loopne
dec
sti
mov
lock
adc
ret
push
repnz
or
sub
or
std
mov
xor
pop
mov
mov
pop
iret
cmp
push
fsubrl
sbb
pop
add
pop
in
sub
sub
andl
out
mov
push
stc
mov
dec
insb
or
call
nop
loopne
or
mov
in
fst
xchg
hlt
arpl
or
push
mov
lods
scas
movswl
lea
jmp
daa
dec
dec
lods
xor
mov
popf
clc
and
xor
mov
mov
dec
adc
shrb
pop
xor
push
inc
xor
cltd
xchg
sbb
out
xor
sahf
sub
fcmove
push
test
sbb
xor
jge
lcall
mov
test
in
jbe
js
push
mov
sahf
push
push
fs
lahf
scas
mov
jo
sbbb
jbe
bound
jno
fcmovnu
inc
xchg
xchg
jo
iret
cmp
and
repz
icebp
xor
hlt
push
negl
pop
nop
rorl
mov
xor
add
xchg
and
rol
jnp
jbe
dec
in
xchg
mov
ljmp
pushf
loopne
ret
pop
and
jge
dec
xchg
dec
push
or
aam
xchg
mov
pushf
jno
imul
ds
dec
mov
sbb
adc
mov
mov
and
stos
xor
fsubrp
push
loopne
out
mov
xor
xchg
sbb
outsl
sbb
mov
incl
inc
rcrl
lret
cltd
inc
inc
mov
inc
ljmp
sahf
inc
repnz
scas
cmp
inc
pop
mov
sub
data16
push
push
push
add
repnz
outsb
fldt
fstps
sbb
adc
sbbb
in
test
iret
pop
sbb
es
mov
add
mov
or
adc
pop
xchg
mov
inc
jmp
xchg
lcall
stos
loop
jb
xchg
rorb
sbb
jle
jge
test
add
sub
cltd
mov
mov
or
sbb
leave
or
test
mov
sub
lahf
fcompl
loopne
xchg
inc
test
inc
sbb
sub
lea
push
xchg
insl
int
test
rcll
mov
call
add
push
jmp
xor
add
fcomi
fs
cld
nop
fsubrs
stos
arpl
cmc
dec
jne
jbe
jg
loopne
rcrb
adc
into
xor
mov
or
addl
adc
mov
aad
aas
xorb
jae
popa
dec
stc
adc
push
and
int
iret
mov
push
jmp
cmp
testl
push
lea
or
std
xchg
mov
jo
sub
jne
ss
cmp
xchg
adc
leave
adc
cld
mov
inc
cmc
in
xor
mov
mov
fs
mov
bound
decb
pop
dec
insb
pushf
cltd
sbb
pop
iret
scas
ljmp
add
mov
add
mov
insl
stos
in
inc
mov
das
sbb
int3
je
movsl
xor
sbb
subl
insl
sti
mov
sbb
mov
jge
les
add
aam
mov
rcll
loop
addb
stc
adc
sub
icebp
mov
imul
arpl
mov
stos
pop
cmp
je
mov
cmp
push
mov
xchg
xchg
mov
pop
mov
add
mov
lods
jne
jo
inc
testb
movl
adc
cmp
pop
test
subl
test
sub
cwtl
sub
cmp
adc
push
aas
movsb
and
mov
fcomps
push
leavew
iret
imul
mov
sbb
pop
in
inc
cli
add
xchg
push
aas
inc
mov
mov
stc
adc
or
jmp
testl
cld
jmp
fwait
add
imul
lods
cld
push
push
cmp
fists
adcl
dec
insb
mov
adc
mov
pop
dec
jle
lea
movsb
sarl
dec
adc
cmp
mov
sub
inc
dec
sbb
push
push
lret
into
in
daa
dec
cltd
or
ss
notl
pop
aas
insb
rolb
xchg
jb
pop
fcmove
pusha
push
cmpsl
jae
aaa
mov
pop
cwtl
or
mov
lds
add
jno
xor
cwtl
loopne
pop
jns
jmp
out
outsl
push
das
lret
stc
movsb
adc
push
pusha
iret
dec
sbb
mov
stc
lahf
pop
fidivrs
shl
aam
dec
jno
and
insl
std
stc
mov
sbb
fsts
roll
sbbl
leave
scas
and
and
push
sti
adc
push
add
scas
sub
jnp
mov
xor
jmp
rclb
imul
push
sub
std
cld
and
dec
jno
mov
xchg
sub
fst
or
in
adc
mov
xchg
push
inc
or
aas
aad
ss
sbb
xor
sub
cmp
adc
mov
jmp
dec
lds
push
mov
loope
or
dec
sbb
sub
push
setns
cmp
xchg
push
mov
sub
dec
test
cmp
xorl
and
icebp
push
cmp
insl
push
and
or
cwtl
xorl
pop
xchg
jecxz
fwait
sub
jl
lahf
push
inc
sahf
lret
xor
sub
dec
add
icebp
scas
cwtl
xchg
adc
add
es
dec
movb
add
int
dec
out
mov
in
mov
push
xor
test
push
loopne
ljmp
jmp
sub
lods
mov
fildl
pop
sahf
push
popa
sarl
hlt
jp
lods
insb
cltd
popf
adc
push
and
scas
lods
xorl
jecxz
cld
or
scas
xorl
dec
lods
outsl
mov
rorb
pushf
out
pop
cmp
in
rorb
cmp
imul
fbld
mov
arpl
xchg
push
sbb
out
call
imul
xorl
add
rcrl
xor
add
cli
adc
call
insl
jle
rcrb
mov
push
aas
mov
aas
inc
jbe
push
ds
mov
mov
cltd
cs
rcll
cmp
dec
lods
sbb
mov
sbbb
mov
cmp
fwait
xlat
jae
adc
ret
lds
das
imulb
xor
jb
test
push
sbb
mov
xor
cmp
flds
sub
dec
test
ss
adc
jne
push
mov
push
arpl
hlt
aam
pop
pop
fidivrs
sub
call
les
pop
arpl
imul
push
pop
jns
jns
mov
nop
sahf
lods
add
decb
dec
jno
rcrb
test
cli
sbb
mov
out
mov
xlat
mov
repz
mov
icebp
mov
icebp
in
testb
cmpsb
lret
insl
cld
test
into
lods
lahf
or
xchg
cmp
dec
sub
adc
out
and
popa
inc
popa
ss
leave
mov
pushl
sub
subb
mov
fnsave
push
ja
jle
fcoml
mov
movsl
adc
clc
sbb
sbb
cmp
push
dec
jnp
aad
jle
inc
inc
lea
pop
and
insl
inc
inc
push
adc
les
sarl
orl
jp
xor
jg
xchg
cltd
enter
repz
dec
fcmovnb
bound
insb
pop
mov
ja
lods
icebp
repnz
add
pusha
test
das
inc
xchg
sub
stos
jecxz
lods
push
xchg
jl
repnz
das
xchg
mov
inc
sub
cmpsl
jmp
xchg
cmpsl
pop
movsb
fldl
xor
mov
xchg
sbb
adc
je
shll
or
mov
imul
js
enter
outsb
add
jmp
lea
xchg
xor
addr16
in
lcall
fucomi
cmp
cmp
cmc
ds
inc
adc
jp
stos
cmp
nop
pop
and
jo
add
jge
iret
adc
xor
jno
fdiv
sub
or
or
xor
jno
pop
mov
nop
jno
jae
sub
ja
js
pop
imul
std
mov
push
dec
addb
ljmp
cmp
out
lods
and
pop
shrb
and
repnz
push
pushf
int3
xchg
or
stc
jg
push
out
cs
xchg
add
xchg
adc
aad
xchg
popf
xchg
push
in
add
mov
test
test
sbb
fcoms
push
sub
push
and
fsubrs
dec
xor
fs
mov
dec
lret
cmp
cli
push
pop
mov
out
add
lcall
mov
add
xchg
xorb
scas
lods
sbb
inc
cmp
jmp
xor
inc
or
push
stos
mov
icebp
je
mov
sbb
push
cmp
jne
loop
in
dec
mov
cmpsb
push
fwait
or
loop
mov
daa
push
cltd
mov
daa
loop
inc
add
out
mov
in
idiv
es
cli
push
pusha
xchg
dec
insl
mov
cmpsb
iret
into
repnz
mov
out
pop
mov
or
and
sub
fsubs
mov
imul
ja
cs
mov
jecxz
shlb
cmp
push
cmp
cld
js
sbb
xchg
fstps
lods
xor
cmp
push
lret
dec
cmp
lods
and
in
jne
enter
stos
lcall
adc
shll
sub
mov
adc
fimull
mov
jp
cmp
dec
inc
fists
mov
outsl
test
cltd
sarl
mov
pop
cmc
xchg
icebp
out
inc
jg
popf
jmp
ret
xorb
mov
xchg
push
stc
jns
add
push
inc
outsl
push
jecxz
xlat
adc
scas
xor
dec
icebp
imul
stc
imul
into
stos
xchg
xor
fnstsw
testl
movsb
out
cmp
rorb
pop
mov
pop
mov
aam
cmp
mov
std
lods
ds
xchg
push
dec
cmp
shl
popa
or
dec
je
sub
idivl
push
mov
mov
or
push
xchg
cmp
sarl
fwait
cltd
sbb
pop
push
adc
dec
out
int
imul
mov
and
sarb
stos
je
inc
mov
insb
sbb
shr
or
sbb
add
push
mov
out
ret
xchg
outsl
sub
inc
xor
aam
outsb
icebp
xchg
and
ds
inc
mov
lret
repnz
rolb
lahf
sbb
sbb
in
out
loop
arpl
imull
daa
sub
push
repnz
mov
outsb
dec
aam
insl
call
dec
bnd
das
jnp
ds
xchg
inc
lds
fmul
les
push
loopne
add
pop
out
add
repnz
lret
sub
shll
sub
aam
arpl
bound
mov
mov
pop
cmc
cmp
aaa
flds
mov
test
ss
andb
jns
adc
sbb
jne
push
rclb
push
sub
insl
pop
cmp
jmp
mov
and
dec
mulb
in
scas
jns
add
dec
pop
pushf
popl
test
sbb
jns
add
add
loop
fs
xor
push
sub
xlat
xchg
jns
outsl
rolb
xchg
ret
sbb
jno
cmp
popf
jecxz
cmpb
sub
repnz
dec
sti
or
ror
pop
mov
jecxz
sahf
mov
es
and
outsl
cmpsl
sbb
or
or
clc
sub
clc
mov
in
sbb
pop
push
lret
fbld
cwtl
cs
sub
lahf
adc
and
mov
push
outsl
dec
dec
mov
cmp
inc
xchg
pop
cmp
mov
inc
aaa
in
jo
fists
enter
cmp
push
xchg
cmpsb
mov
sub
inc
daa
lret
mov
sbb
mov
jb
insl
aas
andl
cmp
imul
jb
mov
mov
mov
pop
push
into
inc
dec
mov
pop
test
xchg
sub
stc
loop
xchg
inc
adc
test
mov
or
xchg
lds
adc
lcall
push
mov
pop
aas
mov
xor
pushf
out
adc
mov
sub
in
push
int
repz
cs
imulb
push
jmp
and
mov
les
jnp
xor
outsl
mov
lret
and
sti
mov
sub
fwait
std
xchg
jnp
cli
mov
fwait
cli
dec
aas
pop
mov
dec
lcall
mov
in
imul
xchg
clc
pop
xor
jl
rcrb
jl
cmp
int3
or
dec
push
mov
lcall
push
cmpsl
jno
mov
int
ja
pushf
pop
sbb
js
mov
pop
fcmovb
fisttps
mov
jne
sub
sub
loop,pt
fs
adc
mov
xchg
mov
nop
push
cmp
movsl
xor
push
or
lahf
dec
push
rcrb
dec
inc
aas
sbb
popa
mov
jae
repz
stos
out
cmp
push
adc
xchg
idiv
insl
test
fwait
or
mov
ljmp
call
dec
or
push
imul
mov
sub
xchg
fidivrl
push
sub
es
roll
add
sbb
jp
js
mov
dec
outsb
push
loopne
pop
jne
mov
clc
adcb
inc
or
sbb
sub
push
movsb
addr16
bound
adcb
data16
lock
pop
mov
test
mov
inc
mov
pushf
lods
and
pop
inc
and
mov
nop
lcall
pop
in
or
push
lock
out
and
aaa
lret
xor
loope
movb
cmp
pop
imull
push
xor
push
xor
je
xchg
jae
dec
stc
sbb
cmp
les
sbb
dec
pop
sbb
cmp
pop
pop
xchg
mov
lea
shl
out
and
cli
xlat
ficompl
adc
push
mov
add
stos
lcall
jg
mov
ja
pop
inc
out
in
xlat
lahf
xchg
movsb
pop
mov
imul
push
scas
jmp
es
repnz
mov
and
sub
add
lods
pop
xchg
out
into
jne,pt
xchg
dec
xor
mov
jb
data16
int3
sbb
mov
jecxz
out
or
pop
pop
jge
das
push
icebp
ss
inc
jmp
mov
push
sub
add
das
jl
pop
shlb
jns
or
popf
xchg
test
sub
push
xchg
inc
dec
test
cmp
push
xchg
aad
pop
cmc
or
shrl
cmp
in
ljmp
and
lret
push
push
add
cmpsb
mov
mov
sbb
outsb
loopne
inc
jecxz
cs
mov
lds
pop
insb
or
ss
lods
nop
rorb
cwtl
push
int
sbb
xor
mov
mov
pop
mov
xchg
pop
add
repnz
and
or
xor
out
incb
fsubrs
sti
je
jmp
adc
cltd
lods
dec
hlt
jle
mov
mov
xor
loop
inc
loopne
sbb
and
mov
aaa
fdivrl
icebp
xchg
test
jg
aas
in
inc
jb
call
xchg
je
int
mov
shlb
in
mov
mov
xor
cmp
rcll
outsb
lea
xchg
cmpsl
mov
not
iret
icebp
dec
stos
pop
shll
push
ret
inc
dec
call
pop
cmp
mov
inc
sub
cmp
call
xor
mov
xor
aad
cmp
cmc
cmp
push
push
sub
xchg
and
std
or
jbe
cmp
jecxz
push
add
add
arpl
jno
add
sarl
addr16
lret
push
jg
repnz
push
add
ficoml
iret
shll
jns
mov
pop
or
outsb
or
fildl
push
dec
sbb
je
nop
push
mov
xchg
adc
mov
mov
scas
xchg
aam
or
or
sbb
sbb
fsub
leave
and
push
loopne
fiaddl
xchg
in
lahf
fst
add
aaa
sbb
push
loop
ret
imul
popa
mov
inc
xor
lcall
movsl
insb
pop
mov
out
stos
mov
jecxz
fsubrl
push
lea
fsubl
rcrb
cmp
mov
jne
sbb
sbb
into
dec
loop
dec
bnd
cmp
mov
aad
jne
cld
enter
andl
out
lahf
fidivrs
fildll
mov
popf
orb
xchg
add
xchg
push
test
rcll
add
jmp
add
pop
sarl
pusha
mov
cmp
test
jae
movsl
int3
cmp
xchg
lods
cmp
pop
shll
jge
jno
imul
dec
or
and
lea
add
mov
mov
adc
mov
mov
daa
push
push
cmp
mov
push
pop
xchg
inc
loope
sahf
adc
push
push
jno
sbb
mov
pop
mov
loope
adc
xor
out
mov
jecxz
pop
out
arpl
push
inc
dec
sbb
jge
dec
mov
mov
cmp
jbe
repnz
xchg
mov
fidivl
pop
loope
int
iret
loope
dec
mov
imul
sarb
cmp
sub
pop
push
mov
leave
sti
pop
push
popf
dec
sbb
inc
pop
divps
insl
lock
in
and
push
push
jnp
inc
incl
js
mov
jecxz
dec
or
pop
shrb
insl
push
lcall
popa
sub
adc
pop
test
adc
mov
aam
sub
cmc
sub
dec
test
aam
clc
test
test
lret
xchg
idiv
mov
fistps
aaa
das
nop
pop
outsl
scas
mov
dec
push
dec
rcr
push
repz
sub
sti
adc
test
xlat
pop
imul
adc
sbb
adc
scas
gs
sub
xchg
and
gs
push
jp
arpl
push
mov
gs
imul
push
int
fdivrl
pop
stos
pop
inc
fwait
repnz
mov
cmc
sub
mov
push
ja
dec
stos
pop
and
lods
sub
ljmp
mov
fwait
pusha
adc
flds
mov
fidivrs
push
fyl2x
repz
je
loopne
aas
es
fldcw
jecxz
and
xor
ja
daa
mov
add
or
inc
sahf
xchg
and
lea
inc
lcall
mov
pop
sub
pop
inc
test
pop
xchg
add
push
cmc
push
idivl
pop
and
dec
rcll
lods
call
lahf
push
add
and
incb
and
aad
cmp
push
pop
jne
pop
repz
and
xchg
out
mov
cmp
clc
pusha
sbb
pop
jle
aam
inc
mov
dec
leave
xlat
les
lods
xchg
into
rclb
mov
ret
sbb
xchg
add
jne
fwait
sub
das
mov
and
push
and
mov
imulb
dec
cli
aam
out
aam
gs
mov
and
ficoms
and
or
push
or
inc
jmp
pop
test
mov
push
jne
lret
decl
mov
addr16
into
cmp
popf
aas
repnz
and
loope
add
xchg
adc
xor
push
movsl
xchg
stc
jge
negl
mov
adc
pop
pop
pop
aam
imul
sub
sbb
int3
jb
xchg
add
pop
loopne
shrb
aam
icebp
mov
loopne
pop
out
push
shlb
adc
sbb
dec
jae
test
aas
pop
xchg
into
enter
sub
pop
popa
mov
or
movsb
pop
into
mov
xchg
dec
push
rcrl
mov
dec
or
jecxz
fs
xor
test
roll
mov
pop
jnp
les
or
lcall
jns
inc
hlt
les
jmp
push
mov
mov
mov
xchg
repz
adc
cmc
and
cmp
xor
dec
push
and
pop
push
inc
clc
adc
or
repz
adc
popf
lret
jmp
cmpsl
je
jmp
rdmsr
mov
xlat
shufps
in
popf
in
xor
sahf
js
mov
dec
ss
mov
nop
in
push
jle
bound
cs
int
cs
and
mov
and
jge
push
sub
adc
or
in
mov
sub
jae
xchg
and
mov
push
fistps
mov
movsl
pop
push
sub
dec
xchg
xor
cld
arpl
mov
negl
xchg
xchg
leave
aas
pop
sbb
lods
dec
xchg
and
add
add
loop
push
push
add
insb
daa
cmp
nop
std
pop
sbb
mov
xchg
push
std
shll
dec
loop,pn
pop
xor
cltd
cmp
mov
add
mov
movsb
fs
adc
jae
sarl
mov
mov
aas
xchg
je
jmp
mov
imul
lea
add
bound
fcmovne
clc
clc
add
leave
pop
pushf
aam
push
dec
stc
repnz
stos
rcrb
std
lds
lret
or
vhaddpd
lret
cmp
gs
adc
pop
mov
outsl
sahf
jecxz
dec
mov
xchg
cli
adc
dec
pusha
sahf
stos
test
notl
or
push
xchg
xchg
xchg
scas
popf
mov
sbb
stos
mov
sarl
push
mov
call
loop
add
mov
adc
dec
adc
push
cmp
out
xchg
xchg
push
or
in
shl
ljmp
outsl
jno
aas
insl
out
inc
jns
sbb
in
pop
xor
mov
sbbl
cmp
call
mov
inc
xor
sbb
imul
add
dec
sarb
xor
mov
mov
inc
xchg
jmp
add
inc
orb
add
jb
mov
adc
push
into
pop
sbb
rolb
movsl
test
and
cmp
into
rcl
cld
jne
mov
and
mov
std
popa
outsl
jmp
mov
int3
test
xchg
imul
inc
testl
popa
lock
nop
scas
xchg
test
xor
cmp
imul
jae
xor
jg
lea
jecxz
xor
dec
inc
inc
psrld
xabort
mov
insl
jge
mov
cmpsb
shll
mov
fnsave
cmp
pop
add
enter
ror
data16
push
mov
jae
ja
imul
push
jg
cmp
cli
push
ljmp
or
movsl
clc
push
and
lds
pop
out
push
repz
mov
mov
ret
sti
sbb
xchg
or
xchg
adc
mov
cmpsb
mov
add
add
fs
pusha
aaa
push
jns
ja
mov
push
mov
cmpsb
cmp
test
incb
iret
xchg
fmull
fisttps
fwait
jmp
mov
jne
fstcw
jg
lret
ss
jg
xor
pop
sbbb
flds
movb
pop
out
pop
sbb
jnp
xlat
push
xorps
and
dec
push
sub
mov
test
faddl
rolb
rorb
and
pop
sub
cs
mov
push
ret
addr16
sub
jb
sbb
push
or
ret
jp
dec
mov
int
push
mov
adc
mov
pop
fwait
dec
aaa
lahf
gs
andl
pop
jno
stc
mov
push
negb
pop
mov
stos
test
movsb
mov
fisttpll
cmc
cld
push
aas
in
lock
jecxz
loopne
out
inc
add
inc
push
pop
scas
bound
cmp
das
cmp
jmp
sbb
dec
adcl
mov
es
xchg
and
xchg
sub
xor
mov
add
test
ret
ds
xchg
push
jge
pusha
outsl
or
jmp
mov
sub
push
cmpsb
sbb
jno
es
push
and
aad
mov
int3
push
sub
add
out
dec
loop
cli
xchg
xor
aam
jo
inc
push
and
gs
xchg
out
pop
xor
jo
jo
add
dec
shrl
inc
into
jo
inc
call
and
out
xor
iret
ja
incl
mov
jbe
divl
cmpsb
inc
pop
pusha
out
sbb
test
xchg
inc
or
hlt
jp
mov
mov
dec
filds
jae
sbb
mov
icebp
mov
movsb
shrl
shlb
xor
pop
mov
mov
sub
lea
pusha
jmp
inc
daa
pop
push
mov
addb
push
xchg
lods
xchg
or
addr16
aas
dec
mov
rcrl
out
aas
ja
negl
mov
ljmp
cmp
cmp
xlat
and
or
shrl
cmpb
subb
mov
loopne
push
outsl
add
pop
push
insl
adc
jae
cmp
sbb
dec
pop
fwait
xor
test
adc
push
pusha
jecxz
cmp
cmp
test
jmp
inc
lds
mov
icebp
ret
stos
jle
leave
inc
test
cli
leave
mov
and
test
and
lods
mov
jp
test
mov
outsb
jno
call
pop
cmpsl
jno
sub
mov
aaa
and
and
or
bound
out
fdivl
icebp
rcl
cltd
bound
std
inc
jle
mov
iret
sbb
add
insb
mov
dec
nop
dec
pop
iret
ret
push
nop
jo
sub
sub
pop
cmc
xabort
push
cmc
bound
scas
xchg
sbbb
imul
pop
imul
xchg
cli
out
inc
and
or
out
push
lcall
mov
lods
dec
mov
hlt
mov
sub
cmp
inc
mov
cltd
xlat
insl
daa
xchg
movsb
push
inc
and
adc
add
leave
dec
push
inc
xor
mov
mov
daa
jo
std
cltd
loop
mov
mov
mov
divl
bound
int
mov
add
add
rcll
stos
cld
sbb
insb
mov
addb
aaa
call
aam
pop
out
clc
jle
test
in
dec
sti
jb
jl
hlt
mov
jb
fldenv
rcrb
push
mov
ud1
pusha
cmp
add
pop
cld
adc
mov
adcb
test
adc
daa
xor
cwtl
shr
mov
add
add
dec
cmp
ret
cmp
test
add
mov
jns
pop
test
and
notrack
nop
mov
shlb
dec
cmp
mov
push
push
stos
rcl
pushf
add
cmpsb
xor
rolb
data16
or
jmp
adc
ljmp
in
mov
pop
out
mov
sbb
ss
jne
gs
test
call
in
jno
mov
loopne
adc
jae
sahf
daa
daa
or
addr16
ds
xchg
xchg
mov
shl
or
sub
mov
cltd
xor
xor
imul
inc
fsubl
aaa
out
sbb
mov
cmp
jnp
lock
ficoml
mov
adc
pop
in
in
push
pushf
je
cmp
xor
mov
add
dec
lahf
push
leave
pop
and
cmp
xor
lods
push
xor
cmp
pushf
test
dec
or
iret
adc
add
xchg
sbb
add
sahf
repz
fwait
mov
imul
or
loopne
out
flds
int3
cltd
mov
cmp
cmp
in
push
sub
sub
pop
out
or
hlt
ja
push
sarb
out
pop
or
mov
pop
jns
adc
pop
jo
push
jne
loope
ja
dec
shlb
inc
stos
adc
jmp
mov
lods
jmp
insl
aam
mov
aaa
xchg
push
mov
pop
andl
jae
lds
xchg
testb
out
xchg
xchg
and
add
cmpsb
int3
jge
add
jb
cmp
push
sahf
in
icebp
add
cmp
add
rcl
pushf
dec
xor
push
arpl
mov
lahf
push
xor
ss
cld
dec
mov
out
push
sbb
and
xor
les
dec
ret
outsl
mov
shll
pop
test
inc
pop
push
mov
cmp
mov
sbb
sbbb
push
sbb
imul
sbb
or
out
adcb
adc
lret
mov
pop
sub
std
repnz
inc
xchg
fistpl
push
les
aad
jg
movsb
insb
in
mov
lods
test
stc
cmp
push
push
mov
cmpsl
jae
adc
popf
and
fmul
lods
mov
addb
outsb
adc
loop
lcall
test
das
sbb
insb
outsb
xchg
sub
dec
data16
xor
in
push
pop
mov
dec
das
cmp
xor
adc
lock
clc
call
lret
shrl
adc
push
sarl
fsubr
mov
xor
out
imul
fs
imul
addr16
outsb
lahf
lret
shll
xchg
daa
xor
xchg
or
mov
cwtl
pusha
leave
pop
inc
lods
fcoms
jbe
pop
popf
mov
jne
mov
ss
pushf
sbb
lods
test
popa
mov
adc
addr16
mov
in
out
dec
das
pop
popf
sbb
cld
dec
pop
sub
fsubl
nop
aaa
iret
xor
or
addb
inc
cmp
adc
cmp
mov
xor
es
cmp
sbb
mov
inc
scas
sbb
xchg
int
dec
mov
pop
push
or
and
dec
cmovae
push
sub
out
int3
loope
sub
in
ss
jne
xchg
and
jmp
inc
xchg
pop
rcll
negb
repz
repz
jo
mov
adc
or
shl
sub
dec
fnstcw
xor
aam
xchg
or
jecxz
adc
sbb
jg
je
jns
in
arpl
add
je
xchg
enter
sub
sti
ljmp
xchg
cmpsl
aam
pop
repz
mov
cmp
shlb
mov
mov
inc
aas
outsl
push
xchg
jle
dec
dec
imul
sub
push
dec
mov
pop
fwait
outsb
das
and
mov
sbb
mov
out
fsts
and
loop
and
out
inc
xlat
pop
out
or
inc
sti
insb
lods
fwait
std
lea
bound
jl
inc
mov
test
jle
ss
mov
xchg
xor
inc
sbb
xchg
addr16
mov
shrl
push
cli
add
sbb
dec
addb
jae
jb
repz
scas
inc
add
pop
lret
fwait
jp
cltd
cwtl
popa
push
mov
fmull
notl
xchg
in
scas
outsb
cld
nop
push
xchg
push
dec
sbb
adc
mov
cwtl
popf
aaa
jp
cmp
out
outsb
shl
icebp
push
jb
rcll
cmp
inc
jns
jno
bnd
fdivrl
lret
fstpt
mov
adc
and
mov
icebp
mov
cli
into
jo
js
out
ljmp
add
stos
xor
scas
cmp
shr
xstore-rng
cmpsl
add
ss
sarb
test
adc
pop
in
mov
xor
testl
and
dec
add
imul
ja
lret
imul
lcall
movsb
out
shll
rorb
pop
imul
push
leave
adc
mov
ds
xchg
int3
and
dec
outsb
mov
fldt
in
add
pop
fsubrl
mov
xchg
adc
sbb
mov
std
cmpb
mov
sbb
mov
rorl
pushf
sbb
in
cld
aas
push
push
mov
and
cmc
pop
into
sbb
add
dec
push
fnstcw
mov
fwait
lret
aam
jae
push
aas
lods
cli
sub
push
xlat
ret
jae
cmp
hlt
hlt
mov
pop
mov
push
je
in
loope
fdivs
sub
shlb
or
dec
repnz
in
dec
test
mov
mov
subb
and
mov
imull
repnz
test
into
jmp
sub
pop
ljmp
and
ja
sahf
jle
pop
jmp
inc
inc
gs
lcall
cmp
pop
aas
in
bound
cmc
insl
enter
pop
js
int
cmpsb
dec
inc
xchg
xchg
or
xor
xorl
mov
btcl
sub
mov
leave
lods
ljmp
pop
xchg
xchg
insb
xor
jo
mov
sub
cmp
mov
decl
or
test
and
dec
jmp
lea
das
jmp
insl
shll
cmp
and
jle
ljmp
aad
add
mov
pusha
mov
sbb
icebp
rcll
fiadds
hlt
test
xor
scas
cli
shll
lods
lods
jle
iret
sbb
insl
jecxz
jno
xbegin
inc
cmp
sahf
mov
xchg
cmp
iret
movsl
xor
repnz
ss
mov
mov
inc
test
inc
xlat
insl
fisubrl
out
push
or
test
mov
xor
pop
and
sbb
push
sbb
jb
xchg
outsl
mov
out
mov
adc
and
sub
mov
dec
jns
lret
test
call
jmp
loop
daa
mov
sbb
ffreep
fs
pop
mov
iret
xor
hlt
insl
loopne
popl
inc
adc
pop
adc
push
imul
inc
sarl
or
fucomi
pop
mov
push
jne
mov
fildl
popa
jmp
or
xchg
je
pop
push
push
dec
or
dec
push
xchg
rcll
outsb
test
out
mov
push
pushf
xchg
out
push
lcall
imul
andb
mov
js
mov
lods
arpl
ret
les
add
add
nop
xor
lret
sbbl
jno
nop
test
xchg
sbbl
gs
mov
cltd
rol
sub
lods
test
leave
into
adc
dec
in
dec
xchg
test
pop
jecxz
push
push
inc
add
mov
cmp
lock
cli
loopne
or
adc
mov
push
xor
mov
push
push
jp
loope
imul
enter
stc
or
mov
call
ja
lahf
inc
in
sub
adc
test
ret
mov
adc
and
test
mov
mov
in
flds
mov
es
js
cld
mov
xor
mov
stos
addr16
ss
aad
loopne
fistpl
iret
fimuls
mov
mov
lods
fucomp
leave
orb
cmp
or
adc
ljmp
mov
or
stos
jecxz
std
jle
cmc
div
mov
hlt
ljmp
pop
mov
sbb
sub
adc
adc
int
mov
scas
in
inc
push
subl
push
sbb
fcompl
mov
xchg
push
push
lret
pop
or
pop
sahf
sub
fimuls
je
pop
bswap
dec
fbstp
add
test
scas
inc
push
lea
adc
sbb
in
test
lea
mov
xchg
pop
or
outsl
xchg
in
pop
mov
jns
inc
in
sub
jl
out
sub
push
jmp
inc
lret
cmp
mov
popf
cltd
in
decb
xchg
sub
out
pop
xchg
or
jge
mov
inc
xor
sbb
inc
pop
dec
xchg
orb
adc
dec
xchg
movsb
dec
mov
loopne
arpl
dec
pop
xchg
data16
jns
sub
pop
mov
lcall
cmc
sbb
test
divb
dec
xchg
bound
mov
and
push
cmc
data16
cli
pop
bound
fldenv
pop
subb
jle
xchg
cmpsl
jmp
mov
aad
mov
packsswb
pop
les
pushf
or
xchg
rorl
ret
cli
decb
imul
loopne
pop
dec
cmp
add
jnp
lcall
lret
insb
add
lock
xor
loopne
sbb
adc
push
icebp
cmc
fildll
pop
call
int3
ror
sbb
mov
jmp
stos
sub
mov
sti
loop
mov
cmp
test
pop
cmp
cmp
hlt
lret
and
pop
mov
push
and
xchg
call
sub
loop
mov
int
pop
loopne
fisubrs
out
in
mov
sbb
or
cwtl
pushf
mov
test
mov
xchg
mov
rcll
mov
bound
mov
jns
push
call
xlat
shll
pop
fcoms
xchg
lock
and
mov
push
push
or
pop
push
iret
loope
xor
lret
jne
idivb
xor
popf
sarb
dec
addr16
jnp
jmp
jmp
repnz
popf
mov
inc
mov
lock
cmp
xchg
data16
add
mov
mov
lea
jae
sti
pushl
cltd
xchg
addr16
add
cmpsl
clc
mov
sub
shll
mov
mov
and
repz
loop
jle
xorl
decl
scas
enter
push
arpl
mov
xor
xchg
stc
mov
add
push
lret
iret
add
xchg
out
icebp
xchg
cli
popa
add
cmp
mov
push
cmpsl
pop
xchg
xor
push
pop
mov
jne
lcall
leave
mov
or
test
iret
nop
mov
push
and
jno
adc
cmc
data16
xchg
push
popf
popa
outsl
cmpsl
repnz
bswap
subl
push
addr16
cwtl
mov
sbb
jnp
xchg
shr
shlb
test
lods
int
sbbl
stos
add
sbb
pop
insb
in
cmc
addb
mov
xor
pusha
mov
jae
adc
jle
pop
inc
loop
jl
lock
xchg
popa
hlt
xchg
pop
mov
dec
xor
repnz
push
xor
test
in
mov
loop
jne
enter
jnp
rcll
aas
adc
mov
int
jb
rcll
cld
out
je
pop
lock
shrb
push
sti
mov
cltd
ret
out
jp
mov
sbb
sbb
in
jg
sub
inc
cmp
push
xor
fdivrl
aad
aam
mov
movsb
mov
mov
cmp
sub
mov
sbb
mov
outsb
sbb
dec
pop
lcall
movsb
sub
xchg
push
adc
sub
je
xor
sbb
in
jge
pop
movl
lret
bound
pop
inc
ljmp
daa
mov
shll
aad
cmp
fwait
add
jno
je
or
mov
popl
testl
push
rcrl
sbb
movsb
push
call
sub
mov
and
test
loope
movsl
pop
inc
mov
mov
fsubl
loope,pt
movsb
xor
lods
pushf
cmp
das
jg
add
and
xorb
push
fldl
xorl
push
xor
jns
cwtl
mov
push
inc
or
jecxz
dec
in
sahf
fdivrp
iret
shrb
cltd
push
pop
cli
xchg
pop
sbb
and
add
iret
dec
notl
push
pop
jecxz
nop
shlb
lret
icebp
in
xor
xor
pop
jbe
pushf
mov
jo
pop
mov
ss
ds
cwtl
filds
sarb
cwtl
pop
sub
xchg
push
sahf
arpl
loope
pop
mov
sbb
adc
sub
xchg
sahf
cmpsb
test
sbb
repz
fdivrp
aaa
orb
pop
hlt
nop
add
add
xor
or
push
dec
jb
inc
fnsave
mov
jmp
jl
xchg
or
in
jge
pusha
and
mov
dec
addl
fbld
xor
mov
andb
ds
dec
lock
rclb
jb
sub
inc
mov
sub
mov
push
add
pop
pop
aaa
test
or
into
and
jns
iret
push
div
bound
sub
test
enter
mov
fbld
test
data16
add
push
les
cmp
cmp
mov
jns
pushf
dec
fnstenv
push
repz
sbb
mov
inc
test
push
mov
xchg
jg
inc
pop
or
xchg
pop
adc
jecxz
lock
popf
cmp
int3
stc
lods
sbb
out
inc
dec
jp
sub
inc
inc
scas
sbb
out
arpl
jne
lmsw
stos
out
inc
rorl
or
lock
mov
mov
sbb
popf
aam
test
mov
push
popf
out
fwait
lods
aas
push
jmp
push
pop
mov
fisubl
adc
push
loopne
daa
sub
addr16
insb
hlt
jmp
mov
outsb
xor
bound
add
mov
mov
xor
mov
bound
mov
fisttpl
jg
xchg
testl
pop
push
call
mov
pop
mov
div
push
icebp
pop
shl
and
mov
lret
popa
lock
mov
mov
and
imul
adc
jmp
stc
pushf
pushl
mov
sarl
repnz
adc
cmp
add
loopne
and
inc
sub
and
cmp
fsubrl
movsl
lret
jb
das
daa
sbb
push
cmp
xor
adc
out
jmp
std
jb
adc
jno
out
jae
rcrb
out
lds
pop
cs
in
pop
xor
and
outsl
nop
sub
std
fldcw
pop
mov
std
mov
mov
std
push
sub
lret
push
and
xor
mov
scas
mov
dec
xor
xor
loope
mov
jecxz
or
cltd
add
mov
sub
rclb
dec
mov
jg
sbb
inc
das
add
cmp
or
push
cld
bound
mov
inc
jp
add
ss
push
js
in
inc
pop
out
pop
repz
mov
sbb
xor
fisttpl
aad
fwait
xchg
and
iret
hlt
sbb
decb
jmp
push
mov
ss
rorl
addr16
js
cs
xor
dec
movsl
pop
jecxz
sub
sub
lret
mov
dec
nop
in
jge
sub
ret
pop
xor
dec
jb
insl
sub
mov
dec
jbe
in
sar
aas
push
imul
add
push
push
lcall
cmp
xchg
jae
in
cmp
inc
mov
arpl
push
fs
xchg
outsl
enter
xor
in
fmuls
incb
sbb
xor
cmp
xor
cmpsl
loopne
pushl
jbe
es
and
imul
in
fmulp
xchg
adc
jo
test
add
mov
das
int
cmp
mov
pop
inc
mov
and
aam
movsb
sti
mov
jne
lcall
pop
movb
mov
ljmp
fisubs
push
inc
cmp
lock
out
les
cmp
dec
outsl
jae
jbe
xchg
in
sbb
push
and
add
and
neg
sub
gs
cli
adc
in
inc
bound
outsb
je
insb
pushf
popf
sbb
adc
cli
jmp
sub
and
out
ljmp
push
jns
dec
push
scas
ss
xchg
sbb
and
aaa
ja
rclb
jne
inc
xor
jle
lds
in
mov
xor
addr16
xchg
mov
cmpsl
daa
cld
lods
repz
sbb
xchg
in
subl
adc
inc
push
cmp
nop
inc
xchg
addl
xor
jge
imul
out
loop
xchg
test
jecxz
loop
fcomps
xlat
in
inc
ljmp
inc
clc
mov
call
push
xchg
into
add
and
bound
lahf
bnd
pop
fdivs
test
dec
in
jb
jb
mov
add
fnstenv
xchg
mov
andl
inc
and
mov
test
fistpl
in
adc
leave
inc
adc
xchg
addl
outsb
push
inc
sub
mov
push
sbb
push
push
push
inc
xor
cmp
and
out
cmpsl
or
fidivl
mov
in
fidivs
mov
lret
dec
sbb
lods
or
jg
mov
out
push
mov
xchg
hlt
daa
jne
sbb
adc
sbbb
in
fld
pop
jge
lods
subl
test
int
and
dec
add
cmp
mov
sbb
jns
ret
rcr
push
sti
jg
jnp
cmpsl
iret
cli
cmp
push
stos
ss
imul
add
mov
mov
add
and
jns
push
popa
out
in
dec
or
fwait
movsb
xor
testl
xor
and
fcoms
xchg
js
in
xchg
pop
out
add
pusha
cmp
shl
dec
les
fstp
push
xor
xor
popf
add
xor
out
adc
pop
in
lret
pop
push
jbe
sbb
mov
test
pop
loop
fisttpll
hlt
leave
ss
outsl
xchg
sub
jle
inc
dec
fdivrl
sub
push
fnsave
ficoms
inc
mov
adc
jg
add
or
or
sub
test
nop
cmp
in
imul
sub
in
pusha
fstps
cld
lret
jle
insl
dec
sub
stc
cmp
mov
and
in
loop
mov
leave
lret
out
test
in
test
mov
je
insb
loopne
mov
cmp
sub
inc
sub
jmp
ljmp
xchg
xchg
jmp
and
sub
xchg
pop
sub
xlat
or
lods
fdivl
lcall
stc
out
fisubrs
jns
out
mov
and
pop
mov
inc
adc
popa
movsl
add
cmp
scas
xor
stc
jno
dec
mov
jbe
mov
xor
lea
mov
iret
nop
push
lods
sub
push
mov
xchg
mov
dec
and
or
mov
cwtl
pop
sub
xchg
aaa
data16
sub
fstpl
xchg
mov
cmpsl
mov
xlat
jne
sub
fst
push
outsl
mov
xchg
inc
xor
pop
stos
fildll
jb
cmpsl
int
push
rcl
std
dec
and
xchg
iret
add
add
in
daa
push
inc
in
jbe
arpl
jle
fbstp
sbb
jns
push
in
add
dec
enter
scas
inc
daa
in
sarl
dec
pop
inc
mov
dec
sub
enter
rolb
mov
scas
add
dec
ret
fwait
imul
sbb
mov
and
and
sub
mov
sub
cmp
pop
adc
loop
push
in
aas
arpl
enter
dec
push
push
xor
xchg
add
mov
mov
dec
test
or
mov
push
mov
mov
iret
and
dec
out
cwtl
ret
jmp
adc
dec
sub
lods
mov
roll
aaa
inc
aaa
addb
dec
lds
and
cmp
test
mov
pop
dec
hlt
dec
jno
mov
ja
iret
sub
fmul
enter
push
push
xchg
or
jb
orb
out
xchg
push
aas
mov
not
jnp
add
cmp
xor
inc
push
sbb
jae
imul
adc
adc
cwtl
cmpsb
jbe
in
jno
std
inc
add
stc
pop
lret
loop
dec
cmpsb
pushw
sub
dec
and
cmpl
scas
daa
jb
in
sbb
ret
sbbb
mov
xchg
adc
push
notb
out
popf
in
mov
adc
mov
lret
push
in
data16
push
mov
iret
mov
mov
and
xchg
xchg
jne
sub
jbe
sbb
rorl
fs
jne
and
cmp
outsb
popf
jmp
lret
and
pop
mov
iret
add
and
jecxz
in
lds
sbb
and
ficoms
pop
pop
insb
mov
and
sbbb
push
out
sub
push
dec
pop
push
mov
mov
or
jnp
adc
adc
cmp
fnsave
dec
or
cs
clc
jle
mov
xor
add
or
aaa
mov
mov
jge
mov
outsb
xor
arpl
gs
mov
xor
jb
mov
cmp
sbb
aam
jecxz
sbb
inc
adc
cmp
or
and
jl
or
lahf
subl
stos
xor
jno
loop
or
adcl
jp
jnp
jnp
mov
nop
aas
cmp
cmp
add
test
sbb
cmp
insb
insl
aad
in
pop
mov
pop
jno
popf
fidivrs
addb
mov
lock
mov
dec
push
push
loopne
cmp
mov
leave
cli
adc
in
lock
mov
mov
in
inc
dec
sbb
push
repz
and
dec
sbb
daa
push
xor
push
in
and
and
inc
or
sti
nop
nop
dec
std
addl
inc
inc
out
addb
mov
daa
and
ds
ret
daa
leave
xchg
sbb
popa
fdivrl
cld
xchg
cld
and
sbb
std
adc
sti
test
xor
sub
jge
repz
and
or
call
fs
dec
or
subb
pop
imul
repnz
lock
nop
mov
adc
sbb
sub
out
jno
jb
aas
mov
mov
aam
and
insb
push
in
int3
jmp
ljmp
bound
push
aad
push
bound
jns
cs
pop
xor
gs
shl
sub
mov
cltd
jge,pt
mov
insl
mov
fadds
hlt
fwait
insb
xor
nop
sub
subl
mov
scas
mov
lds
orb
loopne
mov
int
mov
adc
push
xor
mov
mov
sbb
psubd
xchg
arpl
mov
sbb
inc
pop
cmpsb
mov
pop
ds
dec
or
push
push
sub
mov
std
sbb
sbb
dec
inc
out
pop
popl
cmc
lret
jl
and
cmp
cmp
into
mov
sarl
adc
or
or
pushf
adc
aam
push
aas
xor
cmp
mov
out
fs
ja
fisttps
pop
enter
hlt
lret
bnd
adc
loopne
pusha
push
out
insb
movsb
jo
jl
or
sahf
cli
mov
add
inc
aas
std
les
push
fsubrl
jno
or
sbb
rorb
lods
testb
lret
gs
cmp
cmp
jne
test
jmp
inc
adc
jbe
cmc
dec
push
std
incb
jns
inc
xchg
shl
fcoml
mov
cmp
mov
xor
in
jne
imul
shrb
or
int3
pop
xor
loop
or
push
cmp
jmp
and
fstps
sbb
std
jecxz
ja
cwtl
pop
outsl
dec
mov
and
cld
dec
cltd
sbb
inc
es
out
adc
cld
cwtl
filds
mov
int3
and
jmp
imul
add
push
fisttpll
mov
xlat
pop
rcr
adc
pop
das
clc
arpl
fildll
arpl
imul
push
mov
test
loop
jns
xor
pushf
fstps
in
xor
push
mov
cmp
cmp
sub
inc
inc
mov
lcall
ret
cmpsl
imul
mov
jo
mov
push
inc
mov
lock
inc
rep
add
mov
mov
pop
cld
stos
cltd
push
and
les
bound
dec
mov
nop
push
repz
mov
rcrl
xchg
shrl
lods
jmp
fistpl
jp
hlt
pop
xchg
mov
push
mov
mov
les
fcmovnu
add
dec
jae
ljmp
pop
pushf
or
test
fisttpl
xor
or
push
addr16
adc
dec
enter
cltd
pop
mov
lret
lea
jp
mov
adc
mov
add
xchg
enter
and
jecxz
sbbl
in
gs
xchg
jno
adc
fdivrs
xchg
sbb
stos
stos
jge
fwait
jo
sub
rcll
or
mov
test
lret
jg
xchg
cwtl
xchg
jg
ficoml
adc
out
cmc
test
call
ret
ret
ficoml
aaa
lea
jb
xchg
in
adc
out
int3
sub
fisttps
xchg
or
ds
push
leave
movsl
mov
imul
test
fscale
subl
jo
in
or
sbb
iret
or
loope
or
mov
mov
insl
cmp
data16
aas
mov
mov
outsb
mov
fisttps
push
xchg
aas
rcrl
mov
push
push
xchg
mov
orb
andl
inc
aad
xchg
xchg
lods
das
push
and
and
dec
inc
pop
inc
shll
test
pop
data16
push
mov
xchg
popa
rclb
inc
sbb
shrl
fs
mov
push
stc
out
pop
or
lret
dec
ret
out
add
cs
cmpsl
jne
xor
pop
popf
adc
pop
cli
lds
movsl
mov
scas
jg
xchg
sti
and
gs
inc
test
mov
mov
imul
cwtl
cmp
int
and
pop
cmp
mov
cmpsb
dec
and
push
xlat
scas
lret
rdpmc
out
dec
pushf
nop
fwait
xchg
stos
test
push
add
xor
nop
dec
ljmp
and
dec
cltd
dec
pushf
jg
out
jl
int3
sub
jg
imull
lcall
addps
int
inc
inc
or
sahf
jno
mov
or
fdivl
or
add
and
mov
dec
mov
jp
push
pop
and
pusha
xchg
cmpsl
movsl
jae
mov
stc
push
and
iret
ja
pop
and
test
fisubl
movsl
jmp
cmp
push
or
sbb
ja
mov
push
push
mov
add
test
or
push
pop
mov
push
xchg
repnz
xor
addr16
inc
setb
mov
pop
nop
subb
or
and
enter
hlt
jle
insb
xchg
jg
aaa
in
cmpl
add
icebp
sub
adc
shrw
pop
fcmovb
cld
enter
add
xor
jle
jns
push
ljmp
lahf
loop
xor
mov
push
sbb
daa
mov
fwait
mov
add
mov
jmp
cmpsl
aaa
pop
and
adc
int
push
stos
xor
ror
std
jns
fwait
pop
fstps
imul
int3
ds
pop
ret
sbb
repnz
push
insl
addr16
loope
addr16
xchg
mov
dec
lds
rcl
cmp
fidivl
xor
lds
loopne
inc
fiadds
das
pop
dec
pop
sbb
cmpsb
adc
repnz
mov
std
sub
mov
leave
mov
push
movsb
stos
mov
xor
bnd
pop
aad
lods
xor
aaa
stos
cmp
aam
lcall
or
test
loopne
movl
mov
push
push
xor
negb
xor
adc
sub
jnp
mov
inc
and
stos
mov
aaa
sbb
push
idivl
fstp
pop
insb
scas
and
les
sbb
pop
adc
inc
call
sub
jnp
sti
cld
xchg
gs
cmc
or
fisttpll
dec
in
adc
ret
mov
imul
les
jl
xchg
in
push
mov
inc
daa
sbb
insb
cs
in
cmc
jl
add
std
xchg
sahf
xchg
in
ds
mov
add
add
and
jae
lret
flds
or
or
testl
xchg
jo
hlt
test
mov
push
adc
xchg
aad
sarl
mov
xor
jl
xor
inc
jmp
fbld
popa
lds
adc
adc
cmpl
insl
loope
cmc
mull
cltd
js
popa
cltd
xor
sbb
ljmp
mov
push
data16
fidivrl
outsl
or
into
push
inc
xor
fisubrs
adcb
inc
pushf
popa
add
iret
inc
scas
mov
jne
push
arpl
xchg
cmp
pop
sarb
int3
sahf
scas
and
cmp
stos
movsl
cltd
jg
or
add
pmaddwd
sub
mov
push
int
iret
mov
adc
mov
imul
lea
pop
sub
test
lods
push
scas
jb
vmread
jae
and
mov
jno
jne
fcom
insl
lods
int
push
cltd
into
popa
cmpsb
stos
cmp
lea
mov
mov
adc
ret
inc
lcall
add
bnd
mov
push
inc
mov
jg
ss
mov
lret
lods
push
xchg
in
mov
or
mov
xchg
jns
jmp
nop
push
aad
inc
xlat
leavew
push
dec
push
int
fdivr
adc
dec
test
fsubs
out
jge
cltd
sbb
cmp
testb
mov
cmp
testb
mov
in
into
test
sbb
lods
xchg
inc
addr16
popl
pop
icebp
test
lds
and
repnz
dec
jo
dec
das
fnstsw
std
inc
mov
pushf
mov
fwait
jg
and
cmc
dec
cwtl
lods
pop
mov
lock
addr16
cwtl
jl
or
cs
cli
push
movlps
pop
add
mov
pop
push
xlat
push
dec
add
mov
mov
int3
add
not
inc
cmp
xchg
lret
cltd
ja
jae
test
call
cmpsl
dec
and
inc
mov
lds
enter
dec
cmp
dec
or
ret
mov
sbb
stos
jne
or
mov
pxor
lock
out
repz
or
push
sbb
scas
dec
daa
mov
mov
movsl
mov
or
and
push
mov
mov
adc
stc
jo
jmp
adcl
cmp
inc
fistps
lods
mov
testl
stos
mov
adc
push
insb
push
xorl
fistpll
sub
push
mov
adc
stc
push
sarb
rcrl
pop
or
lods
pop
rcrl
cmp
push
xchg
xorl
sub
cmp
fs
pop
dec
sub
mov
adcl
adc
lahf
mov
nop
xchg
sbb
inc
sysret
movsb
out
mov
or
loope
in
inc
jmp
push
sub
push
addl
adc
fdivrl
ffreep
ret
jne
movsb
fmul
inc
fucomp
in
mov
inc
mov
pusha
push
aad
notl
ljmp
dec
dec
inc
dec
mov
rcrl
add
push
push
adc
mov
dec
cmp
sub
ja
jno
jp
xor
loop
xchg
lock
lock
xchg
sti
dec
leave
mov
mov
outsb
push
dec
mov
mov
lret
sbbb
mov
cmpsb
xor
adc
mov
dec
mov
dec
xchg
inc
push
sub
inc
aas
mov
mov
clc
cmp
scas
outsb
and
mov
push
cmp
mov
xor
pop
adc
daa
inc
xorl
and
adc
mov
push
dec
mov
add
test
test
arpl
dec
jg
bound
xor
enter
push
adc
sub
cmp
adc
xchg
rorl
mov
xchg
rcr
js
arpl
dec
inc
cmp
jp
pop
fistl
mov
jge
adc
push
dec
dec
or
mov
mov
sub
push
sbb
sbb
inc
bnd
outsl
daa
mul
push
mov
jne
mov
fnstcw
lock
mov
sbb
cltd
arpl
nop
and
xor
arpl
ret
scas
cmp
std
jp
scas
xchg
pushf
imul
xor
jle
inc
push
lret
cmp
data16
jbe
and
aam
dec
sub
call
cmpsb
xor
xchg
jle
adc
mov
mov
push
xchg
pop
jns
loope
pop
testl
xchg
cmp
xchg
cli
int3
mov
xor
inc
fldt
in
shl
sbb
aas
xchg
call
nop
xchg
mov
movsb
not
jb
arpl
arpl
cmc
xchg
int
sub
mov
aam
mov
mov
cmp
pop
out
lea
pop
push
fcmovnu
mov
outsl
dec
add
popf
shll
fsubs
in
scas
mov
push
sub
add
jnp
mov
jne
add
xchg
cltd
div
dec
mov
movsl
in
jecxz
jne
mov
lret
xor
jnp
cmpsb
inc
or
mov
nop
lret
pop
lcall
push
or
push
jae
stos
test
popa
cs
ja
cmp
push
or
out
repz
fmull
dec
cmpsl
imul
out
fisubs
dec
dec
sbb
add
sbb
mov
repnz
in
repz
mulb
inc
jb
push
jo
insl
cmp
repnz
stc
inc
push
dec
mov
mov
sti
jmp
sbb
orl
lock
out
loopne
cmc
push
xor
int
call
sti
addr16
and
pusha
xchg
les
inc
fdivrl
ljmp
sub
adcb
aam
fistpll
fwait
loop
push
sahf
jb,pn
jo
push
call
mov
testb
pop
aad
mov
cmp
inc
ret
test
jg
nop
dec
cli
and
andl
sbb
mov
jae
sub
or
ret
pop
clc
cmp
rcrl
idivb
aad
mov
cmp
sbb
xchg
xlat
scas
loop
stc
test
pop
fimuls
lahf
cmp
sub
push
jl
popl
pop
mov
jb
jae
repz
nop
test
call
les
das
mov
call
lea
sbb
mov
aaa
pop
dec
popf
add
and
pop
xor
push
popa
in
pushf
cmp
mov
repnz
mov
sbbl
xchg
or
pop
mov
jge
inc
ret
shrb
push
lds
ret
stos
scas
xor
cmp
leave
inc
fcoms
mov
fidivs
dec
movsl
jmp
adc
adcl
lods
push
dec
cmp
push
mov
pop
lcall
mov
dec
iret
imul
xchg
push
imulb
sbb
shrb
xlat
ja
cmp
pop
cmp
add
mov
adc
lcall
pop
push
std
add
sub
cmpsb
stos
jle
jle
mov
fnsetpm(287
test
xchg
shll
mov
out
mov
mov
push
arpl
iret
in
popf
push
mov
add
aad
pop
dec
andb
xor
sahf
popa
or
cmp
mov
cmc
cld
es
lea
out
push
popf
push
dec
xchg
mov
mov
out
mov
adc
mov
dec
pusha
xor
mov
fcomps
addr16
es
jecxz
loope
mov
shll
lods
push
adc
mov
adc
mov
std
mov
call
push
pushf
or
add
lock
cmp
dec
cmp
xor
push
jno
jne
jae
rcrb
mov
and
mov
stc
pop
sbb
pusha
mov
loopne
push
sub
xchg
adcl
dec
ja
and
push
in
or
gs
out
sub
inc
xchg
push
xchg
in
sub
mov
xlat
push
push
imul
xchg
sub
fisubrs
loop
adc
out
mov
sbb
adc
stc
mull
mov
pop
inc
push
popa
rorb
rclb
inc
bound
ss
ja
iret
add
inc
lea
sbb
pusha
push
popl
cli
mov
push
inc
or
cmpsl
test
insl
bound
push
adc
or
pop
sti
xchg
in
cmp
out
sub
or
mov
cmpsb
iret
arpl
lret
out
add
xchg
ret
jg
ffree
mov
mov
xchg
adc
and
pop
or
jge
das
rclb
shr
stc
fs
adc
or
jno
mov
adc
mov
sbb
andb
cltd
jmp
push
inc
setae
mov
fwait
push
addl
pop
std
orl
pop
lret
mov
cmp
jecxz
sbb
inc
pushf
icebp
test
jle
sbb
js
fwait
jae
stos
ror
outsl
push
lds
adc
ds
sub
test
and
xlat
mov
fdivl
lcall
scas
push
xchg
xchg
jo
inc
add
inc
mov
cwtl
push
jge
sbb
mov
sbb
sub
xor
push
aas
mov
subb
rorb
sub
mov
push
xchg
mov
inc
fs
scas
fdivl
lds
pop
add
pop
xchg
icebp
insl
push
enter
dec
jmp
jbe
jecxz
outsl
pop
in
xlat
sub
cwtl
xchg
nop
repnz
popf
jecxz
lcall
repz
pop
inc
fcoms
pop
jbe
test
iret
test
mov
pushf
in
dec
inc
cwtl
mov
jmp
adc
scas
rorl
cmc
pop
stos
xlat
add
inc
adc
stc
addr16
out
jbe
sti
mov
pop
dec
add
add
jecxz
in
sub
mov
sahf
fldenv
add
push
ret
shlb
mov
clc
outsb
data16
lcall
cld
mov
xchg
pop
inc
popa
aam
std
and
and
xchg
push
xchg
dec
jb
and
popa
ss
xor
add
push
mov
mov
and
inc
jl
int
sub
in
pop
and
jo
call
out
inc
in
sub
jne
jb
mov
shll
gs
push
and
cltd
add
int
in
push
jno
pop
out
jg
inc
mov
mov
je
pop
lods
inc
and
xchg
shl
push
xor
rcll
js
xor
out
pop
mov
jo
clc
mov
arpl
aad
mulb
shrb
test
cmp
pop
mov
cmp
leave
aad
iret
and
add
adc
cmc
popa
push
into
adc
inc
lock
sbb
dec
pop
mov
jecxz
xchg
and
or
arpl
inc
add
outsb
outsl
faddl
mov
mov
out
pop
adcl
loopne
dec
sbb
jl
mov
mov
xchg
lea
lahf
into
cmpsl
in
add
mov
scas
loopne
mov
xor
lret
push
std
xor
das
xchg
ret
cld
sub
testb
cltd
test
int
xchg
lock
sub
clc
arpl
fisttpl
mov
inc
iret
notl
jmp
fwait
push
mov
xchg
pop
add
xchg
mov
fistpll
shll
mov
fadds
and
adc
xor
inc
xchg
mov
mov
aam
sub
scas
adc
push
adc
int
dec
push
dec
cmovne
mov
test
movsb
clc
rorb
mov
or
or
mov
jp
in
rep
jecxz
cs
pop
or
out
xor
mov
cmpsl
mov
jb
mov
orl
leave
mov
dec
inc
sub
cmp
push
mov
sub
int3
aad
or
sbb
hlt
adc
lock
jae
mov
mov
pop
popa
pop
add
movsl
jge
int
adc
mov
in
inc
repz
aam
cld
fsubp
std
adc
adc
lret
mov
loop
in
push
in
jecxz
push
dec
mov
scas
xchg
mov
sbb
lods
rcr
pop
mov
push
and
shll
mov
lret
mov
sub
mov
mov
adc
pop
sti
jecxz
shrb
pop
cld
mov
and
jbe
enter
cmpsb
mov
mov
dec
and
inc
int3
ret
aaa
aad
jge
repnz
cmp
adcb
imull
scas
jbe
pop
push
fadds
fbstp
js
pop
loop
jp
dec
lret
scas
or
mov
lods
xorl
jnp
ds
dec
or
cltd
sub
add
enter
adc
dec
adc
insl
sub
dec
std
push
iret
ficoml
mov
outsb
dec
cmp
sti
js
cltd
add
das
mull
add
loopne
shlb
push
and
jnp
push
add
mov
cwtl
jne
or
fwait
adc
lds
mov
and
mov
push
mov
jmp
sahf
sti
dec
cmp
dec
out
mov
and
inc
or
bnd
and
fwait
fs
bound
sub
arpl
and
pop
mov
dec
enter
jo
cmc
or
or
jle
pop
ret
xchg
push
xor
sub
mov
movsb
sahf
icebp
or
pop
lods
js
mov
fistpll
or
dec
loope
push
jns
add
addr16
dec
cmp
rcll
adc
inc
scas
iretw
push
inc
pop
stos
mov
icebp
inc
ds
lods
jg
cmp
repz
mov
out
lods
jle
lret
push
dec
mov
movsl
out
adc
cld
xor
cmpsl
xor
jne
repnz
mov
and
rorl
cmp
cmp
int
stos
loopne
cmp
jbe
sub
out
in
or
xchg
outsb
dec
jo
rolb
je
mov
outsl
push
cmc
insb
pop
outsl
add
test
or
mov
adc
cmpl
push
sahf
and
les
je
xor
xor
dec
cli
sbb
es
push
inc
push
fbstp
rclb
add
mov
std
popf
fbld
gs
call
dec
mov
loopne
popw
enter
fcmovnbe
inc
into
outsb
and
das
sbb
mov
test
mov
dec
je
in
popf
xchg
aad
insl
ljmp
popa
sbb
push
stc
or
push
fs
mov
lcall
or
int3
ret
das
add
jnp
xchg
icebp
mov
sahf
xchg
shlb
xchg
ss
xorb
jne
cmpsb
cwtl
icebp
adc
inc
mov
mov
sub
mov
fsubrl
push
cmp
cmp
xor
jnp
insl
push
inc
lret
mov
sub
or
jne
inc
sbb
mov
jne
xor
mov
inc
mov
mov
mov
push
pushf
push
jne
negl
sti
lret
lcall
jecxz
push
rorl
out
scas
add
mov
xor
mov
mov
xor
xchg
push
sahf
jnp
leave
xchg
daa
scas
ja
push
repz
jns
arpl
jno
cmp
movsb
lret
add
jle
pop
movsb
fs
movsb
ja
cld
xor
pop
mov
lret
inc
aad
sbb
lret
xchg
push
push
add
ret
imull
sub
sub
adc
fldenv
lcall
push
loopne
arpl
jle
in
ror
mov
pop
jbe
rorb
dec
xchg
lods
push
movsb
inc
jmp
jo
out
stos
rolb
stos
idiv
jnp
add
fsubr
xor
and
sbb
add
cmp
sub
xlat
scas
add
xchg
fs
pop
fwait
adc
jp
shlb
mov
and
pop
mov
xchg
jae
imul
or
fs
jbe
jne
out
repnz
insl
jb
dec
mov
jl
mov
in
cmp
add
xchg
sbbb
mov
dec
add
aaa
cmp
push
nop
xor
pop
and
sahf
stos
add
fwait
and
sbb
movsl
xchg
fimuls
jno
dec
push
test
testb
in
sub
adc
out
cmpsb
loop
ss
mov
xor
je
addr16
fs
pop
jns
cmp
jp
adc
loop
lds
sbbl
mov
sbb
scas
sub
call
mov
push
push
insl
xchg
inc
fsubrs
mov
shrb
mov
xchg
loope
xchg
icebp
std
or
or
andl
pop
push
add
inc
mov
adc
jecxz
jle
sub
xor
jo
sub
xchg
shlb
push
push
jle
add
pop
insl
ffreep
dec
scas
pop
and
repz
push
and
das
push
inc
xchg
jne
jecxz
inc
push
rcrb
push
push
push
loope
js
fidivrs
dec
adc
dec
popf
mov
jae
lock
push
jecxz
xor
fistpll
fcoms
mov
scas
jno
sbb
pop
daa
fndisi(8087
mov
push
mov
shl
inc
int3
imul
sbb
sub
repnz
xor
ret
cltd
dec
sbb
adc
adc
jae
xchg
dec
rclb
cmpl
sarb
lcall
gs
jle
xor
cmp
insb
sbb
idivb
and
shll
lret
add
outsb
pop
pop
jecxz
aam
popa
orb
jne
arpl
cmp
sti
rolb
aam
jbe
cmp
sbb
test
jle
sbb
shrb
add
mov
or
mov
push
jle
xchg
jmp
sbb
mov
ret
pusha
pop
sub
rol
fs
cmp
inc
movsb
and
sbb
jne
jecxz,pt
mov
filds
daa
pop
fstpl
inc
pop
pop
xor
aas
pop
inc
out
inc
mov
test
dec
mov
add
addr16
es
sub
call
cmpsl
outsl
mov
ljmp
stos
or
lock
add
jg
idivl
mov
push
jl
lds
popf
nop
add
pop
push
shl
mov
add
pop
js
movsl
jge
sbb
mov
pop
dec
cmp
sub
mov
imull
push
inc
das
jae
xchg
dec
and
mov
dec
push
lea
imull
or
pop
dec
jbe
push
pushf
pop
hlt
xorb
iret
loop
and
push
ret
mov
mul
ficoml
sahf
scas
fwait
xor
shrl
xchg
xchg
fldt
test
test
mov
aas
push
loope
push
div
std
or
test
in
jmp
lret
mov
lds
cmp
ljmp
and
mov
dec
push
insb
cmpsb
adc
inc
out
pop
cmp
lret
or
cmp
aam
adc
dec
add
pop
and
test
je
loop
test
popf
in
subl
mov
roll
addl
push
lock
shll
and
mov
inc
subl
cmovo
push
in
jmp
push
test
jg
movsb
dec
xor
push
stos
jecxz
imul
sub
and
cmp
iret
jle
cmpsb
cmpsl
add
sbb
fdivr
mov
std
enter
in
in
adc
mov
sbb
add
jbe
add
sub
jg
popa
lcall
jns
shll
std
mov
jbe
imul
fimull
mov
sti
push
jno
adc
pusha
mov
int
in
shl
stc
outsb
pop
push
out
repz
mov
sub
icebp
mov
roll
sub
gs
mov
push
fsubl
mov
movsb
ret
subb
or
aaa
sti
rcl
cwtl
imulb
mov
ss
push
push
xlat
sahf
cli
push
pusha
adc
xchg
stos
lcall
out
mov
mov
mov
jnp
pushf
in
cmpsl
pop
sub
fnstsw
xchg
push
sbb
stos
inc
lcall
iret
xor
mov
sbb
and
jnp
aas
jle
adc
pop
test
jae
out
and
add
jg,pn
dec
mov
loope
stos
push
stos
iret
xchg
call
mov
inc
imul
scas
sbb
xor
ret
mov
fistpl
daa
inc
aad
clc
xor
cmp
pop
bound
jp
icebp
stc
mov
mov
push
jae
shlb
adc
mov
jns
or
insb
push
repz
inc
pop
xchg
stc
jecxz
adc
jmp
push
push
aaa
and
vpaddsw
mov
ja
ret
aam
fcmove
test
adc
pop
xchg
xchg
bound
aas
cs
pop
xor
out
cltd
push
arpl
push
add
jns
and
and
jno
jo
sti
inc
or
outsl
dec
mov
pushf
inc
xchg
lods
ja
es
sbb
rcr
fstps
pop
aad
adc
or
push
aaa
movsl
ret
popf
ja
popa
jb
out
inc
roll
mov
and
or
stos
inc
test
sub
out
xchg
movntps
fmul
xor
fbld
icebp
sbb
or
nop
adc
rcll
cmpsl
dec
add
fbstp
cmp
aam
or
test
push
lods
in
pop
fldln2
imulb
xchg
scas
push
stos
subb
loop
sbb
popa
insl
cmp
insb
sbb
sub
inc
push
xor
push
cmp
xorl
out
cmp
inc
pop
sbb
sbb
fs
inc
pop
dec
xor
sbb
rcrb
cmpsb
xchg
in
pop
aad
xchg
add
mov
fmul
rcr
mov
mov
and
imul
loope
fs
ret
nop
enter
aam
dec
idiv
xchg
inc
mov
jl
sti
adc
push
cmpsb
lret
mov
xchg
adc
xchg
lods
jecxz
xor
mov
sbb
sub
sbb
mov
repnz
push
mov
or
stos
clc
andb
rclb
in
add
or
into
hlt
xlat
filds
aaa
ljmp
xor
jbe
packsswb
imul
fnclex
stos
push
mov
add
repnz
add
daa
das
enter
inc
jns
cmp
stos
add
add
stc
push
repz
adc
jnp
dec
shl
sbb
sbb
mov
jb
push
mov
filds
fcoml
mov
xor
lahf
xor
mov
cmp
repnz
aam
andl
icebp
jne
jge
pop
and
cmp
rcl
test
pop
mov
jno
xchg
dec
pop
out
cwtl
cmp
mov
xchg
arpl
adc
in
sbb
lcall
loope
or
repnz
add
outsb
mov
jne
addr16
nop
out
push
or
pop
cmpsl
es
xchg
cld
rol
out
jp
leave
stos
mov
movsl
jl
ja
cltd
mov
int
jmp
arpl
rolb
into
movsb
mov
sti
popl
mov
xor
jmp
cmpsl
xor
fsubrs
shlb
cmp
fs
mov
jnp
jmp
in
cmp
adc
ds
sbb
icebp
loopne
ds
dec
cltd
iret
aaa
icebp
xchg
xor
mov
jp
push
rcr
jbe
lock
jle
repz
push
cld
mov
cmp
sub
jecxz
xchg
mov
clc
xor
sbb
and
in
ljmp
out
std
sub
clc
cmpsl
push
shlb
xor
mov
xor
incb
jp
mov
and
call
jns
int
dec
jg
adc
and
sub
sub
hlt
sti
daa
xlat
mov
arpl
js
mov
and
or
dec
mov
inc
mov
jmp
in
inc
pop
push
data16
xchg
mov
xchg
mov
loop
or
insl
add
pop
es
leave
into
sub
in
lock
sbbl
insb
hlt
rolb
js
xchg
and
mov
push
mov
and
ljmp
or
stc
sub
insl
cld
aad
and
dec
movsb
and
addr16
sbb
push
xor
sbb
fs
std
outsl
push
les
inc
xchg
mov
test
into
in
out
jnp
stc
jbe
and
xchg
cmp
push
movsl
daa
daa
xor
shrb
push
xor
into
loopne
xor
pop
inc
mov
incl
mov
jle
cld
ret
cmpl
daa
lds
scas
js
xchg
push
xor
inc
shll
and
movhps
sbb
mov
sub
mov
xorb
dec
or
out
outsl
mov
sub
xchg
movsl
gs
or
mov
imul
jns
fs
mov
test
xor
add
push
mov
outsb
inc
imul
stos
out
inc
mov
imul
sbb
js
into
dec
mov
pop
andb
or
in
mov
mov
adc
std
insb
xchg
loope
addb
push
fwait
xor
inc
mov
mov
in
jmp
loope
and
loopne
inc
xchg
add
pop
jl
fimuls
mov
arpl
ret
pop
lret
push
in
clc
push
pop
xchg
or
leave
cli
enter
divb
cld
fcoms
xorb
adc
cmp
stos
int
xchg
sub
cmp
sbb
xchg
mov
jge
repz
push
stc
inc
fcomps
bound
jno
jmp
xchg
subl
popf
addr16
out
sbb
stos
nop
aas
jae
wrmsr
gs
inc
arpl
call
jae
clc
jmp
xor
shll
loopne
sub
ds
push
scas
idivl
adc
movsl
mov
xorb
ret
sub
stos
inc
fdivs
push
nop
enter
pcmpgtd
faddl
adc
js
incb
pop
push
sarb
inc
lcall
out
nop
cld
leave
adc
add
out
ret
adc
inc
mov
xchg
push
jnp
cmp
jns
xchg
pop
or
ljmp
push
sub
insl
out
ds
imul
sbb
scas
ds
pushf
jae
or
cmpsb
fsubrl
fnstcw
jl
movb
pop
inc
fidivrs
jl
xchg
jg
mov
pop
sahf
push
cwtl
out
inc
fwait
aam
test
je
out
fsubr
cmp
push
out
dec
pop
out
fidivl
stos
jmp
fwait
jmp
and
xor
popa
pop
loope
adc
or
fistps
fnstcw
icebp
adcb
enter
push
lods
cmpsl
adc
push
push
rorl
xchg
xchg
mov
add
sti
jp
loopne
and
and
outsb
push
mov
pop
xor
push
mov
daa
fmull
sub
mov
shlb
cli
testl
test
mov
inc
out
cmp
and
loopne
call
dec
and
addl
ds
fs
pop
mov
js
pop
pushw
sub
aam
lea
jb
mov
clc
mov
mov
insl
pop
and
mov
jle
enter
cmc
mov
subb
leave
mov
insb
and
dec
mov
loope
ret
mov
xchg
scas
mov
iret
inc
cmp
dec
add
dec
ss
jne
addr16
jb
xchg
jp
bound
push
sbb
jae
mov
enter
sub
push
jl
adcb
fnstsw
cmpsb
shll
dec
daa
pop
fstpt
pop
scas
sbb
out
imul
push
push
imul
fdivl
pop
out
add
lret
push
das
sub
gs
jae
mov
sub
dec
sbb
jbe
pop
out
dec
xor
sub
dec
mov
movsl
aam
sbb
mov
in
out
sub
push
sbb
sarb
das
add
and
mov
lds
sahf
jb
inc
das
clc
out
sub
sbb
mov
lcall
xor
xor
jmp
xchg
call
jmp
push
mov
out
aas
data16
mov
ds
out
xor
adc
pop
or
int
in
dec
pop
push
movsb
nop
cmp
mov
mov
fildl
or
push
xchg
sub
call
dec
pop
xchg
insb
inc
dec
pop
jp
in
clc
movl
shl
pop
fucomi
nop
inc
enter
decb
clc
sub
iret
jecxz
arpl
rorb
outsb
aad
push
imul
add
shl
sahf
int
xor
cmpsb
jns
push
fsts
jbe
ss
xor
mov
jl
sbb
mov
and
jns
mov
mov
dec
int3
fimuls
in
repz
cld
mov
adc
ds
push
sbbl
cwtl
cld
jno,pt
out
inc
lock
xchg
mov
and
or
inc
das
cs
jb
sub
sahf
mov
shl
jae
das
ja
dec
movsb
insb
ret
jne
jne
mov
mov
and
icebp
mov
push
stos
pop
mov
push
jecxz,pn
pop
xor
cltd
in
and
nop
bnd
dec
cld
xchg
mov
xchg
lahf
mov
rcrl
aad
and
lret
or
fistpl
in
ret
lahf
icebp
arpl
jp
imull
ficompl
pushf
cli
rcll
jb
mov
loop
jb
cmp
fisubs
stos
repz
cmp
pop
lds
cmp
icebp
imul
scas
fsubl
arpl
add
mov
subb
int
pop
and
jle
outsb
test
into
and
xor
add
sbb
andl
mov
inc
xchg
aad
cmpb
or
sbb
into
pop
pop
daa
push
cli
dec
pop
in
insl
shl
cmp
sub
test
stc
loopne
cld
cmp
imul
stc
repz
adc
xorl
adc
mov
fcoms
lds
out
inc
inc
repnz
adc
cltd
test
out
aaa
xchg
pop
inc
popa
or
cmpsb
mov
dec
inc
sbb
jns
and
lea
mov
test
test
add
test
dec
mov
not
jns
mov
insl
adc
mov
mov
sub
jne
call
or
hlt
cli
or
pusha
sbb
push
mov
xor
repz
test
push
jg
loop
sbb
mov
repz
mov
scas
clc
std
out
aad
je
ficoml
pusha
cmp
aaa
shrl
inc
mov
sub
add
mul
into
outsb
xor
aas
mov
fs
js
or
cmc
mov
push
push
sub
popa
call
test
push
hlt
mov
pop
mov
rcrl
mov
stc
setae
or
das
pop
dec
das
out
inc
aam
jo
mov
scas
sub
push
push
fisubs
jo
add
mov
dec
cmp
dec
add
out
aas
adcl
addl
sub
call
xchg
sbb
and
in
cmp
jo
aaa
add
push
sub
movsb
jae
pushf
push
out
xchg
xchg
adc
les
insl
jnp
push
pop
outsb
rolb
aam
xchg
xor
or
fs
subb
pop
mov
std
pop
pop
push
push
cld
push
push
inc
scas
jl
shrb
xor
ret
add
gs
out
mov
nop
xchg
sahf
cmpsl
aad
mov
lret
adc
sub
aaa
leave
loope
jl
mov
xor
xor
adc
inc
fstps
add
and
xchg
cld
clc
adc
mov
nop
nop
fcmovbe
out
cwtl
sahf
addr16
adc
xor
mov
pushf
mov
sub
xchg
push
jns
shlb
imul
out
mov
push
mov
fistps
scas
out
xchg
std
push
test
sbb
push
dec
fisubs
mov
inc
push
sub
or
cmp
cmp
mov
xor
push
lods
loop
jg
dec
xor
dec
adc
aas
sysexit
adc
push
das
cmp
cmp
mov
test
cmp
and
mov
shrb
sbb
adc
dec
mov
mov
loopne
lcall
and
xor
test
add
mov
pop
les
pop
adc
pushf
and
lahf
dec
jne
adc
stos
inc
and
testl
nop
aaa
pop
adcb
notb
jecxz
sub
xchg
add
lahf
and
mov
enter
mov
fs
push
insl
int3
hlt
hlt
add
pop
jae
aaa
test
es
inc
icebp
sub
push
fstpl
lds
jns
jne
xor
aam
dec
daa
iret
adc
stos
rcll
bound
sbb
add
fldcw
xchg
pop
int
cmp
subb
imul
subl
or
into
xor
inc
lret
fstpl
test
inc
sbb
mov
aad
popf
gs
jbe
xchg
daa
xchg
in
mov
mov
int3
fcomps
hlt
movsb
pop
sbb
dec
push
jne
jne
mov
jno
or
popf
or
sahf
repnz
mov
cmp
sub
imul
lock
loop
sub
inc
cli
jnp
into
mov
pop
icebp
sbb
popa
ds
add
cmp
in
enter
imul
pop
and
add
dec
mov
jmp
and
push
shr
push
pop
mov
xchg
pusha
mov
bound
sub
cli
mov
mov
mov
popa
push
adc
je
inc
inc
movsl
mov
inc
aam
lahf
test
mov
mov
cld
test
inc
cmp
sbb
test
lret
loopne
cmp
mov
pop
clc
mov
jno
xchg
xor
push
add
jne
pop
xchg
sti
jl
sbb
not
std
pop
cmp
out
dec
je
mul
jae
and
mov
xor
hlt
mov
out
push
and
stc
or
test
insl
cmp
aad
das
aas
adcb
nop
es
hlt
fisttps
ds
adcl
xchg
lret
sub
scas
out
nop
paddw
cs
pop
clc
lods
iret
cmp
pop
xchg
clc
je
test
ja
mov
into
pop
inc
mov
adc
add
inc
adc
cmp
lahf
push
mov
xchg
imul
frstor
adc
shll
popf
scas
inc
fsubrs
xor
jge
and
jbe
mov
push
int
notb
mov
aad
inc
fidivrs
jge
mov
call
mov
dec
jbe
mov
pop
mov
mov
and
pop
popa
push
mov
pop
jle
ljmp
inc
adc
daa
push
ror
push
enter
fstpt
add
inc
out
ret
aas
cmp
aad
ret
and
fs
jmp
arpl
pop
and
icebp
cmp
int3
cmpsb
add
scas
or
pop
fbld
pop
cmc
inc
mov
push
dec
pop
mov
inc
add
out
lret
jnp
mov
add
xor
int3
dec
insl
ds
repnz
repnz
mov
psubd
cmpl
lods
mov
xor
cwtl
sub
mov
jge
push
fiadds
adc
adc
lea
int
inc
ja
dec
push
std
pop
mov
outsb
sub
mov
push
jge
enter
push
sbb
mov
int3
pop
leave
fmuls
cmpsl
call
pop
repnz
out
aaa
fwait
mov
lret
stos
hlt
push
sub
js
idivl
pop
call
cltd
rcrl
or
pop
pop
jb
sub
mov
sub
mov
loop
clc
push
in
ret
xor
jp
ds
mov
ret
xchg
lcall
movsl
or
lret
inc
or
adc
rcrb
pusha
jmp
jge
stos
sbb
mov
pop
add
cmc
inc
cltd
adc
aaa
sarl
inc
test
stos
shll
iret
outsl
mov
cmp
jp
jno
mov
loop
bound
or
aas
int3
sub
nop
pusha
xchg
outsl
jg
scas
stc
dec
xor
sbb
out
insl
daa
jno
xlat
stos
or
mov
test
mov
xor
pop
cmp
int3
xor
in
lretw
inc
and
or
inc
in
mov
adc
mov
push
jns
jns
enter
mov
sub
fsubs
or
push
mov
push
or
test
clc
into
xor
sub
mov
outsb
fldt
.byte
fs
and
mov
xchg
mov
mov
and
aaa
mov
push
aad
dec
ja
jecxz
cmc
jb
mov
push
push
ret
push
repnz
leave
out
dec
test
sbb
mov
cmp
xchg
int3
or
pop
mov
dec
mov
in
add
or
sbb
loope
cmpsl
arpl
push
or
cmp
and
rolb
rorb
sub
mov
loop
call
pop
mov
fdivs
stc
mov
fwait
adc
je
pop
sub
arpl
sub
cld
sub
cmp
push
leave
xor
sbb
mov
mov
data16
leave
mov
clc
or
movl
pop
icebp
xchg
dec
cmpsb
sbb
rol
loopne
xor
pushl
loopne
faddp
add
xchg
inc
and
pop
jge
cmc
push
sahf
icebp
sub
stc
jp
aad
mov
jle
movsb
xor
js
mov
test
cmovge
cmp
xchg
mov
dec
cmp
jmp
push
sub
or
cmp
pop
push
ss
pop
mov
add
ss
out
fcomi
mov
fs
cs
test
jne
sub
dec
and
xchg
mov
clc
insl
jbe
nop
mov
mov
add
out
pop
sar
fwait
and
inc
and
jmp
jae
cltd
sbb
lods
lcall
icebp
lock
loope
cs
scas
jl
mov
pushl
mov
cmpsb
or
movsb
mov
subb
mov
xor
sub
dec
nop
mov
int
fs
mov
into
stos
add
mov
into
lods
adc
push
out
inc
call
pop
and
cmp
icebp
sub
test
ret
xchg
pop
std
and
aaa
outsl
stos
pusha
adc
sahf
xchg
ljmp
lods
mov
and
cmpsl
or
test
int3
push
stos
loope
xchg
jp
divb
in
daa
das
ss
sahf
mov
cmp
cmp
enter
jl
rcrb
iret
addr16
repz
filds
js
mov
mov
jecxz
scas
cmc
stos
cs
in
insb
stc
lods
icebp
rorb
mov
stos
push
dec
dec
shll
pushf
and
iret
and
xchg
push
mov
xchg
aaa
pop
mov
push
mov
test
imul
mov
shl
jp
inc
pop
insl
pop
cmp
push
push
or
jbe
and
stc
jmp
push
sub
mov
mov
movsb
fsubl
cs
dec
lret
aas
and
mov
jnp
xor
sbb
jmp
pop
out
test
fcoms
into
jmp
jns
out
and
out
mov
addb
cmpsl
gs
imul
push
mov
jns
push
repz
pop
loop
push
push
xchg
pop
ljmp
int
movsl
xchg
mov
pusha
ja
pushf
ret
mov
xchg
lods
dec
fmuls
sbb
ret
mov
push
sbb
and
sbb
or
inc
fs
jb
add
xchg
sub
mov
xchg
in
push
mov
and
add
xchg
adc
sbb
adc
xchg
loope
popa
pushf
cmp
aas
add
ja
repz
cs
jb
ret
rorb
mov
cmp
pop
es
inc
and
push
sub
sbb
das
fisubrl
rorl
inc
fcmovnb
cmpsl
pop
dec
inc
mov
repz
popa
sbb
mov
in
mov
bound
sub
mov
inc
out
jae
mov
jl
insl
push
enter
outsl
push
dec
addr16
add
movsb
lret
mov
fs
mov
aad
xor
jnp
jecxz
and
inc
lock
xchg
movsb
in
jbe
add
ja
inc
movsl
push
sbb
test
jp
pop
xchg
or
stc
data16
dec
jmp
in
fwait
arpl
js
insl
les
out
sbb
mov
ret
sarb
repz
fsubrl
mov
negb
shlb
cmp
in
dec
cwtl
outsb
and
jg
fdivrs
andb
pop
imul
adc
jo
lods
xlat
out
mov
lret
clc
mov
xchg
mov
sub
or
outsl
lcall
pop
add
loope
loop
mov
push
in
pop
xor
sarb
mov
test
adc
sub
pop
mov
jns
xchg
std
adc
mov
jns
jne
fs
pop
jno
and
jns
aam
imul
cmpsl
jnp
or
inc
sbb
shr
test
rcrl
jp
shrb
cmp
inc
fwait
add
clc
dec
mov
mov
and
fcom
adc
fldt
cs
jl
stos
enter
icebp
jno
mov
data16
jb
lods
in
or
mov
in
sub
out
repnz
lcall
dec
loope
movsb
add
loope
cmpl
mov
adc
sti
sbb
adc
loope
mov
mov
dec
cmpsb
or
xchg
arpl
pop
insl
xchg
jmp
je
cld
arpl
aam
insl
scas
xor
push
cmpsl
mov
sub
mov
jno
inc
xor
ja
data16
mov
ja
sbb
pop
test
pop
dec
mov
xchg
pop
in
pushf
dec
inc
sti
push
adc
mov
jnp
xor
and
movsl
push
clc
je
pop
and
and
cmp
push
bound
inc
fwait
mov
pop
and
mov
mov
and
mov
in
xor
mov
mov
in
and
addr16
jbe
rclb
sub
loop
or
stc
call
ja
inc
jbe
int
sbb
lds
push
jl
andl
scas
leave
stc
or
into
in
ds
xchg
icebp
push
jno
aaa
inc
mov
push
repz
sub
xchg
scas
mulb
mov
lea
mov
fidivs
les
mov
popf
hlt
xor
xor
stos
daa
dec
enter
or
in
fistpl
cmp
pop
jp
mov
mov
push
sub
lret
pop
adc
add
outsb
pop
inc
movd
dec
mov
cltd
mov
adcl
push
jno
aas
pop
and
or
mov
dec
or
dec
and
mov
lret
sub
and
jno
jge
fldt
pop
iret
xlat
jp
icebp
or
add
ret
jo
in
mov
test
xchg
inc
xchg
adc
mov
push
jle
insl
lea
push
inc
cmpsw
push
shll
repnz
mov
adc
jns
jbe,pn
les
loopne
add
neg
js
jge
js
imul
inc
fidivrs
inc
sbb
or
xchg
or
cmp
inc
movsb
jb
ficoms
xor
xchg
sub
xchg
cmp
dec
mov
xchg
mov
icebp
es
fnstsw
add
or
bound
push
stc
int
nop
dec
xor
push
insl
mov
jae
pusha
stc
xor
nop
jo
aad
dec
test
cwtl
leave
jp
xlat
loop
or
or
pop
fwait
mov
roll
dec
mov
pop
jbe
jo,pt
rcll
adc
cmc
cli
pop
mov
rolb
add
xor
and
orb
sub
mov
arpl
loope
roll
into
lahf
dec
rcrl
call
inc
je
js
mov
sbb
pushf
pop
fs
xor
sbbb
mov
aam
imul
test
or
inc
stc
mov
icebp
lds
mov
mov
inc
push
leave
repnz
add
jge
and
in
mov
jae
lcall
movsb
loope
pop
or
insl
movsb
insb
loopne
add
pop
pop
daa
push
jae
in
sub
in
pushf
adc
stos
dec
rorl
dec
jb
inc
sbb
cmp
in
sbb
scas
ja
mov
divb
jge
push
les
loop
xor
lahf
cmpl
add
push
jmp
stc
pop
or
pop
and
xlat
pop
ficoms
mov
loopne
enter
push
imulb
sarl
iret
pusha
and
insl
cmp
into
ret
add
imul
int
stc
rclb
inc
pushf
mov
mov
stc
mov
orb
push
popf
sbb
push
inc
xor
pop
icebp
out
pop
inc
nop
xchg
loope
addr16
xchg
clc
sub
and
inc
aaa
xor
and
adc
cld
in
jmp
out
cmpsb
inc
mov
movsl
push
mov
inc
push
jo
loope
mov
imul
movsl
cltd
and
xor
int
inc
int3
stos
xchg
pop
sub
sub
sub
pop
xchg
test
stos
xchg
push
cwtl
loopne
jbe
mov
int3
mov
dec
fnstcw
in
clc
lock
mov
ret
xlat
inc
subb
jne
pop
mov
jae
pop
dec
and
stc
ds
push
xchg
mov
xor
in
mov
pushf
xchg
out
inc
and
dec
sub
lret
repnz
aas
and
sbb
ret
out
jbe
cli
mov
cld
jg
mov
out
aaa
lea
mov
sbb
in
jge
jns
mov
shll
mov
inc
mov
xchg
sub
fcoms
pushf
adc
push
lock
sarb
add
mul
lcall
lds
cmp
sbb
inc
mov
adc
shrl
and
mov
arpl
jb
test
cmp
mov
fldcw
or
int3
jb
inc
imul
aad
jg
lret
into
dec
pusha
xchg
cmpsl
mov
and
jmp
jecxz
mov
sbb
int
ret
js
adc
mov
fnstsw
pop
sbb
dec
mov
pop
idivb
pusha
xor
insl
in
lock
mov
test
cmpsb
push
pushf
mov
mov
add
fistpl
aas
fs
sti
mov
popa
cmp
mov
sar
jle
lcall
jmp
sbbb
inc
outsb
in
push
adc
xchg
rorl
outsl
xchg
dec
dec
daa
mov
into
stos
js
iret
jne
adc
int
stos
aaa
mov
popf
clc
jg
pop
mov
pop
xchg
sbb
jmp
shl
push
ljmp
jl
dec
aas
shlb
sub
inc
addr16
imul
mov
hlt
cmp
push
cld
mul
rcrl
outsb
xchg
in
mov
pop
push
lret
xor
jo
test
dec
leave
movsb
mov
sbb
inc
jbe
shrd
adc
fisubrl
sbb
and
or
idiv
test
leave
push
or
xchg
mov
loop
adc
out
in
inc
fwait
pop
mov
jg
xchg
test
loope
mov
sbb
jb
addr16
movsb
mov
mov
in
inc
fimull
sarl
rcl
aaa
loope
and
imul
or
fstpl
jbe
or
push
xorb
fdivs
xor
xchg
ds
pop
addr16
mov
mov
aad
mov
lock
dec
sub
insb
out
test
cmp
xor
push
pushf
in
cmpsb
jmp
pop
dec
stos
dec
xchg
in
inc
in
sub
jle
push
dec
std
scas
adc
jmp
xchg
pop
jae
add
lcall
stos
and
mov
mov
imul
repnz
adc
dec
pop
jns
xchg
leave
lock
mov
lret
cs
mov
stos
cmp
lods
das
mov
adc
movsb
fcomps
add
push
xor
out
cli
push
ss
adcb
arpl
mov
pop
les
dec
and
sarb
out
hlt
push
mov
add
mov
mov
lcall
stc
jbe
cwtl
pushf
pop
arpl
and
out
sbb
pop
fcomps
mov
xchg
je
mov
std
sub
inc
add
insl
stos
std
aad
pop
add
mov
lcall
mov
dec
pop
jl
add
cli
pop
clc
daa
std
dec
adc
icebp
xchg
pop
push
cmp
push
fldt
cld
and
jl
icebp
sub
fisttpl
pop
mov
sbb
dec
xor
mov
xchg
pop
into
pop
rolb
lret
sahf
xlat
iret
xor
sbb
mov
data16
adc
push
xor
lock
sub
test
cs
pop
outsb
iret
ss
pop
out
cmpsl
adc
sarb
loop
jp
dec
or
and
jmp
enter
mov
sbb
out
dec
rolb
clc
jl
push
xor
mov
sub
std
pop
cli
shrb
adc
pop
imul
mov
mov
and
repz
inc
cmp
xchg
mov
popf
xchg
adc
pop
and
and
les
addl
data16
jg
adcb
add
mov
jmp
lock
in
inc
fisttps
add
mov
sbb
dec
jo
pop
adc
xchg
iret
sub
xchg
push
or
mov
sub
xchg
setb
pop
imul
pop
mov
shrl
call
push
pushf
mov
pop
mov
imulb
int
and
data16
leave
cmpsb
xor
jae
jp
sub
add
fnsave
lods
push
jno
pop
or
inc
sbb
xor
ljmp
pop
fcmovbe
adc
fcomps
imul
ja
sbb
jb
lds
hlt
pop
sub
mov
or
adcl
xchg
mov
jo
push
call
mov
imul
xchg
sbb
pop
xchg
mov
fimuls
cli
iret
popf
push
mov
repz
jecxz
stos
outsb
cmc
data16
stc
xchg
and
mov
imul
xor
or
fcmovnb
lret
mov
aaa
inc
fnsave
or
dec
fnstcw
mov
inc
repnz
mov
rolb
push
cld
hlt
add
inc
bound
jno
arpl
lea
xor
sub
xchg
fs
lock
ret
fidivl
pop
icebp
xlat
dec
stc
int
xchg
dec
out
dec
sbb
inc
add
enter
shrb
stos
push
pusha
ja
mov
imul
cmp
inc
sti
aad
jg
lods
push
fldcw
mov
lret
fldl
sub
jno
adc
add
xchg
imul
arpl
ror
imul
push
test
or
cmp
mov
int3
mov
fsts
mov
scas
mov
jg
dec
mov
shrb
lret
mov
nop
jae
cmpl
mov
jnp
or
in
loop
sub
lcall
hlt
mov
xor
sub
arpl
repnz
xchg
add
iret
push
nop
add
test
scas
enter
dec
ds
or
pop
sub
lea
mov
hlt
test
pop
jae
add
adc
insl
sbb
test
mov
and
push
movsb
enter
cwtl
insl
cmp
mov
in
push
mov
fnstenv
iret
pop
bswap
scas
sbb
jb
cmpsb
in
clc
inc
popf
nop
fwait
or
inc
out
sahf
mov
dec
das
ffreep
jbe
sbb
push
xor
sub
ja
xchg
in
sbb
cmp
xchg
pop
sbb
jmp
xlat
cmp
imul
rorb
mov
adc
into
and
dec
fcoml
cltd
pushf
aad
or
pusha
mov
fstl
pop
aam
dec
sub
xor
pushf
cld
jae
outsb
sbb
push
gs
add
jmp
repnz
outsb
mov
pop
mov
in
ja
movsl
into
xor
aaa
fcompl
mov
ret
pushw
imul
in
jp
xchg
dec
xchg
rorl
lret
out
test
repz
adcb
dec
aaa
mov
test
inc
ss
sbb
cmc
decb
imul
and
idivl
cmc
movsbl
stos
xchg
mov
adc
test
fists
jbe
popf
jecxz
cmpb
mov
repz
or
adcb
addb
sarl
lret
sbb
mov
lret
xor
lahf
incl
mov
das
jg
lea
insw
xchg
inc
cwtl
fadds
and
pushf
or
pop
xor
ljmp
push
mov
cmp
push
dec
dec
jg
mov
mov
and
mov
int
mov
mov
pop
fcompl
cmpb
stos
fisubl
nop
popf
test
push
ret
cmp
dec
sub
mov
fstps
out
sbbb
xchg
clc
pop
jl
jns
push
and
fdiv
xlat
sub
pop
add
jae
adc
jmp
add
cmpsl
mov
leave
mov
sub
pop
jae
or
aad
scas
sub
adc
das
aaa
lahf
mov
xor
adc
push
or
out
fbld
inc
mov
or
mov
lods
call
or
cmpsb
enter
rcll
mov
mov
repz
arpl
daa
sbb
aaa
inc
gs
fnstsw
mov
imul
push
fldt
leave
inc
inc
adc
push
stos
jb
push
pop
pop
aam
mov
mov
fcomps
mov
jle
mov
mov
sub
int3
jmp
xor
lods
push
sbb
mov
icebp
shll
sbb
sub
dec
jmp
imul
inc
popf
div
ljmp
ror
dec
mov
inc
cmpsb
pushf
sbb
mov
and
clc
and
pop
shlb
sbb
rcll
in
xor
sub
xor
mov
scas
sub
jecxz
test
pop
mov
out
aaa
or
sbb
bound
dec
adc
push
mov
addl
pop
pop
and
mov
jecxz
xchg
push
pop
sti
mov
mov
and
ja
mov
cltd
int
xchg
and
adc
nop
cs
sbb
xchg
jbe
dec
test
jmp
xchg
dec
fisttpl
rcll
inc
lcall
mov
jle
out
push
shll
ror
sbb
sti
in
cmp
xchg
das
clc
cs
nop
ds
cmp
or
incl
xchg
and
xor
stos
lods
xor
xchg
outsl
lcall
xchg
push
enter
je
nop
out
mov
mov
repnz
mov
fnstsw
into
in
rcrl
ret
xor
out
clc
ljmp
add
addr16
xchg
repnz
insb
push
xor
and
das
cmpsb
jb
inc
lods
je
xchg
scas
jae
ret
xor
jl
ficoms
mov
xor
mov
add
leave
je
xchg
shrb
mov
push
in
sbb
sti
sbb
loopne
in
into
ja
cld
adc
dec
and
xchg
mov
testl
adc
push
icebp
aam
dec
dec
insl
lret
fwait
sti
out
mov
cmp
andb
bound
push
and
sbb
cmpl
xchg
cmp
fisubs
lods
push
sbb
xor
cmc
jb
das
xor
sbb
mov
mov
xor
fisubrl
mov
fdivrl
repnz
notb
movsl
xchg
push
and
movsl
dec
and
mov
pop
add
int
popf
popf
inc
sbb
adc
mov
add
sbb
ja
ror
adc
cmp
xchg
adc
bound
lcall
bound
pop
xorl
inc
sub
sbb
outsl
stc
ret
or
dec
pop
add
pop
push
sbb
fcompl
shrb
fnsave
movsb
sbb
dec
pop
ret
fdivrp
mov
jle
js
sbb
lahf
scas
sbb
test
inc
cmp
xchg
jmp
push
lea
scas
adc
aas
ljmp
cmp
mov
push
jecxz
jbe
dec
cwtl
add
pop
and
sub
je
and
insb
daa
inc
jmp
or
cmp
scas
test
push
pop
ja
ror
pop
lods
in
insl
xchg
decl
mov
cmp
xor
push
cltd
rorl
jp
daa
push
jp
add
xchg
fcmovne
inc
js
sbb
fistps
jecxz
cld
xchg
rcrb
mov
icebp
jle
fsts
in
cs
mov
rcr
pop
lods
dec
jnp
gs
insl
into
adc
jmp
addl
enter
push
cmpsb
push
mov
cmp
cmpsb
add
lods
ret
mov
jne
scas
sub
in
mov
test
fwait
lcall
mov
aam
mov
hlt
mov
jbe
fildl
andl
dec
mov
lret
rorb
jae
ds
xor
dec
lock
push
mov
sub
mov
scas
jg
in
jo
mov
sub
push
fimull
mov
daa
pushf
and
cmp
inc
out
add
push
cli
outsl
ss
mov
or
push
subb
jl
mov
pop
push
dec
pop
cmpsb
jmp
or
shll
rorb
rcl
into
xchg
nop
jno
jmp
cltd
outsl
fisubs
xchg
mov
push
jg
mulw
cmp
push
clc
popf
push
in
xor
mov
adc
jmp
dec
cvtpi2ps
xlat
ret
xor
jmp
and
push
aas
daa
jl
or
push
mov
inc
add
test
sbb
mov
jg
lret
jmp
sbb
add
lods
push
mov
lret
pop
mul
out
sub
call
scas
mov
clc
inc
xor
or
rol
rcrb
lret
xlat
fucomi
mull
pop
pushf
ret
mov
sub
sub
icebp
rolb
fadds
aas
pop
aam
mov
out
int3
cmc
aad
pushf
scas
movsb
push
lret
push
jecxz
pop
test
mov
jge
sub
xor
cmp
pop
xchg
test
adcl
sub
inc
fimuls
cmp
pop
aas
into
and
or
push
in
cmp
cmp
cmp
mov
movsb
xchg
int3
jp
mov
loope
pop
xchg
cmp
lea
sub
rolb
and
dec
daa
mov
push
shll
adc
push
and
in
add
dec
into
push
push
add
arpl
fsubrl
pop
enter
clc
xchg
orb
xchg
mov
lock
pop
test
cmpsb
jecxz
aam
sbb
jb
cli
cmp
cmp
cmp
popf
icebp
push
loopne
jmp
repnz
adc
jo
mov
shlb
cld
xchg
sub
test
mov
idiv
scas
jno
adc
cmp
out
dec
pusha
fwait
cmp
jge
mov
pop
loope
int3
cmpsl
insb
sub
inc
mov
xor
sahf
mov
jae
pushf
into
fdivr
pop
or
pop
hlt
pop
lcall
sub
mov
jbe
or
mov
es
jge
addr16
lret
fcmovne
hlt
outsl
mov
dec
sbb
pop
cmp
inc
enter
push
adc
ret
adcl
adc
shrl
mov
jl
icebp
mov
dec
int
ss
enter
sbb
adc
std
push
xchg
popa
and
xchg
or
add
arpl
push
outsl
cs
jle
leave
mov
xchg
mov
sbbb
adc
dec
fdivr
and
push
nop
movsb
sti
cmp
cmp
ljmp
xlat
inc
lods
jne
sbb
addl
in
push
test
movsl
fimuls
movsl
dec
push
lcall
lcall
fmull
adc
push
std
shlb
icebp
xchg
ret
sbb
sbb
imul
cmp
js
jno
adc
das
xchg
mov
or
mov
dec
push
movsl
imul
mov
je
mov
stos
shrl
fsubs
xlat
sub
cmp
cltd
negl
stos
sbb
bound
ja
iret
add
sarl
and
push
ret
loop
pop
push
clc
pop
push
cli
or
xor
into
loop
jmp
dec
test
push
jo
movb
dec
nop
inc
pop
jo
add
iret
jnp
sub
flds
inc
mov
cltd
ja
adc
cmp
mov
cld
popf
sub
ljmp
cmp
incl
sbb
daa
nop
cmc
pop
dec
cli
xchg
xchg
xchg
xchg
dec
sbb
mov
leave
icebp
loopne
push
push
mov
xchg
jl
dec
das
icebp
jecxz
and
xor
inc
imul
adc
inc
mov
pop
add
test
subb
cmpsl
mov
dec
into
loope
test
push
sbb
sub
sbb
js
lahf
or
xchg
cmp
loop
rcrl
and
sbb
inc
cmp
in
xchg
test
jp
pop
imul
fcmovnb
pop
hlt
mov
movsl
pop
pop
push
inc
gs
rolb
aad
push
std
push
push
xchg
pcmpgtb
pop
pushf
ja
push
loopne
cmpsb
nop
ljmp
cli
mov
adcb
sub
cmp
mov
xchg
aaa
xchg
xchg
sbb
scas
movsb
push
loop
cmc
movsb
fsubrl
mov
call
push
mov
popf
test
push
inc
jo
push
icebp
push
in
call
stc
popf
adc
xchg
add
sub
jns
nop
outsl
daa
cltd
mov
popf
sbb
cmpsb
mov
mov
jge
je
sub
cld
pop
pop
ficomps
in
mov
sub
push
rorb
orl
das
cmpsb
fstl
int
sub
push
movsl
inc
pop
cwtl
jnp
lock
dec
sbb
cmp
sarl
xchg
lcall
lret
push
loopne
out
shlb
cmpsb
fisubl
adc
fists
scas
popf
xchg
movsl
fsubp
popa
pop
fcoml
jmp
leave
or
loopne
mov
stos
scas
mov
movsb
js
xor
mov
pop
imul
jne
mov
cs
cmp
cs
mov
mov
push
push
dec
stc
adc
jnp
adc
ret
xchg
xchg
or
mov
imul
fisubs
inc
add
mov
aaa
or
pop
mov
test
in
es
movl
ret
mov
shl
xor
js
inc
js
roll
cmp
je
hlt
xor
scas
mov
xchg
rcll
cli
clc
stos
fs
jp
leave
pop
scas
iret
pop
xor
mov
adc
roll
cmpsb
loopne
dec
jle
in
sub
cli
mov
mov
lea
pop
in
rclb
mov
dec
add
aam
mov
movsl
in
push
xchg
pop
jbe
jmp
push
mov
jb
lea
mov
xchg
mov
sbb
and
cmp
mov
flds
dec
ss
les
pop
outsb
pop
dec
adc
xor
bound
movsl
xchg
ljmp
cwtl
or
or
shl
push
cmpsl
in
jno
mov
addl
push
pop
jne
ljmp
cmp
mov
adc
repz
in
ret
shll
dec
xor
mov
movb
cmc
pusha
push
lahf
lods
xchg
and
outsl
push
pusha
add
out
sbb
cmp
sbb
call
push
xchg
aaa
sub
cmp
aam
inc
push
cltd
pop
idivl
rclb
sub
xchg
test
dec
inc
icebp
mov
jp
cmpsb
dec
test
or
sbb
or
lock
jb
and
jb
xchg
mov
cmp
dec
stc
mov
xor
xor
or
shlb
notl
sarb
mov
fs
jg
in
imul
rcrl
cmc
std
xchg
or
nop
sbb
mov
cmpsb
cmp
cmp
xor
jmp
inc
xor
stc
divb
repz
push
lcall
repnz
xor
ss
int3
stc
test
cmp
adc
lret
xor
cmp
sub
and
push
icebp
cmp
inc
fistpl
jae
test
adc
jmp
or
add
fs
add
add
rcrl
and
les
mov
push
xchg
sub
sbb
adc
imul
jb
jg
lret
adc
sarb
dec
mov
xor
push
cwtl
rcrl
push
xchg
cltd
xchg
pop
repz
jns
jnp
loopne
cld
jg
xor
inc
mov
aas
out
inc
in
outsb
fistps
adc
lahf
xorb
leave
hlt
xchg
mov
jg
dec
movsl
sub
jne
push
outsl
inc
mov
xchg
in
cs
pop
mov
movsl
mov
jb
pusha
mov
sbb
mov
lahf
stos
roll
aad
adc
jnp
mov
sbb
or
aaa
mov
jns
and
fisubrs
jecxz
mov
rorb
mov
mov
push
sti
or
mov
add
stos
push
js
into
jge
add
pop
loope
fucomi
mov
aad
or
sbb
sbb
mov
mov
and
cmp
std
int3
mov
jbe
js
mov
insl
fldl
aam
stos
and
xor
jmp
sub
outsb
xchg
cs
fisubs
movb
inc
shrb
and
stos
mov
shll
adc
gs
popa
sub
jne
xchg
sub
mov
mov
mov
cs
mov
jecxz
insl
sbb
aad
mov
xchg
movsl
mov
push
dec
lods
xchg
adc
jo
iret
cmp
adc
icebp
dec
push
sbb
xor
and
or
popf
xchg
or
add
push
sti
or
jae
add
ficoml
jg
push
loopne
sbb
aad
jne
fldl
jp
or
cmovno
sub
jne
mov
xchg
shrl
jmp
int
inc
fs
push
mov
in
dec
cmp
mov
loop
arpl
out
lods
fprem1
shll
pop
add
inc
cmp
subb
or
bound
push
lcall
cmp
mov
aas
imul
arpl
pop
pop
dec
stos
jecxz
fucomi
fcom
rol
nop
push
xor
push
and
testl
ja
fisubs
dec
mov
jp
sbb
addr16
jmp
hlt
lods
mov
sub
imul
call
scas
dec
inc
push
mov
jge
int3
out
mov
addr16
mov
pop
mov
pop
rorb
lock
jl
mov
stos
orl
add
push
mov
sub
hlt
imul
push
sub
add
repnz
into
jns
pushf
pop
inc
stc
sub
mov
fildl
imul
xor
xchg
movsb
lret
cmpsb
test
scas
and
and
xchg
bound
dec
mov
pop
adc
adcl
repnz
mov
enter
mov
push
cmpsl
into
xchg
je
mov
aam
lret
bound
jo
jg
add
jbe
push
jno
sbb
or
loope
fsubl
mov
aad
in
in
testb
orb
mov
leave
adc
fwait
mov
test
sti
aaa
data16
sbb
inc
sbb
mov
xchg
or
fidivrl
sbb
adc
jmp
addr16
pushl
jbe
cmp
lea
cmp
jg
cli
hlt
adc
push
cs
mov
cs
xchg
int
mov
jne
fdivl
loope
sub
dec
push
adc
xchg
repz
fldenv
setl
and
push
sub
out
inc
fimuls
ret
and
lods
or
inc
bound
mov
ret
pop
or
or
in
mov
bound
mov
pop
jne
stc
testb
lock
sub
sub
pop
inc
mov
mov
flds
cvtdq2ps
jp
pushf
insl
pop
push
and
add
pushf
subl
lret
mov
inc
mov
pop
push
stc
arpl
in
xchg
dec
ljmp
leave
jnp
inc
sbb
stos
inc
and
dec
push
push
cmp
fnstcw
rclb
xchg
scas
jle
inc
das
pop
inc
or
je
outsl
push
inc
cli
sub
sbb
iret
shl
cli
repnz
insl
mov
mov
mov
and
pop
mov
jg
movsb
push
xchg
mov
fldz
es
mov
pop
popa
out
pop
pop
lcall
xor
inc
xlat
lock
je
inc
cmpsb
fcompl
mov
pop
or
lods
loopne
mov
push
jnp
jnp
shll
sub
notb
filds
aam
insb
mov
popa
jo
adc
mov
push
add
add
inc
jb
iret
adc
iret
adc
push
push
jecxz
in
fnstenv
int
dec
xor
and
hlt
shlb
aad
cmp
push
sub
add
rorb
push
xchg
insb
ret
into
fmul
fidivl
xor
push
outsl
hlt
pop
xchg
xchg
mov
dec
pop
shl
call
lock
pop
aad
or
adc
mov
dec
sub
push
mov
inc
lds
mov
fisubl
sbb
xor
add
inc
daa
mov
leave
ret
xor
mov
enter
shrl
xlat
in
sbb
cltd
add
data16
in
bnd
popa
ljmp
mov
pop
pusha
xlat
hlt
xchg
push
push
and
or
lods
jg
mov
dec
addr16
inc
push
mov
mov
mov
push
sbb
in
lahf
mov
imul
xchg
xchg
mov
loope
xor
fstpt
fwait
sbb
aam
mov
jno
sbb
sahf
insl
loope
ss
xchg
xor
sub
repnz
sbb
icebp
ret
sub
sarb
les
in
cmp
sub
lds
jg
inc
jp
bound
and
mov
sub
stos
push
sub
inc
test
sahf
jmp
inc
or
xor
push
sbb
stc
je
stos
imul
leave
lahf
adc
mov
rcr
xchg
jmp
stc
mov
sbb
adc
jp
jle
mov
dec
lods
pop
out
subl
test
sub
xor
jb
sub
cmp
mov
add
push
xor
adc
fisttpll
sub
mov
mov
sub
int
mov
sbb
subl
andb
cmp
cmp
ret
push
cld
xchg
lds
imul
lahf
aas
aad
or
mov
scas
dec
adc
out
jp
push
bnd
sbb
cld
jne
imul
pop
je
adc
or
insb
jg
or
and
lret
clc
xor
pushf
les
push
push
cli
cli
lods
xchg
and
cmc
mov
lret
ret
push
push
cld
imul
xchg
test
cmpsb
jle
push
mov
cmp
icebp
sbb
and
xchg
mov
loopne
loopne
mov
jge
jo
notb
adc
inc
cmpsl
pop
cmp
mov
call
ds
jo
cmpsl
dec
ret
out
leave
mov
icebp
xor
lods
scas
out
iret
pop
orb
sbb
popa
mov
add
cmp
pop
arpl
xor
mov
sub
cwtl
icebp
cmp
inc
sahf
xlat
aad
outsl
xchg
jbe
mov
sub
cmp
jnp
into
xor
jmp
add
movsb
in
push
jp
iret
xchg
out
shll
rol
shll
cs
adc
jmp
jmp
mov
sbb
inc
lock
push
jns
cmp
pushfw
or
rcr
loop
jge
cli
push
pop
mov
leave
lods
cld
pop
std
out
shll
cli
sbb
movsb
dec
and
push
mov
outsb
test
push
and
sbb
sbb
jo
loopne
mov
in
sub
pop
add
loop
pop
xchg
mov
dec
adc
inc
add
out
adc
in
out
pop
mov
stc
cwtl
lcall
orl
into
cmp
and
mov
lds
iret
adc
mov
add
sbb
out
xor
clc
pushf
mov
loop
sti
dec
cmp
sbb
cmp
sbbb
loop
xor
hlt
sub
sti
sbbl
ret
sbb
leave
xor
loop
push
je
mov
sub
mov
loope
lock
lods
cmp
insl
push
loop
pop
mov
push
mov
sbbl
xor
inc
cwtl
xor
dec
sti
ret
and
pop
nop
insb
sti
push
mov
js
adc
sti
mov
ret
dec
mov
and
add
sbb
aaa
or
scas
imul
xor
es
jle
call
add
loop
push
test
mov
push
pusha
loop
rcrl
sub
je
adc
fnclex
mov
inc
bound
jl
xchg
rolb
in
aad
cmp
sub
loop
mov
adc
out
arpl
pop
pop
dec
add
or
sahf
xor
pop
lods
lret
roll
push
je
int3
popa
loop
cmpsl
cmp
ret
stos
pop
cmp
and
repz
xlat
dec
aas
mov
xchg
and
or
aad
jg
pusha
fcompl
aad
int3
dec
bndstx
inc
jl
repz
pusha
jmp
cmpps
mov
xor
mov
sbb
cmp
mov
not
and
lret
or
push
test
jmp
add
psubw
lods
aad
fidivrl
test
icebp
mov
and
stc
jbe
mov
add
cld
loop
lea
rclb
shrb
jge
frstor
mov
sbb
fs
dec
into
sbb
repnz
stos
fucom
shlb
xor
cmpsl
xchg
das
mov
and
xchg
dec
fcmovnb
xchg
push
xor
xchg
js
stc
xorl
xchg
cli
aaa
sbb
aam
fisubl
inc
ficoms
cmpsb
pop
mov
mov
jle
jmp
dec
push
cmpsb
arpl
mov
pop
xor
push
mov
add
inc
mov
pushf
inc
ficomps
ss
jp
test
adc
ret
push
lret
inc
repnz
sub
xchg
and
sub
and
je
jle
call
pushf
and
out
cmp
cmp
jle
lret
out
scas
and
add
xlat
call
or
addr16
add
mov
push
cmp
inc
and
decl
shrb
das
imul
xchg
push
mov
pusha
dec
lds
or
and
pushf
jl
jne
imul
push
cmc
jnp
xchg
cmc
pop
in
call
xchg
loopne
cwtl
mov
and
imull
xlat
cmp
lcall
ds
inc
pop
notl
stos
or
lods
loopne
push
test
cmc
xor
ja
cmp
sub
ja
cmp
test
sbb
inc
sub
loop
add
mov
fwait
pop
aam
mov
loop
push
stos
int3
sahf
aam
cmc
push
jae
testl
dec
add
pop
jle
jne
mov
sti
imul
adc
subl
adc
ds
mov
push
sbb
sbb
lcall
push
mov
mov
push
test
fdivrp
push
lds
inc
lock
pop
ljmp
push
mov
xor
test
ret
jecxz
xchg
fstpl
jne
js
and
push
repz
clc
imul
inc
lret
shl
test
loopne
hlt
es
dec
ret
dec
mov
jmp
arpl
mov
inc
arpl
and
ja
xchg
sub
ret
dec
mov
pop
inc
or
cltd
push
out
sub
pop
mov
fldln2
mov
fdivs
mov
int3
and
sbb
sub
add
and
movb
sbb
push
adc
mov
adc
adc
push
insb
mov
loopne
scas
inc
xchg
mov
inc
dec
jmp
push
adc
and
sbb
xchg
xchg
sub
and
cmp
xchg
xorb
das
pop
outsl
daa
pop
test
mov
jbe
fisubs
test
jmp
mov
je
fwait
or
aas
dec
orl
imul
mov
push
call
mov
int
jge
int3
aas
cmpl
loopne
enter
popa
mov
dec
std
std
sbb
repz
repnz
fcmovb
fs
lcall
add
pop
mov
arpl
roll
push
jns
xchg
xor
or
dec
push
iret
mov
iret
jmp
xchg
cli
pop
mov
stos
lea
pusha
aaa
mov
test
mov
and
bound
inc
shrl
dec
mov
lods
jle
dec
and
fcoml
xchg
or
fidivs
xchg
cmpsb
lods
dec
pop
fsubs
or
inc
mov
hlt
fiaddl
inc
test
lcall
mov
cmp
es
pop
xor
daa
aam
popa
inc
push
add
int
mov
mov
sub
push
dec
push
push
cmp
es
stos
push
ret
mov
and
popf
aad
jmp
xchg
dec
sahf
outsl
pop
xor
loop
xchg
mov
ret
cmp
imul
clc
stos
pop
jns
inc
inc
cmpsb
insb
cmc
addr16
inc
das
sub
fcompl
push
adc
pop
movsb
sti
sti
in
jl
mov
scas
xor
push
add
mov
jp
mov
jo
fcomip
daa
mov
sub
stos
xorb
and
cmpsl
sbb
mov
scas
xchg
cmpsb
mov
les
mov
insl
mov
rcrb
xchg
or
and
repz
add
insl
push
ljmp
je
or
loop
mov
jl
sahf
or
jmp
imull
sub
jnp
jae
xchg
jmp
push
scas
xchg
test
push
jl
dec
stos
iret
sbb
fistl
jb
lock
js
jno
nop
push
cmp
les
sbb
iret
out
into
popa
addr16
mov
mov
xchg
gs
jo
or
mov
xchg
sbb
jbe
sub
ss
and
or
add
xchg
lcall
js
pop
mov
inc
and
les
xlat
insb
icebp
es
dec
in
addr16
mov
xchg
movsb
das
ffree
movsb
add
imul
sarl
mov
int3
pop
mov
aas
push
test
movsb
data16
repz
ss
jle
mov
pushf
cli
cs
repnz
jge
jg
inc
les
push
daa
push
xor
sahf
dec
loopnew
movsl
int3
pop
xor
insb
mov
aaa
pop
jno
pop
stos
add
jl
mov
xlat
lahf
int
xchg
mov
mov
push
mov
nop
outsl
sbb
adc
add
rcr
jmp
mov
in
gs
daa
push
push
xchg
xchg
ret
and
xchg
loope
iret
xor
repnz
or
ficoml
jnp
lret
mov
jge
sarl
push
lock
jl
lock
xchg
pop
sbb
sub
xor
fisttps
loop
sub
and
cmp
pop
rolb
lods
push
xor
inc
aam
jmp
push
les
sub
dec
inc
push
push
sar
nop
es
mov
add
mov
cltd
mov
insl
std
repz
data16
or
mov
stc
gs
sbb
or
rclb
jne
adc
popa
adc
cltd
jmp
pop
mov
int3
call
mov
nop
and
sbb
inc
jecxz
xor
movsl
sarb
insl
mov
fdivrl
adc
inc
jae
lods
mov
rcll
mov
leave
push
xchg
push
xchg
mov
mov
push
gs
jecxz
out
neg
or
mov
dec
icebp
cmpsb
js
xor
pop
push
int3
sbb
test
mov
add
aas
mov
mov
ljmp
add
icebp
dec
mov
stc
mov
js
pop
ficompl
stos
xor
test
inc
out
aaa
test
and
inc
inc
notb
and
mov
inc
daa
pop
xor
movl
dec
test
cmc
bound
pop
mov
mov
ret
daa
mov
leave
jbe
lret
insl
jp
pop
sbb
pop
andb
xor
in
fs
push
adc
mov
leave
lods
in
mov
xor
xchg
push
movsl
popf
lret
sub
inc
mov
pop
sub
hlt
pusha
adc
stos
gs
push
aad
popa
ss
testl
ds
pop
push
mov
cmp
aam
jne
lods
cli
inc
adc
test
xchg
dec
adc
mov
push
test
frstor
jle
sub
mov
add
in
clc
jecxz
out
insb
aas
les
and
test
xchg
add
push
cmpsl
movl
stos
hlt
enter
lret
sar
xchg
mov
push
sbb
mov
fidivs
or
icebp
in
adc
lret
mov
push
xor
lret
imul
jns
pop
dec
mov
fdivr
add
lods
cwtl
xor
inc
push
sahf
movsb
mov
sub
jnp
pop
inc
pop
or
lds
inc
pop
push
aad
or
xor
roll
aaa
cli
push
cld
mov
adc
xchg
cmc
inc
lahf
inc
push
loope
stos
jmp
pop
ds
mov
and
add
jb
and
in
pop
push
ficomps
dec
jno
add
push
push
sub
cs
add
and
dec
mov
cld
jp
fwait
gs
or
imul
sahf
lds
add
jge
jbe
scas
mov
cmpl
push
aaa
cmpsl
push
cmpsb
push
nop
or
daa
fldt
ds
mov
or
jmp
out
les
call
fistpll
iret
and
and
dec
sbb
or
cmpsl
or
lods
mov
mov
push
leave
loop
mov
leave
adc
into
adcl
inc
and
sbb
in
repnz
bound
and
movsb
loop
pop
pop
jmp
cmp
int3
popa
inc
or
and
mov
cmp
inc
jns
xor
std
sbb
loop
xchg
ss
mov
pusha
lret
pop
scas
xor
aas
pop
ds
dec
mov
fmul
xor
sbb
rclb
sub
ss
movsb
push
dec
xor
outsb
xor
xor
hlt
push
rol
lods
pop
add
mov
stos
sbb
mov
xchg
test
push
jnp
adc
push
mov
cmp
cli
call
sbb
add
push
popa
add
fwait
mov
mov
ficoms
scas
test
mov
jl
out
fbstp
rorb
jnp
arpl
insb
xchg
pop
sub
insb
loope
imull
jge
pop
mov
nop
lock
outsl
aaa
loopne
cmp
pop
in
sbb
add
fldt
nop
ror
and
das
jp
push
cld
cmpsb
xchg
nop
leave
jecxz
push
pop
pop
xor
xchg
push
jno
mov
cmp
shlb
lret
jle
addr16
ljmp
scas
adc
pop
add
cmp
ds
cmp
sub
pop
mov
and
dec
pop
stos
cmp
nop
xor
test
call
lahf
test
pop
xchg
mov
mov
int3
mov
mov
adc
sub
mov
ret
out
xorl
mov
icebp
xor
add
popf
xor
pop
mull
jnp
and
mov
xchg
aaa
lods
bound
sbb
pop
push
in
or
lahf
int
mov
pop
sbb
loop
xchg
roll
iret
aam
mov
mov
xorb
inc
ret
popf
xor
sar
dec
lods
pop
std
xchg
pop
cmp
cmpsl
test
cmp
and
pop
cmc
shll
out
call
mov
pop
xor
and
imul
sarl
xchg
stos
movsl
shrl
sub
xchg
cmp
mov
fdivs
sub
inc
or
dec
lods
aam
nop
ss
mov
lahf
mov
push
sbb
lock
outsb
cmp
cmp
sbb
iret
xchg
xchg
inc
sbb
jecxz
sub
xor
jbe
adc
or
pop
inc
push
int
xchg
aas
xchg
mov
cwtl
push
mov
cwtl
je
sbb
xchg
inc
xor
push
mov
ljmp
add
repnz
xchg
and
or
xchg
xor
adc
fwait
movsb
sub
sahf
lahf
aaa
in
jo
mov
repnz
lea
js
fucomi
bound
pop
sub
fldcw
cmc
add
mov
fstps
sub
add
pop
push
jle
sarb
std
cld
pop
fmuls
nop
sub
mov
cmpsb
or
sub
clc
mov
adc
mov
ja
sub
enter
pop
push
pop
mov
adc
pop
ret
out
imul
fidivs
push
out
inc
inc
mov
ja
das
jno
pop
adc
adc
dec
jnp
jge
and
inc
lahf
pop
and
ficoms
sub
enter
neg
jp
pop
inc
push
adc
sub
pop
mov
mov
inc
mov
call
or
cwtl
dec
call
or
lahf
xchg
push
int3
scas
adc
pop
mov
xlat
fimull
gs
cld
cmp
stos
movsb
xorl
cmp
jp
push
fwait
enter
sbb
out
repz
fdiv
sti
jmp
stos
orb
cmp
add
btc
push
inc
icebp
es
addr16
sbb
mov
nop
mov
mov
out
jmp
into
mov
jle
mov
fadds
push
js
push
pop
leave
ret
ss
shlb
movsb
jmp
mov
push
sub
sub
xor
mov
push
test
fcomi
push
stc
xor
or
mov
xlat
cmp
clc
push
pop
or
in
movsb
mov
push
orb
pop
mov
ja
insb
and
mov
movsb
in
pop
jns
jne
lods
lcall
sbb
or
aaa
or
cld
fistpl
jmp
pop
sub
test
mov
loop
add
push
dec
mov
xchg
sbb
roll
jnp
ficoms
out
faddl
or
lock
and
daa
push
or
inc
in
adc
jle
push
popa
test
adc
mov
fisttpl
add
xchg
mov
sbbl
xor
jmp
aas
mov
pop
aas
je
bound
in
and
or
jns
dec
sub
mov
xchg
jl
icebp
cli
stos
add
clc
jne
jl
movl
jge
fwait
mov
xor
pop
mov
sti
cmpl
out
mov
int
daa
jb
sbb
pop
pusha
stos
sbb
sbb
jg
mov
int3
push
and
xchg
mov
jle
or
mov
push
mov
rcll
int3
pop
fstps
out
pop
pop
or
sub
xchg
pop
stc
loop
mov
ffree
lock
push
aam
and
les
movsl
in
xchg
bound
pop
pop
push
inc
or
mov
mov
ljmp
cwtl
add
and
fadds
and
sbb
push
lcall
mov
sbb
into
sub
pushf
pop
push
pop
xor
aad
lock
fimull
mov
push
sbb
aad
mov
bound
xor
sub
sbb
lock
pushf
das
pop
ja
aas
test
addb
movsb
lds
dec
push
or
adc
mov
outsb
cltd
dec
in
inc
dec
int
pusha
jae
mov
loope
inc
push
xchg
cltd
xchg
repnz
mov
xor
popa
pavgb
imul
into
rcl
jg
xchg
lret
pop
fwait
jl
dec
mov
jp
jo
sub
mov
sub
test
or
cmc
sbb
out
cmp
lods
ds
sbb
mov
repnz
jp
pop
ljmp
lahf
ljmp
mov
cwtl
ret
test
jbe
out
cmp
pop
pop
jle
pop
inc
cltd
cmpsb
inc
ret
dec
scas
pop
je
jbe
std
aas
clc
xchg
sbb
xor
lock
fsubrl
cmp
or
into
mov
ljmp
out
les
adc
or
jmp
bound
push
in
test
lock
jne
loope
or
xchg
lahf
mov
outsb
adc
fidivrl
mov
lahf
popa
jnp
aam
shrb
fdivs
push
cwtl
ds
xchg
fisubrl
mov
cmp
cmp
inc
js
das
jecxz
fs
xchg
mov
push
cmp
in
enter
sbb
jno
push
pop
jns
jne
push
pop
orl
fidivl
jge
sub
pop
fimuls
mov
mov
xchg
mov
insb
out
sarb
inc
sbbb
inc
mov
xchg
inc
fisubs
mov
ficompl
les
push
outsb
pop
adc
cmp
cwtl
inc
or
mov
inc
mov
mov
dec
gs
lret
jnp
jge
iret
sbb
out
pop
sbb
nop
movsl
cld
cwtl
iret
mov
sbb
test
ja
loope
lret
and
and
ds
outsl
mov
test
pop
xchg
or
add
dec
adc
cmpsl
int3
sbb
pushf
call
inc
aaa
xchg
dec
add
dec
mov
xchg
aad
rclb
and
icebp
stos
jecxz
rolb
inc
add
bound
aam
popa
icebp
mov
rol
pop
mov
into
xchg
icebp
cmpsb
push
pop
push
sbb
adc
jb
iret
jmp
scas
or
sbb
pop
scas
ret
sbb
mov
cwtl
sbb
dec
int
xchg
jl
aad
fimull
push
xchg
mov
shlb
and
sbb
cs
inc
mov
jmp
aaa
push
in
fsubrs
clc
div
cmc
dec
mov
cmp
pop
popa
add
call
test
push
loopne
push
dec
neg
cmpsb
lods
add
add
sub
jmp
jmp
loopne
lea
and
in
inc
adc
xchg
stc
sub
mov
xlat
sbb
cmp
and
mov
push
popa
lret
dec
jg
das
and
sar
and
insb
pop
or
aam
xchg
loope
jbe
cmp
cld
xchg
icebp
ret
push
shlb
jmp
mov
mov
adc
movsb
mov
mov
imul
push
jae
mov
mov
pusha
push
adc
call
cmpsb
xchg
cmp
clc
pop
mov
ljmp
scas
repz
mov
dec
inc
loope
lcall
in
push
inc
cmp
xchg
cwtl
ljmp
mov
inc
pop
inc
push
jnp
dec
or
hlt
sub
fcompl
cmc
cli
inc
add
cmp
xchg
scas
fstpt
clc
popf
mov
pop
add
sub
pop
pop
cmpsl
movnti
inc
push
daa
cmpsl
mov
pop
push
dec
call
push
data16
loope
in
scas
rcr
jo
adc
xor
mov
ljmp
in
xchg
dec
xor
or
les
xor
xlat
std
mov
jge
pushf
ffree
or
ss
inc
cld
pop
int
or
adc
mov
xor
or
sbb
adc
add
jbe
or
js
xchg
add
xchg
repz
or
cmp
mov
mov
rcl
pop
dec
jmp
push
pusha
jp
mov
xor
gs
push
pop
dec
sbbl
outsl
jne
out
mov
sub
sub
jae
pushf
mov
sub
pop
aam
mov
add
int
hlt
mov
into
popa
cmc
mov
arpl
jne
xchg
daa
inc
rclb
jae
sbb
imul
loopne
jbe
push
push
mov
stos
sub
mov
cmp
or
add
inc
inc
shrb
rol
dec
loope
rcl
mov
pop
pop
movsl
xchg
mov
cwtl
stos
cmpsl
jbe
pop
cmpsl
pop
xor
ret
loop
jne
sbb
mov
loopne
and
clc
std
inc
out
mov
int
mov
cmpsb
xlat
xor
lea
pop
and
cs
leave
test
stos
mov
adc
add
cmp
scas
dec
clc
xchg
aam
xor
xor
js
jge
xchg
mov
es
aad
jmp
mov
and
or
scas
movsl
aam
mov
push
sbb
in
push
int3
int3
out
popf
hlt
mov
or
roll
in
or
hlt
pop
xchg
xchg
xor
inc
add
dec
pop
sub
cld
aad
sub
fistl
cmc
shl
lods
adc
inc
hlt
inc
insl
fisttpl
in
pop
test
mov
pop
ds
shl
cmc
fisttps
cmpsb
mov
pop
mov
add
shll
jns
cmp
push
rol
mov
jg
daa
adc
je
dec
pop
jmp
sub
clc
and
inc
add
mov
pop
cli
lret
xor
and
clc
push
adc
outsb
aaa
pop
enter
sub
daa
mov
aaa
adc
int
jl
in
test
mov
or
jp
or
sbb
mov
mov
xchg
cmp
rorl
jle
jmp
daa
pop
lcall
sub
shrb
add
sbb
mov
imul
sub
fisttpl
pop
imul
daa
sub
xor
sahf
std
imul
push
push
mov
imul
lock
push
sbb
psubb
lods
add
mov
mov
push
push
xchg
pop
out
imul
outsl
pop
pop
or
cs
inc
test
lcall
in
rcrb
mov
cmpl
cmpsb
rorb
pop
mov
mov
dec
jp
or
jne
in
rclb
icebp
pop
ljmp
add
rorl
lahf
pop
fildll
or
jb
leave
mov
repnz
sub
icebp
sub
push
adc
adc
and
mov
scas
mov
xor
test
gs
cmp
hlt
cld
cs
push
mov
in
call
int
addl
mov
mov
pop
scas
jno
cltd
add
mov
dec
loope
fnstcw
xor
gs
clc
adc
mov
mov
ret
mov
call
int3
iret
inc
pop
jno
stos
dec
mov
xchg
enter
sub
arpl
popa
xchg
out
cmpsb
pop
aam
lret
leave
xor
in
xor
int3
int3
into
clc
inc
mov
mov
imul
arpl
fwait
inc
push
gs
add
xchg
js
mov
fisubrs
add
add
jmp
and
dec
ja,pt
pushf
add
into
sub
jb
movsl
data16
hlt
lods
sti
arpl
dec
mov
shrl
adc
mov
std
mov
nop
mov
xor
and
cmp
mov
add
pushf
pop
and
dec
test
arpl
call
loopne
xor
dec
mov
stos
inc
jle
xchg
ss
cmpsb
rolb
stc
lock
andl
shll
cmp
mov
mov
pop
cltd
enter
jp
pop
jecxz
cmp
sbb
inc
cmp
leave
jmp
test
sub
pxor
cli
repnz
in
mov
xor
ds
shlb
jb
xchg
popf
mov
xor
popf
data16
lock
in
add
cmpsb
or
mov
cli
xchg
aas
stc
cmpsb
mov
data16
jbe
jns
andl
je
and
mov
aad
push
pop
shll
idivb
fcmovnb
imul
cli
nop
mov
ret
and
pushf
or
test
ljmp
pop
or
sbb
jbe
push
ret
aad
fcmovu
pop
fwait
push
mov
addr16
imul
mov
cwtl
adc
repz
enter
mov
nop
sbb
aas
push
mov
test
ficompl
push
mov
push
cltd
out
int3
sub
out
push
xor
mov
mov
int3
xlat
rorl
mov
dec
inc
push
xchg
pop
ret
add
cmp
and
data16
xor
mov
cmpsb
push
sub
rcr
cmp
sbb
dec
dec
push
cmpsl
scas
xchg
pop
aam
push
iret
sub
push
fsubrl
out
xchg
add
setae
cmp
mov
mov
aaa
dec
shll
test
int
stos
and
hlt
and
aaa
xor
adc
mov
sbb
aas
jbe
xor
movsb
subb
inc
aaa
rol
jno
frstor
dec
outsb
sbb
add
mov
jnp
ficoml
adc
fldenv
pop
outsl
inc
in
pop
faddl
inc
mov
cmp
scas
lock
addl
cwtl
xor
arpl
sbb
adc
lret
or
int3
gs
repz
das
test
pushf
adc
pop
jae
loopne
sub
and
adc
mov
popa
jo
call
inc
int3
popa
andl
outsb
sahf
push
enter
std
sbb
mov
sbb
push
leave
insl
in
repnz
jne
xor
outsl
shlb
adc
leave
sub
sti
xor
cmpl
inc
pushf
sbb
repz
and
mov
sub
xchg
cmc
pop
sbb
mov
cmp
test
mov
mov
ret
popa
test
ret
jge
pop
jno
push
dec
cmp
and
hlt
jle
sbb
inc
popa
popl
sbb
push
add
xchg
aas
pop
std
cmp
mov
lods
jb
mov
lds
rorb
sbb
lcall
sbb
or
push
jecxz
sub
sbb
push
stos
push
lods
roll
out
test
cmp
cli
stos
cld
andl
xchg
sub
cltd
push
xchg
sbbl
sub
in
out
add
das
insb
cmp
add
popa
and
mov
sub
push
add
mov
jne
xchg
pop
andb
mov
in
ljmp
pop
xor
movsl
xchg
ret
xchg
aad
jecxz
lret
sub
sub
cmp
add
std
inc
add
mov
push
pop
rcll
fst
mov
push
push
inc
popaw
xor
movsl
sub
insl
jl
mulb
mov
in
imul
jge
sti
and
inc
inc
jno
lods
data16
mov
push
pop
cmp
insb
fistl
mov
dec
shlb
push
fs
push
out
imul
fwait
sar
into
or
pop
stos
jns
mov
dec
xchg
negl
out
fsubl
dec
jmp
repz
dec
xor
push
sbb
das
in
mov
inc
pushf
jne
cli
dec
sub
aas
sbb
jmp
shll
jbe
outsl
sub
adc
dec
jl
mov
loope
repnz
leave
test
mov
inc
jbe
jmp
cmp
imul
in
sub
repz
sub
inc
out
mov
xchg
jae
inc
add
mov
dec
mov
and
lds
add
mov
cmp
out
mov
cs
pusha
int
push
mov
aad
loope
and
jp
dec
pop
mov
gs
adc
dec
pushf
popl
stos
pop
add
mov
mov
dec
jnp
lock
stc
sbb
aaa
dec
mov
jno
iret
push
clc
pop
call
pop
aas
int3
test
sbb
and
mov
jo
mov
xchg
out
notl
ficompl
or
mov
jmp
mov
lock
cld
pop
dec
js
push
loop
das
xor
arpl
rolb
jns
pop
test
adc
ljmp
mov
cmp
outsb
shlb
mov
test
out
imul
xchg
inc
mov
xchg
sub
sarl
popa
popa
adc
rorl
nop
lahf
divl
adc
test
and
xlat
push
inc
movb
xlat
jne
aas
adc
mov
clc
adc
pop
dec
inc
cmp
mov
rcrb
sub
xchg
ficomps
mov
outsl
test
dec
xchg
fwait
dec
lea
decl
dec
jne
hlt
daa
fmull
fucomi
pop
test
mov
mov
sub
pop
in
aaa
mov
movsb
addb
pop
push
dec
cmp
setns
das
or
xor
xor
mov
ljmp
pop
pusha
adc
mov
sbb
sbb
das
dec
test
test
add
loop
test
lret
xchg
add
adc
mov
pop
fwait
out
or
in
dec
mov
pop
mov
and
mov
outsl
movsb
stos
and
in
xor
xchg
test
xor
sub
out
sub
lahf
push
repz
mov
dec
stos
ljmp
fwait
movsb
cmp
fst
outsb
test
shll
jl
pop
jb
or
in
data16
inc
pop
rol
mov
das
scas
nop
cld
sub
sub
je
lret
cmp
repz
inc
arpl
push
gs
aas
push
stos
xor
sub
rcrb
insl
fcom
cmp
fimull
lock
xchg
cmp
in
test
daa
pop
xchg
jle
leave
push
push
test
mov
movsb
xchg
or
add
movsl
mov
out
mov
jno
push
push
sub
and
sub
cmp
addl
add
lahf
and
out
in
add
leave
adc
bound
mov
adc
and
repnz
and
cltd
mov
loopne
push
sub
insl
push
mov
dec
loop
adc
je
lret
fisubl
mov
loope
pop
sbb
mov
ljmp
gs
int
xchg
iret
or
out
ficoms
les
push
aad
mov
dec
push
inc
xchg
and
scas
or
or
incb
xchg
mov
out
lods
and
leave
and
pushf
xor
sub
xchg
mov
jmp
mov
pop
pushl
cmpsb
push
orl
fisubrl
xchg
dec
inc
push
test
lret
sarb
fsubr
imul
fwait
pusha
inc
inc
jne
das
mov
push
mov
mov
ljmp
xchg
mov
mov
fdivrs
inc
jo
cmpsl
cmc
and
xor
jno
testb
cmpsl
test
pop
xchg
test
jp
jne
scas
dec
inc
stos
push
push
pushf
sbb
jl
fnstcw
mov
push
cmp
xor
fcmovb
test
add
lret
es
loope
dec
mov
clc
jnp
jns
or
xor
push
add
push
out
mov
sub
nop
lds
push
cmp
incl
sti
or
stos
mov
out
push
lret
lods
aad
pop
outsb
jp
sub
test
and
jne
test
test
xor
sub
mov
filds
lcall
std
jo
stos
cli
sub
test
mov
std
loope
cld
fs
push
test
in
jmp
sahf
dec
clc
into
xor
mov
mov
sub
lods
std
cld
inc
inc
inc
cmp
idivb
and
xor
cld
out
mov
mov
mov
dec
xor
add
out
pop
xchg
outsl
mov
aad
aaa
and
push
movsl
jge
adc
jl
sbbb
jne
fs
and
ret
in
movsb
leave
push
adc
or
mov
jae
dec
popf
mov
fstpt
mov
push
jl
pop
xchg
jbe
das
pop
dec
cmp
push
nop
popa
or
repz
adc
les
mov
rcr
mov
lret
dec
jbe
cmc
jb
mov
mov
xor
fidivl
sbb
pop
pop
inc
stos
loop
mov
jno
and
shl
enter
orb
clc
mov
inc
dec
add
jnp
rorb
inc
pop
pop
push
imul
and
dec
adc
bound
sbb
ror
xchg
mov
mov
mov
aaa
inc
pop
or
xchg
sbb
adc
pop
jne
jne
outsb
sbb
daa
mov
push
mov
scas
stos
cmp
nop
xor
dec
xchg
mov
sub
xchg
xchg
sbb
jnp
mov
jo
adc
mov
add
arpl
inc
nop
mov
lahf
movb
leave
mov
dec
aad
jp
ss
sbb
push
in
xchg
xchg
sbb
xor
push
jg
cli
xchg
push
bnd
jl
cwtl
aam
sahf
loopne
dec
xor
aaa
mov
cld
nop
jecxz
cmp
xor
iret
sub
push
cmp
xor
mov
pushf
inc
push
inc
into
xchg
xchg
dec
jmp
outsb
mov
cmc
mov
outsb
jecxz
fnstenv
mov
xor
arpl
fdivl
push
jno
int
jae
dec
leave
mov
iret
sbb
out
cmp
mov
into
imul
jle
adc
gs
jmp
push
adc
jmp
gs
imul
or
scas
in
xor
decl
ljmp
dec
cwtl
jb
or
and
popa
and
cld
cmp
dec
mov
aas
mov
subb
in
iret
ret
dec
or
adc
mov
js
and
jl
mov
call
test
jnp
push
jmp
aam
and
push
mov
insb
dec
aaa
aad
aad
push
xor
lcall
cmp
repnz
stc
ror
nop
jnp
jecxz
clc
pusha
pop
pop
aam
in
or
int
xchg
adc
movsl
mov
enter
mov
shrl
mov
cmpsb
ds
sbb
cmpsb
adc
mov
rcrl
dec
jb
notb
pop
hlt
ret
or
xchg
sub
add
mov
or
daa
adc
adc
mov
xor
cld
cs
and
gs
adc
pushf
xchg
xchg
popa
cmp
in
stos
inc
in
sbb
or
lret
iret
and
mov
aam
jns
jl
scas
pop
stc
fcoml
mov
insl
dec
lahf
cwtl
jnp
pop
out
fildl
inc
pop
in
dec
pop
or
lock
in
mov
mov
insb
or
sub
int3
cmc
mov
dec
add
mov
mov
push
add
sub
fwait
jmp
jle
xor
pop
fwait
test
lret
add
dec
add
mov
and
pop
pop
enter
cli
in
sbb
mov
push
test
inc
xchg
aad
push
adcl
seto
inc
movsl
cmp
or
idiv
mov
dec
pop
xor
sub
jno
jmp
push
inc
sbbl
sbb
mov
mov
jmp
ss
dec
fcom
aam
add
mov
fs
pop
insl
inc
sub
sahf
sbb
test
stos
lea
fs
dec
jb
out
or
daa
faddl
inc
in
jg
cmp
fildl
dec
adcb
fcoms
push
add
push
cmp
pop
dec
cs
in
sub
dec
mov
das
stc
loope
mov
jle
push
dec
test
jae
adcb
test
xchg
jmp
or
ret
and
ja
sub
xchg
jbe
dec
sub
sbb
mov
push
push
jl
popa
mov
pushf
das
jnp
push
dec
jno
cltd
mov
shlb
pop
data16
stc
add
push
xor
inc
push
cli
ljmp
dec
mov
xchg
jmp
test
cmp
push
adc
push
scas
test
pop
sub
enter
and
mov
dec
insb
push
cmpl
or
in
push
cs
dec
cmp
xor
lret
sbb
lds
jns
add
cmp
lds
sbb
and
pop
mov
mov
jns
mov
movsb
fistpll
pop
insb
xchg
xor
enter
out
inc
sbb
xor
std
dec
xchg
push
sbb
jnp
jnp
jge
cli
or
loop
inc
arpl
adc
lahf
mov
aas
push
shll
sub
popf
scas
in
rorb
out
std
in
mov
xchg
lret
jl
outsb
ljmp
mov
adc
sahf
shrl
xchg
ljmp
or
mov
adc
or
scas
stc
sub
add
cwtl
add
mov
stos
mov
pop
xchg
je
loop
inc
aad
mov
setp
inc
mov
jl
cltd
out
movsb
je
ljmp
ret
ja
icebp
imul
push
rolb
and
jns
pop
jns
fnsave
and
add
mov
mov
pop
dec
sub
out
or
rcrl
imul
int3
pop
shll
andl
loopne
iret
add
adc
and
ljmp
inc
repz
icebp
cmpsb
inc
cwtl
xorl
in
mov
inc
xor
das
lahf
leave
cmpsb
lods
lods
in
popl
pop
lret
in
sub
fwait
mov
or
ja
cmpsl
cli
jbe
mov
sub
cmpl
int
push
stos
sbb
sub
sbb
and
and
scas
or
leave
popa
mov
cmp
and
dec
sub
push
sub
cmpsl
or
dec
sbb
out
test
dec
leave
adc
add
cmp
mov
aaa
insb
and
adc
lods
lds
add
sbb
dec
push
add
mov
sbb
pushf
hlt
xchg
jp
mov
or
pop
hlt
or
sti
xchg
mov
int
cmp
pop
xchg
xchg
test
das
pop
fisttps
aam
lret
push
popa
lock
mov
daa
sub
cltd
pushf
in
imul
mov
jge
sbb
fwait
cmpl
hlt
add
int
push
mov
les
cmp
cmp
sbb
mov
aad
sbb
mov
pop
mov
push
add
mov
cmpsb
stc
dec
mov
xor
call
lds
stc
or
ja
dec
push
xor
dec
xor
outsb
mov
adc
insl
out
jbe
pop
leave
test
std
in
inc
push
sub
push
int
flds
out
scas
push
dec
push
out
xchg
into
in
dec
adc
xchg
cmp
and
rclb
lcall
xorb
push
mov
fsubrl
stos
sbb
mov
add
cmpsl
fmul
add
out
add
push
mov
or
aad
mov
fisubs
fwait
mov
iret
sbb
lret
adc
add
lds
dec
ror
xchg
xor
lods
push
andb
mov
int3
jg
dec
insb
xor
aad
icebp
xchg
ffreep
inc
ljmp
adc
cmpb
test
sti
sub
ja
fs
lret
mov
dec
fldl2t
jne
and
ret
fsubs
xor
cmp
scas
jmp
fcmovnbe
test
xor
or
xchg
and
mov
jbe
or
cmpl
cmp
lcall
pop
pop
mov
in
arpl
xor
pop
into
mov
mov
out
add
sub
fstl
insl
or
shrl
.byte
.byte
add
add
add
or
push
or
andb
addb
add
mov
add
mov
add
add
add
push
add
add
add
add
add
orb
add
add
js
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
addb
add
call
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
add
dec
add
addb
add
add
add
add
add
add
push
add
add
pop
add
add
add
nop
add
xorb
add
add
add
add
xorb
fadds
add
lock
xorb
add
add
xorb
add
add
cmpb
add
add
cmpb
add
add
push
jns
add
jns
add
jns
add
add
add
add
add
add
add
add
add
add
enter
add
add
loopne
add
clc
add
addb
add
add
add
add
add
add
add
jg
add
adc
add
sub
add
add
add
add
add
add
or
xchg
add
add
add
pop
add
add
jo
add
mov
add
mov
add
add
add
add
add
add
call
js
add
push
add
sbb
add
add
add
add
add
add
or
add
add
xor
add
dec
push
add
pusha
push
add
js
add
nop
push
add
test
add
rolb
sbbb
add
fadds
add
lock
add
or
add
and
add
add
add
add
add
add
add
or
add
pop
add
push
pop
add
push
add
add
add
add
add
add
add
xchg
or
addb
add
cwtl
pop
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
in
add
add
add
mov
add
add
add
add
add
add
pop
pop
add
add
in
add
add
add
and
pop
add
add
in
add
add
add
pop
pop
pop
add
add
in
add
add
add
mov
add
add
in
add
add
add
shlb
mov
add
in
add
add
add
je
pop
add
add
add
add
add
add
bound
add
add
in
add
add
add
sub
add
add
add
add
add
add
add
add
in
add
add
add
les
add
add
in
add
add
add
sbb
pop
add
add
in
add
add
add
je
pop
add
add
in
add
add
add
int3
imul
pop
add
add
add
add
add
add
add
in
add
add
add
jl
pop
add
add
in
add
add
add
aam
pop
add
add
in
add
add
add
sub
pop
add
add
add
add
add
adc
add
add
add
add
add
ja
add
add
add
add
add
add
pop
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
or
add
add
add
add
add
xchg
add
add
in
add
add
add
cmp
pop
add
add
add
add
rorb
add
add
add
add
add
pop
add
add
in
add
add
add
aam
pop
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
in
add
add
add
insb
xchg
pop
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
adc
add
in
add
add
add
pusha
fwait
pop
add
add
in
add
add
add
mov
add
in
add
add
add
add
pop
add
add
add
add
add
add
add
popf
pop
add
add
add
add
add
add
add
sahf
pop
add
add
in
add
add
add
cmp
pop
add
add
in
add
add
add
jl
pop
add
add
add
add
add
add
mov
add
in
add
add
add
mov
add
add
add
add
add
add
mov
add
in
add
add
add
lock
add
in
add
add
add
add
pop
add
add
in
add
add
add
sbb
add
add
add
add
add
pop
add
add
in
add
add
add
push
movsb
pop
add
add
in
add
add
add
movsb
pop
add
add
in
add
add
add
js
pop
add
add
in
add
add
add
or
push
add
pop
add
add
inc
add
add
add
dec
add
pop
add
add
inc
add
pop
add
push
add
push
add
dec
add
inc
add
inc
add
or
inc
add
inc
add
push
add
add
dec
add
dec
add
jb
jae
jne
arpl
push
outsb
arpl
and
popa
data16
gs
push
push
inc
and
imul
pop
pop
dec
dec
pop
push
push
dec
dec
push
push
inc
push
pop
push
inc
push
dec
push
push
inc
inc
push
or
imul
inc
inc
pop
pop
dec
dec
pop
dec
dec
inc
pop
push
inc
push
dec
push
push
inc
inc
push
or
imul
inc
inc
pop
pop
dec
dec
pop
push
push
inc
inc
dec
inc
push
pop
push
inc
push
dec
push
push
inc
inc
push
or
imul
inc
inc
pop
pop
dec
dec
pop
push
push
dec
push
inc
push
push
pop
pop
push
inc
push
dec
push
push
inc
inc
push
or
imul
imul
pop
pop
push
inc
push
dec
push
push
inc
inc
pop
inc
dec
dec
sub
jl
and
imul
pop
pop
push
inc
push
inc
pop
inc
dec
push
sub
fs
dec
dec
xor
or
inc
push
inc
inc
inc
and
and
or
popa
insl
popa
and
fs
jo
sub
xor
sub
imul
dec
dec
xor
or
arpl
and
insb
arpl
pop
popa
data16
gs
jb
and
and
and
and
and
and
das
and
popa
outsb
fs
jb
and
insl
jo
outsb
outsb
je
or
imul
inc
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
addb
adc
add
add
movsl
sub
add
add
add
sub
add
add
adc
add
addb
lds
add
addb
add
add
inc
add
add
add
jbe
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
std
clc
push
jg
jmp
aas
pushl
incb
add
cld
add
incb
add
lcall
pushl
aas
adc
sbb
cld
cmp
cmp
call
jg
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
pop
incl
add
incl
add
incl
add
incl
add
insl
addb
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
add
cld
add
cld
add
clc
add
clc
add
lock
lock
jmp
add
jmp
add
inc
add
incl
add
decl
add
clc
add
clc
add
clc
pop
clc
jg
clc
jg
clc
jg
clc
jg
cld
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
pusha
add
add
add
add
add
adc
add
sbb
add
pop
cld
add
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
addb
pop
add
add
add
add
add
sbb
add
adc
add
incb
incb
incb
incb
incb
incl
incl
pop
incl
pop
incb
pop
dec
push
pop
inc
push
pop
inc
push
add
rcrb
inc
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
shlb
jg
jo
inc
clc
add
sar
inc
inc
dec
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
pop
addb
add
add
test
add
leave
dec
add
test
dec
add
or
add
rolb
add
cmp
add
addb
nop
jl
add
add
add
jg
add
pop
add
js
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
addl
pop
incl
add
incl
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
push
clc
mov
mov
clc
mov
clc
clc
decl
clc
ja
ja
js
clc
clc
decl
clc
ja
ja
js
clc
clc
decl
clc
ja
xchg
lock
clc
decl
clc
js
mov
lock
clc
decl
clc
js
mov
clc
decl
clc
js
js
js
clc
clc
decl
clc
ja
ja
js
clc
clc
decl
clc
ja
ja
js
clc
clc
decl
clc
ja
ja
js
clc
mov
mov
clc
mov
push
sub
add
inc
add
add
add
add
add
add
add
loopne
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fldl
add
add
add
fldl
add
add
add
fst
add
add
add
fst
add
add
add
fmuls
mov
mov
mov
fisttpll
mov
fdivr
jnp
jnp
jnp
fdivr
sti
sti
sti
sti
sti
sbb
mov
mov
mov
mov
fdiv
mov
mov
mov
fdivr
mov
sbb
jnp
jnp
jo
fdivr
sti
sti
sti
sti
lock
jnp
jnp
jnp
fdivr
sti
sti
sti
sti
sti
sbb
mov
mov
addb
mov
mov
mov
mov
fdivr
mov
orb
or
sti
sti
or
jnp
jnp
fdivr
sti
sti
sti
sti
sti
orb
pop
orb
pop
sbb
mov
mov
mov
fdivr
mov
orb
mov
mov
jnp
jnp
jnp
fdivr
sti
sti
sti
sti
sti
sbb
mov
mov
mov
fdivr
mov
sbb
incl
incl
jg
incl
incl
js
mov
js
mov
clc
mov
mov
fldl
fstp
fisttpll
fstp
fisttpll
fstp
fisttpll
fstp
fstp
mov
fstp
mov
fstp
mov
fstp
mov
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
sub
add
and
add
or
add
add
add
add
add
faddl
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
clc
mov
mov
mov
lock
add
decl
clc
incl
add
add
clc
decl
clc
ja
ja
lock
add
mov
lock
clc
xchg
xchg
mov
decl
clc
xchg
mov
add
jnp
decl
clc
xchg
mov
jnp
jnp
decl
clc
xchg
mov
jnp
jnp
decl
clc
xchg
xchg
jnp
jnp
clc
decl
clc
ja
ja
jnp
jnp
decl
clc
incl
jnp
jnp
clc
mov
mov
mov
jnp
jnp
add
add
add
adc
add
add
add
add
add
lock
add
push
add
les
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
mov
cmpb
add
mov
cmpb
add
mov
xorb
add
mov
cmpb
add
mov
cmpb
add
mov
cmpb
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
adc
add
adc
add
add
add
add
add
lock
add
push
add
les
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
mov
addb
mov
add
js
or
mov
or
mov
or
mov
or
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
adc
add
add
add
add
add
lock
add
push
add
les
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
js
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
adc
add
adc
add
add
add
add
add
lock
add
push
add
les
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
adc
add
adc
add
add
add
add
add
lock
add
push
add
les
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
adc
add
adc
add
add
add
add
add
lock
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
adc
add
adc
add
add
add
add
add
lock
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
ud0
incl
add
incl
ud0
incl
add
incl
ud0
incl
add
push
add
add
incl
add
push
add
add
incl
add
push
add
add
incl
add
incl
ud0
incl
add
incl
ud0
incl
add
incl
ud0
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
adc
add
add
add
add
add
lock
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
push
add
add
incl
add
push
add
add
incl
add
push
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
daa
add
add
add
add
add
jl
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
clc
mov
mov
clc
clc
dec
mov
push
js
jp
mov
jo
add
js
jp
mov
mov
pusha
xchg
incl
mov
mov
xchg
add
add
mov
mov
mov
faddl
lock
mov
mov
clc
addb
add
add
orb
xchg
incl
invd
jp
or
or
add
add
jp
or
or
js
mov
mov
str
jp
mov
mov
clc
add
jo
push
or
addb
xchg
str
lock
or
or
or
jo
or
or
js
mov
mov
orb
mov
mov
mov
str
or
addb
xchg
add
incl
add
or
or
or
incl
or
or
js
mov
loopne
add
add
add
mov
clc
cmp
push
mov
addb
xchg
xchg
add
add
mov
mov
xchg
incl
mov
mov
mov
ret
mov
add
js
jp
stos
stos
stos
stos
clc
mov
push
js
jp
stos
stos
stos
stos
clc
jp
stos
stos
stos
stos
clc
cmp
mov
ja
mov
mov
ja
mov
ja
ja
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
ja
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
mov
mov
mov
ja
mov
mov
ja
push
vpmacssdql
xchg
mov
jg
xchg
mov
jg
and
mov
mov
clc
mov
clc
mov
clc
mov
clc
inc
jp
mov
jp
add
pop
mov
jp
mov
xchg
add
xchg
jp
ja
ja
clc
add
mov
jp
add
pop
mov
jp
mov
xchg
add
xchg
jp
ja
ja
clc
push
mov
add
pop
mov
jp
mov
xchg
add
xchg
jp
ja
ja
clc
cmpb
mov
mov
clc
jp
mov
mov
add
xchg
jp
ja
js
clc
aam
jnp
mov
jnp
ja
js
mov
mov
js
mov
ja
js
xchg
js
xchg
mov
js
xchg
mov
js
add
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
ja
mov
mov
ja
mov
mov
ja
mov
clc
clc
clc
clc
clc
jno
mov
jp
mov
mov
jp
mov
mov
loopne
mov
clc
jp
mov
jp
mov
mov
jp
decl
jp
mov
jp
or
mov
jp
or
xchg
ja
clc
sbb
mov
jp
add
mov
jp
add
xchg
ja
clc
dec
jp
mov
jp
add
or
mov
add
or
ja
mov
nop
jp
mov
jp
mov
mov
mov
mov
jp
xchg
mov
xchg
jp
mov
jp
add
or
mov
add
or
ja
clc
clc
loop
mov
clc
jp
add
mov
jp
add
xchg
ja
clc
popf
jp
mov
jp
or
mov
jp
or
xchg
ja
clc
jo
mov
clc
jp
mov
jp
mov
mov
jp
mov
jp
stos
stos
stos
test
jp
stos
stos
stos
test
jp
stos
stos
stos
test
jp
stos
stos
stos
test
jp
stos
stos
stos
test
loopne
ja
ja
ja
ja
ja
ja
mov
ja
ja
mov
ja
ja
mov
ja
ja
mov
or
add
or
add
add
add
add
add
push
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
sub
add
daa
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
ud0
incl
ud0
incl
add
lock
incl
lock
push
lock
str
incl
decl
decl
lock
lock
incl
push
push
push
str
incl
decl
ud0
add
lock
incl
push
push
str
incl
decl
ud0
add
lock
incl
push
push
push
str
incl
decl
decl
lock
lock
incl
lock
push
lock
str
incl
ud0
incl
add
lock
add
add
add
add
add
add
add
add
add
add
add
faddl
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
add
decl
clc
xchg
ja
addb
add
mov
lock
clc
xchg
ja
addb
add
mov
add
clc
xchg
ja
addb
add
mov
add
clc
xchg
add
add
mov
str
clc
xchg
add
add
mov
push
add
xchg
add
add
mov
incl
clc
xchg
js
addb
add
mov
push
clc
xchg
ja
addb
add
mov
clc
xchg
ja
addb
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
jo
add
add
add
add
add
mov
add
pop
add
ja
jo
or
sti
sti
sti
pop
jo
add
ja
add
jo
mov
jo
add
ja
add
sti
sti
sti
sti
sti
lock
add
add
add
add
mov
mov
sti
sti
sti
sti
sti
sti
sti
sti
sti
add
or
movswl
mov
add
sysret
or
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
pop
ja
pop
add
add
add
add
mov
mov
add
add
lock
sti
sti
sti
sti
lock
mov
mov
add
sti
sti
sti
sti
movswl
add
add
cld
pop
push
pop
jmp
add
rolb
add
add
add
add
add
add
add
jo
add
add
add
add
clc
addb
stc
addb
inc
pop
jmp
ud0
clc
aas
ljmp
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
incl
add
push
add
add
decl
incl
lock
decl
lock
out
popl
add
push
out
popl
add
push
decl
decl
incl
push
add
add
incl
add
incl
add
push
add
add
incl
add
addb
add
add
add
add
add
add
add
add
add
pop
add
addb
add
pop
add
cmpb
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
out
add
mov
ja
fildl
xor
test
add
int
adc
pop
inc
arpl
push
cmp
xor
push
lret
ds
add
dec
jno
jno
mov
and
add
add
mov
xor
adc
pop
sahf
fldl
ds
int
pop
mov
add
xchg
leave
add
push
test
add
fadds
and
add
sti
add
imul
add
xor
cld
add
in
add
push
jl
add
push
add
push
js
and
add
add
add
add
pop
jge
pop
push
verr
jp
inc
push
push
add
xlat
clc
add
mov
imul
enter
inc
mov
es
addl
mov
add
in
add
out
pusha
mov
add
sub
add
out
add
dec
imul
jo
add
cld
add
incb
and
xchg
add
dec
push
add
roll
sbb
pusha
movsb
out
and
add
pop
add
cli
add
cs
add
cmp
add
cld
add
lahf
add
lods
in
add
lock
call
add
popa
mov
cmp
and
add
xchg
push
test
add
test
add
cli
add
add
add
data16
add
sub
add
filds
cmp
incl
push
cmpsb
out
pop
mov
std
add
pop
lret
add
mov
popf
test
pushf
add
jmp
cmp
lcall
mov
jmp
xor
add
incb
sub
add
cld
add
incl
imul
xchg
fsin
add
ds
add
stc
add
hlt
add
pop
stc
add
test
dec
gs
add
add
add
in
xor
add
add
xor
and
add
out
cmp
mov
add
hlt
add
cmp
add
fldl
push
mov
add
inc
filds
push
sar
pop
push
popl
pop
mov
popa
add
xchg
add
cmc
cld
add
movl
dec
mov
cld
add
cmc
add
add
xchg
aam
dec
into
stc
add
fadds
pop
mov
add
cmc
add
call
add
movb
dec
outsl
add
dec
add
incl
push
test
adc
add
mov
add
ljmp
or
add
repnz
in
add
incb
push
sar
and
mov
addb
mov
xor
add
nop
add
mov
dec
xchg
add
dec
imul
add
add
push
add
add
flds
pop
cmp
add
jns
add
je
push
sahf
rolb
jl
movl
pop
enter
sar
add
xor
xor
add
cld
add
or
add
repz
call
add
dec
lcall
pop
mov
push
leave
incb
pop
movsl
loope
in
cmc
add
jno
add
incb
insb
mov
add
push
ja
pop
scas
lock
insl
in
add
mov
add
xchg
dec
aam
add
icebp
add
pop
addl
xor
mov
add
fiadds
xor
add
push
jae
adc
sub
xchg
add
bound
add
incb
push
int3
incb
and
add
add
add
add
or
add
repnz
xchg
iret
add
testb
mov
add
insb
incl
pop
test
jo
loop
cli
addb
addb
push
sbb
jno
jbe
xlat
lea
pop
ficoml
orb
bound
bound
rorl
movsl
lods
mov
mov
mov
mov
mov
bound
call
lods
lods
insl
cltd
mov
mov
cs
mov
xchg
xor
sbb
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cs
xchg
add
xlat
xlat
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
negl
add
sbb
pop
into
inc
inc
inc
inc
inc
lret
inc
inc
lret
lret
lret
andb
pop
pop
mov
js
add
dec
insl
xchg
inc
lcall
jl
jl
pop
pop
pop
pop
fiadds
inc
inc
lds
aad
pop
adc
out
mov
pop
pop
inc
lret
jl
jl
movsb
pop
imull
adc
notl
mov
jle
push
mov
or
pop
pop
pop
lret
push
std
pop
mov
cs
inc
inc
lahf
inc
inc
jl
mov
nop
inc
jae
mov
pop
pop
pop
pop
in
mov
adc
loope
cs
pop
pop
inc
inc
lret
jl
outsb
outsb
outsb
outsb
sbb
cmp
int
lahf
in
add
add
bound
inc
cs
inc
pop
lret
lret
lret
jl
mov
movl
in
in
in
clc
stos
cs
inc
inc
lret
pop
cs
lret
lret
jl
addr16
aas
xlat
mov
cmpsb
in
in
in
add
inc
pop
pop
pop
lret
cs
lret
lret
lret
outsb
sub
aas
xlat
lods
and
pop
in
int
mov
cs
pop
pop
pop
pop
inc
inc
cs
lret
jl
orb
push
pop
inc
fstl
lahf
mov
sub
in
pop
pop
pop
lahf
pop
inc
inc
cs
mov
aas
mov
sbb
imull
inc
in
and
inc
cs
inc
mov
mov
push
mov
js
movsb
sbb
and
cs
lret
mov
inc
out
add
in
and
faddp
int
pop
daa
pop
pop
movsb
div
mov
jl
bound
pop
add
xlat
mov
in
in
in
mov
pop
das
xor
mov
clc
pop
lea
xlat
out
hlt
int
in
in
in
jo
add
cs
push
pop
push
insl
lret
jl
cmpb
mov
hlt
in
in
in
stos
mov
pop
xor
jl
outsb
shrl
push
int3
fdivrs
in
in
pop
lret
divb
pop
inc
jl
push
jl
outsb
popf
pop
fnsave
sbb
in
in
lret
pop
sub
repnz
inc
inc
jl
mov
lds
mov
pop
int
hlt
in
jl
sub
imull
lock
jae
xor
and
push
je
jb
add
int3
std
mov
mov
xchg
push
fcmovu
sar
mov
or
inc
insl
push
push
ja
cmp
arpl
js
fcoml
aad
call
paddusw
testb
xor
xchg
shrb
mov
or
pop
inc
jne
aam
popa
add
or
aaa
shr
jp
mov
cmp
pop
fs
scas
bound
aas
mov
jns
dec
loopne
mov
and
jo
lret
mov
das
sbb
cmpsb
test
fbstp
mov
adc
push
jnp
scas
mov
leave
orl
jno
movsl
out
lcall
mov
ss
and
fistl
cwtl
pop
adc
or
icebp
sub
rclb
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
cltd
mov
push
pop
or
inc
add
add
add
popa
add
add
jo
add
add
push
add
add
add
push
ds
mov
push
pop
or
inc
add
add
add
popa
add
add
add
outsb
add
add
add
add
add
add
dec
add
mov
or
inc
add
add
add
add
add
add
add
dec
add
mov
or
inc
add
add
add
add
add
add
add
dec
add
cwtl
or
push
add
add
push
add
add
add
or
add
add
dec
add
cwtl
or
push
add
add
inc
add
ja
outsb
add
add
add
add
push
pop
arpl
pop
or
inc
add
add
add
add
adc
add
add
mov
add
add
push
andb
inc
add
add
push
xchg
cltd
push
pop
mov
or
inc
add
add
add
outsl
add
add
add
add
andb
dec
add
add
push
ds
push
pop
mov
or
inc
add
add
add
outsb
add
add
add
andb
push
add
add
dec
add
pop
mov
or
push
add
imul
sub
push
add
bound
add
add
or
add
dec
add
pop
mov
or
push
add
bound
das
add
outsb
add
add
add
add
or
add
dec
add
mov
add
add
andb
inc
add
add
dec
add
mov
add
add
add
add
add
add
add
add
cs
insl
mov
mov
or
inc
add
add
add
add
add
add
add
fcoms
push
fs
mov
add
add
je
jb
insb
add
add
add
add
add
add
bound
stos
mov
push
fs
mov
push
pop
add
addb
add
add
add
outsb
arpl
or
addb
add
add
add
add
repz
add
add
add
add
add
add
adc
push
add
add
add
pop
add
add
incl
add
add
add
add
sub
push
add
jmp
add
add
add
add
add
inc
add
add
push
add
add
add
add
add
incl
add
add
sgdtl
add
add
dec
add
add
cmc
add
incl
add
add
add
add
or
addb
add
or
add
add
and
out
add
add
add
or
mov
dec
add
add
mov
add
add
add
add
incl
add
add
mov
add
add
add
add
incl
add
add
add
inc
add
add
push
add
add
add
lods
sub
add
sub
add
add
add
adc
pop
add
incl
imul
sub
add
add
push
add
add
pop
add
add
add
add
add
incl
jp
add
add
sub
add
add
add
add
add
add
add
add
incl
push
sub
add
sub
add
add
add
int3
add
add
add
incl
push
sub
add
sub
add
add
add
add
add
add
add
add
add
add
incl
pop
add
add
sub
add
add
add
add
add
adc
add
incl
insl
add
add
sub
add
add
push
inc
rorb
addb
add
push
add
add
add
add
add
add
pop
add
gs
add
or
mov
dec
add
add
add
add
add
add
add
or
incl
gs
jo
outsb
arpl
xchg
pop
add
incl
add
add
or
push
add
add
mov
add
incl
add
add
add
push
add
add
pop
add
rolb
or
stc
add
incl
add
add
add
add
or
add
add
incl
add
add
add
push
add
add
push
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
add
incl
insl
sub
add
sub
add
add
push
inc
rorb
addb
add
push
add
add
add
add
add
add
mov
incl
add
add
add
adc
push
add
add
pop
add
add
add
add
incl
add
add
add
push
add
add
or
or
in
sbb
push
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
aas
add
aaa
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
add
incl
insl
sub
add
sub
add
add
push
inc
rorb
addb
add
add
add
add
add
add
add
add
jo
mov
pop
fisttpll
or
mov
dec
add
add
add
add
add
add
add
and
or
incl
push
cmp
add
add
add
add
add
push
add
add
sub
or
mov
outsb
add
add
incl
add
add
add
push
add
add
loopne
pop
add
add
add
incl
jg
add
add
sub
add
add
add
add
add
add
add
add
add
or
inc
add
incl
push
xor
testb
add
add
add
addb
push
add
add
dec
add
add
incl
add
add
add
push
add
add
cmc
add
adc
or
incl
add
add
add
add
add
push
add
add
or
xor
jne
dec
add
incl
fisttpll
dec
dec
cmp
jmp
jae
sub
add
add
add
inc
add
incl
add
add
add
add
add
add
inc
add
add
jmp
add
add
add
add
add
add
add
add
adc
inc
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
dec
add
incl
add
add
add
add
add
add
dec
add
add
ljmp
add
add
add
add
add
add
add
adc
dec
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
pop
add
incl
add
add
add
add
add
add
pop
add
add
dec
add
incl
add
add
add
add
add
pop
add
adc
dec
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
imul
add
add
incl
add
add
add
add
add
add
imul
dec
add
incl
add
add
add
add
add
add
add
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
pop
add
push
add
add
popl
xor
jbe
dec
add
incl
add
add
add
or
add
add
add
add
add
incl
xor
jle
pop
add
add
or
add
add
add
add
add
incl
lea
push
sub
push
mov
add
add
add
push
add
add
cltd
add
xor
or
popa
add
incl
pop
dec
dec
cmp
add
add
add
add
add
incl
gs
push
push
aam
cmp
add
add
add
andb
push
add
add
xlat
add
daa
add
pop
add
incl
add
add
add
add
add
add
or
adc
pusha
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
pop
add
push
add
add
or
xchg
xchg
imul
incl
push
add
add
add
add
add
add
add
add
incl
push
jne
mov
add
add
add
add
add
push
add
add
inc
add
add
incl
add
add
add
push
add
add
adc
cmpsb
add
add
incl
push
inc
bound
addr16
add
add
or
add
add
add
add
add
incl
push
jne
add
add
or
add
add
add
mov
cmp
or
push
add
incl
push
dec
mov
xor
add
add
add
add
add
add
add
add
add
add
add
lret
pop
jne
notl
add
add
add
add
add
rolb
add
push
add
incl
add
add
add
add
add
mov
add
insl
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
add
add
add
add
add
incl
addr16
notl
add
add
add
add
add
into
add
add
push
add
incl
add
add
add
add
add
int3
add
adc
push
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
add
add
add
incl
push
xor
jle
pop
add
add
add
add
add
add
add
add
incl
push
std
dec
jo
cmp
add
add
andb
push
add
add
roll
xchg
add
add
inc
add
incl
add
add
add
add
add
add
add
insl
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
add
add
incl
push
dec
dec
outsb
jg
add
add
add
add
push
add
add
roll
cmpsl
add
add
push
add
incl
add
add
add
push
add
add
cltd
add
add
incl
cwtl
push
bound
jne
notl
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
insl
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
add
add
add
incl
push
int
or
mov
inc
push
ds
jne
jp
jge
add
add
add
add
add
add
add
add
add
incl
push
sti
insl
mov
push
add
add
add
add
add
add
add
or
incl
cwtl
push
bound
dec
mov
sub
cmp
add
subl
add
add
add
add
add
stc
add
add
pop
add
incl
add
add
add
add
add
add
add
insl
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
add
add
add
incl
insl
sub
add
sub
add
add
push
inc
rorb
addb
add
add
add
add
mov
add
add
bound
cmp
add
or
mov
dec
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
adc
daa
add
jmp
add
add
add
add
add
push
add
add
inc
add
add
add
add
add
incl
pop
sub
add
sub
add
add
add
add
add
add
incl
insl
sub
add
sub
add
add
push
inc
rorb
addb
add
add
add
add
loopne
insl
add
add
add
sub
bound
or
testl
add
add
add
add
add
add
push
add
add
push
add
cmp
adc
incl
imul
push
sub
add
sub
adcb
add
or
daa
add
add
add
insl
add
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
push
add
outsl
add
jb
add
jae
xor
add
add
add
add
add
add
add
add
add
add
incl
add
add
or
addb
add
add
add
add
add
add
add
add
mov
incl
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
push
add
add
push
add
add
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
add
incl
insl
sub
add
sub
add
add
push
inc
les
enter
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
incl
pop
sub
add
sub
add
add
add
add
mov
add
add
add
xor
fs
incl
add
add
add
push
add
add
mov
push
add
add
add
add
incl
pop
add
add
add
add
add
add
incl
insl
add
add
add
add
add
incl
push
sub
add
sub
add
add
push
inc
les
rolb
add
add
add
add
add
add
arpl
push
fisttpl
jo
or
testl
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
incl
push
pop
dec
sbb
push
sbb
add
add
add
pop
add
add
add
add
incl
imul
push
add
add
add
add
add
incl
push
out
jbe
jbe
incl
add
add
add
push
add
add
add
add
add
incl
bound
std
dec
jo
sbb
add
add
add
add
add
incl
push
jne
notl
incl
add
add
add
push
add
add
add
add
add
incl
add
add
add
push
add
add
add
add
add
incl
add
add
add
push
add
add
add
add
add
add
incl
add
add
add
push
add
add
add
mov
or
repnz
incl
add
add
add
push
add
add
add
mov
or
repz
incl
add
add
add
add
add
dec
pop
pop
cmp
add
or
testb
sub
sub
add
add
add
add
gs
push
add
push
add
dec
sub
push
or
dec
push
add
add
add
sub
or
xchg
pop
or
push
sbb
add
or
push
bound
sti
jl
jle
dec
das
add
jbe
fs
dec
add
or
lds
xchg
test
lea
insb
xchg
pop
xor
xor
pop
or
xor
add
push
mov
xchg
addr16
test
xchg
out
mov
add
add
gs
test
testb
add
pop
add
add
arpl
pop
and
add
dec
pop
pop
xchg
push
add
or
push
pop
cmp
push
fisttpll
pop
xor
add
decl
add
pop
lret
jp
jp
arpl
pop
and
add
mov
pop
daa
pop
or
loopne
aad
push
bound
pop
add
or
loopne
aad
das
push
test
push
bound
pop
dec
sbb
xor
add
push
test
cs
test
lea
xor
add
pop
sub
jp
pop
cli
push
sbb
jge
in
xor
lea
xor
mov
lea
pop
test
push
pop
pop
bound
int
pop
dec
add
and
sti
jl
jle
insb
mov
cwtl
repnz
stos
mov
jns
xchg
jbe
adc
clc
jbe
pop
test
add
dec
add
and
xchg
dec
or
inc
push
sbbb
sub
lcall
stos
mov
push
fs
add
sbb
or
bound
test
jl
jle
insb
mov
cwtl
or
push
bound
add
dec
add
and
xchg
dec
or
std
nop
stos
mov
jns
xchg
add
adc
sub
jl
jle
dec
mov
bound
push
imul
pop
add
xchg
dec
and
xor
add
jp
pop
fimuls
xchg
dec
and
and
add
pop
test
cli
push
and
and
add
xor
addr16
orb
add
dec
and
and
add
pop
test
jb
add
add
or
testl
je
jo
add
pop
add
mov
xchg
gs
add
dec
jo
add
adc
sbb
testl
sub
add
add
dec
dec
hlt
xchg
test
gs
add
sbb
and
mov
gs
add
dec
sub
add
add
dec
dec
hlt
xchg
test
gs
pop
add
sbb
and
mov
gs
or
dec
and
dec
test
pop
es
xor
mov
nop
jmp
dec
or
xchg
add
adc
sbb
testl
sub
add
xor
xchg
test
gs
add
sbb
and
mov
gs
add
dec
arpl
gs
add
sbb
and
mov
gs
add
dec
in
pop
mov
add
mulb
xchg
cmp
add
sbb
and
mov
gs
add
dec
daa
lea
pop
cmp
add
sbb
add
or
pop
xchg
test
xchg
dec
cmp
maxps
xor
add
gs
jle
xor
mov
xor
add
mov
cli
push
test
lea
testb
das
es
arpl
js
xor
add
jbe
jbe
js
jbe
lcall
loope
add
pop
add
gs
stc
pop
and
and
add
dec
mov
mov
fs
dec
or
sbbl
iret
jle
mov
dec
mov
pop
add
pop
add
gs
stc
pop
and
and
add
dec
mov
dec
or
loopne
cmp
pop
das
ljmpw
testb
repnz
iret
jle
mov
dec
mov
pop
add
sbb
sub
pop
and
and
add
dec
mov
mov
fs
dec
mulb
push
pop
jne
dec
add
dec
pop
xchg
test
sbb
sbb
sub
pop
and
and
add
dec
mov
dec
mulb
push
pop
jne
dec
add
dec
pop
xchg
test
sbb
add
push
inc
or
loopne
aad
sti
mov
push
cltd
push
jns
daa
pusha
add
or
loopne
aad
cltd
push
ljmp
pusha
add
add
add
or
loopne
aad
lds
testb
fistpll
gs
arpl
xor
scas
nop
testb
fistpll
add
add
add
gs
add
or
and
nop
scas
nop
testb
std
andb
adc
add
add
push
add
sbb
pop
jne
xor
pop
and
and
add
dec
mov
rcll
jne
dec
add
dec
or
xchg
out
mov
xor
add
bound
push
and
and
xor
and
add
push
loopne
dec
test
lea
loopne
aad
push
bound
pop
and
and
add
push
cmp
pop
sbb
testb
stos
mov
add
xor
stc
pop
and
and
add
stos
mov
fnstsw
xor
add
dec
sub
gs
test
testb
push
dec
and
and
add
jbe
push
push
addb
adc
loopne
aad
and
xchg
and
and
add
push
cmp
pop
das
push
pop
dec
push
out
jbe
pop
add
push
add
mov
jbe
pop
repnz
loope
or
loopne
aad
sbb
pop
and
and
xor
stc
pop
and
and
add
dec
mov
addr16
xor
lea
xor
add
push
pop
pop
push
and
and
add
add
dec
insb
js
dec
xchg
gs
das
add
xchg
out
mov
push
add
verw
push
pop
pop
push
and
and
add
rcll
jne
push
stos
dec
fisttpll
push
add
push
pop
pop
push
and
and
add
rcll
jne
xchg
fisttpll
or
pop
push
and
and
add
sarl
repnz
loope
add
adc
aad
push
mov
ds
out
jp
pop
and
and
add
dec
mov
mov
add
add
sbb
pop
jne
xor
pop
and
and
add
dec
mov
rcll
jne
dec
add
dec
or
xchg
out
mov
xor
add
mov
push
sub
pop
and
and
add
dec
mov
mov
fs
dec
test
push
mulb
pop
jbe
fisttpl
int
pop
dec
add
adc
aad
push
mov
ds
out
jp
pop
and
and
add
dec
mov
mov
add
mov
push
sub
pop
and
and
add
dec
mov
dec
test
push
mulb
pop
jbe
fisttpl
int
pop
dec
add
pop
add
add
maxps
xchg
add
or
and
add
push
or
xchg
test
stc
pop
popa
mov
xor
add
add
xchg
out
mov
add
add
popa
mov
jge
add
add
add
add
add
add
add
xor
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
adc
and
add
add
mov
add
add
push
inc
add
add
add
and
add
add
or
test
add
add
add
add
add
and
adc
add
add
call
add
add
add
add
adc
add
add
sub
add
add
and
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pusha
add
add
add
add
add
add
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
push
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
pop
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
pop
add
pop
daa
pop
test
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
or
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
pop
add
jb
addr16
bound
add
and
push
add
add
outsl
add
insl
add
outsb
add
add
add
cltd
lahf
test
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jmp
fs
xchg
ror
into
out
cld
test
or
or
cmpsb
out
cmp
jle
sub
mov
pop
jmp
loop
xor
cmp
dec
loope
hlt
sbb
pop
or
add
call
push
mov
and
inc
push
nop
mov
pop
pop
mov
push
mov
pop
add
mov
sub
xor
sub
mov
push
jmp
and
fstps
add
mov
mov
sub
call
jl
pop
mov
es
mov
cmpb
jnp
sub
pop
pop
dec
dec
mov
cmp
jne
mov
jmp
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
push
push
or
pop
pop
jmp
xor
xchg
pop
add
and
pushf
movsl
pushl
das
lods
sbb
jb
js
out
jecxz
int
outsl
lock
mov
pop
subl
sub
lods
sbb
sub
adc
push
mov
pop
ret
or
adc
add
data16
sahf
mov
and
xchg
sahf
in
in
lods
insl
push
mov
inc
inc
aad
adc
cmpb
in
jbe
sbb
xor
sbb
mov
sbb
jmp
jnp
or
test
mov
ljmp
lods
sub
mov
mov
fmul
pop
push
inc
sub
sub
mov
subl
ja
movsl
jns
push
xor
sub
popa
das
ss
ljmp
scas
nop
iret
adc
cmpsb
mov
enter
push
and
sub
cs
outsl
mov
rclb
xor
cmp
fstpl
fisubrl
adcb
addr16
xchg
xor
dec
data16
dec
add
mov
scas
ljmp
jbe
pop
mov
and
xchg
mov
add
sbb
and
jbe
push
push
dec
test
mov
adc
ret
nop
mov
cs
lcall
insl
bound
loopne
rcrb
cmc
sub
xor
dec
mov
jmp
fldcw
scas
mov
mov
aas
scas
mov
mov
cmp
mov
push
lret
dec
push
mov
xchg
in
sub
mov
or
call
adcb
mov
stc
mov
movsb
icebp
cs
pop
ja
stos
dec
stos
pop
pop
movsl
pop
pusha
xchg
push
inc
push
sub
ficoms
rcl
inc
int3
fimuls
push
jle
stos
imul
das
push
mov
dec
cmp
jp
cltd
sbb
xor
push
out
imul
ss
xchg
push
ja
sub
and
sub
fisttpll
xchg
lret
movsl
or
scas
jbe
inc
into
shll
sbb
mov
cld
ljmp
lea
stos
ljmp
jnp,pt
adc
out
cs
out
sbb
jns
xor
sub
xor
xor
es
cltd
cmc
subb
sbb
lock
loope
xor
andl
inc
stc
jle
mov
inc
std
sarl
mov
outsl
sbb
mov
frndint
xchg
addr16
mov
jnp
jl
leave
sbb
cltd
packsswb
xor
mov
ljmp
inc
cmp
out
mov
jnp
out
push
add
adc
dec
add
icebp
pop
and
jne
ds
ss
repnz
jnp,pt
mov
shlb
pusha
mov
mov
repz
jnp,pt
push
dec
jg
mov
mov
xor
lds
jnp
push
inc
jg
mov
jnp
jno
imul
pusha
mov
mov
fcoml
sub
xor
pusha
mov
mov
jle
pusha
inc
jg
mov
mov
xor
lds
xor
ds
lds
jnp
repz
lock
mov
xor
lret
aas
push
sub
mov
es
aaa
sbb
mov
jnp
adc
pop
xor
and
repz
lods
pusha
mov
mov
icebp
mov
shlb
sti
cwtl
mov
jnp
mov
sti
int3
mov
jnp
repnz
lock
jnp,pt
dec
jmp
pop
mov
jns
cmp
xor
pusha
jae
xor
inc
sbb
mov
mov
dec
loopne
icebp
fnsave
xor
jge
sti
xor
pusha
jnp
jp
xor
jnp,pt
mov
jnp
mov
jnp
sub
dec
push
sub
stos
sub
movsb
mov
jge
mov
stos
cli
pop
dec
roll
outsl
inc
xor
cld
dec
les
cltd
cmc
mov
stos
cli
pop
dec
roll
cmp
mov
jnp
xorl
stos
out
cld
dec
lds
ret
repz
in
and
add
cmp
cmp
mov
mov
stos
cli
pop
dec
roll
dec
cmp
fisttps
xchg
popf
pop
xor
dec
cmp
or
cmp
mov
mov
stos
cli
pop
dec
roll
push
mov
ss
or
cmp
mov
mov
stos
cli
pop
dec
roll
push
xchg
stos
loop
mov
mov
pop
cmp
lods
std
hlt
jle
mov
jge
repz
in
and
add
cmp
cmp
mov
xor
mov
jnp
arpl
pop
jecxz
movsl
jecxz
mov
mov
mov
daa
xor
sub
aas
call
rolb
mov
dec
mov
cmp
int3
cs
sub
aas
call
pop
nop
and
push
pop
cmp
xor
and
xorb
jle,pt
jg
xchg
jb
xor
push
dec
rcll
lock
imul
sbb
mov
ljmp
stc
pop
xor
lock
icebp
xlat
xor
ds
sub
jnp,pt
xor
mov
ds
push
jg
lods
pop
dec
push
adc
mov
inc
adc
or
mov
xor
or
cmpsb
mov
cmp
aaa
into
mov
lahf
xor
cmp
sub
push
lcall
pop
or
pop
inc
mov
cmp
icebp
test
fisttpll
jnp,pn
adc
lahf
sahf
xor
hlt
rorl
in
cmpsb
pop
xor
jbe
ret
test
sub
jnp,pt
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
gs
add
mov
xorb
jnp,pt
mov
jnp
mov
jnp
mov
jnp
mov
add
jnp,pt
mov
jnp
mov
jnp
mov
out
jbe
push
pushf
mov
icebp
aam
inc
les
xor
inc
nop
jns
or
jp
push
xorl
xor
sbbb
in
fwait
xor
mov
mov
pop
into
repz
mov
stos
cmp
cmp
cmp
loop
inc
lret
push
test
xor
lret
shll
cmp
mov
ret
pusha
sub
dec
out
xor
nop
inc
andb
aaa
sti
sbb
jle
inc
popa
dec
loopne
sbb
add
stc
pop
adc
aam
mov
push
fs
mov
xchg
cmp
inc
aas
inc
mov
shlb
sub
inc
mov
push
xchg
push
fiadds
insb
stos
mov
mov
iret
sub
sub
xlat
cwtl
mulb
push
out
adc
leave
xor
cmc
fisubrl
xor
sub
lret
fcmovu
dec
fdiv
xchg
popf
mov
scas
add
mov
or
jae
push
push
add
aaa
bound
idivl
ja
adc
es
gs
sub
xor
incl
push
leave
push
xchg
je
push
dec
aad
in
test
sbb
into
xor
scas
insb
dec
mov
daa
insb
leave
pop
dec
xor
add
mov
int
fcoml
sarl
out
push
xchg
rorb
loope
cli
pusha
int
popa
mov
mov
in
loope
jo
mov
dec
mov
out
xlat
jl
jecxz
mov
jbe
mov
dec
addr16
clc
xchg
dec
loop
in
pop
push
cmc
push
in
in
fs
lock
pushf
adc
str
daa
inc
sbb
xor
shll
push
cmp
jno
dec
or
ds
ss
fwait
sub
ss
insb
test
xchg
xchg
push
repnz
add
jbe
sub
cmp
mov
popf
mov
inc
stos
cs
and
imul
dec
ret
push
mov
jge
xchg
cmpsb
les
cltd
lods
adc
xor
orl
jg
or
fisubl
adc
fiaddl
cmp
test
push
out
les
mov
pop
in
adc
adc
fs
lret
sarl
aam
inc
jp
cmp
mov
lret
pop
outsl
or
cwtl
mov
fldcw
mov
ljmp
ret
adc
shlb
out
mov
jmp
adc
out
lahf
fucom
mov
lcall
xor
xor
jp
cs
xor
add
add
or
add
adc
mov
pop
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
pop
add
mov
add
inc
mov
pop
add
pop
add
mov
add
push
mov
pop
add
add
mov
add
jno
pop
add
mov
add
jl
pop
add
mov
add
mov
pop
add
mov
add
mov
mov
add
ja
outsb
insl
insl
cs
insb
add
xor
xor
fs
insb
add
jb
imul
add
jae
jo
xor
cs
insb
add
gs
xor
fs
insb
add
imul
insb
add
imul
insb
insb
add
outsb
jae
outsl
outsl
insb
cs
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
cs
insb
add
outsb
imul
insb
add
insl
fs
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
mov
add
or
add
dec
mov
add
bound
add
outsl
mov
add
cmpb
add
add
add
add
add
add
add
mov
add
aam
pop
add
add
add
add
add
mov
add
or
add
add
pop
add
add
add
rclb
add
add
xor
pop
add
add
add
pop
add
add
add
add
imul
dec
jne
add
add
jb
popa
outsb
addr16
addr16
popa
insl
gs
add
add
jae
popa
outsb
addr16
jo
add
add
jb
outsb
push
outsl
inc
insb
imul
inc
gs
imul
inc
js
inc
js
add
inc
jb
imul
insb
add
add
outsb
push
jb
outsb
je
jb
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
gs
insb
inc
js
arpl
gs
add
add
addr16
jo
outsb
push
je
jb
addr16
outsb
dec
dec
outsl
arpl
jns
gs
add
pop
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
dec
outsb
je
jb
gs
popa
outsb
outsl
outsb
imul
push
jb
inc
add
add
je
popa
jbe
inc
imul
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
int
outsl
std
push
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
xor
loop
insb
mov
imul
pop
in
cltd
mov
mov
cmc
in
lret
mov
cmpsl
cmp
fcoml
rcr
outsb
mov
cli
add
aam
jns
lods
adc
nop
fisttps
sti
leave
enter
mov
dec
popf
hlt
stos
and
dec
addl
js
xchg
pop
popl
test
popa
jns
push
cmp
xlat
push
outsl
sti
mov
out
imul
in
xchg
mov
dec
push
stos
and
mov
adc
pop
xchg
sbb
jno
or
push
and
insl
jl
divl
jge
int3
pop
mov
push
inc
out
fldl
pop
inc
nop
sub
lcall
out
loopne
cld
rolb
mov
outsb
pushf
jl
inc
dec
leave
mov
and
jl
nop
int
sbb
ret
jne
out
sbb
mov
inc
and
push
mov
pop
dec
mov
sub
xchg
jp
push
not
or
lcall
addr16
lods
and
cmp
xor
cmc
cmp
div
cld
lahf
inc
je
xchg
mov
pop
mov
dec
std
xchg
aas
cmp
lods
sahf
dec
jmp
add
pop
mov
xor
stos
mov
outsb
sub
sub
jle
sbb
out
imul
inc
or
repz
cmpsl
xchg
adc
mov
ror
jge
mov
dec
aaa
scas
pop
inc
mov
jno
std
dec
cs
imul
pushf
std
stos
mov
cmp
cmp
lock
pop
mov
test
jecxz
jns
ret
lods
add
test
push
and
mov
movl
in
sbb
in
mov
cmp
cmpsl
or
push
xchg
into
je
leave
mov
subb
rcrl
push
sbb
dec
es
outsl
push
or
mov
fildl
sub
inc
cwtl
jnp
jecxz
mov
testb
mov
cmpsl
fs
jne
dec
stos
cld
call
negl
sbb
and
stos
js
loope
xchg
outsl
out
lret
jle
xchg
scas
stc
pusha
sub
ja
pop
cmp
ja
mov
sub
arpl
sbb
inc
xchg
dec
adc
fsubs
shlb
dec
sub
repz
cld
xchg
push
push
ret
push
jne
sarl
loopne
cmpsl
dec
and
inc
enter
addr16
cmp
jge
lods
cmp
int3
jns
cli
shll
popa
dec
sub
inc
xchg
inc
xor
ja
fistps
insb
bound
leave
cltd
fstps
or
adc
scas
sbb
inc
scas
divl
push
xchg
mov
test
cmp
test
xor
cli
inc
lahf
icebp
push
mov
in
lods
sarl
and
jns
sub
and
add
inc
mov
or
pop
std
aas
repz
cltd
pushl
stc
das
test
pop
bound
xor
jl
out
fs
in
cmp
xchg
ljmp
xor
mov
mov
push
mov
mov
fmul
imul
out
mov
or
cmp
rolb
or
aam
loope
cmp
adc
stos
adc
mov
fsubrl
cmp
or
out
xchg
imulb
mov
mov
cmp
loope
mov
lret
add
int3
or
je
adc
imul
lret
stos
inc
pop
cmp
insl
jo
jmp
sbb
inc
ljmp
xor
jg
push
adc
inc
add
inc
addb
mov
dec
dec
or
adc
xchg
push
pop
shl
jb
fdiv
out
adc
sub
clc
and
inc
pop
dec
jp
jne
loope
cmp
push
stos
lock
cmp
and
pop
mov
mov
sbb
test
lcall
or
ds
int3
mov
aaa
shrl
loope
cs
ret
sub
paddusb
push
ss
xchg
cmc
inc
or
aad
inc
fcomi
jmp
jno
xor
mov
push
mov
sbb
push
mov
xchg
xor
das
mov
push
ja
pop
jbe
dec
into
mov
xor
jg
push
mov
sahf
jae
inc
dec
mov
or
rcrb
push
mov
inc
or
xchg
inc
mov
sub
cld
dec
mov
sbb
xor
or
sbb
mov
lcall
jb
loope
xchg
xchg
xor
push
adc
mov
pop
fwait
test
push
out
or
xchg
daa
sbbb
xchg
out
xchg
stc
pop
test
add
mov
inc
xchg
sub
jge
push
aad
les
fdiv
cltd
or
lahf
loop
mov
sub
sbb
fs
inc
or
or
test
lahf
and
shrl
ds
loop
call
add
mov
lds
dec
cwtl
out
sbb
jns
cld
pop
jbe
mov
test
and
pop
outsl
sbb
xor
jo
popf
jns
mov
jle
push
xor
inc
fistl
arpl
ljmp
icebp
fistpll
aad
mov
dec
pop
fsubs
cltd
movb
jb
das
push
mov
adcb
sub
std
movsb
enter
xor
dec
ficoms
cmp
sti
xor
movsb
xor
idivl
jno
insb
sub
add
push
rcll
add
push
popf
xchg
mov
call
sub
pop
fstps
jmp
loop
cli
push
lods
cltd
fs
push
lahf
outsl
add
mov
test
xor
xchg
jns
lret
mov
add
movsb
pop
in
addr16
inc
cmp
ja
xor
adc
mov
pusha
das
mov
pop
push
popf
bound
xchg
fdivl
in
sub
mov
inc
mov
test
aas
imul
imul
sti
xchg
jae
in
push
push
std
push
fidivs
in
cmpsb
fildll
shll
pop
test
or
mov
pop
rcrl
or
or
or
sarb
ret
in
and
lds
add
jle
fwait
push
sbb
pop
inc
pop
test
add
jmp
ret
je
jns
je
add
xchg
or
cmpsb
jo
cmp
fsubrs
and
iret
int
sbb
pop
dec
popl
outsb
add
add
orb
mov
sub
test
stos
sbb
xchg
jg
fcoms
popa
mov
xchg
lahf
icebp
mov
loope
sti
add
mov
popf
inc
lret
cmp
cmp
add
and
int3
push
pushf
es
roll
scas
pop
or
lds
jl
xor
push
adc
scas
punpcklbw
add
int3
xchg
dec
xor
push
add
jmp
dec
push
mov
xchg
sbb
cmpsl
fneni(8087
inc
hlt
imull
push
xor
ret
sbbl
jmp
jne
xor
ss
sbb
pop
into
jmp
sub
sbb
jle
cmc
pusha
dec
pop
repnz
movsb
mov
inc
adc
ljmp
ljmp
push
out
xor
cmp
loope
fcoms
imul
scas
inc
jmp
leave
inc
iret
dec
add
xchg
push
jp
mov
mov
in
sbb
gs
cwtl
out
mov
pop
cmp
mov
mov
std
jae
sarl
adc
sbbb
insb
push
cmpb
mov
push
cmpsl
loop
push
cmp
dec
inc
dec
and
push
cmp
mov
imul
mov
mov
fisubs
test
mov
sub
test
add
add
pop
or
mov
sbb
sub
mov
adc
mov
push
pop
in
sub
pop
pop
iret
daa
jnp
dec
mov
aaa
mov
fwait
mov
repnz
fisubrs
shl
je
xchg
xchg
jnp
and
pushf
fisttpl
xor
and
xchg
es
movsl
pop
mov
mov
push
incb
pop
lock
sbb
jg
insb
sbb
pop
jne
xchg
sbb
push
sub
adc
lods
repz
jns
in
ret
into
xlat
jg
inc
fstps
xchg
lods
jecxz
cli
mov
test
cmp
push
in
adc
inc
mov
scas
add
fisttpl
pop
cmp
pop
fmuls
xorl
scas
push
js
adc
int
es
int
cmpsb
test
pushf
ffreep
movsb
xor
stc
ljmp
jmp
mov
xchg
fisttpll
mov
add
lds
and
and
xchg
pushf
aam
and
aam
outsb
push
add
push
arpl
inc
pop
std
movsb
pop
es
xchg
mov
in
test
adc
dec
filds
fisttpll
movsl
sub
mov
add
jle
or
sbb
xchg
add
jb
adc
dec
dec
jg
call
cwtl
push
aad
fcmovnb
dec
es
mov
mov
xchg
sahf
mov
stc
push
out
xchg
sub
test
jae
imul
jmp
and
sbb
mov
ficoms
cmpsb
test
sbb
out
push
faddp
push
lahf
add
loop
adc
addr16
sbb
add
imul
xor
fcmovne
cmp
mov
cmp
add
pusha
cs
and
mov
fwait
cmpsb
pop
xchg
push
xor
add
fstpl
enter
loop
jmp
mov
sub
dec
js
outsb
dec
in
or
jnp
pop
lods
shl
mov
subb
aam
xor
pop
inc
pop
test
inc
outsb
sbb
cwtl
out
dec
jb
std
cmp
xchg
fcmovbe
outsl
ljmp
xchg
fmuls
fwait
dec
lods
xchg
daa
adc
inc
pop
in
gs
iret
imul
jne
sti
push
divb
dec
movsb
or
aad
orl
or
in
xchg
fbstp
inc
xchg
inc
xchg
in
push
ret
ss
fstpt
dec
add
push
cmp
imul
add
jl
and
test
and
roll
les
cmpsb
cltd
add
xor
hlt
adc
inc
sub
mov
mov
and
inc
push
mov
sub
adc
and
ljmp
outsl
mov
xchg
pop
push
xchg
mov
lds
mov
fidivl
fsubl
test
mov
lock
xlat
jmp
dec
xor
inc
dec
divb
mov
and
pop
jae
pop
in
mov
push
lret
cmp
iret
pop
lahf
rorl
pop
sbbl
lds
gs
cmp
cmpsb
sub
push
and
icebp
push
data16
test
push
in
daa
ss
movsl
loop
in
test
sarl
aam
imul
nop
xchg
lea
or
sti
std
cmp
fcomps
pop
out
or
lahf
in
pushf
sbb
in
inc
negb
and
cmp
and
mov
jne
ljmp
aaa
fwait
adc
pushf
dec
cltd
inc
add
mov
cltd
jle
aas
lea
popa
adc
das
jg
mov
fstps
fcompl
lret
fcoms
or
fs
mov
mov
fbstp
inc
mov
pop
xchg
mov
and
adc
pop
mov
lret
sar
popf
sub
fnstcw
adc
frstor
push
push
xchg
cld
or
pop
jne
icebp
cmp
into
add
or
or
push
sub
or
dec
in
imul
out
add
imul
loop
dec
and
lods
mov
rolb
xchg
shrl
loopne
out
mov
mov
das
mov
mov
loop
or
icebp
mov
cmp
cli
sub
push
ficoms
jge
lods
jmp
ljmp
sbb
adc
mov
clc
adc
popa
add
jnp
pop
addr16
lahf
mov
sub
jae
fdivrs
sbb
hlt
ficomps
das
jge
jo
stos
js
add
and
fmuls
int3
shll
sbb
xlat
push
mov
mov
int3
xor
inc
enter
pushl
outsl
jns
pop
inc
push
lock
or
lock
dec
cmpsb
push
mov
mov
and
mov
jecxz
xchg
mov
in
imul
cmp
cmp
stos
shlb
leave
dec
adc
lret
jg
sub
jmp
rorb
incl
stc
icebp
fistpl
pop
add
push
fucomp
mov
pop
out
fwait
sbb
popf
push
lcall
shlb
shlb
fimuls
jne
gs
inc
jg
bound
inc
rcll
sbb
sbb
inc
leave
fldl
sahf
movsb
and
inc
rclb
adc
in
stc
test
lds
inc
imul
aad
inc
mov
mov
fldt
dec
mov
test
call
jl
out
jmp
xlat
out
movmskps
insl
or
fldenv
stos
cld
ljmp
sbb
and
gs
sahf
xchg
lods
pop
test
cmp
push
sbb
leave
xor
pop
fsubrs
mov
dec
pop
mov
sarl
sub
xchg
lock
xor
das
pop
fsubs
enter
sbb
rolb
mov
add
ret
std
lds
jb
pop
xor
cmp
adc
ficoms
add
xor
sub
ss
inc
into
mov
subl
loop
arpl
xchg
push
sub
jmp
addr16
lcall
das
bound
mov
movsl
pop
mov
xchg
xchg
sub
xchg
cmpl
leave
xlat
push
push
jbe
nop
sub
sbb
jl
push
roll
adc
jnp
nop
out
out
mov
imull
sbb
mov
sbb
and
in
jno
and
jge
xor
fwait
xor
mov
cmp
sub
push
idivl
add
imull
mov
pop
jge
push
xchg
sub
lret
push
les
inc
out
sarl
addl
repnz
int
repz
test
cmp
outsb
mov
jne
add
inc
mov
repnz
cs
adc
dec
test
lret
xchg
out
xchg
aaa
mov
loopne
cmp
int3
nop
sub
cmp
add
std
push
dec
adc
lds
jne
cmp
mov
sub
hlt
adc
std
test
sub
aam
inc
fists
push
xlat
aas
mov
xchg
int
sub
jne
movsb
or
or
cmp
shl
fisttpl
popa
mov
and
sbb
push
dec
and
dec
add
mov
dec
mov
inc
pusha
in
nop
ss
out
inc
jae
mov
loope
mov
fldcw
loope
js
fmul
mov
test
xchg
or
aad
or
pop
test
cmp
ss
loop
inc
cs
pop
out
insl
out
sub
into
pop
inc
inc
fbstp
repz
pop
nopl
std
sub
inc
aad
jns
cmpb
sub
sub
and
cmpsb
fidivrl
adc
inc
push
jp
xor
mov
pushf
sub
movsl
fsubs
xchg
call
add
mov
or
and
jns
lret
aad
mov
mov
into
into
addr16
sub
push
popa
sbb
dec
imul
in
xchg
or
movsl
xchg
roll
xor
int3
sub
pop
and
mov
loope
leave
push
ja
xor
jg
cli
inc
push
std
popa
jp
add
cmp
rclb
popa
test
aaa
xor
cmpsb
aam
push
mov
cmp
nop
push
je
pop
mov
movsb
cmpsb
push
jbe
inc
insb
push
xchg
xchg
int
pop
ss
movsl
pop
sub
fprem
lret
aam
ja
das
cmpsl
arpl
das
adc
cld
fucom
loop
les
jle
test
incb
repz
ljmp
lahf
ljmp
lock
mov
test
gs
or
xchg
mov
cmpsl
dec
push
pop
cmp
hlt
adc
sahf
roll
into
lds
ret
dec
lret
adc
mov
icebp
in
mov
xlat
add
clc
pop
les
inc
mov
addr16
xchg
xchg
popf
jmp
lret
cmp
das
pop
scas
mov
insb
inc
sahf
xchg
cwtl
mov
mov
adcl
out
sbb
pop
shll
mov
mov
push
push
inc
or
cmp
jg
mov
insl
cmp
ss
leave
push
inc
movsb
lahf
add
jb
pop
push
cmpsl
cltd
and
mov
cmp
pop
jecxz
mov
push
sub
sbb
adcb
jecxz
enter
insl
pop
cmp
jge
fsubrs
inc
fsubs
or
push
js
aas
sbb
dec
add
mov
pusha
rcrl
push
push
movsb
dec
fldcw
push
rorl
mov
jge
icebp
mov
rorl
jmp
mov
dec
cwtl
sti
orl
jbe
and
lahf
cmc
iret
xchg
fwait
push
sti
adc
or
test
mov
inc
sbb
and
jg
push
push
loopne
sub
pop
xor
push
pop
scas
inc
pop
cmp
es
les
xchg
sahf
test
test
mov
fmull
or
jnp
mov
and
pop
inc
mov
insl
rcrl
in
outsb
stos
inc
in
dec
dec
hlt
cmp
ret
jae
ret
xchg
add
inc
movsl
ret
insl
push
mov
or
test
outsl
lock
shll
loopnew
pop
ss
jnp
sti
and
inc
arpl
fisubrl
adc
cmpsb
lret
sahf
adc
mov
fwait
xor
repnz
dec
mov
popa
cwtl
mov
inc
outsb
lea
lret
inc
fsubr
fs
call
test
rolb
inc
add
add
fwait
push
loopne
inc
dec
adc
mov
mov
data16
pusha
fiaddl
out
leave
xchg
aam
inc
lods
lods
loop
mov
jae
pusha
xor
cmp
cli
pop
outsb
xchg
stos
jae
test
or
sub
fisubs
mov
pop
ss
cmpsl
jmp
push
cwtl
dec
stc
push
cmp
into
sbb
int
pop
cmpsb
outsl
pushf
movsl
jno
call
lahf
mov
mov
aas
jmp
test
mov
in
imul
outsl
cmc
adc
sub
lock
dec
jns
adc
repnz
fisubs
xchg
cld
clc
je
in
data16
dec
arpl
lahf
dec
fsubrl
pushf
push
adcb
dec
insl
mov
sbb
das
jno
mov
addr16
ja
mov
mov
dec
outsb
outsl
sub
inc
nop
push
enter
jne
repnz
xchg
inc
or
adc
dec
jl
pop
mov
arpl
and
mov
and
ret
pop
pop
sub
push
stc
xchg
cmpsb
fisubrl
mov
sbb
jae
rorb
dec
dec
fcoms
outsb
adc
adc
and
add
shrb
push
adc
xor
inc
idivb
sahf
xor
or
loope
js
lock
pop
and
sub
pop
fnstenv
cmp
gs
test
test
lcall
jbe
aam
push
test
xor
cmpsb
mov
inc
roll
insb
mov
cmp
sbb
int3
jmp
cmpsb
lahf
jl
mov
mov
clc
pop
sub
les
das
fwait
idivl
add
jne
gs
jl
orb
inc
stc
iret
loop
call
cltd
into
lods
leave
or
shrb
adc
pushf
xchg
inc
lods
add
lods
push
or
push
cwtl
jne
mov
mov
repz
mov
in
add
xlat
push
sub
mov
and
lods
movsb
xor
movsl
pop
lock
mov
jns
cli
dec
and
adc
xchg
sbbb
fiaddl
cld
stos
pop
sti
cmp
dec
mov
inc
adc
push
sbb
mov
cltd
in
xor
mov
push
mov
ja
pop
mov
jecxz
mov
pop
nop
xchg
fs
loopne
std
jp
mov
lods
xchg
or
sbb
dec
and
iret
cwtl
adcb
mov
inc
sub
push
mov
pop
inc
xor
cld
orl
cmc
adc
jp
mov
cwtl
cmp
sbbl
nop
mov
mov
aas
sbb
push
adc
jge
pop
test
hlt
daa
push
jle
call
mul
inc
jg
xor
stos
push
xchg
mov
push
dec
pop
adc
mov
push
xchg
or
xchg
andl
and
adc
pushf
jb
xchg
mov
mov
cmp
shrl
xchg
leave
mov
stc
mov
outsb
pusha
pop
inc
shll
test
hlt
mov
int3
mov
das
scas
dec
ljmp
insb
dec
lahf
ror
push
mov
xor
jge
sub
mov
adc
stos
dec
cltd
jno
insl
cmp
dec
mov
xor
mov
and
adc
inc
add
and
shll
std
stos
mov
imul
mov
ds
sub
adc
dec
jno
inc
ds
in
bound
and
fmuls
xrelease
pusha
inc
pop
iret
push
xor
mov
nop
or
pop
push
adc
int
jb
in
stos
mov
sub
ss
aad
ljmp
xchg
dec
gs
mov
push
icebp
pop
sbb
rorb
mov
add
mov
les
ret
call
mov
adc
int
sub
mov
leave
pop
std
lret
xor
inc
lahf
ja
ret
adc
scas
sub
pop
sub
ss
pushl
mov
sub
lahf
pop
mov
xchg
mov
cmp
cmpsb
rcr
xchg
jecxz
loop
jmp
mov
sti
adc
push
loopne
sub
outsl
psubusb
fldt
push
hlt
fistl
scas
std
int
cmp
and
ss
dec
test
pop
pcmpeqw
add
xchg
scas
gs
sbb
and
xor
add
dec
in
push
mov
mov
fs
mov
xor
shr
imul
adc
jmp
jle
out
pop
dec
cwtl
or
lds
mov
dec
push
in
into
or
or
jmp
or
cwtl
sbb
push
rcll
adc
xchg
add
mov
int
xor
mov
sbb
idiv
xorl
jecxz
or
xor
dec
imul
adc
adc
cwtl
jecxz
mov
es
scas
mov
dec
cmp
lahf
pusha
cmc
lcall
add
mov
cmc
xor
lahf
aas
dec
ds
lods
sub
mov
out
stos
xchg
addr16
test
push
mov
shr
push
fcomip
in
push
cmc
cmp
sbb
shrl
ud0
push
adc
pop
and
cmpsl
lea
and
in
push
ss
pop
sub
test
xor
or
xchg
and
lods
jae
ss
in
push
pop
mov
addr16
pop
pop
arpl
mov
sbb
or
mov
hlt
std
stos
leave
insb
mov
js
rclb
aad
adc
xchg
dec
lea
jp
push
cs
leave
or
scas
fcmovnbe
sbb
cmp
mov
ret
ljmp
mov
adc
mov
pause
add
nop
pop
push
mov
add
sahf
sbb
or
popl
in
mov
test
sub
xorb
jecxz
aad
js,pn
out
int
mov
cmpsl
xor
lock
mov
daa
or
inc
push
mov
outsb
out
mov
inc
cwtl
dec
std
bound
inc
aad
xor
or
sti
inc
mov
shll
push
sbb
mov
xlat
outsb
lret
sbb
dec
in
or
or
adc
cmp
jge
rcrb
mov
add
jecxz
inc
mov
dec
mov
mov
dec
lock
cmp
test
repnz
dec
jg
movsl
insl
call
xor
clc
or
test
testl
pushf
test
test
cwtl
inc
fdivrp
popf
and
sub
or
stos
testb
stos
aaa
mov
aam
pop
mov
js
les
xchg
roll
arpl
idivb
mov
mov
jmp
and
cld
leavew
sub
or
xlat
mov
cwtl
cmp
ja
xor
push
fisttps
mov
inc
xlat
mov
test
mov
ja
jb
xor
out
out
outsb
jp
fistpll
add
divl
rol
cltd
arpl
mov
and
data16
add
bound
mov
mov
fs
and
mov
call
dec
fwait
icebp
sbb
add
movsb
jae
repz
nop
xchg
pop
lea
and
flds
cmp
add
dec
pop
jge
lea
pop
or
movsl
push
mov
mov
adcb
jp
cmp
xor
xor
cmpsb
shll
lds
sub
stc
das
sub
pop
insb
xchg
add
pushl
in
jl
sbb
repnz
decl
xor
out
pushl
push
xor
bound
lret
mov
push
mov
pushf
es
mov
mov
jbe
sub
inc
pop
pushf
mov
xchg
and
xchg
mov
insb
dec
cmpsb
xchg
popf
enter
mov
xor
or
lcall
arpl
inc
aas
adc
jp
daa
lea
jae
pop
aad
aad
mov
add
xor
jg
dec
ljmp
test
or
aad
add
adc
xchg
fistps
fbstp
pop
sub
scas
dec
xchg
sar
push
stc
mov
xchg
lret
mov
arpl
or
adc
mov
mov
sub
mov
test
call
insb
xlat
roll
xchg
jno
xchg
adcb
mov
icebp
in
test
ret
test
mov
dec
push
cs
lds
iret
aam
loopne
jb
push
dec
jecxz
push
hlt
clc
push
sbb
in
orl
cli
xor
mov
jno
les
dec
add
popf
sub
jb
das
xor
pop
aad
sahf
ds
test
cli
stos
mov
lcall
sbb
ljmp
iret
xchg
mov
push
cmp
loop
inc
push
adc
mov
out
jmp
mov
jbe
mov
rorl
popf
mov
push
add
movsb
mov
mov
jne
xchg
inc
lahf
pop
cmp
add
push
xchg
popf
iret
rcr
scas
cltd
jnp
mov
sub
jp
insl
sub
les
cmp
cmpsl
mov
lcall
lahf
pop
stos
or
add
cld
shlb
cmp
mov
mov
pop
xor
xor
or
ds
iret
inc
insb
jb
cmp
std
aas
out
jg
icebp
pop
icebp
out
cwtl
jmp
pop
int3
sbb
add
add
mov
inc
lock
cmp
xlat
push
in
cs
push
add
pop
sbb
cmp
movsl
and
cmc
fdiv
in
ror
xchg
sbb
xchg
jmp
movsb
push
jmp
push
pop
dec
mov
sbb
sbb
ret
cmc
dec
pop
lcall
fnstcw
adc
jle
jge
inc
cmp
xlat
outsl
sub
mov
mov
mov
sahf
fdivl
sbb
mov
sub
out
rorb
cmp
pop
jb
insl
jns
dec
lahf
xchg
out
inc
jno
mov
in
cs
sub
jb
mov
into
aam
scas
loop
push
or
scas
inc
jo
jae
popf
adc
movsb
ret
jecxz
cmp
add
xlat
stos
xchg
xlat
mov
dec
stos
int3
out
loop
lea
sbb
or
cmp
fwait
inc
scas
shrl
stc
pop
mov
fbstp
push
lock
cmp
lret
sub
cmp
xchg
aad
roll
xor
push
dec
mov
repz
jecxz
das
adc
xor
pop
std
fdiv
fldenv
outsl
inc
sti
test
xor
push
out
clc
mov
call
int3
cs
scas
pop
popf
out
mov
xchg
imul
jb
outsl
fwait
into
sub
and
lods
pop
fwait
insb
lock
dec
lds
adc
hlt
add
lock
loope
or
mov
int
xchg
jge
iret
nop
dec
mov
shll
call
cwtl
jb
xlat
xchg
add
sub
or
sbb
inc
or
loopne
lahf
xor
xchg
test
lods
pop
lock
dec
pop
and
xor
mov
bound
mov
jb
cmp
cmpsb
xor
cmpsb
xor
lcall
dec
mov
jge
pop
dec
cmpb
push
push
std
jmp
std
or
sbb
pushf
push
or
in
cmpsb
xchg
jbe
rcrb
fcoml
dec
xor
pop
push
sbb
data16
ss
outsb
stc
stc
scas
cmp
rcll
test
xor
push
dec
fdivrl
pop
sarw
mov
push
sbb
addr16
shrb
sub
push
leave
cmpsl
or
mov
push
jo
sub
pop
xchg
inc
cs
ljmp
rorb
cmp
mov
or
adc
mov
jae
push
pusha
test
cmp
inc
arpl
popa
addr16
pushf
xor
mov
xor
pop
pusha
popf
sarl
xchg
inc
loope
fldt
call
shll
js
mov
andb
push
outsb
aas
mov
jne
loope
push
lret
mov
test
xchg
cs
xchg
push
sar
sub
stos
sarl
jle
test
mov
mov
adc
out
dec
jg
jmp
stos
or
ret
sti
jge
push
and
adc
fiaddl
scas
ret
xchg
pop
inc
scas
mov
fnsave
sbb
fcompl
xchg
inc
push
push
and
and
imul
rcrb
pushf
or
push
push
fldenv
pop
fldenv
into
inc
push
mov
adc
inc
adc
jge
mov
dec
mov
scas
lret
ret
vphaddbd
jge
mov
dec
fs
je
pop
cmp
loope
jmp
cwtl
dec
mov
sub
scas
xor
ss
mov
scas
aaa
jmp
jb
jae
adcb
jns
mov
mov
xor
cmp
jb
scas
cmc
dec
jno
imull
iret
xchg
stc
mov
pop
popl
icebp
pushw
test
and
mov
pop
and
xchg
mov
jp
push
call
xor
cmc
jno
pop
js
pop
pop
mov
pusha
xor
cltd
scas
cltd
mulps
and
jmp
or
int
jns
mov
pop
or
push
sbb
or
sbb
std
mov
ja
addr16
pop
or
dec
les
xlat
outsl
das
xchg
push
cmp
cwtl
test
ja
dec
shlb
lds
bound
mov
arpl
insb
ss
cli
ret
sbb
jecxz
in
jb
pop
icebp
lcall
enter
jns
rcl
flds
lcall
mov
mov
fadds
push
ljmp
fldenv
ss
imul
mov
das
ja
sub
iret
cmp
cmp
std
cmpb
arpl
bound
shll
fadds
stc
xchg
lods
adc
mov
aam
lds
push
repnz
sahf
lahf
sub
xor
imul
rcrl
xor
ja
loopne
popf
mov
std
pop
sub
rcr
shl
sub
stos
cmpsb
test
lock
push
addr16
or
decl
add
cld
pop
lret
icebp
push
iret
cmp
mov
add
sarl
pop
xchg
notl
sahf
pushf
das
imul
out
pop
xchg
ja
mov
push
jp
scas
jl
dec
push
imul
push
mov
pop
push
jecxz
sti
fsubrl
sbb
add
stc
aaa
cmpsb
dec
jp
lret
pushl
data16
popf
adc
out
sbb
add
pop
mov
sbb
and
vcvtsi2ssl
movl
addl
mov
jno
sub
jb
jns
jns
or
or
sbb
mov
inc
push
fwait
leave
lea
int
shl
xor
dec
jne
xor
lcall
inc
lret
cmpsl
gs
sub
mov
xchg
ror
psubsw
daa
mov
mov
rcl
aam
lret
push
mov
push
outsl
out
jb
xor
xchg
popa
enter
cmp
inc
pop
lret
pop
mov
mov
imul
adc
mov
imul
and
adc
mov
jns
hlt
mov
cld
adc
sub
stc
in
inc
jae
ljmp
push
mov
test
fwait
test
adc
mov
push
xchg
dec
lods
pop
sbb
adc
jg
pop
lcall
fistps
scas
fcomp
out
xor
lock
dec
mov
les
xor
pop
lret
sahf
sub
iret
fdivrl
imul
cs
shrb
push
bswap
es
xor
dec
dec
rcr
jns
lret
dec
dec
jae
das
rorl
xor
fninit
out
cmp
pushf
nop
mov
cltd
test
in
in
and
mov
pop
xor
sbb
jge
dec
cwtl
or
outsb
sub
iret
xor
and
fsubp
jle
fbstp
dec
stos
roll
sub
out
repnz
sahf
or
cmp
fwait
mov
adc
cwtl
sbb
xor
daa
es
push
sub
push
xchg
aaa
pushf
or
icebp
stc
mov
pop
repz
jbe
out
inc
mov
xchg
mov
cs
ret
es
ret
xchg
cmp
pop
in
imull
add
cli
roll
jp
mov
xchg
test
dec
mov
mov
iret
pop
rol
dec
rclb
sbb
cmp
or
jb
add
insb
pop
leave
mov
dec
stos
sub
pop
pop
lds
mov
xchg
repz
dec
and
xchg
popa
xchg
icebp
aas
aaa
inc
pop
mov
mov
dec
rclb
adc
push
xchg
adc
out
addr16
mov
loope
inc
fisubrl
arpl
mov
push
pop
sub
movsb
ds
mov
add
mov
sbb
ret
lret
fneni(8087
cmp
lret
push
icebp
test
mov
pop
mov
loopne
stos
dec
xchg
insl
jno
repnz
and
les
les
hlt
into
xchg
pop
ss
sub
jns
cmp
dec
sub
and
daa
mov
pusha
sbb
cmp
sub
mov
gs
pusha
ds
clc
jno
xor
cs
fistpl
mov
imul
sub
push
fwait
js
ret
adc
std
repz
xor
xor
xlat
mov
cwtl
in
or
std
add
mov
outsl
loop
jmp
out
mov
mov
loopne
out
cmp
adc
sub
jle
pop
outsb
rol
ret
clc
mov
xchg
dec
loopne
fs
in
fldt
push
sti
repz
add
and
dec
mov
cmp
xchg
xchg
xchg
or
mov
pop
sub
pop
push
dec
daa
ds
fisubrs
mov
adc
addr16
mov
leave
xchg
or
push
push
sub
pop
in
dec
xlat
inc
imul
xlat
icebp
fdivr
pop
mov
fidivs
jle
ds
mov
das
mov
stc
sub
pop
inc
inc
jae
push
or
movsb
ret
bound
pushf
adc
outsb
fnstsw
outsb
add
pop
mov
inc
sub
or
cmp
add
pop
nop
xchg
es
aaa
sbb
sub
add
xchg
dec
fs
inc
cs
lods
push
lds
dec
outsl
lcall
lret
pop
cmpsb
cmpsb
scas
adc
in
jge
lock
and
mov
add
xor
adc
or
xchg
lods
fcom
mov
icebp
xor
pop
dec
pop
xor
je
and
mov
push
add
and
outsl
mov
push
scas
add
xchg
addr16
pop
repnz
in
test
and
andb
ljmp
jp
inc
xchg
sbb
mov
cmp
js
dec
pop
pop
jg
call
inc
mov
sub
shlb
mov
cmp
mov
mov
mov
cmp
pop
jb
add
aaa
lds
push
sub
mov
shlb
pop
push
in
movsl
and
lcall
lret
or
mov
fildll
cld
xor
mov
cmp
xlat
rolb
adc
sub
push
and
pushf
xor
mov
pop
sbb
pusha
pop
shll
xor
mov
sub
adc
aaa
inc
add
fwait
movsb
mov
das
imul
call
test
sbb
cmc
push
jbe
add
xchg
dec
and
jmp
int3
cld
xor
shll
mov
mov
pop
mov
inc
mov
dec
scas
sub
jns
lcall
mov
sbb
mov
lods
xor
sahf
cli
bound
add
insb
push
mov
cmp
xchg
aam
jecxz
inc
add
cwtl
pop
dec
mov
inc
sub
mov
sub
fidivrl
in
xchg
in
dec
outsl
lock
mov
repz
mov
add
mov
sub
adc
and
data16
inc
pushf
fwait
popf
movsb
or
add
jne
sti
gs
test
jl
adcl
cmc
gs
das
mov
rcrb
adc
in
mov
lret
mov
lods
je
fisttpl
xor
push
adc
push
ss
in
sub
pop
stos
mov
mov
xor
xchg
sub
movswl
call
insl
jp
shll
insl
test
dec
cltd
ja
cmp
pop
test
rcl
fcoml
icebp
movsb
mov
fisttpll
lret
decl
arpl
mov
xchg
or
lcall
out
mov
inc
inc
or
lock
movsl
push
pop
daa
and
gs
sbb
sub
xchg
dec
xor
inc
nop
push
pop
mul
push
mov
imul
xor
pop
and
mov
sub
xchg
dec
xchg
and
pop
daa
dec
call
jmp
out
mov
es
movsl
and
int
lret
das
dec
dec
icebp
pop
cwtl
test
pop
cmp
ss
stos
jmp
repnz
dec
stc
jmp
or
mov
loope
push
in
pusha
test
je
xchg
or
cmp
daa
repz
imull
fnstcw
cmc
icebp
cs
shll
test
and
lcall
lahf
ss
in
mov
out
inc
shr
jo
inc
sbbb
fsubs
in
movsb
scas
jge
fistl
or
repnz
cmpxchg
jb
pop
test
lahf
and
sarb
out
xor
xor
inc
sub
inc
xchg
lea
aaa
cwtl
mov
in
rcrb
addr16
loope
aam
mov
ja
ss
jno
mov
jmp
xlat
lea
fs
or
mov
or
add
dec
mov
push
aaa
xchg
push
pop
stos
cmp
lods
negb
dec
or
inc
jnp
sbb
shrl
es
dec
or
popf
jecxz
sub
mov
lods
ljmp
daa
fistpll
cmp
sbbl
jo
fcmovnbe
repz
movb
adc
iret
lahf
xor
sub
test
and
mov
sbb
popa
dec
pop
mov
cwtl
inc
pushf
and
insl
xchg
cs
out
call
je
fimuls
add
inc
lea
inc
mov
pop
xchg
aaa
adc
dec
daa
cmc
daa
jne
xor
mov
inc
imul
cmpsl
cmpsb
cmp
jmp
aas
clc
push
das
push
lods
cmp
cltd
push
xchg
xchg
test
mov
dec
into
xorl
inc
scas
flds
jl
mov
out
call
jnp
rolb
and
fisttpll
push
sub
jle
inc
fildl
push
lret
push
or
out
mov
sub
mov
xchg
cmp
ror
pop
aas
mov
insl
lahf
adc
lods
roll
jb
aad
das
jb
xor
dec
mov
adcl
and
shll
pop
into
xchg
push
inc
out
adc
subl
lds
jge
dec
push
push
test
pop
add
ja
adc
rclb
jo
jae
xor
call
mov
mov
inc
aad
mov
xor
clc
add
pusha
pushf
pop
arpl
mov
jl
in
stos
jecxz
xchg
adc
mov
xchg
les
rcll
sbb
lock
mov
xchg
notl
or
push
pop
cmp
ja
or
outsb
push
add
lcall
dec
push
ss
jns
inc
sub
rcl
push
inc
stos
repz
jbe,pn
jae
out
scas
dec
cmp
in
leave
adc
mov
imul
pop
iret
sbb
adc
jns
ljmp
sbb
sbb
jg
fstpl
popf
xor
cwtl
lahf
push
mov
dec
ljmp
mov
int
test
out
add
mov
add
mov
inc
inc
imul
push
pop
mov
mov
loop
loop
dec
adc
jmp
adc
dec
ljmp
imul
cltd
dec
push
ret
pop
orb
addr16
cmpsl
and
cmp
mov
shl
aam
mov
rcrb
cmp
mov
cmp
mov
movsb
xorb
mov
adc
mov
pop
mov
pop
jae
or
out
mov
and
aad
inc
or
sub
test
inc
push
and
or
nop
dec
cwtl
cmp
jecxz
ss
mov
or
sub
fidivrl
cmp
clc
rcll
aam
push
ret
dec
mov
fiaddl
lea
push
inc
insl
add
es
or
test
in
mov
popf
xor
dec
jbe
scas
ret
aad
jo
sbb
mov
js
push
clc
sub
cmp
loopne
cli
ror
dec
or
repz
xor
lds
arpl
push
xchg
das
xor
int3
scas
mov
add
dec
xchg
lcall
pop
xor
int3
or
jno
movsl
aaa
gs
out
adc
addr16
leave
cs
cmp
sub
std
dec
jmp
or
mov
xchg
adc
push
mov
inc
lahf
adc
and
mov
dec
stos
xorl
fldl
jno
dec
jecxz
xor
lods
daa
scas
movsb
push
dec
int3
xchg
insl
insl
mov
push
sub
call
pop
mov
jge
lods
cmp
pop
push
add
jge
cmpsl
out
repnz
packssdw
outsl
xchg
xor
fldenv
sti
push
movhps
adc
mov
loope
and
fisttpl
jne
in
lods
mov
mov
sbb
jne
xchg
sbb
xchg
sbb
or
xchg
daa
add
mov
fs
das
mov
mov
sti
mov
lds
mov
aam
jle
jae
iret
jg
xor
pop
sahf
inc
outsl
mov
jb
xchg
insb
aad
lods
pop
bound
push
fidivs
loop
pushw
jmp
fidivrs
push
adc
pop
ja
lea
sbb
lret
pop
outsb
cmpsl
ja
adc
lret
cmp
lcall
scas
mov
mov
mov
push
xor
push
outsb
ljmp
in
ret
out
outsl
adc
rcrl
popf
ds
pop
push
mov
clc
decl
jns
in
mov
insl
in
hlt
sahf
inc
jmp
stos
leave
lret
mov
hlt
sub
add
call
inc
push
popf
subb
mov
pop
jmp
test
dec
dec
xchg
jns
ljmp
mov
mov
stos
fldt
and
repnz
push
leave
xor
loopne
ss
fs
mov
hlt
leave
js
push
mov
repz
cmpsb
hlt
ljmp
adc
subl
insl
repnz
jb
xchg
imul
dec
pop
repz
lods
or
mov
cld
cmp
mov
ljmp
lret
cmp
cli
jle
sbb
popf
sbb
xchg
es
cmpb
lret
into
xchg
ficoml
out
adc
mov
sub
test
pushf
xor
dec
sub
cmp
or
xchg
std
lods
das
fwait
into
mov
es
shr
lret
or
mov
aas
dec
js
pop
jecxz
and
imul
cltd
inc
div
dec
mov
jle
addl
xchg
pop
mov
mov
dec
imul
adc
subb
inc
dec
inc
test
jnp
cmp
outsl
js
adc
data16
mov
push
fdivrl
outsb
es
outsl
cmp
insl
ss
gs
std
rolb
lcall
scas
mov
test
pop
mov
movsb
adc
inc
mov
in
dec
jno
adc
mov
cmpsl
mov
push
lahf
push
jg
adc
jge
dec
jmp
push
inc
movsb
orl
imul
mov
iret
jbe
and
popf
push
jecxz
aas
pop
fcoms
ret
mov
testl
mov
popa
xor
sub
push
mov
lods
hlt
mov
push
insb
stos
sbb
mov
cmp
out
mov
pop
test
push
popa
push
dec
fld
sbb
stos
in
jo
arpl
lret
leave
mov
stc
pop
sub
ficompl
xchg
aam
pop
inc
lahf
sbb
stc
lods
adc
clc
fcmovu
and
enter
inc
or
pop
mov
aad
jl
shlb
in
orb
jb
fnstsw
jl
ret
test
scas
int
ds
and
dec
cmc
test
dec
sub
adc
sub
and
negl
push
mov
clc
push
imul
sub
sub
insl
xchg
scas
movsb
das
jb
popa
xorb
mov
mov
mov
jns
mov
push
out
or
mov
scas
and
mov
cwtl
jecxz
in
adc
pop
jae
pop
aam
jnp
or
mov
int
inc
fwait
or
jo
or
jns
inc
xchg
push
inc
cmp
cmpsl
mov
add
mov
jp
push
cmpxchg
mov
adc
and
dec
push
pop
inc
xor
rorb
or
mov
ds
push
and
movsb
out
orb
loopne
movsb
pop
add
or
xchg
ficompl
push
adc
adc
and
push
jl
pop
dec
outsl
push
subb
into
fildll
jg
insb
pop
nop
and
arpl
sub
repnz
inc
decb
jg
sub
push
ret
pop
in
jl
test
push
jle
scas
xchg
push
mov
ror
add
cmpsl
cwtl
pop
leave
aas
cmp
popa
xor
fxsave
cmp
jle
cwtl
inc
and
iret
stos
je
out
cmp
pop
arpl
push
adc
push
pop
dec
decb
in
lock
dec
add
xor
push
pop
jmp
add
sub
int3
arpl
arpl
mov
jae
push
fidivs
sub
dec
mov
subb
jge
cmp
mov
push
into
cli
addr16
push
and
adc
iret
lcall
push
mov
pop
jb
xlat
xor
js
lret
and
jmp
dec
mov
xlat
repnz
shrb
dec
shlb
daa
lods
push
push
in
jo
popf
xor
rcrb
mov
pusha
cmp
sti
ror
sub
mov
fisubrl
stos
dec
mov
or
clc
enter
int3
movsb
xor
fcompl
adc
faddp
cs
jno
int
sbb
imul
add
icebp
sub
and
ds
push
in
pop
jg
mov
and
mov
and
mov
clc
jne
jge
sbbb
clc
xchg
jecxz
add
fsubrs
mov
jnp
mov
aad
loopne
jbe
mov
dec
and
dec
adc
cmp
insl
jae
sbb
fs
cmpsb
daa
test
mov
clc
inc
cltd
mov
xchg
mov
into
mov
subl
pop
aas
cli
add
repz
add
dec
jo
pop
adc
xor
dec
sub
push
mov
and
dec
cltd
aaa
in
out
lret
jge
outsl
adc
sub
fisubl
sbb
insl
xor
outsl
pop
popf
push
mov
mov
and
fstl
mov
push
daa
lods
daa
mov
jbe
jne
push
sti
mov
sub
addr16
cld
les
shrb
gs
mov
adc
das
int
inc
sub
test
jnp
loop
in
adc
test
push
pushf
or
pop
sub
adcb
cmp
mov
jg
jo
push
orb
push
mov
xchg
outsl
xor
lahf
fdivl
jle
shll
cltd
jmp
ret
cltd
loope
adc
adc
fwait
test
int3
mov
push
imul
movsl
xchg
lea
cli
xor
push
rcll
icebp
cmp
out
iret
aas
lret
or
das
dec
das
push
sbb
sub
nop
insb
rclb
out
ret
repz
adc
int3
and
test
in
pop
test
fldl
and
sbbb
jbe
add
gs
xor
leave
jle
dec
push
pop
pop
fldenv
pop
aaa
movsb
ljmp
lret
cmp
push
dec
inc
pop
jne
sbb
inc
js
xor
js
push
cld
inc
mov
test
out
dec
adc
gs
cmp
pusha
mov
sub
ja
mov
insl
xchg
fisubrl
fsubs
mov
outsl
aaa
lock
lds
insl
push
movsl
cli
repnz
aad
ljmp
sub
subl
aaa
popf
pusha
repnz
pop
mov
call
push
mov
fiadds
ljmp
cld
stc
clc
jle
lret
jno
cmp
mov
out
andl
ret
popa
jo
int
dec
lods
pop
cmc
pop
out
xor
push
and
andb
jg
xor
sbb
aaa
pop
rolb
mov
xchg
test
ljmp
mov
hlt
mov
sub
testb
xor
iret
xchg
sbb
mov
inc
not
and
arpl
scas
jle
cmc
cwtl
pop
add
mov
test
add
cmpsb
sbb
dec
sbb
mov
loope
iret
fdivp
ja
lds
push
hlt
fisubrl
mov
sbb
jno
shll
sbb
and
sub
mov
sub
cmpsl
shll
add
push
rorl
sub
iret
fs
dec
sub
cmp
inc
fwait
cwtl
aam
loopne
cmc
mov
adcb
push
or
xchg
push
mov
js
inc
push
xor
mov
inc
leave
fdivs
out
fisttpll
jno
ds
jecxz
fstl
pop
xchg
sub
cld
out
ror
pop
mov
sbb
fucomip
iret
adc
pop
push
in
repz
fcoml
mov
movsb
xchg
xor
lds
sub
leave
data16
das
mov
aaa
jae
xchg
orl
or
stos
and
cmp
into
rclw
mov
decl
in
xchg
rclb
dec
and
dec
loopne
sbb
cmp
inc
push
ret
jo
loop
loope
jp
jmp
shlb
push
sti
xor
xor
cld
rcrb
mov
push
lods
cltd
arpl
clc
gs
aas
out
and
sahf
es
orb
jbe
push
mov
addl
lret
mov
or
adc
sub
add
inc
inc
adc
int3
and
cmc
mov
icebp
clc
repz
gs
push
mov
jle
xor
adc
ret
inc
es
cmp
fs
inc
or
push
push
sub
cmp
scas
aas
sub
mov
ja
cld
fnstcw
cmp
mov
push
insb
repnz
cwtl
imul
mov
lock
enter
filds
mov
inc
lds
sub
lods
or
mov
int3
add
lret
jbe
nop
sahf
xchg
jne
fildll
ss
inc
repnz
sub
jge
mov
dec
cmp
enter
iret
movsb
cli
pop
inc
and
inc
sbb
rorb
jno
loope
jp
dec
inc
pop
je
dec
out
mov
and
in
dec
test
call
mul
movsl
pop
loop
cld
mov
scas
clc
fsubl
xchg
pusha
leave
inc
mov
adc
int
nop
aam
std
stc
rcr
clc
cwtl
cmp
xor
aaa
insl
push
mov
rclb
mov
add
icebp
pop
mov
inc
dec
ljmp
jmp
cli
jl
and
push
xchg
xlat
add
push
frstor
fwait
pop
push
inc
repnz
data16
mov
sub
lock
mov
packssdw
int3
xchg
pop
dec
not
and
lods
mov
xchg
cmp
scas
jp
hlt
jge
cmpsb
push
repz
scas
and
push
ret
jne
push
out
push
inc
adc
dec
or
add
jnp
adc
rorb
fisubrl
mov
js
pop
daa
std
pop
fs
filds
pop
out
push
jo
push
cmp
mov
pop
leave
jle
sub
aas
add
adc
out
cmp
test
pop
ss
clc
xchg
int
shrb
popa
lock
jae
adc
add
dec
imul
add
leave
mov
sbb
adc
add
stos
fs
sub
push
mov
jg
sub
pop
and
out
aaa
cmpsb
lcall
xchg
dec
iret
adc
das
movsb
int
pop
inc
or
dec
dec
push
imul
shl
xchg
dec
jnp
cltd
imul
fldenv
xor
add
and
sti
dec
fsubs
sub
mov
jge
xchg
movsb
dec
mov
pusha
mov
repnz
mov
js
aaa
es
fs
popa
xor
mov
cmp
and
js
sub
adc
cmpsl
dec
loopne
mov
jns
adc
push
je
xchg
mov
test
xchg
outsl
sbb
test
shl
mov
push
cmp
dec
sbb
rcl
and
stos
pop
cmp
mov
xor
in
std
jae
mov
repz
vmwrite
lahf
jge
lock
sbb
adc
negl
fwait
ror
int
icebp
out
repnz
sub
pop
outsb
inc
xchg
dec
outsb
test
cmpsb
xlat
rcrl
push
sub
imul
lcall
outsl
out
fstpt
pop
or
sti
mov
add
cltd
into
cmp
sahf
push
dec
aam
xor
mov
push
inc
sbb
and
outsb
mov
mov
xchg
inc
add
jno
cmp
stc
xor
lods
xchg
pop
dec
jle
sbb
std
xchg
fsubrs
fildl
sbb
test
lahf
das
cmpsl
xor
jmp
rclb
mov
lahf
int
push
into
dec
cli
push
aam
in
jb
jl
int3
mov
adc
cmp
lock
inc
ficoms
loop
cmp
stos
and
mov
sub
inc
inc
push
sbb
and
lret
sbb
cmpsl
test
inc
subl
push
mov
and
enter
and
mov
repnz
pusha
cmc
push
pushf
sbb
jbe
xchg
add
rcl
xchg
scas
xchg
shrl
fstpt
in
pop
push
pop
pop
jo
imul
or
mov
add
incb
lods
lea
jb
push
inc
lds
sbb
repz
mov
and
bound
inc
or
cmp
movsb
add
mov
in
loopne
sbb
mov
stos
ds
adc
or
cld
mov
popa
loopne
mov
sub
inc
dec
jg
pushf
fs
mov
pop
aas
push
and
outsl
push
push
cmp
mov
shlb
addb
ds
dec
mov
cmpsl
rolb
xchg
adc
jp
std
push
xchg
std
adc
or
mov
fwait
sbb
loop
or
fistpll
call
cs
push
cmpsl
cmp
jns
xchg
and
cmp
leave
and
mov
gs
inc
fs
in
cmp
rorb
mov
inc
xchg
int3
pusha
and
or
mov
adc
into
mov
jl
hlt
bound
lock
dec
sub
jmp
ds
fwait
inc
mov
and
mov
mov
shll
lods
aam
jno
mov
pop
mov
leave
out
xorl
aaa
xor
imul
leave
jne
jmp
mov
add
movsl
mov
sub
fs
ficoml
inc
out
mov
lcall
pushl
fadds
dec
fldpi
rcrl
hlt
cmpb
mov
gs
sub
ret
inc
rcrb
pop
jae
or
mov
call
out
pop
dec
out
inc
push
enter
push
xchg
add
add
shl
loop
pop
xchg
test
mov
jnp
add
loop
and
pop
jnp
fcoms
mov
mov
and
std
push
pop
jge
xchg
and
movsb
mov
sbb
pushf
jns
loope
mov
sbb
jno
fnstenv
sub
out
pop
ss
push
pop
xchg
add
sbb
loope
roll
xchg
stc
pop
ds
xor
push
addb
cli
pop
xchg
push
mov
cli
outsb
nop
ret
ret
test
jg
imul
ds
arpl
xor
test
jge
cmpsl
outsb
clc
std
lock
sbb
je
pop
inc
push
sub
adc
adc
popa
arpl
xchg
cwtl
xor
fsubrl
jmp
mov
neg
loope
ljmp
pop
dec
nop
jg
addr16
sbb
xchg
lret
dec
cmpsl
jge
test
in
cli
in
pop
pop
pop
stc
mov
addr16
int3
out
cwtl
rcll
push
lock
test
call
pop
inc
aas
sarb
andb
jle
sbb
adcb
inc
mov
sub
sub
inc
xor
jecxz
mov
jg
fwait
lds
dec
test
dec
pop
dec
sub
mov
lods
and
fcomps
sbb
lahf
mov
int3
fs
lock
mov
popf
movsb
xlat
popa
repz
fistps
lds
ss
mov
add
into
xor
pop
jg
lods
enter
sub
lret
mov
scas
pop
sub
xlat
jp
inc
shrl
cmpsb
cli
mov
mov
imul
adcl
cmp
enter
sahf
movsl
sbb
mov
shll
xor
pop
cmp
int
mov
mov
mov
ret
pop
aaa
stc
jo
dec
test
rcrl
sub
fwait
mov
mov
clc
xlat
xor
stos
add
fisttpll
sbb
notb
out
adc
sbb
movsl
jo
rclb
pop
insl
jno
adc
jae
insl
pop
push
rcr
mov
jg
sbb
js
inc
xchg
clc
int
aad
sub
repz
mov
mul
adc
xchg
out
test
rcrb
hlt
imul
in
int
and
push
mov
add
mov
inc
mov
xor
or
fnstenv
stos
jb
cmp
fisttpll
and
adc
sub
out
inc
xchg
mov
in
mov
arpl
stc
test
xchg
es
push
fs
scas
enter
imul
dec
je
pop
movd
repz
xor
pop
dec
hlt
mov
hlt
fs
sarl
lcall
xchg
dec
pusha
je
mov
add
cmp
das
imul
leave
xchg
mov
xchg
cmp
enter
xchg
into
jge
jnp
es
aam
adc
aas
pusha
stos
popa
jb
fdiv
xchg
push
leave
push
in
cmpsb
out
adc
mov
repz
ficompl
lcall
dec
and
leave
and
mov
add
lahf
mov
daa
and
loop
cmp
jbe
jle
mov
popf
mov
lods
xor
mov
rorl
jecxz
adc
outsb
shll
xchg
insl
jne
sbb
lahf
lret
repnz
mov
call
jecxz
push
mov
and
outsl
out
or
jnp
push
in
into
and
xchg
and
xor
mov
jbe
stc
cltd
mov
push
lock
xor
jnp
adc
mov
adc
add
int3
mov
pop
inc
leave
inc
movsb
add
cmp
cmp
mov
jl
shlb
xor
mov
push
push
pop
hlt
pop
ja
pop
int
out
adc
sbb
sub
es
nop
cmp
and
mov
shrl
bound
fsubr
jbe
loop
popa
insl
aam
and
dec
and
mov
je
mov
div
xchg
sub
mov
int
lcall
adc
addr16
jp
sbb
cs
cmpsl
dec
out
popf
mov
inc
pop
hlt
jle
add
movsb
mov
xchg
jg
cmpsl
mov
xorb
je
jp
in
in
jge
shlb
loop
dec
fimull
aam
loopne
push
sub
scas
jbe
fidivrs
scas
jmp
iret
push
and
cwtl
xor
mov
mov
leave
mov
jge
aad
js
aaa
repnz
lret
mov
pop
sarb
rorb
dec
pop
test
sub
adc
fs
mov
pop
jb
rolb
fcoml
mov
sbb
xor
das
adc
inc
lock
dec
ret
and
stc
xrelease
roll
xor
clc
and
ja
ds
sbb
fdivrs
loope
fnstsw
nop
cmp
xchg
lcall
sti
sub
dec
test
fs
jle
adc
and
jae
movsl
xchg
fwait
enter
insb
inc
ret
or
mov
jmp
xchg
ljmp
dec
in
pop
and
scas
push
pop
push
sub
xor
sbb
inc
adc
ret
mov
lcall
jno
out
and
cwtl
popf
in
out
pop
mov
xchg
pusha
or
push
jbe
mov
or
mov
or
mov
and
imul
call
mov
or
daa
insb
rcll
push
je
fmull
into
enter
jle
jns
mov
sbb
roll
adc
stos
movsb
or
pusha
mov
cld
mov
and
fwait
push
ret
fidivrl
xor
int
or
sub
and
pusha
mov
insb
rorb
ds
or
pushf
jg
roll
mov
adc
xor
outsb
sbb
cmp
loopne
inc
adc
mov
int3
xor
sbb
add
jns
ret
pop
xor
or
ss
push
fisubl
xchg
int3
adc
add
repz
cld
mov
sti
xchg
stos
and
mov
pusha
and
lahf
aas
xorb
jg
and
add
jns
in
adc
cltd
jge
xchg
xor
sub
push
adc
mov
mov
push
mov
cmp
jmp
fadd
es
add
mov
movsb
xor
dec
data16
ljmp
xchg
in
enter
lret
sub
mov
jnp
cmpsl
subl
dec
ret
push
push
and
push
mov
dec
test
or
jae
jno
loop
lock
cs
dec
das
push
lret
outsb
lret
imul
and
cmp
xchg
mov
mov
cmp
scas
int3
test
dec
and
fcmovu
push
gs
push
aam
shlb
arpl
sub
stos
jg
enter
movsl
jne
ljmp
sbb
or
pop
jo
test
mov
sar
cmp
cmpsl
mov
push
fistpl
in
jmp
and
mov
jb
lods
stc
rcrb
sarl
dec
add
xor
cmpsb
popa
jae
cmp
rdpmc
push
push
ror
mov
shlb
mov
pop
hlt
jb
movsl
test
popf
lret
push
outsl
shl
push
jmp
adc
std
or
mov
xorl
pop
loopne
push
mov
ret
out
mov
push
std
rcll
mov
mov
cli
pop
xlat
pusha
scas
and
inc
mov
and
mov
sbb
or
xchg
pop
out
ja
add
mov
mov
or
cmpl
xor
daa
mov
mov
xchg
inc
add
daa
xchg
cmp
leave
xor
jns
sbb
stos
jp
pop
inc
lods
leave
data16
pop
lock
jne
jmp
je
dec
add
jnp
shll
loop
out
clc
push
mov
js
inc
inc
mov
dec
mov
ss
cmp
mov
stos
arpl
xchg
cmpl
fisubs
repz
pushf
add
push
mov
ja
cmpsl
mov
inc
rolb
cmpsl
movsb
scas
xor
aad
pop
stos
push
pop
cs
shl
mov
jb
pop
mov
dec
adcl
mov
adc
and
xlat
dec
insl
fcoml
add
rorl
popa
xorb
push
lahf
xacquire
out
arpl
nop
in
js
sub
sti
adcl
jg
adc
stos
add
jb
sbb
xor
ja
clc
cltd
divb
cmpsl
rclb
xchg
clc
stos
in
lds
jo
out
lahf
dec
rclb
mov
mov
movsl
push
pop
push
cs
std
adc
push
movsl
cmpsb
stos
lret
cmp
jl
mov
clc
dec
push
xor
dec
in
ja
into
std
ret
pop
or
jp
or
pop
dec
xor
test
sub
sbb
push
mov
or
xchg
or
cld
mov
lcall
fldl
push
cmp
in
push
push
mov
data16
fwait
repz
arpl
outsl
jp
js
rol
dec
mov
sbbl
mov
push
pop
sub
loope
xchg
mov
sbb
pop
stos
fcoml
or
sub
in
enter
pop
xchg
ret
jae
test
fisttpl
lahf
outsl
roll
jle
mov
and
test
pop
jno
pop
lahf
inc
push
mov
xor
iret
js
sbb
add
dec
fs
mov
mov
addr16
cmp
mov
ja
aad
jbe
gs
nop
rol
dec
rcl
bnd
stos
xor
lcall
mov
das
mov
push
into
aaa
in
test
sub
xchg
outsb
sub
rorl
lahf
mov
nop
dec
addr16
jmp
xor
jns
add
sbb
or
fcoml
mov
jmp
jno
mov
mov
sub
arpl
push
push
adc
movsl
test
popa
les
mov
loop
fnstsw
daa
mov
aaa
das
xchg
push
dec
xchg
cltd
mov
pop
mov
pop
xchg
sbb
loopne
sbb
stos
es
push
sbb
inc
fmull
sbb
jae
movsl
fistps
sbb
test
rcll
adc
pop
push
adc
arpl
add
and
jns
xchg
subb
inc
jmp
push
and
xchg
stos
pop
xchg
mov
pop
stos
xor
pusha
jo
sub
pop
push
fstps
fstpt
pop
xor
aam
adc
mov
mov
call
jnp
jne
adc
jmp
out
push
gs
rorl
subb
jmp
add
pop
popf
add
mov
out
adc
mov
dec
pusha
das
sub
das
and
test
and
xor
es
push
leave
adc
jmp
pusha
sti
lock
adc
pop
daa
mov
clc
dec
xor
lods
pop
push
fsubrl
jmp
xor
ja
mov
das
jg
inc
filds
mov
xchg
and
mov
cmp
xor
jmp
ja
push
jp
jl
iret
sub
pop
rol
mov
pushf
test
orb
mov
cld
xor
fs
dec
xor
pop
pop
dec
mov
insb
loopne
dec
jns
mov
and
out
sub
pop
mov
push
fsubrs
shlb
mov
outsb
pop
insl
lahf
out
xchg
pusha
imul
add
mov
cli
mov
jo
into
cmp
inc
mov
inc
cltd
inc
or
js
test
gs
mov
push
mov
mov
ret
test
lods
or
sub
and
mov
sub
int3
psrlw
jo
mov
fnstsw
push
bound
mov
cmp
fwait
mov
rcr
testl
xchg
mov
push
mov
xor
adcl
sbbb
jl
movsl
lods
pop
lock
pop
imul
add
pop
lcall
fcoms
push
and
stos
insl
push
je
dec
mov
sbb
jg
dec
dec
adc
imul
imul
adc
out
sarb
and
lock
dec
and
jo
sub
pop
mov
scas
repnz
mov
mov
push
inc
je
ss
mov
stc
rorl
pop
dec
mov
pop
lcall
stos
enter
stos
imul
loopne
xchg
mov
jb
ja
push
pushf
add
sbb
int3
inc
mov
pop
mov
sub
adc
pop
mov
cmp
in
test
adc
out
cwtl
mov
sti
subb
into
mov
mov
enter
aad
leave
inc
fcmovu
repnz
repz
ss
es
divl
and
add
test
mov
push
sbb
iret
jbe
inc
repnz
enter
fwait
repnz
mov
jmp
loope
push
xorb
xchg
lahf
mov
xor
or
pop
push
mov
test
cmp
dec
popl
hlt
rorb
imul
mov
test
pop
xor
sbb
subl
mov
call
loope
cmp
call
leave
xchg
je
mov
imul
cld
sub
enter
inc
and
inc
call
movsl
loop
dec
dec
cmp
push
jge
push
sub
xor
lret
sub
popf
lcall
mov
insb
jnp
stc
push
inc
xabort
xor
xor
sub
fisubrl
fildll
push
jns
xchg
shl
cmp
incb
je
pop
jns
addb
adc
cwtl
repz
or
xchg
adc
and
lds
xchg
pop
cmpsb
mov
sub
mov
xchg
mov
std
outsb
push
in
jae
push
add
jle
cli
dec
mov
iret
fs
clc
mov
shrl
int
nop
mov
or
lds
ds
add
out
sbb
sbb
test
add
sub
mov
cmp
lcall
adc
pop
stos
push
fnstsw
roll
xchg
cmp
jno
data16
dec
xchg
inc
repnz
lcall
nop
insl
daa
call
in
lahf
add
mov
and
jb
pop
jo
push
out
push
out
jmp
aad
in
adc
fstl
sub
insb
mov
push
pop
mov
dec
test
out
or
jae
adc
mov
dec
jae
dec
nop
push
ja
cmp
mov
pop
lret
jle
push
fwait
enter
dec
pop
sbb
ss
adc
aad
movl
inc
pop
cmc
cmp
testb
popf
faddp
mov
pusha
and
leave
pop
lahf
cld
xor
lcall
and
adc
frstor
xor
or
cmp
dec
inc
push
call
js
cwtl
cmp
mov
dec
jnp
ds
inc
rorl
adc
jno
pop
push
push
dec
xchg
xchg
adc
shlb
push
je
pop
arpl
je
mov
jle
inc
repz
dec
fstps
ljmp
in
jnp
insb
data16
mov
ds
pushf
add
add
inc
or
scas
dec
rclb
mov
pop
xchg
mulb
inc
js
daa
xor
in
mov
sbb
popa
stc
adc
xchg
xchg
ss
ficoms
test
xchg
aam
cmpsl
xchg
insb
scas
imul
ret
dec
mov
movsl
mov
shr
rolb
imul
jnp
out
and
fldl
test
iret
pusha
stos
pop
xor
or
cmc
int
enter
fcompl
push
add
ljmp
test
add
arpl
ja
lret
mov
nop
movsb
clc
mov
xchg
rcrb
mov
loope
call
jnp
jno
mov
pop
pop
dec
xchg
add
mov
and
cmp
cmp
test
add
xlat
test
jge
sub
cmpsb
ds
mov
dec
and
pop
lret
ret
pop
insb
or
mov
rorb
mov
mov
les
jmp
xor
cmpsb
cwtl
and
popf
or
rcll
aaa
sbb
andl
jp
repz
push
mov
rorb
push
dec
xor
cmp
int
sub
pop
sub
repnz
jnp
mov
mov
push
stos
ljmp
jl
sub
scas
pop
xor
mov
push
stc
loopne
test
adc
ret
ret
mov
cmpsl
movsb
adc
mulb
xor
xchg
int
das
loopne
pop
jbe
andb
ljmp
int
sti
cmp
into
mov
push
mov
dec
lods
dec
dec
stos
movsl
iret
dec
inc
popa
push
push
dec
out
mov
int3
cmpsb
add
pop
pop
sbb
add
jne
and
dec
mov
cmpsb
jmp
add
fwait
data16
add
shr
dec
xor
adc
mov
mov
jno
adc
adc
pop
xchg
leave
pop
shl
xchg
add
and
es
sbb
fnstcw
xor
push
inc
mov
sbb
insl
inc
aad
mov
into
testl
dec
xor
inc
rorb
or
push
jle
mov
pop
enter
stc
dec
repz
aas
not
xchg
movswl
outsb
aas
mov
xor
and
dec
and
inc
fwait
pop
insb
imul
psllq
lea
insl
rclb
fs
mov
mov
jmp
sub
jl
scas
outsb
ret
icebp
aam
fdivrs
mov
sub
push
mov
dec
xchg
pop
aas
enter
inc
nop
sti
fwait
cmp
xchg
jno
mov
shlb
cmpsl
lds
or
pop
cmp
mov
int3
mov
push
lcall
jae
mov
shrb
imul
es
mov
dec
movsb
adc
insb
mov
and
jge
jb
loop
inc
mov
xchg
lahf
cwtl
sbb
fisubl
dec
stos
mov
sub
int
push
enter
cmp
jno
adc
pop
movsb
xor
mov
sbb
mov
pop
mov
insl
cmp
or
inc
mov
and
inc
jle
dec
je
pushf
xchg
mov
test
pop
cmp
das
dec
or
fadds
jae
cmpsl
imul
leave
sbb
idiv
fs
movsl
pop
jb
iret
insb
sub
jle
mov
dec
adc
cmp
mov
push
inc
push
add
mov
inc
push
pop
push
adc
fcmovbe
or
dec
into
pop
das
enter
out
adc
sbb
push
xor
cmpsb
pop
aas
adc
dec
inc
cli
mov
in
das
mov
popl
xlat
inc
xchg
add
xor
xor
mov
pushf
icebp
jns
bound
rorl
loopne
mov
push
mov
test
stc
clc
sbb
imull
cmovp
sbb
and
aad
fsubl
adc
outsb
test
pinsrw
notb
dec
popf
in
fwait
aaa
mov
and
jp
repnz
inc
movsl
add
loop
ret
push
pop
or
adc
lock
cmp
out
leave
pop
cmpsl
lret
test
test
inc
add
xchg
inc
negb
int3
les
cmp
fisttps
push
pop
inc
out
sbb
in
hlt
jo
sbb
xchg
jl
ret
insb
outsb
pop
mov
push
int3
xor
rol
clc
mov
jbe
jge
push
arpl
stos
xchg
loopne
pop
mov
xchg
pop
pusha
into
cld
xor
imull
loop
jno
in
xor
test
sub
mov
sbb
nop
js,pt
push
push
mov
popf
sbb
test
sub
hlt
fwait
mov
sub
ret
lea
inc
pusha
rcrb
mov
sti
fisttpll
scas
mov
out
aas
mov
xchg
es
ja
ja
xchg
push
xchg
and
leave
into
rcll
xchg
fsubrl
cli
sub
inc
enter
movsl
dec
sahf
sub
cmp
into
hlt
push
inc
out
andl
cmp
inc
and
xor
add
mov
dec
adc
leave
ss
jg
repnz
dec
ja
jle
fisttpl
dec
pop
lds
ja
mov
ja
ja
sbb
push
sbb
push
xchg
sbb
pushf
mov
xchg
adc
movsb
outsl
cmpsb
push
push
push
mov
fcom
add
movsb
movsb
insl
shrb
aad
inc
lds
sub
sbb
pop
mov
lea
out
jns
insb
rorl
loopne
nop
xlat
xchg
mov
adc
repz
test
mov
push
xor
push
shlb
fistpl
push
lock
dec
ja
std
cmp
fistps
adc
popf
negb
fs
data16
mov
mov
dec
or
les
pop
out
test
aad
icebp
hlt
pop
mov
mov
imul
and
lcall
out
mov
jg
sbbb
mov
mov
negb
ds
test
add
arpl
lea
mov
pop
cli
fcoms
and
inc
sbb
pop
dec
decb
jecxz
xchg
jle
int3
sub
jns
adc
push
outsl
aad
jbe
hlt
loope
inc
xor
les
mov
adc
xchg
lret
rorb
repz
pushf
fucom
adc
or
cmpsb
out
mov
shrl
sbb
jno
or
popf
inc
repz
imul
add
inc
inc
xor
mov
mov
pop
into
lcall
cmpsl
push
divl
rol
aam
pushf
push
lea
or
jecxz
sub
xlat
cs
pop
adc
lret
xchg
rorb
scas
inc
orb
pop
and
repnz
sbb
cmpsl
cltd
cmpsb
movsb
sahf
sbb
lret
aad
insl
xabort
insb
sub
add
push
cmp
out
inc
int3
jl
scas
adc
decb
mov
es
pop
sub
mov
insl
pusha
lahf
pushl
push
cltd
adc
jp
lret
addr16
sarl
mov
arpl
pop
repnz
shrl
xchg
mov
sbb
mov
xchg
fisttpll
in
or
imul
xchg
or
pop
cmc
cs
testl
popa
dec
adc
fstl
fsubrl
jg
scas
cmpl
add
xor
lods
cmp
mov
sub
push
jp
mov
ds
jae
jae
cmp
jbe
add
clc
sub
jb
mov
xchg
fs
movsl
je
mov
xor
std
cmp
cwtl
movsl
cmp
xchg
out
sbbb
fidivs
imul
mov
mov
cli
sarb
push
cmp
das
cmpsl
pop
test
fnsave
int
test
cld
pop
popf
lret
jbe
xorl
dec
xor
add
shl
das
popa
sbb
pop
cmp
jg
outsb
mov
mov
repz
in
scas
data16
enter
mov
sub
inc
push
hlt
and
mov
mov
mov
shrb
addr16
push
fcompl
repnz
lret
sub
xor
and
int3
push
shr
pop
cmp
leave
mov
stc
lret
xchg
pop
rcrl
xor
rcll
jg
push
and
pop
je
imul
scas
data16
jecxz
in
mov
sbb
cld
and
sahf
cmp
outsl
imul
mul
cmpsl
lcall
sti
mov
push
out
test
inc
dec
int3
jns
dec
xor
shlb
sti
repnz
sbb
cmp
add
pop
aas
pop
pop
outsb
icebp
stos
movsl
mov
dec
test
xor
jbe
mov
inc
mov
xchg
into
mov
arpl
pusha
sbb
xchg
fwait
mov
sbb
xor
jnp
cmp
js
aas
xchg
mov
xchg
xchg
dec
jno
inc
das
or
xchg
xor
dec
jle
mov
push
and
xchg
stos
fs
stos
adc
out
push
add
jbe
push
inc
jecxz
aad
mov
fdivrs
lcall
mov
movsl
rolb
sub
dec
pop
int3
aam
orb
add
orl
roll
fadds
push
mov
jmp
or
imul
pavgw
push
cmpsl
lcall
aad
dec
insb
sub
mov
mov
pop
punpcklbw
aad
insl
cmpb
popa
sub
mov
movsb
into
adc
cmp
mov
pop
add
jge
aad
dec
push
mov
xchg
jbe
lods
xchg
stc
dec
imull
xchg
mov
push
in
mov
or
sub
jne
test
movsb
into
and
out
mov
lret
cld
xor
mov
sahf
add
mov
sbb
fwait
int3
lret
and
pop
cmp
or
cmpsb
adc
fdivrl
inc
aad
cld
inc
call
dec
mov
je
gs
sbb
imul
or
sahf
frstor
pop
out
ds
repz
xlat
xor
sub
loop
jl
outsb
inc
orb
notb
js
shl
jnp
mov
aad
xchg
loopne
xchg
mov
rorb
mov
sub
lret
frstor
cs
fisttpl
inc
fmull
xchg
repz
adc
imul
cmp
mov
fisttpll
rolb
cltd
ljmp
ret
pop
lock
mov
mov
popf
pop
dec
mov
add
xchg
xchg
inc
loop
lret
mov
sub
lea
push
xchg
iret
jecxz
sub
adc
pop
sub
dec
ljmp
mov
xchg
test
xchg
mov
bound
mov
out
enter
leave
dec
add
add
push
sbb
leave
mov
icebp
and
lds
dec
mov
push
js
cmpsl
pop
jb
test
add
pop
sbb
pop
mov
jne
stc
hlt
out
loop
dec
pop
daa
ds
leave
push
rcrl
stos
ret
movsl
les
cmp
les
sbb
adc
mov
cld
ficoms
scas
xor
call
push
jae
jno
sub
jp
test
test
cmp
loop
and
stc
rol
xchg
push
sti
iret
xor
cmove
stc
inc
and
jp
frstor
stos
scas
mov
cld
sub
or
adc
jg
mov
lods
out
lret
dec
sbb
rorb
sbb
or
incl
pop
je
jp
fdivrp
or
fld
lea
xor
add
in
orb
data16
pop
pushf
adc
push
loopne
jge
push
fdivr
xor
mov
movsl
test
int
out
mov
popf
bswap
pop
push
sbbl
sub
fwait
xchg
cmp
sahf
rclb
movsl
sbb
mov
mov
dec
add
mov
sub
cmp
inc
in
jns
cmp
dec
data16
mov
je
inc
out
sbb
lods
inc
fnstsw
mov
pop
stc
call
lods
cld
mov
js
out
ret
sub
dec
sub
mov
sub
or
inc
rcll
cmpsb
mov
sub
ja
fs
lret
push
call
push
scas
and
in
pushl
rcrl
cli
ret
test
xor
inc
inc
aas
xor
and
int3
adc
xlat
dec
xor
jg
jp
movsb
out
mov
loope
mov
dec
aaa
repnz
icebp
cmp
or
and
xor
cli
ja
adc
adc
outsl
jge
pop
ret
mov
push
xchg
and
dec
popa
icebp
adc
pop
push
or
sahf
add
fisubrl
inc
mov
jge
out
loopne
fsubrs
inc
xor
mov
std
and
sub
iret
inc
mov
pop
mov
ja
push
lret
js
mov
popf
xor
stc
adc
cmp
jmp
mov
out
push
pop
lahf
and
pushf
pop
sahf
xor
push
lea
jg
roll
jae
fiadds
ficoms
aam
or
mov
insl
cmp
fstp
pop
push
lahf
call
cli
ss
add
pop
dec
aam
dec
pop
enter
lods
push
jb
shll
fistl
jbe
test
jp
and
mov
mov
repz
hlt
enter
jno
clc
ss
cmpsb
dec
ljmp
pop
aaa
jmp
inc
lds
aam
mov
sbb
mov
dec
cmp
mov
enter
bound
jg
push
les
pop
add
mov
aas
aad
sti
lret
pop
inc
aad
lahf
pop
adc
js
push
mov
sbb
jmp
cmp
jno
shrl
scas
in
out
lcall
clc
dec
es
sub
movsl
in
jae
gs
push
push
push
sbb
add
or
or
nop
cmpsb
out
dec
stc
pop
divb
test
sahf
arpl
inc
xor
dec
sbb
jns
adc
adc
sbb
fcoms
int3
fisubs
cli
clc
jg
push
movl
lock
outsl
xor
push
outsl
in
dec
lret
push
xchg
test
adc
fldt
adc
aas
push
push
push
je
jecxz
jbe
sub
das
std
daa
mov
inc
add
xchg
movb
insl
push
sub
daa
popf
movsb
dec
jmp
pop
shll
or
inc
movsb
roll
in
fldenv
out
xor
ds
dec
lcall
dec
push
sbb
adc
shlb
popf
mov
cwtl
and
and
mov
jnp
sub
jmp
jp
cmp
es
rclb
test
or
idivl
mov
inc
adc
sbb
xchg
subb
enter
mov
imul
sbb
xor
xchg
stc
scas
les
adc
call
jl
cwtl
repz
es
stos
imul
lret
rolb
lds
cltd
sbb
xsha256
cmpsb
xlat
cmp
popa
mov
xchg
mov
adc
sub
stos
enter
push
sahf
rsqrtps
je
pcmpeqb
cmp
adc
xor
pop
xor
in
adc
xlat
movsb
adc
insl
dec
out
fwait
and
mov
fcmovu
xor
mov
mov
dec
and
mov
mov
lahf
sbbb
repz
xchg
jp
ret
es
mov
mov
sub
shll
jae
sahf
sub
xchg
fwait
out
popa
add
add
outsb
dec
push
clc
push
inc
sbb
inc
pop
push
int
mov
arpl
sub
addb
jecxz
xchg
pop
outsb
xchg
pop
cwtl
inc
xlat
lcall
addb
mov
ret
jo
or
jl
push
movsl
shl
xchg
inc
jae
xor
dec
cmc
push
push
ret
pop
push
mov
pop
adc
std
pusha
sarl
pop
rclb
out
movsl
sub
xchg
pop
push
mov
adc
dec
mov
stos
mov
arpl
push
loop
push
and
xor
into
adc
xchg
pop
repz
push
dec
cmpsl
and
scas
xorb
jl
jmp
lcall
xchg
dec
lahf
pop
and
cmp
outsb
addb
popf
xchg
push
je
ret
addr16
mov
jb
movsb
sbb
push
negl
test
out
jg
inc
ljmp
stc
fsubrl
movsl
push
mov
pushf
mov
ret
xor
bswap
inc
aad
mov
enter
testl
int3
or
jl
fs
int3
inc
test
mov
les
repz
int3
pop
je
lahf
inc
int3
mov
addb
ss
xor
or
mov
push
iret
scas
idivl
pushf
cmp
xchg
dec
cli
or
popf
andb
inc
jecxz
in
or
and
jle
sbb
mov
mov
xchg
fildl
xor
xchg
mov
add
and
xchg
adc
outsb
loopne
xor
movsl
or
xor
mov
jge
lods
sub
outsb
cmc
int3
cmp
scas
adc
sbb
inc
scas
pop
in
test
cmp
pop
lahf
and
add
mov
xchg
addr16
cmp
adc
int
es
bound
in
inc
inc
loope
cmp
jae
inc
adc
jne
adc
loopne
or
xchg
lcall
roll
mov
xor
or
adc
push
lods
jl
xchg
pop
gs
dec
mov
xor
leave
stos
popa
xchg
aam
mov
pusha
dec
scas
in
stos
outsb
add
jnp
mov
int
ja
cmp
lahf
sbb
arpl
add
jp
mov
jns
mov
stos
add
sbb
jle
push
mov
add
jae
shll
mov
mov
and
icebp
push
jno
das
fildl
in
xchg
and
push
pop
popa
xchg
push
je
sub
aas
push
pop
jns
xchg
repz
add
adc
clc
adc
cmp
lods
sbb
dec
mov
jb
jns
pop
fmul
push
add
or
dec
outsl
repnz
xor
xor
dec
jo
mov
lock
imul
jp
stc
add
icebp
sub
repnz
mov
sahf
or
jae
les
jne
ffree
imul
or
mov
rorl
es
fsubrs
ss
mov
rcrl
or
gs
fcomps
loop
and
je
jns
jno
or
out
inc
sub
push
xchg
cmc
cmpsb
cmc
mov
mov
push
loopne
or
pop
mov
mov
rcll
jecxz
and
sbb
xchg
xchg
or
xchg
jb
xchg
xlat
jns
sub
xchg
test
add
loopne
test
push
rcll
mov
adc
mov
mov
sar
fnstsw
dec
enter
fwait
xor
loopne
test
pop
jmp
bound
movsb
pusha
shl
xchg
aaa
mov
ds
fwait
out
outsl
adc
jno
test
inc
mov
lret
push
nop
mov
and
push
push
andl
imul
mov
js
pop
xchg
xlat
jl
add
pop
inc
aad
jb
sarl
dec
mov
pop
jae
test
je
bound
add
outsb
push
lret
cmpsb
pushf
xchg
lea
pop
lods
mov
repnz
xor
nop
rol
enter
xchg
inc
stos
scas
shll
gs
sbb
pop
dec
add
mull
aad
sbb
out
and
mov
shrl
mov
test
pop
mov
das
imul
add
mov
jl
imulb
enter
add
adc
dec
fsubl
mov
lods
es
popf
add
cmc
inc
clc
shrb
adc
cmpsl
addr16
or
mov
addr16
jg
mov
stos
inc
rcr
or
cmc
fcompl
arpl
mov
je
arpl
xchg
dec
xchg
mov
mov
cmpb
cld
cmp
rclb
je
sbb
pusha
fstps
sbb
jp
sub
imul
or
sbb
pop
pop
dec
jnp
test
cmp
bound
lock
ds
add
lods
pop
not
negl
pop
icebp
mov
jbe
mov
loope
push
out
rorb
popa
cmp
into
loope
jmp
lods
or
pop
sub
cmp
les
push
jne
sbb
xchg
mov
jo
iret
push
xchg
test
mov
into
jns
push
mov
fsub
mov
pop
shl
jne
lock
rolb
and
lods
repnz
pusha
mov
xchg
aad
jmp
jmp
mov
cmp
js
sub
dec
sub
in
ds
inc
mov
add
adc
pushf
shlb
and
loop
jg
fimuls
dec
test
iret
fmuls
testb
aad
sub
push
jne
mov
xchg
push
fs
dec
jg
xor
jno
gs
add
xchg
mov
jg
nop
ret
push
push
cmp
clc
push
xchg
fsubp
roll
cmp
adc
cltd
inc
icebp
and
fdivrl
mov
add
addl
adc
adc
ror
pop
push
push
pop
xchg
push
inc
in
scas
pusha
mov
divb
mov
loopne
lret
in
ss
xchg
loop
jae
sbb
stos
js
std
aad
mov
ss
mov
mov
push
fdivp
jno
cmp
mov
icebp
gs
incl
pop
sub
fidivs
dec
mov
inc
inc
gs
dec
aaa
fucomp
dec
scas
add
adc
cmc
rcrb
xor
xor
dec
pop
cmp
test
outsl
sbb
cmp
jae
aaa
xchg
dec
sbb
loopne
cmpsb
stos
fimull
cmp
fcomp
xchg
aas
movsb
xlat
movsb
mov
mov
inc
inc
add
dec
mov
ds
mov
pop
adc
or
loop
or
xchg
ja
mov
dec
mov
cmp
push
lea
inc
sbb
push
mov
pop
inc
add
insb
jbe
popf
and
sub
mov
mov
mov
mov
rolb
add
push
and
sbb
mov
mov
gs
test
xchg
jne
fldenv
pop
fidivrl
outsl
inc
aad
xlat
sbb
rcr
lahf
cmp
je
xor
xchg
jo
mov
and
lock
in
mov
mov
call
jnp
push
cli
dec
sbb
mov
nop
mov
test
cmp
xchg
adc
fcoms
jns
add
nop
les
sar
pop
mov
cmpsb
ds
cmpsl
mov
pop
add
inc
ljmp
fs
sbb
adc
sarb
push
xchg
cmpsb
add
and
in
and
push
add
lock
insl
loope
out
mov
and
enter
les
fnsave
inc
push
fwait
aas
jg
xchg
sbb
xor
xchg
popa
xchg
pushf
push
fcoms
xchg
sbb
inc
jns
xor
lret
push
pop
jl
insl
pop
cwtl
je
call
sbb
pop
cs
ret
mov
out
push
cmc
stos
cld
or
mov
add
add
or
inc
cltd
push
stc
dec
mov
lcall
jl
and
push
enter
push
cmp
mov
imul
out
insl
ret
sub
dec
push
dec
xchg
repnz
imul
cmp
arpl
cmp
aas
adc
pop
add
dec
push
out
int3
lds
and
cli
rclb
jnp
adc
ret
or
scas
xor
jne
popf
cmp
pop
or
add
jle
pop
fwait
mov
repnz
lds
loop
mov
clc
aas
fstps
in
jbe
push
mov
push
scas
and
adc
inc
loop
shrl
daa
lcall
or
add
and
pop
rcrl
adc
adc
xor
dec
cmp
adc
stos
mov
daa
mov
mov
std
xor
inc
cwtl
sub
dec
sbb
sbb
adc
cmp
icebp
jmp
jg
push
or
bound
cltd
dec
aam
xchg
fcompl
in
pop
or
fs
jns
test
pop
push
sub
dec
stos
das
faddp
inc
jle
enter
imul
push
mov
jo
cli
loopne
dec
pop
mull
pop
xchg
mov
jmp
dec
sub
mov
in
cmp
rorb
imul
cmp
jbe
nop
push
stos
call
aaa
jecxz
in
mov
and
nop
xchg
mov
sbb
lret
imul
inc
and
adc
mov
xchg
insb
or
add
jg
scas
cwtl
xchg
or
shrl
or
and
xor
mov
push
mov
push
popa
mov
sbb
jge
fcoml
ret
cmp
sbb
push
adc
movsb
ror
les
xor
daa
bound
pop
push
pop
cs
jbe
sbbb
mov
js
sub
mov
daa
fimuls
fwait
sbb
inc
fmull
sti
movsl
mov
pop
fcoml
test
stos
pop
mov
ret
adc
ror
ja
dec
inc
and
jle
stc
sbb
rorb
outsb
adc
push
nop
sbb
pop
inc
jno
xchg
jge
mov
sub
aaa
cmp
push
clc
orl
jp,pn
add
cmpsb
jns
jns
xchg
add
inc
fbld
loopne
arpl
fsubrl
sbb
pop
adc
sub
jo
hlt
lods
nop
mov
sbb
cmova
outsb
mov
pop
call
push
fdivrs
push
les
nop
in
rclb
mov
dec
call
aam
int
or
dec
pop
and
ss
mov
in
jbe
fistpl
shrb
push
mov
sahf
mov
loopne
push
js
bnd
or
sbb
xchg
pop
xor
out
pop
jns
dec
cwtl
inc
enter
jg
rolb
lcall
pop
or
cmp
cmp
and
shlb
mov
mov
pop
push
insl
and
rcrl
cmpsb
btr
sbb
sbb
data16
cmp
jp
test
inc
out
lret
xor
loopne
dec
fisubs
stos
imulb
test
scas
cmc
mov
xchg
and
push
xchg
arpl
xchg
rolb
adc
lfs
sub
fstl
adc
push
enter
push
and
stc
int
or
or
daa
dec
jecxz
xchg
idivb
js
aam
mov
ds
dec
xchg
test
loop
sub
arpl
sub
push
mov
xchg
add
jecxz
cld
fisubs
fcmovne
add
xchg
pop
mov
cmp
ret
out
jo
stos
lahf
cli
and
enter
scas
inc
xor
data16
sbbl
and
pusha
xor
sbb
mov
call
inc
pushl
cmc
mov
cwtl
outsb
aam
repz
imul
dec
jge
add
mov
mov
pop
cmp
lea
xor
fidivrl
jae
hlt
mov
sbb
out
xor
outsb
ljmp
daa
sub
sbb
cmpsl
outsb
sahf
lods
push
out
bound
add
enter
dec
jb
jns
addb
dec
cs
insb
pop
ret
dec
vcvttsd2si
dec
and
stos
lods
hlt
mov
xor
sahf
lock
sar
mov
jmp
inc
sti
xor
adc
movb
add
push
stc
jb
sbb
add
pop
mov
clc
jle
inc
mov
cs
cltd
ret
lea
in
pop
add
sbb
pop
cmp
push
xlat
mov
scas
orb
and
mov
mov
pusha
and
pop
or
cld
lods
add
ljmp
aam
sub
inc
out
adc
push
add
mov
cmovno
cld
test
pop
xchg
xor
enter
dec
cmp
shl
scas
dec
fsubrs
out
push
mov
or
mov
mov
add
mov
arpl
jno
pop
xchg
popa
test
ret
xor
sub
adc
xchg
inc
testl
scas
cmp
je
nop
mov
jne
xor
xor
cmc
add
testb
gs
sbb
push
int3
cmp
in
xchg
jbe
xchg
into
and
aas
inc
dec
inc
pop
mov
xor
loop
inc
cwtl
call
aas
mov
fisubs
in
das
push
cli
pop
cmpsb
xor
mov
test
pushf
loopne
xorb
insl
pop
push
cmc
lea
cmp
mov
call
add
add
xor
ret
shll
jecxz
mov
ss
jb
ds
loopne
push
cmpb
cmp
movsl
mov
dec
pusha
pushf
mov
pop
mov
outsl
stos
cld
icebp
push
into
adc
push
add
mov
popa
push
nop
fwait
sbb
icebp
enter
xor
pop
mov
mov
jbe
push
les
sub
dec
pop
ret
cmp
in
subb
scas
and
mov
sbb
aad
and
add
in
sbb
fprem1
mov
mov
test
jg
mov
mov
icebp
in
sbb
fs
pop
imul
push
outsb
mov
mov
es
mov
or
push
insb
out
sub
xchg
mov
xchg
lock
cli
adc
xchg
sbb
fwait
dec
dec
jecxz
filds
pop
dec
inc
sbb
addl
sbb
and
push
lock
daa
sahf
outsb
sbb
andb
push
mov
sbb
aaa
inc
cmc
scas
test
sbb
hlt
pop
call
dec
leave
cli
xchg
mov
push
dec
mov
push
sub
and
lock
pushf
dec
xlat
xor
inc
cmpsl
popa
scas
cld
shl
adc
pop
adc
xchg
testl
or
pop
or
pop
cmp
mov
mov
xor
cwtl
stos
cmp
xorl
ficoml
mov
data16
push
mov
mov
dec
xor
clc
sti
push
mov
and
sbbl
leave
int
fnstenv
sbb
aad
popl
mov
jmp
popf
test
sub
jl
jl
dec
jae
mov
inc
fstpl
std
sbb
pop
lods
shll
lods
push
mov
fdivrl
pop
mov
xchg
mov
mov
mov
cmpsb
jg
sub
jg
inc
adc
jno
loop
push
popl
inc
push
pop
mov
cwtl
lock
mov
mov
pop
xor
mov
cmpsl
in
pop
adc
jo
cmp
inc
inc
in
shrd
or
mov
aaa
ljmp
cld
aas
pushf
in
decb
cli
pop
insl
les
lret
mov
and
xor
mov
das
ds
pop
sbb
call
nop
sarl
cmp
scas
loopne
jns
dec
loop
int
mov
fdivrl
insl
mov
mov
loop
mov
clc
or
cmp
push
add
sub
push
inc
inc
mov
add
add
adc
xchg
dec
xchg
jl
lret
dec
push
cmp
push
sahf
fcoml
enter
pop
cltd
and
pop
test
lret
icebp
fidivl
arpl
lcall
ja
mov
mov
test
mov
or
aaa
cmovns
push
dec
test
leave
jae
dec
leave
mov
push
icebp
insb
stos
fstpl
shlb
xchg
fstpl
ljmp
push
add
jbe
repz
ds
mull
loop
mov
stos
mov
mov
xor
jl
in
stc
jbe
mov
dec
xor
out
cmp
lds
mov
add
dec
adc
xor
jno
mov
nop
fisttpll
mov
cmp
jbe
inc
push
mov
mov
pop
adc
cli
andl
lcall
loop
push
mov
cmp
mov
adc
xchg
in
or
daa
mov
jo
cmp
or
pop
jmp
inc
push
fmuls
in
popa
jns
inc
cmp
popf
cmp
leave
mov
hlt
mov
mov
test
pusha
iret
aas
mov
xchg
stos
imul
imul
lods
push
mov
xchg
jbe
in
mov
ljmp
dec
or
push
adc
loopne
lret
mov
mov
outsb
incb
divl
leave
xchg
aam
mov
jno
out
mov
xor
icebp
xor
push
call
jns
inc
fwait
icebp
movsb
xor
adc
add
movlhps
and
mov
mov
add
popa
clc
add
add
pop
js
frstor
arpl
sti
xor
mov
pop
mov
sbbb
mov
and
gs
ficoms
repz
inc
dec
pop
push
xchg
mov
add
cmp
iret
xor
test
mov
outsl
enter
xchg
int3
test
in
ret
xchg
pop
gs
mov
ljmp
pop
dec
jns
and
test
cmpsb
int
lods
fcmovnb
push
pushf
cmp
push
lea
sbb
pop
lock
ret
dec
sbb
cmp
arpl
in
stc
subb
pop
mov
add
shrb
stc
push
sub
mov
or
sub
or
jbe
push
pop
or
xchg
xor
into
outsb
push
cltd
pop
ret
mov
mov
lods
or
movl
popa
sub
hlt
je
mov
mov
push
sbb
ret
fsubr
cltd
sbb
and
aad
mov
sub
push
mov
imul
imul
fisttpll
repnz
cmp
ret
pop
sub
xchg
sbb
roll
add
sahf
push
jmp
dec
xchg
leave
loop
movsb
test
pop
dec
and
sub
addr16
xor
pop
aaa
mov
sub
fiadds
cmp
push
mov
inc
bound
fs
loop
add
mov
or
xchg
test
movsl
stc
addl
adc
mov
roll
subb
pop
adc
jl
jl
out
fwait
sbb
inc
hlt
in
pop
lds
fsts
push
les
cmp
lahf
fadds
xor
insl
loope
aaa
xchg
jns
add
cmp
fisubl
mov
mov
mov
xchg
lret
out
cmpl
ret
test
nop
aam
outsl
outsl
rorb
bswap
xchg
and
jae
sti
clc
outsb
dec
lds
test
and
add
xchg
fs
pop
rcll
mov
mov
out
cmp
pop
sbbb
xor
mov
push
dec
jmp
xchg
ret
call
xor
rcr
push
jnp
pop
icebp
xor
rcll
mov
fsubs
mov
aam
pusha
lds
pop
test
mov
icebp
push
je
jle
xchg
outsl
leave
sbb
les
add
pop
inc
lods
push
xlat
sub
xchg
fisttpl
push
in
dec
mov
cltd
mov
sub
fisttpl
fisttpll
cmpb
push
mov
dec
or
cltd
cmp
addr16
pushf
stc
push
mov
adcb
out
adc
aam
jl
aad
add
adc
repnz
mov
fs
lcall
ret
inc
int
add
inc
inc
pushl
into
jg
mov
pop
jnp
pop
out
fwait
gs
iret
add
ss
mov
xor
push
ficompl
out
mov
push
cmp
pop
insb
fs
test
adc
gs
push
push
adc
dec
add
mov
out
mov
xchg
lds
std
call
cmp
inc
xor
sarl
cmp
cmp
ja
movb
adc
dec
out
es
mov
add
out
push
xchg
fimuls
jbe
add
sub
push
icebp
push
jmp
les
fldt
stos
add
sub
jo
inc
push
adc
loop
jno
adc
dec
repnz
test
jl
pop
mov
push
icebp
out
adc
shr
ss
aaa
jae
mov
stos
and
lret
push
mov
add
adc
and
stc
pop
fistpl
jbe
mov
cmp
inc
ret
add
xor
inc
push
xor
cmp
add
jmp
cmp
cmp
push
lea
pop
addl
jb
jnp
jle
mov
fldl
fnstenv
pop
push
rorb
or
pop
cmp
pushf
scas
or
or
inc
mov
mov
imul
sbb
cltd
add
pop
fbstp
lods
jmp
sti
add
ds
fidivl
and
repz
icebp
nop
jno
addr16
dec
dec
mov
push
out
push
or
pop
sbb
loope
ss
inc
jge
insb
enter
cwtl
roll
ffreep
dec
xchg
pop
inc
push
push
jmp
mov
mov
jl
mov
ljmp
in
sub
ret
jl
iret
cltd
mov
iret
jo
aam
xchg
movsb
test
adc
sbb
cmp
movsl
dec
or
enter
lods
ja
adc
je
mov
sbb
test
ljmp
xchg
ds
sbb
add
cmp
jecxz
jmp
ja
dec
mov
lea
xor
cmp
ljmp
mov
mov
cld
cmp
mov
lds
push
push
outsl
pop
push
jle
inc
sub
js
nop
rcl
add
cmpsl
es
add
aas
adc
mov
shl
mov
push
pop
sub
call
ds
push
or
icebp
jns
jns
icebp
cwtl
imul
adc
call
inc
add
or
xor
and
aam
cmpsb
xor
inc
decl
inc
aaa
mov
hlt
ljmp
mov
cmpsl
cmp
js
inc
sub
test
sub
movsl
sti
shl
and
sti
xchg
out
out
incl
rorl
jbe
jmp
fisubs
repnz
add
xorb
cmp
std
in
sahf
jno
cmp
push
cmp
inc
fwait
push
test
pop
in
mov
rol
andb
stc
loopne
movsl
xchg
loopne
mov
dec
jmp
lret
mov
sbb
push
lods
std
das
add
mov
fadd
int3
pop
push
daa
mov
mov
cmp
pop
in
sbb
mov
push
mov
push
in
pop
adc
cs
dec
test
mov
in
pushf
push
mov
shlb
iret
mov
pop
loope
filds
jle
fldcw
pop
out
cmp
jae
mov
push
test
fcoml
inc
xor
outsb
daa
shll
fadd
dec
pop
jnp
hlt
scas
fidivl
dec
cmp
dec
jle
mov
sahf
loop
pop
push
pop
je
popa
out
cmp
adc
cmp
mov
mov
aas
stos
lods
cmpsb
jo
push
xchg
mov
xor
mov
sub
xor
test
hlt
faddl
mov
and
jp
jae
pop
mov
fcmovb
mov
in
cmpsl
std
add
sbb
inc
jg
mov
pop
lahf
sbb
mov
mov
cli
mov
inc
push
fisubs
mov
mov
iret
ret
mov
fcoml
add
inc
lcall
inc
xor
mov
jg
in
xor
mov
xor
imul
xchg
adc
mov
pop
mov
fiadds
fs
cmp
and
std
cmpsl
fdivr
mov
icebp
cmp
hlt
orb
jbe
xor
and
add
cmpsb
dec
mov
and
xor
repz
dec
sbb
clc
insl
xlat
sub
lea
xor
pop
sbb
mov
xchg
add
jmp
nop
dec
pop
fs
gs
idivb
and
nop
outsl
and
scas
jne
mov
xor
cmc
lds
sbb
popf
xor
leave
jb
outsl
mov
dec
or
push
shrb
test
fidivrs
popf
out
xor
sub
cltd
imul
loope
jl
outsb
sbb
push
push
iret
jle
mov
cmp
jg
fnstsw
push
lret
cmp
xchg
in
and
lods
movsl
test
fucomip
scas
cmc
push
adc
mov
inc
insb
push
cmc
adc
mull
int3
fsts
mov
jl
mov
rorb
fcom
cld
nop
cmp
or
cmp
insb
pop
add
insl
jp
pushf
sahf
bound
and
mov
xor
arpl
pop
test
ret
xor
movsb
mov
sbb
push
xchg
mov
outsb
mov
cmp
xor
lcall
aas
jge
icebp
loop
sub
js
or
imul
pop
push
pop
aas
cld
push
lahf
sbb
das
jecxz
fsubrs
xor
int
lahf
jecxz
pusha
lds
data16
in
int
sbb
or
icebp
jb
in
leave
mov
loope
cwtl
or
ljmp
aaa
insb
jb
jmp
and
inc
inc
xorb
dec
dec
or
out
cmp
sub
outsb
stos
pusha
sub
mov
mov
mov
jnp
xor
out
in
incb
rolb
popf
loop
mov
iret
aam
sbbl
sbb
xchg
xor
scas
push
push
jp
adc
mov
adc
push
movsl
dec
inc
xor
mov
mov
cmp
adc
cmp
movsb
out
inc
pop
ja
fistps
iret
in
ret
jg
dec
test
jnp
and
mov
lea
dec
pop
or
xlat
sbb
movsb
cmp
mov
mov
xchg
xor
lcall
loopne
stc
mov
sbb
sbb
xor
mov
or
adc
cmp
sub
adc
mov
sysenter
ret
lahf
clc
jecxz
shll
add
mov
push
test
js
int3
cld
loop
fwait
sarl
nop
loope
xchg
cld
inc
imul
xchg
pop
repz
push
ret
cmp
nop
sbb
push
xor
loop
pop
sub
aas
push
arpl
in
lahf
inc
sbb
and
adc
pop
push
push
mov
push
jmp
and
or
mov
sbb
add
fwait
push
in
repnz
sub
inc
xchg
inc
cmpsl
es
push
xor
leave
gs
mov
faddp
insl
fwait
cld
iret
rorb
rcll
jns
push
mov
pop
jbe
shl
cmc
mov
loopne
add
pop
inc
cmp
int
pop
imul
cmc
mov
lods
addr16
icebp
push
xchg
pop
cli
inc
arpl
in
pop
outsl
data16
or
sbb
daa
out
filds
repz
in
scas
lea
out
ror
adc
push
sbb
xlat
ljmp
jne
aaa
leave
scas
sarb
adc
aad
out
adc
out
scas
dec
xchg
inc
lcall
push
imul
stos
push
cltd
cld
xchg
call
xlat
mov
and
sbb
movsl
mov
mov
and
movsl
jae
das
gs
jmp
xchg
or
push
and
sahf
xchg
and
pop
ja
fldcw
fdivrs
out
cmp
ret
mov
jbe
mov
stos
push
popf
fnstsw
mov
shll
jne
ss
frstor
frndint
adc
popf
xor
add
cmp
stos
ja
inc
dec
stos
fldt
jg
mov
push
ds
repz
out
dec
or
mov
pop
dec
add
repz
cld
sbb
ret
mov
add
xor
aas
inc
push
xchg
adc
insb
fs
xorl
enter
mov
mov
fwait
shll
lods
repnz
fs
cmp
jl
les
sub
pop
inc
movsl
decb
or
movsl
cs
xchg
loopne
and
pop
cld
sbb
nopl
push
mov
inc
ja
cmp
mov
mov
jmp
add
push
push
or
daa
and
jbe
int
and
add
xchg
cmpsb
imul
sbb
xlat
pop
fsubs
add
push
movsb
push
sub
jle
popa
cltd
jnp
cmp
pushf
jge
in
xlat
lahf
lahf
ss
adc
out
sti
aas
popf
sahf
jo
sub
imul
jge
test
or
int
jmp
cmp
fiadds
roll
and
in
cwtl
mov
lea
sbb
xchg
icebp
loop
mov
xchg
outsl
cmpsb
lahf
cmp
jp
fiaddl
pop
pop
push
xchg
fld1
insb
cmp
sub
push
out
arpl
jo
inc
out
out
sub
enter
je
lock
xchg
push
lea
cmp
movb
rorb
inc
roll
mov
pop
jne
sub
adc
sbb
sub
jns
adc
out
xchg
aaa
add
loope
sbb
call
pop
xchg
aad
pop
or
popf
xchg
addb
rorl
sbb
lret
inc
mov
test
jno
jecxz
repnz
dec
mov
ret
fcomi
ret
mov
cltd
sub
in
xchg
icebp
loope
test
cmc
out
popa
jbe
imull
sub
add
nop
sub
subb
fisubs
push
push
or
hlt
fcmovnb
pop
push
jo
and
sub
test
outsb
jmp
sub
add
sbb
nop
testl
aaa
icebp
mov
insl
cs
cli
call
sub
iret
sahf
push
push
cmpsb
add
aas
jle
stos
pushf
nop
push
sbb
dec
cmp
pop
out
xor
jge
add
pop
pusha
push
push
sub
loop
call
xor
movsl
out
cltd
sbb
inc
js
sbb
loop
pop
addr16
icebp
dec
test
es
nop
mov
cmpsb
jl
sbb
out
adc
lret
push
push
pop
fpatan
inc
sarl
lcall
pop
sbb
xchg
test
inc
std
cmp
xchg
outsl
or
add
xor
popf
cmp
stos
lods
mov
scas
lret
lret
add
ror
inc
mov
dec
cmp
fdivrs
fwait
orl
xchg
inc
test
cli
pop
pop
dec
fiaddl
or
and
out
add
cmp
add
cmp
in
aam
stc
sti
push
sti
cmc
insb
into
ljmp
imul
adc
jp
enter
mov
add
in
inc
pop
push
mov
int3
es
out
popf
fmull
push
into
push
push
mov
enter
popf
lods
cltd
loopne
cmc
add
add
mov
xlat
fcomip
rorb
jnp
iret
int3
jmp
pop
lods
call
lret
das
jns
inc
leave
mov
mov
dec
inc
roll
cmp
mov
and
xchg
pop
or
fwait
dec
jg
and
add
inc
out
and
pushf
comiss
flds
mov
jno
test
loopne
dec
int
xor
insb
out
mov
or
lret
lret
push
add
jp
aad
repz
push
mov
jg
jmp
or
adc
adc
xchg
dec
stos
mov
or
into
cwtl
push
cmp
cltd
mov
jmp
jmp
sbbl
xchg
fs
mov
mov
subl
mov
pop
jecxz
lret
ds
or
add
in
mov
sbb
pop
adc
mov
sub
mov
add
into
mov
pushf
sahf
mov
dec
add
les
fwait
xchg
push
iret
dec
mov
push
leave
pushf
adc
dec
xor
add
sub
shl
add
push
icebp
mov
dec
cld
pusha
mov
xchg
and
dec
fisttpll
xchg
adc
cld
aaa
and
cmpsb
sahf
xor
adc
stos
or
sub
cmc
mov
stc
sbb
pop
gs
dec
iret
gs
adc
lret
ret
and
jnp
shlb
or
fndisi(8087
pop
add
add
jmp
in
adc
lret
mov
cwtl
insl
scas
dec
push
movsb
aas
xchg
hlt
fcmovne
sub
pop
cmp
push
add
arpl
mov
push
ror
push
mov
pop
in
out
jnp
xchg
pop
push
std
mov
out
mov
mov
arpl
push
int
iret
bound
aad
adc
lret
stc
inc
mov
jno
cmp
mov
xchg
push
jae
inc
addr16
aad
jo
call
fildll
cmp
pop
adc
xor
stos
fs
mov
lods
jae
add
xchg
mov
push
mov
and
lock
sbb
mov
fsubr
jge
mov
data16
mov
mov
test
imul
pop
jl
xchg
out
mov
enter
sbb
dec
fidivl
pop
leave
in
repz
xchg
std
xor
testb
sub
push
lods
lds
test
sub
out
addr16
sub
jb
xor
jmp
dec
mov
clc
pushl
int3
stc
fdivr
in
cld
jae
sti
mov
push
not
aaa
mov
pop
or
into
shlb
cmp
ret
xor
and
clc
dec
inc
mov
gs
xor
imul
push
sbb
xor
xor
xlat
pop
sbb
lock
sub
push
mov
mov
addr16
mov
pusha
mov
daa
cltd
popa
mov
jns
or
test
mov
fstl
fimuls
lret
psubd
test
mov
mov
mov
ja
cld
inc
push
lods
sub
cmp
leave
icebp
sbb
divb
push
dec
rcr
inc
jg
sub
int3
push
shld
testb
pop
pop
dec
mov
jnp
lods
and
dec
add
rcrl
inc
sti
test
leave
mov
sahf
push
std
mov
push
fnstcw
mov
mull
mov
and
cld
pusha
loop
lods
lock
push
or
data16
pop
dec
dec
push
lods
clc
fstl
add
cmp
inc
int3
and
lret
mov
movsb
pop
add
dec
dec
or
out
push
mov
xor
cld
add
insb
xchg
ds
add
sbb
cmp
inc
jmp
shlb
dec
int3
sub
cmp
fwait
sbb
rep
mov
cld
inc
dec
out
shlb
dec
add
mov
mov
out
mov
mov
scas
daa
mov
adc
jae,pt
and
sub
aas
mov
add
lcall
push
leave
cmpsl
sub
mov
movsb
adc
loop
jb
ret
loopne
adc
jle
in
cli
push
fildl
mov
mov
lret
or
mov
leave
xor
dec
sub
in
dec
stc
sub
je
imul
mov
lahf
lods
ds
adc
test
movl
add
ret
adc
ja
pop
scas
jp
xchg
mov
fldt
inc
outsb
popf
sbb
push
aaa
bound
or
or
cmp
adc
lods
movsb
addr16
adc
stos
jns
fcoml
fistl
and
insb
stos
rol
in
jle
mov
pop
ret
jmp
jb
fcoml
jge
add
mov
mov
add
and
popa
push
arpl
std
mov
mov
adc
adc
stc
dec
mov
sub
xor
push
mov
out
xchg
xorl
outsb
arpl
lock
pop
icebp
jae
xchg
lcall
fyl2xp1
outsb
mov
mov
sub
add
jns
fwait
sarl
pop
outsb
pop
fs
leave
adc
loope
lcall
cwtl
add
xlat
mov
sbb
pop
bound
lock
sub
fs
mov
pusha
imul
nop
xor
fidivrs
adc
push
out
cmp
loop
xchg
es
adc
pop
mov
jne
jge
fidivl
jmp
cld
pusha
mov
imul
cmpsl
inc
fcmovnbe
pop
pop
jecxz
rcrl
and
lea
clc
shll
push
popa
inc
push
lds
nop
lcall
pushf
push
cli
cmp
in
xorb
ss
pushf
jp
push
vunpckhps
pop
jle
mov
in
ror
mov
mov
jg
mov
xchg
stos
in
dec
jp
adc
out
pop
jmp
aam
ds
in
ljmp
push
adc
out
cwtl
inc
add
cmp
lods
aad
inc
pusha
push
cmp
xlat
in
push
cmpb
cmp
xchg
jnp
mov
adcb
in
popf
mov
fwait
dec
adc
lods
stc
shrl
sbb
sub
icebp
sbb
adcl
pusha
jg
sbb
xchg
shll
pushf
clc
outsl
imul
push
jb
sbb
cmp
outsl
push
sti
mov
mov
fcomp
dec
bound
mov
in
call
rorb
loop
push
int
mov
xchg
arpl
pop
mov
test
out
mov
das
pusha
sub
pop
addr16
or
lret
sub
push
ret
into
adc
inc
pop
subb
jns
lcall
sub
adc
push
notb
sub
inc
rorb
movsl
mov
popf
xor
mov
mov
loope
lea
repnz
repnz
push
es
dec
mov
adc
mov
leave
lock
pop
loop
xchg
cmpl
or
call
pop
fists
mov
add
mov
ja
mov
or
mov
enter
adc
add
ja
pop
cmp
loope
mov
pop
or
cmc
sub
push
movsb
mov
dec
lret
mov
les
and
subl
pop
xchg
aad
add
jbe
cmc
adc
push
sub
icebp
repnz
repnz
push
sahf
sbbb
push
xchg
stc
scas
sarl
add
pop
pop
cmp
or
ss
or
mov
mov
jp
xchg
rcrb
andl
sub
mov
sub
mov
pop
jae,pn
pop
pop
int
sbb
inc
mov
rorb
inc
dec
mov
shlb
rorl
mov
sub
lock
jge
repz
js
jmp
addl
dec
mov
mov
movsb
add
pop
sub
inc
push
inc
pop
xchg
inc
in
cld
or
sub
xor
push
imul
out
sbb
sub
dec
push
mov
or
in
pop
ja
cs
dec
jne
test
mov
push
pop
jbe
addr16
and
jmp
and
js
mov
fucomi
outsl
insb
xchg
popa
je
cmp
loope
rorl
pop
dec
push
lods
sbb
bound
ret
sbb
xor
sbb
leave
mov
dec
and
cmp
pop
movsl
pop
jge
ss
xchg
insl
lea
add
xchg
mov
out
popa
xor
push
mov
aaa
ljmp
xchg
icebp
adc
mov
mov
xchg
test
adc
mov
shrb
push
ss
adc
int3
push
cli
push
dec
xor
sub
dec
push
push
aam
mov
loope
in
cmc
add
in
test
jmp
ss
fimuls
cmp
push
ret
stc
sub
push
mulb
cmpsl
push
push
xorl
xchg
in
sbb
fwait
paddsb
aas
lock
repnz
mov
arpl
aas
sub
divb
pop
lret
ror
stos
push
lock
cmp
out
add
add
xchg
repnz
push
mov
aaa
inc
notl
ficomps
sub
cmpsl
mov
in
stc
add
jnp
aaa
pop
cmpsl
stos
dec
xchg
shll
pop
mov
in
cwtl
jbe
push
pusha
mov
leave
inc
push
adcl
test
or
mov
adc
insb
jno
hlt
adc
es
ss
pop
sbb
xchg
mov
sbb
mov
add
aad
push
daa
push
hlt
insl
cmpl
in
jp
cmp
repnz
or
or
jecxz
fs
je
sub
int3
imul
push
xchg
repnz
push
movl
and
pop
sbb
add
mov
and
mov
data16
pop
shl
inc
mov
or
xchg
push
mov
and
and
mov
test
stos
push
dec
aam
popa
inc
leave
xor
adc
cwtl
sub
ljmp
pop
cs
push
mov
hlt
adc
mov
mov
jge
inc
jne
mov
lea
mov
pushf
in
mov
sub
mov
inc
sub
xchg
aam
sti
xchg
std
sbb
mov
daa
sbb
cwtl
mov
rcrb
mov
movsl
vmovapd
push
sti
xor
push
fstpt
aam
test
sub
sbb
mov
repz
sbb
cmp
pushf
test
mul
jns,pt
mov
dec
cmp
lock
or
lcall
neg
add
jnp
in
mov
sub
xchg
push
ss
repz
out
lahf
sub
push
clc
jge
bound
mov
adc
mov
inc
fs
shrl
rcr
add
mov
mov
push
lahf
adcl
jp
sbb
sahf
mov
movl
test
fidivrs
mov
add
das
ficoms
movsl
inc
and
popf
inc
push
mov
jmp
mov
or
in
add
xchg
imul
sarl
jle
mov
jno
in
dec
fstpl
movsb
push
mov
sbb
mov
sti
cmp
fs
or
movsl
das
in
stc
out
lds
jp
loope
pop
repnz
jno
cmp
pop
jmp
and
sbb
cmp
int3
repz
shl
jecxz
jo
shl
mull
leavew
mov
sub
dec
dec
add
es
push
xchg
add
andl
imul
in
in
pop
adc
das
xor
cmp
mov
sbb
lock
fbld
and
into
pusha
mov
cmp
cs
andb
dec
movsl
jns
sub
lods
sbbl
push
add
pop
cmpsl
dec
fidivrl
lock
rcll
sub
fwait
mov
arpl
xchg
or
dec
push
add
mov
sahf
and
pop
jecxz
sub
adc
or
shll
mov
addb
hlt
leave
cmp
xchg
push
fidivs
out
lcall
out
loopne
inc
jo
icebp
insb
fldcw
mov
mov
pop
jp
cmpsb
cmpsb
push
jmp
lret
out
js
adc
mov
fists
ss
inc
dec
mov
test
pop
mov
movsb
fsts
sbb
cmc
out
adc
inc
cs
in
inc
rcrb
push
lahf
sbb
push
hlt
lcall
mov
adc
push
cmp
inc
jae
mov
rorl
scas
leave
sahf
push
pusha
pop
sti
adc
mov
xchg
lods
mull
adc
pop
and
enter
jns
push
push
fnsave
test
pop
clc
test
sahf
leave
les
pop
fdiv
lret
daa
cwtl
pop
jle
daa
imul
mov
jmp
xchg
ret
jae
inc
pusha
lret
lock
test
lahf
adc
jl
insb
mov
or
xchg
xorb
cmpsl
mov
cwtl
insl
scas
mov
mov
arpl
outsb
mov
add
lcall
data16
sarb
mov
jg
in
nop
cmp
int3
mov
sub
and
nop
cmp
das
push
gs
aaa
jg
inc
xchg
dec
bound
mov
xchg
xor
mov
sbb
mov
add
dec
hlt
mov
aad
icebp
nop
test
adc
xchg
clc
outsb
xor
push
adcl
add
and
into
adc
enter
pop
outsb
sub
cwtl
out
xchg
repz
out
xchg
jmp
inc
xor
xchg
pop
test
and
and
pop
pusha
addl
orb
mov
ds
cmpsb
loop
les
or
popa
ret
dec
lds
sbb
dec
fidivs
inc
pusha
adc
or
data16
mov
and
nop
cmp
jle
outsb
std
int
movsb
andl
xchg
dec
int3
mov
test
outsb
add
sbb
divl
in
sub
or
or
sbb
cmp
xchg
xchg
ja
push
xchg
adcl
adc
gs
inc
lahf
sub
stc
mov
out
inc
aaa
pop
cmp
jge
cwtl
pop
pop
fidivrl
aas
inc
popf
push
mov
sbb
or
push
jmp
adc
sub
dec
fsubrl
mov
mov
mov
push
lret
subl
push
ret
xchg
jb
loope
adc
imull
into
and
add
and
clc
pop
fiadds
push
call
dec
cmp
mov
fldcw
stc
outsl
xchg
mov
mov
xor
cs
loope
mov
sti
xchg
cmp
mov
aas
mov
shll
movsl
out
clc
cwtl
dec
push
xchg
sahf
push
and
ret
sbbl
push
gs
data16
outsb
dec
pop
aad
lret
cli
add
dec
in
xor
sub
mov
push
add
add
inc
iret
push
imulb
push
pop
loopne
ss
jne
mov
fisttps
add
push
lods
movsl
cmpsb
stos
and
and
daa
jne
loop
push
adc
mov
and
push
mov
inc
xchg
mov
jb
stc
cmpb
jno
push
fwait
cmpsb
les
mov
cmp
enter
jnp
icebp
xor
cmpsl
es
imul
ds
sub
push
outsb
mov
insb
aad
cmp
or
addl
or
or
icebp
pop
push
test
add
lcall
sub
es
mov
test
sahf
push
test
jae
adc
stos
daa
cmp
jnp
pop
jmp
aaa
inc
mov
mov
cld
jno
cltd
pop
pop
clc
mov
pop
cwtl
jg
test
xchg
pop
push
jge
xor
jecxz
xor
movsl
outsb
shlb
sbb
popa
stos
xor
pop
jns
mov
jle
sub
enter
cs
xchg
xor
pop
inc
jmp
pop
sub
fistl
dec
sub
adc
test
negb
fwait
ret
iret
clc
loop
cmp
cmc
mov
inc
jo
or
xchg
push
in
repnz
add
pop
leave
stos
jno
xchg
dec
faddl
push
pop
xor
insl
mov
cmp
cs
mov
jns
or
call
stos
lahf
jno
pop
push
inc
popl
and
std
pop
sub
in
dec
push
inc
negb
adc
sahf
out
call
xchg
loope
test
stc
push
icebp
or
stos
cld
lret
mov
xchg
mov
out
pop
in
lahf
subb
fwait
call
mov
push
lret
and
addr16
jle
add
pop
and
daa
push
fistl
out
mov
mov
out
inc
inc
daa
xor
dec
ljmp
pop
jbe
inc
subl
add
cli
iret
aaa
pop
push
out
outsb
das
cmp
and
xchg
test
or
push
mov
sarl
mov
bound
mov
xchg
test
fisttps
jbe
imul
into
mov
lods
mov
cmpsb
cmp
loop
jbe
nop
mov
sub
cmp
jg
sub
inc
mov
adc
pop
adc
icebp
mov
jecxz
shlb
pop
cli
sbbb
stc
insl
lahf
add
arpl
mov
lds
push
or
sub
lods
adc
lret
add
pop
mov
andl
dec
pushf
call
lret
pop
add
mov
xor
jge
xchg
cltd
lret
sub
xor
jo
add
insl
add
fmull
or
repz
popf
jbe
mov
xor
aas
sarl
cwtl
and
inc
test
xor
cmc
notl
leave
push
add
lret
mov
stc
call
aas
out
pop
or
push
arpl
mov
sub
leave
push
ficompl
scas
pushf
lahf
scas
dec
cmp
mov
loop
pop
add
dec
int
fmuls
shll
push
jle
sbb
and
jne
jns
iret
add
add
test
sahf
int
mov
enter
push
xchg
jae
pop
xchg
idivl
in
insb
adc
xchg
xchg
frstor
fidivrl
xor
fs
fs
lret
push
and
inc
cmp
push
adc
mov
lret
testl
mov
das
or
add
divb
leave
mov
mov
cmp
test
xchg
cltd
pop
repnz
repnz
dec
xor
or
xchg
push
das
xor
inc
adc
jae
nop
push
add
pop
xor
xchg
pushf
mov
and
push
das
std
sub
outsb
mov
lods
sahf
sahf
sub
scas
cmp
sbb
das
adc
xchg
sbb
mov
adc
mov
push
mov
mov
in
jp
add
add
push
sub
sbb
dec
push
call
fistps
cs
lret
fildll
mov
aam
adc
loop
inc
inc
sahf
sub
das
jbe
leave
add
arpl
push
add
fdiv
xlat
cmp
push
sbb
adc
mov
or
fwait
arpl
xchg
loop
jnp
cmp
dec
sub
add
jne
pusha
sub
mov
inc
nop
inc
test
lea
push
add
mov
mov
pop
sub
test
push
jo
pop
jge
inc
mov
ret
jo
sbb
cltd
imul
mov
call
sub
and
dec
mov
mov
mov
adc
or
adc
ret
dec
mov
mov
pop
cmp
adc
jmp
push
inc
adc
js
sub
and
popa
dec
push
std
loope
dec
sub
mov
add
test
inc
jnp
xor
xchg
dec
mov
push
ja
rorb
xor
xchg
mov
jg
xchg
ffree
cli
pusha
xchg
out
or
test
mov
xchg
pusha
sbb
sbb
jae
dec
add
and
add
ret
hlt
rolb
jo
sub
bound
cld
xchg
pop
int
addr16
jne
mov
mov
cmp
sub
mov
add
mov
ffreep
pusha
ror
int
hlt
inc
icebp
cmp
xor
dec
aad
ja
cwtl
addr16
jp
and
loopne
dec
dec
cmp
mov
adcl
pop
outsl
nop
mov
loope
inc
in
pop
mov
xor
cmp
mov
ja
add
ret
xor
and
jns
lea
dec
add
sub
xor
fwait
lcall
gs
pop
and
bound
and
pop
xchg
ljmp
pop
lds
cmp
popa
mov
fimull
ljmp
dec
in
push
mov
mov
fcomps
lea
jns
fucom
out
std
les
mov
mov
outsb
mov
mov
cmpsb
adc
cmpsl
testl
mov
push
dec
int
adcl
je
enter
mov
lret
cs
mov
jmp
popa
xor
sub
fbld
push
iret
lods
mov
bound
ret
addr16
sub
xchg
mov
out
inc
dec
jne
fwait
adc
addl
and
outsl
jne
adc
testl
stos
pop
imul
aad
xor
mov
xchg
sbb
jl
sub
fnstenv
push
pop
mov
sbbl
jo
and
jnp
loopne
nop
jae
inc
mov
movsb
mov
xor
fisttpll
xchg
adc
fmuls
ss
jmp
je
push
stos
gs
fwait
int3
loope
std
push
addr16
aad
adc
ja
dec
push
mov
pop
in
lods
dec
lret
insb
xchg
jns
shrl
xor
mov
movb
pop
cmp
daa
jge
popf
jg
lcall
xchg
stos
lods
and
stc
mov
mov
add
inc
adc
out
or
ficoms
je
xchg
and
cmp
insb
inc
adc
push
sub
fldcw
inc
and
fldl
inc
leave
jl
iret
in
cld
adc
mov
adc
fistl
imul
outsl
filds
pop
in
sbb
jae
sbbb
xor
jne
cmpsb
lcall
dec
sub
xchg
lods
dec
xchg
xor
dec
sub
sub
mov
enter
lahf
clc
testl
mov
cmp
js
icebp
int3
jge
clc
ds
movsb
sub
xchg
sbb
popl
mov
dec
cmp
mov
adc
mov
push
jge
ljmp
testb
les
pop
xchg
push
jbe
shll
adc
pop
aad
xor
lods
cmp
mov
arpl
aas
in
aas
in
mov
mov
inc
rcll
xor
daa
sub
sub
xchg
mov
fcomip
data16
test
data16
mov
pop
fildll
jp
dec
push
push
add
movb
mov
pop
out
add
push
xchg
mov
mov
xor
jg
test
pop
jns
mov
mov
jnp
push
jbe
jp
jno
shrl
popa
push
and
mov
jbe
cmovbe
pop
pop
add
jnp
cmp
movsb
mov
cmc
pushf
fidivrs
xor
jl
or
sub
jp
lods
cmp
xchg
mov
dec
jno
mov
xor
sub
idiv
pop
popa
mov
cwtl
xchg
test
jp
jle
mov
popf
mov
sti
fcompl
xchg
cmp
sbb
les
fwait
iret
jo
dec
xchg
or
sub
leave
push
and
mov
out
pop
cmpsw
jmp
or
xor
pop
mov
dec
push
sti
sub
ljmp
jge
jo
mov
shrl
mov
jp
jp
shrl
push
pusha
xchg
adc
mov
push
subb
push
push
push
mov
and
fwait
loopne
sbb
and
pop
pushf
loopne
push
cmp
sahf
xor
popa
lret
xor
cmp
mov
ja
pop
dec
xor
pop
xor
fmull
loop
jns
xor
fcmovnbe
xlat
ss
mov
lods
mov
ds
cmpsl
pop
decb
outsl
mov
subb
or
push
pop
test
imul
std
dec
mov
rol
adc
or
lret
les
pushl
mov
dec
clc
in
xor
andl
xchg
dec
jb
pop
inc
mov
jb
jae
pusha
adc
das
adc
loopne
push
mov
es
jae
jecxz
inc
or
sbb
mov
and
lea
inc
mul
mull
dec
mov
dec
movsl
mov
or
mov
jmp
sbb
ss
mov
inc
lcall
fldpi
xlat
and
xor
jb
and
lret
push
and
inc
dec
fcompl
nopl
sbb
pusha
push
pushf
and
loop
repnz
cmp
mov
je
xchg
xor
sub
insb
lahf
call
popf
icebp
fldenv
or
fcmove
adc
jmp
push
sti
outsl
loope
sbb
outsb
popf
sub
add
fiaddl
rcl
je
xchg
add
mov
mov
inc
add
sbb
nop
jne
sub
mov
dec
push
cmp
ror
lret
xor
inc
jg
mov
sbb
push
dec
or
mov
fistpll
in
pop
psrlq
ss
cmpsb
in
push
jle
pop
cmp
cmc
pop
push
xchg
or
adc
and
mov
jle
inc
ficomps
int
inc
cmp
xchg
push
mov
lahf
bound
clc
xor
cmp
jno
cli
sub
pop
cmp
xor
shlb
int3
jne
mov
jmp
adc
dec
push
add
popf
mov
mov
adc
daa
stos
mov
and
pop
pop
pop
outsb
xchg
ficomps
aad
enter
pop
dec
xchg
sbb
clc
outsb
insl
pop
repnz
xor
xor
aam
xchg
clc
aaa
arpl
lds
test
das
cld
cmpsl
xlat
mov
cmp
push
fimuls
js
sbb
shl
jno
out
je
push
arpl
push
jae
sub
lea
dec
jns
jbe
in
stc
sti
inc
outsl
rorl
or
or
mov
fs
add
jle
mov
add
xchg
mov
mulb
jge
mov
sub
sti
push
push
lret
jne
mov
scas
inc
loop
and
int
inc
daa
ds
lods
xor
pop
and
movsb
push
in
popf
fcompl
mov
fsubrs
pop
push
popf
rcrl
popf
xchg
mov
call
mov
daa
pop
cmp
cmpsb
hlt
pop
adc
movl
subl
sub
shlb
and
push
fsubr
scas
sbb
jo
add
gs
and
mov
cmp
or
out
test
add
mov
sub
mov
mov
in
mov
cmpsl
jge
and
sbb
repnz
fimull
fmulp
in
arpl
frstor
insb
mov
jb
cmpsl
push
adc
movsb
push
aas
ss
lods
or
push
jg
mov
lahf
pop
xchg
repz
add
shll
xchg
mov
xchg
jb
int3
daa
xchg
or
mov
jg
mov
pop
jg
jo
push
fimuls
sbb
adc
sbbb
loop
call
fimull
cmp
or
aam
and
sbb
icebp
fnstsw
out
pop
sbb
jge
fcoms
sbb
mov
out
sahf
push
inc
and
mov
jne
sbb
pop
fwait
push
sbb
int
xchg
test
fcoms
inc
ljmp
sub
mov
loop
mov
ja
call
add
cld
xchg
leave
xchg
push
loope
push
push
add
sbbb
jo
inc
cmpsb
adc
inc
add
push
sbb
dec
addr16
js
sbb
int3
movsb
ds
cld
inc
and
mov
gs
xchg
adcb
outsl
push
shlb
rcr
mov
mov
sbbl
add
push
mov
xor
aas
or
jge
out
mov
loop
and
mov
push
jb
and
jl
sti
push
aam
test
adc
daa
dec
dec
pop
test
jae
mov
loope
rcr
mov
mov
push
cmp
cmp
rorl
lock
xor
shll
cld
jno
mov
stos
int
sub
out
mov
push
in
mov
in
loope
xlat
sub
int3
iret
jne
sub
shll
iret
xchg
int
scas
add
enter
dec
std
mov
repz
jno
and
jno
rcrb
insb
xchg
mov
stc
in
int
sub
or
stos
mov
outsb
cmp
stos
sub
add
aaa
or
jns
iret
jae
lods
das
xchg
stos
sbb
dec
xor
lods
mov
xchg
popf
loopne
push
fadd
pop
mov
sub
cmpsl
adc
mov
add
push
push
mov
loopne
dec
cmpsl
aam
ljmp
faddl
jne
mov
mov
dec
aaa
adc
rorl
or
xchg
xchg
rcrl
pop
faddl
or
cmpsl
loop
jo
pop
and
pop
and
inc
es
insb
pop
adc
push
pop
sub
lcall
aam
sbb
sub
test
outsb
loopne
sub
lahf
push
enter
das
xlat
enter
test
inc
jl
mov
insb
les
jae
test
sbb
add
fiadds
inc
mov
aam
dec
xor
adc
js
iret
leave
loop
dec
or
adcb
dec
mov
dec
pop
in
pusha
cli
xchg
lock
and
jl
in
sbb
mov
shr
pop
xor
xor
test
pop
dec
lcall
shl
xor
cmp
inc
jge
in
loope
cld
dec
addr16
jmp
jne
jo
pushf
inc
out
call
mov
stos
ret
hlt
pop
ror
icebp
test
push
adcb
mov
add
xchg
push
mov
dec
nop
mov
push
fidivl
adc
xor
stos
daa
adc
fs
test
push
or
out
lock
nop
mov
jge
scas
hlt
lcall
jecxz
das
mov
add
push
xchg
notb
int
fisubrs
out
stos
sub
test
mov
aad
popa
movsl
and
pop
dec
mov
mov
repnz
insb
lret
enter
cmpsb
lock
dec
xchg
pop
movsb
ror
lahf
pop
pop
imul
mov
mov
xor
mov
xchg
ds
scas
inc
stc
xor
inc
sbb
pop
pop
fwait
sub
scas
push
ljmp
ljmp
xor
push
arpl
push
repnz
cs
or
add
mov
jno
and
jne
xor
int3
out
pushf
nop
mov
stc
daa
insl
dec
sub
xor
adc
jo
jb
call
fdivs
arpl
stc
sub
add
or
xchg
xchg
mov
aam
mov
std
inc
aam
mov
adc
mov
sbb
jo
inc
mov
push
cli
push
das
lods
adc
inc
movsb
mov
pop
imul
cld
push
jns
sbb
rclb
mov
jns
add
jnp
iret
faddl
sti
rcrl
mov
mov
sub
fisubs
cmp
mov
sti
iret
inc
jp
sub
out
xchg
mov
hlt
daa
call
movsl
rcrl
stc
mov
mov
into
push
fistpl
daa
mov
mov
popa
push
xchg
mov
pop
xor
inc
mov
jns
sub
rcr
pop
pop
cmpsl
cltd
fsubrs
aad
push
pop
mov
int
mov
dec
lcall
clc
inc
in
xor
arpl
or
and
push
jnp
and
cli
inc
mov
or
test
add
in
test
out
push
xchg
push
addr16
push
dec
lret
inc
icebp
arpl
flds
xchg
sbb
xchg
mov
mov
gs
pop
ljmp
push
imul
mov
in
pop
inc
fdivrp
movsb
in
fsubl
sbb
cmc
xchg
mov
outsb
cmp
add
rorl
push
cmc
lods
popf
mov
stc
in
cmpl
adc
in
sahf
les
mov
shrb
mov
fcomp
xchg
xchg
dec
jmp
inc
insb
mov
and
add
pop
cs
jle
dec
dec
mov
inc
fdivs
adc
scas
mulb
lcall
or
out
push
xchg
jns
mov
push
mov
ret
xchg
add
xor
or
pushf
pushf
stos
popa
xor
xchg
dec
test
insb
mov
jns
mov
out
and
loope
cwtl
loop
lret
add
aad
in
inc
hlt
in
adc
daa
pop
mov
idivw
int3
iret
out
xchg
jecxz
lret
add
push
jb
cmp
popf
out
aaa
pcmpeqd
subb
xchg
xor
add
ror
jge
adc
jb
inc
cmp
aam
test
into
mov
sub
push
dec
adc
cmp
dec
movsb
pop
dec
xor
mov
fimull
jns
mov
cmc
mov
mov
shl
insl
xor
repnz
out
cld
fsubr
xchg
aad
aaa
push
testb
jmp
imul
int
push
inc
fs
inc
cltd
stos
xchg
cmp
in
or
xchg
fnstcw
enter
add
rolb
gs
mov
and
inc
and
mov
pop
fwait
icebp
test
mov
push
xchg
push
out
xor
out
sub
xor
inc
nop
push
es
push
xor
sti
stos
xor
ss
inc
sub
mov
xor
inc
cmpb
cmp
sub
testl
mov
stc
mov
cwtl
ffree
and
adc
mov
insb
shrb
je
into
daa
xlat
adc
loop
cmp
loopne
xor
scas
mov
shl
mov
imulb
movsl
ss
ss
lock
adc
call
and
dec
sub
sahf
movsl
push
sbb
shrl
jae
loopne
int3
or
das
mov
dec
cmpsl
fmull
rorb
cli
inc
push
mov
loop
lods
in
or
inc
add
sbb
adc
pop
mov
pusha
sbb
sub
dec
xchg
pop
insb
pop
xchg
lret
sbb
out
daa
lods
adc
in
sbb
pop
inc
cmp
add
inc
mov
movsl
shrb
dec
cmp
arpl
clc
push
sub
iret
push
inc
stc
push
cmpsl
imul
jp
mov
or
xor
sbb
clc
lods
sahf
pusha
loop
xchg
inc
in
insl
push
ror
pushl
mov
test
jbe
lds
test
rcrb
lret
shll
lcall
cmpsb
fucompp
sub
mov
adc
xchg
icebp
xlat
and
mov
nop
ret
inc
fs
mov
ret
and
imul
out
mov
add
test
add
data16
pop
pop
scas
jns
imul
out
scas
andb
inc
scas
imul
fcomps
mov
cld
pushf
inc
inc
aas
loope
push
cmc
and
pop
inc
push
sub
test
fnstenv
ds
xchg
cmp
setb
mov
push
inc
test
das
xor
mov
pop
out
sbb
enter
outsb
sbb
push
testb
and
cli
lahf
fwait
mov
xchg
gs
dec
or
and
lret
push
jb
lcall
inc
rorl
push
xor
int3
pop
test
sbb
xchg
lcall
test
aad
dec
leave
fnstenv
or
add
ror
inc
les
push
sbb
cltd
mov
dec
lea
lods
ss
cmpsb
pushf
mov
and
ret
xchg
mov
mov
mov
stc
lods
sub
outsl
sub
xchg
sub
cli
mov
sti
mov
cmpl
cmp
stos
lock
invd
jp
xchg
xor
aad
ds
cmp
xchg
lods
sahf
pop
inc
or
cmp
fcomps
add
push
sub
frstor
scas
push
lret
mov
lahf
xchg
movsl
cmp
adc
dec
cmp
scas
ja
pop
inc
jae
mov
movl
pop
jno,pt
push
lret
inc
cmp
mov
push
jmp
xor
movsb
dec
cmp
les
popf
out
es
sbb
mov
add
pop
push
arpl
pop
cmc
cmp
stos
mul
mov
movsl
dec
out
sub
push
and
xchg
sub
imul
push
add
cwtl
fidivrl
jmp
adc
dec
mov
jge
pop
mov
mov
rcrl
das
xor
mov
fdivl
adc
push
in
iret
popa
fadd
shll
cmp
pop
icebp
test
jl
insb
das
inc
sahf
jp,pn
call
dec
pop
fisubs
loop
sub
add
xchg
push
mov
or
push
jns
inc
popa
mov
jge
or
movq
insb
repz
test
hlt
mov
push
fistps
dec
mov
aaa
pop
popf
xor
dec
cmpsb
cwtl
pushf
mov
xchg
nop
sarl
or
jo
and
js
mov
ror
btr
loope
mov
sub
xor
stos
addr16
mov
rcll
pushf
and
dec
add
outsl
xchg
or
filds
push
xor
fisubrl
scas
xchg
adc
sbb
ret
inc
cltd
or
incl
aaa
cld
cld
insb
testl
push
das
inc
rcll
decl
xchg
jnp
mov
repz
adc
out
pop
lock
sub
cmp
add
lds
into
aam
push
sbb
cmpsl
in
pop
pop
pop
and
ficompl
cwtl
in
jb
jae
add
mov
jne
cli
sbb
mov
or
cmp
jp
je
xor
imul
add
xchg
shlb
jae
sbb
in
add
insb
pop
lahf
sbb
xor
and
add
adc
xchg
lcall
lret
aam
mov
inc
xlat
pop
adc
into
xor
xchg
add
ja
dec
or
cmp
or
lret
cmp
or
pusha
popa
je
cmp
je
loopne
pop
shl
mov
mov
inc
inc
ret
into
xor
scas
loop
adc
mov
icebp
mov
add
and
add
or
jmp
and
dec
xchg
inc
and
jo
pop
inc
es
mov
pop
xor
mov
loope
neg
jle
xor
ficoml
sbb
es
xor
imul
push
xchg
in
xor
jnp
add
jbe
outsb
inc
jp
adc
dec
mov
fcoml
outsb
stos
dec
push
pop
out
jge
popf
push
push
mov
ret
push
pop
push
popf
sub
test
in
inc
xchg
shrl
rcr
pop
inc
fldcw
mov
cmc
aas
inc
or
dec
inc
mov
ja
dec
push
addb
mov
test
sbb
adc
mov
mov
xor
dec
sub
movsb
ror
adc
mov
inc
jle
nop
inc
jmp
cmovb
fdiv
gs
jno
pop
xchg
fidivs
insl
imul
mov
ffreep
mov
jne
mov
ret
cli
dec
mov
in
out
dec
xor
test
cmp
pop
in
mov
lods
std
nop
ds
enter
cmp
scas
dec
scas
mov
outsb
sbb
push
loop
cmp
push
sub
leave
inc
cmp
inc
xor
ss
testl
gs
std
das
fs
push
js
pop
dec
ljmp
jbe
imul
inc
je
sub
pop
mov
jbe
mov
mov
test
pop
dec
data16
aaa
push
and
movsb
cmp
inc
cmc
test
jne
push
push
dec
aam
aad
rol
inc
insb
repnz
inc
jae
shll
mov
insb
inc
movsl
mov
pop
pop
or
fnstcw
push
outsb
mov
cmp
repz
lret
adc
sarl
inc
popf
imul
mov
dec
sbb
loopne
outsb
fcoml
out
sbb
call
out
aas
pop
inc
rclb
xchg
fs
lock
dec
push
divl
popl
adc
dec
test
jb
xor
dec
cmp
mov
and
cmpsb
mov
inc
ja
pushf
pop
xor
std
add
ljmp
addr16
mov
jbe
loopne
push
push
jne
push
inc
hlt
and
add
jb
inc
call
cli
adc
mov
clc
inc
sbb
xchg
sti
push
stc
rcrb
xor
fnstcw
mov
xchg
sub
adc
pop
cld
outsb
daa
push
ss
lret
dec
xchg
dec
lods
sub
sub
mov
mov
cwtl
mov
push
outsb
mov
mov
pusha
xchg
lods
fidivrs
mov
and
repnz
js
sbb
mov
notb
shll
and
lock
ja
icebp
push
push
and
scas
pop
fadds
or
out
imul
sbb
mov
xchg
push
and
fidivrs
pop
test
add
shll
repnz
cwtl
add
sarb
mov
sbb
jmp
sub
mov
push
enter
fs
push
dec
jl
push
mov
xchg
sub
jbe
xchg
test
adc
rcll
pop
flds
insb
jecxz
cld
push
scas
cmp
js
cld
cmp
sbb
dec
push
push
fistps
pushf
dec
xor
popf
cli
into
ds
mov
jl
dec
jae
movsb
sbbb
fcmovne
and
pop
pop
add
mov
ret
add
pop
and
pushf
fcoml
sub
dec
inc
sub
jno
push
sbb
lahf
mov
push
andl
dec
mov
scas
cmp
xor
lret
adc
cmp
mov
lods
ficoms
pop
movsb
mov
into
or
shlb
push
idivl
and
sub
cwtl
icebp
mov
rclb
mov
add
aad
add
mov
xor
and
xchg
inc
jg
out
push
jo
adc
and
jle
add
jg
cmp
dec
rol
jecxz
push
ret
adc
jns
fcoms
cmp
cwtl
sub
lret
movsl
into
popa
into
js
xlat
xchg
ret
call
mov
daa
pop
clc
loope
mov
sub
test
cmp
int
arpl
jmp
jecxz
mov
mov
sbb
push
arpl
and
push
push
sti
add
hlt
movsl
shr
int3
scas
mov
enter
imul
ret
xchg
xchg
ss
mov
cld
insl
xchg
dec
pop
cmc
insl
rcrb
jp
ljmp
sahf
cmpsl
pop
aad
loopne
cmp
jp
loopne
xchg
clc
int3
int3
dec
mov
les
outsb
and
dec
out
outsb
pop
adc
insl
cmp
add
jg
xchg
arpl
bound
mov
call
dec
imul
jns
mov
pop
lea
push
xor
mov
sarl
leave
mov
mov
xor
sbb
dec
jns
xlat
xor
aam
icebp
push
dec
and
adc
pop
inc
jge
stc
std
sub
lahf
mov
dec
test
repz
test
out
and
jbe
call
mov
adc
mov
sbb
mov
mov
mov
pop
jne
insb
cmp
fidivl
out
cld
mov
xchg
rol
insl
dec
xchg
clc
icebp
adc
xchg
sbb
cmpsl
xlat
add
pop
fs
fwait
jnp
loope
fxch
popa
xchg
dec
inc
js
in
roll
push
aad
xchg
mov
loop
cmp
adc
add
dec
fidivrl
dec
popf
sbb
add
or
pop
fidivl
ficoms
mov
lea
xchg
gs
sub
mov
push
and
pop
cs
not
jnp
push
repnz
loopne
cltd
out
add
pop
pop
pop
xchg
adc
xchg
push
or
add
fidivrs
popa
sti
out
idiv
cmp
aam
jbe
xor
mov
sub
movq
xor
sub
arpl
cmc
jmp
pop
nop
cmc
xor
jo
push
cmp
add
sbbl
in
stos
jno
xchg
mov
xchg
sbb
mov
jmp
and
sub
xchg
mov
les
iret
dec
arpl
jo
push
jo
inc
jecxz
jno
adc
mov
sahf
mov
cmp
cmc
mov
movb
adc
add
aaa
in
fnstsw
clc
dec
mov
sub
insb
in
jge
arpl
pop
lahf
fdivs
daa
imul
inc
jne
and
inc
and
push
test
mov
push
sub
push
or
sub
pop
or
push
xchg
fiadds
jl
mov
push
fistl
movsb
lahf
push
xchg
xchg
jl
out
es
lcall
les
jne
loopne
es
in
imul
add
int3
add
cwtl
in
xor
sub
std
push
jp
daa
xchg
push
stos
add
cld
mov
push
call
pop
xor
mov
call
subb
outsb
or
dec
push
push
jne
or
lret
xchg
cmp
push
mov
aaa
inc
ret
mov
arpl
std
add
popf
push
pop
inc
mov
sbb
lds
decl
loop
inc
in
loop
je
dec
sahf
add
arpl
inc
fisubl
push
sbb
ret
pop
outsb
sub
mov
es
ja
xor
jo
jle
add
jmp
outsb
pop
arpl
ret
fbld
fadds
mov
bound
repnz
or
jmp
inc
jecxz
insl
fs
loop,pt
popf
outsl
push
jno
inc
cmc
mov
daa
mov
das
dec
cmp
xchg
push
inc
lcall
repnz
push
test
jle
or
pop
inc
pop
fucomi
add
pop
iret
add
aam
xor
ss
test
mov
inc
les
ljmp
push
shlb
lods
add
lds
out
jmp
cli
jl
pop
push
pop
mov
movsl
mov
jns
inc
xchg
dec
mov
mov
inc
hlt
mov
sbb
jb
outsl
cmp
pop
or
cmp
outsl
loop
jmp
pop
arpl
xchg
test
and
sbb
insb
aas
sub
xchg
mov
mov
push
int3
and
data16
rdtsc
pop
cmp
leave
sbb
pushf
lcall
out
sbb
ljmp
push
rclb
out
xor
hlt
xchg
pusha
xchg
cmpsb
clc
lea
pop
xchg
add
movsl
ds
popa
std
sbb
pop
sahf
push
dec
push
inc
mov
fdivr
inc
inc
xor
cmpsb
in
push
cwtl
xchg
shrb
es
in
test
repz
push
subb
gs
push
and
and
stos
and
mov
mov
bound
and
aad
cmpsb
lods
mov
xor
sbbl
add
add
cld
cmp
cli
sub
fnstenv
fs
and
outsb
push
cwtl
fisttpll
push
std
mov
add
lods
and
cmp
mov
push
cwtl
iret
mov
and
out
mov
pop
jg
dec
mov
das
mov
or
lahf
xlat
inc
mov
push
call
cmpsb
scas
or
das
jmp
jp
lret
ja
lods
pushf
insb
bnd
test
mov
or
and
mov
mov
adc
sub
push
je
xchg
add
arpl
ret
mov
sarb
stos
lods
loopne
dec
jecxz
adc
push
movsl
jmp
mov
add
out
or
insb
jb
push
lahf
popf
mov
jae
flds
and
lahf
in
fcoms
adc
or
mov
les
insb
add
jae,pt
sub
adc
cmp
pop
mov
imul
std
pop
or
sbb
mov
test
dec
enter
mov
jae
nop
psraw
xchg
js
jg
push
add
jg
rcrl
nop
bound
sbbb
or
enter
jo
fmuls
lock
pop
dec
fs
scas
sbb
cltd
aas
push
aas
mov
popa
push
sub
inc
sahf
xchg
inc
xchg
out
and
inc
mov
xchg
shll
adc
mov
cmpb
ret
xor
jge
add
mov
mov
outsb
aam
divl
clc
xor
gs
push
xchg
nop
mov
xchg
jo
push
test
in
nop
ljmp
nop
mov
pop
adc
push
das
mov
jmp
mov
jge
scas
push
out
rclb
mov
out
inc
pushf
jecxz
lret
cmp
push
repnz
mov
xchg
fbstp
movsb
ds
push
sbb
arpl
mov
lahf
jbe
andb
icebp
stos
in
xchg
cmc
or
test
pop
daa
or
loop
in
adc
pop
jge
or
push
pop
js
test
into
jae
dec
and
dec
inc
les
adc
xchg
je
jo
jo
push
push
imulb
dec
mov
cmc
inc
inc
adc
lret
addr16
popf
arpl
movsb
popl
into
gs
sbb
fiaddl
push
and
sub
aas
sbb
push
xchg
sbb
ret
pop
jecxz
push
je
sbb
lods
fwait
jp
sbb
sbb
push
mov
aad
arpl
and
outsl
jl
xchg
push
and
scas
pop
jle
sbbl
jo
mov
xor
into
add
lock
push
fnsave
sahf
stos
scas
jmp
ja
cmpsb
and
mov
lcall
pop
inc
fucomp
and
dec
push
sub
mov
cmc
bound
out
mov
stos
jle
mov
repz
das
cmc
bound
dec
scas
or
imul
sbb
cmp
fxch
mov
enter
push
mov
fisubl
lds
pushf
jmp
fdivs
jb
outsl
or
pusha
sbb
jbe
add
xchg
jecxz
loopne
imul
cld
adc
sbb
loope
dec
daa
pushf
aad
sti
add
pop
inc
test
imul
xchg
mov
imul
jle
push
aaa
adc
and
xchg
jbe
fisubrs
movb
fistpl
mov
mov
loopne
pop
popf
sbb
cli
insl
mov
in
outsb
stos
sbb
add
fs
aad
mov
sub
push
aam
cmp
mov
push
pusha
xorb
cmpsl
dec
lret
cmp
inc
jno
loope
in
fcompl
sub
cmp
push
daa
xor
shrb
repnz
mov
and
stos
mov
inc
inc
nop
loope
aas
ds
ret
cli
out
out
orl
andb
or
loope
jge
lds
lds
pop
mov
addr16
inc
add
or
fdivp
iret
xor
push
jge
stc
mov
inc
shr
adc
daa
add
insl
out
add
dec
cli
mov
inc
pusha
cmovo
imul
andl
xor
movsl
sbb
lea
jbe
dec
cld
xchg
pusha
mov
sub
sbb
mov
xor
pop
mov
dec
das
xor
sbb
sbb
test
fcom
cmp
in
popf
mov
adc
and
add
mov
nop
imul
fmuls
pop
subl
inc
xchg
nop
mov
imul
test
xor
iret
lods
dec
pmullw
scas
lds
loopne
push
loopne
loopne
cmp
into
fwait
in
divl
mov
pop
jle
in
mov
xor
iret
stos
sbb
fcomps
sub
test
jne
add
in
mov
cmp
ret
inc
lcall
stos
or
sbb
xchg
jecxz
adc
js
dec
jle
pusha
push
aas
mov
decl
out
lretw
and
mov
add
jg
pop
xor
xor
cmp
cmp
jle
daa
mov
ljmp
dec
nop
xchg
repz
push
ljmp
inc
adc
add
mov
pushf
and
fistpll
sub
xchg
lds
cld
inc
mul
dec
sub
int
mov
xchg
jle
add
shrb
lahf
xchg
push
mov
fnsave
xchg
jnp
mov
and
mov
push
cmp
fnstenv
xchg
paddw
shl
jg
das
in
data16
mov
cs
mov
outsb
sbb
push
in
dec
ret
out
lret
lods
std
cmp
mov
adc
inc
jecxz
xor
nop
push
into
sahf
mov
mov
mov
push
mov
movsb
jge
ds
fldcw
loop
imul
les
pop
arpl
ss
sbb
outsl
mov
mov
mul
inc
dec
fucom
push
mov
cltd
inc
inc
sbb
movsb
or
mull
jbe
and
xlat
in
push
test
jmp
stos
les
out
jl
loop
fisttpll
int
cmpsl
andb
andb
xchg
xchg
outsl
jmp
sub
outsb
lods
out
xchg
push
rcr
inc
andl
mov
lret
popf
fwait
cmp
cmp
movsl
mov
jl
inc
or
testb
sbb
out
xchg
iret
adc
sti
mov
ds
roll
xchg
push
push
rcll
jle
sbb
movsb
adc
sub
sub
sub
aad
mov
pushf
or
call
test
rclb
aaa
in
ret
mov
movsb
hlt
fs
lds
notb
mov
dec
gs
inc
xchg
aaa
xorb
and
jle
out
xchg
mov
xchg
sbb
jecxz
insb
out
out
cwtl
in
add
adc
xchg
and
stc
mov
leave
pop
add
inc
cmpsl
pop
mov
fistpll
xacquire
cs
adcb
bound
fcomps
call
xchg
movl
inc
orl
jmp
aad
push
or
movsb
fnsave
pop
cmpsb
mov
adc
push
daa
test
fmull
mov
push
pushf
arpl
clc
adc
imul
mov
pop
inc
outsl
fnstsw
mov
popf
pop
mov
loopne
dec
ror
jae
imulb
mov
dec
adc
call
inc
cmpsl
call
cwtl
daa
sbb
mov
adc
xchg
xchg
xlat
adc
jb
movl
xchg
hlt
mov
push
pushl
aad
rcl
pop
popa
push
pushf
rol
push
mov
sub
inc
cli
push
push
and
mov
mov
jb
jne
xor
fistpll
mov
sbb
or
mov
xrelease
cmp
cmc
xchg
mov
inc
xchg
in
mov
jecxz
stos
rcrb
aad
or
je
jae
sub
mov
ret
pop
sbb
shrl
push
mov
je
into
sub
mov
gs
cli
shl
int3
mov
adc
daa
rcrb
std
xor
test
in
mov
negb
cmp
xchg
lods
pop
fnstenv
push
divb
scas
imul
fs
pop
cli
dec
inc
mov
jecxz
inc
loopne
ja
setl
leave
cmp
mov
insb
adc
imul
mov
cmp
imul
xor
dec
lea
pop
loop
stos
pop
inc
cmp
add
or
add
stos
pop
icebp
adc
xor
aam
hlt
sarb
clc
inc
add
dec
cmp
sbb
adc
inc
mov
loop
cmp
xchg
idiv
lods
int
xor
mov
call
nop
in
data16
jne
cmp
int3
call
test
out
shlb
adc
mov
mov
cwtl
negl
xchg
dec
xlat
loope
nop
mov
cld
sbbb
and
aad
in
test
mov
insb
xchg
inc
jmp
iret
aas
es
movsb
mov
add
movb
pop
lret
into
cmp
mov
push
dec
jge
or
cwtl
xor
sub
stos
fistpll
stos
icebp
rol
xor
add
jne
add
jecxz
in
dec
add
mov
adc
push
and
pop
dec
fdivrl
xor
xor
cmpsb
mov
push
push
mov
sbb
sub
lret
xor
xor
insb
mov
movsl
xor
in
push
int
sbb
int
xchg
aaa
loopne
inc
mov
out
push
loopne
push
push
and
fstpt
xchg
ficompl
push
in
add
fwait
cmp
jle
xor
out
movsb
and
inc
xlat
jne
das
sti
shrb
sbb
dec
add
mov
into
xor
movsb
jp
dec
dec
xor
pusha
aas
loopne
sbb
push
pop
adc
rorb
repz
add
ret
adc
pop
xor
test
lea
in
aas
push
xchg
fidivrl
xchg
mov
fstl
loop
cmp
sbb
movsl
cmc
loopne
sbb
stos
std
or
nop
adc
dec
std
idiv
loopne
dec
and
jae
jbe
push
insb
push
dec
cmp
arpl
inc
scas
push
in
jne
jp
int
neg
cltd
outsb
adc
cmpsl
insb
xchg
test
popa
fwait
add
cmp
test
int3
jecxz
inc
movsb
lods
mov
cmc
add
das
inc
inc
mov
outsb
div
pop
mov
inc
or
aas
insl
aaa
dec
imul
and
adc
dec
xchg
arpl
jnp
push
and
out
push
loop
push
inc
bound
popf
pop
dec
movsb
jp
inc
int3
stc
scas
mov
jp
aaa
or
xor
mov
popa
rorb
lods
ds
adc
cs
dec
js
push
lret
xchg
push
adc
mov
fldt
push
adc
adc
add
les
test
ror
inc
js
add
xor
jb
rcl
popa
shrb
shlb
test
enter
sub
adc
lds
cltd
and
mov
out
fwait
mov
pop
ss
mov
lret
mull
and
adc
incb
lcall
xchg
shll
shlb
inc
addr16
mov
inc
pop
mov
xchg
xor
mov
sub
popf
dec
fiadds
pop
imul
repz
inc
sbbl
add
lods
mov
mov
mov
outsb
cmp
fs
mov
lret
popa
sar
push
ja
out
mov
cmp
push
in
dec
sbb
stc
jle
test
pop
and
addr16
iret
mov
rcrl
add
push
fisttpll
data16
orb
cltd
in
inc
pop
cmpsb
cwtl
idivb
xor
lahf
add
cmp
scas
or
mov
jge
inc
fcmovnb
popa
daa
cmp
in
in
aad
sub
cli
jmp
aam
nop
xchg
sarb
jg
jmp
and
bound
fisttps
out
movsb
out
pop
adc
add
out
movsl
xor
xchg
ficomps
mov
cmp
xchg
dec
adc
mov
lock
sbb
aaa
adc
jo
mov
addb
mov
mov
push
inc
hlt
arpl
int
ret
pop
shr
pop
repz
jb
adc
jb
cmpl
jg
xlat
sarl
jns
mov
lea
in
pop
adc
hlt
sar
rol
ds
sub
int3
movsl
cltd
test
rorb
out
mov
mov
mov
iret
pop
xchg
repnz
popf
pop
pop
nop
mov
jmp
std
xor
jne
int
or
test
pop
rcrl
imul
push
cmp
ret
stc
mov
push
xchg
mov
add
mov
pop
inc
push
inc
push
daa
test
and
sub
dec
mov
jp
sub
xchg
pop
sub
enter
adc
fnstcw
inc
imul
nop
dec
xor
sub
mov
cltd
or
inc
mov
adc
jo
or
or
test
bound
enter
mov
sbb
adc
or
hlt
in
gs
mov
lahf
arpl
lret
ss
ret
lods
sbb
les
push
mov
push
xchg
sti
inc
test
push
sub
lds
hlt
cmp
pusha
inc
cwtl
out
mov
or
neg
lret
js
push
push
and
cli
push
imul
fldenv
fsubrs
fs
in
mov
mov
into
rcrb
les
add
and
pop
flds
xorb
push
mov
jmp
inc
pop
cmc
xchg
inc
shll
xchg
sub
dec
jae
and
pmovmskb
mov
cmp
jnp
shll
push
outsl
dec
push
fistl
push
sub
cltd
push
in
dec
xor
jb
jae
notb
inc
lret
sbb
cli
sbb
rorb
inc
xor
pushf
into
push
andb
adcb
xchg
and
sbb
cld
xchg
stos
add
mov
je
cltd
and
xor
sti
repz
push
insl
push
xor
adc
out
or
dec
pop
or
xor
inc
dec
push
mov
jno
sbb
dec
xchg
scas
data16
clc
lcall
adc
out
lea
insl
or
jp
in
pop
loop
lret
jbe
mov
jbe
inc
cmp
sub
mov
icebp
push
loop
inc
cmp
push
xchg
clc
repnz
ss
push
xor
push
add
int3
cltd
and
adc
fstpl
adc
dec
fildll
and
xchg
mov
inc
add
in
jl
cmp
loop
shlb
sbb
fistpl
test
test
sub
jg
push
enter
mov
pop
xor
jns
sbbl
aaa
aad
ror
in
cs
xchg
mov
nop
or
bnd
test
je
into
mov
jge
fdivr
dec
push
mov
testl
lret
loope
sub
or
and
or
inc
mov
mov
or
cmpsl
mov
into
shlb
aad
xchg
mov
sub
lods
nop
pusha
lock
movsb
mov
xor
outsb
lahf
movsb
fistl
jg
nop
in
sbb
out
out
test
adc
sarb
xchg
aas
pop
sub
add
xor
fcomp
cs
mov
out
pop
mov
push
fcmove
mov
outsl
int
sbb
fisttpll
shl
pop
ds
sbb
lods
pop
das
cmp
jne
jno
cmp
sbb
addr16
jge
std
inc
arpl
fsubl
add
movswl
call
sub
push
jmp
nop
ret
xchg
pushf
add
cwtl
and
inc
sub
push
pusha
or
aad
adc
test
sahf
mov
dec
imul
jge
xor
daa
pop
xorl
jbe
ljmp
mov
ffree
push
dec
dec
sbb
and
stc
dec
pop
push
ljmp
dec
test
lret
mov
leave
add
fs
sahf
test
mov
jnp
shlb
add
and
mov
aad
js
sbbb
popa
out
cwtl
data16
or
testb
xlat
lds
movsl
push
pushf
sbb
push
sbb
gs
add
push
jno
cld
outsl
pushf
iret
popa
dec
or
and
add
sub
push
and
fwait
jle
mov
lahf
aaa
adc
inc
pop
pop
inc
inc
push
scas
and
scas
dec
add
into
jl
jns
jp
pop
popa
sbb
cmp
adc
scas
sub
mov
push
out
or
arpl
xor
sub
test
dec
leave
insl
repnz
pop
hlt
pop
repz
leave
icebp
aad
jge
jbe
rorl
in
popa
bound
mov
gs
mov
cmp
shll
and
rorl
int
pop
sti
add
inc
push
push
dec
sub
add
push
daa
stos
and
mov
push
fucomp
nop
jp
or
pop
sbbb
imul
out
pushw
push
ficoms
push
jle
sarl
dec
data16
rcl
mov
xor
clc
sbbb
xchg
and
push
cwtl
clc
mov
fwait
popl
ds
or
mov
fildl
addl
sbb
cwtl
mov
aas
or
jmp
imul
loop
xor
aaa
mov
inc
popf
cs
jge
popf
mov
fbld
xchg
test
aaa
xor
ret
or
xchg
dec
test
sub
xor
popf
jns
mov
aaa
sub
adc
jbe
inc
call
out
stc
jmp
mov
adc
fwait
sqrtps
push
xchg
fs
cmp
loope
cmp
adc
cmp
mov
shll
or
ficoms
outsb
neg
cmpsb
sahf
fsubrp
je
xorl
mov
and
and
mov
jp
mov
xor
cmp
mov
jb
jae
lods
and
inc
scas
out
push
push
add
lret
cmp
fsubs
cltd
fildll
push
scas
lds
sub
ljmp
dec
mov
int3
dec
jno
ss
into
mov
xor
addr16
insb
push
push
movsl
inc
repnz
push
cli
xchg
mov
sub
out
fiaddl
cmpl
dec
test
mov
dec
xor
sub
cmp
dec
add
repz
test
jb
insl
das
push
cmc
sub
pop
rolb
test
pop
lods
push
bound
outsb
insl
dec
sub
pushf
outsb
mov
mov
pop
cmp
sbb
dec
call
sub
lock
out
inc
dec
pop
popl
ffree
repz
xor
mov
inc
je
adc
and
adc
push
sub
pop
ret
lods
adc
stc
mov
lret
xor
mov
fnsave
add
aam
test
xchg
orl
adc
nop
sbb
mov
dec
enter
test
sub
mov
and
pop
movsb
jp
xor
popa
jb
ret
lret
inc
pop
jns
or
mov
xchg
outsb
pop
fimuls
inc
or
int3
in
pop
outsb
adc
sub
imul
cwtl
mov
test
push
out
sbb
cmp
repz
inc
push
sbb
cltd
rcl
xor
lahf
mov
popf
in
cmp
test
inc
cmp
jnp
cmp
test
in
fisttpll
sahf
push
pushf
add
and
scas
sbb
fdiv
lock
cwtl
dec
scas
cs
lea
cld
cmp
ss
cmpsl
mov
xchg
mov
in
pushl
outsb
add
pop
dec
stc
inc
mov
cwtl
lahf
cmp
aaa
sub
fstpt
mov
aam
xchg
stos
cmp
pop
add
lea
fdivr
and
xor
rorl
cmp
mov
sahf
shlb
cmp
jmp
test
push
sub
andb
pop
popa
adcb
repnz
xchg
daa
jno
lock
add
cwtl
push
ds
mov
cmp
jo
fsubs
adc
dec
cmpsl
into
mov
ss
and
cmp
outsl
adc
lret
in
mov
pop
xlat
lock
aad
push
xor
push
sub
dec
jne
mov
lods
ret
push
loop
inc
xor
lahf
das
mov
cmpl
push
jl
mov
jmp
inc
mov
and
hlt
lahf
iret
nop
or
pop
scas
in
mov
popa
mov
hlt
sbb
xchg
rcrl
in
push
dec
inc
sub
cwtl
mov
fucompp
das
shll
pop
cmp
cmp
leave
popf
negl
jae
test
mov
cmpl
add
xchg
xchg
inc
fdivrl
push
inc
push
or
push
push
jg
ljmp
ficompl
cmpsl
cld
cmp
insl
ja
mov
sti
lock
orb
insl
or
cmp
call
jg
sbb
mov
sbb
shrb
sub
imul
hlt
lret
mov
test
push
add
cmc
xchg
sbb
clc
dec
mov
push
sub
gs
sbb
out
repz
sarl
aam
hlt
sub
mov
pushf
xor
push
lahf
xor
les
ljmp
add
jnp
lea
and
aad
push
inc
cmp
rorb
js
int
lret
push
push
js
xchg
rcrl
sahf
stc
sub
lret
int3
inc
dec
cmpsl
push
mov
pushf
mov
std
mov
xor
xor
test
mov
cmp
clc
js
add
push
sbb
dec
fdivl
ficoml
mov
cmp
jo
xchg
dec
inc
fwait
and
lock
push
les
and
mov
and
into
mov
in
add
fldenv
mov
loopne
mov
pop
or
or
adc
or
fwait
sbb
fadds
fistpl
add
xchg
inc
es
std
dec
cmp
stos
popf
andl
or
ss
aas
pop
in
push
cmp
dec
and
jae
fstpl
shrl
jmp
loope
add
popf
dec
add
rolb
mov
pusha
test
mov
inc
adc
cmc
je
and
cmpsl
insl
idivl
cmpb
and
lret
add
gs
xchg
cmp
adc
aas
sub
mov
sbb
and
push
push
hlt
dec
cltd
outsb
repz
shll
lods
ja
push
sbbb
push
mov
mov
xchg
mov
sbb
jmp
pop
loopne
cmp
repz
cmp
push
fsubr
and
cmp
fidivs
push
and
aaa
hlt
add
sub
push
pop
sbb
ss
popf
daa
mov
and
repnz
hlt
mov
jge
or
out
ret
insl
mov
loopne
sbb
jmp
out
mov
shr
sahf
sub
xor
test
leave
fsubl
inc
and
ds
jne
or
push
rcl
call
pop
push
dec
or
push
xchg
out
lods
cmp
fnstenv
lret
stos
adc
xor
push
xchg
fcmovnbe
jge
rcrb
rorl
xor
pusha
fsubrs
xchg
push
shl
les
mov
and
stos
movl
das
xor
sti
cmc
push
shrl
cmpsb
push
and
and
or
js
outsl
lahf
sbb
mov
pop
push
fildl
pop
push
ljmp
dec
sbb
cmp
or
cld
filds
lret
jns
leave
cmpsb
xlat
les
enter
jb
loopne
jle
fmulp
fstl
cltd
xchg
dec
loop
dec
daa
sbb
js
jge
lret
push
lock
jb
fwait
pushf
pop
cs
ret
mov
mov
pushf
dec
jnp
sub
lahf
and
aad
cmpsb
cmp
or
push
push
jo
lea
sub
pop
mov
mov
cmc
inc
andb
imul
outsb
bound
lcall
mov
mov
cmp
mov
mov
pop
dec
or
sbb
inc
movsl
rep
out
ss
dec
pop
xor
or
push
fcomps
xchg
enter
aad
subl
mov
negb
mov
test
fdivrl
dec
negl
addb
xchg
sbb
fldcw
aas
inc
xchg
repnz
xchg
xchg
cmpsl
or
jecxz
shl
add
out
loopne
inc
ret
jp
addr16
lods
xor
jecxz
fsubrl
add
test
addr16
jg
jbe
pusha
dec
in
cmp
fsubs
mov
jo
cmpsl
inc
xchg
mov
sub
add
aad
mov
ret
dec
loope
dec
adc
fldenv
push
pop
ss
cmp
sbb
rcll
out
mov
out
cs
pop
sub
xchg
fcomps
or
mov
aam
fdivrs
shll
imul
addr16
fsub
clc
das
je
cmpb
add
xor
push
jge
mov
xchg
lods
stos
inc
pop
movsl
fucomi
fbld
mov
fs
test
and
imul
lods
inc
mov
cwtl
mov
xchg
jge
lret
imul
ror
imul
mov
xor
adc
cmpb
pop
pop
adc
adc
jb
leave
sbb
int3
sbb
mov
cmp
outsb
and
pop
icebp
or
daa
jmp
test
hlt
pop
mov
sub
or
cltd
pop
jne
jb
xchg
ret
ret
daa
dec
repnz
andl
ds
dec
dec
mov
dec
or
pop
aaa
jne
arpl
enter
xor
cltd
arpl
stos
in
mov
xor
stos
mov
cmp
out
xlat
in
adc
and
stc
inc
cmc
roll
ficoms
push
cmpsb
loope
leave
clc
sbbl
inc
fldenv
xor
aaa
je
and
loopne
sarb
xlat
into
xorb
adc
sbb
fstps
int3
arpl
jae
sarb
lods
cmpsl
imul
inc
dec
mov
mov
imul
loope
and
xor
mov
xor
push
cmpsl
nop
mov
fwait
and
xchg
xor
sbb
xchg
call
sbb
mov
fcomps
mov
mov
shrb
loopne
std
fistl
jp
mov
lds
dec
sbb
pop
or
or
sahf
mov
cmp
push
add
cs
testl
scas
mov
sbb
fstpt
cmp
jl
ljmp
sti
push
jmp
mov
jecxz
clc
out
shlb
ffree
fsubs
pop
cmp
xchg
test
xor
or
pop
aaa
and
pop
int
xchg
decl
sbb
lcall
jnp
add
jb
xchg
sahf
mov
add
mov
ret
testb
into
jecxz
jl
push
cli
mov
int3
sahf
mov
lods
sbb
lea
jo
adc
movsb
sbb
popa
xor
mov
fs
xor
arpl
mov
and
in
lret
mov
bound
mov
sbb
sub
mov
mov
testb
ljmp
insb
sbb
imul
ja
push
or
nop
fildl
pop
loop
ja
push
pop
bound
out
mov
inc
sub
jmp
xchg
stos
jb
js
fdivrp
and
or
jg
ret
and
roll
xchg
iret
popf
dec
pop
push
mov
mov
add
push
cld
imul
mov
dec
inc
ret
hlt
addr16
std
or
arpl
ds
inc
lret
loope
xchg
inc
pop
sub
cmp
movsl
mov
leave
jmp
or
out
and
jg
sbb
sub
mov
mov
mov
xchg
pop
dec
push
push
rcl
xor
sub
dec
pusha
and
push
aaa
in
outsb
sub
aad
push
pusha
xor
fcomps
push
dec
push
jae
adc
mov
das
jmp
repz
xor
ret
xchg
into
orb
addr16
aad
js
jg
push
dec
adcb
cmp
pop
jo
mov
or
test
cltd
sbb
idivl
fimull
sbb
stos
mov
test
mov
jbe
push
push
cltd
push
mov
cmp
movsb
loopne
mov
xchg
fisubrl
and
loopne
adc
in
sub
and
subb
cmpsl
ja
popf
xchg
outsl
stos
popf
pusha
fidivl
xchg
cmpsl
addl
mov
lcall
aaa
int3
cld
daa
shll
rcl
es
mov
mov
mov
and
mov
stos
and
xchg
pop
fisubrs
dec
xor
pop
test
push
data16
insl
xchg
fisubl
push
dec
cmc
hlt
xor
fisubrl
ret
cmp
mov
cmp
dec
insb
in
lahf
test
pop
fsubp
stos
push
ror
repz
jle
lods
mov
pop
sub
dec
push
out
inc
pop
or
jo
stos
adc
sahf
dec
xor
mov
mov
call
inc
jecxz
iret
jp
scas
mov
mov
mov
and
pop
sbb
into
jbe
mov
or
cmp
push
fnsave
inc
jae
mov
xor
dec
int
adc
mov
cmc
push
aam
or
icebp
dec
sbb
xchg
addr16
mov
xchg
out
leave
stc
xlat
and
inc
inc
xor
inc
xor
in
fcmovu
fildll
dec
ret
clc
mov
cmp
repnz
mov
xor
xchg
sub
sub
jne
dec
loopne
pop
lret
gs
inc
cmp
push
arpl
adc
inc
imul
sub
xchg
lds
inc
lock
bnd
arpl
stos
sub
fstps
insb
sub
fstps
cmpsb
dec
ficoml
lahf
pop
cmpsb
sub
jnp
ljmp
mov
pop
cmp
popf
das
pop
sub
pop
mov
push
jbe
sbb
xchg
mov
ljmp
mov
aas
pop
stos
pop
les
arpl
sbb
and
dec
push
mov
stos
add
and
pop
and
int3
xor
out
mov
rcrb
lcall
jp
mov
mov
fbstp
jne
and
in
or
push
cli
inc
xor
leave
aam
push
mov
sti
inc
cmp
faddl
mov
and
xor
pusha
jecxz
sarb
movsl
xor
stos
cmpl
xchg
imul
out
test
jno
mov
pop
mov
pop
xor
inc
cmp
into
xchg
imul
test
dec
jl
mov
xor
hlt
xchg
xchg
adc
js
mov
outsl
dec
xorl
mov
loopne
dec
outsl
leave
push
adc
jmp
imull
inc
into
add
fldz
daa
jo
mov
mov
mov
cmpsb
in
cmpb
xchg
imul
and
inc
stc
jp
xlat
push
daa
mov
or
push
mov
mov
iret
jne
push
lods
negl
mov
jb
in
mov
jle
push
lahf
xchg
xor
test
test
rorl
mov
mov
push
lret
es
ja
aam
mov
cmc
outsb
les
dec
inc
mov
rol
scas
pop
push
dec
pop
cmp
popf
mov
loopne
mov
jecxz
lea
jl
out
cmpb
jbe
mov
test
and
sub
xchg
scas
cmp
jbe
sbb
in
jo
or
data16
pusha
mov
sti
es
test
adc
je
nop
push
push
push
push
or
negl
mov
clc
cmpsb
mov
jns
fwait
or
insb
addr16
mov
mov
pop
pusha
mulb
jle
rol
fs
cmp
inc
stos
cmp
and
fsubs
xor
inc
repz
mov
adc
mov
sub
adcb
push
inc
mov
loopne
stos
add
fsubp
icebp
nop
movsl
mov
mov
mov
es
scas
jb
pushf
movsb
mov
and
movsb
mov
cs
aam
test
push
aad
jns
jecxz
cwtl
das
ljmp
icebp
loope
adc
inc
sbb
and
and
loop
or
decl
movsl
dec
jns
js
leave
sub
adc
or
cwtl
sbb
popf
xor
mov
sbb
popf
in
pop
repz
sbb
fdiv
xor
sahf
sub
pop
fmuls
lret
out
mov
xchg
jl
les
fmuls
imul
js
outsb
and
xchg
icebp
stc
lods
mov
sbb
push
in
push
mul
fwait
or
add
jle
ret
dec
add
ret
call
or
xchg
lret
mov
sub
adc
mov
sahf
hlt
rcrb
pop
sub
daa
sub
jle
call
in
call
scas
bound
xchg
cwtl
pop
mov
adc
mov
jg
mov
add
mov
push
sbb
stc
mulb
ljmp
js
imulb
sbb
jno
pop
dec
dec
adc
movsl
mov
dec
les
xor
mov
jg
jns
mov
push
jbe
xchg
adc
mov
push
mov
cli
out
and
enter
cltd
dec
lahf
jecxz
inc
pop
xchg
sbb
xlat
inc
and
aad
add
je
aas
call
fmuls
sub
lods
aad
cmp
lea
mov
aam
ja
mov
les
inc
std
and
rolb
ja
sbb
stc
js
push
aad
mov
mov
push
push
ret
push
call
mov
mov
pushf
mov
pop
lahf
push
ss
and
das
inc
ds
cli
mov
or
ja
data16
mov
sbb
orl
inc
test
repz
push
rcl
mov
stc
sahf
daa
das
scas
loop
and
cmp
cmpsl
sbb
enter
sbb
inc
sub
aaa
dec
cmp
sbb
and
adc
push
add
adc
outsl
test
xor
push
jne
fiaddl
dec
out
lods
xchg
dec
sub
js
or
mov
cli
add
dec
or
sti
lock
aas
jl
fmuls
inc
lods
cwtl
adc
test
daa
jae
sarb
jecxz
push
test
xchg
jmp
pop
add
push
fs
lock
imul
and
adc
ret
stos
inc
xchg
xor
ss
xor
mov
jns
sbb
stos
cmpb
or
jecxz
notb
icebp
rcll
sti
sub
addr16
out
sbb
iret
lret
ljmp
addr16
mov
fildll
loopne
pushf
push
popa
dec
add
mov
jg
xchg
in
mov
mov
pop
icebp
push
repnz
jo
loop
popf
jge
xchg
jg
mov
popf
out
rorb
push
sub
push
xchg
lds
out
hlt
xor
int
adc
xchg
out
insl
and
sar
sub
lahf
outsb
or
xchg
fildl
out
add
out
pop
out
jnp
jo
or
jg
or
jne
xchg
add
scas
movl
in
test
push
jne
loop
in
cmp
mov
mov
insl
andl
rcl
bound
jbe
outsb
cmpsl
lds
xchg
cmpsb
pop
mull
les
xchg
out
cmp
popa
je
iret
fisubrl
pop
fidivrs
insl
mov
mov
outsb
fxtract
int3
bound
loop
js
neg
clc
sti
xor
push
mov
mov
or
xchg
scas
xchg
adc
xchg
repz
fcompl
mov
xchg
jnp
or
sub
into
scas
andl
pop
jle
in
out
adc
insl
icebp
negb
inc
lods
jb
addb
outsb
rorb
data16
xchg
cmp
mov
ss
loopne
mov
xor
mov
sti
mov
ds
out
addr16
jp
mov
dec
jp
mov
icebp
mov
popf
nop
add
in
push
inc
mov
cwtl
mov
and
int
aas
inc
fbld
sbb
adc
add
cwtl
loopne
and
push
xchg
call
adc
sub
push
in
mov
cmpsl
cmp
js,pt
mov
push
jmp
js
mov
adc
fbstp
faddl
je
int3
in
in
addb
push
mov
inc
mov
push
ret
jl
fisubl
cmp
push
jl
and
inc
repz
cmp
in
pushf
mov
fs
ror
test
rcl
pop
sbb
not
push
jg
mov
mov
pushf
cwtl
test
mov
mov
mov
cmc
mov
mov
ja
call
mov
or
fistpl
inc
in
test
sahf
ficomps
cmc
std
call
rol
lds
add
lret
jbe
push
push
cs
sbb
jo
push
out
mov
xlat
adc
pop
dec
sarl
dec
in
cli
out
mov
inc
bound
inc
dec
stos
les
cmp
inc
adc
jge
test
cld
cwtl
in
insb
sub
andb
imul
xchg
ljmp
push
test
xor
mov
in
movsb
pop
xchg
xor
sbb
js
fsubs
imul
cmpb
int
outsb
lock
add
jnp
popa
cmp
and
pop
dec
xor
leave
pop
sti
dec
cmc
out
pop
call
xchg
ja
out
hlt
lods
mov
leave
lret
mov
xchg
and
and
sbb
shrl
stc
sub
lret
aam
jge
ret
out
fwait
aas
decl
fldcw
fdivl
and
roll
pop
ss
cli
test
push
lods
push
into
jg
sbb
xor
cwtl
in
out
mov
testl
repz
call
test
cld
adc
lahf
hlt
inc
pushf
or
xor
push
ret
xor
rol
call
push
rolb
pop
fimuls
cltd
cwtl
lock
fsts
mov
into
push
mov
test
lahf
fsubrl
sub
stc
push
sti
cmp
jmp
xchg
std
and
or
popa
cmp
jb
mov
adc
daa
xor
stos
or
and
push
adc
rclb
push
sub
inc
push
data16
mov
mov
cltd
das
insl
inc
movsb
cmp
xchg
imul
cmp
test
mov
aad
sbb
mov
lret
imul
sbb
dec
aas
into
xor
add
sahf
mov
imul
sarl
in
jnp
mov
mov
lahf
push
pop
mov
jge
lds
mov
fstps
pop
sbb
loopne
bound
stos
dec
pusha
rclb
mov
mov
dec
out
arpl
jns
ja
pushf
dec
push
adcb
inc
jmp
jg
jg
xchg
sub
pop
xor
dec
lods
mov
or
mov
jo
fwait
dec
jp
test
adc
outsl
sahf
bound
and
dec
mov
in
or
sub
sub
jno
cmc
mov
add
rorb
sub
imul
mov
ds
ljmp
adc
and
sbb
xor
pop
jno
int3
loop
insl
inc
sbb
mov
and
cmp
adc
or
mov
lret
cmpl
std
adc
sub
jbe
inc
push
jno
clc
xlat
cwtl
test
sub
hlt
jp
xor
jo
sbb
in
xor
das
mov
fucompp
mov
add
jle
xchg
outsl
dec
fidivrs
mov
inc
add
popf
out
imull
jecxz
mov
jl
fdivr
mov
inc
mov
repnz
add
movl
push
shlb
loope
push
xchg
adc
lsl
aaa
mov
mov
in
popf
push
jns
dec
mov
xchg
mov
imull
xor
adc
lock
pcmpeqw
repz
or
push
add
jge
mov
inc
mov
mov
mov
fsts
sbb
sti
test
in
mov
sti
and
xor
mov
cmp
cwtl
jle
or
push
pusha
int3
cmpsl
mov
fsubp
in
imul
push
js
pop
je
and
lods
jo
mov
mov
mov
in
iret
and
mov
les
sbb
adc
leave
jbe
jecxz
mov
ret
mov
and
stos
fstl
and
inc
mov
mov
sbb
ja
ja
ljmp
xorb
jl
or
shlb
inc
mov
subl
push
loope
in
bound
cmp
in
cmpsl
je
mov
push
jg
jo
fidivrl
xchg
gs
xchg
ret
cmp
fdecstp
lcall
pop
lret
cmp
mov
shlb
fs
sahf
add
pop
popa
xchg
push
clc
lahf
add
loopne
cmp
rorl
jb
sub
hlt
aas
jmp
pusha
inc
dec
xchg
xchg
int
movsb
inc
push
repnz
push
cltd
sbb
sbb
mov
lods
pop
rcrb
mov
sar
push
loope
push
adc
fistpl
jg
mov
dec
incb
int
push
insl
mov
out
icebp
cmp
add
js
cmp
cmp
insb
ljmp
add
jno
rcr
jecxz
mov
dec
sbb
push
mov
adc
pop
mov
or
mov
ret
adc
jbe
xchg
loopne
xchg
sahf
push
mov
pop
pushf
sbb
jmp
lods
cmp
in
jecxz
mov
lods
pop
notb
shl
aad
add
add
fstp
ss
lcall
bound
mov
shrl
jno
dec
pop
cmp
in
push
push
rolb
jmp
out
call
push
pop
mov
adc
in
xchg
xchg
aam
or
and
rol
inc
in
insb
jns
shr
xor
loop
stc
cmp
into
push
jl
xor
adc
fidivrl
loope
lds
test
shlb
fdivrl
mov
scas
sub
shlb
pusha
bound
jle
and
cmp
lods
je
subb
add
mov
icebp
jnp
fdivr
lods
ss
mov
arpl
xchg
loopne
cmpb
jmp
mov
xorb
sbb
jecxz
addr16
loop
jecxz
std
repz
jmp
mov
add
mov
lcall
lock
shll
and
adc
shll
lret
cmpsl
mov
lods
dec
shlw
jo
jge
mov
subb
mov
add
cwtl
pop
pop
cmp
and
mov
pop
pop
je
add
roll
mov
fistpl
or
xchg
sbb
iret
sbb
fdivrs
nop
pop
sub
test
or
mov
jno
and
rorl
test
mov
and
xlat
mov
pop
imul
cmc
jae
ja
pop
cli
xor
fld
pop
dec
mov
sbb
adc
inc
mov
gs
test
rcrl
mov
addr16
dec
sub
mov
les
insl
divl
cmpsl
ss
dec
outsl
rclb
add
hlt
add
ret
les
pop
jge
add
sbbb
sbb
mov
leave
adc
cmpl
jg
loop
stc
sub
push
cmp
or
hlt
lea
jbe
enter
xchg
testl
sbb
xchg
pop
push
into
jo
pop
and
dec
jnp
inc
or
cld
jae
inc
xchg
imulb
fidivl
or
roll
mov
scas
arpl
arpl
pushf
add
pop
ds
ja
add
ret
cmpsl
lcall
and
in
test
movsb
xor
jns
and
cmp
lods
cli
outsb
movsb
xchg
mov
imul
xchg
scas
mov
mov
mov
cmp
lcall
mov
loopne
jmp
sub
add
or
mov
and
xchg
inc
sbb
sahf
out
xor
in
subb
xchg
test
dec
and
outsl
xor
jecxz
xor
hlt
inc
mov
rorl
mov
mov
push
or
jns
data16
mov
mov
add
pop
in
xchg
pop
cmp
leave
push
cmp
mov
lret
jmp
imul
jbe
xorl
and
lea
and
fimuls
add
cmp
daa
pop
add
xchg
ljmp
and
loopne
mov
sbb
xchg
and
xchg
push
push
popf
dec
imul
je
push
mov
std
rcll
dec
fsubrs
outsb
add
or
or
and
cs
bound
sbb
stos
pop
sbb
aaa
int
pop
mov
out
test
arpl
je
es
sbb
lret
cltd
add
push
or
xchg
dec
xchg
fdivrl
pop
xchg
hlt
insb
jbe
or
jmp
mov
jno
inc
and
pop
push
pop
aad
cmc
mov
or
sbb
popa
dec
ljmp
add
jnp
add
cwtl
repnz
mov
notb
mov
icebp
and
std
lret
jne
test
add
gs
xlat
sub
arpl
aas
push
push
in
aam
stc
sbb
add
adc
js
cmp
test
inc
shlb
stc
pop
cltd
pop
popf
jge
xchg
mov
push
sub
cmc
dec
inc
sbb
insb
imul
and
dec
sbb
fists
sbb
cmp
jns
rcrl
mov
and
push
fldcw
cltd
lea
mov
imulb
pop
lret
inc
xor
push
fisttpl
pop
and
iret
mov
jg
imul
hlt
je
sub
and
mov
sti
fs
mov
jmp
clc
push
out
cmp
mov
cmc
fldenv
mov
inc
mov
push
insb
test
mov
xchg
add
mov
cmp
mov
loop
mov
sti
and
pop
pushf
mov
call
repnz
jo
lcall
cmp
subl
dec
jg
or
mov
pop
rol
lods
cmp
xlat
lret
insl
ss
inc
pop
scas
loop
sbb
cmp
xchg
xchg
adc
mov
je
push
pop
fnstsw
testl
fstp
jl
sub
fidivl
clc
cmp
mov
add
insb
es
jp
or
lahf
jnp
jp
iret
je
std
ss
out
xor
or
fcomi
mov
gs
dec
adc
mov
xor
cmp
xor
cmc
mov
xor
pop
lds
jns
sti
jmp
jg
push
inc
lea
jbe
jl
inc
jns
pusha
cld
dec
in
or
in
mov
addr16
iret
lea
stos
mov
adcl
nop
dec
loope
aam
mov
sbbb
sub
sub
inc
scas
test
hlt
rcl
sahf
jno
icebp
aas
mov
jno
aam
mov
pushf
xchg
std
std
in
lods
mov
and
imul
mov
adc
push
sub
push
cmp
mov
lcall
or
jle
inc
mov
stos
scas
add
es
mov
fnstenv
cmp
fbstp
cmp
aad
fwait
ret
mov
gs
icebp
dec
enter
movsl
and
or
xor
scas
xchg
mov
shlb
cwtl
in
adc
xchg
orl
enter
aaa
xor
sub
aas
iret
pop
and
fdivrl
lods
and
dec
add
mov
jo
cmp
mov
xor
cmp
inc
pop
mov
mov
lahf
push
es
fwait
inc
xlat
daa
pop
gs
mov
cmp
sub
imulb
and
mov
cmp
sub
js
into
in
mov
dec
sbb
ret
cmp
jbe
rcrb
jl
shr
rcrb
mov
push
jecxz
repz
xor
sub
add
dec
scas
fstl
dec
push
aas
xor
mov
cmc
mov
or
sub
ljmp
xchg
xor
inc
stos
cli
pop
testb
or
loopne
and
insl
inc
mov
inc
jae
or
xchg
xor
push
call
scas
xor
jecxz
data16
cwtl
in
in
dec
mov
adc
pusha
test
xor
inc
filds
pop
and
sbb
popf
jl
subl
aas
ja
jae
js
jb
mov
jno
sarl
jns
outsb
or
mov
dec
or
sbb
mov
add
xchg
sti
cmp
mov
pop
mov
pop
mov
pop
sub
dec
mov
cmpsl
fisubrl
lret
jns
call
and
loope
mov
sbb
mov
fildll
mov
jne
xchg
jg
ret
push
xlat
nop
daa
sbb
jns
icebp
and
cmp
xor
sbb
out
cmp
into
rcr
mov
sub
lock
cmpsb
fwait
push
jbe
popa
mov
mov
cwtl
mov
xchg
scas
sub
inc
sbb
push
xor
aas
out
push
mov
ds
sahf
scas
or
popf
aad
sbb
xchg
mov
divb
aaa
repz
sbb
add
rorl
loop
dec
lea
addb
mov
fistpl
lods
stos
fildl
jae
in
adc
stos
mov
push
push
dec
inc
or
int3
scas
or
fistpll
push
mov
add
int3
sub
pop
jo
sbb
cmp
cmpsb
mov
call
imul
sub
icebp
js
fimuls
andl
test
in
pop
outsb
jle
lahf
xchg
cmp
adc
sub
push
shr
shl
ret
iret
sbb
adc
mov
jl
addb
xchg
fisubrl
dec
dec
mov
jg
rclb
retw
and
mov
data16
scas
dec
sbb
fld1
mov
ja
ljmp
sub
lcall
lods
sub
testl
adc
mov
sbb
xor
pop
lret
jge
or
mov
jnp
insb
xor
and
sub
nop
lret
push
outsl
sbb
inc
cmp
fimull
adcb
stc
push
les
sbb
push
in
sub
or
stc
pop
push
imul
pop
cmp
rolb
std
xor
pop
adcl
aas
mov
jbe
inc
mov
std
inc
insl
pop
fs
int3
mov
scas
lea
divb
mov
push
push
mov
push
inc
dec
mov
xlat
je
popa
dec
push
imul
pop
add
lock
loope
cltd
pop
out
mov
push
jo
mov
cmp
sub
xchg
sbb
repz
cmp
ja
xchg
sub
gs
cmp
mov
mov
cli
inc
leave
fists
dec
insb
mov
aaa
shll
push
push
fldt
frstor
ljmp
mov
jne
mov
cs
in
fldcw
sarl
addr16
sbb
pop
fldenv
das
push
add
adc
jge
xchg
in
punpckhbw
aam
pop
hlt
outsb
nop
mov
and
and
popf
jmp
fildl
mov
sbb
jecxz
sub
iret
or
push
ja
jo
mov
clc
mov
mov
push
jb
jae
adc
cmp
pop
cmp
fcomi
mov
loopne
fsubs
and
into
shll
pop
loope
repnz
adc
xchg
mov
inc
push
pop
dec
call
inc
or
dec
push
test
sub
adc
adc
cmpb
cmpsl
sbb
rolb
je
mov
lock
push
stos
test
je
push
mov
sahf
mov
and
mov
mov
xchg
pop
out
stc
pop
or
rorb
pop
lock
push
iret
addb
or
push
mov
inc
es
or
jmp
sbb
test
scas
repnz
das
mov
nop
dec
js
cmpb
and
sbbl
pop
movsl
lods
icebp
stc
mov
sahf
loopne
cmp
mov
lds
pop
xchg
mov
stos
fcomps
push
ret
subb
pop
enter
xchg
int3
or
push
scas
loopne
sbb
fmuls
or
in
pusha
xchg
dec
add
repz
push
mov
and
and
sbb
loopne
sbb
pop
and
or
test
inc
or
sarb
repnz
cmp
xor
dec
xchg
add
aad
inc
jl
adc
or
add
movsb
repz
addr16
and
loopne
iret
scas
into
lcall
xchg
dec
inc
jbe
in
lret
sbb
movsb
loop
iret
inc
sbb
pop
pop
fsubs
jmp
sarb
pop
mov
in
pop
in
xchg
dec
fdivp
lock
repnz
adc
sbb
add
mov
mov
adc
icebp
sub
fimuls
scas
mov
fsubp
xchg
rorb
mov
push
cld
aad
mov
insl
enter
push
pusha
icebp
pop
sbb
or
or
addr16
and
or
sub
push
aas
dec
mov
fwait
inc
cmp
aam
cmp
pop
jae
ds
rclb
cmc
jge
ficoms
push
xor
fists
iret
mov
ficoml
gs
mov
jae
aaa
lds
push
cmc
inc
sub
xchg
jmp
xchg
mov
and
nop
ret
pop
enter
sti
sub
aad
lds
ja
dec
mov
mov
pushf
daa
repz
xchg
mov
hlt
push
stos
leave
sub
xor
pop
or
fwait
mov
sbb
shl
xchg
inc
andl
in
dec
adc
les
lea
xchg
sub
sbb
push
jge
imul
outsb
movsl
inc
loopne
xlat
add
jo
push
or
out
jb
insb
dec
push
xor
and
mov
inc
mov
mov
sahf
sbb
subl
lret
mov
sti
cmpsl
pop
call
lret
mov
inc
jge
xorb
daa
inc
cmc
pop
sbb
cmpsb
pop
or
hlt
fmuls
shll
pop
push
ljmp
cmpsl
mov
loopne
xor
in
xchg
stc
push
xor
cmp
adc
xchg
xor
movsb
or
jb
mov
xchg
inc
cmc
push
push
daa
sahf
stos
and
or
sbb
cli
xchg
xchg
es
cmc
pushf
shl
pushf
xlat
pop
das
imul
sub
dec
mov
add
mov
inc
pushf
je
pop
js
add
adc
fistpll
add
ja
mov
aas
jb
jbe
aad
xor
mov
stos
dec
dec
adc
mov
test
add
pop
rorb
mov
fwait
pusha
xor
sbb
sti
int3
nop
mov
repz
sbb
clc
daa
xor
dec
adc
push
mulb
test
pop
out
push
pushw
insl
sar
mov
sbb
and
mov
adc
divb
clc
aam
mov
jne
sti
call
pop
mov
inc
aas
loopne,pn
insl
jae
adc
clc
mov
sbb
pop
cmp
repnz
arpl
pop
das
data16
inc
push
mov
lcall
xor
popf
icebp
xorb
sbb
adc
insb
mov
xchg
int3
inc
pusha
and
mov
mov
test
arpl
int3
mov
mov
pushfw
inc
out
adc
pop
or
popf
sahf
movsb
fidivrl
in
lock
movsb
mov
cmc
lret
push
mov
add
pop
jl
sahf
fsts
out
adcl
lea
ss
push
call
fbstp
xchg
dec
push
loopne
cmpsl
sbb
dec
mov
mov
cmp
sub
negl
mov
cmp
scas
inc
xor
and
in
fcoml
mov
imulb
dec
xor
dec
adc
arpl
add
and
or
push
sub
mov
lcall
mov
bound
mov
loop
inc
out
add
bound
je
mov
and
jo
aaa
or
cwtl
jbe
push
in
pusha
pop
push
sbb
mov
cmpsb
in
test
mov
test
or
movsb
add
insl
out
push
mov
sbb
xor
adc
and
adc
or
push
and
test
add
push
mov
cmp
and
lret
sbb
add
mov
dec
xor
fstps
push
cltd
jecxz
in
andl
data16
push
jge
xor
cmp
mov
and
pushf
push
push
cltd
outsl
icebp
inc
lea
ror
movsl
inc
jae
mov
call
imul
jbe
xor
or
cmp
xlat
mov
dec
sbb
mov
enter
fsts
jg
out
in
adc
mov
sub
bound
dec
pop
stc
jmp
hlt
fsubrs
xchg
cmpsl
mov
mov
jg
in
cld
sub
inc
adc
add
insb
faddp
shlb
out
in
imulb
cmpsl
adc
filds
sub
test
in
sub
imul
sahf
repz
mov
add
daa
jbe
lret
mov
inc
pop
xchg
mov
repz
std
mov
mov
std
or
push
das
aas
out
out
inc
mov
andb
mov
lds
sbb
fadd
fldl
std
and
roll
push
jl
mov
sarl
out
sbb
push
inc
xchg
jmp
mov
push
aam
cli
push
int
scas
xor
movsl
bnd
sarl
sti
mul
and
sbb
push
xchg
mov
jmp
xor
insb
jp
jno
aad
ljmp
insl
jp
imul
mov
std
push
loopne
mov
mov
xor
addr16
out
sub
push
inc
cmp
push
mov
mov
and
jns
jmp
and
jmp
xor
push
adc
iret
xorb
stos
insl
hlt
inc
fiadds
xchg
loop
lahf
lret
in
fildl
rol
add
mov
insb
inc
iret
stos
jns
movsb
push
push
ljmp
or
push
scas
sti
imul
mov
aaa
mov
mov
jl
mov
addb
push
int
adcb
data16
movsl
das
inc
aad
test
or
repnz
ds
or
adc
stos
sub
sbb
arpl
sbbl
inc
jp
sbb
lea
daa
add
mov
in
jg
je
movsb
ja
ss
inc
imul
mov
push
ret
fnstenv
sub
shrl
int3
sbbb
cmp
lret
lock
pop
testb
mov
gs
jecxz
or
add
adc
mov
lahf
es
repz
or
push
pop
out
cli
xchg
jp,pn
sbb
inc
aam
pop
sub
es
pushf
mov
stos
int3
push
xor
out
int3
ljmp
xor
sbb
and
jl
add
stc
movsl
test
aad
fcoms
out
nop
sbb
imull
repz
xchg
sbb
dec
outsb
cmc
add
cmp
sub
and
stc
xor
arpl
ss
xchg
mov
adcb
sub
mov
cltd
mov
in
xchg
sbb
add
fbld
int
jne
add
pop
pop
call
andb
in
fistps
es
cmp
mov
dec
jecxz
in
and
dec
or
mov
pop
xchg
sahf
mov
mov
insb
inc
in
pop
xchg
sub
dec
inc
push
test
ja
add
cld
mov
mov
movsb
add
filds
call
pop
cmp
sbb
cltd
pusha
insl
or
xor
xchg
call
repz
fidivl
mov
pop
dec
push
aam
push
jae
bound
std
scas
xor
cmp
mov
mov
fldlg2
sahf
or
and
test
shl
push
cmp
sub
cmp
scas
inc
xor
lods
or
loopne
das
sbb
out
cwtl
pop
adc
int3
or
cmp
mov
lahf
inc
dec
or
js
fmuls
push
mov
or
and
or
dec
les
dec
inc
lret
sbb
push
cld
adc
test
sub
pop
imul
or
ja
ss
ret
mov
data16
dec
lret
movsl
cmpsl
mov
push
cltd
or
shlb
mov
add
jae
scas
jb
inc
push
xchg
add
mov
jnp
adc
xor
ret
sbb
jecxz
es
pop
je
xor
fisubs
fisttpl
in
mov
cmp
sbb
push
or
push
cmp
sbb
cltd
adcl
imul
loop
scas
mov
xor
insl
and
icebp
add
ja
hlt
lret
int3
loope
cmp
js
ja
aad
insl
leave
movsb
xchg
push
or
nop
dec
rorl
or
call
jle
ret
push
pop
movsb
mov
hlt
jae
xchg
mov
inc
popa
sub
movsb
jge
scas
ljmp
loopne
xor
icebp
int
lret
icebp
pop
dec
loope
sbb
popf
push
mov
add
ss
cwtl
rcl
pop
cmp
add
lret
sbb
mov
adc
jns
mov
mov
pop
test
dec
aad
nop
mov
jnp
inc
push
cmp
stos
mov
in
rcll
divl
xchg
xor
fldcw
mov
jle
mov
ljmp
push
jne
jl
lcall
lock
std
sahf
xchg
and
mov
stos
jnp
mov
data16
enter
push
mov
loope
lods
and
call
xchg
adc
aam
xlat
setge
add
shll
xchg
push
add
mov
scas
sbb
adc
xchg
push
and
push
sub
xchg
mov
ffreep
mov
jmp
lea
add
push
jl
sub
sbb
mov
gs
in
lcall
xchg
fldcw
clc
mov
jno
or
dec
out
out
xor
lret
xlat
mov
test
test
mov
ficoml
pop
push
mov
mov
sarb
pand
inc
cs
ds
ljmp
int
mull
sbb
rorl
addb
jle
xor
adc
repnz
stos
and
outsl
push
test
dec
lods
shll
push
push
pop
sbb
or
jle
lret
jo
dec
gs
lret
pushf
cmp
popf
jecxz
jae
adc
shll
mov
push
xchg
cmc
clc
out
insl
pop
fsubp
cld
pushf
mov
xchg
or
aad
pop
inc
jge
sub
xchg
mov
mov
loop
jg
rcr
sahf
jb
add
lret
dec
mov
fimull
dec
xchg
mov
mov
testb
jb
repnz
hlt
add
in
pop
fldenv
add
cwtl
and
or
xchg
je
popa
aaa
mov
jbe
and
xchg
xchg
loop
fistl
add
jno
adc
add
or
or
pop
int3
adc
xorb
pop
sub
rclb
inc
mov
mov
aad
pop
fidivrs
insl
mov
or
lods
inc
push
push
sub
jge
sub
lock
or
mov
or
inc
sbbb
mov
cltd
pop
sbb
insb
mov
lods
mov
cmp
into
jp
push
add
push
gs
jno
in
stc
js
mov
lcall
out
out
add
mov
in
or
push
xchg
fiaddl
shrl
push
xor
fisttps
xor
cmp
cltd
mov
xchg
sbb
stos
dec
cwtl
xchg
jg
or
sub
pop
or
movsl
push
mov
cmp
jg
test
out
repz
xor
jnp
jno
ljmp
negb
push
fistl
repz
mov
pop
insb
cmp
lock
mov
imul
out
jne
xchg
jmp
je
mov
cmp
mov
test
imul
aad
daa
or
or
sbb
arpl
hlt
lock
fwait
sub
add
sahf
and
or
lret
mov
popf
inc
jge
sub
add
fs
das
test
lahf
add
outsb
adc
stos
inc
jle
in
inc
cltd
push
cwtl
fistl
pop
mov
bound
xchg
mov
int
mov
push
or
cmpl
pushf
add
test
mov
and
les
pop
or
dec
add
test
movsb
xlat
fcoms
cmpsl
and
push
std
ja
lret
aas
push
mov
ds
shrl
push
cmp
cwtl
scas
mov
jp
pop
inc
or
jb
lea
cwtl
les
testb
ss
int3
or
inc
add
iret
fildll
jae
popa
int
aas
or
mov
mov
leave
call
test
cltd
xor
adc
movsl
jb
push
push
pop
jg
int3
mov
jo
adc
sbb
ret
cld
xchg
push
rcll
sbb
adc
ret
cltd
arpl
repnz
jecxz
in
xchg
mov
dec
mov
loope
sbb
add
test
cmp
mov
push
hlt
hlt
mov
es
bnd
addr16
and
sbb
inc
mov
push
scas
lock
in
push
mov
movsl
sub
add
inc
pop
nop
and
inc
inc
leave
popf
aad
and
cmp
out
mov
loopne
mov
sbb
add
lds
pop
and
fwait
cld
test
lret
popa
in
cmp
inc
pop
ret
lcall
adc
stc
pop
jns
push
fcoml
push
stos
inc
mov
or
pushfw
pop
inc
jnp
pop
cmc
and
es
sahf
inc
cwtl
addb
push
mov
and
sarb
mov
js
in
xchg
dec
das
das
fs
int3
in
ret
js
mov
push
jne
ret
push
sbb
push
lahf
sbb
divb
cmp
je
mov
push
aas
push
push
push
pusha
jg
insl
sar
pop
insl
sbb
test
mov
sub
xor
aaa
xor
insl
popf
push
push
add
or
stos
movsl
fidivs
les
fisubl
jb
cltd
mov
or
mov
jmp
pop
and
enter
mov
cmp
loope
fiadds
add
mov
movb
and
dec
sti
add
jae
adc
jne
les
dec
je
pop
mov
cmpsl
jbe
jp
xchg
jne
sbb
fsubr
xchg
mov
xchg
sbb
pop
adc
jp
mov
stos
jbe
add
daa
sub
sti
in
xor
mov
or
push
and
stos
je
pop
loopne
xor
lods
cld
test
inc
dec
bound
mov
scas
lods
or
arpl
cltd
jp
pop
dec
xchg
push
xchg
cmp
movsl
and
pop
movb
dec
cmc
imul
inc
movsb
cmp
cmc
and
xchg
mov
mov
push
lret
or
pop
jle
incl
insb
mov
xchg
popa
sub
add
inc
inc
sbb
push
inc
clc
xor
daa
cmc
sbb
loop
daa
cli
cmp
jg
lret
push
sub
inc
cmpsl
mov
mov
clc
sub
mov
lea
mov
xlat
dec
push
cs
inc
inc
fbld
inc
or
test
fwait
push
imul
push
cmpsb
sarb
xchg
xor
rcr
pop
and
adc
arpl
inc
lock
orl
xor
or
rcrb
adc
ret
and
pop
sub
hlt
repnz
dec
xchg
mov
sub
xlat
pop
sarb
fisttpl
insb
jb
loope
xchg
inc
pop
mov
stc
inc
mov
xchg
mov
dec
je
cmpsb
push
std
leave
mov
jnp
es
and
pusha
push
push
ret
scas
add
add
test
dec
shll
scas
push
cmp
jns
insl
mov
jno
ja
and
xor
adc
lods
mov
pop
and
sub
pop
push
sbb
or
out
std
sub
aad
mov
das
lods
cs
dec
out
in
pop
mov
daa
and
cmp
rcrl
adc
xchg
add
rcll
push
divl
js
adc
rorl
sbb
mov
pusha
xorl
lea
pop
xchg
mov
cmpsb
add
pop
mov
arpl
fs
hlt
mov
sbbb
lahf
leave
lret
inc
icebp
frstor
mov
mov
loop
and
shll
cwtl
mov
fildll
lds
jns
sbb
outsb
icebp
add
icebp
mov
imul
or
fs
mov
push
push
cmpsl
bound
push
repnz
fcmovnu
ficoms
and
das
clc
mov
test
dec
mov
inc
pop
out
mov
and
in
jns
cltd
pop
mov
mov
out
cli
mov
pop
nop
loope
icebp
sbb
adc
adc
dec
cmpsb
cwtl
je
repnz
lock
xchg
fisttpl
cmp
movl
dec
das
std
cwtl
push
out
scas
pushf
icebp
xchg
sub
mov
stc
in
cmp
les
add
xchg
jns
fsubl
jecxz
imul
dec
sub
sub
movsb
sub
sub
xor
inc
lods
sbb
icebp
xor
inc
nop
test
jl
dec
cmc
mov
out
adc
out
jp
in
out
push
add
pop
out
adc
mov
fs
dec
pop
dec
insl
adc
cmc
push
addr16
mov
pop
movsb
and
outsl
add
ljmp
lahf
mov
sbb
and
pop
sbb
scas
mov
cwtl
pop
std
int3
or
shrb
je
loopne
fwait
pop
pop
xchg
pop
sbb
mov
inc
ret
repnz
xchg
dec
jmp
mov
adcl
xorl
cmp
or
push
push
cld
scas
mov
pop
inc
bound
setae
cmpsb
fwait
mov
test
sti
sbb
in
adc
jecxz
fwait
cli
cwtl
sbb
xchg
or
adc
pop
icebp
nop
mov
push
pop
out
stos
sarb
push
shrl
mov
add
adc
pop
aam
test
pop
and
in
xchg
aaa
dec
daa
repz
ds
sbb
cmp
sub
stc
pop
push
jge
test
sbb
sub
popf
xor
fsts
sbb
cmp
cltd
hlt
out
adc
hlt
mov
cmp
jo
adc
push
aad
in
add
leave
push
push
loopne
das
push
cmp
pusha
sbb
mov
mov
pop
mov
outsb
pop
je
or
imul
adc
nop
or
and
fnstsw
or
or
pop
sub
cmpsb
popf
mov
test
sti
stc
add
mov
cmp
jae
or
ret
jl
jge
cmp
lds
aad
xchg
cwtl
icebp
lahf
or
push
mov
mov
xchg
inc
inc
push
cmp
jae
xchg
pop
lahf
out
pcmpeqw
xor
mov
andl
imul
mov
bound
lods
orl
cmc
sahf
mov
lret
cmp
out
inc
insl
int
jbe
inc
cwtl
clc
adc
sbb
add
xor
xchg
sub
data16
data16
aas
pushf
ret
das
jmp
or
imul
mov
xlat
divl
dec
data16
jb
cmp
sub
mov
idiv
fcompl
push
push
test
xchg
loope
mov
adc
jne
lods
ficoml
or
sub
jg
call
xchg
mov
dec
fsub
dec
hlt
mov
xor
loop
xlat
push
jne
pop
test
xchg
hlt
shl
cltd
adc
popf
adc
mov
bnd
test
andb
xchg
ret
and
enter
xor
mov
or
and
push
enter
push
mov
adc
mov
xchg
pop
stos
cltd
gs
movsb
mov
loopne
jg
repnz
mov
sbb
test
je
rol
adc
scas
jl
push
lea
ja
clc
sbb
outsb
std
xor
imul
xchg
push
jp
mov
cwtl
imul
sarb
cmp
sub
jbe
je
push
cmc
scas
imul
mov
das
sbb
cmp
jmp
xor
rolb
negb
cmpsb
or
xor
iret
cmp
aas
xchg
arpl
add
push
cmp
lock
cmp
int3
jecxz
outsl
shrb
sub
xchg
rorl
ds
push
cmp
cli
add
sbb
fs
pop
stos
mov
loope
cmp
out
lds
pop
sub
call
lahf
pop
sub
js
daa
pop
cltd
jno
data16
adc
jb
clc
inc
out
test
je
dec
pop
mov
push
jae
into
jo
xor
pop
and
insb
mov
jno
mov
jbe
bound
aas
sbb
xor
mov
inc
xchg
aam
xor
mov
rcrl
aaa
adc
lahf
stc
ljmp
sub
flds
cld
fs
into
ret
push
or
imul
in
push
lahf
pop
hlt
sbb
and
dec
sub
ret
add
xorw
cmpsl
aam
pop
and
out
rclb
mov
movsl
jb
lret
or
cmpsb
loopne
xor
mov
cmp
scas
pop
test
inc
sar
ds
cmp
pushf
lret
enter
sbb
testb
mov
lahf
and
jae
jb
mov
adc
lret
dec
stos
mov
dec
sbb
imul
push
outsl
and
dec
sbb
test
pop
mov
lahf
and
add
jb
out
stos
push
into
loop
jnp
pop
lods
sub
shrb
push
es
pop
and
or
rol
aas
jne
sbb
dec
sub
push
mov
sahf
sahf
test
cld
cmp
push
test
dec
js
cmp
jbe
sub
aaa
pop
das
out
into
push
jb
data16
insl
jp
movsl
xchg
mov
pop
mov
fwait
out
add
test
ret
stc
rorl
sbb
or
sbb
lahf
jmp
shlb
mov
pushf
pop
adc
dec
imul
mov
sub
pop
mov
pop
adc
hlt
ret
movsb
fsub
pushf
jge
pusha
dec
xchg
hlt
fcom
in
in
ss
filds
pop
arpl
push
and
test
add
inc
pop
lds
call
push
jl
shll
jp
xchg
inc
imul
adc
in
cmp
xor
lea
mov
pop
add
pop
pop
push
mov
and
cmc
sbb
test
and
add
inc
jl
inc
out
cmp
dec
outsb
jecxz
nop
mov
out
inc
lods
mov
dec
push
inc
lahf
icebp
mov
loop
aaa
fbstp
ret
xor
jb
pop
push
xlat
insl
aas
repz
inc
sub
push
sbb
adc
test
inc
sub
pusha
insb
xor
sub
sub
lds
mov
shll
cmp
adc
push
inc
sbb
jne
ret
pop
popf
stos
jp
sbbb
jle
insl
sub
or
push
scas
mov
or
mov
or
loopne
leave
inc
cmp
gs
daa
pop
dec
xchg
mov
xchg
add
cli
inc
adc
adc
sbb
jge
push
sbb
push
popfw
pop
repnz
mov
bound
cli
sti
lahf
aas
xchg
xor
xchg
int3
cmp
mov
adc
mov
adc
sti
mov
mov
jle
jns
or
stos
shrl
xor
push
cld
adc
and
xor
dec
outsl
dec
sub
push
fwait
outsb
out
sbb
jecxz
repz
cs
ljmp
mov
inc
dec
addr16
outsb
pusha
xchg
xor
xchg
mov
or
nop
fmul
arpl
dec
stc
mov
cmpb
stos
sub
popf
lods
xchg
inc
and
xor
stc
lods
jmp
negb
jmp
inc
sbb
sbb
mul
cld
xchg
push
cmp
mov
xor
arpl
out
push
push
adc
scas
stos
cmp
fld
add
push
xchg
adc
or
ja
xchg
fldt
cltd
mov
mov
pop
in
movsb
ret
jp
mov
push
fs
pusha
or
cmp
adc
les
ret
push
outsl
sub
dec
inc
inc
lret
testb
lock
push
cmp
jl
dec
jbe
mov
movsl
xchg
or
dec
addr16
inc
cmpsw
filds
xor
or
fs
adc
pusha
div
push
dec
add
inc
mov
daa
push
inc
lods
mov
jge
int3
hlt
jmp
adcb
fwait
insl
xchg
jb
pop
ss
sub
mov
inc
scas
fcoms
jmp
scas
mov
mov
inc
xchg
outsb
dec
mov
mov
xchg
test
push
addr16
inc
pop
sahf
nopl
sub
movsb
loopne
int
outsb
lock
mov
jne
call
jmp
add
je
into
test
jl
int3
push
pop
imul
daa
xchg
int
sbb
fstl
jmp
in
push
sbbl
xchg
and
test
jge
jp
repnz
movsb
jnp
movsl
push
movsl
pop
cltd
int3
lcall
outsb
push
mulb
stos
add
push
addr16
mov
or
inc
adc
dec
fbstp
int
or
mov
bound
pop
movsl
jne
jge
bound
movsb
ja
sbb
pop
repnz
or
xor
sbb
mov
adc
insl
dec
aaa
daa
mov
push
push
mov
sbb
fistl
jle
ret
fsub
loope
cmp
inc
add
jecxz
or
rcrb
dec
xchg
cli
inc
lods
stos
ljmp
int3
lret
xor
inc
fisubrs
stc
cmp
data16
nop
das
gs
pop
sub
cmpsb
ss
scas
cld
push
pop
xor
popa
dec
push
sbb
pop
enter
mov
cld
cli
shrl
pop
clc
add
lret
and
mov
jge
stos
stos
mov
aad
pop
jg
xchg
jecxz
shll
imul
repnz
cld
iret
mov
xlat
dec
dec
shr
bound
push
and
inc
lock
or
jge
xor
fisubl
loop
pop
shl
dec
push
inc
std
clc
mov
out
ljmp
adc
mov
loope
cmc
lea
sbb
repz
sahf
out
pusha
cmp
inc
loopne
cs
out
insl
cli
outsb
push
gs
loop
stos
cmp
scas
adc
lea
in
cmp
sub
jb
push
xor
inc
mov
xlat
add
int
pop
cmpsl
test
cmp
mov
push
ss
je
ret
jb
ljmp
imul
subb
mov
movsl
mov
add
sbb
cmpb
sbb
cwtl
imul
cli
imulb
test
hlt
iret
xor
fldl
pop
scas
xchg
inc
xchg
cmp
push
sbb
jo
sub
and
mov
cmp
mov
sub
into
rcl
or
cs
stc
mov
ret
mov
dec
stos
sbb
add
xchg
stos
cmp
pop
shlb
sub
dec
adc
mov
out
push
mov
mov
out
cmp
shl
jbe
lods
mov
push
fwait
cld
fs
in
pushf
push
outsb
mov
sub
cld
mov
xlat
ds
dec
mov
cmpsb
fcomi
and
and
dec
mov
or
jb
mov
out
ss
jo
dec
in
sbb
adc
arpl
inc
pop
xlat
movsl
in
pop
mov
xor
pop
cmpsb
inc
mov
push
gs
neg
mov
ret
pushf
fidivs
xchg
dec
je
pusha
push
cmc
push
or
mov
notb
movl
icebp
lock
push
pop
mov
lea
in
sub
dec
pusha
jbe
jne
insl
push
ret
xchg
scas
mov
mov
add
cmpb
dec
imul
stos
lea
jnp
aam
sub
aaa
andl
add
mov
icebp
outsb
xchg
dec
lret
xchg
push
ljmp
decl
shrb
mov
dec
sbb
pop
mov
pop
fildll
into
test
pop
xor
mov
and
fists
lahf
jae
cmp
cld
dec
fidivrl
adc
add
jbe
xor
sub
arpl
icebp
jno
pop
xchg
jecxz
mulb
loope
and
outsl
lahf
leave
adc
pushl
fdivrp
orl
jle
mov
mov
sub
pop
shrb
and
enter
xchg
or
cmpsl
leave
mov
popa
cmpsl
or
sbb
leave
mov
sbb
mov
adc
mov
in
xchg
xor
xchg
dec
xor
fisubrs
into
in
rolb
xchg
push
roll
pop
mov
add
pop
sar
pushf
lret
pop
add
adc
insb
bound
adc
xchg
fldcw
push
pop
sbb
pushf
add
clc
jl
jns
pop
dec
fsubrs
ds
fcom
dec
mov
test
push
xchg
pop
mov
clc
jae
mov
pushf
fs
xlat
in
aam
add
xchg
mov
nop
jb
orb
fs
push
mov
mov
cmpsb
das
or
pusha
add
ja
inc
mov
leave
jno
or
jle
mov
jecxz
es
xor
sahf
push
repnz
andl
fbstp
adc
push
mov
mov
aaa
aam
sub
loope
jno
dec
dec
ret
mov
cld
popf
push
adc
lahf
push
sub
mov
add
aad
mov
add
je
dec
dec
sub
cltd
sbb
popf
cld
add
dec
ret
xchg
out
cmp
std
ljmp
sub
jno
mov
insb
icebp
push
xchg
in
movsb
mov
ret
ljmp
jno
ljmp
mov
dec
lahf
and
divl
inc
jge
jae
add
jae
fwait
test
aaa
je
aas
lods
pusha
lahf
outsl
fnstcw
push
ret
mov
popf
outsl
loopne
hlt
or
outsb
mov
sub
stos
insb
imul
out
xchg
dec
pop
out
mov
mov
mov
test
mov
jmp
and
loope
xor
inc
mov
lds
ficoml
cltd
push
std
jae
push
in
icebp
or
cmpsb
xchg
imulb
push
stos
add
mov
in
mov
mov
sub
loope
jmp
imul
call
xor
jl
jge
nop
jns
xchg
lret
fbld
lret
mov
mov
lock
call
mov
js
push
rol
jbe
mov
cmp
mov
jecxz
pop
xchg
out
xor
mov
nop
adc
pop
cwtl
std
das
push
mov
xor
subb
add
sub
xchg
push
xor
idiv
jecxz
icebp
ret
inc
lods
repnz
push
sarb
sti
jmp
movsl
push
jo
inc
stos
jb
xor
sub
xor
pop
add
das
sub
and
or
mov
and
insl
repz
fists
call
jcxz
jp
lock
mov
fbstp
push
xchg
cmp
shll
lret
adc
fisttps
xchg
into
outsl
loopne
add
jmp
xchg
dec
sahf
loopne
mov
pop
scas
jbe
xor
out
push
pusha
dec
cmp
scas
gs
mov
popf
mov
mov
sbb
sub
sub
jnp
push
ficompl
push
dec
rcll
or
gs
sahf
xor
lds
or
mov
in
fsubrl
leave
add
insb
fistl
mov
fwait
rorl
ljmp
rorl
iret
cmpsl
test
outsb
lcall
sub
or
dec
xchg
iret
jb
jmp
scas
das
and
std
jg
pop
mov
mov
dec
lock
jae
in
pop
dec
ficomps
test
push
sub
fwait
lcall
shl
int
enter
xchg
add
sbb
add
popf
sti
mov
mov
mov
jle
testl
mov
in
add
loope
and
dec
adc
pop
js
add
insb
imul
lcall
insb
repnz
imul
cmp
adc
adc
mov
rclb
jno
cmp
cmpsb
inc
gs
push
push
jns
lea
enter
sub
mov
xorb
js
jno
sbb
adc
leave
scas
outsl
mov
addl
jnp
gs
sub
leave
inc
mov
out
gs
sub
test
dec
jle
clc
push
fptan
stos
sahf
mov
scas
in
push
push
mov
ss
mov
ret
ja
dec
push
mov
ds
and
aad
xchg
arpl
pop
cwtl
or
sti
xchg
je
mov
iret
pop
mov
mov
in
dec
mov
inc
scas
inc
in
jno
push
sarb
push
enter
js
and
ret
xchg
jno
jne
ds
insb
ja
mov
lcall
je
sub
sti
je
andl
into
loope
sti
jbe
push
jg
lahf
insb
outsb
sub
or
data16
adc
jb
ret
hlt
mov
mov
ret
xor
sbb
ljmp
leave
lcall
in
in
push
pusha
jo
inc
lds
mov
mov
cmp
insb
bound
xchg
dec
adc
ret
xchg
nop
or
jno
hlt
or
jnp
pop
pop
sti
fistl
mov
adc
or
xor
add
dec
jge
jecxz
pop
insl
or
lock
mov
adc
sbb
jae
cwtl
sub
mov
shlb
xlat
xlat
push
dec
xor
jae
mov
popa
cli
inc
lea
mov
pop
and
adc
std
stos
or
cmp
cmpsb
cmpsb
dec
bound
imul
inc
in
add
inc
xor
inc
fisubrl
aam
shlb
incl
jp
sub
and
pop
push
jb
adc
xchg
aas
fwait
mov
push
sarl
pop
lods
aam
or
push
or
scas
mov
lea
dec
xchg
jb
xor
je
and
xchg
aam
pop
sbb
mov
cmpsl
and
dec
sbb
adc
popf
test
stc
not
mov
push
inc
inc
pop
lds
in
inc
sbb
mov
leave
add
insl
loopne
mov
movsl
push
in
mov
jnp
das
jbe
cmp
dec
jmp
mov
aaa
les
les
mov
test
in
adc
mov
movsb
xchg
insl
xchg
dec
clc
es
xor
lds
or
sbb
mov
push
fidivrs
clc
ret
outsb
mov
ja
fsubl
filds
dec
stos
mov
mov
std
mov
ret
in
fcoml
aas
sbb
lcall
pop
and
dec
lcall
push
cmp
rol
mov
pop
jo
in
dec
cmp
adc
lock
cmp
jno
leave
into
xor
lret
cwtl
in
add
xchg
test
pushf
xchg
xor
packsswb
scas
sbb
int
adc
outsb
pop
dec
jnp
orb
push
mov
and
sbb
mov
lcall
int
loop
sub
or
jg
aaa
mov
or
shrl
out
movsl
fldcw
jge
cmp
cli
cmp
cmc
sahf
xor
push
sbb
sbb
push
dec
test
lods
movsb
dec
in
xchg
pop
mov
imul
inc
jbe
popf
cmp
cwtl
aad
push
mov
push
jno
rorl
dec
push
dec
mov
and
hlt
ret
adc
push
fcomip
xchg
mov
lock
cmp
xlat
je
in
sbb
lods
mov
pop
ret
adc
subl
dec
mov
pop
les
mov
adc
push
or
dec
ljmp
dec
ljmp
inc
loopne
nop
or
ret
mov
cmpsl
mov
aaa
pop
adc
clc
divb
xchg
bound
inc
xor
jne
add
movsb
pop
scas
cltd
push
pop
push
mov
mov
add
shlb
or
push
mov
cmpsl
sbb
clc
jl
shl
bound
cmp
push
pop
ret
push
push
pop
popf
cmp
mov
cmp
add
jp
push
jae
lret
pop
pop
jbe
out
push
pop
mov
push
cli
sub
mov
jmp
lea
sbb
push
sti
adc
jnp
jg
cmp
clc
and
shlb
push
shrl
scas
xchg
out
aad
push
add
outsl
adc
inc
daa
mov
lock
popl
scas
pop
in
adcl
jmp
lock
inc
cmp
inc
cld
std
call
fdivrs
cmp
add
les
adc
xchg
test
daa
cltd
stos
out
cmp
xor
sbb
mov
mov
scas
dec
incb
lds
int3
arpl
mov
push
cmp
daa
rorb
pushf
dec
push
mov
das
lea
iret
arpl
pop
or
sub
repnz
out
lahf
decb
aam
loope
or
test
fmuls
cltd
in
pop
icebp
out
xchg
mov
data16
and
sbb
dec
pop
ss
inc
jmp
sub
dec
dec
mov
sub
inc
xor
pop
inc
or
cwtl
and
add
pop
mov
aad
sub
nop
pushf
jnp
inc
xchg
adc
jge
sbb
in
mov
mov
int3
mov
pop
sbb
push
or
lock
cwtl
mov
jno
or
ficoml
int
leave
gs
xchg
sbb
pop
sbb
mov
pop
test
mov
mov
xor
cmpsb
xchg
jnp
add
outsb
mov
popf
iret
out
cmc
jl
ret
lds
rorb
outsl
inc
and
mov
mov
cmp
cmpsb
dec
std
mov
std
cmpsl
inc
fisttpll
fsubrl
push
mov
xorb
jbe
hlt
enter
dec
clc
cmp
icebp
cmp
bound
push
xor
mov
cli
jecxz
pop
data16
add
subb
pop
cmp
mov
inc
jp
inc
icebp
mov
sub
in
imul
in
mov
imul
push
scas
ss
cmc
lock
add
lret
add
sarl
xchg
test
mov
les
adc
or
arpl
scas
cmp
aad
sub
stc
loop
xchg
mov
lds
dec
sahf
shll
lock
std
pushf
jmp
mov
mov
jo
pop
xor
and
xorb
lea
arpl
sarb
aad
int
mov
faddl
push
jp
rorb
mov
jns
bound
push
inc
lock
sbb
xor
xor
mov
and
mov
or
in
mov
pop
daa
popf
xor
repnz
sbb
das
xchg
cltd
push
cmpl
ds
sbb
dec
add
scas
push
mov
adc
lods
test
inc
movsb
dec
test
sti
iret
loopne
shll
out
push
movsb
xchg
cld
lock
in
sub
or
leave
pop
dec
imul
xchg
jbe
mov
shrb
mov
jbe
pop
push
daa
xchg
dec
call
je
push
xchg
aas
sub
sub
cmp
leave
leave
mov
mov
push
cld
mov
mov
mov
lret
cli
mov
in
dec
iret
ja
lods
or
les
cld
xchg
addr16
mov
cmp
test
xchg
dec
shll
and
cmp
testl
stos
adc
push
clc
mov
dec
sbb
xchg
add
push
rcrb
ficoml
in
mov
add
insb
cmpl
push
jg
cmp
mov
pusha
mov
sbb
inc
xchg
cmp
or
in
sub
aaa
clc
mov
lret
testb
gs
jp
mov
pop
push
fdivrp
mov
out
xor
addr16
and
mov
xor
inc
cmp
mov
adc
xchg
dec
jno
fsubl
fidivs
xchg
mov
fninit
add
test
sub
or
loopne
clc
sbb
mov
jmp
xlat
mov
or
mov
data16
jb
outsl
cmpsl
inc
cmpsb
push
shll
cmpsb
jae
dec
lods
dec
adc
mov
xor
xchg
xchg
or
pop
xchg
mov
add
ja
and
aam
pop
ficompl
lea
dec
int
insb
sub
or
fs
jg
push
or
jae
adc
cmpsb
cmp
leave
inc
cmp
lds
mov
jo
popf
pop
stc
jg
adc
testb
cmp
test
inc
jle
sbb
sub
aad
cmp
push
adc
mov
cmpb
into
add
aad
subb
nop
ficoms
movsb
push
ret
ja
imul
xor
stos
jp
outsl
outsl
push
push
add
jb
jg
pop
cmpsb
xchg
mov
repz
daa
fistl
repnz
rorl
jmp
inc
aas
fpatan
or
or
push
mov
inc
or
pop
stos
insb
fiaddl
xor
js
shlb
addr16
inc
jbe
lods
and
inc
cmp
or
push
lock
int
stc
jp
mov
adc
mov
imul
int
mov
out
dec
testl
fcom
rcl
in
sahf
mov
aad
sub
lret
pop
lods
stos
inc
jmp
mov
rcll
push
imul
les
xchg
xchg
dec
idivb
jbe
rcl
adc
lahf
ss
push
xchg
lock
push
mov
sahf
shrb
xchg
shll
fnstcw
jecxz
out
jmp
addr16
mov
jecxz,pt
sbb
cmpl
je
xchg
adc
mov
rcrl
or
repz
rorl
mov
push
adc
in
sbb
rcll
or
imul
inc
push
inc
scas
jo
out
push
loop
or
push
aad
sub
in
call
stos
sub
and
loop
cmpsl
stos
xchg
std
aaa
cmp
sahf
popa
mov
pop
xlat
sub
test
inc
jp
pop
mov
jne
orb
enter
das
push
pop
aaa
mov
stc
pop
fisubs
dec
rcrl
out
fwait
es
jae
mov
stos
int3
push
iret
pop
stos
and
mov
hlt
in
cmp
add
pop
pusha
sub
xor
test
mov
out
fidivrl
xchg
cmp
mov
test
add
test
push
dec
mov
ffreep
cltd
mov
aam
mov
pop
stos
lock
ds
shl
mov
out
pop
dec
lods
cld
adc
sub
aam
push
xchg
push
roll
ss
cmc
push
mov
dec
mov
popa
lods
test
icebp
outsb
cli
xchg
mov
mov
mov
out
sub
mov
push
inc
mov
inc
add
cmp
sub
mov
in
aad
mov
xchg
das
push
stos
sahf
cmpsl
cmpsb
add
pop
icebp
inc
push
je
das
outsb
lahf
pop
ficompl
or
xor
in
pop
insl
idiv
dec
and
movsb
add
sub
std
inc
push
lret
push
movsb
gs
xchg
and
movsl
outsb
or
xchg
pop
dec
scas
in
loope
sbb
jg
hlt
stos
lret
lods
or
or
jns
mov
paddsw
imul
or
lods
fldenv
or
jne
mov
jae
push
inc
mov
push
clc
mov
push
mov
outsb
clc
jmp
out
pop
sub
xchg
cmc
sbb
mov
cmp
test
ja
or
jne
dec
mov
and
out
dec
mov
cltd
pop
xchg
outsb
in
push
in
movsl
lahf
adc
xlat
gs
pop
push
jae
sbb
sbb
xor
int3
sarl
out
mov
dec
push
push
xchg
adc
lahf
out
cmpsl
stos
sbb
push
insl
das
and
mov
jne
mov
pop
int
addr16
jl
add
pop
xor
mov
sbb
pop
sub
fistpll
dec
mov
lahf
out
pop
sti
fs
sub
cmp
mov
sub
sub
sub
fwait
jmp
out
stc
mov
or
lods
pusha
push
sbb
push
dec
data16
jne
adc
add
cwtl
jnp
and
sub
and
inc
xor
inc
icebp
fdivl
or
and
inc
arpl
mov
jae
mov
mov
cmc
mov
cmp
jae
imul
cli
cs
inc
xchg
cmp
lds
jbe
data16
notb
dec
pop
mov
fimull
fldl
and
mov
arpl
mov
dec
es
jae
ja
rol
test
push
xchg
fmuls
mov
and
dec
and
cmp
ds
and
scas
dec
xor
xor
mov
sub
dec
idivb
jl
jo
fldcw
inc
repnz
and
inc
xor
fld
iret
lods
inc
xor
jl
lcall
addr16
jle
pop
dec
inc
cmp
stc
and
movb
pop
dec
jo
popf
mov
popf
mov
xor
out
adc
out
loope
loopne
mov
arpl
xor
dec
xchg
inc
fstpt
mov
ljmp
movsl
dec
jno
cmp
adc
or
pusha
jmp
imul
inc
popa
mov
inc
pop
jbe
repz
sahf
fdivs
cmc
ret
xchg
jecxz
push
lock
in
dec
mov
and
shlb
jecxz
mov
inc
out
inc
jmp
lret
popa
and
js
mov
push
sub
int3
xor
daa
cmp
lock
pop
jp
mov
cmpsl
cld
sbb
add
cmpsl
cwtl
test
shl
sub
repz
not
add
jl
fs
pop
addr16
ljmp
cmp
imul
bnd
mov
loope
and
subb
jbe
aaa
rcl
std
pop
cmpl
mov
sbb
icebp
mov
adcb
xor
fisubrl
mov
outsb
sti
in
and
popf
lods
xor
xchg
push
sbb
lock
cmc
mov
xor
xchg
ds
inc
and
cltd
loopne
push
pop
sbb
jle
mov
adc
mov
aaa
out
sbb
cltd
rolb
cmp
rolb
or
clc
out
or
test
ljmp
loop
pop
dec
adc
sarb
or
xlat
int
cmp
in
push
lret
pop
lret
cltd
dec
in
imul
stos
mov
and
or
jl
fadd
cmc
mov
mov
push
popf
pop
or
pop
lds
cmp
add
add
mov
mov
push
inc
pop
aaa
mov
test
pop
pop
jp
pop
cld
rcll
mov
scas
xchg
arpl
push
rolb
or
adc
xchg
fisubrl
pop
cmp
xor
fs
cmpsb
push
adc
sbb
in
push
cmp
or
out
jb
rclb
mov
push
mov
insb
jl
adc
mov
lock
pop
in
into
jae
idivl
dec
cltd
std
stos
add
sub
pop
addl
adc
add
dec
sub
add
jg
pop
in
leave
push
outsb
jle,pt
cmp
nop
add
mov
sbb
mov
fldt
imul
and
add
xor
mov
push
xchg
xchg
dec
aad
in
aaa
xchg
mov
iret
pop
add
shl
fcompl
or
daa
xchg
lahf
in
xor
aas
or
cmp
test
ds
jb
sub
xor
mov
repz
jge
out
ficoms
inc
push
fs
mov
jbe
jo
mov
das
jno
pop
shrb
jecxz
mov
jne
xchg
aam
push
push
out
mov
mov
lds
push
fidivl
lea
xchg
pop
dec
sbb
push
out
into
dec
cmpsl
movsl
jnp
test
mov
int3
cmc
fistpll
fisttpll
cmp
adc
jae
jns
adc
xchg
sbb
sub
cmc
sub
push
xchg
cmp
jg
jne
scas
out
std
mov
gs
in
push
jo
les
outsb
cmc
xchg
mov
imul
shl
add
in
ss
movb
cli
inc
or
inc
loopne
out
fsts
mov
scas
inc
mull
sub
jb
push
test
movsl
or
mov
ret
lahf
cmp
loop
add
mov
push
push
dec
out
test
test
incb
pusha
mov
das
shrl
nop
pop
jb
add
dec
or
lcall
cld
popa
cmp
mov
fmuls
cmpsb
pusha
or
test
pop
scas
cmp
cmpsb
xor
mov
xchg
mov
shrb
fistpl
fsubl
arpl
dec
repnz
shrb
xchg
fucomip
fbld
xor
lods
xor
loopne
or
ret
mov
lcall
cli
cltd
cli
cmp
push
mov
stc
pop
std
pushf
ss
xor
xchg
lds
mov
sbb
adc
jmp
jmp
loope
cmp
jnp
cmpl
dec
jge
sub
mov
pusha
inc
mov
and
and
mov
fucomi
or
leave
xorl
orl
xchg
imul
lcall
pop
cwtl
test
filds
cmp
mov
xlat
rcrb
mov
movsl
xorb
out
pop
test
mov
ljmp
or
sub
pop
dec
inc
cli
jno
mov
lcall
adc
aaa
stos
dec
or
scas
js
xor
xor
pop
mov
jmp
test
sub
stc
sub
shlb
cltd
out
test
sbb
outsb
cmp
pop
sbb
aas
push
push
mov
icebp
adc
dec
or
outsl
adc
add
test
cmpsb
inc
or
shlb
jle
jns
mov
cmp
pop
sub
inc
dec
mov
fidivrl
pop
cmpsl
push
or
ja
xchg
out
adc
incl
mov
push
dec
adc
fsubp
jmp
dec
mov
sbb
pop
pop
jle
mov
lahf
testl
mov
je
lahf
cmpsl
jecxz
je
cs
cmp
lea
adc
sahf
and
not
test
nop
orb
int3
sbb
dec
inc
mov
or
cmp
cmp
ja
add
push
add
jge
cli
loop
or
popf
mov
inc
cmp
in
pop
adc
mov
icebp
inc
mov
je
test
cmp
shll
jno
mov
pop
push
bound
pop
dec
movsl
cmpsl
loope
push
dec
mov
call
sarb
push
sub
loop
insl
or
mov
xor
outsb
inc
xchg
mov
xchg
fstl
enter
scas
and
arpl
add
in
mov
data16
xchg
cmp
repz
adc
sub
outsl
dec
inc
mulb
push
or
nop
jge
pop
cmp
imul
fldenv
inc
pop
aaa
insl
repz
dec
loope
lods
hlt
cmp
sbb
fisubl
jno
pop
cmpl
cmpsl
stos
movsb
mov
mov
push
xor
test
rclb
dec
xor
mov
shrb
adc
cmp
mov
outsb
mov
dec
mov
in
or
dec
icebp
sbb
push
mov
push
out
movsb
orl
cmpsb
aad
jecxz
or
dec
push
test
xchg
jle
push
mov
mov
or
leave
mov
loope
add
sldt
mov
add
js
and
jne
mov
fcomp
int
jno
scas
test
sub
and
bnd
rclb
sub
lods
add
or
ljmp
push
jge
mov
jbe
mov
in
ret
int3
inc
and
mov
cwtl
outsb
push
negl
fadds
inc
cmp
pop
inc
test
scas
clc
lock
or
add
enter
sbb
jp
je
lcall
mov
or
push
mov
ds
jmp
subl
pop
jp
loop
ljmp
or
fistpll
shlb
test
pop
es
jo
pop
stc
mov
jno
aaa
cltd
pop
out
je
adc
xor
mov
mov
xchg
addl
int3
std
fwait
in
out
fdivrs
pop
or
push
hlt
add
jnp
dec
pop
and
mov
adc
mov
movsb
mov
inc
out
in
into
cld
jno
push
in
pop
fisttps
mov
lock
xor
arpl
xchg
xor
add
sub
xor
sbb
mov
js
stos
jmp
push
sub
mov
push
dec
xchg
jmp
daa
inc
xchg
lahf
clc
sub
ret
xchg
xchg
sbb
sbb
push
stc
jle
aad
fildl
arpl
rcl
dec
mov
xchg
arpl
icebp
dec
std
out
cmc
outsl
jo
and
jmp
ret
imul
test
loopne
test
out
cmp
xchg
out
imul
pop
shrb
xor
pop
inc
mov
lock
sbb
sbb
mov
clc
lcallw
repz
ret
cltd
mov
cmp
scas
pop
sbb
icebp
scas
test
fsubs
or
xor
jae
mov
roll
xor
push
push
mov
mov
pop
or
icebp
incb
push
daa
scas
movzwl
cmp
xchg
and
jnp
pop
cmpsl
popf
and
dec
ja
jmp
mov
sub
data16
testl
or
push
dec
jecxz
dec
adc
dec
cmp
ret
aad
mov
fst
push
inc
cmp
add
loopne
add
test
inc
or
pop
xor
jge
imul
sbb
xchg
xor
inc
sbb
xchg
insb
push
mov
sub
or
pop
scas
jecxz
mov
loope
mov
dec
pushw
mov
bound
mov
icebp
push
mov
test
mov
movsb
int3
popf
mov
aas
inc
stos
pop
mov
pop
ds
lcall
mov
jp
xchg
mov
sbb
jbe
lret
cmpb
cmp
adc
mov
and
lret
out
out
mov
adc
pop
xor
pop
pop
xchg
outsl
xor
jge
outsb
pop
xlat
jmp
xchg
repnz
mov
scas
pop
daa
sahf
push
xchg
cli
sub
test
mov
mov
arpl
ss
xor
push
dec
sub
rcll
fs
sub
mov
nop
jno
xchg
movsb
imul
push
stos
arpl
fucomip
sahf
adc
pushf
fadds
rorl
mov
and
push
shl
jge
cmc
in
rcr
fidivl
mov
mov
or
cmp
dec
mov
xor
dec
iret
mov
jbe
inc
and
xchg
adc
xchg
cmp
out
pop
and
mov
jmp
or
pop
jnp
insb
movsb
mov
sbb
inc
sub
jecxz
sbb
mov
xchg
std
das
out
jp
jb
test
pushf
loop
xchg
in
outsb
inc
xchg
data16
pushf
and
adc
scas
clc
mov
sbb
mov
xor
lods
xchg
jge
rolb
dec
push
mov
inc
jns
arpl
sub
nop
mov
insb
aaa
inc
mov
lock
push
xchg
orl
ss
dec
mov
push
jnp
fnsave
xchg
and
and
and
cmp
mov
and
mov
jo
sti
ss
mov
mov
lds
sbb
jp
movsb
sub
push
les
sub
sbb
stc
test
mov
loop
inc
dec
fidivrl
pop
add
mov
fimuls
fwait
push
adc
dec
inc
jne
ret
jnp
inc
out
mov
fwait
jae
jmp
sub
or
dec
add
test
aaa
int
or
in
pop
sbb
fsub
pop
mov
mov
or
jnp
fidivrl
add
fisubrs
pop
cwtl
adcb
sub
mov
pop
xchg
add
loop
aas
outsb
ffreep
sub
mov
xchg
pop
cmp
test
sbb
inc
popf
xor
jnp
mov
xlat
notl
jnp
add
adc
shl
cwtl
jb
aam
push
outsb
sbb
fsts
or
inc
out
clc
push
aam
cmpsl
insb
ret
push
cmp
push
inc
jp
xor
add
push
mov
mov
jp,pt
insl
xor
dec
adc
sbb
rorl
xor
loope
sbb
add
sub
mov
lock
adc
ds
pop
in
xor
std
inc
adc
cmp
sbb
sub
test
pop
fdivr
test
test
mov
mov
push
cmp
push
lahf
mov
stos
push
outsl
jns
stos
in
icebp
dec
sub
pop
repnz
push
popa
in
fdivrp
insl
add
adc
lods
fbld
and
pop
xchg
gs
imul
movsb
pop
mov
pushf
arpl
lret
add
testb
stos
cltd
ja
xchg
aaa
pop
out
sbb
cs
gs
dec
sub
xor
xchg
shlb
pop
sbb
jns
or
mov
jl
lahf
add
clc
cmpb
je
xchg
push
adc
into
inc
nop
in
mov
sub
ror
fwait
lret
adc
arpl
inc
pop
sub
sbb
in
lret
mov
pop
fs
push
xor
sahf
xchg
ds
leave
aad
dec
stos
jle
push
popf
shlb
mov
aad
shll
pop
jns
mov
jb
leave
pop
ss
xor
stc
aas
push
or
sbb
mov
hlt
sub
mov
in
insl
sbb
and
mov
repz
icebp
incb
fmuls
cmp
lock
xlat
repnz
mov
mov
lods
cli
in
jnp
push
in
push
mov
and
adc
mov
hlt
xor
ret
xchg
lods
adc
push
imul
in
push
dec
into
icebp
add
aaa
test
int
repnz
mov
ljmp
sub
fs
in
sarb
pop
int
aaa
cltd
test
jle
ds
sub
hlt
push
jecxz
out
xchg
xchg
shlb
push
in
test
dec
xchg
jp
xchg
mov
movsb
movsl
imul
sbb
add
or
call
idivb
mov
adc
mov
jns
jae
xchg
lock
inc
push
inc
inc
popa
cli
mov
aas
xchg
test
adc
rorb
jl
cmp
inc
in
pop
icebp
or
pusha
dec
mov
js
in
aas
add
pop
std
movsb
dec
sbb
mov
mov
mov
inc
cld
iret
jle
sbb
xchg
pop
icebp
mov
lret
movsl
into
dec
push
popf
popa
add
or
mov
or
lods
lds
in
inc
and
scas
cli
imul
fmul
push
jno
into
mov
mov
pop
scas
es
fwait
shl
and
cs
mov
mov
push
dec
scas
xchg
stos
popa
and
in
movsb
aad
loopne
dec
push
cmc
sbb
fidivrs
jno
test
pop
and
shlb
sbb
mov
stos
cwtl
inc
mov
mov
pop
xor
push
xor
mov
lock
jb
les
stc
fisttps
push
addr16
push
xchg
sti
dec
dec
fnstenv
pop
orb
cld
aaa
cmp
gs
lret
jnp
cmp
pop
ss
inc
in
mov
dec
push
push
into
loope
repnz
popf
xchg
test
into
inc
mov
pop
push
mov
mov
ret
outsb
dec
jno
stos
ds
enter
fistl
push
iret
sbb
push
add
cmp
int3
mov
inc
ja
push
mov
jb
cmp
mov
loop
push
out
das
jp
cmp
int3
cmp
inc
aam
inc
dec
or
xor
mov
ret
popf
ja
add
xchg
jo
xchg
push
sbb
mov
or
imul
push
inc
icebp
ficomps
jbe
faddl
mov
mov
adc
xlat
stc
inc
push
cmp
orl
jmp
sbb
enter
mov
dec
mov
and
das
or
ljmp
enter
adc
fcmove
adc
mov
xor
pop
test
or
lods
cmp
sahf
mov
cmp
int
push
imul
pusha
scas
out
dec
call
mov
xchg
or
dec
int3
xor
ret
loope
scas
mov
pop
sub
ficoms
sbb
lock
cmpsl
test
sbb
pop
add
test
lods
pop
dec
inc
test
jo
iret
lcall
lahf
mov
cmpsl
stos
test
cmc
les
lahf
and
xchg
stos
int
stos
fisttpl
cmpsb
sbb
or
aad
or
add
dec
dec
out
jl
adc
add
pop
pusha
and
sub
lret
mov
dec
call
cmpsl
adc
sub
push
pushf
sahf
mov
adc
mov
sub
lock
xchg
pop
or
mov
mov
rorl
pushf
cmpl
cmpsl
cmp
pop
mov
fwait
push
ja
push
mov
out
jae
and
out
adc
xchg
rol
sub
mov
loope
xchg
sub
hlt
sub
cmc
mov
dec
mov
sub
mov
mov
sbb
jb
iret
mov
xor
jp
add
mov
ret
stos
pop
push
inc
dec
and
add
and
pop
data16
pop
push
xchg
push
inc
xchg
xchg
push
xor
rorb
je
and
cli
sbb
dec
xlat
jp
xchg
jmp
cld
cmpl
xor
jl
xor
mov
adc
test
jae
cwtl
adc
xor
adc
test
idivl
sub
xchg
shrb
lock
movsb
in
and
fwait
adcb
aas
jnp
enter
push
decb
stc
mov
pop
mov
sub
sbb
pushf
adc
push
sub
cmp
cmc
or
jo
gs
cmpsb
push
ficomps
mov
xor
xchg
enter
dec
divb
cmp
in
mov
dec
aam
cmp
hlt
mov
imul
aas
mov
push
xchg
sub
rcll
cltd
sbb
std
cmc
shll
adc
pop
fistpll
into
add
adc
das
testl
aas
xchg
xor
dec
cmpb
jne,pn
outsl
adc
sahf
or
jns
lea
xchg
mov
sub
cmpb
dec
hlt
inc
pop
sbb
and
mov
mov
call
sbb
lcall
or
inc
and
cmp
mov
inc
dec
xchg
test
fs
xor
inc
cwtl
or
jmp
sbb
les
adc
dec
fimuls
shlb
sub
mov
lret
cwtl
sub
arpl
je
cmp
lahf
mov
push
stc
xchg
and
mov
sub
daa
pop
leave
test
cmpsl
in
cmp
mov
mov
shrl
movsb
jge
mov
fwait
xlat
dec
jb
stos
dec
push
add
lods
setl
xchg
adc
lods
loopne
es
push
cs
mov
sub
xchg
pop
repz
loopne
outsl
pop
pop
pop
scas
movl
cld
xchg
fwait
in
mov
inc
test
inc
pop
jns
mov
jns
cmp
call
sbb
sbb
adc
xor
and
push
or
sub
mov
jbe
stos
dec
xlat
xor
rcrb
push
loop
dec
mov
cmp
push
pop
adc
mov
jle
lods
mov
mov
mov
pop
ficompl
out
push
movsb
lret
xlat
imul
cld
inc
sub
out
gs
js
push
push
inc
insb
in
lods
lods
pushf
add
and
xchg
arpl
sbb
inc
ds
fisubl
adc
and
mov
js
pop
and
test
sub
shll
cwtl
lock
clc
int3
js
xchg
jne
js
rep
sub
loope
repnz
push
out
inc
scas
mov
add
daa
pushf
pop
jl
and
mov
cmp
add
mov
shll
insb
loopne
pop
push
pop
mov
adc
or
scas
lds
lea
xchg
sbb
sar
popa
std
xor
imul
lcall
lds
fnstcw
inc
sbb
xor
adcb
fst
mov
ja
mov
cmc
jns
mov
jno
repz
das
or
mov
into
scas
bswap
icebp
orb
into
or
push
pop
cld
pop
pop
sub
cwtl
cmp
sbb
sbb
mov
mov
lods
push
addl
jne
loop
sarl
pop
mov
jne
or
aam
cmp
xlat
ljmp
cwtl
push
repnz
mov
ret
sbb
imul
repz
cmc
aam
mov
mov
js
sub
cli
cmp
sbb
inc
dec
scas
jnp
stos
scas
dec
add
sub
gs
leave
or
addb
fucom
gs
push
int3
add
jmp
in
imull
stc
aam
mov
or
mov
scas
aad
adc
xlat
jno
ret
jle
xchg
aam
jno
mov
sbb
mov
cmp
jno
push
imul
xor
push
sbb
xchg
mov
fidivrs
push
jl
dec
and
and
inc
loopne
pop
subb
xor
xor
out
jb
test
jne
ret
jne
mov
sub
mov
out
mov
mov
pop
jle
loopne
or
sti
test
rcrl
jno
push
inc
pushf
test
add
je
in
mov
out
arpl
testb
sbb
sub
outsb
fnsave
mov
jae
insb
add
fistpll
inc
enter
mov
icebp
pop
ret
sarl
in
leave
mov
test
imul
dec
sbb
mov
mov
das
ficomps
push
sbb
inc
cwtl
sub
push
xchg
add
imul
outsb
jnp
push
jge
sbb
mov
insb
jns
xchg
movsl
jbe
bound
call
enter
xchg
stos
flds
movsl
and
psrlw
nop
pop
adc
jecxz
aad
cmc
dec
add
push
ja
popf
push
lahf
mov
insl
push
xor
pop
dec
mov
ret
and
inc
or
xor
jle
insl
iret
xchg
sahf
ljmp
outsl
out
cwtl
jle
stc
lds
adc
mov
mov
ds
sub
test
mov
sub
sarb
movsl
push
loopne
addr16
add
enter
jbe
es
int3
cld
cmp
mov
jp
mov
lahf
ss
insb
inc
cmpsb
jecxz
das
add
adc
in
cmp
sbb
jg
scas
in
hlt
nop
es
dec
out
cld
mov
push
and
xchg
scas
cmp
rcrb
xchg
sub
aam
icebp
xchg
sbb
test
and
pop
les
sbbl
sbb
jmp
jnp
popa
push
hlt
push
push
out
shl
movsb
pop
pop
pushl
or
adcb
xor
out
out
les
mov
loopne
mov
pop
mov
pop
inc
sub
xchg
pop
je
jno
dec
push
mov
adc
notb
add
cli
jle
stos
testl
sub
insl
push
imul
jecxz
xor
lock
inc
dec
les
imul
stos
dec
cli
adcb
push
fstps
cmp
cmp
ljmp
lods
jno
loopne
inc
or
out
inc
cmc
cmp
xchg
insl
xchg
inc
fs
xorb
cld
popa
gs
adc
rorb
jmp
sub
and
xor
jg
sbb
mov
daa
cmp
sub
inc
leave
inc
int
sbb
fildll
gs
ljmp
inc
insb
rolb
and
cwtl
icebp
ss
roll
or
jge
jmp
mov
jo
cltd
pop
aas
fstl
aad
mov
mov
shrb
sbb
aam
xor
adc
add
loopne
xchg
cmp
push
rorl
cmp
jge
xor
out
mov
pop
xor
lods
xchg
push
scas
stc
cld
scas
ljmp
mov
movsl
push
movsl
outsl
jl
test
adc
push
sbb
sub
pop
mov
add
push
adc
jae
lcall
ret
xchg
adc
sti
xor
cmp
jb
lahf
or
or
aaa
and
sub
mov
mov
shlb
insb
fisttpll
xchg
clc
orl
addb
mov
sub
repz
lods
inc
xchg
mov
loop
jle
mov
add
push
or
fdivr
push
in
sti
inc
adc
jns
mov
out
pushf
sahf
xchg
and
xor
outsl
out
mov
dec
jecxz
adc
mov
push
push
fbld
jmp
push
cmpsb
inc
jb
adc
mov
xorb
fiaddl
fst
lea
add
lds
mov
dec
or
xchg
dec
mov
xchg
mov
sbb
adc
mov
mov
mov
mov
lds
int
aad
push
pushf
jg
cmp
popa
inc
ljmp
push
push
or
gs
pushf
cmp
cmp
jl
inc
cltd
cmp
in
sbb
js
stc
rorb
int
push
adc
jnp
jno
xchg
movsl
lock
out
mov
rcll
inc
mov
adc
fistpl
cmpsb
cli
lods
xchg
jl
xchg
jl
cli
jb
popf
mov
push
pop
sbb
sub
xchg
stos
add
sub
lcall
rorl
arpl
popl
fstpl
pusha
popf
test
aaa
dec
in
mov
sub
cld
cld
xchg
in
sahf
scas
jo
ret
inc
in
test
packsswb
adc
out
rolb
pop
cltd
js
pusha
popa
lret
or
inc
and
call
mov
pop
mov
dec
scas
lods
daa
adc
pop
lds
loop
cmp
jmp
insb
call
mov
es
cmp
mov
sbb
push
inc
sbb
and
imul
mov
dec
jnp
mov
cmp
mov
loop
sub
sub
pop
cmpb
or
push
ds
mov
inc
in
pop
pcmpeqw
int3
call
push
xor
outsb
jl
jbe
sarb
dec
push
or
mov
pop
sub
insl
aaa
cmp
les
push
dec
push
dec
push
and
push
xchg
int3
or
inc
xor
in
inc
push
sbb
cmp
adc
negl
xor
roll
sbb
cmc
outsb
push
jle
or
adc
dec
cld
mov
add
mov
test
push
push
std
cwtl
mov
jmp
adc
adc
scas
iret
push
test
movsl
adc
imul
pushf
fisubrs
pop
sarl
and
pusha
lds
push
gs
je
lock
bound
hlt
pop
aas
mov
mov
adc
cmc
mov
or
xor
mov
test
mov
shll
push
jmp
ja
mov
mov
sub
loopne
pop
sub
mov
jl
mov
out
rcrb
inc
shrb
cmpb
rclb
mov
mov
outsb
stos
cmp
and
jo
mov
dec
cltd
push
xchg
sbb
jne
repz
stc
push
or
leave
push
int3
mov
pop
ja
mov
xor
aaa
pop
and
iret
fwait
push
jle
adc
push
mov
push
int
outsb
push
mov
in
ret
push
mov
mov
imul
rorb
out
sbb
add
das
xchg
in
jg
aaa
pusha
ror
fistpll
and
sub
jl
out
push
repz
ds
test
jle
mov
inc
xchg
pop
leave
into
sub
cmpsl
subb
addr16
fs
sbb
lret
push
insb
adc
jno
push
arpl
add
jmp
push
push
adc
mov
and
and
fcoml
cmp
sahf
loopne
jno
jecxz
shll
sbb
sbb
dec
in
dec
les
xchg
sti
dec
jle
mov
mov
js
aas
push
fwait
sbbl
mov
xchg
inc
mov
xchg
test
or
pop
cmc
mov
fsubl
sbb
out
mov
xchg
loop
insl
leave
add
mov
add
mov
mov
rorl
movsb
pop
jle
outsl
je
push
lahf
dec
fs
negb
mov
out
scas
push
cmp
hlt
push
xor
lock
mov
sub
hlt
pushf
push
push
mov
mov
idiv
sub
test
bound
mov
out
scas
mov
hlt
fists
sahf
pop
add
idivl
bound
mov
jo
push
fcomip
sahf
push
cli
js
mov
scas
mov
mov
push
cld
mov
pop
xor
js
je
ljmp
sub
sbb
dec
scas
sbbl
rorb
pop
movsb
xchg
jns
push
and
xchg
outsb
je
pop
sahf
push
shr
inc
xchg
or
aam
mov
xchg
shr
divb
pop
inc
les
adc
cmp
data16
mov
push
pop
xchg
mov
pop
sahf
movsb
inc
push
inc
dec
cli
scas
mov
adc
push
xor
dec
cmp
jge
push
inc
test
mov
mov
pop
sub
mov
ds
push
fdivr
into
cmpsb
mov
ja
pop
cwtl
out
das
fisubl
adc
jmp
es
sub
add
cli
cli
ret
jae
cmp
xor
mov
data16
or
daa
aam
xchg
push
daa
hlt
jecxz
adc
test
and
inc
lcall
xchg
or
mov
movsb
pop
lcall
cmp
fiadds
jb
das
cmpsb
addr16
stos
xchg
pusha
outsl
push
movsb
es
test
fbld
adc
movsb
lret
addr16
cmpsl
mov
dec
xchg
shl
fldln2
cmp
push
sti
testl
aad
or
or
xchg
testb
das
imul
pop
pop
leave
data16
add
inc
fidivrl
mov
adc
shrl
adc
lea
sub
test
pop
or
cmp
aad
mov
and
dec
sbb
xchg
imul
mov
cmpsl
leave
lods
add
push
mov
shl
out
fwait
xor
and
cmp
in
lcall
enter
pop
mov
or
ret
adcb
enter
addb
inc
push
inc
popa
ds
or
pop
gs
adc
add
mov
aaa
and
pop
dec
sbb
int
dec
dec
xor
pop
inc
sbb
push
stc
inc
ss
mov
test
add
lahf
xchg
movsb
ficomps
loope
imul
push
fists
scas
xor
movsl
cmpb
divb
jmp
xor
out
mov
fbstp
sarb
lcall
and
dec
stos
push
sub
mov
ja
pop
popa
fs
mov
lods
inc
inc
push
mov
xor
lods
fistpl
sub
out
or
ja
lea
and
ja
pop
inc
mov
sub
pop
jmp
movsb
xor
jmp
sbb
xor
or
mov
xor
push
or
xchg
lods
insl
inc
xchg
xor
or
movsb
inc
out
inc
mov
jg
mov
xchg
daa
mov
mov
pushf
or
in
push
inc
xor
idivl
lret
and
mov
jp
ds
sub
shlb
popa
push
mov
cwtl
jl
in
mov
add
cwtl
inc
xor
xchg
push
sar
mov
arpl
mov
mov
dec
addl
test
mov
or
rorb
in
dec
jns
cmpsl
insl
sti
pushf
xlat
lods
dec
and
cmp
inc
popf
fcomps
les
sub
jecxz
cmpb
sub
pushf
adc
and
imul
jnp
je
push
mov
pop
jbe
xor
sub
jns
fldenv
push
mov
leave
jmp
pop
adc
mov
mov
loope
stc
lret
mov
sub
mov
int
jne
bound
cmovl
jp
mov
jo
lods
lock
mov
mov
ret
lods
fldenv
loopne
push
adc
adc
lea
add
jge
add
dec
ja
loope
loope
xchg
jbe
rorl
lea
stc
test
mov
mov
outsl
xor
push
ss
mov
adc
and
mov
in
loopne
in
xchg
das
xchg
cmp
sbb
pop
jns
fdivp
lds
std
ds
sti
sub
xchg
scas
push
cltd
shll
loope
jmp
adc
mov
enter
pusha
cmc
lods
xchg
dec
in
xchg
push
nop
jge
or
testl
sub
sub
mov
mov
mov
cli
mov
aaa
jo
xchg
into
scas
mov
repnz
dec
ret
inc
stc
push
pop
scas
push
cmc
movsl
cmc
or
adc
mov
gs
pop
jg
frstor
xchg
popa
push
sbb
movsl
sbb
int3
and
cmc
ljmp
cli
mov
pop
imul
cmp
das
xor
in
inc
int
cmpsl
mov
cmp
adc
jne
sub
shrb
mov
popa
gs
lret
std
pop
push
xorb
cmp
ret
dec
add
fldcw
jl
and
out
pop
push
xchg
add
push
stos
push
outsw
mov
push
push
repnz
pop
push
pop
loop
js
lods
xchg
jge
lock
outsl
push
inc
sub
andb
out
scas
hlt
shlb
out
insb
repz
mov
cli
jecxz
ret
cmp
in
sbb
xchg
dec
mov
movsb
sbb
mov
dec
inc
dec
pop
test
pop
in
fs
icebp
mov
lods
imulb
xor
cmp
cmc
adc
iret
add
in
mov
scas
inc
imul
or
push
pusha
out
mov
sub
out
rcrb
repz
inc
push
push
pop
mov
lret
mov
mov
jb
lret
or
cli
jg
aam
mov
or
inc
pushf
rclb
sbbb
xor
adc
sub
adc
loop
int
push
jns
loope
adc
iret
dec
repnz
xchg
sbb
push
fnstenv
sub
xchg
jg
sub
pusha
cltd
rorb
cmpsb
jecxz
mov
loop
jbe
jnp
mov
inc
ret
mov
imul
pop
repz
cld
stc
pop
mov
add
mov
dec
aad
aas
xor
xchg
pop
sbb
mov
cmp
fistps
adc
sbb
sub
in
int3
movsl
xchg
xchg
jmp
mov
outsb
jbe
in
fwait
sbbl
sbb
add
aam
lahf
jno
cli
jno
pop
pop
dec
mov
movsb
sub
jmp
out
ret
sbb
in
add
or
add
jnp
xor
out
adc
pop
or
jb
mov
aad
xor
popa
in
ret
test
insl
jp
fimull
test
fstps
pusha
jg
adc
cmpsl
cmp
fisubs
into
pop
imul
lock
sub
cmp
dec
insb
inc
lret
mov
pop
mov
jp
pop
mov
adc
cmp
aas
mov
push
das
in
aaa
dec
sub
test
ljmp
lock
nop
xor
or
xchg
xchg
add
leave
sbb
pop
cmp
mov
loop
push
sbb
imul
jecxz
stc
idivb
rclb
incl
das
stos
xlat
cmp
lret
mov
lahf
push
adc
mov
mov
mov
sahf
add
pop
or
mov
movsb
pop
sbb
mov
jmp
sub
add
jecxz
inc
imul
stos
mov
jae
xchg
inc
add
mov
lahf
leave
jnp
in
aaa
pop
sub
adc
in
pop
mov
cltd
xchg
jecxz
push
and
push
or
loope
stos
xor
mov
push
cwtl
cmp
jmp
popf
es
sub
loop
push
dec
inc
stos
jge
pop
andl
inc
fistpl
jnp
inc
shlb
popa
cmp
int
push
outsb
push
xor
pusha
sbb
and
ja
cmpsl
add
push
adc
jnp
mov
mov
cmp
mov
cmpsb
es
outsb
icebp
test
in
push
or
and
clc
adc
addb
mov
test
or
out
les
mov
daa
insl
inc
sbb
test
mov
or
nop
dec
lahf
cmp
inc
sbbl
dec
loop
xlat
leave
out
push
cmp
jg
mov
jl
fwait
int3
aad
jns
in
bound
xchg
out
call
popf
cld
adc
sbb
pop
int
and
jnp
outsl
mov
mov
dec
cmpsl
xor
push
push
xchg
imul
jl,pt
jp
clc
movsl
sarb
fldcw
mov
repz
test
in
mov
and
shlb
xchg
mov
fcompl
lahf
mov
adc
pop
pushf
leave
sub
cld
lret
push
jl
shll
cmp
add
movsb
or
jne
js
fisubrs
sub
inc
jb
adc
jecxz
loopne
cmpsb
mov
sbb
inc
add
xchg
ja
inc
jno
aaa
jmp
mov
lahf
leave
jge
push
push
bound
lds
pop
add
jbe
dec
pushl
xor
inc
movsb
stos
xchg
cmp
cmc
cli
les
add
xor
sbb
sbb
add
out
or
addl
jmp
xchg
xchg
rorb
xchg
sub
inc
sbb
int3
mov
inc
pop
lods
lcall
cmpsl
mov
jmp
lret
hlt
gs
add
xor
notb
cmp
fdiv
hlt
in
fadd
pop
mov
mov
mov
shrl
loope
xchg
in
sarl
icebp
jmp
cmpsl
int
adc
int
idivl
xlat
iret
and
add
jo
fldcw
inc
jmp
xor
push
or
add
sub
movsb
mov
pop
and
adc
and
int3
add
mov
sbb
cmp
movsl
cmpsb
cli
mov
jp
inc
int
cmpsb
movsl
inc
mov
ss
adc
dec
mov
pop
dec
fneni(8087
rcrb
testb
bound
cmpsb
mov
push
push
pop
jmp
xchg
push
inc
or
add
sbb
push
mov
or
das
mov
test
imul
xor
fs
shrb
nop
jmp
sbb
push
xchg
rol
fstl
adc
xchg
ret
and
sbb
cmpb
subl
ss
repz
and
movsb
int3
dec
out
ds
ds
test
outsb
out
test
xor
pop
cmp
pop
fs
sbb
inc
pop
xor
pop
leave
push
repnz
sbb
outsl
mov
ja
addr16
loop
pop
jle
andl
dec
jne
mov
inc
sub
aas
pop
mulb
sub
mov
and
and
out
mov
or
jno
cmp
mov
scas
pop
or
and
repz
aaa
xchg
je
sahf
and
popa
mov
sub
lock
xchg
jl
sti
lahf
mov
push
cmp
subb
add
cmp
mov
mov
hlt
pop
out
push
inc
inc
fisttps
add
js
mov
cmpsl
sbb
mov
loope
and
inc
push
pushf
out
sub
fwait
test
or
shlb
mov
popa
cmp
lods
leave
into
lods
xor
and
iret
adc
fnsave
in
test
stos
and
xor
add
dec
ret
jno
sbb
sarl
jmp
mov
movl
jae
dec
pushl
ret
dec
sub
and
fwait
in
loopne
dec
mov
cmp
jg
push
clc
in
repz
je
push
jbe
dec
scas
mov
xor
push
mov
cld
lods
shll
out
jp
xor
mov
adcb
adc
lods
add
mov
inc
jns
arpl
mov
addr16
cs
or
cmp
pop
jb
push
test
pop
push
rcr
pop
stos
mov
push
mov
gs
push
add
loope
bound
lea
xchg
jo
mov
inc
dec
jne
jge
and
mov
push
addr16
addr16
out
testb
mov
loop
xchg
aad
sar
push
jbe
cmc
jg
sbb
cmpl
clc
andl
xor
mov
sahf
rcr
mov
and
pop
hlt
cmp
pop
mov
sbb
out
dec
jge
xchg
fisubrl
rolb
dec
and
mov
dec
jecxz
pushf
mov
mov
daa
xlat
mov
cmp
into
lods
xor
fcoml
jge
mov
mov
cmp
adc
adc
aas
pusha
outsl
add
xchg
sub
mov
cs
or
or
add
add
push
xchg
inc
fs
ret
xor
adc
and
adc
lods
ss
je
jp
pop
popf
xchg
jp
add
daa
mov
aam
test
cli
je
sub
cli
enter
cmpsb
xchg
push
xchg
push
sbb
mov
lea
push
cmp
sub
push
push
push
add
mov
add
mov
nop
mov
daa
xchg
and
mov
cmp
and
arpl
inc
mov
jbe
in
jle
in
mov
in
ja
jge
and
fmuls
hlt
mov
bound
fildll
mov
mov
push
out
ror
inc
push
jp
and
dec
subb
mov
aaa
jno
sbb
push
jb
pop
outsb
out
xor
xorb
sbb
fisubrs
sahf
ret
imul
sbb
jle
cmp
mov
push
xor
lcall
fcom
fsub
jecxz
pushf
add
outsl
jne
dec
in
inc
idivl
enter
clc
insb
popa
mov
in
fsts
jns
lock
in
sub
and
add
fiaddl
mov
sbb
jae
push
ss
fs
sub
stc
icebp
cmp
sub
inc
mov
out
inc
pop
mov
push
sbb
clc
xchg
pop
imul
fimull
int3
lret
or
shlb
xchg
jb
in
mov
and
xchg
es
adc
xor
mov
mov
push
vcvttps2dq
lods
movsl
test
jne
ljmp
inc
lock
shlb
ret
test
scas
shlb
pop
xchg
xor
jb
dec
adc
sbb
divl
mov
jnp
mov
sahf
out
push
sbb
daa
icebp
ja
mov
lea
xor
mov
pop
or
xchg
xor
insb
jne
sarl
sbbl
orl
sub
cmp
in
and
out
sbb
add
add
push
out
stos
mov
stos
jnp
lcall
mov
int
or
in
sahf
sbb
imul
lahf
sbb
mov
test
push
dec
into
or
push
cmp
hlt
movq
cmp
dec
push
orl
jae
movsb
xor
notl
into
lret
addb
popa
adc
hlt
into
cmpsl
add
pop
push
ret
push
pop
mov
push
insb
pop
and
icebp
mov
test
or
mov
jmp
jecxz
jno
js
dec
mov
or
add
xchg
or
out
imul
jmp
pop
lsl
test
dec
mov
nop
xchg
mov
cwtl
sub
subl
or
testb
xor
dec
nop
push
je
xchg
mov
enter
cli
in
fbld
push
mov
gs
dec
shll
lds
out
push
pop
pop
inc
dec
inc
mov
adc
lret
subb
jle
int3
xchg
fwait
int3
fwait
test
mov
sbb
mov
add
jl
mov
pop
loope
es
ja
or
jecxz
inc
jle
adc
sub
sbb
aam
xchg
mov
pop
vmovups
or
mov
inc
sarl
call
leave
xlat
imul
sbb
add
es
sbb
or
push
loope
xchg
andb
xchg
dec
lods
out
leave
lret
sbb
insb
xchg
inc
pop
stos
add
xchg
std
xor
insl
sbb
mov
mov
adc
sbb
mov
lock
jl
add
cs
pop
pop
js
mov
push
fnstsw
mov
mov
jne
mov
sbb
fidivrl
mov
mov
add
fcmovnbe
cmc
inc
rcr
inc
bound
jo
loope
scas
xchg
daa
sbb
jbe
aam
cmp
sbb
and
xchg
xor
dec
ret
imul
push
and
and
xchg
xchg
pop
jns
notb
scas
mov
insl
shrl
pusha
and
nop
fmuls
cmp
add
mov
mov
lcall
pushf
adc
fsubr
outsb
pop
pop
ja
popf
loopne
push
js
inc
or
push
jno
popw
and
fists
mov
je
loopne
xchg
mov
push
mov
xchg
jb
mov
or
add
hlt
inc
mov
int3
mov
arpl
fsubrl
imul
ss
gs
mov
aas
hlt
sti
jle
das
ja
aam
lret
shrb
mov
out
movsl
mov
nop
jnp
jmp
mov
xlat
test
and
nop
jb
sbb
sub
add
pop
jnp
mov
mov
jno
aaa
sti
pop
out
xlat
movsb
notl
cwtl
inc
test
enter
push
and
popf
xor
daa
adc
push
cmp
shr
mov
repnz
mov
mov
xchg
cmp
ret
or
mov
test
mov
add
outsb
mov
and
push
jae
out
jne
mov
outsl
lock
pop
notl
movsl
cmpsb
stos
scas
cmpsl
fidivrs
out
or
and
shrl
mov
cli
das
pop
or
mov
inc
adc
ds
gs
sub
or
jg
stos
mov
dec
jbe
adc
inc
negb
frstor
add
lds
arpl
mov
mov
mov
loope
sar
jae
sub
inc
xchg
sub
mov
scas
add
iret
jl
fcmovnbe
sub
fcompp
mov
jle
test
inc
jl
jns
mov
and
loopne
and
adc
mov
outsl
fisttpll
stos
outsl
jbe
std
in
out
ss
lea
outsb
lcall
jge
xchg
cmpsb
inc
push
and
jbe
popa
dec
fisubl
lods
jns
xchg
adc
fdivl
mov
sub
insl
imul
xor
inc
inc
in
xchg
and
mov
sbb
addb
dec
adc
mov
popf
pcmpgtb
rol
inc
fcomip
jmp
out
xor
and
mov
jne
push
mov
xchg
cli
dec
loope
push
outsb
jmp
mov
cmp
pop
mov
fsubr
lea
and
call
loop
mov
push
btr
mov
shlb
add
ret
fisubs
sbb
stc
clc
lea
test
sub
aam
sbb
push
inc
or
popa
repnz
stos
lret
xor
jb
imul
xchg
pushf
cmpsl
adc
mov
test
push
fcomi
push
shlb
stos
push
mov
push
jl
mov
fwait
in
push
mov
xchg
inc
dec
lcall
iret
jnp
scas
subl
xor
data16
or
cld
pop
aaa
cmp
add
jns
xchg
into
jb
out
jb
jae
pop
ficomps
push
dec
sub
dec
cmpsb
xchg
ljmp
movsb
inc
mov
fs
add
gs
pop
sbb
nop
cmp
faddl
daa
xor
sbb
push
inc
sub
fadds
inc
inc
jb
int
into
imul
ds
or
out
call
test
in
aas
xor
adc
fwait
jecxz
rdmsr
insb
inc
or
add
ret
or
leave
cmp
mov
push
imul
jge
push
gs
dec
icebp
mov
pop
add
ja
arpl
cmp
pop
out
add
test
jl
mov
out
test
loopne
test
into
add
cmp
cwtl
lock
imul
mov
bound
cmovo
test
mov
xchg
scas
mov
ss
cmpsl
pop
pop
fs
aam
pop
daa
ja
sti
insl
aaa
pusha
inc
dec
sub
lahf
ds
xchg
int
lods
lock
push
cwtl
in
lret
enter
dec
sarb
int
scas
pop
out
das
shlb
dec
sub
sub
lcall
out
les
mov
stos
cmpb
push
inc
test
push
in
std
xchg
pop
lds
jmp
fwait
pop
clc
jb
xchg
xchg
stos
push
out
je
mov
dec
dec
or
rcr
js
jns
popf
jl
pop
pop
int3
push
addr16
pushf
xor
fdivs
ret
inc
sbb
mov
mov
imul
int
mov
dec
hlt
add
es
inc
testl
loopne
enter
movsb
inc
test
enter
rcrb
push
push
sbb
fsubrp
test
cwtl
pop
scas
fcoms
mov
push
das
jp
sbb
repz
and
push
in
jae
push
pop
sub
jae
ss
shr
xchg
push
cwtl
sub
push
fisttps
jmp
mov
cmc
pop
fdivs
lock
xchg
rorb
cmpsb
jns
fadds
ljmp
setp
sbb
sbb
ja
popa
xchg
cmp
mov
xor
pop
push
adc
add
inc
int
lahf
ret
push
adc
jo
in
arpl
xlat
jle
addr16
out
sub
insl
sub
sbb
dec
addr16
and
fcmovb
test
pop
iret
or
aam
mov
xchg
les
inc
fidivrl
jo
movsl
and
dec
outsb
mov
inc
dec
xchg
jnp
notl
out
lcall
jb
rcll
imul
pop
cli
xor
mov
add
xchg
lea
fidivl
adc
cwtl
ds
std
movsl
addl
cmpsb
fildll
pop
jl
jge
or
sbb
dec
push
sbb
fcom
and
jns
lock
aad
cli
loope
aad
inc
pop
sbb
shl
dec
pop
fwait
mov
lds
mov
sbb
lcall
gs
and
es
fdivs
adc
mov
movsb
les
dec
jp
jae
loope
test
std
xchg
ja
sub
xchg
loopne
xchg
cltd
xchg
ret
pushf
ja
aaa
pop
or
add
ljmp
fbld
hlt
inc
sbb
fs
test
fildl
bound
jo
mov
lods
mov
xor
dec
mov
jb
adc
xor
repz
and
sub
leave
and
les
adc
sbb
pop
dec
gs
jge
or
xor
pusha
lea
mov
push
leave
and
mov
lret
imul
mov
ja
test
inc
jmp
push
shll
fisubrs
stos
push
inc
ss
arpl
cmp
inc
fldcw
sbb
out
push
outsb
jne
subl
pop
xchg
test
mov
bound
stc
or
out
inc
mov
add
cmpsl
inc
cmp
jmpw
mov
adc
jmp
mov
xor
push
pop
stos
sbb
cmp
cmp
adc
inc
mov
leave
mov
sub
xchg
mov
popa
dec
mov
sub
dec
dec
out
test
clc
mov
mov
xor
sub
dec
adc
mov
xchg
pop
sbb
push
pop
push
lods
lods
dec
pop
repnz
test
jp
xchg
leave
cltd
cmp
xlat
jl
fwait
mov
into
sub
push
mov
mov
mov
imul
sub
in
fimuls
ret
imul
psrad
or
lcall
xchg
stos
fwait
ja
test
je
repnz
mov
in
mov
mov
xchg
je
lret
popf
add
mov
lcall
or
fisttpl
mov
dec
xchg
inc
add
jle
cmp
subb
jo
into
mov
sbb
hlt
mov
int3
pop
fdivr
ficoms
inc
jae
sbbl
popa
out
stos
enter
lret
push
jnp
mov
nop
pop
push
aas
gs
je
mov
xlat
ss
repnz
mov
jp
enter
xchg
jl
mov
idivl
cmp
pop
sti
cltd
mov
lds
out
xchg
dec
pop
daa
xor
lods
insl
xor
call
sahf
xorb
push
adc
aad
mov
cld
xor
imul
stc
pop
pushf
jne
cs
fisubrs
mov
loopne
cltd
xchg
pushl
lock
xchg
aaa
xlat
inc
lcall
into
mov
or
stc
sub
pushf
in
movsl
or
addl
mov
mov
jnp
popf
pushw
enter
xchg
in
adc
pop
and
dec
inc
mov
shr
sub
insl
movsl
dec
xchg
push
imull
mov
ret
sbb
xchg
les
cli
push
jecxz
pushf
ds
mov
pop
add
pop
push
inc
jno
daa
pop
adc
cmp
ret
mov
fwait
loopne
rorl
imull
call
scas
lcall
test
mov
jmp
movzbl
mov
cmp
addr16
sub
outsb
mov
out
and
jnp
ja
insb
ds
xor
adc
enter
pop
lcall
std
inc
test
icebp
dec
pop
das
add
mov
dec
adc
cmp
and
movsb
movsl
mov
mov
lcall
ss
daa
mov
mul
aas
jecxz
inc
add
ret
pushl
je
adc
adc
in
xchg
adc
pop
add
fcomp
inc
xchg
shlb
fidivl
inc
in
mov
pop
xor
mov
sub
adc
inc
mov
stos
or
jmp
sarb
sub
leave
push
xor
fcoml
ffree
fwait
call
loop
jp
xchg
int
in
add
xchg
fwait
dec
pop
push
andb
cltd
out
adc
int
mov
lret
add
stc
dec
jae
push
cmp
sbb
xchg
ret
ret
and
jno
ljmp
jns
jae
pushf
or
mov
call
jne
gs
xchg
sub
or
lock
xchg
jo,pn
mov
sahf
mov
test
dec
mov
into
pop
jae
in
sub
test
out
popf
sbb
fmull
mov
stc
lock
sub
scas
aas
xchg
jb
dec
push
cmpsl
popa
push
jne
dec
inc
movsl
test
movb
pop
test
mov
cmpsb
aas
pop
sbb
fst
mov
jae
xchg
xchg
inc
mov
push
xor
ljmp
add
mov
pop
pop
push
lret
test
lods
dec
or
fwait
jns
scas
dec
in
mov
dec
xor
sti
aad
mov
mulb
jmp
adc
xchg
mov
mov
adcl
fimuls
mov
cmp
ficoml
xor
xlat
sub
iret
sub
js
stos
ret
pop
mov
mov
mov
add
pop
jg
mov
fdivp
xor
ss
dec
xchg
cltd
fidivrs
mov
rorl
jbe
add
push
into
outsl
das
push
and
push
mov
mov
cmp
stc
inc
adc
push
adc
sarb
xor
int
add
mov
xor
cmp
push
mov
lret
ja
adc
lahf
fimuls
mov
inc
shll
insb
mov
dec
xlat
loopne
movsb
mov
pop
cmp
push
pop
je
in
adc
dec
pop
stos
aam
movsl
mov
adc
adc
sub
dec
mov
repz
xchg
adc
js
xchg
pop
add
out
mov
adc
mov
xchg
lods
mov
and
add
clc
mov
ja
mov
repnz
mov
ds
fidivrl
mov
adc
dec
insb
addr16
or
ljmp
iret
cmpsl
fistps
icebp
das
or
dec
pusha
call
sub
movsb
inc
std
sahf
iret
adc
xor
pop
and
movsb
sbb
or
les
jns
test
outsl
clc
cmp
push
mov
hlt
and
roll
aad
clc
mov
cs
push
mov
mov
ss
push
and
daa
xor
sub
xchg
in
or
cmp
xchg
adc
jnp
or
pop
cmc
inc
sub
fwait
mov
mov
fistps
mov
ds
xchg
mov
jne
jnp
and
dec
sbb
in
add
aam
into
sbb
inc
push
in
fs
mov
jne
mov
rcrl
xchg
jecxz
pop
jne
out
jb
and
cmpsl
movsl
mov
stc
ds
aad
push
insb
nop
or
push
lds
and
pop
xchg
push
sub
or
lcall
jl
out
lods
ret
test
or
lds
mov
rorb
mov
pop
jge
into
mov
ftst
mov
divl
fadd
inc
mov
add
js
jp
sti
outsl
sbb
push
cltd
pop
mov
jne
mov
pushl
and
jb
divl
mov
cmp
mov
sbb
stc
cltd
out
sbb
or
insb
arpl
mov
fcmovnu
pop
pop
jg
mov
std
push
mov
adc
mov
lret
xchg
out
test
jnp
inc
jno
xor
rorl
push
mov
add
add
dec
lea
xchg
mov
adc
sub
out
or
mov
pop
jnp
movsl
dec
iret
jecxz
mov
push
jp
divl
push
mov
fdivs
lahf
mov
and
test
xor
xchg
clc
mov
in
sarb
sub
out
aad
popa
jle
xchg
or
daa
loopne
xor
ret
add
mov
xchg
cld
lret
popf
add
call
pop
and
popa
std
aaa
hlt
cmp
cwtl
pop
inc
jns
xorl
imul
jp
push
xor
jp
push
cmpsb
test
or
lahf
lods
inc
imul
outsb
stos
aam
cld
and
pusha
cmpsl
sub
mov
insl
dec
mov
fs
stos
or
jbe
cmpsl
ffree
add
xor
push
push
jmp
in
jne
mov
adc
dec
das
cmp
rorl
shll
leave
mov
cmp
push
fdivrl
add
mov
adc
out
pop
or
std
js
push
dec
xchg
push
pop
out
adc
lea
ds
ret
inc
adc
xchg
dec
sbbb
or
bnd
push
or
adc
xchg
pushf
ds
lret
gs
push
mov
sub
add
mov
pop
clc
jecxz
aaa
push
iret
sub
cmp
es
cwtl
push
scas
sarl
lret
xor
xor
sarb
push
lcall
stos
mov
push
jmp
dec
adc
stos
loope
cmpsl
jge
gs
push
xchg
jo
filds
and
ret
cli
or
mov
in
out
out
cmp
enter
test
sub
and
cmp
or
push
inc
aad
jbe
stos
dec
insl
jae
dec
sahf
push
sbb
ljmp
rolb
sub
inc
fcmovnu
xor
lcall
bound
inc
test
mov
popa
in
mov
bound
xchg
into
mov
rcrl
adc
push
testb
in
push
jecxz
dec
inc
jecxz
mov
testb
fs
scas
cmc
xchg
dec
subb
std
mov
sub
stos
push
rcrl
jmp
pop
cmp
cs
test
cmp
inc
pop
push
lock
inc
jbe
push
sbb
mov
vpsraw
lcall
testb
xor
xchg
sub
adc
popf
mov
xchg
outsb
pop
mov
fdivp
inc
mov
pop
inc
leave
imul
cmp
pop
fbld
in
sbb
enter
mov
push
rcr
jno
sbb
mov
xchg
in
and
aaa
xchg
xor
cmpsl
lds
pop
insl
xchg
or
in
imul
xor
leave
js
push
or
loop
popf
xchg
sarl
add
hlt
mov
push
lret
mov
xor
outsl
cltd
fcmove
jb
data16
hlt
call
push
arpl
insb
jmp
fisttps
int3
dec
xor
jl
jge
insb
and
popa
pop
pop
adc
adc
ret
or
fstl
into
loope
mov
jmp
mov
cmp
ljmp
out
andl
std
rcr
mov
and
call
outsb
shr
in
pusha
sar
sub
insl
and
push
sub
sbb
cmp
xlat
movsl
fsubrl
or
dec
mov
nop
outsl
sti
and
jp
test
repnz
xor
enter
mov
orl
push
lcall
xchg
aas
test
out
decl
xor
js
adc
xor
sbb
test
gs
mov
stos
inc
mov
sar
int
xchg
cmp
lret
mov
jp
stos
xchg
stc
push
inc
adc
push
cwtl
adc
inc
je
in
outsb
cmp
in
mov
cmp
adc
push
in
iret
shrl
lret
mov
jg
pop
scas
inc
into
popa
jecxz
xchg
mov
jmp
or
arpl
les
sub
and
sbb
unpcklps
sbb
loopne
movsl
rclb
daa
push
xchg
mov
add
pop
mov
sbb
shrb
cltd
pop
imul
pop
pushf
and
mov
push
imulb
or
xor
sahf
rcll
frstor
cltd
daa
not
inc
int
cmp
lcall
sub
mov
shlb
loop
or
out
add
mov
ja
sbb
insb
loop
sbbl
sbb
mov
aas
aam
ret
push
sub
and
test
mov
pop
outsb
sub
mov
and
hlt
dec
nop
jnp
and
pop
dec
scas
jmp
bound
dec
mov
and
stos
mov
jmp
loop
leave
fsubr
out
jno
dec
div
sbb
jns
push
ds
scas
mov
movsl
pushl
jae
mov
sbb
ret
cltd
nop
jg
mov
out
out
lahf
inc
or
mov
adc
cltd
cmpsb
and
xor
cmp
in
hlt
xchg
pop
mov
cmp
sbb
and
xchg
mov
cmp
pop
adc
adc
pop
xchg
push
imul
add
push
std
cltd
dec
sub
cmp
aam
sub
sbb
rolb
popf
nop
mov
imul
sar
xor
jmp
xor
je
dec
cmp
jb
mov
jg
dec
sub
out
lret
or
push
cwtl
mov
sub
leave
loope
add
popf
and
dec
xchg
shl
scas
xchg
jae
pusha
das
xchg
xchg
imul
and
xchg
dec
pushf
test
shll
ds
imul
loope
xchg
and
push
push
add
pop
test
xor
dec
or
test
shrl
pushf
scas
mov
loope
pop
popf
xchg
mov
jno
clc
cmp
imul
sbb
pop
pop
or
stos
lea
mov
sahf
in
lahf
testb
adc
add
inc
rorl
mov
ja
nop
xor
sbb
push
jge
sti
clc
and
lahf
cmp
jo
shll
enter
jge
aaa
jne
dec
fwait
sub
roll
mov
push
xor
lods
test
mov
divb
in
fimuls
mov
jp
andb
and
std
inc
leave
pop
add
xor
test
and
cmpsl
std
sbbl
mov
inc
jne
or
pop
ss
or
outsb
arpl
fdivrl
cmp
dec
bound
xor
sbb
push
mov
or
and
pop
pop
aas
sub
push
sub
jae
fmulp
push
pop
in
mov
xchg
rclb
fs
cmp
pop
inc
data16
dec
xor
jo
into
scas
addr16
stos
xor
inc
and
xchg
cmp
and
in
clc
push
loop
lea
jno
mov
mov
jbe
cld
test
aam
dec
and
sbb
adc
negl
jno
inc
out
in
xlat
adc
pop
fsub
mov
inc
outsb
sub
lods
push
filds
mov
pop
jbe
mov
mov
and
arpl
inc
inc
sarb
jg
jae
inc
inc
cld
int3
jge
mov
inc
cmp
cmc
or
lock
push
jb
shlb
fcmovnb
ss
xlat
pushl
or
inc
push
int
xor
cmpsb
lods
add
das
sub
out
mov
lcall
inc
pusha
push
sbb
jmp
idivb
push
inc
xor
add
push
ljmp
repnz
sbb
ret
cwtl
scas
out
adc
inc
imul
jecxz
dec
add
or
fsubs
xchg
clc
dec
sub
out
jne
jl
icebp
movsb
sbb
in
mov
jnp
scas
mov
xor
call
add
xchg
shlb
or
push
cmpsl
mov
lock
sti
push
aad
sub
push
push
mov
lret
dec
xor
cmp
pop
scas
sbb
pop
cmpsl
lods
pop
push
ficomps
push
mov
xor
sub
sub
or
ficoms
cs
push
popf
pop
sub
inc
mov
fnsave
push
test
or
les
xchg
push
and
jb
sub
bound
rcr
mov
mov
xchg
adc
rcrb
mov
fwait
and
cmp
pop
cmpsl
divb
sub
pop
jb
push
pop
add
pop
mov
btc
jg
call
and
movsb
icebp
mov
cltd
fs
aas
aaa
pop
addr16
push
aam
jp
shrl
mov
outsb
fdivrs
jg
cmp
mov
adc
leave
jnp
dec
aam
sub
jge
jge
jmp
inc
pushf
mov
add
mov
xor
nop
inc
inc
sbb
fiadds
dec
mov
mov
cmp
repz
sti
testb
sbb
lock
lea
outsl
mov
lods
pop
jae
push
out
jne
in
hlt
xor
xor
xchg
out
loopne
pusha
sbb
mov
and
in
adc
sub
xchg
ret
mov
invd
cmc
sti
xor
add
outsl
mov
push
xlat
xchg
xchg
jno
fsubrp
mov
test
xchg
pop
or
fmuls
jae
xor
loop
cld
data16
pop
insb
mov
and
xchg
shl
push
dec
xchg
mov
je
pop
adc
movsl
in
into
push
mov
xor
loopne
cli
popa
sbb
adc
cld
fadds
iret
jo
adc
sbb
push
jnp
jmp
js
push
lret
xor
roll
xchg
jmp
mov
cmp
leave
out
mov
test
subl
push
cmc
add
and
dec
pop
mov
xchg
je
pop
pop
popa
xlat
mov
cltd
leave
xchg
fs
lea
dec
andps
fadds
mov
push
fwait
and
push
loop
cmp
add
sub
add
ljmp
gs
xor
jmp
or
or
aas
fisttpll
add
and
gs
cmp
mov
add
add
pushf
xchg
mov
push
ja
bound
imull
xchg
jecxz
mov
cmp
lret
and
fdivrs
and
xor
push
and
and
mov
mov
lds
and
adc
jle
mov
xchg
mov
ret
mov
out
cmp
or
mov
or
out
aas
fidivrs
and
or
xor
pop
mull
add
xchg
cmpl
adc
movsl
mov
out
shlb
andb
fs
test
adc
in
jmp
scas
dec
pop
outsl
xor
popa
mov
cmp
lret
ljmp
inc
repz
pop
cmp
dec
mov
imul
mov
lahf
add
cmp
mov
xchg
je
pop
and
test
stc
xor
enter
pushf
inc
jno
hlt
push
adc
lock
mov
cmpsl
push
mov
lds
test
mov
mov
sbb
andl
sub
sbb
fwait
mov
sti
cmp
cli
adc
ficoml
mov
fmull
nop
xchg
insb
push
je
xchg
mov
cld
not
fstps
or
pusha
dec
imul
sbb
and
loope
loop
xor
mov
and
cld
ss
sub
cmp
pop
lods
test
dec
pop
add
xchg
out
movsl
sti
xchg
mov
in
cmp
jbe
push
mov
cmp
mov
mov
mov
stos
xchg
sub
push
inc
mov
lds
stos
xchg
ss
in
call
push
dec
and
pop
xor
es
inc
shl
adc
idiv
out
aad
xlat
pop
push
lahf
divl
jl
sub
pop
push
out
popf
lret
outsb
push
xor
inc
add
out
mov
add
jmp
out
sarb
add
dec
adcb
mov
mov
jno
mov
enter
push
pop
or
insb
adc
rcrb
test
test
test
fisubrs
and
push
add
push
mov
addb
ja
xchg
bound
stos
stos
scas
testb
ret
stos
negl
dec
pop
in
cmp
mov
add
push
data16
daa
cmc
sbbl
lock
rol
push
mov
xlat
add
pop
sub
lods
dec
std
enter
ja
je
iret
inc
aas
out
das
or
sbb
pop
add
ss
bound
sub
aas
sbbl
mov
fists
add
mov
pop
or
lds
iret
mov
movsb
hlt
sar
xlat
inc
mov
mov
jl
push
inc
adc
aad
aas
loope
dec
cld
rcr
movsl
iret
lahf
push
sub
fs
cld
sti
or
inc
xchg
lds
cmp
push
inc
test
sbbl
rclb
inc
cmp
jo
popf
mov
out
cmp
cmp
adc
sub
repz
or
mov
sbb
in
lret
jne
mov
mov
pop
jo
xor
xchg
orb
fwait
xor
cmp
rcll
into
pop
pop
in
je
push
inc
xor
push
cwtl
mov
stc
movsb
push
xchg
sbb
pop
sarl
mov
mov
add
xchg
push
out
or
rep
pop
jle
push
xor
fcmovne
lods
xchg
cltd
in
cmc
iret
inc
or
mov
or
movb
and
jg
mov
es
xor
les
push
adcb
or
sbb
sub
push
ret
out
ret
add
xor
jmp
clc
push
bound
mov
mov
adcl
push
inc
adc
fwait
inc
and
add
les
add
dec
es
mov
arpl
test
in
xchg
fstp
jp
cmc
push
out
int3
xchg
bound
pop
pop
clc
in
iret
outsl
adc
push
lahf
mov
or
orl
fs
lahf
and
lea
in
jo
push
add
sub
aas
push
out
push
maskmovq
mull
out
rorl
mov
out
xchg
sub
xlat
test
xchg
dec
push
cmc
jge
jns
stc
roll
xchg
in
pushf
push
inc
dec
movsl
xchg
or
xchg
inc
in
sbb
enter
sub
push
add
in
je
scas
shll
nop
sub
rdpmc
jno
xor
sbb
jmp
leave
pushf
and
push
addb
xchg
inc
testb
and
lea
sub
mov
or
inc
js
jle
push
iret
insl
cmp
ja
scas
adcb
pop
cld
mov
pop
addr16
call
xchg
mull
jne
cmp
add
inc
or
add
test
mov
popf
loopne
leave
sub
sub
arpl
cmp
jmp
push
mov
push
fisubrl
fs
xor
iret
outsb
pushf
outsl
repz
addl
dec
cmpl
jns
xor
dec
popa
or
dec
mov
pop
sub
mov
stos
pop
lcall
sbb
mov
adc
and
lret
xor
popf
xor
dec
xor
sbb
xchg
std
scas
jmp
or
lods
cmpl
scas
jmp
loop
lahf
xchg
cmp
pop
pop
mov
mov
xchg
and
ret
loop
sbb
push
lret
and
bound
in
pop
outsb
mov
fwait
or
sub
sarl
lds
mov
add
xchg
rolb
jns
fildll
mov
test
jne
jo
cli
pop
imul
pop
cmpsl
inc
fyl2xp1
lcall
aam
cli
mov
cmp
xchg
mov
mov
test
fdivl
pop
mov
fsts
xor
scas
outsb
lahf
in
insl
add
testl
movsl
push
add
and
push
lods
dec
fmul
pop
mov
cmp
mov
not
mov
sbb
dec
mov
mov
adc
mov
pusha
push
inc
ror
sub
xor
xor
dec
inc
es
cwtl
into
aam
inc
cmp
dec
xchg
bound
mov
lcall
andb
lods
push
cmpl
sbb
mov
xchg
popa
cmpsb
data16
dec
insb
cld
mov
push
imul
sub
fdivl
ljmp
fdivs
inc
sub
xchg
sbb
aad
or
add
loop
pop
shrd
jle
outsb
inc
push
or
push
insl
pop
mov
cmp
rcll
inc
push
out
insb
jg
in
xchg
pop
shrb
sub
aas
jae
xlat
fidivl
xor
fucom
sbb
cld
scas
push
pop
mov
movsb
lock
sahf
inc
leave
lcall
mov
push
aad
push
lods
and
sbb
and
enter
ret
jo
cli
sub
adc
pop
push
pop
push
fdivs
mov
cmpl
inc
and
lds
sub
out
xchg
mov
dec
lds
jmp
lea
lcall
idivb
push
xor
or
push
movsb
sbb
xchg
sar
cli
imul
mov
das
mov
push
dec
imull
adc
rclb
inc
xorl
ds
cmp
cmp
mov
and
sbb
mov
push
or
sbb
outsb
lret
mov
xor
enter
push
shl
add
mov
loope
adc
inc
test
test
push
jo
mov
repz
add
repnz
fs
mov
adc
add
push
dec
sbb
mov
push
movsl
mov
xchg
loope
leave
inc
xor
pop
and
xchg
xlat
mov
pop
xchg
cmp
fimull
ds
xchg
je
push
dec
cmc
sbb
xchg
adc
and
popa
jg
mov
xor
inc
xor
pop
aam
push
pop
dec
shll
pop
loope
push
jle
adc
shrb
pusha
rolb
mov
loop
nop
sar
sarl
rolb
scas
cmp
xor
inc
cmp
and
testb
xchg
jp
mov
xor
es
in
pshufw
cmp
jmp
shrl
movsb
lret
lds
leave
push
push
ret
inc
in
ret
insl
xchg
test
add
adc
push
cwtl
sbb
ds
lcall
into
or
xchg
push
sahf
out
dec
out
call
pop
sub
push
lock
cmp
inc
dec
test
or
jp
inc
in
jg
outsb
adc
add
adc
jmp
out
sbb
and
adc
lods
xchg
std
movups
jbe
mov
iret
rcrl
xorl
pop
clc
daa
cwtl
sub
int
fs
or
movsb
je
test
xchg
push
push
adcb
cmp
ljmp
mov
jmp
push
mov
test
gs
dec
out
fadd
adc
stos
cmc
mov
loope
cmc
sub
fbld
loop
cld
xor
das
repz
fldcw
sti
jp
mov
jecxz
and
add
jmp
into
jo
adc
stos
mov
adc
std
enter
flds
cmp
inc
addl
cmpsb
jns
sbb
data16
push
jl
aas
insb
imul
fcoml
jnp
fwait
cmp
pop
pop
negl
insl
xchg
or
xor
mov
mov
cmpsl
pop
dec
dec
rorl
imulw
xchg
cmpsb
jbe
outsl
int
in
mov
mov
mov
jg
jmp
push
inc
ds
push
push
mov
int
outsl
mov
movsb
jo
cltd
xlat
or
inc
inc
fwait
lret
adc
or
mov
inc
push
mov
and
test
xchg
mov
sbb
xor
pop
mov
fwait
adc
push
mov
pop
push
in
jl
adc
xor
push
add
sub
push
sub
out
rcrb
and
xlat
aam
fwait
push
lcall
or
mov
movsl
add
and
arpl
mov
cwtl
cmp
loope
sbb
outsl
nop
mov
lds
mov
xchg
movsl
outsb
std
jb
sub
lret
mov
sbb
push
pop
test
push
les
sarl
sbb
loope
stos
or
xor
mov
mov
mov
jl
xor
ss
hlt
hlt
push
sahf
lea
fdivr
lcall
adcb
pop
xor
je
pusha
inc
rclb
jge
insb
mov
jmp
or
lea
data16
cs
push
push
mov
mov
or
and
lea
push
lret
into
push
out
cmp
pop
mov
jnp
mov
dec
pop
mov
cmpl
lahf
and
push
iret
fldenv
push
subl
stos
pop
cmpsb
adc
pusha
mov
ret
or
lds
jbe
gs
push
stos
or
pop
arpl
xchg
loope
xchg
jmp
inc
fmul
jg
dec
mov
sbbb
iret
pusha
mov
mov
jmp
sti
inc
push
mov
in
movsb
ds
pop
mov
xchg
pop
jecxz
insb
outsb
inc
loopne
popf
inc
mov
incl
notl
idivl
outsl
data16
xchg
setbe
test
push
jle
loopne
xor
lods
or
mov
fidivrl
sbb
push
in
jl
push
push
out
add
or
andb
push
sbb
int3
mov
clc
subl
xchg
decb
mov
and
and
pusha
lea
jmp
jge
mov
lret
lea
mov
mov
mov
dec
sqrtps
adc
sti
scas
fdivrs
pop
test
cmp
ds
mov
xor
add
movsl
adc
mov
mov
xor
adcl
pop
testl
jne
test
sbb
xchg
incb
incb
jp
repnz
ret
lods
test
in
or
fidivrl
in
sbb
lret
ljmp
imul
out
cmpps
mov
and
enter
mov
sbb
shl
dec
in
fisttpll
cmp
sub
subb
sbbl
add
adc
jns
push
fs
mov
insb
xor
push
sbb
jne
add
pop
outsb
add
enter
mov
xchg
push
push
insl
mov
faddp
push
adc
fldenv
xchg
cmpb
sub
or
cmp
or
fwait
or
pushf
cmpsl
int3
loope
cmpsl
mov
dec
dec
sbb
inc
outsb
mov
xchg
ja
jle
iret
aad
into
sbbl
dec
adc
sbb
into
les
sub
sbb
jbe
adc
fsubr
mov
dec
mov
shrb
loopne
or
stos
lods
xor
jo
xor
jnp
dec
addr16
lea
rcr
push
mov
sbb
pop
mov
pusha
aaa
stc
push
push
xchg
loopne
movsb
pusha
lea
push
mov
pop
jns
gs
inc
lret
vpsubusw
in
cmpsl
inc
mov
ljmp
pop
cltd
push
popa
in
enter
pop
insb
lret
mov
mov
cmp
lret
mov
pusha
add
dec
out
shrb
mov
mov
cmp
outsl
dec
movd
fisubl
adc
or
stos
inc
sti
mov
cmp
repz
lahf
fsubrl
xchg
pop
std
inc
pop
push
rorb
and
out
in
cmp
dec
push
dec
pop
out
mov
add
test
adcb
pop
xadd
add
xor
cmp
insl
imul
sub
mov
lahf
out
sbb
sub
push
adc
and
push
xchg
jne
std
adc
xchg
les
aas
pop
push
shlb
addb
gs
push
mov
xchg
sub
lods
rorl
fimuls
clc
xchg
je
outsb
mov
sub
mov
add
shlb
mov
out
lods
int3
inc
cmp
insl
adc
mov
mov
loope
outsb
rol
xor
mov
pop
mov
nop
lods
sbb
xchg
sub
mov
jne
or
in
bound
cld
push
mov
xchg
cmp
add
and
mov
xchg
rcrb
jno
mov
movsl
jns
imul
test
cwtl
add
clc
or
push
mov
jo
cmpsl
jp
lahf
cmp
ret
xor
mov
out
push
and
push
mov
cmp
loopne
cmpsl
addr16
imul
loop
mov
xchg
nop
lret
sahf
out
shlb
das
jp
push
lods
mov
and
ds
cmc
aad
insb
cmp
aam
and
rorb
push
pop
das
pushf
cltd
dec
cmp
stos
cmp
loope
jnp
in
enter
push
add
in
in
lcall
sbb
sbb
jne
idiv
repnz
push
or
clc
cltd
int
mov
and
push
mov
xlat
inc
adc
mov
aaa
sub
mov
and
lea
xchg
xor
sbb
je
push
xor
xor
or
mov
ljmp
add
in
push
or
push
jecxz
pop
or
fdivrl
fnstsw
test
das
jle
repz
lock
shl
mov
push
cs
push
mov
mov
mov
mov
movsl
add
xor
dec
pop
or
lret
shl
mov
test
inc
jae
xchg
push
mov
adc
mov
ret
adc
dec
add
jle
sbb
push
fsubr
and
sbb
push
mov
xchg
xor
outsl
dec
stos
jnp
daa
pmaxub
xlat
popf
inc
bound
lods
out
dec
mov
or
push
mov
hlt
arpl
push
and
dec
and
out
xchg
ror
js
cmp
cmp
and
loop
das
jecxz
mov
add
loope
sub
insb
mov
lea
mov
popf
ja
nop
sahf
add
fisttpl
xchg
dec
adc
or
insl
lret
adc
pop
scas
fisubrs
repnz
pushf
hlt
sbb
lock
push
lods
push
js
mov
dec
insl
shl
outsl
jnp
mov
xor
xchg
int3
and
aas
mov
mov
xor
je
call
cmp
pop
sahf
xor
out
idivl
push
hlt
enter
sub
cli
xor
inc
rclb
lock
and
jbe
sub
xor
push
mov
les
in
pushf
cmp
sub
int3
insb
sahf
shrl
hlt
mov
add
push
or
std
pop
daa
inc
jmp
dec
sbb
mov
jb
loop
xor
mov
aas
aad
mov
lret
inc
int
addr16
stc
loop
scas
push
nop
into
mov
loope
sahf
sahf
mov
xor
adc
and
popf
std
mov
jp
aaa
and
repz
sahf
and
jnp
adc
jmp
gs
cwtl
push
jo
mov
and
fsubl
outsb
aaa
cmc
lahf
add
mov
sub
out
rorl
shr
addr16
test
cmp
div
mov
cwtl
fsubl
mov
negl
sub
push
leave
fildl
cmovs
packuswb
in
dec
cmpsl
int
daa
push
pop
jno
testb
hlt
adc
jp
add
push
jmp
subb
or
addl
sub
enter
push
js
jle
in
scas
in
xor
sbb
movsl
shr
movsl
cmpsb
outsl
sub
lock
outsb
dec
mov
cs
jbe
jg
dec
sub
sbb
aam
sahf
sub
sub
rcll
xlat
add
outsl
sub
mov
fcmovnb
in
inc
mov
mov
and
negb
notb
mov
repnz
xchg
dec
fwait
mov
cmpsl
lock
mov
pop
cli
and
xor
mov
mov
or
test
mov
xchg
mov
add
jbe
pop
mov
aaa
inc
mov
lahf
adc
push
xchg
jmp
ljmp
dec
pop
fmuls
imul
push
add
mov
mov
mov
les
sub
or
cmp
inc
hlt
jmp
out
out
fildl
imul
lret
ja
pop
cmc
aas
mov
fcompl
lods
mov
cld
es
mov
popa
and
and
xchg
sub
push
ret
out
sahf
inc
xor
inc
sub
outsb
jge
test
in
or
int3
mov
inc
pusha
mov
pop
jmp
xchg
outsl
fs
push
adc
in
push
dec
adc
push
movsl
xlat
cmpsl
sti
mov
pop
adc
pop
imul
xchg
mov
add
mov
or
pop
xchg
dec
bound
add
popa
push
xchg
dec
xchg
dec
ja
jbe
inc
scas
int
into
lods
stos
mov
xchg
mov
pop
incb
mov
mov
sub
push
xchg
inc
or
les
insb
mov
cmpsl
mov
dec
fwait
push
sar
outsl
loop
subl
test
xor
clc
pop
sbb
into
add
pop
in
stos
lods
stos
out
ret
cld
aaa
jmp
subl
lods
pusha
pop
fisubrs
sahf
push
mov
xchg
iret
push
hlt
push
lods
push
jp
pop
jbe
lods
pop
das
mulb
aas
cmpsb
pop
cmp
jmp
lods
andb
dec
pop
movsl
pop
pop
andl
lods
inc
stos
es
ret
mov
popa
mov
in
xchg
adc
in
leave
mov
mov
testb
aaa
aam
sbb
inc
dec
pop
or
xor
and
xor
sub
mov
fdivl
sahf
cli
stos
fs
arpl
mov
mov
outsl
mov
cwtl
iret
stc
sbb
jnp
push
loop
icebp
jb
loopne
pop
mov
mov
dec
loope
cld
sub
andl
jns
icebp
push
sahf
push
fidivl
jbe
into
or
or
int
xor
cmp
imul
adc
shr
inc
aas
pop
scas
rol
fs
dec
xchg
test
jno
call
lock
xchg
sarl
bound
or
mov
cli
sbb
xchg
mov
mov
and
mov
in
es
je
call
aaa
testb
pop
cltd
and
ss
lods
cmpsb
xchg
inc
stos
add
mov
gs
jae
mov
scas
shl
push
mov
dec
js
add
cmpsl
cmp
movsb
fcmovu
lea
sbb
mov
mov
adcb
push
imulb
mov
mov
cmp
mov
pushf
jg
mov
adc
pop
popa
pop
pop
fst
jge
scas
je
xor
cltd
push
xor
cli
and
flds
movsb
add
out
pop
push
cltd
aam
mov
pushf
test
mov
xor
adc
push
xchg
mov
xchg
cwtl
in
nop
in
data16
and
dec
mov
in
mov
out
mov
icebp
sbb
sub
pop
addr16
push
shlb
dec
insb
jne
cli
add
mov
or
dec
test
or
enter
ja
jns
xchg
xchg
orb
cmp
shlb
inc
add
push
aaa
sbb
mov
mov
scas
out
inc
repnz
sbb
mull
out
jle
cmp
daa
sbb
lock
xchg
mov
pop
mov
loopne
into
fcmovnbe
stos
mov
ss
inc
or
popa
es
clc
negb
test
xchg
jne
subl
xchg
das
xor
mov
push
inc
fimuls
daa
sarb
mov
jne
repz
fistpl
mov
jae
mov
mov
loope
aad
aad
mov
int
add
sbb
aad
mov
clc
sub
mov
push
int
mov
jp
add
out
mov
push
xchg
std
lcall
and
cwtl
int
xchg
hlt
or
sub
xchg
add
pop
pop
cmp
xor
fcomps
pop
pop
rcrb
js
mov
mov
push
xor
adc
leave
aas
ds
nop
mov
push
add
adc
jbe
cmp
cmp
test
mov
ficompl
and
xchg
insb
mov
out
stos
push
pop
mov
sbb
sub
aaa
ret
xorl
mov
in
adc
jbe
fists
dec
adc
lret
and
jg
adc
pop
or
mov
jnp
xlat
cmp
stc
xlat
adc
out
mov
out
sarb
rcr
stos
loop
cmp
dec
xchg
mov
xchg
xchg
loope
fwait
inc
xchg
adc
adc
and
negl
pusha
outsl
mov
js
push
mov
cld
js
or
out
movsl
fdivrl
call
iret
or
es
cmc
jnp
enter
pop
stc
xor
mov
iret
and
test
jo
add
loopne
ror
xorl
sub
cwtl
sub
in
or
incb
test
mov
stc
push
inc
fwait
pusha
jne
dec
inc
ud2
xor
das
sbb
add
ror
inc
icebp
fildll
pop
or
xor
xchg
rolb
dec
jbe
xor
mov
add
repz
shrb
xor
add
shlb
cmpsl
out
push
lods
ljmp
popa
jle
ret
shll
imul
arpl
mov
pop
inc
pop
lret
and
vcmpps
incl
fiadds
sbb
test
or
lcall
fidivrl
push
pop
sub
jecxz
outsb
push
lds
aas
sarb
into
sub
pop
jle,pn
iret
xchg
lret
aas
cmpsl
mov
sbb
jmp
sbb
jo
push
mov
mov
mov
sahf
aad
js
mov
test
fidivrs
mov
sbb
out
or
pop
lcall
repnz
ss
push
xchg
or
test
or
addr16
fcomps
or
leave
addr16
push
cmp
and
pop
inc
test
pop
adc
push
xor
jp
pop
jle
mov
cmpb
xchg
pop
loop
pop
jmp
mov
ljmp
cmpsb
jle
sbbb
int3
mov
and
or
stos
sub
xor
mov
popf
leave
ret
mov
sbb
inc
fdivs
mov
int3
test
filds
sub
sub
js
fsubrs
push
inc
push
mov
ljmp
add
inc
or
inc
jg
in
sbb
outsb
xchg
in
push
bound
shr
jo
psubsb
sbb
mov
ss
sub
lods
loopne
aam
rclb
cmp
pop
imul
jbe
fsubl
pop
repnz
rolb
icebp
testl
cmc
jge
dec
ret
int
loopne
fistpll
push
insb
daa
sbb
mov
shll
iret
pusha
jnp
dec
dec
js
js
lret
cltd
inc
pop
les
mov
cmp
push
js
dec
sub
pop
dec
sub
inc
adc
ss
cmpsl
pop
shll
js
in
into
imul
adc
fsts
mov
mov
sbb
pop
lock
push
scas
aam
xor
stos
pop
or
dec
imul
lock
push
js
aam
addl
rcrl
fsub
jnp
cmp
das
jle
popf
insl
push
stc
cli
arpl
out
in
gs
dec
shlb
mov
or
pop
ljmp
mov
rcrl
fildll
sub
sub
imul
ja
sub
inc
and
cmp
roll
jo
subl
sub
cmp
xchg
lahf
and
sahf
cld
cmp
hlt
cld
out
dec
repz
into
xchg
push
fisttpll
sub
ljmp
cs
mov
cs
fcmovbe
not
dec
loopne
jle
and
fistpll
stos
pop
push
pslld
sahf
sbb
stc
arpl
add
mov
sahf
adc
cmpb
or
iret
clc
dec
mov
mov
addr16
dec
push
jle
mov
sbb
add
flds
out
icebp
ja
fbld
mov
repz
jno
imul
xchg
jl
mov
stos
pop
jecxz
adc
xchg
mov
pop
push
imulb
scas
and
rol
push
enter
jge
jne
or
mov
movsl
adc
xor
mov
cmc
pop
out
movsb
mov
dec
shl
jge
pop
mov
sbb
test
faddl
lret
fsubrs
cmc
push
adc
loopne
jle
pop
xor
fcomi
sarl
aam
mov
dec
test
inc
mov
lods
sub
pop
stos
loope
adc
add
push
adc
inc
jbe
outsl
pop
nop/reserved
roll
pusha
mov
mov
addr16
jle
dec
push
mul
push
cmpsb
pop
mov
inc
inc
mov
flds
xchg
add
push
scas
bound
or
and
ljmp
imul
repnz
and
mov
pop
insb
insl
outsb
aaa
mov
push
cltd
das
pop
cmpsb
xor
fs
inc
cmp
imul
push
sub
mov
loope
push
cmp
add
rclb
jge
lock
cld
scas
pop
loopne
cli
inc
push
and
in
or
cmpsb
lea
dec
rolb
mov
xchg
mov
push
xlat
mov
es
push
xor
sub
pusha
push
mov
cmpsl
insl
lahf
sbb
xchg
cmp
push
fld
lods
mov
std
or
and
repnz
test
mov
xchg
xor
iret
lods
push
out
dec
faddl
mov
xchg
pushf
push
sbb
inc
pop
sub
sbb
lret
add
mov
mov
mov
das
insl
insb
lds
push
sahf
fists
and
shlb
adc
int3
rcr
mov
mov
and
iret
frstor
jbe
sub
add
xchg
ret
jg
dec
inc
xchg
cs
inc
mov
xor
lods
xor
andl
and
or
ljmp
add
cmpsb
fisubl
or
les
jg
ret
fcoml
sbb
popa
push
mov
mov
push
xchg
cld
addr16
and
test
scas
ret
mov
out
xor
jnp
push
stos
xchg
xor
cmc
sahf
xchg
or
cmpsb
pop
pop
xor
mov
mov
mov
aad
or
cmpl
adc
cmpsb
add
xor
fnstenv
push
fisubl
inc
xor
add
push
inc
out
or
outsl
mov
movsb
gs
or
mov
iret
push
mov
int
jg
test
xchg
ficoms
loopne
or
out
and
inc
dec
or
andl
inc
ret
lcall
cmpsb
jnp
dec
out
or
mov
or
scas
mov
jns
mov
daa
lret
stc
test
out
test
mov
mov
repz
jb
mov
xchg
push
sub
in
in
jno
jb
jns
xcrypt-cbc
cmpsl
xchg
jno
in
xor
jns
insl
fnsave
lds
fnstenv
test
push
lret
mov
out
push
fiadds
mov
int
jge
clc
mov
call
adc
in
mov
test
in
je
ss
mov
sub
pop
aad
push
sarl
out
cmc
insl
mov
dec
es
pushf
push
icebp
add
sub
arpl
add
lret
ret
movsl
push
push
cltd
xor
filds
inc
mov
push
jl
test
mov
inc
mov
fsubl
add
movsl
popf
loop
sbbb
xor
test
cmp
cmp
outsl
xlat
lret
imul
fs
rsm
adcl
call
mov
xchg
and
aas
push
xchg
hlt
popa
push
rcrb
push
std
pop
push
imul
out
cmpb
lahf
cs
orb
mov
aam
dec
jle
add
mov
sub
call
test
adc
dec
cmpsb
aam
mov
ret
pop
pushf
cld
pusha
fldl
dec
loop
or
sub
test
pop
adc
pop
adc
and
bound
inc
cmp
mov
sahf
pushf
jmp
pop
hlt
in
mov
mov
pop
aam
cmp
cmp
mov
movsb
loopne
faddl
mov
cmp
jle
test
or
mov
out
in
movl
stos
fwait
and
popa
cs
cmpb
mov
jne
out
shl
dec
xchg
adc
jbe
pop
rorl
ret
into
dec
stos
rep
inc
cmp
cmpsb
mov
loopne
inc
jnp
or
sub
push
hlt
lahf
sbbb
arpl
ret
xchg
call
popa
imul
out
outsb
sarl
popa
lds
push
add
std
sub
shrl
jnp
iret
das
push
popf
inc
movsl
xor
movb
inc
bound
aad
es
mov
mov
dec
fmull
lods
stos
pop
adc
ds
cmp
inc
aam
adc
lahf
mov
inc
mov
mov
dec
gs
fmuls
cmp
inc
lahf
push
xchg
dec
hlt
lea
popa
lock
popf
outsb
mov
fs
jae
jae
pop
lods
inc
cmp
icebp
enter
bnd
xor
sbb
fsubp
xchg
aad
and
int3
bound
inc
inc
lods
pop
scas
mov
xor
add
and
xor
popf
add
mov
or
xchg
int3
mov
cmpsl
xor
or
fildl
test
test
adc
daa
ret
imul
jg
pop
dec
icebp
inc
push
sbb
mov
ljmp
push
mov
sub
mov
and
or
aaa
mov
lret
jmp
sbb
mov
bound
lods
out
pushf
repz
rorb
out
imul
jno
jecxz
call
pushf
ja
sti
hlt
inc
adc
repnz
dec
jge
scas
shrl
sbb
xor
push
push
push
testb
lods
movsb
filds
pop
test
mov
ss
sbb
sub
cmp
cmc
lret
lret
jne
jecxz
and
pop
adc
add
js
sbb
push
out
hlt
lcall
xor
test
push
add
shr
push
push
adc
add
pusha
inc
std
inc
jl
les
js
push
js
dec
pop
pop
js
xchg
ljmp
cmc
lret
cmp
and
mov
sub
mov
jmp
dec
and
xor
insb
movsl
or
dec
insl
pop
push
and
dec
rcrl
cmc
adc
jo
dec
dec
imul
pop
mov
je
adc
mov
iret
stos
movsb
lock
mov
fisubrs
ja
mov
dec
adc
mov
pop
mov
daa
jp
adc
cmc
jo
jmp
lahf
mov
push
incb
aaa
repz
hlt
mov
adc
inc
fnstsw
pop
mov
add
loope
sbb
xchg
sahf
sbb
int3
push
dec
xchg
leave
ljmp
out
mov
cmp
sti
cmp
fs
in
std
jae
loop
pop
in
sub
scas
sbbw
inc
js
add
xchg
inc
xchg
jb
xor
push
jbe
sub
loopne
repnz
xchg
pusha
repz
sub
pusha
imul
or
mov
popf
mov
jb
fnstsw
rcrb
out
mov
jbe
mov
incl
jns
mov
xchg
cmp
pop
push
dec
mov
pop
ret
push
xor
mov
push
sbb
js
mov
in
mov
fisubs
std
shlb
jle
dec
iret
ret
jge
push
es
ljmp
mov
orb
je
dec
mov
inc
mov
and
mov
int
or
pop
jo
cs
shrl
sbbl
mov
movsl
nop
stc
js
scas
ss
or
stc
mov
clc
pushf
stos
cmp
push
cmpb
aad
out
push
je
fsubrs
rol
add
dec
pop
push
mov
xchg
or
sar
cs
jecxz
dec
pop
xchg
leave
mov
xor
aad
jp
mov
std
sti
int
pop
lret
ret
pop
mov
mov
rorb
dec
lods
push
push
sti
mov
and
and
out
or
orl
dec
jmp
stc
jae
fdivrs
scas
fsts
jmp
arpl
sarb
rclb
xchg
sarl
pop
mov
dec
sbb
mov
subl
xchg
call
into
stos
lea
push
stc
ss
into
mov
test
das
imul
fadd
push
hlt
pop
and
lcall
and
jno
int
xchg
mov
mov
fs
adc
xchg
insb
jno
xchg
adc
icebp
fiadds
notl
int
mov
pop
clc
push
adcb
jge
rcll
fs
insl
cli
in
scas
add
pusha
outsb
lea
lahf
or
jle
xor
xor
inc
mov
push
adc
scas
mov
icebp
sub
repnz
fs
xchg
insb
jns
subl
sub
lock
xchg
push
xor
and
cld
in
pop
sub
subb
loope
mov
sub
fadd
leave
fistl
inc
xor
push
popl
pop
cli
jae
mov
ja
xchg
icebp
les
arpl
cmp
stos
iret
mov
jle
cmp
js
js
mov
lea
dec
sahf
out
cmc
add
cmp
pusha
push
hlt
in
add
sub
inc
sub
push
inc
cmc
jle
jnp
cld
ret
xchg
lods
clc
bswap
sub
cs
mov
popa
pop
push
loope
addl
sbb
repz
lods
les
push
ret
and
rcrb
inc
mov
dec
sub
fadds
mov
leave
mov
sub
jp
cltd
scas
sbb
lahf
sbb
out
push
stc
adc
stos
push
mov
shlb
adc
sub
imul
xchg
xchg
pop
mov
outsb
clc
sbb
xchg
mov
push
jae
aas
mov
outsb
scas
daa
lahf
mov
inc
mov
xacquire
mov
add
addr16
orb
mov
cmp
xchg
pop
cmp
mov
or
xchg
dec
jo
repnz
inc
pop
pop
call
mov
xchg
jmp
sbb
addr16
aas
loop
mov
sub
mov
mov
mov
dec
fwait
mov
rorb
xchg
sub
inc
xor
jne
adc
nop
lock
jnp
jg
push
aas
pop
std
jo
lret
push
rorb
fsubrs
out
and
popf
xchg
jmp
aam
cld
mov
pop
arpl
rclb
inc
push
pop
xor
or
jg
or
daa
int
fildll
jp
push
divb
fildll
xchg
xchg
add
test
adc
xor
cmpsb
mov
xlat
aam
and
mov
rcrb
cld
sub
stos
test
shrl
outsb
jne
mov
jge
icebp
js
or
add
les
dec
test
fwait
dec
xor
dec
jp
in
sbb
cli
shlb
fimuls
xor
das
in
jbe
xlat
stc
adc
xor
aam
jecxz
jno
lods
lods
and
clc
cmc
xchg
cmc
scas
dec
jne
clc
push
test
insb
lret
xor
paddsb
inc
jecxz
mov
mov
mov
ss
sbb
pop
bound
rcll
push
jne
movl
sbb
mov
sub
jae
xor
loopne
dec
jl
test
cli
int3
dec
ss
mov
aam
test
fadds
scas
mov
jmp
or
push
or
xchg
push
js
popf
pop
subl
add
push
mov
inc
add
lods
jne
rcr
ret
repz
pushf
mov
lock
xor
hlt
ljmp
repnz
das
pushf
mov
cwtl
ss
mov
jge
incb
cltd
inc
bt
mov
iret
hlt
add
je
jne
scas
sub
fldt
out
pushf
das
xchg
imul
rolb
and
mull
shrb
add
jle
insb
stos
js
push
clc
orb
mov
xchg
fistpl
lahf
leave
ds
add
mov
dec
add
clc
out
rcrl
pop
pop
mov
cld
in
dec
jo
adc
mov
inc
stos
mov
and
mov
mov
dec
pop
pop
pop
sahf
icebp
mov
out
xchg
sarl
sub
fbld
mov
ret
and
mov
jnp
rep
into
outsb
cmc
aas
mov
cmpb
jmp
in
iret
inc
roll
or
stc
das
test
mov
lods
push
lahf
gs
jbe
or
or
sub
faddl
lea
movsl
pop
or
pop
xor
inc
xchg
jae
inc
sub
mov
mov
je
mov
push
jmp
movsb
js
xchg
pop
cmp
mov
push
inc
dec
fsub
push
xchg
ss
xor
push
mov
push
test
mov
push
jb
lods
adc
jae
ret
lock
sbb
inc
out
jmp
xor
pop
xchg
inc
jg
fwait
push
scas
adc
fldcw
movsl
insb
pop
or
cwtl
lahf
shlb
sbb
mov
pop
sub
push
setns
xor
aad
fs
idivl
mov
test
xor
xor
xchg
mov
pop
shl
cmc
mov
sub
mov
sub
rcrl
mov
push
and
addr16
sbb
movsb
adc
rep
outsl
cmp
divl
cmp
icebp
xchg
jmp
mov
inc
mov
outsl
rorb
in
les
bound
push
cmp
pusha
int
mov
loop
aaa
cmp
xchg
lcall
xchg
mov
sub
inc
mov
adc
xchg
adc
xor
or
icebp
test
inc
inc
xchg
scas
lds
mov
dec
push
sbb
shlb
and
cmpsl
adc
call
pop
jle
inc
inc
stos
mov
ficoml
shl
loop
mov
pop
js
in
data16
pop
ja
cmpsb
xor
adc
push
xchg
in
ljmp
push
sub
add
xor
dec
jle
je
cmp
stc
push
mov
xchg
arpl
out
lcall
xor
pop
faddp
cmp
lret
xchg
sbb
insl
mov
push
fs
ss
fidivrl
stos
pop
fwait
sub
sub
fstpt
add
scas
sub
imul
mov
paddsb
mov
xor
fistpll
and
sbb
xchg
pushf
adc
push
jb
loope
orb
js
push
add
imul
xchg
mov
mov
lods
xor
test
xchg
sub
daa
inc
dec
jae
push
clc
mov
xor
inc
push
jo
scas
pop
mov
pop
aas
in
push
adc
xlat
out
lret
stos
rcrb
jle
jne
xchg
imul
ja
ds
nop
cli
mov
lret
jle
fnstcw
addr16
fsub
shrb
gs
lret
test
mov
mov
scas
pop
js
sbb
lret
push
xchg
sti
mov
jb
mov
pop
call
fs
outsb
mov
adc
in
call
mov
jecxz
jg
push
xor
adc
insl
xchg
mov
fadds
icebp
or
pushl
cmpsl
divb
xchg
aad
push
push
js
mov
push
std
ss
and
push
jnp
jl
and
dec
lock
mov
push
daa
jmp
pop
xor
mulb
loopne
mov
jg
std
idivl
fisubl
aas
out
xchg
xor
pop
cli
pop
xor
aas
pop
mov
mov
insl
push
out
sub
dec
int3
sbb
cmpsl
data16
mov
jmp
jnp
lods
mov
int
flds
cld
sub
test
inc
adc
lds
push
movsb
jne
add
inc
arpl
fbstp
xchg
lret
pop
push
insl
jno
out
jecxz
mov
mov
aad
jg
sub
inc
mov
pop
out
pop
jp
int
int3
ret
cmpl
mov
pop
js
mov
lods
sahf
scas
dec
js
and
mov
jmp
mov
ds
loopw
aaa
xchg
js
sub
loop
sub
cltd
or
dec
pop
xchg
or
mov
pop
les
ret
jl
mov
mov
test
std
mov
ret
sbb
inc
dec
lods
jmp
mov
push
add
mov
inc
leave
and
and
dec
and
fldl
fcmovnu
cmc
test
inc
addl
cmp
stc
pop
out
xor
test
ds
mov
cs
stos
lea
xchg
push
sbb
or
cmp
jns
fcmove
loopne
push
stos
lds
fmuls
popa
shll
pop
cwtl
inc
lods
out
dec
and
bswap
xlat
lods
jg
mov
push
leave
jne
movsb
les
iret
aaa
mov
sbb
dec
clc
daa
call
pop
dec
pop
dec
lret
movsb
or
scas
fsubp
cltd
push
sbb
sahf
fs
jge
pop
pushf
mov
mov
insb
inc
xchg
sbb
inc
jle
jne
lock
fistpll
sbb
sbb
sub
je
lock
push
adc
xchg
mov
fs
sbb
outsb
push
in
inc
sub
cmp
cmp
xchg
in
popf
pop
or
sbb
imul
mov
dec
xor
out
xor
dec
ret
push
and
mov
dec
sbbl
pop
dec
mov
test
and
ss
mov
push
jbe
xchg
lods
inc
dec
or
inc
lods
adc
jle
test
stos
test
pop
in
data16
mov
add
mov
insl
loopne
dec
jge
xlat
dec
push
xor
add
movsl
loopne
xchg
cli
or
std
mov
lret
jbe
fwait
in
pop
or
inc
sub
imul
testl
jecxz
jge
and
leave
repz
jne
jecxz
or
test
sub
and
push
insb
mov
adc
inc
xchg
lods
add
push
call
leave
and
imul
mov
divl
movsb
in
in
dec
pusha
fwait
sarl
cmpsl
int3
sub
lcall
jl
jle
sahf
push
push
sbb
pop
fwait
mov
outsb
mov
lcall
lahf
fcomps
cld
xchg
rolb
rcr
pushf
mov
repz
jne
adc
and
test
and
push
pop
jecxz
repnz
popa
lods
adc
hlt
adc
xchg
imul
pop
sbb
js
aas
arpl
lock
sub
lods
or
xlat
cltd
mov
cmp
pop
flds
ljmp
test
jecxz
add
xor
add
or
test
scas
push
arpl
dec
cmp
cmp
int
add
ret
divb
xor
fstps
add
mov
sbb
xchg
fwait
pop
sbb
jnp
mov
pop
push
insl
or
mov
popf
xor
sbb
pop
cmp
jne
mov
cmp
movsb
ja
dec
or
jno
pop
stos
and
sub
leave
pop
outsb
stc
pop
dec
cmc
bound
in
outsb
loop
in
fisubrs
mov
pop
movsb
pop
fwait
sbb
push
imul
scas
mov
xchg
test
mov
int
arpl
xor
lret
adc
adc
dec
xchg
fisubs
shll
test
adc
cmpsb
inc
jp
sbb
xchg
leave
jle
push
ds
repnz
inc
ljmp
loope
mov
fcmovb
add
mov
cli
repz
pop
leave
enter
loopne
addl
adc
mov
outsl
dec
notb
jnp
ror
adc
ljmp
mov
loop
aaa
stc
and
cmp
and
or
cmp
pop
pop
inc
inc
mov
adc
test
ja
pop
cwtl
pop
pop
movsb
add
pop
repz
xchg
repnz
addr16
jle
inc
ds
mov
in
mov
add
fsubrl
cli
pushl
test
cmpsb
cs
dec
shrb
xchg
imul
mov
notl
push
jle
pop
cs
lret
sub
sub
out
adc
push
push
xchg
dec
mov
push
xchg
lret
sub
cmp
lea
push
out
jbe
and
add
and
sbb
in
lret
out
xchg
adc
cmpsb
rcrb
sub
cltd
jno
aaa
ret
test
bound
dec
push
push
jl
lds
in
inc
popf
lret
xchg
mov
adc
daa
sti
adc
pop
or
pop
fcmovb
or
out
out
iret
mov
mov
lahf
add
cltd
mov
xchg
jp
shll
pop
int3
add
jbe
mov
jbe
jbe
push
je
mov
int3
lea
lds
jmp
clc
mov
fwait
imull
icebp
sbb
aad
and
leave
inc
fdivrl
loopne
xor
out
add
mov
or
in
nop
pop
pushf
adc
daa
fucomi
bnd
filds
divl
pop
fisubs
push
dec
add
es
inc
movl
sti
push
sub
mov
ficompl
mov
and
inc
lods
sub
or
push
je
xchg
cmp
push
ret
test
inc
sbb
xchg
push
imul
stos
sub
pop
test
cltd
lret
jb
in
ret
mov
xor
xchg
aam
test
imul
dec
scas
iret
xchg
leave
sarl
cwtl
je
xor
push
jecxz
mov
cld
mov
cmc
pop
and
shld
pop
hlt
push
xorb
push
sub
sbb
mov
jne
add
sub
cmp
add
movsl
mov
scas
bswap
pop
sub
aas
adc
movsb
xchg
pop
sub
cmpsb
repnz
xorl
loopne
jno
loop
cmp
aad
adc
push
and
or
roll
mov
cmp
fbld
push
popa
pop
scas
or
stc
jp
leave
xchg
mov
and
mov
mov
mov
sub
ret
imul
out
aam
inc
jge
movsl
lret
sub
xor
mov
ds
xor
pop
adc
xchg
adc
sbb
inc
cld
mov
outsl
dec
mov
icebp
sbb
jns
push
fstl
pop
gs
shl
call
jb
mov
lock
stc
addr16
cmp
mov
jp
cmp
jo
lret
cwtl
loop
xor
dec
inc
mov
in
xor
pusha
ljmp
xor
dec
es
inc
xchg
push
mov
cmp
mov
test
inc
repz
pop
dec
ror
movsl
cmp
and
pop
shlb
mov
hlt
jne
cltd
adc
rcr
mov
push
ret
imul
fsub
out
lock
pop
insb
mov
xor
pop
xchg
xor
xor
pop
jp
dec
or
mov
sub
and
mov
js
hlt
movb
aam
dec
sub
pop
std
xchg
out
inc
rcll
sub
jo
mov
push
enter
int
adc
inc
push
jl
aad
mov
dec
jbe
and
imul
ss
sub
arpl
cmp
sub
jne
imul
es
push
push
mov
cmp
jns
loopne
fs
aad
push
add
pop
or
test
into
lcall
arpl
sbb
sub
ja
scas
lcall
ljmp
jo,pn
ljmp
sbb
xchg
fwait
cmp
nop
shlb
xchg
mov
sarb
jns
pop
xchg
lods
jmp
push
aad
mov
adc
sbb
hlt
xor
scas
xor
jne
shl
or
and
xor
or
insb
cld
into
adc
fidivs
repz
mov
cmc
enter
nop
cs
pop
fsubp
jb
rorb
jnp
pop
xchg
and
imul
sti
out
rcrl
push
sbb
jns
out
or
push
mov
dec
ljmp
mov
ret
cmp
dec
sub
mov
adc
pusha
pop
pop
idivl
repnz
adcl
push
repnz
jae
cwtl
xor
xchg
pusha
shll
in
or
insb
adc
jl
jp
mov
movsl
mov
arpl
inc
add
cmp
jg
mov
push
inc
ficoms
mov
mov
ds
push
sbb
mov
jne
mov
mov
rcl
mov
cli
adc
xchg
loopne
ljmp
sbb
ds
inc
mov
ret
push
imul
xlat
bound
scas
mov
and
push
inc
mov
xor
psubw
sub
mov
lds
fisubs
test
pop
adc
ss
leave
pop
clc
in
ja
ljmp
add
into
cmpsl
out
mov
mov
add
push
sbb
leave
mov
je
arpl
xchg
add
negb
jge
dec
or
mov
jecxz
leave
das
push
inc
push
stos
lock
lcall
cmp
in
sub
pop
mov
outsl
dec
js
hlt
xchg
adc
jle
rcrb
cmp
xchg
scas
sbb
adc
stc
dec
xor
cld
push
lcall
push
and
sbb
dec
sbb
or
mov
addr16
cmp
cmp
mov
lods
add
cmp
push
push
inc
fsub
sarb
and
inc
sarl
xchg
test
out
sub
inc
je
xor
mov
test
mov
inc
in
mov
mov
sub
sbbl
mov
or
and
adc
push
pop
push
scas
xor
sub
push
ret
pop
lods
das
incb
stos
mov
pusha
ss
jns
out
data16
icebp
iret
pop
mov
mov
addr16
dec
data16
ret
cmp
pop
hlt
popa
mov
cwtl
clc
icebp
shr
movb
ja
test
scas
jge
cmpsl
mov
and
aam
adc
data16
dec
jecxz
testb
rcrb
loope
test
push
cli
dec
mov
jne
mov
ficompl
or
mov
add
push
sahf
xchg
xor
int3
cmp
in
adc
xor
mov
pop
arpl
out
sub
mov
popa
movsl
mov
enter
dec
outsb
pop
mov
mov
jl
jns
pop
pop
mov
cltd
sbb
ss
sub
scas
mov
int3
mov
lods
pop
cmp
ret
xor
bound
fdivrs
popf
loope
cltd
inc
clc
scas
cli
adc
aad
out
xor
stos
dec
push
pop
xchg
and
addr16
add
scas
sub
jl
stos
sti
mov
ret
fstpt
cmp
adc
inc
xor
aam
aam
mov
adc
in
or
push
dec
insb
pop
inc
aam
adc
inc
mov
xor
cmpsl
repnz
or
pop
test
enter
dec
inc
ret
ljmp
dec
fdivrs
adc
mov
pmaddwd
scas
jae
mov
arpl
cmp
pusha
fistps
sbb
push
inc
or
or
hlt
test
std
xor
inc
mov
dec
mov
je
mov
cmp
push
push
xor
sbb
xchg
mov
jmp
jl
inc
push
je
cmp
sti
xor
mov
subl
push
inc
stos
imul
aaa
and
addr16
ds
stc
cmp
scas
push
call
jae
scas
push
fs
push
and
mov
insl
test
sbb
mov
notb
dec
mov
outsl
nop
push
push
mov
adcl
bnd
rcll
jae
mov
xlat
int3
mov
out
clc
mov
add
inc
das
push
jnp
divl
sub
clc
jns
xchg
push
adcb
cli
pop
sbb
push
hlt
data16
repnz
mov
cmp
mov
loope
mov
iret
fs
mov
mov
sbb
add
xchg
mov
xor
cmp
xchg
lret
arpl
enter
xchg
adc
xlat
xchg
mov
mov
iret
dec
in
movsl
pop
xor
add
imul
std
sarb
in
sbb
test
test
adc
pop
loopw
xchg
push
push
subb
dec
mov
xchg
sti
cld
pop
xchg
sarl
mov
push
xor
adc
pop
dec
enter
mov
aam
dec
push
or
nop
gs
adc
pop
ja
jmp
xchg
pop
and
sahf
push
subl
push
and
push
daa
scas
dec
mov
call
outsb
mov
insb
stos
dec
test
pop
mov
imul
dec
inc
cmp
mov
mov
gs
cltd
jne
xchg
or
jl
mov
cmovne
pop
cmp
test
jbe
xor
xor
iret
sub
cmpsl
adc
and
sbb
dec
cmp
in
shlb
aaa
adc
inc
cmp
je
repnz
sbb
add
sahf
xchg
and
push
call
fsubl
pop
xchg
mov
insb
insb
ret
jg
pop
mov
jno
in
cmp
add
and
xchg
lret
insl
cmp
es
int
daa
inc
vcvttsd2si
test
and
dec
sub
mov
lods
add
daa
and
mov
addb
test
out
cmc
mov
or
aas
ds
xchg
mov
in
filds
and
jnp
insl
stos
push
shlb
fs
push
ljmp
cmp
add
test
insl
ret
movsl
adc
test
xchg
inc
idivl
dec
fistpl
and
sub
sbb
enter
inc
sbb
andl
adc
push
add
push
ret
out
fwait
mov
add
addr16
loopne
lds
fwait
inc
add
jns
sbb
adc
sbb
or
das
shrb
mov
testb
xor
adc
popf
popf
dec
out
xor
das
pusha
cmp
cmp
jmp
es
jge
fldt
jecxz
std
ja
xchg
cmp
jecxz
jne
adc
pop
inc
aad
jp
add
xor
add
jo
fsubr
sbb
pop
push
shlb
lods
test
outsl
ret
test
sti
mov
lods
dec
fidivrs
push
and
inc
dec
or
xchg
or
inc
aas
mov
fisubrs
cmp
gs
repnz
addr16
mov
xchg
xor
mov
popf
cmpsl
pushf
cmp
cmc
stos
xchg
pop
dec
popa
scas
idivb
jle
lea
pop
xor
test
jge
ret
cltd
aad
and
inc
outsl
inc
jmp
add
cmc
add
arpl
fdivl
fnsave
shlb
xchg
ret
popf
mov
jmp
cmp
insb
xor
mov
pop
xchg
lret
inc
cmpsl
dec
scas
sti
pop
cwtl
lods
and
and
cmc
out
pop
jno
sar
mov
sub
dec
testl
xchg
xchg
outsl
and
adc
cltd
or
fistps
arpl
ret
ret
push
js
insb
sar
mov
dec
scas
popf
and
xchg
mov
cwtl
cmpsl
lret
or
push
loop
js
inc
push
call
lods
inc
sub
mov
sub
lcall
and
pop
out
outsb
fs
int3
scas
xchg
in
lock
scas
int
call
inc
ret
and
ret
pop
sbb
mov
in
xor
pop
mov
iret
ret
lret
xchg
mov
mov
in
aad
inc
sbb
xor
push
aas
or
dec
test
add
loopne
stc
cmpsb
fiaddl
incb
jge
mov
xor
test
lods
pushf
pop
mov
adc
dec
mov
push
jg
cld
arpl
stos
push
and
push
mov
sbb
push
inc
xor
add
adc
ret
mov
jae
cli
mov
jge
dec
adc
adcb
scas
mov
mov
out
xor
scas
adc
mov
adc
in
addr16
out
jmp
test
imul
in
jne
push
out
jns
lret
dec
les
das
push
fscale
adcl
imul
pop
dec
cmp
mov
mov
inc
ljmp
mov
xchg
mov
insl
pop
add
adc
mov
mov
push
out
test
pop
push
pop
pop
gs
jge
jbe
mov
xchg
add
fistps
lea
stos
pop
inc
xchg
out
rorl
mov
data16
out
or
adc
and
jb
cmc
sbb
fistl
ret
ljmp
sbb
ret
xchg
cmpsb
cmc
mov
sbb
out
ljmp
dec
dec
mov
cmpsb
push
shl
inc
lods
and
sub
repz
insb
mov
adc
push
mov
lcall
jne
inc
mov
in
mov
adc
idivb
and
and
or
fadd
mov
and
lods
push
in
ljmp
dec
aaa
cli
dec
mov
out
pop
mov
inc
mov
jb
xor
scas
sbb
mov
ds
or
dec
clc
pop
ret
cltd
outsb
into
xor
popl
rcrl
mov
nop
push
ljmp
test
add
xchg
outsl
add
jae
adc
test
xor
sub
sub
loopne
mov
rcr
lock
xchg
test
insb
cs
arpl
jns
jae
jge
lcall
repnz
in
mov
push
pop
sbb
mov
ljmp
and
pop
mov
loopne
add
xchg
push
mov
fistpl
jbe
mov
sbb
shl
jecxz
add
imul
in
inc
mov
and
lret
jmp
sub
ds
jg
or
ss
cmp
in
rcr
and
xchg
pop
sbb
xchg
fstps
inc
mov
lea
xor
mov
mov
xor
cli
cld
arpl
or
loop
mov
jae
inc
push
fidivrs
vpand
mov
push
or
test
mov
pop
stos
ss
jge
push
xchg
fs
or
int
arpl
jmp
je
mov
test
or
pop
mov
sbb
jnp
sbb
dec
fchs
and
mov
fsubr
push
xchg
jnp
push
mov
add
daa
xlat
push
and
lcall
cmp
mov
mov
inc
mov
std
adc
add
lcall
push
clc
cli
les
push
jle
sub
lods
pop
iret
popa
sbbl
push
das
ret
clc
int3
push
icebp
fstpl
and
mov
icebp
pop
cltd
test
out
jge
movntps
das
call
stc
or
testl
in
dec
bound
mov
hlt
sbbl
cli
inc
stos
adc
ret
enter
arpl
jge
sbb
sbb
ja
pop
into
fs
loopne
and
sbb
add
cmp
xor
cs
jne
and
sarb
repz
aam
inc
dec
xlat
push
dec
fstpt
mov
lds
lret
aam
inc
test
arpl
sub
pusha
mov
jae
jp
cmpsb
mov
in
xchg
stc
mov
out
test
cmp
in
pop
sbb
pushf
pop
sarb
lods
rolb
xor
sub
popa
or
jmp
lea
int3
loope
in
addr16
enter
sub
cmp
leave
mov
sbb
fcoml
shll
aas
push
and
and
aas
shlb
repnz
jo
cmp
mov
push
shrb
or
idivb
mov
pushf
stos
lahf
cmp
jne
mov
test
in
cmpsb
out
es
jle
mov
jmp
cmova
mov
imul
dec
push
pop
fcoms
scas
or
push
push
repnz
sbb
jne
les
and
mov
jne
pop
and
adc
fnstcw
or
insb
pop
adc
aad
rolb
sub
in
push
xchg
mov
mov
lahf
and
mov
test
das
sub
ret
sub
mov
xor
lods
daa
insl
icebp
sub
outsb
or
or
orb
xchg
mov
push
mov
inc
add
push
fdiv
shll
push
outsl
data16
mov
sub
cltd
pop
mov
jecxz
dec
mov
arpl
push
gs
sbb
in
rcll
in
std
movsb
ja
pop
dec
mov
or
imul
shlb
clc
fstpt
dec
xchg
push
gs
pop
mov
cmp
gs
jecxz
mov
rcrb
arpl
add
lods
ret
out
mov
jmp
in
xor
int
xchg
inc
imulb
mov
jno,pt
pop
in
sub
sti
scas
nop
cld
insl
adc
ljmp
jno
in
fld
sarl
aad
sti
rcrl
ret
sahf
pop
cmp
xabort
add
stos
or
data16
sbb
aam
lods
jb
inc
xchg
movaps
dec
adc
dec
loop
mov
pusha
xchg
mov
mov
aaa
mov
jae
push
inc
pop
ljmp
jecxz
mov
cmp
ja
xchg
and
pop
add
jae
in
add
jo
rclb
sub
sub
xor
xor
push
push
cmp
jns
call
test
cmp
mov
mov
pop
mov
jg
fs
cld
jnp
inc
loope
pop
or
mov
and
popa
ret
mov
cwtl
les
imul
mov
and
stos
xchg
or
add
xor
out
into
and
lods
or
inc
pusha
xchg
shrl
fildll
mov
vmovshdup
push
mov
test
aas
in
and
pushf
bound
sbb
dec
sub
jmp
mov
pop
sub
in
aam
cmpsb
cld
and
mov
insb
daa
inc
mov
push
inc
or
dec
mov
mov
xor
jle
movsb
adc
adc
ret
imul
cmpsb
xchg
ja
sbb
mov
out
aas
shl
fnstenv
xchg
mul
mov
divb
fsubrs
sub
and
xor
or
sbb
xchg
dec
loope
or
outsl
imul
cltd
push
int
enter
ljmp
cmp
cwtl
mov
jo
xchg
pop
sub
aam
jo
loopne
clc
push
jbe
and
pop
xchg
scas
mov
mov
cmp
jae
rorl
add
hlt
sub
bound
out
das
iret
add
aas
jae
and
shll
pushf
cltd
int3
cmp
repnz
cmp
add
inc
and
bnd
xchg
mov
arpl
and
jb
data16
pop
lret
aam
fisttps
add
aam
mov
cltd
mov
mov
sub
mov
repz
rcrl
inc
push
mov
repz
mov
adc
iret
test
xor
sbb
rolb
test
xchg
sets
lock
sub
cwtl
icebp
loopne
iret
xchg
call
mov
punpcklbw
mov
lcall
xor
jmp
fidivs
add
lgs
hlt
lods
sbb
inc
xchg
push
push
dec
adc
test
mov
leave
imulb
and
xchg
push
and
mov
push
adc
sub
lea
loop
shlb
outsb
inc
rol
sbb
mov
outsl
mov
shl
push
inc
xchg
test
stos
mov
int3
or
test
movl
or
jne
push
jl
xor
xchg
loopne
jne
push
nop
xor
xchg
inc
loop
ret
pop
sub
or
int
outsl
mov
pop
adc
lods
pop
and
cmp
mov
lret
ud1
pop
inc
sub
sar
addl
dec
mov
dec
dec
loop
mov
xchg
das
pop
adc
xlat
repnz
pop
adc
jp
push
jl
notb
jl
divb
sbb
test
xchg
aad
mov
negb
jae
push
cltd
cs
jae
pop
cmp
je
push
sub
inc
add
les
jmp
aam
popa
dec
sub
movsb
stos
enter
mov
insl
inc
enter
mov
stos
push
mov
std
ljmp
or
push
fcmovnu
adc
and
add
dec
adc
or
fisubl
fdivrl
inc
repnz
inc
cli
mov
xchg
mov
sbb
iret
in
push
sub
or
add
jecxz
shll
dec
cltd
sub
jno
shrl
xchg
mov
xor
ljmp
loop
movsb
jle
loope
nop
mov
mov
mov
fists
loopne
cmp
sar
incb
stos
cmp
mov
adc
cmp
mov
jp
mov
popf
pop
xchg
les
orb
hlt
push
sti
fnsave
xchg
test
cmpsl
xor
sub
push
add
cs
inc
xor
or
mov
cmc
sub
bound
sbb
mov
pop
pop
inc
and
in
xorb
dec
mov
jge
mov
fs
dec
insl
cltd
je
pop
add
daa
inc
call
sbb
mov
pop
loopne
xor
jle
lcall
jae
test
pop
and
sbb
ja
outsb
cmp
ja
sti
xchg
cmc
ror
shl
into
rol
leave
or
or
arpl
mov
ret
test
mull
dec
pop
jne
sub
xor
jb
ret
fildl
lcall
mov
inc
ss
mov
std
test
bound
dec
lcall
fmull
xor
jecxz
test
loope
in
adc
xchg
sub
fdivrl
add
je
bound
inc
or
jg
mov
mov
xchg
or
int
jo
jle
repnz
dec
dec
mov
ret
ficoml
movsl
hlt
jb
xlat
in
xor
jo
and
or
mov
pop
push
dec
push
rcl
les
mov
arpl
mov
or
xor
and
mov
imul
pop
adc
mov
aas
leave
jle
fwait
mov
xchg
inc
stos
push
in
pop
dec
or
jl
jle
jg
cltd
xchg
ljmp
scas
lret
pushw
into
xor
cmpsb
jmp
xor
mov
insb
jne
push
sbb
call
stos
add
out
jl
aad
fadd
arpl
push
test
mov
xor
movsb
push
call
ret
pop
push
rorl
cltd
xor
cli
iret
jb
aas
fs
lcall
cwtl
cmp
mov
mov
push
cmp
jno
pusha
insb
jae
call
mov
lods
and
mov
int3
sbb
mov
loopne
movsb
insl
xor
testl
loope
fstpl
out
mov
test
dec
sbb
cmp
in
adc
notb
pop
repnz
das
ret
jno
jne
pop
push
nop
xchg
mov
sbb
inc
jmp
add
dec
xchg
cmp
in
pop
mov
or
adc
or
push
mov
pop
push
jno
fidivs
dec
es
or
cwtl
jmp
pop
push
push
cmpsb
aaa
jp
sub
jb
in
push
adc
rcll
cmp
cltd
mov
jb
lods
ds
fwait
jg
mov
jl
fisttpl
loop
dec
out
xchg
out
or
enter
lret
lahf
in
cmpsl
adc
aaa
in
sub
lea
xor
pushf
add
les
fisubl
cmp
add
enter
dec
rcrl
sahf
mov
gs
mov
pop
les
mov
ja
repnz
jmp
std
in
mov
mov
aas
pop
sub
jnp
xor
sbb
push
add
add
push
enter
ljmp
jg
popf
sbb
data16
mov
stc
cmpsb
lods
cmp
push
nop
jge
pushf
cmp
test
test
rorl
dec
les
jecxz
pop
fadds
push
and
adc
push
xchg
mov
sbb
inc
mov
xor
cs
cmpsl
sub
pop
push
mov
sahf
repz
imul
out
dec
ss
cld
lcall
mov
lea
mov
addb
ljmp
mov
jne
dec
jne
pop
push
cmp
pop
cmp
faddp
mov
orl
mov
mov
lret
ret
or
add
mov
clc
movsb
imul
out
mul
insl
xchg
mov
xchg
aas
xchg
adc
fadd
icebp
frstor
mov
push
leave
int
add
push
in
int3
mov
out
insl
scas
ja
scas
fwait
cs
mov
test
dec
xchg
movsl
mov
push
in
pop
notl
mov
mov
sbb
fistpll
inc
jmp
pop
fs
pop
adc
push
sub
in
out
enter
dec
push
bound
cld
xchg
sbb
mov
inc
fdivrs
neg
or
stos
lret
mov
xchg
and
loope
or
das
rclb
test
or
push
cmpl
push
jae
cmc
in
mov
xchg
dec
jb
xchg
loopne
mov
lods
adc
add
mov
inc
pop
inc
cmp
out
icebp
fimuls
sub
jo
cwtl
mov
add
aad
and
push
pusha
in
mov
inc
mov
fbstp
nop
loop
pushf
cmpsl
sbb
aas
movsb
clc
jecxz
push
push
jo
je
cmp
test
stc
sub
arpl
shll
inc
dec
ficompl
mov
mulb
outsl
mov
pop
fs
lcall
in
and
out
inc
scas
enter
inc
scas
xchg
mov
test
bound
es
in
insl
and
pop
mov
mov
jne,pt
movsl
mov
jno
orl
jle
inc
lods
out
lcall
imul
sub
push
push
ja
mov
xchg
loope
sub
push
dec
jl
xor
movsl
loop
lret
and
popa
aaa
es
ja
mov
pushf
sub
arpl
shlb
loopne
pusha
push
mov
andl
movsl
call
mov
movsl
xchg
lret
mov
dec
jne
mov
jo
fst
enter
xor
jl
imul
add
incb
out
sbb
dec
xlat
pop
push
jge
addb
into
and
mov
push
lea
mov
shl
test
leave
fpatan
rcll
xor
or
aad
xchg
je
cmpsl
popf
outsl
mov
xchg
aaa
loop
bound
lds
insb
mov
test
out
xor
inc
insl
or
add
jo
xor
fisubrl
clc
sti
incl
xchg
data16
xchg
fdivrs
bound
add
sbb
push
xchg
les
out
dec
push
cltd
mov
pop
xchg
jmp
xchg
mov
bnd
cmp
mov
fistpl
mov
mov
shr
mov
jle
adc
lcall
out
dec
adc
mov
jp
lods
repz
cmp
xor
mov
jno
popa
pop
mov
mov
scas
test
xchg
out
movsl
and
repz
add
jle
lea
les
pop
mov
sub
arpl
fwait
and
test
dec
mov
sbb
xchg
lret
xchg
cmp
dec
imul
popa
sahf
fs
bound
addl
ss
dec
and
push
ret
adc
xor
dec
sar
imul
out
repz
xchg
scas
and
fisttps
ljmp
push
nop
sbb
xchg
or
or
ret
sarl
mov
shll
mov
sarb
push
jmp
jno
movsl
pop
sbb
pop
pop
inc
cmp
rolb
mov
and
pop
fsubrl
pop
or
add
adc
movsl
mov
add
scas
fldcw
ljmp
mov
mov
lret
es
mov
data16
and
xor
in
mov
fs
push
push
fcmovnbe
repnz
bound
out
enter
rol
mov
data16
adc
decl
sbb
pop
repz
test
addr16
jno
shrl
dec
icebp
mov
imull
jmp
xor
test
dec
lahf
faddp
mov
jns
inc
mov
js
sbb
mov
nop
mov
sbb
repz
mov
push
iret
test
xchg
in
es
popa
jne
fistps
subl
adc
clc
dec
pop
push
mov
push
or
insl
cmp
push
push
iret
xchg
adc
nop
and
xchg
ret
adc
inc
jno
mov
xor
rcr
aad
push
icebp
movsl
or
inc
stos
push
loop
pop
cmpsb
std
inc
popf
push
movsb
in
jbe
pop
into
aam
adcb
xchg
ss
in
out
dec
pop
and
ret
cmp
pop
sbb
lcall
lds
fsubs
pop
cmp
jmp
push
dec
lock
rcrl
pop
dec
mov
xchg
jmp
sub
fld
idivl
mov
test
aas
push
cld
inc
imul
lds
rolb
call
mov
mov
cmc
loope
div
mov
pop
mov
xor
jg
call
xor
sub
out
xor
xchg
or
adc
xlat
mov
cmpsl
shll
sub
stc
cmpsb
or
cs
xchg
imul
xor
push
sbb
mov
stos
popf
outsl
pusha
or
xor
cmp
ret
das
xchg
cmc
or
and
pop
push
mov
xchg
inc
add
push
cmp
lods
xlat
sti
xor
jo
add
sbbl
dec
rorl
push
enter
int3
lcall
aas
int3
adc
cli
adc
jb
push
adc
mov
push
mov
push
lds
mov
std
jle
gs
rcl
sub
in
and
les
mov
and
fsincos
ror
data16
shll
push
icebp
shrl
in
in
sub
sbb
pusha
cli
ret
xchg
rolb
fists
dec
into
pop
sahf
jae
xlat
aad
in
add
fisttpll
push
cltd
jno
xor
pop
jecxz
popf
push
test
fsubl
aam
in
pusha
je
xchg
inc
push
mov
repz
push
inc
loope
add
ret
pop
push
sub
lds
ljmp
fnstsw
scas
int
ds
dec
xlat
inc
fnstsw
mov
cld
fnstcw
dec
adc
and
inc
mov
pop
loop
subb
push
xchg
jle
and
pop
xchg
inc
fnstcw
sbb
out
or
push
mov
mov
xor
lods
int
add
jo
xor
pop
adc
or
iret
lock
ret
lahf
lock
jmp
pop
mov
mov
push
fsubl
fbstp
fmull
mov
jg
fsubrs
adc
cmp
cmpsb
sbb
sahf
mov
cwtl
push
cltd
ret
cmp
inc
scas
ss
aas
mov
xchg
inc
push
cmp
clc
push
lret
and
cmpsl
cmp
mov
pop
lock
sub
push
sbbl
dec
daa
xorb
add
aas
test
push
xchg
sub
pop
fbstp
arpl
repz
add
adc
cmc
push
push
mov
dec
sarb
or
xor
mov
iret
pop
shl
and
lods
pop
iret
or
mov
aam
or
adc
jo
fsts
xor
outsl
scas
popa
test
sbb
inc
xor
lcall
dec
and
aam
mov
add
test
push
icebp
jns
aad
push
dec
or
mov
aad
cmp
xlat
jne
loop
pop
jge
dec
jle
jb
jne
mov
imul
out
into
test
inc
mov
out
and
loop
adc
dec
clc
jae
dec
pop
in
test
adc
adc
std
inc
jno
xchg
lds
add
popa
out
repnz
cmp
add
mov
add
dec
jle
gs
add
or
or
fisubs
xor
xchg
xor
daa
mov
xchg
and
pop
lock
mov
popf
fidivl
scas
sbb
ja
mov
inc
inc
insb
sub
mov
or
sub
inc
sahf
negb
arpl
xchg
xchg
mov
dec
dec
push
dec
hlt
into
and
fwait
ss
addr16
outsl
sbb
jecxz
pop
sbb
pop
and
sbb
orb
cwtl
aam
xchg
mov
leave
enter
adc
mov
out
adc
sbb
mov
cmp
shr
in
pop
cmc
hlt
mov
xlat
iret
push
pop
bnd
jle
jnp
dec
cmpsl
in
icebp
add
mov
sub
arpl
lods
add
pop
adc
fsts
mov
fldt
int3
popa
iret
adc
sub
xchg
fistpl
and
pop
lahf
mov
dec
push
faddl
lcall
sar
mov
fdivrs
lods
idivl
adc
clc
inc
push
jmpw
mov
mov
sub
dec
push
sbb
lcall
subl
or
mov
xor
mov
shlb
clc
dec
add
mov
out
push
shrb
pushf
int3
xchg
aaa
pop
jo
stos
xchg
inc
ja
out
push
jle
fsub
fistl
jo
or
scas
popa
daa
xorb
dec
jae
dec
inc
bound
imul
imul
adc
dec
loop
mov
fildll
stc
jecxz
mov
or
lods
cmp
cwtl
xchg
add
pop
add
push
pop
aaa
cs
xor
or
mov
ficompl
insb
aad
andb
pop
ror
xchg
xchg
aam
nop
pop
adc
lds
jnp
jo
sbbb
xor
and
push
imul
sbb
adc
mov
push
sbb
mov
pop
mov
iret
shll
jmp
lds
adc
cwtl
dec
loop
add
in
bound
jo
jnp
mov
test
sub
or
adc
xchg
addr16
cmp
fbstp
sti
mov
pop
in
adc
je
fisubs
je
int3
pusha
dec
push
test
loopne
xchg
sti
fst
inc
mov
fsubrs
xchg
or
cmc
mov
cmc
mov
hlt
aam
icebp
pop
call
inc
push
sub
jmp
mov
sub
ss
jo
lcall
imul
clc
ss
stc
mov
mov
inc
push
mov
insb
mov
push
cmp
xchg
je
jae
sbb
orl
xchg
adc
je
fcmovnb
mov
or
mov
stos
jns
jg
subl
cmp
cmp
and
sub
push
push
mov
mov
xorb
mov
dec
bnd
pop
adc
cmp
jle
add
sarb
or
ds
push
xchg
cmp
pop
inc
push
dec
mov
dec
movsl
xor
adc
pop
add
lods
mov
push
gs
inc
insb
add
rcpps
out
sbb
cmpsl
push
imul
push
shll
jns
repnz
std
lock
xchg
add
adc
mov
fwait
sub
in
dec
xchg
insb
shrl
adcl
xchg
ss
imul
lret
arpl
leave
mov
ljmp
or
and
mov
mov
fwait
add
outsb
mov
sbb
or
das
call
inc
mov
fdivrs
add
dec
in
mov
push
fcmovnu
xchg
pusha
inc
xor
inc
outsl
add
push
int
loopne
insb
xorl
inc
mov
jo
mov
push
sbb
js
xor
push
mov
dec
push
les
test
nop
lcall
xchg
cmp
xchg
jmp
pushf
mov
inc
nop
mov
call
idivb
xor
sub
out
int
adc
jnp
dec
cmp
rclb
jns
call
outsl
mov
jmp
pop
inc
ss
test
ja
mov
jno
fs
xor
mov
fmull
repnz
push
ret
and
scas
mov
push
jecxz
aas
nop
sub
jne
pop
shll
and
jl
popf
bound
jnp
dec
sbbl
sbb
fmuls
jns
incl
pop
lahf
push
mov
aad
sub
push
mov
add
push
sub
push
jle
iret
or
mov
int3
or
subl
ret
pshufw
lahf
insb
ficoml
es
icebp
mov
lock
in
jae
addr16
pop
xor
insl
out
fnsave
psadbw
inc
xor
xor
lcall
das
mov
into
cwtl
inc
iret
sbb
or
pop
mov
aam
xchg
jo
pushf
dec
outsl
mov
int3
inc
sarl
rcrl
andl
sbb
movsb
int
jbe
adc
or
jecxz
or
ss
cmpsb
in
push
ljmp
xor
jb
and
inc
xorl
or
inc
rcrb
and
subb
repz
cmpb
mov
das
pop
in
mov
dec
outsb
add
push
and
cmp
pop
xchg
aaa
mov
adc
data16
sub
daa
popa
add
lods
sbb
lahf
popf
lods
sbb
test
xchg
popa
sub
dec
ret
or
cmpsl
push
loop
in
in
inc
out
sbb
jo
cmp
stos
shl
lret
pop
bound
and
jmp
push
sbb
add
arpl
push
sub
cmpsl
aaa
das
or
inc
sub
sub
push
testl
scas
sub
xchg
mov
jmp
jnp
loope
lcall
in
and
int
test
pop
inc
xor
imul
mov
mov
loopne
inc
negb
stos
mov
sbb
sbb
ret
mov
push
gs
ds
rcrb
mov
and
js
xchg
std
hlt
and
mov
sbb
cli
pop
rcll
insl
in
jmp
loopne
movsl
mov
adc
adc
movsl
movsb
sbb
popa
xor
test
popa
sbb
push
jb
jmp
ds
cmp
shrl
xchg
dec
cmp
jle
sbb
push
popf
addr16
pop
cmp
hlt
jbe
mov
test
andl
jno
lret
xlat
mov
addr16
mov
xor
sbb
mov
psubd
out
jg
popa
cmp
lods
mov
and
cmp
mov
notl
lret
adc
or
push
scas
push
es
sbb
mov
jg
lcall
movsl
inc
test
add
scas
outsl
sub
bswap
push
pop
cli
inc
pop
xor
cmp
aas
mov
imul
ret
pop
jb
ja
pop
jbe
shl
lods
test
sub
into
cmp
pop
xchg
int3
adcl
jb
lea
push
fisubs
add
push
imulb
mov
inc
pop
lods
adc
arpl
in
cmp
push
jle
mov
nop
out
xchg
fistpll
add
xor
or
inc
int3
adc
pop
dec
adc
push
mov
xlat
xor
and
add
pop
jmp
sub
dec
dec
inc
cmp
inc
movsl
pop
inc
insb
jbe
xor
loop
mov
jp
dec
lcall
out
repz
mov
stos
and
xor
hlt
stos
push
sbb
jmp
nop
add
push
mov
les
and
sbb
inc
or
bswap
or
daa
mov
mov
std
cmp
pop
jl
push
sbb
and
sbb
les
adc
popf
xchg
arpl
sub
icebp
jb
stc
adc
into
xchg
rorb
pusha
push
pop
xor
lods
xchg
cwtl
adc
jg
aad
movsb
in
dec
fs
pop
sbb
aad
dec
stos
jl
ret
push
cmpsl
jge
int
jmp
and
fcmove
into
fcmovne
sbb
mov
add
adc
in
jl
push
aas
loopne
aad
ret
pop
rclb
mov
les
jle
in
mov
es
xor
xchg
aad
xchg
lea
insl
mov
sub
jb
mov
es
cmp
add
out
push
in
lea
ja
imull
cmp
stc
xchg
mov
xchg
scas
std
push
pushf
xor
mov
fisttpl
sub
shlb
xor
jne
fcmovnb
outsl
jle
xor
mov
sbb
icebp
lods
push
outsb
pop
sub
addr16
push
test
out
or
ror
call
xor
pusha
jge
pop
jmp
mov
cmpsb
jnp
bound
ret
push
sti
inc
push
out
and
pop
fisubrs
lock
out
sti
mov
dec
jae
pushf
adc
mov
jp
inc
scas
outsb
jo
shrl
leave
jle
das
or
out
lea
shrb
and
ret
adc
xchg
xlat
mov
test
dec
xchg
lret
mov
outsl
jnp
cmp
cmp
and
lods
mov
lods
adc
rcll
mov
mov
mov
in
int3
test
mov
jg
jg
inc
movsl
and
shlb
mov
xor
int3
daa
push
pop
das
mov
rcll
inc
rclb
std
cmp
enter
setnp
add
mov
jp
push
mov
sti
out
push
sbb
xor
dec
cld
rcrl
pop
dec
add
jl
cltd
mov
mov
xchg
add
jb
rcll
ljmp
repz
cld
aas
hlt
mov
clc
repz
xchg
lods
sbb
inc
mov
stos
bound
cmp
xchg
or
xor
iret
jne
xchg
push
xor
pushf
xchg
fdivp
sahf
push
outsl
pop
mov
or
js
stc
shl
xchg
outsb
cmp
mov
jle
push
and
dec
out
mov
lods
test
ss
sbb
stos
pop
out
pop
inc
xchg
addr16
jp
ret
push
dec
leave
sbb
ret
cwtl
add
pop
inc
inc
cmc
cmp
lcall
mov
fisubs
lcall
and
dec
in
fucomi
push
stos
mov
mov
dec
mov
fbld
mov
lock
inc
jnp
cmpsb
fldl
adc
adc
mov
add
mov
mov
ret
add
imul
add
sbb
mov
dec
mov
sahf
dec
ret
xchg
adc
cmp
xchg
in
mov
test
cmc
shrl
ds
cmpps
clc
mov
pop
mov
mov
movsl
mov
je
mov
rcrl
jg
outsl
jns
inc
jmp
xor
sahf
lahf
dec
loope
mov
ja
xchg
fsubs
pop
push
sub
mov
or
cmp
xchg
pop
fdivrs
inc
or
insb
outsb
mov
shrl
fistps
or
pop
adcl
and
and
std
adc
aaa
ja
out
mov
inc
cltd
inc
insb
fwait
aas
cs
js
push
and
roll
in
add
ret
xchg
lock
inc
jmp
add
push
decb
sub
cs
test
pop
xchg
jmp
stos
jno
mov
rclb
pop
dec
pop
mov
repnz
mov
pop
mov
fucomi
popf
mulb
lock
push
pop
inc
ret
pop
sbb
lret
outsb
rcl
cltd
and
inc
dec
sahf
jl
xor
mov
push
fisttps
dec
outsl
shll
ds
pop
das
cmp
loopne
xchg
sti
leave
pminub
daa
mov
xorl
inc
xchg
popa
das
xchg
ret
push
movaps
lcall
push
in
lods
fstpt
enter
sbbb
dec
or
adcl
and
cmpsb
and
add
ret
cmpl
add
jbe
cmp
out
aam
and
add
xchg
sub
inc
les
test
pop
xor
scas
sbb
mov
sahf
mov
mov
cmpsl
out
das
mov
notl
xor
cmp
lock
sub
cmp
cli
je
in
in
add
add
jge
lahf
adc
inc
mov
add
aas
les
pop
mov
push
fnsave
add
and
jle
and
cmpsl
or
pushf
loopne
add
push
pop
or
xor
das
stos
adcb
dec
sbb
sub
test
xchg
cld
xor
xor
sub
decl
xor
outsb
push
bound
fwait
add
xor
mov
in
out
mov
cmp
jns
adc
test
mov
adc
gs
or
out
loope
jg
ss
outsb
ss
subl
jge
xchg
sub
dec
fistl
cli
mov
fstps
mov
std
fldl
movsb
icebp
mov
jmp
hlt
out
jne
mov
and
clc
sub
xchg
push
rcll
rol
outsb
lcall
dec
dec
mov
out
aas
or
in
and
xchg
push
ret
and
mov
xchg
rorb
sbb
aam
push
clc
xor
mov
inc
ficoml
in
and
fnsave
test
pushf
adc
xchg
scas
dec
sub
call
jb
xchg
js
inc
bound
test
shll
and
pop
std
aaa
mov
add
mov
rcr
out
inc
mov
cli
lcall
addr16
jo
cmp
pop
out
test
inc
pushf
jb
stos
xor
pop
inc
mov
mov
fists
in
cmp
sbb
in
mov
mov
adc
push
mov
movsl
xor
and
or
mov
pop
repz
imul
sub
jle
shrl
shlb
mov
rolb
mov
addr16
cmp
add
data16
push
dec
imulb
xchg
xchg
stc
jb
in
cmp
cmp
push
sbb
dec
cmpsl
ss
movsl
hlt
push
mov
addr16
mov
push
xor
add
lahf
notb
jp
sub
in
cli
fcoml
rorl
push
mov
or
lret
cwtl
mov
mov
lret
outsb
imul
fiaddl
cwtl
pop
js
js
inc
repnz
scas
mov
xchg
add
ss
sbb
test
pop
pop
stc
lods
sbb
in
inc
mov
fstl
in
pop
cli
ds
jo
pop
mov
loop
add
jge
jo
repz
cmpsb
inc
fildll
push
xchg
add
and
or
pushf
insb
int
out
add
inc
mov
pop
and
mov
mov
shrl
xchg
fbstp
sub
in
push
adc
arpl
insb
mov
jne
sub
sbb
fdivl
fsubl
adc
call
movsl
and
sahf
jnp
sub
pushf
stos
imul
mov
cmpsl
jle
cmpsl
jg
pop
mov
push
cmp
cmp
orl
mov
jno
dec
loope
cld
push
and
out
or
lcall
addr16
pop
outsl
lahf
rclb
lahf
sub
pop
fistps
xchg
hlt
fnstsw
xchg
mov
outsb
or
mov
insb
mul
aad
mov
inc
mov
add
mov
rcr
in
fcmovne
imul
repz
loop
sar
dec
inc
test
xor
leave
mov
stos
mov
jmp
jnp
xchg
cwtl
icebp
ljmp
ja
and
fiaddl
jne
dec
mov
inc
ss
inc
sbb
enter
nop
outsl
adc
push
adc
in
push
inc
ds
mov
imul
scas
rcr
cld
sahf
faddl
cld
sbb
lock
popf
mov
lods
in
cvtps2pi
adc
je
push
jne
xlat
sub
fimull
or
test
sti
out
push
dec
mov
sbb
popa
or
jecxz
xchg
rolb
sahf
sti
xchg
pop
dec
mov
jnp
xchg
mov
push
jo
or
cli
pop
xchg
xchg
fnstenv
add
or
call
xor
rolb
and
in
cld
mov
fnsave
xchg
and
mov
nop
popf
pop
in
pop
insl
out
scas
adc
dec
sti
push
decl
repz
mov
fsubp
in
add
add
lock
mov
lahf
cmp
fistpl
xor
lock
stos
inc
sub
sbb
dec
lcall
inc
popf
dec
add
ds
idiv
mov
mov
pop
int
testl
or
inc
jne
inc
jno
rclb
shr
jb
cwtl
mov
push
dec
add
or
out
notl
adc
stos
sti
mov
in
loopne
xchg
mov
loopne
sbb
stos
repnz
sbb
sbb
lods
out
add
or
add
loope
cmp
pop
imul
int3
xlat
adc
mov
sub
jns
scas
mov
das
sbb
mov
data16
push
xchg
inc
mov
test
sti
inc
xor
xlat
mov
es
enter
pop
jle
add
adc
jle
pop
push
lret
rcr
pop
arpl
test
sarb
int3
cmpsb
ja
mov
mov
inc
pop
fldt
lds
push
sbb
push
lahf
push
lods
xchg
leave
dec
pop
dec
push
or
adc
ret
repz
insl
xadd
sub
sub
or
xchg
inc
pop
es
hlt
pop
aam
in
mov
cmp
int
sub
or
or
mov
xchg
daa
mov
push
push
pusha
ret
movsb
or
sub
call
sbb
aas
pop
jnp
lret
sahf
xor
int
aas
pop
fistps
cmc
or
shll
and
ret
cmp
pop
popf
push
mov
add
das
lahf
lret
dec
xchg
pop
xor
cmpsl
push
or
inc
push
dec
xchg
mov
arpl
mov
jmp
jg
iret
or
fs
xchg
dec
add
xchg
sub
xchg
jo
fsubrl
mov
les
ds
jae
pushf
sbb
jb
test
repz
mov
jge
or
fs
add
jg
fs
pop
sti
or
ss
push
xchg
mov
sub
lods
imul
xchg
xchg
loopne
lea
ret
cli
sbb
cmp
or
mov
push
dec
jbe
scas
xor
add
jae
cmp
rol
dec
jbe
movsb
ret
mov
adc
adc
inc
fsub
gs
push
out
cmp
pop
push
shlb
dec
cmpsb
outsl
ds
lret
fidivl
xor
xchg
dec
and
inc
lock
sbb
add
cmpsb
loopne
rcll
cmp
pusha
aas
push
add
xor
pop
jmp
xlat
and
rcr
sbb
sbb
inc
jl
repnz
decb
inc
mov
xchg
les
outsl
cmp
nop
xor
subb
cmp
mov
and
cmp
clts
mov
cmpl
mov
and
mov
decl
cmpsl
jne
lret
aad
hlt
pop
sbb
stos
add
xor
or
and
dec
cwtl
int3
lahf
push
shll
or
out
enter
sti
lods
push
js
inc
mov
sub
aaa
mov
loope
sbb
xchg
jmp
pop
xchg
je
xchg
dec
sub
aas
jmp
pop
jge
popa
sbb
mov
cmp
lret
push
xchg
in
in
jecxz
cmp
pop
jecxz
out
test
cmp
sub
xor
ffree
arpl
sub
out
mov
pushf
cmp
push
jno
adc
es
adc
jle
rorl
or
cli
jmp
cwtl
mov
jl
sbbb
js
lret
xor
insb
popa
add
in
mov
push
or
xchg
pop
xchg
shlb
cmpsl
pop
decb
jecxz
push
inc
xor
mov
pop
cmp
and
xchg
inc
pop
pop
pop
push
ret
inc
mov
jge
mov
pop
or
jns
bound
xchg
mov
lcall
ja
repnz
xor
mov
mov
push
xor
scas
mov
push
mov
mov
dec
push
add
inc
cld
jle
scas
jo
jnp
cmc
mov
int3
add
movsl
or
je
test
and
dec
xchg
sarb
popf
std
mov
inc
sbb
mov
test
mov
adc
inc
dec
das
lods
cmc
push
daa
mov
jno
jbe
mov
sahf
not
decl
xchg
sbb
adc
mov
mov
mov
mov
outsl
add
out
aaa
ret
mov
cwtl
adc
cli
ret
add
and
call
pop
xchg
cmp
inc
xchg
into
sbb
fsubrl
lods
clc
ss
and
push
popa
jge,pn
xchg
in
test
loopne
ficomps
or
pushf
addl
adc
cmpsb
push
ss
mov
jmp
pop
andl
dec
mov
daa
xor
icebp
jle
mov
cmpsb
dec
xchg
dec
out
addr16
ret
pusha
sbb
sbb
daa
lods
fildll
xchg
push
inc
repnz
and
jg
jp
add
mov
int
adc
je
mov
lea
mov
sbb
adc
popf
add
imul
jge
mov
ret
in
scas
dec
aas
sbb
outsb
cmc
jge
xchg
testb
lds
loope
or
xor
xchg
mov
mulb
cwtl
xchg
fsincos
incb
pop
aaa
dec
in
mov
cmp
addr16
and
lcall
dec
push
dec
daa
test
ficomps
shr
repz
or
gs
cwtl
imul
sub
ror
pop
xor
sbb
adc
push
aam
shll
push
imul
adc
xchg
in
imul
es
insl
xchg
outsl
or
mov
or
mull
stos
xchg
lock
in
das
adc
push
divb
mov
orl
ja
aas
leave
mov
mov
aam
sbb
int
aad
mov
mov
insl
sbb
cmp
or
shl
jnp
test
jb
cmp
in
mov
push
cmp
and
test
pushf
scas
push
mov
pop
sbb
mull
enter
pop
popa
lahf
and
dec
fsts
and
mov
pop
outsl
jb
jg
arpl
outsb
data16
ja
rcl
xchg
call
xchg
mov
lods
gs
std
adc
xchg
xchg
out
in
incb
push
ret
psraw
cmp
test
add
cld
clc
or
jp
jmp
jnp
jle
cmp
ljmp
mov
sbb
dec
cli
sbb
sbb
dec
jne
mov
pushf
imul
iret
shlb
aam
sbb
mov
arpl
add
dec
test
xlat
mov
mov
adc
sbb
mov
jle
outsb
jmp
adc
int
mov
or
jecxz
inc
mov
in
add
fs
repz
jmp
repz
pop
adc
xchg
mov
push
push
lock
sarb
sub
ja
push
sbb
shlb
fnstcw
std
or
and
bound
mov
jo
jg
dec
data16
lcall
inc
pop
aad
pop
jecxz
sbb
jae
aam
aam
or
xchg
jg
add
subl
jmp
cs
sbb
cmp
insb
push
cmp
xchg
das
bound
adc
and
test
mov
mov
cld
lods
mov
in
fiadds
cmp
or
mov
push
fmulp
xorb
xchg
cli
mov
mov
sbb
ljmp
rcr
iret
repz
mov
mov
or
mov
jecxz
xchg
and
push
cmpsb
mov
xor
or
clc
das
icebp
adc
jecxz
push
mov
nop
sti
and
or
test
pop
push
int3
xchg
iret
inc
mov
and
inc
sahf
daa
fmuls
mov
add
popa
sub
jno
cmp
jle
out
cltd
cmc
mov
divb
mov
cld
fs
cmp
js
cmp
jmp
lods
xchg
cmp
iret
and
fldt
not
loop
adc
rcr
xor
mov
fs
push
jns
jb
jo
push
mov
stos
mov
mov
stos
push
mov
pop
xor
jbe
or
mov
in
push
pop
repz
adc
arpl
or
sti
dec
adc
xor
xchg
sbb
lahf
pushf
pop
pop
cli
or
sub
stc
jnp
mov
aam
mov
push
mov
mov
scas
sbb
hlt
jae
rolb
sbb
xchg
ficoml
push
or
xchg
imul
push
ret
cmpsb
or
scas
into
pop
rclb
push
sbb
call
mov
jmp
mov
inc
pop
cs
data16
lcall
pop
popf
xor
cli
dec
xchg
lods
pop
jno
mov
in
jl
lcall
cs
mov
popa
and
cmove
ja
push
xor
sbb
push
xorl
ljmp
or
xor
jne
sub
std
cmp
sub
ffreep
movb
and
rcrb
jno
lcall
leave
and
pop
ja
jae
nop
icebp
dec
enter
test
sub
lahf
or
or
mov
push
inc
outsb
lcall
pop
out
xor
ss
bound
push
mov
mov
sbb
int3
dec
add
pusha
push
push
jmp
cli
loopne
push
in
mov
fstps
mov
lret
jmp
ret
aam
daa
cwtl
sbb
mov
or
test
pop
movsl
adc
cmp
stos
iret
sub
inc
aad
xor
ss
jo
sub
mov
mov
arpl
movsl
cmp
mov
add
popf
cwtl
test
sub
lcall
push
testb
btc
test
dec
xchg
cmp
dec
and
rclb
mov
mov
in
scas
xchg
xor
xor
jl
push
cwtl
and
fdivrl
push
and
jae
mov
lret
push
sti
dec
pop
fadds
inc
and
psubb
aad
xor
pop
dec
dec
stc
dec
pop
xchg
inc
mov
pop
or
rcrb
arpl
imul
adc
andl
imul
ja
js
mov
dec
cmp
inc
push
mov
push
daa
or
or
cld
fiaddl
mov
add
jne
dec
rcrl
xchg
insl
mov
repnz
call
mulps
mov
pop
ss
lods
or
jne
adc
xchg
mov
ret
mov
add
dec
int
cwtl
insb
lods
pop
sub
mov
mov
fsubrs
mov
nop
xchg
jle
mov
jb
imul
mov
pop
jns
outsb
inc
pop
push
inc
lret
clc
push
or
shrb
mov
and
jne
adc
iret
xor
rcrb
add
mov
xor
jp
scas
fldcw
add
movb
pushf
jns
jge
push
ret
iret
mov
mov
callw
sub
testb
loope
stos
sub
xlat
cmp
pop
add
ret
cmp
or
lds
jmp
push
or
ret
imul
xchg
addr16
scas
loope
pop
sub
cltd
pop
test
negb
popa
test
xlat
int
xor
jb
dec
dec
pop
test
cmp
dec
jp
or
shlb
or
and
mov
dec
and
js
jmp
mov
loope
cmpsb
add
aad
inc
dec
jo
push
repnz
aas
and
pop
fisubrs
adc
sub
ds
pushf
lcall
shrb
es
and
mov
ss
cmp
repnz
pop
dec
stos
mov
enter
add
sub
or
pop
iret
add
clc
ljmp
xchg
inc
mov
or
in
push
add
mov
lods
rorl
jge
stos
xor
xor
and
inc
out
add
dec
jb
push
xchg
out
lret
fimuls
lods
or
mov
das
push
cmpsl
jbe
int
lahf
in
push
pop
lahf
leave
or
mov
dec
out
sbb
stos
aad
cmpsb
mov
add
cltd
loopne
mov
imul
adc
lds
xchg
lds
sub
enter
inc
mov
mov
mov
dec
inc
loopne
dec
mov
mov
or
iret
test
push
lods
jb
dec
in
mov
bound
pop
sbb
push
inc
xchg
pop
test
lcall
orl
push
lods
jbe
mov
pop
mov
fwait
jecxz
pop
aam
test
jle
scas
inc
xchg
sbb
sahf
outsl
push
incl
imul
nop
nop
xchg
sbb
jb
pop
sbb
mov
mov
stos
lods
in
mov
in
jp
out
mov
cmpb
gs
or
in
pop
addl
out
push
daa
mov
mov
xchg
not
add
jbe
pop
xchg
scas
or
xchg
sub
jae
xchg
inc
fdiv
dec
addb
scas
sbb
int
or
push
or
push
negb
dec
jl
insl
inc
mov
mov
jnp
sarl
jne
dec
stc
cltd
sbb
popa
fldpi
scas
xor
add
cld
and
xor
rol
fadd
frstor
out
or
mov
je
incl
mov
push
test
dec
lcall
push
sub
and
enter
cmc
push
mov
shrb
jp
dec
lret
jecxz
xchg
outsl
inc
or
fisubrl
adc
out
out
pop
outsb
outsl
in
imul
mov
lret
xor
fsubs
outsl
jae
ret
mov
push
inc
dec
pop
ret
mov
lods
pop
test
and
push
cli
jns
fucom
pop
mov
mov
fucompp
xchg
cld
insl
pop
es
cltd
addl
clc
and
dec
mov
push
adc
adc
gs
inc
pop
sub
call
aam
rclb
or
fsubs
pop
repnz
jne
inc
dec
inc
push
fisttpl
sub
push
rolb
rol
rcll
test
mov
das
add
push
mov
sub
repnz
out
adc
mov
cmpsb
jb,pt
xchg
mov
pushl
adc
cs
sarb
jg
mov
cmc
mov
mov
cmpsb
out
sbb
and
insb
test
mov
dec
lock
lea
xchg
out
movsl
mov
or
or
outsb
ds
aaa
add
js
xor
inc
xor
jb
pop
pop
arpl
js
pop
push
test
lahf
outsb
xchg
push
add
adc
ret
bound
fwait
rcrl
sbb
jbe
in
dec
rcrb
dec
push
cwtl
sbb
out
stos
cmp
and
jg
xor
cld
sbb
mov
xchg
dec
out
add
pop
shrl
pushf
inc
cmp
shrb
xchg
pop
add
mov
scas
jne
jp
stc
mull
xorl
push
add
ror
aas
cli
pop
xchg
pop
push
ljmp
clc
mov
pop
lods
mov
xor
mov
jp
or
orb
adc
imull
push
jnp
in
stos
mov
cltd
aaa
mov
popf
mov
xchg
fbstp
push
jge
fistpl
xchg
xchg
in
daa
scas
jae
xchg
jp
adc
cmp
mov
lods
pop
dec
hlt
push
pop
fcmovne
inc
and
fldenv
push
arpl
mov
gs
sub
jb
lahf
ret
mov
sub
pop
inc
mov
pop
sub
push
pop
adc
movsl
jb
dec
dec
dec
inc
fimuls
lcall
sub
jl
adcb
mov
pusha
mov
or
mov
push
xchg
jno
push
ja
mov
sub
jmp
push
lods
sbb
push
push
mov
cmp
sub
mov
dec
or
loope
fistps
jp
and
xchg
add
fiaddl
pop
mov
mov
and
cld
lcall
sbb
cmpsl
inc
cmp
idivl
pop
mov
jge
enter
dec
mov
outsl
sub
sbb
xor
and
adc
dec
and
arpl
xor
mov
jle
stos
xor
dec
pop
pop
pushf
cmp
push
push
lahf
pop
leave
insl
cmp
xlat
push
jne
jbe
xor
orl
test
push
cmp
fstpt
inc
push
dec
sbb
movsb
adc
jne
out
nop
pop
mov
sbb
add
dec
inc
movsb
frndint
jp
stc
enter
scas
cld
push
dec
and
xor
pop
mov
jmp
or
inc
leave
xor
push
shll
loopne
jo
push
mov
sar
push
mov
arpl
ss
dec
cmpsl
es
xchg
jle
pop
sti
ror
sbb
pop
repnz
int
mov
pop
dec
jns
loop
mov
adc
mov
aaa
shr
enter
cli
dec
imul
fadds
fsubrs
cmpsb
xchg
or
leave
hlt
lahf
adc
fisttps
repnz
cli
xchg
fildll
mov
dec
xor
pop
add
mov
mov
iret
adc
imul
insb
je
fistps
cmpsl
push
xor
mov
sbb
cwtl
mov
jno
jg
and
pushf
jge
pop
loopne
pop
notb
push
idivl
inc
or
clc
push
pushf
or
fdiv
jl
gs
pop
xchg
int3
lahf
push
jb
jo
mov
ja
scas
cwtl
mov
xor
fdivl
add
add
cmp
scas
jmp
imul
aas
sahf
gs
cs
daa
mov
movsl
push
xor
inc
ja
out
cmp
pop
sub
xchg
or
mov
cltd
add
js
pop
mov
cmp
pop
xchg
sub
jecxz
inc
jg
cmp
js
insl
stos
sub
jbe
ja
out
jl
ficompl
ret
cmpb
test
jl
lret
add
mov
jae
jns
es
and
inc
add
adc
pop
and
xor
jno
rcll
xchg
and
pop
xchg
jne
mov
xchg
rolb
push
sub
stc
into
imul
daa
fildl
mov
fidivrs
sub
jne
iret
into
shl
imul
xchg
data16
mov
mov
cli
xchg
xchg
jg
mov
inc
mov
sbb
shr
das
in
in
mov
and
iret
lea
adc
xor
shlb
arpl
sbb
fcomi
fwait
jmp
shll
call
pop
pop
xchg
arpl
das
jae
sarl
jbe
xchg
jg
add
pop
scas
mov
adc
gs
pop
adc
clc
lret
and
js
hlt
mov
imul
xor
sahf
stos
cs
movsl
imul
mov
mov
mov
jbe
lret
inc
cmp
out
and
mov
stos
xchg
ljmp
adc
insl
push
dec
sub
daa
mov
mov
roll
lret
mov
or
push
loope
ret
add
push
fisttpl
mov
adc
test
je
in
je
sub
lods
dec
or
cld
and
clc
decl
rorl
es
mov
dec
mov
pop
mov
lret
aas
jmp
add
insb
insb
jmp
popf
pushf
fcmovnu
push
cltd
or
rorb
inc
pusha
add
dec
shl
ja
loopne
inc
xchg
icebp
cmpb
or
out
enter
cmp
cmp
push
and
loopne
push
test
pop
ds
add
loop
dec
or
js
jbe
lods
fisttpl
lret
jno
fcomp
cmp
cmpsb
test
addl
cmc
out
nop
push
arpl
dec
lcall
mov
pop
loop
outsl
jmp
rol
mov
adc
lea
scas
adc
clc
pushf
arpl
add
imul
xchg
fstpl
fcom
jl
inc
or
jmp
inc
js
adc
push
jb
in
add
or
inc
into
mov
push
ficoml
cmp
mov
cmpsb
xor
ja
xorps
adc
cmp
jno
ret
sub
rclb
cld
out
in
icebp
int3
sbb
ret
sub
into
stos
xor
mov
ret
lahf
out
aaa
push
or
xor
or
out
sahf
test
and
out
xchg
sbb
mov
fsts
xchg
xchg
loope
je
xchg
repnz
dec
cmp
xchg
mov
pop
push
xor
hlt
addr16
pop
dec
or
or
pop
out
pop
sub
cld
fcompl
xchg
push
cmc
fwait
mov
rolb
and
and
pushf
sub
pop
cmpsl
mov
or
dec
push
imul
cltd
std
cmp
std
mov
lea
xchg
pop
pop
adc
fyl2xp1
pop
fwait
xor
mov
and
add
xor
push
mulb
or
test
call
gs
push
in
pop
sub
pop
in
xchg
inc
cmp
add
dec
or
and
or
cmp
mov
mov
mov
lods
mov
insl
or
xor
xor
test
aad
push
push
loopne
xor
or
popa
inc
adc
loop
ja
dec
rorb
int
push
lds
jmp
jno
cs
arpl
xchg
xchg
dec
jne
adc
gs
pop
fwait
cmp
addb
sbb
repz
push
pop
adc
rolb
adc
push
cld
push
or
adc
and
jp
mov
jp
idiv
loope
adc
scas
mov
add
sbb
sub
in
sbb
jg
rcrb
add
into
js
sbb
mov
fisubrl
jns
dec
lds
iret
push
mov
mov
leave
and
popa
aaa
lea
jl
adcl
lds
imul
inc
notl
pop
push
pop
je,pn
adc
dec
insb
jno
xor
adc
jl
inc
sub
test
push
aas
bound
cwtl
call
add
push
loope
lds
sub
xor
sahf
dec
rclb
ja
insl
insb
imul
ss
ljmp
dec
aaa
sbb
mov
pop
sti
pop
stos
sub
jge
or
sbb
pop
dec
and
pop
imul
in
pop
fs
lods
repnz
sub
sahf
test
add
insl
or
cmpsl
push
setno
test
leave
rcrl
push
in
fsubs
push
dec
mov
shll
xchg
lock
out
int
aaa
test
lret
scas
or
cwtl
add
lret
arpl
add
jl
jb,pt
or
dec
xlat
mov
gs
int3
shl
lahf
or
rcll
sub
ret
ret
pop
popa
cmp
outsl
iret
pop
mov
lret
test
imul
sahf
mov
xchg
and
arpl
cmp
cmc
mov
inc
xchg
in
inc
pop
rcl
cmp
outsl
sub
scas
dec
pushf
push
out
jl
inc
lock
cmp
xor
aaa
aad
loop
xor
sbb
xchg
push
pop
sahf
adcl
js
test
pop
mov
pop
jae
push
lcall
test
mov
inc
and
pop
mov
xor
jmp
insl
xor
xchg
and
outsb
lods
mov
lret
add
push
xchg
enter
cmp
cmpsl
or
add
out
pop
jmp
xorb
lods
xchg
in
dec
pop
pop
imul
mov
sbb
dec
or
adc
dec
repnz
xor
jo
and
addr16
daa
or
std
pop
xchg
cs
ljmp
aas
shrl
mov
sub
mov
daa
and
dec
incb
aam
jle
rcrl
sbbl
in
push
and
add
call
repnz
icebp
cmc
mov
cmp
cmp
mov
ret
insl
pop
mov
inc
int3
push
jle
hlt
popf
mov
push
xor
sbb
push
into
fidivrl
cmp
leave
aam
cmpsb
dec
mov
or
sub
shll
ja
movsl
mov
rorl
lds
or
std
push
inc
loop
movsl
push
mov
inc
test
jecxz
stos
rcl
dec
mov
testb
loop
jmp
popa
adc
mov
mov
iret
mov
sbb
je
cli
xor
repnz
insl
push
sbb
in
push
mov
int3
in
dec
adc
push
dec
shll
lea
dec
lea
push
or
ds
daa
mov
and
dec
addr16
test
cli
adc
jae
insl
stos
test
outsb
fucomi
pop
dec
and
das
mov
cmpsl
test
cwtl
mov
stos
push
bound
mov
fistpll
jge
xor
repz
inc
pop
dec
jne
pop
ret
das
sub
mov
dec
in
pop
jae
fistl
call
into
inc
dec
dec
enter
pusha
js
mov
jmp
lret
shlb
movsb
arpl
cwtl
inc
jno
sbb
decl
adc
push
inc
aam
and
rcrb
xor
mov
mov
sbb
in
xchg
xchg
pop
fcom
jno
sbb
inc
and
sbb
mov
dec
push
jae
js
std
or
dec
add
push
lock
mov
cli
sub
xorb
push
dec
mov
in
jns
insb
sub
mov
cmp
fwait
inc
ret
xchg
jns
lods
in
rol
mov
or
repz
pop
dec
fldenv
xor
rcrb
in
push
in
sub
fldpi
rcll
mov
mov
je
into
jbe
jns
nop
pop
push
add
sub
add
into
cmp
test
pop
jle
xchg
clc
bound
xor
notl
xor
mov
adc
ret
push
xor
into
or
pop
fwait
mov
adc
in
push
jnp
nop
push
cmp
test
or
mov
sub
pop
mov
loope
jae
sti
push
jno
enter
xor
pushf
sbb
mov
dec
lods
xor
shlb
insl
cld
loop
mov
inc
jbe
lds
xlat
mov
sti
jecxz
fidivrl
jge
jae
jmp
loopne
inc
loope
mov
mov
divl
cmp
ss
add
lea
je
insl
xlat
push
in
and
lods
push
fcomps
sub
adc
jp
in
adc
test
jge
push
cmp
sbb
push
nop
add
sub
decl
shll
mov
pop
adc
push
movsl
jp
or
enter
aaa
pusha
iret
lcall
stos
cmpsb
out
ret
cmp
xchg
mov
xor
or
testb
lods
jbe
add
or
jp
jne
in
push
mov
les
ret
and
pop
movsl
mov
jg
hlt
inc
hlt
xchg
mov
data16
adc
leave
iret
inc
in
aad
aam
mov
xor
ss
dec
insl
iret
aam
lods
div
xchg
push
push
inc
cmp
scas
inc
mov
js
hlt
cli
push
add
cmp
xchg
adc
enter
cmpsb
add
sti
mov
pop
pop
pop
inc
mov
rol
mov
pop
iret
int3
adc
adc
pop
ds
xlat
dec
test
jae
cld
xchg
lahf
jno
out
xor
es
push
inc
cmp
test
push
cmpsl
adc
inc
ficoml
dec
or
loop
jecxz
lock
cmp
es
push
adc
orb
xor
sbbb
push
cmp
add
in
out
decb
pop
imul
fidivrs
add
inc
in
test
sub
sbb
adc
mov
call
dec
sti
aad
jb
clc
sub
popa
cld
mov
cwtl
pop
inc
and
xor
lods
sub
pop
stos
stos
es
mov
inc
cmp
lret
outsb
sub
or
leave
sbb
xchg
icebp
loope
test
or
cmpsl
xor
fdivs
pop
xor
sahf
pop
lcall
insb
inc
adc
gs
jne
enter
mov
mov
sbb
icebp
and
sbb
pop
adc
ja
jle
cwtl
and
int
lds
ret
es
sub
adc
sbb
adc
sti
loop
cmp
xor
clc
cmp
popa
clc
pushf
leave
fdiv
aaa
mov
push
out
jl
push
aad
std
jg
clc
and
bound
mov
mov
and
cmp
pop
mov
imul
pop
inc
mov
iret
stos
jns
lock
scas
xchg
mov
cvttps2pi
xchg
lahf
jne
out
lods
sub
popf
nop
pop
aad
mov
pop
pusha
mov
jl
push
adc
pop
push
scas
pop
movsl
mov
enter
cmp
inc
cmc
icebp
fcoml
xor
clc
lods
mov
inc
mov
jl
cltd
fimuls
and
cmp
scas
jg
jmp
inc
ret
lahf
dec
stos
xor
push
push
xchg
lods
loop
mov
sub
jp
dec
jg
int
pop
fnstcw
gs
addr16
jecxz
je
cmpb
out
mov
cmpsl
cmpb
pop
jbe
dec
fs
sbb
lods
ficoml
pop
scas
or
ja
or
cltd
popf
imul
and
mov
das
sbb
xor
nop
sub
push
icebp
lods
cld
adc
out
movsb
ja
mov
imul
and
or
orl
inc
loop
gs
arpl
fidivs
dec
sub
sbb
rclb
add
rcr
lods
out
add
or
repnz
scas
adc
pop
sub
scas
jnp
mov
push
outsb
scas
imul
pop
mov
decb
dec
mov
mov
outsl
testl
pop
sub
int
push
or
jbe
cltd
das
fldt
mov
push
in
lret
and
mov
pop
xchg
sbb
and
pop
mov
lods
enter
scas
push
aas
mov
pop
leave
sbb
into
mov
ret
inc
sub
aas
and
inc
and
movsb
sbb
push
enter
pop
sbb
shrb
xor
bt
and
add
add
mov
cmp
sarb
jle
rorl
mov
xchg
call
xor
vprotd
sbb
lods
mov
in
jne
enter
adcl
pop
and
push
bound
adc
add
je
int3
xlat
lcall
push
lds
mov
sub
jg
lds
xor
imul
or
int
xchg
or
aad
shll
mov
adc
iret
rcl
inc
sbb
fmull
outsl
adc
push
push
xchg
out
out
mov
ret
cmp
or
addr16
lea
mov
sub
movswl
lock
test
push
add
and
in
mov
stc
test
sub
jb
lahf
leave
es
jnp
lret
in
pop
fcoml
xchg
inc
pop
gs
fs
inc
test
out
mov
sbb
repz
cltd
dec
sub
ds
lods
jl
test
hlt
jmp
xchg
or
cmp
jns
dec
sar
icebp
aam
xchg
repz
jae
mov
mov
fxam
or
bound
movsb
sub
and
fwait
jne
sti
jb
pop
stc
or
push
adc
cltd
jecxz
push
negl
sub
jne
popa
gs
push
fsubrs
mov
add
int3
cmp
gs
or
cwtl
leave
testl
filds
xchg
lods
and
sbb
adc
sahf
sbb
add
jg
adc
fistl
lcall
add
out
sbb
cmp
cmp
arpl
loope
call
into
and
add
push
inc
and
push
rcr
mov
pop
xchg
mov
xchg
sub
shlb
pop
nop
insl
in
stc
add
pop
in
testb
sub
inc
sub
jmp
xchg
shrl
imul
mov
push
ror
sub
test
jl
aam
dec
insb
ret
je
dec
and
rol
push
loopne
je
je
sbb
rorl
shr
adc
data16
cmpsb
inc
lods
mov
rorl
aad
icebp
mov
jo
es
daa
xchg
mov
sbb
xor
mov
sub
sub
xchg
aaa
sbb
int
sub
sbb
add
shlb
jbe
push
bnd
sbb
mov
jp
sub
in
mov
loop
pop
dec
dec
inc
or
dec
inc
jae
icebp
sub
xor
sub
jbe
aad
mov
mov
mov
sbb
cmpsl
or
mov
scas
popa
int3
sbb
lds
mov
dec
add
xchg
fwait
or
insb
or
jp
mov
iret
fidivrl
inc
pop
ljmp
sbb
dec
or
leave
pop
dec
int
repz
and
lret
mov
xlat
pop
jp
lahf
ret
aam
daa
data16
add
data16
imul
inc
adc
push
adc
sti
insb
loop
test
dec
call
jno
rcl
xor
push
out
jle
add
std
pop
and
in
ljmp
repz
and
xchg
int3
lret
popa
mov
and
ja
xchg
push
lcall
shrb
repnz
cwtl
daa
pop
nop
or
jbe
fs
pusha
pop
add
data16
mov
sahf
mov
sarb
xor
dec
xor
xchg
lahf
out
sub
jl
jl
pop
cmp
xchg
pop
jns
scas
insl
aam
imul
nop
pop
sub
fmuls
lret
add
jle
cmp
arpl
xor
and
lods
push
pushf
push
daa
lds
or
clc
scas
sub
add
mov
sbb
dec
mov
pop
lahf
sbb
cmp
hlt
popf
xor
int3
and
sar
inc
push
int3
xor
mov
mov
or
jae
lods
or
repnz
inc
xor
dec
mov
adc
insb
cmp
mov
sub
clc
xchg
xor
enter
into
ds
cltd
cmpsb
jae
inc
and
xchg
add
sub
pop
flds
int
dec
dec
add
loopw
sub
scas
mov
push
jb
mov
xor
idivl
mull
jp
push
je
and
imull
cmp
jne
pop
dec
push
test
and
pop
loopne
push
push
mov
incb
mov
inc
inc
sbb
push
fldenv
mov
lret
iret
aam
adc
mov
fwait
rorb
push
int
add
inc
adc
in
inc
cmpb
add
cmp
mov
and
pop
sar
cmpsl
in
adc
addb
mov
mov
int3
jae
or
ljmp
mov
adc
mov
mov
es
adc
mov
daa
add
outsb
jns
test
js
pop
mov
xor
xor
mov
fiaddl
fcoml
fwait
hlt
xor
mov
or
imul
aaa
dec
and
int3
mov
aas
std
push
pop
jl
jle
std
jb
jge
shrl
call
rolb
pop
mov
add
jb
adcb
popa
pushf
lods
shl
xor
cmpb
sbb
mov
dec
sub
ret
pop
push
push
scas
inc
test
shll
push
movsl
or
fwait
pop
pop
clc
jo
push
or
sti
and
cltd
test
pop
mov
mov
xor
mov
mov
mov
decb
add
mov
jae
push
lock
jmp
mov
repz
popf
adc
scas
orl
cmp
xchg
xchg
mov
test
clc
lds
scas
sub
ffree
icebp
fsubrs
xchg
adc
ljmp
ret
movsl
dec
dec
jecxz
ljmp
jge
fwait
inc
inc
jmp
ret
test
loope
dec
mov
out
shrl
mov
inc
jae
imul
into
out
adc
pop
jbe
mov
sbbl
push
pop
cmp
push
push
dec
add
push
cwtl
popf
inc
lods
mov
pusha
xor
sub
mov
cmp
stos
cli
add
push
pop
aad
pop
xchg
pop
rclb
repnz
notb
cld
sbb
lcall
out
test
sub
int3
addr16
mov
mov
dec
out
stos
iret
xor
rcrb
cmp
xorb
mov
push
rcrb
mov
mov
mov
or
mov
in
loopne
dec
mov
fisubs
and
inc
xlat
fstpt
mov
rcll
loope
in
mov
mov
bound
call
xchg
cltd
sub
aas
jmp
imul
mov
jae
jb
cltd
sarb
xor
push
adc
leave
movsb
clc
xchg
lahf
movsl
inc
fmull
sub
push
mov
les
std
test
pop
addr16
into
hlt
sbb
sub
pop
or
js
es
andl
mov
lcall
cwtl
adc
popa
adc
sbb
and
add
not
add
pop
lea
lea
push
mov
daa
mov
jno
dec
adc
push
sbb
pop
ret
xor
pop
pop
xchg
jne
xor
push
fnstcw
scas
and
shlb
nop
fisubrl
hlt
push
pop
outsb
lahf
fsts
jbe
add
lcall
dec
repz
push
mov
lods
xor
dec
dec
into
mull
jg
mov
mov
push
dec
ljmp
int
stc
or
clc
dec
xchg
mov
jmp
or
and
fs
cltd
shrd
cmp
ds
movsb
in
pop
cmpsb
daa
shll
cmp
add
inc
mov
cs
bound
inc
into
std
push
icebp
or
pop
jns
arpl
subb
cld
pushl
in
pop
dec
enter
jno
dec
adc
popa
test
in
ret
pop
adc
pop
jae
aad
in
insb
xchg
sahf
mov
dec
ret
lea
out
shll
das
jmp
mov
lcall
and
imul
mov
cwtl
push
mov
cmpsb
into
sbbl
push
xor
insl
push
push
push
push
dec
add
lea
push
jnp
std
mov
or
stc
movsb
sub
lahf
stos
and
shlb
sub
insl
mov
pop
dec
adc
add
add
xor
or
push
jne
fildll
or
cmp
clc
xchg
lcall
sbb
out
cli
fsubl
lcall
sub
ud0
pop
sub
imul
fwait
insl
sub
jl
dec
les
data16
mov
cmp
outsb
ljmp
repnz
inc
and
icebp
pop
cmpsl
xor
lret
es
mov
out
or
jbe
dec
jp
jp
aas
jbe
sbb
out
fadds
hlt
insb
mov
std
adc
or
pop
push
or
sti
xor
cltd
lcall
bound
in
xor
call
popf
cmp
add
leave
cmp
inc
ret
arpl
jnp
sub
xchg
cld
fisttpl
dec
adc
shrb
decl
stos
inc
mov
xor
test
stc
adc
inc
xchg
rcrb
in
aaa
aas
test
dec
ja
fs
cmp
dec
mov
out
lods
xlat
dec
lods
cmpsb
stc
push
or
cltd
inc
or
adc
hlt
mov
sub
movsl
icebp
ja
les
int3
insl
in
pop
movsl
inc
in
jno
cltd
add
lcall
out
mov
lcall
fisubs
jne
iret
xchg
call
scas
push
pop
bswap
scas
mov
sbb
arpl
lret
jae
mov
push
jns
lcall
repz
fists
test
xchg
pop
xchg
xchg
ret
push
mov
iret
mov
pop
into
icebp
loope
leave
popf
aam
xlat
jno
popf
rcl
xchg
add
test
adc
pop
in
loope
push
outsb
push
cmpl
sbbl
call
pop
sub
test
scas
mov
outsl
adc
jecxz
fidivs
dec
sbb
ss
adc
xchg
lahf
xor
inc
sub
push
inc
mov
and
subl
sbbl
or
xchg
mov
ret
cmp
rorl
dec
mov
jg
pop
xchg
icebp
pop
nop
mov
test
lahf
pop
sbb
in
jne
outsb
xor
adc
lret
lcall
imulb
mov
sbb
loopne
cmp
je
jle
addr16
cmc
aam
inc
xorl
mov
sbb
icebp
stos
jecxz
xchg
sti
and
rorb
mov
rcrl
pop
sbb
and
movsb
sti
dec
push
pop
add
ss
sti
rol
cli
pop
out
sysret
sub
jg
sub
adc
or
daa
xchg
push
jl
les
enter
jb
xchg
mov
adcb
pop
ja
das
or
into
dec
or
ja
fildl
cmp
sti
xchg
clc
imul
stos
or
mov
adcb
cmp
mov
out
mov
xor
int
aam
cmp
pusha
mov
push
les
adc
pop
mov
movsl
pop
out
in
andl
adc
mov
and
jg
cli
jb
test
xchg
popa
or
xorb
mov
inc
je
add
icebp
repz
out
outsl
je
rorl
cltd
mov
subl
sbb
outsl
xchg
test
jae
in
and
scas
inc
pop
lret
or
push
ljmp
mov
sbb
xor
popf
hlt
xor
lcall
mov
add
test
test
add
cmp
jnp
xor
mov
push
xchg
insb
mov
test
ja
cvtpd2ps
jbe
lret
and
js
arpl
loop
dec
mov
jp
xor
jmp
mov
iret
xor
decl
scas
push
stc
das
xchg
xchg
mov
sbb
pop
int3
jle
cs
fsubrl
inc
shrl
clc
sbb
jne
scas
xchg
sub
dec
adc
and
int3
or
mov
dec
shll
cmp
cltd
es
jb
or
sarb
add
pop
stos
xor
std
jae
fwait
mov
add
lea
fadd
fistpll
jge
fdivs
mov
add
push
fdivrl
imul
stos
adc
add
sub
fistps
inc
lahf
shll
inc
cmp
iret
dec
arpl
sub
int
or
enter
jne
fsubrs
mov
ret
subl
push
inc
das
std
mov
push
sahf
sbb
pop
out
and
push
cld
lcall
insb
pop
or
stos
hlt
outsb
les
das
push
bound
dec
xchg
dec
cld
gs
popa
pop
cmp
sub
fnsave
push
loopne
or
jl
stc
ret
push
shlb
add
fidivl
sti
std
mov
xchg
pusha
sbb
jb
or
popa
out
loopne
mov
pop
push
jle
lcall
into
insb
or
push
ret
fs
push
mov
or
lahf
sbb
xchg
js
loop
pop
adc
ja
sbb
xchg
stos
add
jl
sbb
cmp
xor
dec
lahf
cmp
push
orb
imul
lahf
mov
jns
xor
pop
les
mov
rol
mov
stos
hlt
test
adc
rcr
dec
jle
lods
push
loopne
inc
push
push
xor
cwtl
stos
mov
adc
mov
es
cmpsb
jmp
icebp
push
add
aad
sti
jecxz
mov
push
mov
dec
ret
push
pop
movsb
mov
arpl
xchg
and
orb
push
ffreep
scas
fbld
push
jb
ret
mov
push
cmp
jno
push
or
xor
insb
pop
pop
cmp
ss
mov
mov
out
xchg
add
push
repnz
sbb
adc
aas
sbb
push
int3
inc
jno
jns
je
mov
mov
xor
and
mov
repz
xlat
inc
adc
or
loope
push
out
inc
in
shll
push
iret
or
sbb
dec
mov
in
enter
test
call
jb
lret
aad
jae
xchg
out
adc
mov
jl
fisubs
add
xor
aam
repz
and
pop
cwtl
das
enter
push
inc
lods
and
mov
lock
mov
je
push
inc
or
mov
mul
add
mov
mov
adc
push
mov
nop
stc
push
push
sub
pop
aaa
idivl
insl
and
cmpsb
dec
pop
jne
out
jo
pop
add
xchg
lea
adc
sub
mov
pop
push
enter
imul
rcll
scas
xlat
loopne
dec
mov
stos
arpl
jo
jp
jnp
iret
lret
loope
fstps
jmp
rcrb
and
bound
lods
in
push
inc
sahf
jne
pushf
and
xchg
xor
push
leave
pop
mov
test
cmp
iret
movsb
sub
mov
mov
mov
fnstenv
dec
mov
push
push
fwait
rolb
cmp
xor
pop
imul
and
sarl
int3
pop
adc
push
mov
insl
mov
xchg
fld
sub
loope
dec
jne
fidivrs
mov
push
mov
cmp
cmpsl
and
sub
mov
out
sbb
loopne
or
add
mov
andl
inc
and
mov
xchg
mov
xchg
xor
push
fildll
aaa
sarl
sub
mov
dec
loope
jge
mov
and
mov
movsb
mov
adc
dec
mov
mov
xor
sbb
push
or
inc
xchg
xchg
sub
test
ficoms
mov
jnp
mov
sahf
xor
mov
nop
dec
pusha
pop
mov
fwait
lret
lret
cltd
arpl
call
aaa
mov
sbb
cli
push
jg
das
pop
in
lea
pop
pop
in
xor
outsb
xchg
inc
pushl
sub
cld
xor
cli
sahf
data16
mov
mov
inc
scas
divl
sarb
xchg
mov
fidivl
xlat
jbe
cltd
loope
sbb
sarl
fstl
pusha
push
adc
aas
test
stc
add
jle
push
xor
shrl
xchg
outsl
inc
enter
mov
jb
pop
or
pushf
lret
mov
sbb
aad
jns
cltd
int3
dec
stos
mov
shlb
jns
out
cwtl
mov
sub
dec
fwait
scas
xchg
push
pop
ss
push
lods
xchg
push
xor
sub
mov
and
sahf
add
pop
xor
jns
iret
jg
aam
or
rcrl
push
dec
sbb
testl
and
mov
sub
adc
xchg
pop
icebp
pop
cwtl
cmp
inc
pop
into
dec
jp
stos
ret
mov
shlb
dec
inc
lods
cli
push
jno
lds
jb
pusha
inc
xor
popf
sub
mov
jge
inc
pop
cmpsl
xlat
jecxz
insb
pop
enter
jl
nop
cmp
clc
jge
pop
add
out
das
xlat
mov
xchg
jle
mov
push
inc
xchg
je
add
fnclex
push
cmc
xchg
cmp
imul
test
jg
test
jnp
shll
stos
xlat
inc
xlat
and
into
sahf
out
and
cmp
mov
ljmp
adc
lods
sti
mov
mov
nop
mov
mov
cmpsb
xchg
mov
add
ja
shrb
dec
and
hlt
sahf
xchg
fcmovnbe
adc
in
rcl
jbe
mov
mov
decb
sub
pusha
addr16
push
xorl
cmp
sbb
daa
xchg
and
xchg
and
and
mov
mov
faddl
ret
aaa
mov
bound
pop
lcall
cmp
test
sub
jecxz
mov
mov
lods
mov
andb
cmp
jmp
sub
ljmp
leave
push
adc
lret
pop
pop
enter
jns
jecxz
jge
cmp
aas
das
add
cmpsl
pushf
dec
out
jmp
push
xchg
aad
mov
imul
pop
jmp
sub
scas
mov
aaa
push
repz
mov
pusha
int
lahf
cmpsb
aaa
dec
mov
movsb
lcall
insl
cli
pushf
mov
jmp
ror
loopne
sbb
fnsave
adcb
decl
out
sti
xchg
jmp
mov
sbb
pop
and
sbb
in
jl
mov
ret
xchg
rcll
ror
push
lea
popf
jle
pop
mov
mov
inc
negb
sahf
scas
jp
ds
bound
fists
or
or
cmpsb
je
cmc
cmp
xchg
sbb
or
and
mov
xor
push
jecxz
jp
stos
pop
xchg
or
das
push
push
stos
sarl
mov
std
cmp
cmp
shufps
inc
and
and
mov
mov
mov
xor
pop
dec
push
xlat
ja
imul
fcoml
mov
stc
lcall
insl
in
js
jbe
jb
mov
rcrb
int
dec
jno
das
pop
push
cmp
pop
jb
inc
aaa
pop
mov
mov
gs
addl
int
out
push
out
rcr
call
rorb
aam
cmc
pop
jmp
cmp
fsts
ret
pop
adc
mov
inc
ret
outsl
jo
add
pop
imul
xchg
fwait
outsb
pop
mov
inc
sub
out
outsl
mov
dec
insb
cmp
push
pop
mov
out
jns
std
loop
inc
sbb
mov
adc
popa
jecxz
dec
fnstcw
fxch
lods
test
mov
pop
jge
int3
arpl
out
push
dec
out
inc
cmp
mov
mov
cltd
jp
clc
imul
add
loop
mov
sub
xchg
in
sbb
pop
xchg
lcall
push
xlat
and
or
into
imul
adc
jo
inc
mov
dec
faddl
add
xor
stc
mov
mov
jmp
jnp
pusha
mov
push
shrb
push
arpl
mov
addl
or
sti
sub
jge
sub
loope
cmp
mov
push
shll
or
dec
jne
cmp
or
sahf
rorb
sbb
retw
mov
cli
divb
cwtl
inc
js
ljmp
xchg
sub
jns
shlb
jne
jno
push
jl
pop
insb
into
dec
lea
test
in
mov
inc
xor
icebp
test
mulb
imul
push
jmp
shlb
sbbb
push
loop
idivb
and
mov
cmp
xchg
and
out
insb
sub
push
fdivl
sub
jne
xlat
andl
cmc
imul
ret
xor
lds
mov
outsl
out
sub
imul
lods
fcoms
gs
mov
pop
pop
fldl2t
adc
cmpl
jne
je
add
cs
pop
das
and
mov
mov
leave
fisttpll
stos
addl
mov
mov
cld
loopne
fstpt
mov
fsts
lock
xor
aad
jmp
pusha
xchg
rclb
ret
or
mov
sub
lahf
mov
cwtl
insb
xor
imul
and
in
dec
dec
jne
out
jg
addr16
icebp
scas
cld
lret
xor
fdivs
dec
pop
fidivrl
jb
push
inc
and
push
pushw
mov
jecxz
jne
mov
shlb
jge
pushf
xchg
pushl
add
mov
push
xchg
in
pop
popf
sahf
and
incb
mov
shrl
call
sub
cmpsl
ljmp
lock
or
repnz
call
out
or
or
jns
lods
ljmp
test
and
les
test
test
mov
jbe
jmp
xor
cmp
aam
ja
mov
add
mov
and
xlat
or
adc
push
in
roll
aam
push
xchg
dec
sub
fwait
sub
pop
or
push
or
sarb
fnstsw
or
pop
cmp
xchg
or
and
add
data16
mov
xor
fwait
jmp
rcrl
mov
push
xor
push
shll
int3
ret
sbb
pop
sub
mov
jne
sahf
mov
inc
dec
mov
sub
movsl
jmp
rorl
sbb
inc
fs
mov
push
mov
jbe
mov
es
movsb
sbb
repz
and
xchg
dec
mov
jecxz
shl
pop
out
cltd
mov
jp
mov
ja
mov
fs
icebp
mov
data16
xchg
cmpsl
xchg
xchg
ror
push
mov
sbb
jle
sub
push
adc
xor
xchg
addr16
or
psubusb
or
insb
loopne
adc
jp
xchg
lock
jo
daa
mov
add
rolb
pop
push
xor
pushf
mov
data16
pop
clc
jge
stos
jecxz
jg
dec
mov
push
cmpsl
imull
inc
dec
sub
jg
sub
ret
xor
push
xchg
js
lahf
fsubs
mov
xchg
xchg
xor
add
das
sub
push
mov
ret
ret
rolb
inc
or
les
adc
les
shrb
cld
movl
out
hlt
les
cmp
cmp
mov
stos
aaa
and
sar
mov
and
jo
dec
cmc
clc
subb
mov
mov
and
cld
mov
sarb
nop
cld
jo
pop
das
cmp
test
add
popa
cmpsb
cmp
test
or
sub
inc
mov
popa
std
pop
bound
lods
ljmp
cmp
repnz
sbb
rorl
jg
sbb
pushf
and
inc
fdivl
sahf
jne
push
and
dec
pusha
rorb
pop
ret
add
push
cmp
inc
adc
fs
xorb
push
sbb
loop
gs
out
xor
jae
ret
push
pop
dec
in
hlt
cmpsl
push
test
xor
dec
adc
push
les
popf
cmp
gs
js
push
adc
jmp
push
lret
jecxz
mov
pop
xor
lret
mov
daa
jmp
mov
jmp
jp
mov
aaa
lods
je
les
test
pop
mov
fs
movsl
xchg
dec
mov
mov
jge
or
push
fwait
lcall
push
scas
pop
mov
mov
add
sbb
jno
mov
pop
in
filds
mov
addb
cs
mov
xor
cli
mov
dec
std
xchg
push
pop
pop
pop
mov
ljmp
sarb
dec
ja
lcall
popf
js
mov
subl
gs
in
dec
lret
stos
push
ss
push
nop
neg
pop
into
js
cmp
fwait
mov
hlt
or
leave
mov
jle
pop
mov
mov
xchg
repnz
inc
xor
es
sub
repnz
iret
mov
add
clc
gs
lds
leave
cmp
and
cmp
in
sti
out
adc
pop
hlt
jmp
pushf
rcl
jns
adc
and
pop
stos
int3
adc
pop
das
repz
xor
or
arpl
jg
push
pop
push
rcrb
jae
mov
push
fwait
pusha
and
jl
out
pop
rclb
push
mov
xchg
sub
aad
mov
icebp
rcl
std
in
sahf
fidivrl
sbbb
imul
lret
jmp
adc
test
mov
adc
pop
jp
imul
incb
cs
xorb
cmpsl
popf
daa
xchg
lods
int3
fsubs
xor
mov
movsb
sbbl
pusha
repz
lret
lds
insl
dec
push
pusha
shrb
xor
movsb
inc
ljmp
fstpt
loopne
sahf
jne
mov
mov
test
push
sub
xchg
outsb
scas
jnp
data16
nop
mov
rorb
mov
push
adc
leave
movsb
inc
mov
mov
sarl
jae
cmpsl
pop
xor
xchg
or
hlt
hlt
shlb
into
add
inc
and
sub
fwait
pushf
data16
jae
sbb
cmp
insb
fisubl
fsts
jnp
in
xchg
add
in
xchg
jmp
js
sbb
jae
roll
jae
loope
jmp
mov
sub
xchg
xchg
ljmp
jo
test
mov
fsubrl
and
pusha
repz
mov
out
sbb
mov
add
and
dec
repz
pop
mov
movsl
mov
jmp
or
sbb
or
mov
in
pop
scas
jge
lock
or
inc
mov
fadds
insl
pop
jp
mov
ds
pop
pop
cli
call
jl
rcrl
jae
in
jb
jl
jmp
mov
movl
mov
sbb
pop
es
in
sbb
sbb
or
ret
mov
and
ret
scas
pop
int
cmp
imul
mov
push
ror
nop
pop
adc
xor
and
out
repnz
adc
and
xchg
call
loopne
cmp
mov
pop
pop
xor
test
add
inc
roll
jp
mul
dec
dec
sbb
and
push
ljmp
dec
add
mov
sti
ret
mov
jle
hlt
jne
xchg
adc
lods
lahf
inc
rorl
inc
in
inc
dec
xchg
inc
sub
imul
jo
mov
pop
cltd
rcrb
outsl
inc
bound
mov
lods
xchg
jo
sub
sub
lods
outsl
fsubrs
jp
addr16
addr16
jmp
push
mov
xchg
loope
push
push
lret
pop
lock
cmc
sbb
push
in
inc
pop
adcb
xor
jge
jo
sbb
jmp
stos
aam
xchg
jno
lret
mov
insl
fwait
mov
pop
xor
test
fcom
pop
mov
popa
fwait
push
push
ja
leave
mov
fbld
fldenv
shll
lods
or
dec
inc
adcb
lret
mov
in
adc
cltd
ja
mov
out
mov
les
mov
xchg
push
mov
nop
mov
mov
lods
cmp
aam
loopne
and
into
jnp
pushf
inc
sub
hlt
dec
and
loop
fbstp
stos
inc
mov
nop
stos
mov
cmp
dec
cmc
mov
sub
outsb
fstpt
mov
loop
mov
repz
pop
adc
dec
cmp
test
js
clc
mov
out
adc
enter
inc
or
add
rolb
call
jbe
push
xchg
pop
and
pop
call
push
icebp
xor
mov
jecxz
cmpsl
ds
push
insl
testl
sbb
push
int
jno
or
mov
frstor
sub
xchg
fsubr
les
loopne
xchg
and
cmpsl
sub
lahf
in
cbtw
mov
or
xchg
test
jmp
pop
inc
loopne
and
pop
xlat
push
mov
pusha
adc
call
dec
adc
shrl
adc
aam
jae
loope
push
out
or
cmpsl
incl
call
fstps
test
aad
pop
xor
flds
dec
xor
mov
or
test
sar
popa
push
orl
clc
mov
dec
cmc
and
adc
jnp
js
addl
jmp
jae
add
mov
jbe
add
mov
jb
push
stc
cmp
jns
dec
dec
mov
or
mov
and
adc
clc
inc
loopne
add
xchg
jo
mov
insl
aam
sub
push
xchg
mov
call
adc
shrb
addb
out
sub
jb
push
xchg
aam
push
fs
sahf
push
test
sti
sub
xchg
push
addr16
ss
stos
fisubs
push
lcall
jo
lret
mov
mov
push
cmp
mov
sub
cltd
jge
xchg
pop
xorl
lcall
add
pusha
ljmp
adc
insb
loope
xor
ret
push
add
sbb
sbb
repnz
sub
bound
inc
mov
pushf
daa
out
cmpl
push
lea
ds
into
xor
aad
mov
arpl
and
pop
sub
add
cmp
shll
das
mov
je
dec
mov
pop
cmp
mov
mov
sub
mov
fistl
adc
mov
popa
mov
or
lret
cmp
push
lock
xor
dec
inc
add
outsb
sub
sbb
dec
loop
loop
or
imull
lahf
rcl
mov
sub
inc
test
jnp
mov
cmpsb
dec
aad
nop
or
adc
xchg
push
mov
fiaddl
pop
xor
je
mov
dec
or
and
inc
and
mov
sbb
sahf
sbb
in
sub
cmpsl
mov
fstpt
xchg
lods
enter
xchg
repz
les
mov
dec
jmp
lds
std
push
push
pop
xchg
push
jp
in
insb
loopne
or
pop
ret
mov
xchg
call
in
pop
call
cmp
mov
iret
mov
mov
les
cwtl
cmp
test
sub
pushl
pushf
dec
xchg
and
jno
push
xchg
clc
xchg
xchg
pop
pop
or
test
or
popf
movsb
sbb
jle
sti
call
dec
mov
lret
mov
push
test
xchg
pushf
imul
daa
ret
fwait
xchg
sbb
pop
inc
stc
push
ds
sub
pusha
fs
push
mov
loope
push
xlat
repz
pop
push
add
jae
dec
mov
mov
cmc
cmc
negl
out
add
or
nop
xchg
in
nop
adc
jnp
sahf
in
adc
insl
movsb
and
into
adc
dec
out
int3
out
adc
pushf
rcl
out
outsb
mov
test
data16
push
clc
mov
sbb
ss
jmp
ljmp
jae
push
addr16
daa
xchg
je
lahf
in
xchg
mov
push
sub
adc
adc
dec
xchg
mov
shrb
fsub
push
sub
js
test
out
dec
mov
push
sbb
popf
pop
test
pop
pop
pushf
bnd
dec
cld
popf
shr
jne
pop
lock
pop
lret
sbb
cmp
mov
inc
xor
jmp
jg
scas
mov
iret
dec
mov
push
add
stos
inc
mov
loope
pop
std
std
xor
pop
js
mov
out
jl
pusha
pop
sbb
popa
cwtl
cmp
mov
test
stos
pop
mov
test
idivl
sti
nop
scas
mov
mov
inc
mov
sub
cmp
rorl
sub
pop
lea
mov
scas
lret
xorb
inc
andl
mov
and
and
clc
std
fisubrs
xor
dec
cmp
xchg
add
sti
mov
mov
adc
lods
out
dec
fisttps
in
insl
nop
xchg
sti
mov
sbbb
mov
xor
cmp
rol
xorl
add
cld
xchg
andb
jbe
adc
xor
fsubl
pusha
lcall
inc
ficoml
adc
pop
cmp
cmp
xchg
and
push
rclb
inc
sub
repz
xor
cmp
jmp
and
shl
adcl
xchg
int3
pop
jmp
outsl
xor
ret
mov
notb
test
sbb
mov
push
out
sub
jle
jno
test
int
sarb
pop
mov
adc
stos
test
clc
mov
scas
pop
xchg
jne
fimull
lret
fsubrl
xchg
sbb
jo
adc
arpl
mov
ret
je
icebp
nop
push
movsb
inc
scas
mov
and
push
jge
outsl
ficoms
push
pop
jl
stos
xor
and
and
rolb
ds
add
mov
push
add
push
repz
fsts
sub
mov
jmp
in
fabs
adc
xchg
dec
push
push
lcall
stc
ss
daa
push
jb
lret
out
adc
mov
movsl
push
and
mov
and
jg
lcall
pop
xor
xorb
je
mov
jmp
jno
jb
ret
sbb
xor
push
je
xchg
pushf
mov
push
gs
imul
dec
inc
dec
inc
and
push
test
clc
or
adc
sbb
fcoms
test
jmp
dec
in
mov
mov
test
dec
filds
das
mov
lahf
dec
jb
hlt
mov
or
jl
jl
xor
in
xchg
dec
adc
sbb
in
or
jno
imul
sbb
adc
mov
fcompl
es
pusha
jne
pop
dec
je
and
call
shrl
fadds
inc
sub
and
dec
push
mov
daa
mov
movsl
in
dec
inc
inc
shll
xor
dec
dec
fs
sti
fistpll
inc
mov
jl
dec
pop
mov
sbb
lods
dec
mov
sub
pop
cmp
add
jbe
xlat
fstpl
mov
push
mov
xor
mov
mov
push
ljmp
mov
and
lock
inc
mov
mov
cmp
push
xlat
sbb
xchg
insl
jo
cmp
lods
pop
sub
or
fdivs
inc
loop
mov
stos
cmp
es
movl
mov
cmpsb
andb
jae
je
scas
dec
cmpsl
cmp
inc
ja
orl
dec
jle
icebp
jp
and
xchg
push
add
test
and
cltd
call
and
es
push
testl
ret
dec
cld
mov
xchg
sub
rorl
xor
rolb
psubusb
lds
push
dec
push
inc
jne
xor
test
test
out
xchg
mov
pop
pop
or
xchg
xchg
imul
popf
xor
aas
cmp
loopne
push
test
rcrl
popf
in
fprem
xchg
jp
jb
mov
adc
cmp
cmc
shl
jns
mov
xor
std
xchg
push
mov
andl
dec
pop
adc
sub
mov
insb
repnz
in
test
push
ficompl
mov
loop
add
inc
jbe
hlt
loopne
in
push
adc
inc
int
sbb
add
sbb
jnp
add
mov
inc
cmp
sbbb
sub
jg
cwtl
adc
rolb
dec
mov
mov
test
add
pop
xor
inc
fstpl
add
mov
test
cltd
cmp
test
testb
fcomps
jne
inc
mov
jns
and
sub
movsl
adc
sbb
adc
and
adc
xor
out
sbb
jne
push
aam
scas
pop
cmp
adc
jmpw
xor
addb
cmpsb
cmp
and
or
sbb
stc
enter
pop
dec
xchg
jne
dec
rcrb
pop
pop
lcall
imul
iret
addr16
cld
in
xor
add
in
lock
inc
ret
xchg
nop
or
mov
lret
repnz
push
inc
cmp
aam
mov
push
das
cwtl
jnp
xor
push
dec
ja
popa
es
pop
and
subb
xchg
ljmp
cmp
ficoms
mov
dec
dec
push
std
mov
push
dec
push
cmp
outsb
cli
popf
aam
insb
pop
aam
gs
jecxz
jle
mov
add
int3
mov
mov
add
jbe
jo
mov
arpl
or
int
dec
adc
push
popa
dec
imul
ret
flds
sbbb
mov
leave
aaa
in
jle
pcmpeqw
inc
dec
dec
mov
lret
push
scas
in
cmp
shl
bound
stos
ret
popf
call
mov
dec
std
rorb
aad
cmp
mov
jne
ljmp
repz
and
mov
mov
pop
inc
enter
enter
pushfw
movsl
insl
mov
loope
or
aas
loope
mov
pop
cmp
add
imul
outsb
scas
cwtl
cmp
cmpsl
loopne
push
vmwrite
jl
push
outsb
out
inc
icebp
mov
dec
jae
ljmp
pop
rcr
cs
lock
push
push
xor
cmpsb
xchg
sarb
jl
movsb
jbe
loopne
clc
jbe
lods
sbb
into
les
mov
repnz
cli
lock
call
xchg
xor
out
mov
mov
inc
cltd
push
sti
scas
push
mov
mov
xchg
mov
negl
or
fldl
mov
stc
lods
xsavec
jno
lods
pop
test
push
push
pop
addl
xchg
lret
jmp
push
add
loopne
icebp
or
xlat
cltd
adc
xchg
outsl
xchg
and
xor
jns
jae
aad
aas
cmp
xor
jnp
push
in
and
cwtl
xor
and
or
push
mov
scas
addl
xchg
int
jge
int
jmp
test
mov
js
test
xchg
cltd
ss
fnstsw
cmp
mov
ret
into
cltd
aas
cmp
sub
out
mov
pop
inc
cwtl
test
loope
cs
shll
cli
imul
cli
xlat
add
bound
testl
cmp
test
push
mov
push
or
jmp
shl
lcall
mov
sub
imul
clc
aam
arpl
sbbl
mov
ret
push
inc
mov
xchg
mov
call
lods
daa
shrl
jnp
cmpsl
stos
jge
or
jns
inc
mov
xchg
stc
push
cmp
xadd
mov
stos
xor
clc
or
or
test
stos
fsubrs
sub
xor
cmpb
inc
inc
xor
cmp
repz
in
and
pop
mov
or
push
imul
rclb
loope
and
mov
inc
rdmsr
and
lret
jmp
or
sub
fistps
dec
data16
sbb
aas
xchg
sub
adc
push
cltd
push
in
dec
cmp
pusha
test
xor
fucom
int
pop
inc
jnp
das
inc
push
icebp
and
pop
fldt
cmp
inc
cmp
sbb
shll
mov
xchg
pushfw
mov
pushf
sub
xchg
iret
and
repnz
imul
loop
fdivs
stc
rcrl
jecxz
jbe
jmp
pop
lahf
cmp
js
dec
in
mov
insb
push
adc
push
lds
pop
xor
pop
pusha
or
popf
push
fsubp
push
mov
xchg
rolb
jnp
sti
jle
enter
pop
pop
xor
xchg
adc
fldcw
dec
sahf
sub
cmp
movl
idivl
ss
shll
or
fwait
sbb
loop
lcall
add
test
add
loope
popf
sub
test
stos
xchg
fcomps
jb
and
xchg
pop
fildl
iret
push
jbe
xchg
jnp
stc
cmp
cmpsl
adc
and
movsl
cld
mov
cmp
xchg
gs
addr16
out
mov
mov
cmpsb
mov
arpl
inc
lods
push
push
pop
mov
or
test
std
jmp
adc
adc
mov
adc
loopne
pop
cwtl
scas
xor
iret
js
inc
and
test
cld
out
pop
sub
adcb
push
out
inc
daa
xor
dec
push
pop
std
stos
verr
leave
ja
lea
jae
mov
rep
cmp
pop
or
ret
fcomps
out
adc
xlat
xchg
lret
xor
cmpb
dec
jge
enter
add
ret
imul
xchg
sti
mov
aaa
test
mov
mov
xor
mov
iret
xchg
jge
mov
scas
xchg
dec
inc
mov
sbb
mov
lods
mov
xlat
mov
outsl
pop
aad
sahf
out
xchg
lock
add
add
cmpsl
lcall
or
lcall
pop
jecxz
add
sbb
decb
and
pop
js
push
sbb
jmp
dec
dec
mov
ss
push
leave
int3
jb
imul
dec
pusha
inc
xchg
cmp
mov
test
clc
add
mov
push
jecxz
inc
and
mov
out
pop
imul
push
pop
sub
div
imul
xchg
jne
cmp
cmp
out
test
or
mov
aad
sub
cmpsb
mov
mov
dec
cmpsb
push
cmp
and
repnz
pop
loopne
cmpsl
cmp
mov
mov
lret
scas
or
clc
xchg
aad
add
lret
pop
cmpsl
movsl
lods
push
lds
or
aas
xchg
test
hlt
lds
stos
mov
popf
jnp
arpl
adc
dec
xor
test
out
shll
pop
int3
ror
repz
push
jbe
push
in
das
lcall
cmp
dec
sbb
xor
fnsave
repz
mov
popl
xlat
mov
leave
ffreep
xchg
pop
mov
sub
inc
int3
icebp
sbb
cli
ss
fstenv
mov
lods
sub
mov
pushf
mov
fidivl
mov
stos
sub
jo
mov
mov
xchg
mov
mov
rcl
inc
mov
jae
jne
xchg
and
cmpsl
pop
mov
out
ds
dec
mov
cmp
fsubs
inc
cwtl
sub
and
pop
xchg
inc
sub
and
and
leave
aas
adc
repz
sbb
mov
outsb
mov
sbb
pushf
rorb
rclb
xchg
xchg
popa
and
and
sbb
xchg
inc
jne
sbb
setbe
and
sbb
mov
cs
and
xchg
movsb
movsl
call
out
ljmp
cmp
das
inc
add
sbb
clc
scas
sarl
xchg
add
or
pop
adc
fwait
leave
loopne
call
xchg
icebp
cmc
mov
call
stos
adc
fcomps
je
xorb
in
lock
cld
enter
mov
inc
cld
enter
mov
js
inc
andl
pop
imul
lds
insl
adc
sub
in
stos
loopne
out
clc
call
negb
shl
pop
mov
jle
mov
orps
mov
iret
adc
mov
mov
mov
push
jbe
xlat
stc
addr16
int3
mov
cwtl
mov
cmp
push
ror
in
cmp
mov
lcall
test
iret
pusha
rclb
dec
mov
pop
pop
inc
cli
add
in
loope
jge
pop
fmull
js
mov
leave
adc
dec
loop
hlt
and
jb
jg
push
dec
fimuls
cmp
xor
loope
idiv
push
lds
sub
add
jno
sbb
inc
clc
xchg
xor
cmp
insl
in
shrl
and
xchg
jnp
push
fcompl
out
sar
enter
xchg
sbb
lret
lcall
and
dec
roll
mov
jb
mov
ficomps
mov
mov
ret
cwtl
cmp
cmp
insl
cli
cld
jae
pop
gs
aam
in
jns
mov
adc
scas
lds
daa
sbb
mov
cmp
call
dec
sbb
fdivs
sbb
jb
pop
idivl
mov
lcall
aas
add
xor
lock
adc
xchg
loope
jg
rclb
mov
dec
sahf
dec
adc
das
cwtl
out
lret
cmp
mov
notl
adc
push
xor
call
adcb
mov
push
or
stc
lcall
xchg
cmp
mov
pop
sarl
mov
push
or
dec
std
add
dec
fisttpl
sub
xor
loop
sbb
test
or
jl
xchg
or
xorl
add
ss
dec
enter
mov
in
dec
xchg
push
dec
or
mov
jbe
jmp
fimull
aad
push
dec
push
xchg
sbb
loope
ret
cmpsb
popa
js
clc
pop
xchg
jmp
mov
aaa
aas
lock
cmp
inc
xlat
push
icebp
or
pop
sub
fs
xchg
std
and
xchg
test
mov
add
imul
lock
out
popa
xor
jg
out
mov
or
mov
ret
outsb
iret
shll
cmp
stos
movsb
mov
orb
jbe
adc
cmp
mov
mov
loop
jge
js
cmpb
int
iret
inc
push
ror
inc
out
adc
int3
add
dec
insb
pop
cmp
pop
inc
rcrl
fisubs
pop
faddl
mov
mov
ja
insl
cmp
repnz
and
nop
insb
incb
xchg
xor
jne
add
mov
fs
lret
push
adc
jmp
test
bound
lds
lretw
xchg
push
insl
std
fwait
dec
daa
loope
jae
jbe
ss
mov
shlb
pop
inc
cmpsl
dec
pop
sbb
scas
pop
jb
sub
popa
adc
add
push
sub
pop
int3
sbbb
mov
or
and
xor
dec
test
fadd
jge
mov
add
xor
add
popa
xchg
mov
sahf
test
push
stos
int3
in
pop
or
inc
mov
push
and
adc
in
lea
scas
mov
pop
sbb
decl
pop
sub
cltd
add
xorl
fistps
xlat
lret
pop
lret
inc
mov
aas
addl
xor
jle
adc
cwtl
pop
shll
jecxz
es
sbb
cmp
es
pushf
adc
pmulhuw
aas
inc
dec
cmp
push
js
and
addr16
and
js
jae
and
jle
repnz
pop
and
ja
pusha
adc
les
sbb
jno
xchg
jbe
call
les
out
fs
push
jmp
dec
push
mov
movsl
xor
dec
call
pop
pop
xchg
fstps
rcrl
jne
jge
insb
ret
andl
jg
xchg
jp
in
ljmp
jno
push
gs
in
sub
mov
cmc
jne
js
mull
jecxz
jne
mov
jge
lret
adc
jbe
pop
popf
and
or
xchg
and
popa
dec
sbb
out
or
scas
cmp
stos
pop
mov
cmp
and
aas
xor
push
sahf
outsb
fdivs
xor
fprem
jnp
pop
add
jnp
ficoml
pusha
in
aaa
aad
sbb
out
fidivrl
and
test
int3
mov
int3
ret
lea
mov
push
imul
push
das
and
add
fcompl
ja
inc
pop
or
cmp
cld
sbbl
pop
push
push
lock
jp
jno
insl
push
cmc
or
xchg
sbb
insl
push
cmp
mov
dec
lock
daa
pop
insl
cltd
addr16
inc
enter
jbe
push
cmp
push
adc
test
dec
enter
rcl
jp
mov
nop
mov
roll
out
into
jbe
sub
or
xchg
arpl
ja
sub
xchg
outsb
sahf
adc
ljmp
stos
cltd
xchg
pop
hlt
add
stos
mov
xor
ret
push
cltd
shll
rol
fs
sub
fs
sar
mov
xor
push
push
adc
repz
mov
adc
jmp
inc
in
jns
push
pop
pop
loop
mov
or
popf
xchg
add
cltd
in
push
sub
test
call
cmpsb
push
add
mov
mov
int
sahf
sbb
in
test
into
xchg
bound
push
xchg
sbb
pop
arpl
std
jmp
mov
jo
aas
jp
pusha
sarl
mov
cmovne
shrb
or
enter
fwait
mov
mov
es
pop
mov
jne
scas
mov
js
orb
mov
jl
in
or
addl
lret
es
test
test
std
jecxz
adc
inc
and
push
xchg
test
iret
push
push
rolb
jae
imul
mov
test
pop
mov
rcl
rcr
xor
xor
or
loop
jecxz
mov
daa
mov
jbe
or
push
inc
out
sbb
les
sub
imul
sbb
adc
mov
push
fwait
into
outsb
mov
mov
es
leave
sbb
cwtl
inc
jmp
dec
popa
adc
fstps
stos
xchg
or
orb
jg
test
xchg
or
repz
fcoml
movsl
inc
or
call
ss
je
aam
sahf
or
shrb
les
arpl
repnz
in
insb
cmpl
iret
enter
mov
jge
icebp
hlt
xorb
pop
xlat
sbb
push
aas
negl
mov
adc
ljmp
jle
push
ret
inc
jle
inc
repnz
pop
push
loopne
lods
inc
arpl
not
dec
gs
xchg
divl
jns
adc
shlb
or
mov
in
es
iret
xor
cmp
ja
lahf
insl
test
xchg
xchg
mov
fisubrl
insb
aam
mov
or
xchg
jbe
int
mov
dec
je
push
mov
or
lods
cmp
clc
mov
test
sbb
cmp
int
and
xchg
mov
out
sbb
inc
push
or
fmul
fimuls
pop
adc
nop
adc
addl
aam
push
leave
jnp
xor
push
into
iret
cmp
push
xchg
cs
daa
aad
sub
cmpsl
lea
decb
ja
sbbl
and
clc
inc
icebp
and
sahf
fst
mov
mov
inc
and
xor
daa
mov
jp
push
cmpl
lea
mov
sbb
cwtl
xchg
xchg
movsl
icebp
mov
mov
jge
mov
out
jnp
stos
iret
mov
sbb
xlat
push
imul
pop
in
das
jecxz
aaa
add
jp
in
sahf
push
mov
mov
push
cmpsl
icebp
xor
mov
add
popa
jle
mov
mov
inc
rclb
inc
xchg
ret
bound
and
js
xlat
jb
xchg
jo
test
cmp
xor
jge
mov
dec
xor
xchg
aaa
scas
mov
dec
push
repz
test
inc
adc
pop
fbstp
dec
dec
imulb
iret
nop
mov
lahf
sub
mov
xchg
je
cmp
insb
mov
mov
and
sti
push
xchg
jae
jnp
stos
sub
orl
add
pop
mov
mov
jb
mov
out
xchg
push
test
je
push
jmp
loop
mov
mov
adc
cli
and
inc
pop
dec
cmp
jne
ljmp
mov
cwtl
cmp
jle
cwtl
mov
push
cmc
lods
sbb
xorl
and
push
dec
outsl
xchg
sub
imul
lods
mov
jecxz
out
jmp
and
or
add
fists
xchg
insl
aam
inc
sarb
xchg
jp
fbstp
fdivr
popf
sti
daa
ror
sub
ret
lods
or
imul
cld
push
or
and
das
sti
mov
ret
lahf
ja
or
insl
addb
adc
and
fistps
dec
adc
fistps
or
cmp
lcall
pusha
xchg
test
sub
push
rolb
mov
call
call
push
mov
xchg
sti
dec
cmp
inc
in
popf
fcomps
and
bound
ljmp
and
sub
mov
cltd
mov
xor
xchg
cmp
xchg
fsubrl
pop
aam
inc
add
aas
xchg
arpl
mull
xor
test
and
push
cli
cmp
xor
pushf
test
sub
or
ljmp
mov
pushf
mov
insl
data16
std
call
push
cmp
insb
jg
sbb
xchg
push
in
push
std
push
enter
or
push
cwtl
sbb
xor
sub
dec
or
dec
xchg
mov
not
outsl
aam
sti
push
outsl
adc
test
or
pop
add
dec
dec
push
mov
add
fs
mov
mov
sahf
xor
cld
ljmp
push
mov
jo,pn
pop
pop
pop
mov
iret
fbld
and
xchg
dec
js
dec
mov
or
sbb
lret
pop
mov
mov
sub
and
clc
movsb
cmpsl
ja
jb
and
out
push
push
mov
inc
sbb
out
pop
xor
push
setne
fs
ficoml
mov
sti
sbb
mov
jnp
pop
lds
push
outsb
pop
sbb
mov
orl
push
jl
loopne
add
jo
in
je
scas
pop
xlat
pop
push
pop
mov
andb
jo
scas
test
cli
pop
pushf
jle
fs
dec
stos
cmc
icebp
push
dec
hlt
adcl
cld
push
jmp
push
inc
inc
mov
push
sbb
lret
add
adc
mov
sbb
inc
push
insl
lock
fdivs
lock
xor
cmp
and
jmp
pop
call
sub
pop
fidivrl
std
push
les
push
mov
int3
in
xchg
mov
mov
jge
loop
xchg
into
add
add
cmpsl
push
mov
mov
movsb
int
fdivr
in
aam
xor
sbb
and
adc
lret
in
pinsrw
or
ss
movsb
std
xchg
bound
dec
testl
roll
push
ss
cltd
add
xchg
inc
pop
call
dec
add
xor
sbb
xlat
pop
pop
nop
ljmp
pop
add
mov
pop
mov
leave
pop
sbb
andl
cld
push
sub
mov
mov
mov
or
pusha
mov
mov
cmp
cmp
mov
or
rcrl
cltd
cli
arpl
push
sbb
test
dec
lds
mov
mov
push
push
pop
iret
dec
popf
mov
or
cmpsl
aas
and
sbb
mov
cs
pusha
add
dec
or
bound
add
insb
cmp
add
or
adc
stc
pop
jae
adc
inc
mov
mov
aam
add
jae
dec
sbb
test
mov
and
bound
sub
or
mov
pop
mov
loopne
test
mov
cld
push
rcrl
sbbl
xchg
mov
xchg
cwtl
mov
add
lret
test
das
mov
push
pushf
cmp
xchg
jnp,pt
xchg
or
pop
sub
add
loopne
pop
std
jb
scas
in
rol
sub
mov
imul
push
or
mov
stos
cmp
xchg
jb
xor
test
xchg
rcrb
mov
mov
out
loop
outsb
adc
dec
pop
stc
or
jp
jo
push
nop
dec
cli
daa
test
stos
mov
mov
push
xor
xchg
mov
push
pop
add
xor
mov
movsl
jnp
lahf
das
scas
sub
cltd
sbb
sub
mov
dec
les
loop
out
in
rcr
jecxz
dec
xchg
les
jne
push
out
daa
jl
pushf
scas
mov
repz
jo
add
inc
repz
sbb
ljmp
fs
push
nop
mov
dec
loop
jl
pop
lahf
mov
pop
and
addr16
dec
cmp
jl
mov
sbb
fidivl
mov
and
mov
lock
pushf
pop
inc
mov
hlt
stos
lock
je
push
cmp
cwtl
out
or
nop
pop
jge
cmp
leave
ficoms
decb
pusha
insl
fisubl
lahf
mov
mov
inc
jae
adc
shl
jg
fistl
ret
lock
push
cld
ss
outsl
movsl
jbe
mov
cltd
adc
call
xchg
pop
sbb
in
pop
jo
add
ljmp
mov
mov
mov
lods
int3
and
xchg
and
add
sarb
sbb
ja
das
dec
push
lahf
jae
movsb
cwtl
gs
faddl
sbb
mov
add
sti
and
shr
cwtl
pop
movsl
or
rcll
rorl
pop
push
cmpsb
in
cli
test
adc
daa
scas
inc
pop
dec
pop
xor
jnp
aaa
xchg
or
pop
or
inc
jmp
fcompl
pop
mov
pop
lea
jae
push
loop
cmp
dec
adc
rcll
inc
jge
mov
into
xor
push
in
stc
adc
mov
inc
push
inc
jb
addb
xchg
mov
cmp
aad
push
mov
iret
sbbl
dec
bound
cmpsl
rcll
adc
add
push
outsb
add
mov
push
xchg
xchg
aaa
cltd
les
js
lds
xor
add
mov
sbb
loopne
addb
push
cmp
les
jo
jnp
push
cmpsl
divb
cmp
sub
ljmp
pop
lret
popf
add
pop
xchg
cmp
jg
clc
inc
or
ds
je
aas
leave
int3
push
push
nop
push
cltd
cmpsb
in
pushf
and
flds
xor
and
xor
mov
jl
pop
aad
cmp
push
daa
pop
ss
imul
icebp
cli
inc
mov
stc
ret
fidivl
cld
mov
int3
std
cmpsl
add
movsb
fwait
mov
lret
imul
inc
sbb
imul
out
add
rcr
iret
adcb
int3
stos
push
insl
pushf
stos
cmp
jecxz
out
sub
push
stos
lahf
dec
sti
mov
aad
sub
les
por
pop
je
andl
arpl
shl
inc
and
mov
call
addr16
pop
ds
mov
in
in
mov
mov
gs
jecxz
push
push
cmp
mov
insb
lahf
push
and
mov
mov
cmpsb
add
dec
mov
into
push
and
mov
insb
test
loope
and
pop
in
xlat
xor
xor
dec
cwtl
ret
and
pop
out
js
popf
push
loope
jns
jno
cli
xorb
ret
jns
adc
jae
mov
jnp
pop
inc
inc
fcoml
mov
mov
sti
push
push
and
add
dec
lret
xchg
jp
test
std
lret
xchg
cld
lcall
and
or
inc
push
and
sbb
jnp
stos
or
xchg
loope
adc
jg
jle
scas
or
add
addb
add
pushf
pop
xor
pop
nop
xor
lock
testb
stos
inc
fnstenv
cmpsb
andb
sbb
push
rcl
xor
rdmsr
push
mov
fidivrs
cmpsl
lods
gs
sbb
fs
cmp
test
out
dec
les
lods
xchg
lods
mov
std
or
mov
out
aam
ja
movsb
push
push
xchg
xor
into
in
mov
jb
ss
in
push
daa
bound
cmp
pop
cli
mov
lock
adc
movsb
push
ljmp
mov
stos
mov
jae
dec
jp
mov
cwtl
lods
mov
mov
adc
mov
notb
push
inc
push
and
addb
sub
dec
data16
jecxz
mov
mov
jecxz
jno
pop
orb
icebp
push
ds
in
inc
jns
push
into
cwtl
mov
sub
out
adc
hlt
mov
lds
dec
pop
or
jne
stos
int3
iret
and
test
stos
add
adc
and
adc
xchg
cmp
adc
or
cmp
shll
dec
push
and
testl
jmp
cmc
jb
cwtl
test
adc
pop
sub
push
sbb
mov
fstp
xchg
mov
mov
pop
in
ret
fadds
daa
adc
fcmovb
sub
jne
cmp
adc
push
into
dec
sbb
lods
insl
test
pushaw
sbb
out
inc
leave
jecxz
movsl
idivb
mov
ljmp
sahf
insb
pop
cwtl
push
lcall
dec
xor
inc
cmp
dec
mov
xchg
scas
enter
lds
sbb
mov
std
icebp
icebp
inc
xor
arpl
cmc
dec
sbb
xchg
aam
cmp
stc
xchg
les
and
dec
out
sbb
mov
push
repnz
gs
lret
aad
nop
or
rolb
jno
test
insb
jbe
addl
divb
es
mov
cmp
stc
push
dec
push
mov
pop
jae
push
popa
dec
and
rol
pop
imul
in
cwtl
sbb
orl
inc
lret
nop
xor
sbb
out
mulb
inc
lea
adc
or
inc
rolb
jb
popa
pop
jnp
push
lods
adc
mov
dec
or
daa
daa
addr16
pop
inc
pop
pop
sbb
adc
mov
and
adc
cwtl
push
push
jbe
in
or
sbb
imul
jnp
popf
mov
int3
jo
inc
imul
mov
mov
movl
xchg
add
adc
movsb
dec
mov
dec
xacquire
stc
loope
push
push
push
add
outsl
fistpl
dec
and
push
push
sub
add
lcall
mov
cmp
xchg
mov
andl
lret
aas
lock
xchg
loop
jo,pt
test
xlat
ret
les
push
cmp
jp
fdivl
fisttpll
scas
fsubrp
sub
mov
sub
jo
xor
sub
out
and
lahf
and
dec
loop
scas
ret
jl
xor
movsb
sub
mov
push
std
sub
rorl
addr16
jne
mov
add
sbb
jecxz
ss
push
xor
enter
mov
or
cld
lds
out
lcall
mov
das
push
sub
and
push
sub
mov
mov
jge
mov
push
dec
fcoml
push
iret
andb
xor
iret
clc
push
adc
adc
push
pop
aas
fnstcw
daa
call
fistl
rcr
scas
rcll
cmpsl
jne
in
xor
ret
dec
push
pop
ljmp
fwait
cli
inc
adc
scas
testb
in
fs
lret
aad
aas
repz
pusha
outsl
les
mov
inc
add
aam
or
int
or
mov
and
xchg
cltd
cmpb
lret
pop
pop
sub
out
icebp
mov
push
lds
repnz
mov
scas
sbb
xor
jmp
mov
negl
adc
push
and
pop
idivl
mov
clc
xor
outsl
push
lret
fdivp
fidivrl
into
pop
xlat
inc
and
aas
sub
sub
lock
cmc
mov
adc
xchg
pushl
inc
dec
ficompl
fdivrs
push
xchg
mov
sub
mov
and
add
mov
inc
push
cli
xchg
mov
add
test
mov
jo
jnp
adc
imul
adc
sbb
pop
sti
addl
jno
pop
xchg
loop
mov
push
es
pushf
sub
push
pop
pop
popf
dec
loop
sti
push
cmp
enter
int
sbb
adc
sbb
addr16
div
aam
sub
mov
cmpsb
mov
call
nop
xor
sub
cmp
ja
scas
lods
pop
add
jno
xor
sub
fnstsw
cmp
imul
cmc
add
mov
imul
outsl
sub
pop
in
add
fistpll
jae
testl
fdivl
rcrl
call
repz
push
outsb
xor
out
iret
sub
sbb
std
aaa
push
mov
lret
aas
mov
enter
inc
pop
and
data16
mov
cmp
inc
xchg
sbb
hlt
dec
inc
push
in
adc
jnp,pt
jb
pushf
sub
inc
es
clc
pop
push
rcll
out
cmp
sub
in
xchg
mov
mov
out
mov
iret
push
pop
mov
inc
cmp
xor
fwait
cmpsb
in
rorl
push
and
jne
pop
xor
mov
mov
lods
rclb
dec
int3
js
mov
rclb
test
movsl
pop
xchg
cld
pop
mov
xchg
outsb
jle
mov
mov
out
sbb
pushf
mov
loope
scas
add
int
and
add
and
dec
pop
dec
mull
stc
jmp
pop
sub
loope
data16
xchg
enter
nop
push
inc
sub
cltd
dec
aam
push
mov
das
jecxz
jbe
frstor
movsl
imul
push
push
js
fdivrl
dec
sahf
adc
subb
mov
mov
jge
adc
mov
fsubrs
adc
pop
dec
bound
leave
fidivrl
dec
cmp
xchg
pop
mov
notb
or
test
and
scas
lea
lret
xchg
ret
sub
lds
lahf
or
out
dec
cmp
cmc
mov
and
jns
mov
pop
fsubrl
push
das
pushf
push
add
enter
jae
sbb
push
hlt
cmp
test
inc
xor
mov
dec
lods
or
mov
sbb
testl
aad
jge
pop
or
push
pop
jno
or
sbb
xor
mov
aaa
or
int
test
xchg
jns
jl
push
mov
fdivrp
movsb
stos
mov
dec
xor
insb
pop
push
cmp
cld
in
popa
add
push
mov
jbe
shrb
test
stos
push
insb
or
jo
jmp
lea
test
mov
xchg
aaa
stc
aam
scas
popf
and
dec
mov
icebp
out
jmp
test
lea
pop
pusha
ja
fidivrs
clc
pop
xlat
sub
sarl
mov
xchg
cmp
lds
cli
mov
xor
jmp
push
inc
ror
movsb
outsl
arpl
dec
dec
cmp
nop
js
or
shrb
imul
xor
dec
js
push
lods
xchg
pusha
iret
jnp
lcall
jae
lcall
divb
jnp
pop
add
lock
inc
cmp
andb
iret
pop
push
mov
out
loopne
dec
fwait
sub
sub
scas
stos
mov
pop
sahf
sub
jp
into
loopne
mov
iret
int3
das
adc
int
mov
jle
cmp
ret
jae
xor
pop
jnp
inc
insl
jmp
dec
dec
jbe
jmp
mov
add
scas
lcall
mov
outsl
adc
push
andb
add
and
push
leave
cmp
testb
lea
cli
and
add
je
mov
pop
loope
mov
in
in
fwait
xchg
pusha
lret
mov
rolb
lea
aad
mov
xor
or
adc
in
mulb
xchg
ss
leave
bound
cwtl
and
fdiv
and
inc
int3
nop
adc
xor
adc
cmc
cmpsb
scas
fisttps
push
in
adc
fmull
es
xchg
xor
push
pushf
fldt
cmp
inc
bound
fimull
hlt
cs
pushf
out
mov
mov
dec
leave
mov
sub
adc
into
loop
in
shl
sub
or
xor
pop
mov
je
aad
out
adc
xchg
stos
pop
mov
lahf
mov
jbe
je
insb
fbld
cmp
stc
mov
iret
cmpb
push
fcomip
aad
stc
ja
test
or
fimuls
shlb
push
push
mov
int3
sbb
mov
xor
and
pop
mov
ljmp
hlt
inc
sahf
cmp
outsl
mov
das
or
addr16
bswap
fwait
pop
out
push
inc
or
loopne
pop
push
ret
aas
hlt
fwait
sub
add
mov
in
outsl
push
xchg
test
xchg
ja
aam
push
adc
fwait
das
jns
push
mov
jmp
inc
in
ds
cmp
fdivp
fldl
and
mov
jge
and
fstpt
xor
test
sbb
xor
add
mov
mov
js
mov
idivl
jmp
push
lea
outsb
dec
scas
emms
out
cmp
test
push
xor
xchg
movsb
movsl
outsb
push
outsl
adc
push
in
cmc
add
adc
das
fld
xor
ret
push
pop
add
add
add
push
jb
pop
in
insb
fmull
or
cmp
jbe
jp
insb
enter
icebp
jns
pop
lds
jg
jg
jns
inc
inc
fildll
add
jne
mov
push
inc
adc
out
lea
sbb
push
daa
dec
adc
xchg
out
mov
popa
bound
nop
repz
or
popf
or
ss
dec
jne
call
in
jno
movsl
rol
imul
fisubl
push
lret
mov
pop
mov
and
sar
sbb
mov
data16
xchg
jl
enter
inc
scas
cld
pop
arpl
and
adc
outsl
into
adc
dec
fisubrl
rcrl
subb
insl
aad
jbe
xor
shll
sbb
add
rcpps
mov
fs
aas
jmp
xor
mov
dec
dec
cmp
cmpsb
mov
pop
jp
dec
xor
jbe
leave
and
hlt
jmp
shlb
pop
clc
sbb
mov
hlt
push
or
dec
xchg
and
fisubs
jp
inc
sub
sbb
cmp
out
push
adc
cwtl
push
fsub
addr16
vmovss
adc
lods
jp
mov
adc
mov
test
mov
lock
addr16
xchg
inc
dec
ret
imul
sahf
push
dec
xchg
xor
aam
adc
cld
in
cmp
leave
inc
dec
pop
loopne
sbb
mov
mov
pop
frstor
rcll
testl
or
pop
xor
arpl
jp
test
popf
inc
inc
imul
jecxz
dec
outsb
mov
insl
test
push
pusha
xchg
adc
mov
mov
sub
push
xchg
call
adc
es
jecxz
fdivl
jnp
xchg
inc
sub
and
sub
outsl
mov
mov
aaa
iret
xchg
push
jmp
daa
and
shll
and
sbb
scas
cmpsl
mov
mov
pop
cmp
mov
shlb
out
jmp
jo
mov
lcall
fwait
das
into
rorl
and
ss
jb
and
cld
pusha
mov
cmpsl
gs
std
cltd
add
pop
mov
fdivr
jmp
xchg
fwait
xor
push
outsl
cs
lock
jnp
test
call
lea
inc
das
icebp
adc
xchg
mov
sbb
dec
cmp
mov
or
jle,pt
xchg
je
jp
cld
icebp
dec
inc
cwtl
xchg
push
sub
arpl
fmulp
pop
popf
je
testb
pop
fisubs
shrb
cmp
mov
inc
aaa
xchg
cli
test
leave
movsl
xchg
in
inc
cmp
cli
or
mov
mov
imul
mov
test
adc
xchg
rcl
add
and
jmp
lret
movsl
cmp
scas
mov
inc
sbb
scas
jns
fistps
pop
test
jo
mov
push
sbb
add
pop
xlat
pop
jb
inc
or
mov
jp
jnp
ss
xchg
test
outsb
xchg
sub
nop
push
mov
adc
xor
jp
insl
sbb
dec
sub
mov
add
daa
lcall
fdivr
ja
sub
ja
in
popf
dec
rclb
mov
outsb
imul
cmp
fcomp
jne
pop
mov
sbb
mov
pusha
sub
cltd
dec
mov
lret
mov
fs
mov
repz
fadds
adc
shrb
cltd
shlb
int3
mov
cld
rcrb
xor
fmuls
pop
das
adc
test
decb
les
jmp
or
scas
lret
movsb
lds
push
jne
xchg
jae
aam
jl
not
or
scas
mov
jns
fwait
movsl
nop
jns
mov
push
fwait
sbb
cli
jmp
sahf
fidivrs
ss
jecxz
xorl
xor
inc
loope
sbb
push
addl
jo
dec
test
and
leave
lret
ret
sub
pop
in
fldenv
pop
or
addr16
pop
insb
jne
movsl
sub
mov
out
mov
sbb
loopne
mov
xor
fmuls
inc
call
shlb
xorl
loope
pushf
push
cli
repz
jns
jp
cmp
js
xchg
xchg
dec
jmp
scas
je
lods
adc
xor
mov
or
in
data16
push
adc
jle
mov
sbb
test
add
sub
les
fisubrl
pusha
data16
xchg
xor
cltd
fmull
je
or
insl
xchg
push
sub
negb
xor
cltd
outsl
outsl
pop
jp
dec
insl
aas
dec
jbe
pop
aas
mov
adc
sub
fs
divl
push
orb
nop
ret
add
movsb
mov
xor
into
call
and
rorb
shl
push
popf
cli
mov
fwait
into
xchg
cld
mov
inc
add
bound
cs
jno
mov
mov
and
clc
aam
xlat
xchg
in
scas
repz
addr16
and
dec
out
test
cs
mov
adc
lret
pop
cli
lds
sahf
sbb
xchg
push
cltd
int
addr16
jo
pusha
test
push
outsb
jmp
sub
cs
cmpb
fwait
rolb
aaa
or
shlb
mov
imul
xor
push
aaa
or
sub
mov
jo
sbb
ret
popf
bound
lcall
mov
jbe
inc
sub
pop
jb
ret
pushf
dec
mov
hlt
ja
bound
pop
andb
fs
and
push
mov
xchg
sbb
fiaddl
lock
xor
inc
loop
lahf
inc
out
mov
or
scas
push
fidivl
inc
or
mul
insb
sarl
xor
mov
mov
cmp
inc
jo
movsl
mov
inc
xchg
pop
repnz
adc
int
rcl
xchg
cmp
inc
in
rcpps
mov
icebp
lock
rcll
out
jne
xor
push
add
add
andb
bound
sub
cmp
fimuls
je
je
out
in
mov
and
xlat
xlat
mov
adc
fwait
js
mov
pop
sub
stos
mov
out
jne
xchg
pusha
or
into
mov
sahf
ja
lods
in
in
int3
aam
aad
mov
in
push
dec
repz
mov
ret
ja
and
rorl
repz
addr16
idiv
pusha
insb
pop
inc
sub
jp
push
js
js
int3
push
rolb
out
stos
xchg
aad
jnp
cmp
pop
mov
and
jne
dec
xor
mov
and
shl
inc
xchg
mov
mov
repz
pusha
push
mov
xor
idivl
mov
ja
and
jae
fstpt
adc
leave
push
pop
mov
icebp
sub
dec
sbb
pop
sub
lahf
inc
mov
cmovnp
sub
insb
movb
dec
xchg
xor
sbb
sub
sahf
lahf
test
push
ljmp
jge
ret
or
dec
push
jmp
push
xchg
out
cmpsl
and
gs
pop
fwait
xor
xor
int3
jns
out
test
mov
mov
not
or
aam
int3
and
icebp
sub
shll
mov
out
jbe
add
mov
cmp
jmp
stos
test
mov
dec
xorb
add
stos
insl
enter
pop
push
data16
xor
add
jl
and
sub
xchg
and
arpl
std
mov
bound
sbb
outsl
imul
mov
jmp
cli
push
ret
and
mov
push
popaw
and
lret
sbb
std
dec
inc
mov
dec
mov
mov
cmp
add
push
jne
ret
add
sbb
ss
pop
ret
pusha
into
sub
or
lret
sbb
and
pop
test
sbb
jp
pop
test
sub
shr
insl
movsb
repz
ds
fdivl
dec
test
rolb
mov
xchg
sub
test
rcll
leave
adc
jg
dec
mov
sbb
test
cmc
mov
call
adc
jno
xchg
ffreep
outsl
pusha
loope
addb
pop
aam
daa
inc
sbb
add
ret
shl
dec
add
dec
pushf
and
mov
loopne
arpl
fcmovbe
sub
push
push
sub
sbb
movl
shlb
incb
leave
notb
mov
sub
cli
pop
scas
aad
iret
jp
andb
dec
pop
inc
int
or
sbbl
pop
mov
add
ja
call
lods
test
in
into
and
bound
cmp
dec
cmpsl
inc
jbe
div
sarl
jmp
dec
inc
pop
fwait
test
and
jle
pop
pop
rclb
jb
push
dec
stc
or
pop
sub
and
push
cmpb
xorb
jno
mov
dec
mov
lret
adcl
loopne
rol
pop
or
cmpsb
pop
add
or
fbstp
cmp
mov
mov
sbb
rcrb
out
fsubr
xchg
cmp
icebp
inc
ret
mov
xor
adc
xchg
pop
push
and
cmove
je
stc
shlb
mov
cmp
lcall
jle
cmp
sbb
cwtl
lret
lret
inc
cs
mov
ds
arpl
icebp
into
ss
cmpsl
shll
jae
or
pop
xlat
and
lret
jl
push
orl
cmpsl
mov
pop
sahf
jg
out
mov
push
xchg
loope
push
iret
jb
mov
hlt
std
aam
xchg
mov
aam
xchg
mov
inc
cltd
or
mov
movsl
push
sub
mov
or
ficoms
lods
js
js
lcall
push
out
imul
orl
jg
arpl
xchg
out
stc
fdivs
xor
outsb
or
and
iret
jle
or
fidivs
or
push
mov
dec
cmpsl
and
aas
fs
pop
adc
xlat
jp
mov
pop
dec
xlat
clc
inc
test
pop
fadds
push
mov
push
inc
mov
adc
sub
cwtl
jnp
push
clc
call
inc
aaa
jecxz
out
cmp
inc
jmp
sub
add
inc
mov
hlt
ficoms
lock
xor
cmp
adc
pop
xchg
test
mov
mov
sbb
sub
pusha
jnp
push
movsl
negb
enter
lock
xor
dec
in
daa
mov
pop
std
jl
fistl
sahf
scas
dec
jno
or
sbb
stc
xor
sahf
xchg
push
xchg
inc
test
push
inc
popa
mov
cmp
and
into
mov
das
out
jbe
out
cmc
dec
dec
mov
test
inc
loop
add
mov
je
mov
hlt
cmpsb
sbb
cmp
dec
pop
cmp
stc
out
cltd
cmc
int3
mov
daa
popf
inc
and
lahf
jno
mov
pop
or
mov
xchg
add
pop
shrb
in
loop
lret
sub
cmp
or
daa
inc
or
cmpsl
adc
xor
mov
lods
push
add
lret
sbb
bnd
incb
popf
push
shll
mov
test
sti
xor
inc
pop
int
dec
hlt
enter
lcall
sub
add
insb
mov
sub
add
xor
jns
xlat
pop
xor
popa
xor
push
inc
mov
cmp
out
cmp
cmp
pop
push
pop
cltd
loopne
lea
and
push
loope
fwait
mov
negl
xor
hlt
fidivl
add
adc
mov
lahf
xchg
xchg
or
jl
jle
pop
jo
jb
aad
nop
hlt
cli
into
fsubrl
pushf
and
mov
loope
inc
or
mov
arpl
mov
sub
test
call
rcrb
adc
clc
addr16
std
mov
lret
shlb
outsl
movsl
sbb
xor
lahf
nop
or
je
fst
and
mov
repz
xlat
or
lret
jecxz
or
pop
test
lss
lcall
jl
push
inc
push
pop
push
cld
sbb
out
das
pop
mov
dec
adc
sub
sahf
clc
daa
leave
addr16
xor
mov
push
data16
stos
inc
push
xchg
imul
stc
out
mov
sbb
punpckhwd
push
xchg
clc
insl
cmc
loop
enter
or
xchg
push
bound
sbb
std
aas
fdivrs
add
pop
xchg
sti
into
sbb
jns
lahf
xor
out
test
add
sbb
sbb
push
or
jbe
test
and
mov
dec
cmc
test
dec
and
fdivr
orb
stos
mov
pop
sub
inc
mov
stos
xor
inc
push
loope
mov
push
adcb
pop
xchg
ds
pop
push
push
xchg
test
mov
int
in
jnp
sti
leave
add
mov
push
mov
mov
xlat
aaa
adc
icebp
mov
out
mov
pop
add
dec
daa
inc
in
xchg
pop
mov
mov
adc
sbb
subl
data16
adc
inc
test
daa
and
cmpsb
mov
add
xor
mov
mov
xor
enter
inc
movsl
mov
movsb
push
arpl
mov
andl
fs
imulb
inc
pushf
inc
es
lahf
adc
dec
mov
push
sub
negl
or
lcall
subb
insl
aas
repnz
xchg
iret
mov
xor
sti
aaa
push
sbb
test
bnd
or
mov
pop
and
test
test
mov
push
aaa
sub
xor
mov
repz
push
xchg
lock
out
inc
pop
push
mov
and
mov
in
pop
mov
cmp
into
movsl
mov
cmp
cltd
cmp
xor
and
xchg
xor
push
test
outsb
push
push
and
clc
pop
mov
aas
dec
mov
or
mov
mov
lcall
jmp
test
movsl
inc
sub
aam
jl
js
movsb
pop
cli
imul
lcall
popa
and
push
xchg
jne
iret
repz
std
call
roll
adc
add
pop
fsubl
inc
and
nop
inc
popf
xchg
mov
pop
in
nop
xor
mov
or
outsb
xlat
inc
clc
lds
mov
mov
mov
and
mov
sbbb
jo
push
cmp
fsubl
sbb
inc
rorb
hlt
ret
dec
pop
xchg
clc
inc
hlt
cmpsl
push
dec
test
lea
push
ja
inc
adc
fdivrp
leave
int
jg
int
aaa
insl
loopne
dec
inc
cmpsb
mov
gs
aad
pop
and
nop
push
mov
xor
outsb
decl
je
dec
xchg
stc
mov
aas
int3
lods
xchg
sub
sub
xchg
push
push
gs
ret
negl
xor
cli
sbbl
pusha
stc
xchg
int3
mov
mov
fisttps
adc
js
sub
jae
mov
push
pop
push
xchg
sbb
mulb
mov
jb
in
sbbl
pop
insb
sub
pop
shl
xor
loope
sti
mov
mov
je
sbb
popa
and
gs
mov
jnp
in
sub
test
shlb
mov
mov
loope
sbb
repnz
clc
mov
es
sbb
sbb
add
pop
add
sbb
lcall
fdivp
out
or
mov
dec
cmp
call
lods
push
out
push
dec
sahf
xchg
xchg
popa
imul
fiadds
add
dec
xchg
ja
sub
rolb
lcall
xchg
add
jbe
and
fs
test
cmp
mov
and
das
cli
xchg
sbb
jbe
and
or
lds
popa
pop
sbb
xor
inc
aad
xor
cmp
int
xchg
or
aaa
cli
enter
mov
mov
mov
inc
xchg
adc
mov
shlb
sub
push
idivl
mov
ret
push
pop
pop
jg
repz
pop
cmpsl
cs
out
xchg
xchg
pop
add
sbb
gs
sub
dec
xor
ret
adc
cmp
ss
vmwrite
andb
cs
adc
add
mov
out
pop
sarb
popa
mov
or
cmp
outsb
pop
jae
cmp
or
shll
repz
or
adc
jg
add
lcall
mov
aaa
mov
cs
mov
pop
out
pop
lahf
insb
out
fadds
fidivs
repnz
xlat
leave
xchg
lds
call
lods
fisubrl
sahf
push
push
into
test
insb
jecxz
xor
fidivrl
push
pop
fsubrs
pop
ficomps
jg
repz
xchg
dec
shl
mov
inc
rorl
xchg
pop
mov
adc
dec
int3
fst
rol
pusha
fimull
mov
pushw
mov
nop
add
cmpb
fistpl
add
repnz
xchg
adc
xchg
add
xchg
sub
push
aaa
push
mov
gs
sub
loope
lds
pusha
rclb
out
fwait
mov
sbb
lea
pop
inc
sub
dec
fmuls
ds
and
scas
cmp
cmpsl
sbb
mov
scas
arpl
outsb
test
push
loopne
xor
push
in
fisubrl
sbb
and
or
jp
in
pop
or
sub
push
adc
mov
sarl
cmp
bound
or
mov
cmp
test
and
mov
scas
andb
xlat
mov
in
push
mov
pop
cmpsb
and
in
dec
pusha
and
sbb
xchg
xor
sub
add
iret
xchg
xor
inc
push
push
mov
fucom
sar
mov
hlt
mov
pop
test
fs
cmp
cmp
in
lods
fists
ljmp
pop
sub
lock
dec
and
xchg
iret
sbbb
jo
sub
jl
ja
add
rcl
cmp
mov
jne
mov
clc
lcall
ror
test
and
in
add
mov
adc
mov
in
movsl
neg
jae
test
mov
xor
sub
xchg
aas
push
add
pop
mov
je
outsl
xor
sahf
testl
dec
ljmp
cmp
dec
sbb
cmpsl
pop
loopne
cmp
scas
jae
lcall
sarb
mov
push
pop
and
xchg
dec
or
mov
js
pop
shll
stc
in
dec
fdiv
or
ljmp
mov
fdivrp
mov
cld
push
xchg
aas
push
cmp
or
mov
and
popa
filds
pop
inc
xor
jno
pushf
adc
idivl
je
lds
clc
cmpsb
xlat
sub
xor
xchg
jne
rorb
jge
std
adc
movsb
in
into
imul
mov
push
add
sub
ljmp
ret
xchg
outsl
cmpsl
mov
and
std
push
xchg
sbb
and
push
inc
mov
negl
cmp
cmp
or
xchg
js
sub
inc
push
xchg
add
je
mov
mov
rclb
loop
mov
inc
sub
inc
jmp
mov
pop
mov
ret
push
xchg
ret
push
dec
ja
in
fs
jo
test
lods
push
push
xor
dec
mov
sti
lods
push
xor
cmp
outsl
jmp
pop
xchg
xchg
mov
gs
imul
mov
movb
cmp
adc
ja
pusha
jne
cmp
mov
jge
lods
xlat
outsl
shlb
jle
inc
jae
int3
stos
ucomiss
push
pop
inc
cmp
into
adc
dec
inc
lahf
int3
enter
fisubl
xchg
aas
sub
and
in
sub
test
push
shll
fsubl
and
imul
push
lods
out
insb
push
pop
js
cwtl
pushf
aad
insb
inc
cmp
movb
push
stc
sbbb
aaa
add
mov
push
ret
cmc
or
clc
pop
adc
mov
xchg
stos
imul
inc
mov
pop
mov
push
jae
xor
cltd
je
imul
pop
cmp
mov
mov
add
push
jb
adc
mov
jmp
jns
ja
adc
pop
pop
data16
fiaddl
xor
loopne
in
dec
mov
push
insl
sbb
add
pop
fwait
push
mov
dec
lea
sar
jns
or
pop
aad
xchg
mov
or
adc
add
aas
lcall
sbb
movsb
mov
pop
or
cld
daa
es
inc
xchg
mov
enter
pop
scas
pop
popf
or
dec
fcompl
inc
cwtl
mov
fcomi
outsb
js,pn
aad
mov
test
push
mov
arpl
out
push
jnp
iret
mov
repnz
jne
cmp
jle
adcb
test
out
dec
cmpsl
js
out
lods
xor
scas
rolb
ficomps
mov
xchg
or
loop
cmp
enter
push
add
jecxz
and
xchg
xor
adc
sub
mov
cli
cmp
dec
mov
xlat
fstpl
jl
test
std
pop
lret
or
imul
imul
and
rorb
cmp
mov
in
incl
mov
sub
out
push
cmc
inc
cmpsb
add
scas
cld
push
xchg
and
mov
xchg
insb
pusha
adc
mov
xchg
ret
test
jge
lahf
xor
je
popa
aam
xlat
cs
pop
and
add
scas
xor
ja
push
movsb
jbe
mov
xlat
dec
mov
cmpsl
or
adc
xor
fcompl
adc
scas
adc
cmpsb
sub
icebp
lds
imul
mov
movzbl
sbb
fsubrp
das
xchg
dec
cli
popa
repz
aas
mov
mov
test
jns
aas
mov
sub
repz
cmc
cld
jp
xchg
inc
pop
les
rolb
dec
mov
adc
push
push
fildl
add
pop
clc
repnz
xor
loopne
sahf
mov
mov
jg
ss
cmp
aaa
rcrl
shrl
mov
std
pop
xchg
lahf
gs
sbb
ljmp
push
in
jbe
int
jle
lret
ds
fidivs
xchg
ret
mov
mov
or
mov
cmp
mov
pop
sub
xor
push
pop
cmpsl
mov
or
orb
stos
pusha
mov
sub
fstpt
jae
and
jno
push
sahf
aad
ja
or
xchg
or
das
sbb
out
bound
test
lahf
xor
mov
imul
fildl
jmp
popf
push
dec
push
ret
xchg
cli
pop
pop
das
jmp
push
and
pop
jecxz
mov
aam
mov
test
xchg
jbe
jmp
dec
sub
lret
pop
cmp
pop
adc
stc
fucomi
jno
add
into
icebp
insl
mov
xchg
dec
push
mov
mov
pop
mov
filds
cmp
inc
call
sbb
xlat
int3
mov
stos
in
mov
mov
in
test
sbb
popa
sbb
std
sub
dec
adcl
mov
fcomps
insb
in
mov
mov
ss
or
xor
gs
arpl
sbb
jg
xlat
ret
dec
ss
pop
or
or
mov
jecxz
mov
or
add
push
bound
xchg
cmpsl
push
mov
enter
dec
in
jno
fwait
cmp
and
fdivl
adc
sti
in
int3
popa
push
shll
cli
dec
add
xlat
sahf
mov
mov
add
lret
adc
out
xor
fs
shl
cmc
out
test
pop
fsubrs
lahf
fs
shrl
decl
sbb
cli
pop
push
leave
jnp
or
adc
xchg
and
lcall
or
and
insl
or
xlat
lods
test
jne
in
jb
sbb
mov
cmc
jns
cmp
in
icebp
jl
adc
cmpsl
bound
add
inc
push
fwait
mov
call
pop
cli
stc
fldt
push
cmp
adc
out
insl
int
inc
sbb
cmp
inc
or
and
in
adc
or
pop
test
mov
sti
mov
adc
testb
mov
mov
ret
inc
or
stos
inc
out
fmull
fidivl
dec
sub
cld
sahf
and
rcl
pop
push
add
aam
fldt
ss
cs
push
rolb
or
arpl
cmpsl
inc
mov
mov
rorl
mov
cmp
adc
jo
pop
aaa
fs
subl
lds
sbb
rcl
jne,pn
jne
lahf
push
bound
test
adc
adc
jg
sbb
inc
adc
in
sbb
sbb
sub
mov
js
lock
fwait
pop
lods
inc
das
adc
pop
mov
pusha
jb
push
jns
mov
popf
movsb
inc
outsb
add
push
pop
pop
ret
add
std
insl
fstl
jno
xchg
jbe
mov
sbb
inc
xor
and
test
cmp
mov
sbb
jmp
js
jg
mov
xor
cld
das
add
adc
and
insl
fucom
jge
sbb
ret
xlat
mov
nop
loope
jecxz
rorb
lcall
pop
ja
jecxz
test
mov
sbb
add
int
xor
xchg
adc
aaa
jne
mov
les
xchg
dec
pop
lea
lea
out
ds
sbb
mov
jecxz
sbb
dec
fildl
shrb
lret
jae
mov
ja
xchg
mov
add
daa
push
mov
je
adc
insb
xchg
mov
cmpsb
fisubrs
dec
idiv
lret
adc
in
xchg
mov
pop
mov
rcrl
andl
pop
aam
pop
pop
pop
ds
xchg
rorl
dec
stc
mov
iret
xor
aas
jecxz
mov
aad
jp
pop
dec
jno
stc
mov
and
js
imul
mov
push
sbb
xlat
or
mov
mov
jp
lods
mov
pop
mov
scas
dec
out
pop
add
mov
fisubs
loopne
pop
out
clc
push
mov
sti
jecxz
into
jbe
fimull
iret
xchg
jnp
xor
aad
fnstsw
adc
dec
or
sub
sti
adc
out
mov
cmp
jb
ds
mov
cmpsb
mov
mov
mov
movsl
push
jb
scas
mov
fistpl
lahf
imul
cs
push
inc
pop
mov
test
cmp
pop
adc
dec
sahf
inc
adc
sub
sbb
add
loop
mov
aaa
sub
mov
xor
mov
stos
rol
aad
leave
sbb
stos
lock
push
lcall
arpl
subb
nop
mov
test
fimuls
mov
movsl
jecxz
add
mov
fwait
ljmp
mov
push
cmpsb
lods
jp
roll
jle
push
cmp
fstps
icebp
je
cmp
mov
fistpl
jp
fucomp
xor
jge
fsts
aad
jne
pop
icebp
lcall
sbb
sbb
push
shl
adc
or
pop
out
adc
fldt
aas
pushf
xchg
ret
push
outsb
xchg
dec
scas
or
popf
int
cmp
ficoml
aam
xor
sub
and
push
inc
adc
icebp
int
inc
stos
ficoml
adc
call
xchg
fdivrl
icebp
push
das
je
outsb
cmp
cmpsb
jge
or
shl
xor
mov
dec
sbb
fdivs
stos
fs
iret
mov
scas
adc
push
cmp
mov
push
outsb
mov
loope
ret
lods
jge
adcb
lret
addb
xchg
mulb
stc
mov
mov
and
jbe
adcl
pop
pop
cs
pop
jo
xlat
or
add
or
inc
movsb
push
hlt
mov
dec
in
add
mov
jb
lods
testl
push
loopne
jecxz
fucom
outsl
nop
pop
movsb
lea
pop
add
orl
xor
mov
jno
gs
in
fildl
pop
lret
gs
loopne
in
enter
mov
rcrl
lahf
xchg
mov
shll
test
out
add
inc
mov
mov
adc
pop
cltd
ret
fmul
cmp
clc
cmp
fnstcw
pop
out
sbb
ss
or
test
insb
loopne
fiadds
fstpl
dec
and
pusha
subb
mov
add
mov
mov
mov
jmp
ljmp
mov
popa
das
inc
inc
fucomp
nop
fldl
push
nop
sbb
adc
add
and
bound
mov
push
pop
fwait
test
jo
xchg
out
mov
jne
jno
push
movsb
adc
lahf
sbb
push
mov
mov
xor
xlat
inc
add
test
fsts
jnp
pop
mov
movsl
insl
aam
pop
movb
aam
jp
rcll
ret
jl
cmp
mov
or
xor
sub
or
jno
sub
mov
mov
test
insb
clc
add
loope
dec
add
sub
pop
pusha
pushf
push
fucomp
cld
dec
inc
sbb
lahf
fsubrs
scas
mov
iret
jl
dec
pop
adc
or
add
bound
xor
hlt
adc
scas
sub
xor
addb
xor
jl
cwtl
push
dec
aaa
into
fs
sub
mov
push
push
scas
aaa
lcall
adcl
mov
xchg
push
xor
sub
push
cmpl
mov
mov
popa
lds
inc
mov
call
enter
pop
ljmp
add
mov
sarl
adc
jle
jl
decl
mov
and
xchg
pushl
imul
aaa
pop
jl
jmp
inc
or
ficompl
testb
rorb
push
inc
adc
ss
es
scas
dec
int
inc
sub
add
pop
add
mov
mov
int3
mov
mov
push
pop
mov
xchg
scas
out
adc
jge
cwtl
jecxz
pop
lahf
fsts
xchg
incb
cli
pop
sub
icebp
cmpsb
cltd
adc
es
adc
pop
scas
push
insb
fprem
mov
mov
pusha
pop
inc
in
cmp
stc
mov
mov
inc
mov
and
xchg
push
jbe
pushf
xor
loope
push
adcb
xor
add
jl
into
lods
das
lds
leave
popa
test
movsb
add
dec
scas
pop
pop
dec
cmp
mov
rorl
div
mov
in
loopne
pop
es
movsb
pop
jnp
pop
pop
movsl
inc
ds
lahf
dec
or
xchg
hlt
mov
xchg
rorb
cmp
andb
movsl
jg
push
jnp
xor
sub
sbb
xor
mov
adc
ja
adc
add
xchg
fiaddl
sbb
xor
out
mov
outsl
loope
lret
jmp
in
sub
sub
test
in
or
shl
jnp
repz
xchg
fsubp
add
pop
adc
imul
adc
dec
outsb
or
cwtl
fnstenv
faddl
jecxz
mov
rcrb
and
sub
out
jp
rolb
in
repnz
dec
push
aaa
popa
movsb
push
jae
and
inc
mov
sbb
andl
sbb
inc
xor
xor
ds
out
jp
lods
inc
sbb
loop
ja
pushf
rclb
pop
sahf
pusha
mov
repnz
test
push
cltd
sti
dec
jp
xchg
cmpsl
fs
cli
push
xchg
mov
dec
hlt
daa
pop
jge
jo
pop
sub
xchg
out
out
push
push
jl
lcall
inc
les
into
shl
sbb
sbb
in
stc
push
shlb
icebp
cmc
sahf
jmp
mov
sbb
xchg
ja
lcall
movsb
negb
sbb
adc
push
jae
sbb
push
and
cmp
out
bound
xchg
lock
or
test
add
data16
subl
cmpsb
pop
mov
fs
out
adc
cmpsb
sar
cmp
clc
or
pop
dec
clc
lahf
scas
xchg
mov
cmpl
test
cmc
mov
mov
add
lods
ror
cmpsb
inc
pop
cli
fmull
pop
jne
mulb
jmp
mov
iret
loope
xchg
xchg
add
pushf
cmp
arpl
pop
aas
sbb
jl
cmp
jno
jecxz
mov
rcl
subb
lahf
out
dec
push
mov
add
cmp
das
mov
cmp
sub
push
cwtl
xor
iret
ss
lret
test
test
add
push
xchg
ss
fistl
push
dec
mov
mov
and
jo
jecxz
xlat
scas
shrb
aaa
imul
sti
jno
lret
stc
enter
je
ret
and
mov
jo
push
leave
fwait
xchg
ret
xor
rorb
push
pop
bound
cmpsb
cltd
add
and
insb
outsb
ljmp
outsb
sbb
jns
mov
inc
inc
push
push
lds
ljmp
insb
lcall
dec
jle
push
cmpsb
es
les
xor
push
xor
cwtl
mov
cmp
add
insl
push
test
push
mov
cmp
inc
arpl
lret
das
jmp
lret
jmp
push
jbe
fwait
icebp
mov
cs
sub
cmpsl
jns
push
int3
pop
jp
adc
es
sarb
mov
cld
push
orl
mov
cmc
test
push
xor
inc
mov
xchg
int
mov
lahf
sti
xchg
pop
sahf
sbbl
mov
insl
out
in
mov
dec
in
lcall
lret
std
out
xor
incb
cltd
add
adc
pop
jmp
imul
repz
sub
std
sar
sub
mov
mov
xor
inc
sbb
popf
jecxz
inc
lret
jl
and
cmp
pop
pop
mov
popf
lods
mov
bound
inc
negl
xor
popf
imul
and
xor
or
mov
cmp
lret
mov
pop
inc
jae
shlb
mov
dec
mov
dec
or
inc
xor
sub
inc
icebp
cmpsb
sarb
sbb
scas
out
dec
push
xchg
int3
out
imul
das
aam
outsb
std
loopne
push
popa
ret
push
stos
jbe
mov
cmp
push
imul
std
outsb
inc
jo
sub
test
aaa
pop
ret
add
lods
outsl
orb
repnz
movl
cltd
jnp
enter
repz
xor
mov
fnstenv
fsubl
loope
es
adc
mov
sbb
stc
and
jle
jecxz
pop
rolb
cmp
sar
mov
shlb
and
mov
rcrl
xchg
cmp
fstpt
xchg
jp
mov
or
cld
es
sub
jnp
cwtl
jmp
popa
idiv
inc
lahf
fcmovbe
rcrb
leave
insl
pop
emms
loop
push
sarb
inc
setb
aaa
in
pusha
stc
leave
inc
ret
test
adc
mov
in
fadds
repnz
push
dec
sbb
cmc
shlb
fdivs
push
sub
cmp
and
mov
xor
sub
mov
or
cli
mov
lea
aad
cmp
mov
loop
xlat
or
lret
std
dec
adc
fisubs
xchg
ss
mov
pop
inc
cmpsb
dec
push
or
push
cmp
rclb
icebp
jg
js
shll
mov
pop
jno
mov
daa
out
stc
xor
imul
dec
outsl
imul
pop
lds
pop
push
jmp
daa
decl
ret
rcrl
push
jo
xor
aam
iret
les
jo
mov
mov
popa
mov
in
test
sub
std
leave
jns
or
push
sub
mov
inc
pusha
dec
push
out
pop
mov
out
mov
or
cld
cs
test
sbb
sub
fwait
bts
mov
ret
mov
push
pop
aad
daa
cld
mov
jne
dec
in
push
push
loop
or
subl
sub
imul
iret
push
xchg
maxps
in
xchg
pop
push
sub
inc
push
int
out
arpl
mov
mov
cmpsb
adc
mov
xor
pop
pushf
dec
xor
mov
pop
sbb
aaa
adc
inc
les
mov
push
and
and
leave
inc
cltd
pop
notb
jns
and
push
push
mov
sub
imul
and
test
iret
mov
dec
pop
mov
rcrl
sbb
decl
mov
xchg
int
std
popf
es
adc
pop
lcall
jle
mov
xor
mov
aaa
add
sub
rcll
or
enter
outsl
push
in
mov
pop
gs
mov
lods
mov
sarl
jns
insl
decl
cmpsb
fisubrs
in
mov
adc
sbb
nop
jg
les
dec
stos
pop
push
jg
je
aad
mov
xchg
imul
mov
insb
fucomi
dec
xor
inc
stos
mov
pusha
clc
loopne
imul
jno
mov
jns
outsl
repz
dec
addb
cmp
xchg
fwait
push
aad
dec
sub
xchg
outsb
mov
or
mov
leave
mov
or
mov
fstpt
ja
add
push
arpl
pop
test
pop
xor
push
mov
jb
mov
addr16
xlat
adc
xlat
fwait
cs
xor
out
lods
cmc
mov
xchg
scas
cltd
lret
les
mov
sub
xor
sbb
or
mov
mov
mov
pop
les
fbstp
mov
mov
mov
ret
sbb
into
dec
icebp
iret
jae
mov
jno
bswap
add
mov
in
inc
mov
and
or
dec
int
mov
lods
mov
cmp
cs
xor
add
inc
adc
dec
icebp
or
repnz
pop
adc
aas
or
shll
stc
pushf
jo
testb
negl
imul
aad
add
scas
scas
aaa
fadd
sbb
sbb
push
mov
aam
outsl
and
rorl
mov
pop
or
push
out
lret
outsl
sbb
shll
xor
lock
or
mov
xor
addr16
ljmp
and
pop
mov
pushf
jl
andl
dec
cmpl
sbb
ret
mov
mov
adc
xchg
push
mov
pop
ret
popf
inc
ja
jae
sahf
dec
xchg
push
test
mov
or
scas
inc
shlb
mov
push
adc
jge
push
sbb
cmp
cmpsb
add
push
sbb
pushf
les
pop
fisttps
imul
push
mov
ret
mov
iret
inc
data16
jl
je
clc
push
inc
sbbl
mov
std
dec
mov
into
dec
pop
in
out
cltd
xchg
out
imul
sbb
jge
inc
jmp
adcl
sub
cmpsl
out
fs
mov
cwtl
cmp
jp
add
cwtl
sbb
mov
bound
sub
out
cmp
xchg
jmp
cmp
add
pop
cmp
lret
xor
mov
pushf
pop
ret
dec
icebp
mov
cwtl
xor
mov
dec
ja
lahf
aad
call
imul
or
dec
std
pop
or
lcall
push
lea
cmp
and
and
or
or
sbb
jl
out
scas
cli
push
movb
in
popa
andl
test
rorb
jge
xor
push
enter
mov
xlat
pop
insb
cmc
add
xor
sbb
imull
inc
faddl
test
add
fcomp
xchg
sub
xor
lds
hlt
pop
mov
fnstsw
std
jno
pusha
test
inc
sub
mov
or
pop
sub
push
sbb
lods
rolb
inc
mov
std
cmc
sub
mov
mov
lret
fistps
pop
jbe
pop
into
lahf
xchg
jg
lds
adc
xchg
xor
cld
push
jecxz
mov
mov
fldl
sahf
or
pop
or
pushf
fptan
sub
lahf
push
mov
idivb
aaa
int3
pop
sub
lret
push
int3
add
inc
popa
push
stc
xor
sahf
mov
push
xor
lock
bswap
mov
out
xchg
lret
push
mov
pop
adc
sub
loopne
inc
outsl
cmpb
adc
addl
ljmp
inc
cmpsl
push
dec
subl
in
xchg
and
popf
std
push
and
jbe
cmp
lock
lcall
dec
les
out
into
dec
fmul
push
outsb
mov
jmp
rcrb
pop
rol
mov
dec
pop
jb
add
mov
pusha
pop
fadds
jmp
lahf
adc
mov
lret
sbb
aam
or
in
push
jle
sub
cmpb
leave
add
jnp
decb
lods
cltd
cmc
fdivrs
ja
push
jb
mov
movsb
dec
pop
inc
adc
imul
adc
sbb
push
dec
jg
test
push
xchg
mov
fistpl
ficompl
nop
jnp
mov
xchg
push
mov
jo
mov
mov
push
dec
imul
xor
sahf
mov
call
ficoml
insb
push
std
es
popf
iret
lret
jns
cmp
fsubs
shl
add
push
add
imul
and
inc
adc
mov
sub
hlt
inc
ja
or
pop
daa
outsl
cmp
cmpl
inc
xchg
xor
das
xchg
scas
fists
cwtl
and
dec
fsubs
roll
inc
push
stc
sbbl
ja
popa
fisubs
sbb
cmpsb
xor
das
adc
mov
fsub
add
mov
pop
sarl
pop
fmul
or
shrl
push
jmp
xor
inc
xchg
movsb
pop
leave
xchg
push
or
rcll
js
out
ljmp
or
push
mov
and
and
pop
push
cmp
insb
hlt
hlt
add
push
and
dec
addr16
xor
adc
aaa
pop
jae
sbb
push
push
mov
jl
sarb
fnstenv
adc
push
repz
push
push
mov
pop
out
sub
out
pop
inc
std
stos
pslld
adc
pop
in
inc
dec
pop
mov
lahf
mov
or
leave
dec
lcall
sahf
out
dec
cwtl
aaa
arpl
jmp
mov
mov
jmp
pop
and
push
rcll
push
cmpsl
mov
cmpsl
mov
inc
or
mov
mov
mov
mov
jns
pop
and
xor
xor
and
mov
mov
divb
jbe
cmp
dec
sbb
mov
cmp
and
mov
hlt
aas
adc
divl
or
popa
popa
push
cld
xchg
iret
aad
repnz
inc
out
add
xchg
outsb
mov
xchg
repnz
fidivs
movsl
cs
xchg
or
sub
xchg
inc
pusha
fdivrs
xchg
cmp
dec
push
xchg
jno
sbb
sbb
sub
cmp
jb
out
lods
and
push
mov
adc
orl
fisubrs
jae
lret
dec
inc
inc
mov
popf
jmp
daa
jae
push
push
shrl
mov
mov
ss
cmp
aad
iret
in
mov
in
andl
flds
mov
sahf
into
call
icebp
jp
adc
mov
jp
pop
ficomps
push
popl
xchg
divl
pop
sbb
popa
cmp
les
xchg
lret
andb
insl
movsl
pop
jmp
jecxz
in
lcall
ljmp
sub
pop
lods
mov
daa
cmc
push
shr
xor
cmpsl
stos
test
fdiv
sub
mov
jle
pop
xor
push
stos
or
adc
movsb
mov
xchg
xchg
sbb
outsl
mov
mov
xor
str
jo
fistpl
into
dec
insl
ja
push
daa
cmp
repz
sbb
dec
inc
sub
scas
test
jno
cmpsl
cmc
push
outsb
lods
insb
movsl
push
jo
jmp
jecxz
sub
jae
adc
mov
cli
insl
dec
mov
ud1
fistl
xor
push
mov
sbb
dec
mov
mov
lods
sub
xchg
xchg
jecxz
in
test
lret
incb
add
pushf
jp
dec
loop
and
pop
repz
push
jb
adcb
pop
cmp
inc
cmp
jo
jl
adc
mov
movsb
push
fcmovnbe
and
cmpsb
pop
addr16
popa
cmp
cltd
getsec
adc
das
imul
lock
cs
dec
pop
sub
mov
inc
jbe
mov
lds
and
pop
sbb
add
mov
and
sub
jb
xchg
xor
ficoms
pushf
mov
add
and
adc
cmc
push
pop
ja
jge
decb
pop
movsl
jne
pop
mov
ss
cld
bnd
cmp
or
add
mov
pushf
fcompl
xchg
in
inc
stos
pop
sbb
dec
mov
pop
pusha
xor
push
jp
push
cmp
cmp
popf
ljmp
mov
jae
ds
inc
arpl
jp
imul
out
cmp
fstl
inc
out
out
fistpl
push
push
push
stc
cmp
sbb
ret
das
xor
inc
sbb
fadds
xchg
popf
rcl
sub
inc
fistpll
aas
fisttpll
mov
das
dec
mov
repnz
push
out
inc
adc
jne
ss
inc
mov
in
mov
cmpsb
lds
dec
jns
push
pop
sub
cmpsl
dec
cmp
cli
mov
add
cmp
dec
sub
in
pop
lods
outsl
iret
push
push
inc
hlt
mov
in
mov
gs
fwait
ja
and
stos
pop
aam
add
add
out
adc
imull
jno
ficoml
sbb
repnz
jp
mov
cmp
mov
imul
mov
mov
mov
insb
ror
mov
outsl
addr16
cwtl
push
inc
push
xchg
lret
or
pop
cmp
sub
pop
out
dec
fstl
mov
ret
test
das
mov
or
dec
mov
cld
lcall
xor
icebp
out
sub
add
mov
pop
ret
cmp
inc
mov
xor
adc
addl
pop
jp
dec
in
orl
and
mov
lds
ljmp
or
jae
mov
test
sti
mov
inc
cld
fistl
test
cld
push
dec
leave
ljmp
xor
sbb
lods
lret
ret
test
loop,pn
pop
push
in
sbb
fbstp
movsb
test
stc
inc
jb
fstpl
pop
rcrb
xchg
push
sub
pop
fwait
cs
stos
insb
xchg
es
sub
jne
lret
mov
inc
pusha
add
enter
dec
sbb
dec
adc
fs
ror
sbb
insb
dec
out
mov
push
adc
fstpt
cli
test
cmp
fisubrs
movsb
inc
lock
jl
push
inc
push
add
xchg
push
pop
jne
adc
imul
popa
aad
fnstcw
xor
sbb
mov
fisubrs
stos
notl
lds
pop
dec
dec
dec
mov
push
pop
outsb
mov
jg
pop
pop
dec
rolb
jge
cmp
negb
lock
adc
xchg
daa
jo
loopne
push
xchg
jl
and
aad
gs
mov
mov
cli
jo
inc
ror
mov
push
inc
aam
mov
fisubl
dec
fadds
cmpsl
aad
sub
push
mov
popa
mov
jg
jno
jg
inc
int
xchg
fimuls
cli
push
mov
ror
pop
leave
and
mov
xlat
clc
jle
in
mov
ja
jo
insb
mov
add
insb
fcmovu
sbb
jle
sub
jl
pop
and
enter
or
outsl
stos
cmp
inc
dec
xchg
outsl
out
mov
and
ja
cmpb
inc
dec
out
fs
jmp
inc
popf
out
ljmp
in
sbb
pop
rolb
cmp
adc
ljmp
outsl
ret
xor
lret
inc
shr
imulb
jge
pop
out
fstl
pop
daa
add
or
mov
sub
xor
les
jg
xor
pop
push
mov
pop
shrl
lahf
add
or
mov
cmpsb
repnz
mov
push
popa
jp
sub
dec
aad
jae
dec
or
shrl
jmp
mov
mov
repz
repz
and
adc
cld
pop
sub
push
jecxz
scas
adc
and
mov
jae
mov
inc
and
fnsave
push
xchg
leave
jo
or
xor
xchg
and
js
clc
xchg
sub
sub
mov
push
add
dec
mov
or
gs
leave
sti
sbb
or
jecxz
cmp
and
call
push
leave
mov
or
rcl
add
loope
dec
inc
inc
lock
xchg
push
jnp
jmp
ss
xor
loop
testb
mov
das
movsb
leave
fwait
outsl
je
sti
lahf
fcoml
xorl
mov
imul
mov
bound
repz
sbb
cmpb
sbb
lods
jg
idivl
mov
in
adc
dec
sti
pop
test
filds
icebp
pop
pop
rcrl
xor
or
repz
push
mov
in
or
in
mov
aas
sbb
push
add
fstps
bswap
dec
pop
out
mov
test
dec
or
push
testl
aas
loopne
and
xchg
int
pop
hlt
outsl
jbe
adc
aaa
ftst
push
xchg
dec
xchg
idivb
sub
sub
lret
and
inc
xchg
xor
and
adc
pop
mov
pop
pop
outsb
adcb
lcall
lock
outsb
sub
pop
xor
pop
lahf
adc
jp
xchg
pop
iret
repz
outsb
adc
jbe
jo
inc
test
test
jmp
fs
movsb
inc
dec
stos
push
fdivl
pushf
outsl
mov
ds
xorl
sbb
and
mov
popa
push
add
mov
cmp
mov
inc
subb
iret
rolb
ret
or
or
enter
mov
ljmp
mov
fsubrs
dec
pop
inc
or
inc
paddusb
push
les
cltd
pusha
fwait
push
das
push
mov
inc
xor
sahf
xor
ljmp
pop
cmpsb
popl
ja
sarl
mov
cmp
mov
idivb
jns
dec
pop
sbb
or
pop
xor
shrb
mov
bound
mov
cmp
in
lock
inc
and
imul
movsb
cld
inc
mov
cld
jae
popf
insb
into
mov
sub
ljmp
xor
and
fcmovnu
dec
pop
fiaddl
add
les
repz
push
add
sahf
dec
shrl
pop
lahf
out
mov
imul
ficoms
and
inc
sbb
dec
jbe
mov
popa
lods
xor
jnp
popa
fidivrl
mov
jo
lret
sbb
jb
rorl
jae
fidivs
xor
loop
les
mov
jmp
mov
daa
cmp
fdiv
inc
pop
sub
gs
jbe
or
ret
inc
stc
fldcw
test
sub
pop
dec
mov
cmp
outsb
sti
sti
into
loopne
cmp
jno
adc
xchg
xchg
fwait
and
pop
cmp
push
sbb
stos
pop
xchg
dec
mov
popf
push
imul
cmp
add
adc
inc
divb
jge
sbbl
sub
jp
adc
scas
inc
in
or
mov
cwtl
je
cmp
daa
adc
in
fucomp
push
pusha
and
sti
push
sub
mov
iret
xchg
iret
lret
adc
lods
mov
movsl
subl
mov
sub
filds
lret
dec
into
xor
dec
and
call
dec
mov
test
push
adc
cmp
cmp
cld
cs
inc
fdivl
lret
mov
xchg
sub
pop
mov
push
xor
add
mov
lock
mov
pop
push
sti
jg
mov
sbb
repz
cwtl
pop
aad
and
mov
mov
shl
xor
mov
cmp
sahf
sbb
dec
sti
mov
scas
xchg
jl
jnp
sbb
fldl
add
jg
dec
stc
sbb
cmp
jns
je
idivl
xor
lods
cmp
or
adc
pop
pop
sar
jp
scas
inc
and
iret
xchg
pushf
adc
imul
jge
mov
hlt
cmp
jmp
push
mov
shrb
inc
loop
lret
mov
push
fdiv
int
cmp
mov
add
jns
sti
ret
scas
lret
xor
sub
fwait
lea
inc
arpl
push
cmp
inc
adc
push
lret
xchg
std
cmc
and
das
pop
xchg
adc
pop
jge
imul
pushf
mov
imul
pop
cmpsb
xor
or
daa
mov
pop
xor
cmp
jae
mov
adcl
or
add
stos
stos
and
outsb
sbb
add
sahf
push
bound
outsb
dec
jmp
mov
arpl
inc
inc
jbe
pop
subb
xor
lcall
and
jg
bound
std
stos
mov
xorl
js
lret
aas
jecxz
mov
xchg
test
adc
dec
scas
mov
adc
sbb
stos
int3
jle
pop
scas
mov
hlt
cmpsl
jp
sub
and
adc
mov
push
mov
pop
repz
lods
adc
fucomp
xchg
sbb
test
aam
cmp
arpl
pop
add
sbb
loop
pushf
adc
cs
jne
dec
jno
std
ret
mov
jmp
jns
push
xchg
inc
bound
lock
push
rorl
inc
jmp
inc
pop
jmp
cmpsb
jo
mov
mov
adc
mov
cmp
xchg
or
arpl
mov
push
mov
cmpsb
rolb
mov
jp
cmp
lods
rorl
mov
sub
pop
push
cmpsb
fistps
inc
out
pop
dec
aas
mov
ret
mov
inc
mov
mov
in
xchg
xor
or
lds
pusha
fstpt
add
mov
inc
cli
inc
push
xor
jo
jmp
addr16
aaa
add
in
or
and
cmpsl
and
add
lcall
xchg
mov
inc
cli
aam
add
je
fisubrl
cmpsl
push
mov
inc
lahf
jmp
cmpb
add
mov
add
xor
and
test
shrb
add
xorl
pop
cmpsb
sahf
xchg
je
pop
push
cmc
pop
je
test
pop
rclb
sti
fcmovnu
addb
clc
rclb
icebp
add
or
adc
adc
jne
in
cmpsl
lods
sbb
push
sbb
daa
js
aas
or
hlt
push
nop
push
jb
aaa
pop
cli
in
inc
testb
mov
shll
xor
mov
pop
push
imul
inc
adc
in
out
inc
mov
xchg
ljmp
mov
ljmp
xchg
jbe
or
in
ljmp
popa
cwtl
adc
std
mov
xchg
rol
mov
stc
nop
xor
pushf
shr
outsb
xor
outsl
and
xchg
repz
clc
test
dec
ss
cmp
mov
mov
incb
adc
adc
aaa
loope
aad
mov
iret
aaa
ss
mov
dec
int
and
movsb
gs
leave
lret
ret
push
movsb
add
mov
sti
cld
push
jmp
xchg
stos
jle
sahf
adc
or
push
test
leave
cmp
loope
pushf
push
jno
lret
xchg
aaa
mov
loope
lods
mov
mov
xor
jns
mov
push
subb
aad
movsb
push
call
test
ss
mov
mov
sti
jbe
aaa
sarb
mov
lods
mov
xchg
xor
loop
cmpsl
sbb
jg
lods
jle
xor
pop
and
cli
and
xchg
sbb
call
out
out
pop
xchg
push
je
nop
bound
xor
or
cmp
mov
mov
mov
insl
xchg
sarl
push
out
xchg
int
test
mov
sbb
inc
inc
jnp
out
cli
xorl
loopne
sub
mov
sbb
sarl
mov
mov
movb
mov
cmp
cli
pop
sbb
mov
addr16
rclb
imul
mov
lods
daa
shlb
push
xor
jo
hlt
es
rclb
aam
ja
dec
arpl
pusha
or
add
cmp
and
outsb
jno
sbb
repz
or
lea
pushf
push
cmp
scas
fsubl
into
adc
pop
ficoml
mov
mov
pop
scas
ret
aam
and
cmp
xor
mov
test
jo
insl
dec
jno
lcall
arpl
iret
inc
xchg
fbld
gs
into
pop
jmp
and
inc
mov
testl
vmwrite
dec
mov
mov
repnz
cltd
xchg
fcomp
mov
sbb
sbb
enter
jae
repz
int3
stos
or
sbb
lods
sbb
aaa
fildl
adc
dec
mov
jge
and
ret
mov
or
js
clc
xlat
scas
xor
ds
inc
into
mov
in
in
andl
and
sbb
nop
test
xchg
outsl
imul
mov
nop
dec
test
adc
leave
or
dec
sub
mov
stos
add
inc
fdivp
loop
sbb
mov
daa
rcrb
push
mov
int
mov
xchg
lods
and
cwtl
and
dec
cmpl
xorb
mov
std
inc
stos
aam
stos
outsl
dec
repnz
ljmp
nop
inc
inc
test
push
push
dec
xchg
dec
or
enter
lahf
pop
push
insl
push
mov
std
jno
and
cmp
test
ljmp
lods
hlt
in
sub
fs
xchg
push
popa
jne
xor
push
cwtl
mov
adc
lahf
sahf
fimuls
out
enter
xchg
inc
xchg
mov
arpl
pop
jne
mov
test
movsb
imul
jbe
popa
data16
test
or
jno
adc
jge
fdivrl
push
lods
outsl
lret
fidivl
dec
and
push
ljmp
inc
adcl
jb
xchg
cmc
pop
sbb
movsl
add
jbe
lods
dec
sbb
pop
int3
mov
inc
cmp
sub
scas
and
jp
mov
hlt
jl
call
loope
cmp
cmp
insb
push
jge
cli
mov
jo
lods
push
xor
cmp
xor
rcll
xor
enter
jbe
push
xchg
or
xchg
push
sub
push
mov
or
mov
mov
sub
cmp
xchg
cmp
in
pop
add
add
cltd
cmpsb
shlb
jle
pop
or
and
xchg
mov
lret
mov
imul
fidivrs
test
sub
pop
test
inc
push
inc
sub
shrb
fsubrs
stc
cmp
mov
pop
xchg
inc
shrl
xor
dec
push
scas
pushf
jmp
fnstcw
adc
stos
adc
xor
mov
mov
insl
pop
mov
dec
inc
sti
mov
xor
popa
pop
in
insl
cmp
pusha
loopne
fstps
sub
pop
xchg
push
add
cmpb
and
test
dec
mov
push
mov
push
xchg
dec
ss
fsubl
out
jmp
leave
xor
adc
sti
div
push
or
das
cwtl
mov
xor
add
xchg
fldenv
cwtl
adc
sub
jp
sahf
mov
push
setb
add
sub
pop
and
mov
std
xchg
push
lahf
mov
idivb
xor
adc
mov
sub
pop
pop
mov
repnz
punpckhbw
mov
mov
fwait
pop
daa
loop
mov
cmp
sbb
les
push
and
push
xchg
pop
cmpsb
inc
subb
add
pop
loop
pop
add
gs
out
adc
out
xchg
or
pusha
lret
dec
push
mov
and
mov
push
scas
pop
mov
ljmp
pop
jge
das
js
loope
jns
filds
push
out
or
enter
jae
pop
sbb
pop
or
pushf
pop
in
push
and
xchg
fsubs
sub
inc
out
adc
jl
jp
and
divb
or
arpl
pop
jecxz
cld
popf
dec
and
sub
mov
mov
enter
push
xor
mov
jg
lods
loope
and
inc
sti
cmp
and
iret
daa
jmp
std
iret
push
sti
std
test
xchg
xchg
repz
and
test
sub
add
xor
pusha
mov
and
faddl
addb
push
dec
test
and
loop
popa
sub
jno
or
sub
mov
out
jmp
outsl
jb
xor
cltd
sbb
pop
lret
hlt
in
jecxz
js
movmskps
jg
scas
adc
cmpsl
xchg
sti
pusha
roll
adc
jb
insb
fucomip
fldenv
lock
pop
inc
lret
jno
das
or
jnp
imul
lods
dec
dec
repz
iret
sub
out
jno
scas
lea
xchg
sahf
es
je
jne
dec
and
sbb
mov
lret
inc
ljmp
pop
jno
mov
dec
imulb
push
jne
ljmp
mov
cld
in
and
sub
jecxz
dec
fiadds
inc
push
aad
mov
test
xchg
ret
ja
sub
xor
out
jmp
jo
adc
mov
lods
inc
call
and
test
push
fdivl
mov
subb
call
mov
xchg
dec
push
insb
jecxz
pop
rol
and
jg
push
addr16
negb
inc
sahf
push
outsb
enter
leave
cli
cmp
mov
cmp
icebp
rcrl
test
lods
jl
pop
sub
mov
cwtl
lock
pop
std
add
and
scas
lods
jae
jecxz
stc
mov
or
lods
std
shr
pop
jnp
mov
pop
xchg
push
gs
sub
fstpt
mov
pop
das
ret
cwtl
xchg
pushf
xor
outsb
popf
out
ret
cmpsl
int3
jmp
in
fs
enter
mov
stos
adc
movsb
inc
ret
js
pop
or
lods
test
mov
sbb
jmp
sub
mov
inc
add
test
mov
fisubs
lcall
mov
sbb
popf
int
mov
aaa
or
pop
xchg
push
lock
and
loopne
sub
insl
mov
cltd
sti
pop
out
daa
jb
test
jg
and
mov
iret
and
pop
mov
arpl
rcrb
mov
inc
loopne
inc
or
cmp
out
push
bswap
adc
sub
jae
lods
fwait
mov
loopne
mov
cvtpi2ps
mov
pop
js
lds
jae
cld
stc
fisubrl
jmp
and
sbb
lret
ret
lret
cmp
fs
dec
sub
and
hlt
pushf
scas
mov
out
push
in
fsubrl
pusha
stos
inc
fnsave
scas
add
dec
aaa
inc
int
fisttps
imull
pop
es
dec
add
mov
add
loop
mov
add
iret
cmp
cmp
mov
xor
mov
mov
rcrl
dec
mov
lret
mov
aad
dec
sbb
or
xchg
sub
adc
jecxz
flds
adc
imulb
insl
out
cmc
cmp
adc
inc
xchg
fimull
js
add
mov
dec
cmp
push
int
push
push
mov
cs
mov
popa
adcb
fidivrs
jle
in
repnz
adc
inc
imul
outsl
dec
bound
dec
leave
fs
xlat
inc
nopl
daa
or
rolb
stos
idivl
mov
fs
mov
aas
add
xor
lods
and
mov
scas
push
into
daa
fmuls
fists
sbb
aam
push
sub
xor
pop
push
push
popa
pop
inc
nop
sbb
into
push
je
enter
push
iret
sti
xchg
and
sarl
cmp
leave
pop
clc
jmp
mov
cmp
mov
hlt
add
mov
mov
divl
push
rorl
aas
mov
lret
jb
xchg
push
std
inc
or
lock
daa
push
stos
jg
or
xor
cmp
add
movsb
or
aad
cmpsb
ljmp
inc
adc
outsb
out
add
roll
and
mov
add
icebp
cmp
and
or
movsl
popa
dec
xchg
pop
cs
xchg
or
out
clc
fsubr
addr16
sti
xor
mov
imul
jbe
cltd
sarb
sbbl
outsb
decl
inc
icebp
or
loope
adc
mov
mov
sbb
hlt
mov
mov
fisttpll
loope
cwtl
sub
mov
xor
cmp
rclb
lock
and
mov
mov
into
mov
aas
cmp
sbb
mov
adc
mov
fistps
seta
add
call
lock
pushl
inc
mov
insb
and
fidivrl
xchg
aam
outsl
cmpsl
or
ret
aas
sub
xor
xchg
ljmp
test
pop
enter
out
fstps
test
push
xlat
or
insb
lds
fildl
xor
add
or
push
push
pop
scas
mov
xorb
dec
out
out
aad
clc
fstl
sti
pop
inc
dec
in
jns
mov
xchg
dec
dec
inc
je
xchg
loopne
and
fnstcw
mov
pop
fsubrl
push
adc
adc
inc
ds
mov
or
lret
pop
mov
push
and
push
in
push
pop
mov
leave
push
fsubl
xlat
inc
loope
out
clc
dec
dec
push
lock
rcl
in
sub
sbb
inc
jo
scas
jbe
dec
fidivs
sbb
push
mov
pop
mov
flds
nop
jl
insb
into
test
lcall
jmp
push
push
in
ret
cltd
cmp
out
sub
lret
sbb
push
test
cmp
mov
shlb
push
hlt
jge
loop
fs
cwtl
in
popa
mov
test
pop
inc
pushf
lret
test
rcrl
std
test
ljmp
push
movsl
inc
adc
mov
and
sub
add
pop
cmpsb
xor
dec
sbb
add
sub
iret
push
and
stos
add
ficoms
out
pusha
daa
dec
xchg
into
and
ret
lock
mov
pop
pop
sarl
mov
mov
xchg
mov
stos
popf
add
cmp
cmp
test
sbb
mov
sbb
jecxz
mov
lods
shlb
fwait
jmp
mov
jno
fldl
lods
pushl
jl
dec
cld
iret
hlt
xor
lret
leave
loope
dec
icebp
mov
pop
rorl
push
pop
sbb
dec
scas
or
cmp
cmp
outsl
pop
shlb
xchg
cs
sarl
daa
mov
sbb
jmp
out
jg
lods
cmp
mov
cmp
rclb
mov
movsb
loope
mov
push
jns
or
cmp
js
sub
cli
sbb
push
pop
xor
popf
adc
add
rorl
xchg
ljmp
mov
dec
mov
mov
mov
insl
add
sbb
nop
sub
and
sbb
testb
push
mov
xchg
in
push
or
pop
sbb
out
dec
mov
inc
ret
mov
stos
inc
push
fwait
out
xchg
pop
ret
mov
nop
incl
mov
mov
mov
jno
cs
lods
pop
inc
pop
pop
jp
adc
je
mov
dec
push
jmp
dec
addl
xchg
sti
xor
movsl
mov
cmp
jg
mov
mov
push
insb
neg
mov
mov
mov
fucomi
add
push
pop
dec
push
and
decb
loopne
jo
adc
stos
xchg
sub
jno
sub
insb
jle
pop
xchg
repz
inc
lods
push
push
call
sub
addr16
adc
xchg
imul
mov
and
add
scas
sub
pop
xchg
mov
mov
xor
data16
mov
mov
mov
jmp
or
int3
lods
js
stos
div
lods
jnp
sbb
xchg
pop
stc
mov
mov
mov
mov
inc
cmp
dec
mov
adc
mov
xchg
fidivrl
rcl
iret
xor
pop
pop
pop
dec
adc
inc
mov
out
jbe
sub
arpl
sub
xor
push
shrb
enter
push
outsb
sbb
sbb
cmc
sub
or
or
iret
pop
add
inc
aad
push
xlat
sub
and
pop
and
cld
flds
cmc
call
test
xchg
enter
cmp
xchg
xor
test
loope
jbe
std
mov
loope,pn
pushf
int3
and
adc
mov
cwtl
pop
cmp
out
and
jmp
scas
int
dec
adc
xor
adc
in
mov
xor
push
jge
xchg
jae
addr16
in
out
fidivrs
add
push
mov
fildll
jno
add
aaa
clc
push
mov
mov
xor
jno
xchg
jecxz
sar
jl
mov
xchg
faddl
sahf
jo
lcall
jns
cmp
popf
cmp
dec
and
pusha
add
or
mov
lods
out
xor
insl
aas
fidivs
push
std
dec
gs
inc
xor
and
pop
xchg
mov
enter
stos
inc
repnz
cld
jg
sbb
mov
adc
or
pop
lea
bound
ljmp
xchg
arpl
inc
rcrb
lret
sub
roll
cmc
add
add
mov
dec
fs
fistps
stc
xor
mov
hlt
mov
testl
es
std
pop
dec
mov
xor
adc
xchg
fwait
sbb
fstpt
mov
xchg
pop
fwait
decb
inc
and
jg
add
outsl
ret
xor
jne
dec
ja
pop
push
lret
push
xchg
inc
int3
dec
dec
icebp
test
pop
mov
dec
movsb
aaa
scas
lods
cwtl
inc
adc
or
out
es
stc
imul
push
clc
or
xchg
mov
enter
imul
push
mov
push
jge
add
popf
pop
push
daa
lods
fnstenv
adc
jmp
jmp
push
add
fstpt
arpl
sarl
jae
inc
leave
into
enter
and
mov
pop
jne
push
inc
adc
les
and
mov
add
pop
inc
xchg
mov
movsb
je
data16
pop
jge
std
mov
data16
loopne
dec
sub
mov
fs
cmc
ja
pop
xor
push
mulb
mov
out
push
testb
add
xlat
lods
xchg
in
or
push
pop
or
and
sub
jno
cltd
outsl
lcall
insb
mov
pushf
push
inc
mov
aad
mov
pop
jecxz
aad
and
inc
xchg
cwtl
rcrl
xor
pop
out
xlat
cmpsl
pop
sbb
jecxz
cmp
ret
sbb
in
ret
mov
mov
sbbb
jo
shll
scas
cmp
xchg
inc
cmp
pop
int3
mov
cmpsl
int3
and
sub
arpl
mov
dec
rorb
mov
dec
ds
lcall
sbb
sbb
lcall
call
jo
js
cli
insl
xor
mov
pop
xchg
and
xchg
sub
pop
inc
xor
adc
repz
pop
xchg
push
inc
adc
pop
aaa
into
je
adc
ss
in
mov
cmpsl
stc
js
push
imul
cmpsl
jle
stc
test
inc
dec
cmp
pop
sbb
push
inc
shll
fnstsw
add
jo
arpl
pop
inc
xor
mov
mov
iret
incb
mov
xchg
mov
aad
dec
add
dec
pop
jmp
cmpsb
lock
xor
loop
sub
add
adcl
je
fxch
pop
adc
mov
push
mov
test
sbb
cmp
shlb
and
push
and
xor
cmp
sbb
pop
bound
sbb
sbb
sub
loope
imul
jecxz
scas
dec
mov
sti
pop
xor
jb
movsl
shll
neg
rorb
in
xor
cmpsl
push
dec
mov
push
xor
push
ret
and
mov
sbb
push
add
jmp
adc
testl
int
lods
xchg
jg
xor
mov
jp
pop
cld
lcall
and
inc
out
shrb
aad
scas
lcall
ja
sbb
ja
mov
cld
jbe
stc
in
out
cmp
adc
je
orb
les
rorl
xlat
fistpll
fld
lods
cmpsb
bound
mov
sbb
or
mov
repz
imul
enter
mov
sbb
jno
inc
das
pop
lret
xor
mov
xchg
jo
cmp
jae
fadd
test
das
aas
test
cld
fidivrs
out
loopne
bnd
sub
push
and
int3
inc
jo
mov
xchg
jnp
and
lcall
bnd
inc
stc
mov
or
shrb
nop
and
jo
dec
std
hlt
adc
notb
or
xchg
call
sub
inc
and
adc
mov
fdivrs
sti
subb
pop
pop
jle
aaa
add
jg
cmc
cmp
mov
mov
lock
ja
loopne
jecxz
cmpsl
scas
xor
int3
sbb
adc
aam
mov
or
into
pop
icebp
es
ss
add
sub
mov
fwait
jns
stc
int
mov
sub
cmc
into
mov
mov
push
mov
std
sbb
pop
insl
cltd
xchg
les
insl
push
or
out
in
sbb
add
outsb
push
mov
pop
jns
shll
orl
fdivrs
push
rcl
jle
jp
jns
stos
ja
dec
mov
lea
in
cmp
imul
hlt
daa
add
sub
stc
xchg
inc
add
stc
stos
movsl
mov
negb
inc
fbld
into
dec
wrmsr
xchg
outsb
adc
and
cld
rclb
pop
negb
idivl
in
pop
mov
xchg
adc
js
adc
into
repz
mov
inc
jno
or
cmp
clc
adc
pop
add
push
push
jp
mov
push
xlat
sub
iret
inc
daa
ds
scas
sbb
ret
test
add
shlb
xor
sbb
xchg
cli
cmpsl
scas
mov
sets
mov
jp
subl
push
jmp
push
ja
in
adc
movsb
imul
mov
sub
xchg
in
mov
in
insl
jp
cmp
mov
ret
adc
add
xor
cli
ja
inc
jle
jno
hlt
mov
test
sbb
arpl
clc
arpl
inc
lahf
pop
pop
xor
mov
fldcw
daa
in
stos
subb
jb
mov
and
repz
outsl
rolb
mov
xchg
jne
mov
mov
adc
data16
dec
testl
push
outsl
popa
jne
cmp
jmp
mov
stos
push
das
mov
adc
stc
testb
xlat
das
and
loope,pt
inc
stos
xor
aad
cmp
xor
shl
and
fistpl
aam
sub
cmp
cmp
jmp
daa
aam
les
in
enter
jne
into
lock
xor
mov
sub
pop
out
ds
js
inc
jge
mov
xor
pop
sub
pop
in
mov
lret
aad
jge
cmp
std
js
fsubr
push
push
push
xor
adc
dec
fistps
sub
xchg
cmp
dec
popf
or
imul
push
out
jecxz
sub
push
testb
loopne
mov
adc
pop
mov
pusha
or
roll
ss
sub
dec
sbb
add
fiadds
cmp
pushf
stc
movsb
int
mov
dec
cmp
fucomip
jecxz
fcoms
mov
shll
repz
push
dec
mov
scas
rorb
pusha
mov
bound
clc
sub
mov
clc
bnd
sti
mov
dec
add
insb
popf
mov
cmp
and
and
add
into
pop
ret
dec
into
xchg
pop
insl
mulb
lds
rcll
mov
xor
jg
adc
shll
sub
jle
in
pop
mov
sub
jb
add
inc
inc
repz
push
dec
loope
jo
push
arpl
mov
lock
mov
loopne
inc
dec
push
mov
dec
test
in
xchg
divb
dec
loopne
mov
popa
mov
out
mov
inc
ret
add
mov
lods
inc
pop
outsb
fcompl
or
xor
push
sahf
mov
ds
inc
pusha
sbb
sti
out
outsb
shlb
lcall
dec
mov
lret
outsl
cmpsb
stc
stc
fisubs
repnz
pop
dec
loop
cli
jo
mulb
xchg
cmp
fcomps
popa
adc
stc
and
mov
jg
and
dec
dec
xchg
pop
icebp
add
into
xchg
push
adc
xchg
xchg
or
add
movsb
test
dec
jne
jo
mov
test
jbe
adc
push
in
fldt
popa
pop
dec
mov
repz
xor
sbb
xor
inc
repnz
in
inc
out
les
pop
jo
js
add
loopne
daa
cmp
jns
ljmp
into
xchg
outsl
jmp
jecxz
cmc
sub
xchg
loopne
sub
adc
mov
leave
fsubrl
mov
maskmovq
imull
movl
dec
xchg
jne
sub
lock
push
les
push
cmp
call
roll
ret
lods
pop
test
hlt
aam
lret
add
push
mov
or
stos
int3
mov
mov
jbe
jle
lcall
mov
cmpsb
cmp
or
cmc
jl
scas
out
cltd
add
mov
mov
sub
loope
cmpl
pusha
popf
jl
sbb
hlt
pop
xor
sbb
in
fisubl
mov
push
mov
outsl
and
inc
lock
push
jge
and
inc
aad
sub
sub
test
or
mov
mov
mov
push
mov
cmpsl
xchg
lock
loope
mov
dec
mov
sbb
stc
or
cmp
addr16
rcr
rclb
jnp
adc
pusha
in
out
movb
dec
mov
ljmp
mov
xchg
inc
bound
dec
add
mov
pop
outsb
clc
push
jbe
cld
ret
and
push
lahf
xchg
sub
add
pop
out
xchg
icebp
sarb
jo
adc
push
pop
adcb
cmc
xor
pop
or
pop
xor
call
xor
mov
dec
lock
jae
sbb
push
imulb
int
rol
mov
in
jne
sub
in
pop
and
xchg
sar
inc
dec
dec
jl
ss
test
adc
leave
rcr
fmuls
mov
sub
mov
das
xchg
push
jmp
and
call
and
push
dec
lret
dec
in
sub
int
mov
xor
jns
lret
push
push
imul
test
stc
mov
fidivrl
and
inc
xor
dec
mov
mov
xchg
fldt
cmpb
jnp
bound
aad
fidivs
xor
int3
mov
into
push
dec
jmp
fbld
pop
shll
std
scas
pop
mov
fsubl
out
xchg
mov
cmp
inc
imul
movsl
ja
xchg
mov
mov
ss
andb
pop
negl
into
movsb
imul
xchg
adc
jmp
fcoml
mov
inc
loop
sub
or
ds
jae
mov
cmc
adc
lods
cmp
dec
xchg
or
insb
idiv
pop
mov
cmc
ja
or
sahf
or
inc
aas
aaa
sbb
or
test
bound
cwtl
add
cld
lds
push
mov
pop
add
test
pop
jnp
insb
bnd
je
lock
and
dec
add
mov
sbb
ss
or
adc
push
push
movsl
stc
sbbb
jo
data16
popa
sbb
gs
cmp
cwtl
pop
mov
jp
pop
fnstenv
mov
loopne
aaa
pusha
orps
aam
stc
test
xchg
add
leave
mov
sbb
testb
mov
loopne
negb
pop
push
aaa
jae
aaa
mov
push
or
pop
cmp
das
pop
inc
and
xor
adc
outsb
jge
xchg
mov
cwtl
and
in
cmp
push
jbe
inc
enter
stos
aas
rcll
sub
leave
jmp
repnz
or
outsl
sub
push
gs
lock
dec
ljmp
imul
fdivl
lock
mov
xor
fnstsw
ficompl
sub
outsb
adc
sbb
mov
lret
mov
stos
xchg
and
stc
fistps
insl
mov
lea
cmp
jb
js
lods
sar
idivl
mov
test
addr16
jg
push
mov
xchg
cmp
in
mov
cmpsb
aaa
dec
mov
mov
rolb
adc
xchg
inc
xor
sbb
pop
cmp
xor
xchg
shrl
add
or
movsb
shlb
xchg
outsl
mov
mov
xor
push
cmp
enter
js
int3
ficomps
mov
ret
and
push
mov
mov
mov
lea
fs
out
scas
mov
addr16
or
nop
lock
ljmp
idivl
cmp
icebp
nop
sub
mov
addr16
xor
jb
jbe
aam
std
xor
push
xchg
loope
subl
push
xchg
and
mov
adc
mov
insb
pop
mov
sbb
mov
ds
cwtl
dec
push
xor
mov
add
jmp
in
jns
clc
sub
mov
div
sbb
andb
outsb
or
mov
mov
pop
aaa
pop
xor
mov
mov
lret
adc
lods
roll
mov
xor
inc
in
add
sbb
cmp
inc
inc
fs
test
fs
push
loope
and
xchg
push
aad
dec
pushf
cmpsl
adc
adc
pop
les
sti
repz
jle
mov
add
dec
push
mov
int3
adc
mov
jp
pop
lahf
fisubs
vmread
add
inc
or
xchg
sub
or
mov
ret
cmp
pop
adc
or
jp
inc
lea
jg
mov
rol
xchg
jne
or
push
lahf
bnd
ret
adc
pop
pop
jbe
scas
add
nop
push
sub
call
add
lods
push
sub
pop
movsl
int
sbb
jge
js
mov
push
insb
sub
ret
push
cwtl
push
stos
push
xor
clc
or
ret
add
push
mov
jnp
jle
cmpsl
cmp
mov
icebp
call
and
adcb
inc
or
ds
aaa
inc
inc
adc
add
incb
bound
rorl
xchg
pop
sub
test
push
adc
movsb
or
and
jae
and
into
add
test
ja
cltd
xlat
leave
ret
sub
jp
push
ss
scas
jne
ds
into
cmpsb
or
leave
stos
jbe
and
and
or
and
test
jb
xor
ret
xchg
divb
fimuls
lea
xor
mov
test
mov
out
icebp
ret
sub
jmp
mov
outsl
dec
push
jp
add
push
insl
sub
sbb
xor
cmp
stc
push
cmpsl
mov
ja
shlb
adc
nop
insb
fdivl
imul
xor
mov
rcl
dec
mulb
inc
xchg
into
jl
pop
fldcw
test
mov
xchg
pushf
jge
mov
xor
int3
in
and
sbb
xlat
rolb
mov
filds
sbb
aaa
inc
mov
sub
je
mull
inc
idivb
push
xor
lahf
push
add
mov
test
lcall
cmp
subl
cltd
adc
mov
test
out
push
sti
cmc
pop
adc
lret
mov
dec
sub
mov
or
or
mov
dec
int
cli
mov
jg
dec
inc
dec
lods
and
std
push
sub
rorl
into
mov
xlat
fsubrl
xchg
or
cmp
jns
out
sub
sub
dec
lret
mov
lds
dec
hlt
cs
push
daa
frstor
sub
lds
fwait
and
or
aam
aaa
mov
enter
mov
les
shll
cmp
fiaddl
hlt
lods
xor
test
jp
mov
and
fstps
scas
iret
movb
cmp
jecxz
sbb
jle
int
lods
push
mov
addb
imulb
pop
cmp
hlt
adc
das
mov
sbb
leave
out
sub
cmc
xchg
fwait
or
in
aam
sbb
xchg
inc
popa
xor
aaa
fs
ljmp
push
mov
imul
adc
cld
cmpsb
sbb
add
psadbw
nop
lods
pop
orb
sbb
rorb
add
sub
sub
enter
insl
mov
sbb
insb
addr16
sbb
jge
sub
xchg
test
push
pop
sbb
or
inc
jle
iret
dec
cltd
ljmp
sbb
add
lods
bswap
orl
js
xchg
add
fstl
mov
fcmovnb
jp
dec
sub
sarb
outsl
addr16
jae
jmp
insb
imul
mov
mov
jmp
push
loope
je
fwait
push
jmp
adc
loop
jo
call
sahf
pop
jp
xchg
pusha
adc
dec
fsubl
inc
xor
idivl
fists
lds
jnp
mov
ret
sbb
pop
mov
adcl
inc
in
push
stos
pusha
or
test
lock
out
and
das
movsb
push
xchg
clc
les
mov
mov
lahf
cmp
jo
sub
loope
popa
mov
js
lret
dec
rorl
fdivrl
add
cmp
fiadds
mov
fs
lret
push
inc
outsl
and
gs
bound
sub
cmp
in
movsb
jnp
or
loop
dec
pop
cld
adc
pop
mov
shl
test
mov
xor
jb
add
add
or
subw
and
jmp
fmull
sub
leave
mov
int
scas
jmp
and
mov
mov
fcmovb
mov
xchg
insb
imul
fldcw
or
mov
pextrw
xchg
shr
jmp
sub
cltd
ret
xor
fdivs
fisttpl
scas
mov
clc
popa
fwait
bound
daa
dec
mov
add
add
add
push
pop
dec
cmp
sarl
lret
loope
mov
push
cltd
xchg
mov
aas
sbb
adc
arpl
or
jb
call
les
push
pop
mov
cli
jecxz
push
ret
mov
xchg
xlat
aaa
or
and
xor
test
mov
test
mov
mov
dec
and
and
pusha
xchg
popa
push
push
push
or
pop
inc
gs
out
js
jnp
fdiv
mov
xor
inc
outsb
aas
dec
adc
mov
xchg
dec
jl
push
lods
mov
cmp
ljmp
data16
mov
mov
lret
cltd
sub
mov
out
mov
sbb
ds
rcrb
mov
lods
jns
xor
push
jmp
pop
out
sbb
fsts
pop
adc
xor
and
test
test
sub
mov
int
and
and
js
lcall
add
and
lcall
inc
dec
pop
inc
mov
adc
int
push
sbb
lea
ljmp
cmc
mov
sbb
push
aam
mov
shl
lods
jne
xchg
dec
inc
add
add
cmp
outsb
cwtl
xchg
add
push
fldl
xchg
or
mov
dec
loop
or
pushf
jle
icebp
sub
dec
lret
repnz
pop
pusha
push
push
lods
fnstcw
inc
push
jne
pop
xchg
or
or
in
cmp
ret
xchg
xor
lds
arpl
arpl
or
mov
jns
lods
in
pop
mov
cmp
mov
pop
dec
mov
dec
call
push
pop
test
inc
jle
cli
xchg
aaa
popf
dec
add
sub
pop
add
and
xchg
and
jae
shlb
pop
pop
or
pop
icebp
cltd
leave
insl
cmp
sbbb
push
push
dec
mov
cmp
inc
cmc
fcoml
push
xchg
push
std
cmp
faddl
xchg
sbb
dec
addb
flds
pusha
cmpsl
lret
push
mov
aas
cltd
pop
and
push
ret
sbbb
inc
adc
mov
out
mov
out
insl
push
inc
dec
les
xor
pop
rcrb
ja
bound
pop
jmp
cmp
pop
pop
or
push
imul
out
mov
popf
insl
notl
inc
pop
sub
mov
cmp
and
push
shrb
inc
mov
jecxz
sbb
mov
or
imul
sbb
test
push
jl
jns
add
lea
pushf
mov
sub
int3
pop
decl
xchg
lods
xor
and
icebp
fsubs
sbb
dec
or
xchg
mov
push
mov
arpl
cmp
and
faddp
cmpsb
notb
shr
push
cmp
rcl
lds
pop
leave
cld
pop
cmp
xchg
pop
sbb
sarb
dec
adc
sbb
pusha
xchg
out
jl
lret
mov
xchg
mov
dec
push
pop
xor
test
add
jb
aas
push
lahf
lds
add
sub
rcll
dec
xor
jno
cmpsb
mov
movsl
adc
and
add
or
test
hlt
push
xor
and
mov
notl
pop
hlt
arpl
lods
add
xchg
rolb
pop
test
pop
jl
orb
push
cs
xor
mov
popa
lock
scas
xchg
and
pushf
stos
xor
int
pop
das
sbb
test
adc
out
add
loope
lcall
dec
and
adc
adc
adc
cmp
adc
or
xor
inc
jle
ficoml
sbb
xor
push
scas
adc
inc
es
hlt
cwtl
jecxz
mov
dec
ljmp
int3
movsl
mov
mov
outsb
call
aaa
sub
and
ud2
daa
mov
cld
stos
inc
cmp
push
dec
jl
sub
mov
dec
rorl
and
jbe
out
imul
pop
daa
mov
inc
add
fildll
movsl
pop
mov
cmc
test
xor
or
dec
rclb
mov
dec
adcb
add
fistl
lds
addl
cli
mov
roll
sub
cmc
jmp
push
movsl
push
repz
pop
pushl
pop
adc
push
push
push
push
xchg
jae
fdivl
and
js
ljmp
cltd
pop
sub
mov
pushf
jg
and
int
cltd
test
in
inc
nop
clc
jecxz
loope
test
mov
xchg
add
aam
lea
pop
inc
or
test
dec
fmuls
and
repz
popa
mov
sbb
sahf
xor
sbb
add
out
imul
push
jae
jb
or
mov
aad
movsb
test
lea
add
xchg
adc
cs
xor
pop
adc
mov
cltd
sbb
popa
loopne
and
mov
bswap
cwtl
inc
in
aam
or
push
ss
pop
cld
into
je
in
fstl
cld
ret
insb
inc
xor
faddl
adc
cmp
sub
cwtl
inc
sub
add
pop
rclb
push
mov
lods
sahf
mov
cmp
lds
pop
add
pop
dec
xor
dec
cltd
andb
pop
inc
sbb
ret
popa
test
inc
dec
mov
pop
mov
ficompl
xor
mov
test
inc
mov
pop
popf
push
data16
gs
orb
sbb
sbb
add
lods
jmp
movsb
shl
dec
dec
aaa
jne
out
fwait
pop
aaa
xchg
mov
or
daa
arpl
adc
jbe
sahf
pop
xor
mov
imul
pushl
and
mov
xchg
xchg
pop
pop
pop
repz
and
hlt
insl
mov
mov
xchg
add
data16
test
jge
in
shl
push
pop
jge
rcll
bound
adcb
lock
mov
sti
inc
mov
aas
adc
loopne
cmp
or
ljmp
les
outsl
lret
sbb
loope
push
sbb
dec
pop
push
cmp
int
orl
stos
sbb
xor
rep
aam
and
push
pop
mov
push
sbb
sbb
into
pop
out
pop
xor
jp
add
and
cwtl
dec
xrelease
data16
lcall
mov
aas
push
cmp
sbb
jnp
sub
xor
pop
push
or
sbb
lret
inc
iret
xchg
pop
ljmp
rol
fstpt
mov
mov
dec
pop
add
lods
roll
mov
xlat
jle
iret
fwait
jne
vmread
ja
push
repnz
jge
lahf
aas
mulb
fldt
push
out
mov
mov
pop
das
and
mov
stc
mov
push
imul
adc
fisubs
mov
dec
and
loopne
jb
fcmovne
cmp
push
and
inc
mov
enter
stos
pop
add
subb
push
add
sub
push
and
push
or
mov
push
loopne
mov
mov
sub
mov
mov
cmp
pop
aaa
adc
sub
lret
lock
mov
mov
push
adc
addr16
fistpll
xchg
enter
stc
sbbb
pop
mov
inc
sti
cmp
mov
sbb
into
outsl
xchg
mov
inc
cmp
ds
lock
shll
lret
in
lea
shlb
ss
or
mov
outsl
add
mov
mov
fildl
test
fwait
jp
in
push
dec
push
inc
mov
push
out
jb
loope
jge
test
adc
mov
xchg
rcl
pop
jno
dec
repz
scas
inc
out
add
mov
adc
rcll
jne
nop
sub
mov
cmpsb
add
and
jge
dec
mov
popl
dec
enter
dec
cmp
ss
jl
insb
push
inc
jno
mov
js
mulb
in
cmp
cltd
dec
inc
pop
ljmp
sbb
and
xchg
ljmp
stos
orl
nop
mov
xchg
push
cltd
lea
adcl
push
jmp
cmpsl
adc
cmpsb
mov
push
adc
jl
or
icebp
inc
mov
ret
add
pusha
in
repnz
sbb
cmp
dec
mov
sahf
in
cmp
pop
jbe
lret
cmp
push
js
dec
inc
mov
mov
enter
out
hlt
push
vmread
add
lock
cmpsb
nop
sbb
mov
hlt
aam
add
xchg
inc
loope
push
add
add
sbb
orl
push
cmp
mov
arpl
add
push
mov
and
aam
lods
repz
dec
jecxz
int3
pop
pop
in
cs
repz
dec
sub
dec
push
aaa
cs
les
cwtl
add
xchg
sub
scas
out
mov
nop
sbb
pop
dec
adc
arpl
mov
icebp
mov
dec
je
test
or
cmp
jbe
out
xchg
jne
negl
push
pop
inc
shl
test
mov
cli
inc
fimuls
filds
lcall
lds
mov
loopne
rorb
test
inc
add
shrb
and
lods
xchg
fsts
lret
mov
pusha
jb
movsb
loope
lret
xor
xchg
dec
sub
pop
push
jno
jne
sahf
ss
pop
pushf
push
jnp
pushf
mov
mov
add
mov
ret
out
push
call
mov
gs
sub
js
or
mov
jbe
movsb
mov
out
nop
mov
sbb
sbb
cmpsb
ror
cmp
insb
jge
push
loopne
fcompl
test
dec
gs
sbbb
adc
mov
js
jle
stc
inc
jnp
stc
sub
fiadds
mov
ljmp
cld
jl
lods
xor
jmp
xor
xor
iret
test
jecxz
sbb
dec
adc
mov
dec
jnp
mov
scas
pop
pop
test
and
into
push
enter
aam
mov
je
xor
lret
fsts
rcrl
inc
mov
movsb
iret
in
fstps
mov
jo
std
xor
scas
xor
jnp
xor
mov
cmp
jle
scas
or
addr16
hlt
xorb
frstor
sub
les
jl
xor
sbb
daa
push
push
arpl
insl
sbb
push
mov
test
and
xchg
rol
mov
stos
cmovs
cmp
adc
fsubs
or
mov
mov
jge
repz
inc
loopne
and
pop
popa
pop
cmp
repz
jb
push
mov
mov
pop
pop
adc
ficoms
fs
push
sbb
cmp
push
sbb
out
adc
movnti
cld
adc
loopne
or
jb
pop
andb
adc
cmp
jecxz
je
loope
xorb
jmp
xchg
sub
loopne
mov
dec
push
inc
jbe
inc
cltd
in
sahf
pop
popf
or
mov
jle
cltd
xchg
sub
mov
jnp
aaa
aas
in
shl
jl
xor
pop
int
outsl
pop
clc
push
cmp
in
movsb
adc
inc
xor
adcb
cwtl
adc
xchg
sub
push
mov
bound
loopne
jb
sti
adc
pop
test
enter
mov
sbb
cli
jns
paddsw
and
sbb
loope
lock
lods
andb
aam
xchg
inc
add
orb
mov
adc
daa
enter
xchg
out
les
icebp
dec
sbb
sbb
mov
add
leave
clc
pop
cmp
imul
jb
jnp
fidivrl
inc
or
shlb
lods
mov
fcmovnbe
or
inc
shlb
mov
push
add
scas
xor
mov
or
outsb
dec
or
and
xchg
in
and
push
rcrb
xor
push
ja
and
icebp
daa
jmp
int3
inc
sbb
mov
xlat
rcll
or
push
iret
jnp
mov
lea
sub
std
push
mov
sbb
dec
out
sti
in
push
ret
in
sahf
push
repz
in
clc
mov
dec
fdivrs
or
xor
sbb
ficomps
lcall
inc
stos
sbb
jle
jp
push
jb
and
negb
stos
dec
lret
sbb
push
adc
pushf
int
ja
inc
lods
ja
push
dec
dec
inc
fs
adc
pop
rcrb
inc
clc
fs
movsb
add
mov
add
insb
sbb
sbb
cld
cld
addl
adc
clc
repnz
push
fnstenv
xchg
jle
lret
sbb
daa
rep
sbb
push
and
js
lret
mov
mov
gs
mov
lods
and
adc
cs
xor
mov
mov
jnp
mov
pop
call
mov
mov
inc
jns
and
fstpl
xchg
jge
and
inc
stos
es
dec
lcall
xchg
cwtl
test
stos
mov
push
add
jns
fdiv
sub
ret
inc
sbb
mov
outsl
or
jle
mov
daa
orl
xchg
pop
lret
pop
out
push
add
test
mov
orb
and
and
out
fnstcw
lods
cmp
inc
mov
stc
sbb
aam
ljmp
stc
addb
es
adc
pop
addr16
sub
push
push
es
mov
enter
cltd
aaa
popa
es
mov
dec
cmpsl
test
sub
or
mov
mov
mov
cmp
cltd
push
lahf
pop
push
ret
sbb
sahf
fbld
ss
stos
push
in
mov
in
mov
or
jne
inc
jns
jne
or
mov
sub
jl
js
cmc
lret
jecxz
jecxz
sub
xor
mov
mov
leave
add
out
pop
sbb
or
test
cs
inc
add
mov
aas
jb
inc
cld
lahf
push
rolb
test
shrb
push
js
push
pop
mov
xchg
add
mov
ja
pushf
mov
aas
repz
adc
xchg
hlt
pop
call
sti
jne
ljmp
les
pop
popa
icebp
cmpsl
mov
push
lock
lds
pusha
sub
push
pop
ss
shrb
sub
xor
sahf
iret
sbb
das
lock
push
push
push
xchg
pop
mov
or
push
ds
cs
xchg
std
aas
aaa
ret
pop
outsl
push
adc
lret
inc
cmp
repz
test
dec
pop
pop
push
jno
push
pop
push
sbb
shr
mov
ja
sbb
call
dec
data16
shlb
mov
leave
out
jns
sbb
mov
test
mov
clc
dec
rorl
outsl
mov
sti
cmp
pop
xchg
lret
ficompl
mov
in
dec
cli
rcrl
cmpsb
stos
hlt
mov
mov
dec
push
cmp
dec
mov
sti
iret
sub
inc
out
or
in
or
cmpsb
cmp
fnstenv
lods
adc
iret
push
loop
push
cmp
and
ss
dec
cli
mov
and
scas
xchg
leave
push
cmpsl
mov
xchg
xchg
lret
xor
fs
or
push
mov
mov
rolb
xor
data16
fwait
ds
dec
outsb
mov
daa
jae
rol
into
pop
sub
cltd
mov
jns
lds
aaa
mov
jle
mov
cmpsb
movsb
lods
and
daa
movsl
test
xchg
lahf
jle
mov
stos
faddl
sbb
mov
test
and
inc
call
and
pop
jb
or
test
loope
dec
les
pop
sub
mov
inc
out
mov
mov
cmp
test
or
repz
jg
test
or
push
add
fwait
inc
cmp
nop
je
sub
loope
jp
adc
rorb
pop
push
xor
lret
jge
shll
xchg
cmpsb
xchg
icebp
leave
mov
lock
push
sub
inc
add
xor
enter
push
pop
sub
aaa
mov
pop
mov
test
pop
inc
sub
movsl
sti
rcrl
mov
mov
mov
push
pop
popl
ljmp
rolb
rol
incb
orl
in
add
pusha
xchg
sbb
or
push
mov
popa
xor
mov
mov
cmp
inc
xchg
xchg
stc
sbb
xchg
or
mov
cld
std
pusha
pushf
dec
sahf
pop
shll
or
xchg
imul
jbe
xchg
and
lahf
jle
dec
jp
ss
test
mov
imul
push
popf
cmc
loopne
lret
dec
fdivrs
popf
mov
outsb
pop
gs
cmc
mov
pusha
daa
mov
shll
xchg
adc
jmp
jecxz
jbe
sub
out
dec
jle
aad
mov
ret
inc
sbb
xor
push
icebp
and
adc
mov
subl
push
add
in
ljmp
xchg
lret
xchg
xchg
sbb
dec
xchg
lret
out
jno
mov
push
inc
sub
pop
and
imul
stos
fwait
jge
mov
sahf
sub
scas
idivl
mull
push
mov
inc
loop
and
pop
xchg
pop
cltd
cmpsl
jecxz
adc
ljmp
rclb
repnz
shr
shl
ret
in
cmp
test
jge
add
push
filds
mov
mov
jl
lods
xchg
jns
call
fucomp
pop
xchg
mov
cmp
loope
flds
repz
aad
xchg
out
xchg
xchg
xor
es
mov
jne
fwait
or
jg
mov
dec
adc
sti
add
adc
icebp
mov
mov
addr16
fnstenv
lds
stos
and
mov
es
cmp
push
pop
and
mov
mov
inc
push
ja
arpl
shrb
sti
sbb
arpl
pusha
movsb
insb
and
push
outsl
xor
rorl
inc
and
xor
lds
sub
mov
es
mov
lods
and
jle
ficoml
and
lahf
test
cmpsb
jg
nop
js
xorb
push
push
pop
cwtl
cmc
leave
lret
push
scas
mov
xchg
testl
mov
test
pop
ficoml
lahf
dec
fsubrs
jo
pop
pop
cmpsb
jle
mov
pop
mov
xchg
and
adc
cmp
pop
aaa
pop
xchg
leave
inc
xor
add
mov
xor
xor
dec
cmpsb
sbb
push
adc
imul
andl
movsl
cltd
addr16
or
out
int
jg
pop
dec
inc
rolb
adc
and
jle
mov
enter
sub
xchg
sub
inc
loope
jle
int3
mov
jnp
push
adc
jmp
dec
xchg
outsb
lock
inc
fsubl
xchg
mov
popf
dec
leave
sub
pop
push
gs
out
ja
fsubrs
add
inc
testb
inc
mov
repnz
iret
inc
cmpsl
divb
cwtl
mov
imul
jns
push
out
insb
movl
gs
adc
mov
cmpb
loope
mov
into
pop
xor
outsl
dec
xor
adc
cs
xor
mov
sub
mull
and
and
xor
push
std
add
push
xchg
stos
sbb
std
cmpsl
jnp
xchg
dec
imul
jnp
xor
xchg
xor
xchg
inc
movntq
out
fbstp
mov
rcl
sbbb
movsl
push
dec
dec
imull
adc
addr16
jbe
pop
dec
inc
lcall
or
outsl
mov
sbb
ret
popa
lahf
lock
mov
dec
lahf
jg
insl
inc
xor
mov
xchg
add
inc
enter
fsubrl
or
ljmp
arpl
jnp
jg
repnz
pop
cld
jne
mov
and
jae
sbb
jns
scas
test
js
mov
xor
dec
and
xchg
cmp
mov
inc
or
jmp
jl
punpcklwd
sub
push
adc
sarb
outsl
lret
cmp
scas
ds
push
out
mov
pusha
rclb
or
xor
xchg
pop
cmpsb
add
mov
xchg
add
cmp
fadds
dec
sbb
loop
lcall
push
and
int3
sub
push
pushf
nop
push
stc
pusha
ficompl
cmpb
js
cwtl
scas
idivb
push
std
mov
xlat
xor
jno
fsubl
pop
cmp
dec
test
and
add
jbe
imul
lods
hlt
dec
adc
inc
push
adcb
fwait
xorb
dec
mov
mov
fisttpll
lret
cmp
xor
xlat
scas
xchg
add
out
sub
inc
icebp
push
mov
xchg
fisttpl
add
clc
nop
mov
xchg
js
sub
imul
xchg
xor
xchg
mov
nop
add
cwtl
hlt
repnz
stc
out
fists
xor
ret
jns
ja
js
push
mov
out
add
int
mov
aaa
mov
icebp
into
xchg
mov
or
adcb
data16
inc
dec
jle
pop
shrl
jne
jmp
jle
inc
mov
xchg
cmp
mov
push
loop
movsb
or
fimull
jo
mov
xor
out
sub
xchg
icebp
push
test
stos
push
cld
or
mov
inc
mov
dec
add
roll
xchg
jo
mov
iret
sub
jnp
mov
insb
and
mov
sub
test
and
inc
and
gs
imul
jae
test
ret
out
data16
into
push
insl
mov
mov
push
inc
cli
inc
xchg
mov
mov
sbb
and
fidivs
addr16
dec
cmpsb
es
shrl
je
inc
js
pop
dec
sarb
clc
sbb
mov
movhps
les
fimuls
adc
in
shlb
cld
fwait
jg
pop
push
xor
mov
push
add
jle
xchg
dec
scas
mov
push
adc
bound
mull
adc
negl
inc
popf
dec
mov
add
or
jo
mov
xor
or
fdivrs
sub
hlt
mov
repnz
or
pop
push
push
sub
cli
outsb
popl
pop
fdiv
xor
movsl
mov
or
jge
sub
xchg
imul
cli
push
add
or
ds
aaa
das
xor
loopne
xor
push
inc
sub
and
data16
xchg
pop
sub
or
rorl
add
sbb
in
std
adc
push
mov
xchg
cmp
sti
jecxz
aaa
addb
clc
mov
mov
sbb
push
inc
xlat
jl
andb
xlat
fidivs
imul
push
jecxz
stos
and
or
xchg
sbb
mov
dec
pop
scas
inc
xchg
out
mov
mov
adc
mov
out
or
stos
leave
frstor
sbb
out
pop
jge
sbb
aaa
mov
gs
repz
inc
les
cld
push
scas
xor
lods
and
dec
hlt
test
repz
insb
arpl
jne
push
pop
and
in
gs
or
mov
lods
sub
inc
fldenv
call
sub
iret
hlt
mov
push
ja
sti
add
popa
jb
sbb
pop
pop
jge
xchg
mov
imul
add
out
and
in
fwait
out
inc
imul
mov
sub
fsts
dec
xor
data16
.byte
