push
mov
sub
movl
call
mov
push
push
push
mov
push
call
push
push
push
mov
push
call
test
jne
call
mov
cmpl
jne
push
push
call
call
cmpl
jne
push
push
push
call
push
call
call
cmp
jne
mov
mov
mov
push
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
mov
push
call
mov
mov
push
call
lea
push
push
push
mov
push
call
push
push
push
mov
push
mov
push
call
mov
cmp
jbe
movl
mov
push
call
mov
push
mov
push
call
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
push
mov
push
call
mov
push
push
call
mov
movl
movl
movl
push
mov
push
call
mov
lea
push
call
mov
pop
ret
push
mov
push
mov
mov
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
cmpl
jne
xor
jmp
mov
push
mov
push
call
mov
push
call
push
push
push
call
mov
mov
pop
ret
push
mov
sub
push
lea
push
push
mov
push
call
mov
mov
cmpl
je
cmpl
je
cmpl
je
jmp
mov
and
mov
mov
shr
and
and
mov
mov
mov
cmpl
je
cmpl
je
jmp
push
push
mov
push
push
mov
push
call
jmp
mov
push
call
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
jmp
lea
push
mov
push
call
mov
lea
push
mov
push
call
push
lea
push
lea
push
call
add
push
lea
push
mov
push
call
lea
push
mov
push
call
jmp
push
call
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
xor
mov
pop
ret
push
mov
push
mov
mov
cmpl
je
cmpl
je
jmp
mov
jmp
mov
and
cmp
je
mov
and
cmp
jne
mov
and
push
mov
push
call
mov
jmp
xor
mov
pop
ret
push
mov
sub
movl
push
mov
push
call
add
mov
mov
push
call
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
cmpl
jae
mov
mov
mov
add
mov
mov
push
mov
push
call
add
mov
xor
mov
div
test
jne
movb
jmp
mov
xor
mov
div
test
jne
lea
push
push
call
jmp
mov
xor
mov
div
test
jne
movb
movb
jmp
mov
movl
mov
mov
pop
ret
push
mov
push
movl
xor
mov
pop
ret
push
mov
sub
movl
push
push
push
push
call
mov
mov
push
call
mov
movl
mov
mov
pop
ret
push
mov
push
movl
push
push
push
push
call
mov
cmpl
jbe
mov
movl
mov
movl
mov
mov
mov
push
push
mov
mov
push
call
add
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
push
push
lea
push
call
add
movl
cmpl
je
movl
push
push
call
mov
cmpl
je
push
push
push
push
call
mov
push
push
push
push
mov
push
call
mov
push
push
push
mov
push
call
mov
push
call
movl
movl
cmpl
jne
movl
push
push
lea
push
call
add
lea
push
call
mov
add
mov
jmp
push
push
mov
push
push
call
mov
mov
mov
movl
cmpl
jbe
mov
push
push
call
movl
cmpl
je
movl
push
push
push
call
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
push
push
push
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
push
call
mov
pop
ret
sub
sub
sub
sub
sub
sub
sub
adc
cmpl
movaps
sub
mov
or
add
sub
dec
or
subl
sub
sub
sub
add
dec
or
subl
sub
add
rolb
dec
or
andl
lock
add
rolb
dec
or
xor
push
or
mov
sub
sub
sub
sub
sub
jae
mov
mov
mov
xor
sub
mov
mov
mov
mov
xor
sub
imul
mov
mov
mov
mov
mov
jmp
sub
sub
sub
add
mov
mov
mov
cmp
sub
sub
sub
sub
add
jmp
sub
sub
sub
add
dec
or
subl
sub
add
rolb
dec
or
andl
lock
add
rolb
dec
or
xor
push
or
mov
sub
subl
add
mov
mov
mov
cmp
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
adc
push
mov
add
jmp
mov
or
mov
shll
mov
inc
mov
add
push
mov
add
mov
shll
mov
inc
mov
add
dec
mov
andl
dec
jnp
jnp
jl
packssdw
mov
add
mov
xor
push
lret
cmovne
mov
mov
add
jmp
cmovge
add
jmp
mov
or
andb
mov
andl
mov
sidtl
dec
mov
add
andb
mov
andl
lods
verr
inc
mov
nop
mov
adc
mov
mov
test
shll
xchg
mov
dec
mov
add
adc
push
mov
add
xchg
mov
add
jmp
mov
lods
mov
add
or
add
or
add
xchg
or
ret
inc
or
nop
or
dec
or
add
inc
or
add
mov
add
or
inc
or
add
mov
add
xor
add
mov
mov
add
pop
or
mov
add
mov
mov
decl
decl
lods
or
add
or
add
or
add
stos
add
add
or
add
lock
add
push
stos
mov
lock
add
mov
stos
bts
add
push
stos
mov
cmp
add
xchg
stos
add
add
loopne
add
subb
stos
mov
push
stos
add
mov
add
add
mov
subl
stos
lods
add
stos
mov
add
mov
add
mov
subl
stos
lock
stos
mov
add
mov
mov
cmp
or
add
mov
add
add
addb
add
inc
ljmp
xor
mov
or
xadd
rorl
shl
add
mov
or
mov
add
add
adc
jmp
insl
push
rol
lods
loop
roll
add
jmp
mov
or
roll
add
rorl
add
add
rorl
add
insl
push
rorl
mov
or
roll
add
rorl
add
add
roll
add
pop
insl
dec
rorl
add
add
dec
ljmp
mov
or
leave
insb
mov
adc
add
rol
mov
or
roll
add
rorl
xor
mov
add
xadd
insl
inc
rorl
mov
or
roll
add
shr
jmp
inc
dec
rol
lods
roll
add
add
jmp
mov
or
add
loop
rol
mov
or
add
push
rorl
andl
arpl
aaa
or
add
loop
rol
mov
or
add
push
roll
add
pop
mov
mov
mov
cmp
jae
mov
mov
mov
xor
mov
or
adc
add
dec
or
xchg
mov
dec
or
mov
fisttpl
scas
ret
adc
adc
adc
adc
adc
adc
adc
jmp
jmp
adc
adc
adc
adc
adc
adc
adc
mov
cld
mov
or
add
mov
adc
adc
add
mov
mov
add
mov
mov
mov
mov
mov
mov
push
adc
adc
add
adc
adc
adc
add
push
call
add
adc
adc
mov
cld
adcl
add
add
adc
adc
add
incl
add
call
call
mov
mov
mov
dec
andb
xchg
fiadds
xchg
jb
adc
mov
lods
xchg
xchg
mov
xchg
sti
add
scas
xchg
add
movsl
xchg
add
push
mov
lods
xchg
xchg
or
or
xchg
add
add
add
dec
mov
sbb
add
or
adc
icebp
add
add
or
cmp
xchg
adc
shrl
icebp
add
add
push
xchg
xchg
add
jne
lcall
aam
adc
adc
or
xchg
xchg
pushf
mov
or
mov
add
mov
or
mov
add
cmpl
mov
xchg
cli
aaa
adc
mov
je
add
mov
xchg
mov
mov
or
andb
xchg
adc
mov
mov
cld
or
inc
mov
je
xchg
das
mov
or
xchg
xchg
adc
or
xchg
xchg
xchg
xchg
pop
add
rorl
or
xchg
pop
add
add
mov
cwtl
mov
xchg
daa
add
add
adc
mov
mov
inc
add
dec
mov
xchg
daa
add
mov
or
mov
add
mov
mov
fmull
adc
adc
mov
jmp
push
lcall
aam
or
xchg
or
add
cmp
add
andb
add
mov
mov
mov
add
andl
add
mov
movl
inc
mov
mov
xchg
add
push
or
mov
mov
add
mov
mov
pop
or
add
or
mov
cmpl
jbe
mov
mov
mov
adc
mov
mov
mov
rorb
add
mov
dec
or
add
fimuls
mov
mov
mov
mov
mov
adc
pop
add
add
scas
add
add
add
add
aas
mov
mov
lds
mov
mov
mov
mov
xchg
add
dec
or
mov
mov
lds
mov
mov
mov
xchg
pop
jae
mov
mov
mov
cmp
jae
mov
mov
mov
xor
mov
add
mov
dec
or
add
fisttpl
rorl
loopne
add
mov
mov
mov
jmp
mov
movl
jmp
mov
mov
xchg
add
pop
or
mov
mov
add
mov
mov
mov
mov
xchg
add
pop
or
mov
cmpl
jbe
mov
mov
mov
add
mov
mov
dec
or
leave
lea
mov
mov
mov
mov
xor
mov
pop
xor
mov
mov
mov
mov
mov
add
pop
add
add
sar
add
imul
add
lcall
xor
add
push
or
inc
pop
int
add
push
insl
adc
or
add
adc
mov
mov
sbb
add
dec
or
add
adc
adc
mov
cmpl
xchg
add
mov
mov
mov
mov
mov
mov
mov
push
xorl
cwtl
add
add
push
add
add
ja
mov
lret
add
add
add
add
or
add
or
sbbl
add
mov
movl
jmp
mov
mov
xchg
add
pop
or
mov
mov
add
mov
mov
mov
mov
xchg
add
pop
or
mov
cmpl
jbe
mov
mov
mov
add
mov
mov
dec
or
leave
lea
mov
mov
mov
mov
xor
mov
adc
lret
mov
mov
mov
mov
mov
decl
lods
add
add
add
add
inc
mov
mov
xchg
add
push
or
mov
mov
add
mov
mov
pop
or
add
or
mov
cmpl
jbe
mov
mov
mov
adc
mov
mov
mov
rorb
add
fwait
add
add
mov
fimuls
mov
mov
mov
mov
mov
jmp
mov
movl
jmp
mov
mov
xchg
add
dec
or
mov
mov
lds
mov
mov
mov
mov
xchg
add
dec
or
mov
cmpl
pop
mov
mov
mov
or
mov
mov
mov
rorb
add
mov
mov
mov
mov
xor
mov
add
rorl
loopne
add
mov
mov
mov
jmp
in
roll
incl
mov
test
add
adc
adc
mov
cmpl
adc
mov
mov
mov
mov
mov
mov
dec
or
nop
mov
dec
or
add
push
add
add
ja
mov
lret
add
add
add
add
or
add
add
sbbl
add
mov
movl
inc
mov
mov
xchg
add
push
or
mov
mov
add
mov
mov
pop
or
add
or
mov
cmpl
jbe
mov
mov
mov
adc
mov
mov
mov
rorb
add
fwait
add
add
mov
fimuls
mov
mov
mov
mov
mov
jmp
mov
movl
jmp
mov
mov
xchg
add
dec
or
mov
mov
lds
mov
mov
mov
mov
xchg
add
dec
or
mov
cmpl
pop
mov
mov
mov
or
mov
mov
mov
rorb
add
mov
mov
mov
mov
xor
mov
add
rorl
loopne
add
mov
mov
mov
jmp
mov
movl
jmp
mov
mov
xchg
add
pop
or
mov
mov
add
mov
mov
mov
mov
xchg
add
pop
or
mov
cmpl
jbe
mov
mov
mov
add
mov
mov
dec
or
leave
lea
mov
mov
mov
mov
xor
mov
adc
lret
mov
mov
mov
mov
mov
in
roll
incl
mov
mov
mov
mov
push
or
add
aam
add
add
mov
mov
mov
mov
mov
mov
inc
pop
mov
xchg
pop
push
insl
inc
mov
mov
mov
push
mov
mov
mov
push
add
mov
mov
mov
mov
mov
inc
or
jecxz
add
mov
mov
mov
mov
mov
push
inc
aas
mov
mov
mov
cmpl
adc
inc
or
andl
add
jmp
mov
mov
xchg
add
dec
or
mov
cmpl
sbb
xlat
add
add
mov
pop
adc
jmp
mov
mov
mov
mov
adc
add
adc
mov
movl
sbb
mov
rolb
or
mov
mov
mov
mov
ds
push
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
push
sub
mov
dec
or
add
or
xlat
add
add
mov
mov
mov
mov
push
inc
aas
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
ja
mov
lret
add
add
add
add
adc
test
ret
add
mov
pop
or
add
leave
imul
add
add
xchg
dec
or
add
mov
ret
sub
add
add
add
mov
mov
dec
or
add
sub
or
mov
mov
cmpl
jbe
mov
mov
mov
cmp
jle
or
les
add
mov
xchg
add
mov
push
or
subl
adc
test
add
lods
add
add
or
add
mov
add
add
mov
mov
mov
mov
aad
mov
mov
adc
add
add
lods
add
add
pop
add
jmp
mov
xchg
add
xchg
push
or
test
add
jmp
mov
mov
xchg
add
pop
or
mov
mov
mov
ds
pop
jae
mov
mov
mov
mov
imul
mov
mov
add
add
lods
add
add
ja
add
mov
mov
imul
mov
mov
aam
add
add
add
lods
add
add
or
jbe
add
in
xor
incl
mov
xchg
add
dec
or
add
aam
add
add
push
or
mov
cmpl
adc
inc
or
inc
add
add
add
adc
add
cmpl
ja
mov
xchg
add
test
add
add
adc
add
mov
mov
push
dec
jnp
sub
add
mov
mov
push
mov
call
mov
mov
mov
cmpl
js
mov
mov
push
mov
call
mov
mov
mov
cmpl
ja
mov
mov
cmpl
and
adc
add
mov
mov
push
push
adc
daa
add
add
sbb
xchg
adc
add
mov
mov
push
or
and
add
jmp
mov
xchg
add
add
sub
add
push
mov
mov
push
push
mov
add
mov
movl
mov
mov
xchg
add
xchg
dec
or
add
aam
add
add
push
or
mov
cmpl
adc
inc
or
add
addl
je
mov
mov
xchg
add
mov
mov
call
mov
mov
mov
cmpl
js
mov
cmpl
ja
insl
add
sub
add
inc
or
add
add
iret
add
add
jns
inc
or
xchg
sbb
add
nop
iret
add
add
data16
push
mov
mov
push
mov
add
mov
mov
mov
xchg
add
mov
xchg
add
add
sub
add
push
mov
shrb
xchg
int3
add
add
add
int3
add
add
pop
add
add
cmp
mov
add
mov
mov
push
inc
adc
and
add
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
mov
mov
mov
andb
add
xchg
pop
mov
mov
mov
mov
add
mov
mov
incb
decl
adc
add
add
mov
mov
paddw
decl
loopne
add
add
imul
add
push
mov
mov
push
mov
add
imul
add
push
mov
push
mov
add
mov
pop
popa
pop
pusha
add
jmp
mov
shlb
mov
pop
ret
push
mov
push
push
call
push
push
push
call
call
xor
pop
ret
push
mov
sub
push
push
movl
movl
movl
push
call
mov
movl
movl
mov
mov
lea
rep
push
call
mov
push
push
lea
push
call
add
movw
lea
push
call
add
mov
movw
movw
push
push
lea
push
call
add
push
push
call
push
mov
push
call
movl
lea
push
push
call
add
mov
cmpl
jne
mov
movsbl
cmp
je
mov
movsbl
cmp
je
push
lea
push
lea
push
call
add
push
push
push
mov
push
call
mov
mov
mov
mov
push
call
add
mov
mov
mov
mov
movl
mov
cmpl
je
mov
movl
push
push
mov
push
call
mov
mov
mov
mov
jmp
push
push
push
call
push
push
mov
push
call
xor
pop
pop
mov
pop
ret
push
mov
sub
movl
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
call
mov
mov
push
push
push
call
mov
cmpl
je
mov
add
mov
mov
movl
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
mov
push
mov
push
call
cmpl
jne
push
lea
push
push
mov
add
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
movl
mov
push
call
push
call
xor
mov
pop
ret
push
mov
sub
movl
mov
add
mov
cmpl
jae
mov
push
mov
push
call
add
mov
mov
sub
mov
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
sub
mov
jmp
jmp
push
call
call
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
cmpl
je
movl
movl
jmp
mov
add
mov
mov
add
mov
mov
cmp
jae
mov
add
mov
jmp
push
push
call
add
mov
mov
mov
pop
ret
push
mov
mov
pop
ret
push
mov
sub
lea
push
push
mov
push
call
mov
and
mov
and
imul
mov
mov
and
cmp
jne
movw
jmp
mov
and
cmp
jg
movw
jmp
mov
and
cmp
jg
movw
jmp
mov
and
cmp
jg
movw
jmp
mov
and
cmp
jg
movw
jmp
movw
mov
and
cmp
je
mov
and
mov
shl
lea
push
push
call
mov
jmp
push
push
call
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
cmp
jge
mov
and
mov
shl
mov
mov
mov
and
cmp
je
mov
and
mov
shl
lea
push
push
call
mov
jmp
push
push
call
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
cmp
jge
mov
and
mov
shl
mov
mov
mov
movl
mov
and
mov
mov
imul
add
and
cltd
and
add
sar
mov
imul
mov
mov
mov
movl
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
push
push
call
mov
push
mov
push
mov
push
mov
xor
mov
push
push
mov
push
mov
push
call
push
push
push
push
push
push
mov
push
call
mov
movw
mov
mov
mov
mov
lea
mov
add
mov
movw
movw
mov
mov
mov
mov
lea
mov
push
lea
push
push
lea
push
mov
push
call
push
lea
push
mov
mov
lea
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
call
test
jne
mov
push
call
test
jne
mov
push
call
mov
pop
ret
push
mov
sub
movl
movl
call
mov
movl
push
push
call
add
mov
cmpl
je
mov
push
call
mov
push
call
cmpl
je
mov
push
call
mov
jmp
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
jne
xor
jmp
cmpl
jne
push
push
push
push
push
push
push
call
mov
cmpl
jne
xor
jmp
push
lea
push
push
lea
push
mov
push
call
test
je
push
push
push
mov
push
call
mov
push
mov
push
push
mov
push
mov
push
call
push
lea
push
mov
push
lea
push
mov
push
call
push
mov
push
push
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
push
call
xor
mov
pop
ret
push
mov
sub
push
push
mov
mov
movl
movl
lea
mov
push
call
mov
mov
lea
rep
movsw
mov
xor
lea
rep
stos
mov
movl
movw
mov
movl
movw
movw
movw
movw
lea
push
call
add
mov
movl
movl
cmpl
je
push
push
lea
push
call
add
lea
push
call
lea
push
lea
push
call
push
push
push
push
call
mov
mov
mov
push
call
add
jmp
mov
movl
mov
push
push
mov
push
push
call
mov
mov
mov
cmpl
je
mov
movl
mov
mov
add
mov
mov
mov
cmpl
jne
mov
mov
add
mov
mov
mov
mov
mov
jmp
mov
movl
cmpl
je
mov
add
mov
push
call
mov
mov
mov
mov
cmpl
jbe
mov
cmpl
jne
cmpl
je
mov
push
call
movl
movl
mov
cmp
jae
movl
jmp
mov
add
mov
cmpl
jae
mov
cmp
jae
mov
add
xor
mov
mov
add
xor
mov
xor
mov
mov
mov
mov
mov
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jae
mov
cmp
jae
mov
add
xor
mov
mov
add
xor
mov
xor
mov
mov
mov
mov
mov
add
mov
jmp
jmp
jmp
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
push
mov
sub
push
push
lea
push
call
add
movl
cmpl
jne
movl
jmp
movl
jmp
lea
push
mov
push
call
test
je
jmp
call
mov
mov
push
call
cmpl
je
movl
jmp
movl
mov
jmp
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
lea
push
call
add
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
jmp
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
mov
jmp
jmp
jmp
jmp
mov
pop
ret
push
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
push
push
call
mov
push
mov
push
mov
push
mov
xor
mov
push
push
mov
push
mov
push
call
push
push
push
push
push
push
mov
push
call
mov
cmpl
je
movl
movl
pop
pop
movsb
test
clc
jecxz
imul
push
push
imul
roll
adc
xor
rcl
push
dec
pop
clc
inc
pop
sbb
pop
clc
xchg
jae
roll
mov
push
push
imul
mov
push
push
dec
pop
clc
inc
jae
rcl
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
imul
mov
push
push
psubb
mov
fdivs
pop
clc
mov
add
sub
rcll
or
or
js
rep
pop
pop
mov
enter
aam
push
shlb
pop
mov
dec
mov
and
jne
adc
jp
test
out
scas
sbb
stc
dec
push
test
jp
fnstsw
cmpsb
xchg
mov
pop
jg
jo
call
dec
rorl
mov
out
add
mov
add
mov
test
repnz
mov
xor
or
sbb
lcall
xchg
scas
loope
pop
xor
stos
cmp
popaw
or
cmp
mov
jb
inc
adc
adc
sub
aam
out
pop
sub
and
cmp
pop
push
xchg
insb
push
cmp
push
mov
xchg
jecxz
test
cmp
mov
cmp
jb
or
lret
xor
pop
jmp
pop
xchg
adc
adc
es
cmpsl
push
iret
in
push
repnz
jle
pusha
cmp
cs
ja
repz
lods
out
iret
xchg
jno
ret
fiadds
mov
add
lds
adc
js
pop
out
mov
jbe
adc
ret
and
cmp
or
cmpsb
mov
fisubl
negb
arpl
jge
es
sub
jl
dec
jge
xor
xchg
cmp
and
lcall
std
sbb
dec
xchg
jg
in
jbe
sbb
mov
push
sub
xor
shlb
xchg
orl
ja
push
pop
adc
rcll
insl
popf
test
xchg
pop
addr16
inc
pop
enter
gs
cltd
pop
jnp
dec
jno
mov
adc
fcomp
mov
dec
imul
arpl
pop
push
cltd
push
lods
aam
mov
shlb
inc
sub
mov
adc
xlat
mov
xorl
sub
movsl
mov
mov
jecxz
ftst
sbb
mov
push
mov
icebp
mov
call
int
cli
int
inc
jmp
add
jg
xchg
and
sub
fistpl
push
xchg
scas
cwtl
fildl
adc
inc
cmpsl
push
scas
mov
mov
jno
push
jg
xor
mov
inc
or
mov
aas
adc
xchg
pop
pushf
mov
outsb
jmp
into
into
insl
cmpsb
stc
fwait
into
sbb
jo
xchg
int
icebp
leave
push
in
or
test
shrw
js
dec
pop
gs
push
cmp
jl
mov
inc
imul
adc
xchg
push
fcomp
ljmp
mov
addr16
call
pop
pop
fisttps
sbb
repz
cli
jno
sub
xor
shrl
popf
xchg
fimuls
ror
sub
dec
into
lds
mov
cmc
mov
push
popf
mov
adc
add
hlt
and
lock
ds
jbe
and
icebp
push
lds
lret
out
add
stos
or
inc
arpl
or
jno
mov
jmp
test
mov
repnz
fwait
inc
cmp
lahf
adc
push
dec
movsl
pop
outsb
sbb
jle
frstor
dec
jo
xchg
or
pop
mov
dec
and
jl
rclb
push
dec
mov
xor
jmp
outsb
pop
jle
sub
shll
sbb
adc
sbb
adc
lahf
lcall
je
push
pop
add
mov
xchg
dec
sti
sahf
push
mov
cmp
push
movsl
int3
sub
pop
lods
or
xor
push
push
aam
add
and
xchg
dec
xorl
push
inc
into
mov
fsubrp
pop
lcall
in
xor
xchg
inc
jecxz
ss
jae
mov
fsubrl
xchg
das
and
sbb
xchg
mov
shlb
dec
mov
loop
push
dec
lock
pop
push
mov
repnz
sbb
push
das
push
cmpsb
dec
adc
mov
mov
jl
dec
cmc
add
dec
and
adc
and
add
inc
xchg
das
mov
fwait
jne
xchg
fimull
imul
mov
test
rcrb
ret
and
data16
cmpsl
fcompl
jbe
jecxz
push
push
popa
iret
push
into
jbe
jg
hlt
or
daa
cmpsb
sbb
adc
mov
mov
pop
loop
mov
cld
out
and
xchg
pop
and
pop
imul
mov
lret
pushf
cltd
inc
push
mov
jns
jmp
jno
jmp
xor
iret
xor
mov
xlat
mov
xchg
stos
divl
fcomps
movq
filds
test
sub
sub
jle
and
stos
test
xchg
call
fucomi
pop
mov
adc
sbb
mov
xorb
pop
insl
mov
adcl
rolb
sub
in
push
fsubs
outsl
out
push
lahf
mov
das
lret
cmp
ret
lock
insl
add
fcoms
loopne
in
fs
jge
and
shrb
decb
test
rolb
fs
orb
rorl
das
inc
push
mov
and
jno
mov
aas
rclb
inc
rorl
fsubl
jecxz
push
or
jecxz
push
push
sbb
sahf
push
in
dec
icebp
xchg
fldenv
popf
dec
mov
in
nop
rclb
inc
xchg
lret
stos
xchg
xchg
test
jge
imul
adc
pop
aaa
scas
jae
mov
shll
dec
sbb
leave
xorl
aaa
dec
inc
in
iret
aam
adc
mov
bnd
es
mov
cmpsb
adc
cmp
push
xor
idivl
loop
add
mov
xor
imul
add
andl
sbb
mov
mov
in
inc
add
lods
int
and
inc
mov
stos
inc
sti
xlat
fcomps
cmp
movsb
or
mov
imul
adc
addr16
notb
stos
inc
sahf
fimull
dec
and
mov
movsl
xchg
int3
les
mov
xlat
adc
mov
add
mov
push
sub
pop
mov
dec
aas
mov
adc
faddp
dec
xor
cld
shl
inc
les
cmp
imulb
push
inc
xchg
das
and
push
push
pop
int3
imul
adc
sahf
repz
ret
jae
cmpsl
jle
sbb
stc
pusha
xchg
push
roll
cmp
outsb
pop
into
repz
mov
aad
mov
ljmp
mov
arpl
or
add
scas
xlat
add
xor
rolb
psubw
mov
jp
mov
xor
xchg
stos
xchg
and
dec
or
mov
dec
loop
lods
pushf
cmp
test
divl
mov
add
mov
flds
imul
add
mov
push
nop
imul
lea
inc
sub
sub
in
mov
pop
bound
inc
xchg
add
popf
adc
adc
outsl
inc
test
inc
and
xlat
sahf
jb
lret
or
pop
negb
sub
dec
int3
mov
imul
xor
xchg
test
lods
push
xchg
dec
dec
sbb
ds
fsubrs
fs
out
ficompl
cmp
fbstp
jp
bound
push
in
popa
add
les
loop
out
pop
jbe
scas
gs
js
sbb
aad
or
stos
jbe
push
lods
mov
jp
pop
movsl
sub
div
scas
mov
test
cmp
mov
xor
movsb
mov
dec
and
inc
in
fmull
repnz
ret
shll
lods
dec
notb
cmc
dec
or
xchg
in
arpl
mov
add
xchg
jl
push
push
pop
or
pushfw
into
inc
into
pusha
dec
lahf
sub
das
xchg
imul
or
inc
cltd
add
add
daa
fnstcw
popf
adc
cmpsl
pop
ds
pop
icebp
adc
out
xor
incl
sahf
cld
mov
push
xor
sub
adcb
sbb
pop
enter
cmp
in
test
daa
in
push
pushf
outsl
fistpl
imul
inc
mov
push
and
aas
lret
data16
cmp
inc
sbb
sub
testl
and
pop
cmpsl
cwtl
into
jmp
dec
sub
xchg
or
rol
inc
inc
or
fdivr
mov
dec
or
dec
lods
adc
pop
out
xchg
xor
mov
adc
cmpsb
xor
push
inc
sbb
ret
mov
sub
in
int3
gs
call
pop
pop
ret
int3
add
imul
push
mov
in
dec
roll
hlt
xchg
sbb
jmp
call
xchg
mov
dec
movsl
xchg
push
push
sbb
cmp
add
and
lea
sub
pop
inc
or
sbb
mov
sbb
out
leave
and
pop
mov
dec
cmp
push
jecxz
inc
inc
ljmp
rcrb
pop
and
jl
out
xchg
jo
jne
out
data16
mov
enter
iret
loop
lods
lods
decl
jno
lret
test
or
mov
push
and
pop
and
jnp
rcrb
jg
mov
cmpsl
fldl
jle
and
push
fcmovne
mov
adcb
mov
aas
out
sbb
cmc
sahf
je
test
sbb
fwait
imulb
ret
aad
mov
sbb
mov
rcll
pushf
cmp
test
or
dec
jns
mov
sahf
ss
out
cmp
xchg
sub
xlat
sarl
cli
mov
dec
jp
in
cmp
enter
adc
mov
inc
movsb
aad
pop
add
xchg
push
cltd
lret
sti
test
fnstsw
dec
add
repnz
rclb
insb
xor
cli
sub
xor
sub
test
test
mov
push
mov
rol
push
mov
and
mov
dec
xchg
daa
nop
ja
add
inc
xchg
enter
nop
insl
icebp
test
inc
in
imul
int3
or
push
xor
sbb
adc
jp
adc
lods
sbb
add
mov
jne
shr
adc
cmp
fwait
or
ret
not
ss
jns
mov
rcll
xchg
push
decl
jae
lds
movsb
and
add
data16
dec
leave
sarb
out
or
sub
jno
mov
int3
and
insl
push
adc
gs
cmpl
mov
pop
enter
in
inc
mov
test
xchg
or
push
jp
adc
rolb
in
divps
outsb
mov
adc
mov
jle
sub
push
int3
bound
lahf
pusha
mov
fdivr
imul
aad
push
and
mov
xchg
or
and
ds
xor
mov
cmp
fidivrs
and
mov
mov
pop
shlb
lds
sbb
dec
popa
ja
sub
cmpsb
mov
sub
cmpsl
add
pop
mov
mov
push
lods
call
add
and
adc
icebp
adcb
dec
cmp
jle
pushf
stos
aam
sub
das
lock
adc
fwait
push
or
popa
sub
dec
jg
xor
js
test
in
cwtl
pusha
add
add
dec
or
lea
imul
fbstp
mov
in
fs
loop
in
xchg
cmpl
dec
rorl
jne
sbb
jb
push
test
mov
stc
xchg
loop
in
add
xchg
pop
xor
vmovups
jmp
cmp
pop
xchg
dec
dec
cmp
repz
pop
sbb
lds
icebp
shrb
jns
cli
add
cld
lret
lods
in
mov
repz
lret
dec
filds
mov
jg
jecxz
stos
ljmp
xlat
mov
out
dec
inc
in
xor
outsl
cmp
xor
jg
out
xor
xor
mov
in
fcomp
je
ja
sbb
rcll
cmp
jle
cmpsl
inc
orb
sbb
jp
movsl
fmulp
and
cmp
jp
cwtl
enter
xor
imul
outsb
icebp
mov
xchg
sub
jo
dec
jae
or
jl
mov
inc
test
cwtl
mov
cli
bound
aas
sti
inc
ds
popa
xchg
cwtl
jae
sti
jle
out
aad
xchg
addr16
aas
jecxz
push
pushf
ret
add
shl
and
cld
fisubrl
pop
or
out
cmp
mov
in
pop
stos
mov
sbb
mov
adc
mov
xor
es
cmp
movsb
cmpb
shrl
sbb
pop
push
jb
mov
mov
xchg
and
movsl
mov
cli
cli
pop
lds
jo
cmp
stc
inc
fwait
adc
rclb
mov
and
ret
xchg
sbb
pushf
and
ja
mov
or
push
cli
sbb
test
cmpsl
fnstenv
jmp
ficomps
sbb
xor
sub
push
cmp
sarb
inc
imul
fcmovu
pop
les
cmp
pusha
sbb
movb
cmp
jmp
lret
in
insb
add
or
mov
sbb
jnp
fidivrs
inc
sarl
sbb
mov
adc
stos
jmp
dec
push
scas
xchg
dec
sub
ja
aas
lret
cmp
in
enter
stc
outsb
pop
test
je
xchg
pop
ret
mov
test
cmp
ja
inc
jne
and
in
das
out
lcall
mov
push
pusha
test
imul
ja,pt
clc
fistps
dec
add
cld
or
add
xchg
or
inc
mov
lcall
fimull
mov
jmp
xchg
shl
repnz
das
andb
mov
adc
lock
push
mov
cmpb
fnstenv
lock
jo
mov
cltd
fs
ss
ds
jmp
cmp
movsl
adc
and
in
hlt
lret
sub
jno
add
call
jbe
add
pop
cltd
enter
jno
sub
out
clc
push
mov
sub
loopne
dec
sbb
insl
nop
fcomip
lock
pop
dec
enter
xor
xchg
divb
fldcw
mov
pop
ljmp
pop
mov
inc
out
test
xchg
push
pop
fstp
repnz
mov
je
or
xchg
pop
or
insl
mov
fistpl
testb
mov
es
inc
stc
aaa
icebp
push
inc
pop
sbb
sub
push
cmp
sbb
jnp
cmpsl
push
sub
push
repz
pushf
clc
pusha
cmpsl
dec
mov
add
imul
lds
mov
push
das
int3
push
push
cld
aaa
and
dec
xchg
and
fcompl
jmp
mov
call
inc
mov
cltd
in
pop
pop
dec
sbb
and
in
inc
mov
mov
stos
vmovd
insb
imul
jg
mov
rolb
inc
jp
push
ljmp
lods
in
lea
mov
rcrb
lret
push
xlat
lds
lret
shlb
sbb
mov
and
dec
popf
movsb
xchg
jl
and
mov
hlt
lret
xchg
movsl
clc
fists
or
call
xor
stos
test
stos
mov
into
das
fistpl
sahf
shrb
cld
pop
sub
mov
cld
xchg
lds
imul
test
loop
data16
cmpsb
hlt
lahf
add
lcall
cmp
inc
cmc
pop
push
stos
das
in
cwtl
push
int3
sbb
push
pop
pushf
nop
mov
pop
cld
xchg
in
movsl
in
cmpsb
and
ds
pop
push
fistpl
xor
pusha
test
je
fstpt
jecxz
stos
jp
popf
and
inc
fisubrl
push
mov
jle
lods
cwtl
daa
sub
xchg
fmulp
inc
or
xor
outsl
sbb
mull
mov
jnp
sub
or
andb
push
leave
xchg
adc
or
mov
inc
adc
lret
jle
xchg
fdivs
ficomps
fcomps
add
lcall
xor
out
outsl
ds
cmp
add
cmp
repnz
dec
pop
imul
pop
xor
push
lret
sbb
push
xorl
loopne
pop
andb
cmp
lea
repz
mov
push
into
loopne
adc
mov
pusha
ret
arpl
xor
add
nop
mov
dec
pop
out
and
outsb
push
aas
and
lahf
flds
bound
dec
test
std
aas
and
outsl
xorl
and
insb
cwtl
mov
adc
xor
jmp
adc
cmp
pop
test
sbb
jmp
ss
cmpsl
dec
sarb
xchg
push
pushl
outsb
dec
inc
cld
pusha
add
scas
fwait
mov
sbb
or
jle
or
or
imul
jecxz
cmp
mov
leave
or
lods
and
lret
aam
fistps
shr
pop
pop
lcall
inc
push
sub
mov
pop
idivl
and
test
cmp
mov
stos
mov
cltd
rcrb
lahf
pop
js
test
cld
pop
push
loope
ret
sbb
fisttps
pop
push
mov
imul
ljmp
imul
shrl
aad
cmp
xchg
and
xlat
lahf
mov
inc
push
bound
push
jns
pop
dec
sub
xchg
in
cmp
adc
sub
aas
xchg
iret
cld
jmp
bound
fs
mov
sti
fcomps
jmp
push
lcall
sbb
negb
int3
or
xor
ret
xor
push
sub
jb
jg
addl
fists
pop
divl
jge
mov
jo
das
cltd
int
lods
and
jmp
rcll
push
adc
dec
repnz
sti
rcr
adc
push
dec
movsl
aaa
loope
cmp
and
jno
push
xor
push
jo
push
test
out
jo
daa
or
mov
or
gs
movswl
pop
inc
add
and
sbb
and
add
mov
push
mov
mov
mov
lret
and
popf
repnz
inc
rorl
sbb
lea
shlb
mov
arpl
cmp
mov
lcall
mov
xlat
mov
add
std
repnz
jne
cmpb
push
mov
insl
rorl
push
xchg
sahf
sbb
ds
popf
ret
out
pop
xchg
ret
mov
dec
rcrb
imul
sarl
mov
sbb
stos
mov
add
sbb
adc
int
push
inc
xchg
fiaddl
sub
enter
test
or
lock
cmpsb
xchg
rorl
jo
test
jge
call
inc
mov
dec
mov
fildll
jae
shrb
mulb
cwtl
xor
mov
mov
mov
jp
test
and
cmc
xlat
leave
imul
mov
call
mov
and
sbb
xlat
stos
sub
xor
mov
inc
mov
cli
or
fsubp
popa
add
ljmp
outsl
mov
mov
xlat
jle
dec
and
lea
mov
cld
xlat
xchg
jae
jne
insl
enter
repnz
ljmp
push
or
xorl
lret
fcompl
mov
in
xchg
push
lods
pushf
pop
test
lret
ret
lahf
sahf
fildll
lret
push
divb
arpl
das
cld
lds
sbb
add
cltd
outsb
ljmp
out
je
xchg
dec
push
mov
ret
leave
mov
gs
lea
xchg
fst
test
outsb
mov
sbb
lret
mov
inc
movsb
jb
cmp
pop
lds
jle
pop
in
sub
out
adcl
push
fwait
sbb
gs
sub
jecxz
push
mov
push
push
divl
sub
push
dec
sbb
test
shll
stos
roll
push
ret
out
pop
push
sub
adc
mov
orb
sti
add
imul
jp
out
into
fsubl
xor
insl
fwait
adc
insl
mov
mov
or
sub
daa
adc
and
fildll
adc
adc
jl
das
out
adc
xchg
aam
sahf
fcomip
add
outsl
or
int
cltd
int3
test
test
out
ss
shlb
sbb
imul
jge
add
or
add
cmp
imul
mov
das
jo
sti
dec
scas
xchg
cmp
pop
in
adc
and
lea
cs
rcll
fcmovu
in
sbb
jo
push
movsb
cs
cmp
ja
imull
ja
push
jb
xor
cli
push
jp
mov
xchg
cmpsl
mov
push
mov
dec
movsb
pusha
mov
adc
lret
mov
cmp
lea
mov
mov
out
cltd
cmp
sub
and
imul
mov
imul
sub
loop
pushf
xor
pop
sbb
cwtl
movsl
stc
in
lcall
cwtl
scas
fsub
sub
or
xchg
repz
xchg
mov
out
mov
cltd
mov
push
sub
push
mov
lahf
or
xchg
in
das
or
mov
lock
adc
xchg
je
dec
dec
cwtl
mov
loope
pusha
aas
nop
and
stos
repz
mov
adcb
dec
aad
lahf
pusha
or
mov
inc
mov
pusha
mov
rolb
mov
mov
sbb
xchg
fcomps
stos
mov
mov
push
mov
xor
inc
mov
xlat
jmp
mov
mov
vunpckhps
mov
mov
cltd
insb
adc
push
decl
mov
loope
pop
cmc
daa
push
hlt
pushf
dec
jo
in
jns
dec
shrl
arpl
sub
dec
adc
arpl
stc
and
mov
mov
mov
jg
enter
mov
add
pusha
popf
les
cwtl
lret
jno
lcall
sub
aas
inc
dec
or
daa
xchg
test
inc
add
sti
pop
stos
int
dec
pop
movsb
fsts
je
popa
jmp
xchg
add
jecxz
add
sub
sub
daa
push
push
pop
fstl
lods
ljmp
and
les
int
dec
adc
sub
jl
push
dec
cmp
and
cmc
inc
pushl
loopne
cmp
add
insl
aaa
sbb
sbb
push
aas
hlt
jle
dec
mov
mov
mov
stc
push
jae
mov
push
dec
int3
ffree
mov
or
lods
lea
sbb
pop
pushf
mov
stos
push
and
pusha
xchg
mov
jmp
leave
mov
aaa
pop
js
and
test
adc
push
and
push
pop
das
rcrb
sub
mov
adc
nop
push
lret
or
push
push
xor
imul
sub
cwtl
jno
inc
leave
jae
fisttpl
in
cmp
repnz
sub
lretw
add
pop
test
cmp
xchg
cli
das
adc
je
jno
scas
mov
out
sbbl
stos
pop
pushf
xor
scas
insb
mov
xor
test
mov
mov
cmp
jecxz
cmc
dec
push
notl
enter
mov
ljmp
cmp
xchg
xchg
cmp
repz
jge
add
lods
call
push
mov
cs
and
sub
sub
movsb
in
shrl
and
fadd
cli
negb
movsb
cmc
roll
lods
in
mov
mov
in
mov
jno
mov
add
pusha
test
mov
sbb
xchg
adc
test
xor
xor
xor
imul
sarl
mov
push
popa
mov
mov
xor
jbe
mov
aas
pop
lea
inc
mov
pop
sub
mov
mov
adc
fisubs
jmp
ja
cld
jae
in
in
pushf
adc
mov
cwtl
in
fisttpll
pop
cmp
xchg
popa
iret
push
adc
aam
rcr
aam
cmp
imul
insl
mov
push
xor
mov
in
adc
sub
push
fmuls
mov
dec
mov
or
xchg
inc
sub
insb
test
nop
jno
jmp
pop
pop
dec
inc
xlat
movsb
xor
sbb
dec
xchg
repz
add
jecxz
dec
in
test
push
dec
lods
xchg
in
shrl
dec
dec
sub
xor
outsb
sbbl
or
scas
push
sbbl
mov
and
jmp
sbb
or
pop
out
jo
pop
in
jmp
mov
adc
push
cmp
lcall
loop
push
add
test
mov
loopne
fsts
mov
aas
jns,pn
out
ja
lock
enter
gs
mov
ss
cmp
pop
stc
fldt
xchg
mov
pop
xchg
dec
add
stc
push
ror
mov
mov
add
jl
mov
xor
pop
xor
test
lock
add
mov
xchg
or
push
ss
push
repz
jg
mov
leave
and
lds
out
mov
add
xchg
cli
imul
into
and
jo
push
movb
or
sbb
mov
mov
lret
push
cs
test
pop
outsb
je
sub
mov
or
mov
lret
pop
andb
addr16
mov
push
inc
lcall
dec
dec
scas
fists
xchg
mov
mov
mov
push
push
test
inc
movb
jle
pop
movsb
stos
inc
push
push
fincstp
ret
shr
cwtl
inc
mov
push
pop
lods
popa
cwtl
jp
push
lret
jbe
xchg
pop
mov
mov
ficoms
fmul
push
aam
adc
xor
or
push
sub
fmuls
jmp
dec
xlat
out
inc
daa
mov
mov
push
or
sub
insb
lods
push
data16
repz
and
lcall
cmp
xor
jns
cmpsb
xchg
jp
andb
mov
or
jg
adc
outsl
fdivrl
or
stc
mov
sbb
pop
loop
imul
js
jno
inc
or
cli
lret
dec
fs
sub
iret
out
sub
aam
adc
push
push
cmpsl
cs
fdivr
pop
sub
jmp
cmpb
inc
lcall
fidivl
enter
mov
inc
enter
shrb
mov
iret
xchg
rolb
fs
bound
and
adc
in
or
or
and
ret
in
or
push
lret
cs
sysexit
jmp
mov
mov
mov
cmpsl
aad
mov
mov
jg
mov
jo
ret
push
mov
mov
xlat
inc
inc
or
adc
cmpsb
jp
mov
lcall
xor
or
sbb
lahf
fisttps
sbb
adc
test
mov
enter
sbb
into
lret
movsl
adc
shll
mov
loopne
idivb
jecxz
sbb
ficoml
lods
and
pop
lcall
int
mov
lea
iret
les
inc
add
dec
sub
or
push
fisttpll
xchg
xchg
incb
cmp
dec
and
inc
popa
pop
loopne
fs
lret
cmp
or
xchg
and
stos
clc
jecxz
call
xchg
aas
push
lock
rorl
push
jae
ret
push
push
adc
cs
ss
hlt
test
loop
in
push
mov
sti
push
insl
movsl
xor
add
and
les
lcall
gs
faddl
mov
push
imul
orb
pop
or
mov
jge
call
arpl
dec
inc
out
and
loop
cli
xchg
jb
pushf
mov
int
test
mov
in
imul
pop
inc
out
fldcw
xchg
push
xor
test
sbb
add
inc
pop
lret
stos
jl
push
xor
out
jb
or
imul
jle
shlb
les
pop
out
repnz
test
movsb
sbbb
shrl
je
mov
out
sub
pop
sarb
lret
out
insl
xorb
fstpt
dec
loope
les
mov
mov
jae
nop
and
mov
adc
fbstp
clc
xchg
dec
sbbb
out
sub
repz
js
sbb
sub
cmc
adc
and
sbb
add
jp
sbb
xchg
test
pusha
add
nop
sbb
inc
or
mov
push
sub
or
dec
or
inc
push
sti
movl
sub
jg
mov
ret
addr16
dec
sbb
mov
sub
push
popf
rclb
lcall
int3
ret
in
pop
rcrb
jo
lock
mov
push
or
push
cmp
add
sub
and
or
push
lret
and
and
mov
in
icebp
jge
mov
shrl
cld
cmp
popf
mov
fistpll
sub
andl
push
insl
mov
out
mov
jns
dec
clc
movsb
push
ror
into
and
mov
add
mov
aad
xor
pop
insb
push
add
inc
pusha
aad
xor
adc
pop
mov
fistl
sar
ja
pop
pop
jns,pt
sub
sub
mov
or
sbb
adcl
aas
jns
outsb
fsubl
sub
lea
mov
inc
xorl
jmp
mov
xor
mov
pop
inc
jecxz
sbb
xchg
mov
mov
pop
pop
lret
outsb
fs
jnp
inc
fsts
xor
adc
jp
test
popa
in
test
les
push
das
and
pop
rolb
ret
test
out
andl
dec
add
fwait
and
push
mul
jno
cmp
sbb
shlb
fisubl
mulb
sub
or
sarl
dec
sarl
arpl
cmp
cmp
push
addr16
xchg
adc
movsl
repz
cmp
test
pushw
ret
rcll
sub
rcrl
rep
fwait
cmp
push
mov
sub
pusha
mov
push
into
fcompl
fistps
clc
sar
push
cmp
inc
repz
inc
insl
and
dec
test
stos
pop
push
mov
xchg
gs
ss
lea
test
insb
xor
sbb
lret
dec
sub
mov
push
mov
xor
mov
pop
adc
mov
xchg
sbb
dec
sbb
mov
inc
sahf
add
fistpl
xor
xchg
and
lahf
push
cmpl
stos
mov
mov
inc
stos
push
ss
rcrb
je
dec
movsl
inc
dec
aad
imul
in
or
inc
mov
cmova
loop
dec
cmpsl
xor
sub
addr16
iret
pop
adc
fwait
fs
shll
push
sbb
iret
mul
aaa
mov
push
in
pop
push
pop
out
xchg
xor
pop
push
cmp
sub
jbe
mov
clts
xor
jae
jp
lock
pop
aad
jge
jno
mov
xchg
jmp
or
jl
movsb
fldl
sub
dec
mov
rcrl
arpl
jae
je
pop
or
push
shl
stos
mov
jmp
xchg
adc
scas
adc
out
sub
cmp
fimuls
aam
add
mov
mov
sbb
jb
jg
addr16
inc
cmp
push
add
mov
inc
jbe
xchg
arpl
jmp
sbb
mov
dec
fldl
xchg
nop
pop
aas
sti
pop
pop
adc
aad
push
je
aad
cli
dec
fidivrl
divl
jno
loop
jns
cmpl
lea
mov
inc
in
sub
mov
mov
xor
jae
sarl
cmpl
cmp
pop
sti
rcll
xor
mov
out
jne
xchg
inc
inc
cli
pop
jmp
xchg
push
mov
cmp
mov
push
mov
cltd
adc
je
sbb
lods
je
enter
mov
xchg
fwait
out
scas
cmp
mov
push
jmp
idivl
add
jo
add
push
dec
outsb
into
xchg
jo
xor
mov
mov
pop
and
jne
jle
push
out
sahf
add
pop
popl
push
push
mov
pop
scas
mov
mov
popf
pop
inc
cmpsb
adc
scas
ss
cmp
nop
call
mov
les
lock
xchg
ret
push
ficoms
mov
dec
pop
loop
arpl
mov
dec
xor
xchg
cmp
dec
sub
cli
xorl
sahf
filds
sahf
stos
mov
test
adcl
xor
dec
add
or
mov
fidivrs
sub
fsub
pop
std
jns
lret
adc
jnp
test
fscale
or
addl
fiadds
push
lods
push
inc
inc
out
mov
pop
and
movsl
and
lds
jg
ret
ljmp
and
imul
or
or
sbb
mov
sbb
fildl
push
leave
push
xor
adc
in
sbb
mov
cwtl
inc
fcoms
jns
incl
pop
ss
daa
push
add
sarb
popf
push
loop
fistps
popf
daa
push
mov
dec
pop
mov
mov
out
jnp
mov
pop
in
mov
push
ss
cmpsl
pop
sahf
aam
scas
xchg
mov
mov
xchg
jge
mov
mov
js
sbb
mov
hlt
inc
and
and
pushf
dec
push
and
clc
ret
cmp
fs
lods
in
loope
fs
sarb
movsl
sub
xchg
les
lock
dec
loopne
lret
int
int
sahf
and
shrl
icebp
mov
inc
xor
mov
adcb
cmpsb
mov
mov
enter
daa
cmp
pop
cmp
push
pushf
test
xchg
push
leave
leave
add
inc
mov
cltd
les
rcl
in
push
shlb
loop
frstor
leave
xor
sbbl
cltd
mov
xchg
adc
int3
mov
sub
xchg
js
adc
push
xchg
inc
addr16
mov
rcr
push
jae
pop
inc
lea
xchg
jae
jl
jnp
rsm
in
subb
push
pop
lcall
aad
arpl
orl
repnz
jecxz
addl
ror
sub
push
into
mov
fst
sbb
mov
dec
insl
in
xchg
cmpsl
and
clc
push
mov
in
jg
dec
incl
xchg
mov
icebp
orb
adc
clc
push
movb
rolb
mov
cmp
nop
inc
adc
ret
xchg
adc
int3
mov
ljmp
add
lods
push
inc
mov
shlb
or
out
mov
in
adc
sarb
pop
iret
mov
or
test
popa
or
cmpsb
ds
data16
in
into
loopne
shll
lret
sub
lods
sub
cli
addr16
rcrl
test
jne
out
sarl
iret
mov
add
std
lcall
clc
test
xchg
hlt
je
fimuls
xor
sti
out
sbb
dec
imull
adc
inc
cmpsl
mov
or
mov
movsl
std
add
outsl
jl
arpl
imul
enter
iret
outsl
fsubr
enter
insb
sahf
imul
xchg
cmp
xor
and
adc
cmp
push
and
sbb
in
shll
mov
mov
inc
mov
cmp
cltd
lahf
enter
sub
sub
data16
pop
clc
movsb
subb
fildl
fstpl
clc
jne
stc
iret
adc
sbb
inc
or
lcall
movsb
je
push
inc
ret
jmp
scas
mov
jnp
cli
sbb
outsl
hlt
cmp
push
out
cmp
loope
in
and
push
sbb
out
inc
push
scas
aad
dec
xchg
inc
scas
ljmp
xor
lret
fucom
push
stc
inc
in
lret
movsb
test
repz
icebp
push
lods
mov
sti
push
out
jb
nop
fcmovne
lahf
fisttpl
pop
aas
out
push
xlat
insb
inc
stos
in
das
jecxz
and
shll
enter
icebp
in
in
mov
jl
or
pop
dec
ret
dec
or
stos
inc
in
inc
jle
inc
leave
mov
ret
mov
cmp
push
cwtl
clc
std
outsb
xchg
movlps
enter
mov
out
sti
sahf
cmp
and
jns
xchg
shll
jb
dec
mov
cmpl
sahf
adc
test
ljmp
dec
jge
jle
pop
popf
jns
mov
cmp
in
arpl
add
inc
jle
xchg
pop
mov
shl
xor
sbb
negl
aas
cmp
push
sub
rcll
xlat
push
aaa
sbb
push
sbb
dec
outsl
lock
push
mov
pop
insl
mov
mov
ror
sbb
add
fdivp
addr16
jecxz
lds
orb
xor
das
jns
adc
jbe
mov
or
xchg
ds
out
mov
into
repnz
cs
and
pop
push
sahf
mov
inc
test
sbb
mov
inc
mov
adcl
xchg
xor
pushf
mov
fcmove
cmp
int3
cs
out
push
out
and
int3
mov
shlb
jle
jnp
dec
jle
xchg
fwait
mov
or
test
imul
add
sub
lea
sub
push
sub
xchg
imul
das
add
jle
add
cmpsl
pop
rorl
ficomps
push
mov
mov
cmp
fisubrl
orl
mov
aaa
jmp
sbb
imul
int
push
cmp
lret
dec
fs
add
and
adc
mov
cwtl
lcall
std
addr16
mov
lcall
adc
and
and
in
insl
sbb
out
add
icebp
push
rcll
fisttpl
testl
jl
add
mov
leave
arpl
stc
xor
popf
lock
xor
cmp
jno
imul
add
push
mov
nop
push
popa
jmp
cltd
cmp
mov
in
xor
jmp
test
inc
jl
dec
std
jge
and
xchg
mov
stc
fisubl
xchg
es
fsubrs
cmc
repnz
das
xchg
or
pop
pushf
pop
lds
mov
in
in
ds
lods
test
dec
mov
sub
dec
pop
mov
add
jle
fnsave
jmp
cltd
jl
ja
push
outsl
insl
int
xchg
push
mov
push
insb
push
jp
add
out
push
jnp
sbb
test
push
inc
cmp
cld
pop
xchg
inc
jbe
loop
xor
out
mov
xor
sub
adc
adc
xchg
push
hlt
lds
cmpb
pop
mov
dec
scas
lcall
in
loop
jp
outsb
lds
in
inc
push
pop
icebp
test
int
mov
mov
pop
pop
and
and
loopne
and
mov
orb
adc
movsb
mov
inc
dec
loop
mov
outsb
mull
push
cmp
cli
push
addl
mov
adc
sbbl
jle
outsb
shl
leave
adc
lcall
mov
imul
daa
cmp
int3
pop
xchg
dec
jg
call
sahf
mov
ljmp
xchg
dec
xchg
add
mov
cmp
adc
les
jecxz
fldcw
fsubs
in
je
pusha
jnp
and
cld
inc
adc
ret
test
pop
dec
imul
je
aas
fsubl
xor
and
xor
xchg
jnp
push
aaa
gs
ss
repnz
gs
push
lahf
into
lock
rcrl
mov
test
test
mov
fxch
dec
push
out
leave
std
fstpt
pop
out
jae
push
ljmp
adc
icebp
add
in
lds
out
scas
pop
adc
imul
mov
or
lock
movsb
mov
mov
push
fistpl
dec
ja
add
jbe
jnp
cmp
and
xchg
add
lcall
rcrb
test
mov
cmpsb
xor
imul
xor
dec
rcrl
mov
test
out
jno
dec
rcll
pop
sbb
lods
pusha
cmpb
add
mov
or
cwtl
jne
push
pop
call
mov
aas
mov
adc
adc
mov
outsb
aas
lea
mov
mov
scas
mov
sub
pop
sub
mov
rcll
push
sbb
jae
popf
scas
mov
arpl
or
push
loope
jb
outsb
aaa
lods
cwtl
dec
jae
scas
jne
inc
ret
fwait
pop
lcall
push
sub
xchg
cmp
insb
js
movsl
adc
xchg
cmp
jb
mov
in
add
mov
adc
cltd
jae
das
popf
sbb
in
or
les
int
inc
test
aad
pop
ret
les
cld
cmp
repz
in
xchg
cmp
imul
jnp
sar
fcoml
loopne
mov
sub
imul
in
aad
into
jp
push
and
str
fists
pop
push
call
cld
pop
mov
cmp
insl
fcmovnb
bswap
ret
sbb
mov
mov
int3
ss
lods
arpl
push
and
jb
lock
loope
adc
les
into
jae
jp
adc
lds
mov
cli
inc
adc
sbb
cld
add
ret
inc
cmp
mov
cltd
xlat
sarl
jmp
sub
mov
popa
fnstsw
inc
int3
ret
pop
lock
loope
xchg
insb
cltd
xchg
neg
shlb
inc
sub
popa
popf
fstpl
pop
xchg
pusha
pop
add
dec
jmp
xchg
xor
cmp
pop
inc
and
cmp
dec
push
cmpsb
xor
sub
faddl
sbb
ljmp
pusha
lea
cmpsb
ret
cld
adc
insl
call
dec
loopne
jp
outsl
es
insb
pop
push
adc
cs
das
test
lock
fdiv
adc
cmp
xchg
into
in
pop
rorl
adc
cmp
inc
add
pop
insb
adc
pop
fbstp
out
inc
mov
mov
or
push
pushf
adc
jge
jle
sub
lret
pop
mov
jno
fcmove
test
popa
sub
loopne
mov
pop
inc
int3
xchg
mov
insl
xchg
es
movsb
iret
fs
cmpsl
sub
cld
pop
xor
or
mov
inc
ja
ret
lds
dec
sub
inc
jge
pop
insb
or
mov
xchg
sub
cmp
xchg
test
sbb
jb
insl
mov
fwait
jbe
ljmp
cmpsl
ss
scas
test
pusha
rolb
push
mov
gs
mov
push
cmpl
mov
adc
rcrb
addr16
mov
stc
mov
pushf
sbb
jecxz
cmp
mulb
aaa
and
movsl
pop
xchg
rcrl
pop
adc
dec
mov
pop
call
inc
mov
jbe
push
shrb
enter
or
mov
rcll
cmpsl
decb
call
add
daa
test
notl
in
cmp
leave
jae
mov
ljmp
test
mov
pop
cwtl
aam
inc
push
fs
sti
clc
cmp
inc
sbb
push
sub
mov
pop
jns
dec
ljmp
data16
xchg
pop
or
cmp
mov
sub
push
xchg
jle
out
stc
mov
or
in
das
repnz
mov
je
lods
fdivr
push
js
push
test
mov
ret
int3
fdivrs
cs
adc
and
mov
sub
jp
movsl
sub
push
in
sub
das
mov
mov
std
pop
mov
inc
cs
cmp
fsubl
inc
cs
aas
repnz
outsl
pop
push
and
outsb
jnp
xchg
fs
sub
lcall
lcall
xchg
jnp
lock
push
mov
xchg
dec
sbb
mov
les
fstpt
jo
in
pusha
and
jle
push
cli
ret
pop
pop
stc
sbb
jbe
xlat
jb
inc
mov
dec
push
mov
sub
dec
mov
arpl
insl
out
jne
not
push
sub
push
cmp
xchg
sbb
dec
dec
test
xor
fs
and
test
inc
int
loop
add
gs
pop
dec
push
dec
inc
push
push
and
das
xor
int3
nop
inc
in
adc
cmpsb
cmc
test
jnp
leave
pop
fbld
shr
dec
mov
pop
stos
in
jg
test
cmpsl
imul
cs
sbbb
cs
xor
jp
inc
aam
push
mov
xchg
leave
test
bound
addl
fstl
aaa
data16
rorl
and
lock
out
jo
out
aam
xor
mov
mov
xchg
mov
cltd
stos
sub
and
lds
jb
sbb
push
test
sub
int3
cltd
fs
xchg
add
jbe
mov
mov
stos
mov
xor
sub
loope
mov
iret
dec
push
je
dec
mov
mov
out
or
xchg
aad
lds
insb
pop
sbb
sbb
jg
lds
jo
dec
mov
add
out
add
aas
ret
repz
fdivs
mov
push
push
mov
mov
outsb
pop
ret
sahf
adc
push
fs
cmp
inc
jmp
mov
push
mov
push
mov
ljmp
and
cmpsl
mov
dec
loop
pop
adc
add
fldt
jo
jp
std
ret
sbb
ljmp
inc
xor
jle
sbb
cmp
xchg
sub
mov
pop
sub
lret
leave
das
xor
cmpl
lcall
idivb
push
ficoml
fidivl
sub
in
xchg
imul
add
adc
outsl
xor
jb
dec
cmp
jmp
cwtl
push
jmp
adc
rol
insb
jge
aad
jmp
sti
idivb
loopne
cld
outsl
sub
hlt
icebp
insb
call
mov
inc
xchg
xchg
pop
fsubp
nop
mov
int3
xchg
cmp
mov
inc
mov
xor
arpl
xor
je
fisttpl
sub
mov
sti
cmc
mov
push
loopne
jno
cld
jbe
adc
pop
insl
fadds
ror
or
jg
scas
add
popf
push
dec
sahf
out
sti
in
cmp
mov
xor
stos
out
mov
xchg
jle
cmc
cmp
dec
bound
xor
fwait
insb
fidivs
shll
fadds
or
mov
cmc
cmp
fs
adc
mov
rorb
aas
and
mov
inc
insl
add
ret
repnz
les
xor
aam
or
es
dec
push
insb
dec
dec
adc
call
and
add
dec
pop
outsb
sti
mov
loopne
inc
in
aaa
xchg
stos
cmpsb
loopne
lcall
repz
call
sbb
xor
mov
loopne
cmp
mov
insb
inc
scas
push
movsl
sub
xchg
adc
push
jbe
xor
fistpl
popf
adc
sbb
in
pop
repz
js
sbb
sbb
adc
mov
or
and
sub
sbb
repz
cmp
shl
lea
xchg
pushl
ss
xlat
out
mov
pop
inc
mov
lock
mov
jne
mov
or
cli
outsl
inc
enter
sub
pop
or
mov
outsb
add
sub
fninit
adc
push
cmp
imul
leave
jo
mov
jo
xchg
xor
xor
je
pop
mov
cmc
clc
mov
mov
inc
sub
outsb
cltd
cmp
into
jle
clc
scas
cltd
cltd
arpl
jae
shlb
stos
popf
test
orb
sub
pop
pop
xchg
xor
mov
dec
dec
inc
decb
dec
add
imul
dec
sti
fucomi
fimuls
jae
sub
orb
loope
aas
testb
cmp
pop
ficompl
xor
dec
mov
add
lcall
xchg
cmp
sarl
mov
cmp
and
loopne
cltd
out
cmp
aas
push
jae
sbb
mull
xchg
sahf
cmc
scas
add
mov
js
mov
aam
mov
mov
sahf
mov
lods
divb
or
mov
pop
sbb
scas
js
ds
mov
in
adc
adc
repz
sub
popa
sahf
mov
push
or
or
mov
test
adc
out
ja
cltd
in
sbb
and
pop
fidivs
mov
jno
inc
xor
insl
insb
dec
mov
stos
out
aaa
adc
or
jo
test
cmp
xor
add
mov
adc
and
pop
daa
ljmp
cmp
lahf
enter
ret
insb
fdivrl
dec
push
xchg
fs
out
sahf
jl
out
jge
imul
lret
inc
pushf
mov
stc
mov
into
call
jno
hlt
movsb
mov
dec
push
and
xchg
push
cmp
mov
mov
mov
jae
pop
arpl
cmp
insl
jecxz
mov
xchg
mov
test
jnp
push
rcr
mov
std
push
inc
fisttpll
shrl
cli
xlat
mov
inc
lahf
jae
xchg
sub
je
sbb
test
es
jmp
pop
jb
lods
mov
call
lret
popa
mov
popa
leave
mov
call
ss
sbb
rcrb
fimull
fld
into
dec
push
hlt
lret
movsl
repz
xlat
rol
sar
pop
jns
xor
push
fs
arpl
pushl
lret
fcmovb
subl
xchg
xor
test
mull
inc
sahf
out
or
subb
cmpsl
ds
out
in
mov
lds
lock
mov
mov
mov
jp
sahf
xchg
inc
test
mov
lods
fistps
sub
aaa
adc
insb
pop
dec
mov
xchg
jle
or
cwtl
or
mov
int3
cmp
xor
jmp
jle
jl
jne
lahf
fptan
add
sub
jb
adc
add
jecxz
fldl
in
pop
adc
xchg
pop
push
lods
xchg
jb
jns
orb
mov
or
dec
mov
add
mov
jl
mov
push
xchg
sub
inc
fdivl
aaa
data16
cmp
jl
and
js
sbb
andl
pop
scas
cmpsb
sbbb
ret
push
daa
adc
idivl
fisubrl
leave
add
xchg
pusha
icebp
int
test
sbb
or
fmulp
lcall
cmp
and
mov
adc
pusha
das
aad
stos
inc
xchg
mov
add
ljmp
loop
mov
push
xchg
repnz
mov
insb
iret
rolb
inc
inc
pop
pop
loopne
out
inc
aas
mov
into
popf
inc
cld
pop
push
lock
push
ss
enter
sub
imul
cli
adc
lods
dec
ljmp
jno
jp
jle
lea
jp
jecxz
stc
xchg
subl
mov
sub
pop
dec
xor
repz
push
pop
call
fsubp
inc
fwait
mov
cltd
sbb
in
mov
iret
jno
in
lret
cmp
fmull
ret
inc
arpl
sub
je
test
insl
dec
pop
sub
std
pop
stc
nop
pop
je
push
jl
js
lock
push
mov
imul
lock
pop
test
sbb
aas
ss
dec
clc
std
sbb
push
fwait
repz
call
sub
aam
xor
js
inc
call
jl
rclb
push
ror
notl
insl
pop
ret
mov
std
sti
dec
pusha
sti
mov
mov
xchg
movsb
xchg
mov
loope
into
mov
clc
dec
xchg
xchg
je
sbb
mov
mov
daa
int
and
adc
ret
inc
jno
andb
inc
push
inc
lock
cwtl
push
or
lret
add
xchg
pop
aas
test
inc
pusha
int3
adc
stc
push
mov
pop
rolb
data16
sbb
inc
jecxz
push
cmp
xor
dec
mov
dec
sub
inc
fildll
lods
mov
add
fnstcw
xor
enter
cwtl
push
push
sbb
nop
mov
fldcw
jge
mov
mov
aaa
cmp
or
xor
mov
mov
push
lret
sub
mov
gs
scas
sub
push
sub
shl
mov
fs
dec
xchg
mov
xchg
xchg
push
decb
jmp
test
fbld
mov
mov
mov
mov
ja
mov
int
scas
add
jl
lods
je
clc
lods
fisubrl
mov
cmp
imul
mov
xchg
fiaddl
in
aas
fs
pop
je
aad
mov
scas
dec
pop
addl
jecxz
dec
or
push
inc
jl
adc
mov
jns
xlat
rcr
stos
add
mov
nop
mov
ror
sub
or
inc
fsts
mov
stos
xchg
sub
lea
movsb
in
jg
push
lret
fsubl
adc
jl
pop
add
leave
dec
js
out
fcompl
add
and
mov
fcmovnbe
push
push
add
dec
cmp
jne
adc
jae
sub
xlat
push
test
ja
mov
lret
call
dec
outsl
dec
and
adc
push
fadds
sti
xor
jae
pop
jmp
loope
and
jecxz
pop
cld
loop
xor
push
lret
inc
cmc
das
xchg
pop
mov
inc
dec
loope
sbb
mov
push
pop
mov
subb
cld
lret
xchg
pop
repz
shl
cmp
mull
cld
mov
pop
push
leave
int
cltd
into
and
addl
nop
xlat
outsb
ja
test
fnstsw
push
jge
pop
lods
pusha
scas
sub
pop
inc
mov
popa
pop
rcl
call
jne
fisttps
sub
jmp
iret
cld
pop
fimuls
jecxz
or
std
imul
adc
cmp
jb
rclb
fsubs
jns
push
dec
adc
mov
jb
aam
xor
aam
cmc
add
das
fistl
out
aaa
add
jl
pop
hlt
push
add
push
jbe
addr16
pop
int3
stos
jg
xor
sbb
icebp
or
push
je
push
aas
ds
cli
test
and
mov
mov
cld
cmp
arpl
out
mov
lret
out
or
and
jb
movb
sarb
and
mov
jmp
loope
cld
sub
stos
test
insl
pop
ficoml
cmp
mov
in
fldl
mov
cmpl
popa
out
cs
xor
std
push
inc
test
pop
dec
leave
mov
ss
mov
dec
mov
add
std
jle
push
fstpl
repnz
leave
int
inc
andl
inc
lods
clc
sub
scas
push
stos
inc
mov
fs
pushf
inc
xchg
pop
cmp
sub
neg
xchg
xchg
xchg
add
mov
lret
inc
push
loopne
pop
adc
lock
out
mov
stc
cld
mov
es
inc
mov
jge
mov
std
in
movsl
xor
in
and
lcall
inc
jmp
jmp
sarb
or
cmp
in
push
xchg
stos
add
cmp
fsubrl
mov
shll
lock
clc
and
push
popf
mov
pop
xchg
inc
scas
data16
inc
push
sub
mov
xor
mov
add
loope
out
lods
movsb
mov
std
xor
pushf
es
iret
mov
mov
add
or
xor
xor
adc
pop
jmp
sub
rcrl
adc
out
and
cmpsb
cmp
insb
dec
in
sbb
push
and
inc
adc
add
cmp
orl
cmpsl
mov
aam
fiaddl
aad
insl
inc
subl
aam
lahf
mov
das
cmp
push
jmp
pop
push
add
mov
test
jle
test
and
xor
data16
sbb
shr
fst
push
xchg
mov
jno
mov
jno
ja
decl
push
fwait
xor
push
mov
call
dec
ja
jae
insb
out
jo
and
sub
and
inc
mov
in
movsl
ss
fdivrs
dec
mov
inc
sbb
push
je
push
and
xor
cltd
cwtl
fucomp
dec
jb
inc
pusha
sahf
movsb
xchg
dec
leave
test
dec
fdivs
cmp
xchg
mov
ja
xchg
in
xchg
jne
push
faddl
aaa
lcall
jp
lret
inc
cld
in
push
add
cmc
adc
loop
sub
cltd
lods
out
jl
sbb
test
pop
clc
popa
xor
ret
outsb
das
aaa
imul
mov
dec
xchg
xor
mov
inc
sti
xor
fnstenv
lret
inc
lahf
adc
dec
xor
push
cmp
dec
or
jecxz
inc
subb
popa
dec
imul
test
xchg
es
sbb
fistps
pop
mov
sub
fidivs
pop
fsubs
xchg
mov
imul
sbb
ljmp
jbe
push
lret
jecxz
fsub
xchg
mov
xor
repz
pop
sahf
jae
roll
test
jg
xchg
mov
pop
pop
mov
test
out
xor
test
push
dec
aas
bound
loopne
jno
pop
in
pop
lcall
or
clc
rcll
or
ja
flds
test
inc
xor
loopne
jecxz
xorl
cs
cmpl
pop
jbe
xorb
fldenv
dec
cmp
roll
test
xchg
pop
hlt
mov
daa
inc
mov
daa
mov
sbb
call
movsb
push
das
and
nop
mov
addr16
inc
jae
mov
ja
sbb
lds
xchg
sahf
dec
cmpsb
sub
jmp
jmp
pop
lret
mov
sti
fxch
mov
lret
inc
call
sti
inc
and
fs
mov
and
mov
bound
popa
or
outsb
adc
test
nop
cmc
in
es
imul
xlat
icebp
stos
sbb
movsb
and
vcvttpd2dqy
cmp
imul
mov
adc
mov
fsubr
out
jne
sbb
or
ret
lods
int3
or
out
repz
add
ret
cmp
fsubrs
iret
cs
pop
sbb
push
cmp
push
and
addr16
std
pop
loope
pop
cwtl
mov
mov
jmp
jne
bound
in
stos
ud2
add
mov
push
or
out
cmpb
jg
aaa
xor
dec
es
push
loop
xchg
mov
ss
ja
js
test
or
xchg
push
test
xchg
push
sub
dec
addr16
sub
outsl
imul
loop,pn
mov
and
dec
outsl
push
xchg
ret
mov
push
loopne
test
stos
xchg
fcoml
push
jge
adc
add
or
mov
aas
ja
inc
outsb
jg
jne
xor
jge
arpl
dec
inc
testb
dec
das
std
xchg
or
jmp
mov
hlt
cmp
inc
cmpsb
bound
in
in
in
mov
xchg
cs
inc
arpl
mov
lcall
mov
decb
lock
dec
into
pop
dec
imul
lods
mov
fildl
or
pop
cwtl
lahf
nop
stos
aas
adc
clc
and
ud0
das
clc
movsb
movb
aas
xchg
cmpsl
push
bound
xchg
mov
and
daa
inc
enter
dec
pop
mov
sub
sbb
jge
repnz
xchg
stc
adc
ficoms
mov
push
sub
and
pop
cltd
xor
popa
push
in
sbb
data16
add
addr16
lea
jmp
fisubs
inc
arpl
loopne
rolb
or
cltd
and
stos
cmp
jmp
jnp
inc
lret
add
aaa
and
nop
pop
adc
inc
push
js
push
jp
xchg
cmc
clc
repz
pop
lahf
add
jge
fsubrs
push
sub
push
les
insb
jns
add
rcrl
jmp
xchg
xchg
scas
decb
loop
and
int
and
cmc
add
lret
fsubs
popw
daa
arpl
test
pop
addb
in
mov
xchg
or
mov
sbb
in
mov
xchg
rcrb
lea
xlat
icebp
mov
aaa
bound
add
xor
rorl
and
xchg
push
sbb
adc
sub
cmpl
lods
popf
sub
cmp
xchg
and
xchg
and
jb
loope
movsl
sbb
jno
cmpsl
out
cltd
push
sub
fbld
xchg
push
int
push
lcall
jl
sbb
in
imul
scas
adcl
xlat
test
cmp
xor
cmp
roll
jle
and
or
inc
sbb
adc
cltd
into
fs
aas
sub
scas
sahf
xchg
push
lret
mov
test
das
pop
jmp
sbb
insl
xchg
stos
movsb
push
lock
sar
dec
add
inc
cmpsl
cmp
cmp
cs
pop
pushf
gs
add
adc
es
nop
jecxz
repz
test
xchg
mov
dec
jg
push
sub
add
mov
and
pop
cmp
sbb
pop
cs
pop
das
and
push
mov
dec
jne
mov
xlat
mov
scas
xchg
les
push
addr16
ret
mov
cmpsl
jp
push
test
sbb
and
lds
shll
add
jne
repnz
inc
out
and
or
test
ss
mov
and
or
andb
or
sbb
mov
ret
ds
test
jmp
xchg
adc
sub
lds
call
bnd
mov
jecxz
aad
arpl
mov
pop
mov
shll
add
sub
dec
mov
sti
pop
in
xchg
aad
arpl
dec
pushf
inc
xlat
push
and
pop
or
adc
js
add
test
icebp
in
dec
xor
mov
stc
fisttpl
nop
xchg
xor
cmp
adc
js
xchg
mov
shll
mov
sub
mov
add
mov
lea
out
push
lea
xchg
andb
dec
sbb
dec
jg
fsub
adc
pavgb
mov
push
mov
jle
sbb
or
cwtl
fsubrs
cmpsb
jne
pop
push
inc
int3
fwait
dec
mov
loopne
dec
push
pcmpgtd
pop
dec
adc
push
rorl
lds
xchg
add
sbb
xor
dec
lea
xor
lcall
jb
je
stc
stos
repz
cmp
dec
aas
push
xchg
sub
push
xchg
lock
lea
lea
mov
or
fwait
sub
cli
or
adc
jmp
sbb
and
fcomps
and
fsubr
sub
push
add
jmp
nop
cmp
xchg
mov
daa
daa
outsl
and
jecxz
pop
ljmp
test
and
push
les
and
adc
test
aas
cs
in
mov
fcompl
jne
int3
or
stos
enter
movsb
cmp
int3
gs
jecxz
out
pop
xlat
mov
jno
aaa
cld
jecxz
mov
lcall
pop
jle
jmp
cmpl
xor
fs
sub
xor
loopne
mov
aas
adc
adc
or
cmp
sub
and
ss
daa
icebp
jge
out
int3
hlt
imulb
shl
dec
jl
push
je
sbb
dec
stos
push
mov
out
inc
cmpsb
jae
fmull
sbb
cmpsl
inc
pushf
xor
adc
adc
sub
mov
aaa
push
push
rolb
pop
es
shll
cmpsl
mov
mov
mov
jg
push
lret
filds
or
lods
mov
mov
sti
sub
mov
gs
mov
mov
xchg
sub
xchg
imull
mov
adc
push
out
lock
jl
scas
dec
sahf
lock
push
cltd
test
fistpll
jmp
orb
ret
sub
movsb
sti
sahf
test
mov
xchg
sub
sar
aad
int3
sub
mov
jmp
mov
sub
push
jae
dec
hlt
insb
push
and
jecxz
adc
mov
adc
or
push
cmc
les
push
add
jmp
out
lock
scas
popf
adcl
push
lea
les
mov
shlb
ret
inc
popa
add
inc
xchg
lds
out
push
dec
mov
mov
cmp
aaa
imulb
add
push
mov
out
dec
icebp
test
idivl
repnz
push
jge
dec
xor
es
int
xchg
push
push
cmp
dec
sub
jmp
xchg
mov
pop
cmc
mov
sub
addr16
dec
lahf
out
inc
push
lcall
test
inc
push
jecxz
xor
mov
pop
sub
icebp
arpl
mov
and
xor
movsl
cli
call
test
push
in
and
inc
xchg
repnz
es
pop
in
std
dec
xchg
inc
mov
cwtl
or
mov
xchg
out
adcl
push
gs
push
cmpsb
into
rcrl
imul
cli
xor
pop
mov
xorl
arpl
cmpsb
mov
adc
enter
xchg
gs
fists
repnz
test
mov
xchg
xchg
fdiv
xchg
inc
jge
or
out
test
aam
bound
roll
xchg
ret
test
mov
sbb
insl
pop
cmp
mov
or
pusha
or
imul
hlt
add
xchg
shll
mov
rcrb
mov
mov
in
mov
sub
dec
sub
jl
cld
xor
lret
xor
movsl
sbb
fisttpll
mov
sub
sti
pop
cmp
rcr
test
shlb
pusha
in
jb
push
testb
push
adc
adc
mov
xor
pusha
clc
pop
enter
or
jmp
js
adc
mov
pop
outsb
jp
mov
push
cmp
push
add
adc
jo
je,pn
xor
stc
hlt
adc
addl
sub
cld
xchg
push
sbb
mov
dec
sub
lds
and
inc
aaa
push
or
push
adc
mov
ror
push
mov
mov
xor
loopne
dec
lahf
cmc
rep
inc
enter
sbb
bound
or
xchg
aam
xchg
cmp
mov
push
dec
shrb
xchg
xchg
cmpl
dec
pop
push
inc
inc
pop
mov
push
inc
xor
cmp
inc
xor
add
pop
cmpsl
push
popa
xchg
lock
shrb
clc
lds
les
pop
mov
mov
out
xor
lahf
mov
neg
push
cwtl
call
mov
xchg
add
cmp
push
and
out
jmp
cwtl
mov
fnstsw
dec
mov
sub
pushf
push
mov
ret
xor
xor
or
and
sub
jno
cwtl
imul
mov
inc
ss
push
loope
pop
out
int
add
push
xor
mov
push
cmp
jbe
inc
cmp
push
imul
dec
sbb
mov
fisttpll
xchg
cli
cwtl
sarb
or
sub
into
mov
stos
testl
faddl
cld
sub
pushf
inc
pop
out
jns
aas
andb
and
xchg
xor
pop
pop
push
cmpsl
and
nop
mov
js
mov
ljmp
rcpps
dec
stos
pop
adc
mov
add
adc
shll
dec
repz
inc
or
cmp
stos
xchg
inc
mov
pusha
fcmove
std
xchg
sbb
insl
xchg
dec
fnstcw
or
ja
push
mov
adc
mov
in
mov
int3
mov
xor
add
mov
pcmpgtb
mov
sub
xor
in
bswap
cmpsl
in
imul
pusha
into
sahf
shl
inc
jg
lods
push
pop
add
divl
jmp
cmpsl
fists
inc
mov
imul
sbb
adc
addr16
fnstcw
xor
les
jle
data16
dec
js
push
mov
and
sbb
inc
fisubs
movsb
adc
in
jge
jnp
sub
lds
xor
call
icebp
sub
xchg
mov
sbb
push
adc
aam
das
adc
divb
lds
xchg
outsb
cmpsb
push
push
inc
jns
jnp
cmp
xor
push
dec
nop
dec
sub
xchg
jb
mov
adc
push
sbb
jbe
add
pop
pop
aas
push
int
testb
pop
loop
cmpsl
popa
and
adc
or
out
inc
sub
or
repnz
outsl
je
pop
ret
pop
xchg
add
adc
mov
and
mov
mov
sar
or
out
cmpsb
fmuls
in
shlb
xchg
jl
xchg
mov
mov
ret
sbb
pop
out
cmp
stos
aaa
mov
imul
add
fs
lret
ret
outsl
push
std
cmp
pusha
lea
cmp
out
ljmp
fcmovnbe
xchg
inc
mov
cmovno
jmp
outsl
lods
out
test
jno
lods
adc
mov
shll
pop
jp
cmp
sbb
out
sbb
and
or
aam
push
sar
lahf
dec
movsl
jnp
popf
push
subl
adc
imul
cmp
in
push
sbbl
add
pop
fisttps
icebp
sarb
mov
or
dec
iret
cltd
ja
jge
push
insb
sbb
test
and
mov
push
mov
gs
popa
inc
mov
xchg
jne
fistl
roll
subb
fadds
mov
sbb
pop
sbb
cmp
push
mov
cmc
out
cmp
in
call
or
inc
aaa
cmp
in
push
cli
jl
jno
addr16
sbb
add
int
xchg
rorl
mov
push
add
inc
sahf
cs
lods
cwtl
cmp
pushf
fnstenv
fmuls
or
mov
loopne
gs
lods
cld
stos
or
or
inc
das
jo
push
mov
push
enter
push
jae
arpl
div
xor
mov
int3
movsl
jno
mov
push
insl
dec
mov
cld
repz
fisubs
sub
jg
push
and
int
scas
push
les
nop
pop
push
gs
mov
jns
fs
out
test
std
pop
adc
lds
mov
movsl
jge
sbb
inc
inc
xchg
ret
scas
or
movsl
stc
sub
shlb
adc
loopne
add
inc
fbld
lods
pop
fstps
mov
fbstp
sub
push
int3
xchg
es
inc
mov
mov
xorb
or
mov
adcb
xor
inc
flds
cmp
xor
aas
stc
repnz
jne
and
inc
mov
popf
clc
dec
movsl
std
and
jbe
sbb
sbb
push
adc
pop
xchg
hlt
jb
movsb
mov
out
mov
cltd
aam
cld
ljmp
dec
mov
jns
loop
and
pop
mov
mov
jp
lahf
int3
jmp
nop
lea
inc
xor
lcall
xlat
mov
xor
lods
movsl
adc
std
pusha
dec
lock
pop
in
and
imul
adc
js
sti
and
mov
sub
enter
pop
cmpsb
ljmp
mov
dec
and
sbb
xor
cs
inc
push
aad
mov
push
cs
jmp
in
jnp
std
lods
xchg
dec
insb
mov
xchg
xchg
sbb
jne
sbb
aam
pop
rcrb
outsb
adc
xchg
xor
dec
dec
cmp
enter
mov
lea
fldl
adcl
inc
jne
mov
inc
and
pusha
cmp
out
xchg
xchg
inc
std
pop
je
ret
jmp
mov
sbb
mov
lods
sahf
rsm
push
punpckhdq
dec
xor
lea
sub
add
lock
std
inc
daa
shl
mov
cmc
xchg
pop
pop
std
out
loope
jle
bound
popa
push
lcall
sbb
jmp
ja
mov
xor
cmp
mov
cltd
mov
aad
repnz
scas
sbb
adc
fs
lods
dec
je
mov
push
repz
int3
popf
imul
popa
or
bound
lcall
hlt
mov
dec
leave
jns
aad
dec
or
dec
daa
das
aad
addr16
test
mov
push
lret
test
aaa
data16
mov
xchg
js
sbb
arpl
sub
inc
inc
loope
fimuls
js
addr16
and
mov
sub
and
pop
jb
jecxz
push
jl
lret
in
imul
fisttpll
or
inc
cld
xchg
insl
or
ja
mov
rep
es
sub
shl
out
sub
movsl
push
mov
adc
fsts
in
add
mov
sub
lahf
xchg
arpl
mov
mov
js
xchg
xchg
mov
xchg
push
xor
fisttpll
fstpl
jg
pushf
iret
fldenv
lret
mov
sbb
or
in
xchg
add
int
fs
ljmp
inc
mov
and
test
insb
adc
mov
roll
cmp
lret
fsubs
xchg
les
and
jge
push
mov
xor
sbb
daa
out
aad
gs
fnstsw
loope
sbb
daa
pop
mov
out
xor
les
push
fmull
es
pop
sbb
xor
mov
popl
cmp
pop
add
sti
gs
cld
pusha
mov
daa
adc
stc
popf
or
add
inc
fsubrs
cmpsl
add
and
push
pop
lcall
cmp
jns
jl
mov
xchg
pop
or
cmp
and
inc
push
jbe
leave
add
stos
xor
cmp
mov
repz
pop
movl
inc
mov
movsb
addr16
sbb
and
and
dec
and
push
je
adc
xchg
jp
aaa
fildl
imul
xchg
pop
push
clc
lods
mov
repnz
lds
push
je
add
jecxz
mov
pop
nop
fwait
dec
jnp
and
scas
mov
xchg
mov
imul
or
out
pop
cmpl
push
lret
sar
pushf
notl
xchg
inc
xchg
and
jb
pop
cwtl
cmp
jns
adc
paddw
aam
out
scas
sarl
cmp
inc
ljmp
stc
and
add
jno
arpl
mov
mov
je
xchg
in
push
int
sub
stc
fs
outsl
inc
mov
sbb
pusha
pop
arpl
enter
repz
loop
xchg
inc
rolb
loop
outsl
and
mov
fisttpl
inc
jp
dec
jecxz
xchg
adc
mov
rcrb
xchg
lds
jp
mov
dec
sub
bound
jbe
sbb
hlt
add
leave
cld
sbb
jmp
adc
sti
dec
scas
sti
into
in
test
out
push
mov
jg
mov
and
insb
repnz
out
sbb
mov
popf
pop
mov
mov
lss
scas
leave
pop
jp
mov
incb
ret
pop
into
adc
mov
mov
mov
fwait
pop
xor
push
add
ja
stos
shr
adc
jbe
xchg
mov
fimull
jno
outsb
mov
stc
stc
int
stos
jmp
dec
adc
xchg
in
test
xor
pop
push
into
loope
and
aad
push
adc
imul
bound
lret
ret
divl
mov
xor
jae
cltd
or
movsl
lret
xor
jge
test
loop
dec
ret
fsts
scas
cmp
sbb
add
sti
jge
je
xchg
out
and
cmp
das
push
roll
cld
sti
stos
jnp
fdivs
mov
iret
and
imul
mov
in
mov
out
ds
aam
and
mov
test
shl
sub
cmp
mov
and
jo
or
pop
push
repnz
imul
bound
mov
in
ja
cmpsb
test
inc
dec
pusha
popa
xchg
jo
orl
sbb
in
fcmovb
dec
fdivrs
loop
stc
xchg
mov
insl
stos
mov
adc
scas
mov
mov
mov
adc
jle
out
cmp
mov
push
pop
rcrb
mov
ljmp
aad
dec
jmp
imulb
fwait
mov
into
mov
sub
lcall
push
test
xor
jbe
orl
sbb
inc
jmp
add
jo
push
pop
push
or
or
in
or
es
push
movsl
icebp
jno
mov
insb
test
sti
movsb
push
push
jnp
gs
fwait
aaa
sbb
jo
stc
adc
jge
mov
mov
add
add
movsl
cltd
int
or
inc
mov
add
xchg
adc
and
mov
test
lds
ja
jbe
jmp
push
push
int3
push
lds
stc
add
ror
pop
shlb
imul
fsts
xchg
dec
lret
push
pop
ret
pop
repnz
gs
rcrl
clc
ror
push
std
sbb
ret
sub
movsb
andb
xchg
sbb
jle
jb
test
adc
inc
inc
xor
out
mov
or
mov
nop
test
push
out
ja
mov
divb
ljmp
cmp
sub
test
lcall
mov
in
insl
xor
mov
xchg
or
push
addr16
or
jb
sbb
out
cmp
xchg
push
cld
sbb
or
js
loope
xor
outsb
sbb
cs
cmp
sbb
outsb
pop
imul
cld
sub
fsubs
mov
inc
push
fiadds
xor
mov
inc
inc
imul
insl
adc
cmp
enter
clc
cmp
imul
or
daa
jne
adc
arpl
nop
aas
sub
mov
xor
mov
cmp
add
mov
pushl
fiaddl
aaa
xchg
push
popf
push
int
push
mov
popf
push
je
imul
dec
movsl
cmp
cwtl
lods
cmp
xlat
repnz
xchg
push
fdivl
push
cmp
push
aas
lcall
mov
out
xchg
mov
xchg
sarb
loope
or
and
test
dec
mov
jge
mov
sbb
shrb
fidivs
insl
dec
inc
into
and
loopne
pusha
xchg
mov
inc
or
loop
mov
test
mov
lea
cs
shll
int
jmp
jge
lret
push
push
test
sub
fstpl
aad
cmp
lret
xchg
jnp
push
pop
lret
sbb
imul
jbe
add
mov
lret
dec
jp
xorl
cmpsl
add
adc
cwtl
lock
adc
cmp
adc
or
and
je
xchg
in
in
ljmp
push
dec
outsl
cmp
cmp
mov
inc
ja
into
mov
jmp
cs
icebp
jge
or
into
test
inc
inc
jge
fsubrs
xchg
in
insb
sbbl
fisubrl
sbb
or
push
jb
add
dec
xor
mov
popa
cmpsl
ss
hlt
jl
in
jle
cltd
xchg
outsl
jle
add
push
int3
ret
sub
inc
adc
in
subb
sub
inc
jecxz
ja
seto
jmp
dec
arpl
dec
ja
js
in
push
stos
pop
jle
in
iret
pop
aaa
jo
xchg
ret
out
iret
es
xchg
mov
pop
leave
jle
mov
lcall
add
cmp
aam
add
jmp
stc
int
dec
xchg
xchg
mov
mov
inc
cmc
adc
mov
repnz
inc
stos
cmpsb
jae
jmp
mov
shrl
insl
pusha
pop
in
pushf
insl
cmp
adc
loop
shl
add
mov
orl
dec
push
fidivrs
in
cltd
or
ret
insb
push
inc
aad
jp
jp
dec
ret
and
mov
insl
lcall
mov
jl
sbb
in
or
fnstcw
int
jl
jle
adc
jae
repnz
xchg
push
jae
add
pop
ss
popa
push
ja
dec
jg
pop
movsb
adc
pop
fimuls
shlb
pop
gs
sbb
cs
lods
jae
inc
lcall
inc
jns
mov
push
lods
je
xchg
or
jns
xchg
stos
shrb
sub
imul
pushf
bound
adc
pop
inc
push
or
sbb
fildl
pop
rorl
popa
jnp
mov
outsb
pop
call
jle
mov
and
imul
ss
jmp
popf
fstps
sti
pop
arpl
js
push
xor
mov
pop
les
inc
jle
nop
push
icebp
mov
fdivp
sbb
mov
push
pop
pushf
jecxz
subb
fisubs
pop
sbb
test
cmp
mov
out
call
and
push
iret
mov
loop
jo
cmpsl
cltd
dec
outsb
paddq
pop
xchg
hlt
stc
pop
pop
mov
mov
mov
pop
lods
leave
jmp
jmp
test
cmp
pop
sbb
rclb
sbb
inc
sbb
jl
imul
inc
lds
mov
mov
lss
cs
out
xor
shll
hlt
bound
lret
adc
sahf
inc
xor
call
gs
int3
lea
iret
imul
shlb
pop
cmpsb
sbb
stc
xor
stos
daa
mov
or
jbe
jnp
testl
and
and
loopne
and
les
scas
test
inc
repnz
in
cmp
add
inc
jnp
lar
adc
fnstenv
sbb
push
mov
into
fmulp
inc
in
int3
fs
pop
cmp
les
xchg
sub
scas
out
jecxz
xchg
nop
xchg
xor
sbb
sub
mov
stos
adc
jg
data16
pop
scas
lods
mov
push
fsubrl
stc
adc
add
cmovbe
scas
jge
push
pop
mov
cmpl
int3
jnp
aaa
jg
ds
add
jmp
jns
or
dec
iret
mov
fisubl
cmp
inc
pop
cmpsl
push
mov
cmpsb
push
jae
std
push
lods
add
sbb
js
loope
mov
mov
add
cli
std
adcb
add
sti
aaa
sub
mov
or
and
xchg
fcmovbe
sub
into
cmp
pop
push
inc
xor
nop
adc
cmp
jnp
lods
sti
xor
in
enter
in
or
cmpsl
dec
lods
loop
jno
rcrl
hlt
xor
rol
outsl
jns
inc
xlat
subb
xor
iret
call
fsubrs
inc
lea
test
cmp
sub
bound
out
adc
aas
add
dec
cs
out
ja
jns
gs
adc
cltd
dec
mov
jne
add
jecxz
jb
push
sub
mov
cmpsb
push
cmpsb
jge
xchg
test
push
inc
push
cmp
xchg
fsubrl
adc
jl
jmp
jl
xor
jg
adc
and
pop
aam
arpl
adc
sub
lcall
inc
clc
push
sbb
ja
dec
shrb
add
adc
jge
inc
fstp
push
cs
push
pop
dec
ss
jmp
push
arpl
push
or
mov
mov
push
sbb
adc
test
outsl
gs
scas
test
pop
rcll
mov
xor
fucom
push
test
fnstcw
bound
mov
dec
test
cs
adc
push
daa
lahf
movsb
xor
or
mov
adc
shll
inc
jae
sbb
mov
push
aam
inc
and
mov
sbb
stos
adc
mov
cli
push
xor
xchg
inc
gs
sbb
int3
sbb
mov
into
pop
mov
mov
pusha
sub
pusha
std
cs
xchg
mov
or
dec
ret
in
push
xchg
pusha
fs
femms
mov
inc
not
jnp
pop
jne
fs
out
or
ljmp
adc
or
inc
or
je
lods
dec
sub
cltd
pop
dec
pop
xor
mov
fldcw
fidivrl
mov
jle
cld
dec
sub
dec
inc
and
inc
push
mov
jns
mov
inc
popa
insb
mov
stos
cld
xlat
jmp
bound
xchg
stos
mov
mov
pushf
xchg
pusha
cs
les
rcl
lods
popa
push
imul
int3
std
into
xorl
push
xchg
hlt
mul
test
lret
repz
xlat
sub
je
mov
in
jbe
int
mov
in
insl
xchg
ljmp
repz
in
adc
push
pop
cmpsl
ja
je
adc
int3
aaa
adc
aad
js
fisubs
and
into
divl
aaa
test
push
je
je
hlt
sub
testl
andb
fnsave
mov
push
sbb
aas
aad
cmp
dec
repz
inc
dec
lahf
or
mov
nop
push
mov
xor
xchg
stc
adc
insb
xor
ret
shrb
out
or
pop
adc
push
ljmp
add
jp
add
out
shll
mov
ss
xor
jae
imul
jo
inc
rorl
adc
sub
adc
jge
subl
adc
or
rolb
pushf
push
lahf
dec
sbb
out
fs
xchg
es
int3
mov
lret
pusha
outsb
jb
scas
call
mov
push
sub
lods
inc
or
inc
inc
mov
xor
les
xchg
xor
cmp
jge
fistl
push
aad
add
adc
scas
mov
bound
jge
or
mov
mov
in
push
sbb
mov
sbb
insb
ret
mov
pop
mov
adc
ret
push
or
ret
add
inc
inc
sub
ds
jno
insb
outsb
pop
repnz
aad
lahf
into
leave
add
push
addr16
addl
pop
in
enter
and
stos
jg
imul
inc
lret
jge
dec
les
ret
ljmp
mov
mov
fldl
daa
lret
jo
shlb
mov
cmp
jmp
clc
mov
jg
add
mov
and
test
and
jnp
movsb
xor
test
push
push
dec
cwtl
mov
pop
dec
test
adc
jg
and
mov
mov
mov
pop
aad
push
push
jnp
sbb
lret
cltd
and
shl
xchg
rol
cld
push
jbe
jl
mov
sbb
enter
inc
mov
gs
mov
or
hlt
fst
in
adc
xor
jb
ss
or
dec
dec
popa
aam
mov
xchg
sub
push
divl
into
fs
jno
lea
movsb
test
mov
sarl
sub
adc
add
adc
andb
jb
outsb
mov
sub
jns
negb
mov
add
add
add
pop
pop
and
outsb
inc
add
mov
mov
push
xor
jg
test
add
shrl
loopne
ret
lock
in
pop
mov
push
leave
sbb
test
mov
iret
sbb
das
jne
dec
or
out
cmp
stos
cmp
lcall
out
movl
ss
mov
stc
cmc
pop
push
jge
lahf
lds
dec
lock
or
mov
lahf
pop
pop
fucomp
dec
mov
jmp
int3
mov
je
outsl
mov
xchg
into
insl
mov
stos
or
sarl
jb
mov
inc
and
mov
bound
negb
pop
mov
out
mov
or
fwait
adc
jns
aas
sub
mov
jb
cwtl
adc
les
xchg
push
out
mov
leave
sub
mov
or
lahf
movsl
loop
fwait
push
dec
out
mov
jecxz
loop
pushf
jmp
cltd
imul
add
inc
push
push
aam
push
hlt
jg
sarb
dec
push
mov
rcr
fs
rcll
cld
aaa
test
xchg
xor
ss
es
repz
sbb
pop
adc
jge
ljmp
jle
xchg
push
push
jbe
xchg
inc
out
mov
pop
add
push
mov
pop
mov
mov
inc
xor
mov
and
or
mov
push
lods
outsl
nop
jp
daa
or
mov
scas
imul
cmpsb
or
sub
popf
xchg
jnp
push
xchg
mov
rcll
mov
shll
pop
push
jg
dec
xchg
jns
adc
icebp
pop
fsts
xor
lret
pop
call
popa
fisubl
pusha
shlb
sub
and
jnp
lds
in
adc
mov
xchg
sub
cmc
xchg
dec
push
push
das
jecxz
aaa
cmp
ss
scas
mov
ret
iret
mov
inc
xchg
mov
mov
fstp
xor
mov
xchg
pop
adc
iret
xor
out
cmc
outsl
out
jg
jecxz
rol
xor
xchg
push
mov
rcrl
xor
pop
in
shlb
je
repz
jnp
or
leave
out
mov
insl
mov
push
cmpl
pop
sbbl
loopne
pop
cmpsb
into
test
aam
push
sub
mov
dec
inc
dec
mov
addb
stos
dec
and
dec
mov
sub
call
mov
scas
pop
sbb
jg
xchg
ss
insl
mov
shlb
inc
test
std
sahf
inc
dec
arpl
xor
shrb
mov
shll
cmp
pop
jl
xchg
flds
or
pusha
idivl
pop
xor
inc
imul
sbb
jl
xor
adc
dec
pop
lret
rcl
xchg
push
mov
xchg
pop
iret
add
outsl
ret
jmp
sbb
inc
xor
cmp
loope
jae
and
ret
cmpsl
daa
xchg
in
cmp
mov
and
mov
into
pop
call
dec
pop
sub
mov
shrb
pop
aaa
aam
add
fiaddl
scas
scas
je
sbbl
fnsave
or
jae
xchg
adc
xchg
int3
jno
lahf
mov
push
or
or
mov
sbb
push
ds
pop
int
or
mov
and
int
push
lahf
loopne
add
fcomps
inc
cld
adc
and
mov
jg
mov
inc
sub
xlat
sub
test
es
inc
jo
movsl
scas
xchg
fwait
dec
and
out
pop
dec
push
mov
das
xor
sub
fs
rolb
aas
iret
push
hlt
jno
cli
add
xchg
test
insb
pop
pusha
add
mov
add
sbb
popf
sub
xor
inc
lret
pop
sub
fidivs
push
leave
cmp
arpl
std
loope
into
insb
loopne
push
insl
mov
xlat
sbb
mov
mov
push
jp
push
enter
dec
cli
add
jmp
sti
mov
lret
jg
imul
aad
or
shrb
pop
mov
lret
aas
movsl
insb
fcmovbe
sub
bound
mov
outsb
add
popa
mov
movsb
lods
and
into
xor
dec
int
test
add
lret
inc
fstpt
imul
adc
jmp
xor
inc
mov
adc
mov
dec
imul
iret
or
in
adc
pop
std
mov
cmovbe
mov
sbb
jae
dec
std
mov
popa
cmp
cmpsl
enter
fbstp
push
xor
or
inc
es
ja
jno
cmp
cld
lahf
addr16
cmp
lcall
xor
out
push
imul
mov
xchg
dec
adc
ds
ljmp
mov
fs
and
loop
clc
push
and
push
fists
ja
scas
out
xor
popf
outsl
pop
inc
and
dec
add
xchg
cmc
xor
jb
test
repz
sbb
shl
into
adc
pop
aam
xor
sbb
mov
mov
xchg
idivl
cmp
icebp
pop
sub
fidivrl
movsb
pop
mov
mov
decb
mov
push
xor
sub
dec
sub
add
mov
jge
dec
dec
pop
cltd
incl
dec
xchg
in
mov
and
pop
cmp
adc
cmc
push
cltd
fisttpll
scas
cmp
sub
hlt
jo
sbb
and
dec
xor
incl
cmp
imul
or
and
sub
dec
sbb
lock
imul
pop
xor
lcall
push
dec
and
js
nop
ret
jge
mov
test
jg
lahf
pop
mov
mov
dec
mov
scas
adc
mov
cmp
lock
and
test
jae
jge
and
ds
fs
mov
enter
jbe
insl
fidivl
call
fs
leave
and
ret
pop
xchg
cs
mov
jg
lods
negl
mov
xor
cli
ds
ret
sub
inc
fmuls
push
out
loopne
mov
imul
mov
lahf
cmp
sbb
xchg
les
adc
sub
push
add
push
sub
push
dec
repnz
arpl
nop
js
mov
jl
loope
mov
sbb
int
mov
cli
and
adc
or
js
inc
sub
sub
sbb
or
fimull
push
mov
add
fwait
aas
outsl
repz
adc
mov
clc
sub
stc
jp
mov
or
or
imul
push
mov
sbb
les
inc
sbb
ljmp
aaa
inc
adc
pushf
lret
std
xor
js
loope
in
in
int
dec
std
pop
pop
xchg
adc
loopne
rclb
sub
mov
enter
jmp
sub
icebp
push
in
ja
jmp
mov
fcomps
enter
pusha
and
or
std
pop
test
add
pop
iret
lahf
in
xchg
adc
pop
pop
jns
ret
sbb
fs
popl
adc
push
add
adcl
xchg
mov
fstps
adc
push
add
cmp
and
fwait
dec
int3
lcall
daa
imul
xchg
popf
in
xchg
cmp
test
lds
xchg
sub
ror
sti
fldcw
pop
orb
jnp
cmp
fnstsw
or
stos
sbb
cmp
and
dec
inc
xchg
lock
adc
lds
fcomps
xchg
xchg
mov
add
sbb
push
mov
js
push
xor
adc
mov
mov
or
stos
pop
xchg
or
hlt
nop
cmp
mov
sub
les
insb
jne
sti
lea
cmpsb
push
fwait
xor
pusha
bound
xor
xor
cli
je
fsts
fs
cmpsb
jge
js
loopne
nop
dec
xchg
pop
sub
or
movsb
cld
xchg
out
sbb
cs
loope
test
pop
pop
fldt
xchg
sub
sbb
or
leave
adc
shl
pop
nop
push
xchg
fwait
push
xor
or
lods
inc
jmp
stos
pop
jno
mov
test
push
into
cmp
jge
daa
xor
adc
or
cmpsb
push
cmp
pusha
or
test
repz
sub
cmp
fistpll
imul
xlat
lcall
or
mov
xor
data16
mov
jnp
xor
shlb
cld
and
dec
popl
mov
lds
and
sahf
cli
push
leave
push
xor
push
pop
sahf
test
cs
fwait
scas
test
data16
xor
shll
das
in
sub
cmpsb
push
les
aaa
icebp
jne
inc
inc
nop
and
inc
jae
out
push
mov
dec
icebp
ss
xor
and
aaa
fistpll
hlt
movsl
xor
push
adc
adc
adc
sbb
in
call
jmp
mov
dec
dec
jle
mov
push
xor
nop
loopne
sarb
xchg
sub
mov
mov
insb
fildl
mov
pop
dec
sub
call
mov
rcl
jae
sub
scas
fstl
imul
xor
cmp
or
pop
shll
rclb
pop
mov
dec
and
iret
mov
sub
sub
or
adc
repz
enter
inc
movsl
lret
lock
out
sti
out
pop
pop
fs
push
lret
and
aam
mov
pop
in
cmp
imul
leave
mov
leave
gs
push
in
popa
iret
inc
jmp
dec
leave
scas
in
test
xchg
lea
popf
jmp
add
cmp
jbe
lret
xchg
xchg
into
dec
notl
js
int
fwait
jnp
mov
pop
and
enter
cli
dec
ret
insb
insb
frstor
xchg
or
adc
mov
jbe
adc
scas
cmp
outsb
imul
inc
jecxz
popf
jge
addr16
push
scas
cmpsl
bound
loopne
or
dec
mov
pop
fcoms
cmp
les
aas
test
es
adcb
call
mov
cmpsl
dec
in
repz
inc
pop
jecxz
or
add
scas
add
xchg
mov
push
popa
pop
xchg
mov
cmpsl
sub
scas
jecxz
ret
test
loopne
lea
and
and
test
fmuls
pushf
mov
imul
or
dec
jno
ss
pop
jae
jae
pop
stos
fmul
adc
sbb
clc
dec
cmp
out
in
xor
fcmovu
inc
fisubrs
xor
aam
movsb
xchg
ss
xor
jbe
fsubrs
push
xor
movsb
sahf
incb
outsb
push
pop
out
int3
xor
clc
ds
lea
out
in
pop
out
arpl
sbb
mov
push
mov
lock
mov
cmc
fdivl
jge
sub
mov
and
sahf
sti
stos
push
and
fldl
iret
push
movl
and
add
outsl
fsubrs
scas
inc
mov
add
sarb
mov
mov
jge
jecxz
xchg
lret
xlat
adc
push
mov
cmp
testl
or
pop
adc
add
stos
int3
mov
pop
int3
inc
subl
push
cmc
mov
scas
lret
mov
out
xor
adc
dec
testl
xchg
jmp
notb
xor
insl
repz
fistl
mov
das
jns
fsubrs
rorb
xor
mov
adc
xor
or
pop
lret
ffree
stos
inc
sbb
lds
cmp
adc
lods
pop
int
sbb
test
xor
jmp
imul
xor
sub
ret
sub
pop
stos
push
jo
xlat
lods
shrl
mov
xchg
mov
xchg
sub
addr16
shll
movsl
pop
push
ret
outsl
int3
jg
stos
sahf
sub
test
out
adc
int
jo
xor
mov
popa
sbb
out
aad
adc
test
repz
push
cld
jbe
repz
inc
or
out
stc
fstps
xor
pop
or
push
shll
push
or
xorb
xor
je
scas
out
xchg
in
adc
bound
inc
aad
shl
dec
xchg
in
imul
inc
dec
jle,pn
jecxz
notb
test
ret
push
fcomi
inc
orb
jns
pop
out
out
int3
outsl
stos
pop
pop
std
loope
hlt
cmp
and
test
sbb
add
iret
xor
and
xchg
and
ret
fmulp
inc
mov
cmp
xor
pop
pop
adc
sbb
xor
inc
and
add
or
or
and
fnstenv
or
mov
push
lds
jl
xchg
mov
xchg
pop
cmp
das
xchg
dec
mull
leave
shlb
ret
xchg
arpl
mov
sub
fstpl
dec
fisttpll
mov
stc
cld
sbb
popa
sbb
test
frstor
loop
neg
addr16
insb
out
jl
dec
loop
fsubs
insl
rcl
xor
loopne
and
mov
shlb
sub
nop
cmpsl
movsb
lcall
mov
addr16
negl
and
scas
ret
adc
sbb
pop
jl
into
rorb
adc
push
insl
jge
xlat
mov
repnz
or
push
shl
sub
aad
cwtl
inc
cs
lods
stos
pushf
fisubrs
fisttpl
fwait
xchg
mov
pop
nop
nop
pop
cli
inc
fldcw
in
cbtw
popf
cli
test
adc
out
sub
movsl
sub
or
cmp
std
repz
adc
mov
or
mov
xchg
xchg
sbb
or
testl
and
push
fs
push
gs
mov
fbld
mov
aas
xchg
adc
leave
xor
or
out
pushf
xor
inc
shl
jmp
jg
push
pop
sti
or
ret
nop
jmp
and
pop
pusha
adc
mov
adc
data16
push
sbb
ds
mov
test
lods
jg
inc
mov
stc
shll
mov
nop
popf
or
imul
mov
fisttpl
test
adc
lods
fistpl
and
xor
lret
inc
sub
lcall
mov
dec
sub
adc
adc
sub
adc
pop
jno
cmp
inc
sahf
loop
enter
push
mov
les
inc
mov
adc
push
fwait
sub
mov
bound
xchg
mov
adc
sti
push
dec
jcxz
jbe
jae
jae
mov
outsl
jmp
jno
sbb
or
dec
cmc
repnz
push
in
ds
enter
dec
mov
out
es
punpckldq
pop
jns
jl
enter
sub
inc
lahf
in
aaa
test
xchg
lahf
xchg
push
adc
pushf
pop
jnp
and
test
xchg
sbb
stos
adc
stos
hlt
int
idivl
stc
test
lds
out
enter
or
pop
jnp
lret
iret
loope
pop
fucomi
jmp
jnp
jb
negb
xchg
in
push
out
cs
mov
mov
jge
jbe
cmpsl
add
xor
jg
jecxz
clc
pop
jb
es
daa
cmp
cmpsb
mov
push
fists
ret
inc
stos
mov
push
add
movsl
in
pop
jge
imul
and
ja
mov
jne
sarb
mov
imul
sarb
pop
lret
pop
and
popa
cwtl
iret
or
jnp
out
mov
loop
xlat
xor
popf
xor
int3
cmp
mov
mov
xor
outsl
push
push
add
inc
aaa
mov
cli
movsb
pop
inc
and
xor
ja
fsqrt
ror
loopne
mov
xlat
pop
pop
add
call
xor
and
inc
sub
cmp
add
and
fcompl
inc
shl
jmp
hlt
mov
imul
mov
mov
jo
jmp
shlb
je
xchg
push
cmc
aad
sbb
rcrl
loopne
mov
fcompl
or
jns
mov
and
lea
mov
cmc
mov
sbb
das
mov
aam
repnz
cmp
sbb
lds
dec
xor
sbb
popa
aad
jno
lret
stc
sbb
data16
adc
jae
test
jl
divb
sbb
fwait
mov
test
push
xor
mov
mov
int3
sbb
ret
cmpsl
stc
fistps
lret
mov
push
aaa
test
popf
stc
cs
jbe
lock
outsl
add
cmp
test
cmpl
cmp
push
sarb
shll
enter
lock
pop
add
jl
adc
aam
pop
jp
aad
mov
xor
mov
mov
mov
arpl
out
jno
aas
andl
out
sub
pop
mov
fs
mov
jne
bound
push
jmp
pop
gs
sub
mov
pop
mov
xchg
jo
ja
fsubrp
mov
fmulp
and
xor
mov
sbb
addl
mov
mov
lods
or
adc
scas
rcrl
sahf
cmp
dec
xchg
cmp
andl
xchg
add
call
mov
aaa
or
mov
push
mov
enter
xor
rep
je
inc
sub
sub
aas
and
outsl
sbb
fbstp
cmp
add
mov
sub
push
pop
aaa
sub
sub
cmp
negb
out
dec
repnz
ret
idivl
cmc
fs
in
out
mov
arpl
sub
dec
push
mov
fdivl
rcrb
test
in
addl
add
and
cmpsl
pop
sbb
mov
popa
stos
sub
mov
sub
inc
out
movsb
jp
mov
xchg
xor
inc
call
sarl
or
mov
aas
flds
mov
mov
shrl
xchg
lea
xchg
outsl
pop
sbb
les
push
lea
in
xchg
sub
mov
push
ds
inc
xchg
jmp
mov
xchg
or
mov
xchg
js
mov
int
cmc
stos
add
shll
jb
jmp
in
pop
jl
in
rolb
xchg
int3
xor
sbb
adc
scas
xchg
stos
fwait
scas
and
xchg
scas
xchg
and
pop
pop
adc
and
mov
in
xchg
cmpb
mov
mov
data16
sub
mov
sarl
cmc
ljmp
cmp
xlat
push
lods
pop
xor
cs
mov
lods
clc
mov
sahf
sbb
cmc
test
adc
gs
mov
sub
popf
push
lds
imul
fimuls
sbb
ret
subl
adc
cltd
sarb
xchg
jae
fbstp
icebp
pop
cli
insb
arpl
inc
ss
push
fmuls
mov
mov
or
xor
pop
sbb
and
mov
and
iret
cmpsl
out
push
adc
xor
test
sbb
or
adc
sbb
lock
fstl
addb
leave
mov
outsl
shr
dec
dec
mov
cli
imul
lods
fadds
int3
movsb
ja
dec
push
mov
add
mov
ljmp
inc
cmp
cmp
dec
mov
mov
orl
sbb
pop
mov
sar
aas
jg
cmpl
xor
insl
cmp
stos
subb
pop
pusha
mov
and
xchg
dec
fstpt
inc
dec
fcomip
sub
pushf
dec
inc
cmpsl
lret
ret
push
lcall
iret
mov
add
push
adc
jne
enter
xchg
mov
mov
push
add
das
jmp
or
jno
insb
orl
pusha
into
pop
pop
in
rcll
shll
lret
mov
enter
inc
bound
jmp
aas
add
push
out
ds
idivb
or
test
adc
dec
adc
outsb
lahf
push
cmc
ret
les
fwait
and
imul
call
in
fidivs
loopne
out
test
push
mov
xchg
jl
scas
sbb
cmp
pushl
xchg
ss
jb
test
xorb
sub
insb
imul
div
sbb
cmp
jbe
or
push
xlat
std
jae
fsts
enter
cmp
xchg
test
pop
cld
movsl
mov
in
aas
push
data16
jge
pushf
vminsd
mov
shll
jb
scas
push
jl
out
cwtl
nop
mov
mov
jae
clc
adc
iret
pop
push
xor
push
int3
out
xlat
pop
jne
or
adc
addr16
cli
cmp
test
xor
sbb
lret
fbld
stc
clc
and
xor
fsubs
dec
stc
stos
addr16
nop
loop
decl
cmc
sbb
leave
adc
addr16
push
loopne
jg
in
js
mov
stos
inc
add
sub
lods
pop
ja
xchg
popa
sbb
addb
sub
jle
add
jo
cmp
xor
inc
push
notb
add
mov
js
xor
mov
int
icebp
sub
inc
pushf
clc
inc
mov
pop
dec
popa
out
lret
xchg
jmp
in
mov
ret
mov
push
das
dec
inc
mov
shll
mov
scas
cmp
xchg
insb
mov
mov
loop
ret
test
hlt
insl
cmp
test
and
popf
sbb
pop
mov
insl
cli
aad
jb
cmpsl
int
and
push
inc
push
adc
movd
adc
inc
int
and
xlat
push
jecxz
inc
add
lods
into
mov
fcomi
sar
mov
sahf
lods
xchg
adc
es
in
jle
jp
mov
ljmp
sbb
es
jp
mov
mov
lret
jno
stos
jmp
and
and
jb
or
cmc
mov
test
bound
inc
repnz
pop
jp
xor
xchg
mov
aad
and
push
mov
jo
cmp
in
xchg
hlt
jnp
lcall
cmc
jl
inc
aaa
push
iret
sbb
adc
andl
jno
mov
fists
sub
mov
xor
imul
push
jecxz
mov
outsb
int3
jp
outsl
rcll
jmp
pop
and
cmpsb
repz
sbb
shl
idivl
stos
sub
mov
into
or
pusha
xlat
xlat
pusha
cld
shrb
ss
pop
or
mov
es
mov
ds
mov
adc
push
sahf
inc
cmpsb
pushf
daa
jmp
rcl
mov
sbb
movsb
or
mov
xor
sub
movsl
sbb
or
xchg
cmp
sbb
and
repnz
sarb
les
xor
cmp
aam
gs
scas
mov
push
aam
and
pusha
add
fdivs
dec
jb
test
jno
mov
add
sbb
pop
or
inc
and
push
jecxz
ret
test
out
cmp
push
hlt
xchg
mov
push
pop
sti
adc
jnp
bound
add
inc
pop
sub
dec
add
nop
out
inc
sbb
test
les
or
adcb
test
clc
inc
leave
cmpl
xlat
xor
test
aad
mov
sub
mov
mov
lock
jno
shrb
jns
mov
out
xchg
dec
or
add
cmp
bound
pop
cmp
inc
mov
test
inc
dec
or
push
dec
or
dec
push
mov
cld
sbb
push
xor
or
inc
jmp
pop
cmp
fdivrl
mov
imul
and
cwtl
movsb
inc
pop
sub
enter
cmp
mov
mov
inc
cmp
cmp
lret
inc
enter
shrl
leave
fistps
push
xorb
add
out
jg
add
xchg
ds
pop
inc
jle
mov
sarl
dec
cmpsb
loope
mov
icebp
cli
cs
outsb
cmpsb
push
pop
xchg
std
cli
repnz
add
std
gs
sub
add
sahf
xchg
jp
fcoml
push
dec
mov
addl
mov
scas
cmc
dec
movsb
mov
roll
pop
dec
iret
mov
fmull
inc
pop
mov
or
sbb
push
fldenv
pop
daa
sub
adc
das
out
mov
sub
js
mov
mov
pop
xor
inc
ss
jbe
pop
test
push
or
mulb
lods
jae
jb
mov
pop
dec
js
cmpsb
popf
test
arpl
ljmp
jmp
push
mov
pusha
fs
jmp
hlt
mov
cmpsl
addr16
out
stos
dec
mov
fwait
adc
cmp
inc
xor
jmp
scas
push
jns
pop
jns
push
ljmp
test
mov
movsb
jg
sub
jno
leave
xchg
jb
sarl
xor
pop
or
andl
std
push
push
call
inc
data16
outsb
aad
inc
leave
mov
test
ret
popa
sbb
imul
mov
push
fcoml
int3
clc
or
shll
adc
adc
fnclex
sbb
dec
inc
sbb
test
push
xor
xlat
jmp
shlb
out
cvtps2pi
push
sub
rcll
push
arpl
dec
jnp
ljmp
mov
sub
sbb
xor
lods
sahf
cwtl
push
loopne
jnp
push
or
sub
mov
xchg
inc
out
repnz
xor
repnz
mov
lret
nop
dec
movsb
jl
sbb
test
xlat
sbb
adc
leave
cld
inc
jp
test
jmp
inc
loopne
adc
test
dec
or
shll
add
inc
sbb
iret
gs
inc
cmp
sub
push
shll
or
lret
cmp
and
loopne
mov
pop
and
fdivl
dec
popa
divl
mov
push
scas
xor
inc
movsl
xor
pop
mov
lock
xor
and
jo
es
subl
sbb
xor
mov
inc
adc
mov
pop
sbb
mov
into
dec
mov
lock
ficoms
pushf
mov
jno
inc
mov
adc
inc
dec
xchg
clc
dec
das
sub
mov
xchg
and
ret
xchg
mov
xchg
jl
mov
out
mov
mov
pop
in
icebp
cli
std
xor
push
inc
mov
mov
jnp
imul
xchg
xor
adc
out
jne
mov
cwtl
ret
mov
fistpl
andl
and
mov
fs
lret
sub
adc
test
dec
outsb
xchg
mov
push
cmp
stc
jecxz
sbb
mov
cmp
add
pop
xor
xchg
mov
das
push
popa
push
out
jae
call
aas
adc
mov
ret
repnz
lock
sbb
push
jecxz
mov
rcrl
cmp
ss
das
inc
jno
call
cs
jg
and
es
adc
cld
outsb
add
cltd
insb
xor
pop
scas
add
les
popa
lods
cli
enter
mov
leave
ret
jo
pop
cs
jne
add
test
cmp
pop
shrb
mov
push
jbe
shrb
movsl
lock
xor
mov
push
es
add
sub
inc
inc
stc
fnclex
pop
mov
cmp
imul
jno
add
dec
cli
jg
js
pop
inc
push
sbb
gs
dec
enter
jbe
mov
push
es
jnp
cmc
inc
xchg
sub
int
add
and
shll
mov
cmp
push
fsubl
sub
fdivl
cmp
and
lret
and
pop
cmc
lea
or
repz
loopne
dec
sti
push
adc
sub
pop
cmp
subl
cmc
add
repz
loop
cmp
add
repz
rolb
fidivrs
repz
and
add
jl
les
pop
sbb
xchg
mov
xor
rorl
fcomip
jno
in
dec
xchg
std
cmp
cld
push
clc
lret
enter
jle
cs
sbb
lods
adc
loope
shlb
outsl
insw
inc
addr16
movsl
sti
dec
mov
jns
xchg
xorb
test
out
dec
mov
addr16
fwait
push
insl
jp
andb
mov
mov
mov
in
mov
adc
aaa
xchg
fnstcw
mov
xor
and
push
shlb
gs
mov
inc
movsl
pop
sbb
xor
fdivrp
sbb
mov
add
mov
push
jge
pop
push
add
test
pop
aas
dec
add
sbb
push
bound
enter
out
fnstsw
rcr
loop
daa
or
sbbb
subb
cld
fnstcw
mov
jne
mov
pop
mov
xor
mov
ds
lods
inc
or
jg
inc
and
fwait
xlat
fsubrl
jae
sub
mov
fistpl
inc
adc
mull
xchg
shrb
int
sbb
push
int3
outsl
mov
push
aas
pusha
add
aam
jne
out
add
pop
cmp
mov
cld
js
dec
repnz
dec
outsl
sarb
or
cwtl
aas
loope
js
sub
sbb
roll
ret
cltd
xchg
mov
neg
adc
pushf
cmp
mov
jge
inc
pop
movsl
out
xor
mov
push
ror
pushf
add
subb
xchg
add
out
ret
int
loope
mov
and
pop
cmp
sbb
aad
xor
and
mov
es
push
popl
sub
sub
lods
out
mov
pop
sahf
pop
mov
or
mov
jne
roll
jecxz
inc
stos
xchg
dec
pop
movsl
mov
and
addr16
jg
loop
mov
scas
out
sub
imul
pop
jo
test
adc
into
mov
scas
int3
inc
dec
insb
pop
inc
pop
jge,pt
xor
xchg
test
xchg
xor
or
mov
sahf
xor
outsl
jbe
lods
aas
das
fwait
movsl
xchg
xchg
mov
inc
xchg
inc
dec
mov
cmovp
fdiv
fidivl
es
dec
dec
xor
lock
sbbl
pop
popf
in
mov
dec
push
adc
lds
sbb
repnz
dec
inc
mov
xchg
ret
or
mov
mov
add
insb
and
xchg
lcall
jecxz
and
mov
push
fucompp
fsts
sbb
push
sub
jo
xchg
push
inc
add
lea
push
outsb
test
or
or
xor
insb
repnz
test
dec
popf
mov
adc
cmp
push
xlat
leave
incb
nop
xchg
jns
dec
scas
inc
xchg
xchg
mov
pop
mov
div
fwait
cmp
imul
shrb
xchg
xor
inc
xchg
repz
and
lcall
es
adc
insb
sbb
inc
or
push
outsl
mov
mov
sub
lret
sub
adc
shlb
xor
inc
faddl
arpl
ja
dec
cld
daa
scas
sub
push
fsubl
jb
inc
cmpsb
jae
lods
negl
xor
out
in
andb
cmpsb
inc
in
out
in
icebp
push
mov
sar
xchg
jo
add
repnz
sti
mov
in
dec
dec
dec
pop
mov
inc
push
andnps
or
cmpsb
dec
xchg
jo
aaa
test
xor
gs
jmp
mov
add
push
jo
xlat
adc
pop
fs
push
pop
mov
dec
fidivrs
fimull
cli
inc
cmpsb
cwtl
mov
fldt
mov
leave
fucomp
and
sub
das
dec
dec
push
insb
adc
push
cmp
jns
inc
mov
pop
inc
xor
into
jmp
push
fisttpll
add
in
ret
mov
fsubrs
or
jg
std
sbb
dec
lods
rorl
push
pop
stos
mov
in
fidivl
popf
addr16
rorl
sti
int
rol
icebp
imul
gs
leave
das
xchg
mov
xchg
ffree
cwtl
call
sti
xchg
mov
ljmp
out
das
adc
xchg
mov
xchg
push
sbb
dec
xor
or
pop
push
xor
sbb
das
pop
and
xor
dec
mov
dec
xchg
pop
bound
pop
mov
cs
inc
outsl
mov
fidivrl
out
je
gs
and
sub
inc
sbb
add
sub
inc
pop
sub
sub
mov
outsl
mov
dec
ret
sub
sub
cwtl
mov
stc
mov
push
mov
fmuls
mov
inc
push
in
jmp
mov
push
fstpl
xchg
flds
out
sbb
adc
xor
es
mov
push
fdivrs
data16
dec
aaa
xchg
mov
jmp
idiv
xadd
push
ret
out
lea
js
sub
pop
jmp
xchg
pop
arpl
fsubrs
jno
hlt
add
gs
add
push
gs
mov
std
add
jge
push
mov
pop
and
xchg
mov
repnz
push
sbb
out
mov
outsb
xor
adc
jbe
stos
fucomip
es
jle
jecxz
cmp
adc
dec
aad
insb
out
xchg
inc
jecxz
mov
popa
sub
hlt
jae
jae
mov
arpl
cmc
enter
in
pop
aaa
leave
orb
sbb
rcr
sub
icebp
sub
outsl
cld
mov
fisttps
clc
adc
nop
xchg
rcrl
xchg
out
mov
dec
cs
fs
jmp
ss
icebp
cmovl
mov
mov
movsl
out
cmp
cli
mov
xchg
into
fimuls
movsl
sub
insl
sarl
andl
iret
lret
jae
dec
repz
stos
enter
mov
xchg
pop
dec
call
enter
inc
aam
adc
mov
push
inc
in
lds
ss
xlat
and
jne
push
inc
mov
andl
loopew
bound
sub
mov
cltd
and
jnp
pop
push
inc
addl
xchg
shrl
and
ds
rcrl
cwtl
lret
ret
mov
xchg
js
nop
sbb
stos
jnp
mov
jmp
sbb
or
sub
out
and
pushf
add
xor
scas
xchg
pop
dec
push
leave
rsm
mov
ret
mov
adc
daa
sbb
ret
loop
fwait
sbb
sbb
adc
xor
dec
jmp
inc
xor
push
pusha
gs
xlat
pop
xchg
lcall
xchg
notl
cs
mov
in
in
mov
xor
jne
mov
ljmp
pop
aam
push
std
push
stos
movb
xchg
insl
sub
mov
test
jnp
dec
imul
xchg
outsl
scas
jg
sbb
push
adc
dec
repnz
testl
in
inc
pop
push
push
lret
nop
xchg
mov
mov
scas
jmp
mov
mov
fwait
pushf
clc
xchg
sbb
icebp
loopne,pt
mov
xor
faddl
shll
jnp
rolb
imul
mov
mov
adc
int
imul
fsub
jge
int
mov
pop
pop
out
mov
xor
cmp
gs
and
sbb
negb
mov
rcll
imul
pop
xchg
lcall
ds
inc
sub
into
pop
cmpsl
jmp
jl
cli
mov
cmp
into
std
popa
and
popa
shll
cmp
sub
push
inc
xchg
push
loop
enter
add
scas
cld
add
pop
dec
and
mov
cld
mov
pop
fstp
lret
js
sub
rcl
cmpl
out
pop
sub
cmpl
sbb
or
inc
xchg
push
mov
add
clc
popa
leave
les
push
mov
jns
out
xor
aam
shrl
jmp
cmp
sbb
and
movsl
je
and
sub
mov
adc
daa
or
adc
mov
push
add
notl
loop
jecxz
cld
pop
imulb
inc
xlat
pop
mov
add
xor
icebp
jbe
fst
rcll
pop
pop
movb
add
pop
fs
jno
cmc
filds
cli
dec
mov
inc
iret
xlat
ds
add
test
fbld
inc
mov
dec
or
scas
mov
rorl
je
mov
out
jecxz
mov
repz
pop
xor
inc
push
jp
adc
mov
push
fwait
pop
mov
mov
cmp
jp
in
in
inc
jnp
pop
clc
fsubl
mov
inc
addr16
pushf
mov
mov
mov
subb
ret
mov
fildll
int3
mov
and
out
stos
das
cmp
jge
and
cmpsb
jb
callw
xchg
mov
popa
sbb
mov
mov
cmp
add
fnstenv
test
roll
xor
xchg
imull
or
int
jo,pn
arpl
xorb
outsl
icebp
mov
js
sar
xor
lcall
ds
sbb
hlt
adc
stos
pop
add
icebp
sbb
mov
js
lahf
out
das
sbb
mov
xor
lret
loope
sub
pop
loope
jl
repz
aas
fwait
daa
inc
push
negl
icebp
lret
and
gs
mov
or
pop
idivl
ret
imulb
aam
popf
andps
jecxz
fsubs
add
lds
jno
ds
or
xchg
mov
mov
fnstenv
sbb
inc
das
pop
lcall
int
cmp
mov
and
xchg
jnp
and
in
inc
sbb
scas
rcrb
add
in
cmp
mov
cs
scas
adc
movsl
loopne
fwait
pop
movsb
cmpsb
fsubrl
test
ds
and
insl
test
sub
sbbl
jmp
popa
inc
sahf
flds
lcall
add
xchg
stos
xchg
js
jmp
xchg
inc
shll
sti
mov
sbbb
push
xorl
pushf
mov
popf
test
push
mov
std
push
out
xchg
mov
mov
add
scas
and
pop
movsb
mov
ljmp
sbbl
push
mov
sbb
jmp
out
cltd
imul
rorb
mov
enter
mov
pop
push
data16
divb
cwtl
movsb
sti
xchg
xchg
pusha
inc
inc
neg
mov
imul
iret
movsl
stc
and
mov
sahf
xchg
or
mov
pop
ss
push
sbb
pop
xchg
cmp
xorl
mov
sub
pop
insl
adc
bound
cmp
rcl
jl
xchg
ret
lahf
or
adc
jno
test
lods
jo
push
stos
andl
rcl
popa
cmpsb
cmp
outsb
mov
mov
nop
sub
add
cmp
add
sub
pop
mov
testl
in
ret
lcall
ja
ret
test
sub
in
sbb
xchg
pxor
andl
mov
or
sbb
pop
icebp
push
push
aad
outsl
pop
stc
sub
or
movsb
aam
xor
mov
in
jae
test
inc
pop
cld
lds
icebp
and
int3
add
xchg
and
lcall
push
sbb
std
jno
outsb
and
mov
aaa
repnz
sbbb
aam
pop
push
out
push
xchg
jmp
xchg
cmp
int
mov
inc
inc
aaa
bound
xor
stos
out
es
insl
addr16
xor
lcall
cmp
add
xchg
sub
adc
mov
adc
jno
mov
cmpsb
stos
lcall
cmp
mov
push
lods
or
jnp
test
mov
xchg
test
push
rolb
ficompl
pop
loop
shl
and
fisttpll
out
mov
test
aam
xor
out
es
dec
xchg
iret
sub
cltd
scas
nop
ljmp
xchg
push
or
xlat
dec
mov
dec
add
push
arpl
lcall
sti
dec
mov
and
add
sub
jno
jo
sub
sbb
dec
stos
test
negb
or
inc
jle
adc
js
mov
stos
repz
jne
cmp
in
mov
out
aad
scas
pop
mov
es
mov
mov
incb
mov
inc
push
mov
in
les
stc
push
pop
mov
scas
mov
aas
aad
lods
pop
mov
dec
std
mov
flds
ret
pop
xor
aad
movlps
lret
test
xchg
push
pop
test
icebp
pop
cmp
jne
pop
or
push
mov
arpl
xchg
inc
push
push
jns
clc
movsl
lret
mov
scas
cmpsl
movsb
pop
cmp
cwtl
or
dec
cwtl
adc
dec
jle
mov
jo
andl
lret
int3
fwait
push
or
mov
mov
pushf
stc
out
push
jb
out
push
ret
mov
inc
lods
push
lds
pop
push
cli
dec
cmpsb
daa
jg
add
mov
fs
push
mov
fsubrs
rcr
test
xor
xchg
pusha
inc
cmc
pop
rol
inc
pop
fcomp
cwtl
push
mov
pop
jmp
push
jp
sbb
jb
dec
adc
sbb
adc
mov
adc
mov
lods
add
addr16
xor
frstor
aad
nop
xchg
sti
clc
jo
ret
inc
sbb
lea
in
lret
xchg
test
cmpsb
push
hlt
fnstsw
lods
inc
imul
pop
dec
repnz
pop
popa
arpl
lods
mov
cmp
lret
cmp
shrl
movsl
fwait
or
fcmovne
dec
fimull
add
sarl
xchg
push
mov
sbb
cli
daa
fldcw
and
fwait
jge
lods
fdiv
pop
cltd
cmp
mov
pop
cmpsl
jae
xchg
loop
ja
enter
sbb
mov
fcoml
push
xor
rcrb
mov
mov
shr
adc
jae
pop
cli
orl
in
push
lahf
add
inc
int3
or
or
pop
filds
daa
scas
rcrb
in
frstor
pop
nop
sarb
xor
inc
sub
xor
push
das
subl
addr16
cmc
add
jbe
pop
ss
inc
lds
xor
imul
mov
out
fisttpll
clc
xchg
rcrl
cmp
out
popa
mov
mov
add
pop
fists
xor
out
or
sub
insb
push
ljmp
repz
add
arpl
push
xchg
mov
mov
push
fisttps
pop
mov
pop
cmp
push
les
test
mov
cmp
in
int3
hlt
sub
clc
loope
sbb
out
ss
mul
cmp
aaa
pop
add
jecxz
repnz
sub
imul
into
ds
xchg
test
adc
xor
or
test
dec
cmp
in
daa
loope,pt
fs
xchg
dec
nopl
ljmp
xor
pop
xchg
divb
fstps
push
jbe
stos
xchg
xor
push
hlt
and
js
pop
dec
les
inc
and
cli
sbb
lods
and
ret
mov
mov
and
js
push
add
push
fldl
inc
xchg
push
sbb
pushf
in
dec
sbb
ljmp
push
mov
mov
les
and
sub
add
mov
inc
push
hlt
mov
iret
push
mov
pop
std
or
dec
mov
xor
into
jg
ss
sbb
iret
push
jp
xchg
xor
mov
jmp
mov
insl
mov
inc
arpl
xchg
mov
push
add
xchg
mov
inc
fsts
jmp
nop
jnp
or
call
jnp
mov
sub
dec
xchg
sar
hlt
jl
loopne
aad
cmp
pop
ds
push
jb
imul
outsb
loopne
dec
fwait
xchg
lahf
fisubrl
out
xchg
add
cld
mov
out
cmpb
testl
push
outsl
fs
pop
loop
leave
lds
into
sub
movb
dec
stc
or
pop
mov
inc
nop
adc
fwait
sub
stos
cs
add
hlt
inc
pushf
dec
jns
xchg
sbb
dec
xor
jne
xchg
movsb
adcl
jl
hlt
imul
dec
nop
xlat
xor
daa
adcb
inc
mov
fsubl
mov
ds
sub
add
mov
jecxz
dec
inc
fidivl
cld
scas
mov
cmp
rcrl
xor
loopne
xor
mov
mov
fwait
pop
or
iret
or
push
jle
cmp
lds
scas
rcll
sbb
leave
mov
sbb
jecxz
outsl
dec
js
cmp
cmp
mov
addr16
cwtl
test
jl
and
jns
mov
mov
out
lock
cmpsb
jns
sbb
ret
cld
rorb
mov
push
xchg
push
mov
cmp
inc
es
inc
mov
shll
aam
jl
fimuls
pushf
jne
mov
push
mov
and
xchg
shlb
stos
icebp
out
mov
pop
dec
outsb
testb
cmp
push
daa
sbb
test
xchg
stc
fs
loopne
dec
jp
add
pop
pop
dec
lods
repnz
jle
shll
push
data16
shrb
ficomps
mov
adc
inc
xor
add
into
push
ror
idivb
pop
mov
movsb
out
sub
loop
push
movsl
test
les
out
insb
std
arpl
fucomp
jmp
dec
loope
test
mov
pop
mov
mov
adc
outsb
movsl
fnstsw
pusha
pop
fnstsw
pop
dec
mov
movsl
in
outsb
clc
cmc
xchg
lea
dec
jg
addr16
xor
sahf
aad
sbb
sbb
cwtl
fdivl
movsl
repz
xchg
cmp
inc
ret
add
and
lret
pop
roll
xor
push
jb
out
push
arpl
movsb
subb
repz
movsl
xchg
adc
cmp
pop
aam
ret
dec
jmp
fldlg2
das
lods
xorb
mov
xor
arpl
cli
add
movsl
outsb
lret
push
lahf
push
cmp
mov
or
push
insl
int3
xor
push
loop
sub
lock
or
lods
loope
or
je
nop
test
je
xlat
in
test
in
inc
sbb
jle
pusha
add
jp
mov
mov
mov
fsubs
ja
mov
mov
mov
fisubrl
test
das
cltd
cli
sti
xor
mov
shll
or
fdivrp
add
sbb
lea
mov
and
test
test
sbb
cld
sarl
add
subb
push
xchg
xchg
push
pop
xchg
cmp
pop
and
repz
mov
popf
loope
pop
xor
sahf
xchg
repz
pop
adc
test
sbb
xlat
sahf
jnp
pop
xor
inc
sar
cmp
jne
mov
push
enter
scas
dec
pusha
fldcw
out
aaa
add
scas
and
mov
xor
lods
insb
in
in
aas
mov
fwait
jo
push
jae
add
jmp
btr
test
dec
in
mov
imul
je
in
cmp
or
and
mov
mov
cmpsb
pop
andl
mov
lea
or
cld
sub
test
dec
mov
pop
xchg
popl
sbb
xchg
popf
and
push
inc
pop
cmp
aas
sbb
outsb
leave
xor
int3
aaa
sahf
subb
inc
jae
adcl
js
sahf
or
lods
lahf
fcmovbe
inc
hlt
xchg
pop
push
pop
push
xchg
jnp
loop
sti
xor
roll
adcb
nop
jbe
fdivs
mov
and
xchg
fs
xor
push
adc
out
idivb
imul
fnstcw
mov
and
ror
mov
jbe
sti
fistpll
mov
inc
cwtl
inc
clc
repnz
je
mov
fnsave
movl
jb
dec
mov
loop
or
cmp
cmpsb
adc
mov
cmpl
mov
sbb
and
popf
inc
inc
insb
pushf
insl
arpl
int3
movsl
gs
ja
sub
ljmp
int
inc
pop
adc
outsb
lret
fnstenv
sub
out
test
nop
imul
pop
cmc
jp
dec
aam
insb
lods
inc
and
lds
or
outsb
mov
sbb
lods
jno
std
scas
mov
push
lods
xchg
in
fistpl
or
insl
fcomps
fstpt
and
shl
sub
pop
hlt
sbb
popa
mov
addr16
jecxz
aad
jmp
loopne
add
testl
stos
dec
lcall
and
pop
into
cli
fdivl
inc
cmc
scas
sti
adcb
in
inc
ja
xorb
je
push
stc
adc
jbe
ret
mov
movsb
pop
sub
push
int3
push
xlat
popl
mov
ja
sub
jae
sbb
jle
pop
dec
mov
adc
jecxz
lds
repz
push
jbe
rorb
adc
imul
inc
adc
mov
adcb
sub
sar
int
inc
test
jno
addr16
in
sbbb
mov
cli
adc
loope
push
int3
xchg
xor
sbb
lods
and
ljmp
push
mov
pop
bnd
push
jne
cmp
outsl
and
out
xor
sbb
mov
addr16
jne
bnd
push
ret
movsb
imul
sbb
scas
ret
in
fistpll
sbb
lods
jb
popf
or
mov
pop
mov
insl
repz
mov
jp
cmp
lcall
dec
out
and
mov
jnp
aas
fmuls
fsubrs
mov
cli
push
mov
out
adc
std
xchg
xchg
sbbl
mov
mov
pushf
jb
mov
lret
fbld
push
je
push
push
daa
cmp
pop
pop
nop
dec
fdivrs
movsl
add
ret
lahf
lcall
int3
xchg
pop
jle
dec
jecxz
push
adc
xchg
ss
repz
scas
jle
sub
lock
jl
mov
in
mov
jno
lcall
xor
add
cmp
pop
lods
cmp
or
mov
mov
fcom
arpl
mov
je
pop
dec
cmc
sarb
dec
addr16
jno
mov
inc
and
xchg
test
lret
xchg
icebp
inc
movsl
cmc
sarb
mov
add
gs
out
xchg
jns
lds
aad
or
lock
jl
push
imul
pushf
jp
mov
in
sub
mov
push
jge
icebp
dec
or
gs
push
dec
stc
adc
sub
pop
insb
addr16
inc
mov
rorb
mov
or
cmp
clc
mov
xchg
inc
scas
clc
bound
jno
das
mov
pop
or
push
jb
arpl
mulb
mov
lods
xor
rep
dec
pop
in
iret
fcomps
aaa
mov
loop
jo
pop
and
xchg
jg
testb
aas
cltd
flds
jnp
fistpl
mov
xchg
les
sbb
xchg
jg
or
imul
cmpb
jp
adc
ffreep
mov
jmp
and
imul
pop
je
fmull
cwtl
ljmp
mov
jno
fs
push
enter
mov
or
cmp
je
mov
call
xchg
adc
push
and
dec
mull
dec
jmp
lret
xor
inc
cli
pusha
outsb
ss
adc
lret
push
push
enter
mov
sub
xchg
insb
jl
fistpl
mov
push
scas
loope
popa
shl
mov
cld
test
sub
divl
xchg
adc
lods
gs
push
and
hlt
mov
add
push
jb
int3
pop
pop
sarb
fucomp
out
sub
pushf
xchg
mov
push
jl
pop
mov
xlat
pusha
ss
mov
xchg
push
lock
mov
sub
pop
xchg
call
cmc
cld
pop
fiaddl
jle
pop
push
cmp
inc
fstpt
lock
inc
inc
fsubr
jbe
test
sbb
js
out
lock
movsb
cmp
mov
jge
mov
xorl
aam
enter
mov
sbb
orl
lea
insl
mov
lea
fwait
xorl
inc
das
int3
out
aad
ret
mov
ss
pop
insb
and
adc
add
jae
mov
mov
insl
mov
push
loope
sti
mov
cmpsl
mov
pop
lret
fcompl
dec
pop
addr16
add
sbb
push
sub
push
dec
sahf
cmc
repnz
dec
or
pop
lahf
xchg
popf
pop
adc
sbb
stos
jp
stos
js
bound
xorl
cli
in
cmpsl
iret
into
mov
adc
mov
test
dec
faddl
and
in
mov
jb
adc
jge
nop
or
adc
ss
or
orl
lea
jp
jmp
cmpsb
pop
int3
imulb
push
adcb
cmp
data16
inc
lahf
mov
xchg
ret
std
pop
cld
or
stos
or
xchg
inc
sbb
aaa
stos
bound
jecxz
fcoml
and
jno
pop
inc
adc
dec
fdivrs
cld
ja
scas
dec
lock
push
adc
bound
sbb
push
and
inc
ja
fnstcw
cmpsb
mov
dec
fmull
jbe
or
ja
ds
loopne
xor
xchg
into
icebp
xchg
mov
mov
lahf
sub
cmpsb
int3
mov
xchg
xchg
cmpl
rclb
cmpsl
bound
mov
mov
or
sarb
or
xor
aam
fnstcw
and
es
in
pushf
nop
push
lcall
push
icebp
sbb
push
mov
mov
inc
or
adc
adc
int
inc
movsl
pop
movsl
into
add
and
xchg
aam
push
cmp
and
or
cmovns
and
xor
push
inc
and
sub
mov
cmp
adcl
adc
jne
adc
data16
xor
aad
xchg
imul
scas
rclb
jb
loop
or
inc
mov
lea
hlt
cmp
icebp
fdivr
mov
in
adc
cmp
jnp
imull
dec
subb
jl
xor
sub
je
xchg
or
inc
cmc
cmc
cmpl
push
lods
pop
test
push
mov
cmp
outsb
gs
pushf
and
xor
fcompl
sbb
dec
sub
and
shlb
xchg
test
ret
mov
imul
iret
mov
jnp
cmc
fwait
lods
shlb
es
setl
notb
insl
dec
inc
inc
sbb
xchg
xchg
dec
push
mov
push
out
mov
dec
mov
adc
xor
ss
cld
push
shll
and
jns
jnp
lock
adc
out
aaa
negb
inc
jb
leave
pop
jns
cmpl
fwait
or
fistl
cmp
aaa
ljmp
adc
loopne
sbb
sub
stc
div
adc
xchg
loope
xchg
inc
add
dec
or
iret
add
negb
ljmp
xorl
cwtl
fstpt
data16
lods
das
mov
call
push
mov
aaa
and
or
int3
cli
mov
cmp
sub
stos
mov
out
mov
mov
jnp
fistpl
out
std
jbe
in
mov
daa
clc
adc
mov
cld
vcomisd
jo
outsl
in
pop
push
jge
jg
mov
lock
xor
gs
loope
fisttpl
and
data16
test
mov
ljmp
jno
pop
add
cmp
mov
adc
hlt
mov
gs
jle
scas
fbld
rcrb
jo
fildll
movl
aaa
add
ja,pt
sti
ss
movsl
push
push
imulb
or
and
pop
insl
ljmp
sbb
adc
clc
push
jge
push
xchg
in
sti
clc
inc
rorl
dec
loopne
insl
pop
inc
dec
sbb
jae
add
push
sti
and
cltd
and
mov
and
push
cs
scas
push
pop
adc
cmp
xchg
lret
sub
dec
jnp
and
test
mov
enter
sub
stos
push
xchg
cmpb
sbb
cmp
cmp
cltd
nop
bound
mov
pushf
daa
pop
dec
mov
inc
dec
aas
xchg
sub
mov
leave
mov
shl
rclb
mov
sub
xor
inc
or
in
inc
jno
add
inc
cs
jne
hlt
pop
jb
lcall
rorb
push
gs
mov
adc
into
js
fldcw
inc
sbb
pushf
sub
push
or
ljmp
cmc
repz
inc
mov
sub
ss
out
cmp
mov
push
xchg
cmp
and
int
dec
mov
push
sub
icebp
push
mov
jno
mov
mov
loop
loope
push
jecxz
or
ljmp
jbe
ret
or
call
scas
mov
add
leave
mov
push
push
pusha
sbb
push
out
hlt
sub
pop
jge
inc
xchg
in
xchg
mov
pop
test
lret
push
jg
repnz
movsl
stos
shll
stos
mov
mov
push
or
mulb
dec
lods
imul
mov
cmpsb
xlat
iret
xor
xchg
repnz
in
sub
push
mov
test
cmp
jns
repnz
insb
or
xor
lahf
add
xchg
jae
negb
lods
ficomps
sbb
hlt
rcll
ret
add
lods
fstpt
clc
clc
jnp
cwtl
ret
int3
ljmp
mov
sbb
idivb
jnp
push
orl
push
add
ret
cli
adc
xor
mov
data16
push
xchg
stc
imul
nop
outsl
jns
xchg
shrl
clc
stos
add
dec
mov
int3
mov
push
mov
pop
pop
pop
ret
xchg
mov
test
cmc
fsubl
hlt
adc
xchg
cmp
icebp
pop
mov
inc
and
and
es
cmpsb
loope
sub
sub
movsl
sbb
mov
jl
jns
int
sub
sahf
mov
clc
dec
pop
cmp
and
jecxz
pop
sub
push
push
dec
xchg
ljmp
aas
pop
pop
sbb
dec
pop
dec
xchg
xor
ds
std
adc
hlt
popa
mov
jbe
lcall
mov
in
push
out
dec
leave
movsb
negb
mov
pop
push
inc
lods
xor
mov
xchg
cltd
inc
or
pop
push
sub
dec
cmp
das
dec
add
in
clc
mov
xor
pop
pcmpgtb
in
in
int
cmc
cmp
gs
sub
cs
xchg
popa
out
xchg
cmp
int3
adc
mov
pop
cmp
test
sub
and
mov
mov
test
xchg
mov
push
cmp
cmp
mov
adc
adc
jmp
jp
and
adc
outsb
hlt
sbb
daa
out
js
mov
mov
sbb
push
jecxz
xor
cmp
pop
clc
mov
mov
sarb
inc
movsl
xor
jnp
jge
jge
jne
aaa
jb
in
xor
sbb
pusha
mov
dec
int
cmp
mov
bound
xorb
jne
dec
add
or
pop
push
out
xchg
push
push
lahf
iret
cmp
push
pop
std
aas
nop
test
clc
mov
sub
pop
pop
cwtl
add
test
out
sti
jecxz
cmp
dec
inc
dec
xlat
xor
or
pop
lcall
cmp
xchg
gs
push
cmpsl
fidivrs
push
sub
scas
add
mov
sub
xor
scas
jo
loope
jae
aas
sbb
js
add
es
and
ss
movsl
js
punpcklbw
pop
ret
mov
inc
lods
inc
nop
adc
mov
nop
out
adc
mov
and
pushf
imul
stos
lcall
testl
adc
scas
out
jno
pushf
sbbb
jb
rcl
mov
loopne
idivl
mov
jge
adc
dec
push
dec
sub
out
mov
pop
loopne
movl
pop
js
cld
cmpsl
fists
push
je
faddl
push
jecxz
pop
xlat
dec
push
dec
dec
sbb
xchg
dec
les
sbb
push
push
iret
ds
shll
lock
mov
xchg
or
and
xor
fldenv
xlat
jmp
mov
or
push
xor
xor
out
sub
out
push
movsb
lds
ret
mov
test
inc
aas
xchg
push
imul
aaa
mov
ljmp
xchg
mov
fisubrl
cmp
jbe
add
cmpsl
aam
xor
adc
xchg
mov
dec
dec
int3
cs
add
jnp
hlt
jno
pushf
cltd
sub
push
mov
and
jbe
sbb
aam
xor
sub
roll
int
inc
xor
addr16
cltd
mov
or
lock
adc
mov
mov
xchg
pop
out
cmp
pushf
ljmp
mov
sbb
rclb
repz
sub
add
das
sti
push
mov
xor
aas
sbb
scas
lock
xor
add
and
add
sahf
sub
dec
je
insb
cld
jl
adc
clc
fistpll
in
or
cmpsb
fstps
inc
inc
jns
cmp
mov
or
movsl
mov
xor
mov
jmp
jecxz
dec
lds
imul
xor
jecxz
mov
ret
daa
mov
jmp
mov
out
les
cmp
cmpsl
jle
sbb
and
pop
imul
add
or
adc
nop
mov
rolb
outsb
add
xchg
das
sti
mov
xchg
movsl
mov
and
jle
es
je
mov
jne
insb
clc
jo
push
lds
lcall
fldenv
inc
daa
xchg
mov
and
fidivrs
push
mov
mov
or
dec
mov
pop
mov
stos
out
sub
pop
sub
bound
mov
fcmovnu
push
dec
aam
sbb
sti
or
fsubrp
fs
in
cmc
pop
sti
pop
jo
xchg
push
pop
data16
clc
adc
push
mov
icebp
jne
pop
add
addr16
outsl
push
push
add
inc
xchg
lock
pusha
jg
repnz
ret
movsb
mov
dec
ret
in
popf
ljmp
sbb
lahf
dec
addr16
sbb
mov
fcoms
mov
in
cmp
inc
add
push
cmp
jnp
test
mov
pop
sbb
cld
das
xchg
mov
out
inc
dec
sbb
and
dec
lea
push
mov
lret
lcall
xchg
or
or
pop
lea
ja
dec
aam
ret
inc
fdivp
dec
jl
xor
aaa
xor
divl
mov
in
sti
lods
in
jnp
cmp
lock
or
cltd
dec
adc
sub
repz
mov
arpl
mov
push
rol
and
push
jae
cmp
dec
sbb
push
xor
scas
test
lahf
stos
pusha
das
mov
xchg
push
mov
mov
pop
xor
lds
jecxz
mov
jae
sbbb
xor
sub
jnp
mov
ret
rorb
pop
mov
movsb
insl
mov
stc
repz
push
fstp
mov
fbstp
sub
push
data16
sbb
push
sub
and
bswap
dec
dec
mov
push
mov
mov
adc
ss
and
push
xor
cmp
int3
push
stos
sar
scas
lods
xchg
jg
ljmp
es
ret
shll
push
jo
inc
mov
adc
orl
popa
jo
out
mov
jbe
sbb
xor
inc
xchg
out
testb
sub
and
incb
shlb
fs
int3
push
scas
lahf
cmp
xchg
sub
mov
stos
pop
sbb
je
int
decl
fucomp
stos
clc
sbb
in
sub
rolb
mov
xchg
clc
push
mov
leave
mov
bound
jns
inc
lds
push
adc
adc
dec
clc
adc
decb
rcll
dec
jae
cmp
imul
lock
cs
sbb
stos
sbb
inc
pushl
shrb
push
lret
sub
jne
repz
adc
test
push
xchg
out
dec
xor
cmp
jnp
xchg
cwtl
lret
call
cmp
xlat
push
shrb
push
ds
or
xor
pop
push
jno
inc
dec
cmc
mov
xor
mulb
sbb
xor
scas
lret
loopne
and
jnp
insb
sti
sbb
mov
dec
pop
push
push
movsl
xorl
loopne
clc
mov
mov
or
popa
cmpsl
repz
xchg
sbb
xchg
fstpl
std
xlat
ja
sbb
ljmp
movsb
jge
popf
jae
jnp
jmp
ret
cmp
dec
sahf
sbb
jnp
push
mov
stos
push
pop
fidivl
mov
pop
jns
xchg
dec
inc
insb
call
fistl
das
sbb
xchg
int3
sbb
aas
cmc
sbb
and
cmp
mov
adc
sbb
int
rclb
add
cmp
or
dec
lods
xchg
pop
cmp
jbe
pop
leave
xchg
pop
icebp
pusha
mov
add
pslld
and
rolb
mov
loop
mov
mov
das
pop
mov
sbb
mov
adc
push
lock
adc
hlt
dec
xor
sub
cltd
push
sub
bound
das
cmp
nop
addl
adc
inc
sbb
mov
inc
ss
inc
sbb
pusha
out
ret
inc
jae
jp
adc
repz
dec
sbb
insb
leave
jmp
das
push
adc
inc
mov
dec
cld
test
lret
or
inc
add
rcl
adc
push
insb
test
pop
push
test
lret
fchs
pop
cmpsl
adc
mov
lods
push
movsb
outsb
adc
dec
cmp
xor
or
push
ss
dec
push
rcr
fcmovu
imul
call
jae
pushf
inc
dec
popf
popa
outsb
fadds
js
icebp
shll
out
fisubrs
jnp
mov
pop
imul
jmp
xchg
mov
and
fs
sub
xlat
mov
shll
iret
loope
aam
movsl
cmp
sti
cmp
daa
sub
jmp
push
lahf
push
mov
mov
clc
cwtl
aas
xlat
or
inc
add
rorb
lahf
popf
sbb
ror
es
int
aas
push
rolb
and
mov
cmp
jg
lret
xchg
xlat
mov
dec
jl
mov
mov
and
xor
dec
comiss
and
loop
mov
imul
xchg
subb
pop
or
es
movsb
std
ffreep
aam
and
sub
xchg
ret
fisttpll
scas
add
scas
adc
lds
sbb
in
orb
ficompl
ja
push
xlat
add
sbb
hlt
insb
xor
stos
and
mov
ffree
pop
imul
das
out
cmp
enter
ljmp
mov
jp
pop
clc
dec
jb
push
addr16
adc
mov
aas
aam
mov
push
sub
cmp
jg
or
clc
incb
sahf
popf
addr16
and
imul
pop
scas
cmp
sbb
aam
lods
pop
aas
push
sarb
ja
fadd
push
inc
or
imul
rcrl
push
das
imul
shll
pop
lods
dec
jp
les
int
add
out
adc
imul
in
ret
es
mov
sbbl
add
in
inc
push
mov
dec
add
js
aaa
pop
cli
adc
cmpsl
push
cltd
pop
cwtl
idiv
sub
lahf
cli
and
cmp
push
adc
aad
xorb
loopne
push
or
dec
cmpsb
jle
pop
mov
add
call
jnp
and
jns
jle
sbb
jl
xchg
insb
inc
add
adc
sbb
adc
xor
imul
in
sbb
xor
cmp
das
pop
rorb
xlat
cmp
frstor
das
cld
in
adc
push
adc
filds
insb
popf
aam
rcpps
ror
jle
add
into
pop
popf
and
addl
lods
loop
adc
xchg
xchg
and
pop
shlb
add
sub
icebp
clc
ljmp
inc
pop
sbb
hlt
pusha
dec
cs
sbb
jecxz
mov
jb
sbb
clc
or
or
in
pop
repnz
lock
adc
inc
jbe
ds
mull
repnz
xchg
or
icebp
mov
jmp
lret
cmp
out
and
es
pop
mov
test
das
je
push
daa
lds
and
mov
or
mov
ret
ds
mov
sub
aam
and
jb
sahf
enter
and
adc
xchg
jno
sbb
call
inc
xchg
rorb
dec
ret
add
or
fidivs
cltd
andb
lahf
xchg
or
hlt
cmp
test
sbb
add
or
and
xchg
mov
iret
call
pop
jle
xchg
insl
ficomps
jbe
and
das
push
cmpsb
fdivs
jo
add
clc
stc
pop
leave
fdivrs
push
mov
pop
test
mov
repz
push
pop
cmp
int
dec
mov
repnz
pop
icebp
sbb
pusha
bound
lods
pop
adc
sub
ret
lock
inc
add
inc
aam
insb
xchg
cwtl
push
adc
pusha
mov
xor
divb
jmp
push
mov
sarb
imul
lcall
dec
movsl
push
or
sub
out
or
and
mov
mov
mov
and
in
clc
cmp
add
jle
mov
aam
js
loop
push
call
cli
cld
imulb
scas
ret
jl
addr16
cmpsb
inc
dec
orb
cmpb
sti
aas
ror
jns
fsts
sbb
pop
lock
jp
or
sub
mov
aad
out
les
rorl
iret
je
arpl
in
and
mov
cmp
fbld
shlb
xchg
adc
leave
arpl
lahf
lret
test
jne
enter
lret
mov
and
push
stc
cmp
sti
sbb
cld
mov
mov
push
sbb
mov
das
dec
pop
sbb
imul
mov
notb
and
int
lcall
shlb
or
cwtl
xor
aad
hlt
xor
addb
or
and
sub
jp
rcrb
push
outsb
inc
movsb
pushf
dec
mov
sbb
ficoms
addb
sbb
cmp
pop
dec
pop
xchg
xchg
enter
or
in
out
add
lea
enter
inc
dec
pushl
jmp
ret
dec
shrl
lahf
mov
es
xchg
add
dec
sub
je
movsl
sbb
push
xchg
or
xlat
ficomps
dec
ja
js
add
lret
orb
or
and
mov
call
in
aas
subl
sbb
pop
lods
xchg
jnp
imul
sti
lock
rol
inc
and
xchg
mov
adc
inc
jp
inc
aad
mov
shrd
mov
js
lods
adc
mov
jecxz
ja
aas
add
inc
mov
dec
ret
lea
push
pop
pushf
push
add
ficoml
mov
jnp
mov
and
push
jno
insb
xor
movb
dec
add
and
gs
cltd
sbb
loopne
and
lods
pop
push
cmpsb
lea
xchg
sarb
and
inc
sub
dec
sbb
aam
cltd
jne
push
movsb
mov
sbb
mov
test
mov
test
in
hlt
xchg
inc
pusha
in
int3
adc
les
test
mov
mov
or
fcmovne
adcb
and
jl
dec
into
push
sub
mov
or
movsl
movsl
fbld
loop
je
aas
inc
bound
mov
push
pusha
and
or
mov
movsb
push
nop
jb
push
aam
lret
fadd
pop
std
aad
xchg
pusha
mov
ss
mov
and
push
fs
in
sub
aas
int3
into
push
pop
mov
mov
out
orb
outsl
jl
xchg
ljmp
loopne
test
test
fnsave
outsl
pop
mov
lock
lret
push
jge
mov
daa
stos
jo
movsl
outsl
lock
mov
and
mov
in
shl
cwtl
cmpsl
out
cmp
loopne
sbb
mov
out
adc
insl
xor
dec
inc
fdiv
repnz
jl
cmp
push
out
or
lea
dec
mov
mov
sbb
or
enter
sub
fdivrl
mov
not
arpl
rclb
je
ret
jge
jp
add
adc
aaa
push
push
fwait
inc
mov
pop
cmp
dec
in
or
adc
cmp
jp
aam
data16
cmp
aad
mov
lahf
negl
push
lods
jge
jmp
mov
aam
push
push
xchg
mov
or
adc
sbb
xor
or
add
rclb
dec
sub
xor
dec
xchg
pop
mov
xor
ret
fsts
rcll
dec
icebp
jns
or
stos
mov
cwtl
scas
rcrb
adc
sbb
lds
lods
pop
inc
push
xchg
loop
mov
outsl
shlb
push
pop
mov
adc
cmpsb
cmc
xlat
stos
pushf
inc
jo
push
lods
rcrl
dec
stos
and
or
cli
push
xor
jae
cmp
xchg
bound
mov
mov
mov
xor
rolb
pop
add
fidivrl
aas
imul
jmp
popf
fwait
adc
mov
stos
lret
jp
cmpsb
mov
cmp
push
adc
rcrl
rorl
jae
fcoms
inc
xchg
je
aam
rorb
popf
out
mov
addr16
inc
cmp
mov
push
push
sbb
daa
lds
sub
subb
dec
sarb
xchg
jecxz
cmp
nop
repz
push
outsb
test
test
and
sarl
jno
cmp
pusha
ljmp
or
popf
aaa
lahf
adc
insl
xchg
xchg
lock
jae
push
cmp
cmp
in
jae
cmp
cmc
rolb
push
push
daa
shlb
les
mov
ret
pop
dec
and
jns
sti
add
movsb
and
leave
or
loope
addr16
shll
loopne
cmp
inc
scas
xadd
push
adc
notl
cmc
jns
cltd
ret
dec
test
lock
aad
sub
fwait
and
arpl
lods
fs
mov
ret
mov
cmp
pop
xor
cmp
fsts
push
shl
aad
aaa
mov
fldl
adc
and
test
xchg
add
rorb
fstpl
arpl
movsb
xchg
xchg
mov
pushf
push
js
xchg
js
cmp
outsb
dec
mov
add
mov
jmp
inc
xchg
adc
xor
lcall
sub
jl
fdivl
jnp
mov
int3
mov
lret
push
push
mov
cmpsb
out
mov
repz
lods
mov
push
aaa
pop
jbe
sti
jecxz
gs
fisttpl
sub
pop
in
cltd
scas
mov
push
lahf
scas
aam
push
cmc
mov
push
jbe
lahf
xlat
dec
jbe
xchg
andb
fcoml
adc
dec
fcomi
mov
cmp
pop
lret
or
pop
adc
leave
movsb
sub
cmp
xor
fscale
hlt
fisttpll
pop
repnz
stos
mov
fchs
stos
shlb
sub
push
and
pusha
xor
arpl
lods
out
mov
sub
cld
lahf
adc
test
insb
pop
jae
add
fdivr
jmp
or
push
ret
fsubrp
mov
mov
pop
pushf
out
movsb
stos
loopne
ret
xchg
aad
dec
or
movsb
xorl
mov
mov
push
lods
push
scas
in
or
sbb
mov
cmp
cmpsb
or
add
jp
leave
out
fdivl
jns
int
sbb
imul
pop
je
mov
sub
lods
incb
cli
sub
xchg
jnp
jge
add
pop
pop
cld
or
and
mov
adc
pop
stos
rcr
in
mov
stos
jmp
sbbb
and
adc
dec
fisttps
inc
sub
add
mov
in
and
add
jmp
es
pop
lea
mov
cmc
jno
stc
mov
iret
in
adc
jae
outsb
scas
mov
sbb
arpl
out
imul
das
or
iret
push
mov
jecxz
shll
pop
mov
mov
jmp
mov
fistl
adc
mov
push
cs
nop
ja
bound
inc
daa
lea
cwtl
and
jae
nop
push
ret
test
fbstp
dec
subb
outsl
rclb
mov
sbb
pusha
adc
addr16
test
out
inc
shl
inc
jl
popa
cltd
mov
scas
mov
mov
pop
mov
jle
cld
add
ds
test
jmp
mov
mov
testl
aam
es
loop
jge
mov
mov
out
push
mov
je
xchg
or
call
pusha
pop
in
mov
sti
dec
inc
mov
or
sar
je
aam
test
scas
inc
pop
mov
adc
fidivrl
pop
insb
vrcpss
jp
cltd
mov
wrmsr
sub
push
inc
popa
mov
sbb
ljmp
add
test
testl
bound
pop
mov
cmp
and
pop
test
xchg
enter
or
test
sbbl
sbb
rorl
mov
and
loope
pop
add
push
jecxz
mov
cmc
inc
fwait
test
push
shr
xchg
loope
lds
inc
in
mov
mov
fldt
sub
js
pop
push
mov
cltd
mov
adc
cmp
jbe
nop
loope
jp
push
stos
imul
jp
xchg
call
int
test
lret
push
call
in
cld
mov
xchg
xor
xor
xor
cli
pop
pop
lret
dec
sbb
addr16
push
mov
cmc
cli
loopne
out
dec
repz
mov
int3
jmp
lods
out
int3
sbbl
add
movsb
lods
ljmp
xchg
mov
cltd
or
push
divb
out
xor
pusha
adc
enter
cwtl
iret
dec
mov
and
or
in
cwtl
xchg
out
arpl
xchg
push
sub
call
iret
shrl
inc
fstps
mov
adc
xor
mov
mov
and
mov
ja
mov
push
es
pop
or
cmp
add
mov
mov
push
stos
or
mov
ja
sbb
lcall
mov
enter
add
jae
jno
out
or
je
ljmp
into
fmuls
and
mov
pushf
add
insb
add
scas
shl
add
xchg
aad
arpl
sub
cmpsl
add
adc
sub
lock
adc
dec
mov
mov
movsb
test
je
push
js
adc
imul
flds
pop
jle
dec
cmpsl
xchg
repnz
sub
dec
add
pop
int
sub
adc
dec
mov
lock
mov
push
out
dec
pop
add
jmp
adc
das
shll
lret
stos
stc
sub
add
or
jp
cmpsl
dec
cmp
dec
lret
lcall
pushf
rcrb
cmp
sub
jne
lret
repz
jnp
push
mov
adc
int3
fwait
lds
jmp
testl
and
mov
and
and
cmpb
test
rcl
stc
jle
cmp
fdivrp
mov
shll
pushl
ljmp
bound
icebp
jp
xor
repnz
rolb
scas
leave
inc
or
sub
mov
loopne
lahf
imulb
jg
lcall
adc
out
mov
aam
sbb
mov
repnz
lret
fmuls
fisubs
push
sbb
cmp
and
in
clc
lock
lds
adc
xor
jl
cmp
adc
mov
sub
ds
lods
pand
arpl
movl
adcb
push
out
ljmp
pop
idivb
and
xor
aaa
jp
adc
and
lahf
insb
mov
dec
cmp
iret
arpl
pop
and
mov
adc
orl
ljmp
movsl
mov
test
or
push
pop
call
pop
adc
dec
js
push
mov
sub
jbe
leave
xchg
and
sbb
int
subl
jae
lock
das
scas
scas
xchg
xor
inc
dec
popf
and
loope
mov
test
jne
cli
mov
sub
pop
out
rcl
xchg
push
test
mov
xor
lods
xchg
imul
push
out
mov
sub
arpl
adc
and
adc
loope
cwtl
lcall
std
mov
out
adc
lret
or
loope
ljmp
gs
pusha
jb,pn
xchg
jo
mov
ljmp
sbb
inc
shlb
mov
pushf
add
xchg
jb
push
aad
lret
jge
scas
cmc
pushl
jmp
xor
sti
bound
sti
inc
out
or
out
mov
repnz
icebp
shlb
cmp
xor
jp
jecxz
test
insb
pop
and
out
cmpsl
fidivl
dec
add
push
push
add
rcll
call
sbb
pop
aad
mov
cmp
add
jbe
lret
jmp
test
mov
aam
cmp
fistpl
in
jge
mov
fwait
repz
enter
cmp
cmpsb
lds
das
fs
scas
mov
outsl
sbb
jp
stos
pop
inc
push
mov
push
in
mov
xor
or
inc
xchg
stc
jo
sub
and
loope
pop
dec
xchg
es
lds
aas
and
ljmp
ljmp
ljmp
dec
mov
adc
push
adc
sub
xchg
xchg
jg
cmp
adc
mov
in
mov
or
and
lea
and
jp
push
add
popa
negb
xorb
pop
loope
jnp
jge
inc
arpl
pop
lods
jmp
xchg
shll
adc
cs
jbe
into
mov
and
jne
lds
or
dec
jb
lcall
mov
cmp
pushfw
and
aam
push
int
mov
sbb
loopne
out
and
or
clc
stos
add
imul
data16
sbb
or
mov
jle
push
out
cs
loope
push
inc
mov
push
daa
push
jecxz
je
jne
mov
sbb
ljmp
lods
mov
rcl
jnp
out
pop
mov
mov
fdivl
pop
sub
shll
xlat
nop
push
push
insb
jl
or
mov
bound
je
dec
inc
xor
das
add
add
xchg
mov
addr16
aad
in
push
sti
push
jno
aad
pop
aas
hlt
ljmp
nop
pop
test
stos
mov
add
cmp
and
imul
inc
imul
cmp
xor
mov
movsb
sub
out
and
or
lods
divl
push
orl
mov
mov
andb
or
adc
push
addb
add
fnsave
adc
and
jno
outsb
lret
xchg
ret
in
inc
lcall
ja
jno
or
scas
adc
daa
inc
mov
and
movntq
jo
imul
insl
loope
xchg
stos
xchg
jp
push
gs
mov
hlt
incb
ds
or
addr16
fistps
mov
xor
arpl
lods
testb
clc
xor
fdivrs
or
sti
ja
sub
pop
pop
dec
mov
test
adc
jns
mov
ja
jecxz
aaa
insl
and
cmp
stos
dec
cmp
cld
dec
mov
ja
mov
sahf
add
push
movsb
mov
or
pop
jge,pt
popa
mov
hlt
add
mov
push
mov
icebp
int3
ss
loope
sub
jo
mov
andb
out
adc
pop
lcall
xchg
push
lock
push
and
push
xchg
inc
ds
cltd
lds
shrl
mov
jmp
in
push
xor
xchg
testb
adc
or
mov
mov
xchg
lret
jb
out
adc
mov
js
pop
outsl
xchg
push
rolb
dec
jp
inc
and
gs
dec
dec
ja
jmp
ds
jb
lods
movsl
ror
popa
pop
pop
jle
pop
add
cmp
mov
enter
mov
sub
rcll
mov
aaa
or
xor
in
test
adc
stos
sbb
sar
mov
or
clc
lods
outsb
je
mov
xchg
jno
inc
pop
movsb
in
insb
repnz
movsl
xlat
pop
cmp
out
dec
inc
jae
xchg
push
mov
in
test
push
push
xor
mov
push
insb
push
scas
sub
dec
and
lea
jb
int3
or
dec
les
pop
aam
call
incl
arpl
cmc
jmp
pop
adc
bound
sbbl
lock
subl
cmpsl
ret
jne
dec
mov
or
mov
clc
mov
or
push
divb
sbb
ss
aas
ja
lds
jge
mov
sahf
flds
jnp
movsl
incl
cmpsb
push
leave
inc
ret
mov
je
and
test
inc
lods
xchg
ficomps
xchg
push
dec
adc
nop
add
mov
je
mov
inc
fs
jb
adc
ss
mov
pop
xlat
cmpsb
push
jne
xor
shr
mov
scas
inc
aas
cmp
icebp
push
gs
xor
push
cld
cmpsb
scas
mov
mov
mov
xchg
cltd
mov
movsl
std
std
lea
imul
mov
xchg
sbbl
jmp
mov
jge
jb
sub
daa
in
loope
push
mov
negb
je
in
mov
mov
push
mov
pop
xchg
orb
adc
mov
dec
push
fsubl
sbb
xor
xchg
cmpsb
add
loope
shlb
push
fcoml
repnz
add
jecxz
jne
fbstp
in
int3
xor
lods
sti
pop
bound
xor
jp
lahf
push
push
jg
mov
mov
inc
inc
shlb
dec
push
add
or
sbb
jle
inc
and
jno
push
add
jne
pop
sti
popf
inc
sub
mov
or
pop
test
popa
test
scas
sbb
sub
iret
xchg
jp
stos
jle
movsb
mov
cmp
test
lret
leave
repnz
sbb
jns
les
scas
sub
inc
adc
shll
push
imul
test
sar
cmc
repnz
cld
pushf
test
push
and
enter
incl
jbe
push
mov
sub
cmp
lret
dec
jnp
jbe
call
sbb
jno
lods
sbb
dec
leave
sbb
jmp
cmpb
pushf
or
fsubl
scas
dec
insl
enter
jecxz
out
sbbb
test
sbb
and
sbb
test
adc
lret
push
test
pop
adc
leave
out
iret
and
lret
xchg
xor
stos
in
fsubr
in
hlt
mov
fwait
sbb
repnz
outsl
dec
sti
adc
fcmovb
add
fildl
bound
pushf
inc
cmc
decl
jp
imull
rorl
mov
or
dec
dec
adc
sbb
in
in
mov
push
arpl
mov
pop
lods
cwtl
repz
jne
push
adc
sub
push
dec
aaa
or
cmp
inc
mov
mov
out
ret
or
bound
dec
jl
sbb
jg
add
add
outsl
pushf
jle
add
cld
or
movsl
pop
mov
stos
push
stc
outsl
sub
inc
mov
movsb
inc
adc
xchg
or
clc
sub
movsl
lret
inc
lret
test
mov
enter
mov
xlat
popf
or
inc
xchg
mov
xor
dec
xchg
dec
pop
mov
mov
icebp
dec
aad
jecxz
jl
mov
leave
mov
or
pop
mov
in
rorl
sub
mov
xchg
shl
out
or
hlt
lret
popa
lahf
stc
xchg
mov
fildll
or
hlt
js
adc
enter
loop
std
test
mov
inc
pop
jge
repz
pop
fwait
mov
mov
jne
orl
lods
add
xchg
jecxz
dec
lds
or
and
js
add
loopne
xor
cltd
jb
or
rolb
mov
fldenv
movsl
int3
shrl
xor
adc
xor
shl
sbb
mov
ret
xor
lods
in
inc
cmpl
xchg
sub
jbe
std
ret
out
nop
sub
xor
mov
sti
jns
cmp
lret
fisttps
xchg
stc
pushf
mov
mov
jmp
jnp
int
add
shrl
cwtl
fmuls
push
int
add
lods
inc
mov
mov
sub
push
add
and
or
cltd
in
mov
mov
pop
push
pushf
jmp
shll
insl
loop
mov
sub
jnp
je
fistpll
mov
rclb
mov
inc
arpl
aaa
in
jge
xchg
or
divl
pop
sahf
lods
fwait
or
inc
cli
cld
cmpsb
inc
adc
ljmp
xchg
xor
mov
cltd
jne
push
aad
dec
sub
repnz
stos
insl
stos
xor
mov
mov
sbbb
lcall
insb
dec
sbb
mov
xlat
roll
idivl
inc
out
daa
mov
dec
push
jns
fstpt
xchg
cmp
push
in
aaa
or
xchg
sbb
cmpsb
es
xor
and
enter
testl
repnz
scas
lcall
push
xchg
test
and
pop
dec
push
xchg
adc
and
int3
mov
rclb
sbb
imul
jno
push
add
call
leave
and
push
adc
cld
sar
hlt
sti
out
or
inc
movzbl
insl
pop
push
xchg
shl
jbe
loope
cmpsb
inc
xchg
sbb
mov
or
out
mov
push
mov
out
gs
xor
ret
shr
lret
dec
pop
dec
pop
xchg
dec
sbbl
cmp
stc
les
out
xchg
enter
insb
and
iret
aad
dec
test
pop
aam
cltd
sbb
dec
clc
and
pop
fbstp
sub
push
int3
push
xchg
lahf
xchg
xor
pop
fsts
decl
cmp
fs
mov
adc
roll
mov
js
popf
lahf
ds
out
test
jecxz
adc
jno
imul
pop
pop
lret
in
clc
mov
aas
inc
loope
pop
call
mov
daa
popf
xchg
loop
xor
insl
jns
jbe
aam
mov
cmp
es
pop
pop
pop
jmp
add
mov
aas
lods
xor
dec
mov
pushf
ret
test
into
arpl
movl
mov
and
sub
fs
cmpsl
je
inc
pop
jle
or
mov
lock
xchg
sub
inc
sub
push
enter
or
das
cmpsb
push
mov
xor
std
mov
adc
lds
test
ret
xor
lea
js
es
pop
jge
mov
lds
sbb
mov
mov
inc
push
cmp
dec
pusha
pusha
cwtl
xchg
mov
idivb
and
jmp
jecxz
push
ds
int3
stos
cli
ja
mov
pop
jmp
sub
inc
mov
or
insb
arpl
sbb
scas
jno
pop
xchg
add
lahf
pop
into
out
pop
fldt
and
inc
ljmp
inc
sbb
stos
cli
mov
mov
add
xchg
icebp
ds
mov
insl
mov
mov
or
divb
fs
add
cmp
or
sub
sahf
jns
jg
insl
int3
cmp
add
dec
imul
and
push
sub
jo
loope
decl
mov
push
inc
inc
inc
add
and
sub
clc
incb
in
adc
ljmp
cmc
push
cltd
js
pop
inc
fidivs
mov
repnz
sub
out
sbb
repz
addr16
mov
inc
jp
add
gs
repz
adc
inc
pushf
pop
xor
mov
mov
test
cmp
aam
fisubrs
inc
mov
xchg
ljmp
sub
bound
mov
addr16
xor
imulb
ljmp
lcall
mov
sub
nop
jmp
sub
sub
test
out
notb
mov
fs
cs
mov
dec
je
pop
imul
ret
inc
hlt
adc
or
fs
pop
lods
ja
jae
ret
push
push
cli
imul
gs
rcr
and
xor
jnp
hlt
ret
mov
dec
pusha
arpl
xor
popa
lahf
jge
lret
xchg
pushf
mov
mov
push
inc
fdivs
push
lret
loop
es
sbb
jb
divb
insb
aam
lcall
sahf
mov
out
jb
mov
lock
adc
adc
jg
cmc
push
ss
in
shll
cmp
sbb
jns
cmpsl
pop
and
pop
mov
inc
lahf
sub
cwtl
xchg
mov
daa
xchg
mov
scas
pop
loop
add
popa
xchg
dec
xor
movsb
scas
sub
mov
cld
sub
int
mov
inc
sbb
test
sub
leave
sub
mov
fstpl
xor
sub
ja
jecxz
push
insb
jo
push
lock
adc
insb
add
inc
shl
repz
or
xor
insl
repnz
dec
sahf
data16
jge
jns
arpl
call
xlat
inc
and
cmpsb
dec
das
or
xor
mov
movsb
ret
ja
shlb
fbstp
lods
mov
push
jb
loope
inc
mov
and
repz
lret
adc
or
cmp
andl
sub
fstpl
xchg
popa
imul
cli
fs
pusha
nop
jg
shll
cmp
jns
fimull
or
cmp
and
lret
fldt
pop
mov
or
ds
xor
and
incl
pop
sub
mov
stc
int3
outsl
mov
leave
mov
adc
or
ret
aad
mov
jns
das
dec
sahf
rolb
add
sub
and
stos
insl
aad
repz
icebp
sub
cltd
cmc
fdivs
and
xchg
jecxz
jmp
insl
arpl
mov
sbb
rcrb
or
or
pushf
mov
jo
gs
sahf
sub
cmc
jnp
clc
and
adc
cltd
out
xor
cmpsl
mov
imul
mov
clc
push
adc
or
lds
pop
movsl
or
aas
lahf
adc
mov
sbb
fs
int
pop
sub
sbb
imul
jno
jmp
jb
inc
lahf
fdivrp
cmc
paddusw
sub
rcl
push
push
sbb
aas
sub
test
lret
fmull
mov
xchg
dec
jae
jle
dec
dec
lds
fcmovb
lret
mov
sbb
sub
adc
mov
inc
mov
pop
test
xchg
sahf
sbb
adc
jns
mov
fstp
mov
out
xor
iret
aaa
push
mov
movsb
shrb
scas
les
push
or
xchg
mov
or
pop
sbb
pop
xor
jae
inc
mov
mov
mov
and
push
adc
add
xchg
ret
dec
and
mov
in
cwtl
and
and
cltd
mov
sti
mov
sbb
stc
cmp
loopne
in
insb
jae
inc
out
cs
jecxz
sbb
sub
scas
sti
xchg
adc
sbb
push
insb
cmpsl
dec
and
push
mov
mov
ljmp
mov
insl
inc
mov
dec
loop
mov
cmp
decl
or
test
ret
cltd
xlat
push
aas
fidivrl
punpckhwd
fs
dec
stc
lods
pop
sub
scas
or
xor
mov
in
js
pop
xor
mov
scas
mov
mov
sub
cli
sbb
dec
mov
sbb
lret
mov
out
xchg
xchg
js
cmp
stc
fdivr
stos
ljmp
cmp
add
imul
jecxz
lock
inc
push
int3
cmp
lods
xor
out
repz
ljmp
inc
stc
push
xor
mov
xchg
pop
push
mov
scas
mov
jo
mov
xchg
jb
fcmovu
mov
ja
cld
inc
mov
mov
or
push
stos
lret
test
in
addr16
adc
test
or
aaa
add
pop
pop
clc
and
or
fisttpl
push
aaa
stc
inc
lret
lret
bound
outsl
popa
gs
and
add
cmp
outsb
jle
sbb
jmp
cltd
repnz
lds
pop
jg
ljmp
stos
mov
mov
sub
in
jnp
dec
repnz
or
loopne
xor
xor
jge
pusha
scas
in
sarl
push
mov
scas
scas
loopne
xchg
rclb
pop
cltd
mov
xor
in
mov
xchg
mov
pop
rorl
pop
xchg
dec
lods
and
jbe
mov
pop
xchg
cmp
int3
nop
lret
shl
shlb
cmp
inc
ja
movb
aad
ret
pop
inc
push
inc
gs
fcomip
sub
jecxz
lret
lods
sbb
pop
jg
stos
add
jb
add
mov
sub
aam
jo
stos
adc
sti
push
loop
sbb
je
in
insl
sbb
outsb
push
cvtps2pi
leave
or
stos
mov
sub
sub
cmc
jns
dec
outsb
mov
push
mov
inc
jg
inc
outsb
int3
jb
and
mov
jbe
mov
repz
in
push
lretw
flds
test
lods
loopne
push
sbb
push
cld
xchg
fpatan
mov
or
jb
scas
xchg
js
add
out
out
or
inc
sub
push
mov
call
inc
ret
cs
insl
xchg
aad
test
xor
pop
cwtl
sbb
xor
sbb
daa
aad
or
out
jo
rcl
mov
pop
inc
das
sub
sbb
push
dec
cmp
sahf
jp
sub
outsb
pop
daa
lods
lcall
arpl
cmc
js
sbb
fmul
out
sbb
jmp
testb
jbe
frstor
lock
das
stc
int
sbb
fdivs
loope
and
lret
repnz
add
outsb
daa
mov
push
xchg
push
in
sarb
xchg
scas
dec
add
adc
cmp
shrl
fistpl
js
push
imul
fs
ret
in
insl
lret
inc
push
int3
outsl
add
xchg
sbb
mov
in
movsl
inc
movsl
lahf
sbb
adc
out
or
sbb
push
inc
out
push
push
in
jne
cld
inc
outsl
dec
inc
push
mov
jle
xor
pop
inc
mov
mov
mov
xchg
pop
mov
lock
dec
mov
gs
inc
dec
pop
xchg
and
int3
and
jg
test
jge
test
cwtl
mov
dec
int3
xchg
adc
jp
std
mov
shrl
push
pop
xchg
out
int3
cmc
aas
lds
dec
jbe
cmp
aam
out
int3
stos
push
inc
xor
mov
add
jp
dec
aam
je
insl
jge
inc
lcall
je
and
fwait
sbb
pavgb
jg
jnp
mov
dec
out
es
mov
mov
mov
adc
fmul
jl
jmp
add
adc
xchg
pop
int3
or
add
jmp
mov
push
mov
sub
test
add
cmp
lock
arpl
mov
test
sub
arpl
sub
sub
ljmp
shr
xchg
mov
mov
jmp
out
lock
sbb
outsl
inc
bound
mov
xchg
lods
or
ret
insb
in
jp
sar
mov
xor
jne
mov
arpl
rolb
in
out
sarl
xchg
repz
daa
les
sbb
shr
fs
cmp
add
mov
pop
mov
es
sub
inc
xchg
daa
push
adc
je
faddl
mov
dec
xchg
or
jp
mov
adc
mov
ret
les
lods
dec
loope
sub
sti
inc
addl
arpl
jmp
xchg
sub
and
dec
ss
scas
mov
shlb
rcrl
inc
sbb
enter
add
test
loop
into
shlb
mov
adc
cmp
mov
and
add
jge
and
popf
rolb
mov
dec
insb
xchg
mov
nop
popa
jmp
mov
xchg
fnstcw
sbb
add
pop
in
insl
stc
sub
mov
mov
ja
inc
mov
stos
add
rcrl
jp
ss
repnz
push
sub
call
es
mov
ljmp
pushf
lcallw
push
nop
mov
test
push
pop
hlt
leave
push
pop
inc
sbb
and
loopne
mov
sub
jns
push
and
gs
mov
cmp
sub
aam
cmpsl
sub
in
and
inc
pop
xchg
inc
jbe
push
mov
mov
cmp
cmp
inc
push
mov
lods
mov
mov
inc
insb
lock
cld
dec
outsb
inc
cmp
xchg
negl
aas
ret
addl
mov
pop
out
mov
mov
dec
test
pop
dec
in
adc
sbb
gs
lods
cmp
sub
scas
sub
jb
ja
inc
ljmp
mov
int
leave
dec
dec
hlt
dec
pop
and
xor
and
xlat
out
leave
test
sbb
xorl
int
mov
add
and
jp
and
mov
movsb
fwait
in
outsl
sbbb
test
pushf
xchg
push
mov
arpl
push
inc
or
mov
arpl
xchg
or
cs
xchg
and
popa
push
fwait
lods
loopne
out
nop
int3
jl
pop
jbe
xlat
push
ds
stc
scas
push
jmp
shll
outsb
dec
dec
push
sbb
pop
jecxz
sbb
add
lods
clc
or
cmp
push
call
cltd
out
cmpsl
xchg
mov
and
add
test
adc
sub
dec
xor
add
or
mov
jb
sub
insb
imul
pop
cmpsb
dec
movsl
cld
stc
scas
iret
jl
push
dec
dec
add
das
xor
add
sti
or
popf
add
jmp
pop
sub
dec
mov
ljmp
mul
imul
fldl
call
out
icebp
or
xor
sub
ljmp
jl
sub
scas
aas
dec
xchg
mov
sbb
xchg
jae
repnz
movsl
cmp
push
add
xchg
sbb
mov
cwtl
test
fidivrs
out
repnz
pop
fmuls
cli
add
mov
call
pop
or
pop
mov
add
ret
mov
mov
cmp
ds
fisubs
aas
scas
mov
pop
cmp
xchg
inc
sti
cwtl
xchg
ffreep
mov
les
mov
push
and
xor
inc
ret
xor
jmp
sbb
je
repz
popf
repnz
mov
or
in
lret
loop
iret
and
adc
inc
push
jecxz
popf
push
xor
cwtl
js
inc
mov
push
sub
cltd
mov
addb
faddp
fisttpll
bound
bound
outsb
sub
lea
dec
mov
lock
outsb
adc
test
lock
int
int3
addr16
idivb
cmp
mov
mov
inc
inc
shrb
in
jnp
out
in
push
xor
jne
aaa
loope
adc
adc
xchg
mov
cmp
or
sahf
lret
lret
or
sub
adc
hlt
ja
sahf
test
outsb
out
jae
and
mov
imul
push
pop
lock
xchg
stc
xchg
add
dec
xchg
inc
bound
pop
mov
push
rorb
lcall
mov
cld
lret
mov
lret
pop
mov
jge
mov
mov
popf
ja
repnz
mov
xchg
sbb
in
or
out
test
std
cld
dec
icebp
push
flds
sbb
movsl
ret
add
dec
dec
inc
cmp
and
test
ficoml
inc
or
pop
in
clc
shlb
mov
jne
cmp
jmp
aaa
push
mov
cmp
adc
icebp
cltd
mov
js
in
mov
xchg
adc
mov
dec
mov
mov
mov
dec
push
pop
jne
test
jno
push
arpl
fcoml
imul
dec
insl
fs
ret
scas
mov
or
mov
sub
mov
vpsrld
outsl
es
cmpsb
ret
movsb
jmp
push
stos
fidivrl
repz
pushf
jne
lods
mov
stc
pop
or
aaa
icebp
scas
push
add
int3
out
adc
and
pop
outsb
xchg
movsb
aad
cmp
push
shr
scas
add
outsb
incb
rcrb
cltd
aas
mov
aam
sbb
jae
and
add
adc
addb
cvtps2pd
push
aam
iret
xchg
call
cmc
mov
cs
fldlg2
fimull
mov
aas
mov
ja
ja
adc
jno
in
in
mov
std
dec
mov
sarl
fdivrs
xor
pushf
mov
push
sahf
and
test
adc
push
dec
push
and
pusha
aam
inc
add
jnp
sub
inc
test
out
push
inc
mov
cmpb
adc
lods
xchg
jb
and
adc
and
mov
lea
je
sahf
pop
lock
fs
daa
movsl
jp
sahf
loope
rcll
dec
dec
out
in
push
cmp
mov
mov
into
jge
arpl
cmp
inc
fldcw
nop
leave
push
out
inc
fwait
sub
pop
sarl
cmc
aaa
push
sub
pop
leave
into
jmp
in
popf
negl
xchg
iret
mov
mov
in
out
sahf
sbb
jnp
fdivrl
xchg
sub
mov
fstpl
stos
popa
dec
nop
dec
sub
xchg
or
mov
xor
mov
push
aad
jmp
outsb
test
jne
or
movsb
iret
dec
scas
lods
xor
frstor
push
loopne
cmp
xor
mov
xor
sub
mov
pop
xchg
outsb
xchg
jg
stos
xchg
out
cltd
or
jg
call
out
push
xlat
sarb
out
jmp
jnp
sbb
into
test
or
jmp
cltd
mov
jnp
bound
xor
rorb
aam
mov
mov
ja
mov
mov
and
or
push
push
jb
jle
ds
movsb
pop
sub
or
push
dec
cwtl
mov
loope
mov
xchg
in
je
insb
dec
out
sub
inc
inc
jge
or
adc
loope
popa
fsubrs
add
push
shlb
sti
das
cmp
mov
mov
je
lods
dec
or
push
ffreep
add
inc
mov
xor
jle
xchg
xor
push
sbb
adc
dec
push
jbe
sarb
mov
mov
fidivl
mov
out
mov
mov
mov
inc
push
rclb
mov
cld
mov
jle
in
sub
insb
shrb
testl
adc
scas
push
push
sub
cs
add
inc
sub
pop
mov
and
or
insb
and
das
push
mov
call
cli
dec
testb
cltd
pop
ficoml
adc
lock
push
mov
test
and
lods
xchg
inc
jne
fsubl
cs
add
dec
fnstcw
add
imulb
inc
test
test
sbb
call
into
pop
imul
ret
incb
sbb
xor
push
mov
clc
sbb
test
sub
mov
scas
xchg
out
test
test
xchg
mov
rolb
and
mov
fistpl
je
push
jbe
mov
in
movsb
roll
mov
ss
sbb
and
fisttpl
aam
push
movsb
mov
sti
dec
dec
fcmovb
mov
imul
pop
push
xchg
adc
jnp
add
mov
in
test
mov
fmuls
mov
push
fs
mov
mov
jecxz
fisubrs
adc
cmpb
jae
xchg
andl
dec
cmp
lahf
cli
push
push
dec
add
add
sbb
into
mov
mov
xchg
xchg
mov
out
data16
scas
dec
addb
mov
cmp
adc
ds
xorl
in
mov
sbbl
dec
ret
add
pop
addr16
xchg
mov
add
loope
dec
inc
mov
decb
jae
ret
xchg
jecxz
outsl
out
ds
sub
add
fpatan
mov
mov
mov
xchg
dec
insl
outsb
bound
xchg
ret
pop
mov
push
lods
cld
cmp
xchg
pop
fucompp
gs
xchg
mov
mov
jecxz
lret
ja
adc
cmp
out
pop
adc
jg
mov
in
dec
cwtl
xchg
adc
xor
out
sbb
rolb
mov
mov
inc
sti
inc
pop
push
das
test
mov
repz
sub
inc
cwtl
add
mov
hlt
jno
rcll
pop
xor
pop
adc
push
int
adc
cli
std
ljmp
clc
pop
stos
call
repz
lret
add
stos
and
cmp
scas
jge
mov
ss
je
mov
pop
jl
and
mov
bound
jo
mov
xor
aad
sahf
and
in
dec
movsb
adc
push
stos
sub
ret
cmp
jno
hlt
add
sbb
enter
or
cmc
fwait
andl
fsubrl
imul
addb
mov
out
inc
push
or
or
push
cmp
outsl
aas
add
xchg
adc
jne
xor
mov
dec
rcll
mov
out
sub
add
incl
xchg
push
test
sbb
jg
in
xchg
push
mov
add
inc
fists
pop
mov
sbb
adc
adc
add
jns
insb
clc
jl
fwait
cmp
jbe
pushf
out
mov
xchg
push
and
mov
add
push
std
ficoms
outsb
aam
in
push
aaa
dec
adc
hlt
xor
push
test
pop
dec
add
ljmp
sub
or
or
cmc
xchg
and
hlt
out
jecxz
inc
notl
xorl
mov
popa
inc
and
mov
push
in
cwtl
adcb
nop
mov
aaa
aaa
dec
jle
in
cmc
aaa
and
mov
jge
addr16
repz
movsl
jmp
mov
and
int
lret
xor
data16
or
mov
rcrb
or
push
mov
push
rorb
jmp
dec
inc
push
testl
arpl
ja
je
jg
xchg
test
jge
leave
setp
out
and
mov
mov
push
fwait
push
adc
stc
lret
cmp
mov
cwtl
cmp
shll
stc
sbb
call
loop
mov
xchg
enter
lock
insb
add
ds
lret
js
shrl
outsl
cld
and
mov
fildll
or
fistl
ret
je
sub
in
or
sub
xor
enter
push
call
mov
sbb
cmp
into
repnz
xchg
cmpsl
shl
mov
xchg
jbe
into
out
rcr
mov
inc
xchg
adc
mov
inc
fcompl
sbb
mov
dec
inc
in
ss
decb
fwait
cld
into
mov
mov
xor
dec
mov
push
push
sahf
cmpsb
sub
int3
cmp
push
fwait
cmp
or
fs
add
ficoms
mov
jl
mov
fsubl
sub
jo
pop
lock
out
jne
lds
cld
fnsave
int3
xor
ficoms
cs
jns
in
push
shl
pop
hlt
ds
mov
sub
pop
dec
ret
test
jle
adc
movsb
fldpi
cmc
icebp
repnz
imul
lahf
pop
incb
xchg
mov
jmp
mov
cs
mov
jle
add
out
dec
or
jl
mov
leave
js
push
push
xlat
ficomps
mov
xchg
push
or
imul
sub
inc
or
mov
jo
dec
or
and
bound
rorl
jg
mov
adc
out
mov
rclb
in
mov
xchg
movsl
and
or
and
push
mov
mov
jne
push
sub
mov
push
jmp
clc
mov
jnp
xor
fs
cmp
aad
mov
mov
jbe
imul
push
push
or
mov
sub
and
cmc
adcl
fmull
fwait
fs
xorb
sub
pop
or
cmp
in
jnp
mov
push
and
rorl
sbbb
incl
out
loope
mov
xchg
ja
jno
dec
imul
mov
mov
mov
test
push
mov
dec
lahf
sbb
mov
dec
popa
dec
mov
in
push
and
fsubs
test
fucomp
sbb
mov
push
inc
popa
adc
lock
pop
frstor
adc
cmpsb
or
push
ljmp
mov
repz
out
lods
lcall
sahf
cmpsl
push
inc
leave
dec
dec
cmp
sub
and
cmp
push
addr16
and
or
jbe
and
pusha
jp
outsb
aas
adc
hlt
mov
arpl
cltd
sbb
cmp
mov
xchg
orl
xor
addr16
cmc
xchg
fwait
sahf
insl
cmpsl
push
stc
and
dec
stc
lods
jp
jl
jmp
mov
sbb
xor
js
push
inc
xchg
or
cwtl
js
sti
pop
and
sub
in
test
sbb
jb
mov
nop
jl
outsl
outsl
add
xor
push
addr16
mov
ja
shll
ljmp
sbb
adc
stos
mov
je
push
cltd
dec
jno
out
mov
lods
cs
xchg
and
out
lea
cli
mov
out
int
mov
fcomps
pop
push
pop
int
test
inc
push
lahf
xchg
ja
notb
into
shr
inc
les
adc
push
inc
lock
mulb
adc
mov
add
aas
adc
add
call
adc
call
cmc
mov
pop
lahf
insl
icebp
imull
mov
scas
xchg
dec
dec
mov
fidivs
jecxz
pusha
pusha
mov
xchg
stos
mov
jae
or
mov
fidivrl
and
shrl
dec
mov
jmp
sahf
popa
mov
xor
jae
push
xchg
mov
lcall
shlb
push
fwait
mov
xor
pop
pop
push
popf
dec
lds
data16
xor
inc
lods
test
nop
sub
push
dec
pushf
scas
andl
cmc
cltd
cmpsl
gs
pop
fwait
push
mov
jno
or
hlt
lea
out
andb
ret
stos
jb
xor
fidivl
test
out
push
jae
mov
pushf
push
or
aad
jle
inc
pusha
rcrl
icebp
pop
shrl
aaa
call
xor
or
das
jne
lret
jnp
xchg
and
lock
out
into
jno
andb
fsubl
cmp
push
inc
dec
testl
sub
int3
sbb
iret
and
xor
popa
jecxz
push
cltd
cs
scas
mov
mov
aas
and
xlat
cltd
pop
cld
push
pushf
sub
sub
mov
mov
jg
lods
pop
out
add
jle
shll
mov
add
outsb
xor
inc
and
push
loopne
cli
mov
add
pop
cmpb
jp
mov
add
daa
pop
mov
xor
aaa
outsl
mov
mov
pop
pusha
lods
and
sbb
push
movsl
jne
cmpsb
jmp
pop
out
mov
mov
xlat
adc
xchg
jae
loopne
jo
add
adc
push
jne
out
dec
mov
sbb
imul
xor
cli
outsl
outsl
insb
mov
or
mov
mov
and
or
fucomi
rcll
fs
xchg
pop
or
and
pop
pop
imul
stos
xor
rolb
pop
xchg
loopne
in
xor
fucomi
lds
movsl
pop
xchg
xchg
sub
lea
shl
jmp
xchg
cmp
cltd
cltd
xlat
pushl
das
adc
sub
loopne
mov
or
mov
repz
pop
inc
and
mov
adc
decl
push
movsb
fidivrs
movsb
repnz
lods
xchg
leave
mov
out
mov
scas
pop
lds
mov
mov
cmp
cli
jmp
cmp
jmp
sarb
pop
iret
push
pop
movsb
movsl
dec
subl
loopne
mov
bts
mov
inc
mov
add
and
cld
add
repz
popf
sub
push
pop
mov
in
pop
mov
pusha
pop
testb
cltd
sub
icebp
adc
in
stos
gs
cmp
andb
jb
insl
movsb
out
pop
adc
les
dec
insb
push
push
xchg
mov
inc
or
push
in
in
ret
rorl
movsb
mov
cmpsl
xchg
jno
push
xchg
pop
in
shll
xchg
int
dec
cmp
dec
push
ret
sbb
into
xchg
insl
pop
ljmp
into
xchg
xchg
and
lcall
lea
mov
sbb
adc
in
mov
cli
test
popf
jmp
call
lret
loope
stos
out
les
adc
mov
imul
cs
cmpsl
jmp
add
mov
sbb
outsb
add
inc
xchg
data16
movsl
fldt
and
shr
fidivl
push
enter
call
pop
xchg
lcall
test
mov
sbb
dec
mov
ret
jg
out
lock
aas
xor
adc
insb
push
lods
pop
rcrl
out
ja
mov
cmp
xchg
dec
scas
mov
loope
mov
xor
addr16
cmp
fnstcw
or
mov
arpl
inc
xchg
pop
add
call
push
xor
addb
cmp
mov
and
push
sub
std
mov
in
inc
fs
pop
in
aas
aaa
sar
test
mov
call
sarb
mov
lcall
jge
aad
loopne
fs
dec
pop
dec
lock
xor
jo
dec
vmaskmovps
loope
and
insl
lret
divb
jne
arpl
dec
jo
sub
inc
inc
dec
push
inc
sub
push
mov
jp
push
pop
cmp
jb
or
lcall
or
mov
sbb
shll
adc
pop
in
mov
sub
test
dec
int3
mov
sti
push
mov
xchg
mov
jp
insb
inc
cmp
mov
lcall
loop
push
cmp
jle
fsubrl
or
and
aad
xchg
mov
repnz
call
mov
inc
lcall
jg
sbb
mov
jnp
in
jae
movsl
inc
xchg
mov
xchg
and
jp
pop
and
jb
sbb
pop
mov
adc
cwtl
pop
iret
mov
xchg
pop
lods
and
xor
lcall
pushf
xchg
and
daa
jge
xchg
ss
hlt
mov
jl
sahf
mov
mov
dec
inc
fs
lds
dec
cmp
shl
sbbb
jb
xchg
adc
push
cwtl
lsl
ret
adc
or
and
imul
fcmove
push
lcall
scas
call
mov
jb
data16
in
out
ja
repnz
add
jne
cmc
push
sub
lock
sbb
mov
or
mov
add
vmwrite
rorb
xchg
shrl
mov
jno
fisubs
das
mov
mov
scas
les
ja
cmpsl
dec
inc
xchg
sub
push
repnz
sub
je
sub
inc
hlt
in
sbb
pusha
dec
dec
pusha
into
push
xchg
call
dec
roll
cmp
inc
dec
jge
adc
or
aaa
jg
dec
dec
imul
popf
and
jl
inc
jge
leave
aam
test
and
fldcw
test
add
pop
outsb
push
add
mov
scas
out
mov
pop
call
fcomp
fildll
icebp
sub
repz
test
fistps
add
mov
jp
shlb
punpckhwd
div
in
push
sar
mov
pusha
jns
xor
loopne
aad
xor
fildll
pop
cmpsb
imull
cs
out
js
lret
sub
stos
loop
cmc
push
add
mov
rcl
add
push
pop
scas
push
cmp
pop
scas
sahf
stos
sub
subb
pop
lds
in
add
test
xor
stos
xor
shrl
movsl
adc
jo
seto
sub
int
pop
sbb
scas
scas
lcall
out
out
sbb
mov
xchg
xor
mov
cltd
or
jmp
sbb
mov
cmp
out
repz
fdivrs
xchg
mov
test
dec
mov
cli
call
push
lcall
push
xlat
aad
and
les
jecxz
and
xor
je
cmpsl
inc
fcmovbe
jns
jp
movsl
outsl
cld
das
and
mov
lret
ss
notb
fwait
pop
push
lods
and
sarb
cwtl
pop
push
pop
arpl
repz
andb
lcall
or
lahf
jb
dec
data16
idiv
jg
shrl
sub
mov
scas
ss
fsubrl
pop
mov
in
xchg
inc
xchg
mov
pop
mov
mov
pop
mov
xor
xchg
out
bound
cmp
adc
loopne
std
int
jge
lods
xchg
adc
mov
push
sub
xchg
jae
popf
dec
pop
cmp
fldcw
xor
push
push
jmp
sbb
ds
mov
out
out
cmp
xchg
dec
je
xor
push
push
jge
into
push
cwtl
xor
adc
cpuid
sub
push
inc
pop
lcall
jb
jecxz
lcall
mov
rolb
sbb
test
dec
in
std
sbb
jp
mov
mov
cmp
popf
stc
adcb
lods
adc
mov
je
cld
out
movsb
addr16
fstpt
fistpl
add
adc
cld
scas
shll
pop
jmp
test
dec
fcompl
mov
sub
sub
cmp
hlt
addr16
ja
ret
scas
or
ficoml
lahf
and
cld
loop
les
pusha
lods
xchg
das
cwtl
or
cmpsb
jg
enter
pushf
negb
loope
sbb
test
lds
ds
add
pop
cwtl
mov
cmp
imul
dec
jo
test
das
cli
cmp
fs
xchg
xlat
cwtl
xor
jp
xchg
jge
insb
mov
lods
dec
fnsave
xlat
mov
sub
mov
cmpsl
mov
jnp
cs
push
mov
adc
int
mov
out
test
out
adc
add
add
iret
jp
mov
pushf
push
rorb
lea
jbe
les
movsl
push
movsb
in
jns
nop
xchg
shll
push
dec
stc
adcl
leave
add
scas
hlt
mov
mov
push
pop
or
fisubl
lds
subb
dec
test
faddl
loop
lret
and
xor
sbb
pop
fsubr
cli
repz
push
xor
clc
sub
rcl
inc
push
iret
sub
int3
imul
or
pop
mov
loope
xor
cltd
jnp
push
xchg
out
xor
imull
mov
cli
lahf
cmp
movaps
pop
inc
js
ljmp
jno
dec
lds
jmp
bound
shll
daa
popf
sub
fmuls
inc
test
shll
or
push
lods
push
daa
mov
inc
ljmp
jmp
inc
cmpsb
fcom
movsl
mov
mov
or
sbb
cli
mov
sti
or
xorl
cmp
addr16
fs
daa
mov
sbb
xor
xchg
scas
inc
jb
mov
stos
mov
leave
mov
ret
xor
jne
jne
and
push
pusha
ret
pop
xchg
aam
jae
ja
out
loop
xchg
add
cmp
xchg
call
cmpsb
sbb
idivb
fs
jne
mov
ljmp
int3
mov
xchg
hlt
test
dec
das
sbb
mov
fwait
stos
pop
mov
lcall
xor
cmc
lcall
push
sbb
rcl
xor
add
sub
dec
gs
push
icebp
pop
outsb
sbb
cmp
xchg
lcall
arpl
test
pop
arpl
adc
aad
pop
inc
jge
aas
xor
mov
popa
pop
loopne
outsl
add
scas
xlat
jbe
jne
ret
jb
idivl
jmp
fistps
mov
pop
lcall
xchg
inc
jnp
lret
and
inc
jb
js
stos
add
lods
mov
cltd
jmp
shl
sbb
mov
inc
ret
stos
push
and
shll
sahf
popf
add
add
push
test
jae
aas
daa
xor
imul
jns
ss
add
subb
mov
mov
std
repz
xor
mov
cmp
mov
jb
cmc
and
fisttpll
push
movsb
and
hlt
cmpsl
mov
clc
push
adc
stos
mov
mov
lds
xor
lret
sub
dec
movl
stos
sub
and
cmp
bound
fisttpll
xor
mov
jb
jg
and
mov
movsl
rcrb
sbb
aam
mov
jno
sarb
mov
shr
sbb
cmp
ds
clc
mov
mov
xchg
xchg
addb
and
add
cmp
ret
ja
adc
mov
das
xor
mov
das
outsb
movd
arpl
aad
test
mov
je
ljmp
pop
fsubrl
push
mov
iret
push
inc
cmp
scas
hlt
add
dec
add
xchg
pop
lret
jge
shll
enter
stos
movb
imul
sbb
inc
sub
dec
or
adc
test
jno
js
outsb
jmp
int
sub
inc
xor
aam
xchg
imul
inc
inc
cmp
pop
aaa
mov
xchg
pop
or
icebp
outsb
mov
fmull
xor
pop
add
ret
subb
xchg
movsl
jmp
xlat
ja
ss
xor
or
imul
jo
jb
pop
test
fcoml
in
jp
test
fists
push
lea
out
test
divb
in
sub
and
jmp
add
push
mov
dec
push
or
fidivl
lcall
fcompl
push
es
into
ror
shll
xchg
ret
dec
or
sbb
mov
leave
iret
in
xor
add
movsb
fisttpl
mov
into
repnz
loope
mov
icebp
sbb
andl
shlb
mov
insl
mov
loope
push
lahf
test
cmpsl
mov
xchg
cwtl
int
or
sub
lods
inc
aam
mov
icebp
xor
pop
xchg
mov
mov
mov
pop
aaa
mov
sub
add
cwtl
movsl
or
mov
cmp
test
rcrl
aaa
cmp
xor
pop
xchg
sbb
push
popf
shl
push
movl
push
shr
or
test
xor
ret
les
push
ret
mov
push
push
cmp
xchg
xchg
push
outsb
shll
bound
xchg
jg
into
jecxz
xchg
into
addr16
movsb
jle
ss
ret
lock
jnp
push
ljmp
jbe
lock
lcall
push
push
sbb
adc
ss
test
push
or
call
rorb
hlt
xor
jne
rolb
or
mov
adc
dec
adc
push
nop
mov
lahf
or
inc
add
add
sbb
pop
mov
push
or
cmp
xor
pusha
and
movd
xchg
sub
cmp
dec
mov
movsb
sarl
cltd
push
mov
sbb
std
xor
je
roll
clc
into
inc
outsb
and
aam
add
popa
shr
out
push
jle
jl
je
je
repnz
jge
data16
sub
les
int3
xor
lahf
cmc
inc
lcall
push
ret
mov
mov
ja
cmc
daa
addl
inc
gs
lods
sahf
ja
mov
pop
addr16
pop
mov
xchg
and
mov
insl
in
into
pop
insb
mov
xor
enter
lea
xchg
dec
jne
add
jb
dec
das
sub
movsb
out
inc
ret
sbb
push
cmp
add
mov
popa
inc
fcmove
in
shll
mov
push
cmp
mov
push
shrb
cmp
adc
lcall
jl
cwtl
jno
leave
repz
lea
and
js
scas
jmp
sbb
dec
or
xchg
xchg
shlb
mov
mov
call
xchg
js
lret
mov
in
push
sbb
loop
pop
and
xor
loope
je
ja
cwtl
orb
sahf
push
sub
les
test
jnp
mov
cwtl
outsb
lret
push
cmpl
imul
sbb
pop
sub
mov
xchg
lds
outsb
pop
pop
std
or
mov
xchg
add
cmp
mov
std
fxtract
cld
mov
mov
add
xor
add
or
outsb
dec
xlat
cld
mov
push
mov
in
ret
scas
xor
dec
push
mov
ljmp
jge
sti
lds
pop
stos
fildl
mov
in
push
pop
pop
mov
dec
inc
cwtl
lret
mov
jmp
sub
mov
or
orl
outsb
add
test
popf
divb
ss
shlb
adc
push
push
or
arpl
int
adc
pop
repnz
mov
push
mul
into
add
movsl
loope
ret
movsb
lcall
pop
inc
jle
jge
test
mov
clc
outsb
mov
inc
out
mov
sarl
jl
pop
and
cltd
xor
outsb
fadds
push
mov
cwtl
cmp
xchg
adc
es
or
test
jle
ss
hlt
xor
pop
or
cmpsb
push
sbb
xor
mov
jae
scas
xchg
adc
or
mov
pop
push
stos
sub
push
mov
dec
cmp
pop
ffree
call
sbb
or
aam
inc
mov
mov
and
dec
jmp
xor
fs
lahf
imul
insb
push
xchg
cmpl
test
mov
rorl
xchg
and
dec
pusha
sbb
jp
xchg
std
outsl
ret
lock
aas
mov
pop
cli
fwait
test
outsb
xor
cmp
push
test
cmp
sub
xlat
outsb
call
jle
movsl
int
mov
jbe
bound
inc
movsl
sbb
mov
mov
cmp
inc
in
mov
sub
ret
gs
xlat
test
test
mov
mov
jg
dec
pop
push
cmp
inc
sahf
fwait
jecxz
mov
inc
jno
iret
hlt
out
mov
test
sub
out
leave
popa
xor
sbb
jg
outsb
pop
fwait
insl
fimuls
mov
iret
ret
inc
sbb
loop
sbb
or
xchg
inc
push
filds
mov
inc
imul
call
jne
jge
push
iret
loop
xchg
sub
add
movsb
push
cmc
inc
inc
inc
daa
mov
bound
jns
test
imul
shrl
pop
dec
ds
pop
movsl
call
jle
add
sbb
aam
jl
pop
mov
mov
mov
mov
lock
cwtl
icebp
push
add
ficomps
mov
sahf
dec
push
out
inc
cli
mov
arpl
add
ds
cmp
sbb
or
add
xchg
mov
or
cmp
or
xchg
sbb
inc
and
and
push
inc
gs
jecxz
in
push
fildl
into
xor
add
mov
xchg
push
mov
mov
mov
rcrl
xchg
sub
outsl
data16
dec
cmp
mov
jnp
jne
sbb
pop
add
push
pop
dec
js
or
lds
xor
push
cmp
cmp
push
mov
xchg
xchg
stos
mov
jo
cmp
dec
and
mov
and
jae
mov
mov
movaps
cmp
mov
mov
cmovbe
push
lock
call
sbb
xchg
jae
pop
popf
popf
mov
lods
mov
popf
mov
gs
jnp
rorb
bound
out
test
hlt
int3
out
imul
mov
lcall
xchg
insl
jo
fsubs
fistl
and
aaa
bound
dec
jb
fldenv
clc
pop
dec
lret
in
and
es
out
ret
cwtl
iret
xchg
out
push
ss
outsb
mov
jns
in
dec
push
jbe
iret
dec
sbb
test
add
mov
outsb
lret
mov
cmp
pop
jg
pop
lahf
pop
mov
dec
hlt
pop
fistpll
cs
lea
xor
in
adc
sub
push
in
pop
pusha
scas
aas
cmp
cwtl
pushf
and
test
sbb
push
dec
cmp
inc
lea
mov
imul
pop
pop
mov
fcoms
icebp
pop
rorl
pop
xor
dec
xchg
hlt
sub
sub
mov
nop
sub
jne
push
mov
daa
movsb
insl
xlat
cmp
cltd
stc
loop
imul
sbb
pusha
and
inc
xchg
push
cmp
ja
addr16
jb
cmc
dec
sub
fstpt
jnp
sbb
adc
mov
in
pop
mov
shlb
lcall
dec
test
cmpsb
test
cld
decl
mov
test
sbb
and
cmp
in
lret
fsubs
into
lods
ret
sarl
push
sub
sub
and
imull
dec
xor
popf
cmp
call
xchg
fstps
movsb
shl
call
cltd
sub
pop
jnp
pop
cmovno
add
sub
push
and
mov
flds
mov
dec
xor
pop
aaa
or
sbbb
xchg
xor
mov
jecxz
lock
cmp
imulb
add
or
pop
insl
sub
cmpsl
cmp
hlt
frstor
and
adc
movsb
sub
sub
fiaddl
inc
cmp
pop
loopne
jmp
adc
ret
dec
push
xor
in
arpl
cmp
lock
cmpb
popa
mov
cmp
mov
inc
cmp
adc
pop
mov
adc
stos
jp
xchg
repnz
cltd
pop
not
add
sub
lods
aas
xchg
sbbb
sub
jmp
jge
mov
call
das
jle
ret
and
stos
cmpsb
outsb
lcall
jo
push
enter
jne
xor
adc
rcrl
push
insb
in
jne
mov
or
jp
xchg
adc
arpl
lret
nop
jmp
loope
sub
in
mov
movsl
lahf
das
js
and
jmp
aas
in
adc
ja
sbb
xchg
push
cmp
mov
push
inc
add
mov
sbb
xor
orl
sbb
add
fidivl
add
jmp
call
loopne
cmp
or
lock
lock
pop
push
in
xchg
cmpsl
pop
mov
test
pop
pop
orb
les
fs
int
dec
mov
or
cmpsb
xor
cmc
in
inc
xor
and
mov
jno
xchg
cmpsl
jne
rcrl
adc
int3
daa
xor
add
pop
lds
hlt
add
mov
cmc
stos
sub
pop
les
ret
sbb
dec
dec
push
inc
test
std
pop
lods
fidivrs
sub
popf
rcll
lods
dec
xor
lahf
in
outsl
dec
sub
lods
and
adc
xlat
arpl
js
imul
jge
xlat
ds
pop
xorps
cmp
dec
in
repnz
jge
xchg
icebp
sti
loope
xchg
pop
or
in
inc
cmp
dec
test
xchg
movsl
mov
and
cmp
pop
clc
insb
mov
dec
aas
add
lret
aaa
ficomps
orb
lods
test
cmp
in
add
dec
xor
jmp
data16
cmc
movsb
inc
jecxz
out
rcrl
or
adc
pop
hlt
pop
cmc
rclb
mov
shr
out
jmp
imul
jnp
out
sbb
out
fiaddl
xchg
sbb
push
add
jnp
not
push
mov
mov
and
pop
gs
and
push
or
or
iret
cmp
and
sbb
sub
sbb
push
ljmp
mov
testl
push
inc
aaa
repnz
dec
dec
xchg
cmpsb
int
js
cmp
lahf
cmp
ljmp
std
jne
cmp
mov
outsl
jne
popa
mov
push
and
push
sub
sub
xor
pop
or
sub
bound
jg
xchg
dec
lods
rcrl
roll
mov
mov
and
icebp
lret
lcall
scas
dec
jmp
cmp
pusha
mov
push
cltd
repz
push
sub
lea
mov
push
shl
add
outsb
loop
pop
mov
int3
dec
adc
jl
pop
imul
fidivl
les
pop
mov
dec
loope
or
mov
aam
das
shrb
pop
ja
inc
lock
and
cmp
out
jecxz
dec
or
lea
or
lret
xchg
stc
lret
mov
pop
hlt
call
push
cwtl
push
adcb
jmp
insl
adc
dec
daa
ss
xor
and
iret
push
lods
jne
xchg
cmpsl
sub
adc
pop
xchg
xchg
into
in
sub
adc
call
mov
movsb
cli
test
xchg
inc
lret
push
in
pushf
lret
call
shlb
test
test
dec
test
fucomi
stos
add
test
sub
jmp
sbb
in
cmp
jns
clc
add
mov
inc
cmp
lea
es
jno
in
sub
mov
data16
xlat
pop
imul
push
clc
cwtl
popa
cmp
mov
cmp
loop
ljmp
sub
test
inc
lods
aaa
outsb
xchg
pushf
add
outsl
mov
jecxz
sub
jmp
mov
pushf
jnp
mov
test
jo
fisubrl
mov
lock
and
addr16
je
xchg
cltd
xchg
vmread
fmuls
or
out
jmp
mov
mov
test
cmc
insl
jecxz
arpl
add
adc
call
pusha
sbb
sbb
inc
repz
lahf
adc
xchg
das
in
mov
or
sbb
fldl
and
ss
dec
pushf
sbb
clc
xor
leave
scas
addb
inc
adc
in
lahf
filds
and
nop
push
ret
add
inc
xchg
push
add
je
popf
or
jecxz
fistps
gs
jne
pop
adc
cmp
mov
sub
xor
fsts
jmp
scas
jbe
pop
xchg
push
jns
enter
mov
jb
int
loope
paddusw
jecxz
xchg
sub
jge
mul
jb
clc
cs
lods
cmp
ljmp
mov
push
pop
mov
jp
outsb
daa
or
pop
inc
lea
cmp
pop
mov
push
add
lret
mov
sahf
pop
sarb
mov
shll
loope
dec
out
pop
out
cmp
and
xchg
rorl
fstps
mov
out
add
or
mov
inc
lret
mov
and
dec
push
xor
push
lret
inc
xchg
sub
adc
sbb
mov
adc
mov
rcll
bnd
pop
scas
mov
mov
imul
and
mov
xor
lods
and
cmp
xchg
jg
test
lock
loop
incl
movsl
jg
sub
jae
pushl
cwtl
popa
dec
lret
mov
aaa
lods
mov
sub
fs
xchg
adc
xchg
insb
lret
pop
jmp
and
xchg
cmp
push
and
cld
xor
mov
popa
dec
dec
aaa
std
ja
xor
xchg
mov
mov
out
pop
xchg
fldcw
mov
xorb
aad
dec
jmp
cwtl
out
int
scas
inc
sarl
loop
jle
add
cmp
popf
and
and
repz
mov
sub
and
jbe
imul
test
jg
push
and
adc
out
xor
lret
pop
adc
popf
ds
and
ljmp
scas
icebp
test
xchg
arpl
lcall
cmpsb
cmc
mov
mov
sti
cmp
xchg
push
addr16
mov
loopne
int3
pop
sahf
imul
jno
sub
adc
sub
je
mov
lods
neg
ja
inc
dec
jmp
push
outsl
jmp
sahf
adc
repnz
dec
mov
adc
lock
mov
aam
cltd
and
jo
pop
push
add
rolb
repz
add
jmp
add
stos
or
xor
into
xor
or
ds
push
xor
mov
jl
lcall
xor
daa
arpl
popl
repnz
xchg
loope
dec
sbb
xor
sbb
in
xchg
lea
xchg
lods
gs
and
imul
fs
aas
or
ret
push
outsl
mov
mov
mov
icebp
loopne
imul
jns
sub
in
pop
sbb
out
xchg
clc
fisttpll
div
outsb
or
leave
pop
push
sub
pop
add
mov
sbb
loop
inc
cmp
addr16
lds
mov
mov
xor
mov
cmp
lcall
inc
lahf
rorl
stos
sub
mov
adc
insb
dec
loop
mov
pop
jg
inc
jp
adc
and
adc
jne
or
sbb
jmp
aad
repnz
lods
add
xchg
sbb
je
xchg
fldenv
mov
shlb
pusha
fcmovbe
clc
sub
aaa
push
int
jecxz
pop
sbb
dec
jns
cs
push
cmpb
lds
push
scas
xlat
inc
fadd
fistl
pop
popw
int
sbb
jns
in
cmp
xor
dec
cmc
aas
mov
push
cmp
pop
mov
rorl
xchg
mov
rol
jae
imul
loop
push
mov
pushf
hlt
pushf
jl
xchg
adcl
lret
les
jnp
pop
cwtl
fwait
in
enter
inc
ficoml
sub
cltd
dec
ret
xchg
xchg
fists
sbb
mov
mov
cwtl
xor
adc
push
popf
outsl
inc
gs
int3
xchg
daa
pop
xchg
movsb
aam
stos
and
cltd
adc
mov
int
sbb
into
loop
mov
sbb
imul
sbb
out
in
stos
mov
pop
sarb
jno
pop
and
lcall
add
movb
lcall
inc
pop
jnp
sub
ret
fnstsw
cmp
movsl
orb
loope
mov
or
test
inc
gs
call
adc
popf
repnz
div
and
lret
jno
jl
mov
stos
pushl
inc
mov
aas
xor
xchg
loop
pop
in
push
insl
rcl
in
pop
push
xchg
dec
dec
pop
rorl
scas
add
mov
mov
push
jns
xchg
fdivrl
fstps
sub
ds
jmp
xchg
enter
mov
orb
mov
mov
xchg
xor
add
adc
leave
fmuls
push
adc
repz
pop
lret
xor
jp
ss
xlat
lds
mov
movsb
sahf
jo
cmp
xor
roll
push
addr16
xor
mov
sub
mov
pop
sub
mov
test
xchg
stc
dec
int3
das
out
or
inc
adcb
add
push
out
or
dec
sbb
and
mov
fsubrs
xchg
lahf
std
xchg
das
cmpb
imul
pop
mov
in
sbb
lcall
xchg
stc
add
lods
mov
xchg
sub
inc
jecxz
sti
mov
and
pop
lods
lds
or
fsubl
fnstcw
rcrl
cmp
push
rcrl
test
dec
xchg
clc
bnd
sahf
cmp
inc
jnp
data16
js
dec
sbb
sub
mov
dec
lret
mov
inc
lret
push
es
jmp
mov
mov
loope
mov
hlt
inc
arpl
mov
sbbb
mov
lahf
cmp
lods
push
sub
je
push
iret
cs
adc
lahf
jnp
and
in
loope
push
push
in
pop
dec
enter
loopne
mov
shrl
pushl
rcl
sub
dec
xor
xor
cwtl
push
mov
outsl
int3
or
loop
popf
loop
dec
dec
loope
pusha
sbb
mov
dec
xlat
jnp
int3
inc
and
loop
les
sbb
jns
es
sbbl
sub
sbb
push
loope
inc
test
cmp
rolb
stos
dec
sub
idivl
jbe
rcrl
shrl
dec
dec
cmc
andl
cmp
pop
aam
mov
jecxz
inc
add
insl
in
adc
adc
addr16
lcall
inc
and
pop
es
pop
shrb
sbb
inc
add
jb,pt
mov
rol
jmp
xchg
push
mov
les
outsl
jp
out
inc
gs
jns
or
dec
or
xor
mov
cltd
frstor
dec
mov
jge
push
and
adc
sub
je
cmpb
mulb
cmpsb
aam
jae
adc
loopne
mov
fadds
addr16
mov
rcll
lods
shrb
mov
or
push
xor
sti
insb
sub
push
and
adc
dec
inc
push
sbb
insl
add
pop
mulb
clc
orb
loop
push
pop
sub
push
or
inc
add
jmp
pop
hlt
cmp
call
adc
adc
lcall
cmc
fcmovnu
jmp
add
cmpb
or
ja
xlat
push
out
inc
shlb
sbb
or
daa
fwait
mov
and
mov
mov
jmp
cld
sbb
sub
stos
dec
xchg
int3
mov
add
adc
mov
lahf
mov
fldl
mov
setno
push
mov
dec
mov
sti
add
mov
scas
jne
and
outsl
je
pop
mov
cmp
stos
mov
ljmp
add
inc
bound
jns
mov
in
sub
ja
mov
or
pop
mov
adc
adc
push
lret
das
cmp
subb
cli
push
stos
push
arpl
xchg
pop
movsl
lds
mov
mov
sbb
jo
jp
xchg
addr16
sarb
mov
adc
xor
aaa
loope
jmp
stos
mov
sbb
xchg
push
pop
mov
lock
lds
inc
push
into
cltd
imul
add
jo
mov
cli
push
mov
push
or
or
nop
imul
push
cmp
movsl
cmp
in
shrl
adc
mov
xchg
cwtl
mov
les
pushf
adc
dec
pop
push
daa
fcoms
jnp
adc
or
add
mov
mov
arpl
sub
cmpsl
xchg
jecxz
sbb
outsl
outsb
dec
sbb
sbb
popa
mov
pop
into
andb
pop
pop
mov
inc
mov
dec
mov
mov
adc
lods
insb
clc
cltd
sub
sbb
adc
pop
add
stos
dec
xchg
enter
inc
mov
pop
or
add
inc
mov
mov
popa
mov
mov
jmp
shlb
jae
push
lret
mov
repnz
jne
xor
cmp
lock
or
mov
mov
lahf
jg
enter
into
and
outsl
sbb
xor
jmp
adc
inc
jno
je
inc
adc
dec
adc
sub
loop
icebp
xor
xorl
rcrb
mov
int
pop
out
xchg
mov
addl
pop
mov
jge
enter
clc
dec
into
jg
push
rorb
js
dec
push
cltd
cmpsb
xchg
scas
mov
stc
or
cmp
out
ljmp
mov
ret
mov
aaa
xor
aas
scas
imul
insb
stos
les
fistps
mov
dec
gs
adc
xchg
aam
mov
cmpsb
scas
test
ret
out
and
mov
cwtl
in
mov
fcmovnu
cmpsb
add
sub
push
cmpsb
mov
sub
es
add
jecxz
lcall
push
aam
mov
cwtl
addl
dec
mov
aam
inc
pop
add
repz
lea
mov
mov
mov
or
sbb
sahf
shrl
pop
fisubrs
das
test
mov
aas
dec
fldt
push
cmpsl
stos
jo
sarb
xlat
mov
cmp
mov
sub
leave
xchg
fmull
or
lds
ffree
bound
pop
idivb
lds
aam
jp
out
push
cmpsb
pop
cmpsl
out
cmc
sbb
ret
adc
jp
imul
shll
inc
add
mov
addr16
popa
push
sbb
fldl
adc
fsubrl
loopne
in
pop
mov
stos
enter
mov
outsl
push
popa
add
lcall
iret
adc
rorl
mov
mov
in
aam
addb
repnz
inc
pushf
xchg
movsb
sub
sub
ficompl
std
jnp
and
sbb
adc
scas
pop
or
xchg
xchg
mov
test
sbb
loopne
or
idivl
sbb
xlat
pop
or
outsl
je
mov
jge
mov
and
in
jl
aaa
mov
mov
rclb
leave
pop
pop
or
add
lock
clc
adc
ds
lret
daa
mov
int3
shl
sbb
mov
movsb
fdiv
insb
gs
pop
aam
test
cmp
and
daa
sbb
xor
dec
cmp
stos
mov
jecxz
jp
pushf
lock
or
imul
xchg
lret
xchg
movsl
xor
push
stos
fwait
or
int
pop
dec
push
jae
stos
push
xchg
push
insl
push
shl
ljmp
popf
rdmsr
cmc
add
nop
fdivrl
cmp
sbbl
pusha
mov
addr16
xchg
mov
or
rcll
stos
stos
into
or
hlt
adc
fistps
stos
and
adc
movsl
xchg
aaa
push
inc
push
js
scas
sbb
dec
js
xchg
push
outsb
adc
icebp
push
fs
inc
sbb
test
popf
xor
adc
in
test
stos
xchg
jbe
std
clc
xor
xchg
shll
mov
dec
push
iret
mov
jns
js
inc
xchg
out
mov
push
inc
repz
inc
sti
mov
movsb
and
lods
mov
mov
push
jne
push
rcll
cmp
cmp
mov
scas
mov
pop
push
add
lods
gs
or
aaa
out
jg
addb
insl
adcb
add
adc
and
pushf
in
outsb
push
dec
imul
adc
cmpsb
out
sbb
int
out
add
mov
ds
out
push
sbb
cmp
ror
inc
pop
jl
mov
lret
pop
mov
das
sbb
sub
mov
pushf
dec
inc
test
ss
xor
mov
push
and
in
nop
lea
movlps
int
rorb
sub
sbb
mov
fs
mov
mov
jo
fistl
pop
fmul
and
loope
mov
rolb
loopne
outsl
mov
cmp
aas
test
aaa
iret
addl
fs
mov
ss
xchg
out
or
bnd
sub
mov
pop
fbld
addr16
lock
dec
aam
test
mov
cmp
xor
mov
sub
aad
loope
sub
popa
imul
xchg
dec
lock
or
xchg
fdivp
or
enter
popa
je
cs
sub
xchg
inc
mov
je
jl,pn
mov
jle
sbb
mov
rcr
popf
mov
es
ret
adc
push
pop
push
stc
jbe
mov
jp
rcrl
dec
enter
daa
es
jg
or
mov
es
mov
jns
int
outsl
ret
sub
dec
or
fidivs
mul
daa
push
sub
lret
or
fnstsw
push
pop
stos
xorl
lock
sub
or
movsb
jno
fstpl
or
das
repz
push
or
loop
out
push
loop
fldenv
cmpl
pop
add
cwtl
iret
push
scas
push
xor
mov
enter
inc
fistl
adc
imul
lret
sub
mov
int
ffree
lcall
and
pop
lret
negl
xor
in
ss
mov
movsb
rcll
lods
push
fimull
insl
jecxz
xchg
cmc
mov
sub
push
cmpb
mov
out
and
and
push
mov
popa
mov
or
scas
loopne
xchg
rcr
hlt
mov
pop
pop
loopne,pn
jmp
push
push
sar
outsl
out
test
xchg
std
sarl
mov
or
aas
dec
mov
stos
and
mov
mov
sbb
cmpsl
insb
fisttps
sarl
fistps
or
cld
test
clc
cmp
dec
je
int3
or
xchg
mov
imul
fisubrs
stos
adc
rcrl
dec
mov
shll
pop
mov
pop
rolb
aas
lcall
iret
das
mov
fdivr
loope
cmpsb
push
lods
inc
jae
xchg
dec
mov
lea
xchg
sub
xor
pop
jo
pop
xchg
mov
add
sub
dec
dec
outsl
add
jl
ficoms
lret
pop
daa
dec
inc
xchg
in
inc
inc
jnp
xchg
pop
mov
adc
inc
loopne
mov
cli
lret
push
inc
int3
push
movsl
sbb
xlat
adc
or
enter
adc
das
xor
sub
inc
loope
cmp
cld
and
lret
fwait
lods
out
add
cltd
movsb
aam
cmp
pop
mov
movsb
or
lds
mov
mov
add
add
in
mov
clc
cmp
jle
scas
icebp
aad
test
mov
xchg
push
push
movl
pop
xor
and
iret
mov
jns
pop
and
add
pop
fbld
inc
aad
ja
insl
or
lret
sbbl
fimuls
jl
mov
js
lods
mov
les
popf
mov
leave
lret
fucomip
mov
ret
lock
sub
push
and
and
aad
sbbl
imul
lret
jno
pop
sahf
lods
xchg
lcall
jg
adc
es
mov
jge
cmpsl
pop
mov
add
push
mov
inc
sub
dec
clc
sub
mov
popa
lea
rorl
inc
popa
xchg
movl
cmp
cmpsb
mov
lret
push
lods
sub
bound
sub
push
inc
xchg
pushf
add
push
or
cli
xorb
fadds
mov
jno
adc
mov
pusha
sbb
ret
pushf
mov
loopne
cmpsl
iret
ljmp
sbb
push
jle
jle
sbb
pop
lds
and
add
or
push
xor
dec
cld
into
dec
xor
aad
push
addr16
mov
iret
add
hlt
filds
xchg
adc
xor
xchg
adc
jp
pop
inc
hlt
jecxz
dec
add
ficomps
push
mov
adc
push
xchg
pop
sbb
lock
pop
ja
loop
adc
mov
dec
lahf
jle
cmp
mov
lods
andl
xor
mov
sbb
clc
add
mov
sbb
in
jne
pop
adc
movsl
inc
mov
mov
cmp
test
aam
mov
inc
sbb
inc
ja
dec
mov
clc
sbb
lock
and
cmp
push
aas
pop
jo
and
repnz
cwtl
jmp
xlat
mov
jae
roll
xor
shll
cmp
repnz
xchg
jmp
push
jo
pop
into
push
je
shrb
sbb
mov
rcpps
hlt
dec
ds
fs
dec
pop
cmc
leave
sti
outsl
jmp
xor
mov
fidivrl
sbb
push
push
jecxz
push
or
lods
in
inc
movsb
nop
sub
sti
jno
das
std
nop
loopne
rcr
cmp
adc
testl
scas
mov
sub
lahf
dec
jne
popa
or
jns
js
arpl
pusha
push
jae
rcl
cmpsl
pop
and
cmp
icebp
push
lds
cmp
lock
sbb
inc
push
mov
xor
push
jl
push
loope
push
rolb
fwait
rclb
js
cmp
pop
mov
iret
mov
stos
adc
adcl
aaa
fisubs
pop
fs
sub
sbb
aad
adc
movsl
in
adc
cld
out
xchg
pop
adc
xor
xchg
stos
xorl
daa
sti
dec
call
jo
pop
pop
inc
jbe
cltd
idivb
adc
out
and
mov
inc
scas
inc
ret
fs
jnp
cmpsb
fsubs
in
mov
arpl
imul
or
xchg
jg
mov
es
cmpsb
leave
test
cmp
and
test
lahf
rcll
les
outsb
sub
mov
repnz
jbe
iret
in
mov
pop
in
cmp
addb
mov
loop
je
mov
jbe
sbb
mov
jmp
mov
int3
nop
gs
mov
jl
xor
sbb
movsb
add
cmp
gs
push
and
mov
cmp
sub
inc
dec
xlat
pop
cmp
jp
push
mov
cmp
add
repz
movsb
fisttpl
aaa
or
stc
lods
insb
in
mov
cmp
mov
dec
xchg
pop
pusha
push
loop
pop
inc
sbb
out
push
rcrl
adc
adc
sub
xchg
jle
jns
js
cmpsl
subb
mov
xchg
lods
nop
or
repz
xchg
add
add
movsl
fcmovnu
ss
out
inc
je
mov
mov
xchg
pop
aas
call
mov
dec
scas
aam
and
repz
ficoms
fxch
and
bound
xchg
icebp
inc
imul
popa
or
shrb
mov
xchg
out
ss
pop
stos
adc
adc
pop
dec
jmp
cld
dec
push
add
jmp
repnz
mov
stos
data16
lods
inc
inc
out
lahf
xor
orl
ret
mov
mov
imul
nop
pusha
adc
stos
pushf
mov
nop
into
sub
arpl
mov
add
add
or
adc
mov
lret
pop
fdivrp
pop
nop
data16
mov
repz
lret
les
repz
and
std
jns
in
push
fnstcw
lea
jns
and
out
lock
xchg
pop
imul
ss
js
adc
outsb
stc
dec
or
aas
cwtl
dec
jl
dec
das
push
stos
xchg
cmpsl
test
xchg
add
push
fnstcw
fcoms
inc
js
xor
sarb
popf
inc
add
or
inc
outsl
mov
mov
lahf
lahf
out
cmpsb
fisttps
dec
lods
mov
dec
mov
push
mov
mov
mov
insb
cmpsb
stos
mov
popf
and
mov
popa
rolb
sbb
xchg
push
dec
test
xorb
add
jb
into
jne
dec
nop
mov
add
pop
aad
sbb
xchg
push
sub
dec
push
mov
fwait
bound
test
sub
cmp
mov
js
bound
mov
or
aaa
push
out
push
aaa
shll
dec
loop
aas
and
inc
loope
xchg
push
daa
sbb
jo
push
ret
lcall
imul
out
dec
js
jl
shr
push
jmp
imul
repnz
test
xchg
dec
into
adc
subb
or
push
jmp
out
sub
and
xchg
xchg
mov
scas
arpl
inc
inc
inc
push
mov
fistpll
out
mov
loop
cmp
int3
test
push
and
cs
sub
in
sbb
cld
mov
insl
je
punpckhbw
xchg
add
stos
clc
sub
cmpb
jb
add
cmp
int3
mov
sarl
add
cs
loop
cwtl
sbb
or
mov
stc
aad
sbb
outsb
push
stc
mov
les
push
jns
shlb
mov
xchg
js
dec
dec
xor
mov
pushf
cmp
clc
sbb
test
sbb
dec
jp
movsl
push
scas
jmp
dec
or
dec
shlb
adc
sub
lock
scas
std
jno
scas
jo
aas
xor
mov
inc
jmp
add
mov
mov
inc
xchg
iret
pop
cmp
fidivs
cld
adcb
cwtl
jns
adc
mov
inc
sbb
dec
inc
sbb
stos
push
or
add
sti
sarl
outsb
fst
sub
pop
and
out
insl
mov
movsb
mov
insl
pushf
dec
fdivrl
mov
pop
push
mov
mov
and
insl
adc
jmp
inc
or
mov
dec
cmpsl
lock
imulb
inc
roll
or
sbb
mov
out
jne
idiv
jb
sbb
xor
cmp
sarb
cld
cmpsb
pop
pop
sbb
xchg
enter
push
int
sub
mov
mov
and
popa
fsubl
arpl
xchg
pop
adc
fidivs
push
inc
jle
popa
fisttpll
test
lds
loopne
dec
lret
dec
stc
push
js
pop
nop
roll
cmpsl
leave
mov
and
xchg
xor
sub
adc
jl
loopne
add
rolb
pop
xchg
fisttpl
orb
movsl
lret
xorl
sub
jecxz
aad
lret
xchg
cli
inc
xor
cwtl
xor
push
cmp
push
mov
push
ds
mov
jae
mov
sub
sub
or
xor
jns
fwait
call
mov
adc
enter
cmp
adc
pop
pushf
popf
push
push
mov
mov
jp
mov
cli
addl
or
and
sbb
mov
inc
sbb
xor
pusha
es
jae
inc
sarb
repz
pop
dec
dec
sub
dec
mov
sahf
repz
mov
adc
ds
int3
inc
jmp
inc
repnz
cmpsb
js
cmp
jo
add
sub
inc
and
sbb
sbb
jl
xchg
les
and
push
pop
cmp
pop
mov
jns
sub
adc
mov
scas
mov
and
rorl
adcb
dec
cld
mov
pop
pop
stos
inc
sbb
and
subl
xor
in
push
push
sub
mov
dec
add
or
ret
test
dec
dec
xor
cmp
je
stc
add
cmpl
mov
sub
push
mov
lods
mov
dec
scas
daa
adc
or
data16
or
pop
dec
out
cli
sti
mov
mov
add
ret
popa
call
outsb
mov
clc
sbb
mov
mov
inc
lods
lret
or
dec
int3
mov
pop
mov
stc
pop
pop
xchg
pop
sub
xchg
dec
sbb
fdivl
scas
jp
cli
std
lds
fsubrp
scas
pop
out
sub
daa
aas
dec
fstpt
mov
mov
dec
or
cmpsb
lds
cmp
rorl
inc
mov
arpl
cmp
xor
sbb
stc
inc
add
xchg
mov
sbb
rcll
movsl
push
xlat
mov
sti
cld
es
mov
ljmp
add
xchg
cwtl
dec
cmc
sub
shrb
aaa
jp
mov
xchg
mov
lock
push
in
push
adc
push
push
add
leave
rorl
lds
out
push
movsl
cmpsb
imul
outsb
imul
push
scas
sahf
sahf
inc
stos
loope
out
add
mov
popf
lds
dec
lods
pop
xchg
push
cmp
adc
dec
jo
cmp
in
jmp
fs
dec
fdivs
aam
jo
testb
adcb
mov
repz
sub
icebp
lcall
mov
rorl
aaa
daa
or
adc
subl
xchg
xlat
cmc
lock
or
inc
adc
mov
xor
xchg
pop
shr
cmp
xor
push
test
stos
ret
loopne
les
jns
loope
push
shl
push
cmp
add
cwtl
fistl
mov
jae
lea
mov
sub
jnp
pop
pop
pop
sbb
std
cli
test
jb
orl
test
hlt
dec
push
sbb
into
fdivs
lahf
test
scas
ss
mov
movsb
mov
add
aad
mov
test
pop
pusha
cmp
cmpb
sbb
rcr
mov
out
pop
mov
or
aam
and
insl
add
adc
mov
imul
sbb
fwait
mov
mov
loop
outsb
mov
push
or
push
insl
das
xor
sbb
sub
sti
imul
aad
scas
mulb
jns
lods
pop
daa
mov
push
mov
or
pop
mov
jp
pop
ds
and
mov
dec
jp
test
in
sti
mov
cmpsb
xor
sbbb
insl
push
out
jbe
dec
pop
dec
cld
pcmpgtd
push
shl
mov
add
mov
mov
mov
addb
int
jp
roll
dec
cmp
loope
vsqrtpd
xchg
xchg
in
and
int
mov
lret
movsb
cmp
jo
bound
or
adc
cmp
out
clc
adc
jae
popf
mov
pushf
cmp
je
cvttps2pi
adc
push
fsubr
push
mov
xchg
mov
jmp
xor
jl
repz
shr
push
test
cmp
aaa
and
add
jp
rcl
dec
dec
cltd
lock
cmp
std
inc
aad
jns
push
in
or
out
push
inc
sarl
add
imul
pop
cltd
xchg
jge
xor
jno
inc
sbb
loop
mov
pop
sbbb
cmp
inc
jne
data16
mov
movsl
mov
mov
in
out
pop
call
popa
dec
jae
dec
out
jge
test
add
cmc
pop
mov
mov
and
xchg
inc
loopne
fwait
jo
faddl
stc
mov
mov
xchg
mov
jnp
fidivl
popf
rcr
mov
icebp
mov
enter
adc
jnp
ja
lock
fnstcw
inc
cli
mov
lock
jle
mov
jne
mov
adc
movsl
cli
jo
shlb
xchg
outsb
jmp
push
mov
dec
mov
hlt
hlt
dec
mov
popf
xchg
or
xor
jge
xor
in
inc
mov
in
cmp
sti
fwait
xlat
cmc
sarl
mov
std
lea
je
lods
out
js
iret
inc
push
ficoml
arpl
test
loop
ljmp
fs
sub
fcmovnb
subl
out
pop
or
xchg
mov
sbb
add
pop
inc
mov
fs
ss
nop
dec
notl
les
inc
gs
dec
add
repz
fmulp
push
push
push
int3
pop
push
jo
jge
fisubs
mov
xlat
cvttps2pi
lds
cmpsb
jo
and
addl
mov
cmp
aad
fcomps
jae
cltd
shll
ret
sbb
adc
addb
dec
mov
dec
xchg
xchg
push
outsl
fmuls
mov
push
mov
loop
sarb
sbb
sub
dec
inc
insb
stc
jo
test
jns
push
call
std
aas
mov
mov
jg
ficoms
ficomps
jno
sbb
add
xchg
sbb
fdivs
pop
sar
push
mov
pop
xor
daa
pop
jmp
das
lret
push
ja
pop
leave
or
je
adc
repz
jnp
test
add
fcom
add
jb
xchg
out
sub
xchg
sub
fisubrl
sbb
jle
loopne
mov
insb
and
mov
push
sbb
mov
cmp
shl
push
adc
pushf
shlb
mov
pop
push
ror
xchg
push
lock
insl
mov
cmp
loope
push
jge
mov
ljmp
xor
and
das
mov
out
ss
clc
xchg
fwait
loope
das
jae
imul
xchg
xlat
cmp
arpl
xchg
jecxz
jge
adc
pop
loop
adcl
mov
push
add
lods
das
cmp
xchg
stc
lss
adc
pop
sub
sub
das
dec
dec
ret
push
call
iret
clc
mov
push
cld
fistps
mov
add
xchg
cmpsb
add
jle
inc
dec
inc
lds
push
add
add
test
pusha
pop
dec
mov
xor
pop
inc
mov
inc
ja
xor
mov
popf
push
int3
push
cli
sbb
add
add
scas
mov
dec
lret
and
jmp
or
push
lea
fldt
mov
nop
sbb
das
mulb
pop
cmpsb
ljmp
mov
lret
jae
loop
je
xor
inc
sbbl
jns
jmp
pop
ja
jecxz
lods
xchg
dec
test
and
arpl
dec
lcall
lock
test
je
ds
or
adc
imul
mov
xor
jnp
lods
scas
and
mov
sub
into
cltd
rcll
xchg
imul
movsl
aaa
mov
sbb
inc
push
pushf
daa
cmp
les
add
and
ja
jae
lods
cmp
xchg
ljmp
icebp
mov
push
mov
call
push
mov
xchg
add
inc
clc
jne
stos
jl
mov
ds
xchg
dec
ja
lods
mov
xchg
lods
sbb
mov
add
jb
jecxz
insl
icebp
jl
lahf
pop
jle
ficomps
mov
fisubl
ret
std
mov
sub
rcll
mov
pop
add
sub
xor
sub
mov
and
aad
out
push
mov
in
outsb
sbb
jge
stos
in
adc
mov
cmc
lret
ljmp
hlt
cld
out
icebp
and
pop
jno
ds
add
in
jbe
and
jle
ret
test
aad
scas
int
push
and
pop
cltd
imul
loop
loop
cmp
jle
pop
mov
inc
xchg
cwtl
nop
mov
testl
sub
pop
je
jle
cmc
fcompl
popa
roll
jmp
loop
push
fdivs
in
mov
in
addr16
test
adc
jne
mov
lods
mov
les
in
aaa
das
in
or
addr16
iret
inc
cmp
xor
sbb
push
ret
inc
sub
mov
add
sbb
test
inc
mov
pop
push
bound
sbb
xchg
push
jmp
pop
push
imul
cltd
or
xchg
movsb
enter
dec
sbb
mov
inc
inc
daa
inc
sbb
iret
in
inc
fcoms
mov
sbbb
je
rorb
adc
rcrb
sub
outsl
inc
or
pop
mov
xchg
mov
and
addr16
test
jl
les
push
mov
sbb
popf
xor
mov
push
int
cmp
ret
frstor
out
das
mov
bound
push
jns
fldcw
push
and
mov
pusha
cwtl
lea
clc
scas
test
repnz
mov
add
enter
addr16
add
repnz
mov
es
push
jnp
pop
mov
mov
movsl
in
inc
mul
ljmp
sub
cld
je
sub
lea
adc
je
and
std
pop
mov
ret
mov
jmp
notl
insb
stos
pop
cmpsl
push
out
and
test
mov
dec
jae
in
jp
jecxz
lea
fdivs
mov
insl
sbb
mov
orl
xchg
lahf
loope
test
xchg
dec
push
ret
insb
mov
push
or
adc
pop
notb
mov
shll
cltd
jmp
push
clc
divl
scas
call
sbb
fbld
sti
push
or
dec
cmp
and
aas
aad
daa
cmp
cmp
cmpsl
lock
sub
jae
and
cmpsl
das
mov
mov
adc
jmp
out
inc
and
lock
cmp
and
mov
and
push
cmpsl
dec
adc
sarl
mov
daa
popa
or
push
dec
cld
xor
cmc
mov
and
jb
dec
mov
sub
push
rcrl
inc
xor
jns
ret
mov
into
roll
ljmp
lds
bound
lret
lret
dec
sbb
call
popa
push
outsb
xchg
adc
sbb
push
gs
jne
leave
and
push
repnz
testb
cwtl
imul
subb
mov
cltd
cmp
enter
add
aas
jmp
mov
push
out
loop
cmp
xor
push
xchg
xor
and
inc
xor
xchg
into
push
mov
jae
jp
andl
pop
pusha
mov
push
ss
pxor
mov
add
shll
inc
dec
pusha
mov
pop
ss
mov
mov
std
sbb
xchg
lcall
mov
scas
in
stos
inc
popa
cmp
dec
jg
xchg
popf
xchg
mov
mov
or
ds
jnp
and
js
mov
js
fyl2x
stos
inc
push
push
pop
cs
cld
out
ficoml
lcall
jp
jo
mov
xchg
addr16
xorl
sub
sub
and
mov
and
in
cmp
sub
mov
sub
test
pop
mov
pop
movsb
adc
enterw
mov
ret
jle
xchg
aam
arpl
dec
jno
add
inc
mov
movsb
fistl
mov
ret
ret
out
push
and
inc
ljmp
decb
mov
cmp
aas
cmp
cmpsb
add
xchg
pop
mov
mov
out
es
cvtps2pi
or
je
mov
xor
cmpsb
pop
in
mov
and
mov
mov
cwtl
push
popf
cmpsl
xor
ficompl
cmp
jnp
fwait
adc
mov
sbb
cmp
das
loope
movsb
xor
pop
out
push
sbb
and
sbb
imul
out
adc
and
xor
xor
sub
aaa
jne
sbb
fmull
js
and
pusha
xchg
xchg
inc
and
adc
xchg
cmp
lds
jo
pop
in
and
mov
adc
sub
xor
xor
fildl
ret
or
jnp
cmp
pop
gs
movsl
repz
push
or
dec
or
pop
mov
js
mov
fmuls
mov
or
lret
in
in
mov
pop
push
jae
negb
int3
mov
out
cwtl
inc
mov
loope
sbb
xchg
inc
xor
jge
shll
nop
std
out
push
movsl
sbb
dec
fdivrl
push
pop
movsl
aam
inc
inc
cs
outsl
leave
or
add
dec
mov
add
in
sub
cmp
inc
inc
cmc
scas
dec
test
imul
pop
or
xor
shr
lahf
pop
sub
add
repnz
sbb
adc
mov
faddp
fidivl
inc
cmp
dec
mov
int
and
xchg
cmpsb
std
mov
xor
enter
add
outsl
imul
ss
mov
sub
pushf
test
test
inc
dec
xor
or
xchg
xchg
xchg
subb
stc
add
or
stos
cmpsl
fdivs
sub
and
imul
adc
inc
in
aad
pop
test
outsl
pop
lock
pop
xchg
mov
fiadds
or
xchg
mov
mov
mov
pop
int
push
inc
xor
das
jecxz
push
stos
xchg
mov
idivl
out
adc
xchg
in
push
addr16
add
and
mov
aaa
sbb
cmpl
in
and
push
stos
adc
lods
data16
mov
pop
insl
les
std
xor
aam
push
cmp
cmc
popf
sub
leave
adc
mov
lea
sub
jb
dec
or
jmp
jae
jo
and
dec
jbe
xor
sbbl
imul
cmovnp
out
call
push
inc
xchg
das
cmpl
call
test
stos
or
jp
loopne
xlat
jl
mov
push
jl
xchg
mov
es
fcmovnbe
jl
jb
sub
xor
roll
xor
daa
pushf
hlt
rcrb
out
test
scas
mov
mov
mov
mov
inc
jp
mov
xor
ja
mov
and
xor
sbb
adc
dec
inc
lock
lea
adc
inc
or
or
push
stos
and
pop
mov
or
cmpsb
push
loop
mov
jo
pop
or
fnsave
popaw
imul
push
test
mov
call
sbb
sbb
jmp
call
pusha
ret
cmp
xlat
xlat
sbb
push
xchg
push
xchg
mov
push
mov
mov
test
adc
aas
xlat
clc
cld
cmc
fists
imul
lret
and
xchg
cli
xchg
jb
push
aam
fwait
cmp
add
dec
imul
xchg
and
int3
sbb
jne
add
jne
cmp
and
pop
sbb
push
call
add
pop
mov
pop
xchg
sub
scas
fldl
ljmp
xlat
xchg
sbbl
xchg
mov
adc
loope
xchg
ljmp
popf
mov
ja
int
inc
and
call
leave
bound
mov
jne
sbb
sub
push
in
test
inc
sbb
mov
dec
fldl
sarb
pop
xor
in
xchg
and
push
test
insl
je
dec
sbb
cmp
lods
mov
outsb
or
inc
test
add
lcall
sbb
jp
mov
fistpl
mov
pop
testb
ret
lahf
sbb
jno
xchg
lret
out
jecxz
mov
cmp
fldenv
cmp
pop
mov
dec
mov
data16
jne
test
fdivp
int3
fwait
imul
test
push
jne
xchg
outsb
cmp
dec
cmp
mov
and
jns
fldt
cmp
xchg
lods
sbb
mov
jmp
and
dec
mov
dec
mov
and
inc
popa
out
inc
aam
and
sub
div
adc
pop
mov
rorb
iret
pusha
push
jecxz
idivb
loope
sarb
sbb
cmpsl
inc
idivl
jl
sti
int3
push
push
in
fldenv
jg
cmp
shrb
stos
in
sub
mov
add
mov
or
rclb
add
int
jge
fmulp
sbb
lcall
or
dec
fucom
sub
std
mov
add
loopne
mov
push
fcom
iret
aad
mov
mov
mov
rclb
jbe
sbb
mov
push
inc
stos
pop
mov
cltd
jb
add
inc
sbbl
jle
out
xchg
and
push
sti
dec
xor
mov
aas
pavgb
dec
mov
ja
jnp
stos
mov
out
ja
ret
xor
shll
push
shlb
jnp
sub
jb
fs
arpl
scas
or
cld
sahf
jo
or
pusha
mov
xchg
xor
mov
add
sbb
xor
ds
scas
cmp
into
xor
test
xchg
mov
push
ret
scas
or
hlt
cwtl
fistps
mov
add
pop
sub
adc
mov
leave
cmpsb
add
ret
pop
stos
sbb
out
xchg
ljmp
mov
jl
pop
das
adcb
xor
xchg
xor
gs
jle
sub
test
or
fs
mov
fisttps
dec
push
jmp
mov
int3
pop
outsb
xchg
pop
inc
lods
inc
cmc
xchg
aam
inc
stos
fsts
jno
inc
repz
rorb
jl
shl
jno
scas
stos
rcll
jp
push
leave
outsb
cmp
cmp
popf
mov
cmp
add
int3
dec
add
out
outsb
stos
and
pop
mov
in
jne
adc
xlat
enter
call
jl
dec
ljmp
clc
nop
sbb
mov
nop
pop
mov
xchg
jge
pop
daa
or
cmpsl
xchg
dec
daa
mov
dec
stos
xlat
cmp
mov
test
mov
inc
loop
ds
sbb
jge
add
dec
add
outsl
xchg
inc
sub
pop
loop
add
mov
sarl
into
jnp
push
in
fwait
nop
dec
jo
pop
stc
mov
rcr
mov
mov
inc
in
int3
cmpsb
jecxz
test
mov
sub
or
mov
insb
sbb
cltd
int
lcall
movsl
mov
fsubs
push
xchg
call
jmp
stc
pop
xor
adc
das
iret
mov
inc
sbb
mov
insb
cmp
enter
inc
xchg
ficomps
stos
sub
mul
out
jg
add
jb
cwtl
shlb
stc
cld
cmp
aas
in
jmp
insb
and
movsb
ret
or
dec
mov
ficoms
test
pop
mov
sbb
jmp
sbb
xchg
adcl
gs
push
in
cmp
outsl
push
xor
movsb
mov
jecxz
and
test
hlt
push
mov
sub
arpl
mov
push
pop
sbb
movb
dec
lods
push
mov
jg
pop
mov
push
mov
and
push
lds
fdivrl
xchg
cmp
sahf
cmc
js
pop
mov
mov
xor
inc
ffreep
pop
outsl
dec
xchg
cmp
test
dec
fisttps
xchg
sbb
cmp
and
repnz
jnp
das
fwait
xchg
arpl
cld
sbb
pop
and
xor
mov
ret
xchg
dec
jle
cmp
pop
jb
xor
fcoms
xchg
mov
add
add
or
jno
jecxz
pop
dec
push
outsl
in
nop
lret
shlb
sbb
dec
cwtl
dec
dec
jno
xchg
inc
icebp
add
je
cmpb
xchg
mov
add
aam
mov
subb
fcompl
pop
in
jle
pop
xchg
inc
addr16
xchg
ja
negl
jno
fimull
and
fistpll
adc
adc
pop
loopne
inc
rcrl
call
pusha
mov
stos
ljmp
scas
rcr
mov
pop
bound
data16
das
test
loope
mov
inc
test
fdivs
lods
xchg
int
pop
jge
add
sub
hlt
add
adc
stc
out
mov
aam
or
test
retw
rorl
xchg
add
aaa
dec
and
pop
jmp
adc
jnp
dec
into
add
sbb
in
in
adcl
out
inc
lock
scas
mov
test
out
cmp
stc
jo
push
cs
loope
and
or
push
ds
mov
jno
dec
push
push
mov
pop
pop
mov
out
push
lods
mov
xchg
xor
xor
jb
mov
int3
rclb
sbb
fldpi
push
imul
test
push
and
das
jb
ds
add
cltd
lret
jg
and
sub
outsb
sbb
fisttps
adc
mov
inc
sbb
mov
cmp
pushf
jnp
mov
mov
mov
js
sbb
xor
cmp
lods
or
or
roll
cld
dec
push
cmp
push
cs
dec
sub
scas
or
inc
mulb
gs
enter
mov
mov
pushf
rcr
jmp
jno
xor
popa
mov
ret
xchg
fucomp
fwait
and
orl
sub
pop
xchg
cmp
cmp
gs
cld
aad
dec
sub
pusha
testl
sbb
push
xlat
jge
inc
ss
daa
cwtl
mov
jl
clc
and
fisttpll
mov
jmp
js
sub
jb
leave
dec
jae
testl
lcall
cmc
push
adc
lret
ss
pop
mov
js
imul
scas
jb
mov
sahf
push
cmpsl
xor
ljmp
inc
out
inc
lods
das
ja
popf
mov
insb
pop
jmp
cmpl
jmp
fidivl
push
push
cmp
add
nop
pop
xor
popa
xchg
sbb
stos
xchg
bound
pop
gs
aas
in
pop
test
cmp
pop
cmc
fs
jl
push
cmp
adc
testl
or
orl
shrl
and
mov
mov
imul
es
leave
stos
sarb
out
dec
mov
popa
arpl
mov
dec
xor
loope
xchg
sub
movsl
sbb
push
jb
dec
xchg
lret
pop
pop
push
or
leave
rcrb
es
cltd
incl
cld
pop
outsl
insb
adc
inc
jo
loope
add
lret
in
jns
push
mov
fsubp
and
icebp
mov
ljmp
cwtl
push
test
scas
popa
adc
sub
outsb
sub
outsl
enter
push
fsubrs
js
add
add
xor
das
jmp
scas
jmp
sub
cmp
jb
sbb
insl
inc
jl
pop
test
sar
into
push
fcoms
popa
andl
shlb
mov
ljmp
cmp
pop
fxch
insb
jnp
lods
fistpll
mov
fsubs
cltd
jnp
fdivl
inc
jmp
mov
dec
fcomps
cld
in
scas
nop
daa
jg
rcrl
push
iret
sbb
cmpsb
push
xchg
push
dec
test
cltd
outsb
xchg
mov
pop
hlt
shlb
xchg
insb
xor
stc
sub
jg
aaa
out
aam
mov
mov
nop
push
fcmovb
comiss
out
fldcw
lock
or
andb
pop
leave
dec
mov
int
scas
jl
je
dec
dec
push
fs
dec
addl
cmpsl
dec
pop
dec
push
xchg
fucomi
pushf
jp
dec
cwtl
cmc
sub
into
jno
icebp
xor
cmc
or
repnz
lret
xor
mov
dec
push
mov
idivb
pop
popl
outsb
test
wbinvd
and
jmp
daa
mov
xchg
test
cmc
repz
xchg
mov
or
insb
movsb
dec
aam
popf
xor
filds
loopne
mov
and
jbe
ss
lret
pop
scas
sbb
repnz
mov
cmp
mov
cmp
jo
cmpb
shl
hlt
or
or
insb
fs
popf
push
setge
inc
xchg
scas
jle
pusha
add
insb
adc
mov
fdivr
ss
sbb
test
les
pop
mull
xchg
cs
test
or
pop
xor
push
fcoml
add
push
lret
loopne
mov
dec
mov
pop
push
xchg
das
cli
sbb
push
addl
cmc
or
notl
cwtl
sti
dec
test
jecxz
mov
pop
fstps
testb
mov
es
mov
jmp
and
enter
fs
adc
inc
call
push
push
xor
and
lods
loope
outsb
adc
pop
sbb
push
rclb
inc
je
movb
push
xchg
loope
xchg
enter
sar
int
dec
adc
and
xchg
mov
mov
in
xchg
js
inc
popf
imul
mov
and
sub
cltd
popf
inc
mov
jmp
mov
into
out
or
lods
or
data16
arpl
inc
out
pop
cmp
repz
stos
mov
mov
xor
and
xchg
and
loopne
adc
cltd
das
mov
xchg
mov
cmpsl
jmp
mov
adc
out
xchg
and
mov
add
shl
jecxz
scas
fld
mov
pop
or
out
sub
imul
add
stos
pop
loopne
ret
gs
xchg
jae
subb
ss
paddd
jl
mov
adc
sbb
sub
out
jno
mov
cmp
hlt
and
mov
notl
pushf
lcall
dec
sub
mov
sahf
orb
mov
divps
fbld
push
sub
mov
mov
push
adc
aas
sbb
test
les
rcr
aam
lock
out
aam
mov
xchg
pop
int
icebp
std
xor
aad
pop
mov
push
xchg
cli
gs
and
push
xlat
es
xchg
ds
ja
lods
je
scas
arpl
lods
shlb
sbb
repnz
adc
out
das
call
mov
pop
adcl
movsb
dec
push
lcall
push
or
xchg
loopne
jle
mov
jb
push
and
sahf
insl
iret
aad
push
daa
orb
mov
fstps
xchg
lret
or
stos
pop
sub
adc
cwtl
mov
mov
mov
push
jae
xor
mov
xor
push
and
in
sbb
and
mov
cmp
movsb
push
dec
sub
jle
in
imul
inc
xchg
rcll
sub
and
cli
sbb
adc
scas
push
aaa
popa
pusha
insb
stc
pop
pop
mov
inc
mov
lret
or
add
adc
inc
inc
mov
adc
cmp
ja
fs
push
repnz
mov
pushf
cmp
jmp
lods
xchg
sahf
add
test
fs
out
ljmp
or
adc
pop
ja
push
int3
int
mov
popf
xlat
aaa
push
subl
mov
sti
test
int
cwtl
inc
mov
dec
inc
gs
ja
aam
mov
push
dec
inc
fcmovnbe
bound
orl
mov
mov
xchg
or
addr16
popf
dec
pop
cmp
sub
jns
clc
das
orb
std
jmp
adc
add
cli
rcrb
repz
push
sub
les
pop
mov
push
lret
pop
stc
in
mov
daa
fs
pop
add
lcall
sahf
inc
mov
lret
lods
mov
icebp
test
lcall
adc
arpl
adc
cld
cmc
insb
aam
jl
mov
in
into
pop
stos
nop
pop
cli
and
jnp
addr16
roll
cmpsb
into
popf
hlt
sbb
pop
adcl
mov
pop
test
jno
repnz
mov
dec
xchg
sarb
aas
ja
aam
and
add
pop
and
aam
mov
das
lea
nop
movsl
test
push
insl
jb
test
outsb
xchg
adc
jns
adc
xor
addb
pop
lods
popf
int
outsl
mov
add
xor
inc
sti
int
mov
jb
sti
pop
mov
imul
popf
jae
bound
adc
add
sbb
mov
and
js
xchg
pop
in
and
inc
or
sti
cmpsl
inc
cmp
insl
stos
in
mov
insl
sub
xchg
scas
mov
cwtl
fldl
adc
sbb
nop
pusha
std
cmp
pop
mov
jne
add
inc
divb
jmp
fdivl
adc
xchg
or
add
mov
xchg
push
jle
mov
sar
push
lods
xor
inc
jb
pop
shlb
out
xchg
dec
xor
pop
inc
mov
inc
bound
aam
lret
imul
mov
or
popa
lret
pop
push
fldenv
mov
test
orb
ret
jbe
sub
jg
rorb
cs
push
cmp
and
adc
jbe
repnz
xor
sbb
ss
test
mov
lcall
int
cmpsl
testl
inc
jo
inc
rorl
mov
and
and
test
es
nop
fucomi
jo
adc
mov
hlt
jno
js
repnz
outsl
pop
lahf
jnp
fists
shll
xchg
call
mov
das
mov
mov
mov
call
or
fsubs
dec
je
dec
aas
mov
mov
push
and
jae
outsb
pop
push
and
and
aad
mull
push
das
push
sub
out
mov
rol
mov
std
dec
jecxz
loop
dec
pop
lahf
bound
fistpl
pop
sbb
dec
testb
adc
cltd
fisubrl
in
aas
and
out
adc
cmpsl
pop
int3
add
out
mov
or
jns
cs
in
mov
aaa
mov
arpl
sbb
scas
lcall
js
in
adc
mov
mov
jp
f2xm1
dec
sub
push
push
or
mov
xchg
out
sub
add
push
jbe
imul
jge
sub
ljmp
dec
idivl
rcrb
mov
outsb
mov
popl
cmp
mov
mov
das
in
xor
jbe
inc
jp
mov
fs
xor
pop
orb
loope
mov
mov
mov
dec
js
popf
add
sahf
int
nop
cmp
in
lods
inc
push
cmp
test
xor
xor
jmp
sbb
out
mov
add
mov
mov
push
mov
insb
mov
into
mov
push
or
adc
lods
add
mov
mov
dec
repnz
push
arpl
leave
nop
mov
dec
pop
push
or
pushf
or
xchg
lea
xchg
sub
xlat
jae
outsb
xchg
ret
fs
add
cmp
sti
fmull
jecxz
dec
ficomps
test
je
push
mov
lahf
pop
ret
dec
cmp
push
mov
or
xchg
inc
mov
mov
das
out
sub
aas
outsl
or
mov
adc
adc
cmp
je
repz
dec
inc
repz
fucomip
addr16
aas
les
cmpsb
and
push
jg
loope
jb
mov
das
shll
pop
mov
lcall
pop
les
cwtl
mov
mov
dec
test
mov
rcrl
mov
mov
aaa
lods
jnp
lcall
roll
inc
xchg
fcompl
enter
inc
mov
aas
out
aaa
popa
pop
cs
lea
adc
sub
nop
pop
lret
lea
test
xor
xor
mov
mov
jle
inc
shll
insb
pop
sub
mov
stc
repnz
outsl
orl
ljmp
fistpl
int3
pop
mov
repz
lods
mov
pop
xchg
stc
pop
add
mulb
xor
lcall
das
xchg
ds
xchg
stos
shlb
lods
dec
aaa
icebp
ljmp
push
add
jb
jmp
addr16
cmpsl
or
add
xchg
clc
js
lods
imul
jge
and
lcall
out
dec
xchg
leave
xchg
xor
pop
adc
mov
sub
inc
or
aad
sub
jmp
int
int3
jl
dec
cmpl
dec
loopne
insl
inc
sub
inc
int3
jl
adc
sahf
jg
pop
pop
addr16
mov
leave
dec
sarl
mov
adc
jl
or
ret
and
mov
les
xor
and
imul
xchg
xor
inc
or
jl
iret
push
inc
or
jo
test
sbb
insb
dec
aas
fwait
out
shll
mov
and
mov
or
decl
mov
adc
pop
xor
xor
xchg
jns
sub
shr
mov
push
lahf
fldcw
data16
sbb
aam
xchg
shrb
aam
mov
cmp
ds
jle
cltd
mov
iret
fsubrs
dec
jbe
mov
or
push
lahf
xor
fdivr
test
inc
test
int3
mov
mov
lds
ret
inc
mov
cli
loop
add
xor
test
pushf
aaa
xor
mov
adc
and
sbb
sbb
mov
popf
sub
repnz
push
lea
test
push
sbb
xor
orb
hlt
sub
xor
ret
adc
lea
xor
insl
daa
sahf
out
gs
xlat
cli
andb
rorb
cmp
loop
nop
test
in
xorl
xor
je
imul
xchg
xchg
aaa
ret
xor
shll
bound
pushl
shrb
mov
add
add
leave
out
pop
sar
mov
loope
xorl
inc
add
out
movsb
cld
sub
icebp
sbb
and
fwait
and
aam
add
mov
inc
fists
add
shrb
or
pop
mov
scas
jb
cld
inc
mov
mov
jb
out
adc
iret
mov
jl
js
lret
pop
xchg
push
mov
xchg
jge
aaa
ret
imul
pushf
pop
push
mov
in
fiadds
out
sti
mov
out
pushf
mov
nop
movsl
lods
addr16
das
aad
jg
jmp
cmp
xchg
push
xchg
decb
mov
rcrb
mov
jg
lret
mov
or
data16
mov
adc
test
sbb
pop
adc
jnp
jg
std
ss
enter
mov
div
push
xchg
inc
jge
pop
cmc
mov
mov
imul
or
sbb
mov
xor
rorl
arpl
adc
dec
xlat
and
cmpsl
or
fsubrs
mov
or
stos
and
xor
vaddsd
pop
data16
testl
clc
mov
xor
insb
sbb
lods
cmp
xchg
pop
lods
fsubp
cmc
mov
shll
sub
aad
add
popl
repnz
adcl
xchg
bound
mov
dec
iret
test
repnz
mov
adc
pop
sti
bound
and
sub
sbb
xor
cs
sub
and
sub
xor
and
lea
xlat
pop
xchg
bound
sbb
or
adc
imul
mov
ja
lds
cmpsl
fimull
xor
sbb
sub
pop
jb
icebp
call
enter
xlat
sub
loope
dec
andb
push
sbbb
mov
mov
cld
jns
in
mov
push
mov
dec
repnz
mov
aam
sbb
out
es
cmp
cmp
aad
addr16
push
insl
hlt
popa
add
push
mov
cli
xchg
packsswb
add
and
or
pop
aas
xchg
cli
ret
dec
mov
das
adc
pusha
loop
daa
push
fimuls
addr16
adc
jbe
cli
orl
jge
sbb
arpl
jbe
push
jnp
outsb
dec
add
lds
int3
push
shlb
cwtl
xor
pushf
mov
vpermilps
push
and
push
shll
mov
insl
loopne
je
bswap
jns
into
fwait
imul
enter
adc
repnz
test
aaa
mov
andb
stc
outsl
xchg
xchg
lret
mov
gs
xchg
pop
invd
fisttpll
dec
xchg
lods
sub
loope
mulb
sahf
jae
and
pop
dec
das
cmpsb
out
push
xlat
cwtl
push
xor
push
leave
pop
sbb
inc
dec
mov
xchg
pop
dec
jae,pn
lock
inc
cmp
fdivrl
sub
outsb
inc
loopne
ljmp
int3
mov
leave
aas
xchg
icebp
sbb
pusha
xchg
mov
adc
arpl
xchg
ret
cmp
xor
inc
push
ret
push
dec
pop
leave
pop
cmp
lea
adc
inc
sarl
mov
notb
xor
cld
add
jno
inc
and
out
data16
fs
lcall
mov
sbb
shr
call
push
jns
fisttps
bound
adc
or
push
dec
lret
in
lret
out
in
xor
sbb
add
xchg
xchg
adc
inc
ficomps
outsb
cmc
enter
jecxz
ret
mov
add
subb
and
fwait
and
loope
clc
inc
mov
inc
outsl
and
push
xchg
lods
xchg
and
lret
mov
std
pop
fimuls
mov
enter
push
stc
test
pop
adc
js
dec
fdivr
cmp
repnz
mov
insb
dec
or
daa
add
mov
xchg
and
loop
and
jae
aad
xor
idivb
sub
in
in
lret
cmp
xlat
movsb
int3
inc
fsubrl
mov
push
push
and
addl
outsb
int3
jns
loop
sub
push
add
xchg
dec
xchg
sbb
xor
shrl
stos
in
inc
and
int3
cmp
xor
aad
inc
adc
ret
xor
inc
xor
pop
and
aam
or
xor
jmp
cld
mov
sub
sbb
jl
and
xchg
or
or
cld
push
ret
icebp
nop
iret
lock
pop
xchg
cmp
scas
mov
jecxz
leave
ds
es
rolb
pop
test
pushf
fmuls
sti
mov
mov
enter
add
jl
mov
and
jmp
xor
call
leave
out
and
js
xchg
gs
mov
xor
movsb
pop
in
mov
mov
lret
mov
jmp
insl
mov
sub
insl
sbb
adc
in
clc
loope
lcall
cmpsl
push
inc
pop
mov
fs
pop
mov
fistl
in
iret
out
loopne
cwtl
or
loop
pop
shrb
flds
jbe
cld
add
addr16
sub
imul
test
sbb
sub
out
adc
movsl
mov
sahf
pop
fmuls
les
adc
mov
jmp
xchg
sub
mov
push
testb
stos
imul
xchg
ss
testb
mov
lea
adc
cmp
mov
sub
inc
imul
push
sub
cmp
mov
test
sbb
std
mov
ficompl
sub
repnz
cmpsw
mov
dec
divl
add
xchg
loope
fs
cmp
mov
inc
mov
addr16
nop
cmp
lret
fiaddl
in
pop
pop
fs
cmp
stos
adc
push
jl
mov
loop
add
xchg
sbb
mov
daa
sub
icebp
xchg
cmp
scas
mov
jecxz
loop
outsb
mov
pop
xlat
into
cwtl
pop
sub
lds
int
fs
push
pop
jg
jne
test
mov
lret
pusha
sub
mov
push
or
rolb
xlat
loopne
mov
sti
mov
dec
mov
cmp
nop
jl
fucom
fldt
lret
cmp
call
imul
pop
fsts
jns
mov
and
in
xchg
insb
push
shrl
jmp
jae
inc
cltd
lret
adc
inc
add
gs
cltd
push
addr16
lods
shlb
sub
adc
adc
nop
lret
shll
fwait
les
xchg
dec
adc
sbb
sub
cmc
fnsave
popa
sub
inc
dec
ja
cmc
jno
xor
in
mov
mov
int3
xchg
pop
aaa
and
and
push
nop
js
add
jl
xchg
shrl
mov
fiaddl
cmp
adc
xchg
stos
rcll
je
shrb
aad
and
or
pop
push
or
jle
lea
lcall
daa
jae
or
mov
cmp
push
pop
das
fcompl
sub
adc
xor
push
push
xor
fisubl
bound
lcall
push
fwait
pop
out
dec
jecxz
pushl
shlb
add
std
dec
fldt
xor
xor
loop
sub
les
add
imul
mov
sub
xchg
int
inc
popa
mov
mov
inc
mov
mov
mov
cmp
es
popa
roll
popf
movsl
movsl
inc
out
xorb
fcoms
lret
sbb
mov
cmc
mov
iret
push
pop
std
fsubs
mov
xchg
loop
ds
jae
insb
sbb
mov
fwait
push
mov
cld
jbe
leave
iret
xor
into
sbb
popf
scas
jmp
mov
adc
pop
cmpsb
test
push
repnz
push
fwait
daa
mov
bound
lret
adc
fmuls
mov
pop
cltd
filds
mov
ja
ds
pop
out
xor
or
lea
adc
jne
xchg
sbb
aas
pop
rorb
fsubrp
or
adc
mov
sar
incb
cmp
jb
pushf
xchg
daa
pop
push
push
cmp
pop
icebp
mov
loop
inc
jg
movsl
adc
and
mull
xor
xchg
xor
cmpsb
adc
out
repnz
cmp
test
std
loope
pop
cmpsl
rorl
inc
scas
inc
and
in
pop
cmpsl
push
push
jo
ret
dec
imul
mov
das
ficoms
lods
mov
mov
dec
lea
icebp
adc
xchg
cmp
pop
out
scas
push
mov
mov
push
xor
outsl
cmp
outsl
mov
mov
into
mov
stos
or
xchg
xchg
iret
std
mov
fs
adc
pop
or
loop
pop
push
repnz
inc
ret
xchg
scas
clc
sub
cmp
pop
into
ret
push
ja
inc
inc
push
movsb
push
lret
push
cmp
jae
int3
and
push
mov
bound
and
dec
xchg
sbb
lock
mov
pop
mov
pop
mov
lea
jo
rcrb
jl
movsb
out
lea
mov
xchg
push
dec
adc
push
mov
call
fs
iret
and
xchg
xchg
iret
sbb
jl
insb
into
mov
jne
xlat
call
cld
push
mov
mov
pop
jle
cmpsl
pop
dec
or
loopne
rcll
xor
xchg
inc
pop
jmp
adc
mov
aad
mov
xor
inc
adc
and
popa
inc
jg
cs
ja
and
mov
lods
pop
lret
jl
and
inc
sub
mov
adc
aaa
out
cmp
addb
mov
lahf
dec
xor
outsl
push
and
jl
sbb
jns
and
xchg
sbb
mov
xor
sub
or
cmp
push
clc
push
mov
shrl
aad
mov
inc
sbb
xor
mov
mov
and
jno
cli
dec
mov
ss
lret
or
imul
mov
mov
jae
or
fwait
push
fsubs
bound
inc
push
or
push
jbe
nop
int3
jae
stc
std
pop
mov
inc
xor
and
data16
xor
cwtl
jno
fistl
and
mov
pop
test
mov
loope
leave
push
jmp
lods
pop
push
lea
mov
mov
into
es
cmp
loope
je
inc
insb
addr16
dec
hlt
dec
adc
mov
xorl
cmp
xchg
push
pop
pop
cmp
mov
jl
test
mov
adc
sbbb
ja
mov
xchg
add
sub
pusha
mov
divps
jg
ficompl
cs
bound
pop
cmp
int3
aaa
pop
push
mov
cmc
dec
push
add
outsb
inc
lock
xlat
pop
mov
pop
xlat
mov
mov
das
adc
cmpb
sahf
ljmp
dec
push
sbb
mov
mov
jne
lock
test
xchg
mov
mov
lock
inc
mov
dec
cmp
or
in
or
push
or
add
cmp
lods
shlb
in
adc
push
or
cmp
push
xchg
jecxz
cmpsb
add
bound
cmp
mov
shl
gs
mov
lahf
test
sbb
adc
jns
mov
bound
xchg
ds
loopne
idiv
pop
sbb
icebp
cmpsb
daa
test
ret
test
xor
push
jge
xor
sub
xor
cmc
nop
mov
lcall
out
jmp
imulb
jp
cmpl
xchg
repz
mov
rcrl
shll
dec
and
push
out
movsl
lods
in
dec
cmpsl
imul
lahf
inc
adc
dec
lods
xchg
pop
pusha
pop
das
adc
aas
flds
lcall
xchg
xchg
jmp
and
pop
push
push
int
int3
push
mov
inc
rolb
pop
mov
roll
div
outsl
ss
in
xchg
mov
add
ss
mov
sub
out
jmp
mov
jb
xchg
push
lods
adc
inc
add
push
adc
test
push
dec
mov
lods
push
inc
popa
dec
sbb
inc
loope
inc
mov
xor
mov
dec
adc
repnz
les
dec
adc
iret
test
sbb
jecxz
pop
adc
jg
push
inc
imul
push
mov
lret
lcall
pop
idiv
iret
in
xlat
call
xorb
mov
dec
xchg
aaa
jle
dec
jecxz
push
or
mov
mov
mov
jl
int
loopne
pop
stos
and
mov
out
pushf
inc
push
push
or
jb
ret
lods
loop
outsb
test
test
sbb
daa
cltd
xchg
jmp
faddl
lock
xor
pushl
jb
or
rorb
push
lods
add
cmc
sbb
jae
mov
movsl
dec
fldt
mov
daa
pusha
cli
arpl
leave
inc
sbb
or
xchg
pop
outsl
jbe
adc
add
pop
mov
push
inc
xor
sub
sti
pop
cltd
hlt
add
lcall
into
dec
inc
in
fistpl
imul
int
stos
je
and
jmp
sbb
neg
aam
rorl
jge
dec
mov
scas
scas
jge
or
mov
aad
cmp
mov
arpl
add
adc
lods
imul
jnp,pt
push
ret
mov
lods
fwait
insb
push
lret
mov
mov
jb
add
fsub
pop
mov
ljmp
cmpsb
out
aaa
sbb
cmpsl
and
xor
stos
lahf
cmp
sub
repnz
sbb
sbb
fmuls
add
jne
pop
fnstenv
popa
int3
mov
mov
mov
cltd
xchg
mov
je
stc
inc
mov
fsubl
fimull
adc
sub
sbb
in
push
gs
je
rcr
rolb
test
sub
jo
add
in
xor
xor
out
mov
xchg
jnp
mov
in
mov
mov
ds
cmpsb
gs
xlat
sti
push
sbb
mull
pop
push
andb
sub
lods
jp
pushf
imul
or
arpl
mov
pop
fstpl
out
lods
push
lods
pop
xor
mov
test
push
stc
gs
mov
lds
cmp
js
xchg
loopne
or
cltd
aam
or
xchg
lcall
jmp
fwait
js
lods
push
es
adc
lcall
or
ss
sub
cmp
xchg
loop
punpcklwd
sub
popa
mov
mov
arpl
inc
mov
push
in
xchg
pop
sub
mov
nop
mov
andl
stc
aaa
sarb
je
movsl
mov
aam
xchg
push
scas
lock
dec
lock
nop
jb
sbb
xor
fldl
repnz
mov
xchg
stos
xchg
inc
jmp
add
sbb
arpl
pop
movb
sti
inc
fisubl
neg
add
cli
sbb
or
insb
filds
sahf
test
lock
vsubsd
inc
pop
xor
loopne
daa
pop
sbb
fisubl
bound
hlt
je
lahf
cld
jp
mov
and
cmpsb
add
cmp
cmp
test
mov
movsl
cmp
clc
lods
mov
aaa
mov
xchg
adc
jbe
push
andl
shlb
lods
popf
repnz
ret
sbb
mov
xor
mov
fs
and
xchg
jae
pop
pop
lock
mov
stos
cmp
jns
out
jb
sbb
cmp
and
cmp
pop
addb
adcl
outsl
xchg
pusha
jl
inc
jae
mov
or
push
xchg
fcoml
testb
nop
cmpsl
xchg
call
addb
pushf
add
dec
add
xor
loope
jns
dec
sbb
sub
mov
cmp
dec
mov
rol
dec
ljmp
dec
je
jmp
jmp
add
jae
lret
xor
push
shlb
ss
sbb
popa
and
mov
xor
std
mov
and
jecxz
jno
sbbb
cld
gs
and
sub
add
out
in
fs
sub
inc
sub
xor
jns
jns
les
xchg
xchg
fbld
pop
test
jns
enter
xchg
sub
aam
mov
sarb
loope
iret
cmp
ljmp
sti
inc
adc
lret
stos
dec
pusha
push
aad
pushf
mov
icebp
cmp
call
negl
movsl
add
fildll
pop
pushf
pop
jo
or
xchg
repnz
sar
adc
push
inc
fistpl
pop
adc
cmp
xchg
fildl
leave
fstpl
repnz
es
insl
pushf
and
mov
mov
push
pop
ret
in
lahf
inc
mov
pop
adc
cmp
loopne
jb
and
es
jg
push
imul
movsl
sub
ja
and
arpl
add
adc
sti
pop
call
or
hlt
xchg
stos
dec
enter
jb
stc
sub
adc
and
in
aaa
addr16
cmc
push
jecxz
mov
pushf
inc
rol
lods
divl
scas
mov
int
es
jb
sub
out
and
jle
sbb
popa
sub
push
xor
cwtl
xchg
pop
push
flds
cmp
dec
inc
sbb
cmp
lcall
mov
push
fbld
dec
in
sbb
call
sub
dec
fsub
dec
sbb
into
sub
loop
lds
ret
jnp
enter
jbe
in
mov
daa
pop
cmc
fsubr
dec
sub
hlt
mov
add
lret
xlat
jl
ljmp
ljmp
fadds
js
jmp
enter
gs
js
xchg
mov
fwait
jge
xor
in
mov
mov
pop
shl
daa
fistl
dec
into
orl
sbb
std
popa
cmp
pop
pushf
jnp
xor
mov
test
lret
mov
xchg
mov
pop
mov
and
les
push
sbb
js
add
popa
cmp
xchg
mov
pop
cmp
and
push
inc
push
ja
push
imul
mov
mov
pop
or
adc
imulb
in
lods
loopne
cs
add
movsb
mov
arpl
inc
fsts
rcll
adc
jl
stos
sti
add
stos
popf
int
jecxz
outsb
cwtl
mov
scas
pop
dec
cwtl
leave
pop
add
and
xchg
jle
adc
imul
add
mov
rorl
pop
mov
shlb
cs
push
rcr
in
outsl
inc
mov
or
push
dec
jbe
pop
and
xor
ja
int
push
xchg
push
dec
xorb
dec
mov
add
ss
mov
ret
cmp
rorl
cmp
cwtl
fsubl
cmp
xchg
and
pcmpgtd
test
add
adcb
mov
sti
adc
fstpl
push
negb
outsb
jo
add
xchg
mov
rorb
imul
in
jae
cmp
inc
incb
jb
pop
fldenv
xlat
ret
subb
cmp
ret
lahf
outsb
iret
lret
repz
and
lea
aaa
in
stos
stos
lock
fisubrl
call
sub
test
pop
dec
aam
mov
or
dec
mov
lods
add
ficoml
mov
pop
mov
mov
out
shl
xor
inc
test
cmpsl
es
inc
and
pop
movsl
mov
mov
fsts
jae,pn
xor
push
sbb
or
test
sub
adc
fs
hlt
movsl
lea
lret
xor
lods
inc
add
pop
mov
out
cmpsl
jo
ljmp
hlt
pop
cmpb
rorb
adc
add
and
mov
pop
dec
dec
stos
punpckhdq
dec
into
cld
sbb
pusha
push
xor
pushf
imul
ret
lods
push
test
cmp
xor
cmpsb
push
mov
xor
ja
ljmp
arpl
pop
push
xchg
hlt
fdivs
and
mov
stos
test
cmc
mov
xor
aas
xchg
rorb
cli
mov
lret
daa
cld
outsl
ds
test
nop
dec
cmp
jno
xor
mov
in
popf
pop
pop
inc
lock
xchg
cmp
cmpsb
xlat
imulb
call
dec
pop
xchg
and
pusha
push
test
pop
push
xchg
dec
addl
or
mov
fisttps
sbb
fstpt
adc
add
lahf
xchg
push
int3
pop
mov
and
pop
mov
cwtl
sub
pop
mov
cmp
aas
jo
popa
test
data16
lods
popa
in
je
shlb
inc
inc
add
ret
ds
das
or
outsl
fdivs
into
cltd
add
dec
ret
cmp
and
mov
dec
xor
test
jo
out
adc
data16
adc
or
out
int
hlt
jne
cmpsl
mov
ret
mov
push
add
int
push
cmp
pop
push
dec
sbb
pop
out
inc
aam
jns
scas
pop
push
sbb
sub
pop
arpl
mov
push
dec
xor
mov
xor
mov
xlat
stos
repnz
or
mov
xchg
das
pop
mov
stc
and
enter
movsl
inc
add
and
jno
cmpl
inc
add
call
rorb
lret
jge
orb
add
insl
mov
lds
scas
inc
pop
cmc
lret
mov
enter
xchg
jmp
dec
subb
das
pusha
pop
movsl
arpl
mov
jb
mov
dec
inc
shrl
sbb
fdivl
pop
jle
push
inc
out
pop
jl
jmp
sub
xchg
push
adc
jo
out
pop
es
data16
inc
jbe
mov
or
jae
pop
stos
mov
lods
cmp
into
add
adc
fildl
inc
mov
and
int
lahf
pushl
push
push
push
pop
and
lahf
insb
push
jl
call
mov
push
jle
xor
mov
outsb
sub
fists
incb
aas
and
xchg
popl
fwait
lcall
repz
out
dec
xchg
push
aam
or
pop
sahf
aas
scas
popa
jno
xchg
ljmp
arpl
aam
sub
push
loope
sub
popa
mov
jo
add
sbb
cwtl
cmp
pcmpeqw
jno
out
jmp
testl
sub
sub
lret
sbb
les
movsb
imul
fisubrl
cmc
xchg
ljmp
std
jmp
dec
sbb
aas
sbb
cmp
dec
imul
xor
mov
xchg
testl
jae
pop
fimuls
pop
insl
lret
cld
fchs
push
lds
add
mov
mov
aaa
test
push
data16
push
loop
pusha
xchg
mov
jp
inc
sub
mov
sti
pop
jb
das
push
dec
jb
dec
fnstcw
inc
or
sub
and
push
cmp
push
mov
in
add
push
movsl
mov
or
mov
sbb
shlb
mov
loope
inc
scas
test
mov
fisubl
dec
in
icebp
jnp
dec
jmp
ljmp
mov
iret
pop
push
loop
fidivrl
pop
mov
cli
sbb
add
aad
inc
push
mov
leave
imul
sti
xor
mov
xchg
scas
xor
cmp
xor
dec
popf
rorl
mov
or
in
jae
push
or
pop
mov
cld
mov
movsl
aaa
insl
cmpsb
lahf
pop
lahf
mov
cmp
mov
and
imul
pushf
inc
push
pop
adc
mov
mov
inc
rorl
xchg
xor
xchg
mov
adc
cmp
das
je
lret
bound
dec
sbb
add
outsb
sub
std
push
mov
mov
mov
add
adc
ljmp
jnp
gs
repnz
fdivl
rcl
ss
mov
mov
add
dec
sbb
cli
inc
faddl
clc
pop
shrb
push
loopne
test
jle
shll
testl
jbe
push
ret
scas
xchg
xor
repnz
ljmp
add
aam
xlat
roll
out
add
insl
pusha
mov
aaa
pushf
mov
xchg
push
pop
xor
add
fwait
push
mov
roll
cwtl
movsb
xchg
sti
ficoml
xchg
xchg
out
add
push
test
scas
orl
out
push
dec
push
xchg
lock
jle
sbbl
fcmove
dec
pop
lods
out
jge
sub
sub
in
push
jo
adc
popf
and
jbe
or
xchg
push
pop
sub
outsb
or
mov
or
push
mov
shrl
iret
addb
mov
xchg
jg
test
out
jl
sahf
enter
cmp
dec
mov
fsubs
mov
add
jno
xor
push
addr16
jle
sbb
leave
sbb
fdivl
ffree
icebp
sbb
jge
inc
cwtl
cli
arpl
js
and
mov
das
sub
hlt
sub
out
mov
push
cli
data16
jl
pop
popa
das
int
mov
iret
out
fsubp
rcll
loopne
xchg
jmp
shlb
das
inc
pusha
cmp
pop
or
out
cmp
cmp
dec
push
out
fadds
roll
cmpb
cmp
les
mov
add
pop
pop
iret
mov
sarb
lcall
sub
aaa
dec
mov
rcrl
xchg
mov
cwtl
ret
aam
jecxz
xlat
in
inc
lret
cmp
dec
lahf
ss
jmp
insb
pop
cmc
iret
pop
push
mov
xchg
scas
pop
xchg
iret
jmp
cmpsb
pop
push
adc
mov
add
lahf
mov
insb
xchg
lret
dec
add
xchg
pusha
sub
mov
fcompl
cmc
jle
mov
loop
adc
aas
aam
lock
cltd
mov
aas
ret
lcall
cld
lods
ficompl
and
inc
dec
lcall
pop
lea
mov
fldcw
ss
jne
sbb
cmp
and
call
xchg
adc
jl
test
in
pop
and
mov
stc
out
addr16
iret
mov
xor
mov
pop
sbb
fiadds
jl
imul
and
adc
xor
jecxz
sub
popa
enter
mov
lret
popa
je
ja
mov
dec
es
outsl
andl
sbb
mov
add
shlb
inc
jnp
push
or
mov
dec
mov
add
leave
adc
jp
leave
pop
out
and
bound
and
xchg
arpl
xchg
sub
xchg
lods
cmc
inc
dec
xchg
leave
add
data16
cmp
pusha
idivl
scas
adc
jns
sub
test
sub
cwtl
in
sub
pop
add
repz
in
jb
lods
fxch
gs
jg
jle
mov
dec
dec
jecxz
pop
repz
int3
das
jbe
add
sbb
pop
std
or
cmp
out
push
sbb
and
dec
mov
xor
pop
xchg
or
icebp
or
pop
cmp
jo
and
jnp
scas
sbbb
rolb
fadd
or
mov
sarl
jno
dec
repz
test
xchg
mov
lods
or
mov
mov
lea
outsb
jle
xor
test
push
enter
in
and
inc
imul
mov
cs
sar
mov
add
divb
inc
mov
mov
inc
xlat
lods
xlat
int
and
xchg
outsl
pop
adc
mov
jnp
popf
fiaddl
mov
lock
stos
testl
sub
and
ljmp
scas
add
nop
cmp
adc
cwtl
into
stc
push
xor
movsb
pop
mov
xchg
mov
mov
or
test
addr16
cli
sar
fisubrl
and
add
xor
jge
lea
and
aas
xor
xor
add
pop
mov
leave
fwait
iret
in
mov
jbe
adc
jecxz
cli
lret
loop
adc
jne
lret
inc
mov
mov
lea
xchg
iret
add
subl
ret
pop
not
cmpsl
lods
sub
push
inc
jecxz
mov
cbtw
adc
cld
das
xorb
xchg
lea
jl
add
repz
mov
into
es
in
cltd
jns
dec
cmp
xor
stos
sbb
std
and
mov
fcomp
push
incl
enter
je
cmp
sbb
movsb
adc
adc
push
cmpsl
push
test
cmp
sub
adc
mov
hlt
aaa
mov
push
and
data16
in
in
jle
cmp
fisubrs
xchg
outsb
push
out
hlt
scas
enter
scas
outsb
in
inc
pop
dec
xorb
xchg
dec
jle
lea
push
je
add
cmp
std
aas
sbb
pop
push
incb
mov
add
in
push
leave
xor
lret
mov
lods
outsl
or
scas
nop
stos
and
push
add
adc
sub
push
imul
dec
shll
je
orb
in
gs
xor
in
rorb
sub
jae
ss
dec
sub
jp
std
hlt
mov
mov
inc
dec
mov
jnp
test
cmpps
fstl
iret
push
sub
mov
pop
cli
ret
or
mov
dec
dec
xchg
pop
cmp
dec
lcall
xchg
sub
or
mov
or
sub
outsl
ret
adc
cmp
fidivs
in
enter
aaa
jmp
cmp
inc
jb
pop
popf
inc
out
xor
test
fnstsw
movsl
push
jle
pusha
jg
dec
dec
mov
push
and
cld
mov
subl
mov
out
mov
dec
mov
xchg
sbb
sar
shrb
loop
test
inc
test
push
mov
mov
jbe
lock
mov
mov
movsb
cltd
fists
insb
mov
dec
adc
cwtl
mov
sahf
ss
push
cwtl
test
pushf
sbb
and
adc
ret
jnp
int
sbb
and
add
or
jns
cmc
imul
mull
xchg
mov
pop
and
mov
or
add
inc
or
pop
sub
xorl
mov
mov
pop
mov
mov
jp
cmp
inc
jmp
mov
push
pushf
es
sahf
xchg
push
rclb
mov
addb
punpcklwd
stc
sbb
dec
int3
add
es
inc
std
outsl
dec
jg
ret
shll
stos
sar
rorb
xor
xlat
push
inc
jle
je
iret
sub
daa
repz
lds
xor
cmpsl
enter
pop
push
or
inc
jmp
pusha
mov
loop
sbb
pusha
mov
ret
insl
mov
adc
mov
dec
mov
movsl
mov
sahf
fs
inc
sub
push
or
jns
fwait
push
mov
jne
push
sub
xor
mov
cmpl
mov
addr16
push
test
les
scas
repnz
into
shrb
int3
or
dec
sub
mov
xor
lret
jge
clc
setbe
xchg
sbb
leave
adc
pop
lods
ror
das
cmp
fwait
sub
aad
call
icebp
movsl
mov
xchg
mov
mov
jbe
addb
lret
xchg
or
es
xchg
repz
sti
pop
fsubl
test
sahf
pop
jae
inc
adc
mov
jp
sbb
dec
xchg
lock
jnp
bnd
inc
loope
cmc
push
scas
pop
push
jns
ds
fucomp
aas
mov
adc
repz
imulb
xorb
push
push
mov
mov
dec
jmp
xchg
jle
adc
movsb
iret
jl
out
addb
mov
inc
push
push
repz
dec
sti
movsb
aam
out
out
and
add
push
jae
cvtpi2ps
addr16
mov
clc
dec
mov
pop
jp
dec
inc
cltd
push
sbb
xor
fwait
pop
loopne
mov
cmpsl
mov
iretw
repz
sbb
loop
incb
mov
in
inc
stc
adc
cmp
push
and
mov
mov
mov
sub
xor
dec
dec
dec
pop
fs
or
inc
lds
in
hlt
add
fwait
xchg
test
testl
mov
push
adc
mov
cltd
pusha
shrb
jnp
iret
inc
or
mov
jo
push
add
dec
mov
popf
int3
cmc
push
js
scas
rcrl
add
scas
ret
jbe
jno
mov
and
fsubrl
cmpsb
mov
loop
mov
push
push
jb
das
adcb
push
jmp
mov
je
sub
movsl
cmp
jo
inc
adc
mov
in
ljmp
sbb
outsb
js
jbe
push
int
and
add
lahf
xor
mov
add
adc
das
or
aad
xlat
out
xor
xchg
rolb
das
jp
adc
pop
ljmp
iret
add
mov
push
das
mov
sti
subb
pop
in
cwtl
mov
sub
es
insb
inc
or
je
seto
jb
fisttpll
ficoms
loop
sbb
sub
sbb
xor
lods
lcall
ds
jb
mov
cld
jnp
sbb
or
pusha
decl
arpl
cli
sahf
jecxz
fildll
mov
sbb
mov
push
mov
jb
test
push
incb
xchg
xchg
insl
les
or
icebp
xchg
enter
cltd
xchg
int3
add
iret
not
push
call
andl
sarb
popl
sub
adc
or
jg
dec
cmp
out
xchg
push
sbb
adc
addb
dec
adc
imul
test
dec
jno
gs
adc
sbb
jp
cmpsb
adc
into
iret
jecxz
stc
pop
lea
push
sahf
imul
imul
cmp
cltd
lds
loopne
mov
cld
push
in
scas
sub
loopne
mov
xlat
jmp
movsb
dec
rol
jno
shll
xor
dec
scas
addr16
insb
pop
dec
mov
sbbb
and
ds
mov
fs
pop
mov
nop
jne
out
cmc
sarl
mulb
shll
inc
sbb
jp
xor
xchg
xchg
loope
popf
pop
and
sbb
shl
jge
or
mov
sti
stc
fsubrl
int3
pushf
mov
je
and
mov
cli
mov
or
lret
push
mov
xchg
inc
pop
test
andps
mov
mov
loope
in
cmp
pop
xchg
lock
loopne
sub
adc
pop
aad
xlat
shll
inc
lds
out
mov
cmp
or
jge
push
mov
ret
add
dec
bound
mov
clc
fiadds
adc
ljmp
scas
jp
popl
jecxz
mov
subb
jb
in
dec
inc
inc
xchg
or
sub
sbb
adc
dec
cmp
add
jne
inc
je
xor
mov
push
andl
iret
dec
loop
dec
xor
mov
leave
ret
ljmp
stos
jle
push
pusha
daa
pop
dec
adc
jl
add
cmp
fdivl
outsb
repz
dec
lcall
leave
mov
xchg
pop
adc
or
push
sub
inc
sahf
lcall
and
daa
dec
sbb
mov
mov
push
mov
pushf
daa
dec
mov
mov
sub
dec
pop
jmp
push
or
sbb
dec
roll
ficoml
aad
xor
lret
jp
in
inc
pushf
in
pusha
data16
mov
mov
xchg
jmp
arpl
add
xor
insl
jbe
inc
sti
ja
in
and
jno
fcoml
and
shr
sbb
lcall
pop
push
les
in
pop
aam
mov
sbb
jmp
xchg
call
lods
xor
push
push
pop
push
and
mov
ret
mov
and
xchg
add
pop
cs
sarb
mov
mov
adc
add
sar
test
inc
imul
dec
into
cmp
mov
popf
mov
andl
push
aaa
add
sub
xchg
cmpl
xchg
negb
jmp
or
fdivrp
les
cmp
and
push
adc
lea
nop
lcall
shrl
pop
jle
sbb
add
repz
xor
cmp
fldt
sub
cmovs
popf
cmp
xchg
push
leave
dec
jb
lods
js
sahf
lret
cli
dec
popa
int3
mov
iret
js
dec
jb
sbb
push
sbbb
and
mov
cmpsl
fists
xchg
testb
mov
xor
jp
xchg
pop
lock
xor
out
notl
push
jae
push
sub
in
mov
sub
sbb
xchg
imul
and
stos
xor
divl
icebp
push
and
push
push
pop
test
fisttpl
jne
xor
jns
or
rcr
pop
out
push
cmp
cwtl
sbb
das
out
xor
hlt
push
ja
xchg
jb
cmp
push
xchg
jl
les
fnsave
scas
dec
fiaddl
pop
inc
add
xor
vhaddps
or
push
mov
push
pop
xchg
mov
sbb
or
test
sbb
cltd
and
imul
sbb
mov
loopne
pusha
cmp
hlt
jl
cmp
cwtl
cmp
pop
aas
insl
mov
cli
jmp
mull
sbb
out
add
into
lret
cwtl
fwait
or
loope
psrad
add
scas
push
dec
push
cli
int
insl
movsb
xor
das
and
xchg
lahf
jecxz
shrl
add
or
pop
fadds
or
inc
dec
popf
out
test
out
stc
pop
mov
jge
sar
add
pop
orl
in
ret
mov
push
cs
shll
in
push
sbb
push
inc
push
add
scas
inc
cmp
push
test
jb
sbb
call
xchg
pop
pop
movsl
jns
cmpsb
pop
inc
aas
into
adc
adc
scas
mov
add
fldenv
int3
sbb
mov
mov
adc
dec
ja
leave
push
cmp
fstps
cmp
fistl
lods
test
idivb
fmuls
pop
sbb
mov
jae
ret
xchg
sbbb
repz
inc
add
sahf
lods
out
or
movsb
orb
in
ss
push
pusha
inc
push
addl
adc
xchg
mov
mov
adc
pop
adc
push
jecxz
lcall
ret
xor
int3
jg
stc
ficoml
mov
mov
xchg
lods
das
push
jge
ds
icebp
in
dec
fmull
aas
push
shl
shrd
or
mov
or
mov
sbb
orl
pop
sbb
inc
mov
mov
aad
insl
cli
xor
sub
lods
adc
aad
je
xchg
sub
adc
cmp
cmp
addr16
test
stos
insb
push
leave
outsb
lcall
cmp
test
adc
dec
dec
icebp
insb
push
scas
add
and
jmp
popa
addb
mov
pop
add
icebp
arpl
sbb
xchg
pushf
lret
insb
sbb
out
dec
push
mov
test
push
xchg
fs
jp
mov
orb
pop
jecxz
mov
out
or
dec
xchg
sub
jge
adc
sbb
xchg
lds
lods
push
filds
pushf
ljmp
scas
dec
sbb
and
add
dec
and
nop
xlat
enter
scas
adc
push
insb
pop
popa
dec
push
test
xchg
dec
jle
jo
xor
test
cmp
sahf
jo
imul
je
inc
mov
movsl
pop
cmp
sub
pop
sbb
shl
cld
mov
packssdw
sbb
sbb
jmp
cmpl
inc
lret
xor
lods
sub
jle
xlat
lds
sub
popa
lret
push
adc
fmull
stos
fdivr
insb
loope
test
mov
inc
and
xlat
sub
sbb
mov
lret
jl
sti
clc
fwait
lds
imul
mov
add
cmp
cs
std
nop
aam
pop
push
sub
fdivs
test
pop
lcall
popa
dec
aad
pushf
adc
arpl
frstor
cli
xor
ja
jae
aaa
dec
cli
mov
rcrb
xlat
insl
pop
scas
inc
cmp
cmpsl
outsb
js
hlt
test
sbb
fildll
push
jmp
pop
out
insb
stc
test
push
gs
sub
mull
nop
in
and
push
inc
sub
xchg
mov
xchg
pop
scas
stos
xor
add
and
fsts
mov
testl
cmp
hlt
mov
sub
sbb
lcall
pushf
mov
loope
cmc
ss
aad
or
xchg
out
add
mov
sbb
jmp
jmp
pop
and
jnp
inc
push
out
mov
mov
sub
pop
cmp
mov
cli
mov
gs
add
dec
xor
cvtps2pd
nop
shr
cmc
fisttps
sahf
sub
out
and
mov
pop
adc
mov
or
call
inc
mov
add
sub
adc
cli
adc
sahf
out
repz
cmp
inc
pop
sbb
xlat
cmpsl
jb
mov
add
mov
inc
les
es
adc
fs
vpunpckhwd
mov
jle
scas
sub
sbb
cmp
and
mov
test
jp
sub
das
into
cmp
adc
cmpsl
rorl
or
jp
sti
mov
aas
movsl
fwait
je
fistps
ret
ret
push
pop
push
mov
mov
xchg
out
adc
and
flds
movsb
mov
cmp
or
jp
pop
into
mov
mov
push
test
xchg
add
imul
in
mov
mov
xchg
into
pop
jge
daa
fiadds
xchg
sub
dec
ja
pop
add
jp
xchg
cs
and
and
insl
or
cld
sub
inc
sbbb
test
xchg
aam
cmp
les
shlb
push
cld
sbb
lds
jno
push
inc
or
lods
in
mov
fstl
sub
hlt
and
push
les
xchg
aad
rclb
and
test
negb
adcb
adc
cli
aam
or
add
dec
imul
jae
rcr
insb
gs
test
int
shrl
mov
notb
imul
stc
or
jl
popa
xchg
iret
pop
jmp
add
push
mov
adc
push
mov
clc
mov
or
pop
xchg
mov
pop
movsl
shll
test
pop
mov
in
or
sti
add
pop
mov
adc
bound
mov
mov
test
fwait
xchg
cmpsl
dec
lahf
mov
fdivrl
insl
cmp
cli
mov
js
iret
and
pop
loop
sub
mov
or
leave
push
cmc
add
add
enter
test
pop
mov
xor
push
mov
or
clc
jl
xor
dec
cmp
add
jns
push
sarb
pop
xchg
repz
stc
jb
test
scas
xchg
test
scas
pminub
add
jp
sahf
test
push
mov
dec
mov
sbb
mov
xchg
push
iret
sbb
scas
in
push
adc
sub
fiaddl
jg
in
fisttps
xchg
xor
outsb
stc
inc
add
push
xor
stc
ret
push
sbb
sub
xchg
daa
dec
pop
mov
shlb
push
gs
cmp
out
push
inc
cmp
leave
add
in
xchg
outsb
add
pushf
dec
mov
xchg
add
pusha
neg
insl
rorl
in
jo
and
lahf
mov
mov
aas
inc
push
push
dec
sbb
out
mov
loope
pop
inc
icebp
jbe
mov
mov
fisubs
mov
adc
push
or
lret
mov
out
es
mov
inc
bound
mov
fldenv
mov
dec
mov
mov
mov
mov
test
sarb
mov
nop
push
mov
mov
daa
jns
or
test
clc
addr16
jbe
mov
sbb
repnz
icebp
push
mov
lcall
clc
int3
lds
pop
and
xor
sbb
psadbw
xchg
push
mov
sarb
shll
hlt
leave
lock
pop
cmp
fisttpll
idivl
or
insl
lret
mov
test
sub
lret
or
jecxz
inc
xchg
push
repnz
test
jge
clc
pop
enter
cmpsb
shrl
xor
or
js
push
push
icebp
int
mov
popa
xor
sub
aad
push
dec
sarl
and
pop
roll
andb
mov
push
jl
pop
cmp
jb
cmpsb
xchg
rcr
dec
call
cmp
aam
andb
lret
inc
xor
hlt
mov
lret
sbb
jnp
leave
mov
cmp
bound
stos
bound
mov
fdiv
mov
aad
ljmp
int
mov
out
inc
jp
sar
pop
push
iret
mov
jno
cld
cmpsl
sbb
or
iret
add
sub
mov
add
inc
loop
pop
jb
dec
int
jne
jne
in
jnp
push
xor
je
lea
aaa
fstpt
sahf
orb
cmc
and
lret
call
loopne
cld
and
movsb
bound
jle
loope
or
sbb
mov
pop
fimuls
inc
dec
in
imul
push
pop
sbb
js
mov
xor
xchg
icebp
fwait
and
adc
fidivrl
aad
push
mov
mov
add
mov
xchg
dec
aad
jo
jne
in
jbe
inc
cmp
in
js
push
rorl
lock
inc
mov
sahf
lock
lea
lret
and
je
or
movsl
sbb
ss
fdivl
xchg
and
arpl
fcomps
pusha
dec
push
in
mov
or
lods
in
inc
xchg
xlat
cltd
je
and
mov
cltd
sarb
test
push
in
pushl
jecxz
xchg
enter
push
imul
push
sarl
mov
xor
std
clc
popa
cmc
std
xchg
negl
and
inc
and
lea
and
mov
je
mov
pop
enter
shlb
aas
enter
dec
rcll
xor
test
ja
add
loop
and
sub
scas
fadds
mov
test
jnp
enter
mov
iret
jp
ja
pop
test
sti
out
je
sbb
xchg
pop
or
in
jne
mov
mov
and
mov
jae
push
mov
clc
pop
enter
sbb
std
add
xor
add
xor
xor
mov
and
jbe
mov
xor
xor
sbb
or
add
xor
cld
sahf
xchg
mov
mov
sti
idivl
push
out
rcrl
mov
push
xchg
rcr
pop
jb
int
pop
test
pop
aam
pop
shrl
clc
inc
mov
mov
jecxz
fwait
xchg
std
call
add
movsb
fldenv
adc
icebp
mov
out
gs
cltd
mov
pop
loop
xchg
lahf
inc
fnsave
loopne
ret
mov
jbe
lret
or
jl
imul
dec
shr
mov
adc
inc
lds
imul
add
fdiv
adc
jmp
leave
mov
lret
lret
jg
addb
cmp
jge
in
cmp
pop
inc
inc
dec
jnp
and
les
push
sub
pushf
stos
cs
add
mov
pop
mov
in
xlat
mov
or
in
sbb
loop
cli
push
mov
xor
cmp
enter
adc
mov
aas
loop
sub
pop
and
imul
pop
out
int3
inc
stc
cmp
scas
inc
xchg
sbb
mov
add
add
or
test
xchg
popa
xchg
add
clc
lret
xchg
dec
sbb
cli
push
cwtl
mov
fbstp
cmc
loope
adcb
les
popf
pop
cwtl
cmp
scas
xor
in
fstpt
push
sbb
or
iret
xchg
or
jl
lods
mov
ffree
jmp
mov
pop
push
fcoml
jle
push
stos
test
sub
icebp
je
xchg
xchg
ljmp
pop
sub
test
gs
and
ss
mov
pop
jo
push
dec
xchg
inc
cmp
dec
cli
loop
mov
sub
cmpsb
mov
stos
outsb
mov
inc
imul
pop
enter
sbb
cmp
aam
inc
mov
movsl
push
dec
enter
in
mov
or
mov
mov
lcall
scas
lret
cli
jge
fst
sub
out
cld
sahf
xchg
fwait
xchg
vmwrite
mov
iret
or
xlat
ficompl
dec
mov
out
pop
bound
outsb
sbb
jo
mov
test
neg
ljmp
nop
and
jo
push
cli
cmc
mov
lahf
mov
test
out
sbb
shrl
xchg
push
and
fimull
cmp
add
mov
movsb
inc
lods
mov
sub
lods
in
mov
fwait
xor
movsl
pop
adc
mov
enter
ja
lods
xchg
dec
and
cmp
push
xchg
cwtl
cli
test
aad
mov
add
test
idivb
inc
mov
xor
push
inc
sbb
xchg
fmull
sub
mov
ret
pop
nop
bound
cwtl
mov
xchg
mov
ja
outsb
dec
mov
fmuls
lods
es
ss
fmulp
add
add
scas
push
adcl
jg
bound
movsl
xor
nop
aaa
dec
jmp
es
mov
lahf
fsub
ds
popf
adc
fs
enter
pop
divl
xorb
popf
lock
lods
fwait
xor
mov
xor
cmpsl
sub
insb
push
pop
daa
fsubr
hlt
and
add
adc
shll
test
outsb
shl
and
lock
pop
jp
roll
subl
and
mov
mov
in
lods
mov
arpl
or
pop
jnp
mov
bswap
xchg
call
data16
or
xor
xor
shrl
jnp
cltd
or
jns
mov
mov
xchg
jnp
add
sti
push
imul
rclb
scas
jns
mov
cmp
lods
leave
aad
clc
push
adc
hlt
push
adc
addr16
lcall
or
movsb
jge
je
add
cmp
aad
cli
aas
jmp
mov
pop
data16
pusha
dec
scas
mov
pushf
mov
shll
dec
test
jle
or
or
aas
adc
pop
call
mov
push
loopne
imul
rcll
sub
pop
xchg
mov
adc
fcompl
or
mov
push
mov
test
add
cmp
roll
jnp
hlt
hlt
and
inc
ficoms
cs
addr16
mov
mov
mov
loopne
sbb
subb
add
add
or
mov
cltd
mov
pushf
call
cmp
addl
cltd
outsb
dec
das
adc
sti
add
insb
inc
rcll
das
sbb
xor
sarl
outsl
xchg
pop
mov
add
sub
add
xchg
adc
pop
sub
cmp
repnz
inc
fisttpll
stc
add
dec
out
xor
xor
lods
nop
pop
push
loope
mov
add
lock
lods
ficoml
mov
xchg
and
inc
stc
mov
xchg
test
inc
xchg
or
inc
push
aaa
or
push
xor
sub
adc
imul
je
add
fwait
lcall
loop
and
imul
fstps
ss
test
mov
mov
mov
stos
and
sub
mov
rorl
mov
dec
push
jge
xchg
stc
pushf
inc
or
ficomps
aaa
das
out
add
pushf
mov
sub
mov
ja
jne
adc
push
xor
aad
and
lret
stos
or
cli
sbb
cmp
jns
sbb
aaa
or
arpl
add
movsb
pop
fistps
aaa
bound
es
jmp
mov
hlt
or
orb
mov
or
pop
xchg
adc
int
xor
imul
mov
arpl
xchg
loopne
pop
sbb
jl
and
xor
iret
pop
pop
rcrb
and
inc
addl
push
in
loope
mov
mov
inc
xchg
hlt
testl
cs
push
inc
adc
stc
sbb
rol
dec
int
and
into
mov
cmpsb
outsb
sub
jb
insb
adc
fwait
jle
std
add
mov
arpl
xor
fs
int
dec
mov
cmp
mov
iret
mov
jg
or
xor
mov
mov
and
jo
jae
cmc
enter
movnti
sub
xlat
and
dec
pop
push
aad
xchg
xchg
fwait
dec
cmpsl
inc
jle
hlt
aam
xor
mov
xchg
cmp
cli
push
iret
loope
out
mov
xor
int
pop
movb
add
mov
test
mov
cwtl
and
mov
add
out
and
and
push
or
das
sub
outsb
movsb
sbbb
adc
shlb
pop
pop
sbb
pushf
xor
inc
fdivr
inc
jmp
or
mov
rorb
push
adc
inc
add
cmp
mov
loope
mov
jl
iret
push
call
iret
mov
pop
jge
mov
push
mov
into
gs
xor
xchg
fists
inc
jne
pop
outsl
xor
rol
icebp
fsubrl
pop
leave
insw
inc
mov
and
adc
ret
jl
inc
dec
xchg
jle
rclb
das
jne
mov
add
add
fdivr
add
int3
push
pop
ss
and
scas
jno
and
and
cmp
fs
lea
movsl
pop
xchg
jg
inc
xchg
add
xor
cmpsb
ret
std
test
xchg
xor
fcomps
mov
jl
xchg
insl
ljmp
cmpsb
inc
mov
xchg
into
push
mov
push
mov
dec
in
mov
xchg
dec
out
insl
sahf
stc
and
inc
inc
lcall
mov
add
sbb
fimuls
dec
and
rol
dec
hlt
ret
sbb
xchg
pop
test
es
stc
xchg
dec
adc
and
add
lahf
push
sub
arpl
mov
shrl
sub
jns
fildll
pop
pusha
add
ret
stc
add
lods
lds
test
push
push
add
popf
push
jp
inc
push
vmovdqa
lods
xor
dec
clc
inc
mov
ljmp
jg
orb
mov
sbb
test
add
push
ss
arpl
inc
aad
lds
in
push
cmp
test
or
jb
mov
stos
mov
stos
push
cmpb
xchg
mov
icebp
xlat
mov
movsl
inc
or
jmp
pusha
cmp
out
inc
and
aad
adc
psubusw
cld
sbb
xchg
std
push
scas
stc
shll
add
mov
das
cmc
sbb
inc
jnp
movsb
mov
mov
mov
leave
popa
dec
dec
shll
addr16
shlb
and
aaa
mov
add
insl
dec
jno
mov
sub
mov
dec
repz
mov
xor
std
lock
jmp
pop
cltd
xlat
inc
adc
data16
bound
lcall
cmp
cli
fists
xchg
into
subb
ljmp
and
pusha
mov
rcll
out
mov
ret
aad
shld
add
jns
push
xor
ret
and
fisubrl
xchg
imul
adc
nop
xchg
push
inc
inc
es
aaa
or
insl
inc
jb
push
mov
popf
aaa
pop
insl
xchg
std
adc
nop
shrb
arpl
cmpsb
dec
lods
mov
mov
lcall
pop
loope
repnz
in
xor
insb
xchg
mov
dec
dec
inc
data16
mov
sbb
xor
cmc
pop
push
loop
adc
dec
pop
inc
fldpi
mov
or
adc
enter
mov
loopne
dec
pop
in
cmp
adc
jae
cmp
mov
push
or
inc
mov
xor
pop
mov
mov
mov
or
cltd
mov
shrb
enter
xchg
pop
mov
lds
and
dec
dec
arpl
dec
shrb
xor
popf
stos
sbb
jg
dec
jno
lock
xor
scas
sahf
int
out
adc
cmp
xor
sub
stos
mov
adc
jmp
push
pushf
xorb
jmp
cmp
test
cmp
adc
mov
xchg
pop
cwtl
fistpl
xchg
xor
or
mov
cwtl
inc
xor
rcl
in
in
int3
jns
mov
mov
push
push
out
popa
xchg
jg
or
ret
xor
pop
add
jg
mov
mov
repnz
orb
xchg
enter
mov
arpl
xchg
call
aam
inc
addr16
or
dec
ss
pop
adc
cmp
xchg
or
imul
ret
add
loope
push
fcoml
loope
sahf
in
cmc
cltd
mov
or
sub
jmp
iret
std
mov
mov
ljmp
pop
add
inc
gs
decl
sarb
loope
xchg
test
stos
addr16
lcall
jns
push
test
inc
orl
mov
push
xchg
mov
pop
testl
mov
sbb
cld
mov
push
pop
fldcw
mov
ljmp
scas
pop
cmp
test
rep
cmp
pop
incb
sahf
cs
icebp
xchg
push
popf
fwait
repnz
adcb
daa
mov
fcoms
fwait
mov
stos
add
scas
aad
jmp
add
arpl
sub
stos
lret
push
pop
enter
push
daa
scas
push
xor
cmpsb
pushf
cld
and
push
addr16
sub
movsb
lret
xchg
sahf
xor
push
testb
sub
and
std
xchg
test
enter
inc
push
add
mov
addr16
mov
mov
mov
xchg
mov
mov
sub
sbb
js
and
mov
loope
xor
sbb
push
pop
mov
fs
mov
mov
push
mov
add
jae
outsl
pop
fs
inc
jecxz
xchg
shrl
inc
adc
bound
add
sub
aas
xor
lcall
add
jl
andl
jb
and
mov
add
push
mov
sub
push
mov
filds
mov
mov
aam
movsb
pop
gs
mov
xor
sbb
push
mov
int3
lods
addb
loopne
popa
das
faddl
jno
outsb
scas
mov
xor
inc
and
shlb
adc
fs
scas
stos
movsb
xchg
dec
sub
popa
sahf
mov
lahf
adc
gs
sub
dec
push
pop
add
cmpl
push
push
fs
ret
in
popa
std
pop
xchg
or
adcb
pop
int
mov
jl
or
ljmp
add
hlt
out
xchg
push
mov
add
push
arpl
out
jbe
push
or
jge
sbbb
inc
cmp
pause
sub
sbb
cwtl
jb
int3
je
sbb
cwtl
dec
insb
sub
sub
and
push
cli
mov
test
push
sub
xchg
sbb
mov
popa
cmp
arpl
mov
push
fsts
and
mov
cmp
push
andb
cmp
shlb
into
mov
jmp
rcll
inc
push
pop
fcmove
cmp
test
cmp
pop
add
xchg
je
enter
arpl
jge
sbb
cmpsl
push
pop
lret
insl
adc
addr16
sbb
push
lods
sbb
bnd
js
cmp
cmp
in
lahf
pop
and
jo
fs
divl
dec
ja
cmc
sub
ds
mov
loop
ficomps
bnd
jnp
adc
inc
xor
mov
enter
stc
movsl
mov
mov
cmc
inc
xor
mov
int
jo
dec
xchg
pop
jl
clc
and
pop
mov
mov
mov
fmul
out
sub
jb
mov
mov
cmp
stos
and
add
clc
sbb
out
adc
test
mov
dec
push
outsl
mov
inc
arpl
rcll
mov
sub
or
fistl
ret
jecxz
sub
loope
mov
adc
loopne
les
aam
faddl
mov
outsl
aad
jecxz
imul
mov
stos
push
cmp
nop
cmp
in
cmc
pop
push
mov
shrl
adcb
sub
scas
fs
test
cltd
mov
mov
mov
mov
pop
arpl
mov
shrb
sti
cs
data16
cmp
cltd
cwtl
xchg
mov
gs
inc
pop
test
adc
or
fcomps
pop
aas
dec
add
push
scas
ficompl
pop
dec
cmpsl
cld
push
mov
xchg
sub
and
imul
jmp
or
insl
inc
lea
ret
ljmp
sbb
lock
mov
test
adcl
or
pusha
repz
xor
movsl
loopne
fldenv
insl
push
xchg
daa
iret
push
dec
xor
stos
or
and
and
dec
mov
jnp
adc
daa
cld
nop
test
xchg
dec
enter
push
pushf
mov
push
fldl
out
lret
push
add
shrl
jbe
mov
es
dec
inc
jle
xchg
or
inc
fbstp
loopne
push
jg,pn
insl
test
push
js
arpl
adc
sub
in
cwtl
and
jbe
shll
adcl
pushw
sbb
or
inc
jl
add
mov
mov
imull
add
sbb
movhpd
push
lahf
jb
cmp
adc
push
repnz
xchg
fisubrs
lds
out
mov
aam
mov
ds
add
frstor
shrb
sbb
sbb
les
push
pop
inc
xor
cwtl
dec
jne
arpl
jmp
or
mov
xor
sub
in
inc
lea
dec
push
fiadds
iret
cmpsl
mov
or
movsb
enter
adc
mov
jb
adc
sub
loop
shr
mov
pop
in
add
nop
xchg
je
mov
pop
ret
sbb
cltd
iret
add
pop
push
std
inc
bound
or
int
out
push
fisubrs
in
sbb
out
sub
outsl
ret
enter
movsl
movsb
dec
sub
lcall
and
push
add
xchg
hlt
mov
inc
jge
mov
adc
xor
dec
push
inc
add
fcompl
push
sub
mull
pop
mov
call
cmpsb
inc
dec
pop
xabort
ret
mov
fstpt
push
stos
shl
jns
lret
lcall
iret
mov
ucomiss
sub
or
stos
and
mov
jb
int
inc
rol
aaa
ja
icebp
cli
jl
mov
mov
xchg
jb
mov
xor
sbb
sti
in
fwait
mov
jae
sahf
imul
sbb
insl
jnp
or
cs
cmp
mov
sbb
adc
into
push
std
or
lds
sub
sub
mov
push
in
enter
inc
pop
add
scas
stc
cmpsl
push
psubsb
xor
lock
pop
jo
sub
and
sbb
aaa
fnstenv
rcrb
lods
cmp
jmp
addl
add
xchg
sub
pop
stos
sub
push
cld
fildl
and
lret
cmpl
aas
adc
inc
scas
rcl
ret
cmpl
subb
jmp
sahf
cmc
lods
lret
das
lret
cwtl
adc
push
ret
cmp
int
sub
shll
hlt
gs
gs
push
leave
test
or
cmp
jg
jle
xor
xlat
pop
and
cwtl
pop
int3
add
fiaddl
movl
imul
xor
cli
lret
push
mov
icebp
add
popa
stos
sbb
mov
loop
int3
xor
loop
sub
scas
xchg
movsl
sub
fisubl
push
sub
mov
cs
icebp
and
hlt
pop
out
mov
jmp
fldt
mov
jns
lea
mov
push
ljmp
push
punpcklbw
in
lock
cmpsb
push
call
je
sti
cmp
shl
pushf
cmp
lret
sub
js
int
popa
enter
dec
sbb
ljmp
int3
movsb
push
aas
jb
xchg
or
movsl
sarb
or
aaa
icebp
sub
out
sarb
outsl
xor
mov
ds
test
pop
cmpsl
cmp
pushf
bound
std
xchg
jl
ret
imull
xor
aas
gs
mov
faddl
inc
dec
jmp
loope
jb
fsubr
and
aas
faddl
sub
cli
jno
stos
fistps
pop
popa
jbe
loop
idivb
sti
inc
push
lds
add
bound
push
push
cwtl
pop
pop
sub
mov
iret
leave
cld
inc
push
les
dec
mov
add
push
push
adc
icebp
push
inc
mov
jnp
popf
stos
inc
pop
cltd
movl
cwtl
adc
imul
xor
push
in
add
fistpll
les
cmc
inc
sbb
xchg
and
and
clc
jmp
and
and
jecxz
sti
pop
pop
sub
sub
mov
sub
jne
sub
hlt
jno
dec
xor
in
fcmovnb
outsl
sbb
aaa
ds
mov
ja
les
cltd
cs
int3
mov
jb
ret
clc
mov
cmpsl
pop
cmpsb
mov
mov
in
les
pop
fcoml
dec
cmp
hlt
mov
xorb
jns
cmpl
pop
repz
xchg
mov
sbb
dec
das
or
sub
mov
inc
mov
cmp
in
mov
and
adc
push
adc
roll
xor
cmpsb
push
sbb
mov
push
pop
lcall
andb
jmp
sbb
and
aas
adc
push
test
and
jno
in
jbe
sub
jecxz
or
lret
xlat
stos
adcl
outsl
fimull
sbb
notb
out
mov
in
cmp
mov
lock
mov
push
sub
pop
lods
fwait
mov
xchg
insl
iret
out
ss
loope
cmpl
mov
mov
call
nop
jmp
enter
cmp
push
sub
test
ljmp
mov
push
and
xchg
rcrl
mov
or
pop
fsubp
pop
test
cltd
lahf
mov
mov
push
and
outsl
dec
int
in
mov
aad
popa
outsl
pop
shlb
or
cmp
dec
mov
or
cmp
popf
or
add
icebp
push
or
jne
lret
dec
lret
mulb
or
ss
mov
data16
daa
sbb
push
xchg
mov
fcoms
push
jo
jl
inc
sub
into
je
xchg
push
inc
mov
pop
push
jmpw
scas
loop
pusha
fwait
mov
repnz
pop
aad
xor
mov
sub
pop
sub
mov
cmp
push
popa
inc
adc
test
mov
xchg
add
sbb
fsubl
ret
lret
into
imul
loopne
hlt
scas
lods
and
dec
jecxz
notb
xlat
pop
sub
test
mov
jbe
mov
stos
stc
outsl
add
inc
mov
sbb
shl
das
inc
jbe
jecxz
jp
and
jb
addl
jns
pop
jo
cs
fucomp
stc
sbb
adc
sti
xchg
rol
add
fidivrs
enter
negl
loop
cmp
stos
loope
nop
fisubrl
das
add
xor
insl
and
sub
and
lcall
pop
test
pop
pop
ret
xchg
fwait
inc
fsubrs
lret
push
push
fs
sahf
push
or
std
in
repnz
or
mov
mov
jge
pop
mov
in
int
xchg
in
sbb
ja
push
gs
xchg
sub
cmc
dec
and
push
enter
stos
xchg
loope
mov
sub
pushf
adc
jnp
rcll
rorb
adc
out
int
sub
sbb
std
or
cmp
in
mov
leave
mov
and
jge
jmp
push
dec
es
cmp
repnz
push
inc
in
lods
mov
in
inc
mov
jg
aad
and
mov
xchg
adc
scas
fstpt
mov
aam
iret
rclb
icebp
sbb
es
sbb
das
stos
js
push
pusha
dec
fwait
inc
xchg
popf
ljmp
aam
das
addr16
add
mov
stc
pop
and
icebp
loop
dec
movsl
setp
ret
mov
dec
push
mov
push
push
xchg
add
mov
aad
jg
and
mov
xchg
mov
fxch
xchg
call
outsl
push
mov
sub
popa
dec
dec
out
mov
and
adc
add
jmp
cmp
aaa
aam
bound
pop
movsl
sahf
inc
add
rolb
fnstsw
cmp
lods
mov
outsb
mov
pusha
loope
rorb
cmp
int3
andl
push
popa
hlt
mov
sub
test
xchg
cvtps2pi
cmp
sub
outsb
xlat
call
outsb
mov
xchg
fimull
popl
push
lea
cmp
add
les
jnp
xchg
add
dec
add
xor
sub
mov
aaa
pop
ret
pop
mov
mov
dec
push
sbb
mov
jne
pmaxub
movsl
sub
jle
jnp
mov
mov
adc
stos
lds
sbb
loope
inc
loope
mov
mul
pop
pop
fwait
ret
ret
jb
lret
aaa
push
mov
sub
jno
arpl
call
xchg
arpl
das
inc
mov
or
daa
push
push
lea
push
jbe
ljmp
sub
loop
xchg
mov
push
imul
imul
and
test
pop
pop
or
sub
call
sbb
jg
or
mov
or
mov
sbbb
jne
outsl
mov
cmp
mov
notl
outsb
xchg
pop
arpl
add
gs
xchg
divb
and
cltd
sbb
fmulp
sub
mov
loop
shrl
and
in
icebp
xor
leave
mov
ja
push
ljmp
adc
mov
je
fdivrp
jg
push
fucom
inc
mov
in
std
fidivl
xchg
hlt
movsb
xchg
pushf
cld
sub
lock
sti
test
mov
inc
lods
cmp
mov
test
and
cmp
stos
fnstenv
jle
dec
out
inc
xchg
mov
testl
pop
xor
dec
addl
aad
fs
fs
sarl
adcb
out
cmc
add
sub
mov
or
or
add
pop
cltd
ret
jns
cmp
mov
add
ds
loopne
sub
sbb
addr16
inc
imulb
lods
lea
and
add
mov
cmp
daa
jne
ffree
xchg
mov
movsl
jmp
inc
add
jo,pn
jmp
push
lcall
adc
dec
or
testl
xor
outsl
in
testb
cmp
je
inc
adc
and
jl
adc
jmp
cmp
cltd
push
dec
dec
ret
addl
rcl
jae
fistl
lret
sti
ja
sbb
and
dec
inc
add
push
jae
or
sbb
loop
daa
add
inc
add
cmp
jbe
aam
cmp
rol
sub
sbb
dec
or
int
add
fstps
inc
adc
add
dec
fbld
je
xor
insb
add
sbb
lock
mov
out
jns
std
jnp
sbb
mov
dec
and
add
inc
into
in
pop
push
movsl
lcall
imul
xchg
mov
nop
sysret
mov
icebp
xchg
jno
ds
es
in
jecxz
test
sbbl
mov
mov
sti
add
inc
mov
into
rcll
pop
adc
pop
test
sar
push
mov
or
popf
mov
lods
pop
stos
mov
aad
fisubl
test
add
pop
sub
out
cmp
add
jbe
or
lods
jecxz
jo
sub
fcmovnb
fcomi
pop
sub
imul
cmp
leave
out
sub
jbe
mov
ja
sbb
sub
int
mov
cmp
mov
or
aam
jae
inc
enter
rorl
lds
jp
push
pushf
inc
iret
push
das
fisubs
inc
adc
ret
xor
or
pop
je
pop
and
int
cmc
filds
mov
hlt
mov
xchg
int
jg
out
pushf
dec
adc
popf
push
cmpsb
xchg
das
shrb
imul
pop
das
xchg
lods
push
aad
mov
orb
int3
mov
or
outsl
adc
das
and
int
fistpl
pop
mov
loope
jne
and
mov
push
dec
mov
inc
repnz
or
jl
mov
sbb
or
adc
cmp
lret
push
adc
inc
lods
xor
dec
cli
adc
cmp
xchg
ds
fdivr
iret
scas
lods
jbe
mov
scas
lods
lods
or
lods
xchg
iret
xchg
sub
adc
shrl
adc
les
loope
xor
fwait
xchg
pop
pop
adc
nop
inc
loope
xlat
push
pop
adc
js
pop
add
hlt
xor
push
adc
dec
fwait
xacquire
mov
movsl
fldenv
call
pop
jecxz
rclb
jecxz
add
ja
or
call
push
xchg
mov
mov
xchg
jle
pop
push
inc
xchg
ror
cmpsl
out
and
rol
cs
mov
adc
mov
leave
rolb
pop
insl
cmc
jecxz
iret
bnd
fwait
sbb
pop
je
push
dec
fstp
or
loopne
repnz
arpl
js
xor
dec
scas
lods
xchg
jne
cmp
in
xchg
addb
in
cmp
mov
pop
add
lret
dec
pushf
dec
out
cmp
addr16
stc
lods
jno
es
push
addb
outsl
shl
cmp
repz
repz
cli
mov
stos
data16
push
sbb
pushf
mov
jecxz
in
cmpsl
movsl
add
mov
or
and
js
lret
popa
call
in
fwait
inc
std
pop
push
mov
and
add
sub
mov
clc
into
sub
scas
cwtl
or
scas
mov
xor
data16
fisubl
mov
jecxz
jp
insl
out
pop
adc
xor
jbe
ds
decb
or
push
jb
loop
jnp
std
xchg
push
stc
adc
jecxz
inc
add
outsb
lock
ret
js
pop
aas
fsubrs
mov
shrl
cmp
jmp
xchg
or
jge
sbb
test
cmpl
inc
jbe
cmp
xor
jmp
jb
mov
inc
sub
sub
inc
dec
and
lock
maxps
xor
mov
sbb
xchg
add
cmp
inc
mov
fs
push
mov
push
or
mov
aad
mov
dec
inc
add
cld
pop
jbe
popa
call
or
fildl
fwait
add
adc
imul
pop
pop
xor
jno
pop
enter
xor
sbb
cmp
inc
out
push
push
pop
loope
xlat
das
inc
dec
icebp
stos
adc
aad
in
jge
outsb
and
test
divl
into
dec
cli
fstps
out
xchg
push
jns
mov
jl
mov
test
cwtl
lret
inc
outsl
push
arpl
jns
add
outsl
sbb
lcall
mov
lock
cmp
mov
mov
test
pop
push
push
sub
mov
and
push
movsl
xor
iret
xlat
cmp
loopne
js
push
jp
push
push
sahf
outsb
push
push
iret
or
out
leave
fisttpl
arpl
test
inc
inc
ss
pop
cmp
jge
loopne
popf
cmp
ljmp
sarb
cmp
fidivrl
cmp
cli
mov
xorl
ret
popa
mov
cs
outsl
insb
add
stc
flds
das
pop
jmp
cwtl
orb
rclb
dec
jns
or
jbe
add
je
mov
sbb
mov
ljmp
mov
inc
cmp
stc
jmp
dec
pop
or
stos
sbb
sar
lock
and
xchg
adc
fildl
mov
inc
pop
xor
jle
sbb
push
cmp
or
out
push
mov
std
push
ret
loopne
xor
jns
arpl
push
and
mov
inc
or
cld
push
add
fisttpll
imul
and
arpl
mov
inc
cmp
xor
mul
dec
mov
cmp
mov
test
mov
inc
adc
iret
loop
inc
in
cmp
loopne
mov
pop
jnp
mov
adc
test
leave
movsl
cmp
xchg
fsin
mov
adc
arpl
inc
pushf
add
sbb
pop
mov
jmp
lret
or
scas
sub
into
adc
xor
pop
vrsqrtss
fldenv
xchg
pop
sbb
adc
xchg
push
mov
xor
dec
push
fsubrl
push
cwtl
pusha
in
sub
out
jnp
push
push
stos
inc
sbb
outsl
cli
clc
push
loope
pop
dec
adc
incl
fsubrs
rcll
add
jg
pop
pop
mov
fdivl
sub
push
out
cmp
sbb
nop
daa
scas
mov
sub
xorl
repz
data16
push
xchg
lea
lret
ret
ss
mov
jge
inc
inc
scas
daa
imul
test
sbb
lds
cwtl
inc
jg
daa
dec
movsl
cmp
xor
jge
test
xchg
inc
lock
in
movsb
lret
enter
fdivl
int3
sub
push
movsl
lahf
arpl
and
dec
sub
and
jle
fdivrl
mov
dec
xchg
xchg
cmp
sbb
or
insb
daa
stos
test
pushf
enter
stos
aaa
ficoms
les
inc
adc
jle
inc
fidivl
out
jmp
movsb
pop
xchg
cmp
inc
xchg
popa
or
jnp
nop
ds
mov
divb
jbe
mov
shll
sahf
and
cmp
test
pop
cmpsb
mov
inc
stos
aad
add
psrlq
xchg
and
adc
inc
test
stos
sti
fisubrs
mov
and
leave
fists
sub
idivb
inc
mov
pushf
jb
loop
jo
jmp
jne
lods
js
mov
ss
jg
rolb
mov
mov
jg
xor
jmp
and
adc
lahf
mov
xorb
cmp
stc
pop
nop
insl
syscall
pop
sub
lcall
sti
mov
push
test
pop
add
jecxz
mov
mov
add
int
jb
int
lock
orl
add
xor
sti
inc
dec
ljmp
jb
jnp
aad
or
sbbl
jbe
cmp
cmp
arpl
dec
push
adc
xchg
subb
iret
mov
ja
and
imul
push
push
inc
flds
in
bswap
dec
mov
dec
jl
cmp
aaa
mov
popf
xlat
sbb
test
or
push
push
imul
mov
out
andl
ds
sub
inc
cmp
push
cs
fcmovnu
scas
mov
pusha
sub
dec
xchg
mov
outsl
lret
insb
dec
xor
clc
mov
mov
xor
mov
cmp
mov
or
in
rolb
mov
mov
shl
insb
cmp
mov
ljmp
sub
stos
arpl
adc
jle
or
or
xchg
hlt
nop
std
cld
xor
mov
stc
or
mov
push
icebp
jg
outsb
xor
cltd
popa
or
pushf
cmpsb
mov
fadd
aaa
pop
mov
clc
ja
dec
xchg
xchg
test
aad
iret
jns
rol
dec
xchg
fcomi
fldln2
aas
mov
scas
shrl
push
lret
jge
and
iret
fisttpll
es
sti
push
rorb
lds
jmp
inc
inc
jle
jne
fsubs
mov
ss
dec
pop
inc
push
lock
push
push
cmpsl
jns
movsl
movsl
push
pop
sahf
pop
insb
mov
mov
lahf
jno
or
roll
xchg
idivb
dec
icebp
adc
sub
icebp
mov
pop
push
jb
adc
lea
mov
and
lret
loop
xor
mov
jl
jb
das
jg
leave
ds
push
and
jp
or
inc
out
mov
cmp
add
cs
subb
xor
imul
adc
mov
cwtl
jmp
aam
xchg
push
xchg
add
mov
out
mov
add
gs
and
sbb
icebp
dec
pop
pop
push
das
cwtl
fiaddl
mov
xchg
dec
mov
cmp
add
out
in
mov
aam
idivb
jmp
nop
outsl
es
xchg
out
iret
cli
jns
mov
xorb
gs
movsb
shll
js
pcmpgtb
fsts
movsb
ret
xchg
bswap
mov
mov
es
scas
mov
sti
pop
push
lret
jp
or
xchg
sub
mov
mov
ja
insb
fimuls
inc
or
aaa
aas
lret
mov
adc
mov
push
fwait
std
mov
ja
cmp
or
mov
add
cmp
dec
int
aas
mov
xor
popf
imul
popa
ja
cmp
sbb
cmp
xchg
sub
mov
aam
ss
xlat
adc
xchg
mov
ss
push
push
mov
loopne
movsl
cli
push
xchg
loop
aad
repnz
movsb
cmovg
pop
js
test
bound
shrb
adc
ds
xchg
or
std
nop
loope
mov
enter
decl
idivl
dec
xchg
iret
inc
push
lods
stos
pusha
adc
das
xor
sbb
add
pop
push
je
hlt
push
mov
cltd
fdivr
lods
ficompl
dec
fcompl
scas
subb
pushf
pop
inc
xor
push
jmp
cli
pop
lret
fisttps
push
xchg
jo
dec
enter
adc
and
inc
pop
les
push
aad
pushl
push
xlat
mov
gs
js
fstl
push
sahf
das
out
test
jne
add
jno
cwtl
stc
inc
in
push
xchg
popf
xchg
imul
inc
loope
aaa
in
dec
mov
cmp
scas
gs
push
inc
out
mov
xor
mov
mov
loop
push
rcll
xchg
loope
xor
or
add
leave
push
fcompl
popf
dec
adc
stc
insl
sti
in
shrb
test
mov
js
sub
cmpl
mov
cli
dec
jne
fldl2e
cli
out
shl
lret
popa
mov
jge
sub
imul
inc
lds
sbb
rcrb
gs
sbb
loope
rorl
dec
pop
jnp
into
sarb
dec
les
xor
add
lods
das
jmp
std
out
cmp
cmc
dec
pop
sub
outsb
sbb
inc
push
or
mov
pop
xor
push
or
lods
adc
lea
inc
in
and
js
out
in
inc
sbb
fists
and
adc
cwtl
and
int
pop
push
rorl
subl
bound
jmp
repnz
aaa
mov
mov
jbe
dec
jb
sbb
mov
in
dec
adc
cmpsl
and
in
sbb
mov
daa
cmp
aas
imul
push
stos
aas
and
pop
movsl
inc
pop
mov
and
mov
adc
cmp
or
and
loop
aad
push
subb
std
inc
nop
mov
bound
xchg
push
cmp
push
cmp
outsb
sbb
inc
pushf
push
mov
push
lods
cmp
push
cmc
lcall
mov
and
push
filds
mov
sti
xlat
adc
pop
xchg
int
lods
mov
or
add
push
push
push
outsl
cmp
shlb
stos
or
add
lahf
mov
inc
cmp
lods
fidivrl
push
adc
bound
add
inc
out
insl
sub
loop
mov
arpl
sbbl
add
cwtl
fidivrs
mov
das
sbb
sub
pop
dec
or
inc
roll
aaa
icebp
mov
sti
push
add
sbb
das
jmp
push
jno
aad
lods
dec
repnz
jecxz
addr16
cmpsb
inc
mov
out
mov
or
icebp
mov
stos
jecxz
add
hlt
sub
icebp
adc
cwtl
sub
add
jmp
lahf
jl
fstps
inc
cmpsb
mov
xor
push
push
inc
xchg
test
or
inc
dec
leave
adc
jnp
rorl
adc
jo
cmpsb
dec
sbb
test
adc
addr16
pop
ret
mov
xchg
into
in
xchg
cmp
mov
mov
data16
adc
push
repnz
aam
in
ljmp
sbb
ja
adc
jg
out
sub
xor
std
fidivs
mov
inc
clc
dec
aas
and
push
cwtl
mov
inc
mov
int3
imul
mov
fs
int3
xchg
loope
inc
lret
out
xchg
cmc
rcrb
aad
aad
mov
lock
js
mov
repz
xchg
pop
adc
jg
mov
mov
add
shlb
add
and
fnsave
cmp
sbb
jne
out
int3
lds
ss
mov
mov
cltd
test
mov
iret
sub
cmpl
adc
cmp
dec
aaa
repnz
pmuludq
push
push
xchg
dec
popf
inc
push
mov
ret
rclb
in
nopl
jge
and
dec
popf
mov
and
jnp
adc
cmpsb
push
dec
inc
inc
fidivrl
inc
mov
sahf
fstpl
or
fistps
movsl
inc
shr
in
inc
sahf
mov
shrb
outsl
call
xchg
sbb
addr16
sbb
xchg
and
out
mov
call
and
adc
outsb
ljmp
sub
int
or
mov
lcall
and
aad
lds
and
add
push
push
mov
and
or
sbbl
sbb
mov
popa
add
add
or
or
jmp
pop
out
arpl
cmpsl
add
mov
adc
mov
add
dec
or
mov
sbb
xchg
cmpsl
sub
addr16
outsl
mov
fcompl
les
loop
insl
ficoms
mov
out
jg
xor
pusha
add
pop
mov
lahf
incl
aaa
sahf
sar
call
imul
mov
repz
xchg
jo
xor
into
and
xchg
out
and
inc
repz
aaa
rcll
in
mov
jp
popa
cwtl
daa
loop
shl
and
add
add
mov
pop
inc
test
lret
gs
test
es
shll
add
mov
into
pop
push
subl
push
mov
nop
or
mov
pop
sub
rorb
aaa
add
insb
pop
xchg
repnz
lcall
xor
mov
mov
lret
sbb
andl
cmp
push
fldl
hlt
aas
cmp
fwait
mov
insb
pop
rolb
std
rcrl
jmp
sub
mov
cmpsl
adcl
subl
cmp
icebp
fwait
movl
adc
fsts
ja
mov
jp
push
nop
rcrl
push
or
shlb
outsb
dec
sub
push
jne
leave
xchg
xor
jmp
ss
push
xchg
in
pop
imul
jmp
and
call
out
cmp
daa
dec
lods
jns
gs
xchg
aaa
mov
aas
rcll
adc
add
fildll
cmp
insb
in
pusha
xchg
mov
scas
stos
stos
out
test
inc
hlt
lods
out
mov
jle
cmp
hlt
popa
jno
mov
inc
ja
iret
stos
push
js
add
mov
jl
mov
pop
dec
lret
mov
lock
dec
pop
push
xchg
mov
fcmovb
shl
inc
mov
mov
xor
jle
aaa
aad
push
fsubr
loopne,pn
mov
push
or
jle
fmul
pusha
adc
aam
stc
mov
inc
clc
sub
test
lret
cli
inc
adc
pop
jl
mov
ljmp
and
imul
mov
mov
cwtl
js
push
test
pop
sub
or
mov
std
inc
add
pop
xor
xchg
movzwl
sti
clc
push
xchg
sub
inc
cmp
jbe
jno
xchg
repnz
mov
lcall
pop
jge
lret
je
dec
cmpsb
xchg
dec
mov
in
popa
out
loopne
pop
pop
sbb
hlt
loope
push
and
pusha
lds
adc
push
add
loope
dec
cmp
ds
shrb
fldenv
lret
pop
ret
mov
jecxz
adc
xchg
sbb
rclb
push
in
or
xlat
mov
lcall
xchg
sbb
ljmp
test
insl
enter
jnp
pushf
mov
movsb
cltd
mov
mov
scas
jp
ret
inc
scas
ret
dec
adc
das
jns
je
cmp
adc
inc
jo
sbb
test
sbb
mov
inc
xlat
inc
shll
xchg
mov
sbb
jns
push
hlt
loope
push
js
jnp
je
add
mov
mov
add
pop
add
pop
jne
mov
cmp
rolb
cmpsl
lods
jnp
cltd
fisttpl
jns
test
adcb
xor
adc
cmc
sbb
ds
sub
enter
sahf
pop
sub
cmp
mov
fstps
jns
dec
inc
jae
in
add
imul
and
xor
pop
push
mov
xchg
xchg
mov
test
inc
ret
push
pop
imul
add
xchg
dec
cmpb
dec
fwait
das
sbb
jb
pop
inc
xchg
cmp
xchg
mov
nop
mov
mov
and
xchg
pop
daa
jne
xor
adc
ljmp
insl
xor
mov
dec
push
jecxz
pop
push
and
mov
nop
pop
ds
push
imul
and
adc
inc
adc
adc
std
mov
rorb
das
and
mov
out
dec
sahf
scas
orl
push
cmp
and
xor
mov
lcall
xor
push
loopne
outsl
cli
faddl
shlb
cmp
jmp
xor
in
rorb
jg
push
and
imul
aad
cmp
data16
shlb
stos
xor
orl
push
adc
int
outsl
xlat
mov
add
lock
addr16
fcoms
push
mov
imul
pop
jmp
jp
out
mov
or
mov
lods
sbbb
ljmp
push
inc
and
notb
fiaddl
push
mov
cmp
or
movsl
test
xor
cmc
ret
pushf
sub
in
rcrl
movsb
add
loop
mov
add
xchg
pop
les
or
bound
xor
bound
xchg
lretw
lcall
dec
inc
mov
lea
inc
push
and
cmpsl
divb
repz
inc
mov
lahf
xor
iret
jbe
pushf
mov
mov
or
push
mov
lcall
inc
sbb
mov
stc
xor
movsb
inc
add
in
sub
add
cmp
fldl
arpl
dec
iret
or
pop
push
jp
das
data16
out
mov
dec
dec
sbb
ficompl
or
inc
xor
out
jbe
adc
xchg
aas
jae
and
rclb
mov
jo
mov
jl
dec
bound
testb
cmp
es
lret
xchg
push
push
pop
sahf
xor
and
pop
jo
sub
sub
xor
stos
dec
insb
adc
mov
int3
and
test
push
mov
jno
mov
dec
addr16
or
fcomp
sbb
data16
mov
push
dec
arpl
add
inc
mov
movsl
xor
push
into
movsl
int
inc
add
add
lea
fnsave
or
movsb
inc
popf
fwait
mov
and
or
push
mov
in
jmp
ret
stc
push
loop
orl
jae
mov
cmc
lock
jp
out
cmpsb
dec
mov
adc
clc
in
pop
scas
or
loope
ljmp
jg
sbb
into
popf
inc
xchg
mov
mov
dec
addps
cmpsl
je
je
inc
dec
sbb
test
xchg
xor
in
mov
mov
fdivl
mov
adc
rorl
cmp
in
jns
sbb
mov
mov
or
inc
lods
outsb
popa
loope
mov
jle
mov
sbb
push
xchg
in
sbb
or
sbb
gs
cmp
pusha
and
adc
or
shr
xor
lcall
push
sbb
sbb
or
cmp
push
push
mov
insl
fsubrs
xchg
repnz
jns
add
stos
add
xchg
push
popa
push
ljmp
mov
xchg
in
icebp
aam
adc
lea
movsl
mov
pop
sbb
push
movsl
mov
and
or
in
jg
mov
andb
insl
in
clc
jb
xchg
mov
jl
or
jecxz
mov
or
xor
aam
and
lret
mov
xchg
xor
dec
out
sbb
mov
sub
inc
or
loope
lret
sub
sub
push
mov
test
xor
rcll
pop
push
jge
pop
add
das
out
std
mov
jle
das
scas
pop
sub
lcall
sbb
orb
cmp
pop
xchg
jge
iret
fisttpll
loop
ret
pop
jne
lcall
pop
scas
ret
xchg
out
lods
sbb
imulb
in
jne
aam
aas
adc
mov
es
aad
cmpsb
add
add
movsb
mov
xchg
adc
stos
sub
imul
or
xor
test
aad
aaa
cli
mov
cmp
icebp
xchg
fldenv
pop
jmp
scas
popa
in
mov
inc
int
daa
and
jns
inc
push
sub
cmp
in
cmp
cmp
fnstcw
sub
and
andb
nop
cmp
lcall
repz
push
add
dec
and
mov
dec
ror
outsb
adc
pop
xchg
cwtl
push
xchg
icebp
hlt
mov
add
dec
test
daa
inc
lock
fcomps
mov
push
sbb
or
xlat
addr16
jg
adc
dec
fsubl
pop
jmp
fwait
test
out
jg
leave
jo
fnstcw
xchg
daa
dec
push
or
add
stos
lret
mov
xchg
mov
push
sub
pop
sbb
stc
xchg
jle
pop
xchg
sub
out
add
xlat
push
xor
fcompl
or
sub
or
xorb
iret
js
pop
test
rcr
orb
cmc
push
xor
std
pop
add
cmp
lret
shlb
orl
pop
jecxz
add
pop
jg
lret
lahf
inc
lods
mov
movsl
sti
int
dec
test
mov
sbbb
and
fcmovnu
das
sti
loop
out
mov
mov
mov
adc
mov
adc
bound
imul
cwtl
dec
xor
xorb
idivb
jbe
and
fwait
sub
jle
xor
pop
pop
aam
mov
icebp
mov
sub
mov
mov
xlat
or
push
adc
jmp
jo
xor
insl
mov
scas
das
out
outsb
cli
push
inc
outsl
icebp
sub
lock
xlat
outsb
fs
movsl
fdivs
pop
stc
lea
lds
push
iret
or
pop
fldenv
mov
enter
lods
jo
mov
mov
or
leave
push
sbb
xor
sbb
xor
pushf
mov
xlat
mov
push
addl
pop
jbe
in
into
fdivrs
movl
pop
ret
hlt
es
sbb
pop
fsubs
or
shlb
icebp
add
sub
xor
xor
mov
mov
mov
xor
jo
into
loop
iret
cmp
and
or
mov
add
icebp
jo
scas
lds
gs
push
mov
jnp
shl
data16
jne
inc
xor
mov
mov
push
mov
pop
cmp
out
fnsave
adc
test
popa
cmp
js
mov
test
cmp
sub
scas
mov
mov
push
add
xchg
jbe
add
mov
adc
pop
cmpb
jnp
cltd
jb
lcall
out
mov
xchg
repnz
mov
cld
test
enter
pop
setle
fwait
jge
mov
lcall
lods
xor
xchg
inc
pop
or
cmp
pop
add
xchg
xor
cwtl
in
andb
dec
in
or
idiv
test
aaa
pop
or
mov
inc
dec
push
xor
imul
push
sbb
xchg
push
aam
mov
shl
std
fbld
lahf
insb
jg
lds
mov
sarb
xor
xchg
test
outsb
jge
add
xchg
fldt
and
sbb
jge
jecxz
outsb
mov
and
sbb
xor
xchg
mov
jmp
sub
jmp
sbb
cmc
aaa
fisttps
fistl
mov
outsb
js
outsl
push
movsl
inc
iret
sbb
movsb
jecxz
inc
jb
mov
ds
inc
push
pop
inc
sbb
jb
sbb
dec
into
and
jecxz
jmp
inc
lahf
pushf
push
pop
adc
jne
mov
pop
xchg
pop
lock
es
or
add
dec
int
xchg
inc
xor
add
ficomps
adc
push
pop
cmpsb
fwait
fwait
mov
shrb
add
pop
inc
inc
outsb
cmpsb
rcl
mov
mov
xchg
aaa
jnp
or
cld
aad
add
mov
pop
xchg
in
push
sbb
jo
or
pop
mov
shrl
cwtl
dec
push
fsubr
mov
mov
push
loopne
sbb
aaa
jb
inc
out
xor
push
push
out
pop
pop
hlt
fdivrl
jne
dec
jnp
mov
jmp
jmp
cltd
adc
xchg
out
leave
push
dec
sbb
cmp
pop
push
push
mov
enter
add
jl
inc
adc
mov
into
gs
imul
adc
shl
das
lock
out
adc
pop
mov
aam
sub
xor
mov
fucomi
sbb
cmp
push
push
out
push
mov
std
mov
cltd
xor
push
mov
cltd
imulb
inc
push
mov
loope
inc
cmc
xor
mov
push
jnp
jg
adc
js
inc
inc
aad
push
mov
lret
pop
sbb
and
xor
jnp
and
rol
popf
dec
inc
ret
cld
or
inc
jae
orb
or
jb
adc
insb
xchg
shl
lret
ror
sub
sti
aaa
inc
add
cmp
ss
inc
jno
push
ret
mov
sub
cmp
pop
adc
xor
mov
bound
cmpsb
js
mov
mov
inc
cmp
cld
daa
jnp
jne
cmp
xor
jb
fistps
mov
sbb
mov
sub
out
pop
mov
push
mov
jbe
cmp
decl
pop
cmpsb
scas
lea
mov
outsb
xchg
lret
mov
sub
inc
push
sub
xlat
push
movsl
ret
xor
pop
scas
nop
shrl
sbb
mov
sub
ret
jp
jecxz
stos
cmpl
popl
jnp
popa
iret
pop
aas
dec
lahf
sub
adc
or
mov
or
sub
mov
orl
mov
subb
and
lahf
loop
or
movsl
lds
popf
mov
orb
addl
xchg
jl
scas
add
leave
fsubl
mov
mull
inc
cmp
xor
aam
jbe
repnz
cmpsb
fisubrs
rcr
aad
xor
mov
adc
pop
cmp
in
iret
leave
xchg
fiaddl
and
cld
and
push
push
pop
rolb
push
jo
lahf
mov
movsl
js
shlb
lahf
out
mov
jmp
outsb
ret
and
test
jno
loopne
sub
sub
nop
inc
test
or
dec
pop
test
mov
pop
inc
mov
sub
jno
mov
int3
int
fdivrp
push
mov
xor
sub
xlat
mov
sub
push
push
add
mov
fnstsw
nop
mov
ljmp
cwtl
lods
iret
addr16
sti
mov
out
in
dec
dec
sub
adc
or
cli
cmp
aam
xor
jecxz
int
testb
pop
and
push
xor
or
push
mov
and
lock
shlb
inc
xchg
xor
ret
and
jno
out
shll
iret
mov
jnp
inc
dec
loopw
xor
inc
jecxz
int3
or
movb
jmp
mov
ja
dec
and
inc
jno
sahf
and
shrl
adc
inc
dec
xorb
lock
das
movsb
out
jae
inc
jecxz
sub
ret
pop
negl
push
test
nop
push
push
jge
loopne
fsubrs
cmp
xor
movsl
push
push
nop
dec
push
das
sti
int3
test
cmp
and
stos
mov
inc
add
lret
pop
je
jp
andl
rcll
sbb
sub
cmp
leave
in
adc
push
cs
cmc
xor
ret
add
adc
jb
jb
cltd
and
jp
or
xor
and
cmpsb
mov
jmp
mov
inc
mov
rorb
nop
push
imul
adc
aam
dec
test
mul
int3
enter
or
jae
xor
sub
inc
popf
inc
or
push
dec
gs
add
mov
pusha
addb
stos
and
sub
jnp
popf
fldt
lahf
cmp
push
pop
dec
leave
clc
adc
bound
mov
pop
inc
scas
clc
push
ret
sbb
dec
add
mov
sbb
mov
or
test
xor
sbb
and
mov
dec
lods
mov
dec
rcl
je
ficoml
iret
ja
dec
mov
push
jmp
mov
dec
xchg
mov
pop
dec
xor
cmp
or
or
mov
sub
sub
das
jecxz
insl
addr16
repnz
mov
sbb
and
mov
mov
jp
inc
enter
sahf
mov
popa
iret
sbb
pop
jae
test
pop
add
jl
sbb
xchg
push
mov
cmp
rcll
xchg
dec
sub
cmpsl
cmpsl
push
sbb
mov
mov
imul
sub
adc
mov
dec
xor
and
or
inc
cmp
lds
xor
and
nop
es
push
add
pop
loopne
pushf
mov
pop
insl
jp
jb
shl
in
mov
insb
push
push
je
xor
shll
out
mov
mov
mov
and
cmp
daa
sub
ljmp
and
cltd
jne
cs
ds
inc
test
ficoms
lock
sbb
and
shr
pushl
clc
jb
iret
leave
out
repnz
je
psadbw
ljmp
add
jo
das
pushf
out
repz
pop
jo
or
push
jecxz
add
subl
jmp
pop
adc
lods
addr16
sub
das
cmp
xchg
sbb
pop
cmp
jno
faddl
push
scas
dec
sub
xor
mov
ficompl
repz
and
jbe
movsl
jmp
dec
lock
xor
xchg
arpl
adc
std
ss
in
leave
es
mov
sub
enter
cs
repz
push
ds
add
bound
inc
mov
stos
sti
lds
sbb
in
fldcw
out
xor
fmuls
mov
sub
cmp
daa
and
cmp
adc
adc
fdivs
lds
data16
or
xchg
imul
inc
adc
in
and
xchg
popf
int3
fisubs
out
pop
or
insb
pop
mov
pushf
gs
fisttpll
outsb
clc
cltd
fisubl
adc
push
fidivs
in
sub
dec
jae
jmp
fistpl
inc
es
mov
add
fstpl
cwtl
popa
ljmp
fisubrs
aam
ljmp
gs
or
incb
cli
pop
cmpsl
mov
enter
icebp
jge
cld
push
fdivr
or
mov
add
out
aad
test
xchg
pop
cli
in
add
test
jle
in
push
clc
push
xchg
adc
mov
xor
sbb
ja
repz
icebp
xchg
pop
push
jbe
ss
int
ljmp
and
adc
dec
pop
lock
push
mov
and
jbe
cmp
mov
push
les
push
repz
fldcw
lods
jnp
daa
jle
fwait
mov
ljmp
push
rcr
pop
sti
js
mov
push
cmp
adc
lods
shrl
rcrb
jbe
pop
dec
es
sub
dec
std
adcb
stos
sarb
push
mov
stc
ds
jp
test
mov
xchg
push
push
inc
mov
and
jmp
sub
push
sub
imull
xchg
mov
xor
stos
fs
xor
jmp
jae
ret
jb
lea
jnp
ds
jge
je
jmp
ja
fistpl
or
adc
mov
fildl
pop
lcall
sbb
push
xchg
sbb
jbe
outsl
insl
and
bswap
xchg
mov
pop
pushf
jp
idiv
insb
xor
jge
mov
fstpl
xchg
test
add
popa
mov
cmp
les
fbld
adc
sbb
push
inc
repnz
mov
and
mov
leave
cmp
xchg
fwait
or
push
push
mov
cmpsb
mov
cli
push
push
jnp
lret
call
or
pusha
and
lcall
sti
in
cli
adc
and
call
or
lods
xchg
imul
insl
xlat
or
in
sub
mov
fs
sbb
sbb
scas
bound
sbb
fs
xchg
mov
jne
mov
cmc
sub
cmp
add
push
mov
nop
mov
imul
push
rclb
daa
adcb
aas
movsl
and
jge
xchg
cmpsb
shlb
addr16
jb
jns
push
dec
fidivs
aad
dec
jnp
xchg
fidivl
popf
adc
std
xchg
pop
sahf
pop
lret
xor
pop
jnp
inc
in
movsb
pop
mov
mov
xorl
cmpsl
ds
pop
cltd
icebp
cmpb
insb
xchg
clc
pop
mov
bound
cmp
push
jecxz
jo
fsubs
addl
pop
inc
mov
fwait
push
jbe
imul
lret
dec
mov
xlat
mov
jns
sub
push
jbe
jp
cmp
adc
mov
cmp
hlt
cmp
out
add
dec
fldcw
xlat
movsl
out
mov
sbb
mov
ja
mov
jns
test
sub
lret
pop
fld
dec
sbb
mov
out
xchg
xor
hlt
mov
mov
aas
mov
ss
mov
fwait
xchg
or
scas
nop
mov
pop
jp
xchg
rcrl
pop
and
mov
mov
repnz
push
out
pushf
xor
lods
ss
aad
dec
push
je
jmp
jb
sub
cltd
xchg
mov
sarb
sbb
insb
xlat
test
mov
not
dec
or
cmp
cld
test
push
cmp
jge
cmpl
leave
xchg
adcb
mov
stos
into
mov
repnz
jecxz
insl
shrb
movsb
dec
cmp
xchg
inc
pop
xchg
shrl
loop
rcll
cmc
adc
cltd
sub
in
test
dec
shr
push
dec
mov
loopne
jbe
xor
in
sub
pop
cld
cmp
in
movsb
jl
pop
push
aam
insb
loop
outsl
fsubr
out
shll
sahf
mov
ret
repz
lcall
mulb
repz
fstps
inc
sub
cwtl
fchs
popf
shrb
adc
pop
scas
dec
out
add
dec
ja
mov
rcll
icebp
adc
and
mov
das
hlt
mov
and
pop
icebp
jns
loopne
insl
mov
sub
push
inc
pop
inc
sbb
xchg
popf
insl
and
pop
xlat
mov
add
in
pop
xchg
mov
cmp
dec
outsb
mov
sub
and
rcrb
mov
shll
sbb
scas
mov
outsb
fs
dec
or
fsubl
adc
xor
shll
arpl
je
and
aas
and
or
cmpsl
sbb
add
or
cmpsb
adc
int
nop
push
add
sub
lret
rorl
push
adc
dec
mov
pop
mov
dec
and
push
cmp
push
clc
rolb
push
mov
sub
addb
mov
sbbl
and
cmp
inc
dec
adc
push
inc
or
push
popa
mov
inc
pushf
stos
cmp
testl
mov
fsubs
and
add
sub
mov
cmp
inc
cmp
xlat
js
lods
ss
xor
icebp
xor
outsl
dec
cmpsl
xchg
xchg
imul
lea
mov
lret
dec
dec
jl
in
out
aas
cmp
sbb
sub
popf
negb
cmp
enter
hlt
adc
adc
sub
push
gs
lock
dec
lods
and
adc
xlat
add
ja
das
cmp
pop
mov
xchg
loope
jnp
shl
sahf
jns
add
or
outsb
xchg
pop
sti
and
mov
mov
pop
mov
xchg
jb
insb
loope
push
sbb
into
jae
add
push
ss
jp
xchg
cmpsl
and
into
jbe
xchg
jb
das
fmulp
inc
pop
sbb
dec
orl
mov
shlb
pop
out
mov
xor
push
les
xchg
into
or
imul
cmc
les
aaa
loope
xlat
aam
cmp
pushf
pop
jae
mov
cmp
in
arpl
adc
sbb
fwait
cltd
cmpsl
iret
dec
adc
out
sub
cs
push
pop
sub
xchg
cs
and
xor
loopne
sub
je
cmp
sbb
and
ret
ja
xor
xor
inc
xor
xlat
mov
and
stos
movsl
testb
and
jmp
dec
mov
movsb
pop
hlt
inc
popa
and
or
push
push
mov
push
icebp
ljmp
mov
fildll
mov
push
out
push
and
loopne
insb
std
inc
ds
push
cltd
clc
adc
lods
data16
outsb
mov
test
xchg
popf
scas
ja
dec
fstps
xchg
fbld
lods
out
mov
push
xchg
leave
in
xor
xchg
shll
in
sti
jnp
cmpsb
ret
fcmovnu
pop
xchg
ljmp
adc
dec
data16
mov
les
test
es
mov
fsubrl
jo
rcrl
push
mov
inc
dec
adc
ficompl
int3
outsb
fbld
xor
adc
or
xchg
sbb
les
xchg
mov
jmp
dec
mov
movsl
mov
cld
lock
cwtl
xlat
xor
push
addl
insb
test
int
push
ret
sbb
inc
aas
test
rcrl
shr
mov
adc
adc
xor
cmpsl
add
dec
pushf
pop
daa
sahf
pop
lea
cmp
mov
shll
push
cmpsl
shl
and
mov
mov
mov
test
adc
lods
mov
js
xchg
inc
arpl
inc
mov
pop
jl
dec
dec
xor
cmpsl
lahf
mov
jno
imul
fidivrl
or
insb
push
shl
out
mov
sbb
xor
shlb
es
mov
sub
push
jmp
cmc
dec
lds
jo
jns
mov
xchg
lock
pushf
enter
lret
push
dec
popl
jnp
sub
xchg
and
fidivs
lods
jmp
dec
scas
jp
js
jmp
les
push
add
dec
hlt
mov
mov
loope
mov
es
or
fstl
jmp
stos
xor
nop
mov
mov
jp
out
xchg
outsl
sahf
test
push
test
xor
jle
cmp
jnp
jo
xor
pop
ret
pop
adc
jmp
sub
xchg
iret
lods
or
imul
adc
jne
mov
insl
xchg
mov
add
andl
cli
out
inc
fistpl
fsubrp
xchg
xor
mov
orl
inc
xchg
imul
jnp
pop
les
add
sub
push
mov
lcall
aas
shr
xchg
xchg
call
ret
andb
arpl
jo
clc
jle
jne
inc
cmpsl
add
jb
inc
insl
pop
cmp
loopne
mov
jns
xchg
adc
pushw
outsl
sbb
cld
addb
dec
cmp
int3
ret
push
hlt
std
bound
mov
popf
add
push
push
pop
lods
movsb
fs
hlt
cli
cltd
shlb
mov
sbb
aaa
sub
push
test
das
xchg
xorb
fwait
mov
nop
scas
outsb
scas
push
and
jbe
std
mov
push
jl
or
int
add
pushf
out
movsb
lcall
pop
cli
jo
jecxz
push
cmp
push
std
adc
fsubr
sbb
leave
lods
jmp
in
jg
repnz
mov
call
fsubrs
into
inc
push
mov
scas
push
or
cmc
scas
cmpsl
push
in
lods
cmp
or
dec
mov
lods
fimuls
jb
mov
mov
mov
push
loope
sub
jg
jae
jge
je
in
jp
mov
popf
or
jae
jae
in
je
iret
sub
mov
cmp
lock
call
je
mov
adc
movb
cmp
cmpsl
movsb
das
or
pop
xor
adc
bnd
adc
lret
pusha
cmp
pushf
lcall
pop
xchg
scas
cmpl
jp
push
mov
stc
mov
jns
xchg
test
dec
cltd
cmc
pop
pop
sub
pushf
aad
sbb
dec
test
mov
sbb
dec
out
stos
shrb
pusha
push
or
inc
fmuls
daa
pushf
jl
cmpsb
mov
jne
pop
mov
out
mov
arpl
push
movsb
popa
push
lahf
push
adc
cmp
pop
fbld
xor
cld
or
js
adc
stos
mov
mov
jb
jbe
sub
push
lds
and
nop
loop
dec
out
cld
and
outsb
leave
add
clc
fstps
cwtl
dec
pop
jp
pop
daa
push
jl
shll
ss
mov
sbb
outsl
xor
loop
pop
sbb
and
push
jae
lcall
lret
mov
or
push
add
jo,pn
mov
dec
std
lcall
inc
pop
lret
xor
push
xchg
outsl
fildll
call
cmpsb
hlt
scas
xorl
mov
out
inc
rcrl
outsl
cmp
push
or
cs
or
inc
or
shlb
cli
or
repz
outsl
or
sub
pop
sub
cmp
test
xchg
cmp
in
mov
and
clc
pop
nop
sbb
in
pop
lods
push
insl
cmp
add
jbe
sub
dec
fimuls
in
pushf
bound
mov
outsl
xchg
sar
es
das
adc
js
clc
aaa
fsts
out
aaa
mov
lock
lock
lret
jl
test
aad
lock
loopne
imul
mov
cmc
stc
inc
mov
and
notb
add
mov
lahf
mov
add
fnstcw
or
and
fdivrp
jbe
jnp
call
and
test
js
test
shrl
cmp
fnstcw
dec
xchg
imul
add
mov
imul
pusha
movsl
cmp
cmp
pop
xor
lahf
sbb
iret
adc
jo
inc
add
xchg
sub
aam
sub
lock
xchg
pusha
es
loopne
je
cs
stc
outsb
aaa
xchg
jge
adc
arpl
pop
repnz
dec
in
decl
sbb
inc
nop
mov
lods
adc
pop
mov
sahf
mov
xchg
adc
stos
es
rep
jb
lds
mov
or
idiv
pop
hlt
lods
cmp
pop
pop
adc
imul
enter
das
lds
loope
mov
filds
sub
out
xchg
dec
adc
sub
loop
jo
add
stc
xchg
mov
int3
jnp
out
xchg
push
jg
push
and
mov
lahf
cmpsl
icebp
jl
test
lret
cmp
lods
or
cmp
pusha
cmpsl
push
xchg
ror
das
or
push
std
mov
sbb
subb
mov
shll
adc
inc
sub
sbb
popf
shl
mov
minps
cmp
pop
sbb
cmpsl
rcr
cwtl
push
lods
cmp
popa
jnp
push
subb
or
ss
xlat
stc
in
or
xchg
inc
fs
lods
mov
inc
jae
je
fnsave
inc
sbb
push
and
ret
push
scas
repnz
xchg
out
scas
mov
adc
rolb
stos
mov
mov
adc
out
ds
jns
xor
jecxz
fsubl
pop
mov
aad
call
ds
add
dec
xlat
cli
sub
lret
ja
ss
mov
outsl
fmuls
int3
sbb
in
inc
inc
aaa
fs
sbb
sub
inc
fwait
mov
xor
push
aaa
ret
jmp
test
pop
xchg
inc
xchg
mov
lret
insl
push
fyl2x
jg
pop
and
jmp
sub
loopne
sbb
jecxz
fnstsw
sbb
rolb
loope
sbb
aaa
xchg
das
and
shlb
fildl
xchg
mov
pop
jmp
clc
stos
jbe
push
stos
pop
clc
push
movsl
add
int
lret
pop
ss
scas
pop
les
sahf
jne
cmc
gs
xchg
push
xor
sbb
mov
inc
xchg
fidivl
adc
sub
lcall
int3
push
and
xchg
test
dec
inc
out
add
inc
xchg
sbb
insb
mov
jl
in
sub
mov
ret
dec
test
mov
es
mov
subl
jg
ret
hlt
ja
lea
sbb
insl
xchg
pop
and
xchg
xlat
sbb
cmc
lcall
pop
hlt
mov
xor
cmp
jg
inc
mov
mov
xchg
nop
fnstsw
dec
imul
es
xor
inc
dec
dec
push
fwait
in
add
orb
push
jl
jle
ret
xchg
dec
repnz
mov
mov
ret
data16
push
lret
mull
cmpsb
pop
outsb
mov
shr
inc
stc
and
or
sti
or
movsl
mov
push
mov
push
adc
test
orb
jne
mov
xchg
ret
enter
lock
lea
or
test
incb
mov
imul
sbb
insl
sbb
push
and
fildll
mov
enter
adc
lock
movsl
aaa
or
fcmovnbe
inc
arpl
test
dec
lds
shr
test
aas
jle
jmp
push
hlt
jmp
cmp
bound
movsl
lods
jae
cmp
mov
fidivs
lods
je
sub
sahf
xchg
xchg
ljmp
push
in
int3
fwait
sub
cltd
or
mov
cli
cmp
ds
mov
repnz
popa
cmpsb
pop
and
daa
mov
mov
push
stos
mov
mov
fucom
icebp
sub
lcall
lahf
fstl
mov
ficoms
dec
movsb
int3
adc
scas
cmpsl
imul
daa
pop
xor
sub
pop
mov
out
jae
pop
iret
int3
nop
std
jmp
fadd
iret
mov
in
imul
rol
test
jb
jp
cwtl
sarb
outsb
or
sahf
scas
les
out
ror
fisubrl
lods
adc
fildll
div
jae
bound
dec
add
enter
mov
add
jecxz
pop
push
je
cwtl
outsb
adc
mov
mov
repnz
fs
xor
movsb
or
sbb
cmp
jae
cmp
icebp
mov
push
xchg
cmpsb
jge
sub
sti
in
pushf
sbb
inc
popl
cs
mov
sahf
jno
stos
pop
lods
xchg
cwtl
lock
push
inc
repz
lret
sarl
jb
lods
popa
or
add
xor
mov
mov
outsl
fdivrs
jo
cmp
and
mov
lods
les
adc
in
push
pop
dec
mov
pusha
das
fwait
adc
push
xchg
ja
and
mov
add
push
push
mov
pop
mov
pushf
icebp
fnstcw
ss
test
movsb
adc
push
mov
call
icebp
leave
iret
sti
into
es
inc
inc
adc
or
lods
add
cmp
jnp
ret
daa
cs
xor
out
aas
cmp
fsubrl
mov
push
addb
movsl
xor
clc
or
sub
int
push
rcll
shrb
fsubrl
mov
sti
push
adc
loope
call
adc
nop
adcb
das
push
in
iret
dec
stc
pop
out
cld
cmp
jmp
cli
addr16
fcmovbe
mov
pop
cmpsl
and
inc
rclb
jmp
xorb
dec
adcb
popa
mov
bound
mov
das
cmpsb
cmp
jno
ror
and
mov
in
repz
push
jbe
xor
mov
jge
mov
out
adc
cmp
and
xchg
pushl
ret
xor
ja
push
sbb
shl
pop
mov
push
jnp
add
or
sbb
pop
sbb
std
or
mov
pop
inc
js
outsb
xor
inc
mov
scas
insb
std
mov
dec
inc
adc
push
aas
and
mov
adc
pop
xchg
inc
adc
aaa
adc
and
sub
movsl
nop
push
mov
out
mov
movsl
xor
mov
sbb
lcall
fldenv
lds
pop
frstor
sbb
mov
sub
imul
jmp
ret
jbe,pn
sahf
mov
or
pop
aaa
cmp
sub
dec
fwait
sub
es
arpl
mov
and
inc
ds
cld
mov
push
xchg
mov
cmp
xor
fdivrp
adc
push
push
popf
inc
mov
ljmp
fsubrs
jmp
bound
push
movsl
dec
inc
push
sbbl
jb
pop
inc
cmp
jo
or
xchg
cmpsl
cwtl
aad
sti
xchg
les
push
xchg
je
cwtl
es
lret
iret
mov
jno
movsb
push
jmp
pop
pop
mov
mov
push
bound
pop
stos
sbb
inc
ret
xlat
div
mov
mov
push
cmp
push
into
imul
mov
leave
adc
or
push
mov
mov
or
aas
into
addr16
and
jl
xor
lahf
jge
or
cli
insb
mov
hlt
stc
loop
adc
xchg
mov
testl
pop
ljmp
out
popf
mov
addb
std
mov
inc
mov
or
pushf
andl
dec
xchg
add
addr16
insl
sbb
push
popf
dec
int3
jp
dec
dec
pop
inc
pop
int
in
adc
daa
insl
and
cmp
pop
pop
sbb
pop
lea
mov
sti
dec
rorb
mov
mov
add
shlb
enter
je
ret
adc
or
aaa
mov
lcall
into
mov
inc
adc
push
repz
mov
imulb
dec
lret
jecxz
test
add
and
cmovp
out
jo
jl
pop
mov
push
dec
ljmp
add
inc
dec
sub
ss
mov
loopne
jle
add
in
adc
addl
daa
cmp
movb
push
out
cmp
push
xor
sub
push
mov
push
jecxz
outsl
into
fs
mov
test
push
add
jg
insl
into
outsl
jge
aam
add
xchg
sub
push
cmpsb
iret
sbb
mov
insb
inc
and
insb
fsub
into
add
and
dec
pop
pop
lods
push
dec
in
mov
ret
xor
mov
and
pop
and
int3
mov
add
cmc
arpl
add
sub
jg
mov
mov
js
jge
arpl
xor
push
push
inc
pushf
mov
pop
xor
jecxz
inc
push
add
inc
push
lcall
adc
mov
dec
and
mov
cld
pop
xor
or
add
call
gs
pop
mov
out
insb
ljmp
or
ja
ret
add
mov
jne
into
mov
das
add
imul
xor
add
enter
lea
andl
jno
push
aad
add
pop
mul
xor
insb
push
push
clc
jne
xchg
popf
loop
add
pop
pusha
sbbl
mov
inc
sub
inc
xor
pop
adc
fwait
lret
mov
jle
imul
sbb
aaa
jns
lret
and
mov
cmpsl
xor
outsl
roll
arpl
data16
loopne
rcrl
mov
mov
out
mov
rcr
cmp
xchg
mov
adc
lods
pop
sub
dec
push
ja
mov
push
lret
inc
mov
leave
add
imul
iret
xchg
fnstcw
push
inc
add
ficompl
insl
movsl
jle
mov
decl
cmp
mov
xor
arpl
pop
movsl
mov
mov
cld
xchg
fmull
inc
aas
cmc
aad
fildl
push
xor
ljmp
pop
mov
inc
data16
fwait
js
sahf
jo
addb
ret
xor
imul
pop
jb
adc
mov
cwtl
aad
push
or
daa
aad
mov
xchg
add
sbb
mov
add
cltd
sub
sub
fmull
movsb
adc
loope
inc
jmp
xor
jecxz
test
sbb
jo
jge
push
repz
push
push
pop
gs
arpl
mov
movsb
inc
xlat
andl
cld
push
mov
addl
xor
loopne
lods
sub
mov
fwait
or
lret
xchg
pop
rcrb
daa
jg
xchg
push
inc
dec
lea
sbb
mov
mov
mov
clc
clc
sbb
cs
dec
aam
mov
sarb
push
xor
nop
loopne
pop
xchg
lret
or
int
sahf
fwait
lea
pop
cli
fdivs
outsl
push
iret
popa
xchg
xchg
cmp
jge
gs
and
es
rol
xlat
cmp
js
fwait
and
cltd
sbb
and
push
xor
pop
pusha
sbb
mov
xorb
and
shr
pop
cmp
outsb
popa
mov
or
pop
jecxz
incb
push
sub
loop
pop
dec
xchg
fldenv
mov
fistps
aad
inc
sub
jg
div
add
push
sbb
inc
cmp
lods
stos
push
mov
cli
sub
add
lock
sti
xlat
or
or
ret
mov
or
xor
or
lds
loope
cmpsb
mov
lods
jne
dec
push
jp
sbb
fwait
push
sar
insb
lea
jbe
cwtl
sbb
and
push
cmp
pop
xchg
cmp
loop
dec
ret
or
sbb
div
xchg
pop
or
ljmp
jmp
sbb
fs
ret
arpl
popa
sub
mov
jo
out
test
mov
sbb
push
test
or
xchg
icebp
add
outsl
faddp
cld
jnp
repnz
sbb
xchg
cmp
data16
cmove
bt
adc
lock
sbb
cld
push
ret
subb
movsb
xor
push
sbb
dec
or
xor
inc
gs
jl
lods
mov
jg
pop
lahf
xchg
adcl
xchg
pop
les
cmc
inc
pop
enter
mov
fsubrl
pushl
pop
pop
in
mov
js
lahf
dec
shll
jmp
repz
sbb
nop
push
jg
sbb
jp
call
rolb
xchg
sub
imul
test
ret
mov
addl
xchg
insl
fldenv
push
pop
pusha
push
lcall
loop
mov
lods
cwtl
jmp
shrb
mov
dec
push
pop
dec
or
jl
cltd
adc
in
repz
sti
jo
push
xchg
jmp
int3
out
scas
xor
repz
sbb
insl
outsb
shl
les
inc
gs
jmp
inc
or
push
inc
ud1
in
jmp
mov
xlat
add
xlat
and
pop
push
test
pop
jmp
aaa
repnz
lock
in
push
std
sub
sbb
js
push
jo
into
cmpsl
mov
call
lods
xchg
xlat
jg
pop
sub
inc
out
mov
push
mov
cmp
aas
pop
scas
and
andl
inc
out
les
shll
test
jge
mov
adc
repz
and
iret
sbb
xor
push
mull
lcall
aas
das
pop
mov
mov
push
inc
xchg
mov
ret
addb
test
lds
inc
mov
add
sub
dec
ss
std
in
out
sub
test
gs
push
mov
insl
fists
iret
jb
leave
mov
cmp
enter
orb
pusha
xor
dec
jle
pusha
aas
lret
bound
lret
mov
jo
stos
lea
cli
sbb
push
pop
test
loope
int
icebp
pusha
aaa
fistl
mov
mov
push
dec
dec
mov
add
mov
mov
lea
cli
cmp
push
out
sub
rolb
call
and
into
andps
inc
and
dec
push
jge
pusha
fsts
adc
lahf
inc
adc
add
jno
ficoml
es
pop
hlt
pushf
ficoms
sub
cmp
pop
add
popf
add
xor
xchg
inc
test
mov
mov
xor
pop
or
popa
mov
je
stc
inc
xchg
stos
or
cmpsl
push
sbb
popa
add
adc
and
push
imul
enter
ss
mov
cmp
scas
into
and
das
fimuls
mov
stos
and
loopne
loopne
inc
mov
in
leave
or
insb
ss
stc
pushl
and
xchg
sbb
sbb
cmp
xor
mov
mov
lret
neg
ror
cltd
rcrl
pusha
scas
pop
test
std
test
mov
and
scas
aam
scas
sarb
adc
test
cmp
xchg
xor
es
sub
cmp
into
lea
out
jl
xor
dec
int3
sbb
arpl
push
adc
jbe
js
stos
xor
mov
addr16
cmpsl
int3
cmpsb
gs
aad
xlat
pop
jno
shl
sub
mov
xchg
imul
xchg
popf
fisubs
lcall
fwait
jb
sbb
scas
shrl
xchg
adc
push
xor
int
jp
sub
dec
jbe
mov
pop
or
cmp
mov
mov
insb
in
mov
cmp
lods
movsb
movsb
pop
scas
jo
sub
hlt
lds
xor
jbe
inc
and
cmpsl
xchg
or
push
cmp
adcl
orb
xor
stos
sbb
addl
daa
adc
outsl
add
fprem
or
movsb
add
pop
je
mov
loopne
dec
xor
cs
sbb
in
adc
pusha
bound
xchg
jg
mov
test
popa
pop
jo
adc
jge
fs
frstor
xor
jmp
push
aam
rorl
add
or
pop
add
out
lret
in
stos
outsl
sbb
jmp
inc
ja
adcb
dec
fcoml
lret
daa
aas
pop
add
mov
adc
dec
adc
jbe
ss
bound
mov
xor
lcall
jns
cmp
faddl
sbb
xchg
jnp
jl
and
pushf
mov
mov
insb
je
lret
sarl
push
push
loop
dec
test
hlt
jno
out
loope
inc
es
repz
push
jb
int3
add
sub
lcall
cmpsl
mov
cmpl
bound
fcom
inc
jge
imul
dec
push
movsb
mov
push
push
jns
cmpl
add
jb
leave
call
into
icebp
cmp
add
xor
rcrb
mov
inc
mov
mov
or
rcrb
add
arpl
or
pop
out
dec
cmp
ljmp
loop
loopne
mov
dec
mov
jle
cld
sbb
push
lea
call
or
xchg
mov
cmp
sbb
xchg
nop
and
sub
sbb
pop
cwtl
popf
mov
sarl
add
addr16
and
stos
imulb
cltd
push
mov
xchg
add
mov
push
loopne
mov
repnz
mov
cs
sub
es
mov
dec
out
bound
lea
inc
mov
push
mov
lret
aaa
into
inc
pop
popl
cld
in
rsm
bound
jmp
mov
rol
pop
pusha
push
in
or
sub
jb
clc
les
insl
hlt
and
cmp
dec
int3
mov
cmp
stc
ret
fdivrs
mov
in
cli
test
repnz
rcll
sbb
cmp
inc
inc
faddp
xor
cmpsb
dec
mov
popf
addr16
lea
mov
ljmp
stos
ja
sbb
jne
xchg
std
xor
lods
inc
xchg
or
mov
ret
inc
fidivs
lods
push
mov
btr
jnp
orb
pop
ret
test
sahf
test
ficomps
jnp
cmp
jecxz
bound
fcomps
mov
xchg
test
sub
mov
dec
pop
cmp
sub
push
mov
lds
ret
cmp
add
xor
push
insb
cmp
and
out
jge
xchg
xor
pop
sub
and
and
imul
jne
in
sub
pop
les
test
nop
add
sahf
leave
lcall
inc
or
out
push
fldt
pop
xchg
clc
fstpt
aaa
mov
lahf
jmp
push
daa
adc
dec
dec
xor
jne
push
pop
or
std
lret
out
sbb
lock
dec
cmp
adcl
lcall
adc
lret
subb
and
test
xor
int3
inc
sbb
xchg
int
mov
shlb
cmp
aas
cld
loope
nop
push
out
inc
inc
ror
daa
test
push
lds
xor
gs
pop
xor
sahf
jg
addr16
mov
rorb
imul
outsb
xlat
icebp
xchg
test
dec
or
lret
mov
push
add
push
jno
test
jle
sbb
xor
mov
clc
repnz
pop
mov
dec
adc
xchg
sub
cmp
aaa
dec
inc
out
xchg
mov
lret
sbb
cwtl
cmpsb
mov
sahf
jg
mov
xchg
dec
dec
and
and
sbb
jmp
push
mov
and
addr16
mov
xlat
push
pop
pop
cmpsl
movsl
xchg
jge
xchg
jbe
xchg
loope
and
xchg
enter
jbe
jge
jo
int
adc
cltd
fldl
int3
out
push
add
add
push
fmull
or
jl
pop
adc
sub
incl
push
add
hlt
stos
jne
aad
es
popa
or
mov
aas
sbb
xor
cli
jne
jp
mov
inc
mov
inc
popf
mov
sti
in
dec
shlb
dec
dec
or
push
pop
loope
iret
bound
pop
mov
lods
fsubrs
and
cmpsl
sub
dec
sub
aam
mov
jae
jno
add
loop
dec
push
jns
xchg
stc
and
dec
xchg
loopne
int3
adc
scas
sbb
adc
xchg
mov
sti
and
sbb
jb
gs
mov
pop
jb
sub
mov
jge
repnz
push
leave
std
or
popa
fcomps
gs
lcall
imul
pop
pusha
mov
push
ret
in
mov
add
insl
xor
sbb
arpl
jb
jno
ja
daa
sbb
push
xchg
mov
mov
aam
cld
ret
pop
mov
jns
in
gs
lds
sbb
mov
sbb
dec
in
cmp
xchg
out
push
xlat
xor
les
sahf
data16
loop
mov
call
push
insb
mov
shrl
pop
mov
mov
arpl
or
dec
xchg
add
inc
mov
subl
adc
aad
sahf
xlat
jne
jecxz
mov
jge
pop
popf
lret
adc
mov
mov
enter
xlat
fisttpll
jne
lds
jnp
cld
out
loope
aas
pop
rorl
decb
inc
outsl
lcall
pop
mov
xchg
add
pop
das
js
fists
inc
fwait
pop
cmovp
mov
dec
and
fdivrs
ds
fmuls
or
cwtl
stc
dec
lcall
jnp
inc
add
jb
mov
and
mov
mov
push
or
mov
jle
or
mov
cmp
push
arpl
lods
cmp
scas
fsubs
xor
and
adc
jge
push
or
sub
sub
pushf
xchg
inc
je
xor
icebp
mov
mov
mov
xchg
dec
shr
add
push
int
lds
das
loope
and
movl
pop
fnstsw
mov
sub
ret
mov
js
test
int3
fisubs
insl
and
xchg
and
andb
lock
clc
jecxz
mov
mov
popf
xor
adc
in
iret
es
lock
in
jle
loope
jp
dec
insb
sbb
jbe
pop
pop
jno
dec
push
aas
xchg
push
ja
decb
rclb
mov
dec
jmp
aas
ret
inc
cmp
repz
scas
jae
scas
or
push
lret
pop
inc
pop
out
repz
sbb
add
adc
lods
push
lahf
les
outsb
add
add
sbb
mov
jns
jecxz
sbb
dec
imul
jg
test
cmc
add
cmpsl
push
fsubl
adc
and
aaa
mov
jb
fidivs
aaa
xchg
sub
repz
and
sbb
push
jg
scas
ljmp
mov
mov
out
pop
or
jge
pop
test
sbb
mov
push
into
mov
inc
xor
sub
sbb
icebp
ds
and
xchg
insb
or
and
jmp
mov
dec
or
int3
push
dec
in
cwtl
rcrb
lahf
mov
jmp
inc
or
mov
test
outsb
shl
xchg
and
mov
add
mov
iret
or
enter
sarb
pop
cmp
cmovg
mov
shl
ja
in
and
mov
ret
addr16
fwait
jge
inc
fcmovnu
xlat
push
jmp
sbb
test
mov
popf
push
sbb
push
adcb
test
int3
jne
popa
and
adc
xor
mov
test
xor
lret
in
pop
cmp
push
and
push
repnz
scas
in
jne
adc
jo
addr16
push
iret
and
fsubrl
adc
mov
lock
jge
sub
in
call
dec
aaa
cs
xor
cld
pop
adc
mov
xor
jne
test
fwait
push
cmp
in
mov
dec
lret
push
pop
es
and
push
push
xchg
push
dec
ret
xor
sub
jmp
fiadds
fsubs
sahf
xor
shl
jmp
sbbl
xor
adc
pushf
adc
sti
cli
fcomps
repz
pushf
sbb
cld
sarl
jmp
imul
out
inc
nop
jg
xchg
or
sub
adc
mov
or
inc
xor
and
cmp
movsb
sbb
adc
adc
xor
aas
dec
inc
dec
stos
xchg
arpl
mov
pop
push
add
lret
repnz
sub
or
and
stos
popf
movsb
std
loop
pop
sub
in
dec
enter
jecxz
lahf
adc
imul
insl
cmp
and
pop
pop
mov
cmp
ret
out
sahf
imul
sahf
and
sahf
dec
dec
jbe
sarb
sbb
push
lock
mov
les
call
int3
mov
mov
enter
pop
dec
mov
lea
fistpl
cmp
cmp
ljmp
dec
test
add
arpl
repnz
cmp
lock
mov
into
popf
cmc
cmc
cmp
mov
or
pop
xchg
ret
sbb
sub
int
xchg
loop
test
add
sub
and
lods
dec
mov
add
sub
lock
js
inc
pop
roll
push
mov
mov
ret
jle
leave
inc
cmpl
clc
frstor
add
repnz
adc
push
outsb
jecxz
lahf
lock
sar
ficoms
sahf
js
mov
insl
fwait
fwait
aam
mov
pop
mov
gs
shrl
push
jecxz
add
lret
inc
shrb
mov
sub
xor
sub
add
gs
xor
in
movsl
stos
or
and
jns
unpckhps
xchg
pop
sub
test
inc
or
mov
movntps
cld
loop
jge
outsl
ds
pop
add
mov
fs
ret
jne
push
xchg
adc
pop
or
mov
cmp
jbe
loop
lret
mov
aam
mov
sub
cmc
outsb
push
cmp
mov
xchg
pop
clc
add
cs
xchg
push
test
adc
sbb
cmpsb
xor
outsb
dec
sub
in
xchg
dec
loop
inc
cmp
or
or
push
mov
daa
mov
mov
inc
fisubrs
js
test
adc
xchg
stc
xchg
inc
cmp
cmc
lods
rdpmc
mov
push
mov
cmp
cmp
call
inc
movsb
call
aas
lret
jns
dec
inc
sub
sbb
inc
ficoml
daa
jmp
inc
fnstcw
pop
ss
fsubrl
jl
push
dec
mov
or
jbe
lcall
sub
sbb
cmc
lock
pushf
push
cli
dec
xor
hlt
pop
mov
mov
jl
jg
and
jns
mov
dec
popf
lds
xchg
pop
cli
xorb
rcll
test
jp
dec
sub
bound
add
and
mov
pop
pop
or
sbb
cs
in
mov
out
jecxz
rcrb
push
jp
cmpsl
repz
add
int3
sbb
mov
cmc
dec
in
cmp
inc
stos
jb
mov
nop
fidivs
pop
xchg
pop
mov
push
adc
jmp
scas
pop
cltd
out
in
test
test
cmp
nop
sbb
test
cmp
add
dec
pop
cmc
fwait
sub
push
sub
call
fxch
lods
push
mov
rcrl
xlat
movsl
shr
or
dec
pop
lret
push
mov
test
mov
lds
cmp
cmp
cmp
sub
cmp
mov
sahf
out
out
xor
push
loope
out
sub
inc
dec
adc
jb
mov
pop
mov
cwtl
cli
xor
imul
sbb
stc
mov
xchg
fidivrs
enter
pop
loopne
dec
push
adc
jb
mov
cmc
xchg
pop
cmp
or
push
icebp
push
loope
mulb
pop
or
repz
mov
out
fcom
cmpsb
cld
sub
movsb
andb
xor
jbe
test
sbb
stos
or
push
push
arpl
ja
popa
cmpsl
mov
popf
pop
int3
test
loope
push
cwtl
push
and
push
jmp
add
test
out
rclb
push
xchg
jb
mov
loopne
mov
pop
daa
jg
hlt
inc
insb
cmp
stos
cmp
lcall
bound
dec
sarl
add
pushf
and
jge
adc
pop
pop
lea
mov
push
pop
sbb
and
push
inc
pop
enter
dec
add
jno
xor
insl
je
jnp
dec
inc
sub
lock
fstp
orl
sbb
mov
arpl
or
ljmp
divb
sbb
dec
repnz
enter
mov
mov
pop
sahf
mov
jl
fwait
cmp
pop
add
mov
sub
sti
xor
jne
push
es
jge
mov
xor
in
and
stos
push
adc
out
mov
dec
sbb
jmp
push
repnz
ret
mov
dec
mov
adc
or
or
inc
mov
outsb
jae
mov
inc
ss
aad
inc
dec
xor
and
mov
and
shr
xchg
cltd
push
or
int
ja
jae
cmc
mov
call
pop
sbb
repz
mov
popf
pop
pushf
and
and
stc
mov
lcall
lds
pusha
xor
jb
inc
push
in
cs
pop
push
dec
sbb
lock
mov
int
xchg
test
dec
add
jl
int3
cltd
subl
cli
and
ss
test
ss
cmp
inc
adc
cmpsl
movsl
fadds
and
test
mov
ror
and
scas
add
xor
push
enter
add
rorb
lods
cmpb
in
push
mov
int3
roll
clc
lods
cmp
aaa
sbb
jnp
or
fmul
inc
jmp
ror
jmp
aam
cs
fidivs
pop
cmpb
das
ljmp
pop
xor
mov
adc
lods
add
in
or
push
adc
test
push
and
das
lea
mov
mov
push
scas
push
mov
inc
shlb
sub
jns
pop
adc
mov
and
leave
xchg
push
lods
adc
pop
xchg
dec
scas
dec
mov
cltd
and
ljmp
inc
mov
sbb
call
sub
lahf
dec
pop
enter
xchg
mov
jae
enter
xchg
push
pop
in
ss
clc
mov
sbb
cld
cmp
mov
jbe
aas
stos
lods
das
push
and
imul
mov
imul
push
push
pop
imul
repnz
inc
mov
inc
mov
aam
push
hlt
mov
cmpb
nop
aam
fsubl
push
xor
xor
cli
shl
in
lcall
cmp
mov
sbbl
cs
lds
insb
push
mov
movsl
push
and
or
inc
jge
push
jnp
sbb
push
test
inc
mov
ret
and
mov
push
movsb
dec
add
xor
and
ljmp
in
test
outsb
mov
fs
cli
inc
fisubl
insb
push
inc
leave
test
in
dec
iret
fsin
mov
and
fdivl
jecxz
imul
sub
mov
rcr
pxor
mov
rcrl
dec
int
sbb
mov
xor
out
cmc
mov
pop
fildll
rcr
popa
cmp
xchg
xchg
sarl
xchg
jne
dec
push
sub
mov
or
jecxz
sub
in
jae
nop
and
imul
adc
cwtl
cmc
dec
lret
adc
or
test
jne
or
jb
sub
adc
mov
paddsw
xor
lock
enter
sbb
andb
cmpsb
sub
inc
jbe
adc
sub
jge
cmp
xor
sbb
dec
cmp
into
jle
jno
cmpsb
dec
fisttps
fiaddl
insl
lods
lret
inc
mov
mov
mov
cmp
add
aas
leave
mov
jo
iret
test
jl
dec
cmp
adc
fisttps
push
inc
cltd
test
add
shrl
aaa
nop
nop
and
jb
dec
push
sbb
push
mov
movsb
cltd
ds
dec
inc
shlb
sub
out
cld
clc
push
in
je
sub
mov
pop
pop
mov
out
loope
jg
mov
cmp
and
pop
mov
mov
adc
or
mov
dec
out
cli
mov
dec
dec
scas
out
add
inc
xchg
or
insl
mov
lods
sub
cmp
ret
jb
iret
mov
or
ja
ds
and
pop
ret
or
pop
es
andl
xchg
mov
push
notl
inc
jp
sbb
mov
icebp
shlb
xchg
xor
mov
dec
data16
inc
icebp
insl
sbb
outsl
push
add
popa
sarb
push
sbb
push
pop
shrl
ds
dec
leave
mov
mov
sti
jmp
jp
cmpsl
adcb
pop
lock
xchg
pop
arpl
je
push
sbb
jecxz
dec
pop
mov
jecxz
mov
jp
pusha
aas
daa
in
testl
cltd
aas
pushf
jmp
fldl
sbb
mov
cmpb
mov
sbbl
cld
ficoml
sbb
jb
dec
cmp
aaa
outsb
ror
inc
test
inc
and
popf
in
jnp
fldenv
or
jl
adc
push
sub
cltd
mov
push
ja
mov
idivl
mov
and
jmp
out
orb
push
jns
cmp
repz
mov
shlb
jnp
mov
and
sub
mov
cmc
mov
sub
sbb
push
pop
jmp
adc
aas
push
out
mov
cmp
mov
pextrw
push
stc
loop
fmuls
call
and
pushf
mov
push
push
stos
xchg
add
inc
mov
jecxz
mov
add
clc
jae
scas
mov
daa
data16
mov
popf
pusha
sbb
mov
mov
jle
push
adcb
inc
mov
es
push
dec
enter
aam
add
cmp
call
push
out
daa
xchg
das
jmp
pop
test
cmpl
jl
xor
inc
or
testl
mov
add
xchg
test
movsl
cmp
mov
xchg
xor
leave
test
add
jae
or
xchg
cmp
or
arpl
dec
imul
xor
jle
stos
adc
mulb
test
add
arpl
dec
dec
lock
push
mov
jb
sub
jnp
lret
insb
popl
xchg
or
cmp
iret
push
rep
test
push
int
scas
xlat
mov
pop
add
rcll
jg
pop
adc
icebp
mov
ja
in
or
and
dec
pop
scas
out
push
mov
pop
js
xchg
js
call
add
mov
fs
lcall
mov
pop
and
jecxz
adc
dec
icebp
negb
std
push
or
jle
adc
ret
movsl
pop
int3
xchg
adc
divb
dec
repnz
stos
loop
dec
sbb
rep
fisttps
addr16
cmp
dec
into
outsb
pop
adc
je
test
sbb
mov
mov
lods
dec
lds
repnz
pop
add
sbbl
lock
jae
data16
stc
mov
push
repz
js
mov
xor
inc
shrl
stos
aad
jae
add
pop
jg
mov
jb
dec
or
in
fwait
jo
dec
fildl
mov
das
fcompl
je
adc
out
or
push
and
or
rolb
dec
lods
lea
push
movsb
mov
out
mov
mov
pop
in
imul
sti
cli
adcb
popf
mov
mov
enter
dec
scas
or
dec
loopne
sti
add
cwtl
pop
adc
scas
arpl
idivl
sbb
loopne
mov
push
les
pop
dec
pop
movsb
ret
mov
sbb
aas
mov
lahf
pusha
sbb
inc
int
sub
es
mov
rolb
cmp
jbe
pushf
es
fisttpll
mov
fwait
popf
inc
jecxz
pushf
xor
iret
fsub
andb
pusha
xor
sarb
test
inc
jns
or
test
idivb
ss
xchg
lea
jg
insl
adc
sub
jl
aas
xor
sbb
or
cmp
and
add
daa
mov
aad
loop
and
or
icebp
xor
mov
sbb
out
mov
xchg
mov
jg
lds
cmp
push
inc
aaa
loop
adc
push
ret
adc
fcom
test
pop
int3
adc
jns
push
mov
cmp
fsubp
xor
out
jae
aaa
mov
rorb
popf
dec
leave
sub
daa
xor
or
xor
lcall
mov
inc
loope
ret
into
sub
jl
jp
jp
pushf
lcall
push
fistpll
aas
mov
adc
mov
and
or
cmp
divb
sbb
inc
movsb
fistps
add
mov
dec
sub
fwait
push
ret
sub
lods
sti
sbb
shr
mov
loop
scas
lods
dec
aam
mov
out
ja
cmp
push
mov
xchg
js
sahf
push
idivb
mov
xchg
stos
add
push
lds
cmc
dec
test
and
and
pop
or
push
cltd
jo
xchg
repz
push
ss
lods
mov
push
dec
shlb
mov
mov
popl
lods
into
out
orl
pop
jo
rorl
in
push
add
xchg
fildl
cli
push
jmp
fildll
mov
pop
jl
sub
bound
test
std
imul
in
push
add
in
mov
or
dec
and
cmp
lods
arpl
aas
mov
push
inc
fnsave
pop
xchg
adc
mov
lods
xchg
lock
push
fidivrs
mov
ret
ds
or
sub
or
jnp
cltd
add
pop
scas
pop
cmpsl
cmpsb
jne
xchg
push
mov
cli
adc
in
pop
scas
sarb
iret
aas
jle
add
lcall
jge
in
and
out
mov
xor
or
mov
cmp
aam
mov
inc
xlat
mov
xor
test
scas
or
std
or
add
jns
mov
fsubp
fadds
lea
and
repnz
int
jae
and
pop
in
and
inc
xor
fwait
sub
cmp
jg
adc
mov
sahf
sbb
pop
jl
lds
jmp
clc
rcl
aaa
adc
je
or
adc
rorl
sti
sahf
jmp
dec
cmp
push
and
or
cmpsb
pop
inc
mov
out
nop
adc
insb
dec
in
fs
scas
cltd
sti
pop
dec
inc
out
xor
jmp
cmp
pop
test
std
jle
jo
inc
sbb
lret
nop
ljmp
sbb
mov
sar
cmc
xchg
pop
inc
push
dec
inc
inc
stc
loopne
outsl
sti
data16
ds
leave
pop
lret
fstl
mov
or
mov
std
pop
jp
inc
cld
push
pop
or
pusha
mov
rol
or
push
cmc
bound
in
jl
test
loopne
mov
xchg
mov
jl
xchg
and
and
arpl
insb
cltd
add
movsl
fistpll
jbe
inc
popf
cmp
arpl
cmp
push
shrb
mov
cmpsl
cmp
xchg
sub
dec
jl
inc
mov
out
sahf
cs
mov
inc
xchg
in
les
or
ret
jge
mov
sbb
je
pop
mov
scas
or
pop
cmp
push
std
sub
jmp
or
cltd
shrl
ret
add
jge
pop
push
jmp
push
push
xor
xchg
mov
dec
mov
and
icebp
arpl
in
and
mov
insl
sti
fnstenv
xchg
ja
mov
in
pop
lahf
dec
cs
xchg
push
xor
ret
xor
adc
mov
sarl
test
inc
clc
xchg
jle
aaa
inc
xor
dec
mov
mov
gs
inc
sahf
sbb
repz
mov
jp
mov
cmc
mov
xchg
mov
add
filds
aaa
lods
jge
xor
cmpb
add
out
imul
jecxz
stos
or
outsl
push
dec
mov
adc
dec
add
jbe
mov
sbb
clc
sub
xor
jno
lcall
mov
fcomi
pop
dec
arpl
clc
sbb
icebp
iret
xchg
push
arpl
mov
dec
arpl
pop
lcall
xchg
inc
or
inc
jb
sub
fstpt
outsb
aas
jmp
mov
dec
icebp
inc
cmp
dec
lcall
ljmp
push
lcall
adc
mov
mov
mov
push
push
or
push
cmp
mov
gs
xlat
arpl
add
ficoms
addl
mov
mov
inc
fdivrl
xor
sbb
aam
test
xchg
push
inc
adc
adc
into
outsl
imul
movl
push
pop
movd
adc
aas
int
out
add
cmp
xchg
rclb
jnp
xor
adc
in
and
cmp
mov
push
jl
mov
jae
lret
pop
out
jae
add
lar
add
mov
cmp
add
scas
xor
les
leave
dec
aam
mov
mov
mov
mov
lds
sarb
sub
xchg
int3
add
jnp
mov
xchg
sub
jg
xor
lods
out
out
bound
les
lahf
movsl
jo
adc
jecxz
rcl
mov
lock
sub
insl
out
arpl
mov
jg
mov
fisttpl
push
sbb
stos
aaa
test
add
mov
out
cmpsl
sub
idivb
xchg
imul
sub
and
insl
gs
fs
pushf
dec
push
sub
dec
cmp
or
and
push
sahf
mov
popl
fucomi
mov
lods
in
pop
sbb
mov
in
jmp
sbb
ret
arpl
xor
xor
xchg
mov
and
movsb
repnz
or
mov
lock
int3
ficomps
cwtl
dec
fld1
xor
mov
mov
push
sbb
lods
xor
icebp
call
xchg
mov
movsb
sarl
cmp
je
outsb
loopne
repnz
out
pop
inc
push
sti
add
xchg
xor
jnp
sbb
pusha
pushf
push
lret
lret
dec
jno
loop
lea
xchg
cltd
mov
mov
sti
mov
pop
cmp
mov
dec
push
dec
repnz
add
in
ss
dec
outsl
dec
insl
push
xchg
mov
dec
arpl
es
scas
imul
fst
pop
sub
lods
pop
cmpsb
addr16
add
push
xor
jp
imul
lret
out
clc
ret
and
pop
in
mov
cmpsb
fs
push
push
mov
xor
int3
test
aaa
xlat
scas
test
loop
adc
ret
clc
and
enter
in
in
test
pop
sarl
add
sbb
sbb
push
cmp
and
add
xor
jne
push
sbb
jmp
adc
pop
popf
mov
push
xchg
push
in
ss
cwtl
les
cwtl
mov
xchg
cmp
fbstp
mov
aam
orl
dec
xchg
jo
mov
push
and
mov
fwait
int3
push
aam
or
push
clc
mov
test
in
xchg
lret
in
out
sarl
adc
int
mov
rclb
cmp
lea
rcl
testb
jae
sub
or
jmp
xchg
cmp
daa
dec
out
cmp
arpl
loope
bound
scas
arpl
mov
movsb
cmp
push
add
xor
and
hlt
inc
xchg
pop
inc
das
fsubl
mov
ds
aas
insl
inc
popf
sbb
roll
repnz
push
mov
loop
vmaxpd
pop
iret
cmp
aaa
xchg
fs
xchg
in
out
fbld
or
xchg
es
xor
test
or
mov
stc
cld
imul
push
sbb
addl
scas
ljmp
and
pop
push
andl
cmpsl
test
mov
xchg
mov
inc
push
lods
push
fistl
mov
push
out
cli
leave
push
hlt
pop
cmp
mov
xor
dec
out
leave
pushf
lock
dec
add
pop
mov
pop
in
mov
sbb
adc
pop
push
push
inc
mov
mull
es
cmpsb
sti
das
out
pop
jle
mov
cmp
mov
mov
outsb
mov
xchg
dec
lret
mov
or
sub
push
in
imul
mov
xor
fs
pop
sbb
inc
or
fnstenv
fmull
add
mov
insb
add
lret
xchg
pop
out
push
sub
jp
fistps
outsl
jle
mov
cs
add
scas
xor
mov
pop
xor
jbe
or
in
hlt
adc
and
sahf
sub
xor
jle
dec
add
jle
insl
adc
cmpsl
push
hlt
dec
cltd
push
fisubrl
ja
push
repz
mov
xor
out
scas
nop
adc
mov
mov
dec
js
adc
sub
out
pusha
aad
push
pusha
gs
and
stc
subb
hlt
ret
jmp
xchg
out
jne
push
arpl
add
mov
add
test
xorl
daa
jp
jge
movsl
fnstenv
add
shr
pop
jl
movsb
mov
dec
adc
arpl
push
cmp
xor
int3
adc
out
jne
lods
xor
push
lret
mov
sbb
add
iret
jbe
rol
jae
outsl
and
jo
or
add
push
out
into
movl
scas
cltd
negb
or
mov
xor
lock
ffree
jmp
cmp
or
pop
std
inc
out
fwait
dec
pop
fs
nop
push
push
lret
divb
inc
movsl
call
int
pop
push
xor
push
dec
add
jg
stos
mov
add
push
add
sub
xchg
lret
std
cmpsb
cmpsb
stc
mov
cli
dec
popa
sarb
sbb
xchg
rcl
fcompl
test
dec
loopne
xor
in
mov
aam
mov
mov
xchg
inc
mov
cmpsb
dec
sbb
dec
mov
jbe
adc
jnp
sub
mov
jne
movsb
dec
cmp
imul
dec
push
sbb
jl
out
fsubrl
or
mov
or
cs
and
aaa
mov
mov
into
and
data16
push
iret
scas
xchg
push
sbb
test
ret
subl
jne
dec
push
adc
pop
out
jnp
outsl
mov
pop
inc
clc
mov
into
lods
shl
mov
dec
jge
ret
icebp
mov
mov
in
mov
and
leave
jmp
into
sub
mov
push
push
mov
mov
jnp
jg
cmp
cmpsl
in
ss
add
ror
imul
xchg
xchg
and
dec
cli
in
jbe
mov
gs
mov
mov
or
insb
pushf
cwtl
rcrb
and
inc
std
out
and
mov
xlat
test
scas
lds
lods
pop
scas
adc
or
sbb
stc
push
out
adcb
xor
jge
lret
pop
sub
loope
in
ror
jo
shll
sarb
push
dec
mov
xor
int3
jl
fidivs
sti
lods
inc
cmc
lcall
jg
mov
std
dec
lock
mov
cmpsb
push
dec
cmp
inc
push
or
addl
push
out
fisttps
pushf
int
iret
icebp
pop
cmp
imul
jp
test
mov
push
cld
mov
cmp
sti
cmp
pop
arpl
adc
fs
in
out
mov
out
cwtl
out
mov
or
bound
out
lahf
pop
mov
pushf
adc
bound
mov
stos
ret
sub
fdivrs
pusha
in
xlat
adc
mov
out
cld
push
push
fcomps
ds
movsb
scas
mov
pop
and
add
or
pop
dec
aad
fwait
xchg
jns
out
rsqrtps
mov
xor
das
mov
push
in
out
xchg
fs
and
ljmp
mov
cmpsb
and
xchg
pusha
push
xchg
icebp
cs
aad
ficompl
mov
xor
push
adc
xchg
or
mov
push
in
fisttpll
lea
add
insb
test
test
mov
std
adc
sbb
aam
dec
mov
mov
mov
mov
lea
mov
add
mov
movw
movw
mov
mov
mov
mov
lea
mov
push
lea
push
push
lea
push
mov
push
call
test
jne
push
push
push
call
mov
push
push
push
mov
push
call
mov
push
call
movl
push
push
call
mov
pop
ret
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
bound
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
arpl
add
add
add
add
xor
add
sub
add
and
add
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
add
andb
mov
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
cmp
pusha
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
mov
add
int3
add
aam
add
fsubl
in
add
mull
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
add
sub
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
push
addl
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
addl
mov
addl
lods
addl
movsb
addl
pushf
addl
xchg
addl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
addl
cld
addl
adc
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
test
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
addb
add
test
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
jmp
jmp
jmp
