sub
pop
leave
sarb
out
ss
xchg
insl
orb
mov
fwait
mov
mov
push
popl
clc
out
inc
clc
ror
xor
mov
fxtract
stos
or
ljmp
jb
shrb
lret
es
pop
pop
rclb
sub
mov
int3
aam
in
adc
mov
mov
mov
mov
pusha
aam
lea
and
movsl
dec
rcrb
dec
aas
outsl
push
ja
xor
adc
outsb
mov
sub
je
mov
leave
inc
mov
inc
mov
or
lahf
out
lds
loopne
mov
hlt
push
pop
adc
faddl
inc
cltd
or
out
xchg
jp
jg
jl
loope
inc
xchg
sub
cltd
pop
mov
xor
hlt
and
test
daa
mov
inc
add
or
cmp
cli
popf
cmp
lahf
dec
sbb
ja
int3
fstpl
inc
scas
dec
xchg
ss
mov
rcll
std
jge
mov
in
ret
jns
rcll
loop
dec
lcall
jae
add
stos
clc
in
and
jmp
inc
xlat
mov
leave
adc
ljmp
imul
pop
out
and
dec
sub
clc
add
orb
out
jl
addr16
decl
loop
iret
push
mov
jb
xchg
sahf
add
cmp
icebp
out
pop
test
sbb
sub
mov
and
adc
add
jb
adc
mov
jmp
xchg
dec
inc
out
inc
jnp
fcmovb
test
add
mov
xor
push
mov
or
sbbb
mov
sub
fisttpll
add
mov
adc
notb
xor
xor
fistpl
jg
adc
or
xchg
aam
pop
scas
mov
enter
lea
add
cmc
add
loopne
addr16
cli
pop
jmp
mul
daa
push
inc
loope
pop
mov
pop
pop
cmp
xchg
test
sub
js
push
mov
jae
jno
dec
es
add
loope
sub
ds
dec
add
xor
xor
bound
add
pushf
add
imul
and
inc
add
aad
xchg
or
inc
fnstenv
les
mov
pop
cmp
or
jecxz
popf
shll
scas
mov
jl
rorl
es
cli
popa
push
dec
pop
lcall
imul
pushf
mov
xlat
jge
xor
sbb
notb
push
mov
data16
xorl
cmp
sub
jae
lock
fisttps
xor
sub
mov
sub
push
mov
loop
mov
sub
push
cmp
sub
lds
sbbl
std
std
pop
jl
imul
jno
inc
fsubs
insl
rcl
test
xchg
and
ljmp
or
pop
mov
lret
jns
outsl
loop
pop
xor
cmp
xlat
sub
test
mov
push
push
in
cmp
lods
cld
mov
and
lds
dec
push
xor
cmp
adc
and
mov
leave
xor
hlt
inc
jne
jbe
mov
out
in
sub
movsb
xor
rcll
mov
adc
ret
hlt
mov
mov
fnsave
xor
addr16
mov
cmc
push
movsb
repz
leave
ficoms
xor
xchg
lods
mov
movsl
lret
inc
xchg
subl
jne
lods
push
ljmp
mov
movsl
jbe
popa
pop
addr16
out
mov
and
dec
or
dec
pop
repz
sub
adc
in
das
popf
mov
push
outsl
mov
outsl
xor
push
call
enter
filds
loope
mov
arpl
and
cs
fnstenv
adc
pop
das
sub
mov
cltd
out
jnp
ret
stos
loope
cltd
lcall
xchg
adc
in
xchg
stos
jmp
add
and
lods
fwait
lea
dec
int
int3
nop
pop
mov
sbb
pop
sub
out
sahf
popf
jo
jmp
xchg
mov
jb
add
icebp
push
fld
xor
dec
mov
xchg
pop
push
xchg
pop
call
fwait
mov
xchg
add
mov
jle
je
mov
sahf
scas
mov
dec
gs
out
xchg
test
scas
push
xor
dec
jae
cmp
jl
xor
cwtl
push
xor
pop
xor
mov
jmp
jb
jns
inc
jne
pop
int3
data16
mov
out
push
dec
push
stc
push
dec
or
inc
sbb
cs
fs
xchg
push
daa
div
mov
aad
jge
lods
mov
call
lahf
pop
adcl
rorb
push
cmc
and
inc
insb
test
cmp
mov
push
popl
add
xchg
cmc
xchg
inc
fst
jns
out
cmpsb
inc
test
inc
lcall
sbb
popf
push
int3
test
int
and
es
mov
or
mov
pop
movsb
movsb
aas
pop
cmpsb
add
lock
push
xor
loope
ss
push
sub
je
dec
in
inc
out
cmp
pop
jmp
push
mov
dec
mov
lcall
or
add
jg
xor
push
lahf
lock
imul
repz
dec
inc
stos
sbb
mov
push
test
or
jae
enter
sahf
cmp
lods
lea
out
sbbl
fisubl
pop
lods
imul
popa
push
inc
inc
lds
xor
test
es
inc
or
pop
add
out
xchg
ficomps
pop
add
jmp
push
adcl
xlat
inc
dec
out
mov
mov
xchg
fdivs
add
xor
add
sub
ds
daa
dec
in
bound
push
leave
lods
jmp
jbe
or
cmp
jbe
data16
inc
sub
jecxz
dec
xchg
imul
inc
dec
xor
push
inc
div
inc
test
pusha
jnp
pop
cmp
stos
jae
sbb
insb
ficoml
and
fisubl
xchg
icebp
or
call
or
mov
or
fadd
insl
mov
dec
mov
repz
xor
fnsave
mov
fsubr
adc
lock
mov
inc
cld
mov
push
out
inc
cmp
or
out
les
idiv
mov
into
jno
nop
and
cmpsb
push
sbb
mov
ljmp
lret
cmp
cltd
das
jp
push
mov
xlat
imul
pop
into
jb
nop
inc
cmp
pop
test
add
aas
iret
and
pop
sbb
xor
data16
inc
scas
push
lcall
fadds
push
push
lcall
mov
loope
sub
stos
and
or
pop
mov
addr16
psubd
ret
dec
mov
cmovo
push
bound
ss
stc
es
aas
insl
pop
cltd
cwtl
or
into
mov
and
push
in
fs
mov
enter
test
or
dec
nop
jne
in
dec
fisttps
pop
mov
mul
jae
jge
es
and
popa
aas
jmp
pop
xor
and
jbe
je
xor
filds
scas
ret
xlat
ficoms
dec
outsb
jecxz
leave
addl
mov
jae
xchg
and
mov
xchg
je
pop
push
dec
push
in
add
push
in
sbb
aad
movsb
repnz
cwtl
imul
stos
jbe
add
bound
push
mov
mov
in
xchg
inc
loopne
adc
jns
dec
mov
jnp
xor
fimuls
negl
jae
and
mov
xchg
jecxz
sub
push
add
jns
insl
fwait
jno
fisubrs
out
mov
mov
mov
clc
mov
xchg
push
lock
jle
sub
loopne
nop
pop
inc
and
lock
dec
adc
adc
lret
jecxz
mov
aam
mov
pop
or
sbbl
sbb
xor
insl
int3
pop
out
xor
pushf
scas
dec
xor
sbb
push
in
mov
cmp
addl
aad
ret
andl
cmc
mov
fldcw
aad
mov
push
shrb
xor
pop
xor
push
push
aas
fcmovne
negl
int3
sub
cwtl
pop
mov
jp
popa
inc
daa
xchg
scas
lret
and
inc
inc
sahf
ljmp
in
push
fdivrp
data16
test
das
mov
pushf
mov
enter
cmpsb
adc
cmc
add
les
and
clc
dec
addr16
pop
sbb
cmp
sbb
dec
lret
jns
movb
insb
mov
rcr
push
rorb
andl
push
ja
pop
sbbl
lahf
mov
lock
rolb
les
imul
out
add
add
sahf
das
les
adc
mov
cwtl
sysenter
mov
push
cltd
sti
jne
inc
cmp
hlt
push
test
jo
inc
sbb
les
loop
test
add
pop
cld
iret
push
adc
adc
xchg
pop
adc
out
inc
jmp
repz
mov
sti
bound
mov
dec
inc
push
xchg
f2xm1
fstpl
add
dec
jg
and
cwtl
in
je
pop
sub
push
push
idiv
cltd
out
test
xchg
std
out
sbb
push
sub
test
sti
in
cmc
repz
sub
jmp
dec
mov
sub
fidivs
pop
jb
dec
das
lcall
test
scas
push
test
inc
inc
sbb
std
pop
shll
push
fstpt
mov
mov
test
mov
jp
push
js
stos
das
add
jae
adc
loopne
shl
ljmp
sub
fldenv
push
outsl
fidivrs
mov
xchg
in
push
adcl
xchg
aam
inc
jns
rolb
or
push
int
daa
and
mov
outsl
lods
imul
ret
lock
movl
inc
lret
je
xchg
xchg
roll
int
lds
pop
cmp
ret
mov
lock
dec
sub
daa
mov
cmp
rep
inc
dec
push
rcrb
rolb
ja
mov
movsb
push
leave
jecxz
sub
dec
lods
add
loop
psubusw
sahf
jle
pop
mov
mov
xor
mov
lret
mov
mov
ret
js
sbb
jmp
mov
xor
and
insl
insb
mov
add
sbb
sbb
sbb
iret
in
mov
in
mov
dec
in
in
cli
testb
adc
dec
jg
or
gs
je
into
outsl
mov
test
inc
imul
inc
test
bnd
aam
sub
aas
sbb
xchg
sbb
mov
sbb
jle
cmpsb
jmp
xchg
mov
add
enter
push
adc
pop
mov
scas
dec
test
popf
and
mov
cmp
mov
dec
popf
xchg
cmpsb
mov
outsb
arpl
sub
pop
int
shll
mov
aad
or
ss
std
dec
and
fildll
rdtsc
xchg
xor
sub
mov
xchg
jecxz
mov
shll
dec
xchg
dec
mov
daa
cmp
xchg
xor
sbb
mov
and
jmp
mov
push
sub
ret
out
pushf
arpl
pop
fnsave
sahf
repnz
ret
loope
add
inc
pop
mov
jecxz
pop
xor
addl
out
mov
sbb
add
cmp
out
clc
push
mov
jo
mov
fs
pushf
xchg
cmp
in
lea
out
imul
mov
xor
mov
hlt
in
add
jae
cmp
mov
dec
sti
lds
sbb
sahf
or
pop
jae
fidivs
outsl
fcmovnbe
xchg
or
daa
nop
push
cmp
jle
sub
push
push
or
jge
sub
daa
sbb
sub
add
jmp
cmp
push
lock
jmp
fwait
mov
push
ljmp
out
fmull
test
mov
lret
inc
or
imul
or
int
and
jb
sub
cmc
rorb
inc
mov
mov
sarb
xorb
mov
xchg
idivl
pushf
mov
clc
mov
jecxz
or
lods
jecxz
pop
lea
lock
das
icebp
popa
mov
mov
psubsw
inc
out
in
mov
jnp
cmp
sbb
insl
mov
lock
inc
sub
pop
mov
mov
push
das
popf
mov
xchg
jmp
xor
pop
dec
inc
pop
or
out
aaa
or
mov
int3
mov
add
lret
stos
test
jg
lock
jecxz
arpl
jmp
cmp
sbb
bound
adc
shl
pop
push
clc
and
leave
xchg
xchg
jb
add
fdivr
jmp
xchg
mov
adcl
mov
jbe
psubsw
fnstcw
aam
arpl
in
out
aas
push
outsb
scas
adc
outsl
lods
cli
or
pop
jb
sti
out
or
adc
cmc
mov
pusha
mov
out
or
mov
fs
outsl
mov
adc
int3
rol
inc
andl
mov
bound
int
mov
iret
dec
in
mov
nop
pushf
imul
cmp
enter
popf
sub
decb
cmc
pop
jp
cmp
push
mov
imul
pop
push
pop
loopne
xchg
inc
adc
int
outsb
sub
mov
scas
pusha
mov
jge
mov
mov
fistpl
loope
sbbl
cmp
xor
int
cmpsl
dec
add
aad
xchg
jmp
and
stc
lds
cmc
sahf
jp
ftst
into
in
add
hlt
cvttps2pi
ds
fwait
arpl
mov
stos
ficomps
iret
aaa
inc
and
mov
or
sbb
lea
imul
loopne
repnz
daa
adc
push
hlt
jl
icebp
jle
inc
sub
adc
jno
adc
addr16
mov
fs
jge
int
jp
jge
sar
xchg
sub
push
stos
test
sub
xchg
mov
out
sub
xchg
sbb
mov
mov
push
mov
jg
mov
sbb
lret
outsl
adc
cmp
popa
call
cmp
lret
outsb
ds
lret
lahf
dec
call
mov
loope
xchg
mov
mov
imul
mov
ja
fs
sti
clc
cs
or
je
push
mov
xor
push
or
clc
scas
les
mov
test
imul
cmp
test
dec
jp
adc
pop
adc
sbb
nop
inc
test
cmc
scas
pop
push
mov
out
adc
int3
jne
cld
mov
mov
popa
mov
pop
xchg
mov
push
sbb
add
push
mov
add
mov
push
pop
xchg
push
cmpsl
insl
pop
lcall
loop
loop
cmp
in
cmpl
xor
inc
popa
insl
or
xchg
pop
cmpsl
jecxz
pushf
outsb
inc
or
fimuls
xor
mov
aam
push
dec
mov
push
xor
sbb
je
arpl
or
sub
push
insl
cmp
lretw
in
popf
shll
call
sub
push
lods
jae
loope
movsb
stc
dec
pop
inc
adc
mov
fisubrs
mov
sbb
adc
out
xor
rolb
fistl
stc
cmp
inc
mov
sub
lods
insb
mov
adc
inc
arpl
mov
dec
inc
sti
mov
imul
sahf
lret
aam
push
dec
roll
xchg
fistps
and
push
out
movsb
xchg
aas
insl
les
pop
fldl
pop
xchg
push
aas
aam
loopne
jae
push
cmp
cmp
incl
xlat
mov
rolw
divb
adc
in
stc
icebp
cld
adc
frstor
xor
jb
mov
and
pop
xor
xchg
pop
adc
cld
mov
xchg
cltd
xor
dec
mov
jns
es
aam
xor
ljmp
ret
in
testb
sub
imul
ret
pop
aad
adc
or
test
jb
sahf
xchg
jmp
movsl
stos
shl
push
loope
divb
lahf
mov
das
sbb
inc
add
scas
rorl
adc
cmp
mov
xchg
addr16
rorl
dec
xlat
mov
andl
xchg
in
pushf
cmp
xchg
sub
into
lret
adc
adc
aam
out
pushf
arpl
lcall
loopne
jecxz
fcmove
pop
and
movsl
sub
jecxz
aaa
sub
sti
and
sahf
inc
loop
and
fsub
stc
aad
xor
out
gs
push
or
mov
call
xlat
dec
dec
pop
push
call
ret
repnz
xchg
xchg
push
xchg
cmp
dec
into
push
xchg
lahf
jl
imul
sbbb
f2xm1
jbe
or
mov
fidivrl
ja
rorl
sbb
mov
adc
ret
cmpsb
and
sub
ret
xchg
int
cmp
and
push
sub
roll
hlt
sub
pusha
loopne
adc
mov
dec
xor
push
addr16
or
addl
scas
flds
cmp
cmc
iret
fcompl
pusha
pop
data16
dec
repz
push
fnstenv
dec
mov
pop
lret
mov
out
sahf
clc
pushf
add
xor
or
xor
leave
push
jmp
lds
repnz
lcall
mov
mov
fcmovnbe
dec
mov
xor
fs
adc
mov
dec
push
pop
inc
mov
pop
sbb
jb
movsb
mov
mov
inc
loope
insb
push
shll
loope
jg
cmpsl
int
aam
rolb
cmc
maskmovq
notl
xor
xchg
rcrl
nop
int3
lret
daa
movsb
dec
lods
add
jp
shrb
mov
int3
repz
jle
js
push
cmc
repz
mov
xor
ss
and
dec
jge
adc
testb
shlb
ljmp
pop
cmp
repnz
int3
scas
mov
dec
sarb
repnz
jmp
stc
mul
lods
arpl
cld
sbb
pop
iret
or
fadds
rolb
test
sbb
divl
enter
mov
je
push
mov
pop
rcrl
pop
xlat
inc
ficoml
addb
sahf
stc
mov
jo
mul
adc
je
outsl
mov
sti
lahf
dec
outsb
or
jmp
rcr
jp
dec
sub
pop
jbe
out
and
pop
dec
popf
ljmp
sub
ljmp
push
aam
repz
loopne
dec
push
jbe
divl
sub
mov
out
int3
lods
or
bound
pop
daa
xchg
outsl
rolb
pop
arpl
aad
xor
and
test
mov
jbe
outsb
xor
lret
xor
fcompl
push
sbb
inc
cmp
mov
std
out
retw
dec
or
and
inc
addr16
in
gs
sti
loop
je
subl
pop
cmp
and
push
mov
mov
nop
cmp
xor
xor
or
xor
sbb
jmp
jo
inc
andl
xchg
fimull
cld
jbe
ljmp
dec
int3
xchg
mov
xchg
dec
inc
orl
shl
jns
pop
repz
popf
push
fstpt
pop
aam
das
pop
popa
cmpl
xchg
add
mov
sbb
jnp
stc
push
shl
and
mov
adc
mov
push
outsb
xor
jb
mov
js
nop
push
loopne
loopne
pop
or
dec
mov
arpl
jbe
mov
fildl
lods
cmp
insb
enter
loope
adc
fnstsw
inc
enter
adc
jb
cmp
sti
testb
decl
lcall
outsb
sbb
lret
dec
sbb
sahf
icebp
roll
fcomps
xchg
dec
jp
add
pop
mov
js
mov
push
shl
adc
test
cmpsl
in
out
jns
aaa
push
and
xor
and
cmp
xchg
dec
mov
and
push
loop
movsb
xor
imul
sub
inc
rcrl
out
sbb
xchg
mov
add
adc
or
lret
cli
mov
mov
dec
adc
jl
inc
mov
mov
ss
fidivs
push
xchg
dec
dec
jnp
fs
xchg
jge
xchg
xchg
imul
aaa
or
dec
inc
sub
enter
and
icebp
mov
into
mov
movsl
pop
cmpsb
loopne
pop
lock
daa
push
movsl
dec
inc
es
pusha
jbe
lahf
call
xchg
jbe
push
xor
cmp
popa
push
loop
pop
popa
in
adc
insl
repnz
lds
dec
and
xchg
mov
xor
fs
cmp
adc
sub
push
sbbl
add
mov
ljmp
sbb
cli
sbb
or
mov
and
ret
sbb
cmp
enter
push
mov
test
cmp
and
ljmp
push
xorb
sbb
lods
push
pusha
les
jo
jb
je
dec
das
mov
fcoml
cwtl
enter
cmovp
out
int3
xchg
fildl
or
test
ret
adc
push
into
mov
mov
mov
jl
push
inc
jp
invd
insb
andl
insl
mov
mov
std
mov
push
out
cmp
stos
stc
in
jl
scas
mov
mov
pop
cmpsl
pop
sahf
enter
pop
rorl
push
cmp
loopne
mov
jecxz
jb
daa
mov
fcoml
repnz
jb
daa
add
cmpsl
frstpm(287
repz
and
or
mov
jno
ja
mov
popf
ficoms
push
cltd
adc
ficomps
je
lock
sub
mov
sub
ficoml
addr16
cmp
inc
inc
sub
xor
dec
neg
stos
lods
mov
push
pop
jl
out
mov
xchg
aaa
das
repnz
mov
mov
out
or
lock
mov
arpl
inc
xchg
aad
idiv
xlat
push
es
bound
cli
mov
or
test
mov
mov
lods
inc
fptan
cmp
imul
mov
loopne,pn
mov
imul
mov
lret
pop
push
lahf
xchg
stc
mov
loopne
cltd
lahf
dec
leave
ja
pop
out
and
jl
mov
bound
jl
jns
inc
mov
scas
outsl
leave
packuswb
and
lret
jo
jb
nop
cmpb
and
lahf
shll
push
mov
das
xchg
inc
rcll
inc
out
xchg
dec
fwait
out
repz
stos
sbb
mov
jae
mov
cwtl
sbb
scas
push
sub
shlb
mov
test
popf
mov
lcall
jo
movsb
sub
arpl
test
movb
js
add
inc
cmp
mov
xlat
pop
das
mov
and
xor
repnz
mov
inc
test
rclb
dec
adc
add
arpl
mov
mov
data16
mov
adc
mov
mov
je
sub
mov
sub
jl
cld
aad
mov
dec
test
push
mov
xchg
xchg
out
push
mov
popa
cmp
sahf
xchg
daa
fistl
dec
clc
ljmp
gs
pusha
push
fisubrs
lds
shrb
popf
inc
push
inc
inc
stc
lea
mov
popl
xor
lcall
xor
dec
mov
les
andl
fsubp
call
addb
int3
xchg
cmp
jae
or
std
loopne
and
call
imul
cmpsl
push
jb
sbbb
jl
inc
push
xlat
xchg
sbb
test
cli
pop
add
jo
mov
push
jg
clc
test
std
cld
mov
fildl
int
mov
mov
mov
xchg
push
mov
addr16
imul
mov
std
rolb
pop
fdivrs
in
pop
in
dec
cmp
cmp
and
xor
popl
mov
jbe
mov
movsb
xchg
out
scas
push
ret
sarb
cltd
out
mov
cli
mov
int3
stos
ror
sub
sub
popf
test
inc
outsb
jmp
out
mov
pusha
in
sbb
adc
out
push
clc
mov
scas
std
pop
insl
clc
inc
mov
pop
mov
push
sub
jle
xchg
and
inc
aad
jnp
xchg
int
and
std
aas
shl
cmp
ds
sub
ja
sbb
sbb
or
and
into
lahf
negb
xchg
mov
push
adc
push
or
ficoml
mov
pop
mov
mov
sub
jns
cld
push
xor
out
in
push
and
xor
cmp
add
pop
inc
jmp
test
sbb
adc
mov
mov
dec
xchg
loope
mov
push
nop
mov
pop
pop
movsb
in
inc
rorl
gs
cmpsl
sti
in
add
cmp
dec
dec
jae
add
xchg
cmpsl
mov
push
jl
push
push
imul
mov
xchg
mov
ljmp
push
and
xchg
mov
aas
scas
mov
jg
pushf
push
sub
fldcw
fnstsw
mov
test
lock
mov
pushf
icebp
mov
mov
loope
mov
push
jbe
add
cmp
mov
xchg
jmp
stc
adc
and
test
jb
rcr
in
fbld
pushf
cmpsl
adc
loopne
fnstcw
lahf
cmpsl
stos
insb
in
sbb
test
and
push
cmp
sub
les
and
pop
jecxz
js
std
addl
in
mov
lret
jge
cmp
roll
push
xchg
and
jns
rcrl
sub
andl
imul
mov
int3
stos
fdivs
mov
mov
mov
and
pop
pop
movsb
inc
fisubl
mov
cmp
pop
pop
into
dec
jmp
xor
ret
jge
stos
cvtps2pd
sahf
mov
nop
shll
sub
mov
mov
lcall
lahf
pop
popf
js
xor
xor
je
adc
adc
mov
f2xm1
insl
gs
sbb
adc
int
aas
sbb
sahf
mov
xchg
cmp
ret
mov
pushf
hlt
sub
adc
ja
insl
mov
pushl
leave
add
mov
xor
xor
and
dec
inc
push
adcb
ss
inc
popf
xor
fimuls
clc
or
rcl
dec
pop
jb
mov
push
push
mov
addr16
mov
bound
leave
pop
xchg
fwait
lods
xchg
inc
xor
mov
inc
or
ljmp
clc
test
xor
cmp
mov
adc
fnstenv
iret
stos
movsl
or
cld
cli
add
mov
cmp
lret
mov
adc
in
and
push
push
mov
sbb
push
aam
mov
insl
ja
out
pusha
jp
rorb
pop
adc
ror
or
fmull
jle
jb,pt
lcall
mov
sub
insl
je
inc
add
repz
mov
std
and
mov
data16
pushf
inc
add
andb
lret
mov
daa
xlat
and
push
cmc
push
adc
pop
mov
or
pop
daa
mov
popf
clc
inc
or
in
fwait
and
inc
fmuls
pusha
sub
ljmp
jl
push
icebp
mov
fs
sub
insb
pop
dec
mov
int3
dec
in
pop
cld
sbb
popa
xor
and
mov
arpl
cmpsl
mov
out
je
in
adc
jno
inc
enter
inc
enter
inc
mov
sub
sbb
mov
stos
imul
int3
push
sahf
sub
js
lods
adc
or
push
jbe
inc
pop
stc
or
add
inc
sub
or
jns
sbb
sbb
popa
adc
xchg
idiv
dec
and
xor
movsl
incl
inc
sub
xchg
mov
test
xor
lret
add
scas
in
cs
push
test
pusha
les
popa
outsb
loopne
orb
fpatan
lret
or
lods
jns
dec
jg
xchg
lea
lock
outsl
clc
push
loopne
xchg
sbb
jo
push
add
sti
adc
je
test
pop
jae
xchg
push
test
inc
xchg
pop
hlt
ja
shrl
jo
adc
mov
clc
add
or
es
pop
in
andb
fbld
xchg
sbb
or
push
xor
push
jp
mov
sahf
orb
sahf
or
aas
hlt
add
mov
fmuls
pusha
xchg
fs
bound
pop
and
bound
dec
jecxz
scas
dec
sti
sub
jge
jb
push
aas
insl
andb
outsb
movsl
addb
out
jns
stc
je
mov
testl
and
fldcw
xor
xlat
jnp
shll
in
mov
adc
mov
inc
pushf
dec
fnsave
leave
inc
jae
sub
or
xor
sbb
mov
push
fs
xchg
insb
jb
jl
lahf
fisubrs
ret
fdivrl
mov
sbb
cli
pop
stc
push
lcall
icebp
fldcw
lcall
mov
shl
xchg
inc
out
adc
cmp
inc
push
sti
mov
ret
stc
pushf
mov
mov
inc
mov
adc
stos
adc
jge
sbb
aam
sub
sbb
into
scas
dec
xchg
stos
dec
scas
cmp
xchg
cli
sub
or
mov
pushf
dec
loopne
lret
lret
cmpsb
mov
aad
lahf
dec
stc
sub
cmp
add
add
xchg
movsl
mov
mov
fbstp
out
xchg
mov
mov
js
mov
in
cmp
cmpsb
pop
vaddsubpd
push
and
pop
jbe
int3
rcrb
pop
decl
jnp
shlb
pop
in
movsb
ret
fadds
jo
mov
fiadds
fstps
add
das
leave
pop
or
xor
mov
xor
fcmovnu
sub
adc
ds
enter
outsb
bound
add
pop
data16
dec
jmp
push
test
int3
andl
stos
and
sbb
lods
dec
add
push
aam
dec
iret
xchg
xlat
xchg
jbe
mov
push
mov
xor
push
loope
loopne
insl
xchg
insl
testl
xchg
lcall
fyl2xp1
out
or
enter
fcoml
ficomps
dec
jns
inc
in
jo
mov
and
cmp
out
adc
xor
in
les
in
fs
in
mov
push
dec
push
ljmp
sbb
mov
lret
and
decb
mov
jbe
shrl
ljmp
pop
insb
fsubrs
cmp
addr16
adc
mov
pusha
test
inc
ja
pop
jecxz
dec
lock
icebp
cmp
insb
leave
mov
adc
cli
stc
nop
inc
dec
aad
jg
shl
dec
mov
ret
sub
out
cld
ja
sbb
sub
or
icebp
loop
fmuls
or
loop
xrelease
xlat
or
cmp
pop
lret
xorl
or
in
inc
mov
enter
dec
out
clc
mov
stos
add
cmp
sbb
fstl
das
mov
add
shr
pop
movsb
push
test
inc
enter
add
iret
xor
mov
out
mov
xor
jae
push
mov
das
loopne
aam
push
jecxz
in
scas
jge
add
cmp
sbb
xchg
ds
mov
mov
mov
mov
pop
xorb
scas
adc
ss
push
cltd
jecxz
cmp
mov
fisubl
xchg
mov
inc
mov
xor
fmuls
mov
inc
mov
jle
push
ret
mov
inc
mov
stc
insl
cmp
jbe
push
mov
mov
ret
stos
insl
pop
xor
in
pop
pop
je
hlt
lods
mov
mov
cli
jecxz
adc
dec
lea
clc
outsl
scas
or
std
mov
inc
mov
test
jo
push
cmp
aaa
sti
push
test
sbb
int3
sub
icebp
jae
sbbb
sub
cmp
add
push
adc
add
cmpxchg
push
adc
icebp
scas
movswl
rcr
pusha
add
decl
scas
sbb
stos
sub
clc
mov
mov
pop
scas
push
call
and
sti
lahf
cmp
push
mov
test
int3
test
pop
cmp
cmpsl
push
pop
fadds
or
js
lahf
xor
and
dec
lock
mov
int3
arpl
jns
ret
xor
jmp
inc
add
cmc
mov
out
jno
push
fcmovnbe
hlt
pop
xorl
pop
stc
mov
loopne
jecxz
xchg
sbb
adc
ss
ds
and
xchg
fwait
push
cmp
push
sahf
add
test
adc
lds
iret
popf
xor
mov
mov
ja
lcall
sahf
pop
mov
jmp
adcl
mov
out
pop
xchg
sub
cmpsb
fadd
les
jecxz
repz
in
aam
push
aam
lret
cmp
cmp
push
mov
out
shll
pop
and
mov
cltd
hlt
jmp
std
stos
mov
sub
popl
lds
stos
lret
rcl
mov
sbb
out
jge
lret
mov
jg
xor
inc
dec
outsl
xchg
mov
nop
imul
push
mov
lcall
int
ja
mov
jne
loope
mov
lds
sbb
subl
ss
xor
mov
popf
and
sbb
into
frstor
lods
and
lcall
add
lret
leave
into
mov
aas
dec
dec
dec
enter
das
mov
loopne
lock
cmp
cmp
cld
push
lods
js
push
cmc
mov
adc
cld
mov
dec
std
repz
and
rcr
inc
cmp
mov
movsl
cld
cmc
xor
jmp
sub
xchg
repnz
dec
popa
mov
fisubrl
fs
jp
mov
fsubrs
js
cmp
push
push
inc
repnz
es
lahf
into
pop
mov
rcrb
insl
int
aas
or
cld
jne
ds
out
add
or
mulb
arpl
aas
and
out
aaa
mov
adc
push
pop
iret
xor
inc
jg
pop
imul
nop
nop
testb
bound
xor
sti
pusha
add
jbe
shlb
xchg
lods
pop
jge
dec
cli
or
cld
loop
cmp
gs
push
mov
push
jge
mov
adc
sub
shlb
fadds
xor
fwait
mov
dec
outsb
in
int
xchg
into
xchg
jne
cs
xchg
adc
xchg
xchg
dec
fld
lods
jmp
push
pop
pop
loop
adc
xchg
ljmp
push
push
xchg
pop
ss
jmp
hlt
cs
mov
js
sub
sub
cmp
out
cld
leave
xchg
pop
mov
and
lahf
sub
in
add
jb
insb
pop
push
jg
sub
into
iretw
dec
pop
call
lds
push
ja
jmp
inc
xchg
pop
fbld
dec
sahf
push
ds
jae
xor
into
sub
outsb
mov
adc
push
aaa
mov
jge
mov
leave
insb
sub
xor
rclb
int3
xor
shrl
mov
incl
and
xlat
in
sbb
lds
es
ja
stc
loopne
shll
add
jecxz
mov
outsl
inc
rolb
jmp
scas
mov
or
dec
pop
inc
push
mov
loop
xor
jp
mov
sub
xor
out
push
ret
ret
fsubl
or
scas
mov
add
adc
enter
loop
fnstcw
dec
dec
xor
pop
mov
sti
jge
mov
add
pop
sub
xchg
test
sbbb
pop
pop
mov
int3
adc
adc
bound
jl
jns
mov
pop
cwtl
adc
inc
mov
add
jge
repz
lods
insb
jge
add
lea
adc
pop
ficompl
push
call
mov
adc
in
int3
data16
xchg
out
fstps
js
dec
inc
psubusw
test
ja
imull
inc
ret
shlb
test
ds
inc
adc
or
jmp
cli
faddl
out
pop
add
test
rorl
or
adc
pop
jg
sub
iret
add
loope
hlt
pop
pop
ftst
repz
cli
iret
jbe
int3
daa
push
and
jp
inc
jecxz
pushf
adc
pop
add
pop
std
jp
inc
inc
and
mov
call
out
rolb
xchg
or
sbb
pop
mov
push
xchg
push
out
push
push
js
mov
jb
in
out
pushf
jecxz
sbb
das
fnstenv
cmpsb
dec
loopne
cmc
sub
adc
andb
sub
pop
xchg
in
mov
xchg
lds
mov
xchg
sahf
mov
scas
enter
movsl
daa
stos
jnp
dec
stos
xor
jno
pop
and
inc
jecxz
int3
scas
push
push
fs
inc
jp
cmp
xor
and
aas
xlat
cmc
incl
stos
add
mov
addr16
cmp
bound
cmpsl
mov
sub
ror
inc
sti
int
adc
les
into
sti
push
sbb
pop
mov
lret
jecxz
in
sub
stos
cmp
mov
ss
pop
push
pop
cltd
jmp
sbb
push
xor
mov
fmul
ja
jns
jle
and
pop
aas
pop
dec
dec
and
dec
sub
sbb
repnz
insl
jns
push
inc
js
shll
cmpsb
xor
mov
call
call
mov
mov
pushf
push
mov
adc
test
outsb
cvtps2pd
in
jae
outsl
call
popa
add
jnp
xchg
sub
push
cs
push
mov
cmpsb
gs
loope
jo
shl
lock
xchg
xorl
adc
icebp
mov
mov
xchg
gs
push
test
mov
and
inc
orl
cmp
adc
sub
andb
dec
mov
fidivrl
lods
sbb
or
aad
pop
loopne
pop
or
mov
loopne
mov
xor
mov
jmp
dec
inc
and
cli
pop
push
add
push
push
xchg
xchg
pop
adc
push
xchg
pusha
add
mov
cmpsl
and
jle
or
xor
les
xlat
mov
popf
or
sbb
xchg
insb
fsubl
cmp
mov
push
pop
xchg
bt
shlb
fcmovnb
xchg
mov
loop
divl
mov
jp
push
mov
addl
sub
cmp
inc
ffree
jge
lahf
mov
cmc
es
out
mov
mov
or
pushf
jle
ds
test
and
xchg
movsl
xlat
sbb
lret
adc
scas
jecxz
mov
push
pop
or
xchg
mov
sub
xor
sub
pushf
adc
das
in
subl
filds
cmc
out
inc
xchg
push
or
pop
xlat
jo
sub
nop
enter
xchg
sbb
xchg
push
cmp
dec
cmpsb
aad
lret
arpl
pop
push
mov
push
ss
and
xor
mov
into
pop
cli
repz
push
int3
pop
cmp
fdivrs
push
or
in
test
and
push
decb
ret
dec
xchg
fimull
lods
and
sbb
test
xor
inc
xor
sbb
shlb
rclb
cmpsb
mov
push
mov
sub
mov
adc
mov
mov
xor
jle
xlat
out
shll
js
add
mov
aas
mov
call
jae
into
cli
mov
or
mov
int
mov
mov
fcmovnbe
xor
or
xchg
je
fwait
sub
cwtl
jne
mov
fnstenv
cmp
aam
xor
jl
rclb
xor
les
or
sbb
sahf
sbb
xchg
in
repz
nop
imul
mov
sahf
push
xchg
test
and
hlt
into
lahf
and
testl
lods
cs
into
fisubl
mov
ljmp
dec
data16
cld
repnz
jb
es
movsl
sub
mov
mov
and
sub
push
inc
mov
xchg
dec
imul
gs
xchg
xor
pavgw
mov
jnp
insb
out
mov
imul
adc
mov
movsl
cmp
mov
pop
lds
es
pushf
icebp
ficompl
mov
or
pop
mov
shlb
mov
push
pop
jo
or
test
jnp
lea
test
xchg
and
test
mov
int3
push
or
sub
xor
addr16
push
shlb
loopne
sbb
and
cmp
aam
mov
add
add
in
jle
scas
aad
shl
push
test
rcr
mov
inc
xchg
adc
out
fsubl
rclb
fcmovb
mov
inc
inc
xor
mov
and
hlt
mov
add
and
mov
imul
add
daa
flds
sbb
sub
ret
adc
jae
xadd
jno
repz
inc
ret
dec
aad
mov
scas
aas
adc
pop
pop
mov
inc
aad
loop
jle
out
mov
inc
dec
mov
push
insl
test
test
std
mov
daa
out
fcoms
rcl
pcmpgtw
imul
in
ret
les
jns
mov
lahf
fisubrs
enter
push
outsb
cmp
aas
push
test
push
pop
push
lock
dec
jmp
xchg
dec
inc
fcmovne
sbb
test
rorl
add
shll
xor
cmp
dec
cld
or
jno
push
xchg
aam
ret
mov
nop
sub
cwtl
lock
test
mov
sti
sbb
test
sbbl
je
pop
pop
in
push
mov
mov
sub
aas
mov
push
jae
aas
add
addr16
jmp
in
push
insl
hlt
jp
mov
sub
ja
pop
popf
jno
adc
sti
sbb
pop
pop
arpl
xchg
sub
sbb
insl
pop
pop
push
xlat
dec
xchg
pop
mov
mov
push
bound
movsb
pop
push
lock
pop
cmp
xorl
mov
xchg
add
mov
popf
sbb
push
icebp
out
fcoml
lock
daa
sbb
adc
ss
and
xchg
fcompl
out
sub
xchg
push
dec
jmp
jne
push
pop
loope
gs
addl
imul
in
paddb
imul
lcall
fidivs
push
sbb
rcrb
push
lods
or
insl
dec
adc
or
insl
xchg
pop
popf
stos
inc
push
rclb
adc
popa
fnstsw
insb
filds
xor
pop
sub
cmc
xchg
sti
or
dec
pop
mov
testb
xor
pop
fbld
mov
lcall
shrl
push
jb
cltd
fs
bound
dec
mov
push
adc
cld
xchg
icebp
out
inc
or
and
std
dec
adc
fsts
sub
mov
adc
mov
dec
mov
je
sub
mov
ljmp
mov
mov
adc
loope
jecxz
jb
std
sbb
xchg
mov
enter
pop
add
sub
inc
mov
into
ret
stc
ror
popa
aad
lds
cwtl
outsb
imul
test
std
in
out
push
ret
aas
jo
sbb
clc
push
cmp
mov
stos
xor
addl
jp
ret
or
es
push
inc
dec
xchg
dec
pop
and
xchg
sbb
push
outsl
adc
adc
add
pop
xor
adc
mov
int3
add
insl
add
repnz
or
cmp
shlb
repnz
and
adc
mov
stos
test
mov
jmp
push
insb
xchg
xor
sub
mov
push
int
push
fsub
add
pop
mov
aam
outsb
test
add
dec
fsubrl
xor
clc
lea
fs
mov
idivl
data16
cwtl
jle
xchg
sbb
add
lods
lret
add
cmp
movsb
sbb
mov
out
mov
lret
ja
xor
scas
cmp
inc
es
inc
sbb
out
sub
xor
xor
mov
pop
clc
push
jmp
movsl
push
mov
xchg
lret
fbld
loope
divb
xchg
les
loop
xchg
in
in
push
sub
dec
movsb
lret
dec
call
out
daa
aad
sar
das
sub
popa
loopne
fsubrl
or
inc
ret
adc
mov
or
scas
loope
mov
cli
mov
push
pop
jnp
or
test
xor
mov
sahf
jecxz
aas
loop
in
pop
or
pop
cld
mov
xor
in
fs
ret
jo
mov
mov
ror
nop
jbe
cwtl
jns
int3
xchg
vsqrtpd
cld
jecxz
xchg
imul
push
bound
push
mov
jb
add
cli
adc
jmp
cmp
push
cld
xchg
xor
leave
mov
int
mov
das
mull
jge
ljmp
xchg
or
push
adc
or
out
repz
xchg
mov
call
mov
ss
shlb
lods
test
push
imul
add
inc
mov
cld
add
xchg
je
jno
cltd
rorl
mov
xor
fs
cmp
pop
lock
cld
out
dec
inc
movsl
push
inc
mov
xlat
out
xchg
or
jo
repnz
out
add
push
ss
ret
hlt
dec
ret
cwtl
loope
push
dec
adc
outsb
dec
xchg
dec
jl
nop
hlt
and
dec
mov
ret
mov
pop
xchg
movsl
hlt
xchg
arpl
pushf
or
xor
ret
jae
pop
scas
adc
rcrb
outsb
test
sbb
stos
mov
sti
mov
mov
psrlw
pushf
mov
dec
mov
jmp
ljmp
sub
int
jle
jl
cmp
and
and
pop
add
or
lea
test
cli
in
fimuls
in
mov
aad
adc
sbb
pusha
icebp
adc
imul
mov
dec
pop
je
and
pop
xchg
jne
cmp
xlat
push
fistpl
int
push
dec
sub
and
nop
inc
rol
std
hlt
sbb
mov
std
xcrypt-ecb
cmpsl
dec
jmp
push
lods
stos
stos
imul
lods
data16
dec
jno
and
out
push
icebp
xchg
mov
sub
out
jbe
fisubl
iret
add
lods
shlb
jae
inc
pusha
push
dec
push
fidivl
pop
and
xor
push
loop
stc
lahf
add
int3
inc
or
data16
in
inc
fisttpl
and
cmpsb
add
je
xchg
stos
xchg
cmpsb
outsb
andl
add
out
lock
push
xchg
and
pop
imul
inc
mov
inc
cmp
mov
jb
cltd
dec
std
in
and
scas
js
pushf
aaa
iret
jle
push
movsb
mov
adc
push
jbe
cld
inc
out
jp
dec
add
jo
sti
and
add
xchg
psadbw
nop
sbb
ss
inc
add
es
mov
mov
pop
mov
jno
mov
jmp
ja
js
or
push
fldl
pop
pushf
mov
mov
adc
xchg
rcrl
rclb
adc
and
icebp
cli
push
sub
push
int
fisubl
data16
test
mov
test
repz
ficoml
lock
dec
ds
gs
in
sbb
xchg
push
mov
mov
adc
jge
push
inc
sbbb
inc
mov
mov
rcrb
mov
pop
clc
mov
test
ret
jb
pop
xchg
mov
push
xor
xchg
push
cmp
outsl
sahf
cld
jno
sub
inc
sbb
cmp
sbbl
cwtl
bound
outsl
sbb
pop
mov
divl
jne
cli
jns
mov
mov
dec
rorl
lret
stos
push
loopne
imul
mov
test
insl
bound
push
cwtl
insb
test
in
or
out
mov
enter
leave
dec
int3
sbbb
pusha
fdivrl
repnz
rclb
jl
out
pop
jecxz
loope
dec
mov
les
or
out
mov
or
lahf
in
adc
ds
andw
jae
dec
sub
hlt
or
or
into
dec
bound
dec
daa
xchg
scas
call
repz
push
iret
outsb
push
adc
xchg
sbb
cltd
rorb
loope
hlt
push
add
adc
push
loope
push
iret
mov
out
ss
daa
push
imul
stos
inc
mov
mov
adc
into
add
dec
push
cs
jl
dec
pop
sub
mov
jmp
sub
imul
adc
pop
lods
insl
push
addr16
gs
out
cmp
ret
fistpll
mov
xor
pop
pop
scas
inc
andb
push
call
push
mov
jnp
outsb
or
mov
mov
mov
rcrb
pop
and
jbe
push
jne
fmuls
icebp
push
aam
jnp
icebp
add
fldcw
jbe
add
xor
add
test
inc
jg
xchg
stc
cltd
pushf
xor
adc
int3
inc
xlat
stc
lods
jae
sahf
rolb
xor
xorl
sbb
insl
xchg
es
cmp
loope
jg
sub
jecxz
cmp
cs
xchg
fisttps
xchg
cmp
push
stos
jo
sbbb
ss
ss
mov
ljmp
repz
fildll
in
popa
ret
ljmp
dec
daa
movb
repz
call
adc
cmp
rorb
cld
sbb
fistl
lcall
adc
inc
jbe
pop
inc
push
jle
pushf
xchg
mov
movsb
mov
andb
and
int3
scas
pop
out
std
inc
rcll
repz
inc
sbb
idivl
imul
xor
inc
popl
cs
fs
andl
repz
sub
pop
mov
add
jp
mov
mov
std
fldcw
mov
fwait
mov
sub
ret
test
fdivrl
jle
inc
bound
fstpl
loope
and
icebp
fnstenv
cli
xor
dec
outsb
mov
test
mov
loopne
jns
xorl
mov
sbb
add
xlat
sbb
jo
add
jbe
xor
out
jne
mov
aad
cmpsl
mov
xchg
xchg
jno
js
icebp
mov
cs
pop
lret
in
inc
testl
out
and
mov
xchg
loope
mov
add
incb
xchg
scas
mov
xor
rcrb
popf
push
push
jp
xchg
movsb
enter
sbb
into
lods
dec
xchg
xchg
les
jecxz
les
leave
and
rolb
cltd
mov
push
inc
inc
sub
lods
addr16
test
cmp
into
je
push
add
pop
push
inc
dec
mov
mov
fldenv
pop
aam
notb
ret
in
jns
mov
mov
je
pop
scas
adc
sbb
int
dec
cs
fxch
int3
dec
dec
out
pop
mov
fisubrs
sub
sbb
test
and
pop
shlb
mov
adc
jmp
icebp
mov
mov
lahf
in
push
int3
pop
and
jbe
jnp
pop
lds
sahf
fwait
into
lcall
notl
cmpb
int3
movsl
gs
add
xchg
inc
das
popa
mov
xlat
dec
lss
ss
add
ljmp
bound
int3
bound
popa
ja
xor
and
fmull
rolb
loopne
sahf
rclb
cmpsb
leave
dec
add
pop
ja
jl
test
mov
gs
jmp
outsb
inc
mov
xchg
shrb
and
dec
xchg
ja
xor
inc
mov
loop
dec
or
mov
outsb
mov
or
ja
inc
stos
mov
pop
ficoms
into
les
aaa
test
ficomps
pop
sahf
pop
push
mov
scas
jmp
pop
push
ror
pop
pop
mov
ljmp
jp
inc
adc
cmc
loop
int3
mov
push
push
mov
mov
fimull
cli
add
ss
jno
cmp
stc
fdivs
push
and
lcall
xchg
nop
clc
ss
pop
ror
ss
outsl
jne
jnp
out
adc
push
or
mov
insl
mov
cltd
mov
xchg
xchg
mov
mov
fbld
movsl
sarl
adcl
mov
xchg
xchg
cwtl
aam
sarl
dec
mov
dec
sbb
jns
dec
ret
push
cmpsb
fisubrs
into
cmp
push
stos
jno
lods
sbb
lahf
add
sub
lahf
sbb
sti
lea
cltd
ljmp
cmpsb
jle
and
hlt
cli
xor
push
std
data16
push
sub
add
scas
mov
or
imul
ss
sub
mov
je
fwait
pop
or
xor
xor
lcall
push
int3
mov
dec
stos
out
test
jmp
lahf
xchg
shll
or
cmp
jb
xlat
adc
inc
cmp
xchg
jne
mov
dec
xchg
dec
sbb
push
sbb
insl
pusha
mov
jnp
insb
pop
cmp
lds
es
out
mov
mov
popf
xor
movsl
or
stos
or
jb
push
mov
dec
dec
insb
arpl
notb
std
dec
pushf
arpl
add
xor
dec
fimull
inc
roll
stos
cld
jno
xor
inc
lea
push
push
push
rorl
xchg
add
pop
cmp
add
pusha
aam
addr16
lret
mov
cltd
js
enter
push
sub
outsb
dec
mov
lods
pop
and
movsb
aad
test
add
popa
jb
xchg
cli
or
popf
std
adc
jg
push
gs
roll
xchg
mov
das
xchg
mov
in
xchg
and
jle
aam
adc
lcall
dec
repnz
dec
rcll
loope
in
add
imul
pop
push
rcrb
adc
mov
popf
cmpsb
outsl
mov
subb
mov
inc
pop
pop
xchg
pop
xchg
outsl
and
jne
xchg
push
xor
add
ficompl
push
xchg
and
xchg
xchg
fisttpl
outsl
and
sbb
mov
inc
inc
pop
jnp
xor
pusha
or
cmp
data16
test
jle
dec
pop
ljmp
xor
out
repnz
test
add
imul
sbb
sbb
mov
or
adc
pop
fmull
test
sub
mov
push
sub
push
test
mov
inc
in
jae
std
adc
sbb
insl
orl
or
push
addr16
aaa
movsb
jo
mov
and
xor
or
cs
and
inc
addl
or
movsl
mov
faddp
pop
xor
test
dec
fcmovne
jo
adc
inc
inc
push
imul
mov
jecxz
scas
or
les
orb
mov
imull
xor
mov
sbb
jecxz
push
mov
push
iret
out
sub
sub
push
and
jbe
push
jecxz
push
pop
cmp
adc
jae
mov
outsb
xchg
mov
sub
jae
cmp
lock
sub
hlt
push
std
stos
aas
scas
ja
aad
mov
inc
jae
mov
outsb
pop
incl
pop
rcr
test
clc
fildll
or
inc
push
dec
psubsb
pop
fmuls
sbb
lret
push
jg
mov
sbb
int3
mov
ljmp
and
mov
add
xor
cli
sub
mov
cli
cmp
sub
bnd
sbb
mov
xchg
mov
or
mov
enter
mov
cs
add
and
bound
ja
sbb
inc
repz
lret
cmc
xor
loope
xor
idivb
or
mov
adcb
scas
jge
xchg
pop
add
cmpsl
rol
and
shrl
pop
cs
mov
and
sbbb
xor
and
test
int3
lea
je
scas
inc
test
in
addr16
je
ljmp
lea
xchg
lods
adc
mov
cmp
fcmovbe
mov
hlt
pop
mov
stos
sbb
rorb
scas
mov
inc
inc
xor
mov
xchg
inc
push
loop
sbb
ficomps
inc
cmpsl
push
cltd
xchg
imul
cmp
cmp
jge
loope
shl
inc
test
dec
daa
dec
jae
ret
xchg
push
in
es
mov
mov
adc
insb
pop
fldl
dec
mov
int
add
pop
es
xorl
pop
aaa
mov
roll
mov
sub
push
lcall
test
push
loopne
outsb
push
push
outsb
movsl
fucom
shr
lea
adc
shl
add
mov
or
mov
pop
push
xor
shll
push
xor
push
adc
add
mov
popf
inc
jecxz
sbb
add
adc
fucomp
mov
into
gs
push
inc
clc
leave
or
and
dec
fisttps
out
sbb
pop
imul
out
xor
pop
mov
stc
push
adc
sbbl
out
sub
mov
lcall
movsl
out
leave
adc
push
jecxz
xor
dec
cmp
jle
add
aas
aaa
cmpb
popf
cmpsl
push
fcomps
jp
mov
jg
lret
aad
dec
jnp
pop
cmp
lds
in
xadd
dec
jg
movsb
cmp
jbe
outsl
rorl
negl
dec
mov
cmp
cmp
cmpsb
leave
cli
jmp
ret
outsb
pop
mov
push
sbb
jle
loop
pushf
scas
outsb
scas
adc
icebp
and
es
ljmp
lret
je
add
lret
dec
pop
jge
or
and
mov
push
femms
fwait
cmpsl
pop
xor
mov
push
adc
dec
in
push
cli
cmp
mov
and
insb
addr16
mov
rcrb
dec
or
sti
push
bound
lock
std
cltd
hlt
nop
std
push
pusha
pop
mov
aad
stos
pop
push
adc
pop
sub
pop
xor
mov
dec
int
cmpsb
jg
push
mov
stos
popf
outsb
sbb
dec
sbbb
fistl
ja
mov
pop
and
ret
and
scas
cmp
sbb
test
xchg
fldl
outsb
stos
stos
into
jbe
push
dec
test
sub
cmp
and
cmp
xchg
inc
lret
fisubs
enter
fisubl
adc
test
sbb
add
lcall
lret
fptan
mov
xchg
xchg
jle
imul
xchg
js
dec
mov
mov
lods
adc
jne
mov
push
ss
rorl
cwtl
pop
cmp
sar
aad
mov
rcr
sbb
jno
aaa
stos
fstpl
ss
jae
fprem1
mov
adc
add
popa
push
insl
mov
in
stos
in
sub
rcll
outsl
mov
jle
out
call
xchg
fs
lods
inc
pop
lods
out
push
repnz
test
jmp
pop
xchg
dec
push
std
into
xchg
add
add
inc
ficoml
and
pop
loop
lds
or
cmpb
stos
push
inc
sub
mov
loope
push
int
jb
test
insb
mov
sbb
rcrl
mov
rorb
add
inc
call
fwait
pop
cld
out
mov
cwtl
inc
repnz
jae
callw
add
add
mov
stos
mov
pop
mov
fucomp
push
insb
out
stos
ja
insb
call
inc
lock
aas
aam
sub
imul
in
mov
mov
je
negb
jle
cmp
mov
cmp
insb
mov
jecxz
lods
insl
pop
dec
xchg
fistpll
adc
or
sub
push
rcl
sub
fs
lahf
out
or
ljmp
mov
movsl
xor
int
adc
fs
or
mov
pop
inc
leave
lods
test
jmp
or
sbb
xor
inc
aas
mov
xchg
sub
shrb
xor
mov
sub
mov
pop
in
hlt
lock
adc
push
insl
outsb
push
jnp
pop
cld
mov
push
stos
lahf
out
fs
xor
sti
adc
inc
pop
mov
push
pop
push
roll
cmp
and
sub
dec
pushf
inc
pop
xchg
dec
dec
mov
les
jno
fdivl
outsb
ss
mov
inc
mov
push
das
cs
xor
inc
mov
mov
cmp
pop
xor
inc
mov
outsl
mulb
je
xor
pop
jp
mov
add
pusha
push
xchg
mov
pop
dec
dec
jmp
jbe
sub
push
in
pop
jo
clc
fsubr
addr16
mov
lock
repnz
push
cmc
idiv
and
jo
pop
xor
in
hlt
or
and
std
lahf
gs
cmc
cmpsl
cmc
dec
and
repnz
sbb
jo
jmp
std
dec
imul
jg
leave
repnz
inc
mov
fs
shll
xchg
and
lret
push
push
adc
jno
enter
inc
jmp
sub
fs
jmp
mov
das
xchg
shrl
cmp
or
shrb
mov
test
ljmp
aad
fildll
pop
pop
aam
lret
xorb
inc
mov
push
push
cmp
out
pop
mov
or
mov
stos
repnz
lcall
imul
jmp
bound
gs
insl
xor
aam
ljmp
push
cmp
jb
xchg
aad
shll
test
lods
inc
mov
xchg
std
lret
xchg
ja
aam
adc
scas
xchg
sbb
push
push
pop
shl
mov
outsb
test
shlb
cmp
push
subb
mov
lea
pusha
rcll
mov
cs
dec
dec
sub
lcall
pop
lods
ljmp
mov
mov
les
cmpsb
jmp
out
scas
xchg
aad
cltd
lret
fcompl
int
fwait
add
repnz
pop
mov
jne
cmp
mov
cmp
xor
mov
int
call
movsb
jae
jbe
iret
fwait
push
or
insb
lret
inc
or
cmp
mov
xor
push
rcl
ds
sub
ljmp
int3
add
shr
adc
stc
lock
in
pop
push
insl
cmc
call
and
sbb
gs
inc
test
cmp
insb
mov
pop
dec
and
lret
mov
jg
mov
add
pop
mov
stc
stc
jge
stc
cmp
pop
and
inc
mov
ret
xchg
loop
xor
cmp
stos
movsl
cmp
xchg
mov
fwait
call
dec
xor
test
in
jns
mov
and
pushf
idivb
xchg
mov
pop
xor
mov
movsb
sub
push
xchg
subl
sbb
inc
sbb
add
mov
fistpl
mov
test
ss
push
mov
bound
or
jge
shlw
sbb
or
jae
adcb
push
pop
loop
imul
stos
sub
xchg
mov
pop
pusha
testl
insb
es
clc
test
jne
arpl
sub
loopne
and
adc
pop
sbbb
inc
pop
outsb
ficomps
cltd
and
popa
mov
addr16
dec
fimuls
lea
sub
stc
cmp
xchg
std
adc
sbb
sbb
insl
xor
cltd
inc
xchg
adc
dec
ret
xchg
jmp
nop
push
bound
sbbl
jb
and
nop
std
xor
js
cmc
sbb
jp
les
xchg
inc
dec
pushf
mov
sbb
test
push
lret
ja
popa
cs
pushf
push
xchg
add
sbb
sbb
xor
pop
mov
xlat
dec
andb
sbb
jns
pop
xchg
mov
xchg
or
pop
dec
rorb
sbb
or
gs
inc
xchg
inc
mov
jae
repz
add
lret
jnp
fs
xchg
push
das
imul
mov
sub
push
fstpl
ror
adc
test
jecxz
bound
scas
pop
daa
or
fmuls
push
and
push
fdivs
mov
jno
xor
xor
aam
inc
iret
xchg
lods
orl
aas
lock
clc
ljmp
jae
ljmp
test
add
mov
mov
fmull
xor
lret
lret
out
adc
fldl
xlat
aad
mov
jne
les
sahf
movsb
scas
jb
or
adc
jo
and
jbe
imul
js
sbb
fcompl
dec
mov
outsl
pop
test
and
out
hlt
iret
pop
pop
movsb
imull
mov
or
dec
mov
push
inc
stos
lods
add
mov
sbb
stc
or
pop
xor
sbb
mov
mov
cli
lret
hlt
mov
pop
xchg
adc
mov
aam
sbb
xchg
jg
inc
ret
bound
cmp
jecxz
pop
fstpl
push
inc
xchg
xlat
adc
shll
mov
mov
or
mov
dec
cmc
push
imul
jnp
aaa
out
aad
outsb
movsb
lret
push
mov
sbbb
sub
or
fwait
adc
shlb
mov
xor
testl
push
aas
xor
push
push
and
adc
adc
je
out
push
jp
in
push
insl
inc
sti
incl
ret
mov
pop
leave
movsb
minps
fisubrl
and
pop
loope
shll
add
dec
popf
mov
pop
xlat
mov
adc
mul
push
push
xchg
mov
mov
es
jl
lret
nop
clc
jb
pop
aad
mov
insb
call
insl
xor
mov
call
mov
arpl
in
shlb
adc
aas
jecxz
loopne
adc
jmp
and
add
push
iret
aam
sahf
bound
or
sub
xor
sarl
daa
rcr
sub
dec
sbb
pop
pop
ja
in
std
xor
inc
les
and
and
push
int
cmpsb
rcrb
out
out
lret
mov
loop
into
mov
lds
out
dec
add
mov
push
fisttpl
mov
ljmp
push
lahf
popl
aam
sarb
popf
aad
insb
aaa
test
daa
out
sbb
pusha
outsb
inc
inc
ss
push
xchg
repnz
mov
jbe
and
sbbb
scas
fdiv
cli
out
sbb
les
add
jle
pop
mov
dec
jne
cmc
pop
push
and
sub
insb
xchg
xchg
push
add
inc
adc
adc
cmp
es
stc
lea
mov
xchg
mov
aas
mov
adc
inc
sub
xchg
arpl
loop
fnstenv
mov
mov
jmp
mov
jne
out
sbb
pop
xchg
cmp
jnp
addr16
inc
sub
test
pop
rclb
add
pop
ja
shlb
aam
jnp
enter
and
cld
mov
mov
xchg
mov
pop
dec
cmp
inc
adc
imul
repz
xor
nop
gs
addl
cmp
add
js
int
xor
adc
aad
mov
cmc
cmp
test
cmpsl
xchg
shll
negb
subl
xor
mov
push
push
sub
push
fwait
and
push
sbb
es
pushf
push
sbb
and
dec
lods
push
pop
outsl
xor
ret
in
jecxz
sarb
dec
addr16
loope
fs
push
ret
push
dec
jns
mov
mov
add
jmp
mov
inc
fs
or
mov
rcrl
adcl
imul
adc
ljmp
sub
fbld
jg
jecxz
shll
or
add
pushf
outsl
arpl
xchg
fst
je
adc
clc
push
dec
xor
push
scas
std
pusha
xchg
mov
insl
lods
add
xchg
fsubrl
xor
sub
xor
into
aam
daa
rol
in
lds
xor
xchg
pop
cs
sahf
mov
js
inc
sar
xor
fidivrs
add
pop
popf
pop
inc
cmp
ss
mov
in
shlb
fimuls
mov
and
pop
pop
testl
and
sbb
es
mov
rol
mov
push
xor
mov
pusha
lcall
cld
in
push
mov
push
test
push
dec
jne
jae
inc
into
cmp
lcall
inc
iret
imul
orl
clc
cmp
cmc
fiaddl
or
mov
roll
cmp
xchg
lds
mov
icebp
mov
lods
jg
fbld
test
outsb
ret
add
inc
pop
test
mov
je
scas
in
xor
ret
dec
adc
jo
pop
sub
inc
test
xor
outsb
or
test
push
shrb
xor
addl
xor
imul
dec
push
xchg
pop
xchg
fisubrs
lds
dec
jl
push
push
scas
ret
or
dec
add
lods
ljmp
icebp
add
pop
adc
mov
dec
jnp
or
je
push
mov
in
pop
mov
leave
jle
inc
leave
nop
leave
mov
pop
sbb
adc
loopne
xchg
or
cli
mov
and
les
xor
stos
mov
and
test
aad
mov
lret
mov
xchg
and
inc
int
sbb
cmpsb
and
insl
pop
dec
xchg
and
clc
mov
pop
mov
loop
push
mov
mov
mov
add
and
pop
cmp
inc
sahf
imul
fs
aam
js
cmp
ljmp
xchg
aam
mov
jmp
jle
fists
jns
and
and
ja
andl
jg
mov
shl
dec
iret
add
mov
ja
clc
loope
arpl
push
ret
jnp
xor
inc
sub
xchg
and
pop
fs
repz
lods
xchg
xorl
push
adc
ljmp
mov
in
mov
test
adc
movsl
ds
mov
mov
and
fidivrl
test
fisubrs
mov
add
rcl
cmp
sbb
xchg
inc
jge
mov
in
pop
jnp
cmp
gs
lods
mov
add
andb
xchg
data16
repz
push
movsb
jl
dec
fldenv
mov
gs
imul
jae
dec
jg
dec
into
lcall
hlt
mov
jp
fs
std
cmp
out
aam
push
push
fdiv
jg
lret
mov
or
or
sub
push
insb
cmp
dec
out
es
xchg
jne
sti
pop
dec
jecxz
loopne
jl
mov
inc
inc
arpl
mov
jns
divb
in
icebp
lahf
aam
int
adc
or
dec
adc
sbb
or
cmp
shrd
stos
cmp
jno
mov
xor
roll
aaa
cmpsb
pop
ficoml
mov
test
and
imul
push
inc
dec
shl
outsb
xor
outsl
sub
push
lods
shrb
and
stos
loopne
je
xchg
cld
into
pop
pushf
enter
mov
popfw
xchg
dec
dec
dec
out
lock
sub
in
fs
mov
mov
dec
pop
jb
clc
ret
inc
sub
sahf
fstpl
mov
rorl
out
gs
sbb
mov
sahf
loopne
add
js
mov
inc
idivl
lods
lret
sub
jae
sbb
sub
xchg
popa
push
fwait
lods
out
jae
fistps
xor
pop
icebp
imul
inc
push
nop
out
enter
mov
cs
ret
inc
movsb
xchg
push
push
in
jp
cs
js
jl
into
and
push
jl
mov
imul
mov
test
xchg
cli
int
cltd
xlat
loop
xor
mov
aam
rdpmc
imul
xchg
cmp
test
sub
sahf
sti
mov
icebp
outsb
mov
ret
call
stos
inc
rcrl
outsb
test
in
int
in
js
mov
sarl
push
inc
jg
imul
add
mov
repnz
xchg
xchg
or
call
es
pop
sbb
or
fiaddl
push
add
out
push
scas
in
call
fildl
jb
rcll
clc
xlat
aam
sbb
movsl
imul
icebp
scas
jno
call
fildl
mov
jns
loope
bound
xchg
mov
push
push
and
cmpsl
push
xchg
mov
pop
adc
mov
outsb
or
ret
lock
andb
pop
jbe
push
sti
andl
inc
inc
cmp
leave
jl
dec
jmp
cld
in
push
inc
shrb
sub
das
xchg
sub
int
mov
repz
insb
clc
sbb
sub
adc
push
mov
cmc
addps
sbb
mov
pop
inc
mov
iret
or
mov
jne
pop
lret
push
in
mov
adc
or
shr
dec
xchg
stc
imul
int
sbb
cmp
imul
xchg
inc
int3
imul
sub
test
jb
xlat
std
adc
mov
lret
sbb
jnp
pop
push
sti
mov
adc
cmp
mov
sub
test
inc
and
jle
sbb
add
mov
int
jnp
lcall
or
inc
loop
xchg
dec
pop
or
movb
nop
shlb
mov
fdivr
rcr
stos
or
jns
jle,pn
xor
mov
jns
push
btc
add
dec
jle
jle
int
call
dec
addr16
lret
popa
jo
fsubrl
cwtl
movsl
push
xchg
lock
sub
pop
mov
test
mov
push
fsubl
sbb
mov
bound
outsl
cltd
xorl
xchg
push
test
inc
bound
sahf
das
add
xor
inc
push
mov
sbb
jnp
push
xchg
and
lods
pop
imul
loope
repz
xor
mov
cltd
xchg
loopne
lds
sub
sbb
test
mov
sti
push
pop
lret
sub
loop
sti
jne
jbe
adc
jg
sub
adc
pop
dec
mov
jmp
or
sahf
lret
add
in
mov
std
sbb
cmp
adc
mov
addb
jnp
stos
sbb
sbb
ret
fnstcw
cmpsl
ljmp
fdivr
scas
or
shll
fistpll
sbb
ss
cmpsb
out
mov
arpl
push
or
and
fucomi
dec
rclb
push
xlat
jl
sbb
dec
out
mov
sub
xchg
sbb
scas
cmp
mov
inc
sbb
les
cmpsb
sub
fimuls
shlb
ja
popf
sub
xchg
xchg
push
mov
or
jp
jne
jle
sbb
or
add
cld
mov
pop
fimull
in
aam
push
xlat
and
btr
lods
or
daa
xlat
mov
fisubs
xchg
clc
push
cmp
mov
mov
sbb
push
imul
enter
imul
dec
out
hlt
inc
add
sarb
fisttps
lret
jb
imul
mov
test
inc
mov
ds
jbe
sub
lahf
out
and
adc
xchg
add
xor
stos
push
iret
popf
sbb
mov
jno
mov
dec
adc
pop
std
jge
xor
push
mov
lcall
push
adc
out
cwtl
push
sbb
imul
in
cmpl
sub
jb
push
cmp
cmp
mov
xor
inc
outsb
jnp
add
add
roll
rcr
mov
jp
pop
dec
adc
addr16
or
ss
sub
xor
jmp
dec
jecxz
and
push
adc
fisubl
sbb
ja
fld
stc
pop
aad
xchg
lods
js
ljmp
fstpl
stos
mov
cmpsb
xor
sbb
inc
outsb
adc
imul
testb
sub
fs
aas
mov
or
mov
insl
pop
jp
je
loope
or
cmpsb
out
popa
test
mov
gs
scas
xor
mov
out
andl
cmp
sbb
shl
sub
enter
jae
or
cmp
jae
mov
enter
std
repnz
cmp
dec
mov
inc
adc
push
pop
pop
and
shl
or
mov
jne
sbb
rcll
out
push
fcoms
sub
les
xchg
pop
jno
fwait
xchg
xchg
outsl
mov
sbb
repnz
mov
bound
ljmp
ficomps
sti
jg
lret
xchg
push
mov
mov
sub
rorl
std
leave
xchg
push
jmp
and
cli
das
aaa
popa
pop
jp
pop
sbb
and
lods
or
mov
pop
rorb
push
repz
mov
jmp
mov
add
pop
in
inc
sbb
jg
aas
or
scas
xchg
add
pop
push
inc
push
stos
std
lret
gs
dec
and
xor
xchg
hlt
adcl
repnz
lock
repnz
push
shrl
stos
leave
sahf
pop
jecxz
fdivrs
mov
jp
sub
xor
or
pop
pushl
movsl
mov
in
dec
jg
mov
or
pop
outsl
pop
aas
adc
bnd
sahf
in
ret
dec
into
sub
ret
test
mov
mov
jmp
lahf
popa
dec
sbb
inc
push
add
shrl
aas
popa
mov
pop
cmp
inc
jp
fcoml
add
out
pop
pusha
movsl
out
xchg
rclb
dec
xchg
jecxz
sub
inc
xor
xchg
jle
in
pop
or
loop
or
lods
movsb
inc
leave
popa
dec
add
xchg
add
je
mov
pushf
fadds
jne
pop
mov
cld
cmp
out
aas
inc
mov
mov
sahf
mov
mov
pop
cmp
push
test
and
push
push
stos
xor
bound
imul
aas
ja
push
jp
shrb
pop
decl
shll
sub
push
push
test
sub
adc
fdivrs
sbb
rcrb
fstps
or
pushf
inc
inc
xchg
pop
pop
or
inc
cmp
lret
pop
dec
ja
mov
xlat
jne
add
xor
loope
loop
fcmovb
mov
cwtl
xchg
daa
movl
test
loope,pn
and
sub
rcrl
mov
arpl
cmp
outsb
xchg
loopne
jmp
int
cmp
out
push
and
add
enter
mov
pop
jmp
sub
adc
dec
jle
mov
repz
call
out
inc
jnp
stos
out
sti
mov
pop
mov
jnp
sbb
mov
xchg
notb
shll
call
outsl
fldenv
cld
jl
fisubrs
mov
imul
es
imul
sub
mov
je
ljmp
pop
mov
add
movsb
mov
push
fsubrl
mul
or
sbb
out
inc
add
mov
or
lods
and
shl
sbb
imul
cmpsb
pop
or
cmp
mov
fstpt
mov
add
mov
int
pause
cmpsl
add
fistpll
mov
hlt
adc
pop
jp
mov
and
push
jg
or
cmc
jbe
outsl
jo
cvtdq2ps
stos
int
jl
js
or
adc
or
notb
jle
push
jecxz
insl
addr16
aaa
fistpll
mov
xchg
add
shlb
insl
dec
jg
jne
lret
fmulp
cwtl
repnz
mov
cmp
mov
xor
lret
push
push
shll
mov
cmp
or
sbb
js
jge
push
subl
into
and
pop
adc
mov
mov
in
cmpsb
outsl
sub
sub
push
insb
push
xchg
xlat
inc
popa
xchg
jp
add
sbb
lahf
scas
out
mov
mov
sahf
sub
int3
pop
push
or
push
inc
aas
and
or
adc
dec
cwtl
movsl
adc
mov
mov
bound
cltd
jbe
inc
das
sub
test
pop
xchg
jnp
pushf
stos
daa
mov
pop
sysret
mov
leave
push
lea
pop
aas
dec
sub
pop
scas
inc
cwtl
cmp
mov
and
xchg
nop
fadds
shrb
cmp
cmp
or
sbb
mov
stos
aaa
shll
cmp
mov
stos
negl
adcl
push
and
jge
sub
mov
outsl
xchg
mov
sub
xor
push
test
cmp
lret
leave
repz
xchg
mov
inc
sub
lahf
xchg
leave
pusha
mov
jg
adc
lods
or
cltd
std
aam
inc
out
xor
std
pop
sub
test
icebp
movsb
cmpsl
and
or
gs
jns
scas
mov
mov
or
mov
inc
inc
xchg
mov
mov
mov
nop
adc
inc
jecxz
adc
sti
cmp
pop
jns,pt
add
hlt
xchg
push
or
out
sbb
rcrb
xlat
dec
loopne
mov
inc
stc
xor
xor
sub
mov
mov
cmp
pushf
xchg
fbstp
ret
cmp
xchg
mov
xor
adc
lret
fs
test
mov
xchg
jbe
pop
push
rclb
mov
pop
fadds
loopne
aam
xor
aas
es
jle
pop
test
xorl
xor
push
js
cmp
fs
in
xchg
str
cmp
jle
add
mov
xor
dec
dec
xor
in
aaa
fcompl
repnz
add
call
lock
stc
cmp
inc
clc
inc
mov
or
popf
sub
add
and
out
jo
cli
sarb
jecxz
cs
fcoml
ljmp
les
cmpsb
xchg
sub
adc
and
inc
push
lea
mov
mov
int3
jg
xor
mov
icebp
xor
push
sbb
call
rcrb
mov
xor
push
fstpl
jb
mov
pusha
js
sbb
pop
in
shll
cmp
pop
dec
lock
leave
pop
stos
orl
push
cmp
dec
push
lret
lods
sub
test
into
mov
cltd
clc
mov
dec
leave
insb
jg
lahf
push
stos
shrb
jb
imul
sbb
fldenv
sub
popf
test
sub
rorl
xor
pop
outsl
xchg
test
jne
mov
xlat
js
push
lret
in
jp
adcl
ja
rorl
sbb
fsubl
hlt
cmp
roll
pop
adc
sub
add
xchg
dec
pop
std
jne
push
cmc
add
xlat
sub
fistps
inc
out
ffreep
dec
clc
sbb
repz
mov
jae
or
cli
rclb
mov
imul
iret
scas
or
cmp
movsl
aas
rcrl
sahf
dec
jns
mov
outsb
pop
aaa
ja
sbb
or
in
and
adc
mov
and
sub
xchg
fmul
xchg
add
adc
pusha
out
das
cwtl
mov
xchg
pusha
mov
jmp
sbb
inc
xlat
dec
push
mov
stos
inc
test
sub
jg
test
xchg
sbb
addr16
les
push
sub
pusha
repz
jle
dec
mov
adc
push
imul
leave
ds
insb
jge
xchg
add
shlb
call
shrb
loop
pop
mov
sbb
pop
xor
repnz
push
mov
sbbb
je
lock
sahf
cmp
ss
adcb
pop
push
jp
mov
movsb
hlt
imul
sub
popa
pop
ret
pop
mov
push
pop
cmc
fnsave
lods
mov
cmp
stos
hlt
out
dec
and
dec
pop
sbb
jp
or
xor
lahf
mov
mov
stc
je
inc
fwait
ja
fmuls
mov
dec
repz
addr16
lret
fistpl
dec
xchg
das
lcall
xchg
inc
jle
mov
cli
fs
jp
cmp
or
add
aas
repnz
dec
lret
push
mov
mov
into
push
in
pop
mov
inc
adc
gs
popf
inc
fcom
fistl
xor
fisubs
shl
mov
add
cmp
and
or
call
scas
pop
dec
ss
into
pop
in
or
mov
nop
stos
mov
stc
xor
enter
out
pushf
das
or
pavgw
adc
jae
adc
xchg
hlt
dec
out
sbb
and
pop
jp
sub
ljmp
mov
xchg
pop
scas
repz
lcall
sub
movsl
fs
sub
in
pop
mov
dec
in
popa
push
in
jmp
decb
shrl
cmp
jl
fwait
clc
pushf
ret
push
cmovb
or
mov
jns
lcall
das
xor
jecxz
mov
std
fidivrl
scas
sub
jmp
bound
cld
add
add
cmp
bound
push
lods
mov
test
int
ret
cltd
cmp
sub
data16
push
scas
xor
and
cmp
aad
cmc
pop
aas
repz
in
insb
cmp
adc
fs
mov
cltd
or
add
mov
mov
lahf
cmp
inc
leave
popf
rcrb
sti
hlt
jecxz
inc
fimull
mov
repz
sbb
fisubrs
cltd
jno
and
sub
or
loopne
mov
and
sbb
in
aad
adc
repnz
jnp
stos
xor
out
add
xchg
scas
out
cmc
cmp
sbbl
pop
inc
ret
or
pop
mov
push
dec
ret
xor
lea
cmp
xor
xor
pop
push
mov
mov
xchg
sti
shrl
or
adc
mov
cmp
pop
sbb
pop
mov
jl
adc
vhaddpd
jl
jno
mov
sti
jge
lods
xchg
repnz
and
popa
add
jbe
mov
add
ja
mov
popf
sub
push
mov
inc
sub
sar
icebp
testb
outsl
stos
fimuls
jae
out
fwait
out
xor
adc
fisttpl
push
popa
xchg
cltd
ds
xchg
ja
pusha
enter
je
xor
mov
push
inc
xchg
push
jp
push
jp
leave
ds
scas
pop
jo
adc
sub
adc
pop
xchg
mov
mov
movsl
cs
cwtl
sbb
inc
adc
adc
xchg
cmp
imul
mov
mov
xchg
dec
push
leave
push
pusha
add
std
mov
pop
test
inc
jno
cli
mov
js
or
das
iretw
jae
out
cmp
cmpsl
push
das
ret
jbe
andl
xlat
add
push
mov
sbb
daa
sub
sub
mov
popf
test
loopne
aas
lods
push
test
xor
jno
pop
incl
push
pop
out
movsb
mov
hlt
xor
sbb
mov
mov
ret
mov
mov
mov
movsb
add
testb
xor
pop
cmp
sbb
jg
push
mul
mov
xchg
dec
and
arpl
xchg
mov
jp
out
xchg
push
sbb
xchg
dec
pop
lods
out
push
jmp
rorb
stc
mov
into
mov
inc
mov
mov
pushf
push
cmp
lret
cltd
insl
adc
adc
and
mov
pop
int
push
jle
fidivl
shl
lds
lea
addr16
sub
or
xchg
pop
inc
cltd
pop
shll
mov
add
cmpl
push
cmp
addr16
mov
nop
cmpsb
and
enter
les
cli
sbb
loopne
push
and
pop
xchg
fs
mov
ret
and
in
ljmp
cmpl
xchg
std
xchg
jg
leave
push
addl
das
js
and
nop
sub
hlt
lret
inc
jp
push
in
pop
stos
out
ficomps
xchg
lahf
dec
sti
sbb
sbb
loopne
xor
gs
loopne
test
mov
int
jp
cmp
mov
xor
divb
stc
cmp
addps
jnp
movsl
in
jle
adcl
icebp
xor
in
ret
test
dec
jle
or
imul
in
inc
cwtl
inc
sbb
fs
or
mov
sahf
add
jne
jmp
arpl
pushf
push
test
pop
pop
mov
jnp
and
ljmp
stos
outsb
pop
xchg
loope
fisttps
lods
fsubrl
push
fs
mov
dec
loopne
aaa
xor
mov
cmp
mov
cmp
cmp
sub
in
sub
jmp
sub
pop
jb
xor
testl
mov
add
bound
dec
inc
jmp
cmpsl
cli
inc
data16
xorl
iret
int3
adc
sub
pop
cmp
sbb
jecxz
arpl
jmp
xchg
data16
shll
xchg
clc
divb
and
out
sub
cmp
push
mov
fwait
cmp
stc
stos
sub
jne
and
mov
xchg
sub
std
push
addr16
dec
sbb
push
shlb
xor
xorl
push
rclb
mov
andl
jb
and
movsl
cltd
fadds
cltd
mov
sbb
add
imul
add
cmp
adc
stc
push
jno
adc
xchg
sub
mov
ss
aas
sub
fs
push
imul
incl
jae
fcomp
mov
sub
mov
lds
lahf
ss
or
add
iret
pop
xor
and
lret
out
std
push
lahf
xchg
std
fs
fadds
out
int
cmpsl
ja
sub
enter
dec
dec
sbb
xchg
aad
fildll
inc
cltd
sbb
ffree
sub
fwait
shlb
or
push
leave
loop
mov
cltd
sub
mov
lea
lods
xlat
loopne
mov
xchg
jp
cmp
and
idivl
rolb
mov
setns
idivb
xchg
imul
push
mov
mov
xchg
lret
mov
push
xchg
test
inc
mov
and
mov
jmp
push
or
aad
jbe
push
dec
add
hlt
jle,pt
pop
adc
xchg
mov
add
inc
shrb
lahf
mov
add
inc
sub
and
mov
les
jo
push
mov
mov
mov
dec
call
es
cwtl
and
xor
pop
mov
jbe
das
mov
outsb
aad
daa
pop
cmp
cmp
cmpsb
or
es
cli
fs
pop
data16
out
sbb
and
dec
dec
dec
pop
scas
testb
jno
sbb
dec
jns
imul
test
and
pushl
stos
or
and
xlat
bound
ljmp
xchg
dec
jmp
shl
and
into
ljmp
fdiv
mov
imul
pop
fcoml
ljmp
popf
add
cmp
adc
and
push
je,pt
mov
jae
jb
movsl
mov
pmuludq
push
cmp
out
jle
insl
adc
xor
pop
jp
push
dec
xchg
mov
add
pop
sbb
cwtl
outsl
and
adc
movsb
jle
pop
scas
movsb
xor
mov
cmove
testb
sub
lea
pop
sub
add
mov
jle
aam
gs
ficompl
pop
adc
inc
loop
xchg
add
push
sub
sub
sbb
icebp
xor
pop
es
adc
in
in
ja
add
sub
imul
and
and
lcall
push
fisubl
scas
jp
dec
ja
adc
pusha
xlat
adc
and
inc
push
into
dec
lods
jecxz
pop
sbb
xor
arpl
dec
xlat
mov
in
pop
push
jmp
or
pop
test
cmpsb
mov
mov
in
ret
test
ljmp
arpl
lea
rorl
call
inc
sbb
inc
and
xchg
jb
or
stos
cmp
xor
mov
mov
pop
ss
ljmp
rolb
jbe
xchg
fs
mov
movsb
ss
imul
pop
xor
sbb
hlt
daa
jne
or
xor
aad
cmc
fistl
dec
and
stos
pop
fs
in
and
fildl
pop
mov
out
stos
sub
cmc
fs
jmp
adc
jae
fstpt
mov
lret
in
or
mov
or
inc
or
shrb
push
pop
or
cmp
jbe
or
cmp
lods
addr16
bnd
iret
lods
mov
out
jmp
aam
lret
jb
aam
or
test
jecxz
adc
std
inc
nop
aaa
das
test
inc
pushf
je
sub
enter
aaa
jne
mov
in
dec
test
lds
sbb
mov
les
sub
in
push
xor
cmp
inc
xchg
inc
xchg
iret
pushf
cmp
dec
clc
pop
adc
ret
sub
mov
or
push
ds
and
pop
imul
cmp
fcompl
stc
lret
hlt
pop
scas
adc
mov
repz
mov
pop
in
jae
stos
lcall
cmpsl
mov
inc
cmp
faddl
adc
js
scas
mov
jb
jne
adc
jl
fstpt
jmp
fwait
ret
test
icebp
jmp
cli
sbb
fs
ret
dec
nop
lods
mov
test
jne
sahf
mov
iret
test
adc
adc
xchg
adcl
adc
inc
adc
ja
rolb
mov
inc
mov
add
in
lcall
jp
jae
jp
out
and
xchg
jg
out
xchg
pop
or
std
mov
or
dec
adc
movsl
xor
sub
loopne
out
mov
mov
push
or
sbb
cmp
out
adc
push
pop
sub
jo
push
lods
xlat
dec
fmuls
cmp
pop
xor
fs
ds
mov
inc
xchg
mov
imul
mov
ds
inc
pop
xchg
mov
and
daa
mov
stos
lock
shrb
mov
xchg
popa
mov
cltd
in
mov
sub
jae
push
adcb
cmp
mov
sbb
andb
and
mov
xchg
jle
std
pop
pusha
test
shl
mov
movl
enter
es
insl
adc
test
in
xor
flds
adc
aas
jns
lea
or
icebp
iret
fistpl
addb
cmp
ja
and
pop
mov
stos
lea
gs
sbbb
xchg
movb
xchg
push
xchg
incl
lock
shrb
mov
push
jmp
dec
dec
mov
movsb
orb
dec
cmpsb
push
dec
stos
or
pusha
pop
shll
fwait
mov
push
std
pop
gs
je
shl
mov
mov
loop
loop
sub
mov
nop
rcrb
and
and
movsb
sbb
jl
mov
lahf
add
cmp
jb
mov
into
out
loop
imul
mov
mov
pop
mov
ret
pop
lahf
cli
mov
mov
in
push
xor
out
ljmp
xlat
cli
das
xor
dec
sbb
aam
pop
int3
repnz
add
jns
add
mov
adc
lret
out
xchg
adcl
cmpsl
pop
mov
pop
bnd
jo
lods
fnsave
fs
cmpsl
xlat
lret
mov
popf
dec
out
icebp
jg
push
nop
scas
dec
mull
add
ret
add
mov
data16
mov
insb
pop
mov
stos
lea
push
xchg
popa
jae
cwtl
push
dec
popa
data16
adc
xchg
std
insb
into
mov
cmp
cmp
adc
push
rclb
xchg
sbbl
hlt
push
inc
out
bound
ds
jmp
shl
repnz
push
incb
in
inc
cmp
mov
fidivs
dec
loopne
out
inc
mov
push
mov
xor
mov
mov
push
sub
jmp
jb
dec
out
pop
icebp
aam
filds
cs
addb
inc
repnz
arpl
adc
sti
ret
jae
test
push
sar
aad
mov
inc
icebp
sub
push
push
jnp
pushf
in
fs
movsl
mov
mov
nop
or
xlat
mov
mov
movsl
mov
int
push
push
stos
daa
mov
cwtl
outsb
mov
fstpl
xchg
mov
inc
movsl
adc
sub
add
xchg
add
pop
adc
cmc
loopne
scas
inc
inc
push
xchg
push
push
out
inc
cmp
push
inc
insb
dec
cmp
iret
das
jnp
add
jmp
pop
stos
pop
inc
mov
jge
push
fistpl
out
roll
xchg
mov
lock
cmc
es
in
inc
mov
mov
jns
mov
pop
mov
ret
mov
addr16
adc
je
test
dec
stc
mov
pusha
cs
fcomps
adcb
push
fcoml
in
xchg
push
push
ret
xchg
push
mov
test
push
dec
sub
push
bound
xchg
or
push
xor
pop
jbe
fisubs
sbb
or
popa
inc
xor
adc
cmp
push
aam
adc
adc
adc
mov
imul
push
fcomi
sbb
sub
leave
cli
cli
cli
adc
push
hlt
shlb
mov
sub
std
les
push
jmp
xchg
cs
cmp
rcl
and
jmp
dec
lea
adc
push
push
mov
push
push
rcrb
fildll
pop
mov
outsl
out
test
or
jmp
xor
cmp
fstps
dec
mov
mov
out
mov
adc
shll
mov
xchg
fdivrs
sar
or
ret
and
je
enter
dec
sbb
sbb
leave
int
lahf
outsb
jb
mov
mov
xor
add
dec
push
aaa
pop
xor
negl
mov
mov
sbb
mov
flds
repz
andl
enter
push
push
cmpsl
cmp
pop
iret
lret
sbb
sub
rorb
cmpsb
clc
mov
push
out
test
cmp
clc
or
pop
dec
mov
or
dec
inc
stos
sub
dec
ret
xchg
jle
mov
cmp
pop
fimuls
push
loope
inc
add
je
movsl
sub
cld
and
xor
loopne
pop
imul
int
xor
rol
imul
pop
sbb
test
sub
scas
popf
in
pop
xor
je
and
adc
inc
movsl
mov
xor
popf
in
fsubrs
xchg
rorl
add
mov
pop
fldt
mov
mov
aam
adc
add
cli
loopne
sbb
loopne
push
mov
ret
or
in
lret
and
dec
sub
mov
cli
push
xor
lret
clc
pop
pop
jg
sub
jmp
popf
loope
mov
dec
xor
xor
movsb
in
movsl
fsubrl
test
loope
jbe
int3
lds
out
hlt
add
test
push
clc
imul
push
mov
xlat
call
cmp
iret
std
fidivrl
shll
xor
gs
xor
cmp
fwait
icebp
mov
rcrl
arpl
inc
js
push
mov
ja
iret
dec
pop
lock
xchg
mov
mov
inc
mov
divb
jl
aad
xor
dec
rcrb
adc
outsb
dec
int3
sub
ss
sub
fcmovnu
fisubrl
shrb
cld
dec
popl
sub
jge
sti
mov
xor
out
iret
int3
ja
jb
xchg
push
js
jns
aam
pop
jecxz
sub
es
jae
dec
xor
call
sbbl
nop
es
mov
imul
loopne
jecxz
adc
push
push
sbb
out
dec
test
mov
addl
fstl
movsl
dec
cmp
mov
lods
or
imul
sub
scas
pop
dec
test
dec
xor
pusha
jbe
sbb
fsub
aad
je
mov
cmp
xlat
jno
mov
push
mov
and
ret
xchg
in
xor
pusha
rorb
lea
mov
adc
incb
xchg
rcrl
pop
xlat
mov
repnz
inc
and
int
mov
into
andb
cmp
out
pop
xor
cmpsb
lcall
ljmp
aad
mov
test
ret
in
shl
rcll
mov
aam
mov
dec
popf
pushf
add
add
pop
xchg
mov
pop
sbb
dec
cmp
lret
pop
out
mov
mov
fiadds
dec
icebp
fwait
add
xorb
push
insb
sar
dec
push
hlt
xor
outsb
mov
inc
jg
sbb
je
lock
fildll
sub
push
arpl
add
adc
xchg
mov
test
mov
mov
pop
jb
sub
in
or
cld
jge
sahf
repz
icebp
cmp
stos
clc
ss
jb
nop
dec
je
iret
and
and
test
daa
adc
mov
aam
xchg
and
es
stos
push
dec
fs
mov
or
repz
sahf
lahf
mov
fbld
sbb
in
fistpl
imul
js
add
pop
sub
lcall
dec
add
pushf
insb
push
ret
mov
mov
cmp
and
jnp
adc
fistpll
sbb
movsb
aam
add
inc
dec
pop
inc
pop
enter
popa
mov
push
or
adc
data16
stc
mov
dec
insl
in
cli
repz
fstps
add
out
pop
mov
faddp
int
lods
gs
fisubrl
cmp
into
jno
adc
outsl
scas
sahf
shlb
ret
lock
fistpll
jle
orb
fistpll
or
pop
aas
xorb
add
jbe
dec
xor
xor
xchg
stos
jno
xlat
sbb
mov
data16
fistpll
inc
xchg
adc
andb
movsl
popa
jmp
push
push
pop
scas
setg
sarl
dec
jo
pop
out
inc
aaa
mov
push
stos
mov
cmp
xor
push
cmp
sbb
jl
mov
jmp
repz
mull
test
dec
test
repz
xchg
mov
lahf
aas
mov
cmp
daa
fldenv
sub
xor
mov
stos
subb
gs
inc
in
in
mov
xchg
pop
add
loopne
cmc
sub
fs
repz
adc
and
and
mov
mov
bound
cmp
jnp
aaa
or
sub
mov
loop
mov
rorl
or
push
mov
pop
pop
in
xor
mov
pop
insl
test
aas
adc
adc
out
icebp
ret
rolb
fistps
mov
lock
sbb
lods
or
mov
sti
out
adc
or
pop
cmp
mov
add
pusha
icebp
jns
loopne
pop
jle
mov
cltd
imulb
and
jne
outsb
jmp
xchg
push
lock
xor
inc
mull
xchg
cmc
int3
add
jg
push
xchg
xchg
leave
repz
adc
fldl
cmc
stc
rcrl
leave
pop
daa
cmp
ja
cli
repnz
scas
add
xchg
popa
add
aad
int3
btrl
mov
and
orl
mov
sbb
jnp
cmp
dec
loope,pt
xchg
cmp
cwtl
das
or
push
pop
sub
push
xor
cmp
jp
rcl
daa
rol
ret
pop
mov
jne
fld
icebp
jo
jge
push
dec
adc
fisubs
orl
pop
inc
sub
ficomps
into
mov
ret
push
hlt
dec
int
jne
or
out
hlt
cmp
cmpsb
cmp
movsl
or
hlt
xchg
test
lds
jmp
arpl
psubsb
sbb
aas
test
fidivrs
negb
dec
enter
mov
push
insl
aaa
cmp
fisttps
cmc
xor
js
sahf
push
icebp
out
movsb
jnp
push
jmp
jl
xor
pusha
fistl
divl
push
lock
out
mov
add
das
les
pop
adc
sub
add
test
clc
cld
cmp
cmpsl
xchg
inc
std
pop
ret
pop
add
jecxz
sbb
pop
push
hlt
push
cmp
inc
add
inc
xchg
push
repnz
mov
shll
test
cmpsl
add
xchg
test
push
adc
push
pop
fdivrp
js
pop
cmp
mov
add
xchg
lds
xchg
dec
cli
shlb
movsb
dec
pop
or
push
adc
push
scas
add
or
sbb
or
test
popf
in
popa
adc
add
in
or
mov
xlat
jl
and
fdivrl
movsb
mov
out
outsb
das
in
dec
lock
push
movsb
stos
mov
jns
sub
jo
push
jo
rol
test
pushf
xchg
sub
ljmp
jle
xchg
and
jb
js
inc
gs
test
cmp
movsl
mov
xor
loop
scas
lds
ljmp
mov
or
jmp
jmp
iret
mov
mov
mov
dec
dec
adc
xchg
xor
mov
cld
arpl
pop
sbb
jb
mov
push
xchg
xor
loope
dec
movl
les
les
dec
jno
or
sahf
xchg
mov
jne
push
inc
outsb
insl
std
lods
sub
xchg
mov
cmpsb
fnstsw
xor
je
push
sbb
out
dec
xor
push
loope
cmc
rcll
in
mov
dec
lds
lcall
and
test
pcmpeqw
stos
into
and
xor
xchg
mov
jo
dec
outsl
mov
into
sbb
sub
jle
mov
ret
sub
inc
call
in
cmp
push
adc
fs
scas
aas
push
js
cmp
ficoms
mov
mov
ljmp
enter
add
and
sbb
inc
jns
ds
cmc
call
mov
pop
cmc
xor
mov
cmp
js
xor
xor
icebp
inc
fs
or
clc
and
cs
add
or
xchg
popa
repnz
adc
into
xchg
jle
jae
or
push
jp
gs
out
and
int
sub
push
jge
in
test
dec
mov
je
mov
mov
dec
sub
pop
xchg
jo
jecxz
aam
popf
lods
shll
imul
out
jp
pop
push
pop
insb
xchg
ret
fistl
and
mov
loope
stc
mov
push
lea
xor
repnz
bound
push
fcomps
mov
lcall
lock
imul
mov
int3
fucomi
insl
fisttpl
pop
dec
jp
inc
xor
in
xchg
or
jg
loop
das
arpl
pop
imul
sbb
addr16
and
aaa
jb
fcompl
int3
popf
mov
bound
dec
mov
je
pop
outsl
and
sbb
rcl
pop
sub
data16
cmp
sahf
or
pop
mov
jmp
mov
pop
add
lahf
cmpsl
scas
adc
dec
xor
sbb
cmp
hlt
or
fwait
add
xchg
mov
shlb
ret
jp
xor
push
jbe
push
out
add
cs
jne
ds
adc
jecxz
dec
sub
jg
mov
movsb
mov
cmp
mov
or
fdivrp
xlat
mov
inc
fsts
mov
cmpsb
adc
das
rol
mov
jb
and
addr16
out
push
push
inc
pop
ss
pop
push
aam
repnz
lret
adc
std
in
xchg
pop
aam
addr16
add
in
and
xor
mov
mov
dec
dec
lock
in
jae
cmc
pop
push
leave
jmp
mov
jno
or
outsb
mov
or
test
repnz
xor
dec
or
fimuls
fdivl
mov
dec
xchg
jo
mulb
decb
and
idiv
cld
or
jecxz
lods
adc
sbb
push
xor
push
mov
adc
hlt
jbe
shll
sahf
dec
out
hlt
xor
out
jmp
and
mov
lahf
sbb
lods
pop
cld
pusha
movsl
xchg
and
rcrl
mov
jnp
loope
leave
insb
cltd
push
adc
and
pand
pop
aas
loop
or
data16
movsl
aas
divb
cmp
scas
clc
and
mov
sbb
dec
cmpl
inc
add
pop
add
lahf
add
rol
mov
clc
or
stos
or
adc
mov
sahf
es
out
test
clc
push
adc
add
ljmp
ret
or
addb
mov
testl
dec
add
add
dec
pop
jl
or
enter
jle
imul
daa
ret
add
lds
xchg
rorb
adc
lods
out
xchg
dec
jecxz
outsl
mov
fsubrl
lcall
fsts
xchg
and
jp
pop
repnz
pop
xor
movsl
inc
ret
sbb
sub
insb
pop
ret
sbb
repnz
addr16
shll
dec
sub
xor
xchg
or
aaa
sub
jl
ret
inc
and
push
push
push
sarb
pop
faddp
in
mov
bound
insb
mov
cld
add
clc
push
adc
shl
xchg
out
fwait
dec
dec
xchg
in
ret
imul
js
pushf
loop
pop
icebp
pop
jnp
mov
add
sbb
orl
mov
int
jne
outsb
mov
mov
inc
xorl
les
lcall
sbbl
push
mov
imul
int3
inc
pusha
fwait
aaa
fnstcw
inc
cld
pop
pusha
cmp
icebp
mov
sbb
or
in
out
pop
push
xchg
cmp
mov
inc
icebp
xor
adc
lods
outsb
adc
push
and
ret
lods
in
add
loop
sbb
repnz
lock
stc
ja
lret
insl
push
cwtl
in
loop
or
mov
stos
rcll
xchg
mov
cltd
and
xchg
cmc
xchg
mov
inc
dec
dec
sbb
mov
call
inc
idiv
ljmp
cli
std
mov
enter
fs
and
jb
in
mov
in
jae
xor
rolb
and
loopne
cmp
xchg
in
shr
jns
xchg
mov
sub
xor
lock
aas
or
cmp
subb
aaa
and
icebp
ret
mov
lods
nop
loopne
xor
jnp
dec
adc
cmp
sbb
jbe
outsl
push
imul
xchg
repz
mov
jae
out
stos
xlat
inc
sbb
jae
mov
jmp
out
out
test
mov
shlb
in
in
dec
int
fnsave
xchg
mov
and
popl
sahf
inc
fdivl
imul
dec
jno
out
xor
dec
and
js
stos
cltd
lods
mov
dec
sbb
xchg
sahf
push
loop
and
pop
add
mov
xor
pop
cmpsb
mov
push
xchg
jp
cmpsl
movsb
xchg
sub
dec
fisttpll
dec
pop
inc
mov
adc
sbb
pop
or
jb
bound
ja
xor
call
das
femms
pop
in
in
xor
cmpb
mov
sbb
cs
mov
test
pop
into
push
cwtl
out
leave
lret
dec
jecxz
pop
lods
mov
fldt
sbb
push
inc
and
mov
inc
js
mov
or
stos
dec
cwtl
push
daa
add
mov
cwtl
mov
call
inc
mov
mov
pop
cmp
fldl2e
add
outsb
and
outsl
adc
sub
cwtl
repz
and
ficoml
or
mov
adc
lds
das
push
std
mov
mov
les
insb
popa
fimuls
dec
jbe
adc
mov
fldl
nop
add
add
lea
fcmovnu
sub
enter
arpl
push
jg
sub
jecxz
jo
mov
mov
cmp
mov
ss
andb
adcl
out
mov
cmpsb
xchg
iret
jne
lods
stos
inc
loopne
pop
insb
jmp
fnsave
scas
cmp
icebp
adc
icebp
fdivr
jmp
lods
push
loopne
test
and
jge
jbe,pn
lcall
pop
dec
pop
cmpsl
push
cmpsl
cmp
jne
jecxz
sahf
inc
dec
mov
push
xchg
movsb
mov
jecxz
xor
rol
inc
pushl
cmc
mov
shr
mov
mov
jmp
cli
or
or
mov
or
jp
fsubl
fdivrl
mov
jge
mov
pop
cmc
cmp
insl
test
lret
fldl
jne
mov
mov
dec
outsl
cli
aad
loope
arpl
mov
add
inc
sbb
and
add
ss
xor
dec
sub
jge
addr16
ret
mov
mov
or
mov
bound
mov
push
cld
cmc
in
mov
mov
jb
andl
outsb
or
mov
push
loop
mov
add
dec
mov
outsb
cmp
inc
insl
out
rcrb
lds
mov
movsl
and
out
int
pop
das
das
lret
push
push
sarl
mov
fwait
mov
outsl
inc
jge
sbb
out
dec
popa
pop
xlat
mov
jno
sbb
out
mov
mov
orl
repz
mov
dec
push
fwait
test
popl
or
mov
aaa
xor
sarb
or
dec
mov
dec
dec
xor
xchg
and
sub
cmp
ret
xor
xchg
push
push
repnz
pop
push
loopne
push
cwtl
test
std
movb
into
cmpsl
fs
cmpsl
je
mov
mov
push
clc
test
loope
sbb
in
iret
sahf
ja
or
inc
cltd
sub
sub
js
jl
mov
mov
ret
inc
out
inc
sbb
xor
add
push
fucomip
inc
xchg
pusha
sbb
ret
dec
addr16
imul
lea
xchg
lret
jle
xchg
pop
emms
inc
arpl
mov
jns
scas
sub
fcomp
sarb
xchg
aaa
xchg
out
rcrl
into
adc
xchg
lahf
fstl
mov
dec
pop
sahf
xor
adc
sbb
test
add
sub
bound
mov
or
jne
lods
repnz
push
or
mov
jl
push
ss
sub
add
xor
data16
in
loop
mov
or
fisttpl
xor
xor
clc
ret
jne
bound
loope
or
dec
dec
js
lret
insl
adc
inc
mov
out
jp
pop
push
adc
xchg
push
sub
push
fisubs
lret
call
into
or
sbb
mov
xor
fwait
leave
cmp
addb
jbe
xchg
jge
int
xlat
adc
jbe
ds
sub
push
lods
mul
pop
pop
and
scas
cmp
xor
dec
pop
repnz
adc
add
add
std
out
jne
lds
mov
movsl
cmc
mov
movsl
leave
mov
pushf
cmp
sbb
cmp
ret
pop
rcr
fstpt
jl
icebp
cmp
xor
movsl
add
xchg
divb
push
cmc
mov
xchg
dec
out
and
or
out
xchg
sbb
leave
xchg
sbb
mov
push
mov
icebp
into
xlat
sahf
mov
sbb
push
mov
pop
cmp
mov
inc
loop
mov
adc
push
enter
jle
sbb
addb
sbb
call
rorb
cli
jp
sbb
and
cmp
mov
negl
mov
jmp
inc
pand
ljmp
lods
popa
xchg
xchg
push
cld
pop
stos
cs
lret
lret
jae
add
shll
xor
popf
dec
outsb
jo
xchg
mov
lret
mov
dec
dec
stos
push
pop
jae
fidivs
fbld
xchg
and
pop
sub
cli
aas
pop
movl
add
fdivs
or
mov
xor
fwait
or
loopne
add
popf
out
mov
cwtl
pop
inc
data16
xchg
inc
dec
xchg
insl
xor
jb
mov
enter
mov
cmp
out
test
inc
bound
dec
lods
stos
popa
push
inc
in
pop
lods
push
cs
mov
call
mov
cld
jle
dec
pushf
or
pop
pop
lds
leave
jl
cmpl
adc
pop
in
std
sub
stc
fstpt
inc
loope
fwait
mov
mov
and
sbb
gs
lods
push
lods
daa
insb
test
jg
loope
call
std
push
test
xchg
cmpsb
icebp
mov
dec
fisttpl
xor
adc
je
lret
cwtl
out
lret
pop
mov
inc
or
xchg
call
push
xchg
std
jbe
pushf
std
lods
arpl
in
adc
cmp
mov
loopne
pop
cmc
push
enter
jnp
adc
xchg
in
pusha
std
and
cmpsl
mov
jmp
mov
jle
lods
std
in
xchg
aad
xlat
ret
push
lcall
sbb
mov
xchg
add
aam
inc
add
arpl
inc
jl
pop
adc
cli
repz
add
sbb
bound
in
adc
icebp
cltd
test
int3
push
daa
jae
jb
or
mov
jecxz
hlt
fsubrl
sbb
cs
cmp
stos
sub
sbb
add
mov
addl
inc
jp
sbb
int
add
mov
or
rcrb
daa
addr16
mov
jl
mov
test
add
mov
loop
into
aaa
or
pop
mov
jbe
xlat
inc
xchg
mov
mov
adc
aad
adc
or
in
and
in
inc
xchg
mov
aad
and
and
cmp
pop
mov
je
adc
jno
inc
adc
in
inc
int3
sbb
inc
xchg
sbb
ja
dec
iret
mov
out
pop
sti
mov
sub
hlt
inc
pop
addr16
jmp
ss
push
jno
jno
inc
fdivrp
cli
sbb
in
enter
nop
das
sub
mov
jbe
rcrb
cmp
sarl
pushw
sub
into
call
jl
loop
icebp
cltd
sbb
out
std
std
es
mov
inc
or
or
push
adc
jo
pop
cmpsl
lods
pop
popf
loope
cmc
hlt
sub
adc
mov
push
std
sub
xor
ljmp
mov
dec
xor
sub
adc
cmp
rcrl
out
dec
sbbl
cmp
lret
stos
pop
inc
and
and
jnp
push
ret
rcrb
out
rolb
jmp
loopne
jg
cmp
push
adc
adc
ficoms
ljmp
cs
shlb
enter
dec
ds
pusha
and
dec
loopne
push
ja
xor
sbb
mov
fs
sti
js
adc
test
push
cmp
mov
xor
mov
mov
pop
sbbl
pop
test
out
adc
stc
inc
cwtl
xchg
jecxz
test
push
add
stos
int
xor
xchg
xor
out
mov
push
fs
add
cmpsl
lcall
fsts
cmpsl
insb
adc
ljmp
outsb
mov
and
fs
incb
push
sub
daa
out
lock
mov
fiaddl
nop
mov
pop
js
pushf
xor
jno
push
repnz
subb
xor
cmp
lock
ficoms
pop
xchg
pop
mov
mov
aad
out
popf
mov
pop
push
scas
jl
pop
enter
cmp
in
nop
dec
shll
mov
adc
xchg
xchg
pop
push
arpl
enter
mov
dec
out
sub
add
xchg
sub
jg
into
cmp
pop
fwait
test
int3
fs
pop
test
pusha
push
jno
xor
cmp
add
pop
nop
or
loope
push
jmp
xchg
cmp
sbb
cli
or
cmp
inc
fwait
jno
sahf
pop
sahf
stos
pop
fsubrp
adc
push
filds
xchg
inc
sbb
mov
cli
fwait
push
mov
pop
pop
mov
dec
xchg
leave
subb
xor
gs
ljmp
push
jbe
ret
xchg
jae
push
jg,pn
fcompl
ds
cmc
addl
cmp
jge
mov
sub
sub
fbld
xchg
pop
cmp
imul
inc
and
je
and
nop
lret
xchg
mov
sub
imull
sub
std
mov
and
add
and
clc
lret
push
out
mov
add
inc
stc
xor
popf
jno
insl
and
lds
call
pop
inc
sbb
sahf
out
push
pop
and
test
out
outsl
aam
pop
les
jns
fistpl
mov
cmp
out
dec
in
cmp
xchg
jnp
push
add
or
outsl
xchg
aaa
aam
push
adc
add
xchg
adc
mov
sbb
test
das
mov
popa
negl
and
mov
xchg
fistpl
adc
ja
idiv
sbb
pop
ret
or
pusha
jno
out
out
push
push
filds
stc
xchg
xor
mov
xchg
pushf
lods
jmp
pop
push
mov
mov
pop
pop
fwait
or
pop
popf
adc
inc
jno
adc
fcmovb
xor
and
push
shll
sbb
decb
fadds
lret
mov
fld
sti
cmp
nop
or
out
hlt
xchg
pop
loope
es
data16
push
adc
cld
out
dec
pop
insb
and
adc
mov
xchg
jmp
int3
mov
cmpsl
jne
xor
repz
push
xchg
imul
shr
cmpsl
negb
pusha
shll
jbe
daa
mov
adc
dec
int
xor
test
shrl
lods
push
aas
pop
cltd
xchg
xchg
cmp
xor
aam
or
cmp
cmp
fs
call
adc
push
cltd
es
pushf
cmp
jle
xchg
inc
adc
dec
mov
cmc
mov
dec
dec
dec
pop
adc
xor
dec
push
popa
es
xchg
mov
fldl
xchg
arpl
and
mov
arpl
or
insl
popa
inc
notb
fsts
mov
cwtl
nop
sbb
sti
xor
add
and
jg
ljmp
mov
adc
xchg
mull
dec
imul
xor
dec
scas
enter
xchg
pushf
out
add
stos
rcrl
dec
sahf
jb
les
jecxz
pop
loopne
int3
or
popf
xchg
scas
mov
cmp
cs
data16
push
nop
xor
lret
and
outsb
or
loope
mov
cmp
pusha
bnd
fs
xchg
mov
jo
jbe
movsl
sub
add
mov
aad
sub
inc
push
fdivrs
push
ret
or
pop
arpl
jmp
lods
mov
lds
sbb
cmp
xchg
scas
xchg
lds
and
cs
out
jbe
mov
jo
lea
js
les
jae
push
jb
mov
enter
lahf
repz
cmp
xchg
pop
push
cmovge
nop
xorl
mov
push
push
dec
inc
sub
int
loope
dec
fists
ret
xchg
adc
cmp
ljmp
sarb
mov
push
fs
and
cmp
lcall
mov
lea
test
leave
clts
enter
xor
adc
aas
jne
xor
sub
stc
rorb
mov
sub
fidivl
scas
fwait
scas
jb
add
fstl
inc
xor
leave
shrb
mov
test
dec
mov
js
fistpll
push
or
mov
sub
adcl
aam
mov
imul
stc
xchg
adc
and
mov
loopne
pop
sub
roll
mov
mov
inc
addr16
push
dec
ss
lcall
hlt
imul
ljmp
xorb
hlt
push
std
sarl
lds
or
sar
pop
cld
push
cmp
xchg
jb
fcoml
dec
leave
mov
adc
add
pop
into
repnz
push
rcrl
out
pop
shlb
push
nop
add
addr16
cwtl
add
cmp
aas
das
cwtl
shrb
fldcw
push
cmp
mov
xchg
pop
ret
push
pop
pop
out
add
test
xchg
pushf
cmp
stos
push
or
xor
rorb
xchg
fwait
pop
push
orl
mov
push
arpl
pop
loopne
test
incl
add
cmp
jne
sub
jb
adc
repz
pop
jmp
pushf
xchg
movsb
jae
xchg
cmp
jl
mov
mov
xor
xlat
test
xor
aad
aaa
mov
xor
dec
testl
in
hlt
pop
or
popa
jl
imul
leave
jl
mov
mov
andl
aas
cmp
jmp
sub
mov
out
aad
scas
push
sbb
xor
jb
push
xchg
shll
out
xor
sub
outsl
jge
jl
xor
jnp
insl
mov
in
imul
cmp
xchg
cmc
sbb
sub
cmp
bound
xchg
fxch
mov
rorb
in
push
sub
push
cmc
les
inc
jne
data16
sub
mov
adc
pop
sbbl
imul
out
out
and
mov
sarb
xchg
testl
inc
es
sub
imul
jmp
jne
sahf
aad
or
data16
add
rorb
mov
push
xlat
dec
pop
xchg
lea
lea
xor
loop
and
mov
out
inc
and
aas
mov
aam
jge
insb
scas
adc
mov
jne
mov
cmp
mov
cld
sbbl
cli
call
jle
pop
mov
xchg
mov
pop
jo
jecxz
cld
mov
mov
nop
cs
adc
mov
insl
push
frstor
xchg
mov
push
jnp
xor
jp
cmpsb
mov
imul
push
mov
sarb
mov
sub
test
add
sbb
add
mov
or
aad
dec
insl
sub
movsl
fisubrl
pop
add
add
cmc
lock
inc
loop
xchg
push
lods
int3
inc
push
rcr
dec
dec
mov
out
mov
and
popa
out
fisttps
stos
pop
fcoml
fstl
das
and
xchg
pop
and
jns
in
int3
movsb
loop
jbe
je
dec
cmpsl
scas
iret
ret
rolb
jnp
test
cwtl
dec
in
dec
cmp
es
xchg
test
xchg
sub
iret
sbb
andb
push
inc
ljmp
push
imul
jbe
stc
pusha
dec
les
sarb
icebp
jb
or
out
outsl
jnp
xchg
xor
aad
inc
lahf
repnz
enter
xchg
adc
faddl
ret
pop
xor
mov
aas
pop
cmp
mov
arpl
test
adc
xor
outsb
cmp
sub
enter
sbb
movsl
jge
mov
lcall
inc
mov
pop
popf
in
sbb
inc
mov
add
int3
sbb
fistps
push
mov
add
mov
fs
pop
int3
loopne
cwtl
push
stos
sbb
pop
mov
dec
cltd
loop
and
iret
rorl
subb
pop
pop
push
dec
push
push
rcrb
movsb
pop
xchg
sarl
in
mov
dec
jno
cwtl
cmp
aas
loope
insb
sahf
out
xchg
sbb
lcall
push
mov
divb
fsubl
popa
sbb
loopne
stos
push
mov
adc
mov
xor
adc
xchg
je
sub
daa
and
sbb
dec
aad
push
and
mov
xchg
push
adc
pop
fmulp
stos
fcmovne
mov
rorl
imulb
data16
sbb
sbb
push
mov
or
inc
push
adc
cld
sub
pop
pop
jne
int
int3
lock
scas
icebp
ds
cmp
push
inc
or
loopne
imul
roll
add
pop
addb
mov
int3
pop
adc
imul
jb
jle
jbe
adc
pop
clc
lods
sti
mov
pop
fcompl
add
fstl
mov
dec
mov
mov
mov
out
mov
cmpl
repnz
test
sub
pop
sub
add
push
imul
pop
pop
mull
jno
je
pushf
mov
test
jbe
and
call
popf
mov
add
enter
out
sahf
sar
jle
pop
push
fisttpl
gs
adc
mov
insb
stc
pop
cmpsl
push
setne
ja
test
imulb
out
push
cmp
fisttpll
xchg
cld
xchg
rclb
movsb
push
jnp
or
jle
aas
cmp
cmc
in
or
outsl
icebp
pop
or
aas
mov
inc
test
cwtl
jnp
popf
inc
mov
jnp
imul
inc
pop
pop
sub
push
adc
jp
push
add
stos
cmp
cwtl
fs
sub
sbb
into
dec
push
outsb
sub
cmp
lret
lock
sbb
cmp
jecxz
push
lahf
or
lea
in
and
rolb
mov
inc
loopne
repnz
je
sub
xchg
xchg
loopne
jne
add
cld
je
cmp
nop
inc
sub
cld
jg
adc
aad
mov
enter
shr
mov
subb
mov
into
inc
pop
cmp
int3
enter
inc
add
in
pop
outsb
aas
enter
repnz
aad
cli
lcall
add
rcr
push
push
jne
jns
jb
adc
scas
fstpl
pop
cmpsl
jecxz
nop
xchg
and
mov
outsl
lods
add
push
mov
and
xchg
fucomi
adc
add
sti
adc
jno
fcomp
out
adc
imul
sbb
adc
or
insb
shrb
mov
sub
stc
push
push
sbb
cmpsb
inc
sahf
xor
adc
rcrb
daa
test
rcll
loopne
repz
mov
sbb
adc
test
sahf
xor
test
and
inc
push
mov
and
subb
jns
dec
sbb
or
cmp
mov
mov
rcr
in
inc
jg
ret
repnz
mov
push
ret
gs
adc
addb
cs
lcall
test
lock
dec
add
out
movsb
add
ss
lcall
sbb
aaa
jg
lock
mov
inc
or
mov
ds
xor
sub
sub
and
inc
xchg
pop
sbb
adc
xchg
lods
cs
sbb
lods
cld
out
cmpsb
sub
aam
sub
test
ficomps
or
mov
mov
fdiv
jmp
xchg
lret
sbb
inc
leave
adc
in
jmp
les
and
cwtl
fptan
ljmp
lock
sbbb
cmp
fs
push
mov
pop
loop
xor
mov
movsb
leave
xchg
inc
adc
cmp
jle
sbb
sahf
inc
fadd
fwait
sbb
mov
clc
stc
mov
out
inc
ss
iret
ja
jo
movsl
rolb
sub
repz
jae
fidivs
repz
les
and
adc
movsl
xchg
scas
loop
sub
idiv
lret
fiaddl
xchg
in
cmpsl
fwait
in
sub
mov
and
pusha
insb
dec
pop
cwtl
jl
into
enter
pop
pop
icebp
rcr
aam
pop
outsl
testl
cmpb
dec
pop
mov
jno
push
pop
scas
es
scas
jae
cmpsl
inc
mov
fistpl
jns
icebp
add
and
adc
sbb
loop
cmp
sahf
scas
inc
mov
inc
cltd
push
cli
mov
sbb
mov
jae
stos
add
xor
mov
lds
out
jp
cmp
cmp
and
add
fistpl
fdivrl
mov
fucomi
mov
imul
cltd
scas
je
loope
flds
lods
jmp
or
sahf
adc
add
enter
ret
or
jbe
dec
shrl
leave
mov
fistps
add
pop
xor
int3
and
or
push
mov
sar
cs
xor
outsb
adc
add
and
icebp
aam
fisttps
mov
dec
inc
jne
mov
leave
mov
sub
aas
das
movb
in
adc
mov
out
fwait
jmp
sti
adc
cli
shll
push
fsubr
jae
mov
icebp
mov
add
dec
insl
outsl
movsb
push
push
jecxz
lock
cld
aas
mov
mov
js
iret
pop
ficompl
mov
jg
mov
pop
lcall
mov
lea
ss
mov
movsl
fsubrp
sub
ret
out
fdivr
decb
jnp
lds
loopne
dec
xchg
das
xchg
fdivl
push
enter
or
mov
push
jecxz
sbb
dec
sub
sbb
cs
and
xor
out
dec
leave
adc
pop
mov
lret
mov
or
fildll
and
push
mov
lea
adc
insl
sbb
imul
leave
jmp
dec
adc
mov
int3
test
scas
jl
rcl
mov
dec
and
push
adc
jle
leave
out
out
xorl
mov
mov
ret
dec
loopne
and
mov
js
fisubl
xchg
in
ljmp
dec
lock
xchg
adc
or
aam
movsl
dec
xor
jecxz
jp
mov
cmp
sub
adc
mov
hlt
push
lea
mov
out
out
jbe
xchg
jnp
mov
loopne
jmp
cmp
mov
mov
xor
fldcw
adc
adcb
je
lock
fidivrs
sub
loop
mov
cmpb
add
mov
or
jbe
hlt
sbb
jne
adc
mov
insb
mov
sbbl
dec
mov
cmc
ds
sbb
ja
jbe
and
mov
in
sbb
mov
jne
sbbl
std
leavew
enter
fdivrl
fbld
fisubl
and
pop
std
js
lea
pushf
stos
mov
xor
jae
ja
out
pop
cmp
test
dec
inc
jne
jns
sbb
das
jb
repnz
mov
sub
inc
inc
fistpl
push
das
fbld
sti
int3
shrl
roll
lock
ljmp
mov
out
das
ret
mov
and
and
mov
mov
sbbb
xor
adc
mov
cmc
repz
push
sbbl
push
addl
pop
xor
push
mov
xor
lcall
in
test
int
lcall
mov
push
jecxz
add
cli
inc
and
sub
popl
jbe
es
lds
and
push
aas
pop
lret
adc
je
jne
je
or
xor
fcoms
aas
xchg
add
push
lods
call
xlat
ljmp
movsl
cwtl
stos
dec
out
pop
add
fsub
push
adc
push
pushf
jp
pop
orl
pushf
push
lahf
sbb
mov
pop
lea
sub
movsb
xchg
std
das
xor
lods
sbb
mov
outsb
lods
pushf
add
lods
jmp
in
cmp
and
ficompl
push
and
test
dec
mov
fisubrl
pop
popf
mov
rol
add
sbb
mov
mov
les
fildl
ja
mov
insl
inc
repnz
je
ljmp
fldenv
les
jge
mov
pusha
fwait
mov
js
add
dec
mov
adc
cmp
icebp
sub
popf
iret
imul
ljmp
cs
gs
pop
and
and
mov
test
int3
mov
fwait
dec
add
movsl
data16
push
xchg
das
xor
add
fidivl
mov
mov
fildl
and
jae
std
jbe
mull
dec
bnd
addr16
addr16
test
cmp
inc
mov
loop
adc
andl
mov
bound
mov
imul
test
dec
add
shr
dec
add
pop
mov
lcall
test
or
out
out
lret
cmpsl
in
adc
xor
ljmp
subb
adc
js
fimull
mov
iret
fisubrl
stos
pop
ret
fnsave
insb
call
lahf
add
pop
pop
pop
jb
jb
sbb
repz
sub
xchg
sbb
mov
dec
xchg
imul
cld
aad
push
add
mov
mov
xor
rcrl
push
sbb
popa
cld
bound
ret
xchg
fwait
push
push
add
mov
rolb
lret
xchg
pop
lcall
pop
jno
cwtl
popf
cwtl
adc
mov
test
xchg
mov
sub
enter
lret
and
or
dec
adc
adc
fcoms
xchg
cmpsb
push
enter
inc
setge
cwtl
int3
inc
data16
shl
jno
lods
adc
out
inc
xor
xchg
mov
repz
jle
sbb
jae
flds
mov
add
les
sbb
jo
adcl
mov
or
ja
cmp
pop
lock
in
push
fsubl
lods
lock
gs
push
xor
lahf
roll
pop
and
sub
loop
sbb
cmpsl
adc
dec
inc
jecxz
out
insl
pop
cmp
cmpsl
inc
js
loope
and
ss
adc
add
mov
dec
xor
ljmp
and
inc
mov
dec
inc
and
jecxz
jnp
test
mov
mov
lret
pushf
or
mov
call
or
lcall
add
scas
adc
pop
xchg
repnz
fnstenv
adc
jb
out
nop
fildll
ljmp
aad
test
add
ds
sub
fadd
xor
adcb
das
mov
mov
incb
jns
rcrl
gs
and
sbb
es
mov
aam
xchg
lret
scas
adc
mov
outsb
and
clc
jle
xlat
add
movsb
dec
addl
dec
outsb
xor
ficoml
cs
orl
fwait
and
push
negb
test
xchg
fsubrl
jmp
roll
shlb
pop
jno
jae
push
and
adc
aam
mov
push
adc
rcll
ja
mov
xchg
lods
and
xchg
mov
cmp
lods
pop
xchg
sub
push
jle
push
in
into
aam
xchg
or
mov
push
mov
inc
inc
cmp
test
mov
in
stos
pop
push
mov
push
sub
cli
jno
mov
sbb
and
es
pop
jns
in
lods
xchg
pop
adcl
stos
xor
in
mov
mov
sbb
stos
sub
jno
aad
aaa
sub
fildl
in
mov
imul
popf
and
ja
and
insb
or
scas
pop
pushf
push
lret
xlat
xchg
cs
pop
mov
cltd
dec
ror
daa
into
sub
pop
sbb
push
dec
test
es
xchg
notl
sbb
movsb
push
xchg
pop
fnstenv
sti
insb
repnz
pop
cmpsb
aaa
mov
hlt
ret
leave
data16
mov
inc
inc
loop
mov
pop
pop
outsb
ret
test
lock
fwait
push
out
stos
sbb
adc
xchg
mov
lods
cld
add
pop
jbe
jo
pop
test
adc
dec
mov
int
xchg
xor
shll
lcall
leave
jecxz
je
mov
ljmp
test
in
es
sbb
sti
mov
jns
insl
les
mov
ret
inc
push
mov
mov
adc
mov
jo
imul
jbe
sbb
cld
shlb
mov
sbb
mov
dec
jns
frstor
lcall
adc
sub
aam
outsb
cwtl
cs
mov
jno
adc
sub
xchg
loopne
jmp
out
ljmp
xchg
shll
and
or
dec
psubsw
fmul
pop
adc
les
out
ja
or
aam
jb
cmpsb
pushf
movsb
add
push
outsb
sub
cmc
xor
fst
xchg
sbb
loope,pn
fisubl
in
dec
and
xchg
scas
mov
into
add
cmc
popa
push
jecxz
scas
dec
dec
xlat
std
cmpb
mov
pop
cmp
jb
fcoml
dec
out
pop
inc
jb
cmp
pop
adc
xchg
hlt
notl
mov
jae
and
ljmp
jmp
push
int
and
pop
xchg
cmp
out
mov
sub
movsb
nop
push
xor
xor
shlb
lcall
and
cld
arpl
ret
pushf
add
add
jmp
adc
enter
mov
in
adc
push
dec
sbb
das
lea
js
gs
mov
and
ds
mov
xchg
lds
jnp
cmc
aaa
sub
inc
in
jae
push
push
xchg
push
adc
and
sub
add
jle
ret
cli
mov
pop
imul
stc
sbb
inc
sbbb
inc
jbe
fisubrl
addl
adc
xchg
dec
jmp
iret
sti
pop
stos
inc
in
rcrb
cmp
lcall
repnz
xor
add
jo
jb
cmp
dec
or
scas
sar
movsb
xchg
add
sbb
ss
stos
fistl
jle
out
mov
nop
cltd
and
xchg
jnp
hlt
add
cs
add
jnp
arpl
xchg
outsl
popa
js
xor
dec
pusha
mov
call
sbb
xor
cmp
dec
ja
and
inc
das
push
inc
jge
lea
and
cli
fadds
ja
pop
mov
sarb
mov
dec
das
xor
xlat
bnd
aas
inc
mov
sbb
sub
add
add
mov
mov
and
mov
inc
in
mov
inc
daa
xchg
movsl
add
jle
pop
rcr
addr16
je
adc
adc
sbb
cmpsb
xchg
dec
jg
mov
test
dec
fbstp
inc
lods
xchg
std
adc
insl
jae
mov
out
loope
pop
adc
imul
sub
fcomi
pusha
movsl
outsb
push
and
pop
cmp
sbb
dec
scas
cs
mov
xor
mov
ret
arpl
lods
dec
xor
adc
adc
ficoms
ds
dec
and
movsb
cmp
push
mov
dec
fimuls
out
or
in
cmp
mov
xor
or
aas
cwtl
jnp
mov
enter
cmp
out
add
negl
fisttpl
sahf
cmp
dec
pop
mov
mov
xchg
dec
andl
xor
sbbl
lret
movsb
pop
ficoml
lret
faddp
pop
adc
lea
addl
cmc
xor
enter
int3
adc
cmova
iret
sbb
mov
and
adc
ljmp
pop
jp
rol
outsb
mov
add
add
mov
imul
push
cmp
addl
sbb
pop
in
cmp
insl
cmp
xchg
push
insl
jne
scas
jo
push
je
pop
out
addb
sahf
int3
shll
mov
pop
scas
fnop
sub
mov
dec
cmp
add
push
cmpsb
mov
or
adc
mov
repnz
xchg
xor
mov
popa
and
dec
xchg
adc
cli
jmp
xchg
pop
mov
lock
cmp
lcall
inc
xchg
mov
iret
dec
xor
loop
subl
incl
inc
mov
pop
inc
out
out
push
pop
xor
ljmp
xor
clc
rcrl
sahf
jge
mov
icebp
repz
adc
mov
lea
and
imul
cmp
es
lds
outsb
pop
add
xor
nop
adc
jo
ret
lcall
jae
jl
xor
clc
ret
mov
sub
fnstenv
jge
cmp
mov
aas
icebp
mov
cmp
shr
test
aad
and
icebp
rcl
add
lcall
jmp
idiv
ret
sub
xor
add
aas
jl
pop
es
aam
inc
and
adc
loop
mov
mov
mov
ror
xor
and
push
shlb
cmpsl
push
inc
dec
jge
subl
out
push
mov
jno
adc
jae
fmul
sub
sub
scas
insl
jae
lods
cmp
movsb
mov
jbe
push
loopne
in
pop
fldt
aam
lret
mov
lods
adc
xor
jg
mov
dec
stc
inc
cli
stc
or
jl
es
nop
int
inc
cmp
sub
mov
sub
ret
sbb
jb
pop
push
aam
add
mov
xchg
pop
mov
cmpb
push
and
xchg
or
mov
fs
mov
sub
int
pop
jle
loopne
lods
dec
repz
push
mov
fwait
lea
or
movsl
loope
out
or
adc
adc
sbb
scas
mov
mov
push
push
pop
testb
push
pop
mov
les
pop
stc
add
and
pop
gs
lret
sbb
dec
ljmp
mov
mov
push
subl
les
out
mov
fnstenv
cmc
cmp
fiadds
pushf
jb
mov
mov
out
out
push
cmc
les
icebp
lea
repz
mov
gs
xor
push
dec
in
mov
lea
out
leave
notl
cmp
adc
ja
add
jmp
lock
mov
sub
test
xlat
push
mov
sub
test
pop
cmp
shlb
stos
lods
pop
pop
mov
inc
sbb
aad
inc
stc
test
ret
xor
or
icebp
jnp
rorb
popa
push
sbb
xorl
ret
pop
jnp
test
mov
lods
and
sbb
std
sbb
ficomps
mov
jbe
push
jp
out
shlb
jl
sahf
rcr
sbb
mov
call
cmc
sbbl
mov
adc
add
add
inc
fcompl
fnstenv
js
xchg
mov
lret
adc
pop
inc
and
iret
inc
pop
mov
push
push
mov
mov
nop
ja
mov
cwtl
mov
stos
pop
nop
lds
mov
sub
sub
dec
rcrb
add
adc
insl
fldl
xchg
pop
mov
inc
outsl
int
adc
mov
ss
bound
and
xor
jecxz
outsb
xor
xor
mov
sub
orb
decl
sub
add
mov
es
dec
rcr
das
and
gs
int
enter
add
loopne
fstl
or
fcoml
jmp
loop
mov
cltd
cs
aaa
shl
mov
mov
and
sbb
mov
jge
arpl
mov
push
add
rcr
pop
push
ss
mov
push
out
rcll
aas
push
repz
std
je
mov
jbe
cli
dec
cli
sarl
mov
and
rcrl
add
and
pop
lods
xchg
inc
adc
dec
inc
stos
mov
sub
out
insl
mov
lea
cmc
or
faddp
xchg
xchg
clc
inc
inc
imul
loope
sub
sti
fiadds
push
xor
addr16
loope
cs
inc
sub
dec
stos
xchg
aaa
ficoms
xchg
daa
pop
repnz
xchg
loop
stos
rorl
pop
jnp
xor
in
cmpsb
sub
lods
scas
iret
pop
loop
pop
jge
je
jg
daa
push
rclb
xor
test
sub
sub
add
addr16
jg
lret
pop
adc
or
ds
push
inc
and
add
cltd
les
enter
out
xor
leave
in
pop
loopne
je
jbe
mov
sub
mov
dec
lock
loop
cwtl
cmpsb
or
ja
fstpl
xchg
cmpsl
mov
mull
ja
jno
out
loop
pop
andl
pop
scas
xor
dec
pushf
loopne
or
xor
ss
ficoml
xchg
add
ja
xchg
add
mov
inc
push
push
or
lods
xor
pop
into
push
mov
stos
mov
loopne
roll
lea
inc
xor
jae
xchg
jmp
jecxz
lds
adc
push
leave
mov
mov
cltd
pop
js
or
dec
out
inc
or
loope
jae
mov
aam
xlat
inc
pop
xchg
pop
lahf
loopne
fs
in
sbb
fadd
add
lret
loope
add
and
xor
pop
push
xor
cmp
ret
and
mov
xlat
mov
ss
aam
add
inc
rclb
push
jne
into
loop
ljmp
mov
sub
xor
and
cmpb
push
xor
incb
push
add
pop
scas
dec
and
je
sbb
cs
hlt
sub
jns
clc
stos
or
aad
dec
cwtl
jmp
mov
testb
push
in
fisubl
xchg
mov
inc
jo
stc
sub
adc
xchg
adc
pop
adc
xchg
pop
push
ret
add
xchg
mov
dec
cli
cmp
cmp
jmp
adc
sbb
pop
jo
int
push
pop
aad
addr16
mov
stos
insl
mov
push
cmp
out
push
dec
jne
test
jnp
loopne
jne
and
mov
ljmp
inc
loop
les
add
in
and
js
jg
mov
add
int
pop
cltd
in
push
das
adc
iret
push
ja
pop
mov
shl
lcall
sahf
repz
in
mov
in
dec
add
jno
sbb
adc
int
nop
leave
imul
lea
in
xchg
scas
mov
in
jns
popa
adc
xor
adc
out
and
mov
mov
rcrl
jo
dec
aaa
and
shlb
push
and
push
pop
cmp
sub
and
pop
stc
mov
cwtl
ret
rolb
lock
inc
pop
stos
daa
push
dec
lea
outsb
jb
cmpsl
scas
adc
add
test
pop
imul
fistpl
and
cmp
xor
dec
jle
and
popf
stos
cli
lret
jecxz
mov
lret
push
mov
or
sbb
cs
inc
add
outsl
ret
ljmp
mov
adc
push
pop
and
scas
aas
add
cltd
mov
js
mov
daa
or
mov
aaa
inc
cmp
cmp
or
pop
inc
in
xor
lret
pop
aaa
outsb
pop
sarb
xor
xchg
xchg
adc
stc
xor
iret
cld
cmpsb
push
or
std
scas
sbb
or
stos
test
aaa
add
cltd
rcrl
or
cwtl
call
test
test
push
popa
insb
inc
into
pop
dec
int3
ret
pusha
dec
mov
rclb
in
aad
das
outsl
femms
jge
cmp
fcompp
shll
mov
cmp
lods
sti
je
inc
and
xchg
xor
pusha
das
push
or
inc
stos
imul
add
xchg
aad
or
imul
pop
rclb
push
inc
test
xchg
cmp
clc
jle
xor
inc
jp
out
les
or
repnz
jo
decb
lret
rcrb
lods
ror
iret
imul
cmpsl
test
ljmp
mov
and
ror
aam
mov
xor
dec
mov
scas
insb
popf
lret
mov
les
lret
xchg
rorl
mov
das
dec
cmpsb
dec
sbb
mov
pop
or
xor
cvttps2pi
sub
or
push
inc
cld
in
push
das
adc
imul
stos
add
or
cmp
pusha
sub
adc
xchg
or
mov
popf
jge
and
cmp
add
pop
jl
andl
into
push
add
movsb
cwtl
pop
pop
inc
sub
out
mov
movsl
sub
imul
inc
test
inc
cmp
sbb
jnp
inc
mov
loop
orl
inc
in
push
fadds
adc
out
rorl
jne
xchg
gs
cmp
cli
jae
loopne
or
inc
xchg
mov
inc
mov
xor
sbb
jmp
in
mov
sbb
outsb
xor
popf
dec
xor
cmp
out
or
testl
add
call
xchg
jecxz
test
popf
rcl
push
jne
js
inc
sbb
je
add
pop
stos
loop
sbb
push
inc
jg
stos
xor
jl
push
xchg
cld
xor
sbb
and
mov
addb
daa
or
dec
jnp
push
or
icebp
pop
aas
aam
adc
xchg
int
sub
pop
mov
and
mov
loop
mov
mov
out
mov
mov
popa
sbb
and
cmp
inc
data16
std
lods
inc
jno
xor
pop
pop
inc
es
push
mov
adc
lds
adc
or
sub
lods
mov
dec
mov
dec
icebp
jge
xchg
pop
mov
out
les
sbb
jbe
stos
lret
push
and
sub
fwait
call
stc
fcomps
ja
dec
bound
xor
outsl
sarl
xchg
push
dec
xlat
out
mov
cwtl
repnz
cmp
sub
outsl
out
jbe
adc
ret
scas
xchg
xchg
xor
fiaddl
sub
pmulhuw
cmp
mov
addl
ret
push
cltd
cmp
xor
inc
add
mov
fstl
mov
mov
cwtl
cmpsl
xor
es
cmp
pop
sub
xchg
xchg
xor
shl
push
push
add
ret
mov
xor
movsl
adc
movsl
cmp
fidivl
stos
mov
mov
stos
cmp
fdivl
adc
stos
inc
addb
xor
pop
adc
dec
inc
aad
mov
addr16
push
adc
mov
in
cmp
imul
pop
sar
mov
or
mov
mov
mov
repz
mov
cld
sbbl
pop
cmp
inc
pop
scas
pcmpgtb
cs
cmp
push
testl
mov
jo
sub
push
pushf
stos
popf
sbb
xlat
sub
xor
jbe
nop
mov
xor
cmp
test
inc
movsl
push
subl
xchg
andb
inc
dec
pop
dec
testb
pop
test
xor
pop
cltd
mull
pop
push
std
das
jnp
push
xchg
lcall
xor
nop
xor
mov
scas
lret
pop
shl
mov
mov
add
sarb
inc
popa
push
shlb
mov
and
orl
lret
and
cmpsl
fildl
stos
push
js
add
xor
push
jge
decl
lret
das
gs
xor
jno
sarb
sub
xchg
sub
fwait
mov
pop
cltd
fistpll
jecxz
notb
cmc
scas
out
pop
test
xor
lock
dec
movsl
je
cmpl
sbb
inc
ds
sub
inc
cmpsb
push
sarb
adc
jne
movb
jecxz
mov
test
cmpsl
adc
cld
push
pop
mov
shl
sbb
test
rclb
jo
adc
and
xlat
jmp
stos
cmc
cwtl
into
add
cmp
inc
or
fwait
lret
inc
mov
ds
scas
orb
js
adc
cmc
dec
loop
inc
jnp
jle
enter
gs
pop
sub
xchg
dec
mov
add
dec
jbe
sub
mov
inc
xchg
ljmp
aaa
mov
xor
outsl
add
xor
mov
cld
in
adc
stc
movsl
aaa
subl
xchg
fstpl
xchg
stos
jecxz
stos
scas
lret
pop
imul
xchg
fdiv
xchg
lock
push
imul
enter
outsb
xor
fs
sbb
dec
xor
andl
and
stos
test
dec
insl
mov
fstpt
or
loop
test
mov
sbbl
data16
call
inc
jne
jge
movsb
mov
jne
lcall
dec
mov
push
inc
rolb
cs
ljmp
pop
fdivrl
ljmp
cmp
cmp
ret
cs
dec
das
shr
mov
mov
mov
pop
gs
or
les
add
jbe
nop
mov
lret
jno
shrl
ja
or
push
sub
inc
mov
cmp
into
into
leave
out
psubusw
or
sub
mov
cmp
pop
lock
and
or
mov
shll
in
daa
cmp
push
iret
in
std
sbb
mov
push
scas
test
and
inc
mov
shll
xchg
mov
push
mov
mov
xacquire
lea
jmp
out
mov
jnp
icebp
adc
rorl
jp
and
inc
jo
fisubrs
adc
es
and
pop
jne
sahf
clc
lock
adc
jo
out
out
jge
jmp
adc
jns
or
loope
popa
cmp
xor
cltd
dec
jl
mov
inc
xor
seta
sahf
adc
je
je
hlt
repz
pusha
or
fdivrs
adc
and
aam
js
lock
push
cli
in
xchg
push
dec
cltd
add
xchg
adc
cmp
pop
adc
dec
aad
pusha
out
or
cwtl
lcall
andb
sbb
sub
popa
in
pop
js
das
cmp
bound
insl
sti
int3
adc
mov
test
xor
mov
jnp
cmp
push
or
int3
fsubs
mov
cmpsb
xchg
pmaxub
aam
cs
and
mov
int
mov
fs
add
test
sahf
ja
ret
into
cmpsl
shrb
and
xchg
jno
nop
into
adc
xchg
jbe
dec
adc
cmpsb
out
fmul
mov
sub
arpl
mov
xchg
fistpll
xchg
pushf
mov
lods
cld
dec
inc
movsb
push
stc
arpl
fstpt
xchg
xor
adc
scas
pop
jns
adc
in
or
jmp
xchg
fstpl
mov
push
ret
pop
mov
or
pop
mov
mov
pop
jo
lahf
dec
cs
sub
pop
xchg
cmp
add
loop
in
out
xor
lock
mov
xchg
rep
or
dec
or
lods
je
dec
mull
repnz
rclb
xchg
lods
mov
mov
mov
mov
mov
repnz
cltd
loopne
ret
loop
iret
loope
mov
out
jmp
mov
pushf
xor
mov
jecxz
xlat
imul
adc
roll
xor
popf
sub
pop
jmp
imul
cmc
mov
movsb
sbb
jecxz
cmpsb
add
inc
xor
or
idivl
sbb
movsl
test
test
aas
jmp
add
adc
jp
pop
filds
leave
ficoml
mov
sub
ret
pop
cmp
fildl
sti
inc
sub
or
xchg
dec
dec
lds
mov
and
and
ret
call
push
inc
mov
out
cmp
aas
xor
mov
popf
addb
into
pop
and
pop
in
cwtl
orl
hlt
jl
je
pop
cwtl
fisubl
scas
or
add
and
adc
cli
jl
shl
mov
mov
xlat
rcr
pop
cmpsl
imul
push
xchg
adc
rolb
aad
push
imul
popf
sub
xor
cmp
lods
pop
ja
lret
loop
hlt
movq
icebp
xchg
mov
lcall
in
add
js
stc
scas
cmp
and
arpl
cmpb
mov
cmc
jecxz
inc
imulb
xor
call
mov
dec
jmp
lea
popa
lock
pusha
out
dec
imulb
add
test
leave
and
xchg
fcmovne
sbb
arpl
shl
pushf
mov
mov
fs
scas
mov
jne
mov
je
fsubrl
mov
cltd
jne
iret
lods
mov
push
mov
pop
rclb
mov
adc
add
push
test
mov
jns
adc
imul
cltd
mov
mov
mov
xchg
mov
repnz
fsubr
out
add
cmp
xchg
inc
sub
cmp
push
cmpsl
inc
adc
add
pop
push
lret
mov
int3
lahf
xchg
push
roll
push
cmpsl
xchg
mov
xchg
push
lret
xchg
sbb
test
out
mov
scas
fisubrs
stos
mov
sub
adc
push
out
cltd
push
xchg
mov
sub
inc
jbe
pushf
mov
jae
jns
fnstcw
call
sub
fsubl
out
cmp
add
jbe
inc
out
data16
out
cmpsb
xor
push
scas
mov
xor
sbb
inc
xchg
xorb
inc
ja
sbb
mov
xchg
fidivrs
mov
mov
std
pop
div
xor
dec
mov
movsb
fisttpll
lcall
iret
cmp
mov
push
outsl
sbb
in
mov
xlat
mov
adc
loop
ljmp
inc
arpl
ret
sub
jns
mov
pop
push
sbb
jp
jae
fsubrs
add
xchg
loopne
sub
mov
sub
imul
xor
adc
mov
repz
dec
mov
pop
inc
inc
cli
andl
pop
add
or
leave
fsts
outsb
xor
popf
aas
xchg
sub
iret
out
and
and
fcoms
fs
jnp
test
mov
aaa
add
and
push
add
ljmp
fdivrp
adc
pop
push
mov
repz
or
cmpl
ficoms
dec
insl
xlat
pop
repz
lcall
int3
cs
mov
adc
add
lock
lds
lret
pop
insl
add
lods
xchg
inc
push
and
fdivl
ret
test
and
aam
xchg
sbb
jp
adc
imul
sub
xchg
xor
shll
jbe
mov
jmp
mov
dec
mov
stc
pop
leave
lds
add
js
xchg
and
loope
aam
fsub
push
in
lcall
mov
mov
push
sbb
xchg
push
out
jbe
xorb
and
push
ret
xchg
inc
cli
pop
xchg
jmp
insb
push
xor
test
sbb
scas
cmp
push
addr16
cmp
fs
jbe
push
and
cld
popa
es
inc
outsb
xchg
repnz
call
cmp
dec
dec
les
sahf
data16
int3
int3
insb
js
jle
aad
mov
scas
sbb
popa
mov
mov
sbb
mov
ja
in
ret
adc
popf
dec
pushl
cmp
mov
push
xlat
xor
test
out
nop
mov
scas
leave
push
shr
movsl
out
cli
call
pop
cmc
mov
jbe
dec
or
cmc
js
add
jle
mov
pushf
dec
test
mov
cwtl
insb
movsb
iret
sbb
push
xlat
outsb
mov
sub
cwtl
mov
pop
cmpsb
sbb
aam
push
scas
pop
cmc
push
jp
mov
aam
and
sahf
mov
mov
xor
nop
es
lahf
enter
mov
int3
aad
lods
dec
and
xchg
loop
pusha
adc
loopne
cld
mov
sarb
mov
jl
sub
sbb
dec
data16
xlat
gs
sub
arpl
fstps
cltd
outsl
jno
mov
and
loope
sbbl
fcmovnu
jns
mov
jp
xchg
xlat
lods
mov
int
insb
sbb
dec
xchg
in
or
adc
push
and
fwait
jnp
cld
inc
sbb
dec
or
inc
in
hlt
xrelease
test
test
push
shl
inc
outsl
adcb
mov
cli
pushf
daa
sti
shrb
add
pushf
push
lds
lods
int
shll
add
test
add
adc
add
frstor
sbb
push
push
popf
clc
sbb
js
cmp
test
outsl
shrl
and
mov
out
pushl
fldt
cmpsb
sbb
or
or
das
clc
jle
push
mov
lret
mov
push
sbbl
nop
stc
dec
and
hlt
push
fsubrl
mov
cmp
sbb
fisubrl
ja
pop
adc
pop
xorb
mov
repz
loop
lahf
dec
pop
xor
shrl
push
pop
ret
pop
rorb
xorb
xor
jl
xor
dec
int
adc
in
push
hlt
mov
inc
or
das
mov
mov
mov
repz
and
mov
jae
scas
imull
pop
lds
mov
add
pop
leave
gs
fidivl
lcall
ljmp
repnz
outsl
dec
jmp
mov
cmp
xchg
movsl
lcall
in
dec
mov
inc
daa
or
gs
scas
call
cmp
pop
repnz
mov
mov
push
mov
jo
cmp
jge
pushf
inc
jl
iret
jle
sbb
test
lods
mov
in
sub
sub
xchg
in
leave
into
xchg
push
pop
inc
add
cltd
dec
out
pop
shrb
lods
dec
mov
loopne
das
mov
or
xor
lcall
mov
sbb
leave
mov
leave
xchg
arpl
mov
mov
jl
arpl
imul
popa
push
imul
pusha
inc
lret
sbb
add
mov
lret
push
lahf
push
bound
ret
dec
mov
arpl
das
mov
inc
call
nop
sbb
dec
fwait
andb
adcl
and
lcall
mov
inc
ret
shrl
push
sub
or
xlat
rolb
mov
xchg
ss
mov
add
outsb
mov
lods
mov
mov
loopne
sar
mov
fld
js
pop
clc
das
mov
sub
cmp
pop
jnp
fs
add
divb
int
cmp
repnz
push
jp
cmp
mov
movsl
sbb
xchg
arpl
inc
sbb
mov
or
or
add
test
mov
cwtl
jl
sbb
addb
insb
in
or
xor
std
mov
mov
lea
ffree
xor
add
pop
xchg
mov
mov
std
dec
mov
mov
inc
dec
push
pop
cltd
pushl
or
cmpsl
aaa
push
cmp
ret
jne
ja
les
push
push
leave
and
xor
jle
add
add
push
decb
imul
test
jmp
or
aam
jo
fdivr
cwtl
pop
cmp
cmp
dec
addl
stos
in
call
arpl
sti
stc
popa
out
push
mov
stos
jle
inc
dec
xor
iret
push
insb
push
enter
daa
sarb
cmp
ficoml
add
pop
insb
pop
aad
mov
jle
mov
jmp
mov
cmp
push
ja
je
loope
imul
or
mov
cld
cmp
test
or
addb
or
cmpsb
insb
es
mov
xor
fcmove
and
pop
fs
lcall
pop
call
xchg
fcmovnu
lret
push
cmc
lods
outsl
mov
lods
xorb
push
cwtl
or
lfs
ret
inc
add
or
test
jle
push
int3
dec
jnp
jne
fldt
das
add
add
mov
iret
aad
dec
pop
js
or
gs
pop
in
fwait
cld
mov
aad
inc
and
mov
fldl
stc
repz
adc
ljmp
mov
sbb
inc
push
mov
in
push
jno
cltd
dec
int3
jmp
jge
into
xor
rorb
pop
push
sbb
sbb
lods
pop
or
dec
push
ss
loop
xchg
adc
aaa
dec
lret
dec
insl
aad
int3
rcl
xor
ljmp
lahf
mov
jl
jge
sub
inc
sbb
add
sub
sbb
mov
and
inc
fadds
xor
and
push
mov
jo
mov
repz
pop
xchg
ss
jg
addr16
and
push
and
sbb
jbe
lods
jl
test
push
fwait
int3
aam
jo
cmpsb
inc
es
addr16
xchg
mov
dec
xchg
pop
dec
mov
lret
daa
shr
int3
or
mov
jne
pushf
or
in
xchg
push
cmpsb
in
xchg
lds
push
sub
pushf
and
dec
fcompl
ljmp
movsb
sub
std
repz
popa
mov
sbb
sub
imul
sub
dec
in
push
inc
dec
push
dec
ret
mov
push
aad
cltd
push
cmp
es
ret
in
mov
dec
jno
xor
int3
adc
scas
lock
add
jmp
fs
enter
xchg
sub
mov
sub
fdivrs
and
dec
jmp
mov
pusha
cmpsl
insb
adc
addr16
daa
mov
leave
mov
push
xorb
dec
out
ja
mov
int
inc
or
xor
add
jno
adc
aaa
cwtl
push
cs
aas
jno
xchg
imulb
jmp
shlb
adc
dec
sbb
jle
xor
scas
lds
test
ja
sub
mov
ja
or
and
cmpsb
jmp
sbb
cmp
xor
test
pop
stos
out
or
jle
movsb
adcl
mov
and
adc
add
mov
rolb
adc
jno
mov
and
inc
nop
stos
push
ss
push
cmp
loop
out
popa
mov
push
cmp
xchg
fldenv
dec
jb
sbb
push
arpl
hlt
and
pop
lods
ss
jae
sub
and
cmc
gs
xorl
push
pop
xor
mov
mov
xor
movsb
mov
sbb
pop
mov
in
ljmp
mov
mov
test
aas
dec
popa
psrld
sub
push
sbb
in
xor
mov
push
add
jno
nop
inc
cltd
in
and
jp
adc
mov
push
scas
mov
adc
pop
or
into
jl
pushf
cld
mov
sub
mov
xchg
inc
pushf
pop
roll
cmp
gs
or
add
xor
fstl
insb
scas
jbe
fst
pop
xor
out
sbb
mov
ret
push
shlb
dec
test
mov
jge
outsl
add
leave
xor
cli
cmp
or
rcrl
push
or
jne
ret
xlat
jmp
rcll
out
sbb
cmp
lds
mov
loope
pushf
xchg
mov
mov
into
addb
fstpl
pop
or
jae
mov
xlat
inc
shll
push
imul
test
push
cli
or
int3
mov
sti
fcoms
int3
fmulp
xor
xor
orb
jae
fcoms
or
adc
adc
push
sub
ret
adcb
movsb
push
xor
or
lcall
aad
out
mov
lret
lods
out
dec
pushf
dec
xor
inc
sub
sbb
pop
fisubrs
jae,pt
cmp
movl
mov
imul
mov
cmp
mov
sbb
lret
mov
ljmp
aas
cmp
xchg
clc
adc
cwtl
les
push
mov
cmp
adc
lods
test
pop
or
adc
dec
pop
push
jp
divb
test
in
ret
bound
sbb
loope
test
add
mov
fdiv
stos
ret
adc
xor
cmp
cmp
jo
or
imul
pop
cmpsl
mov
xor
pop
add
into
or
pop
mov
arpl
cli
xor
fdivrl
test
call
and
sti
icebp
push
ljmp
int
add
das
stos
fwait
scas
loopne
hlt
sub
pop
pop
mov
shll
xor
sbb
popf
and
flds
pop
mov
out
daa
test
sub
mov
or
leave
mov
inc
push
or
xchg
and
mov
jo
mov
or
das
add
es
pushf
jge
jne
mov
cli
ret
xlat
jns
lahf
enter
inc
sbb
fisttpll
adc
xchg
mov
xchg
outsl
cmc
jl
push
cmp
xor
sub
pop
pop
in
sbb
faddl
mov
pusha
add
mov
xchg
dec
fistpll
jle
mov
inc
mov
push
xchg
push
fucom
test
jmp
mov
inc
sbb
cld
xchg
loope
imul
push
shlb
mov
and
outsb
push
xor
sbb
outsb
lods
push
xchg
or
dec
insb
jle
loope
mov
cltd
mov
outsl
std
or
das
pop
push
adc
jnp
rclb
push
popa
jecxz
out
or
and
loop
sbb
cwtl
jns
mov
shll
inc
jae
xor
icebp
cmp
in
in
subl
test
sub
dec
inc
xor
jg
ret
in
cmp
test
jo
lods
push
inc
sbb
std
mov
and
es
insb
iret
mov
push
sbbl
test
pusha
in
sub
push
fsubrs
adc
push
imul
push
jbe
sub
xchg
stos
pusha
mov
sti
outsl
jbe
cld
test
sub
daa
cs
pop
sub
and
out
jne
ja
addl
push
imul
adcb
add
adc
mov
ret
mov
ljmp
sub
fldl
cmp
jg
xor
adc
add
mov
rol
xor
fcmovnbe
dec
or
or
sub
pop
push
mov
and
out
pop
cld
mov
add
stos
inc
out
jge
and
mov
xor
or
cmp
nop
jne
jmp
pop
ficomps
imul
movsb
mov
jb
push
hlt
arpl
mov
pop
addl
notb
or
xor
inc
subl
xor
mov
insb
test
pop
sub
mov
ror
mov
iret
outsb
mov
fildll
into
cmpsb
xchg
fldenv
jo
xor
cmp
lret
repnz
mov
sbb
dec
repz
cmp
leave
call
mov
mov
sbb
mov
mov
inc
mov
mov
jae
sbb
mov
shlb
xor
call
pop
sub
mov
subl
push
push
mov
nop
movsl
outsl
fnsave
aaa
xchg
and
cs
leave
repnz
lock
fmuls
adc
mov
outsb
dec
pop
cmp
jle
outsb
fwait
mov
andb
loope
movb
cmp
add
or
call
js
xor
movsl
cli
sub
adc
add
mov
dec
sti
rcll
xchg
sbbl
add
mov
adc
cltd
fstsw
jle
and
imul
push
mov
cmpl
xor
dec
mov
test
pop
mov
xlat
and
imul
shll
jp
add
mov
out
in
mov
push
mov
dec
xor
imulb
mov
repz
jno
cmpsb
mov
mov
aas
push
mov
notl
mov
fisubrs
dec
notl
mov
lds
push
subl
arpl
mov
icebp
repnz
push
data16
xchg
shl
outsb
jbe
dec
ret
leavew
les
arpl
ja
mov
mov
inc
mov
mov
cmp
xchg
mov
pop
sbb
pop
nop
push
shll
js
in
cmp
sbb
cmp
sbb
loop
daa
out
push
mov
mov
sub
mov
sar
adc
xor
fisttpll
cmp
push
mov
daa
testb
scas
jle
mov
jecxz
pop
and
and
test
cmp
xchg
in
dec
cwtl
shll
outsl
or
popf
lret
pop
cmp
pop
js
rclb
sti
mov
sub
out
or
jo
and
xchg
sub
pop
into
jne
in
fdivl
xchg
jg
mov
ljmp
in
cmp
push
out
jg
js
dec
adc
outsb
cvtps2pi
sete
mov
out
out
addb
push
int3
pop
xchg
and
add
xchg
sub
jecxz
in
pop
inc
aam
cmc
sub
lret
or
adc
or
icebp
repnz
out
push
shlb
mov
leave
mov
jnp
cmpsl
cs
mov
leave
mov
out
push
repnz
insl
outsb
jae
inc
jns
sahf
pop
roll
scas
aas
adc
add
mov
mov
xor
mov
mov
jb
mov
outsb
xor
xchg
xchg
imul
mov
lods
mov
mov
shl
lcall
scas
push
xchg
or
or
mov
daa
ficoml
fdivl
ret
imull
ljmp
xchg
movb
loope
fwait
test
loopne
jae
jb
push
js
out
pop
and
hlt
fcoml
add
lods
das
or
insl
jp
daa
cltd
dec
or
jp
or
lret
pop
add
lock
inc
jae
ficoms
pop
mov
mov
xchg
fwait
lea
adc
push
int3
cwtl
repnz
aad
iret
adcb
enter
add
or
sbb
adc
and
out
clc
mulb
xchg
aam
xchg
sbb
mov
sbb
lock
or
les
rcll
mov
inc
dec
cmp
icebp
shl
dec
addb
jb
imul
dec
aas
cmpsb
pop
xchg
mov
call
aaa
adc
jmp
rclb
mov
fs
or
push
aam
mov
xor
xor
push
push
jle
lret
jne
stc
jbe
mov
iret
movsl
test
cmpsb
fcompl
pop
fsub
repz
mov
clc
mov
push
sub
add
mov
repz
jl
mov
jp
repz
cmp
mov
clc
lea
lret
jno
xchg
push
in
stc
imul
or
lods
inc
jmp
sti
pop
pop
adc
cs
insb
xorb
mov
add
mov
adc
pop
in
jns
shl
push
cmp
enter
lret
push
adcb
pop
movsb
out
mov
data16
aaa
out
and
rolb
push
pop
lock
je
push
enter
in
out
cmp
fstpl
imul
mov
xchg
ljmp
sbb
mov
inc
pop
fisttpl
out
or
or
cs
icebp
push
inc
std
repnz
iret
subl
sti
xchg
std
out
or
mov
test
mov
dec
ss
sti
xchg
fadd
and
imul
xchg
ret
sti
sub
je
stos
add
mov
xchg
repz
sbb
add
or
push
es
lahf
fs
cmp
fbld
jmp
push
mov
or
xchg
add
sarl
cwtl
xchg
addr16
arpl
lods
dec
pop
jmp
xchg
mov
icebp
push
sbb
mov
lret
or
sub
dec
mov
push
mov
movsl
and
scas
ret
dec
push
shll
sub
ja
mov
lods
xchg
fadd
int3
mov
or
pop
dec
shlb
mov
repnz
out
mov
in
add
fwait
mov
out
sub
sbb
xor
push
stos
test
sub
cmpsl
ds
fidivrs
lods
or
call
xor
push
cmp
adc
xor
cs
hlt
sub
lret
test
push
loop
cltd
fs
push
jno
data16
mov
xor
sbb
cs
aam
xor
mov
psadbw
xchg
sbb
inc
je
push
jmp
fwait
aam
mov
mov
sub
lock
fistpll
enter
mov
sbb
jle
mov
pop
sbb
push
movsb
cmpsb
and
popf
shrb
incb
push
nop
sub
sarb
or
ficoml
popf
fsubrl
xchg
data16
cld
aas
inc
xchg
cmc
and
outsb
lock
jb
daa
dec
add
lods
mov
push
and
in
jge,pt
push
inc
insb
movsb
movsb
test
cld
in
pop
push
mov
xchg
outsb
scas
loopne
sub
xchg
adcb
xchg
dec
cwtl
push
test
adc
pushf
movsl
mov
or
push
test
aas
ja
aam
cmp
jbe
out
jmp
adc
fstps
testl
dec
inc
in
mov
xor
add
in
shlb
cmova
lcall
pusha
popa
xor
sahf
dec
inc
mov
jno
roll
clc
fildll
inc
mov
mov
hlt
adc
xor
dec
pop
fnsave
ret
push
nop
ss
movsb
cmp
adc
mov
pop
mov
frstor
dec
push
and
lods
enter
dec
ret
xchg
adc
add
push
aaa
incl
xor
jecxz
les
add
add
adc
lods
fimull
repz
sub
lods
inc
xlat
inc
fistpl
jecxz
inc
movsl
inc
leave
inc
ficomps
xchg
rep
cmpsl
in
call
push
dec
dec
iret
sti
ds
ror
jb
cmp
push
pop
cld
std
out
jg
shrb
adc
add
xor
xor
hlt
es
fstl
xor
daa
fwait
or
dec
lock
push
testb
cmp
dec
stos
lds
sbb
testl
mov
jg
cltd
mov
scas
repz
cmp
xchg
movb
mov
xchg
pusha
inc
mov
xchg
pop
adc
sub
inc
mov
femms
fistl
or
in
sbb
dec
fwait
int
sbb
repz
stos
mov
push
or
dec
cs
pop
out
mov
divl
insb
cmpsb
das
insb
dec
cld
lahf
cmp
mov
inc
rcr
addb
arpl
mov
xor
mov
push
out
notl
in
jg
mov
dec
inc
add
imul
pop
xor
loopne
sub
sub
fs
jb
mov
movsl
aaa
je
ja
pop
cld
jp
mov
xchg
push
fst
adc
imul
movsl
gs
aam
mov
xchg
dec
movb
jo
cmp
push
cld
es
or
pop
push
push
xchg
mov
jecxz
or
test
pop
cmpsb
testb
mov
xchg
stos
test
out
add
aaa
loop
ds
dec
test
into
sub
cmp
xor
mov
or
outsb
push
adc
adc
xchg
divb
mov
loop
jo
pop
jge
xchg
pop
stos
cmc
mov
cmp
pop
icebp
sub
jg
jbe
and
adc
fdivrl
push
mov
cltd
dec
or
cli
push
bound
adc
sub
aam
mov
insl
adc
lea
cmc
add
rclb
sti
movsb
imul
hlt
data16
jecxz
add
push
cli
and
dec
out
xor
ret
push
je
imul
dec
jno
test
dec
cmp
bound
std
hlt
xor
pop
xchg
sub
push
xor
inc
popa
add
jge
xlat
dec
xchg
mov
mov
in
push
rclb
js
xor
sarb
sbb
call
gs
push
fstps
in
mov
std
mov
push
push
dec
xchg
lahf
mov
das
xchg
dec
rep
popf
nop
adc
imull
xor
xchg
push
jne
les
icebp
addr16
shll
insb
icebp
and
loope
in
adc
into
cmp
lods
cmp
pop
mov
mov
ficomps
mov
mov
out
mov
cli
adc
inc
cmpsb
xchg
stc
jnp
lret
xlat
xchg
add
add
mov
mov
test
frstor
out
arpl
xlat
lahf
add
pop
add
nop
fnsave
inc
nop
sub
nop
jl
push
loop
xchg
pop
jo
sbb
adc
xchg
jo
push
aas
dec
xchg
pop
mov
pop
jno
inc
mov
push
test
dec
inc
mov
mov
rorb
sahf
push
jl
sub
leave
std
movsl
push
jns
daa
lods
lcall
outsb
cltd
addr16
dec
dec
adc
ja
jl
fisttpll
jp
bound
push
nop
shl
jge
stos
lret
je
and
adc
outsl
notl
mov
dec
or
push
dec
dec
mov
popf
sub
jno
inc
in
ds
in
adc
shl
xor
push
decb
int
sub
icebp
ljmp
out
mov
pop
pop
jb
mov
mov
pop
sti
add
mov
mov
sub
cmp
xchg
push
dec
xor
adc
cli
jne
cmp
xchg
sub
cmpsl
add
and
adc
mov
mov
pop
cmpsl
rcrl
js
adc
out
iret
adc
inc
cmc
jno
je
je,pt
push
lcall
loopne
fs
sbb
inc
mov
pop
lahf
or
cs
fbld
mov
cli
adc
insl
imul
les
add
ret
icebp
dec
jbe
jmp
arpl
loope
mov
idiv
movsl
mov
inc
ljmp
jle
dec
inc
pop
loopne
out
loopne
mov
subb
dec
sub
xchg
pusha
cmp
mov
js
push
or
cs
lods
daa
pavgw
add
cmpsl
nop
mov
ss
push
jle
jbe
inc
cmp
pop
inc
cld
leave
out
and
mov
pop
adc
sub
mov
aaa
mov
jno
ror
pop
xchg
or
push
cmc
and
rolb
fsubs
mov
and
aas
cmp
nop
jge
repnz
add
jbe
adc
cmp
add
ret
inc
leave
pop
add
mov
cmpl
dec
pop
adc
dec
mov
test
add
or
push
pop
adc
sbb
ljmp
insb
jl
mov
ds
in
mov
inc
cmp
loope
jo
cld
outsl
dec
and
cmp
movsb
mov
bnd
std
lcall
lahf
jmp
mov
lret
call
testl
pop
outsl
cmp
push
jmp
stos
mov
enter
cwtl
adc
insb
push
scas
mov
or
stos
test
pop
xchg
sti
popf
cwtl
cmp
mov
test
cmp
and
cmpsl
call
push
ss
jle
xchg
les
adc
xchg
xor
insl
mov
push
jge
add
xlat
test
insb
mov
or
aas
dec
xor
bound
stos
mov
sbb
jbe
stc
mov
sarb
or
cmpsl
cmp
subb
divl
pop
jo
div
push
call
cmp
sbb
jne
add
mov
enter
jbe
sahf
loopne
mov
or
xchg
lret
mov
mulb
inc
mov
add
cmp
pusha
push
jp
cvttps2pi
adc
ret
and
rcll
and
js
negb
loop
dec
pop
cmp
shll
je
sbbb
mov
sar
push
jnp
loop
sbb
neg
je
aaa
mov
lcall
mov
ds
js
mov
mov
scas
adc
sub
mov
aas
jb
lea
rolb
jl
test
cwtl
scas
mov
out
lret
mov
add
nop
push
movsl
xchg
push
mov
test
data16
pop
imul
in
std
cmp
int3
enter
out
pushl
cmp
xchg
xchg
and
imulb
jmp
mov
mov
dec
xor
repz
lcall
cwtl
or
mov
rolb
or
cmp
jno
popa
push
mov
int
jno
notb
fldt
cmc
imul
xorb
out
out
mov
test
or
cmpsb
es
jge
pop
xor
cmc
mov
sbb
cmp
and
aad
out
push
int3
insb
test
or
jle
scas
les
repnz
int
cmp
fidivrs
xor
test
ret
stc
hlt
mov
dec
daa
pop
roll
push
gs
daa
mov
mov
movl
fildl
inc
mov
mov
adc
mov
loope
loop
ficoml
inc
mov
mov
cmp
mov
repnz
testl
fwait
xchg
dec
subb
jae
or
jne
daa
add
adc
mov
lods
test
enter
inc
inc
ffree
test
jo
bound
scas
cwtl
push
test
cmpxchg
outsl
push
in
mov
xor
js
mov
clc
arpl
sub
and
dec
dec
or
in
pop
dec
into
in
cmp
add
es
icebp
aas
xor
outsb
adc
aam
mov
sub
mov
mov
pushf
inc
mov
push
test
imul
fucomip
xor
cmpsb
push
sub
dec
sbb
int3
addr16
shll
lret
outsl
mov
int
cs
dec
mul
dec
cmp
imul
je
ds
cmp
add
push
add
push
dec
orb
daa
es
lret
jp
outsb
aaa
cltd
js
das
inc
mov
es
inc
jb
xor
rcl
push
jmp
cmp
pop
or
jno
push
mov
mov
loope
cltd
add
xchg
mov
xchg
hlt
mov
xchg
stos
hlt
test
jg
xchg
inc
or
add
pushf
and
inc
enter
rolb
pop
movsl
scas
pusha
loop
mov
adc
cmp
or
and
and
in
imul
add
stos
add
add
cmp
mov
jmp
adcb
in
mov
leave
mov
sub
mov
cmp
jae
inc
xchg
mov
sub
popa
int3
push
call
shll
adc
add
adc
mov
jnp
mov
mov
jbe
adc
push
push
sbb
sbb
add
inc
mov
mov
xchg
aaa
out
je
adc
jbe
jmp
jge
xchg
jb
sub
addr16
dec
xchg
adc
inc
and
mov
enter
jmp
jo
andl
in
mov
imul
in
imul
mov
and
add
movsb
mov
pop
inc
xor
adcb
cmpsb
inc
cmp
and
inc
dec
js
adc
leave
fsts
inc
subb
insl
stos
cmp
sti
out
push
mov
aaa
mov
sub
or
jo
mov
mov
or
adc
xchg
and
or
push
jno
cmp
js
cld
insl
addb
loopne
fistps
repz
sbb
or
jbe
pop
mov
fiaddl
mov
subl
scas
jmp
sti
test
adc
jnp
jb
inc
fdivr
sbb
rcl
inc
dec
mov
lock
xor
adc
mov
push
fistpll
scas
inc
cmc
mov
pop
ficompl
or
or
push
std
xlat
out
gs
sub
push
scas
loopne
lock
daa
dec
push
in
int
inc
mov
andb
jbe
stos
out
push
sbb
mov
nop
or
xchg
mov
sub
pxor
or
fidivs
inc
sbb
insb
dec
fnstsw
add
cmp
pop
inc
ror
dec
inc
adc
inc
inc
lock
sbb
mov
cwtl
das
xor
jno
jo
fildll
push
subl
or
jae
xor
clc
dec
xor
fstpl
mov
mov
xor
cmp
cltd
test
xchg
xor
xorb
dec
je
das
lods
jnp
sbb
pushf
jnp
cmp
iret
push
lods
aaa
mov
cltd
mov
lret
cwtl
sar
push
sub
xor
mov
mov
jmp
incl
jmp
ljmp
or
mov
sbb
xor
into
mov
fdivs
jp
mov
popa
dec
fldenv
cmp
rolb
cwtl
dec
or
push
nop
mov
mov
popf
xor
fucomi
sbb
into
jg
xor
jl
cmpsb
lret
push
cmp
mov
xor
stc
push
cmpsb
movsl
xchg
xor
cs
lods
sub
xchg
sbb
stos
out
hlt
imul
sub
cmp
jecxz
inc
rcll
cmp
mov
pop
mov
scas
mov
in
lret
es
ret
out
rorb
lcall
ret
jp
cmp
into
inc
into
call
add
xor
lret
sub
mov
sbb
rorb
scas
call
imul
and
mov
movsl
fcmovb
or
andl
mov
notb
mov
ljmp
repz
or
adc
aas
jge
shrd
or
or
pop
test
aas
and
cmp
and
fisttps
jp
add
js
sub
jb
mov
mov
jb
mov
int
bound
xchg
outsl
inc
fs
xchg
loope
cmc
inc
cmp
bound
test
pop
add
xor
inc
or
pop
clc
dec
clc
sbb
pop
xchg
loope
stos
dec
fiadds
push
sbb
sub
sbb
cmp
add
add
cmp
fisubrs
mov
inc
add
adc
fistpl
arpl
arpl
in
in
out
cmpsb
ret
mov
mov
mov
rorb
loope
rcr
cli
mov
pop
mov
lock
scas
repz
rcl
imul
mov
jp
dec
pop
push
inc
sub
cmp
popa
imul
out
jl
and
rcl
mov
inc
mov
push
pusha
sub
inc
aaa
jnp
mov
insb
movsl
sub
push
pop
les
fwait
xchg
incb
popf
mov
push
fldl
inc
sub
or
subb
stos
push
pop
mov
imul
repz
rolb
ret
pop
leave
mov
js
out
inc
adc
jmp
jmp
pop
mov
scas
notb
cwtl
stos
data16
adc
callw
fcomps
loope
push
add
mov
sbb
jns
mov
xchg
mov
adc
aas
mov
push
test
test
cs
in
adc
mov
test
push
fstps
mov
mov
mov
fwait
mov
in
jmp
pop
mov
add
repnz
mov
ret
inc
fdivl
aam
icebp
sub
adc
mov
sbb
sub
aad
lahf
mov
test
inc
xor
sbb
test
or
inc
out
out
mov
jecxz
push
arpl
cmp
adc
inc
les
mov
jbe
add
jne
clc
cld
shl
sub
fcoms
hlt
enter
cmp
and
es
je
jbe
xchg
and
leave
mov
dec
divb
int
pop
std
mov
jg
push
popa
xchg
lea
or
jp
mov
jge
pop
mov
xor
outsl
call
xchg
outsl
ja
mov
cs
push
loopne
test
mov
mov
mov
out
adc
shlb
push
sub
call
sub
cltd
orl
out
xchg
sbb
or
xor
xchg
dec
pop
push
out
cmp
mov
push
adc
fnstenv
or
mov
inc
xchg
pusha
repz
pop
sub
push
mov
ret
adc
push
push
in
cmp
pop
int
repz
insl
jne
mov
fidivrs
lahf
incb
cmp
movsb
sub
or
or
outsb
mov
div
clc
mov
mov
dec
cmp
fbstp
movsl
loopne
mov
dec
es
adc
divb
jae
mov
mov
imul
mov
push
imul
fwait
jo
pop
sbb
cli
jns
ja
ret
mov
repnz
xorl
fs
dec
lds
sar
into
fwait
popf
sub
in
mov
mov
adc
and
push
stos
mov
dec
stc
sbb
fldl
scas
pop
insb
lcall
test
jns
jge
sub
lods
mov
stos
cmp
loope
icebp
and
pop
repnz
xor
mov
dec
cltd
fwait
arpl
cmp
xchg
andb
xchg
pop
jae
xchg
enter
leave
sbbb
mov
les
push
sbb
cmp
test
cwtl
inc
into
lret
js
fldt
xchg
and
jmp
dec
test
jp
adc
orl
jae
sti
pop
ljmp
mov
or
add
xchg
push
cmp
mov
neg
mov
popf
mov
push
push
int
cwtl
mov
and
dec
loop
adc
int
std
fwait
mov
hlt
dec
ret
lcall
movsl
mov
ret
clc
mov
decb
push
cmp
mov
test
inc
add
in
jl
stc
loop
jno
xchg
add
push
pop
pop
sbb
xchg
push
fidivrs
leave
xchg
inc
mov
xchg
lods
and
mov
cmp
sub
hlt
scas
mov
mov
dec
mov
pop
stc
add
mov
ret
add
pop
inc
repz
test
jge
or
adc
mov
fidivs
out
addr16
ret
pop
mov
in
in
jno
xchg
mov
add
sbb
es
pop
hlt
in
fldl
int3
into
out
insb
lahf
out
scas
popl
mov
inc
adc
outsl
jg
pop
mov
sbb
imul
xlat
lret
mov
lret
push
int3
jp
dec
cld
sbb
jecxz
jb
or
ja
inc
ret
or
aam
nop
sarb
pop
mov
xlat
jmp
mov
xchg
clc
and
pop
pop
shl
or
imul
sbb
xchg
ljmp
mov
shlb
js
cmpb
gs
mull
xchg
lret
inc
ss
lods
jne
stos
scas
adc
in
sbb
xchg
ret
adc
pusha
movsl
pop
fdivl
lcall
out
je
fstl
cmp
xor
inc
insb
in
dec
cmp
fnsave
sbb
pushf
mov
add
add
sub
ja
insb
les
pop
pop
mov
adc
ljmp
add
ds
and
fnstcw
jg
pop
push
mov
out
or
aam
gs
sahf
jbe
loope
movsb
sbbb
jo
stos
push
pop
or
and
sbbb
mov
bound
fs
mov
das
sahf
unpckhps
cltd
and
fstpt
jg
test
jne
jl
stos
cmpb
add
mov
add
movsl
push
mov
and
add
pop
push
cmp
je
lock
iret
push
sbb
cmp
pusha
jb
or
fwait
lcall
pop
lods
pop
dec
dec
js
mov
push
or
popaw
cmp
loop
sbbl
xchg
stos
push
ret
mov
mov
and
xchg
pop
jge
jbe
pop
pusha
scas
aad
push
cmpsb
and
test
andl
xor
and
int
loop
jae
push
adc
ja
jp
movsl
or
movsl
push
mov
add
jl
dec
xor
lcall
xor
xchg
into
clc
mov
cltd
test
sub
daa
push
xchg
sarb
jne
scas
out
jmp
cmp
insb
lret
fnstenv
stc
dec
push
aad
push
stc
rolb
cltd
sbb
sub
push
lret
outsl
or
loope
or
sbb
cmp
jns
sbb
mov
in
outsb
inc
inc
push
xchg
or
addb
adc
inc
aam
out
sbb
cmp
push
in
mov
jno,pn
mov
insl
fwait
sbb
icebp
ja
and
xlat
dec
int
xor
add
inc
mov
and
sbb
xor
pop
in
fimuls
test
fs
mov
xchg
cmp
xor
mov
sarl
negl
sub
adc
icebp
je
shlb
std
gs
mov
ret
jecxz
dec
rorb
lahf
enter
dec
jp
and
imul
sub
dec
mov
cmp
pusha
loopne
ja
mov
pusha
push
jne
sub
adcb
addb
arpl
fsts
and
or
lcall
jmp
cmc
outsb
sub
and
aaa
cmp
xchg
add
hlt
mov
jo
sti
loop
pop
hlt
xor
js
cmp
mov
mov
sub
int
imul
dec
lcall
sub
movsl
xor
imul
adc
sub
inc
mov
pop
sbb
pop
fcmovnb
adcb
andl
xchg
inc
add
or
pop
mov
fld
data16
dec
mov
cmc
adc
mov
aaa
mov
sti
pushf
jl
pop
sbb
popl
mov
or
loopne
mov
std
in
rcll
lock
mov
adc
mov
push
add
loope
div
dec
xor
roll
and
jl
lcall
loopne
imull
imul
loop
idiv
xchg
push
in
jl
imul
xlat
sysenter
inc
je
inc
sub
test
stos
jnp
mov
and
push
bound
adc
ljmp
les
push
pop
outsb
push
aad
mov
fcoms
outsb
jb
orb
and
pop
dec
pushf
push
cmp
scas
push
fincstp
mov
adc
jmp
out
mov
testb
adc
cmp
adc
cmpsl
dec
mov
lods
fistpll
xlat
pop
lcall
stc
xchg
and
test
jmp
or
test
movsb
stos
pop
imul
or
inc
and
cltd
mov
pop
xchg
push
jne
fwait
aaa
out
push
pop
lods
cmpsl
iret
or
data16
test
mov
loop
cli
pop
ret
cmp
pop
adc
lods
aaa
sub
mov
scas
or
fisubl
mov
push
sub
pop
pop
cmp
insb
fimuls
icebp
xor
test
rclb
xchg
adc
pop
clc
sub
dec
ret
xchg
std
push
enter
xchg
adc
xor
jo
hlt
fsincos
jl
lahf
jecxz
in
mov
addr16
and
xor
sbb
rclb
popf
stos
into
mov
jno
and
xchg
mov
sub
fadds
lret
sbb
pop
pop
add
sbb
inc
shl
or
cmp
loope
pusha
push
adc
outsb
cmp
pop
dec
pop
int3
jns
ds
lret
sbb
stos
mov
mov
imul
mov
mov
fwait
sti
or
hlt
imul
push
mov
stc
add
dec
lahf
imul
dec
cmp
outsb
adc
fcmovb
fbld
arpl
adc
adc
mov
out
outsl
nop
push
sub
adc
jo
fcoms
aad
in
mov
sub
inc
mov
sbb
cs
int3
test
orb
xchg
mov
in
xchg
pushf
jle
pop
cli
aam
jmp
add
dec
push
dec
cmp
push
adc
enter
sub
add
inc
int3
aam
nop
outsl
orl
jmp
xchg
mov
popa
inc
adc
adc
cmp
mov
stos
pop
addr16
psrld
push
push
dec
push
cmp
add
pop
out
sbb
sbb
lods
jecxz
mov
jg
insl
jmp
mov
fidivl
pop
jbe
lea
cmp
jne
xor
int
pop
pop
sbb
aas
add
lds
cmp
ljmp
fidivrs
push
es
mov
xlat
int
cmp
stos
mov
dec
pop
out
or
mov
cs
sbbl
sbb
scas
stos
outsb
cmpsl
xor
xchg
jecxz
cmovns
jl
shll
mov
aaa
inc
lods
xor
aam
fistpll
ret
mov
mov
xchg
lea
push
out
mov
mov
or
bound
adc
movsb
pop
idiv
push
scas
xor
sbb
cld
push
mov
cwtl
popf
nop
fdivs
push
mov
sbb
mov
dec
daa
mov
xor
sbb
push
outsl
cmp
pop
mov
dec
push
aas
mov
pop
stos
leave
test
lods
scas
mov
js
and
mov
into
dec
xor
or
outsl
xchg
inc
inc
xor
xchg
cmpsl
clc
xchg
push
and
or
std
cmpsb
in
mul
out
outsb
cltd
or
roll
mov
jae
xchg
push
ds
lret
sti
outsl
jo
or
daa
mov
stc
push
shlb
ret
int3
fdivrs
aad
xchg
int3
xchg
faddl
hlt
mov
pop
cwtl
popf
sbb
mov
push
mov
xchg
imul
jmp
sbb
push
push
xchg
push
pop
push
cmp
lods
push
ds
movq
test
lea
rcrl
leave
fst
jl
cmc
pushf
or
mull
mov
scas
mov
in
pushf
stos
dec
pop
push
cmpsb
xor
dec
out
sbb
loop
lock
jnp
add
push
mov
stos
adcl
jo
shlb
out
xchg
ljmp
lret
sub
lcall
xchg
mov
xor
mov
pop
mov
in
cld
in
call
xchg
roll
push
sub
mov
add
inc
sbb
fs
aam
sbb
mov
mov
pushl
xchg
stos
or
test
daa
and
sbb
add
hlt
dec
or
fs
aad
in
push
dec
or
mov
inc
lahf
aaa
xlat
inc
int3
insb
sbb
sub
pop
add
push
pop
negl
dec
dec
push
jnp
push
repz
repz
dec
inc
fbld
mov
dec
or
stos
dec
pop
les
push
lds
dec
xor
test
out
dec
fsts
js
mov
adc
jmp
mov
fcomip
daa
pop
mov
stos
dec
int3
cmp
shl
mov
out
lcall
nop
add
push
sbb
push
mov
inc
dec
pop
rclb
adc
enter
into
loope
add
out
ljmp
sub
movsl
jg
xchg
dec
mov
sbb
or
sub
jb
insb
mov
lods
scas
pop
lods
aas
cmp
xchg
std
cmp
in
idivl
lock
push
inc
xchg
jbe
cltd
popa
xchg
pop
test
ficoms
push
xchg
js
push
push
add
inc
bound
testb
rcrb
loop
add
sub
loopne
out
sub
imul
sub
cmp
shlb
push
pop
push
xchg
sbb
xor
and
and
nop
loopne
pusha
dec
bnd
fsubl
imul
imul
mov
es
out
adc
pop
push
lret
push
cmpsl
dec
inc
rorl
mov
mov
cli
push
add
and
jns
jno
add
mov
push
jp
lock
cld
xchg
mov
sub
cld
inc
mov
ret
lahf
inc
push
lods
sarb
in
fldcw
icebp
jbe
movsl
adc
idivl
int3
add
xor
aaa
test
out
enter
push
out
jbe
xor
movl
ucomiss
and
pop
mov
xor
pop
shll
pop
dec
xchg
mov
or
aas
jns
es
mov
mov
xchg
icebp
cli
push
out
pop
les
into
jns
adc
mov
mov
mov
sub
sbb
lds
lock
xchg
dec
sbb
dec
mov
rcrb
mov
roll
fcoms
inc
mov
outsb
mov
mov
sbb
sub
mov
fwait
mov
movsl
mov
dec
jmp
cmp
or
mov
sahf
frstor
dec
or
sbb
inc
iret
ret
inc
dec
mov
movsb
rorb
and
mov
scas
cli
int3
cli
jbe
ljmp
mov
out
subl
adc
fisttps
fbld
subl
jbe
add
mov
pusha
imul
or
lds
cmp
inc
insb
xchg
sahf
inc
xlat
pop
sbb
mov
xor
mov
pusha
in
mov
scas
out
iret
int3
fs
leave
leave
cmp
scas
mov
inc
sub
pop
add
loop
inc
xor
ja
adc
loopne
xor
push
cmpsb
dec
addb
rcrb
imul
int
mov
std
loopne
pop
jbe
dec
push
cmp
aas
push
cwtl
sub
xchg
test
sbb
mov
jge
xchg
lock
aas
push
adc
inc
lock
mov
push
mov
push
sub
aad
int
and
inc
andl
js
jmp
fdivrs
mov
cmpsl
call
mov
or
pop
es
fs
lret
je
lret
xor
xchg
into
into
cld
int
sti
xor
clc
mov
inc
out
out
enter
dec
push
push
mull
stc
insb
lret
mov
gs
pop
std
dec
fcoml
xchg
inc
loope
jg,pn
ret
sbb
push
pop
adc
fadd
or
shlb
xor
xor
inc
lods
mov
fwait
dec
pminsw
add
mov
mov
xchg
daa
add
ffreep
stc
inc
xor
pop
push
lods
call
lods
mov
or
sub
loope
add
push
cwtl
pop
pop
pop
fidivrl
xchg
ret
stos
adc
aam
aas
test
mov
xchg
aaa
sahf
lods
fs
mov
fidivrs
lds
mov
fs
pop
mov
add
pop
faddl
out
mov
leave
mov
mov
pop
addr16
addr16
das
aad
ja
insl
mov
mov
test
push
cmc
fldcw
add
xor
ja
aas
lret
dec
xchg
cmc
mov
xchg
push
incl
orl
jbe
pop
aas
dec
outsl
lahf
popa
cltd
mov
xlat
sub
out
gs
jne
sbb
push
pop
adc
ret
lret
into
ds
jnp
das
fisubrl
test
clc
repnz
xor
scas
ss
out
push
std
sahf
iret
push
iret
add
nop
fisubrl
jp
jns
dec
fisttpl
push
mov
pop
sti
cld
mov
loope
and
pusha
sub
shlb
cs
popf
cmp
or
or
cmp
hlt
adc
xchg
add
inc
adc
or
sahf
ds
mov
push
mov
push
sub
lock
mov
leave
mov
fndisi(8087
lcall
sbb
jl
imul
sar
and
lret
ss
and
dec
or
xchg
pop
outsb
cmp
in
lock
add
popa
cmp
xchg
xchg
jae
mov
sub
pop
mov
dec
scas
fwait
enter
dec
hlt
jnp
and
fldl
adcb
pop
cmp
hlt
mov
mov
sub
out
insl
xchg
xor
pop
push
and
enter
cmp
push
push
sub
add
mov
leave
mov
pop
in
or
and
outsl
mov
fisttpll
add
sbb
adc
std
dec
dec
sbb
mov
mov
rol
jno
dec
lret
dec
mov
sbb
adc
inc
gs
inc
ja
clc
dec
mov
mov
icebp
outsl
mov
add
mov
mov
sbbb
out
out
mov
outsb
push
cmc
imul
or
xor
inc
jo
mov
and
enter
mov
aad
dec
add
stos
adc
sub
icebp
and
lahf
push
mov
jmp
mov
decl
ja
pop
sub
out
rorb
adc
daa
sahf
repz
jnp
int3
sub
cmpsb
call
or
fmuls
cmp
mov
add
das
add
pop
sbb
aas
cmpsl
in
adcl
adc
jg
in
rclb
insb
rcl
jp
sub
in
and
jno
aam
push
or
addl
inc
cmp
xor
rcll
jmp
int
into
addr16
cmp
dec
lret
std
ret
jmp
jmp
mov
ret
int3
add
pop
dec
mov
mov
fadd
jns
jg
push
xchg
cs
sub
mov
and
adc
les
aam
mov
xchg
addr16
orb
cli
es
push
shll
or
mov
push
sbb
push
push
xor
repnz
inc
imul
out
jmp
repnz
jne
int3
jl
out
fcmovnbe
mov
or
sti
fistps
pop
lods
adc
add
xchg
cmpsb
push
gs
stos
hlt
inc
mov
lods
push
push
dec
cld
std
sbb
and
jo
test
sahf
pop
push
sahf
xchg
pop
push
arpl
lcall
mov
pop
mov
andl
sbb
sahf
lods
sahf
lret
mov
cmp
aam
lret
fiaddl
fmull
adc
xor
mov
imul
dec
jne
or
mov
and
std
and
in
and
jno
jmp
xchg
inc
stos
or
xchg
daa
jb
movsl
aad
push
divb
scas
and
sbbb
sahf
ds
sbb
insl
es
jns
mov
fldpi
inc
xor
stos
lock
test
adc
fcmove
inc
out
insl
sub
inc
mov
outsl
xchg
rclb
inc
adc
in
sbb
or
jge
sbb
mov
enter
jecxz
aas
cmpsl
stos
shlb
jne
test
cmc
xchg
xor
and
mov
add
cmpsb
lret
mov
jle
pop
stos
or
push
stos
jns
and
push
or
dec
or
mov
jp
add
int
and
mov
stos
dec
cmp
lods
add
scas
addr16
mov
and
fdivrs
add
cmp
je
into
int
and
sti
fsubr
push
fsubs
or
add
jo
mov
jno
push
xorb
sbb
mov
and
scas
inc
enter
inc
add
dec
std
add
inc
fwait
jmp
movsb
int
xlat
xchg
or
fimull
test
pop
and
dec
pop
pop
pop
mov
scas
inc
stos
repz
sahf
je
js
lahf
adc
scas
jp
mov
mov
lea
cmp
outsl
lds
push
xchg
dec
add
daa
test
or
icebp
out
jle
mov
outsb
jo
xchg
dec
stc
enter
lea
pusha
repnz
pop
sbb
jo
mov
push
loopne
dec
lea
js
roll
sub
pusha
xchg
sbb
das
and
sub
mov
sahf
and
xor
rorl
mov
xchg
and
imul
jecxz
xchg
dec
push
loope
jne
fbstp
out
dec
call
jo
fs
push
inc
sbb
cmpsl
sub
pushf
gs
inc
or
sub
faddl
push
lds
xchg
dec
in
pop
sahf
add
jp
sahf
shl
adc
sbb
and
test
push
push
mov
lods
and
cmp
push
inc
xor
std
rorb
dec
cmp
pushf
mov
in
cmp
sub
inc
and
mov
fs
add
rcr
cld
mov
fwait
daa
or
pop
cmp
dec
or
lahf
push
out
push
sahf
cmpl
rorb
insl
inc
add
push
push
data16
and
pop
imul
fisttpll
clc
mov
loopne
cmpsl
loop
nop
mov
daa
movsb
bound
or
ss
xor
mov
out
push
cmp
popa
push
gs
test
sub
mov
jecxz
out
scas
lret
xchg
xor
into
adcl
les
lds
adc
daa
sbb
shrl
iret
jle
and
jbe
mov
aaa
and
xchg
aaa
aaa
pop
popa
or
aad
mov
out
xchg
adcb
scas
mov
jecxz
shlb
xchg
sbb
add
insl
xchg
adc
add
and
add
dec
inc
inc
sub
aam
pop
inc
clc
fsts
pusha
mov
mov
and
dec
loop
insl
cmp
push
pop
adc
sbb
fmull
push
aad
outsl
sub
stc
push
fwait
loopne
inc
subl
xor
ljmp
or
loop
jmp
jle
idivb
xchg
pop
sbb
shrb
mov
pop
push
lret
fistps
jns
lock
cli
outsl
mov
int
inc
in
mov
fcmovnu
push
lock
push
les
in
inc
ljmp
rcrb
jle
or
push
mov
inc
or
or
mulb
mov
push
movsl
scas
push
mov
sbb
sti
mov
inc
pushf
mov
sbb
mov
lods
roll
jmp
lods
lds
mov
jne
pop
ret
or
scas
cmp
enter
inc
mov
lock
out
sahf
sahf
sbb
push
sti
cwtl
xchg
push
mov
in
jne
mov
jno
sti
incb
movsl
xchg
xlat
sbb
mov
or
jns
into
js
cmp
pop
subl
in
adc
push
enter
fwait
xchg
mov
fmul
inc
adc
xrelease
jo
fistpll
mov
jp
inc
addr16
fstps
imul
stc
inc
addr16
repnz
pop
sbb
sub
jb
mov
pop
ljmp
push
mov
xchg
bound
mov
fdiv
stos
mov
jo
dec
jge
sbb
push
sahf
jb
sub
lret
add
sbb
ret
add
jbe
movsb
xchg
out
cmp
inc
inc
dec
rcr
adc
hlt
adc
or
fs
cmpl
jp
js
push
jo
test
sbb
sbb
cli
cli
leave
pmaxsw
ja
sbb
push
mov
enter
and
jmp
sbb
inc
adc
lods
ret
inc
fdivs
pop
mov
push
or
sbb
sbb
sub
mov
ds
inc
mov
cmpsb
lods
sahf
sti
scas
sbb
pushf
pop
shll
inc
add
loope
mov
sbb
xchg
pop
pop
pop
test
mov
fwait
gs
cmp
push
movsl
sahf
xor
push
movsl
pop
call
dec
pop
rcrb
adc
push
inc
js
jbe
xorl
aas
adc
sbb
cmpsl
fisttpl
mov
adc
fmul
or
mov
lea
xor
push
or
loope
inc
pop
shl
jns
add
push
push
add
mov
aam
imul
sub
sbb
nop
stc
cmpsb
popa
stos
mov
shll
arpl
sbb
pop
call
push
adc
or
movsl
mov
or
insb
rcrl
jecxz
xchg
jge
test
mov
rclb
lods
mov
ljmp
call
repnz
shr
fistpll
dec
cwtl
adc
in
cmp
sbb
mov
pop
fwait
jo
lret
out
and
sbb
push
lret
ljmp
cwtl
push
mov
inc
adc
fisttpll
jp
mov
and
push
movsb
loopne
adc
mov
lea
sub
and
cmc
int
pushf
jmp
leave
push
fmull
jne
xchg
mov
pop
sti
jmp
mov
gs
jge
dec
or
cwtl
add
mulb
xchg
xor
jb
push
add
das
push
push
mov
lock
dec
fcmovnbe
mov
std
pushf
lds
enter
mov
pop
jo
xchg
hlt
cltd
sub
adc
test
and
ret
add
aad
push
jo
xchg
in
roll
xchg
aad
mov
push
cmpsl
mov
clc
lret
ss
lea
shl
inc
cmp
pop
or
enter
cmpsb
fsts
cltd
adc
fisubrs
outsl
shrl
jmp
loope
inc
test
xor
push
mov
out
bound
push
rcrw
add
fistpl
cmp
sbb
dec
push
mov
push
in
and
mov
mov
and
mov
test
jae
inc
sbb
xorl
dec
lock
imul
cmpsb
enter
js
mov
mov
or
xchg
enter
xchg
jnp
movups
pop
pop
movhps
imul
sbb
lds
and
in
add
push
in
lret
rcrb
js
outsl
mov
push
iret
sbbb
cmp
arpl
popf
out
mov
mov
add
arpl
cmp
and
mov
sub
hlt
inc
xlat
cli
movsb
mov
cmp
outsl
pop
aam
sub
std
jle
pop
sub
hlt
mov
or
inc
or
movsl
es
push
dec
movsb
mov
subb
adc
je
push
icebp
imul
jbe
sub
cmpsb
sahf
daa
or
jmp
cmp
mov
dec
xor
insl
and
pushf
mov
or
loop
hlt
mov
sbb
call
faddl
dec
push
movsb
sti
or
push
out
xchg
sbb
sub
inc
loop
test
imul
mov
mov
mov
mov
fimuls
xlat
int
inc
jns
pop
sub
add
pushf
imul
inc
jnp
iret
sbb
mov
mov
push
jo
push
xor
pop
xchg
das
shr
fdivl
mov
lret
aaa
pop
rorl
pop
dec
fstl
pop
aaa
movsb
mov
jl
push
inc
jne
aad
fidivs
pop
push
pop
shlb
pop
repz
dec
jp
push
push
jnp
mov
in
arpl
adc
sbb
out
in
mov
loope
cld
scas
jmp
sub
jbe
mov
and
fisubrs
xchg
xchg
pop
cmp
dec
sarl
mov
add
movsb
dec
ja
or
sbb
sub
dec
mov
pop
or
rorb
scas
sub
pop
xchg
ss
daa
test
jecxz
test
adc
scas
dec
ds
adc
mov
repnz
inc
jae
jmp
insl
sbb
jbe
bound
xor
or
jnp
dec
icebp
mov
xlat
stos
sub
ljmp
mov
fdivr
jp
mov
push
jo
push
push
lods
cmp
pop
pop
cmp
js
xchg
test
sahf
dec
cmp
sbb
enter
pop
mov
fstpt
add
push
adc
adc
rclb
cmp
fcoml
mov
insb
sbb
dec
xlat
jmp
hlt
xchg
cmpsl
xchg
inc
sub
pop
xor
imul
addr16
sbb
jbe
xor
mov
js
nop
pop
xor
cwtl
mov
test
pop
lods
jns
xor
sarl
pop
popf
cmc
mov
cltd
lods
mov
adc
pop
insl
jmp
leave
jge
pop
sbb
adc
jecxz
push
add
lcall
sub
xchg
mov
clc
push
int3
das
cmp
lret
in
lret
es
data16
cmp
cmpsb
add
jp
sbb
jns
rorb
ljmp
orb
inc
clc
aam
cwtl
cltd
add
xorl
loop
push
imul
fucom
popf
push
je
jmp
push
mov
mov
push
lahf
xor
mov
std
xchg
and
ja
lcall
mov
xchg
lahf
imul
loope
or
inc
daa
mov
fisubs
std
cmp
repnz
iret
sbb
ret
popf
xchg
idivl
fdivrl
cmp
fisttpl
pop
imul
sub
jle,pt
rol
cmp
push
subb
scas
sbb
enter
adc
xchg
xor
mov
mov
jmp
push
adc
inc
sbb
scas
sub
push
mov
dec
and
in
les
cmpsl
imul
xchg
jb
rorb
cmp
sbb
lahf
in
xchg
add
jno
mov
mov
jne
push
push
lds
push
cs
test
mov
nop
mov
out
jo
cld
mov
mov
leave
aad
ljmp
shl
mov
pop
jg
fistl
dec
icebp
icebp
and
inc
mov
movsl
addb
cmp
shll
or
jecxz
shrl
jbe
adc
push
jbe
mov
adc
or
iret
in
adc
fisttpl
mov
stos
jne
mulb
cmp
shll
sarl
cwtl
push
ss
adc
int
xor
add
push
sbb
cmp
dec
aas
inc
les
mov
in
inc
inc
sbb
ret
bound
mov
push
jo
cmpl
inc
push
jle
shlb
sbb
pusha
or
mov
mov
mov
lds
daa
insb
int
push
repz
in
or
push
adc
jnp
stc
test
jb
pop
mov
mov
rcl
pusha
aas
push
scas
sbb
rcl
cli
pusha
loopne
iret
and
adc
jg
cmp
inc
test
pop
enter
icebp
and
sbb
sbb
lods
leave
xor
lahf
pop
lcall
mov
mov
lods
ss
mov
test
fstpt
xor
out
insl
bound
clc
inc
jge
filds
jnp
test
xchg
stos
sbb
jmp
lret
inc
in
cmpsb
add
pushf
addl
add
loopne
push
aaa
ret
arpl
aad
cs
mov
inc
fisubrs
loopne
and
dec
lock
ret
pop
pushf
fcoml
mov
xor
sbb
jl
call
fsubrs
jno
int3
fcomip
out
jns
mov
fld1
nop
aaa
push
xchg
insl
mov
mov
hlt
push
inc
jmp
mov
dec
andl
pushf
fidivs
mov
pop
jo
xchg
xchg
repz
adc
rcl
xchg
mov
ja
mov
sti
jmp
jae
add
push
dec
repz
push
subl
add
rcll
sbb
mov
sbbb
cs
jo
in
dec
rolb
arpl
sub
repnz
int3
bound
cs
push
enter
scas
out
inc
cmp
xchg
ss
or
pop
and
jge
fisttpl
mov
mov
pushf
es
xor
out
pop
xchg
xor
cmp
sti
sbb
scas
lock
push
cmc
popf
and
cld
dec
sbb
out
jne
jne
insl
mov
lods
and
outsl
or
inc
dec
dec
loop
xchg
adc
inc
mov
cmp
jbe
js
jp
cmp
xlat
jl
ret
add
cld
push
push
mov
jne
push
es
ds
lahf
dec
cmpsb
cmpsb
adc
and
mov
lock
and
pop
aaa
add
std
cmp
in
xlat
rol
rcrb
aad
xor
xchg
push
pop
push
or
push
push
cmp
out
vpaddw
lret
add
mov
cmc
push
in
cmpl
cmp
mov
push
les
inc
lea
inc
arpl
pop
xchg
fdivr
das
adc
push
jecxz
bound
divb
rolb
cli
rorb
sbb
rorl
mov
loopne
cltd
jg
imul
lahf
pop
mov
sti
cld
mov
cmp
push
in
adc
jnp
aad
pop
ja
rcrl
cli
jecxz
pusha
pop
dec
rolb
sarb
dec
jp
xor
dec
arpl
decl
jl
ret
test
mov
ss
cmpsl
cmp
jmp
roll
jae
cmp
dec
dec
push
pop
pop
push
ds
cwtl
and
inc
les
sahf
clc
mov
dec
cmp
adc
fsub
test
subb
mov
shl
loop
int
call
sbb
dec
std
inc
mov
pop
push
cwtl
test
mov
sahf
lcall
in
or
lds
lods
repnz
ljmp
xchg
scas
mov
sbb
aaa
stos
mov
loop
addb
adc
dec
jg
stos
cmp
sahf
jne
and
pop
jl
pop
jbe
pop
add
adc
aas
aad
adc
in
jns
out
pop
fs
dec
add
xor
loopne
andl
mov
mov
mov
repnz
adc
mov
loop
repnz
jmp
add
cmp
int3
inc
imulb
imul
mov
or
cltd
lea
mov
dec
jnp
or
int3
inc
lds
lcall
mov
pop
lea
daa
les
lds
outsl
xor
dec
inc
xor
in
pop
idivl
add
sub
jae
mov
xor
xor
mov
fldl
ljmp
pusha
cwtl
mov
mov
push
and
cmp
leave
sbbb
add
mov
cmp
xor
outsl
ret
in
test
push
es
in
cmp
enter
orl
inc
enter
pop
push
cld
sahf
adc
mov
push
in
xchg
loope
push
ret
add
dec
stc
sti
adc
add
add
lods
jns
sbb
mov
xchg
mov
cmp
cmp
xchg
lods
xchg
pusha
insb
jne
ret
repnz
nop
ret
in
inc
pop
mov
inc
sti
lea
lret
pop
out
push
mov
arpl
adc
jne
xchg
push
dec
lds
out
rol
inc
movd
add
lds
xchg
sbb
sub
add
push
pop
jmp
outsb
fisttpll
lock
pop
add
pop
push
fistpl
orl
aam
mov
imul
roll
arpl
shrl
mov
jecxz
ljmp
mov
stos
jnp
mov
mov
jl
lret
mov
sub
jle
jl
and
dec
fwait
int
arpl
and
add
scas
and
dec
dec
outsb
lock
cltd
cmc
and
fdivrp
sbb
stc
xchg
dec
fwait
mov
mov
push
dec
in
imul
inc
cwtl
add
sbb
ss
rclb
pop
les
iret
dec
xchg
push
test
push
rep
leave
or
orl
sbb
xchg
xor
xor
mov
sbb
adc
lea
pop
das
inc
clc
or
lea
sti
inc
or
xchg
dec
mov
jecxz
xor
idivb
dec
xchg
push
stos
aam
dec
in
or
scas
add
rcrl
mov
das
pop
sub
insl
icebp
iret
push
vpor
ss
daa
stos
loope
orl
mov
out
sbb
dec
popa
cmc
insb
sub
mov
imul
sbb
div
xchg
push
sbb
pushf
lods
xor
cltd
pop
rcll
pop
test
jnp
xor
sbb
into
or
aad
lret
and
pushf
cs
xchg
or
mov
stos
xchg
in
imul
out
push
and
jg
push
jle
mov
out
or
in
xchg
es
mov
rcrl
lock
shll
cwtl
jo
movsl
icebp
cmp
or
cmp
sahf
clc
mov
push
hlt
sbb
sub
and
or
js
dec
cmp
fcom
sub
stos
xchg
adc
pop
xchg
pop
iret
xor
arpl
lahf
das
pop
pushw
cld
pop
jb
lcall
inc
repnz
mov
fistpl
rep
clc
fdivrl
and
jmp
cmp
scas
mov
test
hlt
inc
pop
inc
jnp,pn
enter
and
mulb
rolb
push
enter
sti
sub
or
cmp
imul
mov
int3
ret
xor
mov
ja
lea
mov
inc
les
and
mov
mov
add
xchg
movb
or
rorb
sub
je
mov
jns
ret
popa
mov
mov
out
pop
mov
mov
test
in
or
inc
out
push
and
adc
or
mov
int
add
pusha
lods
xchg
mov
ret
jae
pushf
mov
into
test
lods
push
invd
sti
xchg
mov
addb
mov
dec
out
mov
pop
mov
mov
lcall
pop
or
bound
push
mov
sub
dec
loop
cs
addb
lock
xor
inc
add
insl
and
jl
cmp
out
sbb
pop
testb
push
and
sahf
test
popa
cmpsb
push
add
xchg
scas
lods
sbb
or
push
iret
dec
fcmovnb
addr16
cmp
punpckhbw
popf
and
in
outsb
mov
mov
mov
fstpt
push
fbstp
xchg
adc
lcall
push
sub
stc
jp
popa
dec
aas
xor
in
int3
mov
mov
jb
cltd
xor
jbe
movb
mov
out
lock
xchg
incl
adc
mov
sti
out
lret
pushf
inc
shll
dec
adc
mov
outsb
inc
sti
or
dec
imul
add
repnz
xchg
subl
adc
adc
push
dec
test
nop
inc
adc
add
or
mov
sbb
or
inc
andb
push
push
fisubs
lret
xor
xor
xor
sbb
mov
test
scas
sbb
ficompl
jmp
dec
popf
aas
test
jb
jo
mov
outsl
xor
notl
sbb
push
cltd
lods
lds
sbb
pop
dec
sub
popa
lea
mov
mov
out
inc
sti
xor
in
fucom
clc
repnz
mov
dec
pop
aaa
das
jge
push
repz
mov
out
push
ret
adc
lahf
or
sub
pusha
ret
in
addb
and
adc
jne
ss
mov
cmp
mov
push
into
cs
data16
cmp
lahf
stos
pushf
lret
outsb
rolb
push
xlat
shlb
int
jae
adc
pop
fs
test
sub
xor
imul
sbb
lea
or
add
adcb
test
xchg
sbb
arpl
inc
adc
out
mov
das
xchg
and
mov
out
mov
sbb
adc
into
pusha
movsb
push
ljmp
test
fnstsw
pop
movsl
xchg
and
mov
xchg
adc
push
pop
das
mov
daa
cld
cmp
aam
dec
inc
mov
xor
aaa
add
lods
pop
scas
mov
scas
and
dec
shr
in
push
mov
push
sub
push
add
out
pop
xor
cmpsb
fimull
in
insb
imul
xlat
inc
test
in
js
call
ds
sar
sbbl
inc
jmp
scas
or
std
cli
mov
lods
dec
mov
mov
inc
pop
in
pop
push
adc
lea
push
out
fstps
cmc
pop
inc
or
dec
cmp
mov
and
js
jp
jp
pusha
sub
xor
pop
repz
push
dec
loopne
push
sub
mov
jne
into
jne
mov
mov
mov
rclb
inc
orl
xor
int3
sarb
test
int
add
pushf
outsl
subl
jo
in
sbb
into
add
aam
fcoms
je
and
and
push
sti
mov
or
cmp
jl
ds
sahf
mov
pop
out
cmc
out
int
fistl
xchg
div
pop
xlat
jge
pop
xchg
test
sub
sub
push
mov
pop
cmp
sti
pop
sar
or
add
mov
jmp
push
in
mov
ljmp
mov
clc
idivl
ret
sbb
outsb
xchg
dec
scas
mov
outsl
xchg
mov
inc
jo
sahf
lods
dec
cmpsl
popa
mov
mov
push
and
in
xchg
push
and
and
clc
out
fidivrl
push
xlat
inc
dec
addl
dec
lods
insl
xchg
push
cmpsl
icebp
sbb
repz
xchg
faddl
insl
fucomip
ja
jb
cmc
mov
hlt
sub
and
out
bound
lods
inc
inc
add
ds
testl
es
imul
ret
repnz
jge
daa
adc
mov
and
cwtl
or
xchg
daa
in
xlat
and
fcompl
xchg
and
jmp
push
inc
pop
cli
out
neg
sub
div
scas
fldcw
fsubs
inc
jmp
dec
mov
mov
adcl
xor
mov
jae
js
xchg
sub
cmp
aad
jbe
ret
adc
out
inc
dec
mov
das
jle
pop
xchg
jmp
cmp
or
jae
xlat
and
jnp
leave
add
and
cli
push
pop
lods
adc
mov
inc
mov
mov
jbe
pop
sub
hlt
ffreep
pushf
insl
loopne
and
daa
cmp
test
xchg
sti
mov
imul
mov
xor
out
push
mov
mov
aad
ljmp
push
xchg
push
mov
dec
adc
sub
cltd
mov
pop
or
fistps
es
mov
xor
loopne
sub
je
cmp
loope
cs
or
ds
cwtl
jno
popl
aaa
int
std
adc
out
daa
ss
cmp
imul
inc
cli
push
adc
push
data16
or
sbb
cmp
push
not
xlat
es
movsb
dec
lcall
dec
mov
mov
push
xchg
inc
fwait
cmp
sub
lods
and
lcall
jp
lret
das
jb
push
clc
mov
sbb
negb
test
adc
adc
or
mov
inc
insl
push
nop
icebp
inc
ljmp
xor
test
std
test
inc
push
mov
clc
cltd
nopl
cmp
mov
mov
imul
mov
arpl
push
jecxz
jnp
in
scas
loopne
jge
cwtl
pop
jnp
jb
dec
push
mov
mov
in
and
into
mov
js
jne
pop
mov
jmp
mov
xchg
fcoml
decb
es
mov
mov
jo
lret
xchg
aas
nop
mov
clc
icebp
fucom
ljmp
cmpb
push
nop
and
pushf
or
cmpsl
add
dec
cmc
mov
cld
xor
jb
xchg
jmp
adc
repz
push
lock
mov
dec
inc
in
nop
aam
pop
mov
xchg
inc
mov
movsl
pop
adc
jp
inc
inc
jns
inc
sarl
test
sub
mov
mov
out
lahf
pop
mov
add
stos
gs
pop
hlt
fcompl
jecxz
adc
sbb
mov
adc
cmpsb
cmp
je
enter
sub
clc
int
daa
rolb
aaa
rcrl
fnstsw
inc
daa
mov
push
dec
imul
test
xchg
and
iret
or
in
inc
mov
push
xchg
out
aad
aaa
inc
cmp
push
stos
pop
push
pop
xor
lcall
mov
push
das
pop
cmp
add
pop
mov
push
add
std
loopne
pop
jg
sub
push
lods
push
movsl
jb
and
cmp
shrl
and
jae
mov
adc
pop
fdiv
add
fsubp
adc
sbb
push
sbb
jne
shlb
sub
mov
sbb
dec
mov
stc
and
ds
jmp
lret
xor
rcl
daa
push
aam
pop
cltd
out
mov
decb
sti
mov
mov
pop
leave
arpl
jb
inc
ret
test
push
je
es
push
dec
and
arpl
sub
adc
mov
shrb
push
fcoml
jle
inc
mov
sub
and
xor
and
fcmovnbe
mov
dec
fnsave
fwait
push
aad
out
pop
push
in
icebp
xchg
repz
jg
cmpsb
inc
lahf
ljmp
cmp
lret
and
cli
mov
push
decb
push
mov
add
pop
int
add
pusha
push
lods
fidivrl
adc
or
mov
outsb
fidivrl
ja
in
jbe
jae
outsb
add
ljmp
pop
xlat
pop
popf
loop
jge
and
push
pop
movsb
push
iret
cmpb
and
mov
dec
cmpb
xchg
xor
xchg
popa
shrb
add
xor
stos
sub
add
mov
pop
movsb
lock
cli
jmp
xor
aam
pop
mov
jg
push
cs
lods
out
das
jne
insb
les
inc
pusha
popf
inc
pop
test
pop
mov
and
out
mov
sbb
inc
in
fwait
repz
pop
clc
cmp
or
in
in
ljmp
jl
and
sub
popa
test
test
push
notb
push
mov
dec
pop
mov
mov
or
test
dec
jb
stc
xchg
bound
aas
mov
rol
std
pop
inc
jnp
xchg
mov
aas
lock
dec
sbb
movsl
hlt
pop
xchg
mov
mov
mov
pop
or
ret
jl
stc
rcrb
mov
mov
xchg
fcoml
push
int
int
push
jp
jbe
mov
mov
mov
cld
mov
xchg
rcrb
lods
or
sub
cwtl
lret
pop
aad
les
hlt
pusha
mov
insb
xchg
clc
xor
ret
xlat
fwait
test
and
jno
fdivrl
in
adc
cmp
ja
pop
add
xor
cld
mov
call
cmp
jp
sbb
lods
rcll
out
xchg
inc
push
inc
rorl
adc
int3
insb
lds
dec
pop
add
bound
in
ud2
mov
add
mov
dec
in
jle
xlat
xchg
xlat
popf
cmp
cmpl
lahf
loope
cmpl
lahf
scas
enter
jbe
stos
lcall
mov
int3
imul
daa
adc
push
mov
fistpl
mov
cmp
mov
xor
adc
push
pop
lods
mov
push
das
adc
jbe
or
jl
incl
rcl
mul
mov
xchg
imul
test
sahf
mov
in
mov
jnp
stos
mov
ret
neg
sub
mov
stc
fs
fsubl
insb
mov
data16
xor
out
xchg
mov
in
fisubrs
subl
and
jg
xchg
lds
popa
sub
mov
lds
hlt
add
aas
data16
inc
mov
andl
xchg
mov
jne
adc
mov
mov
sbb
outsb
outsb
faddl
enter
lods
rcll
add
cmc
popa
jbe
inc
ret
mov
mov
dec
jp
adc
mov
ret
jnp
jl
mov
adc
xor
imul
jge
and
mov
mov
cwtl
inc
jns
jo
mov
push
stos
cmp
insl
sahf
add
movsb
sub
and
adc
push
jecxz
cltd
mov
and
mov
mov
loope
int3
cmp
ja
jbe
jecxz
pop
loop
inc
push
sahf
and
jge
add
jl
adc
xor
lret
cmpsb
add
add
fwait
stos
dec
sub
push
shlb
mov
notl
xor
sbb
mov
cmp
push
xchg
push
out
out
xor
inc
mov
jns
loop
pop
paddusb
sbb
jp
jg
cmp
sub
mov
add
push
push
sub
repz
cwtl
push
jmp
push
aam
movb
push
push
xchg
jnp
jecxz
mov
mov
dec
loop
repz
call
cmp
cli
or
jne
fimull
mov
js
jmp
in
repz
clc
lcall
mov
xchg
mov
cmc
dec
out
adc
arpl
cmp
scas
pop
and
mov
fs
fstpl
std
scas
add
dec
ja
ja
dec
mov
mov
pop
leave
mov
and
in
dec
sbb
dec
lret
cmp
outsb
lods
fsts
cmp
jp
inc
aam
test
push
iret
iret
mov
pop
imul
mov
stos
sbb
scas
cld
fistpll
inc
out
test
and
jnp
shr
push
push
sub
mov
pop
xchg
adc
cmc
ret
and
jecxz
pop
xchg
push
jns
sub
push
lret
xor
jnp
add
pop
lds
dec
out
sbb
push
sbb
aaa
fmuls
ret
iret
jl
xor
mov
loope
dec
das
xlat
inc
fists
sar
push
insl
test
mov
adcl
enter
adc
xor
inc
rcl
stc
cmpsw
mov
lahf
rcl
icebp
mov
loope
out
outsl
jmp
pop
dec
sarl
cltd
add
int
push
testb
jg
fs
dec
fimull
movsl
mov
or
mov
mov
test
push
mov
lods
fsubl
pop
push
aaa
cmp
je
pop
inc
in
iret
xchg
outsl
cmp
push
add
ret
mov
rep
adc
cmp
aad
pop
cmp
and
and
repnz
loopne
pop
adc
xchg
test
xor
jne
fsubrs
push
jg
dec
ds
nop
add
mov
mov
add
xor
mov
adc
out
outsb
push
jne
adc
imul
aaa
cmp
into
imul
dec
jecxz
jmp
cmp
xchg
push
pushf
and
cld
push
hlt
push
mov
inc
jle
inc
mov
mov
mov
and
ja
rorl
jecxz
ret
and
or
or
bound
imul
es
and
out
loopne
testl
adc
push
pop
fildll
jbe
xchg
xchg
mov
mov
mov
leave
mov
fmuls
test
enter
cmp
sbbb
xor
mov
jl
or
mov
cmp
mov
fucomip
push
and
fucomip
out
sbb
adc
sti
adc
adc
sbb
add
std
mov
sub
pop
std
push
cmp
add
cmpsb
sti
jecxz
xchg
sahf
sub
sbb
pop
lret
pop
jg
daa
in
push
cwtl
jge
scas
icebp
jg
icebp
cmp
call
push
cli
icebp
dec
sbb
test
jb
test
outsl
lock
push
lahf
fisubrl
in
adc
imul
imul
add
andb
add
xor
and
mov
incb
or
lods
fbstp
les
out
xor
sbbl
pop
test
inc
ret
lods
lea
mov
adc
cmp
xor
jecxz
cmp
cltd
stos
aam
call
pop
in
fs
bound
ss
xor
test
xor
xor
aaa
jns
aam
sbb
sub
dec
into
lahf
inc
sub
fdivrs
shrb
insb
and
ret
inc
mov
or
inc
cmp
cli
mov
xchg
cs
dec
in
popf
stos
add
add
pop
inc
mov
movsb
stos
gs
inc
repz
cwtl
jmp
jp
leave
cmpsl
icebp
inc
xchg
addl
add
and
enter
push
jle
xchg
fwait
dec
pop
ljmp
xchg
mov
popa
push
cmp
sahf
xchg
jae
lcall
shlb
idiv
mov
xchg
sub
dec
stos
fstpl
cmp
mov
rcr
push
mov
leave
std
cmp
ds
in
arpl
stc
add
jp
xchg
adc
ss
mov
test
dec
ret
cltd
sub
arpl
arpl
or
dec
jle
in
ljmp
sarb
sahf
dec
mov
jbe
cmp
mov
adc
cmp
adc
fdivrl
shrb
sar
lock
push
imul
shll
mov
xor
js
daa
sub
xor
aam
xlat
popf
and
mov
mov
mov
inc
jl
sub
cmpsb
or
jle
push
xchg
gs
in
mov
mov
and
lea
int3
pop
call
xchg
and
jp
stos
stos
iret
xcrypt-cfb
cmpsl
es
jp
cmpsb
push
pushf
leave
sbb
mov
mov
xchg
lea
jmp
cwtl
dec
inc
cmp
pusha
ja
sbb
fisubl
lods
or
loope
xor
not
inc
cmp
int
icebp
push
out
insb
addl
das
cwtl
lahf
sub
imul
sbb
stos
ficompl
lock
fldl
notl
jbe
je
cmpsb
jp
leave
adc
int3
shll
adc
or
fildl
cltd
jmp
int3
ja
lcall
loopne
fimuls
mov
xchg
push
push
sbb
adc
pop
repz
rcl
ret
fimull
cmpsb
adc
stos
es
push
xchg
xor
lret
jae
sub
add
decl
aas
jge
mov
xor
jae
sub
cmp
pcmpgtd
pop
orl
sbb
stos
pop
addl
cld
sub
add
push
dec
jle
sub
pop
pop
out
mov
mov
lret
andb
lret
dec
divb
hlt
xor
imul
pop
mov
aad
pop
cltd
cmp
lods
popa
mov
cmp
lea
mov
xchg
sbb
sub
mov
popf
out
jmp
fisttps
mov
icebp
into
scas
mov
inc
int
hlt
pop
arpl
adc
enter
es
repnz
jnp
mov
je
sbb
xor
push
outsl
inc
jbe
push
lahf
or
js
add
xchg
xorb
mov
pop
in
and
sbb
scas
jnp
xchg
mov
pop
add
scas
cmp
enter
mov
jmp
or
loop
aam
inc
jae
in
mov
pop
mov
mov
insb
sarw
push
aad
mov
cmp
insb
mov
shlb
dec
popaw
lods
push
mov
push
adc
je
ficoms
or
jns
mulb
mov
sbb
imul
mov
imul
push
dec
nop
sub
ja
rclb
ja
clc
mov
shll
add
data16
jmp
mov
add
pop
mov
pop
orps
xchg
mov
jns
outsb
test
mov
aaa
sti
jbe
out
adc
sub
mov
jae
scas
xchg
mov
int
divl
mov
cld
lods
fbstp
push
mov
fcomip
mov
icebp
pop
mov
pop
loopne
cmc
cmpsl
test
or
sbb
pop
scas
add
or
cmc
lock
mov
subb
cwtl
leave
sahf
test
mov
dec
scas
pushf
loopne
scas
js
test
je
in
jecxz
mov
sahf
sub
jns
scas
sub
add
mov
xchg
or
stos
enter
mov
mull
or
addr16
mov
movb
ret
jnp
arpl
inc
call
negl
mov
mov
mov
mov
cmc
enter
sarl
cwtl
xor
ret
sbb
daa
imul
in
cmp
fs
mov
outsb
mov
ja
dec
ret
stos
data16
jb
sbb
mov
jb
mov
or
inc
test
push
mov
xor
xchg
out
test
jmp
ja
sbb
pop
pop
cld
std
pop
into
xchg
aas
ret
imul
es
out
out
ss
mov
sahf
cmpsb
loope
fistps
push
pop
mov
or
int
andb
les
pop
cmp
imul
mov
jae
mov
fnstenv
xchg
fs
cmc
jne
loopne
mov
xchg
inc
xor
xor
sub
stos
lods
dec
xchg
loopne
nop
sbb
ret
cmp
rcrl
mov
lea
fmulp
andl
sbb
loope
out
ss
xor
mulb
pop
add
repnz
mov
adc
repz
mov
push
dec
add
or
ficoml
jnp
in
dec
bound
out
inc
pop
int
fwait
loop
pop
jmp
pop
mov
inc
sbb
fwait
xchg
in
add
jnp
and
ss
cmpsl
dec
scas
dec
xchg
cmp
sbb
enter
mov
aam
xchg
mov
xor
pslld
imul
xchg
xor
adc
lods
pop
adc
scas
stos
stc
or
push
push
mov
test
scas
sub
int
dec
xor
loop
data16
pushl
sub
jle
cli
sti
adc
mov
adc
insb
push
repnz
and
pop
sub
lea
mull
lahf
cmpsb
mov
and
in
add
les
xor
jg
out
fistpl
cmpsl
popf
xchg
movsl
je
xor
fst
xor
xchg
push
and
jnp
movsl
inc
mov
repz
leave
sbb
adc
sbb
ret
shlb
dec
and
cmp
addr16
loopne
push
dec
cld
mov
jno
addl
inc
jbe
jmp
sahf
cmp
inc
mov
push
sub
or
lahf
aas
inc
enter
bound
sub
jmp
xor
dec
push
dec
clc
mov
out
scas
and
push
pop
mov
jge
sbb
and
pop
imul
inc
jecxz
sbb
ds
pusha
test
push
sbb
repz
addb
jmp
push
mov
addr16
adc
or
push
add
fwait
mov
jmp
repz
ss
sub
xchg
daa
push
dec
dec
jle
pop
lea
push
sbb
and
das
mov
popf
jnp
mov
dec
mov
lret
repz
ret
arpl
insl
frstor
sub
mov
sbbl
daa
fucomp
out
popa
push
pop
jno
rcr
pusha
aam
std
flds
test
sbb
xor
xor
or
vcvtpd2dqy
sbb
inc
ljmp
xor
mov
dec
pop
cmp
in
sub
inc
add
xor
xchg
incl
movsb
mov
movsb
in
jno
incb
lods
cmp
push
dec
clc
js
fs
movsb
push
popf
int
inc
pop
je
or
adcb
test
jae
sbb
test
xor
int
mov
mov
loopew
data16
sbb
jmp
das
cmpsb
or
xchg
sbb
mov
cmp
inc
add
jns
pusha
stos
mov
xchg
es
cmp
stos
stos
mov
xchg
xchg
addr16
imul
pop
inc
and
sbb
push
sbb
xor
or
fistpll
mov
pop
pop
cmp
and
jns
mov
sub
mov
aam
jge
xchg
pop
jle
cld
in
mov
call
mov
xchg
testl
sbb
fld
fbld
xchg
cmpsb
cltd
sub
jge
cli
push
je
jl
aam
mov
inc
sub
jb
add
loop
sbb
push
xchg
or
mov
mov
repz
je
cmp
mov
pop
sub
lods
aaa
je
adc
lods
pop
cmp
jns
push
cmp
jg
iret
sub
mov
in
fldenv
test
lock
xor
lds
or
inc
xchg
mov
and
jge
divb
push
arpl
pop
inc
push
das
lret
adc
movsb
mov
jnp
cmp
adc
in
xor
xor
fldt
dec
add
popf
mov
and
dec
xchg
dec
in
out
adcl
repz
pop
mov
aaa
push
imul
add
push
dec
lods
add
and
mov
jbe
nop
loop
dec
and
mov
sbb
imul
or
jp
imull
lahf
pop
jne
in
mov
pop
pop
lock
jne
sub
bound
pop
pop
adc
roll
popa
ret
sub
jg
lods
rorl
jno
xchg
bound
cmp
and
mov
cmp
pop
lock
test
lds
stos
cmp
or
out
xor
jo
popl
rolb
mov
add
jmp
mov
jno
mov
push
incb
arpl
mov
lea
imul
cmp
or
repnz
mov
xchg
into
xchg
in
pop
mov
arpl
push
js
jne
stc
daa
add
test
mov
pop
add
cmp
mov
imul
pop
fcmovnu
int3
push
dec
cmp
inc
dec
adc
xchg
outsb
jns
movsl
mov
bound
fisubl
stos
inc
sbb
mov
dec
jge
addr16
sbbb
mov
rcll
gs
and
jg
fst
push
add
dec
add
dec
sub
mov
and
ficompl
js
outsl
mov
ret
jnp
adc
pop
das
sub
mov
adc
lret
aad
ja
inc
jmp
push
shlb
and
leave
xor
stos
dec
jns
or
or
fcoms
notl
in
xor
addr16
or
adc
je
aaa
lret
adc
mov
fldl2e
test
xor
xchg
lods
lds
mov
jno
cmpsb
jne
mov
inc
aad
das
into
push
xor
lret
inc
xor
cmp
jle
sub
or
nop
mov
sahf
call
je
and
pop
dec
mov
rolb
push
subb
push
dec
loop
gs
aam
lods
mov
mov
mov
pop
ficompl
inc
dec
add
adc
in
sti
push
bound
cmp
xchg
aaa
jge
sti
imul
aam
xchg
mov
aam
push
fidivl
sahf
and
rclb
jbe
mov
add
jnp
sub
call
xchg
xlat
mov
inc
pop
std
rcl
lds
clc
push
jne
jecxz
out
ljmp
mov
dec
fdivs
ds
mov
mov
es
enter
push
adc
inc
dec
dec
addr16
aaa
pop
movsb
out
push
les
loope
insl
je
nop
and
xchg
and
fsubr
dec
or
inc
lret
cmp
stc
mov
lret
adc
fwait
cmp
mov
mov
push
shl
shll
lret
test
dec
sbb
pop
or
mov
sub
ss
loop,pn
jnp
lret
inc
popa
add
stos
lea
loop
dec
dec
mov
push
push
dec
push
xchg
dec
jb
jecxz
push
out
jns
or
dec
adc
leave
inc
lret
add
ret
mov
scas
int
std
ss
or
les
mov
mov
ret
inc
cmpsb
dec
mov
xchg
in
dec
lods
mov
fmull
sub
cwtl
inc
hlt
sub
ds
and
add
sarl
and
cwtl
add
nop
mov
add
jecxz
sahf
popl
scas
mov
fnstcw
dec
scas
mov
sbb
movswl
outsb
jae
scas
dec
and
cmpsl
das
std
pop
pop
pop
pop
mov
jno
push
push
rorb
add
rcl
lret
mov
pushf
test
lock
sub
mov
add
jnp
pop
cltd
mov
push
call
cmp
mov
mov
jno
aas
mov
jno
mov
mov
sarb
pushf
inc
mov
rdtsc
push
cs
shll
ffreep
enter
pushf
dec
leave
mov
push
jecxz
sub
cli
ficompl
in
xchg
sbb
out
je
mov
adc
daa
mov
mov
dec
sahf
roll
movsl
mov
cli
int3
cmp
shlb
dec
push
push
lds
test
jmp
stc
out
xchg
mov
sub
sti
or
xchg
loope
adc
mov
dec
cmp
and
push
sbb
jns
loop
daa
mov
movsl
mov
add
push
xor
mov
out
test
push
xchg
lret
xlat
pop
cmpb
idivb
dec
mov
xor
push
mov
scas
lods
xor
repz
push
filds
test
insb
cs
xor
out
lods
jmp
or
xor
adc
testl
dec
push
dec
sub
repz
sbb
inc
test
push
sbb
sub
insb
cmp
rclb
sub
or
out
fnstsw
aam
sub
push
sub
and
mov
inc
push
addr16
in
jnp
jl
fisubrl
dec
popa
popa
inc
jl
lds
subb
pop
xchg
mov
xor
mov
jle
aas
in
jg
mov
ljmp
pop
xchg
test
jns
dec
push
cltd
arpl
aaa
push
scas
mov
test
out
stc
mov
sub
jb
cmc
mov
stos
add
les
js
andb
test
fiaddl
xchg
iret
aaa
outsb
xor
les
addb
std
insb
movsl
movsb
mov
test
les
inc
mov
jl
outsl
aam
pop
xchg
jl
insb
jle
mov
lahf
mov
pop
icebp
or
pop
and
lods
push
or
sahf
jmp
rcrl
sub
cli
xchg
cmp
jno
in
mov
mov
cmc
shll
rorl
pop
sti
rcll
add
fwait
stos
rcrb
push
push
out
add
or
std
inc
aas
iret
cli
cmp
xchg
inc
and
add
jmp
out
int3
push
subb
cs
cmp
inc
sub
jg
shl
pop
lret
adc
ret
lock
or
cmp
adc
test
or
mov
adc
icebp
adc
pusha
mov
jmp
cmc
and
fsubrl
stos
frstor
and
ret
lds
mov
or
je
test
mov
mov
out
lods
mov
adc
lods
cmp
or
outsb
inc
or
dec
jg
lock
int3
lock
jecxz
lods
movsb
push
dec
out
fldl
push
jae
sbb
es
sbb
sub
cld
insl
rolb
sti
mov
and
mov
sbb
fcoml
lods
push
out
fnstenv
pop
and
pop
jns
iret
cmpb
mov
and
pop
push
out
push
pop
or
test
jns
ds
adc
jno
nop
cmpsb
lock
mov
pusha
mov
cld
mov
xor
test
std
aas
push
jb
inc
fisttpl
dec
sub
lods
orl
cmpsb
inc
inc
in
mov
std
aad
jbe
ficoml
xchg
lahf
cmpsb
lock
sub
xchg
ljmp
jp,pn
sti
lods
jge
insb
scas
add
inc
xchg
mov
jmp
sub
push
cmp
mov
jae
nop
sub
nop
subl
ja
icebp
add
jge
jno
test
rcrl
mov
data16
in
fs
push
and
cmp
pop
adc
mov
dec
out
xor
cwtl
imul
sub
jp
popf
push
pop
shlb
xchg
jl
iret
sbb
mov
fadd
push
jle
arpl
lahf
mov
in
je,pn
cmpsb
pop
inc
xlat
int3
push
dec
aaa
insb
pop
sahf
cmp
stc
inc
push
xchg
mov
mov
lea
dec
clc
mov
jl
fcomip
mov
shl
stc
imul
jg
push
fnstsw
lock
pusha
jae
mov
push
cmp
sub
xor
out
or
pop
test
pop
inc
pop
lahf
sbb
sub
dec
stc
mov
adc
inc
loope
repz
adc
mov
daa
push
fstl
mov
and
add
fucomip
mov
rorl
push
and
push
rep
or
sbb
push
sbb
mov
adc
mov
test
inc
and
ds
out
cmp
jmp
bound
jne
inc
cmp
dec
xor
jecxz
stos
cmp
jbe
arpl
es
insl
and
mov
test
pop
fistl
incb
call
push
xchg
mov
mov
ss
jge
inc
jg
dec
jo
fcomip
mov
pop
cmp
das
xchg
outsl
pop
push
into
pusha
sub
push
mov
push
pushf
pop
mulb
xor
lock
inc
adc
test
lock
inc
and
es
inc
cmpb
dec
clc
call
sarl
test
sub
xor
popf
aas
push
lds
popa
es
jecxz
fistpll
into
loop
arpl
jnp
and
xchg
popa
stos
and
xchg
aaa
or
cmp
daa
inc
js
lcall
mov
xor
fs
stos
adc
lods
sbb
push
dec
loope
shll
adc
ficomps
add
in
xor
insb
adc
xchg
sub
cltd
xchg
dec
addb
pop
fmul
xor
icebp
add
jle
mov
dec
or
stos
test
inc
cmp
sub
mov
jmp
push
insb
int3
inc
mov
roll
loope
mov
hlt
test
push
jae
daa
mov
push
pop
int3
xor
arpl
cmp
pop
push
or
mov
outsl
sub
and
mov
xor
rcll
mov
dec
or
xlat
xlat
or
je
test
jo
mov
mov
out
dec
icebp
or
jmp
lods
stos
inc
xchg
ret
pushf
and
imul
push
mov
jecxz
lret
pop
lret
insb
xchg
ja
stos
xchg
cmp
sbb
mov
cmc
xor
mov
dec
sbb
inc
add
cmp
bnd
mov
sbb
mov
pop
mov
mov
jo
test
mov
adc
fimuls
sbb
and
idivl
hlt
cmp
and
icebp
jle
nop
and
dec
xchg
pop
in
add
xor
xchg
jno
adc
add
out
jp
xchg
test
dec
sbb
sub
xor
inc
loopne
inc
pop
lahf
mov
sub
sbb
lret
stc
sti
sbbl
std
repz
jo
mov
movsb
xlat
sarb
dec
fldt
sub
daa
je
pop
pop
sti
repz
ja
stos
insb
or
pop
cmp
iret
dec
cmp
ja
les
pop
fs
jmp
jae
test
in
lret
cmp
fildl
out
aad
add
shl
lods
mov
dec
xor
sbb
or
insl
mov
ja
dec
add
bound
cld
add
test
and
fmull
mov
pusha
loopne
into
cmc
lret
push
lahf
cmp
out
sbb
sub
dec
arpl
mov
pop
outsb
addr16
in
push
push
sahf
pop
enter
mov
decl
daa
outsl
cmp
cmpsb
movsl
jle
cmpsl
add
mov
outsl
dec
sub
stos
jo
pop
je
ljmp
pop
mov
push
jae
fndisi(8087
movsl
lock
sbb
mov
leave
imul
ds
ss
and
fwait
movsl
push
loope
sub
mov
sti
shlb
sub
push
bound
xor
popa
dec
lods
lcall
popa
in
mov
int
mov
lahf
inc
mov
pop
xchg
sti
push
arpl
sbb
xor
lahf
pop
js
aad
inc
push
pop
arpl
outsb
jle
subl
xor
xor
jle
int
add
mov
out
std
movsl
fsubrl
shlb
insb
xlat
mov
mov
jae
stos
int
pop
cmpl
enter
inc
repnz
fsubrs
pop
cmp
ret
xchg
repz
push
insl
outsl
ljmp
pop
sbb
sub
or
out
jmp
jl
ja
sub
push
jae
push
repz
stc
cmp
sub
adcb
ffree
push
aam
add
cmp
jecxz
lret
cmpsl
subl
pop
xor
mov
add
icebp
push
pop
aad
mov
mov
adc
jne
push
jbe
xor
bound
pop
dec
dec
fstpt
fiaddl
adc
push
mov
adc
jnp
ds
sbbb
test
cltd
jbe
jo
pop
sbb
push
je
inc
xor
sub
xchg
jg
xchg
imul
push
xorb
test
sub
sbb
inc
bound
dec
icebp
xor
in
addr16
inc
mov
test
mov
cmpl
out
insl
pop
stos
xor
enter
ss
ljmp
call
in
jmp
add
inc
lock
xor
jno
rcrl
dec
loopnew
add
in
push
fs
je
rol
loopne
stc
lret
stos
mov
jg
cld
data16
mov
bound
sbb
pop
outsl
nop
lds
std
mov
test
cwtl
cld
xchg
aaa
cmpsl
lahf
pop
test
movsb
mov
and
mov
xor
mov
inc
pop
rorl
xor
gs
or
notl
cmp
push
dec
movsl
xchg
cwtl
fmuls
lret
and
popa
inc
mov
aam
push
outsl
push
push
addr16
mov
imul
cmp
loope
mov
push
call
cmpsl
lret
xor
stos
xchg
xchg
mov
lock
xchg
pop
xchg
iret
and
out
lret
cltd
cwtl
outsb
push
div
pop
in
lret
xor
mov
hlt
out
pop
or
mov
in
jae
stos
insb
insl
sub
sbb
pop
mov
inc
add
std
mulb
adc
loope
jno
mov
clc
popa
cmp
push
lret
lods
stc
es
jae
jbe
aaa
push
aad
jecxz
xchg
mov
pop
dec
insl
insl
cmp
sub
ficomps
adc
pop
popl
and
leave
cltd
in
pusha
cmp
enter
sbbl
jmp
pop
in
inc
lahf
cmp
push
movsb
or
arpl
dec
xchg
jecxz
jge
sbb
xchg
shrb
mov
push
xchg
pop
aaa
aad
ljmp
testl
je
testl
add
ret
mov
je
push
jbe
mov
mov
repnz
out
pop
insl
shlb
push
sub
test
push
stos
cwtl
lods
pushf
out
push
int3
and
jb
in
pushl
adc
add
jmp
daa
or
fldt
outsb
clc
popa
les
xor
js
add
setg
lcall
xchg
outsb
push
xchg
xchg
inc
adc
and
scas
inc
mov
dec
outsl
popf
push
pop
leave
mov
adc
imulb
pop
xlat
jecxz
mov
inc
xorb
inc
ss
mov
std
inc
das
xlat
push
xor
in
shll
jge
out
push
int3
pop
popa
leave
mov
sub
cmp
lcall
sahf
fcoml
rcll
sub
rol
movsb
mov
adc
clc
mov
mov
xor
loope
or
subb
lret
xor
dec
jae
inc
cmp
and
sub
out
mov
sub
mov
jne
rcrb
mov
pop
and
pop
int3
mov
fwait
or
push
icebp
xchg
push
xchg
and
cmc
pushf
lods
adcl
int
jb
popl
push
movsb
jg
das
jo
sbb
sbb
int
sbbl
pop
test
and
mov
loope
data16
stos
mov
or
push
pop
call
mov
xchg
push
incb
mov
and
or
mov
push
inc
push
pop
ljmp
adc
mov
cmp
cld
fistpl
mov
dec
mov
push
jb
loop
pop
enter
addl
cmp
out
sub
lea
and
adc
lret
xor
push
jg
adc
sub
jbe
adc
test
insl
xor
ret
rcr
or
mov
jbe
cmc
jl
push
push
xchg
shrl
rolb
mov
adc
sub
test
add
xor
jle
inc
jns
push
xchg
adc
imul
inc
mov
xor
insb
inc
push
movsb
cs
mov
push
ja
jmp
mov
push
lods
pusha
ljmp
out
cwtl
and
add
mov
rcrl
sbb
repz
out
jne
aad
push
jnp
je
jne
mov
push
dec
insl
xchg
mov
jecxz
mov
and
jo
push
cli
outsb
cs
add
inc
cmp
push
ljmp
loope
cld
leave
cmp
push
cmpsl
arpl
mov
push
jmp
cmc
sbbl
sub
xchg
or
jb
mov
in
sbb
ss
cmpsl
cmp
push
or
into
data16
sarl
lcall
xorb
arpl
push
shll
repnz
adc
sahf
inc
loop
jae
cwtl
into
mov
or
push
or
or
or
xchg
pop
loop
fnsave
sbb
push
movsl
pop
jns
or
fincstp
sahf
jne
je
xor
clc
dec
push
mov
in
mov
mov
xchg
or
push
aad
je
mov
sbb
into
iret
mov
push
lods
xor
dec
mov
mov
stos
std
imul
jb
repnz
in
cld
pop
xchg
xor
mov
rcrb
out
sub
in
inc
out
mov
mov
ss
bound
pop
fcmove
fwait
ja
cwtl
lods
sbb
scas
mov
adc
sbb
test
push
ds
shrb
add
pop
lea
shl
faddp
insb
test
inc
imul
mov
sbb
or
lods
fcmovne
daa
aam
addr16
aad
dec
mov
push
sbb
lret
add
add
xor
and
push
mov
dec
xor
mov
jae
xchg
and
add
lds
adc
and
mov
jne
scas
test
add
dec
lock
mov
push
mov
movsb
js
mull
jmp
sbbl
mov
mov
popa
push
adcb
mov
sahf
jecxz
cmp
js
sub
dec
add
daa
inc
adc
mov
inc
or
shlb
sbb
mov
lods
mov
in
mulw
jne
jmp
mov
or
xchg
aas
jno
rcrb
int
xor
add
and
jecxz
mov
pop
or
jmp
sub
mov
ss
mov
mov
and
pop
jmp
mov
mov
jmp
mov
sbb
jecxz
les
cmp
andb
or
inc
loope
xor
jg
loope
xor
stos
push
daa
mov
test
xchg
mov
data16
iret
ret
call
sub
cmp
popf
and
push
or
pop
into
lods
inc
lods
pop
or
or
xor
in
cmc
mov
outsl
jno
and
mov
nop
hlt
or
lret
and
lret
mov
aas
imulb
pop
shrl
fucomp
and
lods
test
fisubl
or
cmp
xchg
fwait
es
faddl
mov
add
dec
inc
mov
mov
fnstsw
jmp
inc
pop
adc
mov
imul
pop
xchg
insl
push
es
xor
das
loope
std
rolb
in
push
push
cmpsl
decb
or
pushf
std
mov
cmc
jl
filds
in
fbstp
and
std
nop
cmp
test
in
push
cmpsb
dec
lret
cmp
jmp
sub
cs
fnstcw
mov
cld
lret
jecxz
nop
lret
gs
xchg
jno
xor
fistpll
cld
leave
insb
inc
into
les
insb
addr16
xor
xchg
pop
xor
into
jp
mov
mov
das
add
add
and
insb
pop
ljmp
sar
adc
pop
push
xchg
and
aam
ret
mov
outsl
insl
cmp
in
sub
mov
in
dec
push
dec
insb
arpl
push
les
cs
repnz
js
push
idiv
test
push
add
xchg
or
push
push
inc
loop
nop
jp
or
jne
push
lret
into
shll
js
roll
xchg
repnz
mov
fsubrl
jle
sub
jl
fdiv
aam
test
movsb
daa
lret
and
sbbl
xchg
sti
mov
mov
pop
cli
out
in
dec
fildll
inc
adc
cwtl
and
mov
push
add
lcall
lcall
mov
adc
adc
jmp
sbb
rorb
mov
sti
pop
mov
xchg
dec
add
push
mov
stc
in
xchg
clc
mov
mov
popf
shll
pop
cld
pusha
out
sarb
je
and
and
loope
out
mov
cwtl
mov
xlat
lock
jp
mov
adc
and
mov
xchg
mov
mov
push
jnp
mov
mov
push
mov
aaa
mov
stc
mov
in
and
push
mov
loop
inc
mov
mov
inc
fiaddl
mov
dec
aaa
pop
popf
mov
jnp
mov
jp
push
jno
pop
fwait
push
std
daa
inc
int
mov
out
out
orl
loopne
sub
loope
add
enter
shlb
jno
arpl
sub
sarb
call
test
add
sub
in
push
mov
pop
lds
or
sarb
inc
pop
jnp
jl
enter
inc
dec
jae
and
int
cwtl
mov
stos
push
cmp
add
lahf
mov
xchg
sbb
inc
js
nop
sahf
jne
enter
push
adc
lock
adc
mov
icebp
clc
xlat
and
cmp
mov
xor
nop
xchg
pushf
jl
rorb
mov
pop
cs
or
adc
pop
mov
leave
or
arpl
mov
or
hlt
mov
lret
mov
idiv
jmp
jbe
sub
cmp
xchg
popf
stos
push
mov
repz
push
push
mov
mov
ret
decl
leave
cmp
ljmp
push
mov
mov
lret
les
jmp
cmp
pop
popa
fcompl
in
dec
mov
inc
pop
inc
je
or
test
xor
pop
shrl
push
stc
push
mov
sarl
pop
out
insb
lock
scas
jns
iret
pusha
cmpsl
and
push
push
adcb
sarl
lret
ja
negb
lret
aaa
ljmp
test
scas
aad
sub
pusha
dec
notl
sub
xchg
sub
repnz
jb
adcl
add
xor
jnp
outsl
insl
scas
stos
dec
es
or
les
cli
nop
xchg
xor
ret
roll
mov
xchg
jno
imul
adcb
jns
and
adc
push
sbb
cltd
jb
mov
mov
idiv
popf
icebp
and
int3
ss
xchg
pop
lcall
out
sbb
pop
lds
lock
aas
cmc
adc
dec
xor
push
xor
mov
outsl
in
and
push
and
mov
rorl
mov
pop
mov
mov
jg
dec
into
je
bound
mov
popf
sub
xchg
les
loope
ljmp
dec
push
or
movd
cmp
outsl
sbb
mov
fcom
or
mov
jmp
leave
mov
sub
jne
pop
jo
pop
xor
dec
mov
mov
push
cmpsb
mov
insl
adc
adc
and
fists
cmpsb
stc
pusha
and
scas
pop
sbb
xchg
das
mov
clc
lahf
mov
adc
and
jne
test
inc
mov
jge
adc
adc
inc
cmp
sysret
lods
mov
pop
push
mov
push
cmp
pop
pusha
xchg
jb
aam
xlat
mov
insb
mov
and
or
mov
gs
into
jle
imul
or
das
icebp
xor
and
adc
push
fwait
test
ljmp
cmp
mov
shrl
cmp
mov
std
sbb
fwait
or
neg
or
dec
cmp
mov
and
leave
sbb
es
push
push
scas
arpl
std
jmp
push
jge
test
ds
sbb
cmpsl
lahf
sahf
pushf
test
push
push
sarb
icebp
gs
dec
xchg
lods
js
mov
pop
subb
mov
fs
adc
jns
in
sbb
fnstsw
nop
shrb
and
push
cld
jnp
mov
outsl
fmuls
shlb
pop
push
lds
mov
cmp
cmp
imul
cmp
mov
xchg
pop
adc
rorl
rolb
aam
stc
loope
mov
lcall
sahf
mov
lret
test
sbb
xlat
cmc
call
push
lahf
dec
sub
jno
add
jns
jb
ds
push
xchg
pop
sub
push
xchg
imul
sahf
fsubrl
scas
int3
out
cmp
pop
dec
pop
mov
xchg
popf
jae
adc
int3
jns
pop
jmp
test
leave
mov
pushf
stos
ret
ret
sub
fsubrs
jg
pop
add
sub
push
movsl
loop
add
adc
jae
andl
cmpb
es
lods
add
pop
rorl
or
or
mov
leave
stos
xor
gs
adc
dec
fnstsw
cmc
mov
jo
mov
sbb
push
addl
popa
fwait
addr16
fldt
rcl
fwait
inc
push
push
stc
mov
push
stos
cwtl
jb
push
xchg
fstl
insb
cmp
sub
sbb
pop
cltd
mov
or
ss
jbe
insl
and
test
in
xor
push
sub
adc
les
movl
add
movsl
std
inc
or
movsb
jo
or
push
push
adc
sub
movsl
bound
fisttpl
xchg
inc
dec
sub
adc
adc
mov
std
lcall
mulb
pop
shr
mov
inc
pop
mov
outsl
filds
out
rcl
jae
add
dec
pop
push
pop
mov
jns
mov
xchg
out
sti
fistpl
jo
ljmp
cld
mov
adc
push
push
test
stos
pusha
add
xchg
mov
or
scas
pop
mov
push
scas
xchg
add
ja
lahf
mov
xchg
in
test
push
fiaddl
mov
jg
pop
inc
sbb
shlb
mov
std
clc
in
and
dec
std
push
aad
sub
pop
adc
cwtl
shlb
outsb
andl
bound
and
stos
test
out
mov
mov
stc
and
and
adc
je
pop
pop
or
ret
cmp
ds
data16
pop
loopw
inc
xorl
loope
cmp
loope
test
outsb
jle
movsl
xchg
fwait
sti
sub
mov
mov
insl
fidivl
cld
les
fsubr
arpl
mov
mov
mov
test
cs
mov
adc
jle
inc
mov
xor
out
call
sub
fnclex
insl
jnp
shlb
movsl
push
jecxz
sbbl
add
xchg
fbld
into
hlt
pusha
lds
lods
stos
repnz
xorb
jle
mov
adc
in
sub
or
jge
test
push
or
lahf
sahf
pop
push
inc
sahf
mov
sbb
dec
pop
imul
rolb
gs
jecxz
cmpsb
fs
push
jns
and
enter
mov
fdivrl
shrb
in
push
jl
sub
pop
and
mov
mov
lea
xchg
int
inc
shl
or
push
hlt
push
fcoms
inc
xor
mov
int
cmp
sbb
push
inc
push
sbb
pop
fnstcw
cmpsl
push
movsl
dec
cmp
or
inc
or
fsubl
mov
rolb
out
sti
rolb
pand
push
adc
add
xor
call
test
pop
leave
inc
iret
loope
out
popf
jg
lahf
push
arpl
cltd
push
rolb
adc
or
xor
dec
std
xor
xlat
out
cmc
push
or
addr16
int3
push
cld
dec
sbb
rcrb
rol
cmp
pop
mov
roll
scas
cld
aas
or
jle
shrb
dec
pop
jmp
jmp
xchg
jae
jae
inc
imulb
fsubs
jne
clc
rclb
mov
call
sub
mov
xor
pop
mov
call
xchg
adc
dec
xchg
out
xor
mov
jo
xor
jne
mov
repz
sub
pop
sbb
pop
or
mov
mov
mov
sbb
pmulhw
hlt
add
popa
in
repnz
push
xor
cs
xchg
mov
or
add
fldenv
mov
imul
sbb
or
mov
xor
mov
decb
pushf
dec
ljmp
sti
cltd
int
cmc
inc
nop
push
adc
inc
std
shrb
fsubrl
pop
xor
pop
fidivl
dec
jmp
je
or
data16
mov
arpl
xchg
sbb
xchg
bound
mov
int
push
add
cmp
or
jg
jo
add
je
fcomps
sub
lahf
je
shlb
jmp
and
ror
shrb
xor
push
jb
repnz
movsb
hlt
xor
push
fstl
mov
mov
mov
pushf
imul
jbe
mov
and
dec
sbb
xorb
ficoml
testb
scas
orl
rcrb
jns
mov
int3
into
dec
sbb
jmp
inc
and
and
sahf
and
mov
sub
jmp
adc
cmp
call
pop
xchg
add
stos
rorb
sbb
mov
jge
inc
pushl
pushf
in
mov
push
xorl
fbstp
cmp
into
test
mov
dec
shrl
dec
jecxz
pop
fsts
or
sub
pop
sbbb
pop
pop
mov
jl
push
mov
insl
fcompl
lret
cs
outsb
aaa
dec
iret
push
subl
addr16
push
add
pop
sbb
or
pusha
js
movsl
popa
or
jmp
cmpsl
bound
movsl
cwtl
inc
lds
or
daa
mov
out
std
jle
fimull
sarl
dec
mov
es
wbinvd
cmp
repnz
adc
insb
mov
mov
inc
mov
fisubs
fwait
gs
dec
sbb
xchg
and
shll
repz
sbb
ss
xor
out
lahf
inc
inc
cmp
daa
mov
jmp
and
jo
jmp
sbb
push
test
das
mov
and
dec
cmp
xchg
adc
fnstsw
ljmp
pop
scas
mov
call
or
mov
push
cmp
lret
push
ljmp
mov
rolb
xorl
sub
lret
mov
or
and
dec
lahf
inc
mov
sub
dec
xchg
xchg
shrl
ss
mov
or
mov
jcxz
mov
inc
ss
mov
xchg
ret
in
sbb
add
popf
xchg
or
xor
leave
int
dec
ret
xchg
shr
cmpsl
sub
gs
cmp
shrb
push
sbb
out
xchg
mov
addr16
jmp
cltd
repnz
in
and
sub
or
adc
ret
add
add
pushf
lret
xor
push
cmp
and
adc
hlt
or
jns
in
dec
ret
adc
int3
lds
divl
adc
lret
les
mov
jns
int3
and
pop
xor
sbb
dec
ds
cwtl
lods
push
cmc
aas
dec
and
cmp
gs
jge
mov
pusha
or
mov
push
in
jbe
or
dec
pop
ret
dec
lock
fisubl
mov
jne
cltd
in
cmp
rol
in
stos
jecxz
int3
in
sbb
inc
test
stc
testb
inc
sub
sub
stos
sub
pop
xor
testb
pop
testb
test
inc
mov
push
negb
adc
cmp
into
popa
mov
enter
xchg
pop
shl
inc
inc
add
sub
bound
dec
adcl
cs
scas
add
mov
aaa
xchg
jno
lods
jp
ljmp
cs
test
cmp
or
out
fdivr
mov
inc
fistl
or
sbbb
test
je
sbb
add
aas
and
push
mov
test
out
inc
scas
test
inc
mov
xor
lods
dec
out
xor
push
fidivs
xor
mov
ret
scas
popf
jl
xor
add
mov
lods
or
inc
jle
int
or
orb
mov
jl
mov
addr16
insl
adc
sub
or
inc
aam
loop
xor
mov
fiadds
mov
jnp
dec
daa
cmp
ss
sub
mov
sbb
sub
jns
aad
and
scas
loope
sti
mov
push
jp
divl
cli
daa
push
xchg
sahf
bound
popf
push
pop
mov
jg
pop
ss
fsubrl
movsb
push
stos
outsb
addl
pop
and
pop
xchg
or
outsl
adc
push
outsb
and
pop
xchg
or
sbb
call
cwtl
lds
leave
xchg
lahf
sub
icebp
lds
ret
addb
or
imulb
mov
adc
in
jbe
call
enter
sbb
cmc
ret
sub
ret
repnz
lret
lahf
xchg
test
ret
mov
fcompl
inc
es
push
int
push
jmp
mov
and
arpl
dec
add
or
sbb
jb
cs
cli
test
dec
or
out
pop
shll
cmp
add
or
pop
inc
adc
pop
xor
dec
stos
out
cmp
test
mov
repz
lahf
adc
and
push
sub
push
dec
mov
xchg
cli
scas
dec
test
ljmp
add
out
cltd
cmp
cmc
push
lods
ljmp
add
xlat
faddl
sub
lods
mov
cmpb
pop
lahf
xchg
adc
sub
lods
shlb
pop
jle
xchg
stc
fldenv
pusha
or
popa
fs
cmp
loop
cli
lods
cmp
mov
xchg
iret
pop
and
mov
mov
fidivs
fwait
xor
hlt
loope
sub
dec
xor
xor
movsl
jmp
add
cli
push
or
or
dec
xor
xchg
pop
sub
outsl
push
mov
repnz
ja
outsl
sarl
xchg
and
xchg
lods
stos
push
cmp
fsts
mov
adc
sbb
btr
push
imul
add
adc
popf
pushf
lret
mov
out
cmc
aas
push
mov
adc
inc
ljmp
iret
push
push
xor
add
in
cmp
lret
jp
push
or
cli
cmp
cmc
aad
push
adc
mov
sub
xor
mov
mov
inc
xchg
jle
std
xchg
or
xchg
mov
cmp
int3
dec
mov
and
xor
xchg
cmp
es
scas
aaa
leave
cmp
pop
into
outsl
imul
and
js
cli
xor
fwait
xchg
cwtl
dec
popf
stc
es
iret
push
insl
clc
out
rcrl
arpl
sbb
repz
rorb
jge
dec
mov
add
popa
out
mov
pop
or
dec
sbb
mov
iret
adc
sub
dec
jae
out
shr
pusha
popf
mov
test
jge
dec
aad
in
jo
lds
inc
mov
xor
outsb
add
movsl
or
imull
adc
loop
mov
in
pop
fnstsw
test
dec
dec
mov
test
mov
push
cmp
dec
mov
aam
pop
sbb
lock
push
shlb
adc
jno
xor
push
movsl
jno
sub
jg
ficomps
xchg
jge
sub
addb
add
cltd
hlt
dec
inc
andl
sub
cld
movl
lods
cmp
xor
lock
mov
dec
or
loope
lea
push
ffreep
into
inc
mov
add
lret
ret
fsubs
jecxz
es
lods
or
jno
je
push
lock
incl
push
movsl
cmp
jle
and
or
icebp
fs
jp
es
es
jbe
imul
adc
mov
mov
repnz
sub
aad
sbb
les
loopne
xor
mov
mov
dec
xchg
je
sbb
xchg
jo
xor
jne
xchg
sbb
rcl
add
sbb
push
mov
mov
xchg
les
or
mov
sbb
fcoms
adcl
mov
shll
enter
cmp
xor
mov
iret
adc
push
les
push
insl
js
movsb
daa
mov
mov
enter
iret
sub
lea
xorb
mov
pushf
push
in
inc
inc
xchg
inc
push
fcoms
iret
xchg
aaa
inc
xor
inc
push
xchg
pop
popf
cld
jo
insl
inc
add
or
neg
ss
mov
lea
xor
mov
push
pop
shl
adcb
xchg
in
fdivs
mov
add
inc
lcall
fnstsw
rorl
loop
cmp
inc
sbb
cmp
push
push
sub
in
aaa
bound
sti
and
es
or
int3
cmpsl
lods
bound
addr16
xchg
ss
pop
mov
cmpsb
scas
test
push
bound
test
rcrb
adc
xchg
xchg
jp
and
xor
loopne
and
popf
in
xor
das
adc
aad
jno
outsl
push
ds
mov
and
arpl
push
icebp
std
lods
jmp
test
stos
dec
mov
int
shrl
mov
pop
sahf
out
mov
adc
push
mov
push
dec
stos
mov
shll
mov
call
icebp
cwtl
rep
jo
inc
push
jmp
mov
gs
in
js
dec
in
lods
sub
push
sahf
out
cltd
lahf
pop
stos
imul
loope
xchg
cmp
mov
in
cmpsl
sbb
lock
shrl
es
jb
lret
outsl
cli
xchg
mov
or
jl
test
and
add
repnz
mov
js
int3
push
loope
hlt
push
mov
or
add
daa
loop
loop
adc
pop
imul
dec
in
sub
lret
popa
subl
pop
jmp
cli
scas
xor
dec
bnd
or
ficoms
lret
out
bound
jg
je
mov
cmp
loop
cs
loopne
push
sbb
bound
pop
fwait
lret
out
mov
lods
adc
xor
outsl
adc
cmp
movsl
ss
lods
hlt
fdivrl
xlat
mov
stc
or
and
jb
pop
or
roll
clc
test
inc
int
out
jbe
cwtl
or
xchg
ds
ljmp
inc
ror
out
test
push
sbb
pop
outsl
adc
jne
xchg
daa
mov
loopne
shl
lret
outsl
bound
inc
push
cwtl
mov
cmp
mov
orb
in
mov
mov
add
pop
lea
repz
mov
xchg
pop
cmc
mov
jp
ret
xor
sub
adc
pop
jge
cmc
orb
jno
xchg
xchg
jne
ja
push
mov
int
lods
xchg
scas
test
and
push
int3
adc
lret
xchg
mov
gs
ds
sbb
cmc
or
sbb
mov
rolb
lahf
pop
mov
sub
scas
loop
jbe
into
push
ja
loop
mov
sbb
call
jg
stc
mov
addr16
mov
cmp
repz
test
xchg
sbb
jno
lcall
dec
cwtl
inc
add
dec
cmpl
jne
dec
lds
xor
add
mov
xchg
fs
xor
jae
clc
pop
mov
add
fsubrl
imul
xchg
adc
sub
lods
sbb
sbb
cmp
mov
mov
jecxz
cmpl
movsl
ret
push
xchg
insl
xor
call
in
test
adc
xchg
js
add
or
insl
mov
jecxz
xchg
iret
push
pop
mov
loop
cltd
stc
mov
pop
in
in
ja
aaa
mov
mov
les
addr16
mov
mov
fdivl
ficoml
shr
in
fisubs
fsubrs
cmp
rcrb
aas
mov
loop
das
and
jne
incl
and
adc
icebp
xor
mov
fxch
push
jg
adc
push
dec
pop
clc
or
sbb
out
icebp
xor
addr16
in
add
cmc
cmp
orl
lods
fs
cltd
cmp
je
mov
push
iret
and
fisttps
or
jmp
bnd
mov
mov
inc
mov
mov
ret
adc
jnp
mov
mov
out
enter
jle
sub
loop
lods
fcmovbe
gs
push
int
inc
in
subl
push
jp,pt
jmp
shl
pushf
mov
ja
orl
pop
lods
push
sti
shl
js
cmp
xchg
sahf
sub
add
adc
test
push
cmpl
stc
in
adc
in
or
inc
push
push
or
call
jb
mov
pop
mov
jmp
xchg
neg
inc
icebp
push
out
pushl
das
daa
out
popf
add
or
ja
and
pop
mov
mov
xor
insb
stos
mov
insb
clc
fldt
sub
fmull
sahf
sbb
adc
mov
sbb
addr16
jp
mov
vmovdqa
push
inc
out
popa
mov
imulb
push
pushf
fbstp
test
cmp
jo
xchg
repz
sbb
aaa
pop
pop
pop
pop
xor
addb
pop
and
out
movsb
xor
jb
mov
push
out
daa
jbe
loopne
aad
ret
and
pop
pop
dec
out
sti
insl
test
inc
mov
xchg
xchg
stos
loope
aaa
test
sub
push
cmp
push
stos
in
or
lods
sub
outsb
addl
and
push
push
roll
push
loope
test
or
sbb
cmpb
mov
cmp
popf
jae
lahf
xchg
jbe
jmp
inc
mov
mov
mov
mov
pop
or
xchg
mov
jb
imul
shll
lods
adc
add
roll
lahf
test
rorb
mov
rorb
xchg
mov
add
dec
loop
cs
mov
iret
lahf
fwait
push
jmp
stos
lret
mov
movsb
fstpt
inc
out
pop
cmpsl
cmp
adc
popf
fisubl
cmc
mov
pop
je
mov
xor
push
lock
xor
pop
mov
inc
xchg
fstpt
push
pushf
mov
pusha
sti
cwtl
mov
jp
decl
xchg
movsl
insl
adc
jmp
lock
dec
dec
sub
cmp
ss
sub
add
mov
xchg
add
jns
insl
movsl
sbb
cmp
sbb
sbb
jle
push
and
test
rclb
aad
jmp
xor
adc
inc
add
xchg
fwait
orl
xor
mov
inc
xchg
push
gs
ss
lds
pop
inc
inc
xchg
mov
push
in
loop
cs
test
push
and
jbe
scas
imul
and
sbb
popa
inc
divb
das
sbb
loop
cmp
in
loope
mov
mov
scas
stos
fcom
or
or
mov
xchg
fsubr
addr16
or
notb
adc
xorb
vmovaps
xchg
imul
jnp
jne
inc
push
fwait
add
cmp
testb
sarb
sarb
mov
mov
mov
xchg
fs
ds
adc
or
shll
adc
adc
add
add
mov
push
add
sqrtps
cmp
insl
push
jae
and
xor
mov
repnz
std
fidivrs
mov
shll
dec
mov
xchg
inc
mov
dec
sub
dec
xchg
jge
into
sub
add
mov
clc
neg
jg
add
movsl
dec
insl
and
or
dec
popf
rolb
movsl
out
testb
push
fs
inc
jle
sub
or
jecxz
sbb
mov
cli
gs
fs
xorl
dec
movsb
lret
lcall
or
mov
mov
imul
cmp
or
xchg
lret
mov
inc
lock
push
movsb
xchg
aad
mov
fwait
in
lods
jne
sbb
cmp
insb
sub
or
outsl
xchg
sub
or
lock
inc
mov
stc
ret
imul
pop
test
stos
cmp
mov
test
fst
inc
loope
xor
or
iret
out
or
jns
jns
ljmp
pusha
rcrb
scas
adc
jbe
mov
mov
jno
mov
div
jl
xchg
xor
mov
pushf
or
mov
arpl
jbe
push
nop
movsl
push
psadbw
jmp
andb
inc
xor
xlat
fmulp
subb
or
cmpb
std
aaa
mov
repnz
insl
mov
outsb
aaa
ja
xor
lds
sub
imul
hlt
push
mov
sarb
stos
mov
in
jge
insl
out
and
ljmp
mov
mov
jae
test
cltd
in
push
lahf
push
mov
push
adc
shl
lret
mov
xchg
call
pop
std
add
mov
jle
jmp
cmc
push
or
call
lods
mov
and
icebp
aam
nop
push
sbb
inc
inc
jb
lds
orl
push
mov
pop
jbe
repz
test
xor
push
rolb
fisubrl
or
rolb
inc
xor
push
mov
ret
adc
pop
lcall
add
mov
fcoms
pop
bound
cli
clc
mov
loop,pt
aam
cmp
test
push
mull
inc
sbb
lahf
je
enter
iret
cmp
in
push
dec
sarb
pop
stos
ljmp
mov
sub
sbb
mov
mov
xchg
repz
cltd
test
stos
pusha
and
loope
or
mov
sbb
pop
and
push
xchg
fwait
out
mov
xor
sub
mov
roll
bound
xlat
push
jecxz
add
cs
inc
icebp
stos
aam
push
fadd
pusha
lcall
lret
rcl
cmpsl
pop
sbb
sbb
leave
rep
or
sub
and
push
push
cli
pushf
mov
add
jle
mov
outsl
out
in
cmpsl
or
repnz
shrl
sub
jl
sbb
cmp
mov
add
sbb
pop
mov
imul
loop
pop
or
ljmp
jp
lret
adc
ds
fstpt
mov
push
leave
sbb
dec
inc
and
hlt
ret
adc
ss
jg
rcrb
sti
dec
add
mov
loope
test
loope
mov
ror
adc
adc
add
push
test
dec
sub
loopne
or
jae
outsl
jle
xchg
or
dec
sbb
pop
aad
inc
mov
xlat
sahf
cmc
xor
sbb
xchg
xchg
sub
cmpsb
sub
ss
push
mov
inc
nop
aad
roll
mov
addr16
dec
cmp
push
lods
aam
inc
xchg
cmpsb
test
xor
cmp
sub
cmpsb
push
cmp
mov
pop
outsl
push
aas
sub
imul
frstor
mov
int3
dec
cmp
pop
inc
outsb
ss
loop
scas
test
pop
inc
mov
sub
aas
adcb
loopne
pop
jb
fbld
sarl
adc
fdivs
lret
sub
inc
push
and
or
mov
jb
add
int
cmpsb
out
in
loopne
sbb
call
or
sar
call
fildl
add
jp
xor
push
aas
dec
div
mov
jno
mov
sub
pop
cmc
mov
adc
inc
xor
stos
loop
inc
or
jne
push
mov
pop
sbb
add
xchg
mov
and
add
xor
push
and
imul
mov
push
xchg
jnp
stos
xchg
xadd
popf
fidivrl
pop
adc
mov
sbb
mov
jno
xlat
xchg
nop
aas
add
nopl
ss
jne
out
lds
push
dec
out
ret
jo
xchg
imul
cmpsb
xchg
mov
rcl
xchg
sbb
dec
or
ret
nop
int
adc
mull
cmp
dec
lock
jne
push
jl
xor
and
imul
mov
xchg
sub
xchg
das
hlt
jbe
and
sub
das
push
fistpll
push
inc
mov
mov
sub
out
push
repnz
jle
shr
pop
scas
in
aad
push
stc
xchg
dec
mov
jno
in
lds
flds
int3
push
pushf
gs
cmp
and
mov
fildl
gs
inc
sahf
mov
out
cmp
jne
popf
mov
rorb
pusha
daa
out
ja
jg
in
js
shll
adc
cmp
shll
ljmp
inc
lock
cmpsl
dec
jns
mov
jae
mov
shrl
sti
andb
pop
rep
pop
cmp
fwait
in
push
sti
movsl
or
mov
mov
clc
js
andl
mov
xor
add
notl
jnp
sbb
or
pop
int3
jl
cmc
test
andl
addr16
shlb
fildll
mov
jg
pop
idivb
push
mov
je
xor
ja
movsl
das
jne
jo
in
inc
jmp
cmovp
gs
ds
inc
lods
outsl
and
movsl
bnd
sub
fs
in
loop
andl
lods
loope
test
inc
sbb
notb
push
mov
inc
divb
out
xor
add
xor
aad
xchg
outsb
inc
pop
xor
cltd
hlt
aam
pop
and
inc
je
stos
sub
scas
push
shrl
push
arpl
jge
rorl
loop
or
loope
stc
mov
mov
out
pop
cmp
jecxz
icebp
xchg
repz
lret
xor
mov
lods
and
fidivl
push
jnp
xchg
mov
inc
lret
sub
cmp
mov
mov
cld
adc
inc
imul
ja
enter
or
mov
dec
sub
inc
and
cmp
jp
test
insl
repz
movsl
bound
dec
leave
stos
addl
and
mov
and
mov
outsl
test
push
adc
bnd
fldcw
inc
cmp
pop
lock
xchg
or
fisttpl
adc
mov
mov
xchg
fisttpll
and
stos
jae
in
inc
test
inc
pop
scas
add
cmpsb
push
out
lea
ljmp
int
and
jle
sbb
scas
jle
dec
cmp
cmp
movsb
pop
push
stc
in
mov
fmuls
push
cwtl
lret
adc
cltd
addr16
mov
mov
ja
scas
mov
or
fisttpl
mov
das
gs
pop
push
cld
cltd
lret
nop
lret
lret
fwait
inc
sbb
pop
add
cmp
gs
dec
test
push
inc
cmp
push
out
outsb
je
pop
scas
out
scas
mov
xlat
aam
add
fs
ds
push
push
cmp
sbb
cld
pop
sub
mov
cs
adc
aaa
fsubp
sub
sub
addr16
sbb
mov
cmp
fmul
jg
add
jae
add
outsb
add
out
xchg
xor
insl
fstpl
aam
mov
and
fcmove
stos
cmp
add
in
test
adc
cmp
pop
cmp
loopne
enter
leave
sahf
jmp
pop
sbb
popf
lahf
ret
mov
dec
lahf
fadds
loopne
and
ror
sub
cmp
out
fildl
push
push
idiv
addr16
xchg
nop
xor
lcall
mov
dec
mov
in
fcomp
ja
ja
divb
icebp
jno
ja
fcmovbe
cmp
pop
xchg
leave
mov
mov
call
dec
pop
dec
or
pop
icebp
in
xchg
mov
dec
pop
movsb
pop
sarb
lds
pop
inc
add
jo
push
fimuls
cmp
icebp
adcl
cmc
cmpsl
nop
mov
lods
adc
or
mulb
sbb
mov
loopne,pt
popa
lret
xor
pop
int3
repz
stos
cmpsl
mov
or
stc
mov
fiaddl
fcmovnb
pop
mov
mov
lret
lcall
and
aam
icebp
outsb
push
add
dec
inc
jae
mov
push
call
sbb
mov
mov
ds
ror
mov
stc
pop
sarl
cmp
loop
cmpsl
pop
sbb
nop
inc
cmc
stos
aaa
cmpsb
mov
xor
jmp
in
cmp
inc
mov
popl
xor
cmp
jae
stos
nop
rcll
cmp
or
fcoml
scas
dec
imul
xchg
ja
and
push
push
mov
cmp
push
js
adcb
mov
jecxz
jae
pop
loopne
mov
mov
rcrb
dec
mov
rcr
jl
dec
adc
jnp
out
sti
mov
pop
outsb
rclb
insb
cmp
cmp
adc
cmpsl
les
insl
mov
or
rorb
xchg
jle
dec
lahf
adc
sbb
xor
pop
add
ficoms
pop
pop
adc
xchg
adc
test
fs
ds
stos
sub
rclb
ret
data16
lds
scas
mov
lahf
sub
test
adc
filds
mov
xor
adc
jo
mov
jno
dec
cli
mov
jb
mul
outsb
sub
push
pop
stc
inc
int
testb
xchg
fnsave
cltd
lods
out
xor
push
mov
lea
pop
and
mov
cmc
push
and
icebp
xchg
gs
xchg
pop
or
cmpsb
fiaddl
ret
std
xchg
cmp
jnp
mov
movsb
pusha
adc
enter
inc
in
pop
imul
fcom
sub
ljmp
jp
or
mov
push
mov
xchg
ljmp
stos
or
add
mov
rcll
jns
mov
push
in
mov
mov
fistpll
fwait
dec
popf
movsl
xchg
adc
jp
and
test
ja
sbb
cmpsl
into
sbb
jmp
mov
sbb
mov
outsb
hlt
mov
mov
aam
insl
lahf
popa
mov
clc
pop
jae
out
jp
sub
pushf
mov
je
xor
inc
lea
sub
push
jbe
or
adc
clc
mov
push
xor
adc
mov
loopne
js
ret
lret
sbb
scas
xchg
pop
gs
iret
dec
push
dec
push
push
jno
leave
or
lods
into
push
leave
xchg
out
mov
arpl
mov
mov
scas
xor
xchg
dec
fs
or
mov
andb
pushf
inc
mov
adc
jns
pushf
and
repz
rorb
fisttpll
cmp
pop
or
shrl
in
or
aaa
rol
adc
mov
dec
int3
mov
sub
or
out
jmp
punpckhwd
add
js
mov
pushf
sub
insb
cmp
shrb
repnz
mov
lret
jo
pop
jg
mov
adc
xor
sub
shrw
fisttpll
movsb
cmp
std
mov
sub
pop
cmc
dec
ljmp
or
scas
push
repz
xor
xchg
test
adc
pusha
lret
leave
fstps
jp
lock
jne
fisttps
dec
hlt
adc
mov
push
add
out
lods
sbb
add
xchg
in
fwait
out
mov
mov
xor
sub
loopne
xchg
gs
adcb
icebp
jb
fisubrl
push
in
ja
pop
les
dec
rcrb
mov
outsl
shlb
les
or
inc
lcall
add
out
xchg
xor
enter
xchg
push
add
in
js
or
inc
jbe
repnz
je
test
xor
outsb
push
in
add
jle
daa
aas
or
sub
loope
xor
adc
mull
lea
mov
lods
sub
sarb
xchg
outsl
xchg
dec
ja
cwtl
sub
jle
jmp
int3
daa
mov
cmpb
vpunpcklwd
bound
pusha
test
ljmp
stc
adc
xchg
outsl
enter
xorl
int
lret
sub
jmp
push
lods
cmp
outsb
jb
jo
aaa
cmp
int
repz
orl
out
lahf
cmp
push
jge
repz
test
sbb
jecxz
jmp
fmull
cli
pop
stos
pop
push
cmp
dec
mov
xchg
mov
jnp
mov
fsubrl
mov
sub
inc
cmc
bound
cmovbe
add
adc
outsl
ljmp
in
enter
jecxz
stos
ror
shlb
in
aam
jl
sub
jge
das
dec
jno
fsubl
test
xchg
jmp
xorb
mov
test
adc
outsb
push
push
ret
add
mov
seta
jae
nop
inc
jo
mov
stc
push
fwait
loope
mov
push
ds
mov
push
sarl
add
cmp
add
add
ja
mov
inc
dec
or
test
iret
push
mov
pop
inc
cld
in
dec
jo
mov
aaa
mov
mov
sub
decb
dec
inc
loope
in
mov
sahf
jo
or
xchg
adc
cmp
enter
cmpsb
mov
push
outsb
adc
mov
mov
pop
hlt
and
pop
xlat
push
aad
test
xchg
je
mov
fcoml
bound
push
shlb
jae
lods
hlt
int
push
mov
cltd
mov
xorl
jae
sub
stos
jg
pop
fs
repnz
je
orl
int3
push
aad
cmp
pop
xor
ds
out
call
and
xchg
fdiv
mov
push
sbb
nop
jb
rclb
dec
call
cltd
insl
repnz
cld
jmp
aad
pop
dec
es
loop
outsl
cmp
dec
out
subl
adc
or
cld
jnp
jne
mov
imul
jo
andb
hlt
lcall
xorl
xor
inc
lcall
rcll
jecxz
ret
cmpsl
xor
pop
jo
pop
pop
arpl
in
popa
xchg
pushl
cmc
or
test
adc
cmp
push
push
adc
scas
sbb
daa
sti
shl
inc
mov
sar
pop
and
pop
sbb
sub
mov
subl
cmpsb
test
imul
xchg
jecxz
add
insl
pop
aad
cmp
inc
jl
pop
sub
adc
ds
into
pop
mov
fwait
cmp
insl
sbb
ficompl
xor
fidivl
int3
lahf
jmp
ds
sub
xchg
xor
cld
cmp
into
push
insb
repnz
dec
jae
cld
sbb
inc
cld
test
mov
dec
int
xchg
das
xorb
sub
mov
dec
imul
or
pop
jl
mov
into
cltd
xor
ret
jg
cmp
jecxz
xchg
ja
inc
pop
sbb
pop
scas
ja
adc
jno
scas
push
mov
pusha
ja
or
enter
aas
insl
bound
out
mov
jmp
pop
fucomip
xor
mov
pop
testl
rcl
loope
jnp
hlt
mov
jo
aas
int3
cli
idivl
xor
inc
cwtl
dec
pop
mov
mov
push
xchg
test
lods
pop
ljmp
mov
cmp
push
test
jne
dec
loope
int
and
mov
pop
cmp
pop
push
daa
test
adc
out
pop
arpl
and
in
insb
daa
fwait
inc
or
xchg
pop
inc
sub
iret
mov
scas
sub
aas
fcomp
int
mov
xchg
inc
in
push
jb
mov
inc
push
in
mov
lret
jge
add
std
fsubrl
ja
dec
clflush
lods
fdivrl
lock
roll
or
inc
push
inc
iretw
fsts
popf
jnp
ja
push
scas
mov
mov
lods
cmp
and
inc
into
sbbb
cld
push
cmc
jmp
stos
inc
aam
addl
cmp
xchg
sub
lcall
sbb
push
mov
sbb
ficoml
pop
test
lock
dec
push
push
mov
cwtl
stos
cld
mov
repz
inc
mov
or
mov
sahf
icebp
adc
sub
ss
mov
sbb
gs
push
je
add
inc
push
movsb
xor
aam
jo
adc
outsb
dec
jg
not
stos
push
and
scas
mov
inc
cltd
jg
dec
push
mov
sti
fcomps
scas
sub
sub
fisttpll
or
mov
sbb
sahf
mov
rclb
xor
ds
out
jno
js
jae
pop
cli
jae
xchg
stc
xchg
nop
xor
jecxz
leave
xchg
jmp
sbb
cmc
sub
sub
lret
inc
jl
jo
push
loop
stc
jb
call
pop
dec
push
xchg
dec
ficompl
xchg
lock
out
sbbb
xchg
lret
nop
adc
lds
lret
dec
and
lea
dec
outsl
cmpsl
dec
mov
add
negl
xchg
stos
shlb
popf
in
enter
add
and
outsb
push
jb
clc
sbb
or
sbb
mov
xchg
xchg
in
fdivs
int
and
mov
inc
xchg
jne
mov
stos
scas
mov
push
cmp
sahf
pop
mov
out
adc
push
rclb
pop
sbb
mov
sub
outsl
push
clc
adcl
lods
rcl
mov
push
sub
loopne
pop
inc
inc
ljmp
add
cltd
pop
inc
shl
gs
int
pop
pop
adc
mov
repz
lods
dec
nop
inc
mov
in
jb
xchg
out
dec
jmp
mov
lcall
pop
ficoml
add
aam
insl
in
in
fwait
hlt
es
mov
ret
lds
dec
pop
decl
out
mov
push
add
enter
ds
aas
mov
rorl
addr16
scas
jae
inc
pushf
mov
cmp
dec
pop
sbb
lods
psllq
test
lret
leave
out
sarl
fwait
es
dec
inc
and
or
sub
xor
pushf
mov
decl
mov
and
or
sbb
xor
adc
int3
and
fdivrl
movsl
xchg
or
add
xchg
mov
decl
mov
dec
stc
and
add
loope
test
stos
dec
gs
mov
and
icebp
pop
sbb
scas
jnp
push
mov
cli
inc
jno
xchg
push
and
push
mov
mov
mov
mov
shrb
fcoms
or
fdivr
or
mov
or
addr16
scas
sbb
shrb
mov
and
aad
shlb
pop
std
pop
fwait
mov
mov
je
adc
jnp
sbb
testl
inc
fsub
in
scas
mov
xchg
jmp
xchg
fsubs
int3
push
xchg
cmp
add
loopne
jmp
dec
repnz
and
dec
cmpl
fidivl
out
call
xchg
push
push
test
inc
enter
sub
rcrb
mov
mov
mov
push
xchg
add
cwtl
fisttps
inc
leave
push
jecxz
out
sub
push
push
or
push
stos
cmpsb
mov
xchg
dec
stc
aaa
fists
clc
push
inc
mov
jmp
inc
test
sub
add
pop
cmp
inc
ja
rcll
jecxz
outsl
push
jae
vmwrite
es
jns
xor
iret
push
test
das
pop
add
std
xchg
mov
movsb
repnz
adc
mov
xor
jnp
mov
add
lock
icebp
cmp
sbb
xor
jno
in
icebp
xchg
outsl
pop
fidivs
jb
test
std
push
dec
dec
dec
sub
add
and
mov
pop
int
ljmp
xchg
call
imul
push
cmp
bound
fnsave
lods
mov
cmpsl
cmp
dec
fcmovnu
outsb
jmp
mov
fildll
cmp
push
icebp
cmp
sar
hlt
je
mov
mov
fldl
ljmp
add
mov
cmpsb
enter
pop
insb
jnp
fs
mov
in
and
sahf
aaa
pop
xlat
dec
jmp
ja
or
testl
dec
adc
inc
mov
mov
gs
loopne
rclb
jecxz
and
movsb
aas
call
cli
out
mov
lahf
push
insb
popf
mov
sbb
xchg
push
dec
outsb
and
fcoms
push
xor
cs
lret
xchg
subb
mov
insl
fcomi
fdivrl
ds
xchg
mov
lcall
into
int3
jne
in
xchg
and
cmp
inc
inc
push
push
mov
pop
mov
sub
cmp
mov
jo
xchg
mov
mov
jo
push
in
movl
aam
inc
test
push
jmp
or
cmp
or
mov
cmp
leave
push
push
lcall
push
fidivs
or
lahf
sbb
icebp
add
mov
cmp
loopne
add
push
and
gs
incb
dec
xor
mov
jae
test
sbb
xchg
mov
jb
cwtl
test
ss
inc
jbe
sbb
or
mov
test
xor
into
xor
popa
dec
pop
push
add
call
enter
outsl
addr16
pop
or
mov
jmp
sbb
enter
inc
imul
hlt
inc
lds
push
pop
push
or
xorb
fs
dec
pusha
push
add
push
cmp
xchg
ljmp
add
push
sub
sub
sahf
shlb
popa
movsl
pop
xchg
inc
test
addr16
jne
push
mov
ds
idivb
dec
outsb
imul
jns
or
sub
mov
jg
mov
or
icebp
add
in
sbb
insb
insl
jo
icebp
fcom
fadds
xor
inc
cmp
data16
cmc
inc
pop
in
std
push
nop
ret
add
popa
lcall
fisttps
movl
fsubl
stos
push
mov
adc
mov
mov
dec
pop
push
pusha
les
jno
adc
sahf
sahf
push
xchg
sbb
sub
adc
outsl
int3
xor
test
sub
aas
stos
add
popa
push
lock
pop
jecxz
mov
lods
xchg
dec
std
adc
mov
ret
cld
or
pop
pop
repnz
lahf
sub
dec
lret
shll
pop
or
js
std
cld
pusha
and
call
mov
mov
sub
in
xlat
movsb
mull
lcall
data16
rorl
mov
mov
iret
add
add
dec
sbb
aam
das
push
jle
scas
repz
sub
add
cmpl
cmc
mov
dec
sbb
jbe
js
popl
mov
cwtl
iret
lock
incb
sbbb
jl
dec
sahf
loop
mov
inc
out
stos
call
adc
ss
lds
add
sub
subl
fwait
ja
rclb
loopnew
jge
enter
and
sub
inc
mov
imul
mov
adc
pop
jb
jb
cmpsb
mov
mov
cmp
and
scas
lret
orl
repnz
in
jbe
jo
jo
hlt
gs
inc
and
je
rcll
mov
das
iret
jmp
xor
push
movsb
jmp
out
inc
movsl
pusha
addl
in
adc
into
aad
pop
mov
mov
jne
and
mov
jge
in
inc
xchg
inc
and
and
gs
lods
rcl
pop
mov
xor
js
int
int
adc
shlb
xchg
xchg
dec
seta
inc
stc
mov
mov
cmp
aas
sbb
mov
mov
clc
cmpsl
cltd
mov
sbb
call
pop
sbb
stos
je
jp
mov
mov
xor
ret
and
pop
xor
mov
mov
xlat
dec
lds
adc
adc
push
push
fnsave
jp
les
xor
cs
xlat
scas
stc
rcrl
add
dec
mov
ss
aaa
adc
call
aas
in
icebp
inc
jbe
data16
cmpl
test
cmp
std
into
loope
jmp
adc
cmp
lods
dec
imul
adc
fisubrl
ljmp
clc
adc
rcrb
mov
scas
pop
lcall
add
mov
xchg
xor
mov
mov
mov
int
in
lret
sahf
jge
mov
push
aaa
jmp
xchg
fldt
in
lcall
jbe
jo
add
dec
nop
daa
mov
sbb
xor
xchg
mov
mov
jnp
repz
xchg
lds
subl
push
sub
push
adc
pop
sbb
aam
out
popf
jns
outsl
fisubl
ret
sub
xchg
cmpsl
dec
mov
inc
stos
and
aad
pop
movsb
mov
mov
or
movq
imul
shll
arpl
pop
imulb
push
fstl
pop
rcrb
dec
push
jnp
xor
ss
cltd
adc
das
inc
fwait
add
stos
mov
loopne
dec
sub
imul
sbbl
adcl
negb
or
sub
daa
int3
fsubr
ficompl
gs
test
repnz
xor
sti
cld
inc
xor
jno
push
fcmovnu
fstpl
inc
stos
in
cltd
and
inc
and
xor
js
es
mov
sbb
and
xor
andl
xor
lock
loop
clc
cmp
cwtl
int3
jbe
sub
and
iret
sti
pushl
out
mov
addr16
add
data16
fucomp
and
mov
and
jo
pop
mov
pop
push
xlat
ss
push
xchg
dec
outsl
outsl
push
add
les
xchg
incl
mov
sbb
mov
mov
aaa
pop
fidivs
lcall
in
sub
inc
aaa
mov
ja
push
out
cld
and
test
sub
mov
add
mov
jle
mov
jae
dec
in
mov
ficomps
jp
fildl
daa
in
cmp
jno
iret
jmp
mov
inc
shrb
mov
out
xchg
out
mov
mov
es
fst
inc
scas
cmp
divl
add
add
xor
arpl
fdivrs
cmp
or
add
insb
pop
mov
pop
xor
daa
lret
xchg
sbb
mov
out
pop
xor
jns
xchg
inc
outsb
loop
cld
test
xor
bound
addr16
sarb
in
pop
scas
dec
jns
jno
jno
aad
sub
outsb
xchg
inc
inc
add
lods
inc
enter
sbb
fidivrs
outsb
pop
outsl
mov
fmull
lods
popf
rep
out
outsb
xchg
out
test
cmc
mov
mov
push
icebp
out
fwait
add
hlt
cmp
icebp
add
or
pop
mov
or
push
lret
imul
xor
mov
mov
mov
test
mov
add
cmc
xchg
jle
imul
test
xchg
repnz
test
jg
mov
xchg
fsubrl
pusha
jp
xchg
pop
jae
xor
insb
sbbb
out
ja
adc
sbb
aaa
rclb
adc
inc
cmp
mov
popa
sub
ljmp
iret
mov
movsb
in
mov
sbb
xchg
mov
imul
mov
jmp
fidivs
lods
add
add
mov
sbb
test
mov
mov
rcrb
sahf
xchg
add
jno
cli
imul
call
loop
out
shl
jbe
cmc
mov
push
ret
jmp
adc
adc
mov
add
inc
mov
cmpsb
shlb
push
jne
push
rol
xchg
mov
out
loop
dec
sarb
loop
jb
hlt
ds
mov
int3
roll
test
cwtl
adc
ss
int
adc
lods
test
cmp
sub
cltd
test
repz
inc
add
mov
sub
or
pusha
aam
subb
cmpsb
jge
ret
xlat
test
in
daa
iret
mov
mov
leave
push
pop
inc
cmp
inc
test
inc
sbb
jge
lcall
push
mov
or
stos
and
imul
dec
fmuls
out
xchg
cmpsb
outsb
push
cltd
arpl
jg
scas
inc
cmc
das
sarl
cmp
push
add
cli
pop
xchg
adc
pop
mov
sahf
ja
mov
outsl
ffreep
push
or
stos
pop
into
icebp
push
adc
xchg
into
sub
add
popa
push
dec
xchg
out
fnstcw
mov
lahf
xchg
sbb
dec
mov
into
sbb
adc
mov
add
push
and
inc
add
cld
or
loope
mov
or
xchg
enter
ss
pop
outsb
fidivs
push
test
rolb
and
clc
and
or
lods
shrb
mov
xchg
push
mov
andb
xor
lret
or
loopne
arpl
popa
lret
repz
jnp
into
ret
mov
dec
dec
clc
mov
sbb
cmpsb
push
inc
enter
mov
adc
jl
mov
jmp
enter
pop
inc
dec
imul
mov
stos
aas
mov
inc
pop
jno
pop
call
cmc
lea
jg
cmp
iret
cltd
add
dec
insb
cmpsb
ds
sahf
dec
fwait
push
jg
lock
jg
mov
jae
push
inc
xchg
repz
xchg
mov
lods
fs
sbb
cwtl
js
stos
push
or
loope
mov
inc
insb
adc
pop
cmp
cltd
mov
jle
jl
or
test
mov
lahf
mov
scas
outsb
jg
sbb
cmpl
push
loop
hlt
cmp
sbb
pusha
mov
sub
shlb
push
sbb
mov
push
jno
jg
aad
jle
inc
inc
pop
lea
dec
jp
addb
jge
xchg
lods
sub
xlat
push
outsl
jne
push
pop
int3
xchg
push
xor
data16
ror
xor
cmp
pop
xchg
and
sti
popa
xor
pop
pop
adc
push
pushf
jge
push
pop
inc
xchg
insl
add
lds
iret
into
cmp
aaa
rorl
mov
inc
andl
fisubs
pop
jp
mov
aaa
xchg
jp
or
adc
dec
and
mov
lods
js
mov
aas
test
inc
lods
xorl
pop
mov
repz
cltd
aaa
add
pop
out
fsubl
cmpsl
push
clc
push
int3
cmpsl
cmp
ljmp
push
dec
mov
repz
stc
adcb
xor
loopne
add
cmp
repnz
jno
imull
mov
rcrb
aad
pop
das
mov
or
pop
jge
sub
loopne
push
sub
push
dec
pop
mov
jno
pop
mov
loopne
sub
jne
es
add
leave
cmp
inc
es
dec
pop
xor
pushf
fimull
xchg
adc
mov
or
pop
mov
xchg
dec
pop
or
pop
add
jmp
andl
stos
cltd
xchg
loop
jle
sub
dec
jns
dec
push
pop
xor
mov
xor
rorb
je
jno
xchg
daa
pop
mov
loopne
mov
xchg
lds
hlt
imul
mov
in
aas
pop
mov
jmp
inc
sbb
dec
pop
or
cmpsb
aaa
ret
sbbb
and
imul
addr16
mov
mov
fsubs
or
in
mov
mov
sbb
mov
and
scas
mov
jbe
xlat
test
in
dec
or
mov
stos
jp
inc
sub
dec
divb
cmp
jmp
clc
lcall
loop
mov
out
shlb
pop
cmp
pop
lcall
es
mov
pushf
push
add
sub
pop
or
sub
stos
mov
or
mov
dec
stos
ss
cld
lahf
xchg
cmp
jnp
shll
add
pop
loop
sahf
pop
orl
jns
inc
into
adc
mov
ss
fs
push
bound
dec
jp
or
xor
arpl
rolb
daa
push
rcrb
dec
push
or
pop
add
sbb
adc
popf
jp
loop
push
sbb
inc
testb
and
cmp
pop
jae
int
xchg
enter
mov
in
fists
test
mov
xchg
ret
push
cmc
sbb
mov
clc
xchg
scas
testl
xchg
pop
imul
pop
mov
add
mov
lret
shrb
outsl
or
popf
pop
xchg
adc
int
cmc
jns
mov
out
push
shl
and
pop
popa
inc
pusha
sbb
jb
leave
in
scas
jnp
inc
movsb
xchg
ja
sub
outsb
pop
sub
xlat
lcall
not
pop
mov
mov
je
loope
test
cli
push
dec
push
out
mov
sbb
mov
add
jne
out
xchg
push
cmp
or
mov
out
test
sarb
and
mov
scas
xchg
jne
cmp
sbb
iret
inc
out
pop
jg
movsb
test
aaa
jp
cmp
dec
rol
xlat
inc
mov
out
dec
sarb
fcmove
lcall
imul
xchg
fstpl
addl
cmpsb
fistps
push
dec
lret
dec
push
xor
cmp
insb
cmp
mov
dec
outsb
les
add
sub
mov
mov
mov
into
pop
mov
add
leave
test
mov
js
or
iret
push
jmp
jns
repnz
ror
repz
dec
lahf
and
in
dec
add
imul
fwait
dec
inc
jne
jl
add
xor
ljmp
fpatan
sbb
adc
fcmovnbe
ss
movsl
mov
xchg
shrl
imul
mov
sub
clc
test
and
adc
adc
push
ret
addl
xchg
loop
imul
mov
les
cld
cmc
neg
cld
mov
leave
test
push
stos
aam
shll
add
fdivl
xor
mov
cld
mov
add
pop
enter
nop
loope
imul
and
mov
arpl
inc
mov
inc
inc
aaa
leave
lahf
push
jo
es
add
sub
sub
pop
ret
sbb
mov
mov
cmpsb
sarb
daa
push
enter
sti
rorb
adc
and
cld
pushf
inc
sub
push
xor
gs
or
lods
daa
sub
cmp
push
mov
hlt
mov
mov
shlb
mov
mov
loope
sub
movb
pop
add
or
sahf
jl
sub
cwtl
xor
sbb
pusha
rcrl
inc
and
or
mov
fmuls
mov
push
mov
mov
jp,pt
call
push
mov
nop
adc
pop
push
or
rorl
sbb
das
pop
sub
jb
adc
mov
fcomi
insl
mov
movsl
push
cmp
add
in
lret
sub
pop
push
add
cmc
dec
sar
add
js
dec
std
inc
insl
xchg
xor
push
sub
fisttpll
jno
mov
xchg
jbe
jnp
pop
sub
dec
ret
sub
xor
or
dec
xchg
pop
repz
negl
dec
mov
into
jnp
outsl
jo
ds
pop
cmp
in
push
xchg
mov
xor
rorl
les
movl
sub
sbb
mov
in
xchg
jmp
icebp
jne
jecxz
or
test
arpl
cs
cmpsl
aas
lock
xchg
aad
xchg
pop
test
xor
sub
adc
xchg
stos
repnz
and
cmpsl
jns
pop
xor
pop
in
mov
pushf
add
fiaddl
pop
xchg
test
adc
lods
xchg
xchg
push
sub
adc
mov
enter
cmpsl
push
inc
cld
cmp
and
xor
cmp
push
sbb
aaa
fwait
add
cmpsb
cmc
fs
mov
aas
or
int3
inc
cvttps2pi
mov
mov
jle
out
jns
je
iret
push
loope
pushf
sub
loope
pop
addr16
scas
movsb
xor
mov
sbb
push
or
int
jl
fnsave
jae
inc
mov
add
push
mov
cmp
jb
imul
into
lidtl
mov
std
cld
sub
mov
pop
mov
cmp
test
mov
sbb
lret
sahf
pushf
out
gs
fadds
jg
cmpsb
add
dec
test
das
cmc
cltd
pop
sub
jle
pop
dec
push
jp
xor
cmp
jge
inc
mov
jb
repnz
mov
test
adc
xor
adc
xchg
fadds
or
loopne
movsl
mov
lret
mov
push
mul
psubsw
adcb
das
adcb
pop
rcll
enter
fnstenv
fmull
testl
and
mov
jmp
dec
pop
shl
movsl
shrb
dec
add
pop
loope
flds
mov
push
push
jp
push
rol
add
mov
test
jne
gs
jl
mov
repnz
popa
fdivl
cld
mov
cltd
jae
daa
cs
loopne
add
mov
mulb
push
test
push
daa
pop
out
jb
fdivs
sbb
fstp
add
xor
dec
sub
xchg
xchg
mov
adc
pop
xorl
cmp
push
push
fistpll
loope
pop
mov
shrl
lods
mov
mov
push
and
cwtl
call
jmp
and
xchg
ret
scas
test
add
add
lds
inc
sbbb
add
or
data16
add
mov
cmc
cmpb
lock
push
lods
pop
icebp
sbb
adc
mov
movsb
push
push
test
test
jecxz
mov
jo
cs
add
xchg
xchg
in
ret
testl
enter
jmp
push
inc
mov
cmpsb
xchg
iret
inc
mov
dec
jno
insl
jnp
lret
mov
xor
addr16
pop
mov
lret
sarl
lret
orb
inc
mov
ss
lods
xchg
ds
add
leave
cmp
sbb
arpl
arpl
dec
sbb
adc
js
jl
fistpll
jo
fsubrp
pause
or
fs
int3
mov
cmp
addr16
sbb
popa
cmp
cmp
jnp
stos
aaa
in
cwtl
mov
ficompl
fimull
xchg
rol
iret
xor
adc
dec
shlb
loop,pn
mov
addr16
xor
js
std
lock
clc
pop
nop
fstl
aas
repz
mov
mov
shll
pop
adc
add
jne
repz
test
pop
jno
jns
ljmp
hlt
jg
lock
jmp
and
outsl
cmovbe
mov
add
push
inc
xchg
cmp
loopne
cmp
popa
dec
icebp
fnstsw
loopne
dec
sahf
nop
lret
jnp
cwtl
add
jmp
in
jno
cwtl
xor
mov
cmp
fldenv
push
and
xorl
movsl
gs
loopne
or
aaa
and
rclb
mulb
push
pop
xchg
mov
sahf
pop
add
mov
pop
mov
mov
out
loop
repz
sbb
js
test
das
nop
iret
cmp
out
fsts
shl
in
xor
mov
sub
lgs
pop
sub
call
popa
mov
mov
xor
sub
dec
ret
or
out
lcall
xchg
or
out
xchg
push
fadds
push
add
and
subb
push
push
das
fs
xor
bound
jnp
ficompl
stos
jg
loopne
test
aad
mov
imul
dec
mov
dec
xor
bound
xor
push
in
push
dec
int
inc
adc
xchg
mov
int3
in
jo
fstps
imul
ret
sarl
dec
scas
jle
int3
jle
fcompl
sbb
icebp
ja
jae
dec
jl
mov
xchg
das
scas
xchg
out
dec
push
movsb
xchg
or
cmp
cmp
and
jle
push
std
pusha
sbb
outsl
mov
push
sub
out
pop
pop
mov
mov
or
inc
ljmp
sub
xor
pop
jae
in
sahf
pop
add
inc
xchg
sub
add
adc
imul
lret
in
lahf
xchg
cmpsb
ljmp
jl
addb
fnsave
xchg
hlt
mov
cmp
clc
and
pop
adc
adc
dec
dec
ret
ret
repz
or
mov
int
push
cmp
jg
sub
leave
mov
push
mov
out
faddp
sahf
bound
and
dec
pop
dec
jae
fisttps
mov
push
or
test
sar
cwtl
ja
mov
pusha
push
push
popf
sbb
ss
cs
es
movsb
pop
inc
inc
inc
cmp
add
xchg
pop
and
lods
jl
adc
jno
jecxz
test
xchg
and
shll
inc
dec
rorl
inc
or
sbb
xor
sbb
jno
int3
mov
sub
cmp
mov
mov
gs
out
aaa
movsb
sub
out
icebp
roll
adc
loope
in
pop
sub
inc
cs
mov
add
enter
push
lds
pop
sbb
movsb
sahf
push
int
jl
or
adc
jecxz
push
push
lret
push
xchg
xor
les
dec
mov
paddsb
mov
jge
cltd
imul
push
lret
jns
pop
cmpsl
int
mov
ret
sahf
pop
mov
push
sub
ss
xchg
das
mov
dec
insl
mov
dec
pop
pop
pop
dec
imul
lds
dec
icebp
mov
sbb
xchg
popf
scas
cmc
call
mov
jmp
jg
cmpsl
sbb
in
mov
sub
pop
arpl
xorb
mov
cmpsl
inc
sbb
jmp
call
xlat
mov
sbb
inc
in
ss
in
testb
mov
push
xchg
nop
nop
sbb
xor
sbb
xor
sbb
xrelease
rcrl
cmp
xchg
sarl
or
cmp
cwtl
fidivs
int
cmp
shr
arpl
ret
frstpm(287
test
adc
mov
gs
orb
mov
repnz
js
pop
imul
mov
dec
push
sbb
mov
in
lods
scas
jp
in
pop
js
or
inc
popa
hlt
outsl
xlat
xor
sub
cli
push
popf
in
mov
mov
aad
adc
adc
fstl
jo
jbe
push
pop
inc
push
push
inc
jnp
pop
lret
mov
jmp
ss
iret
loopne
dec
pop
sub
jecxz
adc
jl
test
or
repz
mov
cld
sub
dec
add
sbb
jp
inc
sbb
into
push
push
xchg
mov
js
dec
loope
stc
jns
or
loop
shll
dec
int
ror
lea
mov
sahf
or
aas
mov
xor
xchg
jno
sub
cmpsb
cmp
shr
cmp
pushf
sub
mov
cmp
xchg
sbb
jp
xor
add
push
mov
aas
cmc
pop
les
arpl
push
pusha
sub
jp
and
xchg
test
xor
sbb
pop
fwait
in
mov
inc
iret
arpl
jp
sti
sub
vcomiss
and
hlt
sbb
mov
or
out
inc
adc
repnz
mov
inc
push
leave
sbb
inc
stos
mov
dec
icebp
xchg
lret
mov
icebp
sarb
outsb
stos
jno
mov
jae
or
cltd
xor
adc
sbb
movsb
xor
jle
int3
xor
or
xchg
mov
ljmp
push
test
add
scas
inc
cltd
stos
cltd
and
adc
inc
fsubs
hlt
sub
scas
into
mov
push
mov
mov
and
stos
stos
adc
push
lods
xchg
stc
ret
inc
mov
insl
mov
addr16
mov
loope
cmpsl
mov
lea
je
pusha
stos
dec
dec
xor
pushl
insb
push
sbb
push
sahf
sbbb
xchg
jle
xchg
test
mov
insl
vmovntps
dec
mov
outsl
dec
inc
in
mov
js
xor
repnz
fnstenv
mov
dec
loop
inc
aaa
sbb
js
les
mov
pop
aam
dec
push
lcall
xor
nop
enter
and
aad
enter
rcl
sbb
jl
enter
sub
ds
jno
mov
lock
out
adc
fists
pop
stc
jns
mov
pop
mov
imul
addl
adc
cmp
aam
out
xlat
pop
fmul
movsl
add
lret
in
mov
jns
xor
cmc
or
in
xor
mov
lock
test
xchg
imul
aaa
mov
fmull
fwait
mov
test
not
lds
out
aas
add
test
push
mov
jne
mov
adc
xchg
dec
push
ss
pop
lods
push
sbb
stos
and
stc
fs
lods
outsl
outsl
outsb
in
jmp
insb
jae
cmpl
rolb
fistpll
push
or
js
jge
xor
add
ret
das
lock
icebp
xchg
inc
pop
and
sti
cmp
dec
loopne
sbb
cli
push
leave
sahf
lods
add
and
ljmp
mov
inc
icebp
xor
cmpb
adc
cmp
lahf
pop
cmpsb
sahf
cmp
sub
sub
negb
add
jbe
jbe
jge
dec
fildl
imul
lods
fsubr
imul
test
adc
mov
leave
or
push
es
cmp
xchg
pop
scas
push
shlb
cmp
imul
sbb
fbstp
idivb
pusha
fidivrs
hlt
ds
sbbl
sub
lcall
pop
jp
pop
cmpsb
fistl
xor
add
lret
jge
shr
fnstenv
pop
jns
jne
repz
ljmp
adc
popa
inc
mov
lock
aaa
scas
lods
dec
sub
out
ret
pop
shl
or
sar
fs
push
les
fnstcw
shll
cmp
lret
cld
add
mov
stc
push
cs
jl
jae
sub
pushf
idivb
jg
sub
cmp
mov
or
adc
or
stos
clc
les
add
push
scas
dec
mov
add
push
sub
push
xchg
outsb
jae
push
movswl
sub
scas
adc
mov
popf
idiv
scas
push
frstor
imul
or
jnp
xchg
sbb
divb
addb
popa
stos
mov
mov
pop
js
push
pop
ret
dec
fidivl
dec
push
sub
or
fisttpll
fadds
fucom
or
and
adc
jo
mov
aaa
add
sub
pop
jno
or
dec
add
pop
cwtl
fs
mov
mov
mov
aaa
test
sub
rolb
call
add
cmc
fcom
lret
cmp
sbb
repz
mov
pop
mov
mov
shll
gs
lea
mov
add
filds
out
mov
dec
mull
test
sti
push
pop
jp
lods
insl
lret
bnd
cwtl
sub
addb
jp
popf
push
and
leave
cmp
lahf
rcrb
cmpb
mov
cmp
iret
imul
movsl
rorl
lret
daa
mov
les
jnp
push
data16
or
xor
cmp
cld
fildll
fildll
push
adc
outsl
pop
fadds
xor
add
xchg
sub
pop
icebp
mov
cltd
mov
mov
cltd
sbb
ljmp
ja
pop
or
adc
xchg
cmpsb
jecxz
imulb
ret
jmp
popf
pop
jl
inc
insl
mov
cmp
or
bound
mov
xor
mov
jle
mov
ja
scas
jp
or
push
hlt
mov
lret
mov
cmpsl
jg
pop
sbb
stos
fsubl
test
stos
je
and
pushf
add
or
repnz
pop
jp
sbb
imul
xchg
adc
shlb
les
andb
inc
out
popa
rorb
sahf
nop
xchg
jo
out
stos
call
filds
inc
dec
jecxz
pop
mov
mov
mov
inc
and
fcmovu
fcomps
stos
push
xchg
inc
xorl
inc
mov
test
adc
aad
leave
ficompl
aad
mov
push
xchg
sbb
cltd
add
ja
pop
ds
clc
mov
insb
push
cmp
in
fwait
mov
leave
adc
lahf
test
adc
mov
ret
mov
stos
xchg
in
stc
sahf
and
movsl
sub
imul
mov
xor
dec
xchg
rorw
inc
ds
push
cmp
sbb
out
mov
ja
sbb
push
fdivrp
icebp
sbb
sbb
movsl
push
das
jno
aaa
xor
sbb
dec
cmp
mov
jg
mov
push
jl
dec
pop
mov
lahf
outsb
mov
test
jge
inc
je
push
jno
cmc
adc
sarl
lds
inc
adc
push
pop
jns
add
cmp
mov
icebp
or
js
jp
pop
outsb
in
mov
icebp
pushf
xchg
push
lret
pop
sub
sub
add
xor
mov
out
int3
mov
movsb
xor
and
das
cmpsb
xchg
or
and
mov
int3
mov
ficoms
sub
jle
scas
arpl
ljmp
add
sbb
ret
mov
pop
call
push
xchg
fstps
mov
cmpsb
ja
push
inc
jno
mov
dec
adc
ja
jbe
cwtl
push
mov
mov
data16
es
jns
arpl
push
ss
jg
sar
mov
inc
fsubrs
jnp
or
mov
adc
add
lahf
xchg
add
push
out
iret
push
js
cltd
pop
rcrl
jg
inc
jns
icebp
jl
mov
jne
adc
pop
outsl
jge
into
cmpl
cli
inc
lods
cmpsb
lcall
adc
scas
in
mov
jecxz
or
stos
js
add
shl
mov
and
pop
outsl
aas
ror
mov
push
test
divl
adc
cli
fs
cmp
sbb
hlt
pop
jne
pop
jmp
ret
loop
add
inc
cs
es
std
mov
mov
lock
adc
mov
aam
icebp
xorl
sub
jmp
mov
adc
scas
mov
jl
xchg
mov
lods
dec
xchg
sub
sub
lcall
cs
fdivrp
icebp
test
push
and
mov
add
dec
cmp
js
fs
xchg
xor
std
inc
sub
add
repz
mov
dec
add
xchg
repnz
lea
jge
inc
sahf
imul
insb
scas
xorb
push
mov
adc
xchg
into
sbbb
test
pop
xor
and
adc
push
sub
push
or
xchg
sti
lock
scas
adc
lock
lahf
lahf
out
aas
xchg
lods
mov
pop
rolb
or
or
outsl
aad
xorl
lcall
push
push
push
jns
xchg
inc
sub
jle
int3
pushf
and
ret
mov
hlt
cmp
aas
jl
mov
jp
inc
pushf
mov
sahf
or
inc
ja
imul
sub
sbb
fs
cli
sti
outsb
aad
test
push
mov
sbb
aam
lahf
aaa
clc
mov
fiaddl
imul
ss
jb
adc
movb
mov
dec
or
mov
and
jbe
xchg
pop
dec
stc
mov
mov
cmc
insb
ret
xor
fists
push
sub
loope
or
cmp
jl
sub
out
xchg
stos
cmp
mov
pushf
repnz
shll
push
movsb
insl
pusha
leave
sbb
xchg
repz
push
sub
shr
jmp
fisubs
jecxz
fsubs
mov
or
dec
jne
sub
loope
test
mov
inc
mov
stos
movb
test
mov
mov
adc
mov
mov
pop
shrd
lea
ds
xlat
mov
xchg
arpl
jo
mov
fs
push
ljmp
mov
jmp
nop
sbb
jle
sbb
lcall
mov
pop
stos
lods
ljmp
insl
mov
test
mov
ret
in
scas
mov
sbb
ljmp
adc
add
add
test
aas
fcom
out
push
jle
iret
stos
pop
rolb
shl
push
or
testb
int
pop
lret
xchg
sub
dec
adc
je
xchg
test
pop
or
cld
or
js
in
movsl
loopne
adc
aas
push
ds
mov
mov
cli
push
fcmovne
subl
loopne
call
sub
xchg
out
stos
jae
hlt
popf
notb
lcall
aam
mov
pop
ljmp
adc
cmp
cmp
mov
pop
les
inc
xor
xchg
pop
aaa
sbb
mov
lods
cmp
mov
dec
xchg
pop
inc
ficoms
or
pop
enter
cmp
jle
jmp
xchg
in
xor
xorl
lds
mov
lods
jae
lock
push
jl
dec
and
and
or
ja
adc
aam
loope
ja
loop
mov
add
gs
js
pop
jg
into
or
ljmp
fsubs
mov
idivb
je
xor
xor
addr16
shll
push
testb
jge
xchg
bound
ja
xor
repnz
add
dec
mov
cmp
add
mov
in
inc
rorb
test
mov
pop
fmuls
add
mov
lea
not
adc
in
or
push
lods
aad
scas
inc
sbb
mov
xchg
or
sbb
sbb
mov
xchg
sbb
xchg
js
loop
mov
jle
sti
mov
call
push
sub
or
mov
pop
dec
enter
push
iret
inc
or
pop
and
mov
xor
popa
push
jl
cltd
push
cmp
mov
cs
fnsave
imul
lods
pop
adc
filds
in
and
inc
and
sti
insb
sub
mov
cli
les
std
xchg
xor
and
popf
xor
sets
lock
push
inc
lods
push
adc
test
pop
or
test
sahf
cmp
stc
mov
mov
and
ja
ret
sbb
push
insl
pop
push
push
loope
add
sbb
loop
inc
mov
pop
fisttpl
mov
shlb
sahf
or
loop
mov
and
or
mov
dec
insl
cmp
xchg
jge
dec
test
xchg
ret
jo
scas
push
push
aaa
sub
shrb
or
lods
insl
fiaddl
data16
shl
dec
rcrb
fidivrs
pop
rorb
ficompl
lods
push
pop
cmp
add
frndint
loopne
push
iret
xor
jmp
push
inc
or
hlt
clc
enter
push
adc
cmp
iret
dec
push
into
mov
rorl
and
push
daa
gs
mov
xchg
jle
jae
sub
cmpsb
lea
mov
daa
mov
or
in
mov
dec
or
jo
das
ds
lcall
pop
push
js
mov
pop
pop
out
and
mull
mov
outsl
sub
js
rcr
rclb
xchg
pop
fistpl
lods
loop
sti
push
jns
sbb
movsb
repnz
xchg
push
sbb
fucomi
lds
cmp
xor
ss
xchg
test
xor
ss
stos
push
push
int
repnz
jmp
pop
pop
sbb
mov
xor
push
inc
iret
lock
push
jmp
enter
test
sbb
jae
jb
test
jae
adc
mov
push
pusha
test
inc
push
pop
das
gs
jnp
dec
sub
shr
add
or
sub
pop
push
mov
jl
aad
inc
pop
repz
mov
fxch
or
scas
das
cltd
push
mov
mov
lahf
push
jmp
daa
sahf
loope
xor
adc
loop
and
jmp
imull
mov
repz
das
in
push
ja
rclb
pop
inc
in
lahf
jnp
scas
or
or
dec
inc
mov
popa
push
not
int3
or
xchg
pop
add
sbb
mov
out
popa
xchg
inc
in
rorb
and
pop
push
mov
iret
shrl
es
or
pop
repz
fldl
or
loopne
je
fs
mov
add
or
popa
push
ja
dec
aas
mov
cmp
repnz
push
imul
enter
loop,pn
mov
imul
mov
cmp
sbb
dec
push
cvtpi2ps
xchg
add
mov
mov
lods
pop
sub
sahf
outsl
jb
push
add
inc
xor
lds
repnz
imul
adc
inc
cmp
pop
rorb
daa
mov
repz
xchg
std
push
les
pop
dec
movsb
sub
adc
and
push
in
mov
test
push
mov
hlt
repnz
scas
mov
fidivs
shll
popa
fldt
jno
inc
pop
ret
adc
out
xor
lods
mov
cmp
pop
fnstcw
enter
push
adc
stos
push
into
xor
cmp
data16
jnp
scas
stos
xchg
addl
decb
mov
jle
dec
cs
pop
xor
leave
add
test
pushf
push
xor
pop
dec
ds
jge
push
xor
push
bound
lcall
sub
leave
out
lcall
aas
stc
cmpsl
push
ja
stc
jg
sbb
sbb
sbb
aas
sti
or
mov
mov
in
lock
aam
xchg
aad
jae
pop
roll
lcall
dec
or
xlat
out
push
xchg
xchg
sbb
push
pop
dec
sahf
shlb
test
cs
mov
push
mov
fmull
aam
push
mov
inc
daa
inc
and
mov
pop
inc
out
mov
xor
test
and
sub
mov
lret
jg
lods
sbbb
sub
or
or
sbb
adc
nop
or
xchg
inc
out
and
into
push
push
sbb
iret
or
shll
jle
cmp
pushf
fstps
dec
pusha
arpl
sub
jge
loop
inc
in
mov
xchg
leave
pop
xchg
jg
dec
mov
sbb
mov
in
pop
mov
inc
xchg
push
lea
mov
out
inc
mov
fs
pop
sub
jg
stos
pushf
jbe
mov
leave
cltd
xor
jbe
subl
test
loope
cltd
add
cmc
movsb
lea
shlb
popf
sub
xchg
into
imulb
insl
inc
sub
jle
xchg
fwait
and
push
clc
mov
and
push
repnz
mov
out
ja
xor
imul
and
cmpsb
and
mov
xchg
cmp
sahf
xchg
mov
xchg
and
cs
daa
ret
or
std
lcall
xor
mov
inc
popa
stos
dec
pop
in
mov
scas
push
shll
dec
popf
lahf
test
mov
mov
sbb
dec
push
cmpsl
insb
shrl
nop
push
int
ret
or
mov
ret
and
fwait
repz
notl
sbb
sub
scas
inc
xchg
cmp
movsl
ficoms
cwtl
push
mov
test
inc
pop
mov
ljmp
loope
int3
mov
mov
sbb
cmpsb
aad
adc
js
scas
mov
mov
int3
std
mov
push
adc
mov
clc
mov
cltd
or
mov
push
xor
add
push
and
xchg
dec
add
sarb
xlat
jmp
push
jp
pop
out
xor
std
mov
lods
fsts
and
dec
scas
pushf
inc
push
gs
iret
in
inc
mov
inc
bound
mov
push
adc
pop
xor
andl
repnz
dec
sbb
add
cwtl
and
pop
cmpsl
or
sarl
add
pop
sub
mov
jnp
fsubl
popa
decb
sarb
lret
xchg
fwait
lahf
xor
jmp
push
aaa
insl
adc
sbb
mov
sbb
dec
addr16
fnstsw
in
ficomps
call
or
push
mov
fdivrp
xorb
push
movzwl
dec
mov
xchg
in
in
cli
data16
sbb
pop
sub
sbb
je
lods
adcl
dec
sbb
aas
pop
ficoms
data16
fsts
pushf
adc
test
fs
pop
push
daa
jbe
clc
lea
lcall
push
mov
imul
inc
aam
icebp
out
test
cmp
xchg
push
pop
fs
inc
sub
push
and
test
add
dec
ds
xchg
aad
sbb
cwtl
cltd
sahf
and
std
rclb
lret
dec
dec
sub
aaa
xor
je
std
mov
pop
fidivs
jg
xlat
aad
xlat
sbb
jae
dec
daa
add
add
addl
aaa
jle
int
popl
sbb
jmp
cmp
xchg
and
ficoml
cmp
popf
shll
insb
inc
popf
stc
adc
ds
nop
xchg
push
movsl
lods
imull
jns
sbb
and
pop
adc
push
jno
ja
mov
dec
adc
cltd
xchg
push
xchg
or
aaa
cmp
or
mov
and
jl
mov
fcoms
pop
mov
pop
push
dec
das
cmp
cmp
scas
adc
cmpsl
mov
sar
out
clc
or
call
mov
xchg
adc
leave
movsl
mov
cmp
mov
push
push
or
aas
mov
and
jecxz
dec
mov
push
movsl
push
pop
jnp
mov
jge
add
mov
rcrl
sub
jl
pop
fdivl
js
imul
ret
test
iret
pop
movsb
jge
stos
mov
sub
repz
js
shlb
lds
push
in
rcr
popf
inc
punpckhwd
stc
fisubrs
adc
mov
mov
test
sbb
scas
mov
mov
dec
out
out
adc
inc
push
fwait
push
jp
mov
pop
push
mov
out
push
fldt
inc
lea
repz
test
movsl
mov
jl
faddl
dec
cmp
in
fistl
out
adc
push
adc
cld
add
dec
jae
and
ret
xor
or
mov
push
dec
aaa
xchg
loop
adc
daa
sti
lcall
jl
inc
xor
add
dec
push
cmp
pushf
mov
das
cwtl
sbb
addb
hlt
sub
push
xor
in
push
daa
mov
xchg
out
sub
outsl
std
pop
dec
sbb
into
rcr
mov
insb
xor
and
ja
push
pop
xor
adc
xchg
idiv
mov
add
pop
lock
dec
and
mov
ret
cmp
jmp
ljmp
nop
rorb
adc
fcmovne
stos
sub
jae
icebp
leave
xor
cmp
movsl
sbb
adc
or
push
sbb
shll
subb
cmp
imul
scas
das
pop
std
push
enter
or
cld
enter
test
cmp
pushf
cmp
sub
pop
pop
xchg
lret
enter
test
mov
lea
je
mov
inc
jg
dec
jb
stos
std
push
add
leave
pop
jg
and
pop
bound
leave
lds
inc
sub
inc
popf
sbb
sbb
cli
aas
in
popa
ret
mov
cmp
cli
push
clc
jo
mov
jp
inc
xchg
add
pop
mov
test
shll
mov
stos
pushf
movsb
mov
shrl
sub
mov
mov
js
aas
ljmp
lds
inc
sub
ret
xchg
add
sub
fisttpll
repz
dec
movsl
cmp
jg
xchg
adc
xorl
loope
out
pop
stc
test
lods
scas
add
movsl
or
in
clc
outsl
call
stos
fistpll
push
cs
call
or
loop
nop
pop
mov
xorb
jno
inc
or
cmp
sub
xlat
jge
cmpsl
cmp
mov
mov
lods
loop
jnp
mov
test
cmpsl
outsb
aaa
xor
call
jo
push
cltd
sub
inc
das
jge
insb
xchg
xchg
mov
dec
push
pushf
cltd
popa
mov
push
je
loop
sti
enter
sub
cmpsl
imul
sahf
mov
or
mov
xor
cmpsb
lods
fisubl
insb
nop
and
and
mov
and
test
cmpsl
sbb
pop
ret
repnz
out
outsb
adc
outsl
or
or
call
mov
mov
aam
fsts
fcmovu
jmp
cmp
or
jp
push
faddp
cmp
sahf
add
nop
inc
xor
or
cmp
inc
fwait
and
sbb
pop
mov
jae
mov
incb
arpl
adc
sub
gs
aas
cli
pop
and
jae
fcoms
xor
inc
inc
jns
rcrb
mov
add
in
lret
pop
cmp
icebp
and
cmc
jg
js
lods
mov
loop
call
xchg
xchg
rorb
mov
cmp
movsl
fimull
insl
fs
lock
jg
shr
dec
insb
std
nop
out
pop
jo
jge
or
test
decl
cmp
jns
pop
xchg
out
std
or
add
mov
cltd
cmp
xlat
or
das
sbb
popa
je
addr16
and
sub
xor
jb
adc
stos
inc
mov
push
xor
dec
in
cmpsl
inc
push
test
cmp
sub
js
add
adc
or
adc
stos
ds
loop
mov
pop
jae
push
clc
scas
push
inc
movsb
out
cld
sbb
xchg
shrl
sahf
repz
es
mov
aam
push
stc
ljmp
lods
daa
mov
push
mov
std
lock
xchg
mov
pop
loop
cmp
sub
je
inc
repz
sub
insb
jne
mov
leave
jne
aam
in
mov
gs
repz
in
repnz
cmpl
dec
jb
lock
adc
jb
rcrb
popa
popf
dec
push
cmp
inc
popa
js
push
mov
orb
mov
bnd
cmp
or
fwait
in
addb
mov
sbb
mov
jae
ficomps
test
jle
mov
in
aam
jmp
add
cs
pop
and
fwait
pop
cli
cs
jbe
repnz
mov
js
or
mov
idivb
ficompl
fnstcw
or
xor
push
jae
cmp
lret
sub
mov
shrb
ret
orb
and
sbb
js
fnsave
sbb
mov
jb
lock
jno
add
mov
dec
into
lret
push
enter
in
mov
cmp
jae
movsb
adc
outsb
push
pop
push
push
cmp
dec
aas
sub
outsl
push
and
push
cmp
push
inc
leave
mov
aaa
fs
lret
sub
pop
orl
dec
das
jbe
mov
mov
jb
mov
test
imul
clc
dec
cmp
mov
outsb
inc
enter
cmp
dec
scas
loope
sub
sub
lods
jmp
loope
js
cmp
aad
jge
inc
sub
and
sub
push
ja
int3
in
rolb
and
and
adcb
adc
jmp
pusha
xchg
sbbl
push
adc
nop
cmpsl
in
std
xchg
pop
push
gs
push
imul
sbb
shl
mov
leave
mov
scas
push
or
loope
mov
xchg
rcrl
cs
cmp
xchg
in
sarb
adc
mov
ret
lret
dec
dec
xor
test
dec
jns
mov
sti
xchg
xor
inc
in
jecxz
nop
jle
stos
xor
dec
jb
data16
dec
fsubrl
mov
pop
sub
insb
les
std
mov
adc
xchg
les
xor
sub
mov
mov
gs
andl
movsl
pop
cwtl
pop
add
out
xor
shll
sub
js
cmp
test
das
add
inc
stos
push
mov
inc
loopne
xchg
xchg
aaa
dec
test
sbb
into
push
insl
mov
jnp
pop
arpl
mov
xchg
adc
jbe
aam
push
aad
ss
enter
test
sti
insl
cmp
dec
inc
scas
jecxz
xchg
jnp
popf
mov
mulb
test
and
jmp
loopne
sarl
mov
inc
dec
sub
push
jns
and
cmp
pop
aas
and
ficomps
mov
sub
xor
dec
add
fiadds
movsl
fmull
jle
cs
ljmp
hlt
scas
icebp
mov
mov
mov
fwait
sub
sbb
pusha
push
dec
call
xchg
sub
pusha
loopne
shrb
pusha
cmp
jae
mov
frstor
mov
aad
mov
xor
dec
push
cmp
popa
adc
movsb
dec
fidivl
and
pop
dec
nopl
fwait
push
dec
adc
pop
mov
mov
mov
jbe
leave
push
adc
in
and
sbb
mov
movb
pusha
out
gs
and
and
xchg
mov
add
jl
xchg
push
pop
cmp
mov
mov
in
out
repz
cld
adc
push
jmp
mov
push
fs
vpcmpgtd
or
mov
cltd
and
jb
sbb
ds
inc
das
add
cmp
cmpb
movsl
inc
sub
mov
lds
inc
cmp
xchg
fdivs
hlt
push
xchg
push
daa
xlat
jge
stos
enter
mov
repnz
or
and
sub
inc
lock
or
cmp
mov
pusha
jecxz
mov
iret
inc
inc
adc
or
fmuls
aad
xor
in
loope
mov
fsub
popf
push
push
mov
imul
mov
jo
cmpsb
jle
add
mov
cmp
add
or
pop
test
mov
jbe
add
jecxz
outsl
movsl
inc
pop
inc
arpl
cmc
fnstcw
lods
mov
lcall
test
and
push
movsb
mov
cmp
add
andb
adc
out
mov
in
cltd
sbb
xor
mov
dec
int
arpl
pop
adcl
dec
popf
nop
insl
cmp
add
mov
jp
psrad
push
sbb
aaa
mov
cs
inc
out
xor
cwtl
mov
je
out
mov
mov
ljmp
jge
or
and
lods
les
and
sub
lcall
pushf
lods
mov
pop
or
sub
lds
jg
mov
pop
pop
test
lret
jle
pop
gs
test
das
loop
add
inc
mov
fadd
hlt
sbb
lret
cmpl
sub
movsb
mov
pop
push
addr16
dec
orb
cld
movq
jecxz
inc
js
pushf
daa
cwtl
cmp
das
pop
ds
scas
xorl
jmp
cmp
repnz
insl
mov
fisubrl
rol
sub
and
cmp
and
and
mov
imul
cmp
dec
test
pop
cmp
jle
fsubrs
loop
push
mov
cmp
pop
cwtl
lret
fcmovu
sbb
stos
cmp
push
aad
fstpl
aad
sbb
cld
lahf
cltd
cltd
dec
sti
dec
ljmp
imul
test
lds
adc
movsl
hlt
push
insl
dec
stos
sarl
add
fstps
call
les
scas
push
inc
sub
push
roll
adc
insb
add
test
pusha
jmp
pusha
cltd
ja
pop
aam
das
mov
lea
out
sbb
pop
shlb
shr
jbe
movsl
jnp
mov
addl
xor
pop
addr16
push
dec
pop
add
testb
mov
cmp
jle
mov
sbb
les
lret
mov
mov
arpl
popa
aad
out
pushf
inc
xchg
jmp
add
xchg
mov
fsubs
clc
xor
out
into
sarl
xchg
dec
xchg
aas
push
add
sub
data16
mov
imul
into
fmull
aam
xchg
jno
adc
cmp
outsl
hlt
test
cli
movsl
jge
jl
xchg
mov
ss
imulb
jno
cmp
inc
sbb
sub
test
pop
mov
inc
push
js
outsb
mov
ds
push
dec
mov
mov
and
xor
xchg
cmpsl
xchg
jbe
adc
in
xor
mov
push
fsts
insb
jbe
push
xchg
stos
cmp
sub
pop
xchg
pop
lahf
or
mov
in
lret
das
adc
inc
call
push
xor
push
ss
shll
sub
pop
outsl
outsl
int
loopne
loop
adc
and
sub
sahf
insl
in
jbe
pop
pop
jmp
adc
jl
xchg
push
mov
ljmp
mov
in
push
xchg
dec
pop
inc
and
ljmp
out
addb
inc
popa
rclb
out
sbb
lcall
sbb
loope
jo
xor
adc
pop
mov
or
nop
cmp
jg
pop
mov
cmp
inc
cmpsb
roll
sub
xor
mov
pop
xchg
lret
sub
inc
lea
sub
or
lods
push
dec
push
ja
or
and
stos
cmp
mov
sbb
outsb
push
mov
sbb
fsubrs
mov
pop
add
inc
push
pusha
adc
dec
inc
xor
jle
movsl
mov
push
jo
xor
arpl
jne
fists
loopne
incb
xchg
rclb
popf
mov
push
lcall
xchg
mov
lcall
xchg
and
fsubrs
je
jge
cmp
sbb
xchg
iret
inc
lret
dec
into
ja
mov
dec
movsl
adc
loop
adc
shll
shll
lods
push
jnp
ret
fidivs
test
mov
gs
cmp
movsl
jl
inc
xor
and
adc
sub
daa
fisubs
leave
sbb
data16
dec
or
mov
sahf
jno
add
adc
cmp
call
jle
imul
clc
hlt
jmp
mov
cli
inc
mov
shlb
lret
addr16
mov
outsl
gs
sub
jecxz
push
repnz
shl
xlat
out
dec
aas
mov
movsl
out
ja
ss
inc
push
loope
xor
rclb
cmp
repnz
xchg
lahf
rol
popa
cltd
mov
push
jp
cmpsl
arpl
pop
push
mov
add
jl
sub
mov
test
outsl
cld
jbe
repnz
imul
repnz
into
mov
mov
cmp
ljmp
shll
push
int3
movsb
bound
inc
data16
in
jp
xor
or
pop
mov
inc
jns
push
cli
ds
insl
cli
insl
jecxz
pop
loopne
popf
dec
xor
fucomi
and
jae
ss
loopne
cmp
imul
add
and
jno
mov
xchg
into
sbbl
cmp
xchg
push
sarl
xchg
aam
and
fs
loop
lea
inc
xchg
push
jp
cltd
inc
cwtl
cltd
iret
jnp
fstpl
xchg
mov
pop
repz
jg
jmp
mov
fnstcw
pushf
jno
lahf
into
inc
stos
ljmp
xchg
push
xor
inc
push
in
or
or
adc
mov
mov
pop
xchg
sub
stc
xchg
and
loopne
jno
add
mov
test
int3
pop
xchg
inc
loopne
jne
jmp
sti
in
mov
not
xchg
sub
cltd
adc
pop
pop
call
imul
push
pop
fs
int
ret
mov
lret
sti
notl
stos
mov
or
sub
insb
inc
ss
inc
pop
sub
pop
icebp
xor
insl
inc
repnz
or
lods
pop
xchg
mov
adc
push
stc
in
jbe
dec
pop
imul
mov
cmp
xchg
imul
or
add
xor
pop
pop
xchg
mov
packsswb
idivb
fsubrs
scas
test
sarb
cmp
sbb
mov
loopne
cmpsb
rorl
cmc
int
add
icebp
fdivrl
xor
ret
fsubl
sbb
inc
mov
xor
mov
dec
call
pop
cmp
mov
rol
sbbb
sub
cmpsl
jno
mov
iret
jl
aad
xor
leave
pusha
dec
std
dec
push
cmp
xchg
push
xor
sti
loope
ficomps
xor
stc
fcmove
fldl
xchg
xchg
or
leave
aam
cmp
loop
jae
testb
inc
push
mov
mov
mov
adc
lahf
insb
inc
jnp
cltd
adc
mov
scas
cmp
ret
int3
test
xor
and
push
negb
movsl
sar
inc
jbe,pn
mov
lds
divb
dec
ds
xor
xchg
or
adc
cwtl
push
call
rolb
sbb
xchg
cmpsl
in
rorl
jnp
lods
in
out
cmp
inc
in
iret
push
jae
out
cld
mov
fchs
xchg
mov
sbb
inc
mov
cmp
jnp
or
push
stc
iret
bound
imul
adc
sub
repnz
cmp
jecxz
repnz
mov
andb
clc
jnp
add
outsb
cmp
jbe
js
mov
add
repz
jp
xor
dec
add
push
mov
add
jmp
dec
cmpsb
or
loopne
cltd
cmp
lahf
inc
rclb
inc
sub
xchg
in
jecxz
xlat
xor
jae,pn
mov
xorb
pushf
sbb
mov
mov
add
lret
xchg
fsubr
movsb
xor
and
inc
xorl
cltd
insb
je
scas
fcom
in
pop
cmp
loopnew
sbb
xchg
stc
lds
lea
int
call
fcomps
stos
iret
aam
and
pop
add
ss
cli
lods
sbb
imul
subl
inc
shl
es
or
xor
clc
or
outsl
bound
fmuls
cmp
jge
scas
mov
mov
mov
xchg
sbb
sbb
pop
adc
fiaddl
pop
movsb
jae
adc
clc
mov
loop
xor
adc
jne
or
pop
sub
popa
imul
fwait
sbb
pop
jne
dec
jmp
shl
jg
mov
sub
pop
xor
jno
mov
repz
mov
jae
dec
push
imul
decb
jecxz
in
jmp
bound
pop
fs
xor
clc
int
push
sbb
mov
rcll
inc
cmpsb
outsl
add
arpl
pop
fisttps
and
dec
test
loopne
pop
jp
aas
pop
aaa
xchg
push
out
jp
jge
daa
mov
jb
push
sbb
jb
ret
push
sbb
jmp
ret
mov
pop
mov
aas
jecxz
push
addr16
mov
jae
mov
jle
cmpsl
xor
push
lods
outsb
repz
jecxz
leave
sub
call
addb
xchg
scas
iret
scas
jno
in
inc
mul
cmpsb
loop
xchg
std
dec
fdivrl
or
sub
add
lods
cmpsl
jo
adc
movsl
mov
shrl
and
sub
ret
sqrtps
push
and
jmp
mov
jnp
les
std
jmp
lret
jno
or
incb
aam
mov
push
sub
jg
mov
sub
add
add
jb
pop
sub
xor
imul
push
cwtl
scas
gs
dec
pop
xor
and
stc
out
in
out
adc
pop
cld
cs
call
push
enter
xor
add
inc
test
hlt
call
fists
aam
mov
mov
subl
inc
mov
xlat
jle
sbb
mov
push
push
or
mov
push
sub
popf
negb
sub
cmpsl
mov
aam
mov
loope
mov
dec
xchg
addr16
jno
icebp
aaa
ljmp
mov
dec
xor
xchg
bnd
icebp
in
insl
push
pop
pop
dec
xchg
mov
xchg
movb
insb
mov
xchg
pusha
inc
and
insl
cwtl
xchg
dec
or
jne
movsb
inc
popa
add
je
nop
cld
xor
call
insl
fs
xchg
std
divb
jne
jg
mov
fldcw
xchg
xchg
lea
int
sbb
pop
adc
scas
fs
mov
xchg
jae,pt
push
dec
xor
into
adc
ret
xchg
and
mov
sub
pop
sub
mov
add
ljmp
in
sbb
adc
mov
jecxz
jp
mov
xor
mov
push
adc
test
js
scas
test
mov
test
xchg
mov
or
pop
mov
repz
jmp
sub
mov
shrb
jmp
mov
pop
xorl
scas
and
cmp
idivl
out
xor
into
jecxz
jg
scas
nop
xchg
hlt
mov
dec
push
push
mov
or
pop
scas
jno
inc
out
addr16
out
cmovo
inc
add
cmp
lods
ret
cmp
push
fisttpl
cmp
pop
push
pop
lret
jmp
sbb
push
sti
lret
imul
mov
cmp
jb
mov
push
inc
jp
ja
mov
mov
inc
cmp
dec
mov
or
push
jb
inc
pushf
xchg
adc
scas
mull
lret
lods
mov
js
ljmp
movsl
mov
sarl
icebp
ss
fs
add
mov
pop
and
leave
inc
cmpl
fcmovu
lock
jbe
daa
jbe
jg
hlt
filds
xchg
or
cmp
xchg
popf
and
lods
pop
int3
nop
outsl
mov
or
add
and
dec
push
into
mov
pop
sub
js
add
imul
xor
test
pop
cltd
sub
mov
ljmp
test
push
mov
pop
fidivl
inc
and
adc
mov
sti
or
jbe
adc
das
into
push
pop
aad
and
push
mov
roll
jno,pn
jne
test
mov
pop
add
mov
inc
daa
sarl
insb
adc
sub
lock
cmc
int
lret
andb
fimuls
push
out
sub
repz
xor
out
sub
dec
iret
mov
pop
data16
test
xchg
xor
lods
sbb
pushf
adc
pushf
fadds
mov
jb
bound
iret
and
cltd
fcomps
and
lea
xchg
repnz
lock
mov
call
popf
mov
pop
mov
js
jns
cmpb
or
xchg
or
add
and
in
lods
pop
push
into
dec
mov
add
fildl
xorl
popa
add
mov
scas
int
scas
scas
cmp
cs
clc
lret
fisubl
sbb
in
fdiv
push
fstps
arpl
bound
adc
and
add
adc
sub
jb
stc
stos
movl
xorb
or
les
xchg
jl
sub
outsl
inc
repz
bound
mov
iret
dec
push
addb
mov
sbb
mov
dec
mov
bound
mov
sub
cmp
aam
cmp
jecxz
es
fstpl
insl
mov
jmp
addl
xorl
mov
dec
bound
ret
inc
add
mov
mov
arpl
call
push
xchg
mov
mov
ja
nop
out
paddw
clc
jecxz
add
ja
test
add
mov
xorb
mov
adc
jle
lahf
mov
jmp
pop
mov
inc
inc
fistpl
jbe
enter
aas
int
push
int3
data16
in
pusha
sbbb
sub
nop
push
xor
rol
add
adc
cmp
pop
sub
jmp
mov
xor
int
outsl
js
cmp
push
cmp
daa
scas
cmp
bound
arpl
jae
lahf
adcl
cwtl
cli
shrb
fstl
and
jne
in
arpl
insb
push
loopne
std
jle
ficoms
outsb
aas
mov
cmp
lock
fnsave
xor
data16
push
jmp
mov
loopne
outsl
les
dec
je
faddp
out
stos
in
or
xor
fnop
pop
mull
rolb
lahf
sub
repz
arpl
sub
mov
data16
cmp
xorl
lods
out
out
push
push
popa
leave
push
push
jg
push
fwait
popa
push
mov
cmp
mov
call
cmp
fwait
popa
mov
movsb
scas
cmp
imul
adc
add
shll
push
enter
fcomps
xchg
in
movsb
push
fs
gs
xor
jno
out
push
adc
test
cld
and
arpl
out
adc
inc
mov
in
shlb
mov
outsl
cmp
fidivs
sub
push
xor
ss
jo
pop
push
lods
push
cli
mov
pop
mov
insb
or
mov
cmp
add
sub
pop
cmp
or
cmpsl
int3
jne
mov
rep
push
add
repnz
les
bsr
mul
jno
enter
mov
negb
lret
mov
mov
xor
dec
xor
xchg
jnp
inc
sbb
pop
xorl
xchg
stos
xchg
iret
jno
and
push
mov
fscale
xchg
lock
repnz
lods
mov
nop
mov
add
cwtl
leave
les
ret
cmp
jnp
imul
xor
pop
cmpsb
mov
push
jge
aas
mov
movsb
stos
xor
lahf
ja
aaa
pop
out
jecxz
int3
daa
aaa
adc
test
xor
divb
push
mov
jno
shrb
jecxz
cmpsb
mov
jne
xor
cmp
iret
outsl
push
imul
mov
data16
loope
fadds
shlb
add
inc
loop
mov
mov
xchg
aam
cmpsb
pop
insl
add
push
xchg
std
or
rcll
mov
mov
data16
fs
sbb
in
fdiv
pop
ss
test
je
and
cli
mov
mov
xor
jl
mov
dec
fdivrl
lcall
inc
scas
addr16
xchg
int3
sarb
movsl
add
les
dec
jb
xchg
mov
stc
lds
xchg
xchg
nop
jb
jns
into
jne
mov
sbb
scas
jle
clc
in
loope
cmp
lods
cmp
mov
mov
inc
pusha
mov
ret
call
and
ret
dec
in
and
das
mov
add
test
aad
mov
sti
out
adc
stc
gs
and
inc
into
scas
xor
rcrb
repz
outsb
and
adc
repnz
aam
mov
sub
fwait
push
sbb
jle
pop
pop
scas
insl
loop
bound
mov
xchg
in
sbbb
mov
sbb
insb
jne
jo
xchg
inc
xchg
sbb
loope
cmp
insl
bound
mov
or
stos
int3
faddp
xchg
push
shlb
add
fnstsw
out
movsb
jmp
sub
sbb
dec
push
fwait
ret
pop
mov
outsb
xchg
idivl
mov
imul
mov
cli
mov
aad
dec
xlat
cwtl
jg
xchg
loope
push
adc
xchg
aaa
je,pn
mov
test
jno
fisubrl
cmp
lods
lret
mov
jo
jp
push
jmp
aam
clc
adc
sub
aam
inc
dec
nop
xchg
ret
movsl
bound
js
jmp
push
out
mov
add
add
popa
mov
les
jge
loop
pop
lds
or
bound
mov
mov
sti
les
lock
mov
lds
sub
xchg
jge
add
test
sub
lods
jle
pop
sub
push
dec
add
rcll
test
movsl
outsl
ret
sbb
adc
and
pop
mov
mov
cmp
popa
frstor
add
andb
jp
fcomp
negl
add
out
mov
mov
in
mov
pop
xor
jno
adc
sbb
insl
xor
or
jbe
fildl
mov
jmp
push
add
add
push
test
jge
mov
sahf
scas
movsb
adc
jb
cmp
mov
cmp
add
mov
dec
lods
mov
nop
pmaxub
or
mov
push
bound
in
stc
jbe
adc
repnz
cmp
andl
call
mov
push
stc
xlat
sub
lds
int3
cltd
dec
pop
les
jne
sub
mov
sbb
icebp
ficoml
push
or
xor
jp
ss
xchg
mov
xchg
popf
and
xchg
mov
test
sub
dec
mov
dec
push
mov
mov
push
sbb
sti
mov
and
sarl
mov
add
cld
sbb
mov
jle
and
sbb
mov
aas
sbbb
xchg
xor
mov
dec
rcrl
xor
fnsave
ret
jge
sbb
cmpsl
add
xchg
xchg
lds
lret
cmp
faddl
push
es
inc
xor
jne
movsb
out
mov
mov
pop
sub
sub
xorb
andb
adc
pop
cmp
lock
inc
scas
pusha
sub
fidivs
jp
sub
icebp
or
sarl
in
jmp
fidivs
xchg
sbb
ret
dec
push
clc
in
ret
ret
inc
ret
and
leave
jg
popa
enter
inc
add
sbb
rcr
iret
add
mov
mov
int
sub
pop
xchg
fimuls
inc
mov
cltd
pop
loopne
sbb
xlat
inc
inc
fcoml
decb
pop
adc
or
sbb
das
shll
sub
ror
adc
or
pop
bound
ja
outsb
jl
xlat
mov
insb
fdiv
dec
sti
sbb
pusha
xor
std
cmc
add
add
mov
xchg
stos
bound
movhps
push
jae
add
or
in
popf
jb
and
xchg
pop
lods
pop
jb
push
mov
add
sub
jge
out
aam
pushf
fs
push
fnsave
adc
pop
push
sub
push
fcomps
pop
and
sti
xchg
int3
sbb
jns
shlb
int
dec
cmc
fcomip
test
push
and
cmp
jmp
dec
xchg
cmpsb
int3
mov
push
inc
jbe
jl
sarb
outsb
sub
cmp
je
rol
xchg
mov
mov
xlat
rcrb
or
cmp
or
xchg
push
or
ffreep
cmp
mov
and
lds
test
cmp
jle
add
mov
push
movsl
push
ljmp
gs
popl
inc
pop
in
jno
jae
fsubs
mov
push
push
cmp
xor
add
andl
pop
dec
pop
repz
push
xchg
sub
add
jg
pop
jae
bnd
in
xchg
loope
add
rcr
int
mov
in
es
jp
push
cmp
in
aas
addr16
xchg
mov
sbb
ljmp
and
stos
pop
mov
pop
inc
inc
inc
xchg
repz
rcrl
ds
mov
out
nop
cmp
loop
stos
ljmp
sbb
or
mov
fisubl
std
cmpb
out
fldt
pop
mov
push
icebp
ljmp
xchg
mov
cmp
fisttpll
aaa
lds
xlat
sahf
cwtl
insl
sbb
inc
sbb
test
out
jp
inc
std
jbe
aad
out
loop
cwtd
push
and
fucom
popa
mov
push
sti
cltd
xchg
fistpl
pushf
cs
lret
in
add
orl
dec
jo
mov
sbbb
cmp
cld
lds
rolb
ficoml
xor
push
sti
mov
jae
out
inc
aas
jl
loope
or
push
dec
jl
pop
shlb
mov
mov
pop
popa
xor
push
or
sbb
repnz
jge
and
stc
xor
cmpsb
fdivrl
and
push
and
sbb
xor
push
fimull
mov
call
fdivrs
xchg
jp
test
pop
push
add
push
ljmpw
in
sahf
adc
jb
push
dec
mov
or
inc
mov
jno
aad
and
jmp
sbb
xchg
les
mov
sarb
jns
inc
mov
jmp
clc
dec
test
mov
jmp
xchg
sti
insb
popf
mov
pusha
popf
mov
mov
and
adc
cmp
xchg
std
mov
mov
scas
in
out
inc
int
lea
push
dec
pop
sbb
jnp
adc
dec
sbb
push
pushf
xor
outsl
push
pop
jle
imul
add
rcrl
sar
scas
push
call
fstpt
jns
dec
cmp
rcrb
pop
pop
push
decb
adc
shll
repz
mov
sarb
mov
repnz
mov
jle
add
mov
jns
jnp
adc
insb
sahf
sbb
xchg
jns
pop
test
test
dec
mov
pop
stos
mov
push
aad
xchg
mov
andb
add
aad
add
and
faddl
cmpsb
sub
mov
xor
loopne
inc
cmp
dec
cmp
sbb
xlat
jb
inc
sub
xor
adc
leave
and
sbb
cwtl
add
mov
sub
je
ss
outsl
inc
pop
jne
sub
and
fcoms
fsubs
ljmp
sbb
mov
stc
insb
pop
sbb
sti
cmp
shl
pop
call
mov
sbbl
rclb
cmp
xor
inc
or
addr16
psubsw
pop
sbb
or
xchg
and
pop
lret
adc
test
and
fisubrs
push
ret
jbe
in
cmp
push
mov
mov
loop
sahf
or
mov
aad
or
mov
adc
or
xchg
inc
addl
subl
sbb
popa
cmp
adc
dec
sub
fxch
stos
std
out
dec
nop
cmp
mov
jo
sbb
sub
loope
push
jmp
cmpsl
mov
dec
sub
clc
aad
cld
push
out
xchg
idivl
xchg
mov
lret
sub
cs
push
mov
xor
movsl
mov
in
scas
hlt
jl
shlb
adc
lret
scas
push
mov
repz
mov
call
inc
pop
cwtl
into
aaa
scas
or
cld
push
test
insl
cmpsb
popa
jg
decb
int3
pop
inc
mov
or
aam
pusha
test
or
aaa
int3
scas
cmpsl
repz
out
stos
fstps
stc
ss
arpl
mov
push
popf
aaa
shll
and
pop
pop
and
push
xchg
fstl
dec
jno
push
sbb
loopne
xor
daa
push
lcall
rorl
pop
insl
or
jg
imul
ds
push
stc
scas
add
into
pop
negl
jno
lods
out
or
ret
push
cwtl
test
ja
cmp
inc
sbb
add
enter
mov
push
daa
outsb
sbb
inc
add
cmpsb
xchg
stos
inc
push
push
xchg
adc
cwtl
arpl
cmp
leave
jno
aas
and
popa
fisttpl
add
xchg
dec
ror
xor
sub
add
test
sbb
dec
loope
loop
pop
sub
xor
pop
add
xlat
out
sahf
aas
out
sahf
pop
out
jge
push
xchg
xor
test
push
mov
cld
xor
xchg
in
loope
xchg
mov
inc
aad
jno
mov
xor
popa
jbe
adc
pop
cmc
sbb
jae
popf
jp
inc
mov
pop
jmp
repz
mov
shl
xchg
les
push
xor
mov
leave
insl
push
std
pop
test
lds
ret
push
inc
mov
cs
and
fstpl
decl
mov
mov
lahf
push
inc
cwtl
dec
sub
mov
shr
test
mov
movzwl
mov
pop
in
js
fadds
xor
fnstsw
fs
mov
fidivs
out
clc
jno
mov
mov
lahf
jo
sub
aaa
addr16
xchg
inc
addr16
push
mov
or
adc
shl
inc
iret
dec
add
das
xchg
nop
pop
dec
stos
xchg
inc
movsb
push
outsb
jae
aad
sbb
mov
call
int3
into
cmp
loope
ljmp
je
or
outsl
and
sub
mov
movsl
negb
xor
hlt
es
iret
mov
in
repnz
jl
iret
xchg
mov
xor
adc
jecxz
jno
push
cmp
pushf
add
sub
js
push
cmpsl
mov
es
jbe
or
xchg
out
mov
dec
movsb
and
jge
xor
inc
into
inc
mov
mov
pop
call
mov
mov
clc
jmp
pop
aam
mov
clc
add
sbb
xorl
adc
rclb
mov
fsubrs
rcl
scas
jle
fucomi
out
adc
sbb
mov
ret
fdivr
jnp
aam
addr16
cmp
lret
iret
das
bnd
in
xor
dec
pop
dec
loope
gs
cmc
push
mov
adc
mov
push
ljmp
daa
aaa
fcoms
jno
jo
loop
push
jl
adc
jmp
sub
in
mov
push
dec
aad
xchg
aad
add
icebp
ret
add
cmp
stos
ret
lahf
jno
stos
or
outsb
jae
pop
movsb
jle
jnp
sti
jb
sbb
aad
ds
fstpl
in
mov
sub
js
mov
and
es
pop
js
sti
lahf
cltd
add
mov
xchg
pusha
and
mov
jl
fcmovnu
sbb
popf
cs
lret
xor
cmpsl
mov
xor
imul
pusha
js
jo
pop
sarl
rolb
pop
pop
std
decb
lods
loope
outsb
cld
jae
jp,pn
repnz
sub
cmc
pusha
mov
outsl
rcr
nop
mov
gs
pop
popa
into
mov
sti
stos
cs
lret
stc
fisubrl
test
lods
scas
mov
or
jns
push
or
aas
mov
or
jecxz
divb
or
jae
inc
sbb
jg
pop
rcll
cmpsb
lds
sarb
jbe
aas
xor
lret
push
and
xchg
dec
adc
push
filds
mov
push
push
mov
pop
aas
push
jle
push
mov
scas
mov
cmc
xlat
lods
scas
dec
es
inc
jae
test
into
inc
sti
xor
jae
or
mov
ret
mov
push
jp
adc
mov
fsubrp
and
xor
movsl
sbbb
scas
lock
ret
xor
xor
or
rclb
pop
addr16
dec
repz
or
mov
int
add
xchg
pop
add
das
in
cmp
dec
add
ja
loopne
repz
into
mov
out
cmp
push
scas
push
int
shlb
test
lahf
and
gs
icebp
rclb
xchg
mov
daa
jg
test
jo
push
xchg
mov
sub
and
clc
add
dec
imul
call
call
stc
lock
insb
cmp
mov
data16
or
xor
sbbl
dec
scas
fcmovnbe
sub
hlt
cs
insl
mov
push
adc
and
int3
fdivl
mov
add
popa
xchg
jmp
and
mov
adc
loope
pop
ss
pop
inc
or
das
pop
repnz
sbb
shrl
push
xchg
jl
fcomps
cmp
pop
loopne
inc
add
adc
lret
in
ret
jnp
jl
es
idivb
cmp
lea
adc
sbb
ss
push
shlb
jmp
add
sub
xor
leave
sbb
mov
push
and
jge
jmp
cltd
sub
lods
pop
aad
jb
mov
pop
cmp
imul
rcll
test
mov
mov
iret
cmpsl
std
iret
xor
pop
out
andl
push
pop
in
and
mov
mov
xor
and
pop
dec
int
das
fsubl
mov
fwait
rolb
daa
xchg
stc
add
jg
scas
sbb
push
adc
sbb
jae
jmp
sub
fcmovnb
outsl
mov
pop
jmp
jge
rcl
mov
sti
and
repnz
nop
lcall
and
lods
mov
or
test
aas
je
add
push
sub
sub
es
mov
mov
lds
lahf
int
movsl
xchg
inc
and
sahf
sti
int3
add
pop
pop
jno
lock
push
clc
outsl
pop
sbbl
pushl
scas
out
das
gs
dec
and
dec
inc
ljmp
sub
lret
pop
jnp
fs
xchg
ljmp
jge
pop
push
xlat
jle
or
stos
pop
jnp
imulb
sbb
push
out
das
mov
push
test
xchg
dec
stc
in
in
leave
cmp
daa
and
lods
mov
out
clc
dec
sub
loop,pt
test
jo
inc
mov
and
out
inc
xchg
out
in
push
insl
lret
jb
hlt
jp
adc
repz
push
jae
imul
push
cltd
dec
inc
mov
adc
dec
jg
or
sub
pusha
jecxz
xor
ficoml
shl
inc
fwait
test
pusha
mov
dec
jp
aam
push
test
add
push
hlt
push
push
sbb
cli
xor
mov
push
shlb
cs
cmp
mov
imul
mov
imul
outsl
loop
fnsave
xor
xor
aad
mov
xlat
out
jle
push
or
jg
sbb
xor
in
cmc
add
xchg
lcallw
inc
jg
xor
inc
lea
push
popf
and
mov
ds
js
imul
dec
fldcw
stc
sbb
leave
and
mov
lcall
xchg
mov
sub
je
cmp
mov
jbe
mov
sbb
or
lcall
adc
inc
mov
xor
lahf
in
das
cmp
fldl
jl
scas
out
mov
xchg
mov
arpl
sub
mov
hlt
inc
dec
ds
jmp
shll
inc
cmp
mov
fstp
daa
movsl
cmp
imulb
addr16
inc
mov
aam
outsl
jns
add
mov
mov
cld
cmp
jl
adc
xor
and
int3
sbb
mov
addr16
lods
adc
popa
pushf
movsl
jg
popf
fs
in
push
int3
fs
repz
inc
stos
cltd
ret
push
jle
push
add
mov
adc
lret
sbb
fs
pop
hlt
push
pop
imul
es
test
pop
cmpsb
bound
ret
inc
popa
call
inc
inc
xor
push
ds
cmp
xchg
decl
scas
je
cmovae
jae
mov
enter
js
sub
xor
hlt
push
std
and
fcomps
pop
out
and
pop
fwait
pop
push
push
das
jg
pusha
jae
and
add
push
mov
repnz
or
mov
je
cmp
xor
fdivs
cmp
out
pop
cltd
push
or
cmp
inc
push
cmpsb
jg
lret
pop
sbb
lock
insl
lods
in
push
inc
xchg
jae
notl
cmp
pop
mov
pushf
into
pop
testb
or
dec
dec
fs
jo
mov
imul
mov
lock
xor
xchg
das
lock
into
or
outsb
in
ss
jl
inc
scas
dec
cs
lds
test
stos
adc
adc
fstps
xchg
mov
push
popa
rcrb
ret
cwtl
jb
sub
nop
pop
adc
inc
cmp
mov
icebp
cli
dec
xchg
adc
dec
aaa
mulb
popf
mov
cmp
enter
adc
mov
push
dec
out
cld
xchg
or
or
orl
imul
daa
lret
sahf
das
call
pop
int3
std
stos
push
adc
fdivp
fistpll
jmp
lea
fs
outsb
inc
mov
jae
pop
aam
pop
aaa
adc
dec
fs
or
fcom
mov
out
aam
jp
sbb
adcb
inc
popa
dec
mov
scas
adc
out
test
xchg
pop
cmp
leave
xchg
insb
cmp
and
ja
in
movb
adc
pop
lds
imul
fistps
push
or
push
and
addr16
xchg
adc
dec
les
cli
mov
and
psrad
inc
adc
fdivrs
jae
add
xor
sub
jmp
push
jecxz
dec
icebp
inc
pop
lods
das
jge
sub
das
mov
mov
mov
imul
mov
je
push
cmc
mov
mov
cmp
mulb
lods
inc
mov
stos
mov
aas
aaa
xchg
push
adc
mov
dec
fistps
mov
test
decb
lcall
js
pop
mov
outsb
sbb
subb
adc
xor
push
mov
xchg
orl
push
lds
dec
sub
jb
mov
mov
ja
xor
xchg
mov
push
inc
add
insb
push
mov
mov
mov
mov
dec
std
gs
pop
mov
xchg
and
mov
and
daa
jle
dec
mov
aam
sbb
sahf
fisttps
jge
push
dec
fcompl
push
aas
rcr
mov
dec
addr16
pop
rorl
sbb
jbe
mov
aas
subb
dec
mov
mov
daa
sub
xor
push
or
and
mov
mov
scas
xchg
mov
fs
xchg
pop
int
xor
imul
jnp
lret
mov
pop
addr16
sub
ds
dec
clc
or
sub
rorl
cmp
pop
sbb
fdivrl
push
dec
imul
dec
jbe
inc
mov
adcl
add
add
pop
addb
ret
int
pop
rol
insl
rcrl
stos
bound
xchg
inc
fdiv
mov
push
dec
fwait
inc
out
inc
mov
inc
or
cmp
loopne
or
enter
xor
arpl
jae
aaa
sub
test
jecxz
lock
lcall
inc
adc
loop
adc
xor
sub
xor
pop
pop
mov
sub
xchg
outsb
add
sub
lods
arpl
jle
cmc
xchg
out
sub
pusha
jl
pop
nop
int
aaa
popa
loop
cmp
push
add
cmp
ljmp
pop
mov
pop
iret
andl
hlt
mov
mov
inc
dec
cmp
shlb
stos
lods
add
inc
test
adc
cmpsl
inc
xlat
push
repnz
pop
xchg
jne
xor
mov
cwtl
and
pop
lods
gs
ss
push
data16
mov
movsl
mov
xchg
xor
packssdw
xor
add
mov
imul
xchg
cmpsb
inc
mov
mov
int
jo
fisubs
fwait
cwtl
xchg
flds
cmpsl
push
ret
test
outsl
daa
insl
mov
cmp
daa
mov
ret
push
mov
enter
or
loopne
sti
lret
jl
decb
cli
or
pop
sub
lret
out
out
cmp
dec
and
imul
xchg
add
insb
mov
loop
filds
fucomi
rcr
jo
pushf
rol
arpl
cmpsb
js
lock
lock
rcrb
add
dec
lahf
push
std
or
add
and
neg
enter
fstl
mov
and
daa
mov
adc
call
jge
test
lds
sbb
out
outsb
push
jmp
rcr
js
pushf
inc
in
dec
mov
out
adc
push
push
jae
push
in
mov
dec
push
lcall
jg
fstps
stos
cld
push
dec
in
scas
xchg
and
imull
repz
test
rorb
icebp
add
out
test
inc
sbb
out
mov
jl
iret
push
ljmp
lret
shrl
and
rcrl
mov
add
cmp
pop
stos
fcmovb
push
lahf
sub
mov
dec
fcoml
scas
inc
cmc
jmp
sub
out
cmp
je
std
sub
repz
in
les
push
push
imulb
jb
sub
jl
pop
sarb
cmp
add
adcb
sub
in
jl
in
aad
aam
or
rolb
mov
in
mov
lods
jne
cmpl
cld
fs
pop
sbb
icebp
and
mov
xorb
std
ljmp
out
mov
fildll
inc
nop
push
fisttpll
adc
mov
out
mov
rclb
adc
mov
test
jb
orl
shlb
dec
test
mov
and
cmp
insl
push
out
mov
jae
cmp
inc
sub
push
mov
loop
sub
dec
jg
sbb
cltd
inc
out
jbe
orb
mov
sbb
dec
hlt
lock
aas
test
pop
push
aaa
cmp
daa
add
fiaddl
inc
call
lret
cltd
cmp
push
adc
mov
and
int3
fisttpll
pushf
data16
movsw
and
mov
mov
enter
mov
sub
imulb
inc
mov
xchg
fs
push
stos
push
popa
adc
out
fldl
sbb
mov
lds
or
jnp
in
push
jno
xor
das
add
mov
cmp
cmp
dec
cmp
inc
lcall
fldenv
or
dec
jb
hlt
pop
sub
outsb
inc
lcall
dec
sbb
call
mov
mov
iret
in
ficoms
adc
jecxz
in
addr16
nop
ret
into
pop
xor
std
negb
out
mov
orb
jl
hlt
add
xor
fwait
aas
aad
mov
fcoms
test
mov
jecxz
jnp
or
fistpll
je
xchg
fwait
and
das
inc
or
mov
jmp
pop
icebp
push
repnz
icebp
shlb
pop
sub
and
push
jnp
in
repz
or
push
xor
dec
add
out
scas
sarb
and
shl
clc
nop
in
jg
mov
ljmp
mov
repnz
push
in
lahf
mov
sbb
rorl
pop
cmp
and
jnp
mov
out
lcall
push
mov
push
jnp
push
dec
xchg
test
into
cmp
add
addb
xchg
aad
xchg
jecxz
test
push
xchg
lcall
dec
enter
bound
addb
sub
sbb
movsb
cltd
std
call
stos
cmpsb
popf
fsin
sub
pop
stos
cmpb
sbb
andb
or
mov
ds
mov
imul
ja
pop
jo
mov
sub
lock
inc
int3
push
les
or
inc
xlat
pushf
shll
xor
push
mov
test
mov
fwait
lcall
std
xchg
test
pop
sub
mov
cmp
fnstcw
test
mov
cmpsb
fnstenv
or
dec
pop
pop
or
ljmp
hlt
jecxz
sub
xchg
in
xchg
xchg
add
lret
sub
push
inc
daa
imul
in
adc
jecxz
and
into
aaa
dec
in
push
jno
add
dec
cmpsl
addr16
iret
pop
mov
fadds
aaa
xor
adc
jp
scas
and
out
ljmp
push
clc
faddl
scas
jb
movd
mov
adc
push
jle
popf
jne
aaa
push
nop
xchg
xor
xchg
orb
adc
cwtl
cwtl
movsb
adc
xchg
inc
pusha
stos
dec
push
push
movsl
adc
mov
xor
xchg
das
outsl
idivb
or
push
mov
in
ret
mov
jl
inc
jne
imul
push
cli
ja
mov
add
push
or
daa
adc
sub
lds
shl
jp
sub
jg
jae
dec
mov
xor
xor
int
imul
arpl
mul
adc
mov
pop
inc
in
out
pusha
lock
sub
movsb
ret
in
cmp
jp
lods
dec
stc
cmp
lcall
pop
lea
pop
aaa
js
cmc
loop
and
dec
test
push
shll
dec
cld
cmp
push
mov
xchg
fnstsw
les
scas
arpl
pop
mov
pushf
clc
cltd
sbb
jb
xchg
mov
push
mov
mov
ss
xchg
fwait
mov
dec
mov
lock
and
sbb
ja
lcall
stos
jge
or
test
and
loop
rclb
cmp
pop
loop
imul
mov
or
sar
dec
iret
mov
cmp
xchg
fidivrl
xor
dec
jae
out
inc
aas
xchg
lods
outsb
inc
sub
mov
adc
rclb
mov
cmpsl
mov
rcl
mov
cltd
loop
pusha
jg
fdivr
mov
movsb
je
scas
mov
sub
imul
idiv
or
xlat
and
lock
lea
ja
sub
and
xor
jg
jge
cmp
movsb
stos
add
cmp
imul
iret
adc
add
sarb
sbb
pop
out
inc
fstpt
std
sub
out
xchg
aad
pop
out
in
insl
dec
mov
aaa
add
and
cs
pop
into
cmpsl
adc
notb
decb
iret
sub
xor
cwtl
pop
and
push
je
xchg
mov
lcall
inc
fnstenv
lret
add
mov
roll
pop
addl
daa
sti
mov
inc
std
ficoml
mov
loop
adc
sub
and
pcmpeqd
or
loop
repz
sahf
fwait
mov
push
and
pushf
gs
mov
int3
pop
ljmp
cld
loop
call
or
dec
mov
adc
test
test
sbb
pop
mov
add
xchg
fidivl
mov
xchg
call
imul
and
outsl
or
jns
lahf
leave
imul
frstor
jne
xchg
pop
add
jmp
stc
cmp
push
mov
imul
dec
scas
xor
dec
sarb
sbb
adcl
in
jle
pop
cmp
std
pushf
out
jp
outsl
icebp
cmp
cwtl
dec
jae
and
sub
fsts
ja
mov
inc
ret
and
aad
add
xor
mov
cwtl
cmp
fidivrs
mov
orb
push
in
icebp
jp
cmp
sbb
aad
pop
sbb
ds
mov
mov
ja
add
lahf
push
jecxz
gs
or
pop
xchg
xchg
xchg
mov
rorb
into
jmp
jl
fidivrs
jge
inc
mov
push
lock
scas
sti
gs
sbb
sbb
cmpsb
pop
imul
jae
icebp
fldl
jecxz
ljmp
add
cli
and
adc
mov
push
push
ja
mov
or
rorb
outsb
cmc
or
icebp
mov
push
xchg
das
xchg
int3
lahf
in
js
sub
dec
out
jbe
sbb
rcll
test
mov
setnp
adc
cmp
aam
ljmp
pop
nop
xor
rcrb
pushf
mov
xchg
test
and
dec
or
scas
mov
mov
inc
imul
fmull
mov
jg
adc
mov
cmp
js
hlt
xor
movsb
lock
fiadds
mov
stos
jb
jge
mov
xorl
mov
or
arpl
cld
inc
lret
xor
add
loop
or
push
or
adc
jns
bound
push
aas
mov
fimuls
inc
lea
and
xor
stc
loop
sub
in
push
movsb
pusha
mov
rcl
push
push
in
jae
add
int3
adc
sub
sub
and
test
add
and
in
data16
mov
rcrb
cmp
mov
imul
daa
in
add
cmpsb
repz
adc
pop
mov
sub
pop
je
test
leave
imull
pop
push
daa
pop
sub
aas
xorl
shlb
jne
jno
jge
lret
push
test
loope
push
lds
jmp
sbb
adc
push
push
fstpl
shll
sub
test
inc
jecxz
mov
sbb
cmpsl
inc
out
sti
adc
pop
cmp
jae
jb
dec
repnz
cwtl
or
out
pop
dec
ljmp
inc
jp
test
rcrl
pop
addr16
loop
ljmp
call
inc
jmp
inc
mov
inc
in
ret
out
sbb
je
or
xor
clc
test
xor
mov
int
ja
daa
mov
jmp
sbb
ljmp
pusha
popa
movsl
or
hlt
add
dec
loope
fwait
mov
add
cmp
jne
fnstenv
fwait
cmp
aam
jae
inc
dec
xor
pushf
loop
jge
push
cmpsb
mov
pusha
clc
cmpsl
sbb
lods
daa
dec
dec
into
fsubs
xchg
inc
ds
or
xchg
pop
cwtl
or
xchg
or
xchg
aam
xlat
mov
repz
out
dec
push
sbb
dec
dec
adc
sub
insb
or
shrb
inc
sub
out
pop
dec
aam
loope
mov
shr
aas
daa
cmpsb
dec
es
aad
mov
lret
lahf
bnd
xchg
push
stc
mov
addr16
filds
out
out
cwtl
imul
pop
ss
aas
das
jns
jno
outsl
sub
out
push
test
mov
aam
inc
daa
cmp
inc
fcompl
mov
ret
nop
insb
jne
push
repnz
insb
xor
pusha
in
inc
aaa
mov
fmul
arpl
aaa
aas
lret
mov
pop
mov
mov
push
cmp
shrb
dec
lsl
or
fs
mov
lock
loop
fisubs
jge
mov
pop
mov
cld
js
cmp
mov
stc
imul
ficomps
mov
push
mov
and
pop
in
add
push
lret
inc
adc
outsb
cmp
std
out
flds
sbb
testl
popf
inc
jge
testb
in
fwait
add
testl
or
inc
shrl
and
lcall
xchg
icebp
mov
xchg
sti
jg
add
aam
dec
dec
dec
push
loopne
pop
mov
cmp
sbb
mov
mov
or
jne
inc
das
push
push
ret
dec
mov
xchg
jnp
je
ss
jae
sbb
jmp
inc
pop
add
cmp
mov
int3
aas
inc
aaa
imul
into
push
js
les
inc
scas
mov
dec
jns
enter
fdivl
hlt
mov
andb
mov
and
cmp
jns
addr16
and
xchg
or
aad
sahf
or
mov
push
das
pop
cltd
push
pop
stc
xchg
mov
fwait
repnz
add
pop
mov
xchg
imul
dec
test
sti
sub
out
insl
nop
lahf
ficoms
push
push
imul
inc
hlt
jo
and
loopne
aas
pop
scas
jbe
imul
lods
decb
add
addr16
push
imul
je
fdivs
jo
iret
mov
lcall
loopne
dec
push
loop
push
jp
pop
enter
adc
xchg
pop
xor
in
das
ret
popw
addr16
adc
or
fstpl
cmp
stos
push
jmp
cmp
out
push
ja
divl
int3
add
cmp
fsubl
js
or
fwait
popa
pushf
xor
andb
jno
mov
jge
insl
repz
or
xor
cmc
pushf
mov
sub
xchg
inc
xor
xchg
into
ret
cmp
daa
scas
and
inc
fmuls
cmp
insl
add
jbe
fs
push
mov
int
lods
scas
pop
bnd
sbb
cld
outsl
dec
lret
leave
int
std
adc
out
test
gs
pop
or
es
sbb
lods
adc
or
jmp
inc
mov
mov
xchg
mov
jne
lods
push
sub
xor
push
mov
sbb
fisttpll
sub
and
dec
imul
mov
rcrl
je
mov
cwtl
movsb
pop
xchg
mov
pop
arpl
aas
nop
inc
ljmp
fs
test
jmp
ret
jns
test
adc
push
outsb
cmp
pusha
sub
jno
cmp
lock
mov
push
mov
push
add
mov
fimull
xchg
jecxz
addr16
fmul
xchg
jge
cs
fistpll
scas
popf
pop
jle
xchg
test
inc
jbe
add
movsb
adc
fwait
sbb
sahf
popl
scas
pop
push
sub
je
adc
scas
pop
push
das
push
dec
jmp
jbe
imul
jo
call
rcll
jae
dec
fisttpl
sbb
mov
xchg
ret
jmp
popa
mov
mov
mov
xor
scas
sarl
push
ret
cmp
stos
test
lock
sbb
and
mov
xor
pushf
mov
sub
cmpsb
sbb
dec
jae
mov
adc
add
sti
pop
call
mov
sti
sub
decl
cmp
cmp
std
aad
xchg
mov
adc
fwait
sub
lds
and
mov
mov
sub
mov
imul
in
add
sub
jb
mov
arpl
cmp
mov
cmpsl
adc
fs
insl
xchg
sbb
pop
add
xchg
xor
lea
popf
dec
inc
mov
popa
xor
cltd
enter
fimull
sub
and
cmpb
cmpl
aam
mov
cmp
push
out
mov
mov
xorb
ds
les
imul
shlb
or
imul
ret
push
jp
add
popf
push
loope
xlat
push
fistpl
adc
stc
cmpsb
add
scas
cs
jmp
loope
inc
fidivs
int3
out
out
sbb
inc
jo
mov
xor
xchg
or
jg
jno
mov
imul
arpl
stc
adc
into
push
pop
lods
fdiv
fsubrs
dec
adc
cmc
adc
add
inc
rcll
xchg
jo
loopne
push
inc
push
sub
fcmovu
in
icebp
cmp
cltd
mov
and
dec
xor
out
mov
push
addr16
or
mov
push
and
scas
jb
xchg
std
testb
rcrl
dec
push
daa
mov
cmpsl
xchg
push
in
test
orl
fwait
popa
cmp
pop
stos
sbb
insl
sbb
pushf
pusha
pop
in
js
jmp
jmp
stos
inc
ss
movsl
jb
dec
cmp
mov
and
bnd
inc
and
jno
pop
adc
push
pop
sub
movsb
jg
mov
pop
sbb
aam
cmp
je
movsl
jb
in
push
push
leave
mov
movsl
das
dec
xor
ss
fiadds
sbb
rolb
mov
xchg
push
icebp
inc
xchg
xchg
inc
cmc
mov
mov
pop
add
pop
mov
leave
xor
das
icebp
adc
call
mov
sbb
ret
ret
add
imul
jmp
notb
pushf
cli
into
adc
arpl
ret
jl
inc
int
ret
xchg
inc
mov
inc
dec
addr16
lcall
sub
aam
dec
into
inc
mov
jl
into
mov
mov
or
es
popf
loopne
popf
mov
xchg
pop
mov
dec
dec
aas
adc
dec
xor
and
cmp
iret
bound
cmpsb
roll
fcomps
add
and
rorb
cwtl
fidivrs
adc
mov
js
and
add
or
repz
pop
movl
loop
push
sub
mov
push
jo
cmp
insb
lds
mov
push
into
push
and
or
enter
adc
push
sbb
jg
or
call
mov
iret
jo
test
mov
cmpsl
push
mov
push
movsl
stc
addr16
lahf
enter
sub
xorl
sub
in
cltd
add
sub
push
pop
pop
lock
leave
or
mov
bound
enter
stos
in
mov
hlt
out
dec
negb
push
mov
mov
insb
jge
cmp
sbb
and
adc
dec
inc
or
push
jecxz
push
inc
sti
push
push
add
cltd
jb
mov
std
push
ja
adc
or
pop
jno
lds
cli
cltd
push
mov
push
loop
ds
out
sub
dec
addr16
cs
dec
test
lods
ljmp
mov
addr16
jge
dec
push
lcall
push
sbb
psrlw
stc
jl
mov
rsqrtps
jns
jnp
push
or
testb
jmp
mov
push
hlt
aaa
cmc
fs
mov
repnz
popa
pop
cmc
cltd
fstpt
jmp
fldt
cmc
mov
insl
or
add
push
mov
jno
or
idivb
lcall
inc
adcb
sar
ret
int
movsb
pop
and
cmp
cmp
andl
ret
or
icebp
push
rol
shl
mov
int3
or
or
jbe
pop
cltd
cmp
leave
lock
cmpsl
cmp
test
call
adc
stc
inc
mov
cmp
data16
pop
jb
xchg
jo
sbb
inc
mov
adc
outsl
pop
cltd
ljmp
cld
push
push
push
stos
pop
ja
adc
pop
inc
dec
popa
cwtl
les
nop
mov
pop
stos
jp
cmp
cmp
test
pop
inc
test
inc
jl
sbb
xor
inc
jmp
loop
insl
pop
test
sti
sbb
test
ret
push
jge
cmpb
mov
sbb
inc
fldt
out
and
lods
push
outsl
xchg
shl
addr16
rclb
mov
out
mov
dec
out
cmp
frstor
mov
sbb
dec
cmp
push
lods
out
aam
pop
cmpsb
lahf
adc
imul
bound
incb
sbb
sbb
cmpsb
aaa
lea
sub
mov
test
jg
gs
sbb
cmpl
mov
testl
pop
imul
ljmp
mov
push
les
sbb
xor
stos
ss
lea
inc
loop
cmp
cwtl
dec
xor
pop
xchg
cs
mov
push
loope
popf
xchg
stos
lret
inc
test
add
fiadds
add
fnstenv
sahf
mov
out
xchg
xlat
pushl
pop
aas
mov
movsb
lcall
xchg
mov
mov
cwtl
push
out
add
mov
and
popa
scas
lea
add
jb
push
int
sahf
lahf
xchg
add
mov
push
out
test
aam
cmp
push
movsb
loopne
movsl
pop
or
inc
fdivp
mov
mov
inc
or
pop
fldenv
or
pop
mov
pop
jnp
pop
xor
mov
je
sbbl
push
std
and
gs
shl
loop
mov
jp
mov
mov
jle
jle
inc
adc
sub
aad
inc
xor
dec
sbb
imul
push
jmp
xchg
fsubp
pop
add
ja
pop
in
push
xchg
sbb
dec
inc
sub
xor
icebp
push
push
cmp
pop
fdivrs
lret
in
decl
adc
ret
nop
jmp
xor
sub
pop
jecxz
aad
jno
cmc
mov
repz
pop
clc
testb
adc
xor
push
pusha
mov
sbb
and
sub
rorb
lret
jecxz
test
adc
sub
or
andb
pop
insb
xchg
mov
in
neg
cmp
xor
and
cmpl
mov
cmp
pop
mov
jmp
rclb
repnz
sbb
out
ss
cmp
jecxz
mov
cmpsb
push
scas
push
jo
add
pop
pusha
adc
cmp
les
repz
push
mov
nop
call
outsl
loopne
rorb
lds
xchg
fstps
cmp
cmp
sub
sti
mov
xchg
iret
arpl
mov
fs
cmp
sub
push
das
stos
repz
push
ss
cmp
insl
add
mov
cmp
or
sbb
lea
sbb
push
xchg
jae
sbb
ficompl
sbb
aas
sub
jmp
jno
cmp
push
push
mov
fld
push
mov
mov
jo
jg
add
inc
stos
xchg
in
cmpsb
enter
sbb
bound
xchg
outsl
lcall
push
jno
fcomp
insb
adc
shrl
insb
sbb
shlb
mov
or
pop
xor
dec
fstl
and
mov
leave
jl
je
push
aas
imull
ret
sbb
mov
pop
add
es
xor
push
jmp
lret
scas
push
rcrb
adc
nop
jns
xlat
pop
and
test
add
sub
lahf
sub
mov
or
adcb
xchg
pop
bound
jae
push
in
inc
mov
dec
xchg
push
std
inc
add
sub
loopne
cmp
mov
icebp
rcr
sahf
shll
and
hlt
xor
int3
mov
push
rcl
dec
push
sbb
ss
adc
outsl
es
out
fdivr
shrb
add
sub
mov
mov
dec
mov
pop
mov
arpl
shlb
pop
ja
clc
je
jge
cli
js
and
mov
dec
sti
dec
insl
jg
push
mov
and
and
divl
mov
out
dec
or
add
xlat
ja
sbb
jb
jbe
movl
cmp
cmp
imul
xchg
cmp
jnp
stc
cmc
push
mov
andb
in
sub
mov
sbb
popa
stc
dec
lods
daa
and
in
cmovb
and
xor
cli
jb
int
js
pop
fistps
ljmp
or
jae
xchg
mov
test
cwtl
fwait
rorb
ljmp
outsb
or
ud2
popf
leave
push
mov
pop
loopne
ret
and
pushf
dec
mov
inc
js
mov
cmp
jmp
mov
pop
lds
ss
mov
push
hlt
stc
loop
testl
push
pop
ja
stos
mov
sub
lcall
mov
inc
cld
ret
std
mov
xchg
xchg
test
repnz
mov
xchg
cwtl
sub
push
repz
cmc
jnp
xor
test
lock
into
stc
xchg
dec
xor
and
jl
jno
and
mov
xlat
push
mov
ljmp
roll
and
out
pop
adc
cmp
mov
jbe
roll
cld
mov
clc
push
cmp
in
enter
in
out
inc
jns
lcall
add
lock
pop
lret
or
mov
dec
sbbl
sbb
fidivrs
lcall
insb
cmp
jae
es
jmp
mulb
push
jnp
sbb
iret
lcall
xor
and
popf
popf
push
pop
sub
mov
call
jnp
add
bound
test
xor
subb
insl
test
push
not
mov
add
inc
sub
adcl
mov
lcall
out
je
or
adc
divb
jp
outsl
pop
rorl
pop
scas
inc
push
fistpll
popa
dec
sbb
popf
or
loopne
imul
mov
iret
jmp
inc
nop
mov
push
dec
outsb
inc
push
test
aam
mov
lcall
push
test
ja
jle
lret
lcall
movsb
movsl
icebp
fdivrs
fbstp
gs
iret
pop
popf
push
shlb
rolw
int
inc
or
or
inc
dec
stos
fcmovnb
jae
sbb
enter
jae
mov
pop
flds
lds
in
inc
push
adc
inc
pop
fsubl
dec
lcall
xchg
inc
push
lcall
fs
stos
sub
or
ss
jmp
inc
add
shl
dec
push
xchg
in
in
fdivs
int3
push
mov
js
xlat
hlt
into
insb
cmp
cmp
mov
rol
jns
jns
andb
pusha
ljmp
out
cwtl
in
inc
xor
scas
ljmp
xchg
xor
push
gs
sahf
notl
es
je
sbb
stos
ja
loope
pop
out
dec
mov
adc
and
fmul
mov
sbb
imul
out
jne
cmpsl
fidivs
stos
adc
lea
sarb
cmc
jle
sti
sbb
inc
and
jecxz
dec
imul
stc
out
movsl
xchg
cmp
dec
aas
dec
cwtl
cmp
jl
je
insl
mov
in
push
aaa
lods
sub
sub
mov
lea
inc
mov
lods
stos
pop
fisttpll
xchg
mov
fisttpll
mov
jae
xchg
sub
orb
insb
adc
int
inc
jo
mov
jo
scas
push
out
cmpsl
repz
in
lea
jae
pop
popa
and
aad
jmp
cmp
in
mov
loopne
test
jbe
jge
jo
pop
jbe
push
sahf
dec
adc
dec
push
adc
mov
and
xchg
gs
scas
dec
inc
jg
mov
mov
push
in
dec
sbb
sub
mov
imul
push
mov
test
fwait
and
push
xchg
push
xchg
jae
pop
outsb
or
cmp
jns
push
dec
mov
and
aam
jae
ficompl
jb
fisubl
data16
jo
arpl
movsb
add
xchg
mov
xlat
cwtl
loope
adc
ss
adc
fmuls
mov
loope
xor
inc
lret
jmp
jg
pushl
cmp
neg
rorb
rcl
mov
sti
cltd
pop
mov
pop
fisttpll
and
inc
mov
enter
mov
into
xchg
lods
jbe
pop
leave
leave
call
pop
daa
addl
cmc
xor
daa
and
or
pusha
stos
xchg
nop
ds
pushf
sub
adc
out
mov
cmpl
mov
scas
ffreep
cli
or
sbb
shl
sub
adc
pop
sub
or
mov
or
push
mov
scas
push
dec
xor
mov
scas
lret
jle
lahf
xchg
std
fstpt
xchg
sti
inc
insl
aaa
mov
sub
mov
movsl
jge
negb
mov
ret
jge
js
add
adc
inc
loopne
decl
fisttpll
jg
or
jle
mov
aaa
mov
std
and
mov
mov
addb
in
scas
int3
cmpb
scas
and
jl
ficoml
xlat
out
popl
mov
pop
push
jb
roll
stos
in
neg
xchg
xacquire
aam
es
jno
cwtl
mov
adc
sub
push
scas
cmp
xchg
mov
and
pop
aas
lods
and
into
lahf
xor
fwait
add
fildll
arpl
sbb
dec
std
xor
lret
mov
pusha
mov
and
into
mov
daa
pop
test
dec
mov
sbb
jbe
cmp
mov
pop
mov
pop
clc
punpckhwd
test
or
jp
xchg
mov
sub
and
cmovno
pushl
bnd
adc
pushf
push
test
test
mov
out
fcmovnbe
sti
cmp
jl
je
shlb
sbb
inc
in
divb
and
cmc
das
mov
pop
mov
scas
mov
fmul
imul
adc
int
repz
rorl
lds
sbb
fwait
push
test
loopne
out
mul
in
iret
pop
and
mov
lret
cmp
xchg
jnp
test
in
movsb
jmp
sbb
cmp
and
jbe
sbb
and
pusha
cltd
push
fadd
jge
dec
jmp
sub
jg
push
mov
push
ss
xor
daa
xor
lret
jp
jo
fs
mov
and
clc
jo
pop
popf
inc
jl
or
mov
icebp
mov
adc
mov
call
lods
in
push
mov
jge
or
out
push
push
xlat
jns
stos
adc
cmpsl
je
jne
ret
je
mov
jb
cmp
test
jmp
push
pop
inc
mov
lcall
sbb
std
xlat
lret
jecxz
ja
call
sahf
push
adc
add
enter
mov
and
or
shrd
sbb
addr16
mov
js
sarb
bound
jnp
mov
sbb
clc
call
cs
orb
les
xor
stos
sti
sbb
aas
and
test
dec
iret
add
scas
call
add
or
es
fs
scas
add
in
jecxz
outsl
mov
and
mov
dec
xchg
adc
jns
add
repnz
sub
lret
pop
ret
lret
sbb
rcrl
cmp
pushf
pusha
sbbb
hlt
js
and
mov
pop
pop
mov
subl
inc
negl
adcl
loope
sbb
xor
inc
in
mov
es
pop
push
rcrl
push
or
rcr
pushf
mov
cld
sbb
inc
dec
in
jbe
faddl
mov
int3
xor
mov
mov
xchg
rorb
imul
xor
leave
imul
mov
int
mov
or
jp
mov
lret
push
pop
iret
or
or
sbb
fs
mov
out
lret
xchg
dec
andl
push
mov
movsb
lds
pop
je
jo
gs
dec
fmuls
mov
push
fists
outsb
and
push
scas
ja
dec
inc
jno
in
repz
aas
xchg
and
stos
add
imul
mov
cli
jnp
xchg
sarb
xchg
and
lahf
xor
dec
popf
add
dec
idivl
cli
xor
loopne
lcall
sub
leave
pusha
pop
add
je
cmpsb
in
jge
jo
cmp
movsb
pushf
cmpsl
sbb
and
loop
bound
mov
fwait
dec
out
jg
sti
scas
out
movsl
dec
sbb
ss
jnp
das
inc
pop
pop
repnz
pop
outsl
nop
mov
pop
hlt
shlb
out
insl
int
pop
xchg
scas
mov
mov
insl
imul
xlat
jne
ficoml
ss
loope
mov
js
loop
bound
nop
mov
mov
ja
pop
push
lods
xchg
mov
cmc
les
push
repz
adc
push
dec
mov
cmpsl
push
fnstenv
cld
dec
in
pop
hlt
fsubr
int3
sarb
push
mov
cmpsb
xor
cmp
dec
xor
add
loope
mov
pop
fimull
sub
jecxz
bound
cmpsl
push
or
pushf
cmp
jbe
fwait
xchg
test
inc
insl
mov
adc
xchg
jge
mov
dec
pop
xor
inc
lret
sub
xor
mov
popf
xor
xchg
cld
dec
mov
pop
pop
or
ljmp
mov
mov
push
or
mov
leave
sub
jnp
into
mov
ficoml
int3
xchg
xchg
sub
pmaddwd
imul
sarw
iret
mov
ja
cmpsl
sbb
pop
ret
adc
pop
cmp
imul
loope
xor
mov
jns
rcrb
jmp
jno
xchg
dec
push
scas
out
sarb
imul
xor
xchg
push
mov
mov
lods
push
setle
push
push
mov
dec
sub
sbb
cmp
sub
cmp
lcall
lahf
sub
dec
or
push
sar
fucomip
loop
dec
push
nop
push
push
pop
cmpsl
sub
je
push
test
inc
jecxz
roll
dec
cmp
scas
xchg
gs
mov
sub
sbb
shl
movsb
pop
sbb
cmp
iret
add
mov
addr16
mov
mov
mov
adc
mov
fiaddl
and
subl
xchg
outsb
pop
push
test
les
fcomp
pop
xchg
xorl
addr16
mov
imul
test
dec
push
rcrl
call
cmp
mov
loopne
xor
popa
mov
or
stos
mov
add
sbb
fistpll
cmpb
movsb
out
sub
mov
pop
enter
xor
lret
xor
ds
psllq
stc
jp
push
inc
add
or
aaa
outsb
in
frstor
testl
add
sub
nop
outsb
mov
rcll
pop
jb
add
xor
mov
push
dec
adc
es
addl
and
pop
push
movsb
es
xchg
jb
pushf
imul
mov
ds
aaa
xchg
inc
inc
cmpsb
inc
xchg
popa
lret
pop
fildll
jecxz
movsb
jno
das
inc
or
stos
jmp
add
and
enter
dec
sub
xchg
loopne
lret
jle
mov
jb
test
sub
andb
or
leave
subb
in
fs
cmc
cmp
in
push
xor
pop
mov
pop
das
aaa
imull
in
jmp
pop
jge
loop
jb
ds
notb
adc
pop
add
cwtl
and
inc
xor
fidivs
jo
lods
adc
xchg
mov
xor
movsl
rorb
rcrb
stc
inc
add
dec
js
adc
imul
cmp
xchg
mov
pop
loopne
pop
jmp
push
cmc
mov
cmp
push
add
mov
lret
jnp
pop
je
mov
fnsave
ds
push
movsb
xchg
pop
fwait
inc
jmp
xor
outsb
iret
aad
inc
adc
shll
xor
sbb
push
cmp
lcall
fildl
in
jmp
cmpsb
sub
rclb
and
adc
inc
popa
out
hlt
test
mov
mov
mov
xchg
xchg
ja
cmp
and
cmp
les
jle
cmp
aam
mov
or
cmp
jg
push
ret
push
arpl
int
data16
setp
test
jp
lcall
sub
push
gs
repnz
xor
pop
les
movsl
push
dec
push
jno
xchg
mov
mov
mov
sbb
sub
movsb
leave
mov
arpl
ss
jecxz
push
clc
pop
insb
int
jecxz
xchg
aaa
sbb
sub
ret
xchg
iret
lahf
fwait
rolb
cmp
pushf
lahf
jne
lds
sbb
out
ss
hlt
pop
lahf
repz
int
movsl
fucomp
sbb
fdivrs
dec
xor
pop
mov
and
cmc
dec
sub
shll
test
and
adc
fcompl
cmp
aas
daa
dec
fbstp
je
sahf
lds
jle
in
daa
mov
enter
jbe
int3
out
xchg
cmp
test
ljmp
push
lds
fldt
pop
mov
lds
mov
xchg
repnz
movsl
into
mov
mov
popf
xor
mov
cmp
cmp
ljmp
sub
clc
clc
or
aaa
ljmp
jb
adc
adc
cmpsb
loope
fisttpl
fwait
test
ret
mov
or
fidivrl
push
jl
aaa
js
jmp
push
adc
jnp
mov
lock
or
pop
adc
adc
inc
movsb
icebp
fwait
mov
daa
or
pop
mov
jae
call
mov
ss
ja
jl
dec
xchg
push
stos
imull
or
shrb
and
xor
ljmp
gs
mov
mov
inc
xchg
out
mov
dec
repnz
xchg
fistps
fld
jo
pop
adc
fwait
popf
inc
mov
idivb
jae
xchg
jno
addr16
rol
bnd
lock
imul
jbe
leave
dec
adc
mov
shrl
es
and
les
sbb
and
xchg
mov
inc
jno
push
fistps
arpl
adc
arpl
mov
sub
in
int
pop
stos
cmp
rcrl
and
gs
in
dec
notl
push
mov
pushl
pop
idivl
or
mov
in
lret
xchg
into
int
push
lea
roll
pop
push
or
adc
push
loopne,pn
test
loopne
dec
mov
pop
loopne
ljmp
cmp
dec
fcmovnu
decb
ja
sbb
adc
sbb
sti
push
adc
adc
and
aam
mov
dec
jno
sbb
mov
jae
jmp
sub
sbb
es
push
pop
ljmp
fdivrl
arpl
cmp
xlat
ds
and
bound
popf
ss
icebp
call
je
adc
xor
icebp
lret
mov
aas
ss
xor
scas
ret
inc
add
dec
mov
enter
adc
fsubrs
sub
and
ljmp
sarl
repz
jmp
mov
cld
and
xchg
lds
push
push
jmp
jg
stc
adc
dec
shll
decb
subb
lods
jmp
stc
int
loope
inc
test
sbb
dec
push
sbb
push
sbb
add
jp
mov
sub
lcall
pop
es
xchg
mov
push
std
xor
inc
push
push
lret
xchg
test
div
cmp
sbb
les
pushf
mov
or
loop
dec
cmp
pop
dec
cld
pop
dec
je
sub
sbb
and
mov
xlat
xchg
daa
mov
mov
jns
daa
cmp
nop
bound
cltd
add
into
adc
mov
pop
lock
daa
xchg
xchg
pop
leave
ret
mov
jg
pop
xchg
adc
test
dec
inc
mov
mov
insl
xor
fcmovu
mov
fmull
divb
xor
imul
and
xchg
xchg
pusha
repz
cmpsl
jno
xchg
and
xchg
ffree
stos
mov
inc
scas
adc
xchg
dec
in
adc
push
gs
movntq
or
jecxz
and
xchg
push
xchg
mov
jl
popf
adc
xchg
fwait
adc
adc
call
push
xchg
cmc
xchg
scas
pop
push
sub
xchg
jle
xor
in
mov
xorl
dec
loope
test
lcall
sti
or
mov
cli
xor
and
lcall
in
lret
mov
or
xchg
xor
movsl
mov
or
mov
sbb
cld
movsl
sbb
push
push
ljmp
out
pop
mov
add
fpatan
mov
lea
mov
enter
cmp
xchg
xor
cmpsb
push
fs
jbe
jle
sub
data16
mov
cli
jp
mov
loopne
mov
andl
and
in
lcall
nop
lret
std
jbe
popa
dec
movsl
ljmp
movsl
imul
int3
adc
into
mov
sbb
gs
push
cld
sahf
jge
xchg
push
xchg
icebp
ret
idivb
movsb
icebp
mov
jns
lret
in
xor
sbb
jp
mov
push
jp
sti
ds
sbb
jno
sub
push
push
add
inc
pushf
mov
jae
push
sub
mov
sub
arpl
jp
jge
mov
out
dec
inc
out
cmp
xor
mov
out
xor
mov
call
mov
and
sahf
clc
retw
push
lock
mov
sahf
rol
push
mov
popf
jp
adc
xor
lods
pop
lds
scas
cld
lretw
lret
adc
dec
sub
in
rcrb
setle
adc
dec
addr16
dec
push
das
xchg
sub
push
or
out
xlat
xor
add
xorb
aas
jge
cmp
mov
idivl
mov
dec
sbb
xchg
mov
sub
push
pop
sti
icebp
enter
sub
sahf
cmp
lods
arpl
outsl
dec
xchg
std
orl
dec
scas
mov
mov
ret
fwait
cmp
fstps
inc
rorb
fwait
pop
dec
out
mov
xchg
fistl
jae
sbb
bound
lock
jne
repnz
push
lds
mov
push
fwait
sbb
pop
push
rcrb
out
inc
pop
pop
clc
sbb
icebp
add
lods
out
das
dec
rclb
lods
out
xchg
mov
jnp
inc
pusha
mov
pop
test
cvtps2pi
scas
mov
push
add
les
mov
xchg
adc
jb
mov
xor
ss
imul
test
rcrb
es
sub
add
js
mov
shlb
mov
scas
mov
outsl
mov
mov
das
imul
das
push
add
pop
sub
inc
bound
push
sbb
push
cmc
jb
xchg
lcall
adc
cmpsl
nop
dec
or
mov
leave
cli
mov
rolb
mov
cmp
lcall
dec
mov
cwtl
lcall
std
sbb
add
and
stc
imul
xchg
xor
repnz
push
cmc
mov
cmpsb
cmp
test
rcrl
xor
movsb
push
fs
daa
inc
and
jg
xchg
mov
repz
int
inc
or
pop
xchg
lods
sbb
into
test
pushf
jb
adc
xchg
push
test
loop
je
enter
out
fwait
or
clc
in
das
test
jle
incl
std
mov
pop
push
sbb
les
testl
fs
pop
daa
add
fabs
les
jl
jnp
pop
imul
and
inc
xchg
push
sub
mov
mov
mov
pop
out
mov
mov
jecxz
cmovbe
cmpsb
pusha
fnstsw
or
adc
es
or
lret
add
and
fldcw
pop
inc
jne
cli
jg
sub
shrl
pushf
test
sbb
out
or
fstpt
xor
push
sti
movsl
dec
jl
ss
arpl
cmpsb
int
push
sub
clc
mov
sbb
and
or
xchg
sub
push
hlt
les
loopne
fwait
jb
scas
pusha
mov
pop
das
repnz
pop
into
in
add
mov
aam
sbb
pop
xor
sub
dec
mov
jecxz
cmpsl
ljmp
and
xchg
jle
cmpsb
ds
in
push
fs
push
mov
push
movsl
scas
bound
fcompl
jae
xchg
aas
je
cmp
mov
adc
pusha
rcrb
aas
andl
out
xchg
bnd
push
sub
adc
sbb
movb
nop
sbb
bnd
enter
lret
popa
and
addr16
ret
sbb
cmpsb
js
xchg
adc
xor
nop
sbb
cld
pop
push
mull
outsl
arpl
sub
rcrb
imul
lds
shl
fldenv
xchg
and
roll
dec
cmpsb
jp
int
jmp
in
inc
push
inc
adc
push
mov
stc
pop
mov
sbb
push
pop
enter
pop
lret
cmp
movsb
push
fldln2
jmp
sub
inc
jecxz
out
sahf
adc
adc
xor
mov
mov
ljmp
leave
cmp
jns
mov
out
add
add
pop
ret
rclb
fnstcw
dec
inc
xor
mov
dec
aad
fs
cmp
sub
lcall
out
mov
mov
sub
sub
pop
out
mov
mov
fldenv
stos
pop
out
fiadds
xor
sti
cli
adcb
lahf
xorl
clc
push
sub
rclb
ds
out
fnstenv
xchg
jno
lock
mov
push
rcll
xchg
sbb
mov
arpl
mov
std
dec
sbb
aaa
cld
xchg
or
and
pop
pop
mov
add
xor
sbb
jmp
fidivrl
ja
jbe
sub
adc
bnd
push
clc
cmc
ret
mov
test
mov
sbb
xlat
mov
popf
repnz
popl
cmp
repz
aad
jae
gs
movd
mov
push
push
in
jecxz
repnz
inc
rorb
jae
int
xchg
icebp
loopne
lret
sbb
lods
hlt
mov
cs
imulb
and
mov
xor
imul
ljmp
adc
repnz
test
js
fadds
jge
jo
outsl
sub
mov
in
insb
movsl
mov
push
mov
mov
pop
cmp
pop
pop
add
dec
loopne
mov
mov
stc
mov
sub
js
push
pop
add
jns
push
nop
test
popa
dec
sbb
or
mov
rcll
cmp
adc
mov
mov
stc
pop
mov
push
pop
mov
cld
lock
inc
jb
jb
aam
adc
xchg
hlt
xor
jle
sbb
in
pop
jge
fiaddl
cmp
fwait
dec
adc
mov
out
gs
shll
lock
push
hlt
inc
punpckhbw
cmpsl
inc
push
push
test
add
pop
ret
push
xor
mov
and
out
add
jp
sahf
scas
jbe
jb
xor
outsb
cmp
adc
and
int
ds
cmpsb
xor
inc
sbb
ss
and
jo
xchg
and
pusha
mov
out
pusha
add
dec
mov
cmp
movsl
xchg
cmp
imul
lret
mov
cmpsb
cli
sbb
or
hlt
jle
mov
jmp
das
xor
rcrb
adc
pop
pushl
dec
pop
out
in
loopne
push
decl
lahf
jne
mov
je
push
dec
push
repnz
cmp
pop
lods
lret
imul
aad
add
rol
std
das
push
lds
inc
orl
sub
lods
ret
les
insl
sub
mov
sbb
dec
sbb
cmp
add
data16
sbb
aam
xor
pop
lock
jl
jecxz
pop
xor
xor
outsl
or
insb
and
call
cli
insl
jns
dec
push
ret
cmp
add
cmp
and
pop
pop
in
dec
je
add
ja
inc
imul
repnz
call
popf
push
sbb
add
divl
xsha256
cmpsb
push
test
xor
dec
inc
mov
xor
imul
sbb
pop
mov
flds
scas
cld
popa
jp
in
xlat
sbb
pushf
hlt
xchg
insb
outsb
movsl
pusha
xchg
mov
pushf
je
add
jns
in
test
adc
or
fstpl
mov
sub
es
dec
stos
xchg
lret
call
push
jmp
pop
icebp
adc
cmc
cmp
adc
mov
cwtl
mov
pop
push
xor
enter
pop
jnp
jg
lea
push
fwait
out
jne
out
xor
pusha
test
and
adc
mov
push
pop
mov
imul
add
mov
mov
ret
xchg
repnz
int3
arpl
data16
inc
test
dec
pop
push
jno
pop
imul
xor
pop
mov
ja
cwtl
outsl
dec
int
stos
repnz
xchg
inc
out
mov
loope
repnz
sahf
pop
dec
inc
sub
xchg
dec
cld
int3
adc
lods
cmp
xor
fwait
in
addr16
jp
or
fwait
mov
addb
dec
xchg
inc
sti
jle
push
xor
jl
push
xchg
out
sub
mov
xor
mov
inc
shl
imul
pusha
cmp
loope
das
pop
add
fidivrs
sub
adc
pop
jl
bound
mov
stc
pop
je
xor
sub
cmc
out
pop
test
xchg
nop
cld
xor
fcomi
cmpsl
cmpsb
adc
or
subl
push
ss
popf
ljmp
fdivrs
pop
movsl
in
inc
mov
in
jl
scas
imul
inc
and
cmp
and
movsb
test
cmpb
mov
inc
inc
xchg
stos
push
jno
cltd
adc
xorb
and
pusha
imul
sub
ret
subb
add
loop
xchg
pop
xor
mov
hlt
mov
cmp
pop
push
aam
addl
dec
cmpsl
and
fcomps
mov
cmpsb
push
insb
lcall
movsb
xor
leave
sbb
jmp
lret
jmp
cmc
hlt
es
push
mov
and
xor
pop
inc
fsubl
imulb
bound
test
cmp
jbe
retw
sahf
inc
cli
and
imul
inc
jge
jne
nop
adc
sub
xchg
daa
mov
loop
fucom
adc
movsl
pmovmskb
dec
or
lock
sbb
popa
cmpsb
or
into
xor
mov
lahf
jbe
or
and
inc
icebp
cmp
movsl
push
xchg
cmpsl
push
ret
mov
outsl
pop
mov
cltd
push
loop
inc
in
dec
lahf
mov
xchg
sbb
inc
inc
push
push
pop
lret
mov
inc
cmc
inc
mov
mov
mov
ret
pop
adc
pop
ljmp
mov
test
lahf
lcall
add
into
test
insb
aaa
orb
mov
or
inc
fimuls
popf
mov
cs
pop
rcll
fs
inc
popa
mov
call
fstl
sahf
lahf
mov
adc
je
ljmp
dec
pop
sbb
loopne
fdivrp
insb
mov
and
xor
aas
adc
pop
sbb
subl
add
rcrl
outsl
sahf
push
out
stc
adc
jge
or
mov
aam
xor
push
xchg
push
pop
inc
pop
mov
sbb
repz
popa
gs
ret
pop
popa
decl
inc
aas
movsb
lahf
les
mov
shl
inc
adc
inc
pop
aam
sub
movsb
and
arpl
imulb
sarl
test
cmpl
repz
mov
pop
push
and
stc
cmp
jns
pop
fnsave
cmp
mov
mov
dec
mov
ja
sub
sub
mov
or
xchg
sub
add
insl
in
loop
mov
cwtl
enter
jo
sbb
scas
in
adc
movsb
dec
sub
and
int3
ret
jl
dec
and
insb
adc
push
inc
rclb
hlt
dec
sub
out
popf
cmp
mov
in
push
sub
xchg
sti
sahf
repz
std
mov
gs
jmp
xchg
shl
sbb
xor
outsl
sbb
dec
repnz
sub
push
out
jnp
xchg
in
pushf
mov
sub
ror
inc
jne
loope
inc
outsb
pop
in
or
mov
std
int
shrl
adc
into
mov
dec
in
add
shrb
nop
xor
popa
cmp
movsb
es
jo
popf
stos
fwait
mov
movsb
sbb
sbb
xor
cpuid
mov
loopne
aas
int
jbe
add
shl
push
int3
and
and
in
jl
jae
pop
push
mov
mov
dec
je
call
cmp
adc
cmpsb
mov
jp
add
jp
fmuls
dec
push
dec
je
pop
je
cmc
sahf
dec
adc
and
xor
xor
or
nop
cs
sub
pop
fsubs
push
xchg
popf
jb
xlat
sub
sbb
or
push
mov
push
mov
fwait
into
dec
mov
lock
jmp
jmp
or
dec
cmp
cwtl
sbb
or
dec
mov
stos
popa
aaa
loopne
dec
rcrl
push
imul
cli
stc
pushf
xor
push
xchg
test
jno
shr
lods
pop
add
jnp
mov
inc
mov
sarl
push
in
xor
mov
dec
fstpt
in
aad
imul
jl
jmp
xchg
cmc
dec
push
stos
push
adcb
adc
mov
subb
push
mov
xchg
dec
xlat
lahf
cwtl
repnz
mov
cmp
pop
mov
xchg
jno
inc
sahf
ds
or
mov
inc
jnp
dec
jmp
fistpll
jp
je
lds
rcll
pushl
sub
add
in
lods
aas
push
fs
sbb
xchg
test
lcall
movsb
push
jns
xor
sub
test
lods
aaa
jp
cmp
cmpsl
cli
adc
insb
dec
aad
inc
es
push
adc
push
jns
pop
inc
and
lds
add
pop
inc
adc
inc
mov
dec
adc
stos
push
adc
outsl
sub
int3
sub
push
outsb
ljmp
push
cmp
loope
js
lcall
dec
mov
movsb
jl
shrl
xorl
rcr
mov
mov
jmp
popa
popa
divb
sbb
orl
or
cmpsb
data16
push
test
sub
outsb
lahf
xor
dec
out
and
sbb
or
push
fsubrs
push
bound
out
push
mov
and
bound
xor
out
cmpsl
shld
lods
and
sbb
push
cs
test
inc
or
imul
lea
leave
addr16
stos
int
dec
repz
xor
push
sbb
inc
bound
push
or
ja
or
stos
in
loop
outsl
mov
mov
sbb
std
test
mov
jno
popf
mov
sub
mov
and
ds
mov
inc
pushf
data16
in
cs
nop
ret
mov
imul
mov
shrb
cmp
mov
xor
jo
sti
adc
insl
in
test
dec
push
les
jmp
shl
sbb
idiv
fstl
mov
sahf
roll
fmul
pop
inc
aaa
dec
push
hlt
dec
mov
mov
xor
scas
xor
mov
mov
lds
hlt
xchg
and
pop
subb
lods
cli
add
jb
cltd
aaa
dec
dec
mov
mov
sub
adc
mov
hlt
rcrb
pusha
hlt
cmpsl
orl
nop
push
add
jo
fiadds
das
nop
adc
fsubs
mov
in
push
je
sub
mov
dec
repz
aad
mov
mov
in
movsl
lds
in
push
xchg
call
xchg
into
bound
pop
xor
inc
jmp
cwtl
test
jae
jbe
dec
out
cmc
cmp
and
mov
sub
jb
dec
xlat
pushf
repnz
push
fistpl
cmpl
jg
add
imull
mov
lahf
sbb
and
push
cltd
int
js
or
sbb
mov
push
into
inc
jb
flds
add
sbb
das
and
mov
pusha
pusha
jecxz
dec
or
and
arpl
test
jbe
adc
jmp
movsl
popf
push
ret
xchg
inc
daa
jns
xchg
mov
or
ficompl
sbb
fistpll
jbe
lret
xchg
and
cmp
dec
clc
add
jp
jbe
push
dec
and
mov
xor
jmp
imul
hlt
popf
repnz
test
fistl
and
out
jle
and
jbe
mov
movsl
cmp
pushf
mov
bswap
mov
mov
mov
and
dec
mov
mov
dec
lcall
jo
add
dec
aas
outsb
shlb
xor
mov
std
lcall
out
sub
popa
pop
sbb
cmp
pop
cltd
lret
lea
std
in
cmp
cmp
icebp
movsb
fdivs
insl
test
xchg
xorl
jbe
push
xor
ljmp
cmp
sub
inc
mov
dec
jnp
xchg
or
int
ret
fnstenv
ret
or
pop
adc
clc
xor
lods
enter
fwait
inc
push
add
pop
inc
jae
daa
xorb
out
jne
lods
mov
push
sbb
or
fbld
or
inc
pop
movsl
sarl
sub
addr16
push
fsubr
sbb
movsb
adc
cwtl
adc
sti
adc
shll
mov
leave
and
push
push
mov
push
jl
sbb
lods
inc
in
or
std
mov
loopne
jb
test
sub
push
std
lds
ja
add
xor
out
sarl
add
jno
subl
xchg
je
addl
arpl
fs
lret
ret
sbb
hlt
add
call
dec
xlat
aaa
add
or
and
fs
les
call
or
cmpb
mov
jno
adc
jg
insb
ljmp
sbb
sub
pop
xchg
fcmovnbe
lea
call
dec
inc
inc
jns
out
xchg
pop
jnp
in
push
inc
pop
ss
jnp
sbbb
mov
iret
xchg
mov
mov
push
pop
gs
cmpsl
xor
std
adc
mov
lea
es
sub
ljmp
or
cmp
imul
jne
ret
jp
clc
fwait
loopne
adc
inc
in
jle
jl
adc
shlb
cli
jmp
loop
adc
lahf
insb
jae
sub
xchg
shrb
sub
in
xchg
adc
rol
pop
adc
inc
pop
mov
pushf
out
mov
add
int
int
mov
ljmp
lock
ss
lods
and
adc
add
jbe
aad
xchg
mov
pop
out
aam
jmp
cmp
js
mov
loopne
test
in
jae
decl
push
xor
int
out
rcr
inc
gs
in
inc
push
cltd
add
rcrl
dec
pop
les
hlt
int3
xchg
xchg
js
mov
add
cmp
xor
sbb
aaa
xor
pop
sbb
cmpsb
in
cwtl
scas
pusha
lods
lock
dec
test
sub
inc
cltd
gs
cmp
jo
pop
pop
adcb
sbb
aas
push
dec
dec
inc
inc
test
mov
dec
das
ficoml
xchg
sbb
inc
xor
dec
movsl
jle
decb
add
divl
pop
jo
sub
mov
pop
jecxz
clc
mov
xor
lahf
sbb
pop
pop
es
push
test
rcll
mov
imul
xor
rolb
xor
clc
rcll
stc
dec
push
jne
ret
int
jp
lods
push
push
ljmp
dec
add
jno
pop
imull
xchg
add
mov
dec
cmpsb
mov
outsl
scas
xchg
cmp
mov
mov
das
jl
push
imul
mov
loop
movsl
inc
lds
adc
sub
hlt
xchg
adc
or
js
loop
std
adc
pop
mov
insb
push
xchg
adc
push
ja
xor
mov
pop
icebp
je
inc
xchg
js
scas
nop
cs
pop
adc
popf
fcomi
or
mov
push
or
lods
jg
outsl
stc
xlat
push
adc
mov
lret
add
mov
lcall
lods
lcall
lds
das
into
stos
or
outsb
cmp
sub
orb
retw
in
mov
repnz
sahf
pop
xor
cmp
hlt
cs
add
dec
call
push
xchg
xchg
in
mov
push
sub
ficompl
cmp
outsb
pushl
out
es
xchg
inc
outsl
inc
mov
dec
push
sbb
push
adc
push
out
adc
int3
aas
push
aad
aas
mov
loop
ja
testl
fiaddl
cwtl
data16
into
adc
test
pop
pop
sahf
gs
pop
add
adc
stos
and
mov
jge
loop
flds
xchg
jns
test
scas
outsb
mov
adc
mov
push
cmpsb
cld
xorl
test
popa
and
mov
roll
pop
out
aad
rcr
out
cmp
fsubs
push
or
addr16
outsb
leave
mov
out
mov
push
addb
int
lcall
rclb
fistl
icebp
mov
in
rorl
mov
dec
mov
cmp
mov
add
test
mov
fwait
imul
cmpl
xor
adc
xchg
adc
imul
aam
imul
pop
add
mov
clc
lret
mov
sbb
test
es
and
in
mov
rolb
out
jmp
or
cmpsb
out
leave
cld
rcrb
dec
mov
xor
lret
pusha
and
cld
rcll
mov
pop
xchg
test
dec
sarl
xchg
lods
mov
std
push
cmp
leave
adc
std
add
scas
jb
sbb
les
je
rcl
mov
popa
jmp
pop
mov
pop
das
cmovno
pop
mov
or
bnd
outsl
mov
iret
loope
mov
stc
sub
xlat
fcomps
ret
and
iret
add
push
pop
sub
into
clc
in
dec
arpl
jge
add
lock
loopne
cli
mov
mov
stos
sub
mov
bound
ficoml
inc
lret
repnz
mov
jbe
inc
xchg
jmp
mov
inc
sub
mov
inc
imul
mov
cmp
psllw
loop
cmp
cmp
imul
fisttpll
inc
pop
mull
push
das
pop
leave
lods
sub
fsts
sbb
push
cltd
push
lcall
cmp
pop
loop
sbb
xchg
pop
jg
push
imul
adc
xorb
hlt
dec
test
inc
test
test
mov
cltd
dec
mov
mov
ror
pop
testb
and
test
dec
sub
cmpsl
xchg
xchg
sub
cmc
sub
mov
outsb
xchg
in
jmp
fnsave
int
lock
mov
add
aaa
jb
test
stos
inc
mov
pop
xchg
sbb
leave
push
add
xchg
loop
bound
mov
and
je
addr16
scas
int3
xor
or
adc
mov
out
push
stos
mov
loopne
sbb
sbb
dec
push
popa
ret
adc
pop
mov
pop
lods
out
iret
lods
test
or
jno
lcall
push
pop
test
push
cld
int3
jne
pop
mov
notb
jno
mov
std
ja
cmp
gs
ret
xchg
popf
jnp
in
outsl
mov
subb
sub
jl
pop
mov
inc
int3
les
mov
xor
mov
push
popa
in
pushf
jo
dec
pop
call
add
shl
repnz
xor
imul
mov
xor
mov
mov
pop
insb
bound
mov
mov
push
xorb
push
sbb
insb
cmp
xchg
inc
mov
adc
mov
lock
xorb
adc
jg
or
roll
iret
and
aaa
sbbb
push
and
mov
fdivs
rolb
jmp
mov
cmp
sbb
adc
adc
cld
mov
lahf
xchg
movsl
sbb
jg
ds
sahf
lcall
inc
imul
mov
arpl
sub
sbb
or
cmpl
mov
iret
or
pop
lahf
mov
xorb
xchg
andb
lea
cmp
dec
xchg
test
mov
jecxz
lds
pop
cld
addr16
lea
cmpsb
adc
addl
fcmovu
mov
or
dec
adc
cmp
xchg
pop
pop
adc
sub
push
data16
mov
jecxz
inc
stos
sbb
into
cltd
orl
pop
inc
sahf
into
dec
pop
inc
bound
inc
pop
lock
sbb
lock
cld
in
loopne
push
mov
sbb
fmuls
push
test
insl
jnp
dec
add
push
jmp
push
mov
inc
sbb
sub
lds
outsl
xchg
push
loope
pop
pop
mov
movb
clc
test
inc
xor
cmp
jle
push
mov
int3
repnz
cli
xor
mov
paddw
shlb
into
jle
mov
push
push
js
je
pop
iret
addr16
jno
movb
mov
dec
sbb
mov
repnz
sub
cmp
repnz
jge
out
out
xchg
mov
js
stos
xor
or
push
negb
cmp
in
insb
lret
fdivrl
mov
nop
pop
fsubrl
and
push
cmp
out
repnz
ds
gs
cmpsb
mov
mov
or
add
loop
jle
repz
adc
push
lahf
mov
cmpsl
ljmp
dec
dec
pushf
lret
in
ret
movsl
ficomps
pop
or
imul
jne
or
cltd
pop
ja
xor
sub
inc
std
mov
outsb
rorb
pop
fisttps
mov
sbb
jecxz
jno
mov
jle
cmp
out
adc
test
into
ljmp
in
cld
push
jle
inc
sbb
mov
sahf
movb
dec
test
fst
cltd
cwtl
rcl
movsb
ja
push
inc
inc
stos
orl
imul
sub
jne
incb
sbb
lea
mov
push
movsl
lcall
out
cmp
es
pop
xor
nop
sbb
outsb
mov
push
test
pop
push
mov
jmp
cwtl
sarl
cwtl
or
jno
and
cmp
mov
icebp
or
push
pop
bound
xchg
pushf
mov
int
push
and
xor
repnz
sub
lcall
pop
inc
mov
xor
pop
pop
xchg
popa
enter
xor
push
in
fidivs
dec
mov
ds
mov
mov
xchg
loop
or
push
dec
xchg
test
mov
dec
pop
add
mov
addr16
out
fwait
nop
dec
cmpsl
adc
add
incl
test
add
xor
mov
jle
mov
pop
mov
add
xor
bound
jle
lock
out
mov
gs
clc
movlhps
sub
movsb
push
dec
das
mov
addr16
cs
fdivs
mov
pop
push
dec
push
mov
icebp
dec
push
icebp
in
testb
les
push
jp
out
mov
push
data16
add
lea
add
or
jne
mov
ficomps
mov
sub
or
les
push
inc
pop
push
adc
inc
in
push
xor
stc
mov
into
inc
rcrl
scas
push
aas
imul
or
rcrb
inc
sbb
mov
imull
pop
sbb
das
and
xchg
call
lock
add
sub
push
les
mov
mov
stos
arpl
in
pop
frstor
in
pushf
inc
cmc
int
and
add
mov
fwait
or
clc
cmp
pop
decl
enter
add
mov
push
dec
out
dec
xchg
mov
xchg
xchg
std
xor
enter
push
repnz
pop
popa
repz
shrl
push
ret
repz
dec
scas
clc
cwtl
inc
clc
pop
out
loop
das
sbb
add
pop
or
mov
test
popf
jae
sbb
push
aas
popa
pop
movsb
jl
xor
scas
xchg
or
push
mov
in
mov
call
out
stc
mov
mov
imul
lahf
data16
rcll
sbb
and
lahf
daa
cltd
xchg
out
add
int3
push
inc
mov
pop
outsl
push
test
sarb
ret
sbbb
inc
in
adc
shrl
lds
inc
and
out
xchg
scas
xor
stos
test
cmp
pusha
jb
ljmp
lahf
add
adc
fldl
fmull
push
inc
or
ss
call
push
adc
inc
xchg
sub
mov
pop
inc
cs
jp
inc
rorl
clc
inc
outsl
mov
popf
or
xchg
or
push
sbb
std
and
pop
dec
cmp
nop
movsl
xchg
cmp
icebp
dec
adc
xchg
sbb
inc
pop
adc
jo
xchg
and
inc
ljmp
addr16
fdivl
or
inc
stc
sahf
std
push
mov
mov
sbb
inc
int3
jmp
test
mov
jne
or
aad
movsl
sub
aaa
sbb
lods
cmc
cmp
or
mov
es
mov
bound
push
mov
sub
shll
imul
dec
push
xor
in
jbe
ja
jle
inc
push
jg
in
jp
ljmp
js
les
call
lds
dec
and
and
sub
hlt
mov
orb
mov
pop
popf
stos
mov
cwtl
xor
mov
inc
push
xor
inc
mov
gs
fmuls
fstl
push
insb
push
push
xor
out
out
sub
xchg
mov
dec
xchg
jno
mov
cld
leave
mov
inc
fcoms
push
jmp
and
pmaddwd
lret
inc
sbb
xchg
fcoml
and
adc
in
xchg
ds
jg
mov
gs
jge
add
jns
sub
mov
bound
pop
mov
inc
dec
add
mov
inc
mov
and
or
scas
stos
out
icebp
scas
sub
cmp
and
add
fistps
lret
repnz
push
mov
xor
aam
aas
inc
cmpsl
mov
add
mov
mov
inc
sub
inc
scas
inc
ljmp
mov
and
js
fchs
mov
insb
in
arpl
incl
bnd
lock
loope
loopne
test
xchg
ljmp
sbb
es
insb
mov
aaa
rcr
mov
push
push
mov
xchg
jge
outsb
mov
adc
test
dec
orl
xchg
xchg
out
rcrl
push
lea
dec
mov
fiadds
in
adc
scas
inc
sub
test
cmp
pop
xchg
push
sbb
cmp
out
mov
test
and
call
push
repnz
aad
sbb
jns
fsubr
or
les
jl
je
cld
out
sbb
xor
mov
jbe
jg
shl
lcall
icebp
jnp
in
or
xchg
add
test
int
pushfw
cmp
lock
ja
adc
or
jle
xchg
jb
sbb
cmc
push
pop
pusha
out
push
mov
sbb
and
fs
mov
add
ljmp
leave
loope
shlb
out
or
or
pop
add
mov
adc
pop
jl
mov
mov
inc
aam
les
cmp
add
push
xor
mov
mov
xor
cmpsb
or
mov
arpl
and
inc
mov
in
nop
int
pop
call
pop
jne
into
mov
cli
xchg
xor
pop
icebp
pop
nop
enter
lock
in
inc
sbb
cld
aaa
ret
dec
cmp
pop
pop
notl
mov
inc
mov
inc
pop
add
ret
int3
out
inc
push
outsb
mov
xchg
sub
addr16
incb
test
xchg
in
inc
sbb
mov
jp
jecxz
rep
cltd
dec
loope
cmp
dec
xor
fisubl
sti
pop
inc
mov
insl
insb
push
hlt
out
and
imul
movsb
loop
fxch
xchg
scas
int
inc
cmp
adc
xchg
mov
mov
dec
xchg
sub
gs
out
sub
nop
push
js
sar
xor
dec
and
adc
into
inc
sahf
mov
lcall
sbb
pop
jno
jp
add
xor
xor
pop
hlt
pop
cli
es
and
mov
pop
xchg
idiv
mov
xor
loope
cmp
xchg
cmp
xchg
push
sti
add
iret
xchg
mov
jns
testb
push
mov
push
mov
xchg
lahf
lods
std
cli
dec
pop
push
enter
and
lock
mov
cmp
test
adc
outsl
jno
je
push
scas
ds
xchg
nop
or
orb
mov
jg
js
lret
jge
mov
sarl
loope
sub
pop
divb
sbb
xchg
divl
pop
pop
stos
push
sbb
mov
lds
or
mulb
and
scas
shrl
enter
mov
out
aas
ljmp
movsl
repz
or
in
jl
cmp
insb
sub
and
dec
push
stos
insb
das
daa
inc
cmp
dec
or
testl
mov
cmp
sbb
in
or
push
push
fmull
mov
imull
cmp
mov
pop
add
pop
jmp
mov
pop
rorb
jno
sub
in
mov
cmp
push
pop
xor
fwait
out
sbb
popa
jle
jge
roll
imul
loop
sarl
imul
fstl
dec
shlb
test
xchg
daa
pop
xchg
ljmp
jo
sub
push
cs
cmpsb
add
fdivrp
inc
sub
les
dec
mull
stos
and
sub
jmp
push
dec
je
nop
mov
sbb
cmpb
pop
fs
jae
and
cmpsl
vpsadbw
or
inc
ret
stos
cmpsb
stos
lods
pop
shrl
ret
dec
jge
in
subb
ljmp
mov
lods
jae
lock
scas
adc
fmull
fstl
repnz
icebp
mov
pop
add
sti
xchg
push
ficomps
fistpl
stos
sbb
movsb
push
imul
push
bound
sbb
push
cmp
faddl
push
or
cmp
das
lods
imul
aam
enter
jo
clc
jbe
xchg
leave
call
jle
test
ja
out
dec
push
add
stos
jo
sti
shll
lea
pop
mov
mov
jne
repnz
adc
xor
mov
ljmp
dec
xchg
nop
pop
push
lods
xchg
bound
loope
mov
ja
nop
adc
sbb
dec
ljmp
xorb
mov
loopne
jmp
shlb
cld
xor
push
sarb
movsl
xlat
sbb
adc
sti
pop
mov
mov
lea
cmp
jnp
push
xchg
fdivr
imul
les
xchg
dec
arpl
sub
add
xor
movsb
je
mov
push
js
aas
push
scas
das
jno
lock
je
xor
jne
sahf
or
repz
xor
lea
jb
inc
jmp
cmp
adc
adc
ss
andl
outsl
jno
out
cli
leave
arpl
popa
data16
lods
and
aas
scas
mov
aas
or
out
jg
stos
pop
or
xchg
and
mov
cmp
movsl
jp
mov
sbb
int3
ror
or
mov
dec
in
cmp
fnstsw
insl
das
lock
ret
sub
test
call
pop
add
cmpsb
out
sbb
add
push
or
outsb
imul
jge
sbb
cmp
sahf
jg
adc
pop
adc
push
fbld
mov
jl
loope
fwait
sub
jecxz
and
push
fucom
enter
and
mov
add
fs
loope
mov
leave
push
cmp
mov
mov
mov
jae
xchg
or
jb
push
fdivrs
imul
ficompl
inc
je
xor
pop
jmp
sbb
sub
dec
sub
mov
fwait
push
mov
or
dec
cmp
xlat
pop
ret
cmp
dec
cmpsl
pop
pusha
aad
xor
orl
decb
dec
push
push
jae
xchg
mov
or
mov
jle
imul
lods
subb
fcom
idivl
sub
test
roll
xorl
movsb
cmpb
mov
bound
int3
or
das
aas
sub
int
sub
fwait
mov
push
jp
push
dec
sub
in
cmpsb
clc
int3
adc
mov
sbb
jle
inc
inc
orb
mov
stos
sahf
and
in
lcall
jge
mov
call
jp
pop
fdivs
dec
adc
popa
aad
dec
ficoms
mov
call
lret
mov
scas
xor
cwtl
lret
xor
push
jmp
mov
mov
test
xor
ret
movsb
xor
sbb
cmp
mov
iret
test
xchg
sub
aaa
loop
aam
and
lcall
test
and
fs
aas
adc
aam
sub
push
or
xor
push
pop
cli
lods
nop
repz
fiadds
mov
in
loop
push
cmc
jge
mov
repz
ret
shrb
fisttpll
dec
push
sti
and
lds
imul
mov
iret
insl
js
rol
dec
dec
push
sbb
std
aas
ljmp
rcll
add
jmp
or
push
daa
cs
cmp
sub
jecxz
and
adc
jb
mov
adc
pop
and
daa
sub
stc
jp
mov
sbb
ds
pushf
enter
ljmp
popf
rcl
sub
or
push
xor
jle
mov
fdivs
aam
out
jmp
je
add
incb
popf
into
push
mov
scas
cmp
cmpsl
adc
adc
mov
xchg
or
aas
push
dec
sbb
lds
lods
loope
adc
and
xchg
inc
rcrb
cwtl
jge
jecxz
cmpsl
jbe
xchg
adc
stos
pusha
cwtl
add
adc
sub
es
pop
cmpsb
aam
and
mov
sub
adc
or
jecxz
test
cmp
push
jne
add
pushf
fidivl
test
into
cli
bnd
sbb
fsts
fisubl
adc
or
std
pop
dec
bnd
dec
adc
cmpsb
sub
jl
imul
jp
xchg
cs
mov
mov
xchg
stos
fldcw
je
cs
pop
test
adc
sub
pop
cmp
les
rolb
xor
mov
inc
jle
sub
or
ret
mov
xchg
mov
and
sub
icebp
jns
orl
pop
jne
add
in
xor
pushf
ret
fcomps
push
fabs
daa
xchg
nop
or
add
sub
jnp
fwait
pop
aad
mov
cmpsb
sbb
mov
sbb
clc
arpl
or
jne
adc
and
mov
and
faddp
aam
dec
sub
cmp
orl
out
ss
dec
ret
insl
test
dec
mov
fs
add
outsl
js
xor
xchg
mov
adc
iret
in
push
pop
jae
dec
dec
xor
xchg
or
mov
dec
rcr
clc
inc
and
push
push
jecxz
cs
jbe
decl
fmull
xor
mov
dec
loop
jb
fs
add
jl
daa
adc
add
mov
adc
cmp
xor
jb
cmp
in
subl
jbe
push
shll
inc
add
aad
xor
fists
add
mov
bound
add
movlps
xchg
dec
mov
xchg
out
fwait
das
inc
movsb
sub
test
inc
clc
imul
leave
mov
ja
xchg
js
aas
movsl
cli
add
adc
jle
mov
add
xor
icebp
sbb
jle
call
lahf
mov
ror
data16
mov
pop
mov
pop
sub
ss
mov
and
xor
pop
jge
pop
adc
std
or
xchg
xor
mov
pop
jmp
mov
xchg
mov
sub
mov
dec
test
mov
outsl
notl
pop
xlat
add
add
cwtl
fdivrs
push
mov
cli
outsl
inc
push
gs
nop
ljmp
dec
adc
icebp
mov
int3
in
fdivs
fdivr
sub
stos
cld
es
push
cmc
hlt
pop
pop
xor
insl
pusha
jl
out
stc
daa
cwtl
ds
js
repnz
and
xor
sub
and
jo
test
dec
mov
xchg
adc
inc
dec
xor
xchg
shll
jbe
fisubs
cmp
dec
out
shlb
cmc
ret
and
jae
lcall
repnz
push
inc
cmp
je
mov
push
push
lods
out
scas
aam
ja
sbb
aam
lcall
push
nop
pop
push
sbb
std
aad
cmp
out
sbb
dec
sar
out
push
rcrl
pop
xchg
fbstp
mov
arpl
fstpt
punpcklwd
dec
out
into
sub
mov
aas
cmp
xchg
repnz
cmp
arpl
into
mov
inc
rcrb
sahf
mov
inc
call
mov
lahf
xor
xchg
push
and
mov
pusha
sbb
cmpsb
jge
out
adc
dec
push
adc
mov
xchg
push
insb
inc
mov
rcrl
inc
inc
hlt
xchg
jne
in
js
ja
jo
jl
xor
push
mull
mov
insb
xchg
sahf
stos
jns
xchg
adc
pop
xchg
mov
stos
pop
inc
sub
bound
adc
xchg
cltd
fs
repz
add
jns
std
inc
sbb
jne
fldcw
cmpsl
fs
arpl
aad
mov
cmp
and
mov
sub
orb
and
xor
cwtl
loopne
sbb
lods
dec
and
pop
cltd
lds
pop
add
ds
popa
mov
mov
mov
mov
out
push
jmp
mov
shlb
sub
lcall
or
pop
shrb
xor
jno
adc
popf
sarb
call
jno
mov
sti
or
xchg
cli
jne
iret
hlt
adc
outsl
and
xorl
sar
pop
cli
inc
xchg
mov
sbb
enter
jmp
inc
out
jmp
jae
js
pop
out
mov
cmpsb
inc
cmp
les
aas
cs
stos
xor
mov
ret
out
les
jns
sub
cmc
mov
mov
test
sbbb
icebp
push
arpl
pop
cmp
xchg
aad
loopne
jg
in
cmpl
sbb
cmp
mov
imul
inc
sub
fnstsw
notb
push
pop
xor
in
and
inc
and
jno
sub
aas
add
mov
scas
movsl
cwtl
jecxz
outsb
push
outsb
xchg
adc
icebp
mov
adc
daa
insl
nop
imul
lods
pop
shll
adc
xor
mov
andl
movsl
mov
int
lods
sti
xchg
and
outsl
lods
xor
loop
sbb
les
lock
pop
xchg
jae
mov
into
or
nop
push
and
jae
pop
dec
es
adc
sbb
mov
cmp
repz
cmp
jle
stc
cmp
sbb
insl
loopne
xor
icebp
or
rorb
test
out
mov
vpmaxsw
pop
push
pop
push
inc
adc
push
pop
lock
jge
enter
lret
jae
cmp
clc
cmp
sahf
out
pop
es
pop
cmp
std
fdivrs
leave
aad
pop
daa
push
jge
sbbb
sbb
insb
lahf
mov
aaa
insb
inc
xchg
testb
mov
push
andb
std
test
push
push
xor
mov
stos
push
mov
sti
movsb
and
adc
fbld
ss
inc
and
mov
lahf
fs
cmpl
das
hlt
or
mov
clc
push
cmpsb
inc
and
xor
inc
test
arpl
sbb
js
in
push
and
inc
xlat
cltd
xlat
pop
arpl
jo
bound
ss
mov
lock
pop
mov
outsl
jo
jl
jno
movsl
lock
icebp
aaa
mov
mov
or
rclb
inc
bnd
mov
add
mov
push
jecxz
nop
nop
sub
in
jge
lret
int3
and
add
sbb
cmc
adcb
in
jge
stc
mov
and
cmp
mov
xchg
push
xchg
bound
ljmp
das
pushf
sub
cmp
push
pop
push
jno
pop
cmpsl
loopne
cmp
lret
jle
inc
out
xchg
push
xchg
mov
mov
stos
jp
xchg
sbb
xchg
cmc
hlt
and
xor
leave
xchg
stos
mov
insl
and
mov
pushf
mov
daa
pop
xchg
jge
add
into
daa
xchg
test
stc
pop
and
das
orb
xchg
jmp
pop
pop
fisttps
mov
shlb
movsl
cltd
dec
test
lret
xchg
sub
sbb
or
pop
fldcw
cmp
fisttps
inc
stos
sbb
jl
inc
and
xchg
icebp
mov
mov
loope
add
pop
addr16
mov
cmc
jp
push
jle
or
adc
push
inc
mov
cmpsl
loope
fcomps
sar
in
dec
cwtl
add
cwtl
mov
xchg
sbb
mov
sti
scas
popa
mov
clc
das
icebp
and
mov
pop
arpl
jbe
fwait
cmp
inc
adc
xchg
lret
cmp
and
mov
adc
cmp
fwait
push
fdivr
cmpsb
jno
xchg
mov
push
stos
cmp
sbb
jle
out
add
icebp
sub
inc
cmpsb
add
in
adc
lock
es
jne
xor
dec
xor
sahf
push
cs
sub
sub
add
jne
dec
inc
xchg
inc
push
xor
sbb
xor
or
mov
test
cmpsb
leave
jb
aas
push
or
in
lret
pop
push
xor
stc
add
jp
push
and
loop
sbb
mov
idivb
in
idivl
and
cmp
add
inc
stc
bound
pop
insb
xor
ret
or
fwait
dec
stos
sbb
into
xchg
sub
add
cltd
daa
xor
ret
je
push
mov
aas
ds
mov
mov
bound
adc
es
xor
mov
loopne
ret
lahf
je
mull
stos
push
cmp
or
outsw
ret
shlb
call
xor
push
stc
stc
cmp
int3
insl
mov
mov
scas
jg
add
test
jl
lret
xchg
std
shr
pop
fisubl
sbb
adc
inc
cwtl
sub
mov
jno
xchg
xor
hlt
jb
cmp
aad
out
loop
test
mov
or
test
xorb
mov
orb
inc
hlt
in
inc
mov
int
stc
fildll
mov
mov
cmp
cld
test
insl
cmpsb
dec
xchg
add
push
xchg
jg
xlat
pop
sub
push
int3
mov
shr
dec
popf
pop
fcom
sarb
scas
cmp
pop
mov
add
insb
mov
clc
mov
and
mov
sbb
enter
faddp
pop
dec
in
add
pop
pop
cmp
fsubrs
inc
or
call
jo
add
pop
xchg
push
mov
cmp
adc
sbb
push
orb
dec
shr
push
sahf
movsb
xor
shr
push
mov
movsl
push
outsb
cmp
mov
push
addl
inc
fistpl
jle
dec
sbb
decl
jmp
jbe
dec
in
sub
scas
clc
and
not
pop
sbb
int
lcall
and
sbb
ret
movsl
movsb
adc
js
cmp
sbb
sub
lods
cmp
jns
aad
xorb
adcb
scas
pushf
dec
mov
fmul
xchg
push
push
mov
push
mov
movsl
scas
ja
jmp
dec
test
negl
xor
outsl
lods
and
mov
pop
aad
pop
ret
sbb
int3
imul
sbb
jmp
xor
xchg
jmp
dec
sahf
adc
fxch
imull
ret
or
daa
pushl
imul
test
dec
xchg
aam
addb
sbb
xchg
ret
fsubr
mov
adc
mov
or
or
inc
adc
das
jne
sbb
in
adcl
shl
cmc
lret
aad
pop
pushf
mov
call
pop
cld
std
inc
loopne
fsubrs
rcr
lock
fstl
std
xchg
and
lahf
add
jae
push
cmp
es
dec
in
xor
jns
insl
test
and
xor
xchg
je
cmpsl
mov
cwtl
fcomp
push
out
movsb
pop
push
paddusw
aad
popl
cwtl
cmp
dec
gs
jb
dec
push
push
sub
cmpsb
mov
push
pop
insb
or
adcl
xchg
scas
and
pop
jmp
ja
push
sahf
sbb
pop
jnp
mov
hlt
jb
mov
mov
repz
ljmp
shrl
add
arpl
sub
adc
imulb
mov
pop
flds
or
mov
mov
dec
jge
scas
and
arpl
jp
sbb
jmp
fldenv
push
nop
sbb
stos
scas
or
pop
jae
inc
pop
inc
and
ret
xor
sub
sbb
fstpt
outsl
into
les
adc
pop
pop
adc
shll
lods
mov
dec
addr16
jnp
jg
divl
jno
in
fdiv
add
and
test
pop
sbb
cltd
cmp
test
lods
shl
push
jae
xor
push
mov
psubusw
mov
ret
pop
sub
pop
mov
fisubrl
cmovl
pop
and
out
pop
push
add
cltd
or
mov
imul
stos
xchg
and
icebp
push
or
scas
mov
ds
repz
int3
add
sub
inc
mov
out
ficompl
cltd
gs
sarl
aad
mov
mov
push
ret
adc
add
jne
movsb
pop
insb
movsl
imul
in
idiv
push
sarb
in
mov
xchg
std
xchg
dec
sub
test
and
lcall
mov
sub
arpl
mov
push
int
arpl
mov
xor
mov
jge
mov
fldcw
shrl
icebp
and
fwait
daa
jge
stc
ret
js
jle
xchg
andb
cmc
xchg
out
pop
push
pusha
cltd
mov
sub
mov
scas
mov
add
inc
mov
inc
xchg
pusha
mov
cmp
xor
xor
in
cld
push
cli
mov
icebp
jp
scas
sub
cmpsb
sbb
fistps
ret
mov
pusha
repnz
popf
sbb
push
dec
push
div
das
sub
mov
inc
mov
inc
out
add
mov
xchg
push
aaa
outsl
daa
mov
push
adc
and
cmc
pop
mov
dec
loope
or
push
enter
movsb
push
mov
fistpl
lahf
enter
mov
stos
mov
xchg
in
inc
or
inc
pop
cmpsb
nop
mov
fdivrl
cmp
pop
lea
push
xor
ret
jnp
shl
or
sti
sub
pushf
mov
adc
sub
enter
std
mov
jge
out
repnz
cmp
pop
mov
mov
notb
pop
inc
mov
mov
lods
rcl
and
hlt
sbb
test
and
pop
push
adc
dec
ret
add
cmp
out
xchg
loope
push
dec
icebp
jo
lss
test
cld
test
insb
flds
jnp
add
mov
call
cs
iret
fcoms
cld
psrad
nop
je
mov
pop
lds
cs
xor
ja
aad
ljmp
out
inc
roll
je
fmulp
loop
mov
out
or
dec
push
sbb
xor
adc
stos
leave
imul
sub
cmp
loop
pop
pop
cmp
fisttpll
sub
inc
imul
jp
push
xchg
xchg
push
mov
out
mov
sarl
and
ds
mov
imul
or
std
pusha
ret
mov
sahf
pushf
movsl
js
or
inc
inc
sbb
jecxz
jno
mov
push
mov
adc
rcl
adc
call
mov
push
pop
aas
in
fwait
jle
mov
ljmp
pop
lods
pushf
or
pop
and
lret
mov
mov
ret
lock
dec
push
mov
sbb
iret
sbb
repz
cmp
or
aad
aaa
xchg
leave
push
push
sbb
out
pop
mov
xor
insl
sub
vpsllvq
sti
into
int
test
clc
test
and
in
rcll
hlt
jg
or
adc
xchg
and
xor
jge
sbb
inc
aas
push
std
fwait
jecxz
in
dec
xchg
or
hlt
insl
inc
sarl
sbb
cmp
aam
in
rcl
or
and
sub
lods
mov
fadds
shlb
ror
sbb
adc
mov
push
shlb
sarl
test
fwait
ret
jno
sub
mov
in
mov
in
and
pop
pop
add
out
dec
xor
jns
out
stos
cmpsl
xchg
mov
rcrl
loop
aas
pushw
flds
mov
imul
aas
dec
pop
mov
arpl
lods
fucomp
sbb
sbb
pop
xchg
insl
test
jge
mov
adc
push
loope
inc
popl
mov
push
or
mov
popl
jp
fcompl
negb
rorl
leave
inc
test
out
das
and
loopne
push
in
sub
hlt
movsb
gs
frstor
je
sarb
rolb
scas
cmpsb
aas
xor
push
in
mov
fmuls
inc
stos
pop
shl
pop
add
js
pusha
fwait
mov
loope
sahf
or
xorl
mov
sub
jnp
mov
add
adc
cmp
fmull
or
movsl
sbbl
mov
adc
negb
mov
and
sarb
push
xlat
fstl
stos
ja
stos
cmp
jp
or
pop
xor
xchg
fdivl
repnz
sbb
roll
push
mov
add
arpl
mov
out
xchg
mov
clc
outsb
pop
rol
cmp
pop
mov
mov
icebp
inc
fnstenv
xor
mov
dec
ret
jb
loop
clc
lods
cs
mov
test
push
pusha
mov
shlb
idivb
sbb
push
sbb
jbe
fwait
jo
movsb
cmc
xchg
dec
std
out
push
stos
popf
into
into
call
rorb
inc
test
fdivp
pop
fdivr
lret
xchg
notl
out
ja
ja
lock
insl
andb
sub
push
fstl
xor
insl
cmovl
and
divb
xchg
xor
sub
std
jno
xorl
hlt
add
xor
push
xchg
inc
jns
mov
fistl
jne
inc
mov
call
cmc
jne
xor
movsl
pop
sub
xchg
add
inc
inc
lods
jg
gs
push
cmp
adc
inc
fs
push
dec
ljmp
orl
les
add
pop
push
imul
fists
hlt
mov
mov
dec
jae
imul
popf
and
xor
jne
out
mov
push
or
pop
jns
sub
imul
daa
test
push
cli
push
cmc
mov
or
inc
add
roll
mov
adc
pop
jecxz
xchg
mov
inc
or
xchg
sub
inc
ret
mov
pop
ss
sub
adc
addr16
orl
jae,pn
push
jg
repz
push
aam
lret
cmpsl
rolb
add
push
and
sub
scas
mov
pop
loop
xor
iret
sbb
pop
jge
xchg
test
ja
cmc
daa
leave
ficoms
and
nop
mov
insb
andb
imul
xchg
inc
mov
adc
xor
sbb
fdivrp
jo
cs
adc
pop
adc
and
sbb
fistpll
pop
je
cmpsl
call
xchg
mov
insl
push
add
xor
mov
testl
out
mov
stc
adc
mov
cmp
pusha
add
push
je
test
jmp
jp
std
out
mov
xchg
sbb
add
lcall
lahf
and
lahf
add
jns
js
add
mov
enter
lret
pop
inc
dec
jl
out
in
or
mov
pushf
movsl
dec
pop
dec
into
xor
sub
loop
push
add
mov
out
cmp
mov
lcall
add
xor
adc
je
das
loope
insb
pop
pop
movb
ffreep
mov
in
mov
dec
outsl
xorl
ds
enter
add
pop
popa
xchg
jg
data16
insb
addr16
ret
add
inc
fmuls
shl
iret
dec
lds
lahf
sub
dec
add
out
adc
dec
das
and
cmp
mov
es
mov
or
imul
int3
test
loopne
and
stc
aaa
fildll
ss
xchg
aas
jns
sub
jne
out
adcb
pop
xchg
mov
mov
pop
rorb
jmp
cmp
dec
icebp
mov
js
ret
mov
jmp
out
lcall
mov
aas
mov
sub
jb
lds
mov
mov
sbb
cmp
push
inc
inc
sbb
icebp
jge
push
shll
add
imul
fadds
xchg
pop
enter
stos
mov
sbb
aas
roll
dec
out
cld
std
insb
test
push
push
mov
adc
mov
lahf
xor
dec
add
xchg
dec
mov
cltd
ljmp
shll
cmp
mov
out
out
daa
push
dec
aad
or
add
push
rol
adc
scas
std
into
push
inc
cmp
inc
repz
fwait
mov
lea
pop
sbb
lods
lods
aad
xor
pop
inc
popf
bound
sbb
loope
inc
push
sbb
ret
mov
fcoml
pop
mov
shll
dec
lock
stos
add
movsl
aam
xchg
push
push
repz
jg
jbe
loope
pop
inc
andl
xchg
push
mov
call
xchg
fildl
int3
or
xchg
ja
stos
insl
adc
lock
jp
pop
jmp
push
mov
mov
adc
xor
icebp
idivl
addl
and
xor
xchg
xor
icebp
adc
cmp
and
lods
xchg
sarb
cmp
fcmovnb
fnstenv
cwtl
inc
fwait
enter
clc
cmp
jb
sbb
not
stos
xchg
mov
aas
inc
aas
test
sbb
movsl
rclb
rorb
mov
stc
mov
imul
xlat
mov
inc
outsl
lahf
push
mov
xchg
test
outsb
xor
dec
dec
aaa
in
ljmp
jno
mov
pusha
pop
sbb
or
and
xchg
push
pop
jns
leave
mov
stos
pop
jl
fs
xlat
sbb
dec
pop
fnstenv
and
xchg
sbb
pop
mov
xchg
ja
rorb
cmp
sbb
sub
xchg
xchg
jecxz
add
sbb
and
adc
jbe
inc
addr16
inc
inc
xchg
jb
daa
ljmp
xchg
and
mov
fidivl
xor
cmp
push
jp
call
icebp
jl
dec
mov
cmp
pop
pop
xchg
jg
sub
pop
sbb
lahf
inc
pop
out
test
int3
push
bound
add
pop
xor
mov
sahf
pop
adc
inc
loopne
adc
lahf
ss
push
sub
push
sbb
adc
sub
pop
lock
out
mov
or
fsubl
leave
xor
or
js
es
sbb
fsubp
int3
fsubrl
ret
ret
rdmsr
out
or
lds
xchg
inc
lret
and
ljmp
test
lock
data16
and
and
mov
xchg
push
push
push
mov
xor
pop
sti
es
dec
jne
xor
ds
inc
push
mov
stc
add
callw
fisttpl
xchg
jecxz
sbb
mov
repnz
inc
or
xor
add
mov
jg
stos
les
xor
sub
dec
lds
cmp
cmp
aaa
into
and
outsl
notl
or
movsb
lcall
pop
add
jns
std
inc
sbb
or
or
lea
je
xor
fiadds
cmp
and
push
pop
out
jmp
push
nop
push
push
adcb
mov
push
jecxz
outsl
addr16
arpl
je
fxch
ja
dec
subb
ja
stc
jmp
fisttpll
nop
dec
cmp
xchg
fmul
out
mov
mov
mov
hlt
add
dec
adc
popa
jp
cmp
js
loop
fsubrl
sub
addr16
xchg
popf
cli
pop
cmp
outsl
daa
stos
push
pslld
cmp
stos
adc
dec
fdivs
fbld
jg
aam
mov
cli
ljmp
pop
push
ja
movsl
out
bound
lock
jb
mov
and
sldt
jb
iret
mov
xor
icebp
inc
xchg
pop
xor
mov
sahf
sti
mov
jecxz
mov
adc
loop
mov
int
scas
stos
test
jge
sbb
or
hlt
dec
lods
sbb
aaa
push
cwtl
sbb
mov
jae
mov
rolb
insl
cltd
fldt
pop
adc
or
divb
add
sub
divl
pushf
adc
movsb
jo
jbe
stc
nop
shll
ror
notl
mov
jae
ud2
push
pop
xor
test
mov
mov
fwait
nop
mov
adc
pushf
pop
cli
push
data16
jbe
movsb
sbb
inc
xchg
xor
mov
mov
scas
jbe
cwtl
mov
clc
ds
mov
xchg
and
test
mov
pop
stos
mov
xor
xchg
call
and
jmp
push
out
add
ss
movsl
cld
mov
aas
scas
fnstsw
sub
sahf
je
mov
jno
cmpsb
outsl
mov
mov
or
and
pushf
clc
mov
idivl
xchg
mov
mov
xor
je
adc
xchg
mov
mov
ss
stos
ds
iret
out
dec
rorb
not
repz
lds
dec
fdivl
mov
mov
fbld
popa
dec
shrl
movl
addl
out
pop
or
xor
enter
mov
or
outsl
mov
frstor
pop
sbb
mov
lock
lea
in
in
pop
add
das
mov
lock
dec
out
in
sub
and
cld
int3
movsb
lods
pop
fwait
lcall
test
or
push
or
ret
or
lcall
fwait
xchg
jmp
adc
outsl
fwait
scas
out
mov
push
xlat
addr16
mov
movsb
test
bound
and
inc
xchg
mov
dec
bound
shll
push
stos
adc
xor
rorl
inc
repnz
mov
mov
aad
mov
inc
dec
cmp
push
pop
jp
ficoml
dec
pop
movsb
mov
cmp
adc
imul
mov
in
adc
push
stc
push
push
repnz
clc
adc
sub
shlb
call
push
and
mov
xor
mov
cmp
push
js
jno
out
loop
out
cli
inc
mov
scas
lock
or
or
incb
bound
add
pop
sub
pop
movq
inc
pop
arpl
xchg
leave
dec
push
jae
inc
ret
flds
loopne
dec
xlat
pop
fcompl
in
jge
mov
dec
sub
pop
adc
fldt
arpl
stos
dec
xchg
ds
cs
pop
xor
jge
rcl
mov
mov
mov
out
outsl
lret
dec
xchg
ss
and
cld
cmpsb
push
sahf
sub
and
ret
mov
xchg
js
pop
gs
jg
mov
test
xchg
mov
call
and
cmp
pop
enter
lods
mov
loopne
jl
push
jmp
inc
pop
ja
int3
push
sti
jo
mov
inc
push
insb
clc
out
jo
in
or
test
inc
js
lods
movsl
sarl
test
out
pushf
inc
scas
add
addr16
jne
loop
ret
push
shrl
adc
enter
fsubrl
sub
xor
pusha
repz
fsubl
pop
mov
adc
add
nop
js
sbb
jg
sbbl
pushf
xor
and
out
cmc
clc
fucomip
iret
cmp
shrl
shrb
sub
lcall
lahf
inc
dec
cmp
dec
into
mov
fldt
shr
jle
mov
andl
and
mov
movsb
jae
mov
adc
lods
jge
jb
into
or
push
add
pusha
jl
push
test
mov
push
out
lcall
and
and
in
pop
test
sbb
sbb
mov
lret
pusha
test
outsb
inc
or
fisttpll
clc
mov
iret
movsl
leave
sbb
push
in
jo
es
nop
and
push
mov
xor
jge
mov
push
ds
pop
jno
lret
js
aam
xor
fnsave
add
stc
and
ret
lea
cmp
inc
xchg
pop
in
test
orb
test
push
cwtl
mov
arpl
lret
cmp
outsl
add
je
cmp
adc
sahf
into
sub
outsl
scas
loopne
lock
mov
in
lret
hlt
imul
repnz
add
sbbl
jnp
lods
jno
push
dec
adc
mov
stos
xchg
mov
jmp
sub
push
aas
leave
aas
sub
pop
out
xor
imul
popa
insb
xor
mov
ss
mov
mov
cld
mul
pop
std
pop
fs
aas
xchg
inc
push
mov
outsb
mov
and
loop
mov
push
mov
mov
ljmp
inc
pop
loope
push
xor
loope
sub
shl
dec
jge
push
push
lods
push
adc
jmp
imul
divl
sbb
xchg
or
jge
xchg
and
int3
xchg
test
insb
push
popf
mov
or
insl
adc
sub
dec
imul
and
mov
mov
cmc
push
dec
aaa
pop
sub
and
fisttpll
xor
add
or
fs
push
pop
lods
stos
mov
jno
adc
loop
adc
jb
dec
cmp
cwtl
and
sbb
jb
lods
iret
xchg
in
enter
xchg
xchg
xchg
icebp
sbb
xor
mov
popa
or
aad
out
pop
mov
inc
xor
out
inc
insb
mov
cmp
out
outsb
lds
jge
int
pop
jnp
mov
push
lods
ja
dec
arpl
out
call
mov
in
jp
dec
dec
imul
dec
jb
xchg
adc
cmp
xchg
aam
pop
fimuls
ret
inc
ret
out
cmp
in
xor
movsb
xchg
sbb
fisubrs
inc
lods
push
inc
cs
js
xor
cs
push
or
push
sub
std
jne
jecxz
test
sbb
sbb
xor
add
add
or
imul
xor
xchg
mov
sbb
push
flds
sahf
mov
jo
loopne
jno
jge
mov
aam
sbb
mov
xor
and
fnstcw
jbe
enter
imul
notl
sub
add
in
out
out
inc
ret
adc
add
popa
ds
lds
rol
pop
nop
pop
xor
ret
sub
bswap
sub
push
mov
pop
adc
out
sbb
data16
and
and
insl
pop
cmp
add
mov
push
xor
sbb
xor
mov
lahf
in
loop
pop
movswl
divb
xchg
push
pop
mov
ss
push
pop
jb
push
scas
sub
cmp
ret
or
es
add
mov
mov
pusha
cmp
cs
stos
sbb
neg
fildll
push
scas
pop
xchg
push
test
in
in
fdivrl
shlb
xchg
rolb
inc
mov
testb
ficompl
imul
test
outsb
pop
test
xlat
adc
dec
fs
adc
ret
fcmovbe
sbb
aad
nop
cli
test
repz
sub
cmovo
inc
inc
fiaddl
mov
sahf
pop
add
test
pop
rorb
sbb
mov
push
jno
loop
pop
mov
ror
daa
dec
test
adc
je
call
cmp
xchg
sub
xlat
mov
sbb
cmc
mov
pop
add
inc
lds
dec
mov
test
or
sti
push
test
xor
jo
adc
mov
push
add
mov
jbe
dec
lret
pusha
push
movsb
jmp
aad
mov
pop
or
jns
jmp
push
aaa
outsl
push
into
push
bound
inc
mov
jo
cs
push
jne
xor
daa
sbb
inc
jmp
aam
rolb
gs
adc
add
out
pop
dec
jl
sub
or
mov
pop
cmp
or
fs
push
mov
push
mov
mov
inc
push
pop
jbe
pop
test
and
sbb
js
lret
adc
stc
jle
mov
mov
xchg
inc
stos
icebp
inc
xchg
xchg
cmc
adc
inc
scas
int
sbb
outsl
fldenv
imul
or
add
ror
data16
cltd
fistl
leave
push
add
lods
cmovge
cld
xchg
xchg
cld
adc
xor
sbb
xchg
std
and
mov
add
and
scas
jp
adc
aam
jmp
inc
cmp
loop
cmp
mov
xchg
xchg
jge
cwtl
push
in
fs
addb
popl
loopne
out
cmpsl
adc
lods
adc
inc
rorb
aas
in
in
out
mov
jecxz
or
mov
fwait
rcrl
and
rorb
ss
sti
sub
cmp
cld
lahf
iret
add
sar
xchg
cmp
push
pop
sahf
dec
mov
cmpsb
jne
dec
push
mov
push
xor
sub
mov
push
fiadds
dec
lods
scas
add
in
lahf
clc
das
call
or
loopne
lret
pop
mov
mov
out
out
sbb
dec
push
adc
or
pushl
subb
push
xlat
pop
test
and
pop
test
hlt
jnp
add
xlat
mov
aaa
ljmp
mov
add
jp
nop
out
les
pop
sahf
outsb
bound
pop
xor
test
clc
pop
daa
jbe
lret
stos
cli
lss
mov
mov
into
ja
pop
adc
dec
lock
and
jae
pushf
jnp
ja
adc
out
pop
push
push
xchg
cmpl
mov
xchg
mov
cmp
mov
add
ficoml
xchg
mov
sub
mov
sbb
stos
add
push
mov
stos
inc
outsb
faddl
xchg
imul
cwtl
inc
rcrl
jnp
je
add
clc
and
shl
jle
mov
mov
aaa
mov
out
sub
insb
add
push
dec
out
mov
andb
jne
cli
xor
add
aad
pop
jmp
jg
cmpsb
and
or
adc
push
xchg
stc
xchg
mov
sbb
neg
sub
aad
fwait
mov
cmp
rorl
popa
pop
sbbl
mov
pop
in
or
loopne
jg
outsl
aam
into
mov
testw
std
fisttps
sbb
lret
js
lods
iret
cmp
sbb
xchg
pushf
dec
call
add
gs
scas
addr16
jbe
ret
mov
adc
lea
sbb
or
out
call
inc
loop
inc
icebp
vpxor
fisubrs
je
dec
lea
repnz
sbb
cwtl
fs
cmp
int3
cmp
xchg
dec
shll
dec
fldt
xchg
sub
inc
jo
jp
dec
sub
sbb
in
pop
sub
xchg
rcll
dec
inc
mov
leave
push
add
pop
push
cmpb
jmp
xor
lret
scas
lret
das
jecxz
mov
cli
aas
xchg
sub
inc
cmp
mov
lcall
pop
fcomps
push
cs
inc
mov
in
iret
and
outsl
sahf
fstl
push
xchg
mov
pushf
sub
js
jle
mov
pop
push
pop
pop
push
xchg
fbld
ret
loope
push
push
mov
call
fcoms
sub
movsb
push
cmp
mov
std
add
push
cmp
hlt
mov
add
mov
push
add
mov
dec
adc
jo
popf
mov
mov
cmpb
dec
push
add
add
pop
mov
xchg
mov
pop
jo
int
push
test
leave
in
or
jb
inc
push
or
xchg
and
cmp
sub
pop
xor
fsub
cmp
xor
push
in
lcall
shlb
jne
les
pop
loope
add
push
addr16
mov
ds
imul
pop
push
aaa
inc
xchg
pop
add
or
cmpsl
and
ljmp
cmp
out
cmp
clc
js
mov
mov
call
adc
mov
pop
push
and
xchg
lds
jecxz
dec
movsb
cmc
inc
inc
aad
inc
sbb
fcompl
jmp
xchg
cmpsb
test
in
icebp
lcall
push
push
lock
cmpsl
add
jmp
inc
sbb
or
movsl
jae
push
dec
dec
mov
gs
in
mov
lcall
nop
cltd
or
inc
and
pop
jnp
pop
fnstcw
sbb
pop
lock
mov
and
pop
roll
xorl
shrb
fwait
push
pusha
dec
adc
add
push
inc
scas
les
sbb
push
movsb
pop
insl
filds
mov
int3
test
ja
shlb
stos
mov
cmc
xlat
xchg
cmp
hlt
rclb
int
repz
jecxz
popf
sbb
lea
dec
cmp
fdivrs
sub
pop
in
in
cmp
mov
imul
and
xchg
ss
mov
push
int
arpl
adc
cltd
cli
xchg
dec
data16
nop
call
mov
insb
scas
push
push
or
mov
stos
sub
or
dec
push
fisubrs
adc
or
xchg
sti
push
fwait
int3
mov
mov
je
or
xchg
shll
jl
sbb
sbb
xchg
or
mov
cs
aam
cs
jge
mov
dec
sub
inc
das
fcomps
dec
xor
pop
add
and
jl
bound
lock
pusha
adc
inc
mov
push
je
daa
xorb
mov
ljmp
xor
outsb
mov
mov
sub
sbb
enter
data16
je
rcll
or
xchg
insl
adcl
enter
and
push
adc
xchg
stos
jmp
pop
pusha
xor
fs
test
and
xchg
sub
ss
and
pop
shrb
popf
inc
or
cmp
and
je
mov
mov
xlat
pushf
roll
jl
imul
lock
testl
test
mov
and
or
in
push
cld
push
into
mov
pushl
cmp
cmpl
mov
ja
insb
pop
push
rorb
sbb
mov
popa
lods
leave
mov
mov
sub
cmp
cmp
inc
cmp
jl
imul
test
mov
outsb
test
aad
jno
loopne
dec
jp
pop
aad
mov
jp
sbb
pop
hlt
pushf
xchg
sahf
cmp
sub
pop
gs
cmp
jb
shlb
pop
pop
gs
mov
jbe
jge
mov
mov
xchg
subb
dec
jno
aas
vmovsldup
sbb
xchg
xchg
sbbl
jmp
dec
lcall
and
mov
xchg
sbb
xorl
xor
mov
cmp
mov
aaa
push
xlat
pop
mov
cld
sub
icebp
dec
sub
mov
pop
out
lds
ret
pushf
or
mov
mov
fisttpl
js
aas
push
and
ss
jl
mov
dec
jl
push
mov
mov
popa
mov
test
inc
ss
and
push
out
push
add
push
shlb
mov
jle
push
dec
push
push
add
in
arpl
inc
in
lret
mov
data16
pop
stos
mov
in
iret
ljmp
dec
push
mov
sbb
push
fwait
push
push
fnstenv
or
xor
inc
pop
daa
mov
cmp
loop
inc
mov
mov
pop
popf
mov
movsl
jmp
mov
adc
or
js
fildll
imul
jae
add
add
xchg
aad
loop
lods
jmp
and
xchg
push
rcrb
or
fcmovne
insl
js
mov
xchg
dec
add
mov
imul
lea
inc
adc
sub
les
pop
mov
clc
xchg
dec
addr16
jae
mov
clc
push
rcpps
ja
ret
dec
inc
and
dec
jb
addr16
jb
xchg
test
es
daa
jmp
hlt
fbstp
dec
and
rcll
repz
hlt
jno
int3
int
xor
std
or
jle
lock
ljmp
pop
sub
push
xchg
dec
pop
push
add
xor
pop
mov
mov
sbb
sbb
pop
sub
outsb
mov
push
mov
jecxz
cs
fistl
adc
dec
data16
ret
int3
cmp
aad
inc
pushl
or
clc
and
xchg
std
movsb
jb
fbstp
lret
ja
mov
mov
subb
jecxz
dec
mov
fwait
or
and
mov
int
addr16
lret
jecxz
mov
int3
mov
xchg
adc
pop
push
or
pop
cmp
sti
int3
mov
out
xchg
test
jle
shrl
adc
mov
out
or
cmp
xchg
xchg
or
fcompl
insl
sbb
cmp
dec
sub
fidivs
and
lret
dec
or
enter
cmp
fmul
jge
dec
push
inc
adc
ret
pop
and
mov
test
lcall
sbb
and
gs
sbbb
mov
das
lret
lock
dec
daa
mov
dec
pop
sti
shrb
mov
stc
test
repz
mov
adc
lcall
mov
jbe
jne
mov
jmp
je
enter
push
in
stc
repz
inc
gs
data16
out
mov
jo
sbb
or
sub
or
sub
clc
sub
ljmp
aas
mov
lahf
fists
push
xor
mov
jl
aaa
inc
ret
imul
paddd
sub
fidivrl
mov
jno
inc
xchg
dec
imul
fcompl
xchg
aas
pop
or
stos
cmp
adc
test
and
mov
addr16
loop
or
push
sahf
jmp
test
add
push
jl
mov
test
add
jo
rcrb
adc
inc
mov
add
fistpl
stc
or
mov
add
xlat
ja
fnstenv
sbb
jl
jo
jae
mov
mov
stos
pop
dec
add
dec
jbe
push
cmp
push
dec
inc
lods
jb
rcrl
enter
stos
inc
xchg
xchg
movsb
sbb
sbb
in
stc
mov
es
shrb
or
fdivrl
sbb
xchg
dec
mov
loope
sub
jns
jbe
or
push
sub
adc
lahf
mov
gs
call
rolb
or
test
pop
xchg
je
or
arpl
mov
pusha
sub
insl
ss
rol
mov
mov
icebp
test
addr16
jle
jg
enter
lret
inc
jge
js
insl
js
cmp
mov
aam
dec
into
mov
mov
cmc
dec
sub
sbb
xor
xchg
lret
int3
dec
add
movsb
xor
cmpsl
neg
xorl
or
mov
sbb
mov
divb
insl
ror
push
mov
les
icebp
sub
sar
sbb
aad
mov
inc
push
shrl
and
sub
inc
xor
ret
jl
loopne
fmull
mov
ljmp
arpl
aam
inc
pop
jle
dec
jl
out
repz
mov
mov
sbb
dec
test
lea
testb
dec
mov
inc
push
push
pop
lds
bound
adc
fcoml
je
cmpl
mov
push
fmuls
adc
ds
jmp
mov
jp
jns
add
test
inc
cmp
jnp
neg
inc
or
add
cli
inc
out
push
repz
loope
mov
data16
repz
cmp
sub
mov
mov
nop
xchg
lods
les
sub
sbb
in
jb
sahf
sub
shlb
lods
fistpl
and
pusha
push
sub
and
sub
or
mov
shl
fdivl
nop
jle
insl
in
gs
movsbl
mov
sarl
push
rorb
ficoml
cwtl
sub
dec
out
cmc
imul
lock
out
insb
dec
das
pop
mov
xor
in
dec
inc
fisubl
pop
pusha
push
sbb
push
push
mov
fnsave
pushf
in
lret
and
jbe
xchg
and
pop
adc
mov
adc
fninit
lea
add
test
sbb
and
adc
or
xlat
pop
aas
loope
sbb
xchg
repz
or
pushf
imul
push
jg
and
in
push
nop
sub
mov
je
aad
sbb
or
arpl
in
lds
arpl
push
ficoml
int3
sub
or
mov
fsubr
xor
pusha
mov
cmpsb
out
and
hlt
mov
cmpsl
xchg
neg
aad
xchg
adc
cmp
fsts
add
mov
in
jle
stc
loope
addr16
aad
int
and
adc
in
inc
xchg
and
shll
sbb
mov
pop
ret
nop
push
jb
pop
hlt
test
rcl
out
sub
aaa
cmp
mov
fildl
mov
jnp
push
xchg
lcall
outsb
cvtps2pi
xor
mov
mov
cmc
xor
les
std
mov
xor
lods
sub
js
cwtl
mov
sarb
mov
mov
addb
ret
inc
mov
push
test
sahf
add
and
lock
mov
cmpsl
les
notb
push
clc
cmp
mov
add
outsb
das
stc
push
enter
int
outsb
lcall
cli
dec
push
jae
mov
out
add
adc
cld
es
sbb
sbb
xor
jg
add
test
jg
fwait
jge
fwait
mov
insb
sbb
jno
xchg
and
or
pop
mov
sbb
mov
repnz
scas
mov
dec
lods
in
jb
mov
lret
cld
repz
mov
test
or
xchg
xchg
imul
xor
test
jp
das
cld
sahf
push
or
xchg
xor
clc
pushf
mov
aas
push
xor
popf
pop
push
adc
je
sbb
jae
loop
les
dec
jno
mov
add
jp
into
js
int3
pop
rorb
adc
bnd
sub
ret
test
inc
sti
into
ror
loop
xchg
outsb
inc
cld
ret
stc
sahf
out
ret
pushf
jno
loope
subl
packssdw
dec
mov
pop
push
and
pop
cwtl
xor
cmpsl
insb
push
pop
addr16
mov
loopne
xor
imul
sub
mov
dec
xchg
dec
inc
ret
sub
inc
stos
js
xor
movsb
fstpl
rcll
xor
cli
lods
clc
gs
lock
fmulp
dec
pop
add
add
cltd
jns
xlat
mov
fildll
cmp
jg
repnz
jecxz
cmp
pop
cmp
mov
or
sub
jp
mov
lcall
les
cmp
or
mov
movsl
push
mov
enter
fisubrl
dec
mov
divb
in
push
stc
xor
je
sti
sbb
mov
jmp
and
and
movsb
lahf
popf
pop
cli
jp
mov
out
js
sub
xchg
add
add
dec
hlt
mov
inc
dec
arpl
push
mov
aaa
test
ret
pop
in
mov
push
xor
jg
in
sbb
xor
cmc
aad
jmp
sbb
adc
cmp
aaa
dec
mov
mov
jge
jo
aaa
aaa
sbb
cmp
imul
sub
mov
sub
or
push
mov
cli
ljmp
popa
cmpsb
xchg
xor
fbld
pusha
xchg
mov
mov
hlt
iret
ss
and
xchg
jl
mov
xchg
les
insb
push
pop
jbe
in
pushf
ret
ror
std
mov
xor
loopne
pushf
subps
fildll
ljmp
jp
fisttps
mov
adcl
pop
mov
pushf
bound
repnz
fnstenv
in
sbb
xor
xchg
addr16
push
pop
push
cmp
add
xor
and
nop
icebp
cmpsb
repnz
fwait
cld
mov
xchg
ljmp
or
fsts
vsqrtsd
testb
jge
js
fidivs
adc
mov
inc
mov
movb
or
je
jmp
inc
sbb
or
sub
mov
adc
sbb
pop
mov
mov
repz
loopne
jg
mov
test
addr16
in
out
mov
mov
repz
testb
inc
mov
sub
fmuls
and
inc
xor
inc
push
imul
dec
xchg
in
int
stc
xor
cli
mov
pop
xorl
sbb
mov
bound
jne
and
lods
ficoms
out
sub
sub
fwait
dec
outsl
fiadds
cltd
gs
rcll
or
repnz
icebp
rclb
mov
sti
inc
inc
xadd
sbb
and
push
jnp
es
sbb
idivl
add
repz
push
sbb
mov
aad
sub
ljmp
rcll
outsb
mov
loop
and
or
test
bound
cmpsl
aad
cwtl
mov
cltd
movsb
mov
jne
jle
lock
scas
or
iret
xlat
and
roll
cmp
into
leave
sbb
add
aam
outsl
xor
fwait
xor
inc
in
scas
jmp
xlat
adc
scas
push
cmpb
cwtl
pop
cmp
inc
out
mov
xorl
mov
daa
sbb
inc
xchg
testl
jle
lods
icebp
roll
stos
fldcw
icebp
fstpt
cmp
push
test
test
loopne
dec
fisttpll
or
loopne
pop
repz
cmovnp
mov
in
inc
and
jmp
pop
outsl
dec
nop
fidivrl
stos
pop
add
push
fs
addr16
ja
divl
pop
cwtl
mov
cmp
insb
ds
mov
mov
test
fstpt
mov
or
stos
and
ja
cmp
in
mov
and
cld
pop
inc
scas
out
int
shlb
aaa
jmp
sub
icebp
sahf
js
xchg
lret
sahf
fs
lea
test
in
inc
fwait
iret
in
cld
insb
daa
aaa
and
mov
dec
addr16
xchg
inc
lret
arpl
outsl
xchg
int3
xorl
mov
mov
push
jns
fnsave
inc
sub
or
or
inc
and
sbb
mov
data16
sbb
lret
lret
pop
xorl
pop
push
pop
pusha
push
dec
ret
mov
popf
mov
neg
adc
popf
lods
mov
mov
jae
xchg
stos
cmp
sahf
or
push
push
mov
dec
dec
push
mov
dec
daa
insl
xchg
loopne
inc
js,pt
mov
lock
sbbb
sbb
dec
test
ljmp
push
call
jae
cmp
ja
in
fidivs
xor
int3
fmuls
cwtl
xchg
imul
inc
stos
lods
cmpsb
sub
mov
nop
or
xchg
outsl
dec
lods
test
jge
or
insb
push
cmp
xchg
in
loope
push
inc
adc
mov
repnz
pop
xor
stos
pusha
cmpsb
jmp
pushf
pusha
ss
push
jge
pop
lahf
pushf
adc
lds
add
aam
pop
inc
sarb
adc
mov
or
jg
in
xor
adcl
fs
push
inc
fwait
jge
int
sbb
xchg
out
push
jmp
push
cs
dec
pusha
cmp
fs
movsb
sub
es
sub
dec
int
add
or
cmp
inc
imul
sarb
jecxz,pt
pop
mov
inc
jb
pop
cmpb
xor
pop
cwtl
dec
ret
inc
or
mov
pop
inc
inc
lea
sbb
outsl
dec
lcall
cmc
sbb
mov
loop
xlat
imul
inc
inc
pop
jnp
add
popa
in
sbb
shlb
and
mov
out
shl
push
sarb
dec
data16
and
lcall
xchg
fwait
mov
lret
xchg
add
cmp
xlat
rcl
hlt
pop
loope
iret
fs
imul
mov
fcomip
dec
sub
lahf
ljmp
in
jae
xor
sub
idiv
mov
push
lret
jnp
sbb
mov
dec
sti
mov
clc
stc
mov
push
adc
cld
or
mov
and
pop
or
mov
scas
sbb
dec
xchg
add
daa
mov
add
cwtl
sbb
pop
push
loop
test
movsb
cmpsl
mov
sarb
adc
scas
lods
cld
int
cs
jb
adc
jbe
lock
jmp
fiadds
js
enter
lcall
pop
aam
data16
cmp
enter
int
jbe
test
cmp
dec
add
pop
out
movsl
scas
mov
out
int3
es
test
mov
inc
ret
xorb
jp
add
xor
xor
xchg
stos
dec
mov
pop
dec
out
das
xor
shrl
or
hlt
push
int
or
rolb
dec
lcall
imul
or
insl
aaa
sbb
rorl
sbb
imul
sbbl
fbstp
pop
gs
inc
push
outsb
loopne
dec
sub
cli
hlt
mov
lcall
inc
jl
jge
jl
lret
leave
or
dec
dec
pop
stc
sbb
adc
fsubp
jno
adc
xchg
mov
adc
adc
push
enter
cmp
out
gs
lahf
and
inc
xchg
out
sbb
mov
lret
add
int
push
andb
mov
popa
pop
cli
insb
mov
add
jmp
icebp
sbb
pop
or
outsb
fcoms
xchg
enter
push
loop
bound
mov
repnz
cmp
rcll
cmp
loop
xor
mov
imul
cmp
sbb
jge
movl
pop
enter
and
xchg
mov
mov
push
notl
inc
sub
and
mov
ss
mov
fists
mov
imul
lds
test
xlat
sahf
xchg
repnz
cld
jge
lods
push
cwtl
push
nop
pushf
jmp
inc
fs
scas
sbb
or
xchg
scas
pushf
in
pop
je
mov
rsqrtps
cld
inc
addl
loopne
add
inc
and
jae
push
sti
jno
sarl
push
cld
leave
mov
xor
lock
sub
mov
or
xchg
jo
mov
add
fadd
xor
pop
dec
xchg
inc
fnsave
stc
imul
or
xchg
imul
jae
mov
es
cmpsl
or
sub
incb
test
add
inc
jp
mov
rcll
and
dec
into
xor
movsl
adc
dec
ret
hlt
jo
sub
imul
mov
sub
or
sbb
mov
push
in
adc
and
mov
dec
es
ret
jae
in
or
scas
jnp
cmp
jecxz
cmc
fisubrs
sahf
or
jp
jge
or
cmc
jl
mov
push
mov
rcrb
or
mov
movsb
ljmp
xor
scas
scas
jge
dec
mov
sbb
inc
cmp
adc
ds
leave
sbb
sbb
mov
aaa
and
pop
sub
dec
push
and
cs
fildll
inc
shlb
es
dec
dec
sbb
sub
sub
xchg
mov
js
lds
rcrl
icebp
add
push
mov
adc
push
push
adc
dec
add
sub
add
dec
add
hlt
mov
push
sti
mov
and
lea
jmp
imul
sbb
jne
arpl
popa
lahf
pop
subl
sub
and
orl
pop
cs
fsubp
lods
hlt
inc
jg
int
fsubl
and
and
xchg
lods
scas
pop
imul
xor
cli
pop
sti
test
inc
pop
sbbb
sbb
int
jl
pushf
call
mov
add
pop
push
jns
mov
cmp
fwait
test
std
mov
mov
pop
or
gs
fwait
jmp
and
mov
lock
popf
sub
outsb
flds
mov
mov
add
jp
xchg
fcoms
stc
fistpl
test
mov
mov
jle
cltd
movsl
ds
sbb
pop
cld
mov
add
int
mov
inc
push
testb
mov
adc
imul
sbb
fwait
insb
xor
lret
jnp
outsl
lcall
mov
xor
inc
int3
mov
packuswb
mov
xlat
cmp
sub
jg
loop
jo
in
filds
xor
lret
jae
dec
test
cwtl
ja
xchg
pop
jbe
pop
rclb
xchg
adc
mov
inc
movsb
fldl
addr16
cmp
jno
jle
mov
iret
scas
and
int
lods
js
sub
addl
adc
test
sub
testb
cmpsl
out
inc
sub
cmp
mov
lcall
lods
add
adc
or
mov
inc
ss
dec
pop
arpl
jmp
adc
mov
call
in
sahf
xchg
sbb
jecxz
adc
clc
insb
mov
xchg
repz
imul
popa
or
xlat
mov
dec
adc
lods
and
lea
loop
pop
and
xor
sbb
push
mulb
iret
int3
xlat
sub
push
inc
popf
mov
jge
xchg
rol
jnp
imul
aaa
jecxz
int
in
je
jp
lods
pop
add
xchg
and
mov
incl
mov
cli
shl
arpl
dec
inc
push
sbb
mov
inc
sarb
stos
add
xorb
daa
lds
xchg
cmpsl
inc
iret
aad
and
pop
lahf
inc
or
fucom
jmp
jl
ljmp
or
sbbl
repz
ds
mov
outsl
cld
lcall
pop
icebp
aaa
push
xlat
pop
je
push
imul
iret
push
xchg
std
stos
inc
lds
popa
fsub
pop
fldt
push
mov
std
rcrl
and
enter
xor
push
or
mov
cmp
jmp
inc
cmp
out
into
xor
mov
in
lcall
jecxz
in
jno
and
xor
xor
mov
std
adc
enter
adc
add
mov
es
lcall
cmp
push
aad
mov
jge
shl
mov
lret
add
test
stc
cmp
shrl
mov
stos
dec
sbb
fisttpl
arpl
mov
add
add
pop
jg
fidivrl
inc
out
xor
xchg
or
or
add
fwait
jne
lret
lea
test
jle
pusha
test
imul
pop
pop
mov
dec
cwtl
push
insl
jg
pop
cmp
xor
mov
ss
imul
mov
stc
lahf
es
or
imul
testb
js
sub
movsl
enter
dec
and
sub
sbb
rcrb
rorb
sbb
out
dec
xchg
adc
roll
pop
xchg
jge
cmpsb
and
inc
mov
mov
cmp
lods
insl
mov
cld
div
xchg
pop
xchg
pop
fldt
cmp
pop
pop
sarb
fdivs
xchg
cmp
cmpsl
xchg
mov
jle
notl
push
sub
lahf
xor
mov
adc
out
add
repz
outsb
lea
xadd
enter
inc
out
les
insb
jnp
mov
mov
mov
cmp
push
jbe
adc
xchg
cmp
aad
inc
pop
jo
add
jp
jb
dec
xor
pop
xlat
sub
add
cmp
out
push
movsl
loop
sub
cmp
bnd
ja
sbb
les
les
daa
rorb
stos
inc
pop
outsl
test
jg
rclb
lods
mov
xor
push
sub
dec
in
adc
test
call
add
movsb
insl
lock
pop
fisubrs
in
ret
cwtl
jge
mov
or
jns
mov
cmp
adc
adc
fidivs
cmp
loope
mov
aaa
rclb
dec
mov
jno
insl
mov
mov
inc
fisttps
test
aam
jo
hlt
jg
shl
cmc
hlt
mov
jge
fiaddl
test
int
lds
cmp
fwait
divl
mov
test
cmp
por
dec
adc
loopne
jecxz
jmp
arpl
mov
rorl
sub
add
push
dec
scas
push
test
jb
shlb
or
dec
ret
nop
das
loopne
stos
repnz
mov
add
scas
pop
inc
jp
pusha
out
imul
js
icebp
pusha
cs
pop
adc
or
rclb
mov
jecxz
aaa
jae
call
sbb
fisubl
mov
xor
cltd
data16
hlt
dec
inc
outsb
daa
sbb
adc
pop
jno
subl
mov
iret
xchg
shll
inc
out
sbb
xor
pop
stos
in
jbe
in
test
lock
adc
enter
and
sbb
adc
jge
and
movsl
test
ret
mov
out
push
jg
jmp
push
outsb
adc
jge
flds
mov
push
ljmp
adcb
shlb
aaa
fwait
imul
and
sti
je
in
test
cmp
add
lret
int
mov
mov
lods
add
sbb
push
insb
push
and
pop
arpl
or
daa
scas
xor
mov
fiaddl
fbld
push
push
inc
movsl
jae
dec
dec
add
ds
lahf
stc
add
mov
pop
insb
iret
inc
into
arpl
pop
or
push
cmp
pushf
or
push
pop
cmpsl
pushf
and
mov
stos
pop
into
xor
dec
sahf
mov
push
jmp
ret
int3
jb
insl
cmp
inc
xchg
arpl
imul
dec
pop
int3
cmpsb
xor
mov
cli
and
dec
cmc
mov
icebp
out
jle
pop
test
sub
out
fwait
push
out
es
sbb
lret
add
les
mov
xor
cmc
mov
xor
push
mov
adc
movsb
cmp
jae
les
sub
and
stos
sbb
les
jo,pt
cs
repz
and
sub
dec
cmp
fdivrs
push
lahf
dec
mov
out
push
sub
lods
xchg
rcrb
inc
push
lret
xor
cmc
iret
push
out
lcallw
jle
and
mov
sub
popa
rorl
outsb
ss
bound
sbb
push
sub
mov
xchg
outsb
and
mov
or
add
fwait
sub
and
mov
aas
cmp
fcoms
mov
shlb
es
out
test
mov
adc
shrb
mov
leave
sbb
cs
out
or
fmull
out
insb
sbb
jo
orl
aam
out
sbb
and
mov
das
pop
sub
mov
pop
inc
imul
movsb
inc
lds
mov
lahf
push
stos
adc
pop
sub
cs
js
in
fmul
popa
call
jg
lcall
mov
lods
xchg
adc
sbb
cmp
cs
mov
sub
shlb
std
mov
pushf
movsb
mov
and
cmp
inc
push
jmp
testb
sub
sahf
cmpl
aam
movsb
pop
out
cmpsl
cmpsb
imul
and
or
adc
and
xchg
lods
in
jns
stos
push
adc
les
adc
cmpsb
call
lods
iret
jg
inc
das
lea
imulb
or
pop
popl
lods
cld
dec
xchg
and
icebp
dec
aas
and
xor
xchg
test
movsl
cli
adc
add
jmp
inc
sar
add
push
ret
arpl
jns
xor
mov
xor
jbe
dec
xchg
ljmp
test
fstps
lret
pushf
in
imul
jb
arpl
add
lock
add
push
mov
xchg
jbe
adcl
lods
sbb
sahf
and
ficomps
lods
in
mov
cmp
dec
ret
insb
mov
dec
xor
pop
clc
bound
call
push
cmp
inc
fwait
daa
addr16
xchg
test
mov
cmpsb
adc
popa
add
repnz
jb
std
push
jne
cli
sub
movb
fadd
lcall
inc
int3
sbb
mov
sub
push
add
and
out
iret
cmpsl
mov
test
imul
pop
xchg
push
mov
sub
mov
xchg
mov
adc
cwtl
aas
dec
clc
aam
pop
jbe
int3
mov
and
fsub
mov
pop
mov
xor
int3
mov
xor
lds
and
cmpsb
and
mov
mov
lock
insl
pop
fwait
in
xchg
pop
sbb
outsb
mov
rolb
mov
xchg
out
push
push
idiv
adc
mov
aaa
xchg
ror
jno
jae
rorl
lret
dec
xor
adcb
mov
inc
sub
enter
and
push
outsl
movsb
inc
std
adc
push
or
ret
cmp
aas
dec
xchg
loope
inc
pop
out
mov
cmpsb
dec
int
rcr
leave
mov
mov
sti
shlb
ja
in
mov
mov
popf
sub
cmp
cld
and
jbe
lea
mov
add
push
mov
sarb
decb
mov
mov
aam
popf
subl
leave
dec
aad
imul
imul
cltd
rolb
out
jns
loop
dec
jl
jne
xor
push
insb
push
out
xchg
dec
pop
sti
in
cmp
fsubrp
outsl
lds
jno
mov
lahf
jno
xor
enter
adc
cmp
ret
adc
xor
nop
int3
inc
or
out
test
loopne
scas
xchg
and
or
mov
pop
push
push
and
mov
dec
cwtl
xor
ljmp
add
mov
inc
or
push
xchg
inc
jg
int3
pop
jecxz
movsl
and
xchg
test
sbb
ljmp
sbb
js
mov
inc
pop
cmp
test
ret
jo
or
ds
je
cmovb
add
dec
pop
jecxz
xchg
lret
cld
es
stos
sub
dec
scas
lea
mov
dec
pop
push
adc
sbb
pusha
and
mov
js
mov
insl
mov
loope
xchg
lcall
inc
pop
mov
add
stc
je
into
cmp
insl
add
mov
bound
imul
insb
test
stos
sbb
call
outsl
and
pop
pushf
push
ret
out
mov
enter
fmul
mov
dec
arpl
jle
shl
mov
push
loope
ret
clc
pop
aad
repnz
cmp
xchg
xor
jp
imul
inc
or
cmp
cmp
cmovnp
outsl
push
out
in
mov
dec
mov
sbb
mov
inc
mov
xor
xchg
xchg
and
xor
jne
jmp
shll
sbbb
mov
sarl
aaa
push
out
sub
movsb
mov
ds
out
imul
insb
and
cmp
mov
cmp
scas
sub
repz
stc
movsl
jecxz
aaa
or
call
cmp
call
push
push
dec
into
jecxz
xchg
cmpsl
out
lods
clc
add
sub
xchg
adc
pop
lahf
cmp
pop
enter
lret
cmp
cmp
ja
rorb
sar
or
push
pop
dec
popf
dec
and
jnp
sub
cltd
loopne
xchg
cmp
push
imul
mov
enter
or
test
push
je
jp
aas
sbb
mov
int3
mov
sub
loopne
cmp
adc
jnp
push
or
add
add
movsl
fcoml
movsb
into
inc
xchg
jg
pop
mov
outsb
in
in
fs
fbstp
push
je
mov
das
pusha
std
aaa
imul
aaa
scas
fistps
ffreep
enter
stos
xchg
in
add
mov
mov
scas
mov
call
sub
inc
lcall
or
pop
stos
jle
mov
popf
cmp
and
ja
adcl
sti
pop
int
pop
icebp
test
mov
adc
push
scas
in
lahf
clc
lock
add
js
push
aas
cmpsl
lods
jmp
and
fsub
xor
jl
mov
mov
icebp
mov
sar
mov
lret
mov
les
int
sbb
movsl
push
cmp
cmc
cmp
xchg
add
js
xlat
jg
outsb
out
int3
mov
xchg
sbb
xchg
sbb
mov
test
dec
std
pop
mov
jecxz
sbb
pop
popf
mov
mov
mov
jae
dec
insl
and
fcoml
ja
shll
push
sbb
cltd
inc
pusha
xchg
cwtl
bound
jo
jae
sarl
rorb
push
inc
xchg
pop
lret
inc
cld
xor
push
mov
add
or
xor
inc
cmp
call
sbb
into
cmp
mov
in
jge
inc
adc
mov
inc
xor
dec
bound
fisttpl
push
out
push
jle
mov
mov
inc
inc
jecxz
xchg
sbb
daa
jnp
pop
xor
jle
push
inc
in
out
mov
push
and
xchg
lret
lahf
sbb
sub
imul
mov
dec
dec
lds
cld
push
push
sti
jnp
sbb
pop
in
lret
xchg
leave
lahf
or
sbb
shl
movsl
lods
sbbb
and
or
adc
sbb
jg
cld
jb
shrl
rcll
push
in
adc
jg
jo
lret
mov
nop
mov
int
inc
adc
test
jge
pop
cmp
int
xor
xlat
nop
out
test
cmpb
int
pop
xchg
cmp
into
mov
aas
loop
mov
stc
or
mov
mov
sbb
loopne
mov
cmpsb
outsl
push
jae
shrb
ljmp
mov
xchg
das
insl
pushf
dec
mov
hlt
outsl
xor
xor
out
cmpsb
sbb
push
ret
cmp
in
cmpsl
cld
mov
scas
mov
and
inc
jge
adc
pop
dec
mov
stos
cmpsl
pusha
pop
and
sti
xor
loop
inc
in
addr16
ds
jl
mov
adc
add
adc
arpl
jecxz
mov
pop
sbb
lahf
bound
jg
sub
jecxz
out
xchg
xor
sub
popa
inc
mov
sahf
sbb
sub
fnstenv
stos
push
sarb
and
test
mov
xchg
add
cli
pop
or
push
add
cli
push
lock
mov
or
lret
or
cmp
insl
inc
es
sti
xchg
add
mov
rorl
loopne
and
mov
push
mov
loope
push
loop
jno
sbb
jne
out
adc
lods
lods
jp
adc
push
cmp
adcb
test
ss
pop
cwtl
in
out
mov
push
xor
movsb
loop
pushf
adcb
in
adc
pop
jb
fidivrl
jo
and
inc
in
cmp
adc
or
jno
inc
dec
cmpl
test
adc
push
int
out
mov
cmp
ret
cmpsl
clc
bound
or
cmp
mov
pusha
iret
adc
gs
jbe
insl
jge
nop
jo
dec
pusha
aad
inc
inc
pop
xor
shll
lea
or
cmp
in
aaa
adc
dec
pop
test
xor
add
data16
ret
or
fcmovne
lcall
out
sub
mov
push
xchg
lock
pop
sbb
out
mov
fwait
cmp
add
scas
test
cmpsl
push
dec
cmp
jg
adc
xorb
fcoml
dec
adc
mov
cmpsl
or
xchg
das
mov
and
sub
jge
aam
cli
adc
jns
icebp
cmp
mov
jb
or
mull
in
fldt
scas
pop
xchg
push
pop
dec
cmpl
fcmovu
ret
mov
fidivs
mov
stos
jns
sub
lret
mov
aaa
cltd
xchg
mov
inc
cmpsl
cmp
lea
pop
std
mov
gs
pop
loope
and
fwait
pop
add
data16
fidivl
mov
or
lods
pop
das
xor
ds
push
pandn
popa
aas
jge
add
out
js
xor
stos
roll
lods
add
mov
add
rcl
int3
adc
mov
in
mov
xor
jle
jbe
in
leave
add
daa
movsl
xchg
sub
aad
xor
jno
outsb
lret
test
xor
in
and
nop
inc
gs
pushf
out
filds
dec
clc
sbb
xchg
add
xchg
or
ljmp
out
inc
mov
xor
in
or
push
jmp
jo
push
es
push
adc
and
dec
and
inc
std
test
pop
push
hlt
adc
add
cmp
pop
in
cmp
dec
push
lea
mov
shr
dec
frstor
rorb
xchg
mov
mov
ss
andl
jmp
sub
xor
push
repz
sub
sub
fcoml
sbbl
shl
arpl
push
mov
mov
inc
outsb
pushf
mov
cmp
jb
adc
js
das
or
mov
or
xchg
mov
jl
cmp
ret
and
sub
ljmp
inc
and
xchg
arpl
adc
mov
and
sbb
or
inc
pop
enter
shlb
cmp
xor
aad
push
mov
push
mov
mov
jmp
sub
or
pop
out
cmp
aad
add
mov
push
clc
arpl
sbb
mov
and
adc
mov
mov
ds
and
push
push
lea
jns
mov
lret
jmp
dec
dec
lods
jle
pop
inc
out
mov
nop
test
sbb
enter
popf
pop
add
dec
hlt
sub
add
repz
loop
or
call
ja
jmp
movsl
inc
rorb
arpl
fdiv
jnp
test
leave
pop
stc
sbbb
adc
add
ret
js
mov
mov
loop
adc
test
sbbb
pop
mov
nop
mov
jmp
and
aad
pop
mov
adc
lods
and
cmp
dec
jbe
xchg
inc
movsl
pusha
jle
in
jg
mov
fdivs
pop
fcoml
inc
in
add
push
sbbb
mov
add
popa
fs
mov
out
cli
ljmp
push
and
inc
pusha
mov
rcll
fldl
cmp
sub
mov
nop
es
adc
aam
inc
lods
out
inc
insb
dec
sbb
or
mov
icebp
out
mov
cmp
test
test
xor
push
rcll
jbe
jns
push
xor
mov
mov
inc
sbb
sub
mov
scas
push
xor
and
inc
mov
out
mov
sub
mov
push
xchg
and
mov
int3
in
lcall
iret
test
inc
sbb
jl
xor
and
je
xchg
and
loope
xor
sbb
sbb
in
outsl
test
gs
xchg
push
int3
lods
test
or
sub
mov
push
sbb
enter
push
xchg
or
int3
push
shl
cmp
fidivs
addr16
push
fcom
bound
outsb
push
dec
mov
xor
in
dec
idiv
push
xchg
cli
ljmp
pop
add
int3
shrl
add
test
inc
mov
stc
jmp
inc
movsl
cmp
dec
jecxz
inc
addr16
lcall
cmp
bound
cmc
or
ficompl
jp
arpl
dec
fisttpl
scas
daa
sub
adcl
and
pop
aad
out
mov
dec
sub
hlt
mov
or
pop
daa
shr
in
pusha
ficomps
xchg
cmp
loop
pop
popf
dec
sbb
aad
sub
inc
lahf
inc
aaa
sub
mov
mov
mov
insb
nop
pop
pusha
in
cli
call
and
mov
add
dec
or
jbe
pop
jae
or
jnp
movsl
stos
push
adc
jmp
push
mov
push
pop
insb
jo
xchg
fwait
jle
or
in
pop
in
es
hlt
mov
lock
mov
pop
mov
outsb
hlt
jnp
and
and
cmpsb
xor
test
mov
adc
pop
sub
pop
lods
rol
pop
insl
out
call
push
fdivp
shrb
rclb
push
sahf
paddsw
fbld
cmp
mov
nop
adc
jl
mov
fstp
mov
aad
xchg
xorl
xor
xchg
push
adc
jmp
xor
sbb
mov
out
adcb
rcl
sahf
popf
inc
jns
mov
xchg
lret
out
push
fistpl
add
scas
cli
in
xchg
aas
or
loopne
mov
xor
cmp
dec
inc
fistps
sub
lret
ljmp
cltd
push
pop
mov
sub
popa
mov
iret
jnp
das
cmp
xor
jl
pop
dec
iret
jmp
ret
pop
cmp
pop
pop
lods
push
stc
dec
das
pop
push
and
add
enter
sbb
and
adc
mov
data16
shr
pop
loope
xchg
repnz
push
dec
cld
pop
pop
int3
sbb
mov
test
ffree
fwait
roll
movsb
test
cld
jmp
jnp
mov
cmpsb
fadd
sti
insl
rcrl
sub
imul
sbb
xlat
std
xor
dec
aaa
in
xor
movsl
inc
movsb
add
dec
aad
push
dec
cmpsl
sub
dec
rorl
add
push
pop
and
mov
jnp
sub
xchg
jmp
sbb
pop
in
aaa
out
adc
jp
adc
int
aas
popf
shll
pop
add
push
sub
fs
xor
andl
dec
lret
push
loop
inc
fildll
ja
sub
mov
dec
ror
pusha
in
push
sub
and
push
mov
xor
cmp
sbb
sbb
push
sub
gs
mov
scas
xchg
and
movsb
mov
xor
sti
cmp
ret
imul
sbb
jmp
das
iret
push
cmc
push
cmp
push
sub
mov
mov
sarb
rcrl
mov
jecxz
mov
mov
js
inc
ja
push
test
orl
and
pop
imul
notb
in
push
mov
mov
imul
mov
mov
cmpb
fidivl
jp
jb
aaa
leave
repz
xchg
xchg
decl
inc
div
test
imul
dec
jmp
sub
pop
shll
xchg
out
pop
and
pushl
movsb
inc
dec
dec
pop
push
pusha
mov
pusha
sbb
inc
mov
in
add
cmpsl
pop
repnz
and
inc
sahf
in
pop
add
scas
pop
int
ror
cmp
jbe
movsl
cmc
push
mov
mov
add
add
jle
mov
scas
into
push
imul
jne
fucomp
mov
loope
je
ds
inc
cwtl
insb
insl
inc
push
mov
mov
ja
sbb
fwait
mov
pop
push
shll
les
ss
inc
jae
aam
jo
sub
addb
out
les
outsl
and
fdivrl
cmc
gs
pusha
push
lds
add
rclb
into
jb
jo
xchg
sbb
call
fcoml
andl
dec
dec
hlt
mov
clc
inc
insb
inc
cmp
push
bound
mov
loop
into
popf
xchg
cli
jno
dec
adc
cmpsl
stos
sub
sbb
sbb
dec
mov
adc
mov
mull
pop
and
xchg
dec
or
mov
mov
loopne
in
cmp
add
pushf
scas
inc
cmpsl
les
ror
xchg
in
loopne
movsl
fdivs
cmpsb
or
stos
mov
sahf
stos
insl
imul
inc
or
fistpll
int3
jns
jecxz
mov
sarl
mov
xchg
dec
popa
xlat
adc
test
fsubl
jg
repz
dec
daa
loop
push
pushf
pop
dec
rolb
aad
pop
cli
rorl
push
sub
dec
popf
cld
cmp
inc
dec
out
dec
mov
out
imul
test
sarl
pop
push
pop
std
ror
push
jp
cmp
int
inc
repz
ljmp
aad
das
lret
addr16
cmp
pop
cli
lods
inc
pop
arpl
cmp
cmp
mov
sbb
clc
stos
jns
adc
sub
jbe
push
test
dec
cmc
rcrl
pop
sbb
stos
mov
lret
insl
xlat
push
and
fistps
incl
fwait
cmp
pop
ja
vpackssdw
dec
xchg
roll
es
mulb
dec
jmp
pushf
mov
mov
test
dec
call
xor
aaa
rolb
jecxz
lods
test
and
add
mov
sub
inc
movsl
xor
mov
js
pop
xor
lret
jo
or
popa
scas
das
cld
in
push
dec
test
push
cmp
fwait
jle
sbb
mov
pop
pushf
rcrb
or
mov
std
inc
sbbb
jns
sub
repz
push
scas
inc
dec
out
enter
sti
das
inc
dec
in
popf
xchg
adc
imul
arpl
insb
inc
adc
jns
push
out
push
sbb
lret
js
sub
in
push
add
xchg
repz
xor
pop
inc
push
mov
xor
adc
test
in
xchg
dec
fdivs
ret
cwtl
subl
adc
jnp
pop
lcall
push
sub
add
pop
adc
jnp
push
push
cmp
mov
xchg
popa
lahf
loopne
sahf
mov
adc
shrl
mov
mov
pop
into
mov
sbb
out
fmuls
mov
adc
sub
cltd
scas
push
jecxz
push
or
lcall
subl
xchg
xor
arpl
or
cmpsl
enter
movsb
and
mov
shlb
pop
and
pop
sti
mov
addr16
cmc
mov
push
sub
insl
push
ret
loopne
fnsave
cmp
xchg
in
daa
mov
cmp
inc
xor
jno
push
adc
mov
test
jg
data16
xchg
sbb
mov
dec
stc
xor
add
fildl
cltd
insb
dec
mov
jnp
mov
js
jne
xchg
fistpll
jge
lods
add
int
jb
jmp
js
xchg
ljmp
jbe
xchg
push
cli
jle,pt
push
dec
repnz
xor
push
ja
mov
adcb
pusha
test
adc
sbb
dec
sub
fcomps
fs
mov
icebp
cmp
pop
adc
jmp
sbb
mov
sub
or
xchg
mov
idivb
shlb
into
adc
fadds
dec
lahf
rcl
fwait
dec
xor
lds
or
mov
ja
adc
mov
ret
popa
adc
mov
pop
jbe
jae
xor
xchg
ds
sub
sbbl
dec
pop
xor
and
ss
mov
shl
add
roll
and
pushf
push
testl
cs
mov
pop
enter
popf
push
xchg
push
sbb
std
sub
mov
dec
cmpsl
and
or
lods
xor
fs
pop
arpl
daa
jne
adc
stc
push
xchg
xor
addr16
or
in
mov
mul
movsb
mov
loop
cltd
loope
jl
movsl
outsb
fadds
outsb
jnp
inc
out
mov
into
mov
mov
les
cmpsl
out
cmpsb
int
add
push
int3
mov
lret
cmp
pop
inc
ja
icebp
test
out
jb
push
cmp
movsl
popf
mov
pop
shl
iret
jle
mov
into
lea
aas
fiaddl
out
jae
jns
sbb
int3
into
stc
pop
mov
inc
mov
or
scas
dec
sbb
xor
adc
lds
das
mov
or
jns
cmpsl
sti
mov
bsr
xor
pop
mov
les
mov
or
push
fcmovb
jae
sbb
dec
mov
jecxz
aaa
mov
adc
test
sbb
ss
ss
cs
inc
lods
dec
pop
cltd
push
roll
das
mov
clc
adc
mov
rol
repnz
std
outsb
adc
add
ja
mov
outsb
sbb
cmc
icebp
ss
adc
or
sbb
js
push
fadds
mov
push
jl
test
arpl
cwtl
out
in
roll
dec
cmp
cmp
jne
jl
pop
push
adc
loopne
mov
inc
mov
push
xor
cmp
or
sbb
xchg
cmpsb
scas
scas
je
inc
mov
pop
xor
fs
xchg
lds
jne
repnz
jb
jge
les
and
enter
mov
ds
lcall
lods
jae
out
jge
imul
repz
in
inc
icebp
mov
sub
push
add
sbb
nop
cmp
imul
and
mov
pushf
pop
out
lods
sub
lea
roll
jecxz
stos
fsubl
stos
pop
in
mov
inc
jle
xchg
xor
xor
es
xchg
mov
enter
xor
jne
repz
fadd
out
mov
lds
add
sbb
cmc
or
and
and
dec
adc
test
sti
aad
inc
adc
sub
leave
mov
lret
cld
mov
lock
and
inc
scas
xchg
in
enter
mov
mov
aas
inc
adc
int3
jbe
lcall
cwtl
sbb
jl
int3
fcoml
das
out
pusha
cmp
lcall
mov
sub
lods
cmp
jbe
lcall
outsb
ficoml
cmp
or
mov
ja
insl
push
call
testb
cmp
repnz
adc
int
test
adc
popa
push
or
daa
inc
and
push
into
sub
subb
daa
xor
mov
jno
mov
lret
mov
into
lret
fcmove
jb
pop
push
dec
icebp
in
das
sbb
pusha
inc
push
loop
sbb
mov
lret
or
add
mov
mov
insb
sub
sub
test
aas
lds
imul
sub
fwait
testb
pop
push
push
scas
push
jmp
adc
imul
cltd
inc
push
xorb
adc
adc
jnp
mov
push
pminub
sar
cmp
sahf
loopne
mov
sti
sbb
and
stos
loope
adc
aas
mov
mov
sub
sub
add
inc
adc
inc
cmp
decl
push
sbb
add
add
jg
xchg
cmc
push
in
dec
daa
cmp
rolb
aam
xchg
in
cmpsb
push
xchg
inc
test
mov
and
scas
pop
pop
push
shll
lret
adc
insb
out
inc
push
xor
scas
popf
loopne
push
imulb
and
inc
sub
push
lcall
leave
xchg
lods
sahf
adc
dec
inc
pop
mov
cmp
fcmove
sbb
sbb
cmc
push
outsb
rcl
popa
pop
inc
and
jp
mov
add
jb
xor
jecxz
mov
scas
mov
shr
sbb
test
fs
scas
push
or
cld
test
mov
cmp
mov
jp
leave
imul
test
in
insl
notl
fwait
add
xor
repnz
xchg
fsubr
mov
ret
cmpsl
insb
mov
inc
sbb
ja
push
lds
hlt
cmpsb
xchg
mov
push
lret
cltd
mov
push
lods
mov
icebp
aaa
insl
cmp
adc
lahf
push
xchg
push
imul
add
add
out
mov
pop
cmc
clc
push
xchg
mov
cmp
adc
or
data16
jns
in
imul
jge
leave
sbb
push
mov
movsl
jne
adc
mov
mov
sub
cs
xchg
mov
ja
movsl
cmc
push
dec
xchg
sti
xor
pop
pusha
dec
fstpt
mov
sub
loop
arpl
mov
imul
or
inc
push
jae
xor
hlt
inc
lret
xchg
cmp
push
xchg
dec
xchg
int3
popf
sub
fbld
or
stos
xchg
inc
and
xor
fldl
jns
lcall
lret
jg
cmp
mov
into
movsb
stc
push
mov
pushf
cmc
imul
dec
sub
lret
jecxz
push
xlat
pop
pop
daa
dec
pop
and
sub
inc
pushf
notb
adc
jp
jle
das
pushl
cmp
popf
mov
ja
movsl
mov
jbe
aam
cmp
shr
lock
in
inc
incb
out
push
sbb
aad
push
ss
or
or
les
jmp
sbb
jb
mov
mov
shrb
cmp
jg
test
sub
push
mov
and
and
mov
push
insb
lods
cmp
push
mov
sub
sbb
sub
inc
mull
in
or
add
mov
ror
cmp
xchg
jmp
mov
or
roll
aad
cli
mov
adc
jg
pop
shl
int3
add
mov
pop
cmp
adc
add
rcr
add
or
int
pushf
adc
cs
call
xor
xor
add
std
fisttpl
sbb
or
scas
dec
and
repnz
int
sbb
addr16
xor
xor
mov
imul
xlat
mov
xlat
cmp
xchg
mov
loope
jae
lods
jge
jp
push
push
dec
jno
addl
movsb
pusha
cmp
pop
dec
mov
test
loopne
rorl
jmp
lea
sbb
rcrl
sahf
inc
dec
lods
sub
jo
shlb
les
sbb
scas
stos
fsubp
adc
dec
push
pop
lods
mov
adc
jns
inc
stos
or
mov
mov
mov
inc
mov
cmpsb
popf
inc
loopne
or
movsl
mov
jnp
test
inc
or
mov
fs
or
or
mov
sbb
or
pop
push
and
andb
mov
outsb
pop
jnp
loopne
inc
sub
cli
ja
cld
push
pop
dec
rcl
cld
mov
movsl
in
fcoms
pop
movsb
mov
adc
cmpsl
call
xchg
shrb
ds
scas
sar
sub
in
mov
jl
flds
shrl
lods
add
ja
and
jns
dec
mov
rclb
movsb
mov
adc
mov
jbe
nop
ss
xchg
and
push
push
adc
aaa
xor
lret
shlb
push
scas
push
test
out
sbbl
pop
mov
sub
test
arpl
sti
es
notl
idivl
sub
pop
cmp
rclb
addr16
data16
xor
inc
outsb
insb
leave
pusha
inc
pop
push
jae
ret
test
adc
pusha
add
adc
mov
bnd
idivl
jp
pop
sub
push
push
jbe
ret
in
rorl
insb
or
mov
lret
sbb
mov
dec
ret
cmp
push
in
dec
adc
enter
sbb
dec
jns
jl
adc
mov
xor
arpl
pusha
aam
and
inc
frstor
stos
xchg
lret
gs
rcrb
jp
scas
mov
jmp
loop
xor
insl
leave
xor
je
and
dec
aaa
xor
add
aad
mov
add
in
roll
pop
repnz
pop
loope
movsl
mov
push
call
jmp
fwait
int
push
and
cmp
mov
inc
stos
daa
inc
fstp
and
sub
xchg
cmp
mov
or
insb
cmp
or
push
leave
mov
dec
shlb
pushf
ret
imul
sti
lret
jmp
mov
push
jnp
subl
mov
pop
pop
sbb
es
divl
push
pop
push
fcompl
pop
add
xor
ss
out
jg
call
push
mov
mov
test
adc
adcl
push
loopne
in
fs
xor
push
cltd
jne
sarl
fsubrs
inc
andb
out
pushf
jbe
ds
inc
pushf
dec
inc
gs
pop
orb
or
sub
jbe
dec
add
outsb
sub
jne
mov
fiaddl
scas
push
and
cmc
xor
cmp
and
bnd
adc
mov
jbe
je
push
pop
movsb
push
cmp
pop
movsl
sub
mov
mov
xor
in
or
clc
aas
cmpsl
pusha
daa
push
or
out
sub
icebp
add
push
insb
in
pop
jp
mov
sub
aaa
push
lds
ss
adc
std
mov
out
pop
data16
out
inc
movsl
out
push
inc
xor
pushf
scas
insb
lcall
push
mov
jle
dec
xchg
stos
push
mov
pop
xor
idivl
pop
mov
mov
ds
loope
dec
ds
sub
imul
testl
inc
push
mov
out
cmp
into
enterw
das
sub
cld
movsb
push
mov
push
fs
hlt
pop
rclb
dec
stc
les
imul
cmp
je
cmpsl
adc
fsubrl
pop
stos
xchg
pop
loop
repnz
push
inc
add
jp
rol
inc
mov
into
sub
ja
leave
push
sahf
sbb
push
movsb
into
fisttpl
aam
into
push
dec
lahf
loopne
adc
xchg
jns
dec
sub
jle
inc
mov
sbb
cmp
fld
inc
in
jns
add
or
clc
inc
sar
dec
je
jge
stos
iret
out
popa
andl
sahf
cs
sbb
push
stos
jnp
fisttpl
loop
stos
fnstcw
aas
jge
mov
dec
fldcw
jle
outsb
pop
or
fdivr
jb
cmp
pop
decb
or
aad
push
callw
xchg
je
inc
push
int
outsb
cmp
dec
fdivl
ret
xchg
call
scas
out
jbe
pop
push
fistl
inc
mov
add
shrb
adc
mov
sub
sbb
and
aas
scas
adc
ja
fldl
fsubrl
call
push
sub
add
mov
push
mov
xchg
add
inc
lock
ss
add
add
daa
andb
pusha
and
and
inc
mov
xor
add
out
daa
aaa
sbb
mov
test
sbb
adc
inc
iret
test
cmp
and
fbld
pop
or
out
add
mov
push
sti
xchg
xchg
pop
push
sarb
jns
sbb
mov
push
mov
push
jge
repz
sub
jno
cltd
testl
lret
subb
scas
sub
cmp
dec
mov
into
repz
push
xchg
sub
inc
xchg
jns
push
test
mov
insb
cmp
pop
aaa
js
cld
mov
or
ret
pop
mov
decb
cmc
jle
cmp
mov
fiaddl
rcll
push
fidivrl
mov
loope
mov
sahf
aas
pop
repnz
mov
les
outsb
dec
fnstsw
push
mov
aas
lds
andps
bound
push
cmp
cmp
sub
push
mov
gs
or
mov
cli
xor
fbstp
int3
dec
xor
xor
or
cltd
sahf
fwait
mov
enter
and
dec
insl
das
test
cmp
sub
cmp
shll
lock
enter
loopne
test
jge
out
in
pop
insl
sub
or
lods
sbbb
adc
lods
push
mov
push
adc
popf
aad
inc
or
cmp
jge
popa
out
mov
mov
pop
push
cmp
mov
inc
in
shll
mov
fidivs
pushf
push
push
or
mov
mov
mov
sbb
cli
inc
stc
mov
inc
dec
out
mov
xchg
cmp
popa
repz
out
jmp
or
sbb
imul
jne
push
xchg
or
mov
das
adc
je
sub
iret
pusha
mov
mov
and
out
leave
or
loop
pop
mul
fildll
inc
mov
mov
hlt
jle
lods
xlat
pop
iret
int
sub
or
mov
divb
insl
rcrl
cmp
and
and
scas
std
inc
sub
sub
ljmp
iret
push
fnsave
movsl
pop
pop
cmpsl
nop
sub
cmc
movsb
jg
sbb
fiaddl
or
ret
mov
icebp
into
es
pop
xchg
shll
mov
inc
cmpsl
stos
decl
xor
push
adc
dec
fisttps
push
mov
mov
push
leave
rolb
mov
jb
mov
mov
je
cli
mov
je
inc
adc
ret
in
lret
sbb
jecxz
and
pop
add
dec
lods
aas
dec
repnz
jb
lds
xchg
outsb
js
cmp
arpl
mov
and
cmp
inc
or
inc
mov
outsl
dec
int
loope
rcrl
push
sub
cmp
push
fnstcw
rcll
fidivl
xchg
jnp
jmp
fwait
xchg
push
xchg
mov
es
lcall
sub
mov
std
data16
pop
fnstsw
repz
subb
sahf
inc
dec
in
cmpsl
notl
stos
lcall
pop
push
or
fmull
xchg
xchg
jge
inc
andl
push
push
jns
sbb
mov
pusha
lret
fsubrs
mov
ds
sbb
insl
cmp
cmpsb
sbb
xchg
lahf
mov
sub
jp
test
mulb
inc
in
cmp
and
int3
hlt
push
inc
dec
or
push
pinsrw
dec
inc
mov
out
mov
cli
iret
mov
das
sbb
icebp
orl
scas
push
data16
mov
jns
cmp
mov
rcrl
adc
mov
and
dec
inc
stos
push
int3
std
jnp
aas
cwtl
sbb
xchg
mov
sbb
xor
mov
test
imul
cmp
add
arpl
cli
lahf
mov
mov
in
inc
repnz
push
xchg
cld
xor
in
call
repz
add
mov
or
inc
fldl
stos
inc
pop
add
sahf
sbb
sbb
call
jbe
lret
insb
vmread
gs
pop
mov
in
mov
push
cmpsb
outsb
pop
mov
dec
sbbw
das
pusha
push
test
out
cld
roll
sbb
int3
push
xor
dec
roll
ja
mov
lds
lcall
pop
sub
pop
mov
js
lods
jg
fidivrl
hlt
push
les
orb
iret
push
sbb
mov
push
js
push
xchg
cpuid
lcall
sahf
xor
xor
mov
and
jae
jge
inc
test
cmp
aaa
jmp
outsb
xor
cwtl
inc
sub
pop
sub
push
mov
sbb
pop
ljmp
sub
or
aas
adc
addb
shrb
adc
jge
rorb
in
push
mov
mov
or
push
es
push
jno
sub
adc
stos
adc
lahf
dec
pop
xor
jle
pusha
pop
dec
imul
mov
int3
call
xchg
jp
movsb
push
mov
imul
mov
pusha
xchg
cmpb
push
hlt
xchg
out
xchg
dec
jge
jns
push
xor
sbb
cmc
popl
stc
mov
sbbb
repz
stos
lea
cmp
or
inc
shlb
outsl
xchg
pop
rcrl
xchg
bound
adc
sub
das
inc
int
adc
stc
mov
inc
jo
inc
in
sti
sub
addr16
movsl
jmp
pop
in
jg
ds
and
adc
jns
fsubs
jl
mov
or
cmp
or
sahf
divl
and
stos
sub
and
dec
sti
mulw
test
push
in
xchg
aam
cmp
and
sub
and
insl
sub
sahf
inc
leave
pop
cmpsl
jmp
aaa
movsb
imul
add
gs
int3
in
out
jae
orl
imul
xchg
cmp
pop
call
aas
xchg
std
add
add
shlb
xchg
fisttpll
pop
pushf
jb
ljmp
mov
sub
mov
push
add
mov
in
mov
add
adc
xchg
mov
ljmp
jle
or
mov
push
lcall
daa
fdivl
xchg
pop
bound
jl
daa
pop
in
nop
icebp
cli
or
mov
cmp
enter
jne
jecxz
out
mov
mov
pop
das
mov
inc
lea
dec
mov
lcall
xchg
or
test
or
sub
mov
push
dec
jl
mov
in
pop
xchg
mov
xor
xor
or
mov
call
adcb
imull
sub
cmpsl
in
add
cld
mov
adc
xor
stos
and
loopne
add
mov
mov
out
or
out
push
xchg
inc
xchg
inc
les
mov
imul
cltd
xor
add
test
fimull
sbb
insl
pop
cmpsl
jle
fistps
pusha
test
insl
add
mov
mov
push
out
insl
pushl
sbb
cmpsl
pop
add
lret
jbe
xlat
push
sub
mov
sbb
jmp
mov
inc
push
lcall
xchg
push
dec
insb
addr16
out
mov
loopne
dec
out
jmp
jne
stc
mov
adc
mov
dec
jae
clc
mov
out
mov
mov
mov
popa
js
lock
dec
int3
movsl
mov
mov
dec
ficoml
das
mov
into
iret
dec
or
das
jae
xor
test
popa
pop
insl
mov
mov
lods
aas
into
cld
dec
call
pop
pop
cmp
mov
in
std
mov
int3
scas
fwait
aam
mov
and
and
or
mov
jge
sub
hlt
pop
movsl
dec
add
jnp
test
sub
call
mov
add
in
mov
pop
aas
jbe
clc
das
int
dec
int
out
in
out
jg
and
add
mov
sub
cwtl
into
jno
xchg
inc
loop
in
xor
arpl
rolb
xchg
outsb
mov
dec
sti
sbb
das
imul
or
ljmp
sbb
or
popf
pop
repnz
dec
add
call
or
xchg
mov
jg
mov
call
mov
scas
jle
cmp
inc
jae
scas
jg
add
pop
jno
xorl
fistpll
jne
xchg
sub
sbb
dec
les
outsl
pop
jno
nopl
inc
out
mov
rclb
jecxz
mov
xor
mov
out
xor
icebp
jmp
xor
cmp
or
pop
sahf
sub
ljmp
lods
inc
aad
and
stos
pop
inc
add
adc
adc
sahf
lcall
movsb
push
jae
test
dec
add
jle
cli
add
sub
lock
inc
adc
mov
sahf
je
add
or
lds
and
dec
loopne
in
push
xor
adc
test
push
dec
dec
push
rcr
jmp
lea
out
inc
ja
das
outsb
pop
lods
out
adc
or
out
cs
xchg
clc
ret
xor
addr16
adc
push
mov
in
sbbb
cmp
cmp
or
nop
ret
xchg
xor
inc
xor
fmuls
xchg
add
cmpps
push
mov
cmpsb
cld
popa
push
cmp
fsts
xchg
cwtl
ficomps
stos
sbb
mov
insb
popf
jp
jp
push
jae
fwait
int
dec
inc
mov
ljmp
jge
es
orb
jmp
add
mov
xor
stc
ss
rcr
icebp
sbb
pop
fwait
push
lods
aad
ret
pop
test
mov
fwait
sub
and
sub
mov
loop
enter
pop
adc
ljmp
out
jecxz
adc
mov
push
int3
push
sbb
mov
dec
inc
push
out
fistps
mov
das
pushf
das
jb
shrb
xor
ljmp
lods
mov
inc
ja
cmp
icebp
jno
das
sub
or
xchg
jge
add
loopne
cwtl
fwait
in
mov
dec
arpl
cmp
mov
and
mov
jb
or
call
int3
push
mov
sbb
mov
mov
xchg
mov
dec
mov
popa
stc
popa
xor
adc
xchg
scas
or
mov
adc
fucomip
or
xlat
enter
shr
imul
and
cmpsb
das
scas
pushf
and
jnp
loop
xlat
mov
cli
stos
xor
mov
icebp
repnz
fdivrs
cmp
jg
pop
fimull
or
push
fnstcw
pop
mov
mov
stos
leave
mov
movsb
add
xor
shlb
into
in
stos
arpl
cmpsb
sub
jge
mov
pop
cmp
fnsave
adc
push
int3
call
pusha
xchg
push
mov
rcrl
negb
inc
mov
repnz
fnstsw
fstps
nop
bound
data16
jbe
dec
cmp
xchg
out
gs
and
or
xor
fists
xor
push
fists
outsl
mov
std
jo
push
dec
scas
divl
hlt
dec
mov
push
movsl
gs
cs
lea
nop
out
adcb
pop
mov
outsb
mov
ret
cmp
popf
add
sbb
popa
repz
mov
xor
lahf
lret
add
adc
pop
pop
fwait
and
arpl
add
sub
dec
ret
ss
bound
fsubl
adc
mov
inc
shlb
popf
add
in
jnp
insl
inc
stc
sbb
bound
enter
add
std
std
inc
sahf
ds
aam
inc
xor
inc
ds
or
mov
lods
inc
int3
das
push
cmp
jg
rcrb
adc
insb
lcall
push
cmpsl
sahf
mov
dec
mov
adc
pop
hlt
dec
imul
imul
sbb
push
jno
and
mov
cld
cmp
pop
gs
mov
loope
cmp
test
iret
cs
loopne
pop
call
xor
adc
lret
lock
jmp
jl
fisttpl
mov
imul
xor
data16
xchg
or
mov
js
and
inc
push
mov
cli
popf
pop
aad
push
stos
push
fdivrp
add
jae
addl
push
leave
lret
mov
out
fs
dec
sbb
lds
leave
mov
lret
ret
mov
bound
dec
addr16
rclb
pop
pop
nop
mov
dec
adc
mov
jns
pop
cmp
lcall
or
aaa
push
sbb
push
add
pop
inc
and
das
xchg
push
test
cmp
lret
in
mov
cmp
aaa
push
pop
sub
lea
dec
xchg
aas
fs
outsb
xchg
sbb
ja
hlt
cmc
outsl
mov
cmp
or
test
inc
punpcklbw
xor
aad
cmp
sub
mov
sbb
mov
call
push
cmp
pusha
pop
mov
cmp
pop
xchg
jo,pt
xchg
mov
shll
mov
stos
xor
cmpl
add
in
hlt
jecxz
loopne
outsl
in
pop
mov
inc
adc
nop
push
aaa
xchg
xchg
sar
sbb
shlb
scas
mov
scas
nop
pop
fimull
cmpsl
jge
mov
loope
and
movsb
icebp
sub
or
addr16
stos
ret
mov
xor
sbbl
insb
lret
mov
int
push
mov
in
int3
and
cltd
aaa
out
out
jb
flds
pop
dec
jg
inc
mov
frstor
lahf
stc
dec
xchg
gs
adc
jo
mov
pop
popa
mov
popf
sub
pop
fstpl
xor
lock
loop
sub
mov
cmpsl
popa
cmpsl
mov
pop
fwait
mov
cmc
icebp
xchg
sub
push
ds
test
inc
mov
mov
dec
xor
iret
scas
imul
mov
xlat
or
jge
jbe
sbb
fiadds
xorb
into
lahf
xlat
out
lods
xchg
and
arpl
test
pop
ljmp
sbb
fildll
pop
test
call
iret
and
aaa
lods
mov
add
mov
xchg
mov
ss
ret
ret
outsb
mov
mov
xchg
or
mov
sub
pop
pop
test
mov
cli
dec
sbb
test
and
add
dec
iret
out
mov
shlb
jle
pushf
sub
jno
pop
je
popf
cmc
lea
out
cwtl
sahf
push
xchg
cmp
rol
shrb
dec
dec
into
popf
lahf
mov
inc
pop
push
xor
pop
mov
imul
sub
and
and
sbb
sbb
pop
andl
push
pushf
ss
mov
jp
cmp
fidivrl
fidivl
adc
pop
push
xor
adc
cmpsl
lods
flds
ret
xor
xchg
push
inc
subl
imul
xchg
and
call
insl
dec
dec
pop
fstps
inc
pop
jbe
adc
and
inc
call
adc
push
pushf
or
adc
mov
jno
cmp
xchg
std
mov
pop
imul
dec
mov
pusha
mov
mov
inc
les
paddd
mov
pusha
xchg
and
aam
inc
pusha
movsl
push
int3
xchg
sbbb
js
push
cs
out
jnp
movsb
pushf
sub
mov
jo
push
mov
jge
push
insb
out
pop
test
ss
stos
test
aas
sarb
add
in
les
adc
fwait
imul
jge
cmp
mov
stc
daa
mov
hlt
sbb
dec
repz
loop
push
mov
ret
into
movsl
inc
push
jae
inc
jne
inc
sbb
push
dec
adc
pop
popf
sub
das
mov
out
jg
dec
in
nop
or
iret
scas
nop
mov
jecxz,pn
cmp
shl
inc
or
iret
dec
movsb
add
adc
je
sub
adc
test
scas
outsl
mov
cli
xchg
popa
lods
mov
xchg
popa
add
pop
sbb
add
and
lds
mov
pop
daa
lock
mov
mov
js
out
dec
mov
push
mov
pop
mov
mov
or
dec
xchg
repnz
add
jae
sbb
push
push
aas
mov
sti
insb
jmp
cltd
inc
dec
xor
hlt
xchg
fcmovnb
insb
push
fstpl
dec
cltd
movsb
fistpl
mov
inc
inc
int3
mov
mov
adc
pop
xor
das
xchg
pop
jae
add
adc
das
out
xchg
sbb
and
mov
mov
mov
jl
jg
adc
or
out
mov
jo
xorb
pushf
outsb
or
in
or
flds
repnz
jae
in
and
sahf
add
inc
add
or
in
cmp
sbb
bound
out
testb
stc
pop
xchg
test
out
cmpsb
scas
mov
cmpsb
mov
jmp
sub
adc
in
sub
xchg
mov
test
cmc
fsts
mov
hlt
xchg
inc
imul
out
or
dec
and
out
add
leave
mov
cmp
add
push
gs
mov
mov
fsub
pop
test
je
mov
cmpsb
call
cli
ljmp
cmp
inc
int
push
in
xor
je
movsl
cmpsb
popa
jp
subb
mov
loopne
mov
in
jecxz
aas
mov
push
imul
sub
or
sub
push
adc
jge
jmp
jbe
xor
mov
dec
dec
lods
in
in
mov
xchg
xchg
into
jnp
cmpsl
out
aad
sbb
ss
mov
std
jmp
mov
mov
scas
jb
loope
lcall
mov
iret
call
cld
inc
inc
imul
aas
and
cmp
cld
loop
in
mov
add
movsb
arpl
test
test
push
pop
jne
pop
enter
dec
nop
and
mov
test
xchg
mov
dec
or
push
je
dec
scas
jmp
or
dec
jo
cld
sti
mov
pop
and
mov
jg
sbbl
fnstsw
jnp
and
mov
adc
or
sti
cmp
push
aam
push
arpl
ror
jg
dec
fadds
push
scas
rol
loope
inc
inc
mov
std
fists
idivb
mov
mov
arpl
outsl
push
push
ljmp
sbb
xchg
shlb
outsl
dec
movsl
dec
sbb
jnp
jne
arpl
pop
pushf
ret
setge
fnsave
jle
jl
insl
aad
push
jle
mov
dec
mov
inc
xor
enter
cs
xor
dec
sbb
add
cmp
xchg
pushl
jp
cmp
sahf
mov
popa
or
daa
mov
mov
cmp
push
jecxz
dec
or
iret
mov
pop
lds
loope
xorl
xchg
loopne
test
lock
mov
cwtl
arpl
fildl
mov
sbb
mov
incb
xor
ja
xchg
in
iret
out
je
pusha
sti
in
cmc
mov
aaa
mov
mov
outsb
jmp
jno
lock
lods
movsb
jecxz
or
mov
pushaw
push
mov
add
cltd
test
movsb
inc
jb
adc
cmp
push
or
jl
pusha
jbe
lock
mov
movsl
ljmp
push
jg
mov
xchg
out
enter
mov
aaa
dec
loope
test
or
lods
pop
xchg
popa
xor
enter
cmp
xchg
mov
push
mov
push
push
stos
mov
cwtl
pop
aas
inc
out
outsb
in
push
sti
and
adc
iret
test
ret
stc
xchg
jge
xlat
cmp
sub
push
cs
gs
adc
lcall
lahf
in
arpl
pop
shrb
sbb
out
es
ss
pusha
push
xchg
sbb
pop
adc
aad
fimuls
dec
xlat
sarl
shrb
scas
sbb
lret
lea
and
xchg
imul
sbb
push
pop
je
repnz
ror
testb
add
mov
lahf
adc
adc
push
and
xchg
lods
scas
dec
sahf
leave
loope
or
pop
cmp
sbb
repz
leave
aaa
orl
ficomps
sub
jl
mov
arpl
insl
xchg
cmc
addr16
movsl
fstps
mov
psllw
cmp
test
cld
cwtl
jae
mov
test
outsb
lods
and
aam
aaa
int3
pop
call
jmp
test
fcmovu
test
sti
es
mov
es
mov
js
loope
jo
in
mov
lds
loope
jge
call
gs
dec
mov
sahf
inc
xor
movsb
pushf
adc
cmp
jecxz
insb
cmp
enter
adc
mov
fwait
shlb
cs
xor
jbe
xor
addb
mov
jns
xlat
mov
cs
rcrl
call
mov
dec
pushf
lock
mov
test
adc
aaa
int3
and
pop
mov
pop
cmp
mov
inc
sub
sahf
pop
in
inc
jmp
movsl
xchg
ss
icebp
int
test
jae
dec
xor
pop
gs
adc
sbb
jb
jge
andb
adc
inc
mov
flds
arpl
xchg
sbb
in
mov
je
or
xor
mov
iret
ss
stc
popl
dec
mov
mov
lret
mov
sub
or
lahf
xchg
add
pop
sbb
adc
ds
push
xchg
stc
movsl
pop
and
shll
cmp
es
sahf
xor
jb
push
or
int
or
pop
pusha
inc
loopne
add
pop
scas
xor
and
fnstenv
lock
sub
fdivr
cmpsb
mov
loope
pop
movsb
jb
cld
xor
push
jle
add
mov
add
pushf
mov
and
fwait
xor
xor
lahf
push
jbe
out
out
addr16
cmp
add
inc
sbb
mov
dec
ret
xchg
and
xchg
cmp
mov
aaa
and
stos
sbb
inc
add
ja
andl
divb
sub
cmpsb
push
std
fidivs
loope
fiadds
js
sahf
scas
xor
test
sbb
ret
aad
loopne
call
sub
cmp
sti
jae
mov
pop
out
pushf
mov
pop
jecxz
fwait
je
cs
adc
ds
sbb
mov
mov
push
aam
inc
dec
inc
std
and
das
mov
je
pop
xchg
xlat
test
push
ljmp
and
mov
xchg
lahf
jmp
mov
fsubr
sarb
in
sub
adc
lahf
jecxz
pop
adc
test
push
pop
mov
mov
mov
mov
lcall
add
addb
jmp
mov
addl
and
push
xor
sbb
lret
sbbb
jne
mov
fdivl
inc
sbb
test
out
loopne
or
mov
mov
or
icebp
scas
add
arpl
pusha
push
lcall
push
adcb
mov
mov
jo
jl
cmp
clc
in
push
and
stc
test
mov
aaa
jge
or
inc
out
divl
inc
xor
inc
sysenter
in
jnp
cmp
or
es
inc
cmpsb
pop
sbb
mov
stos
cmp
jbe
or
cmp
movsl
frstor
test
inc
mov
jae
xor
mov
xor
dec
pop
je
cmp
arpl
sahf
movsb
js
push
pop
lods
pop
pushf
ret
cmp
js
insb
pusha
daa
mov
fnsave
sbb
xchg
loopne
inc
cmp
fstp
cmp
adc
jg
shlb
jmp
movsl
add
sub
push
mov
pusha
lock
pushf
mov
jmp
mov
lret
aam
out
and
imul
inc
push
push
cwtl
jg
cli
jb
loope
movsl
mov
gs
adcl
aaa
inc
movsl
cwtl
mov
xorl
daa
cmpsb
mov
jecxz
std
mov
push
xchg
xchg
xorb
jmp
mov
mov
cmp
rclb
and
add
jno
ja
cltd
imul
rorl
cmp
and
pop
mov
ret
jnp
mov
inc
pop
shlb
push
and
imul
inc
inc
in
push
addb
rcrb
cld
mov
icebp
lret
icebp
cmp
punpckhwd
cmp
stc
xchg
icebp
xor
pop
cld
pop
adc
add
sbb
adc
lods
sti
scas
pusha
into
aad
push
cmpsb
and
xchg
fwait
pop
jnp
add
repz
fnstenv
dec
testl
sahf
mov
xchg
xor
cwtl
fbstp
or
xchg
cmp
icebp
xchg
dec
loopne
sbb
mov
loop
lea
xor
jp
xor
push
dec
rorb
jg
imul
mov
and
sub
outsb
inc
inc
popf
dec
jle
push
add
push
scas
popf
adc
enter
std
sub
ret
mov
shl
and
add
pop
mov
mov
notb
pop
xchg
push
cld
jg
popa
xchg
jnp
adc
pop
pop
jns
sbb
je
mulb
les
mov
loop
fs
add
xor
nop
xchg
cmp
scas
mov
jno
push
js
sarb
pop
fadds
xor
fsts
mov
xchg
popa
popf
or
test
sub
adc
cmp
stc
xchg
cli
and
call
push
mov
insb
test
xchg
adc
xchg
xchg
jmp
test
loopne
sbb
cmp
xor
cmpsl
test
push
faddl
stc
xor
mov
fiaddl
push
push
ss
add
sbb
int3
inc
jmp
int3
lret
inc
sahf
or
cmp
mov
adc
pop
pop
cmp
mov
out
js
repnz
sbb
negb
icebp
sbb
stos
repnz
mov
aaa
sub
jle
out
cmp
mov
inc
fdivl
pop
rorl
sbb
adc
jbe
or
jge
or
scas
sbb
jmp
int3
jecxz
imul
add
fdivp
imul
std
sbbl
lret
dec
mov
sub
je
sub
arpl
fbld
adc
loopne
mov
sti
mov
sub
test
sbb
in
lret
rol
and
clc
lcall
es
cld
into
jle
mov
add
mov
mov
jo
dec
or
test
xchg
xor
cwtl
inc
sub
test
out
push
pusha
mov
push
nop
and
add
pop
loopne
xor
sbb
or
int3
mov
ds
mov
fcoms
mov
and
jbe
in
xor
push
insl
out
add
je
mov
arpl
add
in
rcr
dec
rclb
mov
test
stos
ja
mov
insl
mov
push
nop
aas
call
mov
cmp
push
nop
adc
pop
jge
dec
dec
adc
fnstenv
ja
leave
push
jo
pop
into
adc
push
pop
add
cli
rorl
icebp
cwtl
movsb
repz
mov
jg
mov
outsb
xchg
iret
dec
sbb
mov
xchg
mov
jg
sub
jecxz
test
adc
push
rol
bound
bound
fmull
push
cld
clc
cmpsl
sbb
pop
xlat
mov
push
mov
or
sub
mov
imul
push
fsubs
dec
or
mov
sbb
or
sahf
pop
jle
andl
sub
jecxz
pop
pushf
lahf
clc
icebp
push
jg
xor
in
xchg
xchg
in
test
pop
xchg
xor
inc
sti
sub
repnz
cli
stos
data16
jl
jg
sbb
lods
lret
stc
pop
push
jbe
push
sti
pop
xchg
scas
fisubl
lea
adc
mov
nop
push
fnstcw
lock
in
mov
scas
xchg
or
cmp
mov
and
pop
aam
pop
pop
neg
push
pop
data16
movsb
sub
push
jecxz
jecxz
mov
je
cmp
repz
popa
xchg
int3
jae
mov
ss
push
sub
mov
fcom
pop
mov
loopne
jns
xchg
std
sub
lret
ljmp
insl
mov
adc
fcomps
mov
aas
adc
xor
sub
test
dec
popa
leave
out
dec
sbb
shll
pop
or
les
mov
and
xchg
xorb
and
lahf
out
sub
mov
imul
mov
call
mov
jne
cld
cmp
push
pop
dec
les
in
repz
aas
jns
mov
push
mov
sub
pop
push
ljmp
lods
fdivr
sub
shll
je
or
cwtl
mov
xlat
ljmp
addr16
in
push
sub
jge
add
inc
cwtl
sbb
das
imulb
sarl
les
jno
dec
stc
sub
testb
aad
jo
mov
loopne
xchg
sahf
or
lahf
push
sbb
cmc
mov
jge
xchg
xor
fwait
lods
je
cltd
icebp
cmp
icebp
jno
mov
out
mov
pop
push
push
ds
outsb
aam
push
inc
jb
fwait
xor
lret
cmp
sbb
lcall
xchg
pusha
push
xchg
inc
sbb
gs
sbb
test
or
leave
mov
adc
inc
ret
cmpsb
sti
pop
call
mov
mov
or
popa
mov
ljmp
dec
cwtl
sbb
adc
fnstenv
lret
pop
inc
test
iret
addr16
out
nop
mov
out
adc
into
movsb
mov
gs
push
jns
mov
inc
inc
pop
insl
adc
das
in
rolb
mov
mov
cmc
daa
adc
fstpl
mull
mov
pop
push
subb
decl
xchg
lods
mov
lock
mov
arpl
in
xor
sbb
addl
add
inc
gs
dec
popl
hlt
mov
push
out
jg
popf
xchg
push
mov
loopne
jae
mov
test
dec
out
lcall
scas
mov
pop
enter
and
leave
mov
cwtl
testl
pop
cld
lret
add
jmp
cmp
xchg
xorl
testl
gs
popf
repnz
mov
pop
mov
movsl
mov
inc
pop
inc
nop
fldl
out
or
add
fwait
test
jns
nop
jns
fistps
cld
sbb
insb
sub
out
push
cli
jno
sbb
popa
cwtl
sub
mov
mov
popf
or
ss
test
xor
sarb
sbb
mov
fdiv
dec
pop
fisubrs
push
ret
int
rcrb
pop
push
int
pop
sbb
and
movsl
mov
push
jbe
imul
dec
mov
jbe
lock
repz
cmp
xor
cli
es
faddp
add
push
push
jecxz
push
mov
fwait
cmp
loopne
mov
enter
and
test
cmp
inc
rorl
mov
out
fcom
pop
xchg
jmp
dec
ds
inc
aam
jns
cltd
les
jge
pop
jmp
movsb
inc
xchg
pop
pop
xchg
jmp
lods
enter
push
test
and
jno
test
cltd
push
sub
mov
push
push
test
mov
or
stos
addl
pushf
sbb
icebp
xchg
scas
stos
cmp
leave
jnp
mov
mov
mov
push
inc
pop
pop
stc
jp
mov
fs
cmc
aad
jne
ror
mov
sarl
jp
cld
cmp
dec
xor
or
mov
sub
cmp
enter
sub
fstpl
jbe
sub
or
add
nop
loopne,pt
in
nop
xchg
in
loopne
ret
es
mov
inc
cwtl
xchg
adc
fistps
mov
outsl
pop
jne
out
out
mov
mov
imul
sbb
loop
cltd
icebp
adc
dec
arpl
outsb
jecxz
mov
in
jnp,pt
cvtdq2ps
mov
sar
pop
movsl
dec
out
xchg
cmpsl
rcrl
lods
pushf
or
daa
xor
aad
mov
dec
sbbb
cmc
adc
ljmp
subb
mov
or
es
mov
call
xlat
dec
mov
inc
jl
loop
mov
sub
jbe
push
and
mov
mov
pushf
xchg
cmpsl
mov
add
adc
fmulp
ret
cmp
xor
scas
xchg
inc
cmp
aam
jbe
lods
pop
adc
pop
ret
push
jo
fmull
adc
in
aad
sub
sub
pop
pop
add
insb
add
insb
jge
or
jne
adc
xchg
roll
push
loope
clc
xchg
loop
mov
ret
ljmp
shll
jno
outsl
push
mov
pusha
and
arpl
jg
in
sbb
pop
arpl
sbb
or
push
mov
and
mov
jno
mov
stos
imul
jns
loopne
pop
jecxz
cli
dec
xchg
push
push
sub
cltd
mov
fmul
into
mov
in
stos
int
sbb
nop
and
jecxz
in
sub
insl
imul
insl
or
pop
xchg
cmpsb
shrl
repz
lock
fistps
hlt
rorl
fs
mov
fisttps
mov
pop
ss
xchg
out
push
adcb
arpl
lahf
push
dec
test
leave
xchg
fldt
inc
in
les
xlat
jo
shll
inc
jns
pushf
jl
cmc
lock
cmp
inc
sarl
clc
mov
xchg
or
movsl
and
sbb
call
mov
loopw
or
or
pop
ficomps
cmpsb
adc
notl
ja
jne
sbb
mov
call
xchg
or
add
adc
xchg
stc
adc
daa
outsl
int3
add
cld
clc
addb
addl
mov
fs
add
adc
aad
sbb
jmp
cli
sar
pop
mov
cmpsl
inc
lret
jnp
pop
insb
mov
fwait
in
or
lret
jnp
leave
stos
pop
mov
ja
jp
insl
out
lret
out
or
call
inc
sbb
mov
iret
jl
jle
jp
pop
hlt
push
push
adcb
test
jno
or
insb
enter
pop
adc
out
icebp
mul
pusha
lock
rcr
push
mov
leave
pop
mov
sub
dec
mov
cmp
add
jb
cltd
jmp
cmp
adc
dec
sarb
push
daa
scas
sub
int
xchg
imul
aaa
stc
mov
hlt
mov
push
mov
xor
cwtl
mov
jg
sbb
pop
push
sahf
ljmp
imul
sbbb
stc
inc
push
nop
cwtl
add
sbb
pushf
and
pop
js
ret
aas
faddl
lret
or
ss
test
sub
xor
in
aad
out
sub
call
jecxz
mov
shrl
hlt
repnz
loop
jmp
sbb
fmuls
clc
mov
pop
flds
cmc
lcall
jmp
or
in
ljmp
dec
and
outsb
insl
addr16
cmp
testl
fisubrl
mov
cmpb
fistpll
add
dec
mov
adc
das
mov
mov
bound
orb
cli
jbe
rdtsc
ret
imul
and
sbb
sub
inc
or
mov
test
sub
fwait
test
push
mov
jns
cmp
out
lods
ret
xor
adc
mov
mov
or
fisubrl
out
cmp
faddp
aad
mov
out
adcl
xor
mov
dec
dec
subl
sahf
mov
cld
jecxz
pusha
aas
mov
mov
dec
sub
sbb
in
inc
sahf
out
shrl
xchg
inc
push
inc
mov
sbb
into
jmp
sbb
xor
dec
add
out
sti
jge
fs
sbb
rolb
sub
pop
fsubl
mov
jno
pop
pop
adc
adc
out
pop
jbe
pop
sbb
int
insl
xchg
dec
rcrl
xchg
jne
repz
fsts
inc
shrl
inc
jge
mov
mov
fistpll
xchg
pop
enter
subb
clc
cmp
fwait
lcall
mov
repz
leave
sub
in
and
leave
mov
ss
sbb
pop
and
fsubrs
cltd
mov
and
push
xchg
mov
rorl
xchg
loope
and
xchg
add
arpl
push
dec
insl
sub
xchg
movsb
lret
divl
jecxz
int
leave
mov
insb
inc
adc
sbb
idivl
stos
jae
mov
arpl
inc
adc
das
icebp
adc
leave
scas
and
out
adc
clc
xor
sub
jg
or
xor
fidivrs
scas
in
or
mov
enter
lea
sub
pop
cmp
fistl
pop
jns
in
push
sbb
or
stc
aas
xor
push
sbb
ja
cld
je
cmp
push
add
mov
idivb
lcall
sub
fadds
inc
jp
mov
jb
adc
movsl
pop
and
test
stos
out
call
xchg
mov
or
xor
sarb
or
sahf
pop
adc
repnz
out
outsl
cmp
call
sbb
adc
cmp
test
test
loope
cmpsb
mov
cmp
and
push
incb
pop
pop
call
push
mov
adc
mov
push
or
aad
mov
sahf
add
sahf
adc
lods
hlt
ds
std
jg
sbb
pop
sbb
jne
je
movb
cmp
lods
pop
aam
xor
mov
pop
es
xchg
xor
enter
lock
xchg
jae
fwait
icebp
jno
sarl
daa
repz
inc
aas
inc
xor
mov
inc
cmp
xchg
fs
sbb
pop
xchg
in
xor
jb
sub
dec
cmpsb
sbb
clc
push
and
in
fistpll
dec
arpl
and
mov
add
push
lods
cmp
adc
int3
mov
xor
loope
adc
hlt
and
ss
or
push
mov
mov
push
je
mov
into
sbb
bound
sbb
sbb
pop
rorl
xchg
outsl
orl
jnp
xchg
lcall
dec
sub
ljmp
sbb
movsl
jecxz
es
cltd
loope
sbb
push
or
mov
je
or
mov
les
cmpb
call
sbb
arpl
inc
into
cmp
cmp
xor
jns
leave
ja
jge
add
mov
fdivs
mov
movsl
hlt
movl
jl
mov
es
cld
sbb
push
loop
es
adcl
fdivl
cmp
sti
pop
mov
cmpsl
outsl
bound
aam
test
addr16
rol
call
out
out
xchg
cld
rcll
lock
ret
mov
and
sub
add
ds
fldenv
or
repz
mov
push
mov
dec
ljmp
lret
sbb
adc
push
xchg
mov
lods
sbb
imul
rcll
idivb
into
std
aam
mov
ret
and
sbb
lret
sub
sarl
call
dec
movsb
pushl
call
mov
test
mul
or
inc
nop
jecxz
push
scas
pop
mov
lods
frstor
mov
and
xor
mov
dec
mov
lret
out
fisubs
out
adc
jne
push
xor
fisubrs
pop
sub
xchg
jl
les
or
arpl
in
sbb
idivl
std
mov
and
sbb
les
and
popa
dec
out
push
les
and
lahf
rolb
sbb
dec
loope
inc
mov
jge
push
xchg
jge
lock
sbb
into
arpl
cmpsb
aas
sbb
cmp
xchg
jnp
testl
sub
adc
xor
test
jl
push
and
and
mov
pop
stos
jno
js
repz
es
dec
adc
sub
and
rcrb
lret
push
clc
mov
es
jb
or
xor
ja
sub
xchg
jmp
mov
sbb
jp
lods
push
adc
xor
shlb
inc
inc
mov
sub
shrl
popa
mov
xor
cmp
mov
js
popa
nop
testb
cltd
or
pop
orl
xor
mov
sbb
xor
xchg
in
jno
jge
jmp
leave
stos
push
mov
das
sub
hlt
out
jmp
push
jnp
or
pusha
pop
das
test
jg
jp
fnstenv
loopne
loop
lods
sar
cltd
pop
xor
stc
idivl
xchg
sbb
xor
repz
jle
dec
mov
or
inc
add
cmp
jecxz
sub
jg
popa
xlat
and
icebp
jne
and
pop
into
stc
pop
test
pop
cltd
jl
mov
jbe
xlat
les
xor
and
dec
push
xchg
mov
cld
push
je
das
mov
jb
adc
fstpl
jnp
mov
enter
fwait
leave
add
sbb
push
andb
insl
xchg
mov
push
out
push
iret
popf
xchg
push
popf
in
sub
cmpsb
fstps
push
imul
imul
in
lock
jns
lret
mov
dec
cmc
mov
icebp
inc
jnp
push
xor
aaa
cmpsl
ss
pop
stc
push
shlb
add
inc
inc
cmpsl
mov
fnsave
test
fisttpl
jecxz
xchg
sub
jne
or
cmc
dec
mov
jno
xor
aam
mov
imul
mov
in
push
mov
sar
movsl
xor
pop
xor
popf
nop
clc
xor
lcall
push
lods
data16
test
pop
and
pop
sbb
and
push
add
or
popa
rorb
mov
daa
cmp
stos
xchg
movsl
mov
or
les
std
dec
gs
cmp
push
lahf
stc
ja
sarl
popa
and
xchg
mov
psubd
xlat
add
lds
idivb
pop
jmp
aas
outsb
cltd
stc
sub
aas
pushf
adc
sub
jmp
jno
mov
mov
xor
imul
push
or
xchg
push
in
movsb
and
orb
stos
sub
mov
fld
dec
xchg
sti
push
adc
xor
or
stos
pop
bound
fistpl
into
ljmp
pop
fists
rcl
push
in
pop
fildll
adc
mov
add
std
scas
movsl
push
mov
ds
push
inc
inc
inc
outsb
out
out
popa
add
xor
fldcw
adcl
gs
insl
int3
cmpl
aad
imul
adcl
lods
lods
test
call
mov
arpl
incl
flds
dec
icebp
fidivrl
mov
dec
xchg
mov
sbb
cld
cmpsb
sbb
jmp
xchg
mov
mov
push
fstpt
add
add
rorb
leave
ja
cmp
ss
pop
imul
mov
inc
in
or
mov
repz
jne
int
adc
inc
test
inc
setl
bound
push
and
inc
out
or
dec
mov
fnstenv
xlat
pop
fldcw
inc
inc
test
sbb
adc
test
and
lret
nop
fs
pop
mov
sub
add
fsubl
inc
pop
xchg
and
sbb
dec
rcll
push
daa
daa
xor
pop
dec
sbb
mov
testl
xor
push
movsb
insb
jno
push
stc
leave
subl
test
jne
push
mov
fisubrl
push
test
adc
or
stos
bnd
inc
pop
mov
insb
ss
in
mov
ss
int3
dec
sub
mov
inc
lret
jle
jno
xchg
jns
jecxz
aas
lahf
push
and
fisubrs
adc
xchg
mov
xchg
jo
and
lahf
es
sub
imul
jns
popa
push
dec
add
push
xor
xor
jp
xchg
mov
fldl
mov
test
pop
mov
push
mov
pushf
jge
dec
mov
gs
js
fxch
mov
fsubrl
add
jne
mov
stos
repnz
pop
pop
cs
add
xchg
mov
roll
pop
test
out
pop
mov
movsl
sub
js
push
mov
orb
cs
push
cld
mov
inc
xor
gs
push
mov
and
add
lahf
das
mov
pop
mov
cld
dec
mov
adc
inc
push
fildll
mov
ret
or
dec
cld
or
fwait
mov
jbe
and
subl
shll
inc
push
jb
xor
pusha
inc
loopne
popa
dec
fisubrl
mov
mov
sbb
cld
cmpl
pop
test
lret
push
cli
cmp
or
xchg
test
stos
sbb
mov
jae
cmp
hlt
mov
inc
dec
or
mov
ljmp
adc
pop
aaa
adc
xchg
pop
aas
loope
ss
idivl
add
and
aaa
aas
lcall
pop
into
mov
out
jbe
inc
push
xchg
aad
pusha
fwait
sbb
fsubrs
add
push
jns
xor
sbb
cld
cmp
inc
xchg
js
inc
stos
sti
xor
sbb
mov
push
sub
xor
mov
push
pop
fistps
fisubs
pop
mov
fcomps
aam
inc
push
mov
iret
fnsave
and
test
sub
outsb
hlt
cwtl
in
fmul
aaa
mov
faddl
outsb
int
inc
sarb
mov
sahf
bound
dec
mov
sbb
psubb
pop
shlb
jb
dec
hlt
stos
movsb
cmp
leave
jne
cmp
xchg
mov
stos
fsubrp
jns
add
pop
mov
mov
jae
pop
notl
mov
cmpsb
scas
and
es
testb
ret
repnz
es
insb
test
fisttpl
je
xchg
addr16
cmp
aam
push
mov
jae
nop
imul
inc
mov
pop
cmp
ss
daa
jmp
xchg
dec
mov
hlt
jne
pop
outsl
mov
jnp
repz
jmp
or
cwtl
aas
pop
xor
rolb
aam
lods
sbb
dec
xchg
push
scas
sahf
mov
js
dec
and
push
outsb
adc
test
ja
scas
jg
fmul
adc
pop
addr16
mov
test
out
lcall
add
jbe
push
mov
push
loop
int
shlb
sbb
or
cs
cltd
shlb
je
adc
xchg
scas
lret
vprotw
clc
dec
test
add
dec
fnstcw
mov
iret
adc
jnp
xchg
pslld
xchg
in
outsl
fwait
in
or
pop
jbe
aaa
mov
jne
sub
jg
test
es
mov
outsb
cli
jae
dec
imul
pop
test
fmuls
shl
popa
ret
sub
adc
ss
cmc
adc
jecxz
cmp
push
push
jns
call
cltd
jb
test
or
jmp
inc
mov
lock
mov
aam
loopne
adc
shll
lret
rol
mov
movsl
xchg
and
jns
xor
jl
inc
aam
shl
or
sub
aam
pop
ss
fisubrs
pop
or
jnp
pop
jb
cmpl
push
ret
test
dec
imulb
cmp
xor
inc
adc
fs
mov
test
dec
inc
stc
add
cmp
cld
ret
je,pt
in
mov
xchg
sbb
pop
lahf
das
repz
or
fld
test
and
dec
adc
cmpsl
sbb
adc
in
testb
mov
addr16
sbb
in
pop
outsl
je
inc
mov
push
sarb
cs
xor
lds
push
fsubrs
pop
mov
call
mov
pop
xor
jmp
add
cmc
jb
test
in
jl
dec
imul
inc
push
xor
clc
or
pop
push
fs
ljmp
cmp
cmp
cmpsl
and
outsb
pop
ds
and
pushf
jecxz
in
pop
mulb
ficoml
je
fisubs
xchg
daa
sbb
pusha
jo
cmpsl
data16
inc
mov
xor
es
enter
cmpsl
ret
call
out
mov
dec
sub
adc
xchg
idivb
dec
ja
fnsave
sub
adc
dec
cmp
jp
jno
push
adc
jae
adc
enter
arpl
adc
inc
lock
xor
test
imulb
inc
jb
dec
mov
jmp
out
fs
ret
insb
imulb
cmpsb
jns
ud0
dec
aas
clc
cmp
inc
fisubrs
and
fstp
fsubl
js
add
jae
addr16
clc
pop
hlt
out
out
aas
andl
xor
std
shlb
jns
ja
xchg
insl
mov
mov
lods
jecxz
xor
clc
jbe
mov
push
and
imul
sub
mov
cwtl
inc
jmp
pop
lods
and
push
das
mov
mov
imul
cmp
fists
insb
imul
subb
loope
add
mov
es
iret
cld
jae
mov
adc
fidivrs
leave
dec
iret
lock
adc
mov
imul
outsl
lds
or
xchg
shll
shrl
aad
push
mov
mov
and
pop
fildl
cmpsl
lret
sbb
and
in
mov
data16
mov
mov
repz
xchg
or
fimuls
mov
lock
push
imul
ja
xor
mov
repz
enter
adc
mov
in
insb
jge
popa
mov
sar
or
jecxz
adc
or
cld
testl
inc
int
dec
loop
stos
lret
dec
fs
fneni(8087
daa
xchg
xchg
imul
aad
shrb
divb
clc
mov
push
cmp
mov
outsb
scas
stos
jge
cld
arpl
shlb
pop
add
outsb
test
and
dec
jge
fstpt
int3
jno
mov
cmp
jp
mov
mov
dec
push
push
call
pop
in
push
push
fists
sbb
xor
insl
fcmovbe
in
sbb
cltd
rcrb
pop
cmp
test
int
mov
lret
shr
adc
jge
repnz
pop
inc
lret
ljmp
lock
cmp
stos
leave
fisubrs
fisttpll
arpl
add
add
push
pop
pop
aas
leave
aaa
pop
rcl
adc
pop
fwait
fs
std
or
roll
repz
or
sbbl
adc
call
mov
cli
repnz
mov
jp
xor
pushl
dec
fnsave
add
or
push
fdivrs
xor
loop
ret
mov
arpl
fildll
jp
sahf
xchg
sbb
or
je
cmpsl
jnp
scas
outsb
paddusw
mov
push
fsubs
push
fistpll
inc
cltd
js
push
std
inc
push
fbstp
xchg
xor
stos
mov
xchg
mov
or
insb
jmp
sub
shl
xchg
mov
mov
mov
pop
fidivs
push
xchg
repz
dec
js
daa
add
mov
fimull
iret
cmc
xor
xor
daa
fstpl
push
data16
mov
iret
fs
push
lods
jmp
adc
dec
push
mov
add
dec
mov
mov
adc
xchg
imul
pushf
fdivrs
sti
sub
insl
push
adc
cmp
xor
fs
lret
adc
divl
test
inc
decb
pop
out
ljmp
sbb
jbe
mov
fucomp
push
jns
loopne
jno
sbb
jae
inc
adc
insb
push
or
pusha
cmp
out
stos
pushf
leave
movsl
data16
push
test
pushf
ret
repnz
dec
vphadddq
lret
push
cld
or
and
add
inc
icebp
stos
push
rol
aas
int
mov
clc
fs
lods
fidivs
negl
repnz
adc
jbe
imul
xor
dec
test
mov
inc
mov
mov
fnstcw
inc
jnp
jbe
int3
nop
icebp
adc
aad
cli
sbb
scas
inc
mov
sbb
push
sarb
pushf
mov
pop
push
lret
scas
inc
sbbb
adc
adc
out
scas
scas
jb
popf
pop
sbb
adc
push
dec
aas
fwait
in
xor
imul
int
mov
cli
mov
mov
mov
and
and
adc
nop
or
push
fdivs
and
adcl
fisubs
push
dec
rol
loopne
jp
lea
push
xchg
mov
arpl
loop
push
sahf
leave
add
fs
add
mov
test
je
aam
imul
outsl
sub
adc
cmp
adc
addr16
xchg
movb
stos
mov
into
cld
xor
fsub
sbb
ljmp
cmp
outsl
orb
in
jg
rorb
pop
ds
pop
sub
xchg
xor
xor
sahf
mov
xchg
or
in
mov
adc
adc
cmp
subb
stos
cmp
push
bound
cld
lcall
inc
sbb
ss
shrl
adc
inc
sahf
and
cmp
inc
in
stos
push
loope
inc
push
xor
add
aas
cld
mov
pop
mov
sbb
xchg
and
cmpsb
loopne
stc
sub
leave
pusha
xlat
cmp
inc
in
adc
dec
jns
adc
xlat
std
push
mov
mov
in
xor
mov
subl
outsb
lret
popf
jl
inc
shll
cmpsb
je
aam
fdivr
or
call
jle
lahf
xor
in
popf
push
adc
or
dec
jge
and
jns
cmc
sub
sub
nop
pop
xlat
mov
icebp
call
cmp
dec
fs
mov
pop
jl
inc
inc
and
out
jmp
pop
mov
js
lods
aad
cli
xchg
cld
ljmp
mov
rcr
cmp
jo
cmpsb
cli
orl
or
jmp
stc
jg
dec
cmpsb
adc
cli
movl
jb
or
mov
mov
cli
sbb
lds
aam
mov
stos
cmp
mov
cmp
inc
add
add
into
xchg
ljmp
daa
cwtl
cmp
lret
adc
dec
shlb
xor
xchg
adc
xchg
arpl
addr16
out
mov
fbstp
test
cli
mov
repz
insl
xchg
mov
insb
in
push
xor
inc
mov
xor
mov
aad
fwait
pop
push
andb
int
xchg
sqrtps
jae
je,pn
jp
push
jo
adc
addl
cltd
stos
lods
lock
outsb
mov
test
insb
push
mov
fbstp
loope
sub
mov
lods
in
and
cmpsl
mov
jl
lret
into
in
jl
push
mov
mov
xor
addl
mov
mov
inc
fsubrs
stos
xor
sbb
fsub
cwtl
ret
mov
mov
lock
adc
sbb
fidivrs
scas
pop
or
xchg
add
push
ja
adc
pop
out
or
imul
inc
push
add
mov
xor
jnp
sub
daa
les
xchg
mov
mov
mov
fistpll
pop
inc
dec
decl
dec
sub
sbb
lcall
cwtl
add
push
movsl
dec
xchg
sbb
adc
cmpb
int3
xor
shrb
adc
int3
pop
fimuls
sbb
jg
ljmp
cmp
into
lret
pop
xor
sbb
xor
and
shrl
or
and
repnz
jl
or
roll
xor
shl
jmp
sub
and
cmp
sbb
dec
in
rorb
ret
push
cmpsb
decb
wbinvd
test
insb
shll
cmc
cmp
pushf
jbe
ret
lods
scas
out
dec
pop
add
mov
pop
test
jbe
ljmp
in
dec
fstpt
popf
int3
movsb
adc
inc
add
ret
sub
sub
dec
and
lret
pop
in
xor
sbb
aad
dec
add
loope
or
sub
and
rcrl
inc
repz
insl
mov
cmp
cmp
xchg
jbe
stc
pop
mov
add
add
sarl
cmpsb
dec
sbb
fwait
popa
out
xor
mov
cwtl
jmp
loopne
fsubl
lahf
fcmovu
pop
cmp
and
repz
into
rol
rcrb
out
xchg
push
push
pop
pop
push
push
inc
inc
adc
mov
and
cld
mov
xchg
xchg
push
sbb
sub
or
cmpsb
add
int
cld
int
aad
mov
pop
adc
into
sub
cmpsb
andl
movsl
mov
jmp
aam
mov
hlt
xlat
clc
add
aam
pop
lea
jno
xor
cmp
nop
lods
cmp
xchg
or
push
es
jmp
leave
push
xor
in
dec
nop
into
in
ret
cmp
mov
in
ficoml
add
lcall
pop
push
mov
add
pop
movsl
push
xchg
push
inc
inc
xor
pop
enter
xchg
out
gs
sahf
fnstcw
insb
add
fcomp
mov
movsl
sbbl
sub
mov
icebp
test
or
rclb
call
inc
dec
xchg
cmp
fnstenv
or
nop
idiv
and
mov
adc
sub
lret
pop
dec
jp
or
mov
dec
inc
or
or
and
cld
roll
lods
mov
in
movsb
lds
mov
aad
dec
fstps
xor
andb
sub
data16
mov
jns
xchg
and
cmpl
xchg
rorl
mov
fmull
addb
dec
and
push
xlat
data16
push
xor
imul
daa
xor
add
sub
scas
scas
mov
jno
push
fcompl
ret
int3
jmp
jg
shll
pop
repnz
fldl
adc
pop
mov
popf
jno
lea
xor
scas
dec
and
add
mov
pop
enter
out
ljmp
lret
cmp
mov
pop
add
insl
or
mov
push
hlt
ret
outsb
dec
pop
and
lods
pop
push
and
jp
popf
jno
xor
add
cmp
test
mov
cmpsb
jae
leave
xchg
cmpsb
pop
outsb
lahf
pop
cmp
lods
js
push
das
pop
scas
xchg
push
sbb
mov
mov
sbb
inc
xlat
lcall
jg
mov
addl
add
cmp
adc
inc
ret
jnp
jno
add
loop
je
mov
or
je
sub
shll
cmpsl
add
xchg
xor
xchg
ret
in
sub
fcoml
xchg
fisubs
cmpsb
mov
jp
cli
stc
out
jmp
mov
add
inc
add
jne
push
outsb
pop
addl
xchg
push
push
imul
fnstcw
add
xchg
mov
jp
mov
clc
xchg
lods
jp
push
sub
je
int
test
adc
fs
push
cmc
je
add
jecxz
pusha
push
fsub
mov
mov
mov
add
popf
xor
sbb
fcomps
sbb
fdivl
mov
cmp
out
shll
iret
repz
xor
hlt
repnz
jp
jbe
lea
jns
popa
cwtl
sti
xchg
xor
add
jnp
sbb
push
jmp
jp
pop
rolb
imul
dec
dec
call
mov
inc
jne
repz
call
and
sahf
nop
int
test
inc
icebp
cltd
test
cld
sbb
daa
jmp
insb
loope
or
fisttps
mov
loop
add
adc
or
cmpsl
or
sar
icebp
mov
movsl
das
or
sub
in
push
int3
inc
ss
mov
ja
adc
fwait
aas
jne
xor
and
mov
mov
jns
imul
pop
movsb
dec
inc
fistpll
jnp
sti
push
mov
and
adc
subb
outsl
mov
int
pop
sbb
add
jecxz
dec
xchg
push
adc
add
jmp
cmp
mov
push
push
sub
test
es
push
fisubrs
cld
mov
jnp
push
jbe
in
dec
pushl
repnz
jne
and
add
inc
lea
dec
mov
jle
xorb
and
stos
ja
add
mov
lcall
xchg
leave
mull
lret
lds
lea
jo
stos
mov
mov
sahf
scas
sbb
dec
or
test
or
jp
subl
imul
pop
insl
ss
mov
adc
xor
cmp
clc
enter
test
add
or
ljmp
ljmp
inc
scas
xchg
inc
add
push
dec
out
cmp
xor
pop
adc
sub
pop
jns
xlat
bound
pop
inc
popa
add
mov
iret
inc
mov
sub
xchg
mov
mov
mov
fdivl
xchg
mov
jl
daa
mov
mov
dec
cli
jecxz
sbb
dec
mov
mov
in
sub
add
stos
cltd
inc
aaa
cmp
mov
sub
fiaddl
adc
test
xor
sub
aaa
push
out
jae
jo
jecxz
cmpsb
mov
clc
xor
xchg
ficoml
imul
ss
lds
adc
inc
sbb
test
or
mov
pop
aas
add
add
push
cmc
mov
inc
or
push
add
xchg
mulb
xchg
in
cltd
fs
jmp
in
out
cmpsb
and
cmp
or
fptan
xchg
inc
mov
jl
sarb
adc
stos
xchg
mov
cmpsl
loope
ficoml
or
ret
add
outsb
sub
adc
cltd
cltd
adc
or
dec
fiaddl
jl
or
lea
add
jns
subl
jecxz
pusha
mov
mov
dec
incb
mov
xchg
inc
lock
mov
mov
clc
xchg
rcl
shlb
add
loopne
out
shll
inc
or
and
mov
ret
dec
inc
cld
sub
int3
fisubs
adc
loope
push
ficompl
add
jg
sbb
inc
xorb
push
das
lahf
sbb
pop
leave
or
xor
lods
test
shl
adc
add
aaa
lea
je
jp
or
mov
inc
mov
imul
cmpsb
inc
pusha
xchg
push
cwtl
lds
xchg
scas
pop
lahf
push
daa
inc
jecxz
in
cmp
jb
or
data16
scas
jbe
pop
add
xlat
inc
jl
cmp
jns
push
jno
jl
subb
pop
nop
mov
imul
movsl
mov
lret
clc
jns
out
sbb
fnstsw
fwait
pop
bound
xorb
or
sub
or
and
std
sbb
push
test
ret
sbb
sub
int
in
dec
popa
out
cmp
inc
push
lret
ret
mov
iret
test
ljmp
jnp
cmp
mov
cmp
mov
test
mov
cwtl
int
add
pop
daa
ret
and
sbb
sahf
pop
sbb
inc
das
jae
test
ret
xor
add
insl
cs
jns
sbb
jg
gs
call
mov
sarl
in
mov
pop
cmp
or
xchg
xchg
or
das
push
mov
adc
es
jmp
mov
fbld
mov
xor
in
shl
add
jge
dec
xor
roll
cmp
out
aad
repnz
shlb
stos
dec
sbb
loopne
dec
push
xchg
movsl
jne
push
push
xor
movsb
mov
sub
sub
int
mov
js
xchg
lcall
std
sbb
cmp
lahf
xchg
popa
mov
cmp
adc
xchg
jg
sarb
out
lock
mov
inc
mov
leave
dec
lret
adc
inc
pop
test
je
aad
mov
xor
sub
cmp
fildl
ror
inc
fiadds
subl
xor
std
rcrb
mov
sub
xlat
inc
jmp
in
dec
cld
push
mov
inc
cwtl
mov
jne
sbb
sub
pop
inc
push
mov
inc
mov
xchg
push
cmc
sub
pop
in
out
mov
fcmovb
lcall
in
mov
adc
inc
pushfw
sbb
dec
aam
aas
addb
push
cmp
ret
inc
mov
push
rcrl
int
and
sbb
out
dec
adc
ffreep
sub
pop
mov
mov
stos
popa
iret
push
inc
push
pop
stc
imul
dec
xor
mov
cmpsl
popa
sbb
xchg
andl
jmp
divl
mov
xchg
cmpsl
jp
int3
pop
stos
jecxz
out
iret
dec
pop
dec
insl
xchg
jb
add
ficompl
sub
xor
pop
jmp
mov
repnz
sbb
testb
add
fcomps
add
adc
xor
call
cmp
sub
jle
xchg
inc
mov
xlat
push
nop
mov
popa
fwait
xor
jmp
push
rorl
push
scas
inc
sub
add
test
movsl
pop
fists
das
push
xlat
mov
popf
shrb
popf
xchg
pop
adc
mov
adc
adcl
sbb
dec
mov
push
out
xchg
pop
rorb
mov
push
lds
stos
and
mov
daa
hlt
inc
cmp
pop
movsl
insb
addr16
pop
mov
shlb
aam
and
pusha
push
or
xchg
xchg
fisttpl
jg
pause
add
dec
jae
ds
xchg
jne
fisubl
cmp
mov
add
cmp
jmp
inc
fs
pop
pop
idivl
pop
andb
andl
mov
xor
pop
jecxz
inc
xor
int
fdivrs
cmp
aad
cwtl
pushf
scas
outsl
sub
push
jp
nop
inc
mov
stc
cli
inc
cmp
insb
push
fs
test
mov
inc
loop
idiv
in
hlt
jg
scas
sbb
scas
lock
ret
bound
xchg
lahf
inc
push
sbb
dec
mov
int3
xchg
adc
push
jg
cli
xchg
cmp
mov
jo
and
and
mov
mov
pop
std
dec
dec
cwtl
mov
cld
lret
gs
mov
cmpsl
sti
icebp
addr16
push
jle
jbe
scas
sarb
dec
aam
cmc
loop
mov
sbb
shlb
dec
pop
lock
shll
inc
in
jae
mov
mov
fcomps
mov
enter
jmp
dec
xor
sbb
mov
sahf
test
push
scas
or
xlat
clc
adc
adc
fdivl
aam
jno
in
sbb
mov
sub
mov
mov
dec
test
push
xlat
cs
std
inc
lock
inc
xorl
mov
cmp
jmp
sbb
sbb
mov
dec
sub
xchg
les
ljmp
and
mov
stos
aaa
or
jl
pop
out
mov
inc
mov
dec
sub
mov
push
shlb
mov
mov
popa
fs
ds
test
xchg
out
comiss
fwait
mov
mov
xor
inc
lcall
mov
outsb
leave
test
sti
bound
dec
inc
pop
adc
sub
lock
mov
sbb
loopne
sub
sub
js
mov
adc
fcmovu
add
push
out
jmp
xchg
call
mov
scas
mov
xor
stc
mov
cltd
out
xchg
xchg
mov
xchg
mov
push
lods
add
push
stos
daa
xchg
ds
mov
pop
add
mov
enter
gs
fs
mov
jecxz
lret
xor
jmp
dec
lahf
xchg
pop
sti
sbb
out
jl
fdivrs
mov
repnz
cltd
xchg
jmp
in
pop
xchg
lea
and
cmpsl
mov
mov
inc
and
xor
and
leave
mov
out
pop
xchg
popf
pop
adc
cli
ds
or
les
jnp
subb
pop
mov
shlb
lods
pop
push
xchg
in
movsb
pushf
pop
mov
xor
into
sub
jle
cmpsl
leave
repnz
jno
out
sbb
push
push
ret
adc
mov
or
out
leave
mov
paddb
add
orb
test
jo
cli
add
mov
and
or
test
add
inc
enter
in
add
insl
adc
sbb
dec
and
repnz
sub
sbb
inc
xor
insb
pop
in
pop
in
add
dec
and
or
in
mov
pushl
stc
and
xrelease
loop
inc
adc
xchg
ljmp
fdivrl
hlt
sbb
cwtl
sbb
push
cmp
adc
cmp
shll
subl
adc
popa
notl
add
mov
adc
adcb
inc
out
pop
rolb
mov
out
in
and
imul
xlat
aas
stos
xor
lcall
sbb
incl
jb
clc
vgf2p8affineqb
imul
cmp
nop
sub
pop
jnp
je
sbb
leave
call
fwait
lds
pop
or
xchg
inc
ret
movl
nop
or
pop
dec
mov
cmpsl
pop
nop
jns
or
fs
push
jle
cmp
mov
into
mov
movsb
andb
push
inc
pop
add
imul
and
add
shll
test
pop
subl
ret
mov
fidivl
lret
iret
faddl
add
iret
pop
dec
int
sub
int
dec
dec
enter
dec
push
call
xchg
pop
or
test
inc
jl
push
mov
fisubrs
lcall
inc
and
push
shrb
dec
add
pop
pushf
jbe
xchg
adc
in
imul
fbstp
push
pusha
out
jns
pushf
subl
adc
pop
jl
cli
fcmovbe
mov
lods
inc
fdivr
jbe
leave
push
cmp
and
inc
pop
jns
mov
xor
pop
and
cmpsb
pop
dec
lock
push
fwait
cltd
adc
push
pop
pop
push
gs
xor
lds
loop
mov
pop
jl
jne
rolb
out
add
or
xchg
mov
outsb
in
stos
push
ljmp
in
mov
inc
repz
movsb
lahf
add
mov
xor
sub
loopne
mov
xor
xchg
sarl
fistps
outsl
mov
je
negb
cmpsl
or
mov
or
test
or
aaa
stos
mov
rcll
pop
add
push
jecxz
sub
xor
dec
imull
pop
dec
scas
lahf
test
push
insb
sub
jbe
jp
inc
aam
push
cmpsl
subb
xchg
mov
test
pand
call
push
push
sub
xchg
outsl
mov
mov
loop
sti
mov
and
cmp
or
dec
and
scas
and
dec
pop
inc
inc
lds
es
arpl
in
mov
cmp
pop
sbb
out
insl
movsb
pop
cli
sbb
cwtl
or
mov
pop
shrb
das
daa
xchg
push
pop
out
add
xchg
inc
ret
shrb
xchg
scas
pushw
imul
mov
movsb
and
and
pushl
fxch
cmp
cs
idiv
xor
outsl
and
push
cmc
rol
data16
call
cmp
fs
stos
jae
inc
ret
push
stos
lods
pop
mov
fstpl
lock
xor
adc
lcall
or
xor
sbb
jl
scas
hlt
and
out
fwait
lret
jl
mov
jns
nop
sahf
mov
push
jg
xchg
adc
fisubrs
pusha
jo
adcb
xor
sbb
iret
mov
add
je
cs
mov
out
out
push
les
fildl
int3
in
fildl
and
lcall
mov
das
cmc
lcall
sbb
xchg
or
adc
mov
stc
mov
mov
mov
addr16
adc
ficompl
xor
or
dec
adc
es
push
or
sub
inc
lods
ds
je
pop
subb
and
movsb
mov
je
mov
imull
das
adc
cmp
xchg
inc
std
xchg
jne
shlb
lods
out
adc
jp
cmp
call
in
dec
imul
jbe
jae
add
cltd
sub
cltd
cmp
int3
inc
lds
push
fdivp
mov
imul
mov
mov
lock
lcall
stc
xchg
stos
jns
xchg
adc
pop
mov
imull
test
push
fstps
jmp
fwait
out
inc
adc
cmp
inc
sti
dec
mov
data16
mov
cmc
xchg
dec
jb
adc
fs
adc
push
or
stos
xchg
xor
sbb
sub
xchg
negl
push
sub
sbb
sbb
push
push
push
push
mov
loop
movl
add
jnp
xchg
cwtl
adc
push
pop
xchg
lahf
in
lock
popf
add
xor
xchg
inc
test
inc
sbb
push
sub
mov
lds
cmpsl
xchg
sbb
push
pop
fwait
inc
xchg
std
mov
into
push
sub
pusha
int3
mov
or
mov
mov
mov
mov
stos
pop
rorb
fs
sti
mov
mov
push
in
adc
out
adc
or
popf
pop
xlat
popf
xchg
push
decl
aas
fisubl
fimull
fcompl
xchg
test
pop
data16
cltd
movsl
movsb
js
iret
stc
aad
pop
mov
inc
jecxz
rcll
dec
fcomp
dec
fimuls
daa
sahf
aad
or
adc
inc
les
mov
mov
inc
push
fldl
jle
sub
mov
shlb
pusha
fsubs
subb
insb
subb
jnp
iret
mov
aam
imul
sbb
negl
loope
push
mov
mov
xor
or
test
jge
fst
adc
push
mov
repz
add
in
push
xor
or
mov
lock
cmp
cli
jne
stos
xor
mov
sbb
cmp
out
cmp
lds
sbb
or
stos
fisttpll
and
pop
dec
aas
fldl
orl
movsl
cmp
sbb
jb
xor
test
mov
pop
xor
jmp
shlb
mov
fcmovb
xor
lods
mov
push
sbb
mov
push
xchg
adc
cmp
mov
jae
or
inc
cmpsl
icebp
sahf
pop
test
pop
cmp
or
les
inc
cmc
or
adc
iret
pop
adc
hlt
xchg
xchg
or
inc
sub
jle
mov
clc
add
or
mov
and
cmc
mov
nop
fstpl
insb
call
out
in
ja
sub
lea
pop
dec
xorb
push
mov
hlt
or
jmp
hlt
xchg
scas
ret
dec
lds
xlat
jl
stc
stc
mov
dec
test
lock
ficomps
loop
das
in
sar
in
js
aad
jl
mov
shrl
loop
sub
xor
ja
jecxz
sub
cld
test
cmp
nop
insb
sub
lret
push
fs
pop
xchg
clc
mov
sbb
mov
xor
mov
outsb
sub
ret
mov
enter
insb
sbb
or
cld
mov
jo
adc
pop
cmp
pushf
iret
pop
and
sbb
sub
mov
mov
out
mov
insl
sub
jl
ret
add
pop
mov
cmp
adc
les
imul
out
icebp
stos
cmpsb
lret
ja
pop
testb
push
int3
jb
pop
adc
sbb
xchg
imul
mov
stos
in
pop
std
pushf
mov
jae
mov
xchg
insb
xor
or
jae
jp
mov
lods
push
adc
cli
adc
stc
pop
mov
lods
movsl
add
sbb
pop
jl
outsl
stos
mov
xchg
int3
xchg
es
lds
jg
push
cltd
push
loopne
aad
sub
int
mov
jl
cli
and
in
sub
inc
mov
mov
xor
enter
xchg
outsl
bsr
and
dec
add
jae
push
fstps
pop
mov
ret
push
and
ljmp
arpl
imul
icebp
lea
aas
jbe
fld
pop
decl
mov
fimuls
add
mov
gs
cld
pop
fisubrl
gs
mov
sahf
test
outsb
adc
mov
inc
inc
movsb
push
mov
sub
out
mov
ja
jecxz
loope
les
push
mov
pop
sub
add
mov
dec
ss
sub
mov
repnz
aad
jb
cmc
into
xchg
mov
pop
lods
sti
jb
test
pop
inc
jg
push
lods
pop
sarb
in
add
pop
lret
inc
gs
and
insb
mov
dec
test
jl
and
or
out
sub
xchg
and
fs
rclb
pop
pop
cltd
movsl
pop
roll
sub
push
out
in
mov
xor
pop
jge
inc
pop
lock
sar
adc
or
adc
xchg
jg
bound
das
cmpl
mov
fs
ret
aaa
push
mov
cmp
sbb
mov
jge
jmp
sbb
and
push
pop
ds
mov
leave
cmp
in
dec
mov
call
and
ret
jns
and
int3
fstl
aam
mov
jb
sbb
mulb
xor
and
pusha
scas
add
xchg
lods
ss
xor
dec
repz
idivl
ljmp
cmp
dec
jae
push
pop
sub
popa
add
imul
ljmp
xchg
xchg
jns
lods
loop
lods
rcr
mov
xor
mov
mov
scas
push
add
push
cmp
mov
aam
cmp
push
decl
sub
lds
dec
jne
lahf
add
sti
popf
icebp
push
fsubr
dec
push
sub
mov
test
xchg
sbbl
ljmp
xchg
aaa
ljmp
outsl
sub
ret
mov
and
xchg
adc
dec
add
nop
into
push
scas
push
jb
leave
adc
mov
xchg
cmp
addr16
inc
cld
icebp
mov
adc
mov
daa
ss
push
cmp
adc
adc
cld
pop
add
mov
add
adc
xor
into
clc
fisubrs
cmc
movsl
shr
dec
sub
pop
dec
rcrb
push
lea
push
imul
nop
xor
and
push
xorl
dec
jge
inc
mov
or
xchg
test
dec
or
lock
xchg
xor
mov
xor
aaa
shrl
arpl
mov
and
shll
add
cld
hlt
adc
mov
fcomp
cwtl
lds
push
mov
xor
in
dec
out
sbb
push
bound
lret
loop
push
sub
lea
inc
jo
jb
dec
data16
mov
lret
or
adc
xchg
mov
int3
int3
mov
pop
in
mov
mov
insb
add
xlat
daa
sarb
out
cmpsl
and
movsb
add
iret
xor
jns
adc
aam
cltd
mov
sbb
lcall
jp
int
cmpsl
mov
cmp
ss
jnp
cmp
jne
dec
push
jecxz
jecxz
pop
jbe
pop
aas
or
xchg
add
add
loop
pop
movsl
das
mov
push
pop
lods
pop
inc
mov
aam
push
cmp
push
mov
lret
aad
xchg
mov
add
dec
xor
int3
jle
iret
cld
lahf
add
and
and
fadds
adc
cmpsl
fidivrs
xor
push
out
ret
xchg
mov
leave
xchg
notl
push
shlb
dec
mov
mov
inc
lahf
push
cmc
sub
imul
in
or
addr16
pop
int
popf
repnz
jg
mov
addb
lret
jns
jne
lcall
mov
xor
bound
fisubs
sub
cs
push
stc
stos
dec
cs
fistpll
int
add
add
fisubrs
cmp
sub
pop
sbb
and
cmp
pop
cwtl
hlt
pop
mov
sbb
jg
dec
pop
mov
and
stc
xor
rcl
and
in
inc
xchg
bound
cmp
mov
jmp
aaa
dec
xor
dec
push
rcrl
imul
push
cmpsb
dec
data16
mov
sbb
daa
hlt
and
es
pop
loopne
outsb
mov
dec
pop
stc
insl
jne
sub
jno
pop
fmulp
repz
hlt
int3
mov
adc
lret
mov
gs
jno
stos
mov
push
dec
div
mov
mov
aaa
fdivl
mov
cmp
cmpl
outsl
movsl
jns
stos
xchg
adc
and
leave
clc
testl
pop
or
int
jo
sub
lcall
iret
test
rcr
xchg
mov
jmp
addr16
mov
addr16
xchg
fucomi
adc
aaa
in
js
or
jp
adc
cld
add
xor
jae
pop
xor
fwait
pop
shl
jg
rol
jecxz
sbb
mov
cwtl
imul
movsb
jb
rcr
mov
xlat
test
push
xchg
inc
mov
and
push
nop
xchg
xor
mov
pop
dec
lret
pop
add
mov
mov
jp
es
inc
jge
enter
addb
dec
in
leave
mov
inc
daa
cmpsl
jb
cmp
jb
je
jnp
mov
and
sbb
jb
out
mov
movsl
push
les
scas
mov
sahf
mov
clc
movsl
mov
inc
xchg
mov
mov
adc
push
cmp
test
xor
mov
xorb
jmp
leave
je
loopne
pop
popf
sbb
test
cwtl
xor
pop
xchg
movsl
fsubrl
and
std
in
sbb
fstpt
dec
sbb
repz
dec
jns
lods
mov
and
in
mov
inc
or
inc
pop
lcall
cmp
push
mov
hlt
aaa
inc
popa
mov
push
mov
cmp
mov
mov
xor
hlt
dec
lret
stos
sbb
popa
icebp
jmp
and
push
int3
push
ja
fwait
je
fstl
sub
jg
add
add
out
jle
addr16
xchg
or
fs
cwtl
jne
jb
sub
mov
lahf
push
sub
sub
cli
fbstp
and
add
je
out
out
lahf
pop
lods
test
dec
cmp
hlt
fstp
sbb
or
pop
cmp
push
clc
fistpll
cli
aam
leave
xor
fwait
push
shrb
xchg
js
loop
mov
jecxz
test
int
mov
add
jno
mov
int3
cld
orl
leave
jge
in
cmp
adc
fisubs
aam
jae
fwait
leave
xchg
fstp
icebp
mov
mov
cltd
mov
push
dec
fisubrs
sub
pop
repz
outsl
bound
dec
xor
and
push
xor
cld
jmp
jne
adc
lods
aam
and
cmc
push
roll
addr16
xor
lea
out
mov
sbb
sbb
inc
jb
add
lret
test
mov
jns
aaa
inc
pushf
daa
jg
int
dec
sub
repz
sbb
imul
xchg
jae
or
fistps
fiadds
lret
dec
shll
and
cmp
lds
pushf
sti
mov
jg
jmp
and
outsl
pop
inc
mov
sub
sub
popf
int
adc
cltd
shll
inc
dec
popf
sti
ss
push
mov
imul
sti
loopne
in
jecxz
and
adc
sahf
fs
in
shlb
dec
fs
pop
mov
or
jg
cmpsb
ljmp
mov
repnz
ret
pop
imul
cmp
je
jmp
adc
out
es
sub
imul
mov
addr16
sub
adc
and
ffreep
sbb
push
cmp
jmp
push
outsb
cmp
push
pusha
stc
jae
imul
repz
loop
dec
pop
or
lods
fsubs
jmp
pushf
jno
scas
xchg
mov
mov
add
dec
xchg
cli
test
sarl
xor
fisubrs
mov
cmp
mov
and
and
incl
push
sub
pushf
out
out
mov
jne
dec
sub
fcomi
pop
pop
jmp
cmpsb
rolb
cmp
outsl
adc
xchg
mov
imul
or
popa
push
lcall
push
lods
sar
cs
inc
dec
or
or
sarl
add
sub
xorl
xchg
flds
push
sub
mov
dec
push
dec
pop
addr16
and
int
inc
pusha
lret
jge
gs
xorb
xchg
scas
mov
xchg
mov
mov
mov
xchg
loop
pop
sahf
sub
mov
pop
into
setp
cs
add
sbb
or
loopne
and
mov
sub
fadds
dec
add
cmp
inc
mov
dec
pushf
repz
hlt
add
push
lret
addr16
push
push
pusha
mov
xchg
and
fld
clc
sahf
aam
pop
xchg
and
bnd
jge
and
in
fldcw
imul
push
push
or
test
insb
jl
inc
mov
fidivrl
sar
clc
cmpsb
or
data16
adc
jae
into
pop
and
push
ja
inc
das
push
int
icebp
scas
shrl
fistpl
mov
xchg
cmpsb
pop
loope
mov
std
or
test
push
inc
sbb
jmp
pop
push
mov
xchg
dec
cmp
dec
cmp
pop
cmc
aam
or
or
xor
shrl
mov
movsl
sbb
push
jne
mov
ficoml
mov
adc
xor
je
subb
push
ljmp
inc
cwtl
mov
xor
pop
ret
mov
lahf
fidivl
cmp
push
adc
and
sbb
cld
xor
xorl
movsb
mov
scas
fs
pop
or
jl
dec
or
pop
repnz
fcmovu
ja
mov
imul
leave
mov
fwait
cs
es
cmpsb
xchg
cmp
cmp
mov
in
add
push
push
imul
xchg
push
aas
addr16
out
into
cmp
mov
mov
push
sbb
dec
adc
hlt
pop
lret
sub
cmp
cmc
jle
dec
xor
dec
push
fmul
pop
mov
add
inc
arpl
ficoms
mov
push
stos
stc
test
mov
jo
out
xor
jbe
push
inc
mov
xchg
cmp
jp
mov
sbb
xor
in
mov
jp
or
sbb
mov
aam
aam
roll
fwait
push
jmp
dec
hlt
enter
adc
loope
iret
cli
sbb
inc
pop
lods
inc
cltd
iret
rcll
xchg
mov
push
sub
xchg
repz
ficoms
sbb
mov
jnp
xchg
cltd
je
aam
jb
xor
mov
inc
cmc
pop
and
aad
lock
dec
sbb
and
xchg
arpl
lds
mov
and
xor
or
mov
mov
pop
and
pop
pop
jns
inc
dec
ret
mov
out
jp
adc
lret
pushf
nop
fnstsw
rclb
or
test
dec
push
testb
inc
ret
test
sub
lret
ljmp
inc
inc
decb
mov
sub
pusha
cli
mov
xchg
lahf
jb
sub
and
xchg
sbb
lea
dec
idiv
add
or
xor
lret
and
movl
jo
sub
push
neg
lock
hlt
pop
push
mov
aam
jle
pop
cmpsl
idiv
cmp
imul
mov
lret
cmp
test
repnz
cmp
test
push
xor
cltd
push
dec
movsl
mov
mov
iret
test
mov
es
sbbb
adc
scas
jecxz
add
push
sub
mov
stos
mov
push
xor
aad
mov
jecxz
inc
jno
or
scas
and
or
cmp
iret
pop
popa
daa
stos
aad
cmp
jecxz
sbb
dec
pop
sbb
or
popf
sahf
cli
push
mov
push
xchg
push
mov
cwtl
and
scas
xchg
out
xor
les
int3
xchg
fimull
outsl
fldt
jle
mov
inc
adc
iret
mov
pop
and
es
and
insb
scas
jns
ret
dec
in
xor
inc
or
adc
or
add
subl
and
xlat
dec
mov
aaa
and
add
adc
hlt
ret
dec
insb
push
daa
loop
sbb
or
movsb
sub
bound
jo
xchg
pandn
mov
or
adc
jbe
cmp
push
divl
addr16
mov
nop
loopne
cmp
mov
sbb
xor
daa
or
aas
sub
inc
cmc
stos
cli
mov
aam
sbb
or
enter
add
push
mov
leave
mov
adc
or
bound
jecxz
push
shl
addb
lahf
jno
sbb
insb
add
setne
mov
cmc
and
insl
bound
mov
ret
dec
pop
xchg
or
or
bound
mov
mov
shrl
push
stos
bound
mov
fwait
pop
movl
mov
add
xor
mov
ljmp
jo
loop,pn
arpl
push
popf
imul
push
adc
xchg
roll
das
mov
in
xor
mov
in
int3
adcl
cmp
inc
mov
mov
mov
stos
lock
dec
aas
mov
cmp
adc
popa
stos
stos
pushf
mov
push
jno
sti
in
mov
rcll
test
decl
mov
gs
idivl
pop
xor
fistpl
add
js
or
fnstenv
adc
lds
shrb
sub
out
pop
cltd
push
dec
jae
fildl
pop
in
adc
insb
fwait
int
lds
push
cmp
jb
ret
jb
aad
and
jb
jo
inc
inc
xor
mov
lahf
pop
lods
push
je
std
orb
cmp
enter
out
bound
js
mov
add
mov
and
mov
mov
mov
repnz
push
cwtl
out
decb
dec
mov
pop
outsl
sub
mov
addr16
inc
add
ljmp
ljmp
psubq
xor
sub
mov
ret
pop
aam
inc
test
sub
mov
adc
jne
lcall
push
fsubl
mov
or
inc
push
dec
cmp
lret
pop
aas
push
add
cltd
xchg
xorl
or
xchg
lds
push
and
sub
xchg
pop
cmp
pushf
lock
popf
mov
gs
xchg
loopne
stos
inc
loope
pop
ja
fstl
sbb
adc
push
xchg
push
lret
ljmp
pop
add
xchg
dec
adc
outsb
push
rcl
jp
or
rolb
leave
in
stc
pop
ror
sti
add
jnp
idivb
call
add
pop
fstpl
idivl
or
mov
ror
push
outsl
sahf
pusha
adc
dec
jns
dec
adc
cmc
xor
pop
push
fsubp
push
cmp
scas
ret
sbb
sub
xchg
sub
or
mov
jp
xchg
out
repz
hlt
sub
sbb
out
jmp
stos
aaa
jp
pop
sbb
aad
dec
lock
mov
push
jmp
or
roll
mov
mov
insb
pushf
pop
in
pop
adc
inc
addb
or
add
mov
icebp
dec
inc
in
out
push
jl
push
enter
fdivr
das
roll
xchg
mov
scas
sti
js
jecxz
adc
pop
jo
into
xlat
sub
cwtl
xchg
xor
test
shll
leave
sbb
arpl
push
push
dec
shrl
adc
mov
and
push
push
xchg
sahf
testb
adc
ret
and
aaa
jl
pop
std
push
and
push
cmpsb
loopne
adc
fisttps
jecxz
imul
data16
pop
xchg
cs
popf
pop
bound
clc
in
ss
pop
mov
lods
loop
and
pop
mov
mov
lods
inc
aaa
pop
adc
mov
or
mov
push
mov
adc
xor
inc
or
dec
nop
sub
push
in
push
js
lahf
adc
sbb
sbb
loopne
repz
int3
pop
xlat
aam
inc
divb
cmp
xor
cmp
pusha
in
in
int
cwtl
jle
arpl
or
enter
rcrb
call
insb
push
ljmp
mov
loope
aad
xchg
arpl
jg
mov
mov
cwtl
stc
and
int3
xor
xor
dec
pop
mov
pop
faddl
mov
inc
insl
xor
adc
xlat
mov
sbb
movsl
xor
cmp
mov
insl
bound
lahf
mov
lahf
jb
std
jns
sbb
mov
pop
dec
cltd
jb
adc
or
pop
mov
ljmp
pop
sub
sbb
mov
pop
daa
push
pop
lods
pushf
or
nop
jo
out
pop
movsl
and
lods
adc
or
xchg
and
aad
test
dec
test
and
aam
sbb
xor
xchg
pop
jb
mov
imul
cmp
sti
jg
fdivl
sub
xor
adc
jbe
xchg
mov
sub
xchg
and
xor
lds
push
pop
lret
mov
mov
cmp
insb
in
pop
pop
iret
inc
mov
pop
xlat
in
push
mov
lcall
jb
sub
loop
aam
stos
movsl
ds
sbb
sahf
mov
add
sub
mov
repz
add
xchg
xchg
sub
std
xchg
popf
sbb
push
aaa
xchg
sbb
in
orl
dec
mov
adc
outsb
popf
mov
popa
mov
mov
adc
cmpsl
jo
mov
jo
lock
jecxz
sahf
popf
jl
lock
lcall
loop
mov
xor
aaa
xor
imulb
sbb
scas
inc
jae
pop
lahf
test
jns
addb
ja
inc
sbb
mov
pop
pop
cmp
das
or
int
hlt
push
mov
mov
adc
int3
push
daa
fwait
ja
outsl
shrl
jb
push
push
in
jge
dec
mov
repnz
sbb
inc
mov
jo
das
nop
cmpsb
push
fucomip
add
int3
cmpsl
je
dec
out
jo
mov
aam
mov
dec
out
mov
enter
popa
mov
xor
xor
add
add
out
pop
mov
push
sahf
add
xchg
je,pt
shrl
insb
cli
pusha
mov
cmp
mov
pop
mov
fdivs
sub
mov
cmp
cmp
jne
into
arpl
cmp
push
mov
add
add
jecxz
mov
add
dec
sub
adc
xchg
dec
outsb
cmp
add
aas
lea
add
push
stos
lahf
or
outsb
or
mov
push
loope
push
imul
fdivl
les
jecxz
xor
push
sub
enter
out
push
jne
dec
pop
fadd
mov
ret
push
aas
or
push
sbb
bound
mov
in
out
shrb
add
jnp
add
movsb
mov
xlat
inc
or
mov
xchg
and
xlat
in
mov
lea
jnp
je
ljmp
bound
or
arpl
pop
outsb
sub
sti
aad
sub
aas
inc
pop
sbb
xchg
mov
mov
sub
and
in
or
cmp
xchg
push
out
adc
lods
data16
xlat
push
sub
dec
xchg
and
xor
popa
sbb
fcoms
lahf
mov
mov
adc
call
dec
xchg
push
cmpb
cmpsb
adc
ljmp
lahf
out
adc
dec
inc
sub
jl
jp
pop
pop
add
scas
loopne
or
add
testl
loop
push
movsl
pusha
stos
dec
xor
jno
xor
adc
arpl
inc
ret
inc
pop
scas
jne
testl
xchg
or
mov
insb
pop
out
dec
ss
in
aam
insb
aad
xchg
lret
popf
cmc
sbb
push
and
lret
xchg
dec
repz
addr16
lds
loope
inc
lock
dec
mov
jns
stos
jecxz
mov
pop
jae
pop
les
and
push
lock
mov
xor
lcall
mov
orb
orb
jmp
pop
roll
into
add
je
es
sar
xor
xor
movsb
pop
imul
fsubl
inc
push
jmp
mov
pop
or
mov
loope
push
test
dec
jg
aas
adc
lods
stos
sub
ficoms
sahf
xchg
dec
jmp
nop
jae
mov
cmp
nop
in
pop
adc
ret
xchg
cmpl
xor
push
imul
mov
xlat
inc
push
push
mov
sbb
mov
pop
inc
cmpsb
pop
mov
add
xchg
push
xor
dec
pop
push
mov
fnsave
jmp
xchg
addb
out
dec
test
pop
mov
scas
push
xchg
out
adc
or
je
aaa
pusha
test
xlat
call
lcall
arpl
sub
adc
add
cmp
mov
mov
pop
pop
rorl
jbe
dec
sbb
subb
push
insb
adc
inc
cmp
xor
dec
or
aaa
idiv
scas
in
push
cmpsl
push
notl
je
jmp
mov
add
cltd
ja
pop
out
mov
prefetch
mov
lcall
cltd
test
push
cmc
add
sub
in
add
pusha
scas
pop
leave
stos
lahf
lock
pop
adc
jae,pn
push
leave
out
or
mov
jl
sbb
fists
fistl
push
jge
test
xchg
fadd
loope
jns
nop
xor
in
push
loopne
push
pop
aas
loop
dec
mov
jns
inc
or
xchg
sub
mov
xchg
mov
outsb
add
xor
and
push
mov
add
jp
and
subb
xorb
cli
mov
and
loope
clc
mov
test
aam
xchg
lcall
mov
mov
fsubs
movsb
pop
into
pop
insb
pop
xchg
jae
fmul
movsb
daa
ret
jge
addr16
in
je
fistl
inc
ljmp
adc
pop
xchg
dec
scas
lea
sub
stc
lds
repz
mov
sub
lods
dec
ljmp
outsl
out
inc
loope
or
adc
or
sub
cmp
push
sub
mov
jg
mov
and
adc
cmp
push
loopne
es
mov
leave
cmp
xchg
jnp
add
sub
push
pushf
rorb
push
lock
dec
mov
outsl
jg
in
inc
js
and
xchg
adc
and
test
cmp
clc
pop
cmpsl
popf
dec
les
push
push
inc
xchg
lock
xchg
push
xchg
push
adc
mov
icebp
push
and
repz
repnz
jb
xchg
les
cmpsl
dec
cs
push
or
xor
test
addb
fnstcw
xchg
mov
jbe
cltd
aad
arpl
fildl
pop
mov
xchg
in
xor
cmp
adc
cltd
ja
loopne
mov
mov
cltd
loop
inc
bswap
or
scas
jmp
shlb
dec
daa
loope
cmp
bound
xchg
adc
xchg
fs
insb
orl
test
jp
pop
xor
in
sbb
pop
scas
lea
pop
stos
testb
and
cmp
pop
lea
jne
out
data16
pop
aad
fists
add
les
add
xor
mov
mov
fs
lcall
cmpsl
dec
nop
cmpsl
call
inc
call
cmpl
xchg
pop
jmp
jo
lret
add
sub
sub
jp
push
shrl
daa
int
push
inc
jbe
adc
in
inc
mov
lcall
bound
ja
in
push
sub
loope
pop
addr16
lret
es
std
xchg
fmulp
stos
sbb
repnz
outsb
xorb
cmp
inc
pop
repnz
jecxz
mov
push
sub
cld
in
in
and
cmp
sti
inc
cmp
mov
out
stos
repnz
insl
lret
test
es
push
pop
in
pop
pop
fisubs
fs
adc
xchg
jp
adc
push
lcall
adc
lock
mov
and
call
sub
insl
mov
mov
jb
mov
jo
xor
lret
test
pop
adc
mov
fidivl
push
jge
cwtl
mov
ss
data16
xor
mov
xchg
dec
aas
aad
or
stos
inc
push
xor
fld
jg
shl
mov
xor
sub
push
in
jb
xor
mov
arpl
fldt
xchg
inc
cmpsl
fiadds
lret
loop
sbb
bound
lahf
je
sar
aas
push
jbe
or
fisttpl
push
bnd
out
mov
aad
sub
adc
adc
sbb
ljmp
and
sub
pop
sbb
mov
dec
push
aas
popf
test
dec
push
lcall
add
cld
cmp
inc
and
ljmp
cmpsl
and
icebp
clc
add
fcmovb
mov
or
sub
sub
xchg
mov
test
mov
sbb
sub
jbe
sbbl
pop
dec
jge
js
fwait
xchg
fcompl
mov
sub
pop
pushl
sub
gs
mov
fldenv
push
sbb
sbb
out
iret
imul
xchg
shl
and
loope
push
loop
mov
pushf
mov
imul
jmp
dec
repz
xchg
stos
add
pop
xchg
lock
mov
int
jle
movsb
or
je
loope
push
xchg
push
bound
mov
out
sbb
jno
mov
mov
sub
js
ss
add
ficoml
xor
pop
les
cmp
inc
sbb
fadd
mov
xchg
movsb
add
lods
xchg
aaa
push
into
push
mov
mov
int
loop
pop
and
jg
jbe
test
mov
sub
inc
jne
ss
call
push
mov
add
mov
adc
leave
lds
adc
or
in
mov
jnp
ror
mov
roll
jg
sub
cmp
lea
xor
lret
inc
rcrl
ss
sub
out
test
repz
mov
jae
xchg
add
jmp
popf
out
fwait
js
fmul
adc
aaa
push
notb
int
sub
aas
bswap
xchg
lret
cmp
ljmp
push
mov
data16
arpl
scas
pop
xor
hlt
cmp
scas
cmp
mov
repnz
leave
push
fwait
jb
mov
enter
leave
xchg
pop
pop
cld
scas
cld
insl
lcall
hlt
in
jbe
bound
ret
xor
dec
xchg
ret
inc
sub
xchg
fs
movsl
cld
or
jmp
pop
inc
mov
lds
test
test
pop
mov
xor
add
addb
jnp
pop
dec
adc
xchg
add
push
cmpsb
or
xchg
iret
or
push
test
int3
adc
popf
cwtl
lahf
sbb
mov
shl
imul
mov
jne
pop
stos
cmp
test
push
outsb
pop
movsl
cld
lcall
clc
arpl
and
xchg
sbb
jp
add
outsb
loop
jp
popa
shl
repz
xor
dec
movsl
lock
push
add
or
aam
dec
stc
lods
in
out
or
shld
ret
xchg
addr16
lcall
out
push
xor
cmc
mov
xchg
aaa
cmp
test
or
mov
xor
and
fdivr
cmc
and
sbb
mov
into
stc
jge
push
mov
xchg
pop
pop
push
xchg
push
hlt
push
dec
out
cmp
push
xchg
nop
pop
xor
sarb
clc
nop
aam
shl
dec
fiadds
inc
push
adc
jecxz
scas
pop
mov
fs
das
xchg
je
mov
mov
call
nop
or
das
and
lds
pushf
cmc
and
fninit
cmp
lcall
repz
mov
aas
hlt
mov
cmp
jp
jbe
call
idivb
sbb
in
adc
daa
ss
pop
int
pop
mov
arpl
and
sbb
push
sub
inc
mov
jnp
in
pop
mov
push
mov
shrl
jbe
aad
xor
jnp
adc
repz
fxch
pop
mov
dec
ret
ficompl
andl
mov
mov
push
popa
aam
mull
adc
push
or
icebp
and
shlb
jno
mov
mov
out
out
or
into
push
out
mov
inc
aaa
add
lea
out
lret
push
loope
std
inc
rcrl
std
fists
jge
dec
fwait
nop
cmp
testb
bound
mov
sbb
outsl
xchg
je
fldl2t
push
mov
hlt
outsl
cmp
mov
mov
sub
das
pop
xorl
mov
stos
or
outsl
popf
in
push
xchg
adc
fidivs
insl
rcl
sbb
cmp
jl
hlt
jge
pop
cmpsl
add
test
mov
aad
jno
cmp
iret
xchg
icebp
lock
xchg
and
sbb
stc
stos
aas
jnp
xchg
or
cltd
imul
dec
and
jbe
dec
push
mov
fwait
shlb
insb
adc
jno
adc
fildll
enter
popa
in
stos
xchg
push
push
in
sub
lret
lcall
jbe
fwait
and
stos
pop
adc
imul
mov
adc
movsb
sub
popf
ljmp
loopne
andb
gs
mov
addr16
ficomps
nop
jecxz
cmp
pop
xor
aad
lock
pop
sbb
push
xchg
lods
nop
cmp
int
jo
insb
pop
jb
fsub
loope
cwtl
xchg
sbb
cmpsl
scas
sbb
push
push
sub
sbb
negb
imul
test
repz
lods
add
cmpsl
jo
sub
add
rcl
idivb
jb
pop
dec
or
inc
mov
add
loop
jbe
das
cmc
sbb
add
shrb
mov
ja
jnp
sbb
cli
and
popf
insb
leave
rclb
lret
mov
enter
adc
testb
xchg
jae
pop
pushf
hlt
cltd
arpl
push
mov
out
dec
xor
fistpl
and
cmp
jle
or
add
gs
mov
and
push
pushl
push
inc
dec
jb
stos
loope
sbb
outsb
pop
xchg
shll
add
lods
das
push
pop
ret
mov
out
lret
mov
iret
mov
in
or
ret
mov
cmp
lods
loopne
pop
and
jbe
mov
das
push
push
aad
pop
add
popf
dec
xorb
cmpsl
fs
call
orl
lods
pop
or
mov
pop
sub
sub
push
cltd
dec
push
js
push
test
or
mov
and
test
and
data16
sub
add
out
push
or
xchg
inc
lea
loop
jle
daa
jl
jo
lret
inc
or
out
shrb
aaa
imul
xchg
out
xor
xor
data16
lret
addl
pop
xchg
push
into
imulb
jnp
out
dec
loope
mov
xor
popa
jmp
dec
in
add
xchg
lock
repnz
outsb
sbb
add
imul
push
push
jge
push
dec
xor
add
leave
jbe
mov
icebp
jns
sbb
jmp
mov
or
sysret
xor
cli
xchg
xor
lret
out
xchg
jle
shlb
int3
cmp
dec
sbbb
das
bound
lret
cmp
fldenv
das
test
xchg
inc
inc
mov
and
in
push
inc
inc
jo
test
std
cwtl
fmuls
test
xor
xor
mov
loopne
in
and
fiaddl
ret
mov
lock
inc
subb
ret
sbb
cltd
in
xor
cmpsb
pop
out
mov
shrb
aaa
sbb
mov
add
cltd
push
add
mov
je
mov
leave
out
out
add
dec
pop
dec
pop
jecxz
and
pop
mov
lcall
xorl
mov
out
add
sahf
fs
repz
xor
bound
pop
lods
adc
dec
push
stos
push
mov
lahf
leave
cmpsl
dec
rcl
repnz
xor
cmpsb
add
mov
clc
sbb
xorb
imul
mov
add
mov
orl
pushf
add
xor
push
aaa
ret
out
nop
popf
xor
mov
shl
sbb
sub
or
mov
xor
xor
cltd
lea
gs
mov
lret
inc
inc
xchg
lods
jb
pop
jb,pn
mov
std
lahf
int3
sbb
adc
or
leave
aad
loope
jp
scas
int3
outsb
repz
add
mov
es
mov
mov
lock
cmp
mov
xor
xchg
gs
mov
int
int3
add
mov
out
cmpsb
pop
iret
aad
lea
lret
in
mov
insb
cmpsl
iret
mov
mov
jnp
idivb
push
pop
cmp
stos
test
pop
lods
stc
dec
addr16
popa
mov
mov
popf
into
lret
dec
mov
cwtl
sti
pop
mov
rorl
fnstsw
sub
pop
pop
cmpb
pop
std
cmp
add
packsswb
sub
ljmp
andb
mov
sbb
dec
aaa
push
cmp
jns
rcrb
aaa
mov
pminub
arpl
push
fdiv
aad
clc
ds
std
mov
mov
pop
cmp
jb
orl
hlt
addl
and
mov
shll
dec
or
and
jne
sbbl
cmp
mov
sbbl
mov
dec
adc
sub
mov
mov
cli
push
push
sub
push
out
sub
test
stos
stc
test
mov
or
pop
cmp
pop
call
flds
xor
xor
out
add
inc
jle
stos
mov
loope
adc
hlt
mov
push
pusha
push
ret
jecxz
mov
sub
into
cmpsl
pop
daa
adc
pop
flds
inc
popa
test
movsl
push
and
hlt
addr16
xor
scas
rcrb
mov
leave
out
int
movsl
inc
and
fs
push
sub
sarb
popa
pop
in
sub
repnz
ljmp
sub
sti
pop
hlt
inc
ds
jge
lds
ss
push
adc
das
mov
inc
js
mul
jnp
xchg
adc
nop
jae
xchg
and
rorl
cmp
aaa
in
mov
aam
call
xchg
test
and
pop
sub
cmp
push
iret
stos
shl
or
jo
cmp
test
ds
movsl
lds
sbbb
add
mov
iret
jns
add
sub
cmc
dec
push
daa
data16
mov
cmp
rcr
stos
push
pop
popa
stos
pop
js
or
push
mov
loope
icebp
mov
push
push
inc
pop
mov
shr
cmc
push
mov
repnz
jb
add
xchg
stos
lret
jo
imul
pop
push
xor
cmp
dec
xchg
addb
cwtl
or
std
xchg
mov
mov
cmpsl
sahf
mov
push
mov
clc
cs
xchg
fldt
fimull
add
ret
or
mov
sarl
fcmovu
pushf
mov
mov
cmp
push
pushf
mov
outsb
outsl
and
loop
notl
jecxz
cwtl
xor
lret
clc
cmc
cmc
pop
xchg
mov
shl
pop
movsb
mov
aad
insb
mov
dec
cmp
add
jmp
out
inc
sub
pop
mov
cmp
fdivrp
jmp
fwait
jno
ss
xchg
loopne
pop
jno
mov
in
add
iret
sub
jne
add
out
xchg
mov
lods
jp
inc
loop
ret
popa
push
sub
out
cmp
in
mov
jbe
cwtl
popa
xchg
xor
xchg
mov
cmp
fidivl
adc
xor
add
mov
dec
push
mov
inc
jmp
shll
add
pushf
fsubp
and
mov
orl
ljmp
jno
mov
lret
int
fdivrl
fsin
add
mov
jnp
mov
int
pop
push
out
mov
adc
data16
test
jns
fptan
mov
fdivl
push
notl
je
test
jmp
pop
jge
sbb
cmp
mov
add
sub
xor
outsb
dec
cld
mov
xor
rorb
add
call
test
xchg
cmp
in
test
stos
mulb
pop
daa
in
mov
pushf
push
cmpsb
sub
jge
fistpl
xchg
mov
ss
cmpsb
xlat
cmp
dec
add
dec
push
pushf
sub
mov
in
icebp
xor
xor
nop
pop
test
xor
or
sbb
popa
jno
je
sub
mov
js
ljmp
mov
es
inc
push
lods
jp
pop
mov
cld
inc
inc
xchg
into
lock
test
dec
jmp
pop
pushf
movsl
push
pusha
xchg
jb
lahf
mov
pop
jbe
add
add
ret
imul
test
cmp
and
fnstcw
popa
mov
insl
xor
pop
lret
jns
fcomps
jne
popl
scas
push
mov
xchg
insl
sar
shrb
aaa
mov
out
inc
mov
rcrb
lea
xchg
sub
or
lahf
sbb
add
pop
loopne
xor
cltd
test
mov
jl
addr16
iret
or
dec
int
xor
adc
les
test
shll
int
jg
cli
stc
jmp
xchg
into
add
dec
xchg
gs
test
xorb
or
test
popa
adc
mov
mov
lret
sarl
adc
inc
pop
rcll
ret
rcrl
mov
int3
push
inc
shr
fcmovnu
lcall
sub
call
cmp
cltd
cmp
jg
jmp
mov
call
mov
xchg
pop
mov
xchg
push
and
jle
or
inc
std
test
clc
int3
scas
mov
shr
int3
stos
adc
out
dec
leave
nop
sub
or
pop
xchg
out
adc
outsb
cmp
call
dec
testb
test
arpl
mov
jp
inc
enter
mov
jb
in
fiadds
pop
loop
push
fistl
call
incl
xchg
popa
push
mov
fistps
pop
mov
mov
notb
adc
or
add
mov
mov
cld
clc
or
ds
mov
pop
outsl
push
jnp
test
sti
jmp
jns
in
lcall
mov
int
xor
inc
push
mov
lea
push
push
sub
pushw
mov
or
mov
xchg
pusha
mov
icebp
fwait
lea
fcomi
dec
icebp
xlat
push
or
test
sub
int
mov
and
mov
adc
repnz
push
cli
mov
or
dec
dec
fwait
mov
sahf
push
repnz
aaa
sbb
dec
add
jmp
inc
icebp
aad
cld
das
xchg
cmp
negl
mov
hlt
ds
in
je
mov
xchg
movsb
add
jne
hlt
mov
clc
into
stc
adc
mov
or
daa
fisttps
lahf
jne
stos
ljmp
cmp
sub
and
inc
inc
std
jne
lret
dec
xorl
sbb
cmp
xchg
js
inc
mov
paddusb
pop
xlat
jno
add
lods
jae
adc
lock
push
cltd
scas
pop
xchg
cli
fs
pop
xor
add
popf
inc
mull
xlat
xor
adc
pop
stos
or
fsubl
push
sbb
daa
nop
jp
sbb
cmp
xchg
inc
mov
popf
ds
fistl
addr16
cld
sbb
adc
testl
adc
test
and
mov
add
add
not
xchg
push
add
xchg
lahf
lret
add
int
sbb
cwtl
orb
pop
mov
scas
cli
jecxz
outsb
mov
call
cmpsb
mov
call
and
test
ret
loopne
mov
sti
push
fisubrl
mov
lret
stc
iret
ds
lods
cmp
adc
push
and
mov
lds
jp
sahf
jbe
xchg
pop
js
nop
jle
or
negl
add
push
outsl
fldcw
rorl
mov
sub
pop
imul
mov
decl
cmpsl
scas
in
mov
rcrb
push
lock
mov
jecxz
pop
outsl
mull
jne
xor
jb
jmp
stos
fcoml
in
int3
sbb
xlat
mov
mov
aad
jb
in
stos
xlat
add
lock
xor
imulb
imul
les
aam
mov
jmp
ret
fldl
subb
fnstcw
mov
daa
sar
int
repz
lods
mov
push
aam
scas
insl
or
loope
scas
xor
sbb
ds
push
mov
or
leave
cmpsb
and
push
mov
fiaddl
push
pusha
test
sahf
jbe
mov
xor
lret
add
sub
pop
pusha
insb
push
clc
repnz
sbb
divb
cld
and
jle
lds
jg
or
mov
outsl
xchg
and
pop
adc
xor
add
js
pop
xor
ss
and
jmp
jne
addr16
dec
shrl
xor
pop
sbb
fs
int
int3
fucomip
add
int
jns
gs
pop
sbb
rcl
push
and
mov
lea
test
mov
scas
mov
add
sarb
ficoms
aam
xor
mov
mov
mov
ret
gs
orl
mov
inc
fmul
andb
sti
cmpsb
push
mov
addr16
lahf
cmpb
or
sbb
std
or
mov
jge
pop
aad
out
fisubs
stc
test
push
xchg
cmp
and
cmp
test
jmp
jnp
dec
dec
std
sub
addl
jb
inc
mov
js
inc
and
imull
add
stc
mov
mov
push
push
jg
jnp
mov
adc
out
pop
jbe
pop
iret
cli
testl
les
sbb
scas
mov
out
or
sarl
mov
sbb
push
sub
xchg
xchg
addl
cmp
sub
cltd
push
mov
fistl
mov
cwtl
mov
mov
loop
add
sbb
push
sbb
pusha
pop
pop
mov
sub
cmp
stc
cmp
sbb
call
icebp
fbstp
sarl
popf
lcall
out
lock
xor
sub
lcall
inc
sar
lret
bndstx
lahf
dec
cmp
dec
lea
mov
sbb
mov
mov
inc
mov
packsswb
xor
insl
push
into
or
je
push
int3
jne
xchg
in
outsb
repnz
sbb
dec
jle
jne
and
inc
int3
pushf
gs
nop
call
lock
mov
sbb
xchg
and
cmpsb
sub
xchg
rep
add
rolb
pop
push
sarl
sbb
push
dec
movsl
testl
movsl
xchg
shlb
insb
pop
rcrb
hlt
test
dec
rorb
std
fidivrs
push
repz
xor
pop
xor
loope
xchg
punpcklbw
into
pop
cli
imul
cmp
sub
or
loopne
mov
push
mov
arpl
xor
or
sbb
je
sub
inc
dec
scas
mov
es
in
loop
lea
loope
mov
insl
xchg
jne
outsl
add
dec
jo
pop
inc
cmpsl
fs
adc
xchg
jns
or
xchg
ret
imul
adc
mov
sti
bound
mov
push
mov
aad
ja
jmp
or
inc
xor
std
adc
lods
inc
inc
dec
lret
pop
incb
scas
clc
shr
mov
inc
inc
test
and
aas
stos
cmp
shrl
or
in
dec
mov
cld
or
mov
mov
mov
cmp
cmpsb
in
push
cmp
shll
out
out
test
cmp
inc
xchg
addr16
subb
jnp
imul
jg
dec
xchg
por
adc
adcb
data16
sub
mov
mov
cmp
lret
in
push
je
xchg
ja
dec
fst
pop
fdivl
stos
adc
and
dec
test
addr16
cmp
mov
nop
lcall
je
xchg
cmc
cmp
sbb
stos
mov
repz
sub
bound
jnp
add
pop
mov
pop
add
sub
out
sbb
xchg
sub
push
jo
pop
dec
add
into
and
adc
insl
add
or
mov
enter
and
ds
fildl
mov
cmc
adc
push
xlat
ja
jb
aam
pushf
add
xchg
fxch
adcb
leave
dec
mov
inc
pushf
pop
in
xor
frstor
movsb
mov
jno
lods
daa
lea
and
mov
dec
lods
inc
mov
cmp
arpl
jae
out
cli
cmp
cmpl
lcall
jmp
xchg
jo
sub
test
adc
mov
arpl
push
sbb
enter
jg
ja
xor
push
add
lods
adc
loope
pusha
fimull
addl
aas
int3
daa
jl
pop
stc
rcl
orb
icebp
movsl
and
pop
cmp
dec
call
jp
mov
insl
movsl
mov
adc
stos
in
adc
daa
xlat
push
pushf
adc
pusha
cmp
dec
pop
mov
jge
les
cmp
ret
pop
je
in
cwtl
movsl
sub
cmpsl
cmpsb
jb
test
push
sahf
sub
mov
out
pop
and
nop
push
insl
adc
push
xchg
das
loope
sarb
dec
imul
cmp
hlt
fcomps
fildll
movsb
mov
mov
cmp
cmp
cmpsb
fs
and
xacquire
xchg
loop
rcr
push
dec
loop
ljmp
cmp
into
mov
aam
xchg
mov
stc
jecxz
pop
dec
add
shll
and
setns
inc
mov
jb
outsb
cld
js
dec
push
mov
inc
hlt
fs
negb
lods
das
pop
xor
or
dec
jo
push
pop
pop
aam
or
add
shlb
lahf
aam
in
adcl
cmp
das
adc
and
xlat
repz
mov
jo
lahf
jecxz
popl
dec
push
test
jns
cli
test
movsl
mov
mov
lret
mov
insb
cmp
add
iret
cltd
mov
arpl
pop
add
stos
sub
jle
xchg
ja
mov
rorb
xchg
bound
push
mov
mov
xchg
sub
inc
repz
iret
cs
aaa
icebp
stc
pop
push
repnz
jmp
rcrb
into
in
movsl
out
popa
mov
in
or
push
test
js
mov
xchg
int3
pop
sarb
imul
xchg
popf
mov
mov
mov
mov
xor
paddd
fisttpll
push
out
fcompl
sbb
test
stc
int3
dec
jg
and
loope
add
mov
mov
sub
rclb
outsb
pop
fistl
test
push
lods
or
mov
push
sahf
aaa
xor
pop
inc
loopne
cmp
popa
cmp
xchg
stos
mov
mov
xchg
push
stc
jl
pop
xchg
lods
ror
xchg
xor
aaa
or
add
sub
ds
les
jge
mov
mov
outsb
mov
lret
xor
xorl
negb
inc
lret
outsb
scas
sbb
adc
out
fbld
and
push
add
jne
mov
cld
dec
add
sbb
xor
sbb
push
cmp
dec
int3
jbe
enter
xchg
cmpsb
inc
jb
mov
loope
mov
add
leave
test
repz
push
and
outsl
mov
push
inc
mov
inc
add
or
xchg
in
ljmp
hlt
in
adc
lret
das
push
lods
mov
mov
insb
sub
inc
pop
dec
sti
xor
mov
cli
hlt
lcall
cmpsb
cmp
push
sbb
xor
sbb
into
lds
mov
icebp
out
stos
jl
enter
inc
pop
cmp
xchg
ja
jecxz
and
mov
dec
mov
or
mov
mov
pop
xchg
jecxz
jle
xchg
repnz
inc
xor
sub
sub
sub
mov
sub
sub
dec
jne
sbb
sub
movsl
ret
push
mov
aam
and
iret
lock
outsl
xchg
popa
lods
dec
scas
outsl
xchg
mov
jmp
testl
or
int
out
mov
cli
testb
jns
mov
sahf
repz
adc
das
jne
in
jae
and
dec
pop
mov
das
test
inc
lods
and
xchg
cmp
out
and
cs
mov
adc
sbb
sbb
pop
jno
dec
sbb
adc
push
repz
dec
outsl
xlat
and
sub
jne,pn
sahf
or
int
jno
push
nop
nop
imul
mov
stc
daa
cmc
shlb
push
xchg
aaa
outsb
fmull
and
and
dec
jnp
cmc
mov
decl
repz
mov
in
mov
call
cld
jle
inc
mov
aam
cmp
cmp
bound
or
adc
arpl
repnz
cmp
xor
or
ljmp
call
loopne
out
sub
mov
mov
adc
inc
mov
cmpsb
mov
call
lods
push
xchg
push
insb
jmp
pushf
cmp
pop
xor
lea
hlt
jb
out
outsb
mov
insb
mov
inc
pop
popf
mov
mov
cmpsl
lahf
jns
inc
push
pop
mov
mov
inc
sbb
icebp
pop
mov
mov
mov
mov
in
aas
sbb
sbb
pop
push
push
ret
int
ds
mov
mov
fcos
fs
cld
fwait
sub
mov
cmp
js
mov
ret
dec
adc
mov
cmp
fcoml
lock
cmp
mov
test
ljmp
mov
repnz
pop
xchg
xchg
fistps
sub
fwait
dec
loop
push
popf
xchg
orb
ret
pop
sbb
and
cld
pop
clc
rolb
cs
mov
cmp
push
inc
in
push
xor
push
xor
mov
ret
inc
fnsave
sbbl
cmp
in
and
sti
aas
fmull
push
mov
jns
or
xchg
ret
xor
addr16
fidivrl
js
xchg
outsl
daa
mov
mov
push
mov
or
mov
xor
mov
aam
inc
clc
mov
stos
out
inc
subl
push
int3
in
push
aas
dec
arpl
hlt
and
sub
repz
sbb
pusha
push
mov
hlt
out
test
adc
mov
add
cmpsl
mov
out
sbb
rcl
sbb
inc
iret
mov
mov
sbb
mov
fcomip
sub
idiv
inc
and
jnp
inc
mov
iret
scas
add
test
or
cmpsb
cmp
fmuls
inc
or
push
dec
jae
jno
pop
xchg
fnstsw
dec
mov
in
or
les
mov
jne
je
jp
and
xchg
ljmp
ss
pop
shll
mov
imul
das
push
mov
dec
mov
fdivl
mov
hlt
mov
or
data16
sarl
push
cmp
add
mov
pop
lcall
inc
mov
fcmovnbe
outsb
jg
rorb
and
in
vphadduwd
mov
add
sarl
les
dec
js
mov
sbb
inc
add
testb
cmp
cli
sub
mov
lock
ret
mov
adc
lds
and
icebp
mov
ds
xor
or
iret
rcrb
inc
into
inc
sub
cld
shrb
and
clc
in
sbb
mov
fists
rorb
inc
and
xor
test
cmp
arpl
outsl
xchg
shr
popa
add
daa
mov
les
mov
loope
pop
push
inc
xor
scas
in
sti
cwtl
sbb
scas
inc
adc
shrl
or
lea
cmp
test
hlt
dec
loop
adc
loop
or
sbb
arpl
popa
jle
lods
roll
pop
lret
adc
popf
add
xor
sbb
outsl
cwtl
pop
xor
mov
fimuls
lret
roll
xor
mov
inc
sar
push
xchg
xchg
sub
sbb
les
ljmp
push
xchg
loopne
lea
push
xlat
pop
jnp
inc
mov
mov
fdivl
mov
push
xor
push
je
mov
mov
cs
mov
mov
inc
dec
and
pop
stos
dec
lahf
xchg
lcall
mov
and
pop
push
je
lods
ret
pop
stos
add
push
cmp
movsl
cs
in
xor
cmpsb
aam
dec
movsl
push
mov
out
mov
addr16
xor
scas
pop
or
pop
fnstenv
out
int3
sbbl
outsl
lods
push
gs
mov
dec
or
xchg
xor
pop
addl
sahf
aas
decb
xchg
jl
movsb
int
arpl
xor
cltd
mov
in
jbe
cmpsb
cmpsl
add
jo
int
int
xchg
pop
hlt
sahf
stos
or
sbb
outsl
jmp
add
aaa
dec
fisttpll
ss
not
pushl
xchg
int
ja
mov
sbb
aad
push
out
pop
into
inc
xorl
pop
push
sub
jns
ret
mov
or
jecxz
inc
adcb
cltd
call
pop
fbld
mov
aaa
mov
cmpsb
cld
cmpsl
popf
lret
dec
cs
js
decl
sbb
cmp
loopne
sub
mov
out
daa
jge
ss
mov
nop
aam
pushf
stos
and
imul
dec
cld
sti
shll
in
cmp
mov
xchg
call
jo
mov
mov
inc
ss
mov
pusha
scas
cwtl
mov
xlat
std
mov
int
insb
inc
ret
sbb
push
lea
fwait
xchg
rcr
mov
loopne
push
imul
movsb
stos
mov
jbe
popf
fsub
inc
decb
mov
int
addl
push
jle
mov
hlt
arpl
and
xor
inc
insl
pusha
lea
cmp
mov
mov
scas
xor
ss
and
inc
add
pop
cli
push
mov
outsb
fs
or
lret
mov
xlat
xor
inc
cmp
fwait
dec
ret
dec
and
repz
pop
mov
add
fwait
xor
xchg
mov
push
push
or
je
pop
pop
insb
add
ret
fdivs
cwtl
adc
shl
xchg
adc
push
add
je
mov
bound
cmp
ss
fcoml
outsl
push
ss
inc
ret
mov
inc
mov
dec
nop
mov
fcmovu
xor
sbb
ss
fcmove
pop
subl
jae
xor
inc
cmpsl
or
cld
gs
test
daa
xlat
mov
rolb
movsb
test
mov
dec
inc
inc
mov
cli
sti
add
rcll
outsl
xchg
jl
and
cli
mov
cld
adc
xchg
pop
pop
push
sbb
jle
sub
xchg
fcompl
adc
push
call
push
pop
mov
leave
in
incl
dec
or
loop
sahf
ret
inc
xchg
push
jne
push
test
cmp
xchg
movsb
pop
pop
mov
pop
pop
rorl
dec
sbb
addr16
fidivl
int
push
jo
sub
mov
loope
aas
inc
jmp
clc
xchg
rolb
push
mov
inc
jle
popf
pushf
fwait
dec
loopne
mov
lds
insl
mov
addr16
out
cmp
mov
std
adc
cmp
stos
xchg
mov
mov
mov
cmp
mov
xor
pop
or
and
jne
mov
ja
lods
sub
mov
call
scas
jle
inc
mov
pop
stc
filds
out
icebp
popf
add
xor
imul
jae
inc
sbb
mov
inc
mov
bound
movsb
push
movsl
movsb
fs
pop
and
dec
rclb
xchg
and
cmpsb
inc
jb
push
cmp
and
jl
jb
sbb
jb
jmp
cmp
les
rclb
inc
pop
inc
flds
xorb
push
pop
push
or
data16
and
xor
dec
mov
in
cs
pop
jp,pt
xchg
pop
call
pop
jp
int
sahf
or
test
dec
push
je
test
ds
inc
stc
push
pop
xor
dec
cmpsl
lret
dec
stos
and
shlb
scas
adcl
mov
idivb
jl
sub
mov
aaa
dec
movsb
xchg
sbb
loope
add
jge
pop
pusha
jns
popf
push
xchg
sub
fs
lock
cld
outsl
pop
cltd
mov
push
inc
scas
mov
pop
clc
inc
pop
adc
pop
push
test
dec
movsl
xchg
ljmp
js
insl
subl
int
out
push
or
fildl
add
ss
in
scas
imul
nopl
stos
xor
push
sbb
popa
and
sub
fidivs
sub
dec
shrl
xchg
inc
cmp
imul
mov
int3
sti
cmc
rcll
insl
jno
push
imul
mov
stos
stos
sbb
mov
jbe
mov
ret
and
sub
sbb
fsubp
out
jecxz
mov
push
fcoms
outsl
push
pop
mov
leave
adc
xor
dec
or
ja
push
in
mov
inc
mov
adc
push
push
mov
ljmp
adc
sbb
mov
loopne
cmp
iret
fistl
mov
pop
inc
out
bnd
dec
into
fldenv
add
inc
mov
dec
lods
mov
push
adc
mov
mov
cmpsl
xchg
xchg
daa
stc
stos
mov
inc
repz
fildl
test
aam
std
adc
mov
dec
push
or
out
add
jnp
jecxz
jo
xor
test
xchg
cmp
je,pn
das
mov
out
and
rorb
inc
subl
lret
sub
stc
mov
add
inc
fmul
jl
or
cwtl
push
cmpsl
mov
xor
dec
cwtl
insb
inc
dec
and
lret
test
jae
out
cmp
leave
jp
loop
mov
mov
fadds
push
push
dec
jb
pushf
adc
mov
mov
adc
jle
jmp
sbb
mov
loop
test
sub
jle
push
lcall
pop
add
enter
cmpsl
orb
jmp
dec
dec
out
sub
ret
je
and
push
push
shrl
and
jo
addb
dec
adc
mov
fsts
loope
push
loope
fs
adc
adc
mov
push
dec
test
loope
wbinvd
or
lods
sub
xchg
cltd
add
add
adc
out
add
jg
or
adc
aas
jl
dec
pop
jge
dec
mov
daa
jmp
push
std
and
addr16
mov
add
stc
sbb
fwait
ljmp
daa
jmp
and
or
xlat
mov
push
dec
fidivl
jge
xstore-rng
cmpsl
add
and
sub
stc
test
aaa
lcall
sbb
roll
cmc
addr16
adc
add
dec
faddl
and
mov
mov
and
notb
shll
sub
dec
mov
fbstp
mov
jbe
xchg
cmc
repz
cmc
pop
and
mov
push
lahf
in
push
mov
scas
movsl
aam
sbb
fwait
mov
sarb
jb
test
enter
mov
sarb
inc
add
pop
xor
push
pop
xchg
sbb
xor
in
xor
mov
pushf
mov
mov
fxch
in
and
sub
in
lds
pop
arpl
pop
arpl
movsb
inc
mov
addr16
es
mov
jns
mov
mov
loop
lahf
cwtl
pop
cmc
mov
sbb
pusha
in
fs
sbbb
enter
jp
mov
in
sub
push
push
shrb
inc
and
mov
mov
xlat
sub
hlt
nop
pusha
shl
pop
sub
js
sbb
adc
jl
stos
popa
pop
cli
std
pop
jge
pop
fstl
jl
adc
std
imul
mov
mov
ret
cltd
inc
xchg
sub
mov
mov
mov
fwait
cmp
add
pop
out
adc
orl
cmp
push
test
jnp
lcall
insl
sub
push
sar
mov
mov
aas
xor
xor
leave
pop
fmuls
jo
mov
arpl
cmp
in
cltd
fildl
nop
rcl
rorl
out
add
loope
mov
out
sbb
imul
xchg
addr16
cmc
daa
pop
clc
pop
or
adc
icebp
dec
xor
mov
loope
cmp
and
or
sub
push
jno
xchg
cli
in
stos
imul
push
popf
add
popa
imul
adc
pop
decl
cmp
divl
bnd
insl
xchg
daa
cmp
shll
scas
loop
test
in
cld
pop
and
movsb
insl
std
mov
mov
inc
or
movsb
fmull
nop/reserved
rolb
enter
mov
pop
aam
fstsw
xor
xchg
cld
pusha
ret
push
jno
sbb
add
inc
insl
pusha
lods
xor
cmpsl
jns
fsts
cli
iret
jae
adc
je
push
mov
lret
push
adc
dec
lret
xor
adc
fimuls
xor
aaa
gs
testb
loopne
std
inc
push
push
ljmp
lods
jge
lret
lods
and
orl
sub
lcall
cmpsb
sbb
cmp
and
outsl
leave
xor
sahf
pop
push
cmpsl
sbb
into
fstl
sbb
sub
cmpsl
or
dec
dec
sub
mov
jecxz
aas
rolb
imul
dec
data16
icebp
sub
cmpsb
loopne
loopne
sub
sub
popa
out
mov
xchg
data16
loopne
xor
dec
lea
js
xor
out
aas
push
ret
lahf
clc
dec
pop
test
sub
push
mov
xor
xor
popf
packuswb
mov
or
ret
cwtl
jecxz
xor
out
adc
inc
dec
push
enter
fidivrl
je
jae
jg
add
ljmp
and
lretw
push
xor
repz
cmp
or
push
adc
push
incl
mov
dec
inc
int3
enter
dec
comiss
sub
and
lds
ljmp
sub
sbb
fwait
rcr
icebp
push
lret
loope
test
ja
outsl
jmp
and
test
js
cmp
repnz
xor
icebp
or
adc
lahf
lock
aad
scas
and
or
pop
inc
je
jle
pop
xchg
and
add
mov
add
imul
pushf
cli
test
dec
shll
xchg
out
test
adc
jnp
ljmp
adc
rorb
mov
mov
dec
sbb
and
and
popa
adc
mov
or
sbb
xchg
push
dec
lods
or
movsl
mov
xor
cmp
or
arpl
inc
stc
push
sbb
mov
cmpsb
xor
bound
or
sbb
outsb
loop
das
js
push
pop
hlt
xchg
pop
aad
negl
add
fldenv
pop
cmp
data16
add
or
in
xchg
xchg
or
xchg
sti
mov
test
add
xchg
push
mov
insb
xor
sarb
lods
lods
or
jns
ja
pop
mov
sbb
lahf
dec
loopne
in
insb
aas
loope
cltd
lea
shrd
cwtl
mov
lea
xor
mov
lods
jmp
push
xchg
xchg
or
bound
loop
mov
xor
test
dec
sub
je
scas
pop
stos
pop
jp
in
sbbb
pop
stos
lds
sub
push
and
adc
push
mov
in
out
addb
imul
dec
adcl
mov
cld
mov
dec
jg
out
push
jns
ret
push
cmp
pop
movsb
dec
sti
daa
stc
shll
xor
sbb
aaa
rcl
les
popf
arpl
xor
fisubrs
mov
icebp
mov
mov
in
insl
sbb
add
and
lods
adcl
add
inc
pop
mov
imul
std
aam
adc
mov
cmp
pop
adc
cmovo
inc
and
fldcw
pusha
jnp
lods
mov
gs
push
pop
clc
aad
pushf
pop
push
xchg
push
mov
out
loopne
inc
xchg
pop
fs
mov
push
in
mov
test
pop
mov
mov
rolb
jp
lar
cmp
xorl
dec
jo
lahf
les
jmp
test
repz
mov
jmp
or
lds
add
mov
lea
ja
jge
gs
sbb
test
hlt
call
in
out
clc
lahf
shlb
leave
jb
daa
sar
xchg
test
test
pop
and
push
fisttpll
sub
shl
movsl
testl
fdivl
mov
mov
adcb
in
aam
sbb
xchg
push
rcr
in
pop
pop
xor
into
jno
adc
repnz
fstpl
push
shll
jno
notb
push
mov
nop
out
fstpt
negl
xlat
cmpsl
cmp
lods
mov
mov
jmp
xchg
cmp
add
dec
iret
sub
mov
pop
es
imulb
pop
fs
and
xor
fidivl
dec
stos
or
jmp
enter
lods
mov
stos
add
fnop
scas
or
pop
fdivrl
fbld
cmpsb
imul
adc
mov
jnp
pop
into
stc
addl
enter
add
or
sbb
test
cwtl
popf
mov
test
lret
into
mov
fnstcw
xor
mov
subb
stos
jae
ret
jl
jne
js
aas
lea
add
daa
or
sar
insl
shll
xor
jne
sbb
xchg
mov
hlt
xchg
cs
inc
xchg
ja
loop
sub
popa
les
addr16
stos
lods
mulb
jecxz
xor
sbb
test
push
cwtl
lock
xor
outsl
pop
or
flds
aam
push
xlat
cli
inc
mov
dec
adcl
mov
xor
xchg
pop
xor
stos
pop
push
lret
jne
mov
inc
sub
out
lock
fs
insl
jecxz
or
inc
lea
inc
hlt
daa
mov
es
mov
push
adc
mov
xor
push
loopne
jns
in
push
mov
dec
inc
add
insb
inc
jno
and
xchg
fwait
jnp
push
bound
jl
sti
cld
xor
cwtl
xchg
push
fstl
pop
inc
mov
mov
dec
pop
mov
sbb
pop
push
out
sub
in
in
mov
je
jecxz
cmc
shll
jg
out
int
into
xchg
mov
mov
imul
adc
int3
jp
sahf
xor
dec
adc
adc
or
in
add
mov
push
pusha
lea
xorb
fwait
sub
je
ret
mov
xlat
push
sbb
mov
xchg
insl
push
outsb
or
or
adc
out
mov
arpl
lods
nop
sbb
jne
aad
ja
stc
push
mov
les
inc
sbb
and
cmp
bound
fldcw
call
cmp
shrl
mov
inc
jg
push
lods
push
mov
inc
clc
jge
in
leave
icebp
fmuls
add
sub
xchg
cwtl
adc
aad
sbb
je
sub
mov
cmp
sbb
dec
lods
sti
mov
nop
movsb
movsl
dec
pop
xor
mov
sbb
and
jge
xor
fidivl
and
in
int3
mov
in
cmpsb
pop
les
fldt
sbb
sub
inc
imul
bound
jno
iret
andb
dec
or
imul
fld
push
fsubl
int3
sti
add
cmp
loope
cs
push
add
mov
cli
nop
iret
xorb
gs
fmul
mov
xor
sub
sub
mov
shlb
jbe
xchg
sub
push
jg
repz
mov
sti
jnp
xlat
mov
inc
fsts
je
iret
popf
jl
lea
cmp
andb
test
imul
push
or
sub
out
mull
cmp
int
xchg
add
push
pop
cli
stos
cmpsb
xchg
mov
sbb
in
push
jecxz,pt
cmpsl
sbb
or
cld
jle
loop
mov
rcll
pop
daa
ljmp
sbb
or
fwait
inc
jbe
out
xchg
clc
fstl
adc
xchg
and
push
int
aaa
sub
xor
lds
and
add
repnz
cmc
movaps
mov
push
lahf
or
xlat
mov
cmp
shll
in
out
dec
xchg
dec
xchg
mov
sbb
or
icebp
sub
ja
cwtl
push
or
mov
xor
test
push
xor
lret
insb
sub
cmp
jb
loopne
arpl
jle
xlat
push
sti
cmp
mov
adc
jmp
push
jg
mov
cltd
cli
jb
icebp
pop
sub
fsubp
xor
repz
dec
aad
cmp
mov
pushf
pop
fnstenv
stos
insb
sahf
fistl
bound
repz
cmpsl
cmp
mov
ret
jb
daa
shrb
lret
mov
or
sbb
jmp
dec
mov
jne
adc
and
daa
enter
mov
pop
add
ret
fidivrl
fadd
ret
jl
loope
rclb
sub
xor
roll
sub
push
data16
inc
push
jne
outsl
xor
loop
pushf
xchg
fwait
hlt
mov
jmp
notb
stc
pop
popf
jnp
jmp
xor
xor
jle
bound
pop
testl
in
fs
fdivrl
lds
into
xor
push
lock
aam
ret
jg
test
inc
loop
out
push
bound
aaa
jnp
int
ljmp
shll
pop
cmc
lods
das
xchg
push
xchg
fsubrs
push
sbb
test
push
and
mov
push
mov
fmull
sbb
mov
pop
jge
mov
push
xchg
fldcw
dec
ret
arpl
je
rorb
ljmp
adc
pushf
repnz
gs
mov
mov
xlat
arpl
rcrb
mov
push
fistps
dec
lock
sbb
push
stc
test
sbb
in
mov
xchg
mov
cmp
mov
mov
adc
mov
aaa
dec
rclb
in
sbb
sbb
xchg
mov
das
jno
xor
std
pop
fsts
mov
fcompp
aaa
lret
insl
mov
lods
leave
mov
in
inc
sahf
aad
push
xchg
mov
pop
cmp
pop
push
stos
mov
hlt
aad
aas
cmp
cmp
pop
ss
ficomps
ss
jmp
test
sti
shr
mov
mov
dec
icebp
cmp
shll
jae
into
xchg
arpl
adc
insb
lret
aam
jns
inc
out
adc
or
or
cli
lods
push
insb
les
pop
jg
adc
les
arpl
loop
outsl
cmc
or
fcoms
je
ljmp
mov
sbb
fs
mov
call
xor
cwtl
addr16
push
movsb
xor
mov
popl
cmp
mov
lock
out
mov
mov
sahf
cli
sbb
add
push
es
in
jecxz
push
dec
idiv
out
mov
lock
ss
xchg
leave
test
orl
fcmovnbe
cmc
shl
push
push
repnz
add
repnz
and
aam
lods
stc
sub
pop
popf
stos
jg
mov
add
shr
add
loopne
and
jae
mov
add
jmp
lret
out
push
mov
call
fsubrs
push
add
or
dec
pop
in
test
imul
adc
adc
in
lret
lea
mul
sub
pop
sbb
js
imul
fidivs
lds
or
push
jno
jns
mov
call
sub
sbb
or
fwait
fwait
xchg
mov
pop
jo
filds
jl
mov
inc
push
inc
mov
hlt
mov
shlb
in
xchg
aas
ror
ja
or
rcll
xor
xchg
xlat
aad
jmp
outsb
cmp
cs
inc
js
inc
adc
pop
push
shll
push
clc
jle
pop
inc
sub
fsubrs
adc
pop
adcb
xchg
pop
push
dec
cmpsl
ja
sub
imul
inc
les
negb
sbb
mov
cmp
pop
cmp
jb
rorl
lods
cwtl
mov
popl
mov
mov
movsl
jge
daa
dec
popf
mov
mov
adcb
pop
stc
outsb
loop
aam
adc
fwait
mov
test
jg
daa
jnp
dec
dec
in
adcb
mov
imul
hlt
or
adc
mov
pop
mov
inc
cmpsl
scas
push
jge
mov
fwait
xchg
pusha
ja
dec
pop
hlt
push
xor
jg
lret
pop
icebp
cmc
pop
pop
mov
jne
sub
or
xchg
popf
push
pop
mov
mov
ret
insb
add
sub
add
xchg
jnp
and
daa
test
sbb
xor
pop
xchg
ss
insb
xchg
jle
movsb
adc
sbb
shr
cmpsb
and
jnp
lds
rol
outsl
adc
loopne
fdivrl
cmp
jle
call
test
and
xor
sbb
iret
mov
and
mulb
ret
je
cmp
xchg
div
cmp
fwait
jg
and
adc
xor
adc
push
jo
and
push
and
dec
imul
xor
cmpsl
rol
movsb
bound
das
aas
sub
int
icebp
sbb
lcall
outsb
stos
dec
cmp
sti
in
loop
cld
test
mov
xchg
push
inc
mov
ss
in
mov
mov
insb
and
jb
push
jbe
xchg
and
ds
cmp
imulb
xor
addb
pop
sbb
mov
jl
or
mov
push
jmp
hlt
mov
add
inc
inc
gs
int
adc
xor
dec
lods
inc
jge
pop
add
push
mov
lods
sub
push
fnsave
xchg
push
movsb
cwtl
mov
sub
xor
dec
push
or
inc
push
cmpsl
dec
or
into
fnsave
aam
pushf
out
or
pop
pushf
fisttps
enter
bound
jmp
mov
sbb
mov
adc
mov
call
gs
not
nop
pop
int
xor
push
lret
mov
sub
xlat
push
std
add
inc
sbb
lea
lods
rclb
loopne
push
cmp
cmp
pop
mov
inc
lahf
sub
jle
out
testl
pop
push
jmp
daa
das
or
push
shll
adc
mov
mov
shr
push
out
imul
jl
mov
mov
int3
das
sti
daa
xchg
sti
cmp
lret
int3
adc
dec
xor
dec
push
sub
add
cmp
pop
int
icebp
sbb
jnp
adc
mov
xchg
lea
cmp
or
icebp
xor
push
mov
outsb
jge
das
insl
arpl
lret
lret
pop
push
outsl
adc
stos
xchg
and
arpl
mov
mov
stc
or
and
ror
in
push
mov
ja
inc
in
push
mulb
sub
dec
push
xchg
lods
xor
push
daa
cltd
idivl
sub
daa
inc
mov
fistpll
sub
fisubs
out
int
lret
shrb
pop
push
dec
pop
mov
roll
shrl
flds
mov
jl
cmp
adc
or
mov
movsl
testl
pop
xor
inc
add
cmp
mov
icebp
mov
push
or
xchg
adc
sbb
addl
imulb
mov
mov
mov
movsl
and
aad
arpl
or
add
jecxz
push
inc
je
sub
imul
mov
lret
in
ljmp
mov
rcrl
mov
sbb
in
sti
pop
push
ljmp
dec
rol
mov
add
iret
fists
sbb
lods
hlt
fbstp
mov
gs
or
sbb
fcoms
test
dec
push
cmp
outsl
data16
mov
cmp
jo
xorl
jge
dec
cmc
loop
inc
mov
test
out
outsb
sbb
xlat
hlt
and
das
jbe
jnp
add
repz
stos
inc
xchg
in
xchg
fcmovb
inc
dec
jbe
push
sbb
or
xchg
out
push
push
xor
lahf
out
aam
mov
sbbb
daa
push
mov
xor
push
cmp
xchg
int
mov
or
adc
ret
pcmpeqd
movsb
ror
or
and
xor
xor
inc
xor
ret
cmpsl
mov
arpl
sub
nop
cmc
cmp
push
popa
xlat
imulb
push
gs
mov
rcrl
xchg
sub
inc
and
mov
ja
cltd
jp
inc
inc
mov
jg
rcrl
call
jmp
hlt
mov
adcl
pop
imul
rclb
aaa
mov
data16
iret
cli
shrl
cmp
scas
outsl
inc
pusha
call
push
shll
into
pop
in
mov
mov
in
push
stos
inc
es
loope
and
and
jnp
pop
scas
mov
ss
out
xor
rolb
in
fsub
aad
sub
lret
imul
adc
movsb
xor
cmp
xchg
pop
cmp
clc
mov
in
or
in
lds
js
mov
mov
in
bnd
mov
stc
sbb
adc
outsl
dec
movsl
mull
lret
jp
test
cli
dec
mov
inc
ffree
dec
rcl
insl
push
pop
pushf
xchg
pop
jno
xor
lret
cmp
xchg
mov
jb
adc
xor
xor
jns
leave
inc
into
in
and
loopne
stos
xor
clc
add
stos
dec
add
xchg
xchg
imul
push
insb
inc
aaa
pop
push
xchg
aad
add
sarb
cli
xor
or
jne
pop
mov
repnz
ret
les
lahf
push
out
cltd
loop
and
mov
pushf
out
pop
xorb
pusha
inc
and
mov
inc
cmp
aaa
in
mov
mov
repz
mov
xor
xor
ja
lcall
push
dec
iret
sub
pop
jae
mov
xor
xor
adcb
and
xchg
lds
popf
jmp
sbb
out
and
fistps
lret
sub
xchg
pop
out
mov
icebp
arpl
and
mov
jb
cs
js
push
dec
cmp
pop
xlat
data16
mov
stos
mov
jo
daa
xorb
xor
add
aad
mov
mov
or
push
fnstcw
sub
js
dec
in
out
in
mov
inc
outsl
dec
shlb
mov
repz
cltd
ret
lock
dec
lahf
jp
and
inc
loop
sti
cmpsl
cli
out
dec
jo
orl
jae
scas
cmc
add
mov
pop
pusha
mov
mov
js
sub
ja
lret
mov
orb
push
inc
lret
in
sbb
jp
jg
je
cmp
jl
mov
arpl
je
lret
test
pop
cmp
enter
jo
mov
push
ficomps
mov
inc
mov
pushf
iret
cld
insb
xchg
xchg
cwtl
pop
mov
pushf
mov
sub
int
out
icebp
xchg
inc
push
scas
std
add
inc
mov
rorb
xorl
pop
out
pop
inc
mov
push
jns
lds
lret
add
insl
pop
xor
jae
and
sbb
popa
mov
popf
pop
or
lahf
pop
push
jle
insl
mov
inc
cmc
fbld
pop
stc
jg
and
cmp
dec
insl
pop
jg
mov
mov
std
push
fisttps
cs
mov
inc
je
mov
mov
cmpsl
sarl
negl
cmp
lods
inc
lods
out
adc
jl
push
fdivl
fsqrt
jecxz
and
arpl
inc
aad
jo
xlat
jb
push
push
cmp
sbb
cli
jnp
inc
mov
mov
mov
jmp
adc
movsl
or
xchg
in
dec
sahf
lods
out
mov
das
lock
sub
sbb
repnz
stc
scas
mov
movsl
mov
mov
push
jo
xchg
push
leave
xchg
dec
mov
sub
pop
fsts
mov
push
add
push
shl
cmc
movsb
xchg
xchg
jne
push
and
dec
cmp
sbb
adc
adc
push
xchg
insb
jle
ljmp
lods
callw
ret
int3
or
xor
call
rclb
add
mov
xchg
ss
push
das
and
pushf
pop
cmp
push
rcrl
mov
jecxz
mov
inc
inc
out
dec
inc
iret
jmp
mov
mov
jbe
push
popw
out
call
nop
cli
sbb
shll
in
ss
add
fistps
lods
jl
mov
idiv
sub
ja
xchg
andl
call
mov
add
stos
lods
dec
sbb
xlat
jecxz
loope
mov
jp
and
xor
call
or
sbbb
stos
repz
and
ret
jecxz
dec
add
mov
fists
mov
sub
cmc
cwtl
fdivrl
je
jp
pop
test
lcall
sub
sbb
push
les
push
push
int3
cmp
pop
xchg
jp
pop
jle
out
cli
subl
ds
xchg
sub
or
in
idivl
lret
test
add
bound
lahf
or
in
cwtl
push
ds
das
test
push
and
outsl
push
popa
add
sbb
addr16
incl
les
or
shll
add
sub
cmp
push
insb
ds
cld
sarb
cmc
and
imul
cltd
test
xor
jmp
cmp
jbe
pop
lahf
pop
mov
xchg
dec
fsubrl
cld
sbb
or
and
movsb
testb
push
fbld
xchg
insb
in
mov
lret
xchg
ficoms
pop
jp
addr16
xchg
jo
inc
xchg
hlt
neg
mov
aas
mov
jmp
push
inc
and
test
xchg
xchg
sub
jae
pop
add
inc
push
test
xchg
addr16
add
jp
cwtl
sbb
xor
inc
pop
sti
lahf
shr
test
cmc
mov
pop
dec
jl
loopne
jno
hlt
pusha
orb
and
push
mov
rolb
add
adc
jmp
jae
loope
xchg
sti
in
xchg
xchg
loop
mov
mov
mov
sbb
je
inc
daa
mov
stos
clc
lds
mov
mov
stc
pop
cmpsl
push
mov
xor
shrb
jl
dec
dec
inc
cmc
loopne
push
add
cld
jmp
pop
add
jno
mov
mov
push
das
lods
mov
add
popf
ljmp
or
sub
fs
leave
fnsave
ljmp
ja
aam
sbb
in
adc
je
xor
hlt
inc
lock
fs
scas
outsb
fstpl
cwtl
adcb
jnp
aam
inc
inc
fdivrs
adc
mov
mov
pop
insl
mov
sti
leave
lea
mov
in
enter
mov
hlt
mov
and
mov
daa
xor
and
enter
mov
xlat
push
mov
push
fiaddl
or
xchg
pushf
jl
mov
jo
out
push
pushf
int3
sahf
addr16
sahf
cmp
xchg
inc
movb
dec
or
mov
pop
and
pop
insb
xor
aad
jno
popf
cmp
xchg
jle
add
out
pop
jle
lret
outsl
lods
mov
inc
mov
push
or
push
nop
and
jg
xchg
mov
leave
sbb
mov
adc
rorl
es
dec
rolb
inc
or
insb
pop
in
outsb
and
adc
cmp
bound
or
adc
xor
out
xor
mov
js
cli
or
in
xchg
xchg
es
outsb
jle
rcrb
sbb
xor
xlat
in
stos
sbb
subb
xchg
jne
inc
sub
mov
mov
mov
jp
or
in
add
icebp
in
add
jge
adc
loope
cmc
and
push
cmp
mov
ror
mov
or
mov
stc
js
jno
lret
mov
mov
xor
inc
ds
add
xor
cli
inc
jl
dec
imul
popa
xchg
xchg
out
insb
stc
push
aad
mov
inc
mov
sbb
dec
in
in
pop
sbbl
fldl
stos
movsb
adc
lock
inc
sub
pop
popf
adc
inc
sti
ds
cltd
mov
push
adc
cs
jae
xor
in
into
test
adc
dec
xchg
xchg
loopne
pop
idivb
xor
lods
xchg
cmp
mov
push
inc
outsl
popa
stos
out
add
dec
lock
inc
rclb
jns
push
repz
pop
add
loope
insb
aam
sti
insl
imul
sub
pop
or
mov
mov
lds
lods
in
sbb
int3
adc
jle
add
sub
test
push
ss
sub
das
rorb
inc
sbb
mov
lods
push
or
jb
push
fs
jae
adc
pop
mov
out
sub
adc
mov
jp
fs
rcl
cmp
imul
inc
popf
hlt
mov
das
repz
sti
dec
push
repz
push
adc
insb
cmc
mov
pop
dec
faddl
add
mov
push
or
jmp
dec
or
mov
lock
cmp
jp
fldt
or
stc
push
and
cld
pop
mov
jle
adc
test
cmc
lahf
cmpsb
sub
sbb
jne
pop
insl
mov
fcomps
sbb
jne
pop
cmpsb
sub
stos
loope
ret
aam
add
pop
push
jae
mov
lods
cld
pusha
addr16
jl
jl
mov
icebp
inc
outsb
push
enter
lods
jecxz
or
jnp
push
mov
push
les
jl
mov
rcrb
cmp
mulb
inc
adc
push
or
xor
sub
mull
adc
inc
inc
xor
test
loopne
lods
movsl
mov
jbe
cmp
mov
cmp
inc
pop
add
push
jp
push
sub
mov
sub
mul
push
in
pusha
aad
mov
fst
into
inc
jge
jge
mov
ret
js
pop
daa
sbb
or
in
pop
xorl
lds
jecxz
adc
inc
dec
or
xor
pusha
sahf
and
fdivrs
in
fwait
inc
in
inc
xchg
dec
lods
jno
in
test
or
out
mov
mov
bound
sti
sbb
push
mov
xlat
cmp
push
notl
mov
ds
shrb
or
pop
dec
cwtl
push
dec
add
sub
out
xchg
insb
cmpsb
sub
sti
shlb
mov
sbb
push
iret
sahf
cltd
or
pop
dec
mov
mov
mov
cmp
out
cmpb
out
leave
sbb
or
fcmovnb
push
ljmp
mov
jns
scas
pop
pop
lret
in
les
jle
movsb
cli
in
ja
mov
fstpt
testb
fnsave
negb
adc
mov
pop
jbe
inc
dec
mov
ss
lret
xor
xor
and
loopne
icebp
jl
addr16
or
mov
faddl
or
lds
mov
adc
mov
dec
mov
push
and
lods
adc
push
nop
into
orb
lock
adc
mov
fistpl
xchg
aas
or
pop
stc
fwait
mov
je
lret
xchg
imul
jnp
jo
xor
out
jg
cmpl
aam
push
dec
mov
dec
enter
int3
adc
xchg
test
lods
pop
add
pop
cmp
clc
dec
pop
push
jb
adc
scas
push
cwtl
int3
imul
inc
pop
pop
sub
lock
icebp
insb
inc
stc
popf
push
push
xchg
cmp
das
inc
pop
sbb
in
sub
push
xor
sbb
add
sbb
xor
inc
out
fiadds
adc
popa
fcom
inc
mov
js
mov
or
cmpsb
mov
mov
push
iret
sbb
push
mov
or
daa
int3
push
aam
movsb
cmp
cltd
xor
sti
xchg
or
add
lock
jb
mov
adc
movsl
xorl
pop
cmc
mov
sbb
hlt
cmp
xchg
mov
addb
and
xchg
lods
addl
cmp
fwait
dec
arpl
daa
lea
pusha
push
jnp
clc
mov
add
xor
mov
mov
mov
pop
jbe
imul
inc
in
les
jnp
cltd
dec
pop
pushf
loopne
nop
and
imul
and
lea
call
movsl
inc
sbb
or
lock
mov
inc
jecxz
cld
test
xchg
std
jnp
and
xlat
sarb
mov
push
mov
fstpt
adc
sbb
dec
cmp
push
mov
and
hlt
push
sub
or
pop
in
or
stos
fmull
jne
xor
icebp
jecxz
decl
sub
cli
aaa
lret
dec
out
mov
addr16
mov
enter
push
cld
lret
dec
ds
adc
jg
and
jae
mov
push
and
stc
mov
xor
dec
rorl
lds
jno
push
mov
xchg
sbb
inc
popa
mov
mov
sub
sub
or
mov
and
xchg
or
iret
jae
loopne
iret
xchg
aam
dec
cmp
in
out
jg
out
stos
cmp
xchg
and
leave
or
sbb
and
push
jmp
lock
jle
cmp
lods
dec
pushf
pop
pop
int
das
idiv
inc
in
imul
cmc
lods
in
cltd
pop
jg
pop
cmc
std
and
cli
test
lds
mov
inc
mov
sub
push
popf
insb
adc
or
dec
mov
xor
sbb
add
sbb
cwtl
pop
cmc
adc
enter
fs
sub
inc
loop
pop
push
out
adc
fstpt
dec
das
into
push
test
push
jo
and
cltd
push
mov
out
xchg
daa
mov
inc
pusha
insl
lea
push
loop
and
dec
mov
sarl
int
outsl
mov
mull
fsubs
ret
in
int3
loope
mov
pop
mov
icebp
int3
in
mov
or
mov
push
mov
js
int3
mov
mov
int3
dec
lock
sub
fbld
scas
ss
sti
pop
repnz
cld
icebp
mov
pop
jle
push
leave
cmpsl
cmp
xor
and
mov
les
inc
jge
bound
add
test
xchg
ret
push
fwait
sub
mov
sbb
sub
mov
icebp
ret
fnstenv
push
jno
mov
fimuls
mov
movsl
adc
mov
and
or
setle
add
shrl
test
icebp
lods
xlat
adc
inc
mov
dec
scas
jl
mov
or
and
jne
cmp
movsl
push
inc
xchg
stc
test
add
xor
ja
outsl
adc
cltd
movsl
jb
push
test
xor
mov
xchg
pushf
dec
mov
mov
jnp
out
and
jbe
cld
iret
mov
add
push
jne
dec
fcmovnbe
stos
adcl
and
mov
xchg
addr16
mov
call
mov
mov
sbb
loop
pusha
add
lea
outsb
inc
and
xor
inc
lret
inc
jnp
daa
mov
int3
mov
out
test
aaa
push
mov
pop
sahf
jnp
xor
cmp
jmp
jmp
shlb
andl
outsl
arpl
mov
jae
sub
stos
aam
jne
cmc
mov
subl
fs
shrl
repnz
or
xchg
shlb
jbe
pushf
xor
jg
push
jnp
xor
lods
iret
std
cmp
fistpl
cwtl
fdivrs
inc
inc
add
mov
push
or
pop
insb
mov
cmp
scas
push
cmc
bound
and
xchg
or
cli
mov
nop
or
stos
or
or
adc
nop
idivl
dec
into
add
das
cmp
mov
xchg
enter
push
loope
ds
or
pop
movzbl
or
std
mov
outsb
daa
mov
xor
clc
pop
dec
call
xor
jecxz
push
test
or
pop
lods
push
or
sub
cmp
mov
test
inc
mov
mov
cltd
popa
imul
test
pop
cmpsl
out
cmp
out
addb
stos
loopne
xor
rcr
ljmp
loopne
repz
cld
fs
int
clc
scas
dec
mov
sbb
in
sub
xchg
pop
inc
testb
cmp
jo
add
xor
imul
enter
movsb
mov
mov
cs
imul
add
adc
rolb
data16
imul
popa
ja
sar
add
inc
sub
xor
dec
lret
pop
xchg
cmp
scas
xor
fucomip
rcr
aam
mov
ficompl
sbb
inc
cmc
or
or
mov
xor
pslld
jmp
lahf
bsf
xchg
cmpsb
cmc
loopne
lds
es
cmpsb
dec
pop
inc
out
test
mov
push
mov
mov
inc
fldcw
or
jb
out
xchg
or
sbb
dec
cmp
pop
fmul
sub
mov
or
call
lds
push
xor
cmp
xchg
inc
fdivp
int
or
add
lods
pop
fidivl
cmovge
mov
rcrb
in
lea
xchg
popl
xchg
jl
mov
pop
push
outsb
mov
sub
mov
jle
push
and
fwait
outsb
mov
add
lahf
into
cmp
imul
ja
lock
stos
dec
push
mov
jmp
add
xchg
pop
iret
mov
rcrl
and
sahf
push
or
mov
dec
inc
in
add
pop
cmpsl
sbbl
cmp
sbb
leave
dec
pop
xchg
cmp
clc
inc
aad
pop
xor
pushf
mov
enter
cmp
jg
cltd
inc
lock
and
pop
pushf
fwait
pop
mov
adc
mov
or
push
xor
nop
fbld
lods
test
movsl
out
fistl
cltd
xchg
jne
xor
ja
ficomps
adc
push
sahf
sbb
and
idivb
mov
push
dec
movsl
in
outsl
sti
dec
imul
decl
dec
arpl
cmp
aas
lods
fidivs
push
lds
pop
leave
out
std
fstpl
addr16
adc
stc
shll
ja
fidivs
rcll
in
cmpsl
dec
fldt
rorl
js
vrcpps
mov
and
adc
dec
ljmp
jp
in
adc
dec
xchg
aaa
push
outsl
fwait
aad
shlb
add
cmp
sbb
adc
inc
mov
mov
push
push
fwait
pushf
scas
pushf
imul
pop
jl
insb
dec
insb
lea
pop
mov
push
dec
lcall
inc
jb
mov
aas
xchg
mov
call
popa
jle
mov
repnz
jo
mov
in
imul
or
aad
les
and
push
jno
outsb
test
push
dec
aas
stc
in
mov
jecxz
or
mov
sub
lea
stos
or
mov
sub
mov
add
xor
daa
inc
mov
xchg
push
arpl
dec
test
aam
xor
nop
xchg
shr
repz
lahf
xchg
xchg
add
jecxz
mov
jae
outsb
adc
rcll
das
into
insl
fdiv
fwait
ret
xor
movsl
pop
inc
lea
out
cmpsb
das
push
cmp
mov
jo
sub
xchg
mov
adcl
int
adc
ffree
lods
aam
cmp
cltd
adc
mov
jle
jecxz
adc
xor
sahf
xchg
push
lahf
inc
ss
imul
fmuls
lea
sub
sbb
jns
dec
stos
add
xchg
cs
cmp
xchg
jmp
xchg
leave
fldcw
sahf
fcmovnbe
or
out
pop
xchg
movsl
add
cmp
fstpt
scas
push
jle
addr16
scas
xor
xor
inc
test
mov
cmp
loope
pushf
out
cmp
inc
fwait
mov
sub
stos
test
leave
outsb
je
push
aad
arpl
popf
xor
push
fs
xchg
inc
xchg
inc
insl
mov
add
dec
rcrl
jae
xor
aam
lods
data16
mov
lret
mov
leave
mov
or
xor
pop
arpl
movsb
and
add
mov
mov
popf
and
or
cmpb
out
int3
xlat
push
pop
pop
cmpsb
inc
sub
cmpsl
jecxz
int3
dec
imul
repnz
mull
std
xlat
sbb
notb
adc
mov
out
dec
sbb
push
xor
push
cld
aad
pop
jne
fwait
xchg
cmp
sub
imul
orl
sub
pusha
test
enter
mov
cltd
subl
inc
sahf
mov
stos
cmp
xchg
sbb
mov
xor
out
add
addr16
xchg
sbb
mov
jmp
mov
nop
or
shlb
mov
in
xchg
add
xchg
stos
pop
jnp
sbb
mov
xchg
es
mov
lea
das
out
in
fistpll
jge
addr16
aaa
fwait
int
adc
repz
or
sub
into
xchg
and
leave
les
inc
adc
mov
or
mov
shlb
les
pop
sbb
arpl
inc
rol
jge
xchg
push
add
imulb
or
fistl
fdivl
sub
dec
jge
dec
add
sbb
mov
xchg
mov
inc
sbb
adc
test
loop
inc
stc
je
repz
shlb
imul
dec
test
mov
xor
in
dec
std
sub
sahf
sbb
test
cmp
out
ret
pop
nop
out
or
fsubl
into
push
mov
pop
jb
mov
and
inc
jo
out
cmp
fsubrp
push
ficomps
out
mov
inc
xor
jo
inc
fbstp
cmp
and
jno
mov
nop
dec
test
and
dec
mov
movsl
dec
pop
mov
iret
cs
mov
ja
pop
orb
jnp
sub
iret
or
sub
dec
push
ja
insb
aam
aam
loope
aam
cmpsl
leave
lods
mov
xchg
xor
pop
or
pop
jbe
out
imul
push
mov
imul
movsb
shl
gs
arpl
jbe
push
lods
clc
push
sahf
xor
sbb
stos
mov
jo
faddl
and
add
dec
stos
xchg
icebp
sub
inc
xor
arpl
int
mov
sarl
cmpsb
leave
mov
ficomps
mov
xchg
int
dec
jmp
mov
inc
mov
movsb
bound
cmpsl
inc
imull
loop
pop
add
jp
pop
xchg
clc
dec
fcomps
sub
jae
cmp
jae
pop
lods
loopne
xchg
sub
mov
jbe
test
pop
mov
push
jge
lret
jb
roll
xchg
mov
in
adcl
test
popa
mov
ss
and
sbb
test
arpl
jecxz
push
imul
lret
mov
and
cwtl
cmp
outsb
pop
mov
push
mov
lods
ss
not
repnz
inc
scas
or
popf
bound
xchg
and
movsl
stos
jmp
mov
mov
pop
nop
aas
or
sbb
dec
loop
xchg
pop
push
jo
int
push
cmp
mov
xchg
cs
jmp
sub
jb
fidivrl
push
mov
pop
mulb
fdivrp
sub
cmc
xor
rcll
out
shlb
mov
adcb
dec
xchg
adc
andl
inc
lret
cld
test
sub
imul
insl
aaa
jle
pop
push
jecxz
cmp
and
les
adc
or
xor
mov
inc
adcl
fwait
jae
test
cs
leave
cmp
and
or
divb
loop
push
xor
fwait
shll
gs
mov
hlt
ficomps
dec
or
adc
loopne
shl
out
sub
shrb
jo
xchg
mov
adc
mov
es
daa
jbe
fs
std
add
fimuls
ds
add
jne
xor
pop
pop
pop
mov
and
jns
sbb
test
add
dec
mov
mov
jo
test
fistl
xchg
and
inc
aad
mov
fbstp
arpl
sbb
insb
xchg
sub
mov
and
out
xor
inc
cmpsl
sbb
mov
mov
or
xchg
cld
mov
orl
and
pop
shlb
adc
mov
cmp
xchg
sub
or
sbb
and
inc
in
and
leave
add
fbld
and
rcl
cwtl
repnz
ja
inc
xlat
cwtl
shlb
imul
outsl
mov
shrl
dec
jecxz
repz
out
es
cmp
mov
enter
shl
hlt
pop
repnz
and
jbe
rorb
and
sub
push
add
mov
jb
mov
jge
les
in
adc
rcll
fisttpl
lds
inc
fucomip
inc
ljmp
xorb
loope
hlt
data16
scas
cwtl
xor
movsb
add
add
jp
clc
ja
adc
mov
cmp
mov
gs
lret
mov
rsm
dec
shlb
mov
imulb
dec
imul
jle
lods
out
xchg
ljmp
sbb
xchg
cltd
pop
mov
inc
push
push
dec
push
jno
jp
mov
es
mov
mov
xor
jp
cs
xchg
adc
orb
test
jbe
dec
xor
push
fwait
jne
or
imul
mov
nop
int
push
fstpl
jnp
enter
sbb
push
and
xor
sbbl
jecxz
cmpb
sbb
jbe
cmp
jno
mov
mov
aad
pop
sahf
iret
mov
add
xor
in
pop
cmpsb
xor
aad
lods
xor
pop
and
jno
pop
pop
add
push
popa
insb
fnstcw
xchg
mov
ss
nop
sub
repnz
jo
ds
repnz
lret
pop
adc
in
mov
je
pop
les
gs
lcall
rcrl
stc
adc
insb
inc
roll
popf
aad
mov
xlat
mov
inc
insl
push
pop
mov
mov
xor
sbb
add
test
loope
or
cmpsb
cmp
mov
add
mov
mov
xor
mov
sub
ja
xchg
cltd
pop
mov
or
idivl
movsl
fcoml
add
mov
repz
push
test
adc
ljmp
rorb
lds
pop
es
cmc
mov
icebp
and
movsb
lahf
dec
pop
fisubs
iret
mov
imul
int3
imul
leave
inc
jl
jmp
push
inc
movsl
fiadds
jp
jb
inc
dec
jmp
ret
adc
movsl
or
mov
adc
mov
testb
add
lret
flds
pop
inc
xchg
inc
add
mov
movsb
mov
iret
jno
dec
popl
cmp
mov
pop
or
dec
pop
scas
or
dec
cwtl
mov
sti
cmc
jae
or
push
imul
mov
mov
and
dec
into
and
sub
or
enter
out
in
dec
addr16
in
push
mov
push
jmp
push
mov
mov
xor
icebp
pop
xchg
mov
inc
push
mov
mov
add
jl
loopne
cli
outsl
clc
je
out
in
lahf
mov
xor
fstps
inc
mov
dec
cmp
xchg
dec
xchg
mov
jle
adc
add
std
int3
mov
fidivl
push
mov
int3
loop
repz
mov
test
inc
cltd
sub
xor
bound
loope
dec
and
sbb
fcmovu
xchg
mov
push
das
ss
nop
add
imul
push
adc
mov
bound
out
lcall
jp
sub
add
mov
push
bound
sub
data16
aas
mov
add
xchg
rcrl
pop
add
mov
popa
push
fsubp
aas
push
push
dec
fcomip
mov
xchg
fdiv
mov
adc
and
aad
sbb
stos
and
in
stc
stc
jno
mov
jns
pop
sbb
sbb
fdivl
push
jl
mull
xor
loop
daa
sahf
xchg
lea
sub
sub
mov
lds
mov
movsb
in
mov
jecxz
jae
add
push
fnstcw
add
out
pop
add
mov
xor
out
int3
mov
aam
les
incl
push
sti
int
daa
add
mov
or
push
in
mov
inc
lcall
movsl
fsubr
mov
cltd
ret
mov
mov
call
xor
rclb
jb
sahf
xlat
pop
cmp
les
add
push
sbb
pushf
add
data16
cmp
popf
imulb
in
aaa
insl
cmp
xor
pop
dec
push
in
imul
mov
push
jns
and
jl
jb
sub
sbb
push
sbb
jmp
cmp
movsl
dec
lock
neg
cmpsb
sub
inc
cmp
mov
movsb
pop
sahf
pusha
in
sarl
mov
cmpl
cmc
inc
out
cltd
icebp
cmp
pusha
loope
xor
fildll
mov
inc
jp
into
lcall
pop
sbb
add
sub
add
xchg
mov
xor
xchg
add
aaa
dec
add
mov
adc
outsb
shrb
daa
mov
xor
lea
cvtps2pd
or
xchg
jle
adc
lds
adc
dec
jbe
mov
mov
pushf
or
fcompl
jo
mov
xchg
fscale
mov
pop
push
stc
fidivl
cmp
stos
mov
dec
in
push
sub
cmpsl
cmp
adc
cmpsb
sub
pop
lods
or
pop
fdivl
int3
out
mov
cmp
lods
repz
inc
fbstp
jmp
ja
sbb
aas
lea
sbb
lods
mov
sub
scas
loopne
mov
mov
mov
pop
inc
clc
jns
or
cwtl
dec
xchg
lret
cmpsb
pusha
cmpsl
out
cmp
clc
or
xchg
insb
mov
sub
out
pop
jmp
mov
stc
push
or
mov
fstl
mov
std
or
mov
lret
cmp
or
mov
push
xor
inc
xchg
push
mov
add
add
in
fwait
mov
ja
adc
xlat
fdiv
add
xor
daa
pop
das
outsb
mov
fwait
adc
and
dec
lods
or
and
push
sbb
mov
ror
or
cmp
mov
stos
push
pop
out
mov
fadd
fcomps
cmpsb
mov
mov
push
cmp
sub
add
mov
push
pop
aad
mov
dec
mov
into
mov
mov
pop
mov
sti
mov
or
sarl
and
jno
aas
adc
push
stos
mov
test
xlat
xchg
xchg
movl
data16
insl
dec
push
xchg
jmp
mov
mov
mov
inc
xor
jge
or
pop
mov
or
test
test
and
imul
loope
adc
pop
push
fadd
aam
outsb
lret
dec
std
or
stos
mov
fcomps
cmp
mov
insl
push
imul
mov
aad
pusha
mov
xchg
fildl
rorl
cmpb
fwait
pop
daa
sbb
or
inc
xchg
dec
ss
sti
xor
addr16
jns
xchg
stc
daa
push
aas
adc
outsl
mov
jmp
inc
shr
mov
stos
repnz
enter
xchg
mov
mov
jle
inc
cltd
maxps
fisubrl
push
js
outsl
das
icebp
xor
negb
rolb
lock
mov
fs
mov
xchg
clc
add
add
sub
jbe
and
jle
inc
sub
neg
std
sub
jle
test
adc
movsl
mov
and
sbb
fucomi
popf
aam
arpl
push
cmp
pop
je
pop
and
pop
cmpsl
jle
lret
xchg
add
xor
enter
adc
mov
dec
cmpsl
push
xchg
cmp
daa
and
xchg
adc
add
inc
ljmp
pop
xchg
clc
or
stc
sub
outsl
aaa
and
mov
in
js
andl
xlat
adc
popf
fcmovnu
inc
arpl
je
or
and
ficompl
sahf
cltd
inc
xchg
sbb
popf
cmp
adc
sub
outsl
xchg
jge
jno
cwtl
rcll
push
cltd
lds
sbb
pusha
fwait
inc
insb
lret
paddq
cld
aas
and
shll
xor
daa
mov
arpl
ljmp
lahf
repnz
lods
and
adc
in
jbe
lock
into
rorl
inc
ret
movsl
in
ret
push
and
movsb
pop
repnz
mov
lret
or
fs
adc
sub
sub
lret
int3
adc
adc
stos
cmp
aas
xlat
inc
adc
in
sahf
mov
push
xlat
or
jle
rorb
cwtl
inc
xchg
rcrb
arpl
adc
popl
enter
sub
mov
cmp
popa
push
and
pop
movsb
cmpsb
sbb
jle
add
je
sub
mov
pop
add
jbe
int3
sub
in
cvtps2pd
es
mov
out
fstpt
loope
inc
fwait
push
push
push
mov
mov
inc
push
sub
and
xor
mov
dec
mov
dec
or
pop
mov
cmp
jge
lea
mov
leave
add
negl
adcl
mov
mov
ljmp
sub
fists
pop
es
mov
mov
in
mov
mov
sbb
cmpsl
mov
pop
clc
test
xor
dec
decb
sti
fs
roll
ljmp
push
jnp
pop
mov
add
fisubrs
scas
dec
dec
out
mov
cmp
jmp
dec
hlt
jle
and
es
cmp
lods
in
sub
jle
sti
jb
mov
js
clc
lahf
pop
pop
dec
sub
imul
icebp
sub
loopne
subl
or
jl
mov
pop
popa
mov
mov
adc
mov
int
jb
dec
fldz
rorb
inc
fistpl
or
jne
sbb
dec
out
mov
dec
loopne
push
loopne
jg
cmpsb
and
pop
ja
popa
in
sbb
sbb
add
push
jae
jp
stos
xor
jo
gs
bound
xor
cmp
inc
jns
fwait
mov
push
popf
enter
add
mov
inc
andl
mov
pop
pop
mov
aad
fwait
ja
popf
aam
mov
out
jae
pop
mov
cmp
not
jmp
mov
cltd
daa
adc
pop
push
cld
mov
jne
sti
icebp
and
cmpsl
push
insl
loope
inc
mov
cmpsl
divl
mov
mov
jo
test
sub
roll
dec
jle
ret
stos
xchg
adc
push
and
xchg
dec
sbb
or
dec
arpl
notb
inc
mov
xlat
repnz
es
or
scas
pop
mov
out
or
cltd
icebp
jmp
subl
pop
inc
out
cmp
in
xlat
negl
aaa
fcmovnu
in
cwtl
push
aaa
scas
push
sbb
push
pop
cmp
adc
xor
cli
inc
ljmp
adc
lods
in
xchg
cmp
pop
cmp
ret
or
add
fs
pop
mov
aad
fs
pop
andl
loope
pop
mov
mov
jp
push
jo
in
popa
xchg
cmp
sti
js
daa
daa
cmc
pop
cli
andb
incl
xor
xor
pop
mov
test
dec
jns
xchg
dec
jecxz
mov
mov
mov
mov
sbb
je
dec
hlt
lea
idiv
rcr
push
es
shll
cmpsb
adc
pop
roll
movb
dec
insl
inc
rcr
icebp
push
mov
pop
fsts
xchg
int3
xchg
lret
and
inc
adc
xlat
sarl
pop
fiadds
cltd
lods
lahf
test
gs
and
test
jno
fcomps
dec
adc
cmp
cmp
loope
xchg
fnstcw
mov
lret
sbb
sbb
lock
lea
sub
dec
sahf
or
insl
jnp
ljmp
and
xor
pop
filds
mov
pop
cmp
jmp
xchg
arpl
rolb
and
or
insb
inc
out
js
xlat
ret
sub
sbb
mov
pop
push
mov
shll
sub
hlt
loope
cltd
add
add
xchg
mov
xchg
popa
iret
cmp
in
pop
mov
inc
mov
ss
mov
int3
in
adc
jo
in
test
dec
xchg
jns
mov
jmp
out
push
jb
lds
xchg
fdivl
jo
hlt
sub
add
stos
jp
in
inc
adcb
sub
test
ja
pushf
inc
testb
into
jl
fcomps
xbegin
dec
lret
mov
jge
add
inc
sbb
mov
cmpsl
je
xchg
xor
jbe
rcrb
cmc
pusha
out
out
stos
popa
gs
xchg
dec
mov
or
in
xor
popa
int
mov
pop
or
jl
jns
subb
fiaddl
jbe
cmp
adc
jp
inc
rcl
mov
test
insb
adc
push
sbb
fnstenv
scas
aaa
sti
adc
pushf
dec
lret
inc
call
xchg
jge
sbb
stos
push
jg
push
sub
addl
lahf
lods
test
sbb
sub
scas
cmp
cmovg
xchg
fsubp
push
fbstp
lods
pop
add
je
jmp
dec
jg
ret
lahf
pushf
mov
jne
jnp
cmp
xorl
inc
and
mov
mov
sub
addr16
jg
mov
icebp
into
rorl
mov
enter
loope
negb
xlat
into
adc
rcll
cld
iret
xrelease
ffree
insb
jp
inc
pop
pop
mov
xchg
lock
std
jge
jecxz
cwtl
adc
and
flds
and
push
sbb
push
xchg
stos
xor
aad
inc
mov
sahf
test
sbb
cmp
adc
xchg
aas
movsl
stc
hlt
and
adc
mov
pop
enter
fwait
adc
popf
enter
rclb
int3
bnd
lea
inc
lods
sbb
fstpt
in
scas
mov
out
dec
xchg
xor
imul
cmpsb
xchg
mov
jmp
adc
xchg
mov
and
adcl
cs
mul
pop
movsl
cwtl
mov
sub
fwait
or
xchg
cmp
iret
ret
sahf
adc
insb
mov
pop
mov
mov
enter
pusha
lret
add
mov
xlat
out
jno
out
movsl
stos
in
mov
sub
in
imul
iret
pop
and
aad
out
xchg
sbb
mov
sbb
addr16
push
insb
pop
es
fwait
out
pop
sub
scas
sbb
cltd
adc
push
adc
ljmp
rorb
addr16
dec
arpl
push
dec
cmpsb
lds
adc
test
scas
jge
rcr
pop
mov
test
xchg
xchg
orb
imul
pop
sahf
add
inc
mov
adc
mov
jl
mov
fadds
or
push
add
fistl
pop
cmp
ret
movsb
ja
sub
stos
sub
fdivp
loopne
fdivl
js
cmp
lret
aaa
int3
int3
imulb
js
and
mov
repnz
sbbl
ljmp
cmp
add
jae
xchg
ja
pop
sbb
or
add
sti
add
jno
lods
pop
dec
inc
inc
test
nop
pop
pop
push
rcl
wrmsr
lret
sahf
jl
repz
frstor
jg
loope
iret
adc
xlat
mov
xchg
mov
xchg
add
sbb
imul
stc
lcall
mov
and
add
shll
xchg
lods
jmp
shll
dec
xchg
mov
jnp
aaa
pop
mov
popf
stos
lods
insl
rcll
inc
sub
inc
jno
push
mov
aam
cmpsb
push
repnz
cs
stc
dec
pop
lds
push
jbe
int
mov
cltd
out
jne
add
rclb
outsl
rorb
outsl
psubusw
dec
cmpsb
mov
outsl
pushf
ss
xchg
inc
cmp
xchg
nop
call
aas
and
loopne
sbb
pop
sub
jmp
xor
add
pop
js
sub
mov
sbb
out
jbe
xor
push
ret
pop
imul
rcll
test
pop
and
pop
cmp
mov
js
add
sahf
bound
add
cmpsl
lea
dec
mov
or
or
bound
fldcw
xchg
out
enter
sbb
lcall
sub
xor
push
mov
fdivl
inc
add
inc
clc
and
mov
push
cwtl
mov
rcrb
fistpll
shrb
out
std
sbb
cld
xchg
add
ret
testl
mov
ret
jnp
pop
xchg
cld
call
in
call
add
loope
out
cs
or
and
out
adc
or
cmp
xchg
call
sub
fistpl
add
cmpsl
jne
push
xor
sub
mov
lret
flds
les
enter
xchg
ret
scas
xchg
je
int3
fldl
out
dec
pop
push
xchg
cmp
and
shrl
movsb
stos
xchg
out
in
imul
inc
ficomps
push
cltd
sub
mov
pop
xor
mov
jno
mov
sbb
rol
out
dec
mov
sbb
icebp
hlt
into
inc
or
add
pop
xchg
pop
dec
add
jecxz
bound
push
jg
mov
sub
lahf
cli
cmc
mov
out
test
jns
cwtl
pop
repz
data16
adc
int3
das
push
cwtl
popf
push
mov
ret
xlat
repz
movsb
and
mov
loopne
test
std
mov
subl
push
push
mov
xor
sbb
popf
fimull
shlb
sbb
mov
call
cmp
aam
jo
fimull
aad
scas
outsb
inc
icebp
or
or
mov
add
pop
pusha
jbe
cmpsl
idivb
sti
inc
movsb
jnp
inc
int3
in
mov
sub
jge
mov
inc
and
mov
in
push
mov
iret
xchg
cli
outsl
add
add
pop
ret
xchg
loop
loopne
push
ja
mov
shlb
outsl
imul
and
enter
xor
xchg
jl
loopne
sbb
inc
adc
inc
sahf
mov
popa
insb
and
or
jns
enter
jg
mov
daa
xchg
jne
mov
scas
divb
and
test
push
insb
inc
xchg
hlt
add
stos
nop
push
jo
mov
push
enter
shr
mov
fcomip
add
mov
pushf
push
subb
addr16
adc
adc
add
jo
fbstp
imul
adc
nopl
inc
push
arpl
mov
cli
sub
cmpsl
sub
push
dec
cmc
mov
mov
cmpsb
mov
jo
out
add
clc
push
fsubs
mov
mov
xor
out
inc
loop
scas
push
mov
and
loope
repz
je
add
and
stos
fadd
clc
sub
frstor
icebp
pushl
repz
or
clc
jmp
inc
jns
imul
jb
cmp
jmp
sub
aad
addb
jbe
push
pushf
scas
in
cs
outsb
jae
out
jecxz
xchg
jno
stos
inc
shr
das
xor
dec
insl
pop
xchg
add
sub
out
bound
mov
sub
mov
jle
popa
dec
lods
fistpl
or
push
loopne
jae
outsl
jne
and
repz
cld
lea
sub
lds
arpl
inc
inc
xchg
ja
sbb
in
out
repnz
inc
add
loopne
push
sub
jnp
call
ficompl
push
mov
bound
mov
cld
mov
fcomps
sub
push
scas
jle
xchg
xor
mov
aaa
call
sub
mov
sar
jg
mov
jnp
nop
or
sti
int3
mov
ficoms
sahf
jb
mov
push
pop
int3
cmp
dec
insb
push
inc
scas
clc
out
pop
lea
addr16
sahf
fdivrp
jnp
push
push
int
or
push
and
xchg
lahf
push
jno
icebp
gs
pause
add
cmp
push
gs
ds
mov
push
andl
lods
mov
popa
push
push
cmp
adc
popa
mov
jecxz
jecxz
adc
imul
mov
push
aaa
sti
stc
testl
jmp
hlt
scas
loop
scas
ljmp
ficompl
sbb
push
pop
push
sahf
in
xchg
inc
or
popf
ljmp
and
pop
fwait
add
adc
fcmovbe
out
dec
das
lret
pusha
sub
pop
mov
and
fwait
ds
lret
sarb
pop
dec
loop
lret
stos
sbb
test
pushl
push
gs
adc
push
xor
xchg
dec
dec
cmp
jbe
mov
sahf
push
xor
test
fndisi(8087
scas
repz
mov
subl
cmp
mov
sub
int
cmp
in
stos
adc
stos
xor
outsb
in
int3
jmp
mov
cmpsb
sub
movsb
mov
rcrl
ljmp
addb
iret
jo
xchg
sahf
xchg
rorb
push
cmp
shl
es
lea
pop
cli
jmp
rcrb
and
and
hlt
repnz
aaa
pop
shll
xor
jns
xchg
jbe
movsb
mov
jnp
adc
xchg
rcrb
testl
mov
cmp
aas
mov
fldt
imul
scas
xchg
cmp
and
mov
or
jno
repz
sub
repnz
ljmp
inc
mov
add
movsl
push
call
lret
pop
dec
out
mov
push
xchg
into
inc
stos
test
jne
jge
inc
pop
mov
jns
lea
xor
in
shl
paddusb
sub
lret
jo
cld
mov
sbb
loop
cmp
andl
jmp
xchg
fisubl
xchg
scas
repz
ret
xlat
xlat
mov
fildll
fldt
cmp
xor
cmp
les
mov
fiaddl
pop
aas
mov
addr16
andnps
in
xor
dec
js
fisubl
ja
adc
mov
mov
jge
sbb
out
mov
ret
scas
mov
addl
fbstp
daa
pop
jmp
adc
jne
add
push
cwtl
in
inc
push
pop
into
sahf
mov
xchg
sarl
popf
and
fistpll
dec
jp
outsl
data16
dec
adc
pop
imul
nop
or
divb
mov
ret
pop
rclb
add
cmpl
iret
cwtl
aad
adc
rolb
cwtl
int3
lcall
pushf
pop
pop
xor
jecxz
or
pop
xchg
inc
loopw
cmpsb
ss
in
adc
lods
and
lahf
mov
stc
sbb
push
dec
mov
pop
and
int3
js
jb
rcrl
ss
jge
ficoml
test
lahf
pcmpgtw
or
mov
add
mov
leave
ja,pt
mov
pop
jle
in
out
xchg
gs
jnp
mul
or
popf
es
dec
hlt
fisubrs
jmp
movsb
je
rorl
lret
xor
adcb
cmpsb
out
jb
andb
sahf
pushf
mov
mov
add
xchg
in
mov
outsb
mov
pop
jecxz
mov
dec
inc
fucomp
stos
mov
mov
jne
lret
xchg
xchg
sbb
dec
imul
es
test
xchg
sbb
test
xchg
inc
scas
mov
clc
adc
mov
pop
aad
mov
jbe
mov
mov
cmp
hlt
test
ret
xchg
std
mov
mov
neg
aas
jnp
mov
jg
mov
das
lock
mov
mov
inc
mov
xchg
outsb
ret
ljmp
xor
cwtl
int
dec
int3
push
push
xchg
arpl
bound
test
sbb
bnd
test
cmp
rcr
mov
rolb
inc
test
aas
icebp
pop
imul
jbe
add
pop
sar
mov
add
std
mov
jecxz
mov
push
filds
sub
outsl
sti
xor
or
cmpsl
popf
or
lahf
int3
pop
loope
jnp
mov
aaa
xor
loopne
mov
jl
sbb
fistpll
jo
cld
test
push
cltd
xchg
call
push
adc
adc
lret
cli
and
pop
mov
pushf
xchg
cmpsb
sub
jmp
ss
test
adc
cli
add
loop
jg
leave
jno
movl
xor
cs
in
inc
icebp
fadds
xchg
sub
mov
outsl
sbb
or
pop
mov
fldcw
and
or
cli
pop
adc
xchg
pop
dec
push
mov
int
jne
bound
mov
jp
sahf
jp
jb
push
aad
aad
int
jo
fyl2x
divb
jge
rcl
loope
push
mov
cmp
pop
dec
adc
sbbl
cmp
loope
mov
xchg
aam
cld
add
xchg
rep
dec
dec
scas
cmp
shll
sahf
dec
sub
aas
xlat
ret
mov
les
push
imul
jmp
sub
dec
cld
push
or
pop
jecxz
inc
aad
fnstcw
les
jmp
das
stos
sub
lea
sti
outsl
lods
or
or
dec
les
dec
mov
and
adcb
imul
fdivrp
add
test
sbb
cld
scas
notl
push
mov
jne
sarl
movsl
out
sub
add
sub
xchg
add
icebp
xchg
lock
frstor
pop
xchg
pop
mov
xchg
aaa
fs
fisubl
push
pop
roll
mov
push
xor
jae
dec
mov
xchg
int3
adc
add
imul
leave
jmp
hlt
scas
xor
mov
push
cmp
mov
push
sbb
xor
repz
cmp
cmc
arpl
adc
and
or
inc
mov
sbb
outsl
push
mov
dec
scas
push
leave
popf
pop
cwtl
aam
lret
call
mov
and
pop
fcoms
lds
fwait
jp
or
jb
fstp
adc
cmp
fsubs
cmp
pusha
sbb
rorb
lods
fidivs
xchg
inc
jne
pushf
stos
fwait
jl
leave
fcmovnb
sub
fcomps
je
repz
sub
push
stc
push
jecxz
aam
sub
mov
push
mov
popf
xor
mov
sbb
cmp
jl
sbb
jmp
stos
xchg
cltd
clc
adc
dec
jg
icebp
pop
jo
dec
shl
or
dec
outsl
or
fstl
or
stos
outsl
sub
cs
mov
add
xor
cs
inc
hlt
mov
int
pop
mov
add
addr16
lcall
inc
dec
xchg
pop
les
and
mov
xchg
push
data16
stos
pop
rcr
das
insl
ja
pop
test
jnp
add
xlat
pusha
call
pop
lea
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
or
xchg
or
aam
or
and
add
xchg
or
jns
addr16
outsb
addr16
gs
