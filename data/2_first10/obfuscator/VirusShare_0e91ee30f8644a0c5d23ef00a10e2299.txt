call
in
add
cmp
cmp
cmp
sub
add
sub
imul
sub
add
mov
pand
adc
ret
shlb
pop
sub
push
or
add
mov
enter
adc
aaa
xrelease
sarl
cmp
movb
scas
insl
mov
or
leave
add
push
or
sti
mov
dec
pop
mov
mov
mov
outsl
sbb
sbb
daa
adc
imul
push
ljmp
add
mov
xor
cmp
add
sti
pushl
mov
out
jge
rorb
testb
call
inc
imul
or
mov
add
mov
insl
rorl
or
fmulp
fdivrl
leave
pop
or
divl
add
movsl
sbb
adc
mov
adc
mov
mov
adc
add
movzbl
add
mov
loop
outsl
test
dec
jecxz
cmp
inc
sub
sarl
or
or
add
filds
mov
decl
test
sub
add
fstpt
sbb
sbb
mov
sbb
into
sub
or
add
xchg
sbb
pop
push
add
adc
mov
js
rorl
or
and
ret
rclb
or
xor
mov
or
add
ret
pop
cld
and
mov
mov
pop
or
xchg
push
mov
dec
add
inc
roll
fmuls
nop
push
sub
push
or
test
adc
fmuls
icebp
lock
mov
lods
imul
and
sbb
lcall
jmp
mov
push
insl
dec
popf
shl
lock
imul
add
outsl
inc
push
sub
adc
add
fildl
or
add
pusha
sbb
cmp
ret
call
inc
insb
or
sub
add
pop
sarl
xor
pop
cmp
addr16
lcall
outsb
mov
mov
cmp
sbb
ss
jae
mov
push
mov
push
adc
cli
mov
insl
jecxz
add
adc
mov
mov
adc
mov
lods
sarb
sbb
jo
ficoml
ss
mov
add
shlb
jge
clc
adc
ret
mov
scas
push
push
into
leave
push
xchg
idivb
rorb
fistpll
pop
js
push
pop
dec
cmp
push
push
test
pop
xchg
int3
xchg
rolb
mov
adc
sbb
inc
xor
sbb
dec
mov
push
or
mov
mov
lcall
or
mov
lea
filds
lret
int
dec
cmpsb
push
jo
sbb
xor
or
lret
scas
jmp
push
push
repnz
rol
sbb
or
pop
sbb
cmp
or
insl
mov
xor
pop
pop
clc
idiv
push
sbb
incl
xor
add
adc
insl
pop
fwait
adc
cmp
xor
mov
mov
adc
sbb
sbb
and
faddl
movzwl
or
aam
adc
aaa
jmp
dec
mov
mov
mov
adc
int3
sbb
mov
sub
mov
jb
imul
or
add
pop
in
push
out
iret
inc
shll
sub
and
dec
xor
and
push
leave
ret
fisubrs
call
adc
xor
js
sbb
icebp
mov
sahf
sbb
ret
mov
pop
enter
xchg
sub
sahf
outsl
iret
addr16
scas
mov
and
xor
lcall
sbb
xchg
call
sbb
nop
or
add
sbb
sub
xor
fdivrp
push
incb
push
adc
cmpsb
mov
adc
test
adc
popa
fidivrs
mov
sub
bswap
imul
or
push
adc
dec
ljmp
xor
jmp
add
repz
cmp
jbe
add
ss
cli
adc
push
pop
xor
ja
imul
mov
into
scas
rorb
mov
lret
sbb
jecxz
icebp
arpl
mov
mov
or
cmp
jne
xchg
mov
mov
in
xor
lock
push
cmp
rcll
push
pop
out
mov
fildl
adc
lds
imul
insl
sub
pop
or
sbb
cmp
add
dec
mov
push
sub
bound
xorb
mov
les
nop
sahf
inc
jnp
cmp
sbb
inc
imul
sub
mov
rcl
sbb
shl
out
out
test
or
ljmp
mov
movhps
decb
ret
cld
test
insl
sbb
rcrb
mov
insl
pop
or
adc
in
or
jl
faddl
movsb
enter
adc
test
stos
sbb
and
push
add
mov
mov
pusha
sub
or
orl
imul
sbb
dec
sahf
add
insb
sbb
mov
mov
pop
movsb
ret
jnp
insl
xchg
mov
pusha
push
fildl
arpl
mov
cmc
mov
stc
adc
je
and
mov
xor
dec
lods
mov
xchg
js
sbb
add
or
notl
pop
push
shlb
insl
or
inc
add
xor
mov
ret
add
cmpsb
popf
popa
add
jge
or
pop
in
shl
and
ret
mov
rorb
outsb
clts
imul
add
or
sbb
jb
addr16
mov
sahf
jnp
inc
rcrl
sub
es
fsts
dec
pop
adc
das
adc
sbb
add
mov
push
adc
add
lock
lock
add
call
adc
imul
pop
in
pushf
sarl
lcall
sbb
add
mov
jae
pop
iret
sti
fs
fstpl
daa
mov
pop
hlt
and
inc
lock
push
ret
fstpl
out
sbb
adc
lret
pop
jo
add
scas
mov
cmp
fs
adc
push
imul
push
cmp
mov
bound
add
sbb
pop
es
lret
stc
add
mov
sbb
or
orb
sahf
and
lock
sar
mov
mov
or
mov
dec
je
rcrl
fiadds
or
inc
or
pop
ret
fcoms
push
push
push
or
push
fs
cwtl
mov
push
push
leave
lock
clc
push
bnd
mov
add
mov
sub
pushf
mov
movsb
sbb
mov
xor
aaa
mov
lock
jge
test
sbb
or
es
add
insb
das
add
outsl
inc
repz
inc
hlt
add
add
sub
in
xchg
sbb
sbb
cmp
stos
loopne
mov
cmpsb
ds
or
ffreep
sbb
cmpsb
push
sbb
stos
jno
sahf
or
ds
mov
pop
scas
mov
lock
push
add
fisttpll
mov
in
rcrl
sbb
fiaddl
in
cmp
or
divb
loope
dec
adc
mov
jbe
jmp
rcl
lock
add
jmp
mov
ret
xor
outsl
add
mov
das
mov
xor
testl
outsl
icebp
cmp
lock
and
sub
add
lcall
sbb
pop
insl
mov
fsubr
cmp
ss
repz
cs
push
lcall
mov
shll
xchg
rol
lea
inc
lods
aam
dec
addl
sbb
movsl
pop
call
fildll
int
adc
iret
push
mull
adcb
jns
subl
incb
lgs
xchg
sbb
cld
lods
or
jne
inc
sbb
jge
pop
mov
push
xchg
daa
faddl
jge
sbb
mov
push
mov
xchg
lret
data16
aas
and
mov
repnz
shlb
shll
je
ljmp
or
cwtl
and
adc
lds
push
cwtl
pushf
inc
lods
xor
jno
imul
fisttpl
movsl
or
mov
mov
shr
pop
dec
in
adc
ret
jb
dec
mov
add
mov
xor
jbe
mov
jmp
lea
insb
prefetch
inc
sbb
mov
inc
fildl
jo
sub
mov
insl
jnp
mov
inc
push
jb
scas
cs
or
imul
imulb
int
leave
push
repnz
lret
sub
cmp
addl
jae
mov
mov
jno
shl
pop
leave
xor
jns
test
xchg
lods
test
rorl
es
mov
cmc
jecxz
in
iret
inc
scas
cmp
les
call
mov
rorl
daa
out
aaa
sbb
mov
xor
jge
and
inc
insb
push
mov
mov
and
adc
test
lds
lods
hlt
test
xor
fsubr
mov
sbb
dec
or
xor
add
jo
clc
inc
jb
enter
mov
xor
icebp
add
jmp
or
insb
dec
adc
loop
ljmp
ret
add
push
add
dec
dec
sub
jo
ljmp
cmpsb
pop
in
in
add
loope
xchg
push
or
or
cmpsb
rclb
mov
shrb
inc
adc
call
and
dec
pop
cmpsb
or
or
push
mov
sarb
cmp
push
adc
es
lock
push
data16
lahf
cmc
fiaddl
pop
dec
pop
lock
je
or
push
or
add
ret
or
mov
and
lods
add
lock
cwtl
out
imul
repz
push
leave
push
or
xchg
inc
cmp
loop
stc
movsb
jg
push
jge
repnz
adc
mov
add
mov
push
cld
jle
adc
and
scas
push
push
std
or
pop
mov
ret
push
mov
and
inc
jecxz
rorb
sahf
into
cmc
rolb
or
cmpsl
cmc
push
add
xchg
mov
mov
sbb
aas
add
cmp
xor
movsb
inc
insb
mov
cmp
sbb
in
ss
push
push
add
dec
or
sub
pushaw
inc
push
stc
add
jns
fwait
dec
pop
ret
push
outsl
mov
sbb
mov
dec
adc
push
push
popa
and
addb
sbb
adc
mov
repnz
cmp
insb
or
or
das
push
out
popa
shrl
push
xchg
cltd
and
arpl
or
loope
mov
mov
add
mov
ljmp
cmp
mov
clc
mov
inc
ljmp
repz
xchg
xchg
pusha
xor
aas
push
and
mov
cvtps2pd
bound
mov
pop
insl
add
add
add
sbb
ss
fcomps
ret
push
inc
pusha
ja
rolb
pop
arpl
fwait
adc
dec
and
popf
lcall
push
icebp
jl
sub
xor
adc
jp
push
leave
sbb
adc
ret
pop
loopne
push
ljmp
lcall
inc
cld
push
roll
xor
insb
sbb
mov
push
jecxz
push
aad
mov
push
add
mov
fwait
sahf
sbb
inc
adc
test
xchg
adc
mov
xlat
push
add
shll
cmpsb
cmpsb
sub
outsb
shlb
jnp
into
mov
jbe
ss
mov
or
mov
mov
bound
js
pop
lea
mov
cltd
in
inc
adc
je
cmp
cmp
or
jl
push
xor
iret
add
das
imull
fisubl
dec
scas
testb
ss
inc
ret
xchg
mov
call
sbb
sti
gs
jo
cmp
and
xlat
and
ret
pop
push
sbb
cmp
pop
sub
jmp
push
xor
rorl
in
or
sbb
std
mov
push
add
push
or
mov
and
test
push
add
or
inc
fistpl
andb
rol
pop
jmp
int3
xchg
adc
test
push
cmp
stc
call
inc
cmp
push
inc
mov
leave
sub
add
xchg
ret
dec
pushf
or
pop
cltd
lods
daa
roll
sti
enter
aam
icebp
clc
dec
mov
loope
rolb
aam
loop
loope
cmp
add
lods
sbb
mov
add
mov
shrl
push
adc
adc
push
loope
xchg
or
roll
jo
jl
icebp
movsb
inc
lods
ret
push
sahf
shll
or
push
cli
lahf
fdivrs
xor
leave
push
push
push
andl
dec
sbb
or
cmp
cltd
pop
int
push
push
ret
adc
or
adc
jecxz
push
add
inc
inc
xlat
jo
xchg
add
xor
jo
addr16
pop
mov
je
push
push
mov
in
cmp
movsl
mov
or
adc
cmp
cmpsb
push
lock
jo
mov
inc
inc
cmp
dec
cld
enter
or
sbb
pop
loope
add
je
xchg
shlb
fs
clc
mov
out
pop
dec
xchg
push
leave
mov
sbb
and
push
or
bound
frstor
rcll
adc
aas
roll
pop
shrl
adc
dec
test
inc
std
ds
js
cmp
push
adc
or
repnz
mov
scas
movntps
push
shl
stos
insl
dec
sbb
add
jl
imul
popf
cmp
popf
sbb
cld
sarl
mov
fdivs
fadds
cld
shlb
dec
pcmpgtb
cmp
push
loope
add
ret
lea
cmp
sbb
add
ret
push
in
push
xchg
pop
pushf
loop
adc
push
mov
xchg
or
int3
and
sbb
xchg
push
aam
arpl
in
pop
mov
or
cmp
push
lcall
out
push
rorb
les
rorl
inc
sub
loope
scas
pop
or
pop
nop
js
subl
ficoml
ffreep
add
or
in
shrl
mov
test
pop
mov
push
leave
sbb
inc
xchg
or
or
push
nop
js
push
clc
push
popf
jmp
cli
mov
jo
mov
pop
xchg
push
sub
out
push
int3
inc
cmp
nop
fisubl
mov
and
fidivl
add
rclb
aad
fistpll
sti
imul
mov
and
repnz
sahf
push
xchg
xor
push
aam
imulb
in
add
int
sbb
push
mov
push
fiaddl
mov
or
add
add
push
pop
cmp
int
ds
jb
pop
or
xor
in
subb
mov
rcll
out
lock
xchg
mov
or
subl
test
ret
aas
insb
loopne
out
gs
adc
rorb
sbb
add
sbb
mov
sbb
push
add
pop
cmpsl
call
mov
mov
jmp
fisubl
inc
popa
adc
js
mov
and
sahf
mov
es
stos
icebp
xorl
insb
aam
mov
and
adc
orl
mov
jno
aam
jb
movd
push
ret
enter
push
dec
pusha
leave
dec
rolb
std
xor
js
sbb
insb
testb
ret
cwtl
lea
xor
jg
add
inc
xor
or
mov
or
dec
or
sbb
cmp
ret
jo
nop
or
dec
in
je
add
cmp
pop
mov
adc
lret
xor
mov
xchg
cmp
sub
and
add
xor
or
jne
movsb
mov
in
pop
or
fisubrs
mov
mov
sbb
test
mov
out
or
xor
jecxz
push
sub
gs
mov
lock
test
arpl
pushf
dec
enter
mov
jl
ret
andl
xchg
xchg
leave
lret
or
inc
cltd
cwtl
test
cli
push
and
push
paddsw
lret
clc
pop
and
call
mov
sbb
test
js
xor
mov
movsb
daa
divb
pop
push
xchg
cli
mov
cmp
fisubs
mov
push
mov
pop
pop
cs
rorb
push
xchg
inc
adc
sbb
push
stos
mov
rcrl
dec
jmp
mov
in
cmc
or
cwtl
lods
test
clc
adc
sub
dec
ret
cmpsb
or
insb
mov
sbb
jmp
add
cs
ss
sbb
ret
or
mov
adc
lock
mov
xchg
aam
add
adc
push
push
xor
add
inc
xchg
jp
cmpsb
mov
sub
nop
movb
pop
jno
sar
mov
scas
insl
out
lret
cs
xchg
push
or
add
out
sar
sti
inc
adc
ret
adc
lods
mov
push
adc
and
int3
je
or
jns
dec
cmp
idivb
shlb
xor
adcb
cwtl
je
lret
mov
lds
in
dec
imul
sbb
lret
cmp
mov
sbb
inc
mov
push
and
loope
xchg
aam
or
shlb
push
jmp
xchg
mov
mov
pop
mov
adc
add
inc
xchg
into
and
pop
pop
jne
out
icebp
push
cmp
sbbb
adc
pushf
shll
mov
es
or
xor
inc
mov
imul
sub
mov
push
cmp
outsb
push
repnz
jno
push
mov
pop
or
or
daa
rclb
fiaddl
jl
sbb
scas
mov
push
push
pop
jp
sub
jo
jmp
in
adc
xor
cltd
lret
xchg
jo
xchg
shrl
fmuls
sbb
rol
push
mov
or
pop
in
jg
pop
bound
cmc
adc
or
adc
jmp
and
adc
ret
pop
cmpsb
inc
imul
sub
pushf
test
imul
ss
sbb
sub
jmp
push
sbb
lret
push
inc
sub
mov
cmp
adc
xchg
mov
mov
cltd
leave
sub
sbb
rolb
add
aam
scas
shll
test
or
sbb
push
xor
imul
mov
sbb
xor
push
xchg
loope
movsl
psrld
sub
dec
push
gs
popa
adcl
mov
gs
xchg
push
adc
sub
rcrb
pop
jne
adc
lds
mov
icebp
push
lret
nop
fsubrs
rolb
or
fdiv
inc
xor
sahf
sub
rcrb
inc
add
pop
jnp
xor
dec
into
sbb
movsb
xchg
sbb
xchg
mov
inc
aaa
mov
mov
sub
test
les
cmp
sbb
inc
iret
push
lcall
pop
mov
or
adcb
mov
inc
sub
mov
ljmp
adc
pop
xchg
pop
fcoms
inc
and
insb
hlt
icebp
mov
push
outsb
jmp
gs
nop
mov
and
aaa
ret
push
loop
mov
pop
pop
cltd
iret
add
sbb
mov
out
cmc
sbb
jne
lea
cmpsl
push
push
test
mov
mov
or
sub
sub
shll
mov
mov
imul
clc
mov
dec
insl
mov
lods
cli
and
mov
ja
inc
or
repz
inc
mov
jge
mov
testb
add
pop
dec
mov
xchg
pop
mov
sbb
iret
ret
into
fwait
movsl
scas
shll
iret
add
add
call
sbb
mov
dec
xor
inc
into
push
movsl
mov
mov
loop
jmp
dec
mov
out
aad
lret
mov
iret
rolb
ss
out
adc
xchg
adc
jecxz
dec
mov
xor
sub
and
mov
and
xchg
int
jge
dec
cmpsb
jbe
xchg
mov
push
cmp
test
rcl
ficompl
jle
into
adc
or
sbb
dec
add
rorb
inc
test
push
add
loopne
or
xchg
mov
inc
xor
sbb
mov
stc
add
stos
push
cmp
add
roll
jb
fs
mov
xchg
pop
rol
cwtl
and
mov
inc
adc
rcl
or
mull
test
fidivrl
push
or
dec
scas
loopne
rclb
mov
lcall
bound
shll
push
inc
add
pop
je
or
mov
cmp
and
mov
test
nop
nop
and
sub
mov
push
sub
add
xor
lock
adc
shrb
jo
jp
xchg
sbb
popf
fistl
adc
or
dec
sub
mov
inc
insb
stos
jecxz
into
mov
je
fld
pop
push
jl
push
jp
iret
cmp
sub
imul
or
lea
testb
adc
push
int
sbb
ljmp
aad
call
ret
shlb
or
push
mov
and
fisubrl
push
cs
add
nop
push
shll
inc
ljmp
js
fsts
lea
aaa
fcomp
adc
loopne
adc
adc
jb
rcll
cli
push
or
sbb
inc
pop
mov
test
mov
sbb
shll
adc
and
sbb
andb
xor
sbb
pop
xchg
mov
scas
rclb
enter
sbb
cli
out
out
inc
push
cmp
add
cmc
or
cli
sub
inc
pop
push
push
cmp
xchg
dec
scas
mov
or
and
mulb
addr16
sub
aad
cmp
mov
add
mov
push
mov
addb
icebp
adc
xchg
mov
pusha
push
mov
pop
mull
or
push
movsl
adc
push
in
mov
xchg
fidivl
outsb
pop
repnz
push
pop
mov
add
out
cmpsl
test
lds
mov
cmp
sub
push
movsb
adc
dec
rorb
cmc
sbb
mov
ret
mov
sbb
ret
pop
leave
xor
ds
scas
jl
mov
leave
jle
rclb
pop
cmp
xchg
fisubs
pop
test
push
daa
ror
pop
movl
mov
out
xor
or
push
cs
dec
arpl
inc
stos
mov
mov
add
mov
stos
rol
xchg
scas
stos
sbb
xor
or
adc
sbbl
lods
push
add
push
les
or
ret
subb
scas
mov
pop
bound
cmp
movsb
shl
mov
push
and
pop
into
mov
mov
enter
or
xor
clc
pop
mov
lea
add
ret
pop
xor
jno
into
and
and
fucom
mov
leave
mov
mov
lds
enter
lcall
ret
inc
les
add
push
adcb
inc
push
dec
sub
sbb
sti
adc
inc
test
pop
dec
cmp
and
or
adc
push
mov
adc
jne
lock
rorb
lret
dec
lea
cmp
popf
ret
inc
jae
arpl
jecxz
push
cmp
mov
jno
out
push
or
pop
push
add
inc
add
inc
pop
cmpsl
stos
ss
sbb
rcrb
mov
cmp
or
mulb
sbb
js
pop
rcrl
out
popa
cmpsb
ror
lds
xor
add
inc
mov
xchg
out
pop
xor
push
cltd
lcall
mov
lods
dec
inc
adc
adc
jl
mov
sbb
inc
or
fistpl
cmp
lock
ja
sarl
jg
fs
mov
mov
icebp
xchg
pop
adc
mov
add
lock
ja
pop
shrl
push
outsl
ljmp
dec
out
call
lcall
sub
mov
push
jp
or
or
es
sbb
and
add
lods
clc
jb
mov
call
je
lods
cltd
repnz
push
jb
and
or
push
addl
fst
orb
out
aam
pop
bound
jae
fstps
pop
shlb
ret
add
fldl2t
sbb
sub
cmc
test
sub
push
push
mov
mov
inc
mov
imul
add
loopne
sbb
dec
leave
pop
roll
mov
or
and
or
js
aam
es
add
lcall
jb
sbb
or
dec
int
popa
ret
pop
xor
mov
test
and
pop
or
lock
cltd
mov
stc
and
sbb
aad
or
test
enter
and
rcrb
js
add
outsb
or
add
add
adc
push
imul
add
mov
pop
or
mov
mov
rcr
ss
loop
push
sbb
xchg
mov
stc
xor
loop
add
idivb
mov
sbb
ret
lcall
mov
or
sub
inc
dec
into
sub
xchg
add
or
mov
push
jne
mov
mov
mov
pop
mov
or
scas
nop
xor
or
pop
or
cmpsb
xchg
inc
inc
cmp
orb
fldl
insb
bound
loop
dec
ret
sub
call
xor
add
test
or
add
xor
rorl
lret
out
adc
dec
aam
enter
jmp
cmp
xchg
sbb
test
nop
or
aad
adc
loopne
pop
pushl
adc
lock
xchg
mov
or
and
add
push
xchg
adc
mov
loop
shrb
add
lock
int3
not
sbb
cli
pop
sahf
adc
test
rcl
stos
xchg
and
inc
sbb
or
ds
fcomip
and
push
xchg
push
scas
es
aam
cmp
enter
push
movb
sbb
ret
or
and
add
sub
js
xlat
shl
aad
push
sbb
pop
sbb
or
sbb
cmp
dec
insl
push
sub
and
sub
sbb
push
add
ljmp
rolb
roll
ret
lret
add
jno
mov
and
push
jmp
adc
push
push
and
rolb
push
cltd
push
mov
push
mov
clc
xchg
push
adc
jl
enter
inc
sub
mov
or
mov
out
xor
outsl
sbb
mov
lea
je
mov
push
in
and
push
ror
mov
or
add
adc
fsubl
sbb
adc
sbb
ret
inc
push
adc
testb
push
or
xor
jp
jb
inc
scas
out
or
sbb
test
pop
sub
aam
imulb
add
mov
mov
shrl
xchg
fs
pop
mov
adc
imul
es
rcll
or
mov
mov
xor
stos
inc
shr
push
xchg
clc
stos
push
aaa
jb
divb
dec
les
add
push
movsl
push
loopne
sbb
fimull
push
inc
outsl
ret
sub
ret
dec
sbb
mov
loop
push
shlb
sub
out
xor
add
push
push
mov
fstl
sbb
cmp
adcb
loopne
and
test
push
fisubs
stos
jp
add
push
testb
add
loope
scas
fidivrl
jge
push
sbb
xor
aad
mov
or
mov
sarl
jo
push
mov
dec
or
xlat
inc
test
mov
add
inc
pop
adc
xor
jno
cmp
icebp
cmc
test
xchg
rorb
addr16
jmp
sbb
mov
mov
dec
call
xchg
stos
scas
adc
pop
mov
std
and
or
lock
in
xor
in
test
or
mov
jle
sbb
dec
sub
pop
enter
and
enter
or
sbb
int
xchg
pusha
jae
insl
adc
xor
push
cmpsb
mov
xor
push
les
fcomip
andb
cmp
cwtl
dec
xchg
fwait
jb
adc
or
insb
incl
inc
test
inc
sub
call
loop
or
mov
mov
scas
cmp
add
sub
data16
xor
mov
loopne
out
cwtl
sbb
data16
mov
lsl
jge
dec
sbb
or
insb
enter
pop
into
lds
push
cmpsl
pop
into
cmp
jne
push
sbb
sarb
mov
inc
and
mov
subb
add
push
inc
movsb
test
push
mov
jne
cmp
sbb
inc
xchg
push
add
cmp
movsb
ret
adc
aad
or
popa
pop
adc
and
aad
cmpsb
add
aas
dec
aam
cwtl
cld
dec
cld
or
and
and
xchg
in
add
push
je
add
rcrl
andb
or
push
sub
addl
push
les
lea
sarl
js
mov
cmp
outsb
ljmp
ljmp
into
pop
out
jl
inc
scas
popa
sub
jae
rolb
aas
mov
test
gs
pop
cli
pop
mov
and
test
adc
popf
adc
add
xor
bound
add
add
fistl
je
add
lret
into
icebp
add
mov
inc
push
stc
int
sub
jbe
popf
mov
je
add
jg
call
push
or
sbbb
push
bound
pop
dec
pop
xchg
mov
mov
dec
push
and
jo
push
inc
rclb
mov
jmp
or
loope
clc
lret
adc
jo
push
cld
mov
add
cmp
sbb
xor
test
pop
mov
imul
and
sbb
adc
jb
push
or
pop
cs
inc
sub
push
push
es
inc
jp
fsts
aaa
roll
xchg
jnp
add
xchg
pop
inc
and
aad
in
mov
sub
lret
push
mov
sbb
ret
xchg
mov
and
mov
add
pusha
leave
inc
mov
dec
fwait
pop
cmpsb
lcall
dec
push
add
mov
loopne
push
inc
xchg
insl
mov
xchg
push
jb
ret
pop
decl
mov
jg
push
leave
mov
dec
push
adc
xchg
sbb
cs
rorb
notl
mov
sub
push
les
shlb
imulb
mov
aad
es
mov
lcall
or
sub
add
add
sub
mov
mov
or
mov
pop
adc
rorb
jecxz
sub
push
mov
movsl
inc
mov
rclb
cmp
inc
es
xchg
jl
test
rorl
xlat
inc
sub
nop
lock
sbb
sbbb
test
cmovb
push
or
int
movl
shl
ret
loope
push
mov
or
clc
aam
sbb
jns
or
mov
or
jecxz
mov
push
push
jno
adc
inc
sbb
push
dec
shrl
mov
cwtl
mov
add
and
sbb
push
lock
stos
rolb
xchg
mov
mov
sub
cmp
ficomps
int3
ret
mov
add
inc
add
ret
subb
pushf
inc
popa
inc
int
sub
sub
stc
sbb
push
ret
xor
sbb
add
leave
sbb
mov
loope
movzwl
sbb
cmp
je
push
repz
or
pop
push
test
adc
push
stos
xchg
pop
adc
jb
bound
sub
sahf
mov
mov
adc
ret
add
iret
in
std
mul
andb
adc
rorl
add
outsb
mov
mov
adc
pop
pop
arpl
mov
pop
sub
sbb
pop
call
icebp
or
rolb
inc
sub
cmp
xor
or
movsl
sbb
inc
mov
mov
or
push
xchg
loop
fsubs
adc
sbb
push
mov
xchg
das
lret
xchg
xchg
test
or
dec
sbb
xor
add
sbb
inc
push
std
enter
push
rclb
arpl
idiv
dec
icebp
xchg
mov
sbb
mov
sub
aad
mov
loop
pop
push
lds
mov
out
les
scas
mov
adc
cmpl
rclb
xchg
sbb
inc
movb
aad
push
pop
jmp
shl
imul
sbb
sub
sbb
cmpb
pop
sbb
mov
jp
inc
jo
imul
aad
je
sbb
inc
scas
rcll
sub
and
dec
icebp
sbbb
lock
fld
rorb
jle
popf
add
cltd
sbb
mov
dec
and
pop
out
test
lds
push
push
adc
push
daa
push
push
sub
sub
enter
sbb
push
or
das
adc
lods
or
jge
into
adc
or
popa
sbb
mov
int
push
sbb
xchg
push
xchg
or
xor
sti
pop
movsb
xchg
sbb
or
rcll
popf
fdivr
pop
loopne
pop
popa
stos
sbb
enter
neg
mov
in
scas
inc
sbb
mov
cmp
mov
punpckhdq
pop
or
xchg
pop
adc
push
xchg
push
sbb
jno
les
mov
or
test
es
test
jo
rcr
enter
push
es
add
mov
cwtl
push
mov
mov
or
dec
jp
test
jge
and
or
push
mov
mov
or
repnz
inc
cmp
jmp
add
pop
adc
mov
scas
mov
cld
add
aad
mov
or
push
add
fidivs
fsts
movsl
sbb
push
ljmp
lcall
mov
sarb
push
test
push
add
repnz
nop
ret
movlps
dec
adc
lods
or
sub
mov
loope
jmp
sub
dec
cmova
daa
imul
pop
xchg
insb
push
jg
sub
push
add
sbb
gs
repnz
add
jo
cmp
call
mov
out
pop
adc
add
ret
xchg
or
inc
sub
mov
mov
icebp
push
sbb
or
and
pop
enter
mov
sub
xchg
fadd
add
add
adc
sbb
mov
test
int
xchg
lds
scas
cmp
jmp
add
mov
insb
dec
in
inc
addr16
loope
shrb
gs
add
out
lahf
je
adc
shrl
or
mov
xchg
or
clc
lods
add
shrl
leave
inc
xlat
jecxz
cltd
movsl
bound
sar
gs
mov
ret
pop
or
sti
pop
cld
sbb
enter
push
adc
sbbl
adc
mov
inc
das
sti
sub
sub
loopne
adc
out
sbb
push
cmpsb
test
popa
push
mov
stos
imul
sbb
cltd
subb
fs
adcb
out
call
movsb
aam
fstpl
mov
inc
inc
xor
pop
inc
sub
push
xchg
sub
push
sub
add
vmovlps
xchg
mov
rcll
xor
popf
cmp
pop
add
sbb
test
roll
leave
test
out
push
sub
rcll
cmpsb
pop
shl
adc
pop
cwtl
sub
ljmp
dec
ret
mov
lock
jne
arpl
dec
cmp
push
push
push
addr16
loope
orl
sbb
add
xor
aas
or
or
in
sbb
inc
aad
bound
filds
scas
jbe
roll
mov
scas
jo
xchg
test
mov
mov
push
cs
fiaddl
sub
push
add
jp
sbb
test
sub
inc
pop
inc
and
imul
ret
jno
inc
xor
xchg
test
sub
mov
gs
enter
or
adc
pop
bound
cmp
in
adc
mov
add
ds
adc
sub
or
add
sbb
fmul
clc
or
jmp
addb
adc
adc
mov
cmp
add
test
push
sub
xchg
adc
pop
scas
ficomps
and
out
fs
push
fs
inc
inc
popf
inc
xchg
or
mov
add
or
mov
sub
sbb
push
pop
mov
xchg
push
cs
bound
sbb
orb
mov
scas
addb
rolb
push
inc
es
pusha
push
adc
push
adc
push
mov
shrb
pop
andl
or
outsl
shrl
add
dec
rcll
xchg
shrb
push
jno
cmpb
or
push
mov
lret
or
aam
hlt
add
mov
lret
jo
dec
push
ret
inc
lds
jecxz
rcll
pop
test
test
or
andl
mov
in
sbb
sbb
add
and
push
jnp
mov
push
push
and
in
inc
and
mov
dec
lock
popa
or
pop
in
and
or
add
mov
sbb
xor
pop
out
add
cltd
jbe
mov
data16
sbb
mov
mov
aam
xchg
xor
mov
call
and
cmpb
xlat
ret
mov
lret
mov
mov
xchg
aaa
mov
shlb
jg
adc
mov
jo
dec
adc
inc
scas
inc
xchg
or
mov
es
rolb
add
jle
pop
lods
mov
enter
xchg
bound
dec
lahf
insb
enter
add
lcall
and
inc
sub
les
test
icebp
or
ret
add
mov
adc
xchg
sub
mov
pop
fildl
test
ja
call
and
rcll
sbb
jae
push
lea
inc
test
xor
push
xor
push
sbb
lret
ja
pop
xor
push
lock
pop
xchg
and
inc
rcrl
push
adc
pop
xor
add
pop
test
sub
adc
adc
jge
lret
adc
ret
mov
adc
mov
clc
pusha
or
or
mov
inc
add
loop
adc
jne
cmp
das
pop
cmp
fs
ret
jmp
mov
rorb
vpmaxsb
cltd
cli
pop
movb
push
test
mov
lock
cli
and
push
xchg
jg
push
mov
lock
cli
stos
test
cmp
cmpsl
add
dec
sbb
stos
or
js
add
jae
push
adc
push
nop
xor
sbb
or
push
loop
in
inc
rcrl
mov
gs
shlb
lahf
mov
xchg
xor
inc
clc
popa
pop
rolb
rorb
shlb
mov
sub
mov
repz
push
adc
test
push
mov
add
xchg
sub
test
mov
mov
inc
testb
adc
or
movsb
pop
sbb
rclb
test
xor
cmpsb
loop
test
xor
test
fldt
mov
movsb
enter
jp
ud1
subb
stos
jnp
aas
or
add
push
mov
xchg
test
pop
pusha
or
mov
movsl
sub
lock
loope
fwait
mov
call
cmc
or
jmp
cmp
or
add
stc
mov
sub
sub
ret
push
pop
aam
pop
sbb
jle
aas
ret
mov
cli
push
or
testb
es
sub
push
mov
push
push
push
xor
loopne
add
inc
xchg
xchg
push
xor
mov
ss
xchg
push
push
jl
shll
fmull
fisubrl
push
mov
incb
pop
inc
divb
xor
fnstsw
pop
shrl
gs
loopne
adc
rcll
call
movsl
repnz
mov
mov
dec
or
mov
jbe
mov
and
add
or
push
stos
add
lahf
push
mov
imul
fdivrp
sbb
sbb
lret
shlb
cmp
xchg
sbb
cmp
and
add
xor
mov
xchg
sbb
xchg
shrb
icebp
ret
sbb
xor
lods
aad
insl
pop
adc
pop
pop
ss
test
jmp
push
sbb
add
shll
lcall
mov
pop
test
cmp
sbb
dec
das
repnz
add
and
pop
adc
insb
lret
gs
js
push
out
adc
cwtl
push
jecxz
ret
mov
in
insb
or
call
femms
add
test
popa
sub
insl
cmp
mov
test
jae
xchg
or
xor
mov
cmpsb
xchg
cwtl
or
in
add
add
cmc
gs
cmpsb
lcall
insl
adc
test
loop
or
inc
test
pop
xor
sub
enter
push
mov
xchg
xor
mov
xchg
or
dec
xor
adc
adcb
or
xchg
mov
add
add
mov
adc
xor
mov
xor
ljmp
rcl
popa
xor
ret
sbb
icebp
in
icebp
push
es
jb
stc
xchg
clc
push
stos
adc
cmp
and
push
push
push
mov
jo
mov
in
mov
jmp
leave
sahf
mov
shlb
loopne
sbb
fiadds
loop
and
pop
add
dec
divb
pop
movsb
sub
or
mov
add
xchg
adc
push
mov
or
test
adc
xor
or
jmp
push
out
fisubrs
and
mov
jb
mov
inc
sub
push
mov
call
and
xor
test
add
or
je
mov
insl
es
shrl
pusha
dec
inc
sbb
and
jne
clc
add
jmp
or
or
dec
mov
ss
add
std
fiaddl
push
push
push
dec
lea
push
test
cmp
rcl
push
scas
sbb
lcall
into
or
mov
adc
icebp
add
pop
or
testl
mov
lds
mov
mov
push
ljmp
push
pop
and
adc
sti
add
adc
push
dec
xchg
pop
dec
ret
xchg
decb
push
pop
loopne
mov
pop
orb
jo
jns
in
stos
and
jo
sbb
fdivrs
jmp
pop
sbb
sbb
add
stos
fadd
adc
jb
pop
roll
push
mov
call
notb
pop
cwtl
stc
insb
jo
push
loop
shl
cwtl
mov
pop
push
or
push
jmp
adc
fdivl
pop
inc
and
cwtl
dec
nop
ret
mov
stos
cmpsb
sbb
fldcw
sbb
ljmp
add
add
lret
dec
aad
push
sub
cmp
loopne
or
push
lods
xor
dec
mov
in
incb
inc
enter
cld
mov
sub
sahf
pop
pop
loopne
cmp
xor
leave
rolb
mov
add
xchg
jns
lcall
jb
sub
sub
fidivrs
add
sbb
fiadds
cmpsl
adc
cmp
scas
clc
add
push
push
sbb
je
cmpsb
sbb
or
sarl
sti
add
int
js
pop
sbb
lods
bound
xchg
call
pop
and
sbb
or
bound
addb
js
mov
popa
inc
xchg
jb
pop
push
xchg
cmp
sbb
sbb
push
fisubrl
jp
dec
or
jmp
inc
sub
mov
sarl
pop
add
rorb
push
insl
enter
in
or
dec
xchg
cmp
test
fisubl
and
add
add
push
pushf
sbb
add
inc
push
sbb
xor
lcall
adc
pusha
rolb
xchg
adc
daa
ja
push
in
and
push
test
rolb
sub
les
xlat
aam
int
inc
adc
sbb
aad
adc
and
adc
test
mov
mul
dec
adc
lret
ljmp
movsb
pop
popw
sbb
es
push
mov
sub
aas
lds
adc
adc
push
shl
mov
add
mov
ret
dec
dec
mov
cmp
scas
jb
cld
or
loope
inc
in
sub
adc
or
mov
mov
and
cmp
xchg
repz
in
imul
xchg
or
shll
sub
popa
and
xchg
inc
test
push
adc
lock
or
enter
adc
les
imul
mov
inc
cmpl
and
mov
mov
push
mov
daa
push
push
test
jne
xlat
out
loope
or
loop
cmp
or
cmpsb
int
and
sbb
jo
fwait
cmpsb
push
cmp
or
dec
adc
faddp
mov
pop
lds
aaa
and
or
adc
push
pop
adc
mov
sbb
fs
push
mov
push
cld
call
gs
sbb
push
call
lods
lret
inc
sub
pop
lds
dec
mov
pop
add
cmc
inc
add
imul
repnz
ret
adc
xchg
cmp
dec
sbb
xchg
inc
or
push
loop
xchg
addr16
add
nop
popa
mov
or
mov
iret
shll
pop
pop
cli
leave
inc
cmp
stos
call
cmpsb
sbb
push
or
lock
pusha
jno
in
xchg
mov
imul
lcall
lea
xchg
add
mov
movsl
call
inc
cmp
ret
sbb
sub
subb
insb
rol
jno
stos
add
adc
sub
pop
out
sub
lds
or
mov
inc
push
or
mov
mov
sbb
orl
lcall
push
jno
ss
icebp
xor
adc
adc
add
ret
sub
mov
fwait
stos
mov
cmp
popf
ss
notb
lock
sub
jl
or
dec
pmovmskb
roll
mov
push
push
fs
mov
clc
ret
mov
inc
or
pushf
mov
push
xor
sub
in
shlb
sahf
mov
insb
mov
sarb
or
adc
roll
push
insl
cmp
adc
mov
xchg
fwait
shlb
mov
mov
jecxz
push
insl
stc
lcall
add
movsl
cmpsl
lret
add
xorl
cmp
or
rcll
adc
add
sbb
push
mov
adc
scas
inc
mov
sbb
push
stos
add
xchg
add
push
push
or
mov
roll
inc
nop
out
push
gs
add
mov
inc
adc
dec
roll
cmp
mov
inc
pushf
mov
xchg
ljmp
movsl
adc
enter
add
xor
frstor
push
popf
rcll
pusha
test
xchg
or
inc
loopne
or
ficompl
out
mov
sub
sub
or
lret
stos
add
adc
push
lock
xor
adc
or
test
push
imull
sub
orb
adc
or
rol
test
xchg
fistl
mov
push
adc
lret
aas
sub
push
test
lret
int
cmp
cmp
add
sbb
filds
push
insb
stc
sbb
sbb
jl
sub
cmp
dec
scas
pop
mov
daa
aas
cmc
push
mov
push
jmp
fs
jno
pop
cmp
push
or
mov
popa
shl
and
push
and
int
jmp
cltd
les
push
test
movsl
xor
int
adc
test
pop
fwait
sbb
mov
add
jmp
and
dec
cmp
ret
scas
ljmp
push
pop
aas
lahf
adc
shll
push
loop
cmp
inc
dec
daa
and
cmp
in
push
cmp
pop
lds
pop
in
push
loop
icebp
dec
push
jb
sub
insb
jb
xchg
in
lods
pop
jo
adc
push
test
notb
add
not
testb
jo
addb
push
pop
sub
pop
outsb
ret
add
mov
sbb
mov
pop
add
cmpsb
push
dec
or
xorl
lret
mov
jne
in
inc
inc
ja
xchg
imul
sub
outsb
mov
lock
and
sub
or
ficomps
sbb
subl
pop
xor
cmp
xchg
in
add
test
push
movl
cltd
mov
inc
sahf
out
mov
dec
pop
lods
mov
push
lret
call
add
mov
dec
lods
add
xchg
add
in
dec
push
adc
inc
xchg
loope
stos
or
and
nop
dec
adc
add
cltd
adc
insl
sbb
mov
repz
xor
mov
les
mov
or
and
cmp
cmp
xorb
mov
jle
xor
add
cltd
aam
and
filds
and
andb
stos
inc
xchg
cmp
jo
hlt
adc
andb
xor
xor
and
inc
shll
pusha
add
test
mov
mov
adc
sbb
cmp
adc
lock
mov
jo
jb
daa
addr16
xchg
cmp
cmpl
mov
xchg
aad
dec
mov
pop
in
sbb
jle
loope
sbb
mov
adc
orb
je
sbb
sbb
rorb
and
mov
mov
or
jb
mov
pop
ret
mov
icebp
mov
xor
aad
outsb
adc
js
lods
dec
adc
imul
test
insb
mov
call
imul
clc
cmp
lret
ret
dec
and
out
push
sub
aad
adcb
mov
mov
adcw
and
stos
idiv
jl
loop
mov
addl
sub
push
push
mov
mov
push
daa
lock
or
push
dec
adc
cmp
pop
popf
mov
xor
lcall
and
adc
arpl
stos
rclb
lds
int
xchg
cmp
mov
dec
pop
mov
add
adc
inc
clc
ljmp
test
inc
test
rclb
inc
sub
gs
adc
push
sub
xchg
or
mov
rclb
rorl
push
xor
jns
adc
sahf
lcall
cmp
xorb
filds
and
push
cmpsl
loopne
or
sbb
push
or
sbb
loope
sub
sbb
addb
sbb
mov
inc
cli
sbb
inc
push
rcrb
jno
jae
iret
dec
inc
sbb
mov
xor
sarb
fbld
rorl
lret
insb
lods
and
mov
sub
inc
mov
scas
add
jg
adcb
mov
ret
inc
sbb
xchg
sbb
mov
xor
js
dec
cmc
test
mov
ljmp
or
push
shrb
mov
add
or
movsl
push
movsl
inc
cs
mov
pop
in
in
sub
daa
add
jb
mov
cmpsb
lock
subb
add
cmp
xchg
mov
push
dec
and
shlb
inc
or
push
shll
cltd
or
out
add
es
loop
cs
push
mov
dec
shr
add
push
inc
pop
push
and
add
daa
js
arpl
add
sbb
in
nop
es
mov
scas
pop
jne
push
sub
inc
incl
or
add
sub
adc
and
out
les
mov
mov
adc
fadd
mov
aad
dec
in
push
mov
js
add
push
jge
xchg
iret
jmp
dec
out
or
cmp
mov
and
popa
sub
xorb
pop
push
inc
sbb
push
iret
inc
call
add
jno
adc
scas
sbb
xor
jb
push
jp
push
xchg
cmp
push
shll
cmp
xor
sub
jp
jb
mov
cmp
lock
xchg
mov
pop
aad
adc
add
and
pusha
sub
xor
lock
add
mov
cmp
xor
pop
roll
ljmp
and
les
call
jb
mov
adc
pusha
lods
cmp
sub
cmp
js
add
adc
rol
into
and
cwtl
test
insb
sub
mov
add
add
in
push
and
fisttpll
push
orb
ret
pop
insb
inc
push
mov
ret
mov
pop
add
sub
mov
jns
jo
test
punpcklwd
xor
xor
add
or
movsb
pop
popl
add
ror
inc
jl
pop
in
sub
xchg
adc
dec
sti
fwait
enter
mov
adc
call
push
out
shlb
adc
push
in
fdiv
sub
pop
adc
push
add
test
cmp
call
fdivr
fwait
inc
mov
sarb
fisttpll
inc
scas
ljmp
in
push
rorl
cli
enter
push
push
push
test
jle
inc
sub
fistl
adc
rorl
push
pop
jo
add
sub
inc
movsl
outsl
test
insl
mov
inc
test
mov
clc
jmp
loopne
adc
cmp
dec
div
aad
push
sbb
andl
inc
rcl
sbb
sub
add
cmpsb
out
pop
cmp
in
std
adc
inc
push
call
or
setno
sub
orl
shr
push
cmpsl
adc
push
xor
xorb
sbb
out
pop
or
lock
jno
push
inc
loope
ret
inc
xchg
andl
jb
add
push
mov
fidivs
jns
pop
inc
mov
fsubl
xor
jmp
jne
inc
sub
pusha
and
adc
add
stos
push
icebp
inc
fstpl
and
push
add
sbb
cli
or
js
jmp
in
dec
aam
push
adc
add
movsb
sub
aam
rorb
push
pop
xchg
xor
arpl
call
xchg
dec
jg
and
or
int3
add
push
call
add
push
mov
shlb
rolb
inc
xchg
imul
insl
xor
std
mov
xor
ret
sub
sub
or
bsr
push
lcall
cmpsl
ljmp
insb
clc
mov
loope
or
enter
andl
sub
push
adc
mov
shll
pushf
shl
jo
ret
mov
push
add
je
mov
xor
or
insl
mov
mov
stc
pop
cmp
xchg
sub
sbb
xchg
mov
adc
or
mov
cld
outsl
mov
pop
ret
rorb
scas
sbb
pop
iret
nop
push
mov
dec
xor
lock
in
pop
subl
push
cmp
inc
xchg
or
popf
push
jne
cs
add
add
push
rorl
xor
jo
pop
insl
add
popa
inc
pop
fdiv
leave
shlb
pusha
sub
mov
mov
aam
jns
xchg
mov
sub
lock
sub
push
sub
mov
adc
add
inc
add
mov
or
data16
jb
jne
mov
sbb
adc
sbb
inc
popa
and
icebp
sarb
sbb
std
call
int
jmp
or
sub
outsb
cmp
lret
int3
and
adc
mov
or
pop
mov
lcall
adc
call
sub
mov
inc
sbb
enter
push
sbb
loope
xchg
rclb
sbb
cli
or
adc
cmpsb
mov
xor
adc
cmp
push
push
pop
sub
push
cwtl
add
pop
clc
xor
xlat
test
stos
jo
cmpsl
dec
mov
lss
or
push
dec
cmc
les
cltd
ljmp
lods
sbbl
hlt
rcrl
jne
pop
in
adc
pop
pop
sbb
mov
leave
add
push
mov
push
test
rcrl
push
fcomps
push
int3
test
gs
xor
or
adc
test
jp
adc
inc
test
adc
stos
shrl
rcrb
pop
mov
inc
repnz
pop
inc
int
leave
test
lock
cs
sbb
subl
scas
and
sub
inc
prefetcht0
gs
cli
jmp
or
popf
push
repnz
inc
or
adc
jo
cmp
mov
xor
lea
pop
loopne
inc
fs
add
cmpsb
add
icebp
mov
cmp
icebp
pop
pop
cmovo
xchg
sarl
sub
cs
rcll
cli
imul
leave
scas
inc
push
or
shl
add
pusha
jb
cmp
insl
icebp
jge
orb
cmp
push
in
cmp
pmuludq
xor
shrl
pop
in
and
or
sbb
addr16
sub
mov
les
jb
insb
pop
push
ret
enter
add
mov
add
inc
xor
sub
pop
pop
push
cmpl
xchg
daa
xchg
pop
lods
adc
pop
push
cmpsl
mov
sub
inc
xor
shrl
inc
or
xor
clc
mov
test
icebp
test
sbb
sub
jp
daa
sub
dec
xor
mov
std
rclb
aam
or
jecxz
push
lods
ret
dec
pop
mov
pop
sti
lret
out
in
imul
push
test
aad
and
rorb
test
repnz
or
leave
flds
mov
lods
or
xor
xor
lds
cmp
sbb
sub
roll
jbe
jmp
ss
mov
add
outsb
cmpsb
addb
or
pop
aam
cmpsb
ret
inc
in
nopl
jle
or
test
test
pslld
into
push
insl
pop
dec
outsb
mov
test
bound
xchg
fcmovb
sbb
adc
dec
cmp
add
loope
scas
test
or
add
test
mov
and
push
sahf
dec
jb
cwtl
xchg
shrl
mov
inc
scas
xchg
xchg
xor
inc
jo
pop
adcb
into
ds
test
rcrb
jmp
push
pushf
mov
cmp
aad
or
enter
aad
rorl
shlb
lods
xchg
sub
arpl
andb
add
divb
cli
sub
lock
xchg
ret
adc
xor
fs
mov
add
inc
cmp
sub
sub
mov
popa
sbbb
sub
mov
aas
dec
adc
mov
inc
stos
or
faddl
mov
add
fadd
xor
in
movsl
mov
fdivrl
pop
shrl
adc
inc
dec
sbb
fiaddl
andb
mov
mov
push
pop
pop
sbb
and
arpl
mov
lock
mov
pop
adc
jo
and
add
pop
imul
sub
inc
imul
aas
aas
push
lahf
movsl
pop
inc
sub
or
outsl
inc
scas
sahf
lcall
test
rcr
xor
push
xlat
jecxz
pop
aad
rorb
and
add
adc
cmp
add
insl
es
mov
dec
sbb
inc
mov
sbb
or
fcomps
int3
leave
lret
mov
and
pusha
sub
arpl
push
push
out
sbb
mov
dec
mov
insl
mov
push
xchg
hlt
pop
sbb
ja
jb
xchg
xchg
xor
push
push
sub
rdmsr
in
push
xorb
adc
insl
clc
sub
pop
mov
ja
lock
jge
push
push
push
adc
and
push
jb
inc
ror
xor
shll
inc
mov
sub
adc
or
and
insb
xchg
dec
movsl
orb
jmp
sbb
mov
cmp
sahf
subl
test
mov
xor
add
jmp
or
call
mov
in
xor
pop
jge
cmovge
push
js
adc
shlb
push
mov
icebp
cmp
mov
or
mov
inc
push
or
push
icebp
inc
inc
and
push
call
out
add
mov
mov
push
pusha
pop
sbb
jb
and
push
ret
data16
jmp
sbb
push
adc
dec
jns
pop
lock
or
adc
loop
mov
rcll
cltd
orl
sbb
dec
notl
ja
rol
push
shrl
rcl
mov
rorl
test
shl
sbb
or
sarb
xchg
cmp
cmp
je
jo
adc
mov
and
inc
xchg
push
and
aam
xor
stc
pop
lods
xor
push
insl
outsb
jle
mov
mov
mov
mov
pop
push
or
xor
push
into
push
sbb
imul
mov
mov
xor
lods
jp
loop
mov
jne
mov
add
pop
addr16
sarb
lret
dec
add
mov
add
and
test
inc
mov
sub
fcom
xchg
test
inc
in
cmp
scas
jbe
sbb
jae
jp
idivl
jle
mov
inc
test
push
test
xor
xchg
add
rolb
add
lea
add
mov
or
into
push
push
sbb
ret
jb
dec
inc
pop
add
adc
cmp
std
add
push
aad
mov
and
inc
add
dec
lea
push
cmp
mov
daa
imul
mov
loope
push
int
loopne
sub
orb
pop
inc
movsb
push
jbe
inc
in
inc
mov
aad
adc
push
push
push
mov
ret
and
or
sub
addl
out
aaa
fdiv
add
xchg
push
pop
xchg
pop
push
ret
call
ret
sbbb
or
aad
gs
orb
out
mov
stos
push
sbb
jnp
add
jo
mov
dec
xchg
mov
inc
mov
leave
je
sbb
dec
push
sub
fistps
inc
imul
cmp
sbb
inc
scas
push
fstl
movb
call
adc
jmp
xor
movl
cld
adc
mov
pop
into
mov
jo
mov
xchg
add
mov
cmp
dec
add
cmp
sar
data16
je
inc
ja
mov
mov
mov
adc
flds
test
mov
jg
mov
sub
mov
stos
adc
negb
adc
call
adc
js
xor
addr16
pusha
lcall
wrmsr
xor
ret
mulb
aaa
jle
mov
mov
push
lahf
sti
rorb
sbb
mov
push
subl
icebp
add
cmp
and
mov
mov
push
lods
ret
mov
divb
sbb
mov
sarb
fildl
lds
push
pusha
loop
mov
lcall
aad
cmpsl
arpl
lcall
xchg
mov
inc
push
sbb
or
orb
and
movsb
xor
push
pop
and
andb
in
lea
in
lea
jbe
arpl
add
xor
sbb
and
pop
fcomps
and
push
out
push
test
inc
adc
sub
call
jl
pmaddwd
xor
xchg
lcall
mov
mov
mov
ljmp
push
mov
dec
jmp
inc
xchg
sbb
sbbb
sub
inc
xor
adc
or
sbb
push
imul
dec
ljmp
cmp
cmp
roll
sub
push
push
adc
or
mov
adc
ljmp
adc
shl
into
adc
pmuludq
and
xchg
add
push
sub
mov
inc
or
int
jo
shl
test
inc
pop
xchg
or
xor
mov
ljmp
enter
aad
mov
call
sti
les
fcom
cmp
pop
mov
sbb
mov
push
pop
sub
add
imul
sbbb
pop
mov
adc
leave
push
inc
push
xchg
adc
xor
pop
dec
lret
inc
add
push
das
subb
pop
pop
dec
fs
loope
loopne
adc
mov
xchg
pop
jl
sti
das
js
sbb
dec
aas
add
mov
lahf
lds
bound
or
in
ret
stos
out
insb
dec
test
mov
icebp
and
add
add
inc
stos
xchg
ss
push
push
orb
sbb
lret
enter
sub
bound
sub
lods
push
or
stos
in
push
sti
sub
mov
cmp
movsb
sub
cmp
dec
cmp
movsl
int3
popf
adc
push
shlb
add
sub
sub
sub
sahf
insb
sbb
xchg
inc
stos
push
imulb
lods
adc
or
inc
ret
push
mov
sbb
into
adc
test
enter
fiaddl
sbb
dec
rclb
ljmp
sbb
inc
mov
add
push
xor
aam
sbb
movsb
mov
dec
xor
push
add
cmc
adc
jbe
or
push
add
add
insb
adc
sbb
add
sbb
cmp
out
or
jne
push
add
test
shll
push
xchg
add
mov
jo
push
rcrl
test
or
aam
das
jl
mov
cmp
leave
xor
rclb
sbb
inc
sbb
stos
push
adc
pop
or
mov
add
or
adc
imul
mov
add
ret
sbb
mov
and
xchg
adc
iret
push
data16
sub
adc
mov
clc
rol
inc
mov
mov
pop
lods
and
cmp
shlb
push
mov
cmp
add
push
mov
jl
daa
cmpsl
xchg
xchg
mov
nop
adc
add
mov
sbbl
lret
out
sbb
mov
mov
addr16
and
xchg
pusha
lret
push
sbb
out
mov
clc
scas
pop
lret
ljmp
clc
sub
call
inc
inc
or
or
out
popf
sub
es
sbb
sub
mov
jo
sub
mov
and
jnp
push
iret
inc
or
sbb
add
adc
mov
jp
pusha
xlat
repz
xor
add
push
sbb
and
add
add
movsl
loopne
inc
adc
xor
jo
rcll
xchg
insb
sbb
jecxz
jp
sub
xor
stc
and
int
js
out
ss
cmp
sbb
pop
xchg
sub
pop
cmp
pusha
mov
sbb
and
out
push
mov
push
mov
mov
mov
and
sbb
or
ljmp
ret
or
mov
ror
mov
or
stos
or
push
jecxz
sbb
add
xor
cmp
aam
adc
ror
enter
jp
sub
sub
shrb
jle
add
sbb
push
xchg
and
popa
sbb
push
jmp
or
xor
push
adc
push
or
sti
and
cmp
mov
and
mov
mov
call
icebp
push
pop
fisttpl
enter
xor
loop
or
out
push
and
xchg
out
ret
sbb
push
jle
mov
mov
rol
popa
or
cmp
jno
jl
shl
lods
or
sbbb
dec
sub
xchg
push
mov
mov
add
xor
mov
push
bound
push
or
pop
stos
xchg
add
fmull
mov
inc
ret
outsb
push
test
in
add
fadds
sub
push
push
subl
pushf
shrl
sub
lock
popa
ret
add
or
cli
loope
or
sbb
test
rorl
movsl
bound
add
add
mov
jb
fstpt
or
bound
addr16
imul
add
popf
out
or
sbb
add
mov
pop
stos
and
adc
mov
je
daa
mov
jl
inc
dec
push
or
adc
push
adc
int
adc
inc
sbb
push
bound
sub
pushf
push
push
xor
add
sbb
or
xor
adc
mov
stos
pop
xchg
in
test
mov
dec
push
or
insl
leave
sub
xchg
add
sahf
leave
rorb
or
mov
std
repz
sub
adc
sub
je
mov
pop
les
push
bound
cwtl
lods
sub
lock
insb
into
loope
xchg
stos
mov
xchg
mov
xchg
push
cs
es
sbb
fmull
icebp
push
push
sti
sbb
cltd
in
sbb
xor
cs
out
ret
sbbb
test
dec
loope
dec
add
xor
mov
push
ljmp
push
out
or
or
rcr
inc
nop
add
test
adc
data16
or
jns
loope
mov
call
cmp
mov
mov
daa
xor
push
test
pusha
aam
inc
mov
push
mov
xchg
bound
mov
adc
mov
inc
dec
divl
or
pop
stos
out
scas
inc
cltd
jge
inc
mov
pop
sub
inc
jmp
inc
jo
rolb
orl
mov
shlb
sbb
adc
ret
sub
outsb
into
ret
lock
dec
out
push
xchg
lods
les
dec
or
pop
mov
loopne
scas
mov
and
sahf
sub
or
dec
mov
dec
fldenv
xor
and
fadd
add
or
ficoml
add
sbb
adc
stos
rolb
rclb
adc
xor
inc
filds
push
repnz
inc
addr16
adc
adc
movsl
ret
subl
lcall
pushf
insb
lock
cmc
push
xor
in
xchg
add
sbb
mov
enter
xchg
imul
adc
enter
lret
ds
testb
into
test
sbb
stos
icebp
inc
and
xor
mov
into
mov
jae
scas
subb
call
call
inc
sbb
rclb
jg
adc
cltd
push
inc
pop
popa
lret
dec
adc
adc
mov
stc
filds
jl
subl
mov
pop
jl
dec
lods
add
push
mov
dec
mov
or
loop
or
ljmp
rcrb
ja
adc
aas
and
adc
push
xor
xor
rcll
inc
test
sbb
mov
or
enter
mov
pop
sbb
nop
dec
pushf
xchg
push
xchg
test
stos
aaa
jp
xchg
movb
mov
and
inc
sar
lock
es
adc
inc
lea
js,pt
rcl
popa
data16
pop
or
inc
adc
addb
sbb
repnz
push
out
pop
push
cmp
lahf
lea
and
into
rorb
push
hlt
loope
mov
or
sbb
ret
xchg
push
scas
dec
inc
enter
aam
sbb
ret
cmp
mov
inc
or
enter
dec
add
test
iret
add
lods
adc
fistl
lcall
sub
cmp
jo
adc
push
push
shll
aad
add
inc
xlat
sub
sub
or
cmp
icebp
cmpb
inc
push
inc
sub
stos
push
dec
sarb
clc
xchg
clc
mov
push
mov
mov
ljmp
add
dec
mov
cli
rol
rcl
cs
sbb
cmpl
inc
movsb
dec
sbb
adc
inc
xchg
ret
inc
inc
mov
leave
push
push
mov
xor
mov
push
sbbb
push
inc
and
push
setno
les
test
push
pop
pop
test
or
jne
in
mov
or
insl
adc
jae
rorb
pop
cmpsb
cmp
push
jo
or
shlb
mov
mov
push
and
ljmp
cmp
push
add
into
fadds
mov
in
mov
es
ret
in
sbbb
or
inc
sub
inc
lds
cmp
inc
fildl
and
add
cmp
add
adc
jmp
cmp
xchg
bts
push
aam
sarb
fld
in
dec
pusha
mov
mov
les
inc
xor
xor
or
in
xor
mov
and
pop
sbb
sbb
add
lcall
popf
addb
mov
insl
cmp
or
movb
jl
sbb
in
pop
jno
subl
xchg
cmp
or
push
adcl
pop
push
pusha
and
insl
test
sub
cltd
or
mov
insl
orb
icebp
push
imul
cmp
xchg
adc
xor
sub
rorl
push
inc
cmpsl
fdivrp
clc
das
mov
or
push
push
jnp
pop
mov
rorb
sub
jne
pop
adc
mov
push
push
pop
add
insb
cmp
inc
shll
inc
sbb
adc
push
xchg
testl
mov
in
lret
mov
lds
xlat
in
sub
and
sub
js
sbb
fstpt
push
xor
cmpl
mov
xlat
inc
jbe
fwait
cmp
rclb
xchg
stos
insl
adc
jp
mov
push
notb
mov
pop
push
insl
and
lea
adc
cmp
mov
jo
ret
jo
xchg
add
add
push
sbb
dec
lea
xor
or
inc
push
push
imul
leave
mov
mov
inc
adc
or
nop
and
rcll
pop
pop
mov
mulb
xor
adc
loop
sarb
pusha
insl
pop
dec
test
jl
ficoml
rcrb
pop
mov
test
js
xor
sbb
aaa
push
pusha
jnp
lods
adc
jo
out
cwtl
lea
pop
sbb
or
and
add
adc
or
les
mov
sub
adc
or
mov
adc
test
push
cmp
or
cmp
inc
iret
test
add
mov
stos
test
mov
add
push
pop
xorl
push
push
jo
and
mov
ret
mov
inc
xor
leave
test
in
cmc
stos
mov
adc
pop
cmp
aad
push
mov
daa
push
insb
dec
push
cs
loop
inc
xchg
sbb
shll
sub
dec
sahf
mov
popa
arpl
cmp
mov
aam
mov
dec
cld
ss
push
daa
pop
pusha
lock
pop
inc
inc
and
in
inc
push
push
sub
adc
cmp
in
sbb
orb
stos
push
push
lods
xlat
sbb
cli
out
inc
push
and
shlb
push
and
dec
sub
xchg
ss
orl
or
add
adc
adc
hlt
xor
nop
rclb
and
xchg
adc
push
xor
in
mov
or
xchg
stos
jp
jne
sub
movsl
sbb
push
mov
and
shrl
enter
jb
add
or
sub
add
outsb
push
cs
aad
sub
or
mov
push
pusha
mov
out
inc
or
xor
movsl
push
bound
push
mov
or
push
outsb
lea
sbb
sbb
ret
cmp
fcoms
pop
les
xor
push
loop
es
adc
test
xchg
adc
xchg
sbb
unpckhps
test
rolb
cwtl
pop
je
adc
xor
or
lea
outsl
jb
pop
sub
push
pop
adc
scas
jb
dec
push
cmp
aaa
pop
pop
loope
call
xchg
rcrl
jmp
lods
shrb
dec
adc
mov
cmp
mov
stos
or
adc
dec
push
push
adc
sub
inc
punpcklbw
popa
and
sub
scas
stos
inc
sbb
xor
pusha
mov
mov
inc
pop
fwait
shrb
xchg
jp
sbb
mov
push
jo
pusha
add
inc
or
cwtl
js
sbb
pop
xchg
xor
jmp
cs
push
gs
sbb
sarb
xor
fcmovnbe
adc
adc
ret
jb
add
scas
jno
inc
xchg
pop
cmp
sbb
or
scas
setl
jb
xor
lods
push
adc
sbb
pushf
pop
adc
cmp
pusha
pop
rclb
subb
lock
or
dec
xchg
adc
or
mov
pop
pusha
sub
mov
adc
shrb
in
mov
ret
popa
and
push
in
sbb
sbb
sbb
push
sub
dec
clc
push
popf
mov
adc
imull
inc
je
shlb
stos
test
andl
adc
mov
sub
orb
mov
push
fistl
cmpsb
xchg
shrl
cs
add
mov
sub
inc
inc
enter
xchg
xlat
leave
inc
inc
shll
xor
sub
sub
cmp
imul
cwtl
and
push
aas
and
add
aaa
or
adc
mov
stos
push
pop
sbb
sti
les
dec
lock
pop
inc
movsb
loop
sti
cmpsb
inc
pop
mov
pop
or
jno
add
push
fdiv
add
pop
insb
xchg
pop
scas
xor
or
leave
xor
mov
inc
test
cli
xchg
gs
adcb
pop
rclb
rolb
test
lret
pop
jl
enter
mov
add
and
addl
pop
push
xor
js
xchg
cmp
ficoml
cmp
mov
cmp
cmp
subb
sub
nop
and
pop
and
dec
call
bound
push
and
fidivs
mov
mov
setno
inc
sbb
push
fisubs
mov
arpl
or
ret
xchg
add
xchg
in
adc
int
push
sub
jmp
xor
insb
shrb
pop
push
addr16
xor
ret
mov
je
roll
mov
cmc
sbb
mov
mov
sbb
enter
pop
ds
test
add
xor
xor
inc
mov
push
rcrl
test
mov
lock
cmp
shll
adc
out
sub
stc
cmp
mov
jne
or
mov
push
ss
xchg
or
mov
push
jo
push
nop
aas
test
sub
sbb
mov
lret
inc
jecxz
movsb
in
jl
jne
jo
dec
xchg
ret
mov
push
and
daa
and
fistps
inc
sbb
or
cmc
add
enter
sub
and
shl
or
add
adc
mov
in
xchg
aad
add
int
add
push
cmp
repnz
loope
rcrb
sbb
in
shlb
cmp
cmc
sti
mov
pop
mov
call
jmp
push
cmp
push
imull
andl
add
mov
add
add
loope
popa
jo
cmp
aad
push
add
and
shl
rcrl
push
inc
rcr
cltd
fmuls
negb
mov
shll
mov
inc
push
pop
add
adc
xor
in
lock
pop
jnp
sbb
xor
rcrl
sbb
les
dec
push
cltd
adc
mov
divb
jp
in
push
js
mov
mov
or
dec
push
insb
add
shll
inc
out
and
add
jns
mov
push
dec
jmp
adc
mov
aad
push
adc
sahf
shl
xchg
dec
pushl
jp
inc
sbb
aad
add
stc
push
test
sbb
sbb
mov
jl
push
add
push
inc
and
jae
stc
jle
inc
das
test
jmp
shlb
in
sbb
inc
inc
test
inc
mov
loop
mov
push
imull
push
adc
in
or
gs
ljmp
mov
mov
add
test
sbb
repz
or
or
leave
adc
push
push
mov
je
repnz
add
xchg
pop
adc
aas
aas
mov
loope
lret
push
mov
jp
es
mov
pop
adc
lret
scas
leave
addb
ret
jmp
mov
mov
mov
push
ret
push
shr
cmp
and
shlb
adc
push
aam
aad
lock
push
sbb
adc
cltd
push
xchg
out
jl
mov
and
add
pop
ja
jge
mov
data16
sub
test
mov
or
popf
xor
pop
nop
jecxz
movsl
mov
lods
testb
pop
push
inc
cmpl
arpl
sub
movsb
mov
loopne
push
mov
dec
sbb
sbb
roll
push
adc
cmp
das
pop
inc
out
ror
imul
push
lret
add
sbb
xor
cmp
lds
lds
js
sbb
outsl
inc
popa
stos
adc
or
jle
or
mov
je
pop
inc
and
dec
sbb
mov
pop
fwait
add
loop,pn
stos
add
push
add
aad
and
and
sub
jb
sbb
fcompl
ja
cmp
pop
mov
mov
dec
mov
xchg
sub
jo
or
sub
sub
cmp
xor
pushf
dec
sbb
xlat
sub
jmp
pop
mov
jae
add
pop
adc
rcll
xor
das
loopne
mov
jmp
lods
xchg
into
movsl
and
push
or
adc
mov
subb
ret
and
inc
mov
jno
xchg
cmp
or
xor
insb
sub
mov
daa
adc
adc
xlat
adc
dec
sbb
loope
test
sub
and
mull
add
xor
outsl
subl
pop
pop
xorb
sbb
movsb
add
mov
mov
mov
sbb
and
push
mov
test
pop
mov
and
insl
loopne
xor
push
fcomp
bound
push
shlb
rorb
push
insl
or
adc
add
push
icebp
or
xor
lret
ljmp
push
cmpsb
push
add
push
inc
mov
sbb
cmp
or
pusha
addl
mov
lods
xchg
jae
xchg
lods
lret
push
push
and
icebp
push
and
xchg
mov
pop
inc
add
rorl
push
cmpsb
test
and
push
vmwrite
push
mov
mov
orl
idivb
cmp
sub
adc
dec
test
inc
int
or
test
xlat
mov
and
shrb
add
ss
mov
roll
and
mov
mov
call
sbb
add
popf
push
pusha
mov
push
sbb
sahf
mov
stc
add
inc
cs
sbb
rclb
dec
cmpsb
sub
shl
jmp
mov
pop
pop
sub
das
enter
sbb
insb
inc
roll
fisttps
pusha
and
dec
adc
or
enter
and
add
xor
pop
inc
outsl
fiadds
jns
roll
sbb
jo
sbb
add
mov
push
icebp
dec
rcpps
stos
dec
or
pop
das
and
jecxz
mov
xor
add
out
sbb
mov
stos
mov
push
mov
cmp
mov
addr16
adc
or
xorb
cmpsb
or
jmp
xchg
mov
jg
add
push
mov
mov
xchg
adc
xchg
loope
xchg
xor
sarl
adc
pop
or
jp
adc
or
adc
cltd
jb
add
lock
push
mov
push
inc
cmpsl
pop
adc
mov
imul
pop
rclb
and
fwait
add
sbb
mov
mov
ja
adc
cmp
test
sbb
and
add
add
mov
cmp
lds
or
mov
add
mov
mov
jp
cmp
in
inc
or
or
negb
shll
or
adc
inc
sbb
xchg
pop
dec
jp
push
ss
lcall
scas
popa
and
add
add
cltd
lock
sbb
in
adc
push
rorl
pop
rclb
pop
xor
push
or
mov
rorb
sub
rorl
cmp
cmp
and
ret
imul
aam
mov
pop
popa
aad
ljmp
sbb
pop
or
jo
stos
push
std
jb
cmc
inc
cmc
rorb
fmull
fildll
enter
ret
jne
add
jne
add
xlat
daa
pop
mov
xor
xchg
rsm
sub
mov
mov
in
push
mov
xlat
sub
mov
mov
mov
call
insl
cmp
imul
xorl
xchg
stc
add
push
xchg
sub
loopne
push
call
mov
sub
dec
jne
cmpsl
sub
inc
shll
pushf
pop
sbb
xor
ret
addl
sub
and
xor
js
mov
nop
or
jg
sbb
sbb
or
pop
push
lcall
les
push
mov
and
dec
movups
ret
push
rolb
sarb
push
xor
sbb
dec
ret
push
rolb
push
mov
test
add
jo
mov
dec
pop
push
enter
sub
adc
js
je
scas
loopne
push
sub
test
lock
hlt
push
push
dec
lea
roll
pop
insl
jne
or
adc
mov
mov
aam
mov
sbb
outsl
push
push
test
enter
scas
or
dec
adc
adcl
pop
mov
push
dec
push
addb
push
inc
push
ret
ret
rcr
cwtl
dec
in
sub
sbb
add
pop
mov
sub
call
add
sbb
sahf
sub
into
lock
push
xor
xor
mov
inc
add
or
insl
shr
push
xor
pop
fsubrl
adc
pop
int
sbb
sub
and
mov
sbb
sti
sub
add
push
dec
jecxz
dec
sbb
ja
aaa
push
daa
clc
push
adc
rolb
fstl
or
inc
sysexit
sbb
imul
scas
sub
pop
lock
push
ljmp
hlt
add
enter
push
mov
lock
leave
test
cltd
cmp
adc
aam
das
movsb
dec
in
push
ret
inc
dec
loop
sbb
inc
stos
push
sbb
and
or
mov
cmp
sbb
cmp
mov
mov
or
ror
movsl
mov
or
jle
mov
outsl
xchg
push
sahf
xor
mov
mov
sbb
add
dec
push
jbe
pop
xchg
aam
or
ss
adc
adc
rolb
into
jns
push
in
jo
call
inc
pop
xlat
fldl
aam
sbb
mov
clc
add
add
sbb
or
cld
sub
cmp
test
and
add
in
hlt
mov
add
push
clc
sbb
jae
adcb
or
push
adc
pop
dec
sbb
mov
scas
sbb
lock
js
and
push
cmp
mov
shrl
jl
test
xor
lods
jne
adcb
cmpsb
imul
adc
xor
xor
sbb
inc
pushf
sbb
aad
hlt
test
cmp
or
push
sti
add
adc
sub
pop
or
inc
mov
inc
lret
push
loope
push
add
scas
or
adc
mov
test
adc
push
push
stos
divl
push
rolb
dec
mov
shll
sbb
lods
into
repz
add
mov
addr16
stc
call
pushf
push
xchg
pop
inc
enter
mov
aaa
and
je
arpl
mov
movsb
lods
mov
sub
enter
js
sbb
ret
and
push
and
xchg
std
adc
xor
popa
mov
hlt
xcrypt-cbc
cmpsl
adc
outsb
adc
push
push
enter
and
mov
jl
call
cli
repz
cwtl
test
cmp
subl
js
adc
push
cli
adc
stc
orps
into
fwait
repnz
push
pop
push
rolb
push
mov
add
add
mov
sbb
test
sbb
sbb
jle
test
add
scas
mov
testb
pop
clc
enter
data16
out
cmp
out
cmpsb
into
rcrb
or
sub
mov
stos
add
or
scas
or
in
adc
pop
out
nop
and
cwtl
aaa
mov
add
adc
lock
push
andb
jb
cs
aam
cmpsl
test
into
sbbl
paddw
pop
lock
sbb
mov
push
test
add
jg
iret
sub
aaa
ret
push
sub
sbb
rol
shlb
movsb
sub
loope
add
sbb
pop
aam
push
pop
add
idivl
xchg
pop
push
xor
scas
xor
pop
push
xchg
mov
lret
xor
push
fs
or
or
or
enter
cmc
mov
pushf
push
in
and
add
push
fmuls
xlat
add
clc
push
outsl
sub
out
push
inc
mov
push
pop
lea
jno
pusha
xor
inc
jne
enter
movsb
or
or
loop
mov
pop
or
stos
inc
pushf
lret
roll
jae
mov
push
sub
lea
lret
mov
adc
adc
popf
clc
sbb
lret
daa
push
push
mov
xchg
mov
cmp
sub
pusha
stos
inc
sbb
aas
pop
add
rolb
shlb
icebp
add
aad
aam
or
push
sub
add
lds
or
sahf
roll
pop
rcrl
sbb
mov
adc
jo
push
in
jns
add
mov
sbb
sbb
adc
ss
jmp
scas
xor
sbbb
mov
pop
ret
addr16
sbb
notl
incb
push
push
dec
jge
adc
subb
jb
add
pop
sub
lock
pop
mov
and
sbb
rcll
xchg
imulb
dec
and
ljmp
pop
insl
pop
enter
jne
ficoms
clc
pop
loope
mov
mov
push
mov
sbb
popa
mov
jae
mov
ret
mov
nop
addl
stos
pop
mov
fs
in
sbb
sbbl
dec
jae
or
jno
push
mov
roll
jp,pt
movsl
or
xchg
and
jns
out
jb
and
cmp
mov
enter
jo
cmp
adc
add
in
andb
push
mov
mov
xchg
out
adc
push
fwait
rorl
fs
nop
mov
in
mov
arpl
push
movsl
pop
add
in
ret
push
jne
cli
or
add
jl
mov
roll
dec
cmpsl
bsf
jecxz
decw
adc
stos
xor
or
inc
jno
mulb
adc
cmp
test
xor
loop
mov
lcall
leave
outsb
popl
and
inc
int
xchg
in
jmp
pop
ret
rcl
pop
stc
les
ret
dec
push
cmpsl
mov
push
in
cmp
add
mov
into
jne
pop
jnp
cmp
jae
test
adc
jbe
mov
cs
clc
or
and
dec
pushf
or
inc
xor
push
jae
mov
cmp
sbb
push
imul
leave
xor
enter
jo
sub
sbb
jo
cmc
or
or
clc
call
adc
enter
mov
adc
data16
and
sub
xor
pop
bound
aad
vmwrite
aam
icebp
push
push
add
lods
inc
xor
or
dec
xchg
sbb
in
cmp
pushf
loope
add
fsubs
in
popa
or
cmpsb
shll
in
dec
xor
sbb
add
je
jmp
test
sbb
xlat
adc
dec
inc
aaa
inc
iret
and
jns
out
orb
test
fadds
lock
or
add
jmp
fdivs
pop
push
or
sbbb
nop
and
dec
lock
pop
jnp
rcrb
out
cs
mov
ret
cld
jne
xchg
jecxz
sub
adc
shll
sbb
push
aam
ficomps
and
mov
add
icebp
ret
aam
addb
and
loop
push
mov
jno
mov
test
add
in
mov
movsb
add
enter
rcll
stos
add
mov
insb
shl
inc
ret
mov
and
sbb
cmp
mov
and
test
aam
std
bound
insb
mov
or
or
xchg
outsb
pop
shrl
jnp
add
mov
add
jb
popa
cwtl
pop
push
je
lcall
add
mov
rol
mov
std
push
xor
pop
dec
cmp
mov
mov
inc
push
fucomp
sbb
nop
inc
inc
or
and
subb
cmp
mov
mov
xor
nop
ljmp
mov
push
or
mov
mov
adc
shll
add
inc
mov
dec
jp
and
dec
sbb
ret
xor
push
mov
and
cltd
rcl
and
push
jne
sbb
adc
inc
cwtl
orb
push
xor
js
sbb
sub
rcll
sahf
sbb
and
inc
lret
add
stos
cltd
test
fcmovnu
andb
sbbb
pushf
mov
clc
rcrb
mov
adc
sbb
inc
push
les
shlb
dec
rcll
or
movsb
lock
pop
add
mov
ret
es
or
and
dec
xor
mov
xor
pop
lock
xor
js
pop
adc
xor
ret
add
inc
icebp
sub
mov
fmuls
lods
rcll
mov
cmp
push
fcomps
not
lods
push
push
hlt
pop
xchg
loopne
or
pushf
leave
repz
cmp
cmp
and
roll
cwtl
testb
adcb
mov
enter
aad
xchg
adc
xchg
adc
adc
call
das
ds
sbb
inc
and
mov
cmp
insl
mov
jmp
dec
pop
jno
ret
add
dec
jge
push
xor
jbe
push
pop
aad
adc
dec
les
sti
lret
sub
inc
divb
xchg
jnp
fildl
daa
and
ja
out
sub
push
add
fwait
subl
shlb
aam
jne
push
cmp
cmp
cmp
xchg
mov
inc
inc
mov
mov
inc
notl
mov
addr16
mov
pusha
pop
push
mov
stos
jb
nop
sbb
jne
out
aam
mov
dec
lret
add
dec
push
je
push
scas
mov
insl
or
sub
adc
or
pop
lock
leave
add
imull
stos
sub
dec
and
or
adc
int3
rolb
lcall
push
pop
lock
ljmp
lahf
loope
les
push
pop
arpl
add
icebp
rol
mov
and
popf
or
mov
xchg
inc
dec
subb
sbb
push
lea
mov
adc
cmpsb
sub
stos
add
aaa
or
imul
nop
sbb
jo
stos
lret
push
sahf
sbb
jno
pop
cltd
pop
adc
mov
loopne
jbe
stc
jl
push
lret
mov
add
pop
or
and
adc
cli
add
sbb
xchg
or
xchg
mov
pop
sbb
outsb
or
jg
daa
stos
or
or
push
or
jo
int3
sbb
push
loop
sub
push
aas
cli
inc
pop
adc
enter
scas
int3
push
cmpsl
mov
loopne
js
adc
sbb
pusha
xor
sbb
xchg
add
mov
xor
push
xchg
out
adc
xor
arpl
xchg
inc
scas
loope
inc
pop
in
push
ret
push
lock
add
mov
mov
jge
rcl
stc
mov
popl
pop
adc
sub
lds
test
sub
sbb
imul
mov
out
pop
inc
dec
push
inc
dec
adc
sarl
cmp
cmc
pop
cmp
pop
mulb
dec
dec
lret
sbb
sbb
xor
rol
sbb
mov
xor
sbb
adc
push
mov
in
inc
stc
out
cwtl
mov
test
pushf
xor
xchg
jo
inc
mov
fiaddl
je
movsl
ret
pop
inc
addb
xor
lock
loope
lods
or
or
sbb
icebp
push
mov
mov
rcll
dec
cltd
loopne
test
xor
ljmp
sub
xchg
adc
dec
xor
rcrb
add
mov
ljmp
xchg
and
mov
mov
pop
mov
add
cld
pop
in
push
icebp
popa
pop
xlat
or
inc
shll
or
xor
pop
cmp
jge
ds
jge
jp
pop
pop
shrl
sbb
push
cmp
mov
mov
loope
inc
lods
out
xchg
ret
jnp
push
ret
push
dec
mov
ljmp
push
pop
js
sub
pop
test
shrb
sub
rorb
xor
xor
add
add
idiv
add
test
jg
adc
ret
andl
jge
rcrb
mov
jno
and
pushf
push
pop
jb
jne
cmp
scas
pop
addl
inc
ret
xchg
inc
sub
and
push
cmp
or
or
sbb
shlb
mov
mov
jo
xchg
mov
inc
add
mov
adcl
test
xchg
or
inc
push
jb
mov
loopne
push
dec
jno
add
aaa
mulb
xlat
daa
aaa
add
test
or
dec
inc
add
pop
adc
push
inc
das
sbb
fisttps
arpl
dec
enter
inc
lret
mov
dec
dec
test
aam
adc
or
pop
lock
adc
inc
sarl
dec
ret
mov
lea
arpl
aam
outsb
rolb
cwtl
test
sub
push
sub
lahf
xchg
and
sbbb
shll
mov
lret
das
popa
aad
adc
popa
ret
mov
mov
jbe,pn
lcall
push
inc
inc
jae
push
cmpsl
or
push
out
out
subb
test
adc
aam
les
lahf
scas
stos
stos
xor
push
cwtl
jmp
add
addb
mulb
fdivl
loop
adc
and
stos
or
add
shll
cmc
push
test
test
push
fcmovnbe
addl
pop
mov
mov
sub
push
aam
paddb
aam
pop
mov
push
in
or
xor
lcall
mov
dec
or
pusha
mov
xchg
adc
enter
rcll
adc
push
insb
cmp
push
mov
push
sbb
cmp
ljmp
xor
into
or
pop
pop
cmp
jns
cwtl
push
hlt
push
insl
call
cmpsb
rolb
pushf
inc
adc
xchg
mov
cmp
and
push
aam
out
int3
mov
xchg
cmpsl
cwtl
push
push
add
inc
add
xor
ljmp
adc
arpl
push
xor
mov
xor
jecxz
inc
jbe
add
mov
mov
add
jo
rcl
mov
push
cmp
addr16
imul
cmpsl
mov
cmp
lock
adc
aam
dec
and
cmp
cwtl
je
insb
sbbb
daa
ret
mov
mov
jo
adc
call
and
sbb
cli
and
adc
and
or
or
es
faddl
inc
cmp
enter
push
and
rcl
in
leave
pop
lds
or
add
xchg
sub
roll
and
call
popa
adc
pop
xor
add
lahf
fisubl
mov
cmpsb
or
sahf
xchg
sti
repz
fcmove
stos
adc
and
or
adc
jg
ljmp
mov
mov
test
push
xor
jl
cmpsb
sbb
inc
add
adc
add
push
mov
inc
out
mov
and
sbb
cmp
inc
mov
pushf
pop
push
mov
mov
adc
push
aam
pushf
data16
adc
je
sub
adc
ds
fwait
mov
imul
and
decb
mov
xorps
xchg
adc
roll
dec
lds
test
push
xchg
enter
add
pusha
ljmp
lret
inc
push
xor
pop
sbb
loopne
dec
das
push
add
dec
sub
scas
or
mov
jg
and
sbb
push
shl
outsl
and
adc
or
sbb
mov
push
repnz
rolb
or
mov
sbb
in
push
adcb
pop
or
imul
movb
push
aas
push
pop
hlt
loopne
idiv
dec
xchg
sbb
xor
or
mov
dec
cmpb
bound
lds
shrl
dec
int
dec
loop
in
hlt
rcr
add
loop
idivb
js
aam
aam
lcall
imul
loopne
popa
jo
push
rcrb
xchg
repz
in
mov
cmovne
repnz
jo
inc
int
adc
ret
mov
shlb
ret
and
pop
cmp
pop
xchg
ss
adc
dec
repnz
mov
test
aam
cmp
push
push
mov
sub
sbb
jb
sbb
mov
cmpsl
jae
sbb
pop
aas
mov
imul
xor
pusha
add
not
cmp
and
xor
mov
movsl
mov
xchg
xor
ljmp
mov
push
add
pop
mov
mulb
loope
in
cpuid
hlt
add
sbb
clc
inc
andl
jmp
inc
or
jne
test
sbb
adcb
and
mov
and
icebp
shl
sbb
cs
bound
mov
push
call
mov
sbb
xor
pushf
mov
pushf
sbb
or
inc
scas
sub
or
scas
fiadds
jne
push
push
push
cmp
divb
xchg
xchg
leave
add
adc
sbb
push
inc
scas
sbb
out
jb
lods
mov
sub
mov
pop
mov
mov
add
testb
ljmp
mov
sbb
lds
sub
out
dec
push
leave
adc
adc
jae
mov
test
push
sbb
xor
or
pop
rcrb
inc
add
add
mov
mov
sbb
mov
mov
out
mov
dec
cmp
ret
sub
inc
fildl
add
sbb
cmc
xchg
leave
xor
cmp
push
movups
js
fiaddl
push
mov
sub
lock
stc
cmpsb
or
add
and
cwtl
fcompl
shlb
jno
cmp
add
mov
pop
adc
call
into
bound
mov
fwait
stos
cmp
dec
push
roll
call
addb
adc
stos
cld
out
aam
and
fwait
or
and
test
adc
add
rcll
pop
test
inc
adc
push
mov
and
add
add
int3
test
lods
sbb
je
jp
pop
add
js
imul
fiaddl
inc
scas
dec
or
sbb
or
ljmp
adc
push
mov
sbb
fisttpl
or
jle
add
push
popa
xchg
and
loopne
dec
and
or
fcomi
mov
arpl
sbb
xor
jne
push
inc
mov
cmp
call
mov
sbb
call
out
push
mov
arpl
pop
pop
or
ret
sbb
mov
xchg
add
adc
xchg
test
xor
pusha
scas
mov
ljmp
or
mov
call
cmp
shr
pop
adc
add
pop
jo
adc
push
pushf
insb
ret
cmp
mov
neg
push
out
sbb
cmp
push
inc
andb
mov
loop
dec
lcall
jno
gs
stc
sbb
sahf
sbb
and
pop
xchg
flds
subl
adc
or
push
inc
and
jb
shrb
add
push
test
dec
jbe
mov
mov
pop
mov
mov
mov
call
mov
mov
or
cmpsb
add
ret
rcrb
mov
das
std
out
jecxz
rorl
loopne
add
lods
aam
and
lds
adc
loope
xor
push
into
xchg
mov
ljmp
imul
sbb
dec
and
add
out
rorb
add
dec
mov
jmp
or
adc
mov
add
sahf
arpl
inc
pop
inc
movsb
pop
imul
scas
or
popf
orb
enter
push
pop
push
and
ret
fimuls
adc
push
ja
stos
and
push
push
and
xchg
push
movsb
popf
or
shr
pop
jne
pushf
lret
push
adc
adc
sbb
push
add
sub
js
rclb
mov
xchg
and
rcr
xor
mov
repnz
pop
add
icebp
mov
cli
push
push
sbb
fcoms
cmp
repnz
xchg
stos
movsl
ret
dec
and
add
ret
xor
push
scas
jmp
sbb
and
repnz
push
negb
add
rcll
add
mov
inc
mov
add
cwtl
or
mov
rclb
sub
lret
adc
adc
or
and
mov
les
dec
rolb
bound
push
inc
add
inc
popf
and
cmp
inc
sub
adc
add
inc
shrb
aad
mov
out
sbb
xlat
or
sarl
jns
mov
mov
insb
dec
inc
sub
or
int
js
mov
andl
scas
add
sbb
jne
adc
fwait
inc
test
adc
rcr
in
xchg
mov
nop
jne
mov
and
in
push
shlb
fs
push
fisttpl
push
cmpb
cmp
fbld
sbb
inc
ljmp
test
pop
inc
push
ljmp
cmp
mov
push
and
and
iret
rol
add
xor
adc
or
rcrb
cli
cmp
jmp
mov
rolb
xchg
test
sbb
sbb
xor
mov
push
cltd
mov
xchg
rclb
mov
lods
addb
adc
stos
cmp
sbb
jno
sti
not
and
push
repnz
sbb
into
rcrb
lret
inc
mov
test
dec
mov
and
pop
pop
or
test
aam
sub
push
mov
in
mov
inc
cli
mov
mov
ret
cmp
dec
sbbb
icebp
mov
dec
sbb
or
sbb
mov
sbb
rcll
lock
push
lcall
aas
stos
jo
jo
adc
aad
aam
add
jno
push
and
sbb
push
mov
mov
movl
jns
fisttpll
dec
cs
jg
mov
or
out
nop
sub
subl
pop
and
pop
popa
add
mov
imul
mulb
inc
dec
add
mov
lret
je
push
push
mov
mov
mov
scas
dec
popa
mov
or
fstps
shrl
sbb
jmp
push
adc
and
scas
stos
mov
inc
js
add
aam
sbb
shl
push
andl
in
sbb
sbb
loop
lcall
inc
loopne
insl
cmpsl
add
push
xor
rclb
arpl
lcall
popa
lock
adc
nop
adc
dec
adc
lock
pop
or
pushf
arpl
push
inc
adc
icebp
mov
rcll
pop
mov
mov
adc
xor
fcomps
mov
rol
ds
lods
enter
pop
int
mov
add
mov
sbb
cmpsb
xchg
mov
xor
mov
mov
cmp
rorb
sbb
xor
cwtl
xor
and
add
mov
inc
inc
add
and
push
cmp
pop
xchg
shl
fcoml
mov
lds
mov
add
sti
loope
xchg
jp
dec
jecxz
es
jne
adc
test
sub
sub
mov
aad
orl
pop
hlt
addb
jae
sbb
lock
ja
inc
movsl
sbb
xchg
shlb
jl
pop
push
movsl
repz
ret
inc
xor
jg
cmp
dec
jnp
cmp
adc
fisttps
cmp
enter
addr16
stc
dec
insl
mov
xchg
push
repz
data16
pop
ror
test
pop
adc
sub
cltd
add
sbb
and
xchg
jne
enter
insl
cltd
pop
sahf
mov
rcll
les
addr16
leave
xchg
aam
xor
add
adc
push
test
mov
into
add
clc
cli
insl
inc
das
orb
dec
jmp
mov
call
leave
mov
jp
or
dec
adc
jp
je
rorb
cvtpi2ps
aam
lock
insb
mov
icebp
arpl
jno
sbb
mov
into
sbb
inc
in
into
mov
mov
sbb
mov
mov
out
mov
ja
push
loop
adc
scas
pop
je
xor
es
loope
es
mov
jle
inc
out
sbb
lret
add
add
outsl
cmp
ret
aas
sbb
add
jo
enter
insb
mov
loop
push
test
or
dec
ja
inc
and
xchg
mov
adcl
sub
cmpb
jnp
test
push
add
sub
daa
mov
push
jno
daa
lea
ret
inc
and
fistpll
pop
in
pop
mov
pushf
lea
pop
push
push
aaa
enter
cmp
adc
cmpsb
inc
movsb
in
int3
adc
add
and
cmpsl
mov
mov
adc
push
shrl
pop
pop
ss
inc
loop,pn
or
mov
lcall
into
fnstsw
sub
mov
loopne
and
xor
aad
scas
cs
add
mov
add
loope
or
sub
aaa
cmp
cmp
cltd
enter
cmp
sbb
jne
and
add
and
mov
movsl
push
sub
hlt
fs
inc
roll
movsb
incl
mov
jl
sbb
andb
add
adc
or
pop
adc
mov
sbbl
push
add
push
push
call
in
les
sbb
pop
sbb
mov
lret
repnz
inc
sbbb
or
adc
inc
pop
mov
mov
das
pop
sbb
aam
sbb
js
sbb
daa
jmp
cmpsl
adc
rclb
inc
clc
sub
or
push
pshufw
mov
popl
loopne
cmp
xchg
popa
lret
ficomps
or
sub
test
push
sbb
and
je
dec
xchg
std
icebp
test
add
push
inc
dec
xor
jo
and
inc
es
sub
sub
push
jle
out
push
push
adc
adc
mov
jne
push
fwait
dec
dec
mov
xor
inc
test
rcrl
mov
jno
sbb
dec
js
add
xor
ljmp
push
loop
jmp
push
dec
xchg
sub
pop
shlb
loopne
mov
movl
jnp
leave
shrb
test
out
inc
faddl
add
add
pop
lret
add
add
jae
stos
pop
fisttps
xorl
movsb
adc
ret
lcall
mov
imul
xor
cmp
mov
push
mov
and
jg
mov
mov
ljmp
ss
or
rcrb
inc
cmp
add
orb
sub
sbb
add
inc
dec
test
out
pop
pop
mov
push
or
and
sbb
push
add
mov
shlb
pop
std
shrl
dec
cmp
push
push
and
xchg
inc
push
pop
and
or
dec
lods
mov
push
pop
test
test
sbb
pop
jo
cli
push
sub
mov
push
mov
es
lods
enter
inc
xchg
mov
add
mov
jo
ret
je
and
sub
add
and
push
xor
and
and
mov
push
jmp
mov
add
mov
hlt
in
mov
mov
mov
loopne
mov
add
dec
push
jo
xor
cmp
rorb
or
adc
xchg
mov
pcmpeqw
and
adc
sahf
sub
sar
push
lea
inc
sbb
es
sub
fs
xchg
jle
test
adc
or
les
test
mov
pop
pop
fists
mov
push
jbe
mov
ljmp
mov
shll
pop
mov
or
ret
test
dec
call
jp
and
rolb
fiadds
sub
stos
jb
rcrb
cs
enter
pop
shll
jbe
cmpsl
jp
mov
or
mov
push
lret
or
mov
sbbb
shrb
sub
adc
adc
mov
and
add
push
xlat
or
sbb
icebp
idivb
xchg
or
and
bound
xchg
push
insb
cwtl
push
stos
test
dec
cmpsb
pop
sbb
adc
decb
xchg
cmp
dec
mov
sbb
stos
cmp
add
sbb
xor
and
loop
and
loope
xor
aam
jae
pop
sub
or
add
hlt
scas
pusha
call
fildll
jmp
rorl
dec
sub
adc
cmp
jecxz
stc
pop
pop
loope
mov
scas
in
lds
sbb
jg
gs
push
icebp
inc
adc
cwtl
arpl
mov
mov
loope
sub
sbb
cmp
shlb
shrl
sbb
lods
or
sub
cli
mov
sbb
mulb
adc
sbb
cmp
push
repnz
xor
dec
pop
rcrb
add
clc
sbb
and
mov
sbb
addl
add
xchg
lret
icebp
add
lret
or
or
push
stos
dec
add
adc
adc
adc
or
push
sti
cmp
sbb
xor
adc
sbb
iret
movsb
loope
call
add
adc
rclb
pop
add
call
jmp
rcrl
lock
aas
out
add
xchg
gs
movsl
push
mov
jbe
cmp
push
lret
xchg
xor
push
push
addb
cmp
jg
sbb
push
movsb
sbb
sub
or
mov
or
xchg
adc
icebp
enter
rcrb
hlt
icebp
loope
xor
push
movsb
dec
cmpsb
pop
fdivs
mov
aam
push
fisubs
or
inc
xor
add
popa
stos
add
xor
sub
pop
and
vpmuludq
pop
dec
inc
scas
int
or
repnz
test
mov
inc
into
je
and
inc
js
clc
cmpsb
sub
push
ret
push
mov
jp
xchg
imul
stos
in
add
test
sbb
push
in
sub
inc
mov
sbb
sbb
xchg
lcall
mov
pop
shlb
add
cmp
adc
mov
mov
test
shll
add
negb
mov
cmp
lcall
popf
push
xchg
js
adc
push
imul
add
xchg
jge
cli
jo
mov
stos
add
push
sbb
push
add
inc
and
inc
xchg
and
sub
roll
stos
inc
jnp
lock
mov
pusha
enter
in
inc
mov
mov
add
lahf
sbb
pop
lods
adc
add
add
dec
es
sbb
ss
adc
sub
sub
shll
push
arpl
ljmp
push
adc
shrb
adc
fs
sbb
loop
sbb
sub
mov
jp
xor
js
movsb
or
or
ret
aad
dec
and
jno
cwtl
jp
out
clc
cwtl
mov
or
jae
out
lock
sub
cmp
mov
mov
and
mov
lock
orb
sbb
ret
add
fmull
stos
jl
mov
sbbl
push
mov
shrb
xor
and
mov
call
movsb
adcb
mov
dec
bound
andl
dec
push
jne
add
jae
movsb
jmp
mov
dec
add
cmp
add
sbb
les
rolb
shl
push
push
adc
mov
push
shrb
inc
push
dec
or
icebp
inc
adc
je
mov
push
dec
psubd
mov
shl
add
push
pop
sbb
and
and
in
dec
in
sahf
pop
or
js
add
jmp
push
jo
daa
xchg
adc
xchg
rclb
test
insl
add
scas
out
or
inc
xor
dec
lock
jo
adc
inc
mov
inc
xchg
xor
repnz
push
jmp
out
jp
push
pop
movlps
and
sbb
or
sbb
cmp
jb
jmp
aaa
pop
in
sub
sub
lock
inc
mov
adc
ja
mov
push
xchg
xor
or
leave
inc
mov
movsb
mov
inc
add
xor
lds
arpl
push
pop
scas
sarb
add
es
xor
sbb
pop
icebp
pop
dec
ret
pusha
xor
fimuls
mov
nop
cwtl
orl
lcall
adc
int3
add
sbb
imul
mov
xchg
pusha
es
aam
mov
add
jecxz
rcll
inc
or
xchg
adc
cltd
or
mov
pop
xchg
jl
jmp
test
sti
ror
mov
aad
jae
and
push
cmp
aaa
add
add
xchg
shll
xor
add
cmpsb
dec
xor
sbb
push
xchg
lret
and
add
cmp
or
int
daa
hlt
cmp
inc
mov
andl
mov
mov
or
in
or
adc
cmp
mov
call
loopne
insb
sub
shll
and
imul
jb
les
sub
push
adc
adc
mov
inc
test
and
lcall
push
add
sub
adc
ds
add
add
jl
push
cltd
sbb
mov
sub
stos
andb
xor
pop
and
insb
cwtl
fildll
rcl
dec
mov
js
jne
andl
push
inc
cmp
sub
or
xor
loope
adc
popl
push
test
dec
and
addl
out
add
jne
xchg
pop
loope
and
ret
sbb
inc
movb
cmp
ljmp
sub
imul
push
outsb
ljmp
int3
sbb
pop
ret
ss
insb
mov
scas
push
mov
cld
adc
jecxz
mov
enter
or
cmp
stos
test
pusha
sbb
xchg
and
inc
rcrb
push
shlb
sbb
xchg
mov
cld
pop
pop
push
xorl
add
addb
js
cli
mov
push
cmp
mov
pop
xchg
add
mov
cltd
cmpsb
into
jo
mov
mov
sbbb
lret
sbb
xor
out
scas
sbbb
or
lret
loope
fwait
test
cwtl
mov
inc
jp
pop
xor
sub
cmc
mov
cmp
inc
mov
adc
and
add
rcrl
inc
adc
add
and
stos
fistl
daa
push
push
lret
add
mov
sbb
push
sbb
lds
test
loopne
call
mov
inc
cmp
mov
adc
call
loope
daa
dec
clc
mov
mov
cmp
push
xor
nop
and
or
aam
push
push
push
and
decb
sbb
sub
add
cmp
mov
pop
push
adc
or
mov
inc
mov
orl
repnz
mov
cmp
adc
pop
mov
pop
pop
inc
pushf
andb
je
cmc
and
test
bound
adc
jmp
imul
add
xchg
lods
sub
sbb
sub
or
mov
je
add
mov
mov
adc
cli
push
or
clc
add
mov
dec
sbb
ror
sbb
mov
shl
call
mov
or
or
pop
mov
pop
add
pop
arpl
jae
cld
stc
repz
add
xchg
xor
jb
lahf
aas
jg
push
out
jne
decb
cld
stc
repz
adc
jnp
test
aaa
les
insl
mov
aas
cmp
pop
icebp
addr16
and
icebp
xor
repz
popa
cmp
dec
inc
adc
or
cmpsl
aas
jg
cld
mov
sbb
xchg
imul
mov
dec
xlat
lcall
cld
stc
nop
pusha
jp
in
mov
xchg
mov
cmp
inc
xor
out
lahf
aas
lret
xchg
je
stos
cmc
repz
cld
stc
repz
daa
arpl
and
and
dec
iret
lahf
aas
jg
cli
push
cli
loope
mov
repz
adcb
clc
jae
ljmp
jg
jl
pop
pop
push
loopne
mov
les
stc
repz
cmp
pop
cmpl
sub
inc
aas
jg
cld
pop
adc
xor
movsb
repz
lahf
push
jbe
out
push
mov
jns
jg
cld
stc
pushf
mov
sbb
lds
pusha
fsubrp
popa
xor
lahf
aas
push
imul
cld
stc
repz
stc
mov
js
mov
roll
iret
lahf
aas
jg
jg
ss
imulb
jbe
stc
repz
bound
cmp
xchg
mov
ljmp
sbb
inc
addr16
xor
adc
add
xlat
or
adc
sbb
jg
cld
stc
aas
loope
dec
or
fisubl
mov
mov
iret
lahf
aas
lahf
idiv
ss
test
rclb
cld
stc
repz
adc
sub
push
sahf
repz
lahf
aas
jg
nopl
ss
arpl
scas
cld
stc
repz
mov
aaa
fidivrs
xlat
fsubr
int3
cmpsb
repz
aas
mov
repnz
or
aad
jg
cld
stc
or
lods
orl
jb
push
mov
aad
push
add
push
dec
xabort
cld
stc
repz
sbb
cmpsl
push
in
and
in
and
mov
iret
lahf
aas
jg
int3
sbb
add
hlt
cld
stc
repz
ret
insl
xor
iret
and
dec
cmp
jg
sbb
mov
std
int
push
stc
repz
xchg
repnz
mov
into
sub
mov
jbe
fmul
push
insl
cmp
fcmovb
pop
repz
lahf
sahf
aam
inc
aas
shll
cli
scas
and
cld
stc
xchg
mov
loope
lods
out
sbb
insb
out
lahf
aas
fisttpl
xor
inc
cld
stc
repz
pop
cwtl
adc
sbb
pop
dec
iret
lahf
aas
jg
not
push
popa
lcall
sbb
out
and
xor
stc
repz
decl
fxch
jb
scas
push
pop
out
lahf
aas
jg
xchg
fnstcw
dec
test
loop
pop
stc
repz
fwait
std
stc
inc
xchg
fidivs
mull
aas
jg
cld
imul
push
xchg
or
sbb
lahf
lods
scas
dec
push
pop
les
test
jnp
xchg
jg
cld
stc
sub
popf
ret
call
cmp
iret
lahf
aas
les
mov
aam
in
call
lea
ja
mov
push
mov
lcall
jae
jae
push
mov
push
cld
stc
repz
shll
lcall
sahf
dec
cmc
cmp
xor
lahf
aas
jg
data16
push
push
or
gs
xchg
stc
repz
in
out
rclb
movsb
call
leave
mov
push
nop
int
push
pop
sub
imul
psllq
iret
lahf
insb
daa
in
mov
outsb
jle
daa
pop
adc
cld
stc
arpl
mov
xor
iret
lahf
aas
jnp
in
aas
mov
aaa
push
cmpsb
or
gs
cld
stc
repz
jae
aas
jb
imul
hlt
sub
lahf
aas
jg
mov
xchg
enter
pop
pop
repnz
jb
repnz
and
or
aas
pushl
loopnew
cli
mov
mov
stc
repz
cmp
sbb
enter
cld
icebp
out
push
jno
ljmp
pop
or
repz
lahf
scas
jge
scas
push
xlat
fistpl
dec
or
cld
stc
or
fnstenv
loop
daa
push
mov
dec
mov
pop
cld
stc
repz
pop
adc
clc
jge
leave
aad
repz
and
lahf
aas
jg
or
loopne
sbb
or
stc
repz
fwait
movsl
xchg
mov
decb
dec
mov
mov
pop
and
inc
pop
pop
xchg
push
pushl
mov
stc
push
stos
inc
pop
cmpl
push
or
mov
pop
cmc
ffreep
out
xchg
lahf
aas
test
ljmp
into
xlat
cld
cld
stc
repz
mov
sbb
mov
out
xor
cmpsl
fs
pop
insl
pushf
pop
cld
stc
repz
out
xchg
sub
or
popa
mov
xchg
aas
jg
jbe
add
mov
out
push
cmp
xchg
cld
stc
repz
ds
or
push
out
cmp
setg
jg
mov
pop
xchg
mov
add
adc
stc
repz
lods
adc
mov
cmp
cld
cmpsb
jo,pt
and
dec
fs
and
loop
fwait
push
stc
xor
lds
push
dec
jg
cld
cmpl
sbb
das
adc
jle
mov
iret
lahf
aas
int
movsl
das
sahf
add
cld
stc
repz
fcomps
push
adc
push
mov
movaps
lahf
aas
jg
aaa
mov
test
in
stc
repz
mov
pop
lret
cmpsl
sub
lods
daa
cld
stc
xlat
jp
jb
push
pusha
sub
jns
aas
jg
or
sahf
and
pop
lock
mov
iret
in
jae
xor
shl
int
pop
lods
jno
aas
jg
cld
mov
jle
ret
pop
xchg
out
xlat
vpperm
iret
lahf
out
add
je
icebp
or
cld
stc
and
aaa
mov
mov
and
lahf
aas
adcl
adc
in
jg
lds
inc
jo
xor
stc
mov
mov
xchg
mov
jg
xor
mov
jp
mov
lcall
repz
daa
test
popf
lock
add
jnp
cld
repz
jg
cld
xchg
loop
sahf
loope
aad
cli
enter
scas
repz
lahf
cmp
gs
or
jmp
stc
jp
xchg
mov
lret
and
iret
lahf
aas
shlb
into
push
cld
stc
repz
push
push
ficoml
jge
hlt
aas
fsubs
jg
dec
mov
shll
mov
inc
dec
inc
outsb
fisubs
dec
mov
movd
xor
lahf
fldl
jg
cld
stc
in
jo
adc
loope
or
sti
out
lahf
aas
mov
xchg
push
cld
jno
xor
cld
stc
rep
lock
cs
or
inc
das
iret
lahf
aas
jg
fnstsw
gs
std
in
dec
jge
cld
stc
repz
and
movsb
jg
or
inc
cmp
lahf
aas
jg
inc
fldenv
aaa
pusha
outsl
ss
jecxz
jecxz
sti
leave
out
mov
js
cli
jbe
jle
xchg
pop
mov
jg
cld
pop
in
adc
fnstcw
xor
iret
lahf
sbb
xor
es
es
icebp
cld
imul
testb
test
repnz
bnd
iret
lahf
aas
jg
jae
mov
inc
int3
cmp
imul
mov
jg
cld
les
lea
ss
inc
push
dec
adc
out
lahf
xchg
loope
fsubrl
push
cld
stc
mov
sub
push
mov
rep
ljmp
int
adcl
lahf
aas
jg
aaa
lea
xchg
cmp
inc
pop
insb
pop
sbb
repz
outsl
cld
pusha
jnp
fistps
repnz
aas
jg
cld
and
sti
xorb
mov
pop
push
repz
lahf
cmp
jae
sbb
cld
stc
aad
mov
mov
out
mov
repz
insl
mov
and
sub
pop
stc
jg
cld
stc
pop
mov
mov
test
push
and
xor
pop
jp
jge
out
cld
stc
repz
aas
rolb
lcall
aas
jg
pop
je
xor
ds
cmp
stc
repz
cs
std
xchg
dec
or
push
lret
dec
sub
sbb
loop
loopne
stc
repz
inc
jo
insb
jae
xor
enter
mov
jg
cld
cmp
sahf
dec
cmp
in
add
mov
xorb
loopne
inc
stc
test
lret
movsb
mov
jg
fisttpl
or
lods
dec
test
out
lahf
aas
out
lcall
lods
pop
fwait
cld
stc
repz
mov
lret
xor
test
arpl
adc
popa
stc
outsb
gs
push
lahf
decb
in
in
sbb
ljmp
jg
mov
sub
stc
repz
or
ljmp
adc
aas
jg
cld
les
or
inc
sbb
lcall
out
mov
mov
loope
cld
cld
stc
aas
push
sbb
popa
lahf
leave
in
push
fcmovb
cmp
cld
mov
insl
je
repz
pop
jecxz
cmpsl
jno
iret
lahf
aas
pop
pop
insb
movsl
in
mov
jae
gs
stc
stc
repz
mul
scas
xor
iret
scas
fsubl
stc
repz
cmovge
test
incb
leave
arpl
iret
lahf
aas
jg
test
pop
dec
pop
jns
cli
sbbb
stc
repz
xor
aas
cmp
imul
aas
jg
stc
outsl
mov
add
imul
xchg
xor
xor
test
ret
sub
mov
cld
cld
ja
cwtl
lcall
aas
jg
cld
aas
pop
mov
cmpsb
adc
sbbl
shl
iret
lahf
sbb
fisttpl
clc
mov
jle
cld
stc
lods
loop
push
je
roll
je
out
adcb
cltd
add
cmp
out
fwait
aaa
mov
pushf
daa
aas
dec
mov
mov
mov
gs
cs
shl
or
cli
nop
and
call
ds
rcrb
push
mov
insl
cmp
xchg
mov
pop
xchg
aas
or
fwait
pop
fwait
aaa
outsl
fsubp
popf
lcall
cmpb
int
je
mov
mov
das
leave
sbb
outsb
fidivrs
sub
push
call
cmp
out
fwait
aaa
add
mov
adc
mov
repz
adc
xor
packsswb
ret
jg
dec
stos
mov
adc
cld
stc
jo
push
and
push
xchg
mov
fwait
addb
call
sbb
cld
stc
repz
adc
mov
aam
xchg
iret
lahf
aas
jg
in
cmp
jmp
pop
jecxz
xor
repz
sbb
mov
add
or
mov
je
fadd
cmpsb
into
negl
dec
inc
jle
das
xor
jle
stc
repz
pop
dec
mov
push
repz
jp
fdiv
out
aas
jg
push
aad
cli
stos
shl
jg
cld
stc
mov
stos
dec
push
cmc
inc
rolb
js
imul
ret
scas
fidivrs
sub
mov
movsl
sub
sub
outsl
push
lahf
ds
adc
sub
out
jl
jge
jp
mov
sbb
outsl
fiadds
or
in
push
fsubs
int
aaa
lds
negl
out
or
fisubrs
cld
cmp
out
jmp
bound
dec
push
mov
incb
dec
js
push
popa
fsubrs
outsl
fiadds
sub
or
mov
int
aaa
hlt
and
enter
ret
out
test
mov
ss
sti
xchg
xorb
int
aaa
outsl
jb
mov
ret
add
nop
adc
std
mov
mov
push
test
sub
adc
out
lcall
lret
or
repz
cwtl
adc
xlat
jne
aam
jecxz
mov
outsl
fidivrs
insl
stos
cwtl
jmp
mov
in
fbld
dec
and
incl
xor
cld
mov
push
ret
dec
adc
out
cs
enter
or
shl
inc
cmp
arpl
inc
pop
lcall
sbb
hlt
in
out
xchg
loope
inc
outsl
fidivrs
lret
shrb
push
lcall
outsl
mov
std
dec
push
mov
stc
jae
sti
out
fwait
aaa
test
std
outsl
pop
aad
fidivrs
popa
in
xor
pop
cli
iret
lds
cmp
pop
inc
jo
call
inc
mov
mov
leave
push
addl
addb
mov
add
mov
fnstcw
fwait
push
mov
stc
repz
xor
pop
daa
lods
mov
jle
jg
sbb
stos
call
sub
repz
fistps
ja
sbb
cmp
psllq
sbb
add
dec
cmp
jg
cld
stc
test
scas
not
test
adc
out
lahf
aas
jl
sub
add
add
cld
stc
repz
and
cmp
or
mov
jg
fisttpll
gs
push
add
pop
and
iret
lahf
aas
ja
xchg
jmp
jmp
cli
stc
cld
stc
repz
mov
cmp
arpl
outsl
ficoms
aas
xor
xchg
popf
test
xchg
mov
int
aaa
stos
fsubs
dec
cmp
stos
stos
mov
insl
sbb
hlt
rorl
mov
int
aaa
outsl
or
jae
or
jge
rcl
loop
pop
out
icebp
enter
es
pop
jge
daa
stos
push
cmp
repz
hlt
and
dec
mov
test
push
jns
push
clc
fsubrl
cmp
ret
addb
loop
iret
lahf
aas
out
sbb
cli
cmp
xchg
mov
sti
in
ror
in
and
add
add
and
xor
and
mov
stc
xrelease
jg
scas
imul
jg
aam
es
fldl
pop
and
inc
mov
fcmove
lods
roll
js
xchg
sbb
lock
mov
mov
divl
mov
adc
adc
aas
mov
sub
bound
iret
lahf
aas
pop
and
mov
out
jle
xor
cld
stc
repz
mov
sub
ja
iret
lahf
aas
jg
mov
xchg
loop
ret
jg
repnz
fwait
pop
scas
sub
sbb
fistl
push
out
lahf
jg
xchg
sbb
or
cld
stc
repz
sbb
cmp
jo
ret
ficoml
and
jg
outsl
jbe
jp
in
xchg
add
iret
lahf
aas
jg
mov
pop
jle
repnz
insb
cld
stc
rep
jne
testb
push
sub
mov
aas
jg
and
imul
push
stc
repz
faddp
mov
arpl
adc
movsl
sub
rorb
xor
or
insb
dec
jp
add
repz
or
repz
insb
loopne
pop
aas
jg
cld
lahf
pop
sub
scas
push
sbb
pop
dec
dec
xor
mov
lahf
xchg
push
pusha
jae
sbb
xor
jns
mov
enter
mov
mov
outsl
fidivrs
data16
mov
lea
cld
cmp
out
fwait
lock
rcrl
fbstp
pop
cmp
mov
fwait
pop
ret
push
jle
stc
repz
int3
ss
cmp
dec
jnp
cmp
mov
outsb
fidivrs
scas
xor
vpsraw
cld
imul
bnd
push
into
ja
iret
lahf
aas
jg
sti
sti
xchg
pop
pop
jae
inc
xor
repz
js
mov
js
and
jns
xchg
pop
lahf
sub
or
fdivrs
lods
aaa
outsl
fidivrs
sbb
roll
test
out
fwait
pop
movsb
sub
add
xchg
insb
push
clc
inc
je
sahf
fdivrl
cmp
lock
arpl
mov
call
adcb
movsl
nop
jecxz
add
aaa
leave
mov
mov
out
enter
out
fwait
aas
addr16
sbb
insb
xor
push
daa
fidivrs
into
inc
pop
or
daa
loopne
nop
nop
push
mov
and
pop
lcall
mov
stc
repz
mov
lahf
aas
lods
shl
and
ficoms
lahf
aas
jg
and
das
sbb
add
repnz
lret
mov
pop
bound
out
mov
inc
jno
push
xor
repz
int
in
sub
sub
aad
daa
fstpl
sub
out
lahf
mov
jge,pt
add
inc
push
scas
and
insl
push
cmp
cld
stc
dec
cmp
sbb
push
into
pop
dec
mov
xchg
jg
movsl
sbb
cld
stc
repz
push
xchg
jo
xchg
rcl
inc
inc
test
jg
sub
xor
mov
cld
stc
repz
movsl
mov
movsl
fidivrs
aaa
xchg
push
lahf
aas
jg
rcrl
andb
imul
out
jg
aas
mov
mov
mov
loope
jae
repz
div
in
test
mov
lahf
mov
push
xchg
out
lahf
aas
in
adc
add
adc
or
mov
inc
in
scas
imulb
aam
or
outsb
jg
fs
lahf
aas
pop
inc
xchg
sub
aam
sbb
cld
stc
repz
lret
mov
cmp
push
push
pop
push
and
es
or
repz
mov
int3
decl
lds
cld
stc
jno
mov
mov
push
jne
or
push
aas
push
and
pop
push
arpl
out
push
stc
repz
jb
cmc
incl
out
in
cltd
and
or
aas
jg
cld
cmc
jno
cmp
push
fisubrs
cwtl
int
movsl
xchg
lahf
je
movb
aaa
outsl
aaa
add
or
shlb
mov
dec
xor
xchg
sub
out
cli
clc
jl
push
and
jns,pt
out
imul
jle
test
sti
loopne
aaa
outsl
fidivrs
mov
hlt
testb
repz
fwait
outsb
xlat
xlat
or
mov
adc
jns
sbb
aas
or
pop
outsl
fidivrs
push
adc
cli
jbe
pop
outsb
adc
dec
dec
shl
outsb
or
cld
jns
jo
cmp
mov
lods
hlt
js
insb
fidivrs
pop
or
pushl
or
out
mov
js
inc
xchg
jecxz
in
hlt
out
fidivrl
cld
stc
and
mov
pop
dec
or
dec
inc
xchg
lahf
aas
int
push
xchg
xchg
mov
int3
inc
pop
fidivs
mov
pop
scas
xor
ss
pusha
or
and
lods
dec
aas
imul
mov
in
scas
popf
mov
out
xorl
add
add
mov
add
jbe
xlat
cmpl
cmpsl
lea
jo
xlat
int3
sbb
fistpll
cld
stc
mov
scas
in
popa
push
push
gs
mov
int
iret
lahf
aas
inc
popa
ret
sbb
mov
mov
out
lret
cld
stc
repz
loop
sbb
mov
ja
jo
xchg
lahf
aas
jg
insl
pop
shrb
inc
iret
lods
ds
stc
repz
scas
pushf
sbb
loop
lret
jb
in
cwtl
lods
cld
imul
xchg
sub
ffreep
into
fwait
lahf
aas
jg
scas
push
xchg
push
cmovl
in
iret
jecxz
sahf
stos
push
fldenv
repz
mov
mov
clc
push
add
stc
data16
mov
push
daa
adc
sbb
stc
ret
dec
ds
mov
fistps
aas
jg
cld
and
call
mov
push
fildl
push
inc
in
enter
mov
adc
inc
stc
repz
out
int3
int3
mov
es
test
push
sbb
jg
sbb
ja
iret
lahf
aas
fiaddl
outsl
jecxz
and
les
cld
stc
repz
fstpl
fcompl
in
fwait
test
add
aas
jg
stos
mov
sub
stos
jecxz
repz
addr16
pop
lahf
pop
and
ds
ds
cmp
mov
mov
hlt
repz
fwait
sbbl
sub
sub
mov
push
and
nop
xor
imul
pop
addr16
mov
mov
enter
inc
jg
lret
mov
inc
bound
lahf
fs
jb
jnp
sub
jb
cld
cld
stc
inc
jb
rep
cltd
cltd
mov
jns
pop
fistpl
inc
jbe
xchg
in
xchg
sbb
addr16
mov
scas
mov
ret
out
shrb
push
cmp
jg
cld
mov
jmp
testl
cs
in
xchg
repz
pop
aas
loop
jne
cmp
mov
int3
test
data16
lods
lods
pop
loopne
mov
insb
fidivrs
pop
xlat
mov
movsb
xchg
repnz
mov
sti
xchg
les
stc
xor
es
inc
lds
push
sub
lahf
aas
je
stc
ljmp
sbb
cld
stc
repz
test
bswap
movsb
dec
sub
aas
jg
or
inc
ret
orb
cmp
out
or
imul
add
les
lahf
aas
jg
dec
ret
jp
cmpsl
aam
inc
cmp
adc
out
and
popa
in
shlb
repz
dec
aaa
adc
das
inc
lret
cld
stc
xlat
or
inc
iret
iret
mov
pop
insb
add
inc
sub
inc
xor
dec
nop
daa
push
pop
fists
mov
mov
cmp
stos
xlat
jg
xor
cld
mov
adc
cld
stc
repz
pop
xlat
leave
imul
adc
jg,pt
jns
ds
mov
cltd
test
outsl
or
test
into
addr16
scas
aad
out
mov
push
cld
mov
mov
pusha
jns
jno
push
push
push
es
add
lods
jnp
out
aas
jg
jno
ret
aaa
rcl
add
cld
stc
repz
push
rorb
lds
jo
push
jo
jg
push
fmull
lret
xchg
dec
sbb
aas
mov
mov
cmpsb
jp
out
or
cs
repnz
scas
xchg
orb
or
popf
test
paddb
repz
in
fadd
and
jge
test
dec
and
jg
dec
mov
push
aam
mov
shrb
movsl
pop
lret
cltd
orl
jl
int
aaa
lock
adc
mov
sbb
fidivrs
aam
push
and
inc
je
dec
and
fwait
aaa
outsl
in
and
sbb
jp
cmpb
push
or
fdivrs
or
outsl
fiadds
inc
aas
es
clc
jecxz
roll
repnz
push
add
cmp
mov
ja
xchg
loopne
insb
mov
mov
dec
xchg
outsb
loop
insb
repnz
test
aaa
outsl
fidivrs
pop
orb
jbe
repz
fwait
repnz
jne
fldt
mov
leave
adc
pop
jge
xor
push
out
fwait
aaa
and
xlat
test
das
dec
mov
in
mov
inc
in
xlat
lds
mov
iret
lahf
aas
jg
xor
mov
data16
mov
stc
repz
xor
fsubs
fcoml
fcmovb
mov
aas
jg
or
and
or
or
fptan
repz
mov
xor
adc
fs
cld
jae
xor
add
or
push
gs
lahf
aas
jg
outsl
pop
lock
fmul
fadds
cld
stc
repz
ds
into
pushl
jmp
incb
adc
sbb
push
push
mov
repz
pop
aaa
fcmovnu
inc
sbb
stc
lret
pop
inc
pop
xor
dec
out
jns
cs
imul
gs
xchg
icebp
fwait
aaa
outsl
fistps
pop
add
sahf
daa
daa
std
jns
out
iret
pop
pop
iret
cli
fs
addl
aaa
outsl
fidivrs
inc
mov
sub
in
repz
fwait
testb
dec
daa
mov
fidivrs
ljmp
push
gs
out
fwait
aaa
dec
adc
jmp
inc
sbb
bound
ret
lock
int
adc
adc
iret
aaa
int
aaa
outsl
aas
mov
movsb
bound
xor
in
out
jns
out
and
shl
mov
iret
lahf
ds
out
stc
out
mov
cmpsb
cld
stc
repz
xorb
insb
pop
movsb
out
ds
sahf
aas
jg
dec
cmp
iret
mov
fidivrl
jns
cmpsb
addr16
push
popa
popa
push
or
or
adc
inc
xchg
lret
rcl
adc
icebp
xchg
int
mov
and
fistps
iret
lahf
inc
push
mov
xor
and
test
adc
push
fstps
jmp
fcmovnbe
movsb
addb
sub
iret
lahf
aas
mov
and
scas
mov
ss
repz
jge
loop
push
cmp
addr16
jg
fcompl
ljmp
cld
leave
in
repz
out
sbb
rcr
out
adc
repz
mov
lret
mov
xchg
lahf
xchg
push
mov
stc
mov
pop
hlt
mov
mov
lcall
jns
stos
das
mov
cmp
iret
lahf
aas
or
dec
adc
out
imul
pushf
cld
stc
repz
pop
inc
cmpsl
mov
jge
and
jg
leave
push
sub
in
das
pop
jl
cld
stc
repz
repz
xchg
sbb
lret
adc
popf
xchg
pop
cs
jle
gs
push
aam
out
jne
in
iret
icebp
aaa
adc
cvtps2pd
push
dec
dec
out
sbb
or
fidivrs
aaa
test
sub
mov
int
aaa
outsl
mov
lahf
inc
xorl
dec
je
dec
shrl
adc
mov
jns
mov
xor
enter
repz
jge
cli
cltd
iret
sbb
bound
jg
cld
stc
cmp
std
sbbb
or
jecxz
cltd
pop
out
lahf
aas
fs
cmpsb
and
je
movsb
sbb
stc
repz
mov
pop
cltd
cmc
mov
push
es
pusha
fstps
pusha
repnz
movsb
rorl
fucomi
test
stc
repz
and
imull
mov
jg
xor
add
push
jp
out
ja
xchg
jmp
je
xlat
mov
mov
mov
sbb
push
dec
lds
mov
jo
bound
jns
out
mov
scas
fstpl
fimull
or
outsl
cmpb
sbbb
jb
fbld
loop
jno
loop
daa
mov
cld
jmp
test
push
and
int
lahf
aas
jg
vmovss
adc
jge
adcb
stos
cltd
inc
stc
stc
repz
ffree
not
scas
daa
jle
mov
sahf
insb
xor
push
and
mov
push
cs
mov
int
subb
cmp
dec
fidivrs
icebp
popf
fisubrs
and
jp
fcmove
fwait
aaa
outsl
and
inc
and
pushf
pop
les
xor
add
stc
test
xchg
add
daa
fstps
sub
scas
sub
jne
lock
out
data16
into
stc
repz
sti
icebp
xchg
add
jno
icebp
jnp
aas
call
cld
rorl
sbbl
out
outsl
fidivrs
loop
sub
cmp
ror
fwait
aaa
out
ficomps
rcrl
loopne
push
cmp
xchg
mov
mov
cld
in
iret
xor
cs
add
imul
out
in
movsl
mov
ret
jo
push
aas
jg
cld
stos
enter
es
push
lds
aam
iret
lahf
mov
sub
xor
inc
lds
fcomip
pop
sbb
lock
lock
aaa
out
sbbb
ja
cmp
repz
fwait
ret
inc
ret
lcall
inc
xor
outsl
fidivrs
addb
cs
rclb
lcall
aaa
mov
cld
in
aas
inc
xchg
fidivrs
xchg
inc
mov
adc
icebp
xorb
mov
xor
and
iret
mov
adc
iret
lahf
aas
call
xor
addr16
dec
jle
je
aam
stc
repz
sbb
aad
movsb
arpl
jle
pushf
ds
pop
imul
stc
repz
pop
sub
outsb
ljmp
push
and
inc
cld
xor
add
xor
jbe
lahf
aas
jg
pop
xchg
mov
sti
and
fidivl
adc
ja
mov
iret
pop
dec
es
push
leave
sarb
or
hlt
cwtl
push
xchg
int
aaa
outsl
cmpsl
mov
lods
cli
jmp
arpl
repz
mov
sub
fsubrp
xchg
fidivrs
sbb
mov
idiv
and
adc
sub
and
jmp
out
fwait
loop
mov
dec
jnp
jge
mov
jl
in
gs
and
int3
pop
stos
xchg
fwait
aaa
outsl
fldlg2
ss
pop
ret
in
jle
iret
mov
jg
mulb
je
lds
lret
repz
mov
and
stos
mov
data16
stc
lahf
aas
jg
jge
pmullw
mov
mov
stc
repz
push
stos
aam
sub
lods
data16
jmp
jg
cld
nop
movsl
cltd
insb
sbb
pop
sub
jae
sub
xchg
lahf
add
jle
push
out
leave
lahf
aas
xchg
dec
ja
mov
sbb
cld
stc
repz
rcr
cmp
jle
scas
cmpsb
mov
pop
xchg
mov
scas
sbb
aaa
out
sub
into
push
cmpsl
imul
aaa
ret
out
fwait
jge
movsb
cmp
push
sub
outsl
fidivrs
std
and
pop
addr16
xchg
sahf
jp
stos
or
addr16
push
int
aaa
adc
push
cmpb
fdiv
stc
adc
mov
jmp
popa
stos
outsb
daa
aaa
outsl
fdivrp
adc
pop
stc
imul
fwait
mov
outsb
adc
push
cmp
out
outsl
dec
fstps
or
jo
jg
cld
push
jg
push
dec
insl
cwtl
fiadds
mov
inc
sub
pop
stos
roll
pop
pop
lea
mov
jecxz
add
out
pop
mov
mov
jmp
pop
mov
cld
aam
mov
mov
loope
mov
mov
outsb
negl
sbb
call
loopew
jns
out
sub
aaa
mov
jmp
cli
xchg
mov
repnz
jae
in
pop
push
arpl
jns
out
sbb
leave
xchg
sbb
jae
xchg
insl
sti
jb
adc
leave
imul
ret
repz
fwait
js
mov
add
jmp
testb
mov
mov
loop
xlat
mov
adc
out
fwait
aaa
mov
mov
mov
fisttps
adc
loope
adc
dec
out
xchg
lahf
push
or
cld
xchg
and
daa
push
pusha
stos
aam
or
add
xchg
jp
outsl
fdivrp
or
cmp
stc
pop
push
fcomp
out
fwait
aaa
lcall
mov
aas
dec
cld
cmp
addl
int
icebp
icebp
push
aam
inc
jle
lds
lahf
aas
xlat
fbstp
mov
aaa
outsl
mov
cmp
out
fwait
subl
ljmp
mov
outsl
fidivrs
and
int3
pop
scas
fisubl
xor
xor
fwait
out
fwait
aaa
add
out
pop
iret
aam
in
cld
mov
add
pop
test
push
pushf
out
imul
pop
and
and
lock
aas
jg
mov
inc
aam
pop
and
data16
loop
xchg
mov
orb
mov
sbb
adc
sbb
ss
fidivrs
sub
pushf
imul
inc
inc
xlat
jbe
push
adc
repnz
in
ficomps
jecxz
or
push
jmp
push
push
push
es
mov
and
jg
insb
push
imul
cld
stc
repz
inc
cli
or
frndint
daa
jmp
mov
jg
fnstenv
sbb
xor
mov
sbb
cmp
cmpsl
push
pop
cli
addl
xlat
dec
pop
out
lahf
ds
inc
ja
jne
mov
iret
mov
repnz
adc
dec
addr16
fs
stos
xor
sbb
in
sub
fdivrl
pop
xor
lock
cmp
inc
and
int
push
out
mov
fwait
inc
mov
fidivrs
inc
test
jmp
push
mov
fwait
aaa
outsl
push
cmc
push
and
in
std
mov
out
les
pushf
iret
cltd
std
enter
test
idivl
test
dec
int
xlat
pop
orl
mov
enter
mov
popa
jmp
cmp
inc
xlat
outsl
jl
dec
testl
push
jae
xchg
sub
mov
out
fwait
aaa
cmp
std
lret
repz
jns
lds
jg
mov
jecxz
imull
jb
nop
fwait
aaa
outsl
adc
add
out
mov
int
pusha
xor
dec
and
stc
rep
mov
repnz
addl
aas
jg
cld
addl
xchg
lock
mov
inc
push
in
lahf
stos
mul
pop
sub
repz
shlb
mov
pushf
gs
imulb
jns
stc
sbb
cmp
hlt
repz
pop
in
stc
cld
mov
cmp
push
xchg
push
mov
add
cli
data16
daa
push
sbb
mov
shll
jmp
fwait
aaa
pop
sbb
adc
xchg
push
sub
adc
js
sub
mov
lahf
push
sbb
mov
xor
in
xchg
adc
sbb
aaa
fwait
xchg
aad
mov
and
dec
outsb
xor
mov
dec
dec
cmp
inc
es
lret
je
sbb
and
push
shlb
push
aam
adc
out
js
pop
out
mov
dec
int
aaa
rcr
aas
xor
mov
push
adc
in
imul
int
xor
fldcw
out
loopne
fwait
mov
paddusb
repz
lahf
aas
jmp
das
bound
ljmp
pop
std
cld
mov
nop
dec
push
mov
iret
lahf
aas
jg
inc
or
or
push
jae
xor
loope
stc
repz
dec
mov
jl
insb
cmp
sti
push
jne
aas
jg
out
jg
addr16
mov
add
stc
repz
xor
mov
mov
jle
cld
pop
pop
dec
inc
sbb
xchg
xor
mov
enter
movsb
pushf
fxsave
ja
sbb
push
inc
cmpsb
or
daa
ds
cmpl
mov
xchg
mov
cli
enter
rep
pop
cltd
test
fcoms
dec
shr
filds
es
lods
outsl
stos
push
add
add
je
xchg
cmpsl
mov
push
cmp
int
aaa
lret
inc
lea
xchg
pop
xlat
nop
movsb
dec
pop
push
cmp
repz
cmpsl
ret
xchg
daa
enter
xchg
jb
mov
arpl
cld
sti
packsswb
arpl
ss
dec
bound
iret
lahf
aas
aaa
test
xor
push
loopne
sub
in
int
outsl
daa
les
mov
arpl
out
cmc
rclb
outsl
insb
push
aas
ds
std
mov
jl
std
cmc
xchg
pop
xchg
imull
iret
mov
jp
ljmp
aas
jg
cld
clc
xchg
addr16
daa
imul
repz
lahf
lods
fidivrs
stc
popf
cwtl
add
movb
jg
cld
stc
lds
push
sub
push
fcmovu
push
mov
out
lahf
aas
mov
pop
gs
cld
stc
repz
mov
rcll
add
pop
aad
mov
cld
andl
test
sub
inc
popf
movsb
sbbl
add
mov
add
cmp
adc
pop
out
call
mul
push
inc
aas
mov
mov
push
pop
add
aas
jg
or
lcall
test
mov
repz
fldt
sbb
in
mov
jg
cld
pop
shlb
sbbb
lcall
and
outsb
testl
inc
mov
adc
hlt
or
cld
stc
xor
push
and
add
lahf
aas
xchg
addr16
leave
jge
cld
stc
repz
aaa
test
pop
test
iret
iret
cli
push
dec
repnz
mov
pop
adc
inc
mov
xchg
pop
jns
out
outsb
aas
mov
mov
ja
outsl
fidivrs
xchg
cmpsl
xor
adc
mov
rolb
xor
dec
jmp
push
lock
in
dec
call
jmp
outsl
fidivrs
outsl
std
out
lret
fneni(8087
add
push
cld
xor
pop
add
call
sbb
mov
outsl
fidivrs
adc
loop
cltd
push
sbb
cmp
gs
clc
mov
mov
cmp
ret
jo
push
das
adc
mov
fwait
aaa
adc
call
in
neg
mov
std
xlat
or
jl
rcrb
in
or
mov
aaa
outsl
pop
and
or
push
pop
mov
jb
out
mov
ja
adc
fs
icebp
adc
mov
iret
cmpsl
adc
js
bound
xchg
outsb
std
fistps
pushf
test
fdivrl
aam
pop
adc
repz
scas
cmp
mov
cld
stc
adc
or
push
outsl
dec
aaa
inc
adc
andl
or
daa
sub
aas
jg
sub
sub
in
orb
outsb
jb
repz
repz
fucomi
push
add
xor
push
add
cld
ret
fwait
out
or
outsl
add
mov
iret
lahf
mov
test
mov
push
scas
int
fwait
aaa
adc
sbb
jmp
cmp
mov
imul
mov
cwtl
sub
outsl
fisubs
pop
mov
loopne
scas
mov
shll
out
lds
inc
cwtl
decb
scas
into
arpl
mov
jl
xchg
cltd
data16
dec
mov
xor
fwait
aaa
scas
subl
sbb
mov
and
bound
mov
mov
out
pop
stc
inc
fistpll
xor
cld
cld
stc
jp
cli
mov
push
pop
cmpsl
sbb
xchg
lahf
rorb
repz
mov
xor
ss
and
inc
fidivrs
cmp
enter
mov
push
addr16
int3
stc
add
push
xor
or
and
enter
scas
lret
push
mov
cmp
lods
out
inc
mov
push
loopne
dec
neg
pop
scas
movsl
out
outsl
fidivrs
je
push
out
sarb
pop
out
fwait
aaa
sub
push
jg
lret
stos
jle
cmpl
xlat
fsubrl
lock
adc
std
or
inc
es
fwait
inc
fisubl
outsl
out
mov
dec
xchg
clc
dec
jo
inc
mov
and
mov
mov
ja
div
flds
flds
insb
ficoms
aam
and
and
add
add
inc
jns
out
je
pop
jle
sub
iret
mov
push
adc
mov
adc
andb
fstpl
mov
xor
std
pop
pop
imul
push
repz
xchg
cmp
lcall
repz
repz
dec
push
ds
add
rclb
adc
lods
xchg
in
inc
test
xchg
in
lahf
jg
jb
pop
int3
rorb
cmp
pop
push
imul
dec
jl
sbb
repz
push
and
adc
mov
outsl
ficomps
pusha
std
push
ret
adc
adc
not
pop
push
fstpt
repz
je
add
fs
push
inc
inc
aam
out
lahf
cwtl
push
mov
fwait
cmpl
pop
sub
jae
icebp
daa
fwait
aaa
outsl
or
add
adc
lock
adc
inc
int
aaa
rol
pop
cmp
adc
cltd
adc
out
sbb
lea
daa
jmp
push
adc
xchg
ret
push
dec
test
dec
dec
jb
loope
inc
push
nop
repnz
inc
push
ret
in
fucomip
cmp
mov
xchg
mov
dec
into
cmp
repz
movsb
xlat
mov
int3
jl
shrl
cld
adc
push
adc
dec
push
xchg
fcomip
cld
imul
mov
lahf
jg
mov
xchg
inc
dec
bound
adc
mov
stc
repz
inc
push
add
adc
mov
inc
aaa
sbb
jns
out
ret
mov
mov
sbb
pop
mov
fwait
aaa
outsl
fisubrs
int3
in
or
mov
and
fdivrs
in
outsb
fdivrp
je
xchg
outsl
fidivrs
shrl
xor
or
repz
fwait
enter
mov
add
call
jns
jae
or
push
scas
mov
fdiv
popf
bound
mov
repnz
inc
iret
repz
jg
cmp
mov
sahf
jns
dec
arpl
mov
ljmp
cmp
adcl
lahf
push
mov
aam
pop
pop
mov
push
dec
iret
jle
repz
fwait
movsl
cld
jmp
push
xor
outsl
fidivrs
mov
insl
nop
xchg
divb
out
sbb
jge
xchg
fwait
aaa
mov
es
adc
repz
negl
xchg
in
jecxz
shl
aaa
outsl
fidivrs
dec
jns
xchg
fwait
mov
shll
out
ficompl
xchg
adc
outsl
fidivrs
push
repz
mov
mov
int
aas
and
stos
push
ljmp
repz
and
stc
repz
sub
imul
cld
fbld
jle
xchg
push
mov
divl
fidivrs
xchg
sub
or
sbb
jmp
daa
sub
int
aaa
insb
adc
add
mov
std
mov
cld
dec
pop
jge
repz
xor
ds
push
jecxz
int
fsubl
xchg
and
orl
aam
jnp
hlt
xchg
orb
pmaxub
into
incl
mov
test
int
aaa
outsl
push
mov
sub
push
ret
mov
sbb
cmp
pop
int3
mov
mov
inc
mov
bound
jae
aaa
repz
fwait
adc
sbb
rorb
mov
lahf
jmp
shll
inc
test
cmp
stc
repz
mov
dec
mov
add
cmpsb
lea
pop
mov
pop
imul
ljmp
sub
lret
pusha
in
out
pusha
dec
fidivrs
jae
mov
pop
dec
mov
aaa
outsl
dec
loopne
sbb
jl
mov
stos
mov
dec
add
decl
andl
loope
je
push
ljmp
repnz
jns
out
and
add
sub
xchg
pusha
xlat
insb
and
outsl
fidivrs
push
add
movsb
mov
sbb
jl
out
fwait
xlat
int
pop
int
test
and
insb
fidivrs
inc
cmp
dec
enter
push
cld
mov
cmpsl
mov
rdpmc
adc
adc
jg
out
ss
sbb
dec
xor
stc
repz
pop
xor
int
mov
lock
inc
mov
push
insb
inc
daa
mov
or
fwait
aaa
outsl
adc
or
sarb
mov
mov
push
das
jecxz
inc
inc
xchg
int
stos
popf
and
outsl
fidivs
jne
ret
mov
or
repz
imul
ffreep
shrb
je
aaa
outsl
fidivrs
cld
aad
mov
das
push
repz
fwait
cmp
mov
outsl
mov
fidivrs
mov
fsubs
push
lock
cwtl
bound
insl
enter
lods
fstps
mov
sbb
dec
mov
mov
aaa
stc
pop
jns
subl
push
fwait
aaa
outsl
pop
sub
jns
dec
xor
adc
lahf
outsl
jns
out
jb
cmp
lret
lret
mov
mov
loope
jnp
andb
mov
jg
cld
mov
aam
dec
xchg
lods
fwait
out
cmp
aas
setle
xchg
fs
into
jg
repnz
testb
mov
outsb
xchg
lahf
aas
adc
ss
or
add
repz
sub
inc
rcrl
pop
cld
test
pop
jecxz
mov
adc
and
sub
addr16
sbb
xorl
add
cld
adc
out
shlb
xchg
xchg
mov
incb
pop
addr16
test
pop
xor
aaa
outsl
fwait
push
test
arpl
sub
int
f2xm1
jns
jno
mov
lcall
xchg
aaa
outsl
fidivrs
scas
cmpsb
das
stos
fstps
or
ret
push
mov
sbb
xchg
sbb
stc
sub
shlb
outsb
fidivrs
dec
pop
fmull
int3
cmp
daa
scas
dec
call
test
inc
aas
jg
cld
xor
cwtl
fs
pop
inc
cmpl
pop
sbb
repz
lahf
xchg
dec
clc
and
ljmp
cld
stc
ret
sub
adc
xchg
mov
call
std
outsb
lock
or
sub
out
aaa
outsl
sub
repz
fwait
mov
mov
jne
int
fldt
pop
cmp
fwait
inc
arpl
scas
cmp
test
mov
jns
out
shll
fistps
inc
jle
fwait
aaa
outsl
fimuls
mov
xchg
jno
and
jns
out
insb
in
test
jg
push
jl
add
cmc
or
popa
fyl2xp1
lcall
xor
mov
stc
test
outsl
repnz
fcmovnu
ljmp
fistps
aas
jg
cld
out
adc
stos
addr16
fldenv
aam
mov
popa
inc
mov
mov
fwait
call
xchg
ljmp
cmpsb
imul
mov
jecxz
jns
mov
add
cwtl
xchg
cmp
ds
lahf
fwait
jge
out
pop
mov
orb
stc
stc
repz
mov
out
jg
lods
rcr
aam
aaa
out
stos
iret
addr16
and
inc
adc
subl
mov
jg
shrl
pusha
lahf
stos
aaa
outsl
fidivrs
xor
imull
or
repz
fwait
repnz
xlat
and
push
outsl
jle
mov
popa
dec
dec
dec
int3
out
mov
leave
mov
aaa
outsl
jp
or
cli
mov
sbb
mov
pop
mov
add
arpl
fidivrs
in
fsubrs
fs
repz
lahf
lcall
cmpsb
std
jne
fcmovu
inc
cld
stc
test
ljmp
fwait
aaa
inc
add
imulb
out
in
cmp
pop
pop
and
scas
sub
adc
mov
and
hlt
enter
mov
mov
ljmp
or
adc
push
and
pop
cmp
mov
xchg
sbb
xor
dec
pop
push
enter
jp
mov
lds
dec
xchg
fwait
pop
repz
hlt
jl
jb
dec
push
mov
sub
jne
fidivrs
in
pop
decl
imul
ds
hlt
out
fwait
aaa
dec
imul
fcompp
jns
and
xor
daa
mov
test
or
jl
loop
push
icebp
cmpl
aaa
outsl
fidivrs
mov
push
shlb
dec
ljmp
lahf
fbld
addr16
inc
xchg
popf
and
outsl
fidivrs
decl
push
xor
f2xm1
jbe
out
fwait
aaa
xlat
cmp
and
imul
repz
push
fs
xchg
sbb
or
fwait
aaa
outsl
mov
xchg
flds
mov
mov
mov
lods
mov
add
add
decl
call
xchg
fwait
stos
push
rorb
lock
int
aaa
movsb
add
outsb
outsl
push
pop
mov
jne
lock
jg
out
push
lahf
imul
mov
daa
push
ds
pop
das
push
cltd
aaa
push
xchg
or
js
cwtl
aas
jg
hlt
mov
shr
push
push
adc
push
inc
mov
push
mov
inc
mov
sti
shll
cld
xor
cld
stc
pushf
aam
jb
scas
mov
pop
aas
pop
das
loope
xor
aas
aad
test
or
dec
jg
cld
stc
repz
push
bound
data16
push
jg
mov
lcall
jno
mov
dec
cld
stc
repz
push
cmp
fisubl
inc
push
fiadds
aas
stc
scas
xchg
mov
or
jg
cli
sti
mov
fwait
aaa
outsl
mov
dec
adc
push
repz
pop
out
icebp
enter
imul
mov
cld
inc
das
enter
ss
xor
test
and
stc
lret
je
sbb
aad
mov
xor
jae
cmpsl
pop
testl
gs
xlat
cltd
cmpsl
stos
dec
into
jns
out
mov
das
ds
push
mov
xchg
cmpsb
rol
aad
xchg
call
int
dec
mov
dec
cld
insb
jl
mov
jns
adc
inc
mov
loop
arpl
pusha
in
fsubl
fwait
aaa
call
lahf
ss
aaa
outsl
fiadds
ljmp
test
fcmovnu
repz
fwait
mov
fwait
sbb
mov
mov
and
loopne
andl
inc
shr
xchg
fwait
aaa
imul
out
mov
add
and
dec
lea
jp
and
mov
jmp
push
dec
vpshaw
mov
push
cld
stc
repz
mov
cmpl
ljmp
outsl
mov
out
outsl
mov
mov
push
inc
xorb
lahf
out
not
push
pop
jmp
loopne
out
fwait
aaa
push
das
pushf
mov
xor
js
lock
fidivrs
mov
inc
mov
mov
cmc
jno
fnstcw
outsl
out
das
push
icebp
lds
adc
mov
cld
cmp
out
or
iret
fldz
cwtl
js
out
pop
add
movsb
lahf
aas
lcall
rcl
push
loop
inc
adc
out
cmpl
test
int
fisttpll
mov
dec
cli
push
fnstcw
in
mov
dec
cmp
pop
sub
pop
dec
sub
jns
repz
mov
fnsave
lods
inc
mov
mov
aaa
outsl
fidivrs
sar
arpl
ljmp
push
jo
shr
push
and
inc
data16
outsl
fidivrs
or
aam
hlt
push
inc
xchg
out
fwait
aaa
add
sbb
sub
cmc
fwait
push
fs
fidivrs
and
daa
cmpsb
ret
lret
loopne
jle
push
shll
aaa
outsl
or
fdivrl
sahf
pushf
xor
jge
lds
ja
sbb
nop
stos
flds
sbb
jl
hlt
xchg
add
or
jmp
aaa
outsl
fisubs
dec
sbbb
jge
pop
xchg
and
out
dec
rorl
mov
and
les
fidivrs
dec
dec
mov
loop,pn
push
add
repz
fwait
cli
icebp
mov
fisubs
push
sbb
jns
add
shlb
fwait
sub
lods
scas
add
pop
rolb
loope
pop
xchg
push
fwait
mov
xor
dec
les
add
xor
fidivs
divb
mov
fwait
ja
pushf
addr16
in
pop
or
jmp
enter
adc
lcall
dec
jb
inc
lret
inc
iret
into
call
cmpsl
aas
jg
cld
dec
fbld
xor
adc
pop
pop
repz
lahf
aaa
sti
jae
mov
jbe
cli
je
movsl
adc
jle
stc
mov
sub
mov
mov
sub
aad
sahf
fdivrl
in
xor
dec
cmp
insb
sub
dec
fcomi
xchg
int
mov
mov
push
daa
mov
dec
inc
xchg
ss
out
jle
dec
cli
xchg
sub
aaa
outsl
fidivrs
ljmp
jb
fdiv
out
fwait
jle
inc
cld
std
lret
push
mov
fidivrs
xor
cmp
jno
out
divb
xor
inc
lods
gs
stc
ja
out
mov
fistl
cmp
jmp
iret
lahf
aas
jg
mov
xchg
movsl
movb
out
push
jns
jge
andb
adc
test
jl
dec
inc
push
push
out
and
fidivrs
mov
pop
xlat
stos
push
rcll
sbb
sub
jo
dec
jb
or
imulb
adc
aaa
outsb
and
das
aaa
outsl
fidivrs
icebp
in
mov
dec
out
shll
xchg
loope
inc
add
jl
fidivrs
jecxz
push
shll
stos
jge
int
or
sub
sub
sbb
out
xor
pop
lcall
adc
jb
and
test
push
aam
aaa
outsl
fisubrs
sti
and
push
cmpsl
ds
enter
test
pop
loopne
cmp
mov
or
and
and
loopne
aaa
outsl
ficomps
das
or
call
mov
mov
enter
dec
push
push
cmc
pop
inc
out
out
idivb
outsl
fidivrs
and
mov
cmp
xlat
fsubp
int
aaa
es
loope
push
outsl
xchg
fwait
or
mov
cmp
sub
mov
repz
aaa
outsl
faddp
push
pop
adc
flds
adc
repz
enter
sub
ljmp
jns
and
mov
cld
mov
jno
int
aaa
icebp
js
cmp
sahf
pushf
inc
inc
cmp
jns
and
fisttpl
push
ficoms
dec
adc
mov
ja
and
vpunpckhwd
pop
fdivs
in
dec
xchg
xchg
xchg
aaa
insb
jns
out
dec
aas
dec
aam
je
icebp
dec
pop
ja
and
dec
addl
scas
and
jns
push
aaa
aam
sub
imul
js
cwtl
mov
pop
mov
repz
fwait
dec
dec
mov
outsb
sub
sbb
imul
xor
dec
ficoml
sbbl
cld
mov
xchg
ss
fwait
ds
jg
adc
pop
mov
out
aam
mov
mov
cmp
fidivrs
ret
push
jmp
test
adc
cltd
testl
mov
cld
stc
shrl
repz
lahf
fnstsw
int3
pop
stos
stc
ret
lahf
aas
dec
aam
movsl
add
add
sbb
stc
repz
gs
mov
dec
cmp
fs
in
ss
out
and
sbb
lods
out
sub
cli
push
sub
lods
and
rcrb
popl
mov
jle
filds
sbb
repz
lahf
mov
sbb
push
add
outsl
outsb
fiadds
lret
outsl
pop
aaa
dec
cmp
insl
push
out
adc
scas
iret
pop
out
mov
daa
test
daa
movsl
cwtl
cld
stc
repz
mov
ret
negl
outsb
push
repnz
daa
jg
loopne
xchg
sbb
mov
xorb
xchg
out
add
cmp
jg
pop
mov
in
ja
rcr
repnz
jnp
stc
repz
jae
push
jge
xchg
push
sub
hlt
fnstenv
and
jg
adc
xor
jp
fistpl
repnz
fwait
cmpsl
or
int
mov
idivl
shll
outsl
fidivrs
sti
shrl
xchg
adc
repz
fwait
das
int
dec
push
call
fwait
rorb
cmp
push
xor
xchg
clc
bound
and
aas
int
cmp
and
movsl
mov
in
adc
mov
push
popa
push
out
rorl
cld
add
out
cmp
jl
cwtl
sti
js
call
outsl
fsubrp
or
mov
arpl
int
sarb
xlat
sbb
ret
aaa
outsl
fidivrs
mov
repz
int
inc
push
mov
sahf
sbb
pop
inc
ss
outsl
fidivrs
rol
mov
sub
mov
test
shl
jge
imul
outsb
iret
movsb
sbb
movsl
sbb
and
sbb
xadd
jns
hlt
es
out
push
sub
add
push
mov
fisubrs
push
lea
int3
cmpb
int
ljmp
mov
aaa
outsl
fidivrs
test
dec
add
xor
sub
shrl
xor
add
push
cmp
ret
push
pop
add
outsl
add
lahf
jmp
loop
cmp
dec
int
aaa
outsl
cmpb
xlat
mov
int
jno
mov
xchg
das
addr16
outsw
push
aaa
outsl
fidivs
push
jmp
cmpsb
xlat
xchg
stc
in
in
outsb
mov
ret
fcom
sub
fidivl
aas
jg
sbb
or
out
es
sub
repnz
xor
cld
gs
and
imul
leave
scas
sub
jge
addr16
mov
arpl
inc
push
pop
cwtl
iret
mov
mov
cltd
jl,pn
cld
stc
repz
or
subb
stos
and
jo
add
cmp
lds
fnstcw
sbb
jno
pop
cmpl
pop
sub
loope
jg
cld
xor
xor
das
adcb
pop
pop
rol
iret
lahf
mov
clc
xor
daa
aad
out
cmpsl
jge
jg,pn
aaa
outsl
fiadds
sub
pop
add
add
int
cld
jmp
sbb
movsb
std
or
lahf
aas
jg
adc
es
inc
mov
ror
jbe
mov
lahf
aas
jg
jle
hlt
push
adc
mov
pop
outsb
pop
and
mov
mov
test
loopne
movsb
cmp
sub
ret
psubw
out
ds
xchg
xchg
mov
mov
icebp
mov
inc
push
pusha
add
push
lret
rorl
jo
insl
repz
lahf
and
stc
pushf
pop
xchg
adc
xlat
cmp
cld
stc
out
data16
test
cmp
shlb
nop
sub
addb
aas
ss
out
mov
push
pushf
adc
ljmp
pop
fwait
aaa
outsl
fisubs
cmpsb
mov
sbb
push
cli
enter
cmp
testl
in
lahf
shl
out
pop
pop
cmpsb
xchg
fadds
jnp
dec
mov
cld
stc
jl
mov
mov
mov
shlb
and
iret
lahf
aas
shll
pop
pop
jle
push
mov
cmp
cld
stc
repz
shlb
dec
inc
fs
mov
popa
hlt
mov
lahf
aas
jg
mov
std
test
mov
icebp
leave
in
dec
mov
xor
ds
iret
loop
mov
xor
test
push
xchg
mov
cmp
mov
repz
xchg
adc
or
xchg
jecxz
cmp
adc
fidivrs
inc
jl
lcall
out
mov
mov
fld
call
jmp
outsl
xchg
in
adc
cld
stc
inc
insl
fistpll
jb
stc
into
faddl
sub
comiss
mov
outsl
testl
inc
pushf
adc
repz
push
or
je
aaa
sarl
loopne
outsl
ficoms
andl
inc
pop
vcvtdq2pd
iret
fwait
jp
sub
add
mov
xor
mov
mov
clc
int
aaa
outsl
lret
push
jo
jle
add
ljmp
sbbb
cmpsl
int
ja
push
nop
outsl
fs
loopne
inc
sbb
pop
mov
jge
lret
stc
pop
sarl
inc
cmp
out
addr16
add
mov
out
das
sbb
mov
cmp
adc
out
inc
cmp
dec
inc
shll
push
lcall
xchg
xchg
loope
inc
inc
andl
rcrb
jg
inc
adc
push
push
aam
sbb
mov
testl
mov
lahf
jg
inc
sub
pop
aad
ja
or
fadds
out
add
push
arpl
out
insb
imul
jo
enter
ss
add
ja
xor
stc
addb
and
fisubl
out
aas
jg
xchg
cmpsl
xchg
sbb
inc
rorb
lcall
iret
sahf
mov
xor
les
aad
inc
pop
shl
cld
lret
fistpll
mov
sub
ds
push
sub
push
adc
mov
lea
jmp
fwait
or
aas
inc
lea
pushf
adc
out
lahf
aas
arpl
add
add
repz
lret
mov
pop
xor
imul
jno
test
push
xchg
lahf
aas
jg
sbb
xor
mov
cmp
cmpsb
pusha
sahf
aaa
test
lds
fdivrl
mov
rcl
out
push
fs
push
aas
add
or
iret
mov
pop
call
mov
stc
rep
adc
jl
sub
fsubrp
cwtl
hlt
adc
push
es
and
test
mul
int
test
xchg
fdivl
stc
sub
repz
sub
popf
imul
mov
lock
sbb
out
or
fs
jb
jb
ss
jg
cld
and
std
xchg
mov
push
push
mov
outsl
ficoms
mov
inc
stc
jge
inc
rcr
or
aaa
idivl
pop
aam
mov
jno
cmp
mov
je
lret
clc
aas
sub
mov
loope
jmp
fstpl
xchg
add
mov
pop
sbb
jae
outsl
fiadds
jno
ffreep
jg
movsl
xchg
push
repz
out
and
inc
cwtl
mov
ret
fcomps
cld
stc
and
fdivrp
add
xchg
nop
lds
lahf
aas
mov
shl
xchg
pop
int
jg
lds
sub
lahf
lret
ja
out
lahf
aas
shl
mov
dec
mov
in
cld
stc
repz
adc
ljmp
pop
ror
lahf
aas
jg
fs
bswap
nop
mov
repz
shrl
adc
insb
fidivrs
mov
adc
leave
outsl
fiadds
push
or
jecxz
and
and
fwait
aaa
cmp
dec
int3
mov
mov
mov
add
push
xchg
jmp
enter
cwtl
out
push
cmp
mov
std
mov
add
shlb
lahf
sub
xor
int
aaa
dec
jle
shll
adc
ss
mov
lahf
cwtl
insb
stos
aad
ds
loope
mov
pop
mov
divb
int
aaa
outsl
add
fistl
adc
jns
out
sbb
testl
loopne
and
inc
dec
and
cmpsl
sbb
jo
and
jo
pop
xor
pop
jo
aaa
and
js
aaa
and
and
rolb
and
and
jo
and
and
inc
add
and
add
xor
mull
pshufw
inc
and
and
pop
xchg
daa
and
sbb
enter
inc
xor
xor
and
and
and
das
rolb
and
inc
or
and
jo
ret
and
pop
jae
add
and
pop
pop
adc
and
and
and
leave
inc
add
and
adc
and
jb
and
mov
adc
and
and
cmpsl
mov
jo
sub
and
and
inc
in
iret
lea
lods
mov
fwait
aaa
roll
das
iret
dec
mov
leave
shlb
out
or
lods
inc
sub
jb
icebp
loop
sub
cld
pop
xor
jns
sub
dec
mov
ficoml
and
adc
jmp
cmp
fucomi
push
cmp
lods
mov
mov
mov
or
cvtps2pi
sbb
aas
and
mull
adc
push
sub
cld
stc
pop
dec
push
gs
sbb
xor
inc
out
or
jp
stc
repz
aaa
je
js
je
arpl
outsb
aaa
mov
sub
xchg
or
hlt
mov
lea
aad
frstor
enter
jg
call
jbe
mov
dec
test
cltd
out
testb
xchg
xchg
les
mov
fdivrp
mov
inc
cld
ja
lahf
cli
dec
dec
daa
sarl
les
aaa
outsl
and
test
cmp
inc
mov
cltd
sub
dec
cld
adcl
lahf
cmp
xlat
outsb
cltd
cli
repz
add
and
cmc
xor
cmpsb
pop
sub
je
jns
scas
das
jbe
xchg
scas
aaa
roll
sti
sub
cs
fwait
jae
mov
out
jl
repz
push
jl
mov
xlat
jecxz
into
lahf
push
hlt
and
std
fcoms
cmp
test
aas
push
or
stc
repz
in
mov
mov
push
fdivrl
out
adc
push
pop
mov
enter
sbb
aaa
push
cmp
out
pop
jl
cmp
loope
mov
sti
das
xchg
pop
mov
aaa
cmp
rolb
call
fmull
stos
ljmp
push
clc
cld
stc
repz
sub
and
aad
in
sbb
dec
jno
lahf
aas
jg
scas
repz
add
stc
repz
lods
mul
icebp
jge
jne
lods
and
and
or
jg
jae
jecxz
lret
xchg
sbb
push
xor
inc
int
mov
fwait
ja
daa
pusha
xor
sbb
repz
pop
dec
add
aas
and
out
sahf
adc
and
jns
fcoml
push
xor
and
mov
mov
andb
sbb
inc
adc
pop
ja
cmp
mov
out
lahf
jg
loop
jecxz
mov
je
or
cld
stc
repz
cmp
cld
mov
jo
mov
inc
jle
add
push
sti
and
outsl
fiadds
sbb
int
out
imul
pop
sbb
int
aaa
xor
push
hlt
rclb
mov
jp
fstpl
push
inc
imul
ret
shlb
addr16
lods
repz
and
int3
lock
stos
filds
das
ds
cmp
imul
or
jno
mov
fs
jb
dec
cltd
push
and
jnp
xorl
add
in
inc
mov
jns
scas
mov
and
or
sub
fnstcw
stc
fsubl
mov
addl
addr16
mov
loopne,pn
jns
int3
and
pop
fidivrs
stc
jno
out
clc
sbb
xchg
xorl
inc
movb
push
fs
enter
out
into
or
inc
jp
arpl
pop
push
test
aas
and
adc
fmuls
pop
jge
pop
int3
mov
cmpb
repz
outsl
adc
addl
out
fbstp
insl
mov
lcall
jp
fidivrs
push
test
fwait
dec
andl
and
int3
psubsb
mov
ds
bswap
test
stc
and
add
sub
iret
lahf
aas
data16
out
mov
mov
cld
stc
repz
dec
clc
std
scas
outsl
fs
out
repnz
lahf
aas
jg
xchg
cmpsb
add
mov
repz
mov
enter
ds
stos
outsl
fidivrs
inc
ja
mov
push
loopne
cwtl
out
fwait
aaa
insl
popa
add
xchg
lock
lret
add
repz
xor
aas
int
mov
aaa
outsl
fsubp
js
rclb
inc
ja
test
out
loopne
sbb
aaa
inc
xchg
cmp
mov
aaa
outsl
fidivrs
lcall
test
hlt
xchg
int
xor
pop
and
adc
imul
das
in
out
fmul
mov
dec
aaa
outsl
fidivrs
das
or
pop
push
mov
fwait
xchg
test
fidivrs
sub
mov
mov
es
aaa
outsl
stos
nop
sub
dec
mov
dec
jge
repz
mov
adc
pop
loope
dec
push
lahf
aas
jg
pop
jecxz
imul
mov
or
je
out
roll
int3
push
fidivrs
pusha
shrd
push
bound
mov
int
pop
outsb
jne
fldl
lea
das
jb
mov
fs
enter
and
and
inc
sbb
fwait
aaa
outsl
pop
mov
inc
aad
inc
xor
mov
test
sbb
rcrl
jmp
sbb
mov
fsubl
jns
out
inc
std
sahf
cmp
or
cwtl
js
repnz
lock
outsl
fidivrs
dec
sbb
sub
stos
sahf
fisubl
repz
fwait
das
mov
pop
jecxz
mov
mov
int3
pop
mov
in
sbb
pushf
call
iret
outsl
mov
enter
inc
movl
jne
int
aad
xchg
std
push
in
ds
repz
sti
jp
imul
pusha
xchg
out
aas
das
jne
pop
pop
add
add
jg
cld
stc
jmp
rolb
xchg
sbb
out
lahf
aas
neg
cmp
adc
pop
push
stc
repz
sub
mov
mov
add
or
xrelease
jg
cld
push
push
and
fisttpl
out
lahf
jecxz
sahf
pop
sub
jecxz
test
pop
push
bound
cld
stc
rcrl
insb
mov
jg
out
xlat
push
jle
sahf
aas
inc
js
push
mov
aas
ljmp
inc
insl
xchg
xchg
push
cmc
sub
mov
repz
lahf
mov
test
mov
jecxz
pop
adc
cld
stc
rorl
loope
test
xchg
imul
out
lahf
aas
adc
daa
adc
out
imul
cld
stc
repz
push
xor
push
cmc
fimuls
push
push
iret
lahf
aas
jg
jl
pop
insb
loopne
push
or
in
xchg
sbb
stc
repz
pusha
lcall
out
lea
test
inc
xchg
pop
iret
cmp
fwait
aaa
add
pop
dec
or
cld
jnp
out
jnp
and
cmp
push
mov
mov
fisubs
pop
ss
adc
jno
fwait
aaa
shlb
sahf
leave
pop
outsl
mov
fldt
lea
mov
enter
fdivrl
dec
adc
inc
inc
cmpsb
or
fwait
aaa
out
stos
das
fs
data16
cmp
int
ret
push
hlt
hlt
push
jl
mov
fidivrs
push
rcrb
sarb
mov
int
enter
imul
ficoml
and
loopne
mov
fcoms
cwtl
mov
jns
scas
mov
mov
arpl
pop
and
fnstcw
call
shlb
xlat
push
outsl
and
mov
sbb
adc
repz
pop
inc
xor
js
call
outsl
fidivrs
pop
outsl
std
xchg
ljmp
dec
mov
inc
out
ret
lcall
push
and
aas
dec
mov
cmp
sub
and
jne
out
fwait
outsl
mov
loope
push
jmp
jns
mov
repz
lret
ret
ss
xor
adc
push
js
and
xchg
es
push
outsl
fidivrs
sub
pop
pusha
and
imul
fwait
aaa
lds
or
sub
or
scas
sub
fs
xchg
orb
inc
xor
jo
aam
mov
or
daa
fwait
mov
push
insl
loope
iret
mov
fisttpll
pusha
fwait
aaa
outsl
fdivrp
in
into
mov
sbb
ja
sub
loop
add
mov
xor
inc
aad
xor
jge
cmpsb
out
divl
loope
mov
sarl
addr16
dec
jns
inc
dec
jg
mov
or
push
xor
repz
mov
fsubrl
xchg
inc
push
rolb
mov
xor
sbbb
out
mov
mov
dec
push
fidivrs
jmp
int3
scas
ret
enter
lahf
xor
dec
test
pop
lods
cs
shl
das
fnstcw
shrd
dec
aaa
outsl
mov
lods
int3
scas
ja
dec
std
mov
int
adc
xlat
popf
jp
loopne
sub
mov
jns
in
cwtl
in
and
mov
cld
incl
lds
xor
fwait
aaa
movq
in
in
pop
jae
int
sub
lea
movb
hlt
leave
out
sub
cmpsl
aam
cmpb
aaa
jbe
xchg
xor
int
mov
mov
ja
cmp
rorb
scas
pop
das
jae
lret
dec
loopne
mov
pop
popf
adc
pop
push
add
stos
out
sub
fstl
pop
inc
dec
sarb
out
xchg
fidivrs
jge
outsl
fidivrs
dec
jle
ret
shlb
repz
fwait
loope
xor
movsl
inc
push
mov
sbb
mov
jns
dec
push
cmp
js
inc
pop
inc
pop
das
dec
shlb
fwait
aaa
lahf
cli
adc
jg
pop
test
mov
fsubrp
adcl
jg
aad
out
das
in
pop
es
mov
js
iret
pop
pop
sahf
mov
aam
rcll
stc
repz
pusha
push
lods
and
loope
cli
xchg
aas
jg
shl
lahf
sti
jns
push
ret
ror
sarl
aas
jg
daa
push
pop
xor
outsl
imul
repz
lahf
lret
or
lcall
mov
fmuls
stc
sti
in
cwtl
icebp
xchg
scas
xchg
lahf
int
adc
sbb
and
jno
repz
sbb
imul
sbb
or
add
jmp
ja
lahf
and
inc
lahf
cli
xchg
jp
lea
dec
and
popf
outsl
repnz
pop
aaa
fwait
aaa
outsl
fisubrs
jb
adc
mov
test
shll
cmp
fwait
aaa
jg
addr16
lret
pop
or
cltd
jbe
jns
out
in
mov
push
cs
insb
lea
xor
inc
repz
push
mov
je
ja
sahf
cmp
arpl
repnz
jg
cld
loope
sbb
mov
push
mov
sub
data16
in
lahf
aas
push
and
mov
test
sbb
int3
das
scas
cmc
in
leave
inc
mov
repnz
add
cmp
aad
dec
pop
xchg
jg
leave
push
dec
fwait
repnz
scas
out
dec
dec
sub
lahf
pop
push
dec
aas
int3
idiv
popf
in
outsl
add
data16
pop
pop
or
loop
fwait
or
rcr
lcall
int
lahf
arpl
mov
test
jns
sbb
shl
std
push
push
aaa
outsl
fidivrs
arpl
cmp
lahf
mov
int
aaa
in
cmp
mov
mov
leave
frstor
hlt
mov
jb
aas
aas
jg
jge
xchg
and
idiv
sbb
and
mov
iret
lahf
out
out
xor
mov
push
out
fildll
cmp
dec
cmp
mov
push
pop
andb
inc
xchg
lahf
sbb
xchg
stc
repz
dec
push
jns
jnp
loop
jno
dec
adc
cld
movsl
es
roll
cmc
out
popf
das
fs
rorl
sbb
fidivrs
dec
loop
movsl
insb
jne
inc
push
int
aaa
outsl
and
bound
clc
mov
repz
and
xlat
movsb
xchg
mov
pop
mov
fimuls
adc
or
pop
dec
cli
popf
push
and
in
enter
shl
or
push
mov
ja
sub
pop
and
stc
repz
aam
das
pop
or
cmp
adc
xlat
repnz
sbb
xor
xor
iret
lahf
jg
fsubs
mov
sub
out
sub
cld
stc
repz
mov
das
mov
mov
shufps
aas
jg
cs
cmp
xor
and
add
aaa
outsl
adc
jmp
aad
int3
cld
xchg
adc
repz
not
gs
xor
scas
mov
fwait
aaa
outsl
fisubrs
cmp
lret
add
rcll
ret
mov
out
jmp
data16
inc
stos
mov
stc
inc
loop
outsl
fidivrs
das
mov
or
fidivs
icebp
enter
das
les
sbb
mov
dec
push
jns
out
iret
mov
mov
or
enter
fidivrs
inc
mov
decb
outsb
repz
fwait
or
mov
jmp
sahf
mov
popa
lods
mov
cmp
push
js
out
fwait
aaa
fdivs
test
ret
mov
test
fidivrs
sub
pop
mov
fstpl
fwait
aaa
outsl
xchg
mov
mov
test
mov
mov
xchg
ror
cmp
or
or
cltd
arpl
cmp
sbb
ret
clc
inc
out
mov
insl
jae
inc
sbb
sbb
je
test
adc
or
mov
pop
adc
fidivrs
out
adc
xchg
pop
rcll
daa
outsl
fidivrs
ljmp
mov
iret
xor
adc
mov
and
xor
shll
outsl
fidivrs
mov
push
pusha
mov
cld
mov
push
sub
outsl
fidivrs
stos
cmpsb
sbbb
loope
or
fwait
sbb
inc
or
push
push
mov
mov
or
lahf
loopne
xor
or
cmp
enter
les
filds
adc
ss
stos
inc
fsubr
sbb
jle
es
pop
sbb
icebp
ljmp
xchg
xor
outsl
fidivrs
adc
out
pop
stos
and
repz
loope
aaa
repz
or
out
sar
stc
inc
cmp
cli
addr16
sti
popf
add
loop
fstpt
ljmp
mov
dec
out
icebp
out
mov
lahf
enter
dec
shrl
xor
dec
pop
aas
sahf
cld
stc
jmp
cmp
dec
jnp
and
adc
imul
iret
dec
aas
fadd
xor
ljmp
jl
bound
lock
xchg
aas
scas
cld
stc
repz
mov
jp
fildll
adc
add
adc
lahf
aas
jg
ret
fistpl
sub
movsb
in
in
stc
repz
dec
mov
xchg
mov
aas
arpl
mov
push
imul
sahf
sahf
mov
adc
push
mov
mov
ret
adc
scas
std
data16
sbb
pop
mov
test
xor
push
mov
push
push
mov
out
in
jmp
inc
pusha
mov
pushf
add
insb
fidivrs
pop
pop
inc
xor
cmc
jno
aaa
out
test
jae
cmp
imul
test
out
fwait
jp
ja
sub
test
push
leave
ret
mov
xor
cmp
xchg
cltd
out
xor
loope
sbb
cli
and
inc
inc
aas
jg
cld
xchg
or
cli
enter
iret
mov
sarl
iret
lahf
cmpsb
cs
pop
inc
push
push
lret
inc
xchg
jecxz
jg
cld
mov
testl
repz
lahf
push
inc
jbe
sbb
sub
add
jle
cld
stc
cmp
popf
enter
mov
push
addb
testl
scas
imul
out
scas
ss
jb
push
xor
int3
push
jne
stc
inc
pushf
dec
gs
jne
dec
adc
pop
jg
loope
lock
out
adc
je
or
push
addr16
xor
fsubs
cs
shl
iret
lahf
aas
mov
test
mov
cld
stc
repz
xchg
cmpsb
repz
mov
xchg
popa
jmp
fmul
dec
mov
adc
jle
jp
and
lahf
in
in
andl
mov
test
inc
repz
sub
aas
jg
jns
xchg
or
loopne
fs
jb
sbb
add
repz
sbb
aad
orl
mov
and
roll
movsb
sarb
sbb
not
xchg
aam
stos
imul
outsl
fidivrs
int
xor
in
lea
or
out
fwait
je
xchg
pop
aas
mov
adc
xchg
mov
add
pop
mov
outsl
fidivrs
orb
or
xchg
repz
fwait
xchg
push
fimuls
adc
and
fdivrl
mov
pop
cs
push
push
push
insb
ficoms
pop
jo
sbbb
fwait
lahf
mov
jne
lock
stc
repz
into
out
sti
aad
mov
xchg
stc
lret
cmp
sbb
push
cmpsl
icebp
mov
ficoms
sbbb
enter
sbb
ds
jl
in
push
js
xchg
mov
xchg
rorb
shlb
aaa
or
rorl
testb
mov
enter
mov
aaa
outsl
stos
das
mov
pop
push
or
test
mov
push
fists
push
js
mov
outsl
fsubrp
jl
div
testl
scas
jns
out
daa
sub
fstl
out
test
push
das
jne
dec
aaa
outsl
fidivrs
inc
idiv
jnp
ret
sbb
out
fwait
test
test
idiv
insb
outsl
fidivrs
icebp
lea
stos
imull
fsubp
int
aaa
cmpsl
daa
mov
lcall
cmp
xchg
scas
jg
cmp
aaa
outsl
ficoms
lahf
cwtl
cltd
push
das
and
call
fisttpl
movsb
mov
mov
fidivrs
mov
inc
mov
outsl
lcall
cli
fldt
imul
sbb
out
in
xlat
int3
add
test
ljmp
fidivs
out
mov
subl
fildl
int
test
sbb
lret
and
addr16
jg
cld
xor
shrl
inc
add
xchg
icebp
cli
stos
and
enter
scas
cmpsl
inc
push
in
mov
sbb
push
and
outsl
fmulp
xor
pop
adc
arpl
fs
pop
push
dec
adc
adc
cld
mov
jg
mov
out
push
das
out
flds
aam
mov
cwtl
out
idiv
shll
ja
pop
mov
and
fwait
ja
mov
test
rol
sbb
repz
sbb
cwtl
sbb
mov
inc
insb
or
fwait
aaa
outsl
xchg
lret
xchg
cltd
mov
das
fstps
mov
adc
inc
lcall
insb
fdivp
je
int
sub
xchg
cld
stc
repz
xchg
int3
popa
jo
fdivrs
mov
fiadds
loop
ja
adc
fwait
aas
aaa
outsl
decl
dec
cli
cmc
jo
in
inc
cmp
out
lcall
into
mov
push
mov
mov
and
repnz
fwait
out
pop
adc
iret
das
mov
ret
out
je
adc
outsl
shlb
fidivrs
jg
lcall
lahf
and
mov
fwait
aaa
outsl
and
stos
mov
je
xchg
cmpsl
mov
out
lods
jnp
xchg
jo
add
or
sar
test
fwait
inc
pop
pop
add
add
arpl
out
fwait
notb
cmp
mov
outsl
fidivrs
sub
out
iret
or
out
or
test
and
jns
out
es
dec
sbb
sti
imul
sub
jl
xchg
aaa
outsl
fidivs
movsl
inc
dec
xlat
sub
mov
out
xchg
adc
inc
mov
int3
or
mov
pop
jge
mov
or
in
sub
pop
cmc
add
dec
jnp
fidivrs
jmp
leave
lret
leave
inc
and
loope
inc
outsl
lcall
aad
fs
pop
inc
or
or
cmp
loope
jecxz
aaa
add
dec
xor
dec
xor
inc
out
and
fwait
int
xchg
push
lcall
repnz
stc
repz
sbb
insl
out
push
pop
push
dec
jbe
loop
xchg
out
push
pop
mov
rol
push
hlt
rolb
or
dec
inc
xorl
cmp
int
jmp
cli
lock
mov
sub
arpl
xor
push
cmp
aas
xchg
xchg
add
inc
outsl
or
inc
push
fildll
inc
dec
pop
shl
dec
outsl
in
roll
mov
push
sub
loop
pop
sub
push
pop
push
test
icebp
jge
iret
and
dec
in
iret
aas
das
mov
hlt
movl
push
scas
dec
movsl
lahf
aas
decl
add
sbb
sbb
cli
les
xchg
cmp
jns
mull
lret
mov
pop
or
mov
nop
out
lea
and
pop
dec
lcall
mov
bound
mov
pop
aam
es
out
lds
pop
pop
and
push
inc
mov
in
lods
sarl
das
sbb
stos
call
repz
pop
or
jmp
adc
adc
pop
sbb
imul
lods
adc
push
inc
cld
stc
mov
push
hlt
xor
call
lahf
aas
jg
mov
sub
ja
mov
int
insl
xchg
loop
ret
aaa
add
sub
sbb
out
fidivrs
mov
or
mov
call
lahf
cmp
jo
movsl
add
aas
ret
ficoml
loop
stc
stos
jp
mov
cmpsl
in
int
out
ret
and
jle
repnz
insb
repz
je
idivb
or
mov
mov
pop
imul
inc
push
arpl
mov
rorb
adc
arpl
xor
ljmp
cmp
mov
outsl
mov
pop
sub
scas
push
sbb
dec
add
enter
mov
jae
sbb
push
addb
ret
aas
jg
shlb
dec
cwtl
data16
mov
andb
cmp
ror
fwait
aaa
outsl
ja
lods
fbstp
ret
inc
jae
jns
out
fwait
ret
push
inc
int3
ss
cmp
ss
add
mov
adc
dec
add
push
mov
mov
inc
aas
outsb
pushf
and
push
xchg
int
aaa
into
ja
jae
sti
xchg
pop
pop
jae
aam
add
and
js
cmp
out
hlt
mov
js
and
fwait
out
mov
adc
repz
lods
push
adc
push
push
out
popf
lahf
fidivrs
movsb
sub
add
xchg
insb
push
clc
inc
je
pop
int
aaa
outsl
shl
sbb
lock
arpl
add
mov
mov
nop
jecxz
add
aaa
leave
mov
mov
out
enter
enter
adc
push
add
inc
push
sbb
dec
rcrb
stc
negl
or
xchg
nop
nop
decl
mov
push
inc
jle
cld
sub
push
dec
lret
dec
cmp
dec
and
add
lods
xchg
out
cmp
scas
ficoms
repz
and
das
sbb
add
fnstcw
pop
pop
bound
das
repz
mov
jno
inc
jno
push
xor
mov
sub
sub
js
aad
fstpl
sub
aaa
test
dec
add
repz
scas
and
mov
inc
cmp
sar
or
repnz
push
sbb
adc
sbb
sbb
incl
xchg
add
test
push
inc
or
dec
cmpsl
jne
pop
mov
outsl
sub
xlat
aam
cld
stc
stc
mov
push
mov
rcrl
adcb
push
hlt
add
dec
imul
cs
ds
sarb
mov
inc
push
leave
fwait
lahf
aaa
cmpsl
repz
div
cld
test
aad
repz
mov
sub
in
adc
add
adc
or
pop
or
push
lcall
not
test
adc
or
push
rcrb
push
mov
out
sbb
aad
lock
and
les
rclb
fistpl
add
mov
fwait
stos
movsl
add
lds
mov
repnz
mov
push
jne
or
xchg
and
and
imul
push
arpl
arpl
imul
add
in
cltd
repz
fwait
and
or
cmc
jno
cmp
push
fisubrs
mov
mov
cwtl
int
add
test
sahf
js
addl
xchg
notb
shlb
outsl
sub
lret
inc
xchg
cld
stc
mov
test
shl
and
clc
jl
push
inc
dec
add
out
fwait
aaa
iret
ds
jle
test
inc
lock
sti
loopne
cmp
mov
hlt
mov
xlat
sbb
xlat
or
lods
insl
adc
out
push
bound
or
into
xor
repz
idivl
inc
mov
adc
xor
cld
mov
outsb
adc
inc
sub
or
push
cmp
cmp
mov
sbbb
mov
loop
pop
or
pushl
jne
or
adc
push
inc
daa
xchg
jns
out
jecxz
in
hlt
out
fisubl
mov
pop
add
or
outsl
fiadds
xchg
xor
inc
ficoms
xchg
scas
xor
rcll
jns
aaa
outsl
fidivrs
and
xchg
cmpsl
push
data16
scas
jns
out
popf
sbb
xorl
add
outsl
fidivrs
add
nop
adc
std
cmpl
add
sbb
call
outsl
sbb
repz
in
popa
push
push
gs
mov
int
popa
ret
sbb
int
aaa
outsl
mov
mov
out
lret
outsb
loop
sbb
mov
and
inc
jo
xchg
insl
pop
shrb
and
and
lods
ds
pushf
loop
xor
aad
lret
imul
xlat
push
insl
xor
sub
add
mov
xchg
push
inc
sti
movzwl
je
mov
jecxz
stos
push
fldenv
inc
popa
jb
xchg
jg
insb
leave
mov
lods
clc
jg
add
pop
sbbl
adc
mov
lret
sbb
mov
ljmp
repz
cmpsl
and
call
iret
aas
pop
or
add
push
inc
push
mov
test
in
adc
inc
int3
add
out
int3
mov
es
or
scas
mov
mov
sbb
ja
fiaddl
fwait
aaa
outsl
fisubrs
jge
dec
les
or
fstpl
fcompl
fsubl
fwait
test
lahf
stos
mov
sub
xchg
pop
xchg
sbb
cmp
mov
lret
xor
mov
sub
sub
mov
movsl
cmp
push
and
mov
inc
push
pop
jg
push
mov
push
mov
jne
mov
test
pop
out
push
dec
push
in
jg
add
cli
lods
stos
repz
loopne
stos
inc
outsl
andb
cltd
mov
add
push
inc
out
mov
adc
addr16
jb
and
sub
movsl
push
pop
imul
add
push
iret
mov
mov
ss
mov
mov
adc
dec
add
lahf
push
loop
stc
jne
push
add
mov
ret
mov
data16
lods
lods
pop
loopne
sbbl
or
fwait
test
outsl
ficomps
mov
pushf
xchg
movsb
xchg
repnz
add
xchg
xchg
loopne
push
xchg
mov
addr16
adc
or
shll
inc
stc
jnp
out
add
push
mov
stc
ljmp
add
test
adc
enter
ja
movsb
dec
sub
movsl
push
inc
mov
or
cmp
push
out
sbb
jne
inc
les
repz
inc
xchg
ret
jp
cmpsl
aam
inc
and
pop
or
arpl
adc
push
popa
jnp
repz
shlb
add
test
aam
cld
pop
das
inc
inc
or
aas
lcall
mov
fcomps
insb
add
mov
out
mov
ds
nop
push
rcrl
push
aas
mov
loope
ds
insl
cmp
stos
xlat
pop
jg
mov
dec
sbb
and
xor
push
pop
leave
pop
imul
xchg
adc
push
push
sbbb
mov
mov
inc
pop
xlat
test
or
jg
sub
into
sti
scas
aad
xchg
push
sub
lahf
push
cld
mov
mov
enter
stc
push
push
push
es
add
lods
jnp
jno
ret
add
aas
mov
rorl
out
mov
rorb
jns
mov
xor
rcr
push
fmull
lret
shlb
mov
mov
stos
or
dec
jle
pop
cmp
repnz
jg
insl
sar
dec
mov
push
popf
pop
outsb
fidivrs
in
fsubl
cmc
jge
test
inc
push
dec
dec
fisttps
mov
sbb
popf
adc
flds
cltd
cld
stc
mov
sbbl
jbe
lock
adc
mov
and
jg
sbb
mov
aam
fwait
test
push
inc
xchg
and
out
shl
and
push
ficompl
outsl
fidivrs
push
or
fdivrs
out
fwait
aaa
or
stos
sub
dec
mov
clc
jecxz
add
es
popf
lret
inc
decb
and
loopne
fistpll
les
adc
sahf
fsubl
add
jg
add
mov
jbe
repnz
movsl
add
push
pop
jne
push
push
adc
jns
out
pop
jge
xor
push
and
xlat
test
fidivrs
mov
inc
jb
rorb
enter
mov
cld
cld
jo
mov
outsl
loop
cld
stc
xlat
mov
pushf
adc
fsubs
add
push
lahf
insb
test
filds
pop
push
and
or
andb
sbb
ljmp
xor
pop
jl
or
out
lahf
or
push
gs
outsl
pop
lock
inc
lods
adc
push
daa
aaa
adc
outsl
jge
mov
cmpsb
movsb
push
outsl
adc
adc
in
sbb
push
push
mov
aas
pushf
adc
lret
sbb
lahf
inc
pop
xor
dec
add
les
mov
out
scas
pop
gs
xchg
icebp
aad
pop
outsb
pop
pop
or
mov
and
daa
out
add
pop
push
pop
inc
sub
xor
cmp
lods
fstps
inc
jmp
out
sbb
sub
in
testb
fwait
aaa
outsl
dec
dec
daa
mov
lock
adc
js
adc
in
inc
jb
fisubrs
gs
dec
int
aaa
outsl
adc
jmp
inc
out
mov
ret
lock
int
adc
mov
mov
xor
into
inc
movsb
cmpsb
add
mov
inc
in
enter
aaa
outsl
fiadds
lock
loopne
into
mov
adc
add
int
inc
out
stc
lods
mov
push
out
ljmp
adc
inc
push
in
pushl
jno
cmpsl
out
mov
fidivrl
ja
sub
mov
adc
mov
out
lea
fs
lds
mov
rcll
out
mov
or
push
fcomip
outsl
sub
xchg
je
or
repnz
xor
adc
mov
add
fstps
jmp
inc
dec
add
inc
aas
andb
mov
pop
fisubs
rcl
mulb
enter
jge
cmp
and
xchg
insl
push
out
cli
xchg
out
xlat
into
xor
mov
into
cld
mov
dec
cld
sub
rcr
out
adc
enter
fwait
ja
mov
mov
xchg
lahf
xchg
mov
and
dec
pop
dec
mov
or
pop
push
sbbl
mov
sub
icebp
ret
jg
insb
stos
push
cmp
out
pushf
test
enter
cli
pop
inc
cmpsl
mov
sub
stos
xlat
leave
push
sub
fidivrs
pop
jl
xchg
repz
xchg
sbb
lret
fwait
aaa
push
popf
xchg
jmp
jg
lock
xorl
fmuls
pop
mov
iret
lock
inc
scas
push
idiv
fidivrs
inc
les
lock
push
sub
int
dec
enter
xor
cwtl
mov
lahf
inc
xorl
fisttps
cld
stc
negl
adc
jg
icebp
test
pop
imul
cld
scas
lods
fimuls
sbb
fidivrs
nop
leave
cli
cltd
sbb
mov
push
cmp
std
cmpb
ror
daa
push
or
jecxz
jp
outsl
ficoms
inc
cmpsb
and
je
movsb
sbb
int
test
mov
pop
cltd
cmc
mov
push
es
cld
stc
ja
scas
repnz
movsb
rorl
fucomi
test
and
jg
and
mul
iret
mov
mov
or
xchg
gs
push
pop
leave
iret
lahf
aas
iret
and
xchg
jmp
je
cld
stc
imull
mov
sbb
push
dec
lahf
aas
jg
in
cmp
bound
inc
sub
rolb
pushf
push
xchg
lahf
jge
aas
lcall
and
cltd
jmp
mov
and
jb
fildll
or
and
push
lahf
jg
push
xchg
aam
jecxz
mov
enter
shl
jns
mov
dec
aas
jg
adc
aaa
jge
adcb
jmp
repz
lahf
movsb
inc
mov
jmp
push
xchg
stc
stc
adc
jecxz
dec
mov
push
jne
cmc
mov
movsb
rolb
sbb
sub
mov
and
int
adc
in
adc
and
add
xchg
mov
or
pushf
cmp
imulb
stos
dec
and
adc
add
add
or
pop
pop
adc
sbb
push
fidivs
rorb
call
loopne
insl
bound
inc
add
inc
inc
adc
out
mov
das
sub
push
and
mov
or
dec
add
adc
loope
cli
adc
test
push
mov
adc
add
insl
push
inc
mov
add
cmp
shlb
jno
mov
loop
cmpb
sbb
dec
add
jno
testb
jnp
mov
movb
pop
inc
add
mov
rcrb
xor
fimull
sub
jp
les
add
push
push
pop
sub
or
test
push
inc
or
push
and
stc
add
mov
push
adc
adc
clc
sbb
push
adc
inc
inc
pushf
cmp
and
stos
fstpl
mov
fstpl
add
into
movsb
leave
or
scas
test
push
test
or
lods
mov
sti
sub
or
bound
fwait
push
adc
push
clc
adc
and
stos
ret
sub
ret
or
mov
sbb
sbb
or
jge
sub
rol
add
or
pop
add
xchg
mov
ljmp
insl
mov
loope
pop
pop
mov
adc
xchg
push
add
mov
inc
imul
fisttpl
sbb
into
adc
ja
call
mov
add
push
or
fcoms
mov
pop
inc
in
lret
cmp
inc
or
insl
pop
and
test
rolb
mov
cmp
sbb
je
adc
adc
jbe
xor
push
and
or
and
dec
rol
push
adc
add
mov
pop
push
pop
add
push
sub
into
cmp
push
into
mov
ret
push
leave
xchg
push
jle
jae
mov
sub
mov
add
test
mov
movhps
push
mov
icebp
and
sbb
js
mov
repz
stos
add
sbb
or
add
aam
ror
jg
push
and
andb
fwait
mov
or
push
add
in
imul
adc
mov
mov
adc
mov
ss
push
mov
mov
and
push
dec
add
sbb
mov
sbb
das
lock
lret
or
or
cltd
or
rol
mov
cwtl
or
pop
daa
insl
sbb
pop
outsl
call
inc
inc
cs
sbb
jae
mov
or
mov
ja
add
sub
bound
xlat
mov
and
cmp
outsb
sub
pop
mov
mov
data16
mov
mov
cltd
xchg
loop
sarl
mov
testb
push
add
adc
push
add
sarb
mov
call
mov
sahf
sti
sub
xor
and
xor
sub
dec
outsl
lods
jge
adc
xlat
ss
sbb
sub
xlat
jo
in
cmc
pop
aad
adc
mov
repnz
mov
xchg
inc
leave
andb
or
add
push
inc
or
enter
inc
jnp
cmpsl
add
and
xor
or
mov
or
lds
and
jmp
pop
js
jp
adc
icebp
mov
jle
sbb
push
push
inc
inc
add
sub
rcrl
aad
pop
test
ret
add
stos
scas
ret
inc
les
adc
push
add
push
mov
pop
loope
pop
sub
jge
push
push
in
out
adc
inc
push
adc
mov
orb
out
lods
mov
add
lret
andb
pop
mov
adc
push
xchg
notb
and
cmp
or
mov
adc
push
sbb
test
bnd
pop
aas
pop
jnp
jnp
or
movsl
lock
inc
push
subl
adcb
xchg
mov
or
sub
adc
and
adc
mov
xchg
ret
push
or
pop
dec
int3
mov
stos
mov
fbld
add
mov
push
gs
adc
test
aam
jno
jl
mov
inc
mov
add
mov
rcl
adc
inc
push
mov
inc
push
mov
cmp
push
clc
mov
fcompl
stos
cmpsb
xchg
rorl
call
jae
shl
xsave
inc
sub
test
xor
mov
pop
xchg
pop
lret
inc
movsb
das
idivb
sbb
rclb
sub
and
xlat
and
scas
jae
sub
cs
shrb
mov
and
or
pop
add
ljmp
stos
rcrl
mov
dec
dec
fisttpll
add
and
adc
repz
iret
push
loope
pop
xor
sbb
stos
push
mov
jae
leave
inc
nop
mov
jne
or
add
ret
or
xchg
hlt
pop
cmp
xchg
jmp
into
gs
mov
mov
sbb
sbbl
loop
into
pop
push
jno
std
pop
mov
inc
inc
ljmp
push
jnp
cmp
dec
cmp
push
ss
ret
mov
shl
pushf
cli
pop
adc
mov
inc
xchg
jns
dec
adc
mov
lea
adc
insb
test
cmpsb
mov
mov
cmp
andl
in
movsl
add
inc
rolb
xchg
int3
push
dec
inc
push
or
mov
adcb
in
pop
or
xor
adc
mov
xchg
jne
ret
adc
adc
inc
jnp
fildl
test
loopne
mov
sub
inc
lods
mov
lds
add
adcl
add
outsb
adc
add
fdivrs
and
xor
and
aam
stc
jl
pop
add
shr
loope
push
mov
or
sbb
es
lahf
push
lret
pop
arpl
ss
add
xor
mov
cmp
clc
adc
xchg
xchg
sbb
subb
mov
rcll
push
outsl
hlt
aaa
dec
lea
sbb
cmp
or
mov
insb
ret
lods
jo
ret
inc
scas
adc
cmp
mov
xchg
xor
jbe
sub
push
cmp
add
imul
cmp
mov
pusha
sbb
cmp
or
aas
push
aad
xchg
loopne
aam
sbb
movswl
into
xlat
mov
cmp
mov
sbb
out
addl
mov
scas
testb
adc
popf
add
aad
sub
push
loope
push
clc
or
pusha
pop
out
or
jbe
hlt
icebp
push
inc
call
sub
dec
add
jb
out
mov
aad
sbb
push
push
lds
std
jl
inc
test
rcrl
add
cmp
adcl
loop
cmp
div
dec
ljmp
pop
dec
jns
add
inc
sub
dec
sti
cmp
stos
jb
mov
sbb
adc
xor
lods
shll
xchg
fsubrl
push
popf
sarl
ficoms
fwait
push
rcll
test
push
mov
push
mov
shlb
sbb
mov
repz
and
push
inc
xor
adcl
pusha
pop
and
add
push
iret
xchg
clc
adc
or
rolb
dec
or
or
cmp
stos
push
mov
sub
pop
repz
ljmp
add
cs
jmp
sahf
mov
jmp
dec
add
ret
fidivl
pop
stc
sbb
sbb
movsl
sbb
scas
inc
loope
adc
inc
pop
call
jns
xchg
stos
inc
repnz
stos
roll
add
in
push
mov
das
or
push
mov
inc
ret
xchg
adc
rcrb
lret
mov
push
pop
movsb
push
pop
push
pop
lods
icebp
scas
repnz
add
es
out
ljmp
push
mov
in
adc
inc
lds
or
roll
mov
js
lock
pop
add
mov
stos
cli
jb
cmp
mov
mov
cs
addr16
stc
mov
test
push
and
ss
or
jne
mov
mov
scas
mov
in
push
clc
xor
or
ret
cmp
mov
pop
adc
adc
mov
push
dec
cltd
xor
aad
ror
jp
xor
test
stc
push
sub
sub
in
test
or
mov
add
add
adc
mov
cwtl
bnd
xor
mov
dec
rclb
loop
mov
sbb
clc
cltd
jae
test
add
inc
pop
adc
sub
inc
out
addb
or
sbb
adc
faddl
cwtl
sbb
add
mov
jo
jp
mov
add
push
lcall
rclb
test
into
vmovdqu
mov
jo
mov
out
cmpsb
mov
or
add
cmpsb
inc
ret
lock
inc
xchg
mov
push
mov
test
adc
out
jnp
push
lret
mov
mov
jmp
ret
les
scas
xor
imul
cs
roll
adc
push
jecxz
xchg
mov
inc
dec
ret
shll
loop
push
sub
and
add
lods
push
mov
or
int
adc
imul
xchg
orb
mov
cmp
or
sbb
addr16
push
inc
mov
or
cli
adc
std
inc
push
ja
adc
add
andl
mov
jbe
dec
mov
adc
sbb
pop
cld
ret
xor
in
stc
adc
pop
dec
stc
pop
or
pop
mov
push
fcoms
push
int
push
dec
dec
lahf
inc
and
push
add
lock
scas
or
js
cltd
adc
dec
jp
leave
xchg
stc
sub
or
mov
jmp
jno
orb
and
xchg
sub
cmpsl
xor
push
fldcw
mov
xchg
or
xchg
sbb
or
mov
incl
pop
pop
xchg
pop
js
mov
push
xchg
inc
in
push
or
inc
mov
pop
adc
stos
pusha
xor
sbb
adc
stos
stos
pop
xchg
mov
pop
or
nop
jno
adc
inc
inc
xchg
iret
inc
inc
je
outsl
cmpsl
add
je
mov
insb
mov
mov
sub
add
loope
in
test
orb
fmulp
push
pop
pushf
sub
or
or
mov
mov
mov
ss
xor
sbbb
rolb
sbb
sbb
ret
leave
and
lods
xorb
mov
push
mov
aam
push
rorb
and
cld
lds
loope
mov
lcall
push
mov
add
ljmp
mov
clc
adc
cmp
pop
and
inc
xchg
stos
adc
push
jg
daa
and
and
and
dec
inc
rolb
adc
testb
mov
jle
adc
test
fsubs
adc
addr16
sub
loope
sbb
out
inc
add
jae
jno
xor
addb
sbb
mov
pop
or
inc
leave
jp
ret
cmp
xor
test
inc
test
adc
das
push
mov
sti
leave
test
pushf
adc
adc
inc
sarl
jae
clc
and
sbb
push
in
sub
pop
dec
xor
xor
jmp
jbe
popf
cmpsl
jl
xchg
or
imulb
or
mov
cmp
dec
sbb
movsb
add
cmp
xchg
add
cmp
loopne
mov
add
icebp
add
ret
mov
movsb
mov
push
inc
xchg
xchg
mov
cmp
loopne
enter
int
and
out
dec
lea
add
or
popf
icebp
push
add
lret
and
mov
adc
mov
in
mov
or
leave
sti
sarb
icebp
pushf
mov
imul
je
in
push
fs
adc
adc
jb
mov
adc
or
int3
rorl
sub
dec
and
add
mov
mov
sbb
arpl
push
cltd
nop
xchg
jns
and
dec
cs
sbb
ja
push
aaa
shll
cmp
test
lock
push
es
adc
ret
scas
or
pushf
or
and
or
pusha
out
ret
roll
mov
or
or
stos
or
mov
mov
push
push
movsb
pop
pop
arpl
jnp
inc
mov
ret
or
mov
mov
popf
loope
push
icebp
cli
ret
cmpsb
push
scas
and
mov
sbb
sub
fcompl
cmp
dec
mov
mov
sbb
mov
pop
pop
sbb
add
popa
addb
sbb
jmp
cmp
pop
dec
or
pushf
cmp
data16
or
push
shl
test
divb
mov
and
into
sbb
push
ret
sbb
andl
lock
ret
or
or
xor
push
fcomps
movsl
enter
add
or
pop
push
jmp
test
push
lods
bnd
xchg
mov
adc
push
cmp
pop
jb
xor
cltd
ret
movsb
or
pop
adc
rolb
adcb
jmp
aad
jo
pop
or
add
add
cmp
popf
inc
xlat
push
enter
pop
scas
and
stos
xchg
stos
cltd
movsl
cs
push
adc
mov
mov
sbb
mov
scas
lock
xchg
ret
add
adc
mov
dec
insl
ss
inc
cmp
dec
sub
pushf
push
cltd
push
dec
lds
test
dec
enter
cwtl
shl
cld
push
add
push
push
fs
jb
outsl
mov
add
shrb
push
addl
dec
lret
lds
repnz
adc
lret
sub
movsb
or
mov
xorl
push
inc
in
cli
pop
lock
mov
xor
sbb
add
lret
ret
lods
pop
lret
inc
xchg
cmpsl
sbb
or
rolb
pop
mov
xchg
adc
inc
cmp
inc
push
add
xor
shll
test
inc
sub
loope
rolb
push
popl
mov
lcall
test
imul
add
push
adc
push
xor
jbe
and
mov
lock
sbb
sub
andl
hlt
shrl
fmull
or
jo
insb
popa
lock
mov
jecxz
cwtl
lret
adc
push
in
pop
ret
and
je
pusha
push
dec
sbbl
jecxz
jne
push
inc
push
sti
mov
mov
sbb
or
cmpsl
mov
adc
arpl
or
inc
mov
test
adc
ficoml
ficomps
iret
dec
loopne
adc
inc
and
lret
xchg
imul
push
or
inc
mov
adc
push
add
sbb
adc
and
sub
mov
pop
jnp
sbb
pop
or
push
mov
add
cli
pop
xchg
outsb
mov
out
ss
in
mov
sbb
mov
and
loope
jl
cmp
sbb
imul
shl
add
jl
test
inc
in
in
or
test
jo
imul
mov
leave
scas
jp
and
mov
pop
cmpsb
push
sub
enter
dec
mov
in
sbb
test
cmc
mov
mov
sbb
loope
and
push
xor
add
roll
add
stos
inc
daa
jb
aas
sub
outsl
adc
pushf
cwtl
shlb
or
das
pmuludq
lret
dec
and
mov
xchg
adc
jmp
push
int
loopne
ljmp
inc
scas
idivl
and
je
inc
stc
jno
push
fwait
xor
fimull
xorl
repnz
insb
add
cltd
push
add
mov
xchg
shll
xor
pop
push
dec
push
shll
cmpsb
push
clc
or
cmp
push
test
nop
repnz
add
ret
andb
loopne
xor
cmp
dec
add
adc
lock
xor
xchg
bound
call
shlb
int
push
mov
cwtl
dec
clc
add
mov
lret
out
adc
fmuls
sbb
and
push
sbb
notb
or
add
or
adc
ret
pop
add
mov
pop
jae
inc
add
mov
push
xchg
loopne
rcll
lret
sub
enter
sarl
push
rcl
inc
stos
push
rolb
insl
add
hlt
adc
stos
inc
stos
cs
push
ljmp
fcmovnb
sbb
rolb
push
pop
mov
pop
into
mov
pop
add
xchg
add
jmp
sub
fsubrp
outsl
shrl
iret
jmp
cmp
mov
or
push
or
sbb
jmp
sub
filds
add
push
in
aam
xchg
add
rorb
mov
add
cmpl
rclb
les
test
add
pop
scas
es
aas
idivb
push
push
cmp
scas
pop
icebp
test
ret
adc
adc
subb
enter
dec
aad
or
and
and
fcomp
lret
adc
jle
and
repnz
jmp
push
and
cli
and
bound
xor
and
jb
rolb
inc
mov
jb
aad
or
dec
mov
add
or
or
js
push
call
fimull
stos
ljmp
and
or
jb
cwtl
call
and
pop
lea
adc
shl
in
into
push
loope
cli
testl
ss
pusha
das
adc
push
jl
loop
test
idivb
xchg
xchg
mov
js
mov
addr16
mov
push
mov
je
loopne
push
or
orl
cltd
or
push
or
in
fstpt
xor
pusha
aam
ja
stos
test
jbe
lods
fimuls
push
and
lret
je
lock
inc
push
daa
cmp
rclb
inc
rclb
xchg
decl
adc
push
xchg
jnp
inc
inc
subl
mov
es
push
pusha
push
inc
andb
add
into
repz
xorb
jne
ljmp
shll
adc
ljmp
jo
adc
hlt
adc
adc
pop
les
jne
and
mov
push
xor
cli
adc
mov
or
add
leave
ret
or
jb
fs
mov
xor
jmp
xchg
xorps
out
inc
stos
sahf
sbb
int
aas
call
cli
sbb
push
xor
cmpsb
dec
jns
pusha
sub
or
add
xchg
xchg
int3
lods
js
cs
daa
mov
faddl
cmp
out
nop
fimull
and
fwait
movsb
mov
mov
lcall
push
add
icebp
or
scas
shl
mov
push
stc
imul
and
add
or
mov
lret
inc
ret
mov
sbb
adc
addb
push
and
cmpb
or
addl
mov
xor
mov
adc
aam
test
jno
jmp
mov
pop
mov
call
daa
add
push
shlb
ds
ljmp
pop
cltd
push
ds
sbb
push
mov
movl
daa
stos
inc
or
enter
stc
enter
mov
add
add
push
paddq
mov
test
or
rcrl
xor
clc
sbb
sbb
inc
xchg
pop
xor
shll
pop
jl
mov
pop
inc
test
or
or
inc
mov
int
fcomi
xchg
adc
bts
sbb
mov
mov
enter
lds
and
and
ss
popa
ret
push
sbb
cli
call
daa
loopne
dec
jno
ljmp
test
and
hlt
jp
sbb
xor
sbb
test
push
sarl
and
mov
and
push
gs
cmp
cld
xchg
cmpsb
and
outsb
jecxz
mov
jg
adc
in
mov
adc
cmp
das
add
fisttpl
or
fdivs
pusha
bound
mov
and
sub
rcll
cmp
and
mov
push
xchg
cmp
dec
in
jge
addb
mov
dec
push
or
add
push
stos
jae
sbb
movsb
mov
mov
fsub
repnz
ret
mov
sbb
sub
push
dec
lret
push
icebp
or
adc
push
xchg
jo
pop
and
add
fmull
mov
xchg
sub
xor
or
adc
gs
push
xor
xor
xor
imul
out
jne
adc
aaa
and
or
in
int
loope
out
inc
test
scas
mov
mov
sbb
add
leave
sub
insl
pop
push
mov
jne
les
add
shll
loope
cltd
cmc
cmp
call
repnz
mov
adc
in
scas
test
leave
add
mov
push
cmc
repnz
jge
icebp
add
push
cmp
rcrl
pusha
jb
call
xor
jp
aad
mov
sbb
and
mov
mov
ljmp
sar
add
xor
les
es
inc
inc
mov
test
sbb
shll
push
lret
add
filds
mov
and
adc
mov
push
fs
xchg
rcrl
pop
rclb
mov
push
pop
sar
or
adc
std
mov
adc
mov
lds
orb
mov
add
lret
lock
and
dec
test
mov
push
stc
push
or
xor
cmc
out
and
call
mov
pop
mov
sub
push
xchg
rcll
addb
add
loope
idivl
xchg
fcomi
push
je
add
mov
pop
mov
outsl
icebp
mov
sub
pop
xchg
push
dec
push
int3
mov
es
rcl
inc
add
rcrl
inc
fwait
push
push
push
orb
aaa
ljmp
inc
ror
sarl
mov
test
aam
sahf
stos
push
cmp
pop
xlat
xor
popf
addb
fildl
add
dec
mov
jne
shrl
xor
or
mov
jl
or
shr
sbb
push
mov
cmpsl
stos
add
sub
sbb
adc
sarl
jnp
loope
xchg
dec
sbb
sub
ret
adc
test
and
scas
shll
pop
les
dec
mov
dec
icebp
sbb
ljmp
mov
xor
dec
push
mov
mov
rclb
bnd
sbb
cmp
and
push
mov
fcmovnu
sbb
mov
cmp
andl
push
inc
inc
movnti
loope
in
sub
into
int3
cld
adc
addb
sbb
jbe
sub
push
push
leave
cltd
adc
add
push
push
adc
cmp
and
push
mov
cmp
and
lds
mov
mov
pop
loopne
adc
sbb
gs
inc
aaa
leave
add
scas
mov
outsl
faddl
notb
sbb
cmp
inc
es
push
les
pop
mov
ljmp
jnp
xor
and
push
push
and
outsb
aam
cli
push
xor
or
mov
add
outsb
repz
pop
jne
sbb
lret
xchg
adc
fistl
and
scas
inc
ret
fnstenv
cwtl
sbb
dec
sub
fbstp
test
cmp
push
out
sub
jo
int
add
add
sub
sbb
sub
sbb
or
mov
sarl
nop
call
push
jne
rolb
mov
adc
mov
xor
addl
repnz
or
push
inc
xor
pop
lea
mov
test
nop
add
rcl
add
and
sahf
and
add
xlat
add
jno
xor
lods
mov
or
leave
pop
sub
adc
insb
adc
cli
add
push
push
cmc
or
cmp
add
test
pop
push
sbb
sub
aaa
ja
cld
xchg
arpl
sub
imulb
xor
cwtl
pop
push
cmp
subl
cmp
adc
bound
lds
out
pop
add
sbb
orb
mov
sbb
in
and
add
test
inc
adc
mov
fstl
sbb
js
mov
adc
je
test
es
aas
test
orb
cmpb
cmp
adc
mov
jp
pop
sbb
xchg
jbe
xchg
push
push
sub
mov
mov
sub
cmp
sti
xchg
ljmp
xlat
int
mov
dec
pop
or
mov
in
arpl
push
jo
shll
adc
and
cld
shl
or
xchg
call
subb
rcll
into
xor
sti
xor
dec
adc
sub
add
xor
aad
cltd
ror
dec
push
sub
icebp
xor
xor
enter
mov
sbb
addl
cmp
popa
jmp
adcb
mov
cmp
mov
popf
shlb
pshufw
or
xchg
aam
xor
rep
push
or
pop
adc
popa
shrl
add
inc
push
add
adc
mulb
repz
filds
pusha
mov
lret
incl
push
scas
pop
push
jl
xor
ljmp
pop
stos
mov
mov
push
sar
or
mov
fsubrs
lock
xchg
aad
add
push
xchg
sbb
xor
lock
sub
cmpsl
xchg
pusha
leave
repnz
mov
stc
lock
pop
subl
add
aad
inc
lcall
xor
incb
xlat
outsb
push
sub
test
lea
movb
push
cmp
int3
push
or
sub
jmp
adc
cmpsl
inc
or
dec
pop
pusha
push
cli
sbb
inc
into
movsl
push
inc
out
inc
nop
cmpsb
cmp
es
data16
inc
xor
rorb
sbb
stos
inc
aas
or
sub
sti
shrw
pop
pop
out
push
or
adc
je
or
inc
sbb
sub
xor
outsb
pop
adc
xchg
add
stos
vmaxpd
adc
xchg
push
sbb
adc
icebp
adc
and
les
enter
aas
test
in
add
pop
pop
inc
leave
fs
mov
dec
push
sbb
or
adc
and
sbb
inc
jnp
lret
cmpsb
push
cmp
rorl
loopne
es
cltd
or
popa
sbb
push
inc
jne
cmp
and
mov
lds
dec
push
pop
call
inc
add
fisttpl
or
jg
push
dec
or
cmp
adc
dec
in
and
cmpsl
inc
sub
pop
push
sub
mov
mov
adc
pop
test
fwait
xor
fs
icebp
mov
push
mov
inc
or
sub
pop
mov
push
aad
push
and
andb
fs
mov
pushf
adc
xchg
cmc
stos
xor
ds
pop
push
or
fstl
cmpsl
daa
insl
rcrb
xor
or
add
add
pusha
mov
aas
loop
icebp
push
or
loope
jl
push
loope
push
in
outsb
mov
jmp
lds
cmp
inc
orb
mov
jae
test
lds
aad
mov
loop
add
icebp
lods
inc
add
les
add
cmpsl
jecxz
dec
inc
inc
add
xlat
hlt
push
test
addr16
inc
cltd
mov
xchg
pop
mov
push
add
ds
les
enter
sub
mov
ljmp
idivb
rcl
add
inc
aas
push
ljmp
sarl
mov
ret
loopne
fisttpl
ja
adc
sbbb
test
add
mov
adc
jo
push
sbb
imul
dec
adc
mov
lahf
rorb
cwtl
ss
sbb
mov
rol
pushf
ror
neg
hlt
addb
and
jp
mov
mov
clc
pop
loope
dec
icebp
add
xor
mov
and
adc
or
inc
test
and
mov
dec
cmpsb
lret
scas
pop
push
ret
cmp
xor
jmp
jne
sbb
int3
push
push
lcall
add
or
push
insb
sub
movsl
jne
cmp
stos
push
push
push
xor
stos
push
pop
icebp
sub
cmp
pushf
leave
push
jo
cmpsl
push
cmp
idivb
lret
pop
lock
add
cwtl
rcrb
add
push
mov
movsl
jle
in
stos
jae
mov
pop
adc
mov
pusha
imul
movsl
add
xor
pop
dec
in
pinsrw
notb
cs
xor
cmp
mov
aad
add
xchg
mov
jo
inc
adc
repnz
bound
sbb
rcrb
arpl
inc
pop
mov
dec
and
pop
add
stos
inc
rolb
das
push
jp
stc
or
popa
pop
lods
cmpsb
mov
stc
or
xchg
jo
or
and
push
mov
enter
lock
add
mov
clc
or
sub
or
loop
test
inc
orb
in
mov
pop
cli
repnz
and
je
negb
ret
mov
mov
jg
jmp
and
and
repz
inc
aas
stos
imul
or
mov
jp
add
stos
sub
ret
dec
xchg
push
ss
pop
add
andb
mov
or
sbb
push
arpl
fsts
loopne
xchg
ret
add
dec
shlb
rcl
and
data16
xchg
clc
adc
push
push
jo
mov
call
bound
pop
add
sub
sub
mov
sbb
adc
ret
or
push
iret
orb
shrb
jmp
shrl
fs
shlb
hlt
shlb
lods
leave
movsl
sbb
nop
pushf
mov
add
jo
call
add
mov
push
and
xchg
push
insl
ret
add
push
add
rcll
adc
mov
leave
sub
pushf
not
push
stc
add
lcall
sub
and
cmp
lret
or
xchg
sub
mov
inc
xor
je
outsb
ret
repz
push
dec
mov
mov
repz
dec
lret
mov
and
pop
dec
mov
pop
arpl
dec
or
adc
repz
mov
pop
shrb
ret
sbb
stos
adc
bound
jg
test
cmp
sub
mov
mov
je
shll
mov
roll
andl
nop
sub
push
jo
sub
adc
jp
iret
cmp
mov
lock
stos
cmp
adc
lret
int3
gs
lods
call
inc
mov
lar
testl
mov
or
popf
add
loope
inc
push
adc
stc
stc
push
ret
adc
push
filds
lds
and
cmpb
mov
nop
add
sbb
lds
jp
fsubrl
and
leave
ds
data16
and
out
sub
jl
cmp
xor
push
cld
add
fs
imul
cmp
push
push
out
inc
in
push
adc
addr16
add
cmp
daa
add
or
sbb
sub
push
rcl
orb
push
fisubl
push
cmp
rcrl
xchg
add
jne
enter
add
dec
mov
call
inc
cmpsb
dec
adc
mov
sub
aad
cmp
imul
xchg
or
mov
shl
sbbb
xor
xchg
testb
pop
dec
test
push
inc
dec
test
mov
out
test
scas
add
and
adc
pop
lea
repnz
adc
pushf
ret
sbb
adc
test
loopne
in
jne
adc
xchg
rorb
scas
pusha
push
jg
lahf
out
test
and
adc
shll
push
jne
ljmp
pop
jne
push
and
add
rorl
into
lea
lahf
loope
aaa
testb
fcomi
fmuls
into
push
add
bound
sub
movsb
bound
mov
ss
cmc
and
rorb
jle
or
push
inc
xchg
or
jge
sarb
mov
mov
xor
add
cmp
mov
pop
mov
add
test
das
add
and
inc
lods
cmp
mov
rcrl
sbb
inc
add
sub
inc
lods
gs
out
inc
sti
stos
mull
shlb
pop
je
lock
mov
aad
outsb
push
mov
sub
pop
adc
inc
pushf
loop
sub
xchg
pop
mov
dec
aam
sub
mov
push
sbb
shrb
ja
les
xchg
mov
inc
adc
rol
test
mov
mov
or
sub
mov
cmp
xchg
and
adc
and
bound
push
lds
sub
pop
inc
sbb
push
push
lds
cli
or
stos
mov
ljmp
stos
cltd
pop
aam
aas
stos
mov
inc
sbb
xchg
xchg
add
sbb
and
sub
add
cmp
mov
push
outsl
push
xor
and
add
js
out
add
rcl
out
jecxz
pop
and
mov
test
adc
xlat
add
mov
and
loopne
xor
push
roll
dec
cmp
xchg
mov
call
xor
sbb
or
in
dec
jo
cmp
push
sbb
enter
xchg
jecxz
add
mov
push
movsbl
jns
fldt
cli
mov
hlt
sbbb
je
jb
dec
or
xor
dec
inc
lods
lock
das
add
loop
adc
push
mov
or
jns
push
gs
adc
cmpsb
sub
mov
xchg
adc
andb
xlat
xchg
or
add
add
dec
lods
mov
lret
enter
sub
int
xchg
cmp
xchg
add
cmp
fwait
std
inc
inc
adc
rcrb
jnp
loop
xor
cld
daa
into
inc
add
mov
and
or
fs
nop
call
add
icebp
fidivs
es
cltd
enter
sub
xchg
xchg
fnsave
jo
xchg
cmpps
insl
mov
sub
pop
xlat
into
and
and
mov
enter
subb
das
sbb
cmpb
pusha
rolb
pushf
adc
or
mov
pop
data16
adcl
adc
movsb
aad
pop
sbb
test
xchg
sbb
or
xor
mov
mov
lock
sti
jo
call
cwtl
bound
add
mulb
adc
xchg
out
add
lea
ret
ret
and
adc
scas
out
xchg
data16
sub
addb
push
jne
fistpl
adc
pop
pop
out
adc
lcall
xlat
and
xor
or
fisubrl
mov
lods
jbe
ljmp
dec
call
out
or
test
in
jae
jl
inc
arpl
xchg
add
mov
loop
mov
add
dec
mov
js
or
test
jg
push
pop
faddl
push
adc
add
inc
mov
leave
testb
insl
push
popa
jo
stos
inc
mov
imul
or
xchg
mov
add
dec
mov
js
push
push
lods
xchg
shlb
or
test
sub
sar
scas
std
sub
sub
cmpsb
mov
mov
adc
adc
pop
int
rolb
mov
adc
ljmp
aad
stos
xchg
imul
dec
inc
push
push
inc
mov
jmp
pop
jne
and
sbb
mov
stos
shlb
repnz
add
inc
mov
stos
inc
add
lds
jae
and
int
xor
pop
cmc
push
add
pop
scas
or
outsb
ret
jb
add
push
inc
icebp
add
leave
fsubrl
stos
mov
test
add
cs
pop
push
sarl
adc
testl
add
mov
fprem
orb
test
pop
cmp
adcb
add
adc
push
fwait
fwait
inc
inc
subl
add
enter
or
lret
sbb
or
scas
xor
push
and
add
clc
sbb
inc
mov
dec
daa
add
and
mov
iret
xor
xor
scas
repnz
test
aad
lods
add
inc
sarb
daa
test
and
mov
add
adc
jecxz
jo
sub
test
ret
aad
pop
imul
test
or
pop
scas
add
stos
inc
pusha
pop
in
adc
test
mov
scas
xchg
mov
push
imul
adc
lret
or
inc
pop
andl
inc
jmp
cmp
or
mov
push
pminsw
mov
and
and
shll
adc
and
mov
fidivrl
pop
in
mov
inc
das
push
and
jae
pop
push
dec
fsubs
pusha
clc
test
or
mov
cmp
add
lret
in
pop
dec
adc
mov
inc
dec
and
cwtl
mov
or
jnp
inc
sbb
or
mov
jo
ljmp
lcall
stos
xchg
and
or
and
cmpl
xor
mov
js
or
pop
les
inc
xor
mov
mov
mov
push
push
jo
inc
aas
loopne
or
mov
sbb
mov
adc
rcl
fwait
adc
jne
xor
andb
sub
int
jae
test
fildl
inc
ret
cmp
and
push
xchg
xchg
dec
pop
shrl
mov
inc
add
mov
xchg
loope
push
int3
mov
stos
nop
inc
jae
xchg
jne
iret
rol
lcall
push
incl
xor
jne
movsb
or
push
sbb
inc
lret
test
arpl
scas
sbb
jp
or
push
push
jb
jb
fisubrs
lock
mov
and
adc
push
push
cmpsl
rcrl
cmp
sbbb
push
jecxz
jae
push
inc
xchg
enter
data16
sub
and
icebp
and
sbb
push
sbb
dec
imul
pop
and
mov
adc
dec
jl
pop
loopne
jb
and
popa
or
sub
sub
mov
pop
dec
mov
xlat
mov
out
aam
add
mov
sbb
mov
cmp
and
stos
jb
push
cmp
mov
ret
dec
or
call
repz
push
pushf
mov
imul
loope
xor
push
cmc
adc
add
xor
or
orb
pusha
xor
mull
sub
pop
repnz
push
daa
jo
jb
mov
lahf
sub
push
and
xchg
cmp
pop
stos
add
negl
sbb
cmovne
push
adc
out
dec
lret
out
dec
cmp
mov
inc
xchg
loop
inc
pop
xor
inc
xor
call
add
jl
cmc
mov
or
adc
sbb
aad
push
push
jge
test
sub
pop
push
xchg
mov
testb
test
sbb
sbb
add
loope
dec
cmp
imul
les
mov
sbb
and
popf
and
dec
mov
mov
out
mov
push
sbb
xchg
sub
sbb
call
or
movsl
call
mov
xor
dec
jb
cmp
mov
fs
mov
add
mov
pop
xor
xchg
xchg
push
imul
pop
adc
mov
pushf
sub
mov
loopne
outsl
daa
call
push
and
jb
pop
add
mov
sub
push
or
pop
cmpsb
mov
pop
adc
xor
ret
notl
sbb
xchg
lods
sub
mov
repnz
xchg
shlb
jb
xlat
mov
jl
add
xadd
and
rolb
adc
or
bound
filds
mov
sbb
xor
aam
pop
aaa
repnz
add
mov
adc
push
pop
in
call
shrl
cmp
jg
or
mov
pop
out
or
jo
xor
jno
jnp
inc
lock
or
push
xchg
adc
scas
push
addr16
push
or
loop
fdivr
test
lods
shr
rcrb
rorl
call
mulb
push
dec
pop
std
mov
mov
test
sbb
ljmp
push
outsb
dec
aam
mov
faddl
ja
adc
andb
adc
mov
rolb
mov
sbb
push
pop
scas
out
jbe
fildl
out
test
sub
lret
js
pop
filds
inc
pop
jne
shlb
jl
sbb
mov
adc
push
stos
bound
testb
inc
lahf
adc
ret
xor
xor
into
xor
subb
push
add
data16
int3
add
push
mov
xchg
inc
inc
aad
sbb
mov
leave
adc
ret
mov
xchg
pop
and
lcall
push
stos
xlat
inc
and
push
shlb
sbb
adc
lret
fadds
sub
cld
or
imul
push
dec
xor
jg
add
outsl
or
fmuls
mov
push
nop
sub
xchg
mov
mov
push
int
adc
cmc
adc
aas
xor
pop
int
test
inc
sbb
push
jb
and
push
xor
mov
gs
jp
inc
push
hlt
add
sub
sub
addr16
sar
sbb
inc
pop
jo
push
sbb
outsl
push
and
test
js
mov
cmp
mov
xchg
testl
ss
adc
lcall
test
sub
aam
sbb
push
mov
mov
adc
or
sbbb
push
or
push
inc
mov
clc
or
aam
stc
push
jne
andb
mov
test
pop
lods
sub
das
pop
adc
aam
cmpsb
mov
mov
test
or
dec
jge
pop
clc
inc
adc
xchg
cld
add
and
inc
xor
stos
cmp
adc
in
adcb
inc
adc
shl
inc
dec
hlt
and
pop
add
lea
pop
dec
shll
mov
ret
loopne
pop
jo
jl
call
mov
inc
mov
test
fcomps
clc
and
sbb
sbb
sub
ljmp
mov
jns
or
or
rol
cmp
add
mov
pop
mov
add
cmp
and
je
xor
fcmovnb
push
cmp
inc
or
add
push
fbstp
add
mov
shlb
pop
sbb
loopne
lods
leave
push
incb
hlt
or
pop
push
loopne
pop
adcb
dec
push
push
or
cmp
loopne
dec
adc
dec
adc
rcrb
pushf
and
ret
fcmovb
inc
out
aaa
push
push
push
mov
cmp
or
stmxcsr
or
cmpsl
push
push
movsb
movsb
add
or
mov
mov
testb
jmp
add
sbb
inc
mov
xor
sub
jge
dec
inc
pop
xor
repnz
push
xor
sub
sub
fisttpl
ret
or
movsb
roll
loopne
pop
fstps
mov
or
inc
je
jg
stos
outsb
cld
and
push
cwtl
cmp
mov
insb
rolb
movsl
jns
or
cmp
inc
rolb
pop
cmp
push
mov
xor
scas
jmp
in
mov
hlt
adc
ret
push
outsl
aam
aam
add
and
ret
inc
mov
scas
mov
lcall
jns
enter
mov
rorl
sbb
push
call
sbbl
push
imul
mov
or
mov
jbe
out
bound
in
or
js
xchg
mov
push
xor
mov
mov
insb
or
inc
jo
enter
rol
adcl
loopne
sbb
and
inc
inc
outsb
or
sbb
call
cmp
xchg
rcll
fdivl
jno
jbe
das
xor
je
imul
rcrb
ja
sbb
lcall
push
jae
add
pusha
push
gs
add
sbb
push
mov
orl
mov
mov
adc
pop
shrb
jbe
fmull
mov
js
mov
adc
mov
lcall
movsb
lret
cmp
adc
dec
lret
scas
loopne
add
mov
jbe
rclb
addr16
outsb
cli
or
xchg
shl
mov
add
pusha
fadd
repz
les
call
test
andl
sbb
jnp
add
sahf
adc
shrl
ret
and
iret
imul
lret
rcll
jb
daa
mov
or
int
push
and
jb
mov
mov
jb
icebp
jbe
lret
pop
adc
fcoml
bound
adc
sbbl
pop
cli
push
push
mov
mov
mov
dec
hlt
inc
inc
adc
dec
push
inc
mov
sub
and
aam
cs
jmp
pop
mov
add
mov
movsb
lods
out
iret
pop
push
stos
cmp
push
mov
jb
test
and
aam
or
shrb
add
cwtl
inc
rcl
pop
jle
jne
inc
xchg
arpl
ret
dec
mov
jp
xor
add
or
sarb
jmp
mov
mov
add
cli
sarb
lret
push
les
xor
add
push
ss
mov
je
leave
or
ret
roll
or
stos
es
mov
mov
xor
lock
jbe
xchg
xchg
or
pop
enter
sti
int
or
push
inc
rcrl
cmp
lret
mov
notl
jp
add
aam
pop
imul
lret
pop
lods
mov
dec
xchg
mov
add
inc
mov
sbb
push
rolb
push
fwait
or
fbld
jg
shl
lea
and
add
sub
std
mov
mov
add
stc
add
and
sbb
inc
adc
mov
loopne
or
dec
xor
shlb
jbe
jmp
xchg
mov
rclb
test
leave
cmp
clc
dec
insb
adc
popa
loop
pop
mov
mov
dec
xchg
lret
dec
pop
push
popa
call
insb
mov
pop
jo
in
sbb
and
add
mov
loope
sub
and
test
xchg
orb
rorl
cmp
repz
sub
rol
negb
js
movsl
push
popf
cmp
sahf
mov
mov
shl
adc
push
call
addl
push
sub
imul
inc
es
sbb
dec
sahf
clc
or
jno
sar
pop
pop
adc
adc
adcb
add
pop
cli
xor
cmpsb
sub
mov
xor
cld
nop
cmp
add
loope
cmp
in
or
mov
movsb
call
daa
sbb
or
dec
inc
push
dec
roll
aad
daa
cltd
jb
jno
mov
add
xor
xlat
pop
cmp
or
inc
fisubs
shlb
mov
jl
inc
mov
jnp
push
inc
les
pop
add
cmp
adc
insb
add
xchg
push
mov
loopne
push
aad
push
mov
inc
push
pop
aad
mov
inc
add
adc
aad
add
fbstp
mov
mov
roll
rclb
xor
add
xchg
push
pop
dec
jo
or
cs
cmp
or
xchg
inc
pop
add
es
bound
add
push
add
mov
xor
push
mov
into
loope
je
adc
inc
popf
or
decl
add
adc
rcl
mov
adc
sbb
imull
ret
fistps
xor
pusha
decb
outsb
cmp
inc
add
mov
adc
ljmp
mov
push
add
shll
pushf
push
add
sub
cltd
sub
xorb
add
shrl
mov
pop
sbb
add
push
inc
roll
or
scas
enter
jge
adc
loopne
int
xlat
push
loopne
pop
scas
push
add
cwtl
mov
jnp
shlb
adc
pop
and
pop
ljmp
pop
pop
pop
scas
or
add
test
jmp
andl
cmp
lcall
add
mov
sbb
adc
push
and
add
push
add
lcall
icebp
dec
mov
xor
sbb
sub
push
cmp
and
jecxz
or
shl
pop
pop
roll
xchg
adc
push
inc
mov
or
jo
or
xchg
stos
mov
adc
xchg
push
outsl
adc
jge
mov
sbb
movsb
js
mov
sub
jmp
jno
test
rolb
loop
rcrb
xchg
addl
arpl
and
outsl
arpl
pop
sbb
adc
js
pushf
rcrb
movb
adc
test
or
push
push
test
scas
rclb
fisubl
or
push
ftst
addb
data16
test
sub
push
sbb
xor
mov
test
xchg
or
sub
lcall
sub
mov
call
and
push
ret
insb
pop
sbb
or
inc
mov
cmpb
ljmp
rorb
mov
push
sbbl
ret
dec
cltd
fidivl
shlb
inc
jo
inc
pop
mov
jo
iret
adc
test
lret
sub
nop
arpl
mov
inc
popa
mov
data16
sub
test
icebp
push
sbb
push
adc
call
add
inc
stos
add
orb
das
mov
cmp
clc
mov
sbb
pop
clc
nop
add
aam
lock
rcll
push
les
sti
xchg
mov
xchg
mov
ror
mov
push
push
jl
jle
.byte
xchg
div
call
in
add
cmp
cmp
cmp
sub
add
sub
imul
sub
add
mov
pand
adc
ret
shlb
pop
sub
push
or
add
mov
enter
adc
aaa
xrelease
sarl
cmp
movb
scas
insl
mov
or
leave
add
push
or
sti
mov
dec
pop
mov
mov
mov
outsl
sbb
sbb
daa
adc
imul
push
ljmp
add
mov
xor
cmp
add
sti
pushl
mov
out
jge
rorb
testb
call
inc
imul
or
mov
add
mov
insl
rorl
or
fmulp
fdivrl
leave
pop
or
divl
add
movsl
sbb
adc
mov
adc
mov
mov
adc
add
movzbl
add
mov
loop
outsl
test
dec
jecxz
cmp
inc
sub
sarl
or
or
add
filds
mov
decl
test
sub
add
fstpt
sbb
sbb
mov
sbb
into
sub
or
add
xchg
sbb
pop
push
add
adc
mov
js
rorl
or
and
ret
rclb
or
xor
mov
or
add
ret
pop
cld
and
mov
mov
pop
or
xchg
push
mov
dec
add
inc
roll
fmuls
nop
push
sub
push
or
test
adc
fmuls
icebp
lock
mov
lods
imul
and
sbb
lcall
jmp
mov
push
insl
dec
popf
shl
lock
imul
add
outsl
inc
push
sub
adc
add
fildl
or
add
pusha
sbb
cmp
ret
call
inc
insb
or
sub
add
pop
sarl
xor
pop
cmp
addr16
lcall
outsb
mov
mov
cmp
sbb
ss
jae
mov
push
mov
push
adc
cli
mov
insl
jecxz
add
adc
mov
mov
adc
mov
lods
sarb
sbb
jo
ficoml
ss
mov
add
shlb
jge
clc
adc
ret
mov
scas
push
push
into
leave
push
xchg
idivb
rorb
fistpll
pop
js
push
pop
dec
cmp
push
push
test
pop
xchg
int3
xchg
rolb
mov
adc
sbb
inc
xor
sbb
dec
mov
push
or
mov
mov
lcall
or
mov
lea
filds
lret
int
dec
cmpsb
push
jo
sbb
xor
or
lret
scas
jmp
push
push
repnz
rol
sbb
or
pop
sbb
cmp
or
insl
mov
xor
pop
pop
clc
idiv
push
sbb
incl
xor
add
adc
insl
pop
fwait
adc
cmp
xor
mov
mov
adc
sbb
sbb
and
faddl
movzwl
or
aam
adc
aaa
jmp
dec
mov
mov
mov
adc
int3
sbb
mov
sub
mov
jb
imul
or
add
pop
in
push
out
iret
inc
shll
sub
and
dec
xor
and
push
leave
ret
fisubrs
call
adc
xor
js
sbb
icebp
mov
sahf
sbb
ret
mov
pop
enter
xchg
sub
sahf
outsl
iret
addr16
scas
mov
and
xor
lcall
sbb
xchg
call
sbb
nop
or
add
sbb
sub
xor
fdivrp
push
incb
push
adc
cmpsb
mov
adc
test
adc
popa
fidivrs
mov
sub
bswap
imul
or
push
adc
dec
ljmp
xor
jmp
add
repz
cmp
jbe
add
ss
cli
adc
push
pop
xor
ja
imul
mov
into
scas
rorb
mov
lret
sbb
jecxz
icebp
arpl
mov
mov
or
cmp
jne
xchg
mov
mov
in
xor
lock
push
cmp
rcll
push
pop
out
mov
fildl
adc
lds
imul
insl
sub
pop
or
sbb
cmp
add
dec
mov
push
sub
bound
xorb
mov
les
nop
sahf
inc
jnp
cmp
sbb
inc
imul
sub
mov
rcl
sbb
shl
out
out
test
or
ljmp
mov
movhps
decb
ret
cld
test
insl
sbb
rcrb
mov
insl
pop
or
adc
in
or
jl
faddl
movsb
enter
adc
test
stos
sbb
and
push
add
mov
mov
pusha
sub
or
orl
imul
sbb
dec
sahf
add
insb
sbb
mov
mov
pop
movsb
ret
jnp
insl
xchg
mov
pusha
push
fildl
arpl
mov
cmc
mov
stc
adc
je
and
mov
xor
dec
lods
mov
xchg
js
sbb
add
or
notl
pop
push
shlb
insl
or
inc
add
xor
mov
ret
add
cmpsb
popf
popa
add
jge
or
pop
in
shl
and
ret
mov
rorb
outsb
clts
imul
add
or
sbb
jb
addr16
mov
sahf
jnp
inc
rcrl
sub
es
fsts
dec
pop
adc
das
adc
sbb
add
mov
push
adc
add
lock
lock
add
call
adc
imul
pop
in
pushf
sarl
lcall
sbb
add
mov
jae
pop
iret
sti
fs
fstpl
daa
mov
pop
hlt
and
inc
lock
push
ret
fstpl
out
sbb
adc
lret
pop
jo
add
scas
mov
cmp
fs
adc
push
imul
push
cmp
mov
bound
add
sbb
pop
es
lret
stc
add
mov
sbb
or
orb
sahf
and
lock
sar
mov
mov
or
mov
dec
je
rcrl
fiadds
or
inc
or
pop
ret
fcoms
push
push
push
or
push
fs
cwtl
mov
push
push
leave
lock
clc
push
bnd
mov
add
mov
sub
pushf
mov
movsb
sbb
mov
xor
aaa
mov
lock
jge
test
sbb
or
es
add
insb
das
add
outsl
inc
repz
inc
hlt
add
add
sub
in
xchg
sbb
sbb
cmp
stos
loopne
mov
cmpsb
ds
or
ffreep
sbb
cmpsb
push
sbb
stos
jno
sahf
or
ds
mov
pop
scas
mov
lock
push
add
fisttpll
mov
in
rcrl
sbb
fiaddl
in
cmp
or
divb
loope
dec
adc
mov
jbe
jmp
rcl
lock
add
jmp
mov
ret
xor
outsl
add
mov
das
mov
xor
testl
outsl
icebp
cmp
lock
and
sub
add
lcall
sbb
pop
insl
mov
fsubr
cmp
ss
repz
cs
push
lcall
mov
shll
xchg
rol
lea
inc
lods
aam
dec
addl
sbb
movsl
pop
call
fildll
int
adc
iret
push
mull
adcb
jns
subl
incb
lgs
xchg
sbb
cld
lods
or
jne
inc
sbb
jge
pop
mov
push
xchg
daa
faddl
jge
sbb
mov
push
mov
xchg
lret
data16
aas
and
mov
repnz
shlb
shll
je
ljmp
or
cwtl
and
adc
lds
push
cwtl
pushf
inc
lods
xor
jno
imul
fisttpl
movsl
or
mov
mov
shr
pop
dec
in
adc
ret
jb
dec
mov
add
mov
xor
jbe
mov
jmp
lea
insb
prefetch
inc
sbb
mov
inc
fildl
jo
sub
mov
insl
jnp
mov
inc
push
jb
scas
cs
or
imul
imulb
int
leave
push
repnz
lret
sub
cmp
addl
jae
mov
mov
jno
shl
pop
leave
xor
jns
test
xchg
lods
test
rorl
es
mov
cmc
jecxz
in
iret
inc
scas
cmp
les
call
mov
rorl
daa
out
aaa
sbb
mov
xor
jge
and
inc
insb
push
mov
mov
and
adc
test
lds
lods
hlt
test
xor
fsubr
mov
sbb
dec
or
xor
add
jo
clc
inc
jb
enter
mov
xor
icebp
add
jmp
or
insb
dec
adc
loop
ljmp
ret
add
push
add
dec
dec
sub
jo
ljmp
cmpsb
pop
in
in
add
loope
xchg
push
or
or
cmpsb
rclb
mov
shrb
inc
adc
call
and
dec
pop
cmpsb
or
or
push
mov
sarb
cmp
push
adc
es
lock
push
data16
lahf
cmc
fiaddl
pop
dec
pop
lock
je
or
push
or
add
ret
or
mov
and
lods
add
lock
cwtl
out
imul
repz
push
leave
push
or
xchg
inc
cmp
loop
stc
movsb
jg
push
jge
repnz
adc
mov
add
mov
push
cld
jle
adc
and
scas
push
push
std
or
pop
mov
ret
push
mov
and
inc
jecxz
rorb
sahf
into
cmc
rolb
or
cmpsl
cmc
push
add
xchg
mov
mov
sbb
aas
add
cmp
xor
movsb
inc
insb
mov
cmp
sbb
in
ss
push
push
add
dec
or
sub
pushaw
inc
push
stc
add
jns
fwait
dec
pop
ret
push
outsl
mov
sbb
mov
dec
adc
push
push
popa
and
addb
sbb
adc
mov
repnz
cmp
insb
or
or
das
push
out
popa
shrl
push
xchg
cltd
and
arpl
or
loope
mov
mov
add
mov
ljmp
cmp
mov
clc
mov
inc
ljmp
repz
xchg
xchg
pusha
xor
aas
push
and
mov
cvtps2pd
bound
mov
pop
insl
add
add
add
sbb
ss
fcomps
ret
push
inc
pusha
ja
rolb
pop
arpl
fwait
adc
dec
and
popf
lcall
push
icebp
jl
sub
xor
adc
jp
push
leave
sbb
adc
ret
pop
loopne
push
ljmp
lcall
inc
cld
push
roll
xor
insb
sbb
mov
push
jecxz
push
aad
mov
push
add
mov
fwait
sahf
sbb
inc
adc
test
xchg
adc
mov
xlat
push
add
shll
cmpsb
cmpsb
sub
outsb
shlb
jnp
into
mov
jbe
ss
mov
or
mov
mov
bound
js
pop
lea
mov
cltd
in
inc
adc
je
cmp
cmp
or
jl
push
xor
iret
add
das
imull
fisubl
dec
scas
testb
ss
inc
ret
xchg
mov
call
sbb
sti
gs
jo
cmp
and
xlat
and
ret
pop
push
sbb
cmp
pop
sub
jmp
push
xor
rorl
in
or
sbb
std
mov
push
add
push
or
mov
and
test
push
add
or
inc
fistpl
andb
rol
pop
jmp
int3
xchg
adc
test
push
cmp
stc
call
inc
cmp
push
inc
mov
leave
sub
add
xchg
ret
dec
pushf
or
pop
cltd
lods
daa
roll
sti
enter
aam
icebp
clc
dec
mov
loope
rolb
aam
loop
loope
cmp
add
lods
sbb
mov
add
mov
shrl
push
adc
adc
push
loope
xchg
or
roll
jo
jl
icebp
movsb
inc
lods
ret
push
sahf
shll
or
push
cli
lahf
fdivrs
xor
leave
push
push
push
andl
dec
sbb
or
cmp
cltd
pop
int
push
push
ret
adc
or
adc
jecxz
push
add
inc
inc
xlat
jo
xchg
add
xor
jo
addr16
pop
mov
je
push
push
mov
in
cmp
movsl
mov
or
adc
cmp
cmpsb
push
lock
jo
mov
inc
inc
cmp
dec
cld
enter
or
sbb
pop
loope
add
je
xchg
shlb
fs
clc
mov
out
pop
dec
xchg
push
leave
mov
sbb
and
push
or
bound
frstor
rcll
adc
aas
roll
pop
shrl
adc
dec
test
inc
std
ds
js
cmp
push
adc
or
repnz
mov
scas
movntps
push
shl
stos
insl
dec
sbb
add
jl
imul
popf
cmp
popf
sbb
cld
sarl
mov
fdivs
fadds
cld
shlb
dec
pcmpgtb
cmp
push
loope
add
ret
lea
cmp
sbb
add
ret
push
in
push
xchg
pop
pushf
loop
adc
push
mov
xchg
or
int3
and
sbb
xchg
push
aam
arpl
in
pop
mov
or
cmp
push
lcall
out
push
rorb
les
rorl
inc
sub
loope
scas
pop
or
pop
nop
js
subl
ficoml
ffreep
add
or
in
shrl
mov
test
pop
mov
push
leave
sbb
inc
xchg
or
or
push
nop
js
push
clc
push
popf
jmp
cli
mov
jo
mov
pop
xchg
push
sub
out
push
int3
inc
cmp
nop
fisubl
mov
and
fidivl
add
rclb
aad
fistpll
sti
imul
mov
and
repnz
sahf
push
xchg
xor
push
aam
imulb
in
add
int
sbb
push
mov
push
fiaddl
mov
or
add
add
push
pop
cmp
int
ds
jb
pop
or
xor
in
subb
mov
rcll
out
lock
xchg
mov
or
subl
test
ret
aas
insb
loopne
out
gs
adc
rorb
sbb
add
sbb
mov
sbb
push
add
pop
cmpsl
call
mov
mov
jmp
fisubl
inc
popa
adc
js
mov
and
sahf
mov
es
stos
icebp
xorl
insb
aam
mov
and
adc
orl
mov
jno
aam
jb
movd
push
ret
enter
push
dec
pusha
leave
dec
rolb
std
xor
js
sbb
insb
testb
ret
cwtl
lea
xor
jg
add
inc
xor
or
mov
or
dec
or
sbb
cmp
ret
jo
nop
or
dec
in
je
add
cmp
pop
mov
adc
lret
xor
mov
xchg
cmp
sub
and
add
xor
or
jne
movsb
mov
in
pop
or
fisubrs
mov
mov
sbb
test
mov
out
or
xor
jecxz
push
sub
gs
mov
lock
test
arpl
pushf
dec
enter
mov
jl
ret
andl
xchg
xchg
leave
lret
or
inc
cltd
cwtl
test
cli
push
and
push
paddsw
lret
clc
pop
and
call
mov
sbb
test
js
xor
mov
movsb
daa
divb
pop
push
xchg
cli
mov
cmp
fisubs
mov
push
mov
pop
pop
cs
rorb
push
xchg
inc
adc
sbb
push
stos
mov
rcrl
dec
jmp
mov
in
cmc
or
cwtl
lods
test
clc
adc
sub
dec
ret
cmpsb
or
insb
mov
sbb
jmp
add
cs
ss
sbb
ret
or
mov
adc
lock
mov
xchg
aam
add
adc
push
push
xor
add
inc
xchg
jp
cmpsb
mov
sub
nop
movb
pop
jno
sar
mov
scas
insl
out
lret
cs
xchg
push
or
add
out
sar
sti
inc
adc
ret
adc
lods
mov
push
adc
and
int3
je
or
jns
dec
cmp
idivb
shlb
xor
adcb
cwtl
je
lret
mov
lds
in
dec
imul
sbb
lret
cmp
mov
sbb
inc
mov
push
and
loope
xchg
aam
or
shlb
push
jmp
xchg
mov
mov
pop
mov
adc
add
inc
xchg
into
and
pop
pop
jne
out
icebp
push
cmp
sbbb
adc
pushf
shll
mov
es
or
xor
inc
mov
imul
sub
mov
push
cmp
outsb
push
repnz
jno
push
mov
pop
or
or
daa
rclb
fiaddl
jl
sbb
scas
mov
push
push
pop
jp
sub
jo
jmp
in
adc
xor
cltd
lret
xchg
jo
xchg
shrl
fmuls
sbb
rol
push
mov
or
pop
in
jg
pop
bound
cmc
adc
or
adc
jmp
and
adc
ret
pop
cmpsb
inc
imul
sub
pushf
test
imul
ss
sbb
sub
jmp
push
sbb
lret
push
inc
sub
mov
cmp
adc
xchg
mov
mov
cltd
leave
sub
sbb
rolb
add
aam
scas
shll
test
or
sbb
push
xor
imul
mov
sbb
xor
push
xchg
loope
movsl
psrld
sub
dec
push
gs
popa
adcl
mov
gs
xchg
push
adc
sub
rcrb
pop
jne
adc
lds
mov
icebp
push
lret
nop
fsubrs
rolb
or
fdiv
inc
xor
sahf
sub
rcrb
inc
add
pop
jnp
xor
dec
into
sbb
movsb
xchg
sbb
xchg
mov
inc
aaa
mov
mov
sub
test
les
cmp
sbb
inc
iret
push
lcall
pop
mov
or
adcb
mov
inc
sub
mov
ljmp
adc
pop
xchg
pop
fcoms
inc
and
insb
hlt
icebp
mov
push
outsb
jmp
gs
nop
mov
and
aaa
ret
push
loop
mov
pop
pop
cltd
iret
add
sbb
mov
out
cmc
sbb
jne
lea
cmpsl
push
push
test
mov
mov
or
sub
sub
shll
mov
mov
imul
clc
mov
dec
insl
mov
lods
cli
and
mov
ja
inc
or
repz
inc
mov
jge
mov
testb
add
pop
dec
mov
xchg
pop
mov
sbb
iret
ret
into
fwait
movsl
scas
shll
iret
add
add
call
sbb
mov
dec
xor
inc
into
push
movsl
mov
mov
loop
jmp
dec
mov
out
aad
lret
mov
iret
rolb
ss
out
adc
xchg
adc
jecxz
dec
mov
xor
sub
and
mov
and
xchg
int
jge
dec
cmpsb
jbe
xchg
mov
push
cmp
test
rcl
ficompl
jle
into
adc
or
sbb
dec
add
rorb
inc
test
push
add
loopne
or
xchg
mov
inc
xor
sbb
mov
stc
add
stos
push
cmp
add
roll
jb
fs
mov
xchg
pop
rol
cwtl
and
mov
inc
adc
rcl
or
mull
test
fidivrl
push
or
dec
scas
loopne
rclb
mov
lcall
bound
shll
push
inc
add
pop
je
or
mov
cmp
and
mov
test
nop
nop
and
sub
mov
push
sub
add
xor
lock
adc
shrb
jo
jp
xchg
sbb
popf
fistl
adc
or
dec
sub
mov
inc
insb
stos
jecxz
into
mov
je
fld
pop
push
jl
push
jp
iret
cmp
sub
imul
or
lea
testb
adc
push
int
sbb
ljmp
aad
call
ret
shlb
or
push
mov
and
fisubrl
push
cs
add
nop
push
shll
inc
ljmp
js
fsts
lea
aaa
fcomp
adc
loopne
adc
adc
jb
rcll
cli
push
or
sbb
inc
pop
mov
test
mov
sbb
shll
adc
and
sbb
andb
xor
sbb
pop
xchg
mov
scas
rclb
enter
sbb
cli
out
out
inc
push
cmp
add
cmc
or
cli
sub
inc
pop
push
push
cmp
xchg
dec
scas
mov
or
and
mulb
addr16
sub
aad
cmp
mov
add
mov
push
mov
addb
icebp
adc
xchg
mov
pusha
push
mov
pop
mull
or
push
movsl
adc
push
in
mov
xchg
fidivl
outsb
pop
repnz
push
pop
mov
add
out
cmpsl
test
lds
mov
cmp
sub
push
movsb
adc
dec
rorb
cmc
sbb
mov
ret
mov
sbb
ret
pop
leave
xor
ds
scas
jl
mov
leave
jle
rclb
pop
cmp
xchg
fisubs
pop
test
push
daa
ror
pop
movl
mov
out
xor
or
push
cs
dec
arpl
inc
stos
mov
mov
add
mov
stos
rol
xchg
scas
stos
sbb
xor
or
adc
sbbl
lods
push
add
push
les
or
ret
subb
scas
mov
pop
bound
cmp
movsb
shl
mov
push
and
pop
into
mov
mov
enter
or
xor
clc
pop
mov
lea
add
ret
pop
xor
jno
into
and
and
fucom
mov
leave
mov
mov
lds
enter
lcall
ret
inc
les
add
push
adcb
inc
push
dec
sub
sbb
sti
adc
inc
test
pop
dec
cmp
and
or
adc
push
mov
adc
jne
lock
rorb
lret
dec
lea
cmp
popf
ret
inc
jae
arpl
jecxz
push
cmp
mov
jno
out
push
or
pop
push
add
inc
add
inc
pop
cmpsl
stos
ss
sbb
rcrb
mov
cmp
or
mulb
sbb
js
pop
rcrl
out
popa
cmpsb
ror
lds
xor
add
inc
mov
xchg
out
pop
xor
push
cltd
lcall
mov
lods
dec
inc
adc
adc
jl
mov
sbb
inc
or
fistpl
cmp
lock
ja
sarl
jg
fs
mov
mov
icebp
xchg
pop
adc
mov
add
lock
ja
pop
shrl
push
outsl
ljmp
dec
out
call
lcall
sub
mov
push
jp
or
or
es
sbb
and
add
lods
clc
jb
mov
call
je
lods
cltd
repnz
push
jb
and
or
push
addl
fst
orb
out
aam
pop
bound
jae
fstps
pop
shlb
ret
add
fldl2t
sbb
sub
cmc
test
sub
push
push
mov
mov
inc
mov
imul
add
loopne
sbb
dec
leave
pop
roll
mov
or
and
or
js
aam
es
add
lcall
jb
sbb
or
dec
int
popa
ret
pop
xor
mov
test
and
pop
or
lock
cltd
mov
stc
and
sbb
aad
or
test
enter
and
rcrb
js
add
outsb
or
add
add
adc
push
imul
add
mov
pop
or
mov
mov
rcr
ss
loop
push
sbb
xchg
mov
stc
xor
loop
add
idivb
mov
sbb
ret
lcall
mov
or
sub
inc
dec
into
sub
xchg
add
or
mov
push
jne
mov
mov
mov
pop
mov
or
scas
nop
xor
or
pop
or
cmpsb
xchg
inc
inc
cmp
orb
fldl
insb
bound
loop
dec
ret
sub
call
xor
add
test
or
add
xor
rorl
lret
out
adc
dec
aam
enter
jmp
cmp
xchg
sbb
test
nop
or
aad
adc
loopne
pop
pushl
adc
lock
xchg
mov
or
and
add
push
xchg
adc
mov
loop
shrb
add
lock
int3
not
sbb
cli
pop
sahf
adc
test
rcl
stos
xchg
and
inc
sbb
or
ds
fcomip
and
push
xchg
push
scas
es
aam
cmp
enter
push
movb
sbb
ret
or
and
add
sub
js
xlat
shl
aad
push
sbb
pop
sbb
or
sbb
cmp
dec
insl
push
sub
and
sub
sbb
push
add
ljmp
rolb
roll
ret
lret
add
jno
mov
and
push
jmp
adc
push
push
and
rolb
push
cltd
push
mov
push
mov
clc
xchg
push
adc
jl
enter
inc
sub
mov
or
mov
out
xor
outsl
sbb
mov
lea
je
mov
push
in
and
push
ror
mov
or
add
adc
fsubl
sbb
adc
sbb
ret
inc
push
adc
testb
push
or
xor
jp
jb
inc
scas
out
or
sbb
test
pop
sub
aam
imulb
add
mov
mov
shrl
xchg
fs
pop
mov
adc
imul
es
rcll
or
mov
mov
xor
stos
inc
shr
push
xchg
clc
stos
push
aaa
jb
divb
dec
les
add
push
movsl
push
loopne
sbb
fimull
push
inc
outsl
ret
sub
ret
dec
sbb
mov
loop
push
shlb
sub
out
xor
add
push
push
mov
fstl
sbb
cmp
adcb
loopne
and
test
push
fisubs
stos
jp
add
push
testb
add
loope
scas
fidivrl
jge
push
sbb
xor
aad
mov
or
mov
sarl
jo
push
mov
dec
or
xlat
inc
test
mov
add
inc
pop
adc
xor
jno
cmp
icebp
cmc
test
xchg
rorb
addr16
jmp
sbb
mov
mov
dec
call
xchg
stos
scas
adc
pop
mov
std
and
or
lock
in
xor
in
test
or
mov
jle
sbb
dec
sub
pop
enter
and
enter
or
sbb
int
xchg
pusha
jae
insl
adc
xor
push
cmpsb
mov
xor
push
les
fcomip
andb
cmp
cwtl
dec
xchg
fwait
jb
adc
or
insb
incl
inc
test
inc
sub
call
loop
or
mov
mov
scas
cmp
add
sub
data16
xor
mov
loopne
out
cwtl
sbb
data16
mov
lsl
jge
dec
sbb
or
insb
enter
pop
into
lds
push
cmpsl
pop
into
cmp
jne
push
sbb
sarb
mov
inc
and
mov
subb
add
push
inc
movsb
test
push
mov
jne
cmp
sbb
inc
xchg
push
add
cmp
movsb
ret
adc
aad
or
popa
pop
adc
and
aad
cmpsb
add
aas
dec
aam
cwtl
cld
dec
cld
or
and
and
xchg
in
add
push
je
add
rcrl
andb
or
push
sub
addl
push
les
lea
sarl
js
mov
cmp
outsb
ljmp
ljmp
into
pop
out
jl
inc
scas
popa
sub
jae
rolb
aas
mov
test
gs
pop
cli
pop
mov
and
test
adc
popf
adc
add
xor
bound
add
add
fistl
je
add
lret
into
icebp
add
mov
inc
push
stc
int
sub
jbe
popf
mov
je
add
jg
call
push
or
sbbb
push
bound
pop
dec
pop
xchg
mov
mov
dec
push
and
jo
push
inc
rclb
mov
jmp
or
loope
clc
lret
adc
jo
push
cld
mov
add
cmp
sbb
xor
test
pop
mov
imul
and
sbb
adc
jb
push
or
pop
cs
inc
sub
push
push
es
inc
jp
fsts
aaa
roll
xchg
jnp
add
xchg
pop
inc
and
aad
in
mov
sub
lret
push
mov
sbb
ret
xchg
mov
and
mov
add
pusha
leave
inc
mov
dec
fwait
pop
cmpsb
lcall
dec
push
add
mov
loopne
push
inc
xchg
insl
mov
xchg
push
jb
ret
pop
decl
mov
jg
push
leave
mov
dec
push
adc
xchg
sbb
cs
rorb
notl
mov
sub
push
les
shlb
imulb
mov
aad
es
mov
lcall
or
sub
add
add
sub
mov
mov
or
mov
pop
adc
rorb
jecxz
sub
push
mov
movsl
inc
mov
rclb
cmp
inc
es
xchg
jl
test
rorl
xlat
inc
sub
nop
lock
sbb
sbbb
test
cmovb
push
or
int
movl
shl
ret
loope
push
mov
or
clc
aam
sbb
jns
or
mov
or
jecxz
mov
push
push
jno
adc
inc
sbb
push
dec
shrl
mov
cwtl
mov
add
and
sbb
push
lock
stos
rolb
xchg
mov
mov
sub
cmp
ficomps
int3
ret
mov
add
inc
add
ret
subb
pushf
inc
popa
inc
int
sub
sub
stc
sbb
push
ret
xor
sbb
add
leave
sbb
mov
loope
movzwl
sbb
cmp
je
push
repz
or
pop
push
test
adc
push
stos
xchg
pop
adc
jb
bound
sub
sahf
mov
mov
adc
ret
add
iret
in
std
mul
andb
adc
rorl
add
outsb
mov
mov
adc
pop
pop
arpl
mov
pop
sub
sbb
pop
call
icebp
or
rolb
inc
sub
cmp
xor
or
movsl
sbb
inc
mov
mov
or
push
xchg
loop
fsubs
adc
sbb
push
mov
xchg
das
lret
xchg
xchg
test
or
dec
sbb
xor
add
sbb
inc
push
std
enter
push
rclb
arpl
idiv
dec
icebp
xchg
mov
sbb
mov
sub
aad
mov
loop
pop
push
lds
mov
out
les
scas
mov
adc
cmpl
rclb
xchg
sbb
inc
movb
aad
push
pop
jmp
shl
imul
sbb
sub
sbb
cmpb
pop
sbb
mov
jp
inc
jo
imul
aad
je
sbb
inc
scas
rcll
sub
and
dec
icebp
sbbb
lock
fld
rorb
jle
popf
add
cltd
sbb
mov
dec
and
pop
out
test
lds
push
push
adc
push
daa
push
push
sub
sub
enter
sbb
push
or
das
adc
lods
or
jge
into
adc
or
popa
sbb
mov
int
push
sbb
xchg
push
xchg
or
xor
sti
pop
movsb
xchg
sbb
or
rcll
popf
fdivr
pop
loopne
pop
popa
stos
sbb
enter
neg
mov
in
scas
inc
sbb
mov
cmp
mov
punpckhdq
pop
or
xchg
pop
adc
push
xchg
push
sbb
jno
les
mov
or
test
es
test
jo
rcr
enter
push
es
add
mov
cwtl
push
mov
mov
or
dec
jp
test
jge
and
or
push
mov
mov
or
repnz
inc
cmp
jmp
add
pop
adc
mov
scas
mov
cld
add
aad
mov
or
push
add
fidivs
fsts
movsl
sbb
push
ljmp
lcall
mov
sarb
push
test
push
add
repnz
nop
ret
movlps
dec
adc
lods
or
sub
mov
loope
jmp
sub
dec
cmova
daa
imul
pop
xchg
insb
push
jg
sub
push
add
sbb
gs
repnz
add
jo
cmp
call
mov
out
pop
adc
add
ret
xchg
or
inc
sub
mov
mov
icebp
push
sbb
or
and
pop
enter
mov
sub
xchg
fadd
add
add
adc
sbb
mov
test
int
xchg
lds
scas
cmp
jmp
add
mov
insb
dec
in
inc
addr16
loope
shrb
gs
add
out
lahf
je
adc
shrl
or
mov
xchg
or
clc
lods
add
shrl
leave
inc
xlat
jecxz
cltd
movsl
bound
sar
gs
mov
ret
pop
or
sti
pop
cld
sbb
enter
push
adc
sbbl
adc
mov
inc
das
sti
sub
sub
loopne
adc
out
sbb
push
cmpsb
test
popa
push
mov
stos
imul
sbb
cltd
subb
fs
adcb
out
call
movsb
aam
fstpl
mov
inc
inc
xor
pop
inc
sub
push
xchg
sub
push
sub
add
vmovlps
xchg
mov
rcll
xor
popf
cmp
pop
add
sbb
test
roll
leave
test
out
push
sub
rcll
cmpsb
pop
shl
adc
pop
cwtl
sub
ljmp
dec
ret
mov
lock
jne
arpl
dec
cmp
push
push
push
addr16
loope
orl
sbb
add
xor
aas
or
or
in
sbb
inc
aad
bound
filds
scas
jbe
roll
mov
scas
jo
xchg
test
mov
mov
push
cs
fiaddl
sub
push
add
jp
sbb
test
sub
inc
pop
inc
and
imul
ret
jno
inc
xor
xchg
test
sub
mov
gs
enter
or
adc
pop
bound
cmp
in
adc
mov
add
ds
adc
sub
or
add
sbb
fmul
clc
or
jmp
addb
adc
adc
mov
cmp
add
test
push
sub
xchg
adc
pop
scas
ficomps
and
out
fs
push
fs
inc
inc
popf
inc
xchg
or
mov
add
or
mov
sub
sbb
push
pop
mov
xchg
push
cs
bound
sbb
orb
mov
scas
addb
rolb
push
inc
es
pusha
push
adc
push
adc
push
mov
shrb
pop
andl
or
outsl
shrl
add
dec
rcll
xchg
shrb
push
jno
cmpb
or
push
mov
lret
or
aam
hlt
add
mov
lret
jo
dec
push
ret
inc
lds
jecxz
rcll
pop
test
test
or
andl
mov
in
sbb
sbb
add
and
push
jnp
mov
push
push
and
in
inc
and
mov
dec
lock
popa
or
pop
in
and
or
add
mov
sbb
xor
pop
out
add
cltd
jbe
mov
data16
sbb
mov
mov
aam
xchg
xor
mov
call
and
cmpb
xlat
ret
mov
lret
mov
mov
xchg
aaa
mov
shlb
jg
adc
mov
jo
dec
adc
inc
scas
inc
xchg
or
mov
es
rolb
add
jle
pop
lods
mov
enter
xchg
bound
dec
lahf
insb
enter
add
lcall
and
inc
sub
les
test
icebp
or
ret
add
mov
adc
xchg
sub
mov
pop
fildl
test
ja
call
and
rcll
sbb
jae
push
lea
inc
test
xor
push
xor
push
sbb
lret
ja
pop
xor
push
lock
pop
xchg
and
inc
rcrl
push
adc
pop
xor
add
pop
test
sub
adc
adc
jge
lret
adc
ret
mov
adc
mov
clc
pusha
or
or
mov
inc
add
loop
adc
jne
cmp
das
pop
cmp
fs
ret
jmp
mov
rorb
vpmaxsb
cltd
cli
pop
movb
push
test
mov
lock
cli
and
push
xchg
jg
push
mov
lock
cli
stos
test
cmp
cmpsl
add
dec
sbb
stos
or
js
add
jae
push
adc
push
nop
xor
sbb
or
push
loop
in
inc
rcrl
mov
gs
shlb
lahf
mov
xchg
xor
inc
clc
popa
pop
rolb
rorb
shlb
mov
sub
mov
repz
push
adc
test
push
mov
add
xchg
sub
test
mov
mov
inc
testb
adc
or
movsb
pop
sbb
rclb
test
xor
cmpsb
loop
test
xor
test
fldt
mov
movsb
enter
jp
ud1
subb
stos
jnp
aas
or
add
push
mov
xchg
test
pop
pusha
or
mov
movsl
sub
lock
loope
fwait
mov
call
cmc
or
jmp
cmp
or
add
stc
mov
sub
sub
ret
push
pop
aam
pop
sbb
jle
aas
ret
mov
cli
push
or
testb
es
sub
push
mov
push
push
push
xor
loopne
add
inc
xchg
xchg
push
xor
mov
ss
xchg
push
push
jl
shll
fmull
fisubrl
push
mov
incb
pop
inc
divb
xor
fnstsw
pop
shrl
gs
loopne
adc
rcll
call
movsl
repnz
mov
mov
dec
or
mov
jbe
mov
and
add
or
push
stos
add
lahf
push
mov
imul
fdivrp
sbb
sbb
lret
shlb
cmp
xchg
sbb
cmp
and
add
xor
mov
xchg
sbb
xchg
shrb
icebp
ret
sbb
xor
lods
aad
insl
pop
adc
pop
pop
ss
test
jmp
push
sbb
add
shll
lcall
mov
pop
test
cmp
sbb
dec
das
repnz
add
and
pop
adc
insb
lret
gs
js
push
out
adc
cwtl
push
jecxz
ret
mov
in
insb
or
call
femms
add
test
popa
sub
insl
cmp
mov
test
jae
xchg
or
xor
mov
cmpsb
xchg
cwtl
or
in
add
add
cmc
gs
cmpsb
lcall
insl
adc
test
loop
or
inc
test
pop
xor
sub
enter
push
mov
xchg
xor
mov
xchg
or
dec
xor
adc
adcb
or
xchg
mov
add
add
mov
adc
xor
mov
xor
ljmp
rcl
popa
xor
ret
sbb
icebp
in
icebp
push
es
jb
stc
xchg
clc
push
stos
adc
cmp
and
push
push
push
mov
jo
mov
in
mov
jmp
leave
sahf
mov
shlb
loopne
sbb
fiadds
loop
and
pop
add
dec
divb
pop
movsb
sub
or
mov
add
xchg
adc
push
mov
or
test
adc
xor
or
jmp
push
out
fisubrs
and
mov
jb
mov
inc
sub
push
mov
call
and
xor
test
add
or
je
mov
insl
es
shrl
pusha
dec
inc
sbb
and
jne
clc
add
jmp
or
or
dec
mov
ss
add
std
fiaddl
push
push
push
dec
lea
push
test
cmp
rcl
push
scas
sbb
lcall
into
or
mov
adc
icebp
add
pop
or
testl
mov
lds
mov
mov
push
ljmp
push
pop
and
adc
sti
add
adc
push
dec
xchg
pop
dec
ret
xchg
decb
push
pop
loopne
mov
pop
orb
jo
jns
in
stos
and
jo
sbb
fdivrs
jmp
pop
sbb
sbb
add
stos
fadd
adc
jb
pop
roll
push
mov
call
notb
pop
cwtl
stc
insb
jo
push
loop
shl
cwtl
mov
pop
push
or
push
jmp
adc
fdivl
pop
inc
and
cwtl
dec
nop
ret
mov
stos
cmpsb
sbb
fldcw
sbb
ljmp
add
add
lret
dec
aad
push
sub
cmp
loopne
or
push
lods
xor
dec
mov
in
incb
inc
enter
cld
mov
sub
sahf
pop
pop
loopne
cmp
xor
leave
rolb
mov
add
xchg
jns
lcall
jb
sub
sub
fidivrs
add
sbb
fiadds
cmpsl
adc
cmp
scas
clc
add
push
push
sbb
je
cmpsb
sbb
or
sarl
sti
add
int
js
pop
sbb
lods
bound
xchg
call
pop
and
sbb
or
bound
addb
js
mov
popa
inc
xchg
jb
pop
push
xchg
cmp
sbb
sbb
push
fisubrl
jp
dec
or
jmp
inc
sub
mov
sarl
pop
add
rorb
push
insl
enter
in
or
dec
xchg
cmp
test
fisubl
and
add
add
push
pushf
sbb
add
inc
push
sbb
xor
lcall
adc
pusha
rolb
xchg
adc
daa
ja
push
in
and
push
test
rolb
sub
les
xlat
aam
int
inc
adc
sbb
aad
adc
and
adc
test
mov
mul
dec
adc
lret
ljmp
movsb
pop
popw
sbb
es
push
mov
sub
aas
lds
adc
adc
push
shl
mov
add
mov
ret
dec
dec
mov
cmp
scas
jb
cld
or
loope
inc
in
sub
adc
or
mov
mov
and
cmp
xchg
repz
in
imul
xchg
or
shll
sub
popa
and
xchg
inc
test
push
adc
lock
or
enter
adc
les
imul
mov
inc
cmpl
and
mov
mov
push
mov
daa
push
push
test
jne
xlat
out
loope
or
loop
cmp
or
cmpsb
int
and
sbb
jo
fwait
cmpsb
push
cmp
or
dec
adc
faddp
mov
pop
lds
aaa
and
or
adc
push
pop
adc
mov
sbb
fs
push
mov
push
cld
call
gs
sbb
push
call
lods
lret
inc
sub
pop
lds
dec
mov
pop
add
cmc
inc
add
imul
repnz
ret
adc
xchg
cmp
dec
sbb
xchg
inc
or
push
loop
xchg
addr16
add
nop
popa
mov
or
mov
iret
shll
pop
pop
cli
leave
inc
cmp
stos
call
cmpsb
sbb
push
or
lock
pusha
jno
in
xchg
mov
imul
lcall
lea
xchg
add
mov
movsl
call
inc
cmp
ret
sbb
sub
subb
insb
rol
jno
stos
add
adc
sub
pop
out
sub
lds
or
mov
inc
push
or
mov
mov
sbb
orl
lcall
push
jno
ss
icebp
xor
adc
adc
add
ret
sub
mov
fwait
stos
mov
cmp
popf
ss
notb
lock
sub
jl
or
dec
pmovmskb
roll
mov
push
push
fs
mov
clc
ret
mov
inc
or
pushf
mov
push
xor
sub
in
shlb
sahf
mov
insb
mov
sarb
or
adc
roll
push
insl
cmp
adc
mov
xchg
fwait
shlb
mov
mov
jecxz
push
insl
stc
lcall
add
movsl
cmpsl
lret
add
xorl
cmp
or
rcll
adc
add
sbb
push
mov
adc
scas
inc
mov
sbb
push
stos
add
xchg
add
push
push
or
mov
roll
inc
nop
out
push
gs
add
mov
inc
adc
dec
roll
cmp
mov
inc
pushf
mov
xchg
ljmp
movsl
adc
enter
add
xor
frstor
push
popf
rcll
pusha
test
xchg
or
inc
loopne
or
ficompl
out
mov
sub
sub
or
lret
stos
add
adc
push
lock
xor
adc
or
test
push
imull
sub
orb
adc
or
rol
test
xchg
fistl
mov
push
adc
lret
aas
sub
push
test
lret
int
cmp
cmp
add
sbb
filds
push
insb
stc
sbb
sbb
jl
sub
cmp
dec
scas
pop
mov
daa
aas
cmc
push
mov
push
jmp
fs
jno
pop
cmp
push
or
mov
popa
shl
and
push
and
int
jmp
cltd
les
push
test
movsl
xor
int
adc
test
pop
fwait
sbb
mov
add
jmp
and
dec
cmp
ret
scas
ljmp
push
pop
aas
lahf
adc
shll
push
loop
cmp
inc
dec
daa
and
cmp
in
push
cmp
pop
lds
pop
in
push
loop
icebp
dec
push
jb
sub
insb
jb
xchg
in
lods
pop
jo
adc
push
test
notb
add
not
testb
jo
addb
push
pop
sub
pop
outsb
ret
add
mov
sbb
mov
pop
add
cmpsb
push
dec
or
xorl
lret
mov
jne
in
inc
inc
ja
xchg
imul
sub
outsb
mov
lock
and
sub
or
ficomps
sbb
subl
pop
xor
cmp
xchg
in
add
test
push
movl
cltd
mov
inc
sahf
out
mov
dec
pop
lods
mov
push
lret
call
add
mov
dec
lods
add
xchg
add
in
dec
push
adc
inc
xchg
loope
stos
or
and
nop
dec
adc
add
cltd
adc
insl
sbb
mov
repz
xor
mov
les
mov
or
and
cmp
cmp
xorb
mov
jle
xor
add
cltd
aam
and
filds
and
andb
stos
inc
xchg
cmp
jo
hlt
adc
andb
xor
xor
and
inc
shll
pusha
add
test
mov
mov
adc
sbb
cmp
adc
lock
mov
jo
jb
daa
addr16
xchg
cmp
cmpl
mov
xchg
aad
dec
mov
pop
in
sbb
jle
loope
sbb
mov
adc
orb
je
sbb
sbb
rorb
and
mov
mov
or
jb
mov
pop
ret
mov
icebp
mov
xor
aad
outsb
adc
js
lods
dec
adc
imul
test
insb
mov
call
imul
clc
cmp
lret
ret
dec
and
out
push
sub
aad
adcb
mov
mov
adcw
and
stos
idiv
jl
loop
mov
addl
sub
push
push
mov
mov
push
daa
lock
or
push
dec
adc
cmp
pop
popf
mov
xor
lcall
and
adc
arpl
stos
rclb
lds
int
xchg
cmp
mov
dec
pop
mov
add
adc
inc
clc
ljmp
test
inc
test
rclb
inc
sub
gs
adc
push
sub
xchg
or
mov
rclb
rorl
push
xor
jns
adc
sahf
lcall
cmp
xorb
filds
and
push
cmpsl
loopne
or
sbb
push
or
sbb
loope
sub
sbb
addb
sbb
mov
inc
cli
sbb
inc
push
rcrb
jno
jae
iret
dec
inc
sbb
mov
xor
sarb
fbld
rorl
lret
insb
lods
and
mov
sub
inc
mov
scas
add
jg
adcb
mov
ret
inc
sbb
xchg
sbb
mov
xor
js
dec
cmc
test
mov
ljmp
or
push
shrb
mov
add
or
movsl
push
movsl
inc
cs
mov
pop
in
in
sub
daa
add
jb
mov
cmpsb
lock
subb
add
cmp
xchg
mov
push
dec
and
shlb
inc
or
push
shll
cltd
or
out
add
es
loop
cs
push
mov
dec
shr
add
push
inc
pop
push
and
add
daa
js
arpl
add
sbb
in
nop
es
mov
scas
pop
jne
push
sub
inc
incl
or
add
sub
adc
and
out
les
mov
mov
adc
fadd
mov
aad
dec
in
push
mov
js
add
push
jge
xchg
iret
jmp
dec
out
or
cmp
mov
and
popa
sub
xorb
pop
push
inc
sbb
push
iret
inc
call
add
jno
adc
scas
sbb
xor
jb
push
jp
push
xchg
cmp
push
shll
cmp
xor
sub
jp
jb
mov
cmp
lock
xchg
mov
pop
aad
adc
add
and
pusha
sub
xor
lock
add
mov
cmp
xor
pop
roll
ljmp
and
les
call
jb
mov
adc
pusha
lods
cmp
sub
cmp
js
add
adc
rol
into
and
cwtl
test
insb
sub
mov
add
add
in
push
and
fisttpll
push
orb
ret
pop
insb
inc
push
mov
ret
mov
pop
add
sub
mov
jns
jo
test
punpcklwd
xor
xor
add
or
movsb
pop
popl
add
ror
inc
jl
pop
in
sub
xchg
adc
dec
sti
fwait
enter
mov
adc
call
push
out
shlb
adc
push
in
fdiv
sub
pop
adc
push
add
test
cmp
call
fdivr
fwait
inc
mov
sarb
fisttpll
inc
scas
ljmp
in
push
rorl
cli
enter
push
push
push
test
jle
inc
sub
fistl
adc
rorl
push
pop
jo
add
sub
inc
movsl
outsl
test
insl
mov
inc
test
mov
clc
jmp
loopne
adc
cmp
dec
div
aad
push
sbb
andl
inc
rcl
sbb
sub
add
cmpsb
out
pop
cmp
in
std
adc
inc
push
call
or
setno
sub
orl
shr
push
cmpsl
adc
push
xor
xorb
sbb
out
pop
or
lock
jno
push
inc
loope
ret
inc
xchg
andl
jb
add
push
mov
fidivs
jns
pop
inc
mov
fsubl
xor
jmp
jne
inc
sub
pusha
and
adc
add
stos
push
icebp
inc
fstpl
and
push
add
sbb
cli
or
js
jmp
in
dec
aam
push
adc
add
movsb
sub
aam
rorb
push
pop
xchg
xor
arpl
call
xchg
dec
jg
and
or
int3
add
push
call
add
push
mov
shlb
rolb
inc
xchg
imul
insl
xor
std
mov
xor
ret
sub
sub
or
bsr
push
lcall
cmpsl
ljmp
insb
clc
mov
loope
or
enter
andl
sub
push
adc
mov
shll
pushf
shl
jo
ret
mov
push
add
je
mov
xor
or
insl
mov
mov
stc
pop
cmp
xchg
sub
sbb
xchg
mov
adc
or
mov
cld
outsl
mov
pop
ret
rorb
scas
sbb
pop
iret
nop
push
mov
dec
xor
lock
in
pop
subl
push
cmp
inc
xchg
or
popf
push
jne
cs
add
add
push
rorl
xor
jo
pop
insl
add
popa
inc
pop
fdiv
leave
shlb
pusha
sub
mov
mov
aam
jns
xchg
mov
sub
lock
sub
push
sub
mov
adc
add
inc
add
mov
or
data16
jb
jne
mov
sbb
adc
sbb
inc
popa
and
icebp
sarb
sbb
std
call
int
jmp
or
sub
outsb
cmp
lret
int3
and
adc
mov
or
pop
mov
lcall
adc
call
sub
mov
inc
sbb
enter
push
sbb
loope
xchg
rclb
sbb
cli
or
adc
cmpsb
mov
xor
adc
cmp
push
push
pop
sub
push
cwtl
add
pop
clc
xor
xlat
test
stos
jo
cmpsl
dec
mov
lss
or
push
dec
cmc
les
cltd
ljmp
lods
sbbl
hlt
rcrl
jne
pop
in
adc
pop
pop
sbb
mov
leave
add
push
mov
push
test
rcrl
push
fcomps
push
int3
test
gs
xor
or
adc
test
jp
adc
inc
test
adc
stos
shrl
rcrb
pop
mov
inc
repnz
pop
inc
int
leave
test
lock
cs
sbb
subl
scas
and
sub
inc
prefetcht0
gs
cli
jmp
or
popf
push
repnz
inc
or
adc
jo
cmp
mov
xor
lea
pop
loopne
inc
fs
add
cmpsb
add
icebp
mov
cmp
icebp
pop
pop
cmovo
xchg
sarl
sub
cs
rcll
cli
imul
leave
scas
inc
push
or
shl
add
pusha
jb
cmp
insl
icebp
jge
orb
cmp
push
in
cmp
pmuludq
xor
shrl
pop
in
and
or
sbb
addr16
sub
mov
les
jb
insb
pop
push
ret
enter
add
mov
add
inc
xor
sub
pop
pop
push
cmpl
xchg
daa
xchg
pop
lods
adc
pop
push
cmpsl
mov
sub
inc
xor
shrl
inc
or
xor
clc
mov
test
icebp
test
sbb
sub
jp
daa
sub
dec
xor
mov
std
rclb
aam
or
jecxz
push
lods
ret
dec
pop
mov
pop
sti
lret
out
in
imul
push
test
aad
and
rorb
test
repnz
or
leave
flds
mov
lods
or
xor
xor
lds
cmp
sbb
sub
roll
jbe
jmp
ss
mov
add
outsb
cmpsb
addb
or
pop
aam
cmpsb
ret
inc
in
nopl
jle
or
test
test
pslld
into
push
insl
pop
dec
outsb
mov
test
bound
xchg
fcmovb
sbb
adc
dec
cmp
add
loope
scas
test
or
add
test
mov
and
push
sahf
dec
jb
cwtl
xchg
shrl
mov
inc
scas
xchg
xchg
xor
inc
jo
pop
adcb
into
ds
test
rcrb
jmp
push
pushf
mov
cmp
aad
or
enter
aad
rorl
shlb
lods
xchg
sub
arpl
andb
add
divb
cli
sub
lock
xchg
ret
adc
xor
fs
mov
add
inc
cmp
sub
sub
mov
popa
sbbb
sub
mov
aas
dec
adc
mov
inc
stos
or
faddl
mov
add
fadd
xor
in
movsl
mov
fdivrl
pop
shrl
adc
inc
dec
sbb
fiaddl
andb
mov
mov
push
pop
pop
sbb
and
arpl
mov
lock
mov
pop
adc
jo
and
add
pop
imul
sub
inc
imul
aas
aas
push
lahf
movsl
pop
inc
sub
or
outsl
inc
scas
sahf
lcall
test
rcr
xor
push
xlat
jecxz
pop
aad
rorb
and
add
adc
cmp
add
insl
es
mov
dec
sbb
inc
mov
sbb
or
fcomps
int3
leave
lret
mov
and
pusha
sub
arpl
push
push
out
sbb
mov
dec
mov
insl
mov
push
xchg
hlt
pop
sbb
ja
jb
xchg
xchg
xor
push
push
sub
rdmsr
in
push
xorb
adc
insl
clc
sub
pop
mov
ja
lock
jge
push
push
push
adc
and
push
jb
inc
ror
xor
shll
inc
mov
sub
adc
or
and
insb
xchg
dec
movsl
orb
jmp
sbb
mov
cmp
sahf
subl
test
mov
xor
add
jmp
or
call
mov
in
xor
pop
jge
cmovge
push
js
adc
shlb
push
mov
icebp
cmp
mov
or
mov
inc
push
or
push
icebp
inc
inc
and
push
call
out
add
mov
mov
push
pusha
pop
sbb
jb
and
push
ret
data16
jmp
sbb
push
adc
dec
jns
pop
lock
or
adc
loop
mov
rcll
cltd
orl
sbb
dec
notl
ja
rol
push
shrl
rcl
mov
rorl
test
shl
sbb
or
sarb
xchg
cmp
cmp
je
jo
adc
mov
and
inc
xchg
push
and
aam
xor
stc
pop
lods
xor
push
insl
outsb
jle
mov
mov
mov
mov
pop
push
or
xor
push
into
push
sbb
imul
mov
mov
xor
lods
jp
loop
mov
jne
mov
add
pop
addr16
sarb
lret
dec
add
mov
add
and
test
inc
mov
sub
fcom
xchg
test
inc
in
cmp
scas
jbe
sbb
jae
jp
idivl
jle
mov
inc
test
push
test
xor
xchg
add
rolb
add
lea
add
mov
or
into
push
push
sbb
ret
jb
dec
inc
pop
add
adc
cmp
std
add
push
aad
mov
and
inc
add
dec
lea
push
cmp
mov
daa
imul
mov
loope
push
int
loopne
sub
orb
pop
inc
movsb
push
jbe
inc
in
inc
mov
aad
adc
push
push
push
mov
ret
and
or
sub
addl
out
aaa
fdiv
add
xchg
push
pop
xchg
pop
push
ret
call
ret
sbbb
or
aad
gs
orb
out
mov
stos
push
sbb
jnp
add
jo
mov
dec
xchg
mov
inc
mov
leave
je
sbb
dec
push
sub
fistps
inc
imul
cmp
sbb
inc
scas
push
fstl
movb
call
adc
jmp
xor
movl
cld
adc
mov
pop
into
mov
jo
mov
xchg
add
mov
cmp
dec
add
cmp
sar
data16
je
inc
ja
mov
mov
mov
adc
flds
test
mov
jg
mov
sub
mov
stos
adc
negb
adc
call
adc
js
xor
addr16
pusha
lcall
wrmsr
xor
ret
mulb
aaa
jle
mov
mov
push
lahf
sti
rorb
sbb
mov
push
subl
icebp
add
cmp
and
mov
mov
push
lods
ret
mov
divb
sbb
mov
sarb
fildl
lds
push
pusha
loop
mov
lcall
aad
cmpsl
arpl
lcall
xchg
mov
inc
push
sbb
or
orb
and
movsb
xor
push
pop
and
andb
in
lea
in
lea
jbe
arpl
add
xor
sbb
and
pop
fcomps
and
push
out
push
test
inc
adc
sub
call
jl
pmaddwd
xor
xchg
lcall
mov
mov
mov
ljmp
push
mov
dec
jmp
inc
xchg
sbb
sbbb
sub
inc
xor
adc
or
sbb
push
imul
dec
ljmp
cmp
cmp
roll
sub
push
push
adc
or
mov
adc
ljmp
adc
shl
into
adc
pmuludq
and
xchg
add
push
sub
mov
inc
or
int
jo
shl
test
inc
pop
xchg
or
xor
mov
ljmp
enter
aad
mov
call
sti
les
fcom
cmp
pop
mov
sbb
mov
push
pop
sub
add
imul
sbbb
pop
mov
adc
leave
push
inc
push
xchg
adc
xor
pop
dec
lret
inc
add
push
das
subb
pop
pop
dec
fs
loope
loopne
adc
mov
xchg
pop
jl
sti
das
js
sbb
dec
aas
add
mov
lahf
lds
bound
or
in
ret
stos
out
insb
dec
test
mov
icebp
and
add
add
inc
stos
xchg
ss
push
push
orb
sbb
lret
enter
sub
bound
sub
lods
push
or
stos
in
push
sti
sub
mov
cmp
movsb
sub
cmp
dec
cmp
movsl
int3
popf
adc
push
shlb
add
sub
sub
sub
sahf
insb
sbb
xchg
inc
stos
push
imulb
lods
adc
or
inc
ret
push
mov
sbb
into
adc
test
enter
fiaddl
sbb
dec
rclb
ljmp
sbb
inc
mov
add
push
xor
aam
sbb
movsb
mov
dec
xor
push
add
cmc
adc
jbe
or
push
add
add
insb
adc
sbb
add
sbb
cmp
out
or
jne
push
add
test
shll
push
xchg
add
mov
jo
push
rcrl
test
or
aam
das
jl
mov
cmp
leave
xor
rclb
sbb
inc
sbb
stos
push
adc
pop
or
mov
add
or
adc
imul
mov
add
ret
sbb
mov
and
xchg
adc
iret
push
data16
sub
adc
mov
clc
rol
inc
mov
mov
pop
lods
and
cmp
shlb
push
mov
cmp
add
push
mov
jl
daa
cmpsl
xchg
xchg
mov
nop
adc
add
mov
sbbl
lret
out
sbb
mov
mov
addr16
and
xchg
pusha
lret
push
sbb
out
mov
clc
scas
pop
lret
ljmp
clc
sub
call
inc
inc
or
or
out
popf
sub
es
sbb
sub
mov
jo
sub
mov
and
jnp
push
iret
inc
or
sbb
add
adc
mov
jp
pusha
xlat
repz
xor
add
push
sbb
and
add
add
movsl
loopne
inc
adc
xor
jo
rcll
xchg
insb
sbb
jecxz
jp
sub
xor
stc
and
int
js
out
ss
cmp
sbb
pop
xchg
sub
pop
cmp
pusha
mov
sbb
and
out
push
mov
push
mov
mov
mov
and
sbb
or
ljmp
ret
or
mov
ror
mov
or
stos
or
push
jecxz
sbb
add
xor
cmp
aam
adc
ror
enter
jp
sub
sub
shrb
jle
add
sbb
push
xchg
and
popa
sbb
push
jmp
or
xor
push
adc
push
or
sti
and
cmp
mov
and
mov
mov
call
icebp
push
pop
fisttpl
enter
xor
loop
or
out
push
and
xchg
out
ret
sbb
push
jle
mov
mov
rol
popa
or
cmp
jno
jl
shl
lods
or
sbbb
dec
sub
xchg
push
mov
mov
add
xor
mov
push
bound
push
or
pop
stos
xchg
add
fmull
mov
inc
ret
outsb
push
test
in
add
fadds
sub
push
push
subl
pushf
shrl
sub
lock
popa
ret
add
or
cli
loope
or
sbb
test
rorl
movsl
bound
add
add
mov
jb
fstpt
or
bound
addr16
imul
add
popf
out
or
sbb
add
mov
pop
stos
and
adc
mov
je
daa
mov
jl
inc
dec
push
or
adc
push
adc
int
adc
inc
sbb
push
bound
sub
pushf
push
push
xor
add
sbb
or
xor
adc
mov
stos
pop
xchg
in
test
mov
dec
push
or
insl
leave
sub
xchg
add
sahf
leave
rorb
or
mov
std
repz
sub
adc
sub
je
mov
pop
les
push
bound
cwtl
lods
sub
lock
insb
into
loope
xchg
stos
mov
xchg
mov
xchg
push
cs
es
sbb
fmull
icebp
push
push
sti
sbb
cltd
in
sbb
xor
cs
out
ret
sbbb
test
dec
loope
dec
add
xor
mov
push
ljmp
push
out
or
or
rcr
inc
nop
add
test
adc
data16
or
jns
loope
mov
call
cmp
mov
mov
daa
xor
push
test
pusha
aam
inc
mov
push
mov
xchg
bound
mov
adc
mov
inc
dec
divl
or
pop
stos
out
scas
inc
cltd
jge
inc
mov
pop
sub
inc
jmp
inc
jo
rolb
orl
mov
shlb
sbb
adc
ret
sub
outsb
into
ret
lock
dec
out
push
xchg
lods
les
dec
or
pop
mov
loopne
scas
mov
and
sahf
sub
or
dec
mov
dec
fldenv
xor
and
fadd
add
or
ficoml
add
sbb
adc
stos
rolb
rclb
adc
xor
inc
filds
push
repnz
inc
addr16
adc
adc
movsl
ret
subl
lcall
pushf
insb
lock
cmc
push
xor
in
xchg
add
sbb
mov
enter
xchg
imul
adc
enter
lret
ds
testb
into
test
sbb
stos
icebp
inc
and
xor
mov
into
mov
jae
scas
subb
call
call
inc
sbb
rclb
jg
adc
cltd
push
inc
pop
popa
lret
dec
adc
adc
mov
stc
filds
jl
subl
mov
pop
jl
dec
lods
add
push
mov
dec
mov
or
loop
or
ljmp
rcrb
ja
adc
aas
and
adc
push
xor
xor
rcll
inc
test
sbb
mov
or
enter
mov
pop
sbb
nop
dec
pushf
xchg
push
xchg
test
stos
aaa
jp
xchg
movb
mov
and
inc
sar
lock
es
adc
inc
lea
js,pt
rcl
popa
data16
pop
or
inc
adc
addb
sbb
repnz
push
out
pop
push
cmp
lahf
lea
and
into
rorb
push
hlt
loope
mov
or
sbb
ret
xchg
push
scas
dec
inc
enter
aam
sbb
ret
cmp
mov
inc
or
enter
dec
add
test
iret
add
lods
adc
fistl
lcall
sub
cmp
jo
adc
push
push
shll
aad
add
inc
xlat
sub
sub
or
cmp
icebp
cmpb
inc
push
inc
sub
stos
push
dec
sarb
clc
xchg
clc
mov
push
mov
mov
ljmp
add
dec
mov
cli
rol
rcl
cs
sbb
cmpl
inc
movsb
dec
sbb
adc
inc
xchg
ret
inc
inc
mov
leave
push
push
mov
xor
mov
push
sbbb
push
inc
and
push
setno
les
test
push
pop
pop
test
or
jne
in
mov
or
insl
adc
jae
rorb
pop
cmpsb
cmp
push
jo
or
shlb
mov
mov
push
and
ljmp
cmp
push
add
into
fadds
mov
in
mov
es
ret
in
sbbb
or
inc
sub
inc
lds
cmp
inc
fildl
and
add
cmp
add
adc
jmp
cmp
xchg
bts
push
aam
sarb
fld
in
dec
pusha
mov
mov
les
inc
xor
xor
or
in
xor
mov
and
pop
sbb
sbb
add
lcall
popf
addb
mov
insl
cmp
or
movb
jl
sbb
in
pop
jno
subl
xchg
cmp
or
push
adcl
pop
push
pusha
and
insl
test
sub
cltd
or
mov
insl
orb
icebp
push
imul
cmp
xchg
adc
xor
sub
rorl
push
inc
cmpsl
fdivrp
clc
das
mov
or
push
push
jnp
pop
mov
rorb
sub
jne
pop
adc
mov
push
push
pop
add
insb
cmp
inc
shll
inc
sbb
adc
push
xchg
testl
mov
in
lret
mov
lds
xlat
in
sub
and
sub
js
sbb
fstpt
push
xor
cmpl
mov
xlat
inc
jbe
fwait
cmp
rclb
xchg
stos
insl
adc
jp
mov
push
notb
mov
pop
push
insl
and
lea
adc
cmp
mov
jo
ret
jo
xchg
add
add
push
sbb
dec
lea
xor
or
inc
push
push
imul
leave
mov
mov
inc
adc
or
nop
and
rcll
pop
pop
mov
mulb
xor
adc
loop
sarb
pusha
insl
pop
dec
test
jl
ficoml
rcrb
pop
mov
test
js
xor
sbb
aaa
push
pusha
jnp
lods
adc
jo
out
cwtl
lea
pop
sbb
or
and
add
adc
or
les
mov
sub
adc
or
mov
adc
test
push
cmp
or
cmp
inc
iret
test
add
mov
stos
test
mov
add
push
pop
xorl
push
push
jo
and
mov
ret
mov
inc
xor
leave
test
in
cmc
stos
mov
adc
pop
cmp
aad
push
mov
daa
push
insb
dec
push
cs
loop
inc
xchg
sbb
shll
sub
dec
sahf
mov
popa
arpl
cmp
mov
aam
mov
dec
cld
ss
push
daa
pop
pusha
lock
pop
inc
inc
and
in
inc
push
push
sub
adc
cmp
in
sbb
orb
stos
push
push
lods
xlat
sbb
cli
out
inc
push
and
shlb
push
and
dec
sub
xchg
ss
orl
or
add
adc
adc
hlt
xor
nop
rclb
and
xchg
adc
push
xor
in
mov
or
xchg
stos
jp
jne
sub
movsl
sbb
push
mov
and
shrl
enter
jb
add
or
sub
add
outsb
push
cs
aad
sub
or
mov
push
pusha
mov
out
inc
or
xor
movsl
push
bound
push
mov
or
push
outsb
lea
sbb
sbb
ret
cmp
fcoms
pop
les
xor
push
loop
es
adc
test
xchg
adc
xchg
sbb
unpckhps
test
rolb
cwtl
pop
je
adc
xor
or
lea
outsl
jb
pop
sub
push
pop
adc
scas
jb
dec
push
cmp
aaa
pop
pop
loope
call
xchg
rcrl
jmp
lods
shrb
dec
adc
mov
cmp
mov
stos
or
adc
dec
push
push
adc
sub
inc
punpcklbw
popa
and
sub
scas
stos
inc
sbb
xor
pusha
mov
mov
inc
pop
fwait
shrb
xchg
jp
sbb
mov
push
jo
pusha
add
inc
or
cwtl
js
sbb
pop
xchg
xor
jmp
cs
push
gs
sbb
sarb
xor
fcmovnbe
adc
adc
ret
jb
add
scas
jno
inc
xchg
pop
cmp
sbb
or
scas
setl
jb
xor
lods
push
adc
sbb
pushf
pop
adc
cmp
pusha
pop
rclb
subb
lock
or
dec
xchg
adc
or
mov
pop
pusha
sub
mov
adc
shrb
in
mov
ret
popa
and
push
in
sbb
sbb
sbb
push
sub
dec
clc
push
popf
mov
adc
imull
inc
je
shlb
stos
test
andl
adc
mov
sub
orb
mov
push
fistl
cmpsb
xchg
shrl
cs
add
mov
sub
inc
inc
enter
xchg
xlat
leave
inc
inc
shll
xor
sub
sub
cmp
imul
cwtl
and
push
aas
and
add
aaa
or
adc
mov
stos
push
pop
sbb
sti
les
dec
lock
pop
inc
movsb
loop
sti
cmpsb
inc
pop
mov
pop
or
jno
add
push
fdiv
add
pop
insb
xchg
pop
scas
xor
or
leave
xor
mov
inc
test
cli
xchg
gs
adcb
pop
rclb
rolb
test
lret
pop
jl
enter
mov
add
and
addl
pop
push
xor
js
xchg
cmp
ficoml
cmp
mov
cmp
cmp
subb
sub
nop
and
pop
and
dec
call
bound
push
and
fidivs
mov
mov
setno
inc
sbb
push
fisubs
mov
arpl
or
ret
xchg
add
xchg
in
adc
int
push
sub
jmp
xor
insb
shrb
pop
push
addr16
xor
ret
mov
je
roll
mov
cmc
sbb
mov
mov
sbb
enter
pop
ds
test
add
xor
xor
inc
mov
push
rcrl
test
mov
lock
cmp
shll
adc
out
sub
stc
cmp
mov
jne
or
mov
push
ss
xchg
or
mov
push
jo
push
nop
aas
test
sub
sbb
mov
lret
inc
jecxz
movsb
in
jl
jne
jo
dec
xchg
ret
mov
push
and
daa
and
fistps
inc
sbb
or
cmc
add
enter
sub
and
shl
or
add
adc
mov
in
xchg
aad
add
int
add
push
cmp
repnz
loope
rcrb
sbb
in
shlb
cmp
cmc
sti
mov
pop
mov
call
jmp
push
cmp
push
imull
andl
add
mov
add
add
loope
popa
jo
cmp
aad
push
add
and
shl
rcrl
push
inc
rcr
cltd
fmuls
negb
mov
shll
mov
inc
push
pop
add
adc
xor
in
lock
pop
jnp
sbb
xor
rcrl
sbb
les
dec
push
cltd
adc
mov
divb
jp
in
push
js
mov
mov
or
dec
push
insb
add
shll
inc
out
and
add
jns
mov
push
dec
jmp
adc
mov
aad
push
adc
sahf
shl
xchg
dec
pushl
jp
inc
sbb
aad
add
stc
push
test
sbb
sbb
mov
jl
push
add
push
inc
and
jae
stc
jle
inc
das
test
jmp
shlb
in
sbb
inc
inc
test
inc
mov
loop
mov
push
imull
push
adc
in
or
gs
ljmp
mov
mov
add
test
sbb
repz
or
or
leave
adc
push
push
mov
je
repnz
add
xchg
pop
adc
aas
aas
mov
loope
lret
push
mov
jp
es
mov
pop
adc
lret
scas
leave
addb
ret
jmp
mov
mov
mov
push
ret
push
shr
cmp
and
shlb
adc
push
aam
aad
lock
push
sbb
adc
cltd
push
xchg
out
jl
mov
and
add
pop
ja
jge
mov
data16
sub
test
mov
or
popf
xor
pop
nop
jecxz
movsl
mov
lods
testb
pop
push
inc
cmpl
arpl
sub
movsb
mov
loopne
push
mov
dec
sbb
sbb
roll
push
adc
cmp
das
pop
inc
out
ror
imul
push
lret
add
sbb
xor
cmp
lds
lds
js
sbb
outsl
inc
popa
stos
adc
or
jle
or
mov
je
pop
inc
and
dec
sbb
mov
pop
fwait
add
loop,pn
stos
add
push
add
aad
and
and
sub
jb
sbb
fcompl
ja
cmp
pop
mov
mov
dec
mov
xchg
sub
jo
or
sub
sub
cmp
xor
pushf
dec
sbb
xlat
sub
jmp
pop
mov
jae
add
pop
adc
rcll
xor
das
loopne
mov
jmp
lods
xchg
into
movsl
and
push
or
adc
mov
subb
ret
and
inc
mov
jno
xchg
cmp
or
xor
insb
sub
mov
daa
adc
adc
xlat
adc
dec
sbb
loope
test
sub
and
mull
add
xor
outsl
subl
pop
pop
xorb
sbb
movsb
add
mov
mov
mov
sbb
and
push
mov
test
pop
mov
and
insl
loopne
xor
push
fcomp
bound
push
shlb
rorb
push
insl
or
adc
add
push
icebp
or
xor
lret
ljmp
push
cmpsb
push
add
push
inc
mov
sbb
cmp
or
pusha
addl
mov
lods
xchg
jae
xchg
lods
lret
push
push
and
icebp
push
and
xchg
mov
pop
inc
add
rorl
push
cmpsb
test
and
push
vmwrite
push
mov
mov
orl
idivb
cmp
sub
adc
dec
test
inc
int
or
test
xlat
mov
and
shrb
add
ss
mov
roll
and
mov
mov
call
sbb
add
popf
push
pusha
mov
push
sbb
sahf
mov
stc
add
inc
cs
sbb
rclb
dec
cmpsb
sub
shl
jmp
mov
pop
pop
sub
das
enter
sbb
insb
inc
roll
fisttps
pusha
and
dec
adc
or
enter
and
add
xor
pop
inc
outsl
fiadds
jns
roll
sbb
jo
sbb
add
mov
push
icebp
dec
rcpps
stos
dec
or
pop
das
and
jecxz
mov
xor
add
out
sbb
mov
stos
mov
push
mov
cmp
mov
addr16
adc
or
xorb
cmpsb
or
jmp
xchg
mov
jg
add
push
mov
mov
xchg
adc
xchg
loope
xchg
xor
sarl
adc
pop
or
jp
adc
or
adc
cltd
jb
add
lock
push
mov
push
inc
cmpsl
pop
adc
mov
imul
pop
rclb
and
fwait
add
sbb
mov
mov
ja
adc
cmp
test
sbb
and
add
add
mov
cmp
lds
or
mov
add
mov
mov
jp
cmp
in
inc
or
or
negb
shll
or
adc
inc
sbb
xchg
pop
dec
jp
push
ss
lcall
scas
popa
and
add
add
cltd
lock
sbb
in
adc
push
rorl
pop
rclb
pop
xor
push
or
mov
rorb
sub
rorl
cmp
cmp
and
ret
imul
aam
mov
pop
popa
aad
ljmp
sbb
pop
or
jo
stos
push
std
jb
cmc
inc
cmc
rorb
fmull
fildll
enter
ret
jne
add
jne
add
xlat
daa
pop
mov
xor
xchg
rsm
sub
mov
mov
in
push
mov
xlat
sub
mov
mov
mov
call
insl
cmp
imul
xorl
xchg
stc
add
push
xchg
sub
loopne
push
call
mov
sub
dec
jne
cmpsl
sub
inc
shll
pushf
pop
sbb
xor
ret
addl
sub
and
xor
js
mov
nop
or
jg
sbb
sbb
or
pop
push
lcall
les
push
mov
and
dec
movups
ret
push
rolb
sarb
push
xor
sbb
dec
ret
push
rolb
push
mov
test
add
jo
mov
dec
pop
push
enter
sub
adc
js
je
scas
loopne
push
sub
test
lock
hlt
push
push
dec
lea
roll
pop
insl
jne
or
adc
mov
mov
aam
mov
sbb
outsl
push
push
test
enter
scas
or
dec
adc
adcl
pop
mov
push
dec
push
addb
push
inc
push
ret
ret
rcr
cwtl
dec
in
sub
sbb
add
pop
mov
sub
call
add
sbb
sahf
sub
into
lock
push
xor
xor
mov
inc
add
or
insl
shr
push
xor
pop
fsubrl
adc
pop
int
sbb
sub
and
mov
sbb
sti
sub
add
push
dec
jecxz
dec
sbb
ja
aaa
push
daa
clc
push
adc
rolb
fstl
or
inc
sysexit
sbb
imul
scas
sub
pop
lock
push
ljmp
hlt
add
enter
push
mov
lock
leave
test
cltd
cmp
adc
aam
das
movsb
dec
in
push
ret
inc
dec
loop
sbb
inc
stos
push
sbb
and
or
mov
cmp
sbb
cmp
mov
mov
or
ror
movsl
mov
or
jle
mov
outsl
xchg
push
sahf
xor
mov
mov
sbb
add
dec
push
jbe
pop
xchg
aam
or
ss
adc
adc
rolb
into
jns
push
in
jo
call
inc
pop
xlat
fldl
aam
sbb
mov
clc
add
add
sbb
or
cld
sub
cmp
test
and
add
in
hlt
mov
add
push
clc
sbb
jae
adcb
or
push
adc
pop
dec
sbb
mov
scas
sbb
lock
js
and
push
cmp
mov
shrl
jl
test
xor
lods
jne
adcb
cmpsb
imul
adc
xor
xor
sbb
inc
pushf
sbb
aad
hlt
test
cmp
or
push
sti
add
adc
sub
pop
or
inc
mov
inc
lret
push
loope
push
add
scas
or
adc
mov
test
adc
push
push
stos
divl
push
rolb
dec
mov
shll
sbb
lods
into
repz
add
mov
addr16
stc
call
pushf
push
xchg
pop
inc
enter
mov
aaa
and
je
arpl
mov
movsb
lods
mov
sub
enter
js
sbb
ret
and
push
and
xchg
std
adc
xor
popa
mov
hlt
xcrypt-cbc
cmpsl
adc
outsb
adc
push
push
enter
and
mov
jl
call
cli
repz
cwtl
test
cmp
subl
js
adc
push
cli
adc
stc
orps
into
fwait
repnz
push
pop
push
rolb
push
mov
add
add
mov
sbb
test
sbb
sbb
jle
test
add
scas
mov
testb
pop
clc
enter
data16
out
cmp
out
cmpsb
into
rcrb
or
sub
mov
stos
add
or
scas
or
in
adc
pop
out
nop
and
cwtl
aaa
mov
add
adc
lock
push
andb
jb
cs
aam
cmpsl
test
into
sbbl
paddw
pop
lock
sbb
mov
push
test
add
jg
iret
sub
aaa
ret
push
sub
sbb
rol
shlb
movsb
sub
loope
add
sbb
pop
aam
push
pop
add
idivl
xchg
pop
push
xor
scas
xor
pop
push
xchg
mov
lret
xor
push
fs
or
or
or
enter
cmc
mov
pushf
push
in
and
add
push
fmuls
xlat
add
clc
push
outsl
sub
out
push
inc
mov
push
pop
lea
jno
pusha
xor
inc
jne
enter
movsb
or
or
loop
mov
pop
or
stos
inc
pushf
lret
roll
jae
mov
push
sub
lea
lret
mov
adc
adc
popf
clc
sbb
lret
daa
push
push
mov
xchg
mov
cmp
sub
pusha
stos
inc
sbb
aas
pop
add
rolb
shlb
icebp
add
aad
aam
or
push
sub
add
lds
or
sahf
roll
pop
rcrl
sbb
mov
adc
jo
push
in
jns
add
mov
sbb
sbb
adc
ss
jmp
scas
xor
sbbb
mov
pop
ret
addr16
sbb
notl
incb
push
push
dec
jge
adc
subb
jb
add
pop
sub
lock
pop
mov
and
sbb
rcll
xchg
imulb
dec
and
ljmp
pop
insl
pop
enter
jne
ficoms
clc
pop
loope
mov
mov
push
mov
sbb
popa
mov
jae
mov
ret
mov
nop
addl
stos
pop
mov
fs
in
sbb
sbbl
dec
jae
or
jno
push
mov
roll
jp,pt
movsl
or
xchg
and
jns
out
jb
and
cmp
mov
enter
jo
cmp
adc
add
in
andb
push
mov
mov
xchg
out
adc
push
fwait
rorl
fs
nop
mov
in
mov
arpl
push
movsl
pop
add
in
ret
push
jne
cli
or
add
jl
mov
roll
dec
cmpsl
bsf
jecxz
decw
adc
stos
xor
or
inc
jno
mulb
adc
cmp
test
xor
loop
mov
lcall
leave
outsb
popl
and
inc
int
xchg
in
jmp
pop
ret
rcl
pop
stc
les
ret
dec
push
cmpsl
mov
push
in
cmp
add
mov
into
jne
pop
jnp
cmp
jae
test
adc
jbe
mov
cs
clc
or
and
dec
pushf
or
inc
xor
push
jae
mov
cmp
sbb
push
imul
leave
xor
enter
jo
sub
sbb
jo
cmc
or
or
clc
call
adc
enter
mov
adc
data16
and
sub
xor
pop
bound
aad
vmwrite
aam
icebp
push
push
add
lods
inc
xor
or
dec
xchg
sbb
in
cmp
pushf
loope
add
fsubs
in
popa
or
cmpsb
shll
in
dec
xor
sbb
add
je
jmp
test
sbb
xlat
adc
dec
inc
aaa
inc
iret
and
jns
out
orb
test
fadds
lock
or
add
jmp
fdivs
pop
push
or
sbbb
nop
and
dec
lock
pop
jnp
rcrb
out
cs
mov
ret
cld
jne
xchg
jecxz
sub
adc
shll
sbb
push
aam
ficomps
and
mov
add
icebp
ret
aam
addb
and
loop
push
mov
jno
mov
test
add
in
mov
movsb
add
enter
rcll
stos
add
mov
insb
shl
inc
ret
mov
and
sbb
cmp
mov
and
test
aam
std
bound
insb
mov
or
or
xchg
outsb
pop
shrl
jnp
add
mov
add
jb
popa
cwtl
pop
push
je
lcall
add
mov
rol
mov
std
push
xor
pop
dec
cmp
mov
mov
inc
push
fucomp
sbb
nop
inc
inc
or
and
subb
cmp
mov
mov
xor
nop
ljmp
mov
push
or
mov
mov
adc
shll
add
inc
mov
dec
jp
and
dec
sbb
ret
xor
push
mov
and
cltd
rcl
and
push
jne
sbb
adc
inc
cwtl
orb
push
xor
js
sbb
sub
rcll
sahf
sbb
and
inc
lret
add
stos
cltd
test
fcmovnu
andb
sbbb
pushf
mov
clc
rcrb
mov
adc
sbb
inc
push
les
shlb
dec
rcll
or
movsb
lock
pop
add
mov
ret
es
or
and
dec
xor
mov
xor
pop
lock
xor
js
pop
adc
xor
ret
add
inc
icebp
sub
mov
fmuls
lods
rcll
mov
cmp
push
fcomps
not
lods
push
push
hlt
pop
xchg
loopne
or
pushf
leave
repz
cmp
cmp
and
roll
cwtl
testb
adcb
mov
enter
aad
xchg
adc
xchg
adc
adc
call
das
ds
sbb
inc
and
mov
cmp
insl
mov
jmp
dec
pop
jno
ret
add
dec
jge
push
xor
jbe
push
pop
aad
adc
dec
les
sti
lret
sub
inc
divb
xchg
jnp
fildl
daa
and
ja
out
sub
push
add
fwait
subl
shlb
aam
jne
push
cmp
cmp
cmp
xchg
mov
inc
inc
mov
mov
inc
notl
mov
addr16
mov
pusha
pop
push
mov
stos
jb
nop
sbb
jne
out
aam
mov
dec
lret
add
dec
push
je
push
scas
mov
insl
or
sub
adc
or
pop
lock
leave
add
imull
stos
sub
dec
and
or
adc
int3
rolb
lcall
push
pop
lock
ljmp
lahf
loope
les
push
pop
arpl
add
icebp
rol
mov
and
popf
or
mov
xchg
inc
dec
subb
sbb
push
lea
mov
adc
cmpsb
sub
stos
add
aaa
or
imul
nop
sbb
jo
stos
lret
push
sahf
sbb
jno
pop
cltd
pop
adc
mov
loopne
jbe
stc
jl
push
lret
mov
add
pop
or
and
adc
cli
add
sbb
xchg
or
xchg
mov
pop
sbb
outsb
or
jg
daa
stos
or
or
push
or
jo
int3
sbb
push
loop
sub
push
aas
cli
inc
pop
adc
enter
scas
int3
push
cmpsl
mov
loopne
js
adc
sbb
pusha
xor
sbb
xchg
add
mov
xor
push
xchg
out
adc
xor
arpl
xchg
inc
scas
loope
inc
pop
in
push
ret
push
lock
add
mov
mov
jge
rcl
stc
mov
popl
pop
adc
sub
lds
test
sub
sbb
imul
mov
out
pop
inc
dec
push
inc
dec
adc
sarl
cmp
cmc
pop
cmp
pop
mulb
dec
dec
lret
sbb
sbb
xor
rol
sbb
mov
xor
sbb
adc
push
mov
in
inc
stc
out
cwtl
mov
test
pushf
xor
xchg
jo
inc
mov
fiaddl
je
movsl
ret
pop
inc
addb
xor
lock
loope
lods
or
or
sbb
icebp
push
mov
mov
rcll
dec
cltd
loopne
test
xor
ljmp
sub
xchg
adc
dec
xor
rcrb
add
mov
ljmp
xchg
and
mov
mov
pop
mov
add
cld
pop
in
push
icebp
popa
pop
xlat
or
inc
shll
or
xor
pop
cmp
jge
ds
jge
jp
pop
pop
shrl
sbb
push
cmp
mov
mov
loope
inc
lods
out
xchg
ret
jnp
push
ret
push
dec
mov
ljmp
push
pop
js
sub
pop
test
shrb
sub
rorb
xor
xor
add
add
idiv
add
test
jg
adc
ret
andl
jge
rcrb
mov
jno
and
pushf
push
pop
jb
jne
cmp
scas
pop
addl
inc
ret
xchg
inc
sub
and
push
cmp
or
or
sbb
shlb
mov
mov
jo
xchg
mov
inc
add
mov
adcl
test
xchg
or
inc
push
jb
mov
loopne
push
dec
jno
add
aaa
mulb
xlat
daa
aaa
add
test
or
dec
inc
add
pop
adc
push
inc
das
sbb
fisttps
arpl
dec
enter
inc
lret
mov
dec
dec
test
aam
adc
or
pop
lock
adc
inc
sarl
dec
ret
mov
lea
arpl
aam
outsb
rolb
cwtl
test
sub
push
sub
lahf
xchg
and
sbbb
shll
mov
lret
das
popa
aad
adc
popa
ret
mov
mov
jbe,pn
lcall
push
inc
inc
jae
push
cmpsl
or
push
out
out
subb
test
adc
aam
les
lahf
scas
stos
stos
xor
push
cwtl
jmp
add
addb
mulb
fdivl
loop
adc
and
stos
or
add
shll
cmc
push
test
test
push
fcmovnbe
addl
pop
mov
mov
sub
push
aam
paddb
aam
pop
mov
push
in
or
xor
lcall
mov
dec
or
pusha
mov
xchg
adc
enter
rcll
adc
push
insb
cmp
push
mov
push
sbb
cmp
ljmp
xor
into
or
pop
pop
cmp
jns
cwtl
push
hlt
push
insl
call
cmpsb
rolb
pushf
inc
adc
xchg
mov
cmp
and
push
aam
out
int3
mov
xchg
cmpsl
cwtl
push
push
add
inc
add
xor
ljmp
adc
arpl
push
xor
mov
xor
jecxz
inc
jbe
add
mov
mov
add
jo
rcl
mov
push
cmp
addr16
imul
cmpsl
mov
cmp
lock
adc
aam
dec
and
cmp
cwtl
je
insb
sbbb
daa
ret
mov
mov
jo
adc
call
and
sbb
cli
and
adc
and
or
or
es
faddl
inc
cmp
enter
push
and
rcl
in
leave
pop
lds
or
add
xchg
sub
roll
and
call
popa
adc
pop
xor
add
lahf
fisubl
mov
cmpsb
or
sahf
xchg
sti
repz
fcmove
stos
adc
and
or
adc
jg
ljmp
mov
mov
test
push
xor
jl
cmpsb
sbb
inc
add
adc
add
push
mov
inc
out
mov
and
sbb
cmp
inc
mov
pushf
pop
push
mov
mov
adc
push
aam
pushf
data16
adc
je
sub
adc
ds
fwait
mov
imul
and
decb
mov
xorps
xchg
adc
roll
dec
lds
test
push
xchg
enter
add
pusha
ljmp
lret
inc
push
xor
pop
sbb
loopne
dec
das
push
add
dec
sub
scas
or
mov
jg
and
sbb
push
shl
outsl
and
adc
or
sbb
mov
push
repnz
rolb
or
mov
sbb
in
push
adcb
pop
or
imul
movb
push
aas
push
pop
hlt
loopne
idiv
dec
xchg
sbb
xor
or
mov
dec
cmpb
bound
lds
shrl
dec
int
dec
loop
in
hlt
rcr
add
loop
idivb
js
aam
aam
lcall
imul
loopne
popa
jo
push
rcrb
xchg
repz
in
mov
cmovne
repnz
jo
inc
int
adc
ret
mov
shlb
ret
and
pop
cmp
pop
xchg
ss
adc
dec
repnz
mov
test
aam
cmp
push
push
mov
sub
sbb
jb
sbb
mov
cmpsl
jae
sbb
pop
aas
mov
imul
xor
pusha
add
not
cmp
and
xor
mov
movsl
mov
xchg
xor
ljmp
mov
push
add
pop
mov
mulb
loope
in
cpuid
hlt
add
sbb
clc
inc
andl
jmp
inc
or
jne
test
sbb
adcb
and
mov
and
icebp
shl
sbb
cs
bound
mov
push
call
mov
sbb
xor
pushf
mov
pushf
sbb
or
inc
scas
sub
or
scas
fiadds
jne
push
push
push
cmp
divb
xchg
xchg
leave
add
adc
sbb
push
inc
scas
sbb
out
jb
lods
mov
sub
mov
pop
mov
mov
add
testb
ljmp
mov
sbb
lds
sub
out
dec
push
leave
adc
adc
jae
mov
test
push
sbb
xor
or
pop
rcrb
inc
add
add
mov
mov
sbb
mov
mov
out
mov
dec
cmp
ret
sub
inc
fildl
add
sbb
cmc
xchg
leave
xor
cmp
push
movups
js
fiaddl
push
mov
sub
lock
stc
cmpsb
or
add
and
cwtl
fcompl
shlb
jno
cmp
add
mov
pop
adc
call
into
bound
mov
fwait
stos
cmp
dec
push
roll
call
addb
adc
stos
cld
out
aam
and
fwait
or
and
test
adc
add
rcll
pop
test
inc
adc
push
mov
and
add
add
int3
test
lods
sbb
je
jp
pop
add
js
imul
fiaddl
inc
scas
dec
or
sbb
or
ljmp
adc
push
mov
sbb
fisttpl
or
jle
add
push
popa
xchg
and
loopne
dec
and
or
fcomi
mov
arpl
sbb
xor
jne
push
inc
mov
cmp
call
mov
sbb
call
out
push
mov
arpl
pop
pop
or
ret
sbb
mov
xchg
add
adc
xchg
test
xor
pusha
scas
mov
ljmp
or
mov
call
cmp
shr
pop
adc
add
pop
jo
adc
push
pushf
insb
ret
cmp
mov
neg
push
out
sbb
cmp
push
inc
andb
mov
loop
dec
lcall
jno
gs
stc
sbb
sahf
sbb
and
pop
xchg
flds
subl
adc
or
push
inc
and
jb
shrb
add
push
test
dec
jbe
mov
mov
pop
mov
mov
mov
call
mov
mov
or
cmpsb
add
ret
rcrb
mov
das
std
out
jecxz
rorl
loopne
add
lods
aam
and
lds
adc
loope
xor
push
into
xchg
mov
ljmp
imul
sbb
dec
and
add
out
rorb
add
dec
mov
jmp
or
adc
mov
add
sahf
arpl
inc
pop
inc
movsb
pop
imul
scas
or
popf
orb
enter
push
pop
push
and
ret
fimuls
adc
push
ja
stos
and
push
push
and
xchg
push
movsb
popf
or
shr
pop
jne
pushf
lret
push
adc
adc
sbb
push
add
sub
js
rclb
mov
xchg
and
rcr
xor
mov
repnz
pop
add
icebp
mov
cli
push
push
sbb
fcoms
cmp
repnz
xchg
stos
movsl
ret
dec
and
add
ret
xor
push
scas
jmp
sbb
and
repnz
push
negb
add
rcll
add
mov
inc
mov
add
cwtl
or
mov
rclb
sub
lret
adc
adc
or
and
mov
les
dec
rolb
bound
push
inc
add
inc
popf
and
cmp
inc
sub
adc
add
inc
shrb
aad
mov
out
sbb
xlat
or
sarl
jns
mov
mov
insb
dec
inc
sub
or
int
js
mov
andl
scas
add
sbb
jne
adc
fwait
inc
test
adc
rcr
in
xchg
mov
nop
jne
mov
and
in
push
shlb
fs
push
fisttpl
push
cmpb
cmp
fbld
sbb
inc
ljmp
test
pop
inc
push
ljmp
cmp
mov
push
and
and
iret
rol
add
xor
adc
or
rcrb
cli
cmp
jmp
mov
rolb
xchg
test
sbb
sbb
xor
mov
push
cltd
mov
xchg
rclb
mov
lods
addb
adc
stos
cmp
sbb
jno
sti
not
and
push
repnz
sbb
into
rcrb
lret
inc
mov
test
dec
mov
and
pop
pop
or
test
aam
sub
push
mov
in
mov
inc
cli
mov
mov
ret
cmp
dec
sbbb
icebp
mov
dec
sbb
or
sbb
mov
sbb
rcll
lock
push
lcall
aas
stos
jo
jo
adc
aad
aam
add
jno
push
and
sbb
push
mov
mov
movl
jns
fisttpll
dec
cs
jg
mov
or
out
nop
sub
subl
pop
and
pop
popa
add
mov
imul
mulb
inc
dec
add
mov
lret
je
push
push
mov
mov
mov
scas
dec
popa
mov
or
fstps
shrl
sbb
jmp
push
adc
and
scas
stos
mov
inc
js
add
aam
sbb
shl
push
andl
in
sbb
sbb
loop
lcall
inc
loopne
insl
cmpsl
add
push
xor
rclb
arpl
lcall
popa
lock
adc
nop
adc
dec
adc
lock
pop
or
pushf
arpl
push
inc
adc
icebp
mov
rcll
pop
mov
mov
adc
xor
fcomps
mov
rol
ds
lods
enter
pop
int
mov
add
mov
sbb
cmpsb
xchg
mov
xor
mov
mov
cmp
rorb
sbb
xor
cwtl
xor
and
add
mov
inc
inc
add
and
push
cmp
pop
xchg
shl
fcoml
mov
lds
mov
add
sti
loope
xchg
jp
dec
jecxz
es
jne
adc
test
sub
sub
mov
aad
orl
pop
hlt
addb
jae
sbb
lock
ja
inc
movsl
sbb
xchg
shlb
jl
pop
push
movsl
repz
ret
inc
xor
jg
cmp
dec
jnp
cmp
adc
fisttps
cmp
enter
addr16
stc
dec
insl
mov
xchg
push
repz
data16
pop
ror
test
pop
adc
sub
cltd
add
sbb
and
xchg
jne
enter
insl
cltd
pop
sahf
mov
rcll
les
addr16
leave
xchg
aam
xor
add
adc
push
test
mov
into
add
clc
cli
insl
inc
das
orb
dec
jmp
mov
call
leave
mov
jp
or
dec
adc
jp
je
rorb
cvtpi2ps
aam
lock
insb
mov
icebp
arpl
jno
sbb
mov
into
sbb
inc
in
into
mov
mov
sbb
mov
mov
out
mov
ja
push
loop
adc
scas
pop
je
xor
es
loope
es
mov
jle
inc
out
sbb
lret
add
add
outsl
cmp
ret
aas
sbb
add
jo
enter
insb
mov
loop
push
test
or
dec
ja
inc
and
xchg
mov
adcl
sub
cmpb
jnp
test
push
add
sub
daa
mov
push
jno
daa
lea
ret
inc
and
fistpll
pop
in
pop
mov
pushf
lea
pop
push
push
aaa
enter
cmp
adc
cmpsb
inc
movsb
in
int3
adc
add
and
cmpsl
mov
mov
adc
push
shrl
pop
pop
ss
inc
loop,pn
or
mov
lcall
into
fnstsw
sub
mov
loopne
and
xor
aad
scas
cs
add
mov
add
loope
or
sub
aaa
cmp
cmp
cltd
enter
cmp
sbb
jne
and
add
and
mov
movsl
push
sub
hlt
fs
inc
roll
movsb
incl
mov
jl
sbb
andb
add
adc
or
pop
adc
mov
sbbl
push
add
push
push
call
in
les
sbb
pop
sbb
mov
lret
repnz
inc
sbbb
or
adc
inc
pop
mov
mov
das
pop
sbb
aam
sbb
js
sbb
daa
jmp
cmpsl
adc
rclb
inc
clc
sub
or
push
pshufw
mov
popl
loopne
cmp
xchg
popa
lret
ficomps
or
sub
test
push
sbb
and
je
dec
xchg
std
icebp
test
add
push
inc
dec
xor
jo
and
inc
es
sub
sub
push
jle
out
push
push
adc
adc
mov
jne
push
fwait
dec
dec
mov
xor
inc
test
rcrl
mov
jno
sbb
dec
js
add
xor
ljmp
push
loop
jmp
push
dec
xchg
sub
pop
shlb
loopne
mov
movl
jnp
leave
shrb
test
out
inc
faddl
add
add
pop
lret
add
add
jae
stos
pop
fisttps
xorl
movsb
adc
ret
lcall
mov
imul
xor
cmp
mov
push
mov
and
jg
mov
mov
ljmp
ss
or
rcrb
inc
cmp
add
orb
sub
sbb
add
inc
dec
test
out
pop
pop
mov
push
or
and
sbb
push
add
mov
shlb
pop
std
shrl
dec
cmp
push
push
and
xchg
inc
push
pop
and
or
dec
lods
mov
push
pop
test
test
sbb
pop
jo
cli
push
sub
mov
push
mov
es
lods
enter
inc
xchg
mov
add
mov
jo
ret
je
and
sub
add
and
push
xor
and
and
mov
push
jmp
mov
add
mov
hlt
in
mov
mov
mov
loopne
mov
add
dec
push
jo
xor
cmp
rorb
or
adc
xchg
mov
pcmpeqw
and
adc
sahf
sub
sar
push
lea
inc
sbb
es
sub
fs
xchg
jle
test
adc
or
les
test
mov
pop
pop
fists
mov
push
jbe
mov
ljmp
mov
shll
pop
mov
or
ret
test
dec
call
jp
and
rolb
fiadds
sub
stos
jb
rcrb
cs
enter
pop
shll
jbe
cmpsl
jp
mov
or
mov
push
lret
or
mov
sbbb
shrb
sub
adc
adc
mov
and
add
push
xlat
or
sbb
icebp
idivb
xchg
or
and
bound
xchg
push
insb
cwtl
push
stos
test
dec
cmpsb
pop
sbb
adc
decb
xchg
cmp
dec
mov
sbb
stos
cmp
add
sbb
xor
and
loop
and
loope
xor
aam
jae
pop
sub
or
add
hlt
scas
pusha
call
fildll
jmp
rorl
dec
sub
adc
cmp
jecxz
stc
pop
pop
loope
mov
scas
in
lds
sbb
jg
gs
push
icebp
inc
adc
cwtl
arpl
mov
mov
loope
sub
sbb
cmp
shlb
shrl
sbb
lods
or
sub
cli
mov
sbb
mulb
adc
sbb
cmp
push
repnz
xor
dec
pop
rcrb
add
clc
sbb
and
mov
sbb
addl
add
xchg
lret
icebp
add
lret
or
or
push
stos
dec
add
adc
adc
adc
or
push
sti
cmp
sbb
xor
adc
sbb
iret
movsb
loope
call
add
adc
rclb
pop
add
call
jmp
rcrl
lock
aas
out
add
xchg
gs
movsl
push
mov
jbe
cmp
push
lret
xchg
xor
push
push
addb
cmp
jg
sbb
push
movsb
sbb
sub
or
mov
or
xchg
adc
icebp
enter
rcrb
hlt
icebp
loope
xor
push
movsb
dec
cmpsb
pop
fdivs
mov
aam
push
fisubs
or
inc
xor
add
popa
stos
add
xor
sub
pop
and
vpmuludq
pop
dec
inc
scas
int
or
repnz
test
mov
inc
into
je
and
inc
js
clc
cmpsb
sub
push
ret
push
mov
jp
xchg
imul
stos
in
add
test
sbb
push
in
sub
inc
mov
sbb
sbb
xchg
lcall
mov
pop
shlb
add
cmp
adc
mov
mov
test
shll
add
negb
mov
cmp
lcall
popf
push
xchg
js
adc
push
imul
add
xchg
jge
cli
jo
mov
stos
add
push
sbb
push
add
inc
and
inc
xchg
and
sub
roll
stos
inc
jnp
lock
mov
pusha
enter
in
inc
mov
mov
add
lahf
sbb
pop
lods
adc
add
add
dec
es
sbb
ss
adc
sub
sub
shll
push
arpl
ljmp
push
adc
shrb
adc
fs
sbb
loop
sbb
sub
mov
jp
xor
js
movsb
or
or
ret
aad
dec
and
jno
cwtl
jp
out
clc
cwtl
mov
or
jae
out
lock
sub
cmp
mov
mov
and
mov
lock
orb
sbb
ret
add
fmull
stos
jl
mov
sbbl
push
mov
shrb
xor
and
mov
call
movsb
adcb
mov
dec
bound
andl
dec
push
jne
add
jae
movsb
jmp
mov
dec
add
cmp
add
sbb
les
rolb
shl
push
push
adc
mov
push
shrb
inc
push
dec
or
icebp
inc
adc
je
mov
push
dec
psubd
mov
shl
add
push
pop
sbb
and
and
in
dec
in
sahf
pop
or
js
add
jmp
push
jo
daa
xchg
adc
xchg
rclb
test
insl
add
scas
out
or
inc
xor
dec
lock
jo
adc
inc
mov
inc
xchg
xor
repnz
push
jmp
out
jp
push
pop
movlps
and
sbb
or
sbb
cmp
jb
jmp
aaa
pop
in
sub
sub
lock
inc
mov
adc
ja
mov
push
xchg
xor
or
leave
inc
mov
movsb
mov
inc
add
xor
lds
arpl
push
pop
scas
sarb
add
es
xor
sbb
pop
icebp
pop
dec
ret
pusha
xor
fimuls
mov
nop
cwtl
orl
lcall
adc
int3
add
sbb
imul
mov
xchg
pusha
es
aam
mov
add
jecxz
rcll
inc
or
xchg
adc
cltd
or
mov
pop
xchg
jl
jmp
test
sti
ror
mov
aad
jae
and
push
cmp
aaa
add
add
xchg
shll
xor
add
cmpsb
dec
xor
sbb
push
xchg
lret
and
add
cmp
or
int
daa
hlt
cmp
inc
mov
andl
mov
mov
or
in
or
adc
cmp
mov
call
loopne
insb
sub
shll
and
imul
jb
les
sub
push
adc
adc
mov
inc
test
and
lcall
push
add
sub
adc
ds
add
add
jl
push
cltd
sbb
mov
sub
stos
andb
xor
pop
and
insb
cwtl
fildll
rcl
dec
mov
js
jne
andl
push
inc
cmp
sub
or
xor
loope
adc
popl
push
test
dec
and
addl
out
add
jne
xchg
pop
loope
and
ret
sbb
inc
movb
cmp
ljmp
sub
imul
push
outsb
ljmp
int3
sbb
pop
ret
ss
insb
mov
scas
push
mov
cld
adc
jecxz
mov
enter
or
cmp
stos
test
pusha
sbb
xchg
and
inc
rcrb
push
shlb
sbb
xchg
mov
cld
pop
pop
push
xorl
add
addb
js
cli
mov
push
cmp
mov
pop
xchg
add
mov
cltd
cmpsb
into
jo
mov
mov
sbbb
lret
sbb
xor
out
scas
sbbb
or
lret
loope
fwait
test
cwtl
mov
inc
jp
pop
xor
sub
cmc
mov
cmp
inc
mov
adc
and
add
rcrl
inc
adc
add
and
stos
fistl
daa
push
push
lret
add
mov
sbb
push
sbb
lds
test
loopne
call
mov
inc
cmp
mov
adc
call
loope
daa
dec
clc
mov
mov
cmp
push
xor
nop
and
or
aam
push
push
push
and
decb
sbb
sub
add
cmp
mov
pop
push
adc
or
mov
inc
mov
orl
repnz
mov
cmp
adc
pop
mov
pop
pop
inc
pushf
andb
je
cmc
and
test
bound
adc
jmp
imul
add
xchg
lods
sub
sbb
sub
or
mov
je
add
mov
mov
adc
cli
push
or
clc
add
mov
dec
sbb
ror
sbb
mov
shl
call
mov
or
or
pop
mov
pop
add
pop
arpl
jae
cld
stc
repz
add
xchg
xor
jb
lahf
aas
jg
push
out
jne
decb
cld
stc
repz
adc
jnp
test
aaa
les
insl
mov
aas
cmp
pop
icebp
addr16
and
icebp
xor
repz
popa
cmp
dec
inc
adc
or
cmpsl
aas
jg
cld
mov
sbb
xchg
imul
mov
dec
xlat
lcall
cld
stc
nop
pusha
jp
in
mov
xchg
mov
cmp
inc
xor
out
lahf
aas
lret
xchg
je
stos
cmc
repz
cld
stc
repz
daa
arpl
and
and
dec
iret
lahf
aas
jg
cli
push
cli
loope
mov
repz
adcb
clc
jae
ljmp
jg
jl
pop
pop
push
loopne
mov
les
stc
repz
cmp
pop
cmpl
sub
inc
aas
jg
cld
pop
adc
xor
movsb
repz
lahf
push
jbe
out
push
mov
jns
jg
cld
stc
pushf
mov
sbb
lds
pusha
fsubrp
popa
xor
lahf
aas
push
imul
cld
stc
repz
stc
mov
js
mov
roll
iret
lahf
aas
jg
jg
ss
imulb
jbe
stc
repz
bound
cmp
xchg
mov
ljmp
sbb
inc
addr16
xor
adc
add
xlat
or
adc
sbb
jg
cld
stc
aas
loope
dec
or
fisubl
mov
mov
iret
lahf
aas
lahf
idiv
ss
test
rclb
cld
stc
repz
adc
sub
push
sahf
repz
lahf
aas
jg
nopl
ss
arpl
scas
cld
stc
repz
mov
aaa
fidivrs
xlat
fsubr
int3
cmpsb
repz
aas
mov
repnz
or
aad
jg
cld
stc
or
lods
orl
jb
push
mov
aad
push
add
push
dec
xabort
cld
stc
repz
sbb
cmpsl
push
in
and
in
and
mov
iret
lahf
aas
jg
int3
sbb
add
hlt
cld
stc
repz
ret
insl
xor
iret
and
dec
cmp
jg
sbb
mov
std
int
push
stc
repz
xchg
repnz
mov
into
sub
mov
jbe
fmul
push
insl
cmp
fcmovb
pop
repz
lahf
sahf
aam
inc
aas
shll
cli
scas
and
cld
stc
xchg
mov
loope
lods
out
sbb
insb
out
lahf
aas
fisttpl
xor
inc
cld
stc
repz
pop
cwtl
adc
sbb
pop
dec
iret
lahf
aas
jg
not
push
popa
lcall
sbb
out
and
xor
stc
repz
decl
fxch
jb
scas
push
pop
out
lahf
aas
jg
xchg
fnstcw
dec
test
loop
pop
stc
repz
fwait
std
stc
inc
xchg
fidivs
mull
aas
jg
cld
imul
push
xchg
or
sbb
lahf
lods
scas
dec
push
pop
les
test
jnp
xchg
jg
cld
stc
sub
popf
ret
call
cmp
iret
lahf
aas
les
mov
aam
in
call
lea
ja
mov
push
mov
lcall
jae
jae
push
mov
push
cld
stc
repz
shll
lcall
sahf
dec
cmc
cmp
xor
lahf
aas
jg
data16
push
push
or
gs
xchg
stc
repz
in
out
rclb
movsb
call
leave
mov
push
nop
int
push
pop
sub
imul
psllq
iret
lahf
insb
daa
in
mov
outsb
jle
daa
pop
adc
cld
stc
arpl
mov
xor
iret
lahf
aas
jnp
in
aas
mov
aaa
push
cmpsb
or
gs
cld
stc
repz
jae
aas
jb
imul
hlt
sub
lahf
aas
jg
mov
xchg
enter
pop
pop
repnz
jb
repnz
and
or
aas
pushl
loopnew
cli
mov
mov
stc
repz
cmp
sbb
enter
cld
icebp
out
push
jno
ljmp
pop
or
repz
lahf
scas
jge
scas
push
xlat
fistpl
dec
or
cld
stc
or
fnstenv
loop
daa
push
mov
dec
mov
pop
cld
stc
repz
pop
adc
clc
jge
leave
aad
repz
and
lahf
aas
jg
or
loopne
sbb
or
stc
repz
fwait
movsl
xchg
mov
decb
dec
mov
mov
pop
and
inc
pop
pop
xchg
push
pushl
mov
stc
push
stos
inc
pop
cmpl
push
or
mov
pop
cmc
ffreep
out
xchg
lahf
aas
test
ljmp
into
xlat
cld
cld
stc
repz
mov
sbb
mov
out
xor
cmpsl
fs
pop
insl
pushf
pop
cld
stc
repz
out
xchg
sub
or
popa
mov
xchg
aas
jg
jbe
add
mov
out
push
cmp
xchg
cld
stc
repz
ds
or
push
out
cmp
setg
jg
mov
pop
xchg
mov
add
adc
stc
repz
lods
adc
mov
cmp
cld
cmpsb
jo,pt
and
dec
fs
and
loop
fwait
push
stc
xor
lds
push
dec
jg
cld
cmpl
sbb
das
adc
jle
mov
iret
lahf
aas
int
movsl
das
sahf
add
cld
stc
repz
fcomps
push
adc
push
mov
movaps
lahf
aas
jg
aaa
mov
test
in
stc
repz
mov
pop
lret
cmpsl
sub
lods
daa
cld
stc
xlat
jp
jb
push
pusha
sub
jns
aas
jg
or
sahf
and
pop
lock
mov
iret
in
jae
xor
shl
int
pop
lods
jno
aas
jg
cld
mov
jle
ret
pop
xchg
out
xlat
vpperm
iret
lahf
out
add
je
icebp
or
cld
stc
and
aaa
mov
mov
and
lahf
aas
adcl
adc
in
jg
lds
inc
jo
xor
stc
mov
mov
xchg
mov
jg
xor
mov
jp
mov
lcall
repz
daa
test
popf
lock
add
jnp
cld
repz
jg
cld
xchg
loop
sahf
loope
aad
cli
enter
scas
repz
lahf
cmp
gs
or
jmp
stc
jp
xchg
mov
lret
and
iret
lahf
aas
shlb
into
push
cld
stc
repz
push
push
ficoml
jge
hlt
aas
fsubs
jg
dec
mov
shll
mov
inc
dec
inc
outsb
fisubs
dec
mov
movd
xor
lahf
fldl
jg
cld
stc
in
jo
adc
loope
or
sti
out
lahf
aas
mov
xchg
push
cld
jno
xor
cld
stc
rep
lock
cs
or
inc
das
iret
lahf
aas
jg
fnstsw
gs
std
in
dec
jge
cld
stc
repz
and
movsb
jg
or
inc
cmp
lahf
aas
jg
inc
fldenv
aaa
pusha
outsl
ss
jecxz
jecxz
sti
leave
out
mov
js
cli
jbe
jle
xchg
pop
mov
jg
cld
pop
in
adc
fnstcw
xor
iret
lahf
sbb
xor
es
es
icebp
cld
imul
testb
test
repnz
bnd
iret
lahf
aas
jg
jae
mov
inc
int3
cmp
imul
mov
jg
cld
les
lea
ss
inc
push
dec
adc
out
lahf
xchg
loope
fsubrl
push
cld
stc
mov
sub
push
mov
rep
ljmp
int
adcl
lahf
aas
jg
aaa
lea
xchg
cmp
inc
pop
insb
pop
sbb
repz
outsl
cld
pusha
jnp
fistps
repnz
aas
jg
cld
and
sti
xorb
mov
pop
push
repz
lahf
cmp
jae
sbb
cld
stc
aad
mov
mov
out
mov
repz
insl
mov
and
sub
pop
stc
jg
cld
stc
pop
mov
mov
test
push
and
xor
pop
jp
jge
out
cld
stc
repz
aas
rolb
lcall
aas
jg
pop
je
xor
ds
cmp
stc
repz
cs
std
xchg
dec
or
push
lret
dec
sub
sbb
loop
loopne
stc
repz
inc
jo
insb
jae
xor
enter
mov
jg
cld
cmp
sahf
dec
cmp
in
add
mov
xorb
loopne
inc
stc
test
lret
movsb
mov
jg
fisttpl
or
lods
dec
test
out
lahf
aas
out
lcall
lods
pop
fwait
cld
stc
repz
mov
lret
xor
test
arpl
adc
popa
stc
outsb
gs
push
lahf
decb
in
in
sbb
ljmp
jg
mov
sub
stc
repz
or
ljmp
adc
aas
jg
cld
les
or
inc
sbb
lcall
out
mov
mov
loope
cld
cld
stc
aas
push
sbb
popa
lahf
leave
in
push
fcmovb
cmp
cld
mov
insl
je
repz
pop
jecxz
cmpsl
jno
iret
lahf
aas
pop
pop
insb
movsl
in
mov
jae
gs
stc
stc
repz
mul
scas
xor
iret
scas
fsubl
stc
repz
cmovge
test
incb
leave
arpl
iret
lahf
aas
jg
test
pop
dec
pop
jns
cli
sbbb
stc
repz
xor
aas
cmp
imul
aas
jg
stc
outsl
mov
add
imul
xchg
xor
xor
test
ret
sub
mov
cld
cld
ja
cwtl
lcall
aas
jg
cld
aas
pop
mov
cmpsb
adc
sbbl
shl
iret
lahf
sbb
fisttpl
clc
mov
jle
cld
stc
lods
loop
push
je
roll
je
out
adcb
cltd
add
cmp
out
fwait
aaa
mov
pushf
daa
aas
dec
mov
mov
mov
gs
cs
shl
or
cli
nop
and
call
ds
rcrb
push
mov
insl
cmp
xchg
mov
pop
xchg
aas
or
fwait
pop
fwait
aaa
outsl
fsubp
popf
lcall
cmpb
int
je
mov
mov
das
leave
sbb
outsb
fidivrs
sub
push
call
cmp
out
fwait
aaa
add
mov
adc
mov
repz
adc
xor
packsswb
ret
jg
dec
stos
mov
adc
cld
stc
jo
push
and
push
xchg
mov
fwait
addb
call
sbb
cld
stc
repz
adc
mov
aam
xchg
iret
lahf
aas
jg
in
cmp
jmp
pop
jecxz
xor
repz
sbb
mov
add
or
mov
je
fadd
cmpsb
into
negl
dec
inc
jle
das
xor
jle
stc
repz
pop
dec
mov
push
repz
jp
fdiv
out
aas
jg
push
aad
cli
stos
shl
jg
cld
stc
mov
stos
dec
push
cmc
inc
rolb
js
imul
ret
scas
fidivrs
sub
mov
movsl
sub
sub
outsl
push
lahf
ds
adc
sub
out
jl
jge
jp
mov
sbb
outsl
fiadds
or
in
push
fsubs
int
aaa
lds
negl
out
or
fisubrs
cld
cmp
out
jmp
bound
dec
push
mov
incb
dec
js
push
popa
fsubrs
outsl
fiadds
sub
or
mov
int
aaa
hlt
and
enter
ret
out
test
mov
ss
sti
xchg
xorb
int
aaa
outsl
jb
mov
ret
add
nop
adc
std
mov
mov
push
test
sub
adc
out
lcall
lret
or
repz
cwtl
adc
xlat
jne
aam
jecxz
mov
outsl
fidivrs
insl
stos
cwtl
jmp
mov
in
fbld
dec
and
incl
xor
cld
mov
push
ret
dec
adc
out
cs
enter
or
shl
inc
cmp
arpl
inc
pop
lcall
sbb
hlt
in
out
xchg
loope
inc
outsl
fidivrs
lret
shrb
push
lcall
outsl
mov
std
dec
push
mov
stc
jae
sti
out
fwait
aaa
test
std
outsl
pop
aad
fidivrs
popa
in
xor
pop
cli
iret
lds
cmp
pop
inc
jo
call
inc
mov
mov
leave
push
addl
addb
mov
add
mov
fnstcw
fwait
push
mov
stc
repz
xor
pop
daa
lods
mov
jle
jg
sbb
stos
call
sub
repz
fistps
ja
sbb
cmp
psllq
sbb
add
dec
cmp
jg
cld
stc
test
scas
not
test
adc
out
lahf
aas
jl
sub
add
add
cld
stc
repz
and
cmp
or
mov
jg
fisttpll
gs
push
add
pop
and
iret
lahf
aas
ja
xchg
jmp
jmp
cli
stc
cld
stc
repz
mov
cmp
arpl
outsl
ficoms
aas
xor
xchg
popf
test
xchg
mov
int
aaa
stos
fsubs
dec
cmp
stos
stos
mov
insl
sbb
hlt
rorl
mov
int
aaa
outsl
or
jae
or
jge
rcl
loop
pop
out
icebp
enter
es
pop
jge
daa
stos
push
cmp
repz
hlt
and
dec
mov
test
push
jns
push
clc
fsubrl
cmp
ret
addb
loop
iret
lahf
aas
out
sbb
cli
cmp
xchg
mov
sti
in
ror
in
and
add
add
and
xor
and
mov
stc
xrelease
jg
scas
imul
jg
aam
es
fldl
pop
and
inc
mov
fcmove
lods
roll
js
xchg
sbb
lock
mov
mov
divl
mov
adc
adc
aas
mov
sub
bound
iret
lahf
aas
pop
and
mov
out
jle
xor
cld
stc
repz
mov
sub
ja
iret
lahf
aas
jg
mov
xchg
loop
ret
jg
repnz
fwait
pop
scas
sub
sbb
fistl
push
out
lahf
jg
xchg
sbb
or
cld
stc
repz
sbb
cmp
jo
ret
ficoml
and
jg
outsl
jbe
jp
in
xchg
add
iret
lahf
aas
jg
mov
pop
jle
repnz
insb
cld
stc
rep
jne
testb
push
sub
mov
aas
jg
and
imul
push
stc
repz
faddp
mov
arpl
adc
movsl
sub
rorb
xor
or
insb
dec
jp
add
repz
or
repz
insb
loopne
pop
aas
jg
cld
lahf
pop
sub
scas
push
sbb
pop
dec
dec
xor
mov
lahf
xchg
push
pusha
jae
sbb
xor
jns
mov
enter
mov
mov
outsl
fidivrs
data16
mov
lea
cld
cmp
out
fwait
lock
rcrl
fbstp
pop
cmp
mov
fwait
pop
ret
push
jle
stc
repz
int3
ss
cmp
dec
jnp
cmp
mov
outsb
fidivrs
scas
xor
vpsraw
cld
imul
bnd
push
into
ja
iret
lahf
aas
jg
sti
sti
xchg
pop
pop
jae
inc
xor
repz
js
mov
js
and
jns
xchg
pop
lahf
sub
or
fdivrs
lods
aaa
outsl
fidivrs
sbb
roll
test
out
fwait
pop
movsb
sub
add
xchg
insb
push
clc
inc
je
sahf
fdivrl
cmp
lock
arpl
mov
call
adcb
movsl
nop
jecxz
add
aaa
leave
mov
mov
out
enter
out
fwait
aas
addr16
sbb
insb
xor
push
daa
fidivrs
into
inc
pop
or
daa
loopne
nop
nop
push
mov
and
pop
lcall
mov
stc
repz
mov
lahf
aas
lods
shl
and
ficoms
lahf
aas
jg
and
das
sbb
add
repnz
lret
mov
pop
bound
out
mov
inc
jno
push
xor
repz
int
in
sub
sub
aad
daa
fstpl
sub
out
lahf
mov
jge,pt
add
inc
push
scas
and
insl
push
cmp
cld
stc
dec
cmp
sbb
push
into
pop
dec
mov
xchg
jg
movsl
sbb
cld
stc
repz
push
xchg
jo
xchg
rcl
inc
inc
test
jg
sub
xor
mov
cld
stc
repz
movsl
mov
movsl
fidivrs
aaa
xchg
push
lahf
aas
jg
rcrl
andb
imul
out
jg
aas
mov
mov
mov
loope
jae
repz
div
in
test
mov
lahf
mov
push
xchg
out
lahf
aas
in
adc
add
adc
or
mov
inc
in
scas
imulb
aam
or
outsb
jg
fs
lahf
aas
pop
inc
xchg
sub
aam
sbb
cld
stc
repz
lret
mov
cmp
push
push
pop
push
and
es
or
repz
mov
int3
decl
lds
cld
stc
jno
mov
mov
push
jne
or
push
aas
push
and
pop
push
arpl
out
push
stc
repz
jb
cmc
incl
out
in
cltd
and
or
aas
jg
cld
cmc
jno
cmp
push
fisubrs
cwtl
int
movsl
xchg
lahf
je
movb
aaa
outsl
aaa
add
or
shlb
mov
dec
xor
xchg
sub
out
cli
clc
jl
push
and
jns,pt
out
imul
jle
test
sti
loopne
aaa
outsl
fidivrs
mov
hlt
testb
repz
fwait
outsb
xlat
xlat
or
mov
adc
jns
sbb
aas
or
pop
outsl
fidivrs
push
adc
cli
jbe
pop
outsb
adc
dec
dec
shl
outsb
or
cld
jns
jo
cmp
mov
lods
hlt
js
insb
fidivrs
pop
or
pushl
or
out
mov
js
inc
xchg
jecxz
in
hlt
out
fidivrl
cld
stc
and
mov
pop
dec
or
dec
inc
xchg
lahf
aas
int
push
xchg
xchg
mov
int3
inc
pop
fidivs
mov
pop
scas
xor
ss
pusha
or
and
lods
dec
aas
imul
mov
in
scas
popf
mov
out
xorl
add
add
mov
add
jbe
xlat
cmpl
cmpsl
lea
jo
xlat
int3
sbb
fistpll
cld
stc
mov
scas
in
popa
push
push
gs
mov
int
iret
lahf
aas
inc
popa
ret
sbb
mov
mov
out
lret
cld
stc
repz
loop
sbb
mov
ja
jo
xchg
lahf
aas
jg
insl
pop
shrb
inc
iret
lods
ds
stc
repz
scas
pushf
sbb
loop
lret
jb
in
cwtl
lods
cld
imul
xchg
sub
ffreep
into
fwait
lahf
aas
jg
scas
push
xchg
push
cmovl
in
iret
jecxz
sahf
stos
push
fldenv
repz
mov
mov
clc
push
add
stc
data16
mov
push
daa
adc
sbb
stc
ret
dec
ds
mov
fistps
aas
jg
cld
and
call
mov
push
fildl
push
inc
in
enter
mov
adc
inc
stc
repz
out
int3
int3
mov
es
test
push
sbb
jg
sbb
ja
iret
lahf
aas
fiaddl
outsl
jecxz
and
les
cld
stc
repz
fstpl
fcompl
in
fwait
test
add
aas
jg
stos
mov
sub
stos
jecxz
repz
addr16
pop
lahf
pop
and
ds
ds
cmp
mov
mov
hlt
repz
fwait
sbbl
sub
sub
mov
push
and
nop
xor
imul
pop
addr16
mov
mov
enter
inc
jg
lret
mov
inc
bound
lahf
fs
jb
jnp
sub
jb
cld
cld
stc
inc
jb
rep
cltd
cltd
mov
jns
pop
fistpl
inc
jbe
xchg
in
xchg
sbb
addr16
mov
scas
mov
ret
out
shrb
push
cmp
jg
cld
mov
jmp
testl
cs
in
xchg
repz
pop
aas
loop
jne
cmp
mov
int3
test
data16
lods
lods
pop
loopne
mov
insb
fidivrs
pop
xlat
mov
movsb
xchg
repnz
mov
sti
xchg
les
stc
xor
es
inc
lds
push
sub
lahf
aas
je
stc
ljmp
sbb
cld
stc
repz
test
bswap
movsb
dec
sub
aas
jg
or
inc
ret
orb
cmp
out
or
imul
add
les
lahf
aas
jg
dec
ret
jp
cmpsl
aam
inc
cmp
adc
out
and
popa
in
shlb
repz
dec
aaa
adc
das
inc
lret
cld
stc
xlat
or
inc
iret
iret
mov
pop
insb
add
inc
sub
inc
xor
dec
nop
daa
push
pop
fists
mov
mov
cmp
stos
xlat
jg
xor
cld
mov
adc
cld
stc
repz
pop
xlat
leave
imul
adc
jg,pt
jns
ds
mov
cltd
test
outsl
or
test
into
addr16
scas
aad
out
mov
push
cld
mov
mov
pusha
jns
jno
push
push
push
es
add
lods
jnp
out
aas
jg
jno
ret
aaa
rcl
add
cld
stc
repz
push
rorb
lds
jo
push
jo
jg
push
fmull
lret
xchg
dec
sbb
aas
mov
mov
cmpsb
jp
out
or
cs
repnz
scas
xchg
orb
or
popf
test
paddb
repz
in
fadd
and
jge
test
dec
and
jg
dec
mov
push
aam
mov
shrb
movsl
pop
lret
cltd
orl
jl
int
aaa
lock
adc
mov
sbb
fidivrs
aam
push
and
inc
je
dec
and
fwait
aaa
outsl
in
and
sbb
jp
cmpb
push
or
fdivrs
or
outsl
fiadds
inc
aas
es
clc
jecxz
roll
repnz
push
add
cmp
mov
ja
xchg
loopne
insb
mov
mov
dec
xchg
outsb
loop
insb
repnz
test
aaa
outsl
fidivrs
pop
orb
jbe
repz
fwait
repnz
jne
fldt
mov
leave
adc
pop
jge
xor
push
out
fwait
aaa
and
xlat
test
das
dec
mov
in
mov
inc
in
xlat
lds
mov
iret
lahf
aas
jg
xor
mov
data16
mov
stc
repz
xor
fsubs
fcoml
fcmovb
mov
aas
jg
or
and
or
or
fptan
repz
mov
xor
adc
fs
cld
jae
xor
add
or
push
gs
lahf
aas
jg
outsl
pop
lock
fmul
fadds
cld
stc
repz
ds
into
pushl
jmp
incb
adc
sbb
push
push
mov
repz
pop
aaa
fcmovnu
inc
sbb
stc
lret
pop
inc
pop
xor
dec
out
jns
cs
imul
gs
xchg
icebp
fwait
aaa
outsl
fistps
pop
add
sahf
daa
daa
std
jns
out
iret
pop
pop
iret
cli
fs
addl
aaa
outsl
fidivrs
inc
mov
sub
in
repz
fwait
testb
dec
daa
mov
fidivrs
ljmp
push
gs
out
fwait
aaa
dec
adc
jmp
inc
sbb
bound
ret
lock
int
adc
adc
iret
aaa
int
aaa
outsl
aas
mov
movsb
bound
xor
in
out
jns
out
and
shl
mov
iret
lahf
ds
out
stc
out
mov
cmpsb
cld
stc
repz
xorb
insb
pop
movsb
out
ds
sahf
aas
jg
dec
cmp
iret
mov
fidivrl
jns
cmpsb
addr16
push
popa
popa
push
or
or
adc
inc
xchg
lret
rcl
adc
icebp
xchg
int
mov
and
fistps
iret
lahf
inc
push
mov
xor
and
test
adc
push
fstps
jmp
fcmovnbe
movsb
addb
sub
iret
lahf
aas
mov
and
scas
mov
ss
repz
jge
loop
push
cmp
addr16
jg
fcompl
ljmp
cld
leave
in
repz
out
sbb
rcr
out
adc
repz
mov
lret
mov
xchg
lahf
xchg
push
mov
stc
mov
pop
hlt
mov
mov
lcall
jns
stos
das
mov
cmp
iret
lahf
aas
or
dec
adc
out
imul
pushf
cld
stc
repz
pop
inc
cmpsl
mov
jge
and
jg
leave
push
sub
in
das
pop
jl
cld
stc
repz
repz
xchg
sbb
lret
adc
popf
xchg
pop
cs
jle
gs
push
aam
out
jne
in
iret
icebp
aaa
adc
cvtps2pd
push
dec
dec
out
sbb
or
fidivrs
aaa
test
sub
mov
int
aaa
outsl
mov
lahf
inc
xorl
dec
je
dec
shrl
adc
mov
jns
mov
xor
enter
repz
jge
cli
cltd
iret
sbb
bound
jg
cld
stc
cmp
std
sbbb
or
jecxz
cltd
pop
out
lahf
aas
fs
cmpsb
and
je
movsb
sbb
stc
repz
mov
pop
cltd
cmc
mov
push
es
pusha
fstps
pusha
repnz
movsb
rorl
fucomi
test
stc
repz
and
imull
mov
jg
xor
add
push
jp
out
ja
xchg
jmp
je
xlat
mov
mov
mov
sbb
push
dec
lds
mov
jo
bound
jns
out
mov
scas
fstpl
fimull
or
outsl
cmpb
sbbb
jb
fbld
loop
jno
loop
daa
mov
cld
jmp
test
push
and
int
lahf
aas
jg
vmovss
adc
jge
adcb
stos
cltd
inc
stc
stc
repz
ffree
not
scas
daa
jle
mov
sahf
insb
xor
push
and
mov
push
cs
mov
int
subb
cmp
dec
fidivrs
icebp
popf
fisubrs
and
jp
fcmove
fwait
aaa
outsl
and
inc
and
pushf
pop
les
xor
add
stc
test
xchg
add
daa
fstps
sub
scas
sub
jne
lock
out
data16
into
stc
repz
sti
icebp
xchg
add
jno
icebp
jnp
aas
call
cld
rorl
sbbl
out
outsl
fidivrs
loop
sub
cmp
ror
fwait
aaa
out
ficomps
rcrl
loopne
push
cmp
xchg
mov
mov
cld
in
iret
xor
cs
add
imul
out
in
movsl
mov
ret
jo
push
aas
jg
cld
stos
enter
es
push
lds
aam
iret
lahf
mov
sub
xor
inc
lds
fcomip
pop
sbb
lock
lock
aaa
out
sbbb
ja
cmp
repz
fwait
ret
inc
ret
lcall
inc
xor
outsl
fidivrs
addb
cs
rclb
lcall
aaa
mov
cld
in
aas
inc
xchg
fidivrs
xchg
inc
mov
adc
icebp
xorb
mov
xor
and
iret
mov
adc
iret
lahf
aas
call
xor
addr16
dec
jle
je
aam
stc
repz
sbb
aad
movsb
arpl
jle
pushf
ds
pop
imul
stc
repz
pop
sub
outsb
ljmp
push
and
inc
cld
xor
add
xor
jbe
lahf
aas
jg
pop
xchg
mov
sti
and
fidivl
adc
ja
mov
iret
pop
dec
es
push
leave
sarb
or
hlt
cwtl
push
xchg
int
aaa
outsl
cmpsl
mov
lods
cli
jmp
arpl
repz
mov
sub
fsubrp
xchg
fidivrs
sbb
mov
idiv
and
adc
sub
and
jmp
out
fwait
loop
mov
dec
jnp
jge
mov
jl
in
gs
and
int3
pop
stos
xchg
fwait
aaa
outsl
fldlg2
ss
pop
ret
in
jle
iret
mov
jg
mulb
je
lds
lret
repz
mov
and
stos
mov
data16
stc
lahf
aas
jg
jge
pmullw
mov
mov
stc
repz
push
stos
aam
sub
lods
data16
jmp
jg
cld
nop
movsl
cltd
insb
sbb
pop
sub
jae
sub
xchg
lahf
add
jle
push
out
leave
lahf
aas
xchg
dec
ja
mov
sbb
cld
stc
repz
rcr
cmp
jle
scas
cmpsb
mov
pop
xchg
mov
scas
sbb
aaa
out
sub
into
push
cmpsl
imul
aaa
ret
out
fwait
jge
movsb
cmp
push
sub
outsl
fidivrs
std
and
pop
addr16
xchg
sahf
jp
stos
or
addr16
push
int
aaa
adc
push
cmpb
fdiv
stc
adc
mov
jmp
popa
stos
outsb
daa
aaa
outsl
fdivrp
adc
pop
stc
imul
fwait
mov
outsb
adc
push
cmp
out
outsl
dec
fstps
or
jo
jg
cld
push
jg
push
dec
insl
cwtl
fiadds
mov
inc
sub
pop
stos
roll
pop
pop
lea
mov
jecxz
add
out
pop
mov
mov
jmp
pop
mov
cld
aam
mov
mov
loope
mov
mov
outsb
negl
sbb
call
loopew
jns
out
sub
aaa
mov
jmp
cli
xchg
mov
repnz
jae
in
pop
push
arpl
jns
out
sbb
leave
xchg
sbb
jae
xchg
insl
sti
jb
adc
leave
imul
ret
repz
fwait
js
mov
add
jmp
testb
mov
mov
loop
xlat
mov
adc
out
fwait
aaa
mov
mov
mov
fisttps
adc
loope
adc
dec
out
xchg
lahf
push
or
cld
xchg
and
daa
push
pusha
stos
aam
or
add
xchg
jp
outsl
fdivrp
or
cmp
stc
pop
push
fcomp
out
fwait
aaa
lcall
mov
aas
dec
cld
cmp
addl
int
icebp
icebp
push
aam
inc
jle
lds
lahf
aas
xlat
fbstp
mov
aaa
outsl
mov
cmp
out
fwait
subl
ljmp
mov
outsl
fidivrs
and
int3
pop
scas
fisubl
xor
xor
fwait
out
fwait
aaa
add
out
pop
iret
aam
in
cld
mov
add
pop
test
push
pushf
out
imul
pop
and
and
lock
aas
jg
mov
inc
aam
pop
and
data16
loop
xchg
mov
orb
mov
sbb
adc
sbb
ss
fidivrs
sub
pushf
imul
inc
inc
xlat
jbe
push
adc
repnz
in
ficomps
jecxz
or
push
jmp
push
push
push
es
mov
and
jg
insb
push
imul
cld
stc
repz
inc
cli
or
frndint
daa
jmp
mov
jg
fnstenv
sbb
xor
mov
sbb
cmp
cmpsl
push
pop
cli
addl
xlat
dec
pop
out
lahf
ds
inc
ja
jne
mov
iret
mov
repnz
adc
dec
addr16
fs
stos
xor
sbb
in
sub
fdivrl
pop
xor
lock
cmp
inc
and
int
push
out
mov
fwait
inc
mov
fidivrs
inc
test
jmp
push
mov
fwait
aaa
outsl
push
cmc
push
and
in
std
mov
out
les
pushf
iret
cltd
std
enter
test
idivl
test
dec
int
xlat
pop
orl
mov
enter
mov
popa
jmp
cmp
inc
xlat
outsl
jl
dec
testl
push
jae
xchg
sub
mov
out
fwait
aaa
cmp
std
lret
repz
jns
lds
jg
mov
jecxz
imull
jb
nop
fwait
aaa
outsl
adc
add
out
mov
int
pusha
xor
dec
and
stc
rep
mov
repnz
addl
aas
jg
cld
addl
xchg
lock
mov
inc
push
in
lahf
stos
mul
pop
sub
repz
shlb
mov
pushf
gs
imulb
jns
stc
sbb
cmp
hlt
repz
pop
in
stc
cld
mov
cmp
push
xchg
push
mov
add
cli
data16
daa
push
sbb
mov
shll
jmp
fwait
aaa
pop
sbb
adc
xchg
push
sub
adc
js
sub
mov
lahf
push
sbb
mov
xor
in
xchg
adc
sbb
aaa
fwait
xchg
aad
mov
and
dec
outsb
xor
mov
dec
dec
cmp
inc
es
lret
je
sbb
and
push
shlb
push
aam
adc
out
js
pop
out
mov
dec
int
aaa
rcr
aas
xor
mov
push
adc
in
imul
int
xor
fldcw
out
loopne
fwait
mov
paddusb
repz
lahf
aas
jmp
das
bound
ljmp
pop
std
cld
mov
nop
dec
push
mov
iret
lahf
aas
jg
inc
or
or
push
jae
xor
loope
stc
repz
dec
mov
jl
insb
cmp
sti
push
jne
aas
jg
out
jg
addr16
mov
add
stc
repz
xor
mov
mov
jle
cld
pop
pop
dec
inc
sbb
xchg
xor
mov
enter
movsb
pushf
fxsave
ja
sbb
push
inc
cmpsb
or
daa
ds
cmpl
mov
xchg
mov
cli
enter
rep
pop
cltd
test
fcoms
dec
shr
filds
es
lods
outsl
stos
push
add
add
je
xchg
cmpsl
mov
push
cmp
int
aaa
lret
inc
lea
xchg
pop
xlat
nop
movsb
dec
pop
push
cmp
repz
cmpsl
ret
xchg
daa
enter
xchg
jb
mov
arpl
cld
sti
packsswb
arpl
ss
dec
bound
iret
lahf
aas
aaa
test
xor
push
loopne
sub
in
int
outsl
daa
les
mov
arpl
out
cmc
rclb
outsl
insb
push
aas
ds
std
mov
jl
std
cmc
xchg
pop
xchg
imull
iret
mov
jp
ljmp
aas
jg
cld
clc
xchg
addr16
daa
imul
repz
lahf
lods
fidivrs
stc
popf
cwtl
add
movb
jg
cld
stc
lds
push
sub
push
fcmovu
push
mov
out
lahf
aas
mov
pop
gs
cld
stc
repz
mov
rcll
add
pop
aad
mov
cld
andl
test
sub
inc
popf
movsb
sbbl
add
mov
add
cmp
adc
pop
out
call
mul
push
inc
aas
mov
mov
push
pop
add
aas
jg
or
lcall
test
mov
repz
fldt
sbb
in
mov
jg
cld
pop
shlb
sbbb
lcall
and
outsb
testl
inc
mov
adc
hlt
or
cld
stc
xor
push
and
add
lahf
aas
xchg
addr16
leave
jge
cld
stc
repz
aaa
test
pop
test
iret
iret
cli
push
dec
repnz
mov
pop
adc
inc
mov
xchg
pop
jns
out
outsb
aas
mov
mov
ja
outsl
fidivrs
xchg
cmpsl
xor
adc
mov
rolb
xor
dec
jmp
push
lock
in
dec
call
jmp
outsl
fidivrs
outsl
std
out
lret
fneni(8087
add
push
cld
xor
pop
add
call
sbb
mov
outsl
fidivrs
adc
loop
cltd
push
sbb
cmp
gs
clc
mov
mov
cmp
ret
jo
push
das
adc
mov
fwait
aaa
adc
call
in
neg
mov
std
xlat
or
jl
rcrb
in
or
mov
aaa
outsl
pop
and
or
push
pop
mov
jb
out
mov
ja
adc
fs
icebp
adc
mov
iret
cmpsl
adc
js
bound
xchg
outsb
std
fistps
pushf
test
fdivrl
aam
pop
adc
repz
scas
cmp
mov
cld
stc
adc
or
push
outsl
dec
aaa
inc
adc
andl
or
daa
sub
aas
jg
sub
sub
in
orb
outsb
jb
repz
repz
fucomi
push
add
xor
push
add
cld
ret
fwait
out
or
outsl
add
mov
iret
lahf
mov
test
mov
push
scas
int
fwait
aaa
adc
sbb
jmp
cmp
mov
imul
mov
cwtl
sub
outsl
fisubs
pop
mov
loopne
scas
mov
shll
out
lds
inc
cwtl
decb
scas
into
arpl
mov
jl
xchg
cltd
data16
dec
mov
xor
fwait
aaa
scas
subl
sbb
mov
and
bound
mov
mov
out
pop
stc
inc
fistpll
xor
cld
cld
stc
jp
cli
mov
push
pop
cmpsl
sbb
xchg
lahf
rorb
repz
mov
xor
ss
and
inc
fidivrs
cmp
enter
mov
push
addr16
int3
stc
add
push
xor
or
and
enter
scas
lret
push
mov
cmp
lods
out
inc
mov
push
loopne
dec
neg
pop
scas
movsl
out
outsl
fidivrs
je
push
out
sarb
pop
out
fwait
aaa
sub
push
jg
lret
stos
jle
cmpl
xlat
fsubrl
lock
adc
std
or
inc
es
fwait
inc
fisubl
outsl
out
mov
dec
xchg
clc
dec
jo
inc
mov
and
mov
mov
ja
div
flds
flds
insb
ficoms
aam
and
and
add
add
inc
jns
out
je
pop
jle
sub
iret
mov
push
adc
mov
adc
andb
fstpl
mov
xor
std
pop
pop
imul
push
repz
xchg
cmp
lcall
repz
repz
dec
push
ds
add
rclb
adc
lods
xchg
in
inc
test
xchg
in
lahf
jg
jb
pop
int3
rorb
cmp
pop
push
imul
dec
jl
sbb
repz
push
and
adc
mov
outsl
ficomps
pusha
std
push
ret
adc
adc
not
pop
push
fstpt
repz
je
add
fs
push
inc
inc
aam
out
lahf
cwtl
push
mov
fwait
cmpl
pop
sub
jae
icebp
daa
fwait
aaa
outsl
or
add
adc
lock
adc
inc
int
aaa
rol
pop
cmp
adc
cltd
adc
out
sbb
lea
daa
jmp
push
adc
xchg
ret
push
dec
test
dec
dec
jb
loope
inc
push
nop
repnz
inc
push
ret
in
fucomip
cmp
mov
xchg
mov
dec
into
cmp
repz
movsb
xlat
mov
int3
jl
shrl
cld
adc
push
adc
dec
push
xchg
fcomip
cld
imul
mov
lahf
jg
mov
xchg
inc
dec
bound
adc
mov
stc
repz
inc
push
add
adc
mov
inc
aaa
sbb
jns
out
ret
mov
mov
sbb
pop
mov
fwait
aaa
outsl
fisubrs
int3
in
or
mov
and
fdivrs
in
outsb
fdivrp
je
xchg
outsl
fidivrs
shrl
xor
or
repz
fwait
enter
mov
add
call
jns
jae
or
push
scas
mov
fdiv
popf
bound
mov
repnz
inc
iret
repz
jg
cmp
mov
sahf
jns
dec
arpl
mov
ljmp
cmp
adcl
lahf
push
mov
aam
pop
pop
mov
push
dec
iret
jle
repz
fwait
movsl
cld
jmp
push
xor
outsl
fidivrs
mov
insl
nop
xchg
divb
out
sbb
jge
xchg
fwait
aaa
mov
es
adc
repz
negl
xchg
in
jecxz
shl
aaa
outsl
fidivrs
dec
jns
xchg
fwait
mov
shll
out
ficompl
xchg
adc
outsl
fidivrs
push
repz
mov
mov
int
aas
and
stos
push
ljmp
repz
and
stc
repz
sub
imul
cld
fbld
jle
xchg
push
mov
divl
fidivrs
xchg
sub
or
sbb
jmp
daa
sub
int
aaa
insb
adc
add
mov
std
mov
cld
dec
pop
jge
repz
xor
ds
push
jecxz
int
fsubl
xchg
and
orl
aam
jnp
hlt
xchg
orb
pmaxub
into
incl
mov
test
int
aaa
outsl
push
mov
sub
push
ret
mov
sbb
cmp
pop
int3
mov
mov
inc
mov
bound
jae
aaa
repz
fwait
adc
sbb
rorb
mov
lahf
jmp
shll
inc
test
cmp
stc
repz
mov
dec
mov
add
cmpsb
lea
pop
mov
pop
imul
ljmp
sub
lret
pusha
in
out
pusha
dec
fidivrs
jae
mov
pop
dec
mov
aaa
outsl
dec
loopne
sbb
jl
mov
stos
mov
dec
add
decl
andl
loope
je
push
ljmp
repnz
jns
out
and
add
sub
xchg
pusha
xlat
insb
and
outsl
fidivrs
push
add
movsb
mov
sbb
jl
out
fwait
xlat
int
pop
int
test
and
insb
fidivrs
inc
cmp
dec
enter
push
cld
mov
cmpsl
mov
rdpmc
adc
adc
jg
out
ss
sbb
dec
xor
stc
repz
pop
xor
int
mov
lock
inc
mov
push
insb
inc
daa
mov
or
fwait
aaa
outsl
adc
or
sarb
mov
mov
push
das
jecxz
inc
inc
xchg
int
stos
popf
and
outsl
fidivs
jne
ret
mov
or
repz
imul
ffreep
shrb
je
aaa
outsl
fidivrs
cld
aad
mov
das
push
repz
fwait
cmp
mov
outsl
mov
fidivrs
mov
fsubs
push
lock
cwtl
bound
insl
enter
lods
fstps
mov
sbb
dec
mov
mov
aaa
stc
pop
jns
subl
push
fwait
aaa
outsl
pop
sub
jns
dec
xor
adc
lahf
outsl
jns
out
jb
cmp
lret
lret
mov
mov
loope
jnp
andb
mov
jg
cld
mov
aam
dec
xchg
lods
fwait
out
cmp
aas
setle
xchg
fs
into
jg
repnz
testb
mov
outsb
xchg
lahf
aas
adc
ss
or
add
repz
sub
inc
rcrl
pop
cld
test
pop
jecxz
mov
adc
and
sub
addr16
sbb
xorl
add
cld
adc
out
shlb
xchg
xchg
mov
incb
pop
addr16
test
pop
xor
aaa
outsl
fwait
push
test
arpl
sub
int
f2xm1
jns
jno
mov
lcall
xchg
aaa
outsl
fidivrs
scas
cmpsb
das
stos
fstps
or
ret
push
mov
sbb
xchg
sbb
stc
sub
shlb
outsb
fidivrs
dec
pop
fmull
int3
cmp
daa
scas
dec
call
test
inc
aas
jg
cld
xor
cwtl
fs
pop
inc
cmpl
pop
sbb
repz
lahf
xchg
dec
clc
and
ljmp
cld
stc
ret
sub
adc
xchg
mov
call
std
outsb
lock
or
sub
out
aaa
outsl
sub
repz
fwait
mov
mov
jne
int
fldt
pop
cmp
fwait
inc
arpl
scas
cmp
test
mov
jns
out
shll
fistps
inc
jle
fwait
aaa
outsl
fimuls
mov
xchg
jno
and
jns
out
insb
in
test
jg
push
jl
add
cmc
or
popa
fyl2xp1
lcall
xor
mov
stc
test
outsl
repnz
fcmovnu
ljmp
fistps
aas
jg
cld
out
adc
stos
addr16
fldenv
aam
mov
popa
inc
mov
mov
fwait
call
xchg
ljmp
cmpsb
imul
mov
jecxz
jns
mov
add
cwtl
xchg
cmp
ds
lahf
fwait
jge
out
pop
mov
orb
stc
stc
repz
mov
out
jg
lods
rcr
aam
aaa
out
stos
iret
addr16
and
inc
adc
subl
mov
jg
shrl
pusha
lahf
stos
aaa
outsl
fidivrs
xor
imull
or
repz
fwait
repnz
xlat
and
push
outsl
jle
mov
popa
dec
dec
dec
int3
out
mov
leave
mov
aaa
outsl
jp
or
cli
mov
sbb
mov
pop
mov
add
arpl
fidivrs
in
fsubrs
fs
repz
lahf
lcall
cmpsb
std
jne
fcmovu
inc
cld
stc
test
ljmp
fwait
aaa
inc
add
imulb
out
in
cmp
pop
pop
and
scas
sub
adc
mov
and
hlt
enter
mov
mov
ljmp
or
adc
push
and
pop
cmp
mov
xchg
sbb
xor
dec
pop
push
enter
jp
mov
lds
dec
xchg
fwait
pop
repz
hlt
jl
jb
dec
push
mov
sub
jne
fidivrs
in
pop
decl
imul
ds
hlt
out
fwait
aaa
dec
imul
fcompp
jns
and
xor
daa
mov
test
or
jl
loop
push
icebp
cmpl
aaa
outsl
fidivrs
mov
push
shlb
dec
ljmp
lahf
fbld
addr16
inc
xchg
popf
and
outsl
fidivrs
decl
push
xor
f2xm1
jbe
out
fwait
aaa
xlat
cmp
and
imul
repz
push
fs
xchg
sbb
or
fwait
aaa
outsl
mov
xchg
flds
mov
mov
mov
lods
mov
add
add
decl
call
xchg
fwait
stos
push
rorb
lock
int
aaa
movsb
add
outsb
outsl
push
pop
mov
jne
lock
jg
out
push
lahf
imul
mov
daa
push
ds
pop
das
push
cltd
aaa
push
xchg
or
js
cwtl
aas
jg
hlt
mov
shr
push
push
adc
push
inc
mov
push
mov
inc
mov
sti
shll
cld
xor
cld
stc
pushf
aam
jb
scas
mov
pop
aas
pop
das
loope
xor
aas
aad
test
or
dec
jg
cld
stc
repz
push
bound
data16
push
jg
mov
lcall
jno
mov
dec
cld
stc
repz
push
cmp
fisubl
inc
push
fiadds
aas
stc
scas
xchg
mov
or
jg
cli
sti
mov
fwait
aaa
outsl
mov
dec
adc
push
repz
pop
out
icebp
enter
imul
mov
cld
inc
das
enter
ss
xor
test
and
stc
lret
je
sbb
aad
mov
xor
jae
cmpsl
pop
testl
gs
xlat
cltd
cmpsl
stos
dec
into
jns
out
mov
das
ds
push
mov
xchg
cmpsb
rol
aad
xchg
call
int
dec
mov
dec
cld
insb
jl
mov
jns
adc
inc
mov
loop
arpl
pusha
in
fsubl
fwait
aaa
call
lahf
ss
aaa
outsl
fiadds
ljmp
test
fcmovnu
repz
fwait
mov
fwait
sbb
mov
mov
and
loopne
andl
inc
shr
xchg
fwait
aaa
imul
out
mov
add
and
dec
lea
jp
and
mov
jmp
push
dec
vpshaw
mov
push
cld
stc
repz
mov
cmpl
ljmp
outsl
mov
out
outsl
mov
mov
push
inc
xorb
lahf
out
not
push
pop
jmp
loopne
out
fwait
aaa
push
das
pushf
mov
xor
js
lock
fidivrs
mov
inc
mov
mov
cmc
jno
fnstcw
outsl
out
das
push
icebp
lds
adc
mov
cld
cmp
out
or
iret
fldz
cwtl
js
out
pop
add
movsb
lahf
aas
lcall
rcl
push
loop
inc
adc
out
cmpl
test
int
fisttpll
mov
dec
cli
push
fnstcw
in
mov
dec
cmp
pop
sub
pop
dec
sub
jns
repz
mov
fnsave
lods
inc
mov
mov
aaa
outsl
fidivrs
sar
arpl
ljmp
push
jo
shr
push
and
inc
data16
outsl
fidivrs
or
aam
hlt
push
inc
xchg
out
fwait
aaa
add
sbb
sub
cmc
fwait
push
fs
fidivrs
and
daa
cmpsb
ret
lret
loopne
jle
push
shll
aaa
outsl
or
fdivrl
sahf
pushf
xor
jge
lds
ja
sbb
nop
stos
flds
sbb
jl
hlt
xchg
add
or
jmp
aaa
outsl
fisubs
dec
sbbb
jge
pop
xchg
and
out
dec
rorl
mov
and
les
fidivrs
dec
dec
mov
loop,pn
push
add
repz
fwait
cli
icebp
mov
fisubs
push
sbb
jns
add
shlb
fwait
sub
lods
scas
add
pop
rolb
loope
pop
xchg
push
fwait
mov
xor
dec
les
add
xor
fidivs
divb
mov
fwait
ja
pushf
addr16
in
pop
or
jmp
enter
adc
lcall
dec
jb
inc
lret
inc
iret
into
call
cmpsl
aas
jg
cld
dec
fbld
xor
adc
pop
pop
repz
lahf
aaa
sti
jae
mov
jbe
cli
je
movsl
adc
jle
stc
mov
sub
mov
mov
sub
aad
sahf
fdivrl
in
xor
dec
cmp
insb
sub
dec
fcomi
xchg
int
mov
mov
push
daa
mov
dec
inc
xchg
ss
out
jle
dec
cli
xchg
sub
aaa
outsl
fidivrs
ljmp
jb
fdiv
out
fwait
jle
inc
cld
std
lret
push
mov
fidivrs
xor
cmp
jno
out
divb
xor
inc
lods
gs
stc
ja
out
mov
fistl
cmp
jmp
iret
lahf
aas
jg
mov
xchg
movsl
movb
out
push
jns
jge
andb
adc
test
jl
dec
inc
push
push
out
and
fidivrs
mov
pop
xlat
stos
push
rcll
sbb
sub
jo
dec
jb
or
imulb
adc
aaa
outsb
and
das
aaa
outsl
fidivrs
icebp
in
mov
dec
out
shll
xchg
loope
inc
add
jl
fidivrs
jecxz
push
shll
stos
jge
int
or
sub
sub
sbb
out
xor
pop
lcall
adc
jb
and
test
push
aam
aaa
outsl
fisubrs
sti
and
push
cmpsl
ds
enter
test
pop
loopne
cmp
mov
or
and
and
loopne
aaa
outsl
ficomps
das
or
call
mov
mov
enter
dec
push
push
cmc
pop
inc
out
out
idivb
outsl
fidivrs
and
mov
cmp
xlat
fsubp
int
aaa
es
loope
push
outsl
xchg
fwait
or
mov
cmp
sub
mov
repz
aaa
outsl
faddp
push
pop
adc
flds
adc
repz
enter
sub
ljmp
jns
and
mov
cld
mov
jno
int
aaa
icebp
js
cmp
sahf
pushf
inc
inc
cmp
jns
and
fisttpl
push
ficoms
dec
adc
mov
ja
and
vpunpckhwd
pop
fdivs
in
dec
xchg
xchg
xchg
aaa
insb
jns
out
dec
aas
dec
aam
je
icebp
dec
pop
ja
and
dec
addl
scas
and
jns
push
aaa
aam
sub
imul
js
cwtl
mov
pop
mov
repz
fwait
dec
dec
mov
outsb
sub
sbb
imul
xor
dec
ficoml
sbbl
cld
mov
xchg
ss
fwait
ds
jg
adc
pop
mov
out
aam
mov
mov
cmp
fidivrs
ret
push
jmp
test
adc
cltd
testl
mov
cld
stc
shrl
repz
lahf
fnstsw
int3
pop
stos
stc
ret
lahf
aas
dec
aam
movsl
add
add
sbb
stc
repz
gs
mov
dec
cmp
fs
in
ss
out
and
sbb
lods
out
sub
cli
push
sub
lods
and
rcrb
popl
mov
jle
filds
sbb
repz
lahf
mov
sbb
push
add
outsl
outsb
fiadds
lret
outsl
pop
aaa
dec
cmp
insl
push
out
adc
scas
iret
pop
out
mov
daa
test
daa
movsl
cwtl
cld
stc
repz
mov
ret
negl
outsb
push
repnz
daa
jg
loopne
xchg
sbb
mov
xorb
xchg
out
add
cmp
jg
pop
mov
in
ja
rcr
repnz
jnp
stc
repz
jae
push
jge
xchg
push
sub
hlt
fnstenv
and
jg
adc
xor
jp
fistpl
repnz
fwait
cmpsl
or
int
mov
idivl
shll
outsl
fidivrs
sti
shrl
xchg
adc
repz
fwait
das
int
dec
push
call
fwait
rorb
cmp
push
xor
xchg
clc
bound
and
aas
int
cmp
and
movsl
mov
in
adc
mov
push
popa
push
out
rorl
cld
add
out
cmp
jl
cwtl
sti
js
call
outsl
fsubrp
or
mov
arpl
int
sarb
xlat
sbb
ret
aaa
outsl
fidivrs
mov
repz
int
inc
push
mov
sahf
sbb
pop
inc
ss
outsl
fidivrs
rol
mov
sub
mov
test
shl
jge
imul
outsb
iret
movsb
sbb
movsl
sbb
and
sbb
xadd
jns
hlt
es
out
push
sub
add
push
mov
fisubrs
push
lea
int3
cmpb
int
ljmp
mov
aaa
outsl
fidivrs
test
dec
add
xor
sub
shrl
xor
add
push
cmp
ret
push
pop
add
outsl
add
lahf
jmp
loop
cmp
dec
int
aaa
outsl
cmpb
xlat
mov
int
jno
mov
xchg
das
addr16
outsw
push
aaa
outsl
fidivs
push
jmp
cmpsb
xlat
xchg
stc
in
in
outsb
mov
ret
fcom
sub
fidivl
aas
jg
sbb
or
out
es
sub
repnz
xor
cld
gs
and
imul
leave
scas
sub
jge
addr16
mov
arpl
inc
push
pop
cwtl
iret
mov
mov
cltd
jl,pn
cld
stc
repz
or
subb
stos
and
jo
add
cmp
lds
fnstcw
sbb
jno
pop
cmpl
pop
sub
loope
jg
cld
xor
xor
das
adcb
pop
pop
rol
iret
lahf
mov
clc
xor
daa
aad
out
cmpsl
jge
jg,pn
aaa
outsl
fiadds
sub
pop
add
add
int
cld
jmp
sbb
movsb
std
or
lahf
aas
jg
adc
es
inc
mov
ror
jbe
mov
lahf
aas
jg
jle
hlt
push
adc
mov
pop
outsb
pop
and
mov
mov
test
loopne
movsb
cmp
sub
ret
psubw
out
ds
xchg
xchg
mov
mov
icebp
mov
inc
push
pusha
add
push
lret
rorl
jo
insl
repz
lahf
and
stc
pushf
pop
xchg
adc
xlat
cmp
cld
stc
out
data16
test
cmp
shlb
nop
sub
addb
aas
ss
out
mov
push
pushf
adc
ljmp
pop
fwait
aaa
outsl
fisubs
cmpsb
mov
sbb
push
cli
enter
cmp
testl
in
lahf
shl
out
pop
pop
cmpsb
xchg
fadds
jnp
dec
mov
cld
stc
jl
mov
mov
mov
shlb
and
iret
lahf
aas
shll
pop
pop
jle
push
mov
cmp
cld
stc
repz
shlb
dec
inc
fs
mov
popa
hlt
mov
lahf
aas
jg
mov
std
test
mov
icebp
leave
in
dec
mov
xor
ds
iret
loop
mov
xor
test
push
xchg
mov
cmp
mov
repz
xchg
adc
or
xchg
jecxz
cmp
adc
fidivrs
inc
jl
lcall
out
mov
mov
fld
call
jmp
outsl
xchg
in
adc
cld
stc
inc
insl
fistpll
jb
stc
into
faddl
sub
comiss
mov
outsl
testl
inc
pushf
adc
repz
push
or
je
aaa
sarl
loopne
outsl
ficoms
andl
inc
pop
vcvtdq2pd
iret
fwait
jp
sub
add
mov
xor
mov
mov
clc
int
aaa
outsl
lret
push
jo
jle
add
ljmp
sbbb
cmpsl
int
ja
push
nop
outsl
fs
loopne
inc
sbb
pop
mov
jge
lret
stc
pop
sarl
inc
cmp
out
addr16
add
mov
out
das
sbb
mov
cmp
adc
out
inc
cmp
dec
inc
shll
push
lcall
xchg
xchg
loope
inc
inc
andl
rcrb
jg
inc
adc
push
push
aam
sbb
mov
testl
mov
lahf
jg
inc
sub
pop
aad
ja
or
fadds
out
add
push
arpl
out
insb
imul
jo
enter
ss
add
ja
xor
stc
addb
and
fisubl
out
aas
jg
xchg
cmpsl
xchg
sbb
inc
rorb
lcall
iret
sahf
mov
xor
les
aad
inc
pop
shl
cld
lret
fistpll
mov
sub
ds
push
sub
push
adc
mov
lea
jmp
fwait
or
aas
inc
lea
pushf
adc
out
lahf
aas
arpl
add
add
repz
lret
mov
pop
xor
imul
jno
test
push
xchg
lahf
aas
jg
sbb
xor
mov
cmp
cmpsb
pusha
sahf
aaa
test
lds
fdivrl
mov
rcl
out
push
fs
push
aas
add
or
iret
mov
pop
call
mov
stc
rep
adc
jl
sub
fsubrp
cwtl
hlt
adc
push
es
and
test
mul
int
test
xchg
fdivl
stc
sub
repz
sub
popf
imul
mov
lock
sbb
out
or
fs
jb
jb
ss
jg
cld
and
std
xchg
mov
push
push
mov
outsl
ficoms
mov
inc
stc
jge
inc
rcr
or
aaa
idivl
pop
aam
mov
jno
cmp
mov
je
lret
clc
aas
sub
mov
loope
jmp
fstpl
xchg
add
mov
pop
sbb
jae
outsl
fiadds
jno
ffreep
jg
movsl
xchg
push
repz
out
and
inc
cwtl
mov
ret
fcomps
cld
stc
and
fdivrp
add
xchg
nop
lds
lahf
aas
mov
shl
xchg
pop
int
jg
lds
sub
lahf
lret
ja
out
lahf
aas
shl
mov
dec
mov
in
cld
stc
repz
adc
ljmp
pop
ror
lahf
aas
jg
fs
bswap
nop
mov
repz
shrl
adc
insb
fidivrs
mov
adc
leave
outsl
fiadds
push
or
jecxz
and
and
fwait
aaa
cmp
dec
int3
mov
mov
mov
add
push
xchg
jmp
enter
cwtl
out
push
cmp
mov
std
mov
add
shlb
lahf
sub
xor
int
aaa
dec
jle
shll
adc
ss
mov
lahf
cwtl
insb
stos
aad
ds
loope
mov
pop
mov
divb
int
aaa
outsl
add
fistl
adc
jns
out
sbb
testl
loopne
and
inc
dec
and
cmpsl
sbb
jo
and
jo
pop
xor
pop
jo
aaa
and
js
aaa
and
and
rolb
and
and
jo
and
and
inc
add
and
add
xor
mull
pshufw
inc
and
and
pop
xchg
daa
and
sbb
enter
inc
xor
xor
and
and
and
das
rolb
and
inc
or
and
jo
ret
and
pop
jae
add
and
pop
pop
adc
and
and
and
leave
inc
add
and
adc
and
jb
and
mov
adc
and
and
cmpsl
mov
jo
sub
and
and
inc
in
iret
lea
lods
mov
fwait
aaa
roll
das
iret
dec
mov
leave
shlb
out
or
lods
inc
sub
jb
icebp
loop
sub
cld
pop
xor
jns
sub
dec
mov
ficoml
and
adc
jmp
cmp
fucomi
push
cmp
lods
mov
mov
mov
or
cvtps2pi
sbb
aas
and
mull
adc
push
sub
cld
stc
pop
dec
push
gs
sbb
xor
inc
out
or
jp
stc
repz
aaa
je
js
je
arpl
outsb
aaa
mov
sub
xchg
or
hlt
mov
lea
aad
frstor
enter
jg
call
jbe
mov
dec
test
cltd
out
testb
xchg
xchg
les
mov
fdivrp
mov
inc
cld
ja
lahf
cli
dec
dec
daa
sarl
les
aaa
outsl
and
test
cmp
inc
mov
cltd
sub
dec
cld
adcl
lahf
cmp
xlat
outsb
cltd
cli
repz
add
and
cmc
xor
cmpsb
pop
sub
je
jns
scas
das
jbe
xchg
scas
aaa
roll
sti
sub
cs
fwait
jae
mov
out
jl
repz
push
jl
mov
xlat
jecxz
into
lahf
push
hlt
and
std
fcoms
cmp
test
aas
push
or
stc
repz
in
mov
mov
push
fdivrl
out
adc
push
pop
mov
enter
sbb
aaa
push
cmp
out
pop
jl
cmp
loope
mov
sti
das
xchg
pop
mov
aaa
cmp
rolb
call
fmull
stos
ljmp
push
clc
cld
stc
repz
sub
and
aad
in
sbb
dec
jno
lahf
aas
jg
scas
repz
add
stc
repz
lods
mul
icebp
jge
jne
lods
and
and
or
jg
jae
jecxz
lret
xchg
sbb
push
xor
inc
int
mov
fwait
ja
daa
pusha
xor
sbb
repz
pop
dec
add
aas
and
out
sahf
adc
and
jns
fcoml
push
xor
and
mov
mov
andb
sbb
inc
adc
pop
ja
cmp
mov
out
lahf
jg
loop
jecxz
mov
je
or
cld
stc
repz
cmp
cld
mov
jo
mov
inc
jle
add
push
sti
and
outsl
fiadds
sbb
int
out
imul
pop
sbb
int
aaa
xor
push
hlt
rclb
mov
jp
fstpl
push
inc
imul
ret
shlb
addr16
lods
repz
and
int3
lock
stos
filds
das
ds
cmp
imul
or
jno
mov
fs
jb
dec
cltd
push
and
jnp
xorl
add
in
inc
mov
jns
scas
mov
and
or
sub
fnstcw
stc
fsubl
mov
addl
addr16
mov
loopne,pn
jns
int3
and
pop
fidivrs
stc
jno
out
clc
sbb
xchg
xorl
inc
movb
push
fs
enter
out
into
or
inc
jp
arpl
pop
push
test
aas
and
adc
fmuls
pop
jge
pop
int3
mov
cmpb
repz
outsl
adc
addl
out
fbstp
insl
mov
lcall
jp
fidivrs
push
test
fwait
dec
andl
and
int3
psubsb
mov
ds
bswap
test
stc
and
add
sub
iret
lahf
aas
data16
out
mov
mov
cld
stc
repz
dec
clc
std
scas
outsl
fs
out
repnz
lahf
aas
jg
xchg
cmpsb
add
mov
repz
mov
enter
ds
stos
outsl
fidivrs
inc
ja
mov
push
loopne
cwtl
out
fwait
aaa
insl
popa
add
xchg
lock
lret
add
repz
xor
aas
int
mov
aaa
outsl
fsubp
js
rclb
inc
ja
test
out
loopne
sbb
aaa
inc
xchg
cmp
mov
aaa
outsl
fidivrs
lcall
test
hlt
xchg
int
xor
pop
and
adc
imul
das
in
out
fmul
mov
dec
aaa
outsl
fidivrs
das
or
pop
push
mov
fwait
xchg
test
fidivrs
sub
mov
mov
es
aaa
outsl
stos
nop
sub
dec
mov
dec
jge
repz
mov
adc
pop
loope
dec
push
lahf
aas
jg
pop
jecxz
imul
mov
or
je
out
roll
int3
push
fidivrs
pusha
shrd
push
bound
mov
int
pop
outsb
jne
fldl
lea
das
jb
mov
fs
enter
and
and
inc
sbb
fwait
aaa
outsl
pop
mov
inc
aad
inc
xor
mov
test
sbb
rcrl
jmp
sbb
mov
fsubl
jns
out
inc
std
sahf
cmp
or
cwtl
js
repnz
lock
outsl
fidivrs
dec
sbb
sub
stos
sahf
fisubl
repz
fwait
das
mov
pop
jecxz
mov
mov
int3
pop
mov
in
sbb
pushf
call
iret
outsl
mov
enter
inc
movl
jne
int
aad
xchg
std
push
in
ds
repz
sti
jp
imul
pusha
xchg
out
aas
das
jne
pop
pop
add
add
jg
cld
stc
jmp
rolb
xchg
sbb
out
lahf
aas
neg
cmp
adc
pop
push
stc
repz
sub
mov
mov
add
or
xrelease
jg
cld
push
push
and
fisttpl
out
lahf
jecxz
sahf
pop
sub
jecxz
test
pop
push
bound
cld
stc
rcrl
insb
mov
jg
out
xlat
push
jle
sahf
aas
inc
js
push
mov
aas
ljmp
inc
insl
xchg
xchg
push
cmc
sub
mov
repz
lahf
mov
test
mov
jecxz
pop
adc
cld
stc
rorl
loope
test
xchg
imul
out
lahf
aas
adc
daa
adc
out
imul
cld
stc
repz
push
xor
push
cmc
fimuls
push
push
iret
lahf
aas
jg
jl
pop
insb
loopne
push
or
in
xchg
sbb
stc
repz
pusha
lcall
out
lea
test
inc
xchg
pop
iret
cmp
fwait
aaa
add
pop
dec
or
cld
jnp
out
jnp
and
cmp
push
mov
mov
fisubs
pop
ss
adc
jno
fwait
aaa
shlb
sahf
leave
pop
outsl
mov
fldt
lea
mov
enter
fdivrl
dec
adc
inc
inc
cmpsb
or
fwait
aaa
out
stos
das
fs
data16
cmp
int
ret
push
hlt
hlt
push
jl
mov
fidivrs
push
rcrb
sarb
mov
int
enter
imul
ficoml
and
loopne
mov
fcoms
cwtl
mov
jns
scas
mov
mov
arpl
pop
and
fnstcw
call
shlb
xlat
push
outsl
and
mov
sbb
adc
repz
pop
inc
xor
js
call
outsl
fidivrs
pop
outsl
std
xchg
ljmp
dec
mov
inc
out
ret
lcall
push
and
aas
dec
mov
cmp
sub
and
jne
out
fwait
outsl
mov
loope
push
jmp
jns
mov
repz
lret
ret
ss
xor
adc
push
js
and
xchg
es
push
outsl
fidivrs
sub
pop
pusha
and
imul
fwait
aaa
lds
or
sub
or
scas
sub
fs
xchg
orb
inc
xor
jo
aam
mov
or
daa
fwait
mov
push
insl
loope
iret
mov
fisttpll
pusha
fwait
aaa
outsl
fdivrp
in
into
mov
sbb
ja
sub
loop
add
mov
xor
inc
aad
xor
jge
cmpsb
out
divl
loope
mov
sarl
addr16
dec
jns
inc
dec
jg
mov
or
push
xor
repz
mov
fsubrl
xchg
inc
push
rolb
mov
xor
sbbb
out
mov
mov
dec
push
fidivrs
jmp
int3
scas
ret
enter
lahf
xor
dec
test
pop
lods
cs
shl
das
fnstcw
shrd
dec
aaa
outsl
mov
lods
int3
scas
ja
dec
std
mov
int
adc
xlat
popf
jp
loopne
sub
mov
jns
in
cwtl
in
and
mov
cld
incl
lds
xor
fwait
aaa
movq
in
in
pop
jae
int
sub
lea
movb
hlt
leave
out
sub
cmpsl
aam
cmpb
aaa
jbe
xchg
xor
int
mov
mov
ja
cmp
rorb
scas
pop
das
jae
lret
dec
loopne
mov
pop
popf
adc
pop
push
add
stos
out
sub
fstl
pop
inc
dec
sarb
out
xchg
fidivrs
jge
outsl
fidivrs
dec
jle
ret
shlb
repz
fwait
loope
xor
movsl
inc
push
mov
sbb
mov
jns
dec
push
cmp
js
inc
pop
inc
pop
das
dec
shlb
fwait
aaa
lahf
cli
adc
jg
pop
test
mov
fsubrp
adcl
jg
aad
out
das
in
pop
es
mov
js
iret
pop
pop
sahf
mov
aam
rcll
stc
repz
pusha
push
lods
and
loope
cli
xchg
aas
jg
shl
lahf
sti
jns
push
ret
ror
sarl
aas
jg
daa
push
pop
xor
outsl
imul
repz
lahf
lret
or
lcall
mov
fmuls
stc
sti
in
cwtl
icebp
xchg
scas
xchg
lahf
int
adc
sbb
and
jno
repz
sbb
imul
sbb
or
add
jmp
ja
lahf
and
inc
lahf
cli
xchg
jp
lea
dec
and
popf
outsl
repnz
pop
aaa
fwait
aaa
outsl
fisubrs
jb
adc
mov
test
shll
cmp
fwait
aaa
jg
addr16
lret
pop
or
cltd
jbe
jns
out
in
mov
push
cs
insb
lea
xor
inc
repz
push
mov
je
ja
sahf
cmp
arpl
repnz
jg
cld
loope
sbb
mov
push
mov
sub
data16
in
lahf
aas
push
and
mov
test
sbb
int3
das
scas
cmc
in
leave
inc
mov
repnz
add
cmp
aad
dec
pop
xchg
jg
leave
push
dec
fwait
repnz
scas
out
dec
dec
sub
lahf
pop
push
dec
aas
int3
idiv
popf
in
outsl
add
data16
pop
pop
or
loop
fwait
or
rcr
lcall
int
lahf
arpl
mov
test
jns
sbb
shl
std
push
push
aaa
outsl
fidivrs
arpl
cmp
lahf
mov
int
aaa
in
cmp
mov
mov
leave
frstor
hlt
mov
jb
aas
aas
jg
jge
xchg
and
idiv
sbb
and
mov
iret
lahf
out
out
xor
mov
push
out
fildll
cmp
dec
cmp
mov
push
pop
andb
inc
xchg
lahf
sbb
xchg
stc
repz
dec
push
jns
jnp
loop
jno
dec
adc
cld
movsl
es
roll
cmc
out
popf
das
fs
rorl
sbb
fidivrs
dec
loop
movsl
insb
jne
inc
push
int
aaa
outsl
and
bound
clc
mov
repz
and
xlat
movsb
xchg
mov
pop
mov
fimuls
adc
or
pop
dec
cli
popf
push
and
in
enter
shl
or
push
mov
ja
sub
pop
and
stc
repz
aam
das
pop
or
cmp
adc
xlat
repnz
sbb
xor
xor
iret
lahf
jg
fsubs
mov
sub
out
sub
cld
stc
repz
mov
das
mov
mov
shufps
aas
jg
cs
cmp
xor
and
add
aaa
outsl
adc
jmp
aad
int3
cld
xchg
adc
repz
not
gs
xor
scas
mov
fwait
aaa
outsl
fisubrs
cmp
lret
add
rcll
ret
mov
out
jmp
data16
inc
stos
mov
stc
inc
loop
outsl
fidivrs
das
mov
or
fidivs
icebp
enter
das
les
sbb
mov
dec
push
jns
out
iret
mov
mov
or
enter
fidivrs
inc
mov
decb
outsb
repz
fwait
or
mov
jmp
sahf
mov
popa
lods
mov
cmp
push
js
out
fwait
aaa
fdivs
test
ret
mov
test
fidivrs
sub
pop
mov
fstpl
fwait
aaa
outsl
xchg
mov
mov
test
mov
mov
xchg
ror
cmp
or
or
cltd
arpl
cmp
sbb
ret
clc
inc
out
mov
insl
jae
inc
sbb
sbb
je
test
adc
or
mov
pop
adc
fidivrs
out
adc
xchg
pop
rcll
daa
outsl
fidivrs
ljmp
mov
iret
xor
adc
mov
and
xor
shll
outsl
fidivrs
mov
push
pusha
mov
cld
mov
push
sub
outsl
fidivrs
stos
cmpsb
sbbb
loope
or
fwait
sbb
inc
or
push
push
mov
mov
or
lahf
loopne
xor
or
cmp
enter
les
filds
adc
ss
stos
inc
fsubr
sbb
jle
es
pop
sbb
icebp
ljmp
xchg
xor
outsl
fidivrs
adc
out
pop
stos
and
repz
loope
aaa
repz
or
out
sar
stc
inc
cmp
cli
addr16
sti
popf
add
loop
fstpt
ljmp
mov
dec
out
icebp
out
mov
lahf
enter
dec
shrl
xor
dec
pop
aas
sahf
cld
stc
jmp
cmp
dec
jnp
and
adc
imul
iret
dec
aas
fadd
xor
ljmp
jl
bound
lock
xchg
aas
scas
cld
stc
repz
mov
jp
fildll
adc
add
adc
lahf
aas
jg
ret
fistpl
sub
movsb
in
in
stc
repz
dec
mov
xchg
mov
aas
arpl
mov
push
imul
sahf
sahf
mov
adc
push
mov
mov
ret
adc
scas
std
data16
sbb
pop
mov
test
xor
push
mov
push
push
mov
out
in
jmp
inc
pusha
mov
pushf
add
insb
fidivrs
pop
pop
inc
xor
cmc
jno
aaa
out
test
jae
cmp
imul
test
out
fwait
jp
ja
sub
test
push
leave
ret
mov
xor
cmp
xchg
cltd
out
xor
loope
sbb
cli
and
inc
inc
aas
jg
cld
xchg
or
cli
enter
iret
mov
sarl
iret
lahf
cmpsb
cs
pop
inc
push
push
lret
inc
xchg
jecxz
jg
cld
mov
testl
repz
lahf
push
inc
jbe
sbb
sub
add
jle
cld
stc
cmp
popf
enter
mov
push
addb
testl
scas
imul
out
scas
ss
jb
push
xor
int3
push
jne
stc
inc
pushf
dec
gs
jne
dec
adc
pop
jg
loope
lock
out
adc
je
or
push
addr16
xor
fsubs
cs
shl
iret
lahf
aas
mov
test
mov
cld
stc
repz
xchg
cmpsb
repz
mov
xchg
popa
jmp
fmul
dec
mov
adc
jle
jp
and
lahf
in
in
andl
mov
test
inc
repz
sub
aas
jg
jns
xchg
or
loopne
fs
jb
sbb
add
repz
sbb
aad
orl
mov
and
roll
movsb
sarb
sbb
not
xchg
aam
stos
imul
outsl
fidivrs
int
xor
in
lea
or
out
fwait
je
xchg
pop
aas
mov
adc
xchg
mov
add
pop
mov
outsl
fidivrs
orb
or
xchg
repz
fwait
xchg
push
fimuls
adc
and
fdivrl
mov
pop
cs
push
push
push
insb
ficoms
pop
jo
sbbb
fwait
lahf
mov
jne
lock
stc
repz
into
out
sti
aad
mov
xchg
stc
lret
cmp
sbb
push
cmpsl
icebp
mov
ficoms
sbbb
enter
sbb
ds
jl
in
push
js
xchg
mov
xchg
rorb
shlb
aaa
or
rorl
testb
mov
enter
mov
aaa
outsl
stos
das
mov
pop
push
or
test
mov
push
fists
push
js
mov
outsl
fsubrp
jl
div
testl
scas
jns
out
daa
sub
fstl
out
test
push
das
jne
dec
aaa
outsl
fidivrs
inc
idiv
jnp
ret
sbb
out
fwait
test
test
idiv
insb
outsl
fidivrs
icebp
lea
stos
imull
fsubp
int
aaa
cmpsl
daa
mov
lcall
cmp
xchg
scas
jg
cmp
aaa
outsl
ficoms
lahf
cwtl
cltd
push
das
and
call
fisttpl
movsb
mov
mov
fidivrs
mov
inc
mov
outsl
lcall
cli
fldt
imul
sbb
out
in
xlat
int3
add
test
ljmp
fidivs
out
mov
subl
fildl
int
test
sbb
lret
and
addr16
jg
cld
xor
shrl
inc
add
xchg
icebp
cli
stos
and
enter
scas
cmpsl
inc
push
in
mov
sbb
push
and
outsl
fmulp
xor
pop
adc
arpl
fs
pop
push
dec
adc
adc
cld
mov
jg
mov
out
push
das
out
flds
aam
mov
cwtl
out
idiv
shll
ja
pop
mov
and
fwait
ja
mov
test
rol
sbb
repz
sbb
cwtl
sbb
mov
inc
insb
or
fwait
aaa
outsl
xchg
lret
xchg
cltd
mov
das
fstps
mov
adc
inc
lcall
insb
fdivp
je
int
sub
xchg
cld
stc
repz
xchg
int3
popa
jo
fdivrs
mov
fiadds
loop
ja
adc
fwait
aas
aaa
outsl
decl
dec
cli
cmc
jo
in
inc
cmp
out
lcall
into
mov
push
mov
mov
and
repnz
fwait
out
pop
adc
iret
das
mov
ret
out
je
adc
outsl
shlb
fidivrs
jg
lcall
lahf
and
mov
fwait
aaa
outsl
and
stos
mov
je
xchg
cmpsl
mov
out
lods
jnp
xchg
jo
add
or
sar
test
fwait
inc
pop
pop
add
add
arpl
out
fwait
notb
cmp
mov
outsl
fidivrs
sub
out
iret
or
out
or
test
and
jns
out
es
dec
sbb
sti
imul
sub
jl
xchg
aaa
outsl
fidivs
movsl
inc
dec
xlat
sub
mov
out
xchg
adc
inc
mov
int3
or
mov
pop
jge
mov
or
in
sub
pop
cmc
add
dec
jnp
fidivrs
jmp
leave
lret
leave
inc
and
loope
inc
outsl
lcall
aad
fs
pop
inc
or
or
cmp
loope
jecxz
aaa
add
dec
xor
dec
xor
inc
out
and
fwait
int
xchg
push
lcall
repnz
stc
repz
sbb
insl
out
push
pop
push
dec
jbe
loop
xchg
out
push
pop
mov
rol
push
hlt
rolb
or
dec
inc
xorl
cmp
int
jmp
cli
lock
mov
sub
arpl
xor
push
cmp
aas
xchg
xchg
add
inc
outsl
or
inc
push
fildll
inc
dec
pop
shl
dec
outsl
in
roll
mov
push
sub
loop
pop
sub
push
pop
push
test
icebp
jge
iret
and
dec
in
iret
aas
das
mov
hlt
movl
push
scas
dec
movsl
lahf
aas
decl
add
sbb
sbb
cli
les
xchg
cmp
jns
mull
lret
mov
pop
or
mov
nop
out
lea
and
pop
dec
lcall
mov
bound
mov
pop
aam
es
out
lds
pop
pop
and
push
inc
mov
in
lods
sarl
das
sbb
stos
call
repz
pop
or
jmp
adc
adc
pop
sbb
imul
lods
adc
push
inc
cld
stc
mov
push
hlt
xor
call
lahf
aas
jg
mov
sub
ja
mov
int
insl
xchg
loop
ret
aaa
add
sub
sbb
out
fidivrs
mov
or
mov
call
lahf
cmp
jo
movsl
add
aas
ret
ficoml
loop
stc
stos
jp
mov
cmpsl
in
int
out
ret
and
jle
repnz
insb
repz
je
idivb
or
mov
mov
pop
imul
inc
push
arpl
mov
rorb
adc
arpl
xor
ljmp
cmp
mov
outsl
mov
pop
sub
scas
push
sbb
dec
add
enter
mov
jae
sbb
push
addb
ret
aas
jg
shlb
dec
cwtl
data16
mov
andb
cmp
ror
fwait
aaa
outsl
ja
lods
fbstp
ret
inc
jae
jns
out
fwait
ret
push
inc
int3
ss
cmp
ss
add
mov
adc
dec
add
push
mov
mov
inc
aas
outsb
pushf
and
push
xchg
int
aaa
into
ja
jae
sti
xchg
pop
pop
jae
aam
add
and
js
cmp
out
hlt
mov
js
and
fwait
out
mov
adc
repz
lods
push
adc
push
push
out
popf
lahf
fidivrs
movsb
sub
add
xchg
insb
push
clc
inc
je
pop
int
aaa
outsl
shl
sbb
lock
arpl
add
mov
mov
nop
jecxz
add
aaa
leave
mov
mov
out
enter
enter
adc
push
add
inc
push
sbb
dec
rcrb
stc
negl
or
xchg
nop
nop
decl
mov
push
inc
jle
cld
sub
push
dec
lret
dec
cmp
dec
and
add
lods
xchg
out
cmp
scas
ficoms
repz
and
das
sbb
add
fnstcw
pop
pop
bound
das
repz
mov
jno
inc
jno
push
xor
mov
sub
sub
js
aad
fstpl
sub
aaa
test
dec
add
repz
scas
and
mov
inc
cmp
sar
or
repnz
push
sbb
adc
sbb
sbb
incl
xchg
add
test
push
inc
or
dec
cmpsl
jne
pop
mov
outsl
sub
xlat
aam
cld
stc
stc
mov
push
mov
rcrl
adcb
push
hlt
add
dec
imul
cs
ds
sarb
mov
inc
push
leave
fwait
lahf
aaa
cmpsl
repz
div
cld
test
aad
repz
mov
sub
in
adc
add
adc
or
pop
or
push
lcall
not
test
adc
or
push
rcrb
push
mov
out
sbb
aad
lock
and
les
rclb
fistpl
add
mov
fwait
stos
movsl
add
lds
mov
repnz
mov
push
jne
or
xchg
and
and
imul
push
arpl
arpl
imul
add
in
cltd
repz
fwait
and
or
cmc
jno
cmp
push
fisubrs
mov
mov
cwtl
int
add
test
sahf
js
addl
xchg
notb
shlb
outsl
sub
lret
inc
xchg
cld
stc
mov
test
shl
and
clc
jl
push
inc
dec
add
out
fwait
aaa
iret
ds
jle
test
inc
lock
sti
loopne
cmp
mov
hlt
mov
xlat
sbb
xlat
or
lods
insl
adc
out
push
bound
or
into
xor
repz
idivl
inc
mov
adc
xor
cld
mov
outsb
adc
inc
sub
or
push
cmp
cmp
mov
sbbb
mov
loop
pop
or
pushl
jne
or
adc
push
inc
daa
xchg
jns
out
jecxz
in
hlt
out
fisubl
mov
pop
add
or
outsl
fiadds
xchg
xor
inc
ficoms
xchg
scas
xor
rcll
jns
aaa
outsl
fidivrs
and
xchg
cmpsl
push
data16
scas
jns
out
popf
sbb
xorl
add
outsl
fidivrs
add
nop
adc
std
cmpl
add
sbb
call
outsl
sbb
repz
in
popa
push
push
gs
mov
int
popa
ret
sbb
int
aaa
outsl
mov
mov
out
lret
outsb
loop
sbb
mov
and
inc
jo
xchg
insl
pop
shrb
and
and
lods
ds
pushf
loop
xor
aad
lret
imul
xlat
push
insl
xor
sub
add
mov
xchg
push
inc
sti
movzwl
je
mov
jecxz
stos
push
fldenv
inc
popa
jb
xchg
jg
insb
leave
mov
lods
clc
jg
add
pop
sbbl
adc
mov
lret
sbb
mov
ljmp
repz
cmpsl
and
call
iret
aas
pop
or
add
push
inc
push
mov
test
in
adc
inc
int3
add
out
int3
mov
es
or
scas
mov
mov
sbb
ja
fiaddl
fwait
aaa
outsl
fisubrs
jge
dec
les
or
fstpl
fcompl
fsubl
fwait
test
lahf
stos
mov
sub
xchg
pop
xchg
sbb
cmp
mov
lret
xor
mov
sub
sub
mov
movsl
cmp
push
and
mov
inc
push
pop
jg
push
mov
push
mov
jne
mov
test
pop
out
push
dec
push
in
jg
add
cli
lods
stos
repz
loopne
stos
inc
outsl
andb
cltd
mov
add
push
inc
out
mov
adc
addr16
jb
and
sub
movsl
push
pop
imul
add
push
iret
mov
mov
ss
mov
mov
adc
dec
add
lahf
push
loop
stc
jne
push
add
mov
ret
mov
data16
lods
lods
pop
loopne
sbbl
or
fwait
test
outsl
ficomps
mov
pushf
xchg
movsb
xchg
repnz
add
xchg
xchg
loopne
push
xchg
mov
addr16
adc
or
shll
inc
stc
jnp
out
add
push
mov
stc
ljmp
add
test
adc
enter
ja
movsb
dec
sub
movsl
push
inc
mov
or
cmp
push
out
sbb
jne
inc
les
repz
inc
xchg
ret
jp
cmpsl
aam
inc
and
pop
or
arpl
adc
push
popa
jnp
repz
shlb
add
test
aam
cld
pop
das
inc
inc
or
aas
lcall
mov
fcomps
insb
add
mov
out
mov
ds
nop
push
rcrl
push
aas
mov
loope
ds
insl
cmp
stos
xlat
pop
jg
mov
dec
sbb
and
xor
push
pop
leave
pop
imul
xchg
adc
push
push
sbbb
mov
mov
inc
pop
xlat
test
or
jg
sub
into
sti
scas
aad
xchg
push
sub
lahf
push
cld
mov
mov
enter
stc
push
push
push
es
add
lods
jnp
jno
ret
add
aas
mov
rorl
out
mov
rorb
jns
mov
xor
rcr
push
fmull
lret
shlb
mov
mov
stos
or
dec
jle
pop
cmp
repnz
jg
insl
sar
dec
mov
push
popf
pop
outsb
fidivrs
in
fsubl
cmc
jge
test
inc
push
dec
dec
fisttps
mov
sbb
popf
adc
flds
cltd
cld
stc
mov
sbbl
jbe
lock
adc
mov
and
jg
sbb
mov
aam
fwait
test
push
inc
xchg
and
out
shl
and
push
ficompl
outsl
fidivrs
push
or
fdivrs
out
fwait
aaa
or
stos
sub
dec
mov
clc
jecxz
add
es
popf
lret
inc
decb
and
loopne
fistpll
les
adc
sahf
fsubl
add
jg
add
mov
jbe
repnz
movsl
add
push
pop
jne
push
push
adc
jns
out
pop
jge
xor
push
and
xlat
test
fidivrs
mov
inc
jb
rorb
enter
mov
cld
cld
jo
mov
outsl
loop
cld
stc
xlat
mov
pushf
adc
fsubs
add
push
lahf
insb
test
filds
pop
push
and
or
andb
sbb
ljmp
xor
pop
jl
or
out
lahf
or
push
gs
outsl
pop
lock
inc
lods
adc
push
daa
aaa
adc
outsl
jge
mov
cmpsb
movsb
push
outsl
adc
adc
in
sbb
push
push
mov
aas
pushf
adc
lret
sbb
lahf
inc
pop
xor
dec
add
les
mov
out
scas
pop
gs
xchg
icebp
aad
pop
outsb
pop
pop
or
mov
and
daa
out
add
pop
push
pop
inc
sub
xor
cmp
lods
fstps
inc
jmp
out
sbb
sub
in
testb
fwait
aaa
outsl
dec
dec
daa
mov
lock
adc
js
adc
in
inc
jb
fisubrs
gs
dec
int
aaa
outsl
adc
jmp
inc
out
mov
ret
lock
int
adc
mov
mov
xor
into
inc
movsb
cmpsb
add
mov
inc
in
enter
aaa
outsl
fiadds
lock
loopne
into
mov
adc
add
int
inc
out
stc
lods
mov
push
out
ljmp
adc
inc
push
in
pushl
jno
cmpsl
out
mov
fidivrl
ja
sub
mov
adc
mov
out
lea
fs
lds
mov
rcll
out
mov
or
push
fcomip
outsl
sub
xchg
je
or
repnz
xor
adc
mov
add
fstps
jmp
inc
dec
add
inc
aas
andb
mov
pop
fisubs
rcl
mulb
enter
jge
cmp
and
xchg
insl
push
out
cli
xchg
out
xlat
into
xor
mov
into
cld
mov
dec
cld
sub
rcr
out
adc
enter
fwait
ja
mov
mov
xchg
lahf
xchg
mov
and
dec
pop
dec
mov
or
pop
push
sbbl
mov
sub
icebp
ret
jg
insb
stos
push
cmp
out
pushf
test
enter
cli
pop
inc
cmpsl
mov
sub
stos
xlat
leave
push
sub
fidivrs
pop
jl
xchg
repz
xchg
sbb
lret
fwait
aaa
push
popf
xchg
jmp
jg
lock
xorl
fmuls
pop
mov
iret
lock
inc
scas
push
idiv
fidivrs
inc
les
lock
push
sub
int
dec
enter
xor
cwtl
mov
lahf
inc
xorl
fisttps
cld
stc
negl
adc
jg
icebp
test
pop
imul
cld
scas
lods
fimuls
sbb
fidivrs
nop
leave
cli
cltd
sbb
mov
push
cmp
std
cmpb
ror
daa
push
or
jecxz
jp
outsl
ficoms
inc
cmpsb
and
je
movsb
sbb
int
test
mov
pop
cltd
cmc
mov
push
es
cld
stc
ja
scas
repnz
movsb
rorl
fucomi
test
and
jg
and
mul
iret
mov
mov
or
xchg
gs
push
pop
leave
iret
lahf
aas
iret
and
xchg
jmp
je
cld
stc
imull
mov
sbb
push
dec
lahf
aas
jg
in
cmp
bound
inc
sub
rolb
pushf
push
xchg
lahf
jge
aas
lcall
and
cltd
jmp
mov
and
jb
fildll
or
and
push
lahf
jg
push
xchg
aam
jecxz
mov
enter
shl
jns
mov
dec
aas
jg
adc
aaa
jge
adcb
jmp
repz
lahf
movsb
inc
mov
jmp
push
xchg
stc
stc
adc
jecxz
dec
mov
push
jne
cmc
mov
movsb
rolb
sbb
sub
mov
and
int
adc
in
adc
and
add
xchg
mov
or
pushf
cmp
imulb
stos
dec
and
adc
add
add
or
pop
pop
adc
sbb
push
fidivs
rorb
call
loopne
insl
bound
inc
add
inc
inc
adc
out
mov
das
sub
push
and
mov
or
dec
add
adc
loope
cli
adc
test
push
mov
adc
add
insl
push
inc
mov
add
cmp
shlb
jno
mov
loop
cmpb
sbb
dec
add
jno
testb
jnp
mov
movb
pop
inc
add
mov
rcrb
xor
fimull
sub
jp
les
add
push
push
pop
sub
or
test
push
inc
or
push
and
stc
add
mov
push
adc
adc
clc
sbb
push
adc
inc
inc
pushf
cmp
and
stos
fstpl
mov
fstpl
add
into
movsb
leave
or
scas
test
push
test
or
lods
mov
sti
sub
or
bound
fwait
push
adc
push
clc
adc
and
stos
ret
sub
ret
or
mov
sbb
sbb
or
jge
sub
rol
add
or
pop
add
xchg
mov
ljmp
insl
mov
loope
pop
pop
mov
adc
xchg
push
add
mov
inc
imul
fisttpl
sbb
into
adc
ja
call
mov
add
push
or
fcoms
mov
pop
inc
in
lret
cmp
inc
or
insl
pop
and
test
rolb
mov
cmp
sbb
je
adc
adc
jbe
xor
push
and
or
and
dec
rol
push
adc
add
mov
pop
push
pop
add
push
sub
into
cmp
push
into
mov
ret
push
leave
xchg
push
jle
jae
mov
sub
mov
add
test
mov
movhps
push
mov
icebp
and
sbb
js
mov
repz
stos
add
sbb
or
add
aam
ror
jg
push
and
andb
fwait
mov
or
push
add
in
imul
adc
mov
mov
adc
mov
ss
push
mov
mov
and
push
dec
add
sbb
mov
sbb
das
lock
lret
or
or
cltd
or
rol
mov
cwtl
or
pop
daa
insl
sbb
pop
outsl
call
inc
inc
cs
sbb
jae
mov
or
mov
ja
add
sub
bound
xlat
mov
and
cmp
outsb
sub
pop
mov
mov
data16
mov
mov
cltd
xchg
loop
sarl
mov
testb
push
add
adc
push
add
sarb
mov
call
mov
sahf
sti
sub
xor
and
xor
sub
dec
outsl
lods
jge
adc
xlat
ss
sbb
sub
xlat
jo
in
cmc
pop
aad
adc
mov
repnz
mov
xchg
inc
leave
andb
or
add
push
inc
or
enter
inc
jnp
cmpsl
add
and
xor
or
mov
or
lds
and
jmp
pop
js
jp
adc
icebp
mov
jle
sbb
push
push
inc
inc
add
sub
rcrl
aad
pop
test
ret
add
stos
scas
ret
inc
les
adc
push
add
push
mov
pop
loope
pop
sub
jge
push
push
in
out
adc
inc
push
adc
mov
orb
out
lods
mov
add
lret
andb
pop
mov
adc
push
xchg
notb
and
cmp
or
mov
adc
push
sbb
test
bnd
pop
aas
pop
jnp
jnp
or
movsl
lock
inc
push
subl
adcb
xchg
mov
or
sub
adc
and
adc
mov
xchg
ret
push
or
pop
dec
int3
mov
stos
mov
fbld
add
mov
push
gs
adc
test
aam
jno
jl
mov
inc
mov
add
mov
rcl
adc
inc
push
mov
inc
push
mov
cmp
push
clc
mov
fcompl
stos
cmpsb
xchg
rorl
call
jae
shl
xsave
inc
sub
test
xor
mov
pop
xchg
pop
lret
inc
movsb
das
idivb
sbb
rclb
sub
and
xlat
and
scas
jae
sub
cs
shrb
mov
and
or
pop
add
ljmp
stos
rcrl
mov
dec
dec
fisttpll
add
and
adc
repz
iret
push
loope
pop
xor
sbb
stos
push
mov
jae
leave
inc
nop
mov
jne
or
add
ret
or
xchg
hlt
pop
cmp
xchg
jmp
into
gs
mov
mov
sbb
sbbl
loop
into
pop
push
jno
std
pop
mov
inc
inc
ljmp
push
jnp
cmp
dec
cmp
push
ss
ret
mov
shl
pushf
cli
pop
adc
mov
inc
xchg
jns
dec
adc
mov
lea
adc
insb
test
cmpsb
mov
mov
cmp
andl
in
movsl
add
inc
rolb
xchg
int3
push
dec
inc
push
or
mov
adcb
in
pop
or
xor
adc
mov
xchg
jne
ret
adc
adc
inc
jnp
fildl
test
loopne
mov
sub
inc
lods
mov
lds
add
adcl
add
outsb
adc
add
fdivrs
and
xor
and
aam
stc
jl
pop
add
shr
loope
push
mov
or
sbb
es
lahf
push
lret
pop
arpl
ss
add
xor
mov
cmp
clc
adc
xchg
xchg
sbb
subb
mov
rcll
push
outsl
hlt
aaa
dec
lea
sbb
cmp
or
mov
insb
ret
lods
jo
ret
inc
scas
adc
cmp
mov
xchg
xor
jbe
sub
push
cmp
add
imul
cmp
mov
pusha
sbb
cmp
or
aas
push
aad
xchg
loopne
aam
sbb
movswl
into
xlat
mov
cmp
mov
sbb
out
addl
mov
scas
testb
adc
popf
add
aad
sub
push
loope
push
clc
or
pusha
pop
out
or
jbe
hlt
icebp
push
inc
call
sub
dec
add
jb
out
mov
aad
sbb
push
push
lds
std
jl
inc
test
rcrl
add
cmp
adcl
loop
cmp
div
dec
ljmp
pop
dec
jns
add
inc
sub
dec
sti
cmp
stos
jb
mov
sbb
adc
xor
lods
shll
xchg
fsubrl
push
popf
sarl
ficoms
fwait
push
rcll
test
push
mov
push
mov
shlb
sbb
mov
repz
and
push
inc
xor
adcl
pusha
pop
and
add
push
iret
xchg
clc
adc
or
rolb
dec
or
or
cmp
stos
push
mov
sub
pop
repz
ljmp
add
cs
jmp
sahf
mov
jmp
dec
add
ret
fidivl
pop
stc
sbb
sbb
movsl
sbb
scas
inc
loope
adc
inc
pop
call
jns
xchg
stos
inc
repnz
stos
roll
add
in
push
mov
das
or
push
mov
inc
ret
xchg
adc
rcrb
lret
mov
push
pop
movsb
push
pop
push
pop
lods
icebp
scas
repnz
add
es
out
ljmp
push
mov
in
adc
inc
lds
or
roll
mov
js
lock
pop
add
mov
stos
cli
jb
cmp
mov
mov
cs
addr16
stc
mov
test
push
and
ss
or
jne
mov
mov
scas
mov
in
push
clc
xor
or
ret
cmp
mov
pop
adc
adc
mov
push
dec
cltd
xor
aad
ror
jp
xor
test
stc
push
sub
sub
in
test
or
mov
add
add
adc
mov
cwtl
bnd
xor
mov
dec
rclb
loop
mov
sbb
clc
cltd
jae
test
add
inc
pop
adc
sub
inc
out
addb
or
sbb
adc
faddl
cwtl
sbb
add
mov
jo
jp
mov
add
push
lcall
rclb
test
into
vmovdqu
mov
jo
mov
out
cmpsb
mov
or
add
cmpsb
inc
ret
lock
inc
xchg
mov
push
mov
test
adc
out
jnp
push
lret
mov
mov
jmp
ret
les
scas
xor
imul
cs
roll
adc
push
jecxz
xchg
mov
inc
dec
ret
shll
loop
push
sub
and
add
lods
push
mov
or
int
adc
imul
xchg
orb
mov
cmp
or
sbb
addr16
push
inc
mov
or
cli
adc
std
inc
push
ja
adc
add
andl
mov
jbe
dec
mov
adc
sbb
pop
cld
ret
xor
in
stc
adc
pop
dec
stc
pop
or
pop
mov
push
fcoms
push
int
push
dec
dec
lahf
inc
and
push
add
lock
scas
or
js
cltd
adc
dec
jp
leave
xchg
stc
sub
or
mov
jmp
jno
orb
and
xchg
sub
cmpsl
xor
push
fldcw
mov
xchg
or
xchg
sbb
or
mov
incl
pop
pop
xchg
pop
js
mov
push
xchg
inc
in
push
or
inc
mov
pop
adc
stos
pusha
xor
sbb
adc
stos
stos
pop
xchg
mov
pop
or
nop
jno
adc
inc
inc
xchg
iret
inc
inc
je
outsl
cmpsl
add
je
mov
insb
mov
mov
sub
add
loope
in
test
orb
fmulp
push
pop
pushf
sub
or
or
mov
mov
mov
ss
xor
sbbb
rolb
sbb
sbb
ret
leave
and
lods
xorb
mov
push
mov
aam
push
rorb
and
cld
lds
loope
mov
lcall
push
mov
add
ljmp
mov
clc
adc
cmp
pop
and
inc
xchg
stos
adc
push
jg
daa
and
and
and
dec
inc
rolb
adc
testb
mov
jle
adc
test
fsubs
adc
addr16
sub
loope
sbb
out
inc
add
jae
jno
xor
addb
sbb
mov
pop
or
inc
leave
jp
ret
cmp
xor
test
inc
test
adc
das
push
mov
sti
leave
test
pushf
adc
adc
inc
sarl
jae
clc
and
sbb
push
in
sub
pop
dec
xor
xor
jmp
jbe
popf
cmpsl
jl
xchg
or
imulb
or
mov
cmp
dec
sbb
movsb
add
cmp
xchg
add
cmp
loopne
mov
add
icebp
add
ret
mov
movsb
mov
push
inc
xchg
xchg
mov
cmp
loopne
enter
int
and
out
dec
lea
add
or
popf
icebp
push
add
lret
and
mov
adc
mov
in
mov
or
leave
sti
sarb
icebp
pushf
mov
imul
je
in
push
fs
adc
adc
jb
mov
adc
or
int3
rorl
sub
dec
and
add
mov
mov
sbb
arpl
push
cltd
nop
xchg
jns
and
dec
cs
sbb
ja
push
aaa
shll
cmp
test
lock
push
es
adc
ret
scas
or
pushf
or
and
or
pusha
out
ret
roll
mov
or
or
stos
or
mov
mov
push
push
movsb
pop
pop
arpl
jnp
inc
mov
ret
or
mov
mov
popf
loope
push
icebp
cli
ret
cmpsb
push
scas
and
mov
sbb
sub
fcompl
cmp
dec
mov
mov
sbb
mov
pop
pop
sbb
add
popa
addb
sbb
jmp
cmp
pop
dec
or
pushf
cmp
data16
or
push
shl
test
divb
mov
and
into
sbb
push
ret
sbb
andl
lock
ret
or
or
xor
push
fcomps
movsl
enter
add
or
pop
push
jmp
test
push
lods
bnd
xchg
mov
adc
push
cmp
pop
jb
xor
cltd
ret
movsb
or
pop
adc
rolb
adcb
jmp
aad
jo
pop
or
add
add
cmp
popf
inc
xlat
push
enter
pop
scas
and
stos
xchg
stos
cltd
movsl
cs
push
adc
mov
mov
sbb
mov
scas
lock
xchg
ret
add
adc
mov
dec
insl
ss
inc
cmp
dec
sub
pushf
push
cltd
push
dec
lds
test
dec
enter
cwtl
shl
cld
push
add
push
push
fs
jb
outsl
mov
add
shrb
push
addl
dec
lret
lds
repnz
adc
lret
sub
movsb
or
mov
xorl
push
inc
in
cli
pop
lock
mov
xor
sbb
add
lret
ret
lods
pop
lret
inc
xchg
cmpsl
sbb
or
rolb
pop
mov
xchg
adc
inc
cmp
inc
push
add
xor
shll
test
inc
sub
loope
rolb
push
popl
mov
lcall
test
imul
add
push
adc
push
xor
jbe
and
mov
lock
sbb
sub
andl
hlt
shrl
fmull
or
jo
insb
popa
lock
mov
jecxz
cwtl
lret
adc
push
in
pop
ret
and
je
pusha
push
dec
sbbl
jecxz
jne
push
inc
push
sti
mov
mov
sbb
or
cmpsl
mov
adc
arpl
or
inc
mov
test
adc
ficoml
ficomps
iret
dec
loopne
adc
inc
and
lret
xchg
imul
push
or
inc
mov
adc
push
add
sbb
adc
and
sub
mov
pop
jnp
sbb
pop
or
push
mov
add
cli
pop
xchg
outsb
mov
out
ss
in
mov
sbb
mov
and
loope
jl
cmp
sbb
imul
shl
add
jl
test
inc
in
in
or
test
jo
imul
mov
leave
scas
jp
and
mov
pop
cmpsb
push
sub
enter
dec
mov
in
sbb
test
cmc
mov
mov
sbb
loope
and
push
xor
add
roll
add
stos
inc
daa
jb
aas
sub
outsl
adc
pushf
cwtl
shlb
or
das
pmuludq
lret
dec
and
mov
xchg
adc
jmp
push
int
loopne
ljmp
inc
scas
idivl
and
je
inc
stc
jno
push
fwait
xor
fimull
xorl
repnz
insb
add
cltd
push
add
mov
xchg
shll
xor
pop
push
dec
push
shll
cmpsb
push
clc
or
cmp
push
test
nop
repnz
add
ret
andb
loopne
xor
cmp
dec
add
adc
lock
xor
xchg
bound
call
shlb
int
push
mov
cwtl
dec
clc
add
mov
lret
out
adc
fmuls
sbb
and
push
sbb
notb
or
add
or
adc
ret
pop
add
mov
pop
jae
inc
add
mov
push
xchg
loopne
rcll
lret
sub
enter
sarl
push
rcl
inc
stos
push
rolb
insl
add
hlt
adc
stos
inc
stos
cs
push
ljmp
fcmovnb
sbb
rolb
push
pop
mov
pop
into
mov
pop
add
xchg
add
jmp
sub
fsubrp
outsl
shrl
iret
jmp
cmp
mov
or
push
or
sbb
jmp
sub
filds
add
push
in
aam
xchg
add
rorb
mov
add
cmpl
rclb
les
test
add
pop
scas
es
aas
idivb
push
push
cmp
scas
pop
icebp
test
ret
adc
adc
subb
enter
dec
aad
or
and
and
fcomp
lret
adc
jle
and
repnz
jmp
push
and
cli
and
bound
xor
and
jb
rolb
inc
mov
jb
aad
or
dec
mov
add
or
or
js
push
call
fimull
stos
ljmp
and
or
jb
cwtl
call
and
pop
lea
adc
shl
in
into
push
loope
cli
testl
ss
pusha
das
adc
push
jl
loop
test
idivb
xchg
xchg
mov
js
mov
addr16
mov
push
mov
je
loopne
push
or
orl
cltd
or
push
or
in
fstpt
xor
pusha
aam
ja
stos
test
jbe
lods
fimuls
push
and
lret
je
lock
inc
push
daa
cmp
rclb
inc
rclb
xchg
decl
adc
push
xchg
jnp
inc
inc
subl
mov
es
push
pusha
push
inc
andb
add
into
repz
xorb
jne
ljmp
shll
adc
ljmp
jo
adc
hlt
adc
adc
pop
les
jne
and
mov
push
xor
cli
adc
mov
or
add
leave
ret
or
jb
fs
mov
xor
jmp
xchg
xorps
out
inc
stos
sahf
sbb
int
aas
call
cli
sbb
push
xor
cmpsb
dec
jns
pusha
sub
or
add
xchg
xchg
int3
lods
js
cs
daa
mov
faddl
cmp
out
nop
fimull
and
fwait
movsb
mov
mov
lcall
push
add
icebp
or
scas
shl
mov
push
stc
imul
and
add
or
mov
lret
inc
ret
mov
sbb
adc
addb
push
and
cmpb
or
addl
mov
xor
mov
adc
aam
test
jno
jmp
mov
pop
mov
call
daa
add
push
shlb
ds
ljmp
pop
cltd
push
ds
sbb
push
mov
movl
daa
stos
inc
or
enter
stc
enter
mov
add
add
push
paddq
mov
test
or
rcrl
xor
clc
sbb
sbb
inc
xchg
pop
xor
shll
pop
jl
mov
pop
inc
test
or
or
inc
mov
int
fcomi
xchg
adc
bts
sbb
mov
mov
enter
lds
and
and
ss
popa
ret
push
sbb
cli
call
daa
loopne
dec
jno
ljmp
test
and
hlt
jp
sbb
xor
sbb
test
push
sarl
and
mov
and
push
gs
cmp
cld
xchg
cmpsb
and
outsb
jecxz
mov
jg
adc
in
mov
adc
cmp
das
add
fisttpl
or
fdivs
pusha
bound
mov
and
sub
rcll
cmp
and
mov
push
xchg
cmp
dec
in
jge
addb
mov
dec
push
or
add
push
stos
jae
sbb
movsb
mov
mov
fsub
repnz
ret
mov
sbb
sub
push
dec
lret
push
icebp
or
adc
push
xchg
jo
pop
and
add
fmull
mov
xchg
sub
xor
or
adc
gs
push
xor
xor
xor
imul
out
jne
adc
aaa
and
or
in
int
loope
out
inc
test
scas
mov
mov
sbb
add
leave
sub
insl
pop
push
mov
jne
les
add
shll
loope
cltd
cmc
cmp
call
repnz
mov
adc
in
scas
test
leave
add
mov
push
cmc
repnz
jge
icebp
add
push
cmp
rcrl
pusha
jb
call
xor
jp
aad
mov
sbb
and
mov
mov
ljmp
sar
add
xor
les
es
inc
inc
mov
test
sbb
shll
push
lret
add
filds
mov
and
adc
mov
push
fs
xchg
rcrl
pop
rclb
mov
push
pop
sar
or
adc
std
mov
adc
mov
lds
orb
mov
add
lret
lock
and
dec
test
mov
push
stc
push
or
xor
cmc
out
and
call
mov
pop
mov
sub
push
xchg
rcll
addb
add
loope
idivl
xchg
fcomi
push
je
add
mov
pop
mov
outsl
icebp
mov
sub
pop
xchg
push
dec
push
int3
mov
es
rcl
inc
add
rcrl
inc
fwait
push
push
push
orb
aaa
ljmp
inc
ror
sarl
mov
test
aam
sahf
stos
push
cmp
pop
xlat
xor
popf
addb
fildl
add
dec
mov
jne
shrl
xor
or
mov
jl
or
shr
sbb
push
mov
cmpsl
stos
add
sub
sbb
adc
sarl
jnp
loope
xchg
dec
sbb
sub
ret
adc
test
and
scas
shll
pop
les
dec
mov
dec
icebp
sbb
ljmp
mov
xor
dec
push
mov
mov
rclb
bnd
sbb
cmp
and
push
mov
fcmovnu
sbb
mov
cmp
andl
push
inc
inc
movnti
loope
in
sub
into
int3
cld
adc
addb
sbb
jbe
sub
push
push
leave
cltd
adc
add
push
push
adc
cmp
and
push
mov
cmp
and
lds
mov
mov
pop
loopne
adc
sbb
gs
inc
aaa
leave
add
scas
mov
outsl
faddl
notb
sbb
cmp
inc
es
push
les
pop
mov
ljmp
jnp
xor
and
push
push
and
outsb
aam
cli
push
xor
or
mov
add
outsb
repz
pop
jne
sbb
lret
xchg
adc
fistl
and
scas
inc
ret
fnstenv
cwtl
sbb
dec
sub
fbstp
test
cmp
push
out
sub
jo
int
add
add
sub
sbb
sub
sbb
or
mov
sarl
nop
call
push
jne
rolb
mov
adc
mov
xor
addl
repnz
or
push
inc
xor
pop
lea
mov
test
nop
add
rcl
add
and
sahf
and
add
xlat
add
jno
xor
lods
mov
or
leave
pop
sub
adc
insb
adc
cli
add
push
push
cmc
or
cmp
add
test
pop
push
sbb
sub
aaa
ja
cld
xchg
arpl
sub
imulb
xor
cwtl
pop
push
cmp
subl
cmp
adc
bound
lds
out
pop
add
sbb
orb
mov
sbb
in
and
add
test
inc
adc
mov
fstl
sbb
js
mov
adc
je
test
es
aas
test
orb
cmpb
cmp
adc
mov
jp
pop
sbb
xchg
jbe
xchg
push
push
sub
mov
mov
sub
cmp
sti
xchg
ljmp
xlat
int
mov
dec
pop
or
mov
in
arpl
push
jo
shll
adc
and
cld
shl
or
xchg
call
subb
rcll
into
xor
sti
xor
dec
adc
sub
add
xor
aad
cltd
ror
dec
push
sub
icebp
xor
xor
enter
mov
sbb
addl
cmp
popa
jmp
adcb
mov
cmp
mov
popf
shlb
pshufw
or
xchg
aam
xor
rep
push
or
pop
adc
popa
shrl
add
inc
push
add
adc
mulb
repz
filds
pusha
mov
lret
incl
push
scas
pop
push
jl
xor
ljmp
pop
stos
mov
mov
push
sar
or
mov
fsubrs
lock
xchg
aad
add
push
xchg
sbb
xor
lock
sub
cmpsl
xchg
pusha
leave
repnz
mov
stc
lock
pop
subl
add
aad
inc
lcall
xor
incb
xlat
outsb
push
sub
test
lea
movb
push
cmp
int3
push
or
sub
jmp
adc
cmpsl
inc
or
dec
pop
pusha
push
cli
sbb
inc
into
movsl
push
inc
out
inc
nop
cmpsb
cmp
es
data16
inc
xor
rorb
sbb
stos
inc
aas
or
sub
sti
shrw
pop
pop
out
push
or
adc
je
or
inc
sbb
sub
xor
outsb
pop
adc
xchg
add
stos
vmaxpd
adc
xchg
push
sbb
adc
icebp
adc
and
les
enter
aas
test
in
add
pop
pop
inc
leave
fs
mov
dec
push
sbb
or
adc
and
sbb
inc
jnp
lret
cmpsb
push
cmp
rorl
loopne
es
cltd
or
popa
sbb
push
inc
jne
cmp
and
mov
lds
dec
push
pop
call
inc
add
fisttpl
or
jg
push
dec
or
cmp
adc
dec
in
and
cmpsl
inc
sub
pop
push
sub
mov
mov
adc
pop
test
fwait
xor
fs
icebp
mov
push
mov
inc
or
sub
pop
mov
push
aad
push
and
andb
fs
mov
pushf
adc
xchg
cmc
stos
xor
ds
pop
push
or
fstl
cmpsl
daa
insl
rcrb
xor
or
add
add
pusha
mov
aas
loop
icebp
push
or
loope
jl
push
loope
push
in
outsb
mov
jmp
lds
cmp
inc
orb
mov
jae
test
lds
aad
mov
loop
add
icebp
lods
inc
add
les
add
cmpsl
jecxz
dec
inc
inc
add
xlat
hlt
push
test
addr16
inc
cltd
mov
xchg
pop
mov
push
add
ds
les
enter
sub
mov
ljmp
idivb
rcl
add
inc
aas
push
ljmp
sarl
mov
ret
loopne
fisttpl
ja
adc
sbbb
test
add
mov
adc
jo
push
sbb
imul
dec
adc
mov
lahf
rorb
cwtl
ss
sbb
mov
rol
pushf
ror
neg
hlt
addb
and
jp
mov
mov
clc
pop
loope
dec
icebp
add
xor
mov
and
adc
or
inc
test
and
mov
dec
cmpsb
lret
scas
pop
push
ret
cmp
xor
jmp
jne
sbb
int3
push
push
lcall
add
or
push
insb
sub
movsl
jne
cmp
stos
push
push
push
xor
stos
push
pop
icebp
sub
cmp
pushf
leave
push
jo
cmpsl
push
cmp
idivb
lret
pop
lock
add
cwtl
rcrb
add
push
mov
movsl
jle
in
stos
jae
mov
pop
adc
mov
pusha
imul
movsl
add
xor
pop
dec
in
pinsrw
notb
cs
xor
cmp
mov
aad
add
xchg
mov
jo
inc
adc
repnz
bound
sbb
rcrb
arpl
inc
pop
mov
dec
and
pop
add
stos
inc
rolb
das
push
jp
stc
or
popa
pop
lods
cmpsb
mov
stc
or
xchg
jo
or
and
push
mov
enter
lock
add
mov
clc
or
sub
or
loop
test
inc
orb
in
mov
pop
cli
repnz
and
je
negb
ret
mov
mov
jg
jmp
and
and
repz
inc
aas
stos
imul
or
mov
jp
add
stos
sub
ret
dec
xchg
push
ss
pop
add
andb
mov
or
sbb
push
arpl
fsts
loopne
xchg
ret
add
dec
shlb
rcl
and
data16
xchg
clc
adc
push
push
jo
mov
call
bound
pop
add
sub
sub
mov
sbb
adc
ret
or
push
iret
orb
shrb
jmp
shrl
fs
shlb
hlt
shlb
lods
leave
movsl
sbb
nop
pushf
mov
add
jo
call
add
mov
push
and
xchg
push
insl
ret
add
push
add
rcll
adc
mov
leave
sub
pushf
not
push
stc
add
lcall
sub
and
cmp
lret
or
xchg
sub
mov
inc
xor
je
outsb
ret
repz
push
dec
mov
mov
repz
dec
lret
mov
and
pop
dec
mov
pop
arpl
dec
or
adc
repz
mov
pop
shrb
ret
sbb
stos
adc
bound
jg
test
cmp
sub
mov
mov
je
shll
mov
roll
andl
nop
sub
push
jo
sub
adc
jp
iret
cmp
mov
lock
stos
cmp
adc
lret
int3
gs
lods
call
inc
mov
lar
testl
mov
or
popf
add
loope
inc
push
adc
stc
stc
push
ret
adc
push
filds
lds
and
cmpb
mov
nop
add
sbb
lds
jp
fsubrl
and
leave
ds
data16
and
out
sub
jl
cmp
xor
push
cld
add
fs
imul
cmp
push
push
out
inc
in
push
adc
addr16
add
cmp
daa
add
or
sbb
sub
push
rcl
orb
push
fisubl
push
cmp
rcrl
xchg
add
jne
enter
add
dec
mov
call
inc
cmpsb
dec
adc
mov
sub
aad
cmp
imul
xchg
or
mov
shl
sbbb
xor
xchg
testb
pop
dec
test
push
inc
dec
test
mov
out
test
scas
add
and
adc
pop
lea
repnz
adc
pushf
ret
sbb
adc
test
loopne
in
jne
adc
xchg
rorb
scas
pusha
push
jg
lahf
out
test
and
adc
shll
push
jne
ljmp
pop
jne
push
and
add
rorl
into
lea
lahf
loope
aaa
testb
fcomi
fmuls
into
push
add
bound
sub
movsb
bound
mov
ss
cmc
and
rorb
jle
or
push
inc
xchg
or
jge
sarb
mov
mov
xor
add
cmp
mov
pop
mov
add
test
das
add
and
inc
lods
cmp
mov
rcrl
sbb
inc
add
sub
inc
lods
gs
out
inc
sti
stos
mull
shlb
pop
je
lock
mov
aad
outsb
push
mov
sub
pop
adc
inc
pushf
loop
sub
xchg
pop
mov
dec
aam
sub
mov
push
sbb
shrb
ja
les
xchg
mov
inc
adc
rol
test
mov
mov
or
sub
mov
cmp
xchg
and
adc
and
bound
push
lds
sub
pop
inc
sbb
push
push
lds
cli
or
stos
mov
ljmp
stos
cltd
pop
aam
aas
stos
mov
inc
sbb
xchg
xchg
add
sbb
and
sub
add
cmp
mov
push
outsl
push
xor
and
add
js
out
add
rcl
out
jecxz
pop
and
mov
test
adc
xlat
add
mov
and
loopne
xor
push
roll
dec
cmp
xchg
mov
call
xor
sbb
or
in
dec
jo
cmp
push
sbb
enter
xchg
jecxz
add
mov
push
movsbl
jns
fldt
cli
mov
hlt
sbbb
je
jb
dec
or
xor
dec
inc
lods
lock
das
add
loop
adc
push
mov
or
jns
push
gs
adc
cmpsb
sub
mov
xchg
adc
andb
xlat
xchg
or
add
add
dec
lods
mov
lret
enter
sub
int
xchg
cmp
xchg
add
cmp
fwait
std
inc
inc
adc
rcrb
jnp
loop
xor
cld
daa
into
inc
add
mov
and
or
fs
nop
call
add
icebp
fidivs
es
cltd
enter
sub
xchg
xchg
fnsave
jo
xchg
cmpps
insl
mov
sub
pop
xlat
into
and
and
mov
enter
subb
das
sbb
cmpb
pusha
rolb
pushf
adc
or
mov
pop
data16
adcl
adc
movsb
aad
pop
sbb
test
xchg
sbb
or
xor
mov
mov
lock
sti
jo
call
cwtl
bound
add
mulb
adc
xchg
out
add
lea
ret
ret
and
adc
scas
out
xchg
data16
sub
addb
push
jne
fistpl
adc
pop
pop
out
adc
lcall
xlat
and
xor
or
fisubrl
mov
lods
jbe
ljmp
dec
call
out
or
test
in
jae
jl
inc
arpl
xchg
add
mov
loop
mov
add
dec
mov
js
or
test
jg
push
pop
faddl
push
adc
add
inc
mov
leave
testb
insl
push
popa
jo
stos
inc
mov
imul
or
xchg
mov
add
dec
mov
js
push
push
lods
xchg
shlb
or
test
sub
sar
scas
std
sub
sub
cmpsb
mov
mov
adc
adc
pop
int
rolb
mov
adc
ljmp
aad
stos
xchg
imul
dec
inc
push
push
inc
mov
jmp
pop
jne
and
sbb
mov
stos
shlb
repnz
add
inc
mov
stos
inc
add
lds
jae
and
int
xor
pop
cmc
push
add
pop
scas
or
outsb
ret
jb
add
push
inc
icebp
add
leave
fsubrl
stos
mov
test
add
cs
pop
push
sarl
adc
testl
add
mov
fprem
orb
test
pop
cmp
adcb
add
adc
push
fwait
fwait
inc
inc
subl
add
enter
or
lret
sbb
or
scas
xor
push
and
add
clc
sbb
inc
mov
dec
daa
add
and
mov
iret
xor
xor
scas
repnz
test
aad
lods
add
inc
sarb
daa
test
and
mov
add
adc
jecxz
jo
sub
test
ret
aad
pop
imul
test
or
pop
scas
add
stos
inc
pusha
pop
in
adc
test
mov
scas
xchg
mov
push
imul
adc
lret
or
inc
pop
andl
inc
jmp
cmp
or
mov
push
pminsw
mov
and
and
shll
adc
and
mov
fidivrl
pop
in
mov
inc
das
push
and
jae
pop
push
dec
fsubs
pusha
clc
test
or
mov
cmp
add
lret
in
pop
dec
adc
mov
inc
dec
and
cwtl
mov
or
jnp
inc
sbb
or
mov
jo
ljmp
lcall
stos
xchg
and
or
and
cmpl
xor
mov
js
or
pop
les
inc
xor
mov
mov
mov
push
push
jo
inc
aas
loopne
or
mov
sbb
mov
adc
rcl
fwait
adc
jne
xor
andb
sub
int
jae
test
fildl
inc
ret
cmp
and
push
xchg
xchg
dec
pop
shrl
mov
inc
add
mov
xchg
loope
push
int3
mov
stos
nop
inc
jae
xchg
jne
iret
rol
lcall
push
incl
xor
jne
movsb
or
push
sbb
inc
lret
test
arpl
scas
sbb
jp
or
push
push
jb
jb
fisubrs
lock
mov
and
adc
push
push
cmpsl
rcrl
cmp
sbbb
push
jecxz
jae
push
inc
xchg
enter
data16
sub
and
icebp
and
sbb
push
sbb
dec
imul
pop
and
mov
adc
dec
jl
pop
loopne
jb
and
popa
or
sub
sub
mov
pop
dec
mov
xlat
mov
out
aam
add
mov
sbb
mov
cmp
and
stos
jb
push
cmp
mov
ret
dec
or
call
repz
push
pushf
mov
imul
loope
xor
push
cmc
adc
add
xor
or
orb
pusha
xor
mull
sub
pop
repnz
push
daa
jo
jb
mov
lahf
sub
push
and
xchg
cmp
pop
stos
add
negl
sbb
cmovne
push
adc
out
dec
lret
out
dec
cmp
mov
inc
xchg
loop
inc
pop
xor
inc
xor
call
add
jl
cmc
mov
or
adc
sbb
aad
push
push
jge
test
sub
pop
push
xchg
mov
testb
test
sbb
sbb
add
loope
dec
cmp
imul
les
mov
sbb
and
popf
and
dec
mov
mov
out
mov
push
sbb
xchg
sub
sbb
call
or
movsl
call
mov
xor
dec
jb
cmp
mov
fs
mov
add
mov
pop
xor
xchg
xchg
push
imul
pop
adc
mov
pushf
sub
mov
loopne
outsl
daa
call
push
and
jb
pop
add
mov
sub
push
or
pop
cmpsb
mov
pop
adc
xor
ret
notl
sbb
xchg
lods
sub
mov
repnz
xchg
shlb
jb
xlat
mov
jl
add
xadd
and
rolb
adc
or
bound
filds
mov
sbb
xor
aam
pop
aaa
repnz
add
mov
adc
push
pop
in
call
shrl
cmp
jg
or
mov
pop
out
or
jo
xor
jno
jnp
inc
lock
or
push
xchg
adc
scas
push
addr16
push
or
loop
fdivr
test
lods
shr
rcrb
rorl
call
mulb
push
dec
pop
std
mov
mov
test
sbb
ljmp
push
outsb
dec
aam
mov
faddl
ja
adc
andb
adc
mov
rolb
mov
sbb
push
pop
scas
out
jbe
fildl
out
test
sub
lret
js
pop
filds
inc
pop
jne
shlb
jl
sbb
mov
adc
push
stos
bound
testb
inc
lahf
adc
ret
xor
xor
into
xor
subb
push
add
data16
int3
add
push
mov
xchg
inc
inc
aad
sbb
mov
leave
adc
ret
mov
xchg
pop
and
lcall
push
stos
xlat
inc
and
push
shlb
sbb
adc
lret
fadds
sub
cld
or
imul
push
dec
xor
jg
add
outsl
or
fmuls
mov
push
nop
sub
xchg
mov
mov
push
int
adc
cmc
adc
aas
xor
pop
int
test
inc
sbb
push
jb
and
push
xor
mov
gs
jp
inc
push
hlt
add
sub
sub
addr16
sar
sbb
inc
pop
jo
push
sbb
outsl
push
and
test
js
mov
cmp
mov
xchg
testl
ss
adc
lcall
test
sub
aam
sbb
push
mov
mov
adc
or
sbbb
push
or
push
inc
mov
clc
or
aam
stc
push
jne
andb
mov
test
pop
lods
sub
das
pop
adc
aam
cmpsb
mov
mov
test
or
dec
jge
pop
clc
inc
adc
xchg
cld
add
and
inc
xor
stos
cmp
adc
in
adcb
inc
adc
shl
inc
dec
hlt
and
pop
add
lea
pop
dec
shll
mov
ret
loopne
pop
jo
jl
call
mov
inc
mov
test
fcomps
clc
and
sbb
sbb
sub
ljmp
mov
jns
or
or
rol
cmp
add
mov
pop
mov
add
cmp
and
je
xor
fcmovnb
push
cmp
inc
or
add
push
fbstp
add
mov
shlb
pop
sbb
loopne
lods
leave
push
incb
hlt
or
pop
push
loopne
pop
adcb
dec
push
push
or
cmp
loopne
dec
adc
dec
adc
rcrb
pushf
and
ret
fcmovb
inc
out
aaa
push
push
push
mov
cmp
or
stmxcsr
or
cmpsl
push
push
movsb
movsb
add
or
mov
mov
testb
jmp
add
sbb
inc
mov
xor
sub
jge
dec
inc
pop
xor
repnz
push
xor
sub
sub
fisttpl
ret
or
movsb
roll
loopne
pop
fstps
mov
or
inc
je
jg
stos
outsb
cld
and
push
cwtl
cmp
mov
insb
rolb
movsl
jns
or
cmp
inc
rolb
pop
cmp
push
mov
xor
scas
jmp
in
mov
hlt
adc
ret
push
outsl
aam
aam
add
and
ret
inc
mov
scas
mov
lcall
jns
enter
mov
rorl
sbb
push
call
sbbl
push
imul
mov
or
mov
jbe
out
bound
in
or
js
xchg
mov
push
xor
mov
mov
insb
or
inc
jo
enter
rol
adcl
loopne
sbb
and
inc
inc
outsb
or
sbb
call
cmp
xchg
rcll
fdivl
jno
jbe
das
xor
je
imul
rcrb
ja
sbb
lcall
push
jae
add
pusha
push
gs
add
sbb
push
mov
orl
mov
mov
adc
pop
shrb
jbe
fmull
mov
js
mov
adc
mov
lcall
movsb
lret
cmp
adc
dec
lret
scas
loopne
add
mov
jbe
rclb
addr16
outsb
cli
or
xchg
shl
mov
add
pusha
fadd
repz
les
call
test
andl
sbb
jnp
add
sahf
adc
shrl
ret
and
iret
imul
lret
rcll
jb
daa
mov
or
int
push
and
jb
mov
mov
jb
icebp
jbe
lret
pop
adc
fcoml
bound
adc
sbbl
pop
cli
push
push
mov
mov
mov
dec
hlt
inc
inc
adc
dec
push
inc
mov
sub
and
aam
cs
jmp
pop
mov
add
mov
movsb
lods
out
iret
pop
push
stos
cmp
push
mov
jb
test
and
aam
or
shrb
add
cwtl
inc
rcl
pop
jle
jne
inc
xchg
arpl
ret
dec
mov
jp
xor
add
or
sarb
jmp
mov
mov
add
cli
sarb
lret
push
les
xor
add
push
ss
mov
je
leave
or
ret
roll
or
stos
es
mov
mov
xor
lock
jbe
xchg
xchg
or
pop
enter
sti
int
or
push
inc
rcrl
cmp
lret
mov
notl
jp
add
aam
pop
imul
lret
pop
lods
mov
dec
xchg
mov
add
inc
mov
sbb
push
rolb
push
fwait
or
fbld
jg
shl
lea
and
add
sub
std
mov
mov
add
stc
add
and
sbb
inc
adc
mov
loopne
or
dec
xor
shlb
jbe
jmp
xchg
mov
rclb
test
leave
cmp
clc
dec
insb
adc
popa
loop
pop
mov
mov
dec
xchg
lret
dec
pop
push
popa
call
insb
mov
pop
jo
in
sbb
and
add
mov
loope
sub
and
test
xchg
orb
rorl
cmp
repz
sub
rol
negb
js
movsl
push
popf
cmp
sahf
mov
mov
shl
adc
push
call
addl
push
sub
imul
inc
es
sbb
dec
sahf
clc
or
jno
sar
pop
pop
adc
adc
adcb
add
pop
cli
xor
cmpsb
sub
mov
xor
cld
nop
cmp
add
loope
cmp
in
or
mov
movsb
call
daa
sbb
or
dec
inc
push
dec
roll
aad
daa
cltd
jb
jno
mov
add
xor
xlat
pop
cmp
or
inc
fisubs
shlb
mov
jl
inc
mov
jnp
push
inc
les
pop
add
cmp
adc
insb
add
xchg
push
mov
loopne
push
aad
push
mov
inc
push
pop
aad
mov
inc
add
adc
aad
add
fbstp
mov
mov
roll
rclb
xor
add
xchg
push
pop
dec
jo
or
cs
cmp
or
xchg
inc
pop
add
es
bound
add
push
add
mov
xor
push
mov
into
loope
je
adc
inc
popf
or
decl
add
adc
rcl
mov
adc
sbb
imull
ret
fistps
xor
pusha
decb
outsb
cmp
inc
add
mov
adc
ljmp
mov
push
add
shll
pushf
push
add
sub
cltd
sub
xorb
add
shrl
mov
pop
sbb
add
push
inc
roll
or
scas
enter
jge
adc
loopne
int
xlat
push
loopne
pop
scas
push
add
cwtl
mov
jnp
shlb
adc
pop
and
pop
ljmp
pop
pop
pop
scas
or
add
test
jmp
andl
cmp
lcall
add
mov
sbb
adc
push
and
add
push
add
lcall
icebp
dec
mov
xor
sbb
sub
push
cmp
and
jecxz
or
shl
pop
pop
roll
xchg
adc
push
inc
mov
or
jo
or
xchg
stos
mov
adc
xchg
push
outsl
adc
jge
mov
sbb
movsb
js
mov
sub
jmp
jno
test
rolb
loop
rcrb
xchg
addl
arpl
and
outsl
arpl
pop
sbb
adc
js
pushf
rcrb
movb
adc
test
or
push
push
test
scas
rclb
fisubl
or
push
ftst
addb
data16
test
sub
push
sbb
xor
mov
test
xchg
or
sub
lcall
sub
mov
call
and
push
ret
insb
pop
sbb
or
inc
mov
cmpb
ljmp
rorb
mov
push
sbbl
ret
dec
cltd
fidivl
shlb
inc
jo
inc
pop
mov
jo
iret
adc
test
lret
sub
nop
arpl
mov
inc
popa
mov
data16
sub
test
icebp
push
sbb
push
adc
call
add
inc
stos
add
orb
das
mov
cmp
clc
mov
sbb
pop
clc
nop
add
aam
lock
rcll
push
les
sti
xchg
mov
xchg
mov
ror
mov
push
push
jl
jle
sbb
in
pop
pop
enter
pop
sbb
fs
movb
aad
cld
loopne
dec
inc
sub
and
mov
mov
sub
clc
loopne
movsb
movl
push
cli
mov
mov
xor
repnz
xor
arpl
or
push
xor
fsts
or
add
rorl
push
and
lret
push
inc
xchg
xchg
inc
rolb
adc
xchg
sbb
sbb
or
lock
or
jl
sbb
loop
loope
ret
push
inc
cmc
add
rorl
adc
xor
stos
je
cmc
loop
jl
into
pop
shrl
mov
add
cmc
xchg
je
cmp
outsl
sbb
sbb
or
or
or
jne
cmp
push
leave
inc
ret
je
adc
pusha
push
add
sbb
call
cmc
push
in
js
ret
push
je
jp
mov
pop
das
add
xor
leave
insl
and
pop
ds
icebp
dec
aas
sarl
push
xor
add
mov
shr
pop
push
push
push
mov
call
rorb
adc
and
xchg
cmp
js
shl
arpl
mov
jmp
ljmp
test
jne
xor
cmp
add
in
jbe
xor
mov
or
mov
cmp
insl
mov
push
inc
mov
push
decl
sub
lea
push
sub
pushf
imulb
mov
je
mov
aam
add
push
mov
mov
and
mov
fstp
ljmp
dec
cwtl
push
push
adc
sbbb
mov
or
cwtl
push
sahf
cmpl
and
idiv
and
je
add
pop
push
das
and
jle
or
les
je
lcall
adc
jo
push
mov
inc
sahf
add
add
ret
cmc
add
subb
outsb
fists
push
adc
cmp
jne
sbb
dec
sbb
sub
mov
mov
out
out
sti
call
jne
mov
and
fdivr
or
lea
xchg
jb
push
pushf
jns
mov
and
pop
cltd
sbb
jns
pop
rclb
and
out
pop
je
or
ret
subl
aam
call
and
ja
mov
enter
movb
lds
arpl
jo
push
or
in
jbe
or
sbb
mov
in
or
pop
or
pop
or
pop
and
add
pop
popa
jae
mov
add
loop
dec
push
int
adc
dec
or
or
cld
push
fiadds
cmc
pusha
aam
push
xchg
daa
lea
movsb
add
into
enter
cmp
and
mov
fistpll
sarl
jno
pop
jle
cmp
ret
fdivrp
or
inc
pop
orl
nop
jno
out
xchg
test
cmp
push
stc
cs
push
cmp
jbe
push
fbstp
mov
pop
jmp
call
std
fildll
or
jmp
xor
leave
adc
or
mov
push
popa
mov
xor
je
lea
add
sbbl
cmp
jne
out
adc
jae
mov
pop
jnp
rcrb
imul
sub
std
call
cmp
cmp
jne
mov
inc
pop
je
test
std
or
mov
das
and
inc
jmp
cmpb
fdivrp
mov
or
jbe
inc
or
ja
xor
out
mov
pop
add
jmp
fstpt
sbb
pop
sub
mov
lock
adc
sub
stos
add
jge
icebp
cli
call
add
mov
jg
shl
xor
sbb
pop
std
cmp
outsb
jg
cmp
cmp
aas
dec
and
cmp
jecxz
or
push
cs
pushl
js
pop
in
mov
pop
add
aaa
jne
pop
incl
or
add
lahf
in
scas
insb
mov
push
mov
sahf
inc
clc
and
ja
dec
sbb
jne
cmp
dec
mov
mov
push
add
push
push
push
mov
mov
mov
xchg
fmuls
sarb
das
jbe
pop
sbb
and
push
push
xor
insl
in
adc
pop
les
cwtl
dec
sbb
es
xchg
ret
jecxz
or
add
pop
sub
aaa
add
mov
cmp
cld
mov
inc
cmp
sub
addb
pop
js
loope
je
add
mov
inc
inc
or
jle
enter
or
andb
inc
inc
sbb
pop
fs
jmp
push
add
testb
sbb
je
or
sbb
outsl
or
jne
jne
dec
mov
callw
gs
dec
add
inc
sub
pop
mov
pusha
enterw
adc
add
sar
std
pop
loope
test
pop
jne
inc
inc
jmp
xchg
sub
ret
add
pop
outsb
xor
inc
cmp
or
jecxz
adc
jecxz
or
mov
sbb
ret
fstpl
filds
stos
xchg
push
inc
mov
scas
mov
mov
jne
andb
stc
lock
add
sub
loop
pop
fwait
sbb
dec
sbb
inc
add
test
sbb
xor
push
pop
sub
lahf
daa
mov
pop
sub
sarl
and
sub
xor
rcr
shlb
add
xor
jecxz
mov
jmp
pop
inc
ror
faddl
sti
pop
ljmp
pop
push
xor
lret
sbbb
or
sub
es
inc
inc
or
in
sbb
push
ds
push
inc
sar
push
pop
add
xlat
jnp
rclb
xor
adc
je
sbb
int
jo
push
shll
pop
push
or
daa
pop
or
and
cmp
ret
jmp
sbb
dec
movsl
notb
je
pusha
mov
je
inc
cmp
movsb
in
add
sub
inc
push
into
pusha
movsb
shrb
mov
sbb
lds
cmp
ss
cmp
pop
dec
push
mov
sbb
jno
pop
lss
and
outsb
lock
outsl
add
jle
push
mov
inc
add
insb
icebp
mov
jmp
and
sbb
sarl
in
in
xchg
cs
cmp
mov
add
popa
ficoml
clc
jl
pop
addr16
jnp
push
mov
cmp
out
outsb
int
jae
mov
pusha
mov
pusha
inc
mov
add
jl
jmp
mov
adc
jle
lock
push
and
cmp
in
pop
lcall
push
and
mov
stc
mov
mov
sar
and
shll
add
or
fwait
inc
add
inc
cmp
jl
pusha
pop
sub
cmp
decl
ss
das
or
push
enter
jmp
ret
dec
neg
sbb
jbe
popa
cmc
or
jp
push
jo
ret
or
in
orb
pop
mov
jne
or
add
subb
jl
dec
ret
jge
jo
pop
test
and
adc
imul
mov
je
and
adc
das
add
sub
and
mov
negb
pop
adc
pushl
push
adc
mov
add
push
ficompl
adc
pop
fwait
popf
mov
stos
les
or
shll
mov
sbb
es
dec
ss
adc
outsl
pop
pop
adc
add
out
push
sbb
stc
xor
dec
data16
punpcklwd
cmp
bound
insb
xor
nop
ret
int3
int3
mov
push
leave
xor
insb
das
fisttpl
pop
sub
testl
call
or
jge
dec
adc
adc
push
push
inc
je
data16
sbb
adc
fwait
cs
sub
jbe
mov
jecxz
rorb
jl
jne
adc
sti
mov
sub
mov
and
call
ret
popl
inc
orl
jns
push
push
or
push
inc
ret
out
insl
xchg
inc
or
fdivs
popa
dec
add
ficompl
adc
ret
push
inc
xor
jo
hlt
pop
inc
xor
mov
or
insb
lds
testl
push
dec
fwait
adc
popa
stc
ds
push
fbld
jnp
shll
mov
outsb
lods
shrl
je
push
push
lea
or
mov
or
push
cmp
lods
xchg
or
outsb
sti
sub
mov
push
or
arpl
sbb
mov
jmp
leave
pop
mov
pop
push
sti
or
cmp
push
add
dec
jbe
push
and
mov
xor
pusha
cmp
jl
movsl
and
orl
pop
push
imul
adc
test
add
mov
or
pop
call
mov
icebp
je
shl
cmp
push
es
insb
cwtl
call
jo
adc
test
jne
test
or
std
test
cwtl
lods
cmp
xor
pop
addr16
hlt
push
push
push
in
add
test
push
jno
pop
inc
inc
pop
gs
je
cmp
sub
push
push
clc
or
push
and
inc
loopne
cltd
cmp
in
push
pusha
inc
adc
push
or
sbb
shll
push
adc
and
out
aaa
xlat
pop
sub
adc
imul
in
data16
push
cmpsl
jg
hlt
and
jl
addr16
push
sbb
push
sbb
pop
in
mov
cmp
push
subl
xchg
jne
push
push
mov
clc
call
pop
arpl
add
out
outsb
sbbb
push
sbb
les
sbb
pusha
call
mov
inc
addb
mov
pop
sub
adc
loopne
sbb
jno
movzwl
hlt
arpl
add
inc
sbb
xchg
out
test
iret
cmp
cmp
mov
add
sub
push
mov
pushl
xchg
pop
bound
sbb
inc
arpl
xor
mov
pop
pop
insl
mov
and
cmc
andl
in
jbe
xchg
loopne
jne
rep
stos
mov
outsb
sub
cmpb
mov
dec
out
mov
cmp
jbe
inc
imulb
mov
xchg
and
and
out
jmp
fildll
pop
lea
add
lea
xchg
pop
cmp
lret
je
mov
mov
out
movsl
pop
insl
add
xchg
ja
adc
mov
out
jo
nop
inc
inc
adc
inc
inc
cmpb
enter
push
push
ret
sbb
fnstenv
fisubs
addr16
lods
push
mov
push
adc
shlb
inc
xlat
out
movsl
jmp
inc
jns
jno
gs
hlt
pop
mov
jb
push
cmp
in
jo
xor
jmp
or
lock
dec
stos
add
push
jo
pusha
ljmp
add
insb
and
jecxz
es
or
pop
jb
inc
mov
insl
testl
xchg
std
nop
cld
cmp
lods
mov
dec
sub
mov
push
mov
jbe
pop
cmp
inc
add
cmp
or
push
jno
bound
pusha
rcrb
int3
in
push
iret
ljmp
lea
int
dec
dec
clc
mov
ljmp
mov
std
pop
mov
jb
mov
movb
mov
push
aad
push
repz
or
mov
mov
mov
testl
shr
test
and
rep
inc
mov
clc
testb
pushl
inc
cli
lds
xlat
mov
cmp
mov
and
sbb
push
push
push
xor
cmp
jo
fs
dec
push
daa
cld
ja
pop
jb
lret
jb
mov
test
sti
sbb
mov
add
mov
in
inc
loopne
sbb
je
and
mov
mov
push
test
add
inc
jb
popa
lea
enter
mov
dec
pop
sbb
ja
and
or
and
dec
dec
mov
mov
inc
lea
les
inc
dec
psubsb
dec
cmp
das
push
lods
testl
or
push
imul
clc
scas
push
insl
int3
add
pop
jmp
lea
sub
imul
add
jg
lock
inc
lret
cmp
jne
mov
mov
jne
lds
lock
lret
mov
xorl
in
sbb
pop
lods
push
add
int
pop
mov
or
std
jmp
cld
pusha
or
cmpsb
lods
rcrl
inc
loop
mov
inc
bound
sub
pmaxsw
add
outsb
outsb
mov
mov
cwtl
imul
stc
daa
test
cmp
cmp
cmp
inc
or
or
adc
je
dec
xchg
jl
loopne
and
add
pop
sub
inc
jne
int3
out
adc
cmp
arpl
in
xor
push
ja
jge
and
lea
xor
inc
xor
add
pop
ret
out
jge
pop
jle
or
popa
int3
outsl
outsb
adc
inc
inc
test
daa
int
and
inc
lds
rol
std
cld
insl
pop
mov
aad
mov
test
lret
jecxz
sbb
jbe
clc
jb
xor
test
loop
outsl
stos
jb
rep
jmp
lds
inc
in
jmp
mov
mov
enter
xor
lea
nop
jg
jne
pop
sub
nop
add
add
rorl
mov
adc
mov
add
leave
fdivs
int3
lea
addr16
xchg
sub
aaa
pop
xchg
cmpsb
dec
inc
and
mov
mov
jae
add
subb
in
in
aam
shrl
loopne
mov
pmulhuw
call
call
hlt
xor
xor
clc
clc
cld
jno
push
sarl
push
add
outsl
imul
pop
pop
lds
pusha
or
adc
or
xor
or
jl
cld
jg
or
fninit
cld
ja
mov
fldenv
pusha
xchg
xchg
inc
jo
stc
sub
mov
and
call
mov
outsl
add
dec
push
mov
add
add
mov
add
mov
mov
stos
sub
icebp
scas
inc
pop
test
dec
shll
add
test
cmpsl
xchg
sbb
shll
adc
dec
shll
or
pop
add
roll
enter
mov
dec
jo
xchg
sbbl
push
fisttps
push
pop
or
imul
ja
jbe
movsb
or
ja
jg
pop
or
push
or
sub
or
sbb
push
cwtl
and
cmc
mov
sbb
push
sysexit
add
sub
jmp
jmp
ret
jne
cmpsb
pop
cmp
mov
addr16
insb
lods
add
pop
jl
sbb
lods
fiadds
mov
decb
sub
mov
cwtl
addr16
je
stos
pop
pop
push
or
or
mov
adc
jnp
imul
rolb
inc
subb
pushl
pop
fists
pop
push
cld
push
shr
jp
imul
adc
mov
mov
inc
cltd
outsl
mov
dec
dec
or
test
or
jne
or
testb
pop
or
inc
in
dec
roll
cmp
movsb
jp
sub
dec
mov
jae
mov
sub
out
lea
xlat
and
decb
sub
and
jmp
add
push
into
add
sub
and
fdivl
push
jns
push
adc
adc
icebp
data16
add
or
sar
outsb
imul
aas
jnp
pop
das
mov
inc
mov
bound
bound
mov
clc
dec
pop
cmp
cmpsb
jbe
mov
scas
xchg
repz
sti
inc
ds
fldt
lea
cli
mov
push
mov
push
mov
sub
in
push
adc
mov
shlb
xchg
dec
push
sub
fnstenv
or
adc
pop
lea
loope
jne
cmp
inc
mov
lock
pop
testl
fxch
or
add
mov
dec
paddd
mov
jae
scas
mov
mov
mov
jmp
or
or
lea
sbb
sub
lea
sbb
pop
add
popf
test
or
mov
sbb
pop
mov
clc
adc
or
rorl
or
int
sub
xor
inc
push
push
call
pop
pop
in
inc
mov
sbb
push
or
cmp
jnp
inc
adc
paddd
or
sbb
je
xchg
jns
adc
lods
fnsave
js
jne
sub
jo
pop
adc
push
push
pop
or
stc
hlt
mov
repnz
xchg
lret
hlt
fists
enter
adc
push
lea
push
push
out
scas
leave
hlt
push
test
mov
xor
add
test
inc
mov
push
or
movsb
sub
push
adc
sub
dec
pop
jbe
mov
shl
pop
push
xor
push
xchg
jecxz
fsubrl
shr
sub
mov
jmp
es
xor
shr
push
or
mov
ret
fdivrs
jae
mov
cmp
sub
pop
std
and
or
jne
clc
adc
lcall
out
pop
jne
mov
cmp
es
insl
jmp
sbb
and
push
jnp
cmp
xlat
pop
or
aaa
jmp
es
sbb
out
pop
ss
jnp
test
fcompl
or
pop
mov
jge
ja
pop
shr
adc
adc
push
cli
dec
sub
xchg
mov
nop
inc
mov
mov
loopne
push
mov
adc
or
inc
or
mov
jne
xchg
adc
test
or
in
mov
and
or
sub
hlt
xlat
je
mov
ffree
popa
pop
dec
jbe
push
into
jne
data16
mov
pop
test
jl
shl
inc
jmp
mov
push
stc
inc
or
icebp
jnp
incb
cwtl
aas
out
mov
aam
or
dec
and
and
adc
fistl
jl
pushf
shl
in
and
mov
hlt
sub
jne
loopne
and
jmp
lds
adcl
adc
sbb
ss
sub
xchg
jae
test
or
jp
xor
cmpsb
xlat
clc
add
test
test
movsl
and
fs
fwait
jnp
je
jge
les
bound
mov
mov
cmp
pusha
mov
scas
jmp
sub
inc
mov
jnp
mov
lods
push
mov
out
or
push
je
mov
mov
or
outsb
cld
mov
jne
push
fcomi
add
xor
lahf
mov
and
jne
pop
lods
popf
sbb
jne
cmp
adc
push
pop
hlt
dec
add
mov
shlb
pop
mov
push
inc
loope
shlb
je
clc
xor
push
pushw
or
lods
test
mov
inc
adc
xor
add
sbb
or
pushl
fs
pop
imul
jl
and
mov
incl
sub
inc
cs
shr
push
jno
jbe
mov
fcmovnb
dec
loopne
ret
bound
aaa
imul
subb
pop
add
or
inc
in
lods
mov
shl
jns
mov
addb
outsl
shrl
shll
aaa
rorb
cli
ja
inc
orl
inc
ja
repnz
ja
mov
push
movl
call
sti
fsubrl
dec
add
sub
adc
push
sub
aad
stos
imul
dec
or
mov
add
clc
xchg
mov
mov
or
inc
mov
mov
enter
clc
push
ja
mov
cmpsb
or
mov
pop
add
pop
sahf
push
adc
icebp
cmp
and
movsb
addr16
dec
inc
mov
popa
fs
cmpsb
xor
je
adc
mov
mov
insb
mov
mov
cmp
add
pop
sbbb
jae
jbe
mov
ror
add
push
xchg
jp
push
mov
jne
sbb
aad
imull
push
and
jno
mov
outsl
jmp
inc
inc
mov
add
pusha
je
adc
pop
jne
sub
sbb
je
and
sub
sub
ret
adc
dec
pop
je
cmp
cmp
sbb
cli
testb
arpl
and
scas
lcall
lret
jb
sub
or
shll
jmp
and
insl
sub
xor
push
icebp
push
or
insb
idivl
jne
mov
test
pop
push
inc
sbb
pop
adc
inc
push
push
mov
fisttpll
pop
push
xor
in
popa
cmp
jmp
sbb
cmp
movsl
and
mov
addr16
pop
adc
adc
mov
jo
pop
pop
push
arpl
call
push
loope
data16
sbb
pop
ds
lods
cmp
and
fistpl
rol
inc
and
mov
and
test
pop
andb
or
or
mov
xlat
cs
loope
push
fiaddl
sbb
and
inc
loop
inc
jne
les
adc
mov
adc
mov
push
dec
fsubl
push
imul
in
sbb
inc
jbe
dec
divl
inc
or
or
mov
sbb
mov
aad
push
imul
fidivl
dec
rorb
sub
addr16
inc
adc
repnz
lret
fmull
dec
xor
pop
mov
out
pop
neg
je
push
fs
je
mov
mov
in
jne
add
push
mov
push
mov
aad
mov
adc
scas
jno
add
xchg
fimuls
dec
or
sub
es
dec
xchg
repz
insb
outsb
mov
sub
add
push
es
pop
sbb
lods
js
lea
push
push
pop
push
add
inc
push
movsl
mov
mov
sbb
push
mov
sti
mov
xchg
pop
mov
jbe
jl
sbb
add
xor
xor
xchg
pop
sbb
push
sub
and
pop
loopne
je
or
clc
jl
mov
inc
xor
int3
sub
stc
adc
jmp
sbb
imulb
dec
loopne
pop
sbb
inc
push
xlat
xchg
lock
loope
jmp
cmc
int3
mov
rorl
mov
lahf
sub
add
arpl
mov
je
sbb
loopne
pop
stc
jne
sub
inc
sub
test
push
shl
roll
lret
pop
and
rep
cmp
and
jbe
gs
data16
or
add
ds
ds
ds
nop
pop
test
scas
lret
add
add
iret
cmp
repnz
call
pop
or
push
filds
int3
cmpsb
imul
inc
mov
jae
lock
add
repnz
add
xor
in
adc
mov
adcb
adc
inc
subb
or
pop
dec
shll
xor
cmp
dec
push
and
pop
fs
shll
adc
add
adcb
test
iret
orb
nop
aas
push
cmp
pop
sub
add
jae
mov
les
loope
jnp
mov
notb
mov
sbb
sarb
js
hlt
lock
sbb
loopne
in
sbb
sbb
or
aam
inc
xchg
sbb
pop
ror
add
push
push
pop
adc
outsb
je
insl
gs
in
inc
std
and
jb
jb
or
dec
push
push
adc
cmp
push
add
dec
inc
add
inc
outsl
mov
lods
adc
push
xor
cmp
sub
insb
sti
imul
das
je
and
imul
push
iret
aaa
daa
aaa
outsb
outsl
je
add
addr16
divb
popa
arpl
data16
outsl
ja
cmp
and
aaa
ss
fs
jo
jb
jbe
jb
jne
jle
imul
movsl
arpl
and
insb
sub
enter
pop
sub
mov
pop
fistpl
push
fsub
pop
fstp
pop
jbe
cmp
outsl
jo
pop
xor
dec
push
insb
fisttpl
fs
sub
or
outsb
lods
inc
and
gs
xchg
sbb
aaa
insl
jne
lods
je
ret
insl
mov
arpl
mov
fs
fistps
outsb
lods
add
jo
addr16
insl
pop
inc
popa
imul
insl
ss
xor
dec
adc
and
sub
repz
jne
jae
xor
fdivs
outsb
outsb
subb
cmp
fs
dec
sub
or
adc
jae
inc
sub
and
mov
imul
sub
sbb
push
and
push
aam
mov
xchg
lods
ret
add
int
sub
insb
ja
sbb
je
popa
xor
add
push
scas
jne
adc
ljmp
cmp
fs
jae
addr16
outsl
js
add
jae
xor
cs
jmp
jne
cmp
orb
xor
or
cmp
out
and
imul
cmp
add
jns
stc
notl
or
insw
imul
pop
mov
movsl
add
add
xor
xor
add
and
xor
je
add
pop
js
or
pop
xchg
shll
adc
xchg
jg
repnz
add
or
in
inc
or
or
adc
adc
adc
sbb
repnz
call
sbb
daa
dec
sahf
push
js
jns
jp
in
in
and
sbb
or
addr16
nop
insl
mov
xor
dec
ds
xchg
add
add
in
mov
pusha
cmpb
cmpsb
fistpll
jle
mov
cld
inc
jle
cld
test
push
popa
ffreep
mov
cmp
mov
mov
inc
sub
ljmp
pop
iret
mov
in
call
fucom
jle
push
add
pop
pop
fisubrl
xor
out
push
rcr
fsubp
stc
cmp
jle
cmp
and
add
add
xor
xchg
add
and
xor
test
orb
add
cmp
jae
and
add
adc
mov
push
add
add
popa
jo
insb
insb
outsl
arpl
jg
sub
dec
outsl
fs
gs
popa
outsb
fs
inc
adc
popa
xor
outsb
outsw
pop
in
out
adc
insl
insl
pop
dec
imul
add
or
aas
or
aad
aad
andl
dec
add
or
pop
adc
jne
jb
outsb
and
outsb
push
inc
inc
imul
adc
popa
insl
imul
inc
mov
xchg
add
cltd
jb
addr16
shlb
fs
bound
outsl
dec
lret
pop
inc
inc
jns
pop
sub
jmp
fcoms
inc
push
pop
psubusw
mov
clc
jne
adc
mov
mov
mov
loope
out
ss
add
fs
insb
jae
push
popa
insb
jne
xor
mov
or
push
popf
jo
mov
jle
xor
sbb
fwait
mov
sbb
fwait
sub
ds
je
cmp
loop
je
add
push
and
dec
jo
outsb
lods
imul
or
je
fnstenv
xchg
adc
fcmovu
loope
lds
or
roll
dec
or
jle
push
gs
fs
xor
inc
fmull
and
data16
orb
and
inc
push
push
fwait
mov
or
test
inc
nopl
jae
test
or
inc
pop
lea
es
sub
inc
cmc
jo
jno
roll
inc
jb
pop
sbb
add
lea
mov
push
cmp
shll
push
dec
insl
lcall
sar
cwtl
shlb
add
inc
or
arpl
add
pushf
ret
cmp
dec
inc
or
dec
jae
imul
lock
gs
or
ja
les
sahf
or
mov
xchg
je
add
xchg
syscall
lock
add
decl
lds
add
mov
cli
add
sbb
xor
out
add
cmp
push
fstpt
lock
sub
adc
adc
add
cmp
xor
add
ret
add
aaa
and
in
cmp
adc
add
sbb
cmp
outsl
sbb
add
jne
mov
mov
inc
cmp
dec
add
dec
pop
mov
push
sub
aam
pop
dec
add
out
pushl
mov
lret
add
xchg
outsb
jg
mov
xor
push
mov
push
lock
mov
adc
das
add
mov
add
push
aas
lock
add
inc
mov
jb
inc
loope
lock
outsb
pop
push
mov
add
ds
outsb
outsb
js
cltd
incl
ss
adc
add
sti
fbstp
mov
add
inc
xor
dec
add
jbe
push
repnz
xchg
test
xor
xor
inc
sbb
jecxz
or
fstpt
add
lock
adc
ss
insl
dec
or
cmpl
outsb
mov
inc
inc
dec
jp
lock
dec
divb
adc
mov
add
test
cmp
jmp
in
ss
out
xchg
pusha
mov
lock
adc
mov
pop
ss
mov
testl
ficomps
push
cmp
adc
dec
cmp
cwtl
adc
sbbb
mov
lock
dec
or
scas
inc
out
cmp
cld
frstor
hlt
mov
movsb
xor
outsb
jnp
imul
lock
push
inc
jbe
pop
push
jp
lock
dec
sbb
pop
addl
aaa
pop
pop
push
sti
dec
mov
enter
outsb
lret
cmp
mov
mov
or
test
lret
xchg
out
fst
add
mov
jge
push
inc
push
decb
and
jg
inc
dec
inc
repz
lock
test
movsb
sahf
push
jg
sbb
jle
xor
mov
mov
lock
lahf
mov
pop
sbb
pop
xchg
jge
sbb
out
adc
mov
cmp
in
push
add
adc
mov
insb
xor
out
imull
push
sbb
sbb
sbb
or
jnp
in
jmp
fcom
outsb
xlat
add
add
xor
lock
sbb
dec
add
jmp
xor
ss
mov
scas
adc
fildl
test
jno
shll
lock
imulb
repz
inc
loope
push
add
lcall
sbb
or
aam
cmp
outsb
push
rclb
fildl
jae
daa
inc
mov
lock
jmp
fstl
pop
dec
dec
sbb
lcall
fcomip
or
xor
or
or
adc
pop
or
or
or
push
xchg
push
push
push
test
cmovl
xor
inc
or
adc
or
dec
inc
jecxz
cmp
sbb
aas
push
adc
xor
data16
in
jg
and
push
adc
add
inc
or
in
call
pop
sbb
adc
sbb
sbb
lock
add
adc
or
inc
adc
or
jg
ficoml
adc
sub
xor
call
or
adc
and
and
mov
pop
adc
or
imul
lods
insl
sub
add
push
outsl
mov
adc
call
and
push
movups
cmpsl
inc
cmp
ret
sbb
scas
add
sub
mov
pop
add
dec
push
add
or
pop
push
sbb
sti
or
push
or
jecxz
xor
or
dec
lods
popa
sti
incl
push
push
sbb
adc
or
fimuls
mov
outsl
xchg
inc
cmpsb
lock
add
adc
test
imul
adc
sbb
adc
or
pop
sub
sbb
dec
pop
mov
decl
push
sbb
xor
jg
adc
adc
adc
sbb
fwait
xchg
add
fdivrl
lock
add
add
dec
or
and
adc
enter
rolb
dec
add
dec
loopne
add
int3
daa
lret
in
add
inc
add
es
lods
fldenv
push
add
add
pop
adc
mov
jle
movsb
push
inc
subl
and
push
or
js
stc
sub
addb
enter
add
push
fdivs
int3
popa
pop
nop
pop
je
jl
jmp
inc
fwait
mov
and
jb
push
in
cmpsl
popa
nop
or
add
rcr
int
cs
sbb
jo
aas
and
jb,pn
jb
add
jmp
dec
or
aaa
inc
and
or
decl
rorl
pop
inc
sbb
add
lods
add
lock
xchg
les
add
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
